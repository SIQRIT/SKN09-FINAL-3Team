{"patent_id": "10-2020-0103438", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0094446", "출원번호": "10-2020-0103438", "발명의 명칭": "신규 커맨드 입력 방식을 지원하는 메모리 장치 및 그것의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "권영천"}}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "로우 커맨드를 수신하기 위한 로우 핀들 및 상기 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들을포함하는 메모리 장치의 동작 방법에 있어서,클럭 신호의 1.5-싸이클 동안 상기 로우 핀들을 통해 특정 메모리 뱅크에 대응하는 제1 액티브 커맨드를 수신하는 단계;상기 제1 액티브 커맨드를 수신한 이후, 상기 클럭 신호의 1-싸이클 동안 상기 컬럼 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제1 읽기 커맨드 또는 제1 쓰기 커맨드를 수신하는 단계;상기 제1 읽기 커맨드 또는 상기 제1 쓰기 커맨드를 수신한 이후, 상기 클럭 신호의 상승 에지에 대응하는 상기클럭 신호의 0.5-싸이클 동안 상기 로우 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제1 프리차지 커맨드를수신하는 단계;상기 제1 프리차지 커맨드를 수신한 이후, 상기 클럭 신호의 1.5-싸이클 동안 상기 로우 핀들을 통해 상기 특정메모리 뱅크에 대응하는 제2 액티브 커맨드를 수신하는 단계;상기 제2 액티브 커맨드를 수신한 이후, 상기 클럭 신호의 1-싸이클 동안 상기 컬럼 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제2 읽기 커맨드 또는 제2 쓰기 커맨드를 수신하는 단계; 및상기 제2 읽기 커맨드 또는 상기 제2 쓰기 커맨드를 수신한 이후, 상기 클럭 신호의 하강 에지에 대응하는 상기클럭 신호의 0.5-싸이클 동안 상기 로우 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제2 프리차지 커맨드를수신하는 단계를 포함하는 동작 방법."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 제1 및 제2 액티브 커맨드들 각각은 상기 클럭 신호의 2개의 상승 에지 및 하나의 하강 에지에 대응하는동작 방법."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 제1 액티브 커맨드와 상기 제1 프리차지 커맨드 사이의 제1 최소 시간 간격은 상기 제2 액티브 커맨드와상기 제2 프리차지 커맨드 사이의 제2 최소 시간 간격과 서로 다른 동작 방법."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 제1 최소 시간 간격은 상기 제2 최소 시간 간격보다 상기 클럭 신호의 0.5-싸이클만큼 큰 동작 방법."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 로우 핀들은 10개이고, 상기 컬럼 핀들은 8개인 동작 방법."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "클럭 신호를 수신하기 위한 클럭 핀;로우 커맨드를 수신하기 위한 로우 핀들;공개특허 10-2021-0094446-3-상기 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들; 및상기 로우 핀들을 통해 상기 클럭 신호의 2-싸이클 중 1.5-싸이클 동안 제1 액티브 커맨드를 수신하고, 상기 클럭 신호의 하강 에지에 대응하는 나머지 0.5-싸이클 동안 제1 프리차지 커맨드를 수신하고, 상기 컬럼 핀들을통해 상기 2-싸이클 중 1-싸이클 동안 제1 쓰기 커맨드 또는 제1 읽기 커맨드를 수신하고, 나머지 1-싸이클 동안 제2 쓰기 커맨드 또는 제2 읽기 커맨드를 수신하도록 구성된 인터페이스 회로를 포함하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 제1 액티브 커맨드는 제1 메모리 뱅크에 대응하고, 상기 제1 프리차지 커맨드는 제2 메모리 뱅크에 대응하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 제1 쓰기 커맨드 또는 상기 제1 읽기 커맨드는 상기 제2 메모리 뱅크 또는 제3 메모리 뱅크에 대응하고,상기 제2 쓰기 커맨드 또는 상기 제2 읽기 커맨드는 제4 메모리 뱅크에 대응하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 6 항에 있어서,상기 인터페이스 회로는 상기 로우 핀들을 통해 상기 2-싸이클에 연속되는 상기 클럭 신호의 2.5-싸이클 중1.5-싸이클 동안 제2 액티브 커맨드를 수신하고, 상기 제2 액티브 커맨드를 수신한 이후 상기 2.5-싸이클 중 상기 클럭 신호의 하강 에지에 대응하는 0.5-싸이클 동안 무동작 로우 커맨드(RNOP)를 수신하고, 상기 무동작 로우 커맨드를 수신한 이후 상기 2.5-싸이클 중 상기 클럭 신호의 상승 에지에 대응하는 0.5-싸이클 동안 제2 프리차지 커맨드를 수신하도록 더 구성되는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6 항에 있어서,상기 제1 쓰기 커맨드 또는 상기 제1 읽기 커맨드는 상기 클럭 신호를 기반으로 동작하는 제1 의사(pseudo) 채널에 대응하고, 상기 제2 쓰기 커맨드 또는 상기 제2 읽기 커맨드는 상기 클럭 신호를 기반으로 동작하는 제2의사 채널에 대응하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,상기 인터페이스 회로는 HBM(High Bandwidth Memory) 인터페이스를 기반으로 외부의 호스트 장치와 통신하도록구성된 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 6 항에 있어서,상기 로우 핀들은 10개이고, 상기 컬럼 핀들은 8개인 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "클럭 신호를 수신하기 위한 클럭 핀;로우 커맨드를 수신하기 위한 로우 핀들;상기 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들; 및상기 클럭 신호의 제1 상승 에지 및 제1 하강 에지를 포함하는 제1 구간 동안 상기 로우 핀들을 통해 상기 제1상승 에지에 대응하는 제1 로우 커맨드 및 상기 제1 하강 에지에 대응하는 제2 로우 커맨드를 수신하고, 상기제1 구간 동안 상기 컬럼 핀들을 통해 제1 컬럼 커맨드를 수신하고, 상기 클럭 신호의 제2 상승 에지 및 제2 하공개특허 10-2021-0094446-4-강 에지를 포함하는 제2 구간 동안 상기 로우 핀들을 통해 상기 제2 상승 에지에 대응하는 제3 로우 커맨드 및상기 제2 하강 에지에 대응하는 제4 로우 커맨드를 수신하고, 상기 제2 구간 동안 상기 컬럼 핀들을 통해 제2컬럼 커맨드를 수신하도록 구성된 인터페이스 회로를 포함하고,상기 제2 로우 커맨드 및 상기 제3 로우 커맨드는 동일한 동작을 나타내는 특정 커맨드인 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 제1 로우 커맨드는 액티브 커맨드이고,상기 제2 로우 커맨드 및 상기 제3 로우 커맨드 각각은 프리차지 커맨드이고,상기 제4 로우 커맨드는 무동작 로우 커맨드(RNOP)인 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 제1 로우 커맨드는 상기 클럭 신호의 1.5-싸이클 동안 수신되고,상기 제2 내지 제4 로우 커맨드들 각각은 상기 클럭 신호의 0.5-싸이클 동안 수신되는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항에 있어서,상기 제1 컬럼 커맨드 및 상기 제2 컬럼 커맨드 각각은 상기 클럭 신호의 1-싸이클 동안 수신되는 읽기 커맨드및 쓰기 커맨드 중 하나인 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16 항에 있어서,상기 제1 로우 커맨드는 제1 메모리 뱅크에 대응하고, 상기 제2 로우 커맨드는 제2 메모리 뱅크에 대응하고, 상기 제1 컬럼 커맨드는 제3 메모리 뱅크에 대응하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 13 항에 있어서,상기 클럭 신호의 상승 에지를 기반으로 상기 로우 커맨드가 상기 특정 커맨드인지 여부를 나타내는 제1 디코딩결과를 출력하도록 구성된 제1 특정 커맨드 디코더;상기 클럭 신호의 하강 에지를 기반으로 상기 로우 커맨드가 상기 특정 커맨드인지 여부를 나타내는 제2 디코딩결과를 출력하도록 구성된 제2 특정 커맨드 디코더; 및상기 제1 디코딩 결과 및 상기 제2 디코딩 결과를 비교하여 상기 로우 커맨드가 상기 특정 커맨드인 경우, 상기특정 커맨드에 대응하는 내부 커맨드를 생성하도록 구성된 비교기를 더 포함하는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18 항에 있어서,상기 인터페이스 회로는 외부의 호스트 장치와 통신을 수행하도록 구성된 버퍼 다이에 포함되고,상기 제1 특정 커맨드 디코더, 상기 제2 특정 커맨드 디코더, 및 상기 비교기는 상기 버퍼 다이 상에 적층되며메모리 셀들을 포함하는 코어 다이에 포함되는 메모리 장치."}
{"patent_id": "10-2020-0103438", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 13 항에 있어서,상기 로우 핀들은 10개이고, 상기 컬럼 핀들은 8개인 메모리 장치.공개특허 10-2021-0094446-5-"}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 하나의 실시 예에 따른 로우 커맨드를 수신하기 위한 로우 핀들 및 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들을 포함하는 메모리 장치의 동작 방법은 클럭 신호의 1.5-싸이클 동안 로우 핀들을 통해 특정 메모리 뱅크에 대응하는 제1 액티브 커맨드를 수신하는 단계, 제1 액티브 커맨드를 수신한 이후, 클럭 신호 (뒷면에 계속)"}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 반도체 장치에 관한 것으로써, 좀 더 상세하게는 신규 커맨드 입력 방식을 지원하는 메모리 장치 및 그것의 동작 방법에 관한 것이다."}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "스마트폰, 그래픽 가속기, AI 가속기 등의 전자 장치들은 DRAM(Dynamic Random Access Memory)과 같은 메모리 장치를 이용하여 데이터를 처리한다. 전자 장치들이 처리해야 하는 데이터의 양이 증가함에 따라 고용량 및 고 대역폭의 메모리 장치가 요구되고 있다. 특히, 고속으로 데이터를 처리하기 위해 HBM(High Bandwidth Memory)과 같은 멀티 채널 인터페이스 방식의 와이드 입출력을 제공하는 메모리 장치의 사용이 증가되고 있다. 이러한 메 모리 장치의 사용이 증가됨에 따라 호스트 장치(예를 들어, 메모리 컨트롤러)와 메모리 장치 사이에 효율적인 입출력 인터페이스 방식이 요구되고 있다."}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상술한 기술적 과제를 해결하기 위한 것으로, 호스트 장치로부터 메모리 장치로 커맨드를 효율적으로 전달하기 위한 신규 커맨드 입력 방식을 지원하는 메모리 장치 및 그것의 동작 방법을 제공할 수 있다."}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 하나의 실시 예에 따른 로우 커맨드를 수신하기 위한 로우 핀들 및 상기 로우 커맨드와 다른 컬럼 커 맨드를 수신하기 위한 컬럼 핀들을 포함하는 메모리 장치의 동작 방법은 클럭 신호의 1.5-싸이클 동안 상기 로 우 핀들을 통해 특정 메모리 뱅크에 대응하는 제1 액티브 커맨드를 수신하는 단계, 상기 제1 액티브 커맨드를 수신한 이후, 상기 클럭 신호의 1-싸이클 동안 상기 컬럼 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제1 읽기 커맨드 또는 제1 쓰기 커맨드를 수신하는 단계, 상기 제1 읽기 커맨드 또는 상기 제1 쓰기 커맨드를 수신 한 이후, 상기 클럭 신호의 상승 에지에 대응하는 상기 클럭 신호의 0.5-싸이클 동안 상기 로우 핀들을 통해 상 기 특정 메모리 뱅크에 대응하는 제1 프리차지 커맨드를 수신하는 단계, 상기 제1 프리차지 커맨드를 수신한 이 후, 상기 클럭 신호의 1.5-싸이클 동안 상기 로우 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제2 액티브 커맨드를 수신하는 단계, 상기 제2 액티브 커맨드를 수신한 이후, 상기 클럭 신호의 1-싸이클 동안 상기 컬럼 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제2 읽기 커맨드 또는 제2 쓰기 커맨드를 수신하는 단계, 및 상 기 제2 읽기 커맨드 또는 상기 제2 쓰기 커맨드를 수신한 이후, 상기 클럭 신호의 하강 에지에 대응하는 상기 클럭 신호의 0.5-싸이클 동안 상기 로우 핀들을 통해 상기 특정 메모리 뱅크에 대응하는 제2 프리차지 커맨드를 수신하는 단계를 포함한다. 본 발명의 하나의 실시 예에 따른 메모리 장치는 클럭 신호를 수신하기 위한 클럭 핀, 로우 커맨드를 수신하기 위한 로우 핀들, 상기 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들, 및 상기 로우 핀들을 통해 상기 클럭 신호의 2-싸이클 중 1.5-싸이클 동안 제1 액티브 커맨드를 수신하고, 상기 클럭 신호의 하강 에지에 대응하는 나머지 0.5-싸이클 동안 제1 프리차지 커맨드를 수신하고, 상기 컬럼 핀들을 통해 상기 2-싸이클 중 1-싸이클 동안 제1 쓰기 커맨드 또는 제1 읽기 커맨드를 수신하고, 나머지 1-싸이클 동안 제2 쓰기 커맨드 또는 제2 읽기 커맨드를 수신하도록 구성된 인터페이스 회로를 포함한다. 본 발명의 하나의 실시 예에 따른 메모리 장치는 클럭 신호를 수신하기 위한 클럭 핀, 로우 커맨드를 수신하기 위한 로우 핀들, 상기 로우 커맨드와 다른 컬럼 커맨드를 수신하기 위한 컬럼 핀들, 및 상기 클럭 신호의 제1 상승 에지 및 제1 하강 에지를 포함하는 제1 구간 동안 상기 로우 핀들을 통해 상기 제1 상승 에지에 대응하는 제1 로우 커맨드 및 상기 제1 하강 에지에 대응하는 제2 로우 커맨드를 수신하고, 상기 제1 구간 동안 상기 컬 럼 핀들을 통해 제1 컬럼 커맨드를 수신하고, 상기 클럭 신호의 제2 상승 에지 및 제2 하강 에지를 포함하는 제 2 구간 동안 상기 로우 핀들을 통해 상기 제2 상승 에지에 대응하는 제3 로우 커맨드 및 상기 제2 하강 에지에 대응하는 제4 로우 커맨드를 수신하고, 상기 제2 구간 동안 상기 컬럼 핀들을 통해 제2 컬럼 커맨드를 수신하도 록 구성된 인터페이스 회로를 포함하고, 상기 제2 로우 커맨드 및 상기 제3 로우 커맨드는 동일한 동작을 나타 내는 특정 커맨드이다."}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따른 메모리 장치는 로우 핀을 통해 로우 커맨드와 컬럼 핀을 통해 컬럼 커맨드를 병렬적 으로 수신할 수 있고, 클럭 신호의 상승 에지 또는 하강 에지에 대응하는 타이밍에 로우 커맨드 중 특정 커맨드 를 수신할 수 있다. 이에 따라, 메모리 장치는 뱅크 인터리브(interleave), 뱅크 그룹 인터리브, 또는 의사 채 널(pseudo channel) 인터리브 등과 같이 메모리 액세스가 연속적으로 이루어지는 상황에서 커맨드들을 빠르게 수신할 수 있다. 따라서, 메모리 장치의 동작 속도가 향상될 수 있다."}
{"patent_id": "10-2020-0103438", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서, 본 발명의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 용이하게 실시할 수 있을 강도로, 본 발명의 실시 예들이 명확하고 상세하게 기재될 것이다. 도 1은 본 발명의 하나의 실시 예에 따른 메모리 시스템을 나타내는 블록도이다. 도 1을 참조하면, 메모리 시스 템은 메모리 컨트롤러 및 메모리 장치를 포함할 수 있다. 메모리 컨트롤러는 메모리 장치 의 전반적인 동작을 제어할 수 있다. 예를 들어, 메모리 컨트롤러는 메모리 장치로부터 데이터 가 출력되거나 또는 메모리 장치에 데이터가 저장되도록 메모리 장치를 제어할 수 있다. 예를 들어, 메모리 컨트롤러는 시스템-온-칩(SoC)의 일부로서 구현될 수 있으나, 이에 한정되지 않는다. 메모리 컨트롤러는 호스트 인터페이스 회로 및 클럭 핀(CK_P'), 로우 핀(R_P'), 컬럼 핀(C_P'), 및 데이터 핀(D_P')을 포함할 수 있다. 호스트 인터페이스 회로는 클럭 핀(CK_P')을 통해 클럭 신호(CK)를 메모리 장치로 전송할 수 있다. 클럭 신호(CK)는 주기적으로 하이(high) 레벨 및 로우(low) 레벨 사이에서 토글하는 신호일 수 있다. 예를 들어, 클럭 신호(CK)는 차동 쌍 중 하나인 차동 신호일 수 있다. 호스트 인터페이스 회로는 로우 핀(R_P')을 통해 로우 커맨드(CMD_r) 및/또는 로우 어드레스(ADD_r)(이하, 로우 커맨드/로우 어드레스(CMD_r/ADD_r)라 칭함)를 메모리 장치로 전송할 수 있다. 예를 들어, 로우 커맨 드(CMD_r)는 액티브 커맨드(ACT) 및 프리차지 커맨드(PRE)를 포함할 수 있다. 예를 들어, 로우 어드레스(ADD_ r)는 로우 커맨드(CMD_r)에 대응하는 뱅크 어드레스를 포함할 수 있다. 호스트 인터페이스 회로는 클럭 신 호(CK)의 토글 타이밍들에 기초하여 로우 커맨드(CMD_r)/로우 어드레스(ADD_r)를 메모리 장치로 전송할 수 있다. 호스트 인터페이스 회로는 컬럼 핀(C_P')을 통해 컬럼 커맨드(CMD_c) 및/또는 컬럼 어드레스(ADD_c)(이하, 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)라 칭함)를 메모리 장치로 전송할 수 있다. 예를 들어, 컬럼 커맨 드(CMD_c)는 읽기 커맨드(RD) 및 쓰기 커맨드(WR)를 포함할 수 있다. 즉, 로우 커맨드(CMD_r)와 컬럼 커맨드 (CMD_c)는 서로 다른 커맨드들을 포함할 수 있다. 예를 들어, 컬럼 어드레스(ADD_c)는 컬럼 커맨드(CMD_c)에 대 응하는 뱅크 어드레스를 포함할 수 있다. 호스트 인터페이스 회로는 클럭 신호(CK)의 토글 타이밍들에 기 초하여 컬럼 커맨드(CMD_c)/컬럼 어드레스(ADD_c)를 메모리 장치로 전송할 수 있다. 호스트 인터페이스 회로는 데이터 핀(D_P')을 통해 데이터(DATA)를 메모리 장치로 전송할 수 있다. 호스트 인터페이스 회로는 별도의 데이터 클럭 신호(예를 들어, 쓰기 데이터 스트로브 신호(WDQS))의 토글 타이밍들에 기초하여 데이터(DATA)를 메모리 장치로 전송할 수 있다. 호스트 인터페이스 회로는 데이 터 핀(D_P')을 통해 메모리 장치로부터 데이터(DATA)를 수신할 수 있다. 메모리 장치는 메모리 컨트롤러의 제어에 따라 동작할 수 있다. 예를 들어, 메모리 장치는 메모 리 컨트롤러의 제어에 따라 저장된 데이터를 출력하거나, 또는 메모리 컨트롤러로부터 수신된 데이터 를 저장할 수 있다. 메모리 장치는 메모리 인터페이스 회로 및 메모리 뱅크 어레이를 포함할 수 있다. 메모리 장치 는 메모리 컨트롤러의 클럭 핀(CK_P'), 로우 핀(R_P'), 컬럼 핀(C_P'), 및 데이터 핀(D_P')에 대응 하여 클럭 핀(CK_P), 로우 핀(R_P), 컬럼 핀(C_P), 및 데이터 핀(D_P)을 더 포함할 수 있다. 메모리 인터페이스 회로는 메모리 컨트롤러로부터 클럭 핀(CK_P)을 통해 클럭 신호(CK)를 수신할 수 있다. 메모리 인터페이스 회로는 메모리 컨트롤러로부터 로우 핀(R_P)을 통해 로우 커맨드/로우 어드레스 (CMD_r/ADD_r)를 수신할 수 있다. 예를 들어, 메모리 인터페이스 회로는 클럭 신호(CK)의 토글 타이밍들을 기반으로 로우 커맨드/로우 어드레스(CMD_r/ADD_r)를 샘플링할 수 있다. 예시적인 실시 예에서, 로우 커맨드/로 우 어드레스(CMD_r/ADD_r)는 복수의 신호 라인들을 통해 메모리 장치로 전송될 수 있다. 이 경우, 로우 핀 (R_P)은 복수의 신호 라인들에 대응하는 복수의 핀들을 포함할 수 있다. 예를 들어, 로우 핀(R_P)은 10개의 핀 들을 포함할 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 메모리 인터페이스 회로는 메모리 컨트롤러로부터 컬럼 핀(C_P)을 통해 컬럼 커맨드/컬럼 어드레스 (CMD_c/ADD_c)를 수신할 수 있다. 예를 들어, 메모리 인터페이스 회로는 클럭 신호(CK)의 토글 타이밍들을 기반으로 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 샘플링할 수 있다. 예시적인 실시 예에서, 컬럼 커맨드/컬 럼 어드레스(CMD_c/ADD_c)는 복수의 신호 라인들을 통해 메모리 장치로 전송될 수 있다. 이 경우, 컬럼 핀 (C_P)은 복수의 신호 라인들에 대응하는 복수의 핀들을 포함할 수 있다. 예를 들어, 컬럼 핀(C_P)은 8개의 핀들 을 포함할 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 메모리 인터페이스 회로는 메모리 컨트롤러로부터 데이터 핀(D_P)을 통해 데이터(DATA)를 수신할 수 있다. 메모리 인터페이스 회로는 별도의 데이터 클럭 신호(예를 들어, 쓰기 데이터 스트로브 신호(WDQS)) 의 토글 타이밍들에 기초하여 데이터(DATA)를 샘플링할 수 있다. 메모리 인터페이스 회로는 데이터 핀 (D_P)을 통해 메모리 컨트롤러로 데이터(DATA)를 전송할 수 있다. 예를 들어, 메모리 인터페이스 회로 는 별도의 데이터 클럭 신호(예를 들어, 쓰기 데이터 스트로브 신호(WDQS))의 토글 타이밍들에 기초하여 메모리 컨트롤러로 데이터(DATA)를 전송할 수 있다. 예시적인 실시 예에서, 데이터(DATA)는 복수의 신호 라인들을 통해 메모리 장치로 수신되거나, 메모리 장치로부터 전송될 수 있다. 이 경우, 데이터 핀 (D_P)은 복수의 신호 라인들에 대응하는 복수의 핀들을 포함할 수 있다. 예를 들어, 데이터 핀(D_P)은 64개 또 는 128개의 핀들을 포함할 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 메모리 인터페이스 회로는 메모리 컨트롤러로부터 수신된 커맨드들(CMD_r, CMD_c) 및 어드레스들 (ADD_r, ADD_c)을 기반으로 제어 신호(iCTRL)를 생성하고, 제어 신호(iCTRL)를 기반으로 메모리 뱅크 어레이 의 메모리 뱅크들 각각의 동작을 제어할 수 있다. 메모리 뱅크 어레이는 하나 이상의 메모리 뱅크를 포함할 수 있다. 메모리 뱅크는 워드 라인들 및 비트 라 인들에 연결되는 복수의 메모리 셀들을 포함할 수 있다. 예를 들어, 복수의 메모리 셀들 각각은 DRAM(Dynamic Random Access Memory) 셀일 수 있다. 이 경우, 호스트 인터페이스 회로 및 메모리 인터페이스 회로(21 0)는 DDR(Double Data Rate), LPDDR(low power double data rate), GDDR(Graphics Double Data Rate), Wide I/O, HBM(High Bandwidth Memory), HMC(Hybrid Memory Cube)와 같은 표준들 중 하나에 기반하여 입출력 신호들 을 통신할 수 있다. 그러나, 본 발명의 범위가 이에 한정되는 것은 아니며, 메모리 셀들은 SRAM(Static RAM), PRAM(Phase-change RAM), MRAM(Magnetic RAM), RRAM(Resistive RAM), FRAM (Ferroelectric RAM) 등과 같은 다 양한 메모리 셀들 중 적어도 하나일 수 있다. 메모리 뱅크 어레이의 메모리 뱅크들 각각은 제어 신호(iCTRL)에 응답하여 메모리 셀들에 데이터(DATA)를 기입하거나, 메모리 셀들로부터 데이터(DATA)를 독출할 수 있다. 예시적인 실시 예에서, 호스트 인터페이스 회로는 로우 커맨드(CMD_r) 중 특정 커맨드(예를 들어, 프리차 지 커맨드(PRE))를 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 전송할 수 있다. 즉, 호스트 인터페이스 회 로는 특정 커맨드를 클럭 신호(CK)의 상승 에지에 대응하는 타이밍에 전송하기 시작하거나, 또는 특정 커 맨드를 클럭 신호(CK)의 하강 에지에 대응하는 타이밍에 전송하기 시작할 수 있다. 예를 들어, 호스트 인터페이 스 회로는 제1 시간 구간에서 클럭 신호(CK)의 상승 에지에 대응하는 타이밍에 특정 커맨드를 전송하고, 제2 시간 구간에서 클럭 신호(CK)의 하강 에지에 대응하는 타이밍에 특정 커맨드를 전송할 수 있다. 호스트 인 터페이스 회로는 로우 커맨드(CMD_r) 중 특정 커맨드를 제외한 나머지 커맨드 및 컬럼 커맨드(CMD_c)를 클 럭 신호(CK)의 상승 에지에서 전송할 수 있다. 즉, 호스트 인터페이스 회로는 로우 커맨드(CMD_r) 중 나머 지 커맨드 및 컬럼 커맨드(CMD_c)를 클럭 신호(CK)의 상승 에지에 대응하는 타이밍에 전송하기 시작할 수 있다. 예시적인 실시 예에서, 메모리 인터페이스 회로는 메모리 컨트롤러로부터 특정 커맨드가 어느 타이밍 에 전송되더라도 특정 커맨드를 감지할 수 있도록 구성될 수 있다. 즉, 특정 커맨드가 클럭 신호(CK)의 상승 에 지에 대응하는 타이밍에 수신되거나 클럭 신호(CK)의 하강 에지에 대응하는 타이밍에 수신되더라도, 메모리 인 터페이스 회로는 특정 커맨드를 감지할 수 있다. 예를 들어, 메모리 인터페이스 회로는 로우 커맨드 (CMD_r)를 디코딩하여 2개의 타이밍들 각각에서 전송되는 특정 커맨드를 감지할 수 있다. 이하에서는, 설명의 편의를 위해, 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 특정 커맨드가 전송되거나 수 신되는 표현은 클럭 신호(CK)의 상승 에지에 대응하는 타이밍 또는 클럭 신호(CK)의 하강 에지에 대응하는 타이 밍에 특정 커맨드가 전송되거나 수신되기 시작하는 것을 의미할 수 있다. 도 2는 도 1의 메모리 장치의 예시적인 블록도이다. 도 2를 참조하면, 메모리 장치는 메모리 뱅크 어레이 , 제어 로직 회로, 및 입출력 회로를 포함할 수 있다. 메모리 뱅크 어레이는 복수의 메모 리 뱅크들(220a~220n)을 포함하고, 메모리 뱅크들(220a~220n) 각각은 메모리 셀 어레이, 로우 디코더 , 컬럼 디코더, 및 감지 증폭기/쓰기 드라이버를 포함할 수 있다. 제어 로직 회로 및 입출 력 회로는 도 1의 메모리 인터페이스 회로에 포함될 수 있으나, 본 발명이 이에 한정되는 것은 아니 며, 제어 로직 회로 및 입출력 회로는 별도의 회로로 존재할 수 있다. 예시적인 실시 예에서, 메모리 뱅크들(220a~220n)은 복수의 뱅크 그룹들로 나뉘어질 수 있다. 예를 들어, 뱅크 그룹 각각은 4개의 메모리 뱅크들을 포함할 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 메모리 뱅크들 (220a~220n)이 뱅크 그룹들로 나뉘어지는 경우, 동일한 뱅크 그룹 내에서의 타이밍 파라미터들과 뱅크 그룹들 사이의 타이밍 파라미터들은 서로 다르게 설정될 수 있다. 메모리 셀 어레이는 복수의 메모리 셀들을 포함할 수 있다. 복수의 메모리 셀들은 워드라인들(WL) 및 비트 라인들(BL)이 교차하는 지점에 형성될 수 있다. 로우 디코더는 워드라인들(WL)을 통해 메모리 셀 어레이와 연결될 수 있다. 로우 디코더는 제어 로직 회로의 제어에 응답하여 워드라인들(WL)의 전압을 제어할 수 있다. 컬럼 디코더는 비트라인들(BL)을 통해 메모리 셀 어레이와 연결될 수 있다. 컬럼 디코더는 제어 로직 회로의 제어에 응답하여 비트라인들(BL) 중 적어도 하나의 비트라인을 선택할 수 있다. 감지 증폭기/ 쓰기 드라이버는 컬럼 디코더에 의해 선택된 비트라인의 전압 또는 전류를 감지하거나 제어할 수 있다. 제어 로직 회로는 외부 장치(예를 들어, 도 1의 메모리 컨트롤러)로부터 로우 커맨드/로우 어드레스 (CMD_r/ADD_r) 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 제어 로직 회로는 수신된 로우 커맨드/로우 어드레스(CMD_r/ADD_r) 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 디코딩할 수 있다. 예 시적인 실시 예에서, 제어 로직 회로는 로우 커맨드 디코더를 통해 로우 커맨드(CMD_r)를 디코딩하고, 컬 럼 커맨드 디코더를 통해 컬럼 커맨드(CMD_c)를 디코딩할 수 있다. 예를 들어, 제어 로직 회로는 로우 커 맨드(CMD_r)를 디코딩하여 액티브 커맨드(ACT) 또는 프리차지 커맨드(PRE)를 감지할 수 있다. 제어 로직 회로 는 컬럼 커맨드(CMD_c)를 디코딩하여 쓰기 커맨드(WR) 또는 읽기 커맨드(RD)를 감지할 수 있다. 제어 로직 회로는 디코딩 결과에 기초하여 메모리 뱅크들(220a~220n) 각각을 제어하기 위한 제어 신호들을 생성할 수 있다. 예를 들어, 액티브 커맨드(ACT)가 감지되는 경우, 제어 로직 회로는 특정 메모리 뱅크의 워드라인을 활성화하기 위한 제어 신호를 생성할 수 있다. 이 경우, 액티브 커맨드(ACT)에 대응하는 로우 어드 레스(ADD_r)에 따라 특정 메모리 뱅크의 특정 워드라인이 활성화될 수 있다. 예를 들어, 프리차지 커맨드(PRE) 가 감지되는 경우, 제어 로직 회로는 적어도 하나의 메모리 뱅크를 프리차지하기 위한 제어 신호를 생성할 수 있다. 이 경우, 프리차지 커맨드(PRE)에 대응하는 로우 어드레스(ADD_r)에 따라 특정 메모리 뱅크가 프리차 지되거나, 또는 모든 메모리 뱅크들이 프리차지될 수 있다. 예를 들어, 쓰기 커맨드(WR) 또는 읽기 커맨드(RD) 가 감지되는 경우, 제어 로직 회로는 특정 메모리 뱅크에 데이터(DATA)를 기입하거나, 또는 특정 메모리 뱅크로부터 데이터(DATA)가 독출되도록 제어 신호를 생성할 수 있다. 이 경우, 쓰기 커맨드(WR) 또는 읽기 커맨 드(RD)에 대응하는 컬럼 어드레스(ADD_c)에 따라 컬럼 어드레스(ADD_c)에 대응하는 메모리 셀에 데이터(DATA)가 기입되거나, 또는 컬럼 어드레스(ADD_c)에 대응하는 메모리 셀로부터 데이터(DATA)가 독출될 수 있다. 예시적인 실시 예에서, 제어 로직 회로는 로우 커맨드(CMD_r) 중 클럭 신호(CK)의 상승 에지 또는 하강 에 지에서 수신되는 특정 커맨드(예를 들어, 프리차지 커맨드(PRE))를 디코딩하기 위한 특정 커맨드 디코딩 회로를 포함할 수 있다. 즉, 제어 로직 회로는 특정 커맨드를 가리키는 로우 커맨드(CMD_r)가 어느 타이밍에 수신 되더라도 특정 커맨드를 감지할 수 있다. 입출력 회로는 복수의 데이터 라인들을 통해 외부 장치(예를 들어, 메모리 컨트롤러)와 데이터(DAT A)를 송수신할 수 있다. 입출력 회로는 메모리 뱅크들(220a~220n)로부터의 읽기 데이터 및 외부 장치로부 터 제공되는 쓰기 데이터를 일시적으로 저장하기 위한 입출력 버퍼를 포함할 수 있다. 도 3a 내지 도 3c는 본 발명의 실시 예들에 따라 도 1의 메모리 장치가 커맨드들을 수신하는 타이밍도의 예시들 을 보여준다. 구체적으로, 도 3a는 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 상승 에지에서 수신되는 타이밍 도를 보여주고, 도 3b는 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 하강 에지에서 수신되는 타이밍도를 보여준 다. 도 3c는 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 상승 에지 또는 하강 에지에서 수신되는 타이밍도를 보 여준다. 도 3a 내지 도 3c를 참조하면, 2개의 신호 라인들을 통해 차동 쌍으로 클럭 신호들(CK_c, CK_t)이 수신된다. 예 를 들어, 클럭 신호(CK_c)는 도 1의 클럭 신호(CK)에 대응할 수 있다. 로우 커맨드(CMD_r) 및 컬럼 커맨드 (CMD_c)는 클럭 신호들(CK_c, CK_t)의 토글 타이밍들에 기초하여 수신된다. 로우 커맨드(CMD_r)로서 액티브 커 맨드(ACT) 및 프리차지 커맨드(PRE)가 수신되고, 컬럼 커맨드(CMD_c)로서 쓰기 커맨드(WR) 및 읽기 커맨드(RD) 가 수신된다. 액티브 커맨드(ACT)는 클럭 신호(CK_c)의 2개의 상승 에지 및 하나의 하강 에지에 대응하는 1.5- 싸이클 동안 수신되고, 프리차지 커맨드(PRE)는 하나의 상승 에지 또는 하나의 하강 에지에 대응하는 0.5-싸이 클 동안 수신된다. 쓰기 커맨드(WR) 및 읽기 커맨드(RD)는 클럭 신호(CK_c)의 하나의 상승 에지 및 하나의 하강 에지에 대응하는 1-싸이클 동안 수신된다. 실시 예들에 따라, 도 3a 내지 도 3c에 도시된 커맨드들의 종류 및 커맨드들 각각이 수신되는 시간(즉, 싸이클 수)은 다양하게 변경될 수 있다. 도 1 및 도 3a를 참조하면, 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제1 시점(t1)에서 액 티브 커맨드(ACTa)와 쓰기 커맨드(WR)를 수신할 수 있다. 즉, 메모리 장치는 액티브 커맨드(ACTa)와 쓰기 커맨드(WR)를 병렬적으로 수신할 수 있다. 이 경우, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스와 쓰기 커 맨드(WR)에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 액티브 커맨드(ACTa)는 1.5-싸이클 동안 수신되므로, 액티브 커맨드(ACTa)는 제2 시점(t2)까지 수신될 수 있다. 메모리 장치는 제2 시점(t2)에서 읽기 커맨드(RD)를 수신할 수 있다. 즉, 메모리 장치는 액티브 커맨 드(ACTa)와 읽기 커맨드(RD)를 병렬적으로 수신할 수 있다. 이 경우, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스와 읽기 커맨드(RD)에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 도 3a에 도시된 바와 같이, 쓰기 커 맨드(WR)가 수신 완료된 이후에 딜레이 없이 읽기 커맨드(RD)가 수신되는 경우(즉, 쓰기 커맨드(WR)와 읽기 커 맨드(RD) 사이의 시간 간격이 1tCK(즉, 클럭 신호(CK_c)의 1-싸이클)인 경우), 쓰기 커맨드(WR)에 대응하는 뱅 크 어드레스와 읽기 커맨드(RD)에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 예를 들어, 메모리 뱅크들이 복수의 뱅크 그룹들로 나뉘어지는 경우, 쓰기 커맨드(WR)에 대응하는 뱅크 그룹과 읽기 커맨드(RD)에 대응하는 뱅크 그룹은 서로 다를 수 있다. 이에 따라, 액티브 커맨드(ACTa), 쓰기 커맨드(WR), 및 읽기 커맨드(RD) 각각 에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 예를 들어, 액티브 커맨드(ACTa)는 제1 뱅크 어드레스(BA1)에 대응하고, 쓰기 커맨드(WR)는 제2 뱅크 어드레스(BA2)에 대응하고, 읽기 커맨드(RD)는 제3 뱅크 어드레스(BA3) 에 대응할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 하강 에지에 대응하는 제3 시점(t3)에서 특정 동작을 나타내는 로우 커 맨드(CMD_r)를 수신하지 않을 수 있다. 예를 들어, 메모리 장치는 제3 시점(t3)에서 무동작(No operatio n)을 나타내는 무동작 로우 커맨드(예를 들어, 도 12a의 RNOP)를 수신할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제4 시점(t4)에서 프리차지 커맨드(PREb)를 수신 할 수 있다. 즉, 액티브 커맨드(ACTa)가 수신 완료된 이후 프리차지 커맨드(PREb)는 0.5-싸이클의 딜레이를 가 지고 수신될 수 있다. 이 경우, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스와 프리차지 커맨드(PREb)에 대 응하는 뱅크 어드레스는 서로 다를 수 있다. 예를 들어, 프리차지 커맨드(PREb)는 제4 뱅크 어드레스(BA4)에 대 응할 수 있다. 그러나, 본 발명이 이에 한정되는 것은 아니며, 프리차지 커맨드(PREb)는 쓰기 커맨드(WR)에 대 응하는 제2 뱅크 어드레스(BA2) 또는 읽기 커맨드(RD)에 대응하는 제3 뱅크 어드레스(BA3)에 대응할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 하강 에지에 대응하는 제5 시점(t5)에서 특정 동작을 나타내는 로우 커 맨드(CMD_r)를 수신하지 않을 수 있다. 예를 들어, 메모리 장치는 제5 시점(t5)에서 무동작 로우 커맨드 (RNOP)를 수신할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제6 시점(t6)에서 액티 브 커맨드(ACTc)를 수신하고, 액티브 커맨드(ACTc)가 수신 완료된 이후에 클럭 신호(CK_c)의 상승 에지에 대응 하는 제7 시점(t7)에서 프리차지 커맨드(PREd)를 수신할 수 있다. 상술한 바와 같이, 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 상승 에지에서 수신되는 경우, 액티브 커맨드 (ACT)가 수신 완료된 이후에 딜레이를 가지고 프리차지 커맨드(PRE)가 수신될 수 있다. 도 1 및 도 3b를 참조하면, 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제1 시점(t1)에서 액 티브 커맨드(ACTa)와 쓰기 커맨드(WR)를 수신하고, 제2 시점(t2)에서 액티브 커맨드(ACTa)와 읽기 커맨드(RD)를 수신할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 하강 에지에 대응하는 제3 시점(t3)에서 프리차지 커맨드(PREb)를 수신 할 수 있다. 즉, 액티브 커맨드(ACTa)가 수신 완료된 이후 프리차지 커맨드(PREb)는 딜레이 없이 수신될 수 있 다. 이에 따라, 제3 시점(t3)에서 프리차지 커맨드(PREb)와 읽기 커맨드(RD)가 병렬적으로 수신될 수 있다. 이 경우, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스와 쓰기 커맨드(WR)에 대응하는 뱅크 어드레스는 서로 다 를 수 있다. 또한, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스, 프리차지 커맨드(PREb)에 대응하는 뱅크 어 드레스, 및 읽기 커맨드(RD)에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 예를 들어, 액티브 커맨드(ACTa) 는 제1 뱅크 어드레스(BA1)에 대응하고, 쓰기 커맨드(WR)는 제2 뱅크 어드레스(BA2)에 대응하고, 읽기 커맨드 (RD)는 제3 뱅크 어드레스(BA3)에 대응하고, 프리차지 커맨드(PREb)는 제4 뱅크 어드레스(BA4)에 대응할 수 있 다. 그러나 본 발명이 이에 한정되는 것은 아니며, 프리차지 커맨드(PREb)는 쓰기 커맨드(WR)에 대응하는 제2 뱅크 어드레스(BA2)에 대응할 수 있다. 프리차지 커맨드(PREb)가 수신 완료된 이후 메모리 장치는 딜레이 없이 클럭 신호(CK_c)의 상승 에지에 대 응하는 제4 시점(t4)에서 액티브 커맨드(ACTc)를 수신할 수 있다. 액티브 커맨드(ACTc)가 수신 완료된 이후 메 모리 장치는 딜레이 없이 클럭 신호(CK_c)의 하강 에지에 대응하는 제5 시점(t5)에서 프리차지 커맨드 (PREd)를 수신할 수 있다. 상술한 바와 같이, 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 하강 에지에서 수신되는 경우, 액티브 커맨드 (ACT)가 수신 완료된 이후에 딜레이 없이 프리차지 커맨드(PRE)가 수신될 수 있다. 도 1 및 도 3c를 참조하면, 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제1 시점(t1)부터 제2 시점(t2)까지 액티브 커맨드(ACTa)를 수신할 수 있다. 메모리 장치는 제2 시점(t2)부터 제3 시점(t3)까지 쓰기 커맨드(WR)를 수신할 수 있다. 메모리 장치는 클럭 신호(CK_c)의 하강 에지에 대응하는 제3 시점(t3)에서 프리차지 커맨드(PREb)를 수신할 수 있다. 즉, 제2 시점(t2)과 제3 시점(t3)에 대응하는 클럭 신호 (CK_c)의 1-싸이클 동안 액티브 커맨드(ACTa), 프리차지 커맨드(PREb), 및 쓰기 커맨드(WR)가 수신될 수 있다. 이 경우, 액티브 커맨드(ACTa)에 대응하는 뱅크 어드레스, 프리차지 커맨드(PREb)에 대응하는 뱅크 어드레스, 및 쓰기 커맨드(WR)에 대응하는 뱅크 어드레스는 서로 다를 수 있다. 예를 들어, 액티브 커맨드(ACTa)는 제1 뱅 크 어드레스(BA1)에 대응하고, 쓰기 커맨드(WR)는 제2 뱅크 어드레스(BA2)에 대응하고, 프리차지 커맨드(PREb) 는 제3 뱅크 어드레스(BA3)에 대응할 수 있다. 프리차지 커맨드(PREb)가 수신 완료된 이후 메모리 장치는 딜레이 없이 제4 시점(t4)에서 액티브 커맨드 (ACTc)를 수신할 수 있다. 액티브 커맨드(ACTc)가 수신 완료된 이후, 메모리 장치는 클럭 신호(CK_c)의 하 강 에지에 대응하는 제5 시점(t5)에서 무동작 로우 커맨드(RNOP)를 수신하고, 클럭 신호(CK_c)의 상승 에지에 대응하는 제6 시점(t6)에서 프리차지 커맨드(PREd)를 수신할 수 있다. 즉, 액티브 커맨드(ACTc)가 수신 완료된 이후에 0.5-싸이클의 딜레이를 가지고 프리차지 커맨드(PREd)가 수신될 수 있다. 프리차지 커맨드(PREd)가 수신 완료된 이후, 메모리 장치는 클럭 신호(CK_c)의 하강 에지에 대응하는 제7 시점(t7)에서 무동작 로우 커맨 드(RNOP)를 수신할 수 있다. 메모리 장치는 제6 시점(t6)부터 제7 시점(t7)까지 읽기 커맨드(RD)를 수신할 수 있다. 즉, 제6 시점(t6)과 제7 시점(t7)에 대응하는 클럭 신호(CK_c)의 1-싸이클 동안 프리차지 커맨드 (PREd), 무동작 로우 커맨드(RNOP), 및 읽기 커맨드(WR)가 수신될 수 있다. 상술한 바와 같이, 프리차지 커맨드(PRE)가 클럭 신호(CK_c)의 상승 에지 또는 하강 에지에서 수신되는 경우, 액티브 커맨드(ACT)가 수신 완료된 이후에 딜레이 없이 또는 딜레이를 가지고 프리차지 커맨드(PRE)가 수신될 수 있다. 도 3a 내지 도 3c에서는 하나의 메모리 뱅크에 대한 프리차지 커맨드(PRE)가 수신되는 것으로 설명되었으나, 본 발명이 이에 한정되는 것은 아니다. 예를 들어, 메모리 장치는 클럭 신호(CK_c)의 상승 에지 또는 하강 에 지에서 모든 메모리 뱅크들에 대응하는 프리차지 커맨드(PRE)를 수신할 수 있다. 상술한 바와 같이, 클럭 신호(CK_c)의 1.5-싸이클 동안 액티브 커맨드(ACT)가 수신되고, 클럭 신호(CK_c)의 0.5-싸이클 동안 프리차지 커맨드(PRE)가 수신되는 경우, 클럭 신호(CK_c)의 상승 에지 또는 하강 에지에 프리 차지 커맨드(PRE)가 수신될 수 있다. 즉, 메모리 장치는 메모리 컨트롤러로부터 클럭 신호(CK_c)의 상승 에지 및 하강 에지 중 하나의 타이밍에 선택적으로 전송되는 프리차지 커맨드(PRE)를 수신할 수 있다. 상술한 바와 같이, 클럭 신호(CK_c)의 하강 에지에서 프리차지 커맨드(PRE)가 수신되는 경우, 1.5-싸이클 동안 액티브 커맨드(ACT)가 수신 완료된 이후에 딜레이 없이 바로 0.5-싸이클 동안 프리차지 커맨드(PRE)가 수신될 수 있고, 프리차지 커맨드(PRE)가 수신 완료된 이후에 딜레이 없이 바로 액티브 커맨드(ACT)가 수신될 수 있다. 또한, 액티브 커맨드(ACT) 또는 프리차지 커맨드(PRE)가 수신되는 타이밍에 쓰기 커맨드(WR) 또는 읽기 커맨드 (RD)가 병렬적으로 수신될 수 있다. 이에 따라, 뱅크 인터리브, 뱅크 그룹 인터리브 등과 같이 메모리 액세스가 연속적으로 이루어지는 상황에서 복수의 뱅크들에 대응하는 커맨드들이 빠르게 수신될 수 있다. 이에 따라, 메 모리 장치의 동작 속도가 향상될 수 있다. 도 4a 및 도 4b는 본 발명의 실시 예들에 따라 도 1의 메모리 장치가 하나의 메모리 뱅크에 대한 커맨드들을 수 신하는 타이밍도의 예시를 보여준다. 구체적으로, 도 4a는 클럭 신호(CK_c)의 상승 에지에서 프리차지 커맨드 (PRE1)가 수신되는 타이밍도를 보여주고, 도 4b는 클럭 신호(CK_c)의 하강 에지에서 프리차지 커맨드(PRE2)가 수신되는 타이밍도를 보여준다. 도 4a를 참조하면, 메모리 장치는 제1 시점(t1)부터 제2 시점(t2)까지 클럭 신호(CK_c)의 1.5-싸이클 동안 액티브 커맨드(ACT1)를 수신할 수 있다. 메모리 장치는 액티브 커맨드(ACT1)에 따라 제3 시점(t3)에서 읽 기 커맨드(RD1) 또는 쓰기 커맨드(WR1)를 수신할 수 있다. 읽기 커맨드(RD1) 또는 쓰기 커맨드(WR1)가 수신 완 료된 이후에 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제4 시점(t4)에서 0.5-싸이클 동안 프리차지 커맨드(PRE1)를 수신할 수 있다. 이 경우, 액티브 커맨드(ACT1)와 프리차지 커맨드(PRE1) 사이의 최소 시간 간격(tRASa)(즉, 액티브 커맨드(ACT1)가 전송된 이후에 프리차지 커맨드(PRE1)가 전송될 수 있는 최소 시 간 간격)은 클럭 신호(CK_c)의 상승 에지에 대응하는 제2 시점(t2)과 클럭 신호(CK_c)의 상승 에지에 대응하는 제4 시점(t4) 사이의 시간 구간에 대응할 수 있다. 예를 들어, 최소 시간 간격(tRASa)은 표준에 의해 미리 정해 질 수 있다. 프리차지 커맨드(PRE1)가 수신 완료된 이후에 메모리 장치는 제5 시점(t5)부터 제6 시점(t6)까지 액티브 커맨드(ACTa)를 수신할 수 있다. 이 경우, 프리차지 커맨드(PRE1)와 액티브 커맨드(ACTa) 사이의 최소 시간 간격(tRPa)(즉, 프리차지 커맨드(PRE1)가 전송된 이후에 액티브 커맨드(ACTa)가 전송될 수 있는 최소 시간 간격) 은 클럭 신호(CK_c)의 상승 에지에 대응하는 제4 시점(t4)과 클럭 신호(CK_c)의 상승 에지에 대응하는 제6 시점 (t6) 사이의 시간 구간에 대응할 수 있다. 예를 들어, 최소 시간 간격(tRPa)은 표준에 의해 미리 정해질 수 있 다. 상술한 바와 같이, 동일한 메모리 뱅크에 대하여 2개의 액티브 커맨드들(ACT1, ACTa)이 수신되는 경우, 액티브 커맨드(ACT1)와 액티브 커맨드(ACTa) 사이의 최소 시간 간격(tRCa)(즉, 액티브 커맨드(ACT1)가 전송된 이후에 액티브 커맨드(ACTa)가 전송될 수 있는 최소 시간 간격)은 제2 시점(t2)과 제6 시점(t6) 사이의 시간 구간에 대 응할 수 있다. 예를 들어, 최소 시간 간격(tRCa)은 표준에 의해 미리 정해질 수 있다. 도 4b를 참조하면, 메모리 장치는 제7 시점(t7)부터 제8 시점(t8)까지 클럭 신호(CK_c)의 1.5-싸이클 동안 액티브 커맨드(ACT2)를 수신할 수 있다. 메모리 장치는 액티브 커맨드(ACT2)에 따라 제9 시점(t9)에서 읽 기 커맨드(RD2) 또는 쓰기 커맨드(WR2)를 수신할 수 있다. 읽기 커맨드(RD2) 또는 쓰기 커맨드(WR2)가 수신 완 료된 이후에 메모리 장치는 클럭 신호(CK_c)의 상승 에지에 대응하는 제10 시점(t10)에서 0.5-싸이클 동안 프리차지 커맨드(PRE2)를 수신할 수 있다. 이 경우, 액티브 커맨드(ACT2)와 프리차지 커맨드(PRE2) 사이의 최소 시간 간격(tRASb)(즉, 액티브 커맨드(ACT2)가 전송된 이후에 프리차지 커맨드(PRE2)가 전송될 수 있는 최소 시 간 간격)은 클럭 신호(CK_c)의 상승 에지에 대응하는 제8 시점(t8)과 클럭 신호(CK_c)의 하강 에지에 대응하는 제10 시점(t10) 사이의 시간 구간에 대응할 수 있다. 예를 들어, 최소 시간 간격(tRASb)은 표준에 의해 미리 정 해질 수 있다. 이 경우, 도 4a의 최소 시간 간격(tRASa)과 도 4b의 최소 시간 간격(tRASb)은 서로 다를 수 있다. 예를 들어, 최소 시간 간격(tRASa)이 최소 시간 간격(tRASb)보다 클럭 신호(CK_c)의 0.5-싸이클만큼 클 수 있다. 프리차지 커맨드(PRE2)가 수신 완료된 이후에 메모리 장치는 제11 시점(t11)부터 제13 시점(t13)까지 액티 브 커맨드(ACTb)를 수신할 수 있다. 이 경우, 프리차지 커맨드(PRE2)와 액티브 커맨드(ACTb) 사이의 최소 시간 간격(tRPb)(즉, 프리차지 커맨드(PRE2)가 전송된 이후에 액티브 커맨드(ACTb)가 전송될 수 있는 최소 시간 간격)은 클럭 신호(CK_c)의 하강 에지에 대응하는 제10 시점(t10)과 클럭 신호(CK_c)의 하강 에지에 대응하는 제12 시점(t12) 사이의 시간 구간에 대응할 수 있다. 예를 들어, 최소 시간 간격(tRPb)은 표준에 의해 미리 정 해질 수 있다. 이 경우, 도 4a의 최소 시간 간격(tRPa)과 도 4b의 최소 시간 간격(tRPb)은 동일할 수 있다. 상술한 바와 같이, 동일한 메모리 뱅크에 대하여 2개의 액티브 커맨드들(ACT2, ACTb)이 수신되는 경우, 액티브 커맨드(ACT2)와 액티브 커맨드(ACTb) 사이의 최소 시간 간격(tRCb)(즉, 액티브 커맨드(ACT2)가 전송된 이후에 액티브 커맨드(ACTb)가 전송될 수 있는 최소 시간 간격)은 제8 시점(t8)과 제13 시점(t13) 사이의 시간 구간에 대응할 수 있다. 예를 들어, 최소 시간 간격(tRCb)은 표준에 의해 미리 정해질 수 있다. 이 경우, 도 4a의 최소 시간 간격(tRCa)과 도 4b의 최소 시간 간격(tRCb)은 동일할 수 있으나, 본 발명은 이에 한정되지 않는다. 도 5는 도 1의 메모리 장치의 예시적인 동작을 보여주는 순서도이다. 구체적으로, 도 5는, 도 4a 및 도 4b를 참 조하여 설명한 바와 같이, 메모리 장치의 하나의 메모리 뱅크에 대한 메모리 액세스 동작을 보여준다. 도 1 및 도 5를 참조하면, S201 단계에서, 메모리 장치는 로우 핀(R_P)을 통해 액티브 커맨드(ACT)를 수신할 수 있다. 이 경우, 메모리 장치는 액티브 커맨드(ACT)와 함께 특정 메모리 뱅크 어드레스를 포함한 로우 어드레스(ADD_r)를 더 수신할 수 있다. 메모리 장치는 액티브 커맨드(ACT)에 응답하여 특정 메모리 뱅크의 특정 워드라인을 활성화할 수 있다. S202 단계에서, 메모리 장치는 컬럼 핀(C_P)을 통해 읽기 커맨드(RD) 또는 쓰기 커맨드(WR)를 수신할 수 있다. 이 경우, 메모리 장치는 읽기 커맨드(RD) 또는 쓰기 커맨드(WR)와 함께 특정 메모리 뱅크 어드레스 를 포함한 컬럼 어드레스(ADD_c)를 더 수신할 수 있다. 메모리 장치는 읽기 커맨드(RD) 또는 쓰기 커맨드 (WR)에 응답하여 특정 메모리 뱅크의 메모리 셀로부터 데이터(DATA)를 독출하거나 특정 메모리 뱅크의 메모리 셀에 데이터(DATA)를 기입할 수 있다. S203 단계에서, 메모리 장치는 로우 핀(R_P)을 통해 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 프리 차지 커맨드(PRE)를 수신할 수 있다. 예를 들어, 도 3a 내지 도 4b에 도시된 바와 같이, 프리차지 커맨드(PRE) 가 클럭 신호(CK)의 0.5-싸이클 동안 수신되는 경우, 메모리 장치는 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 프리차지 커맨드(PRE)의 수신을 완료할 수 있다. 예를 들어, 프리차지 커맨드(PRE)가 0.5-싸이클을 초 과하는 클럭 신호(CK)의 싸이클 동안 수신되는 경우, 메모리 장치는 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 프리차지 커맨드(PRE)의 수신을 시작할 수 있다. 이 경우, 메모리 장치는 프리차지 커맨드(PRE) 와 함께 특정 메모리 뱅크 어드레스를 포함한 로우 어드레스(ADD_r)를 더 수신할 수 있다. 메모리 장치는프리차지 커맨드(PRE)에 응답하여 특정 메모리 뱅크의 메모리 셀들을 프리차지할 수 있다. 도 6은 도 2의 제어 로직 회로의 예시적인 블록도이다. 도 6을 참조하면, 제어 로직 회로는 로우 커맨드 디코더(230a) 및 컬럼 커맨드 디코더(230b)를 포함할 수 있다. 로우 커맨드 디코더(230a)는 클럭 핀(CK_P)을 통 해 수신되는 클럭 신호(CK)를 기반으로 로우 핀(R_P)을 통해 수신되는 로우 커맨드(CMD_r)를 디코딩할 수 있다. 컬럼 커맨드 디코더(230b)는 클럭 핀(CK_P)을 통해 수신되는 클럭 신호(CK)를 기반으로 컬럼 핀(C_P)을 통해 수 신되는 컬럼 커맨드(CMD_c)를 디코딩할 수 있다. 로우 커맨드 디코더(230a)는 로우 커맨드(CMD_r) 중 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 수신되는 특정 커맨드(예를 들어, 프리차지 커맨드(PRE))를 디코딩할 수 있다. 로우 커맨드 디코더(230a)는 특정 커맨드 를 디코딩하기 위해 제1 특정 커맨드 디코더, 제2 특정 커맨드 디코더, 비교기, 및 인버터(23 4)를 포함할 수 있다. 제1 특정 커맨드 디코더는 클럭 신호(CK) 및 로우 커맨드(CMD_r)를 수신하고, 클럭 신호(CK)의 상승 에지 를 기반으로 로우 커맨드(CMD_r)가 특정 커맨드인지 여부를 나타내는 제1 디코딩 결과(DR1)를 출력할 수 있다. 제2 특정 커맨드 디코더는 클럭 신호(CK)가 인버터를 통해 반전된 신호 및 로우 커맨드(CMD_r)를 수 신할 수 있다. 이에 따라, 제2 특정 커맨드 디코더는 클럭 신호(CK)의 하강 에지를 기반으로 로우 커맨드 (CMD_r)가 특정 커맨드인지 여부를 나타내는 제2 디코딩 결과(DR2)를 출력할 수 있다. 도 6에는 클럭 신호(CK) 가 인버터를 통해 제2 특정 커맨드 디코더로 입력되는 것으로 도시되었으나, 본 발명이 이에 한정되 는 것은 아니다. 예를 들어, 도 3a 내지 도 3c를 참조하여 설명한 바와 같이, 클럭 신호(CK)가 차동 쌍으로 이 루어지는 경우, 제1 특정 커맨드 디코더로 클럭 신호(CK_c)가 입력되고, 제2 특정 커맨드 디코더로 클럭 신호(CK_t)가 입력될 수 있다. 비교기는 제1 디코딩 결과(DR1) 및 제2 디코딩 결과(DR2)를 비교하여 내부 커맨드(iCMD)를 생성할 수 있다. 예를 들어, 제1 디코딩 결과(DR1) 또는 제2 디코딩 결과(DR2)가 로우 커맨드(CMD_r)가 특정 커맨드임을 나타내는 경우, 비교기는 특정 커맨드를 가리키는 내부 커맨드(iCMD)를 생성할 수 있다. 이에 따라, 메모 리 장치는 내부 커맨드(iCMD)에 응답하여 대응하는 동작을 수행할 수 있다. 예를 들어, 내부 커맨드(iCM D)가 프리차지 커맨드(PRE)를 가리키는 경우, 메모리 장치는 프리차지 동작을 수행할 수 있다. 상술한 바와 같이, 제어 로직 회로는 특정 커맨드 디코더를 통해 클럭 신호(CK)의 상승 에지에서 수신되는 특정 커맨드를 감지할 수 있고, 클럭 신호(CK)의 하강 에지에서 수신되는 특정 커맨드를 감지할 수 있다. 또한, 도 3a 내지 도 3c를 참조하여 설명한 바와 같이, 로우 커맨드(CMD_r)와 컬럼 커맨드(CMD_c)가 병렬적으로 수신 되더라도, 제어 로직 회로는 로우 커맨드 디코더(230a) 및 컬럼 커맨드 디코더(230b)를 통해 로우 커맨드 (CMD_r)와 컬럼 커맨드(CMD_c)를 병렬적으로 디코딩할 수 있다. 도 7은 본 발명의 실시 예들에 따른 적층형 메모리 장치를 보여주는 블록도이다. 도 7을 참조하면, 적층형 메모 리 장치는 도 1의 메모리 장치에 대응할 수 있다. 적층형 메모리 장치는 버퍼 다이 및 복 수의 코어 다이들(320~350)을 포함할 수 있다. 예를 들어, 버퍼 다이는 인터페이스 다이, 베이스 다이, 로 직 다이, 마스터 다이 등으로도 지칭될 수 있고, 코어 다이들(320~350) 각각은 메모리 다이, 슬레이브 다이 등 으로도 지칭될 수 있다. 도 7에서는 적층형 메모리 장치에 4개의 코어 다이들(320~350)이 포함되는 것으로 도시되었으나, 코어 다이들의 개수는 다양하게 변경될 수 있다. 예를 들어, 적층형 메모리 장치는 8개, 12 개 또는 16개 코어 다이들을 포함할 수 있다. 버퍼 다이 및 코어 다이들(320~350)은 실리콘 관통 전극들(TSV; Through Silicon Via)을 통해 적층되고, 전기적으로 연결될 수 있다. 이에 따라, 적층형 메모리 장치는 다수의 다이들(310~350)이 적층되는 3차원 메모리 구조를 가질 수 있다. 예를 들어, 적층형 메모리 장치는 HBM(High Bandwidth Memory) 또는 HMC(Hybrid Memory Cube) 표준을 기반으로 구현될 수 있다. 적층형 메모리 장치는 기능적으로 독립된 복수의 채널들(또는, 볼트(vault)들)을 지원할 수 있다. 예를 들 어, 도 7에 도시된 바와 같이, 적층형 메모리 장치는 16개 채널들(CH0~CH15)을 지원할 수 있다. 채널들 (CH0~CH15) 각각이 64개 데이터(DQ) 전달 통로를 지원하는 경우(즉, 채널들(CH0~CH15) 각각에 대응하여 64개 데 이터 핀이 존재하는 경우), 16개의 채널들(CH0~CH15)을 포함하는 적층형 메모리 장치는 1024개 데이터 전 달 통로를 지원할 수 있다. 그러나, 본 발명이 이에 한정되는 것은 아니며, 적층형 메모리 장치는 1024개 이상의 데이터 전달 통로를 지원할 수 있으며, 다양한 개수의 채널들(예를 들어, 8개 채널들)을 지원할 수 있다. 예를 들어, 적층형 메모리 장치가 8개 채널들을 지원하고, 채널들 각각이 128개 데이터 전달 통로를지원하는 경우, 적층형 메모리 장치는 1024개 데이터 전달 통로를 지원할 수 있다. 코어 다이들(320~350) 각각은 적어도 하나의 채널을 지원할 수 있다. 예를 들어, 도 7에 도시된 바와 같이, 코 어 다이들(320~350) 각각은 4 채널(CH0-CH3, CH4-CH7, CH8-CH11, CH12-CH15)을 지원할 수 있다. 이 경우, 코어 다이들(320~350)은 서로 다른 채널들을 지원할 수 있다. 그러나, 본 발명이 이에 한정되는 것은 아니며, 코어 다이들 중 적어도 2개는 동일한 채널을 지원할 수 있다. 예를 들어, 적층형 메모리 장치가 8개의 코어 다 이들을 포함하는 경우, 하나의 스택(stack)을 구성하는 4개의 코어 다이들 중 하나와 다른 스택을 구성하는 4개 의 코어 다이들 중 하나는 동일한 채널을 지원할 수 있다. 이 경우, 동일한 채널을 지원하는 코어 다이들은 스 택 아이디(SID)로 구분될 수 있다. 채널들 각각은 독립적인 커맨드 및 데이터 인터페이스를 구성할 수 있다. 예를 들어, 각 채널은 독립적인 타이 밍 요구 조건에 기초하여 독립적으로 클록킹(independently clocked)될 수 있고, 서로 동기화되지 않을 수 있다. 채널들 각각은 복수의 메모리 뱅크들을 포함할 수 있다. 예를 들어, 하나의 채널에 포함된 메모리 뱅크들 은 도 1의 메모리 뱅크 어레이에 대응할 수 있다. 메모리 뱅크들 각각은 워드라인들 및 비트라 인들에 연결되는 메모리 셀들, 로우 디코더, 컬럼 디코더, 센스 앰프 등을 포함할 수 있다. 예를 들어, 채널들 (CH0~CH15) 각각은 32개의 메모리 뱅크들을 포함할 수 있다. 그러나, 본 발명이 이에 한정되지 않으며, 채 널들(CH0~CH15) 각각은 8개 이상의 메모리 뱅크들을 포함할 수 있다. 도 7에는 하나의 채널에 포함되는 메 모리 뱅크들이 하나의 코어 다이에 포함되는 것으로 도시되어 있으나, 하나의 채널에 포함되는 메모리 뱅 크들은 복수의 코어 다이들에 분산될 수 있다. 예를 들어, 코어 다이들 중 2개의 코어 다이들이 제1 채널 (CH0)을 지원하는 경우, 제1 채널(CH0)에 포함되는 메모리 뱅크들은 2개의 코어 다이들에 분산될 수 있다. 예시적인 실시 예에서, 하나의 채널에 포함된 메모리 뱅크들은 복수의 뱅크 그룹으로 나뉘어질 수 있다. 예를 들어, 뱅크 그룹들 각각은 4개의 메모리 뱅크를 포함할 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 예시적인 실시 예에서, 하나의 채널은 독립적으로 동작하는 2개의 의사 채널(Pseudo Channel)들로 나뉘어질 수 있다. 예를 들어, 의사 채널들은 채널의 커맨드 및 클록 입력들(예를 들어, 클록 신호(CK) 및/또는 클록 인에이 블 신호(CKE))을 공유할 수 있으나, 커맨드들을 독립적으로 디코딩하고 실행할 수 있다. 예를 들어, 하나의 채 널이 64개 데이터 전달 통로를 지원하는 경우, 의사 채널들 각각은 32개 데이터 전달 통로를 지원할 수 있다. 예를 들어, 하나의 채널이 32개의 메모리 뱅크들을 포함하는 경우, 의사 채널들 각각은 16개의 메모리 뱅 크들을 포함할 수 있다. 버퍼 다이 및 코어 다이들(320~350)은 TSV영역을 포함할 수 있다. TSV영역에는 다이들 (310~350)을 관통하도록 구성된 TSV들이 배치될 수 있다. 버퍼 다이는 TSV들을 통해 코어 다이들(320~35 0)과 다양한 신호들을 송수신할 수 있다. 코어 다이들(320~350) 각각은 TSV들을 통해 버퍼 다이 및 다른 코어 다이와 신호들을 송수신할 수 있다. 이 경우, 신호들은 채널 별로 대응하는 TSV들을 통해 독립적으로 송수 신될 수 있다. 예를 들어, 외부의 호스트 장치(예를 들어, 도 1의 메모리 컨트롤러)가 제1 채널(CH0)의 메 모리 셀에 데이터를 저장하기 위해 제1 채널(CH0)로 데이터 신호를 전송하는 경우, 버퍼 다이는 제1 채널 (CH0)에 대응하는 TSV들을 통해 데이터 신호를 제1 코어 다이로 전송하여 제1 채널(CH0)의 메모리 셀에 데 이터를 저장할 수 있다. 예시적인 실시 예에서, TSV들을 통해 신호들을 전송하기 위해 전원 전압(VDDQL)이 이용될 수 있다. 전원 전압 (VDDQL)은 버퍼 다이의 전반적인 동작을 위해 이용되는 전원 전압(VDDQ)보다 작을 수 있다. 예를 들어, 전 원 전압(VDDQ)은 1.1V일 수 있으며, 전원 전압(VDDQL)은 0.4V일 수 있다. 버퍼 다이는 물리 계층(PHY, 311)을 포함할 수 있다. 물리 계층은 외부의 호스트 장치와의 통신을 위 한 인터페이스 회로들을 포함할 수 있다. 예시적인 실시 예에서, 물리 계층은 채널들(CH0~CH15) 각각에 대 응하는 인터페이스 회로를 포함할 수 있다. 예를 들어, 하나의 채널에 대응하는 인터페이스 회로는 도 1의 메모 리 인터페이스 회로에 대응할 수 있다. 호스트 장치로부터 물리 계층을 통해 수신된 신호들은 TSV들 을 통해 코어 다이들(320~350)로 전달될 수 있다. 예시적인 실시 예에서, 버퍼 다이는 채널들 각각에 대응하는 채널 컨트롤러를 포함할 수 있다. 채널 컨트 롤러는 대응하는 채널의 메모리 참조 동작들을 관리할 수 있고, 대응하는 채널의 타이밍 요구 조건을 결정할 수 있다. 예시적인 실시 예에서, 버퍼 다이는 외부의 호스트 장치로부터 신호들을 수신하기 위한 복수의 핀들을 포 함할 수 있다. 버퍼 다이는 복수의 핀들을 통해 클럭 신호(CK), 커맨드/어드레스 신호(C/A), 쓰기 데이터 스트로브 신호(WDQS), 및 데이터 신호(DQ)를 수신하고, 읽기 데이터 스트로브 신호(RDQS) 및 데이터 신호(DQ)를 전송할 수 있다. 예를 들어, 버퍼 다이는 채널 별로 클럭 신호(CK)를 수신하기 위한 2개 핀들(예를 들어, 도 1의 클럭 핀(CK_P)), 커맨드/어드레스 신호(C/A)를 수신하기 위한 18개 핀들(예를 들어, 도 1의 로우 핀 (R_P) 및 컬럼 핀(C_P)), 쓰기 데이터 스트로브 신호(WDQS)를 수신하기 위한 4개 핀들, 읽기 데이터 스트로브 신호(RDQS)를 전송하기 위한 4개 핀들, 및 데이터 신호(DQ)를 송수신하기 위한 64개 핀들(예를 들어, 도 1의 데 이터 핀(D_P))을 포함할 수 있다. 예시적인 실시 예에서, 적층형 메모리 장치는 데이터의 에러를 검출하고 정정하기 위한 ECC(Error Correction Code) 회로를 더 포함할 수 있다. 예를 들어, 쓰기 동작에서 ECC 회로는 호스트 장치로부터 전달된 데이터에 대한 패리티(parity) 비트들을 생성할 수 있다. 읽기 동작에서 ECC 회로는 패리티 비트들을 이용하여 코어 다이들(320~350) 중 하나로부터 전달된 데이터의 에러를 검출 및 정정하고, 에러 정정된 데이터를 호스트 장치로 전송할 수 있다. 예시적인 실시 예에서, 적층형 메모리 장치는, 도 1 내지 도 6을 참조하여 설명한 바와 같이, 로우 핀 (R_P)을 통해 로우 커맨드(CMD_r)를 수신하고, 컬럼 핀(C_P)을 통해 컬럼 커맨드(CMD_c)를 수신할 수 있다. 적 층형 메모리 장치는 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 로우 커맨드(CMD_r) 중 특정 커맨드를 수신할 수 있다. 즉, 적층형 메모리 장치는 클럭 신호(CK)의 상승 에지 및 하강 에지 중 하나의 타이밍에 전송되는 로우 커맨드(CMD_r)로부터 특정 커맨드를 감지할 수 있다. 예를 들어, 특정 커맨드는 프리차지 커맨 드(PRE)일 수 있다. 예시적인 실시 예에서, 적층형 메모리 장치는, 도 6에 도시된 바와 같이, 클럭 신호(CK)의 상승 에지에서 로우 커맨드(CMD_r)를 디코딩하여 특정 커맨드를 감지하고, 클럭 신호(CK)의 하강 에지에서 로우 커맨드(CMD_ r)를 디코딩하여 특정 커맨드를 감지하기 위한 특정 커맨드 디코더를 포함할 수 있다. 도 8은 도 7의 적층형 메모리 장치의 예시적인 블록도이다. 도 8을 참조하면, 적층형 메모리 장치는 버퍼 다이 및 코어 다이를 포함할 수 있다. 코어 다이는 복수의 채널들 중 채널(CHa)을 지원할 수 있 다. 버퍼 다이와 코어 다이는 TSV 영역에 위치하는 TSV들(401~404)을 통해 통신할 수 있다. TSV들 (401~404)은 채널(CHa)에 대응하는 TSV 영역에 위치할 수 있다. 예를 들어, 버퍼 다이는 TSV를 통해 코어 다이로 클럭 신호(CK)를 전송하고, TSV를 통해 코어 다이로 로우 커맨드/로우 어드레스 (CMD_r/ADD_r)를 전송하고, TSV를 통해 코어 다이로 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 전 송하고, TSV를 통해 코어 다이와 데이터(DATA)를 송수신할 수 있다. 도 8에는 TSV들(401~404) 각각 이 하나의 TSV로 구현되는 것으로 도시되나, TSV들(401~404) 각각은 다양한 개수의 TSV들로 구현될 수 있다. 버퍼 다이는 채널(CHa)에 대응하는 메모리 인터페이스 회로를 포함할 수 있다. 메모리 인터페이스 회 로는 도 1의 메모리 인터페이스 회로에 대응할 수 있다. 메모리 인터페이스 회로는 채널(CHa)에 대응하는 클럭 핀(CK_P), 로우 핀(R_P), 컬럼 핀(C_P), 및 데이터 핀(D_P)을 통해 채널(CHa)로 전송되는 클럭 신호(CK), 로우 커맨드/로우 어드레스(CMD_r/ADD_r), 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c), 및 데이터 (DATA)를 수신할 수 있다. 메모리 인터페이스 회로는 TSV들(401~404)을 통해 클럭 신호(CK), 로우 커맨드/ 로우 어드레스(CMD_r/ADD_r), 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c), 및 데이터(DATA)를 코어 다이로 전달할 수 있다. 예시적인 실시 예에서, 메모리 인터페이스 회로는 신호 처리를 통해 신호 처리된 클럭 신 호(CK), 로우 커맨드/로우 어드레스(CMD_r/ADD_r), 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c), 및 데이터(DAT A)를 코어 다이로 전달할 수 있다. 메모리 인터페이스 회로는 코어 다이로부터 TSV를 통해 전달된 데이터(DATA)를 외부의 호스트 장치(예를 들어, 도 1의 메모리 컨트롤러)로 전송할 수 있다. 코어 다이는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이를 포함할 수 있다. 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이는 채널(CHa)을 지원하기 위한 회로들일 수 있다. 메모리 셀 어레이는 채널(CHa)에 포함된 메모리 뱅크들 중 하나에 포함될 수 있다. 제 어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이는 도 2의 제어 로직 회로, 입출 력 회로, 및 메모리 셀 어레이에 대응할 수 있다. 이에 따라, 이하에서 중복되는 설명은 생략될 수 있다. 제어 로직 회로는 버퍼 다이로부터 TSV들(401~403)을 통해 전달되는 클럭 신호(CK), 로우 커맨드/로 우 어드레스(CMD_r/ADD_r), 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 제어 로직 회로 는 수신된 로우 커맨드/로우 어드레스(CMD_r/ADD_r) 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 디코딩할 수 있다. 예시적인 실시 예에서, 제어 로직 회로는, 도 6을 참조하여 설명한 바와 같이, 클럭 신호(C K)의 상승 에지에서 수신되는 로우 커맨드(CMD_r)를 디코딩하여 특정 커맨드(예를 들어, 프리차지 커맨드(PR E))를 감지하고, 클럭 신호(CK)의 하강 에지에서 수신되는 로우 커맨드(CMD_r)를 디코딩하여 특정 커맨드를 감 지할 수 있다. 제어 로직 회로는 디코딩 결과를 기반으로 데이터 입출력 회로 및 메모리 셀 어레이 를 제어할 수 있다. 데이터 입출력 회로는 TSV를 통해 버퍼 다이와 데이터(DATA)를 송수신할 수 있다. 쓰기 동작에 서, 데이터 입출력 회로는 버퍼 다이로부터 TSV를 통해 전달되는 데이터(DATA)를 메모리 셀 어 레이로 전송할 수 있다. 이에 따라, 메모리 셀 어레이는 데이터(DATA)를 저장할 수 있다. 읽기 동작 에서, 데이터 입출력 회로는 메모리 셀 어레이로부터 출력된 데이터(DATA)를 TSV를 통해 버퍼 다이로 전송할 수 있다. 도 8에는 코어 다이의 제어 로직 회로를 통해 코어 다이에서 로우 커맨드(CMD_r) 및 컬럼 커맨 드(CMD_c)가 디코딩되는 것으로 도시되었으나, 본 발명이 이에 한정되는 것은 아니다. 예를 들어, 로우 커맨드 (CMD_r) 및 컬럼 커맨드(CMD_c)는 버퍼 다이의 메모리 인터페이스 회로에 포함되는 커맨드 디코더를 통해 디코딩될 수 있다. 도 9는 도 8의 적층형 메모리 장치의 확장 예시를 보여주는 블록도이다. 도 9를 참조하면, 적층형 메모리 장치 (400a)는 버퍼 다이 및 코어 다이(420a)를 포함할 수 있다. 코어 다이(420a)는 제1 의사 채널(PC0) 및 제 2 의사 채널(PC1)로 구분되는 채널(CHa)을 지원할 수 있다. 코어 다이(420a)는 제1 의사 채널(PC0)을 지원하는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이를 포함하고, 제2 의사 채널(PC1)을 지원하는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이를 포함할 수 있다. 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이에 각각 대응하므로 자세한 설명은 생략된다. 제어 로직 회로는 버퍼 다이로부터 TSV들(401~403)을 통해 전달되는 클럭 신호(CK), 로우 커맨드/로 우 어드레스(CMD_r/ADD_r), 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 로우 어드레스 (ADD_r)가 제1 의사 채널(PC0)을 가리키는 경우, 제어 로직 회로는 로우 커맨드(CMD_r)를 디코딩할 수 있 다. 컬럼 어드레스(ADD_c)가 제1 의사 채널(PC0)을 가리키는 경우, 제어 로직 회로는 컬럼 커맨드(CMD_c) 를 디코딩할 수 있다. 즉, 제어 로직 회로는 제1 의사 채널(PC0)에 대응하는 로우 커맨드(CMD_r) 및 컬럼 커맨드(CMD_c)를 디코딩하고, 디코딩 결과에 따라 데이터 입출력 회로 및 메모리 셀 어레이를 제어할 수 있다. 제어 로직 회로는 버퍼 다이로부터 TSV들(401~403)을 통해 전달되는 클럭 신호(CK), 로우 커맨드/로 우 어드레스(CMD_r/ADD_r), 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 로우 어드레스 (ADD_r)가 제2 의사 채널(PC1)을 가리키는 경우, 제어 로직 회로는 로우 커맨드(CMD_r)를 디코딩할 수 있 다. 컬럼 어드레스(ADD_c)가 제2 의사 채널(PC1)을 가리키는 경우, 제어 로직 회로는 컬럼 커맨드(CMD_c) 를 디코딩할 수 있다. 즉, 제어 로직 회로는 제2 의사 채널(PC1)에 대응하는 로우 커맨드(CMD_r) 및 컬럼 커맨드(CMD_c)를 디코딩하고, 디코딩 결과에 따라 데이터 입출력 회로 및 메모리 셀 어레이를 제어할 수 있다. 도 10은 도 8의 적층형 메모리 장치의 확장 예시를 보여주는 블록도이다. 도 10을 참조하면, 적층형 메모리 장 치(400b)는 버퍼 다이, 제1 코어 다이, 및 제2 코어 다이를 포함할 수 있다. 제1 코어 다이 및 제2 코어 다이는 복수의 채널들 중 동일한 채널(CHa)을 지원할 수 있다. 제1 코어 다이는 복수의 코어 다이들로 구성된 하나의 스택에 포함되고, 제2 코어 다이는 복수의 코어 다이들로 구성된 다 른 스택에 포함될 수 있다. 이 경우, 코어 다이들(420, 430)은 스택 아이디(SID)로 구분될 수 있다. 예를 들어, 제1 코어 다이는 제1 스택 아이디(SID0)에 대응하고, 제2 코어 다이는 제2 스택 아이디(SID1)에 대응 할 수 있다. 도 10에는 제1 코어 다이와 제2 코어 다이 사이에 다른 코어 다이가 존재하지 않는 것으 로 도시되었으나, 제1 코어 다이와 제2 코어 다이 사이에는 다른 코어 다이가 위치할 수 있다. 버퍼 다이와 제1 및 제2 코어 다이들(420, 430)은 TSV 영역에 위치하는 TSV들(401~404)을 통해 통신할 수 있다. 예를 들어, 버퍼 다이는 TSV를 통해 제1 및 제2 코어 다이들(420, 430)로 클럭 신호(CK)를 전 송하고, TSV를 통해 제1 및 제2 코어 다이들(420, 430)로 로우 커맨드/로우 어드레스(CMD_r/ADD_r)를 전 송하고, TSV를 통해 제1 및 제2 코어 다이들(420, 430)로 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 전 송하고, TSV를 통해 제1 및 제2 코어 다이들(420, 430)과 데이터(DATA)를 송수신할 수 있다. 도 10에는 버퍼 다이가 동일한 TSV들(401~404)을 이용하여 제1 및 제2 코어 다이들(420, 430)과 통신하는 것으로 도시 되어 있으나, 버퍼 다이는 제1 및 제2 코어 다이들(420, 430) 각각에 대응하는 별도의 TSV들을 이용하여 제1 및 제2 코어 다이들(420, 430)과 통신할 수 있다. 제1 코어 다이는 채널(CHa)을 지원하는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어 레이를 포함하고, 제2 코어 다이는 채널(CHa)을 지원하는 제어 로직 회로, 데이터 입출력 회로 , 및 메모리 셀 어레이를 포함할 수 있다. 제어 로직 회로, 데이터 입출력 회로, 및 메모 리 셀 어레이는 제어 로직 회로, 데이터 입출력 회로, 및 메모리 셀 어레이에 각각 대응하 므로 자세한 설명은 생략된다. 제어 로직 회로는 버퍼 다이로부터 TSV들(401~403)을 통해 전달되는 클럭 신호(CK), 로우 커맨드/로 우 어드레스(CMD_r/ADD_r), 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 로우 어드레스 (ADD_r)가 제1 스택 아이디(SID0)를 가리키는 경우, 제어 로직 회로는 로우 커맨드(CMD_r)를 디코딩할 수 있다. 컬럼 어드레스(ADD_c)가 제1 스택 아이디(SID0)를 가리키는 경우, 제어 로직 회로는 컬럼 커맨드 (CMD_c)를 디코딩할 수 있다. 즉, 제어 로직 회로는 제1 스택 아이디(SID0)에 대응하는 로우 커맨드 (CMD_r) 및 컬럼 커맨드(CMD_c)를 디코딩하고, 디코딩 결과에 따라 데이터 입출력 회로 및 메모리 셀 어레 이를 제어할 수 있다. 제어 로직 회로는 버퍼 다이로부터 TSV들(401~403)을 통해 전달되는 클럭 신호(CK), 로우 커맨드/로 우 어드레스(CMD_r/ADD_r), 및 컬럼 커맨드/컬럼 어드레스(CMD_c/ADD_c)를 수신할 수 있다. 로우 어드레스 (ADD_r)가 제2 스택 아이디(SID1)를 가리키는 경우, 제어 로직 회로는 로우 커맨드(CMD_r)를 디코딩할 수 있다. 컬럼 어드레스(ADD_c)가 제2 스택 아이디(SID1)를 가리키는 경우, 제어 로직 회로는 컬럼 커맨드 (CMD_c)를 디코딩할 수 있다. 즉, 제어 로직 회로는 제2 스택 아이디(SID1)에 대응하는 로우 커맨드 (CMD_r) 및 컬럼 커맨드(CMD_c)를 디코딩하고, 디코딩 결과에 따라 데이터 입출력 회로 및 메모리 셀 어레 이를 제어할 수 있다. 도 11a 및 도 11b는 본 발명의 실시 예들에 따라 도 7의 적층형 메모리 장치가 커맨드들을 수신하는 타이밍도의 예시들을 보여준다. 구체적으로, 도 11a는 서로 다른 뱅크 그룹들(BG1~BG3)에 대한 쓰기 커맨드(WR)를 수신하는 예시를 보여준다. 도 11b는 서로 다른 의사 채널들(PC0, PC1)에 대한 쓰기 커맨드(WR)를 수신하는 예시를 보여 준다. 도 11a 및 도 11b를 참조하면, 적층형 메모리 장치는 1.5-싸이클 동안 액티브 커맨드(ACT)를 수신하고, 0.5-싸이클 동안 프리차지 커맨드(PRE)를 수신하고, 1-싸이클 동안 쓰기 커맨드(WR)를 수신할 수 있다. 적층형 메모리 장치는 클럭 신호(CK_c)의 상승 에지 또는 하강 에지에서 프리차지 커맨드(PRE)를 수신할 수 있다. 예를 들어, 도 11a 및 도 11b에 도시된 바와 같이, 액티브 커맨드(ACTa)가 수신 완료된 이후에 딜레이 없이 적 층형 메모리 장치는 클럭 신호(CK_c)의 하강 에지에서 프리차지 커맨드(PREb)를 수신할 수 있다. 프리차지 커맨드(PREb)가 수신 완료된 이후에 적층형 메모리 장치는 딜레이 없이 액티브 커맨드(ACTc)를 수신할 수 있다. 액티브 커맨드(ACTc)가 수신 완료된 이후에 적층형 메모리 장치는 0.5-싸이클의 딜레이를 가지고 클 럭 신호(CK_c)의 상승 에지에서 프리차지 커맨드(PREd)를 수신할 수 있다. 이 경우, 도 11a 및 도 11b의 로우 커맨드(CMD_c)의 예시들은 도 3c의 로우 커맨드(CMD_c)의 예시와 대응되므로, 이하에서 자세한 설명은 생략된다. 도 11a 및 도 11b에서는 쓰기 커맨드(WR)들이 수신되는 예시들이 설명되나, 본 발명이 이에 한정되는 것은 아니다. 예를 들어, 쓰기 커맨드(WR)들은 읽기 커맨드(RD)들로 변경될 수 있다. 도 7 및 도 11a를 참조하면, 적층형 메모리 장치는 제1 시점(t1)에서 액티브 커맨드(ACTa) 및 제1 쓰기 커 맨드(WR1)를 수신할 수 있다. 이 경우, 제1 쓰기 커맨드(WR1)는 제1 뱅크 그룹(BG1)의 메모리 뱅크들 중 하나에 대응할 수 있다. 제1 쓰기 커맨드(WR1)가 수신 완료된 이후에 적층형 메모리 장치는 제2 시점(t2)에서 액 티브 커맨드(ACTc) 및 제2 쓰기 커맨드(WR2)를 수신할 수 있다. 이 경우, 제2 쓰기 커맨드(WR2)는 제2 뱅크 그 룹(BG2)의 메모리 뱅크들 중 하나에 대응할 수 있다. 제2 쓰기 커맨드(WR2)가 수신 완료된 이후에 적층형 메모 리 장치는 제3 시점(t3)에서 프리차지 커맨드(PREd) 및 제3 쓰기 커맨드(WR3)를 수신할 수 있다. 이 경우, 제3 쓰기 커맨드(WR3)는 제3 뱅크 그룹(BG3)의 메모리 뱅크들 중 하나에 대응할 수 있다. 예를 들어, 도 11a에 도시된 바와 같이, 서로 다른 쓰기 커맨드들이 수신되는 시점들 사이의 시간 간격은 2tCK(즉, 클럭 신호(CK_c) 의 2-싸이클)일 수 있다. 상술한 바와 같이, 서로 다른 뱅크 그룹들에 대하여 쓰기 커맨드(WR) 또는 읽기 커맨드(RD)가 연속하여 수신되 는 경우, 하나의 쓰기 커맨드(WR) 또는 읽기 커맨드(RD)가 수신 완료된 이후에 적층형 메모리 장치는 딜레이를 가지고 다른 쓰기 커맨드(WR) 또는 읽기 커맨드(RD)를 수신할 수 있다. 도 7 및 도 11b를 참조하면, 적층형 메모리 장치는 제1 시점(t1)부터 제5 시점(t5)까지 제1 내지 제5 쓰기 커맨드들(WR1~WR5)을 순차적으로 수신할 수 있다. 서로 다른 쓰기 커맨드들이 수신되는 시점들 사이의 간격은 1tCK(즉, 클럭 신호(CK_c)의 1-싸이클)일 수 있다. 즉, 도 11b에 도시된 바와 같이, 하나의 쓰기 커맨드가 수신 완료된 이후에 다른 쓰기 커맨드가 바로 수신될 수 있다. 이 경우, 연속하여 수신되는 2개의 쓰기 커맨드들은 서로 다른 의사 채널들에 대응할 수 있다. 예를 들어, 제1 쓰기 커맨드(WR1), 제3 쓰기 커맨드(WR3), 및 제5 쓰 기 커맨드(WR5)는 제1 의사 채널(PC0)의 메모리 뱅크들 중 하나에 대응할 수 있고, 제2 쓰기 커맨드(WR2) 및 제 4 쓰기 커맨드(WR4)는 제2 의사 채널(PC1)의 메모리 뱅크들 중 하나에 대응할 수 있다. 상술한 바와 같이, 서로 다른 의사 채널들에 대하여 쓰기 커맨드(WR) 또는 읽기 커맨드(RD)가 연속하여 수신되 는 경우, 하나의 쓰기 커맨드(WR) 또는 하나의 읽기 커맨드(RD)가 수신 완료된 이후에 적층형 메모리 장치(30 0)는 딜레이 없이 다른 쓰기 커맨드(WR) 또는 다른 읽기 커맨드(RD)를 수신할 수 있다. 이에 따라, 적층형 메모 리 장치는 의사 채널 인터리브와 같이 메모리 액세스가 연속적으로 이루어지는 상황에서 커맨드들을 빠르 게 수신할 수 있다. 도 12a는 본 발명의 실시 예에 따른 로우 커맨드의 예시를 보여주는 테이블이고, 도 12b는 본 발명의 실시 예에 따른 컬럼 커맨드의 예시를 보여주는 테이블이다. 도 12a를 참조하면, 로우 커맨드는 무동작 로우 커맨드(RNOP), 액티브 커맨드(ACT), 특정 뱅크에 대한 프리차지 커맨드(PREpb), 모든 뱅크에 대한 프리차지 커맨드(PREab), 특정 뱅크에 대한 리프레시 커맨드(REFpb), 모든 뱅 크에 대한 리프레시 커맨드(REFab), 특정 뱅크에 대한 리프레시 관리 커맨드(RFMpb), 모든 뱅크에 대한 리프레 시 관리 커맨드(RFMab), 파워-다운 엔트리(Power-Down Entry) 커맨드(PDE), 셀프 리프레시 엔트리(Self Refresh Entry) 커맨드(SRE), 파워-다운 엑시트(Power-Down Exit) 커맨드(PDX), 및 셀프 리프레시 엑시트(Self Refresh Exit) 커맨드(SRX)를 포함할 수 있다. 무동작 로우 커맨드(RNOP), 프리차지 커맨드들(PREpb, PREab), 리프레시 커맨드들(REFpb, REFab), 리프레시 관 리 커맨드들(RFMpb, RFMab), 파워-다운 엑시트 커맨드(RDX), 및 셀프 리프레시 엑시트 커맨드(SRX)는 클럭 신호 (CK)의 0.5-싸이클 동안 수신될 수 있다. 이 경우, 무동작 로우 커맨드(RNOP) 및 프리차지 커맨드들(PREpb, PREab)은, 도 3a 내지 도 3c를 참조하여 설명한 바와 같이, 클럭 신호(CK)의 상승 에지(R) 또는 하강 에지(F)에 서 수신될 수 있다. 리프레시 관리 커맨드들(RFMpb, RFMab), 파워-다운 엑시트 커맨드(RDX), 및 셀프 리프레시 엑시트 커맨드(SRX)는 클럭 신호(CK)의 상승 에지(R)에서 수신될 수 있다. 액티브 커맨드(ACT)는 클럭 신호(CK)의 1.5-싸이클 동안 수신될 수 있다. 즉, 액티브 커맨드(ACT)는 클럭 신호 (CK)의 2개의 상승 에지(R) 및 하나의 하강 에지(F)에 대응하여 수신될 수 있다. 파워-다운 엔트리 커맨드(PDE) 및 셀프 리프레시 엔트리 커맨드(SRE)는 클럭 신호(CK)의 1-싸이클 동안 수신될 수 있다. 즉, 파워-다운 엔트리 커맨드(PDE) 및 셀프 리프레시 엔트리 커맨드(SRE)는 클럭 신호(CK)의 하나의 상승 에지(R) 및 하나의 하강 에 지(F)에 대응하여 수신될 수 있다. 각각의 커맨드들은 제1 내지 제10 로우 핀들(R_P0~R_P9)을 통해 수신되는 신호 값들을 기반으로 구분될 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지(R) 또는 하강 에지(F)에서 제1 내지 제4 로우 핀들(R_P0~R_P3)을 통해 하이 레벨(H)에 대응하는 신호 값들이 수신되는 경우, 로우 커맨드가 무동작 로우 커맨드(RNOP)로 감지될 수 있다. 이 경우, 제5 내지 제10 로우 핀들(R_P4~R_P9)을 통해 유효 값(V)(예를 들어, 하이 레벨(H) 또는 로우 레벨(L))에 대응하는 신호 값들이 수신될 수 있다. 예를 들어, 클럭 신호(CK)의 첫 번째 상승 에지(R)에서 제1 로우 핀(R_P0)을 통해 로우 레벨(L)에 대응하는 신 호 값이 수신되고 제2 및 제3 로우 핀들(R_P1, R_P2)을 통해 하이 레벨(H)에 대응하는 신호 값들이 수신되는 경 우, 로우 커맨드가 액티브 커맨드(ACT)로 감지될 수 있다. 이 경우, 제4 로우 핀(R_P3)을 통해 의사 채널(PC)이 수신되고, 제5 및 제6 로우 핀들(R_P4, R_P5)을 통해 스택 아이디(SID)가 수신되고, 제7 내지 제10 로우 핀들 (R_P6~R_P9)을 통해 뱅크 어드레스(BA)가 수신될 수 있다. 예를 들어, 적층형 메모리 장치가 하나의 스택 으로 구현되는 경우, 제5 및 제6 로우 핀들(R_P4, R_P5)을 통해 스택 아이디(SID) 대신에 유효 값(V)들이 수신 될 수 있다. 클럭 신호(CK)의 첫 번째 상승 에지(R) 이후에 액티브 커맨드(ACT)가 수신되는 동안(즉, 클럭 신호 (CK)의 첫 번째 하강 에지(F) 및 두 번째 상승 에지(R)에서) 제1 및 제2 로우 핀들(R_P0, R_P1)을 통해 하이 레 벨(H)에 대응하는 신호 값들과 함께 제3 내지 제10 로우 핀들(R_P2~R_P9)을 통해 로우 어드레스(RA)가 수신될 수 있다.예를 들어, 클럭 신호(CK)의 상승 에지(R) 또는 하강 에지(F)에서 제1 로우 핀(R_P0)을 통해 하이 레벨(H)에 대 응하는 신호 값이 수신되고 제2 및 제3 로우 핀들(R_P1, R_P2)을 통해 로우 레벨(L)에 대응하는 신호 값들이 수 신되는 경우, 로우 커맨드가 프리차지 커맨드(PREpb)로 감지될 수 있다. 이 경우, 제4 로우 핀(R_P3)을 통해 의 사 채널(PC)이 수신되고, 제5 및 제6 로우 핀들(R_P4, R_P5)을 통해 스택 아이디(SID)가 수신되고, 제7 내지 제 10 로우 핀들(R_P6~R_P9)을 통해 뱅크 어드레스(BA)가 수신될 수 있다. 예를 들어, 적층형 메모리 장치가 하나의 스택으로 구현되는 경우, 제5 및 제6 로우 핀들(R_P4, R_P5)을 통해 스택 아이디(SID) 대신에 유효 값 (V)들이 수신될 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지(R) 또는 하강 에지(F)에서 제1 및 제3 로우 핀(R_P0, R_P2)들을 통해 하 이 레벨(H)에 대응하는 신호 값들이 수신되고 제2 로우 핀(R_P1)을 통해 로우 레벨(L)에 대응하는 신호 값이 수 신되는 경우, 로우 커맨드가 프리차지 커맨드(PREab)로 감지될 수 있다. 이 경우, 제4 로우 핀(R_P3)을 통해 의 사 채널(PC)이 수신되고, 제5 내지 제10 로우 핀들(R_P4~ R_P9)을 통해 유효 값(V)이 수신될 수 있다. 이와 마찬가지로, 제1 내지 제10 로우 핀들(R_P0~R_P9)을 통해 수신되는 신호 값들을 기반으로 로우 커맨드가 리프레시 커맨드들(REFpb, REFab), 리프레시 관리 커맨드들(RFMpb, RFMab), 파워-다운 엔트리 커맨드(PDE), 셀 프 리프레시 엔트리 커맨드(SRE), 파워-다운 엑시트 커맨드(PDX), 및 셀프 리프레시 엑시트 커맨드(SRX) 중 하 나로 감지될 수 있다. 도 12b를 참조하면, 컬럼 커맨드들은 무동작 컬럼 커맨드(CNOP), 읽기 커맨드들(RD, RDA), 쓰기 커맨드들(WR, WRA), 모드 레지스터 셋 커맨드(MRS), 및 모드 레지스터 읽기 커맨드(MRR)를 포함할 수 있다. 여기서, 읽기 커 맨드(RDA) 및 쓰기 커맨드(WRA)는 읽기 동작 및 쓰기 동작과 함께 오토-프리차지 동작을 지시하는 커맨드들이다. 커맨드들 각각은 클럭 신호(CK)의 상승 에지(R) 및 하강 에지(F)에 대응하는 1-싸이클 동안 수신 될 수 있다. 각각의 커맨드들은 제1 내지 제8 컬럼 핀들(C_P0~C_P7)을 통해 수신되는 신호 값들을 기반으로 구분될 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지(R)에서 제1 및 제3 컬럼 핀들(C_P0, C_P2)을 통해 하이 레벨(H)에 대응 하는 신호 값들이 수신되고, 제2 및 제4 컬럼 핀들(C_P1, C_P3)을 통해 로우 레벨(L)에 대응하는 신호 값들이 수신되는 경우, 컬럼 커맨드가 읽기 커맨드(RD)로 감지될 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지(R)에 서 제1 컬럼 핀(C_P0)을 통해 하이 레벨(H)에 대응하는 신호 값이 수신되고, 제2 내지 제4 컬럼 핀들 (C_P1~C_P3)을 통해 로우 레벨(L)에 대응하는 신호 값들이 수신되는 경우, 컬럼 커맨드가 쓰기 커맨드(WR)로 감 지될 수 있다. 제1 내지 제4 컬럼 핀들(C_P0~C_P3)을 통해 읽기 커맨드(RD) 또는 쓰기 커맨드(WR)가 감지되는 경우, 제5 컬럼 핀(C_P4)을 통해 의사 채널(PC)이 수신되고, 제6 및 제7 컬럼 핀들(C_P5, C_P6)을 통해 스택 아이디(SID)가 수 신되고, 제8 컬럼 핀(C_P7)을 통해 뱅크 어드레스(BA)의 일부가 수신될 수 있다. 예를 들어, 적층형 메모리 장 치가 하나의 스택으로 구현되는 경우, 제6 및 제7 컬럼 핀들(C_P5, C_P6)을 통해 스택 아이디(SID) 대신에 유효 값(V)들이 수신될 수 있다. 클럭 신호(CK)의 상승 에지(R) 이후에 읽기 커맨드(RD) 또는 쓰기 커맨드(WR) 가 수신되는 동안(즉, 클럭 신호(CK)의 하강 에지(F)에서) 제1 내지 제3 컬럼 핀들(C_P0~C_P2)을 통해 뱅크 어 드레스(BA)의 나머지가 수신되고, 제4 내지 제8 컬럼 핀들(C_P3~C_P7)을 통해 컬럼 어드레스(CA)가 수신될 수 있다. 이와 마찬가지로, 제1 내지 제8 컬럼 핀들(C_P0~C_P7)을 통해 수신되는 신호 값들을 기반으로 컬럼 커맨드가 무 동작 컬럼 커맨드(CNOP), 읽기 커맨드(RDA), 쓰기 커맨드(WRA), 모드 레지스터 셋 커맨드(MRS), 및 모드 레지스 터 읽기 커맨드(MRR) 중 하나로 감지될 수 있다. 여기서, 모드 레지스터 셋 커맨드(MRS)가 수신됨에 따라 모드 레지스터 어드레스(MA) 및 설정 정보(OP)가 함께 수신될 수 있고, 모드 레지스터 읽기 커맨드(MRR)가 수신됨에 따라 모드 레지스터 어드레스(MA)가 함께 수신될 수 있다. 도 13은 도 12a의 로우 커맨드에 따라 프리차지 커맨드를 감지하기 위한 제어 로직 회로의 예시적인 회로도이다. 구체적으로, 도 13은 특정 뱅크에 대한 프리차지 커맨드(PREpb)를 감지하기 위한 특정 커맨드 디코 더의 예시적인 회로도를 보여준다. 도 13을 참조하면, 제어 로직 회로는 도 8 내지 도 10의 제어 로직 회 로들(421, 424, 431) 중 적어도 하나에 대응할 수 있다. 제어 로직 회로는 인버터들(441~447), NAND 게이 트들(448, 449), 플립플롭들(451, 452), 및 OR 게이트를 포함할 수 있다. 인버터들(441, 442, 446), NAND 게이트, 및 플립플롭은 도 6의 제1 특정 커맨드 디코더에 대응하고, 인버터들(443, 444, 447), NAND 게이트, 및 플립플롭은 도 6의 제2 특정 커맨드 디코더에 대응하고, OR 게이트는 도6의 비교기에 대응할 수 있다. 프리차지 커맨드(PREpb)를 나타내는 로우 커맨드가 수신되는 경우, 도 12a를 참조하여 설명한 바와 같이, 제1 내지 제3 로우 핀들(R_P0~R_P2)을 통해 각각이 하이 레벨(H), 로우 레벨(L), 로우 레벨(L)에 대응하는 신호 값 들이 수신될 수 있다. 제1 로우 핀(R_P0)을 통해 수신되는 신호 값은 NAND 게이트들(448, 449) 각각으로 입력되 고, 제2 및 제3 로우 핀들(R_P1, R_P2)을 통해 수신되는 신호 값들은 인버터들(441~444)을 통해 반전되어 NAND 게이트들(448, 449) 각각으로 입력될 수 있다. 이에 따라, NAND 게이트들(448, 449) 각각으로 하이 레벨(H)에 대응하는 신호 값들이 입력될 수 있고, NAND 게이트들(448, 449) 각각으로부터 로우 레벨(L)에 대응하는 신호 값이 출력될 수 있다. NAND 게이트들(448, 449)로부터 출력되는 신호 값들은 인버터들(446, 447)을 통해 반전되 어 플립플롭들(451, 452)의 입력 단자(D)들로 입력될 수 있다. 플립플롭은 클럭 핀(CK_P)을 통해 수신되는 클럭 신호(CK)의 상승 에지에 기초하여 입력 단자(D)로 입력된 신호 값을 제1 디코딩 결과(DR1)로서 출력 단자(Q)로 출력할 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지에 서 프리차지 커맨드(PREpb)를 나타내는 로우 커맨드가 수신되는 경우, 플립플롭은 하이 레벨(H)에 대응하 는 제1 디코딩 결과(DR1)를 출력할 수 있다. 예를 들어, 클럭 신호(CK)의 상승 에지에서 프리차지 커맨드 (PREpb)를 나타내는 로우 커맨드가 수신되지 않는 경우, 플립플롭은 로우 레벨(L)에 대응하는 제1 디코딩 결과(DR1)를 출력할 수 있다. 플립플롭은 클럭 신호(CK)가 인버터를 통해 반전된 신호를 수신할 수 있다. 즉, 플립플롭은 클 럭 신호(CK)의 하강 에지에 기초하여 입력 단자(D)로 입력된 신호 값을 제2 디코딩 결과(DR2)로서 출력 단자 (Q)로 출력할 수 있다. 예를 들어, 클럭 신호(CK)의 하강 에지에서 프리차지 커맨드(PREpb)를 나타내는 로우 커 맨드가 수신되는 경우, 플립플롭은 하이 레벨(H)에 대응하는 제2 디코딩 결과(DR2)를 출력할 수 있다. 예 를 들어, 클럭 신호(CK)의 하강 에지에서 프리차지 커맨드(PREpb)를 나타내는 로우 커맨드가 수신되지 않는 경 우, 플립플롭은 로우 레벨(L)에 대응하는 제2 디코딩 결과(DR2)를 출력할 수 있다. OR 게이트는 제1 디코딩 결과(DR1) 또는 제2 디코딩 결과(DR2)를 비교하여 프리차지 커맨드(PREpb)를 나타 내는 내부 커맨드(iCMD)를 출력할 수 있다. 예를 들어, 제1 디코딩 결과(DR1) 또는 제2 디코딩 결과(DR2)가 하 이 레벨(H)인 경우(즉, 로우 커맨드가 프리차지 커맨드(PREpb)를 나타내는 경우), OR 게이트는 프리차지 커맨드(PREpb)가 감지됨을 가리키는 하이 레벨(H)의 내부 커맨드(iCMD)를 출력할 수 있다. 도 13에 도시된 제어 로직 회로는 하나의 예시일 뿐이며 본 발명이 이에 한정되는 것은 아니다. 예를 들어, 제어 로직 회로는 NAND 게이트(448 또는 449) 대신에 제1 논리 연산(예를 들어, 논리곱 연산)을 수 행할 수 있는 복수의 논리 게이트들을 포함하거나, 또는 OR 게이트 대신에 제2 논리 연산(예를 들어, 논리 합 연산)을 수행할 수 있는 복수의 논리 게이트들을 포함할 수 있다. 도 14는 본 발명의 하나의 실시 예에 따른 반도체 패키지를 보여주는 도면이다. 도 14를 참조하면, 반도체 패키 지는 적층형 메모리 장치, 시스템 온 칩, 인터포저, 및 패키지 기판을 포함할 수 있다. 적층형 메모리 장치는 버퍼 다이 및 코어 다이들(1120~1150)을 포함할 수 있다. 적층형 메모리 장치는 도 7 내지 도 13을 참조하여 설명한 적층형 메모리 장치(300, 400, 400a, 400b)에 대응할 수 있다. 코어 다이들(1120~1150) 각각은 데이터를 저장하기 위한 메모리 셀들을 포함할 수 있다. 버퍼 다이는 물 리 계층 및 직접 접근 영역(DAB, 1112)을 포함할 수 있다. 물리 계층은 시스템 온 칩의 물리 계층과 인터포저를 통해 전기적으로 연결될 수 있다. 적층형 메모리 장치는 물리 계층(111 1)을 통해 시스템 온 칩으로부터 신호들을 수신하거나, 또는 시스템 온 칩으로 신호들을 전송할 수 있다. 물리 계층은 도 8 내지 도 10을 참조하여 설명한 버퍼 다이의 메모리 인터페이스 회로를 포함할 수 있다. 직접 접근 영역은 시스템 온 칩을 통하지 않고 적층형 메모리 장치를 테스트할 수 있는 접근 경로를 제공할 수 있다. 직접 접근 영역은 외부의 테스트 장치와 직접 통신할 수 있는 도전 수단(예를 들 어, 포트 또는 핀)을 포함할 수 있다. 직접 접근 영역을 통해 수신된 테스트 신호는 TSV들을 통해 코어 다이들(1120~1150)로 전송될 수 있다. 코어 다이들(1120~1150)의 테스트를 위해 코어 다이들(1120~1150)로부터 독출된 데이터는 TSV들 및 직접 접근 영역을 통해 테스트 장치로 전송될 수 있다. 이에 따라, 코어 다이 들(1120~1150)에 대한 직접 접근 테스트가 수행될 수 있다. 버퍼 다이와 코어 다이들(1120~1150)은 TSV들 및 범프들을 통해 서로 전기적으로 연결될 수 있다. 버퍼 다이는 시스템 온 칩으로부터 채널 별로 할당된 범프들을 통해 각각의 채널로 제 공되는 신호들을 수신하거나, 범프들을 통해 신호들을 시스템 온 칩으로 전송할 수 있다. 예를 들 어, 범프들은 마이크로 범프들일 수 있다. 시스템 온 칩은 적층형 메모리 장치를 이용하여 반도체 패키지가 지원하는 어플리케이션들을 실행할 수 있다. 예를 들어, 시스템 온 칩은 CPU(Central Processing Unit), AP(Application Processor), GPU(Graphic Processing Unit), NPU(Neural Processing Unit), TPU(Tensor Processing Unit), VPU(Vision Processing Unit), ISP(Image Signal Processor) 및 DSP(Digital Signal Processor) 중 적어도 하 나의 프로세서를 포함하여 특화된 연산들을 실행할 수 있다. 시스템 온 칩은 적층형 메모리 장치의 전반적인 동작을 제어할 수 있다. 시스템 온 칩은 도 1의 메모리 컨트롤러에 대응할 수 있다. 시스템 온 칩은 물리 계층을 포함할 수 있다. 물리 계층은 적층형 메모리 장치의 물리 계층과 신호들을 송수신하기 위한 인터페이스 회로를 포 함할 수 있다. 예를 들어, 물리 계층은 도 1의 호스트 인터페이스 회로를 포함할 수 있다. 시스템 온 칩은 물리 계층을 통해 물리 계층으로 다양한 신호들을 제공할 수 있다. 물리 계층(111 1)으로 제공된 신호들은 물리 계층의 인터페이스 회로 및 TSV들을 통해 코어 다이들(1120~1150)로 전달될 수 있다. 인터포저는 적층형 메모리 장치와 시스템 온 칩을 연결할 수 있다. 인터포저는 적층형 메모리 장치의 물리 계층과 시스템 온 칩의 물리 계층 사이를 연결하고, 도전성 물질 들을 이용하여 형성되는 물리적 경로들을 제공할 수 있다. 이에 따라, 적층형 메모리 장치 및 시스템 온 칩은 인터포저 상에 적층되어 서로 신호들을 송수신할 수 있다. 패키지 기판 상부에는 범프들이 부착되고, 하부에는 솔더볼이 부착될 수 있다. 예를 들어, 범프들은 플립-칩 범프들일 수 있다. 인터포저는 범프들을 통해 패키지 기판 상에 적 층될 수 있다. 반도체 패키지는 솔더볼을 통해 외부의 다른 패키지 또는 반도체 장치들과 신호들을 송수신할 수 있다. 예를 들어, 패키지 기판은 인쇄 회로 기판(PCB, Printed Circuit Board)일 수 있다. 예시적인 실시 예에서, 버퍼 다이의 물리 계층은 시스템 온 칩으로부터 범프들을 통해, 도 1 내지 도 13을 참조하여 설명한 바와 같이, 로우 커맨드 및 컬럼 커맨드를 수신할 수 있다. 물리 계 층은 로우 커맨드 중 특정 커맨드(예를 들어, 프리차지 커맨드(PRE))를 클럭 신호(CK)의 상승 에지 또는 하강 에지에서 수신할 수 있다. 도 15는 본 발명의 하나의 실시 예에 따른 반도체 패키지의 구현 예시를 보여주는 도면이다. 도 15를 참조하면, 반도체 패키지는 복수의 적층형 메모리 장치들 및 시스템 온 칩을 포함할 수 있다. 적층형 메모리 장치들 각각은 도 14의 적층형 메모리 장치에 대응하고 시스템 온 칩은 도 14의 시스 템 온 칩에 대응할 수 있다. 적층형 메모리 장치들과 시스템 온 칩은 인터포저 상에 적층되고, 인터포저는 패키지 기판 상에 적층될 수 있다. 반도체 패키지는 패키지 기판 하부에 부착된 솔더볼을 통해 외부의 다른 패키지 또는 반도체 장치들과 신호들을 송수신할 수 있 다. 적층형 메모리 장치들 각각은 HBM 표준을 기반으로 구현될 수 있다. 그러나, 본 발명이 이에 한정되는 것 은 아니며, 적층형 메모리 장치들 각각은 GDDR, HMC, 또는 Wide I/O 표준을 기반으로 구현될 수 있다. 시스템 온 칩은 CPU, AP, GPU, NPU 등의 적어도 하나의 프로세서 및 복수의 적층형 메모리 장치들 을 제어하기 위한 복수의 메모리 컨트롤러들을 포함할 수 있다. 시스템 온 칩은 메모리 컨트롤러를 통해 대응하는 적층형 메모리 장치와 신호들을 송수신할 수 있다. 도 16은 본 발명의 다른 실시 예에 따른 반도체 패키지를 보여주는 도면이다. 도 16을 참조하면, 반도체 패키지 는 적층형 메모리 장치, 호스트 다이, 및 패키지 기판을 포함할 수 있다. 적층형 메모 리 장치는 버퍼 다이 및 코어 다이들(3120~3150)을 포함할 수 있다. 버퍼 다이는 호스트 다 이와 통신하기 위한 물리 계층을 포함하고, 코어 다이들(3120~3150) 각각은 데이터를 저장하기 위 한 메모리 셀들을 포함할 수 있다. 적층형 메모리 장치는 도 7 내지 도 13을 참조하여 설명한 적층형 메 모리 장치(300, 400, 400a, 400b)에 대응할 수 있다. 호스트 다이는 적층형 메모리 장치와 통신하기 위한 물리 계층을 포함할 수 있다. 물리 계층 과 물리 계층은 TSV들을 통해 통신할 수 있다. 호스트 다이는 도 1의 메모리 컨트롤러에 대응하고, 물리 계층은 도 1의 호스트 인터페이스 회로에 대응할 수 있다. 호스트 다이 는 반도체 패키지의 전반적인 동작을 제어하고, 반도체 패키지가 지원하는 어플리케이션을 실행하기 위한 프로세서를 포함할 수 있다. 예를 들어, 호스트 다이는 CPU, AP, GPU, NPU 등의 적어도 하 나의 프로세서를 포함할 수 있다. 적층형 메모리 장치는 TSV들을 기반으로 호스트 다이 상에 배치되어, 호스트 다이 상 에 수직으로 적층될 수 있다. 이에 따라, 버퍼 다이, 코어 다이들(3120~3150), 및 호스트 다이는 인터포저 없이 TSV들과 범프들을 통해 서로 전기적으로 연결될 수 있다. 예를 들어, 범프들 은 마이크로 범프들일 수 있다. 패키지 기판 상부에는 범프들이 부착되고, 하부에는 솔더볼이 부착될 수 있다. 예를 들어, 범프들은 플립-칩 범프들일 수 있다. 호스트 다이는 범프들을 통해 패키지 기판 상에 적층될 수 있다. 반도체 패키지는 솔더볼을 통해 외부의 다른 패키지 또는 반도체 장치들과 신호를 송수신할 수 있다. 예시적인 실시 예에서, 버퍼 다이의 물리 계층은 호스트 다이로부터 TSV들을 통해, 도 1 내지 도 13을 참조하여 설명한 바와 같이, 로우 커맨드 및 컬럼 커맨드를 수신할 수 있다. 물리 계층은 로우 커맨드 중 특정 커맨드(예를 들어, 프리차지 커맨드(PRE))를 클럭 신호(CK)의 상승 에지 또는 하강 에지에 서 수신할 수 있다. 다른 실시 예에 있어서, 적층형 메모리 장치는 버퍼 다이 없이 코어 다이들(3120~3150)만으로 구현 될 수 있다. 이 경우, 코어 다이들(3120~3250) 각각은 호스트 다이와 통신하기 위한 인터페이스 회로들을 더 포함할 수 있다. 이 경우, 코어 다이들(3120~3250) 각각은 TSV들을 통해 호스트 다이의 물리 계 층과 신호들을 송수신할 수 있다. 도 17은 본 발명의 하나의 실시예에 따른 컴퓨팅 시스템을 나타내는 블록도이다. 컴퓨팅 시스템은 하나의 전자 장치로 구현되거나, 또는 두 개 이상의 전자 장치들 상에 분산되어 구현될 수 있다. 예를 들어, 컴 퓨팅 시스템은 데스크톱(desktop) 컴퓨터, 랩톱(laptop) 컴퓨터, 태블릿(tablet) 컴퓨터, 스마트폰, 자율 주행 자동차, 디지털 카메라, 웨어러블(wearable) 기기, 헬스케어 기기, 서버 시스템, 데이터 센터, 드론, 휴대 용 게임 콘솔(handheld game console), IoT(Internet of Things) 기기, 그래픽 가속기, AI 가속기 등과 같은 다양한 전자 장치들 중 적어도 하나로 구현될 수 있다. 도 17을 참조하면, 컴퓨팅 시스템은 호스트, 가속기 서브시스템, 및 인터커넥트를 포 함할 수 있다. 호스트는 가속기 서브시스템의 전반적인 동작을 제어하고, 가속기 서브시스템(420 0)은 호스트의 제어에 따라 동작할 수 있다. 호스트와 가속기 서브시스템은 인터커넥트 를 통해 연결될 수 있다. 인터커넥트를 통해 호스트 및 가속기 서브시스템 사이에 각 종 신호들 및 데이터가 송수신될 수 있다. 호스트는 호스트 프로세서, 호스트 메모리 컨트롤러, 호스트 메모리, 및 인터페이스 회로를 포함할 수 있다. 호스트 프로세서는 컴퓨팅 시스템의 전반적인 동작을 제어할 수 있 다. 호스트 프로세서는 호스트 메모리 컨트롤러를 통해 호스트 메모리를 제어할 수 있다. 호 스트 프로세서는 인터커넥트를 통해 연결된 가속기 서브시스템을 제어할 수 있다. 예를 들어, 호스트 프로세서는 가속기 서브시스템으로 명령을 전송하여 가속기 서브시스템에 작업 을 할당할 수 있다. 호스트 프로세서는 컴퓨팅 시스템의 다양한 동작들과 연관된 일반적인 연산들을 수행하는 범용 프 로세서 또는 메인 프로세서일 수 있다. 예를 들어, 호스트 프로세서는 CPU 또는 AP일 수 있다. 호스트 메모리는 컴퓨팅 시스템의 메인 메모리일 수 있다. 호스트 메모리는 호스트 프로세서 에서 처리된 데이터를 저장하거나, 또는 가속기 서브시스템으로부터 수신된 데이터를 저장할 수 있 다. 예를 들어, 호스트 메모리는 DRAM으로 구현될 수 있다. 그러나, 본 발명이 이에 한정되는 것은 아니 며, 호스트 메모리는 SRAM 등의 휘발성 메모리 및 플래시 메모리, PRAM, RRAM, MRAM 등의 불휘발성 메모 리 중 적어도 하나를 포함할 수 있다. 인터페이스 회로는 호스트가 가속기 서브시스템과 통신을 수행하도록 구성될 수 있다. 호스 트 프로세서는 인터페이스 회로를 통해 제어 신호들 및 데이터를 가속기 서브시스템으로 전 송하고, 가속기 서브시스템으로부터 신호들 및 데이터를 수신할 수 있다. 예시적인 실시 예에서, 호스트프로세서, 호스트 메모리 컨트롤러, 및 인터페이스 회로는 하나의 칩으로 구현될 수 있다. 가속기 서브시스템은 호스트의 제어에 따라 특정 기능을 수행할 수 있다. 예를 들어, 가속기 서브 시스템은 호스트의 제어에 따라 특정 응용에 특화된 연산들을 수행할 수 있다. 가속기 서브시스템 은 호스트에 물리적 또는 전기적으로 연결되거나, 유선 또는 무선으로 연결되도록 모듈, 카드, 패 키지, 칩, 장치와 같은 다양한 형태들로 구현될 수 있다. 예를 들어, 가속기 서브시스템은 그래픽 카드 또는 가속기 카드로서 구현될 수 있다. 예를 들어, 가속기 서브시스템은 FPGA(Field Programmable Gate Array) 또는 ASIC(Application Specific Integrated Circuit) 기반으로 구현될 수 있다. 예시적인 실시 예에서, 가속기 서브시스템은 다양한 패키징 기법들 중 하나를 기반으로 구현될 수 있다. 예를 들어, 가속기 서브시스템은 Ball Grid Arrays(BGAs), MCP(Multi Chip Package), SOP(System on Package), SIP(System in Package), POP(Package on Package), Chip scale packages(CSPs), wafer level package(WLP), 또는 panel level package(PLP)와 같은 패키징 기법으로 구현될 수 있다. 일 예시로서, 가속기 서브시스템의 일부 또는 전체 구성 요소들은 카파-투-카파 본딩(copper-to-copper boding)을 통해 연결될 수 있다. 일 예시로서, 가속기 서브시스템의 일부 또는 전체 구성 요소들은 실리콘 인터포저(Silicon interposer), 오가닉(organic) 인터포저, 글래스(glass) 인터포저, 또는 능동형(active) 인터포저와 같은 인터 포저를 통해 연결될 수 있다. 일 예시로서, 가속기 서브시스템의 일부 또는 전체 구성 요소들은 실리콘 관통 전극(TSV; Through Silicon Via)을 기반으로 적층될 수 있다. 일 예시로서, 가속기 서브시스템의 일 부 또는 전체 구성 요소들은 고속 연결 통로(예를 들어, 실리콘 브릿지(bridge))를 통해 연결될 수 있다. 가속기 서브시스템은 전용 프로세서, 로컬 메모리 컨트롤러, 로컬 메모리, 및 호스트 인터페이스 회로를 포함할 수 있다. 전용 프로세서는 호스트 프로세서의 제어에 따라 동작할 수 있다. 예를 들어, 전용 프로세서는 호스트 프로세서의 명령에 응답하여 로컬 메모리 컨트롤러 를 통해 로컬 메모리로부터 데이터를 독출할 수 있다. 전용 프로세서는 독출된 데이터를 기 반으로 연산을 수행하여 데이터를 처리할 수 있다. 전용 프로세서는 처리된 데이터를 호스트 프로세서 로 전달하거나, 또는 로컬 메모리에 기입할 수 있다. 전용 프로세서는 로컬 메모리에 저장된 값을 기반으로 특정 응용에 특화된 연산들을 수행할 수 있 다. 예를 들어, 전용 프로세서는 인공지능, 스트리밍 분석, 비디오 트랜스코딩, 데이터 인덱싱, 데이터 인코딩/디코딩, 데이터 암호화 등과 같은 응용들에 특화된 연산들을 수행할 수 있다. 이에 따라, 전용 프로세서 는 이미지 데이터, 음성 데이터, 모션 데이터, 생체 데이터, 키 값 등 다양한 유형들의 데이터를 처리할 수 있다. 예를 들어, 전용 프로세서는 GPU, NPU, TPU, VPU, ISP 및 DSP 중 적어도 하나를 포함할 수 있 다. 전용 프로세서는 하나의 프로세서 코어를 포함하거나, 듀얼 코어, 쿼드 코어, 헥사 코어 등 복수의 프로 세서 코어들을 포함할 수 있다. 예시적인 실시 예에서, 전용 프로세서는 병렬성에 특화된 연산을 위해 호 스트 프로세서보다 많은 수의 코어들을 포함할 수 있다. 예를 들어, 전용 프로세서는 1000개 이상 의 코어들을 포함할 수 있다. 로컬 메모리 컨트롤러는 로컬 메모리의 전반적인 동작을 제어할 수 있다. 예시적인 실시 예에서, 로컬 메모리 컨트롤러는 ECC(Error Correction Code) 인코딩 및 ECC 디코딩을 수행하거나, 순환중복검사 (CRC; Cyclic Redundancy Check) 방식으로 데이터 검증을 수행하거나, 또는 데이터 암호화 및 데이터 복호화를 수행할 수 있다. 로컬 메모리 컨트롤러는 도 1의 메모리 컨트롤러에 대응할 수 있다. 로컬 메모리는 전용 프로세서에 의해 전용으로 사용될 수 있다. 로컬 메모리는 DRAM으로 구 현될 수 있으나, 본 발명이 이에 한정되는 것은 아니다. 예를 들어, 로컬 메모리는 SRAM 등의 휘발성 메 모리 및 플래시 메모리, PRAM, RRAM, MRAM 등의 불휘발성 메모리 중 적어도 하나를 포함할 수 있다. 예시적인 실시 예에서, 로컬 메모리는 전용 프로세서와 함께 하나의 기판 상에 실장되거나, 또는 별도의 커 넥터를 기반으로 전용 프로세서와 연결되도록 다이, 칩, 패키지, 모듈, 카드, 장치와 같은 다양한 형태들 로 구현될 수 있다. 로컬 메모리는 도 1 내지 도 13을 참조하여 설명한 메모리 장치 또는 적층형 메 모리 장치(300, 400)에 대응할 수 있다. 예시적인 실시 예에서, 로컬 메모리는 일부 연산들을 수행할 수 있는 로직 회로를 포함할 수 있다. 로직 회로는 로컬 메모리로부터 독출된 데이터 또는 로컬 메모리에 기입될 데이터에 대하여 선형 연산, 비교 연산, 압축 연산, 데이터 변환 연산, 산술 연산 등을 수행할 수 있다. 이에 따라, 로직 회로에 의해 처리된 데이터의 크기가 감소될 수 있다. 데이터 크기가 감소되는 경우, 로컬 메모리와 로컬 메모리 컨트롤러 사이의 대역폭 효율성이 향상될 수 있다. 호스트 인터페이스 회로는 가속기 서브시스템이 호스트와 통신을 수행하도록 구성될 수 있다. 가속기 서브시스템은 호스트 인터페이스 회로를 통해 신호 및 데이터를 호스트로 송신 하고, 호스트로부터 제어 신호 및 데이터를 수신할 수 있다. 예시적인 실시 예에서, 전용 프로세서 , 로컬 메모리 컨트롤러, 및 호스트 인터페이스 회로는 하나의 칩으로 구현될 수 있다. 인터커넥트는 호스트와 가속기 서브시스템 사이에 데이터 전송 경로를 제공하고, 데이터 버 스 또는 데이터 링크로서 역할을 수행할 수 있다. 데이터 전송 경로는 유선 또는 무선으로 형성될 수 있다. 인 터페이스 회로 및 호스트 인터페이스 회로는 인터커넥트를 통해 미리 정해진 규약을 기반으 로 통신할 수 있다. 예를 들어, 인터페이스 회로들(4140, 4240)은 ATA(Advanced Technology Attachment), SATA(Serial ATA), e-SATA(external SATA), SCSI(Small Computer Small Interface), SAS(Serial Attached SCSI), PCI(Peripheral Component Interconnection), PCIe(PCI express), NVMe(NVM express), AXI(Advanced eXtensible Interface), AMBA(ARM Microcontroller Bus Architecture), IEEE 1394, USB(universal serial bus), SD(secure digital) 카드, MMC(multi-media card), eMMC(embedded multi-media card), UFS(Universal Flash Storage), CF(compact flash), Gen-Z 등과 같은 다양한 표준들 중 하나에 기반하여 통신할 수 있다. 또 는 인터페이스 회로들(4140, 4240)은 openCAPI(Coherent Accelerator Processor Interface), CCIX(Cache Coherent Interconnect for Accelerators), CXL(Compute Express Link), NVLINK 등과 같은 장치들 사이의 통신 링크를 기반으로 통신할 수 있다. 또는 인터페이스 회로들(4140, 4240)은 LTE, 5G, LTE-M, NB-IoT, LPWAN, 블 루투스, NFC(Near Field Communication), 지그비(Zigbee), 지웨이브(Z-Wave), 무선랜(WLAN) 등과 같은 무선 통 신 기술을 기반으로 통신할 수 있다. 예시적인 실시 예에서, 가속기 서브시스템은 이미지 데이터, 음성 데이터, 모션 데이터, 생체 데이터, 주 변 환경 정보 등을 감지할 수 있는 센서를 더 포함할 수 있다. 예시적인 실시 예에서, 센서가 가속기 서브시스 템에 포함되는 경우, 센서는 상술한 패키징 기법을 기반으로 다른 구성 요소들(예를 들어, 전용 프로세서 및 로컬 메모리)과 연결될 수 있다. 가속기 서브시스템은 특정 연산들을 기반으로 센서를 통해 감지된 데이터를 처리할 수 있다. 도 17에서는 전용 프로세서가 하나의 로컬 메모리 컨트롤러를 통해 하나의 로컬 메모리를 이 용하는 것으로 도시되어 있으나, 본 발명이 이에 한정되는 것은 아니다. 일 예로서, 전용 프로세서는 하 나의 로컬 메모리 컨트롤러를 통해 복수의 로컬 메모리들을 이용할 수 있다. 다른 예로서, 전용 프로세서 는 복수의 로컬 메모리 컨트롤러들을 통해 각각에 대응하는 로컬 메모리를 이용할 수 있다. 상술된 내용은 본 발명을 실시하기 위한 구체적인 실시 예들이다. 본 발명은 상술된 실시 예들뿐만 아니라, 단 순하게 설계 변경되거나 용이하게 변경할 수 있는 실시 예들 또한 포함할 것이다. 또한, 본 발명은 실시 예들을 이용하여 용이하게 변형하여 실시할 수 있는 기술들도 포함될 것이다. 따라서, 본 발명의 범위는 상술된 실시 예들에 국한되어 정해져서는 안되며 후술하는 특허청구범위뿐만 아니라 이 발명의 특허청구범위와 균등한 것들 에 의해 정해져야 할 것이다."}
{"patent_id": "10-2020-0103438", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 하나의 실시 예에 따른 메모리 시스템을 나타내는 블록도이다. 도 2는 도 1의 메모리 장치의 예시적인 블록도이다. 도 3a 내지 도 3c는 본 발명의 실시 예들에 따라 도 1의 메모리 장치가 커맨드들을 수신하는 타이밍도의 예시들 을 보여준다. 도 4a 및 도 4b는 본 발명의 실시 예들에 따라 도 1의 메모리 장치가 하나의 메모리 뱅크에 대한 커맨드들을 수 신하는 타이밍도의 예시를 보여준다. 도 5는 도 1의 메모리 장치의 예시적인 동작을 보여주는 순서도이다. 도 6은 도 2의 제어 로직 회로의 예시적인 블록도이다. 도 7은 본 발명의 실시 예들에 따른 적층형 메모리 장치를 보여주는 블록도이다. 도 8은 도 7의 적층형 메모리 장치의 예시적인 블록도이다. 도 9는 도 8의 적층형 메모리 장치의 확장 예시를 보여주는 블록도이다. 도 10은 도 8의 적층형 메모리 장치의 확장 예시를 보여주는 블록도이다. 도 11a 및 도 11b는 본 발명의 실시 예들에 따라 도 7의 적층형 메모리 장치가 커맨드들을 수신하는 타이밍도의 예시들을 보여준다. 도 12a는 본 발명의 실시 예에 따른 로우 커맨드의 예시를 보여주는 테이블이다. 도 12b는 본 발명의 실시 예에 따른 컬럼 커맨드의 예시를 보여주는 테이블이다. 도 13은 도 12a의 로우 커맨드에 따라 프리차지 커맨드를 감지하기 위한 제어 로직 회로의 예시적인 회로도이다. 도 14는 본 발명의 하나의 실시 예에 따른 반도체 패키지를 보여주는 도면이다. 도 15는 본 발명의 하나의 실시 예에 따른 반도체 패키지의 구현 예시를 보여주는 도면이다. 도 16은 본 발명의 다른 실시 예에 따른 반도체 패키지를 보여주는 도면이다. 도 17은 본 발명의 하나의 실시예에 따른 컴퓨팅 시스템을 나타내는 블록도이다."}
