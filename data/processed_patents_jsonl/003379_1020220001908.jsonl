{"patent_id": "10-2022-0001908", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0106241", "출원번호": "10-2022-0001908", "발명의 명칭": "인공지능을 이용한 전기 설비 유지보수를 위한 컴퓨팅 장치 및 그것의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "윤성현"}}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공지능을 이용한 전기 설비 점검 주기를 선택하는 컴퓨팅 장치의 동작 방법에 있어서,전기 설비 관련된 계통 및 비용 정보를 입력하는 단계;점검 주기 셋을 정의하는 단계;점검 주기 별, 상기 계통 및 비용 정보를 이용하여 강화학습을 수행하는 단계;상기 강화학습에 따라 선택된 알고리즘을 평가하는 단계;상기 점검 주기 셋의 점검 주기가 상한값보다 큰 지를 판별하는 단계; 및상기 점검 주기가 상기 상한값보다 클 때, 상기 알고리즘을 최적 알고리즘으로 출력하는 단계를 포함하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 강화학습을 수행하는 단계는,상기 점검 주기 별, 서로 다른 인공 신경망을 생성하는 단계를 포함하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 강화학습을 수행하는 단계는,점검 주기 별 MCTS(Monte Carlo Tree Search)를 기반으로 수집한 데이터를 통하여 인공 신경망을 학습하는 단계를 포함하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 알고리즘을 평가하는 단계는,상기 점검 주기에서 시뮬레이션 기간의 전체 기대 비용을 기존 점검 주기의 기대 비용보다 낮을 경우, 최적의점검 주기를 대체하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 강화학습에서 인공 신경망의 출력 크기는 전기 설비의 기기 수와 동일한 것을 특징으로 하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,배전 계통 시스템 관점의 신뢰도 지수를 선정하는 단계를 더 포함하고,상기 신뢰도 지수의 최적화를 통해 전력 계통의 최소 비용을 유지하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "인공지능을 이용한 전기 설비 점검 주기를 선택하는 컴퓨팅 장치(1000)에 있어서,공개특허 10-2023-0106241-3-적어도 하나의 프로세서(1100); 및점검 주기 선택 알고리즘을 저장하는 메모리 장치(1200)를 포함하고,상기 점검 주기 선택 알고리즘은,전기 설비 관련된 계통 및 비용 정보를 입력하고; 점검 주기 셋을 정의하는 단계, 점검 주기 별 상기 계통 및비용 정보를 이용하여 강화학습을 수행하는 단계; 상기 강화학습에 따라 선택된 알고리즘을 평가하고; 상기 점검 주기 셋의 점검 주기가 상한값보다 큰 지를 판별하고; 및 상기 점검 주기가 상기 상한값보다 클 때, 상기 알고리즘을 최적 알고리즘으로 출력하도록, 상기 적어도 하나의 프로세서(1100)에서 실행되는 것을 특징으로 하는컴퓨팅 장치."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 점검 주기 선택 알고리즘은 시스템 신뢰도와 기기 상태에 근거로 하여 점검 주기를 결정하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서,상기 점검 주기 선택 알고리즘은 상기 점검 주기 별 총 기대 비용을 최소화하는 방향으로 유지 보수에 대한 의사 결정을 수행하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2022-0001908", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7 항에 있어서,상기 점검 주기 선택 알고리즘은 새로운 점검 주기에서 시뮬레이션 기간의 전체 기대 비용이 이번 점검 주기의기대 비용 보다 낮을 때 최적 점검 주기를 대체하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 실시 예에 따른 인공지능을 이용한 전기 설비 점검 주기를 선택하는 컴퓨팅 장치의 동작 방법은, 전기 설비 관련된 계통 및 비용 정보를 입력하는 단계, 점검 주기 셋을 정의하는 단계, 점검 주기 별, 상기 계통 및 비용 정보를 이용하여 강화학습을 수행하는 단계, 상기 강화학습에 따라 선택된 알고리즘을 평가하는 단계, 상기 점검 주기 셋의 점검 주기가 상한값보다 큰 지를 판별하는 단계, 및 상기 점검 주기가 상기 상한값보다 클 때, 상기 알고리즘을 최적 알고리즘으로 출력하는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능을 이용한 전기 설비 유지보수를 위한 컴퓨팅 장치 및 그것의 동작 방법을 제공하는 데 있다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 전력 설비를 유지보수하기 위한 방법으로 TBM(Time Based Maintenance), CBM(Condition based Maintenance)이 존재한다. TBM 방식은 실제 기기의 상태를 고려하지 않고 전문가 및 경험에 의존하여 유지보수 를 수행하기 때문에 불필요한 유지보수를 수행할 수 있다. 또한, CBM 방식은 기기의 상태를 보고 유지보수를 결 정하지만 시스템 관점으로 해석하지 않고 기기의 결함으로 인한 무조건적인 유지보수가 실행되어 Redundant 시 스템에서 과도한 유지보수를 초래할 수 있다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 최적의 점검 주기 및 효율적인 점검을 위한 인공지능을 이용한 전기 설비 유지보수를 위한 컴 퓨팅 장치 및 그것의 동작 방법을 제공하는데 있다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시 예에 따른 인공지능을 이용한 전기 설비 점검 주기를 선택하는 컴퓨팅 장치의 동작 방법은, 전 기 설비 관련된 계통 및 비용 정보를 입력하는 단계; 점검 주기 셋을 정의하는 단계; 점검 주기 별, 상기 계통 및 비용 정보를 이용하여 강화학습을 수행하는 단계; 상기 강화학습에 따라 선택된 알고리즘을 평가하는 단계;상기 점검 주기 셋의 점검 주기가 상한값보다 큰 지를 판별하는 단계; 및 상기 점검 주기가 상기 상한값보다 클 때, 상기 알고리즘을 최적 알고리즘으로 출력하는 단계를 포함할 수 있다. 본 발명의 실시 예에 따른 인공지능을 이용한 전기 설비 점검 주기를 선택하는 컴퓨팅 장치는 적어도 하 나의 프로세서; 및 점검 주기 선택 알고리즘을 저장하는 메모리 장치를 포함하고, 상기 점검 주기 선택 알고리즘은, 전기 설비 관련된 계통 및 비용 정보를 입력하고; 점검 주기 셋을 정의하는 단계, 점검 주기 별 상기 계통 및 비용 정보를 이용하여 강화학습을 수행하는 단계; 상기 강화학습에 따라 선택된 알고리즘을 평 가하고; 상기 점검 주기 셋의 점검 주기가 상한값보다 큰 지를 판별하고; 및 상기 점검 주기가 상기 상한값보다 클 때, 상기 알고리즘을 최적 알고리즘으로 출력하도록, 상기 적어도 하나의 프로세서에서 실행되는 것을 특징으로 한다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따른 전비 설비의 유지보수를 결정하는 컴퓨팅 장치 및 그것의 동작 방법은 인공지능을 이 용하여 전기 설비의 최적의 점검 주기를 결정할 수 있다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 도면들을 이용하여 본 발명의 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시 할 수 있을 정"}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "도로 본 발명의 내용을 명확하고 상세하게 기재할 것이다. 본 발명의 실시 예에 따른 전기 설비 유지보수를 위한 컴퓨팅 장치 및 그것의 동작 방법은, 인공지능(예를 들어, 강화학습) 및 계통 신뢰도 기반 전기 설비를 최적으로 유지보수하는 기법을 개시한다. 본 발명의 실시 예 에 따른 전기 설비 유지보수를 위한 컴퓨팅 장치 및 그것의 동작 방법은, 전력 설비 기기의 고장율 및 수리 시 간을 이용하여 상태 천이 확률 도출하고, 망 구조 및 비용 파라미터 입력하고, MCTS(Monte Carlo Tree Search) 로 탐색 및 생성한 데이터를 기반으로 인공 신경망의 출력 값을 입력 값과 일치시키도록 학습하고, 각 점검 주 기별로 강화학습 알고리즘을 학습하고, 이후에, 기대 비용이 최소화되는 점검 주기를 선택할 수 있다. 본 발명의 실시 예에 따른 전기 설비 유지보수를 위한 컴퓨팅 장치 및 그것의 동작 방법은, 복잡하고 규모가 큰 계통(network)에 대해서 유지보수의 점검 주기를 도출 가능하고, 신뢰도를 기반으로 효율적인 유지보수 기법을 개발 가능하게 한다. 여기서 신뢰도는 미리 정한 기간 동안 설정된 기준 내의 성능을 발휘할 수 있을 확률을 의 미한다. 또한, 신뢰도는 전력계통 측면 규정된 계통 운영상태를 만족시키면서 고객이 요구하는 양의 전력을 공급할 수 있는 계통능력의 정도이다. 여기서 규정된 계통 운영상태는 주파수와 전압이 일정 범위 수준을 만족하 고 선로와 그 외 설비의 허용 용량을 넘지 않고 외란 발생 시 계통 안전도(Security)를 만족시키는 상태를 의미 한다. 도 1은 본 발명의 실시 예에 따른 인공지능을 이용한 전기 설비 유지보수를 위한 컴퓨팅 장치를 예시적으 로 보여주는 도면이다. 도 1을 참조하면, 컴퓨팅 장치는 적어도 하나의 프로세서, 메모리 장치 , 통신 장치, 입출력 장치 및 디스플레이 장치를 포함할 수 있다. 프로세서는 전기 설비의 최적의 점검 주기를 예측하는 컴퓨팅 장치의 전반적인 동작을 제어하도록 구현될 수 있다. 또한, 프로세서는 적어도 하나의 인스트럭션(instruction)(혹은 프로그램)을 실행하도록 구현될 수 있다. 프로세서는 인스트럭션을 실행하고, 점검 주기를 컴퓨팅 장치를 제어할 수 있다. 실시 예에 있어서, 적어도 하나의 인스트럭션은, RCM(Reliability Centered Maintenance) 기법과 인공지능(혹 은, 머신 러닝)을 이용하여 점검 주기를 예측하기 위하여 점검 주기 선택 알고리즘을 구동하도록, 적어도 하나의 프로세서에서 실행될 수 있다. 일반적으로 RCM 방식은 잠재적 고장 모드와 시스템 성능에 미치는 영향을 신뢰도를 기반으로 분석하여 유지보수를 수행함으로써, 기기 및 시스템의 신뢰도를 고려하여 최적의 유 지보수 방법을 도출할 수 있다. 컴퓨팅 장치는 입출력 장치를 통하여 외부 장치(예를 들어, 퍼스널 컴퓨터 혹은 네트워크)에 연결되고, 데이터를 교환할 수 있다. 일반적으로 인공지능을 구현하는 머신 러닝(machine learning)은, 크게 지도 학습(supervised learning), 비지 도 학습(unsupervised learning), 강화학습(reinforcement learning)으로 구분될 수 있다. 지도 학습은 레이블 (label)이 정의된 훈련 데이터를 이용하는 학습으로써, 분류/회귀 문제 등에 적합하다. 비지도 학습은 레이블이 정의되지 않은 훈련 데이터를 이용하는 학습으로써, 클러스터링(clustering) 문제 등에 적합하다. 강화학습은 기존 데이터 없이도 환경과의 상호 작용을 통해 학습함으로써, 알파고 등 환경 및 보상이 정의된 환경에 적합하 다. 특히, 강화학습은 모델의 정확한 수학적 특성(예를 들어, 확률)을 알지 못해도 적용 가능하고, DP(Dynamic Programming)로 풀기 어려운 대규모의 MDP(Markov Decision Process) 모델을 푸는데 적합하다. 일반적으로 신뢰도 기반 유지보수 점검 주기 및 유지보수 여부 결정을 위해서, 특정 시점에 계통을 이루는 각 설비의 부하 공급 지장여부에 따라 유지보수 결정이 이루어져야 한다. 이때 특정 기간 동안의 비용 최적화를 위 해서 유지보수 점검주기 및 유지보수 여부 결정이 계통의 미래 시점에 미칠 영향이 복합적으로 고려되어야 한다. 이는 혼합 정수 선형 최적화 문제로 기술되고 있다. 이러한 혼합 정수 선형 최적화 문제를 풀기 위해 동 적 계획법(Dynamic Programming; DP) 등이 이용 될 수 있다. 하지만, 계통의 규모와 풀고자 하는 기간이 증가할 경우 문제의 복잡도가 지수적으로 증가함으로써, 실제 전기 계통에 적용하기에 부적합하다. 이러한 혼합 정수 선형 최적화 문제의 환경이 마르코프 의사결정 과정(Markov Decision Process; MDP)으로 설정된 경우, 인공지능 의 강화학습(Reinforcement Learning)을 이용하여 대응하는 문제를 풀 수 있다. 메모리 장치는 적어도 하나의 인스트럭션을 저장하도록 구현될 수 있다. 프로세서는 메모리 장치 에 저장된 적어도 하나의 인스트럭션이 적어도 하나의 프로세서에서 실행됨에 따라 앞서 언급된 동 작들을 수행할 수 있다. 실시 예에 있어서, 메모리 장치는 점검 주기 선택 알고리즘을 저장할 수 있다. 실시 예에 있어서, 점검 주기 선택 알고리즘은 시스템 신뢰도와 기기 상태에 근거로 하여 점검 주기를 결 정할 수 있다. 실시 예에 있어서, 점검 주기 선택 알고리즘은 점검 주기 별 총 기대 비용을 최소화하는 방향으로 유지 보수에 대한 의사 결정을 수행할 수 있다. 실시 예에 있어서, 점검 주기 선택 알고리즘은 새로운 점검 주기에서 시뮬레이션 기간의 전체 기대 비용이 이번 점검 주기의 기대 비용 보다 낮을 때 최적 점 검 주기를 대체할 수 있다. 한편, 메모리 장치는 휘발성 메모리 혹은 비휘발성 메모리로 구현될 수 있다. 메모리 장치는 이용 자의 데이터를 저장하도록 저장 장치를 포함할 수 있다. 저장 장치는 eMMC(Embedded Multimedia Card), SSD(Solid State Drive), UFS(Universal Flash Storage) 등 일 수 있다. 저장 장치는 적어도 하나의 비휘발성 메모리 장치를 포함할 수 있다. 비휘발성 메모리 장치는, 낸드 플래시 메모리(NAND Flash Memory), 수직형 낸드 플래시 메모리(Vertical NAND; VNAND), 노아 플래시 메모리(NOR Flash Memory), 저항성 램(Resistive Random Access Memory: RRAM), 상변화 메모리(Phase-Change Memory: PRAM), 자기저항 메모리(Magnetoresistive Random Access Memory: MRAM), 강유전체 메모리(Ferroelectric Random Access Memory: FRAM), 스핀주입 자화반전 메모 리(Spin Transfer Torque Random Access Memory: STT-RAM) 등이 될 수 있다.통신 장치는 외부의 네트워크와 다양한 유/무선 방식에 의해 통신을 수행하도록 구현될 수 있다. 예를 들 어, 통신 장치는 Wi-Fi(Wireless Fidelity), Wi-Fi Direct, 블루투스(Bluetooth), UWB(Ultra Wide Band) 또는 NFC(Near Field Communication), USB(Universal Serial Bus), 혹은 HDMI(High Definition Multimedia Interface), LAN(Local Area Network) 등과 같은 네트워크 통신을 수행할 수 있다. 입출력 장치는 외부 장치로부터 데이터를 입력하거나 외부 장치로 데이터를 출력하도록 구현될 수 있다. 디스플레이 장치은 LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플레이, AM-OLED(Active-Matrix Organic Light-Emitting Diode), PDP(Plasma Display Panel) 등과 같은 다양한 형태의 디스플레이로 구현될 수 있다. 일반적으로, 전기 설비를 유지보수하기 위한 방법으로 TBM(Time Based Maintenance), CBM(Condition based Maintenance)이 이용되고 있다. 하지만, 전기 설비들을 TBM이나 CBM 기법들을 이용하여 기기 단위로 유지보수 여부를 평가하고 계획을 수립할 경우, 효율성이 떨어진다. 본 발명의 실시 예에 따른 컴퓨팅 장치는 RCM(Reliability Centered Maintenance) 기법 적용을 통해 신 뢰 수준 확보 및 최소 비용의 유지보수 전력을 수립 하고, DP(Dynamic Programming) 기반인 RCM 기법의 복잡성 과 풀이 시간 등의 한계점을 극복하기 위하여 인공지능 기반의 최적의 알고리즘을 제공할 수 있다. 도 2는 본 발명의 실시 예에 따른 강화학습의 구성을 예시적으로 보여주는 도면이다. 도 2를 참조하면, 강화학 습 모델은 환경 상태 정보 (State; St), 에이전트의 행동 (Action; At), 행동에 따른 보상 (Reward; Rt)로 정의 되고 있다. 에이전트는 계통 유지보수를 수행하기 위하여 계통 환경에서 점검 주기에 따른 유지보수를 수행하고 유지보수에 따른 비용을 보상으로 설정할 수 있다. 예를 들어, 에이전트는 점검 주기 선택 알고리즘(1210, 도 1 참조)을 포 함할 수 있다. 본 발명의 실시 예에 따른 점검 주기 선택 알고리즘은 문제 설정을 근거로 강화학습 모델 을 수립하고 시뮬레이션을 통한 학습을 수행함으로써, 최적 점검 주기 및 기기 상태에 따른 최적 정비 계획이 도출될 수 있다. 이를 통해 전기 계통에서의 신뢰도 기반 유지보수가 수행될 수 있다. 예를 들어, 점검 주기 선 택 알고리즘은 임의의 계통에 대해, 특정 최적 점검 주기를 상정한 뒤 수 시간 수준의 학습과정을 거친 강화학습(reinforce learning; RL) 알고리즘들의 결과를 비교하여 계통 상태에 따른 최적 점검 주기를 도출하고, 대응하는 알고리즘에 계통의 상태가 입력될 경우 수 초 이내에 최적 정비 계획을 도출 할 수 있다. 일반적으로, 강화학습 알고리즘은, 모델 프리 강화학습(Model Free RL), 및 모델 기반 강화학습(Model Based RL)로 분류되고 있다. 모델 프리 강화학습(Model Free RL)은 천이확률 등 환경의 모델 정보를 모르더라도 주어 진 경험 데이터만으로 학습을 진행할 수 있다. 학습 데이터를 기반으로 하는 정책(policy πθ(at|st))에 집중한 다. 다량의 경험 데이터를 필요로 하여 시행 데이터 획득이 어렵지 않은 환경에서 이용된다. 모델 프리 강화학 습(Model Free RL)은 다시 정책 기반 강화학습(policy based RL)과 가치 기반 모델(value based model)로 분류 된다. 또한, 모델 기반 강화학습(Model Based RL)은 주어진 모델을 이용하거나 주어진 데이터를 통해 모델을 학 습함으로써 모델을 구축한다. 상태 간 천이확률(p(st+1|st, at))에 집중한다. 실제 환경에서의 Trial & Error 를 겪지 않고도 최적의 행동을 계획하여 행동할 수 있다. 도 3은 본 발명의 실시 예에 따른 알고리즘 학습을 위한 상태천이 및 확률값을 결정하는 방법을 예시적으로 보 여주는 도면이다. 본 발명의 실시 예에 따른 알고리즘 학습을 위해 주어진 계통의 각 설비에 대해 Semi-MDP(Semi-Modified Dynamic Programming) 모델의 구축하고, 각 MDP(Modified Dynamic Programming) 노드 간 상태 천이 확률 및 각 종 비용정보가 정의될 수 있다. 확률 변수(wk)에서 시간에서 +1 시간으로 이동할 때, 상태 천이 확률이 도출된다. 세미 마크코프 체인(Semi Markov Chain; SMC)을 적용하여 기기의 상태 변화가 정의된다. 균일화(Uniformization)을 이용하여 연속 시간 체인(Continuous Time Chain; CTC)이 이산 시간 체인(Discrete Time Chain; DTC)으로 변형된다. Uniform transition rate(γ)를 정의한 후, 균일화된 이산 시간 마크코프 체인(uniformized discrete time Markov Chain)이 확률적으로 구성된다. 여기서 세미 마크코프 체인(SMC)이론은 다음과 같다. 마크코프 체인(Markov Chain; MC)는 확률적인 움직임에 의 해서 표현되며, 초기 상태와 상태 천이 확률이 주어지면 어느 시간에 어떤 상태에 있을 지에 대한 확률을 결정하는 것이 가능하다. 마크코프 체인(MC)의 첫번째 특징은 무기억성(Memoryless property)으로써, 미래의 상태는 오직 현재의 상태에 의해서만 결정되는 것이다. 또한, 마크코프 체인(MC)의 두번째 특징은 현재 상태에 머물렀 던 시간은 무관함 사건 간의 시간에 대한 누적분포함수(CDF)는 지수함수 확률분포를 따른다. 세미 마크코프 체 인(Semi MC)은 무기억성 마크코프 체인(MC)의 특징과 동일한 특징을 갖는다. 또한, 세미 마크코프 체인(Semi MC)은 상태천이가 언제나 발생할 수 있으며 사건 간의 시간은 임의의 확률분포를 따르는 특징을 갖는다. 본 발명의 실시 예에 따른 점검 주기 선택 알고리즘은, 세미 마크코프 체인(Semi MC)을 이용함으로써 점검 상태 를 추가적으로 고려하고 유지보수 결정에 의해 임의로 사건 간의 시간을 이끌어낼 수 있다. 도 4는 마크코프 체인(MC)의 균일화(uniformization) 과정을 보여주는 도면이다. 마크코프 체인(MC)의 균일화 (Uniformization)은 다음과 같이 진행될 수 있다. 이는 연속 시간 모델을 이산 시간 모델로 바꾸는 수단이다. 전체 확률 흐름율(total probability flow rate; γ) 도출이 필요하다. 일반적인 천이행렬 matrix Q 에서 의 diagonal 요소 (Λ(i)= -qii, γ≥Λ(i) 이다. 일반적인 상태 천이 확률 도출 방법은 아래의 수학식을 만족한다. 수학식 1"}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, 이다. i는 상태에서의 상태점유시간,Γ(i)는 i 상태에서 이동 가능한 상태 set이다. 임의의 균일 비율(Uniform rate) γ 정의하면 다음의 수학식을 만족한다. 수학식 2"}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, v≥0이다. γ를 적용한 상태 천이 확률 재도출 이산 시간의 상태천이 확률은 아래의 수학식을 만족한다. 수학식 3"}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 5, "content": "도 5는 본 발명의 실시 예에 따른 알고리즘에 의거한 최적 점검 주기를 선정하는 결과를 예시적으로 보여주는 도면이다. 시뮬레이션 계통 모델을 수립한 뒤 알고리즘 학습이 수행될 수 있다. 도 5에 도시된 바와 같이, 각 점검 주기별로 학습된 알고리즘에 대해 기대 유지보수 비용이 도출될 수 있다. 기준 신뢰도 제한을 만족하는 선에서 최소 비용을 고려한 최적 점검주기가 선정될 수 있다. 도 5에 도시된 바와 같이, 점검 주기가 짧을수록 빈번한 점검으로 인하여 기대 비용이 증가하고, 점검 주기가 길수록 정전비용이 적산되어 기대 비용이 증가하고 있다. 상태 천이 확률, 유지 보수 비용, 정전비용, 점검비용 등 모든 파라미터가 복합적으로 결과에 영향을 미친다는 것이 확인된다. 즉, 파라미터의 관계에 따라 다양한 기 대비용 그래프가 도출될 수 있다. 점검 주기가 짧을수록 고장 확률이 감소하여 비가용률 지수는 감소 하지만, 점검주기가 길수록 고장확률이 증가하여 비가용률 지수가 증가한다. 한편, 최적 점검주기 도출 후 점검 주기에 따른 최적 유지보수 결정 방법에 대한 테이블이 도출될 수 있다. 설 비들이 결함상태일 때만 유지보수를 실시하여 정상상태로 이동시킬지 또는 현 상태를 유지할 것인지에 대한 최 적 선택이 결정될 수 있다. 한편, 유지보수 결정방식은 다음과 같이 진행될 수 있다. 점검주기 시, 어떤 특정 상태조합의 이동 가능한 상태 조합은 유지 보수 이행 여부에 대해서 2 가지 경로가 존재한다. 점검주기 시, 점검비용은 항상 추가되므로 유지 보수비용과 이전 단계까지 적산된 이동 가능한 상태조합들의 기대비용으로 인해 유지 보수 이행 여부가 결정된 다. 점검주기 시, 특정 조합에서 기대비용이 최소가 되는 방향으로 의사결정이 이루어지므로, 해당하는 상태조 합 중 최소 비용인 방향으로 한가지를 선택한다. 첫째 조합은 유지보수를 이행한 후의 조합에 대해서 이전 단계 까지 적산된 기대비용 + 유지보수 비용이다. 두번째 조합은 현재 상태를 유지하는 조합에 대해서 이전 단계까지 적산된 기대비용이다. 바로 이전 단계까지 적산 된 기대비용에 따라서 유지보수 이행 여부가 결정되므로 점검주 기 별로 의사결정이 다르게 나타날 수 있다. 유지보수 대상기간 내에서 점검주기 별 의사결정을 도출한 후 최빈 조합으로 유지보수 결정방식 도출될 수 있다. 도 6은 본 발명의 실시 예에 따른 최적 점점 주기 선택 알고리즘의 전체 구조를 예시적으로 보여주는 도면이다. 도 6을 참조하면, 최적 점검주기로 학습된 알고리즘(인공 신경망)은 실제 계통 내 기기 별 상태를 입력 받아 최 적 정비 여부를 결정할 수 있다. 실제 계통을 모의 계통으로 축약될 수 있다. 계통 정보를 신경망 학습에 이용 할 수 있도록 데이터화 할 수 있어야 한다. 즉, 문제 풀이를 위한 입력 파라미터가 생성될 수 있다. 이러한 입 력 파라미터는 상태 천이 확률 행렬, 상태 천이 비용 행렬, 유지 보수 비용 행렬을 포함할 수 있다. 상태 천이 확률 행렬은 다음과 같이 생성될 수 있다. 비점검주기에서 각 설비는 확률적으로 상태가 변한다. 설 비 1 개당 단위 시간당 이동 가능한 상태는 2 가지로, 현재 상태와 1 수준 노화 상태이다. n 개의 설비 들이 구 성하고 있는 상태조합 중 1 개의 조합이 이동 가능한 경로의 수는 2n 이다. 모의계통 설비 6개의 상태 천이 확률 행렬의 크기는 64 x 4096이다. 상태 천이 비용 행렬은 다음과 같이 생성될 수 있다. 특정 설비 상태 조합은 cut set method를 거쳐 시스템 정 전 상태 유무를 파악할 수 있다. 비점검주기에서 시스템 정전 상태일 경우, 시스템 정전 비용이 발생된다. 비점 검주기에서 시스템 정전 상태가 아닐 경우, 시스템 정전 비용은 0이다. 모의계통 설비 6개의 상태 천이 비용 행 렬 크기는 64 x 4096 이다. 유지 보수 비용 행렬은 다음과 같이 생성될 수 있다. 점검주기에서 점검자(inspector)의 판단에 따라 유지 보수 여부가 결정될 수 있다. 설비의 상태가 결함 상태(D1, D2)의 경우에만 선택지가 존재한다(현재 상태 혹은 정상 상태). 이동 불가능한 상태는 infinite 값 부여한다. 비용 최소를 선택함으로 해당 경로를 선택하지 않도록 유 도된다. 모의계통 설비 6개의 유지 보수 비용 행렬 크기는 4096 x 4096이다. 총 기기 상태 수가 m 인 경우, 각 기기의 현 상태를 m x 1 크기 배열로 표현될 수 있다. 현 기기 상태에 대응 하는 원소 만 1, 나머지는 0 값 부여할 수 있다. 여기서, N는 정상 상태를 지시하고, D1은 제 1 결함 상태를 지시하고, D2는 D1 보다 고장 확률이 높은 제 2 결 함 상태를 지시하고, F는 고장 상태를 지시한다. 총 기기 상태 수 (N, D1, D2, F) 인 경우, N --> [1, 0, 0,0], D1 --> [0, 1, 0, 0], D2 --> [0, 0, 1, 0], F --> [0, 0, 0, 1], D1, D2] --> [0, 1, 0, 0, 0, 0, 1] 이다. 따라서 기기 6 개 계통의 상태는 24 x 1 배열 로 변환 할 수 있다. 이는 곧 신경망의 입력 크기(input size)에 대응한다. 기기 유지보수의 결정하는 과정은 다음과 같다. 인공 신경망의 출력 크기(output size)는 기기 수와 동일하게 책정한다. 출력 계층(output layer)의 각 노드(node)는 대응하는 기기의 유지보수 확률을 표현한다. 이 중 입력 상태(input state)에서 유지보수가 이루어질 수 있는 상태(D1)인 기기에 대응하는 노드값을 확인한다. 대응하는 값은 기기 유지보수에 따른 기대비용을 최소화하는 stochastic한 확률값을 의미한다. 하지만 실제 유지보수는확률적으로 이루어질 수 없으므로 0.5를 기준으로 유지보수 여부를 결정한다. 최종적으로 계통의 모든 상태에 대해 입출력(input output) 쌍을 기록 하게 되면 유지보수 결정을 테이블(table) 형태로 도출할 수 있다. 일반적인 TBM 및 CBM 기법들은 전문가의 판단이나 기기 자체의 상태를 고려하여 유지보수를 수행하고 있다. 반 면에, 본 발명의 점점 주기 선택 알고리즘은 망 구조 및 고장확률을 이용한 최적 점검주기 도출 가능하다. 특정 기기의 결함 정도가 고장 전 상태일지라도, 망 구조 및 다른 전력설비기기들의 상태에 따라 유지보수 수행을 회 피할 수 있다. 이로써 기준 신뢰도 지수에 따라 적절한 판단 가능하다. 도 7은 본 발명의 실시 예에 따른 컴퓨팅 장치의 전기 설비 유지보수를 위한 점검 주기 선택 방법을 예시적으로 보여주는 흐름도이다. 도 7을 참조하면, 컴퓨팅 장치의 전기 설비 유지 보수를 위한 점검 주기 선택 방법은 다음과 같이 진행될 수 있다. 최초 계통 및 비용 정보가 입력될 수 있다(S110). 점검 주기 셋이 정의될 수 있다(S120). 유지보수 대 상 기간을 1년으로 가정할 수 있다. 탐색 점검 기간은 DP의 시뮬레이션 시간을 고려하여 90일(3개월) 내지 190 일(6개월) 사이에 1개월씩 수행하도록 범위에 제한 설정이 가능하다. BTR(T1, T4), LTR(L1, L2), 차단기(C1, Tie1)로 나누어 탐색 가능한 점검 기간에서모든 경우에 대해 결과가 도출될 수 있다. 예를 들어, [T1, T4, C1, L1, L2, Tie1]에 대한 점검 주기 셋 설정은 다음과 같을 수 있다. 제 1 셋은 [90, 90, 90, 90, 90, 90], 제 2 셋은 [90, 90, 120, 90, 90, 120], 제 3 셋은 [90, 90, 150, 90, 90, 150], 쪋 , 제 63 셋은 [180, 180, 150, 180, 180, 150], 제 64 셋은 [180, 180, 180, 180, 180, 180] 일 수 있다. 이후, 점검 주기를 1만큼 증가 시킨다(S130). 여기서 숫자 1은 사전에 결정된 기간일 수 있다. 점검 주기를 결 정하기 위하여 강화학습이 수행될 수 있다(S140). 강화학습에 의해 신규한 점검 주기 알고리즘이 선택되면, 신 규 알고리즘이 평가될 수 있다(S150). 예를 들어 새로운 점검주기에서의 시뮬레이션 기간 전체 기대 비용이 기 존 점검 주기 보다 낮을 경우 최적 점검 주기를 대체할 수 있다. 신규 알고리즘에 의거하여 점검 주기가 상한 값보다 큰 지가 판별될 수 있다(S160). 만일, 점검 주기가 상한 값보다 크지 않다면, S120 단계가 진행된다. 반 면에, 점검 주기가 상한 값보다 크지 않다면, 신규 알고리즘을 최적의 알고리즘으로 출력된다(S170). 상술된 과 정을 반복함으로써 최적 점검주기 및 대응하는 점검 주기 데이터로 학습된 신경망이 채택될 수 있다. 실시 예에 있어서, 점검 주기에서 시뮬레이션 기간의 전체 기대 비용을 기존 점검 주기의 기대 비용보다 낮을 경우, 점검 주기는 최적의 점검 주기로 대체될 수 있다. 실시 예에 있어서, 강화학습에서 인공 신경망의 출력 크기는 전기 설비의 기기 수와 동일할 수 있다. 실시 예에 있어서, 배전 계통 시스템 관점의 신뢰도 지수가 선 정될 수 있다. 이러한 신뢰도 지수의 최적화를 통해 전력 계통의 최소 비용이 유지될 수 있다. 도 8은 본 발명의 실시 예에 따른 강화학습 과정을 예시적으로 보여주는 흐름도이다. 도 8을 참조하면, 강화학 습 과정은 다음과 같이 진행될 수 있다. 점검 주기별로 문제를 푸는 것은 동적 계획법과 동일하다. 점검 주기 별로 서로 다른 인공 신경망이 생성될 수 있다(S141). 대응하는 점검주기에서 MCTS(Monte Carlo Tree Search)를 통해 얻어지는 데이터를 가지고 신경망 학습할 수 있다(S142). MCTS는 선택(selection), 확장(expansion), 시뮬레이션(simulation), 역전파 (backpropagation) 단계로 진행된다. 점검 주기가 아닌 경우, 각 장비의 상태가 주어진 확률에 따라 변화될 수 있다. 점검 주기의 경우, 'D1' 혹은 'D2'상태의 장비를 정비할 지 결정될 수 있다. 최초 tree 탐색 시, random 하게 정비 여부를 결정함으로써 총 비용이 시뮬레이션 된다. 신경망 학습을 통하여 파라미터가 업데이트될 수 있다(S143). 신경망 평가를 위하여 업데이트된 신규 파라미터에 대한 평가가 이루어질 수 있다(S144). 이후, 학 습 횟수가 상한값보다 큰 지가 판별될 수 있다(S145). 학습 횟수가 상한값보다 크지 않으면 S142 단계가 진행될 수 있다. 상술된 과정을 반복함으로써, 각 장비 상태에서 최적 결정이 가능하도록 tree가 확장될 수 있다. 반면 에, 학습 횟수가 상한값보다 크다면, 강화학습은 종료된다. 이러한 시뮬레이션을 진행함에 따라 과거의 state를 미래에 다시 방문할 수 있다. 또한 과거 데이터 샘플을 적 절하게 재활용하여 data efficiency가 좋아진다. 시뮬레이션 중간에도 reward(cost)가 지속적으로 누적될 수 있 다. 실시 예에 있어서, 강화학습 알고리즘은 구글 딥마인드사의 알파제로(AlphaZero)의 학습원리를 기반으로 할 수 있다. 이는 MCTS로 탐색 및 생성한 데이터를 기반으로 인공 신경망의 출력 값이 이와 일치하도록 학습시켜 function approximator로서 이용될 수 있다. 실시 예에 있어서, 강화학습 알고리즘 학습 시 점검주기는 hyperparameter로 입력 받을 수 있다. 이에 따라 각 점검주기별로 강화학습 알고리즘을 학습시켜 기대비용이 최소화되는 점검 주기가 선택될 수 있다. 도 9는 본 발명의 실시 예에 따른 강화학습의 신경망을 예시적으로 보여주는 도면이다. 최초 임의의 변수로 초 기화된 인공 신경망은 기대 보상을 최대화하는 방향, 즉 기대 유지보수비용을 최소화하는 방향으로 변수값을 조 정하며 학습이 진행될 수 있다. 신경망의 overfitting을 방지하기 위해 기존 파라미터와의 성능 비교를 통해 최 고 성능을 발휘하는 파라미터 값이 결정될 수 있다. 여기서, 신경망의 input 값은 계통 내 각 설비상태를 one- hot encoding한 값들의 나열로, 그 크기는 기기 상태 개수와 계통 내 기기수를 곱한 값에 대응할 수 있다. 신경 망의 output 값은 각 기기의 정비 여부 기대값으로, 정비가 가능한 상태의 기기들에 한해 0.5를 기준으로 정비 여부를 결정하는 값이다. 도 10은 본 발명의 실시 예에 따른 신규한 파라미터의 업데이트 과정을 예시적으로 보여주는 도면이다. 도 10은 참조하면, 파라미터 업데이트는 MCTS(Monte Carlo Tree Search)와 신경망(Neural Network)의 조합으로 이루어 질 수 있다. 각 상태(state) 에서의 최적 결정이 가능하도록 하는 policy 와 상태의 value 를 추정하는 것이 목표이다. 인공 신경망 (·) 를 구성하여 approximated policy(value) evaluation operator 로 이용 가능하다. ()=(,)일 때 각각 MCTS 에서 얻어지는 정책(*?*) 와 보상()와 같아지도록 학습이 진행될 수 있다. 학습 시의 손실 함수(loss function)은 =(-)2-*?*log+||||)2 이다. 여기서, 각 항은 상태(state)의 value, policy 그리고 regularization term 에 대응한다. 본 발명의 실시 예에 따른 인공지능을 이용한 점검주기 선택을 위한 컴퓨팅 장치 및 그것의 동작 방법은, 시스 템 신뢰도와 기기 상태에 기반한 최적 점검주기 및 유지보수 의사결정 할 수 있다. 실시 예에 있어서, 개별 설 비 및 시스템의 신뢰도를 고려하여 최적 점검주기가 도출 가능하다. 실시 예에 있어서, 점검주기 시 총 기대비 용을 최소 화하는 방향으로 의사결정이 이루어짐으로써, 특정 설비 상태조합에서 유지보수 결정방식이 도출 가 능하다. 실시 예에 있어서, 신뢰도 기반 최적화를 통해 전력 계통의 적정 신뢰 수준을 최소 비용으로 유지함으 로써 장기적인 정전피해비용 감소가 기대될 수 있다. 한편, 본 발명의 인공지능을 이용한 점검주기 선택을 위한 컴퓨팅 장치 및 그것의 동작 방법은, TBM 과 RCM의 복합적 유지보수 방식이 이용 가능하다. 일반적으로, TBM 방식은 수학적 최적성 보다는 경험을 통한 의사결정이 이루어지므로 비효율적인 유지보수 방식이 이행될 수 있으나, RCM 방식만으로 유지보수 방식을 이행할 경우 기 기의 고장률이 가변하거나 정전비용의 잘못 된 측정으로 인해 적합하지 않은 결과가 도출되어 예상치 못한 정전 피해가 발생할 수 있다. 반면에 본 발명은 RCM 분석을 통해 기존 TBM 유지보수 방식이 효율적으로 이행되고 있 었는지에 대한 지표로서 이용 가능하다. 본 발명은 RCM을 위한 기초 통계 DB 구축할 필요가 있으며, CM 방식을 적용하기 위해서는 기본적인 파라미터들 이 요구될 수 있다. 실시 예에 있어서, 설비 결함 정보는, 설비 상태 이동에 대한 고장률 및 완전고장으로부터 정상상태까지의 수리율, 설비 별 유지보수 비용, 설비 별 수리비용, 설비 별 또는 구역 별 점검비용, Feeder 하 위 부하의 정전비용을 포함할 수 있다. 또한, 본 발명은 정기적인 파라미터 점검이 이루어지면서 RCM 분석에 대한 정확도 유지 필요하다. 설비의 노화 또는 예상치 못한 이벤트에 대한 대응도 필요하다. 한편, 본 발명의 인공지능을 이용한 점검주기 선택을 위한 컴퓨팅 장치 및 그것의 동작 방법은, 대상으로 하는 계통의 규모 혹은 특성에 따라 동적 계획법 혹은 인공지능 기법을 통한 풀이를 교차하여 적용할 수 있다. 앞에서 설명된 실시 예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/혹은 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시 예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(Arithmetic Logic Unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(Field Programmable Gate Array), PLU(Programmable Logic Unit), 마이크로프로세서, 혹은 명령(Instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 혹은 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(Operating System; OS) 및 상기 운영 체제 상 에서 수행되는 하나 이상의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행 에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나"}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "가 이용되는 것으로 설명된 경우도 있지만, 대응하는 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(Processing Element) 및/혹은 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수의 프로세서 혹은 하나의 프로세서 및 하나의 제어기(Controller)를 포함할 수 있다. 또한, 병렬 프로세서(Parallel Processor)와 같은, 다른 처리 구성(Processing Configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(Computer Program), 코드(Code), 명령(Instruction), 혹은 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 혹은 결합적으로 (Collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/혹은 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 혹은 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(Component), 물리적 장치, 가상 장치(Virtual Equipment), 컴퓨터 저장 매체 혹은 장치, 혹은 전송되는 신호파(Signal Wave)에 영구적으로, 혹 은 일시적으로 구체화(Embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분 산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체 에 저장될 수 있다. 실시 예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 혹은 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시 예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 이용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(Magnetic Media), CD- ROM, DVD와 같은 광기록 매체(Optical Media), 플롭티컬 디스크(Floptical Disk)와 같은 자기-광 매체(Magneto Optical media), 롬(ROM; Read Only Memory), 램(RAM; Random Access Memory), 플래시 메모리 등과 같은 프로 그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러 에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 이용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상기된 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 이상의 소프트 웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다. 일반적으로 종래 기술은 시스템 관점에서의 신뢰도 지수를 고려하지 않았으나 본 발명은 신뢰도 지수를 기반으 로 점검 주기를 최적으로 선택할 수 있다. 종래 기술은 Topology가 변함에 따라 문제를 재구성해야 하지만, 본 발명은 Cut-set 방법론을 이용하여 유연성을 증가시킬 수 있다. 선행 기술은 동적 계획법을 이용하여 문제를 풀 기 때문에 규모가 큰 계통에 대해서 현실 시간 내에 도출할 수 없지만, 본 발명은 인공지능(강화학습) 기반으로 모든 경우의 수를 탐색하지 않으므로 결과를 도출 가능하다."}
{"patent_id": "10-2022-0001908", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "한편, 상술된 본 발명의 내용은 발명을 실시하기 위한 구체적인 실시 예들에 불과하다. 본 발명은 구체적이고 실제로 이용할 수 있는 수단 자체뿐 아니라, 장차 기술로 이용 할 수 있는 추상적이고 개념적인 아이디어인 기 술적 사상을 포함 할 것이다."}
{"patent_id": "10-2022-0001908", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이하에 첨부되는 도면들은 본 실시 예에 관한 이해를 돕기 위한 것으로, 상세한 설명과 함께 실시 예들을 제공 한다. 도 1은 본 발명의 실시 예에 따른 인공지능을 이용한 전기 설비 유지보수를 위한 컴퓨팅 장치를 예시적으 로 보여주는 도면이다. 도 2는 본 발명의 실시 예에 따른 강화학습의 구성을 예시적으로 보여주는 도면이다. 도 3은 본 발명의 실시 예에 따른 알고리즘 학습을 위한 상태천이 및 확률값을 결정하는 방법을 예시적으로 보 여주는 도면이다. 도 4는 마크코프 체인(MC)의 균일화(uniformization) 과정을 보여주는 도면이다. 도 5는 본 발명의 실시 예에 따른 알고리즘에 의거한 최적 점검 주기를 선정하는 결과를 예시적으로 보여주는 도면이다. 도 6은 본 발명의 실시 예에 따른 최적 점점 주기 선택 알고리즘의 전체 구조를 예시적으로 보여주는 도면이다. 도 7은 본 발명의 실시 예에 따른 컴퓨팅 장치의 전기 설비 유지보수를 위한 점검 주기 선택 방법을 예시적으로 보여주는 흐름도이다. 도 8은 본 발명의 실시 예에 따른 강화학습 과정을 예시적으로 보여주는 흐름도이다. 도 9는 본 발명의 실시 예에 따른 강화학습의 신경망을 예시적으로 보여주는 도면이다. 도 10은 본 발명의 실시 예에 따른 신규한 파라미터의 업데이트 과정을 예시적으로 보여주는 도면이다."}
