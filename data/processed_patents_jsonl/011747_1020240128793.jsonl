{"patent_id": "10-2024-0128793", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0145938", "출원번호": "10-2024-0128793", "발명의 명칭": "차량 중심과 승하차라 라인 비교를 통해 승하차 판단을 수행하는 알고리즘", "출원인": "엠투테크 주식회사", "발명자": "김의직"}}
{"patent_id": "10-2024-0128793", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "서버의 제어 방법에 있어서,사용자가 소지한 Tag로부터 신호를 수신한 Tag Receiver로부터, 상기 Tag와 상기 Tag Receiver 간의 예상 거리에 대한 정보를 수신하는 단계;Reference Beacon으로부터 신호를 수신한 Tag Receiver로부터, 상기 Reference Beacon과 상기 Tag Receiver 간의 예상 거리에 대한 정보를 수신하는 단계;상기 Reference Beacon과 상기 Tag Receiver 간의 상기 예상 거리를 기반으로 노이즈 레벨을 식별하는 단계;상기 노이즈 레벨에 따라, 차량에 대한 승차 라인 및 하차 라인 중 적어도 하나를 설정하는 단계; 및상기 승차 라인 및 상기 하차 라인 중 적어도 하나를, 상기 Tag와 상기 Tag Receiver 간의 상기 예상 거리와 비교하여, 상기 사용자의 상기 차량에 대한 승하차 여부를 판단하는 단계;를 포함하고,상기 서버는,승차 라인의 상태 별로 다음 액션을 선택하기 위한 Q-value가 저장된 제1 Q-table 및 하차 라인의 상태 별로 다음 액션을 선택하기 위한 Q-value가 저장된 제2 Q table을 포함하고,상기 승차 라인 및 상기 하차 라인 중 적어도 하나를 설정하는 단계는,Q러닝을 기반으로 하는 제1 에이전트에 상기 노이즈 레벨을 입력하여 Q-value를 획득하고, 상기 획득된 Q-value를 상기 제1 Q-table에 적용하여 승차 라인의 다음 상태를 판단하고,Q러닝을 기반으로 하는 제2 에이전트에 상기 노이즈 레벨을 입력하여 Q-value를 획득하고, 상기 획득된 Q-value를 상기 제2 Q-table에 적용하여 하차 라인의 다음 상태를 판단하고,상기 제어 방법은,차량의 중심을 원점으로 하고 사용자가 승차한 상태라고 판단하는 거리를 반지름으로 하는 원을 승차 라인으로식별하고,차량의 중심을 원점으로 하고 사용자가 하차한 상태라고 판단하는 거리를 반지름으로 하는 원을 하차 라인으로식별하고,승하차 판단이 이루어지지 않는 승차 라인과 하차 라인 사이의 영역을 승하차 판단 보류 구간으로 식별하는, 서버의 제어 방법."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "서버의 제어 방법이 개시된다. 본 제어 방법은, 사용자가 소지한 Tag로부터 신호를 수신한 Tag Receiver로부터, Tag와 Tag Receiver 간의 예상 거리에 대한 정보를 수신하는 단계, Reference Beacon으로부터 신호를 수신한 Tag Receiver로부터, Reference Beacon과 Tag Receiver 간의 예상 거리에 대한 정보를 수신하는 단계, Reference Beacon과 Tag Receiver 간의 예상 거리를 기반으로 노이즈 레벨을 식별하는 단계, 노이즈 레벨에 따 라, 차량에 대한 승차 라인 및 하차 라인 중 적어도 하나를 설정하는 단계, 승차 라인 및 하차 라인 중 적어도 하나를, Tag와 Tag Receiver 간의 예상 거리와 비교하여, 사용자의 차량에 대한 승하차 여부를 판단하는 단계를 포함한다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 승하차 관리 시스템 상에서 승하차 여부를 판단하는 서버에 관한 것으로, 보다 상세하게는, Q러닝을 기반으로 승하차 판단 보류 구간을 조정하는 서버에 관한 것이다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "종래 버스 위치 추적과 함께 학생 등의 통학 버스 승하차가 이루어지지 않을 경우 알림을 제공하는 시스템이 제 안된 바 있다. 이렇게 제안된 종래의 시스템의 경우, 실내에서는 장애물 및 환경 변화로 인한 신호 변동 및 노이즈를 고려해 위치 측위를 가능하게 하는 IPS가 주로 사용된다. IPS를 가능하게 하는 기술에는 Bluetooth Low Energy (BLE),UWB, Wi-Fi 등이 있다. 특히, BLE는 낮은 전력 소모, 저비용, 고가용성, 쉬운 배포 등의 장점으로 인해 LBS 뿐 만 아니라 Proximity-Based Services (PBS)에도 광범위하게 사용되고 있다. PBS는 일반적으로 Received Signal Strength Indicator(RSSI)를 사용하여 특정 디바이스들이 서로 근접해 있는 지에 대한 여부를 파악하는 데 사용된다. 이러한 근접성 기반 기술은 전시회, 박물관, 쇼핑몰 등과 같은 복잡한 실내 환경에서 방문자에게 유용한 정보를 제공 및 안내하기 위해 사용된다. 그러나 RSSI는 Multi Path Fading 및 Environmental Noise 등에 의한 큰 측정 오차를 피할 수 없으며, 이러한 오차는 위치 측위의 정확도를 저하 시킨다는 문제가 있다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 차량 주변의 노이즈 레벨에 따라 승하차 판단 보류 구간을 유동적으로 설정하여 판단의 오류를 줄이 는 서버 및 시스템을 제공한다. 본 개시는 Q러닝 기반으로 판단 기준을 업데이트함으로써 보다 정확한 승하차 판단을 수행할 수 있는 서버 및 시스템을 제공한다. 본 개시의 목적들은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 본 개시의 다른 목적 및 장점들 은 하기의 설명에 의해서 이해될 수 있고, 본 개시의 실시 예에 의해 보다 분명하게 이해될 것이다. 또한, 본 개시의 목적 및 장점들은 특허 청구 범위에 나타낸 수단 및 그 조합에 의해 실현될 수 있음을 쉽게 알 수 있을 것이다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시 예에 따른 서버의 제어 방법은, 사용자가 소지한 Tag로부터 신호를 수신한 Tag Receiver로부 터, 상기 Tag와 상기 Tag Receiver 간의 예상 거리에 대한 정보를 수신하는 단계, Reference Beacon으로부터 신호를 수신한 Tag Receiver로부터, 상기 Reference Beacon과 상기 Tag Receiver 간의 예상 거리에 대한 정보 를 수신하는 단계, 상기 Reference Beacon과 상기 Tag Receiver 간의 상기 예상 거리를 기반으로 노이즈 레벨을 식별하는 단계, 상기 노이즈 레벨에 따라, 차량에 대한 승차 라인 및 하차 라인 중 적어도 하나를 설정하는 단 계, 상기 승차 라인 및 상기 하차 라인 중 적어도 하나를, 상기 Tag와 상기 Tag Receiver 간의 상기 예상 거리 와 비교하여, 상기 사용자의 상기 차량에 대한 승하차 여부를 판단하는 단계를 포함한다. 상기 노이즈 레벨을 식별하는 단계는, 상기 Reference Beacon과 상기 Tag Receiver 간의 실제 거리를 상기 Reference Beacon과 상기 Tag Receiver 간의 상기 예상 거리와 비교하여, 노이즈 레벨을 식별할 수 있다. 한편, 상기 서버는, 승차 라인의 상태 별로 다음 액션을 선택하기 위한 Q-value가 저장된 제1 Q-table, 하차 라 인의 상태 별로 다음 액션을 선택하기 위한 Q-value가 저장된 제2 Q-table을 포함할 수 있다. 이 경우, 상기 승 차 라인 및 상기 하차 라인 중 적어도 하나를 설정하는 단계는, Q러닝을 기반으로 하는 제1 에이전트에 상기 노 이즈 레벨을 입력하여 Q-value를 획득하고, 상기 획득된 Q-value를 상기 제1 Q-table에 적용하여 승차 라인의 다음 상태를 판단하고, Q러닝을 기반으로 하는 제2 에이전트에 상기 노이즈 레벨을 입력하여 Q-value를 획득하 고, 상기 획득된 Q-value를 상기 제2 Q-table에 적용하여 하차 라인의 다음 상태를 판단할 수 있다. 이때, 상기 서버의 제어 방법은, 노이즈 레벨에 따라 승차 라인의 최소값(SLmin)을 설정하는 단계, 상기 판단된 승차 라인의 다음 상태(StSL)를 이하 수학식에 적용하여 승차 라인(SL)에 대한 리워드(rtSL)를 산출하는 단계, , 상기 산출된 리워드(rtSL)를 이하 수학식에 적용하여 상기 제1 Q-table 을 업데이트하는 단계를 포함할 수 있다. . 여 기서, 상기 at는 액션을 나타내고, 상기 γ는 discount factor이고, 상기 α는 learning rate일 수 있다. 또한, 상기 서버의 제어 방법은, 노이즈 레벨에 따라 하차 라인의 최대값(ELmax)을 설정하는 단계, 상기 판단된 하차 라인의 다음 상태(StEL)를 이하 수학식에 적용하여 하차 라인(EL)에 대한 리워드(rtEL)를 산출하는 단계, , 상기 산출된 리워드(rtEL)를 이하 수학식에 적용하여 상기 제2 Q- table을 업데이트하는 단계를 포함할 수 있다. . 상기 at는 액션을 나타내고, 상기 γ는 discount factor이고, 상기 α는 learning rate일 수 있다. 한편, 상기 승하차 여부를 판단하는 단계는, 상기 거리가 상기 차량의 중심으로부터 제1 거리에 해당하는 상기 승차 라인 이내인 경우, 상기 사용자가 승차한 것으로 판단하고, 상기 거리가 상기 차량의 중심으로부터 제2 거 리에 해당하는 상기 하차 라인을 벗어나는 경우, 상기 사용자가 하차한 것으로 판단하고, 상기 거리가 상기 승 차 라인과 상기 하차 라인의 중간 영역에 해당하는 경우, 승하차 판단을 보류할 수 있다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 따른 서버는, 주변 환경에 따라 승하차 판단 보류 구간을 유동적으로 조정하여 승하차에 대한 잘못된 판단의 가능성을 방지한다는 효과가 있다. 특히, 본 개시에 따른 서버는, Q러닝 기반의 모델을 활용함으로써 노이즈 레벨에 따라 승차 라인 및 하차 라인 각각을 독립적으로 조절할 수 있다는 장점이 있다."}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시에 대하여 구체적으로 설명하기에 앞서, 본 명세서 및 도면의 기재 방법에 대하여 설명한다. 먼저, 본 명세서 및 청구범위에서 사용되는 용어는 본 개시의 다양한 실시 예들에서의 기능을 고려하여 일반적 인 용어들을 선택하였다. 하지만, 이러한 용어들은 당해 기술 분야에 종사하는 기술자의 의도나 법률적 또는 기 술적 해석 및 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 일부 용어는 출원인이 임의로 선정한 용어 도 있다. 이러한 용어에 대해서는 본 명세서에서 정의된 의미로 해석될 수 있으며, 구체적인 용어 정의가 없으 면 본 명세서의 전반적인 내용 및 당해 기술 분야의 통상적인 기술 상식을 토대로 해석될 수도 있다. 또한, 본 명세서에 첨부된 각 도면에 기재된 동일한 참조번호 또는 부호는 실질적으로 동일한 기능을 수행하는 부품 또는 구성요소를 나타낸다. 설명 및 이해의 편의를 위해서 서로 다른 실시 예들에서도 동일한 참조번호 또 는 부호를 사용하여 설명한다. 즉, 복수의 도면에서 동일한 참조 번호를 가지는 구성요소를 모두 도시되어 있다고 하더라도, 복수의 도면들이 하나의 실시 예를 의미하는 것은 아니다. 또한, 본 명세서 및 청구범위에서는 구성요소들 간의 구별을 위하여 \"제1\", \"제2\" 등과 같이 서수를 포함하는 용어가 사용될 수 있다. 이러한 서수는 동일 또는 유사한 구성요소들을 서로 구별하기 위하여 사용하는 것이며 이러한 서수 사용으로 인하여 용어의 의미가 한정 해석되어서는 안 된다. 일 예로, 이러한 서수와 결합된 구성 요소는 그 숫자에 의해 사용 순서나 배치 순서 등이 제한되어서는 안 된다. 필요에 따라서는, 각 서수들은 서로 교체되어 사용될 수도 있다. 본 명세서에서 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또는 \"구성되다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이 들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성 요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시의 실시 예에서 \"모듈\", \"유닛\", \"부(part)\" 등과 같은 용어는 적어도 하나의 기능이나 동작을 수행하는 구성요소를 지칭하기 위한 용어이며, 이러한 구성요소는 하드웨어 또는 소프트웨어로 구현되거나 하드웨어 및 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\", \"유닛\", \"부(part)\" 등은 각각이 개별적인 특정 한 하드웨어로 구현될 필요가 있는 경우를 제외하고는, 적어도 하나의 모듈이나 칩으로 일체화되어 적어도 하나 의 프로세서로 구현될 수 있다. 또한, 본 개시의 실시 예에서, 어떤 부분이 다른 부분과 연결되어 있다고 할 때, 이는 직접적인 연결뿐 아니라, 다른 매체를 통한 간접적인 연결의 경우도 포함한다. 또한, 어떤 부분이 어떤 구성요소를 포함한다는 의미는, 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것 을 의미한다. 이하에서, 첨부된 도면을 이용하여 본 발명의 다양한 실시 예들에 대하여 구체적으로 설명한다. 도 1은 본 개시의 일 실시 예에 따른 승하차 관리 시스템의 구성 및 동작을 설명하기 위한 도면이다. 승하차 관리 시스템은, 한 명 이상의 사용자가 차량에 승차했는지 및/또는 하차했는지에 대한 정보를 획득하고, 획득된 정보를 제공할 수 있다. 여기서, 차량은 자동차(ex. 버스), 선박, 비행기 등 다양한 이동수단에 해당할 수 있다. 구체적인 예로, 승하차 관리 시스템은 어린이용 버스에 어린이들(: 사용자)이 모두 탑승했는지 여부를 판단함으 로써 안전사고를 예방할 수 있다. 도 1을 참조하면, 승하차 관리 시스템은 하나 이상의 Tag(100-1, 2, 3, …), Tag Receiver, 서버, Reference Beacon, 단말 등을 포함할 수 있다. Tag(100-1, 2, 3, …)는 각 사용자에게 소지된 단말 기기 내지는 단말 칩에 해당할 수 있다. 구체적으로, Tag는 사용자의 식별 정보 및/또는 사용자와 매칭되는 Tag의 식별 정보를 포함하는 신호를 출력(broadcasting)할 수 있다. 여기서, Tag는 Tag의 address, universal unique identifier(UUID), major, minor, transmission power, RSSI 등을 포함하는 신호를 주기적으로 출력할 수 있다. Tag Receiver는 차량 내 탑재되어 적어도 하나의 Tag를 감지하고 거리를 판단하기 위한 구성이다. 일 예로, Tag Receiver는 차량의 중심에 설치될 수 있다. Tag(100-1, 2, 3, …) 및 Tag Receiver는 BLE(Bluetooth Low Energy), Bluetooth, NFC, 적외선 통신 등 다양한 무선 통신 방식을 통해 통신을 수행할 수 있다. 일 예로, 각 Tag(100-1, 2, 3, …) 및 Tag Receiver는 BLE 방식으로 신호를 송수신할 수 있는 바, 이 경 우, 각각 BLE Tag 및 BLE Tag Receiver로 명명될 수 있다. Tag Receiver는 적어도 하나의 Tag로부터의 신호(ex. 메시지)를 수신할 수 있으며, 수신된 신호의 RSSI에 따라 Tag에 대한 거리를 식별할 수 있다. 이 경우, Tag Receiver는 선형회귀 기반 거리추정 모델(linear regression-based distance estimation model)을 사용하여 자신과 각 Tag 간의 거리를 추정한다. 이후, Tag Receiver는 Tag 및/또는 Reference Beacon의 신호(메시지)로부터 얻은 universal unique identifier(UUID), major, minor, transmissionpower, RSSI 값을 서버로 전송할 수 있다. 또한, Tag Receiver는 Tag Receiver와 각 Tag 간의 추정 거리(예상 거리)를 서버로 전달할 수 있다. Tag Receiver는 Tag로부터 메시지를 수신할 때 마다 RSSI를 측정하고, 이를 distance estimation model의 입력으로 하여 Tag Receiver와 Tag 간 거리의 추정 값을 도출한다. 다양한 차량 환경(차량 크기, 탑승 인원 등)에서 정확한 거리추정 결과가 도출되도록 하기 위해, 실측 데이터를 활용한 선형회귀 기반 거리 추정 모델(linear regression-based distance estimation model)이 Tag Receiver에 탑재될 수 있다. 먼저, RSSI와 두 디바이스(100, 200) 간 거리의 관계는 이하 수학식 1과 같이 표현될 수 있다. 수학식 1"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기에서 d는 두 디바이스, 즉 Tag Receiver와 Tag 간 거리를 나타내고, N은 환경 상수를 나타낸다. TxPower 및 RSSI는 Tag의 transmission power 및 RSSI를 나타낸다. 이러한 관계를 토대로, RSSI 및 거리의 로그 값이 각각 독립변수와 종속변수로 사용되는 선형회귀 모델(linear regression model)이 이하 수학식 2와 같이 정의될 수 있다. 수학식 2"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기에서 A와 B는 선형 회귀 모델(linear regression model)의 기울기와 절편을 각각 나타내며, 실측 훈련용 데 이터 셋을 활용하여 결정될 수 있다. 구체적으로, Tag Receiver는 실측 훈련용 데이터 셋을 획득하여 이하 수학식 3과 같이 다수의 RSSI 및 거 리 쌍의 집합으로 저장할 수 있다. 실측 훈련용 데이터 셋을 구성하는 각각의 데이터 쌍은 사용자 입력에 따라 설정되거나, 또는 서버로부터 수신된 것일 수 있다. 수학식 3"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, TD는 훈련용 데이터 셋을 의미하며, RSSIn는 (n+1)번째 메시지의 실측 RSSI이고, dn은 (n+1)번째 메시 지를 송신한 Tag와 Tag Receiver 간 실측 거리를 나타낸다. 그리고, 선형회귀 모델(linear regression model)의 기울기(A)와 절편(B)은 TD에 속한 데이터 쌍들과 최소제곱 법(Ordinary Least Squares)을 통해 도출될 수 있다. A와 B는 이하 수학식 4와 수학식 5로 산출된다. 수학식 4 수학식 5"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서, mean(RSSI) 및 mean(log(d))는 TD 내 RSSI 값들의 평균 및 TD 내 log(d) 값들의 평균을 각각 의미한다. A와 B의 값이 결정됨에 따라, Tag Receiver에 탑재된 거리추정 모델은 이하 수학식 6과 같이 정 의될 수 있다. 수학식 6"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "그리고, Tag Receiver는 Tag로부터 메시지를 수신할 때 마다 해당 모델을 활용하여 다양한 Tag와 Tag Receiver 간 거리를 추정(판단)할 수 있다. 서버는 각 사용자의 승하차 여부를 판단하기 위한 구성으로, 하나 이상의 컴퓨터를 포함하는 시스템으로 구현될 수 있다. 서버는 하나 이상의 네트워크를 통해 Tag Receiver와 통신을 수행할 수 있다. 네트워크는 영역 또는 규모에 따라 개인 통신망(PAN; Personal Area Network), 근거리 통신망(LAN; Local Area Network), 광역 통신 망(WAN; Wide Area Network) 등일 수 있으며, 네트워크의 개방성에 따라 인트라넷(Intranet), 엑스트라넷 (Extranet), 또는 인터넷(Internet) 등일 수 있다. 서버는 LTE(long-term evolution), LTE-A(LTE Advance), 5G(5th Generation) 이동통신, CDMA(code division multiple access), WCDMA(wideband CDMA), UMTS(universal mobile telecommunications system), WiBro(Wireless Broadband), GSM(Global System for Mobile Communications), DMA(Time Division Multiple Access), WiFi(Wi-Fi), WiFi Direct, Bluetooth, NFC(near field communication), Zigbee 등 다양한 무선 통 신 방식을 활용할 수 있다. 또한, 서버는 이더넷(Ethernet), 광 네트워크(optical network), USB(Universal Serial Bus), 선더볼트 (ThunderBolt) 등의 유선 통신 방식을 활용할 수도 있다. Tag Receiver로부터 서버로 전달되는 데이터는 universal unique identifier(UUID), major, minor, transmission power, RSSI, 거리(Tag Receiver를 통해 판단된 Tag 및 Tag Receiver 간의 거리) 등을 포함할 수 있다. 서버는 Tag Receiver로부터 수신된 데이터를 저장하는 한편 Tag Receiver를 통해 판단된 거리 에 따라 사용자의 승하차 여부를 판단할 수 있다. 한편, 서버는 승차 라인(start line, SL)과 하차 라인(end line, EL) 사이에 존재하는 승하차 판단 보류 구간을 실시간으로 조정할 수 있다. 이를 위해, 승차 라인 및 하차 라인 각각이 노이즈 레벨에 따라 업데이트 될 수 있다. Reference Beacon은 차량 주변의 노이즈 레벨을 측정하기 위한 구성으로, 차량 내 설치될 수 있다. Reference Beacon은 Tag Receiver로부터 특정 거리 상에 위치하고, 주기적으로 신호를 출력할 수 있 다. 노이즈 레벨은 Tag Receiver와 Reference Beacon 간의 실제 거리와 이에 대한 추정 거리(예상 거리) 간의 차이를 나타내며, 서버에 의해 계산될 수 있다. Tag Receiver는 차량의 중앙에 위치하며 각 Tag(100-1, 2, 3, …) 및 Reference Beacon으로부터 주 기적으로 전송되는 신호(메시지)를 수신할 수 있다. 그리고, Tag Receiver는 각 Tag(100-1, 2, 3, …)와 Reference Beacon의 신호(메시지)로부터 얻은 universal unique identifier(UUID), major, minor, transmission power, RSSI 값과 Tag Receiver와 각Tag 간의 추정 거리를 서버로 전달할 수 있다. 서버는 Tag Receiver로부터 수신된 각 Tag(100-1, 2, 3, …) 및 Reference Beacon의 information을 저장한다. 이후, 서버는 노이즈 레벨에 기초하여 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)을 사용함으로써 특정 사용자의 승하차 여부를 판단하고 승하차 상태를 업데이트 할 수 있다. 승하차 판단 보류 구간(도 1의 pending zone)은 승차 라인(SL)과 하차 라인(EL)에 의해 결정될 수 있다. 승차 라인은 차량의 중심을 원점으로 하고 사용자가 승차한 상태라고 판단하는 거리를 반지름으로 하는 원을 나타낼 수 있다. 하차 라인은 차량의 중심을 원점으로 하고 사용자가 하차한 상태라고 판단하는 거리를 반지름으로 하 는 원을 나타낼 수 있다. 승하차 판단 보류 구간은 주변 환경의 노이즈로 인한 잘못된 승하차 판단을 방지하기 위해, 승하차 판단이 이루 어지지 않는 승차 라인과 하차 라인 사이의 영역을 나타낸다. 단말은 판단된 승하차 여부와 관련된 정보를 제공하기 위한 기기이다. 단말은, 차량을 이용하는 사용 자 본인의 단말일 수도 있고, 및/또는 사용자(ex. 어린이, 청소년, 장애인 등)의 보호자(ex. 부모, 가족, 선생 님, 보호사, 통학 차량 운전자, 기타 보호자 등)의 단말일 수도 있다. 서버는 적어도 하나의 웹 페이지 또는 애플리케이션을 통해 단말과 연동되어 승하차 여부와 관련된 다양한 정보를 제공할 수 있다. 예를 들어, 서버는 모바일 애플리케이션을 통해, 통학 차량 운전자 및 관리자(선생님, 부모님 등 보호자) 등에 대한 인증 과정(ex. 휴대폰 번호, 개인 식별 번호 등 활용)을 수행할 수 있다. 이 경우, 서버는 복수 의 차량 중 적어도 하나의 차량(ex. 어린이용 통학 차량)을 선택하도록 하는 UI(User Interface)를 단말(ex. 스 마트폰) 상에 표시할 수 있다. 또한, 서버는 통학 차량에 탑승하는 사용자에 대한 정보를 입력 받기 위한 UI를 제공할 수 있다. 이후, 서 버는 상술한 구성들(ex. 사용자가 소지하는 Tag, Tag Receiver, Reference Beacon 등)과의 통 신에 따라 해당 사용자의 승하차 여부를 판단할 수 있다. 아울러, 서버은 사용자의 승하차 상태를 나타내는 UI, 승차/하차한 사용자의 수를 나타내는 UI, 사용자의 과거 승하차 이력을 포함하는 UI 등을 제공할 수 있다. 도 2는 본 개시의 일 실시 예에 따른 서버의 구성을 설명하기 위한 블록도이다. 도 2를 참조하면, 서버는 메모리, 통신부, 및 프로세서를 포함할 수 있다. 메모리는 서버의 구성요소들의 전반적인 동작을 제어하기 위한 운영체제(OS: Operating System) 및 서버의 구성요소와 관련된 적어도 하나의 인스트럭션 또는 데이터를 저장하기 위한 구성이다. 메모리는 ROM, 플래시 메모리 등의 비휘발성 메모리를 포함할 수 있으며, DRAM 등으로 구성된 휘발성 메모 리를 포함할 수 있다. 또한, 메모리는 하드 디스크, SSD(Solid state drive) 등을 포함할 수도 있다. 메모리는 적어도 하나의 인공지능 모델(ex. 도 4의 에이전트(321, 322))을 포함할 수 있다. 통신부는 다양한 유무선 통신방식으로 적어도 하나의 외부 장치와 통신을 수행하기 위한 회로, 모듈, 칩 등을 포함할 수 있다. 통신부는 다양한 네트워크를 통해 외부 장치들(ex. Tag Receiver, Reference Beacon, 단말 )과 연결될 수 있다. 프로세서는 서버를 전반적으로 제어하기 위한 구성이다. 구체적으로, 프로세서는 메모리와 연결되는 한편 메모리에 저장된 적어도 하나의 인스트럭션을 실행함으로써 본 개시의 다양한 실시 예들에 따른 동작을 수행할 수 있다. 프로세서는 CPU, AP, DSP(Digital Signal Processor) 등과 같은 범용 프로세서, GPU, VPU(Vision Processing Unit) 등과 같은 그래픽 전용 프로세서 또는 NPU와 같은 인공지능 전용 프로세서 등을 포함할 수 있 다. 인공지능 전용 프로세서는, 특정 인공지능 모델의 훈련 내지는 이용에 특화된 하드웨어 구조로 설계될 수있다. 도 3은 본 개시의 일 실시 예에 따른 서버의 동작을 설명하기 위한 흐름도이다. 도 3을 참조하면, 서버는 Tag Receiver로부터 적어도 하나의 Tag와 Tag Receiver 간의 예상 거 리에 대한 정보를 수신할 수 있다(S310). 본 예상 거리는, Tag Receiver가 상술한 실시 예에 따라 기반 거리추정 모델을 활용한 결과일 수 있다. 또한, 서버는 Reference Beacon과 Tag Receiver 간의 예상 거리를 식별할 수 있다(S320). 일 예로, Tag Receiver가 Reference Beacon으로부터 수신된 신호의 RSSI에 따라 예상 거리를 식별하 고, 식별된 예상 거리에 대한 정보를 서버로 전송한 결과, 서버가 예상 거리를 식별할 수 있다. 다른 예로, Tag Receiver가 Reference Beacon으로부터 수신된 신호의 RSSI를 서버로 전송한 결 과, 서버가 RSSI를 기반으로 Tag Receiver 및 Reference Beacon 간의 예상 거리를 산출할 수도 있다. 그리고, 서버는 Tag Receiver가 Reference Beacon 간의 예상 거리를 기반으로 노이즈 레벨을 식별할 수 있다(S330). 구체적으로, 서버는 Tag Receiver가 Reference Beacon 간의 실제 거리를 예상 거리와 비교하고, 차이가 클수록 노이즈 레벨이 큰 것으로 식별할 수 있다. 서버는 식별된 노이즈 레벨에 따라 차량에 대한 승차 라인 및 하차 라인 중 적어도 하나를 설정할 수 있다 (S340). 노이즈 레벨이 높은 환경일 경우 승하차 판단 보류 구간은 확장될 수 있다. 즉, 승차 라인(승하차 판단 보류 구 간의 시작 라인, SL)과 하차 라인(승하차 판단 보류 구간의 끝 라인, EL)의 거리차가 증가할 수 있다. 반대의 경우, 승하차 판단 보류 구간은 축소될 수 있다. 이 경우, Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaptation model)이 활용될 수 있는 바, 도 4 및 도 5를 통해 후술한다. 그리고, 서버는 앞서 수신된 Tag와 Tag Receiver 간의 예상 거리를, 승차 라인 및 하차 라인 중 적어 도 하나와 비교함으로써, 사용자의 차량에 대한 승하차 여부를 판단할 수 있다(S350). 구체적으로, 서버는 Tag Receiver의 위치를 기준으로 제1 거리에 있는 지점들이 연결된 원에 해당하 는 승차 라인(SL)을 식별하고, 승차 라인과 거리(Tag와 Tag Receiver 간의 거리)를 비교하여 승차 여부를 판단할 수 있다. 예를 들어, 판단된 거리가 승차 라인 이내인 경우, 사용자가 승차한 것으로 판단될 수 있다. 마찬가지로, 서버는 Tag Receiver의 위치를 기준으로 제2 거리에 있는 지점들이 연결된 원에 해당하 는 하차 라인(EL)을 식별할 수 있다. 이때, 하차 라인은 승차 라인보다 더 큰 원에 해당할 수 있다(제2 거리 > 제1 거리). 여기서, 서버는 하차 라인과 거리(Tag와 Tag Receiver 간의 거리)를 비교하여 하차 여부 를 판단할 수 있다. 예를 들어, 판단된 거리가 하차 라인을 벗어난 경우, 사용자가 하차한 것으로 판단될 수 있 다. 한편, 도 4는 본 개시의 일 실시 예에 따른 서버가 노이즈 레벨에 따라 승하차 판단 보류 구간을 업데이트하는 Q러닝 기반의 동작을 설명하기 위한 기능 블록도이다. 도 4는 승하차 판단 보류 구간 조절의 절차를 보여준다. 승하차 보류 구간 조절은 서버가 Tag Receiver로부터 Reference Beacon과의 추정 거리(dref)를 수신할 때 마다 수행될 수 있다. 구체적으로, dref가 수신되면, 서버는 dref와 Reference Beacon과 Tag Receiver 사이의 실측 거 리 간 오차를 계산하여 현재의 노이즈 레벨(σ)을 획득할 수 있다. σ는 Q러닝 기반 승하차 판단 보류 구간 조 절 모델에 입력되고, 모델은 현재의 노이즈 레벨에 따라 조절된 승차 라인(SL) 및 하차 라인(EL)을 출력할 수 있다. Q러닝 기반 승하차 판단 보류 구간 조절 모델은 승차 라인(SL) 및 하차 라인(EL)을 개별적으로 조절하기 위해 두 개의 Q러닝 에이전트들(321, 322)을 활용할 수 있다. 각각의 Q러닝 에이전트(321, 322))는 행이 State,열이 Action을 나타내고 원소로 상수 값 Q-value를 갖는 Q-table을 유지한다. 관련하여, 도 5는 각각 승차 라인 및 하차 라인에 대한 Q-table을 도시한다. 여기서, State는 각 Q러닝 에이전트들(321, 322)에 의해 선택될 수 있는 승차 라인(SL) 및 하차 라인(EL)을 나 타내고, Action은 각 Q러닝 에이전트들(321, 322)에 의해 수행될 수 있는 SL 및 EL 조절 동작(Decrease, Keep, Increase)을 나타낸다. Q-value는 각 Q러닝 에이전트들(321, 322)이 특정 State에서 Action을 결정할 때 참조하는 기준(Criteria)이며, Q-value는 각 Q-table 내에서 및 로 표현될 수 있다. SL용 Q-table 내 포함되는 State의 수(m)는, 평균점 이동 클러스터링(mean-shift clustering)을 통해 얻 어진 실측 노이즈 레벨 데이터에 대한 군집의 수와 같다. *한편, 각 State의 값(SL1, SL2, …, SLm)은 각 군집의 노이즈 레벨 범위를 통해 획득될 수 있다. 구체적으로, 서버는 각 군집의 노이즈 레벨 범위에 따라 승하차 판단의 기준 거리(reference line)에 위치한 Tag의 추 정 거리 오차들을 구분한 뒤, 각 군집 별로 구분된 오차의 평균과 승하차 판단의 기준 거리(reference line)의 차이로 각 State의 값을 결정할 수 있다. 여기서, 승하차 판단의 기준 거리(reference line), dveh는 차량의 중심을 원의 중심으로 하고, 차량을 둘러싸는 가장 작은 원의 반지름을 의미하며, 이는 차량의 크기에 따라 달라질 수 있다. 반면에, EL용 Q-table 내 포함되는 State의 값(EL1, EL2, …, ELl)은 EL의 최대값 ELmax과 EL을 결정하기 위해 승하차 판단의 기준 거리(reference line)로부터 ELmax까지 균일하게 증가하는 거리 Δd를 고려하여 구해질 수 있다. 경험적인 실험을 통해 승하차 판단의 정확도가 98% 이상을 나타내는 거리가 ELmax로 결정될 수 있다. EL 용 Q-table 내 포함되는 State의 수(l)는 이하 수학식 7과 같이 계산될 수 있다. 수학식 7"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "Q러닝 기반 승하차 판단 보류 구간 조절 모델에 노이즈 레벨(σ)이 입력되면, SL 및 EL용 Q러닝 에이전트 들(321, 322) 각각은 이하 수학식 8 및 9와 같이 현재 State(i.e., stSL 및 stEL)에서 가장 큰 Q-value를 갖는 Action(i.e., atSL 및 atEL)을 선택할 수 있다. 수학식 8"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "수학식 9"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "이후, 각 Q러닝 에이전트(321, 322)는 현재 State 및 Action을 SL determiner 및 EL determiner로 전달한다. SL determiner 및 EL determiner는 현재 Action에 따라 다음 State(st+1SL 및 st+1EL)를 결정할 수 있다. 예를 들어, stSL= EL2일 때, atSL = Increase이면 st+1SL = EL3이고, atSL = Decrease이면 st+1SL = EL1이 될 수 있다. 단, 현재 State가 더 이상 줄어들 수 없을 때 현재 Action이 Decrease이거나, 현재 State가 더 이상 늘어날 수 없을 때 현재 Action이 Increase이면, 다음 State에서 현재 State가 유지될 수 있다. 결정된 다음 State는 Getting on/off result determiner 및 각 Agent(321, 322)로 전달되어 기존 보류 구 간 및 Q-table을 갱신하는데 각각 사용된다. 또한, 결정된 다음 State는 Reward calculator(325, 326)로 전달 되어, SL 및 EL에 대한 리워드(rtSL 및 rtEL)를 계산하는데 활용되며, 각 리워드는 이하 수학식 10 및 11과 같이 계산될 수 있다. 수학식 10"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "수학식 11"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "여기에서 SLmin 및 ELmax 각각은 차량 주변의 노이즈 레벨 σ에 따라 달라지는 SL의 최소값 및 EL의 최대값을 나타 낸다. 즉, 이는 노이즈 레벨에 따라 선형회귀 기반 거리 추정 모델을 통해 도출될 수 있는 가장 가까운 SL 및 가장 먼 EL을 나타낸다. 승하차 판단의 오류를 최소화하기 위해, 노이즈 레벨이 높을수록 승하차 판단 보류 구 간의 범위가 증가되고 반대의 경우 감소될 수 있다. SLmin 및 ELmax 각각은 이하 수학식 12 및 13에 의해 계산될 수 있다. 수학식 12"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "수학식 13"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "리워드가 계산되면, 서버는 이하 수학식 14 및 15을 사용하여 각 Q러닝 에이전트(321, 322)에 포함된 Q- table을 업데이트할 수 있다. Q-table은 승하차 보류 구간 조절이 수행될 때 마다 누적하여 업데이트될 수 있다.수학식 14"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "수학식 15"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 15, "content": "여기에서 γ은 미래의 보상에 대해 얼마나 많은 가중치를 부여할 것인지에 대해 영향을 미치는 discount factor 를 나타내고, 이는 0과 1 사이의 값으로 설정될 수 있다. α는 learning rate를 의미하며, 이는 0과 1 사이의 값으로 설정될 수 있다. 한편, 이하 도면들을 통해서는, 실험을 통해 본 개시에 따른 승하차 관리 시스템의 성능이 평가된 내용을 설명 한다. 제안하는 선형회귀 기반 거리추정 모델(linear regression-based distance estimation model) 및 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaptation model)의 성능을 평가하기 위해, Python을 기반으로 머신 러닝 모델이 구현되었으며, 실험 결과를 기존의 iBeacon 기반의 거리추정 및 승하차 판 단 접근방식(https://developer.apple.com/ibeacon/)과 비교하였다. 제안하는 두 모델의 우수성을 입증하기 위 해 experimental results는 기존의 거리 추정 모델 및 고정된 승하차 판단 보류 구간을 사용하는 모델과 비교되 었다. 사용자들에 의해 사용되는 BLE Tags와 Reference Beacon이 BLE 4.0 버전 하에 사용되었으며, BLE Tag가 -59 dBm의 transmission power로 500ms마다 주기적으로 메시지를 브로드캐스트 하도록 설정되었다. 이하 표 1은 본 실험에서 사용된 서버의 사양을 보여준다. 서버에는 Q러닝 기반 승하차 판단 보류 구간 조절 모 델(Q-learning-based pending zone adaptation model)이 탑재되어 있다. 표 1 Component Description Operating system Windows 10 Pro 64 bit Processor Intel core i7-8700 CPU 3.20GHz HDD 500 GB RAM 8 GB Web server Apache Tomcat Database MySQL 본 개시에 따른 승하차 관리 시스템의 선형회귀 기반 거리추정 모델(linear regression-based distance estimation model)에 대한 실험 결과는 iBeacon의 거리 추정 알고리즘의 실험 결과와 비교되었으며, 본 개시에 따른 승하차 관리 시스템의 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaptation model)의 실험 결과는 고정된 승하차 판단 구간 알고리즘의 승하차 판단 정확도 실험 결과와 비교되 었다.실험에 필요한 데이터 셋(dataset) 구축을 위해, 통학 차량과 유사한 실험 공간에서 BLE Tag Receiver가 배치되었고, BLE Tag Receiver로부터 [0.25, 0.50, 0.75, 1.00, 1.25, 1.50, 1.75, 2.00, 2.25, 2.50, 3.00, 3.50, 4.00, 4.50, 5.00] m의 거리에 각 하나의 BLE Tag가 배치되어, 총 15개의 BLE Tag들이 배치되었다. 그리고, BLE Tag Receiver로부터 1m 거리에 배치된 하나의 Reference Beacon이 데이터를 수집했다. 따라서, 총 16개의 BLE Tag들로부터 MAC address, major, minor, RSSI, transmission power 등이 수집되었다. 이와 함께, BLE Tag Receiver의 메시지 수신 시간, 선형회귀 기반 거리추정 모델(linear regression-based distance estimation model)을 통해 도출된 추정 거리, 및 BLE Tag Receiver와 특정 BLE Tag 간 측정 거리를 포함하는 데이터 셋이 활용되었다.본 개시에 따른 승하차 관리 시스템의 선형회귀 기반 거리추정 모델(Linear regression-based distance estimation model)은, 이하 수학식 16으로 정의되는 종래의 iBeacon 기반 거리 추정 모델(iBeacon-based distance estimation model)과 비교되었다. 수학식 16"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 16, "content": "도 6은 본 개시의 일 실시 예에 따른 승하차 관리 시스템이 선형 회귀 모델을 결정하는 과정을 보여준다. 훈련용 데이터 셋은 수학식 3과 같이 각 BLE Tag의 RSSI와 BLE Tag 및 BLE Tag Receiver 간 거리에 대한 로그 값으로 구성된다. 도 6에서, 점은 각 BLE Tag의 RSSI와 BLE Tag 및 BLE Tag Receiver 간 거리의 로그 값을 나 타낸다. 또한, 직선은 BLE Tag의 RSSI와 BLE Tag 및 BLE Tag Receiver 간 거리의 로그 값 간의 관계를 나타내 는 선형회귀 모델(linear regression model)을 나타낸다. 수학식 6을 통해 선형회귀 모델(linear regression model)의 기울기와 절편은 각각 -0.02919539와 -1.71595373 으로 계산될 수 있다. 기울기와 절편이 이러한 선형회귀 모델(linear regression model)은 BLE Tag의 RSSI가 증가하면 BLE Tag 및 BLE Tag Receiver 간 거리의 로그 값이 감소함을 보여준다. 도 7은 본 개시의 일 실시 예에 따른 시스템의 선형 회귀 모델이 활용된 거리 추정과 iBeacon 방식의 거리 추정 간의 정확도 차이를 도시하기 위한 그래프이다. BLE Tag 및 BLE Tag Receiver 간 추정 거리는 훈련용 데이터 셋을 활용하여 결정된 선형회귀 모델(linear regression model)의 기울기와 절편을 통해 이하 수학식 17과 같이 도출된 BLE Tag 및 BLE Tag Receiver 간의 거리 추정 모델을 사용하여 계산된다. 수학식 17"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 17, "content": "두 거리 추정 모델 모두에서, RSSI가 증가할수록 BLE Tag 및 BLE Tag Receiver 간 추정 거리는 감소한다. 왜냐 하면 RSSI는 거리가 증가함에 따라 지수적으로 감소하기 때문이다. 두 거리 추정 모델로부터 얻어진 추정 거리를 사용하여 BLE Tag와 BLE Tag Receiver 간 추정 거리와 실측 거리 사이의 오차가 계산되었다. 이하 표 2는 BLE Tag와 BLE Tag Receiver 간 추정 거리와 실측 거리 사이의 오차를 보여준다. BLE Tag와 BLE Tag Receiver 간 실측 거리 및 추정 거리 사이의 차이는 root mean square error(RMSE)를 사용하여 계산되었다. 표 2"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 18, "content": "BLE Tag와 BLE Tag Receiver 간 실측 거리가 3.5, 4, 4.5m인 경우를 제외하고는, 본 개시에 따른 승하차 관리 시스템의 선형회귀 기반 거리 추정 모델(linear regression-based distance estimation model)이 iBeacon 기반 거리 추정 모델(iBeacon-based distance estimation model)보다 더 작은 오차를 보였다. 왜냐하면 이상적인 환 경만을 고려한 iBeacon 기반 거리 추정 모델(iBeacon-based distance estimation model)과 달리, 선형회귀 기반 거리 추정 모델(linear regression-based distance estimation model)은 통학 차량과 유사한 환경에서 수집 된 데이터 셋을 사용하여 실측 거리와 추정 거리 간의 오차를 최소화할 수 있도록 학습된 선형회귀 모델(linear regression model)을 사용하기 때문이다. 정량적으로, 선형회귀 기반 거리 추정 모델(linear regression-based distance estimation model)이 iBeacon 기반 거리 추정 모델(iBeacon-based distance estimation model)보다 평균적으로 41.44% 더 작은 오차를 보였다. 통학 차량 주변의 노이즈로 인해 사용자가 승차 상태임에도 불구하고 하차 상태로 잘못된 판단을 하지 않도록 하기 위해, 노이즈 레벨에 따라 SL agent 및 EL agent를 위한 state가 결정될 필요가 있다. 이를 위해, 평균점 이동 클러스터링(mean-shift clustering)을 통해 노이즈 레벨 실측 데이터에 대한 군집을 생 성하였다. 도 8은 SL 및 EL agent 각각의 Q-table의 states 결정을 위해 사용되는 노이즈 레벨 실측 데이터에 대해 생성된 군집을 보여준다. 평균점 이동 클러스터링(mean-shift clustering)을 통해 생성된 군집은 총 3개이다. 이하 표 3은 3개의 생성된 군집 각각에 대한 인덱스, 노이즈 레벨의 범위 및 reference line에 대한 추정 거리 오차 평균을 보여준다. 군집의 인덱스가 작을수록 주변 환경의 노이즈가 약하다. 반면에 클러스터의 인덱스가 클수록 주변 환경의 노이즈가 심하다. 따라서, 군집의 인덱스가 작을수록 군집에 해당되는 노이즈 레벨 범위의 값이 작으며, 이에 따라 해당 군집의 평균적인 거리 추정 오차 값이 작다. 표 3"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 19, "content": "이러한 노이즈 레벨 클러스터링(noise level clustering) 결과는 SL 및 EL agent를 위한 states 결정에 사용되 었다. 구체적으로, SL agent의 states의 개수는 노이즈 레벨 클러스터링(noise level clustering)을 통해 도출 된 노이즈 레벨 클러스터(noise level cluster)의 개수와 동일한 3으로 설정되었다. SL agent의 states는 reference line에서 reference line에 대한 추정 거리 오차 평균을 뺀 값으로 결정된다. 1.5 m가 reference line으로 고려되었다. 이에 따라, SL agent의 states는 1.46, 1.41, 1.23으로 구성된다. EL agent를 위한 states를 결정하기 위해, 승하차 판단 기준 거리(reference line)로부터 ELmax까지 균일하게 증 가하는 Δd가 0.5로 설정되었다. 또한, ELmax는 실험을 통해 승하차 판단의 정확도가 98% 이상을 나타내는 4m로 설정되었다. 이에 따라, EL agent를 위한 states는 1.50, 2.00, 2.50, 3.00, 3.50, 4.00로 구성되었다. 이하 표 4는 SL agent와 EL agent를 위한 states를 나타낸다. 노이즈가 심한 경우, 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)에 의해 승차 라인 및 하차 라인 각각이 1.23m 및 4m로 결정됨으로써, 승하차 판단 보류 구간의 폭이 최대 2.73 m까지 확장될 수 있다. 반면에, 노이즈가 약한 경우, 승하차 판단 보류 구간의 폭은 최소 0.04m까지 축소될 수 있다. 표 4"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 20, "content": "본 개시에 따른 승하차 관리 시스템의 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)의 성능 평가를 위해, 승하차 판단 정확도가 고정된 승하차 판단 보류 구간을 사용하는 모 델(fixed pending zone model)과 승하차 판단 보류 구간을 사용하지 않는 모델(no pending zone model)이 비교 되었다. 또한, 거리 추정 모델이 승하차 판단의 정확도에 미치는 영향을 비교하기 위해, 선형회귀 기반 거리 추정 모델 (linear regression-based distance estimation model) 및 iBeacon 기반 거리 추정 모델(iBeacon-based distance estimation model)을 사용한 경우를 구분하여 실험이 진행되었다. 고정된 승하차 판단 보류 구간을 사용하는 모델(fixed pending zone model)의 승차 라인 및 하차 라인은 각각 1.5m 및 4m이다. 승하차 판단 보류 구간을 사용하지 않는 모델(no pending zone model)의 승하차 판단을 위한 기준 라인은 1.5m이다. 거리 추정 모델을 통해 도출된 각 BLE Tag와 BLE Tag Receiver 간 추정 거리에 대한 이 동평균 값이 승하차 판단에 사용되었다. 실험에서, BLE Tag와 BLE Tag Receiver 간 추정 거리가 승차 라인보다 작은 경우, 해당 BLE Tag를 승차 상태로 판단하고, 하차 라인보다 큰 경우 해당 BLE Tag를 하차 상태로 판단한다. BLE Tag와 BLE Tag Receiver 간 추정 거리가 승차 라인보다 크고 하차 라인보다 작다면 승하차 판단을 보류한다. 즉, 승하차 판단 보류 시, 해당 BLE Tag의 승하차 상태를 이전 값과 동일하게 유지한다. 여기서, 실제 승하차 상태와 추정 승하차 상태가 동일한 경우의 수를 전체 승하차 상태의 수로 나눈 값이 승하 차 판단의 정확도로 사용되었다. 이하 표 5는 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)을 사용한 승하차 판단 실험 결과를 보여준다. 표 5"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 21, "content": "거리 추정 모델과 상관없이 Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)이 고정된 승하차 판단 보류 구간을 사용하는 모델(fixed pending zone model)과 승하차 판단 보류 구간을 사용하지 않는 모델(no pending zone model)보다 더 높은 승하차 판단 정확도를 보였다. 전반적으로, 거리가 증가함에 따라 모든 승하차 판단 보류 구간 모델의 승하차 판단의 정확도는 증가하였다. 이 는 거리가 증가할수록 BLE Tag Receiver에 도달하는 BLE Tag의 신호 세기의 감쇄가 증가하여, 승하차 판단의 기 준 라인으로 고려한 1.5m 이상에서는 1.5m 이내의 승차 판단과 비교하여 하차 판단이 상대적으로 정확하게 이루 어지기 때문이다. 정량적으로, Q러닝 기반 승하차 판단 보류 구간 조절 모델(Q-learning-based pending zone adaption model)은 fixed pending zone model 및 no pending zone model과 비교하여 평균적으로 각각 4.65% 및 6.56% 높은 승하차 판단의 정확도를 보였다. 한편, 이상에서 설명된 다양한 실시 예들은 서로 저촉되지 않는 한 둘 이상의 실시 예가 함께 구현될 수 있다. 한편, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어(hardware) 또는 이들의 조합된 것 을 이용하여 컴퓨터 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 하드웨어적인 구현에 의하면, 본 개시에서 설명되는 실시 예들은 ASICs(Application Specific Integrated Circuits), DSPs(digital signal processors), DSPDs(digital signal processing devices), PLDs(Programmable logic devices), FPGAs(field programmable gate arrays), 프로세서(processor), 제어기 (controller), 마이크로 컨트롤러(micro-controllers), 마이크로 프로세서(microprocessor), 기타 기능 수행을 위한 전기적인 유닛(unit) 중 적어도 하나를 이용하여 구현될 수 있다. 일부의 경우에 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨어 모듈들로 구현될 수 있다.상술한 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 작동을 수행할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 서버 또는 단말의 처리동작을 수행하기 위한 컴퓨터 명령어 (computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium)에 저 장될 수 있다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었을 때 상술한 다양한 실시 예에 따른 전자 장치의 처리 동작을 상술한 기기가 수행하도록 한다. 비일시적 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니 라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 구체적으로는, 상 술한 다양한 어플리케이션 또는 프로그램들은 CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등과 같은 비일시적 판독 가능 매체에 저장되어 제공될 수 있다. 또한, 이상에서는 본 발명의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2024-0128793", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 22, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해돼서는 안 될 것이다."}
{"patent_id": "10-2024-0128793", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시 예에 따른 승하차 관리 시스템의 구성 및 동작을 설명하기 위한 도면, 도 2는 본 개시의 일 실시 예에 따른 서버의 구성을 설명하기 위한 블록도, 도 3은 본 개시의 일 실시 예에 따른 서버의 동작을 설명하기 위한 흐름도, 도 4는 본 개시의 일 실시 예에 따른 서버가 노이즈 레벨에 따라 승하차 판단 보류 구간을 업데이트하는 Q러닝 기반의 동작을 설명하기 위한 기능 블록도, 도 5는 본 개시의 일 실시 예에 따른 서버가 승차 라인 및 하차 라인을 각각 업데이트하기 위해 활용하는 Q- table을 도시한 도면, 도 6은 본 개시의 일 실시 예에 따른 시스템이 선형 회귀 모델을 식별하는 과정에서 활용되는 훈련 데이터 셋이 도시된 그래프, 도 7은 본 개시의 일 실시 예에 따른 시스템의 선형 회귀 모델이 활용된 거리 추정과 iBeacon 방식의 거리 추정 간의 정확도 차이를 도시하기 위한 그래프, 그리고 도 8은, 본 개시의 일 실시 예에 따라 서버를 통해 구동되는 에이전트들이 승차 라인 및 하차 라인을 각각 판단 하는 과정에서 생성된 노이즈 레벨의 군집을 도시하기 위한 그래프이다."}
