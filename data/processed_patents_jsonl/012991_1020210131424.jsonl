{"patent_id": "10-2021-0131424", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0048686", "출원번호": "10-2021-0131424", "발명의 명칭": "한글로 표현된 숫자 표현 추출 방법 및 시스템", "출원인": "에스케이 주식회사", "발명자": "서대웅"}}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "숫자 표현 추출 시스템이, 입력 문장을 토큰화(tokenizing)하는 단계;숫자 표현 추출 시스템이, 토큰들의 품사를 판별하고, 판별된 품사에 따라 숫자 표현에 해당하는 토큰을 추출하는 단계; 숫자 표현 추출 시스템이, 추출된 토큰을 기저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 저장하는 단계; 및 숫자 표현 추출 시스템이, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환하는 단계;를 포함하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,숫자로 변환하는 단계는, 리스트에 포함된 숫자 목록을 기반으로 이전 토큰과 현재 토큰의 길이를 비교하여, 현재 토큰의 길이가 이전 토큰보다 짧으면 더하기 연산자를, 현재 토큰의 길이가 이전 토큰보다 길면 곱하기 연산자를 삽입하는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,숫자로 변환하는 단계는, 이전 토큰과 현재 토큰의 길이 비교 시, 토큰의 길이가 같으면, 정확한 숫자 표현이 아니므로 연산하지 않고 문자열 형태로 반환하는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 2에 있어서,숫자로 변환하는 단계는, 이전 토큰과 현재 토큰의 길이 비교 시, 현재 토큰의 길이가 5 자리 이상이면, 이제까지 변환된 연산식을 한번연산하여, 숫자로 변환하는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서,숫자로 변환하는 단계는, 한글 표현으로 '분의' 또는 '분에'라는 표현이 포함된 토큰의 경우, '&' 기호 또는 '/' 기호를 사용하여 변환하고, 공개특허 10-2023-0048686-3-'&' 기호 사용 시, '분모, &, 분자' 순으로 변환되도록 하고, '/' 기호 사용 시, '분자, /, 분모' 순으로 변환되도록 하는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,숫자로 변환하는 단계는, 한글 표현으로 '쩜' 또는 '점'이라는 표현이 포함된 토큰의 경우, '.'기호를 사용하여 변환하고,보다 정확한 소수 표현으로 변환되도록, 숫자에 이어서 '.' 기호가 등장하면, 같은 자릿수라도 함께 연산되도록하는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,품사 판별 및 토큰 추출 단계는,숫자 표현의 앞 또는 뒤에 배치되는 관형사를 기반으로 현재 토큰이 숫자 관련 표현인지 여부를 판별함으로써,숫자와 동일한 한글 철자를 갖고 있으나 다른 의미를 지닌 명사를 숫자 관련 표현에서 제외시키는 것을 특징으로 하는 한글로 표현된 숫자 표현 추출 방법."}
{"patent_id": "10-2021-0131424", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "입력 문장을 토큰화(tokenizing)하며, 토큰들의 품사를 판별하고, 판별된 품사에 추출된 토큰을 기저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 포함시키고, 리스트에 포함된 숫자 목록을 기반으로토큰을 숫자로 변환하는 프로세서; 및 프로세서가 동작함에 있어 필요한 프로그램 및 데이터를 저장하기 위한 저장 공간을 제공하는 저장부;를 포함하는 한글로 표현된 숫자 표현 추출 시스템."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공지능을 기반으로 한글로 표현된 숫자 표현을 추출하는 방법 및 시스템이 제공된다. 본 발명의 실시예에 따른 한글로 표현된 숫자 표현 추출 방법은, 숫자 표현 추출 시스템이, 입력 문장을 토큰화(tokenizing)하는 단계; 숫 자 표현 추출 시스템이, 토큰들의 품사를 판별하고, 판별된 품사에 따라 숫자 표현에 해당하는 토큰을 추출하는 단계; 숫자 표현 추출 시스템이, 추출된 토큰을 기저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리 스트에 저장하는 단계; 및 숫자 표현 추출 시스템이, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환 하는 단계;를 포함한다. 이에 의해, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추출하여 이를 정수형 (Integer type)으로 변환해 컴퓨터로 처리함으로써, 챗봇(Chatbot)과 같은 대화형 엔진에서 확실한 표현을 추론 엔진을 거치지 않고 정확하고 빠르게 처리하도록 할 수 있다."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능을 기반으로 하는 자연어 처리(Natural Language Processing) 방법에 관한 것으로, 더욱 상 세하게는 인공지능을 기반으로 한글로 표현된 숫자 표현을 추출하는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "한글로 표현된 숫자 표현을 처리하기 위해서는 문자열 타입(String type)이 아닌 정수형(Integer type)으로 변 환이 필요하나 기존에 완벽하게 한글로 표현된 숫자 표현을 찾아 내 변환 해 주는 기능이 존재하지 않았고, 유 사하게 duckling이라는 오픈소스(open source)가 존재하나, 한국어 토크나이징(토큰화, tokenizing)이 포함되지 않는 문제점이 존재한다. 예를 들어, '그럼 이만 안녕' 과 같은 표현에서도 '이만'을 숫자 이만으로 인식해 버 리는 문제점이 있었다. 또, 사용하는 사람이 많지 않은 프로그래밍 언어인 haskell 언어로 되어 있어, AI 개발자들에게 보다 널리 사용"}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "되는 오픈소스 프로그래밍 언어인 파이썬(python) 개발자들에 대해 접근성이 떨어지는 문제가 있었다.발명의 내용"}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로서, 본 발명의 목적은, 한국어 문장 내에 표현 된 숫자 관련 표현을 정확하게 추출하여 이를 정수형(Integer type)으로 변환해 컴퓨터로 처리할 수 있도록 하 는 한글로 표현된 숫자 표현 추출 방법 및 시스템을 제공함에 있다."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른, 한글로 표현된 숫자 표현 추출 방법은, 숫자 표현 추 출 시스템이, 입력 문장을 토큰화(tokenizing)하는 단계; 숫자 표현 추출 시스템이, 토큰들의 품사를 판별하고, 판별된 품사에 따라 숫자 표현에 해당하는 토큰을 추출하는 단계; 숫자 표현 추출 시스템이, 추출된 토큰을 기 저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 저장하는 단계; 및 숫자 표현 추출 시스템 이, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환하는 단계;를 포함한다. 그리고 숫자로 변환하는 단계는, 리스트에 포함된 숫자 목록을 기반으로 이전 토큰과 현재 토큰의 길이를 비교 하여, 현재 토큰의 길이가 이전 토큰보다 짧으면 더하기 연산자를, 현재 토큰의 길이가 이전 토큰보다 길면 곱 하기 연산자를 삽입할 수 있다. 또한, 숫자로 변환하는 단계는, 이전 토큰과 현재 토큰의 길이 비교 시, 토큰의 길이가 같으면, 정확한 숫자 표 현이 아니므로 연산하지 않고 문자열 형태로 반환할 수 있다. 그리고 숫자로 변환하는 단계는, 이전 토큰과 현재 토큰의 길이 비교 시, 현재 토큰의 길이가 5 자리 이상이면, 이제까지 변환된 연산식을 한번 연산하여, 숫자로 변환할 수 있다. 또한, 숫자로 변환하는 단계는, 한글 표현으로 '분의' 또는 '분에'라는 표현이 포함된 토큰의 경우, '&' 기호 또는 '/' 기호를 사용하여 변환하고, '&' 기호 사용 시, '분모, &, 분자' 순으로 변환되도록 하며, '/' 기호 사 용 시, '분자, /, 분모' 순으로 변환되도록 할 수 있다. 그리고 숫자로 변환하는 단계는, 한글 표현으로 '쩜' 또는 '점'이라는 표현이 포함된 토큰의 경우, '.'기호를 사용하여 변환하고, 보다 정확한 소수 표현으로 변환되도록, 숫자에 이어서 '.' 기호가 등장하면, 같은 자릿수 라도 함께 연산되도록 할 수 있다. 또한, 품사 판별 및 토큰 추출 단계는, 숫자 표현의 앞 또는 뒤에 배치되는 관형사를 기반으로 현재 토큰이 숫 자 관련 표현인지 여부를 판별함으로써, 숫자와 동일한 한글 철자를 갖고 있으나 다른 의미를 지닌 명사를 숫자 관련 표현에서 제외시킬 수 있다. 한편, 본 발명의 다른 실시예에 따른, 한글로 표현된 숫자 표현 추출 시스템은, 입력 문장을 토큰화 (tokenizing)하며, 토큰들의 품사를 판별하고, 판별된 품사에 추출된 토큰을 기저장된 사전(Dictionary)을 기반 으로 숫자 형태로 치환하여 리스트에 포함시키고, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환하 는 프로세서; 및 프로세서가 동작함에 있어 필요한 프로그램 및 데이터를 저장하기 위한 저장 공간을 제공하는 저장부;를 포함한다."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상 설명한 바와 같이, 본 발명의 실시예들에 따르면, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추 출하여 이를 정수형(Integer type)으로 변환해 컴퓨터로 처리함으로써, 챗봇(Chatbot)과 같은 대화형 엔진에서 확실한 표현을 추론 엔진을 거치지 않고 정확하고 빠르게 처리하도록 할 수 있다."}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 도 1은, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 시스템의 설명에 제공된 도면이다. 본 실시예에 따른 한글로 표현된 숫자 표현 추출 시스템(이하에서는 '숫자 표현 추출 시스템'으로 총칭하기로 함)은, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추출하여, 정수형(Integer type)으로 변환하기 위 해 마련된다. 이를 위해, 숫자 표현 추출 시스템은, 통신부, 프로세서 및 저장부를 포함할 수 있다. 통신부는, 네크워크에 연결되어, 프로세서가 동작함에 있어 필요한 데이터를 송수신할 수 있다. 저장부는, 프로세서가 동작함에 있어 필요한 프로그램 및 데이터를 저장하기 위해 마련되는 저장매체 이다. 프로세서는, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추출하여, 이를 정수형으로 변환하기 위 한 제반사항을 처리하기 위해 마련된다. 구체적으로, 프로세서는, 한국어 문장으로 이루어지는 입력 문장을 토큰화하고, 한국어 토큰 중 숫자 표현 인 토큰들만 추출하여, 숫자 형태로 변환할 수 있다. 예를 들면, 프로세서는, 한국어 문장으로 이루어지는 입력 문장을 토큰화(tokenizing)하며, 토큰들의 품사 를 판별하여, 숫자 표현에 해당하는 토큰을 추출할 수 있다. 그리고 프로세서는, 추출된 토큰을 기저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 포함시킬 수 있다. 예를 들어, 만오천사십오의 경우, 프로세서의 의해 \"만, 오, 천, 사, 십, 오\"로 토큰화되므로 이를 숫자 형태로 치환하면, ['10000', '5', '1000', '4', '10', '5']로 치환될 수 있다. 또한, 프로세서는, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환할 수 있다. 즉, 프로세서는, 한국어 문장을 토큰화하여, 각 토큰의 품사를 파악한 다음, 품사가 숫자에 해당하는 토큰 만을 추출하여 숫자로 치환하고, 이를 리스트에 포함시킨 후, 새로운 토큰(string type)이 입력되면, 입력된 토 큰과 리스트에 포함된 토큰의 자릿수(길이)를 비교하고, 비교 결과에 따라 연산기호를 삽입시키며, integer 형 태로 변환하는 절차를 반복(iteration) 수행할 수 있다. 도 2는, 본 발명의 일 실시예에 따른 프로세서의 구성 설명에 제공된 도면이다. 도 2를 참조하면, 프로세 서는, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추출하여, 이를 정수형으로 변환하기 위해, 토 큰화 과정을 수행하는 토큰화 모듈 및 토큰을 숫자로 변환하는 변환 과정을 수행하는 숫자 변환 모듈(22 0)을 포함할 수 있다. 토큰화 모듈은, 한국어 문장으로 이루어지는 입력 문장을 토큰화하며, 토큰들의 품사를 판별하여, 숫자 표 현에 해당하는 토큰을 추출할 수 있다. 구체적으로, 토큰화 모듈은, 오픈소스 라이브러리인 Mecab을 활용하여, 토큰들의 품사를 판별하여, 관형사 (MM) 또는 수사(NR)와 같이 숫자와 관련된 품사를 추출하고, 숫자가 그대로 표현된 SN 품사를 지닌 토큰들을 기 저장된 사전(Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 포함시킬 수 있다. 예를 들면, 토큰화 모듈은, 한국어 문장이 만오천사십오라는 SN 품사를 포함하는 경우, \"만, 오, 천, 사, 십, 오\"로 토큰화되므로 이를 숫자 형태로 치환하면, ['10000', '5', '1000', '4', '10', '5']로 치환될 수 있다. 그리고 토큰화 모듈은, 토큰들의 품사 판별 및 숫자 표현에 해당하는 토큰 추출 과정에서 숫자 표현의 앞 또는 뒤에 배치되는 관형사를 기반으로 해당 토큰이 숫자 관련 표현인지 여부를 판별함으로써, 숫자와 동일한 한글 철자를 갖고 있으나 다른 의미를 지닌 명사를 숫자 관련 표현에서 제외시킬 수 있다. 예를 들면, 토큰화 모듈은, 토큰들의 품사 판별 및 숫자 표현에 해당하는 토큰 추출 과정에서 숫자 1과 동 일한 한글 철자를 갖고 있으나 숫자 표현이 아닌 날을 세는 단위 명사(일, day) 또는 어떤 내용을 가진 상황이 나 장면을 의미하는 명사(일, event) 등을 숫자 관련 표현에서 제외시킬 수 있다. 숫자 변환 모듈은, 리스트에 포함된 숫자 목록을 기반으로 토큰을 숫자로 변환할 수 있다. 예를 들면, 숫자 변환 모듈은, 새로운 토큰(string type)이 입력되면, 입력된 토큰과 리스트에 포함된 토 큰의 자릿수(길이)를 비교하고, 비교 결과에 따라 연산기호를 삽입시키며, integer 형태로 변환하는 절차를 반 복(iteration) 수행할 수 있다. 구체적으로, 숫자 변환 모듈은, 리스트에 저장된 숫자 목록을 기반으로 이전 토큰과 현재 토큰의 길이를 비교하여, 현재 토큰의 길이가 이전 토큰보다 짧으면 더하기 연산자를, 현재 토큰의 길이가 이전 토큰보다 길면 곱하기 연산자를 삽입할 수 있다. 여기서, 토큰의 길이는 숫자의 자릿수를 의미한다. 그리고 숫자 변환 모듈은, 이전 토큰과 현재 토큰의 길이 비교 시, 토큰의 길이가 같으면, 정확한 숫자 표 현이 아니므로 연산하지 않고 문자열 형태로 반환할 수 있다. 예를 들어, 숫자 변환 모듈은, ['10000','5','1000','4','10','5']가 들어왔을 경우, 10000>5 이므로 10000+5로 변환하고, 5<1000 이므로 10000+5*1000으로 변환할 수 있다. 이런식으로 계속 변환해 나가면 10000+5*1000+4*10+5가 되고 이를 연산하면 15045라는 숫자(integer 형태)로 변환될 수 있다. 또한, 숫자 변환 모듈은, 이전 토큰과 현재 토큰의 길이 비교 시, 현재 토큰의 길이가 5 자리 이상이면, 이제까지 변환된 연산식을 한번 연산하여, 숫자로 변환할 수 있다. 예를 들어, 숫자 변환 모듈은, 만일 '오사삼이일'이라는 한국어가 ['5','4','3','2','1']로 변환되어 들어 왔다면, 5의 자릿수는 4와 같기 때문에 이는 숫자표현이 아닌 것으로 판단하여 연산하지 않고 '54321'의 string 으로 반환할 수 있다. 그리고 숫자 변환 모듈은, 현재 토큰 길이가 5 이상인 경우(만 이상일 때), 이제까지 변환된 연산식을 한 번 연산하여, 숫자로 변환할 수 있다. 예를 들어, 숫자 변환 모듈은, '사억오만사십'이 ['4','100000000','5','10000','4','10']으로 변환된 경 우 4<100000000이고 100000000은 문자열의 길이가 5이상이므로, 4*100000000을 연산하여 400000000으로 만들고 400000000>5, 5<10000 이므로 이므로 400000000+5*10000이 되는데, 여기서 10000은 길이가 5 이상이므로 이 시 점에서 한 번 연산하면 400050000이 된다. 이 후 다시 400050000>4, 4<10 이므로 400050000+4*10으로 변환 후 연산하면 400050040으로 변환될 수 있다. 한편, 숫자 변환 모듈은, 한글로 표현된 분수 표현 및/또는 소수 표현의 경우에도, integer 형태로 변환할 수 있다. 예를 들면, 숫자 변환 모듈은, 한글 표현으로 '분의' 또는 '분에'라는 표현이 포함된 토큰의 경우, '&' 기 호 또는 '/' 기호를 사용하여 변환하고, '&' 기호 사용 시, '분모, &, 분자' 순으로 변환되며, '/' 기호 사용 시, '분자, /, 분모' 순으로 변환되도록 할 수 있다. 그리고 숫자 변환 모듈은, 한글 표현으로 '쩜' 또는 '점'이라는 표현이 포함된 토큰의 경우, '.'기호를 사 용하여 변환하고, 보다 정확한 소수 표현으로 변환되도록, 숫자에 이어서 '.' 기호가 등장하면, 같은 자릿수라 도 함께 연산되도록 할 수 있다. 즉, 분수 표현과 소수 표현은 한글로 사분의삼, 삼쩜육오 등과 같이 표현될 수 있으며, 한글이 아닌 3/4로 표현 되는 경우도 있기 때문에 숫자 변환 모듈은, 입력된 토큰에 한글 표현 '분의', '분에' 등이 포함되면, ' &'으로 변환하고 '점','쩜' 등은 '.', 3/4의 분수기호는 '/'로 사용할 수 있다. 이후, &기호는 앞의 분모 표현 과 뒤에 나오는 분자 표현의 순서를 바꾸어 연산하고, '.'기호가 등장하면 같은 자리의 수라도 그대로 이어붙여 연산되게 함으로서 분수와 소수 표현을 정확하게 인지할 수 있다. 예를 들어, 숫자 변환 모듈은, '사분의삼'를 ['4','&','3']로 변환하고 이를 3/4으로 변환하여 연산하면, 0.75로 변환될 수 있다. 또한, '삼쩜일사일오'의 경우, ['3','.','1','4','1','5']로 변환되고 이는 3.1415로 변환될 수 있다. 도 3은, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 방법의 설명에 제공된 도면이다. 본 실시예에 따른 한글로 표현된 숫자 표현 추출 방법(이하에서는 '숫자 표현 추출 방법'이라 총칭하기로 함)은, 도 1 내지 도 2를 참조하여 전술한 숫자 표현 추출 시스템에 의해 실행될 수 있다. 본 숫자 표현 추출 방법은, 숫자 표현 추출 시스템을 통해, 한글로 표현된 입력 문장을 토큰화(tokenizing)하고 (S310), 한국어 토큰 중 숫자 표현인 토큰들만 추출하여, 숫자 형태로 변환하기 위해, 토큰들의 품사를 판별하 고, 판별된 품사에 따라 숫자 표현에 해당하는 토큰을 추출하고(S320), 추출된 토큰을 기저장된 사전 (Dictionary)을 기반으로 숫자 형태로 치환하여 리스트에 저장할 수 있다(S330). 이후, 숫자 표현 추출 방법은, 숫자 표현 추출 시스템을 통해, 리스트에 저장된 숫자 목록을 기반으로 토큰을 숫자로 변환할 수 있다(S340). 예를 들면, 숫자 표현 추출 방법은, 추출된 토큰을 숫자 형태로 치환하여 리스트에 저장한 이후, 새로운 토큰 (string type)이 입력되면, 입력된 토큰과 리스트에 포함된 토큰의 자릿수(길이)를 비교하고, 비교 결과에 따라 연산기호를 삽입시키며, integer 형태로 변환할 수 있다. 이를 통해, 한국어 문장 내에 표현된 숫자 관련 표현을 정확하게 추출하여 이를 정수형(Integer type)으로 변환 함으로써, 챗봇(Chatbot)과 같은 대화형 엔진에서 확실한 표현을 추론 엔진을 거치지 않고 정확하고 빠르게 처 리하도록 할 수 있다. 더불어, 숫자 표현 추출 방법은, 숫자 표현의 변환뿐 아니라 한글로 표현되는 날짜 인식, 화폐단위 인식, 길이, 넓이, 무게, 부피 등 도량형 인식 등 다양한 한글로 된 숫자 표현에 응용될 수 있다. 이는 토큰들의 품사 판별 및 숫자 표현에 해당하는 토큰 추출 과정에서 숫자 표현의 앞 또는 뒤에 배치되는 관 형사를 기반으로 해당 토큰이 숫자 관련 표현인지 여부를 판별함으로써, 숫자와 동일한 한글 철자를 갖고 있으 나 다른 의미를 지닌 명사를 숫자 관련 표현에서 제외시킬 수 있다. 예를 들면, 숫자 표현 추출 방법은, 토큰들의 품사 판별 및 숫자 표현에 해당하는 토큰 추출 과정에서 숫자 1과 동일한 한글 철자를 갖고 있으나 숫자 표현이 아닌 날을 세는 단위 명사(일, day) 또는 어떤 내용을 가진 상황 이나 장면을 의미하는 명사(일, event) 등을 숫자 관련 표현에서 제외시킬 수 있다. 구체적으로, 숫자 표현 추출 방법은, 추출된 토큰을 숫자 형태로 치환하여 리스트에 저장한 이후, '오늘은 구월 팔일이다'라는 한글 문장이 입력되면, '오늘', '은', '구', '월', '팔', '일'이라는 토큰 중 숫자 표현으로 '구', '팔'을 추출하여, 입력된 토큰과 리스트에 포함된 토큰의 자릿수(길이)를 비교하고, 비교 결과에 따라 연 산기호를 삽입시키며, integer 형태로 변환할 수 있다. 여기서, 숫자 표현 추출 방법은, 입력 문장에 '년', '월', '일' 등이 포함되면, 토큰들의 품사 판별 및 숫자 표 현에 해당하는 토큰 추출 과정에서 입력 문장을 한글로 표현되는 날짜로 인식하여, '월' 다음 차례로 등장하는 '일'의 품사를 숫자가 아닌 날을 세는 단위 명사로 판별하고, 숫자 관련 표현에서 제외시킬 수 있다. 또, 숫자 표현 추출 방법은, 웹 API를 활용하여 '백오십 달러는 몇원이지?' 라는 표현과 같이 달러와 원 두개의 화폐단위가 발견된 경우, 삼 달러를 자동으로 현재 원화 환율로 환산하는 기능에도 응용될 수 있다. 그리고 숫자 표현 추출 방법은, 숫자 표현 추출 방법은, 추출된 토큰을 숫자 형태로 치환하여 리스트에 저장한 이후, '삼일 전에 일어난 일이다'라는 한글 문장이 입력되면, 품사를 판별하는 과정에서, '삼'을 숫자 표현으로 추출하여, '3'으로 변환하고, 관형사 '전' 앞에 오는 '일'의 품사를 날을 세는 단위 명사로 판별하여, 숫자 표 현에서 제외시킬 수 있으며, 관형사 '일어난' 뒤에 오는 '일'의 품사를 어떤 내용을 가진 상황이나 장면을 의미 하는 명사로 판별하여, 숫자 표현에서 제외시킬 수 있다. 또한, '삼', '일'의 경우에는, 설사 숫자 표현으로 둘다 추출되더라도, 이전 토큰과 현재 토큰의 자릿수(길이) 를 비교 시, 토큰의 길이가 같아(자릿수가 동일), '일'은 연산되지 않고 문자열 형태로 반환되어, 최종적으로 '3일'로 표현될 수 있다. 더불어 숫자 표현 추출 방법은, 삼 더하기 사, 육 곱하기 칠, 십의 삼승 등 간단한 사칙연산도 자동으로 수행할 수 있다. 도 4는, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 방법의 더욱 상세한 설명에 제공된 도면이 다. 도 4를 참조하면, 본 숫자 표현 추출 방법은, 숫자 표현 추출 시스템을 통해, 한글로 표현된 입력 문장을 토큰 화하고(S410), 토큰들의 품사를 판별하고, 판별된 품사에 따라 숫자 표현에 해당하는 토큰을 추출하고(S420), 추출된 토큰을 기저장된 사전을 기반으로 숫자 형태로 치환하여 리스트에 저장할 수 있다(S430). 이후, 숫자 표현 추출 방법은, 숫자 표현 추출 시스템을 통해, 리스트에 저장된 숫자 목록을 기반으로 토큰을 숫자로 변환할 수 있다. 예를 들면, 숫자 표현 추출 방법은, 추출된 토큰을 숫자 형태로 치환하여 리스트에 저장한 이후, 새로운 토큰 (string type)이 입력되면, 입력된 토큰과 리스트에 포함된 토큰의 자릿수(길이)를 비교하고, 비교 결과에 따라 연산기호를 삽입시키며, integer 형태로 변환할 수 있다. 구체적으로, 숫자 표현 추출 방법은, 리스트에 저장된 숫자 목록을 기반으로 이전 토큰과 현재 토큰의 길이를 비교하여, 현재 토큰의 길이가 이전 토큰보다 짧으면(S440-N), 더하기 연산자를 삽입하고(S450), 현재 토큰의 길이가 이전 토큰보다 길면(S440-Y), 곱하기 연산자를 삽입할 수 있다(S455). 여기서, 숫자 표현 추출 방법은, 이전 토큰과 현재 토큰의 길이 비교 시, 토큰의 길이가 같으면, 정확한 숫자 표현이 아니므로 연산하지 않고 문자열 형태로 반환할 수 있다. 또한, 숫자 표현 추출 방법은, 현재 토큰 길이가 5 이상인 경우(만 이상일 때), 현재 토큰의 길이가 5 자리 이 상이면(S460-Y), 이제까지 변환된 연산식을 한번 연산하여(S470), 숫자(integer 형태)로 변환할 수 있으며, 현 재 토큰이 마지막 토큰이 되기 전 때까지(S480-Y), integer 형태로 변환하는 절차를 반복(iteration) 수행할 수 있다. 한편, 본 실시예에 따른 장치와 방법의 기능을 수행하게 하는 컴퓨터 프로그램을 수록한 컴퓨터로 읽을 수 있는 기록매체에도 본 발명의 기술적 사상이 적용될 수 있음은 물론이다. 또한, 본 발명의 다양한 실시예에 따른 기 술적 사상은 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터로 읽을 수 있는 코드 형태로 구현될 수도 있다. 컴퓨터로 읽을 수 있는 기록매체는 컴퓨터에 의해 읽을 수 있고 데이터를 저장할 수 있는 어떤 데이터 저장 장 치이더라도 가능하다. 예를 들어, 컴퓨터로 읽을 수 있는 기록매체는 ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광디스크, 하드 디스크 드라이브, 등이 될 수 있음은 물론이다. 또한, 컴퓨터로 읽을 수 있는 기록매체 에 저장된 컴퓨터로 읽을 수 있는 코드 또는 프로그램은 컴퓨터간에 연결된 네트워크를 통해 전송될 수도 있다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2021-0131424", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2021-0131424", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 시스템의 설명에 제공된 도면, 도 2는, 본 발명의 일 실시예에 따른 프로세서의 구성 설명에 제공된 도면, 도 3은, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 방법의 설명에 제공된 도면, 그리고 도 4는, 본 발명의 일 실시예에 따른 한글로 표현된 숫자 표현 추출 방법의 더욱 상세한 설명에 제공된 도면이 다."}
