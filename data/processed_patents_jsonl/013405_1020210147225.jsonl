{"patent_id": "10-2021-0147225", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0062207", "출원번호": "10-2021-0147225", "발명의 명칭": "클라우드 및 컨테이너 환경에서 동적으로 바뀌는 리소스에 대한 모니터링 및 이상탐지를 통한", "출원인": "주식회사 테이텀", "발명자": "박수현"}}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "리소스 관리를 수행하는 장치가 동작하는 방법에 있어서,클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하는 단계;태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 단계;상기 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행하는 단계;상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자산으로 분류하는 단계; 및상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하는 단계를 포함하되,상기 태깅 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 단계는:상기 리소스에 대해 할당된 태그 값이 있는지 여부를 판단하는 단계;상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하는 단계를 더포함하고, 상기 리소스가 식별되지 않는 경우는 상기 리소스에 대해 상기 태그 값이 없고 상기 리소스가 사전에 정의되지않은 리소스인 경우를 포함하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하는 단계는: 상기 미리 정의된 룰에 기초하여 관리자를 특정 부서와 특정인으로 지정하여 분류하는 단계;특정 리소스의 유형과 리소스 자체 및 특정 리전에 대한 할당 관리자를 상기 특정 부서 및 특정인에 매핑하는단계; 및상기 리소스에 대한 변경 사항이 상기 특정 부서 및 특정인에 매핑되지 않는 할당 관라자에 의한 변경 사항인지여부를 판단하는 단계를 포함하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 태깅의 유형은 클라우드 자산에 직접 마킹되는 유형 및 내부 점검 시스템에서 별도로 관리하는 유형 중 어느 하나인 것을 더 특징으로 하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 비용, 유형, 속성, 및 리젼 중 적어도 어느 하나를 수집 및 모니터링 하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 비용을 수집 및 모니터링 하는 단계는:상기 획득한 정보에 기초하여, 인공지능 학습엔진을 통해 과금에 대한 변동량이 적정 임계값 기반에 있는지를공개특허 10-2023-0062207-3-조회하는 단계;상기 인프라의 자산에 관련하여 일별 사용량을 기준으로 월별 사용량을 예측하는 단계를 포함하고,상기 예측한 월별 사용량이 전월 사용량을 초과하는 경우, 관리자에게 알림을 수행하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서,상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 유형, 속성, 또는 리젼 중 적어도 하나를 수집하고 모니터링 하는 단계는:상기 획득한 정보에 기초하여, 인공지능 학습엔진을 통해 상기 인프라의 자산에 대한 유형, 속성, 또는 리전을소정 횟수 반복하여 학습하는 단계; 상기 소정 횟수 반복된 학습으로부터 데이터를 추출하는 단계; 및상기 데이터에 기초하여 상기 리소스의 유형, 속성 또는 리전이 관리자가 사용하던 유형, 속성 또는 리전인지여부를 판단하는 단계를 포함하고,상기 리소스의 유형, 속성 또는 리전이 사용하지 않던 유형, 속성 또는 리전으로 판단된 경우, 관리자에게 알림을 수행하는 단계를 더 포함하는, 방법"}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 리소스에 대한 정보를 획득하는 단계는:상기 장치가 변경 이력에 대한 알림 기능을 제공하는 인터페이스를 포함하는 경우, 상기 인터페이스를 통해 상기 리소스에 대한 변경 사항에 대한 알림을 획득하는 단계; 및상기 장치가 변경 이력에 대한 알림 기능을 제공하는 상기 인터페이스를 포함하지 않는 경우, 정보수집 인터페이스를 통해 상기 리소스에 대한 정보를 주기적으로 수집하여 획득하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 변경 이력에 대한 알림 기능을 제공하는 인터페이스는 Webhook 또는 Watcher 기능을 제공하고,상기 정보수집 인터페이스는 API(application programming interface), LOG 수집기, SSM(simple systemsmanager) 인터페이스, 및 SSH(secure shell) 인터페이스 중 어느 하나인 것을 특징으로 하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,오토-스케일링(auto-scaling)에 의해 상기 리소스를 복제하어 복제된 리소스를 생성하는 단계;상기 복제된 리소스를 트래킹하여 태깅하는 단계를 포함하되,상기 복제된 리소스는 상위 상속자로부터 태그 값을 상속받는 것을 더 특징으로 하는, 방법."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "정보 수집 및 처리를 수행하는 장치에 있어서입출력 모듈;데이터를 저장하도록 구성된 메모리; 및상기 메모리와 연결된 하나 이상의 프로세서를 포함하고,공개특허 10-2023-0062207-4-상기 하나 이상의 프로세서는:클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하고;태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하고;상기 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행하고;상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자산으로 분류하고; 및상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하도록 구성되며,상기 프로세서가 상기 태깅 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하도록 구성되는 것은:상기 리소스에 대해 할당된 태그 값이 있는지 여부를 판단하고;상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하도록 구성되는것을 더 포함하되, 상기 리소스가 식별되지 않는 경우는 상기 리소스에 대해 상기 태그 값이 없고 상기 리소스가 사전에 정의되지않은 리소스인 경우를 포함하는, 장치."}
{"patent_id": "10-2021-0147225", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "하나 이상의 프로세서(processor)가 동작을 수행하도록 하는 하나 이상의 인스트럭션 (instruction)을 저장하는비-휘발성(non-transitory) 프로세서-판독 가능 매체 (processor-readable medium)에 있어서, 상기 동작은:클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하고;태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하고;상기 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행하고;상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자산으로 분류하고; 및상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하는 것을 포함하되,상기 태깅 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 것은:상기 리소스에 대해 할당된 태그 값이 있는지 여부를 판단하고;상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하는 것을 더 포함하되, 상기 리소스가 식별되지 않는 경우는 상기 리소스에 대해 상기 태그 값이 없고 상기 리소스가 사전에 정의되지않은 리소스인 경우를 더 특징으로 하는, 비-휘발성 (non-transitory) 프로세서-판독 가능 매체."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "리소스 관리를 수행하는 장치가 동작하는 방법에 있어서, 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하는 단계; 태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 단계; 상기 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행하는 단계; 상기 관리자의 추가 대응 (뒷면에 계속)"}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 클라우드 및 컨테이너 환경에서 동적으로 바뀌는 리소스에 대한 모니터링 및 이상탐지를 통한 자동 차단 방법에 관한 것이다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "퍼블릭 클라우드의 경우, 리소스들을 생성/변경/삭제하기 위한 API (application programming interface) 가 존재한다. 클라우드 서비스 프로바이더는, 각 리소스의 사용량을 측정하기 위해 CPU(central processing unit)/MEM(memory)/DISK 등의 사용량을 조회할 수 있는 기능 또한 제공한다. 또한, 일부 클라우드의 경우 개발 편의성을 위해 원격 서버로 접속할 수 있는 API 인터페이스를 제공 해 주기도 한다.클라우드 또는 컨테이너 환경에서 리소스가 동적으로 변경되는 경우, 이에 대한 모니터링과 이상탐지를 효율적 으로 할 수 있는 방법이 필요하다. 선행기술문헌 특허문헌 (특허문헌 0001) 미국 특허출원공개공보 US2014/302682호, 2014.06.12 (특허문헌 0002) 미국 특허출원공개공보 US2016/143424호, 2018.09.26"}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "클라우드 환경 또는 컨테이너 환경 내에서는 다양한 리소스들이 사용자에 의해, 시스템 2중화에 의해, 또는 Auto-Scaling 기능 등에 의한 자동화 확장 기능에 의해 생성된다. 다양한 리소스들은 사람, 사전 정의된 룰, 또 는 API Key에 의해서 시스템 프로그래밍을 통해 생성된다. 이러한 상황에서, 해커의 악의적인 공격과 침투 또는 API Key의 오남용으로 인한 키 노출에 의해, 다양한 방법 으로 사용자(관리자)가 알지 못하는 리소스들이 생성될 수 있으며, 이렇게 노출된 키들로 인해 백도어 계정 또 한 생성될 수 있다. 따라서, 본 발명이 해결하고자 하는 과제는 클라우드 환경 내에서 동적으로 생성 또는 삭제되는 수많은 리소스 들에 대해 이상탐지를 하기 위한 방법을 제안하는 것이다. 또한, 본 발명이 해결하고자 하는 과제는 의도하지 않은 리소스가 생성되는 경우 이를 탐지하여 자동으로 시스 템에서 삭제하는 방법을 제안하는 것이다. 본 발명이 해결하고자 하는 과제들은 이상에서 언급된 과제로 제한되지 않으며, 언급되지 않은 또 다른 과제들 은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 과제를 해결하기 위한 본 발명의 일 실시예에 따르면, 리소스 관리를 수행하는 장치가 동작하는 방법을 제공한다. 상기 방법은 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하는 단계; 태깅 (tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 단계; 상기 리소스가 식별되지 않는 경우, 관 리자에게 알림(notification)을 수행하는 단계; 상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자 산으로 분류하는 단계; 및 상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하는 단계를 포함한 다. 상기 태깅 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하는 단계는: 상기 리소스에 대해 할당된 태그 값 이 있는지 여부를 판단하는 단계; 상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스 인지 여부를 판단하는 단계를 더 포함한다. 상기 리소스가 식별되지 않는 경우는 상기 리소스에 대해 상기 태그 값이 없고 상기 리소스가 사전에 정의되지 않은 리소스인 경우를 포함한다. 상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하는 단계는: 상 기 미리 정의된 룰에 기초하여 관리자를 특정 부서와 특정인으로 지정하여 분류하는 단계; 특정 리소스의 유형 과 리소스 자체 및 특정 리전에 대한 할당 관리자를 상기 특정 부서 및 특정인에 매핑하는 단계; 및 상기 리소 스에 대한 변경 사항이 상기 특정 부서 및 특정인에 매핑되지 않는 할당 관라자에 의한 변경 사항인지 여부를 판단하는 단계를 포함한다. 상기 태깅의 유형은 클라우드 자산에 직접 마킹되는 유형 및 내부 점검 시스템에서 별도로 관리하는 유형 중 어 느 하나일 수 있다.상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 비용, 유형, 속성 또는 리전 중 적어도 어느 하나를 수집 및 모니터링 하는 단계를 더 포함할 수 있다. 상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 비용을 수집 및 모니터링 하는 단계는: 상기 획득한 정보에 기초하여, 인공지능 학습엔진을 통해 과금에 대한 변동량이 적정 임계값 기반에 있는지를 조회하는 단계; 상기 인프라의 자산에 관련하여 일별 사용량을 기준으로 월별 사용량을 예측하는 단계; 및 상기 예측한 월별 사용량이 전월 사용량을 초과하는 경우, 관리자에게 알림을 수행하는 단계를 더 포함할 수 있다. 상기 획득한 정보에 기초하여 상기 인프라의 자산에 대한 유형, 속성, 또는 리젼 중 적어도 하나를 수집하고 모 니터링 하는 단계는: 상기 획득한 정보에 기초하여, 인공지능 학습엔진을 통해 상기 인프라의 자산에 대한 유형, 속성, 또는 리전을 소정 횟수 반복하여 학습하는 단계; 상기 소정 횟수 반복된 학습으로부터 데이터를 추 출하는 단계; 및 상기 데이터에 기초하여 상기 리소스의 유형, 속성 또는 리전이 관리자가 사용하던 유형, 속성 또는 리전인지 여부를 판단하는 단계를 포함하고, 상기 리소스의 유형, 속성 또는 리전이 사용하지 않던 유형, 속성 또는 리전으로 판단된 경우, 관리자에게 알림을 수행하는 단계를 더 포함할 수 있다. 상기 리소스에 대한 정보를 획득하는 단계는: 상기 장치가 변경 이력에 대한 알림 기능을 제공하는 인터페이스 를 포함하는 경우, 상기 인터페이스를 통해 상기 리소스에 대한 변경 사항에 대한 알림을 획득하는 단계; 및 상 기 장치가 변경 이력에 대한 알림 기능을 제공하는 상기 인터페이스를 포함하지 않는 경우, 정보수집 인터페이 스를 통해 상기 리소스에 대한 정보를 주기적으로 수집하여 획득하는 단계를 더 포함할 수 있다. 상기 변경 이력에 대한 알림 기능을 제공하는 인터페이스는 Webhook 또는 Watcher 기능을 제공하고, 상기 정보 수집 인터페이스는 API, LOG 수집기, SSM(simple systems manager) 인터페이스, 및 SSH(secure shell) 인터페 이스 중 어느 하나일 수 있다. 상기 방법은 오토-스케일링(auto-scaling)에 의해 상기 리소스를 복제하어 복제된 리소스를 생성하는 단계; 상 기 복제된 리소스를 트래킹하여 태깅하는 단계를 포함할 수 있다. 상기 복제된 리소스는 상위 상속자로부터 태그 값을 상속받을 수 있다. 본 발명에 따른 일 실시예에 따르면, 정보 수집 및 처리를 수행하는 장치를 제공할 수 있다. 상기 장치는 입출력 모듈; 데이터를 저장하도록 구성된 메모리; 및 상기 메모리와 연결된 하나 이상의 프로세서 를 포함할 수 있다. 상기 하나 이상의 프로세서는: 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득 하고; 태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하고; 상기 리소스가 식별되지 않는 경 우, 관리자에게 알림(notification)을 수행하고; 상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자 산으로 분류하고; 및 상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하도록 구성될 수 있다. 상기 프로세서가 상기 태깅 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하도록 구성되는 것은: 상기 리소 스에 대해 할당된 태그 값이 있는지 여부를 판단하고; 상기 리소스가 상기 미리 정의된 룰에 기초하여 사전에 정의되지 않은 리소스인지 여부를 판단하도록 구성되는 것을 더 포함할 수 있다. 본 발명에 따른 일 실시예에 따르면, 하나 이상의 프로세서(processor)가 동작을 수행하도록 하는 하나 이상의 인스트럭션 (instruction)을 저장하는 비-휘발성(non-transitory) 프로세서-판독 가능 매체 (processor- readable medium)를 제공할 수 있다. 상기 동작은: 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하고; 태깅 (tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하고; 상기 리소스가 식별되지 않는 경우, 관리자 에게 알림(notification)을 수행하고; 상기 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자산으로 분 류하고; 및 상기 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행하는 것을 포함할 수 있다. 본 발명의 기타 구체적인 사항들은 상세한 설명 및 도면들에 포함되어 있다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 클라우드 또는 컨테이너 환경 내에서 동적으로 변경되는 리소스들 중 원치 않는 리소스를 탐 지, 즉 이상탐지를 하기 위한 방법을 제공함으로써 식별하기 어려운 리소스에 대한 이상탐지를 좀 더 용이하게 식별할 수 있다.또한, 본 발명에 따르면 클라우드 또는 컨테이너 환경 내에서 동적으로 변경되는 리소스가 원치 않는 리소스인 경우, 이를 자동으로 삭제함으로써 클라우드/컨테이너 환경 내에서의 잠재적인 위협을 사전 차단할 수 있는 효 과가 있다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나, 본 발명은 이하에서 개시되는 실시예들에 제한되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술 분야의 통상의 기술자에게 본 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 명세서 전체에 걸쳐 동일한 도면 부호는 동일한 구성 요소를 지칭하며, \"및/또는\"은 언급된 구성요소들의 각각 및 하나 이상의 모든 조합을 포함한다. 비록 \"제1\", \"제2\" 등이 다양한 구성요소들을 서술하기 위해서 사용되나, 이들 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단 지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야의 통상의 기술자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또한, 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 공간적으로 상대적인 용어인 \"아래(below)\", \"아래(beneath)\", \"하부(lower)\", \"위(above)\", \"상부(upper)\" 등 은 도면에 도시되어 있는 바와 같이 하나의 구성요소와 다른 구성요소들과의 상관관계를 용이하게 기술하기 위 해 사용될 수 있다. 공간적으로 상대적인 용어는 도면에 도시되어 있는 방향에 더하여 사용시 또는 동작시 구성 요소들의 서로 다른 방향을 포함하는 용어로 이해되어야 한다. 예를 들어, 도면에 도시되어 있는 구성요소를 뒤 집을 경우, 다른 구성요소의 \"아래(below)\"또는 \"아래(beneath)\"로 기술된 구성요소는 다른 구성요소의 \"위 (above)\"에 놓일 수 있다. 따라서, 예시적인 용어인 \"아래\"는 아래와 위의 방향을 모두 포함할 수 있다. 구성요 소는 다른 방향으로도 배향될 수 있으며, 이에 따라 공간적으로 상대적인 용어들은 배향에 따라 해석될 수 있다. 이하, 본 발명에 따른 바람직한 실시 형태를 첨부된 도면을 참조하여 상세하게 설명한다. 첨부된 도면과 함께 이하에 개시될 상세한 설명은 다양한 실시예들의 예시적인 실시형태를 설명하고자 하는 것이며, 유일한 실시형태를 나타내고자 하는 것이 아니다. 본 발명에서 쓰이는 용어들의 정의는 다음과 같다. 인프라: 본 발명에서 쓰이는 인프라는 정보 기술(IT) 인프라를 의미한다. IT 인프라는 엔터프라이즈 IT 환경을 운영하고 관리하는데 필요한 구성 요소이다. IT 인프라는 클라우드 컴퓨팅 시스템이나 조직의 자체 시설 내부에 배포할 수 있다. 이러한 구성 요소에는 하드웨어, 소프트웨어, 네트워킹 구성 요소, 운영 체제(opersting system), 데이터 스토리지가 있으며 모두 IT 서비스 및 솔루션을 제공하는 데 사용된다. IT 인프라 제품은 소프트웨어 정의 스토리지처럼 기존 IT 리소스를 기반으로 실행되는 다운로드 가능한 소프트 웨어 애플리케이션이나, 서비스로서의 인프라(Infrastructure-as-a-Service, IaaS)처럼 서비스 공급업체가 제공 하는 온라인 솔루션의 형태로 사용 가능하다. 클라우드: 클라우드는 네트워크 전체에서 확장 가능한 리소스를 추상화, 풀링 및 공유하는 IT 환경이다. 클라우 드는 클라우드 환경 내에서 워크로드를 실행하는 동작인 클라우드 컴퓨팅을 지원한다. 클라우드는 프론트엔드 플랫폼과 백엔드 플랫폼 및 이러한 플랫폼을 연결하는 딜리버리 네트워크로 구성된다. 프론트엔드 플랫폼은 최종 사용자 장치(PC, 태블릿 또는 휴대전화 등)나 컴퓨터 네트워크가 될 수 있다. 백엔드 플랫폼은 물리적인 인프라 또는 딜리버리 네트워크(일반적으로는 인터넷이지만 인트라넷인 경우도 있음)를 통해 액세스되는 소프트웨어 애플리케이션이다. 클라우드는 하기와 같이 4가지 타입으로 분류될 수 있다. 프라이빗 클라우드: 프라이빗 클라우드란 일반적으로 정의하자면 최종 사용자 전용 클라우드 환경으로, 대 개는 사용자의 방화벽 내에 있으며 가끔 온프리미스에 있기도 한다. 퍼블릭 클라우드: 퍼블릭 클라우드는 최종 사용자가 소유하지 않은 리소스에서 생성되어 다른 테넌트에 재 배포될 수 있는 클라우드 환경이다. 구체적으로, 퍼블릭 클라우드는 타사 공급 업체가 소유하고 관리하는 하드 웨어에서 개발된 가상 리소스 풀로서 셀프 서비스 인터페이스를 통해 여러 클라이언트 간에 자동으로 프로비저 닝되고 할당된다. 하이브리드 클라우드: 하이브리드 클라우드는 프라이빗 클라우드와 퍼블릭 클라우드를 포함하는 클라우드로, 프라이빗 클라우드와 퍼블릭 클라우드 간에 데이터와 응용 프로그램을 공유할 수 있는 기술을 제공 한다. 즉, 하이브리드 클라우드는 프라이빗 클라우드와 퍼블릭 클라우드 간에 데이터와 응용 프로그램이 이동할 수 있도록 하여, 어느 정도의 워크로드 이식성, 오케스트레이션 및 관리 기능을 제공할 수 있다. 멀티클라우드: 멀티클라우드는 네트워크 연결에 상관없이 2개 이상의 클라우드(퍼블릭 또는 프라이빗)를 포 함한 IT 시스템이다. 컨테이너: 컨테이너는 데스크탑, 기존의 IT 또는 클라우드 등 어디서나 실행될 수 있도록 애플리케이션 코드가 해당 라이브러리 및 종속 항목과 함께 패키징되어 있는 소프트웨어 실행 유닛이다. 이를 수행하기 위해 컨테이너는 OS의 기능(Linux 커널의 경우, 이름 공간 및 cgroups 프리미티브)을 활용하여 프로세스를 격리하고 해당 프로세스가 액세스할 수 있는 CPU, 메모리 및 디스크의 양을 제어하는 운영 체제(OS) 가상화의 형식을 활용한다. API(application programming interface): API는 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래 밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스이다. API는 주로 파일 제어, 창 제어, 화상 처리, 문자 제어 등을 위한 인터페이스를 제공한다. API를 사용하면 구현 방식을 알지 못해도 제품 또는 서비스가 서 로 커뮤니케이션 할 수 있으며 애플리케이션 개발을 간소화하여 시간과 비용을 절약할 수 있는 효과가 있다. API는 리소스에 대한 액세스 권한을 제공하고 보안과 제어를 유지할 수 있게 해주며 액세스 권한을 어떻게, 누 구에게 제공할지 여부를 결정한다. API 보안이란 API를 잘 관리하는 것을 의미한다. API에 연결하고 API에 노출 된 데이터 또는 기능을 사용하는 애플리케이션을 생성하는 것은 레거시 시스템과 IoT(사물 인터넷)를 비롯하여 어떤 환경이든 연결하는 분산형 통합 플랫폼을 통해 수행할 수 있다. API에 대한 인증(authentication)은 여러 방법이 있으며 각 방식에 따라 보안 수준과 구현 난이도가 달라서 각 방식의 장단점을 이해하여 서비스 수준에 맞는 적절한 API 인증 방식을 선택해야 한다. 이하 2가지의 API에 대 한 인증 방식을 개시하며, 하기 2가지 방식 외에도 다양한 인증방식이 있다. API 키 방식: 가장 기초적인 방법이며, API 키란 특정 사용자만 알 수 있는 일종의 문자열이다. API 토큰 방식: API 토큰(token)을 발급하는 방식은 ID, 비밀번호 등으로 사용자를 인증한 후에 그 사용자 가 API 호출에 사용할 기간이 유효한 API 토큰을 발급하여 API 토큰으로 사용자를 인증하는 방식이다. 도 1은 클라우드 및 컨테이너 인프라 환경에 대한 일 예시를 도시한다. 도 1은 업계에서 일반적으로 통용되고 있는 다양한 클라우드 및 컨테이너 인프라 환경을 나타낸다. 클라우드 프 로바이더(예: AWS, GCP, Azure)에 따라 다양한 인터페이스 별로 규격이 다르며, 컨테이너 인프라 환경 또한 그 제조사와 버전에 따라 여러 변동 사항이 존재한다. 도 1(a)는 퍼블릭 클라우드 및/또는 프라이빗 클라우드 환경에 대해 도시한다. 도 1(a)는 클라우드 서비스 프로바이더(CSP-A, CSP-B, CSP-C)의 예시를 들어 클라우드 환경을 도시하고 있다. CSP는 클라우드 서비스 프로바이더(cloud service provider)의 약자로, 공공 클라우드 인프라, 플랫폼 서비스를 제공하는 업체를 의미한다. 도 1(b)을 참고하면, 컨테이너 환경에 클러스터(A, B)가 존재한다. 컨테이너는 모듈화되고 격리된 컴퓨팅 공간 또는 컴퓨팅 환경, 다시 말해 어플리케이션을 구동하는 환경을 격리 한 공간을 의미한다. 애플리케이션을 실행하는 컨테이너는 필수 라이브러리, 종속 요소와 파일을 사용하므로 문 제없이 원활하게 애플리케이션을 프로덕션으로 진행할 수 있다. 도시된 클러스터는 컨테이너를 실행하기 위한 일련의 노드 머신이다. 도 1(c)은 하이브리드 클라우드 컨테이너 환경에 대한 것으로, 상세하게는 다양한 멀티 클라우드 환경 내에서 컨테이너 환경을 구축하여 자산들이 서로 융합되어 서비스를 제공하는 개념도이다. 하이브리드 클라우드는 네트워크 연결을 통해 하나 이상의 퍼블릭 클라우드 및 프라이빗 클라우드 환경을 결합 하여 서로 다른 클라우드 환경 간에 데이터와 애플리케이션을 공유할 수 있는 클라우드 컴퓨팅 모델이다. 도 1(c)의 각 클라우드는 하나 이상의 클러스터들을 포함하고 있다. 도 2는 본 발명에 따른 클라우드 인프라 환경에서의 자산관리 시스템을 도시한다. 도 2를 참고하면, 클라우드 또는 컨테이너 인프라 환경의 자원(리소스)에 대한 정보를 정보수집 인터페이스 를 통해 탐지하고 정보수집부에서 수집한다. 자산관리부에서는 자산을 식별하고 수집한 자산에 대해 모니터링한다. 이상탐지부는 수집된 정보를 기반으로 식별되지 않은 자원이 생성되는 경우, 관리자에 게 알리거나 해당 자원을 삭제하는 역할을 수행한다. 도 2는 클라우드 환경과 컨테이너 환경에 대하여 도시되어 있지는 않지만, 도 1에서 살펴본 클라우드 환경 또는 컨테이너 환경 내 동적으로 변경되는 리소스에 대한 정보를 사용한다. 또한 클라우드/컨테이너 환경 또는 유형 은 도 1에 한정되지 않으며 본 발명은 퍼블릭 클라우드, 프라이빗 클라우드, 하이브리드 클라우드의 다양한 실 시예들에 적용 가능하다. 이하, 도 2에 대해 상세히 기재한다. 다양한 클라우드 및 컨테이너 인프라 환경으로부터 다양한 정보수집 인터페이스를 통해 정보의 수집이 가 능하다. 정보수집 인터페이스는 클라우드 환경에 맞춘 API 인터페이스 및 LOG 수집기를 포함하고, 특정 프로바 이더에서만 제공하는 SSM(simple systems manager) 인터페이스 또는 범용적으로 사용할 수 있는 SSH(secure shell) 인터페이스를 포함할 수 있다. 정보수집부는 변경 이력에 대한 알림 기능(notification hook)이 존재하는 경우 Webhook 또는 Watcher 인 터페이스를 통해 리소스의 변경 사항에 대한 알림(notification)을 받는다. 구체적으로, 클라우드/컨테이너 시 스템 인터페이스에서 Notification Hook (Webhook 또는 Watcher)을 제공하는 경우, 해당 인터페이스에 후킹 (hooking)하여 시스템의 변경을 모니터링 한다 해당 인터페이스가 존재하지 않는 경우, 정보수집부는 주기적으로 정보수집 인터페이스를 통해 리소스를 수집한다. 예시적인 실시예에서, 정보수집부는 주기적으로 API를 통해 폴링(polling) 방식으로 시스템(또는 시 스템 자원) 변경을 모니터링 할 수 있다. 폴링(polling)이란 하나의 장치(또는 프로그램)가 충돌 회피 또는 동 기화 처리 등을 목적으로 다른 장치(또는 프로그램)의 상태를 주기적으로 검사하여 일정한 조건을 만족할 때 송 수신 등의 자료처리를 하는 방식을 말한다. 자산관리부는 사용자(관리자)에 의해 자산을 식별한다. 예시적인 실시예에서, 자산관리부는 특정 리소스의 유형과 리소스 자체에 대한 할당 관리자를 “특정 부서” 및 “특정인”으로 지칭하며, 이상탐지부의 사전 룰에 의해 자산을 식별하고 이를 태깅(Tagging)한다 기본적으로, 인프라 환경 내 모든 리소스는 관리 주체가 명시한 특별 태그 값이 자산에 부여되며, 이것이 부여 되지 않은 리소스는 이상 리소스로 분류하고 감시 대상에 포함된다. 또한, 자산관리부는 수집한 인프라 자산에 대한 비용을 모니터링 할 수 있다. 이상탐지부는 수집된 정보를 기반으로, 인공지능 학습엔진을 통해 과금에 대한 변동량이 적정 임계값 (threshold) 기반에 있는지를 조회한다. 이상탐지부는 일별 사용량을 기준으로 월별 사용량을 예측하고, 이를 통해 이전 대비 자산비용의 규모를 예측하고, 이전 대비 자산비용의 규모가 큰 경우 관리자에게 알림을 한다. 예시적인 실시예에서, 이상탐지부는 수집된 정보를 기반으로, 인공지능 학습엔진을 통해 인프라 자산의 유 형, 속성, 리젼, 등의 부가 정보를 기계 학습할 수 있다. 기계 학습을 통해 관리자가 사용하는 인프라 자산의 유형, 속성, 리전을 소정횟수 반복하여 학습함으로써 이에 관한 데이터를 생성한다. 학습되어 생성된 데이터를 사용하여, 이상탐지부는 리소스 변경 사항과 관련하여, 사용하지 않던 유형이나 사용하지 않던 속성 또는 리전 에 관련된 자원이 생성되는 것으로 판단된 경우, 관리자에게 알림을 할 수 있다. 의도치 않은(알지 못하는) 리소스가 새로 생성된 경우, 이상탐지부는 사용자에게 경보를 알려준다. 사전 정의된 룰에 의해 특정 시간이 지난 후에도 사용자가 이 경보에 대한 반응이 없을 경우, 이상탐지부는 해 당 리소스를 자동으로 삭제하여 클라우드 환경 내에서의 잠재적인 위협 리소스와 변경을 사전 차단한다. 이상탐지부는 사전 룰을 통해 리소스에 대한 관리부서와 관리자를 명시하며, 이러한 태깅 정보를 기반으로, 인프라 내 접근 관리 가능한 사용자를 관리하며, 원치 않는 사용자(또는 부서) 로부터 특정 리소스에 대한 변경이 이루어 지면, 이를 감지하고 위협을 관리자에게 알린다. 따라서, 상기 과정을 통해 식별하기 어려운 클라우드 및/또는 컨테이너 환경 내에서 리소스를 이상탐지 하기 위 한 수동 기법(사용자 룰 기반)과, 자동 기법(학습에 의한 이상탐지)을 사용해, 관리자(사용자)가 원치 않는(의 도치 않은) 리소스가 탐지된 경우 이를 자동으로 삭제할 수 있다. 도 3은 본 발명에 따른 클라우드 환경에서 리소스 식별 및 이상 탐지 기능을 제공하는 모듈에 대한 개념도를 도 시한다. 클라우드의 API를 통해 리소스의 변경 사항이 탐지된다. 도 3에서는 API만 도시하고 있으나, 본 발명이 적 용가능한 예시적인 실시예들에서는 SSM 인터페이스, SSH 인터페이스, 또는 LOG 수집기를 통해 리소스의 변경 사 항을 탐지할 수 있다. API 모듈(개발용 접속 API)은 리소스로부터 다양한 정보를 수집한다. 또한 API 모듈은 탐지된 리소스에 주 기적(정기적)으로 접속하여 리소스 정보의 조회가 가능하다(Active Scan). 리소스를 식별하기 위한 본 발명에 따른 태깅 기법은 1) 클라우드 정보의 태깅에 의한 자산 식별 기법, 2) 태그 의 유무에 따라 자산의 이상 여부를 판별하는 이상탐지 기법, 3) 리소스의 확장에 따른 자동 태깅 부여 기법을 포함한다. 예시적인 실시예에서, API 모듈은 개발자/운영팀에서 관리하는 리소스에 대해 태깅 기법을 통해 자산을 식 별하고 마킹한다. 태깅은 클라우드 자산에 직접 마킹되는 유형과(TAG 할당), 내부 점검 시스템에서 별도로 관리(TAG 관리)하는 두 가지 태그로 구분된다. TAG 할당은 API 모듈에 의해 수행되고, TAG 관리는 자산 및 태그 관리 모듈에 의해 수행된다. 예시적인 실시예에서, 식별되지 않은 리소스가(태그가 전혀 없는 리소스) 생성되는 경우, 자산 및 태그 관리 모 듈은 조직관리(부서/담당자)에게 알림을 한다. 특정 시간이 지난 이후에도 관리자가 추가 대응 (승인/거부)을 하지 않는 경우, API 모듈의 이상 탐지 엔진은 이 리소스를 이상 자산으로 분류하며 자동 셧다운 또는 삭제 명 령을 보내어 자동으로 해당 변경 사항을 제거(제한)한다(Action). 예시적인 실시예에서, 이상탐지룰(사전 룰)에 의거하여, 사전에 인가되지 않은 부서에서 사전에 정의되지 않은 리소스와 리전(클라우드를 제공하는 데이터 센터)에 대한 변경 사항이 발생한 경우, 자산 및 태그 관리 모듈 은 이를 식별하고, 관리자에게 알림을 보낸다. 정해진 시간 이내에 관리자가 추가 대응(승인 또는 거부)을하지 않는 경우, API 모듈의 이상 탐지 엔진은 이 리소스를 이상 자산으로 분류하며 자동 셧다운 또는 삭 제 명령을 보내어 자동으로 해당 변경 사항을 제거(제한)한다(Action). 리소스의 확장에 따라 자산에 자동으로 태깅이 부여될 수 있다. 예시적인 실시예에서, Auto-Scaling 등을 통해 리소스가 복제되어 생성되는 경우 이 또한 트래킹 되고, 상위 상 속자로부터 태그 값이 상속되거나, 인스턴스 리소스의 상 하위 관계에 기초하여 자산이 모니터링 된다. 도 4는 본 발명에 따른 클라우드 환경에서 동적으로 변경되는 리소스 식별 및 관리자의 대응 여부에 따른 리소 스의 처리 방법을 도시한 도면이다. 클라우드 API에 의해 리소스의 변경 사항이 탐지되고 리소스에 대한 정보가 획득된다(S401). 태깅 및 사전 룰에 기초하여 리소스 유형이 식별된다(S403). 예시적인 실시예에서, 인프라 내 리소스에는 관리 주체가 명시한 특별 태그 값이 부여되고, 태그 값이 부여되지 않은 리소스에 대하여는 관리자에게 알림을 한다. 예시적인 실시예에서, 사전 룰에 의거하여, 사전에 인가되지 않은 부서에서 사전에 정의되지 않은 리소스와 리 전에 대한 변경 사항이 발생한 경우(즉 의도치 않은 리소스가 생성된 경우), 이를 식별하고 관리자에게 알림을 보낸다. S403 과정에서 살펴본 바와 같이 식별되지 않은 리소스에 대하여 관리자에게 알림(경보)이 되고, 관리자의 추가 대응(승인 또는 거절) 여부에 기반하여 리소스를 이상 자산으로 분류하거나 또는 분류하지 않을 수 있다(S405). 변경 이력에 대한 알림 기능(Webhook 또는 Watcher)이 존재하는 경우, 관리자는 해당 인터페이스를 통해 변경 사항에 대한 알림을 받는다. 변경 이력에 대한 알림 기능이 없는 경우, 관리자는 정보수집 인터페이스를 통해 변경 사항에 대한 알림을 받을 수 있다. 정보수집 인터페이스는 API, LOG 수집기, SSM(simple systems manager) 인터페이스, 및 SSH(secure shell) 인터페이스 중 어느 하나일 수 있다. 관리자의 추가 대응이 없는 경우, 리소스를 이상 자산으로 분류한다(S407). 상세하게는, 식별되지 않은 리소스에 대해 관리자에게 알림이 되고나서 특정 시간이 지난 이후에도 관리자가 승 인 또는 거부를 하지 않은 경우, 이상 탐지 엔진에서 식별되지 않은 리소스를 이상 자산으로 분류한다. 이상 자산으로 분류된 리소스는 자동으로 중지 또는 삭제될 수 있다(S409). 상세하게는, 이상 자산으로 분류된 리소스의 변경 사항은 자동 셧다운 또는 삭제 명령에 의해 자동으로 제거(제 한)된다. 관리자가 추가 대응을 하는 경우, 관리자의 대응에 따라 리소스가 처리된다. 관리자 대응이 승인인 경우 경보는 해제되고 해당 리소스는 DB(database)에 저장될 수 있다(S411). 관리자 대응이 거절인 경우 거절된 리소스는 삭 제될 수 있다. 도 5는 본 발명에 따른 사전 룰에 의거하여 리소스를 식별하는 방법을 도시한 도면이다. 자산관리부는 사전 룰에 기초하여 관리자(사용자)를 특정 부서와 특정인으로 분류한다(S501). 자산관리부는 특정 리소스와 특정 자원에 대해 분류된 특정 부서와 특정인을 매핑한다(S503). 이는 특정 리소스와 특정 리전에 대한 자산별 관리자를 정의하기 위함이다. 사전 룰을 통해 리소스에 대한 관리 부서와 관리자를 명시하며 이는 태깅 정보로 관리될 수 있다. 이상탐지부는 리소스에 변경 사항이 생기는 경우, 자산관리부는 변경된 리소스에 매핑되는 특정 부서와 특정인 인지 여부를 확인한다(S505). 변경된 리소스에 대응되지 않는 부서와 관리자인 경우는 즉 사전에 인가되지 않은 부서에서 사전에 정의되지 않 은 리소스와 리전에 대한 변경 사항이 발생한 경우이다. 즉, 사전 룰에 의거하여 사용자에 의해 자산을 식별하 고 태깅할 수 있다. 정보수집부는 변경된 리소스에 매핑되는 특정 부서와 특정인이 아닌 경우, 이를 관리자에게 알림(경보)을 한다 (S507). 정보수집부의 Notification Hook을 통해 관리자에게 알림을 하거나 또는 API의 Polling을 통해 관리자에게 알림 을 할 수 있다. 상기 과정에 의해 인프라 내 접근 관리 가능한 관리자(사용자)를 관리할 수 있고, 원치 않는 사용자(또는 부 서)로부터 특정 리소스에 대한 변경이 이루어 지면, 이를 감지하고 위협을 관리자에게 알린다. 도 6은 본 발명의 일 실시예에 따른 디바이스의 블록 구성도를 예시한다. 도 6을 참조하면, 디바이스는 프로세서, 메모리, 입출력 모듈, 디스플레이 모듈 및 사용자 인터페이스 모듈을 포함한다. 디바이스는 설명의 편의를 위해 도시된 것으로서 일부 모듈은 생략될 수 있다. 또한, 디바이스는 필 요한 모듈을 더 포함할 수 있다. 또한, 디바이스에서 일부 모듈은 보다 세분화된 모듈로 구분될 수 있다. 프로세서는 도면을 참조하여 예시한 본 발명의 실시 예에 따른 동작을 수행하도록 구성된다. 구체적으로, 프로세서의 자세한 동작은 도 1 내지 도 5에 기재된 내용을 참조할 수 있으며, 프로세서는 정보수집 부, 자산관리부, 이상탐지부를 포함한다. 메모리는 프로세서에 연결되며 오퍼레이팅 시스템, 어플리케이션, 프로그램 코드, 데이터 등을 저장 한다. 입출력 모듈은 프로세서에 연결되며 키보드, 프린터 등과 같은 입출력 기기와 데이터를 교신하기 위 한 주변 인터페이스나 원격지에서 통신 회선을 통하여 데이터를 교신하기 위한 입출력 통신 인터페이스 등으로 구성되어 있다. 보다 상세하게는, 본 발명에 따르면 정보수집 인터페이스가 입출력 모듈에 포함될 수 있다. 정보수집 인터페이 스는 클라우드 또는 컨테이너 환경의 리소스에 대한 정보를 주기적으로 수집하여 획득할 수 있다. 관리자는 정 보수집 인터페이스를 통해 변경 사항에 대한 알림을 받을 수 있다. 상기 정보수집 인터페이스는 API(application programming interface), LOG 수집기, SSM(simple systems manager) 인터페이스, 및 SSH(secure shell) 인터페이스를 포함할 수 있다. 디스플레이 모듈은 프로세서에 연결되며 다양한 정보를 디스플레이한다. 디스플레이 모듈은 이 로 제한되는 것은 아니지만 LCD(Liquid Crystal Display), LED(Light Emitting Diode), OLED(또는ganic Light Emitting Diode)와 같은 잘 알려진 요소를 사용할 수 있다. 사용자 인터페이스 모듈(UI module, 650)은 프로세서와 연결되며 키패드, 터치 스크린 등과 같은 잘 알려 진 사용자 인터페이스의 조합으로 구성될 수 있다. UI 모듈을 통해 사용자(관리자)는 프로세서에 포함된 자산관 리부에 자산을 태깅함으로써 자산을 식별할 수 있다. 본 발명의 프로세서는 기능적으로 정보수집부, 자산관리부, 및 이상탐지부를 포함할 수 있 다. 프로세서의 각 기능적 상세 동작은 상술한바 각 기능적 구성의 상세 동작은 생략한다. 프로세서는 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득할 수 있다. 상세하게는 프로세서가 변경 이력에 대한 알림 기능을 제공하는 인터페이스를 포함하는 경우, 해당 인터페 이스를 통해 리소스에 대한 변경 사항에 대한 알림을 획득할 수 있다. 또한 프로세서가 변경 이력에 대한 알림 기능을 제공하는 상기 인터페이스를 포함하지 않는 경우에는, 정 보수집 인터페이스를 통해 리소스에 대한 정보를 주기적으로 수집하여 획득함으로써 모니터링이 가능하다. 프로세서는 획득한 정보에 기초하여 인프라의 자산에 대한 비용을 수집 및 모니터링을 수행할 수 있다. 상 세하게는, 프로세서는 획득한 정보에 기초하여, 인공지능 학습엔진을 통해 과금에 대한 변동량이 적정 임 계값 기반에 있는지를 조회하고, 인프라의 자산에 관련하여 일별 사용량을 기준으로 월별 사용량을 예측하고, 예측한 월별 사용량이 전월 사용량을 초과하는 경우, 관리자에게 알림을 수행할 수 있다. 또한, 프로세서는 획득한 정보에 기초하여 인프라의 자산에 대한 유형, 속성, 또는 리젼 중 적어도 하나를 수집하고 모니터링을 수행할 수 있다. 상세하게는, 프로세서는 획득한 정보에 기초하여, 인공지능 학습엔 진을 통해 인프라의 자산에 대한 유형, 속성, 또는 리전을 소정 횟수 반복하여 학습하고, 소정 횟수 반복된 학 습으로부터 데이터를 추출한다. 이렇게 학습되어 추출된 데이터에 기초하여, 프로세서는 리소스의 유형,속성 또는 리전이 관리자가 사용하던 유형, 속성 또는 리전인지 여부를 판단한다. 판단 결과, 리소스의 유형, 속성 또는 리전이 관리자가 사용하지 않던 유형, 속성 또는 리전인 경우, 관리자에게 알림을 수행한다. 관리자에게 변경 이력에 대한 알림 기능을 제공하는 인터페이스는 Webhook 또는 Watcher 기능을 제공할 수 있다. 정보를 수집하는 정보수집 인터페이스는 API(application programming interface), LOG 수집기, SSM(simple systems manager) 인터페이스, 및 SSH(secure shell) 인터페이스 중 어느 하나인 것으로 결정될 수 있다. 또한, 프로세서는 태깅(tagging) 및 미리 정의된 룰에 기초하여 리소스를 식별할 수 있다. 상세하게는, 프 로세서는 상기 리소스에 대해 할당된 태그 값이 있는지 여부를 판단하고, 리소스가 미리 정의된 룰에 기초 하여 사전에 정의되지 않은 리소스인지 여부를 판단함으로써 리소스를 식별할 수 있다. 여기서 태깅의 유형은 클라우드 자산에 직접 마킹되는 유형 및 내부 점검 시스템에서 별도로 관리하는 유형 중 어느 하나일 수 있다. 리소스가 식별되지 않는 경우, 프로세서는 관리자에게 알림(notification)을 수행할 수 있다. 상세하게는, 프로세서는 리소스에 대해 상기 태그 값이 없고 리소스가 사전에 정의되지 않은 리소스인 경우를 리소스가 식별되지 않는 경우로 판단할 수 있다. 또한 프로세서는 리소스에 대한 변경 사항이 특정 부서 및 특정인에 매핑되지 않는 할당 관라자에 의한 변 경 사항이라고 판단되는 경우 해당 리소스는 사전에 정의되지 않은 리소스라고 판단한다. 이를 위해 프로세서 는 미리 정의된 룰에 기초하여 관리자를 특정 부서와 특정인으로 지정하여 분류하고, 특정 리소스의 유형 과 리소스 자체 및 특정 리전에 대한 할당 관리자를 상기 특정 부서 및 특정인에 매핑함으로써 이를 수행할 수 있다. 프로세서는 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행한다. 프로세서는 관리자에게 리소스가 식별되지 않음을 알린 경우에도 관리자의 추가 대응이 없는 경우, 상기 리소스를 이상 자산으로 분류한다. 그리고 프로세서는 이상 자산으로 분류된 리소스에 대해 중지 또는 삭제를 수행한다. 프로세서는 오토-스케일링(auto-scaling)에 의해 리소스를 복제하어 복제된 리소스를 생성하고, 복제된 리 소스를 트래킹하여 태깅할 수 있다. 복제된 리소스는 상위 상속자로부터 태그 값을 상속받는다. 이상에서 설명된 실시예들은 본 발명의 구성요소들과 특징들이 소정 형태로 결합된 것들이다. 각 구성요소 또는 특징은 별도의 명시적 언급이 없는 한 선택적인 것으로 고려되어야 한다. 각 구성요소 또는 특징은 다른 구성요 소나 특징과 결합되지 않은 형태로 실시될 수 있다. 또한, 일부 구성요소들 및/또는 특징들을 결합하여 본 발명 의 실시예를 구성하는 것도 가능하다. 본 발명의 실시예들에서 설명되는 동작들의 순서는 변경될 수 있다. 어느 실시예의 일부 구성이나 특징은 다른 실시예에 포함될 수 있고, 또는 다른 실시예의 대응하는 구성 또는 특징과 교체될 수 있다. 특허청구범위에서 명시적인 인용 관계가 있지 않은 청구항들을 결합하여 실시예를 구성하거나 출원 후의 보정에 의해 새로운 청구항으로 포함시킬 수 있음은 자명하다. 본 명세서에 개시된 실시 예들과 관련하여 설명된 방법 또는 알고리즘의 단계는 프로세서에 의해 실행되는 하드 웨어, 소프트웨어 모듈, 또는 그 2 개의 결합으로 직접 구현될 수 있다. 소프트웨어 모듈은 RAM 메모리, 플래시 메모리, ROM 메모리, EPROM 메모리, EEPROM 메모리, 레지스터, 하드 디스크, 착탈형 디스크, CD-ROM과 같은 저 장 매체(즉, 메모리 및/또는 스토리지)에 상주할 수도 있다. 예시적인 저장 매체는 프로세서에 커플링되며, 그 프로세서는 저장 매체로부터 정보를 판독할 수 있고 저장 매 체에 정보를 기입할 수 있다. 다른 방법으로, 저장 매체는 프로세서와 일체형일 수도 있다. 프로세서 및 저장 매체는 주문형 집적회로(ASIC) 내에 상주할 수도 있다. ASIC는 사용자 단말기 내에 상주할 수도 있다. 다른 방 법으로, 프로세서 및 저장 매체는 사용자 단말기 내에 개별 컴포넌트로서 상주할 수도 있다. 구체적으로, 본 발명은 적어도 하나의 프로세서에 의해 실행될 때, 상기 적어도 하나 이상의 프로세서 (processor)가 동작을 수행하도록 하는 하나 이상의 인스트럭션 (instruction)을 저장하는 비-휘발성(non- transitory) 프로세서-판독 가능 매체 (processor-readable medium)로 구현될 수도 있으며, 상기 동작들은, 상 기 디바이스에 탑재된 어플리케이션을 통한 사용자 입력에 기반하여, 클라우드 또는 컨테이너 인프라 환경 내 리소스의 변경 사항에 대한 정보를 획득하고, 태깅(tagging) 및 미리 정의된 룰에 기초하여 상기 리소스를 식별하고, 상기 리소스가 식별되지 않는 경우, 관리자에게 알림(notification)을 수행하고, 상기 관리자의 추가 대 응이 없는 경우, 상기 리소스를 이상 자산으로 분류하고, 및 상기 이상 자산으로 분류된 리소스에 대해 중지 또 는 삭제를 수행하는 것을 포함할 수 있다."}
{"patent_id": "10-2021-0147225", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이상, 첨부된 도면을 참조로 하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야의 통상의 기술 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며, 제한적이 아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2021-0147225", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명에 대한 이해를 돕기 위해 상세한 설명의 일부로 포함된, 첨부 도면은 다양한 실시예들을 제공하고, 상 세한 설명과 함께 다양한 실시예들의 기술적 특징을 설명한다. 도 1은 클라우드 및 컨테이너 인프라 환경에 대한 일 예시를 도시한다. 도 2는 본 발명에 따른 클라우드 인프라 환경에서의 자산관리 시스템을 도시한다. 도 3은 본 발명에 따른 클라우드 환경에서 리소스 식별 및 이상 탐지 기능을 제공하는 모듈에 대한 개념도를 도 시한다. 도 4는 본 발명에 따른 클라우드 환경에서 동적으로 변경되는 리소스 식별 및 관리자의 대응 여부에 따른 리소 스의 처리 방법을 도시한 도면이다. 도 5는 본 발명에 따른 사전 룰에 의거하여 리소스를 식별하는 방법을 도시한 도면이다. 도 6은 본 발명의 일 실시예에 따른 디바이스의 블록 구성도를 예시한다."}
