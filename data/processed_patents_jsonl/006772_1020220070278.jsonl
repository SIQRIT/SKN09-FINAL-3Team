{"patent_id": "10-2022-0070278", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0169756", "출원번호": "10-2022-0070278", "발명의 명칭": "전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "아렌트 크지슈토프"}}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,적어도 하나의 명령어를 저장하는 메모리,상기 메모리와 연결되어 상기 전자 장치를 제어하는 프로세서를 포함하고,상기 프로세서는, 상기 적어도 하나의 명령어를 실행함으로써,복수의 학습 데이터를 획득하고,상기 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하고,상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키고,상기 복수의 임베딩 벡터 중 상기 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하고,상기 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별하고,상기 임베딩 공간에서 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는합성 임베딩 벡터를 획득하고,상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시키는 전자 장치."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 합성하여 상기 임베딩 공간에서 상기 경로의 일지점에 위치하는 합성 임베딩 벡터를 획득하는 전자 장치."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 오분류된 임베딩 벡터는 라벨링 된 클래스와 상기 인공지능 모델에 입력되어 예측된 클래스가 상이한 임베딩 벡터인 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 가장 인접한 임베딩 벡터는 상기 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터인 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는,상기 합성 임베딩 벡터의 클래스를 상기 오분류된 임베딩 벡터의 라벨링된 클래스로 라벨링하는 전자 장치."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,공개특허 10-2023-0169756-3-상기 프로세서는,상기 복수의 학습 데이터 각각에서 특징을 추출하여 상기 복수의 임베딩 벡터를 획득하는 전자 장치."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 프로세서는,상기 재학습된 인공지능 모델의 성능이 기설정된 기준 이하이면, 상기 인공지능 모델에 의해 분류가 오분류된임베딩 벡터를 재식별하고,상기 임베딩 공간에서 상기 재식별된 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터와 상기 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하여 상기 인공지능 모델을 업데이트 시키는전자 장치."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "전자 장치의 제어 방법에 있어서,복수의 학습 데이터를 획득하는 단계;상기 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하는 단계;상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키는 단계;상기 복수의 임베딩 벡터 중 상기 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하는단계;상기 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별하는 단계;상기 임베딩 공간에서 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는합성 임베딩 벡터를 획득하는 단계; 및상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시키는 단계;를 포함하는제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 합성 임베딩 벡터를 획득하는 단계는,상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 합성하여 상기 임베딩 공간에서 상기 경로의 일지점에 위치하는 합성 임베딩 벡터를 획득하는 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 오분류된 임베딩 벡터는 라벨링 된 클래스와 상기 인공지능 모델에 입력되어 예측된 클래스가 상이한 임베딩 벡터인 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 가장 인접한 임베딩 벡터는 상기 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터인 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서,공개특허 10-2023-0169756-4-상기 제어 방법은,상기 합성 임베딩 벡터의 클래스를 상기 오분류된 임베딩 벡터의 라벨링된 클래스로 라벨링하는 단계;를 더 포함하는 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항에 있어서,상기 복수의 임베딩 벡터를 획득하는 단계는,상기 복수의 학습 데이터 각각에서 특징을 추출하여 상기 복수의 임베딩 벡터를 획득하는 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1항에 있어서,상기 제어 방법은,상기 재학습된 인공지능 모델의 성능이 기설정된 기준 이하이면, 상기 인공지능 모델에 의해 분류가 오분류된임베딩 벡터를 재식별하는 단계; 및상기 임베딩 공간에서 상기 재식별된 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터와 상기 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하여 상기 인공지능 모델을 업데이트 시키는단계;를 더 포함하는 제어 방법."}
{"patent_id": "10-2022-0070278", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "전자 장치의 제어 방법을 실행하는 프로그램을 포함하는 비일시적 컴퓨터 판독 가능 기록매체에 있어서,상기 전자 장치의 제어 방법은,복수의 학습 데이터를 획득하는 단계;상기 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하는 단계;상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키는 단계;상기 복수의 임베딩 벡터 중 상기 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하는단계;상기 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별하는 단계;상기 임베딩 공간에서 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는합성 임베딩 벡터를 획득하는 단계; 및상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시키는 단계;를 포함하는컴퓨터 판독 가능 기록 매체."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 본 전자 장치는 적어도 하나의 명령어를 저장하는 메모리, 메모리와 연결되어 전자 장치 를 제어하는 프로세서를 포함하고, 프로세서는, 적어도 하나의 명령어를 실행함으로써, 복수의 학습 데이터를 획 득하고, 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하고, 복수의 임베딩 벡터에 기초하여 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키고, 복수의 임베딩 벡터 중 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하고, 임베딩 공간에서 오분류된 임 베딩 벡터와 가장 인접한 임베딩 벡터를 식별하고, 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하고, 및 합성 임베딩 벡터를 학습 데이터에 추가하여 인공지능 모델을 재학습시킨다."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 그 제어 방법에 관한 것으로, 더욱 상세하게는 기존의 학습 데이터를 기초로 새로운 학 습 데이터를 획득하여 인공지능 모델을 학습하는 전자 장치 및 그 제어 방법에 관한 것이다."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence, 이하, AI) 시스템은 기계가 스스로 학습(training)하고 판단하며 목적하는 결과를 도출하거나 목적하는 동작을 수행하는 시스템이다.AI 기술은 딥러닝과 같은 기계 학습 및 기계학습을 활용한 요소 기술들로 구성된다. AI 기술은, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야 등에서 널리 이용되고 있다. 예를 들어, AI 기술은 시각적 이해 및 추론/예측의 기술 분야의 기술에서 이용될 수 있다. 구체적으로, AI 기술 을 이용하여 입력된 데이터를 분석하여 분류하기 위한 기술을 구현할 수 있다. 즉, 입력된 데이터를 분석 및/또 는 분류하여, 목적하는 결과를 획득할 수 있는 방법 및 장치를 구현할 수 있다. 여기서, AI 모델이 입력 데이터에 대응되는 출력 데이터를 생성하는데 있어서, 출력 데이터의 정확도는 학습 데 이터에 따라 달라질 수 있다. 이 때, 다수의 학습 데이터를 확보하고 AI 모델의 성능을 향상시키기 위해서는 많은 시간과 자원이 소요되는 문 제가 있다."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 종래의 문제를 해결하기 위해 안출된 것으로, 본 개시의 목적은 임베딩 공간을 기반으로 학습 데이터를 합성하여 입력 데이터를 분류하는 인공지능 모델의 성능을 향상시키는 전자 장치 및 그 제어 방법을 제공함에 있다. 본 개시의 기술적 사상이 해결하고자 하는 과제는, 이상에서 언급한 과제에 제한되지 않으며, 언급되지 않은 또 다른 과제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "이상과 같은 목적을 달성하기 위한 본 개시의 일 실시예에 따른 전자 장치는 적어도 하나의 명령어를 저장하는 메모리, 상기 메모리와 연결되어 상기 전자 장치를 제어하는 프로세서를 포함하고, 상기 프로세서는, 상기 적어 도 하나의 명령어를 실행함으로써, 복수의 학습 데이터를 획득하고, 상기 복수의 학습 데이터 각각에 대해 임베 딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하고, 상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키고, 상기 복수의 임베딩 벡터 중 상기 인공지능 모 델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하고, 상기 임베딩 공간에서 오분류된 임베딩 벡터와 가 장 인접한 임베딩 벡터를 식별하고, 상기 임베딩 공간에서 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베 딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하고, 상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시킨다. 상기 프로세서는, 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 합성하여 상기 임베딩 공간에 서 상기 경로의 일 지점에 위치하는 합성 임베딩 벡터를 획득할 수 있다. 상기 오분류된 임베딩 벡터는, 라벨링 된 클래스와 상기 인공지능 모델에 입력되어 예측된 클래스가 상이한 임 베딩 벡터일 수 있다. 상기 가장 인접한 임베딩 벡터는 상기 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터일 수 있다. 상기 프로세서는, 상기 합성 임베딩 벡터의 클래스를 상기 오분류된 임베딩 벡터의 라벨링된 클래스로 라벨링할 수 있다. 상기 프로세서는, 상기 복수의 학습 데이터 각각에서 특징을 추출하여 상기 복수의 임베딩 벡터를 획득할 수 있 다. 상기 프로세서는, 상기 재학습된 인공지능 모델의 성능이 기설정된 기준 이하이면, 상기 인공지능 모델에 의해 분류가 오분류된 임베딩 벡터를 재식별하고, 상기 임베딩 공간에서 상기 재식별된 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터와 상기 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득 하여 상기 인공지능 모델을 업데이트 시킬 수 있다. 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법은 복수의 학습 데이터를 획득하는 단계; 상기 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하는 단계; 상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키는 단계; 상기 복수의 임베딩 벡터 중 상기 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하는 단계; 상기 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별하는 단계; 상기 임베딩 공간에서 상기 오 분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하는 단계; 및 상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시키는 단계;를 포함한다. 상기 합성 임베딩 벡터를 획득하는 단계는, 상기 오분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 합성 하여 상기 임베딩 공간에서 상기 경로의 일 지점에 위치하는 합성 임베딩 벡터를 획득할 수 있다. 상기 오분류된 임베딩 벡터는 라벨링 된 클래스와 상기 인공지능 모델에 입력되어 예측된 클래스가 상이한 임베 딩 벡터일수 있다. 상기 가장 인접한 임베딩 벡터는 상기 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터일 수 있다. 상기 제어 방법은, 상기 합성 임베딩 벡터의 클래스를 상기 오분류된 임베딩 벡터의 라벨링된 클래스로 라벨링 하는 단계;를 더 포함할 수 있다. 상기 복수의 임베딩 벡터를 획득하는 단계는, 상기 복수의 학습 데이터 각각에서 특징을 추출하여 상기 복수의 임베딩 벡터를 획득할 수 있다. 상기 제어 방법은, 상기 재학습된 인공지능 모델의 성능이 기설정된 기준 이하이면, 상기 인공지능 모델에 의해 분류가 오분류된 임베딩 벡터를 재식별하는 단계; 및 상기 임베딩 공간에서 상기 재식별된 오분류된 임베딩 벡 터와 가장 인접한 임베딩 벡터와 상기 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하여 상기 인공지능 모델을 업데이트 시키는 단계;를 더 포함할 수 있다. 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 실행하는 프로그램을 포함하는 비일시적 컴퓨터 판독 가 능 기록매체에 있어서, 상기 전자 장치의 제어 방법은 복수의 학습 데이터를 획득하는 단계; 상기 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득하는 단계; 상기 복수의 임베딩 벡터에 기초하여 상기 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시키는 단계; 상기 복수의 임베딩 벡터 중 상기 인공지능 모델에 의해 오분류(misclassified)된 임베딩 벡터를 식별하는 단계; 상기 임베 딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별하는 단계; 상기 임베딩 공간에서 상기 오 분류된 임베딩 벡터와 상기 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하는 단계; 및 상기 합성 임베딩 벡터를 상기 학습 데이터에 추가하여 상기 인공지능 모델을 재학습시키는 단계;를 포함한다."}
{"patent_id": "10-2022-0070278", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는 바, 특정 실시 예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하려는것이 아니며, 본 개시의 실시 예의 다양한 변경(modifications), 균등물(equivalents), 및/또는 대체물 (alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유 사한 참조 부호가 사용될 수 있다. 본 개시를 설명함에 있어서, 관련된 공지 기능 혹은 구성에 대한 구체적인 설명이 본 개시의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그에 대한 상세한 설명은 생략한다. 덧붙여, 하기 실시 예는 여러 가지 다른 형태로 변형될 수 있으며, 본 개시의 기술적 사상의 범위가 하기 실시 예에 한정되는 것은 아니다. 오히려, 이들 실시 예는 본 개시를 더욱 충실하고 완전하게 하고, 당업자에게 본 개시의 기술적 사상을 완전하게 전달하기 위하여 제공되는 것이다. 본 개시에서 사용한 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 권리범위를 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 개시에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 개시에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\"등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 개시에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직 접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 개시에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for),\" \"~하는 능력을 가지는(having the capacity to),\" \"~하도록 설계된(designed to),\" \"~하도 록 변경된(adapted to),\" \"~하도록 만들어진(made to),\" 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\"것만 을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메모리 장치에 저장된 하나 이상의 소프트 웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 실시 예에 있어서 '모듈' 혹은 '부'는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 '모듈' 혹은 복수의 '부'는 특정 한 하드웨어로 구현될 필요가 있는 '모듈' 혹은 '부'를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하 나의 프로세서로 구현될 수 있다. 한편, 도면에서의 다양한 요소와 영역은 개략적으로 그려진 것이다. 따라서, 본 개시의 기술적 사상은 첨부한 도면에 그려진 상대적인 크기나 간격에 의해 제한되지 않는다. 이하에서는 첨부한 도면을 참고하여 본 개시에 따른 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 도 1은 본 개시의 일 실시예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다. 전자 장치는 메모리, 통신 인터페이스, 사용자 인터페이스, 스피커, 마이크 및 프로세서를 포함할 수 있다. 전자 장치는 상기 구성요소 중 일부가 생략될 수 있으며, 다른 구성요소 를 더 포함할 수 있다. 그리고, 전자 장치는 이어폰 또는 헤드셋과 같은 오디오 기기로 구현될 수 있으나, 이는 일 실시예에 불과 할 뿐, 스마트폰, 태블릿 PC, PC, 서버, 스마트 TV, 휴대폰, PDA(personal digital assistant), 랩톱, 미디어 플레이어, 전자책 단말기, 디지털방송용 단말기, 네비게이션, 키오스크, MP3 플레이어, 디지털 카메라, 웨어러 블 장치, 가전기기 및 기타 모바일 또는 비모바일 컴퓨팅 장치 등 다양한 형태로 구현될 수 있다. 메모리는 전자 장치에 관한 적어도 하나의 명령어(instruction)를 저장할 수 있다. 메모리는 전 자 장치를 구동시키기 위한 O/S(Operating System)를 저장할 수 있다. 또한, 메모리는 본 개시의 다 양한 실시 예들에 따라 전자 장치가 동작하기 위한 각종 소프트웨어 프로그램이나 애플리케이션을 저장할 수 있다. 그리고, 메모리는 플래시 메모리(Flash Memory) 등과 같은 반도체 메모리나 하드디스크(Hard Disk) 등과 같은 자기 저장 매체 등을 포함할 수 있다. 구체적으로, 메모리는 본 개시의 다양한 실시 예에 따라 전자 장치가 동작하기 위한 각종 소프트웨어 모듈을 저장할 수 있으며, 프로세서는 메모리에 저장된 각종 소프트웨어 모듈을 실행하여 전자 장치 의 동작을 제어할 수 있다. 즉, 메모리는 프로세서에 의해 액세스되며, 프로세서에 의한 데이터의 독취/기록/수정/삭제/갱신 등이 수행될 수 있다. 한편, 본 개시에서 메모리라는 용어는 메모리, 프로세서 내 롬(미도시), 램(미도시) 또는 전자 장치에 장착되는 메모리 카드(미도시)(예를 들어, micro SD 카드, 메모리 스틱)를 포함하는 의미로 사용될 수 있다. 그리고, 메모리는 적어도 하나의 인공지능 모델을 저장할 수 있다. 이 때, 인공지능 모델은 데 이터가 입력되면 입력 데이터의 클래스를 분류하는 학습된 모델일 수 있다. 예를 들어, 도 2에 도시된 바와 같이, 인공지능 모델은 오디오에 대한 데이터가 입력되면 복수의 클 래스 중 하나의 클래스를 출력할 수 있다. 이 때, 출력되는 클래스는 사람 목소리(220-1), 음악 소리(220- 2) 또는 노이즈(220-3)를 포함할 수 있다. 또는, 복수의 클래스는 특정인의 목소리를 포함할 수 있다. 한편, 인공지능 모델은 적어도 하나의 인공 신경망을 포함할 수 있으며, 인공 신경망은 복수의 레이어들로 구성될 수 있다. 복수의 신경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전 (previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 복수의 신경망 레이어들이 갖고 있는 복수의 가중치들은 인공지능 모델의 학습 결과에 의해 최적화될 수 있다. 예를 들어, 학 습 과정 동안 인공지능 모델에서 획득한 로스(loss) 값 또는 코스트(cost) 값이 감소 또는 최소화되도록 복수의 가중치들이 갱신될 수 있다. 여기서, 레이어들 각각의 가중치는 레이어들 각각의 파라미터로 지칭될 수 있다. 여기서, 인공 신경망은 CNN(Convolution Neural Network), 1DCNN(1-Dimension Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restricted Boltzman Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Bi-LSTM (Bidirectional-Long Short-Term Memory) Network Classification Network, Plain Residual Network, Dense Network, Hierarchical Pyramid Network, Fully Convolutional Network, SENet(Squeeze and Excitation Network), Transformer Network, 인코더(Encoder), 디 코더(Decoder), 오토인코더(Auto Encoder) 또는 이들의 조합 등 다양한 종류의 뉴럴 네트워크 모델들 중 적어도 하나를 포함할 수 있으며 본 개시에서의 인공 신경망은 전술한 예에 한정되지 않는다. 통신 인터페이스는 회로(circuitry)를 포함하며, 외부 기기 및 서버와 통신할 수 있는 구성이다. 통신 인 터페이스는 유선 또는 무선 통신 방식에 기초하여 외부 기기 또는 서버와 통신을 수행할 수 있다. 이 경우, 통신 인터페이스는 블루투스 모듈(미도시), 와이파이 모듈(미도시), IR(infrared) 모듈, LAN(Local Area Network) 모듈, 이더넷(Ethernet) 모듈 등을 포함할 수 있다. 여기서, 각 통신 모듈은 적어도 하나의 하드 웨어 칩 형태로 구현될 수 있다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), USB(Universal Serial Bus), MIPI CSI(Mobile Industry Processor Interface Camera Serial Interface), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation)등과 같은 다양한 무 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 다만 이는 일 실시 예에 불과하며 통신 인터페이스는 다양한 통신 모듈 중 적어도 하나의 통신 모듈을 이용할 수 있다. 사용자 인터페이스는 전자 장치를 제어하기 위한 사용자 명령을 입력받기 위한 구성이다. 버튼, 터치 패드, 마우스 및 키보드와 같은 장치로 구현되거나, 디스플레이 기능 및 조작 입력 기능도 함께 수행 가능한 터 치 스크린으로도 구현될 수 있다. 여기서, 버튼은 전자 장치의 본체 외관의 전면부나 측면부, 배면부 등의 임의의 영역에 형성된 기계적 버튼, 터치 패드, 휠 등과 같은 다양한 유형의 버튼이 될 수 있다. 전자 장치 는 사용자 인터페이스를 통해 다양한 사용자 입력을 획득할 수 있다. 스피커는 입출력 인터페이스에서 처리된 각종 오디오 데이터뿐만 아니라 각종 알림 음이나 음성 메시지 등 을 출력할 수 있다. 마이크 사용자의 음성과 같은 음성 데이터를 획득할 수 있다. 예를 들어, 마이크는 전자 장치의 상측이나 전면 방향, 측면 방향 등에 일체형으로 형성될 수 있다. 마이크는 아날로그 형태의 사용자 음성 을 수집하는 마이크, 수집된 사용자 음성을 증폭하는 앰프 회로, 증폭된 사용자 음성을 샘플링하여 디지털 신호 로 변환하는 A/D 변환회로, 변환된 디지털 신호로부터 노이즈 성분을 제거하는 필터 회로 등과 같은 다양한 구 성을 포함할 수 있다. 프로세서는 전자 장치의 전반적인 동작 및 기능을 제어할 수 있다. 구체적으로, 프로세서는 메 모리를 포함하는 전자 장치의 구성과 연결되며, 상술한 바와 같은 메모리에 저장된 적어도 하나 의 명령어를 실행함으로써, 전자 장치의 동작을 전반적으로 제어할 수 있다. 프로세서는 다양한 방식으로 구현될 수 있다. 예를 들어, 프로세서는 주문형 집적 회로(Application Specific Integrated Circuit, ASIC), 임베디드 프로세서, 마이크로 프로세서, 하드웨어 컨트롤 로직, 하드웨 어 유한 상태 기계(hardware Finite State Machine, FSM), 디지털 신호 프로세서(Digital Signal Processor, DSP) 중 적어도 하나로 구현될 수 있다. 한편, 본 개시에서 프로세서라는 용어는 CPU(Central Processing Unit), GPU(Graphic Processing Unit) 및 MPU(Main Processing Unit)등을 포함하는 의미로 사용될 수 있다. 본 개시의 다양한 실시 예를 구현하기 위한 프로세서의 동작은 인공지능 모델 및 복수의 모듈을 통해 구현될 수 있다. 구체적으로, 본 개시에 따른 인공지능 모델 및 복수의 모듈에 대한 데이터는 메모리에 저장될 수 있 고, 프로세서는 메모리에 엑세스하여 인공지능 모델 및 복수의 모듈에 대한 데이터를 프로세서 내부의 메모리 또는 버퍼에 로딩한 후, 인공지능 모델 및 복수의 모듈을 이용하여 본 개시에 따른 다양한 실시예를 구현할 수 있다. 이 때, 복수의 모듈은 학습 데이터 획득 모듈, 임베딩 모듈, 학습 모듈, 합성 모듈 및 업데이트 모듈를 포함할 수 있다. 다만, 본 개시에 따른 인공지능 모델 및 복수의 모듈 중 적어도 하나는 하드웨어로 구현되어 시스템 온 칩 (system on chip)의 형태로 프로세서내에 포함될 수도 있다. 학습 데이터 획득 모듈은 복수의 학습 데이터를 획득할 수 있다. 이 때, 학습 데이터는 인공지능 모델 을 학습시키기 위한 학습 데이터일 수 있다. 예를 들어, 학습 데이터 획득 모듈은 마이크를 통해 인공지능 모델을 학습시키기 위한 오디오 데이터를 획득할 수 있다. 한편, 학습 데이터는 오디오 데이터 이외에도 이미지, 비디오 등 다양한 형태의 데이 터로 구현될 수 있다. 그리고, 학습 데이터 획득 모듈은 클래스가 라벨링 된 복수의 학습 데이터를 획득할 수 있다. 예를 들어, 복수의 학습 데이터가 오디오 데이터인 경우, 복수의 학습 데이터는 사람의 목소리, 음악 소리 또는 박수 소리 에 대한 클래스로 라벨링 될 수 있다. 또는, 학습 데이터 획득 모듈은 클래스가 라벨링 되지 않은 학습 데이터를 획득할 수 있다. 이 때, 학습 데이터 획득 모듈은 학습 데이터로부터 획득된 특징 간의 유사도에 따라 복수의 클래스 중 하나를 라벨링 할 수 있다. 임베딩 모듈은 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터를 획득 할 수 있다. 이 때, 복수의 임베딩 벡터는 복수의 학습 데이터 각각에 대응될 수 있다. 구체적으로, 임베딩 모듈은 복수의 학습 데이터 각각에서 특징을 추출하여 복수의 임베딩 벡터를 획득할 수 있다. 도 3을 참조하면, 복수의 학습 데이터가 획득되면(S310), 임베딩 모듈은 복수의 학습 데이터 각각에서 특 징을 추출할 수 있다(S320). 임베딩 모듈은 학습 데이터를 시간 및 주파수 영역에서 프레임 단위로 분석하 여 Energy, MFCC(Mel Frequency Cepstral Coefficients), Centroid, 볼륨(Volume), 파워(energy), 서브 밴드 에너지(sub-band energy), 로우 쇼트 타입 에너지 비율(low short-time energy ratio), 제로 크로싱 비(zero crossing rate), 주파수 중심(frequency centroid), 주파수 대역폭(frequency bandwidth), 스펙트럼 변화 (spectral flux), 켑스트랄 변화(cepstral flux), 라우드니스(loudness) 등과 같은 특징을 추출할 수 있다. 또는, 임베딩 모듈은 주성분 분석(Principal Component Analysis, PCA) 또는 독립 성분 분석(Independent Component Analysis, ICA) 방법을 이용하여 복수의 학습 데이터에 대한 특징을 추출할 수 있다. 그리고, 임베딩 모듈은 추출된 특징 중 적어도 하나를 이용하여 임베딩 공간에 매핑될 수 있는 복수의 임 베딩 벡터를 획득할 수 있다(S330). 이 때, 복수의 임베딩 벡터는 도 3에 도시된 바와 같이 임베딩 공간에 매핑 될 수 있다. 이 때, 동일한 클래스의 학습 데이터 또는 유사한 학습 데이터는 가까운 거리에 위치할 수 있고, 동일하지 않은 클래스의 학습 데이터 또는 비유사한 학습 데이터는 더 먼 거리에 위치할 수 있다. 여기서, 임베 딩 벡터 각각은 임베딩 공간에 표시된 특징 포인트 각각에 대응될 수 있다. 한편, 복수의 임베딩 벡터는 클래스가 라벨링 된 임베딩 벡터일 수 있다. 예를 들어, 도 3에 도시된 바와 같이 복수의 임베딩 벡터는 CLASS 1, CLASS 2 또는 CLASS 3으로 라벨링 될 수 있다. 이때, CLASS 1은 사람 목소리에 대응되며, CLASS2는 음악 소리에 대응되며, CLASS 3은 노이즈에 대응될 수 있다. 또는 CLASS 1은 A의 목소리에 대응되며, CLASS 2는 B의 목소리에 대응되며, CLASS 3은 C의 목소리에 대응될 수 있다. 이 때, 복수의 임베딩 벡터의 클래스는 복수의 학습 데이터의 라벨링 된 클래스와 대응될 수 있다. 한편, 복수 의 학습 데이터는 클래스가 라벨링 된 데이터일 수 있으나, 이는 일 실시예에 불과할 뿐, 학습 데이터 획득 모 듈은 클래스가 라벨링 되지 않은 복수의 학습 데이터를 획득할 수도 있다. 이 때, 임베딩 모듈은 임 베딩 공간 상에서 각 임베딩 벡터가 형성하는 클러스터를 기준으로 복수의 임베딩 벡터(또는, 학습 데이터)의 클래스를 라벨링 할 수도 있다. 그리고, 복수의 임베딩 벡터에 기초하여, 학습 모듈은 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시킬 수 있다. 이 때, 인공지능 모델에 입력되는 데이터는 학습 데이터 또는 학습 데이터 로부터 획득된 임베딩 벡터일 수 있다. 그리고, 인공지능 모델에 의해 출력되는 데이터는 입력된 데이터의 예측 클래스(predicted class)일 수 있다. 이 때, 학습 모듈은 학습 데이터(또는 임베딩 벡터) 중 적어도 일부를 판단 기준으로 이용하는 지도 학습 (supervised learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 예를 들어, 임베딩 벡터를 독립 변 수로 하고 임베딩 벡터에 라벨링 된 클래스를 종속 변수로 하여, 학습 모듈은 지도 학습 방식으로 인공지 능 모델을 학습시킬 수 있다. 또는, 학습 모듈은 별다른 지도 없이 학습 데이터(또는 임베딩 벡터)를 이용하여 스스로 학습함으로써, 클 래스 판단을 위한 판단 기준을 발견하는 비지도 학습(unsupervised learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 또한, 학습 모듈은 예를 들어, 학습에 따른 상황 판단의 결과가 올바른 지에 대한 피드 백을 이용하는 강화 학습(reinforcement learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 또한, 학습 모듈은 예를 들어, 오류 역전파법(error back-propagation) 또는 경사 하강법(gradient descent)을 포함하는 학습 알고리즘 등을 이용하여 인공지능 모델을 학습시킬 수 있다. 그리고, 학습된 인공지능 모델은 학습 데이터 또는 임베딩 벡터가 입력되면, 임베딩 공간 상의 위치를 기 준으로 입력 데이터의 클래스를 분류할 수 있다. 한편, 학습 모듈이 인공지능 모델을 학습시킬 수 있으나, 이는 일 실시예에 불과할 뿐, 인공지능 모 델은 별도의 외부 기기 또는 외부 서버에 의해 학습되고, 메모리에 저장된 모델일 수 있다. 그리고, 합성 모듈은 인공지능 모델에 의해 출력된 결과 중 오분류된 데이터를 식별할 수 있다. 이 때, 오분류된 데이터는 데이터의 라벨링 된 클래스(labeled class)와 데이터가 인공지능 모델에 입력되어 인공지능 모델에 의해 예측된 클래스(predicted class)가 상이한 데이터일 수 있다. 예를 들어, 인공지능 모델이 ‘음악 소리’로 라벨링 된 임베딩 벡터를 입력 받고 분류 결과를 ‘사람 목소리’라고 출력한 경우, ‘음악 소리’에 대한 임베딩 벡터는 오분류된 임베딩 벡터일 수 있다. 그리고, 식별된 오분류된 데이터에 기초하여, 합성 모듈은 학습 데이터를 추가적으로 합성하여 인공지능 모델을 재학습시킬 수 있다. 구체적으로, 도 5를 참조하면, 합성 모듈은 복수의 임베딩 벡터 중 인공지능 모델에 의해 오분류 (misclassified)된 임베딩 벡터를 식별할 수 있다(S510). 이 때, 도 6a에 도시된 바와 같이, 학습 데이터로부터 획득된 복수의 임베딩 벡터는 임베딩 공간에 매핑될 수 있다. 이 때, 복수의 임베딩 벡터의 라벨링된 클래스(Labeled Class)는 도 6a에 도시된 바와 같이 CLASS 1, CLASS 2 또는 CLASS 3 일 수 있다. 여기서, 복수의 임베딩 벡터 중 제1 임베딩 벡터의 라벨링된 클래스는 CLASS 2일 수 있다. 그리고, 복수의 임베딩 벡터를 기초로 학습된 인공지능 모델에 의해 예측된 클래스(Predicted Class)는 도 6b에 도시된 바와 같이 CLASS 1, CLASS2 또는 CLASS 3 일 수 있다. 이 때, 복수의 임베딩 벡터 중 제1 임베딩 벡터가 인공지능 모델에 입력되어 예측된 클래스는 CLASS 1일 수 있다. 즉, 제1 임베딩 벡터의 라벨링 된 클래스는 CLASS 2이고, 예측된 클래스는 CLASS 1일 수 있 다. 이 경우, 합성 모듈은 제1 임베딩 벡터를 오분류된 임베딩 벡터로 식별할 수 있다. 한편, 오분류 된 임베딩 벡터가 복수인 경우, 합성 모듈은 복수의 오분류된 임베딩 벡터를 식별할 수 있다. 그리고, 합성 모듈은 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별할 수 있다 (S520). 구체적으로, 합성 모듈은 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식 별할 수 있다. 이 때, 가장 인접한 임베딩 벡터는 오분류된 임베딩 벡터의 라벨링된 클래스와 동일한 클래스로 예측된 임베딩 벡터일 수 있다. 즉, 합성 모듈은 오분류된 임베딩 벡터의 라벨링된 클래스와 동일한 클래스로 라벨링 된 (또는 동일한 클래스로 예측된) 임베딩 벡터 중 오분류된 임베딩 벡터와 인접한 임베딩 벡터를 식별할 수 있다. 도 6b에 도시된 바와 같이, 제1 임베딩 벡터가 오분류된 임베딩 벡터로 식별된 경우, 합성 모듈은 제 1 임베딩 벡터의 라벨링된 클래스인 CLASS 1과 동일한 클래스로 예측된 임베딩 벡터 중 임베딩 공간상에서 제1 임베딩 벡터와 거리가 가장 가까운 제2 임베딩 벡터를 오분류된 임베딩 벡터와 가장 인접한 임베 딩 벡터로 식별할 수 있다. 또한, 가장 인접한 임베딩 벡터는 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터일 수 있다. 즉, 가장 인접한 임베딩 벡터의 라벨링된 클래스와 예측된 클래스는 동일할 수 있다. 다시 말해, 합성 모듈은 인공지능 모델에 의해 성공적으로 분류된 복수의 임베딩 벡터 중 오분류된 임베딩 벡터와 가장 인접한 임 베딩 벡터를 식별할 수 있다. 그리고, 합성 모듈은 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터(Synthetic Embedding Vector)를 획득할 수 있다(S530). 한편, 본 개시에서, 임베딩 벡터 사이의 경로는 임베딩 공간에서 임베딩 벡터 사이를 연결하는 최단 경로를 의미할 수 있다. 즉, 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결한 경로는 임베딩 공간에서 오분류된 임베딩 벡터 및 가장 인접 한 임베딩 벡터를 연결하는 최단 경로를 의미할 수 있다. 구체적으로, 도 6b를 참조하면, 합성 모듈은 오분류된 임베딩 벡터 및 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터 사이를 연결한 경로를 식별할 수 있다. 이 때, 합성 모듈은 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 합성하여 임베딩 공간에서 오뷴류 된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결한 경로의 일 지점에 위치하는 합성 임베딩 벡터를 획득할 수 있다. 도 6c를 참조하면, 합성 모듈은 제1 임베딩 벡터 및 제2 임베딩 벡터를 연결하는 경로를 식별하고, 경로 상의 일 지점에 위치하는 합성 임베딩 벡터를 획득할 수 있다. 이 때, 합성 모듈 은 제1 임베딩 벡터 및 제2 임베딩 벡터를 합성하여 합성 임베딩 벡터를 획득할 수 있으나, 이는 일 실시 예에 불과할 뿐, 합성 모듈은 경로에 대한 정보를 바탕으로 경로상의 일 지점에 위치하는 임베딩 백터를 획득할 수도 있다. 그리고, 합성 임베딩 벡터의 위치는 임베딩 공간 상에서 제1 임베딩 벡터와 제2 임베딩 벡터 사 이의 중앙 지점에 위치할 수 있으나, 이는 일 실시예에 불과할 뿐, 합성 임베딩 벡터는 경로 상의 임의의 지점에 위치할 수도 있다. 한편, 합성 모듈은 경로의 일 지점에 위치하는 하나의 합성 임베딩 벡터를 획득할 수도 있으나, 이는 일 실시예에 불과할 뿐, 합성 모듈은 경로의 복수의 지점에 위치하는 복수의 합성 임베딩 벡터를 획득할 수도 있다. 도 6d를 참조하면, 경로가 식별되면, 합성 모듈은 경로 상의 복수의 지점에 위치하는 복수의 합 성 임베딩 벡터(641, 642, 643)를 획득할 수도 있다. 한편, 오분류된 임베딩 벡터가 식별되면, 합성 모듈은 오분류된 임베딩 벡터와 가장 인접한 하나의 임베딩 벡터를 식별할 수 있으나, 이는 일 실시예에 불과할 뿐, 합성 모듈은 오분류된 임베딩 벡터와 거리가 가까 운 순서대로 복수의 임베딩 벡터를 식별할 수 있다. 이 때, 합성 모듈은 식별된 복수의 임베딩 벡터 각각 과 오분류된 임베딩 벡터를 연결한 경로 상의 일 지점에 위치하도록 하나 이상의 합성 임베딩 벡터를 획득할 수 있다. 도 6e를 참조하면, 합성 모듈은 복수의 임베딩 벡터 중 제1 임베딩 벡터와 가까운 순서대로 복수 개 의 임베딩 벡터(620, 621, 622)를 식별할 수 있다. 그리고, 합성 모듈은 제1 임베딩 벡터와 복수 개의 임 베딩 벡터(620, 621, 622) 각각 사이의 복수의 경로(630, 631, 632)를 식별할 수 있다. 그리고, 도 6e에 도시된 바와 같이, 합성 모듈은 복수의 경로(630, 631, 632) 상에 위치하는 복수의 합성 임베딩 벡터(640, 641, 642)를 획득할 수 있다. 또는, 합성 모듈은 임베딩 공간 상에서 오분류된 임베딩 벡터와 기설정된 거리 내의 적어도 하나의 임베딩 벡터를 식별할 수 있다. 이 때, 합성 모듈은 적어도 하나의 임베딩 벡터 각각과 오분류된 임베딩 벡터를 연결한 경로 상의 일 지점에 위치하도록 하나 이상의 합성 임베딩 벡터를 획득할 수 있다. 한편, 합성 모듈은 하나의 오분류된 임베딩 벡터를 식별하고, 식별된 오분류된 임베딩 벡터를 기초로 합성 임베딩 벡터를 획득할 수 있으나, 이는 일 실시예에 불과할 뿐, 합성 모듈은 복수의 오분류된 임베딩 벡터 를 식별하고, 복수의 오분류된 임베딩 벡터를 기초로 복수의 합성 임베딩 벡터를 획득할 수 있다. 이 때, 합성 모듈은 복수의 오분류된 임베딩 벡터 각각에 대해 전술한 방법과 마찬가지로, 인접한 임베딩 벡터를 식별하고, 복수의 오분류된 임베딩 벡터 각각과 인접한 임베딩 벡터 각각을 연결한 복수의 경로 상에 위 치하는 복수의 합성 임베딩 벡터를 획득할 수 있다. 한편, 합성 임베딩 벡터가 획득되면, 합성 모듈은 획득된 합성 임베딩 벡터의 클래스를 라벨링 할 수 있다. 이 때, 합성 모듈은 합성 임베딩 벡터를 가장 인접한 임베딩 벡터와 동일한 클래스로 라벨링할 수 있다. 또는, 합성 모듈은 합성 임베딩 벡터를 오분류된 임베딩 벡터의 라벨링된 클래스로 라벨링할 수 있 다. 그리고, 업데이트 모듈은 합성 임베딩 벡터를 학습 데이터에 추가하여 인공지능 모델을 재학습시켜 인공지능 모델을 업데이트할 수 있다. 이 때, 학습 데이터에 추가되는 합성 임베딩 벡터는 클래스가 라벨 링 된 임베딩 벡터일 수 있다. 그리고, 학습 모듈은 전술한 바와 마찬가지로, 지도 학습, 비지도 학습, 오 류 역전파법 또는 경사 하강법 등의 방법으로 인고지능 모델을 업데이트할 수 있다. 한편, 학습된(또는 재학습된) 인공지능 모델의 성능이 기설정된 기준 이하이면, 업데이트 모듈은 인공지능 모델에 의해 분류가 잘못된 임베딩 벡터를 재식별하고 합성 임베딩 벡터를 추가로 획득하여 인공지능 모델(11 1)을 재학습 시켜 업데이트할 수 있다. 구체적으로, 인공지능 모델이 학습(또는 재학습)되면(S710), 업데이트 모듈은 학습된 인공지능 모델 의 성능이 기설정된 기준 이하인지 여부를 식별할 수 있다(S720). 업데이트 모듈은 학습 데이터 중 일부를 검증 데이터로 하여 검증 데이터에 포함된 라벨링된 클래스와 예측 클래스의 유사 여부에 기반하여 인공 지능 모델의 성능을 식별하고, 식별된 성능이 기준치 이상인지 여부를 식별할 수 있다. 예를 들어, 인공지능 모델이 데이터를 입력 받고, 전체 입력 데이터 중 인공지능 모델에 의해 분류가 성공적으로 수행된 데이터가 80%이고, 오분류된 데이터가 20%일 수 있다. 이 때, 업데이트 모듈은 인공지 능 모델의 분류 성공률인 80%를 기설정된 기준이 90%와 비교하여, 인공지능 모델의 성능이 기설정된 기준 이하인 것으로 식별할 수 있다.그리고, 인공지능 모델의 성능이 기설정된 기준 이하인 것으로 식별되면(720-Y), 업데이트 모듈은 오 분류된 임베딩 벡터를 재식별할 수 있다(S730). 그리고, 업데이트 모듈은 전술한 방법과 마찬가지로, 재식별된 오분류된 임베딩 벡터 및 재식별된 오분류 된 임베딩 백터와 인접한 임베딩 벡터를 연결한 경로상의 일 지점에 위치하는 합성 임베딩 벡터를 획득할 수 있 다(S740). 그리고, 업데이트 모듈은 가장 인접한 임베딩 벡터와 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 학습 데이터에 추가하여 인공지능 모델을 업데이트시킬 수 있다 (S750). 한편, 인공지능 모델은 전자 장치의 메모리에 저장되어 있을 수 있으나, 이는 일 실시예에 불과 할 뿐, 인공지능 모델은 외부 장치에 저장되어 있을 수 있다. 그리고, 전자 장치는 인공지능 모델을 학습 시키거나 업데이트 시키기 위한 임베딩 벡터를 획득하고 임베딩 벡터를 외부 장치로 전송하여 외부 장치에 저장 된 인공지능 모델을 업데이트 시킬 수 있다. 구체적으로, 도 8을 참조하면, 전자 장치는 외부 장치와 통신을 수행하며, 데이터를 송수신할 수 있 다. 이 대, 전자 장치는 외부 장치와 직접 통신을 수행할 수 있으나, 이는 일 실시예에 불과할 뿐, 전자 장치는 별도의 외부 기기를 경유하여 외부 장치와 통신을 수행할 수 있다. 예를 들어, 전자 장 치가 이어폰인 경우, 전자 장치는 스마트폰을 통해 서버인 외부 장치와 통신을 수행할 수 있다. 또는, 전자 장치가 이어폰이고, 외부 장치가 스마트폰인 경우, 전자 장치는 블루투스 모듈을 통해 스 마트폰인 외부 장치와 통신을 수행할 수 있다. 그리고, 외부 장치는 메모리, 통신 인터페이스 및 프로세서를 포함할 수 있으며, 이 때, 메모리는 데이터가 입력되면 입력 데이터의 클래스를 분류하는 인공지능 모델을 저장할 수 있다. 도 9를 참조하면, 전자 장치는 학습 데이터를 획득할 수 있다(S910). 예를 들어, 전자 장치는 마이크 를 통해 음성 데이터를 학습 데이터로 획득할 수 있다. 또는, 전자 장치는 별도의 외부 센서로부터 학습 데이터를 획득할 수 있다. 예를 들어, 전자 장치가 스마트폰인 경우, 전자 장치는 마이크를 포함하는 이어폰으로부터 녹음된 음성 데이터를 수신할 수 있다. 그리고, 획득된 학습 데이터에 기초하여, 전자 장치는 임베딩 벡터를 획득할 수 있다(S920). 전자 장치 는 학습 데이터로부터 특징을 추출하여 음성 데이터의 특징에 대한 정보를 포함하는 임베딩 벡터를 획득할 수 있다. 이에 따라, 전자 장치는 획득된 임베딩 벡터를 외부 장치로 전송할 수 있다. 즉, 전자 장치는 학습 데이터 원본을 외부 장치로 전송하지 않고 임베딩 벡터를 외부 장치로 전송함할 수 있고, 이에 따라, 전자 장치는 사용자의 개인 정보(예를 들어, 목소리가 녹음된 오디오 데이터)를 포함하는 학습 데 이터를 외부 장치로 전송하지 않아도 되는 효과가 있을 수 있다. 임베딩 벡터가 수신되면, 외부 장치는 수신된 임베딩 벡터를 인공지능 모델에 입력하여, 오분류된 임 베딩 벡터를 식별할 수 있다(S940). 그리고, 오분류된 임베딩 벡터에 기초하여, 외부 장치는 전술한 방법과 마찬가지로 오분류된 임베딩 벡터 및 오분류된 임베딩 벡터와 인접한 임베딩 벡터를 연결한 경로 상에 위치하는 합성 임베딩 벡터를 획득할 수 있 다(S950). 외부 장치는 합성 임베딩 벡터를 이용하여, 인공지능 모델을 재학습 시킬 수 있다(S960). 인공지능 모델이 재학습되면, 외부 장치는 재학습된 인공지능 모델을 전자 장치로 전송할 수 있 다(S970). 도 10은 본 개시의 일 실시예에 따른 인공지능 모델의 성능을 설명하기 위한 도면이다. 도 10a에 도시된 바와 같이, 입력 데이터의 클래스를 분류하는 인공지능 모델은 학습이 진행됨에 따라 특정 클 래스에 대해 Validation loss 가 증가하고 과적합(Overfitting)이 발생할 수 있다. 이 때, 과적합 문제를 해결 하기 위해 학습 데이터를 추가하기 위해서는 많은 시간과 자원이 소요되는 문제가 있을 수 있다. 이에 따라, 전술한 바에 따른 방법으로 학습 데이터를 추가적으로 합성하여 인공지능 모델을 학습 또는 업데이 트 시키게 되면, 도 10b에 도시된 바와 같이, 인공지능 모델에서 과적합이 발생하는 문제를 해결할 수 있다.도 11은 본 개시의 일 실시예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 전자 장치는 복수의 학습 데이터를 획득할 수 있다(S1110). 그리고, 전자 장치는 복수의 학습 데이터 각각에 대해 임베딩 공간에 매핑될 수 있는 복수의 임베딩 벡터 를 획득할 수 있다(S1120). 이 때, 전자 장치는 복수의 학습 데이터 각각에서 특징을 추출하여 복수의 임 베딩 벡터를 획득할 수 있다. 그리고, 전자 장치는 복수의 임베딩 벡터에 기초하여 복수의 학습 데이터의 클래스를 분류하는 인공지능 모델을 학습시킬 수 있다(S1130). 그리고, 전자 장치는 복수의 임베딩 벡터 중 인공지능 모델에 의해 오분류된 임베딩 벡터를 식별할 수 있 다(S1140). 구체적으로, 전자 장치는 복수의 임베딩 벡터 중 제1 임베딩 벡터를 특정할 수 있다. 그리고, 전자 장치 는 제1 임베딩 벡터의 라벨링된 클래스와 인공지능 모델에 의해 예측된 클래스가 상이한지 여부를 식 별할 수 있다. 이 때, 제1 임베딩 벡터의 라벨링된 클래스와 예측된 클래스가 동일하면, 전자 장치는 제1 임베딩 벡터를 성공적으로 분류된 임베딩 벡터로 식별할 수 있다. 제1 임베딩 벡터가 성공적으로 분류된 임베딩 벡터로 식별되 면, 전자 장치는 복수의 임베딩 벡터 중 제2 임베딩 벡터를 특정할 수 있다. 그리고, 전자 장치는 제 2 임베딩 벡터의 라벨링된 클래스와 인공지능 모델에 의해 예측된 클래스가 상이한지 여부를 식별할 수 있 다. 제2 임베딩 벡터의 라벨링된 클래스와 예측된 클래스가 상이하면, 전자 장치는 제2 임베딩 벡터를 오분류 된 임베딩 벡터로 식별할 수 있다. 예를 들어, 제2 임베딩 벡터의 라벨링된 클래스는 ‘음악 소리’이고, 제2 임베딩 벡터가 인공지능 모델에 입력되어 예측된 클래스는 ‘사람 목소리’일 수 있다. 이 때, 전자 장치 는 제2 임베딩 벡터를 오분류된 임베딩 벡터로 식별할 수 있다.그리고, 오분류된 임베딩 벡터가 식별되면, 전자 장치는 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 식별할 수 있다(S1150). 이 때, 가장 인접한 임베딩 벡터는 인공지능 모델에 의해 성공적으로 분류된 임베딩 벡터일 수 있다. 그리고, 전자 장치는 임베딩 공간에서 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득할 수 있다(S1160). 이 때, 합성 임베딩 벡터는 임베딩 공간에서 오분류된 임 베딩 벡터 및 가장 인접한 임베딩 벡터를 연결한 경로의 일 지점에 위치할 수 있다. 구체적으로, 전자 장치는 다양한 데이터 합성 방법을 이용하여 합성 임베딩 벡터를 획득할 수 있다. 이 때, 데이터 합성 방법은 스펙토그램(spectrogram) 또는 원시 파형(raw waveform)을 생성할 수 있는 모델을 이용 하는 방법일 수 있다. 이 때, 데이터 합성을 위한 모델은 메모리에 저장되어 있을 수 있다. 일 실시 예에 따르면, 전자 장치는 생성적 적대 신경망(Generative Adversarial Network; GAN)을 이용하 여 데이터를 생성할 수 있다. 도 12를 참조하면, 전자 장치는 가우시안 노이즈 벡터(Gaussian Noise Vector)를 획득할 수 있다(S1210). 이 때, 가우시안 노이즈 벡터는 가우시안 확률 분포에서 랜덤하게 획득된 값 을 포함하는 벡터일 수 있다. 그리고, 전자 장치는 획득된 가우시안 노이즈 벡터 및 임베딩 벡터를 GAN에 입력하여 합성된 샘플을 획득 할 수 있다(S1220). 즉, 가우시안 노이즈 벡터(Gaussian Noise Vector) 및 임베딩 벡터가 GAN에 입력되면, GAN 은 합성된 샘플을 출력할 수 있다. 이 때, GAN에 입력되는 임베딩 벡터는 오분류된 임베딩 벡터 및 오분류된 임베딩 벡터와 가장 인접한 벡터 중 적어도 하나일 수 있다. 한편, 가우시안 노이즈 벡터는 가우시안 확률 분포에서 랜덤하게 획득된 값을 포함하며, 이 때 랜덤하게 획득된 값은 특정 클래스 내에서 데이터의 가변성(variability)을 제공할 수 있다. 이러한 랜덤성은 데이터 합성을 더 욱 유용하게 할 수 있다. 그리고, 합성된 샘플은 합성 임베딩 벡터일 수 있으나, 이는 일 실시예에 불과할 뿐, 전자 장치는 합성된 샘플로부터 특징을 추출하여 합성 임베딩 벡터를 획득할 수도 있다. 이 때, 합성된 샘플은 오분류된 임베딩 벡 터 및 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결하는 최단 경로 상의 일 지점에 대응될 수 있다.또 다른 일 실시 예에 따르면, 전자 장치는 변이형 오토 인코더(Variational Auto Encoder; VAE) 및 변이 형 오토 디코더(Variational Auto Decoder; VAD)를 이용하여 데이터를 합성할 수 있다. 도 13을 참조하면, 전자 장치는 샘플 데이터와 임베딩 벡터를 VAE에 입력할 수 있다(S1310). 여기서, 샘플 데이터는 임베딩 벡터에 대응되는 학습 데이터일 수 있다. 즉, VAE에 입력되는 임베딩 벡터는 샘플 데이터로부 터 특징을 추출하여 획득된 임베딩 벡터일 수 있다. 그리고, 전자 장치는 VAE로부터 출력되는 데이터를 이용하여 샘플링 데이터를 획득할 수 있다(S1320). 이 때, 샘플링 데이터는 VAE로부터 출력된 데이터로부터 랜덤하게 추출된 값을 포함할 수 있다. 또는, 샘플링 데이 터는 가우시안 분포 등으로부터 랜덤하게 추출된 값을 이용하여 획득된 데이터 일 수 있다. 이러한 랜덤 값은 특정 클래스 내에서 데이터의 가변성(variability)을 제공할 수 있다. 이러한 랜덤성은 데이터 합성을 더욱 유 용하게 할 수 있다. 이후, 전자 장치는 획득된 샘플링 데이터를 VAD에 입력하여, 합성된 샘플을 획득할 수 있다(S1330). 그리 고, 합성된 샘플은 합성 임베딩 벡터일 수 있으나, 이는 일 실시예에 불과할 뿐, 전자 장치는 합성된 샘플 로부터 특징을 추출하여 합성 임베딩 벡터를 획득할 수도 있다. 그리고, 합성된 샘플은 오분류된 임베딩 벡터 및 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결하는 최단 경로 상의 일 지점에 대응될 수 있다. 한편, 전자 장치는 GAN 또는 VAE를 이용한 방법 이외에도 다양한 방법으로 합성된 데이터를 획득할 수 있 다. 그리고, 전자 장치는 합성된 데이터를 학습 데이터에 추가하여 인공지능 모델을 재학습시킬 수 있다 (S1170). 여기서, 합성된 데이터는 합성된 임베딩 벡터 또는 합성된 샘플일 수 있다. 한편, 복수의 합성된 데이터가 획득되면, 전자 장치는 복수의 합성된 데이터 중 오분류된 임베딩 벡터 및 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터를 연결하는 최단 경로 상의 일 지점에 대응되는 데이터를 학 습 데이터에 추가할 수 있다. 한편, 전자 장치는 합성된 데이터를 검증하고, 검증 결과에 기초하여 합성된 데이터를 학습 데이터에 추가 할 수 있다. 구체적으로, 전자 장치는 메모리에 기 저장된 학습 데이터와 합성된 데이터를 비교하고, 비교 결과에 따라 합성된 데이터를 학습 데이터에 추가할지 여부를 판단할 수 있다. 이 때, 전자 장치는 기 저장된 학습 데이터와 학습 데이터의 유사도를 나타내는 값을 획득하고, 획득된 유사도를 나타내는 값이 기 설정된 값 이상이면, 합성된 데이터를 학습 데이터에 추가할 수 있다. 또는, 전자 장치는 합성된 데이터를 인공지능 모델에 입력하여 획득된 결과 값을 이용하여, 합성된 데이터를 학습 데이터에 추가할지 여부를 식별할 수 있다. 즉, 전자 장치는 합성된 데이터를 이용하여 인 공지능 모델을 검증하고, 검증 결과에 기초하여 인공지능 모델을 재학습시킬 수 있다. 구체적으로, 전자 장치는 합성된 데이터의 라벨링 된 클래스와 인공지능 모델에 의해 예측된 클래스 가 상이한지 여부를 식별할 수 있다. 합성된 데이터의 라벨링 된 클래스와 인공지능 모델에 의해 예측된 클래스가 상이하면, 전자 장치는 합성된 데이터를 이용하여 인공지능 모델을 재학습시킬 수 있다. 또는, 전자 장치는 복수의 합성된 데이터를 이용하여 인공지능 모델을 검증하고, 검증 결과에 기초하 여 인공지능 모델을 재학습시킬 수 있다. 구체적으로, 전자 장치는 복수의 합성된 데이터를 인공지능 모델에 입력하여 출력된 결과 값을 바탕으로 인공지능 모델의 정확도를 식별할 수 있다. 이 때, 정확 도가 기설정된 값 이하이면, 전자 장치는 복수의 합성된 데이터를 학습 데이터에 추가하여, 인공지능 모델 을 재학습시킬 수 있다. 또는, 전자 장치는 식별된 정확도를 메모리 또는 외부 서버에 저장된 제2 인공지능 모델의 정확도와 비교하고, 식별된 정확도가 제2 인공지능 모델의 정확도 이하이면, 인공지능 모 델을 재학습시킬 수 있다. 그리고, 재학습된 인공지능 모델의 성능이 기설정된 기준 이하이면, 전자 장치는 인공지능 모델에 의 해 분류가 오분류된 임베딩 벡터를 재식별하고, 임베딩 공간에서 재식별된 오분류된 임베딩 벡터와 가장 인접한 임베딩 벡터와 재식별된 오분류된 임베딩 벡터를 연결한 경로에 대응되는 합성 임베딩 벡터를 획득하여 인공지 능 모델을 업데이트 시킬 수 있다.한편, 본 개시에 따른 인공지능과 관련된 기능은 전자 장치의 프로 세서와 메모리를 통해 동작될 수 있다.프로세서는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU(Central Processing Unit), AP(Application Processor) 등과 같은 범용 프로세서, GPU(Graphic Processing Unit). VPU(Vision processing unit) 등과 같은 그래픽 전용 프로세서 또는 NPU(Neural Processing Unit), TPU(Tensor Processing Unit )와 같은 인공지능 전용 프로세서일 수 있다. 본 개시의 일 실시예로, 전자 장치에 포함된 SoC(System on Chip)에 복수의 프로세서가 포함된 경우, 전자 장치는 복수의 프로세서 중 그래픽 전용 프로세서 또는 인공지능 전용 프로세서를 이용하여 인공지능과 관 련된 연산(예를 들어, 인공지능 모델의 학습(learning)이나 추론(inference)에 관련된 연산)을 수행하며, 복수 의 프로세서 중 범용 프로세서를 이용하여 전자 장치의 일반적인 연산을 수행할 수 있다. 예를 들어, 전자 장치 는 복수의 프로세서 중 컨볼루션 연산에 특화된 GPU, VPU, NPU, TPU 중 적어도 하나를 이용하여 인공지능 과 관련된 연산을 수행하며, 복수의 프로세서 중 CPU, AP 중 적어도 하나를 이용하여 전자 장치의 일반적 인 연산을 수행할 수 있다. 또한, 전자 장치는 하나의 프로세서에 포함된 멀티 코어(예를 들어, 듀얼 코어, 쿼드 코어 등)를 이용하여 인공지능과 관련된 기능에 대한 연산을 수행할 수 있다. 특히, 전자 장치는 프로세서에 포함된 멀티 코어를 이 용하여 병렬적으로 컨볼루션 연산을 수행할 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기정의된 동작 규칙 또는 인공지능 모델에 따라, 입력 데이터를 처리하도록 제어한다. 기정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만들어진다는 것은, 다수의 학습 데이터들에 학습 알고리즘을 적용함으로써, 원하는 특성 의 기정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버/시스템을 통해 이루어 질 수도 있다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 각 레이어는 복수의 가중치(weight values)을 갖 고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치의 연산을 통해 레이어의 연산을 수행한다. 신 경망의 예로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 및 심층 Q-네트워크 (Deep Q-Networks)이 있으며, 본 개시에서의 신경망은 명시한 경우 를 제외하고 전술한 예에 한정되지 않는다. 학습 알고리즘은, 다수의 학습 데이터들을 이용하여 소정의 대상 기기(예컨대, 로봇)을 훈련시켜 소정의 대상 기기 스스로 결정을 내리거나 예측을 할 수 있도록 하는 방법이다. 학습 알고리즘의 예로는, 지도형 학습 (supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또 는 강화 학습(reinforcement learning)이 있으며, 본 개시에서의 학습 알고리즘은 명시한 경우를 제외하고 전술 한 예에 한정되지 않는다. 한편, 본 개시에서 사용된 용어 \"부\" 또는 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구성된 유닛을 포함하 며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. \"부\" 또는 \" 모듈\"은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는 최소 단위 또는 그 일부가 될 수 있다. 예를 들면, 모듈은 ASIC(application-specific integrated circuit)으로 구성될 수 있다. 본 개시의 다양한 실시예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명령어를 호 출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시예들에 따른 전자 장치를 포함할 수 있다. 상기 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 상기 프로세서의 제어 하에 다른 구성 요소들을 이용하여 상기 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생 성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매 체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 신호(signal)를 포함하지 않으며 실재 (tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시적으로 저장됨을 구분하지 않는다. 일시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있다. 온라인 배포의 경 우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구성될 수 있으며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요소가 다 양한 실시예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차 적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다."}
{"patent_id": "10-2022-0070278", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다. 도 2는 본 개시의 일 실시예에 따른 인공지능 모델을 설명하기 위한 도면이다. 도 3은 본 개시의 일 실시예에 따른 임베딩 벡터를 획득하는 방법을 설명하기 위한 흐름도이다. 도 4는 본 개시의 일 실시예에 따른 임베딩 공간을 설명하기 위한 도면이다. 도 5는 본 개시의 일 실시예에 따른 합성 임베딩 벡터를 획득하는 방법을 설명하기 위한 흐름도이다. 도 6a 내지 도 6e는 본 개시의 일 실시예에 따른 합성 임베딩 벡터를 획득하는 방법을 설명하기 위한 도면이다. 도 7은 본 개시의 일 실시예에 따른 인공지능 모델을 재학습시키는 방법을 설명하기 위한 흐름도이다. 도 8은 본 개시의 일 실시예에 따른 전자 장치 및 외부 장치의 구성을 설명하기 위한 블록도이다. 도 9는 본 개시의 일 실시예에 따른 전자 장치, 외부 기기 및 서버의 동작을 설명하기 위한 시퀀스도이다. 도 10a 내지 도 10b는 본 개시의 일 실시예에 따른 인공지능 모델의 성능을 설명하기 위한 도면이다. 도 11은 본 개시의 일 실시예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다."}
