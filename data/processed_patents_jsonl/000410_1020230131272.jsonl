{"patent_id": "10-2023-0131272", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0047543", "출원번호": "10-2023-0131272", "발명의 명칭": "스타일 변환 방법 및 컴퓨터 프로그램", "출원인": "재단법인대구경북과학기술원", "발명자": "임성훈"}}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서 실행되는 경우 이미지의 스타일 변경을 위한 이하의 방법들을 수행하도록 하며, 상기 방법은, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟텍스트를 생성하는 단계; 사전학습된 이미지 인코더로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성하는 단계; 및 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계;를 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 소스 텍스트는 상기 소스 이미지에서 스타일 변환을 부분을 의미적으로 지정하는 텍스트인, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 타겟 텍스트는 상기 소스 텍스트와 변환할 스타일을 지정하는 스타일 텍스트의 조합으로 구성된 텍스트인, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서, 상기 타겟 텍스트는, 상기 소스 텍스트와 상기 스타일 텍스트를 연결하여 구성되는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서, 상기 하나 이상의 선택된 출력 이미지 패치는 상기 소스 이미지의 하나 이상의 소스 이미지 패치들 중에서 상기소스 텍스트에 기초하여 스타일 변환될 부분으로 선택된 하나 이상의 선택된 소스 이미지 패치와 대응되도록 선택되는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서, 공개특허 10-2025-0047543-3-상기 하나 이상의 선택된 소스 이미지 패치는 상기 하나 이상의 소스 이미지 패치들 각각을 상기 사전학습된 이미지 인코더로 연산한 하나 이상의 인코딩된 소스 이미지 패치 각각과 상기 인코딩된 소스 텍스트의 유사도 비교를 통해 선택되는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5 항에 있어서,상기 소스 이미지에 대한 랜덤 크롭을 통해 M개의 소스 이미지 패치를 생성하는 단계; 및상기 M개의 소스 이미지 패치 각각을 상기 사전학습된 이미지 인코더로 연산한 M개의 인코딩된 소스 이미지 패치 각가과 상기 인코딩된 소스 텍스트의 유사도 비교를 통해 K개의 소스 이미지 패치를 선택하는 단계;를 더 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서, 상기 K개의 선택된 소스 이미지 패치를 선택된 소스 이미지 패치로 결정하는 단계; 를 더 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서, K개의 인코딩된 소스 이미지 패치의 평균을 연산하는 단계; 및 상기 K개의 인코딩된 소스 이미지 패치의 평균과 상기 M개의 인코딩된 소스 이미지 패치 각각에 대한 유사도 비교를 통해 N개의 선택된 소스 이미지 패치를 선택하는 단계; 를 더 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서, 상기 M, K, N은, M≥2N, N>K인 관계를 가지는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서, 상기 하나 이상의 선택된 출력 이미지 패치는 상기 소스 이미지에 대한 상기 소스 텍스트의 인식 결과에 기초하여 스타일 변환될 부분으로 선택된 하나 이상의 선택된 소스 이미지 패치와 대응되도록 선택되는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1 항에 있어서, 공개특허 10-2025-0047543-4-상기 스타일 변환 네트워크의 학습 중 상기 사전학습된 텍스트 인코더 및 상기 사전학습된 이미지 인코더 중 적어도 하나의 가중치는 고정된, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 1 항에 있어서, 상기 스타일 변환 네트워크를 학습시키는 단계는, 상기 인코딩된 출력 이미지와 상기 인코딩된 소스 이미지의 차이 및 상기 인코딩된 타겟 텍스트와 상기 인코딩된 소스 텍스트의 차이에 기초한 제 1 손실함수에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계;를 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서, 상기 제 1 손실함수는, 수학식 1 에 기초하는, 수학식1:여기서,이며,는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더인, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 1 항에 있어서, 상기 스타일 변환 네트워크를 학습시키는 단계는,상기 인코딩된 선택된 출력 이미지 패치와 상기 인코딩된 소스 이미지의 차이 및 상기 인코딩된 타겟 텍스트와상기 인코딩된 소스 텍스트의 차이에 기초한 제 2 손실함수에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계; 를 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서, 상기 제 2 손실함수는, 수학식 2 에 기초하는, 공개특허 10-2025-0047543-5-수학식2:여기서,이며, 는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더이며, N은 선택된 패치들의 수, 는 사전결정된 임계값인, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 1 항에 있어서, 상기 스타일 변환 네트워크를 학습시키는 단계는, 상기 인코딩된 선택된 출력 이미지 패치와 상기 인코딩된 타겟 텍스트의 유사도에 기초한 제 3 손실함수에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계;를 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서, 상기 제 3 손실함수는, 수학식 3 에 기초하는, 수학식3: 여기서, Sim()은 코사인 유사도 함수인,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "컴퓨터 장치의 하나 이상의 프로세서에서 실행가능한 이미지의 스타일 변경을 위한 방법으로서, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟텍스트를 생성하는 단계; 사전학습된 이미지 인코더로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성하는 단계; 및 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트공개특허 10-2025-0047543-6-워크를 학습시키는 단계;를 포함하는, 방법."}
{"patent_id": "10-2023-0131272", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨터 장치로서, 하나 이상의 프로세서; 및 상기 프로세서에서 실행가능한 명령들을 저장하는 메모리;를 포함하고, 상기 프로세서는, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟텍스트를 생성하고. 사전학습된 이미지 인코더로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성하고, 그리고 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트워크를 학습시키는,컴퓨터 장치."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램이 개시된다. 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서 실행되는 경우 이미지의 스타일 변경을 위한 이하의 방법들을 수행하도록 하며, 상기 방법은, 사전학습된 텍스트 인코더로 소스 (뒷면에 계속)"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 인공 신경망 기술을 이용한 이미지 데이터 처리 기술로서, 보다 구체적으로 이미지 데이터의 스타일 을 변환하기 위한 것이다."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "데이터의 증가와 인공 신경망 네트워크의 발전 및 컴퓨터의 연산 능력의 발전에 따라 인공지능 기술에 대한 적 용이 다양한 산업 분야에서 진행되게 되었다. 이미지 데이터에 대한 인공 신경망 네트워크를 이용한 처리는 주어진 이미지 데이터에 대한 인식 뿐 아니라, 이 미지 데이터에 대한 변환과 생성까지 발전하고 있다. 스타일 변환이란 컨텐츠의 내용은 유지한 채 컨텐츠에 다른 스타일을 적용하여 변환하는 것을 의미한다. 이미지 의 스타일 변환은 이미지의 모양은 유지하면서 이미지에 다른 스타일을 적용하여 변환하는 것을 의미한다. 종래에는 스타일을 변환하기 위하여 변환하기 위한 스타일을 지정하는 스타일 이미지를 통해 스타일 이미지의 스타일로 스타일을 변환하려는 원본 이미지의 스타일을 변환하였다. 그러나, 이러한 경우, 스타일일을 변환하고 자 하는 사용자가 스타일 이미지를 가지고 있어야 하는 문제가 있어, 사용자의 사용성이 다소 떨어지는 문제가 있다. 대한민국 공개 특허 문헌 KR10-2018-0055708은 인공지능을 활용한 이미지 처리 방법을 개시한다."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 인공 신경망 기술을 이용한 스타일 변환 방법을 제공하 기 위한 것이다."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨 터 프로그램이 개시된다. 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서 실행되는 경우 이미지의 스타일 변경을 위한 이하의 방법들을 수행하도록 하며, 상기 방법은, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩 된 타겟 텍스트를 생성하는 단계; 사전학습된 이미지 인코더로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한 출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인코딩 된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성하는 단계; 및 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미 지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트 워크를 학습시키는 단계를 포함할 수 있다. 대안적으로, 상기 소스 텍스트는 상기 소스 이미지에서 스타일 변환을 부분을 의미적으로 지정하는 텍스트일 수 있다. 대안적으로, 상기 타겟 텍스트는 상기 소스 텍스트와 변환할 스타일을 지정하는 스타일 텍스트의 조합으로 구성 된 텍스트일 수 있다. 대안적으로, 상기 타겟 텍스트는, 상기 소스 텍스트와 상기 스타일 텍스트를 연결하여 구성될 수 있다. 대안적으로, 상기 하나 이상의 선택된 출력 이미지 패치는 상기 소스 이미지의 하나 이상의 소스 이미지 패치들 중에서 상기 소스 텍스트에 기초하여 스타일 변환될 부분으로 선택된 하나 이상의 선택된 소스 이미지 패치와 대응되도록 선택될 수 있다. 대안적으로, 상기 하나 이상의 선택된 소스 이미지 패치는 상기 하나 이상의 소스 이미지 패치들 각각을 상기 사전학습된 이미지 인코더로 연산한 하나 이상의 인코딩된 소스 이미지 패치 각각과 상기 인코딩된 소스 텍스트 의 유사도 비교를 통해 선택될 수 있다. 대안적으로, 상기 소스 이미지에 대한 랜덤 크롭을 통해 M개의 소스 이미지 패치를 생성하는 단계; 및 상기 M개 의 소스 이미지 패치 각각을 상기 사전학습된 이미지 인코더로 연산한 M개의 인코딩된 소스 이미지 패치 각가과 상기 인코딩된 소스 텍스트의 유사도 비교를 통해 K개의 소스 이미지 패치를 선택하는 단계를 더 포함할 수 있 다. 대안적으로, 상기 K개의 선택된 소스 이미지 패치를 선택된 소스 이미지 패치로 결정하는 단계를 더 포함할 수 있다. 대안적으로, K개의 인코딩된 소스 이미지 패치의 평균을 연산하는 단계; 및 상기 K개의 인코딩된 소스 이미지 패치의 평균과 상기 M개의 인코딩된 소스 이미지 패치 각각에 대한 유사도 비교를 통해 N개의 선택된 소스 이미 지 패치를 선택하는 단계를 더 포함할 수 있다. 대안적으로, 상기 M, K, N은, M≥2N, N>K인 관계를 가질 수 있다. 대안적으로, 상기 하나 이상의 선택된 출력 이미지 패치는 상기 소스 이미지에 대한 상기 소스 텍스트의 인식 결과에 기초하여 스타일 변환될 부분으로 선택된 하나 이상의 선택된 소스 이미지 패치와 대응되도록 선택될 수 있다. 대안적으로, 상기 스타일 변환 네트워크의 학습 중 상기 사전학습된 텍스트 인코더 및 상기 사전학습된 이미지 인코더 중 적어도 하나의 가중치는 고정될 수 있다. 대안적으로, 상기 스타일 변환 네트워크를 학습시키는 단계는, 상기 인코딩된 출력 이미지와 상기 인코딩된 소 스 이미지의 차이 및 상기 인코딩된 타겟 텍스트와 상기 인코딩된 소스 텍스트의 차이에 기초한 제 1 손실함수 에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계를 포함 수 있다. 대안적으로, 상기 제 1 손실함수는, 수학식 1 에 기초하는, 수학식1:"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "여기서, 이며, 는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더일 수 있다. 대안적으로, 상기 스타일 변환 네트워크를 학습시키는 단계는, 상기 인코딩된 선택된 출력 이미지 패치와 상기 인코딩된 소스 이미지의 차이 및 상기 인코딩된 타겟 텍스트와 상기 인코딩된 소스 텍스트의 차이에 기초한 제 2 손실함수에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계를 포함할 수 있다. 대안적으로, 상기 제 2 손실함수는, 수학식 2 에 기초하는, 수학식2:"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 3, "content": "여기서, 이며, 는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더 이며, N은 선택된 패치들의 수, 는 사전결정된 임계값일 수 있다. 대안적으로, 상기 스타일 변환 네트워크를 학습시키는 단계는, 상기 인코딩된 선택된 출력 이미지 패치와 상기 인코딩된 타겟 텍스트의 유사도에 기초한 제 3 손실함수에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계를 포함할 수 있다. 대안적으로, 상기 제 3 손실함수는, 수학식 3 에 기초하는, 수학식3:"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 4, "content": "여기서, Sim()은 코사인 유사도 함수일 수 있다. 대안적으로, 컴퓨터 장치의 하나 이상의 프로세서에서 실행가능한 이미지의 스타일 변경을 위한 방법이 개시된 다 상기 방법은, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟 텍스트를 생성하는 단계; 사전학습된 이미지 인코더로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한 출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인 코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성하는 단계; 및 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트워크를 학습시키는 단계를 포함할 수 있다. 대안적으로, 컴퓨터 장치가 개시된다. 상기 컴퓨터 장치는, 하나 이상의 프로세서; 및 상기 프로세서에서 실행 가능한 명령들을 저장하는 메모리를 포함하고, 상기 프로세서는, 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟 텍스트를 생성하고. 사전학습된 이미지 인코더 로 소스 이미지, 상기 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한 출력 이미지 및 하나 이 상의 선택된 출력 이미지 패치를 연산하여, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코 딩된 선택된 출력 이미지 패치를 생성하고, 그리고 상기 인코딩된 소스 텍스트, 상기 인코딩된 타겟 텍스트, 상기 인코딩된 소스 이미지 상기 인코딩된 출력 이미지 및 상기 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 상기 스타일 변환 네트워크를 학습시킬 수 있다."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 인공 신경망 기술을 이용한 스타일 변환 방법을 제공할 수 있다."}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨터 장치에서 실행되는 애플리케이션 및 컴퓨터 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, “A 또는 B 중 적어도 하나”이라는 용어는, “A만을 포함하는 경우”, “B 만을 포함하는 경우”, “A 와 B의 구성으로 조합된 경우”를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개 시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서 네트워크 함수와 인공 신경망, 인공 신경망 네트워크, 및 뉴럴 네트워크(neural network)는 상호교 환가능하게 사용될 수 있다. 도 1 은 본 개시의 일 실시예의 스타일 변환 방법을 수행하기 위한 컴퓨터 장치의 블록 구성도이다. 도 1 에 도 시된 컴퓨터 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨터 장치 는 컴퓨터 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨터 장치 를 구성할 수도 있다. 컴퓨터 장치는 프로세서, 메모리, 네트워크부를 포함할 수 있다. 프로세서는 하나 이 상의 코어로 구성될 수 있으며, 컴퓨터 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처 리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 기계 학습을 위한 데이터 처리를 수행할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세서는 딥러닝(DL: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역전파 (backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프 로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시 의 일 실시예에서 복수의 컴퓨터 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워크 함수를 이 용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨터 장치에서 수행되는 컴퓨터 프로 그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 네트 워크부가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨터 장 치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관 련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따른 네트워크부는 공중전화 교환망(PSTN: Public Switched Telephone Network), xDSL(x Digital Subscriber Line), RADSL(Rate Adaptive DSL), MDSL(Multi Rate DSL), VDSL(Very High Speed DSL), UADSL(Universal Asymmetric DSL), HDSL(High Bit Rate DSL) 및 근거리 통신망(LAN) 등과 같은 다양한 유선 통신 시스템들을 사용할 수 있다. 또한, 본 명세서에서 제시되는 네트워크부는 CDMA(Code Division Multi Access), TDMA(Time Division Multi Access), FDMA(Frequency Division Multi Access), OFDMA(Orthogonal Frequency Division Multi Access), SC-FDMA(Single Carrier-FDMA) 및 다른 시스템들과 같은 다양한 무선 통신 시스템들을 사용할 수 있 다. 본 개시에서 네트워크부는 유선 및 무선 등과 같은 그 통신 양태를 가리지 않고 구성될 수 있으며, 단거리 통신망(PAN: Personal Area Network), 근거리 통신망(WAN: Wide Area Network) 등 다양한 통신망으로 구성될 수 있다. 또한, 상기 네트워크는 공지의 월드와이드웹(WWW: World Wide Web)일 수 있으며, 적외선(IrDA: Infrared Data Association) 또는 블루투스(Bluetooth)와 같이 단거리 통신에 이용되는 무선 전송 기술을 이용 할 수도 있다. 본 개시의 네트워크부를 통해 컴퓨터 장치는 다른 컴퓨터 장치 등과 통신할 수 있으며, 예를 들어, 데이터가 저장된 데이터 저장소, 클라우드 데이터 저장소, 컴퓨팅 파워를 사용하기 위한 클라우드 컴퓨터 시스 템 등과 통신할 수 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크 들에서도 사용될 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크, 적대적 생성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더(autoencoder)를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히 든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어 의 노드의 수는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이 어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 오토 인코더는 비선형 차원 감 소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 차원과 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 반교사학습(semi supervised learning), 또는 강화학습(reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정 일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 레이블링되어있는 학습 데이터를 사용하며(즉, 레이블링된 학습 데이터), 비 교사 학습의 경우는 각각의 학습 데이터에 정답이 레이블링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류 에 관한 교사 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 레이블링 된 데이터 일 수 있다. 레 이블링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 레이블을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향 (즉, 출력 레이어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노 드들의 연결 가중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클 (epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있 다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션(regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 본 개시의 일 실시예에 따라 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자 정의 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매체(예를 들어, 영구 저장 장치)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨터 장치는 컴퓨터 장치의 자원을 최소한으로 사용하면서 연산 을 수행할 수 있다. 구체적으로 컴퓨터 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트 (List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다. 비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 이하에서는 신경망으로 통일하여 기술한다. 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등을 포함할 수 있다. 신경망을 포함한 데이터 구조는 상기 개시된 구성들 중 임의의 구성 요소들을 포함 할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력 되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등 전부 또는 이들의 임의의 조합을 포함하 여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발생되는 모든 형태의 데 이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망 은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는 전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 가중치에 기초하여 출력 노드에서 출력되는 데이터 값을 결정할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및 /또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨터 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨터 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨터 장치 또는 다른 컴퓨터 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨터 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데 이터 구조에서 B-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다. 데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 2 는 본 개시의 일 실시예의 스타일 변환 모델을 나타낸 예시도이다. 본 개시의 일 실시예의 스타일 변환 모델은 이미지 데이터에 대한 스타일 변환을 수행하는 스타일 변환 네 트워크, 이미지 데이터에서 스타일 변환의 대상을 지정하는 텍스트, 변환될 스타일을 지정하는 텍스트와 같은 텍스트 정보를 인코딩 하기 위한 텍스트 인코더, 이미지 데이터를 인코딩 하기 위한 이미지 인코더 를 포함할 수 있다. 스타일 변환 네트워크는 입력된 데이터에 대한 스타일 변환을 수행하는 임의의 신경망을 포함할 수 있다. 예를 들어, 스타일 변환 네트워크는 생성형 모델로 구성될 수 있으며, GAN(generative adversarial network) 기반 신경망, 디퓨전(diffusion) 기반 신경망 등으로 구성될 수 있으며 전술한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 텍스트 인코더는 텍스트 데이터를 인코딩하여 벡터 공간에 나타내기 위한 임의의 신경망을 포함할 수 있다. 텍스트 인코더는 소스 텍스트, 타겟 텍스트, 스타일 텍스트를 연산하여 벡터 공간에 나타내도록 학 습된 신경망 일 수 있다. 텍스트 인코더는 사전학습되어 스타일 변환 네트워크의 학습 중에 텍스트인코더의 가중치는 고정될 수 있다. 이미지 인코더는 이미지 데이터를 인코딩하여 벡터 공간에 나타내기 위한 임의의 신경망을 포함할 수 있다. 이미지 인코더는 소스 이미지, 소스 이미지를 스타일 변환 네트워크를 이용하여 스타일 변환한 출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 인코딩하여 벡터 공간에 나타내도록 학습된 신경망 일 수 있 다. 이미지 인코더는 사전학습되어 스타일 변환 네트워크의 학습 중에 이미지 인코더의 가중치 는 고정될 수 있다. 이미지 인코더와 텍스트 인코더는 같은 벡터 공간에 데이터를 표현하도록 학습될 수 있다. 본 발명의 스타일 변환 네트워크, 텍스트 인코더, 이미지 인코더는 특정한 구조의 네 트워크로 제한되지 않으나, 전체가 본 명세서에 참조로 통합되는 Gihyun Kwon, Jong Chul Ye의 논문 “ CLIPstyler: Image Style Transfer with a Single Text Condition”의 신경망 구조는 가능한 일 예시일 수 있 다. 프로세서는 사전학습된 텍스트 인코더로 소스 텍스트 및 타겟 텍스트를 연산하여 인코딩된 소스 텍스트 및 인코딩된 타겟 텍스트를 생성할 수 있다. 소스 텍스트는 스타일 변환의 대상이 되는 소스 이미지에서 스타일 변환할 부분을 의미적으로 지정하 는 텍스트 일 수 있다. 예를 들어, 도 2 의 예시에서, 보트가 포함된 이미지에서 보트에 해당하는 부분을 스타 일 변환 하고자 하는 경우, 소스 텍스트는 boat 일 수 있다. 타겟 텍스트는 소스 텍스트와 변환할 스타일을 지정하는 스타일 텍스트의 조합으로 구성될 수 있다. 스타일 텍스트는 변환할 스타일을 지정하는 텍스트로, 스타일에 대한 자연어 설명으로 구성될 수 있 다. 도 2 의 예시에서, 보트가 포함된 이미지에서 보트에 해당하는 부분을 네온 라이트 스타일로 변환하고자 하 는 경우 스타일 텍스트는 neon light일 수 있다. 타겟 텍스트는 소스 텍스트와 스타일 텍스트 를 조합하여 구성된다. 종래 기술에서 소스 텍스트와 스타일 텍스트만으로 스타일 변환을 하고자 하는 경우(즉, 스타일 텍스 트만이 스타일을 지정하는 경우) 스타일 변환의 대상이 되는 소스 텍스트와의 조합에 의하여 벡터 공 간에서 스타일을 지정하는 스타일 벡터의 방향이 의도와는 달리 지정될 수 있다. 본 발명은 소스 텍스트와 스타일 텍스트를 조합하여 타겟 텍스트를 구성하고, 타겟 텍스트를 인코딩하여 스타일 변환을 위한 벡터의 방향을 지정하도록 하여, 스타일 텍스트의 스타일 지정이 소스 텍스트와 의미론적 으로 함께 고려되도록 할 수 있다. 예를 들어, 도 5 의 스타일 변환 모델의 스타일 변환 결과에 대한 예시에서, 종래의 기술인 CLIPstyler로 스타일 텍스트 “golden”을 지정하여 스타일 변환한 결과를 살펴 보면, 참조번호 701과 같이 골든 리트리버의 형상을 확인할 수 있다. 이는 종래 기술의 경우 스타일 텍스트에 의한 스타일 지정 만에 기초하여 스타일을 변환하므로 스타일을 변환하고자 하는 대상과 스타일 텍스트의 의미론적인 연관관계가 고려되지 않았기 때문이다. Ours로 표현되는 본 발명에 의한 스타일 변환의 경우에는 원본 이미지에 대한 황금 빛의 스타일 변환이 수행되었으며, 참조번호 701의 골든 리트리버와 같은 의도치 않은 국소적 스타일 변환의 오 류가 발생하지 않음을 확인할 수 있다. 타겟 텍스트는 소스 텍스트와 스타일 텍스트를 연결하여 구성되며, 연결의 순서는 예를 들어, 스타일 텍스트 + 소스 텍스트의 순서일 수 있으며 역 또한 가능하다. 타겟 텍스트는 소스 텍스트와 스타일 텍스트를 조합하여 스타일 변환의 대상과 변환하고자 하는 스타일에 대한 설명이 자연어로 자연스 럽게 해석되도록 구성될 수 있다. 타겟 텍스트에 대한 소스 텍스트와 스타일 텍스트의 조합의 순서는 소스 텍스트와 스타일 텍스트 각각의 품사에 따라서 결정될 수 있으며 학습 과정에서 고정될 수도, 변경될 수도 있다. 예를 들어, 소스 텍스트가 명사이고 스타일 텍스트가 형용사인 경우, 형용사 + 명사 순으로 구성되는 것이 일반적인 자연어의 구성이므로 타겟 텍스트는 스타일 텍스트 + 소스 텍스트 순서로 조합되어 구성될 수 있다. 전술한 조합의 순서는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 사전학습된 이미지 인코더로 소스 이미지, 소스 이미지를 스타일 변환 네트워크 를 이용하여 스타일 변환한 출력 이미지 및 하나 이상의 선택된 출력 이미지 패치를 연산하여, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치를 생성할 수 있다. 선택된 출력 이미지 패치는 소스 이미지에서 소스 텍스트에 기초하여 스타일 변환될 부분으로 지정되는 영역에 대한 패치들을 포함할 수 있다. 선택된 출력 이미지 패치는 소스 이미지의 하나 이 상의 소스 이미지 패치들 중에서 소스 텍스트에 기초하여 스타일 변환될 부분으로 선택된 하나 이상의 선택된 소스 이미지 패치(316, 317, 318)와 대응되도록 선택될 수 있다. 프로세서는 소스 이미지 에서 소스 텍스트에 기초하여 스타일 변환될 부분으로 지정되는 패치들을 추출할 수 있으며, 해당 패치들 의 위치정보에 기초하여 이와 대응되도록 출력 이미지로부터 패치들을 추출할 수 있다. 하나 이상의 선택된 소스 이미지 패치(316, 317, 318)는 하나 이상의 소스 이미지 패치들(311, 312, 313, 314, 315) 각각을 사전학습된 이미지 인코더로 연산한 하나 이상의 인코딩된 소스 이미지 패치(316, 317, 318, 319, 320) 각각과 인코딩된 소스 텍스트의 유시도 비교를 통해 선택될 수 있다. 프로세서는 소스 이미지에 대한 랜덤 크롭을 통해 하나 이상의 소스 이미지 패치를 생성할 수 있다. 예를 들어, M개의 소스 이미지 패치가 생성될 수 있다. 프로세서는 하나 이상의 소스 이미지 패치(311, 312, 313, 314, 315) 각각을 사전학습된 이미지 인코더로 연산하여 인코딩된 소스 이미지 패치(316, 317, 318, 319, 320)를 생성할 수 있으며 인코딩된 소스 이미지 패치와 인코딩된 소스 텍스트의 유사도 비교를 통해 일부 의 소스 이미지 패치를 선택할 수 있다. 예를 들어, K개의 소스 이미지 패치가 선택될 수 있다. 유사도 비교는 벡터의 유사도 비교를 위한 임의의 방법이 사용될 수 있으며, 예를 들어, 각각의 벡터들의 코사인 유사도 판단 방법이 사용될 수 있다. 프로세서는 여기서 선택된 소스 이미지 패치를 선택된 소스 이미지 패치로 결정할 수 있다. 예를 들어, 프로세서는 K개의 소스 이미지 패치를 선택된 소스 이미지 패치로 결정할 수 있다. 추가적으로 프로세서는 1차적으로 선택된 소스 이미지 패치의 평균을 연산할 수 있다. 프로세서는 인 코딩된 선택된 소스 이미지 패치의 평균과 랜덤 크롭된 인코딩된 소스 이미 패치 각각에 대한 2차적 유사 도 비교를 통해 2차로 선택된 소스 이미지 패치를 선택할 수 있다. 예를 들어, 프로세서는 N개의 소스 이 미지 패치를 2차로 선택할 수 있다. 여기서 M, K, N은 예를 들어, M≥2N, N>K인 관계를 가질 수 있다. 프로세서는 랜덤 크롭된 소스 이미지 패치의 인코딩 값과 소스 텍스트의 인코딩 값의 1차 유사도 판단에 의하여 변환의 대상이 되는 소스 이미지 패치의 일부를 선택할 수도 있으며, 소스 이미지 패치에 대한 1차 유사 도 판단에 의하여 선택된 일부에 대한 평균과 소스 텍스트의 인코딩 값의 2차 유사도 판단을 통해 변환의 대상 이 되는 소스 이미지 패치의 일부를 선택할 수도 있다. 인코딩 값은 인코더에 의하여 입력 데이터를 임베딩 공 간에 나타낸 위치를 의미할 수 있다. 1차 선택된 이미지 패치의 인코딩 값의 평균과 소스 텍스트 인코딩 값의 2 차 비교를 통해 프로세서는 소스 이미지의 패치들 중 소스 텍스트로부터 지정되는 패치들을 보다 잘 선택 할 수 있다. 소스 이미지의 패치들에 대한 인코딩 값과 소스 텍스트에 대한 인코딩 값의 비교를 통하여 소스 이 미지에서 스타일 변환의 대상이 되는 패치들을 선택할 수 있으며, 이 경우 추가적인 신경망이 필요하지 않으며, 스타일 변환을 위하여 학습된 이미지 인코더와 텍스트 인코더를 그대로 사용할 수 있어 학습과 추론 에 필요한 컴퓨팅 코스트를 절감할 수 있다. 또한, 학습된 이미지 인코더와 텍스트 인코더를 그대로 활용함으로써, 스타일 변환의 대상에 제한 없이 범용으로 적용할 수 있는 장점이 있다. 다른 일 실시예에서 이상의 선택된 출력 이미지 패치는 소스 이미지에 대한 소스 텍스트의 인식 결과에 기초하 여 선택될 수도 있다. 프로세서는 소스 이미지를 별도의 이미지 인식 네트워크를 통하여 분석하고, 소스 텍스트에 기초하여 지정되는 class, segmentation에 의하여 출력 이미지 패치를 결정할 수도 있다. 예를 들어, 도 2 의 예시에서 프로세서는 소스 이미지에 대하여 소스 텍스트에서 지정하는 객체 (object)를 인식할 수 있다. 프로세서는 인식 결과에 기초하여 소스 이미지에서 소스 텍스트에 서 지정하는 대상을 포함하는 패치를 추출하거나, 소스 텍스트에서 지정하는 대상을 분할(segmentation)하고, 이와 대응되도록 출력 이미지 패치를 결정할 수도 있다. 이러한 경우, 스타일 변환의 대상을 보다 세밀하게 지 정할 수 있는 장점이 있다. 프로세서는 인코딩된 소스 텍스트, 인코딩된 타겟 텍스트, 인코딩된 소스 이미지, 인코딩된 출력 이미지 및 하나 이상의 인코딩된 선택된 출력 이미지 패치 중 적어도 하나에 기초하여 스타일 변환 네트워크를 학 습시킬 수 있다. 스타일 변환 네트워크의 학습 중에 사전학습된 텍스트 인코더 및 사전학습된 이미지 인코더 중 적어도 하나의 가중치는 고정될 수 있다. 전술한 바와 같이 스타일 변환 네트워크는 원본 이미지에 대하여 텍스트가 지정한 대로 스타일을 변환하는 동작을 수행할 수 있다. 텍스트 인코더 및 이미지 인 코더는 스타일 변환의 대상과 변환하고자 하는 스타일을 컴퓨터 장치가 인식할 수 있도록 하는 것으로, 스타일 을 어떻게 변환할 것인지를 학습하는 스타일 변환 네트워크의 학습 과정 중에 가중치를 고정하여 컴퓨팅 코스트를 절감할 수 있다. 프로세서는 인코딩된 출력 이미지와 인코딩된 소스 이미지의 차이 및 인코딩된 타겟 텍스트와 인코딩된 소스 텍스트의 차이에 기초한 제 1 손실함수 ( ) 에 기초하여 스타일 변환 네트워크를 학습시킬수 있다. 여기서 제 1 손실함수는 수학식 1 에 기초하며, 수학식 1 은 다음과 같다. 수학식 1"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, 이며, 는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더일 수 있다. 즉, 수학식 1 의 는 인코딩 된 출력 이미지 와 인코딩 된 소스 이미지 의 차이인 와 인코딩된 타겟 텍스트 와 인코딩된 소스 텍스트 의 차이 의 비율에 따라 결정되며, 프로세서는 수학 식 1 의 결과가 작아지도록 학습을 수행할 수 있다. 전술한 바와 같이 타겟 텍스트는 스타일 텍스트와 소스 텍 스트의 조합으로 결정될 수 있다. 수학식 1 의 손실 함수에 의한 학습을 통해 스타일 변환 네트워크는 입 력 데이터에 대한 전반적인 스타일 변환을 학습할 수 있다. 프로세서는 인코딩된 선택된 출력 이미지 패치와 인코딩된 소스 이미지의 차이 및 인코딩된 타겟 텍스트와 인코딩된 소스 이미지의 차이 및 인코딩된 타겟 텍스트와 인코딩된 소스 텍스트에 기초한 제 2 손실함수 ( )에 기초하여 스타일 변환 네트워크를 학습시킬 수 있다. 여기서 제 2 손실함수는 수학식 2 에 기초하며, 수학식 2 은 다음과 같다. 수학식 2"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, 이며, 는 사전학습된 텍스트 인코더, 는 사전학습된 이미지 인코더 이며, N은 선택된 패치들의 수, 는 사전결정된 임계값일 수 있다. 즉, 수학식 2의 는 인코딩된 선택된 출력 이미지 패치 각각 과 인코딩된 소스 이미지 의 차이인 와 인코 딩된 타겟 텍스트 와 인코딩된 소스 텍스트 의 차이 의 비율을 각각의 선택된 출력 이미지 패치에 대하여 구하고 이를 합하여 결정될 수 있다. 여기서 는 사전결정된 임계값이며, 조건은 보다 작은 항들을 합산에서 제외하여 로컬 최적화를 방지하고 일 반적인 성능을 유지할 수 있도록 할 수 있다. 수학식 2 의 손실 함수에 의한 학습을 통해 스타일 변환 네트워크는 의미론적으로 변환의 대상이 되는 패치들에 대한 스타일 변환을 학습할 수 있다. 패치들에 손실 함수로 학습하므로, 스타일 변환 네트워크는 소스 텍스트로 지정된 스타일 변환 대상과 타겟 텍스트로 지정된 스 타일 변환 대상과 변환할 스타일의 의미론적인 관계를 학습할 수 있다. 프로세서는 인코딩된 선택된 출력 이미지 패치와 인코딩된 타겟 텍스트의 유사도에 기초한 제 3 손실함수 ( )에 기초하여 스타일 변환 네트워크를 학습시킬 수 있다. 여기서 제 3 손실함수는 수학식 3 에 기초하며, 수학식 3 은 다음과 같다. 수학식 3"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, Sim()는 코사인 유사도 함수일 수 있다. 즉, 인코딩된 선택된 출력 이미지 패치와 인코딩된 타겟 텍스 트가 유사한 경우 제 3 손실함수는 0에 가까워 질 수 있다. 수학식 3 의 손실 함수에 의한 학습을 통해 스타일 변환 네트워크는 스타일 변환의 적정 수준에 관하여 학습할 수 있다. 도 3 은 본 개시의 일 실시예의 스타일 변환 모델의 벡터 공간에서의 학습 과정을 나타낸 예시도이다. 도 3 은 임베딩 공간(embedding space)에 매핑된 각각의 인코딩 피처들을 나타낸 예시도이다. 도 3a는 종래 기술에 의한 스타일 변환의 벡터 임베딩 공간에 관한 예시도이다. 종래기술은 스타일 변환 대사에 대한 의미론적 지정이 불가능하여 스타일 변환의 대상에 대해서 photo에 대한 텍스트 인코딩 결과를 스타일 변 환의 시작점으로 판단한다. 도 3a의 예시에서, 소스 텍스트의 임베딩 결과는 참조번호 4100과 같으며, 스타일 텍스트의 임베딩 결과는 참조번호 4300과 같다. 따라서, 스타일 변환 네트워크는 참조번호 4100과 참조번 호 4300을 잇는 참조번호 4310 벡터의 방향으로 스타일을 변환하게 된다. 도 2 의 예시에서 이미지의 boat 객체 를 neon light로 스타일 변환 하고자 하는 경우, 도 3a에 도시된 종래 기술에 의하는 경우, 변환의 방향이 의도 한 바와 다르게 된다. 도 3a에 도시된 종래 기술에서 학습되는 손실함수 622의 방향은 참조번호 4310과 평행하 게 되며 이는 의도와 다른 방향일 수 있다. 도 3b는 본 발명의 일 실시예의 제 2 손실함수에 대한 학습과 도 3c는 본 발명의 일 실시예의 제 3 손실함 수에 대한 학습을 나타낸 것이다. 전술한 바와 같이 본 발명은 스타일 변환의 대상과 변환하고자 하는 스 타일의 지정이 가능하며, 참조번호 410은 변환의 대상인 소스 텍스트 boat를, 참조번호 430은 변환하고자 하는 스타일 지정인 타겟 텍스트 neon light boat이며, 변환의 방향은 이를 잇는 참조번호 431로 나타내는 방향과 크 기를 가지는 벡터일 수 있다. 본 발명의 제 2 손실함수에 의한 학습은 선택된 패치들에 대한 인코딩 값 들(51 0)이 소스 이미지의 인코딩 값에서 참조번호 431의 벡터와 평행하는 방향에 위치하도록 하는 학습일 수 있다. 즉, 제 2 손실함수는 학습 과정에서 선택된 패치들의 인코딩 값이 참조번호 621 상에 위치하도록 하는 손실함수 일 수 있다. 도 3b의 참조번호 520은 랜덤 크롭된 패치들 중 선택되지 않은 패치들이며, 이들은 변환의 대상이 아니므로 이 들 패치에 대한 인코딩 값들에 대해서는 학습 과정에서 조정되지 않을 수 있다. 도 3c 는 본 발명의 제 3 손실함수에 대한 것으로 변환의 적정성에 관한 학습 과정을 나타낸 것이다. 도 3c의 참조번호 641 영역은 스타일 변환의 정도가 의도한 것(즉, 참조번호 431 벡터의 크기)보다 작은 경우의 임 베딩 영역이며, 참조번호 640 영역은 스타일 변환의 정도가 의도한 수준의 임베딩 영역이다. 도 3b의 참조번호 510 임베딩 값들은 참조번호 621의 벡터 상에 위치하며 참조번호 431 의 크기와 유사하도록 제 3 손실함수(63 0)에 의한 학습 과정에서 조정될 수 있다. 본 개시의 일 실시예의 스타일 변환 네트워크의 학습 과정에서 참조번호 431 벡터로 지정되는 스타일 변환 대상 과 스타일 변환의 방향 및 크기(즉, 소스 텍스트의 임베딩 값에서 타겟 텍스트의 임베딩 값으로의 벡터)를 소스 이미지의 임베딩 값에서 타겟 이미지 및 선택된 타겟 이미지 패치들의 임베딩 값으로의 벡터(참조번호 621)가 동일 또는 유사한 방향과 동일 또는 유사한 크기를 가지도록 학습될 수 있다. 또한, 추가적으로 본 개시의 일 실시예의 스타일 변환 네트워크는 제 4 손실함수 및 제 5 손실함수에 대하 여 추가적으로 학습될 수도 있다. 제 4 손실함수( )는 content loss로 원본 이미지의 모양을 유지하기 위한 손실함수 일 수 있다. 제 4 손실함 수는 소스 이미지의 인코딩 피처와 스타일 변환된 이미지의 인코딩 피처의 평균 제곱 오차(mean square error) 에 부과되는 손실함수 일 수 있으며, 전체가 본 명세서에서 참조로서 통합되는 Leon A. Gatys의 논문 “Image Style Transfer Using Convolutional Neural Networks”를 참조할 수 있다. 제 5 손실함수( )는 total variation regularization loss로 원본 이미지의 퀄리티를 유지하기 위한 손실 함수 일 수 있다. 제 5 손실함수에 대해서는 전체가 본 명세서에 참조로 통합되는 Gihyun Kwon, Jong Chul Ye의 논문 “CLIPstyler: Image Style Transfer with a Single Text Condition”을 참조한다. 이들 손실함수를 포함하여 본 개시의 일 실시예의 스타일 변환 네트워크는 수학식 4 의 손실 함수로 학습 될 수 있다. 수학식 4"}
{"patent_id": "10-2023-0131272", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서 는 각각의 손실 함수들에 대한 밸런스 가중치 일 수 있다. 도 4 는 본 개시의 일 실시예의 스타일 변환 모델의 스타일 변환 결과를 선행기술과 비교하여 나타낸 도면이다. 도 4는 각 소스 이미지에서 face, car, palace를 각각 Vintage, Yellow, black and white 스타일로 변경한 결 과를 나타낸 것이다. 도 4a는 종래 기술인 CLIPstyler에 의한 변환 결과로 변환 대상이 아닌 전체적인 스타일 변환이 수행되었음을 알 수 있다. 도 4b는 종래 기술인 CLIPstyler는 세세한 변환의 대상을 지정할 수 없이 소 스 텍스트를 photo로 고정하여 변환이 적용되며 그 결과 의도한 것과 다른 변환 결과를 볼 수 있다. 도4c는 본 발명의 일 실시예의 스타일 변환 방법에 의한 변환 결과로 각각의 이미지에 대하여 소스 텍스트로 지정된 변환 대상에 대한 스타일 변환이 수행됨을 확인할 수 있다. 도 5 는 본 개시의 일 실시예의 스타일 변환 모델의 스타일 변환 결과를 선행기술과 비교하여 나타낸 도면이다. 종래의 기술인 CLIPstyler로 스타일 텍스트 “golden”을 지정하여 스타일 변환한 결과를 살펴 보면, 참조번호 701과 같이 골든 리트리버의 형상을 확인할 수 있다. 이는 종래 기술의 경우 스타일 텍스트에 의한 스타일 지정 만에 기초하여 스타일을 변환하므로 스타일을 변환하고자 하는 대상과 스타일 텍스트의 의미론적인 연관관계가 고려되지 않았기 때문이다. Ours로 표현되는 본 발명에 의한 스타일 변환의 경우에는 원본 이미지에 대한 황금 빛의 스타일 변환이 수행되었으며, 참조번호 701의 골든 리트리버와 같은 의도치 않은 국소적 스타일 변환의 오 류가 발생하지 않음을 확인할 수 있다. 도 6 은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨터 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드(handheld) 컴퓨터 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션,모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2023-0131272", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은 본 개시의 일 실시예의 스타일 변환 방법을 수행하기 위한 컴퓨터 장치의 블록 구성도이다. 도 2 는 본 개시의 일 실시예의 스타일 변환 모델을 나타낸 예시도이다. 도 3 은 본 개시의 일 실시예의 스타일 변환 모델의 벡터 공간에서의 학습 과정을 나타낸 예시도이다. 도 4 는 본 개시의 일 실시예의 스타일 변환 모델의 스타일 변환 결과를 선행기술과 비교하여 나타낸 도면이다. 도 5 는 본 개시의 일 실시예의 스타일 변환 모델의 스타일 변환 결과를 선행기술과 비교하여 나타낸 도면이다. 도 6 은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
