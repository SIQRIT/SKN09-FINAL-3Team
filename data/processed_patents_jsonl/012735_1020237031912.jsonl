{"patent_id": "10-2023-7031912", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0159426", "출원번호": "10-2023-7031912", "발명의 명칭": "임베디드 시스템들 상에서 순차적 센서 데이터의 분류를 재개하기 위한 상태 변화 검출", "출원인": "퀄컴 인코포레이티드", "발명자": "자오 하이쥔"}}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공 신경망 (artificial neural network) 을 동작시키는 방법으로서,제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하는 단계;상기 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 상기 입력 데이터 스트림의 제 1 입력과 상기입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 단계로서, 상기 제 2 입력은상기 입력 데이터 스트림의 상기 제 1 입력에 대한 다음 후속하는 입력인, 상기 상태 변화가 발생하였는지를 검출하는 단계; 및 상기 제 1 회로를 통하여, 상기 상태 변화를 검출하는 것에 응답하여 상기 입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는 단계를 포함하는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 분류는 상기 제 1 회로를 통하여 검출된 상태와 상이한, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 제 1 회로를 통하여, 상기 입력 데이터 스트림의 적어도 상기 제 2 입력의 피처들의 세트를 추출하도록 상기 제 2 회로를 트리거하는 단계를 더 포함하는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 제 1 회로를 통하여, 상기 제 1 입력과 상기 제 2 입력 사이의 유사도 스코어를 계산하는 단계를 더 포함하고, 상기 상태 변화는 상기 유사도 스코어에 기초하여 검출되는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 제 1 회로를 통하여, 상기 유사도 스코어를 미리 정의된 임계치와 비교하는 단계; 및 상기 유사도 스코어가 상기 미리 정의된 임계치 미만인 것에 응답하여 상기 상태 변화가 발생하였다고 검출하는 단계를 더 포함하는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 4 항에 있어서, 상기 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도로 이루어진 그룹으로부터 선택된메트릭에 기초하는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서, 상기 제 1 회로를 통하여, 상기 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여상기 입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는 단계를 더 포함하는, 인공 신경망을 동작시키는 방법.공개특허 10-2023-0159426-3-청구항 8 제 1 항에 있어서, 상기 제 1 회로를 통하여, 상기 휴면 상태로 복귀하도록 상기 제 2 회로를 트리거하는 단계, 및 상기 입력 데이터 스트림의 적어도 하나의 후속하는 입력에 대한 후속하는 분류를 상기 입력 데이터 스트림의 선행하는 입력에대한 이전에 계산된 분류와 동일하도록 설정하는 단계를 더 포함하는, 인공 신경망을 동작시키는 방법."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "장치로서,하나 이상의 센서들로부터 입력 데이터 스트림을 수신하기 위한 입력 디바이스;제 2 회로가 휴면 상태에 있는 동안, 상기 입력 데이터 스트림의 제 1 입력과 상기 입력 데이터 스트림의 제 2입력 사이에서 상태 변화가 발생하였는지를 검출하는 상태 변화 검출 디바이스로서, 상기 제 2 입력은 상기 입력 데이터 스트림의 상기 제 1 입력에 대한 다음 후속하는 입력인, 상기 상태 변화 검출 디바이스; 및 상기 상태 변화를 검출하는 것에 응답하여 상기 입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는 제어 디바이스를 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서, 상기 제 2 회로는 피처 추출기를 포함하고, 상기 제어 디바이스는 상기 피처 추출기를 트리거하여 상기 입력데이터 스트림의 적어도 상기 제 2 입력의 피처들의 세트를 추출하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9 항에 있어서, 상기 상태 변화 검출 디바이스는 상기 제 1 입력과 상기 제 2 입력 사이의 유사도 스코어를 계산하고, 상기 상태 변화는 상기 유사도 스코어에 기초하여 검출되는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서, 상기 상태 변화 검출 디바이스는 상기 유사도 스코어를 미리 정의된 임계치와 비교하고, 상기 유사도 스코어가상기 미리 정의된 임계치 미만인 것에 응답하여 상기 상태 변화가 발생하였음을 검출하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서, 상기 제어 디바이스는 제 2 입력 및 제 3 입력에 대하여 계산된 제 2 유사도 스코어가 상기 미리 정의된 임계치를 초과하는 것에 응답하여 휴면 상태로 복귀하도록 상기 제 2 회로를 트리거하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11 항에 있어서, 상기 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도로 이루어진 그룹으로부터 선택된메트릭에 기초하여 계산되는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 9 항에 있어서,상기 제어 디바이스는 상기 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 상기입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는, 장치.공개특허 10-2023-0159426-4-청구항 16 제 9 항에 있어서, 상기 상태 변화 검출 디바이스는 이진 분류기를 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "장치로서,제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하기 위한 수단;상기 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 상기 입력 데이터 스트림의 제 1 입력과 상기입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하기 위한 수단으로서, 상기 제 2입력은 상기 입력 데이터 스트림의 상기 제 1 입력에 대한 다음 후속하는 입력인, 상기 상태 변화가 발생하였는지를 검출하기 위한 수단; 및 상기 제 1 회로를 통하여, 상기 상태 변화를 검출하는 것에 응답하여 상기 입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하기 위한 수단을 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서, 상기 제 1 회로를 통하여, 상기 입력 데이터 스트림의 적어도 상기 제 2 입력의 피처들의 세트를 추출하도록 상기 제 2 회로를 트리거하기 위한 수단을 더 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 17 항에 있어서,상기 제 1 회로를 통하여, 상기 제 1 입력과 상기 제 2 입력 사이의 유사도 스코어를 계산하기 위한 수단을 더포함하고, 상기 상태 변화는 상기 유사도 스코어에 기초하여 검출되는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서, 상기 제 1 회로를 통하여, 상기 유사도 스코어를 미리 정의된 임계치와 비교하기 위한 수단; 및 상기 유사도 스코어가 상기 미리 정의된 임계치 미만인 것에 응답하여 상기 상태 변화가 발생하였다고 검출하기 위한 수단을더 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 20 항에 있어서, 상기 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도로 이루어진 그룹으로부터 선택된메트릭에 기초하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 17 항에 있어서, 상기 제 1 회로를 통하여, 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 상기입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하기 위한 수단을 더 포함하는, 장치."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제 17 항에 있어서, 상기 제 1 회로를 통하여, 상기 휴면 상태로 복귀하도록 제 2 회로를 트리거하기 위한 수단을 더 포함하는, 장치.공개특허 10-2023-0159426-5-청구항 24 프로그램 코드가 인코딩된 비일시적인 컴퓨터 판독가능 저장 매체로서,상기 프로그램 코드는, 프로세서에 의해 실행되고,제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하는 프로그램 코드;상기 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 상기 입력 데이터 스트림의 제 1 입력과 상기입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 프로그램 코드로서, 상기 제 2입력은 상기 입력 데이터 스트림의 상기 제 1 입력에 대한 다음 후속하는 입력인, 상기 상태 변화가 발생하였는지를 검출하는 프로그램 코드; 및 상기 제 1 회로를 통하여, 상기 상태 변화를 검출하는 것에 응답하여 상기 입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는 프로그램 코드를 포함하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제 24 항에 있어서, 상기 제 1 회로를 통하여, 상기 입력 데이터 스트림의 적어도 상기 제 2 입력의 피처들의 세트를 추출하도록 상기 제 2 회로를 트리거하는 프로그램 코드를 더 포함하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제 24 항에 있어서, 상기 제 1 회로를 통하여, 상기 제 1 입력과 상기 제 2 입력 사이의 유사도 스코어를 계산하는 프로그램 코드를더 포함하고, 상기 상태 변화는 상기 유사도 스코어에 기초하여 검출되는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제 26 항에 있어서, 상기 제 1 회로를 통하여, 상기 유사도 스코어를 미리 정의된 임계치와 비교하는 프로그램 코드; 및 상기 유사도 스코어가 상기 미리 정의된 임계치 미만인 것에 응답하여 상기 상태 변화가 발생하였다고 검출하는 프로그램코드를 더 포함하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "제 26 항에 있어서, 상기 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도로 이루어진 그룹으로부터 선택된메트릭에 기초하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "제 24 항에 있어서, 상기 제 1 회로를 통하여, 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 상기입력 데이터 스트림의 분류를 수행하도록 상기 제 2 회로를 트리거하는 프로그램 코드를 더 포함하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "제 24 항에 있어서, 상기 제 1 회로를 통하여, 상기 휴면 상태로 복귀하도록 상기 제 2 회로를 트리거하는 프로그램 코드를 더 포함하는, 비일시적인 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-7031912", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "에너지 효율적 분류를 위한 방법은, 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신 하는 단계를 포함한다. 제 1 회로는 또한 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출한다. 제 2 입력은 입력 데이터 스트림의 다음 후속하는 입력이다. 제 1 회로는 상태 변화를 검출하는 것에 응답하여 입력 데이터 스 트림의 분류를 수행하도록 제 2 회로를 트리거한다."}
{"patent_id": "10-2023-7031912", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 양태들은 일반적으로 인공 신경망에 관한 것이다."}
{"patent_id": "10-2023-7031912", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 신경망들은 인공 뉴런들의 상호연결된 그룹들 (예를 들어, 뉴런 모델들) 을 포함할 수도 있다. 인공 신경망은 계산 디바이스일 수도 있거나, 계산 디바이스에 의해 수행될 방법으로 나타낼 수도 있다. 컨볼루 션 신경망들은 피드-포워드 인공 신경망의 일 타입이다. 컨볼루션 신경망들은, 수용 필드를 각각 갖고 그리 고 입력 공간을 집합적으로 타일링하는 뉴런들의 집합들을 포함할 수도 있다. CNN들 (Convolutional neural networks), 이를 테면, DCN들 (deep convolutional neural networks) 은 많은 애플리케이션들을 갖는다. 특히, 이들 신경망 아키텍처들은 이미지 인식, 패턴 인식, 음성 인식, 자율 주행 및 기타 분류 작업과 같은 다 양한 기술에 사용된다. 딥 신경망들은 스트리밍 데이터 (예를 들어, 이미지, 비디오, IMU (inertial measurement unit), 레이더, 및 WiFi) 분류 성능을 크게 개선시켰다. 이러한 네트워크들을 IoT (Internet of Things) 디바이스들, 스마트폰 들, 또는 데이터를 스트리밍하는 다른 저전력 디바이스들과 통합하는 것이 바람직하다. 그러나, 수반되는 계산량에 기인하여 분류를 위해 소모되는 광범위한 리소스들은 저전력 시스템들, 이를 테면, CPU (central processing unit), DSP (digital signal processor), RISC (reduced instruction set computer) 프로세서, MCU (microcontroller unit) 등 상의 실시간 에너지 민감 애플리케이션들에 대해 딥 신경망들을 활용하는 것이 도전과제로 된다."}
{"patent_id": "10-2023-7031912", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은 독립항들에서 각각 기술된다. 본 발명의 일부 바람직한 실시형태들은 종속항들에 기술된다. 본 개시의 양태에서, 방법이 제공된다. 방법은, 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이 터 스트림을 수신하는 단계를 포함한다. 방법은 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출 하는 단계를 포함한다. 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력이다. 추가적으로, 방법은 제 1 회로를 통하여, 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수 행하도록 제 2 회로를 트리거하는 단계를 포함한다. 본 개시의 다른 양태에서, 장치가 제공된다. 장치는 하나 이상의 센서들로부터 입력 데이터 스트림을 수신 하기 위한 입력 디바이스를 포함한다. 장치는 또한 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트 림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 상태 변화 검출 디바이스를 포함한다. 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력이다. 장치는 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하 는 제어 디바이스를 더 포함한다. 본 개시의 다른 양태에서, 장치가 제공된다. 장치는, 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하기 위한 수단을 포함한다. 장치는 또한 제 1 회로를 통하여, 제 2 회로가 휴면 상태 에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생 하였는지를 검출하기 위한 수단을 포함한다. 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후 속하는 입력이다. 추가적으로, 장치는 제 1 회로를 통하여, 상태 변화를 검출하는 것에 응답하여 입력 데이 터 스트림의 분류를 수행하도록 제 2 회로를 트리거하는 것을 포함한다. 본 개시의 다른 양태에서, 비-일시적인 컴퓨터 판독가능 매체가 제공된다. 컴퓨터 판독가능 매체가 그 위에 프로그램 코드를 인코딩한다. 프로그램 코드는 프로세서에 의해 실행되고, 하나 이상의 센서로부터 입력 데 이터 스트림을 수신하기 위한 코드를 포함한다. 프로그램 코드는 또한 제 2 회로가 휴면 상태에 있는 동안,입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출 하는 코드를 포함한다. 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력이다. 추가적으로, 프로그램 코드는 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하는 코드를 포함한다. 본 개시의 추가적인 특징들 및 이점들은 이하에서 설명될 것이다. 본 개시가 본 개시의 동일한 목적들을 수 행하기 위해 다른 구조들을 수정 또는 설계하기 위한 기초로서 쉽게 이용될 수도 있다는 것이 당업자에 의해 인 식되어야 한다. 또한, 이러한 등가의 구성들은 첨부된 청구항들에 기재된 바와 같은 본 개시의 교시들로부 터 벗어나지 않는다는 것이 당업자에 의해 인식되어야 한다. 본 개시의 피처인 것으로 여겨지는 신규한 피 처들은, 추가적인 목적들 및 이점들과 함께, 그것의 구성 및 동작 방법 양자에 관하여, 첨부 도면들과 관련하여 고려될 때 이하의 설명으로부터 더 잘 이해될 것이다. 그러나, 도면들 각각은 단지 예시 및 설명의 목적을 위해 제공되고, 본 개시의 제한들의 정의로서 의도되지 않는다는 것이 명백하게 이해될 것이다."}
{"patent_id": "10-2023-7031912", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "첨부된 도면들과 관련하여 이하에서 전개되는 상세한 설명은 다양한 구성들의 설명으로서 의도된 것이며, 본원 에 설명된 개념들이 실시될 수도 있는 유일한 구성들을 나타내도록 의도된 것은 아니다. 상세한 설명은 다 양한 개념들의 철저한 이해를 제공하기 위해 특정 상세들을 포함한다. 그러나, 이 개념들은 이러한 특정 상 세들 없이도 실시될 수도 있음이 당업자들에게 명백할 것이다. 일부 경우들에서, 잘 알려진 구조들 및 컴포 넌트들은 그러한 개념들을 모호하게 하는 것을 회피하기 위해 블록 다이어그램 형태로 도시된다. 독립적으로 또는 본 개시의 임의의 다른 양태들과 결합하여 구현될지 또는 독립적으로 구현될지에 따라, 본 교 시들에 기초하여, 당업자들은 본 개시의 범위가 본 개시의 임의의 양태를 포괄하고자 함을 이해해야 할 것이다. 예를 들어, 기술된 임의의 수의 양태를 이용하여 장치가 구현될 수도 있거나 방법이 실시될 수도 있다. 추가적으로, 본 개시의 범위는, 설명된 본 개시의 다양한 양태들에 부가한 또는 그 이외의 구조 및 기능, 또는 다른 구조, 기능을 이용하여 실시되는 그러한 장치 또는 방법을 커버하도록 의도된다. 개시된 본 개시의 임 의의 양태는 청구항의 하나 이상의 엘리먼트들에 의해 구현될 수도 있음을 이해해야 한다. 단어 \"예시적인\" 은 \"예, 실례, 또는 예시로서 역할을 하는 것\"을 의미하도록 사용된다. \"예시적인\" 것으로 서 설명된 임의의 양태가 반드시 다른 양태들에 비해 유리하거나 또는 바람직한 것으로서 해석되어야 하는 것은 아니다. 특정 양태들이 본 명세서에서 설명되어 있지만, 이들 양태들의 많은 변형들 및 치환들이 본 개시의 범위에 속한 다. 바람직한 양태들의 일부 이익들 및 이점들이 언급되지만, 본 개시의 범위는 특정 이익들, 사용들, 또는목적들에 한정되도록 의도되지 않는다. 대신, 본 개시의 양태들은 상이한 기술들, 시스템 구성들, 네트워크 들 및 프로토콜들에 널리 적용가능하도록 의도되며, 이들 중 일부는 도면들에서, 그리고 선호된 양태들의 다음 의 설명에서 예로써 예시된다. 상세한 설명 및 도면들은 제한적이기보다는 본 개시의 예시일 뿐이며, 본 개 시의 범위는 첨부된 청구항들 및 그 등가물들에 의해 정의된다. DNN들 (deep neural networks) 은 스트리밍 데이터 (예를 들어, 이미지, 비디오, IMU (inertial measurement unit), 레이더, 및 Wi-Fi) 분류 성능을 크게 개선시켰다. 이러한 네트워크들을 IoT (Internet of Things) 디바이스들, 스마트폰들, 또는 데이터를 스트리밍하기 위한 다른 저전력 디바이스들과 통합하는 것이 바람직하 다. 그러나, 수반되는 계산량에 기인하여 분류를 위해 소모되는 광범위한 리소스들은 저전력 시스템들, 이 를 테면, CPU들 (central processing units), DSP들 (digital signal processors), RISC (reduced instruction set computer) 프로세서들, MCU들 (microcontroller units) 등 상의 실시간 에너지 민감 애플리케 이션들에 대해 DNN들을 활용하는 것에 도전과제로 된다. 예를 들어, 카메라 프리뷰들, 비디오 파일들, 오디오 레코딩들, IMU 데이터, 레이더 데이터, 및 WiFi 데이터와 같은 많은 스트리밍 데이터 입력 소스들은 실질적인 시간적 유사성을 갖는 순차적 데이터를 제공한다. 즉, 이러한 입력 소스들에 대한 대부분의 후속 데이터 포인트들이 동일한 분포에 있고, 적은 수의 데이터 포인트들 이 분포를 변경하여 새로운 분류가 표시될 수 있게 된다. 이와 같이, 많은 연속적인 데이터 포인트들에 대 해 동일한 결과를 생성하기 위해 상당한 리소스들이 분류를 반복적으로 컴퓨팅하여 확장될 수 있다. 에너지 효율을 개선하고 분류 정확도를 유지하기 위해, 본 개시의 양태들은 낮은 계산적 상태 변화 검출 컴포넌 트에 대하여 교시된다. 일부 양태들에서, 상태 변화 검출 컴포넌트는, 예를 들어, 스마트폰, 피트니스 추적 기, IoT 디바이스, 또는 센서와 같은 컴퓨팅 디바이스에 통합될 수도 있다. 도 1 은 SOC (system-on-a-chip) 의 일 예의 구현을 예시하며, 이는 에너지 효율적 피처 추출 및 분류를 위하여 구성된 CPU (central processing unit) 또는 멀티-코어 CPU (예를 들어, 뉴럴 단-대-단 네트워크) 를 포함할 수도 있다. 변수들 (예를 들어, 뉴럴 신호들 및 시냅스 (synaptic) 가중치들), 계산 디바이스와 연관된 시스템 파라미터들 (예를 들어, 가중치들을 갖는 신경망), 지연들, 주파수 빈 정보, 및 태스크 정보는 뉴럴 프로세싱 유닛 (NPU) 과 연관된 메모리 블록, CPU 와 연관된 메모리 블록, 그래픽 프로세싱 유 닛 (GPU) 과 연관된 메모리 블록, 디지털 신호 프로세서 (DSP) 와 연관된 메모리 블록, 메모리 블록 에 저장될 수도 있거나, 또는 다수의 블록들에 걸쳐 분산될 수도 있다. CPU 에서 실행되는 명 령들은 CPU 와 연관된 프로그램 메모리로부터 로딩될 수도 있거나 메모리 블록 으로부터 로딩될 수 도 있다. SOC 는 또한, GPU , DSP , 5세대 (5G) 연결성, 4세대 롱 텀 에볼루션 (4G LTE) 연결성, Wi-Fi 연결성, USB 연결성, 블루투스 연결성 등을 포함할 수도 있는 연결성 블록 , 및 예를 들어, 제스처들을 검 출 및 인식할 수도 있는 멀티미디어 프로세서 와 같은, 특정 기능들에 맞게 조정된 부가 프로세싱 블록들 을 포함할 수도 있다. 일 구현에서, NPU 는 CPU , DSP , 및/또는 GPU 에서 구현된 다. SOC 는 또한 센서 프로세서 , 이미지 신호 프로세서들 (ISP들), 및/또는 내비게이션 모듈 을 포함할 수 있으며, 이는 글로벌 포지셔닝 시스템을 포함할 수도 있다. SOC 는 ARM 명령 세트에 기초할 수도 있다. 본 개시의 일 양태에서, 범용 프로세서 내에 로딩 된 명령들은 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하는 코드를 포함할 수 도 있다. 범용 프로세서 는 또한 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 입력 데 이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 코 드를 포함할 수도 있다. 제 2 입력은 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력이다. 범용 프로세서 는 제 1 회로를 통하여, 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수 행하도록 제 2 회로를 트리거하는 코드를 더 포함할 수도 있다. 딥 러닝 아키텍처들은 각각의 계층에서 연속적으로 추상화의 더 높은 레벨들로 입력들을 나타내는 것을 학습하 는 것에 의해 객체 인식 태스크를 수행하는 것에 의해, 입력 데이터의 유용한 피처 표현을 구축할 수도 있다. 이러한 방식으로, 딥 러닝은 전형적인 머신 러닝의 주요 병목현상을 해결한다. 딥 러닝의 도래 이전에, 객체 인식 문제에 대한 머신 러닝 접근법은 아마도 얕은 분류기 (shallow classifier) 와 조합으로, 인간 공학 기술 (human engineered) 피처들에 크게 의존했을 수도 있다. 얕은 분류기는 예를 들어, 입력이 어느 클래 스에 속하는지를 예측하기 위해 피처 벡터 성분들의 가중 합이 임계치와 비교될 수 있는, 2-클래스 선형 분류기 일 수도 있다. 인간 공학기술 피처들은 도메인 전문지식을 갖는 엔지니어에 의해 특정 문제 도메인에 맞게조정된 템플릿들 또는 커넬들일 수도 있다. 이와 대조적으로, 딥 러닝 아키텍처는 인간 엔지니어가 설계할 수도 있는 것과 유사하지만, 트레이닝을 통해 피처들을 나타내는 것을 학습할 수도 있다. 또한, 딥 네트워 크는 인간이 고려하지 않았을 수도 있는 새로운 타입의 피처들을 나타내고 인식하는 것을 학습할 수도 있다. 딥 러닝 아키텍처는 피처들의 계층구조를 학습할 수도 있다. 예를 들어, 시각적 데이터로 제시되면, 제 1 계층은 입력 스트림에서, 에지들과 같은 비교적 간단한 피처들을 인식하는 것을 학습할 수도 있다. 다른 예 에서, 청각적 데이터로 제시되면, 제 1 계층은 특정 주파수들에서의 스펙트럼 전력을 인식하는 것을 학습할 수 도 있다. 제 1 계층의 출력을 입력으로서 취하는 제 2 계층은, 시각 데이터에 대한 간단한 형상들 또는 청 각 데이터에 대한 사운드들의 조합들과 같은 피처들의 조합들을 인식하는 것을 학습할 수도 있다. 예를 들 어, 상위 계층들은 시각적 데이터에서의 복잡한 형상들 또는 청각적 데이터에서의 단어들을 나타내는 것을 학습 할 수도 있다. 여전히 상위 계층들은 공통 시각적 객체들 또는 구어체들을 인식하는 것을 학습할 수도 있다. 딥 러닝 아키텍처들은 자연스러운 계층 구조를 갖는 문제들에 적용될 때 특히 잘 수행할 수도 있다. 예를 들어, 모터구동 차량들 (motorized vehicle) 의 분류는 휠들, 윈드쉴드들 및 다른 피처들을 인식하는 것을 먼저 학습하는 것으로 이익을 얻을 수 있다. 이러한 피처들은 자동차, 트럭, 및 비행기를 인식하기 위해 상이한 방식들로 상위 계층에서 조합될 수도 있다. 신경망들은 다양한 연결성 패턴들로 설계될 수도 있다. 피드-포워드 네트워크들에서, 정보는 하위 계층에서 상위 계층으로 전달되고, 주어진 계층에서의 각각의 뉴런은 상위 계층들에서의 뉴런들에 통신한다. 계층구 조적 표현은 상술한 바와 같이, 피드-포워드 네트워크의 연속적인 계층들에 구축될 수도 있다. 신경망들은 또한 순환 (recurrent) 또는 피드백 (또한 하향식 (top-down) 이라 함) 연결들을 가질 수도 있다. 순환 연 결에서, 주어진 계층의 뉴런으로부터의 출력은 동일한 계층의 다른 뉴런으로 통신될 수도 있다. 순환 아키 텍처는 시퀀스로 신경망에 전달되는 입력 데이터 청크들 중 하나보다 많은 청크들에 걸쳐 있는 패턴들을 인식하 는데 도움이 될 수도 있다. 주어진 계층의 뉴런에서 하위 계층의 뉴런으로의 연결은 피드백 (또는 하향식) 연결이라고 한다. 많은 피드백 연결들을 갖는 네트워크는 하이-레벨 개념의 인식이 입력의 특정 로우-레벨 피처들을 식별하는 것을 보조할 수도 있을 때 도움이 될 수도 있다. 신경망의 계층들 사이의 연결들은 완전히 연결되거나 로컬로 연결될 수도 있다. 도 2a 는 완전 연결 연결된 신경망 의 예를 도시한다. 완전 연결된 신경망 에서, 제 1 계층에서의 뉴런은 제 2 계층에서의 모든 뉴런에 그의 출력을 통신할 수도 있으므로, 제 2 계층에서의 각각의 뉴런이 제 1 계층에서의 모든 뉴런으 로부터 입력을 수신할 것이다. 도 2b 는 국부적으로 연결된 신경망 의 예를 도시한다. 국부적으 로 연결된 신경망 에서, 제 1 층에서의 뉴런은 제 2 계층에서의 제한된 수의 뉴런들에 연결될 수도 있다. 보다 일반적으로, 국부적으로 연결된 신경망 의 국부적으로 연결된 계층은 계층에서의 각각의 뉴런이 동일하거나 유사한 연결성 패턴을 가질 것이지만, 상이한 값들 (예를 들어, 210, 212, 214, 및 216) 을 가질 수 도 있는 연결 강도들을 갖도록 구성될 수도 있다. 국부적으로 연결된 연결성 패턴은 상위 계층에서 공간적 으로 별개의 수용 필드들을 발생할 수도 있는데, 이는 주어진 영역에서 상위 계층 뉴런들이 네트워크에 대한 총 입력의 제한된 부분의 특성들에 대한 트레이닝을 통해 튜닝되는 입력들을 수신할 수도 있기 때문이다. 국부적으로 연결된 신경망의 일 예는 컨볼루션 신경망이다. 도 2c 는 컨볼루션 신경망 의 예를 도시 한다. 컨볼루션 신경망 은 제 2 계층에서의 각각의 뉴런에 대한 입력들과 연관된 연결 강도들이 공유 되도록 (예를 들어, 208) 구성될 수도 있다. 컨볼루션 신경망들은 입력들의 공간적 위치가 의미있는 문제들 에 매우 적합할 수도 있다. 컨볼루션 신경망의 하나의 유형은 딥 컨볼루션 네트워크 (DCN) 이다. 도 2d 는 자동차-탑재형 (car- mounted) 카메라와 같은 이미지 캡처 디바이스 로부터 입력된 이미지 로부터 시각적 피처들을 인식 하도록 설계된 DCN 의 상세한 예를 도시한다. 본 예의 DCN 은 교통 표지판 및 교통 표지판 상 에 제공된 번호를 식별하도록 트레이닝될 수도 있다. 물론, DCN 은 차선 마킹들을 식별하거나 신호등 들을 식별하는 것과 같은 다른 태스크들을 위해 트레이닝될 수도 있다. DCN 은 지도 학습으로 트레이닝될 수도 있다. 트레이닝 동안, DCN 은 속도 제한 표지판의 이미 지 와 같은 이미지로 제시될 수도 있고, 그 후 순방향 패스가 출력 을 생성하기 위해 계산될 수도 있다. DCN 은 피처 추출 섹션 및 분류 섹션을 포함할 수도 있다. 이미지 를 수신하면, 컨 볼루션 계층 은 이미지 에 컨볼루션 커넬들 (도시 생략) 을 적용하여 피처 맵들 의 제 1 세 트를 생성할 수도 있다. 예로서, 컨볼루션 계층 에 대한 컨볼루션 커넬은 28x28 피처 맵들을 생성하는 5x5 커넬일 수도 있다. 본 예에서, 4개의 상이한 피처 맵이 피처 맵들의 제 1 세트 에서 생성되기 때문에, 4개의 상이한 컨볼루션 커넬이 컨볼루션 계층 에서 이미지 에 적용되었다. 컨볼루션 커넬들은 또한 필터들 또는 컨볼루션 필터들로 지칭될 수도 있다. 피처 맵들의 제 1 세트 는 피처 맵들의 제 2 세트 를 생성하기 위해 최대 풀링 계층 (도시 생략) 에 의해 서브샘플링될 수도 있다. 최대 풀링 계층 (max pooling layer) 은 피처 맵들 의 제 1 세트 의 사이즈를 감소시킨다. 즉, 14x14 와 같은 피처 맵들의 제 2 세트 의 사이즈는 28x28 과 같은 피처 맵들의 제 1 세트 의 사이즈보다 작다. 감소된 사이즈는 메모리 소비를 감소시키면서 후속 계층에 유 사한 정보를 제공한다. 피처 맵들의 제 2 세트 는 추가로, 피처 맵들의 하나 이상의 후속 세트 (도시 생략) 를 생성하기 위해 하나 이상의 후속 컨볼루션 계층 (도시 생략) 을 통해 컨볼루션될 수도 있다. 도 2d 의 예에서, 피처 맵들의 제 2 세트 는 제 1 피처 벡터 를 생성하도록 컨볼루션된다. 또 한, 제 1 피처 벡터 는 제 2 피처 벡터 를 생성하도록 추가로 컨볼루션된다. 제 2 피처 벡터 의 각각의 피처는 \"표지판\", \"60\" 및 \"100\" 과 같은 이미지 의 가능한 피처에 대응하는 수를 포함 할 수도 있다. 소프트맥스 함수 (softmax function)(도시 생략) 는 제 2 피처 벡터 에서의 수들을 확률로 변환할 수도 있다. 이와 같이, DCN 의 출력 은 하나 이상의 피처들을 포함하는 이미지 의 확률이다. 본 예에서, \"표지판\" 및 \"60\" 에 대한 출력 에서의 확률들은 \"30\", \"40\", \"50\", \"70\", \"80\", \"90\" 및 \"100\" 과 같은 출력 의 다른 것들의 확률들보다 높다. 트레이닝 전에, DCN 에 의해 생성된 출 력 은 부정확할 가능성이 있다. 따라서, 출력 과 타겟 출력 사이에 에러가 계산될 수도 있다. 타겟 출력은 이미지 의 실측 자료 (ground truth)(예를 들어, \"표지판\" 및 \"60\") 이다. DCN 의 가중치들은 그 후 DCN 의 출력 이 타겟 출력과 더 밀접하게 정렬되도록 조정될 수도 있다. 가중치들을 조정하기 위해, 러닝 알고리즘은 가중치들에 대한 그래디언트 벡터를 계산할 수도 있다. 그래디 언트는 가중치가 조정되었으면 에러가 증가 또는 감소할 양을 표시할 수도 있다. 최상위 계층에서, 그래디 언트는 끝에서 두번째 계층에서의 활성화된 뉴런 및 출력 계층에서의 뉴런을 연결하는 가중치의 값에 직접 대응 할 수도 있다. 하위 계층들에서, 그래디언트는 가중치들의 값 및 상위 계층들의 계산된 에러 그래디언트들 에 의존할 수도 있다. 가중치들은 그 후 에러를 감소시키기 위해 조정될 수도 있다. 가중치를 조정하는 이러한 방식은 신경망을 통한 \"역방향 패스\" 를 수반하기 때문에 \"역 전파\" 로 지칭될 수도 있다. 실제로, 가중치들의 에러 그래디언트는 작은 수의 예들에 걸쳐 계산될 수도 있어서, 계산된 그래디언트는 실제 에러 그래디언트에 근사한다. 이러한 근사화 방법은 확률적 그래디언트 하강법 (stochastic gradient descent) 으로 지칭될 수도 있다. 확률적 그래디언트 하강법은 전체 시스템의 달성가능한 에러율이 감소하 는 것을 멈출 때까지 또는 에러율이 목표 레벨에 도달할 때까지 반복될 수도 있다. 학습 후에, DCN 은 새로 운 이미지들을 제시받을 수도 있고, 네트워크를 통한 포워드 패스는 DCN 의 추론 또는 예측으로 고려될 수도 있 는 출력 을 산출할 수도 있다. 딥 신뢰성 네트워크들 (Deep belief networks; DBNs) 은 은닉된 노드들의 다수의 계층들을 포함하는 확률적 모 델들이다. DBN 은 트레이닝 데이터 세트의 계층구조적 표현을 추출하는데 사용될 수도 있다. DBN 은 제 한된 볼츠만 머신 (Restricted Boltzmann Machines)(RBM) 의 계층들을 적층하여 획득될 수도 있다. RBM 은 입력들의 세트에 걸친 확률 분포를 학습할 수 있는 인공 신경망의 타입이다. RBM들은 각각의 입력이 카테고 리화되어야 하는 클래스에 관한 정보의 부재 시 확률 분포를 학습할 수 있기 때문에, RBM들은 종종 비지도 학습 에 사용된다. 하이브리드 비지도 및 지도 패러다임 (hybrid unsupervised and supervised paradigm) 을 사 용하여, DBN 의 최하위 RBM들은 비지도 방식으로 트레이닝될 수도 있고 피처 추출기들로서 작용할 수도 있으며, 최상위 RBM 은 (이전 계층 및 타겟 클래스들로부터의 입력들의 공동 분포에 대해) 지도 방식으로 트레이닝될 수 도 있고 분류기로서 작용할 수도 있다. 딥 컨볼루션 네트워크 (DCN) 는 추가적인 풀링 및 정규화 계층들로 구성된, 컨볼루션 네트워크들의 네트워크들 이다. DCN들은 많은 태스크들에 대해 최첨단 성능을 달성하였다. DCN들은 입력 및 출력 타겟들 양자 모 두가 많은 예시들에 대해 알려져 있고 그래디언트 하강 방법들의 사용에 의해 네트워크의 가중치들을 수정하는 데 사용되는 지도 학습을 사용하여 트레이닝될 수 있다. DCN 은 피드-포워드 네트워크일 수도 있다. 또한, 상술한 바와 같이, DCN 의 제 1 계층에서의 뉴런으로부터 다음 상위 계층에서의 뉴런들의 그룹으로의 연결들은 제 1 계층에서의 뉴런들에 걸쳐 공유된다. DCN들의 피 드-포워드 및 공유 연결들은 빠른 프로세싱을 위해 이용될 수도 있다. DCN 의 계산 부담은 예를 들어, 순환 또는 피드백 연결들을 포함하는 유사하게 사이징된 신경망의 것보다 훨씬 적을 수도 있다. 컨볼루션 네트워크의 각각의 계층의 프로세싱은 공간적으로 불변 템플릿 또는 기저 투영으로 간주될 수도 있다. 입력이 컬러 이미지의 적색, 녹색 및 청색 채널들과 같은 다중 채널들로 먼저 분해되면, 그 입력에 대해 트 레이닝된 컨볼루션 네트워크는 이미지의 축들을 따라 2개의 공간 차원 및 컬러 정보를 캡처하는 제 3 차원을 갖 는, 3 차원으로 간주될 수도 있다. 컨볼루션 연결들의 출력들은 후속 계층에서 피처 맵을 형성하는 것으로 간주될 수도 있고, 피처 맵의 각각의 엘리먼트 (예를 들어, 220) 는 이전 계층에서의 뉴런들의 범위 (예를 들어, 피처 맵들 ) 로부터 그리고 다중 채널들 각각으로부터 입력을 수신한다. 피처 맵에서의 값들은 추가로, 정류, max(0,x) 와 같은 비선형성으로 프로세싱될 수도 있다. 인접한 뉴런들로부터의 값들은 추가 로 풀링될 수도 있으며, 이는 다운 샘플링에 대응하고, 부가적인 로컬 불변 및 차원성 감소를 제공할 수도 있다. 화이트닝에 대응하는 정규화는, 또한 피처 맵에서의 뉴런들 사이의 측면 억제를 통해서 적용될 수도 있다. 딥 러닝 아키텍처들의 성능은 더 많은 라벨링된 데이터 포인트들이 이용가능하게 되거나 또는 계산 파워가 증가 함에 따라 증가할 수도 있다. 최신의 딥 신경망은 불과 15년 전에 통상의 연구자에 이용가능했던 것보다 수 천 배 더 큰 컴퓨팅 리소스들로 일상적으로 트레이닝된다. 새로운 아키텍처 및 교육 패러다임은 딥 러닝의 성능을 부스팅할 수도 있다. 정류된 선형 유닛들은 그래디언트 소실 (vanishing gradients) 로 알려진 트레 이닝 이슈를 감소시킬 수도 있다. 새로운 트레이닝 기법들은 오버-피팅 (over-fitting) 을 감소시킬 수도 있고, 따라서 더 큰 모델들이 우수한 일반화를 달성하는 것을 가능하게 한다. 캡슐화 기법들은 주어진 수용 필드에서 데이터를 추상화하고 추가로 전체 성능을 부스팅할 수도 있다. 도 3 은 딥 컨볼루션 네트워크 를 도시하는 블록 다이어그램이다. 딥 컨볼루션 네트워크 는 연 결성 및 가중치 공유에 기초한 다수의 상이한 타입들의 계층들을 포함할 수도 있다. 도 3 에 나타낸 바와 같이, 딥 컨볼루션 네트워크 는 컨볼루션 블록들 (354A, 354B) 을 포함한다. 컨볼루션 블록들 (354A, 354B) 의 각각은 컨볼루션 계층 (CONV), 정규화 계층 (LNorm), 및 최대 풀링 계층 (MAX POOL) 으로 구성될 수도 있다. 컨볼루션 계층들 은 피처 맵을 생성하기 위해 입력 데이터에 적용될 수도 있는 하나 이상의 컨볼루션 필 터를 포함할 수도 있다. 컨볼루션 블록들 (354A, 354B) 중 2개만이 나타나 있지만, 본 개시는 그렇게 제한 되지 않으며, 대신에, 설계 선호도에 따라 임의의 수의 컨볼루션 블록들 (354A, 354B) 이 딥 컨볼루션 네트워크 에 포함될 수도 있다. 정규화 계층 은 컨볼루션 필터들의 출력을 정규화할 수도 있다. 예 를 들어, 정규화 계층 은 화이트닝 또는 측면 억제를 제공할 수도 있다. 최대 풀링 계층 은 로 컬 불변 및 차원성 감소를 위해 공간에 걸쳐 다운 샘플링 집성을 제공할 수도 있다. 예를 들어, 딥 컨볼루션 네트워크의 병렬 필터 뱅크들은 고성능 및 저전력 소비를 달성하기 위해 SOC 의 CPU 또는 GPU 상에 로딩될 수도 있다. 대안적인 실시형태들에 있어서, 병렬 필터 뱅크들은 SOC 의 DSP 또는 ISP 상에 로딩될 수도 있다. 또한, 딥 컨볼루션 네트워크 는 센서들 및 내비게이션에 각각 전용된, 센서 프로세서 및 내비게이션 모듈 과 같은 SOC 상에 존재할 수도 있는 다른 프로세싱 블록들에 액세스할 수도 있다. 딥 컨볼루션 네트워크 는 또한 하나 이상의 완전히 연결된 계층 (FC1 및 FC2) 을 포함할 수도 있다. 딥 컨볼루션 네트워크 는 로지스틱 회귀 (logistic regression; LR) 계층 을 더 포함할 수도 있다. 딥 컨볼루션 네트워크 의 각각의 계층 (356, 358, 360, 362, 364) 사이에는 업데이트될 가중 치들 (도시 생략) 이 있다. 계층들 (예를 들어, 356, 358, 360, 362, 364) 각각의 출력은 컨볼루션 블록들 (354A) 중 첫번째에 공급된 입력 데이터 (예를 들어, 이미지들, 오디오, 비디오, 센서 데이터 및/또는 다 른 입력 데이터) 로부터 계층구조적 피처 표현들을 학습하기 위해 딥 컨볼루션 네트워크 에서 계층들 (예 를 들어, 356, 358, 360, 362, 364) 중 후속하는 하나의 입력으로서 작용할 수도 있다. 딥 컨볼루션 네트워 크 의 출력은 입력 데이터 에 대한 분류 스코어(classification score) 이다. 분류 스 코어 는 확률들의 세트일 수도 있으며, 여기서 각각의 확률은 피처들의 세트로부터의 피처를 포함하는, 입력 데이터의 확률이다. 도 4 는 인공 지능 (AI) 기능들을 모듈화할 수도 있는 예시적인 소프트웨어 아키텍처 를 예시한 블록 다 이어그램이다. 아키텍처를 사용하여, 본 개시의 양태들에 따르면, SOC (예를 들어, CPU , DSP, GPU 및/또는 NPU 의 여러 프로세싱 블록들로 하여금, AI 애플리케이션 에 대한 포스 트-트레이닝 양자화를 위하여 개시된 바와 같이 적응적 라운딩을 지원하게 할 수도 있는 애플리케이션들이 설계 될 수도 있다. AI 애플리케이션 은, 예를 들어, 디바이스가 현재 동작하는 위치를 표시하는 장면의 검출 및 인식을 제공 할 수도 있는 사용자 공간 에서 정의된 함수들을 호출하도록 구성될 수도 있다. AI 애플리케이션 은, 예를 들어, 인식된 장면이 사무실, 강당, 식당, 또는 호수와 같은 실외 설정인지 여부에 의존하여 상 이하게 마이크로폰 및 카메라를 구성할 수도 있다. AI 애플리케이션 은 AI 기능 API (application programming interface) 에서 정의된 라이브러리와 연관된 컴파일된 프로그램 코드에 대한 요청을 행할 수 도 있다. 이 요청은, 예를 들어, 비디오 및 포지셔닝 데이터에 기초하여 추론 응답을 제공하도록 구성된 딥 신경망의 출력에 궁극적으로 의존할 수도 있다. 런타임 프레임워크의 컴파일된 코드일 수도 있는 런타임 엔진 은 AI 애플리케이션 에 추가로 액세 스가능할 수도 있다. AI 애플리케이션 은 예를 들어, 런타임 엔진으로 하여금, 애플리케이션의 사용 자 인터페이스에 의해 검출된 이벤트에 의해 트리거되거나 또는 특정 시구간에서 추론을 요청하게 할 수도 있다. 추론 응답을 제공하도록 야기될 때, 런타임 엔진은, 이어서, SOC 상에서 구동하는 커넬 과 같은 OS (operating system) 공간 에서의 오퍼레이팅 시스템에 신호를 전송할 수도 있다. 일부 예 들에서, 커넬 은 LINUX 커넬일 수도 있다. 오퍼레이팅 시스템 은, 이어서, 양자화의 연속적인 완화에 기인하여 연속적인 CPU , DSP , GPU , NPU , 또는 이들의 일부 조합 상에서 수행 되게 할 수도 있다. CPU 는 오퍼레이팅 시스템에 의해 직접적으로 액세스될 수도 있고, 다른 프로세 싱 블록들은 DSP , GPU , 또는 NPU 각각을 위한 드라이버, 이를 테면, 드라이버 (414, 416, 또는 418) 를 통해 액세스될 수도 있다. 예시적인 예에서, 딥 신경망은 프로세싱 블록들의 조합, 이를 테면, CPU , DSP 및 GPU 상에서 구동하도록 구성될 수도 있거나, 또는, NPU 상에서 구 동될 수도 있다. 애플리케이션 (예를 들어, AI 애플리케이션) 은, 예를 들어, 디바이스가 현재 동작하는 위치를 표시하는 장면의 검출 및 인식을 제공할 수도 있는 사용자 공간 에서 정의된 함수들을 호출하도록 구성될 수도 있 다. 애플리케이션 은, 예를 들어, 인식된 장면이 사무실, 강당, 식당, 또는 호수와 같은 실외 설정인 지 여부에 의존하여 상이하게 마이크로폰 및 카메라를 구성할 수도 있다. 애플리케이션 은 현재의 장 면의 추정치를 제공하기 위해 SceneDetect 애플리케이션 프로그래밍 인터페이스 (API) 에서 정의된 라이 브러리와 연관된 컴파일링된 프로그램 코드에 대한 요청을 행할 수도 있다. 이 요청은, 예를 들어, 비디오 및 포지셔닝 데이터에 기초하여 장면 추정치들을 제공하도록 구성된 차동 신경망의 출력에 궁극적으로 의존할 수도 있다. 런타임 프레임워크의 컴파일링된 코드일 수도 있는 런타임 엔진 은 애플리케이션 에 추가로 액세스 가능할 수도 있다. 애플리케이션 은 런타임 엔진으로 하여금 예를 들어 특정 시간 간격으로, 또는 애 플리케이션의 사용자 인터페이스에 의해 검출된 이벤트에 의해 트리거링된 장면 추정치를 요청하게 할 수도 있 다. 장면을 추정하도록 야기될 때, 런타임 엔진은, 차례로, 신호를, SOC 상에서 구동하는 리눅스 커 넬 과 같은 오퍼레이팅 시스템 으로 전송할 수도 있다. 오퍼레이팅 시스템 은, 차례로, 연산이 CPU , DSP , GPU , NPU , 또는 이들의 일부 조합 상에서 수행되게 할 수도 있다. CPU 는 오퍼레이팅 시스템에 의해 직접적으로 액세스될 수도 있고, 다른 프로세싱 블록들은 DSP 를 위한, GPU 를 위한, 또는 NPU 를 위한 구동기 (414-418) 와 같은 구동기를 통해 액세스될 수도 있다. 예시적인 예에서, 차동 신경망은 프로세싱 블록들, 이를 테면, CPU 및 GPU 의 조합 상에 서 구동하도록 구성될 수도 있거나, 또는 NPU 상에서 구동될 수도 있다. 본 개시의 양태들은 순차적인 센서 데이터 분류를 웨이크업하기 위한 상태 변화 검출 디바이스를 교시한다. 도 5 는 본 개시의 양태들에 따른, 일 예의 에너지 효율적 분류 시스템 을 예시하는 블록 다이어그램이다. 도 5 를 참조하면, 일 예의 분류 시스템 은 스트리밍 데이터를 입력으로서 수신할 수도 있다. 스트리밍 데이터는 소스에 의해 연속적으로 생성된 데이터를 포함할 수도 있다. 데이터는 예를 들어, 오디오, 비디오 또는 이들의 조합의 형태일 수 있다. 도 5 의 예에 도시된 바와 같이, 입력 데 이터는, 예를 들어, IoT (Internet of Things) 소스, 이를 테면, 스마트 안경 , 스마트 폰 , 스마트 시계 또는 신발 내의 센서를 통하여 공급될 수 있다. 물론, 이들 소스는 단지 예시적이며 제한 적이지 않다. 스트리밍 데이터는, 예를 들어, 통신 매체, 이를 테면, Wi-Fi, GPS, 블루투스, 또는 스피커를통하여 수신될 수도 있다. 시스템 은 CNN (convolutional neural network) 를 포함할 수도 있다. CNN 은 입력 데 이터로부터 피처를 추출할 수 있다. 추출된 피처들은 분류기를 통해 프로세싱될 수도 있다. 분류기는, 예를 들어, DBN (deep belief network), RNN (recurrent neural network), 또는 DNN (deep neural network) 일 수 있다. 분류기는 추론 검출을 위해 구성될 수도 있고 입력의 분류를 제공할 수도 있다. 일 예에서, 분류기 (예를 들어, 512, 514, 또는 516) 는 스마트폰 을 통해 제공된 이미지 데이터에서 활동을 분류할 수도 있다. 활동 분류 는, 예를 들어, 사람이 계단을 오르고, 위층에 위치되고, 달리 고, 자전거 라이딩하고, 커피를 마시거나, 텔레비전을 시청하고 있다는 것을 나타낼 수 있다. 분류기 (예를 들어, 512, 514, 또는 516) 를 동작시켜 데이터 스트림 내의 모든 데이터 포인트에 대한 분류를 계산하기보다는, 시스템 은 입력 디바이스들 (예를 들어, 스마트폰 또는 스마트 워치 ) 중 하 나 이상에 의해 공급되는 연속적인 데이터 포인트들에서의 변화를 검출하는 상태 변화 검출 블록 으로 구 성된다. 상태 변화 검출 블록 은 별개의 회로로서 구성될 수 있거나, 예를 들어 입력 디바이스 (예를 들어, 신발 내의 센서) 와 통합될 수 있다. 일부 양태들에서, 연속적인 데이터 포인트들에서의 차이 가 계산될 수 있다. 상태 변화 검출 블록 이 입력 디바이스 (예를 들어, 스마트 폰 또는 스마트 워치 ) 로부터의 데이터 스트림의 변화를 검출할 때, 상태 변화 검출 블록은 CNN 으로 하여금 웨이크 업하고 입력 데이터 의 프로세싱을 재개하여 분류를 생성하게 하거나 이를 트리거하도록 신호 또는 다른 표시를 제공할 수도 있다. 이와 반대로, 상태 변화 검출 블록 이 입력 디바이스(들)로부터 데이터 스트림의 변화를 검출하지 않 을 때, 상태 변화 검출 블록 은 CNN 으로 하여금 저전력 또는 슬립 상태에 진입하거나 유지하게 하 기 위한 표시를 제공할 수 있다. 상태 변화 검출 블록 은 예를 들어, 미리 정의된 임계 값과의 차이의 비교에 기초하여 상태 변화를 검출 할 수도 있다. 일부 양태들에서, 상태 변화 검출 블록 은 연속적인 데이터 포인트들 사이의 유사도 스코어 메트릭을 계산하고 유사도 스코어 메트릭을 임계값과 비교하는 것에 의해 상태 변화를 검출할 수 있다. 유사도 스코어 메트릭은, 예를 들어, 피크 신호-대-잡음비 (PSNR), 구조적 유사도 (SSIM), 코사인 유사도 등 에 기초하여 결정될 수도 있다. 일부 양태들에서, 상태 변화 검출 블록 은, 차례로 입력의 상태가 변화되었는지 여부를 결정하는 데 사용 될 수 있는 센서로부터 입력 데이터의 피처들을 검출하는 피처 추출기를 포함할 수 있다. 일부 양태들에서, 상태 변화 검출 블록 은 또한 상태 변화가 발생했는지 여부에 대한 추론을 생성하기 위해 분류기를 포함 할 수도 있다. 예를 들어, 하나의 구현에서, 상태 변화 검출 블록 은 입력 데이터 스트림 (예를 들어, 오디오 또는 비디오 스트림을 나타내는 데이터) 을 수신할 수도 있고 데이터 스트림의 상태가 변화되었는 지 여부의 예측을 결정할 수도 있는 이진 분류기를 포함할 수도 있다. 일부 양태들에서, 상태 변화 검출 블록 은 데이터 스트림 내의 데이터의 세그먼트 길이에 기초하여 상태 변화를 검출할 수 있다. 예를 들어, 카메라로부터의 각각의 입력은 단일 데이터 포인트일 수도 있는 반면, 관성 측정 유닛 (IMU) 으로부터의 입력은 데이터의 세그먼트일 수도 있다. 이와 같이, 상태 변화 검출 블록 은 미리 정의된 타입의 입력 디바이스로부터 데이터가 수신되고, 정의된 양의 데이터가 연속적으로 수신 될 때, 상태 변화를 검출할 수도 있다. 추가적으로, 오프라인 통계 분석은 상이한 애플리케이션들에 대해 상태 변화가 발생했는지 여부를 결정하기 위 한 파라미터 구성들을 결정하기 위해 수행될 수도 있다. 예를 들어, 일부 양태들에서, 상태 변화 파라미터 구성들 (예를 들어, 유사도 스코어 메트릭) 은 애플리케이션에 기초하여 학습될 수도 있다. 다른 예에서, 상태 변화 파라미터들은 버퍼 구현에 기초하여 또는 CNN 의 아키텍처 (예를 들어, CNN, CNN + 장기-단기 메모리 (CNN+LSTM), 주의 모델, 또는 다른 신경망 아키텍처) 또는 트레이닝 데이터세트에 기초하여 결정될 수 있다. 차이가 임계치 (예를 들어, 상태 변화 임계치) 미만이면, 상태 변화가 검출될 수도 있다. 이와 마찬가지로, 유사도 메트릭이 사용되는 경우, 유사도 메트릭이 임계값 보다 크면 (연속적인 데이터 포인트들이 더 높은 유사 도 정도를 가짐을 나타내면), 상태 변화가 검출되지 않을 수 있다. 상태 변화가 검출되지 않으면, CNN 또는 분류기 (예를 들어, 512, 514 또는 516) 는 슬립 또는 저전력 상태로 유지될 수 있다. 한편, 차이가 임계치보다 크면, 상태 변화가 검출될 수도 있다. 이와 마찬가지로, 유사도 메트릭이 사용되 는 경우, 유사도 메트릭이 임계값 미만이면 (연속적인 데이터 포인트들이 더 낮은 유사도 정도를 가짐을 나타내 면), 상태 변화가 검출될 수도 있다. 상태 변화가 검출되면, CNN 또는 분류기 (예를 들어, 512, 514 또는 516) 는 슬립 상태로부터 웨이크 업하여 입력의 피처들을 각각 추출하거나 입력 데이터 (예를 들어, 연속 적인 데이터 포인트들의 나중에 수신된 데이터) 에 대한 분류를 계산할 수 있다. 일부 양태들에서, 시스템 은 분류기 (예를 들어, 512, 514, 또는 516) 에 대한 주기적 웨이크 업들을 추 가로 구현할 수 있다. 즉, 시스템 은 상태 변화 없이 매 N번째 데이터 입력마다 분류기를 한 번 웨이 크 업하도록 추가로 구성될 수 있다. 하나의 동작 예에서, 시스템 은 저전력 버드워칭 디바이스로서 구성될 수 있다. 버드 워칭 디바이스 는 카메라 센서 (예를 들어, 스마트폰 의 카메라) 로부터 데이터를 수신할 수 있다. 버드 워치 디바 이스는 피처 추출기 (예를 들어, CNN ) 및 분류기 (예를 들어, 512, 514 또는 516) 로 구성될 수 있으며, 이는 카메라 센서로부터의 스트리밍 데이터의 프레임 내에서 관찰되는 버드의 유형을 분류하도록 구성될 수 있 다. 이 예에서, 버드 워칭 디바이스는 카메라 센서에 의해 제공되는 순차적인 프레임들이 이동 중인 오브젝 트를 포함하는지 여부를 검출할 수 있는 상태 변화 탐지 블록 으로 구성될 수 있다. 모션이 있다면 (예를 들어, 오브젝트가 공중에서 이동중에 있음), 상태 변화 검출 블록 은 이동 중인 오브젝트를 분류하 기 위해 피처 추출기 및 분류기를 웨이크 업하기 위한 신호 또는 다른 표시를 생성할 수 있다. 다른 예에서, 새와 같은 소리가 관찰될 때, 상태 변화 검출 블록 은 대응하는 비디오의 프레임에 새가 존재하 는지 여부를 결정하기 위해 피처 추출기 (예를 들어, CNN) 및 분류기 (예를 들어, 512, 514 또는 516) 를 웨이크업할 수 있다. 그렇지 않으면, 상태 변화 검출 블록 은 피처 추출기 및 분류기 (예를 들어, CNN ) 및 분류기 (예를 들어, 512, 514 또는 516) 가 슬립 상태를 유지하도록 제어할 수 있다. 도 6a 및 도 6b 는 본 개시의 양태들에 따라 상태 변화 검출 블록 의 일 예의 구현의 기능들을 예시하는 다이어그램들이다. 도 6a 를 참조하면, 상태 변화 검출 블록 은, 예를 들어, 자동차 (602a), 안경 (602b), 마이크로폰 (602c), 셀룰러 디바이스 (602d), 카메라 (602e) 또는 스마트 워치 (602f) 에 통합될 수 있는 IoT 디바이스들 또는 다른 센서들과 같은 하나 이상의 소스들로부터 스트리밍 순차적 입력 데이터를 수신 할 수 있다. 일부 양태들에서, 상태 변화 검출 블록 은 센서 (예를 들어, 카메라 (602e)) 와 통합될 수 있다. 상태 변화 검출 블록 은 입력 데이터 스트림에 변화 (예를 들어, 오디오 스트림의 스피커의 변화, 비디오 에서 관찰되는 새의 유형의 변화, 또는 입력 디바이스의 변화) 가 있었는지 여부를 결정할 수 있다. 상태 변화 검출 블록 은 연속적인 데이터 포인트들에 대한 유사도 스코어 메트릭을 계산할 수 있다. 유사 도 스코어 메트릭은, 예를 들어, 피크 신호-대-잡음비 (PSNR), 구조적 유사도 (SSIM), 코사인 유사도 등에 기초 하여 결정될 수 있다. 유사도 스코어 메트릭은 미리 정의된 임계 값에 비교될 수도 있다. 유사도 스코 어 메트릭이 미리 정의된 임계치보다 크면, 상태 변화 검출 블록 은 상태 (예를 들어, 클래스) 가 변경되 지 않았다고 결정할 수 있다. 즉, 상태 변화 검출 블록 은 제 1 입력의 상태와 다음 후속하는 입력의 상태가 동일하다고 결정할 수 있다. 이와 같이, 상태 변화 검출 블록 은 상태 변화가 검출되지 않은 것으로 결정할 수 있다. 이와 반대로, 유사도 스코어 메트릭이 미리 정의된 임계치미만이면, 상태 변화 검출 블록 은 상태가 변경 되었다고 결정할 수 있다. 즉, 상태 변화 검출 블록 은 제 1 입력의 상태와 다음 후속하는 입력의 상 태가 상이하다고 결정할 수 있다. 이와 같이, 상태 변화 검출 블록 은 상태 변화가 검출되지 않은 것으로 결정할 수 있다. 상태 변화 검출 블록 은 상태 검출 (또는 비-검출) 의 표시를 피처 추출기 (예 를 들어, 도 5 의 CNN ) 또는 분류기 (예를 들어, 도 5 의 512, 514 또는 516) 에 공급할 수 있다. 표시는 분류기가 (예를 들어, 상태 변화가 검출되지 않을 때) 슬립 상태에 남아 있을지 또는 (예를 들어, 상태 변화가 검출될 때) 수신된 입력에 기초하여 분류 결과들의 계산을 웨이크 업 및 재개할지를 표시하기 위한 제어 신호로서 기능할 수 있다. 일부 양태들에서, 상태 변화 검출 블록 은 이진 분류기 (도시 생략) 를 포함할 수 있다. 이진 분류기 는 유사도 스코어 메트릭에 기초하여 상태 또는 클래스 변화를 검출 또는 예측하도록 트레이닝될 수 있다. 일부 양태들에서, 이진 분류기는 최적의 상태 변화 임계값을 결정하기 위해 오프라인으로 트레이닝될 수 있다. 일부 양태들에서, 상태 변화 검출 블록 은 또한 간헐적 (예를 들어, 주기적) 웨이크 업 표시를 제공할 수 있다. 예를 들어, 상태 변화가 미리 정의된 시간 기간 동안 검출되지 않았다면, 상태 변화 검출 블록 은 수신된 입력을 분류하기 위해 분류기를 웨이크 업하기 위한 신호 또는 상태 변화 검출기에 피드백을 제공하기 위한 시간 기간을 공급하고/하거나 피처 추출기 및/또는 분류기를 미세-튜닝할 수 있다. 도 6b 를 참조하면, 상태 변화 검출 블록 (530, 도 6a 에 도시됨) 에서 검출된 상태 변화는 분류기 에 공 급된다. 상태 변화 검출 블록 이 상태 변화가 발생했음을 나타내면, 분류기 (예를 들어, 도 5 의 DNN ) 는 연속하는 데이터 포인트들에 대한 분류를 계산하기 위해 웨이크 업할 수 있다. 일부 양태 들에서, 미리 정의된 기간 N 이 상태 변화 없이 경과하면, 분류기 는 웨이크 업하여 가장 최근에 수신된 입력 데이터 포인트에 대한 분류를 계산할 수 있다. 한편, 상태 변화 검출 블록 이 상태 변화가 검출되지 않았음을 나타내면, 분류기 (예를 들어, DNN ) 는 슬립 상태를 유지할 수 있다. 가장 최근에 수신된 데이터 포인트 (예를 들어, 후속 데이터 포인 트) 에 대한 분류 결과를 계산하기 보다는, 그러한 데이터에 대한 분류 결과는 이전 데이터 포인트에 대한 분류 결과와 동일하게 설정될 수 있다. 이와 같이, 분류 결과의 중복 계산 (예를 들어, 동일한 분류 결과를 생성 할 가능성이 있는 계산) 이 감소될 수 있다. 도 7 은 본 개시의 양태들에 따른, 에너지 효율 분류를 위한 방법 을 예시한다. 도 7 에 도시된 바와 같이, 블록 에서, 하나 이상의 센서들로부터의 입력 데이터 스트림이 제 1 회로를 통해 수신된다. 도 6a 를 참조하여 설명된 바와 같이, 상태 변화 검출 블록 은, 예를 들어, 자동차 (602a), 안경 (602b), 마 이크로폰 (602c), 셀룰러 디바이스 (602d), 카메라 (602e) 또는 워치 (602f) 에 통합될 수 있는 IoT 디바이스들 또는 다른 센서들과 같은 하나 이상의 소스들로부터 스트리밍 순차적 입력 데이터를 수신할 수 있다. 블록 에서, 데이터 스트림의 제 1 입력과 데이터 스트림의 제 2 입력 사이의 상태 변화는 제 2 회로가 휴 면기인 동안 제 1 회로를 통하여 검출된다. 제 2 입력은 제 1 입력에 대한 다음의 후속하는 입력이다. 도 6a 를 참조하여 설명된 바와 같이, 상태 변화 검출 블록 은 연속적인 데이터 포인트들에 대한 유사도 스코어 메트릭을 계산할 수 있다. 유사도 스코어는 유사도 스코어에 기초하여 상태 변화가 검출되는지 여부 를 검출하도록 트레이닝된 이진 분류기에 공급될 수도 있다. 일부 양태들에서, 유사도 메트릭은 피크 신호- 대-잡음비, 구조적 유사도, 또는 코사인 유사도일 수 있다. 유사도 스코어는 상태 변화가 발생했는지 여부 를 결정하기 위해 미리 정의된 임계치와 비교될 수도 있다. 블록 에서, 제 2 회로는 상태 변화에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 1 회로를 통 하여 트리거된다. 도 6b 를 참조하여 설명된 바와 같이, 유사도 스코어 메트릭이 미리 정의된 임계치미만이 면, 상태 변화 검출 블록 은 상태가 변경되었다고 결정할 수 있다. 즉, 상태 변화 검출 블록 은 제 1 입력의 상태와 다음 후속하는 입력의 상태가 상이하다고 결정할 수도 있다. 이와 같이, 상태 변화 검출 블록 은 상태 변화가 검출되지 않은 것으로 결정할 수도 있다. 상태 변화 검출 블록 은 상태 검출 (또는 비-검출) 의 표시를 피처 추출기 (예를 들어, 도 5 의 CNN ) 또는 분류기 (예를 들어, 도 5 의 512, 514 또는 516) 에 공급할 수 있다. 표시는 분류기가 (예를 들어, 상태 변화가 검출되지 않을 때) 슬립 상태에 남아 있을지 또는 (예를 들어, 상태 변화가 검출될 때) 수신된 입력에 기초하여 분류 결과들의 계 산을 웨이크 업 및 재개할지를 표시하기 위한 제어 신호로서 기능할 수 있다. 구현 예들이 다음의 넘버링된 항들에서 기술된다: 항 1. 방법은: 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하는 단계; 제 1 회로 를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 단계로서, 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력인, 검출하는 단계; 및 제 1 회로를 통하여, 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하는 단계를 포함한다. 항 2. 항 1 의 방법에서, 분류는 제 1 회로를 통하여 검출된 상태와 상이하다. 항 3. 항 1 또는 2 의 방법은, 제 1 회로를 통하여, 입력 데이터 스트림의 적어도 제 2 입력의 피처들의 세트를 추출하도록 제 2 회로를 트리거하는 단계를 더 포함한다. 항 4. 항 1-3 의 어느 것의 방법은, 제 1 회로를 통하여, 제 1 입력과 제 2 입력 사이의 유사도 스코어를 계산 하는 단계를 더 포함하고, 상태 변화는 유사도 스코어에 기초하여 검출된다. 항 5. 항 1-4 의 어느 것의 방법은, 제 1 회로를 통하여, 유사도 스코어를 미리 정의된 임계값과 비교하는 단계; 및 유사도 스코어가 미리 정의된 임계치 미만인 것에 응답하여 상태 변화가 발생하였다고 검출하는 단계 를 더 포함한다.항 6. 항 1-5 의 어느 것의 방법에서, 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도 로 이루어진 그룹으로부터 선택된 메트릭에 기초한다. 항 7. 항 1-6 의 어느 것의 방법은, 제 1 회로를 통하여, 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하는 단계를 더 포함한다. 항 8. 항 1-7 의 어느 하나의 방법에서, 제 1 회로를 통하여, 휴면 상태로 복귀하도록 제 2 회로를 트리거하는 단계, 및 입력 데이터 스트림의 적어도 하나의 후속하는 입력에 대한 후속하는 분류를 입력 데이터 스트림의 선 행하는 입력에 대한 이전에 계산된 분류와 동일하도록 설정하는 단계를 더 포함한다. 항 9. 장치는: 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하기 위한 입력 디바이스; 제 2 회로가 휴 면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화 가 발생하였는지를 검출하는 상태 변화 검출 디바이스로서, 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대 한 다음 후속하는 입력인, 상태 변화 검출 디바이스; 및 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트 림의 분류를 수행하도록 제 2 회로를 트리거하는 제어 디바이스를 포함한다. 항 10. 항 9 의 장치에서, 제 2 회로는 피처 추출기를 포함하고, 제어 디바이스는 피처 추출기를 트리거하여 입 력 데이터 스트림의 적어도 제 2 입력의 피처들의 세트를 추출한다. 항 11. 항 9-10 의 어느 것의 장치에서, 상태 변화 검출 디바이스는 제 1 입력과 제 2 입력 사이의 유사도 스코 어를 계산하고, 상태 변화는 유사도 스코어에 기초하여 검출된다. 항 12. 항 9-11 의 어느 것의 장치는, 상태 변화 검출 디바이스는 유사도 스코어를 미리 정의된 임계치와 비교 하고, 유사도 스코어가 미리 정의된 임계치 미만인 것에 응답하여 상태 변화가 발생하였음을 검출한다. 항 13. 항 9-12 의 어느 것의 장치에서, 제어 디바이스는 제 2 입력 및 제 3 입력에 대하여 계산된 제 2 유사도 스코어가 미리 정의된 임계치를 초과하는 것에 응답하여 휴면 상태로 복귀하도록 제 2 회로를 트리거한다. 항 14. 항 9-13 의 어느 것의 장치에서, 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사 도로 이루어진 그룹으로부터 선택된 메트릭에 기초하여 계산된다. 항 15. 항 9-14 의 어느 것의 장치에서, 제어 디바이스는 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거한다. 항 16. 항 9-15 의 어느 것의 장치에서, 상태 변화 검출 디바이스는 이진 분류기를 포함한다. 항 17. 장치는: 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하기 위한 수단; 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력과 입력 데이터 스트림 의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하기 위한 수단으로서, 제 2 입력은 입력 데이터 스트 림의 제 1 입력에 대한 다음 후속하는 입력인, 검출하기 위한 수단; 및 제 1 회로를 통하여, 상태 변화를 검출 하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하기 위한 수단을 포함한다. 항 18. 항 17 의 장치는, 제 1 회로를 통하여, 입력 데이터 스트림의 적어도 제 2 입력의 피처들의 세트를 추출 하도록 제 2 회로를 트리거하기 위한 수단을 더 포함한다. 항 19. 항 17-18 의 어느 것의 장치는, 제 1 회로를 통하여, 제 1 입력과 제 2 입력 사이의 유사도 스코어를 계 산하기 위한 수단을 더 포함하고, 상태 변화는 유사도 스코어에 기초하여 검출된다. 항 20. 항 17-19 의 어느 것의 장치는, 제 1 회로를 통하여, 유사도 스코어를 미리 정의된 임계값과 비교하기 위한 수단; 및 유사도 스코어가 미리 정의된 임계치 미만인 것에 응답하여 상태 변화가 발생하였다고 검출하기 위한 수단을 더 포함한다. 항 21. 항 17-20 의 어느 것의 장치에서, 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유 사도로 이루어진 그룹으로부터 선택된 메트릭에 기초한다. 항 22. 항 17-21 의 어느 것의 장치는, 제 1 회로를 통하여, 상태 변화가 검출됨이 없이 미리 정의된 시간 기간 이 경과하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하기 위한 수단을 더 포함한다. 항 23. 항 17-22 의 어느 것의 장치는, 제 1 회로를 통해, 휴면 상태로 복귀하도록 제 2 회로를 트리거하기 위 한 수단을 더 포함한다. 항 24. 프로그램 코드가 인코딩된 비일시적인 컴퓨터 판독가능 매체를 포함하고, 프로그램 코드는 프로세서에 의해 실행되고, 프로그램 코드는: 제 1 회로를 통하여, 하나 이상의 센서들로부터 입력 데이터 스트림을 수신하 는 프로그램 코드; 제 1 회로를 통하여, 제 2 회로가 휴면 상태에 있는 동안, 입력 데이터 스트림의 제 1 입력 과 입력 데이터 스트림의 제 2 입력 사이에서 상태 변화가 발생하였는지를 검출하는 프로그램 코드로서, 제 2 입력은 입력 데이터 스트림의 제 1 입력에 대한 다음 후속하는 입력인, 검출하는 프로그램 코드; 및 제 1 회로 를 통하여, 상태 변화를 검출하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거 하는 프로그램 코드를 포함한다. 항 25. 항 24 의 비일시적 컴퓨터 판독가능 매체는, 제 1 회로를 통하여, 입력 데이터 스트림의 적어도 제 2 입 력의 피처들의 세트를 추출하도록 제 2 회로를 트리거하는 프로그램 코드를 더 포함한다. 항 26. 항 24-25 의 비일시적 컴퓨터 판독가능 매체는, 제 1 회로를 통하여, 제 1 입력과 제 2 입력 사이의 유 사도 스코어를 계산하는 프로그램 코드를 더 포함하고, 상태 변화는 유사도 스코어에 기초하여 검출된다. 항 27. 항 24-26 의 비일시적 컴퓨터 판독가능 매체는, 제 1 회로를 통하여, 유사도 스코어를 미리 정의된 임계 값과 비교하는 프로그램 코드; 및 유사도 스코어가 미리 정의된 임계치 미만인 것에 응답하여 상태 변화가 발생 하였다고 검출하는 프로그램 코드를 더 포함한다. 항 28. 항 24-27 의 비일시적 컴퓨터 판독가능 매체는, 유사도 스코어는 피크 신호 대 잡음비, 구조적 유사도, 및 코사인 유사도로 이루어진 그룹으로부터 선택된 메트릭에 기초한다. 항 29. 항 24-28 의 비일시적 컴퓨터 판독가능 매체는, 제 1 회로를 통하여, 상태 변화가 검출됨이 없이 미리 정의된 시간 기간이 경과하는 것에 응답하여 입력 데이터 스트림의 분류를 수행하도록 제 2 회로를 트리거하는 프로그램 코드를 더 포함한다. 항 30. 항 24-29 의 비일시적 컴퓨터 판독가능 매체는, 제 1 회로를 통하여, 휴면 상태로 복귀하도록 제 2 회로 를 트리거하는 프로그램 코드를 더 포함한다. 하나의 양태에서, 수신 수단, 검출 수단, 트리거링 수단, 컴퓨팅 수단 비교 수단 및/또는 복귀 수단은 인용된 기능들을 수행하도록 구성된 CPU , CPU 와 연관된 프로그램 메모리, 전용 메모리 블록 , 완전 히 연결된 계층들 , NPU 및/또는 라우팅 접속 프로세싱 유닛 일 수 있다. 다른 구성에서, 상술한 수단들은 상술한 수단들에 의해 기재된 기능들을 수행하도록 구성된 임의의 모듈 또는 임의의 장치일 수 도 있다. 위에 설명된 방법들의 다양한 동작들은 대응하는 기능들을 수행 가능한 임의의 적합한 수단들에 의해 수행될 수 도 있다. 그 수단은 회로, 주문형 집적회로 (ASIC), 또는 프로세서를 포함하지만 이에 한정되지 않는 다양 한 하드웨어 및/또는 소프트웨어 컴포넌트(들) 및/또는 모듈(들)을 포함할 수도 있다. 일반적으로, 도면들 에 예시된 동작들이 존재하는 경우, 그 동작들은 유사한 넘버링을 갖는 대응하는 상대의 수단-플러스-기능 컴포 넌트들을 가질 수도 있다. 본 명세서에서 사용된 바와 같이, 용어 \"결정하는 것\"은 광범위하게 다양한 액션들을 포괄한다. 예를 들어, \"결정하는 것\" 은 계산하는 것, 컴퓨팅하는 것, 프로세싱하는 것, 도출하는 것, 조사하는 것, 룩업하는 것 (예 를 들어, 테이블, 데이터베이스 또는 다른 데이터 구조에서 룩업하는 것), 확인하는 것 등을 포함할 수도 있다. 부가적으로, \"결정하는 것\" 은 수신하는 것 (예를 들어, 정보를 수신하는 것), 액세스하는 것 (예를 들어, 메모리 내 데이터에 액세스하는 것) 등을 포함할 수도 있다. 더욱이, \"결정하는 것\" 은 해결하는 것, 선택 하는 것, 선출하는 것, 확립하는 것 등을 포함할 수도 있다. 본 명세서에서 사용된 바와 같이, 항목들의 리스트 \"중 적어도 하나\"를 지칭하는 어구는, 단일의 멤버들을 포함 하는 그러한 항목들의 임의의 조합을 지칭한다. 일 예로서, \"a, b, 또는 c 중 적어도 하나\"는: a, b, c, a- b, a-c, b-c, 및 a-b-c를 커버하도록 의도된다. 본 개시와 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, 디지털 신호 프 로세서 (DSP), 주문형 집적회로 (ASIC), 필드 프로그래밍가능 게이트 어레이 신호 (FPGA) 또는 다른 프로그래밍 가능 로직 디바이스 (PLD), 이산 게이트 또는 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본 명세서에서 설명된 기능들을 수행하도록 설계된 이들의 임의의 조합으로 구현 또는 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수도 있지만, 대안으로, 프로세서는 임의의 상용 프로세서, 제어기, 마이크로제어기, 또는상태 머신일 수도 있다. 프로세서는 또한 컴퓨팅 디바이스들의 조합, 예를 들어 DSP 및 마이크로프로세서의 조합, 복수의 마이크로프로세서들, DSP 코어와 결합된 하나 이상의 마이크로프로세서들, 또는 임의의 다른 이러 한 구성으로서 구현될 수도 있다. 본 개시와 관련하여 설명된 방법 또는 알고리즘의 단계들은 하드웨어에서, 프로세서에 의해 실행되는 소프트웨 어 모듈에서, 또는 이들 양자의 조합에서 직접 구현될 수도 있다. 소프트웨어 모듈은, 당업계에 공지된 임 의의 형태의 저장 매체에 상주할 수도 있다. 사용될 수도 있는 저장 매체들의 일부 예들은 랜덤 액세스 메 모리 (RAM), 판독 전용 메모리 (ROM), 플래시 메모리, 소거가능한 프로그래밍가능 판독 전용 메모리 (EPROM), 전기적으로 소거가능한 프로그래밍가능 판독 전용 메모리 (EEPROM), 레지스터들, 하드 디스크, 착탈가능 디스크, CD-ROM 등을 포함한다. 소프트웨어 모듈은 단일의 명령, 또는 다수의 명령들을 포함할 수도 있고, 다수의 저장 매체들에 걸쳐, 그리고 상이한 프로그램들 사이에서, 여러 상이한 코드 세그먼트들에 분산될 수도 있다. 저장 매체는, 프로세서가 저장 매체로부터 정보를 판독할 수 있고 저장 매체에 정보를 기입할 수 있 도록 프로세서에 커플링될 수도 있다. 대안으로서, 저장 매체는 프로세서에 통합될 수도 있다. 본원에 개시된 방법들은 설명된 방법을 달성하기 위한 하나 이상의 단계들 또는 동작들을 포함한다. 방법 단계들 및/또는 동작들은 청구항들의 범위로부터 이탈함이 없이 서로 상호교환될 수도 있다. 즉, 단계들 또 는 동작들의 특정 순서가 명시되지 않으면, 특정 단계들 및/또는 동작들의 순서 및/또는 사용은 청구항들의 범 위로부터 벗어나지 않으면서 수정될 수도 있다. 설명된 기능들은 하드웨어, 소프트웨어, 펌웨어, 또는 이들의 임의의 조합에서 구현될 수도 있다. 하드웨어 에서 구현되면, 예시적인 하드웨어 구성은 디바이스에 프로세싱 시스템을 포함할 수도 있다. 프로세싱 시스 템은 버스 아키텍처로 구현될 수도 있다. 버스는 전체 설계 제약들 및 프로세싱 시스템의 특정 애플리케이 션에 따라 임의의 수의 상호접속 버스들 및 브리지들을 포함할 수도 있다. 버스는 프로세서, 머신 판독가능 매체들, 및 버스 인터페이스를 포함하는 다양한 회로들을 함께 링크할 수도 있다. 버스 인터페이스는 특히, 네트워크 어댑터를 버스를 통해 프로세싱 시스템에 접속하는데 사용될 수도 있다. 네트워크 어댑터는 신호 프로세싱 기능들을 구현하는데 사용될 수도 있다. 특정 양태들에서, 사용자 인터페이스 (예를 들어, 키패드, 디스플레이, 마우스, 조이스틱 등) 가 또한 버스에 접속될 수도 있다. 버스는 또한, 당업계에 잘 알려져 있고, 따라서 더 이상 설명되지 않을 타이밍 소스들, 주변기기들, 전압 레귤레이터들, 전력 관리 회로들 등과 같은 다양한 다른 회로들을 링크할 수도 있다. 프로세서는 버스를 관리하는 것, 및 머신 판독가능 매체들 상에 저장된 소프트웨어의 실행을 포함한 일반 프로 세싱을 책임질 수도 있다. 프로세서는 하나 이상의 범용 및/또는 특수목적 프로세서로 구현될 수도 있다. 예들은 마이크로프로세서들, 마이크로 제어기들, DSP 프로세서들, 및 소프트웨어를 실행할 수 있는 다른 회 로를 포함한다. 소프트웨어는 소프트웨어, 펌웨어, 미들웨어, 마이크로코드, 하드웨어 기술 언어, 또는 다 른 것으로 지칭되든, 명령들, 데이터, 또는 이들의 임의의 조합으로 광범위하게 해석되어야 한다. 머신 판 독가능 매체들은, 예로서, 랜덤 액세스 메모리 (RAM), 플래시 메모리, 판독 전용 메모리 (ROM), 프로그래밍가능 판독 전용 메모리 (PROM), 소거가능한 프로그래밍가능 판독 전용 메모리 (EPROM), 전기적으로 소거가능한 프로 그래밍가능 판독 전용 메모리 (EEPROM), 레지스터들, 자기 디스크들, 광학 디스크들, 하드 드라이브들, 또는 임 의의 다른 적합한 저장 매체, 또는 이들의 임의의 조합을 포함할 수도 있다. 머신 판독가능 매체들은 컴퓨 터 프로그램 제품에 담길 수도 있다. 컴퓨터 프로그램 제품은 패키징 재료들을 포함할 수도 있다. 하드웨어 구현에 있어서, 머신-판독가능 매체들은 프로세서와는 분리된 프로세싱 시스템의 부분일 수도 있다. 하지만, 당업자들이 용이하게 인식할 바와 같이, 머신-판독가능 매체들 또는 그 임의의 부분은 프로세싱 시 스템 외부에 있을 수도 있다. 예로서, 머신-판독가능 매체들은 송신 라인, 데이터에 의해 변조된 캐리어파, 및/또는 디바이스로부터 분리된 컴퓨터 제품을 포함할 수도 있으며, 이들 모두는 버스 인터페이스를 통해 프로 세서에 의해 액세스될 수도 있다. 대안적으로 또는 추가적으로, 머신 판독가능 매체들, 또는 그의 임의의 부분은, 캐시 및/또는 일반 레지스터 파일들의 경우와 같이 프로세서에 통합될 수도 있다. 논의된 다양한 컴포넌트들이 로컬 컴포넌트와 같이 특정 위치를 갖는 것으로서 설명될 수도 있지만, 이들은 또한 특정 컴포넌 트들이 분산 컴퓨팅 시스템의 부분으로서 구성되는 것과 같이 다양한 방식들로 구성될 수도 있다. 프로세싱 시스템은 프로세서 기능을 제공하는 하나 이상의 마이크로프로세서들 및 머신 판독가능 매체들의 적어 도 일부를 제공하는 외부 메모리를 갖는 범용 프로세싱 시스템으로서 구성될 수도 있고, 이들 모두는 외부 버스 아키텍처를 통해 다른 지원 회로와 함께 링크된다. 대안적으로, 프로세싱 시스템은 본 명세서에서 설명된 뉴럴 시스템들의 모델들 및 뉴런 모델들을 구현하기 위한 하나 이상의 뉴로모픽 프로세서들을 포함할 수도있다. 다른 대안으로서, 프로세싱 시스템은, 단일 칩으로 집적된 프로세서, 버스 인터페이스, 사용자 인터 페이스, 지원 회로부, 및 머신-판독가능 매체들의 적어도 일부를 갖는 주문형 집적회로 (ASIC) 로, 또는 하나 이상의 필드 프로그래밍가능 게이트 어레이들 (FPGA들), 프로그래밍가능 로직 디바이스들 (PLD들), 제어기들, 상태 머신들, 게이트형 로직, 이산 하드웨어 컴포넌트들, 또는 임의의 다른 적합한 회로부, 또는 본 개시 전반 에 걸쳐 설명된 다양한 기능을 수행할 수 있는 회로들의 임의의 조합으로 구현될 수도 있다. 당업자는, 전 체 시스템에 부과된 전체 설계 제약들 및 특정 애플리케이션에 따라 프로세싱 시스템에 대한 설명된 기능성을 구현하는 최선의 방법을 인식할 것이다. 머신 판독가능 매체들은 다수의 소프트웨어 모듈들을 포함할 수도 있다. 소프트웨어 모듈들은, 프로세서에 의해 실행될 경우, 프로세싱 시스템으로 하여금 다양한 기능들을 수행하게 하는 명령들을 포함한다. 소프트 웨어 모듈들은 송신 모듈 및 수신 모듈을 포함할 수도 있다. 각각의 소프트웨어 모듈은 단일의 저장 디바이 스에 상주할 수도 있거나 또는 다수의 저장 디바이스들에 걸쳐 분산될 수도 있다. 예로서, 소프트웨어 모듈 은 트리거링 이벤트가 발생할 때 하드 드라이브로부터 RAM으로 로딩될 수도 있다. 소프트웨어 모듈의 실행 동안, 프로세서는 액세스 속도를 증가시키기 위해 명령들의 일부를 캐시로 로딩할 수도 있다. 하나 이상의 캐시 라인들은 그 후 프로세서에 의한 실행을 위해 일반 레지스터 파일로 로딩될 수도 있다. 아래에서 소프 트웨어 모듈의 기능성을 참조하는 경우, 그러한 기능성은 그 소프트웨어 모듈로부터의 명령들을 실행할 때 프로 세서에 의해 구현됨이 이해될 것이다. 더욱이, 본 개시의 양태들은 프로세서, 컴퓨터, 머신, 또는 그러한 양태들을 구현하는 다른 시스템의 기능에 대한 개선을 발생시킴이 인식되어야 한다. 소프트웨어에서 구현되면, 기능들은 컴퓨터 판독가능 매체 상에 하나 이상의 명령들 또는 코드로서 저장 또는 송신될 수도 있다. 컴퓨터 판독가능 매체들은 일 장소로부터 다른 장소로의 컴퓨터 프로그램의 전송을 용이 하게 하는 임의의 매체를 포함하는 통신 매체들 및 컴퓨터 저장 매체들 양자 모두를 포함한다. 저장 매체는 컴퓨터에 의해 액세스될 수도 있는 임의의 이용가능한 매체일 수도 있다. 한정이 아닌 예로서, 그러한 컴퓨 터 판독가능 매체들은 RAM, ROM, EEPROM, CD-ROM 또는 다른 광학 디스크 스토리지, 자기 디스크 스토리지 또는 다른 자기 스토리지 디바이스들, 또는 명령들 또는 데이터 구조들의 형태로 원하는 프로그램 코드를 반송 또는 저장하는데 사용될 수 있고 컴퓨터에 의해 액세스될 수 있는 임의의 다른 매체를 포함할 수 있다. 부가적으 로, 임의의 커넥션이 컴퓨터 판독가능 매체로 적절히 명명된다. 예를 들어, 동축 케이블, 광섬유 케이블, 트위스티드 페어, 디지털 가입자 라인 (DSL), 또는 적외선 (IR), 라디오, 및 마이크로파와 같은 무선 기술들을 사용하여 웹사이트, 서버, 또는 다른 원격 소스로부터 소프트웨어가 송신되면, 동축 케이블, 광섬유 케이블, 트 위스티드 페어, DSL, 또는 적외선, 라디오, 및 마이크로파와 같은 무선 기술들이 매체의 정의에 포함된다. 디스크(disk) 또는 디스크(disc)는, 본 명세서에서 사용된 바와 같이, 콤팩트 디스크(CD), 레이저 디스크, 광학 디스크, DVD(digital versatile disc), 플로피 디스크, 및 블루-레이® 디스크를 포함하며, 여기서 디스크 (disk)들은 보통 데이터를 자기적으로 재생하는 한편, 디스크(disc)들은 레이저들로 데이터를 광학적으로 재생 한다. 따라서, 일부 양태들에서, 컴퓨터 판독가능 매체들은 비일시적 컴퓨터 판독가능 매체들 (예를 들어, 유형의 매체들) 을 포함할 수도 있다. 부가적으로, 다른 양태들에 대해, 컴퓨터 판독가능 매체들은 일시적 컴퓨터 판독가능 매체들 (예를 들어, 신호) 을 포함할 수도 있다. 또한, 상기의 조합들은 컴퓨터 판독가능 매체의 범위 내에 포함되어야 한다. 따라서, 소정의 양태들은 본 명세서에 제시된 동작들을 수행하기 위한 컴퓨터 프로그램 제품을 포함할 수도 있 다. 예를 들어, 이러한 컴퓨터 프로그램 제품은 명령들을 저장(및/또는 인코딩)한 컴퓨터 판독가능 매체를 포함할 수도 있으며, 그 명령들은 본 명세서에서 설명된 동작들을 수행하도록 하나 이상의 프로세서들에 의해 실행가능하다. 특정 양태들에 대해, 컴퓨터 프로그램 제품은 패키징 재료를 포함할 수도 있다. 또한, 본 명세서에서 설명된 방법들 및 기법들을 수행하기 위한 모듈들 및/또는 다른 적절한 수단은 적용가능한 경우, 사용자 단말기 및/또는 기지국에 의해 다운로드 및/또는 그렇지 않으면 획득될 수 있음을 인식되어야 한 다. 예를 들어, 그러한 디바이스는 본원에 설명된 방법들을 수행하는 수단의 전달을 가능하게 하기 위해 서 버에 연결될 수도 있다. 대안적으로, 본 명세서에서 설명된 다양한 방법들은 사용자 단말기 및/또는 기지국 이 디바이스에 저장 수단을 커플링 또는 제공 시에 다양한 방법들을 획득할 수 있도록 저장 수단 (예를 들어, RAM, ROM, 물리 저장 매체, 이를 테면 콤팩트 디스크 (CD) 또는 플로피 디스크 등) 을 통해 제공될 수 있다. 더욱이, 본 명세서에서 설명된 방법들 및 기법들을 제공하기 위한 임의의 다른 적합한 기법이 활용될 수 있다. 청구항들이 위에서 예시된 정확한 구성 및 컴포넌트들로 제한되지 않음이 이해되어야 한다. 다양한 수정들, 변경들 및 변형들이, 청구항들의 범위로부터 일탈함 없이 위에서 설명된 방법들 및 장치의 배열, 동작 및 상세들로 이루어질 수도 있다."}
{"patent_id": "10-2023-7031912", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시의 피처들, 성질, 및 이점들은 도면들과 함께 취해질 경우에 하기에 기재된 상세한 설명으로부터 더 명 백하게 될 것이며, 도면들에 있어서 동일한 참조 부호들은 전반에 걸쳐 대응하게 식별한다. 도 1 은 본 개시의 특정 양태들에 따라 범용 프로세서를 포함하는, SOC (system-on-a-chip) 을 사용한 신경망의 일 예의 구현을 예시한다. 도 2a, 도 2b 및 도 2c 는 본 개시의 양태들에 따른 신경망을 예시하는 다이어그램들이다. 도 2d 는 본 개시의 양태들에 따른 예시적인 딥 컨볼루션 네트워크 (DCN) 를 도시하는 다이어그램이다. 도 3 은 본 개시의 양태들에 따른 예시적인 DCN (deep convolutional network) 을 도시하는 블록 다이어그램이 다. 도 4 는 본 개시의 양태들에 따른, AI (artificial intelligence) 기능들을 모듈화할 수도 있는 예시적인 소프 트웨어 아키텍처를 예시한 블록 다이어그램이다. 도 5 는 본 개시의 양태들에 따른 일 예의 상태 변화 검출 시스템을 예시하는 블록 다이어그램이다. 도 6a 및 도 6b는 본 개시의 양태들에 따라 상태 변화 검출 블록의 일 예의 기능들을 예시하는 다이어그램들이 다. 도 7 은 본 개시의 양태들에 따른 인공 신경망을 동작시키는 방법을 예시한다."}
