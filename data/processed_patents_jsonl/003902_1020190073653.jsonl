{"patent_id": "10-2019-0073653", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0145113", "출원번호": "10-2019-0073653", "발명의 명칭": "블록체인을 이용한 게임 아이템 분배 방법", "출원인": "넷마블 주식회사", "발명자": "신평호"}}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서,상기 컴퓨터 프로그램은 게임 서버로 하여금 이하의 단계들을 수행하게 하기 위한 명령들을 포함하며, 상기 단계들은:협동 게임이 종료된 후, 상기 협동 게임에 관련된 복수의 유저 각각의 상기 협동 게임에 대한 기여도를 포함하는 기여도 트랜잭션을 생성하는 단계;상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가상기 기여도 트랜잭션을 기록하도록 야기하는 단계; 및상기 기여도 트랜잭션에 포함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 협동 게임이 종료된 후, 협동 게임에 관련된 복수의 유저의 상기 협동 게임에 대한 기여도 트랜잭션을 생성하는 단계는,상기 협동 게임이 종료된 후, 상기 복수의 유저 각각의 상기 협동 게임에 대한 수행 결과를 인식하는 단계; 및상기 수행 결과에 기초하여 상기 기여도를 연산하는 단계; 를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가상기 기여도 트랜잭션을 기록하도록 야기하는 단계는,적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성하는 단계; 및상기 기여 블록을 상기 메인 블록체인 네트워크에 포함된 적어도 하나의 노드에 전송함으로써, 상기 복수의 노드가 상기 적어도 하나의 유저와 관련된 기여도 트랜잭션을 기록하도록 야기하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,공개특허 10-2020-0145113-3-상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가상기 기여도 트랜잭션을 기록하도록 야기하는 단계는,적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성하는 단계; 및상기 기여 블록을 서브 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기기여 블록을 기록하도록 야기하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 단계들은:상기 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 상기 게임 서버의 저장부에 저장된메인 블록체인에 연결되는 블록에 기록하는 단계;를 더 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 상기 게임 서버의 저장부에 저장된메인 블록체인에 연결되는 블록에 기록하는 단계는,상기 추첨 시드를 생성하는 단계;상기 추첨 시드의 해시 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 상기 복수의 노드가 합의 알고리즘에 기초하여 상기 추첨 시드의 해시 값을 기록하도록 야기하는 단계;상기 복수의 유저 각각으로부터 협동 게임 내에서 기 설정된 입력을 수신하는 것과 연동하여, 상기 복수의 유저각각과 관련된 복수의 응모 시드를 메인 블록체인에 기록하는 단계; 및상기 추첨 시드의 원본 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 상기 복수의 노드가 합의 알고리즘에 기초하여 상기 추첨 시드의 원본 값을 기록하도록 야기하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 추첨 시드를 생성하는 단계는,기 설정된 방법에 의해 생성된 시드 값을 이용하여 난수를 생성하는 단계; 및상기 난수를 상기 추첨 시드로 결정하는 단계;를 포함하는,공개특허 10-2020-0145113-4-컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6 항에 있어서,상기 기여도 트랜잭션에 포함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는 단계는,상기 메인 블록체인을 검색하여 복수의 유저 각각의 응모 이력을 인식하는 단계;상기 응모 이력 및 상기 기여도에 기초하여 상기 복수의 유저 각각에 대한 응모 가점을 연산하는 단계; 및상기 추첨 시드의 원본 값, 상기 응모 시드 및 상기 응모 가점에 기초하여, 상기 당첨자 결정 데이터를 연산하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 단계들은:상기 당첨자 결정 데이터에 기초하여 당첨자 유저를 결정하는 단계; 및상기 당첨자 유저가 결정된 경우, 상기 당첨자 유저와 관련된 당첨자 응모 이력을 초기화 하는 단계;를 더 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6 항에 있어서,상기 복수의 유저 각각으로부터 협동 게임 내에서 기 설정된 입력을 수신하는 것과 연동하여, 상기 복수의 유저각각과 관련된 복수의 응모 시드를 메인 블록체인에 기록하는 단계는,상기 협동 게임이 종료된 후, 상기 복수의 유저 각각과 관련된 클라이언트 단말로부터 상기 기 설정된 입력과연관된 응모 블록 생성 요청 신호를 수신하는 단계;상기 응모 블록 생성 요청 신호를 수신한 경우, 응모 시드를 포함하는 응모 블록을 생성하는 단계; 및상기 응모 블록을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기응모 블록을 기록하도록 야기하는 단계;를 포함하고,상기 응모 시드는,상기 게임 서버에 의해 생성되거나, 상기 클라이언트 단말로부터 수신되는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,공개특허 10-2020-0145113-5-상기 응모 블록 생성 요청 신호를 수신한 경우, 응모 시드를 포함하는 응모 블록을 생성하는 단계는,상기 기여도 트랜잭션에 포함된 상기 기여도가 기 설정된 조건을 만족하는지 여부를 인식하는 단계; 및상기 기여도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결정하는단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 기 설정된 조건은,상기 기여도가 기 설정된 임계 값을 초과하는 경우 만족되는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항에 있어서,상기 기여도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결정하는단계는,상기 기여도가 상기 기 설정된 조건을 만족하지 못한 경우, 상기 응모 블록을 생성하지 않도록 결정하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11 항에 있어서,상기 기여도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결정하는단계는,상기 기여도가 상기 기 설정된 조건을 만족하는 경우, 상기 응모 블록을 생성하도록 결정하는 단계;를 포함하는,컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0073653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "게임 서버로서,프로세서;저장부; 및통신부;를 포함하고,상기 프로세서는,공개특허 10-2020-0145113-6-협동 게임이 종료된 후, 상기 협동 게임에 관련된 복수의 유저 각각의 상기 협동 게임에 대한 기여도를 포함하는 기여도 트랜잭션을 생성하고, 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기여도 트랜잭션을 기록하도록 야기하고, 상기 기여도 트랜잭션에 포함된상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는,게임 서버."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따른, 컴퓨터 판독가능한 저장매체에 저장된 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은 게임 서버로 하여금 이하의 단계들을 수행하게 하기 위한 명령들을 포함하며, 상기 단계들은: 협동 게임이 종료된 후, 상기 협동 게임에 관련된 복수의 유저 각각의 상기 협동 게임에 대한 기여도를 포함하는 기여 도 트랜잭션을 생성하는 단계; 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기여도 트랜잭션을 기록하도록 야기하는 단계; 및 상기 기여도 트랜잭션에 포 함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는 단계;를 포함할 수 있다."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 블록체인에 관한 것으로서, 구체적으로 블록체인을 이용하여 게임 아이템을 분배하는 것에 관한 것이다."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 정보통신기술의 융합으로 이루어지는 차세대 산업혁명인 4차 산업혁명이 이슈가 되고 있다. 기존의 산업에 서의 자동화는 미리 입력된 프로그램에 따라 수동적으로 동작하는 것을 의미하였으나, 4차 산업혁명에서는 기계 가 능동적으로 상황을 파악하여 동작하는 것을 의미하며, 이러한 4차 산업혁명은 인공지능, 로봇기술 및 생명과 학 등이 주도하고 있다. 이러한 4차 산업혁명의 기술 중 블록체인(Blockchain)은 주요 기술로 주목받고 있다. 블록체인은 공공 거래 장 부로서 보안성을 제공해주는 기술이다. 이러한 블록체인이 주목을 받으며, 블록체인 기반의 암호화 화폐 기술인 비트코인(Bitcoin) 플랫폼과 이더리움(ethereum) 플랫폼 또한 주목을 받고 있다. 비트코인은 블록체인 기술에 의해 거래 기록을 기록할 수 있는 암호화 화폐를 의미하고, 이더리움의 이더 (Ether)는 거래 기술뿐만 아니라 계약서 등의 추가 정보를 기록할 수 있는 암호화 화폐를 의미한다. 특히, 이더 리움은 별도의 정보를 기록할 수 있는 스마트 컨트랙트 기능을 지원하여 더욱 주목받고 있다. 한편, 기존의 온라인 게임에서는 협동 게임의 수행에 의하여 획득되는 게임 아이템을 무작위 적인 방법이나 경 매 형식의 입찰에 의하여 분배하였다. 이러한 방법의 경우 협동 게임에 대한 기여도를 게임 아이템 분배에 반영 할 수 없고, 게임 아이템을 분배 받지 못한 사람이 아이템을 분배받을 수 있도록 조정하는 장치가 없어 동일한 사람이 협동 게임의 수행에 대한 보상을 독점하는 경우가 발생할 가능성이 높았다. 따라서 협동 게임 참여에 대한 게임 유저들의 동기부여에 문제가 발생할 수 있었다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 특허 등록공보 10-1928087호 (특허문헌 0002) 대한민국 특허 등록공보 10-0494660호 (특허문헌 0003) 미국 특허 등록공보 10,127,766호"}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 블록체인을 이용한 게임 아이템 분배 방법을 제공하고자 한다. 본 개시의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과 제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 해결하기 위한 본 개시의 일 실시예에 따라, 컴퓨터 판독가능한 저장매체에 저장된 컴 퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은 게임 서버로 하여금 이하의 단계들을 수행하게 하기 위한 명령들을 포함하며, 상기 단계들은: 협동 게임이 종료된 후, 상기 협동 게임에 관련된 복수의 유저 각각의 상기 협동 게임에 대한 기여도를 포함하는 기여도 트랜잭션을 생성하는 단계; 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기여도 트랜잭션을 기록하도록 야 기하는 단계; 및 상기 기여도 트랜잭션에 포함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는 단계; 를 포함할 수 있다. 또한, 상기 협동 게임이 종료된 후, 협동 게임에 관련된 복수의 유저의 상기 협동 게임에 대한 기여도 트랜잭션 을 생성하는 단계는, 상기 협동 게임이 종료된 후, 상기 복수의 유저 각각의 상기 협동 게임에 대한 수행 결과 를 인식하는 단계; 및 상기 수행 결과에 기초하여 상기 기여도를 연산하는 단계; 를 포함할 수 있다. 또한, 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기여도 트랜잭션을 기록하도록 야기하는 단계는, 적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성하는 단계; 및 상기 기여 블록을 상기 메인 블록체인 네트워크에 포함된 적어도 하나 의 노드에 전송함으로써, 상기 복수의 노드가 상기 적어도 하나의 유저와 관련된 기여도 트랜잭션을 기록하도록 야기하는 단계; 를 포함할 수 있다. 또한, 상기 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기여도 트랜잭션을 기록하도록 야기하는 단계는, 적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성하는 단계; 및 상기 기여 블록을 서브 블록체인 네트워크에 포함된 적어도 하나의 노 드로 전송함으로써, 복수의 노드가 상기 기여 블록을 기록하도록 야기하는 단계;를 포함할 수 있다. 또한. 상기 단계들은: 상기 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 상기 게임 서버의 저장부에 저장된 메인 블록체인에 연결되는 블록에 기록하는 단계; 를 더 포함할 수 있다. 또한, 상기 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 상기 게임 서버의 저장부에 저장된 메인 블록체인에 연결되는 블록에 기록하는 단계는, 상기 추첨 시드를 생성하는 단계; 상기 추첨 시드의 해시 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 상기 복수의 노드가 합의 알 고리즘에 기초하여 상기 추첨 시드의 해시 값을 기록하도록 야기하는 단계; 상기 복수의 유저 각각으로부터 협 동 게임 내에서 기 설정된 입력을 수신하는 것과 연동하여, 상기 복수의 유저 각각과 관련된 복수의 응모 시드 를 메인 블록체인에 기록하는 단계; 및 상기 추첨 시드의 원본 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 상기 복수의 노드가 합의 알고리즘에 기초하여 상기 추첨 시드의 원본 값을 기록 하도록 야기하는 단계; 를 포함할 수 있다. 또한, 상기 추첨 시드를 생성하는 단계는, 기 설정된 방법에 의해 생성된 시드 값을 이용하여 난수를 생성하는 단계; 및 상기 난수를 상기 추첨 시드로 결정하는 단계; 를 포함할 수 있다. 또한, 상기 기여도 트랜잭션에 포함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산하는 단계는, 상기 메인 블록체인을 검색하여 복수의 유저 각각의 응모 이력을 인식하는 단계; 상기 응모 이력 및 상기 기여도에 기초하여 상기 복수의 유저 각각에 대한 응모 가점을 연산하는 단계; 및 상기 추첨 시드의 원본 값, 상기 응모 시드 및 상기 응모 가점에 기초하여, 상기 당첨자 결정 데이터를 연산하는 단계; 를 포함할 수 있다. 또한, 상기 단계들은: 상기 당첨자 결정 데이터에 기초하여 당첨자 유저를 결정하는 단계; 및 상기 당첨자 유저 가 결정된 경우, 상기 당첨자 유저와 관련된 당첨자 응모 이력을 초기화 하는 단계; 를 더 포함할 수 있다. 또한, 상기 복수의 유저 각각으로부터 협동 게임 내에서 기 설정된 입력을 수신하는 것과 연동하여, 상기 복수 의 유저 각각과 관련된 복수의 응모 시드를 메인 블록체인에 기록하는 단계는, 상기 협동 게임이 종료된 후, 상 기 복수의 유저 각각과 관련된 클라이언트 단말로부터 상기 기 설정된 입력과 연관된 응모 블록 생성 요청 신호 를 수신하는 단계; 상기 응모 블록 생성 요청 신호를 수신한 경우, 응모 시드를 포함하는 응모 블록을 생성하는 단계; 및 상기 응모 블록을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드 가 상기 응모 블록을 기록하도록 야기하는 단계; 를 포함하고, 상기 응모 시드는, 상기 게임 서버에 의해 생성 되거나, 상기 클라이언트 단말로부터 수신될 수 있다. 또한, 상기 응모 블록 생성 요청 신호를 수신한 경우, 응모 시드를 포함하는 응모 블록을 생성하는 단계는, 상 기 기여도 트랜잭션에 포함된 상기 기여도가 기 설정된 조건을 만족하는지 여부를 인식하는 단계; 및 상기 기여 도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결정하는 단계; 를 포함할 수 있다. 또한, 상기 기 설정된 조건은, 상기 기여도가 기 설정된 임계 값을 초과하는 경우 만족될 수 있다. 또한, 상기 기여도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결 정하는 단계는, 상기 기여도가 상기 기 설정된 조건을 만족하지 못한 경우, 상기 응모 블록을 생성하지 않도록 결정하는 단계; 를 포함할 수 있다. 또한, 상기 기여도가 상기 기 설정된 조건을 만족하는지 여부에 기초하여 상기 응모 블록을 생성할지 여부를 결 정하는 단계는, 상기 기여도가 상기 기 설정된 조건을 만족하는 경우, 상기 응모 블록을 생성하도록 결정하는 단계; 를 포함할 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 일 실시예에 따라, 게임 서버가 개시된다. 상기 게임 서버는, 프로세서; 저장부; 및 통신부; 를 포함하고, 상기 프로세서는, 협동 게임이 종료된 후, 상기 협동 게임 에 관련된 복수의 유저 각각의 상기 협동 게임에 대한 기여도를 포함하는 기여도 트랜잭션을 생성하고, 상기 기 여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 복수의 노드가 상기 기 여도 트랜잭션을 기록하도록 야기하고, 상기 기여도 트랜잭션에 포함된 상기 기여도에 기초하여, 당첨자 결정 데이터를 연산할 수 있다. 본 개시에서 얻을 수 있는 기술적 해결 수단은 이상에서 언급한 해결 수단들로 제한되지 않으며, 언급하지 않은"}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "또 다른 해결 수단들은 아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 블록 체인을 이용하여 게임 아이템을 공정히 분배하는 방법을 제공하고자 한다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들 및/또는 양상들이 이제 도면들을 참조하여 개시된다. 하기 설명에서는 설명을 목적으로, 하나 이상의 양상들의 전반적 이해를 돕기 위해 다수의 구체적인 세부사항들이 개시된다. 그러나, 이러한 양상(들)은 이러한 구체적인 세부사항들 없이도 실행될 수 있다는 점 또한 본 개시의 기술 분야에서 통상의 지식을 가진 자 에게 감지될 수 있을 것이다. 이후의 기재 및 첨부된 도면들은 하나 이상의 양상들의 특정한 예시적인 양상들을 상세하게 기술한다. 하지만, 이러한 양상들은 예시적인 것이고 다양한 양상들의 원리들에서의 다양한 방법들 중 일부가 이용될 수 있으며, 기술되는 설명들은 그러한 양상들 및 그들의 균등물들을 모두 포함하고자 하는 의도 이다. 구체적으로, 본 명세서에서 사용되는 \"실시예\", \"예\", \"양상\", \"예시\" 등은 기술되는 임의의 양상 또는 설계가 다른 양상 또는 설계들보다 양호하다거나, 이점이 있는 것으로 해석되지 않을 수도 있다. 이하, 도면 부호에 관계없이 동일하거나 유사한 구성 요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략한다. 또한, 본 명세서에 개시된 실시예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명 이 본 명세서에 개시된 실시예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부 된 도면은 본 명세서에 개시된 실시예를 쉽게 이해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명 세서에 개시된 기술적 사상이 제한되지 않는다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 비록 제 1, 제 2 등이 다양한 소자나 구성요소들을 서술하기 위해서 사용되나, 이들 소자나 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단지 하나의 소자나 구성요소를 다른 소자나 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 소자나 구성요소는 본 발명의 기술적 사상 내에서 제2 소자나 구성요소 일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해 석되지 않는다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 더불어, 본 명세서에서 사용되는 용어 \"정보\" 및 \"데이터\"는 종종 서로 상호교환 가능하도록 사용될 수 있다. 이하, 도면 부호에 관계없이 동일하거나 유사한 구성 요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략한다. 또한, 본 명세서에 개시된 실시예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명 이 본 명세서에 개시된 실시예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부 된 도면은 본 명세서에 개시된 실시예를 쉽게 이해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명 세서에 개시된 기술적 사상이 제한되지 않는다. 비록 제 1, 제 2 등이 다양한 소자나 구성요소들을 서술하기 위해서 사용되나, 이들 소자나 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단지 하나의 소자나 구성요소를 다른 소자나 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 소자나 구성요소는 본 개시의 기술적 사상 내에서 제2 소자나 구성요소 일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해 석되지 않는다. 이하의 설명에서 사용되는 구성 요소에 대한 접미사 \"모듈\" 및 \"부\"는 명세서 작성의 용이함만이 고려되어 부여 되거나 혼용되는 것으로서 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 본 개시의 목적 및 효과, 그리고 그것들을 달성하기 위한 기술적 구성들은 첨부되는 도면과 함께 상세하게 후술 되어 있는 실시예들을 참조하면 명확해질 것이다. 본 개시를 설명하는데 있어서 공지 기능 또는 구성에 대한 구 체적인 설명이 본 개시의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략할 것이다. 그리고 후술되는 용어들은 본 개시에서의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러나 본 개시는 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있"}
{"patent_id": "10-2019-0073653", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "다. 단지 본 실시예들은 본 개시가 완전하도록 하고, 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에 게 개시의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 개시는 청구항의 범주에 의해 정의될 뿐이다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 도 1은 본 개시의 몇몇 실시예에 따른 게임 아이템 분배를 수행하기 위한 시스템에 대한 일례를 나타낸 도면이 다. 도 1에서 도시되는 바와 같이, 게임 아이템 분배를 수행하기 위한 시스템은, 게임 서버, 메인 블록체인 네 트워크, 클라이언트 단말(300a, 300b 및 300c: 300) 및 통신 네트워크를 포함할 수 있다. 도 1에서 도시되는 컴포넌트들은 예시적인 것으로서, 추가적인 컴포넌트들이 존재하거나 또는 도 1에서 도시되는 컴포넌 트들 중 일부는 생략될 수도 있다. 본 개시내용의 일 실시예에 따른 게임 서버는 예를 들어, 마이크로프로세서, 메인프레임 컴퓨터, 디지털 프로세서, 휴대용 디바이스 및 디바이스 제어기 등과 같은 임의의 타입의 컴퓨터 시스템 또는 컴퓨터 디바이스 를 포함할 수 있다. 도 1에서 도시되지는 않았지만 이러한 게임 서버는 프로세서, 저장부 및 통신부를 포 함할 수 있다. 게임 서버는 클라이언트 단말로 하여금 게임 아이템 분배에 대한 응모를 허용할 수 있 다. 추가적으로, 게임 서버는 메인 블록체인 네트워크를 구성하는 노드로서 동작할 수도 있다. 설명의 편의를 위해 이하 게임 서버는 메인 블록체인 네트워크와는 별개의 주체임을 가정한다. 그러 나 본 개시에 있어서, 메인 블록체인 네트워크를 구성하는 노드가 수행하는 모든 동작은 게임 서버에 의하여도 수행될 수 있다고 해석되어야 한다. 본 개시의 몇몇 실시예에서, 메인 블록체인 네트워크는 블록체인 기술에 기반하여 동작하는 복수의 노드들 을 의미할 수 있다. 여기서, 블록체인 기술은 블록이 체인형태로 연결된 저장 구조를 사용하여, 관리 대상이 되는 데이터를 블록체인 네트워크를 구성하는 복수의 노드들에 저장하는 분산 저장 기술이다. 메인 블록체인 네트워크는 게임 서버, 클라이언트 단말 및 메인 블록체인 네트워크를 구성 하는 노드 중 적어도 하나로부터 전달된 트랜잭션을 사전 결정된 합의 알고리즘에 기초하여 블록 형태로 저장할 수 있다. 블록 형태로 저장되는 데이터는 블록체인 네트워크를 구성하는 복수의 노드들에 의해 공유될 수 있다. 메인 블록체인 네트워크는, 구현 형태에 따라서, 임의의 노드들이 합의 동작을 수행할 수 있는 Public 블 록체인 네트워크 또는 사전 결정된 노드만이 합의 동작을 수행할 수 있는 Private 블록체인 네트워크를 포함할 수 있다. 본 개시내용의 몇몇 실시예에 따른 메인 블록체인 네트워크에서 수행되는 합의 알고리즘은: PoW(Proof of Work) 알고리즘, PoS(Proof of Stake) 알고리즘, DPoS(Delegated Proof of Stage) 알고리즘, PBFT(Practical Byzantine Fault Tolerance) 알고리즘, DBFT(Delegated Byzantine Fault Tolerance) 알고리즘, RBFT(Redundant Byzantine Fault Tolerance) 알고리즘, Sieve 알고리즘, Tendermint 알고리즘, Paxos 알고리즘, Raft 알고리즘, PoA(Proof of Authority) 알고리즘 및/또는 PoET(Proof of Elapsed Time) 알고리즘 을 포함할 수 있다. 본 개시내용의 몇몇 예시적인 실시예에서, 메인 블록체인 네트워크에서의 노드들은 계층 구조에 따른 블록 체인 코어 패키지에 의해 동작할 수 있다. 상기 계층 구조는: 메인 블록체인 네트워크에서 다뤄지는 데이 터의 구조를 정의하고 데이터를 관리하는 데이터 계층, 블록의 유효성을 검증하고 블록을 생성하는 마이닝을 수 행하고 마이닝 과정에서 채굴자에게 지급되는 수수료의 처리를 담당하는 합의 계층, P2P 네트워크 프로토콜, 해 시 함수, 전자서명, 인코딩 및 공통 저장소를 구현 및 관리하는 공통 계층, 및 다양한 어플리케이션이 생성, 처 리 및 관리되는 응용 계층을 포함할 수 있다. 본 개시내용의 몇몇 실시예에 따라, 아이템 분배 과정을 진행하는데 있어서 메인 블록체인 네트워크를 사 용함으로써, 아이템 분배 응모에 대한 유저 편의성, 분배 결과의 투명성 및 무결성이 제공될 수 있다. 클라이언트 단말은 통신 네트워크를 통하여 게임 서버 또는 다른 노드와의 통신하기 위한 매커 니즘을 가지며, 상기 게임 아이템 분배를 수행하기 위한 시스템에서의 임의의 형태의 노드를 의미할 수 있다. 예를 들어, 클라이언트 단말은 PC, 랩탑 컴퓨터, 워크스테이션, 단말 및/또는 네트워크 접속성을 갖는 임 의의 전자 디바이스를 포함할 수 있다. 또한, 클라이언트 단말은 에이전트(Agent), API(Application Programming Interface) 및 플러그-인(Plug-in) 중 적어도 하나에 의해 구현되는 임의의 서버를 포함할 수도 있 다. 또한, 클라이언트 단말은 애플리케이션 소스 및/또는 클라이언트 애플리케이션을 포함할 수 있다. 클라이언트 단말은 프로세서 및 저장부(메모리 및 영구저장매체)를 포함하여, 임의의 데이터를 처리 및 저 장할 수 있는 임의의 엔티티일 수 있다. 도 1에서의 클라이언트 단말은 게임 서버 및 메인 블록체인 네트워크 중 적어도 하나에 액세스 하고자 하는 유저와 관련될 수 있다. 클라이언트 단말은 메인 블록체인 네트워크를 구성하는 노드로 동작할 수도 있다. 이러한 예시에서, 클라이언트 단말은 지갑(wallet) 기능, 마이너(miner) 기능, 및 Full 블록체인 데이터의 저장 기능 중 적 어도 하나의 기능을 구현할 수 있다. 예를 들어, 클라이언트 단말이 지갑 기능만을 포함하는 경우, 트랜잭 션 및 유효성 검증을 수행하는 노드(예컨대, SPV (Simplified Payment Verification)노드)로 동작할 수 있다. 클라이언트 단말은 게임 서버 및 메인 블록체인 네트워크 중 적어도 하나로 쿼리(query) 또는 트랜잭션(transaction)을 발행할 수 있다. 본 개시내용에서의 쿼리는 메인 블록체인 네트워크 상에서 등록 된 유저의 유저 식별 정보 및 응모 이력을 조회하는데 사용될 수 있다. 본 개시내용에서의 트랜잭션은 메인 블 록체인 네트워크 상에 기록된 데이터에 대한 업데이트(수정/변경/삭제/추가)를 수행하는데 사용될 수 있다. 클라이언트 단말은 프로그래밍 언어로 작성된 애플리케이션 소스를 송수신할 수 있다. 예를 들어, 클라이 언트 단말은 애플리케이션 소스를 컴파일링하여 클라이언트 애플리케이션을 생성할 수 있다. 예를 들어, 생성된 클라이언트 애플리케이션은 게임 서버 및 메인 블록체인 네트워크 중 적어도 하나로 전달된 후 실행될 수 있다. 클라이언트 단말은 게임 서버에 접속하여 게임 서버에서 제공하는 아이템 분배에 응모할 수 있으며, 아이템 분배에 응모하는 과정에서 응모 시드를 게임 서버에 전송할 수 있다. 또한, 클라이언트 단말이 메인 블록체인 네트워크를 구성하는 노드에 포함될 경우, 클라이언트 단말 은 아이템 분배에 관한 트랜잭션을 생성하고 이를 게임 서버 및 메인 블록체인 네트워크 중 적 어도 하나로 전달할 수 있다. 또한, 클라이언트 단말은 게임 서버 및 메인 블록체인 네트워크 중 적어도 하나로부터, 협동 게임 및 아이템 분배와 관련된 데이터를 수신할 수 있다. 설명의 편의를 위해 이하 클라이언트 단말은 메인 블록체인 네트워크와는 별개의 주체임을 가정한다. 그러나 본 개시에 있어서, 블록체인 네트워크를 구성하는 노드가 수행하는 모든 동작은 클라이언트 단말에 의하여도 수행될 수 있다고 해석되어야 한다. 본 개시 전체에 걸쳐 협동 게임이란, 온라인 게임-특히 MMORPG(Massive Multi-user Online Role Playing Game, 다중접속역할수행게임)-에서 복수의 유저가 하나의 그룹을 이루어 게임 내에서 주어진 특정 목표를 달성하기 위 한 컨텐츠로 정의될 수 있다. 구체적으로, 협동 게임은 특정 던전 내 존재하는 몬스터의 사냥, 게임 내 적대 진영과의 대결에서 승리 목표의 달성 등을 포함할 수 있다. 이러한 협동 게임에서, 협동 게임에 참가하는 복수의 유저들은 적에게 피해를 주거 나, 아군을 치료하거나, 적의 공격으로부터 아군을 보호하거나 또는 협동 게임의 목표 달성을 위해 필요한 특정 행동을 수행할 수 있으며, 이는 게임 서버의 저장부에 협동 게임 수행 결과로서 저장될 수 있다. 본 개시내용의 일 실시예에 따른 통신 네트워크는 공중전화 교환망(PSTN:Public Switiched Telephone Network), xDSL(x Digital Subscriber Line), RADSL(Rate Adaptive DSL), MDSL(Multi Rate DSL), VDSL(Very High Speed DSL), UADSL(Universal Asymmetric DSL), HDSL(High Bit Rate DSL) 및 근거리 통신망(LAN) 등과 같은 다양한 유선 통신 시스템들을 사용할 수 있다. 또한, 본 개시내용에서 제시되는 통신 네트워크는 CDMA(Code Division Multi Access), TDMA(Time Division Multi Access), FDMA(Frequency Division Multi Access), OFDMA(Orthogonal Frequency Division Multi Access), SC-FDMA(Single Carrier-FDMA) 및 다른 시스템들과 같은 다양한 무선 통신 시스템들을 사용할 수 있다. 본 개시내용에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 임의의 형태의 다른 통신 네 트워크들에서도 사용될 수 있다. 도 2는 본 개시의 몇몇 실시예에 따른 게임 서버를 구성하는 컴퓨팅 장치의 구성의 일례를 나타낸 블록도이다. 도 2에서 도시되는 바와 같이, 게임 서버는 프로세서, 저장부 및 통신부를 포함할 수 있다. 다만, 상술한 구성 요소들은 게임 서버를 구현하는데 있어서 필수적인 것은 아니어서, 게임 서버 는 위에서 열거된 구성요소들 보다 많거나, 또는 적은 구성요소들을 가질 수 있다. 여기서, 각각의 구성 요소들은 별개의 칩이나 모듈이나 장치로 구성될 수 있고, 하나의 장치 내에 포함될 수도 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등과 같이 메모리 상에 저장된 명령어들을 실행시킴으로써 아이템 분배를 수 행하기 위한 임의의 형태의 프로세서를 포함할 수 있다. 프로세서는 저장부에 저장된 컴퓨터 프로그램을 판독하 여 본 개시의 몇몇 실시예에 따른 아이템 분배 방법을 수행할 수 있다. 프로세서는 아이템 분배 과정을 진행하 기 위하여 게임 서버의 컴포넌트들의 전반적인 동작들을 제어할 수 있다. 한편, 게임 서버는 저장부를 더 포함할 수 있다. 저장부는 프로세서의 동작을 위한 프로그 램을 저장할 수 있고, 입/출력되는 데이터들을 임시 또는 영구 저장할 수도 있다. 저장부는 플래시 메모리 타입 (flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적 어도 하나의 타입의 저장매체를 포함할 수 있다. 이러한 저장부는 프로세서에 제어에 의하여 동작될 수 있다. 또한, 본 개시내용에서 메모리 및 저장부는 서로 상호 교환 가능하게 사용될 수 있다. 통신부는 네트워크 접속을 위한 유/무선 인터넷 모듈을 포함할 수 있다. 통신부는 클라이언트 단말 , 메인 블록체인 네트워크 및 다른 서버 중 적어도 하나와의 통신을 수행할 수 있다. 무선 인터넷 기술로는 WLAN(Wireless LAN)(Wi-Fi), Wibro(Wireless broadband) Wimax(World Interoperability for Microwave Access), HSDPA(High Speed Downlink Packet Access) 등이 이용될 수 있다. 유선 인터넷 기술로는 XDSL(Digital Subscriber Line), FTTH(Fibers to the home), PLC(Power Line Communication) 등이 이용될 수 있다. 또한, 통신부는 근거리 통신(short range communication) 모듈을 포함할 수 있다. 근거리 통신 기 술로 블루투스(Bluetooth), RFID(Radio Frequency Identification), 적외선 통신(IrDA, infrared Data Association), UWB(Ultra Wideband), ZigBee 등이 이용될 수 있다. 전술한 컴포넌트들은 예시적인 것으로서 본 개시내용의 권리범위가 전술한 컴포넌트들로 제한되지는 않는다. 즉, 본 개시내용의 실시예들에 대한 구현 양태에 따라서 추가적인 컴포넌트들이 포함되거나 또는 전술한 컴포넌 트들 중 일부가 생략될 수 있다. 도 3은 본 개시의 몇몇 실시예에 따른 메인 블록체인에 포함된 블록의 구성의 일례를 나타낸 블록도이다. 도 3을 참조하면, 메인 블록체인은 분배 시작 블록, 응모 블록 또는 분배 결과 블록 중 적어도 하나를 포함할 수 있다. 메인 블록체인은, 메인 블록체인 네트워크를 구성하는 복수의 노드들이 저장하고 있는 분산 원장이다. 본 개시의 몇몇 실시예에 따른 메인 블록체인은 적어도 분배 시작 블록, 응모 블록 및 분배 결과 블록 을 포함할 수 있다. 본 개시의 몇몇 실시예에 따른 메인 블록체인은 협동 게임이 부분적으로 완료되거나, 완전히 완료되어 게임 아 이템이 생성된 경우, 게임 아이템의 분배를 위해 연장될 수 있다. 구체적으로, 프로세서는 협동 게임의 수행에 따른 게임 아이템이 생성된 경우, 분배 시작 블록을 생 성하여(예를 들면, 채굴을 수행하여) 메인 블록체인 네트워크를 구성하는 복수의 노드로 전송하도록 통신 부를 제어할 수 있다. 분배 시작 블록이 메인 블록체인에 기록되면, 프로세서는 통신부를 통해 수신한 적어도 하나의 응모 블록을 메인 블록체인에 연결할 수 있다. 응모 블록의 연결이 완료되면, 프로세서는 분배 결과 블록을 생성하여, 이를 메인 블록체인 네트워크를 구성하는 복수의 노드 로 전파할 수 있다. 상술한 예시에 의하면, 게임 아이템의 분배는 분배 시작 블록, 적어도 하나의 응모 블 록, 분배 결과 블록 순서로 메인 블록체인에 기록될 수 있다. 또한, 새로운 게임 아이템이 생성되어 분배 과정이 수행되면, 새로운 분배 시작 블록, 적어도 하나의 응모 블록, 분배 결과 블록 순서 대로 이전 게임 아이템 분배 시 마지막으로 기록된 분배 결과 블록에 기록될 수 있다. 이에 더하여, 기여 블록이 메인 블록체인에 기록되는 경우에 기여 블록은 분배 시작 블록과 분배 결 과 블록 사이에 위치할 수 있다. 상술한 내용은 메인 블록체인의 구성에 관한 일례에 불과하며, 메인 블록체인의 구성 및 연결 방식은 이에 한정 되지 않는다. 도 3과 관련하여 후술하겠지만, 메인 블록체인에 추첨 시드의 해시 값, 유저의 응모 시드 추첨 시드의 원본 값 및 경우에 따라서는 기여도까지 기록될 수 있다. 따라서 메인 블록체인 네트워크에 포함된 복수의 노드들 과 관련된 유저들이 분배 결과를 확인할 수 있으므로, 게임 아이템 분배의 투명성이 증대된다. 메인 블록체인에 기록되는 분배 시작 블록, 응모 블록 및 분배 결과 블록은 블록 헤더(510, 610, 710)와 트랜잭션(520, 620, 720)을 포함할 수 있다. 본 개시의 몇몇 실시예에 따른 블록 헤더(510, 610, 710)는 적어도 이전 블록 헤더의 해시값, Nonce 값, Transaction 그룹의 해시 값을 포함할 수 있다. 이전 블록 헤더의 해시 값은 당해 블록이 연결될 블록의 헤더의 해시 값으로, 당해 블록은 이를 통하여 메인 블록체인에 연결되기 위하여 필요하다. Nonce 값은 블록의 유효성을 검증하기 위한 값이다. 구체적으로, 합의 알고리즘으로서 PoW(Proof of Work, 작업 증명)를 이용하는 경우, Nonce 값을 해시함수에 입력한 결과가 특정 조건을 만족해야 블록이 유효하다고 볼 수 있다. Transaction 그룹의 해시 값은, 블록에 포함된 트랜잭션들 전체를 기 설정된 해시 함수에 입력하여 생성된 값을 의미할 수 있다. 일례로, Transaction 그룹을 머클 트리(merkle tree)로 유지할 경우, Transaction 그룹의 해 시 값은 머클 트리의 루트에 존재하는 해시 값일 수 있다. 상술한 예는 블록 헤더의 구성에 관한 예시에 불과하며, 블록 헤더의 구성은 이에 한정되지 아니한다. 분배 시작 블록은 협동 게임의 수행에 따라 게임 아이템이 생성된 경우, 먼저 생성되어 메인 블록체인에 연결되는 블록으로 정의될 수 있다. 즉, 분배 시작 블록이 메인 블록체인에 기록됨으로써 게임 아이템 분 배가 개시된다. 본 개시의 몇몇 실시예에 따른 분배 시작 블록은 게임 아이템의 분배가 개시되는 시점에 분배의 기준이 되 는 추첨 시드를 해시 함수에 입력하여 얻은 값을 블록체인에 기록하여, 커밋(commit)될 수 있다. 분배 시작 블 록은, 협동 게임의 부분 수행 완료 또는 전체 수행 완료 시 생성될 수 있다. 분배 시작 블록은 블록 헤더 뿐 아니라, 트랜잭션의 구성요소로서 추첨 시드의 해시 값을 포함할 수 있다. 특별한 사정이 없는 한 블록체인 네트워크 상에 기록된 모든 데이터는 블록체인 네트워크 상에 참여한 모든 노 드에게 공개된다. 이는 본 발명에 따른 메인 블록체인 네트워크도 마찬가지이다. 즉, 블록체인 네트워크 상에 기록된 추첨 시드, 응모 시드 및 기여도는 메인 블록체인 네트워크에 참여한 모든 노드에게 공개될 수 있다. 이러한 전제하에서, 추첨 시드가 분배 시작 블록에 평문으로 포함되면 협동 게임에 참여한 복수의 유 저는 추첨 시드를 알게 될 수 있다. 따라서 사실상 추첨에 의한 분배가 무의미해질 수 있다. 따라서, 본 개시는 커밋-리빌 스킴(Commit-Reveal scheme) 방법을 이용하여 추첨 시드에 관한 정보를 메인 블록 체인 네트워크에 포함된 노드에게 전달하여 이러한 문제를 방지할 수 있다. 커밋-리빌 스킴(Commit-Reveal scheme)은, 특정 시점이 되기 전 자신이 숨기고자 하는 값을 해시하여 블록체인 상에 등록하고(Commit), 상기 특정 시점이 도래하면 해시되기 전의 원래 값을 공개(Reveal)하여, 응모/투표 등에 있어 특정 시점 전까지 정보 의 보안을 유지할 수 있는 방법이다. 이를 본 발명에 적용하면, 프로세서가 추첨 시드를 해시한 해시 값을 메인 블록체인 네트워크에 기록하도록 야기하는 것은 응모 개시 시 추첨 시드를 커밋(Commit)하기 위한 것 이다. 추첨 시드에 관한 자세한 내용은 도 5에서 후술한다. 여기서 응모 블록은 협동 게임에 참여한 유저들이 게임 아이템을 분배 받고자 응모하기 위해 생성 및 기록 되는 블록일 수 있다. 응모 블록은, 분배 시작 블록이 생성된 후, 협동 게임의 부분 수행 완료 또는 전체 수행 완료 시 생성될 수 있다. 즉, 협동 게임에 참여한 복수의 유저들 중 생성된 게임 아이템을 분배 받고 자 하는 유저들은 자신의 응모 시드를 응모 블록에 포함시켜 메인 블록체인 에 기록하여, 게임 아이템 분배에 응모할 수 있다. 응모 블록은 블록 헤더 뿐 아니라, 트랜잭션의 구성요소로서 유저의 응모 시드 를 포함할 수 있다. 응모 시드에 관한 내용은 도 5에서 후술한다. 분배 결과 블록은, 게임 아이템의 분배가 결정되었음을 메인 블록체인에 기록하는 블록으로 정의될 수 있 다. 본 개시의 몇몇 실시예에 따른 분배 결과 블록은, 협동 게임의 부분 수행 완료 또는 전체 수행 완료가 발 생한 뒤, 분배 시작 블록 및 응모 블록의 생성이 종료된 후 생성될 수 있다. 분배 결과 블록은 블록헤더 뿐 아니라, 트랜잭션의 구성요소로서 추첨 시드의 원본 값을 포함할 수 있다. 도 3에서 구체적으로 도시되지는 않았으나, 본 개시의 몇몇 실시예에 따른 메인 블록체인은 분배 시작 블록 , 복수의 응모 블록 및 분배 결과 블록의 순차적 연결을 포함할 수 있다. 나아가, 메인 블록 체인은 협동 게임의 진행 상황에 따라, 상기 분배 시작 블록, 복수의 응모 블록 및 분배 결과 블록의 순차적 연결의 반복을 포함할 수 있다. 구체적으로, 상술한 바와 같이, 본 개시의 몇몇 실시예에 따른 메인 블록체인은 협동 게임이 부분적으로 완료되 거나, 완전히 완료되어 게임 아이템이 생성된 경우, 게임 아이템의 분배를 위해 연장될 수 있다. 구체적으로, 프로세서는 협동 게임의 수행에 따른 게임 아이템이 생성된 경우, 분배 시작 블록을 생 성하여(예를 들면, 채굴을 수행하여) 메인 블록체인 네트워크를 구성하는 복수의 노드로 전송하도록 통신 부를 제어할 수 있다. 분배 시작 블록이 메인 블록체인에 기록되면, 프로세서는 통신부를 통해 수신한 적어도 하나의 응모 블록을 메인 블록체인에 연결한다. 응모 블록의 연결이 완료되면, 프로세 서는 분배 결과 블록을 생성하여, 이를 메인 블록체인 네트워크를 구성하는 복수의 노드로 전파 할 수 있다. 상술한 예시에 의하면, 게임 아이템의 분배는 분배 시작 블록, 적어도 하나의 응모 블록 , 분배 결과 블록 순서로 메인 블록체인에 기록될 수 있다. 또한, 새로운 게임 아이템이 생성되어 분 배 과정이 수행되면, 새로운 분배 시작 블록, 적어도 하나의 응모 블록, 분배 결과 블록 순서대 로 이전 게임 아이템 분배 시 마지막으로 기록된 분배 결과 블록에 기록될 수 있다.이에 더하여, 기여 블록이 메인 블록체인에 기록되는 경우에 기여 블록은 분배 시작 블록과 분배 결 과 블록 사이에 위치할 수 있다. 상술한 내용은 메인 블록체인의 구성에 관한 일례에 불과하며, 메인 블록체인의 구성 및 연결 방식은 이에 한정 되지 않는다. 설명의 편의상 메인 블록체인에는 분배 시작 블록, 응모 블록 및 분배 결과 블록만이 포함되도 록 하였으나, 메인 블록체인의 구성은 이에 한정되지 않는다. 즉, 본 발명의 또 다른 몇몇 실시예에 따른 메인 블록체인은 도 4에서 후술할 기여 블록을 포함할 수 있다. 기여 블록에 대한 구체적인 내용은 이하 도 4에서 후술한다. 도 4는 본 개시의 몇몇 실시예에 따른 기여 블록의 구성의 일례를 나타낸 블록도이다. 기여 블록은 협동 게임에 참여한 복수의 유저들 각각의 기여도가 기록되는 블록으로 정의될 수 있다. 게임 아이템 분배 시 가점 형성의 기준이 되는 게임 기여도 트랜잭션을 포함하여, 블록체인 네트워크 상에 기록된 블 록체인에 연결되는 블록일 수 있다. 여기서 블록체인 네트워크는 메인 블록체인 네트워크 및 서브 블록체 인 네트워크(미도시)를 모두 포함할 수 있다. 이러한 기여 블록은 일단 생성되면 메인 블록체인 네트워크 또는 서브 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송될 수 있다. 따라서, 복수의 노드가 적 어도 하나의 유저와 관련된 기여도(및 이를 포함하는 기여도 트랜잭션)를 메인 블록체인 또는 서브 블록체인에 기록할 수 있다.. 메인 블록체인 또는 서브 블록체인에 기록되는 기여 블록은 블록 헤더 및 트랜잭션을 포함할 수 있다. 본 개시의 몇몇 실시예에 따른 블록 헤더는 적어도 이전 블록 헤더의 해시값, Nonce 값, Transaction 그룹 의 해시 값을 포함할 수 있다. 이전 블록 헤더의 해시 값은 당해 블록이 연결될 블록의 헤더의 해시 값으로, 당 해 블록은 이를 통하여 메인 블록체인에 연결되기 위하여 필요하다. Nonce 값은 블록의 유효성을 검증하기 위한 값이다. 구체적으로, 합의 알고리즘으로서 PoW(Proof of Work, 작업 증명)를 이용하는 경우, Nonce 값을 해시함수에 입력한 결과가 특정 조건을 만족해야 블록이 유효하다고 볼 수 있다. Transaction 그룹의 해시 값은, 블록에 포함된 트랜잭션들 전체를 기 설정된 해시 함수에 입력하여 생성된 값을 의미할 수 있다. 일례로, Transaction 그룹을 머클 트리(merkle tree)로 유지할 경우, Transaction 그룹의 해 시 값은 머클 트리의 루트에 존재하는 해시 값일 수 있다. 상술한 예는 블록 헤더의 구성에 관한 예시에 불과하며, 블록 헤더의 구성은 이에 한정되지 아니한다. 메인 블록체인 네트워크는 도 3에서 상술한 바와 같이 분배 시작 블록, 응모 블록 및 분배 결과 블록의 순차적인 연결을 포함하는 블록체인과 관련된 노드들의 네트워크들을 의미할 수 있다. 나아가, 상 술한 바와 같이, 메인 블록체인 네트워크는 기여 블록을 기록하고 있을 수 있다. 여기서 서브 블록체인 네트워크란, 적어도 하나 이상의 기여 블록들의 체인 구조를 저장하고 있는 분산 네 트워크를 의미할 수 있다. 서브 블록체인 네트워크는 메인 블록체인 네트워크와는 별도의 오프 체인 또는 사이드 체인일 수 있다. 즉, 서브 블록체인 네트워크는 합의 알고리즘에 기초하여 기여 블록들의 체인 구조를 저장하고 있는 복수의 노드들의 네트워크를 의미할 수 있다. 따라서, 서브 블록체인에 포함된 데이터를 이용한 연산의 결과가 메인 블록체인 네트워크에 반영될 수 있다. 도 4를 참조하면, 기여 블록은 블록 헤더 뿐 아니라, 유저의 기여도와 관련된 기여도 트랜잭션 을 포함할 수 있다. 여기서 기여도 트랜잭션과 관련된 기여도는, 유저의 협동 게임에 대한 수행 결과 그 자체 또는 수행 결과를 가 공하여 생성된 비교 가능한 값일 수 있다. 구체적으로, 협동 게임을 클리어하는데 유저가 몬스터에게 입힌 피해 량, 아군을 치료한 치료양, 적으로부터 흡수한 피해량 등은 수행 결과에 해당한다. 수행 결과 그 자체가 기여도 로 간주될 수 있을 뿐 아니라, 상기 수행 결과를 가공한 특정 값도 기여도일 수 있다. 예를 들면, 몬스터에게 입힌 피해량, 아군에 대한 치료양 및 적으로부터 흡수한 피해량의 총합은 기여도가 될 수 있다. 다만 이는 기여도에 관한 예시에 불과하고, 기여도의 구체적인 구현은 이에 한정되지 않는다. 상술한 기여도 트랜잭션은 기여도에 관한 정보를 포함한 트랜잭션으로 정의될 수 있다. 기여도 트랜잭션 은 분배 시작 블록, 응모 블록, 분배 결과 블록 또는 기여 블록 중 적어도 하나에 포 함되어 메인 블록체인 네트워크 또는 서브 블록체인 네트워크에 기록될 수 있다. 기여도 트랜잭션의 생성에 관한 일례로, 기여도 트랜잭션은 게임 서버의 프로세서에 의해 생성될 수 있다. 프로세서는 게임 서버의 저장부내에 포함된 복수의 유저들의 협동 게임에 대한 수행 결과에 기초하여 기여도를 연산해 낼 수 있다. 프로세서는 연산해 낸 기여도에 기초하여 기 설정된 메인 블록체인 네트워크 또는 서브 블록체인 네트워크의 프로토콜에 따라 기여도 트랜잭션을 생성할 수 있 다. 기여도 트랜잭션의 생성에 관한 다른 일례로, 기여도 트랜잭션은 클라이언트 단말에 의하여 생 성될 수 있다. 즉, 클라이언트 단말은 단말 내 저장부에 기록된 본인의 게임 기록(예를 들면, 게임 로그) 을 바탕으로 본인의 협동 게임에 대한 수행 결과를 인식할 수 있다. 이에 기초하여 클라이언트 단말은 상 기 클라이언트 단말을 통해 협동 게임을 수행한 유저의 기여도를 연산할 수 있다. 이 경우 클라이언트 단말 은 직접 기여도 트랜잭션을 생성할 수 있다. 이 경우 게임 서버가 직접 기여도 트랜잭션의 검증을 수행할 수 있다. 또한 게임 서버를 포함한 메인 블록체인 네트워크 또는 서브 블록체인 네트 워크를 구성하는 복수의 노드가 기여도 트랜잭션의 검증에 참여할 수 있다. 상술한 기여도 트랜잭션은 기여도 값과 관련한 정보 및 해당 기여도 값과 관련된 유저 식별 정보를 포함할 수 있다. 상기 기여도 값 및 관련된 유저를 인식할 수 있는 정보는 평문 형태로 작성될 수 있다. 또한, 기여도 값 및 관련된 유저를 인식할 수 있는 정보는 블록체인 기술에서 트랜잭션 생성에 널리 사용되는 스크립트 언어 로 작성될 수 있다. 다만 이는 기여도 트랜잭션의 형태에 관한 예시에 불과하며, 기여도 트랜잭션은 이에 한정 되지 아니한다. 기여도 값을 트랜잭션 형태로 블록에 포함시켜 블록체인 네트워크에 기록함으로써, 생성된 기여도에 대한 검증 및 투명한 공개가 가능해질 수 있다. 따라서 협동 게임의 결과에 따른 게임 아이템 분배에 투명성, 신뢰성 및 공정성이 확보될 수 있다. 도 5는 본 개시의 몇몇 실시예에 따른 게임 서버가 블록체인을 이용한 게임 아이템 분배 방법을 수행하는 일례 를 나타낸 신호 흐름도이다. 도 5를 참조하면, 게임 서버의 프로세서는 추첨 시드 또는 응모 시드 중 적어도 하나를 상기 게임 서 버의 저장부에 저장된 메인 블록체인에 연결되는 블록에 기록할 수 있다(S100). 여기서 추첨 시드는, 협동 게임이 부분적 또는 전체적으로 완료되어 게임 아이템의 분배가 가능한 상태가 되었 을 때, 게임 아이템 분배의 기준이 되는 특정 값을 의미할 수 있다. 구체적으로, 협동 게임에 있어서 해당 게임의 부분적인 수행 완료(예를 들면, 제 1 번 보스의 클리어) 또는 전 체적인 수행 완료(예를 들면, 전체 던전의 클리어)가 이루어져 게임 아이템이 드랍(drop)된 경우, 프로세서 는 추첨 시드를 생성할 수 있다. 여기서, 추첨 시드가 100이라고 가정하자. 기 설정된 방법(예를 들면, 난 수 생성 방법)을 이용하여 추첨 시드인 100에서 가장 가까운 숫자를 생성하여 게임 서버로 전송한 클라이 언트 단말과 연관된 유저는 게임 아이템을 획득할 수 있다. 이러한 추첨 시드는, 프로세서에 의하여 게임 프로그램 내에서 기 설정된 규칙에 의해 생성되거나, 난수 생성 알고리즘에 의하여 생성될 수 있다. 다만 이는 추첨 시드에 관한 예시에 불과하고, 추첨 시드는 이에 한정 되지 않는다. 추첨 시드의 생성과 관련한 자세한 내용은 도 8에서 후술한다. 응모 시드는, 협동 게임에 참여한 복수의 유저 각각이 게임 아이템을 분배 받고자 하는 의사를 표현한 경우에, 해당 게임 아이템을 지급받기 위하여 생성하는 특정 값을 의미할 수 있다. 구체적으로, 협동 게임에 있어서 해당 게임의 부분적인 수행 완료 또는 전체적인 수행 완료가 이루어져 게임 아 이템이 드랍된 경우, 추첨 시드와 가장 가까운 응모 시드를 생성하여 게임 서버로 전송한 클라이언트 단말 과 연관된 유저에게 아이템을 지급할 수 있다. 응모 시드는 게임 서버에 의해 생성되거나, 유저에 의 하여 클라이언트 단말을 통해 직접 생성될 수 있다. 메인 블록체인 네트워크는 도 3에서 상술한 바와 같이 분배 시작 블록, 응모 블록 및 분배 결 과 블록의 순차적인 연결을 포함하는 블록체인과 관련된 노드들의 네트워크들을 의미할 수 있다. 도 3에 관한 설명에서 상술한 바와 같이, 본 개시의 몇몇 실시예에 따른 메인 블록체인은 분배 시작 블록 , 복수의 응모 블록 및 분배 결과 블록의 순차적 연결을 포함할 수 있다. 나아가, 메인 블록 체 인은 협동 게임의 진행 상황에 따라, 상기 분배 시작 블록, 복수의 응모 블록 및 분배 결과 블록 의 순차적 연결의 반복적 연결을 포함할 수 있다. 본 개시에서 블록 체인에 특정 데이터(예를 들면, 추첨 시드, 응모 시드, 기여도 트랜잭션 등)가 '기록'된다는 것은, 상기 특정 데이터를 포함하는 트랜잭션이 생성되고, 생성된 상기 트랜잭션에 대한 복수의 노드에서의 검 증 과정을 거쳐, 검증이 완료된 상기 트랜잭션이 새로이 생성된 블록에 포함되어 기존 블록체인에 연결됨으로써, 블록체인 네트워크에 포함된 복수의 노드에서 기존 블록체인에 연결되어 저장되는 것을 의미할 수 있다. 추첨 시드 및 응모 시드를 게임 아이템 분배 전에(따라서, 협동 게임이 시작되기 전을 포함할 수 있다) 미리 메 인 블록체인 네트워크상에 기록함으로써, 게임 아이템 분배에 응모하는 유저들은 추첨 시드가 게임 아이템 의 분배가 시작되기 전에 생성되었음을 인지할 수 있다. 따라서 게임 아이템 분배에 대한 투명성을 확보할 수 있다. 프로세서는, 추첨 시드 또는 응모 시드 중 적어도 하나가 메인 블록체인에 기록되고 나면, 협동 게임이 종 료된 후, 협동 게임에 관련된 복수의 유저 각각의 협동 게임에 대한 기여도를 포함하는 기여도 트랜잭션을 생성할 수 있다(S200). 단계(S200)는 복수의 유저 각각이 협동 게임의 수행에 기여한 정도를 메인 블록체인 네트워크에 기록하기 위하여, 상기 수행에 기여한 정도를 기여도 트랜잭션의 형태로 변환하는 단계를 의미할 수 있다. 본 개시 전체에 걸쳐 협동 게임이란, 온라인 게임-특히 MMORPG(Massive Multi-user Online Role Playing Game, 다중접속역할수행게임)-에서 복수의 유저가 하나의 그룹을 이루어 게임 내에서 주어진 특정 목표를 달성하기 위 한 컨텐츠로 정의될 수 있다. 구체적으로, 협동 게임은 특정 던전 내 존재하는 몬스터의 사냥, 게임 내 적대 진영과의 대결에서 승리 목표의 달성 등을 포함할 수 있다. 이러한 협동 게임에서, 협동 게임에 참가하는 복수의 유저들은 적에게 피해를 주거 나, 아군을 치료하거나, 적의 공격으로부터 아군을 보호하거나 또는 협동 게임의 목표 달성을 위해 필요한 특정 행동을 수행할 수 있으며, 이는 게임 서버의 저장부에 협동 게임 수행 결과로서 저장될 수 있다. 프로세서는 통신부로 하여금 기여도 트랜잭션을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송함으로써, 메인 블록체인 네트워크 또는 서브 블록체인 네트워크(미도시)에 포함된 복 수의 노드들이 합의 알고리즘에 기초하여 기여도 트랜잭션을 기록하도록 야기할 수 있다(S300). 본 단계(S300)는 생성된 기여도 트랜잭션을 메인 블록체인 네트워크 또는 서브 블록체인 네트워크(미 도시) 상에 전송하여, 기여도 트랜잭션의 유효성을 검증받고, 검증된 트랜잭션을 메인 블록체인 네트워크 또는 서브 블록체인 네트워크(미도시)에 포함된 모든 노드들이 저장하도록 하는 단계일 수 있다. 단계(S300)를 통하여, 협동 게임 수행 결과에 대한 기여도를 메인 블록체인 네트워크 또는 서브 블록체인 네트워크(미도시)에 포함된 노드들이 전부 공유할 수 있게 된다. 따라서 협동 게임 수행 결과에 대한 기여도의 투명성 및 위조, 변조 가능성이 낮아져, 게임 아이템 분배 시 가점 산출에 관한 투명성이 보장된다. 기여도 트랜잭션을 게임 서버로부터 전송받은 메인 블록체인 네트워크에 포함된 복수의 노드들은 합 의 알고리즘에 기초하여 기여도 트랜잭션을 기록할 수 있다(S400). 상술한 바와 같이, 생성된 기여도에 대한 검증 및 투명한 공개가 가능할 수 있다. 따라서 협동 게임의 결과에 따른 게임 아이템 분배에 투명성, 신뢰성 및 공정성이 확보될 수 있다. 단계(S400)에 따라 메인 블록체인 네트워크에 기여도 트랜잭션이 기록되고 나면, 프로세서는 기여도 트랜잭션에 포함된 기여도에 기초하여, 당첨자 결정 데이터를 연산할 수 있다(S500). 본 단계를 통해 연산되는 당첨자 결정 데이터는 게임 아이템 분배를 위한 당첨자 결정의 기준일 수 있다. 즉, 당첨자 결정 데이터란, 게임 아이템을 분배 받기 위한 기준이 되는 데이터로 정의될 수 있다. 구체적으로, 당첨 자 결정 데이터는 특정한 자연수, 알파벳 등으로 표현될 수 있다. 여기서 당첨자는, 상술한 협동게임에 참여한 복수의 유저 중 당첨자 결정 데이터를 기준으로 하여 결정된 게임 아이템을 수령할 유저로 정의될 수 있다. 본 개시에 따른 몇몇 실시예에 있어서 프로세서는 하나 또는 복수의 유저를 당첨자로 결정할 수 있다. 한편, 당첨자는 당첨자 결정 데이터를 기준으로 결정될 수 있다. 일례로, 프로세서는 당첨자 결정 데이터가 높은 순서대로 당첨자를 결정할 수도 있고, 반대로 당첨자 결정 데이터가 낮은 순서대로 당첨자를 결정할 수도 있다. 또한, 본 개시에 따른 몇몇 실시예에 있어서, 당첨자는 추첨 시드, 응모 시드 및 당첨자 결정 데이터에 기초하 여 결정될 수 있다. 예를 들어, 프로세서는 추첨 시드와 응모 시드의 차이 값을 연산한 후, 이를 후술할 응모 가점으로 보정하여 당첨자 결정 데이터를 연산할 수 있다. 이 경우, 응모 가점에 의한 보정은 당첨자 결정 데이터를 0보다 작게 만들 수 없도록 설정될 수 있다. 즉, 상술한 예시에서 당첨자 결정 데이터의 최소 값은 0 이며, 당첨자 결정 데이터가 작은 순서대로, 아이템 분배 전 결정된 당첨자 수에 따라 아이템이 분배될 수 있다. 다만 이는 당첨자 결정 데이터에 대한 예시에 불과하므로, 당첨자 결정 데이터는 이에 한정되지 않는다. 프로세서는 단계(S500)에서 메인 블록체인 네트워크 및 서브 블록체인 네트워크 상에 기록된 데이터 를 기초로 당첨자 결정 데이터의 연산할 수 있다. 따라서, 당첨자 결정 데이터의 연산이 메인 블록체인 네트워 크 및 서브 블록체인 네트워크와 관련된 복수의 노드 및 상기 복수의 노드와 관련된 유저들에게 공개된다. 따라서 당첨자 결정 데이터의 연산에 관한 투명성 및 공정성이 확보될 수 있다. 프로세서는 단계(S500)에서 당첨자 결정 데이터를 연산한 후 당첨자 결정 데이터에 기초하여 당첨자 유저 를 결정할 수 있다(S600). 상술한 바와 같이, 적어도 하나의 당첨자는 기 설정된 방법에 따라 결정된다. 예를 들면, 협동 게임의 수행 결 과 분배의 대상이 된 아이템의 개수만큼 당첨자를 결정할 수도 있고, 또는 아이템 하나하나마다 하나의 당첨자 를 할당하여 당첨자를 결정할 수도 있다. 프로세서는 단계(S600)에서 당첨자 유저를 결정한 후 당첨자 유저와 관련된 당첨자 응모 이력을 초기화할 수 있다(S700). 여기서 프로세서는 당첨자 유저와 관련된 당첨자 응모 이력을 초기화 하기 위하여, 당첨자 유저로 결정된 유저의 유저 식별 정보를 인식할 수 있다. 이 경우에 응모 블록은 유저의 응모 시드 트랜잭션뿐 아니 라, 유저의 응모 시드 트랜잭션 또는 이를 포함하는 응모 블록과 관련된 유저의 유저 식별 정보를 포함할 수 있 다. 본 개시에서, 응모 이력은 협동 게임에 참여한 유저가 마지막으로 게임 아이템을 분배 받은 때로부터, 협동 게 임 수행을 수행한 후 게임 아이템 분배에 응모한 횟수로 정의될 수 있다. 응모 이력은 협동 게임에 참여한 복수 의 유저 각각에 대하여 정의될 수 있다. 본 개시의 몇몇 실시예에 따른 프로세서는 당첨자 유저의 유저 식별 정보를 인식한 경우, 저장부내의 메인 블록체인을 검색하여 이에 기록된 응모 블록들을 조회할 수 있다. 이를 통하여 프로세서는 개별 유저 식별 정보에 대응하는 유저의 응모 이력을 인식할 수 있다. 여기서, 일례로 프로세서는 응모 이력을 인식하기 위해 메인 블록체인을 순회할 수 있다. 다른 일례로, 프 로세서는 저장부에 기록된 개별 유저 식별 정보 또는 이에 대응하는 응모 블록에 대한 참조 정 보에 기초하여 개별 유저의 응모 이력을 인식할 수 있다. 응모 이력의 초기화는 당첨자 유저의 유저 식별 정보에 대응하는 응모 이력 또는 응모 횟수를 0으로 초기화하여, 해당 당첨자 유저가 다음 아이템 분배 개시 시점에 응모 가점을 받을 수 없게 하는 것으로 정의될 수 있다. 본 개시의 몇몇 실시예에 따르면 응모 이력은 당첨자 결정 데이터와 관련된 응모 가점의 산정에 이용될 수 있다. 따라서, 응모 이력을 초기화하여야 동일한 유저가 협동 게임의 결과를 여러 번 분배 받는 경우를 줄일 수 있다. 따라서 협동 게임에 참여하는 유저들이 편중되지 않은 아이템 분배에 대한 기대를 가질 수 있게 된다.도 6은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 생성하기 위해 기여도를 연산 하는 일례를 나타낸 순서도이다. 도 6을 참조하면, 프로세서는 협동 게임이 종료된 후, 복수의 유저 각각의 협동 게임에 대한 수행 결과를 인식할 수 있다(S210). 본 개시의 몇몇 실시예에 따른 기여도를 연산하기 위해 협동 게임에 대한 복수의 유저 각각의 수행 결과를 인식 할 필요가 있다. 본 개시의 몇몇 실시예에 따른 프로세서는, 복수의 유저 각각의 수행 결과를 개별적으로 인식할 수 있다. 본 개시의 몇몇 실시예에 따른 협동 게임에 대한 수행 결과는, 협동 게임의 시작 시점부터 클리어 시점까지 복 수의 유저 각각의 게임 수행 기록을 종합한 결과로 정의될 수 있다. 구체적으로, 협동 게임을 클리어하는 데 유 저가 몬스터에게 입힌 피해량, 아군을 치료한 치료양, 적으로부터 흡수한 피해량일 수 있다. 다만 이는 수행 결 과에 관한 예시에 불과하며, 수행 결과는 상술한 예시에 한정되지 않는다. 프로세서는 협동 게임이 진행될 때, 클라이언트 단말로부터 게임 내 기 설정된 입력들을 수신할 수 있다. 프로세서는 수신한 입력에 기초하여 당해 입력의 게임 내 결과를 연산할 수 있고, 이를 저장부(12 0)가 저장하도록 제어할 수 있다. 프로세서는 협동 게임이 종료될 때까지 누적하여 저장한 게임 내 결과를 통해 협동 게임에 대한 수행 결과를 생성할 수 있다. 예를 들면, 클라이언트 단말로부터 관련된 유저의 캐릭터가 특정 게임 내 기술을 사용하여 적을 공격하는 명령이 수신되었다고 가정하자. 이 경우, 프로세서는 수신한 공격 명령에 기초하여, 공격 명령이 적에게 입히는 피해량을 연산할 수 있고, 해당 피해량을 저장부에 저장할 수 있다. 협동 게임이 종료되면, 프로세 서는 종료 시에 누적된 피해량을 당해 유저의 수행 결과로서 생성할 수 있다. 다만 이는 수행 결과 생성에 대한 예시에 불과하며, 수행 결과 생성은 이에 한정되지 않는다. 복수의 유저의 협동 게임에 대한 수행 결과는 게임 서버의 저장부에 저장되어 있을 수 있다. 따라서, 일례로, 프로세서는 협동 게임이 종료된 후, 저장부에 저장된 복수의 유저의 수행 결과를 인식할 수 있다. 도 5에서 상술한 바와 같이, 수행 결과의 예로서 협동 게임을 클리어하는 데 유저가 몬스터에게 입힌 피해량, 아군을 치료한 치료양, 적으로부터 흡수한 피해량 등을 들 수 있다. 프로세서는 단계(S210)에서 인식한 수행 결과에 기초하여, 기여도를 연산할 수 있다(S220). 도 5에서 상술한 바와 같이, 기여도는 유저의 협동 게임에 대한 수행 결과 그 자체 또는 수행 결과를 가공하여 생성된 비교 가능한 값일 수 있다. 기여도는 다양한 방식으로 연산될 수 있다. 일례로, 프로세서는 적에게 피해를 주는 역할을 맡은 유저들에 대하여는 피해량에 더 큰 가중치를 두어 기여도를 연산할 수 있다. 다른 일례로, 프로세서는 아군을 치료 하는 역할을 맡은 유저들에 대하여는 치료양에 더 큰 가중치를 두어 기여도를 연산할 수 있다. 또 다른 일례로, 프로세서는 기 설정된 특정 게임 내 행동을 수행하는 역할을 맡은 유저들에 대하여는 특정 게임 내 행동의 수행 횟수에 가중치를 두어 기여도를 연산할 수 있다. 기여도의 연산 방법은 게임 아이템의 종류 등 상술한 역 할 이외의 다양한 요소에 의하여 다르게 연산될 수 있다. 상술한 바와 같이 아이템 분배의 기준이 되는 기여도를 다양하게 연산할 수 있도록 함으로써, 보다 더 적절한 아이템 분배가 이루어질 수 있다. 도 7은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 메인 블록체인 네트워크에 기 록하도록 야기하는 일례를 나타낸 도면이다. 도 7을 참조하면, 프로세서는 협동 게임이 부분적 또는 전체적으로 완료되어 기여도 트랜잭션이 생성되면, 적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성할 수 있다(S310). 프로세서는 생성된 기여 블록을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송할 수 있다(S320). 프로세서가 기여 블록을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송하면, 메 인 블록체인 네트워크에 포함된 복수의 노드는 해당 블록을 검증하고, 해당 블록을 메인 블록체인에 연결 할 수 있다. 기여 블록이 메인 블록체인에 기록되는 양상은 다양할 수 있다. 예를 들어, 기여 블록은 개별 응모 블록과 연속 적으로 연결되어 메인 블록체인에 기록되거나, 기여 블록이 복수의 유저 전체에 대한 기여도 트랜잭션을 포함하는 경우에는 분배 시작 블록 또는 분배 결과 블록과 연속적으로 연결되어 기록될 수도 있다. 다만 기여 블록이 메인 블록체인 네트워크에 기록되는 양상과 관련한 예시에 불과하다. 따라서 기여 블록이 메인 블록체인 네트워크에 기록되는 방식은 상술한 예에 한정되지 않는다. 도 8은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 메인 블록체인 네트워크에 기 록하도록 야기하는 일례를 나타낸 도면이다. 도 8을 참조하면, 프로세서는 협동 게임이 부분적 또는 전체적으로 완료되어 기여도 트랜잭션이 생성되면, 적어도 하나의 유저와 관련된 기여도 트랜잭션을 포함하는 기여 블록을 생성할 수 있다(S330). 프로세서는 단계(S330)에 의해 생성된 기여 블록을 서브 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송할 수 있다(S340). 본 개시의 몇몇 실시예에 따른 게임 아이템 분배 방법에서는 서브 블록체인 네트워크(미도시)를 이용할 수 있다. 서브 블록체인 네트워크는 도 7에서 상술한 메인 블록체인 네트워크와는 별도의 블록체인 네트워크 일 수 있다. 또한, 서브 블록체인 네트워크란, 적어도 하나 이상의 기여 블록들의 체인 구조를 저장하고 있는 분산 네트워크를 의미할 수 있다. 서브 블록체인 네트워크에 관한 일례로, 서브 블록체인 네트워크는 메인 블록체인 네트워크와는 별도의 오프 체인 또는 사이드 체인일 수 있다. 사이드 체인이란 메인 블록체인 네트워크 옆에 나란히 붙어서 작동하는 블록체인으로 정의될 수 있고, 오프 체인은 메인 블록체인 네트워크 외부에 트랜잭션이 기록되는 블록체인으로 정의될 수 있다. 이러한 사이드 체인 또는 오프 체인은 오프 체인에 기록된 트랜잭션을 처리하고 난 핵심 데이 터만을 메인 블록체인에 기록할 수 있다. 따라서, 서브 블록체인이 별도의 오프 체인 또는 사이드 체인일 경우, 프로세서는 서브 블록체인에 포함된 기여도를 이용한 연산의 결과를 메인 블록체인 네트워크에 반영할 수 있다. 다만 서브 블록체인 네트워크에 대한 예시에 불과하며, 서브 블록체인 네트워크는 상술한 예에 한정되지 않는다. 오프 체인을 이용할 경우, 메인 블록체인 네트워크에서 해결하지 못했던 확장성 문제를 해결할 수 있다. 따라서 게임 아이템 분배에 응모하고자 하는 유저가 많을 경우, 사이드 체인 또는 오프 체인 형태의 서브 블록체인 네 트워크를 이용함으로써 게임 아이템 분배 과정이 원활하게 수행되도록 할 수 있다. 도 9는 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 게임 서버의 저장부에 기록된 메인 블록체인에 연결되는 블록에 기록하는 일례를 나타낸 도면이다. 도 9를 참조하면, 프로세서는 협동 게임이 부분적 또는 전체적으로 완료되어 게임 아이템이 생성되면, 추 첨 시드를 생성할 수 있다(S110). 도 5에서 상술한 바와 같이, 추첨 시드는, 협동 게임이 부분적 또는 전체적으로 완료되어 게임 아이템의 분배가 가능한 상태가 되었을 때, 게임 아이템을 분배하기 위한 특정 값을 의미할 수 있고, 프로세서가 이를 생성할 수 있음은 도 5에서 상술하였다. 프로세서는 단계(S110)에서 생성된 추첨 시드의 해시 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드에 전송할 수 있다(S120). 프로세서는 아이템 분배시 추첨 시드를 생성한 후에 메모리에 저장된 해시 함수(hash function)을 이용하 여 추첨 시드의 해시 값(hash value)을 생성할 수 있다. 여기서, 프로세서는 메모리에 저장된 MD(Message-Digest)1, MD4, MD5, SHS(Secure Hash Standard), SHA(Secure Hash Algorithm)-256, SHA-512, HAS-160(Hash Algorithm Standard-160), HAVAL(hashing Algorithm with Variable Length of output), RIPEMD(RACE Integrity Primitives Evaluation Message Digest)-160 등과 같은 해시 함수를 이용하여 추첨 시드의 해시 값 을 생성할 수 있다. 특별한 사정이 없는 한 블록체인 네트워크 상에 기록된 모든 데이터는 블록체인 네트워크 상에 참여한 모든 노 드에게 공개된다. 이는 본 발명에 따른 메인 블록체인 네트워크도 마찬가지이다. 즉, 블록체인 네트워크 상에 기록된 추첨 시드, 응모 시드 및 기여도는 메인 블록체인 네트워크에 참여한 모든 노드에게 공개될 수 있다. 이러한 전제하에서, 추첨 시드가 분배 시작 블록에 평문으로 포함되면 협동 게임에 참여한 복수의 유 저는 추첨 시드를 알게 될 수 있다. 따라서 사실상 추첨에 의한 분배가 무의미해질 수 있다. 따라서, 본 개시는 커밋-리빌 스킴(Commit-Reveal scheme) 방법을 이용하여 추첨 시드에 관한 정보를 메인 블록 체인 네트워크에 포함한 노드에게 전달하여 이러한 문제를 방지할 수 있다. 커밋-리빌 스킴(Commit-Reveal scheme)은, 특정 시점이 되기 전 자신이 숨기고자 하는 값을 해시하여 블록체인 상에 등록하고(Commit), 상기 특정 시점이 도래하면 해시되기 전의 원래 값을 공개(Reveal)하여, 응모/투표 등에 있어 특정 시점 전까지 정보 의 보안을 유지할 수 있는 방법이다. 이를 본 발명에 적용하면, 프로세서가 추첨 시드를 해시한 해시 값을 메인 블록체인 네트워크에 기록하도록 야기하는 것은 응모 개시 시 추첨 시드를 커밋(Commit)하기 위한 것 이다. 구체적으로, 프로세서가 복수의 유저들의 응모 전(즉, 응모 블록 생성 전)에 추첨 시드를 커밋(Commit)하 고, 아이템 분배 개시시에 이미 생성된 추첨 시드의 리빌(Reval)이 이뤄지면 메인 블록체인 네트워크에 포 함된 모든 노드가 이를 확인할 수 있다. 따라서 추첨 시드와 관련한 공정성이 확보될 수 있다. 프로세서는 상기 추첨 시드의 해시 값이 메인 블록체인 네트워크상에 기록되고 나면, 복수의 유저 각 각으로부터 협동 게임 내에서 기 설정된 입력을 수신하는 것과 연동하여, 복수의 유저 각각과 관련된 복수의 응 모 시드를 메인 블록체인에 기록할 수 있다(S130). 본 개시에 따른 일례에서, 응모 시드는 게임 서버의 프로세서 또는 클라이언트 단말에 의하여 생성될 수 있다. 이러한 응모 시드는 응모 블록에 포함되어 메인 블록체인 네트워크에 기록될 수 있 다. 이 경우, 응모 블록은 적어도 하나 이상의 응모 시드를 포함할 수 있으며, 응모 블록은 프로세서 또는 클라이언트 단말에 의하여 생성될 수 있다. 응모 블록의 생성에 관한 일례로, 클라이언트 단말이 메인 블록체인 네트워크에 포함된 노드일 경우, 클라이언트 단말은 유저로부터 기 설정된 입력을 받으면 응모 블록을 생성할 수 있다. 다른 일례로, 프로세서가 클라이언트 단말로부터 기 설정된 입력을 수신할 경우, 프로세서는 적 어도 하나의 응모 시드를 포함하는 응모 블록을 생성할 수 있다. 이렇게 생성된 응모 블록은 메인 블록체 인에 연결되어, 복수의 유저 각각과 관련된 응모 시드가 메인 블록체인에 기록될 수 있다. 다만 이는 응모 블록의 생성에 관한 예시에 불과하며, 응모 블록의 생성 방법은 이에 한정되지 않는다. 여기서 기 설정된 입력이란 구체적으로 게임 아이템 분배 신청 버튼을 클릭하는 입력, 게임 아이템을 클릭하는 입력 등을 의미할 수 있으며, 이에 한정되지 아니한다. 응모 블록을 생성하기 위해서 상술한 기 설정된 입력과 합의 알고리즘이 연동될 수 있다. 즉, 클라이언트 단말 또는 프로세서는 상술한 기 설정된 입력을 수신한 경우에 합의 알고리즘을 통해 블록을 생성할 수 있다. 구체적으로, 프로세서는 기 설정된 입력을 수신하면 작업 증명(Proof of Work)을 수행하기 위해 기 설정된 조건을 만족하는 Nonce값을 찾는 해시 연산을 수행할 수 있다. 기 설정된 입력과 응모 블록의 채굴이 연동되는 것은 상술한 예에 한정되지 않는다. 프로세서는 단계(S130)에서 복수의 응모 시드를 메인 블록체인에 기록하고 나면, 추첨 시드의 원본 값을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드로 전송할 수 있다(S140). 추첨 시드의 원본 값은 해시되지 않은, 원 생성된 추첨 시드 그 자체로 정의될 수 있다. 추첨 시드의 원본 값을 분배 결과 블록에 기록하도록 야기하는 것은, 상술한 커밋-리빌 스킴(Commit-Reveal scheme)에서 리빌(Reveal) 에 해당한다. 이를 통해 협동 게임에 참여한 복수의 유저들이 추첨 시드의 해시 값 및 원본 값 간의 비교를 통해 게임 아이템의 분배가 공정하게 수행되었는 지 확인할 수 있어, 분배의 공정성 및 투명성이 확보될 수 있다. 도 10은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 추첨 시드를 생성하는 일례를 나타낸 도면이다. 도 10을 참조하면, 프로세서는 협동 게임이 부분적 또는 전체적으로 완료되어 게임 아이템이 생성되면, 기 설정된 방법에 의해 생성된 시드 값을 이용하여 난수를 생성할 수 있다(S111). 도 5에서 상술한 바와 같이, 추첨 시드의 생성은 기 설정된 규칙 또는 난수 생성 알고리즘에 기초할 수 있다. 프로세서가 난수 생성 알고리즘에 기초하여 추첨 시드를 생성할 경우, 난수 생성을 위한 시드를 우선 생성 할 수 있다. 구체적으로, 게임 서버의 저장부에는 시드 값을 생성하는 알고리즘이 저장되어 있을 수 있다. 그리고, 프로세서는 상기 알고리즘을 이용하여 시드 값을 생성할 수 있다. 일례로, 프로세서는 제 1 당첨 값의 생성을 위한 시드 값으로써 분배 시작 블록의 높이, 블록 생성 시간 및 블록 해시 값을 이용할 수 있다. 여기서, 분배 시작 블록의 높이는 제네시스 블록(블록체인에 기록된 최초 생성 블록)으로부터 현재 블록 (이 경우에는, 분배 시작 블록)까지 블록이 만들어진 수를 의미한다. 또한, 블록의 생성 시간은, 분배 시작 블 록이 블록체인을 구성하는 적어도 하나의 노드에서 합의 알고리즘을 거쳐 생성될 때의 시간을 의미한다. 또한, 블록 해시 값은, 분배 시작 블록의 블록 헤더의 구성요소들을 조합한 값을 해시 함수를 통하여 변환한 값 을 의미한다. 상술한 시드 생성 방법은 예시에 불과하며, 시드 생성 방법은 상술한 이에 한정되지 않는다. 한편, 프로세서는 생성된 시드 값을 난수 생성 알고리즘에 대한 입력으로 하여 난수를 생성할 수 있다. 여 기서, 난수 생성 알고리즘으로 중앙제곱법, 선형합동법, 메르센 트위스터, XOR 시프트, HRNG(Hardware Random Number Generator) 등이 이용될 수 있다. 프로세서는 생성된 상기 난수를 추첨 시드로 결정할 수 있다(S112). 커밋-리빌 스킴(Commit-Reveal scheme)을 이용하면 블록체인 네트워크를 통해 게임 아이템의 분배 과정에 있어 서 추첨 시드의 공정성을 보증할 수 있다. 도 11은 본 개시의 몇몇 실시예에 따른 게임서버의 프로세서가 기여도 트랜잭션에 포함된 기여도에 기초하여 당 첨자 결정 데이터를 연산하는 일례를 나타낸 도면이다. 도 11을 참조하면, 프로세서는 응모 블록이 메인 블록체인 네트워크에 기록되고 나면, 메인 블 록체인을 검색하여 복수의 유저 각각의 응모 이력을 인식할 수 있다(S510). 프로세서가 응모 이력을 인식하기 위해 메인 블록체인을 검색하는 일례로, 도 5에서 상술한 바와 같이, 프 로세서는 메인 블록체인을 순회할 수 있다. 다른 일례로, 프로세서는 저장부에 기록된 개별 유 저 식별 정보 및 이에 대응하는 응모 블록에 대한 참조 정보를 인식할 수 있다. 상술한 검색 방법은 예시에 불 과하며, 블록체인을 검색하는 방법은 이에 한정되지 않는다. 프로세서는 메인 블록체인을 검색하여, 복수의 유저 각각의 응모 이력 유저 식별 정보에 대응시켜 인식할 수 있다. 프로세서는 인식한 응모 이력 및 기여도에 기초하여 복수의 유저 각각에 대한 응모 가점을 연산할 수 있다 (S520). 여기서, 응모 가점은 추첨 시드와 응모 시드 간의 차이를 보정하기 위한 값으로 정의될 수 있다. 구체적으로, 프로세서는 인식한 복수의 유저 각각의 응모 이력에 기 결정된 값을 곱한 값을 응모 가점으로 결정할 수 있다. 다만, 이에 한정되는 것은 아니고, 프로세서는 다양한 산출 방식으로 응모 가점을 결정할 수 있다. 프로세서는, 복수의 유저 각각에 대한 가점이 결정된 경우, 게임 서버 내부 또는 외부에 위치한 저장부 에 응모 가점에 대한 데이터를 저장할 수 있다. 예를 들어, 프로세서는 유저의 유저 식별 정보를 이용하여 응모 가점에 대한 데이터를 저장할 자료구조(예 를 들면, 배열, 리스트 등)를 생성할 수 있다. 프로세서는 자료 구조가 생성됨에 따라, 개별 유저 각각의 응모 가점과 유저 각각의 유저 식별 정보를 대응시켜서 응모 가점에 대한 데이터를 저장부에 저장할 수 있 다. 또한, 응모 이력에 곱해지는 기 결정된 값은 게임 서버의 저장부에 기 저장되어 있을 수 있다. 다만, 이는 응모 가점을 결정하는 예시에 불과하며, 응모 가점을 결정하는 방법은 이에 한정되지 아니한다. 응모 가점은 게임 아이템 분배를 위한 추첨 시 협동 게임에 참여한 유저의 이전 응모 이력을 반영하기 위한 것 이다. 응모 가점을 통해 유저의 이전 응모 이력을 반영함으로써, 게임 아이템 분배가 편중되지 않을 수 있다. 따라서 유저들의 협동 게임 참여에 대한 의욕을 고취시킬 수 있다. 프로세서는 추첨 시드의 원본 값, 응모 시드 및 단계(S520)에서 연산된 응모 가점에 기초하여 당첨자 결정 데이터를 연산할 수 있다(S530). 본 단계를 통해 연산되는 당첨자 결정 데이터는 게임 아이템 분배를 위한 당첨자 결정의 기준일 수 있다. 즉, 당첨자 결정 데이터란, 게임 아이템을 분배 받기 위한 기준이 되는 데이터로 정의될 수 있다. 구체적으로, 당첨 자 결정 데이터는 특정한 자연수, 알파벳 등으로 표현될 수 있다. 도 12는 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 복수의 유저 각각과 관련된 복수의 응모 시드를 메인 블록체인에 기록하는 일례를 나타낸 도면이다. 도 12를 참조하면, 프로세서는 협동 게임이 종료된 후, 복수의 유저 각각과 관련된 클라이언트 단말 로부터 기 설정된 입력과 연관된 응모 블록 생성 요청 신호를 수신할 수 있다(S131). 본 개시의 몇몇 실시예에 따른 프로세서는 상술한 응모 블록을 생성할 수 있다. 이 때, 프로세서 는 클라이언트 단말로부터 응모 블록 생성 요청 신호가 수신된 경우에 응모 블록을 생성할 수 있다. 응모 블록 생성 요청 신호는 도 5에서 상술한 기 설정된 입력과 연관된다. 즉, 상술한 기 설정된 입력(예를 들 면, 게임 내 아이템의 클릭)이 수행되면, 클라이언트 단말은 응모 블록 생성 요청 신호를 생성하여 게임 서버로 전송할 수 있고, 프로세서는 통신부를 통해 이를 수신하여 응모 블록을 생성할 수 있다. 프로세서는 응모 블록 생성 요청 신호를 통신부를 통해 수신한 경우, 응모 시드를 포함하는 응모 블 록을 생성할 수 있다(S132). 프로세서는 단계(S132)를 통해 생성된 응모 블록을 메인 블록체인 네트워크에 포함된 적어도 하나의 노드 로 전송할 수 있다(S133). 메인 블록체인에 추첨 시드의 해시 값, 유저의 응모 시드 추첨 시드의 원본 값 및 경우에 따라서는 기여도까지 기록될 수 있다. 따라서 메인 블록체인 네트워크에 포함된 복수의 노드들과 관련된 유저들이 분배 결과를 확인할 수 있으므로, 게임 아이템 분배의 투명성이 증대된다. 도 13은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 응모 블록을 생성하는 일례를 나타낸 도면이다. 도 13을 참조하면, 프로세서는 기여도가 기 설정된 조건을 만족하는지 여부를 인식할 수 있다(S132a). 본 개시의 몇몇 실시예에 따른 프로세서는 응모 블록을 생성하기 전에 해당 응모 블록과 관련된 적어도 하 나의 유저들이 응모 블록 생성을 위한 기 설정된 조건을 만족했는지 여부를 인식할 수 있다. 구체적으로, 프로세서는 응모 블록을 생성하기 전, 생성될 응모 블록과 관련된 적어도 하나의 유저 식별 정보를 인식할 수 있다. 해당 유저 식별 정보에 기초하여, 프로세서는 해당 유저 식별 정보와 관련된 기여 도 트랜잭션을 인식할 수 있다. 기여도 트랜잭션에 포함된 기여도 정보에 기초하여, 프로세서는 생성될 응 모 블록과 관련된 적어도 하나의 유저 각각의 기여도가 기 설정된 조건을 만족하는지 여부를 인식할 수 있다. 기 설정된 조건을 만족한다는 것은, 예를 들면, 인식된 유저의 기여도가 기 설정된 임계 값을 만족하는 경우를 포함할 수 있다. 다만, 기 설정된 조건을 만족하는 경우는 이에 한정되지 않는다.프로세서는 기여도가 기 설정된 조건을 만족한 경우(132a, Yes) 응모 블록을 생성할 수 있다(S132b). 또, 프로세서는 기여도가 기 설정된 조건을 만족하지 못한 경우(132a, No) 응모 블록을 생성하지 않을 수 있다(S132c). 상술한 바에 의하여, 프로세서는 아이템 분배에 응모한 유저가 협동 게임의 보상을 받을 자격이 있는지 여 부를 기여도에 기초하여 결정할 수 있다. 따라서, 협동 게임의 클리어에 아무런 기여도가 없는 사람들은 아이템 분배에서 배제된다. 그러므로 유저들의 협동 게임에 대한 참여 의욕을 증가시킬 수 있다. 도 14는 본 개시의 몇몇 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도시한다. 도 14에서 도시되는 컴퓨터는, 게임 서버, 메인 블록체인 네트워크, 클라이언트 단말, 통 신 네트워크를 구성하는 컴퓨팅 장치 중 적어도 하나에 대응될 수 있다. 본 개시내용이 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술 되었지만, 당업자라면 본 개시내용 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으 로서 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 본 명세서에서의 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로시져, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일- 프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체 로서, 휘발 성 및 비휘발성 매체, 일시적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포 함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매 체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정 보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유 선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것 의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 예를 들어, USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 저장 매체에 대한 설명이 HDD, 이동식 자기 디스 크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 저장 매체도 역시 예시적인 운영 환경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 서버 컴퓨 터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네 트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하 지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망 (LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워 크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 서버에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터페이스(114 2)를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로그램 모듈 들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시적인 것이 며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a,b,g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네 트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비인 가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장 매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 용어 \"기계-판독가능 매체\"는 명령(들) 및/또는 데이터를 저장, 보유, 및/또는 전달할 수 있 는 무선 채널 및 다양한 다른 매체를 포함하지만, 이들로 제한되는 것은 아니다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상 의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제 시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상 의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제 시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14"}
{"patent_id": "10-2019-0073653", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다양한 양상들이 이제 도면들을 참조로 기재되며, 여기서 유사한 참조 번호들은 총괄적으로 유사한 구성요소들 을 지칭하는데 이용된다. 이하의 실시예에서, 설명 목적을 위해, 다수의 특정 세부사항들이 하나 이상의 양상들 의 총체적 이해를 제공하기 위해 제시된다. 그러나, 그러한 양상(들)이 이러한 구체적인 세부사항들 없이 실시 될 수 있음은 명백할 것이다. 도 1은 본 개시의 몇몇 실시예에 따른 게임 아이템 분배를 수행하기 위한 시스템에 대한 일례를 나타낸 도면이 다. 도 2는 본 개시의 몇몇 실시예에 따른 게임 서버를 구성하는 컴퓨팅 장치의 구성의 일례를 나타낸 도면이다. 도 3은 본 개시의 몇몇 실시예에 따른 메인 블록체인에 포함된 블록의 구성의 일례를 나타낸 블록도이다. 도 4는 본 개시의 몇몇 실시예에 따른 기여 블록의 구성의 일례를 나타낸 블록도이다. 도 5는 본 개시의 몇몇 실시예에 따른 게임 서버가 블록체인을 이용한 아이템 분배 방법을 수행하는 일례를 나 타낸 신호 흐름도이다. 도 6은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 생성하기 위해 기여도를 연산하는 일례를 나타낸 순서도이다. 도 7은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 메인 블록체인 네트워크에 기 록하도록 야기하는 일례를 나타낸 도면이다. 도 8은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 기여도 트랜잭션을 메인 블록체인 네트워크에 기 록하도록 야기하는 일례를 나타낸 도면이다. 도 9는 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 협동 게임이 시작되기 전, 추첨 시드 또는 응모 시드 중 적어도 하나를 게임 서버의 저장부에 기록된 메인 블록체인에 연결되는 블록에 기록하는 일례를 나타낸 도면이다. 도 10은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 추첨 시드를 생성하는 일례를 나타낸 도면이다. 도 11은 본 개시의 몇몇 실시예에 따른 게임서버의 프로세서가 기여도 트랜잭션에 포함된 기여도에 기초하여 당 첨자 결정 데이터를 연산하는 일례를 나타낸 도면이다. 도 12는 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 복수의 유저 각각과 관련된 복수의 응모 시드를 메인 블록체인에 기록하는 일례를 나타낸 도면이다. 도 13은 본 개시의 몇몇 실시예에 따른 게임 서버의 프로세서가 응모 블록을 생성하는 일례를 나타낸 도면이다. 도 14는 본 개시의 몇몇 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도시한다."}
