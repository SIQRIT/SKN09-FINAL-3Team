{"patent_id": "10-2021-0188850", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0099470", "출원번호": "10-2021-0188850", "발명의 명칭": "CNN을 활용한 AES 비밀키 획득 모델 생성 방법 및 CNN을 활용한 AES 비밀키 획득 방법", "출원인": "동서대학교 산학협력단", "발명자": "김기환"}}
{"patent_id": "10-2021-0188850", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "암호처리장치의 전력신호를 측정하는 정보추출단계;측정된 전력신호 중 암호처리 과정에 따라 측정된 전력신호 행렬(T)을 생성하는 단계;데이터 벡터(d)와 가능한 모든 비밀키 벡터(k)로 추정된 연산 값 행렬(V)를 생성하는 단계;상기 추정된 연산 값 행렬(V)에 해밍 거리 모델 또는 해밍 무게 모델을 적용하여 추정된 전력신호 행렬(H)로 변환하는 단계;상기 측정된 전력신호 행렬(T)과 추정된 전력신호 행렬(H)간의 상관계수를 계산하는 단계; 및상기 측정된 전력신호에 대한 상관계수를 CNN(Convolution Neural Network)으로 학습하여 모델을 생성하는단계;를 포함하는, CNN을 활용한 AES 비밀키 획득 모델 생성 방법"}
{"patent_id": "10-2021-0188850", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1항의 CNN을 활용한 AES 비밀키 획득 모델 생성 방법을 사용하여 생성된 모델을 이용하는 CNN을 활용한AES 비밀키 획득 방법에 있어서,상기 선정된 모델에 AES 비밀키 획득을 위해 측정된 새로운 전력신호를 입력하여 추측키(결과값)를 산출하는 단계;를 포함하는, CNN을 활용한 AES 비밀키 획득방법"}
{"patent_id": "10-2021-0188850", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1항의 CNN을 활용한 AES 비밀키 획득 모델 생성 방법 또는 청구항 2항의 CNN을 활용한 AES 비밀키 획득방법을 실행시키기 위하여 컴퓨터로 판독가능한 기록매체에 저장된, 컴퓨터로 읽을 수 있는 기록매체에 기록된컴퓨터프로그램"}
{"patent_id": "10-2021-0188850", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1항의 CNN을 활용한 AES 비밀키 획득 모델 생성 방법 또는 청구항 2항의 CNN을 활용한 AES 비밀키 획득방법을 실행시키는, CNN을 활용한 AES 비밀키 획득 장치"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 CNN(Convolutional Neural Network)을 활용한 AES(Advanced Encryption Standard) 비밀키 획득방법에 관한 것으로, 더 상세하게는 합성곱 신경망을 이용한 전력분석을 통해 AES의 비밀키를 획득하는 방법, 프로그램 및 장치에 관한 것이다. (뒷면에 계속)"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 CNN(Convolutional Neural Network)을 활용한 AES(Advanced Encryption Standard) 비밀키 획득방법 에 관한 것으로, 더 상세하게는 합성곱 신경망을 이용한 전력분석을 통해 AES의 비밀키를 획득하는 방법, 프로 그램 및 장치에 관한 것이다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대칭키 암호는 송·수신자 모두 동일한 비밀키에 의하여 암호화 및 복호화 과정을 수행하여 구조가 간단하고, 암·복호화 속도가 빠르다. 하지만 다수의 사용자가 자료를 공유할 경우 암호화에 사용하는 비밀키를 모든 사용 자에게 안전하게 공유해야 하는 문제가 있다. 대칭키 암호는 한 번에 암호화 하는 크기에 따라서 블록 암호 (Block Cipher)와 스트림 암호(Stream cipher)로 구분한다. 블록 암호는 라운드 함수를 적용하는 방법에 따라 나눌 수 있으며, 종류는 크게 SPN(Substitution Permutation Network) 방식과 파이스텔(Feistel) 구조로 나뉜다. SPN 구조는 입력을 여러 개의 작은 블록으로 나누어 S-박스 와 P-박스를 통해 전치하는 과정을 반복한다. 블록 암호의 대표적인 암호 알고리즘은 2001년 미국 표준 기술 연구소(NIST)에서 표준 암호로 채택된 AES가 있 다. AES는 데이터 블록을 절반으로 나누어 절반만 수정하고 교환하는 파이스텔 구조를 사용하지 않고 각 라운드에서 대체(substitution)와 치환(permutation)을 사용하여 데이터 전체를 병렬 연산한다. AES 연산은 128비트의 데이 터 블록을 입력받아 바이트 대체(Substitute bytes), 행 이동(Shift rows), 열 섞기(Mix columns), 라운드 키 더하기(Add Round Key) 단계를 반복하여 보안성을 향상시킨다. 암호 알고리즘의 안전성은 수학과 통계를 근거로 증명한다. 지금까지 AES 암호 알고리즘으로 암호화된 암호문을 비밀키 없이 평문으로 변환하기 위해서는 무차별 대입 공격이 유일한 방법이다. 만약 AES 암호 알고리즘을 256 비트 비밀키로 암호화된 암호문을 초당 100경( )번의 무차별 대입 공격이 가능한 슈퍼컴퓨터로 평문으로 해독 하려면 이론적으로 3000극( )년이 필요하다. 따라서 현존하는 컴퓨터 성능으로는 비밀키 없이 암호문을 해 독할 수 없다고 정의한다. AES는 비밀키를 찾는 것이 매우 어렵다. 그러나 암호 알고리즘은 하드웨어를 통해 구현되기에 물리적으로 미세 하게 다른 온도, 연산 시간, 소비 전력, 전자기파, 소리 등의 누설 정보가 발생한다. 즉, 암호 누설 정보를 수 집하고 분석하는 것으로 비밀키를 추측하는 부채널 공격이 가능하다. 부채널 공격은 아래와 같이 분류할 수 있 다. 소요시간 분석(Timing Attack) - 다양한 계산을 하는 데 소요되는 시간을 측정하는 것을 기반으로 하는 공격이 다. 전력분석 공격(Power Analysis) - 연산중에 하드웨어가 소비하고 있는 전력 변화를 측정하는 것을 기반으로 하 는 공격이다. 전자기파 공격(Electromagnetic Attacks) - 하드웨어 외부로 방출하는 전자기파를 해독하여 평문 및 여러 정보 를 얻어낼 수 있는 공격이다. 음성암호 해독(Acoustic Cryptanalysis) - 연산중에 하드웨어가 생성한 음향을 측정하여 이를 악용하는 공격이 다(전력 분석과 비슷하다). 차분오류 분석(Differential Fault Analysis) - 계산 과정에 의도적으로 오류를 끼어 넣어 암호를 발견하는 공 격이다. 잔존 데이터(Data Remanence) - 삭제된 것으로 추정된 민감한 데이터를 읽는 공격이다. 로우 해머 공격(Row Hammer) - 인접한 메모리 영역에 엑세스하는 형태로 접근 금지된 메모리 영역을 수정하는 공격이다. 부채널 공격 중 가장 대표적인 공격 방법은 전력 분석 공격이다. 특히 1998년 Paul Kocher에 의해 DES가 공격을 계기로 현대 암호시스템을 위협하는 가장 강력한 공격 수단으로 연구됐으며 AES, RSA, ECC 등 거의 모든 암호 알고리즘에 취약점 분석으로 활용되고 있다. 전력분석공격은 차분전력분석과 상관전력분석으로 구분된다. 두 공격의 공통점은 암호 알고리즘의 소비전력을 사용하는 것이며, 차이점은 비밀키를 추측하는 방법이 다른 것이다. 전력 분석 공격의 원리는 도 1에서 보는 바 와 같이 알고리즘 진행 중에 수학식 1처럼 임의의 특정시점( )에서 평문( )과 비공개된 비밀키( )을 배타적 논 리합으로 연산하여 암호문( )을 계산한다. 수학식 1"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "만약 공격자가 암호 알고리즘을 가지고 있는 경우 암호학 관점에서 임의로 선택 가능한 는 알 수 있지만, 암호 연산이 진행되는 중간에 발생하는 와 는 알 수 없다. 그러나 공격자는 연산이 발생하는 시점을 알고 있다고 가정하고 있기에 가 계산되는 순간 소비되는 전력량은 오실로스코프를 사용하여 측정된 전력신호( )를 수집할 수 있다. 는 이 연산하는 행위에서 비롯된 흔적이기에 매우 높은 상관도를 가지게 된다. 따라서 전력분석공격은 선정 된 특정시점( )에서 와 의 높은 상관도를 근거로 와 로 치환하여 역산이 가능하다. 이 때, 측정된 전력신호( )는 x축이 시간 y축이 순간 소비전력인 시계열 데이터인 반면, 암호화된 값( )은 0과 1로 구성된 핵사 데이터이므로 전혀 다른 속성을 가지고 있어 치환은 가능하지만 연산은 불가능하다는 문제에 직면한다. 이 문제를 해결하는 방법은 측정된 전력신호()에 해밍무게(HW: Hamming Weight) 가정(모델)과 해밍거리(HD: Hamming Distance) 가정(모델)을 사용하는 것이다. 전력분석 공격은 DPA와 CPA로 구분된다. 먼저 DPA는 개의 평문에서 임의의 특정시점()에 를 입력하고 비밀키 를 이용하여 소비 전력 신호 ()를 수집한다. 이후 수집한 데이터의 잡음신호 감소와 차분 신호의 명확성을 증가시키기 위해 통계적인 방 법을 사용한다. 대표적으로 분류함수 를 정의하며, 이 함수는 데이터와 비밀키의 연산 후 생성된 결과 값의 b번 째 비트 값을 입력받은 파형의 결과를 0 또는 1로 분류한다. 분류된 0 그룹의 파형과 1 그룹의 파형의 평균과 그룹간 평균의 차이를 계산하면 추측한 비밀키가 정확한 비밀 키인지 판별할 수 있다. 만약 추측한 비밀키가 정확한 비밀키인 경우 평균의 차이가 크며, 그렇지 않을 경우 피 크가 작아진다. 다음으로 CPA는, DPA와 동일하게 개의 평문에서 임의의 특정시점()에 를 입력하고 비밀키 를 이용하 여 소비 전력 신호()를 수집한다. 이후 비밀키가 사용 가능한 모든 범위인 256개의 데이터 집합이 생성되며, 이를 추정치라고 한다. 이후 소비 전력 신호를 해밍무게 가정 혹은 해밍 거리 가정 방법을 사용하여 계산하고 추정치와 피어슨 상관계 수 함수를 사용하여 계산하면 모든 추측키 가운데 하나의 추측키에서 가장 상관 계수가 검출된다. CPA는 가장 높은 상관 계수가 출력된 추측키를 비밀키로 출력하게 된다. CPA는 중간값과 암호 모듈 동작 시에 수집한 파형 간의 연관성 정도를 통계적으로 계산하여 가장 연관이 높은 경우를 이용해 분석한다. 해밍거리와 해밍무게는 Richard Wesley Hamming이 저술한 \"Error detecting and error correcting codes\"에서 개념을 도입하여 만들어졌다. 해밍 거리(d)는 전기 통신에서 이진수를 사용하여 고정된 임의의 길이(n)를 시계열로 나열한 비트스트림에서 틀 린 비트 개수를 말한다. 이때 비트스트림의 최소 해밍 거리가 d인 경우 최대 d-1비트 오류를 감지할 수 있으며 최소한 비트 오류를 수정할 수 있다. 예를 들어, 3비트로 구성된 비트스트림에 대한 모든 경우의 수는 8개로 000, 001, 010, 011, 100, 101, 110, 111로 구성할 수 있다. 만약 기준을 \"000\"로 단일 비트 오류 가 발생하면 001, 010, 100이 된다. 이때 기준과 단일 비트 오류간의 해밍 거리는 1이며, 0비트 오류를 감지할 수 있고 최소 1비트 오류 수정이 가능하다. 또 다른 예시로 “000”과 “111”은 해밍 거리가 3이며, 오류 감지 는 2비트, 오류 수정은 1비트가 가능하다. 해밍 무게(w)는 정보 이론, 부호화, 암호학을 포함한 여러 분야에서 사용된다. 대표적으로 비트스트림 A, B의 해밍 거리는 의 해밍 중량으로 계산할 수 있다. 예를 들어 16비트 이진수 a=0110 1100 1011 1010의 비트 가 1인 수를 세는 것으로 9라는 결과를 얻을 수 있다. CPA의 경우 컴퓨터에서 해밍 거리를 측정해야하므로 해밍 무게를 사용하며, AES를 사용한다면 각 비밀키는 8비 트로 구성된 16문자로 구성된 비밀키를 사용하므로 각 문자별 해밍 무게는 0부터 9까지 계산할 수 있다. 국내등록특허 제10-1876498호에는 \"마스킹 대응책을 무력화하는 암호 해독 장치 및 방법, 이를 기록한 기록매체\"가 개시되어 있으며, 상기 특허문헌에 기재된 바와 같이 전력분석공격을 통해 비밀키를 산출하는 것이 공지기술로 공개되어 있다. 다만, 전술한 바와 같은 종래 전력분석공격에 따른 비밀키 산출 방법은, 비밀키 산출을 위해 수많은 데이터를 취득하고, 각각의 데이터들에 대해 피어슨 상관계수를 산출하는 등의 과정으로 인해 시간 소요가 매우 크다는 한계점이 있었다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는, 전술한 바와 같은 종래 전력분석에 따른 비밀키 산출 방법의 한계점을 개선 하기 위하여, 비밀키 산출에 소요되는 시간을 현저하게 절감시킬 수 있도록 합성곱 신경망 학습 모델을 활용하 는, CNN을 활용한 AES 비밀키 획득방법을 제공하는 것이다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은 전술한 바와 같은 전력분석에 따른 비밀키 산출 방법의 한계점을 개선하기 위하여, 암호처리장치의 전력신호를 측정하는 정보추출단계; 측정된 전력신호 중 암호처리 과정에 따라 측정된 전력신호 행렬(T)을 생성 하는 단계; 데이터 벡터(d)와 가능한 모든 비밀키 벡터(k)로 추정된 연산 값 행렬(V)를 생성하는 단계; 상기 추 정된 연산 값 행렬(V)에 해밍 거리 모델 또는 해밍 무게 모델을 적용하여 추정된 전력신호 행렬(H)로 변환하는 단계; 상기 측정된 전력신호 행렬(T)과 추정된 전력신호 행렬(H)간의 상관계수를 계산하는 단계; 및 상기 측정 된 전력신호에 대한 상관계수를 CNN(Convolution Neural Network)으로 학습하여 모델을 생성하는 단계;를 포함 하는, CNN을 활용한 AES 비밀키 획득 모델 생성 방법을 제공한다. 또한, 상기 CNN을 활용한 AES 비밀키 획득 모델 생성 방법을 사용하여 생성된 모델을 이용하는 CNN을 활용한 AES 비밀키 획득 방법에 있어서, 상기 선정된 모델에 AES 비밀키 획득을 위해 측정된 새로운 전력신호를 입력하 여 추측키(결과값)를 산출하는 단계;를 포함하는, CNN을 활용한 AES 비밀키 획득방법을 제공한다. 그리고, 상기 CNN을 활용한 AES 비밀키 획득 모델 생성 방법 또는 상기 CNN을 활용한 AES 비밀키 획득 방법을 실행시키기 위하여 컴퓨터로 판독가능한 기록매체에 저장된, 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터 프로그램을 제공한다. 아울러, 상기 CNN을 활용한 AES 비밀키 획득 모델 생성 방법 또는 상기 CNN을 활용한 AES 비밀키 획득 방법을 실행시키는, CNN을 활용한 AES 비밀키 획득 장치를 제공한다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따르면, 전력분석에 따른 비밀키 산출 방법에 비해 비밀키 산출에 소요되는 시간을 현저하 게 절감시킬 수 있다. 또한, 비밀키 산출에 적합한 최적의 인공지능 모델을 도출할 수 있다. 그리고, 비밀키 산출에 가장 큰 영향이 있는 부분을 실시간으로 확인할 수 있다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 문서에 기재된 기술을 특 정한 실시 형태에 대해 한정하려는 것이 아니며, 본 문서의 실시예의 다양한 변경(modifications), 균등물 (equivalents), 및/또는 대체물(alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 본 문서에서, \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등 의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 문서에서 사용된 용어들은 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 다른 실시 예의 범위를 한 정하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 문서에 사용된 용어 들 중 일반적인 사전에 정의된 용어들은, 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시 예들을 배제하도록 해석될 수 없다."}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명의 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야에서 통상의 지 식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다. 또한, 본 발명에 따르는 방법은 컴퓨터로 읽을 수 있는 기록 매체에 컴퓨터가 읽을 수 있는 코드(프로그램)로서 구현하는 것이 가능하다. 컴퓨터가 읽을 수 있는 기록 매체는 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록 장치를 포함할 수 있다. 컴퓨터가 읽을 수 있는 기록 매체의 예로는 ROM, RAM, CD- ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있으며, 또한 캐리어 웨이브(예를 들어 인터넷을 통한 전송)의 형태로 구현되는 것도 포함한다. 또한 컴퓨터가 읽을 수 있는 기록 매체는 네트워크로 연결된 분 산 컴퓨터 시스템에 의하여 분산 방식으로 실행될 수 있는 컴퓨터가 읽을 수 있는 코드를 저장할 수 있다. 1. 상관전력분석공격 계산 상관전력분석공격 계산은 다음과 같은 순서로 진행된다. ① 공격시점의 알고리즘 연산 값 선정 장치에 사용된 암호 알고리즘을 확인하고 해당 알고리즘에서 공격할 시점과 함수의 구조를 로 정의한다. 는 암호 알고리즘을 공격할 시점에 실행되는 함수이며, 는 암호 알고리즘의 평문이며, 는 비밀키를 의 미한다. 선정된 시점에 실행된 연산 값을 분석하여 공격하게 된다. ② 알고리즘 실행 중 전력신호 측정 임의의 암호 알고리즘 에 개의 서로 다른 평문()과 임의의 중간키()를 공격 시점에 해당하는 함수에 입력하여 함수가 반환한 결과()들을 로 표현한다. 이 과정의 데이터 블록을 수식으로 표현하면 수학식 2와 같다. 수학식 2"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "개의 암호화가 연산되는 순간 측정된 각각의 소비전력신호()를 수식으로 표시하면 수학식 3과 같다. 소비전 력신호에서 아주 짧은 시간에 측정된 각각의 값을 로 정의하면 측정이 끝나는 위치가 유동적이므로 임의의 소 비전력신호 길이()를 가지도록 정의된다. 수학식 3"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "측정된 소비전력신호는 측정이 시작되는 지점이 동일하도록 정렬되어야만 전력분석공격이 가능하다. 이 작업을 위해 대표적으로 사용되는 방법은 공격 목표 장비에서 공격하는 타이밍에 맞춰 별도의 트리거 신호를 발생시키는 것으로, 오실로스코프를 이용하여 해당 위치(측정 시작 지점)가 일정하도록 측정할 수 있다. 공격 대상인 암호 알고리즘을 서로 다른 평문과 임의의 비밀키로 번 암호화하는 과정에서 측정된 서로 다른 소비전력신호는 서로 다른 소비전력신호의 길이()를 가지고 있다. 이 데이터를 수식으로 표현하면 수학식 4와 같다. 수학식 4"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "③ 가능한 비밀키에 대한 연산 값 추정 공격 대상 함수에서 입력되는 비밀키가 개 인 경우 추정된 비밀키()를 벡터로 표시하면 수학식 5와 같다. 수학식 5"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "여기까지 진행되면 공격대상을 결정해야한다. 본 발명의 실시 예에서는 AES의 AddRoundKey를 공격대상으로 지 정하여 실험을 진행했다. AddRoundKey 함수는 평문과 비밀키 그리고 암호문은 0부터 255까지 8비트로 표현되며, 각각 256개의 경우의 수를 가진다. 1차원 배열인 추정된 비밀키()와 평문()을 암호 함수로 연산한 추정된 배열()은 크기의 2차원 배열로 생성된다. 즉 추정된 행렬()은 수학식 6과 같이 계산이 가능하다. 수학식 6"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "④ 추정된 연산 값을 추정 전력신호 값으로 변환 암호학의 기본은 평문과 비밀키를 배타적 논리합으로 연산하여 암호문을 얻는 것이다. 결국 평문과 비밀키를 배 타적 논리합으로 연산한 결과는 임의의 번째 평문과 비밀키를 사용한 임의의 암호 알고리즘 함수 와 같고 암호문은 번째 소비전력신호()와 같다. 따라서 수학적으로 같은 속성을 띠므로 추정된 연산 값을 추정 전력신호 값으로 치환할 수 있다. 그러나 소비전 력신호는 mV 단위이며, 추정된 행렬은 16진수로 서로 다른 데이터 유형을 가지고 있어 연산이 불가능하다. 수학식 7은 평문과 비밀키 암호문과의 관계가 특정 암호 함수와 소비전력이 관련이 있고 서로 치환할 수 있지만, 암호 함수의 결과와 소비전력은 같은 속성을 갖지 않는다는 것을 의미한다. 수학식 7"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "따라서 추정된 행렬을 해밍 거리, 해밍무게 이론을 사용하여 도 2처럼 추정된 전력신호 행렬()로 변환한다. 해밍무게 모델은 공격시점에서 암호 알고리즘 연산 후의 값에서 임의의 번째 열벡터를 피어슨 상관관계 연산에 사용한다. ⑤ 측정된 전력신호와 추정된 전력신호 분석 피어슨 상관관계 함수는 수학식 8이며, 본 발명의 실시 예에서는 추정된 전력신호와 측정된 전력신호 간의 상관 계수를 계산한다.여기서 는 행렬의 번째 열의 요소이고, 는 행렬의 번째 열의 평균값이다. 는 행렬의 번째 열의 요소이고, 는 행렬의 번째 열의 평균값이다. 수학식 8"}
{"patent_id": "10-2021-0188850", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "피어슨 상관계수 함수를 사용하여 측정된 소비전력신호 행렬()의 번째 열벡터 와 추정된 전력신호 행렬 ()의 번째 열벡터 와 계산하면 도 3의 측정된 전력신호와 추정된 전력신호 간의 상관관계와 같이 나타 낼 수 있다. 에서 는 비밀키, 는 소비전력길이를 나타내며, 는 와 의 상관관계가 클수록 높은 값을 갖는다. 이때 매우 높은(가장 높은) 상관관계가 발견된 비밀키가 찾고자하는 비밀키이다. 2. 상관전력분석 공격 실험 2.1. 데이터 수집 환경 구성 상관전력분석에 대한 실험을 위해서 실험환경을 표 1처럼 구성하였다. 표 1 구분 시스템 사양 운영SW/HW 및 시험도구내용 PC CPU: AMD Ryzen5 1600 RAM: 32GB OS: Windows 10Matlab 2015, Arduino, TekVISA v4.1.1.22아두이노 프로그래밍을 통해 대상 보드에 알고리즘 탑재 후 Matlab을 이용하여 전력신호 수집 및 분석 공격대상보드ATMega328p IC칩 컴퓨터와의 연결을 통해 알고 리즘을 탑재하고 데이터를 주 고받을 수 있는 환경을 셋업 오실로스코프제조사: Tektronix 모델명: DPO4032 대역폭: 350MHz 샘플링: 2.5GS/s 채널: 2ch 제조사: Tektronix 모델명: MSO2012b 대역폭: 100MHz 샘플링: 1.0GS/s 채널: 2chOpen Choice Desktop, Differential Probes차동 프로브를 대상 보드에 연 결 후 소모전력 수집, Open Choice Desktop을 사용하여 측정한 데이터를 저장 삽입된 저항33Ω 10Ω해당 없음 소모 전력을 수집하기 위해서 는 GND에 저항을 삽입해야만 측정을 할 수가 있다. (삽입 된 저항은 대상 보드가 문제없 이 작동하는 범위 내에서 선정 하여 삽입)수집한 데이터 저장과 측정 제어를 담당하는 PC의 CPU는 AMD Ryzen5 1600, RAM크기는 32GB 그리고 OS는 Windows10을 사용하며, Matlab과 TekVISA v4.1.1.22을 설치했다. 공격 대상보드는 AES 암호알고리즘을 추가한 ATMega328p 보드를 사용했다. 미세전력측정이 가능한 오실로스코프는 DPO4032와 MSO2012b를 사용하여 측정했다. 상관전력분석 공격을 성공하기 위해서는 반드시 같은 평문과 비밀키가 설정된 상태에서 약 1,000회 연산하여 소 비 전력을 수집해야한다. 이후 추측 가능한 모든 비밀키와 평문을 해밍거리 함수로 계산하여 앞서 수집한 소비 전력과 피어슨 상관분석 함수를 통해 -1에서 1사이의 값으로 변경한다. 이 계산과정을 통해 모든 비밀키 개수와 동일한 256개의 결과를 획득하게 되며, 가장 높은 상관계수를 가지고 있는 결과와 비밀키 값을 맞추어 결과로 반환(비밀키 획득)한다. 도 4에 도시된 바와 같이 ATMega328p칩의 접지핀(8번)에 10옴 저항을 연결하여, 저항 앞은 오실로스코프의 채널 1로 측정하고 공격대상보드의 SDK핀과 연결된 디지털 19번핀에 오실로스코프 채널 2로 연결했다. 모든 비밀키를 대상으로 임의의 평문을 사용하여 전력파형을 자동으로 수집할 수 있도록 Matlab을 사용하여 제 어 및 데이터 저장을 수행했다. 프로그램 제어는 TCP 프로토콜을 참조하여 도 5처럼 구성하였으며, 대략적인 절차는 초기화, 평문 교환, 연산 및 측정으로 구분된다. 초기화 과정은 Matlab을 중심으로 이루어진다. 먼저 Matlab을 사용하여 오실로스코프와 공격대상보드를 연결하 여 정상적으로 연결된 경우 Matlab에서 AES에 사용할 평문을 무작위로 생성하고 변수로 저장한다. 이때 공격대 상보드는 미리 저장된 AES의 비밀키 사용하여 변수에 할당한다. 평문 교환 과정은 도 5의 5부터 8까지의 과정으로, Matlab에서 공격대상보드로 AES에 사용할 무작위 평문 16바 이트를 송신하고 아두이노에서는 수신 받은 데이터를 똑같이 복사하여 Matlab으로 전송한다. 만약 Matlab에서 수신 받은 데이터가 송신했던 16바이트와 같으면 ACK를 아두이노로 전송하며, 다르면 송신이 실패한 것으로 판단하여 평문 교환 과정을 처음부터 다시 수행한다. 연산 및 측정 과정은 도 5의 9부터 11까지의 과정으로, Matlab에서 아두이노로 RUN을 전송하면 아두이노에서 AES의 AddRoundKey 함수를 연산하는 순간만 트리거 신호를 켠다. 이 순간 오실로스코프 DPO4032 혹은 MSO2012b 를 한 개 선택하여 채널 2에서 트리거 신호를 감지하면 ATMega328p칩의 접지핀과 연결된 채널 1의 소비전력을 측정한다. 만약 측정된 파형의 길이가 정상이면 Matlab에서 공격대상보드로 FIN을 전송하며, 비정상일 경우 FIN 이외의 문자를 송신하고 연산 및 측정 과정을 처음부터 다시 시작했다. 도 5를 정상적으로 1회 수행하면 하나의 샘플을 측정한 것이다. 8비트 환경에서 상관전력분석을 정상적으로 수 행하기 위해서는 임의의 평문과 고정된 비밀키로 측정된 샘플이 최소한 480개 이상 필요하다. 상관전력분석 공 격은 MSO2012b와 DPO4032를 각각 실험했다. MSO2012b는 한 개의 샘플을 측정하고 기록하는 것에 약 4초가 소요 되었으며, DPO4032는 한 개의 샘플을 측정하고 기록하는 것에 약 11초가 소요되었다. 측정 시간이 차이나는 이 유는 MSO2012b와 DPO4032의 대역폭과 샘플링 성능이 다르기 때문이다. 따라서 시간을 x축이라고 가정할 때 1,000,000개의 샘플을 측정하는데 시간 차이가 발생한다. 종래 기술에 따르면, 획득된 비밀키의 정확성을 높이기 위해 많은 샘플 데이터를 측정하고 각각의 데이터에 대 해 연산하는 동안 시간 소요가 매우 크며, 본 발명에서는 이러한 시간 소요를 줄이면서도 정확한 비밀키 결과값 을 획득할 수 있는 모델을 제안한다. 2.2. CPA 실험 1 먼저 MSO2012b의 오실로스코프 설정을 표 2와 같이 설정하였다. 도 6의 (a)는 아두이노 UNO보드에서 AES 비밀키를 10진수 82(16진수로 0x52)로 고정하고 480개의 소비전력샘플 을 측정하여 x축은 시간(μs), y축은 소비전력(mV)으로 겹쳐놓은 것이다. 도 6의 (b)는 사용된 평문과 0부터 255까지의 모든 비밀키 그리고 소비전력을 상관전력분석을 수행한 결과를 x 축은 시간(μs), y축은 피어슨 상관계수로 겹쳐놓은 것이다. 그 결과 x축 50, 비밀키 82에서 가장 높은 상관계 수가 약 0.78이 발견되었다. 표 2 Power Trace Record LengthSampling RateChannel 1 Channel 2 Resistor 480 100k 1.0GS/s 2.0mV 500mV 10Ω 문서에 표기된 단위가 다른데 확인(입력이 안됨) 추가적으로 MSO2012b를 사용하여 다른 비밀키를 사용한 샘플을 측정해보았다. 도 7의 (a)는 아두이노 UNO보드에서 AES 비밀키를 10진수 114(16진수로 0x72)로 고정하고 480개의 소비전력샘플 을 측정하여 x축은 시간(μs), y축은 소비전력(mV)으로 겹쳐놓은 것이다. 도 7의 (b)는 사용된 평문과 0부터 255까지의 모든 비밀키 그리고 소비전력을 상관전력분석을 수행한 결과를 x 축은 시간(μs), y축은 피어슨 상관계수로 겹쳐놓은 것이다. 그 결과 x축 98, 비밀키 114에서 가장 높은 상관계 수가 약 0.62가 발견되었다. 따라서 실험을 통해 AES 비밀키와 비밀키를 연산한 위치를 발견할 수 있다는 것을 확인했다. 다음으로 DPO4032의 오실로스코프 설정을 표 3과 같이 설정하였다. 표 3 Power Trace Record LengthSampling RateChannel 1 Channel 2 Resistor 1000 100k 2.5GS/s 2.0mV 500mV 33Ω 도 8의 (a)는 아두이노 UNO보드에서 AES 비밀키를 10진수 0(16진수로 0)으로 고정하고 1000개의 소비전력샘플을 측정하여 x축은 시간(μs), y축은 소비전력(mV)으로 겹쳐놓은 것이다. 그림 3-5 (a)가 없음 도 8의 (b)는 사용된 평문과 0부터 255까지의 모든 비밀키 그리고 소비전력을 상관전력분석을 수행한 결과를 x 축은 시간(μs), y축은 피어슨 상관계수로 겹쳐놓은 것이다. 그 결과 x축 252, 비밀키 0에서 가장 높은 상관계 수가 약 0.30이 발견되었다. 서로 다른 오실로스코프를 사용한 실험에서 8비트 환경을 대상으로 샘플 480개 이상을 사용하면 올바른 비밀키 를 찾을 수 있음을 확인했다. 추가적으로 비밀키를 다르게 설정한 실험을 실시한 결과 이전과 동일하게 올바른 비밀키를 찾을 수 있었다. 3. 실제 모델 비교 실험 3.1. 최종 선발 모델 입력 데이터는 비밀키가 0부터 255까지인 비밀키가 10개씩 2560개로 구성되며, 하나의 케이스 단위로 47개를 사 용했다. 47개 케이스는 단일 집합으로 120,320개의 샘플을 가지고 있다. 이 120,320개의 샘플을 기준으로, 비밀 키가 존재하는 위치를 대략적으로 추측하여 시간을 표현하는 x축을 기준으로 앞, 뒤 1500을 300단위로 이동시켜 5개의 샘플을 추가적으로 만들어 총 601,600개의 샘플을 구성하였고, 601,600개의 샘플 중 90%는 학습용, 나머 지 10%는 검증용으로 사용했다. 대부분의 인공지능 학습은 평균 제곱 오차(Mean Squared Error: MSE)를 사용하며, 흔히 학습 과정을 확인하기 위해 도 9와 같은 손실(loss)의 추세를 살펴본다. 손실을 계산하는 방법은 편향과 분산(Variance)을 더하는 것 이다. 편향은 학습된 분류기와 실제 값 사이의 제곱 손실로 정확도와 비슷한 개념이다. 편향은 학습된 분류기들 이 각기 다른 학습 데이터 집합에 성능의 변화정도가 급하게 변하는지 안정적으로 변하는지를 나타내는 척도이 다. 최종 모델 선정을 위해 다양한 하이퍼파라미터를 사용하여 학습을 진행했다. 학습 결과는 표 4 및 도 10과 같다. 표 4 FC 512 Filter 32 Batch 128 LosTra0.359 Val0.266 AccTra0.942 Val0.971 FC 1024 Filter 64 Batch 128 LosTra0.564 Val0.527 AccTra0.913 Val0.920 FC 512 Filter 24 Batch 128 LosTra0.470 Val0.411 AccTra0.921 Val0.938 CNN을 사용한 최종 모델의 신경망 구조는 도 11과 같다.도 12는 만들어진 모델의 상위 8층의 출력을 추출 및 시 각화한 결과이다. 임의의 입력에 대한 각 계층별 반응을 확인할 수 있다면 뉴런별 가중치를 확인하는 것도 가능 하기에 다양한 방법으로 응용이 가능하다. 이를 응용하여 먼저 학습된 CNN 다중 분류 모델을 대상으로 Softmax 활성화 함수의 가중치를 시각화하면 도 13 과 같이 표현할 수 있다. Softmax는 모든 출력의 합이 1을 만족하므로 가장 높은 값의 암호문을 노란색으로 표현했다. 해당 모델을 사용 한 결과 비밀키 58이 약 0.97799, 비밀키 59가 약 0.01173 그리고 비밀키 120이 약 0.00305의 내림차순으로 나 타났다.이 결과에서 사용된 모델은 암호문을 예측하는 모델로 입력된 평문은 194이며, 예측된 암호문은 58로 194와 58 을 배타적 논리합으로 연산한 결과 248이라는 비밀키를 계산할 수 있고 이는 정답과 같다. 도 14는 입력 데이터를 대상으로 첫 번째 컨볼루션 층의 가중치의 변화를 시각화 한 것이다. 가중치를 내림차순 으로 정렬한 결과 x축 855에서 170.625로 가장 높았으며 다음으로 x축 919에서 161.875 다음으로 x축 938에서 159.875로 나타났다. 도 15는 마지막 컨볼루션 층의 가중치를 나타낸 것이며, 완전연결 신경망 직전까지 가공된 데이터로 결과를 예 측하기 위해 가장 많은 영향을 미친 부분을 추론할 수 있다. 이후 Grad-Cam(Gradient-weighted Class Activation Mapping)을 사용하여 ReLU신경망의 가중치를 통해 정답을 유추하는 가중치를 알 수 있다. 도 16은 숨겨진 계층에서 마지막에 위치한 신경망의 가중치를 시각화 한 것이다. 이때 가장 높은 상관성이 발견 된 곳은 x축에서 489에 해당하는 위치이다. 3.2. 선발 모델 가장 높은 정확도를 보인 모델은 표 5와 같은 모델이며 높은 정확도를 보였다. 표 5 Attribute Value Convolutional layers (5 layers)filter 32 kernel size 11 strides 2 Fully connection layers (3 layers)units 512 activation function ReLU Model learning rate 0.0001 batch size 64 epoch 100 EarlyStopping patience 10 도 17은 소비전력을 입력받아 중간 암호문을 출력하는 모델이며, 이 모델에 임의의 소비전력샘플 데이터를 입력 하여 예측한 중간키와 각 소비전력샘플별 평문을 연산하여 실제 중간키와 일치하는 횟수를 검증해보았다. 그 결과 도 18와 같이 모든 경우에서 평균은 96.7%, 분산은 0.0236로 나타났으며, 중간 비밀키 0과 일부를 제외 하고 90%이상의 정답률을 보였다."}
{"patent_id": "10-2021-0188850", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은 전력분석방법을 이용하여 비밀키를 취득하는 방법을 간단히 나타낸 개요도이다. 도 2 는 추정된 전력신호 행렬()을 나타낸 도면이다. 도 3 은 측정된 전력신호와 추정된 전력신호 간의 상관관계를 나타낸 도면이다. 도 4 는 상관전력분석 측정 환경을 나타낸 도면이다. 도 5 는 상관전력분석 실험 데이터 측정 절차를 나타낸 도면이다.도 6 은 MSO2012b와 비밀키 82를 사용한 상관전력분석 결과를 나타낸 도면이다. 도 7 은 MSO2012b와 비밀키 114를 사용한 상관전력분석 결과를 나타낸 도면이다. 도 8 은 DPO4032와 비밀키 0을 사용한 상관전력분석 결과를 나타낸 도면이다. 도 9 는 편향과 분산에 따른 손실과 정확도 변화를 나타낸 도면이다. 도 10 은 가중치 변화에 따른 학습 결과를 나타낸 도면이다. 도 11 은 CNN을 사용한 최종 모델의 신경망 구조를 나타낸 표이다. 도 12 는 만들어진 모델의 상위 8층의 출력을 추출 및 시각화한 결과를 나타낸 도면이다. 도 13 은 소비전력에 대한 비밀키 검증을 위하여, 학습된 CNN 다중 분류 모델을 대상으로 Softmax 활성화 함수 의 가중치를 시각화한 도면이다. 도 14 는 입력 데이터를 대상으로 첫 번째 컨볼루션 층의 가중치의 변화를 시각화한 도면이다. 도 15 는 마지막 컨볼루션 층의 가중치를 나타낸 도면이다. 도 16 은 Grad-Cam을 사용하여 마지막 히든 레이어 가중치를 기반으로 소비전력을 분석한 도면이다. 도 17 은 최종 선발 모델 구조 및 학습 결과를 나타낸 도면이다. 도 18 은 최종 선발 모델의 훈련 모델 정답률을 나타낸 도면이다."}
