{"patent_id": "10-2021-7011473", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0061399", "출원번호": "10-2021-7011473", "발명의 명칭": "인공 지능에 관한 장치 및 방법", "출원인": "노키아 테크놀로지스 오와이", "발명자": "아쿠스 엠레"}}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "방법으로서,컨테이너 파일 포맷으로 시각적 데이터를 수신하는 단계와,하나 이상의 콘텐츠 요소를 검출하도록 상기 시각적 데이터를 처리하는 단계와,상기 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 단계와,상기 시각적 데이터와 연계하여 상기 메타데이터를 컨테이너 파일에 포함시키는 단계를 포함하는방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 컨테이너 파일은 처리 알고리즘에 대한 메타데이터를 포함하는 제1 박스를 포함하는 방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서, 상기 컨테이너 파일은 상기 하나 이상의 콘텐츠 요소에 대한 메타데이터를 포함하는 제2 박스를 포함하는 방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 다중 처리 알고리즘의 프로세스에 대한 메타데이터를 포함하는 제3 박스를 포함하는 방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 이미지 시퀀스 또는 비디오이고, 상기 컨테이너 파일은 상기 메타데이터를 포함하는 미디어 트랙에 대한 미디어 샘플 정의를 포함하는 방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제5항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 상기 컨테이너 파일 내에 정보를 전달하는 다른 엔티티에 컨테이너를 관련시키기 위한 관계 정의를 포함하는 방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항 내지 제6항 중 어느 한 항에 있어서, 공개특허 10-2021-0061399-3-상기 시각적 데이터는 하나 이상의 신경망에 의해 처리되거나, 상기 하나 이상의 콘텐츠 요소를 검출하기 위해하나 이상의 비-신경망 기반 알고리즘에 의해 처리되는방법."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "장치로서,컨테이너 파일 포맷으로 시각적 데이터를 수신하는 수단과,하나 이상의 콘텐츠 요소를 검출하기 위해 상기 시각적 데이터를 처리하는 수단과,상기 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 수단과,상기 시각적 데이터와 연계하여 상기 메타데이터를 컨테이너 파일에 포함시키는 수단을 포함하는장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 컨테이너 파일은 처리 알고리즘에 대한 메타데이터를 포함하는 제1 박스를 포함하는 장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항 또는 제9항에 있어서, 상기 컨테이너 파일은 상기 하나 이상의 콘텐츠 요소에 대한 메타데이터를 포함하는 제2 박스를 포함하는 장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8항 내지 제10항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 다중 처리 알고리즘의 프로세스에 대한 메타데이터를 포함하는 제3 박스를 포함하는 장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제8항 내지 제11항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 이미지 시퀀스 또는 비디오이고, 상기 컨테이너 파일은 상기 메타데이터를 포함하는 미디어 트랙에 대한 미디어 샘플 정의를 포함하는장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제8항 내지 제12 항 중 어느 한 항에 있어서, 상기 컨테이너 파일은 상기 컨테이너 파일 내에 정보를 전달하는 다른 엔티티에 컨테이너를 관련시키기 위한 관계 정의를 포함하는장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8항 내지 제13항 중 어느 한 항에 있어서,하나 이상의 신경망, 또는 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 상기 시각적 데이터를 처리하기 위한공개특허 10-2021-0061399-4-하나 이상의 비-신경망 기반 알고리즘을 더 포함하는장치."}
{"patent_id": "10-2021-7011473", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제8항 내지 제14항 중 어느 한 항에 있어서, 적어도 하나의 프로세서 및 컴퓨터 프로그램 코드를 포함하는 메모리를 더 포함하는 장치."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "실시예는 ISO 기반 미디어 파일 포맷과 호환되는 파일 포맷으로 시각적 데이터를 수신하는 단계와, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하는 단계와, 검출된 하나 이상의 콘텐츠 요소 및 사용된 프 로세스에 대한 정보를 메타데이터로서 저장하는 단계와, 시각적 데이터와 연계하여 메타데이터를 미디어 파일에 포함시키는 단계를 포함하는 방법에 관한 것이다. 실시예는 또한 방법을 구현하기 위한 기술 장비에 관한 것이다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 솔루션은 일반적으로 인공 지능(AI)에 관한 것이다. 특히, 본 솔루션은 인공 지능 메타데이터를 저장하고 시그널링하는 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "많은 실제 애플리케이션은 이미지, 비디오 등과 같은 미디어의 콘텐츠에 대한 시맨틱 정보(semantic information)의 가용성에 의존한다. 시맨틱 정보는 장면의 유형, 특정 동작/활동의 발생, 특정 객체의 존재 등 을 표현할 수 있는 메타데이터로 표현된다. 이러한 시맨틱 정보는 미디어를 분석함으로써 얻어질 수 있다. 최근, 다양한 신경망 기술의 발달로 원시 이미지 데이터에서 직접 이미지/비디오 콘텐츠의 다양한 요소를 인식 하는 학습이 가능해졌다. 예를 들어 각 콘텐츠로부터 시각적 또는 청각척 요소를 인식하는 컴퓨터 능력에 대해 논의할 때, \"인공 지능(AI)\"이라는 용어가 등장하는데, 이 용어는 신경망과 머신 학습을 포함하는 일반적인 용 어이다. 이제 위의 문제를 완화하는 개선된 방법과 이 방법을 구현하는 기술적 장비가 발명되었다. 다양한 측면은 독립 항에 기재된 것을 특징으로 하는 방법, 장치 및 컴퓨터 프로그램을 저장한 컴퓨터 판독가능 매체를 포함한다. 다양한 실시예가 종속항에 개시되어 있다. 제1 측면에 따르면, 컨테이너 파일 포맷으로 시각적 데이터를 수신하는 단계와, 하나 이상의 콘텐츠 요소를 검 출하기 위해 시각적 데이터를 처리하는 단계와, 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 단계와, 시각적 데이터와 연계 하여 메타데이터를 컨테이너 파일에 포함시키는 단계를 포함한다. 제2 측면에 따르면, 컨테이너 파일 포맷으로 시각적 데이터를 수신하는 수단과, 하나 이상의 콘텐츠 요소를 검 출하기 위해 시각적 데이터를 처리하는 수단과, 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 수단과, 시각적 데이터와 연계 하여 메타데이터를 컨테이너 파일에 포함시키는 수단을 포함하는 장치가 제공된다. 제3 측면에 따르면, 적어도 하나의 프로세서 및 컴퓨터 프로그램 코드를 포함하는 메모리를 포함하는 장치가 제 공되며, 상기 컴퓨터 프로그램 코드는 프로세서에 의해 실행될 때 장치로 하여금 컨테이너 파일 포맷으로 시각 적 데이터를 수신하고, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하고, 검출된 하나 이상 의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터 로서 저장하며, 시각적 데이터와 연계하여 메타데이터를 컨테이너 파일에 포함시키게 하는 명령어를 포함한다. 제4 측면에 따르면, 컴퓨터 프로그램 코드를 포함하는 컴퓨터 프로그램 제품이 제공되며, 컴퓨터 프로그램 코드 는 적어도 하나의 프로세서에 의해 실행될 때 장치로 하여금 컨테이너 파일 포맷으로 시각적 데이터를 수신하고, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하고, 검출된 하나 이상의 콘텐츠 요 소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하며, 시각적 데이터와 연계하여 메타데이터를 컨테이너 파일에 포함시키게 하도록 구성된다. 일 실시예에 따르면, 컨테이너 파일은 처리 알고리즘에 대한 메타데이터를 포함하는 제1 박스를 포함한다. 일 실시예에 따르면, 컨테이너 파일은 상기 하나 이상의 콘텐츠 요소에 대한 메타데이터를 포함하는 제2 박스를 포함한다. 일 실시예에 따르면, 컨테이너 파일은 다중 처리 알고리즘의 프로세스에 대한 메타데이터를 포함하는 제3 박스 를 포함한다. 일 실시예에 따르면, 컨테이너 파일은 이미지 시퀀스 또는 비디오이고, 컨테이너 파일은 메타데이터를 포함하는 미디어 트랙에 대한 미디어 샘플 정의를 포함한다. 일 실시예에 따르면, 컨테이너 파일은 컨테이너 파일에서 정보를 운반하는 다른 엔티티에 컨테이너를 관련시키 기 위한 관계 정의를 포함한다. 일 실시예에 따르면, 시각적 데이터는 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 하나 이상의 신경망, 또 는 하나 이상의 비-신경망 기반 알고리즘에 의해 처리된다. 일 실시예에 따르면, 컴퓨터 프로그램 제품은 비 일시적 컴퓨터 판독 가능 매체 상에 구현된다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는, 인공 지능의 맥락에서 여러 실시예가 설명될 것이다. 특히, 여러 실시예는 미디어 파일에서 인공 지능 메타데이터의 저장 및 시그널링을 가능하게 한다. 도 1은 실시예에 따른 데이터 처리에 사용하기에 적합한 컴퓨터 시스템을 도시한다. 컴퓨터 시스템의 일반적인 구조는 시스템의 기능 블록에 따라 설명될 것이다. 하나의 물리적 장치로 여러 기능이 수행될 수 있는데, 예컨 대, 모든 계산 절차는 원하는 경우 단일 프로세서에서 수행될 수 있다. 도 1의 예에 따른 장치의 데이터 처리 시스템은 주 처리 장치, 메모리, 저장 장치, 입력 장치, 출력 장치 및 그래픽 서브시 스템을 포함하며, 이들 모두는 데이터 버스를 통해 서로 연결된다. 주 처리 장치는 데이터 처리 시스템 내에서 데이터를 처리하도록 구성된 종래의 처리 장치이다. 주 처리 장치는 하나 이상의 프로세서 또는 프로세서 회로를 포함하거나 그로서 구현될 수 있다. 메모리, 저 장 장치, 입력 장치 및 출력 장치는 당업자에 의해 인식되는 종래의 컴포넌트를 포함할 수 있다. 메모리 및 저장 장치는 데이터 처리 시스템에서 데이터를 저장한다. 컴퓨터 프로그램 코드는 예를 들어 머신 학습 프로세스를 구현하기 위해 메모리에 상주한다. 입력 장치는 데이터를 시스템에 입력하는 반면, 출력 장치는 데이터 처리 시스템으로부터 데이터를 수신하고 이 데이터를 예를 들어 디스플레이로 전달한다. 데이터 버스는 통상적인 데이터 버스이고 단일 라인으로 도시되었지만 프로 세서 버스, PCI 버스, 그래픽 버스, ISA 버스의 임의의 조합일 수 있다. 따라서, 당업자는 장치가 컴퓨터 장치, 개인용 컴퓨터, 서버 컴퓨터, 이동 전화, 스마트폰 또는 인터넷 액세스 장치, 예를 들어 인터넷 태블릿 컴퓨터와 같은 임의의 데이터 처리 장치일 수 있음을 쉽게 인식한다. 상이한 실시예는 상이한 부분이 상이한 요소에서 수행될 수 있도록 허용한다는 것을 이해해야 한다. 예를 들어, 컴퓨터 시스템의 다양한 프로세스는 하나 이상의 처리 장치에서 수행될 수 있는데, 예를 들어 전적으로 하나의 컴퓨터 장치에서, 또는 하나의 서버 장치에서 또는 여러 사용자 장치에 걸쳐 수행될 수 있다. 머신 학 습 프로세스의 요소는 전술한 바와 같이 하나의 장치에 상주하거나 또는 예를 들어 장치들이 소위 클라우드를형성하도록 여러 장치에 분산되어 있는 소프트웨어 컴포넌트로 구현될 수 있다. 많은 미디어 파일 포맷의 신택스는 유형 및 길이 접두사가 붙은 데이터 청크 또는 박스의 계층적 목록에 기초하 며, 여기서 이름지정은 해당 포맷에 의존한다. ISO 기반 미디어 파일 포맷(ISOBMFF, ISO/IEC 14496-12)에 따른 컨테이너 파일에서, 미디어 데이터 및 메타데이터는 다양한 유형의 박스에 배열된다. 고효율 이미지 파일 포맷 (HEIF, ISO/IEC 23008-12), MPEG-4 파일 포맷(MP4 포맷으로도 알려져 있는 ISO/IEC 14496-14), NAL 유닛 구조 의 비디오에 대한 파일 포맷(ISO/IEC 14496-15) 및 3GPP 파일 포맷(3GP 포맷이라고도 하는 3GPP TS 26.244)을 비롯하여, 다수의 포맷이 ISOBMFF로부터 도출된다. 이들 포맷은 동일한 박스 구조의 기본 구조를 사용한다. ISO 기반 미디어 파일 포맷(ISOBMFF로 축약될 수 있는 ISO/IEC 14496-12)의 일부 개념, 구조 및 사양은 실시예 가 구현될 수 있는 토대가 되는 컨테이너 파일 포맷의 예로서 후술된다. 본 발명의 측면은 ISOBMFF로 제한되지 않고, 오히려 본 발명이 부분적으로 또는 완전히 실현될 수 있는 하나의 가능한 토대에 대한 설명이 제공된다. ISO 기반 미디어 파일 포맷의 기본 빌딩 블록을 박스라고 한다. 각 박스에는 헤더와 페이로드가 있다. 박스 헤더는 박스 유형과 박스 크기를 바이트 단위로 나타낸다. 박스는 다른 박스들을 내포할 수 있으며, ISO 파일 포맷은 특정 유형의 박스 내에서 허용되는 박스 유형을 지정한다. 또한, 일부 박스의 존재는 각 파일에 필수일 수 있지만, 다른 박스의 존재는 선택사항일 수 있다. 또한, 일부 박스 유형의 경우, 파일에 둘 이상의 박스가 있는 것이 허용될 수 있다. 따라서, ISO 기반 미디어 파일 포맷은 박스들의 계층 구조를 지정하는 것으로 간주 될 수 있다. ISO 파일 포맷 제품군에 따르면, 파일은 박스에 캡슐화된 미디어 데이터와 메타데이터를 포함한다. 각 박스는 4자 코드(four character code: 4CC)로 식별되며 박스의 유형과 크기를 알려주는 헤더로 시작한다. ISO 기반 미디어 파일 포맷을 따르는 파일에서, 미디어 데이터는 미디어 데이터('mdat') 박스에 제공될 수 있고 무비('moov') 박스는 메타데이터를 포함하는 데 사용될 수 있다. 일부 경우, 파일을 작동시키려면, 'mdat' 박 스 및 'moov' 박스가 모두 있어야 할 수 있다. 무비('moov') 박스는 하나 이상의 트랙을 포함할 수 있고, 각 트랙은 하나의 대응하는 트랙('trak') 박스에 상주할 수 있다. 트랙은 미디어 압축 포맷(및 ISO 기반 미디어 파일 포맷에 대한 캡슐화)에 따라 포맷된 샘플을 참조하는 미디어 트랙을 포함하여 여러 유형 중 하나일 수 있 다. 예를 들어 ISO 파일에 콘텐츠를 기록할 때, 예컨대 기록 애플리케이션이 충돌하거나 메모리 공간이 부족하거나 다른 사고가 발생하는 경우 데이터 손실을 방지하기 위해 무비 프래그먼트(movie fragments)가 사용될 수 있다. 무비 프래그먼트가 없으면 데이터 손실이 발생할 수 있는데 그 이유는 파일 포맷은 모든 메타데이터(예컨대, 무 비 박스)가 파일의 하나의 연속된 영역에 기록될 것을 요구할 수 있기 때문이다. 또한 파일을 기록할 때, 사용 가능한 저장소의 크기에 대해 무비 박스를 버퍼링할 수 있는 메모리 공간(예컨대, 랜덤 액세스 메모리(RAM))이 충분하지 않을 수 있으며, 무비가 끝났을 때 무비의 콘텐츠를 재계산하는 것은 너무 느릴 수 있다. 또한, 무 비 프래그먼트는 일반적인 ISO 파일 파서를 사용하여 파일을 동시에 기록하고 재생하는 것을 가능하게 할 수 있 다. 또한, 무비 프래그먼트가 사용되고 또한 초기 무비 박스는 동일한 미디어 콘텐츠를 포함하지만 무비 프래 그먼트가 없는 구조의 파일에 비해 작은 경우 점진적인 다운로딩을 위해, 예를 들어 파일의 동시 수신 및 재생 을 위해 초기 버퍼링의 기간은 더 작아야 할 필요가 있을 수 있다. 무비 프래그먼트 기능은 분할전에는 무비 박스에 있을 수 있도 있는 메타데이터를 여러 조각으로 분할하는 것을 가능하게 할 수 있다. 각 조각은 트랙의 특정 시간에 해당할 수 있다. 즉, 무비 프래그먼트 기능은 파일 메타 데이터와 미디어 데이터를 인터리빙하는 것을 가능하게 할 수 있다. 결과적으로, 무비 박스의 크기가 제한될 수 있으며 위에서 언급한 사용 사례가 실현될 수 있다. 일부 예에서, 무비 프로그먼트에 대한 미디어 샘플은 이들이 moov 박스와 동일한 파일에 있는 경우 mdat 박스에 상주할 수 있다. 그러나, 무비 프래그먼트의 메타데이터에 대해서는, moof 박스가 제공될 수 있다. moof 박스 는 이전에 moov 박스에 있었던 특정 재생 시간의 기간에 대한 정보를 포함할 수 있다. moov 박스는 여전히 그 자체로도 유효한 무비를 나타낼 수 있지만, 또한 무비 프래그먼트가 동일한 파일에서 뒤따를 것임을 나타내는 mvex 박스를 포함할 수도 있다. 무비 프래그먼트는 moov 박스와 관련된 프레젠테이션을 시간에 맞게 확장할 수 있다. 무비 프래그먼트 내에는, 트랙 당 0부터 복수개까지 포함하는 트랙 프래그먼트 세트가 있을 수 있다. 트랙 프 래그먼트는 차례로 0에서 복수 개의 트랙 실행(track runs)을 포함할 수 있으며, 그 문서의 각각은 해당 트랙에 대한 인접한 샘플의 실행이다. 이러한 구조 내에서, 많은 필드는 선택사항이며 기본값으로 설정될 수 있다.moof 박스에 포함될 수 있는 메타데이터는 moov 박스에 포함될 수 있는 메타데이터의 서브세트로 제한될 수 있 으며 경우에 따라 다르게 코딩될 수 있다. moof 박스에 포함될 수 있는 박스에 대한 자세한 내용은 ISO 기반 미 디어 파일 포맷 사양에서 찾을 수 있다. 자체 포함된 무비 프래그먼트는 파일 순서에서 연속적인 moof 박스와 mdat 박스로 구성되도록 정의될 수 있으며, mdat 박스는 무비 프래그먼트의 샘플(이에 대해 moof 박스가 메타데 이터를 제공함)을 포함하나 임의의 다른 무비 프래그먼트(즉, 임의의 다른 moof 박스)의 샘플은 포함하지 않는 다. 트랙 참조 메커니즘을 사용하여 트랙을 서로 연관시킬 수 있다. TrackReferenceBox는 박스(들)을 포함하며, 각 박스는 포함하는 트랙(the containing track)에서 다른 트랙 세트로의 참조를 제공한다. 이러한 참조는 포함된 박스(들)의 박스 유형(즉, 박스의 4자 코드)을 통해 라벨링된다. 신택스는 다음과 같이 지정될 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "track_IDs는 참조된 트랙의 트랙 식별자 또는 참조된 트랙 그룹의 track_group_id 값을 제공하는 정수들의 어레 이로 지정될 수 있다. track_IDs [i]의 각 값(여기서 i는 track_IDs [] 어레이에 대한 유효한 인덱스임)은 정 수이며 이 정수는 포함하는 트랙으로부터 track_IDs [i]와 동일한 track_ID를 가진 트랙으로 또는 track_IDs [i]와 동일한 track_group_id, 및 1과 동일한 TrackGroupTypeBox의 플래그 필드의 특정 비트(예컨대, 최하위 비트) 모두를 갖는 트랙 그룹으로의 참조를 제공한다. track_group_id 값이 참조될 때, 트랙 참조는 특정 트랙 참조 유형의 시맨틱에서 달리 언급되지 않는 한, 참조된 트랙 그룹의 각 트랙에 개별적으로 적용된다. 값 0은 존재하도록 허용되지 않을 수 있다. 트랙 그룹화 메커니즘은 트랙 그룹들의 표시를 가능하게 하는데, 각 그룹은 특정 특성을 공유하거나 그룹 내의 트랙들은 특정 관계를 갖는다. TrackGroupBox는 TrackBox에 포함될 수 있다. TrackGroupBox는 TrackGroupTypeBox에서 도출된 0개 이상의 박스를 포함한다. 특정 특성 또는 관계는 포함된 박스의 박스 유형 으로 표시된다. 포함된 박스는 동일한 트랙 그룹에 속하는 트랙을 종료하는 데 사용될 수 있는 식별자를 포함 한다. TrackGroupBox 내에 동일한 유형의 포함된 박스를 포함하고 이러한 포함된 박스 내에서 동일한 식별자 값을 가진 트랙은 동일한 트랙 그룹에 속한다. ISO 기반 미디어 파일 포맷은 특정 샘플과 연관될 수 있는 시간지정된 메타데이터에 대한 세 가지 메커니즘, 즉 샘플 그룹, 시간지정된 메타데이터 트랙 및 샘플 보조 정보를 포함한다. 도출된 사양은 이러한 세 가지 메커니 즘 중 하나 이상과 유사한 기능을 제공할 수 있다. AVC 파일 포맷 및 SVC 파일 포맷과 같은 ISO 기반 미디어 파일 포맷 및 그 파생물에서의 샘플 그룹화는 그룹화 기준에 기초하여 트랙의 각 샘플이 하나의 샘플 그룹의 구성원이 되도록 할당하는 것으로 정의될 수 있다. 샘 플 그룹화에서의 샘플 그룹은 연속적인 샘플인 것으로 제한되지 않으며 인접하지 않은 샘플을 포함할 수 있다. 트랙 내의 샘플들에 대해 둘 이상의 샘플 그룹화가 있을 수 있으므로, 각 샘플 그룹화는 그룹화 유형을 나타내 는 유형 필드를 가질 수 있다. 샘플 그룹화는 두 개의 링크된 데이터 구조로 표현될 수 있는데, 즉 SampleToGroupBox(sbgp 박스)는 샘플 그룹에 대한 샘플 할당을 나타내고, SampleGroupDescriptionBox(sgpd 박스)는 그룹의 속성을 기술하는 각 샘플 그룹에 대한 샘플 그룹 엔트리를 포함한다. 다른 그룹화 기준에 기초 하여 SampleToGroupBox 및 SampleGroupDescriptionBox의 여러 인스턴스가 있을 수 있다. 이들은 그룹화 유형을 표시하는 데 사용되는 유형 필드로 구별될 수 있다. SampleToGroupBox는 예를 들어 그룹화의 서브 유형(sub- type)을 나타내는데 사용될 수 있는 grouping_type_parameter 필드를 포함할 수 있다. ISO 기반 미디어 파일 포맷 표준에 대한 수정안 초안은 다음과 같이 간단한 샘플 대 그룹 맵핑을 설명한다. 박스 유형: 'csgp' 컨테이너: SampleTableBox 또는 TrackFragmentBox 필수: 아니요 수량 : 0 개 이상. 간단한 샘플 대 그룹 박스는 특히 반복되는 패턴이 있고 특정 유형의 샘플 그룹이 거의 없는 경우 샘플에서 그 룹으로의 매핑을 표현하는 보다 간단한 방법을 제공한다. 디자인은 연결된 패턴들의 벡터를 사용하며, 각 패턴은 샘플의 실행을 해당 패턴의 반복과 연관시키는 맵핑 어 레이에 의해 한 번 사용된다. 이것은 다음 예에서 설명된다. 다음에서, 각 문자는 서로 다른 샘플 그룹 설명 인덱스 값(가능하게는 0)을 나타낸다. 트랙이 제1 샘플로부터 시작하는 후속하는 연관을 갖는 경우, a b c b a b c b a b c x x a b c b a b d b 이러한 연관은 아래와 같이 표시될 수 있다. 1. pattern_length = 4; sample_count = 11; 2. pattern_length = 1; sample_count = 2; 3. pattern_length = 4; sample_count = 6; 4. pattern_length = 2; sample_count = 2; pattern = [ a b c b // 길이 4의 패턴 1 x // 길이 1의 패턴 2 a b c b // 길이 4의 패턴 3 d b // 길이 2의 패턴 4 ] // pattern_length는 따라서 4 + 1 + 4 + 2 = 11이다. sample_count [i]가 pattern_length [i]와 같으면, 패턴은 반복되지 않는다. sample_count [i]가 pattern_length [i]보다 크면, i번째 패턴의 sample_group_description_index 값은 sample_count [i] 값을 맵핑하도록 반복적으로 사용된다. sample_count [i]가 pattern_length [i]의 배수일 필요는 없는 바, 사이클링은 패턴 중간에서 종료될 수 있다. 1에서 pattern_count까지의 범위에 포함되는 i의 모든 값에 대한 sample_count [i] 값의 총계가 총 샘플 수보다 적을 때, 판독기는 명시적 그룹 연관이 없는 샘플을 SampleDescriptionGroupBox에 정의된 기본 그룹(있는 경 우)과 연관시키거나, 그게 아니면 어떤 그룹과도 연관시키지 않아야 한다. sample_count [i] 값의 총계가 내포형 TrackBox 또는 TrackFragmentBox에 의해 설명되는 실제 샘플의 총 개수 보다 크게 되는 것은 오류이며 그러면 판독기 동작은 정의되지 않을 수 있다.신택스:"}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "시맨틱: version은 이 박스의 버전을 지정하는 정수이며 현재는 0이다. grouping_type은 샘플 그룹화의 유형(즉, 샘플 그룹을 형성하는 데 사용되는 기준)을 식별하고 그것을 그룹화 유형에 대해 동일한 값을 갖는 그의 샘플 그룹 설명 테이블에 연결하는 정수이다. grouping_type에 대해 동일 한 값(및 사용되는 경우 grouping_type_parameter)을 가진 'csgp'또는 'sbgp'의 등장은 트랙에 대해 최대 한 번만 있어야 한다. grouping_type_parameter는 그룹화의 서브 유형을 나타낸다. index_msb_indicates_fragment_local_description은 이 박스가 'trak' 박스 내에서 나타날 때 0이어야 하지만 이 박스가 'traf' 박스 내에서 나타날 때는 0 또는 1일 수 있는 플래그이다. 그것이 1이면, 모든 sample_group_description_index의 최상위 비트(MSB)가 인덱스 번호의 일부를 형성하지 않음을 나타내지만 대신 어느 'sgpd' 박스에 그룹 설명이 있는지를 나타내는데, 즉 MSB가 0이면 인덱스는 'trak' 박스의 'sgpd' 박스에 서 그룹 설명을 식별하고, MSB가 1이면 인덱스는 'traf' 박스의 'sgpd'박스에서 그룹 설명을 식별한다. field_size는 sample_group_description_index 값의 어레이에서 엔트리의 비트 크기를 지정하는 정수이고, 그 것은 각각 4,8,16,32의 필드 크기를 나타내는 3, 7, 15 또는 31의 값을 취해야 한다. 4의 필드 크기가 사용되 는 경우, 각 바이트는 두 개의 값, 즉 entry [i] << 4 + entry [i + 1]을 포함하고, 크기가 정수의 바이트를 채우지 않으면 마지막 바이트는 0으로 채워진다. pattern_count는 뒤에 오는 패턴 어레이에서의 연관된 패턴의 길이를 나타낸다. 포함된 sample_count 값의 합 은 맵핑된 샘플의 수를 나타낸다.pattern_length [i]는 sample_group_description_index [j] 값의 제2 어레이 내의 패턴에 대응한다. pattern_length [i]의 각 인스턴스는 0보다 커야한다. sample_count [i]는 i번째 패턴을 사용하는 샘플의 수를 지정한다. sample_count [i]는 0보다 커야하고 sample_count [i]는 pattern_length [i]보다 크거나 같아야 한다. sample_group_description_index [j] [k]는 이 그룹 내의 샘플을 설명하는 샘플 그룹 엔트리의 인덱스를 제공 하는 정수이다. 인덱스는 1부터 SampleGroupDescriptionBox 내의 샘플 그룹 엔트리의 개수까지의 범위를 포함 하거나, 또는 이 샘플이 이 유형의 그룹의 구성원이 아님을 나타내기 위해 값 0을 취하기도 한다. 설명 및 실시예에서, 샘플-그룹 박스 또는 SampleToGroupBox가 참조될 때 간단한 샘플-그룹 박스 등이 동등하게 사용될 수 있다. 서브 샘플은 샘플의 연속적인 바이트 범위로 정의될 수 있다. 서브 샘플에 대한 정보는 SampleTableBox 및/또 는 TrackFragmentBox(es)에 포함될 수 있는 SubSampleInformationBox(es)에 제공될 수 있다. 서브 샘플의 특 정 정의는 주어진 코딩 시스템 및/또는 코딩 시스템의 주어진 캡슐화 포맷(예컨대, 특정 샘플 엔트리 유형)에 대한 것일 수 있고 및/또는 포함하는 SubSampleInformationBox의 플래그 필드를 사용하여 추가로 지정될 수 있 다. 예를 들어, HEVC에 대한 플래그 필드의 값은 SubSampleInformationBox에 의해 주소가 지정된 서브 샘플이 NAL 유닛, 디코딩 유닛, 타일, 코딩 트리 유닛 행, 슬라이스 또는 코딩된 픽처임을 나타낼 수 있다. 동일한 컨 테이너 박스에 둘 이상의 SubSampleInformationBox가 있는 경우, 이러한 SubSampleInformationBox 각각에서 구 분을 위한 플래그 값이 필요할 수 있다. SubSampleInformationBox의 신택스는 다음과 같이 지정될 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "SubSampleInformationBox의 신택스 요소의 시맨틱은 다음과 같이 지정할 수 있는데, 즉, version은 이 박스의 버전을 지정하는 정수이다. entry_count는 다음 표에서 엔트리의 수를 제공하는 정수이다. sample_delta는 서 브 샘플 구조를 갖는 샘플을 나타내는 정수이다. 그것은 디코딩 순서에서, 원하는 샘플 번호와 이전 엔트리에 표시된 샘플 번호 간의 차이로 코딩된다. 현재 엔트리가 트랙의 제1 엔트리인 경우, 값은 서브 샘플 정보를 가진 제1 샘플의 샘플 번호를 나타내는데, 즉, 값은 샘플 번호와 제로 간의 차이이다. 현재 엔트리가 비어 있 지 않은 트랙 프래그먼트가 선행하는 트랙 프래그먼트에서의 제1 엔트리인 경우, 값은 서브 샘플 정보를 가진 제1 샘플의 샘플 번호와 이전 트랙 프래그먼트에 있는 마지막 샘플의 샘플 번호 간의 차이를 나타낸다. 현재 엔트리가 어떠한 트랙 프래그먼트도 선행하지 않는 트랙 프래그먼트에서의 제1 엔트리인 경우, 값은 서브 샘플 정보를 가진 제1 샘플의 샘플 번호를 나타내는데, 즉 값은 샘플 번호와 제로 간의 차이이다. 이는 트랙 또 는 트랙 프래그먼트에서 제1 샘플을 설명하는 제1 엔트리에 대한 sample_delta가 항상 1임을 의미한다. subsample_count는 현재 샘플의 서브 샘플의 번호를 지정하는 정수이다. 서브 샘플 구조가 없는 경우, 이 필드 는 0의 값을 취한다. subsample_size는 현재 서브 샘플의 크기를 바이트 단위로 지정하는 정수이다. subsample_priority는 각 서브 샘플의 저하 우선순위(degradation priority)를 지정하는 정수이다. subsample_priority의 더 높은 값은 디코딩된 품질에 중요하고 더 큰 영향을 미치는 서브 샘플을 나타낸다. 0과 동일한 discardable은 서브 샘플이 현재 샘플을 디코딩하는 데 필요하다는 것을 의미하는 한편, 1과 같으면 서 브 샘플이 현재 샘플을 디코딩하는 데 필요하지 않지만 향상을 위해 사용될 수 있음을 의미하는데, 예를 들어, 서브 샘플은 SEI(supplemental enhancement information) 메시지를 구성한다. codec_specific_parameters는 사용중인 코덱 및/또는 그의 캡슐화 포맷(예컨대, 샘플 엔트리 유형)에 의해 정의된다. 이러한 정의를 사용할 수 없는 경우, 이 필드는 0으로 설정된다. HEIF(High Efficiency Image File Format)는 이미지 및 이미지 시퀀스(예컨대, 비디오)의 저장을 위해 MPEG(Moving Picture Experts Group)에 의해 개발된 표준이다. HEIF에는 널리 사용되는 ISOBMFF(ISO Base Media File Format) 위에서 구축된 다양한 특징이 포함되어 있어 HEIF 특징이 다른 이미지 파일 포맷에 비해 우 수하다. 본 개시에서, \"HEIF\", \"ISOBMFF\" 및 \"파일 포맷\"이라는 용어는 혼용될 수 있다. ISOBMFF 구조 및 특징은 HEIF 설계에 많이 사용된다. HEIF의 기본 설계는 정지 이미지가 항목(item)으로 저장 되고 이미지 시퀀스는 트랙으로 저장되는 것으로 구성된다. HEIF의 문맥에서, 후속하는 박스는 루트 레벨 'meta' 박스에 포함될 수 있으며 다음에 설명된 대로 사용될 수 있다. HEIF에서, 'meta' 박스의 Handler 박스의 핸들러 값은 'pict'이다. 코딩된 미디어 데이터를 포함하는 리소스(동일한 파일 내에 있을 수 있고 또는 균일한 리소스 식별자(URI)로 식별되는 외부 파일 내에 있을 수도 있음)는 데이터 정보('dinf') 박스를 통해 확인되는 반면 항목 위치('iloc') 박스는 참조된 파일 내 모든 항목 의 위치와 크기를 저장한다. 항목 참조('iref') 박스는 입력된 참조를 사용하여 항목들 간의 관계를 기록한다. 항목들의 모음 중에 어떤 식으로든 다른 항목에 비해 가장 중요한 것으로 간주되는 항목이 있는 경우, 이 항목 은 주요 항목(Primary Item)('pitm') 박스에 의해 시그널링된다. 여기서 언급된 박스 외에도, 'meta' 박스는 항목을 설명하는 데 필요할 수 있는 다른 박스를 포함하도록 유연하다. 동일한 파일에 여러 이미지 항목을 포함할 수 있다. 'meta' 박스 접근 방식을 사용하여 저장된 컬렉션 이미지 가 주어지면, 때때로 이미지들 간의 특정 관계를 한정하는 것이 필수적이다. 이러한 관계의 예는 컬렉션 내 커 버 이미지를 나타내는 것, 컬렉션 내 이미지들 중 일부 또는 전부에 대한 썸네일 이미지를 제공하는 것, 컬렉션 내의 이미지들 중 일부 또는 전부를 알파 평면과 같은 보조 이미지와 연관시키는 것을 포함한다. 이미지들의 컬렉션 중 커버 이미지는 'pitmm' 박스를 사용하여 표시된다. 썸네일 이미지 또는 보조 이미지는 각각 'thmb' 또는 'auxl' 유형의 항목 참조를 사용하여 주요 이미지 항목에 링크된다. ItemPropertiesBox를 사용하면 모든 항목을 정렬된 항목 속성 세트와 연계시킬 수 있다. 항목 속성은 작은 데 이터 레코드이다. ItemPropertiesBox는 두 부분, 즉 암시적으로 인덱싱된 항목 속성 목록을 포함하는 ItemPropertyContainerBox와, 항목을 항목 속성과 연계시키는 하나 이상의 ItemPropertyAssociationBox(es)으 로 구성된다. 항목 속성의 포맷은 박스로 지정된다. 설명 항목 속성은 관련 항목을 변환하는 대신 그 항목을 설명하는 항목 속성으로 정의될 수 있다. 변환 항목 속성은 이미지 항목 콘텐츠의 재구성된 표현을 변환하는 항목 속성으로 정의될 수 있다. 신경망(NN)은 여러 계층의 계산으로 구성된 계산 그래프이다. 각 계층은 하나 이상의 유닛으로 구성되며 각 유 닛은 기본 계산을 수행한다. 유닛은 하나 이상의 다른 유닛에 연결되며 이러한 연결은 연관된 가중치를 가질 수 있다. 가중치는 연관된 연결을 통해 전달되는 신호의 스케일링에 사용될 수 있다. 가중치는 일반적으로 학 습가능한 파라미터, 즉 트레이닝 데이터에서 학습될 수 있는 값이다. 신경망에 가장 널리 사용되는 아키텍처 중 두 가지는 피드 포워드 아키텍처와 반복 아키텍처이다. 피드 포워드 신경망은 피드백 루프가 없는 데, 즉 각 계층은 이전 계층 중 하나 이상으로부터 입력을 받아 그의 출력을 하나 이상의 후속 계층에 대한 입력으로서 제공한다. 또한, 특정 계층 내의 유닛은 하나 이상의 이전 계층의 유닛으로부터 입력을 받아 하나 이상의 후속계층에 출력을 제공한다. 초기 계층(입력 데이터에 가까운 계층)는 이미지의 가장자리 및 텍스처와 같은 의미 상 낮은 레벨의 특징을 추출하고, 중간 및 최종 계층은 더 높은 레벨의 특징을 추출한다. 특징 추출 계층 이후 에는 분류, 시맨틱 분할, 객체 감지, 노이즈 제거, 스타일 전달, 초 고해상도 등과 같은 특정 작업을 수행하는 하나 이상의 계층이 있을 수 있다. 반복 신경망에는 피드백 루프가 있으며, 그에 따라 네트워크는 상태보존 가 능해지는데, 즉 정보나 상태를 기억할 수 있다. 신경망은 휴대폰과 같은 다양한 유형의 장치를 위한 점점 더 많은 애플리케이션에서 활용되고 있다. 예로는 이 미지 및 비디오 분석 및 처리, 소셜 미디어 데이터 분석, 장치 사용 데이터 분석 등이 있다. 딥 러닝 기술에서 특징 추출기의 예는 도 2에 표시된 CNN(Convolutional Neural Network)에 포함되어 있다. CNN은 하나 이상의 컨볼루션 계층, 완전히 연결된 계층 및 상단의 분류 계층으로 구성된다. CNN은 다른 심층 신경망보다 훈련하기 쉽고 추정할 파라미터를 적게 갖는다. 따라서, CNN은 특히 이미지 및 음성 애플리케이션 에서 사용하기에 매우 매력적인 아키텍처이다. 도 2의 예에서, CNN에 대한 입력은 이미지이지만, 임의의 다른 데이터도 사용될 수 있다. CNN의 각 계층은 특 정 추상화(또는 시맨틱) 레벨을 나타내며 CNN은 여러 특징 맵을 추출한다. 특징 맵은 예를 들어 추출된 특징의 값을 나타내는 실수의 조밀한 행렬을 포함할 수 있다. 도 2의 CNN은 단순성을 위해 3개의 특징(또는 추상화 또 는 시맨틱) 계층(C1, C2, C3)만을 갖지만, CNN은 4개 이상, 또한 심지어는 훨씬 많은 컨볼루션 계층을 가질 수 도 있다. CNN의 제1 컨볼루션 계층(C1)은 제1 계층(즉, 입력 이미지)으로부터 4개의 특징 맵을 추출하는 것을 포함할 수 있다. 이러한 맵은 가장자리 및 모서리와 같이 입력 이미지에서 발견되는 낮은 레벨의 특징을 나타낼 수 있다. 이전 계층에서 6개의 특징 맵을 추출하는 것으로 구성된 CNN의 제2 컨볼루션 계층(C2)은 추출된 특징의 시맨틱 레벨을 높인다. 유사하게, 제3 컨볼루션 계층(C3)은 가장자리와 모서리의 조합, 모양 등과 같이 이미지에서 발 견되는 더 추상적인 개념을 나타낼 수 있다. MLP(Fully Connected Multi-Layer Perceptron)로 지칭되는 CNN의 마지막 계층은 하나 이상의 완전히 연결된(즉, 조밀한) 계층 및 최종 분류 계층을 포함한다. MLP는 예를 들어 객체 클래스를 예측(인식)하기 위해 마지막 컨볼루션 계층의 특징 맵을 사용한다. 예를 들어, 그것은 이미지의 객체가 집이라고 예측할 수 있다. 신경망의 목표는 입력 데이터를 더 유용한 출력으로 변환하는 것이다. 한 가지 예는 분류인데, 이 분류에서, 입력 데이터는 N개의 가능한 클래스 중 하나로 분류된다(예컨대, 이미지에 고양이 또는 개가 포함되어 있는지 분류). 또 다른 예는 입력 데이터가 실수로 변환되는 회귀(regression)(예컨대, 노래의 음악 비트를 결정)이다. 본 설명에서, \"모델\"과 \"신경망\"이라는 용어는 혼용될 수 있다. 또한, \"신경망의 가중치\"는 \"학습 가능한 파라 미터' 또는 \"파라미터'라고도 한다. 인공 지능(AI)은 신경망과 머신 학습을 포함하는 일반적인 용어이다. 현재 컴퓨터 비전, 이미징, 빅 데이터 및 /또는 시각적 분석과 같은 다양한 시장 부문에 머신 학습 기반 서비스를 제공하는 클라우드 기반 AI 서비스가 있다. 또한, 이미 시장에 신경 처리 장치를 탑재한 스마트폰이 일부 있지만, 향후 몇 년 안에 그 수가 크게 증 가할 것으로 평가된다. 신경망의 가장 중요한 애플리케이션 중 하나는 이미지/비디오 분석 및 조작에 있다. 이미지 및/또는 이미지 시 퀀스는 휴대폰에서 다양한 머신 학습 기반 알고리즘을 이용하여 실시간 또는 배치 모드(batch mode)로 처리된다. 대부분의 경우, 이러한 처리는 원본 이미지 파일과 다른 파일로 저장되는 추가 메타데이터를 생성한 다. 그 이유 중 하나는 JPEG(Joint Photographic Experts Group), PNG(Portable Network Graphics), TIFF(Tagged Image File Format) 등과 같은 현재 이미지 포맷의 한계 때문에 그리고 이러한 알고리즘의 결과를 미디어 파일에 저장할 표준 메커니즘이 없기 때문이다. HEIF는 메타데이터가 파일 외부에 있지 않고 프로세싱 체인에서 이미지/비디오 소비의 일부가 되도록 구조화된 방식으로 이러한 정보를 포함하는 데 필요한 확장성을 제공한다. AI 기반 미디어 처리 파이프라인은 (예컨대, 이미지 노출을 변경하고 픽셀 값을 다시 작성함으로써) 미디어 데 이터를 조작하고 그 결과를 \"베이크 인(bake in)\"하거나, AI 알고리즘의 추론된 결과를 나타내는 추가 메타데이 터 파일을 생성한다(예를 들어, 얼굴 감지 알고리즘의 결과로 감지된 얼굴의 경계 박스). 또한 AI 알고리즘들 간에 특정 종속성이 있을 수 있다. 한 가지 예는 시스템이 먼저 얼굴을 감지한 다음 감지된 얼굴의 경계 박스 에 사람 인식 알고리즘을 적용하여 고유 한 이름이나 ID를 부여하는 것일 수 있다. 이러한 연결된 동작은 특히 여러 공급 업체의 여러 시스템이 함께 작동해야 하는 경우 현재 상호 운용할 수 없는 독점적인 인터페이스 및 API(Application Programming Interface)를 필요로 한다. 또한, 미디어 데이터와 관련된 AI 메타데이터를 저장하고 시그널링하는 메커니즘이 없다. MPEG의 현재 ISO 기 반 미디어 파일 포맷 및 파생물, 예컨대 HEIF(고효율 이미지 파일 포맷) 또는 ISO 기반 미디어 파일 포맷과 호 환되는 기타 포맷에는 다음을 위한 표준화된 메커니즘이 없다. 1. 이미지, 이미지 시퀀스 또는 비디오에 대한 AI 및 머신 학습 알고리즘 추론 결과의 저장; 2. 특정 작업을 수행하기 위해 차례로 실행해야 하는 연결된 프로세스들에 대한 정보의 저장(예컨대, 얼굴을 감 지한 다음 얼굴을 별도의 프로세스로 인식하고 관련 메타데이터를 저장함); 3. 임의의 다른 엔티티가 알고리즘(또는 새로의 버전의 알고리즘)을 재실행한 다음 미디어 파일 내의 관련 메타 데이터를 업데이트할 수 있도록 사용된 알고리즘에 대한 정보의 저장; 4. 데이터가 결과를 활용할 다른 당사자에 의해 적절하게 파싱될 수 있도록 적용된 AI 기반 알고리즘의 결과로 서 저장되는 데이터의 포맷에 대한 정보의 저장. 앞서 언급한 저장 및 시그널링 메커니즘의 부족은 AI 기반 미디어 조작 서비스 및 알고리즘의 사용 및 상호운용 성을 제한할 수 있다. 이러한 AI 기반 알고리즘을 저장, 교환, 조작 및 피드 포워딩하는 표준 및 잘 정의된 메 커니즘의 부족은 현재 산업의 문제 중 하나를 초래할 수 있으며 격리되고 폐쇄된 에코시스템과 독점적인 포맷 정의로 이어질 수 있다. REST API(Representational State Transfer Application Programming Interface) 기반의 시각적 AI 기반 이미 지 및 비디오 처리 서비스를 포함하는 알려진 클라우드 기반 서비스들은 통합되지 않으며 이들은 직렬식 및 피 드 포워드 유형의 다중 알고리즘 동작들보다는, 단일 작업들로 분리된다. 본 실시예의 목적은 ISO 기반 미디어 파일 포맷(특히 HEIF에 대한) 및 시각적 AI 메타데이터에 대한 저장 및 상 호운용 능력을 갖기 위해 사용될 수 있는 다른 미디어 파일 포맷에 대한 저장 및 시그널링 메커니즘을 정의하는 것이다. 이러한 메커니즘을 제공함으로써, 본 발명은 상호운용 가능한 표준 방식으로 알고리즘들의 저장, 시그 널링, 비파괴 편집 및 캐스케이딩을 가능하게 한다. 본 실시예는 예를 들어 후속하는 Visual AI 메타데이터 및 프로세스에 적용가능하다. ㆍ 객체 감지 ㆍ 얼굴 감지 및 인식 ㆍ 사람 감정 ㆍ 성별 및 연령 예측 ㆍ 얼굴 특징 분석 ㆍ 얼굴 포즈 감지 ㆍ 광학 문자 인식(OCR)(텍스트 추출 및 HEIF에 저장) ㆍ 부적절한 콘텐츠 분석(자동 콘텐츠 필터) ㆍ 컨텍스트 감지 ㆍ 컨텍스트 기반 객체 및 시맨틱 분석(예컨대, 결혼식, 저녁 식사, 생일, 파티, 스포츠 등) ㆍ 행동 인식 ㆍ 로고 및 제품 감지 ㆍ 일반 이미지 속성(색상, 조명, 분위기 등) ㆍ 장면 시맨틱 파싱 ㆍ 이미지 캡션 ㆍ 세분화 및 알파 마스크 ㆍ 깊이 맵 ㆍ 비파괴 이미지 조작(예컨대, 스타일 전송, 알파 마스킹 및 이미지 혼합, \"렌즈\", 필터,…) 전술한 바와 같이, 본 실시예는 표준적이고 효율적인 방식으로 ISOBMFF 호환 파일 포맷으로 AI 메타데이터의 저 장 및 시그널링을 가능하게 한다. 이를 달성하기 위해, 후속하는 파일 포맷 박스(예컨대, 컴퓨터 판독가능 객 체 지향 빌딩 블록) 및 관계가 정의되어 ISO 기반 미디어 파일 포맷 호환 접근 방식에서 AI 관련 메타데이터를 저장하고 시그널링할 수 있다. 1. AI 기반 알고리즘에 대한 설명 메타데이터를 포함하는 새로운 속성 박스. 2. AI 기반 알고리즘 메타데이터 출력을 저장하는 새 박스. 이 박스에는 일반 페이로드 정의가 있을 수 있고, 따라서 모든 AI 알고리즘 출력과 호환된다. 추가 서비스 및 스키마 정보가 알고리즘 출력의 시맨틱 및 신택스 정보를 제공한다. 3. 정의된 데이터 흐름에서 실행되는 여러 알고리즘으로 구성된 AI 프로세스에 대한 정보를 포함하는 새 박스. 4. 시간적으로 변경되는 방식으로 AI 기반 알고리즘 출력 메타데이터를 포함하는 시간지정된 메타데이터 트랙에 대한 새로운 미디어 샘플 정의. 5. 위에서 언급한 새 박스를 ISO 기반 미디어 파일 포맷의 다른 정보를 포함하는 엔티티와 관련시키기 위한 관 계 정의. 본 실시예에서, 데이터 캐리지 메커니즘은 데이터 신택스로부터 분리될 수 있다. 동시에, AI 특정 데이터를 생 성하는 데 사용되는 AI 서비스에 대한 포인터가 표시될 수 있다. 이를 달성하기 위해, AI 속성에는 다음 신택 스 포함될 수 있다. 1. 서비스 정의 표시자 2. AI 데이터 생성에 사용되는 서비스의 버전을 나타내는 서비스 버전 3. AI 서비스에 대한 추가 세부 정보를 제공하는 서비스 설명 4. 저장된 AI 데이터를 파싱하기 위한 신택스 정의를 제공하는 서비스 스키마 위치. 이 스키마는 AI 데이터에 대한 일반 컨테이너를 갖는 데 필요한 유연성을 제공한다. 5. AI 데이터를 전달하는 일반적인 데이터 구조. 6. 서로 다른 AI 프로세스 간에 입/출력 종속성을 관련시키는 일반적인 메커니즘. 예를 들어, 얼굴 인식 AI 프 로세스는 이미지 내의 얼굴에 대한 경계 박스를 제공하기 위해 먼저 얼굴 검출기에 의존한다. 7. 활용된 신경망 모델을 저장하거나 가리키는 일반적인 메커니즘. 본 실시예는 다음과 같은 방식에 따라 위에 제시된 신택스 요소에 대한 새로운 항목 속성 또는 새로운 박스를 정의한다. 항목 5: 항목 5는 AI 데이터를 전달하는 일반 데이터 구조와 관련이 있다. 이것은 VAIDataBox라는 새 박스를 정의함으로 써 구현될 수 있다. 이 박스는 ItemPropertyContainerBox 또는 메타 박스 또는 미디어 박스 내의 다른 위치에 저장될 수 있다. VAIDataBox의 신택스 정의는 다음과 같다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "vai_data는 불투명한 데이터이며 그 형식은 schema_location에 나열된 스키마(있는 경우)에 의해 또는 서비스에 의해 정의된다. VaiDataBox를 사용하는 것에 대한 대안은 포함하는 구조에 직접 vai_data [] 어레이를 포함하는 것이다(예컨대, vai_data []는 아래의 실시예에서 VAIIProperty에 직접 포함될 수 있다). 항목 1, 2, 3 및 4: 항목 1, 2, 3 및 4는 서비스 정의 표시자, 서비스 버전, 서비스 설명 및 서비스 스키마 위치와 관련된다. 이를 위해, 새 항목 속성이 정의될 수 있다. 이러한 정의는 다음과 같을 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "서비스는 예컨대 VAIDataBox의 vai_data를 생성한 서비스를 식별하는 데 사용되는 예컨대, UTF-8 문자를 사용하 는 널(null)로 종결되는 문자열과 같은 URL 또는 URN 엔트리일 수 있다. service_version은 UTF-8 문자를 사용하는 널로 종결되는 문자열로 정의된 서비스의 버전이다. 그것은 또한 널 로 종결되는 비어 있는 문자열일 수도 있다. service_description은 VAIDataBox를 생성한 사람이 읽을 수 있는 서비스의 설명을 포함하는 널로 종결되는 문 자열이다. 그것은 널로 종결되는 비어 있는 문자열일 수 있다. schema_location은 VAIDataBox 데이터가 준수하는 스키마(들)에 대해 0개 이상의 URL의, UTF-8 문자 형식의 공 백으로 구분된 목록으로 구성된 널(null)로 종결되는 문자열이다. 그것은 널로 종결되는 비어 있는 문자열일 수 있다. 위에서 사용된 데이터 유형은 예시이며 실시예는 다른 데이터 유형으로 유사하게 실현될 수 있음을 이해해야 한 다. 예를 들어, URI를 사용하여 서비스를 식별하는 대신, UUID 또는 등록된 유형 값(예컨대, 4자 코드)을 식별 자로 사용할 수 있다. 다른 예에서, service_version은 부호없는 정수 값 또는 부호없는 정수 값들의 시퀀스로 (예컨대, 주 버전 및 부 버전으로) 지정될 수 있다. 실시예는 위에서 설명된 하나 이상의 요소(service, service_version, service_description, schema_location, VAIDataBox)의 임의의 세트 등에 적용되지만 이에 국한되지 않음을 이해해야 한다. 항목 6: 항목 6은 서로 다른 AI 프로세스 간에 입/출력 종속성을 연관시키는 일반적인 메커니즘과 관련된다. 이를 위해, 속성의 입/출력 관계를 저장하기 위해 ItemPropertyRelationBox라는 새 박스를 정의할 수 있다. 이 박스 는 ItemPropertiesBox('iprp') 또는 메타 박스 내의 임의의 다른 박스 안에 있을 수 있다.ItemPropertyRelationBox에 대한 신택스 정의는 다음과 같다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "input_count는 이 프로세스가 입수한 입력 properties의 수(1 내지 n)이다. output_count는 이 프로세스가 생성한 출력 properties의 수(1 내지 n)이다. property_index는 이 프로세스의 입력 또는 출력에서 사용된 동일한 ItemPropertiesBox에 포함된 ItemPropertyContainerBox에 있는 property의 1-기반 인덱스이다. 실시예에서, 박스 ItemPropertyRelationBox는 다음과 같이 ItemPropertyAssociation의 새로운 버전 내에 상주 할 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "relation은 나열된 item_ID에 대한 속성 입력/출력 관계를 정의한다. 다른 실시예에서, 아이템 속성 관계는 예를 들어, 아래와 같이 ItemPropertyAssociationBox의 끝에 첨부될 수 있다. 이 실시예는 레거시 파서와 더 호환될 수 있다. 실시예에 따르면, ItemPropertyRelationBox는 대안적으로 데이터 구조(즉, 박스 헤더를 가지지 않음)일 수 있다. AI 페이로드 데이터는 메타 박스 또는 미디어 데이터(mdat) 박스에 저장될 수 있다. 1. AI 페이로드 데이터는 도 3에 도시된 바와 같이 AI 속성과 긴밀한 결합을 가지면서 저장되고 시그널링된다. 2. AI 페이로드 데이터는 도 4에 도시된 바와 같이 항목으로 저장되고 시그널링된다. AI 페이로드가 AI 속성과 긴밀한 결합을 가지면서 저장되고 시그널링되는 경우, VAIIProperty 박스는 VAIDataBox를 포함할 수 있다. 이 예에서, AI 속성은 관련 AI 페이로드 데이터를 포함한다. 도 3은 이러한 저 장 메커니즘과 함께 HEIF 미디어 파일을 도시한다. 미디어 파일은 미디어 데이터, 즉 이미지 미디어 데이터를 전달하기 위한 'mdat' 박스를 포함한다. 또한, 미디어 파일은 모든 관련 AI 메타데이터 및 AI 페이로드 데이터를 전달하기 위한 'meta' 박스를 포함한다. 따라서, 메타데이터의 수정은 미디어 데이터 오프 셋에 최소한의 영향을 미칠 수 있으며, 이는 사용 사례(use-cases)를 재편집할 때 바람직할 수 있다. AI 페이로드가 항목으로 저장되고 시그널링되는 경우, AI 페이로드는 메타 또는 미디어 데이터 박스에 항목으로 저장될 수 있다. 이 예에서, AI 속성은 메타데이터(예컨대, AI 페이로드를 생성하는 데 사용된 서비스의 URI) 를 포함하지만 AI 페이로드는 포함하지 않는다. 도 4는 그러한 저장이 HEIF 파일에서 어떻게 보이는지 설 명한다. 도 4에서 볼 수 있듯이, AI 페이로드는 'mdat' 박스에서 '항목'으로 표시되는 불투명 데이터로서 'mdat' 박스에 저장될 수 있다. 실시예로서, 'meta' 박스 내부의 'idat' 박스를 이용하여 동일한 표현이 이 루어질 수 있으며, 'meta' 박스 내부에서 AI 페이로드를 불투명 데이터로 저장하는 것이 가능하다. 이 경 우, 항목 위치 박스('iloc')에 표시된 AI 항목의 construction_method은 idat_offset에 대응하는 1로 설 정되어야 한다. 이것은 'mdat'조작이 번거롭거나 원하지 않는 경우에 바람직할 수 있다. 이 옵션에서, 이전에 ItemPropertyRelationBox로 표시되었던 AI 프로세스는 'vai'일 수 있는 특정 항목 참조 유 형을 갖는 항목 참조 메커니즘으로 ('iref' 박스 활용함으로써) 대체될 수 있다. ItemReference Box는 HEIF 사 양(ISO/IEC 23008-12)에서 다음과 같이 정의된다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "실시예에 따르면, 'vai'라는 새로운 아이템 참조 유형이 정의될 수 있다. 이 참조 유형에서, from_item_ID는 AI 페이로드를 포함하는 항목을 나타낼 수 있으며 to_item_ID는 AI 결과를 생성하기 위한 입력으로 사용할 수 있는 AI 항목 ID를 참조할 수 있다. 실시예에 따르면, 참조는 \"종속\" 관계일 수 있으며, 여기서 from_item_ID는 to_item_ID로 나열된 항목으로부터 입력을 요구하는 AI 항목을 나타낸다. 항목 7: 항목 7은 활용된 신경망 모델을 저장하거나 가리키는 일반적인 메커니즘과 관련된다. 이것은 NNProperty라고 하는 새로운 속성에 의해 그리고 이 속성 박스에 적용된 신경 정보를 저장함으로써 구현될 수 있다. 이 속성의 신택스는 다음과 같을 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "nn_description은 신경망 모드에 대한 텍스트 설명(예컨대, \"Yolo Detector\")이다. nn_representation은 신경망(NN) 표현 세부정보를 포함하는, 텍스트형 또는 열거형의 포맷이 잘 지정된 문자열 필드이다. 가능한 값은 [\"raw\", \"onnx\", \"h5\", \"meta\", \"zip\" 등]일 수 있으나, 이에 국한되지는 않는다. 이 필드는 신경망의 표현 포맷에 대한 정보를 제공한다. 이 필드를 확인함으로써, NN 사용자는 저장된 또는 지적 된 신경망 모델에서 사용해야 하는 압축 해제기 또는 포맷 판독기를 알 수 있다. nn_URL은 신경망 모델에 대한 포인터를 제공할 수 있는 URI 또는 URL이다. nn_URL이 NULL이면, NNModelBox가 있어야 하고 신경망을 포함할 것으로 예상된다. 신경망 데이터 모델은 다음과 같이 NNModelBox 박스에 저장될 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "nn_model_data는 신경망의 표현을 포함하는 불투명한 데이터 어레이이다. 다른 실시예에 따르면, NN 모델 데이터는 HEIF의 다른 항목일 수 있다. 이러한 시나리오에서, 신경망 모델 데 이터는 콘텐츠 제작자의 선호도에 따라 메타 '박스' 내의 'idat' 박스 또는 미디어 박스에 저장될 수 있다. 이 러한 시나리오에서, NN 모델 항목은 'nnrf' 유형의 항목 참조를 갖는 이미지 항목에 링크될 수 있다. 이 4자 코드는 일 예이며 다른 코드도 사용될 수 있다. 다른 실시예에 따르면, NNModelBox가 있거나 없는 NNProperty는 신경망 모델 항목에 첨부될 수 있다. 시간이 지정된 메타데이터 트랙에 AI 메타데이터 저장: AI 메타데이터가 이미지 시퀀스의 샘플 또는 비디오 트랙의 샘플에 속하는 경우, AI 메타데이터는 시간이 지정 된 메타데이터 트랙의 샘플로 저장될 수 있다. 샘플은 불투명한 데이터 또는 데이터 블롭(blob)으로 저장될 수 있다. 메타데이터 샘플에 대한 샘플 설명은 다음과 같이 정의될 수 있다."}
{"patent_id": "10-2021-7011473", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "AIInfoBox는 이전에 정의된 VAIIProperty 박스와 동일한 구조를 가질 수 있다. 각 AI 메타데이터 샘플은 서로 다른 AI 알고리즘 또는 서비스 결과를 포함할 수 있으며, 각 서비스는 별도의 AIMetadataSampleEntry에 정의될 수 있고 SampleToChunkBox 내의 sample_description_index 필드를 통해 샘플 에 할당될 수 있다. 실시예에 따르면, 활용된 신경망 모델 및 관련 정보는 메타 박스에 저장될 수 있고 EntitytoGroup 박스를 통해 미디어 트랙과 관련될 수 있다. AI 기반 알고리즘의 출력으로 생성된 사전 도출된 코딩된 이미지에 대한 메타데이터: 이하에서 설명되는 실시예는 AI 기반 알고리즘의 출력이 수정된 이미지를 생성한 다음 HEIF 파일에 코딩 및 저 장되는 경우 적용 가능하다. 사전 도출 이미지 속성은 사전 도출된 코딩된 이미지를 생성하기 위해 참조 된 이미지 항목에 적용된 도출 작업 의 유형을 나타낸다. 이 설명 항목 속성은 사전 도출된 코딩된 이미지에 적용가능하다. 사전 도출 이미지 속 성은 관련 사전 도출된 코딩된 이미지의 모든 '기본' 참조 이미지 항목이 사전 도출된 코딩된 이미지를 생성하 기 위해 사전 도출 속성에 나열된 모든 도출 작업에 활용되었음을 나타낸다. 실시예에 따르면, 사전 도출 항목 속성의 신택스는 사전 도출에서 사용된 알고리즘(들)에 관련된 메타데이터를 포함하기 위해 다음과 같이 첨부된다. service, service_version, service_description, schema_location 및 VAIDataBox()의 시맨틱은 위와 같이 지 정되거나, 단순히 AI 기반 알고리즘보다는 임의의 사전 도출 작업에 적용되도록 일반화될 수 있다. 'vai'와 같은 pre_derivation_4cc의 새로운 값은 AI 알고리즘에 기초한 사전 도출을 나타내는데 정의될 수 있다. 또는, 'srvc'와 같은 pre-derivation_4cc의 새로운 값이 지정된 서비스에 기초한 사전 도출을 나타내도 록 지정될 수 있다. pre_derivation_4cc가 새로운 유형(예컨대, 'vai' 또는 'srvc')과 같을 때 service, service_version, service_description, schema_location 및 VAIDataBox()가 있어야 할 수 있다. 또 다른 접근 방식에서는, pre_derivation_4cc가 새로운 유형과 동일한 경우에만 service, service_version, service_description, schema_location 및 VAIDataBox()가 조건부로 있어야 하도록 신택스가 변경된다. 임의의 데이터가 pre_derivation_4cc 값의 루프를 따를 때 entry_count는 1이 되어야 한다. 결과적으로, 서비 스 관련 신택스 요소가 어느 사전 도출 작업을 설명하는지는 명확하다. 도 5는 지능형 콘텐츠를 위한 미디어 포맷으로서의 HEIF의 예를 보여준다. 이 예에서는 이미지인 시각적 콘텐츠 는 예를 들어 스마트 폰과 같은 캡처 장치에 의해 캡처된다. 이미지는 HEIF 컨테이너에 저장되고 시각적 AI 처리를 위해 클라우드 서비스 또는 캡처 장치의 AI 처리 장치에 제공된다. 먼저, AI 처리에서 시 각적 콘텐츠의 컨텍스트가 검출된다. 이 예에서, 컨텍스트는 키워드 \"파티\", \"생일\", \"어린 아이\", \"즐거운 시 간\",…으로 정의될 수 있다. 컨텍스트 데이터는 HEIF 컨테이너에 메타데이터로서 저장된다. 컨텍스트 검출 후, 이미지는 객체(예컨대, \"케이크\", \"캔디\", \"머핀\", \"캔들\",…) 및 얼굴을 검출하기 위해 처리된다. 얼굴 및 객체에 대한 데이터도 HEIF 컨테이너에 메타데이터로 저장된다. 실시예에 따른 AI 알고리즘의 프로세스는 도 6을 참조하여 보다 상세한 방식으로 논의된다. 도 6에 도시된 바 와 같이, 프로세스는 예를 들어 HEIF의 이미지 데이터를 수신함으로써 시작된다. 처음에는 이미지 속성이 검출 되고, 그 후 컨텍스트, 객체 및 얼굴이 검출된다. 그런 다음 가능하면 얼굴이 인식, 즉 식별된다. 인식된 사 람들은 세분화된다. 깊이 맵이 생성될 수 있으며, 이 깊이 맵에 기초하여, 인식된 사람에 대해 보케(Bokeh) 효 과가 생성될 수 있다. AI 알고리즘의 결과, 즉 검출/생성된 모든 데이터는 HEIF 파일에 메타데이터로 저장되고 이후 출력된다. 출력되는 HEIF 컨테이너는 이제 이미지 파일뿐만 아니라 AI 처리 알고리즘에서 생성된 이미지 의 식별된 콘텐츠를 정의하는 메타데이터도 포함한다. 도 7은 일 실시예에 따른 방법을 예시하는 흐름도이다. 방법은 컨테이너 파일 포맷으로 시각적 데이터를 수신 하는 단계와, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하는 단계와, 검출된 하나 이상의 콘텐츠 요소, 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 단계와, 시각적 데이터와 연계하여 메타데이터를 컨테이너 파일에 포함시키는 단 계를 포함한다. 일 실시예에 따르면, 시각적 데이터는 하나 이상의 신경망에 의해 처리될 수 있다. 대안 적으로, 하나 이상의 콘텐츠 요소를 검출하기 위해 비 신경망 기반 알고리즘이 대신 사용될 수 있다. 일 실시예에 따른 장치는 컨테이너 파일 포맷으로 시각적 데이터를 수신하기 위한 수단과, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하는 수단과, 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 수단과, 시각적 데이터 와 연계하여 메타데이터를 컨테이너 파일에 포함시키는 수단을 포함한다. 수단은 적어도 하나의 프로세서, 및컴퓨터 프로그램 코드를 포함하는 메모리를 포함하며, 프로세서는 프로세서 회로를 더 포함할 수 있다. 메모리 및 컴퓨터 프로그램 코드는 적어도 하나의 프로세서와 함께 장치로 하여금 다양한 실시예에 따른 도 7의 방법을 수행하게 하도록 구성된다. 다양한 실시예는 메모리에 상주하고 관련 장치로 하여금 방법을 수행하게 하는 컴퓨터 프로그램 코드의 도움으 로 구현될 수 있다. 예를 들어, 장치는 데이터를 처리, 수신 및 전송하기 위한 회로 및 전자기기, 메모리 내의 컴퓨터 프로그램 코드, 및 컴퓨터 프로그램 코드를 실행하면 장치로 하여금 실시예의 특징을 수행하게 하는 프 로세서를 포함할 수 있다. 또한, 서버와 같은 네트워크 장치는 데이터를 처리, 수신 및 전송하기 위한 회로 및 전자기기, 메모리 내의 컴퓨터 프로그램 코드 및 컴퓨터 프로그램 코드를 실행하면 네트워크 장치로 하여금 실 시예의 기능을 수행하도록 하는 프로세서를 포함할 수 있다. 컴퓨터 프로그램 코드는 하나 이상의 동작 특성을 포함한다. 상기 동작 특성은 상기 프로세서의 유형에 기초한 상기 컴퓨터에 의한 구성을 통해 정의되고, 시스 템은 버스에 의해 상기 프로세서에 연결될 수 있으며, 시스템의 프로그래밍 가능한 동작 특성은 컨테이너 파일 포맷으로 시각적 데이터를 수신하는 것과, 하나 이상의 콘텐츠 요소를 검출하기 위해 시각적 데이터를 처리하는 것과, 검출된 하나 이상의 콘텐츠 요소 및 상기 하나 이상의 콘텐츠 요소를 검출하기 위해 사용된 프로세스에 대한 정보를 메타데이터로서 저장하는 것, 및 시각적 데이터와 연계하여 메타데이터를 컨테이너 파일에 포함시 키는 것을 포함한다. 필요에 따라, 본 명세서에서 논의된 상이한 기능들은 상이한 순서로 및/또는 다른 것과 동시에 수행될 수 있다. 또한, 원한다면, 전술한 기능 및 실시예 중 하나 이상은 선택적이거나 결합될 수 있다. 실시예의 다양한 측면이 독립항에 기재되어 있지만, 다른 측면은 설명된 실시예 및/또는 종속항의 특징과 독립 항의 특징의 상이한 조합을 포함하며, 청구 범위에 명시적으로 명시된 조합만을 포함하는 것은 아니다. 또한, 상기 설명은 예시적인 실시예를 설명하지만, 이러한 설명은 제한적인 의미로 보여서는 안된다는 점에 유 의한다. 오히려, 첨부된 청구 범위에 정의된 본 개시의 범위를 벗어나지 않고 이루어질 수 있는 여러 변형 및 수정이 있을 수 있다."}
{"patent_id": "10-2021-7011473", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다음에서, 다양한 실시예가 첨부된 도면을 참조하여 더 상세히 설명될 것이다. 도 1은 실시예에 따른 장치를 도시한다. 도 2는 컨볼루션 신경망의 예를 보여준다. 도 3은 HEIF에서 AI 속성 저장을 위한 제1 실시예를 도시한다. 도 4는 HEIF에서 AI 속성 저장을 위한 제2 실시예를 도시한다. 도 5는 지능형 콘텐츠를 위한 미디어 포맷으로서의 HEIF의 예를 도시한다. 도 6은 시각적 콘텐츠 인식을 위한 프로세스의 예를 도시한다. 도 7은 실시예에 따른 방법을 예시하는 흐름도이다."}
