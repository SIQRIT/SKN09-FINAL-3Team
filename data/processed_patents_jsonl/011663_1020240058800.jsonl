{"patent_id": "10-2024-0058800", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0010516", "출원번호": "10-2024-0058800", "발명의 명칭": "딥 러닝 기반의 문장 스타일 변환 방법 및 이를 수행하기 위한 컴퓨팅 장치", "출원인": "아주대학교산학협력단", "발명자": "손경아"}}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에 있어서,상기 문장 스타일 변환 방법은,상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하는 단계를 포함하는, 문장 스타일 변환방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 스타일 임베딩을 출력하는 단계는,상기 시맨틱 인코더로부터 상기 의미 임베딩을 전달받고, 상기 의미 임베딩을 긍정 스타일 벡터 및 부정 스타일벡터 각각과 연산하여 각각의 유사도를 구하는 단계; 및상기 구한 유사도를 서로 비교하여, 유사도가 더 높은 벡터를 스타일 임베딩으로 생성하는 단계를 포함하는, 문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 문법 임베딩을 출력하는 단계는,상기 입력 문장을 토큰화 하고, 선형적으로 구문화하여 구문정보를 생성하는 단계;선형적인 상기 구문 정보를 문법 임베드하여 각각의 문법 벡터를 생성하는 단계; 및상기 생성된 각각의 문법 벡터를 시퀀스로 하여, 상기 문법 임베딩을 생성하는 단계를 포함하는, 문장 스타일변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서, 상기 문법 벡터를 생성하는 단계는,상기 입력 문장을 토큰화 하고, 상기 토큰의 순서 정보를 고려하는, 문장 스타일 변환 방법.공개특허 10-2025-0010516-3-청구항 5"}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항5에 있어서,상기 재구성 손실을 구하는 단계는, 아래의 수학식 1에 의하여, 재구성 손실(Lres)을 구하는 단계를 포함하는, 문장 스타일 변환 방법.(수학식 1)x : 입력 문장의 토큰 목록px : 입력 문장에 대한 구문 정보sx : 입력 문장에 대한 스타일 정보xi : 학습 데이터 셋 중 i번째 입력 문장xi' : i번째 입력 문장에 대한 복원 문장"}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,상기 문장 스타일 변환 방법은,상기 스타일 선택기가 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답값으로 하는 단계; 및상기 입력 문장을 기반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(style classification loss)을 산출하는 단계를 포함하는, 문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서,상기 스타일 분류 손실을 구하는 단계는,아래의 수학식 2에 의하여, 스타일 분류 손실(Lstyle)을 구하는 단계를 포함하는, 문장 스타일 변환 방법.공개특허 10-2025-0010516-4-(수학식 2) C : 스타일 분류자Sim(A, B) : A와B의 유사도를 구하는 함수y : 정답 값(스타일 정보에 대한 정답 값)qi : i번째 입력 문장에 대한 스타일 선택기의 실제 스타일 분포qi : i번째 입력 문장에 대한 스타일 선택기의 예측된 스타일 분포"}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 5에 있어서,상기 문장 스타일 변환 방법은,상기 재구성 손실이 최소화 되도록, 상기 디코더의 신경망을 학습시키는 단계를 포함하는, 문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 7에 있어서,상기 문장 스타일 변환 방법은,상기 스타일 분류 손실이 최소화 되도록, 상기 스타일 선택기의 신경망을 학습시키는 단계를 포함하는, 문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 1에 있어서,상기 문장 스타일 변환 방법은,상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하는 단계; 상기 스타일 선택기이 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답값으로 하고, 상기 입력 문장을기반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(styleclassification loss)을 산출하는 단계; 및상기 재구성 손실과 상기 스타일 분류 손실을 합산한, 전체손실(joint training loss, L)을 산출하는 단계를 포함하는, 문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서상기 문장 스타일 변환 방법은,공개특허 10-2025-0010516-5-상기 전체손실이 최소화 되도록, 상기 디코더 및 상기 스타일 선택기의 신경망을 학습시키는 단계를 포함하는,문장 스타일 변환 방법."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "하나 이상의 프로세서들;메모리; 및하나 이상의 프로그램들을 포함하고,상기 하나 이상의 프로그램들은 상기 메모리에 저장되고, 상기 하나 이상의 프로세서들에 의해 실행되도록 구성되고, 딥 러닝 기반의 문장 스타일 변환을 위한 컴퓨팅 장치로서, 상기 하나 이상의 프로그램들은, 시맨틱 인코더가 문장을 입력 받아 입력 문장에 대한 의미 정보를 포함하는 의미 임베딩을 출력하기 위한 명령;스타일 선택기(style selector)가 상기 입력 문장에 대한 스타일 임베딩을 출력하기 위한 명령;신택틱 인코더(syntactic encoder)가 상기 입력 문장의 구문 정보를 입력받아 상기 입력 문장에 대한 문법 임베딩을 출력하기 위한 명령;조합 임베딩부가 상기 의미 임베딩, 상기 문법 임베딩 및 상기 스타일 임베딩을 받아서 조합 임베딩을 생성하기위한 명령; 및디코더가 상기 조합 임베딩을 사용하여, 상기 입력 문장이 복원된 복원 문장을 출력하기 위한 명령을 포함하는,컴퓨팅 장치."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 13에 있어서,상기 스타일 임베딩을 출력하기 위한 명령은,상기 시맨틱 인코더로부터 상기 의미 임베딩을 전달받고, 상기 의미 임베딩을 긍정 스타일 벡터 및 부정 스타일벡터 각각과 연산하여 각각의 유사도를 구하기 위한 명령; 및상기 구한 유사도를 서로 비교하여, 유사도가 더 높은 벡터를 스타일 임베딩으로 생성하기 위한 명령을 포함하는, 컴퓨팅 장치."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 13에 있어서,상기 문법 임베딩을 출력하기 위한 명령은,상기 입력 문장을 토큰화 하고, 선형적으로 구문화하여 구문정보를 생성하기 위한 명령;선형적인 상기 구문 정보를 문법 임베드하여 각각의 문법 벡터를 생성하기 위한 명령; 및상기 생성된 각각의 문법 벡터를 시퀀스로 하여, 상기 문법 임베딩을 생성하기 위한 명령을 포함하는, 컴퓨팅장치."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 15에 있어서, 공개특허 10-2025-0010516-6-상기 문법 벡터를 생성하기 위한 명령은,상기 입력 문장을 토큰화 하고, 상기 토큰의 순서 정보를 고려하는, 컴퓨팅 장치."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 13에 있어서,상기 컴퓨팅 장치는,상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하기 위한 명령을 포함하고,상기 재구성 손실을 구하기 위한 명령은, 아래의 수학식1에 의하여, 재구성 손실(Lres)을 구하기 위한 명령을 포함하는, 컴퓨팅 장치.x : 입력 문장의 토큰 목록px : 입력 문장에 대한 구문 정보sx : 입력 문장에 대한 스타일 정보xi : 학습 데이터 셋 중 i번째 입력 문장xi' : i번째 입력 문장에 대한 복원 문장"}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 13에 있어서,상기 컴퓨팅 장치는,상기 스타일 선택기가 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답값으로 하기 위한명령; 및상기 입력 문장을 기반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(style classification loss)을 산출하기 위한 명령을 포함하고,상기 스타일 분류 손실을 구하기 위한 명령은,아래의 수학식2에 의하여, 스타일 분류 손실(Lstyle)을 구하기 위한 명령을 포함하는, 컴퓨팅 장치. C : 스타일 분류자Sim(A, B) : A와B의 유사도를 구하는 함수계산y : 정답 값(스타일 정보에 대한 정답 값)qi : i번째 입력 문장에 대한 스타일 선택기의 실제 스타일 분포공개특허 10-2025-0010516-7-qi : i번째 입력 문장에 대한 스타일 선택기의 예측된 스타일 분포"}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 13 있어서,상기 컴퓨팅 장치는,상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하기 위한 명령; 상기 스타일 선택기이 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답값으로 하고, 상기 입력 문장을기반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(styleclassification loss)을 산출하기 위한 명령; 및상기 재구성 손실과 상기 스타일 분류 손실을 합산한, 전체손실(joint training loss, L)을 산출하기 위한 명령을 포함하는, 컴퓨팅 장치."}
{"patent_id": "10-2024-0058800", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 19 있어서상기 컴퓨팅 장치는,상기 전체손실이 최소화 되도록, 상기 디코더 및 상기 스타일 선택기의 신경망을 학습시키기 위한 명령을 포함하는, 컴퓨팅 장치."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "개시되는 일 실시예에 따른 문장 스타일 변환 장치는, 딥 러닝 기반의 문장 스타일 변환을 위한 방법으로서, 시 맨틱 인코더(semantic encoder)가 문장을 입력 받아 입력 문장에 대한 의미 정보를 포함하는 의미 임베딩을 출력 하는 단계, 스타일 선택기(style selector)가 상기 입력 문장에 대한 스타일 임베딩을 출력하는 단계, 신택틱 인 코더(syntactic encoder)가 상기 입력 문장의 구문 정보를 입력받아 상기 입력 문장에 대한 문법 임베딩을 출력 하는 단계, 조합 임베딩부가 상기 의미 임베딩, 상기 문법 임베딩, 상기 스타일 임베딩에 기초하여 조합 임베딩 을 생성하는 단계 및 디코더가 상기 조합 임베딩을 사용하여, 상기 입력 문장이 복원된 복원 문장을 출력하는 단 계를 포함한다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 실시예는 딥 러닝 기반의 문장 스타일 변환 기술과 관련된다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 인공지능 기술의 분야에서, 인공지능이 사람과 소통하는 경우가 많아지는 것에 따라, 인공지능의 자연어 생성 기술(natural language generation)은 점점 더 중요한 기술이 되고 있다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "해당 기술분야의 발전 및 적용분야의 확대에 따라, 인공지능이 자연어 문장을 온전히 새로 생성하는 것은 물론, 이미 생성된 자연어 문장을 상황에 맞추어 뉘앙스(스타일) 등을 변경하는 것 또한 중요한 기술로 대두되고 있다. 이러한 기술을 문장의 스타일 변환기술이라고 한다. 특히, 문장의 스타일을 변환하는데 있어서, 특정 기준(예를 들어, 긍정정도)에 따라, 스타일의 강약(예를 들어, \"매우 아니다\" 부터 \"매우 그렇다\")을 선택할 수 있는 기술을, 조절가능한 문장 스타일 변환기술 (controllable style transfer)이라고 한다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "한편 최근 해당 기술분야에서는, 새롭게 생성된 문장이 스타일의 강약에 따라, 유창성(자연스러운 정도, fluency)가 안정적이지 못하고 변동하는 문제를 직면하고 있다. 선행기술문헌 특허문헌(특허문헌 0001) 한국공개특허공보 제10-2019-0140803호(2019.12.20)"}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예는 문장 변환 시 스타일의 정도가 변경되어도 일관되고 안정적인 유창성(fluency, 자연스러운 정도)을 유지할 수 있는 문장 스타일 변환 장치 및 방법을 제공하기 위한 것이다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "개시되는 일 실시예에 따른 문장 스타일 변환 방법은, 딥 러닝 기반의 문장 스타일 변환을 위한 방법으로서, 시 맨틱 인코더(semantic encoder)가 문장을 입력 받아 입력 문장에 대한 의미 정보를 포함하는 의미 임베딩을 출 력하는 단계, 스타일 선택기(style selector)가 상기 입력 문장에 대한 스타일 임베딩을 출력하는 단계, 신택틱 인코더(syntactic encoder)가 상기 입력 문장의 구문 정보를 입력받아 상기 입력 문장에 대한 문법 임베딩을 출 력하는 단계, 조합 임베딩부가 상기 의미 임베딩, 상기 문법 임베딩, 상기 스타일 임베딩에 기초하여 조합 임베 딩을 생성하는 단계 및 디코더가 상기 조합 임베딩을 사용하여, 상기 입력 문장이 복원된 복원 문장을 출력하는 단계를 포함한다. 상기 스타일 임베딩을 출력하는 단계는, 상기 시맨틱 인코더로부터 상기 의미 임베딩을 전달받고, 상기 의미 임 베딩을 긍정 스타일 벡터 및 부정 스타일 벡터 각각과 연산하여 각각의 유사도를 구하는 단계 및 상기 구한 유 사도를 서로 비교하여, 유사도가 더 높은 벡터를 스타일 임베딩으로 생성하는 단계를 포함한다. 상기 문법 임베딩을 출력하는 단계는, 상기 입력 문장을 토큰화 하고, 선형적으로 구문화하여 구문정보를 생성 하는 단계, 선형적인 상기 구문 정보를 문법 임베드하여 각각의 문법 벡터를 생성하는 단계 및 상기 생성된 각 각의 문법 벡터를 시퀀스로 하여, 상기 문법 임베딩을 생성하는 단계를 포함한다. 상기 문법 벡터를 생성하는 단계는, 상기 입력 문장을 토큰화 하고, 상기 토큰의 순서 정보를 고려한다. 상기 문장 스타일 변환 방법은, 상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상 기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하는 단계를 포 함한다. 상기 재구성 손실을 구하는 단계는, 아래의 수학식 1에 의하여, 재구성 손실(Lres)을 구하는 단계를 포함한다. (수학식 1)"}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "x : 입력 문장의 토큰 목록 px : 입력 문장에 대한 구문 정보 sx : 입력 문장에 대한 스타일 정보 xi : 학습 데이터 셋 중 i번째 입력 문장 xi' : i번째 입력 문장에 대한 복원 문장 상기 문장 스타일 변환 방법은, 상기 스타일 선택기가 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답 값으로 하는 단계 및 상기 입력 문장을 기반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(style classification loss)을 산출하는 단계를 포함한다.상기 스타일 분류 손실을 구하는 단계는, 아래의 수학식 2에 의하여, 스타일 분류 손실(Lstyle)을 구하는 단계를 포함한다. (수학식 2)"}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 3, "content": "C : 스타일 분류자 Sim(A, B) : A와B의 유사도를 구하는 함수 y : 정답 값(스타일 정보에 대한 정답 값) qi : i번째 입력 문장에 대한 스타일 선택기의 실제 스타일 분포 qi : i번째 입력 문장에 대한 스타일 선택기의 예측된 스타일 분포 상기 문장 스타일 변환 방법은, 상기 재구성 손실이 최소화 되도록, 상기 디코더의 신경망을 학습시키는 단계를 포함한다. 상기 문장 스타일 변환 방법은, 상기 스타일 분류 손실이 최소화 되도록, 상기 스타일 선택기의 신경망을 학습 시키는 단계를 포함한다. 상기 문장 스타일 변환 방법은, 상기 디코더가 상기 복원 문장과 처음에 입력된 상기 입력 문장을 비교하여, 상 기 복원 문장이 상기 입력 문장으로부터 손실된 정도(재구성 손실, reconstruction loss)를 산출하는 단계, 상 기 스타일 선택기이 상기 입력 문장의 스타일을 입력받아 이를 스타일의 정답값으로 하고, 상기 입력 문장을 기 반으로 생성한 상기 스타일 임베딩과 상기 입력받은 스타일 정답값의 차이를 구하여, 스타일 분류 손실(style classification loss)을 산출하는 단계 및 상기 재구성 손실과 상기 스타일 분류 손실을 합산한, 전체손실 (joint training loss, L)을 산출하는 단계를 포함한다. 상기 문장 스타일 변환 방법은, 상기 전체손실이 최소화 되도록, 상기 디코더 및 상기 스타일 선택기의 신경망 을 학습시키는 단계를 포함한다. 개시되는 일 실시예에 따른 컴퓨팅 장치는, 하나 이상의 프로세서들, 메모리 및 하나 이상의 프로그램들을 포함 하고, 상기 하나 이상의 프로그램들은 상기 메모리에 저장되고, 상기 하나 이상의 프로세서들에 의해 실행되도 록 구성되고, 딥 러닝 기반의 문장 스타일 변환을 위한 컴퓨팅 장치로서, 상기 하나 이상의 프로그램들은, 시맨 틱 인코더가 문장을 입력 받아 입력 문장에 대한 의미 정보를 포함하는 의미 임베딩을 출력하기 위한 명령, 스 타일 선택기(style selector)가 상기 입력 문장에 대한 스타일 임베딩을 출력하기 위한 명령, 신택틱 인코더 (syntactic encoder)가 상기 입력 문장의 구문 정보를 입력받아 상기 입력 문장에 대한 문법 임베딩을 출력하기 위한 명령, 조합 임베딩부가 상기 의미 임베딩, 상기 문법 임베딩 및 상기 스타일 임베딩을 받아서 조합 임베딩 을 생성하기 위한 명령 및 디코더가 상기 조합 임베딩을 사용하여, 상기 입력 문장이 복원된 복원 문장을 출력 하기 위한 명령을 포함한다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "개시되는 실시예에 의하면, 문장을 특정 기준에 따라, 스타일의 강약을 조절하여 변경함에 있어서, 스타일의 강 약이 변경되는 경우에도 일관되고 안정적인 유창성(fluency, 자연스러운정도)를 유지하는 새로운 문장을 생성할 할 수 있게 된다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하여 본 발명의 구체적인 실시형태를 설명하기로 한다. 이하의 상세한 설명은 본 명세서에서 기술된 방법, 장치 및/또는 시스템에 대한 포괄적인 이해를 돕기 위해 제공된다. 그러나 이는 예시에 불과하며 본 발명은 이에 제한되지 않는다. 본 발명의 실시예들을 설명함에 있어서, 본 발명과 관련된 공지기술에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략하기로 한다. 그리고, 후술되는 용어들은 본 발명에서의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 상세한 설명에서 사용되 는 용어는 단지 본 발명의 실시예들을 기술하기 위한 것이며, 결코 제한적이어서는 안 된다. 명확하게 달리 사 용되지 않는 한, 단수 형태의 표현은 복수 형태의 의미를 포함한다. 본 설명에서, \"포함\" 또는 \"구비\"와 같은 표현은 어떤 특성들, 숫자들, 단계들, 동작들, 요소들, 이들의 일부 또는 조합을 가리키기 위한 것이며, 기술된 것 이외에 하나 또는 그 이상의 다른 특성, 숫자, 단계, 동작, 요소, 이들의 일부 또는 조합의 존재 또는 가능 성을 배제하도록 해석되어서는 안 된다. 예시적인 실시예에서, 문장 스타일 변환 장치는 문장, 문법정보, 스타일정보를 사용하여서, 스타일이 변환된 문 장을 생성할 수 있다. 일 실시 예에서, 스타일이란 문장의 내용이 호의적인지의 기준에 따라 긍정적 의미인지 부정적 의미인지를 나타내는 문장의 성질일 수 있다. 그러나 이는 일 실시 예일 뿐, 스타일은 다른 기준에 따라 결정될 수도 있다. 문장의 스타일을 변환한다는 것은 문장의 일부 단어를 변경하여 문장이 주는 느낌(감정) 또는 뉘앙스를 변경하 는 것을 의미할 수 있다. 도 1는 본 발명의 일 실시예에 따라, 문장 스타일 변환을 위한 컴퓨팅 장치가 학습단계를 수행하는 것을 설명하 기 위한 구성도이다. 도 1를 참조하면, 일 실시예에 따른 문장 스타일 변환 장치는 시맨틱 인코더(semantic encoder, 102), 신 택틱 인코더(syntactic encoder, 104), 스타일 선택기(style selector,106), 조합 임베딩부, 디코더 , 문장 입력부(102-1) 및 구문 입력부(104-1)를 포함할 수 있다. 문장 스타일 변환 장치는 딥 러닝 기반의 신경망을 통해 구현될 수 있다. 문장 스타일 변환 장치의 각 구성은 신경망들로 이루어질 수 있으며, 이하 각 구성에 대한 학습 과정에 대해 설명하기로 한다. 예시적인 실시예에서, 문장 입력부(102-1)는 외부로부터 문장을 입력받아서 시맨틱 인코더로 전달할 수 있 다. 이하, 외부로부터 입력된 해당 문장을 입력 문장이라고 한다. 시맨틱 인코더는 문장을 입력받아 문장에 대한 의미 정보를 포함하는 의미 임베딩을 출력할 수 있다. 시맨틱 인코더는 입력받은 문장을 특정 단위로 토큰화 하고 각각의 토큰을 의미 임베드하여 각각의 의미 벡터를 생성할 수 있다. 시맨틱 인코더는 생성된 각각의 의미 벡터를 시퀀스로 하여, 의미 임베딩을 생성 할 수 있다. 시맨틱 인코더는 생성한 의미 임베딩을 스타일 선택기로 전달할 수 있다. 스타일 선택기는 입력 문장에 대한 스타일 임베딩을 출력할 수 있다. 특정 스타일(예를 들어, 강한 긍정 스타일 또는 약한 부정 스타일 등등)을 임베드하여, 스타일 임베딩을 생성할 수 있다.스타일 선택기는 시맨틱 인코더로부터 전달받은 의미 임베딩을 긍정 스타일 벡터 및 부정 스타일 벡 터 각각과 연산하여 각각의 유사도를 구할 수 있다. 스타일 선택기는 구한 유사도를 서로 비교하여 어느 스타일 벡터와 유사도가 더 높은지 산출할 수 있다. 스타일 선택기는 유사도가 더 높은 벡터를 스타일 임 베딩으로 생성할 수 있다. 구문 입력부(104-1)는 외부로부터 입력 문장에 대한 구문 정보를 입력 받아 신택틱 인코더로 전달할 수 있 다. 신택틱 인코더는 문장의 구문 정보를 입력받아 입력 문장에 대한 문법 임베딩을 출력할 수 있다. 구문 정 보는 문장을 토큰화한 후 선형적으로 구문화한 정보이다. 신택틱 인코더는 입력받은 선형적인 구문 정보를 문법 임베드하여 각각의 문법 벡터를 생성할 수 있다. 해 당 과정에서 문장의 토큰의 순서 정보를 고려하여, 각각의 토큰에 문법 벡터를 생성할 수 있다. 신택틱 인코더 는 생성된 각각의 문법 벡터를 시퀀스로 하여, 문법 임베딩을 생성할 수 있다. 조합 임베딩부는 시맨틱 인코더로부터 의미 임베딩을, 신택틱 인코더로부터 문법 임베딩을, 스 타일 선택기으로부터 스타일 임베딩을 받아서 조합 임베딩을 생성할 수 있다. 일 실시예에서, 조합 임베딩 부는 의미 임베딩, 문법 임베딩, 및 스타일 임베딩을 연결(concatenated)하여 조합 임베딩을 생성할 수 있 다. 조합 임베딩부는 생성한 조합 임베딩을 디코터으로 전달할 수 있다. 디코더는 받은 조합 임베딩을 사용하여, 입력 문장이 복원된 복원 문장을 출력할 수 있다. 디코더는 복원 문장과 처음에 입력된 입력 문장을 비교하여, 복원 문장이 입력 문장으로부터 손실된 정도 를 산출할 수 있다. 이 손실된 정도는 복원 문장과 입력 문장과의 차이값을 사용하여 산출될 수 있다. 복원 문장과 입력 문장의 차이를 재구성 손실(reconstruction loss)이라고 한다. 문장 스타일 변환 장치는 재구성 손실이 최소화되도록 디코더의 신경망을 학습시킬 수 있다. 구체적인 재구성 손실 함수(Lres)은 아래의 수학식1에 의해 산출될 수 있다. [수학식 1]"}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "x : 입력 문장의 토큰 목록 px : 입력 문장에 대한 구문 정보 sx : 입력 문장에 대한 스타일 정보 xi : 학습 데이터 셋 중 i번째 입력 문장 xi' : i번째 입력 문장에 대한 복원 문장 한편, 스타일 선택기는 입력 문장의 스타일을 입력받아 이를 스타일 정답값으로 사용할 수 있다. 스타일 정답값이란 입력 문장에 가장 적합하다고 여겨지는 스타일 임베딩이다. 스타일 선택기는 입력 문장을 기반으로 생성한 스타일 임베딩과 입력받은 스타일 정답값을 비교하여, 스타 일 임베딩과 스타일 정답값의 차이를 산출할 수 있다. 이때, 스타일 임베딩과 스타일 정답값의 차이를 스타일 분류 손실(style classification loss)이라고 한다. 문장 스타일 변환 장치는 스타일 분류 손실이 최소화되도록 스타일 선택기의 신경망을 학습시킬 수 있다. 구체적인 스타일 분류 손실 함수(Lstyle)은 아래의 수학식2에 의해 산출될 수 있다. [수학식 2]"}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "C : 스타일 분류자 Sim(A, B) : A와B의 유사도를 구하는 함수계산 y : 정답 값(스타일 정보에 대한 정답 값) qi : i번째 입력 문장에 대한 스타일 선택기의 실제 스타일 분포 qi : i번째 입력 문장에 대한 스타일 선택기의 예측된 스타일 분포 문장 스타일 변환 장치는 재구성 손실 함수와 스타일 분류 손실 함수를 합산하여 전체 손실[L] = 재구성 손실[Lres] + 스타일 분류 손실[Lstyle] 총 손실 함수(joint training loss, L)을 산출할 수 있다. 문장 스타일 변환 장치는 총 손실이 작아지는 방향으 로 학습될 수 있다. 다른 예시적인 실시예에서, 문장 입력부(102-1)는 외부로부터 문장을 입력받아서 시맨틱 인코더 및 신택틱 인코더로 전달할 수 있다. 외부로부터 입력된 문장을 입력 문장이라고 한다. 시맨틱 인코더는 입력 문장을 입력받아 인코드하여, 의미 임베딩을 생성하여, 스타일 선택기로 전달 할 수 있다. 신택틱 인코더는 전달받은 입력 문장을 분석하여 문장의 구문 정보를 생성할 수 있다. 신택틱 인코더(10 4)는 스스로 생성한 구문 정보를 이용하여, 상술한바와 같은 방식으로 문법 임베딩을 생성할 수 있다. 문장 스타일 변환 장치는 도 1에서 상술한 바와 같은 방식으로, 복원 문장, 재구성 손실 함수, 스타일 분 류 손실 함수, 총손실 함수를 구할 수 있고, 총 손실 함수가 작아지는 방향으로 학습될 수 있다. 도 2는 본 발명의 다른 일 실시예에 따라, 문장 스타일 변환을 위한 컴퓨팅 장치가 추론단계를 수행하는 것을 설명하기 위한 구성도이다. 도 2를 참조하면, 일 실시예에 따른 문장 스타일 변환 장치는 시맨틱 인코더(semantic encoder, 102), 신 택틱 인코더(syntactic encoder, 104), 스타일 선택기(style selector,106), 조합 임베딩부, 디코더 및 문장 입력부(102-1)를 포함할 수 있다. 예시적인 실시예에서, 문장 입력부(102-1)는 외부로부터 문장을 입력 받아 시맨틱 인코더로 전달할 수 있 고, 변환하고자 하는 문장의 스타일을 입력받아 스타일 선택기로 전달할 수 있다. 외부로부터 입력된 문장 을 입력 문장이라고 하고, 입력된 스타일을 목적 스타일이라고 한다. 시맨틱 인코더는 입력 문장을 받아서 인코드하여, 의미 임베딩을 생성할 수 있다. 신택틱 인코더는 문장의 구문 정보를 받거나 스스로 생성하고, 이를 인코드하여, 문법 임베딩을 생성할 수 있다. 스타일 선택기는 목적 스타일을 입력받아 변환되는 문장의 스타일에 대한 정보를 포함하는 목적 스타일 임 베딩을 출력할 수 있다. 조합 임베딩부는 시맨틱 인코더로부터 의미 임베딩을, 신택틱 인코더로부터 문법 임베딩을, 스 타일 선택기으로부터 목적 스타일 임베딩을 받아서 조합 임베딩을 생성할 수 있다. 조합 임베딩부는 생성한 조합 임베딩을 디코터으로 전달할 수 있다.디코더는 받은 조합 임베딩을 사용하여, 목적하는 스타일이 적용된 변환 문장을 출력할 수 있다. 도 3은 본 발명의 일 실시예에 따른, 문장 스타일 변환 방법의 효과를 설명하기 위한 그래프이다. 그래프의 x축은 스타일이 변환된 문장의 변환 정확도이고, y축은 스타일이 변환된 문장의 역복잡도이다. 각각의 점은, 각각 스타일 변환의 세기정도가 다른 문장들을 나타낸다. y축인 역복잡도 점수가 클수록, 변환된 문장의 유창성이 높음을 의미하고, x축인 정확도 점수가 클수록, 변환된 문장의 정확도가 높음을 의미한다. 그래프에 따르면, 종래발명1 및 종래발명2는 다양한 스타일 변환의 세기에 따라, 역복잡도와 정확도가 경향성을 띄며 크게 달라진다. 그러나, 본 발명은 다양한 스타일 변환의 세기에도 무관하게, 대체적으로 일정하고 높은 값의 역복잡도와 정확도를 띄는 것을 볼 수 있다. 도 4는 예시적인 실시예들에서 사용되기에 적합한 컴퓨팅 장치를 포함하는 컴퓨팅 환경을 예시하여 설명하 기 위한 블록도이다. 도 4는 예시적인 실시예들에서 사용되기에 적합한 컴퓨팅 장치를 포함하는 컴퓨팅 환경을 예시하여 설명하 기 위한 블록도이다. 도시된 실시예에서, 각 컴포넌트들은 이하에 기술된 것 이외에 상이한 기능 및 능력을 가 질 수 있고, 이하에 기술된 것 이외에도 추가적인 컴포넌트를 포함할 수 있다. 도시된 컴퓨팅 환경은 컴퓨팅 장치를 포함한다. 일 실시예에서, 컴퓨팅 장치는 문장 스타일 변환 장치일 수 있다. 컴퓨팅 장치는 적어도 하나의 프로세서, 컴퓨터 판독 가능 저장 매체 및 통신 버스를 포함한다. 프로세서는 컴퓨팅 장치로 하여금 앞서 언급된 예시적인 실시예에 따라 동작하도록 할 수 있 다. 예컨대, 프로세서는 컴퓨터 판독 가능 저장 매체에 저장된 하나 이상의 프로그램들을 실행할 수 있 다. 상기 하나 이상의 프로그램들은 하나 이상의 컴퓨터 실행 가능 명령어를 포함할 수 있으며, 상기 컴퓨터 실 행 가능 명령어는 프로세서에 의해 실행되는 경우 컴퓨팅 장치로 하여금 예시적인 실시예에 따른 동작 들을 수행하도록 구성될 수 있다. 컴퓨터 판독 가능 저장 매체는 컴퓨터 실행 가능 명령어 내지 프로그램 코드, 프로그램 데이터 및/또는 다 른 적합한 형태의 정보를 저장하도록 구성된다. 컴퓨터 판독 가능 저장 매체에 저장된 프로그램은 프로 세서에 의해 실행 가능한 명령어의 시퀀스를 포함한다. 일 실시예에서, 컴퓨터 판독 가능 저장 매체는 메모리(랜덤 액세스 메모리와 같은 휘발성 메모리, 비휘발성 메모리, 또는 이들의 적절한 조합), 하나 이상의 자기 디스크 저장 디바이스들, 광학 디스크 저장 디바이스들, 플래시 메모리 디바이스들, 그 밖에 컴퓨팅 장치 에 의해 액세스되고 원하는 정보를 저장할 수 있는 다른 형태의 저장 매체, 또는 이들의 적합한 조합일 수 있다. 통신 버스는 프로세서, 컴퓨터 판독 가능 저장 매체를 포함하여 컴퓨팅 장치의 다른 다양한 컴 포넌트들을 상호 연결한다. 컴퓨팅 장치는 또한 하나 이상의 입출력 장치를 위한 인터페이스를 제공하는 하나 이상의 입출력 인터 페이스 및 하나 이상의 네트워크 통신 인터페이스를 포함할 수 있다. 입출력 인터페이스 및 네트워 크 통신 인터페이스는 통신 버스에 연결된다. 입출력 장치는 입출력 인터페이스를 통해 컴퓨팅 장치의 다른 컴포넌트들에 연결될 수 있다. 예시적인 입출력 장치는 포인팅 장치(마우스 또는 트랙패드 등), 키보드, 터치 입력 장치(터치패드 또는 터치스크린 등), 음성 또는 소리 입력 장치, 다양한 종류의 센서 장치 및/또는 촬영 장치와 같은 입력 장치, 및/또는 디스플레이 장치, 프린터, 스피커 및/또는 네트워크 카드와 같은 출력 장치를 포함할 수 있다. 예시적인 입출력 장치는 컴퓨팅 장치를 구성하는 일 컴포넌트로서 컴퓨팅 장치의 내부에 포함될 수도 있고, 컴퓨팅 장치와는 구별되는 별개의 장치로 컴퓨팅 장치와 연결될 수도 있다."}
{"patent_id": "10-2024-0058800", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이상에서 본 발명의 대표적인 실시예들을 상세하게 설명하였으나, 본 발명이 속하는 기술분야에서 통상의 지식 을 가진 자는 상술한 실시예에 대하여 본 발명의 범주에서 벗어나지 않는 한도 내에서 다양한 변형이 가능함을 이해할 것이다. 그러므로 본 발명의 권리범위는 설명된 실시예에 국한되어 정해져서는 안 되며, 후술하는 특허청구범위뿐만 아니라 이 특허청구범위와 균등한 것들에 의해 정해져야 한다."}
{"patent_id": "10-2024-0058800", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1는 본 발명의 일 실시예에 따라, 문장 스타일 변환을 위한 컴퓨팅 장치가 학습단계를 수행하는 것을 설명하 기 위한 구성도이다. 도 2는 본 발명의 다른 일 실시예에 따라, 문장 스타일 변환을 위한 컴퓨팅 장치가 추론단계를 수행하는 것을 설명하기 위한 구성도이다. 도 3은 본 발명의 일 실시예에 따른, 문장 스타일 변환 방법의 효과를 설명하기 위한 그래프이다. 도 4는 예시적인 실시예들에서 사용되기에 적합한 컴퓨팅 장치를 포함하는 컴퓨팅 환경을 예시하여 설명하기 위 한 블록도이다."}
