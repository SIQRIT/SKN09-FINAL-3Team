{"patent_id": "10-2024-7032457", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0157721", "출원번호": "10-2024-7032457", "발명의 명칭": "통계적 방법들과 기법들을 사용하여 인공 지능 에이전트들의 인간과의 유사성을 정량화", "출원인": "어드밴스드 마이크로 디바이시즈, 인코포레이티드", "발명자": "콜버트 이안 찰스"}}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "방법에 있어서,프로세서에서, 인공 에이전트와 연관된 거동에 기반한 제1 분포와 사용자와 연관된 거동에 기반한 제2 분포를결정하는 단계;상기 프로세서에서, 상기 제1 분포를 상기 제2 분포와 비교함으로써 유사도 측정치를 생성하는 단계 - 상기 유사도 측정치는 상기 인공 에이전트와 연관된 거동의 인간과의 유사성을 정량화함 -; 및상기 유사도 측정치가 유사도 임계치를 충족하지 못하는 것에 응답하여, 상기 프로세서에서, 상기 유사도 측정치에 기반하여 상기 인공 에이전트의 거동을 수정하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 제1 분포와 상기 제2 분포를 결정하는 단계는:제1 복수의 벡터들을 생성하기 위해 제1 거동 정보 세트를 벡터화하는 단계 - 상기 제1 복수의 벡터들의 각각의벡터는 상기 제1 거동 정보 세트와 다른 거동의 서브시퀀스를 나타냄 -; 및제2 복수의 벡터들을 생성하기 위해 제2 거동 정보 세트를 벡터화하는 단계 - 상기 제2 복수의 벡터들의 각각의벡터는 상기 제2 거동 정보 세트와 다른 거동의 서브시퀀스를 나타냄 -를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 제1 분포와 상기 제2 분포를 결정하는 단계는:상기 제1 복수의 벡터들을 제1 복수의 시각적 표현들로 변환하고 상기 제2 복수의 벡터들을 제2 복수의 시각적표현들로 변환하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 제1 분포는 상기 제1 복수의 시각적 표현들을 포함하고 상기 제2 분포는 상기 제2 복수의 시각적 표현들을포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2항 또는 제3항에 있어서,상기 제1 분포는 상기 제1 복수의 벡터들을 포함하고 상기 제2 분포는 상기 제2 복수의 벡터들을 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제5항 중 어느 한 항에 있어서,상기 제1 분포를 상기 제2 분포와 비교함으로써 상기 유사도 측정치를 생성하는 단계는 2개의-샘플 가설 테스트를 수행하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2024-0157721-3-제6항에 있어서,상기 2개의-샘플 가설 테스트를 수행하는 단계는:제1 거리들의 분포를 생성하기 위해 상기 제1 분포와 상기 제2 분포를 개별적으로 평가하는 단계, 및상기 제1 거리들의 분포에 기반하여 테스트 통계치를 생성하는 단계를 포함하는 제1 모드에서 동작하는 단계;거동들의 풀링된 샘플 분포(pooled sample distribution)를 생성하기 위해 상기 제1 분포와 상기 제2 분포를 결합하는 단계, 및제2 거리들의 분포를 생성하기 위해 상기 풀링된 샘플 분포를 평가하는 단계를 포함하는 제2 모드에서 동작하는단계; 및상기 테스트 통계치와 상기 제2 거리들의 분포에 기반하여 상기 유사도 측정치를 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 제1 분포와 상기 제2 분포를 개별적으로 평가하는 단계는:주어진 반복 횟수들에 대해, 독립적으로 교체를 통해 상기 제1 분포에서 주어진 크기의 제1 서브샘플을 도출하고 교체를 통해 상기 제2 분포에서 주어진 크기의 제2 서브샘플을 도출하는 단계;각각의 반복에 대해, 상기 제1 서브샘플과 상기 제2 서브샘플 간의 통계적 거리를 결정하는 단계; 및각각의 반복에 대해 결정된 각각의 통계적 거리에 기반하여 상기 제1 거리들의 분포를 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 테스트 통계치는:에 따라 생성되고, 여기서 이고, δ는 테스트 통계치이고, 는 제1 거리들의 분포이고, α는 2개의-샘플 가설 테스트의 민감도를 제어하기 위한 하이퍼파라미터이고,분위수(,α)는 상기 제1 거리들의 분포에 대한 α번째 분위수를 반환하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,제2 거리들의 분포를 생성하기 위해 상기 풀링된 샘플 분포를 평가하는 단계는:주어진 반복 횟수들에 대해, 독립적으로 교체를 통해 상기 풀링된 샘플 분포에서 주어진 크기의 제3 서브샘플을도출하고 상기 풀링된 샘플 분포에서 주어진 크기의 제4 서브샘플을 도출하는 단계;각각의 반복에 대해, 상기 제3 서브샘플과 상기 제4 서브샘플 간의 통계적 거리를 결정하는 단계; 및각각의 반복에 대해 결정된 각각의 통계적 거리에 기반하여 상기 제2 거리들의 분포를 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 유사도 측정치는 상기 테스트 통계치보다 큰 거리를 갖는 상기 제2 거리들의 분포에서 거리들의 백분율로생성되는, 방법.공개특허 10-2024-0157721-4-청구항 12 제1항 내지 제11항 중 어느 한 항에 있어서,상기 유사도 측정치에 기반하여 상기 인공 에이전트를 수정하는 단계는 상기 인공 에이전트의 하나 이상의 거동들을 수정하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "방법에 있어서,제1 인공 에이전트와 연관된 거동에 기반한 제1 분포를 결정하고 제2 인공 에이전트와 연관된 거동에 기반한 제2 분포를 결정하는 단계;상기 제1 분포를 상기 제2 분포와 비교함으로써 유사도 측정치를 생성하는 단계 - 상기 유사도 측정치는 상기제1 인공 에이전트의 거동과 상기 제2 인공 에이전트의 거동 간의 유사도를 정량화함 -; 및상기 유사도 측정치에 기반하여, 상기 제1 인공 에이전트의 거동 또는 상기 제2 인공 에이전트의 거동 중 적어도 하나를 수정하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 제1 인공 에이전트의 거동은 상기 제1 인공 에이전트의 초기 상태에서 최종 상태에 이르는 제1 거동들의시퀀스로 정의된 제1 에피소드로 표현되고, 상기 제2 인공 에이전트의 거동은 상기 제2 인공 에이전트의 초기상태에서 최종 상태에 이르는 제2 거동들의 시퀀스로 정의된 제2 에피소드로 표현되는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 제1 분포와 상기 제2 분포를 결정하는 단계는:상기 제1 에피소드에서 제1 복수의 궤적들을 샘플링하는 단계 - 상기 제1 복수의 궤적들의 각각의 궤적은 상기제1 거동들의 시퀀스의 서브시퀀스임 -;상기 제2 에피소드에서 제2 복수의 궤적들을 샘플링하는 단계 - 상기 제2 복수의 궤적들의 각각의 궤적은 상기제2 거동들의 시퀀스의 서브시퀀스임 -;제1 복수의 벡터들을 생성하기 위해 상기 제1 복수의 궤적들의 각각의 샘플 궤적을 벡터화하는 단계; 및제2 복수의 벡터들을 생성하기 위해 상기 제2 복수의 궤적들의 각각의 샘플 궤적을 벡터화하는 단계를포함하고,상기 제1 분포는 상기 제1 복수의 벡터들에 기반하여 결정되고 상기 제2 분포는 상기 제2 복수의 벡터들에 기반하여 결정되는, 방법."}
{"patent_id": "10-2024-7032457", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "장치에 있어서,제1항 내지 제15항 중 어느 한 항의 방법을 수행하도록 구성된 프로세서를 포함하는, 장치."}
{"patent_id": "10-2024-7032457", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "장치는, 인공 에이전트와 연관된 거동에 기반한 인공 에이전트와 연관된 제1 분포를 결정하고 사용자의 거동에 기반한 제2 분포를 결정하도록 구성된 프로세서를 포함한다. 프로세서는 제1 분포를 제2 분포와 비교하고 유사도 측정치가 유사도 임계치를 만족하지 못한다는 것에 응답하여 인공 에이전트의 거동을 수정함으로써 인간과의 유 사성 유사도 측정치를 생성하도록 추가로 구성된다."}
{"patent_id": "10-2024-7032457", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능(AI)을 구현하기 위한 하나의 메커니즘은 환경에 대한 지식을 갖고 목표(들)를 달성하기 위해 자율적 으로 행동들을 수행하는 비-인간 엔티티들인 인공 에이전트(artificial agent)들을 사용하는 것이다. 인공 에이 전트들은 많은 상이한 기술들과 산업들에서 필수적인 부분이 되고 있다. 예를 들어, 자동차들은 인공 에이전트 들을 구현하여 자율 주행 동작들을 수행하고, 비디오 게임들은 인공 에이전트들을 NPC(non-playable Character)로 구현하고, 공장들은 로봇들을 인공 에이전트들로 구현하여 다양한 행동들을 자율적으로 수행한다. 많은 사 례들에서, 인공 에이전트들은 환경들에서 인간의 거동을 모방하기 위해 다양한 기법들을 사용하여 훈련된다. 그 러므로, 에이전트 거동의 인간과의 유사성을 평가하는 것은 종종 인공 에이전트들의 설계 및 개발에서 중요한 부분이다."}
{"patent_id": "10-2024-7032457", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "인간과 유사한 복잡한 거동들을 학습할 수 있는 인공 에이전트들을 개발하는 것은 인공 지능 연구의 목표이다. 심층 강화 학습과 같은 기계 학습 기법들의 발전들은 복잡한 지능형 거동을 할 수 있는 고도로 숙련된 인공 에 이전트들의 개발을 가능하게 하였다. 예를 들어, 비디오 게임들에서, 인공 에이전트들은 인간의 거동을 모방하 고 인간 플레이어들의 경험을 향상시키도록 설계된 NPC(non-playable Character)들로서 점점 더 많이 이용된다. 고도로 숙련된 인공 에이전트들의 설계 및 개발이 진행되었지만, 인공 에이전트들의 인간과의 유사성을 정량화 하는 것은 여전히 문제로 남아 있다. 예를 들어, 인공 에이전트의 거동에 대한 신뢰성은 주어진 작업에 대한 에 이전트의 숙련도에 의해서만 측정되는 경우가 많지만, 숙련도만으로는 인간과 유사한 거동을 측정하기에 충분하 지 않다. 인공 에이전트의 거동에 대한 신뢰성을 정량화/측정하기 위한 다양한 접근법들이 시도되었지만 이러한 접근법들 각각은 다양한 단점들을 갖는다. 예를 들어, 인공 에이전트 거동을 평가하기 위한 하나의 접근법은 에이전트들 에 대한 인간 평가(예를 들어, 튜링 테스트(Turing Test))를 포함한다. 그러나, 이 접근법은 인간 평가의 속도, 확장성 및 비용 제한들을 감안할 때 대부분의 환경들에서 실용적이지 않다. 다른 접근법은 에이전트들의 인간과 유사한 동작을 검출하기 위해 규칙들 또는 휴리스틱들에 의존하는 환경(도메인) 특정 테스트들을 구현한다. 이 접근법은 도메인 전문가들의 많은 수잡업을 필요로 하고, 이는 시간과 비용이 많이 든다. 또한, 환경 특이적 테 스트들은 에이전트 거동을 직접 평가하기보다는 결과들의 차이들을 대략적으로 평가하는 경향이 있고 인간과의 유사성에 대한 세밀한 세부사항들(예를 들어, 주기적 거동 검출, 충돌들 카운팅, 또는 목표 달성을 위해 취한 단계들을 측정, 등)을 포착하지 못한다. 다른 접근법들은 기계 학습을 구현하여 인공 에이전트들의 거동을 평가 한다. 그러나, 기계 학습 모델들은 일반적으로 특정 환경에 적합하고 쉽게 일반화 가능하지 않다. 본 개시내용은 인공 에이전트 거동의 인간과의 유사성을 정량화하기 위한 종래의 기법들과 연관된 컴퓨팅 비용, 효율성 및 정확성을 포함한 다양한 문제들을 극복하기 위한 시스템들 및 방법들의 실시예들을 설명한다. 아래에 서 더 상세히 설명되는 바와 같이, 인공 에이전트(들)의 거동과 인간 카운터파트(들)의 거동 간의 유사도는 비- 파라미터적 2개의-샘플 가설 테스트 기법을 사용하여 평가되고 정량화된다. 비-파라미터적 2개의-샘플 가설 테스트 기법은 인공 에이전트의 상태-행동 쌍들(예를 들어, 궤적)의 분포를 사용하여 에이전트의 거동이 인간과 유사한지 결정하고 해당 동작이 얼마나 인간과 유사한지 추가로 정량화한다. 예를 들어, 각자의 거동들의 유사 도는 인간 거동 시퀀스의 분포와 동일하거나 유사한 작업/목표와 연관된 인공 지능 거동 시퀀스의 분포를 사용 하여 비교된다. 2개의-샘플 가설 테스트 기법은 인공 에이전트의 거동의 인간과의 유사성을 정량화하는 유사도 측정치를 출력한다. 본원에 설명된 인공 에이전트 거동 분석 기법들의 장점은 이들이 도메인/환경에 구애받지 않고, 기계 학습 기반 분석 기법들과 같은 종래의 분석 기법들과 달리 지능적 거동과 연관된 다수의 상이한 능력들에 적용 가능하다는 것이다. 또한, 본원에 설명된 분석 기법은 인간 감식가들과 연관된 비용들을 회피하고 심층 신경망(DNN)들을 구 현하는 기법들에 의해 요구되는 훈련/재훈련 또는 추론 최적화를 필요로 하지 않는다. 다른 장점은 본원에 설명 된 분석 기법들이 통계적 분포들에 기반하기 때문에 쉽게 병렬화되고 가속화될 수 있다는 것이다. 게다가, 분석 기법들의 결과들(예를 들어, 유사도 측정치들)은, 적어도 일부 실시예들에서, 인공 에이전트들을 개선 또는 수 정하거나, 인공 에이전트들을 구현하는 시스템 또는 환경을 개선하거나, 이들의 조합 등에 사용된다. 예를 들어, 분석 결과들은 인공 에이전트들의 랭킹 또는 점수를 매기거나, 에이전트의 거동의 인간과의 유사성을 개 선하기 위해 인공 에이전트들을 훈련 또는 재훈련하거나, 운영 환경(예를 들어, 비디오 게임, 차량, 로봇 등)에 서 실행하는 동안 실시간으로 인공 에이전트의 거동을 조정하는 데 사용된다. 다른 애플리케이션들은 커리큘럼 기반 학습 패러다임에서 커리큘럼 최적화, 보상 신호 설계를 평가, 신경 아키텍처들의 최적화, 충분한 유사도에 도달했을 때 에이전트 훈련의 조기 종료를 포함한다. 본원에 설명된 2개의-샘플 가설 기법들이 또한 다수의 인 공 에이전트들 사이의 거동들의 유사도를 결정하기 위해 다수의 인공 에이전트들의 거동을 평가하는 데 또한 적 용 가능하다는 것이 이해되어야 한다. 이 분석의 결과들은 예를 들어 다중 에이전트 설정에서 거동들의 다양성 을 증가시키는 데 사용된다. 도 1은 인공 에이전트 거동의 인간과의 유사성을 평가하고 평가에 기반하여 인공 에이전트들을 수정하기 위한 운영 환경의 예를 예시한다. 도 1에 도시된 바와 같이, 운영 환경은 하나 이상의 네트워크들에 의해 통신적으로 결합된 하나 이상의 정보 프로세싱 시스템들(102-1 내지 102-3으로 도시됨)을 포함한다. 도 1에 도시된 정보 프로세싱 시스템들의 개수가 단지 예시 목적임이 이해되어야 한다. 예를 들어, 단일 프로세싱 시스템 또는 더 적은/더 많은 수의 정보 프로세싱 시스템들은 구성요소들을 포함할 수 있고 본원에서 설명된 동작들을 수행할 수 있다. 정보 프로세싱 시스템들의 예들은 서버들, 데스크톱 컴퓨터들, 랩톱/노트북 컴퓨터들, 모바일 디바이스들, 또는 다양한 다른 유형들의 컴퓨팅 시스템들 또는 디바이스들을 포 함한다. 네트워크(들)는, 적어도 일부 실시예들에서, 유선 및/또는 무선 네트워킹 메카니즘들을 활용하여 구현된다. 예를 들어, 네트워크는, 적어도 일부 실시예들에서, 무선 통신 네트워크들, Wi-Fi 네트워크들과 같은 비-셀룰러 네트워크들, 인터넷과 같은 공용 네트워크들, 사설 네트워크들 등을 포함한다. 무선 통신 네트 워크들은 임의의 무선 통신 표준을 지원하고 이러한 표준에 기반한 하나 이상의 네트워크들을 포함한다. 도 1에 도시된 예에서, 제1 정보 프로세싱 시스템(102-1)은 인공 에이전트들(108-1 및 108-2로 도시됨)의 하나 이상의 거동들을 평가하고, 적어도 일부 실시예들에서, 이 평가에 기반하여 인공 에이전트의 거동을 수정하는 인공 에이전트 거동 분석(AABA) 시스템을 포함한다. 인공 에이전트 거동은 자신의 환경에 응답하 여 동작/실행 동안 인공 에이전트에 의해 취해지는 자율적인 행동(들)이다. 인공 에이전트 거동들의 예들 은 자율 주행 거동들(예를 들어, 차선 협상, 충돌 회피, 회전 등), 가상 게임 환경의 자율 항법, 제품의 자율 제작, 인간과의 자율적 상호작용, 예측, 인식, 추론 등을 포함한다. 인공 에이전트들은, 적어도 일부 실시예들에서, 제1 정보 프로세싱 시스템(102-1), 하나 이상의 다른 정보 프로세싱 시스템들, 또는 둘 모두의 조합으로 구현된다. 예를 들어, 하나 이상의 에이전트들은 제2 정보 프로세싱 시스템(102-2) 및 제3 정보 프로세싱 시스템(102-3)에서 구현된다. 제2 정보 프로세싱 시스템 (102-2)은 자신의 환경에 응답하여 하나 이상의 행동들/거동들을 자율적으로 수행하도록 훈련 인공 에이전트들 (108-1)을 훈련하기 위해 훈련 데이터를 사용하는 인공 에이전트 훈련 시스템을 포함한다. 일 예로, 인공 에이전트 훈련 시스템은 기계 학습(ML) 기반 훈련 시스템이다. 그러나, 네비게이션 메시(Navigation Mesh) 및 거동 트리(behavior tree)들과 같은 상이한 기법들은 인공 에이전트를 프로그래밍하거나 훈련시 키는데 또한 사용될 수 있다. 제3 정보 프로세싱 시스템(102-3)은 가상 환경(예를 들어, 비디오 게임)(114-1) 또는 사용자-보조 환경(114-2)(예를 들어, 가상 채팅)과 같은 운영 환경 내에서 실행되는 하나 이상의 인 공 에이전트들(108-2)을 포함한다. 다른 예에서, 운영 환경은 차량(114-3)(유인 또는 무인) 또는 로봇 (114-4)과 같은 엔티티로서, 인공 에이전트들(108-2)을 구현한다. 제1 및 제2 정보 프로세싱 시스템들(102-2, 102-3)이, 인공 에이전트들이 구현될 수 있는 시스템들의 유형들의 예들로서만 제공되는 것이 이해되어야한다. 제1 정보 프로세싱 시스템(102-1)의 AABA 시스템은 다양한 도메인들 및 시스템들에 걸쳐서 상이한 유형들의 인공 에이전트들에 의해 수행되는 상이한 유형들의 거동들을 분석/평가할 수 있다. 도 1이 제1 정보 프로세싱 시스템(102-1)에서 구현된 AABA 시스템을 도시하지만, 다른 실시예들에서, AABA 시스템은 인공 에이전트 훈련 시스템, 인공 에이전트 운영 환경, 인공 에이전트들을 구현 할 수 있는 다른 시스템/환경, 이들의 조합 등의 일부로서 또는 이와 함께 구현된다. 적어도 일부 실시예들에서, AABA 시스템은 거동 분포 모듈, 거동 정보 변환 모듈, 거동 유사도 결정 모듈 , 및 차원 축소 모듈을 포함한다. 이들 모듈들 중 하나 이상은, 적어도 일부 실시예들에서, 다수의 정보 프로세싱 시스템들에 걸쳐 분포되고, 이들 모듈들 중 2개 이상이 결합될 수 있다. 적어도 일부 실시예들에 서, AABA 시스템은 하나 이상의 인터페이스, 예를 들어 인공 에이전트 훈련 시스템 인터페이스(124- 1) 및 인공 에이전트 운영 환경 인터페이스(124-2)를 포함한다. AABA 시스템은 인터페이스를 사용하 여, 예를 들어, 인공 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)와 같은 인공 거동 정보를 포함 하는 하나 이상의 시스템들과 인터페이스하고 통신하거나, AABA 시스템에 의해 수행된 인공 에이전트 거동 분석의 결과들을 적용한다. 이하에서 보다 상세히 설명되는 바와 같이, AABA 시스템은 거동 분포 모듈, 거동 정보 변환 모듈 , 거동 유사도 결정 모듈, 또는 차원 축소 모듈 중 하나 이상을 사용하여, 도메인에 구애받지 않는 방식으로 인간 카운터파트들(예를 들어, 인간 사용자들)에 나타나는 거동들에 대한 인공 에이전트들 에 의해 나타나는 거동들의 유사도를 정량적으로 평가하는 인공 에이전트 거동 분석을 수행한다. 거동 분석은 에이전트의 상태-행동 쌍들(예를 들어, 궤적)의 분포를 사용하여 에이전트의 거동이 인간과 유사한지 결정하고 거동이 얼마나 인간과 유사한지 추가로 정량화하는 통계적 방법이다. 예를 들어, AABA 시스템은 인간 거동 시퀀스의 분포와 동일하거나 유사한 작업/목표와 연관된 인공 지능 거동 시퀀스의 분포 사이의 거동 분포를 비 교하는 것에 기반하여 인공 에이전트의 인간과 유사한 거동(HLB)을 분석한다. 거동 분석에 기반하여, AABA 시스템은, 예를 들어, 평가된 각각의 인공 에이전트에 대한 유사도 측정치(128-1)(또한 본원에서 유 사도 측정치(128-1)로 지칭됨)를 포함하는 거동 분석 결과들을 생성한다. 유사도(인간과의 유사성) 측정치 (128-1)는 인공 에이전트의 거동이 인간(들) 에이전트의 거동과 얼마나 유사한지를 정량화/측정한다. 예를 들어, 평가되는 거동이 목표를 달성하기 위해(예를 들어, 엔드포인트에 도달하기 위해) 비디오 게임의 환경을 탐색하면, 유사도의 측정치(128-1)는 이 목표를 달성하는 데 있어서 인공 에이전트의 움직임들의 인간과의 유사 성을 정량화한다. 다른 예에서, 유사도 측정치(128-1)는 이동 또는 작업 수행과 같은 거동에 대한 로봇의 성능 (인간과 유사한 거동의 관점에서)을 정량화한다. 추가 예로, 유사도 측정치(128-1)는 인간과 상호작용할 때 인 간 보조 소프트웨어 에이전트 또는 플레이 불가능한 캐릭터가 얼마나 믿을 수 있는지를 정량화한다. 적어도 일부 실시예들에서, 거동 분석 결과는 하나 이상의 시스템들에 의해 적용되어, 예를 들어, 하나 이 상의 인공 에이전트들을 개선 또는 향상시키거나, 인공 에이전트(들)를 구현하는 시스템 또는 환경, 이들의 조합 등을 개선하거나 향상시킨다. 예를 들어, AABA 시스템, 또는 인공 에이전트 훈련 시스템 또는 인공 에이전트 운영 환경과 같은 다른 시스템은 유사도 측정치(128-1)을 사용하여 평가된 인공 에이 전트들의 랭킹 또는 점수를 매기거나, 에이전트의 거동의 인간과의 유사성을 개선하기 위해 인공 에이전트 들을 훈련시키거나 재훈련시키거나, 또는 운영 환경(예를 들어, 비디오 게임, 차량, 로봇 등)에서 실 행되는 동안 인공 에이전트의 거동을 실시간으로 조정한다. 다른 애플리케이션들은 커리큘럼 기반 학습 패러다 임에서 커리큘럼 최적화, 보상 신호 설계를 평가, 신경 아키텍처들의 최적화, 충분한 유사도에 도달했을 때 에 이전트 훈련의 조기 종료를 포함한다. 예를 들어, 도 2는 인공 에이전트 훈련 프로세스의 일부로 거동 분석 결과들을 적용하는 하나의 예시적인 방법의 개요를 흐름도 형태로 예시한다. 이 예에서, p는 유사도 측정치(128-1)이고 는 미리 정의된 신뢰 레벨이다. 블록에서, 훈련 시스템은 강화 학습(RL: reinforcement learning)과 같은 하나 이상 의 훈련 기법들을 사용하여 인공 에이전트(예를 들어, AI/ML 에이전트)를 훈련시킨다. 훈련 동안, 인공 에 이전트와 연관된 에이전트 거동 정보(126-1)는 하나 이상의 작업들(예를 들어, 비디오 게임 내의 환경 탐 색)에 대해 생성된다. 블록에서, AABA 시스템은 동일한 작업과 연관된 인간 거동 정보(126-2)에 대해 에이전트 거동 정보(126-1)를 분석한다. 인간 거동 정보(126-2)는, 적어도 일부 실시예들에서, 실제 인간 카운 터파트의 거동 또는 인간 카운터파트에 의해 제어되는 인공 에이전트의 거동을 포함한다. 이러한 분석에 기반하여, AABA 시스템은 인공 에이전트의 거동(126-1)의 인간과의 유사성을 정량화하는 유사도 측정치 ( )(128-1)를 생성한다. 블록에서, AABA 시스템(또는 훈련 시스템)은 유사도 측정치( )(128-1)가 유사도 임계치( )(예를 들어, )를 만족하는지를 결정한다. 만약 그렇다면, 블록에서, AABA 시스템은 훈련 시스템에게 AABA 시스템의 훈련을 중지하도록 명령하고, 이는 훈련 컴퓨팅 시간을 줄이고 인공 에이전트의 과잉 훈련을 방지한다. 이어서, 프로세스는 블록에서 종료된다. 이어 서, 훈련된 인공 에이전트(들)는 하나 이상의 운영 환경들에서 구현된다. 그렇지 않으면, 블록 에서 AABA 시스템은 훈련 시스템에게 인공 에이전트를 훈련시키는 것을 계속함으로써 인공 에이 전트의 거동을 조정하도록 명령하고, 프로세스는 블록으로 되돌아간다. 다른 실시예들에서, 훈련 시 스템은 유사도 측정치()(128-1)를 수신하고 AABA 시스템이 아닌 블록에서 동작들을 수행한다. 적어도 일부 실시예들에서, 인공 에이전트 거동을 평가하기 위한 AABA 시스템에 의해 구현되는 기법들 중 하나 이상은, 예를 들어, 심층 강화 학습 및 분포 분석 및 비교에 기반한다. 심층 강화 학습은 도 1의 훈련 시 스템과 같은 시스템에 의해 인공 에이전트들을 훈련/프로그래밍하기 위한 하나의 기법이다. 일 예에 서, 강화 학습(RL)의 표준 공식화는 마코프 의사결정 프로세스(MDP: Markov decision process)이고, 여기서 인 공 에이전트는 자신의 누적 기대 보상을 최대화하는 것을 목표로 하는 정책에 따라 환경(ε)과 상호작용한 다. 는 주어진 인공 에이전트의 결정 정책을 나타내고, 여기서 는 주어진 상태( )의 행동에 대한 조건부 분포를 모델링하고 θ에 의해 파라미터화된다. 심층 강화 학습(DRL)에서, 이 조건부 분포는 심층 신경망(DNN)을 사용하여 모델링된다. 모든 행동들과 상태들의 공간은 각각 와 로 나타낼 수 있어서, 와 이다. 각각의 시간 단계()에서, 인공 에이전트는 현재 상태( )를 관찰하고, 에 따른 행동( )을 샘플링한다. 이어서, 환경(ε)은 해당 전이의 값과 로 표시되는 ε의 전이 동역학에서 샘플링된 새로운 상태( )를 반영하는 스칼라 보상( )으로 응답한다. 상태( )와 행동(α)이 주어지면, 전이 동역학은 다음 상태에 대한 확률 분포가 이전의 모든 상태들 및 행동들과 조건부로 독립적이도록 마코프 속성을 만족한다는 점에 유의한다. 이 패러다임의 목적은 수학식 1에 의해 주어진 바와 같이, 기대 수익을 최대화하는 최적의 파라미터들( )을 학습하는 것이다. , (여기서 ) (수학식 1). 여기서 는 정책( )을 따를 때 가능한 모든 궤적들(τ)에 대한 분포를 나타내고, 는 초기 상태 분포 를 나타낸다. 초기 상태( )에서 종료 상태( )에 이르는 상태-행동 쌍들의 시퀀스는 에피소드로 정의되고, 시간 단계들의 지평에 걸친 에피소드의 연속 서브시퀀스는 τ로 표시되는 궤적으로 정의된다. 즉, 각각 의 궤적(τ)은 이도록 시간 단계들의 지평에 대한 상태-행동 쌍들의 시퀀스로 정의된 다. 가 이 시간 지평에 대한 궤적(τ)의 총 수익을 나타내고, 여기서 은 유한 수익을 보장하는 데 사용되는 할인율이라는 점에 유의한다. 인공 에이전트들을 훈련/프로그래밍하기 위해 다른 기법들이 사 용될 수 있다는 것이 이해되어야 한다. AABA 시스템에 의해 구현된 분포 분석 및 비교 기법의 일 예는 MMD(Maximum Mean Discrepancy)이다. MMD 는 2개의 고차원 데이터 분포들의 투영들 사이의 거리를 컴퓨팅하는 데 사용되는 커널 기반 발산 메트릭의 클래 스이다. MMD 거리는 다음과 같이 정의된다: (수학식 2). AABA 시스템은 각각의 분포로부터 개의 샘플들을 독립적으로 도출함으로써 이 거리를 경험적으로 추정한 다. 커널( )이 재현 커널 힐버트 공간에 매핑된다는 점을 감안할 때, 분포들( 와 )가 동일하거나 동일한 경 우에만 수학식 2에 의해 제공되는 MMD 거리는 0이다. 여기서 와 는 각각 와 에서 독립적으로 도출된 개 요소들의 샘플 분포를 나타내고, 여기서 는 샘플이 섞였음을 나타내고 는 쌍별 또는 요소별로 추정된다. 가 최대 효과의 각각의 샘플 포인트를 사용하도록 쌍별 거리들로 를 추정한다. 그러나, 컴퓨팅 비용은 샘플 분포의 크기에 따라 2차적으로 증가한다. 따라서, 데이터 볼륨이 클수록, 는 가 되도록 요소별로 추정될 수 있고, 이는 직관적 으로 컴퓨팅 비용이 적게 들지만 결과가 샘플링 순서에 따르기 때문에 샘플링 에러가 발생하기 쉽다. 그러므로, 적어도 일부 실시예들에서, AABA 시스템은 표준 가우스 커널 및 유클리드 거리 함수와 함께 의 쌍별 추정을 사용하여, 가 되도록 한다. 여기서 σ는 커널 대역폭으로 지칭 되고 와 에서 집계된 샘플들의 중간 쌍별 거리로 설정된다. MMD가 AABA 시스템에 의해 구현된 분포 분 석 및 비교 기법의 일 예일 뿐이며, 바서슈타인 거리(Wasserstein Distance)들 또는 싱크혼 발산(Sinkhorn Divergences)들과 같은 다른 기법들이 또한 적용 가능하다는 것이 이해되어야 한다. 후술하는 바와 같이, AABA 시스템은 또한 인공 에이전트 거동을 평가하기 위한 하나 이상의 비-파라메트릭 통계적 가설 테스팅 기법들을 구현한다. 통계적 추론은 샘플 분포들에서 모집단 파라미터 또는 모집단 분포에 대한 결론들을 도출하는 프로세스이다. 데이터에 대한 가정들을 사용하여 모집단 분포를 모델링하기 위해 샘플 통계치를 추정하는 파라메트릭 통계 추론과 달리, 비파라메트릭 통계 추론은 샘플 분포를 직접 분석한다. 이러 한 클래스의 테스트들 및 도구들 중에, 부트스트랩 재샘플링 및 순열 테스트와 같은 샘플링 방법들은 분포 가정 들을 요구하지 않고 기존 방법들보다 증가된 성능과 일반성을 제공한다. 부트스트랩 재샘플링을 사용하여, AABA 시스템은 샘플 통계치를 다시 컴퓨팅하기 위해 크기( )의 샘플 분포로부터 교체와 함께 크기( )의 샘플들 을 반복적으로 도출한다. 일부 부트스트랩 재샘플링 방법들이 을 설정하지만, n개 중 m개의 부트 스트래 핑 (즉, )은 보다 일관된 결과들을 산출할 수 있다. 부트스트랩 재샘플링과 마찬가지로, 순열 테스트들은 데이터 분포에 대한 선험적 지식이 필요하지 않다. 그러나, 부트스트랩 재샘플링과 달리, 이 클래스의 테스트들 은 교체 없이 샘플 분포에서 재샘플링한다. 적어도 일부 실시예들에서, AABA 시스템은 가설 테스트를 위한 부트스트랩 재샘플링 기법들 또는 순열 테스팅 기법 중 하나 이상을 구현하지만, 다른 기법들도 또한 적용 가능 하다. 도 3은 흐름도 형태로, 인공 에이전트 거동을 평가하기 위한 예시적인 방법을 예시한다. 방법의 서브 프로세스들이 예시적인 순서로 예시되고 설명되지만, 방법은 이 특정 순서로 제한되지 않으며, 일부 실시 예들에서, 소정 프로세스들은 다른 순서로 수행될 수 있거나, 순차적 순서가 아니라 동시에 수행될 수 있거나, 또는 완전히 생략될 수 있다. 게다가, 방법은 비디오 게임 환경 및 이동/네비게이션 거동들의 예시적인 맥 락에서 설명되지만, 본원에서 설명되는 기법들이 이러한 환경 및 거동들로 제한되지 않는 것이 이해되어야 한다. 이하에서 설명되는 바와 같이, 방법은 거동 유사도 가설에 따라 구성되는 비-파라메트릭 2개의-샘플 가설 테스트 기법을 사용하여 인공 에이전트 거동과 인간 카운터파트 거동(또는 다른 인공 에이전트) 사이의 유사도 를 분석한다. 적어도 일부 실시예들에서, 거동 유사도 가설은 에피소드/궤적들로서 표현 가능한 각자의 거동들 에 대한 분포들이 충분히 유사하다면, 임의의 2개의 에이전트들의 거동들이 충분히 유사하다는 것을 나타낸다. 또한, 방법은 인공 에이전트들이 비디오 게임 환경과 같은 환경(ε)에 배치될 때 주어진 작업을 완료 하도록 인공 에이전트들을 구동하는 미리 훈련된 결정 정책( )을 구현하는 예시적인 맥락에서 설명된다. 유사하게, 방법에서 인공 에이전트들과 비교되는 인간 카운터파트(들)는 동일한 환경(ε)에서 동일한 작업을 독립적으로 완료한다. 예를 들어, 인공 에이전트가 비디오 게임 환경에서 NPC인 경우, 인간 카운터 파트는 동일한 환경(ε)에서 동일한 작업을 완료하기 위해 동일한(또는 다른) 인공 에이전트(들)에 대한 통제권을 독립적으로 제공받는다. 이와 같이, 적어도 일부 실시예들에서, 인공 에이전트 및 인간 카운터파 트 둘 모두는 동일한 전이 동역학( )을 갖는 동일한 초기 상태 분포( )에 바인딩된다. 인공 에이전트의 결정 정책( )에 의해 도입된 거동들/궤적들의 분포는 로 정의되고, 인간 카운터파트에 의해 도입된 거동들/궤적들의 분포는 로 정의된다. 간결성을 위해, 이들 분포들은 본원에서 각각 및 로 지칭된다. 블록에서, AABA 시스템은 하나 이상의 인공 에이전트들에 대한 에이전트 거동 정보(126-1)를 입 력으로 취하고 하나 이상의 인간 카운터파트들에 대한 인간 거동 정보(126-2)를 입력으로 취한다. 거동 정보 는, 적어도 일부 실시예들에서, AABA 시스템을 포함하는 정보 프로세싱 시스템에 국부적으로 저장된 다. 다른 실시예들에서, 거동 정보는 AABA 시스템을 포함하는 정보 프로세싱 시스템으로부터 원격으로 저장된다. 거동 정보는, 적어도 일부 실시예들에서, 인공 에이전트 훈련 시스템, 운영 환경, 인간 테스터들, 인간 플레이어들, 이들의 조합 등으로부터 획득된다. 예시적인 목적으로, 이 예에서 거동 정보 는 비디오 게임 환경의 3차원(3D) 공간 내에서 인공 에이전트(들) 및 인간 카운터파트(들)의 탐색/이 동 거동들을 나타낸다. 그러므로, 이 예에서, 거동 정보에 의해 식별되는 각각의 움직임은 x-좌표, y-좌표 및 z-좌표에 의해 정의된다. 다른 유형들의 거동이 다른 특성들이나 속성들에 의해 표현 가능/정의 가능하다는 것이 이해되어야 한다. 또한, 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)는 각각 하나 이상의 에피소드들(에피소드 (301-1) 및 에피소드(301-2)로 예시됨)로 표현된다. 예를 들어, 평가되는 거동이 비디오 게임과 같은 가상 환경 내에서의 탐색인 경우, 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)는 각각 주어진 작업에 대한 인공 에이전트 및 인간 카운터파트의 모든 탐색 움직임들을 나타내는 하나 이상의 에피소드들을 각각 포함 한다. 인공 에이전트와 인간 카운터파트의 거동이 에피소드(들) 및 궤적들에 의해 표현되는 것에 제한되지 않고, 다른 기법들도 마찬가지로 적용 가능하다는 것이 이해되어야 한다. 인공 에이전트 거동 정보(126-1)의 각 각의 에피소드(301-1)는 궤적들(τ)(303-1)로 구성되고, 인간 거동 정보(126-1)의 각각의 에피소드(301-2)는 궤 적들(τ)(303-2)로 구성된다. 전술한 바와 같이, 궤적(τ)은 시간 단계들의 지평에 걸친 에피소드 의 연속적인 서브시퀀스이다. 즉, 각각의 궤적(τ)은 이도록 같은 T 시간 단계들의 지평에 대한 상태-행동 쌍들의 시퀀스로 정의된다. 그러므로, 궤적(τ)은 인공 에이전트 또 는 인간 카운터파트가 수행한 거동/행동들의 서브시퀀스를 포함하는 에피소드의 슬라이스/윈도우이다. 예를 들 어, 에피소드가 인공 에이전트에 의해 취해진 1000번의 움직임들을 나타낸다면, 각각의 τ는 이 들 1000번의 움직임들의 서브세트를 나타낸다. 블록에서, AABA 시스템의 분포 모듈은 인공 에이전트 거동 정보(126-1) 및 인간 거동 정보(126- 2)에 대한 분포들(P)을 결정/생성한다. 예를 들어, 거동 분포 모듈은 인공 에이전트 거동 정보(126- 1)에 대한 분포( )(303-1)를 생성하고, 인간 거동 정보(126-2)에 대한 분포( )(303-2)를 생성한다. 이 예에 서, 분포(P)는 궤적의 공간, 예를 들어, 블록에서 결정된 (301-1) 및 에 걸쳐 있다. 블록(306 및 308)에서, AABA 시스템의 분포 모듈 및 거동 정보 변환 모듈(본원에서 간결하게 하 기 위해 변환 모듈로 지칭됨)은 인공 에이전트 거동 정보(126-1)에 대한 샘플 분포(X)(309-1) 및 인간 거 동 정보(126-2)에 대한 샘플 분포(Y)(309-2)를 생성하도록 동작한다. 샘플 분포(X)(309-1) 및 샘플 분포 (Y)(309-2)는 각각 분포( )(305-1) 및 분포( )(305-2)에서 독립적으로 도출된다. 예를 들어, 블록에서, E는 인공 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2) 각각으로부터 독립적으로 수집 된 M개의 에피소드들의 세트를 나타낸다. N은 주어진 에피소드에서 초기 상태( )와 종료 상태( ) 사이 의 총 시간 단계들의 개수를 나타낸다. 분포 모듈은 교체를 통해 각각의 에피소드로부터 길이(T)의 K 개의 궤적들을 독립적으로 서브샘플링한다. 일부 사례들에서, 에피소드의 길이가 심하게 편향될 수 있다. 그러므로, 더 많은 시간 단계들을 갖는 더 큰 에피소드들로부터의 임의의 바이어스들을 보정하기 위해, K 는 주어진 세트에서 가장 큰 에피소드의 길이로 설정된다. 이와 같이, 각각의 샘플 분포의 크기(예를 들어, )는 블록에서 생성되고, 적어도 일부 실시예들에서, 이다. 이것은 집계된 샘플 분포로부 터 무작위로 도출된 궤적이 수집된 에피소드들 중 임의의 것으로부터 나올 균일한 확률을 갖는다는 것을 보장한다. 또한, 샘플 분포(X)(309-1)와 샘플 분포(X)(309-2) 사이에는 점대점 대응이 없다. 블록에서, 변환 모듈은 인공 에이전트(들)의 거동 정보(126-1) 및 인간 카운터파트(들)의 거동 정보(126-2)를 제1 표현으로부터 벡터들(307-1) 및 이미지들(307-2)과 같은 다른 표현으로 변환한다. 적어도 일 부 실시예들에서, 이러한 상이한 표현은 벡터(307-1), 이미지(307-2) 등과 같은 거동 정보의 고차원 표현 이다. 일 예에서, 변환 모듈은 블록에서 분포 모듈에 의해 생성된 각각의 샘플링된 궤적 (τ)을 입력으로서 수신한다. 이어서, 각각의 샘플링된 궤적(τ)에 대해, 변환 모듈은 샘플링된 궤적(τ)을 각각의 시간 단계에서 인공 에이전트의 절대 3차원(3D) 위치를 포함하는 벡터(307-1)로서 나타낸다. 변환 모듈은 벡터(307-1)를 사용하여 샘플링된 궤적을 2차원(2D) 렌더링(이미지)(307-2)으 로 변환하고 시각화한다. 인공 에이전트의 절대 3D 위치는 주어진 상태에 대한 인공 에이전트의 응답의 최 소 표현을 나타낼 수 있다. 이 예에서, 를 시간(t)에서 인공 에이전트의 3D 데카르트 좌표들이라고 하고, 를 주어진 샘플링된 궤적(τ)에 대한 좌표들의 시퀀스로하여, 및 이다. 변환 모듈은 를 사용하여 z 축에서 인공 에이전트의 탐색을 보고, 좌표들에 최소-최대 스케일링을 적용하여 데카르트 좌표들의 각각의 벡터를 [0, 1]의 범위로 투영함으로써 샘플 링된 궤적 τ을 2D 렌더링으로 투영한다. 변환된 좌표들 은 각각 및 로 정의된다. 각각의 x 및 y 좌표 공간의 최소값과 최대값은 샘플링된 궤적(τ)의 좌표들의 시퀀스인 에 대해 결정된다는 점에 유의한다. 변환 모듈은 수학식 3에 도시된 바와 같이 원하는 높이 x 너비 해상도를 사용하여 이러한 좌표를 스케일링한다. (수학식 3). 결과적인 이미지(307-2)는 샘플링된 궤적(τ)의 하향식 투영(307-2)으로 지칭되고, 이는 연산자 ( )로 표시된다. 목표들이 점점 더 복잡해짐에 따라, 에피소드들은 매우 다양하고 불균일할 수 있으며, 이로 인해 아티팩트 들이 도입될 수 있다. 예를 들어, 길고 복잡한 궤적들의 미세한 세부사항들은 투영들에서 자신의 중요성을 잃고, 짧고 부드러운 궤적들의 연속성이 중단되어, 희소 투영이 도입된다. 그러므로, 적어도 일부 실시예들에서, 변환 모듈은 전술한 하향식 궤적 투영 프로세스에 2개의 수정들을 도입한다. 제1 수정에서, 변환 모듈은 MDP들의 조건부 독립성 특성을 이용하여, T로 표시된 유한한 시간 지평을 사용하여 각각의 에 피소드로부터 교체 없이 고정 길이 궤적들을 서브샘플링한다. 제2 변형에서, 변환 모듈은 를 따라 선형으로 보간하고, 결과적인 이미지(307-2)의 충실도를 증가시키기 위해 축들을 동적으로 시프트 및 스케일링한다. 도 4는 변환 모듈에 의해 생성된 투영 출력의 다양한 예들을 도시한다. 이 예에서, 투 영 출력은 하나 이상의 인공 에이전트들 및 하나 이상의 인간 카운터파트들의 탐색 거동을 나타내는 하나 이상의 투영체들/이미지들(투영체들(404-1 내지 404-4)로 예시됨)을 포함한다. 적어도 일부 실시예들에서, 거동 정보에 대해 결정된 각각의 샘플링된 궤적(τ)은 투영/이미지(307-2)로서 표현된다. 적어도 일 부 실시예들에서, 변환 모듈의 출력은 인공 에이전트 거동 정보(126-1)에 대해 생성된 투영체들/이미지들 (307-2)의 콜렉션을 포함하는 (분포( )(305-1)의) 샘플 분포(X)(309-1) 및 인간 거동 정보(126-2)에 대해 생 성된 투영체들/이미지들(307-2)의 콜렉션을 포함하는 (분포()(305-2)의) 샘플 분포(Y)(309-2)이다. 도 3의 블록을 참조하면, 다른 예에서, 변환 모듈은 전술된 예와 유사하게, 각각의 시간 단계에서 인 공 에이전트의 절대 3차원 위치를 사용하여 인공 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)를 나타내는 샘플링된 궤적들(τ)을 벡터화함으로써 거동 정보를 다른 표현으로 변환한다. 그러나, 이 예에서, 변환 모듈은 궤적들(τ)을 나타내는 벡터들(307-1)을 2D 시각적 표현으로 변환하지 않는다. 대신에, 변환 모듈은 샘플링된 궤적들(τ)을 나타내는 벡터들(307-1)로부터 직접 샘플 분포(X)(309- 1) 및 샘플 분포(Y)(309-2)를 생성하고, 이는 샘플링된 궤적들(τ)의 x, y 및 z 좌표 데이터를 포함한다. 예를 들어, 변환 모듈은 인공 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)를 각각 나타내는 각각 의 에피소드(301-1 및 301-2)를 T로 표시된 유한한 시간 지평을 사용하여 각각의 에피소드로부터 교체를 통해 균일하게 고정 길이 궤적들(τ)을 서브샘플링함으로써 움직임들의 분포로 변환한다. 보다 공식적으로, 를 시간(t)에서 인공 에이전트의 3D 데카르트 좌표라 하고 를 주어진 궤적(τ) 에 대한 좌표들의 시퀀스로 하여 및 이다. 길이(N)의 에피소드가 주어졌을 때, 변환 모듈은 와 가 샘플링될 동일한 확률( )을 갖도록 중첩되는 궤적들을 고유하게 다 른 것으로 간주하고, 여기서 , , 및 이다. 변환 모듈은 각각의 샘 플( )로부터 초기 데카르트 좌표( )를 뺌으로써 각각의 움직임이 원점에서 시작하도록 하여, AABA 시스템 이 절대 위치에 의해 바이어스되지 않고 거동(예를 들어, 탐색/이동)을 분석하도록 보장한다. 이와 같이,변환 모듈에 의해 생성된 출력은 인공 에이전트 거동 정보(126-1)에 대해 생성된 벡터들(307-1)의 콜렉션 을 포함하는 샘플 분포(X)(309-1) 및 인간 거동 정보(126-2)에 대해 생성된 벡터들(307-1)의 콜렉션을 포함하는 샘플 분포(Y)(309-2)이다. 310에서, AABA 시스템의 거동 유사도 결정 모듈은 변환 모듈에 의해 출력된 샘플 분포(X)(309- 1) 및 샘플 분포(Y)(309-2)로 표현되는 변환된 거동 정보를 사용하여 에이전트 거동 정보(126-1) 및 인간 거동 정보(126-2)의 거동 유사도를 평가한다. 전술한 바와 같이, 거동 유사도 결정 모듈은 인공 에이전트의 거 동과 인간 카운터파트의 거동 사이의 유사도가 그들 각자의 궤적들의 분포들 사이의 유사도에 의해 정의된 다는 것을 나타내는 중심 가설에 기반하여 구성된다. 적어도 일부 실시예들에서, 거동 유사도 결정 모듈은 샘플 분포(X)(309-1) 및 샘플 분포(I)(309-2)를 입력으로 취하고, 이들은 각각 분포들 (305-1) 및 (305- 2)로부터 독립적으로 도출되었다. 전술한 바와 같이, (305-1)는 결정 정책( )에 따라 인공 에이전트 에 의해 유도된 궤적들(τ)(303-1)의 분포를 나타내고, (305-2)는 인간 카운터파트에 의해 유도된 궤적들 (τ)(303-2)의 분포를 나타낸다. 적어도 일부 실시예들에서, (305-1) 및 (305-1) 사이의 거동 유사도를 평"}
{"patent_id": "10-2024-7032457", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "가하기 위한 목적으로, 거동 유사도 결정 모듈은 아래에 요약된 바와 같이, 이들 분포들이 서로 다르다는 대립가설( )에 반하여 동일하다는 귀무가설( )을 평가하도록 구성된다."}
{"patent_id": "10-2024-7032457", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "적어도 일부 실시예들에서, 거동 유사도 결정 모듈은 인공 에이전트(들) 및 인간 카운터파트(들)의 거동을 평가하기 위해 2개의-샘플 가설 테스트 기법을 수행한다. 도 5는 흐름도 형태로, 2개의-샘플 가설 테스트 기법을 수행하기 위한 예시적인 방법을 예시한다. 예시적인 방법은 도 3의 블록에서 수 행된다. 2개의-샘플 가설 테스트 기법은, 적어도 일부 실시예들에서, 다음과 같은 통찰에 의해 동기를 부여받는 다: 귀무가설이 참이라면, (305-1)과 (305-2) 사이의 임의의 차이는 샘플링 에러에 기인해야 한다. 이와 같이, 거동 유사도 결정 모듈은 샘플 분포(X)(309-1)와 샘플 분포(Y)(309-2) 사이의 차이를 평가하기 위한 목적으로 테스트 통계치를 계산하기 위한 하나 이상의 기법들을 구현한다. 이러한 기법들의 예들은 위에서 설명된 MMD 및 n개 중 m개 부트스트랩 재샘플링 기법들을 포함한다. 이어서, 거동 유사도 결정 모듈은 분 리 및 풀링된 샘플 분포들의 2개의 설정들에서 이러한 거리들의 분포(예를 들어, MMD)를 평가 및 비교하여, p- 값과 같은 유사도 측정치(128-1)를 포함하는 거동 분석 결과들을 생성한다. 예를 들어, 블록에서, 거동 유사도 결정 모듈은 분리된 샘플 분포(X)(309-1) 및 샘플 분포(Y)(309- 2)를 평가하기 위해 제1 설정에서 동작한다. 블록에서, 및 각각이 샘플 분포(X)(309-1) 및 샘플 분포(Y)(309-2) 각각으로부터 교체를 통해 독립적으로 도출된 크기(m)의 서브샘플들을 각각 나타낸다는 점을 감 안할 때, 거동 유사도 결정 모듈은 S 반복들에 걸쳐 를 반복적으로 재컴퓨팅함으로써 MMD 거 리들(501-1)의 제1 분포를 형성하고, 여기서 이다. 이 거리들(501-1)의 제1 분포는 로 표시된 다. 블록에서, 거동 유사도 결정 모듈은 수학식 4에 따라 δ로 표시된 테스트 통계치를 계산한 다: 수학식 4, 여기서 분위수 는 분포( )에 대한 α번째 분위수를 반환하고, α는 아래 설명된 바와 같이 테스트의 민감도를 제어하도록 설계된 하이퍼파라미터이다. 테스트 통계치를 생성하기 위한 다른 기법들이 또한 적 용 가능하다는 것이 이해되어야 한다. 예를 들어, 신뢰 구간들은 테스트 통계치를 생성하는 데 사용될 수 있다. 이 예에서, 가 주어지면, 평균 및 표준 편차는 α에 의해 정의된 신뢰 구간의 하한이 테스트 통계치 를 생성하는 데 사용되도록 계산된다.블록에서, 거동 유사도 결정 모듈은 제2 설정에서 동작하고, 샘플 분포(X)(309-1) 및 샘플 분포 (Y)(309-2)를 결합하여 Z로 표시된 풀링된 샘플 분포를 생성한다. 블록에서, 거동 유사도 결정 모듈 은 MMD 거리들(501-2)의 제2 분포를 형성함으로써 평가 동작을 수행한다. 유사도 결정 모듈은 인 다른 S개의 독립적으로 추출된 샘플들에 대해 를 반복적으로 재컴퓨팅함으로써 MMD 거리들(501-2)의 제2 분포를 형성한다. 그러나, 이 제2 설정에서, 와 둘 모두는 교체를 통해 풀링된 분포(Z)에서 독립적으로 샘플링된다. 거리들(501-2)의 이런 제2 분포는 로 표시된다. 블록에서, 거동 유사도 결정 모듈은 2개의 설정들로부터의 거리들의 분포를 비교하여, 인공 에이전트(126-1)의 거동 이 인간 카운터파트의 거동(126-2)과 얼마나 유사한지를 정량화하는 유사도 측정치(128-1)를 포함하는 거동 분 석 결과들을 생성한다. 적어도 일부 실시예들에서, 유사도 측정치(128-1)는 p-값으로 표현된다. 유사 성 결정 모듈은, 적어도 일부 실시예들에서, 귀무가설( )을 평가하기 위해, 아래 수학식 5에 도시된 바와 같이, 테스트 통계치(δ)보다 큰 추정치들()의 백분율로서 p-값을 생성한다: (수학식 5). 도 3을 참조하면, 블록에서 거동 유사도 결정 모듈은 유사도 측정치(128-1)를 포함하는 인공 에이전 트 거동 분석 결과들(예를 들어, p-값)을 생성한다. 도 6은 인공 에이전트 거동 분석 결과들의 일 예를 표 형태로 예시한다. 이 예에서, \"T\" 열은 평가에 사용된 시간 지평을 나타내고, \"a\" 열 은 기준선 분포에 대한 분위수를 나타낸다. \"인간\" 열은 2명의 인간 카운터파트들의 거동 사이의 유 사도 측정치를 나타낸다. \"에이전트 1\" 열은 제1 인공 에이전트의 유사도 측정치 및 다수의 인간 카운터파 트들의 결합된 거동을 나타낸다. \"에이전트 2\" 열은 제2 인공 에이전트의 거동과 다수의 인간 카운터파트 들의 결합된 거동의 유사도 측정치를 나타낸다. 이 예에서 에이전트 1과 에이전트 2는 학습/프로그래밍된다. 괄 호들 안의 백분율들은 유사도 측정치들에 대한 분산 정도를 도시하는 사분위수 범위(IQR)이고, 괄호들 밖의 백 분율들은 주어진 런(run)들의 수에 대한 중앙값들이다. 도 3을 참조하면, 블록에서, AABA 시스템은 유사도 측정치(128-1)가, 인공 에이전트가 수정/재 구성되어야 함을 나타내는지를 결정한다. 예를 들어, AABA 시스템은 유사도 측정치(128-1)가, 인공 에이전 트의 거동의 인간과의 유사성이 유사도 임계치를 만족시키지 못함을 나타내는지를 결정한다. 이어서, 만약 그렇 다면, 프로세스는 블록에서 종료하거나, 대안적으로, 블록으로 되돌아간다. 그렇지 않으면, 블록 에서, AABA 시스템은 도 1 및 도 2에 대해 전술한 바와 같이 인공 에이전트를 수정 또는 재구성 /프로그래밍한다. 예를 들어, 인공 에이전트는 인공 에이전트의 거동의 인간과의 유사성이 개선되도록 수 정된다. 대안적으로, AABA 시스템은 훈련 시스템과 같은 다른 시스템에게 인공 에이전트의 수정 또는 재구성을 수행하도록 명령한다. 이어서, 프로세스는 블록에서 종료하거나, 대안적으로, 블록으 로 되돌아간다. 전술한 바와 같이, p-값은, 적어도 일부 실시예들에서, AABA 시스템에 의해 유사도 측정치(128-1)로 서 사용된다. 이들 실시예들에서, 및 가 귀무가설() 하에서 동일한 분포임을 감안할 때, 분리된 샘플 분 포(X)(307-1) 및 샘플 분포(Y)(307-2)에 대해 컴퓨팅된 MMD 거리들(501-1)의 제1 분포는 풀링된 샘플 분포 (Z)에 대해 컴퓨팅된 MMD 거리들(501-2)의 제2 분포와 동일해야 한다. 따라서, 일 때, 결과 p-값 은 일 때 를 향해 수렴하는 것을 따른다. 게다가, 일 때, AABA 시스템은 도출 된 p-값을 분포들( 및 ) 사이의 근접성의 척도로 해석한다. 이를 입증하기 위해, 으로 표시되 는, 가 평균과 단위 분산이 0인 128 차원 표준 가우스로 분포되는 장난감 예를 사용하는 일련의 실험들을 고 려한다. 각각의 실험에 대해, S = 1000번의 반복들은 서브샘플 크기(m = 100)를 사용하여 실행된다. 거동 유사 도 결정 모듈에 의해 수행되는 2개의-샘플 가설 테스트 기법의 내재적인 확률성으로 인해, 각각의 실험은 10회 반복되고 중앙값(p-값) 및 관찰된 사분위수 범위(IQR) 둘 모두는 보고된다. 먼저 을 사용하여 인 경우를 고려한다. IQR이 0.43%이고 p-값이 88.5%인 중앙값 이 관찰된다. 다음으로, 거동 유사도 결정 모듈에 의해 수행된 2개의-샘플 가설 테스트에서 생성된 p-값이 어떻게 분포( )(305-1)와 분포()(305-2) 사이의 유사도 척도로 사용되는지를 입증하기 위해, 분포( )(305-1)가 엡실론( )만큼 증분적으로 시프트됨에 따라 분포 P가 단조롭게 감소하는 것이 도시된다. 각각의 에 대해 가 비교되고 관찰된 결과들은 도 7의 표에 도시된다. 게다가, MMD 거리들 의 분포는 (305-1)에 따라 이동한다. 일 때, 와 의 분포들이 거의 분리된다는 점 에 유의한다. 적어도 일부 실시예들에서, AABA 시스템은 α를 조정함으로써 2개의-샘플 가설 테스트의 민 감도를 제어한다. 직관적으로, α의 값들이 높을수록 더 큰 테스트 통계치(δ)가 생성되고, 따라서, 거동 유사 도 결정 모듈에 의해 수행되는 2개의-샘플 가설 테스트의 민감도를 증가시킨다. 도 7의 표에 도시된 바와 같이, 보다 민감한 테스트는 분포가 발산됨에 따라 더 낮은 p-값들을 산출한다. 그러므로, 다수의 인공 에 이전트들의 거동이 인간 카운터파트의 거동과 비교되는 경우에, α는 민감도를 제어하고 보다 유익한 비교 를 생성하도록 조정 가능하다. 2개의 샘플들 사이의 MMD 거리를 추정하는 컴퓨팅 비용이 각각의 샘플의 크기에 따라 2차식으로 증가하지만, 데 이터의 차원에 따라 또한 선형적으로 증가한다. 그러므로, 적어도 일부 실시예들에서, AABA 시스템의 차원 축소 모듈은 고차원 데이터(예를 들어, 이미지들)에서의 중복들을 제거하고 고려되는 랜덤 변수들(예를 들 어, 픽셀들)의 수를 감소시킴으로써 이러한 컴퓨팅 비용들을 감소시키기 위해 하나 이상의 차원 축소 기법들을 구현함과 동시에 원래의 분포를 이해하는 데 필요한 정보를 보존한다. 차원 축소 기법들의 일 예는 주성분 분석 (PCA)이다. 거동 유사도 결정 모듈에 의해 수행된 2개의-샘플 가설 테스트에 대한 PCA의 효과들을 입증하 기 위해, 4명의 인간 카운터파트들로부터 관찰된 100개의 상이한 에피소드들로부터 서브샘플링된 22,600개의 고 정 길이 궤적들로 구성된 샘플 분포(D)를 고려한다. 이 예에서, 차원 축소 모듈은 고차원(HD) 데이터를 저 차원(LD) 공간으로 선형적으로 투영하여 이 되고 여기서 이고, P128는 데 이터 분산의 약 75%를 설명하는 상위 128개의 주성분들이다. 이 예에서, 데이터의 차원을 축소하는 것은 컴퓨팅 비용에 대한 샘플 크기의 영향을 현저히 최소화함과 동시에, 거동 유사도 결정 모듈에 의해 수행되는 2개 의-샘플 가설 테스트의 안정성을 유지한다. 다른 차원 기법들이 또한 적용할 수 있음이 이해되어야 한다. 본원에 설명된 기법들은, 상이한 실시예들에서, 다양한 프로세서들 또는 병렬 프로세서들(예를 들어, 벡터 프로 세서들, 그래픽 프로세싱 유닛들(GPU들), 범용 GPU들(GPGPU들), 논-스칼라 프로세서들, 고병렬 프로세서들, 인 공 지능(AI) 프로세서들, 추론 엔진들, 기계 학습 프로세서들, 다른 멀티스레드 프로세싱 유닛들 등) 중 임의의 것에서 이용된다. 이제 도 8을 참조하면, 시스템들(102-1 내지 102-3)과 같은 프로세싱 시스템의 블록도는 병렬 프로세서들로 구성된 일부 실시예들에 따라 예시된다. 프로세싱 시스템은 중앙 프로세싱 유닛 (CPU) 및 그래픽 프로세싱 유닛(GPU)을 포함한다. 적어도 일부 실시예에서, CPU, GPU, 또 는 CPU 및 GPU 둘 모두는 AABA 시스템을 구현하도록 구성된다. CPU는, 적어도 일부 실시 예들에서, 하나 이상의 단일코어 또는 다중코어 CPU들을 포함한다. 다양한 실시예들에서, GPU는 종래의 CPU들, 종래의 그래픽 처리 유닛들(GPU들), 및 이들의 조합들과 같은 자원들에 대해 가속 방식으로 그래픽 프로 세싱 작업들, 데이터 병렬 작업들, 중첩된 데이터 병렬 작업들을 가속하는 것과 연관된 기능들 및 컴퓨팅들을 수행하는 하드웨어 및/또는 소프트웨어의 임의의 협력 콜렉션을 포함한다. 도 8의 실시예에서, CPU 및 GPU는 단일 실리콘 다이 또는 패키지 상에 형성되고 결합되어 통일된 프 로그래밍 및 실행 환경을 제공한다. 이 환경은 GPU가 일부 프로그래밍 작업들을 위해 CPU로서 유동적 으로 사용될 수 있게 한다. 다른 실시예들에서, CPU 및 GPU는 개별적으로 형성되고 동일하거나 상이 한 기판들 상에 장착된다. 프로세싱 시스템이 적어도 일부 실시예들에서, 도 8에 예시된 것보다 더 많거나 더 적은 구성요소들을 포함할 수 있다는 것이 이해되어야 한다. 예를 들어, 프로세싱 시스템은 적어도 일 부 실시예들에서, 하나 이상의 입력 인터페이스들, 비휘발성 스토리지, 하나 이상의 출력 인터페이스들, 네트워 크 인터페이스들, 및 하나 이상의 디스플레이들 또는 디스플레이 인터페이스들을 추가로 포함한다. 도 8에 예시된 바와 같이, 프로세싱 시스템은 또한, 시스템 메모리, 운영 체제, 통신 인프라스 트럭처, 및 하나 이상의 애플리케이션들을 포함한다. 시스템 메모리에 대한 액세스는 시스템 메 모리에 결합된 메모리 제어기(도시되지 않음)에 의해 관리된다. 예를 들어, 시스템 메모리로부터 판 독하거나 이에 기록하기 위한 CPU 또는 다른 디바이스들로부터의 요청들은 메모리 제어기에 의해 관리된다. 일부 실시예들에서, 하나 이상의 애플리케이션들은 CPU에서 또한 실행되는 컴퓨팅들을 수 행하기 위한 다양한 프로그램들 또는 커맨드들을 포함한다. CPU는 선택된 커맨드들을 GPU에서의 프로 세싱을 위해 전송한다. 운영 체제 및 통신 인프라스트럭처는 아래에서 더 상세히 논의된다. 프로세 싱 시스템은 디바이스 드라이버, 및 입력/출력 메모리 관리 유닛(IOMMU)과 같은 메모리 관리 유닛을 더 포함한다. 프로세싱 시스템의 구성요소들은 하드웨어, 펌웨어, 소프트웨어, 또는 이들의 임의의 조합으로서 구현된다. 몇몇 실시예들에서, 프로세싱 시스템은 도 8에 도시된 것들에 더하여 또는 이들과는 상이한 하나 이상의 소프트웨어, 하드웨어, 및 펌웨어 구성요소들을 포함한다. 프로세싱 시스템 내에서, 시스템 메모리는 동적 랜덤-액세스 메모리(dynamic random-access memory)(도시되지 않음)와 같은 비영구적 메모리를 포함한다. 다양한 실시예들에서, 시스템 메모리는 애플 리케이션들 또는 다른 프로세싱 로직의 부분들의 실행 동안의 프로세싱 로직 명령들, 상수 값들, 변수 값들, 또 는 다른 원하는 정보를 저장한다. 예를 들어, 다양한 실시예들에서, CPU에 대한 하나 이상의 연산들을 수 행하기 위한 제어 로직의 부분들은 CPU에 의한 연산의 각자의 부분들의 실행 동안 시스템 메모리 내 에 상주한다. 실행 동안, 각자의 애플리케이션들, 운영 체제 기능들, 프로세싱 로직 커맨드들, 및 시스템 소프 트웨어는 시스템 메모리에 상주한다. 운영 체제에 기본적인 제어 로직 커맨드들은 일반적으로 실행 동안 시스템 메모리에 상주한다. 일부 실시예들에서, 다른 소프트웨어 커맨드들(예를 들어, 디바이스 드라 이버를 구현하는 데 사용되는 명령들 또는 커맨드들의 세트)은 또한, 프로세싱 시스템의 실행 동안 시스템 메모리에 상주한다. IOMMU는 멀티컨텍스트(multi-context) 메모리 관리 유닛이다. 본원에서 사용될 때, 컨텍스트는 커널들이 실행되는 환경 및 동기화 및 메모리 관리가 정의되는 도메인으로 고려된다. 컨텍스트는 디바이스들의 세트, 그 러한 디바이스들에 액세스가능한 메모리, 대응하는 메모리 속성들, 및 메모리 객체들에 대한 커널(들) 또는 연 산들의 실행을 스케줄링하는 데 사용되는 하나 이상의 커맨드 큐를 포함한다. IOMMU는 GPU와 같은 디 바이스들에 대한 메모리 페이지 액세스를 위해 가상-물리적 어드레스 변환을 수행하는 로직을 포함한다. 일부 실시예들에서, IOMMU는 또한 변환 색인 버퍼(translation lookaside buffer; TLB)(도시되지 않음)를 포함 하거나 이에 대한 액세스를 갖는다. TLB는 시스템 메모리에서의 데이터에 대해 GPU에 의해 행해진 요 청들에 대한 논리적(즉, 가상) 메모리 어드레스들의 물리적 메모리 어드레스들로의 변환을 가속화하기 위해 콘 텐츠 어드레스가능 메모리(CAM)에서 구현된다. 다양한 실시예들에서, 통신 인프라스트럭처는 프로세싱 시스템의 구성요소들을 상호연결시킨다. 통신 인프라스트럭처는 주변 구성요소 인터커넥트(peripheral component interconnect, PCI) 버스, 확장 PCI(PCI-E) 버스, 고급 마이크로 제어기 버스 아키텍처(advanced microcontroller bus architecture, AMBA) 버 스, 고급 그래픽 포트(advanced graphics port, AGP), 또는 다른 그러한 통신 인프라스트럭처 및 인터커넥트들 중 하나 이상을 포함한다(도시되지 않음). 일부 실시예들에서, 통신 인프라스트럭처는 또한, 애플리케이션 들의 데이터 전송 레이트 요건들을 만족시키는 이더넷 네트워크 또는 임의의 다른 적합한 물리적 통신 인프라스 트럭처들을 포함한다. 통신 인프라스트럭처는 또한, 프로세싱 시스템의 구성요소들을 포함하는 구성 요소들을 상호연결하기 위한 기능을 포함한다. 디바이스 드라이버와 같은 드라이버는 인터커넥트 또는 통신 인프라스트럭처를 통해 디바이스(예를 들어, GPU)와 통신한다. 호출 프로그램이 디바이스 드라이버에서 루틴을 호출할 때, 디바이스 드라이 버는 디바이스에 커맨드들을 발행한다. 디바이스가 데이터를 다시 디바이스 드라이버에 전송하면, 디 바이스 드라이버는 원래의 호출 프로그램에서 루틴들을 호출한다. 일반적으로, 디바이스 드라이버들은 임 의의 필요한 비동기 시간 의존적 하드웨어 인터페이스에 대해 요구되는 인터럽트 핸들링을 제공하기 위해 하드 웨어 의존적이고 운영 체제 특정적이다. 일부 실시예들에서, 컴파일러는 디바이스 드라이버 내에 임 베딩된다. 컴파일러는 소스 코드를 프로세싱 시스템에 의한 실행을 위해 필요한 프로그램 명령들로 컴파일한다. 그러한 컴파일 동안, 컴파일러는 컴파일의 다양한 페이즈들에서 프로그램 명령들에 변환들을 적용한다. 다른 실시예들에서, 컴파일러는 독립형 애플리케이션이다. 다양한 실시예들에서, 디바이스 드라 이버는 예를 들어, GPU의 다양한 기능에 액세스하기 위해 CPU에서 실행되는 소프트웨어(예를 들 어, 애플리케이션들)에 애플리케이션 프로그래밍 인터페이스(application programming interface, API)를 제공함으로써, GPU의 연산을 제어한다. CPU는 제어 프로세서, 필드 프로그래머블 게이트 어레이(FPGA), 주문형 집적 회로(ASIC), 또는 디지털 신 호 프로세서(DSP) 중 하나 이상을 포함한다(도시되지 않음). CPU는 프로세싱 시스템의 동작을 제어하 는 제어 로직의 적어도 일부를 실행한다. 예를 들어, 다양한 실시예들에서, CPU는 운영 체제, 하나 이상의 애플리케이션들, 및 디바이스 드라이버를 실행한다. 일부 실시예들에서, CPU는 하나 이 상의 애플리케이션들과 연관된 프로세싱을 CPU 및 다른 프로세싱 자원들, 이를테면 GPU에 걸쳐 분배함으로써 하나 이상의 애플리케이션들의 실행을 개시하고 제어한다.GPU는 병렬 프로세싱에 특히 적합한 그래픽 연산들 및 다른 연산들과 같은, 선택된 기능들을 위한 커맨드 들 및 프로그램들을 실행한다. 일반적으로, GPU는 픽셀 동작들, 기하학적 컴퓨팅들, 및 디스플레이에 이미 지를 렌더링하는 것과 같은 그래픽 파이프라인 동작들을 실행하기 위해 자주 사용된다. 일부 실시예들에서, GPU는 또한 CPU로부터 수신된 커맨드들 또는 명령들에 기반하여, 컴퓨팅 프로세싱 동작들(예를 들어, 비디오 동작들, 물리 시뮬레이션들, 전산 유체 역학 등과 같은 그래픽과 관련되지 않은 동작들)을 실행한다. 예 를 들어, 그러한 커맨드들은 GPU의 명령 세트 아키텍처(ISA)에 전형적으로 정의되지 않은 특수 명령들을 포함한다. 몇몇 실시예들에서, GPU는 그래픽 이미지를 나타내는 이미지 지오메트리를, 이미지를 렌더링 및 디스플레이하기 위한 하나 이상의 커맨드들 또는 명령들과 함께 수신한다. 다양한 실시예들에서, 이미지 지오메 트리는 2차원(2D) 또는 3차원(3D) 컴퓨터화된 그래픽 이미지의 표현에 대응한다. 다양한 실시예들에서, GPU는 예를 들어, SIMD(single-instruction multiple-data) 실행 모델에 따라, 스 레드를 다른 SIMD 유닛들(822-1 내지 822-4로 예시됨)에 의한 웨이브프론트에서의 다른 스레드들의 실행과 동시에 실행하도록 각각 구성되는 하나 이상의 SIMD 유닛들을 포함하는 하나 이상의 프로세싱 코어들 (820-1 및 820-2로 예시됨)과 같은 하나 이상의 컴퓨팅 유닛들을 포함한다. SIMD 실행 모델은 다수의 프로 세싱 요소들이 단일의 프로그램 제어 흐름 유닛 및 프로그램 카운터를 공유하고, 이에 따라 동일한 프로그램을 실행하지만, 그 프로그램을 상이한 데이터로 실행할 수 있는 모델이다. 프로세싱 코어들은 또한, 셰이더 코어들 또는 스트리밍 멀티프로세서들(streaming multi-processors, SMX들)로도 지칭된다. GPU에 구현된 프로세싱 코어들의 수는 구성 가능하다. 각각의 프로세싱 코어는 하나 이상의 프로세싱 요소들, 이를 테면 스칼라 및/또는 벡터 부동 소수점 유닛들, 산술 및 논리 유닛들(ALU들) 등을 포함한다. 다양한 실시예들에 서, 프로세싱 코어들은 또한, 특수 목적 프로세싱 유닛들(도시되지 않음), 이를테면 역제곱근 유닛들 및 사인/코사인 유닛들을 포함한다. 하나 이상의 프로세싱 코어들 각각은 인입 데이터를 프로세싱하기 위해 특정 작업 항목의 각자의 인스턴스 화를 실행하고, 여기서 하나 이상의 프로세싱 코어들에서의 기본 실행 유닛은 작업 항목(예를 들어, 스레 드)이다. 각각의 작업 항목들은 예를 들어, 병렬로 실행될 커맨드에 의해 디바이스 상에서 호출되는 커널의 병 렬 실행들의 콜렉션의 단일 인스턴스화를 나타낸다. 작업 항목은 프로세싱 코어에서 실행되는 작업 그룹의 일부로서 하나 이상의 프로세싱 요소들에서 실행된다. GPU는 단일 SIMD 유닛 상에서 \"웨이브프론트\"로서 동시에 실행되는 스레드들의 그룹들과 같은 작업 항목들을 발행하고 실행한다. 웨이브프론트들은 적어도 일부 실시예들에서, 상호교환적으로 워프들, 벡터들, 또 는 스레드들로도 지칭된다. 일부 실시예들에서, 웨이브프론트들은 셰이더 프로그램의 병렬 실행의 인스턴스들을 포함하고, 여기서 각 웨이브프론트는 SIMD 패러다임(예를 들어, 하나의 명령 제어 유닛이 다수의 데이터를 갖는 명령들의 동일한 스트림을 실행함)에 따라 단일 SIMD 유닛 상에서 동시에 실행되는 다수의 작업 항목들을 포함한다. 스케줄러가 상이한 프로세싱 코어들 및 SIMD 유닛들 상의 다양한 웨이브프론트들을 스케줄링하고 GPU 상의 다양한 작업들을 오케스트레이팅(orchestrating)하기 위한 다른 동작들을 수행는 것과 관련된 동작들을 수행하도록 구성된다. 오프 칩 메모리 액세스와 연관된 레이턴시를 감소시키기 위해, 다양한 GPU 아키텍처들은 예를 들어, L1 캐시 및 로컬 데이터 공유(local data share, LDS)를 포함하는 메모리 캐시 계층 구조(도시되지 않음)를 포함한다. LDS 는 각각의 프로세싱 코어에 전용인 고속 저레이턴시 메모리이다. 일부 실시예들에서, LDS는 작업 그룹이 할당된 공간에서의 어디든 기록하도록 하는 풀 개더/스캐터 모델(full gather/scatter model)이다. 하나 이상의 프로세싱 코어들에 의해 부여되는 병렬화는 그래픽 관련 연산들 이를테면 픽셀 값 계산들, 버 텍스 변환들, 테셀레이션, 지오메트리 셰이딩 연산들, 및 다른 그래픽 연산들에 적합하다. 그래픽 프로세싱 파 이프라인은 CPU로부터 그래픽 프로세싱 커맨드들을 수용하고, 이에 따라 컴퓨팅 작업들을 병렬 실행 을 위해 하나 이상의 프로세싱 코어들에 제공한다. 일부 그래픽 파이프라인 연산들, 이를테면 픽셀 프로세 싱 및 다른 병렬 컴퓨팅 연산들은 입력 데이터 요소들의 스트림들 또는 콜렉션들에 대해 동일한 커맨드 스트림 또는 컴퓨팅 커널이 수행될 것을 요구한다. 동일한 컴퓨팅 커널의 각자의 인스턴스화들은 이러한 데이터 요소들 을 병렬로 프로세싱하기 위해 하나 이상의 프로세싱 코어들에서의 다수의 SIMD 유닛들 상에서 동시에 실행된다. 본원에서 지칭될 때, 예를 들어, 컴퓨팅 커널은 프로그램에서 선언되고 가속화 프로세싱 디바이스 (APD) 프로세싱 코어 상에서 실행되는 명령들을 포함하는 함수이다. 이러한 함수는 또한, 커널, 셰이더, 셰이더 프로그램, 또는 프로그램으로도 지칭된다. 적어도 일부 실시예들에서, 프로세싱 시스템은 컴퓨터, 랩톱/노트북, 모바일 디바이스, 게임 디바이스, 웨 어러블 컴퓨팅 디바이스, 서버, 또는 다양한 다른 유형들의 컴퓨팅 시스템들 또는 디바이스들 중 임의의 것이다. 프로세싱 시스템의 구성요소들의 수가 실시예마다 달라질 수 있다는 것에 유의한다. 적어도 일부 실시예들에서, 각각의 구성요소/서브구성요소의 수가 도 8에 도시된 수보다 더 많거나 더 적을 수 있다. 또한, 프로세싱 시스템이 적어도 일부 실시예들에서, 도 8에 도시되지 않은 다른 구성요소들을 포함한다는 것에 유의한다. 추가적으로, 다른 실시예들에서, 프로세싱 시스템은 도 8에 도시된 것과 다른 방식으로 구조화 된다. 일부 실시예들에서, 위에서 설명된 장치 및 기법들은 하나 이상의 집적 회로(IC) 디바이스들(또한 집적 회로 패 키지들 또는 마이크로칩으로도 지칭됨)을 포함하는 시스템으로 구현된다. 전자 설계 자동화(EDA) 및 컴퓨터 지 원 설계(CAD) 소프트웨어 도구들이 적어도 일부 실시예들에서, 표준 셀들의 설계 및 표준 셀들을 구현하는 IC 디바이스들의 설계 및 제조에 사용된다. 이러한 설계 도구는 전형적으로 하나 이상의 소프트웨어 프로그램으로 서 표현된다. 하나 이상의 소프트웨어 프로그램들은 회로를 제작하도록 제조 시스템을 설계하거나 적응시키기 위해 프로세스의 적어도 일부를 수행하도록 하나 이상의 IC 디바이스들의 회로를 나타내는 코드 상에서 동작하 도록 컴퓨터 시스템을 조작하기 위해 컴퓨터 시스템에 의해 실행 가능한 코드를 포함한다. 이 코드는 적어도 일 부 실시예들에서, 명령들, 데이터, 또는 명령들과 데이터의 조합을 포함한다. 설계 도구 또는 제조 도구를 나타 내는 소프트웨어 명령은 통상적으로 컴퓨팅 시스템에 액세스가능한 컴퓨터 판독가능 저장 매체에 저장된다. 마 찬가지로, IC 디바이스의 설계 또는 제조의 하나 이상의 단계를 나타내는 코드도 적어도 일부 실시예들에서, 동 일한 컴퓨터 판독가능 저장 매체 또는 상이한 컴퓨터 판독가능 저장 매체에 저장되고 이로부터 액세스된다. 컴퓨터 판독가능 저장 매체는 적어도 일부 실시예들에서, 컴퓨터 시스템에 명령들 및/또는 데이터를 제공하기 위해 사용 동안 컴퓨터 시스템에 의해 액세스가능한 임의의 비일시적인 저장 매체, 또는 비일시적인 저장 매체 들의 조합을 포함한다. 이와 같은 저장 매체들은 적어도 일부 실시예들에서, 광학 매체들(예를 들어, CD(compact disc), DVD(digital versatile disc), 블루레이 디스크), 자기 매체들(예를 들어, 플로피 디스크, 자기 테이프, 또는 자기 하드 드라이브), 휘발성 메모리(예를 들어, 랜덤 액세스 메모리(RAM) 또는 캐시), 비휘 발성 메모리(예를 들어, 판독 전용 메모리(ROM) 또는 플래시 메모리), 또는 미세 전자 기계 시스템(MEMS) 기반 저장 매체들을 포함하지만 이에 제한되지 않는다. 컴퓨터 판독가능 저장 매체는 적어도 일부 실시예들에서, 컴 퓨팅 시스템에 임베드되거나(예를 들어, 시스템 RAM 또는 ROM), 컴퓨팅 시스템에 고정적으로 부착되거나(예를 들어, 자기 하드 드라이브), 컴퓨팅 시스템에 탈착가능하게 부착되거나(예를 들어, 광학 디스크 또는 USB(universal serial bus) 기반 플래시 메모리), 또는 유선 또는 무선 네트워크를 통해 컴퓨터 시스템에 결합 될 수 있다(예를 들어, 네트워크 액세스가능 스토리지(NAS)). 일부 실시예들에서, 위에서 설명된 기술들의 특정 양태들은 소프트웨어를 실행하는 프로세싱 시스템의 하나 이 상의 프로세서들에 의해 구현된다. 소프트웨어는 비일시적 컴퓨터 판독가능 저장 매체 상에 저장되거나 그렇지 않으면 유형적으로 구현된 하나 이상의 실행가능한 명령의 세트를 포함한다. 소프트웨어는 적어도 일부 실시예 들에서, 하나 이상의 프로세서에 의해 실행될 때, 하나 이상의 프로세서를 위에서 설명된 기법들의 하나 이상의 양태를 수행하도록 조작하는 명령들 및 특정 데이터를 포함한다. 비일시적인 컴퓨터 판독가능 저장 매체는 적어 도 일부 실시예들에서, 예를 들어, 자기 또는 광학 디스크 저장 디바이스, 솔리드 스테이트 저장 디바이스들 이 를테면 플래시 메모리, 캐시, 랜덤 액세스 메모리(RAM), 또는 다른 비휘발성 메모리 디바이스 또는 디바이스들 등을 포함한다. 비일시적인 컴퓨터 판독가능 저장 매체 상에 저장된 실행가능한 명령들은 적어도 일부 실시예들 에서, 소스 코드, 어셈블리 언어 코드, 객체 코드, 또는 하나 이상의 프로세서에 의해 해석되거나 그 외 실행가 능한 다른 명령 포맷이다. 일반적인 설명에서 위에서 설명한 모든 활동 또는 요소가 요구되지는 것은 아니며, 특정 활동 또는 디바이스의 일부가 요구되지 않을 수 있으며, 위에서 설명한 것에 더하여 하나 이상의 추가적인 활동이 수행될 수 있거나, 또는 요소가 포함될 수 있다는 점에 유의한다. 더 나아가, 활동이 나열된 순서는 반드시 이것이 수행되는 순서 인 것은 아니다. 또한, 구체적인 실시예들을 참조하여 개념을 설명하였다. 그러나, 통상의 지식을 가진 자라면 아래의 청구범위에 기재된 바와 같이 본 개시내용의 범위를 벗어나지 않는 범위에서 다양한 수정 및 변경이 가 능하다는 것을 알 수 있다. 따라서, 본 명세서 및 도면들은 제한적인 의미가 아니라 예시적인 것으로 간주되어 야 하며, 이러한 모든 수정은 본 개시내용의 범위 내에 포함되도록 의도된다. 이점, 다른 장점, 및 문제에 대한 해결책이 특정 실시형태와 관련하여 위에서 설명되었다. 그러나, 이점, 장점, 문제에 대한 해결책, 그리고 임의의 이점, 장점, 또는 해결책이 발생되게 하거나 더 명확해지게 할 수 있는 임 의의 특징부(들)가 임의의 또는 모든 청구항의 중요한, 요구되는, 또는 본질적인 특징부로서 해석되어서는 안된 다. 더욱이, 위에서 개시된 특정 실시형태는 단지 예시적이며, 개시된 주제가 본 명세서의 교시의 이점을 갖는당업자에게 명백하지만 상이한 그러나 동등한 방식으로 수정되고 실시될 수 있다. 이하의 청구범위에 기재된 것 이외의, 본원에 기재된 구성 또는 설계의 상세사항에 대한 제한은 의도되지 않는다. 이에 따라, 위에서 개시된 특정 실시예들이 대체 또는 수정될 수 있고, 모든 이와 같은 변형예들은 개시된 대상의 범위 내인 것으로 고려 된다는 것이 명백하다. 따라서, 본원에서 추구하는 보호범위는 아래의 청구범위에 명시된 바와 같다."}
{"patent_id": "10-2024-7032457", "section": "도면", "subsection": "도면설명", "item": 1, "content": "첨부 도면들을 참조함으로써, 당업자들에게 본 개시내용이 더 잘 이해되고, 그 수많은 특징들 및 장점들이 자명 해질 수 있다. 상이한 도면들에서 동일한 참조 부호들의 사용은 유사하거나 동일한 항목들을 나타낸다. 도 1은 일부 실시예들에 따른 인공 에이전트 거동과 인간 대응 거동 사이의 유사성들을 평가하고 정량화하기 위 한 운영 환경의 블록도이다. 도 2는 일부 실시예들에 따른 인공 에이전트의 인간과의 유사성을 정량화하는 유사도 측정치에 기반하여 인공 에이전트의 거동을 수정하기 위한 전반적인 예시적인 방법을 예시하는 흐름도이다. 도 3은 일부 실시예들에 따른 인공 에이전트 거동과 인간 대응 거동 사이의 유사도를 평가하고 정량화하기 위한 예시적인 방법을 예시하는 흐름도이다. 도 4는 일부 실시예들에 따른 인공 에이전트 및 인간 대응 거동의 하향식 투영 표현의 예들을 예시하는 다이어 그램이다. 도 5는 일부 실시예들에 따른 도 3의 블록에서 인공 에이전트 거동과 인간 상대 거동 사이의 유사도를 평 가하고 정량화하기 위한 2개의-샘플 가설 테스트를 수행하기 위한 예시적인 방법을 예시하는 흐름도이다. 도 6은 일부 실시예들에 따른 인공 에이전트 거동 분석 결과들의 예를 예시하는 다이어그램이다. 도 7은 일부 실시예들에 따른 도 3의 블록에서 수행된 2개의-샘플 가설 테스트의 민감도를 제어하기 위해 하이퍼파라미터가 어떻게 조정될 수 있는지를 예시하는 표이다. 도 8은 일부 실시예들에 따른 프로세싱 시스템의 블록도이다."}
