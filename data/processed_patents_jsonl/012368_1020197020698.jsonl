{"patent_id": "10-2019-7020698", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0097177", "출원번호": "10-2019-7020698", "발명의 명칭": "캐릭터 구성 방법 및 장치, 저장 매체 및 전자 장치", "출원인": "텐센트 테크놀로지", "발명자": "시에 웨이"}}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "게임에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하는 단계 - 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하여 플레이어 캐릭터와 대결하는(battle) 비-플레이어(non-player) 캐릭터이며, 타깃 이벤트는 제1 캐릭터의타깃 속성값을 수정하도록 명령하는 데 사용됨 -;타깃 이벤트에 대응하는 구성 정보를 획득하는 단계 - 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처리할(deals with) 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도(degree)가, 제1 캐릭터가 타깃이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위해,제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터임 -; 및제2 캐릭터 생성시에 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계를 포함하는 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계는, 타깃 이벤트를 처리하는 데 사용되는 제1 속성을 결정하고 제1 속성에 따라 구성 정보를 결정하는 단계 - 제1속성은 타깃 이벤트가 발생했을 때 타깃 이벤트에 의해 상기 제2 캐릭터의 타깃 속성값을 수정하는 정도가 타깃이벤트에 의해 상기 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작음을 나타내는 데 사용되며, 구성 정보는제1 속성의 파라미터를 구성하는 데 사용됨 - , 및/또는, 타깃 이벤트를 처리하는 데 사용되는 제2 속성을 결정하고 제2 속성에 따라 구성 정보를 결정하는 단계 - 제2속성은 타깃 이벤트가 발생하려고 할 때 타깃 이벤트의 발생을 방지하기 위해 사용되는 방어 이벤트를 실행하도록 명령하는데 사용되며, 구성 정보는 제2 속성의 파라미터를 구성하는 데 사용됨 - 를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 타깃 이벤트를 처리하는 데 사용되는 제1 속성을 결정하는 것은, 플레이어 캐릭터에 연관된 타깃 이벤트가 실행되는 것으로 검출될 때 타깃 이벤트에 의해 플레이어 캐릭터의 타깃 속성값을 수정하는 정도가, 타깃 이벤트에 의해 상기 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작은경우에, 플레이어 캐릭터가 타깃 이벤트를 처리하기 위해 사용하는 속성을 상기 제1 속성으로 사용되도록 저장하고, 플레이어 캐릭터에 의해 사용되는 속성의 파라미터를 저장하는 단계를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계 이전에, 상기 캐릭터 구성 방법은, 상기 제1 캐릭터의 레벨에 대응하는 진화 확률(evolution probability)을 획득하는 단계 - 진화 확률은 상기 제2 캐릭터가 타깃 이벤트를 처리하기 위해 사용되는 속성을 획득할 수 있는 확률임 -; 및진화 확률이 미리 설정된 확률보다 큰 경우 상기 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계를 실행하는 단계공개특허 10-2019-0097177-3-를 더 포함하는 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 제2 캐릭터 생성시에 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계는, 구성 정보를 사용하여, 상기 제2 캐릭터 생성시 동시에 생성되는 복수의 제2 캐릭터의 속성을 구성하는 단계 -복수의 제2 캐릭터는 동일 레벨에 속하며, 게임으로의 보충(supplementation)을 위해 사용됨 -를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 게임에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하는 단계는, 상기 제1 캐릭터가 플레이어 캐릭터와 대결할 때, 상기 제1 캐릭터에 대한 공격을 개시하는(launching) 플레이어 캐릭터에 의해 생성된 타깃 이벤트를 검출하는 단계; 및상기 제1 캐릭터가 게임의 맵(map)의 타깃 위치에 있을 때, 타깃 위치의 게임 환경이 상기 제1 캐릭터의 타깃속성값을 수정하는 타깃 이벤트를 검출하는 단계를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 제1 캐릭터에 대한 공격을 개시하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트를 검출하는 단계는, 플레이어 캐릭터가 상기 제1 캐릭터에 대한 공격을 개시하는 제1 이벤트를 검출하는 단계 - 제1 이벤트는 상기제1 캐릭터의 타깃 속성값을 제1 값으로 감소 시키는 데 사용되며, 제1 값은 상기 제1 캐릭터의 타깃 속성 최대값보다 작고 상기 제1 캐릭터의 타깃 속성 최소값보다 작지 않음 -, 및/또는플레이어 캐릭터가 상기 제1 캐릭터에 대한 공격을 개시하는 제2 이벤트를 검출하는 단계- 제2 이벤트는 상기제1 캐릭터의 타깃 속성값을 제2 값만큼 감소시키는 데 사용되며, 제2 값은 양수임 -를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 플레이어 캐릭터가 제1 캐릭터에 대한 공격을 개시하는 제1 이벤트를 검출하는 것은, 플레이어 캐릭터에 의해 시작되고(initiated) 상기 제1 캐릭터의 타깃 속성값을 타깃 속성 최소값으로 감소시키는 데 사용되는 제1 이벤트를 검출하는 단계를 포함하는, 캐릭터 구성 방법."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "하나 이상의 프로세서; 및 복수의 프로그램 유닛을 저장하는 메모리를 포함하고,프로그램 유닛은 프로세서에 의해 실행되며, 상기 프로그램 유닛은,게임에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하도록 구성된 검출 유닛 - 제1 캐릭터는 게임에서 생성되고인공 지능을 사용하여 플레이어 캐릭터와 대결하는 비-플레이어 캐릭터이며, 타깃 이벤트는 제1 캐릭터의 타깃공개특허 10-2019-0097177-4-속성값을 수정하도록 명령하는 데 사용됨 - ;타깃 이벤트에 대응하는 구성 정보를 획득하도록 구성된 제1 획득 유닛 - 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가, 제1 캐릭터가 타깃이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위해,제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터임 - ; 및제2 캐릭터 생성시에 구성 정보를 사용하여 제2 캐릭터를 구성하도록 구성된 구성 유닛을 포함하는 캐릭터 구성 장치."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서, 상기 제1 획득 유닛은, 타깃 이벤트를 처리하는 데 사용되는 제1 속성을 결정하고 제1 속성에 따라 구성 정보를 결정하도록 구성된 제1결정 모듈 - 제1 속성은 타깃 이벤트가 발생했을 때 타깃 이벤트에 의해 상기 제2 캐릭터의 타깃 속성값을 수정하는 정도가 타깃 이벤트에 의해 상기 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작음을 나타내는 데 사용되고, 구성 정보는 제1 속성의 파라미터를 구성하는 데 사용됨 -; 및/또는타깃 이벤트를 처리하는 데 사용되는 제2 속성을 결정하고 제2 속성에 따라 구성 정보를 결정하도록 구성된 제2결정 모듈 - 제2 속성은 타깃 이벤트가 발생하려고 할 때 타깃 이벤트의 발생을 방지하기 위해 사용되는 방어이벤트를 실행하도록 명령하는데 사용되며, 구성 정보는 제2 속성의 파라미터를 구성하는 데 사용됨 - 을 포함하는, 캐릭터 구성 장치."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 제1 결정 모듈은 추가로,플레이어 캐릭터에 연관된 타깃 이벤트가 실행되는 것으로 검출될 때 타깃 이벤트에 의해 플레이어 캐릭터의 타깃 속성값을 수정하는 정도가, 타깃 이벤트에 의해 상기 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작은경우에, 플레이어 캐릭터가 타깃 이벤트를 처리하기 위해 사용되는 속성을 상기 제1 속성으로 사용되도록 저장하고, 플레이어 캐릭터에 의해 사용되는 속성의 파라미터를 저장하도록 구성되는, 캐릭터 구성 장치."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항 내지 제11항 중 어느 한 항에 있어서, 상기 캐릭터 구성 장치는, 상기 제1 획득 유닛이 타깃 이벤트에 대응하는 구성 정보를 획득하기 전에 상기 제1 캐릭터의 레벨에 대응하는진화 확률을 획득하도록 구성된 제2 획득 유닛 - 진화 확률은 상기 제2 캐릭터가 타깃 이벤트를 처리하기 위해사용된 속성을 획득하도록 하는 확률임 - 을 더 포함하고,상기 제1 획득 유닛은 진화 확률이 미리 설정된 확률보다 큰 경우 타깃 이벤트에 대응하는 구성 정보를 획득하도록 명령받는, 캐릭터 구성 장치."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제9항에 있어서, 상기 구성 유닛은 추가로,구성 정보를 사용하여, 제2 캐릭터 생성시 동시에 생성되는 복수의 제2 캐릭터의 속성을 구성하도록 구성되고,복수의 제2 캐릭터는 동일 레벨에 속하며, 게임으로의 보충을 위해 사용되는, 캐릭터 구성 장치.공개특허 10-2019-0097177-5-청구항 14 제9항에 있어서, 상기 검출 유닛은 상기 제1 캐릭터가 플레이어 캐릭터와 대결할 때, 상기 제1 캐릭터에 대한 공격을 개시하는 플레이어 캐릭터에의해 생성된 타깃 이벤트를 검출하도록 구성된 제1 검출 모듈; 및상기 제1 캐릭터가 게임의 맵의 타깃 위치에 있을 때, 타깃 위치의 게임 환경이 제1 캐릭터의 타깃 속성값을 수정하는 타깃 이벤트를 검출하도록 구성된 제2 검출 모듈을 포함하는, 캐릭터 구성 장치."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "컴퓨터 프로그램을 저장하는 저장 매체로서,상기 컴퓨터 프로그램은 실행될 때 청구항 제1항 내지 제8항 중 어느 한 항에 따른 방법을 수행하도록구성되는, 저장 매체."}
{"patent_id": "10-2019-7020698", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "전자 장치로서, 메모리; 및프로세서를 포함하고,상기 메모리가 컴퓨터 프로그램을 저장하며, 상기 프로세서는 컴퓨터 프로그램을 사용하여 청구항 제1항 내지제8항 중 어느 한 항에 따른 방법을 수행하도록 구성되는, 전자 장치."}
{"patent_id": "10-2019-7020698", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "캐릭터 구성 방법 및 장치, 저장 매체 그리고 전자 장치. 상기 방법은, 게임에서 제1 캐릭터와 연관된 타깃 이벤 트를 검출하는 단계 - 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하여 플레이어 캐릭터와 플레이하는 비- 캐릭터이며, 타깃 이벤트는 제1 캐릭터의 타깃 속성값의 수정을 명령하는 데 사용됨 -; 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계 - 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트와 마주할 때 제2 캐릭터의 타깃 속 성값에 대한 타깃 이벤트에 의한 수정의 정보가 제1 캐릭터가 타깃 이벤트와 마주할 때 제1 캐릭터의 타깃 속성 값에 대한 수정의 정보보다 작도록, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레 이어 캐릭터임 -; 및 제2 캐릭터의 생성 중에 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계를 포함한다."}
{"patent_id": "10-2019-7020698", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 출원은 2017년 4월 20일자로 중국 특허청에 제출된 \"캐릭터 구성 방법 및 장치\"라는 명칭의 중국 특허 출원 제201710261467.5호의 우선권을 주장하며, 상기 문헌의 내용은 그 전체로서 원용에 의해 본 명세서에 포함된다. 본 출원은 인터넷 분야에 관한 것으로, 구체적으로는 캐릭터 구성 방법 및 장치, 저장 매체 그리고 전자 장치에 관한 것이다."}
{"patent_id": "10-2019-7020698", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능(Artificial Intelligence, AI)은 인간 지능을 시뮬레이션, 확대(extend) 및 확장(expand)하기 위한 이론, 방법, 기술 및 애플리케이션 시스템을 연구하고 개발하는 새로운 기술 과학이다. 관련 기술에서, 인공 지 능은 게임에서 널리 사용되며, AI 게임의 주요 목적은 AI로 캐릭터를 지능적으로 보이게 만드는 것이다. 게임에서 인공 지능 캐릭터인 게임 AI는 실제 플레이어의 다양한 행동(behavior)을 시뮬레이션하고 플레이어와 대결하는(battle) 실제 사람의 작동(operation)을 시뮬레이션할 수 있는 본 애플리케이션의 게임에서 지능을 가 지는 캐릭터를 지칭한다. 일반적으로 게임에서 플레이어는 게임 AI와의 대결을 통해 스킬 및 경험 향상을 획득 한다. 예를 들어, 배틀 게임(battle game)에서, 객체의 행동은 주로 게임 AI와 관련된 구현 방법에서 제어된다. 이를 기반으로, AI의 설계는 주로 규칙 설정과 행동 열거(behavior enumeration)의 2개의 방법을 포함한다. 규칙 설 정은 일련의 규칙을 명시적으로 설정하고 관련 객체에 대응하는 값을 할당하는 것이며, 그 다음에 전체 시스템 이 규칙에 따라 실행된다. 일단 규칙이 설정되면 지능형 객체(intelligent object)는 규칙에 의해 제한된 범위 에 따라 잘 행동된 실행(well-behaved execution)을 수행한다. 기존 규칙이 존재하기 때문에, AI 행동은 기본적 으로 예측 가능하며, 사용자는 많은 시도 후에 이러한 규칙을 우회하는(circumvent) 방법을 배울 수 있다. 행동열거는 기본적으로 대응하는 객체의 모든 가능한 행동을 생각한(conceive) 다음 수동으로 모든 응답을 결정한다. 이러한 방식으로, 모든 행동 브랜치(branch)는 트리 형태의 시스템(tree-like system)으로 구축되거 나, 상태 머신이 다양한 행동 사이에서 트리거 조건 및 스위칭 로직을 유지하는 데 사용된다. 사려 깊은 고려 (thoughtful consideration)가 필요하고 각각의 가능한 행동에 대해 대응하는 응답을 설정해야 하기 때문에, 이 방법의 단점 중 하나는 많은 양의 작업이다. 또 다른 단점은 종종 동일한 자극(stimulus)이 객체에 주어지는 것 이다. 행동은 동일하다. 행동이 여러 번 반복된 후에, 플레이어는 행동이 고정된 머신 행동(fixed machine behavior)임을 알게 된다. 결과적으로 사용자 경험이 영향을 받는다. 관련 기술의 기술적인 솔루션에서, 단일 AI 개인(single AI individual)이 실제 게임 설계에서 설계 목적으로 사용되며, 전술한 설계 방법 중 하나 또는 2가지는 AI 지능의 목적을 달성하는데 동시에 사용된다. AI 개인의 행동을 향상시키기 위해 다양한 상태 머신과 행동 트리를 구성하는 것에 의해, AI 개인이 최대한 지능적으로 보 일 수 있도록 한다. 예를 들어, 배틀 게임에서 AI 캐릭터는 일반적으로 다음과 같은 액션(action)을 가진다. 액션 1: 플레이어가 발견되지 않을 때, 특정 지역을 돌아다닌다(wander). 액션 2: 플레이어가 발견될 때, 플레이어를 추적하고(chasing) 플레이어 캐릭터를 공격한다. 액션 3: 혈액량이 특정 용량(volume)보다 작은 경우, 플레이어와 마주칠 때 도피한다(escaping). 여기서 AI의 반응(reaction)을 위해, 순찰(patrolling), 공격 및 도피(escaping)의 세 가지 상태가 추상화되며, 각각의 상태 인터페이스는 진입(entry) 상태, 실행(execution) 상태 액션 및 종료 상태(exit state)의 세 가지 로직을 포함한다. 특정 상태도가 도 1에 도시되며, 그 다음에 AI가 환경의 트리거에 따라 다 양한 상태 사이를 스위칭한다. 예를 들어, 순찰 중인 AI 개인이 플레이어 캐릭터와 만나면, AI 개인은 자신에 대한 위협이 플레이어에 대한 위협보다 약한 지의 여부를 판정하고, 그렇다면(yes) AI 개인은 도피하고 그렇지 않으면 AI 개인이 플레이어를 공격한다. AI 개인이 도피 상태에 있을 때, AI 개인은 또한 안전 상태(safe state)가 복원되었는 지의 여부를 실시간으로 판정하고, 그렇다면, AI 개인은 순찰(patrol) 상태에 진입하고, 그렇지 않으면 도피를 계속한다. 공격 상태에 있는 AI 개인은 또한 실시간으로 자신에 대한 위협이 적에 대한 위협보다 약한 지의 여부를 판정하며, 그렇다면 AI 개인은 도피하고 그렇지 않으면 플레이어 캐릭터에 대한 공 격을 개시하는(launch) 것을 계속한다. 물론, 실제 개발에서는 상태 유형이 추가되고 상태 머신이 더 복잡해질 수 있으며, 그리고 대응하는 AI가 보다 지능적이며, 더 많은 유형의 시나리오 상황을 처리할 수 있다. 일반적으로, 단일 개인 AI의 설계된 데이터 구조가 도 2에 도시된다. 데이터 구조는 AI의 속성(attribute) 특징 (characteristic)(플레이어의 지리적 위치 등)을 상세하게 기술하고, 또한 일부 확률 이벤트의 값 범위 등을 기 록할 수 있다. 속성 특징은 주로 지도 위치, 화면 위치, 애니메이션 정보, 군대 계급(military rank) 및 기타 정보를 포함한다. 관련 기술적 솔루션은 다음과 같은 단점을 가진다. 한편, 루틴(routine)은 기본적으로 고정되어 있으며, 동일한 유형의 AI간에 차이가 없고, 동일한 작동 메커니즘(operating mechanism)이 사용되며, 이에 따라 플레이어는 몇 번의 시도 후에 로봇의 작동 방식(operating mechanism)을 이해할 수 있으며, 크랙킹(cracking) 및 대처 (coping)를 위한 대응하는 방식을 사용할 수 있다. 둘째, 완벽한 AI 응답 메커니즘을 만들기 위해, 모든 가능한 행동을 소모하는 작업 부하가 과도하게 커서, 일반적으로 작은 게임에는 적합하지 않다. 현재, 인공 지능 캐릭터의 작동 메커니즘을 알 수 있는 관련 기술의 기술적인 문제를 해결하기 위한 효과적인 솔루션이 제시되어 있지 않다. 본 출원의 실시 예는 적어도 인공 지능 캐릭터의 작동 메커니즘을 알 수 있는 관련 기술의 기술적 문제점을 해 결하기 위한 캐릭터 구성 방법 및 장치, 저장 매체 그리고 전자 장치를 제공한다. 본 출원의 실시 예들의 하나의 측면에 따르면 캐릭터 구성 방법이 제공된다. 상기 캐릭터 구성 방법은, 게임에 서 제1 캐릭터와 연관된 타깃 이벤트를 검출하는 단계 - 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하여 플레이어 캐릭터와 대결하는(battle) 비-플레이어(non-player) 캐릭터이며, 타깃 이벤트는 제1 캐릭터의 타깃 속성값을 수정하도록 명령하는 데 사용됨 -; 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계 - 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처리할(deals with) 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도(degree)가, 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값 을 수정하는 정도보다 작아지게 하기 위해, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터임 -; 및 제2 캐릭터 생성시에 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계를 포함한 다. 본 출원의 실시 예들의 다른 측면에 따르면 캐릭터 구성 장치가 제공된다. 상기 캐릭터 구성 장치는, 하나 이상 의 프로세서; 및 복수의 프로그램 유닛을 저장하는 메모리를 포함하고, 프로그램 유닛은 프로세서에 의해 실행 되며, 상기 프로그램 유닛은, 게임에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하도록 구성된 검출 유닛 - 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하여 플레이어 캐릭터와 대결하는 비-플레이어 캐릭터이며, 타깃 이벤트는 제1 캐릭터의 타깃 속성값을 수정하도록 명령하는 데 사용됨 - ; 타깃 이벤트에 대응하는 구성 정보를 획득하도록 구성된 제1 획득 유닛 - 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가, 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위해, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터임 - ; 및 제2 캐릭터 생성시에 구성 정보를 사용하여 제2 캐릭터 를 구성하도록 구성된 구성 유닛을 포함한다. 본 출원의 실시 예에서, 게임의 제1 캐릭터에 대해 시작된(initiated) 타깃 이벤트가 검출될 때, 타깃 이벤트에 대응하는 구성 정보가 획득되고, 생성된 제2 캐릭터가 구성 정보를 사용하여 구성됨으로써, 구성된 제2 캐릭터 가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 감소된다. 이러 한 방식으로, 비-플레이어 캐릭터의 진화와 함께, 매번 태어난 신규 캐릭터는 동일한 초기 외관(appearance)을 가지지만, 신규 캐릭터는 새로운 스킬 속성을 갖는다. 게임 내 다수의 비-플레이어 캐릭터의 경우, 상이한 출생 시간(birth time)으로 인해, 소유한 스킬 속성이 완전히 동일하지 않고 동일한 이벤트를 처리하는 데 사용되는 스킬 속성도 상이함으로써, 게임 캐릭터는 복수의 시도를 통해, 비-플레이어 캐릭터가 고정 이벤트를 처리할 때 비-플레이어 캐릭터에 의해 사용되는 스킬 속성을 결정할 수 없다. 이러한 방식으로, 인공 지능 캐릭터의 작동 메커니즘을 알 수 있는 관련 기술의 기술적 문제가 해소될 수 있으며, 이에 따라 인공 지능 캐릭터의 작동 메커 니즘이 알려지는 것을 방지한다."}
{"patent_id": "10-2019-7020698", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "당업자가 본 출원의 애플리케이션의 솔루션을 더 잘 이해할 수 있도록 하기 위해, 본 출원의 실시 예에서 첨부 된 도면을 참조하여 본 애플리케이션의 실시 예에서 기술적 솔루션을 명확하고 완전하게 설명한다. 명백하게, 설명된 실시 예들은 본 출원의 모든 실시 예가 아닌 일부에 불과하다. 창의적인 노력 없이 본 출원의 실시 예에 기초하여 당업자에 의해 획득된 다른 모든 실시 예는 본 출원의 보호 범위 내에 있다.본 출원의 명세서, 청구 범위 및 첨부 도면에서, \"제1\", \"제2\" 등의 용어는 특정 순서를 나타내는 것이 아니라 유사한 객체를 구별하기 위한 것이다. 이러한 방식으로 사용된 데이터는 적절한 경우에 상호 교환될 수 있으므 로, 여기에 기술된 본 출원의 실시 예는 본 명세서에 예시되거나 기재된 순서 이외의 순서로 구현될 수 있음을 이해해야 한다. 또한, 용어 \"포함하는(include)\", \"포함하는(comprise)\" 및 이들의 임의의 변형은 비배타적인 포함을 커버하도록 의도된다. 예를 들어, 단계 또는 단위의 목록을 포함하는 프로세스, 방법, 시스템, 제품 또 는 디바이스는 명확하게 나열된 단계 또는 유닛으로 반드시 제한되지는 않지만, 그러한 프로세스, 방법, 제품 또는 디바이스에 대해 명시적으로 나열되지 않거나 고유한 단계 또는 유닛을 더 포함할 수 있다. 본 출원의 본 실시 예에 따르면, 캐릭터 구성 방법의 방법 실시 예가 제공된다. 선택적으로, 본 실시 예에서, 캐릭터 구성 방법은 도 3의 서버 및 단말로 구성된 하드웨어 환경에 적 용될 수 있다. 도 3에 도시된 바와 같이, 서버는 네트워크를 통해 단말에 연결된다. 네트워크는 광역 네트워크, 메트로폴리탄 네트워크 또는 근거리 통신망(local area network)을 포함하지만 이에 한정되는 것은 아니며, 단말은 PC, 이동 전화, 테블릿 컴퓨터 등에 한정되지 않는다. 본 출원의 본 실시 예에서의 방법은 서버에 의해 수행되거나, 단말에 의해 수행되거나, 서버 및 단말에 의해 함께 수행될 수 있다. 단말이 본 출원의 본 실시 예의 방법을 수행할 때, 상기 방법은 다르게는 단말에 설치된 클라 이언트에 의해 수행될 수 있다. 도 4는 본 출원의 실시 예에 따른 선택적 캐릭터 구성 방법의 흐름도이다. 도 4에 도시된 바와 같이, 상기 방법 은 다음 단계들을 포함할 수 있다. 단계 S402: 게임의 제1 캐릭터와 연관된 타깃 이벤트를 검출한다. 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하여 플레이어 캐릭터와 대결하는(battle) 비(non)-플레이어 캐릭터이고, 타깃 이벤트는 제1 캐릭터의 타깃 속성값을 수정(modify)하도록 명령하는 데 사용된다. 단계 S404: 타깃 이벤트에 대응하는 구성 정보를 획득한다. 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처 리할(deals with) 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도(degree)가, 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위 해, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터이다. 단계 S406: 제2 캐릭터 생성시 구성 정보를 사용하여 제2 캐릭터를 구성한다. 전술한 단계 S402 내지 단계 S406을 통해, 게임에서 제1 캐릭터에 대해 시작된 타깃 이벤트가 검출될 때, 타깃 이벤트에 대응하는 구성 정보가 획득되고, 생성된 제2 캐릭터는 구성 정보를 사용하여 구성됨으로써, 구성된 제 2 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 감소된 다. 이러한 방식으로, 비-플레이어 캐릭터의 진화와 함께, 매번 태어난 신규 캐릭터는 동일한 초기 외관을 가지 지만, 신규 캐릭터는 새로운 스킬(skill) 속성을 갖는다. 게임 내 다수의 비-플레이어 캐릭터의 경우, 상이한 출생 시간으로 인해, 소유한 스킬 속성이 완전히 동일하지 않고 동일한 이벤트를 처리하는 데 사용되는 스킬 속 성도 상이함으로써, 게임 캐릭터는 복수의 시도를 통해, 비-플레이어 캐릭터가 고정 이벤트를 처리할 때 비-플 레이어 캐릭터에 의해 사용되는 스킬 속성을 결정할 수 없다. 이러한 방식으로, 인공 지능 캐릭터의 작동 메커 니즘을 알 수 있는 관련 기술의 기술적 문제점이 해결될 수 있으며, 이에 따라 인공 지능 캐릭터의 작동 메커니 즘이 알려지는 것을 방지할 수 있다. 전술한 게임은 임의 유형의 게임일 수 있다. 제1 캐릭터는 타깃 이벤트에 의해 공격받은 비-플레이어 캐릭터이 다. 제2 캐릭터는 다음 세대(또는 다음 레벨)에서 태어나는 비-플레이어 캐릭터이다. 타깃 이벤트는 제1 캐릭터 의 특정 속성(즉, 타깃 속성)에 대한 손상(damage)을 야기시킬 수 있는 이벤트이다. 타깃 속성은 생명(life), 스킬(skill), 무기(weapon), 방어(defense) 등을 포함하지만 이에 제한되지는 않다. 현재의 실시간 및 온라인 멀티 플레이 배틀 게임에서 게임 경쟁 및 재미를 높이기 위해 AI 개체를 사용해야 한 다. AI는 더 많은 실제 플레이어를 유치하기 위해, 초기 기간(period) 동안 다양한 작동 기술에 익숙해지도록 플레이어를 훈련시키거나, 온라인 플레이어의 수가 부족한 경우 플레이어와 상호 작용하는 데 사용될 수 있다. 그러나 현재의 AI는 여러 가지 이유로 인해 상대적으로 열악한 상호 작용 효과를 일으킨다. 본 출원은 생물학적 진화의 기본 원리에 기반한 게임 AI(즉, 인공 지능을 사용하는 비-플레이어 캐릭터) 진화 방법을 구현한다. 생물학적 진화의 원리를 시뮬레이션하는 것에 의해 게임 AI 시스템에 자기 진화 능력이 부여 됨으로써, 게임 AI가 시간이 지남에 따라 증가하는 지능과 다양한 스킬 속성을 획득한다. 상기 방법의 설계 아이디어는 단일 AI 개인을 진화 및 업그레이드용 개체로 사용하는 대신 전체 게임 AI 그룹을 진화 개체로 사용하 는 것이다. 특정 구현 방법은, 게임 AI 개인이 실제 플레이어에 의해 죽을 때 집단(the population)의 진화 로 직이 트리거되고, 진화 로직이 죽은 AI가 현재 속한 세대의 값(value)에 따라(기본적으로(by default) 제1 세대 또는 제1 레벨부터 시작), 세대가 특정한 속성 특성(attribute property)(예: 스킬)을 가지도록 진화할 수 있는 확률을 획득하고, 이번(this time)의 진화가 성공할 수 있는 지의 여부를 판정하는 것이다. 진화가 성공하면 이 시점 이후에 태어난 AI는 기본적으로 다음 세대 또는 다음 레벨이 되고, 다음 세대 AI는 이 속성 특성을 본질적 으로 소유한다. 시간이 지남에 따라 게임 AI는 점점 더 완벽한 지능과 스킬 속성을 갖게 된다. 더욱이, 플레이어에 의해 죽은 AI의 수가 증가함에 따라, AI에 의해 이미 소유된 스킬의 속성 증가가 트리거된 다. 획득은 또한 확률에 기반한다. 일단 속성 증가가 성공적으로 획득되면, 이후에 태어난 다음 세대 AI는 기본 적으로 속성값을 갖게 된다. 이러한 성장 시스템에서 AI의 성장 곡선이 상이하며, 이에 따라 라운드(round)의 배틀 경험은 완전히 동일하지 않다. 본 출원의 본 실시 예는 도 4를 참조하여 이하 더 상세하게 설명된다. 단계 S402에서 제공된 기술적 솔루션에서, 게임의 제1 캐릭터와 연관된 타깃 이벤트를 검출하는 단계는, 제1 캐 릭터가 플레이어 캐릭터와 대결할 때 제1 캐릭터에 대한 공격을 개시하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트를 검출하는 단계; 및 제1 캐릭터가 게임의 맵(map)의 타깃 위치에 있을 때 타깃 위치의 게임 환경이 제1 캐릭터의 타깃 속성값을 수정하는 타깃 이벤트를 검출하는 단계를 포함한다. 전술한 타깃 속성은 생명, 스킬, 무기, 방어 등을 나타내는 데 사용되는 속성일 수 있다. 예를 들어, 생명 속성 의 경우, 타깃 이벤트는 생명 속성의 속성값을 감소시키기 위한 이벤트이다. 스킬 속성의 경우, 타깃 이벤트는 제1 캐릭터의 스킬 속성을 캡처(capture)하거나 플레이어 캐릭터에 대한 스킬 속성의 손상을 감소시키기 위한 이벤트이다. 또 다른 예로, 무기 속성의 경우, 타깃 이벤트는 제1 캐릭터의 무기를 캡처하고 무기로 인한 손상 을 감소시키거나 무기를 파괴하는 이벤트이다. 나머지 속성의 경우, 대응하는 속성의 속성값을 변경시킬 수 있 는 모든 이벤트가 타깃 이벤트이며, 타깃 이벤트는 본 출원에서 하나씩 나열되지 않다. 무기 속성의 경우, 제1 캐릭터가 플레이어 캐릭터와 대결할 때, 제1 캐릭터에 대해 공격을 개시하여 제1 캐릭터 의 무기를 캡처하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트가 검출된다. 제1 캐릭터의 무기가 성공적으로 캡처되면, 새로 태어난 캐릭터에 대한 진화가 트리거되므로, 새로 태어난 캐릭터는 플레이어가 새로 태어난 캐 릭터의 무기를 캡처할 때 시간 내에 도피하거나 다시 공격할 수(strike back) 있으며, 구체적으로 이것은 새로 태어난 캐릭터의 도피 스킬 속성 또는 방어 스킬 속성을 구성하는 것에 의해 구현된다. 전술한 제1 캐릭터에 대한 공격을 개시하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트를 검출하는 것은 주로, 플레이어 캐릭터가 제1 캐릭터에 대한 공격을 개시하는 제1 이벤트를 검출하는 것 - 제1 이벤트는 제1 캐릭터의 타깃 속성값을 제1 값으로 감소시키는 데 사용되며, 제1 값은 제1 캐릭터의 타깃 속성 최대값(즉, 속성에 대해 설정할 수 있는 최대값)보다 작고 제1 캐릭터의 타깃 속성 최소값(즉, 속성에 대해 설정할 수 있는 최소값)보다 작지 않음 -; 및 플레이어 캐릭터가 제1 캐릭터에 대한 공격을 개시하는 제2 이벤트를 검출하는 것 - 제2 이벤 트는 제1 캐릭터의 타깃 속성값을 제2 값만큼 감소시키는 데 사용되며, 제2 값은 양수임 - 의 두 가지 유형을 포함한다. 제1 값은 비-플레이어 캐릭터가 진화하도록 트리거되는 트리거 포인트이고, 타깃 속성의 속성값이 특정 범위(즉, 속성 최대값과 속성 최소값 사이)에 있으며, 제1 값은 범위 내의 값이다. 예를 들어, 플레이어 캐릭 터가 제1 캐릭터에 대한 공격을 개시하는 제1 이벤트를 검출하는 것은, 플레이어 캐릭터에 의해 시작(initiat e)되고 제1 캐릭터의 타깃 속성값을 타깃 속성 최소값으로 감소시키는 데 사용되는 제1 이벤트를 검출하는 것일 수 있으며, 즉, 속성의 속성값이 최소값으로 감소될 때 진화 이벤트가 트리거되도록 지정된다. 예를 들어, 타깃 속성이 생명 속성이면, 제1 값은 생명 속성값의 50%일 수 있다. 제1 캐릭터가 제1 이벤트에 의 해 공격을 받고 헬스(health) 포인트가 50% 이하로 감소할 때, 비-플레이어 캐릭터가 트리거되어 제1 이벤트와 의 대전(fighting)를 위한 스킬 속성을 획득하도록 진화함으로써, 제1 캐릭터가 다음에 제1 이벤트를 만났을 때, 제1 이벤트에 의한 제1 캐릭터에 대한 손상이 방지되거나 감소된다. 제2 값은 특정 이벤트가 제1 캐릭터에 대한 고정된 손상을 야기시킬(즉, 성값이 제2 값만큼 감소된 손상을 야기 함) 때 새로 태어난 비-플레이어 캐릭터가 트리거되어 이벤트에 의해 야기되는 손상을 피하거나 감소시키도록 이벤트에 대해 진화하는 것을 나타낸다. 타깃 속성이 생명 속성인 예제를 사용하면, 제2 값은 생명 속성값의 30%가 될 수 있다. 제1 캐릭터가 제2 이벤 트에 의해 공격받고 헬스 포인트가 30% 이상 감소할 때, 비-플레이어 캐릭터가 트리거되어 제2 이벤트와의 대전을 위한 스킬 속성을 획득하도록 진화함으로써, 제1 캐릭터가 다음에 제2 이벤트를 만났을 때 제1 이벤트에 의 한 제1 캐릭터에 대한 손상이 회피되거나 감소된다. 다른 속성의 경우, 전술한 방법과 유사한 방법이 사용되며, 본 출원에서 자세히 설명하지 않다. 단계 S404에서 제공되는 기술적 솔루션에서, 타깃 이벤트에 대응하는 구성 정보가 획득되기 전에, 비-플레이어 캐릭터가 공격 이벤트와 마주칠 때마다 진화하면, 비-플레이어 캐릭터는 과도하게 강해질 것이며, 게임 플레이 어 캐릭터가 비-플레이어 캐릭터와 대결하는 경우, 게임 난이도(game difficulty)가 지나치게 높아진다. 결과적 으로, 게임 플레이어의 경험이 영향을 받고, 게임 플레이에 대한 관심이 감소된다. 그러므로 진화는 다음 무작 위 방식으로 수행될 수 있다. 타깃 이벤트에 대응하는 구성 정보가 획득되기 전에 제1 캐릭터의 레벨에 대응하는 진화 확률이 획득된다. 진화 확률은 제2 캐릭터가 타깃 이벤트를 처리하기 위해 사용되는 속성을 획득할 수 있는 확률이다. 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계는 진화 확률이 미리 설정된 확률보다 큰 경우에 실행된다. 선택적으로, 0에서 1 사이의 난수(random number)를 획득하기 위한 함수가 게임에서 구성될 수 있다. 제1 캐릭 터의 레벨에 대응하는 진화 확률이 획득될 때마다, 함수가 1회 실행될 수 있다. 제1 캐릭터의 레벨 파라미터는 함수의 입력 파라미터로서 사용되며, 획득된 난수 값은 제1 캐릭터의 레벨에 대응하는 진화 확률로서 사용된다. 그 다음에, 진화 확률은 임계 값(즉, 0.5, 0.6 또는 0.9와 같은 미리 설정된 확률)과 비교되고, 진화 확률이 임 계 값보다 크면, 다음 세대에서 태어나는 비-플레이어 캐릭터가 진화하며, 그렇지 않으면 다음 세대에서 태어나 는 비-플레이어 캐릭터는 진화하지 않는다. 또한, 제1 캐릭터의 레벨에 대응하는 진화 확률은 전술한 방식 이외에 실제 요건에 따라 다른 방식으로 획득될 수 있다. 타깃 이벤트에 대응하는 구성 정보는, 타깃 이벤트를 처리하는 데 사용되는 제1 속성을 결정하고 제1 속성에 따 라 구성 정보를 결정하는 단계 - 제1 속성은 타깃 이벤트가 발생할 때, 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작음을 나타내는 데 사용되며, 구성 정보는 제1 속성의 파라미터를 구성하는 데 사용됨 -; 및 타깃 이벤트를 처리하는 데 사용되 는 제2 속성을 결정하고 제2 속성에 따라 구성 정보를 결정하는 단계 - 제2 속성은 타깃 이벤트가 발생하려고 할 때 타깃 이벤트가 발생하는 것을 방지하기 위해 사용되는 방어 이벤트를 실행하도록 명령하는 데 사용되고, 구성 정보는 제2 속성의 파라미터를 구성하는데 사용됨 -를 포함하는 방식으로 획득될 수 있다. 실제 애플리케이션에서, 전술한 제1 속성 또는 제2 속성의 구성 여부는 실제 요건에 따라 결정될 수 있으며, 특 정 타깃 이벤트에 따라 결정될 수 있다. 예를 들어, 플레이어에 의해 시작된 공격 이벤트(비-플레이어 캐릭터의 혈액 손실(blood loss)을 유발할 수 있음)의 경우, 공격당했을 때 혈액 손실을 방지하거나 혈액 손실을 감소시 키기 위해, 사용자의 방어 속성(즉, 제1 속성)이 본 경우에 구성될 수 있다. 다른 예로서, 사용자에 의해 시작 된 무기를 캡처하는 타깃 이벤트의 경우, 비-플레이어 캐릭터의 도피 속성(즉, 제2 속성)이 구성될 수 있으며; 플레이어 캐릭터의 일부 행동을 통해, 플레이어 캐릭터가 무기를 캡쳐하는 타깃 이벤트를 시작하려 하는 것으로 결정되는 경우, 비-플레이어 캐릭터의 도피 속성이 트리거되어 플레이어 캐릭터로부터 도피하게 된다(즉, 방어 이벤트). 다른 예로서, 비-플레이어 캐릭터가 장애물(obstacle)(즉, 게임 환경이 제1 캐릭터의 타깃 속성값을 수정하는 타깃 이벤트)을 터치하는 경우, 플레이어의 일부 속성(헬스 포인트 등)이 영향을 받을 수 있다. 이 경 우, 제2 속성의 진화가 트리거될 수 있다. 새로 태어난 비-플레이어 캐릭터가 장애물을 터치하기 전에, 장애물 의 위치가 능동적으로 검출되고, 장애물을 실시간으로 피하여(dodge)(즉, 타깃 이벤트가 발생하지 않도록 방어 이벤트를 실행) 장애물로부터의 손상을 회피한다(abvoid). 선택적으로, 전술한 제1 속성 및 제2 속성을 구성하는 것은 대응하는 방어 스킬을 강하게 하여 예를 들어, 도피 속도를 증가시키기 위해, 제1 속성 또는 제2 속성을 새롭게 추가하거나, 제1 속성 또는 제2 속성의 속성 파라미 터를 재구성하는 것을 지칭할 수 있다. 전술한 실시 예에서, 타깃 이벤트를 처리하는 데 사용된 제1 속성 또는 제2 속성을 결정함에 있어서, 다른 플레 이어가 동일한 이벤트를 만났을 때 다른 플레이어의 처리 방식을 참조하여 어떤 속성이 제1 속성 또는 제2 속성 인지를 결정한다. 구체적인 방법은, 플레이어 캐릭터에 연관된 타깃 이벤트가 실행되는 것으로 검출될 때 타깃 이벤트에 의해 플레이어 캐릭터의 타깃 속성값을 수정하는 정도가 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성 값을 수정하는 정도보다 낮은 경우에, 타깃 이벤트를 처리하기 위한 플레이어 캐릭터에 의해 사용되는 속성을 제1 속성으로서 저장하고, 플레이어 캐릭터에 의해 사용된 속성의 파라미터를 저장하는 것이다. 선택적으로, 타깃 이벤트를 처리하는 데 사용된 제1 속성 또는 제2 속성을 결정함에 있어서, 타깃 이벤트를 처 리하는 데 사용된 스킬 속성은 게임 개발자에 의해 정의될 수 있다. 단계 S406에서 제공되는 기술적 솔루션에서, 제2 캐릭터 생성시 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계는, 구성 정보를 사용하여, 제2 캐릭터 생성시 동시에 생성된 복수의 제2 캐릭터의 속성을 구성하는 단계 - 복수의 제2 캐릭터는 동일한 레벨에 속하며, 게임으로의 보충(supplementation)을 위해 사용됨 - 를 포함한다. 관련 기술의 진화 아이디어는 AI 개인의 설계를 기반으로 하며, 출생시 AI 개인의 스킬 속성은 완전히 동일하다. AI 개인은 트레이닝 프로세스에서 향상된다. 트레이닝에서의 AI 개인의 향상에 따라, 그 외형도 마찬 가지로 변화한다. 이 경우, 사용자는 외관 등에 따라 개인 AI의 대전 능력(fighting capacity) 등의 정보를 결 정하여 적절한 처리 방식을 사용할 수 있다. 본 출원에서, 새로 태어난 AI 개인의 각각의 세대가 죽은 AI(또는 공격된 AI)의 경험을 참조하여 대응하는 스킬 속성을 획득하도록 진화한다. 이런 방식으로, 상이한 세대의 AI의 스킬 속성이 상이하며, AI 집단을 진화시키기 위한 설계가 구현된다. 따라서 게임 플레이어는 AI와의 대결시 AI의 스킬 레벨을 결정할 수 없다. 본 출원의 기술적 솔루션에 대한 이해를 돕기 위해, 탐욕스런 스네이크(Gluttonous Snake)의 배틀 게임을 예로 들어 자세히 설명한다. 탐욕스런 스네이크의 경우, 일반적인 설계는 게임 AI의 지능을 플레이어의 길이 또는 값 성장(value growth)으로 변경하거나 게임 AI의 길이 또는 값 증가(value increase)로 변경하는 것이다. 이런 방 식으로 긴 스네이크(Snake)는 더 높은 지능을 가지고 신생(newborn) 스네이크는 약한 지능을 가지며, 전체 AI 스네이크 그룹은 진화 확률을 갖지 않으며, 전체적인 난이도는 시간이 지남에 따라 증가하지 않다. 전술한 문제 점을 극복하기 위해, 본 출원의 기술적 솔루션이 향상을 위해 사용될 수 있다. 본 솔루션에서, 도 5에 도시된 바와 같이, 지능형 AI 스네이크는 헤드(head)와 바디(body)로 구성되며, 헤드 영 역은 다양한 스킨 및 스타일을 지원할 수 있는 독립적인 원(circle)이며, 바디의 충돌(crash) 검출 영역은 복수 의 원 및 복수의 직사각형을 잇는(splicing) 것에 의해 형성된다. 이 조합 방식의 장점은 최소한의 형상으로 (with the least amount of geometry) 바디의 형상(shape)과 위치를 정확하게 설명할 수 있다는 것이다. 헤드 핫 존(hot zone)의 개념이 각각의 지능형 AI 스네이크에 추가되고, 플레이어나 다른 스네이크에 대한 공격 은 AI 스네이크를 제어하여 다른 스네이크의 헤드 핫 존을 적극적으로 공격하는 것에 의해 실현된다. 헤드 핫 존의 개략도가 도 6에 도시된다. 헤드 핫 존은 스네이크의 헤드가 게임 탐욕스런 스테이크에 위치된 특정 범위를 지칭한다. 지능형 AI 스네이크 가 적극적으로 이 영역을 통해 가속하여(accelerate) 다른 스네이크의 헤드가 지능형 AI 스네이크의 바디와 충 돌하게 하여 다른 스네이크를 죽인다. 게임의 모든 스네이크는 기본적으로 이동 속도(travel speed)를 가지며, 스네이크의 헤드가 다른 플레이어의 바 디와 충돌하면 스네이크가 죽는다. 따라서, 헤드 핫 존은 헤드의 전방부(front part)에 있다. 스네이크가 특정 속도로 다른 플레이어의 헤드 핫 존을 신속하게 통과하면 상대방이 제시간에 피하지 않으면 상대방이 죽는다. 지능형 AI 스네이크는 자체 특성(주로 공격 검출 빈도(attack detection frequency), 시야(field of view) 등 으로 제어됨)에 따라 다른 스네이크 헤드의 헤드 핫 존을 적극적으로 공격한다. 또한, 지능형 AI 스네이크의 지 능(intelligence)은 다음을 포함한다. 스네이크의 레벨과 관련되며, 구체적으로는 정상 상태에서 스네이크가 움직이는 속도를 지칭하는 이동 속도; 스네이크 레벨과 관련되며, 구체적으로 스네이크가 정상 상태에서 이동 방향을 조정하는(adjust) 시간 간격 을 지칭하는 조향 빈도(frequency of steering); 스네이크의 레벨과 관련되며, 구체적으로 스네이크가 정상 상태에서 방향을 조정하는 최대 각도를 지칭하는, 조향 최대 각도; 스네이크의 레벨과 관련되며, 구체적으로는 스네이크가 가속 상태에서 움직이는 속도를 지칭하는 가속된 이 동 속도; 스네이크 레벨과 관련되며, 구체적으로 스네이크가 가속 상태에서 방향을 조정하는 최대 각도를 지칭하는 가속된 조향의 최대 각도; 스네이크의 레벨과 관련되며, 구체적으로 스네이크가 검출할 수 있는 범위(검출 범위 내의 먹이(food) 및 다른 스네이크 포함)의 크기를 지칭하는 시야; 스네이크의 레벨과 관련되며, 구체적으로 다른 스네이크의 사체(dead body)에 대한 경쟁(contention)을 가 속화할 확률을 지칭하는, 고에너지 먹이에 대한 경쟁을 적극적으로 가속시킬 확률; 및 스네이크의 레벨과 관련되며, 구체적으로는 일반 먹이를 검출하는 시간 간격을 지칭하는, 일반 먹이를 검색 하는 빈도. 구현 중에서, AI 스네이크가 특정 확률 범위에서 특정 형질(trait)을 획득하면, 그 다음에 그의 자손이 자연적 으로 이 형질을 가질 것이고, 이것은 더는 확률 이벤트가 아니다. 상이한 세대의 AI는 플레이어에게 알려지지 않으며, AI 지능의 차이는 대치(confrontation) 프로세스에서만 느낄 수 있다. 따라서 본 출원의 기술적 솔루션 설계는 플레이어와 게임 AI 간의 배틀을 요구하는 다양한 게임 시나리오에 적용될 수 있다. 본 출원의 기술적 솔루션이 구현되는 경우, 개발 및 검증 환경은 윈도우(예: Win 7 및 다른 버전) 또는 리눅스 (예: Mac OSX, Ubuntu, Debian 등)와 같은 시스템에서 사용되는 개발 도구 소프트웨어(예: WebStorm)일 수 있 다. 사용된 개발 언어는 자바스크립트, C, 자바 등일 수 있다. 사용된 게임 엔진은 cocos2d-js 등일 수 있다. 도 7에 도시된 바와 같이, 클라이언트 측의 게임 AI 개인이 실제 플레이어에 의해 죽을 때(즉, AI가 죽은 이벤 트), 집단의 진화 로직이 트리거되고, 진화 로직은 죽은 AI의 현재 레벨에 기반한다. AI 관리 모듈은 레벨이 특 정 속성(스킬)을 획득하도록 진화할 수 있는 확률을 획득하고, 진화 시스템은 진화가 성공할 수 있는지의 여부 를 판정한다. 진화가 성공하면, 이 시점 이후에 태어난 AI 개인은 기본적으로 한 레벨씩 업그레이드되며, 이 레 벨의 AI는 이 속성 또는 스킬(제품 요건에 따라 구성될 수 있는, 빠른 피함(fast dodge), 시간 제한된 무적 (invincibility), 시간 제한된 잠행(stealth) 등)을 가지고 태어난다. 구체적으로, 속성 관리 모듈은 관련 속성 을 관리한다. 시간이 지남에 따라 게임 AI 개인은 점점 더 완벽한 지능과 스킬 속성을 갖게 된다. 각각의 세대 의 AI 개인 속성은 AI 구성 정보(즉, AI 구성 데이터(AI Config Data))에 저장된다. 스네이크의 현재 레벨, 스 네이크의 초기 이동 속도 및 스네이크의 초기 선회 각속도(turning angular velocity)와 같은, AI의 일부 속성 이 도 8에 도시된다. 진화가 완료된 후에 새로 태어난 스네이크는 대응하는 스킬을 갖게 된다. AI 구성 정보(즉, 진화 구성)의 각각의 속성은 세대별로 AI 스네이크 생성의 업데이트와 함께 변경되며, 출생시 지능형 AI 스네이크의 속성이 정의된다. 이러한 속성은 출생시 일부 값만 정의한다. 끊임없이 먹이를 먹고 다른 스네이크를 공격하는 프로세스에서, 지능형 AI 스네이크는 계속해서 성장하고 길어지고 빨라지며, 따라서 더 강 력한 공격성을 가진다. 예를 들어, 스네이크가 이동하는 프로세스에서 특정 방향으로 움직이거나(steering), 회피하거나, 먹이를 찾는지의 여부가 판정된다. 여기서 Math.random() 함수를 사용하여 0에서 1 사이의 값을 갖 는 임의의 십진수를 획득할 수 있다. 각각의 프레임의 시간과 대응하는 속성 구성 시간에 베이스(base)를 곱하 여 값을 획득한다. 그런 다음 math.round 함수를 사용하여 값을 반올림한다. 값이 0.5보다 작으면 값은 0으로 결정되고, 값이 0.5보다 크면 값은 1로 결정된다. 여기에서 값이 0이면 대응하는 조향, 먹이 찾기, 가속, 또는 다른 지능형 이벤트가 트리거되고, 그렇지 않으면 대응하는 이벤트가 트리거되지 않는다. 선택적으로, 지능형 AI 스네이크는 지능형 AI 스네이크의 속성에 따라 스네이크의 바디를 전방에서 피할지의 여 부를 판정할 수 있다. 지능형 AI 스네이크가 피할 필요가 있으면 지능형 AI 스네이크는 먼저 감속한 다음 이동 방향을 전환한다. 본 출원의 구현에서 지능형 AI 스네이크는 지능적으로, 실제 플레이어의 동작과 유사하게 정 상 상태에서 먹이를 먹기 위해, 게임에서 먹이를 잡는 것을 가속화하고 충돌을 피하며, 돌아다닌다. 본 출원의 기술적 솔루션을 사용하는 것에 의해, 유전자의 진화 이론에 따라 AI 개인이 죽거나 부상당하여 집단 의 진화 확률 이벤트를 트리거하며, 집단 진화의 확률은 죽은 AI의 속성에 따라 결정된다. 진화가 성공하면, 집 단은 기본적으로 이 속성 또는 기존 속성의 증가된 값을 가진다. 집단의 진화 이후에 태어난 자손은 그러한 속 성과 대응하는 값을 가질 것이다. 플레이어는 천천히 움직이며 약한 스킬 속성을 가지는 플레이어를 계속 죽일 것이며, 이는 자연의 적자 생존 제 거 메커니즘(elimination mechanism of the survival of the fittest)과 유사하다. 게임 AI의 속성은 플레이어 의 기본 속성이 증가함에 따라 증가할 것이며, 이 증가는 플레이어의 성장과 함께 진행되며, 사전에 미리 설정 되기보다는 플레이어가 죽인 게임 객체의 난이도에 따라 결정됨으로써, 플레이어는 실제 플레이어와의 배틀과 유사한 배틀 재미를 획득할 수 있다. 복잡한 상태 머신을 사용할 필요가 없기 때문에 많은 수의 이벤트 로직을열거할 필요가 없으며, 개발 작업 부하가 크게 감소된다. 간단한 설명을 위해, 전술한 방법 실시 예는 일련의 액션 조합으로서 기술된다. 그러나 당업자는 일부 단계가 다른 순서로 수행될 수 있거나 본 출원에서 동시에 수행될 수 있기 때문에, 본 출원은 설명된 액션 순서에 제한 되지 않는다는 것을 알아야 한다. 또한, 당업자는 본 명세서에 설명된 모든 실시 예가 예시적인 실시 예이고, 관련된 액션 및 모듈이 본 출원에서 반드시 필요한 것은 아니라는 것을 알아야 한다. 전술한 실시 예의 설명에 기초하여, 당업자는 전술한 실시 예에서의 방법이 필수적인 범용 하드웨어 플랫폼에 추가하여 소프트웨어 의해 또는 하드웨어에 의해서만 구현될 수 있음을 명확히 이해할 수 있다. 그러나 전자는 대부분의 경우 더 나은 구현이다. 이러한 이해를 기반으로, 본 출원의 기술적 솔루션 또는 관련 기술에 기여하 는 부분은 소프트웨어 제품의 형태로 구현될 수 있다. 컴퓨터 소프트웨어 제품은 저장 매체(예: ROM/RAM, 자기 디스크 또는 광 디스크)에 저장되며, 단말 디바이스(이동 전화, 컴퓨터, 서버, 네트워크 디바이스 등일 수 있음)가 본 출원의 실시 예들에서 설명된 방법들을 수행할 수 있게 한다. 본 출원의 실시 예에 따르면, 전술한 캐릭터 구성 방법을 구현하도록 구성된 캐릭터 구성 장치가 추가로 제공된 다. 도 9는 본 출원의 일 실시 예에 따른 선택적 캐릭터 구성 장치의 개략도이다. 도 9에 도시된 바와 같이, 캐 릭터 구성 장치는 하나 이상의 프로세서 및 프로그램 유닛을 저장하는 하나 이상의 메모리를 포함할 수 있다. 프로그램 유닛은 프로세서에 의해 실행된다. 프로그램 유닛은 검출 유닛, 제1 획득 유닛 및 구성 유닛 을 포함한다. 검출 유닛은 게임에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하도록 구성되며, 제1 캐릭터는 게임에서 생 성되고 인공 지능을 사용하여 플레이어 캐릭터와 대결하는 비-플레이어 캐릭터이고, 타깃 이벤트는 제1 캐릭터 의 타깃 속성값을 수정하도록 명령하는 데 사용된다. 제1 획득 유닛은 타깃 이벤트에 대응하는 구성 정보를 획득하도록 구성되며, 구성 정보는, 구성된 제2 캐릭 터가 타깃 이벤트를 다룰 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가, 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작도록 하기 위해, 제2 캐릭터를 구성하는 데 사용되고, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터이다. 구성 유닛은 제2 캐릭터 생성시 구성 정보를 사용하여 제2 캐릭터를 구성하도록 구성된다. 본 실시 예의 검출 유닛은 본 출원의 전술한 실시 예에서 단계(S402)를 실행하도록 구성될 수 있음을 주목 해야 한다. 본 실시 예의 제1 획득 유닛은 본 출원의 전술한 실시 예에서 단계(S404)를 실행하도록 구성될 수 있다. 본 실시 예의 구성 유닛은 본 출원의 전술한 실시 예에서 단계(S406)를 실행하도록 구성될 수 있 다. 본 명세서에서 전술한 모듈들 및 대응하는 단계들에 의해 구현되는 예시들 및 애플리케이션 시나리오들은 동일 하지만 전술한 실시 예들에 개시된 내용에 제한되지는 않는다는 것을 알아야 한다. 전술한 모듈들은 장치의 일 부로서 도 3에 도시된 하드웨어 환경에서 실행될 수 있으며, 그리고 소프트웨어를 통해 구현될 수도 있고, 하드 웨어를 통해 구현될 수도 있음을 알아야 한다. 전술한 모듈들을 통해, 게임의 제1 캐릭터에 대해 시작된 타깃 이벤트가 검출될 때, 타깃 이벤트에 대응하는 구 성 정보가 획득되고, 생성된 제2 캐릭터가 구성 정보를 사용하여 구성됨으로써, 타깃 이벤트에 의해 제2 캐릭터 의 타깃 속성값을 수정하는 정도가 구성된 제2 캐릭터가 타깃 이벤트를 처리할 때 감소된다. 이러한 방식으로, 비-플레이어 캐릭터의 진화와 함께, 매번 태어난 신규 캐릭터는 동일한 초기 외관을 가지지만, 신규 캐릭터는 새로운 스킬 속성을 갖는다. 게임 내 다수의 비-플레이어 캐릭터의 경우, 상이한 출생 시간으로 인해, 소유한 스킬 속성이 완전히 동일하지 않고 동일한 이벤트를 처리하는 데 사용되는 스킬 속성도 상이함으로써, 게임 캐 릭터는 복수의 시도를 통해, 비-플레이어 캐릭터가 고정 이벤트를 처리할 때 비-플레이어 캐릭터에 의해 사용되 는 스킬 속성을 결정할 수 없다. 이러한 방식으로, 인공 지능 캐릭터의 작동 메커니즘을 알 수 있는 관련 기술 의 기술적 문제점이 해결될 수 있으며, 이에 따라 인공 지능 캐릭터의 작동 메커니즘이 알려지는 것을 방지할 수 있다. 전술한 게임은 임의의 유형의 게임일 수 있다. 제1 캐릭터는 타깃 이벤트에 의해 공격받는 비-플레이어 캐릭터 이다. 제2 캐릭터는 다음 세대(또는 다음 레벨)에서 태어난 비-플레이어 캐릭터이다. 타깃 이벤트는 제1 캐릭터 의 특정 속성(즉, 타깃 속성)에 대한 손상을 야기시킬 수 있는 이벤트이다. 타깃 속성은 생명, 스킬,무기, 방어 등을 포함하지만 이에 제한되지는 않다.현재의 실시간 및 온라인 멀티 플레이 배틀 게임에서 게임 경쟁 및 재미를 높이기 위해 AI 개체를 사용해야 한 다. AI는 더 많은 실제 플레이어를 유치하기 위해, 초기 기간 동안 다양한 작동 스킬에 익숙해지도록 플레이어 를 트레이닝하거나, 온라인 플레이어의 수가 부족한 경우 플레이어와 상호 작용하는 데 사용될 수 있다. 그러나 현재의 AI는 여러 가지 이유로 인해 상대적으로 열악한 상호 작용 효과를 일으킨다. 본 출원은 생물학적 진화 기본 원리를 기반으로 게임 AI(즉, 인공 지능을 사용하는 비-플레이어 캐릭터) 진화 장치를 구현한다. 생물학적 진화의 원리를 시뮬레이션하는 것에 의해, 자기 진화 능력이 게임 AI 시스템에 부여 됨으로써, 게임 AI가 시간이 지남에 따라 증가하는 지능과 다양한 스킬 속성을 획득한다. 이 방법의 설계 아이 디어는 단일 AI 개체를 진화 및 업그레이드용 개체로 사용하는 대신 전체 게임 AI 그룹을 진화 개체로 사용하는 것이다. 특정 구현 방법은, 게임 AI 개인이 실제 플레이어에 의해 죽을 때 집단의 진화 로직이 트리거되고, 진 화 로직이 죽은 AI가 현재 속한 세대의 값에 따라(기본적으로 제1 세대 또는 제1 레벨부터 시작), 세대가 특정 한 속성 특성(예: 스킬)을 가지도록 진화할 수 있는 확률을 획득하고, 이번의 진화가 성공할 수 있는 지의 여부 를 판정하는 것이다. 진화가 성공하면 이 시점 이후에 태어난 AI는 기본적으로 다음 세대 또는 다음 레벨이 되 고, 다음 세대 AI는 이 속성 특성을 본질적으로 소유한다. 시간이 지남에 따라 게임 AI는 점점 더 완벽한 지능 과 스킬 속성을 갖게 된다. 더욱이, 플레이어에 의해 죽은 AI의 수가 증가함에 따라, AI에 의해 이미 소유된 스킬의 속성 증가가 트리거된 다. 획득은 또한 확률에 기반한다. 일단 속성 증가가 성공적으로 획득되면, 이후에 태어난 다음 세대 인공 지능 은 기본적으로 속성값을 갖게 된다. 이러한 성장 시스템에서 인공 지능의 성장 곡선이 다르므로 라운드의 배틀 경험은 완전히 동일하지 않다. 전술한 실시 예에서, 검출 유닛은, 제1 캐릭터가 플레이어 캐릭터와 대결할 때 제1 캐릭터에 대한 공격을 개시 하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트를 검출하도록 구성된 제1 검출 모듈; 및 제1 캐릭터가 게임의 맵의 타깃 위치에 있을 때 타깃 위치의 게임 환경이 제1 캐릭터의 타깃 속성값을 수정하는 타깃 이벤트를 검출 하도록 제2 검출 모듈을 포함한다. 전술한 타깃 속성은 생명, 스킬, 무기, 방어 등을 나타내기 위해 사용되는 속성일 수 있다. 예를 들어, 생명 속 성의 경우, 타깃 이벤트는 생명 속성의 속성값을 감소시키기 위한 이벤트이다. 스킬 속성의 경우, 타깃 이벤트 는 제1 캐릭터의 스킬 속성을 캡처하거나 플레이어 캐릭터에 대한 스킬 속성의 손상을 감소시키기 위한 이벤트 이다. 또 다른 예로, 무기 속성의 경우, 타깃 이벤트는 제1 캐릭터의 무기를 캡처하고 무기로 인한 손상을 감소 시키거나 무기를 파괴하는 이벤트이다. 나머지 속성의 경우 대응하는 속성의 속성값을 변경시킬 수 있는 모든 이벤트가 타깃 이벤트이며, 타깃 이벤트는 본 출원에서 하나씩 나열되지 않다. 무기 속성의 경우, 제1 캐릭터가 플레이어 캐릭터와 대결할 때, 제1 캐릭터에 대해 공격을 개시하여 제1 캐릭터 의 무기를 캡처하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트가 검출된다. 제1 캐릭터의 무기가 성공적으로 캡처되면, 새로 태어난 캐릭터의 진화가 트리거되므로, 새로 태어난 캐릭터는 새로 태어난 캐릭터의 무기를 캡 처할 때 시간내에 도피하거나 다시 공격할 수 있으며, 구체적으로 이것은 새로 태어난 캐릭터의 도피 스킬 속성 또는 방어 스킬 속성을 구성하는 것에 의해 구현된다. 선택적으로, 제1 검출 모듈은 플레이어 캐릭터가 제1 캐릭터에 대한 공격을 개시하는 제1 이벤트를 검출하도록 구성된 제1 검출 서브 모듈 - 제1 이벤트는 제1 캐릭터의 타깃 속성값을 제1 값으로 감소시키는 데 사용되며, 제1 값은 제1 캐릭터의 타깃 속성 최대값(즉, 속성에 대해 설정할 수 있는 최대값)보다 작고 제1 캐릭터의 타깃 속성 최소값(즉, 속성에 대해 설정할 수 있는 최소값)보다 작지 않음 -; 및 플레이어 캐릭터가 제1 캐릭터에 대 한 공격을 개시하는 제2 이벤트를 검출하도록 구성된 제2 검출 서브 모듈 - 제2 이벤트는 제1 캐릭터의 타깃 속 성값을 제2 값만큼 감소시키는 데 사용되며, 제2 값은 양수임 - 을 포함한다. 전술한 타깃 속성은 생명, 스킬, 무기, 방어 등을 나타내기 위해 사용되는 속성일 수 있다. 예를 들어, 생명 속 성의 경우, 타깃 이벤트는 생명 속성의 속성값을 감소시키기 위한 이벤트이다. 스킬 속성의 경우, 타깃 이벤트 는 제1 캐릭터의 스킬 속성을 캡처하거나 플레이어 캐릭터에 대한 스킬 속성의 손상을 감소시키기 위한 이벤트 이다. 또 다른 예로, 무기 속성의 경우, 타깃 이벤트는 제1 캐릭터의 무기를 캡처하고 무기로 인한 손상을 감소 시키거나 무기를 파괴하는 이벤트이다. 나머지 속성의 경우 대응하는 속성의 속성값을 변경시킬 수 있는 모든 이벤트가 타깃 이벤트이며, 타깃 이벤트는 본 출원에서 하나씩 나열되지 않다. 무기 속성의 경우, 제1 캐릭터가 플레이어 캐릭터와 대결할 때, 제1 캐릭터에 대해 공격을 개시하여 제1 캐릭터 의 무기를 캡처하는 플레이어 캐릭터에 의해 생성된 타깃 이벤트가 검출된다. 제1 캐릭터의 무기가 성공적으로캡처되면, 새로 태어난 캐릭터의 진화가 트리거되므로, 새로 태어난 캐릭터는 새로 태어난 캐릭터의 무기를 캡 처할 때 시간내에 도피하거나 다시 공격할 수 있으며, 구체적으로 이것은 새로 태어난 캐릭터의 도피 스킬 속성 또는 방어 스킬 속성을 구성하는 것에 의해 구현된다. 제2 값은 특정 이벤트가 제1 캐릭터에 대한 고정된 손상을 유발(즉, 속성값이 제2 값만큼 감소된 손상을 유발함)할 때 새로 태어난 비-플레이어 캐릭터가 트리거되어 이벤트에 의해 유발되는 손상을 회피하거나 감소시 키도록 이 이벤트에 대해 진화하는 것을 나타낸다. 선택적 실시 예에서, 타깃 이벤트에 대응하는 구성 정보가 획득되기 전에, 비-플레이어 캐릭터가 공격 이벤트와 마주칠 때마다 진화하면, 비-플레이어 캐릭터는 과도하게 강해 질 것이며, 게임 플레이어 캐릭터가 비-플레이어 캐릭터와 대결하는 경우, 게임 난이도가 지나치게 높아진다. 결과적으로, 게임 플레이어의 경험이 영향을 받고, 게임 플레이에 대한 관심이 감소된다. 전술한 문제점을 해결하기 위해, 본 출원의 장치는, 제1 획득 유닛이 타깃 이벤트에 대응하는 구성 정보를 획득 하기 전에 제1 캐릭터의 레벨에 대응하는 진화 확률을 획득하도록 구성된 제2 획득 유닛을 더 포함할 수 있다. 진화 확률은 제2 캐릭터가 타깃 이벤트를 처리하기 위해 사용되는 속성을 획득할 수 있는 확률이다. 제1 획득 유닛은 진화 확률이 미리 설정된 확률보다 클 때 타깃 이벤트에 대응하는 구성 정보를 획득하도록 명령받는다. 다른 선택적 실시 예에서, 제1 획득 유닛은, 타깃 이벤트를 처리하는 데 사용되는 제1 속성을 결정하고 제1 속 성에 따라 구성 정보를 결정하도록 구성된 제1 결정 모듈 - 제1 속성은 타깃 이벤트가 발생할 때, 타깃 이벤트 에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하 는 정도보다 작음을 나타내는데 사용되고, 구성 정보는 제1 속성의 파라미터를 구성하는데 사용됨 - ; 및 타깃 이벤트를 처리하는 데 사용되는 제2 속성을 결정하고, 제2 속성에 따라 구성 정보를 결정하도록 구성된 제2 결 정 모듈 - 제2 속성은 타깃 이벤트가 발생하려고 할 때 타깃 이벤트가 발생하는 것을 방지하기 위해 사용되는 방어 이벤트를 실행하도록 명령하는 데 사용되고, 구성 정보는 제2 속성의 파라미터를 구성하는데 사용됨 - 을 포함한다. 실제 애플리케이션에서, 전술한 제1 속성 또는 제2 속성의 구성 여부는 실제 요건에 따라 결정될 수 있으며, 특 정 타깃 이벤트에 따라 결정될 수 있다. 예를 들어, 플레이어에 의해 시작된 공격 이벤트(비-플레이어 캐릭터의 혈액 손실을 유발할 수 있음)의 경우, 공격당했을 때 혈액 손실을 방지하거나 혈액 손실을 감소시키는 데 사용 자의 방어 속성(즉, 제1 속성)이 이 경우에 구성될 수 있다. 다른 예로서, 사용자에 의해 시작된 무기를 캡처하 는 타깃 이벤트의 경우, 비-플레이어 캐릭터의 도피 속성(즉, 제2 속성)이 구성될 수 있다. 플레이어 캐릭터의 일부 행동을 통해, 플레이어 캐릭터가 무기를 캡쳐하는 타깃 이벤트를 시작하려 하는 것으로 결정되는 경우, 비 -플레이어 캐릭터의 도피 속성이 트리거되어 플레이어 캐릭터로부터 도피하게 된다(즉, 방어 이벤트). 다른 예 로서, 비-플레이어 캐릭터가 장애물(즉, 게임 환경이 제1 캐릭터의 타깃 속성값을 수정하는 타깃 이벤트)을 터 치하는 경우, 플레이어의 일부 속성(헬스 포인트 등)이 영향을 받을 수 있다. 이 경우, 제2 속성에 대한 진화가 트리거될 수 있다. 새로 태어난 비-플레이어 캐릭터가 장애물을 터치하기 전에, 장애물의 위치가 능동적으로 검 출되고, 장애물을 실시간으로 피하여(즉, 타깃 이벤트가 발생하지 않도록 방어 이벤트를 실행) 장애물로부터의 손상을 회피한다. 선택적으로, 전술한 제1 속성 및 제2 속성을 구성하는 것은 대응하는 방어 스킬을 강하게 하여 예를 들어, 도피 속도를 증가시키기 위해, 제1 속성 또는 제2 속성을 새롭게 추가하거나, 제1 속성 또는 제2 속성의 속성 파라미 터를 재구성하는 것을 지칭할 수 있다. 전술한 실시 예에서, 타깃 이벤트를 처리하기 위해 사용된 제1 속성 또는 제2 속성을 결정함에 있어서, 다른 플 레이어가 동일한 이벤트를 만났을 때 다른 플레이어의 처리 방식을 참조하여 어떤 속성이 제1 속성 또는 제2 속 성인지를 결정한다. 구체적으로, 이는 제1 결정 모듈에 의해 구현될 수 있다. 제1 결정 모듈은 추가로, 플레이 어 캐릭터에 연관된 타깃 이벤트가 실행되는 것이 검출될 때 타깃 이벤트에 의해 플레이어 캐릭터의 타깃 속성 값을 수정하는 정도가 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 낮은 경우에, 타깃 이벤트를 처리하기 위한 플레이어 캐릭터에 의해 사용되는 속성을 제1 속성으로서 저장하고, 플레이어 캐릭터에 의해 사용된 속성의 파라미터를 저장하도록 구성된다. 선택적으로, 타깃 이벤트를 처리하기 위해 사용된 제1 속성 또는 제2 속성을 결정함에 있어서, 타깃 이벤트를 처리하기 위해 사용된 스킬 속성은 게임개발자에 의해 정의될 수 있다. 선택적으로, 구성 유닛은 추가로, 구성 정보를 사용하여, 제2 캐릭터 생성시에 동시에 생성된 복수의 제2 캐릭 터의 속성을 구성하도록 구성되며, 복수의 제2 캐릭터는 동일한 레벨에 속하며, 게임으로의 보충을 위해 사용된 다. 관련 기술의 진화 아이디어는 AI 개인의 설계를 기반으로 하며, 출생시 AI 개인의 스킬 특성은 완전히 동일하다. AI 개인은 트레이닝 프로세스에서 향상된다. 트레이닝에서의 AI 개인의 향상에 따라, 그 외관도 마찬 가지로 변화한다. 이 경우, 사용자는 외관 등에 따라 개인 AI의 대전 능력 등의 정보를 결정하여 적절한 처리 방식을 사용할 수 있다. 본 출원에서, 새로 태어난 AI 개인의 각각의 세대가 죽은 AI(또는 공격된 AI)의 경험을 참조하여 대응하는 스킬 속성을 획득하도록 진화한다. 이런 방식으로, 상이한 세대의 AI의 스킬 속성이 상이하며, AI 집단을 진화시키기 위한 설계가 구현된다. 따라서 게임 플레이어는 AI와의 배틀시 AI의 스킬 레벨을 결정할 수 없다. 본 명세서에서 전술한 모듈들 및 대응하는 단계들에 의해 구현되는 예시들 및 애플리케이션 시나리오들은 동일 하지만 전술한 실시 예들에 개시된 내용에 제한되지는 않는다는 것을 알아야 한다. 전술한 모듈들은 장치의 일 부로서 도 3에 도시된 하드웨어 환경에서 실행될 수 있으며, 그리고 소프트웨어를 통해 구현될 수도 있고, 하드 웨어를 통해 구현될 수도 있음을 알아야 한다. 하드웨어 환경을 네트워크 환경을 포함한다. 본 출원의 실시 예에 따르면, 캐릭터 구성 방법을 구현하도록 구성된 전자 장치가 추가로 제공된다. 도 10은 본 출원의 일 실시 예에 따른 전자 장치의 구조 블록도이다. 도 10에 도시된 바와 같이, 전자 장치는 하나 이상의 프로세서(단지 하나만 도시됨), 메모리 및 송신 장치를 포함할 수 있다. 도 10 에 도시된 바와 같이, 전자 장치는 입출력 디바이스를 더 포함할 수 있다. 메모리는 소프트웨어 프로그램 및 모듈, 예를 들어 본 출원의 실시 예에서의 캐릭터 구성 방법 및 장치에 대응하는 프로그램 명령/모듈을 저장하도록 구성될 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램 및 모듈을 실행하여 다양한 기능 애플리케이션 및 데이터 처리를 수행하도록, 즉 전술한 캐릭터 구성 방법을 구현하도록 구성된다. 메모리는 고속 랜덤 메모리를 포함할 수 있으며, 또한, 하나 이상의 자기 저장 장치, 플래시 메모리 또는 다른 비휘발성 솔리드 스테이트(solid-state) 메모리와 같은 비휘발성 메모리를 포함할 수 있다. 일부 실시 예에서, 메모리는 프로세서에 대해 원격으로 배치된 메모리를 더 포함 할 수 있고, 이들 원격 메모리는 네트워크를 통해 단말에 연결될 수 있다. 네트워크의 예들은 인터넷, 인트라넷, 근거리 통신망, 이동 통신 네트워크, 및 이들의 조합을 포함하지만, 이들로 제한되지는 않는다. 송신 장치는 네트워크를 통해 데이터를 수신 또는 송신하도록 구성되며, 또한, 프로세서와 메모리 간의 데이터 송신을 위해 구성될 수 있다. 전술한 네트워크의 특정 예는 유선 네트워크 및 무선 네트워크를 포함할 수 있다. 일 실시 예에서, 송신 장치는 네트워크 케이블을 사용하여 다른 네트워크 디바이스 및 라우터에 연결될 수 있는 네트워크 인터페이스 컨트롤러(network interface controller, NIC)를 포함하며, 이에 따라 인 터넷 또는 근거리 통신망과 통신한다. 일 예에서, 송신 장치는 무선 주파수(radio frequency, RF) 모듈이 고, 인터넷과 무선으로 통신하도록 구성된다. 선택적으로, 메모리는 애플리케이션 프로그램을 저장하도록 구성된다. 프로세서는 송신 장치를 사용하여 메모리에 저장된 애플리케이션 프로그램을 호출하여, 게임 에서 제1 캐릭터와 연관된 타깃 이벤트를 검출하는 단계 - 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하 여 플레이어 캐릭터와 대결하는 비-플레이어 캐릭터이며, 타깃 이벤트는 제1 캐릭터의 타깃 속성 값을 수정하도 록 명령하는 데 사용됨 -; 타깃 이벤트에 대응하는 구성 정보를 획득하는 단계 - 구성 정보는 구성된 제2 캐릭 터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가, 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위 해, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터임 -; 및 제2 캐릭 터 생성시에 구성 정보를 사용하여 제2 캐릭터를 구성하는 단계를 실행한다. 본 출원의 실시 예를 사용하는 것에 의해, 게임의 제1 캐릭터에 대해 시작된타깃 이벤트가 검출될 때, 타깃 이 벤트에 대응하는 구성 정보가 획득되고, 생성된 제2 캐릭터가 구성 정보를 사용하여 구성됨으로써, 구성된 제2 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 감소된다. 이러한 방식으로, 비-플레이어 캐릭터의 진화와 함께, 매번 태어난 신규 캐릭터는 동일한 초기 외관을 가지지만, 신규 캐릭터는 새로운 스킬 속성을 갖는다. 게임 내 다수의 비-플레이어 캐릭터의 경우, 상이한 출생 시간으로 인해, 소유한 스킬 속성이 완전히 동일하지 않고 동일한 이벤트를 처리하는 데 사용되는 스킬 속성도 상이함으로써, 게임 캐릭터는 복수의 시도를 통해, 비-플레이어 캐릭터가 고정 이벤트를 처리할 때 비-플레이어캐릭터에 의해 사용되는 스킬 속성을 결정할 수 없다. 이러한 방식으로, 인공 지능 캐릭터의 작동 메커니즘을 알 수 있는 관련 기술의 기술적 문제가 해소될 수 있으며, 이에 따라 인공 지능 캐릭터의 작동 메커니즘이 알려 지는 것을 방지한다. 선택적으로, 본 실시 예에서 특정 예들에 대해 실시 예들에서 설명된 예들을 참조하며, 본 실시 예에서는 세부 사항들이 설명되지 않는다. 당업자는, 도 10에 도시된 구조는 단지 개략적임을 이해할 수 있다. 단말은 스마트 폰(예: 안드로이드 이동 전 화 또는 iOS 이동 전화), 테블릿 컴퓨터, 팜톱(palmtop) 컴퓨터, 모바일 인터넷 디바이스(mobile Internet device, MID) 또는 PAD와 같은 단말 디바이스일 수 있다. 도 10은 전술한 전자 장치의 구조를 제한하지 않는다. 예를 들어, 단말은 도 10에 도시된 것보다 더 많거나 적은 컴포넌트(예: 네트워크 인터페이스 및 디스플레이 장 치)를 더 포함할 수 있거나, 도 10에 도시된 구성과 상이한 구성을 가진다. 당업자는 전술한 실시 예의 방법의 모든 단계가 단말 디바이스의 관련 하드웨어를 명령하는 프로그램에 의해 구 현될 수 있다는 것을 이해할 수 있다. 프로그램은 컴퓨터 판독 가능 저장 매체에 저장될 수 있다. 저장 매체는 플래시 디스크, 판독 전용 메모리(ROM), 랜덤 액세스 메모리(RAM), 자기 디스크 또는 광 디스크일 수 있다. 본 출원의 실시 예는 저장 매체를 더 제공한다. 선택적으로, 본 실시 예에서, 저장 매체는 컴퓨터 프로그램을 저장한다. 컴퓨터 프로그램은 실행될 때 캐릭터 구성 방법을 수행하도록 구성된다. 선택적으로, 본 실시 예에서, 저장 매체는 전술한 실시 예들에 도시된 네트워크에서 복수의 네트워크 디바이스 들 중 적어도 하나에 위치될 수 있다. 선택적으로, 본 실시 예에서, 저장 매체는 다음 단계들을 수행하기 위한 프로그램 코드를 저장하도록 구성된다. S1: 게임의 제1 캐릭터와 연관된 타깃 이벤트를 검출하며, 제1 캐릭터는 게임에서 생성되고 인공 지능을 사용하 여 플레이어 캐릭터와 대결하는 비-플레이어 캐릭터이고, 타깃 이벤트는 제1 캐릭터의 타깃 속성값을 수정하도 록 명령하는 데 사용된다. S2: 타깃 이벤트에 대응하는 구성 정보를 획득하며, 구성 정보는 구성된 제2 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제2 캐릭터의 타깃 속성값을 수정하는 정도가 제1 캐릭터가 타깃 이벤트를 처리할 때 타깃 이벤트에 의해 제1 캐릭터의 타깃 속성값을 수정하는 정도보다 작아지게 하기 위해, 제2 캐릭터를 구성하는 데 사용되며, 제2 캐릭터는 게임에서 생성될 비-플레이어 캐릭터이다. S3: 제2 캐릭터 생성시 구성 정보를 사용하여 제2 캐릭터를 구성한다. 선택적으로, 본 실시 예의 특정 예들에 대해 전술한 실시 예들에서 설명된 예들을 참조하며, 본 실시 예에서는 세부 사항들이 설명되지 않는다. 선택적으로, 본 실시 예에서, 저장 매체는 USB 플래시 드라이브, 판독 전용 메모리(read only memory, ROM), 랜 덤 액세스 메모리(random access memory, RAM), 제거 가능한 하드 디스크, 자기 디스크 또는 광학 디스크와 같 은, 프로그램 코드를 저장할 수 있는 임의 매체를 포함할 수 있으며, 이에 제한되지 않는다. 본 출원의 실시 예의 순서 번호는 단지 설명을 위한 것이며 실시 예의 선호를 나타내지 않는다. 전술한 실시 예에서 통합 유닛이 소프트웨어 기능 유닛의 형태로 구현되고 독립적인 제품으로서 판매되거나 사 용되는 경우, 유닛은 컴퓨터 판독 가능 저장 매체에 저장될 수 있다. 이러한 이해를 기반으로, 본 출원의 기술 적 솔루션은 본질적으로 또는 관련 기술에 기여하는 일부 또는 기술적 솔루션의 전부 또는 일부가 소프트웨어 제품 형태로 구현될 수 있다. 컴퓨터 소프트웨어 제품은 저장 매체에 저장되며, 하나 이상의 컴퓨터 디바이스 (개인용 컴퓨터, 서버, 네트워크 디바이스 등일 수 있음)에게 방법의 전부 또는 일부 단계를 수행하도록 명령하 기 위한 몇 가지 명령을 포함한다. 본 출원의 전술한 실시 예에서, 실시 예의 설명은 상이한 강조를 가지며, 일 실시 예에서 상세하게 설명되지 않 은 부분에 대해서는 다른 실시 예의 관련 설명을 참조할 수 있다. 본 출원에 제공된 일부 실시 예에서, 개시된 클라이언트는 다른 방식으로 구현될 수 있음을 이해해야 한다. 설 명된 장치 실시 예는 단지 개략적이다. 예를 들어, 유닛의 분할은 단지 로직 기능의 분할일 수 있으며, 실제 구 현에서는 다른 분할일 수 있다. 예를 들어, 다수의 유닛들 또는 컴포넌트들이 결합되거나 다른 시스템에 통합될 수 있거나, 일부 특징들이 생략되거나 실행되지 않을 수 있다. 또한, 디스플레이되거나 논의된 상호 커플링, 직접 커플링, 또는 통신 연결은 일부 인터페이스를 통해 구현될 수 있다. 유닛 또는 모듈 사이의 간접 커플링 또 는 통신 연결은 전자 또는 다른 형태로 구현될 수 있다. 분리된 부분들로 기술된 유닛들은 물리적으로 분리될 수도 있고 그렇지 않을 수도 있으며, 유닛들로서 디스플레 이된 부분들은 물리적 유닛일 수도 있고 아닐 수도 있으며, 즉, 이들은 한 위치에 위치될 수 있거나 또는 복수 의 네트워크 유닛 상에 분포될 수 있다. 유닛들의 일부 또는 전부는 실시 예의 솔루션들의 목적을 달성하기 위 해 실제 필요에 따라 선택될 수 있다. 또한, 본 출원의 실시 예에서의 기능 유닛은 하나의 처리 유닛에 통합되거나, 각각의 유닛이 물리적으로 단독으 로 존재할 수도 있고, 또는 2 이상의 유닛이 하나의 유닛으로 통합될 수도 있다. 통합 유닛은 하드웨어의 형태 로 구현될 수 있거나 소프트웨어 기능 유닛의 형태로 구현될 수 있다. 전술한 설명은 본 출원의 단지 바람직한 실시 예일 뿐이며, 당업자는 본 출원의 원리를 벗어나지 않고 여러 개 선 및 수정을 할 수 있음을 알아야 한다. 이러한 개선 및 수정은 본 출원의 보호 범위 내에서 고려되어야 한다."}
{"patent_id": "10-2019-7020698", "section": "도면", "subsection": "도면설명", "item": 1, "content": "여기에 설명된 첨부된 도면은 본 출원의 이해를 돕기 위해 사용되며 본 출원의 일부를 구성한다. 본 출원의 예 시적인 실시 예 및 그 설명은 본 출원을 설명하기 위해 사용되며, 본 출원에 대한 부적절한 제한을 구성하지 않 는다. 도 1은 관련 기술에서의 AI의 상태 변환의 개략도이다. 도 2는 관련 기술에서의 AI의 데이터 구조의 개략도이다. 도 3은 본 출원의 일 실시 예에 따른 캐릭터 구성 방법의 하드웨어 환경의 개략도이다. 도 4는 본 출원의 일 실시 예에 따른 선택적(optional) 캐릭터 구성 방법의 흐름도이다. 도 5는 본 출원의 일 실시 예에 따른 선택적 AI 스네이크(snake)의 개략도이다. 도 6은 본 출원의 일 실시 예에 따른 선택적 헤드 핫 존(hot zone)의 개략도이다. 도 7은 본 출원의 일 실시 예에 따른 선택적 진화(evolution) 시스템의 개략도이다. 도 8은 본 출원의 일 실시 예에 따른 선택적 AI 속성의 개략도이다. 도 9는 본 출원의 일 실시 예에 따른 선택적 캐릭터 구성 장치의 개략도이다. 도 10은 본 출원의 일 실시 예에 따른 전자 장치의 구조 블록도이다."}
