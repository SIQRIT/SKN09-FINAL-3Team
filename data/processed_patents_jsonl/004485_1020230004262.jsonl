{"patent_id": "10-2023-0004262", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0112100", "출원번호": "10-2023-0004262", "발명의 명칭": "인공지능을 이용한 집적회로의 레이아웃 자동화 방법", "출원인": "삼성전자주식회사", "발명자": "천의현"}}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서를 포함하는 컴퓨팅 장치에 의해 수행되는, 인공지능을 이용한 집적회로의 레이아웃 자동화 방법에 있어서, 회로에 대응하는 소프트웨어 코드를 생성하는 단계; 상기 회로의 단위 소자들을 캔버스에 랜덤하게 배치하고, 상기 랜덤하게 배치된 단위 소자들이 연결된 가상의레이아웃을 생성하는 단계; 상기 가상의 레이아웃의 라우팅 정보를 이용하여 상기 회로의 노드별 RC 값을 획득하는 단계; 상기 소프트웨어 코드 및 상기 RC 값에 기초하여 상기 회로를 시뮬레이션하는 단계;상기 시뮬레이션 결과 및 목표값을 비교하여 상기 RC 값에 대한 보상값을 획득하는 단계; 및상기 보상값에 기초하여 상기 가상의 레이아웃을 수정하는 단계;를 포함하고, 상기 소프트웨어 코드는, 상기 회로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함하는 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 RC 값을 획득하는 단계는, 제 1 신경망 모델을 이용하여, 상기 라우팅 정보에 대응하는 상기 회로의 노드 별 RC 값을 획득하는 단계;를 포함하며, 상기 제 1 신경망 모델은, 입력된 라우팅 정보를 분석하여 RC 값을 출력하도록 학습된 신경망 모델인 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 시뮬레이션하는 단계는, 상기 생성된 소프트웨어 코드에 상기 획득된 RC 값을 반영하여 상기 회로를 시뮬레이션하고, 상기 시뮬레이션 결과는, 상기 회로의 각 노드의 출력값을 포함하는 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 목표값은, 상기 생성된 소프트웨어 코드에 상기 획득된 RC 값을 반영함 없이 상기 회로를 시뮬레이션하여 획득된 상기 회로의 각 노드의 출력값인 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 3 항에 있어서,상기 목표값은, 공개특허 10-2024-0112100-3-상기 회로의 사양과 관련하여 엔지니어에 의해 미리 정의된 상기 회로의 각 노드의 목표 출력값인 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 보상값을 획득하는 단계는, 제 2 신경망 모델을 이용하여, 상기 시뮬레이션 결과와 상기 목표값의 차이값에 대응하는 상기 회로의 각 노드의 RC 값에 대한 보상값을 획득하는 단계;를 포함하고, 상기 제 2 신경망 모델은, 입력된 차이값을 분석하여 RC 값에 대한 보상값을 출력하도록 학습된 신경망 모델인 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서, 상기 가상의 레이아웃을 수정하는 단계는, 제 3 신경망 모델을 이용하여, 상기 보상값에 대응하는 레이아웃 변경 정보를 획득하는 단계; 및 상기 레이아웃 변경 정보에 기초하여 상기 가상의 레이아웃을 수정하는 단계;를 포함하고, 상기 제 3 신경망 모델은, 입력된 보상값을 분석하여 레이아웃 변경 정보를 출력하도록 학습된 신경망 모델인 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서, 상기 보상값이 기설정된 범위 이내인지 여부를 판단하는 단계;를 포함하고, 상기 보상값이 상기 기설정된 범위 밖이면, 상기 수정된 가상의 레이아웃에 기초하여, 상기 노드별 RC값을 획득하는 단계, 상기 회로를 시뮬레이션하는 단계 및 상기 보상값을 획득하는 단계를 재수행하는 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서, 상기 보상값이 상기 기설정된 범위 이내이면, 상기 회로에 대한 레이아웃 결과를 출력하는 단계;를 포함하는 자동화 방법."}
{"patent_id": "10-2023-0004262", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "컴퓨팅 장치에 있어서, 적어도 하나의 코어를 포함하는 프로세서; 및상기 프로세서에서 실행 가능한 프로그램 코드들을 포함하는 메모리;를 포함하고, 상기 프로세서는, 상기 프로그램 코드들 중 적어도 일부를 실행하여, 회로에 대응하는 소프트웨어 코드를 생성하고, 상기 회로의단위 소자들을 캔버스에 랜덤하게 배치하고, 상기 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아웃을 생성하고, 상기 가상의 레이아웃의 라우팅 정보를 이용하여 상기 회로의 노드 별 RC 값을 획득하고, 상기 소프트웨어 코드 및 상기 RC 값에 기초하여 상기 회로를 시뮬레이션하고, 상기 시뮬레이션 결과 및 목표값을 비교하여상기 RC 값에 대한 보상값을 획득하고, 상기 보상값에 기초하여 상기 가상의 레이아웃을 수정하고, 상기 소프트웨어 코드는, 상기 회로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "집적회로의 레이아웃 자동화 방법이 개시된다. 본 자동화 방법은, 회로에 대응하는 소프트웨어 코드를 생성하는 단계, 회로의 단위 소자들을 캔버스에 랜덤하게 배치하고, 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아 웃을 생성하는 단계, 가상의 레이아웃의 라우팅 정보를 이용하여 회로의 노드 별 RC 값을 획득하는 단계, 소프트 웨어 코드 및 RC 값에 기초하여 회로를 시뮬레이션하는 단계, 시뮬레이션 결과를 목표값과 비교하여 RC 값에 대 한 보상값을 획득하는 단계, 및 보상값에 기초하여 가상의 레이아웃을 수정하는 단계를 포함한다. 이때, 소프트 웨어 코드는, 회로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함한다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 집적회로의 레이아웃 자동화 방법에 관한 것이다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 집적회로의 설계 공정은, 기능 설계, 논리 설계, 레이아웃 설계라는 3 단계를 포함한다. 이중 레이 아웃 설계는, 논리 회로의 실현을 위해 트랜지스터 등과 같은 집적회로의 단위 소자들을 실제 반도체 칩 상에 어떻게 배치 및 배선할 지를 구하는 작업이다. 종래의 레이아웃 방식에 따르면, 엔지니어가 설계 완료된 회로를 받아 수동으로 레이아웃 설계를 완료한 후, 해 당 레이아웃 기반의 RC 정보(또는 RC 값)를 발행하여 회로의 성능이 엔지니어의 예상에 부합하는지 점검하고, 부합하지 않는 경우 위 과정을 반복하는 과정을 거쳤다. 이 경우, 엔지니어의 숙련도에 따라 설계 속도나 품질이 천차만별로 달라질 수 있어 문제가 된다. 또한, 제품 개발에 필요한 리소스를 줄이거나 개발 일정을 단축시키는 데에도 한계가 있다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 인공지능을 이용하여 집적회로의 레이아웃 설계를 자동화 할 수 있는 방법을 제공함에 있다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시 예에 따른, 적어도 하나의 프로세서를 포함하는 컴퓨팅 장치에 의해 수행되는, 인공지능을 이용한 집적회로의 레이아웃 자동화 방법은, 회로에 대응하는 소프트웨어 코드를 생성하는 단계, 상기 회로의 단위 소자들을 캔버스에 랜덤하게 배치하고, 상기 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아웃을 생 성하는 단계, 상기 가상의 레이아웃의 라우팅 정보를 이용하여 상기 회로의 노드 별 RC 값을 획득하는 단계, 상 기 소프트웨어 코드 및 상기 RC 값에 기초하여 상기 회로를 시뮬레이션하는 단계, 상기 시뮬레이션 결과 및 목 표값을 비교하여 상기 RC 값에 대한 보상값을 획득하는 단계, 및 상기 보상값에 기초하여 상기 가상의 레이아웃 을 수정하는 단계를 포함하고, 상기 소프트웨어 코드는, 상기 회로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함한다. 또한, 상기 RC 값을 획득하는 단계는, 제 1 신경망 모델을 이용하여, 상기 라우팅 정보에 대응하는 상기 회로의 노드 별 RC 값을 획득하는 단계를 포함하며, 상기 제 1 신경망 모델은, 입력된 라우팅 정보를 분석하여 RC 값을 출력하도록 학습된 신경망 모델일 수 있다. 또한, 상기 시뮬레이션하는 단계는, 상기 생성된 소프트웨어 코드에 상기 획득된 RC 값을 반영하여 상기 회로를 시뮬레이션하고, 상기 시뮬레이션 결과는, 상기 회로의 각 노드의 출력값을 포함할 수 있다. 또한, 상기 목표값은, 상기 생성된 소프트웨어 코드에 상기 획득된 RC 값을 반영함 없이 상기 회로를 시뮬레이 션하여 획득된 상기 회로의 각 노드의 출력값일 수 있다. 또한, 상기 목표값은, 상기 회로의 사양과 관련하여 엔지니어에 의해 미리 정의된 상기 회로의 각 노드의 목표 출력값일 수 있다. 또한, 상기 보상값을 획득하는 단계는, 제 2 신경망 모델을 이용하여, 상기 시뮬레이션 결과와 상기 목표값의 차이값에 대응하는 상기 회로의 각 노드의 RC 값에 대한 보상값을 획득하는 단계를 포함하고, 상기 제 2 신경망 모델은, 입력된 차이값을 분석하여 RC 값에 대한 보상값을 출력하도록 학습된 신경망 모델일 수 있다. 또한, 상기 가상의 레이아웃을 수정하는 단계는, 제 3 신경망 모델을 이용하여, 상기 보상값에 대응하는 레이아 웃 변경 정보를 획득하는 단계, 및 상기 레이아웃 변경 정보에 기초하여 상기 가상의 레이아웃을 수정하는 단계 를 포함하고, 상기 제 3 신경망 모델은, 입력된 보상값을 분석하여 레이아웃 변경 정보를 출력하도록 학습된 신 경망 모델일 수 있다. 또한, 상기 보상값이 기설정된 범위 이내인지 여부를 판단하는 단계를 포함하고, 상기 보상값이 상기 기설정된 범위 밖이면, 상기 수정된 가상의 레이아웃에 기초하여, 상기 노드별 RC값을 획득하는 단계, 상기 회로를 시뮬레이션하는 단계 및 상기 보상값을 획득하는 단계를 재수행할 수 있다. 또한, 상기 보상값이 상기 기설정된 범위 이내이면, 상기 회로에 대한 레이아웃 결과를 출력하는 단계를 포함할 수 있다. 한편, 본 발명의 일 실시 예에 따른 컴퓨팅 장치는, 적어도 하나의 코어를 포함하는 프로세서, 및 상기 프로세 서에서 실행 가능한 프로그램 코드들을 포함하는 메모리를 포함하고, 상기 프로세서는, 상기 프로그램 코드들 중 적어도 일부를 실행하여, 회로에 대응하는 소프트웨어 코드를 생성하고, 상기 회로의 단위 소자들을 캔버스 에 랜덤하게 배치하고, 상기 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아웃을 생성하고, 상기 가상의 레이아웃의 라우팅 정보를 이용하여 상기 회로의 노드 별 RC 값을 획득하고, 상기 소프트웨어 코드 및 상기 RC 값에 기초하여 상기 회로를 시뮬레이션하고, 상기 시뮬레이션 결과 및 목표값을 비교하여 상기 RC 값에 대한 보 상값을 획득하고, 상기 보상값에 기초하여 상기 가상의 레이아웃을 수정하고, 상기 소프트웨어 코드는, 상기 회 로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함한다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 다양한 실시 예들에 따르면, 인공지능을 이용하여 자동으로 집적회로의 레이아웃 설계가 가능해진다. 이에 따라, 설계 품질이 향상되고, 제품 개발 일정이 단축될 수 있다."}
{"patent_id": "10-2023-0004262", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서, 본 발명의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 용이하게 실시할 수 있을 정도로, 본 발명의 실시 예들이 명확하고 상세하게 기재될 것이다. 본 발명에서 \"제1,\" \"제2,\" 등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있 고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 도 1은 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 블록도이다. 도 1은 컴퓨팅 장치의 구성을 간략 히 도시한 일 예이다. 따라서, 구현 예에 따라 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들을 더 포함할 수 있다. 도 1에 따르면, 컴퓨팅 장치는 메모리 및 프로세서를 포함한다. 메모리는 컴퓨팅 장치의 동작을 제어하기 위한 각종 프로그램, 데이터를 저장한다. 이를 위해, 메모 리는 각종 플래시 메모리(flash memory), 램(Random Access Memory, RAM), 롬(Read-Only Memory, ROM), 하드 디스크(hard disk), SSD(Solid State Drive), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 자 기 메모리, 자기 디스크, 광디스크 중 적어도 하나를 포함할 수 있다. 한편, 컴퓨팅 장치는 인터넷 (internet) 상에서 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관련되어 동작할 수도 있 다. 특히, 메모리는 각종 인공 지능 모델을 포함할 수 있다. 이때, 인공 지능 모델은 ANN(Artificial Neural Network), DNN(Deep Neural Network), CNN(Convolution Neural Network), RNN(Recurrent Neural Network) 등 과 같은 각종 신경망(Neural Network)을 이용하여 학습된 모델일 수 있으나, 이에 한정되는 것은 아니다. 예를 들어, 메모리는 회로를 구성하는 단위 소자들(예를 들어, NMOS, PMOS, 저항, 커패시터 등) 각각에 대 한 신경망 모델을 포함할 수 있다. 이때, 각 단위 소자에 대한 신경망 모델은, 예를 들어, 해당 단위 소자를 신 경망을 이용하여 학습한 후 그 결과(예를 들어, bias 값 또는 가중치 값)를 저장한 함수로서, 소프트웨어 코드 의 형태를 가질 수 있다. 또한, 메모리는 라우팅 정보를 분석하여 RC 값을 출력하도록 학습된 신경망 모델(이하, “제 1 신경망 모 델”이라 한다.)을 포함할 수 있다. 이때, 라우팅 정보는 집적회로에 대한 레이아웃 설계 시 회로를 구성하는 단위 소자들의 라우팅 정보일 수 있다. 제 1 신경망 모델은, 라우팅 정보가 입력되면, 회로의 노드 별 RC값을 추론하여 출력할 수 있다. 한편, 일 실시 예에 따르면, RC값은, 회로의 소자들을 연결하는 배선이 저항 성분 및 커패시턴스 성분으로 모델링된 값일 수 있으며, back annotation 정보 또는 지연 시간에 대한 정보로 불리울 수 도 있으나, 이에 한정되는 것은 아니다. 또한, 메모리는 입력값과 RC값의 상관 관계를 정의한 신경망 모델을 포함할 수 있다. 구체적으로, 메모리 는 입력값을 분석하여 RC 값에 대한 보상값을 출력하도록 학습된 신경망 모델(이하, “제 2 신경망 모델” 이라 한다.)을 포함할 수 있다. 이때 입력값은, 회로의 시뮬레이션 결과에 따른 각 노드의 출력값 및 회로의 각 노드의 목표 출력값의 차이값이 될 수 있다. 제 2 신경망 모델은, 위와 같은 차이값이 입력되면 RC값에 대한 보 상값을 추론하여 출력할 수 있다. 이때, 보상값은, 현재의 레이아웃에 기초한 노드의 출력값과 해당 노드의 목 표 출력값의 차이값에 대응되는 RC값일 수 있다. 또한, 메모리는 보상값과 단위 소자의 위치 간의 상관 관계를 정의한 신경망 모델을 포함할 수 있다. 구체 적으로, 메모리는 입력된 보상값을 분석하여 레이아웃 변경 정보를 출력하도록 학습된 신경망 모델(이하, “제 3 신경망 모델”이라 한다.)을 포함할 수 있다. 제 3 신경망 모델은, 보상값이 입력되면, 보상값에 대응하 는 레이아웃 변경 정보를 추론하여 출력할 수 있다. 이때, 레이아웃 변경 정보는, 보상값만큼 RC값이 보상되기 위해, 현재의 레이아웃 상에서 회로의 단위 소자들이 어디로 얼마만큼 위치를 변경해야하는 지에 관한 정보를 포함할 수 있다. 메모리에 저장된 상술한 각종 신경망 모델들은, 컴퓨팅 장치의 프로세서에 의해 학습이 수행될 수 있다. 또는 실시 예에 따라 외부의 다른 장치에서 학습된 후 컴퓨팅 장치로 수신되어 메모리에 저 장될 수도 있다. 프로세서는 컴퓨팅 장치의 전반적인 동작을 제어한다. 프로세서는 하나 이상의 코어로 구성될 수 있다. 한편, 프로세서는 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 어플리케이션 프로세서(application processor(AP)), 커 뮤니케이션 프로세서(communication processor(CP)), 또는 텐서 처리 장치(TPU: tensor processing unit) 중 적어도 하나를 포함할 수 있으며, 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 발명의 다양한 실시 예 들에 따른 컴퓨팅 장치의 동작을 수행할 수 있다. 특히, 프로세서는 회로에 대응하는 소프트웨어 코드를 생성할 수 있다. 구체적으로, 프로세서는 설계 가 완료된 후 회로가 입력되면, 메모리에 저장된 단위 소자들 각각에 대한 신경망 모델을 이용하여, 입력 된 회로에 포함된 단위 소자들을 소프트웨어 코드로 변경함으로써, 회로에 대응하는 소프트웨어 코드를 생성할 수 있다. 또한, 프로세서는 입력된 회로에 대한 가상의 레이아웃을 생성할 수 있다. 구체적으로, 프로세서는 회로의 단위 소자들을 캔버스에 랜덤하게 배치하고, 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아웃을 생성할 수 있다. 이와 같이 가상의 레이아웃이 생성되면, 생성된 가상의 레이아웃 상에서 단위 소자들 각각이 위치하는 위치 정보, 및 단위 소자들 간의 연결에 관한 라우팅 정보가 획득될 수 있다. 이에 따라, 프로세서는 가상의 레이아웃의 라우팅 정보를 이용하여 회로의 노드별 RC값을 획득할 수 있다. 구체적으로, 메모리에는 라우팅 정보를 분석하여 RC 값을 출력하도록 학습된 제 1 신경망 모델이 포함될 수 있으므로, 프로세서는 제 1 신경망 모델에 라우팅 정보를 입력하여 회로의 노드별 RC값을 획득할 수 있 다. 그러나, 프로세서가 회로의 노드별 RC값을 획득하는 방법이 이에 한정되는 것은 아니다. 한편, 프로세서는 회로를 시뮬레이션하고, 시뮬레이션 결과를 목표값과 비교하여 상기 획득된 RC값에 대한 보상값을 획득할 수 있다. 구체적으로, 프로세서는, 상술한 바와 같이 생성된 소프트웨어 코드(즉, 입력된 회로가 변환된 소프트웨어 코드)에 상기 획득된 노드별 RC값을 반영하여 입력된 회로를 시뮬레이션할 수 있다. 이에 따라, 프로세서 는 시뮬레이션 결과를 획득할 수 있다. 이때, 시뮬레이션 결과는 회로의 각 노드의 출력값(예를 들어, 전압값 또는 전류값)을 포함할 수 있다. 한편, 프로세서는 시뮬레이션 결과와 목표값을 비교하여 차이값을 산출할 수 있다. 이때, 일 실시 예에 따 르면, 목표값은 생성된 소프트웨어 코드에 상기 획득된 RC 값을 반영함 없이 회로를 시뮬레이션하여 획득되는 각 노드의 출력값일 수 있다. 또는 일 실시 예에 따르면, 목표값은 회로의 스펙과 관련하여 회로의 각 노드의 목표 출력값으로 엔지니어에 의해 미리 정의된 값일 수도 있다. 한편, 전술한 바와 같이, 메모리에는 입력값을 분석하여 RC 값에 대한 보상값을 출력하도록 학습된 제 2 신경망 모델이 포함될 수 있다. 따라서, 프로세서는, 제 2 신경망 모델에 상기 차이값을 입력하여 회로의 각 노드의 RC 값에 대한 보상값을 획득할 수 있다. 그러나, 프로세서가 회로의 각 노드의 RC 값에 대한 보 상값을 획득하는 방법이 이에 한정되는 것은 아니다. 이와 같이, 보상값이 획득되면, 프로세서는 획득된 보상값에 기초하여 가상의 레이아웃을 수정할 수 있다. 메모리에는 보상값과 단위 소자의 위치 간의 상관 관계를 정의한 제 3 신경망 모델이 포함될 수 있으므로, 프로세서는 보상값을 제 3 신경망 모델에 입력하여 회로의 레이아웃 변경 정보를 획득할 수 있다. 그러나, 프로세서가 보상값에 기초하여 레이아웃 변경 정보를 획득하는 방법이 이에 한정되는 것은 아니다. 레이아 웃 변경 정보가 획득되면, 프로세서는 획득된 레이아웃 변경 정보에 기초하여, 이전에 생성되었던 가상의 레이아웃을 수정할 수 있다. 한편, 프로세서는 보상값이 기설정된 범위 이내가 될 때까지, 상술한 RC 값 획득, 시뮬레이션, 보상값 획 득 및 레이아웃 수정 동작을 재수행할 수 있다. 전술한 바와 같이, 보상값은 시뮬레이션 결과와 목표값의 차이 값에 의해 결정되므로, 보상값이 기설정된 범위 이내에 포함된다는 것은 시뮬레이션 결과와 목표값의 차이값이 오차 범위 이내에 포함된다는 것을 의미할 수 있다. 따라서, 프로세서는 보상값이 기설정된 범위 이내로 들어올 때까지 즉, 시뮬레이션 결과와 목표값의 차이 값이 오차 범위 이내로 들어올 때까지, 상술한 레이아웃 수정 동작을 반복할 수 있다. 한편, 보상값이 기설정된 범위 이내로 들어오면, 프로세서는 더 이상 레이아웃 수정 동작을 반복하지 않고, 최종 레이아웃 결과를 출력할 수 있다. 상술한 실시 예들에 따르면, 컴퓨팅 장치는 회로가 입력되면, 엔지니어의 추가적인 개입없이, 자동으로 성 능 및 면적이 최적화된 회로의 레이아웃 결과를 출력할 수 있다. 이에 따라, 엔지니어 입장에서 레이아웃 설계 의 편의가 제고되며, 제품 개발 측면에서, 개발 비용이 감소되고, 개발 일정이 단축될 수 있으며, 설계 편차가 줄어들 수 있게 된다. 도 2는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 제어 방법을 도시한 흐름도이다. 도 2를 설명함에 있 어, 도 1을 통해 전술한 것과 중복되는 설명은 생략한다. 도 2에 따르면, 컴퓨팅 장치는 회로에 대응하는 소프트웨어 코드를 생성한다(S210). 이때, 소프트웨어 코 드는, 상기 회로에 포함된 단위 소자들 각각에 대한 신경망 모델을 포함할 수 있다. 도 3은 인버터 회로가 소프 트웨어 코드로 생성되는 하나의 예를 도시한 도면이다. 도 3을 참조하면, 좌측에 도시된 바와 같은 인버터 회로 가 입력되면, 컴퓨팅 장치는 우측에 도시된 바와 같이, NMOS 및 PMOS 각각에 대한 신경망 모델을 불러온 후, NOMS 및 PMOS 각각에 대한 신경망 모델을 포함하는 소프트웨어 코드로 인버터 회로를 표현할 수 있음을 알 수 있다. 한편, 컴퓨팅 장치는, 회로의 단위 소자들을 캔버스에 랜덤하게 배치하고, 랜덤하게 배치된 단위 소자들이 연결된 가상의 레이아웃을 생성할 수 있다(S220). 가상의 레이아웃이 생성되면, 생성된 가상의 레이아웃 상에서 단위 소자들 각각이 위치하는 위치 정보 및 단위 소자들 간의 연결에 관한 라우팅 정보가 획득될 수 있다. 이에 따라, 컴퓨팅 장치는 가상의 레이아웃의 라우팅 정보를 이용하여 회로의 노드별 RC값을 획득할 수 있 다(S230). 구체적으로, 컴퓨팅 장치는 제 1 신경망 모델을 이용하여, 가상의 레이아웃의 라우팅 정보에 대 응하는 회로의 노드 별 RC 값을 획득할 수 있으나, 이에 한정되는 것은 아니다. 이때, 제 1 신경망 모델은, 입 력된 라우팅 정보를 분석하여 RC 값을 출력하도록 학습된 신경망 모델일 수 있다. 이후, 컴퓨팅 장치는 생성된 소프트웨어 코드 및 획득된 RC값에 기초하여 회로를 시뮬레이션할 수 있다 (S240). 구체적으로, 컴퓨팅 장치는 소프트웨어 코드로 표현된 회로에 상기 획득한 RC값을 반영하여 회로 를 시뮬레이션 할 수 있다. 이때, 회로를 시뮬레이션 한다는 것은 RC값이 반영된 소프트웨어 코드를 Run하는 것 을 의미할 수 있다. 이에 따라, 컴퓨팅 장치는, 시뮬레이션 결과와 목표값을 비교하여 상기 획득된 RC값에 대한 보상값을 획득 할 수 있다(S250). 구체적으로, 컴퓨팅 장치는 시뮬레이션 결과와 목표값의 차이값을 산출하고, 산출된 차이값을 제 2 신경망 모델에 입력하여 RC값에 대한 보상값을 획득할 수 있으나, 이에 한정되는 것은 아니다. 이 때, 제 2 신경망 모델은, 입력된 차이값을 분석하여 RC 값에 대한 보상값을 출력하도록 학습된 신경망 모델일 수 있다. 이때, 시뮬레이션 결과 및 목표값은, 회로의 각 노드의 출력값(예를 들어, 전압값 또는 전류값)을 포함할 수 있 다. 한편, 실시 예에 따라, 컴퓨팅 장치는 상기 획득된 RC 값을 상기 생성된 소프트웨어 코드에 반영하지 않고 회로를 시뮬레이션하여 회로의 각 노드의 출력값을 획득하고, 이와 같이 획득된 각 노드의 출력값을 목표 값으로 이용할 수 있다. 또한, 컴퓨팅 장치는 회로의 사양과 관련하여 엔지니어에 의해 미리 정의된 회로 의 각 노드의 목표 출력값을 상기 목표값으로 이용할 수도 있다. 한편, 보상값이 획득되면, 컴퓨팅 장치는 획득된 보상값에 기초하여 가상의 레이아웃을 수정할 수 있다 (S260). 구체적으로, 컴퓨팅 장치는 획득된 보상값을 제 3 신경망 모델에 입력하여, 보상값에 대응하는 레 이아웃 변경 정보를 획득하고, 획득된 레이아웃 변경 정보에 기초하여 S220 단계에서 생성된 가상의 레이아웃을 수정할 수 있으나, 이에 한정되는 것은 아니다. 이때, 상기 제 3 신경망 모델은, 입력된 보상값을 분석하여 레 이아웃 변경 정보를 출력하도록 학습된 신경망 모델일 수 있다. 도 4는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 제어 방법을 도시한 흐름도이다. 도 4를 설명함에 있 어, 도 1내지 3에서 전술한 내용과 중복되는 내용은 설명을 생략한다. 도 4를 참조하면, 도 2에 비해 S410 단계 및 S420 단계가 추가된 것을 볼 수 있다. 구체적으로, S250 단계에서 RC값에 대한 보상값이 획득되면, 컴퓨팅 장치는 획득된 보상값이 기설정된 범위 이내인지 여부를 판단할 수 있다(S410). 이때, 기설정된 범위는, 회로의 레이아웃을 설계하는 엔지니어에 의해 설정되는 값으로, 목표값 을 기준으로 허용 가능한 시뮬레이션 결과의 오차 범위를 의미할 수 있다. 이에 따라, 보상값이 기설정된 범위 내에 포함되지 않으면(S410, N), 컴퓨팅 장치는 전술한 바와 같이, 보 상값에 기초하여 가상의 레이아웃을 수정 내지 변경할 수 있다(S260). 하지만, 보상값이 기설정된 범위 내에 포 함되면(S410, Y), 컴퓨팅 장치는 레이아웃 결과를 출력할 수 있다. 즉, 도 4에 따르면, 컴퓨팅 장치는 보상값이 기설정된 범위 이내로 들어올 때까지 레이아웃 수정 동작을 반복할 수 있다. 예를 들어, 기설정된 범위가 0으로 설정된 경우라면, 컴퓨팅 장치는 보상값이 0이 될 때까지, 즉, 가상의 레이아웃에 기초한 시뮬레이션 결과가 목표값과 일치하게 될 때까지 가상의 레이아웃을 수정하게 된다. 이에 따라, 성능 및 면적이 최적화된 회로의 레이아웃 결과가 자동으로 도출될 수 있다. 도 5는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 동작 방법을 도시한 개념도이다. 도 5를 설명함에 있 어, 전술한 것과 중복되는 내용은 설명을 생략한다. 도 5에 따르면, 컴퓨팅 장치는 설계가 완료된 회로가 입력되면, 입력된 회로를 소프트웨어 코드로 변경할 수 있다(S510). 이때, 소프트웨어 코드는, 단위 소자(예를 들어, NMOS, PMOS, R, C 등)를 신경망을 통해 학습시 킨 후 그 결과(가중치 또는 Bias 값)를 저장해 둔 함수일 수 있다. 이후, 컴퓨팅 장치는 단위소자들을 랜덤한 위치에 배치하고, 배치된 위치를 기반으로 랜덤하게 라우팅을 완료한 가상의 레이아웃을 생성할 수 있다(S520). 이때, 회로에 포함된 단위 소자들의 위치 및 각 소자들 간의 라우팅 정보가 표기된 텍스트 파일이 결과물로 획득될 수 있으나, 이에 한정되는 것은 아니다. 한편, 컴퓨팅 장치는 가상의 레이아웃의 라우팅 정보에 기초하여 회로에 포함된 노드의 RC 값을 예상할 수 있다(S530). 이때, 컴퓨팅 장치는 라우팅 정보를 입력 벡터로 하여 RC 값을 예상하도록 학습된 제 1 신경 망 모델을 이용할 수 있으나, 이에 한정되는 것은 아니다. 이에 따라, 컴퓨팅 장치는 회로를 시뮬레이션하고(S540-1, S540-2), 시뮬레이션 결과를 분석할 수 있다 (S550). 구체적으로, 컴퓨팅 장치는 상기 예상된 RC값을 적용함 없이 소프트웨어 코드를 Run하여 회로를 시뮬레이 션할 수 있다(Pre Sim., S540-1). 또한, 컴퓨팅 장치는 상기 예상된 RC값을 적용한 소프트웨어 코드를 Run 하여 회로를 시뮬레이션할 수 있다(Post Sim., S540-2). 이때, 시뮬레이션 결과는 회로의 각 노드의 전압 파형 또는 전류 파형을 포함할 수 있다. 이에 따라, 컴퓨팅 장치는 Pre Sim. 결과와 Post Sim. 결과를 비교할 수 있다(S550). 이때, 컴퓨팅 장치 는 시뮬레이션 결과를 자동으로 비교하는 프로그램 툴을 이용할 수 있으나, 이에 한정되는 것은 아니다. 한편, 컴퓨팅 장치는 시뮬레이션 분석 결과를 토대로 부족한 RC를 정량화할 수 있다(S560). 이때, 컴퓨팅 장치는 스펙값(도 5의 예에서는, Pre Sim. 결과)과 RC값 간의 상관 관계를 정의한 제 2 신경망 모델을 이 용하여 부족한 RC값을 정량화할 수 있으나, 이에 한정되는 것은 아니다. 부족한 RC 값이 정량화 되면, 컴퓨팅 장치는 부족한 RC를 개선하기 위해 레이아웃을 어떻게 얼마나 변경해 야 하는지 판단할 수 있다(S570). 이때 컴퓨팅 장치는, RC값과 단위 소자의 위치 간 상관 관계를 정의한 신경망 모델을 이용할 수 있으나, 이에 한정되는 것은 아니다. 레이아웃의 변경에 관한 정보가 판단되면, 컴퓨팅 장치는 가상의 레이아웃을 변경하고, 스펙값과 Post Sim. 결과가 동일해질 때까지 S510 단계를 제외한 전술한 전체 과정을 반복할 수 있다. 반복하는 과정에서 스펙 값과 Post Sim. 결과가 동일해 지면, 컴퓨팅 장치는, 결과 레이아웃을 최종적으로 출력할 수 있다. 한편, 이상에서는, Pre Sim. 결과가 스펙값으로 이용되는 예를 설명하였으나, 실시 예가 이에 한정되는 것은 아 니며, 엔지니어가 직접 만든 목표 파형이 스펙값으로 이용될 수도 있다. 상술한 본 발명의 다양한 실시 예들에 따르면, 엔지니어의 개입없이 자동으로 레이아웃 설계가 가능해지므로, 제품 개발 리소스가 감소될 수 있으며, 이를 통해 제품 개발 일정 단축이 가능해 진다. 또한, 성능과 면적이 최 적화된 레이아웃 설계가 가능해지므로, 제품 경쟁력 향상될 수 있다. 한편, 본 발명의 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media)에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 여기서, 기기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시 예들에 따른 컴퓨팅 장 치를 포함할 수 있다. 상기 명령이 각종 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 상기 프로세서의 제어 하에 다른 구성 요소들을 이용하여 상기 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생 성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비 일시적(non-transitory) 저장 매체의 형태로 제공될 수 있다. 여기서, '비 일시적'은 저장 매체가 신호(signal)를 포함하지 않으며 실재 (tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시적으로 저장됨을 구분하지 않는다. 일 실시 예에 따르면, 본 발명에 개시된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래 될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD- ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 상술한 내용은 본 발명을 실시하기 위한 구체적인 실시 예들이다. 본 발명은 상술한 실시 예들 이외에도, 단순 하게 설계 변경되거나 용이하게 변경할 수 있는 실시 예들도 포함될 것이다. 또한, 본 발명은 실시 예들을 이용 하여 용이하게 변형하여 실시할 수 있는 기술들도 포함될 것이다. 따라서, 본 발명의 범위는 상술한 실시 예들 에 국한되어 정해져서는 안되며, 후술하는 특허청구범위뿐만 아니라 이 발명의 특허청구범위와 균등한 것들에 의해 정해져야 할 것이다."}
{"patent_id": "10-2023-0004262", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 블록도이다. 도 2는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 제어 방법을 도시한 흐름도이다. 도 3은 본 발명의 일 실시 예에 따른 소프트웨어 코드의 생성 예를 도시한 도면이다. 도 4는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 제어 방법을 도시한 흐름도이다. 도 5는 본 발명의 일 실시 예에 따른 컴퓨팅 장치의 동작 방법을 도시한 개념도이다."}
