{"patent_id": "10-2021-0161876", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0052163", "출원번호": "10-2021-0161876", "발명의 명칭": "공동 편집 서비스를 제공하기 위한 방법 및 이를 위한 서버", "출원인": "삼성전자주식회사", "발명자": "박건"}}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "서버에 있어서,통신 모듈;메모리; 및적어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는,공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식별하고, 상기 적어도 하나의 전자 장치의 접속이 끊긴 시점과 연관된 제1 체크 포인트를 식별하고, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 제1 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 메모리에저장하고,상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 통신 모듈을 통해 상기 적어도 하나의전자 장치로 전송하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서, 상기 적어도 하나의 프로세서는,상기 신규 편집 명령을 전송한 후, 상기 메모리에 저장된 상기 적어도 하나의 전자 장치에 대한 상기 신규 편집명령을 삭제하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서, 상기 적어도 하나의 프로세서는,상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트를 갱신하고, 상기 적어도 하나의 전자 장치에 대해 상기 갱신에 대응하는 최신 체크 포인트를 저장하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서, 상기 적어도 하나의 프로세서는,상기 신규 편집 명령과 상기 최신 체크 포인트를 상기 통신 모듈을 통해 상기 적어도 하나의 전자 장치로 전송하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1 항에 있어서, 상기 적어도 하나의 프로세서는,상기 적어도 하나의 전자 장치의 재접속 시 상기 적어도 하나의 전자 장치로부터 상기 적어도 하나의 전자 장치에서의 현재 체크 포인트를 획득하고, 상기 획득된 현재 체크 포인트 및 상기 제1 체크 포인트에 기반하여, 상기 신규 편집 명령을 상기 통신 모듈을공개특허 10-2023-0052163-3-통해 상기 적어도 하나의 전자 장치로 전송하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서, 상기 적어도 하나의 프로세서는,상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다, 상기 접속이 끊긴 적어도하나의 전자 장치를 제외한 나머지 전자 장치들로 상기 수신되는 편집 명령을 상기 통신 모듈을 통해 전송하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6 항에 있어서, 상기 적어도 하나의 프로세서는,상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다 제2 체크 포인트를 갱신하고, 상기 갱신된 제2 체크 포인트와 함께 상기 수신된 편집 명령을 상기 통신 모듈을 통해 상기 접속이 끊긴 적어도하나의 전자 장치를 제외한 나머지 전자 장치들로 전송하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6 항에 있어서, 상기 적어도 하나의 프로세서는,상기 접속된 전자 장치들에 의해 편집 명령 수신 시 상기 편집 명령을 전송한 각 전자 장치에서의 현재의 체크포인트를 상기 편집 명령과 함께 획득하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제6 항에 있어서, 상기 적어도 하나의 프로세서는,상기 접속된 전자 장치들에 의해 편집 명령이 수신될 때 수신되는 편집 명령이 서로 충돌하는지를 식별하고, 상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들을 순차적으로 선택하고, 상기 순차적인 선택에 따라 상기 제2 체크 포인트를 갱신하여 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 공지하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 항에 있어서, 상기 적어도 하나의 프로세서는,상기 접속이 끊긴 적어도 하나의 전자 장치의 식별에 대응하여, 상기 적어도 하나의 전자 장치의 메타 데이터를임시로 저장하도록 설정된, 서버."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10 항에 있어서, 상기 적어도 하나의 프로세서는,상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 적어도 하나의 전자 장치의 메타 데이터에 대응시켜 상기 메모리에 저장하도록 설정된, 서버.공개특허 10-2023-0052163-4-청구항 12 서버에서 공동 편집 서비스를 제공하기 위한 방법에 있어서, 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식별하는 동작;상기 적어도 하나의 전자 장치의 접속이 끊긴 시점과 연관된 제1 체크 포인트를 식별하는 동작;상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 제1 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 저장하는 동작; 및상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는동작을 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 신규 편집 명령을 전송한 후, 상기 저장된 상기 적어도 하나의 전자 장치에 대한 상기 신규 편집 명령을삭제하는 동작을 더 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트를 갱신하는 동작; 및상기 적어도 하나의 전자 장치에 대해 상기 갱신에 대응하는 최신 체크 포인트를 저장하는 동작을 더 포함하는,공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작은,상기 신규 편집 명령과 상기 최신 체크 포인트를 상기 적어도 하나의 전자 장치로 전송하는 동작을 포함하는,공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항에 있어서, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작은,상기 적어도 하나의 전자 장치의 재접속 시 상기 적어도 하나의 전자 장치로부터 상기 적어도 하나의 전자 장치에서의 현재 체크 포인트를 획득하는 동작; 및상기 획득된 현재 체크 포인트 및 상기 제1 체크 포인트에 기반하여, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작을 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제12항에 있어서,상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다, 제2 체크 포인트를 갱신하는 동작; 및공개특허 10-2023-0052163-5-상기 갱신된 제2 체크 포인트와 함께 상기 수신된 편집 명령을 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 전송하는 동작을 더 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 접속된 전자 장치들에 의해 편집 명령 수신 시 상기 편집 명령을 전송한 각 전자 장치에서의 현재의 체크포인트를 상기 편집 명령과 함께 획득하는 동작을 더 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서, 상기 접속된 전자 장치들에 의해 편집 명령이 수신될 때 수신되는 편집 명령이 서로 충돌하는지를 식별하는 동작;상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들을 순차적으로 선택하는 동작; 및 상기 순차적인 선택에 따라 상기 제2 체크 포인트를 갱신하여 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 공지하는 동작을 더 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제12항에 있어서, 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 저장하는 동작은,상기 접속이 끊긴 적어도 하나의 전자 장치의 식별에 대응하여, 상기 적어도 하나의 전자 장치의 메타 데이터를임시로 저장하는 동작; 및상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 적어도 하나의 전자 장치의 메타 데이터에 대응시켜 저장하는 동작을 더 포함하는, 공동 편집 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시 예에 따르면, 서버는, 통신 모듈, 메모리 및 적어도 하나의 프로세서를 포함하고, 상기 적어도 하나 의 프로세서는, 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식별하 고, 상기 적어도 하나의 전자 장치의 접속이 끊긴 시점과 연관된 체크 포인트를 식별하고, 상기 복수의 전자 장 치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획 득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 메모리에 저장하고, 상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 통신 모듈을 통해 상기 적어도 하나의 전자 장치로 전송하도록 설 정될 수 있다. 그 밖에 다양한 실시 예가 제공될 수 있다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에 개시된 다양한 실시 예는 공동 편집 서비스를 제공하기 위한 방법 및 이를 위한 서버에 관한 것이다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "스마트 폰의 보급과 정보통신 기술의 발달로 인하여 모바일 메신저(Mobile messenger), 소셜 네트워크 서비스 (SNS: Social Network Service)와 같은 인스턴트 메시지 전송 어플리케이션이 확산되고 이용자들 역시 폭발적으 로 늘어나고 있는 추세이다. 이러한 모바일 메신저 및 소셜 네트워크 서비스는 사용자가 자신의 업무를 수행할 때 여러 사용자들과 협업을 하기 위한 목적으로도 사용할 수 있다. 상기한 어플리케이션 이외에 공유하고자 하는 문서를 열람, 작성, 편집할 수 있도록 하는 다양한 종류의 전자 문서 관련 프로그램들도 스마트 폰과 같은 전자 장치에서 이용 가능한 어플리케이션 형태로 개발되어 설치 및 사용되고 있다. 게다가 언제 어디서든지 인터넷에 접속할 수 있음에 따라 사용자가 전자 장치에 전자 문서 관련 어플리케이션을 설치하지 않더라도 언제든지 문서를 열람, 작성, 편집할 수 있도록 하는 웹 기반의 문서 편집 서비스도 등장하고 있다. 상기한 바와 같은 문서 편집 서비스는 복수의 전자 장치에서 하나의 전자 문서에 대해 공동 편집이 가능할 수 있다. 이에 따라 복수의 사용자가 동일 문서에 대하여 타인이 수정한 내용을 손쉽게 확인할 수 있으며, 사용자 간 협업이 원활하게 이루어지도록 지원할 수 있다. 특히, 서버를 통해서는 복수의 전자 장치의 사용자들이 동일한 문서에 대해 실시간으로 동시 편집이 가능할 수 있다. 일례로, 웹 기반의 문서 편집 서비스는 복수의 전자 장치들이 공동 편집을 위해 서버에 접속한 후, 각 전 자 장치에서 해당 문서를 작성 및 편집함에 따른 변경 사항을 서버로 전달하면, 서버에서는 해당 변경 사항을 다른 전자 장치들로 전송할 수 있다. 이렇게 함으로써 공동 편집에 참여 중인 복수의 전자 장치 상에 표시되고 있는 문서가 항상 동일한 편집 상태로 유지될 수 있다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "하지만, 어느 하나의 전자 장치에서 서버와 일시적으로 연결이 불안정하게 되면, 다른 전자 장치에서의 변경 사 항들은 상기 전자 장치로 전달되지 못한 채 서버에 누적되게 되며, 서버와의 재연결 시 한꺼번에 누적된 변경 사항들이 상기 전자 장치로 전달될 수 밖에 없다. 누적된 변경 사항들을 한꺼번에 수신함에 따라 전자 장치에서 는 변경 사항들에 대한 순차적인 연산으로 인한 부하가 가중될 수 있다. 따라서 장애로 인해 서버와의 통신 연 결이 일시적으로 끊겼던 전자 장치에서 통신 회복 시 과도한 연산으로 인한 부하를 방지할 필요가 있다. 본 문서에 개시된 다양한 실시예는, 편집 명령을 실행하는 전자 장치의 부하를 감소시킬 수 있는 공동 편집 서 비스를 제공하기 위한 방법 및 이를 위한 서버가 제공될 수 있다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시 예에 따르면, 서버는, 통신 모듈, 메모리 및 적어도 하나의 프로세서를 포함하고, 상기 적어도 하 나의 프로세서는, 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식 별하고, 상기 적어도 하나의 전자 장치의 접속이 끊긴 시점과 연관된 체크 포인트를 식별하고, 상기 복수의 전 자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으 로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 메모리에 저장하고, 상기 적어도 하 나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 통신 모듈을 통해 상기 적어도 하나의 전자 장치로 전 송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 서버에서 공동 편집 서비스를 제공하기 위한 방법은, 공동 편집을 위해 접속된 복수 의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식별하는 동작, 상기 적어도 하나의 전자 장치의 접 속이 끊긴 시점과 연관된 제1 체크 포인트를 식별하는 동작, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 제1 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 저장하는 동작 및 상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편 집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시 예에 따르면, 서버에서 통신이 일시적으로 끊긴 상태의 전자 장치별로 통신 연결 끊김 동안의 편집 명령을 미리 연산하여 통신 회복 시에 해당 전자 장치에 대응되도록 제공함으로써, 통신 회복 시 전자 장치에서 의 편집 명령의 처리로 인한 부하를 감소시킬 수 있다. 다양한 실시 예에 따르면, 전자 장치는 서버와의 신규 연결 또는 재연결 시 해당 전자 장치에 대해 미리 연산된 결과를 제공받아 공동 편집 사항을 적용함으로써 전자 장치에 가중되는 부하를 최소화할 수 있으며, 실시간 동 시 편집이 가능할 수 있다. 다양한 실시 예에 따르면, 서버에서 연결이 끊긴 전자 장치를 식별하고, 연결이 끊긴 전자 장치의 발생 시에만 통신 연결 끊김 동안의 편집 명령을 미리 연산하는 동작을 수행함으로써, 복수의 전자 장치를 위한 공동 편집을 관리하는 서버에서의 자원을 효율적으로 활용할 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은 아래의 기재로부터 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0161876", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다.햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 시스템 구성도이다. 도 2를 참조하면, 공동 편집 서비스를 제공하기 위한 시스템은 전자 장치, 적어도 하나의 서버 및 적어도 하나의 외부 전자 장치를 포함할 수 있다. 여기서, 전자 장치 및 적어도 하나의 외부 전자 장치는 서버를 통해 공동 편집 서비스를 제공받는 장치이며, 공동 편집에는 복수의 클라이언트가 참 여할 수 있다. 도 2의 전자 장치는 도 1의 전자 장치와 동일 또는 유사한 구성부를 포함할 수 있다. 예를 들어, 전자 장치는 서버를 통해 공동 편집 서비스를 제공받는 장치이며, 서버는 외부 전자 장치와 연결되어 전자 장치의 사용자가 공동 편집에 참여하기를 원하는 상대방이 로그인하여 이용할 수 있도록 하는 공동 편집 서비스를 지원할 수 있다. 다양한 실시 예에 다르면, 적어도 하나의 외부 전자 장치는 서버를 통해 전자 장치와 공동 편집 에 참여할 수 있으며, 전자 장치와의 통신을 수행할 수도 있다. 예를 들어, 적어도 하나의 외부 전자 장치 는 스마트 폰(202a), 또는 컴퓨터(202b)와 같은 적어도 하나의 기기들을 포함할 수 있으며, 이에 한정되지 않을 수 있다. 다양한 실시 예에 따르면, 전자 장치는 공동 편집을 할 수 있는 어플리케이션을 실행하거나 서버에 접속하여 웹 기반의 공동 편집 서비스를 제공받을 수 있다. 여기서, 공동 편집이란, 복수의 클라이언트가 공유 하는 컨텐트(content)(예: 전자 문서)에 대해 공동으로 편집하는 동작을 의미할 수 있다. 다양한 실시 예에 따르면, 전자 장치는 외부 전자 장치와 함께 서버에 접속한 후, 전자 장치 에서 해당 전자 문서를 작성 및 편집함에 따른 편집 명령을 서버로 전달하면, 서버에서 상기 편 집 명령에 해당하는 변경 사항을 다른 외부 전자 장치로 전송할 수 있다. 이렇게 함으로써 공동 편집에 참 여 중인 복수의 전자 장치 상에 표시되고 있는 문서가 항상 동일한 편집 상태로 유지될 수 있다. 여기서, 편집 명령이란, 복수의 클라이언트가 공유하는 전자 문서를 편집하기 위한 명령으로, 편집용 전자 문서에 입력되는 다양한 명령을 포함할 수 있다. 예를 들어, 편집 명령은 편집용 전자 문서의 내용을 수정하는 수정 명령, 문서 에 삽입되어 있는 텍스트, 이미지, 표와 같은 객체를 삭제하는 삭제 명령 및 문서에 상기와 같은 객체를 추가하 는 추가 명령을 포함할 수 있다. 따라서 복수의 클라이언트 중 어느 하나의 클라이언트에서 입력한 편집 명령은 서버로 전송된 후, 서버를 통해 공동 편집에 참여 중인 다른 모든 클라이언트로 전송될 수 있다. 다양한 실시 예에 따르면, 적어도 하나의 서버는 도 1을 참조하여 상술한 서버일 수 있다. 다양한 실 시 예에 따르면, 적어도 하나의 서버는 네트워크를 통해 사용자측 전자 장치와 통신할 수 있다. 다양한 실시 예에 따르면, 서버는 전자 장치의 사용자가 제공받고자 하는 공동 편집 서비스를 제공하 는 서버로서, 공동 편집을 위한 어플리케이션을 통해 전자 장치와 연결될 수 있으며, 전자 장치에게 다양한 종류의 전자 문서 기반의 공동 편집 서비스를 제공할 수 있다. 서버에는 전자 장치에 제공 가 능한 편집용 전자 문서가 저장되어 있을 수 있으며, 전자 장치의 요청에 따라 전자 장치로 상기 편집 용 전자 문서를 제공할 수 있다. 도 3a는 연결 끊김 시의 서버와 전자 장치의 동작을 설명하기 위한 도면이다. 도 3a를 참조하면, 복수의 클라이언트 각각에서 편집 명령이 발생하면 이러한 편집 명령들은 서버로 전송 되고, 서버는 편집 명령들을 서버에 접속된 모든 클라이언트로 전송할 수 있다. 이에 따라 전자 장치 에서는 편집 명령들을 수신한 후, 시간 순서에 따라 편집 명령들 각각을 연산하고 순차적으로 연산한 결과 물을 화면 상에 표시할 수 있다. 하지만, 공동 편집을 위해 서버에 접속된 복수의 클라이언트들 중 적어도 하나의 클라이언트(예: 전자 장 치)에서 서버와의 일시적인 연결 끊김 상황이 발생하는 경우에는, 다른 클라이언트에서의 편집 명령 들(예: 명령어5(C5) 내지 명령어10(C10))은 연결이 끊긴 전자 장치로 전달되지 못한 채 서버 내 (예: 명령어 저장 모듈)에 누적될 수 있다. 이와 같이 연결이 일시적으로 끊기거나 통신 연결이 불안정한 상황의 경우에는, 전자 장치에서는 연결이 끊기기 직전의 편집 명령들(예: 명령어1(C1) 내지 명령어4(C4))만 반영한 공동 편집 화면을 표시할 수 있으며, 네트워크가 불안정한 상태임을 안내하는 내용을 출력할 수 있다. 이후, 서버와의 재연결 시에는 도 3b에 도시된 바와 같이 서버는 누적 관리하던 다른 클라이언트에서 의 편집 명령들(예: 명령어5(C5) 내지 명령어10(C10))을 전자 장치로 전달할 수 있다. 여기서, 도 3b 는 연결 재개 시의 서버와 전자 장치 간의 동작에 따른 전자 장치의 예시적인 출력 화면을 도시한 도면이다. 도 3b를 참조하면, 서버는 누적된 편집 명령들(예: 명령어5(C5) 내지 명령어10(C10))을 일괄적으로 전자 장치로 전달할 수 있다. 예를 들어, 각각의 편집 명령들은 리스트 형태로 전자 장치로 한 꺼번에 전달될 수 있다. 전자 장치에서는 일괄 수신된 편집 명령들(예: 명령어5(C5) 내지 명령어10(C10)) 을 순차적으로 연산(예: 명령어5(C5) → 명령어6(C6) → 명령어7(C7) → 명령어8(C8) → 명령어9(C9) → 명령어 10(C10)의 순)할 수 있으며, 매 연산 시마다 편집 명령에 따른 변경 사항이 반영된 화면들(330, 335, 340, 34 5)도 순차적으로 표시할 수 있다. 이와 같이 누적된 변경 사항들을 한꺼번에 수신할 경우에는 전자 장치에 서는 변경 사항들에 대한 순차적인 연산으로 인한 부하가 가중될 수 있다. 따라서 공동 편집 도중에 서버 와의 연결이 일시적으로 끊겼던 전자 장치에서 재연결 시 누적된 편집 명령들에 대한 과도한 연산으로 인 해 정상적인 편집 환경을 제공하지 못하는 경우가 발생할 수 있다. 따라서 공동 편집 동안에 일시적인 연결 끊 김 발생 시 전자 장치에 가중되는 부하를 분산시킬 필요가 있다. 다양한 실시 예에 따르면, 전자 장치에 가중되는 부하를 분산시키기 위해 서버에서 연결 끊김 동안의 누적되는 편집 명령을 순차적으로 처리함으로써 새롭게 생성한 하나의 새로운 편집 명령을 재연결 시 전자 장치 에 제공함으로써, 재연결 시의 전자 장치에서의 편집 명령의 처리로 인한 부하를 감소시킬 수 있다. 일 실시 예에 따르면, 서버에서는 전자 장치와의 연결이 끊긴 동안에 공동 편집 서비스에 참여 중인 외부 전자 장치에 의해 발생되는 편집 명령들을 순차적으로 처리하고, 전자 장치와의 재연결 시 상기 순차적인 처리 시점과 연관된 체크 포인트를 이용하여 하나의 새로운 작업으로 정의하고, 정의된 새로운 작업과 관련하여 전자 장치에 대해 별도로 새로운 편집 명령으로 생성한 후, 전자 장치에 제공할 수 있다. 예를 들어, 전자 장치는 서버로부터 단순히 순차적인 편집 명령들(예: 명령어5(C5) → 명령어6(C6) → 명령어7(C7) → 명령어8(C8) → 명령어9(C9) → 명령어10(C10)의 순)을 단순히 하나로 합친 편집 명령들(예: 명령어5(C5) + 명령어6(C6) + 명령어7(C7) + 명령어8(C8) + 명령어9(C9) + 명령어10(C10))을 수신하는 것 이 아니라, 새로운 형태의 하나의 편집 명령(예: 머지된(merge) 명령 = 명령어5(C5) → 명령어10(C10))을 수신할 수 있다. 이에 대응하여 전자 장치는 수신된 편집 명령 즉, 하나의 신규 편집 명령을 연산하 여 연산 결과에 따른 변경 사항이 반영된 화면을 지연없이 바로 표시할 수 있다. 전자 장치와의 재연 결 시 서버에서의 상기 새로운 형태의 하나의 편집 명령의 생성 및 제공을 위한 구체적인 설명은 후술하기 로 한다. 도 4는 다양한 실시 예에 따른 공동 편집을 위한 서버 및 전자 장치의 내부 블록 구성도이다. 도 4에서는 공유 편집 서비스 시 연결이 끊기는 전자 장치에 대한 예로서 전자 장치를 예시하여 설명하기로 한다. 도 4의 전자 장치는 도 1의 전자 장치와 동일 또는 유사한 구성부를 포함할 수 있다. 또한, 전자 장 치뿐만 아니라 서버도 도 4에 도시된 바와 같이 동일한 또는 유사한 내부 구성 요소들을 포함할 수 있다. 도 4를 참조하면, 전자 장치와 서버는, 적어도 하나의 프로세서(420, 421), 메모리(430, 431) 및 통 신 모듈(490, 491)을 포함할 수 있다. 먼저, 서버의 동작을 살펴보면, 프로세서는, 프로세서에 연결된 메모리 및 통신 모듈(49 1)을 제어할 수 있고, 다양한 데이터 처리 또는 연산을 수행할 수 있다. 다양한 실시 예에 따르면, 통신 모듈은 유/무선 네트워크를 통해 공동 편집 서비스를 제공하기 위해 복수의 클라이언트(예: 전자 장치, 외부 전자 장치)와 통신 가능하도록 연결될 수 있다. 여기서, 네 트워크에 포함되는 통신망(예: 이동 통신망, 유선 인터넷, 무선 인터넷)에서의 통신 방식은 제한되지 않는 다. 다양한 실시 예에 따르면, 프로세서는 복수의 클라이언트(예: 전자 장치, 외부 전자 장치)와 연 결 시, 공동 편집 서비스를 지원할 수 있다. 예를 들어, 각 클라이언트에서 공동 편집을 할 수 있는 어플리케이 션을 실행하거나 공동 편집을 위한 세션 참가 시, 프로세서는 공동 편집 서비스를 제공할 수 있다. 여기서, 공동 편집이란, 복수의 클라이언트(예: 전자 장치, 외부 전자 장치)가 공유하는 컨텐트 (content)에 대해 공동으로 편집하는 동작을 의미할 수 있다. 일 실시 예에 따르면, 프로세서는 공동 편집 세션을 개설할 수 있으며, 공동 편집 세션이 접속한 복수의 클라이언트로 공동 편집 서비스를 제공할 수 있다. 프로세서는 공동 편집 세션 별로 참여 중인 클라이언트 들을 관리할 수 있다. 구체적으로, 프로세서는 클라이언트가 어떠한 종류의 전자 장치로 어느 계정을 통해 특정 컨텐트에 접근하는지에 따라 각각의 세션들을 구분하여 관리할 수 있다. 예를 들어, 프로세서는 제1 내지 제3 클라이언트가 제1 컨텐트에 대한 공동 편집에 참여하고자 하는 경우 제1 공동 편집 세션을 생성할 수 있으며, 제1 공동 편집 세션에 접속한 제1 내지 제3 클라이언트들에 대한 연결 상태를 관리할 수 있다. 또한, 프로세서는 제4 및 제5 클라이언트가 제2 컨텐트에 대한 공동 편집에 참여하고자 하는 경우 제2 공동 편집 세션을 생성할 수 있으며, 제2 공동 편집 세션에 접속한 제4 및 제5 클라이언트들에 대한 연결 상태를 관리할 수 있다. 이와 같이 프로세서는 편집 대상이 되는 컨텐트에 따라 세션을 다르게 생성하고, 생성된 세션별 로 공동 편집을 관리할 수 있다. 다른 실시 예에 따르면, 상기 어플리케이션 기반의 공동 편집의 경우, 프로세서는 공동 편집에 참여하기를 원하는 사용자 및 상대방이 로그인하여 이용할 수 있도록 하는 공동 편집 서비스를 지원할 수 있다. 공동 편집 서비스에 참여하기를 원하는 복수의 클라이언트(예: 전자 장치 및 외부 전자 장치)는 서버와 연 결될 수 있으며, 아이디 및 패스워드를 입력하는 로그인 방식을 통해 서버에 접속할 수 있다. 예를 들어, 복수의 클라이언트들이 서버에 접속함에 따라, 프로세서는 공동 편집에 참여하는 상기 클라이언트들 에 대한 정보를 메모리에 저장할 수 있다. 여기서, 상기 클라이언트들에 대한 정보는, 복수의 클라이언트 (예: 전자 장치, 외부 전자 장치) 각각의 사용자 정보, 각각의 식별 정보를 포함할 수 있다. 또한, 프로세서는 복수의 클라이언트(예: 전자 장치, 외부 전자 장치) 접속 시 클라이언트 각각에 제 공한 편집용 컨텐트에 대한 정보(예: 전자 문서의 종류, 전자 문서 버전과 같은 정보)를 메모리에 저장할 수 있다. 이러한 상기 클라이언트들에 대한 정보를 메타 데이터라고 칭할 수 있다. 다양한 실시 예에 따르면, 프로세서는 공동 편집 세션에 복수의 클라이언트(예: 전자 장치, 외부 전 자 장치)가 접속한 상태에서, 통신 모듈을 통해 공동 편집 서비스에 참여 중인 복수의 클라이언트들 중 적어도 하나에 의해 수행되는 공동 편집을 위한 편집 명령을 수신할 수 있다. 만일 적어도 하나의 클라이언 트(예: 전자 장치)에서 해당 컨텐트를 작성 및 편집함에 따른 편집 명령을 수신하면, 상기 편집 명령에 해 당하는 변경 사항을 다른 모든 클라이언트(예: 외부 전자 장치)로 전송할 수 있다. 일 실시 예에 따르면, 편집 대상인 컨텐트는 복수의 클라이언트가 공동으로 열람, 작성, 편집할 수 있는 편집용 파일로서, 편집용 문서를 의미할 수 있다. 예를 들어, 편집용 컨텐트는 노트, 워드 프로세서, 프리젠테이션, 스 프레드시트와 같은 문서에 한정되는 것이 아니며, 그 문서의 종류는 다양할 수 있다. 이러한 편집용 컨텐트는 전자 문서 또는 공동 편집 문서라고 칭할 수도 있다. 이러한 컨텐트는 서버에 저장되어 있다가 공동 편집 에 참여하는 클라이언트(예: 전자 장치, 외부 전자 장치)의 요청 시 해당 클라이언트로 전송될 수 있 다. 프로세서는 공동 편집에 참여하는 복수의 클라이언트(예: 전자 장치, 외부 전자 장치)의 접속을 관리할 수 있으며, 공동 편집 도중의 비정상 연결 상태를 검출하는 동작을 수행할 수 있다. 구체적으로, 프로세서는 공동 편집을 위해 접속된 복수의 전자 장치들(예: 전자 장치, 외부 전자 장 치) 중 접속이 끊긴 적어도 하나의 전자 장치를 식별할 수 있다. 여기서, 접속이 끊긴 전자 장치를 전자 장치이라고 가정하기로 한다. 프로세서는 복수의 전자 장치 각각과의 통신을 통해 주기적으로 접속 상태를 모니터링할 수 있다. 예를 들어, 프로세서는 공동 편집 세션에 타임 아웃(timeout) 또는 중지 (abort)와 같은 비정상 상황이 발생하는지를 모니터링할 수 있다. 모니터링 결과 접속이 끊긴 적어도 하나의 전자 장치가 발생하는 경우, 프로세서는 상기 적어도 하나의 전 자 장치의 접속이 끊긴 시점 및 상기 적어도 하나의 전자 장치에 편집에 따른 변경 사항이 어디까지 적용된 상 태인지를 식별할 필요가 있다. 따라서 접속이 끊긴 전자 장치를 관리하기 위해 프로세서는 상기 접속이 끊 긴 전자 장치의 식별에 대응하여, 상기 전자 장치의 메타 데이터를 임시로 저장할 수 있다. 이와 같이 전자 장치별로 편집 명령에 따른 변경 사항을 적용한 상태가 서로 다르기 때문에, 각각의 전자 장치 에서는 서버에서 제공한 편집 명령을 어디까지 받았는지를 나타내기 위한 용도로, 서버와 전자 장치 들 간에 매 접속 시마다 체크 포인트를 주고 받을 수 있다. 일 실시 예에 따르면, 체크 포인트란 공동 편집 서비스를 통해 문서를 편집하기 위해 사용자에 의해 전자 장치 에서의 편집이 수행될 때마다 다른 전자 장치(예: 외부 전자 장치)에서의 편집 명령과 중복 또는 충 돌되지 않게 순차적으로 누적 생성되는 순서를 의미할 수 있다. 이러한 체크 포인트는 단순히 마지막 편집 시점 을 나타내는 타임 스탬프를 의미하는 것이 아닌 직전까지 편집한 내용의 작업량을 의미할 수 있다. 예를 들어, 최초 접속 후 전자 장치와 외부 전자 장치에 의한 편집 명령이 동시에 서버로 전달되는 경우, 각 편집 명령과 함께 각 전자 장치(401, 104)에서의 체크 포인트가 전달될 수 있는데, 동시에 체크 포인트가 서 버에 전달되었을지라도 전자 장치에서의 체크 포인트와 외부 전자 장치에서의 체크 포인트를 서 로 다를 수 있다. 즉, 전자 장치에서 사용자에 의해 직전까지 편집된 내용을 나타내는 변화량과 외부 전자 장치에서 다른 사용자에 의해 직전까지 편집된 내용을 나타내는 변화량은 서로 다를 수 있다. 이러한 체크 포인트는 접속된 전자 장치들에 의한 편집 명령의 수신에 대응하여, 프로세서에 의해 순차적으로 갱신될 수 있으며, 상기 편집 명령을 모든 전자 장치들로 전달 시 갱신된 체크 포인트가 함께 전달될 수 있다. 이러한 체크 포인트를 이용한다면, 서버와 접속된 전자 장치(401, 104)들 간의 동기화가 가능할 수 있다. 따라서 프로세서는 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 전자 장치가 발생하 는 경우, 상기 전자 장치의 접속이 끊긴 시점과 연관된 제1 체크 포인트를 식별할 수 있다. 예를 들어, 모 든 전자 장치들은 서버에 접속 시 매번 자신이 가지고 있는 체크 포인트를 서버에 알리기 때문에, 접 속이 끊긴 전자 장치가 어떠한 전자 장치인지를 식별할 수 있다면 상기 전자 장치가 가장 최근에 보 내 온 체크 포인트를 확인할 수 있다. 따라서 프로세서는 전자 장치의 접속이 끊긴 시점과 연관된 제 1 체크 포인트를 식별할 수 있다. 이후, 프로세서는 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 제1 체크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 메모리에 저장할 수 있다. 구체적으로, 프로세서는 전자 장치의 접속이 끊긴 이후에도 다 른 접속된 전자 장치들로부터는 정상적으로 편집 명령을 수신할 수 있으므로, 수신된 편집 명령들을 상기 접속 이 끊긴 전자 장치를 제외한 나머지 전자 장치들로 전달할 수 있다. 여기서, 상기 수신된 편집 명령들은 상기 제1 체크 포인트 이후의 편집 명령들에 해당할 수 있다. 이에 따라 나머지 전자 장치들 각각에서는 서버 를 통해 수신된 편집 명령들에 따른 변경 사항에 기반하여 연산(또는 랜더링)한 공동 편집 화면을 출력할 수 있다. 반면, 프로세서는 전자 장치에 대해서는 상기 제1 체크 포인트 이후의 편집 명령들을 단순히 누적 저 장하는 것이 아니라, 상기 제1 체크 포인트 이후의 편집 명령들을 순차적으로 처리(또는 머지)하여 하나의 결과 물 형태로 만들어 관리할 수 있다. 따라서 프로세서는 상기 제1 체크 포인트 이후의 편집 명령들을 순차적 으로 처리함으로써 획득한 하나의 신규 편집 명령을 메모리에 전자 장치와 연관시켜 별도로 관리 및 저장할 수 있다. 일 실시 예에 따르면, 프로세서는 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체 크 포인트 이후의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트를 갱신할 수 있다. 여기서, 제2 체크포인트는 접속이 끊긴 시점과 연관된 제1 체크 포인트와는 상이하며, 편집 명령의 수신 시마다 하나씩 증가될 수 있다. 프로세서는 상기 갱신된 제2 체크 포인트와 함께 수신된 편집 명령들을 상기 접속이 끊긴 전자 장치를 제외한 나머지 전자 장치들로 전달할 수 있다. 이와 같이 프로세서는 나머지 전자 장치들로 갱신된 제2 체크 포인트 즉, 최신 체크 포인트를 알릴 수 있어, 각 전자 장치에서는 어디까지 편집이 진행된 것 인지를 식별할 수 있으며, 이에 따라 실시간으로 편집 사항을 반영하여 출력할 수 있다. 또한, 일 실시 예에 따르면, 프로세서는 상기 제2 체크 포인트를 갱신함에 따라 전자 장치에 대해 상 기 갱신된(또는 증가된) 최신 체크 포인트를 저장할 수 있다. 프로세서는 신규 편집 명령의 전송 시 이러 한 최신 체크 포인트를 함께 재접속한 전자 장치로 전송할 수 있다. 예를 들어, 제1 체크 포인트를 'checkpoint 4'라고 할 경우, 제1 체크 포인트 이후에 다른 전자 장치들로부터 편집 명령이 순차적으로 6개가 수신된 경우, 프로세서는 6개의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트(checkpoint 5→6→7→8→9→10)를 하나씩 증가시킬 수 있다. 프로세서는 상기 6개의 편집 명 령을 기 설정된 연산 알고리즘에 기반하여 하나의 새로운 편집 명령 형태로 연산하고, 연산을 통해 전자 장치 에 대한 하나의 신규 편집 명령으로 저장할 수 있다. 예를 들어, 프로세서는 연결이 끊긴 동안에 변 화되는 체크 포인트를 이용하여 상기 6개의 편집 명령들을 한꺼번에 하나의 편집 명령 형태로 머지하여 하나의 신규 편집 명령(또는 변경 사항)으로써 처리해놓을 수 있다. 여기서, 프로세서는 상기 제2 체크 포인트를 갱신함에 따라 전자 장치에 대해 상기 갱신된(또는 증가된) 최신 체크 포인트(예: checkpoint 10)를 저장 할 수 있다. 또한, 프로세서는 전자 장치에 대응하도록 신규 편집 명령과 함께 최신 체크 포인트를 함께 메모리에 임시로 저장할 수 있다. 프로세서는 전자 장치에 대응하도록 상기 신규 편집 명 령을 전자 장치의 메타 데이터에 대응시켜 저장할 수 있다. 상기한 바와 같이 일 실시 예에 따르면, 프로세서는 전자 장치의 재접속이 이루어지기 전까지 다른 전자 장치들로부터 편집 명령이 수신될 때마다 또는 주기적으로 편집 명령들을 연산을 통해 하나의 편집 명령으 로 만드는 동작을 수행할 수 있다. 이후, 프로세서는 전자 장치의 재접속 시 전자 장치에 대해 저장 및 관리하던 신규 편집 명령을 재접속한 전자 장치로 전송함으로써 공동 편집 시의 동기화를 수행할 수 있다. 예를 들어, 프로세서는 전자 장치와의 재연결 시 전자 장치에 대해 저장해놓은 최신 체크 포인트에 해당하는 신규 편집 명령을 전자 장치로 전달할 수 있다. 일 실시 예에 따르면, 프로세서는 전자 장치의 재접속 시 전자 장치로부터 전자 장치에서 의 현재 체크 포인트를 획득할 수 있다. 전자 장치의 경우 제1 체크 포인트(예: checkpoint 4) 이후에 접 속이 끊긴 것이므로, 상기 현재 체크 포인트는 제1 체크 포인트(예: checkpoint 4)와 동일할 수 있다. 따라서, 프로세서는 상기 획득된 현재 체크 포인트 및 상기 제1 체크 포인트에 기반하여, 상기 신규 편집 명령을 통신 모듈을 통해 전자 장치로 전송할 수 있다. 일 실시 예에 따르면, 상기 신규 편집 명령을 전송한 후, 프로세서는 상기 메모리에 저장된 전자 장 치에 대한 상기 신규 편집 명령을 삭제할 수 있다. 이와 같이 프로세서는 접속이 끊긴 전자 장치 의 발생 시에만 접속이 끊긴 동안의 편집 명령들을 미리 연산하는 동작을 수행하고, 통신 회복 시에는 전 자 장치에 대해 연산해 놓은 데이터를 삭제함으로써, 복수의 전자 장치를 위한 공동 편집을 관리하는 서버 에서의 리소스를 효율적으로 활용할 수 있다. 일 실시 예에 따르면, 프로세서는 전자 장치의 재접속 시 전자 장치로부터 전자 장치에서 의 현재 체크 포인트를 획득할 뿐만 아니라, 상기 접속된 전자 장치들에 의해 편집 명령 수신 시 상기 편집 명 령을 전송한 각 전자 장치에서의 현재의 체크 포인트를 상기 편집 명령과 함께 획득할 수 있다. 이에 따라 프로세서는 매 편집 명령과 함께 수신되는 현재의 체크 포인트를 확인함으로써, 적어도 하나의 전자 장치에 편집에 따른 변경 사항이 어디까지 적용된 상태인지를 알 수 있어, 각 접속한 전자 장치에 대응하 는 편집 명령을 제공할 수 있다. 공동 편집 환경의 경우 복수의 전자 장치들에 의해 하나의 컨텐트에 대해 둘 이상의 편집 명령들이 동시에 입력 되는 상황이 발생할 수 있다. 이와 같이 둘 이상의 편집 명령들에 따른 변경 사항이 상기 컨텐트에 중복되는 지 점에 적용되어야 하는 경우가 발생하면, 이러한 편집 명령들이 서로 충돌되지 않도록 조정할 필요가 있다. 따라 서 프로세서는 복수의 전자 장치들에 의해 편집 명령이 수신될 때 수신되는 편집 명령이 서로 충돌하는지 를 식별하고, 상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들을 순차적으로 선택할 수 있다. 예를 들어, 프로세서는 충돌이 발생한 편집 명령들 중 우선 순위를 두어 어느 하나를 먼저 선택하여 처리한 후 나머지를 이어서 처리할 수 있다. 이어, 프로세서는 상기 순차적인 선택에 따라 편집 명령의 수신에 따른 제2 체 크 포인트를 갱신하여 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 공지할 수 있 다. 이러한 충돌 시의 서버의 동작은 도 10을 참조하여 후술하기로 한다. 다양한 실시 예에 따르면, 메모리는 공동 편집 서비스를 제공하기 위한 동작을 수행하기 위하여 필요한 정 보 및 상기 동작의 일부를 수행하기 위한 하나 이상의 모듈들을 포함할 수 있다. 또한 메모리는 공동 편집 에 참여한 복수의 클라이언트와 관련한 정보를 저장할 수 있으며, 상기 참여 도중에 일시적으로 접속이 끊긴 클 라이언트와 관련한 정보를 임시로 저장할 수 있다. 또한 메모리는 접속이 끊긴 클라이언트를 대신하여 접 속이 끊긴 이후에 발생하는 편집 명령들을 하나의 결과물로 만들기 위한 연산 알고리즘을 저장할 수 있다. 이러 한 연산 알고리즘에 기반하여, 프로세서는 접속이 끊긴 클라이언트가 복수일 경우 각 클라이언트마다 접속 이 끊긴 시점이 다를 지라도 각 클라이언트 별로 서로 다른 결과물 형태로 만들어 임시로 저장하는 것이 가능할 수 있다. 한편, 전자 장치의 동작을 살펴보면, 프로세서는, 프로세서에 연결된 메모리, 디스플레이 및 통신 모듈을 제어할 수 있다. 이러한 전자 장치는 도 1에서 상술한 전자 장치일 수 있 으며, 그 구체적인 설명은 생략하기로 한다. 다만, 일 실시 예에 따른 프로세서는 통신 모듈을 통해 서버에 의해 개설된 공동 편집 세션에 대한 접속을 제어할 수 있다. 일 실시 예에 따르면, 메모리는 공동 편집 세션에 접속 동안에 서버로부터 제공되는 편집 명령을 순 차적으로 임시로 저장하기 위한 명령어 버퍼를 포함할 수 있다. 또한, 매 서버 접속 시마다 현재의 체크 포인트를 서버로 전달할 수 있다. 프로세서는 서버로부터 편집 명령이 수신될 때 수신되는 편집 명령과 함께 체크 포인트를 획득할 수 있으며, 상기 편집 명령의 처리 결과를 반영하여 현재의 체크 포인 트를 갱신할 수 있다. 예를 들어, 프로세서에서 접속이 끊기기 전에 마지막으로 서버로 전달한 현재 의 체크 포인트가 제1 체크 포인트(예: checkpoint 4)라고 하고, 재접속 이후에 수신되는 편집 명령 즉, 신규 편집 명령과 함께 획득된 체크 포인트가 갱신된 제2 체크 포인트(예: checkpoint 10)라고 할 경우, 프로세서 는 현재의 체크 포인트를 'checkpoint 10'으로 갱신하여 저장할 수 있다. 상기한 바와 같이 프로세서는 신규 편집 명령을 획득함으로써 한 번만 연산(또는 랜더링)하는 동작을 수행 하면 되므로, 빠른 동기화를 수행할 수 있으며, 이에 따라 디스플레이는 상기 랜더링을 통해 변경 사항이 빠르게 반영된 공동 편집 화면을 표시할 수 있다. 예를 들어, 공동 편집 화면은 편집 명령에 따른 편집 사항을 한 번에 표시하는 화면일 수 있으며, 하나의 결과물로서 스냅샷 형식으로 표시하는 화면일 수도 있다. 한편, 다양한 실시 예에 따르면, 서버 내의 메모리는 공동 편집 서비스를 제공하기 위한 동작을 수행 하기 위하여 필요한 정보 및 상기 동작의 일부를 수행하기 위한 하나 이상의 모듈들을 포함할 수 있으며, 그 모 듈들은 도 5에 도시된 바와 같이 구성될 수 있다. 또한, 전자 장치 내의 메모리도 도 5에 도시된 바 와 유사하게 적어도 하나의 모듈들을 포함할 수 있다. 도 5는 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 서버의 동작을 설명하기 위한 상세 블록도이 다. 도 5를 참조하면, 다양한 실시 예에 따르면, 서버는 명령어 저장 모듈, 명령 연산 모듈, 명령 송수신 모듈, 접속 관리 모듈, 체크 포인트 관리 모듈를 포함할 수 있다. 일 실시 예에 따르면, 서버는 공동 편집 서비스를 제공하는 동안에 일시적으로 접속이 끊긴 전자 장치를 관리하기 위해 임시 체 크 포인트 저장 모듈, 접속 끊김 관리 모듈 및 명령 조합 관리 모듈을 더 포함할 수 있다. 또한, 일 실시 예에 따르면, 전자 장치는 서버에서와 유사하게 명령어 저장 모듈(미도시), 명령 연산 모듈(미도시), 명령 송수신 모듈(미도시) 및 체크 포인트 관리 모듈(미도시)을 포함할 수 있으며, 공동 편집 화 면을 출력하기 위한 화면 출력 모듈(미도시)을 더 포함할 수 있다. 명령어 저장 모듈은 공동 편집에 참여 중인 전자 장치들로부터의 편집 명령을 순차적으로 저장할 수 있다. 명령 연산 모듈은 수신된 편집 명령을 다른 모든 전자 장치로 전송하기 위한 연산을 수행할 수 있다. 명령 송수신 모듈은 전자 장치들로부터의 편집 명령을 수신하거나 다른 타 전자 장치로 편집 명령에 따른 변경 사항을 통지할 수 있다. 예를 들어, 수신된 편집 명령 및 편집 명령의 수신에 따라 갱신된 체크 포인트를 전송할 수 있다. 접속 관리 모듈은 공동 편집 세션에 대한 복수의 전자 장치들의 접속을 관리할 수 있다. 예를 들어, 접속 관리 모듈은 공동 편집 세션별로 전자 장치들의 접속을 관리할 수 있으며, 이에 따라 어떠한 종류의 전자 장치가 어느 계정을 통해 어떠한 공동 편집용 컨텐트에 접속하는지를 관리할 수 있다. 체크 포인트 관리 모듈은 각 전자 장치별 체크 포인트를 기록 및 관리할 수 있다. 한편, 공동 편집 서비스를 제공하는 동안에 일시적으로 접속이 끊긴 전자 장치를 관리하기 위한 모듈로, 서버 는 임시 체크 포인트 저장 모듈, 접속 끊김 관리 모듈 및 명령 조합 관리 모듈을 더 포함 할 수 있다. 임시 체크 포인트 저장 모듈은 접속이 끊긴 시점 이후의 편집 명령들을 미리 연산하는 데 기준이 되는 체 크 포인트를 임시로 저장할 수 있다. 예를 들어, 임시 체크 포인트 저장 모듈은 전자 장치의 접속이 끊긴 시점과 연관된 제1 체크 포인트 이후에 다른 전자 장치로부터 편집 명령이 수신됨에 따른 제2 체크 포인트 를 갱신하여 저장할 수 있다. 접속 끊김 관리 모듈은 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치를 식별할 수 있다. 예를 들어, 접속 관리 모듈은 공동 편집 세션에 접속 중인 복수의 전자 장치들 중 적어도 하나의 전자 장치의 접속 해제 이벤트가 발생하는지를 식별할 수 있으며, 접속 해제 이벤트 발생을 접속 끊김 관리 모듈에 알릴 수 있다. 또한, 접속 관리 모듈은 상기 접속 해제된 전자 장치의 접속 재개를 접속 끊김 관리 모듈에 알릴 수도 있다. 공동 편집 세션에 참여 중인 전자 장치들에 대한 정보는 상기 세 션 개설 시에 이미 획득된 상태이므로, 그 중에서도 접속이 끊긴 전자 장치에 대한 정보 예컨대, 메타 데이터를 임시로 저장할 수 있다. 예를 들면, 상기 메타 데이터는 접속이 끊긴 전자 장치와 연관된 사용자 정보, 전자 장 치의 식별 정보, 또는 공동 편집 중인 컨텐트에 대한 정보 중 적어도 하나를 포함할 수 있다. 접속 끊김 관리 모듈은 상기 임시로 저장한 메타 데이터를 명령 조합 관리 모듈에 제공할 수 있다. 이러한 메타 데이 터의 전달은 명령 조합 관리 모듈로 하여금 전자 장치에 대한 접속이 끊긴 동안의 편집 명령들만 하 나의 편집 명령 형태로 미리 연산하도록 트리거링하는 역할을 할 수 있다. 한편, 명령 조합 관리 모듈은 공동 편집에 참여 중인 모든 전자 장치들로부터의 편집 명령을 순차적으로 연산한 최신 결과(예: 서버 최신 형상)를 가지고 있을 수 있다. 또한, 명령 조합 관리 모듈은 접속이 끊긴 전자 장치의 발생 시에만 접속이 끊긴 동안의 편집 명령들을 미리 연산하는 동작을 수행하고, 이를 저장해 놓을 수 있다. 예를 들어, 명령 조합 관리 모듈은 접속 끊김 관리 모듈에 의해 접속이 끊긴 전자 장 치의 발생을 인지할 수 있으며, 임시 체크 포인트 저장 모듈에 임시로 저장된 전자 장치의 체크 포인트를 확인할 수 있다. 따라서 명령 조합 관리 모듈은 명령어 저장 모듈에 순차적으로 저장된 편 집 명령들 중 상기 확인된 체크 포인트 이후의 편집 명령들을 가져올 수 있다. 명령 조합 관리 모듈은 상 기 편집 명령들을 명령 연산 모듈을 이용하여 연산할 수 있다. 명령 조합 관리 모듈은 순차적인 연산 을 통해 생성된 하나의 결과물을 전자 장치에 대응시켜 저장할 수 있다. 만일 접속이 끊긴 전자 장치가 복 수일 경우, 명령 조합 관리 모듈은 전자 장치 별로 신규 편집 명령을 저장할 수 있다. 다시 말하면, 전자 장치마다 접속이 끊긴 시점이 다를 수 있기 때문에 각 전자 장치에 대해 저장된 신규 편집 명령도 서로 다를 수 있다. 신규 편집 명령은 각각의 전자 장치에 대해 하나의 컨텐트에 해당하는 단위로 저장될 수 있다. 예를 들어, 노트 어플리케이션을 사용하여 공동 편집을 수행하는 경우, 상기 신규 편집 명령은 한 화면에 표시되는 1 개의 노트를 의미할 수 있다. 명령 조합 관리 모듈은 상기 신규 편집 명령을 저장한 이후에도, 순차적인 편집 명령이 수신될 때마다 또 는 주기적으로 추가적인 편집 명령들을 상기 신규 편집 명령에 반영하여 연산하는 동작을 수행할 수 있다. 이와 같이 순차적인 연산을 한 번만 수행하는 것이 아니라 명령 조합 관리 모듈은 접속이 끊긴 전자 장치 와의 접속이 재개되기 전까지 다른 전자 장치로부터의 추가적인 편집 명령을 지속적으로 반영하여 연산하는 동 작을 수행할 수 있다. 한편, 접속 끊김 관리 모듈은 모니터링을 통해 전자 장치의 재접속 여부를 확인할 수 있다. 만일 재 접속이 확인되면, 접속 끊김 관리 모듈은 명령 조합 관리 모듈로부터 상기 미리 연산해 놓은 신규 편 집 명령(예: 전자 장치 1 최신 형상)을 가져와서 명령 송수신 모듈을 통해 전자 장치로 전송할 수 있 다. 이후, 상기 신규 편집 명령이 전자 장치로 성공적으로 전송된 경우, 명령 조합 관리 모듈은 접속 끊 김 관리 모듈로부터의 요청에 대응하여 전자 장치에 대해 연산해 놓은 상기 신규 편집 명령을 삭제할수 있다. 또한, 더 이상 전자 장치에 대한 정보를 관리할 필요가 없으므로, 접속 끊김 관리 모듈는 임시로 저장한 메타 데이터를 삭제할 수 있다. 이에 따라 접속 재개 시에는 전자 장치와 관련된 모든 데이 터 예컨대, 신규 편집 명령 및 메타 데이터를 일괄 삭제함으로써, 복수의 전자 장치를 위한 공동 편집을 관리하 는 서버에서의 리소스를 효율적으로 활용할 수 있다. 한편, 상기한 바 이외에 명령어 저장 모듈, 명령 연산 모듈, 명령 송수신 모듈 및 체크 포인트 관리 모듈 각각에서의 구체적인 동작은 후술하기로 한다. 예를 들어, 명령 송수신 모듈 및 체크 포인 트 관리 모듈에서의 동작은 도 9a를 참조하여 후술하며, 명령 연산 모듈에서의 동작은 도 10을 참조 하여 후술하며, 명령어 저장 모듈에서의 동작은 도 11을 참조하여 후술하기로 한다. 다양한 실시 예에 따르면, 서버는, 통신 모듈, 메모리 및 적어도 하나의 프로세서를 포함 하고, 상기 적어도 하나의 프로세서는, 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어 도 하나의 전자 장치(예: 도 4의 전자 장치)를 식별하고, 상기 적어도 하나의 전자 장치의 접속이 끊긴 시 점과 연관된 체크 포인트를 식별하고, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체 크 포인트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 메모리에 저장하고, 상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 통신 모듈을 통해 상기 적어도 하나의 전자 장치로 전송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 신규 편집 명령을 전송한 후, 상기 메모리에 저장된 상기 적어도 하나의 전자 장치에 대한 상기 신규 편집 명령을 삭제하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트를 갱신하고, 상 기 적어도 하나의 전자 장치에 대해 상기 갱신에 대응하는 최신 체크 포인트를 저장하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 신규 편집 명령과 상기 최신 체크 포인트를 상 기 통신 모듈을 통해 상기 적어도 하나의 전자 장치로 전송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 적어도 하나의 전자 장치의 재접속 시 상기 적 어도 하나의 전자 장치로부터 상기 적어도 하나의 전자 장치에서의 현재 체크 포인트를 획득하고, 상기 획득된 현재 체크 포인트 및 상기 제1 체크 포인트에 기반하여, 상기 신규 편집 명령을 상기 통신 모듈을 통해 상기 적 어도 하나의 전자 장치로 전송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다, 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 상기 수신되는 편집 명령을 상기 통신 모듈을 통해 전송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다 제2 체크 포인트를 갱신하고, 상기 갱신된 제2 체크 포인트와 함께 상기 수신 된 편집 명령을 상기 통신 모듈을 통해 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치 들로 전송하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 접속된 전자 장치들에 의해 편집 명령 수신 시 상기 편집 명령을 전송한 각 전자 장치에서의 현재의 체크 포인트를 상기 편집 명령과 함께 획득하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 접속된 전자 장치들에 의해 편집 명령이 수신 될 때 수신되는 편집 명령이 서로 충돌하는지를 식별하고, 상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들 을 순차적으로 선택하고, 상기 순차적인 선택에 따라 상기 제2 체크 포인트를 갱신하여 상기 접속이 끊긴 적어 도 하나의 전자 장치를 제외한 나머지 전자 장치들로 공지하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 접속이 끊긴 적어도 하나의 전자 장치의 식별 에 대응하여, 상기 적어도 하나의 전자 장치의 메타 데이터를 임시로 저장하도록 설정될 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 프로세서는, 상기 적어도 하나의 전자 장치에 대한 신규 편집 명 령을 상기 적어도 하나의 전자 장치의 메타 데이터에 대응시켜 상기 메모리에 저장하도록 설정될 수 있다. 도 6은 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 서버에서의 동작 흐름도이다. 도 6의 동작 방법의 각 단계/동작은, 서버(예: 도 1의 서버, 도 4의 서버, 서버의 적어도 하나의 프 로세서(예: 도 4의 프로세서) 중 적어도 하나에 의해 수행될 수 있다. 한 실시 예에서, 605 동작 내지 620 동작들 중 적어도 하나가 생략되거나, 일부 동작들의 순서가 바뀌거나, 다른 동작이 추가될 수 있다. 또한, 이 하 실시 예에서 각 동작들은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 각 동작들의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수도 있다. 도 6을 참조하면, 605 동작에서, 서버(예: 도 4의 서버)는 공동 편집을 위해 접속된 복수의 전자 장치들 중 접속이 끊긴 적어도 하나의 전자 장치(예: 도 4의 전자 장치)를 식별할 수 있다. 610 동작에서, 서버는 상기 적어도 하나의 전자 장치의 접속이 끊긴 시점과 연관된 제1 체크 포인트를 식 별할 수 있다. 615 동작에서, 서버는 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 제1 체크 포인 트 이후의 편집 명령들을 순차적으로 처리함으로써 획득한 상기 적어도 하나의 전자 장치에 대한 신규 편집 명 령을 저장할 수 있다. 620 동작에서, 서버는 상기 적어도 하나의 전자 장치의 재접속 시 상기 신규 편집 명령을 상기 적어도 하 나의 전자 장치로 전송할 수 있다. 다양한 실시 예에 따르면, 상기 방법은, 상기 신규 편집 명령을 전송한 후, 상기 저장된 상기 적어도 하나의 전 자 장치에 대한 상기 신규 편집 명령을 삭제하는 동작을 더 포함할 수 있다. 다양한 실시 예에 따르면, 상기 방법은, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 수행된 상기 체크 포인트 이후의 편집 명령들을 순차적으로 획득 시마다 제2 체크 포인트를 갱신하는 동작 및 상기 적어도 하나의 전자 장치에 대해 상기 갱신에 대응하는 최신 체크 포인트를 저장하는 동작을 더 포함할 수 있다. 다양한 실시 예에 따르면, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작은, 상기 신규 편집 명령과 상기 최신 체크 포인트를 상기 적어도 하나의 전자 장치로 전송하는 동작을 포함할 수 있다. 다양한 실시 예에 따르면, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작은, 상기 적어 도 하나의 전자 장치의 재접속 시 상기 적어도 하나의 전자 장치로부터 상기 적어도 하나의 전자 장치에서의 현 재 체크 포인트를 획득하는 동작 및 상기 획득된 현재 체크 포인트 및 상기 제1 체크 포인트에 기반하여, 상기 신규 편집 명령을 상기 적어도 하나의 전자 장치로 전송하는 동작을 포함할 수 있다. 다양한 실시 예에 따르면, 상기 방법은, 상기 복수의 전자 장치들 중 접속된 전자 장치들에 의해 편집 명령이 수신될 때마다, 제2 체크 포인트를 갱신하는 동작 및 상기 갱신된 제2 체크 포인트와 함께 상기 수신된 편집 명 령을 상기 접속이 끊긴 적어도 하나의 전자 장치를 제외한 나머지 전자 장치들로 전송하는 동작을 더 포함할 수 있다. 다양한 실시 예에 따르면, 상기 방법은, 상기 접속된 전자 장치들에 의해 편집 명령 수신 시 상기 편집 명령을 전송한 각 전자 장치에서의 현재의 체크 포인트를 상기 편집 명령과 함께 획득하는 동작을 더 포함할 수 있다. 다양한 실시 예에 따르면, 상기 방법은, 상기 접속된 전자 장치들에 의해 편집 명령이 수신될 때 수신되는 편집 명령이 서로 충돌하는지를 식별하는 동작, 상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들을 순차적으로 선택하는 동작 및 상기 순차적인 선택에 따라 상기 제2 체크 포인트를 갱신하여 상기 접속이 끊긴 적어도 하나 의 전자 장치를 제외한 나머지 전자 장치들로 공지하는 동작을 더 포함할 수 있다. 다양한 실시 예에 따르면, 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 저장하는 동작은, 상기 접속 이 끊긴 적어도 하나의 전자 장치의 식별에 대응하여, 상기 적어도 하나의 전자 장치의 메타 데이터를 임시로 저장하는 동작 및 상기 적어도 하나의 전자 장치에 대한 신규 편집 명령을 상기 적어도 하나의 전자 장치의 메 타 데이터에 대응시켜 저장하는 동작을 더 포함할 수 있다. 도 7은 다양한 실시 예에 따른 전자 장치와의 연결 끊김 및 재연결 시의 서버에서의 동작 흐름도이다. 도 7에서 는 공동 편집 세션에 복수의 전자 장치들이 접속한 상태를 예로 들어 설명하기로 한다. 또한, 도 7에서의 설명 의 편의를 위해 도 9a를 참조하기로 한다. 도 9a는 다양한 실시 예에 따른 연결 재개 시의 서버와 전자 장치 간 의 동작을 설명하기 위한 도면이다. 도 7을 참조하면, 750 동작에서, 서버는 상기 복수의 전자 장치들 중 전자 장치와의 연결 끊김 여부 를 식별할 수 있다. 710 동작에서, 전자 장치와의 연결 끊김의 식별에 대응하여, 서버는 전자 장치에 대한 체크 포 인트를 식별할 수 있다. 예를 들어, 모든 전자 장치들은 서버에 접속 시마다 각 전자 장치에서의 체크 포 인트를 서버에 알릴 수 있다. 따라서 서버는 공동 편집 세션을 모니터링함으로써 접속이 끊긴 전자 장치를 식별할 수 있으며, 식별된 전자 장치가 어떠한 전자 장치인지를 알 수 있기 때문에 상기 전자 장치가 가장 최근에 보내 온 체크 포인트를 확인할 수 있다. 따라서 서버는 전자 장치의 접속이 끊긴 시점과 연관된 체크 포인트를 식별할 수 있다. 도 9a를 참조하면, 전자 장치에서 접속이 끊기기 전에 서버에 제공한 체크 포인트를 'checkpoint 4' 라고 할 경우, 전자 장치에서의 명령어 저장 모듈에는 접속이 끊기기 전의 편집 명령들(예: C1, C2, C3, C4)만 저장되어 있을 수 있다. 서버는 전자 장치의 접속이 끊김을 식별한 경우, 접속이 끊긴 전자 장 치의 체크 포인트가 'checkpoint 4'임을 확인할 수 있다. 715 동작에서, 서버는 식별된 체크 포인트 이후의 변경 사항이 있는지를 식별할 수 있다. 예를 들어, 도 9a를 참조하면, 상기 접속이 끊긴 시점과 연관된 체크 포인트 'checkpoint 4' 이후에 다른 전자 장치(예: 전자 장치 2)로부터 편집 명령이 순차적으로 6개가 수신됨에 따라, 서버는 순차적인 편집 명령들과 함께 전자 장치 2에서의 현재 체크 포인트인 'checkpoint 10'을 함께 획득할 수 있다. 이에 따라 서버는 6 개의 편집 명령들을 순차적으로 획득 시마다 서버에서의 체크 포인트(checkpoint 5→6→7→8→9→10)를 하 나씩 증가시킬 수 있다. 720 동작에서, 상기 식별된 체크 포인트 이후의 변경 사항이 있는 경우, 서버는 체크 포인트 이후의 변경 사항을 순차적으로 연산하여 신규 편집 명령으로 관리 및 최신 체크 포인트로 갱신할 수 있다. 또한, 서버 는 6개의 편집 명령들을 순차적으로 연산한 최신 결과(예: 서버 최신 형상)를 가지고 있을 수 있다. 예를 들어, 도 9a를 참조하면, 상기 6개의 편집 명령을 기 설정된 연산 알고리즘에 기반하여 하나로 통합하는 형태로 연산하고, 연산을 통해 전자 장치에 대한 하나의 신규 편집 명령으로 저장할 수 있다. 여기서, 서버는 서버에서의 체크 포인트를 편집 명령의 수신 시마다 하나씩 증가시켜 갱신함에 따라 전자 장치에 대해 상기 갱신된(또는 증가된) 최신 체크 포인트(예: checkpoint 10)를 저장할 수 있다. 725 동작에서, 서버는 전자 장치와 재연결 되는지 여부를 식별할 수 있다. 730 동작에서, 재연결의 식별에 대응하여, 서버는 갱신된 최신 체크 포인트 및 순차 연산된 신규 편집 명령을 재연결된 전자 장치로 전달할 수 있다. 따라서 전자 장치의 명령어 저장 모듈에 하나의 결과물 형태로 신규 편집 명 령이 저장되므로, 이러한 신규 편집 명령 하나에 의한 변경 사항을 빠르게 반영할 수 있다. 도 8은 다양한 실시 예에 따른 서버와의 연결 끊김 및 재연결 시의 전자 장치에서의 동작 흐름도이다. 또한, 도 8에서의 설명의 편의를 위해 도 9b를 참조하기로 한다. 도 9b는 다양한 실시 예에 따른 연결 재개 시의 전자 장 치의 예시적인 출력 화면을 도시한 도면이다. 805 동작에서, 전자 장치는 서버와의 접속 시마다 체크 포인트를 전달할 수 있다. 810 동작에서, 전 자 장치는 체크 포인트 이후의 변경 사항을 포함하는 편집 명령을 서버로부터 획득할 수 있다. 예를 들어, 전자 장치는 공동 편집 시에 서버를 통해 다른 전자 장치에 의한 편집 명령을 수신할 수 있으며, 상기 수신된 편집 명령을 공동 편집 화면에 반영한 후 체크 포인트를 최신 체크 포인트로 갱신할 수 있 다. 이와 같이 전자 장치는 서버에 접속 시 동기화를 위해 전자 장치에서의 최신 체크 포인트 즉, 현재의 체크 포인트를 서버로 알려줄 수 있으며, 이에 따라 현재의 체크 포인트 이후의 편집 명령을 획득할 수 있다. 이와 같이 서버에 접속된 동안에는 전자 장치에서의 편집 명령을 전송할 수 있으며, 서버로부터는 다른 전자 장치에 의해 수행된 편집 명령을 획득할 수도 있다. 하지만, 서버에 접속이 일시적으로 끊기게 되면, 전자 장치에서의 편집 명령은 서버로 전달되지 못하며, 마찬가지로 다른 전 자 장치에 의해 수행된 편집 명령도 획득할 수 없어 편집 명령을 처리하기 위한 동작은 중지될 수 있다. 815 동작에서, 전자 장치는 서버와의 연결 끊김 이후 재연결 되는지 여부를 식별할 수 있다. 만일 재 연결되는 경우, 820 동작에서, 전자 장치는 체크 포인트 이후의 변경 사항을 순차적으로 연산한 신규 편집 명령을 서버로부터 획득할 수 있다. 여기서, 재연결 시에는 전자 장치는 신규 편집 명령과 함께 최신 체크 포인트를 획득할 수 있으며, 명령어 저장 모듈에 한번에 저장될 수 있다. 반면, 연결 끊김이 발생하지 않 는 경우에는 전술한 동작을 반복 수행할 수 있다. 825 동작에서, 서버로부터 신규 편집 명령 수신 시, 전자 장치는 전자 장치의 버퍼 내에 편집 명령이 존재하는지 여부를 식별할 수 있다. 예를 들어, 서버에 접속이 일시적으로 끊긴 상황에서 사용자에 의해 전자 장치에서의 편집이 수행되는 경우가 있을 수 있다. 이러한 경우 전자 장치에서의 편집 명 령은 서버로 전달되지는 않았지만 버퍼 내에는 서버로 전달되지 못한 편집 명령이 존재할 수 있다. 830 동작에서, 상기 버퍼 내에 편집 명령이 존재하는 경우에 대응하여, 전자 장치는 획득한 신규 편집 명 령과 버퍼 내의 편집 명령을 비교하여 연산 후 체크 포인트 갱신을 수행할 수 있다. 반면, 상기 버퍼 내에 편집 명령이 존재하지 않는 경우에는 전자 장치는 840 동작을 수행할 수 있다. 835 동작에서, 전자 장치는 갱신된 체크 포인트와 연산된 편집 명령을 서버로 전송할 수 있으며, 840 동작에서, 전자 장치는 신규 편집 명령 또는 연산된 편집 명령을 반영한 공동 편집 결과를 출력할 수 있다. 예를 들어, 전자 장치는 도 9b에 도시된 바와 같이, 접속이 일시적으로 끊기는 상황일 경우 공동 편 집 화면 상에 이를 알리는 내용을 출력할 수 있으며, 재연결 시에는 최신 체크 포인트에 해당하는 신규 편 집 명령이 한 번에 반영된 공동 편집 화면을 표시할 수 있다. 예를 들어, 도 9b에 도시된 바와 같이, 신규 편집 명령이 반영된 공동 편집 화면은 편집 명령에 따른 편집 사항을 한 번에 표시하는 화면일 수 있으며, 하나 의 결과물로서 스냅샷 형식으로 표시하는 화면일 수도 있다. 도 10은 다양한 실시 예에 따른 편집 명령 충돌 시의 서버에서의 동작을 설명하기 위한 도면이다. 도 10을 참조하면, 공동 편집 환경의 경우 복수의 전자 장치들에 의해 하나의 컨텐트에 대해 동일한 체크 포인 트를 가지는 둘 이상의 편집 명령들이 동시에 입력되는 상황이 발생할 수 있다. 따라서 동일한 체크 포인트를 가지는 편집 명령들이 중복 수신되는 경우가 발생하면, 이러한 편집 명령들이 서로 충돌되지 않도록 조정할 필 요가 있다. 이를 위해 서버 내의 명령 연산 모듈은 충돌이 발생하는 편집 명령들에 대한 순서를 조정하는 동작을 수행할 수 있다. 도 10을 참조하면, 명령 연산 모듈은 복수의 전자 장치들(예: 클라이언트 1, 클라이언트 2)에 의해 편집 명령들(1001, 1004)이 수신될 때 수신되는 편집 명령들(1001, 1004)이 서로 충돌하는지를 식별 하고, 상기 충돌 발생 시, 상기 충돌이 발생한 편집 명령들을 순차적으로 선택할 수 있다. 예를 들어, 도 10을 참조하면, 명령 연산 모듈은 상기 충돌이 발생한 편집 명령들을 순차적으로 선택함에 있어, 서버 시간 기준으로 먼저 수신된 편집 명령에 대한 체크 포인트를 유지하고, 나중에 수신된 편집 명 령에 대한 체크 포인트를 변경할 수 있다. 여기서, 도 10에 도시된 바와 같이 클라이언트 1의 형상과 클라이언트 2의 형상은 \"가나다\"로 형상이 일치하는 상황을 전제로 한다. 이러한 전제 하에 클라이언트 1은 \"가A나다\" 로 변경하고, 클라이언트 2는 \"가xyz나다\"로 변경하여 서로 현재의 체크 포인트를 checkpoint 0 → checkpoint 1로의 변경을 요청하고 있는 상황일 수 있다. 이에 대응하여, 서버의 명령 연산 모듈은 편집 명령의 순서를 조정하고, 이러한 조정을 통해 실제 명 령 연산값을 수정할 수 있다. 따라서 클라이언트 1로의 편집 명령이 클라이언트 2로부터의 편집 명령보다 앞선다고 가정을 했을 때, 클라이언 트 1의 checkpoint1의 편집 명령(1-\"A\"-2)(예:\"가A나다\" 형상)을 명령 저장 모듈에 먼저 저장할 수 있으며, 상기 편집 명령의 저장에 대응하여 체크 포인트 checkpoint 0을 하나 증가시킨 checkpoint 1로 갱신하 여 저장할 수 있다. 이어, 클라이언트 2의 checkpoint 1에 해당하는 편집 명령(1-\"xyz\"-2)(예:\"가xyz\"형상)은, 먼저 수신된 것으로 간주된 클라이언트 1의 checkpoint 1과 충돌할 수 있다. 따라서 명령 연산 모듈은 현 재의 체크 포인트 checkpoint 0을 checkpoint 1로 변경하는 것이 아닌 checkpoint 2로 변경한 후 상기 클라이언트 2의 편집 명령을 추가 연산하는 동작을 수행할 수 있다. 일 실시 예에 따르면, 명령 연산 모듈에서 사용되는 연산 알고리즘의 종류는 다양할 수 있으며, 그 종류에 는 제한이 없을 수 있다. 예를 들어, 오퍼레이셔널 트랜스포밍(Operational Transforming) 방식의 연산 알고리 즘을 예로 들어 설명하면, checkpoint 1의 변경 명령 값인 1-\"A\"-2의 \"A\"값이 추가로 들어왔음을 인지하고 1- \"xyz\"-2 의 앞선 1 값을 \"A\" 만큼의 길이인 1을 추가로 더한 2로 연산 처리할 수 있다. 이어, 명령 연산 모듈은 \"xyz\"에 대해서는 문자 추가에 해당하므로 별도의 연산 처리 없이 넘긴 후, 마지 막으로 2의 값이 checkpoint 1의 2와 동일함을 확인한 후 별도의 연산 처리를 하지 않으며, 이에 따라 최종적으 로 checkpoint 2의 값은 2-\"xyz\"-2 로 연산됨을 확인할 수 있다. 상기와 같은 충돌 조정 과정을 통해 조 정된 체크 포인트는 공동 편집에 참여하고 있는 모든 전자 장치들이 알 수 있도록 전체 전자 장치들로 통지될 수 있다. 도 11은 다양한 실시 예에 따른 서버에서의 명령어 저장 방법을 설명하기 위한 도면이다. 도 11에서의 동작은 서버 내의 명령어 저장 모듈에 의해 수행될 수 있다. 도 11을 참조하면, 명령어 저장 모듈은 서버가 수신한 편집 명령을 체크 포인트를 이용하여 순번을 부여하고 순차적으로 저장하는 역할을 할 수 있다. 이러한 편집 명령은 크게 문서의 길이를 표현하는 숫자와 추 가하고자 하는 문자 및 삭제하고자 하는 숫자를 포함할 수 있다. 예를 들어, 명령어 저장 모듈은 편집용 전자 문서의 내용을 수정하는 수정 명령, 문서에 삽입되어 있는 텍스트, 이미지, 표와 같은 객체를 삭제하는 삭 제 명령 및 문서에 상기와 같은 객체를 추가하는 추가 명령의 형태로 편집 명령을 저장할 수 있다. 예를 들어, 오퍼레이셔널 트랜스포밍 연산 알고리즘에 기반하여, 최초 문서 내의 내용 예컨대, \"가나다라마바사아자차카타 파하\"인 기본 형상에 대해 \"가A나다라마바사아자차카타파하\"로 편집을 수행하는 경우를 예로 들어 설명하기로 한다. 명령어 저장 모듈은 \"가A나다라마바사아자차카타파하\" 와 같은 형태의 모든 데이터를 가지고 처리하는 것 이 아니라, 이를 1-\"A\"-13 와 같은 간략한 명령어 형태로 저장할 수 있다. 예를 들어, 1-\"A\"-13 와 같은 명령어 는, \"A\" 앞에 하나의 데이터(예: '가')가 존재하며, \"A\" 뒤에 13개의 데이터(예: '나다라마바사아자차카타파 하')가 존재함을 나타낼 수 있다. 도 11을 참조하면, 명령어 저장 모듈 내의 C1 명령어(예: 1-\"A\"-2) 는, \"A\" 앞에 하나의 데이터(예: '가')가 존재하며, \"A\" 뒤에 2개의 데이터(예: '나다')가 존재함을 나타내는 것으로, 기본 형상 \"가나다\"에 C1 명령어를 반영할 경우 \"가A나다\"와 같은 기본 형상이 도출될 수 있다. C2 명령어(예: 2-\"B\"-2) 는, \"B\" 앞에 2 의 데이터(예: '가A')가 존재하며, \"B\" 뒤에 2개의 데이터(예: '나다')가 존재함을 나타내는 것으로, C1 명령어 에 C2 명령어를 반영할 경우 \"가AB나다\"와 같은 기본 형상이 도출될 수 있다. C3 명령어(예: D\"1\"4)는, 첫번째 (예: '가')는 삭제(delete)하며, 그 이후에 4개의 데이터(예: 'AB나다')가 존재함을 나타내는 것으로, C2 명령 어에 C3 명령어를 반영할 경우 \"AB나다\"와 같은 기본 형상이 도출될 수 있다. C4 명령어(예: 4-\"CD\") 는, \"CD\" 앞에 4개의 데이터가 존재함을 나타내는 것으로, C3 명령어에 C4 명령어를 반영할 경우 \"AB나다CD\"와 같은 기본 형상이 도출될 수 있다. 이와 같이 서버에서 이용되는 간략한 명령어 형태는 명령어 저장 모듈 내의 저장 공간을 효율적으로 활용하는데 이용될 수 있으며, 다른 편집 명령의 연산으로 인해 가중되는 것이 없기 때문에 빠른 처리가 가능할 수 있다. 따라서, 기본 형상에 명령어 저장 모듈의 명령들을 순차적으로 연산함으로써 전자 장치에 대해 새로운 형태 즉, 신규 형상 도출이 가능한 명령을 저장할 수 있다. 도 12는 다양한 실시 예에 따른 각 전자 장치에서의 공동 편집 시의 화면 예시도이다. 도 12에서는, 서로 다른 종류의 전자 장치(1210, 1220, 1230)에서는 현재 공동으로 작업 중인 편집 화면을 예시 하고 있다. 도 12에 도시된 바와 같이 각 전자 장치(1210, 1220, 1230) 상에는 공통적인 편집 화면이 제공될 수 있다. 예를 들어, 공동 편집 화면이란 동일한 전자 문서를 편집하는 화면을 의미하는 것으로, 각 전자 장치 (1210, 1220, 1230) 상에 표시되는 공동 편집 화면 자체는 디스플레이의 크기 또는 설정 방식에 따라 표시되는 것이다를 수 있다. 공동 편집에 참여하는 복수의 전자 장치(1210, 1220, 1230) 중 적어도 하나의 전자 장치의 사용자는 입력 수단 (예: 키보드, 스타일러스 펜)을 이용하여 공동 편집 화면 상에 표시되는 컨텐트에 대한 편집할 수 있다. 예를 들어, 텍스트, 이미지 및 동영상을 포함한 다양한 종류의 컨텐트에 대한 편집을 통해 사용자는 내용을 수정하거 나 삽입되어 있는 텍스트, 이미지, 표와 같은 객체를 삭제하거나 이를 추가할 수 있다. 이러한 편집에 대응하는 편집 명령은 서버를 통해 다른 모든 전자 장치로 전송될 수 있으며, 상기 편집 명령을 수신한 각각의 전자 장치는 상기 편집 명령에 대응하는 변경 사항을 공동 편집 화면 상에 반영함으로써 공동 편집에 참여 중인 복수 의 전자 장치 상에 표시되고 있는 컨텐트가 항상 동일한 편집 상태로 유지될 수 있다. 특히, 일시적으로 통신이 지연되거나 연결이 끊긴 전자 장치가 발생할지라도 상기 연결이 끊긴 전자 장치를 대신하여 서버에서 연결 끊김 동안에 발생하는 다른 사용자에 의한 편집 명령에 의한 변경 사항들을 주기적으로 또는 편집 명령 발생 시 마다 미리 연산하여 상기 전자 장치와 연관시켜 하나의 결과물로 저장 및 관리할 수 있다. 이후, 상기 전자 장 치와의 재연결 시 서버가 상기 전자 장치에 대해 개별적으로 저장해 놓았던 결과물을 제공함으로써, 상기 전자 장치에서는 새롭게 생성된 결과물만 한 번에 연산하여 출력하면 되므로, 상기 전자 장치에서의 과도한 데이터 처리로 인한 부하를 감소시킬 수 있다. 이와 같이 서버를 통해서는 복수의 전자 장치(1210, 1220, 1230)의 사용자들이 동일한 컨텐트에 대해 실시간으로 동시 편집이 가능할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3a 도면3b 도면4 도면5 도면6 도면7 도면8 도면9a 도면9b 도면10 도면11 도면12"}
{"patent_id": "10-2021-0161876", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시 예에 따른 네트워크 환경 내의 전자 장치의 블럭도이다. 도 2는 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 시스템 구성도이다. 도 3a는 연결 끊김 시의 서버와 전자 장치의 동작을 설명하기 위한 도면이다. 도 3b는 연결 재개 시의 서버와 전자 장치 간의 동작에 따른 전자 장치의 예시적인 출력 화면을 도시한 도면이 다. 도 4는 다양한 실시 예에 따른 공동 편집을 위한 서버 및 전자 장치의 내부 블록 구성도이다. 도 5는 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 서버의 동작을 설명하기 위한 상세 블록도이 다. 도 6은 다양한 실시 예에 따른 공동 편집 서비스를 제공하기 위한 서버에서의 동작 흐름도이다. 도 7은 다양한 실시 예에 따른 전자 장치와의 연결 끊김 및 재연결 시의 서버에서의 동작 흐름도이다. 도 8은 다양한 실시 예에 따른 서버와의 연결 끊김 및 재연결 시의 전자 장치에서의 동작 흐름도이다. 도 9a는 다양한 실시 예에 따른 연결 재개 시의 서버와 전자 장치 간의 동작을 설명하기 위한 도면이다. 도 9b는 다양한 실시 예에 따른 연결 재개 시의 전자 장치의 예시적인 출력 화면을 도시한 도면이다. 도 10은 다양한 실시 예에 따른 편집 명령 충돌 시의 서버에서의 동작을 설명하기 위한 도면이다. 도 11은 다양한 실시 예에 따른 서버에서의 명령어 저장 방법을 설명하기 위한 도면이다. 도 12는 다양한 실시 예에 따른 각 전자 장치에서의 공동 편집 시의 화면 예시도이다. 도면의 설명과 관련하여, 동일 또는 유사한 구성 요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있 다."}
