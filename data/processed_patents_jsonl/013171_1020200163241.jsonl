{"patent_id": "10-2020-0163241", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0074580", "출원번호": "10-2020-0163241", "발명의 명칭": "전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "호종현"}}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,통신 인터페이스; 신경망 모델을 저장하는 메모리; 및프로세서;를 포함하고,상기 프로세서는,가상 로봇 및 상기 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성하고,상기 통신 인터페이스를 통해 로봇 제어 장치로부터 상기 가상 로봇을 제어하기 위한 제어 정보를 수신하고,상기 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 상기 가상 환경 내에서상기 가상 로봇의 위치 정보 및 상기 가상 로봇과 오브젝트의 심플(simple) 형상 간의 제1 거리 정보를 획득하고,상기 가상 로봇의 위치 정보, 상기 오브젝트에 대한 정보 및 상기 제1 거리 정보를 상기 신경망 모델에 입력하여 상기 오브젝트의 콤플렉스(complex) 형상 정보를 획득하고,상기 오브젝트의 상기 콤플렉스 형상 정보에 기초하여 상기 가상 로봇과 상기 오브젝트 사이의 제2 거리 정보를획득하고,상기 통신 인터페이스를 통해 상기 제2 거리 정보를 상기 로봇 제어 장치로 전송하는, 전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 오브젝트에 대한 정보는, 상기 가상 환경 내에서 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍스(vertex) 정보, 상기 오브젝트의 변형(transform) 정보 또는 상기 오브젝트를 포함하는 가상 이미지(virtual image) 중 적어도 하나를 포함하는,전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 오브젝트의 변형 정보는,상기 가상 환경 내에서 상기 오브젝트의 확대 비율, 상기 오브젝트의 회전(rotation) 정보 또는 상기 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함하는, 전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 오브젝트의 심플 형상은,상기 오브젝트를 다면체형, 구형 또는 원통형 중 적어도 하나로 나타낸 형상이고, 상기 오브젝트의 콤플렉스 형상은, 상기 오브젝트의 트라이앵글 매시(triangle mesh)로 나타낸 형상인, 전자 장치.공개특허 10-2022-0074580-3-청구항 5 제1항에 있어서,상기 가상 로봇은,가상 라이다(LiDAR) 센서를 포함하고, 상기 제2 거리 정보는, 상기 가상 라이다 센서가 상기 가상 로봇과 상기 오브젝트 사이의 거리를 센싱하여 획득한 센싱 데이터 형태인,전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 프로세서는,상기 제2 거리 정보를 상기 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수신되면, 상기 수신된 제어 정보에기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하고, 상기 통신 인터페이스를 통해 상기 주행 시뮬레이션에 기초하여 획득된 제3 거리 정보를 상기 로봇 제어 장치로전송하는, 전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 신경망 모델은,입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 상기 입력 학습 데이터는, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보, 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍스(vertex) 정보, 상기 오브젝트의 변형 정보, 상기 오브젝트를 포함하는 가상 이미지 및 상기 가상 로봇과 오브젝트의 심플 형상 간의 거리 정보를 포함하며, 상기 출력 학습 데이터는, 상기 오브젝트의 콤플렉스 형상 정보를 포함하는, 전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 로봇 제어 장치로부터 수신된 제어 정보는,상기 가상 환경 내에서 상기 가상 로봇의 이동 방향 또는 이동 속도 중 적어도 하나를 제어하기 위한 정보인,전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 전자 장치와 상기 로봇 제어 장치 각각은,서로 다른 명령어 체계에 기초하여 구동되는, 전자 장치."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "전자 장치의 제어 방법에 있어서,가상 로봇 및 상기 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성하는 단계;상기 통신 인터페이스를 통해 로봇 제어 장치로부터 상기 가상 로봇을 제어하기 위한 제어 정보를 수신하는 단계;상기 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 상기 가상 환경 내에서공개특허 10-2022-0074580-4-상기 가상 로봇의 위치 정보 및 상기 가상 로봇과 오브젝트의 심플(simiple) 형상 간의 제1 거리 정보를 획득하는 단계;상기 가상 로봇의 위치 정보, 상기 오브젝트에 대한 정보 및 상기 제1 거리 정보를 상기 신경망 모델에 입력하여 상기 오브젝트의 콤플렉스(complex) 형상 정보를 획득하는 단계;상기 오브젝트의 상기 콤플렉스 형상 정보에 기초하여 상기 가상 로봇과 상기 오브젝트 사이의 제2 거리 정보를획득하는 단계; 및상기 제2 거리 정보를 상기 로봇 제어 장치로 전송하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 오브젝트에 대한 정보는, 상기 가상 환경 내에서 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍스(vertex) 정보, 상기 오브젝트의 변형(transform) 정보 또는 상기 오브젝트를 포함하는 가상 이미지(virtual image) 중 적어도 하나를 포함하는,제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 오브젝트의 변형 정보는,상기 가상 환경 내에서 상기 오브젝트의 확대 비율, 상기 오브젝트의 회전(rotation) 정보 또는 상기 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함하는, 제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,상기 오브젝트의 심플 형상은,상기 오브젝트를 다면체형, 구형 또는 원통형 중 적어도 하나로 나타낸 형상이고, 상기 오브젝트의 콤플렉스 형상은, 상기 오브젝트의 트라이앵글 매시(triangle mesh)로 나타낸 형상인, 제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서,상기 가상 로봇은,가상 라이다(LiDAR) 센서를 포함하고, 상기 제2 거리 정보는, 상기 가상 라이다 센서가 상기 가상 로봇과 상기 오브젝트 사이의 거리를 센싱하여 획득한 센싱 데이터 형태인,제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서,상기 제2 거리 정보를 상기 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수신되면, 상기 수신된 제어 정보에기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 단계; 및상기 주행 시뮬레이션에 기초하여 획득된 제3 거리 정보를 상기 로봇 제어 장치로 전송하는 단계;를 더 포함하는, 제어 방법.공개특허 10-2022-0074580-5-청구항 16 제10항에 있어서,상기 신경망 모델은,입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 상기 입력 학습 데이터는, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보, 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍스(vertex) 정보, 상기 오브젝트의 변형 정보, 상기 오브젝트를 포함하는 가상 이미지 및 상기 가상 로봇과 오브젝트의 심플 형상 간의 거리 정보를 포함하며, 상기 출력 학습 데이터는, 상기 오브젝트의 콤플렉스 형상 정보를 포함하는, 제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,상기 로봇 제어 장치로부터 수신된 제어 정보는,상기 가상 환경 내에서 상기 가상 로봇의 이동 방향 또는 이동 속도 중 적어도 하나를 제어하기 위한 정보인,제어 방법."}
{"patent_id": "10-2020-0163241", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제10항에 있어서,상기 전자 장치와 상기 로봇 제어 장치 각각은,서로 다른 명령어 체계에 기초하여 구동되는, 제어 방법."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 본 개시에 따른 전자 장치는, 통신 인터페이스, 신경망 모델을 저장하는 메모리 및 프로 세서를 포함하고, 프로세서는, 가상 로봇 및 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성하고, 통신 인터페이스를 통해 로봇 제어 장치로부터 가상 로봇을 제어하기 위한 제어 정보를 수신하고, 제어 정보에 기초하 여 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 가상 환경 내에서 가상 로봇의 위치 정보 및 가상 로봇 과 오브젝트의 심플(simple) 형상 간의 제1 거리 정보를 획득하고, 가상 로봇의 위치 정보, 오브젝트에 대한 정 보 및 제1 거리 정보를 신경망 모델에 입력하여 오브젝트의 콤플렉스(complex) 형상 정보를 획득하고, 오브젝트 의 콤플렉스 형상 정보에 기초하여 가상 로봇과 오브젝트 사이의 제2 거리 정보를 획득하고, 통신 인터페이스를 통해 제2 거리 정보를 로봇 제어 장치로 전송한다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 그 제어 방법으로, 보다 상세하게는, 시뮬레이션 환경에서 센싱 데이터를 획득하는 가 상 로봇을 제공하는 전자 장치 및 그 제어 방법에 관한 것이다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 기술의 발달에 힘입어 다양한 로봇(robot)이 개발되고 있다. 최근에는, 로봇의 제작 비용을 줄이고 안전성 을 사전에 체크하기 위해, 가상 환경에서 가상 로봇을 구성하고 시뮬레이션하는 시뮬레이터(simulator)가 활발 하게 이용되고 있다. 한편, 시뮬레이션 환경은 가상의 환경이므로 실제 환경에서 발생되는 여러 오차를 반영하지 못할 수 있다. 가령, 실제 센서는 실제 환경에 존재하는 오브젝트의 형상을 고려하여 오브젝트와 로봇 간의 거리를 감지하는데 반해, 가상 환경은 실제 환경과 최대한 유사하게 구성하더라도 가상 환경 내의 오브젝트와 가상 로봇 간의 거리 는 오차가 발생할 수 있다. 따라서, 가상 센서의 센싱 데이터를 그대로 적용하여 실제 로봇을 제작할 경우, 실제 로봇이 가상 로봇과 다르 게 작동하거나 오작동하는 등의 문제가 발생할 수 있다. 이러한 문제를 방지하기 위해 가상 환경 내 오브젝트와 가상 로봇 간의 거리 정보를 획득함에 있어서, 오브젝트 의 실제 형상을 최대한 고려하여 거리 정보를 획득하기 위한 방법에 대한 요구가 있었다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 필요성에 따른 것으로, 본 개시의 목적은 오브젝트의 실제 형상을 고려하여 오브젝트와 가상 로봇 간의 거리를 감지하는 전자 장치 및 그 제어 방법을 제공함에 있다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 상술한 목적을 달성하기 위한 일 실시 예에 따르면 전자 장치는, 통신 인터페이스, 신경망 모델을 저 장하는 메모리 및 프로세서를 포함하고, 상기 프로세서는, 가상 로봇 및 상기 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성하고, 상기 통신 인터페이스를 통해 로봇 제어 장치로부터 상기 가상 로봇을 제어하기 위 한 제어 정보를 수신하고, 상기 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보 및 상기 가상 로봇과 오브젝트의 심플(simple) 형상 간의 제1 거리 정보를 획득하고, 상기 가상 로봇의 위치 정보, 상기 오브젝트에 대한 정보 및 상기 제1 거리 정 보를 상기 신경망 모델에 입력하여 상기 오브젝트의 콤플렉스(complex) 형상 정보를 획득하고, 상기 오브젝트의 상기 콤플렉스 형상 정보에 기초하여 상기 가상 로봇과 상기 오브젝트 사이의 제2 거리 정보를 획득하고, 상기 통신 인터페이스를 통해 상기 제2 거리 정보를 상기 로봇 제어 장치로 전송한다. 여기서, 상기 오브젝트에 대한 정보는, 상기 가상 환경 내에서 상기 오브젝트의 위치 정보, 상기 오브젝트의 버 텍스(vertex) 정보, 상기 오브젝트의 변형(transform) 정보 또는 상기 오브젝트를 포함하는 가상 이미지 (virtual image) 중 적어도 하나를 포함할 수 있다. 또한, 상기 오브젝트의 변형 정보는, 상기 가상 환경 내에서 상기 오브젝트의 확대 비율, 상기 오브젝트의 회전 (rotation) 정보 또는 상기 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함할 수 있다. 또한, 상기 오브젝트의 심플 형상은, 상기 오브젝트를 다면체형, 구형 또는 원통형 중 적어도 하나로 나타낸 형 상이고, 상기 오브젝트의 콤플렉스 형상은, 상기 오브젝트의 트라이앵글 매시(triangle mesh)로 나타낸 형상일 수 있다. 또한, 상기 가상 로봇은, 가상 라이다(LiDAR) 센서를 포함하고, 상기 제2 거리 정보는, 상기 가상 라이다 센서 가 상기 가상 로봇과 상기 오브젝트 사이의 거리를 센싱하여 획득한 센싱 데이터 형태일 수 있다. 또한, 상기 프로세서는, 상기 제2 거리 정보를 상기 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수신되면, 상기 수신된 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하고, 상기 통신 인터페이스 를 통해 상기 주행 시뮬레이션에 기초하여 획득된 제3 거리 정보를 상기 로봇 제어 장치로 전송할 수 있다. 또한, 상기 신경망 모델은, 입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 상기 입력 학습 데이 터는, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보, 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍 스(vertex) 정보, 상기 오브젝트의 변형 정보, 상기 오브젝트를 포함하는 가상 이미지 및 상기 가상 로봇과 오 브젝트의 심플 형상 간의 거리 정보를 포함하며, 상기 출력 학습 데이터는, 상기 오브젝트의 콤플렉스 형상 정 보를 포함할 수 있다. 또한, 상기 로봇 제어 장치로부터 수신된 제어 정보는, 상기 가상 환경 내에서 상기 가상 로봇의 이동 방향 또 는 이동 속도 중 적어도 하나를 제어하기 위한 정보일 수 있다. 또한, 상기 전자 장치와 상기 로봇 제어 장치 각각은, 서로 다른 명령어 체계에 기초하여 구동될 수 있다. 본 개시의 상술한 목적을 달성하기 위한 일 실시 예에 따른 전자 장치의 제어 방법은, 가상 로봇 및 상기 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성하는 단계, 상기 통신 인터페이스를 통해 로봇 제어 장치로부 터 상기 가상 로봇을 제어하기 위한 제어 정보를 수신하는 단계, 상기 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보 및 상기 가상 로봇 과 오브젝트의 심플(simiple) 형상 간의 제1 거리 정보를 획득하는 단계, 상기 가상 로봇의 위치 정보, 상기 오 브젝트에 대한 정보 및 상기 제1 거리 정보를 상기 신경망 모델에 입력하여 상기 오브젝트의 콤플렉스(complex) 형상 정보를 획득하는 단계, 상기 오브젝트의 상기 콤플렉스 형상 정보에 기초하여 상기 가상 로봇과 상기 오브 젝트 사이의 제2 거리 정보를 획득하는 단계 및 상기 제2 거리 정보를 상기 로봇 제어 장치로 전송하는 단계를 포함한다. 여기서, 상기 오브젝트에 대한 정보는, 상기 가상 환경 내에서 상기 오브젝트의 위치 정보, 상기 오브젝트의 버 텍스(vertex) 정보, 상기 오브젝트의 변형(transform) 정보 또는 상기 오브젝트를 포함하는 가상 이미지 (virtual image) 중 적어도 하나를 포함할 수 있다. 또한, 상기 오브젝트의 변형 정보는, 기 가상 환경 내에서 상기 오브젝트의 확대 비율, 상기 오브젝트의 회전 (rotation) 정보 또는 상기 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함할 수 있다. 또한, 상기 오브젝트의 심플 형상은, 상기 오브젝트를 다면체형, 구형 또는 원통형 중 적어도 하나로 나타낸 형 상이고, 상기 오브젝트의 콤플렉스 형상은, 상기 오브젝트의 트라이앵글 매시(triangle mesh)로 나타낸 형상일 수 있다. 또한, 상기 가상 로봇은, 가상 라이다(LiDAR) 센서를 포함하고, 상기 제2 거리 정보는, 상기 가상 라이다 센서 가 상기 가상 로봇과 상기 오브젝트 사이의 거리를 센싱하여 획득한 센싱 데이터 형태일 수 있다. 또한, 상기 제2 거리 정보를 상기 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수신되면, 상기 수신된 제어 정보에 기초하여 상기 가상 로봇에 대한 주행 시뮬레이션을 수행하는 단계 및 상기 주행 시뮬레이션에 기초하여 획득된 제3 거리 정보를 상기 로봇 제어 장치로 전송하는 단계를 더 포함할 수 있다. 또한, 상기 신경망 모델은, 입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 상기 입력 학습 데이 터는, 상기 가상 환경 내에서 상기 가상 로봇의 위치 정보, 상기 오브젝트의 위치 정보, 상기 오브젝트의 버텍 스(vertex) 정보, 상기 오브젝트의 변형 정보, 상기 오브젝트를 포함하는 가상 이미지 및 상기 가상 로봇과 오 브젝트의 심플 형상 간의 거리 정보를 포함하며, 상기 출력 학습 데이터는, 상기 오브젝트의 콤플렉스 형상 정 보를 포함할 수 있다. 또한, 상기 로봇 제어 장치로부터 수신된 제어 정보는, 상기 가상 환경 내에서 상기 가상 로봇의 이동 방향 또 는 이동 속도 중 적어도 하나를 제어하기 위한 정보일 수 있다. 또한, 상기 전자 장치와 상기 로봇 제어 장치 각각은, 서로 다른 명령어 체계에 기초하여 구동될 수 있다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시 예들에 따르면, 전자 장치는 가상 공간 내 오브젝트를 실제 형상과 유사하게 식별한 뒤, 오브젝트와 로봇 간의 거리를 감지할 수 있다. 실제 형상과 유사하게 식별된 오브젝트의 형상 정보에 기초하여 거리를 감지하므로, 가상 환경에서 획득한 센싱 데이터를 이용하여 로봇 제어 장치가 생성한 제어 정보가 높은 정확도를 가질 수 있다."}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 본 개시에 대해 구체적으로 설명하기로 한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시의 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는바, 특정 실시 예들을 도 면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하려는 것이 아니며, 개시된 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이 해되어야 한다. 실시 예들을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 구성요소들은 용어들에 의해 한정되 어서는 안 된다. 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또 는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 아래에서는 첨부한 도면을 참고하여 본 개시의 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식 을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 개시는 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시 예에 한정되지 않는다. 그리고 도면에서 본 개시를 명확하게 설명하기 위해 서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도 1은 본 개시의 일 실시 예에 따른 시뮬레이션 시스템의 컨셉을 설명하기 위한 도면이다. 일 실시 예에 따른 전자 장치는 가상 로봇과 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생 성할 수 있다. 그리고, 전자 장치는 가상 환경에서 가상 로봇의 주행 시뮬레이션을 수행할 수 있다. 실제 로봇(10’)의 제조에는 많은 비용과 오랜 개발 기간이 요구되며, 높은 안전성을 필요로 하는 등 제한 조건 이 많다. 이에 따라, 전자 장치는 가상 로봇이 주행 또는 동작 가능한 가상 환경을 제공하며, 가상 환 경 내 가상 로봇의 주행을 통해 실제 로봇(10’)의 주행을 예측할 수 있다. 구체적으로, 가상 로봇이 주행 가능한 가상 환경을 제공하는 전자 장치와 실제 로봇(10’)에 구비 되는 로봇 제어 장치 간에 서로 연동하여 동작함으로써, 실제 로봇(10’)의 구동, 동작, 기능 등을 예측 또 는 확인할 수 있는 시뮬레이션 시스템이 구비될 수 있다. 시뮬레이션 시스템에 따르면, 가상 환경 내 가상 로봇은 가상 센서를 구비하며, 가상 센서를 통해 가상 환 경과 관련된 센싱 데이터를 획득할 수 있다. 일 예로, 가상 센서가 라이다(LiDAR: Light Detection And Ranging) 센서인 경우, 가상 로봇은 가상 라이다 센서를 이용하여 가상 환경에 존재하는 오브젝트에 대한 거리 정보를 획득할 수 있다. 이어서, 가상 로봇은 획득된 센싱 데이터를 바탕으로 주행할 수 있다. 한편, 전자 장치는 가상 로봇에 구비된 가상 센서가 획득한 센싱 데이터를 로봇 제어 장치로 전송할 수 있다. 여기서, 로봇 제어 장치는 실제 로봇(10’)에 구비되어, 센싱 데이터에 기초하여 실제 로봇(10 ’)을 구성하는 복수의 컴포넌트(예를 들어, 액츄에이터(actuator), 구동부 등)을 제어하기 위한 제어 신호 를 생성하는 일 구성 요소를 의미할 수 있다. 로봇 제어 장치에 대한 구체적인 설명은 후술하도록 한다. 이어서, 로봇 제어 장치는 제어 신호를 전자 장치로 전송할 수 있다. 도 1을 참조하면, 가상 로봇이 가상 환경 내에서 의자와의 거리 d1을 센싱하여 센싱 데이터를 획득한 경우 를 상정할 수 있다. 이 경우, 전자 장치는 센싱 데이터를 로봇 제어 장치로 전송할 수 있다. 일 실시 예에 따라 로봇 제어 장치는 전자 장치로부터 센싱 데이터가 수신되면, 실제 로봇(10’)에 구 비된 센서를 통해 센싱 데이터를 획득한 경우와 동일하게, 전자 장치로부터 수신된 센싱 데이터에 기초하 여 복수의 컴포넌트(예를 들어, 액츄에이터(actuator), 구동부 등)을 제어하기 위한 제어 신호를 생성할 수 있 다. 예를 들어, 로봇 제어 장치는 실제 로봇(10’)에 구비된 센서가 실제 환경 내에서 의자와의 거리 d1을 센싱 하여 센싱 데이터를 획득한 경우와 동일하게, 전자 장치로부터 수신된 센싱 데이터에 기초하여 실제 로봇 (10’)의 동작을 제어하기위한 제어 신호를 생성할 수 있다. 한편, 실제 로봇(10’)이 제조되지 않은 상태 예를 들어, 액츄에이터, 구동부 등이 구비되지 않은 상태이면 로 봇 제어 장치가 생성한 제어 신호에 따라 액츄에이터, 구동부 등이 어떻게 움직이는지 확인할 수가 없다. 본 개시의 일 실시 예에 따라 전자 장치와 로봇 제어 장치는 연동하여 동작하므로, 로봇 제어 장치는 제어 신호를 전자 장치로 전송할 수 있다. 이어서, 전자 장치는 수신된 제어 신호에 기초하여 가상 환경 내의 가상 로봇을 제어할 수 있다. 예를 들어, 가상 로봇에 구비된 가상 컴포넌트(예를 들어, 가상의 액츄에이터, 구동부 등)은 수신된 제어 신호에 기초하여 제어될 수 있다. 상술한 바와 같이 가상 환경을 제공하는 전자 장치와 실제 로봇(10’)에 구비되는 로봇 제어 장치 간에 연 동하여 동작하는 시뮬레이션 시스템을 HILS(Hardware In The Loop Simulations)라고 부를 수도 있다. 일 실시 예에 따라 HILS는 가상 센서와 가상 컴포넌트(예를 들어, 가상의 액츄에이터, 구동부 등)을 구비하는 가상 로봇 이 획득한 센싱 데이터를 실제 로봇(10’)에 구비되는 로봇 제어 장치로 전송하며, 로봇 제어 장치는 실제 컴포넌트를 제어하기 위한 제어 신호를 생성할 수 있다. 이어서, 전자 장치는 제어 신호에 기초하여 가상 로봇에 구비된 가상 컴포넌트의 동작(예를 들어, 주행 등)을 제어할 수 있다. 한편, 제어 신호는 제어 정보로 불릴 수도 있으며 이하에서는 설명의 편의를 위해 제어 정보로 통칭하도록 한다. 이하에서는 다양한 실시 예에 기초하여 센싱 데이터에 대해 구체적으로 설명하도록 한다. 도 2는 본 개시의 일 실시 예에 따른 시뮬레이션 시스템의 구성을 도시한 블록도이다. 시뮬레이션 시스템은 전자 장치 및 로봇 제어 장치를 포함할 수 있다. 전자 장치는 가상 환경에서 가상 로봇에 대한 주행 시뮬레이션을 수행하기 위한 구성이다. 예로, 전자 장치는 개인용 컴 퓨터(personal computer: PC), 서버 컴퓨터(Server Computer), 노트북(Laptop) 또는 휴대폰(Mobile Phone)일 수 있다. 로봇 제어 장치는 로봇을 제어하기 위한 제어 정보를 생성할 수 있다. 예로, 로봇 제어 장치 는 실제 로봇(10’)에 탑재되는 마이크로컨트롤러(Microcontroller) 또는 MCU(Micro Controller Unit)일 수 있다. 한편, 로봇 제어 장치는 전자 장치와 분리되어 구현되거나, 전자 장치에 통합되어 구 현될 수 있다. 전자 장치는 통신 인터페이스, 메모리 및 프로세서를 포함할 수 있다. 이하 전자 장치 의 각 구성에 대하여 상세히 설명하도록 한다. 통신 인터페이스는 적어도 하나의 회로를 포함하며 다양한 유형의 통신 방식에 따라 다양한 유형의 외부 기기와 통신을 수행할 수 있다. 예를 들어 통신 인터페이스는 AP 기반의 Wi-Fi(와이파이, Wireless LAN 네트워크), 블루투스(Bluetooth), 지그비(Zigbee), 유/무선 LAN(Local Area Network), WAN(Wide Area Network), 이더넷(Ethernet), IEEE 1394, HDMI(High-Definition Multimedia Interface), USB(Universal Serial Bus), MHL(Mobile High-Definition Link), AES/EBU(Audio Engineering Society/ European Broadcasting Union), 옵티컬(Optical), 코액셜 (Coaxial) 등과 같은 통신 방식을 통해 외부 장치(예를 들어, 로봇 제어 장치), 외부 저장 매체(예를 들어, USB 메모리), 외부 서버(예를 들어 웹 하드) 등과 센싱 데이터, 제어 정보 등을 송수신할 수 있다. 예를 들어, 통신 인터페이스는 로봇 제어 장치로부터 로봇 제어 장치에 의해 제어될 실제 로봇 (10’)에 대응되는 가상 로봇을 제어하기 위한 제어 정보를 수신할 수 있다. 여기서, 제어 정보는 가상 로 봇을 구동시키기 위한 정보(예를 들어, 가상 로봇의 이동 방향, 이동 속도 또는 가상 로봇의 액츄 에이터를 구동시키기 위한 파워 등)를 포함한 제어 신호, 제어 메시지일 수 있다. 또한, 통신 인터페이스 는 전자 장치가 획득한 센싱 데이터를 로봇 제어 장치로 전송할 수 있다. 한편, 통신 인터페이스는 유선 혹은 무선으로 데이터 통신을 수행할 수 있다. 유선 통신 방식으로 외부 기 기와 통신을 수행할 경우, 통신 인터페이스는 유선 통신 모듈(예를 들어, LAN 등)로 구현될 수 있다. 무선 통신 방식으로 외부 기기와 통신을 수행할 경우, 통신 인터페이스는 와이파이 통신 모듈, 셀룰러 통신모듈, 3G(3세대) 이동통신 모듈, 4G(4세대) 이동통신 모듈, 4세대 LTE(Long Term Evolution) 통신 모듈, 5G(5세대) 이동통신 모듈 중 적어도 하나를 포함할 수 있다. 메모리는 전자 장치의 구성요소들의 전반적인 동작을 제어하기 위한 운영체제(OS: Operating System) 및 전자 장치의 구성요소와 관련된 명령 또는 데이터를 저장할 수 있다. 일 예로, 메모리는 가상 환 경 및 가상 로봇에 관한 정보를 저장할 수 있다. 메모리는 비휘발성 메모리(ex: 하드 디스크, SSD(Solid state drive), 플래시 메모리), 휘발성 메모리 등으로 구현될 수 있다. 특히, 본 개시의 일 실시 예에 따른 메모리는 오브젝트의 콤플렉스(complex) 형상 정보를 출력하도록 학습 된 신경망 모델을 포함할 수 있다. 신경망 모델 및 콤플렉스 형상 정보에 대한 구체적인 설명은 후술하도록 한 다. 일 실시 예에 따른 프로세서는 전자 장치의 전반적인 동작을 제어할 수 있다. 본 개시의 일 실시 예에 따른 프로세서는 가상 로봇 생성 모듈, 제어 정보 획득 모듈, 가상 로봇 제어 모듈, 시뮬레이션 환경 구축 모듈, 제1 거리 정보 획득 모듈, 학습 데이터 생성 모듈 및 제2 거리 정보 획득 모듈을 포함할 수 있다. 일 실시 예에 따른, 가상 로봇 생성 모듈은 가상 로봇(또는 가상 로봇 모델)을 생성할 수 있다. 여기서, 가상 로봇은 후술하는 바와 같이 시뮬레이션 환경 구축 모델에 의해 구축된 가상 환경(또는, 시뮬레이션 환경)에 존재하는 로봇으로, 실제 로봇(10’)을 구성하는 복수의 컴포넌트(component) 각각에 대응 되는 가상 컴포넌트를 포함할 수 있다. 일 예로, 실제 로봇(10’)이 라이다 센서를 포함하는 경우, 가상 로봇 은 라이다 센서에 대응되는 가상 센서를 포함할 수 있다. 이외에도, 가상 로봇은 사용자 입력에 따라 다양한 가상 컴포넌트들을 포함할 수 있다. 제어 정보 획득 모듈은 통신 인터페이스를 통해 로봇 제어 장치로부터 가상 로봇을 제어하기 위 한 제어 정보를 수신할 수 있다. 여기서, 제어 정보는 가상 로봇의 이동 방향, 이동 속도, 가상 로봇에 포함된 액츄에이터(actuator)를 구동시키기 위한 파워에 대한 정보 또는 가상 로봇이 수행 가능한 복수의 기능 각각을 제어하기 위한 제어 메시지 등을 포함할 수 있다. 가상 로봇 제어 모듈은 수신된 제어 정보에 기초하여 가상 로봇을 제어할 수 있다. 예를 들어, 가 상 로봇 제어 모듈은 가상 로봇이 가상 공간 내에서 스스로 이동가능한 이동 로봇이면, 가상 로봇 제어 모듈은 제어 신호에 기초하여 가상 로봇의 이동 방향, 이동 속도 등을 제어할 수 있다. 또 한, 가상 로봇 제어 모듈은 가상 로봇의 사용 목적에 따라 가상 로봇이 수행 가능한 다양한 움직임(또는, 기능)을 제어할 수도 있음은 물론이다. 시뮬레이션 환경 구축 모듈은 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성할 수 있다. 시뮬 레이션 환경 구축 모듈은 사용자 입력에 기초하여 가상 환경에 관한 정보를 획득하며, 획득된 정보에 기초 하여 가상 환경을 생성할 수 있다. 시뮬레이션 환경 구축 모듈은 가상 환경을 생성하기 위한 3D 렌더링 (rendering)을 수행할 수 있다. 한편, 가상 환경에 관한 정보는 가상 환경의 크기, 지형 및 가상 환경에 포함되 는 오브젝트에 대한 정보를 포함할 수 있다. 한편, 본 개시의 일 실시 예에 따른 오브젝트에 대한 정보의 구체 적인 설명은 후술하도록 한다. 본 개시의 일 실시 예에 따라 가상 로봇 제어 모듈이 제어 정보에 기초하여 가상 로봇에 대한 주 행 시뮬레이션을 수행하는 동안, 제1 거리 정보 획득 모듈은 가상 로봇과 오브젝트의 심플(simple) 형 상 간의 제1 거리 정보를 획득할 수 있다. 예를 들어, 제1 거리 정보 획득 모듈은 가상 로봇에 존재하는 가상 센서를 통해 가상 로봇과 오브 젝트의 심플 형상 간의 제1 거리 정보를 획득할 수 있다. 예를 들어, 가상 센서는 가상 라이다(LiDAR) 센서이고, 제1 거리 정보 획득 모듈은 가상 라이다 센서를 통해 가상 로봇과 오브젝트의 심플 형상 간 의 거리를 센싱하여 센싱 데이터를 획득할 수 있다. 이에 대한 구체적인 설명은 도 3을 참조하여 하도록 한다. 도 3은 본 개시의 일 실시 예에 따른 가상환경을 설명하기 위한 도면이다. 도 3을 참조하면, 가상 라이다(LiDAR) 센서는 가상 로봇의 주행 방향(또는, 전면)을 향하여 복수의 광원(또 는, 광 펄스)을 방출할 수 있다. 이어서, 방출된 광원이 가상 공간 내의 오브젝트(예를 들어, 오브젝트의 심플 형상)에 부딪쳐 반사되어 가상 라이다(LiDAR) 센서가 이를 수신하면, 가상 라이다(LiDAR) 센서는 광원의 방출부 터 수신까지 소요된 시간에 기초하여 가상 로봇과 오브젝트의 심플 형상 간의 거리를 센싱할 수 있다. 한편, 가상 센서를 가상 라이다(LiDAR) 센서 외에도 가상 ToF 센서, 가상 IR 센서 등 다양한 형태로 구현될 수 도 있음은 물론이다. 이어서, 본 개시의 일 실시 예에 따른 가상 로봇은 가상 센서를 통해 센싱된 오브젝트의 심플 형상과의 거 리에 기초하여 가상 로봇의 이동 방향, 이동 속도 등을 제어할 수 있다. 한편, 가상 로봇에 구비된 가상 라이다 센서가 방출한 광원이 가상 공간 내의 오브젝트에 부딪쳐 반사될 때, 광원은 해당 오브젝트의 콜리전(Collision) 정보에 기초하여 해당 오브젝트에 부딪친 뒤에 반사된다. 여기서, 콜리전 정보는 오브젝트의 실제 형상에 최대한 근접하게 표현한 것일 수도 있으며, 실제 형상을 대략적 으로 표현한 것일 수도 있다. 예를 들어, 오브젝트에 대응되는 콜리전 정보가 해당 오브젝트의 실제 형상에 최 대한 근접하게 표현한 것이라면, 콜리전 정보는 콤플렉스 콜리전(Complex collision) 정보를 의미할 수 있다. 다른 예로, 오브젝트에 대응되는 콜리전 정보가 해당 오브젝트의 대략적인 형상을 표현한 것이라면, 콜리전 정보는 심플 콜리전(Simple collision) 정보를 의미할 수 있다. 이에 대한 구체적인 설명은 도 4a 및 도 4b를 참 조하여 하도록 한다. 도 4a는 본 개시의 일 실시 예에 따른 심플 형상 정보를 설명하기 위한 도면이고, 도 4b는 개시의 일 실시 예에 따른 콤플렉스 형상 정보를 설명하기 위한 도면이다. 도 4a를 참조하면, 오브젝트에 대응되는 심플 콜리전 정보는 오브젝트를 다면체형, 구형 또는 원통형 중 적 어도 하나로 나타낸 형상을 의미할 수 있다. 이하에서는 설명의 편의를 위해 심플 콜리전 정보를 심플 형상 정 보로 통칭하도록 한다. 일 실시 예에 따라 3D 가상 환경 내에서 오브젝트가 타 오브젝트와 어떻게 상호작용하는지를 정의하기 위하여 시뮬레이션 환경 구축 모듈은 가상 공간 내 복수의 오브젝트 각각에 대응되는 형상 정보를 포함할 수 있다. 여기서, 상호 작용은 오브젝트가 타 오브젝트와 충돌하는 이벤트, 오브젝트가 타 오브젝트를 무시 (ignore)하여 오브젝트의 일부와 타 오브젝트의 일부가 겹쳐지는 이벤트 등을 포함할 수 있다. 일 실시 예에 따라, 가상 로봇이 가상 로봇 제어 모듈의 제어에 따라 오브젝트에 인접하게 위치한 경우를 상정할 수 있다. 프로세서는 가상 로봇에 대응되는 형상 정보와 오브젝트에 대응되는 형상 정 보에 기초하여 가상 로봇이 오브젝트에 닿았는지(또는, 충돌하였는지) 여부를 판단할 수 있다. 다른 예로, 프로세서는 오브젝트에 대응되는 형상 정보에 기초하여 가상 라이다 센서가 방출한 광이 오브 젝트에 닿았는지(또는, 충돌하였는지) 여부를 판단할 수 있다. 도 3 및 4a를 참조하면, 프로세서는 가상 로봇이 주행 시뮬레이션을 수행하는 동안, 가상 공간 내 가 상 로봇의 위치 정보와 오브젝트의 심플 형상 간의 제1 거리 정보를 획득할 수 있다. 예를 들어, 가상 로봇에 구비된 가상 라이다 센서가 방출한 광원이 가상 공간 내의 오브젝트에 부딪쳐 반사될 때, 광원은 해당 오브젝트의 심플 형상에 기초하여 해당 오브젝트에 부딪친 뒤에 반사될 수 있다. 이어서, 프로세서는 오브젝트의 심플 형상에 부딪쳐 반사된 광원이 수신되면, 광원의 방출부터 수신까 지 소요된 시간에 기초하여 가상 로봇과 오브젝트의 심플 형상 간의 제1 거리 정보를 획득할 수 있다. 다만, 제1 거리 정보는 오브젝트의 콤플렉스 콜리전 정보(즉, 콤플렉스 형상)이 아닌, 심플 형상에 기초한 거리 정보이므로, 가상 로봇과 오브젝트 간의 정확한 거리 정보에 대응되는 것으로 보기 어렵다. 도 3 및 4a를 참조하면, 프로세서가 오브젝트의 콤플렉스 형상에 부딪쳐 반사된 광원을 수신하고, 광 원의 방출부터 수신까지 소요된 시간에 기초하여 가상 로봇과 오브젝트의 콤플렉스 형상 간의 제2 거리 정보를 획득한다면, 제2 거리 정보는 가상 로봇과 오브젝트 간의 정확한 거리 정보에 대응될 수 있다. 다만, 가상 환경에 존재하는 복수의 오브젝트 각각은 실제 환경에 존재하는 건물, 가구, 가전, 벽, 계단, 생명 체 등을 3D 렌더링을 통해 가상 환경 내에 구현한 것이므로 형상이 매우 복잡하며, 다면체형, 구형 또는 원통형 과 같이 단순한 형태로 정의되기 어렵다. 프로세서가 시뮬레이션 환경을 구동함에 있어서, 가상 환경에 존재하는 복수의 오브젝트 각각의 실제 형상 (예를 들어, 콤플렉스(complex) 형상)을 고려한다면, 연산량이 급수적으로 증가하는 문제가 있다. 예를 들어, 프로세서가 60FPS로 시뮬레이션 환경을 구동하는 경우에 복수의 오브젝트 각각의 콤플렉스 형상을 고려하 여 복수의 오브젝트 간의 충돌, 겹침(overlap)을 표시한다면, 성능 저하, 프레임 다운(frame down) 현상 등이 발생하는 문제가 있다. 이에 따라, 종래에는 시뮬레이션 시스템이 복수의 오브젝트 각각의 실제 형상 즉, 콤플렉스 형상을 고려하는 것 이 아니라, 심플 형상을 고려하여 시뮬레이션 환경을 구동하였다. 여기서, 심플 형상은 오브젝트를 다면체형(예 를 들어, 육면체형 등), 구형 또는 원통형 중 적어도 하나로 나타낸 형상일 수 있다. 한편, 심플 형상은 심플 콜리전(Simple collision)으로 불릴 수도 있으나, 설명의 편의를 위해 심플 형상으로 통칭하도록 하고, 콤플렉스 형상은 콤플렉스 콜리전(Complex collision)으로 부릴 수도 있으나, 설명의 편의를 위해 콤플렉스 형상으로 통칭하도록 한다. 이하에선 본 개시의 다양한 실시 예에 따라 가상 로봇과 오브젝트의 콤플렉스 형상 간의 제2 거리 정보 를 획득하는 방법에 대해 설명하도록 한다. 도 5는 본 개시의 일 실시 예에 따른 신경망 모델을 설명하기 위한 도면이다. 우선, 본 개시의 일 실시 예에 따른 제1 거리 정보 획득 모듈은 가상 로봇에 존재하는 가상 센서를 통 해 가상 로봇과 오브젝트의 심플 형상 간의 제1 거리 정보를 획득할 수 있다. 이어서, 프로세서는 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 획득된 제1 거리 정보를 신 경망 모델에 입력하여 오브젝트의 콤플렉스(complex) 형상 정보를 획득할 수 있다. 여기서, 오브젝트 의 콤플렉스 형상 정보는 도 4b에 도시된 바와 같이 오브젝트의 실제 형상 즉, 오브젝트의 복잡한 형상을 복수의 트라이앵글 매시(triangle mesh)들의 집합으로 표현한 정보를 의미할 수 있다. 이어서, 제2 거리 정보 획득 모듈은 오브젝트의 콤플렉스 형상 정보에 기초하여 가상 로봇과 오브젝트 사이의 제2 거리 정보를 획득할 수 있다. 일 실시 예에 따라, 제2 거리 정보 획득 모듈은 통 신 인터페이스를 통해 제2 거리 정보를 로봇 제어 장치로 전송할 수 있다. 한편, 로봇 제어 장치는 수신된 제2 거리 정보에 기초하여 가상 로봇을 제어하기 위한 제어 정보를 출 력할 수 있다. 도 2를 참조하면, 로봇 제어 장치는 인식 모듈, 판단 모듈 및 구동 모듈을 포함할 수 있다. 인식 모듈은 전자 장치로부터 제2 거리 정보를 획득하고, 제2 거리 정보를 분석할 수 있다. 일 예로, 인식 모듈은 제2 거리 정보에 기초하여 가상 환경 내에서 가상 로봇과 오브젝트 사이의 거 리를 식별할 수 있다. 한편, 상술한 바와 같이 제2 거리 정보는 가상 로봇과 오브젝트의 심플 형상 간의 거리가 아닌, 오브젝트의 콤플렉스 형상 간의 거리에 대응된다. 종래의 전자 장치가 오브젝트의 콤플렉스 형상을 획득한 뒤, 가상 로봇과 오브젝트의 콤플렉스 형상 간의 거리를 식별하기 위해서는 많은 연산을 수행하여야 하므로, 가상 로봇의 이동과 로봇 제어 장치의 연 산(예를 들어, 제어 정보를 획득하기 위한 연산)이 실시간으로 연동될 수 없는 문제가 있었다. 다른 예로, 종래의 전자 장치가 가상 로봇과 오브젝트의 심플 형상 간의 거리를 식별한 뒤 식별된 거리 정 보를 로봇 제어 장치로 전송하다면, 가상 로봇의 이동과 로봇 제어 장치의 연산(예를 들어, 제어 정보 를 획득하기 위한 연산)이 실시간으로 연동될 수는 있으나, 로봇 제어 장치는 가상 로봇과 오브젝트의 심플 형상 간의 거리에 기초하여 다소 부정확한 제어 정보를 출력하므로 가상 로봇의 정확한 움직임을 식별 할 수 없는 문제가 있었다. 본 개시의 다양한 실시 예에 따르면 전자 장치는 신경망 모델을 이용하여 적은 연산으로 오브젝트 의 콤플렉스 형상 정보를 획득할 수 있으므로, 가상 로봇의 이동과 로봇 제어 장치의 연산(예를 들어, 제어 정보를 획득하기 위한 연산)을 실시간으로 연동시킬 수 있다. 또한, 로봇 제어 장치는 가상 로 봇과 오브젝트의 콤플렉스 형상 간의 거리에 기초하여 다소 정확한 제어 정보를 출력하므로 가상 로봇 의 정확한 움직임을 식별할 수 있다. 판단 모듈은 인식 모듈의 분석 결과를 바탕으로 가상 로봇을 어떻게 동작시킬 지 판단할 수 있다. 즉, 판단 모듈은 가상 로봇이 수행할 액션을 결정할 수 있다. 일 예로, 제2 거리 정보에 대한 분석 결과에 기초하여 가상 로봇으로부터 기설정된 거리 이내에 오브젝트가 존재하면, 판단 모듈 은 해당 오브젝트를 우회하여 주행하는 액션을 결정할 수 있다. 이어서, 구동 모듈은 판단 모듈의 판단 결과를 바탕으로 가상 로봇의 구동을 위한 제어 정보(또 는, 구동 정보)를 획득할 수 있다. 일 예로, 구동 모듈은 오브젝트를 회피하여 주행하기 위한 가상 로 봇의 이동 방향, 이동 속도 또는, 가상 로봇의 액츄에이터의 회전 토크를 획득할 수 있다. 구동 모듈 을 통해 획득된 제어 정보는 전자 장치로 전송될 수 있다. 그리고, 전자 장치는 로봇 제어 장치 로부터 수신된 제어 정보에 기초하여 가상 로봇에 대한 시뮬레이션을 반복적으로 수행할 수 있다. 이하에서는 본 개시의 일 실시 예에 따른 전자 장치가 콤플렉스 형상 정보를 획득하는 방법을 구체적 으로 설명하도록 한다. <콤플렉스 형상 정보를 획득하는 방법> 본 개시의 일 실시 예에 따라 프로세서는 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 제1 거리 정보를 신경망 모델에 입력하여 오브젝트의 콤플렉스(complex) 형상 정보를 획득할 수 있다. 여기서, 오브젝트에 대한 정보를 도 6을 참조하여 구체적으로 설명하면 다음과 같다. 도 6은 본 개시의 일 실시 예에 따른 학습 데이터를 설명하기 위한 도면이다. 일 실시 예에 따른 가상 로봇의 위치 정보는, 가상 환경 내에서 가상 로봇의 위치 좌표, 가상 로봇(1 0)에 구비된 가상 센서(예를 들어, 가상 라이다 센서)의 위치 좌표 등을 포함할 수 있다. 도 6을 참조하면, 가 상 로봇의 위치 정보는 가상 라이다 센서의 위치(Virtual Lidar Sensor Position)를 의미할 수 있다. 일 실시 예에 따른 오브젝트에 대한 정보는 가상 환경 내에서 오브젝트의 위치 정보, 오브젝트의 버텍스(vertex) 정보, 오브젝트의 변형(transform) 정보 또는 오브젝트를 포함하는 가상 이미지 (virtual image) 중 적어도 하나를 포함할 수 있다. 우선, 오브젝트의 위치 정보는 가상 환경 내에서 오브젝트의 3차원 위치 좌표 [(x1, y1, z1), (x2, y2, z2), …, (xn, yn, zn)]를 포함할 수 있다. 여기서, 오브젝트의 3차원 위치 좌표는 가상 센서가 오브젝트 의 심플 형상에 기초하여 감지한 오브젝트의 좌표를 의미할 수 있다. 도 6을 참조하면, 오브젝트의 위치 정 보는 Simple collision에 감지된 Lidar 3차원 좌표를 의미할 수 있다. 일 실시 예에 따라 가상 환경 내의 3D 오브젝트는 폴리곤 매시 형태로 표현될 수 있다. 예를 들어, 오브젝트 는 무수히 많은 버텍스(vertex), 포인트 클라우드(point cloud)로 구성될 수 있다. 여기서, 버텍스로 구성 된 삼각형을 메시라고 하며, 다수의 메시를 기반으로 구성된 3차원 기하 객체를 폴리곤 메시 모델이라고 칭할 수 있다. 즉, 오브젝트의 버텍스 정보는 3D 오브젝트의 표면에 대한 형태 정보를 의미할 수 있다. 오브젝트의 변형(transform) 정보는 가상 환경 내에서 오브젝트의 확대 비율(또는, Scale), 오브젝트 의 회전(rotation) 정보 또는 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함할 수 있다. 여기서, 오브젝트의 변형 정보는 매트릭스 형태일 수 있다. 또한, 오브젝트를 포함하는 가상 이미지(virtual image)는 가상 로봇에 구비된 가상 센서 또는 가상 카 메라를 이용하여 오브젝트를 촬영한 이미지, 오브젝트에 대한 뎁스 이미지 또는 스텐실(stencil) 이미 지 중 적어도 하나를 포함할 수 있다. 한편, 오브젝트에 대한 정보는 오브젝트의 심플 형상 정보를 더 포함할 수도 있음은 물론이다. 상술한 바와 같이 신경망 모델은 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 제1 거리 정보가 입력되면, 해당 오브젝트의 콤플렉스(complex) 형상 정보를 출력할 수 있다. 이어서, 제2 거리 정보 획득 모듈 은 오브젝트의 콤플렉스 형상 정보에 기초하여 가상 로봇과 오브젝트 사이의 제2 거리 정보를 획득할 수 있다. <신경망 모델이 학습하는 방법> 도 6을 참조하여 신경망 모델의 학습에 이용되는 학습 데이터를 구체적으로 설명하도록 한다. 본 개시의 일 실시 예에 따른 신경망 모델은 오브젝트의 콤플렉스 형상 정보를 출력하도록 학습을 통해 만들어진 것을 특 징으로 한다. 여기서, 학습을 통해 만들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들 을 이용하여 학습됨으로써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버 및/또는 시스템을 통해 이루어 질 수도 있다. 학습 알고리즘의 예로는, 지도형 학습 (supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또 는 강화 학습(reinforcement learning)이 있으나, 전술한 예에 한정되지 않는다. 일 실시 예에 따라 지도형 학습 알고리즘의 의하여 학습된 신경망 모델을 설명하도록 한다. 신경망 모델 은 가상 로봇의 위치 정보, 복수의 학습 오브젝트 각각에 대한 정보, 가상 로봇과 복수의 학습 오브젝 트의 심플 형상 간의 제1 거리 정보 및 복수의 학습 오브젝트 각각의 콤플렉스 형상 정보를 학습 데이터로 하여 학습될 수 있다. 여기서, 복수의 학습 오브젝트의 콤플렉스 형상 정보는, 학습 오브젝트의 실제 형상에 기초하여 학습 오브젝트 와 닿는 경우 오버랩되지 않고 충돌 이벤트가 발생할 것으로 예상되는 외부 표면을 형상화한 그라운드 트루스 (ground truth) 데이터일 수 있다. 본 개시의 일 실시 예에 따라 신경망 모델은 입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 여기서, 입력 학습 데이터는 가상 환경 내에서 가상 로봇의 위치 정보, 학습 오브젝트의 위치 정보, 학습 오브젝트의 버텍스(vertex) 정보, 학습 오브젝트의 변형 정보, 학습 오브젝트를 포함하는 가상 이미지 및 가상 로봇과 학습 오브젝트의 심플 형상 간의 거리 정보를 포함하며, 출력 학습 데이터는, 학습 오브젝트의 콤플 렉스 형상 정보 즉, 그라운드 트루스 데이터일 수 있다. 여기서, 입력 학습 데이터는 학습 오브젝트에 대한 정 보를 의미하며, 출력 학습 데이터는 학습 Label 데이터를 의미할 수도 있다. 이에 따라, 학습 모듈은 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 가상 로봇과 오브젝트의 심 플 형상 간의 제1 거리 정보가 입력되면, 해당 오브젝트의 콤플렉스 형상 정보를 출력하도록 신경망 모델을 학습시킬 수 있다. 본 개시에 따른 인공지능과 관련된 기능은 프로세서와 메모리를 통해 동작된다. 프로세서는 하 나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU, AP, DSP(Digital Signal Processor) 등과 같은 범용 프로세서, GPU, VPU(Vision Processing Unit)와 같은 그래픽 전용 프로세서 또는 NPU와 같은 인공지능 전용 프로세서일 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기 정의된 동작 규칙 또는 인공지능 모델에 따라, 입력 데이터를 처리하도록 제어한다. 또는, 하나 또는 복수의 프로세서 가 인공지능 전용 프로세서인 경우, 인공지능 전용 프로세서는, 특정 인공지능 모델의 처리에 특화된 하드웨어 구조로 설계될 수 있다. 기 정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만 들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로 써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미 한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버 및/ 또는 시스템을 통해 이루어 질 수도 있다. 학습 알고리즘의 예로는, 지도형 학습(supervised learning), 비지도 형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)이 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 학습을 통해 만들어 질 수 있다. 여기서, 학습을 통해 만들어진다는 것은, 기본 인공지능 모델 이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로써, 원하는 특성(또는, 목적)을 수행하 도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 복수의 신경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 복수의 신경 망 레이어들이 갖고 있는 복수의 가중치들은 인공지능 모델의 학습 결과에 의해 최적화될 수 있다. 예를 들어, 학습 과정 동안 인공지능 모델에서 획득한 로스(loss) 값 또는 코스트(cost) 값이 감소 또는 최소화되도록 복수 의 가중치들이 갱신될 수 있다. 본 개시에 따른 전자 장치는 가상 센싱 데이터를 획득하기 위하여 인공지능 모델을 이용할 수 있다. 프로 세서는 가상 센서의 센싱 데이터에 대해 전처리 과정을 수행하여 인공지능 모델의 입력으로 사용하는 데에 적합한 형태로 변환할 수 있다. 인공지능 모델은 학습을 통해 만들어 질 수 있다. 여기서, 학습을 통해 만들어 진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 복수의 신경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술로서, 지식/확률 기반 추론(Knowledge based Reasoning), 최적화 예측(Optimization Prediction), 선호 기반 계획(Preference-based Planning), 추천 (Recommendation) 등을 포함한다. 인공 신경망은 심층 신경망(DNN:Deep Neural Network)를 포함할 수 있으며, 예를 들어, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), GAN (Generative Adversarial Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network),BRDNN(Bidirectional Recurrent Deep Neural Network) 또는 심층 Q-네트워크 (Deep Q-Networks) 등이 있으나, 전술한 예에 한정되지 않는다. 도 7은 본 개시의 다른 일 실시 예에 따른 전자 장치의 구성을 도시한 블록도이다. 도 7을 참조하면, 전자 장치는 통신 인터페이스, 메모리, 프로세서, 입력부 및 디스 플레이를 포함할 수 있다. 한편, 통신 인터페이스, 메모리 및 프로세서는 도 2에서 상세히 설명한 바, 중복 설명은 생략하도록 한다. 프로세서는 가상 로봇 및 가상 로봇의 주행 시뮬레이션을 위한 가상 환경을 생성할 수 있다. 프로 세서는 입력부를 통해 획득되는 사용자 입력에 기초하여 가상 로봇 및 가상 환경을 생성할 수 있 다. 여기서, 사용자 입력은 가상 로봇에 대한 정보(예로, 가상 로봇의 크기나 형태) 및 가상 환경에 대 한 정보(예로, 가상 환경에 포함되는 오브젝트에 대한 정보)를 포함할 수 있다. 프로세서는 획득된 가상 로봇 및 가상 환경에 대한 정보를 메모리에 저장할 수 있다. 프로세서는 로봇 제어 장치로부터 가상 로봇을 제어하기 위한 제어 정보를 획득할 수 있다. 프로 세서는 제어 정보를 바탕으로 가상 로봇에 대한 주행 시뮬레이션을 수행할 수 있다. 주행 시뮬레이션 을 수행하는 동안, 프로세서는 가상 환경 내에서 가상 로봇과 오브젝트와의 거리에 대응되는 센싱 데 이터(예를 들어, 제1 거리 정보)를 획득할 수 있다. 프로세서는 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 제1 거리 정보를 신경망 모델에 입력하여 오브젝트의 콤플렉스 형상 정보를 획득한 뒤, 오브젝트의 콤플렉스 형상 정보에 기초하여 가상 로봇과 오브젝트 사이의 제2 거리 정보를 획득할 수 있다. 이어서, 프로세서는 제2 거리 정보를 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수신되면, 수신 된 신규 제어 정보에 기초하여 가상 로봇에 대한 주행 시뮬레이션을 수행할 수 있다. 이어서, 프로세서는 주행 시뮬레이션에 기초하여 획득된 제3 거리 정보를 로봇 제어 장치로 전송하도 록 통신 인터페이스를 제어할 수 있다. 한편, 로봇 제어 장치는 디지털 시그널 프로세서(digital signal processor(DSP), 마이크로 프로세서 (microprocessor), AI(Artificial Intelligence) 프로세서, T-CON(Timing controller)으로 구현될 수 있다. 다 만, 이에 한정되는 것은 아니며, 중앙처리장치(central processing unit(CPU)), MCU(Micro Controller Unit), MPU(micro processing unit), 컨트롤러(controller), 어플리케이션 프로세서(application processor(AP)), 또 는 커뮤니케이션 프로세서(communication processor(CP)), ARM 프로세서 중 하나 또는 그 이상을 포함하거나, 해당 용어로 정의될 수 있다. 또한, 로봇 제어 장치는 프로세싱 알고리즘이 내장된 SoC(System on Chip), LSI(large scale integration)로 구현될 수도 있고, FPGA(Field Programmable gate array) 형태로 구현될 수도 있다. 일 실시 예에 따라 전자 장치에 구비된 프로세서와 로봇 제어 장치는 서로 다른 명령어 체계에 기초하여 구동될 수도 있다. 예를 들어, 프로세서는 CISC(complex instruction set computer) 기반 명령 어 체계에 기초하여 구동되도록 설계되고, 로봇 제어 장치는 RISC(reduced instruction set computer) 기 반 명령어 체계에 기초하여 구동되도록 설계될 수 있다. 다만, 이는 일 예시이며 역도 성립할 수 있음은 물론이 다. 입력부는 사용자가 전자 장치를 제어하기 위한 데이터를 입력하는 수단을 의미한다. 예로, 프로세서 는 입력부를 통해 가상 로봇에 관한 정보(예로, 가상 로봇의 형상이나 크기) 및 가상 센서에 관한 정보(예로, 가상 센서의 파라미터)를 획득할 수 있다. 한편, 입력부에는 키보드(key board), 마우스 (mouse), 키 패드(key pad), 터치 패드 등이 있을 수 있으나 이에 한정되는 것은 아니다. 디스플레이는 다양한 화면을 표시할 수 있다. 예를 들어, 디스플레이는 가상 환경 및 가상 로봇 의 주행 시뮬레이션 과정을 표시할 수 있다. 디스플레이는 자발광 소자를 포함하는 디스플레이 또는, 비자발광 소자 및 백라이트를 포함하는 디스플레 이로 구현될 수 있다. 예를 들어, LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플 레이, LED(Light Emitting Diodes), 마이크로 LED(micro LED), Mini LED, PDP(Plasma Display Panel), QD(Quantum dot) 디스플레이, QLED(Quantum dot light-emitting diodes) 등과 같은 다양한 형태의 디스플레이 로 구현될 수 있다. 디스플레이 내에는 a-si TFT, LTPS(low temperature poly silicon) TFT,OTFT(organic TFT) 등과 같은 형태로 구현될 수 있는 구동 회로, 백라이트 유닛 등도 함께 포함될 수 있다. 한 편, 디스플레이는 터치 센서와 결합된 터치 스크린, 플렉시블 디스플레이(flexible display), 롤러블 디스 플레이(rollable display), 3차원 디스플레이(3D display), 복수의 디스플레이 모듈이 물리적으로 연결된 디스 플레이 등으로 구현될 수 있다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법은 우선, 가상 로봇 및 가상 로봇의 주행 시뮬레이션을 위 한 가상 환경을 생성한다(S810). 이어서, 로봇 제어 장치로부터 가상 로봇을 제어하기 위한 제어 정보를 수신한다(S820). 이어서, 제어 정보에 기초하여 가상 로봇에 대한 주행 시뮬레이션을 수행하는 동안, 가상 환경 내에서 가상 로 봇의 위치 정보 및 가상 로봇과 오브젝트의 심플(simiple) 형상 간의 제1 거리 정보를 획득한다(S830). 이어서, 가상 로봇의 위치 정보, 오브젝트에 대한 정보 및 제1 거리 정보를 신경망 모델에 입력하여 오브젝트의 콤플렉스(complex) 형상 정보를 획득한다(S840). 이어서, 오브젝트의 콤플렉스 형상 정보에 기초하여 가상 로봇과 오브젝트 사이의 제2 거리 정보를 획득한다 (S850). 이어서, 제2 거리 정보를 로봇 제어 장치로 전송한다(S860). 여기서, 오브젝트에 대한 정보는, 가상 환경 내에서 오브젝트의 위치 정보, 오브젝트의 버텍스(vertex) 정보, 오브젝트의 변형(transform) 정보 또는 오브젝트를 포함하는 가상 이미지(virtual image) 중 적어도 하나를 포 함할 수 있다. 본 개시의 일 실시 예에 따른 오브젝트의 변형 정보는, 기 가상 환경 내에서 오브젝트의 확대 비율, 오브젝트의 회전(rotation) 정보 또는 오브젝트의 이동(translation) 정보 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시 예에 따른 오브젝트의 심플 형상은, 오브젝트를 다면체형, 구형 또는 원통형 중 적어도 하나 로 나타낸 형상이고, 오브젝트의 콤플렉스 형상은, 오브젝트의 트라이앵글 매시(triangle mesh)로 나타낸 형상 일 수 있다. 본 개시의 일 실시 예에 따른 가상 로봇은, 가상 라이다(LiDAR) 센서를 포함하고, 제2 거리 정보는, 가상 라이 다 센서가 가상 로봇과 오브젝트 사이의 거리를 센싱하여 획득한 센싱 데이터 형태일 수 있다. 본 개시의 일 실시 예에 따른 제어 방법은, 제2 거리 정보를 로봇 제어 장치로 전송한 후, 신규 제어 정보가 수 신되면, 수신된 제어 정보에 기초하여 가상 로봇에 대한 주행 시뮬레이션을 수행하는 단계 및 주행 시뮬레이션 에 기초하여 획득된 제3 거리 정보를 로봇 제어 장치로 전송하는 단계를 더 포함할 수 있다. 본 개시의 일 실시 예에 따른 신경망 모델은, 입력 학습 데이터 및 출력 학습 데이터에 기초하여 학습되며, 입 력 학습 데이터는, 가상 환경 내에서 가상 로봇의 위치 정보, 오브젝트의 위치 정보, 오브젝트의 버텍스 (vertex) 정보, 오브젝트의 변형 정보, 오브젝트를 포함하는 가상 이미지 및 가상 로봇과 오브젝트의 심플 형상 간의 거리 정보를 포함하며, 출력 학습 데이터는, 오브젝트의 콤플렉스 형상 정보를 포함할 수 있다. 본 개시의 일 실시 예에 따른 로봇 제어 장치로부터 수신된 제어 정보는, 가상 환경 내에서 가상 로봇의 이동 방향 또는 이동 속도 중 적어도 하나를 제어하기 위한 정보일 수 있다. 또한, 전자 장치와 로봇 제어 장치 각각은, 서로 다른 명령어 체계에 기초하여 구동될 수 있다. 한편, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어(hardware) 또는 이들의 조합을 이 용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 일부 경우 에 있어 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨어 모듈들로 구현될 수 있다. 소프트 웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 동작을 수행할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 전자 장치의 프로세싱 동작을 수행하기 위한 컴퓨터 명 령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium) 에 저장될 수 있다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었을 때 상술한 다양한 실시 예에 따른 전자 장치에서의 처리 동작을 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체 가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적 컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등 이 있을 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2020-0163241", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2020-0163241", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시 예에 따른 시뮬레이션 시스템의 컨셉을 설명하기 위한 도면이다. 도 2는 본 개시의 일 실시 예에 따른 시뮬레이션 시스템의 구성을 도시한 블록도이다. 도 3은 본 개시의 일 실시 예에 따른 가상 환경을 설명하기 위한 도면이다. 도 4a 및 도 4b는 본 개시의 일 실시 예에 따른 심플 및 콤플렉스 형상 정보를 설명하기 위한 도면이다. 도 5는 본 개시의 일 실시 예에 따른 신경망 모델을 설명하기 위한 도면이다. 도 6은 본 개시의 일 실시 예에 따른 학습 데이터를 설명하기 위한 도면이다. 도 7은 본 개시의 일 실시 예에 따른 전자 장치의 구성을 도시한 블록도이다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다."}
