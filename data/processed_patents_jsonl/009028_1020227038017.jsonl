{"patent_id": "10-2022-7038017", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0019819", "출원번호": "10-2022-7038017", "발명의 명칭": "아날로그 크로스바 아키텍처를 이용한 매트릭스 스케치", "출원인": "인터내셔널 비지네스 머신즈 코포레이션", "발명자": "호레쉬, 리오르"}}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "아날로그 크로스바 아키텍처(analog crossbar architecture)를 이용하여 매트릭스 스케치(matrix sketching)를수행하기 위해 프로세서에서 실행되는 컴퓨터 구현 방법(computer-implemented method)에 있어서, 상기 방법은:제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트하는 단계;상기 제1 매트릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)에 복사하는 단계;제2 기간 동안 제2 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제2 매트릭스로 전환하는 단계;상기 제2 매트릭스가 하위 랭크로 업데이트될 때, 상기 제1 매트릭스를 다시 제1 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는단계;상기 제2 매트릭스를 상기 동적 보정 컴퓨팅 장치에 복사하는 단계;제3 기간 동안 상기 제1 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제1 매트릭스로 다시 전환하는 단계;및상기 제1 매트릭스가 하위 랭크로 업데이트될 때, 상기 제2 매트릭스를 다시 제2 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제2 매트릭스에 제2 확률적 펄스(stochastic pulses)를 공급하는단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 제1 및 제2 매트릭스는 상기 아날로그 크로스바 아키텍처로 배치되는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 제1 및 제2 매트릭스는 스트리밍 데이터(streaming data)를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 스트리밍 데이터는 비대칭 효과(asymmetry effects)를 방지하기 위해 정규화되는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 제1 및 제2 매트릭스의 상기 하위 랭크 업데이트는 (-1, 1)의 전체 범위가 상기 제1 및 제2 매트릭스 비대칭점(asymmetry points) 근처에서 동작하도록 최종 스케치 매트릭스(final sketching matrix)를 (-0.1, 0.1)사이로 조정하기 위해 스케일이 조정되는, 공개특허 10-2023-0019819-3-컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 매트릭스 스케치가 전체 입력에 적용되며, 회귀 분석(regression analysis)을 수행하기 위해 최종 스케치매트릭스이 디지털 컴퓨터로 이동하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 동적 보정 컴퓨팅 장치는 상기 제1 및 제2 매트릭스를 동시에 수정하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하는 데이터 처리 시스템에서 프로세서에서 실행되는 컴퓨터 판독 가능한 프로그램을 포함하는 비일시적(non-transitory) 컴퓨터 판독 가능한 저장 매체에 있어서, 상기 컴퓨터 판독 가능한 프로그램은 상기 프로세서에서 실행될 때 컴퓨터가,제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트하는 단계;상기 제1 매트릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)에 복사하는 단계;제2 기간 동안 제2 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제2 매트릭스로 전환하는 단계;상기 제2 매트릭스가 하위 랭크로 업데이트될 때, 상기 제1 매트릭스를 다시 제1 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는단계;상기 제2 매트릭스를 상기 동적 보정 컴퓨팅 장치에 복사하는 단계;제3 기간 동안 상기 제1 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제1 매트릭스로 다시 전환하는 단계;및상기 제1 매트릭스가 하위 랭크로 업데이트될 때, 상기 제2 매트릭스를 다시 제2 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제2 매트릭스에 제2 확률적 펄스(stochastic pulses)를 공급하는단계를 수행하도록 하는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 제1 및 제2 매트릭스는 상기 아날로그 크로스바 아키텍처로 배치되는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서, 상기 제1 및 제2 매트릭스는 스트리밍 데이터(streaming data)를 포함하는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 공개특허 10-2023-0019819-4-상기 스트리밍 데이터는 비대칭 효과(asymmetry effects)를 방지하기 위해 정규화되는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 제1 및 제2 매트릭스의 상기 하위 랭크 업데이트는 (-1, 1)의 전체 범위가 상기 제1 및 제2 매트릭스 비대칭점(asymmetry points) 근처에서 동작하도록 최종 스케치 매트릭스(final sketching matrix)를 (-0.1, 0.1)사이로 조정하기 위해 스케일이 조정되는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 매트릭스 스케치가 전체 입력에 적용되며, 회귀 분석을 수행하기 위해 최종 스케치 매트릭스이 디지털 컴퓨터로 이동하는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8항에 있어서, 상기 동적 보정 컴퓨팅 장치는 상기 제1 및 제2 매트릭스를 동시에 수정하는, 컴퓨터 판독 가능한 저장 매체."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하는 시스템에 있어서, 상기 시스템은:메모리; 및상기 메모리와 통신하는 하나 이상의 프로세서를 포함하고,상기 프로세서는,제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트하는 단계;상기 제1 매트릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)에 복사하는 단계;제2 기간 동안 제2 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제2 매트릭스로 전환하는 단계;상기 제2 매트릭스가 하위 랭크로 업데이트될 때, 상기 제1 매트릭스를 다시 제1 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는단계;상기 제2 매트릭스를 상기 동적 보정 컴퓨팅 장치에 복사하는 단계;제3 기간 동안 상기 제1 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제1 매트릭스로 다시 전환하는 단계;및상기 제1 매트릭스가 하위 랭크로 업데이트될 때, 상기 제2 매트릭스를 다시 제2 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제2 매트릭스에 제2 확률적 펄스(stochastic pulses)를 공급하는단계를 수행하도록 구성되는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,공개특허 10-2023-0019819-5-상기 제1 및 제2 매트릭스는 상기 아날로그 크로스바 아키텍처로 배치되는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서, 상기 제1 및 제2 매트릭스는 스트리밍 데이터(streaming data)를 포함하는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서, 상기 스트리밍 데이터는 비대칭 효과(asymmetry effects)를 방지하기 위해 정규화되는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서, 상기 제1 및 제2 매트릭스의 상기 하위 랭크 업데이트는 (-1, 1)의 전체 범위가 상기 제1 및 제2 매트릭스 비대칭점(asymmetry points) 근처에서 동작하도록 최종 스케치 매트릭스(final sketching matrix)를 (-0.1, 0.1)사이로 조정하기 위해 스케일이 조정되는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제18항에 있어서, 상기 매트릭스 스케치가 전체 입력에 적용되며, 회귀 분석(regression analysis)을 수행하기 위해 최종 스케치매트릭스이 디지털 컴퓨터로 이동하는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제15항에 있어서, 상기 동적 보정 컴퓨팅 장치는 상기 제1 및 제2 매트릭스를 동시에 수정하는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하기 위해 프로세서에서 실행되는 컴퓨터 구현방법에 있어서, 상기 방법은:외적 하위 랭크 업데이트(outer product low rank updates)를 이용하여 스트리밍 데이터에 차원 축소를 적용하는 단계; 및상기 차원 축소가 전체 입력에 적용되면, 회귀 분석을 수행하기 위해 스케치된 매트릭스를 디지털 컴퓨터로 이동하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제22항에 있어서, 상기 스케치된 매트릭스는 토글 방식(toggling manner)으로 병렬로 사용되는 제1 매트릭스 및 제2 매트릭스로부공개특허 10-2023-0019819-6-터 도출되는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제23항에 있어서,제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트하는 단계;상기 제1 매트릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)에 복사하는 단계;제2 기간 동안 제2 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제2 매트릭스로 전환하는 단계;상기 제2 매트릭스가 하위 랭크로 업데이트될 때, 상기 제1 매트릭스를 다시 제1 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는단계;상기 제2 매트릭스를 상기 동적 보정 컴퓨팅 장치에 복사하는 단계;제3 기간 동안 상기 제1 매트릭스를 하위 랭크로 업데이트하기 위해 상기 제1 매트릭스로 다시 전환하는 단계;및상기 제1 매트릭스가 하위 랭크로 업데이트될 때, 상기 제2 매트릭스를 다시 제2 매트릭스 대칭점(matrixsymmetry point)으로 재설정하기 위해 상기 제2 매트릭스에 제2 확률적 펄스(stochastic pulses)를 공급하는단계를 더 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7038017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하는 시스템에 있어서, 상기 시스템은:메모리; 및상기 메모리와 통신하는 하나 이상의 프로세서를 포함하고,상기 프로세서는,외적 하위 랭크 업데이트(outer product low rank updates)를 이용하여 스트리밍 데이터에 차원 축소를 적용하는 단계; 및상기 차원 축소가 전체 입력에 적용되면, 회귀 분석을 수행하기 위해 스케치된 매트릭스를 디지털 컴퓨터로 이동하는 단계를 수행하도록 구성되는, 시스템."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "아날로그 크로스바 아키텍처(analog crossbar architecture)를 이용하여 매트릭스 스케치(matrix sketching)를 수행하기 위해 프로세서에서 실행되는 컴퓨터 구현 방법(computer-implemented method)이 제시된다. 본 방법은 제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트하는 단계; 상기 제1 매트릭스를 동적 보정 컴퓨 (뒷면에 계속)"}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 아날로그 크로스바 아키텍처를 이용한 매트릭스 스케치에 관한 것이다."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "심층 신경망(deep neural networks : DNN)은 음성 인식, 자연어 처리, 이미지 분류 및 기계 번역과 같 은 어려운 문제를 해결하면서 어떤 경우에는 인간 수준의 성능을 능가하는 엄청난 발전을 이루었다. 그러나 대 형 DNN의 훈련은 최첨단 그래픽 처리 장치(GPU)로 구성된 데이터 센터 규모의 계산 리소스(computational resources)가 필요한, 시간이 많이 걸리고 계산 집약적인 작업이다. 기본적인 CMOS(Complementary Metal Oxide Semiconductor) 기술의 처리량과 에너지 효율성을 개선하기 위해 감소된 정밀 연산(precision arithmetic)을 사용하는 맞춤형 하드웨어(custom hardware)를 설계함으로써 GPU를 넘어 딥 러닝 워크로드(deep learning workloads)를 가속화하려는 시도가 있었다. 디지털 방식 대신에, 저항성 교차점 장치 배열(resistive cross- point device arrays)이 아날로그 영역에서 벡터 매트릭스 곱셈(vector-matrix multiplications)을 수행하여전체 시스템의 처리량과 에너지 효율성을 더욱 증가시키기 위해 제안되었다."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "디지털 방식 대신에, 저항성 교차점 장치 배열(resistive cross-point device arrays)이 아날로그 영역에서 벡 터 매트릭스 곱셈(vector-matrix multiplications)을 수행하여 전체 시스템의 처리량과 에너지 효율성을 더욱 증가시키기 위해 제안되었다."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따르면, 아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하는 방법이 제공 된다. 상기 방법은 제1 매트릭스를 제1 기간 동안 업데이트하는 단계와, 제1 매트릭스를 동적 보정 컴퓨팅 장치 (dynamic correction computing device)로 복사하는 단계와, 제2 매트릭스가 로우 랭크(low rank) 업데이트됨 에 따라 제2 매트릭스를 제2 기간 동안 업데이트하기 위해 제2 매트릭스로 전환하는 단계와, 제1 매트릭스를 다 시 제1 매트릭스 대칭점으로 리셋하기 위하여 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는 단계와, 제2 매트릭스을 동적 보정 컴퓨팅 장치로 복사하는 단계와, 제1 매트릭스을 제3 기간 동안 업데이트하 기 위해 제1 매트릭스로 다시 전환하는 단계와, 제1 매트릭스이 로우 랭크 업데이트됨에 따라 제2 매트릭스을 다시 제2 매트릭스 대칭점으로 리셋하기 위하여 제2 매트릭스에 제2 매트릭스 확률적 펄스를 공급하는 단계를 포함한다. 상기 업데이트들은 로우 랭크 업데이트들이다. 다른 실시예에 따르면, 아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하기 위한 시스 템이 제공된다. 상기 시스템은 메모리와 하나 이상의 프로세서를 포함한다. 메모리와 통신하는 상기 프로세서는 제1 매트릭스를 제1 기간 동안 업데이트하는 단계와, 제1 매트릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)로 복사하는 단계와, 제2 매트릭스가 로우 랭크(low rank) 업데이트됨에 따라 제 2 매트릭스를 제2 기간 동안 업데이트하기 위해 제2 매트릭스로 전환하는 단계와, 제1 매트릭스를 다시 제1 매 트릭스 대칭점으로 리셋하기 위하여 제1 매트릭스에 제1 확률적 펄스(stochastic pulses)를 공급하는 단계와, 제2 매트릭스을 동적 보정 컴퓨팅 장치로 복사하는 단계와, 제1 매트릭스을 제3 기간 동안 업데이트하기 위해 제1 매트릭스로 다시 전환하는 단계와, 제1 매트릭스이 로우 랭크 업데이트됨에 따라 제2 매트릭스을 다시 제2 매트릭스 대칭점으로 리셋하기 위하여 제2 매트릭스에 제2 매트릭스 확률적 펄스를 공급하는 단계를 수행하도록 구성된다. 상기 업데이트들은 로우 랭크 업데이트들이다. 또 다른 실시예에 따르면, 아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하기 위한 컴 퓨터 판독 가능한 프로그램을 포함하는 비일시적(non-transitory) 컴퓨터 판독 가능한 저장 매체가 제시된다. 상기 비일시적 컴퓨터 판독 가능한 저장 매체는 제1 매트릭스를 제1 기간 동안 업데이트하는 단계와, 제1 매트 릭스를 동적 보정 컴퓨팅 장치(dynamic correction computing device)로 복사하는 단계와, 제2 매트릭스가 로 우 랭크(low rank) 업데이트됨에 따라 제2 매트릭스를 제2 기간 동안 업데이트하기 위해 제2 매트릭스로 전환하 는 단계와, 제1 매트릭스를 다시 제1 매트릭스 대칭점으로 리셋하기 위하여 제1 매트릭스에 제1 확률적 펄스 (stochastic pulses)를 공급하는 단계와, 제2 매트릭스을 동적 보정 컴퓨팅 장치로 복사하는 단계와, 제1 매트 릭스을 제3 기간 동안 업데이트하기 위해 제1 매트릭스로 다시 전환하는 단계와, 제1 매트릭스이 로우 랭크 업 데이트됨에 따라 제2 매트릭스을 다시 제2 매트릭스 대칭점으로 리셋하기 위하여 제2 매트릭스에 제2 매트릭스 확률적 펄스를 공급하는 단계를 수행한다. 상기 업데이트들은 로우 랭크 업데이트들이다. 일 실시예에 따르면, 아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하는 방법이 제공 된다. 상기 방법은 외적(outer product) 업데이트를 이용하여 스트리밍 데이터에 차원 축소(dimensionality reduction)를 적용하는 단계와, 차원 축소가 입력 전체에 적용되면 회귀 분석(regression analysis)을 수행하기 위하여 스케치된 매트릭스을 디지털 컴퓨터로 이동하는 단계를 포함한다. 상기 업데이트들은 하위 업데이트들이 다. 다른 실시예에 따르면, 아날로그 크로스바 아키텍처를 이용하여 매트릭스 스케치를 수행하기 위한 시스 템이 제공된다. 상기 시스템은 메모리와 하나 이상의 프로세서를 포함한다. 메모리와 통신하는 상기 프로세서는 외적((outer product) 업데이트를 이용하여 스트리밍 데이터에 차원 축소(dimensionality reduction)를 적용하 는 단계와, 차원 축소가 입력 전체에 적용되면 회귀 분석(regression analysis)을 수행하기 위하여 스케치된 매 트릭스을 디지털 컴퓨터로 이동하는 단계를 수행하도록 구성된다. 상기 업데이트들은 하위 업데이트들이다. 예시적인 실시예들은 상이한 주제들을 참조하여 설명된다는 것에 유의해야 한다. 특히, 일부 실시예들은 방법 유형 청구항을 참조하여 설명되는 반면, 다른 실시예들은 장치 유형 청구항을 참조하여 설명된다. 그러나 별도의 통지가 없는 한, 한 유형의 주제에 속하는 특징들의 조합에 추가하여, 다른 주제에 관련된 특징들 특히 방법 유형 청구항의 특징들과 장치 유형 청구항의 특징들 사이의 임의의 조합도 가능함을 당업자들은 알아야 한 다. 이러한 특징 및 이점들은 첨부된 도면과 관련하여 제시되는 실시예들에 대한 다음의 상세한 설명으로부 터 명백해질 것이다."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 실시예들은 아날로그 크로스바 아키텍처(analog crossbar architectures)를 이용하여 매트릭스 스케치(matrix sketching)를 수행하는 방법을 제공한다. 최근 데이터 수집 기술의 발전으로 방대한 양 의 데이터가 매우 빠른 속도로 수집되고 있다. 또한, 이러한 데이터는 잠재적으로 무한하다. 센서, 장비, 및 기 타 데이터 소스에서 수집된 데이터의 무한한 스트림을 데이터 스트림(data streams)이라고 한다. 흥미로운 패턴 을 찾기 위해 데이터 스트림에서 다양한 데이터 마이닝(data mining) 작업을 수행할 수 있다. 데이터 마이닝 작 업은 일반적으로 데이터 스트리밍 알고리즘을 채택한다. 스트리밍 알고리즘은 일정한 양의 RAM(Random Access Memory)만 사용하여 매우 크고, 심지어 무한한 데 이터 세트를 처리하고 원하는 출력을 계산할 수 있다. 데이터 세트가 무제한이면 데이터 스트림이라고 한다. 이 러한 경우에 데이터 스트림의 처리가 어떤 위치 n에서 중지되면 스트리밍 알고리즘은 그 지점까지 본 데이터에 해당하는 솔루션을 갖게 된다. 따라서 스트리밍 알고리즘은 입력이 일련의 항목(sequence of items)으로 표시되 고 몇 번의 패스(passes)(보통 한 번만)로 검사될 수 있는 데이터 스트림을 처리하기 위한 알고리즘이다. 대부 분의 모델에서 이러한 알고리즘들은 제한된 메모리에 대한 액세스를 갖는다. 또한 이 알고리즘들은 항목당 제한"}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "된 처리 시간을 갖는다. 이러한 제약 조건은 알고리즘이 데이터 스트림의 요약 또는 \"스케치\"를 기반으로 대략 적인 답변을 생성함을 의미할 수 있다. 본 발명의 실시예들은 아날로그 크로스바 아키텍처를 이용한 스트리밍 알고리즘 기반의 매트릭스 스케치 를 사용한다. 최종 스케치 매트릭스는 아날로그 크로스바 하드웨어에 배치된다. 최종 스케치 매트릭스의 외적 (external product)은 확률적 펄스(stochastic pulses)의 적용에 의해 변경된다. 스케치 절차가 전체 입력에 적용되면 최종 스케치 매트릭스가 디지털 컴퓨터로 이동하여 회귀 분석을 수행한다."}
{"patent_id": "10-2022-7038017", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 주어진 예시적인 구조의 관점에서 설명되는 것으로 이해되어야 한다. 그러나 다른 아키텍처, 구조, 기판 재료(substrate materials), 및 프로세스 특징(process features) 및 단계/블록은 본 발명의 범위 내에서 변경될 수 있다. 명확성을 위해 특정 기능들은 모든 도면에서 도시될 수 없다는 점에 유의해야 한다. 이 는 청구항들을 특정 실시예, 예시 또는 범위의 제한으로 해석하기 위한 것이 아니다. 도 1은 본 발명의 일 실시예에 따른 스케치 매트릭스를 이용한 예시적인 아날로그 크로스바 아키텍처이 다. 아날로그 크로스바 어레이는 매트릭스 구성으로 배열된 복수의 스케치 저항 처리 장치(resistive processing units : RPUs)를 포함한다. 외적은 확률적 펄스(102, 104)를 적용하여 변경된다. 외적은 랭크 1 업데이트를 내재적으로(implicitly) 계산하고 업데이트하도록 변경된다. 작업이 끝나면 최종 스케치 매트릭스 가 아날로그 도메인에 존재한다. 해결 부분(solving part)은 아날로그 또는 디지털 도메인에서 수행될 수 있다. 펄스는 RPU 장치에 의해 실현될 수 있는 단순한 일치(coincidence) 검출로 곱셈을 감소시킨다. 확률적 업데이트 방식(stochastic update scheme)에서 열(columns)과 행(rows) (xi 및 δj)에서 인코딩 된 숫자는 확률적 변환기(stochastic translators)를 사용하여 확률적 비트 스트림(stochastic bit streams)으 로 변환된다. 이러한 확률적 변환기는 주변부에서 펄스 확률(pulse probabilities)을 조정하여 각 크로스바 요 소(crossbar element)에서 발생하는 펄스 일치(pulse coincidences)의 총 수를 제어한다. 이 방식에서, 이러한 펄스는 모든 행과 모든 열에 대해 크로스바 어레이로 동시에 전송되고, 다음에 각 일치 이벤트(coincidence event)에 대해 해당 RPU 장치는 소량의 Δgmin 만큼 전도도(conductance)를 변경한다. 그러나 펄스 스트림에는 많은 펄스가 존재하기 때문에 알고리즘이 요구하는 총 전도도 변화 Δgtotal,ij는 펄스 일치당 일련의 작은 전도도 변화 Δgmin으로 구현된다. 결과적으로 가중치 업데이트는 각각 전도도 증가(또는 감소)를 트리거하는 일련의 일 치 이벤트로 발생한다. Δwmin은 단일의 일치 이벤트로 인한 예상 가중치 변화이다. 주변 장치에서 생성된 펄스 는 열(또는 행) 중 모든 RPU 장치에 적용되며, 따라서 확률적 변환기는 각 RPU에서 원하는 가중치 변화를 일으 키도록 펄스 확률이 계산될 때 전체 어레이에 대해 단일의 Δgmin(또는 동등한 Δwmin) 값을 가정할 수 있다. 도 2는 본 발명의 일 실시예에 따른, 도 1의 스케치 매트릭스을 포함하는 예시적인 3D 크로스바 어레이 (crossbar array)이다. 다양한 실시예에서, 스케치 매트릭스은 복수의 비트 라인(bit lines)와 복수의 워드 라인 (word lines) 사이에 통합된 메모리 셀을 나타낸다. 따라서, 어레이는 수직 전도성 워드 라인 (행) 및 비트 라인(열)에 의해 얻어지며, 여기서 스케치 매트릭스은 각 행과 열의 교차점에 존 재한다. 저항성 메모리 소자를 갖는 스케치 매트릭스는 해당 워드 라인 및 비트 라인을 바이어 싱 함으로써 판독 및 기록을 위해 액세스될 수 있다. 도 3은 본 발명의 일 실시예에 따른, 동적 연산(dynamic computation)으로 아날로그 스트리밍을 하기 위 한 예시적인 시스템이다. 시스템은 제1 매트릭스 및 제2 매트릭스를 포함한다. 제1 및 제2 매트릭스(132, 134)는 동적 보정 컴퓨팅 장치(dynamic correction computing device)과 통신한다. 제1 매트릭스는 제1 기간(τ1) 동안 업데이트된다. 제1 매트릭스가 업데이트된 후, 그것은 동 적 보정 컴퓨팅 장치로 복사된다. 그 후, 업데이트 기능은 제2 매트릭스로 제2 시간(τ2) 동안 전환 된다. 제2 매트릭스가 업데이트되는 동안, 제1 매트릭스를 다시 대칭점(symmetry point)으로 재설정 하기 위해 제1 매트릭스에 확률적 펄스(stochastic pulses)가 공급된다. 다음에 제2 매트릭스는 동적보정 컴퓨팅 장치으로 복사된다. 업데이트는 제3 시간(τ3) 동안 제1 매트릭스로 다시 전환된다. 제1 매트릭스가 다시 업데이트됨에 따라, 제2 매트릭스를 다시 대칭점으로 재설정하기 위해 제2 매트릭스 에는 확률적 펄스가 공급된다. 이 과정은 최종 스케치 매트릭스(SXy)가 얻어질 때까지 반복된다. 제2 어레이의 활용은 추가 아키텍처를 희생하면서 지속적인 동작을 가능하게 한다. 스트리밍 데이 터(X, y)는 비대칭 효과를 더 향상시키지 않도록 정규화되어야 한다. 또한, 업데이트는 (-1, 1)의 전체 범위가 대칭점 근처에서 동작하도록 최종 SXy를 (-0.1, 0.1) 사이로 조정하기 위해 스케일이 조정되어야 한다. 대안적인 실시예들에서, 장치들이 완벽하게 대칭인 경우, 동적 보정의 필요성이 제거된다. 이 경우 운반 (carrying)/제로잉(zeroing) 작업 없이 단일 어레이를 사용할 수 있다. 대안적으로, 무작위 시퀀스가 대칭점 근 처에서의 동작을 보장한다고 가정하면 제로잉을 건너뛸 수 있다. 이러한 경우, 복사 작업이 작은 부분(예를 들 어, 열 단위)으로 처리되는 디지털 축적 장치(digital accumulation unit)에 추가하여 단일 장치가 다시 사용될 수 있다. 이러한 모든 결정은 당면한 문제와 장치에 따라 유연하고 상호 교환적으로 이루어질 수 있다. 스트리밍 알고리즘은 오픈 루프 통합 알고리즘(open-loop integration algorithm)이다. 따라서, 2차 어 레이를 사용하는 동적 시스템 방식은 제1 매트릭스의 재설정을 보장하지 않는다. 그러나 신경망과 달리 이러한 알고리듬은 벡터 매트릭스 곱셈(vector-matrix multiplication)에 의존하지 않으므로 누적 매트릭스 (accumulation matrix)은 디지털 영역에 존재할 수 있다. 따라서, 대신, 두 개의 배열 또는 매트릭스(132, 134)가 토글 방식(toggling fashion)으로 병렬로 사용될 수 있다. 대안적인 실시예에서, 2개 이상의 매트릭스가 사용될 수 있다. 예를 들어, 3개의 매트릭스이 사용될 수 있다. 다른 실시예에서는 4개의 매트릭스가 사용될 수 있다. 물론, 당업자는 동적 보정 컴퓨팅 장치과 협 력하여 사용되는 복수의 매트릭스를 고려할 수 있다. 하나의 예에서, 제1 매트릭스은 제1 기간(τ1) 동안 업데 이트될 수 있다. 제1 매트릭스가 업데이트된 후, 그것은 동적 보정 컴퓨팅 장치로 복사된다. 그 후, 상기 업데이트 기능은 제2 매트릭스로 제2 기간(τ2) 동안 전환된다. 제2 매트릭스가 업데이트되는 동안, 제1 매트릭 스와 제3 매트릭스는 확률적 펄스를 공급받아 제1 및 제3 매트릭스를 각각의 대칭점으로 재설정한다. 그런 다음 제2 매트릭스는 동적 보정 컴퓨팅 장치로 복사된다. 업데이트는 제3 매트릭스로 전환되며, 여기서 제3 매 트릭스는 제3 기간(τ3) 동안 업데이트될 수 있다. 제3 매트릭스가 업데이트된 후, 그것은 동적 보정 컴퓨팅 장 치로 복사된다. 그 후, 상기 업데이트 기능은 제4 기간 동안 제1 매트릭스로 다시 전환된다. 제1 매트릭스 가 업데이트됨에 따라 제2 및 제3 매트릭스는 확률적 펄스를 공급받아 제2 및 제3 매트릭스를 각각의 대칭점으 로 재설정한다. 따라서, 하나의 매트릭스는 업데이트될 수 있고, 다른 두개의 매트릭스는 각각의 대칭점으로 재 설정하기 위한 확률적 펄스를 공급받을 수 있다. 마찬가지로, 하나의 매트릭스는 업데이트될 수 있고, 다른 세 개의 매트릭스는 각각의 대칭점으로 재설정하기 위한 확률적 펄스를 공급받을 수 있다. 따라서, 복수의 매트릭 스는 하나 이상의 동적 보정 컴퓨팅 장치에 연결될 수 있으며, 여기서 각각의 대칭점으로 재설정하기 위한 확률적 펄스가 다른 모든 매트릭스에 공급되고 있을 때 하나의 매트릭스이 업데이트된다. 따라서, 예시적인 실 시예들은 동적 보정 컴퓨팅 장치에 연결된 매트릭스의 수에 제한되지 않는다. 도 4는 본 발명의 일 실시예에 따른 대칭점을 나타내는 3가지 상이한 소자 스위칭 특성을 나타내는 예시 적인 그래프를 도시하고 있다. 비대칭 업데이트와 관련하여, 아날로그 장치가 업데이트될 때 발생하는 증분 변화(incremental change) 는 소프트바운드 모델(softbound model)로 나타낼 수 있는 가중치에 따라 달라진다. 이 효과는 편향을 만들고 훈련 성과(SXy 생성)를 크게 손상시킨다. 이러한 장치의 경우 Δwincrement(w)=Δwdecrement(w)인 지점이 존재하며, 이를 대칭점(symmetry point)이라고 한다. 동일한 확률의 증가 및 감소 연산의 무작위 시퀀스는 필연적으로 장 치 상태를 이 대칭점으로 유도한다. 이 동작은 스트리밍 알고리즘이 많은 증분 변경을 포함하기 때문에 스트리 밍 알고리즘에서 관찰된다. 요구 사항은 이러한 아날로그 저항 소자가 양 또는 음의 전압 펄스 자극에 의해 전 도도를 대칭적으로 변경해야 한다는 것이다. 도 4는 3가지 상이한 소자 스위칭 특성을 도시하고 있다. 이상적 소자에서 전도도 증가 및 감소는 크기가 동일하며 장치 전도도에 의존하지 않는다. 대칭 소자에서 전도도의 증가 및 감소는 강도가 동일하 지만, 둘 다 소자 전도도에 의존한다. 비대칭 소자에서 전도도의 증가 및 감소는 강도가 동일하지 않고 둘 다 소자 전도도에 대한 의존성이 다르다. 그러나 전도도 증가 및 감소의 강도가 동일한 단일의 지점이 존재한다. 이 점을 대칭점(symmetry point)이라고 하며, 예시된 예제의 경우 기준 소자 전도도와 일치하므로 ?? = 0에서 발생한다. 대칭점이 이상적 소자에, 대칭점이 대칭 소자에, 대칭점이 비대칭소자에 도시되어 있다. 180으로 표시된 비대칭 소자의 경우에도 전도도의 증가 및 감소의 강도가 동일한 단일 지점(전도도 값) 이 존재한다는 점에 유의하라. 이 점을 업데이트된 장치의 대칭점이라고 하며 장치 간 변동으로 인해 모든 가중 치(180으로 표시된 대로 0이 될 필요는 없음)에 해당될 수 있다. 도 5는 본 발명의 일 실시예에 따라, 개방 루프 통합 방법에서 병렬로 이용된 2개의 어레이에 대한 예시 적인 방법의 블록/흐름 도면이다. 블록에서, 제1 기간 동안 제1 매트릭스를 하위 랭크(low rank)로 업데이트한다. 블록에서 제1 매트릭스을 동적 보정 컴퓨팅 장치에 복사한다. 블록에서 제2 매트릭스로 전환하고 제2 기간 동안 제2 매트릭스을 하위 랭크로 업데이트한다. 블록에서 제2 매트릭스를 업데이트하는 동안(또는 동시에) 제1 매트릭스에 펄스를 공급하여 대칭점 으로 재설정한다. 블록에서 제2 매트릭스를 동적 보정 컴퓨팅 장치에 복사한다. 블록에서 제1 매트릭스로 전환하고, 제3 기간 동안 제1 매트릭스를 하위 랭크로 업데이트한다. 블록에서 제1 매트릭스를 업데이트하는 동안(또는 동시에) 제2 매트릭스에 펄스를 공급하여 대칭점 으로 재설정한다. 도 6은 본 발명의 일 실시예에 따라, 제1 매트릭스과 제2 매트릭스 사이를 전환하는 예시적인 방법의 블 록/흐름 도면이다. 블록에서 메소드(method)가 대기한다. 블록에서 새로운 샘플이 수신되는지 여부를 판단한다. \"아니오\"일 경우, 매트릭스가 판독되고 장치 가 전환되는 블록으로 프로세스가 진행된다. \"예\"일 경우, 프로세스는 블록으로 진행된다. 블록에서 벡터 \"s\"가 생성된다. 블록에서 아날로그 하위 랭크 업데이트(analog low rank update)가 수행되고 프로세스는 블록 으로 진행된다. 블록에서 매트릭스는 디지털 형태로 또는 별도의 아날로그 장치에 저장된다. 도 7은 본 발명의 실시예에 따른, 스트리밍 알고리즘을 처리하기 위한 예시적인 처리 시스템이다. 도 7은 본 발명의 일 실시예에 따른 컴퓨팅 시스템의 하드웨어 구성을 도시한다. 도시된 바와 같이, 이 하드웨어 구성에는 적어도 하나의 프로세서 또는 중앙 처리 장치(CPU)가 있다. CPU은 시스 템 버스를 통해 RAM(random access memory), ROM(read-only memory), (디스크 장치 및 테 이프 드라이브과 같은 주변 장치를 버스에 연결하기 위한) 입출력(I/O) 어댑터, (키보드, 마우스, 스피커, 마이크 및/또는 기타 사용자 인터페이스 장치를 버스에 연결하기 위한) 사용자 인터페이스 어댑터, 시스템을 데이터 처리 네트워크, 인터넷, 인트라넷, 근거리 통신망(LAN) 등에 연결하기 위한 통신 어댑터, 및 버스를 디스플레이 장치 및/또는 프린터(예를 들어, 디지털 프린터 등)에 연결하기 위한 디스플레이 어댑터에 상호 연결된다. 도 8은 본 발명의 일 실시예에 따른 예시적인 클라우드 컴퓨팅 환경의 블록/흐름 도면이다. 도 8은 본 발명의 일 실시예에 따른 예시적인 클라우드 컴퓨팅 환경의 블록/흐름 도면이다. 본 명세서가 클라우드 컴퓨팅에 대한 상세한 설명을 포함하지만, 여기에 개시된 발명의 구현이 클라우드 컴퓨팅 환경에 한정되는 것은 아니라는 것이 이해되어야 한다. 오히려, 본 발명의 실시예들은 현재 알려져 있거 나 나중에 개발될 임의의 다른 유형의 컴퓨팅 환경과 함께 구현될 수 있다. 클라우드 컴퓨팅은 최소한의 관리 노력이나 서비스 제공자와의 상호 작용으로 신속하게 프로비저닝 (provisioning) 및 릴리스(release)할 수 있는, 구성 가능한 컴퓨팅 리소스(예를 들어, 네트워크, 네트워크 대 역폭, 서버, 처리, 메모리, 스토리지, 애플리케이션, 가상 머신 및 서비스)의 공유 풀에 대한 편리한 주문형 네 트워크 액세스를 가능하게 하는 서비스 제공 모델입니다. 이 클라우드 모델에는 최소 5개의 특성, 최소 3개의서비스 모델 및 최소 4개의 배포(deployment) 모델이 포함될 수 있다. 특성들은 다음과 같다. 주문형 셀프 서비스(On-demand self-service) : 클라우드 소비자는 서비스 공급자와의 인적 상호 작용 없이 필요에 따라 자동으로 서버 시간 및 네트워크 스토리지와 같은 컴퓨팅 기능을 일방적으로 프로비저닝 (provisioning)할 수 있다. 광범위한 네트워크 액세스(Broad network access) : 기능들을 네트워크를 통해 사용할 수 있으며, 이기 종 씬 또는 씩 클라이언트 플랫폼(heterogeneous thin or thick client platforms)(예를 들어, 휴대폰, 노트북 및 PDA)의 사용을 촉진하는 표준 메커니즘을 통해 액세스할 수 있다. 리소스 풀링(Resource pooling) : 공급자의 컴퓨팅 리소스는 수요에 따라 동적으로 할당 및 재할당되는 다양한 물리적 및 가상 리소스로 다중 테넌트(Multi-tenant) 모델을 사용하여 여러 소비자에게 서비스를 제공하 기 위해 풀링(pooling)된다. 소비자는 일반적으로 제공된 자원의 정확한 위치에 대한 제어 또는 지식이 없지만 더 높은 수준의 추상화(예를 들어, 국가, 주 또는 데이터 센터)에서 위치를 지정할 수 있다는 점에서 위치 독립 성( location independence)이 있다. 신속한 탄력성(Rapid elasticity) : 기능을 신속하고 탄력적으로 프로비저닝하여, 경우에 따라 자동으로 신속하게 확장(scale out)하고 신속하게 릴리스(release)하여 신속하게 축소(scale in)할 수 있다. 소비자에게, 프로비저닝에 사용할 수 있는 기능은 종종 무제한으로 보이며 언제든지 언제든지 원하는 수량으로 구매될 수 있 다. 측정된 서비스(Measured service) : 클라우드 시스템은 서비스 유형(예를 들어, 스토리지, 처리, 대역폭 및 활성 사용자 계정)에 적합한 추상화 수준의 측정 기능(metering capability)을 활용하여 리소스 사용을 자동 으로 제어하고 최적화한다. 리소스 사용량을 모니터링, 제어 및 보고할 수 있으므로, 활용된 서비스의 공급자와 소비자 모두에게 투명성(transparency)을 제공한다. 서비스 모델은 다음과 같다. SaaS(Software as a Service) : 소비자에게 제공되는 기능dms 클라우드 인프라에서 실행되는 공급자의 애플리케이션을 사용하는 것이다. 애플리케이션은 웹 브라우저(예를 들어, 웹 기반 이메일)와 같은 씬 클라이언 트 인터페이스(thin client interface)를 통해 다양한 클라이언트 장치에서 액세스할 수 있다. 소비자는 제한된 사용자별 애플리케이션 구성 설정을 제외하고 네트워크, 서버, 운영 체제, 스토리지 또는 개별 애플리케이션 기 능을 포함한 기본 클라우드 인프라를 관리하거나 제어하지 않는다. PaaS(Platform as a Service) : 소비자에게 제공되는 기능은 공급자가 지원하는 프로그래밍 언어와 도구 를 사용하여 소비자가 생성하거나 획득한 애플리케이션을 클라우드 인프라에 배포하는 것이다. 소비자는 네트워 크, 서버, 운영 체제 또는 스토리지를 포함한 기본 클라우드 인프라를 관리하거나 제어하지 않지만 배포된 애플 리케이션 및 애플리케이션 호스팅 환경 구성을 제어할 수 있다. IaaS(Infrastructure as a Service) : 소비자에게 제공되는 기능은 소비자가 운영 체제와 애플리케이션 을 포함할 수 있는 임의의 소프트웨어를 배포 및 실행할 수 있는 프로세싱(processing), 스토리지, 네트워크 및 기타 기본 컴퓨팅 리소스를 프로비저닝하는 것이다. 소비자는 기본 클라우드 인프라를 관리하거나 제어하지 않 지만 운영 체제, 스토리지, 배포된 애플리케이션에 대한 제어 권한이 있으며, 일부 네트워킹 구성 요소(예를 들 어, 호스트 방화벽)에 대한 제한된 제어 권한이 있을 수 있다. 배포 모델은 다음과 같다. 프라이빗 클라우드(Private cloud) : 클라우드 인프라는 조직만을 위해 운영된다. 조직 또는 제3자가 관 리할 수 있으며 온프레미스(on-premises) 또는 오프프레미스(off-premises)에 존재할 수 있다. 커뮤니티 클라우드(Community cloud) : 클라우드 인프라는 여러 조직에 의해 공유되며 공통 관심사(예를 들어, 미션, 보안 요구 사항, 정책 및 규정 준수 고려 사항)가 있는 특정 커뮤니티를 지원한다. 조직 또는 제3 자가 관리할 수 있으며 온프레미스 또는 오프프레미스에 존재할 수 있다. 퍼블릭 클라우드(Public cloud) : 클라우드 인프라는 일반 대중 또는 대규모 산업 그룹이 사용할 수 있 도록 만들어졌으며 클라우드 서비스를 판매하는 조직이 소유한다. 하이브리드 클라우드(Hybrid cloud) : 클라우드 인프라는 두 개 이상의 클라우드(프라이빗, 커뮤니티 또 는 퍼블릭)로 구성된 것으로, 고유한 엔터티(entities)로 남아있지만 데이터 및 애플리케이션 이식성 (portability)(예: 클라우드 간 로드 밸런싱을 위한 클라우드 버스트(cloud bursting for load-balancing between clouds))을 지원하는 표준화된 또는 독점적 기술로 결합된다. 클라우드 컴퓨팅 환경은 무상태(statelessness), 낮은 결합(low coupling), 모듈성(modularity) 및 의 미론적 상호운용성(semantic interoperability)에 초점을 둔 서비스 지향적이다. 클라우드 컴퓨팅의 핵심은 상 호 연결된 노드의 네트워크를 포함하는 인프라이다. 도 8은 본 발명의 사용 사례를 가능하게 하기 위한 예시적인 클라우드 컴퓨팅 환경을 도시하고 있 다. 도시된 바와 같이, 클라우드 컴퓨팅 환경은, 예를 들어, PDA(Personal Digital Assistant) 또는 휴대 폰(754A), 데스크톱 컴퓨터(754B), 노트북 컴퓨터(754C) 및/또는 자동차 컴퓨터 시스템(754N)과 같은 클라우드 소비자가 사용하는 로컬 컴퓨팅 장치들이 통신할 수 있는 하나 이상의 클라우드 컴퓨팅 노드를 포함한다. 노드들은 서로 통신할 수 있다. 이것들은 위에서 설명한 프라이빗(Private), 커뮤니티(Community), 퍼블릭 (Public) 또는 하이브리드(Hybrid) 클라우드와 같은 하나 이상의 네트워크 또는 이들의 조합에서 물리적으로 또 는 가상으로 그룹화(도시되지 않음)될 수 있다. 이것은 클라우드 컴퓨팅 환경이 클라우드 소비자가 로컬 컴퓨팅 장치에서 리소스를 유지할 필요가 없는 서비스로서 인프라, 플랫폼 및/또는 소프트웨어를 제공할 수 있 게 한다. 도 8에 도시된 컴퓨팅 장치들(754A-N)의 종류는 예시적인 것으로, 컴퓨팅 노드들 및 클라우드 컴 퓨팅 환경은 어떠한 유형의 네트워크 및/또는 네트워크 주소 가능 연결(network addressable connection)(예를 들어, 웹 브라우저 사용)을 통해 어떠한 유형의 컴퓨터화된 장치와 통신할 수 있는 것으로 이 해된다. 도 9는 본 발명의 일 실시예에 따른 예시적인 추상화 모델 레이어의 구성도이다. 도 9에 도시된 구성요 소, 레이어(layer) 및 기능은 예시적인 것일 뿐 본 발명의 실시예가 이에 한정되는 것은 아님을 미리 이해해야 한다. 도시된 바와 같이, 다음과 같은 레이어들 및 해당 기능이 제공된다. 하드웨어 및 소프트웨어 레이어는 하드웨어 및 소프트웨어 구성요소를 포함한다. 하드웨어 구성요 소들의 예로는 메인프레임; RISC(Reduced Instruction Set Computer) 아키텍처 기반 서버; 서버 , 블레이드 서버(blade servers); 스토리지 장치; 및 네트워크 및 네트워킹 구성요소가 있다. 일부 실시예들에서, 소프트웨어 구송요소들은 네트워크 애플리케이션 서버 소프트웨어와 데이터베이 스 소프트웨어를 포함한다. 가상화 레이어는 가상 서버; 가상 스토리지; 가상 사설 네트워크를 포함한 가상 네트워 크; 가상 애플리케이션 및 운영 체제; 및 가상 클라이언트와 같은 가상 엔티티(virtual entities)의 예를 제공할 수 있는 추상화 레이어를 제공한다. 하나의 예에서, 관리 레이어는 아래에 설명된 기능을 제공할 수 있다. 리소스 프로비저닝(Resource provisioning)는 클라우드 컴퓨팅 환경에서 작업을 수행하는 데 사용되는 컴퓨팅 리소스 및 기타 리소스의 동적 조달(dynamic procurement)을 제공한다. 측정 및 가격 책정은 클라우드 컴퓨팅 환경에서 리소스가 활 용될 때 비용을 추적하고 이러한 리소스의 사용에 대한 청구 또는 송장 발행을 제공한다. 하나의 예에서 이러한 리소스는 응용 프로그램 소프트웨어 라이센스를 포함할 수 있다. 보안은 클라우드 소비자 및 작업에 대한 신원 확인은 물론 데이터 및 기타 리소스에 대한 보호를 제공한다. 사용자 포털은 소비자 및 시스템 관리자에게 클라우드 컴퓨팅 환경에 대한 액세스를 제공한다. 서비스 수준 관리는 필요한 서비스 수준을 충족할 수 있 도록 클라우드 컴퓨팅 리소스 할당 및 관리를 제공한다. 서비스 수준 관리는 정적 센서 데이터(static sensor data)를 처리하기 위해 적절한 처리 능력 및 메모리를 할당할 수 있다. 서비스 수준 계약(Service Level Agreement : SLA) 계획 및 이행은 SLA에 따라 향후 요구 사항이 예상되는 클라우드 컴퓨팅 리소스의 사전 준비 및 조달을 제공한다. 워크로드 레이어(Workloads layer)는 클라우드 컴퓨팅 환경을 활용할 수 있는 기능들의 예를 제공 한다. 이 레이어에서 제공되는 워크로드 및 기능들의 예로는 매핑 및 탐색; 소프트웨어 개발 및 라이프사 이클 관리; 가상 강의실 교육 제공; 데이터 분석 처리; 트랜잭션 처리; 및 스트리밍 알고 리즘이 있다. 도 10은 본 발명의 실시예에 따른, 사물인터넷(IoT) 시스템/장치/인프라에서 개방 루프 통합 방식을 적 용하는 방법의 블록/흐름 도면이다. 본 발명의 일부 실시예에 따르면, 네트워크는 IoT 방법론을 사용하여 구현된다. 예를 들어, 스트리밍 알 고리즘는 예를 들어, 웨어러블(wearable), 이식형(implantable) 또는 섭취 가능한(ingestible) 전자 장치 및 사물인터넷(IoT) 센서에 통합될 수 있다. 웨어러블, 이식형 또는 섭취 가능한 장치는 피트니스 장치뿐만 아 니라 적어도 건강 및 웰빙 모니터링 장치를 포함할 수 있다. 웨어러블, 이식형 또는 섭취 가능한 장치는 적어도 이식형 장치, 스마트 시계, 머리 장착형 장치, 보안 및 예방 장치, 게임 및 라이프스타일 장치를 더 포함할 수 있다. IoT 센서는 적어도 홈 자동화 애플리케이션(home automation applications), 자동차 애플리케이션, 사용 자 인터페이스 애플리케이션, 라이프스타일 및/또는 엔터테인먼트 애플리케이션, 도시 및/또는 인프라 애플리케 이션, 장난감, 의료, 피트니스, 소매(retail), 태그(tags) 및/또는 추적기, 플랫폼 및 구성 요소 등에 통합될 수 있다. 본 명세서에 설명된 스트리밍 알고리즘는 임의의 유형의 사용, 애플리케이션 또는 작동을 위해 임의 유형의 전자 장치에 통합될 수 있다. IoT 시스템을 통해 사용자는 시스템 내에서 더 깊은 자동화, 분석 및 통합을 달성할 수 있다. IoT는 이 러한 영역의 도달 범위와 정확도를 향상시킨다. IoT는 감지, 네트워킹 및 로봇 공학에 기존 및 새로운 기술을 활용한다. IoT의 특징에는 인공지능, 연결성, 센서, 능동적 참여(active engagement) 및 소형 장치 사용이 포함 된다. 다양한 실시예에서, 본 발명의 스트리밍 알고리즘은 다양한 상이한 장치 및/또는 시스템에 통합될 수 있다. 예를 들어, 스트리밍 알고리즘은 웨어러블 또는 휴대용 전자 장치에 통합될 수 있다. 웨어 러블/휴대용 전자 장치는 스마트 의류(smart clothing)과 같은 이식형 장치를 포함할 수 있다. 웨어러블/휴대용 장치는 스마트 시계와 스마트 쥬얼리(smart jewelry)를 포함할 수 있다. 웨어 러블/휴대용 장치는 피트니스 모니터링 디바이스, 건강 및 웰니스 모니터링 디바이스, 머리 장 착 장치(예를 들어, 스마트 안경), 보안 및 예방 시스템, 게임 및 라이프스타일 장치, 스 마트폰/태블릿, 미디어 플레이어 및/또는 컴퓨터/컴퓨팅 장치를 더 포함할 수 있다. 본 발명의 스트리밍 알고리즘은 피트니스뿐만 아니라 홈 오토메이션, 자동차, 사용 자 인터페이스, 라이프스타일 및/또는 엔터테인먼트, 도시 및/또는 인프라, 소매, 태그 및 /또는 추적기, 플랫폼 및/또는 구성요소들, 장난감 및/또는 헬스케어와 같은 다양한 애플 리케이션을 위한 사물인터넷(IoT) 센서에 더 통합될 수 있다. IoT 센서는 스트리밍 알고리즘를 사용할 수 있다. 물론, 당업자는 본 명세서에 기재된 것에 한정되지 않고, 이러한 스트리밍 알고리즘을 임 의의 유형의 애플리케이션에 대한 임의의 유형의 전자 장치에 통합하는 것을 고려할 수 있다. 도 11은 본 발명의 실시예에 따른, 오픈 루프 통합 방식 스트리밍 알고리즘과 관련된 데이터/정보를 수 집하기 위해 사용되는 예시적인 IoT 센서의 블록/흐름 도면이다. IoT는 센서가 없으면 그것의 특징을 잃는다. IoT 센서는 IoT를 표준 수동 네트워크(standard passive network)의 장치들을 실제 통합이 가능한 능동 시스템으로 변환하는 정의 도구(defining instruments)의 역할을 한다. IoT 센서는 스트리밍 알고리즘를 사용하여 네트워크을 통해 모든 유형의 분산 시스템에 지속적으로 실시간으로 정보/데이터를 전송할 수 있다. 예시적인 IoT 센서는 위치/존재/근접 센서, 움직임/속도 센서, 가속도/틸트(tilt) 센서와 같은 변위 센서, 온도 센서, 습도 (humidity)/습기(moisture) 센서, 유량 센서, 음향(acoustic)/사운드(sound)/진동 센서, 화 학/가스 센서, 힘/부하/감속/감속/압력 센서 및/또는 전기/자기 센서를 포함할 수 있으나 이 에 한정되는 것은 아니다. 당업자는 이러한 센서의 임의의 조합을 사용하여 분산 시스템의 스트리밍 알고리즘 을 통해 데이터/정보를 수집하여 추가 처리를 수행하는 것을 고려할 수 있다. 당업자는 자력계, 자이로스 코프, 이미지 센서, 광 센서, 무선 주파수 식별(RFID) 센서 및/또는 마이크로 플로우 센서와 같은 다른 유형의 IoT 센서를 사용하는 것을 고려할 수 있다. IoT 센서는 또한 에너지 모듈, 전력 관리 모듈, RF 모듈 및 감지 모 듈을 포함할 수 있다. RF 모듈은 신호 처리, WiFi, ZigBee®, Bluetooth®, 라디오 트랜시버, 듀플렉서 등을 통 해 통신을 관리한다. 본 명세서에서 사용되는 용어 \"데이터\", \"콘텐츠\", \"정보\" 및 이와 유사한 용어들은 다양한 실시예에 따 라 캡처, 전송, 수신, 표시 및/또는 저장될 수 있는 데이터를 지칭하기 위해 상호 교환 가능하게 사용될 수 있 다. 따라서, 그러한 용어는 본 발명의 정신과 범위를 제한하기 위해 사용되어서는 안 된다. 또한, 컴퓨팅 장치 가 다른 컴퓨팅 장치로부터 데이터를 수신하는 것으로 여기에서 설명되는 경우, 데이터는 다른 컴퓨팅 장치로부 터 직접 수신되거나, 예를 들어, 하나 이상의 서버, 릴레이, 라우터, 네트워크 액세스 포인트, 기지국 등과 같 은 하나 이상의 중간 컴퓨팅 장치를 통해 간접적으로 수신될 수 있다. 사용자와의 상호작용을 제공하기 위해, 본 명세서에서 설명되는 주제의 실시예들은 예를 들어, CRT(cathode ray tube) 또는 LCD(liquid crystal display) 모니터와 같은 사용자에게 정보를 표시하기 위한 표 시 장치와, 사용자가 컴퓨터에 입력을 제공할 수 있는 키보드 및 포인팅 장치(예를 들어, 마우스 또는 트랙볼 (trackball))를 갖는 컴퓨터에서 구현될 수 있다. 다른 종류의 장치를 사용하여 사용자와의 상호작용을 제공할 수 있다. 예를 들어, 사용자에게 제공되는 피드백은 시각적 피드백, 청각적 피드백 또는 촉각적 피드백과 같은 임의의 형태의 감각적 피드백일 수 있다. 사용자로부터의 입력은 음향, 음성 또는 촉각 입력을 포함한 모든 형 태로 수신될 수 있다. 본 발명은 시스템, 방법 및/또는 컴퓨터 프로그램 제품일 수 있다. 컴퓨터 프로그램 제품은 프로세서가 본 발명의 실시예들을 수행하도록 하기 위한 컴퓨터 판독 가능한 프로그램 명령들을 갖는 컴퓨터 판독 가능한 저장 매체를 포함할 수 있다. 컴퓨터 판독 가능한 저장 매체는 명령어 실행 장치에 의해 사용하기 위한 명령어를 보관 및 저장할 수 있는 유형의(tangible) 장치일 수 있다. 컴퓨터 판독 가능한 저장 매체는, 예를 들어, 전자 기억 장치, 자기 기 억 장치, 광 기억 장치, 전자기 기억 장치, 반도체 기억 장치, 또는 전술한 임의의 적절한 조합일 수 있으나, 이에 한정되는 것은 아니다. 컴퓨터 판독 가능한 저장 매체의 구체적인 예는 휴대용 컴퓨터 디스켓, 하드 디스 크, 랜덤 액세스 메모리(RAM), 읽기 전용 메모리(ROM), 소거 가능한 프로그램 가능 읽기 전용 메모리(EPROM 또 는 플래시 메모리), 정적 랜덤 액세스 메모리(SRAM), 휴대용 콤팩트 디스크 읽기 전용 메모리(CD-ROM), 디지털 다용도 디스크(DVD), 메모리 스틱(memory stick), 플로피 디스크, 펀치 카드 또는 명령어가 기록된 그루브 내의 상승된 구조(raised structures in a groove having instructions recorded thereon)와 같은 기계적으로 인코 딩된 장치, 및 전술한 임의의 적절한 조합을 포함한다. 본 명세서에서 사용되는 컴퓨터 판독 가능한 저장 매체 는, 전파 또는 자유롭게 전파되는 다른 전자기파, 도파관 또는 다른 전송 매체를 통해 전파되는 전자기파(예를 들어, 광섬유 케이블을 통과하는 광 펄스) 또는 전선을 통해 전송되는 전기 신호와 같은 일시적인 신호 그 자체 로 해석되지 않는다. 본 명세서에 설명된 컴퓨터 판독 가능한 프로그램 명령들은 컴퓨터 판독 가능한 저장 매체로부터 각각의 컴퓨팅/프로세싱 장치들로 다운로드되거나, 네트워크, 예를 들어, 인터넷, 로컬 영역 네트워크, 광역 네트워크 및/또는 무선 네트워크를 통해 외부 컴퓨터 또는 외부 저장 장치로 다운로드될 수 있다. 네트워크는 구리 전송 케이블, 광 전송 섬유, 무선 전송, 라우터, 방화벽, 스위치, 게이트웨이 컴퓨터 및/또는 에지 서버(edge servers)를 포함할 수 있다. 각 컴퓨팅/프로세싱 장치의 네트워크 어댑터 카드 또는 네트워크 인터페이스는 네 트워크로부터 컴퓨터 판독 가능한 프로그램 명령을 수신하고, 각각의 컴퓨팅/프로세싱 장치 내의 컴퓨터 판독 가능한 저장 매체에 저장하기 위하여 컴퓨터 판독 가능한 프로그램 명령을 전달한다. 본 발명의 방법을 수행하기 위한 컴퓨터 판독 가능한 프로그램 명령어는 어셈블러 명령어, 명령어-세트- 아키텍처(instruction-set-architecture : ISA) 명령어, 기계 명령어, 기계 종속 명령어(machine dependent instructions), 마이크로코드, 펌웨어 명령어, 상태 설정 데이터, 집적 회로용 구성 데이터, 또는 Smalltalk, C++ 등과 같은 객체 지향 프로그래밍 언어와 \"C\" 프로그래밍 언어 또는 유사한 프로그래밍 언어와 같은 절차적 프로그래밍 언어를 포함하여 하나 이상의 프로그래밍 언어의 조합으로 작성된 소스 코드 또는 객체 코드일 수 있다. 컴퓨터 판독 가능한 프로그램 명령들은 완전히 사용자의 컴퓨터에서, 부분적으로 사용자의 컴퓨터에서, 독립 실행형 소프트웨어 패키지로, 부분적으로 사용자의 컴퓨터와 부분적으로 원격 컴퓨터에서, 또는 완전히 원 격 컴퓨터나 서버에서 실행될 수 있다. 후자의 시나리오에서, 원격 컴퓨터는 LAN(local area network) 또는 WAN(wide area network)을 포함한 모든 유형의 네트워크를 통해 사용자의 컴퓨터에 연결될 수 있으며, 외부 컴 퓨터(예를 들어, 인터넷 서비스 공급자를 이용한 인터넷)에 연결될 수 있다. 일부 실시예들에서, 예를 들어, 프 로그래머블 논리 회로, 필드 프로그래머블 게이트 어레이(FPGA) 또는 프로그래머블 논리 어레이(PLA)를 포함하 는 전자 회로는 본 발명의 실시예드를 수행하기 위해 전자 회로를 개인화할 목적으로 컴퓨터 판독 가능한 프로 그램 명령들의 상태 정보를 이용함으로써 컴퓨터 판독 가능한 프로그램 명령들을 실행할 수 있다. 본 발명의 실시예들에 따른 방법, 장치(시스템) 및 컴퓨터 프로그램 제품의 흐름도 및/또는 블록도를 참 조하여 본 발명의 실시예를 설명한다. 흐름도 및/또는 블록도의 각 블록, 및 흐름도 및/또는 블록도의 블록 조 합은 컴퓨터 판독 가능한 프로그램 명령에 의해 구현될 수 있음을 이해한다. 이러한 컴퓨터 판독 가능한 프로그램 명령들은 컴퓨터의 프로세서, 또는 기계를 생산하는 다른 프로그램 가능한 데이터 처리 장치에 제공될 수 있으며, 컴퓨터의 프로세서 또는 다른 프로그램 가능한 데이터 처리 장치 를 통해 실행되는 명령어는 흐름도 및/또는 블록도의 블록 또는 블록들 또는 모듈들에 지정된 기능/동작을 구현하기 위한 수단을 생성한다. 이러한 컴퓨터 판독 가능한 프로그램 명령들은 또한 컴퓨터, 프로그램 가능한 데이 터 처리 장치 및/또는 다른 장치들이 특정한 방식으로 작동하도록 지시할 수 있는 컴퓨터 판독 가능한 저장 매 체에 저장될 수 있으며, 명령어가 저장된 컴퓨터 판독 가능 저장 매체는 흐름도 및/또는 블록도의 블록 또는 블 록들 또는 모듈들에 지정된 기능/동작의 실시예들을 구현하는 명령어를 포함하는 제조 물품을 포함한다. 컴퓨터 판독 가능한 프로그램 명령들은 또한 컴퓨터, 다른 프로그램 가능한 데이터 처리 장치 또는 다른 장치에 로드되어 컴퓨터, 다른 프로그램 가능한 장치 또는 다른 장치 상에서 수행되는 일련의 동작 단계들이 컴 퓨터에서 구현된 프로세스들을 생성하도록 할 수 있으며, 이로써 컴퓨터, 다른 프로그램 가능한 장치 또는 다른 장치에서 실행되는 명령어는 흐름도 및/또는 블록도의 블록 또는 블록들 또는 모듈들에 지정된 기능/동작을 구 현한다. 도면들에서 흐름도 및 블록도는 본 발명의 다양한 실시예에 따른 시스템, 방법 및 컴퓨터 프로그램 제품 의 가능한 구현의 구조, 기능 및 동작을 도시하고 있다. 이와 관련하여, 흐름도 또는 블록도의 각 블록은 모듈, 벡터 또는 명령의 일부를 나타낼 수 있으며, 이는 지정된 논리 함수를 구현하기 위한 하나 이상의 실행 가능한 명령들을 포함한다. 일부 대체 구현에서는 블록에 표시된 기능이 도면에 표시된 순서대로 발생할 수 있다. 예를 들어, 연속적으로 표시된 두 개의 블록은 실제로 한 단계로 수행될 수 있으며, 동시에, 실질적으로 동시에, 부 분적으로 또는 전체적으로 시간적으로 중첩되는 방식으로 실행되거나, 때때로 관련된 기능에 따라 역순으로 블 록들이 실행될 수 있다. 또한 블록도 및/또는 흐름도의 각 블록, 및 블록도 및/또는 흐름도의 블록 조합은 특정 기능을 수행하거나 특수 목적 하드웨어와 컴퓨터 명령의 조합을 수행하거나 작동하는 특수 목적 하드웨어 기반 시스템에 의해 구현될 수 있다는 점에 유의해야 한다. 본 명세서에서 본 발명의 \"일 실시예\" 및 다른 변형이라는 언급은, 실시예와 관련하여 설명되는 특정 특 징, 구조, 특성 등이 본 발명의 적어도 하나의 실시예에 포함됨을 의미한다. 따라서, 명세서 전체에 걸쳐 다양 한 장소에서 나타나는 \"일 실시예\"라는 문구는 다른 변형과 마찬가지로 반드시 동일한 실시예를 언급하는 것은 아니다. 예를 들어 \"A/B\", \"A 및/또는 B\" 및 \"A 및 B 중 적어도 하나\"의 경우와 같이, \"/\", \"및/또는\", 및 \"중 적어도 하나\"의 사용은 첫 번째 나열된 옵션(A)만 선택, 두 번째로 나열된 옵션(B)만 선택, 두 옵션(A 및 B) 모 두 선택을 포함하는 것을 의도하는 것으로 이해되어야 한다. 또 다른 예로, \"A, B 및/또는 C\"와 \"A, B 및 C 중 적어도 하나\"의 경우, 이러한 문구는 첫 번째 나열된 옵션(A)만 선택, 두 번째 나열된 옵션(B)만 선택, 세 번째 나열된 옵션(C)만 선택, 첫 번째 및 두 번째 나열된 옵션(A 및 B)만 선택, 첫 번째 및 세 번째 나열된 옵션(A 및 C)만 선택, 두 번째 및 세 번째 나열된 옵션(B 및 C)만 선택, 세 옵션(A 및 B 및 C) 모두 선택을 포함하는 것을 의도한다. 이것은 열거된 많은 항목에 대해, 이 기술 및 관련 기술 분야의 통상의 기술자에 의해 용이하게 명백한 바와 같이, 확장될 수 있다. 아날로그 크로스바 아키텍처(예시적이고 제한되지 않음)를 이용한 스트리밍 알고리즘에 대한 시스템 및 방법의 바람직한 실시예를 설명하였으므로, 상기 내용에 비추어 당업자에 의해 변경 및 변형이 이루어질 수 있 음에 유의한다. 그러므로 첨부된 청구항에 의해 정의된 발명의 범위 내에서, 설명된 특정 실시예에 변경이 이루 어질 수 있음을 이해해야 한다. 따라서 본 발명의 실시예를 특허법에 의해 요구되는 정도로 상세하게 특정하면 서 설명하였고, 특허로 청구되는 것은 첨부된 청구항에 정의된다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11"}
{"patent_id": "10-2022-7038017", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다음 도면을 참조하여 후술하는 바람직한 실시예의 설명에서 본 발명의 구체적인 내용이 제공된다. 도 1은 본 발명의 일 실시예에 따른, 스케치 매트릭스을 이용한 예시적인 아날로그 크로스바 아키텍처이 다. 도 2는 본 발명의 일 실시예에 따른, 도 1의 스케치 매트릭스을 포함하는 예시적인 3D 크로스바 어레이 (crossbar array)이다. 도 3은 본 발명의 일 실시예에 따라 동적 연산(dynamic computation)으로 아날로그 스트리밍을 하기 위 한 예시적인 시스템이다. 도 4는 본 발명의 하나의 실시예에 따른, 대칭점들(symmetry points)을 나타내는 3가지 상이한 소자 스 위칭 특성을 나타내는 예시적인 그래프를 도시한다. 도 5는 본 발명의 일 실시예에 따라 개방 루프 통합 방식(open loop integration scheme)에서 병렬로 사용된 2개의 어레이에 대한 예시적인 방법의 블록/흐름 도면이다. 도 6은 본 발명의 일 실시예에 따라 제1 매트릭스과 제2 매트릭스 사이를 전환하는 예시적인 방법의 블 록/흐름 도면이다. 도 7은 본 발명의 실시예에 따른 예시적인 처리 시스템이다. 도 8은 본 발명의 일 실시예에 따른 예시적인 클라우드 컴퓨팅 환경의 블록/흐름 도면이다. 도 9는 본 발명의 일 실시예에 따른 예시적인 추상화 모델 레이어들(adbstraction model layers)의 구성도이다. 도 10은 본 발명의 실시예에 따라 사물인터넷(IoT) 시스템/장치/인프라에서 개방 루프 통합 방식을 적용 하는 방법의 블록/흐름 도면이다. 도 11은 본 발명의 실시예에 따라 오픈 루프 통합 방식 스트리밍 알고리즘과 관련된 데이터/정보를 수집 하기 위해 사용되는 예시적인 IoT 센서의 블록/흐름 도면이다. 도면에 있어서 동일하거나 유사한 참조부호는 동일하거나 유사한 구성요소를 나타낸다."}
