{"patent_id": "10-2011-7000770", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2011-0034636", "출원번호": "10-2011-7000770", "출원인": "구글 인코포레이티드", "발명자": "코케비스, 에반겔로스"}}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "웹 애플리케이션 실행 방법에 있어서, 상기 실행 방법은,웹 브라우저에 웹 애플리케이션을 로드하는 단계;웹 애플리케이션과 관련된 네이티브 코드 모듈을 보안 런타임 환경으로 로드하는 단계;웹 애플리케이션과 관련된 입력 데이터를 네이티브 코드 모듈에 제공하는 단계;출력 데이터를 획득하기 위하여 네이티브 코드 모듈을 이용해 상기 입력 데이터를 처리하는 단계; 그리고웹 애플리케이션에 의한 이용을 위해, 웹 애플리케이션에 상기 출력 데이터를 제공하는 단계를 포함하는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,네이티브 코드 모듈을 보안 런타임 환경으로 로드하기 전에 네이티브 코드 모듈을 검증하는 단계를 추가로 포함하는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 출력 데이터가 웹 브라우저와 관련된 신뢰하는 플러그인에 제공되어 상기 신뢰하는 플러그인에 의해 이용되는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 출력 데이터는 웹 애플리케이션을 위한 그래픽을 표현하도록 상기 신뢰하는 플러그인에 의해 이용되는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 네이티브 코드 모듈은 웹 애플리케이션을 위한 시뮬레이션, 신호 처리, 인공 지능, 모델링, 및 분석 중 하나 이상을 제공하는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 보안 런타임 환경은 웹 브라우저와 관련된 플러그인에 의해 구현되는 것을 특징으로 하는 웹 애플리케이션실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 웹 애플리케이션 및 상기 네이티브 코드 모듈이 플랫폼 독립적(platform independent)인 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,공개특허 10-2011-0034636-2-상기 입력 데이터가 제1의 모듈간 통신(IMC) 버퍼를 이용하여 네이티브 코드 모듈에 제공되고, 상기 출력 데이터가 제2의 모듈간 통신(IMC) 버퍼를 이용하여 웹 애플리케이션에 제공되는 것을 특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,입력 데이터를 처리하는 단계는, 입력 데이터를 이용하여 일련의 수학 계산을 수행하는 단계를 수반하는 것을특징으로 하는 웹 애플리케이션 실행 방법."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "웹 애플리케이션을 실행하는 시스템에 있어서, 상기 시스템은,웹 애플리케이션을 로드하도록 구성된 웹 브라우저;웹 애플리케이션과 관련된 네이티브 코드 모듈; 그리고네이티브 코드 모듈을 실행하도록 구성된 보안 런타임 환경을 포함하고, 상기 네이티브 코드 모듈은,웹 애플리케이션과 관련된 입력 데이터를 획득하도록;출력 데이터를 획득하기 위하여 상기 입력 데이터를 처리하도록; 그리고웹 애플리케이션에 의한 이용을 위해, 웹 애플리케이션에 상기 출력 데이터를 제공하도록 구성되는 것을 특징으로 하는 웹 애플리케이션을 실행하는 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,네이티브 코드 모듈을 실행하기 전에 네이티브 코드 모듈을 검증하도록 구성된 검증 장치를 추가로 포함하는 것을 특징으로 하는 웹 애플리케이션을 실행하는 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,보안 런타임 환경 및 검증 장치가 웹 브라우저와 관련된 플러그인을 이용하여 구현되는 것을 특징으로 하는 웹애플리케이션을 실행하는 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 10 항에 있어서,웹 브라우저와 관련된 신뢰하는 플러그인을 추가로 포함하며, 출력 데이터가 상기 신뢰하는 플러그인에 제공되어 상기 신뢰하는 플러그인에 의해 이용되는 것을 특징으로 하는 웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,출력 데이터가 상기 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이션에 대한 그래픽을 랜더링하는 것을 특징으로 하는 웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 10 항에 있어서,입력 데이터를 네이티브 코드 모듈에 제공하도록 구성된 제1의 모듈간 통신(IMC) 버퍼; 그리고공개특허 10-2011-0034636-3-출력 데이터를 웹 애플리케이션에 제공하도록 구성된 제2의 모듈간 통신(IMC) 버퍼를 추가로 포함하는 것을 특징으로 하는 웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 10 항에 있어서,네이티브 코드 모듈이 웹 애플리케이션을 위한 시뮬레이션, 신호 처리, 인공 지능, 모델링, 및 분석 중 하나 이상을 제공하는 것을 특징으로 하는 웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 10 항에 있어서,웹 애플리케이션 및 네이티브 코드 모듈이 플랫폼 독립적(platform independent)인 것을 특징으로 하는 웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 10 항에 있어서,상기 입력 데이터 처리에, 입력 데이터를 이용하여 일련의 수학 계산을 수행하는 것이 수반됨을 특징으로 하는웹 애플리케이션 실행 시스템."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "명령어들이 저장된 컴퓨터-판독 가능 저장 매체에 있어서, 상기 명령어들은 컴퓨터에 의해 실행되는 때 컴퓨터로 하여금 웹 애플리케이션 실행 방법을 수행하게 하고, 상기 실행 방법은,웹 브라우저에 웹 애플리케이션을 로드하는 단계;웹 애플리케이션과 관련된 네이티브 코드 모듈을 보안 런타임 환경으로 로드하는 단계;웹 애플리케이션과 관련된 입력 데이터를 네이티브 코드 모듈에 제공하는 단계;출력 데이터를 획득하기 위하여 네이티브 코드 모듈을 이용해 상기 입력 데이터를 처리하는 단계; 그리고웹 애플리케이션에 의한 이용을 위해 상기 출력 데이터를 웹 애플리케이션에 제공하는 단계를 포함하는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서, 상기 실행 방법은,네이티브 코드 모듈을 보안 런타임 환경으로 로드하기 전에 네이티브 코드 모듈을 검증하는 단계를 추가로 포함하는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 19 항에 있어서,출력 데이터가 웹 브라우저와 관련된 신뢰하는 플러그인에 제공되어 신뢰하는 플러그인에 의해 이용되는 것을특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 21 항에 있어서, 출력 데이터가 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이션에 대한 그래픽을 랜더링하는 것을 특징으로하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "공개특허 10-2011-0034636-4-제 19 항에 있어서,네이티브 코드 모듈이 웹 애플리케이션을 위한 시뮬레이션, 신호 처리, 인공 지능, 모델링, 및 분석 중 하나 이상을 제공하는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제 19 항에 있어서,상기 보안 런타임 환경이 웹 브라우저와 관련된 플러그인에 의해 구현되는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제 19 항에 있어서,상기 웹 애플리케이션 및 네이티브 코드 모듈이 플랫폼 독립적(platform independent)인 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제 19 항에 있어서,입력 데이터가 제1의 모듈간 통신(IMC) 버퍼를 이용하여 네이티브 코드 모듈에 제공되고, 출력 데이터가 제2의모듈간 통신(IMC) 버퍼를 이용하여 웹 애플리케이션에 제공되는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체."}
{"patent_id": "10-2011-7000770", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제 19 항에 있어서,입력 데이터를 처리하는 단계는 입력 데이터를 이용하여 일련의 수학 계산을 수행하는 단계가 수반되는 것을 특징으로 하는 컴퓨터-판독 가능 저장 매체.명 세 서기 술 분 야본 발명은 컴퓨터 시스템에서 애플리케이션을 수행하는 기법에 관한 것으로, 좀 더 상세하게는, 네이티브 코드 [0001]모듈(native code module)을 이용하여 웹 애플리케이션을 실행하는 방법 및 시스템에 관한 것이다.배 경 기 술컴퓨터 시스템은, 실행하기 위하여 상당한 처리 자원을 필요로 하는 다수의 네이티브 애플리케이션(native [0002]application)을 포함할 수 있다. 이러한 네이티브 애플리케이션은 영상 처리, 오디오 및 비디오 디코딩과 믹싱(mixing), 수학적 모델링, 및/또는 시뮬레이션과 같은 작업들을 수행할 수 있다. 효율적으로 동작하기 위하여,이러한 애플리케이션은 흔히 범용 프로그래밍 언어(가령, C 또는 C++)와 저급 언어(가령, 어셈블리어)의 조합으로 작성된다. 그 결과, 상기 애플리케이션은 긴 설치 과정을 수반하는 특정한 플랫폼에 제한될 수 있고, 애플리케이션이 설치된 컴퓨터 시스템에 보안 위험을 야기할 수 있다.반면, 최근 점점 더 유행하고 있는 웹 애플리케이션이, 통상적으로 좀 더 안전하고 설치를 필요로 하지 않는 스 [0003]크립트 언어로 작성된다. 그러나, 이러한 웹 애플리케이션은 네이티브 애플리케이션과 같은 수행 능력이 부족할수 있다. 특히, 웹 애플리케이션이 네이티브 애플리케이션보다 10배 또는 100배 이상 더 느리게 동작할 수도 있다. 그 결과, 웹 애플리케이션은, 네이티브 애플리케이션에서 이용 가능한 계산 집약적 기능들을 구현하는 것이현재 가능하지 않다.발명의 내용일부 실시예에서, 웹 애플리케이션을 실행하는 시스템이 제공된다. 동작 동안, 시스템은 웹 애플리케이션을 웹 [0004]브라우저에 로드하고, 웹 애플리케이션과 관련된 네이티브 코드 모듈(native code module)을 보안 런타임 환경공개특허 10-2011-0034636-5-(secure runtime environment)으로 로드한다. 그 다음, 상기 시스템은, 웹 애플리케이션과 관련된 입력 데이터를 네이티브 코드 모듈에 제공하고 상기 네이티브 코드 모듈을 이용해 입력 데이터를 처리하여 출력 데이터를얻는다. 마지막으로, 상기 시스템은, 상기 출력 데이터를 웹 애플리케이션에 제공하여 출력 데이터가 웹 애플리케이션에 의해 이용될 수 있다.일부 실시예에서, 상기 시스템은 또한, 네이티브 코드 모듈을 보안 런타임 환경으로 로드하기 전 네이티브 코드 [0005]모듈을 검증한다.일부 실시예에서, 상기 출력 데이터가, 웹 브라우저와 관련된 신뢰하는 플러그인(trusted plugin)에 제공되어 [0006]출력 데이터가 신뢰하는 플러그인에 의해 이용될 수 있다.일부 실시예에서, 출력 데이터가 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이션에 대한 그래픽을 렌더링 [0007]할 수 있다.일부 실시예에서, 네이티브 코드 모듈은 웹 애플리케이션을 위하여 시뮬레이션, 신호 처리, 인공 지능, 모델링, [0008]및 분석 중 하나 이상을 제공한다.일부 실시예에서, 보안 런타임 환경이 웹 브라우저와 관련된 플러그인에 의해 구현된다. [0009]일부 실시예에서, 웹 애플리케이션 및 네이티브 코드 모듈이 플랫폼 독립적(platform independent)이다. [0010]일부 실시예에서, 입력 데이터는 제1의 모듈간 통신(IMC) 버퍼를 이용하여 네이티브 코드 모듈에 제공되고, 출 [0011]력 데이터는 제2의 모듈간 통신(IMC) 버퍼를 이용하여 웹 애플리케이션에 제공된다.일부 실시예에서, 입력 데이터 처리에는, 입력 데이터를 이용하여 일련의 수학 계산을 수행하는 것이 수반된다. [0012]도면의 간단한 설명도 1은 시스템의 실시예를 도식적으로 나타낸 것이다. [0013]도 2는 시스템의 실시예에 따라 네이티브 코드 모듈에 의한 모듈간 통신(IMC) 버퍼의 이용을 보여준다.도 3은 웹 애플리케이션에 대한 그래픽을 표현하기 위한 시스템을 보여준다.도 4는 웹 애플리케이션 실행 절차를 도시하는 흐름도이다.발명을 실시하기 위한 구체적인 내용이하의 설명은 해당업계 종사자라면 개시된 실시예들을 만들고 이용할 수 있도록 제시되며, 특정 응용예 및 이 [0014]의 요구사항의 맥락에서 제공된다. 개시된 실시예들에 대한 다양한 변경이 해당업계 종사자에게 즉시 명백할 것이고, 본원에서 정의된 일반적 원리들은 개시된 실시예의 사상과 범위를 벗어나지 않는 한 그 밖의 다른 실시예및 응용예에도 적용될 수 있다. 따라서, 본 발명 시스템은 본원에 개시된 실시예들에 한정되지 않으며, 본원에개시된 원리 및 특징들과 양립하는 가장 넓은 범위까지 허용된다.상세한 설명에 기술된 데이터 구조와 코드가 컴퓨터-판독 가능 저장 매체에 통상적으로 저장되며, 컴퓨터-판독 [0015]가능 저장 매체란 컴퓨터 시스템에 의한 이용을 위해 코드 및/또는 데이터를 저장할 수 있는 임의의 장치 또는매체일 수 있다. 컴퓨터-판독 가능 저장 매체는 휘발성 메모리, 비휘발성 메모리, 자기 저장 장치 및 광학 저장장치(가령, 디스크 드라이브, 자기 테이프, CD(콤팩트 디스크), DVD(디지털 다기능 디스크 또는 디지털 비디오디스크), 또는 현재 공지되어 있거나 나중에 개발될 컴퓨터-판독 가능 매체를 저장할 수 있는 그 밖의 다른 매체)를 포함한다(이에 한정되는 것은 아님).상세한 설명 부분에 기술된 방법과 절차가 코드 및/또는 데이터로서 구현될 수 있고, 이러한 코드 및/또는 데이 [0016]터는 위에 기술된 것과 같은 컴퓨터-판독 가능 저장 매체에 저장될 수 있다. 컴퓨터 시스템이 컴퓨터-판독 가능저장 매체에 저장된 코드 및/또는 데이터를 판독 및 실행할 때, 컴퓨터 시스템은, 데이터 구조와 코드로서 구현되고 컴퓨터-판독 가능 저장 매체 내에 저장된 방법과 절차들을 수행한다. 더욱이, 아래에 기술된 방법과 절차는 하드웨어 모듈에 포함될 수 있다. 예를 들어, 하드웨어 모듈은 주문형 집 [0017]적 회로(ASIC) 칩, FPGA(field-programmable gate array), 및 현재 개발되어 있거나 나중에 개발될 그 밖의 다른 프로그래밍 가능-로직 장치를 포함할 수 있다(이에 한정되는 것은 아님). 하드웨어 모듈이 활성화된 때, 하드웨어 모듈은 하드웨어 모듈 내에 포함된 방법 및 절차를 수행한다.공개특허 10-2011-0034636-6-시스템의 실시예에서, 웹 애플리케이션을 실행하는 방법 및 시스템이 제공된다. 이러한 웹 애플리케이션이 웹 [0018]브라우저에 로드될 수 있고, 컴퓨팅 시스템(가령, 개인용 컴퓨터(PC), 모바일 폰, PDA(personal digitalassistant), 그래픽 계산기(graphing calculator), 휴대용 미디어 플레이어, 글로벌 위치 인식 시스템(GPS) 수신기, 및/또는 그 밖의 다른 전자 컴퓨팅 장치)에서 실행될 수 있다. 웹 애플리케이션은 서버와의 네트워크 연결을 이용하여 컴퓨팅 시스템에 의해 서버로부터 획득될 수 있다. 예를 들어, 웹 애플리케이션은 인터넷을 통해웹 사이트로부터 다운로드될 수 있다.좀 더 구체적으로, 기법의 실시예에서, 네이티브 코드 모듈을 이용하여 웹 애플리케이션을 실행하는 방법 및 시 [0019]스템이 제공된다. 네이티브 코드 모듈은 보안 런타임 환경에서 실행되는 네이티브 코드를 포함하고 있을 수 있다. 이에 더하여, 네이티브 코드 모듈은 가령, 시뮬레이션, 신호 처리, 인공 지능, 및/또는 모델링과 같은 계산집약적(computationally intensive) 작업들과 관련된 기능성을 제공하도록 웹 애플리케이션을 위한 데이터 처리에 이용될 수 있다. 그 결과, 시스템의 실시예에서, 웹 애플리케이션의 휴대성과 보안성을 바이너리 코드의 네이티브 성능(native performance)과 조합하기 위한 프레임워크(framework)를 제공할 수 있다. 도 1은 시스템의 도식적 그림을 나타낸다. 시스템은 컴퓨팅 시스템(102)과 서버 세트(예를 들어, 서버 1(104), [0020]서버 x(106))를 포함한다. 컴퓨팅 시스템(102)은 웹 브라우저(110) 내에서 구동되는 웹 애플리케이션(116)과 플러그인(108)을 포함한다. 이러한 컴포넌트 각각이 아래에서 좀 더 자세히 기술된다. 컴퓨팅 시스템(102)은 하나 이상의 서비스 또는 기능을 사용자에게 제공하는 전자 장치에 상응할 수 있다. 예를 [0021]들어, 컴퓨팅 시스템(102)은 모바일 폰, 개인용 컴퓨터(PC), 글로벌 위치 인식 시스템(GPS) 수신기, 휴대용 미디어 플레이어, PDA(personal digital assistant), 및/또는 그래픽 계산기(graphing calculator)로서 동작할수 있다. 이에 더하여, 컴퓨팅 시스템(102)은 컴퓨팅 시스템(102) 상의 하드웨어와 소프트웨어 자원의 이용을조율하는 운영 체제(도시되지 않음)를 포함할 수 있고, 또한 사용자를 위한 구체적 작업들을 수행하는 하나 이상의 애플리케이션(가령, 웹 브라우저(110), 웹 애플리케이션(116))을 포함할 수 있다. 예를 들어, 컴퓨팅 시스템(102)은 이메일 클라이언트, 주소 북, 문서 편집기, 웹 브라우저(110), 및/또는 미디어 플레이어와 같은 애플리케이션을 포함할 수 있다. 사용자를 위한 작업들을 수행하기 위하여, 애플리케이션은 운영 체제로부터 컴퓨팅시스템(102) 상의 하드웨어 자원(가령, 프로세서, 메모리, I/O 컴포넌트, 무선 송신기 등)의 이용을 획득할 수있고, 또한, 아래에 기술되는 바와 같이, 운영 체제에 의해 제공되는 하드웨어 및/또는 소프트웨어 프레임워크를 통해 사용자와 상호작용(interact)할 수 있다.해당업계 종사자라면, 컴퓨팅 시스템(102)이 네이티브 애플리케이션과 비-네이티브 애플리케이션 둘 모두를 실 [0022]행하는 기능성을 포함할 수 있음을 이해할 것이다. 다시 말하면, 컴퓨팅 시스템(102)이, 컴퓨팅 시스템(102)에국소적으로 설치되고 컴퓨터 시스템(102) 상의 하나 이상의 하드웨어 장치 및/또는 운영 체제에 특정적인 네이티브 애플리케이션(가령, 웹 브라우저(110))를 포함할 수 있다. 이러한 애플리케이션은 컴퓨팅 시스템(102)의하나 이상의 중앙 처리 장치(CPU)에서 직접 실행되는 네이티브(가령, 기계) 코드로 컴파일될 수 있다. 이러한애플리케이션의 코드 실행은 상기 애플리케이션을 범용 프로그래밍 언어(가령, C, C++ 등)와 어셈블리어의 조합으로 작성함으로써, 또한 상기 애플리케이션에 하드웨어 가속(가령, 그래픽 하드웨어 가속)을 제공하는 라이브러리를 이용함으로써 추가로 최적화될 수 있다. 그러나, 네이티브 애플리케이션의 설치는 컴퓨팅시스템(102)과, 컴퓨팅 시스템(102)에 저장된 개인 정보를 위태롭게 할 수 있다. 컴퓨팅 시스템(102)은 또한, 플랫폼 독립적인 비-네이티브 애플리케이션을 실행할 수 있는 기능성을 포함할 수 [0023]도 있다. 특히, 컴퓨팅 시스템(102)은, 서버와의 네트워크 연결을 이용하여 하나 이상의 서버(가령, 서버1(104), 서버 x(106))로부터 웹 애플리케이션(116)을 획득할 수 있고, 웹 브라우저(110)에 웹 애플리케이션(116)을 로드할 수 있다. 예를 들어, 웹 브라우저(110)에 의해 인터넷을 통해 웹 애플리케이션(116)이 애플리케이션 서버로부터 다운로드될 수 있다. 일단 로드되면, 웹 애플리케이션(116)은 컴퓨팅 시스템(102) 상에서 네이티브 애플리케이션의 것들에 필적하는 [0024]기능들 및 사용자 상호작용성(user interactivity)을 제공할 수 있다. 예를 들어, 웹 애플리케이션(116)이 이메일 클라이언트, 문서 편집기, 미디어 플레이어, CAD(computer-aided design) 시스템, 및/또는 컴퓨터 게임으로서 기능할 수 있다. 웹 애플리케이션(116)은 또한, 네이티브 애플리케이션의 아날로그 사용자 인터페이스 요소를 에뮬레이트한 동적 사용자 인터페이스 요소(가령, 메뉴, 버튼, 윈도우, 서브-윈도우, 아이콘, 애니메이션,및/또는 그 밖의 다른 그래픽 객체)를 포함할 수 있다. 다시 말하면, 웹 애플리케이션(116)이 리치 인터넷 애플리케이션(RIA)에 상응할 수 있다. 더욱이, 웹 애플리케이션(116)은 컴퓨팅 시스템(102)과 관련된 플랫폼(가령, 운영 체제, 드라이버 등)의 유형과 [0025]공개특허 10-2011-0034636-7-무관하게 컴퓨팅 시스템(102)에서 실행될 수 있다. 비록 웹 애플리케이션(116)과 같은 플랫폼 독립적 애플리케이션이 네이티브 애플리케이션보다 휴대하기 간편하고 안전할 수 있지만, 이러한 크로스-플랫폼(cross-platform) 애플리케이션은 네이티브 애플리케이션의 특정한 수행 능력이 부족할 수 있다. 좀 더 구체적으로, 웹 애플리케이션(116)과 같은 비-네이티브 애플리케이은, 자바스크립트(Javascript™가 Sun [0026]Microsystems, Inc.의 상표로 등록됨)와 같이, 컴파일되기보다는 인터프리트(interpret)되는 스크립트 언어를이용하여 작성될 수 있다. 웹 애플리케이션(116) 및/또는 그 밖의 다른 비-네이티브 애플리케이션의 인터프리트성향으로 의해, 비-네이티브 애플리케이션에 있어서, 컴파일되는 네이티브 애플리케이션에서보다 실행 시간이상당히 느릴 수 있다. 비-네이티브 애플리케이션은 또한, 네이티브 애플리케이션에 의한 이용에 유용한 애플리케이션 프로그래밍 인터페이스(API) 및/또는 저-레벨 라이브러리를 이용할 수 없을 수도 있다. 그 결과, 비-네이티브 애플리케이션은 특정 작업에서 제한된 기능성을 제공할 수 있다.특히, 웹 애플리케이션(116)은 네이티브 애플리케이션에서 이용 가능한 계산 집약적 기능들을 제공할 수 없을 [0027]수도 있다. 이러한 계산 집약적 기능들에는 이하의 기능들이 포함될 수 있다(이에 한정되는 것은 아님).* 시뮬레이션: 전산 유체 역학(CFD), 강체 동력학(rigid body dynamics), 충돌 검출, 분자 동력학, 3차원(3D) [0028]애니메이션 등* 신호 처리: 오디오 인코딩 및 디코딩, 비디오 인코딩 및 디코딩, 영상 처리, 음성 신호 처리 등. [0029]* 인공 지능(AI): 데이터 마이닝, 기계 학습(machine learning), 게임 AI, 패턴 인식 등. [0030]* 모델링: 금융 모델링, 수학적 모델링, 과학적 모델링, 3D 모델링 등. [0031]* 분석: 수치 해석, 재무 분석, 공학 분석, 암호 해독, 통계 데이터 분석 등. [0032]넓은 의미에서, 웹 애플리케이션(116)은 복잡한 수학 연산(가령, 부동 소수점 연산)의 실행을 요구하는 기능들 [0033]을 효과적으로 구현할 수 없을 수도 있다. 예를 들어, 웹 애플리케이션(116)이 너무 느려서 고속 푸리에 변환(FFT), 몬테카를로법, 행렬 연산, 공액 구배법(conjugate gradient method), 및/또는 상당한 크기의 입력 데이터에 대한 회귀 기법을 수행할 수 없을 수도 있다. 계산 집약적 기능들을 사용자에게 제공하기 위하여, 웹 애플리케이션(116)과 관련된 네이티브 코드 모듈(118)을 [0034]이용하여 웹 애플리케이션(116)을 대신하여 계산 집약적 코드를 실행할 수 있다. 웹 애플리케이션(116)과 같이,네이티브 코드 모듈(118)은 웹 브라우저(110)에 의해 하나 이상의 서버(가령, 서버 1(104), 서버 x(106))로부터획득될 수 있다. 예를 들어, 웹 애플리케이션(116)은 인터넷상에서 네이티브 코드 모듈(118)에 하이퍼링크를 제공할 수 있다. 그 후 웹 브라우저(110)가, 하이퍼링크에서 특정된 URL(Uniform Resource Locator)로부터 네이티브 모드 모듈(118)을 다운로드할 수 있다. 대안적으로, 네이티브 코드 모듈(118)은 사용자에 의해 또는 외부자원(가령, 또 다른 웹 애플리케이션 및/또는 네이티브 애플리케이션)에 의해 특정될 수 있다. 좀 더 구체적으로, 네이티브 코드 모듈(118)은 컴퓨팅 시스템(102)에 의해 제공된 하드웨어(가령, CPU)에서 직 [0035]접 구동되는 네이티브 코드를 포함한 소프트웨어 모듈에 상응할 수 있다. 결과적으로, 네이티브 코드 모듈(118)을 이용하여, 컴퓨팅 시스템(102)에서 CPU 자원으로의 실질적 액세스를 요구하는 작업들을 수행할 수 있다.특히, 네이티브 코드 모듈(118)은, 웹 애플리케이션(116)과 관련된 입력 데이터를 처리함으로써, 위에 나열된계산 집약적 기능들 중 하나 이상을 웹 애플리케이션(116)의 사용자에게 제공할 수 있다. 이러한 입력 데이터는입력 데이터를 이용하여 일련의 수학 계산(가령, 전술된 수학 연산)을 수행함으로써 처리될 수 있다.처리된 입력 데이터로부터 획득된 출력 데이터가 웹 애플리케이션(166)에 제공되어 웹 애플리케이션(116)에 의 [0036]해 이용될 수 있다. 예를 들어, 사용자를 위한 추가 작업을 수행하기 위하여, 출력 데이터가 웹 애플리케이션(116)에 의해 사용자에게 제공되거나 웹 애플리케이션(116)에 의해 이용될 수 있다. 이러한 출력 데이터는또한, 웹 애플리케이션(116)과 관련된 그 밖의 다른 컴포넌트(가령, 네이티브 애플리케이션, 신뢰하는플러그인, 및/또는 하나 이상의 서버(가령, 서버 1(104), 서버 x(106))에 입력 데이터로서 제공될 수 있다. 예를 들어, 웹 애플리케이션(116)은 컴퓨팅 시스템(102)의 사용자에게 오디오 또는 비디오 인코딩 및/또는 디코 [0037]딩 능력을 제공할 수 있다. 먼저, 디코딩할 오디오 또는 비디오 및/또는 인코딩할 오디오 또는 비디오 스트림을사용자가 특정할 수 있다. 그 다음, 웹 애플리케이션(116)이 서버(가령, 서버 1(104), 서버 x(106))로부터, 파일 또는 스트림을 위한 코덱을 포함한 네이티브 코드 모듈(가령, 네이티브 코드 모듈(118))을 획득할 수 있다.그 후, 네이티브 코드 모듈이 컴퓨팅 시스템(102)의 CPU에서 실행되어, 상기 코덱의 인코딩 및/또는 디코딩 능공개특허 10-2011-0034636-8-력을 사용자에게 제공할 수 있다. 이와 유사하게, 웹 애플리케이션(116) 및 네이티브 코드 모듈(118)이 컴퓨팅 시스템(102)에 의해 이용되어, 분 [0038]산형 컴퓨팅 클러스터에 있어서 계산 집약적 연산을 수행할 수 있다. 좀 더 구체적으로, 네이티브 코드 모듈(118)이 웹 애플리케이션(116)에 의해 획득되고 플러그인(108)에 의해 실행되어, 컴퓨팅 시스템(102) 상의 분산형 컴퓨팅 클러스터에서 노드를 형성할 수 있다. 계산 집약적 연산은 컴퓨팅 시스템(102)에서 CPU 저이용율(underutilization)의 기간 동안 네이티브 코드 모듈(118)에 의해 수행될 수 있다. 네이티브 코드 모듈(118)로부터의 출력이 서버(가령, 서버 1(104), 서버 x(106))로 전달되어, 복잡한 문제들(가령, 단백질 접힘, 미해결수학 문제, 중력파의 검출, 및/또는 주가 예측)의 분석에 도움이 될 수 있다. 하나 이상의 실시예에서, 플러그인(108)이 다양한 수단을 포함하여 네이티브 코드 모듈(118)의 안전한 실행을 [0039]보장할 수 있다. 특히, 네이티브 코드 모듈(118)은, 실행 전에, 플러그인(108)에 의해 제공된 검증 장치(112)에의해 검증될 수 있다. 네이티브 코드 모듈 검증은 2008년 5월 8일에 행해진 출원(발명의 명칭: \"Method forValidating an Untrusted Native Code Module,\")과 동일자에 출원되어 동시에 계류중인 비-가특허출원(발명자: J. Bradley Chen, Matthew T. Harren, Matthew Papakipos, David C. Sehr, 및 Bennet S. Yee)에기술되어 있으며, 위 출원은 본원에 참조로서 포함된다.일단 네이티브 코드 모듈(118)이 검증되면, 네이티브 코드 모듈(118)은 플러그인(108)에 의해 제공되는 보안 런 [0040]타임 환경(114)으로 로드될 수 있다. 보안 런타임 환경에서의 네이티브 코드 실행이 2008년 5월 8일에 행해진출원(발명의 명칭: \"Method for Safely Executing an Untrusted Native Code Module on a Computing Device\")과 동일자에 출원되어 동시에 계류중인 비-가특허 출원(발명자: J. Bradley Chen, Matthew T. Harren,Matthew Papakipos, David C. Sehr, Bennet S. Yee, 및 Gregory Dardyk)에 기술되어 있으며, 위 출원은 본원에서 참조로서 포함된다. 더욱이, 네이티브 코드 모듈(118)이 하드웨어에서 직접 구동되는 바이너리 코드를 포함할 수 있기 때문에, 네이 [0041]티브 코드 모듈(118)은 컴퓨팅 시스템(102)의 운영 체제, 웹 브라우저(110), 및/또는 컴퓨팅 시스템(102) 상의그 밖의 다른 소프트웨어 컴포넌트에 관하여 플랫폼 독립적일 수 있다. 위에서 참고된 출원들에 기술되어 있는바와 같이, 플러그인(108) 및/또는 네이티브 코드 모듈(118)은 또한, \"팻 바이너리(fat binary)\"와 바이너리 변환기(binary translator)의 이용을 포함한, 다양한 명령어 세트 아키텍처를 실행하기 위한 수단들을 포함할 수있다.도 2는 네이티브 코드 모듈에 의한 모듈간 통신(IMC) 버퍼의 이용을 보여준다. 특히, 도 2는 네이티브 코드 모 [0042]듈(118)을 통한 데이터의 흐름을 보여준다. 도 2에 도시된 바와 같이, 네이티브 코드 모듈(118)에 의해 제1의모듈간 통신(IMC) 버퍼(204)로부터 입력 데이터(208)가 획득된다. 전술된 바와 같이, 입력 데이터(208)는 웹 애플리케이션(116), 사용자, 및/또는 네이티브 애플리케이션에 의해 특정될 수 있다. 입력 데이터(208)는 또한,IMC 버퍼(204)에의 배치를 위한 다양한 자원(가령, 네트워크 상의 호스트, 디스크, 입력 장치(가령, 카메라, 마이크로폰 등), 및/또는 하드웨어 장치(가령, 사운드 카드, 비디오 카드 등) 포함)으로부터 획득될 수도 있다.네이티브 코드 모듈(118)은 입력 데이터(208)를 처리하여 출력 데이터(210)를 획득하고, 이러한 출력 데이터는 [0043]제2의 IMC 버퍼(206) 내에 위치된다. 좀 더 구체적으로, 네이티브 코드 모듈(118)이 입력 데이터(208)를 이용하여 일련의 수학 계산을 수행함으로써 출력 데이터(210)를 획득할 수 있다. 예를 들어, 네이티브 코드 모듈(202)은 입력 데이터(208)를 이용하여 일련의 행렬 연산, 수학적 변환, 및/또는 역변환, 및/또는 그 밖의 다른 부동 소수점 연산을 수행할 수 있다. 그 후, 출력 데이터가 IMC 버퍼(206)로부터 획득되어 웹 애플리케이션(116)및/또는 웹 애플리케이션(116)과 관련된 신뢰하는 플러그인(202)에 의해 이용될 수 있다. 특히, 웹 애플리케이션(116) 및/또는 신뢰하는 플러그인(202)은 출력 데이터(210)를 이용하여, 웹 애플리케이션(116)의 사용자 또는웹 애플리케이션(116)과 관련된 개체를 위한 추가 작업들을 수행할 수 있다. 예를 들어, 출력 데이터(210)가,사용자에게 제공되는 파일에 저장될 수 있고, 차트 또는 그래프로 표시될 수 있고, 분산형 컴퓨터 클러스터에대한 데이터베이스에 업로드될 수 있고, 및/또는 그 밖의 다른 애플리케이션의 실행을 수정하는데 이용될 수 있다. 출력 데이터(210)는 또한, 도 3과 관련해 아래에서 논의되는 바와 같이, 3D 그래픽 모델을 애니메이션화하는데 이용될 수도 있다.하나 이상의 실시예에서, IMC 버퍼(204-206)는 네이티브 코드 모듈(118)과 외부 컴포넌트(가령, 웹 애플리케이 [0044]션(116) 및/또는 신뢰하는 플러그인(202)) 사이의 데이터-집약적 협력을 용이하게 하는데 사용되는 공유형 메모리 버퍼에 상응한다. 더욱이, 위에서 참조된 출원들에 기술되어 있는 바와 같이, IMC 버퍼(204-206)에 의한 데이터 공유가 IMC 런타임에 의해 관리될 수 있다.공개특허 10-2011-0034636-9-도 3은 웹-기반 3D 애플리케이션(302)을 실행하는 시스템을 보여준다. 3D 애플리케이션(302)은 웹 브라우저 [0045](300)에서 실행되는 웹 애플리케이션에 상응할 수 있다. 이에 더하여, 3D 애플리케이션(302)은 3D 애플리케이션의 사용자에게 3D 그래픽 렌더링(3D graphics rendering)과 애니메이션 능력을 제공할 수 있다. 예를 들어, 3D애플리케이션(302)은 3D 컴퓨터 게임, CAD 시스템, 및/또는 과학적 모델링 및/또는 시뮬레이션 애플리케이션일수 있다. 더욱이, 3D 애플리케이션(302)은 자바스크립트와 같은 웹-기반 스크립트 언어로 작성될 수 있다. 그결과, 3D 애플리케이션(302)이 실시간 3D 그래픽 렌더링과 애니메이션의 요구를 충족시킬 수 없을 수도 있다.그 대신, 3D 애플리케이션(302)은 그래픽 렌더링을 그래픽 플러그인(306)으로 그리고 애니메이션을 플러그인(304)으로 언로드할 수 있다.도 3에 도시된 바와 같이, 플러그인(304)은 CPU(318)에서 실행되는 물리 엔진(310)을 포함한다. 하나 이상의 실 [0046]시예에서, 물리 엔진(310)은 플러그인(304)에 의해 제공되는 보안 런타임 환경 내에서 실행되는 네이티브 코드모듈에 상응한다. 물리 엔진(310)은 3D 애플리케이션(302)에 의해 제공될 수 있고(예를 들어, 인터넷을 통해 다운로드됨), 플러그인(304)에서의 실행 전에 검증될 수 있다. 더욱이, 물리 엔진(310)은 보안 런타임 환경에 의해 설정된 제약 내에서 CPU(318)에서 직접 수행되는 네이티브 코드를 포함할 수 있다. 따라서, CPU(318) 상에서의 물리 엔진(310)의 실행으로 인해, 3D 애플리케이션(32)에 3D 애플리케이션(302) 내의 객체들의 실시간 애니메이션을 제공할 수 있다. 이와 유사하게, 그래픽 플러그인(306)은 그래픽 처리 유닛(GPU)(320)과 통신하는 렌더링 엔진(312)을 포함한다. [0047]하나 이상의 실시예에서, 그래픽 플러그인(306)은 신뢰하는 플러그인(가령, 도 2의 신뢰하는 플러그인(202))에상응한다. 다시 말하면, 그래픽 플러그인(306)이 웹 브라우저(300)에 의해 신뢰하는 자원으로부터 다운로드될수 있고, 웹 브라우저(300)에 의해 설치되어 애플리케이션(302)을 위한 그래픽을 렌더링할 수 있다. 더욱이, 렌더링 엔진(312)은 GPU(320)를 이용하여 그래픽 렌더링에 관련된 계산을 수행함으로써 그래픽 하드웨어 가속을제공할 수 있다. 그래픽 플러그인(306)과 렌더링 엔진(312)이, 발명의 명칭이 \"WEB-BASED GRAPHICS RENDERINGSYSTEM\"인 출원과 동일자에 출원되어 동시에 계류중이고 발명자가 Vangelis Kokkevis, Matthew Papakipos, 및Robin Green인 비-가특허 출원에 기술되어 있다.하나 이상의 실시예에서, 3D 애플리케이션(302)이 물리 엔진(310)과 렌더링 엔진(312)의 공동 실행을 조정한다. [0048]좀 더 구체적으로, 3D 애플리케이션(302)은 플러그인(304)과 그래픽 플러그인(306) 모두에 메소드(method)를 호출하여 그래픽 모델을 렌더링 엔진(312)으로 로드하고 대응하는 물리 모델을 물리 엔진(310)으로 로드할 수 있다. 반면, 플러그인(304)과 그래픽 플러그인(306)은 서로를 직접 연계하여 그래픽 모델들의 애니메이션과 렌더링을 동기화할 수 있다. 특히, 3D 애플리케이션(302)은 그래픽 모델을 묘사하는 입력 파일을 그래픽 플러그인(306)에 제공할 수 있다. [0049]대안적으로, 3D 애플리케이션(302)이 그래픽 모델을 묘사하는 메소드 세트를 그래픽 플러그인(306)에 호출할 수있다. 그 후, 이러한 그래픽 모델이 그래픽 플러그인(306)의 내부 메모리로 로드될 수 있다. 그 후, 3D 애플리케이션(302)은 플러그인(304) 및/또는 그래픽 플러그인(306)에 의해 제공되는 IMC 런타임에 의해 공유 메모리(308)의 영역에 하나 이상의 IMC 버퍼(314-316)의 할당을 요청할 수 있다. 그 후, 그래픽 플러그인(306)이 물리시뮬레이션에 관한 데이터를 IMC 버퍼(314-316) 내로 로드할 수 있다. 예를 들어, 그래픽 플러그인(306)이 정점위치(vertex position), 법선(normal), 삼각형 인덱스(triangle indice), 및/또는 변환 행렬을 IMC 버퍼(314-316) 내로 복사(copy)할 수 있다.그래픽 모델을 애니메이션화하기 위하여, 물리 엔진(310)은 그래픽 플러그인(306)의 그래픽 모델에 상응하는 물 [0050]리 모델을 형성하기 위하여 IMC 버퍼(314-316)로부터 불러올 수 있다. 물리 모델에 관한 추가 정보(가령, 파라미터)가 플러그인(304)에 의해 3D 애플리케이션(302)으로부터 획득될 수 있다. 그 다음, 물리 엔진(310)이 일련의 물리 시뮬레이션 계산을 수행하여 물리 모델을 업데이트할 수 있다. 예를 들어, 물리 엔진(310)은 물리 모델에서 객체에 작용하는 힘들(force)의 세트에 기초하여 정점 위치들(vertex position)과 속도들을 계산할 수 있다. 그 후, 플러그인(304)은 새로운 정점 위치, 속도, 및/또는 그 밖의 다른 데이터를 이용해 IMC 버퍼(314-316)를 업데이트할 수 있다. 마지막으로, 이러한 새로운 데이터가 그래픽 플러그인(306)에 의해 IMC 버퍼(314-316)로부터 읽히고, 이 데이터를 이용해 그래픽 모델을 업데이트한다. 그 후 렌더링 엔진(312)이, 렌더링을 위해, 업데이트된 그래픽 모델을 GPU(320)에 전달할 수 있다.3D 애플리케이션(302)의 실행 동안 렌더링 엔진(312) 및 물리 엔진(310)에 의해 그래픽 렌더링과 애니메이션이 [0051]계속하여 제공될 수 있다. 예를 들어, 물리 엔진(310)은 그래픽 모델 내의 객체들이 힘의 영향을 받는 한 그래픽 모델을 계속하여 업데이트할 수 있다. 또한, 추가적 객체 및/또는 힘이 3D 애플리케이션(302)에 의해 그래픽공개특허 10-2011-0034636-10-모델 및/또는 물리 모델에 도입될 수 있다. 이와 유사하게, 렌더링 엔진(312)은 3D 애플리케이션(302)에 의해특정되고 및/또는 GPU(320)에 의해 지원되는 프레임 레이트(frame rate)로 그래픽 모델을 렌더링할 수 있다. 그결과, 물리 엔진(310)과 렌더링 엔진(312)이 서로 다른 주파수에서 구동될 수 있다. 예를 들어, 물리 엔진(310)은 렌더링 엔진(312)보다 네 배 더 빠르게 구동될 수 있다. 그 결과, 그래픽 모델은, 물리 엔진에 의해 이루어지는 그래픽 모델에 대한 네 번의 업데이트 동안 렌더링 엔진(312)에 의해 한 번 업데이트될 수 있다. 도 4는 웹 애플리케이션의 실행 프로세스를 도시하는 흐름도를 보여준다. 하나 이상의 실시예에서, 단계들 중 [0052]하나 이상이 생략되거나, 반복되거나, 다른 순서로 수행될 수 있다. 따라서, 도 4에 도시된 단계들의 구체적인배열이 본 발명 범위를 한정하는 것으로 해석되어서는 안된다. 처음에, 웹 애플리케이션이 웹 브라우저에 로드된다(동작(402)). 웹 애플리케이션은 웹 브라우저에 의해 서버로 [0053]부터 획득될 수 있다. 더욱이, 이러한 웹 애플리케이션을 이용하여 재정 모델링, 계산 수학 또는 과학, 및/또는AI와 같은 계산 집약적 기능들을 사용자에게 제공할 수 있다. 이러한 기능들을 실제적인 방식으로 구현하기 위하여, 웹 애플리케이션과 관련된 네이티브 코드 모듈이 획득될 수 있다(동작(404)). 예를 들어, 네이티브 코드모듈이 웹 애플리케이션에 의해 특정된 자원으로부터 다운로드될 수 있다. 네이티브 코드 모듈은 또한, 네이티브 코드 모듈을 실행하기 전 검증될 수 있다(동작(406)). 네이티브 코드 모듈이 검증되지 않은 경우, 네이티브코드 모듈은 실행되지 않고 버려진다.네이티브 코드 모듈이 검증된 경우, 네이티브 코드 모듈은 보안 런타임 환경으로 로드된다(동작(408)). 보안 런 [0054]타임 환경은 웹 브라우저와 관련된 플러그인에 의해 제공될 수 있다. 그 다음, 웹 애플리케이션과 관련된 입력데이터가 네이티브 코드 모듈에 제공된다(동작(410)). 입력 데이터가 IMC 버퍼를 이용하여 네이티브 코드 모듈에 제공될 수 있다. 그 후, 입력 데이터가 네이티브 코드 모듈에 의해 처리되어 출력 데이터가 획득된다(동작(414)). 그 후 출력 데 [0055]이터가 웹 애플리케이션에 제공되어(동작(416)) 웹 애플리케이션에 의해 이용될 수 있다. 입력 데이터에서와 같이, IMC 버퍼를 이용하여 출력 데이터가 웹 애플리케이션에 제공될 수 있다. 예를 들어, 상기 애플리케이션은시뮬레이션, 신호 처리, 인공 지능, 모델링, 및/또는 분석을 위해 출력 데이터를 이용할 수 있다. 이에 더하여,선택 사항으로서 출력 데이터가 웹 애플리케이션과 관련된 신뢰하는 플러그인에 제공되어(동작(418)) 신뢰하는플러그인에 의해 이용될 수 있다. 예를 들어, 출력 데이터가 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이션을 위한 그래픽을 렌더링할 수 있다. 본 발명의 시스템의 실시예에 관한 전술된 설명은 오직 예시와 설명 목적으로만 제시된 것이다. 이러한 설명이 [0056]본 발명 시스템을 개시된 형태로 제한하려는 의도는 아니다. 따라서, 많은 수정 형태와 변형 형태가 해당업계종사자에게 명백할 것이다. 추가적으로, 위의 개시 내용이 본 발명 시스템을 제한하도록 의도되지 않는다. 본발명의 범위는 기재된 청구항에 의해 정의된다.공개특허 10-2011-0034636-11-도면도면1공개특허 10-2011-0034636-12-도면2공개특허 10-2011-0034636-13-도면3공개특허 10-2011-0034636-14-도면4공개특허 10-2011-0034636-15-"}
{"patent_id": "10-2011-7000770", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일부 실시예에서, 웹 애플리케이션을 실행하는 시스템이 제공된다. 동작 동안, 시스템은 웹 애플리케이션을 웹 브라우저에 로드하고, 웹 애플리케이션과 관련된 네이티브 코드 모듈을 보안 런타임환경으로 로드한다. 그 다음, 상기 시스템은 웹 애플리케이션과 관련된 입력 데이터를 네이티브 코드 모듈에 제공하고, 네이티브 코드 모듈을 이용해 상기 입력 데이터를 처리하여 출력 데이터를 획득한다. 마지막으로, 시스템이 상기 출력 데이터를 웹 애 플리케이션에 제공하여 출력 데이터가 웹 애플리케이션에 의해 이용될 수 있다."}
{"patent_id": "10-2011-7000770", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨터 시스템에서 애플리케이션을 수행하는 기법에 관한 것으로, 좀 더 상세하게는, 네이티브 코드 모듈(native code module)을 이용하여 웹 애플리케이션을 실행하는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2011-7000770", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨터 시스템은, 실행하기 위하여 상당한 처리 자원을 필요로 하는 다수의 네이티브 애플리케이션(native application)을 포함할 수 있다. 이러한 네이티브 애플리케이션은 영상 처리, 오디오 및 비디오 디코딩과 믹싱 (mixing), 수학적 모델링, 및/또는 시뮬레이션과 같은 작업들을 수행할 수 있다. 효율적으로 동작하기 위하여, 이러한 애플리케이션은 흔히 범용 프로그래밍 언어(가령, C 또는 C++)와 저급 언어(가령, 어셈블리어)의 조합으 로 작성된다. 그 결과, 상기 애플리케이션은 긴 설치 과정을 수반하는 특정한 플랫폼에 제한될 수 있고, 애플리 케이션이 설치된 컴퓨터 시스템에 보안 위험을 야기할 수 있다. 반면, 최근 점점 더 유행하고 있는 웹 애플리케이션이, 통상적으로 좀 더 안전하고 설치를 필요로 하지 않는 스 크립트 언어로 작성된다. 그러나, 이러한 웹 애플리케이션은 네이티브 애플리케이션과 같은 수행 능력이 부족할 수 있다. 특히, 웹 애플리케이션이 네이티브 애플리케이션보다 10배 또는 100배 이상 더 느리게 동작할 수도 있 다. 그 결과, 웹 애플리케이션은, 네이티브 애플리케이션에서 이용 가능한 계산 집약적 기능들을 구현하는 것이 현재 가능하지 않다. 일부 실시예에서, 웹 애플리케이션을 실행하는 시스템이 제공된다. 동작 동안, 시스템은 웹 애플리케이션을 웹 브라우저에 로드하고, 웹 애플리케이션과 관련된 네이티브 코드 모듈(native code module)을 보안 런타임 환경(secure runtime environment)으로 로드한다. 그 다음, 상기 시스템은, 웹 애플리케이션과 관련된 입력 데이터 를 네이티브 코드 모듈에 제공하고 상기 네이티브 코드 모듈을 이용해 입력 데이터를 처리하여 출력 데이터를 얻는다. 마지막으로, 상기 시스템은, 상기 출력 데이터를 웹 애플리케이션에 제공하여 출력 데이터가 웹 애플리 케이션에 의해 이용될 수 있다. 일부 실시예에서, 상기 시스템은 또한, 네이티브 코드 모듈을 보안 런타임 환경으로 로드하기 전 네이티브 코드 모듈을 검증한다. 일부 실시예에서, 상기 출력 데이터가, 웹 브라우저와 관련된 신뢰하는 플러그인(trusted plugin)에 제공되어 출력 데이터가 신뢰하는 플러그인에 의해 이용될 수 있다. 일부 실시예에서, 출력 데이터가 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이션에 대한 그래픽을 렌더링 할 수 있다. 일부 실시예에서, 네이티브 코드 모듈은 웹 애플리케이션을 위하여 시뮬레이션, 신호 처리, 인공 지능, 모델링, 및 분석 중 하나 이상을 제공한다. 일부 실시예에서, 보안 런타임 환경이 웹 브라우저와 관련된 플러그인에 의해 구현된다. 일부 실시예에서, 웹 애플리케이션 및 네이티브 코드 모듈이 플랫폼 독립적(platform independent)이다. 일부 실시예에서, 입력 데이터는 제1의 모듈간 통신(IMC) 버퍼를 이용하여 네이티브 코드 모듈에 제공되고, 출 력 데이터는 제2의 모듈간 통신(IMC) 버퍼를 이용하여 웹 애플리케이션에 제공된다. 일부 실시예에서, 입력 데이터 처리에는, 입력 데이터를 이용하여 일련의 수학 계산을 수행하는 것이 수반된다."}
{"patent_id": "10-2011-7000770", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하의 설명은 해당업계 종사자라면 개시된 실시예들을 만들고 이용할 수 있도록 제시되며, 특정 응용예 및 이 의 요구사항의 맥락에서 제공된다. 개시된 실시예들에 대한 다양한 변경이 해당업계 종사자에게 즉시 명백할 것 이고, 본원에서 정의된 일반적 원리들은 개시된 실시예의 사상과 범위를 벗어나지 않는 한 그 밖의 다른 실시예 및 응용예에도 적용될 수 있다. 따라서, 본 발명 시스템은 본원에 개시된 실시예들에 한정되지 않으며, 본원에 개시된 원리 및 특징들과 양립하는 가장 넓은 범위까지 허용된다. 상세한 설명에 기술된 데이터 구조와 코드가 컴퓨터-판독 가능 저장 매체에 통상적으로 저장되며, 컴퓨터-판독 가능 저장 매체란 컴퓨터 시스템에 의한 이용을 위해 코드 및/또는 데이터를 저장할 수 있는 임의의 장치 또는 매체일 수 있다. 컴퓨터-판독 가능 저장 매체는 휘발성 메모리, 비휘발성 메모리, 자기 저장 장치 및 광학 저장 장치(가령, 디스크 드라이브, 자기 테이프, CD(콤팩트 디스크), DVD(디지털 다기능 디스크 또는 디지털 비디오 디스크), 또는 현재 공지되어 있거나 나중에 개발될 컴퓨터-판독 가능 매체를 저장할 수 있는 그 밖의 다른 매 체)를 포함한다(이에 한정되는 것은 아님). 상세한 설명 부분에 기술된 방법과 절차가 코드 및/또는 데이터로서 구현될 수 있고, 이러한 코드 및/또는 데이 터는 위에 기술된 것과 같은 컴퓨터-판독 가능 저장 매체에 저장될 수 있다. 컴퓨터 시스템이 컴퓨터-판독 가능 저장 매체에 저장된 코드 및/또는 데이터를 판독 및 실행할 때, 컴퓨터 시스템은, 데이터 구조와 코드로서 구현 되고 컴퓨터-판독 가능 저장 매체 내에 저장된 방법과 절차들을 수행한다. 더욱이, 아래에 기술된 방법과 절차는 하드웨어 모듈에 포함될 수 있다. 예를 들어, 하드웨어 모듈은 주문형 집 적 회로(ASIC) 칩, FPGA(field-programmable gate array), 및 현재 개발되어 있거나 나중에 개발될 그 밖의 다 른 프로그래밍 가능-로직 장치를 포함할 수 있다(이에 한정되는 것은 아님). 하드웨어 모듈이 활성화된 때, 하 드웨어 모듈은 하드웨어 모듈 내에 포함된 방법 및 절차를 수행한다.시스템의 실시예에서, 웹 애플리케이션을 실행하는 방법 및 시스템이 제공된다. 이러한 웹 애플리케이션이 웹 브라우저에 로드될 수 있고, 컴퓨팅 시스템(가령, 개인용 컴퓨터(PC), 모바일 폰, PDA(personal digital assistant), 그래픽 계산기(graphing calculator), 휴대용 미디어 플레이어, 글로벌 위치 인식 시스템(GPS) 수 신기, 및/또는 그 밖의 다른 전자 컴퓨팅 장치)에서 실행될 수 있다. 웹 애플리케이션은 서버와의 네트워크 연 결을 이용하여 컴퓨팅 시스템에 의해 서버로부터 획득될 수 있다. 예를 들어, 웹 애플리케이션은 인터넷을 통해 웹 사이트로부터 다운로드될 수 있다. 좀 더 구체적으로, 기법의 실시예에서, 네이티브 코드 모듈을 이용하여 웹 애플리케이션을 실행하는 방법 및 시 스템이 제공된다. 네이티브 코드 모듈은 보안 런타임 환경에서 실행되는 네이티브 코드를 포함하고 있을 수 있 다. 이에 더하여, 네이티브 코드 모듈은 가령, 시뮬레이션, 신호 처리, 인공 지능, 및/또는 모델링과 같은 계산 집약적(computationally intensive) 작업들과 관련된 기능성을 제공하도록 웹 애플리케이션을 위한 데이터 처리 에 이용될 수 있다. 그 결과, 시스템의 실시예에서, 웹 애플리케이션의 휴대성과 보안성을 바이너리 코드의 네 이티브 성능(native performance)과 조합하기 위한 프레임워크(framework)를 제공할 수 있다. 도 1은 시스템의 도식적 그림을 나타낸다. 시스템은 컴퓨팅 시스템과 서버 세트(예를 들어, 서버 1, 서버 x)를 포함한다. 컴퓨팅 시스템은 웹 브라우저 내에서 구동되는 웹 애플리케이션과 플 러그인을 포함한다. 이러한 컴포넌트 각각이 아래에서 좀 더 자세히 기술된다. 컴퓨팅 시스템은 하나 이상의 서비스 또는 기능을 사용자에게 제공하는 전자 장치에 상응할 수 있다. 예를 들어, 컴퓨팅 시스템은 모바일 폰, 개인용 컴퓨터(PC), 글로벌 위치 인식 시스템(GPS) 수신기, 휴대용 미 디어 플레이어, PDA(personal digital assistant), 및/또는 그래픽 계산기(graphing calculator)로서 동작할 수 있다. 이에 더하여, 컴퓨팅 시스템은 컴퓨팅 시스템 상의 하드웨어와 소프트웨어 자원의 이용을 조율하는 운영 체제(도시되지 않음)를 포함할 수 있고, 또한 사용자를 위한 구체적 작업들을 수행하는 하나 이 상의 애플리케이션(가령, 웹 브라우저, 웹 애플리케이션)을 포함할 수 있다. 예를 들어, 컴퓨팅 시스 템은 이메일 클라이언트, 주소 북, 문서 편집기, 웹 브라우저, 및/또는 미디어 플레이어와 같은 애플 리케이션을 포함할 수 있다. 사용자를 위한 작업들을 수행하기 위하여, 애플리케이션은 운영 체제로부터 컴퓨팅 시스템 상의 하드웨어 자원(가령, 프로세서, 메모리, I/O 컴포넌트, 무선 송신기 등)의 이용을 획득할 수 있고, 또한, 아래에 기술되는 바와 같이, 운영 체제에 의해 제공되는 하드웨어 및/또는 소프트웨어 프레임워크 를 통해 사용자와 상호작용(interact)할 수 있다. 해당업계 종사자라면, 컴퓨팅 시스템이 네이티브 애플리케이션과 비-네이티브 애플리케이션 둘 모두를 실 행하는 기능성을 포함할 수 있음을 이해할 것이다. 다시 말하면, 컴퓨팅 시스템이, 컴퓨팅 시스템에 국소적으로 설치되고 컴퓨터 시스템 상의 하나 이상의 하드웨어 장치 및/또는 운영 체제에 특정적인 네이 티브 애플리케이션(가령, 웹 브라우저)를 포함할 수 있다. 이러한 애플리케이션은 컴퓨팅 시스템의 하나 이상의 중앙 처리 장치(CPU)에서 직접 실행되는 네이티브(가령, 기계) 코드로 컴파일될 수 있다. 이러한 애플리케이션의 코드 실행은 상기 애플리케이션을 범용 프로그래밍 언어(가령, C, C++ 등)와 어셈블리어의 조합 으로 작성함으로써, 또한 상기 애플리케이션에 하드웨어 가속(가령, 그래픽 하드웨어 가속)을 제공하는 라이브 러리를 이용함으로써 추가로 최적화될 수 있다. 그러나, 네이티브 애플리케이션의 설치는 컴퓨팅 시스템과, 컴퓨팅 시스템에 저장된 개인 정보를 위태롭게 할 수 있다. 컴퓨팅 시스템은 또한, 플랫폼 독립적인 비-네이티브 애플리케이션을 실행할 수 있는 기능성을 포함할 수 도 있다. 특히, 컴퓨팅 시스템은, 서버와의 네트워크 연결을 이용하여 하나 이상의 서버(가령, 서버 1, 서버 x)로부터 웹 애플리케이션을 획득할 수 있고, 웹 브라우저에 웹 애플리케이션 을 로드할 수 있다. 예를 들어, 웹 브라우저에 의해 인터넷을 통해 웹 애플리케이션이 애플리케 이션 서버로부터 다운로드될 수 있다. 일단 로드되면, 웹 애플리케이션은 컴퓨팅 시스템 상에서 네이티브 애플리케이션의 것들에 필적하는 기능들 및 사용자 상호작용성(user interactivity)을 제공할 수 있다. 예를 들어, 웹 애플리케이션이 이메 일 클라이언트, 문서 편집기, 미디어 플레이어, CAD(computer-aided design) 시스템, 및/또는 컴퓨터 게임으로 서 기능할 수 있다. 웹 애플리케이션은 또한, 네이티브 애플리케이션의 아날로그 사용자 인터페이스 요소 를 에뮬레이트한 동적 사용자 인터페이스 요소(가령, 메뉴, 버튼, 윈도우, 서브-윈도우, 아이콘, 애니메이션, 및/또는 그 밖의 다른 그래픽 객체)를 포함할 수 있다. 다시 말하면, 웹 애플리케이션이 리치 인터넷 애플 리케이션(RIA)에 상응할 수 있다. 더욱이, 웹 애플리케이션은 컴퓨팅 시스템과 관련된 플랫폼(가령, 운영 체제, 드라이버 등)의 유형과 무관하게 컴퓨팅 시스템에서 실행될 수 있다. 비록 웹 애플리케이션과 같은 플랫폼 독립적 애플리케 이션이 네이티브 애플리케이션보다 휴대하기 간편하고 안전할 수 있지만, 이러한 크로스-플랫폼(cross- platform) 애플리케이션은 네이티브 애플리케이션의 특정한 수행 능력이 부족할 수 있다. 좀 더 구체적으로, 웹 애플리케이션과 같은 비-네이티브 애플리케이은, 자바스크립트(Javascript™가 Sun Microsystems, Inc.의 상표로 등록됨)와 같이, 컴파일되기보다는 인터프리트(interpret)되는 스크립트 언어를 이용하여 작성될 수 있다. 웹 애플리케이션 및/또는 그 밖의 다른 비-네이티브 애플리케이션의 인터프리트 성향으로 의해, 비-네이티브 애플리케이션에 있어서, 컴파일되는 네이티브 애플리케이션에서보다 실행 시간이 상당히 느릴 수 있다. 비-네이티브 애플리케이션은 또한, 네이티브 애플리케이션에 의한 이용에 유용한 애플리 케이션 프로그래밍 인터페이스(API) 및/또는 저-레벨 라이브러리를 이용할 수 없을 수도 있다. 그 결과, 비-네 이티브 애플리케이션은 특정 작업에서 제한된 기능성을 제공할 수 있다. 특히, 웹 애플리케이션은 네이티브 애플리케이션에서 이용 가능한 계산 집약적 기능들을 제공할 수 없을 수도 있다. 이러한 계산 집약적 기능들에는 이하의 기능들이 포함될 수 있다(이에 한정되는 것은 아님). * 시뮬레이션: 전산 유체 역학(CFD), 강체 동력학(rigid body dynamics), 충돌 검출, 분자 동력학, 3차원(3D) 애니메이션 등 * 신호 처리: 오디오 인코딩 및 디코딩, 비디오 인코딩 및 디코딩, 영상 처리, 음성 신호 처리 등. * 인공 지능(AI): 데이터 마이닝, 기계 학습(machine learning), 게임 AI, 패턴 인식 등. * 모델링: 금융 모델링, 수학적 모델링, 과학적 모델링, 3D 모델링 등. * 분석: 수치 해석, 재무 분석, 공학 분석, 암호 해독, 통계 데이터 분석 등. 넓은 의미에서, 웹 애플리케이션은 복잡한 수학 연산(가령, 부동 소수점 연산)의 실행을 요구하는 기능들 을 효과적으로 구현할 수 없을 수도 있다. 예를 들어, 웹 애플리케이션이 너무 느려서 고속 푸리에 변환 (FFT), 몬테카를로법, 행렬 연산, 공액 구배법(conjugate gradient method), 및/또는 상당한 크기의 입력 데이 터에 대한 회귀 기법을 수행할 수 없을 수도 있다. 계산 집약적 기능들을 사용자에게 제공하기 위하여, 웹 애플리케이션과 관련된 네이티브 코드 모듈을 이용하여 웹 애플리케이션을 대신하여 계산 집약적 코드를 실행할 수 있다. 웹 애플리케이션과 같이, 네이티브 코드 모듈은 웹 브라우저에 의해 하나 이상의 서버(가령, 서버 1, 서버 x)로부터 획득될 수 있다. 예를 들어, 웹 애플리케이션은 인터넷상에서 네이티브 코드 모듈에 하이퍼링크를 제 공할 수 있다. 그 후 웹 브라우저가, 하이퍼링크에서 특정된 URL(Uniform Resource Locator)로부터 네이 티브 모드 모듈을 다운로드할 수 있다. 대안적으로, 네이티브 코드 모듈은 사용자에 의해 또는 외부 자원(가령, 또 다른 웹 애플리케이션 및/또는 네이티브 애플리케이션)에 의해 특정될 수 있다. 좀 더 구체적으로, 네이티브 코드 모듈은 컴퓨팅 시스템에 의해 제공된 하드웨어(가령, CPU)에서 직 접 구동되는 네이티브 코드를 포함한 소프트웨어 모듈에 상응할 수 있다. 결과적으로, 네이티브 코드 모듈(11 8)을 이용하여, 컴퓨팅 시스템에서 CPU 자원으로의 실질적 액세스를 요구하는 작업들을 수행할 수 있다. 특히, 네이티브 코드 모듈은, 웹 애플리케이션과 관련된 입력 데이터를 처리함으로써, 위에 나열된 계산 집약적 기능들 중 하나 이상을 웹 애플리케이션의 사용자에게 제공할 수 있다. 이러한 입력 데이터는 입력 데이터를 이용하여 일련의 수학 계산(가령, 전술된 수학 연산)을 수행함으로써 처리될 수 있다. 처리된 입력 데이터로부터 획득된 출력 데이터가 웹 애플리케이션에 제공되어 웹 애플리케이션에 의 해 이용될 수 있다. 예를 들어, 사용자를 위한 추가 작업을 수행하기 위하여, 출력 데이터가 웹 애플리케이션 에 의해 사용자에게 제공되거나 웹 애플리케이션에 의해 이용될 수 있다. 이러한 출력 데이터는 또한, 웹 애플리케이션과 관련된 그 밖의 다른 컴포넌트(가령, 네이티브 애플리케이션, 신뢰하는 플러그인, 및/또는 하나 이상의 서버(가령, 서버 1, 서버 x)에 입력 데이터로서 제공될 수 있다. 예를 들어, 웹 애플리케이션은 컴퓨팅 시스템의 사용자에게 오디오 또는 비디오 인코딩 및/또는 디코 딩 능력을 제공할 수 있다. 먼저, 디코딩할 오디오 또는 비디오 및/또는 인코딩할 오디오 또는 비디오 스트림을 사용자가 특정할 수 있다. 그 다음, 웹 애플리케이션이 서버(가령, 서버 1, 서버 x)로부터, 파 일 또는 스트림을 위한 코덱을 포함한 네이티브 코드 모듈(가령, 네이티브 코드 모듈)을 획득할 수 있다. 그 후, 네이티브 코드 모듈이 컴퓨팅 시스템의 CPU에서 실행되어, 상기 코덱의 인코딩 및/또는 디코딩 능력을 사용자에게 제공할 수 있다. 이와 유사하게, 웹 애플리케이션 및 네이티브 코드 모듈이 컴퓨팅 시스템에 의해 이용되어, 분 산형 컴퓨팅 클러스터에 있어서 계산 집약적 연산을 수행할 수 있다. 좀 더 구체적으로, 네이티브 코드 모듈 이 웹 애플리케이션에 의해 획득되고 플러그인에 의해 실행되어, 컴퓨팅 시스템 상의 분산 형 컴퓨팅 클러스터에서 노드를 형성할 수 있다. 계산 집약적 연산은 컴퓨팅 시스템에서 CPU 저이용율 (underutilization)의 기간 동안 네이티브 코드 모듈에 의해 수행될 수 있다. 네이티브 코드 모듈로 부터의 출력이 서버(가령, 서버 1, 서버 x)로 전달되어, 복잡한 문제들(가령, 단백질 접힘, 미해결 수학 문제, 중력파의 검출, 및/또는 주가 예측)의 분석에 도움이 될 수 있다. 하나 이상의 실시예에서, 플러그인이 다양한 수단을 포함하여 네이티브 코드 모듈의 안전한 실행을 보장할 수 있다. 특히, 네이티브 코드 모듈은, 실행 전에, 플러그인에 의해 제공된 검증 장치에 의해 검증될 수 있다. 네이티브 코드 모듈 검증은 2008년 5월 8일에 행해진 출원(발명의 명칭: \"Method for Validating an Untrusted Native Code Module,\")과 동일자에 출원되어 동시에 계류중인 비-가특허 출원(발명자: J. Bradley Chen, Matthew T. Harren, Matthew Papakipos, David C. Sehr, 및 Bennet S. Yee)에 기술되어 있으며, 위 출원은 본원에 참조로서 포함된다. 일단 네이티브 코드 모듈이 검증되면, 네이티브 코드 모듈은 플러그인에 의해 제공되는 보안 런 타임 환경으로 로드될 수 있다. 보안 런타임 환경에서의 네이티브 코드 실행이 2008년 5월 8일에 행해진 출원(발명의 명칭: \"Method for Safely Executing an Untrusted Native Code Module on a Computing Devic e\")과 동일자에 출원되어 동시에 계류중인 비-가특허 출원(발명자: J. Bradley Chen, Matthew T. Harren, Matthew Papakipos, David C. Sehr, Bennet S. Yee, 및 Gregory Dardyk)에 기술되어 있으며, 위 출원은 본원에 서 참조로서 포함된다. 더욱이, 네이티브 코드 모듈이 하드웨어에서 직접 구동되는 바이너리 코드를 포함할 수 있기 때문에, 네이 티브 코드 모듈은 컴퓨팅 시스템의 운영 체제, 웹 브라우저, 및/또는 컴퓨팅 시스템 상의 그 밖의 다른 소프트웨어 컴포넌트에 관하여 플랫폼 독립적일 수 있다. 위에서 참고된 출원들에 기술되어 있는 바와 같이, 플러그인 및/또는 네이티브 코드 모듈은 또한, \"팻 바이너리(fat binary)\"와 바이너리 변 환기(binary translator)의 이용을 포함한, 다양한 명령어 세트 아키텍처를 실행하기 위한 수단들을 포함할 수 있다. 도 2는 네이티브 코드 모듈에 의한 모듈간 통신(IMC) 버퍼의 이용을 보여준다. 특히, 도 2는 네이티브 코드 모 듈을 통한 데이터의 흐름을 보여준다. 도 2에 도시된 바와 같이, 네이티브 코드 모듈에 의해 제1의 모듈간 통신(IMC) 버퍼로부터 입력 데이터가 획득된다. 전술된 바와 같이, 입력 데이터는 웹 애 플리케이션, 사용자, 및/또는 네이티브 애플리케이션에 의해 특정될 수 있다. 입력 데이터는 또한, IMC 버퍼에의 배치를 위한 다양한 자원(가령, 네트워크 상의 호스트, 디스크, 입력 장치(가령, 카메라, 마 이크로폰 등), 및/또는 하드웨어 장치(가령, 사운드 카드, 비디오 카드 등) 포함)으로부터 획득될 수도 있다. 네이티브 코드 모듈은 입력 데이터를 처리하여 출력 데이터를 획득하고, 이러한 출력 데이터는 제2의 IMC 버퍼 내에 위치된다. 좀 더 구체적으로, 네이티브 코드 모듈이 입력 데이터를 이용하 여 일련의 수학 계산을 수행함으로써 출력 데이터를 획득할 수 있다. 예를 들어, 네이티브 코드 모듈(20 2)은 입력 데이터를 이용하여 일련의 행렬 연산, 수학적 변환, 및/또는 역변환, 및/또는 그 밖의 다른 부 동 소수점 연산을 수행할 수 있다. 그 후, 출력 데이터가 IMC 버퍼로부터 획득되어 웹 애플리케이션 및/또는 웹 애플리케이션과 관련된 신뢰하는 플러그인에 의해 이용될 수 있다. 특히, 웹 애플리케이 션 및/또는 신뢰하는 플러그인은 출력 데이터를 이용하여, 웹 애플리케이션의 사용자 또는 웹 애플리케이션과 관련된 개체를 위한 추가 작업들을 수행할 수 있다. 예를 들어, 출력 데이터가, 사용자에게 제공되는 파일에 저장될 수 있고, 차트 또는 그래프로 표시될 수 있고, 분산형 컴퓨터 클러스터에 대한 데이터베이스에 업로드될 수 있고, 및/또는 그 밖의 다른 애플리케이션의 실행을 수정하는데 이용될 수 있 다. 출력 데이터는 또한, 도 3과 관련해 아래에서 논의되는 바와 같이, 3D 그래픽 모델을 애니메이션화하 는데 이용될 수도 있다. 하나 이상의 실시예에서, IMC 버퍼(204-206)는 네이티브 코드 모듈과 외부 컴포넌트(가령, 웹 애플리케이 션 및/또는 신뢰하는 플러그인) 사이의 데이터-집약적 협력을 용이하게 하는데 사용되는 공유형 메모 리 버퍼에 상응한다. 더욱이, 위에서 참조된 출원들에 기술되어 있는 바와 같이, IMC 버퍼(204-206)에 의한 데 이터 공유가 IMC 런타임에 의해 관리될 수 있다.도 3은 웹-기반 3D 애플리케이션을 실행하는 시스템을 보여준다. 3D 애플리케이션은 웹 브라우저 에서 실행되는 웹 애플리케이션에 상응할 수 있다. 이에 더하여, 3D 애플리케이션은 3D 애플리케이션 의 사용자에게 3D 그래픽 렌더링(3D graphics rendering)과 애니메이션 능력을 제공할 수 있다. 예를 들어, 3D 애플리케이션은 3D 컴퓨터 게임, CAD 시스템, 및/또는 과학적 모델링 및/또는 시뮬레이션 애플리케이션일 수 있다. 더욱이, 3D 애플리케이션은 자바스크립트와 같은 웹-기반 스크립트 언어로 작성될 수 있다. 그 결과, 3D 애플리케이션이 실시간 3D 그래픽 렌더링과 애니메이션의 요구를 충족시킬 수 없을 수도 있다. 그 대신, 3D 애플리케이션은 그래픽 렌더링을 그래픽 플러그인으로 그리고 애니메이션을 플러그인 으로 언로드할 수 있다. 도 3에 도시된 바와 같이, 플러그인은 CPU에서 실행되는 물리 엔진을 포함한다. 하나 이상의 실 시예에서, 물리 엔진은 플러그인에 의해 제공되는 보안 런타임 환경 내에서 실행되는 네이티브 코드 모듈에 상응한다. 물리 엔진은 3D 애플리케이션에 의해 제공될 수 있고(예를 들어, 인터넷을 통해 다 운로드됨), 플러그인에서의 실행 전에 검증될 수 있다. 더욱이, 물리 엔진은 보안 런타임 환경에 의 해 설정된 제약 내에서 CPU에서 직접 수행되는 네이티브 코드를 포함할 수 있다. 따라서, CPU 상에서 의 물리 엔진의 실행으로 인해, 3D 애플리케이션에 3D 애플리케이션 내의 객체들의 실시간 애니 메이션을 제공할 수 있다. 이와 유사하게, 그래픽 플러그인은 그래픽 처리 유닛(GPU)과 통신하는 렌더링 엔진을 포함한다. 하나 이상의 실시예에서, 그래픽 플러그인은 신뢰하는 플러그인(가령, 도 2의 신뢰하는 플러그인)에 상응한다. 다시 말하면, 그래픽 플러그인이 웹 브라우저에 의해 신뢰하는 자원으로부터 다운로드될 수 있고, 웹 브라우저에 의해 설치되어 애플리케이션을 위한 그래픽을 렌더링할 수 있다. 더욱이, 렌 더링 엔진은 GPU를 이용하여 그래픽 렌더링에 관련된 계산을 수행함으로써 그래픽 하드웨어 가속을 제공할 수 있다. 그래픽 플러그인과 렌더링 엔진이, 발명의 명칭이 \"WEB-BASED GRAPHICS RENDERING SYSTEM\"인 출원과 동일자에 출원되어 동시에 계류중이고 발명자가 Vangelis Kokkevis, Matthew Papakipos, 및 Robin Green인 비-가특허 출원에 기술되어 있다. 하나 이상의 실시예에서, 3D 애플리케이션이 물리 엔진과 렌더링 엔진의 공동 실행을 조정한다. 좀 더 구체적으로, 3D 애플리케이션은 플러그인과 그래픽 플러그인 모두에 메소드(method)를 호 출하여 그래픽 모델을 렌더링 엔진으로 로드하고 대응하는 물리 모델을 물리 엔진으로 로드할 수 있 다. 반면, 플러그인과 그래픽 플러그인은 서로를 직접 연계하여 그래픽 모델들의 애니메이션과 렌더 링을 동기화할 수 있다. 특히, 3D 애플리케이션은 그래픽 모델을 묘사하는 입력 파일을 그래픽 플러그인에 제공할 수 있다. 대안적으로, 3D 애플리케이션이 그래픽 모델을 묘사하는 메소드 세트를 그래픽 플러그인에 호출할 수 있다. 그 후, 이러한 그래픽 모델이 그래픽 플러그인의 내부 메모리로 로드될 수 있다. 그 후, 3D 애플리 케이션은 플러그인 및/또는 그래픽 플러그인에 의해 제공되는 IMC 런타임에 의해 공유 메모리 의 영역에 하나 이상의 IMC 버퍼(314-316)의 할당을 요청할 수 있다. 그 후, 그래픽 플러그인이 물리 시뮬레이션에 관한 데이터를 IMC 버퍼(314-316) 내로 로드할 수 있다. 예를 들어, 그래픽 플러그인이 정점 위치(vertex position), 법선(normal), 삼각형 인덱스(triangle indice), 및/또는 변환 행렬을 IMC 버퍼(314- 316) 내로 복사(copy)할 수 있다. 그래픽 모델을 애니메이션화하기 위하여, 물리 엔진은 그래픽 플러그인의 그래픽 모델에 상응하는 물 리 모델을 형성하기 위하여 IMC 버퍼(314-316)로부터 불러올 수 있다. 물리 모델에 관한 추가 정보(가령, 파라 미터)가 플러그인에 의해 3D 애플리케이션으로부터 획득될 수 있다. 그 다음, 물리 엔진이 일련 의 물리 시뮬레이션 계산을 수행하여 물리 모델을 업데이트할 수 있다. 예를 들어, 물리 엔진은 물리 모델 에서 객체에 작용하는 힘들(force)의 세트에 기초하여 정점 위치들(vertex position)과 속도들을 계산할 수 있 다. 그 후, 플러그인은 새로운 정점 위치, 속도, 및/또는 그 밖의 다른 데이터를 이용해 IMC 버퍼(314- 316)를 업데이트할 수 있다. 마지막으로, 이러한 새로운 데이터가 그래픽 플러그인에 의해 IMC 버퍼(314- 316)로부터 읽히고, 이 데이터를 이용해 그래픽 모델을 업데이트한다. 그 후 렌더링 엔진이, 렌더링을 위 해, 업데이트된 그래픽 모델을 GPU에 전달할 수 있다. 3D 애플리케이션의 실행 동안 렌더링 엔진 및 물리 엔진에 의해 그래픽 렌더링과 애니메이션이 계속하여 제공될 수 있다. 예를 들어, 물리 엔진은 그래픽 모델 내의 객체들이 힘의 영향을 받는 한 그래 픽 모델을 계속하여 업데이트할 수 있다. 또한, 추가적 객체 및/또는 힘이 3D 애플리케이션에 의해 그래픽모델 및/또는 물리 모델에 도입될 수 있다. 이와 유사하게, 렌더링 엔진은 3D 애플리케이션에 의해 특정되고 및/또는 GPU에 의해 지원되는 프레임 레이트(frame rate)로 그래픽 모델을 렌더링할 수 있다. 그 결과, 물리 엔진과 렌더링 엔진이 서로 다른 주파수에서 구동될 수 있다. 예를 들어, 물리 엔진(31 0)은 렌더링 엔진보다 네 배 더 빠르게 구동될 수 있다. 그 결과, 그래픽 모델은, 물리 엔진에 의해 이루 어지는 그래픽 모델에 대한 네 번의 업데이트 동안 렌더링 엔진에 의해 한 번 업데이트될 수 있다. 도 4는 웹 애플리케이션의 실행 프로세스를 도시하는 흐름도를 보여준다. 하나 이상의 실시예에서, 단계들 중 하나 이상이 생략되거나, 반복되거나, 다른 순서로 수행될 수 있다. 따라서, 도 4에 도시된 단계들의 구체적인 배열이 본 발명 범위를 한정하는 것으로 해석되어서는 안된다. 처음에, 웹 애플리케이션이 웹 브라우저에 로드된다(동작). 웹 애플리케이션은 웹 브라우저에 의해 서버로 부터 획득될 수 있다. 더욱이, 이러한 웹 애플리케이션을 이용하여 재정 모델링, 계산 수학 또는 과학, 및/또는 AI와 같은 계산 집약적 기능들을 사용자에게 제공할 수 있다. 이러한 기능들을 실제적인 방식으로 구현하기 위 하여, 웹 애플리케이션과 관련된 네이티브 코드 모듈이 획득될 수 있다(동작). 예를 들어, 네이티브 코드 모듈이 웹 애플리케이션에 의해 특정된 자원으로부터 다운로드될 수 있다. 네이티브 코드 모듈은 또한, 네이티 브 코드 모듈을 실행하기 전 검증될 수 있다(동작). 네이티브 코드 모듈이 검증되지 않은 경우, 네이티브 코드 모듈은 실행되지 않고 버려진다. 네이티브 코드 모듈이 검증된 경우, 네이티브 코드 모듈은 보안 런타임 환경으로 로드된다(동작). 보안 런 타임 환경은 웹 브라우저와 관련된 플러그인에 의해 제공될 수 있다. 그 다음, 웹 애플리케이션과 관련된 입력 데이터가 네이티브 코드 모듈에 제공된다(동작). 입력 데이터가 IMC 버퍼를 이용하여 네이티브 코드 모듈 에 제공될 수 있다. 그 후, 입력 데이터가 네이티브 코드 모듈에 의해 처리되어 출력 데이터가 획득된다(동작). 그 후 출력 데 이터가 웹 애플리케이션에 제공되어(동작) 웹 애플리케이션에 의해 이용될 수 있다. 입력 데이터에서와 같 이, IMC 버퍼를 이용하여 출력 데이터가 웹 애플리케이션에 제공될 수 있다. 예를 들어, 상기 애플리케이션은 시뮬레이션, 신호 처리, 인공 지능, 모델링, 및/또는 분석을 위해 출력 데이터를 이용할 수 있다. 이에 더하여, 선택 사항으로서 출력 데이터가 웹 애플리케이션과 관련된 신뢰하는 플러그인에 제공되어(동작) 신뢰하는 플러그인에 의해 이용될 수 있다. 예를 들어, 출력 데이터가 신뢰하는 플러그인에 의해 이용되어 웹 애플리케이 션을 위한 그래픽을 렌더링할 수 있다. 본 발명의 시스템의 실시예에 관한 전술된 설명은 오직 예시와 설명 목적으로만 제시된 것이다. 이러한 설명이 본 발명 시스템을 개시된 형태로 제한하려는 의도는 아니다. 따라서, 많은 수정 형태와 변형 형태가 해당업계 종사자에게 명백할 것이다. 추가적으로, 위의 개시 내용이 본 발명 시스템을 제한하도록 의도되지 않는다. 본 발명의 범위는 기재된 청구항에 의해 정의된다.도면 도면1 도면2 도면3 도면4"}
{"patent_id": "10-2011-7000770", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 시스템의 실시예를 도식적으로 나타낸 것이다. 도 2는 시스템의 실시예에 따라 네이티브 코드 모듈에 의한 모듈간 통신(IMC) 버퍼의 이용을 보여준다. 도 3은 웹 애플리케이션에 대한 그래픽을 표현하기 위한 시스템을 보여준다. 도 4는 웹 애플리케이션 실행 절차를 도시하는 흐름도이다."}
