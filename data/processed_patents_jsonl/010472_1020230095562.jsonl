{"patent_id": "10-2023-0095562", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0014867", "출원번호": "10-2023-0095562", "발명의 명칭": "오디오를 출력하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "허진"}}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치(101)에 있어서,스피커(250); 및상기 스피커와 작동적으로 연결되는 적어도 하나의 프로세서(200)를 포함하고, 상기 적어도 하나의 프로세서는,제1 미디어 데이터로부터 상기 제1 미디어 데이터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하고,상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하고,상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하고,상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하고,상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하고,상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치까지 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치부터의 오디오 데이터를 상기 스피커로 출력하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 제1 오디오 데이터 블록은 상기 제1 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 획득한 제1 PCM(pulse code modulation) 데이터를 포함하고,상기 제2 오디오 데이터 블록은 상기 제2 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여획득한 제2 PCM 데이터를 포함하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항 또는 제 2 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제2 미디어 데이터 중 상기 시작 시점에 대응하는 오디오 프레임보다 지정된 개수 이전의 오디오 프레임및 그 이후의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 디코딩된 오디오 데이터를 생성하고, 상기 디코딩된 오디오 데이터를 포함하는 지정된 크기의 상기 제2 오디오 데이터 블록을 획득하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항 내지 제 3 항 중 어느 한 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 오디오 데이터 블록에서 상기 마지막 재생 위치를 근거로 지정된 크기의 오디오 데이터를 포함하는 탐색 기준 데이터를 결정하고,상기 제2 오디오 데이터 블록에서 상기 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색하고,상기 탐색 기준 데이터와 일치하는 오디오 데이터의 위치를 기반으로 상기 재생 시작 위치를 결정하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 미디어 데이터의 채널 카운트를 기반으로 적어도 하나의 탐색 대상 채널을 선택하고,공개특허 10-2025-0014867-3-상기 탐색 기준 데이터의 상기 선택된 적어도 하나의 탐색 대상 채널의 오디오 데이터를 상기 제2 오디오 데이터 블록과 비교하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 4 항 또는 제 5 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 미디어 데이터의 종료 시점을 기반으로 상기 제1 오디오 데이터 블록 중 오디오 재생되지 않고 스킵될오디오 데이터의 크기를 계산하고,상기 스킵될 오디오 데이터의 크기가 상기 탐색 기준 데이터의 크기보다 큰지의 여부를 판단하고,상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 크면, 상기 마지막 재생 위치 이후의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하고,상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터를 위한 지정된 크기보다 크지 않으면, 상기 마지막재생 위치 이전의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항 내지 제 6 항 중 어느 한 항에 있어서, 상기 적어도 하나의 프로세서는,상기 재생 시작 위치에 근거하여 상기 제2 오디오 데이터 블록의 타임스탬프를 변경하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항 내지 제 7 항 중 어느 한 항에 있어서, 상기 마지막 재생 위치는,상기 제1 오디오 데이터 블록의 크기, 샘플링 레이트, 채널 카운트, 샘플 바이트 크기, 또는 상기 제1 오디오데이터 블록의 재생 시작 시점을 나타내는 타임스탬프 중 적어도 하나를 근거로 결정되는 것을 특징으로 하는전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항 내지 제 8 항 중 어느 한 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이전 및 상기 마지막 재생 위치의 오디오 데이터를 상기 스피커로 출력하고,상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이후의 오디오 데이터는 스킵하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항 내지 제 9 항 중 어느 한 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 이전의 오디오 데이터를 스킵하고,상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 및 상기 재생 시작 위치 이후의 오디오 데이터를 상기 스피커로 출력하도록 구성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치(101)의 동작 방법에 있어서,제1 미디어 데이터로부터 상기 제1 미디어 데이터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하는동작(810)과,상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하는 동작(820)과,상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대공개특허 10-2025-0014867-4-상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하는 동작(840)과,상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작(850)과,상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하는동작(860)과,상기 마지막 재생 위치에 근거한 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치 이후부터의 오디오 데이터를 스피커로 출력하는 동작(870)을 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서, 상기 제1 오디오 데이터 블록은 상기 제1 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 획득한 PCM(pulse code modulation) 데이터를 포함하고,상기 제2 오디오 데이터 블록은 상기 제2 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여획득한 PCM 데이터를 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항 또는 제 12 항에 있어서, 상기 제2 오디오 데이터 블록을 획득하는 동작은,상기 제2 미디어 데이터 중 상기 시작 시점에 대응하는 오디오 프레임보다 지정된 개수 이전의 오디오 프레임및 그 이후의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 디코딩된 오디오 데이터를 생성하는 동작과, 상기 디코딩된 오디오 데이터를 포함하는 지정된 크기의 상기 제2 오디오 데이터 블록을 획득하는 동작을 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11 항 내지 제 13 항 중 어느 한 항에 있어서, 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는동작은,상기 제1 오디오 데이터 블록에서 상기 마지막 재생 위치를 근거로 지정된 크기의 오디오 데이터를 포함하는 탐색 기준 데이터를 결정하는 동작과,상기 제2 오디오 데이터 블록에서 상기 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색하는 동작을 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서, 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작은,상기 제1 미디어 데이터의 채널 카운트를 기반으로 적어도 하나의 탐색 대상 채널을 선택하는 동작과,상기 탐색 기준 데이터의 상기 선택된 적어도 하나의 탐색 대상 채널의 오디오 데이터를 상기 제2 오디오 데이터 블록과 비교하는 동작을 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항 또는 제 15 항에 있어서, 상기 탐색 기준 데이터를 결정하는 동작은,상기 제1 미디어 데이터의 종료 시점을 기반으로 상기 제1 오디오 데이터 블록 중 오디오 재생되지 않고 스킵될오디오 데이터 크기를 계산하는 동작과,상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 큰지의 여부를 판단하는 동작과,상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 크면, 상기 마지막 재생 위치 이후의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하는 동작과,상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터를 위한 지정된 크기보다 크지 않으면, 상기 마지막재생 위치 이전의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하는 동작을 포함하는 것을 특징으공개특허 10-2025-0014867-5-로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 11 항 내지 제 16 항 중 어느 한 항에 있어서, 상기 재생 시작 위치에 근거하여 상기 제2 오디오 데이터 블록의 타임스탬프를 변경하는 동작을 더 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 11 항 내지 제 17 항 중 어느 한 항에 있어서, 상기 마지막 재생 위치는,상기 제1 오디오 데이터 블록의 크기, 샘플링 레이트, 채널 카운트, 샘플 바이트 크기, 또는 상기 제1 오디오데이터 블록의 재생 시작 시점을 나타내는 타임스탬프 중 적어도 하나를 근거로 결정되는 것을 특징으로 하는방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 11 항 내지 제 18 항 중 어느 한 항에 있어서,상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이전 및 상기 마지막 재생 위치의 오디오 데이터를 상기 스피커로 출력하는 동작과,상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이후의 오디오 데이터는 스킵하는 동작을 더 포함하는것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 11 항 내지 제 19 항 중 어느 한 항에 있어서, 상기 제2 미디어 데이터 중 상기 재생 시작 위치 이후부터의오디오 데이터를 상기 스피커로 출력하는 동작은,상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 이전의 오디오 데이터를 스킵하는 동작과,상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 및 상기 재생 시작 위치 이후의 오디오 데이터를 상기 스피커로 출력하는 동작을 포함하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "스피커, 및 적어도 하나의 프로세서를 포함하는 전자 장치가 개시된다. 상기 적어도 하나의 프로세서는, 제1 미 디어 데이터로부터 상기 제1 미디어 데이터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하고, 상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하고, 상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대상으로 사용되기 위한 제2 오 디오 데이터 블록을 획득하고, 상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이 터를 탐색하고, 상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하 고, 상기 마지막 재생 위치에 근거한 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데 이터 중 상기 재생 시작 위치 이후부터의 오디오 데이터를 상기 스피커로 출력하도록 구성될 수 있다."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 실시예들은 오디오 데이터를 출력하는 전자 장치 및 그 동작 방법에 관한 것이다."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 통신 기술이 발달하면서 통신 장치 또는 전자 장치에 다양한 기능이 통합되고 있으며, 전자 장치가 다른 전자 장치와 통신을 통해 연동하는 연동 기능을 수행할 수도 있도록 구현되고 있다. 예를 들어, 휴대형 전자 장 치(예: 모바일 단말, 태블릿 단말 또는 웨어러블 전자 장치)는 통신 기능과 아울러, 음원 재생 기능을 포함하고 있으며, 제조 시 저장된 음원 뿐만 아니라 어플리케이션의 추가 설치를 통해 어플리케이션과 연관된 다양한 음 원을 재생하고 오디오 사운드를 출력할 수 있다."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은 디먹싱 및 디코딩을 통해 획득한 오디오 데이터를 출 력할 수 있다. 본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은 분리된 미디어 파일들의 오디오를 끊김없이 재생할 수 있다. 본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은, 하나의 미디어 데이터의 마지막 재생 위치에 대응하 는 오디오 데이터를 기반으로 다른 미디어 데이터의 동일한 오디오 데이터를 탐색하여 상기 다른 미디어 파일의 재생 시작 위치를 결정할 수 있다. 본 개시의 일 실시예에 따른 전자 장치는, 스피커, 및 상기 스피커와 작동적으로 연결되는 적어도 하나의 프로 세서를 포함할 수 있다. 상기 적어도 하나의 프로세서는, 제1 미디어 데이터로부터 상기 제1 미디어 데이터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하도록 구성될 수 있다. 상 기 적어도 하나의 프로세서는, 상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제 2 미디어 데이터로부터 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하도록 구성될 수 있다. 상 기 적어도 하나의 프로세서는, 상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데 이터를 탐색하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 탐색된 오디오 데이터를 기반으로 상 기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치까지 상기 제1 미디어 데이터의 오디오 재생이 완료된 이 후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치부터의 오디오 데이터를 상기 스피커로 출력하도록 구성될 수 있다. 본 개시의 일 실시예에 따른 전자 장치의 동작 방법은, 제1 미디어 데이터로부터 상기 제1 미디어 데이터의 종 료 시점에 대응하는 제1 오디오 데이터 블록을 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 종료 시점 을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하는 동작을 포함할 수 있다. 상기 방법은 상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대 상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하는 동작을 포함할 수 있다. 상기 방법은 상기 제2 오디 오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작을 포함할 수 있다. 상기 방법은 상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하는 동작 을 포함할 수 있다. 상기 방법은 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치까지 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치부터의 오디오 데이터를 스피커로 출력하는 동작을 포함할 수 있다. 본 개시의 일 실시예에 따라 하나 이상의 프로그램을 저장하는 비일시적 컴퓨터 판독 가능한 저장 매체에 있어 서, 상기 하나 이상의 프로그램은 전자 장치의 적어도 하나의 프로세서에 의해 실행될 때 상기 전자 장치가: 제 1 미디어 데이터로부터 상기 제1 미디어 데이터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하고, 상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하고, 상기 종료 시점에 대 응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대상으로 사용되기 위 한 제2 오디오 데이터 블록을 획득하고, 상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하고, 상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하고, 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치까지 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치부터의 오디오 데이터를 스피커로 출력하 도록 구성하는 명령어들을 포함할 수 있다."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은 일 실시예에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워 크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하 여 전자 장치 또는 서버와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하 여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입 력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스 , 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈 , 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치 에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모 듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자 체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공 지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워 크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지 능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 어플리케이션-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 본 개시의 일 실시예에 따라 오디오를 출력하는 전자 장치의 구성을 나타낸 블록도이다. 도 2를 참조하면, 전자 장치(예를 들어 전자 장치)는 적어도 하나의 프로세서(예를 들어 도 1의 프로 세서) 및 스피커(예를 들어 도 1의 음향 출력 모듈)를 포함할 수 있다. 프로세서는 제어기 , 디먹서(de-multiplexer), 또는 디코더(decoder) 중 적어도 하나를 포함할 수 있다. 제어기 , 디먹서, 또는 디코더 중 적어도 하나는 프로세서에 의해 실행되는 소프트웨어로 구현되 거나, 또는 하드웨어 모듈로 구현될 수 있다. 일 실시예에서 메모리 또는 오디오 버퍼 중 적어도 하 나는 프로세서에 포함되거나, 또는 별도의 메모리(예를 들어 도 1의 메모리)로 구현될 수 있다. 디먹서는 오디오 프레임들 및 비디오 프레임들을 포함하는 미디어 데이터(예를 들어 적어도 하나의 미디어 파일)를 수신하고, 상기 미디어 데이터를 디먹싱하여 오디오 프레임들과 비디오 프레임들로 분리할 수 있다. 상 기 오디오 프레임들은 인코딩된(예를 들어 압축된) 오디오 프레임들일 수 있다. 상기 오디오 프레임들은 디코더 로 전달될 수 있다. 디코더는 상기 오디오 프레임들을 지정된 코덱(예를 들어 MPEG(moving picture experts group))에 따라 디코딩(예를 들어 압축 해제)하여 PCM(pulse code modulation) 데이터를 포함하는 오 디오 데이터를 생성할 수 있다. 오디오 버퍼는 상기 오디오 데이터를 스피커로 출력되기 이전까지 저 장할 수 있다. 오디오 버퍼는 디코더에 의해 생성된 오디오 데이터를 지정된 크기의 오디오 데이터 블록 단위로 저장할 수 있다. 제어기는 디먹서, 디코더 및/또는 오디오 버퍼의 동작을 제어할 수 있다. 개시되는 실시예 들에 따라 제어기는 디먹서로 입력되는 프레임들을 결정하고, 디코더에서 출력되는 PCM 데이터의 재생 시작 시점을 나타내는 타임스탬프를 관리하며, 오디오 버퍼에 저장된 PCM 데이터의 적어도 일부를 메모리에 백업(예를 들어 복사 및 저장)할 수 있고, 본 개시의 실시예들에 따라 제어된 재생 시작 위치(예 를 들어 데이터 위치 또는 시간 위치)를 기반으로 오디오 버퍼에서 출력될 PCM 데이터를 결정할 수 있다. 제어기는 오디오 버퍼에 저장된 PCM 데이터를 스피커로 출력하기 이전, 스피커로 출력되는 소리의 볼륨 조절, 리샘플링 등과 같은 오디오 렌더링(도시하지 않음)을 수행할 수 있다. 본 개시의 실시예들에 서 스피커로 오디오 데이터(예를 들어 PCM)를 출력한다 함은, 오디오 데이터에 대해 볼륨 조절 또는 리샘 플링과 같은 오디오 렌더링을 수행하는 동작을 포함할 수 있다. 메모리는 제어기의 제어에 따라 재생될 적어도 하나의 미디어 데이터와 관련된 메타데이터(예를 들어 샘플링 레이트, 채널 카운트, 또는 샘플 바이트 크기 중 적어도 하나), 상기 미디어 데이터의 시작 시점(start time) 또는 종료 시점(end time), 오디오 버퍼로부터 읽어낸 오디오 데이터(예를 들어 적어도 하나의 오디 오 데이터 블록), 또는 상기 오디오 데이터의 타임스탬프 중 적어도 하나를 저장할 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 하나 이상의 미디어 데이터(예를 들어 제1 미디어 데이터 및 제2 미디어 데이터)를 연속적으로 재생하도록 구성될 수 있다. 전자 장치(예를 들어 도 2의 프로세서 )는 하나 이상의 미디어 데이터를 메모리(예를 들어 도 1의 메모리)로부터 읽어내거나, 또는 상기 하 나 이상의 미디어 데이터를 통신 모듈을 통해 외부 전자 장치(예를 들어 도 1의 전자 장치, 도 1의 전자 장치, 또는 도 1의 서버)로부터 수신할 수 있다. 일 실시예에서 상기 하나 이상의 미디어 데이 터는 오디오 스트리밍 서비스를 통해 수신될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 디먹서 및 디코더를 통해 제1 미디어 데이터의 적어도 하나의 오디오 프레임에 대한 오디오 데이터(예를 들어 PCM 데이터)를 획득하여 오디오 버퍼에 저 장하고, 제1 미디어 데이터의 지정된 종료 시점 이전의 오디오 데이터 및 종료 시점까지의 오디오 데이터를 스 피커로 출력할 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 제2 미디어 데이터를 이어서 재생하기 위해, 제2 미디어 데이터의 지정된 시작 시점에 대응하는 적어도 하나의 오디오 프레임을 출력하도록 디먹서로 요청할 수 있다. 전자 장치(예를 들어 프로세서)는 디먹서로부터 출력된 적어도 하나의 오디오 프레임을 디코더를 통해 디코딩하여 오디오 데이터(예를 들어 PCM 데이터)를 획득하고, 제2 미디어 데이터의 시작 시점에 대응하는 오디오 데이터 및 그 이후의 오디오 데이터를 스피커로 출력할 수 있다. 도 3은 본 개시의 일 실시예에 따른 미디어 파일의 분할 재생을 설명하기 위한 도면이다. 도 3을 참조하면, 전자 장치(예를 들어 도 2의 프로세서)는 일 실시예에 따라, 10,000ms 길이의 미디 어 파일(예를 들어 media.mp4)을 제1 미디어 데이터 및 제2 미디어 데이터로 구분하고, 제1 미 디어 데이터 및 제2 미디어 데이터를 서로 다른 디먹싱 및 디코딩 프로세스들(예를 들어 디먹서 및 디코더)을 통해 분할 처리할 수 있다. 일 실시예에 따르면, 전자 장치(예를 들어 프로세서)는 상기 미디어 파일을, 지정된 시점(예를 들어 5,000ms)을 기반으로 0~5,000ms 구간에 대응하는 제1 미디어 데이터와 5,000~10,000ms 구간에 대응 하는 제2 미디어 데이터로 분할하여 재생할 수 있다. 이에 따라 상기 지정된 시점(예를 들어 5,000ms)은 각각 제1 미디어 데이터의 종료 시점을 나타내는 end_time 및 제2 미디어 데이터의 시작 시점을 나타 내는 start_time으로 설정될 수 있다. 일 실시예에 따르면, 전자 장치(예를 들어 프로세서)는 제1 미 디어 데이터에 이어서 제2 미디어 데이터가 연속적으로 재생될 수 있도록 디먹서와 디코더(23 0)를 제어할 수 있다. 일 실시예에 따르면, 제1 미디어 데이터 및 제2 미디어 데이터는 디먹서에 의해 프레임 단위로 구성되기 때문에, 제1 미디어 데이터의 뒷부분 오디오 프레임들은 제2 미디어 데이터의 앞부분 오디 오 프레임들과 적어도 부분적으로 중복될 수 있다. 그러나 오디오 프레임들의 디코딩 방식에 따라 제1 미디어 데이터의 종료 시점의 오디오 데이터와, 제2 미디어 데이터의 시작 시점의 오디오 데이터는 연속적이 지 않을 수 있고, 이로 인해 스피커로 출력되는 오디오가 끊어지게 될 수 있다. 예를 들어 디코더는 매 오디오 프레임의 디코딩을 위해 하나 또는 그 이상의 이전 오디오 프레임들을 참조 함으로써 디코딩 성능을 향상시킬 수 있는데, 제2 미디어 데이터의 적어도 하나의 앞부분 오디오 프레임들 은 참조 오디오 프레임들(예를 들어 이전 오디오 프레임들) 없이 디코딩될 수 있고, 이로 인해 제1 미디어 데이 터에 대한 연속성이 떨어져서 스피커로 출력되는 오디오가 끊어지게 될 수 있다. 도 4는 본 개시의 일 실시예에 따른 참조 프레임의 부재에 따른 오디오 데이터의 불일치를 설명하기 위한 도면 이다. 도 4를 참조하면, 오디오 버퍼(예를 들어 도 2의 오디오 버퍼)는 제1 미디어 데이터의 지정된 개수 (예를 들어 하나 또는 그 이상)의 오디오 프레임들을 디코딩함으로써 생성된 오디오 데이터(예를 들어 PCM 데이 터)를 오디오 데이터 블록의 단위로 저장할 수 있다. 디먹싱 및 디코딩을 거쳐 오디오 버퍼에 저장되는 제 1 미디어 데이터(예를 들어 도 3의 제2 미디어 데이터)의 마지막 오디오 데이터 블록은 예를 들어 TS=4,991ms 및 4,096 바이트의 크기를 가질 수 있다. 마지막 오디오 데이터 블록은 예를 들어 TS=4,991ms 의 적어도 하나의 오디오 프레임에 대한 디코딩 결과로 생성된 오디오 데이터를 포함할 수 있고, 각 오디오 프 레임에 대응하는 PCM 데이터는 제1 미디어 데이터 내 이전 오디오 프레임들(도시하지 않음)을 참조한 디코 딩을 통해 생성될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 마지막 오디오 데이터 블록 중 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데이터)의 end_time(예를 들어 5,000ms)에 대 응하는 마지막 재생 위치까지의 오디오 데이터를 스피커(예를 들어 도 2의 스피커)로 출력할 수 있다. 일 실시예에 따르면, 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터에 이어 제2 미디어 데이터(예를 들어 도 3의 제2 미디어 데이터)를 연속하여 재생하기 위해, 제2 미디어 데이터에 대해 디먹서(예를 들어 도 2의 디먹서) 및 디코더(예를 들어 도 2의 디코더)를 동작시킬 수 있다. 디먹서 는 제2 미디어 데이터의 start_time(예를 들어 5,000ms)과 가장 가까운 TS=4,991ms의 오디오 프레임 부터 디먹싱하고, 디먹싱 이후의 오디오 프레임들을 디코더로 출력할 수 있다. 디먹서 및 디코더 를 통해, 제2 미디어 데이터의 start_time(예를 들어 5,000ms)에 대응하는 제2 미디어 데이터 의 첫번째 오디오 데이터 블록이 오디오 버퍼에 저장될 수 있다. 이에 따라 제2 미디어 데이터 의 첫번째 오디오 데이터 블록은, 제1 미디어 데이터의 마지막 오디오 데이터 블록과 동일하게, TS=4,991ms의 적어도 하나의 오디오 프레임으로부터 생성된 오디오 데이터를 포함할 수 있다. 제2 미디어 데이터의 첫번째 오디오 데이터 블록은 제1 미디어 데이터와는 별도의 디코딩 프로 세스를 통한 제2 미디어 데이터의 최초 디코딩 결과를 포함할 수 있다. 디코더(예를 들어 도 2의 디코더 )는 참조할 수 있는 이전 오디오 프레임들 없이 제2 미디어 데이터의 앞부분 오디오 프레임들을 디코 딩하기 때문에, 제2 미디어 데이터의 첫번째 오디오 데이터 블록의 PCM 데이터는 제1 미디어 데이터 의 마지막 오디오 데이터 블록의 PCM 데이터와 불일치할 수 있다. 상기 PCM 데이터 불일치(42 0)로 인해, 전자 장치(예를 들어 프로세서)가 마지막 오디오 데이터 블록의 end_time(예를 들어 5,000ms)에 대응하는 마지막 재생 위치 이전의 오디오 데이터를 재생한 이후에, 첫번째 오디오 데이 터 블록의 start_time(예를 들어 5,000ms)에 대응하는 재생 시작 위치 이후의 오디오 데이터를 재생하는 경우, 오디오 연속성이 보장되지 않을 수 있고 오디오 끊김이 발생할 수 있다. 도 5는 본 개시의 일 실시예에 따른 재생 시작 위치의 부정확성으로 인한 오디오 끊김을 설명하기 위한 도면이 다. 도 5를 참조하면, 전자 장치(예를 들어 도 2의 프로세서)는 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데이터)의 오디오 재생을 위해 제1 미디어 데이터의 end_time 이전의 오디오 데이터를 스피커(예를 들어 도 2의 스피커)로 출력할 수 있다. 디먹서(예를 들어 도 2의 디먹서) 및 디코더(예 를 들어 도 2의 디코더)를 거쳐 오디오 버퍼(예를 들어 도 2의 오디오 버퍼)에 저장되는 제1 미디어 데이터의 마지막 오디오 데이터 블록은 예를 들어 TS=4,991ms 및 4,096 바이트의 크기를 가질 수 있 다. 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터의 마지막 오디오 데이터 블록 중 end_time(예를 들어 5,000ms)에 대응하는 마지막 재생 위치 P1 이전까지의 오디오 데이터를 스피커 로 출력할 수 있다. 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터(예를 들어 도 3의 제2 미디어 데이터)의 연속적인 재생을 위해 제2 미디어 데이터의 start_time에 대응하는 오디오 데이터를 출력하도록 디먹서 및 디코더를 동작시킬 수 있다. 전자 장치(예를 들어 프로세서)는 미디어 파일 중 start_time(=5,000ms)에 대응하는 적어도 하나의 오디오 프레임을 출력하도록 디먹서를 제어할 수 있다. (a)의 예에서, 디먹싱될 데이터의 위치 확인의 부정확성으로 인해 디먹서는 제2 미디어 데이터 중 start_time과 가장 가까운 4,991ms 위치에 대응하는 적어도 하나의 오디오 프레임을 정확하게 찾지 못하고 잘못 된 위치(예를 들어 4,996ms 위치)에서 시작하는 적어도 하나의 오디오 프레임을 디코더로 출력할 수 있다.이로 인해 제2 미디어 데이터의 첫번째 오디오 데이터 블록은 TS=4,996ms의 오디오 데이터(예를 들어 PCM 데이터)를 포함할 수 있다. 전자 장치(예를 들어 프로세서)는 첫번째 오디오 데이터 블록이 TS=4,991ms의 오디오 데이터를 포함한다고 간주하고, 제1 미디어 데이터의 마지막 재생 위치를 기반으로 실제 재생 위치 P3에 서부터의 오디오 데이터를 스피커로 출력할 수 있다. 그러나 실제로 제1 미디어 데이터의 마지막 재 생 위치에 대응하는 오디오 데이터를 포함하는 원하는 재생 위치 P2는 실제 재생 위치 P3보다 이전이고, 이에 따라 P2~P3 구간의 오디오 데이터가 누락될 수 있다. (b)의 예에서, 디먹싱될 데이터의 위치 확인의 부정확성으로 인하여 디먹서는 제2 미디어 데이터 중 start_time과 가장 가까운 4,991ms 위치의 오디오 데이터에 대응하는 오디오 프레임을 정확하게 찾지 못하고 잘 못된 위치(예를 들어 4,986ms 위치)에서 시작하는 적어도 하나의 오디오 프레임을 디코더로 출력할 수 있 다. 이로 인해 제2 미디어 데이터의 첫번째 오디오 데이터 블록은 TS=4,986ms의 오디오 데이터(예를 들어 PCM 데이터)를 포함할 수 있다. 전자 장치(예를 들어 프로세서)는 첫번째 오디오 데이터 블록이 TS=4,991ms의 오디오 데이터를 포함한다고 간주하고, 제1 미디어 데이터의 마지막 재생 위치를 기반으로 실제 재생 위치 P4에 서부터의 오디오 데이터를 스피커로 출력할 수 있다. 그러나 실제로 제1 미디어 데이터의 마지막 재 생 위치에 대응하는 오디오 데이터를 포함하는, 원하는 재생 위치 P5는 실제 재생 위치 P4보다 이후이고, 이에 따라 P4~P5 구간의 오디오 데이터가 중복되어 출력될 수 있다. 이상에서 설명한 바와 같이 디코딩시 참조 프레임의 부재 또는 디먹싱될 위치 확인의 부정확성으로 인해 제2 미 디어 데이터의 오디오 데이터가 제1 미디어 데이터의 일부 오디오 데이터와 중복되거나, 제2 미디어 데이터의 일부 오디오 데이터가 오디오 재생에서 누락될 수 있고, 그에 따라 오디오 끊어짐이 발생할 수 있다. 도 6은 본 개시의 일 실시예에 따라 중복된 촬영 구간을 포함하는 미디어 파일들의 재생을 설명하기 위한 도면 이다. 도 6을 참조하면, 제1 미디어 파일 및 제2 미디어 파일은 각각 개별적으로 촬영될 수 있으며 예를 들 어 모션 포토 기능을 통해 적어도 부분적으로 중복된 데이터를 포함할 수 있다. 전자 장치(예를 들어 도 2의 프로세서)가 중복된 데이터를 포함하는 제1 미디어 파일 및 제2 미디어 파일을 연 속하여 재생하는 경우, 중복된 데이터의 오디오 및 비디오가 중복하여 출력되기 때문에 영상을 시청하는 사용자는 오디오 재생 품질이 떨어진다고 판단할 수 있다. 이상에서 설명한 바와 같이, 중복 데이터를 포함할 수 있는 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데 이터 또는 도 6의 제1 미디어 파일)) 및 제2 미디어 데이터(예를 들어 도 3의 제2 미디어 데이터 또는 도 6의 제2 미디어 파일)의 연속 재생시 발생할 수 있는 오디오 끊김 또는 오디오 중복으로 인 해 사용자는 틱 사운드와 같은 좋지 않은 경험을 겪을 수 있으며, 이로 인해 불편함을 느끼게 될 수 있다. 본 개시의 실시예들에서, 제1 미디어 데이터(예를 들어 제1 미디어 데이터 또는 제1 미디어 파일) 및 제2 미디어 데이터(예를 들어 제2 미디어 데이터 또는 제2 미디어 파일)를 연속해서 재생하는 경우, 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터의 종료 시점에 대응하는 마지막 오디오 데이터 블록을 획득하고, 상기 마지막 오디오 데이터 블록 내 마지막 재생 위치를 마킹할 수 있다. 본 개시의 실시예들에서 미디어 데이터는 오디오 데이터(예를 들어 압축된 오디오 프레임들)와 비디오 데이터 (예를 들어 압축된 비디오 프레임들) 및 메타데이터를 포함할 수 있고, 미디어 데이터가 지정된 시간 또는 지정 된 용량 동안 모아져 하나의 확장자로 메모리에 저장된 것을 미디어 파일(예를 들어 미디어 파일)로 정의 할 수 있다. 본 개시의 실시예들에서 제1 미디어 데이터 또는 제2 미디어 데이터는 오디오 재생을 위한 디먹싱 및 디코딩 프로세스의 입력이 되는 미디어 데이터의 한 단위로 정의될 수 있다. 본 개시의 실시예들에서 제1 미 디어 데이터 또는 제2 미디어 데이터는 하나의 미디어 파일이거나, 또는 하나의 미디어 파일의 적어도 일부로 정의될 수 있다. 본 개시의 실시예들에서 오디오 데이터 블록(예를 들어 제1 오디오 데이터 블록 또는 제2 오디오 데이터 블록) 은 디코딩을 통해 생성된 지정된 크기의 PCM 데이터를 포함하는 하나의 데이터 단위로 정의될 수 있다. 일 실시 예에서 오디오 데이터 블록은 디먹서(예를 들어 도 2의 디먹서)로부터 출력되는 지정된 개수(예를 들어 하 나 또는 그 이상)의 오디오 프레임들을 디코더(예를 들어 도 2의 디코더)에 의해 디코딩함으로써 생성된PCM 데이터의 집합으로 정의될 수 있다. 본 개시의 실시예들에서 제1 오디오 데이터 블록 또는 제2 오디오 데이 터 블록은 오디오 재생을 위한 분할 처리의 최소 단위가 될 수 있다. 본 개시의 실시예들에서, 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터의 시작 시점에 대응하 는, 탐색 대상이 될 첫번째 오디오 데이터 블록을 획득하고, 상기 마지막 재생 위치의 오디오 데이터와 동일한 오디오 데이터를 상기 제2 오디오 데이터 블록에서 탐색함으로써, 제2 미디어 데이터의 재생 시작 위치를 정확 히 결정할 수 있다. 본 개시의 실시예들은 하나의 미디어 파일(예를 들어 미디어 파일)을 분할해서 연속 재생하는 경우 오디오 의 끊어짐을 방지할 수 있으며, 중복된 촬영 구간이 포함된 미디어 파일들(예를 들어 미디어 파일들(602, 604) 을 연속해서 재생할 경우 중복 데이터를 제거하고 오디오와 비디오를 끊김 없이 연속해서 재생할 수 있다. 도 7은 본 개시의 일 실시예에 따른 오디오 연속 재생을 위한 구성을 설명하기 위한 블록 구성도이다. 도 7을 참조하면, 전자 장치(예를 들어 도 2의 프로세서)는 마지막 오디오 데이터 판단부, 마지 막 재생 위치 결정부, 탐색 대상 결정부, 오디오 데이터 탐색부, 및 재생 시작 위치 결정부 를 포함할 수 있다. 일 실시예에서 오디오 데이터 판단부, 마지막 재생 위치 결정부, 탐색 대상 결정부, 오디오 데이터 탐색부, 또는 재생 시작 위치 결정부 중 적어도 하나는 프로세서에 의해 실행되는 소프트웨어 모듈로 구현될 수 있다. 일 실시예에 따르면, 오디오 데이터 판단부, 마지막 재 생 위치 결정부, 탐색 대상 결정부, 오디오 데이터 탐색부, 또는 재생 시작 위치 결정부 중 적어도 하나는 별도의 프로세서로 구현될 수 있다. 일 실시예에 따르면, 마지막 오디오 데이터 판단부는 제1 미디어 데이터(예를 들어 제1 미디어 데이터 또는 제1 미디어 파일)의 적어도 하나의 오디오 프레임을 디코딩함으로써 생성된 PCM 데이터를 포함 하는 제1 오디오 데이터 블록을 오디오 버퍼로부터 입력받고, 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 종료 시점(end_time)에 대응하는 PCM 데이터를 포함함을 확인할 수 있다. 마지막 오 디오 데이터 판단부는 상기 제1 오디오 데이터 블록을 오디오 버퍼로부터 읽어내어 다른 메모리 공간에 백업(예를 들어 복사 및 저장)할 수 있다. 일 실시예에서 상기 제1 오디오 데이터 블록은 메모리 에 저장될 수 있다. 일 실시예에 따르면, 마지막 재생 위치 결정부는 상기 제1 오디오 데이터 블록의 마지막 재생 위치 를 결정할 수 있다. 일 실시예에서 상기 마지막 재생 위치는 상기 제1 오디오 데이터 블록의 시 작점을 기준으로 하는 바이트 옵셋(byte offset)을 포함할 수 있다. 예를 들어 상기 마지막 재생 위치는 상기 제1 오디오 데이터 블록 중 오디오 재생에 사용된 오디오 데이터(예를 들어 오디오 데이터 또는 오디오 데이터)의 마지막 바이트를 지시할 수 있다. 일 실시예에 따르면, 탐색 대상 결정부는 제2 미디어 데이터(예를 들어 제2 미디어 데이터 또는 제2 미디어 파일)를 구성하는 오디오 프레임들 중, 탐색 대상이 될 적어도 하나의 오디오 프레임을 출력하도록 디먹서를 제어하고, 상기 적어도 하나의 오디오 프레임을 디코더에 의해 디코딩함으로써 생성된 PCM 데이터를 포함하는 제2 오디오 데이터 블록을 오디오 버퍼로부터 입력받을 수 있다. 일 실시예에 따르면, 오디오 데이터 탐색부는 마지막 재생 위치 결정부에서 결정한 상기 마지막 재생 위치를 기반으로 제1 오디오 데이터 블록 중 탐색 기준 오디오 데이터를 결정할 수 있다. 오디오 데 이터 탐색부는 상기 탐색 기준 오디오 데이터를 이용하여 상기 제2 오디오 데이터 블록을 탐색하여, 상기 제2 오디오 데이터 블록이 상기 탐색 기준 오디오 데이터와 일치하는 오디오 데이터를 포함하는지 판단하고, 상 기 탐색 기준 오디오 데이터와 일치하는 오디오 데이터의 위치를 결정할 수 있다. 일 실시예에 따르면, 재생 시작 위치 결정부는 오디오 데이터 탐색부에서 찾아낸 위치를 제2 미디어 데이터를 위한 재생 시작 위치로 결정할 수 있다. 도 8은 본 개시의 일 실시예에 따른 오디오의 연속 재생을 위한 방법을 나타낸 흐름도이다. 일 실시예에서 후술 되는 동작들 중 적어도 하나는 전자 장치(예를 들어 도 2의 프로세서)에 의해 실행될 수 있다. 실시 예들에 따르면 후술되는 동작들 중 적어도 하나는 생략되거나 변형되거나 순서 변경될 수 있다. 예를 들어 후술 되는 동작들 중 적어도 하나의 동작은 다른 동작과 병행되어 수행되거나, 도시된 순서에 상관없이 수행될 수 있 다. 도 8을 참조하면, 동작 810에서 전자 장치(예를 들어 도 2의 프로세서)는 제1 미디어 데이터(예를 들 어 도 3의 제1 미디어 데이터 또는 도 6의 제1 미디어 파일)로부터 상기 제1 미디어 데이터의 지정된 종료 시점(예를 들어 end_time)에 대응하는 제1 오디오 데이터 블록을 획득할 수 있다. 일 실시예에서 전자 장 치(예를 들어 프로세서)는 제1 미디어 데이터의 복수의 오디오 프레임들 중 뒷부분 적어도 하나의 오 디오 프레임을 디먹서(예를 들어 도 2의 디먹서)에 의해 획득하고, 상기 적어도 하나의 오디오 프레임을 디코더(예를 들어 도 2의 디코더)에 의해 디코딩함으로써 획득한 PCM 데이터를 포함하는 상기 제1 오디오 데이터 블록을 오디오 버퍼(예를 들어 오디오 버퍼)로부터 읽어낼 수 있다. 일 실시예에서 동작 810은 도 9의 동작 902, 동작 904, 또는 동작 906 중 적어도 하나를 포함할 수 있다. 동작 820에서 전자 장치(예를 들어 프로세서)는 상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록 중 오디오 재생에 사용될 마지막 오디오 데이터와 관련된 제1 데이터 위치(예를 들어 마지막 재생 위치(도 7의 722))를 식별할 수 있다. 일 실시예에서 상기 마지막 재생 위치는 상기 제1 오디오 데이터 블록 중 오디오 재생에 사용된 마지막 오디오 데이터(예를 들어 한 바이트)의 위치를 지시하거나, 또는 상기 제1 오디오 데이터 블록 중 오디오 재생에 사용된 마지막 오디오 데이터의 다음 데이터(예를 들어 한 바이트)의 위치를 지시할 수 있다. 예를 들어 상기 마지막 재생 위치는 상기 제1 오디오 데이터 블록의 시작점을 기준으로 하는 바이트 옵셋 을 포함할 수 있다. 예를 들어 상기 마지막 재생 위치는 상기 마지막 오디오 데이터 또는 상기 다음 데이터가 제1 오디오 데이터 블록 중 몇번째 바이트에 위치하는지를 지시할 수 있다. 일 실시예에서 동작 820은 도 9의 동작 908을 포함할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세 서)는 상기 제1 오디오 데이터 블록의 타임스탬프와 크기, 또는 제1 미디어 데이터의 종료 시점(end_time) 중 적어도 하나를 근거로 상기 마지막 재생 위치를 결정할 수 있다. 동작 830에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위 치까지의 오디오 데이터를 계속하여 재생(예를 들어 스피커로 출력)할 수 있다. 여기에서는 동작 830이 동 작 810 및 동작 820 이후에 수행되는 것으로 도시하였지만, 전자 장치(예를 들어 프로세서)는 상기 마지막 재생 위치 이전까지 제1 미디어 데이터의 오디오 데이터를 재생하는 동안, 동작 810, 동작 820, 동작 840, 동작 850, 또는 동작 860 중 적어도 하나를 수행할 수 있다. 일 실시예에서 동작 830은 도 9의 동작 910을 포함할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 상기 마지막 재생 위치 이전까지의 오디오 데이터를 재생한 후 상기 제1 미디어 데이터의 오디오 재생을 완료할 수 있다. 일 실시예에 따르면, 전 자 장치(예를 들어 프로세서)는 상기 마지막 재생 위치 이전까지의 오디오 데이터 및 상기 마지막 재 생 위치의 오디오 데이터를 재생한 후 상기 제1 미디어 데이터의 오디오 재생을 완료할 수 있다. 동작 840에서 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터(예를 들어 제2 미디어 데이터 또는 제2 미디어 파일)의 지정된 시작 시점에 대응하는 제2 오디오 데이터 블록을 획득할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터의 복수의 오디오 프레임들 중 앞 부분 하나 또는 그 이상의 오디오 프레임들을 디먹서에 의해 획득하고, 상기 하나 또는 그 이상의 오디오 프레임을 디코더에 의해 디코딩함으로써 획득한 PCM 데이터를 포함하는 상기 제2 오디오 데이터 블록을 오 디오 버퍼로부터 읽어낼 수 있다. 일 실시예에서 동작 840은 도 13의 절차를 포함할 수 있다. 동작 850에서 전자 장치(예를 들어 프로세서)는 상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 동작 820에서 식별된 상기 마지막 재생 위치를 기반으로 제1 오디오 데이터 블록 중 탐색 기준 오디오 데 이터를 결정하고, 상기 제2 오디오 데이터 블록에서 상기 탐색 기준 오디오 데이터와 일치하는 오디오 데이터를 탐색할 수 있다. 일 실시예에서 동작 850은 도 17의 절차를 포함할 수 있다. 동작 860에서 전자 장치(예를 들어 프로세서)는 상기 탐색된 오디오 데이터를 근거로 제2 오디오 데 이터 블록 중 오디오 재생에 사용될 첫번째 오디오 데이터와 관련된 데이터 위치(예를 들어 재생 시작 위치 )로 결정할 수 있다. 일 실시예에서 상기 재생 시작 위치는 상기 탐색된 오디오 데이터의 시작 위치(예를 들어 바이트 위치)를 지시하거나, 또는 상기 탐색된 오디오 데이터의 이전 위치를 지시할 수 있다. 예를 들어 상기 재생 시작 위치는 상기 제2 오디오 데이터 블록의 시작점을 기준으로 하는 바이트 옵셋을 포함할 수 있다. 동작 870에서 전자 장치(예를 들어 프로세서)는 상기 마지막 재생 위치에 근거하여 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 오디오 데이터 블록의 상기 재생 시작 위치부터 제2 미디어 데 이터의 오디오 데이터(예를 들어 PCM 데이터)를 스피커로 출력할 수 있다. 일 실시예에 따라, 전자 장치 (예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치 이전까지의 오디오 데이터를 스피커로 출력함으로써 상기 제1 미디어 데이터의 오디오 재생을 완료할 수 있다. 그리고 나면전자 장치(예를 들어 프로세서)는 상기 재생 시작 위치의 오디오 데이터 및 상기 재생 시작 위치 이 후의 오디오 데이터를 스피커로 출력할 수 있다. 도 9는 본 개시의 일 실시예에 따른 마지막 재생 위치를 결정하는 절차를 설명하기 위한 흐름도이다. 일 실시예 에서 후술되는 동작들 중 적어도 하나는 전자 장치(예를 들어 프로세서)에 의해 실행될 수 있다. 실 시예들에 따르면 후술되는 동작들 중 적어도 하나는 생략되거나 변형되거나 순서 변경될 수 있다. 예를 들어 후 술되는 동작들 중 적어도 하나의 동작은 다른 동작과 병행되어 수행되거나, 도시된 순서에 상관없이 수행될 수 있다. 일 실시예에서 도 9의 절차는 도 8의 동작 810, 동작 820 및 동작 830에 대응할 수 있다. 도 9를 참조하면, 동작 902에서 전자 장치(예를 들어 도 2의 프로세서)는 제1 미디어 데이터(예를 들 어 도 3의 제1 미디어 데이터 또는 도 6의 제1 미디어 파일)를 디먹싱 및 디코딩하여 적어도 하나의 오디오 프레임에 대응하는 PCM 데이터를 포함하는 제1 오디오 데이터 블록(예를 들어 도 7의 제1 오디오 데이터 블록)을 획득할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데 이터 블록을 오디오 버퍼(예를 들어 도 2의 오디오 버퍼)로부터 읽어낼 수 있다. 동작 904에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 마지막 오디오 데이터 블록인지의 여부를 판단할 수 있다. 일 실시예에서 제1 미디어 데이터의 종료 시점을 나타내는 end_time(예를 들어 미디어 파일 중 제1 미디어 데이터를 식별하기 위해 프로세서가 설정하는 재생 종료 시간)이 설정되어 있는 경우, 전자 장치 (예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 타임스탬프 및 크기를 기반으로, 상기 제1 오디오 데이터 블록이 end_time에 대응하는 오디오 데이터를 포함하는지를 판단할 수 있다. 전자 장치(예 를 들어 프로세서)는 상기 오디오 데이터 블록에 대응하는 디먹싱 및 디코딩 이전의 적어도 하나의 오디오 프레임으로부터, 상기 오디오 데이터 블록의 타임스탬프를 식별할 수 있다. 예를 들어 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터에 적용된 샘플링 레이트, 채널 카운 트, 또는 샘플 바이트 크기 중 적어도 하나를 기반으로, 상기 제1 오디오 데이터 블록의 크기(예를 들어 바이트)에 대응하는 재생 시간 길이(예를 들어 ms 또는 ㎲)를 계산할 수 있다. 전자 장치(예를 들어 프로 세서)는 상기 제1 오디오 데이터 블록의 타임스탬프 및 재생 시간 길이의 합으로 계산되는 상기 제1 오디 오 데이터 블록의 재생 종료 시점이 상기 end_time보다 이후인 경우, 상기 제1 오디오 데이터 블록이 제1 미디 어 데이터의 마지막 오디오 데이터 블록인 것으로 결정할 수 있다. 상기 제1 오디오 데이터 블록의 재생 종료 시점이 상기 end_time보다 이전인 경우, 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 마지막 오디오 데이터 블록이 아닌 것으로 결정할 수 있다. 일 실시예에서 제1 미디어 데이터의 종료 시점을 나타내는 end_time이 설정되어 있지 않은 경우(예를 들어 제1 미디어 데이터가 제1 미디어 파일을 포함하는 경우), 전자 장치(예를 들어 프로세서)는 상기 제 1 오디오 데이터 블록이 오디오 데이터가 존재하는 마지막 디코딩 결과를 포함하는지의 여부를 판단할 수 있다. 이후의 디코딩 결과가 존재하지 않는 경우 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 마지막 오디오 데이터 블록인 것으로 판단할 수 있다. 이후의 디코딩 결과가 존재 하는 경우 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 마 지막 오디오 데이터 블록이 아니라고 판단할 수 있다. 일 실시예에 따라, 상기 제1 오디오 데이터 블록이 제1 미디어 데이터의 마지막 오디오 데이터 블록이라고 판단 된 경우 전자 장치(예를 들어 프로세서)는 동작 906으로 진행할 수 있다. 반면 상기 제1 오디오 데이 터 블록이 제1 미디어 데이터의 마지막 오디오 데이터 블록이 아니고 판단된 경우 전자 장치(예를 들어 프 로세서)는 동작 912로 진행할 수 있다. 동작 912에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 오디오 데이터를 스 피커로 출력할 수 있다. 동작 906에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록을 이후의 오디오 탐색 (예를 들어 동작 850)에 사용될 수 있도록 별도의 메모리 영역(예를 들어 메모리)에 백업(예를 들어 복사 및 저장)할 수 있다. 동작 908에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록으로부터 제1 미디어 데 이터의 end_time에 대응하는 마지막 재생 위치를 식별할 수 있다. 상기 마지막 재생 위치는 제1 미디어 데이터 의 메타데이터(예를 들어 샘플링 레이트, 채널 카운트, 또는 샘플 바이트 크기 중 적어도 하나), 제1 오디오 데이터 블록의 타임스탬프, 또는 제1 미디어 데이터 중 적어도 하나에 대해 설정된 end_time을 기반으로 계 산될 수 있다. 동작 908의 일 실시예는 도 10을 참조하여 후술될 수 있다. 동작 910에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위 치 이전까지의 오디오 데이터(예를 들어 사용될 오디오 데이터)를 스피커로 출력할 수 있다. 상기 마지막 재생 위치 및 그 이후의 나머지 오디오 데이터(예를 들어 스킵될 오디오 데이터)는 스피커로 출력되지 않고 스킵될 수 있다. 예를 들어 상기 나머지 오디오 데이터는 즉시 또는 지정된 시간 이후에 삭제될 수 있다. 도 10은 본 개시의 일 실시예에 따라 오디오 데이터 블록에 대한 마지막 재생 위치를 결정하는 절차를 설명하기 위한 흐름도이다. 일 실시예에서 후술되는 동작들 중 적어도 하나는 전자 장치(예를 들어 도 2의 프로세서 )에 의해 실행될 수 있다. 실시예들에 따르면 후술되는 동작들 중 적어도 하나는 생략되거나 변형되거나 순서 변경될 수 있다. 예를 들어 후술되는 동작들 중 적어도 하나의 동작은 다른 동작과 병행되어 수행되거나, 도시된 순서에 상관없이 수행될 수 있다. 일 실시예에서 도 10의 절차는 도 9의 동작 908에 대응할 수 있다. 도 10을 참조하면, 동작 1002에서 전자 장치(예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록 의 타임스탬프(TS) 및 크기를 식별할 수 있다. 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터 (예를 들어 도 3의 제1 미디어 데이터 또는 도 6의 제1 미디어 파일)와 관련된 메타데이터(예를 들어 샘플링 레이트(sampling_rate), 채널 카운트(channel_count), 또는 샘플 바이트 크기(sample_size_byte) 중 적 어도 하나)를 미리 저장하거나, 또는 메모리(예를 들어 도 2의 메모리)로부터 읽어낼 수 있다. 동작 1004에서 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터에 대해 설정된 재생 종료 시점을 나타내는 end_time이 존재하는지를 판단할 수 있다. 예를 들어 분할 재생을 위해 식별된 제1 미디어 데이터(예 를 들어 제1 미디어 데이터)에 대해서 전자 장치(예를 들어 프로세서)가 지정하는 분할 위치(예 를 들어 5,000ms)에 대응하는 end_time이 설정될 수 있다. 예를 들어 개별 생성된 제1 미디어 데이터(예를 들어 제1 미디어 파일)는 end_time을 가지지 않을 수 있다. end_time가 존재하는 경우 전자 장치(예를 들 어 프로세서)는 동작 1006으로 진행할 수 있다. end_time가 존재하지 않는 경우 전자 장치(예를 들어 프로세서)는 동작 1012로 진행할 수 있다. 동작 1006에서 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 크기를 기반으로 제1 오 디오 데이터 블록의 재생 시간 길이를 계산할 수 있다. 예를 들어, 마지막 재생 위치를 계산하기 위해 사용되는 파라미터 값들은 하기와 같다. 이하의 예는 시간 단위 로 ms(milli-second) 값을 사용하여 설명되어 있지만 ㎲(micro-second)을 사용하는 것도 가능할 수 있다. - sampling_rate : 48,000 - channel_count : 2 (예를 들어 좌측(left) 채널 및 우측(right) 채널) - sample_size_byte : 2 - 제1 오디오 데이터 블록의 타임스탬프(TS) : 4,991ms - 제1 오디오 데이터 블록의 크기(pcm_byte) : 4,096byte - end_time : 5,000ms 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 크기(예를 들어 pcm_byte)를 기반으로 제1 오디오 데이터 블록의 재생 시간 길이(예를 들어 pcmByteToTimeMs)를 다음과 같이 계산할 수 있다. pcmByteToTimeMs = pcm_byte * 1,000,000 / sample_rate / channel_count / sample_size_byte 21.333ms = 4,096 * 1,000,000 / 48,000 / 2 / 2 이상과 같이 제1 오디오 데이터 블록에 대응하는 재생 시간 길이는 21.333ms 이다. 동작 1008에서 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록 중 오디오 재생되지 않고 스킵될 오디오 크기를 계산할 수 있다. 상술된 예에서, 제1 오디오 데이터 블록의 타임스탬프에 상기 재생 시간 길이를 합하면 4,991 + 21.333 = 5012.333ms이며, end_time인 5,000ms까지 재생하기 위해서 제1 오디오 데이터 블록의 마지막 12.333ms (=5012.333ms - 5000ms)에 해당하는 오디오 데이터(예를 들어 스킵될 오디오 데이터)는 스킵될 수 있다. 12.333ms (= 12,333㎲)를 drop_time1이라 칭하고, 전자 장치(예를 들어 프로세서)는 아래와 같이, 제1 오디오 데이터 블록의 스킵될 오디오 데이터 크기(예를 들어 skipAudioSize1)를 계산할 수 있다. pre_skipAudioSize1 = sampling_rate * channel_count * sample_size_byte * drop_time1 / 1,000,000 skipAudioSize1 = FrameSize roundup (pre_skipAudioSize1) 2,367 = 48,000 * 2 * 2 * 12,333 / 1,000,000 2,368 = FrameSize roundup (2,368) 전자 장치(예를 들어 프로세서)는 drop_time1으로부터 계산된 pre_skipAudioSize1을 프레임 크기(예 를 들어 FrameSize = channel_count * sample_size_byte) 단위로 정렬하기 위해 FrameSize roundup 함수를 사 용할 수 있다. FrameSize = 2*2 = 4이므로, 최종적으로 스킵될 오디오 데이터 크기는 FrameSize의 배수인 2,368 바이트로 계산될 수 있다. 동작 1010에서 전자 장치(예를 들어 프로세서)는 상기 스킵될 오디오 크기를 기반으로 제1 오디오 데 이터 블록의 마지막 재생 위치를 결정할 수 있다. 상술된 예에서 스킵될 오디오 데이터의 크기는 2,368 바이트이므로, 전자 장치(예를 들어 프로세서) 는 사용될 오디오 데이터의 크기를 1,728 (= bcm_byte - skipAudioSize1 = 4,096 - 2,368)로 계산할 수 있다. 그러면 마지막 재생 위치는 제1 오디오 데이터 블록의 시작점으로부터 상기 사용될 오디오 데이터의 마지막 바 이트까지의 바이트 옵셋을 나타내는 1,728로 결정될 수 있다. end_time이 설정된 제1 미디어 데이터에 대해, 상 기 마지막 재생 위치는 제1 미디어 데이터의 마지막 오디오 데이터 블록(예를 들어 제1 오디오 데이터 블록) 중 오디오 재생을 위해 출력되지 못한 첫번째 오디오 데이터를 지시할 수 있다. 동작 1006, 동작 1008 및 동작 1010의 일 실시예는 도 11을 참조하여 후술될 것이다. 동작 1012에서 전자 장치(예를 들어 프로세서)는 제1 미디어 데이터에 대해 설정된 end_time이 존재 하지 않기 때문에, 제1 오디오 데이터 블록이 디먹싱 및 디코딩을 거쳐 생성된 제1 미디어 데이터의 마지막 오 디오 블록임을 식별하고, 제1 오디오 데이터 블록의 마지막 위치를 마지막 재생 위치로 결정할 수 있다. 도 11은 본 개시의 일 실시예에 따라 종료 시점이 설정된 미디어 데이터에 대한 마지막 재생 위치를 결정하는 예시를 설명하기 위한 도면이다. 도 11을 참조하면, 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데이터)의 end_time에 대응하는 제1 오디오 데이터 블록은 예를 들어 4,096 바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있다. 전자 장치 (예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록의 재생 시간 길이(예를 들어 21.333ms) 및 타임스탬프를 기반으로 제1 오디오 데이터 블록의 마지막 12.333ms에 대응하는 스킵될 오디 오 데이터의 크기를 2,368 바이트로 계산할 수 있다. 마지막 재생 위치는 4,096 - 2,368 = 1,728로 계산될 수 있다. 전자 장치(예를 들어 프로세서 )는 마지막 재생 위치를 기준으로 앞부분을 오디오 재생에 사용될 오디오 데이터로 판단하고, 뒷부분을 오디오 재생에 스킵될 오디오 데이터로 판단할 수 있다. 도 12는 본 개시의 일 실시예에 따라 종료 시점이 설정되지 않은 미디어 데이터에 대한 마지막 재생 위치를 결 정하는 예시를 설명하기 위한 도면이다. 도 12를 참조하면, 제1 미디어 데이터(예를 들어 도 6의 제1 미디어 파일)의 마지막 오디오 데이터에 대응 하는 제1 오디오 데이터 블록은 예를 들어 4,096바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록의 마지막 위치를 나타내는 4,096을 마지막 재생 위치로 결정할 수 있다. end_time이 설정되지 않은 제1 미디어 데이터에 대해 상기 마지막 재생 위치는 오디오 재생을 위해 출력되는 마지막 오디오 데이터를 지시할 수 있다. 도 13은 본 개시의 일 실시예에 따라 탐색 대상 오디오 데이터를 결정하는 절차를 설명하기 위한 흐름도이다. 일 실시예에서 후술되는 동작들 중 적어도 하나는 전자 장치(예를 들어 도 2의 프로세서)에 의해 실 행될 수 있다. 실시예들에 따르면 후술되는 동작들 중 적어도 하나는 생략되거나 변형되거나 순서 변경될 수 있 다. 예를 들어 후술되는 동작들 중 적어도 하나의 동작은 다른 동작과 병행되어 수행되거나, 도시된 순서에 상관없이 수행될 수 있다. 일 실시예에서 도 13의 절차는 도 8의 동작 840에 대응할 수 있다. 도 13을 참조하면, 동작 1302에서 전자 장치(예를 들어 도 2의 프로세서)는 제2 미디어 데이터의 크 기 및 시작 시점(예를 들어 start_time)을 식별할 수 있다. 예를 들어 분할 재생을 위해 식별된 제2 미디어 데 이터(예를 들어 도 3의 제2 미디어 데이터)에 대한 재생 시작 시점을 나타내는 start_time은 전자 장치 (예를 들어 프로세서)가 지정하는 분할 위치(예를 들어 5,000ms)로 설정될 수 있다. 예를 들어 개별 생성된 제2 미디어 데이터(예를 들어 제2 미디어 파일)에 대한 start_time은 0일 수 있다. 동작 1304에서 전자 장치(예를 들어 프로세서)는 start_time이 0보다 큰지의 여부를 판단할 수 있다. start_time이 0보다 큰 경우 전자 장치(예를 들어 프로세서)는 동작 1306으로 진행할 수 있다. start_time이 0보다 크지 않은 경우(예를 들어 0인 경우) 전자 장치(예를 들어 프로세서)는 동작 1308로 진행할 수 있다. 동작 1306에서 전자 장치(예를 들어 프로세서)는 디먹싱 시작 위치를 start_time보다 지정된 값(예를 들어 X=2) 이전의 오디오 프레임으로 설정할 수 있다. 전자 장치(예를 들어 프로세서)는 start_time 에 대응하는 오디오 프레임의 디코딩을 위해 참조할 이전 오디오 프레임들을 확보하기 위해, start_time에 가장 가까운 타임스탬프를 가지는 오디오 프레임보다, X(예를 들어 2)개 이전의 오디오 프레임을 제2 미디어 데이터 의 디먹싱 시작 위치로 결정할 수 있다. 동작 1308에서 전자 장치(예를 들어 프로세서)는 디먹싱 시작 위치를 0으로 설정할 수 있다. 동작 1310에서 전자 장치(예를 들어 프로세서)는 디먹서(예를 들어 도 2의 디먹서)를 통해 상기 디먹 싱 시작 위치(예를 들어 도 14의 디먹싱 시작 위치)의 오디오 프레임 및 그 이후의 오디오 프레임들을 디 먹싱할 수 있다. start_time 이전의 적어도 하나의 오디오 프레임은 디코더에서 start_time에 대응하는 오 디오 프레임의 디코딩에 참조될 수 있다. 디코더는 이전 적어도 하나의 오디오 프레임을 참조하여 start_time에 대응하는 오디오 프레임을 디코딩함으로써 디코딩 품질을 개선하여, end_time에 대응하는 제1 미 디어 데이터에 대응하는 PCM 데이터와 동일한 디코딩 결과를 획득할 수 있다. 동작 1312에서 전자 장치(예를 들어 프로세서)는 디먹서로부터 출력되는 오디오 프레임들을 디 코더에 의해 디코딩할 수 있다. 디코더는 상기 오디오 프레임들을 디코딩하여 생성한 PCM 데이터를 오디오 버퍼에 저장할 수 있다. 동작 1314에서 전자 장치(예를 들어 프로세서)는 디코더로부터 출력되어 오디오 버퍼에 저 장된 오디오 데이터(예를 들어 PCM 데이터)의 크기(또는 재생 시간 길이)가 지정된 임계값(예를 들어 TH1)을 초 과하는지 판단할 수 있다. 디코딩 이후의 오디오 데이터의 크기(또는 재생 시간 길이)가 TH1를 초과하지 않으면 전자 장치(예를 들어 프로세서)는 동작 1312로 복귀하여 다음 오디오 프레임을 디코딩할 수 있다. 디 코딩 이후의 오디오 데이터의 크기(또는 재생 시간 길이)가 TH1를 초과하면 전자 장치(예를 들어 프로세서 )는 동작 1316으로 진행할 수 있다. 동작 1316에서 전자 장치(예를 들어 프로세서)는 오디오 버퍼에 저장된 TH1보다 큰 크기의 오디 오 데이터를 탐색 대상이 될 제2 오디오 데이터 블록으로 결정할 수 있다. 동작 1312, 동작 1314 및 동작 1316 의 일 실시예는 도 16을 참조하여 후술될 수 있다. 도 14는 본 개시의 일 실시예에 따른 디먹싱 시작 위치의 설정을 설명하기 위한 도면이다. 도 14를 참조하면, 디먹싱 오디오 프레임 테이블은 디먹서(예를 들어 도 2의 디먹서)로 입력된 오디 오 프레임들의 타임스탬프 값들을 저장할 수 있다. 예를 들어 분할 재생될 제2 미디어 데이터를 디먹싱하기 위 해 설정된 start_time이 5,000ms인 경우, start_time에 가장 가까운 타임스탬프는 4,991ms이다. 전자 장치 (예를 들어 도 2의 프로세서)는 start_time에 가장 가까운 타임스탬프 4,991ms를 가지는 오디오 프레 임으로부터 지정된 값(예를 들어 2)만큼 이전의 오디오 프레임(예를 들어 타임스탬프 4947.33ms의 오디오 프레임)을 디먹싱 시작 위치로 결정할 수 있다. 일 실시예에서 start_time에 대응하는 오디오 프레임(예를 들어 오디오 프레임)보다 2개 이전의 오디오 프레임이 존재하지 않는 경우, 전자 장치(예를 들어 프로세서)는 1개 이전의 오디오 프레임(예를 들 어 타임스탬프 4968.67ms의 오디오 프레임)을 디먹싱 시작 위치로 결정할 수 있다. 일 실시예에서 start_time에 대응하는 오디오 프레임(예를 들어 오디오 프레임)보다 1개 이전의 오디오 프레임이 존재하지 않는 경우, 전자 장치(예를 들어 프로세서)는 start_time에 대응하는 오디오 프레임(예를 들어 오디오 프레임)을 디먹싱 시작 위치로 결정할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 start_time보다 지정된 시간 값(예를 들어 70ms) 이 전의 시간 위치(예를 들어 4,930ms)에 대응하는 오디오 프레임(예를 들어 타임스탬프 4,935ms의 오디오 프레임 (도시하지 않음))을 디먹싱 시작 위치로 결정할 수 있다."}
{"patent_id": "10-2023-0095562", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 2, "content": "도 15는 본 개시의 일 실시예에 따른 디먹싱 시작 위치로부터의 디먹싱 동작을 설명하기 위한 도면이다. 도 15를 참조하면, 동작 1502에서 디먹서(예를 들어 도 2의 디먹서)는 예를 들어 동작 1306 또는 동작 1308에서 결정된 디먹싱 시작 위치(예를 들어 타임스탬프 4,948,33ms)에서 디먹싱을 시작할 수 있다. 동작 1504 에서 디먹서는 제2 미디어 데이터를 디먹싱하여 디먹싱 시작 위치로 지정된 첫번째 오디오 프레임(예를 들 어 타임스탬프 4,948.33ms의 오디오 프레임)을 출력할 수 있다. 동작 1506에서 디먹서는 디먹싱 시 작 위치로부터 두번째 오디오 프레임(예를 들어 타임스탬프 4,969.67ms의 오디오 프레임)을 출력할 수 있 다. 동작 1508에서 디먹서는 디먹싱 시작 위치로부터 세번째 오디오 프레임(예를 들어 타임스탬프 4,991ms 의 오디오 프레임)을 출력할 수 있다. 일 실시예에 따라, 상기 타임스탬프 4,991ms의 오디오 프레임은 제2 미디어 데이터의 start_time에 대응 하고, 디코더(예를 들어 도 2의 디코더)는 타임스탬프 4,948.33ms의 오디오 프레임 및 타임스탬프 4,969.67ms의 오디오 프레임을 참조로 상기 타임스탬프 4,991ms의 오디오 프레임을 디코딩함으로써, 제1 미디어 데이터의 마지막 오디오 데이터 블록(예를 들어 제1 오디오 데이터 블록) 중 타임 스탬프 4,991ms의 오디오 프레임과 동일한 디코딩 결과(예를 들어 PCM 데이터)를 출력할 수 있다. 일 실시예에서 전자 장치(예를 들어 도 2의 프로세서)는 디먹서에 의해 획득한 묵음 오디오 데 이터 구간을 의미하는 인코더 패딩 정보 또는 인코더 지연 정보 중 적어도 하나를 디코더로 전달할 수 있 다. 디코더는 상기 인코더 패딩 정보 또는 상기 인코더 지연 정보 중 적어도 하나를 기반으로, 묵음 오디 오 데이터 구간 내의 묵음 오디오 데이터를 제2 오디오 데이터 블록에 포함시키기 않고 폐기할 수 있다. 도 16은 본 개시의 일 실시예에 따른 탐색 대상 오디오 데이터 블록의 결정을 설명하기 위한 도면이다. 도 16을 참조하면, 전자 장치(예를 들어 도 2의 프로세서)는 지정된 임계값(예를 들어 TH1) 이상의 크기(또는 재생 시간 길이)를 가지는 오디오 데이터를 확보할 때까지, 디먹싱 및 디코딩을 반복하여 수행하도록 디먹서(예를 들어 도 2의 디먹서) 및 디코더(예를 들어 도 2의 디코더)를 제어할 수 있다. 예를 들어 TH1=19,200 바이트 (또는 100ms)인 경우 제2 오디오 데이터 블록을 결정하는 동작(예를 들어 동작 1312, 동작 1314 및 동작 1316)의 예시를 설명하면 하기와 같다. 동작 1602에서 디코더는 디먹서로부터 디먹싱 시작 위치로 설정된 타임스탬프 4,948.33ms의 오디오 프레임을 디코딩하여 4,096 바이트 크기의 PCM 데이터를 생성하여 오디오 버퍼(예를 들어 도 2의 오디오 버퍼)에 저장할 수 있다. 상기 PCM 데이터는 제2 미디어 데이터의 첫번째 디코딩 결과이므로, 오디 오 버퍼에 저장된 디코딩된 오디오 데이터의 크기는 4,096 바이트가 된다. 동작 1604에서 디코더는 디먹서로부터 타임스탬프 4,969.67ms의 오디오 프레임을 디코딩하여 4,096 바이트 크기의 PCM 데이터를 생성하여 오디오 버퍼에 저장할 수 있다. 오디오 버퍼에 저장된 디코딩된 오디오 데이터의 크기는 8,192 바이트가 된다. 동작 1606에서 디코더는 디먹서로부터 타임스탬프 4,991ms의 오디오 프레임을 디코딩하여 4,096 바이 트 크기의 PCM 데이터를 생성하여 오디오 버퍼에 저장할 수 있다. 오디오 버퍼에 저장된 디코 딩된 오디오 데이터의 크기는 12,288 바이트가 된다. 동작 1608에서 디코더는 디먹서로부터 타임스탬프 5,012.33ms의 오디오 프레임을 디코딩하여 4,096 바이트 크기의 PCM 데이터를 생성하여 오디오 버퍼에 저장할 수 있다. 오디오 버퍼에 저장된 디코딩된 오디오 데이터의 크기는 16,384 바이트가 된다. 동작 1610에서 디코더는 디먹서로부터 타임스탬프 5,033.63ms의 오디오 프레임을 디코딩하여 4,096 바이트 크기의 PCM 데이터를 생성하여 오디오 버퍼에 저장할 수 있다. 오디오 버퍼에 저장된 디코딩된 오디오 데이터의 크기는 20,480 바이트가 된다. 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터에 대해 오디오 버퍼에 저장된 디코딩된 오 디오 데이터가 100ms에 대응하는 크기(예를 들어 19,200 바이트)를 초과하는 것을 확인하고, 오디오 버퍼 에 저장된 디코딩된 오디오 데이터를 탐색 대상이 되는 제2 오디오 데이터 블록으로 결정할 수 있다. 도 17은 본 개시의 일 실시예에 따른 오디오 데이터를 탐색하는 절차를 설명하기 위한 흐름도이다. 일 실시예에 서 후술되는 동작들 중 적어도 하나는 전자 장치(예를 들어 도 2의 프로세서)에 의해 실행될 수 있다. 실시예들에 따르면 후술되는 동작들 중 적어도 하나는 생략되거나 변형되거나 순서 변경될 수 있다. 예를 들어 후술되는 동작들 중 적어도 하나의 동작은 다른 동작과 병행되어 수행되거나, 도시된 순서에 상관없이 수 행될 수 있다. 일 실시예에서 도 17의 절차는 도 8의 동작 850에 대응할 수 있다. 도 17을 참조하면, 동작 1702에서 전자 장치(예를 들어 도 2의 프로세서)는 탐색 대상 채널을 결정할 수 있다. 일 실시예에서 제1 미디어 데이터 및 제2 미디어 데이터의 채널 카운트는 2 이상의 값을 가질 수 있고, 전자 장치(예를 들어 프로세서)는 복수의 채널들(예를 들어 L 채널 및 R 채널) 중 탐색 대상으 로 사용할 적어도 하나의 채널(예를 들어 L 채널)을 결정할 수 있다. 일 실시예에 따르면, 제1 미디어 데이터 및 제2 미디어 데이터의 각 오디오 프레임이 2개 이상의 오디오 채널들 (예를 들어 좌측 오디오 채널 및 우측 오디오 채널)을 포함하는 경우, 전자 장치(예를 들어 프로세서 )는 어느 하나의 오디오 채널을 탐색 대상으로 결정함으로써 더 빠르고 효율적으로 제1 미디어 데이터와 제2 미디어 데이터에서 일치하는 오디오 데이터의 위치를 찾을 수 있다. 일 실시예에 따르면, 채널 카운트의 값이 1인 경우 모든 오디오 데이터가 비교 대상이 될 수 있다. 채널 카운트 의 값이 2보다 크거나 같은 경우 전자 장치(예를 들어 프로세서)는 어느 하나의 오디오 채널(예를 들 어 좌측 채널)을 탐색 대상으로 결정할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 보 다 정확한 오디오 탐색을 위하여 하나 또는 그 이상의 오디오 채널들(예를 들어 좌측 채널 및 우측 채널)을 탐 색 대상으로 결정할 수 있다. 동작 1702의 일 실시예는 도 18을 참조하여 후술될 것이다. 동작 1704에서 전자 장치(예를 들어 프로세서)는 프레임 크기(예를 들어 FrameSize=4) 및 지정된 탐 색 기준 프레임 개수(예를 들어 NofFrames=8)로부터 탐색 기준 데이터 크기(예를 들어 TH2 = FrameSize * NofFrames = 4*8 = 32 바이트)를 계산할 수 있다. 전자 장치(예를 들어 프로세서)는 임의의 기준에 따라 탐색 기준 프레임 개수를 설정할 수 있다. 동작 1706에서 전자 장치(예를 들어 프로세서)는 상기 제1 오디오 데이터 블록의 마지막 재생 위치에 따른 스킵될 오디오 데이터의 크기(예를 들어 skipAudioSize1)가 상기 탐색 기준 데이터 크기보다 크거나 같은 지를 판단할 수 있다. 오디오 재생에 사용되지 않은 스킵될 오디오 데이터가 오디오 탐색에 사용되기 위한 탐색 기준 데이터 프레임 개수보다 크거나 같은 수의 오디오 프레임들로부터 디코딩된 경우, 상기 스킵될 오디오 데 이터의 크기는 상기 탐색 기준 데이터 크기보다 크거나 같을 수 있다. 상기 스킵될 오디오 데이터의 크기가 상 기 탐색 기준 데이터 크기보다 크거나 같은 경우 전자 장치(예를 들어 프로세서)는 동작 1708로 진행 할 수 있다. 상기 스킵될 오디오 데이터의 크기가 상기 탐색 기준 데이터 크기보다 작은 경우 전자 장치 (예를 들어 프로세서)는 동작 1710으로 진행할 수 있다. 동작 1708에서 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 마지막 재생 위치 및 그 이후로부터 시작하는 오디오 데이터를 탐색 기준 데이터로 결정할 수 있다. 일 실시예에서 상기 탐색 기준 데이 터는 제1 오디오 데이터 블록의 오디오 재생에 사용되지 않은 오디오 데이터(예를 들어 스킵될 오디오 데이터 ) 중 상기 탐색 기준 데이터 크기의 오디오 데이터(예를 들어 PCM 데이터)를 포함할 수 있다. 일 실시예 에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 마지막 재생 위치 및 그 이후의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포함할 수 있다. 동작 1704, 동작 1706, 및 동작 1708의 일 실시예는 도 19를 참조하여 후술될 것이다. 동작 1710에서 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 마지막 재생 위치 이전까 지의 오디오 데이터를 탐색 기준 데이터로 결정할 수 있다. 일 실시예에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 오디오 재생에 사용된 오디오 데이터(예를 들어 스킵될 오디오 데이터) 중 상기 탐색 기준 데이터 크기의 오디오 데이터(예를 들어 PCM 데이터)를 포함할 수 있다. 일 실시예에서 상기 탐색 기준 데이터 는 제1 오디오 데이터 블록의 마지막 재생 위치 및 그 이전의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포함할 수 있다. 상기 탐색 기준 데이터가 오디오 재생에 사용된 오디오 데이터를 포함 하는 경우, 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터 중 상기 탐색 기준 데이터와 일치하는 오디오 데이터 이후의 오디오 데이터를 재생 시작 위치로 결정할 수 있다. 일 실시예에서 제1 미디어 데이터에 대해 end_time이 설정되지 않은 경우, 도 12에 설명한 바와 같이 마지막 재 생 위치는 제1 오디오 데이터 블록의 마지막 위치로 정해질 수 있고, 전자 장치(예를 들어 프 로세서)는 제1 오디오 데이터 블록의 마지막 위치 이전의 오디오 데이터를 상기 탐색 기준 데이터로 결정할 수 있다. 동작 1710의 일 실시예는 도 20을 참조하여 후술될 것이다. 동작 1712에서 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터에 대해 설정된 start_time이 0보 다 큰지의 여부를 판단할 수 있다. start_time이 0보다 큰 경우 전자 장치(예를 들어 프로세서)는 동 작 1714로 진행할 수 있다. start_time이 0보다 크지 않은 경우(예를 들어 0인 경우) 전자 장치(예를 들어 프로세서)는 동작 1716으로 진행할 수 있다. 동작 1714에서 전자 장치(예를 들어 프로세서)는 start_time에 대응하는 데이터 위치에서부터 제2 오 디오 데이터 블록을 탐색할 수 있다. 동작 1716에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데 이터 블록의 시작 위치에서부터 제2 오디오 데이터 블록을 탐색할 수 있다. 동작 1714 및 동작 1716에서 전자 장치(예를 들어 프로세서)는 제2 오디오 블록에서 탐색 기준 데이터와 일치하는 오디오 데이터를 탐 색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 타임스탬프를 기반으로 제2 오디오 데이터 블록의 탐색 시작 위치를 설정할 수 있다. 예를 들어 제1 오디오 데이터 블록의 타임스탬프 가 4,991ms인 경우, 전자 장치(예를 들어 프로세서)는 4,991ms에 대응하는 제2 오디오 데이터 블록의 위치를 결정하고, 상기 결정된 위치에서부터 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색할 수 있다. 동작 1718에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 내에 탐색 기준 데이터와 일치하는 오디오 데이터가 존재하는지의 여부를 판단할 수 있다. 만일 탐색 기준 데이터와 일치하는 오디오 데 이터가 존재하는 경우 전자 장치(예를 들어 프로세서)는 동작 1720으로 진행할 수 있다. 반면 탐색 기준 데이터와 일치하는 오디오 데이터가 존재하지 않는 경우 전자 장치(예를 들어 프로세서)는 동작 1722로 진행할 수 있다. 동작 1720에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 내의 상기 탐색된 오디오 데이터의 위치를 기반으로 재생 시작 위치를 결정할 수 있다. 일 실시예에서 재생 시작 위치는 상기 탐색된 오 디오 데이터의 위치로 정해지거나, 또는 상기 탐색된 오디오 데이터의 다음 바이트로 정해질 수 있다. 동작 1722에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 시작 위치(예를 들어 0바이 트)를 재생 시작 위치로 결정할 수 있다. 동작 1712, 동작 1714, 동작 1718, 및 동작 1720의 일 실시예는 도 21, 도 22 및 도 23을 참조하여 후술될 것 이다. 동작 1722의 일 실시예는 도 24를 참조하여 후술될 것이다. 도 18은 본 개시의 일 실시예에 따른 탐색 대상 채널의 결정을 설명하기 위한 도면이다. 도 18을 참조하면, 제1 오디오 데이터 블록 중 지정된 탐색 기준 프레임 개수(예를 들어 8)만큼의 오디오 프레임들이 도시되었다. 채널 카운트가 2인 경우 지정된 프레임 크기(예를 들어 FrameSize)로 정의되는 각 오디 오 프레임(예를 들어 오디오 프레임)은 L 채널의 오디오 데이터 및 R 채널의 오디오 데이터를 포함할 수 있다. 매 오디오 프레임(예를 들어 오디오 프레임)마다 L 채널의 오디오 데이터 및 R 채널의 오디오 데이터가 반복적으로 배치될 수 있다. 샘플 바이트 크기(sample_size_byte)가 2인 경우, 전자 장치(예를 들어 도 2 의 프로세서)는 채널 카운트와 샘플 바이트 크기를 기반으로 다음과 같이 프레임 크기를 계산할 수 있다. FrameSize = channel_count * sample_size_byte 전자 장치(예를 들어 도 2의 프로세서)는 오디오 데이터의 시작점에서 L 채널의 오디오 데이터(예를 들어 PCM 데이터)를 식별하고, FrameSize = 4 바이트만큼 이동하여 다음 L 채널의 오디오 데이터(예를 들어 PCM 데이터)를 식별할 수 있다. 도 19는 본 개시의 일 실시예에 따른 마지막 재생 위치에 기반한 탐색 기준 데이터의 결정을 설명하기 위한 도 면이다. 도 19를 참조하면, 일 실시예에 따라, 제1 미디어 데이터(예를 들어 제1 미디어 데이터)의 end_time에 대 응하는 제1 오디오 데이터 블록은 4,096바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있다. 일 실시예 에 따라, 제1 오디오 데이터 블록은 마지막 재생 위치를 기준으로 1,728 바이트의 사용될 오디오 데이터와 2,368 바이트의 스킵될 오디오 데이터로 구분될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 스킵될 오디오 데이터 중에서, 마지막 재생 위치 (예를 들어 1,728 바이트)로부터 시작하는 지정된 크기(예를 들어 32 바이트)의 탐색 기준 데이터 를 결정할 수 있다. 탐색 기준 데이터는 지정된 탐색 기준 데이터 크기(예를 들어 32바이트)만큼의 PCM 데이터를 포함할 수 있다. 일 실시예에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 마지막 재 생 위치 및 그 이후의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포함할 수 있다. 전자 장치(예를 들어 프로세서)는 오디오 재생에 사용되지 않은 데이터 위치를 지시하는 마지막 재생 위치를 기반으로, 마지막 재생 위치(예를 들어 1,728 바이트)로부터 시작하는 탐색 기준 데이터 를 결정할 수 있다. 도 20은 본 개시의 일 실시예에 따른 마지막 위치에 기반한 탐색 기준 데이터의 결정을 설명하기 위한 도면이다. 도 20을 참조하면, 제1 오디오 데이터 블록은 end_time이 설정되지 않은 제1 미디어 데이터의 마지막 오 디오 데이터를 포함할 수 있고, 제1 오디오 데이터 블록의 모든 오디오 데이터는 오디오 재 생에 사용될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록의 마 지막 위치를 나타내는 마지막 재생 위치 이전 지정된 크기(예를 들어 32바이트)의 오디오 데이터를 탐색 기준 데이터로 결정할 수 있다. 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 오디오 재생에 사용된 오디오 데 이터 중 지정된 탐색 기준 데이터 크기(예를 들어 32바이트)의 오디오 데이터(예를 들어 PCM 데이터)를 탐색 기준 데이터로 결정할 수 있다. 일 실시예에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 마지막 재생 위치 및 그 이전의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포함할 수 있다. 도 21은 본 개시의 일 실시예에 따른 오디오 데이터 탐색을 설명하기 위한 도면이다. 도 21을 참조하면, 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데이터)의 end_time에 대응하는 제1 오디오 데이터 블록은 예를 들어 4,096바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있다. 제1 오디오 데이터 블록은 마지막 재생 위치를 기준으로 예를 들어 1,728 바이트의 사용될 오디오 데이터 와 2,368 바이트의 스킵될 오디오 데이터로 구분될 수 있다. 전자 장치(예를 들어 도 2의 프 로세서)는 스킵될 오디오 데이터 중에서, 마지막 재생 위치(예를 들어 1,728 바이트)로부터 시작하는 지정된 크기(예를 들어 32바이트)의 탐색 기준 데이터를 결정할 수 있다. 채널 카운트 2에 대해 전자 장치(예를 들어 프로세서)는 L 채널만을 오디오 데이터 탐색에 사용할 수 있다. 탐색 기준 데이터는 지정된 개수(예를 들어 8개)의 오디오 프레임들에 대응하는 L 채널 오디오 데 이터(예를 들어 PCM 데이터)를 포함할 수 있고, 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록이 탐색 기준 데이터와 일치하는 오디오 데이터를 포함하는지를 판단하기 위해 제2 오디오 데 이터 블록를 탐색할 수 있다. 전자 장치(예를 들어 프로세서)는 제2 미디어 데이터에 대해 설정된 start_time(예를 들어 5,000ms) 에 대응하는 제1 오디오 데이터 블록의 탐색 시작 위치(예를 들어 9,920 바이트)를 설정하고, 탐색 시작 위치에서부터 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색하기 시작할 수 있다. 일 실 시예에서 제2 오디오 데이터 블록은 start_time=5,000ms에 대응하는 4,991ms의 오디오 프레임(예를 들어 오디오 프레임)이 아닌, 4,948.33ms의 오디오 프레임(예를 들어 오디오 프레임)부터 시작하는 오디 오 프레임들로부터 디먹싱 및 디코딩된 오디오 데이터를 포함할 수 있으며, 따라서 제2 오디오 데이터 블록 의 start_time에 대응하는 탐색 시작 위치는 0이 아닌 데이터 위치(예를 들어 9,920 바이트)로 정 해질 수 있다. 제2 미디어 데이터의 start_time은 5,000ms이고, 5,000ms - 4,948.33ms = 51.667ms (= 51,667㎲) 이다. 여기서 57,667㎲를 drop_time2라 칭하면, 제2 오디오 데이터 블록의 스킵될 오디오 데이터 크기(예를 들어 skipAudioSize2)는 하기와 같이 계산될 수 있다. 하기 수식에서 pre_skipAudioSize2는 정수 값의 형태로 roundup 함수의 입력이 될 수 있다. pre_skipAudioSize2 = sampling_rate * channel_count * sample_size_byte * drop_time2 / 1,000,000 skipAudioSize2 = FrameSize roundup (pre_skipAudioSize2) 9,920.064 = 48,000 * 2 * 2 * 51,667 / 1,000,000 9,920 = FrameSize roundup (9,920) 상기 계산식에 따라 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 중 오디오 데이 터 탐색에서 스킵될 오디오 데이터 크기를 9,920 바이트로 계산할 수 있다. 하기 스킵될 오디오 데이터 크기는 제2 오디오 데이터 블록의 탐색 시작 위치가 된다. 전자 장치(예를 들어 프로세서)는 상기 탐색 시작 위치에서부터 탐색 기준 데이터와 일 치하는 오디오 데이터가 있는지 탐색할 수 있다. 상기 탐색 시작 위치부터 제2 오디오 데이터 블록(211 0)의 마지막 위치까지의 오디오 데이터에서 상기 일치하는 데이터를 찾지 못한 경우, 전자 장치(예 를 들어 프로세서)는 제2 오디오 데이터 블록의 처음 위치부터 상기 탐색 시작 위치의 이전 (예를 들어 9,916 바이트)까지의 오디오 데이터에서 상기 일치하는 데이터를 다시 탐색할 수 있다. 전자 장치(예를 들어 프로세서)는 상기한 순서로, 제2 오디오 데이터 블록의 탐색 시작 위치 로부터, 탐색 기준 데이터의 L 채널 오디오 데이터와 일치하는 오디오 데이터를 탐색할 수 있다. 도 22는 본 개시의 일 실시예에 따른 탐색 결과에 기반한 재생 시작 위치의 결정을 설명하기 위한 도면이다. 도 22를 참조하면, 제1 미디어 데이터(예를 들어 도 3의 제1 미디어 데이터)의 end_time에 대응하는 제1 오디오 데이터 블록은 예를 들어 4,096바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있다. 제1 오디오 데이터 블록은 마지막 재생 위치를 기준으로 예를 들어 1,728 바이트의 사용될 오디오 데이터 와 2,368 바이트의 스킵될 오디오 데이터로 구분될 수 있다. 전자 장치(예를 들어 도 2의 프 로세서)는 스킵될 오디오 데이터 중에서, 마지막 재생 위치(예를 들어 1,728 바이트)로부터 시작하는 지정된 크기(예를 들어 32바이트)의 탐색 기준 데이터를 결정할 수 있다. 일 실시예에서 탐색 기준 데이터는 선택된 적어도 하나의 채널에 대응하는 오디오 데이터(예를 들어 L 채널 오디오 데이터)를 포함할 수 있다. 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록은 예를 들어 20,480 바이트의 크기 및 4,948.33ms 의 타임스탬프를 가질 수 있다. 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록이 탐색 기준 데이터와 일치하는 오디오 데이터를 포함하는지를 판단하기 위해 제2 오디오 데이터 블록 을 탐색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 탐색 기준 데이터 중 선택된 적어도 하나의 채널에 대응하는 오디오 데이터(예를 들어 16바이트)만을 사용하여 제2 오디오 데이터 블록을 탐색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 4968.33ms에 대응 하는 위치에서 탐색 기준 데이터와 일치하는 오디오 데이터(2216a)를 발견할 수 있다. 상기 탐색된 위치 는 재생 시작 위치로 결정될 수 있다. 전자 장치(예를 들어 프로세서)는 재생 시작 위치 이전 3,840 바이트 크기의 오디오 데이터를 오디오 재생에서 스킵하고, 재생 시작 위치 및 그 이후 의 16,640 바이트 크기의 오디오 데이터를 오디오 재생에 사용할 것으로 결정할 수 있다. 일 실시예에서, 샘플링 레이트, 채널 카운트 및 샘플 바이트 크기를 이용하면 3,840 바이트에 대응하는 재생 시 간 길이는 20ms (= 3,840 * 1,000,000 / 48,000 / 2 / 2)로 계산될 수 있다. 일 실시예에서 전자 장치(예 를 들어 프로세서)는 제2 오디오 데이터 블록의 타임스탬프를 5,000ms로 변경할 수 있다. 다른 실시 예에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 타임스탬프를 4968.33ms (= 4948.33ms + 20ms)로 변경할 수 있다. 전자 장치(예를 들어 프로세서)는 상기 변경된 타임스탬프 (예를 들어 4968.33ms)에 따라 동기화된 비디오 프레임들을 출력할 수 있다. 도 23은 본 개시의 일 실시예에 따른 탐색 결과에 기반한 재생 시작 위치의 결정을 설명하기 위한 도면이다. 도 23을 참조하면, 제1 오디오 데이터 블록은 예를 들어 4,096바이트의 크기 및 타임스탬프 4,991ms를 가 질 수 있다. 제1 오디오 데이터 블록은 end_time이 설정되지 않은 제1 미디어 데이터의 마지막 오디오 데 이터를 포함할 수 있고, 제1 오디오 데이터 블록의 모든 오디오 데이터(예를 들어 4,096 바 이트)는 오디오 재생에 사용될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록의 마지막 위치를 나타내는 마지막 재생 위치 이전 지정된 크기(예를 들어 32 바이트)의 오디 오 데이터를 탐색 기준 데이터로 결정할 수 있다. 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 오디오 재생에 사용된 오디오 데 이터 중 지정된 탐색 기준 데이터 크기의 오디오 데이터(예를 들어 PCM 데이터)를 탐색 기준 데이터 로 결정할 수 있다. 일 실시예에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 마지 막 재생 위치 및 그 이전의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포 함할 수 있다. 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록은 예를 들어 20,480 바이트의 크기 및 0ms의 타임 스탬프를 가질 수 있다. 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록이 탐색 기 준 데이터와 일치하는 오디오 데이터를 포함하는지를 판단하기 위해 제2 오디오 데이터 블록을 탐 색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 탐색 기준 데이터 중 선택된 적어도 하나의 채널에 대응하는 오디오 데이터(예를 들어 16 바이트)만을 사용하여 제2 오디오 데이터 블록 을 탐색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 16,600 바이트에 대응하는 위치에서 탐색 기준 데이터와 일치하는 오디오 데이터(2316a)를 발견할 수 있다. 재생 시 작 위치는 상기 탐색된 위치로부터 탐색 기준 데이터 크기(예를 들어 32 바이트) 이후의 위치(예를 들어 16,632 바이트)로 정해질 수 있다. 전자 장치(예를 들어 프로세서)는 재생 시작 위치 이 전 16,600바이트 크기의 오디오 데이터 및 탐색된 위치 이후 32 바이트의 탐색 기준 데이터(2316 a)를 오디오 재생에서 스킵하고, 재생 시작 위치 및 그 이후의 3,848 바이트 크기의 오디오 데이터(231 4)를 오디오 재생에 사용할 것으로 결정할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 타임스탬프를 86.625ms로 변경할 수 있다. 전자 장치(예를 들어 프로세서)는 상기 변경된 타임스탬프(=86.625ms)에 따라 동기화된 비디오 프레임들을 출력할 수 있다. 도 24는 본 개시의 일 실시예에 따른 오디오 데이터의 탐색 실패에 따른 동작을 설명하기 위한 도면이다. 도 24를 참조하면, 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록은 20,480 바이트의 크기 및 4,948.33ms의 타임스탬프를 가질 수 있다. 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 에서, 탐색 기준 데이터(도시하지 않음)와 일치하는 오디오 데이터를 발견하지 못할 수 있다. 그러면 제2 오디오 데이터 블록에 대한 재생 시작 위치는 제2 미디어 데이터에 대해 설정된 start_time(예를 들어 5,000ms)에 대응하도록 결정될 수 있다. 일 실시예에서 제2 오디오 데이터 블록은 start_time보다 앞선 4948.33ms 타임스탬프에 대응하는 오디오 데이터를 포함하므로, 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 중 오디오 재 생에서 스킵할 오디오 데이터의 크기를 계산할 수 있다. 제2 미디어 데이터의 start_time은 5,000ms이므 로, 제2 오디오 데이터 블록의 스킵할 시간은 5,000ms - 4,948.33ms = 51.667ms (=51,667㎲)이다. 여기 서 57,667㎲에 대응하는 오디오 데이터 크기는 하기와 같이 계산될 수 있다. AudioSize = sampling_rate * channel_count * sample_size_byte * drop_time3 / 1,000,000 9,920.064 = 48,000 * 2 * 2 * 51,667 / 1,000,000 상기 계산식에 따라 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록 중 오디오 재생 에서 스킵될 오디오 데이터 크기를 9,920 바이트로 결정할 수 있다. 하기 스킵될 오디오 데이터 크기는 start_time = 5,000ms에 대응하는, 제2 오디오 데이터 블록의 재생 시작 위치가 된다. 전자 장치 (예를 들어 프로세서)는 재생 시작 위치 이전의 오디오 데이터를 오디오 재생에서 스킵 하고, 재생 시작 위치 및 그 이후의 오디오 데이터를, 제1 미디어 데이터의 재생 이후에 연속하여 스피커로 출력할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 상기 재생 시작 위치에 따라 출력되는 오디오 데이 터의 타임스탬프에 따라 출력될 비디오 프레임의 타임스탬프를 결정하고, 상기 결정된 타임스탬프의 비디오 프 레임을 디코딩하여 상기 오디오 데이터와 동기화되도록 디스플레이 모듈로 출력할 수 있다. 도 25는 본 개시의 일 실시예에 따라 오디오 데이터의 변경된 타임스탬프에 따라 비디오 프레임들을 출력하는 동작을 설명하기 위한 도면이다. 도 25를 참조하면, 제1 오디오 데이터 블록은 4,096바이트의 크기 및 타임스탬프 4,991ms를 가질 수 있 다. 제1 오디오 데이터 블록은 end_time이 설정되지 않은 제1 미디어 데이터의 마지막 오디오 데이터 를 포함할 수 있고, 제1 오디오 데이터 블록의 모든 오디오 데이터(예를 들어 4,096 바이 트)는 오디오 재생에 사용될 수 있다. 전자 장치(예를 들어 도 2의 프로세서)는 제1 오디오 데이터 블록의 마지막 위치를 나타내는 마지막 재생 위치 이전 지정된 크기(예를 들어 32 바이트)의 오디 오 데이터를 탐색 기준 데이터로 결정할 수 있다. 전자 장치(예를 들어 프로세서)는 제1 오디오 데이터 블록의 오디오 재생에 사용된 오디오 데 이터 중 지정된 탐색 기준 데이터 크기의 오디오 데이터(예를 들어 PCM 데이터)를 탐색 기준 데이터 로 결정할 수 있다. 일 실시예에서 상기 탐색 기준 데이터는 제1 오디오 데이터 블록의 마지 막 재생 위치 및 그 이전의 PCM 데이터 중 선택된 적어도 한 채널(예를 들어 L 채널)의 PCM 데이터를 포 함할 수 있다. 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록은 20,480 바이트의 크기 및 0ms의 타임스탬프를 가 질 수 있다. 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록이 탐색 기준 데이터 와 일치하는 오디오 데이터를 포함하는지를 판단하기 위해 제2 오디오 데이터 블록을 탐색할 수 있 다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 탐색 기준 데이터 중 선택된 적어도 하나 의 채널에 대응하는 오디오 데이터(예를 들어 16바이트)만을 사용하여 제2 오디오 데이터 블록을 탐색할 수 있다. 일 실시예에서 전자 장치(예를 들어 프로세서)는 제2 오디오 데이터 블록의 16,600 바이트에 대응하는 위치에서 탐색 기준 데이터와 일치하는 오디오 데이터(2516a)를 발견할 수 있다. 재생 시 작 위치는 상기 탐색된 위치로부터 탐색 기준 데이터 크기 이후의 위치(예를 들어 16,632 바이트) 로 정해질 수 있다. 전자 장치(예를 들어 프로세서)는 재생 시작 위치 이전 16,600+32 바이트 크기의 오디오 데이터를 오디오 재생에서 스킵하고, 재생 시작 위치 및 그 이후의 3,848 바이트 크 기의 오디오 데이터를 오디오 재생에 사용할 것으로 결정할 수 있다. 일 실시예에서 제2 미디어 데이터에 대한 재생 시작 위치의 타임스탬프는 86.625ms로 변경될 수 있다. 전 자 장치(예를 들어 프로세서)는 제2 미디어 데이터(예를 들어 제2 미디어 파일)를 디먹서(예를 들어 도 2의 디먹서)에 의해 디먹싱하여 비디오 프레임들(2520, 2522, 2524, 2526)을 획득하고, 상기 비디 오 프레임들(2520, 2522, 2524, 2526)을 비디오 디코더(도시하지 않음)에 의해 디코딩할 수 있다. 전자 장치 (예를 들어 프로세서)는 디코딩된 비디오 프레임들을 출력(예를 들어 비디오 렌더링)할 때, 재생 시 작 위치의 타임스탬프(예를 들어 86.625ms)보다 이전인 0, 33.33ms, 및 66.67ms의 비디오 프레임들 (2520, 2522, 2524)은 출력하지 않고(예를 들어 비디오 렌더링하지 않고) 스킵할 수 있다. 전자 장치(예를 들어 프로세서)는 100ms의 비디오 프레임 및 그 이후의 비디오 프레임들(도시하지 않음)을 비디오 렌더링을 거쳐 디스플레이 모듈160)로 출력할 수 있다. 상기와 같은 동작들을 통해 전자 장치(예를 들어 프로세서)는 중복된 촬영 구간(예를 들어 중복 데이 터)을 포함하는 제1 미디어 데이터(예를 들어 제1 미디어 파일) 및 제2 미디어 데이터)을 연속 해서 재생할 때, 중복된 오디오 구간 및 비디오 구간을 제거하고 끊김 없이 출력할 수 있다. 본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은 미디어 파일을 중복 데이터를 포함할 수 있 는 제1 미디어 데이터 및 제2 미디어 데이터로 분할하여 연속적으로 재생할 때, 제1 미디어 데이터 의 정확한 마지막 재생 위치를 찾고, 상기 마지막 재생 위치를 기반으로 제2 미디어 데이터를 재생 시작 위치를 결정함으로써, 오디오 끊김 현상을 방지할 수 있다. 본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은 중복된 촬영 구간을 포함하는 제1 미디어 파일 및 제2 미디어 파일을 연속해서 재생하는 경우 제1 미디어 파일의 마지막 재생 위치를 결정하 고, 상기 마지막 재생 위치를 이용하여 제2 미디어 파일에서 중복 데이터를 찾고, 상기 중복 데이터를 제 외한 이후의 오디오를 출력함으로써 오디오 끊김을 방지할 수 있다. 본 개시의 실시예들에 따른 전자 장치 및 그 동작 방법은 변경된 오디오 타임스탬프를 기반으로 중복 데이 터 구간을 스킵하고, 오디오 프레임들과 동기화된 비디오 프레임들을 출력함으로써 비디오와 오디오가 모두 끊 어지지 않고 연속 재생하는 경험을 사용자에게 제공할 수 있다. 일 실시예들에 따른 전자 장치는 스피커, 및 상기 스피커와 작동적으로 연결되는 적어도 하나의 프로 세서를 포함할 수 있다. 상기 적어도 하나의 프로세서는, 제1 미디어 데이터로부터 상기 제1 미디어 데이 터의 종료 시점에 대응하는 제1 오디오 데이터 블록을 획득하도록 구성될 수 있다. 상기 적어도 하나의 프로세 서는, 상기 종료 시점을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하도록 구성될 수 있 다. 상기 적어도 하나의 프로세서는, 상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오 디오 데이터를 탐색하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 탐색된 오디오 데이터를 기반 으로 상기 제2 오디오 데이터 블록의 재생 시작 위치를 결정하도록 구성될 수 있다. 상기 적어도 하나의 프로세 서는, 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위치까지 상기 제1 미디어 데이터의 오디오 재생이 완 료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치부터의 오디오 데이터를 상기 스피커로 출력하도록 구성될 수 있다. 일 실시예에서 상기 제1 오디오 데이터 블록은 상기 제1 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들 을 디코딩하여 획득한 PCM(pulse code modulation) 데이터를 포함할 수 있다. 일 실시예에서 상기 제2 오디오 데이터 블록은 상기 제2 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 획득한 PCM 데이 터를 포함할 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제2 미디어 데이터 중 상기 시작 시점에 대응하는 오디오 프레임보다 지정된 개수 이전의 오디오 프레임 및 그 이후의 하나 또는 그 이상의 오디오 프레임들을 디코딩하 여 디코딩된 오디오 데이터를 생성하고, 상기 디코딩된 오디오 데이터를 포함하는 지정된 크기의 상기 제2 오디 오 데이터 블록을 획득하도록 구성될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제1 오디오 데이터 블록에서 상기 마지막 재생 위치를 근 거로 지정된 크기의 오디오 데이터를 포함하는 탐색 기준 데이터를 결정하고, 상기 제2 오디오 데이터 블록에서 상기 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색하고, 상기 탐색 기준 데이터와 일치하는 오디오 데이 터의 위치를 기반으로 상기 재생 시작 위치를 결정하도록 구성될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제1 미디어 데이터의 채널 카운트를 기반으로 적어도 하나 의 탐색 대상 채널을 선택하고, 상기 탐색 기준 데이터의 상기 선택된 적어도 하나의 탐색 대상 채널의 오디오 데이터를 상기 제2 오디오 데이터 블록과 비교하도록 구성될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제1 미디어 데이터의 종료 시점을 기반으로 상기 제1 오디 오 데이터 블록 중 오디오 재생되지 않고 스킵될 오디오 데이터 크기를 계산하고, 상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 큰지의 여부를 판단하고, 상기 스킵될 오디오 데이터 크기가 상기 탐 색 기준 데이터의 크기보다 크면, 상기 마지막 재생 위치 이후의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하고, 상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터를 위한 지정된 크기보다 크지 않 으면, 상기 마지막 재생 위치 이전의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하도록 구성될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 재생 시작 위치에 근거하여 상기 제2 오디오 데이터 블록 의 타임스탬프를 변경하도록 구성될 수 있다. 일 실시예에서 상기 마지막 재생 위치는, 상기 제1 오디오 데이터 블록의 크기, 샘플링 레이트, 채널 카운트, 샘플 바이트 크기, 및 상기 제1 오디오 데이터 블록의 재생 시작 시점을 나타내는 타임스탬프를 근거로 결정될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이전 및 상기 마지막 재생 위치의 오디오 데이터를 상기 스피커로 출력하고, 상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이후의 오디오 데이터는 스킵하도록 구성될 수 있다. 일 실시예에서 상기 적어도 하나의 프로세서는, 상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 이전의 오디오 데이터를 스킵하고, 상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 및 상기 재생 시작 위치 이후 의 오디오 데이터를 상기 스피커로 출력하도록 구성될 수 있다. 일 실시예에 따른 전자 장치의 동작 방법은, 제1 미디어 데이터로부터 상기 제1 미디어 데이터의 종료 시 점에 대응하는 제1 오디오 데이터 블록을 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 종료 시점 을 기반으로 상기 제1 오디오 데이터 블록의 마지막 재생 위치를 식별하는 동작을 포함할 수 있다. 상기 방법은 상기 종료 시점에 대응하는 제2 미디어 데이터의 시작 시점을 기반으로, 상기 제2 미디어 데이터로부터 탐색 대상으로 사용되기 위한 제2 오디오 데이터 블록을 획득하는 동작을 포함할 수 있다. 상기 방법은 상 기 제2 오디오 데이터 블록에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작을 포함 할 수 있다. 상기 방법은 상기 탐색된 오디오 데이터를 기반으로 상기 제2 오디오 데이터 블록의 재생 시작 위 치를 결정하는 동작을 포함할 수 있다. 상기 방법은 상기 제1 오디오 데이터 블록의 상기 마지막 재생 위 치까지 상기 제1 미디어 데이터의 오디오 재생이 완료된 이후, 상기 제2 미디어 데이터 중 상기 재생 시작 위치 부터의 오디오 데이터를 스피커로 출력하는 동작을 포함할 수 있다. 일 실시예에서 상기 제1 오디오 데이터 블록은 상기 제1 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들 을 디코딩하여 획득한 PCM(pulse code modulation) 데이터를 포함할 수 있다. 일 실시예에서 상기 제2 오디오 데이터 블록은 상기 제2 미디어 데이터의 하나 또는 그 이상의 오디오 프레임들을 디코딩하여 획득한 PCM 데이 터를 포함할 수 있다. 일 실시예에서 상기 제2 오디오 데이터 블록을 획득하는 동작은, 상기 제2 미디어 데이터 중 상기 시작 시점에 대응하는 오디오 프레임보다 지정된 개수 이전의 오디오 프레임 및 그 이후의 하나 또는 그 이상의 오디오 프레 임들을 디코딩하여 디코딩된 오디오 데이터를 생성하는 동작과, 상기 디코딩된 오디오 데이터를 포함하는 지정 된 크기의 상기 제2 오디오 데이터 블록을 획득하는 동작을 포함할 수 있다. 일 실시예에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작은, 상기 제1 오디오 데이터 블록에서 상기 마지막 재생 위치를 근거로 지정된 크기의 오디오 데이터를 포함하는 탐색 기준 데이터를 결정하 는 동작과, 상기 제2 오디오 데이터 블록에서 상기 탐색 기준 데이터와 일치하는 오디오 데이터를 탐색하는 동 작을 포함할 수 있다. 일 실시예에서 상기 마지막 재생 위치에 대응하는 오디오 데이터를 탐색하는 동작은, 상기 제1 미디어 데이터의 채널 카운트를 기반으로 적어도 하나의 탐색 대상 채널을 선택하는 동작과, 상기 탐색 기준 데이터의 상기 선택 된 적어도 하나의 탐색 대상 채널의 오디오 데이터를 상기 제2 오디오 데이터 블록과 비교하는 동작을 포함할 수 있다. 일 실시예에서 상기 탐색 기준 데이터를 결정하는 동작은, 상기 제1 미디어 데이터의 종료 시점을 기반으로 상 기 제1 오디오 데이터 블록 중 오디오 재생되지 않고 스킵될 오디오 데이터 크기를 계산하는 동작과, 상기 스킵 될 오디오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 큰지의 여부를 판단하는 동작과, 상기 스킵될 오디 오 데이터 크기가 상기 탐색 기준 데이터의 크기보다 크면, 상기 마지막 재생 위치 이후의 오디오 데이터를 포 함하도록 상기 탐색 기준 데이터를 결정하는 동작과, 상기 스킵될 오디오 데이터 크기가 상기 탐색 기준 데이터 를 위한 지정된 크기보다 크지 않으면, 상기 마지막 재생 위치 이전의 오디오 데이터를 포함하도록 상기 탐색 기준 데이터를 결정하는 동작을 포함할 수 있다. 일 실시예에서 상기 방법은 상기 재생 시작 위치에 근거하여 상기 제2 오디오 데이터 블록의 타임스탬프를 변경 하는 동작을 더 포함할 수 있다. 일 실시예에서 상기 마지막 재생 위치는, 상기 제1 오디오 데이터 블록의 크기, 샘플링 레이트, 채널 카운트, 샘플 바이트 크기, 또는 상기 제1 오디오 데이터 블록의 재생 시작 시점을 나타내는 타임스탬프 중 적어도 하나 를 근거로 결정될 수 있다. 일 실시예에서 상기 방법은 상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위치 이전 및 상기 마지막 재생 위치의 오디오 데이터를 상기 스피커로 출력하는 동작과, 상기 제1 오디오 데이터 블록 중 상기 마지막 재생 위 치 이후의 오디오 데이터는 스킵하는 동작을 더 포함할 수 있다. 일 실시예에서 상기 제2 미디어 데이터 중 상기 재생 시작 위치 이후부터의 오디오 데이터를 상기 스피커로 출 력하는 동작은, 상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 이전의 오디오 데이터를 스킵하는 동작과, 상기 제2 오디오 데이터 블록 중 상기 재생 시작 위치 및 상기 재생 시작 위치 이후의 오디오 데이터를상기 스피커로 출력하는 동작을 포함할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 컴퓨터 장치, 휴대용 통신 장치 (예: 스마트폰), 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\",“A 또는 B 중 적어도 하나,”\"A, B 또는 C,\" \"A, B 및 C 중 적어도 하나,”및 “A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, “기능적으로” 또는 “통신적으로”라는 용어와 함께 또는 이런 용 어 없이, “커플드” 또는 “커넥티드”라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부가 될 수 있다. 예를 들 면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 일 실시예들은 기기(machine)(예: 전자 장치)에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 예를 들면, 기기(예: 마스터 장치 또는 태스크 수행 장치)의 프로세서는, 저장 매체로부터 저장된 하 나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적 어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기 로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구 분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있다. 다양한 실시예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통 합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수 의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14 도면15 도면16 도면17 도면18 도면19 도면20 도면21 도면22 도면23 도면24 도면25"}
{"patent_id": "10-2023-0095562", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시의 특정 실시예의 상기 및 다른 측면, 특징 및 이점은 첨부된 도면과 함께 취해진 다음의 상세한 설명으 로부터 더욱 명백해질 것이다: 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 본 개시의 일 실시예에 따라 오디오를 출력하는 전자 장치의 구성을 나타낸 블록도이다. 도 3은 본 개시의 일 실시예에 따른 미디어 파일의 분할 재생을 설명하기 위한 도면이다. 도 4는 본 개시의 일 실시예에 따른 참조 프레임의 부재에 따른 오디오 데이터의 불일치를 설명하기 위한 도면 이다. 도 5는 본 개시의 일 실시예에 따른 재생 시작 위치의 부정확성으로 인한 오디오 끊김을 설명하기 위한 도면이 다. 도 6은 본 개시의 일 실시예에 따라 중복된 촬영 구간을 포함하는 미디어 파일들의 재생을 설명하기 위한 도면 이다.도 7은 본 개시의 일 실시예에 따른 오디오 연속 재생을 위한 구성을 설명하기 위한 블록 구성도이다. 도 8은 본 개시의 일 실시예에 따른 오디오의 연속 재생을 위한 방법을 나타낸 흐름도이다. 도 9는 본 개시의 일 실시예에 따른 마지막 재생 위치를 결정하는 절차를 설명하기 위한 흐름도이다. 도 10은 본 개시의 일 실시예에 따라 오디오 데이터 블록에 대한 마지막 재생 위치를 결정하는 절차를 설명하기 위한 흐름도이다. 도 11은 본 개시의 일 실시예에 따라 종료 시점이 설정된 미디어 데이터에 대한 마지막 재생 위치를 결정하는 예시를 설명하기 위한 도면이다. 도 12는 본 개시의 일 실시예에 따라 종료 시점이 설정되지 않은 미디어 데이터에 대한 마지막 재생 위치를 결 정하는 예시를 설명하기 위한 도면이다. 도 13은 본 개시의 일 실시예에 따라 탐색 대상 오디오 데이터를 결정하는 절차를 설명하기 위한 흐름도이다. 도 14는 본 개시의 일 실시예에 따른 디먹싱 시작 위치의 설정을 설명하기 위한 도면이다. 도 15는 본 개시의 일 실시예에 따른 디먹싱 시작 위치로부터의 디먹싱 동작을 설명하기 위한 도면이다. 도 16은 본 개시의 일 실시예에 따른 탐색 대상 오디오 데이터 블록의 결정을 설명하기 위한 도면이다. 도 17은 본 개시의 일 실시예에 따른 오디오 데이터를 탐색하는 절차를 설명하기 위한 흐름도이다. 도 18은 본 개시의 일 실시예에 따른 탐색 대상 채널의 결정을 설명하기 위한 도면이다. 도 19는 본 개시의 일 실시예에 따른 마지막 재생 위치에 기반한 탐색 기준 데이터의 결정을 설명하기 위한 도 면이다. 도 20은 본 개시의 일 실시예에 따른 마지막 위치에 기반한 탐색 기준 데이터의 결정을 설명하기 위한 도면이다. 도 21은 본 개시의 일 실시예에 따른 오디오 데이터 탐색을 설명하기 위한 도면이다. 도 22는 본 개시의 일 실시예에 따른 탐색 결과에 기반한 재생 시작 위치의 결정을 설명하기 위한 도면이다. 도 23은 본 개시의 일 실시예에 따른 탐색 결과에 기반한 재생 시작 위치의 결정을 설명하기 위한 도면이다. 도 24는 본 개시의 일 실시예에 따른 오디오 데이터의 탐색 실패에 따른 동작을 설명하기 위한 도면이다. 도 25는 본 개시의 일 실시예에 따라 오디오 데이터의 변경된 타임스탬프에 따라 비디오 프레임들을 출력하는 동작을 설명하기 위한 도면이다."}
