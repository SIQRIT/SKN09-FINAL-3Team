{"patent_id": "10-2021-0105013", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0023165", "출원번호": "10-2021-0105013", "발명의 명칭": "사용자 인터페이스를 제공하는 전자 장치 및 제공 방법", "출원인": "삼성전자주식회사", "발명자": "이지원"}}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,터치 입력을 수신하는 터치 스크린상기 터치 스크린과 작동적으로 연결된 프로세서;및메모리를 포함하고,상기 메모리는, 실행 시에, 상기 프로세서가상기 터치 스크린을 이용하여, 제1어플리케이션의 아이콘 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고,상기 제1어플리케이션의 아이콘 상에 상기 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 상기 드래그입력이 감지된 위치에 대응하여 상기 제1어플리케이션의 실행 화면의 크기를 결정하고, 상기 제1어플리케이션을상기 결정된 크기에 따라 실행하며,상기 터치 스크린을 이용하여, 상기 제1어플리케이션의 실행 화면 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하고,상기 제1어플리케이션의 실행 화면 상에 상기 제2입력이 감지되면 상기 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 인스트럭션들(instructions)을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 프로세서는사용자 입력에 대응하여 상기 제1어플리케이션의 실행 화면의 크기를 결정하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 메모리는상기 제1어플리케이션의 실행 화면의 크기 정보가 미리 설정되어 있는 테이블을 저장하고,상기 제1어플리케이션 상에 상기 제1입력 발생 시 사용자에게 미리 설정된 상기 제1어플리케이션의 실행 화면의크기 중에서 상기 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 상기 실행 화면의 크기를결정할 것인지 가이드 화면을 표시하는 인스트럭션들을 저장하며,상기 실행 화면의 형태는 아이콘 또는 위젯의 형태를 포함하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항에 있어서,상기 프로세서는상기 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격공개특허 10-2023-0023165-3-중 적어도 어느 하나를 결정하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1항에 있어서,상기 메모리는, 실행 시에, 상기 프로세서가상기 터치 스크린을 이용하여, 제2어플리케이션의 아이콘 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 상기 제1입력의 발생 여부를 감지하고,상기 제2어플리케이션의 아이콘 상에 상기 제1입력 발생 후 제2방향으로 드래그 입력이 발생하면 상기 드래그입력에 대응하여 상기 제2어플리케이션의 실행 화면의 크기를 결정하고, 상기 제2어플리케이션을 실행하며,상기 제2어플리케이션의 실행 화면을 상기 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 인스트럭션들을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5항에 있어서,상기 메모리는, 실행 시에, 상기 프로세서가상기 터치 스크린을 이용하여, 상기 제2어플리케이션의 실행 화면 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하고,상기 제2어플리케이션의 실행 화면 상에 상기 제2입력이 감지되면 상기 실행 화면을 상기 전자 장치의 홈 화면또는 어플리케이션 트레이에 위젯(widget)의 형태로로 고정되도록 제어하는 인스트럭션들(instructions)을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "전자 장치에 있어서,상기 전자 장치와 분리된 별도의 하드웨어와 작동적으로 연결된 프로세서;및메모리를 포함하고,상기 메모리는, 실행 시에, 상기 프로세서가제1어플리케이션의 아이콘 상에서 상기 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고,상기 제1어플리케이션의 아이콘 상에 상기 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 상기 드래그입력이 감지된 위치에 대응하여 상기 제1어플리케이션의 실행 화면의 크기를 결정하고, 상기 제1어플리케이션을실행하며,상기 제1어플리케이션의 실행 화면 상에서 상기 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하고,상기 제1어플리케이션의 실행 화면 상에 상기 제2입력이 감지되면 상기 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 인스트럭션들(instructions)을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서,공개특허 10-2023-0023165-4-상기 별도의 외부 장치는 마우스(mouse)를 포함하며,상기 제1입력 및 상기 제2입력에 사용되는 특정 버튼은 상기 마우스의 왼쪽 클릭 버튼 및 휠 버튼을 포함하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7항에 있어서,상기 별도의 외부 장치는 스타일러스 펜(stylus pen) 또는 터치 펜(touch pen)중 적어도 어느 하나를 포함하며,상기 제1입력 및 상기 제2입력에 사용되는 특정 버튼은 상기 스타일러스 펜 또는 터치 펜의 측면 버튼을 포함하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7항에 있어서,상기 프로세서는사용자 입력에 대응하여 상기 제1어플리케이션의 실행 화면의 크기를 결정하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 7항에 있어서,상기 메모리는상기 제1어플리케이션의 실행 화면의 크기 정보가 미리 설정되어 있는 테이블을 저장하고,상기 제1어플리케이션 상에 상기 제1입력 발생 시 사용자에게 미리 설정된 상기 제1어플리케이션의 실행 화면의크기 중에서 상기 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 상기 실행 화면의 크기를결정할 것인지 가이드 화면을 표시하는 인스트럭션들을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 7항에 있어서,상기 프로세서는상기 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격중 적어도 어느 하나를 결정하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 7항에 있어서,상기 메모리는, 실행 시에, 상기 프로세서가제2어플리케이션의 아이콘 상에서 상기 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고,상기 제2어플리케이션의 아이콘 상에 상기 제1입력의 발생 후 제2방향으로 드래그 입력이 발생하면 상기 드래그입력에 대응하여 상기 제2어플리케이션의 실행 화면의 크기를 결정하고, 상기 제2어플리케이션을 실행하며,공개특허 10-2023-0023165-5-상기 제2어플리케이션의 실행 화면을 상기 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 인스트럭션들을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13항에 있어서,상기 메모리는, 실행 시에, 상기 프로세서가상기 제2어플리케이션의 실행 화면 상에서 상기 제1입력의 발생 여부를 감지하고,상기 제2어플리케이션의 실행 화면 상에 상기 제1입력이 감지되면 상기 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 인스트럭션들(instructions)을 저장하는 전자 장치."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "전자 장치의 사용자 인터페이스 제공 방법에 있어서,제1어플리케이션의 아이콘 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의발생 여부를 감지하는 동작;상기 제1어플리케이션의 아이콘 상에 상기 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 상기 드래그입력이 감지된 위치에 대응하여 상기 제1어플리케이션의 실행 화면의 크기를 결정하고, 상기 제1어플리케이션을실행하는 동작;상기 제1어플리케이션의 실행 화면 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하는 동작;및상기 제1어플리케이션의 실행 화면 상에 상기 제2입력이 감지되면 상기 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15항에 있어서,상기 제1어플리케이션의 실행 화면의 크기를 결정하고, 상기 제1어플리케이션을 실행하는 동작은상기 제1어플리케이션의 아이콘 상에 상기 제1입력 발생 시 사용자에게 미리 설정된 상기 제1어플리케이션의 실행 화면의 크기 중에서 상기 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 상기 실행 화면의 크기를 결정할 것인지 가이드 화면을 표시하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15항에 있어서,상기 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격중 적어도 어느 하나를 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 15항에 있어서,제2어플리케이션의 아이콘 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 상기 제1입력의 발생 여부를 감지하는 동작;공개특허 10-2023-0023165-6-상기 제2어플리케이션의 아이콘 상에 상기 제1입력 발생 후 제2방향으로 드래그 입력이 발생하면 상기 드래그입력에 대응하여 상기 제2어플리케이션의 실행 화면의 크기를 결정하고, 상기 제2어플리케이션을 실행하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서,상기 제2어플리케이션의 실행 화면을 상기 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 동작을더 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 18항에 있어서,상기 제2어플리케이션의 실행 화면 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하는 동작;및상기 제2어플리케이션의 실행 화면 상에 상기 제2입력이 감지되면 상기 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치는 터치 입력을 수신하는 터치 스크린, 터치 스크린과 작동적으로 연결된 프로 세서 및 메모리를 포함하고, 메모리는, 실행 시에, 프로세서가 터치 스크린을 이용하여, 제1어플리케이션의 아이 콘 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제1어플리케이션 (뒷면에 계속)"}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서는 전자 장치에 관한 것이며, 예를 들어 사용자 인터페이스를 제공하는 전자 장치 및 제공 방법에 대한 것이다."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "정보통신 기술 및 반도체 기술의 발전으로 전자 장치는 다양한 멀티미디어 서비스를 제공하는 멀티미디어 장치 로 발전하고 있다. 예를 들어, 전자 장치는 음성 통화 서비스, 메시지 서비스, 방송 서비스, 무선 인터넷 서비 스, 카메라 서비스 및 음악 재생 서비스 등과 같은 다양한 멀티미디어 서비스를 제공할 수 있다. 전자 장치는 멀티미디어 서비스의 사용이 증가하면서 전자 장치에서 처리해야 하는 정보량 및 표시해야 하는 정 보량이 증가하고 있다. 이에 따라, 전자 장치는 공간 활용도를 개선하여 표시부의 크기를 증가시키기 위해 터치 스크린을 구비할 수 있다."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "전자 장치 상에서 부수적인 기능 수행을 위해 팝업, 위젯 등 별도의 인터페이스를 사용할 수 있다. 다만 팝업, 위젯을 포함하는 별도의 인터페이스는 어플리케이션 트레이나 홈 화면에 설치된 어플리케이션 아이콘과는 별도 위치에서 생성 및 관리되기 때문에 사용성이 복잡하고, 비효율적일 수 있다. 본 문서에 따른 전자 장치 및 그의 인터페이스 제공 방법은 하나의 모듈에서 하나의 제스처로 인터페이스들을 컨트롤하여 사용성 및 시스템 내 자원 활용 문제를 극복할 수 있다."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치는 터치 입력을 수신하는 터치 스크린, 터치 스크린과 작동적으로 연결된 프 로세서 및 메모리를 포함하고, 메모리는, 실행 시에, 프로세서가 터치 스크린을 이용하여, 제1어플리케이션의 아이콘 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제1어플리케 이션의 아이콘 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응 하여 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 결정된 크기에 따라 실행하며, 터치 스크린을 이용하여, 제1어플리케이션의 실행 화면 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제2 입력의 발생 여부를 감지하고, 제1어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하 지 않고 고정되도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다. 다양한 실시예들에 따른 전자 장치는 전자 장치와 분리된 별도의 하드웨어와 작동적으로 연결된 프로세서 및 메 모리를 포함하고, 메모리는, 실행 시에, 프로세서가 제1어플리케이션의 아이콘 상에서 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제1어플리케이션 의 아이콘 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응하여 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 실행하며, 제1어플리케이션의 실행 화면 상에서 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여 부를 감지하고, 제1어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하지 않고 고정되 도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다. 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스 제공 방법은 제1어플리케이션의 아이콘 상에서 터치 입 력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하는 동작, 제1어플리케 이션의 아이콘 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응 하여 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 실행하는 동작, 제1어플리케이션의 실행 화면 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감 지하는 동작 및 제1어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하지 않고 고정되 도록 제어하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 하나의 모듈에서 하나의 제스처로 인터페이스들을 컨트롤하여 사용자 경 험을 향상시킬 수 있다. 다양한 실시예에 따르면, 전자 장치는 하나의 모듈에서 하나의 제스처로 인터페이스들을 컨트롤하여 시스템 내 자원을 효율적으로 사용할 수 있으며, 별도의 태스크(task)를 수행하지 않아 더 빠르게 인터페이스를 작동시킬 수 있다."}
{"patent_id": "10-2021-0105013", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도 2는 다양한 실시예들에 따른 전자 장치의 구성을 블록도로 나타낸 것이다. 다양한 실시예들에 따르면, 전자 장치는 터치 스크린, 프로세서 및 메모리를 포함할 수 있 다. 다양한 실시예에 따르면, 터치 스크린은 표시부(미도시)와 터치 패널(미도시)을 포함할 수 있다. 표시부 (미도시)는 전자 장치의 상태를 표시할 수 있다. 이 때 표시부(미도시)는 LCD로 구현될 수 있으며, LCD 제 어부, 표시 데이터를 저장할 수 있는 메모리 및 LCD 표시소자 등을 구비할 수 있다. 터치 패널(미도시)은 표시 부(미도시)에 장착되어, 표시부(미도시) 상에서 터치 동작을 감지할 수 있다. 터치 패널(미도시)은 터치 감지부 (미도시)와 신호 변환부(미도시)를 포함할 수 있다. 터치 감지부(미도시)는 물리량, 예컨대 저항, 정전용량 등 의 변화를 검출하여 터치 동작을 감지할 수 있다. 신호 변환부(미도시)는 물리량의 변화를 터치 신호로 변환할 수 있다. 이하 설명에서, \"터치(touch)\"라는 용어는 전자 장치에서 터치 스크린에 접촉하거나 접근하는 행위를 의미할 수 있다. 이 때 터치는 전자 장치 사용자의 손 또는 스타일러스(stylus) 펜에 의해 발생될 수 있다. 이러한 터치는 터치 스크린에서 터치 면적, 이동 여부, 이동 거리, 이동 방향 또는 유지 시간 중 적어도 어느 하나에 따라 다 양한 터치 동작들로 제공될 수 있다. \"드래그(drag)\"라는 용어는 전자 장치의 사용자가 터치 스크린 상에 터치, 즉 손가락을 접촉한 상태로 손가락을 이동하는 행위를 의미할 수 있다. \"홈 화면\"은 전자 장치의 전원을 켰을 때 터치 스크린 상에 표시되는 첫 화면을 의미할 수 있다. 홈 화면에는 전자 장치에 저장된 다 수의 어플리케이션을 실행하기 위한 실행키들이 행들과 열들로 정렬되어 표시될 수 있다. 실행키들은 아이콘들, 버튼들, 또는 텍스트 등으로 형성될 수 있다. \"어플리케이션 트레이\"(app tray)는 이러한 실행키들이 정렬된 화 면을 의미할 수 있다. 각 실행키가 터치되면, 터치된 실행키에 대응하는 어플리케이션이 실행되어 디스플레이 상에 표시될 수 있다. 어플리케이션들은 각각 전자 장치의 제조사 또는 어플리케이션 개발자에 의해 서로 독립적으로 구현된 프로그램을 의미할 수 있다. 전자 장치는 하나의 어플리케이션을 실행하기 위하여 다른 어플리케이션이 미리 실행되고 있을 것을 요구하지 않을 수 있다. 또한 전자 장치는 하나의 어플리케이션 이 종료되더라도 다른 어플리케이션을 계속 실행할 수 있다. 이하 설명에서 인터페이스, 사용자 인터페이스란 사용자가 전자 장치에 접근하여 명령을 내리고 특정 기능 을 수행할 수 있도록 생성된 물리적, 가상적 매개체를 의미할 수 있다. 특히, 전자 장치가 휴대 단말기(예: 스마트폰, 태블릿 PC 등)를 포함하는 경우, 사용자 인터페이스는 환경 설정, 이미지 디스플레이, 음 원 재생, 화면 스크롤, 게임, 방송 시청 및 무선 인터넷 사용 등을 포함하여 어플리케이션을 실행하기 위한 매 개체를 의미할 수 있다. 일 실시예에서, 터치 스크린은 사용자 입력 ,예를 들어, 터치에 의해 지정된 물리량(예: 전압, 광량, 저항, 전하량, 캐패시턴스 등)의 변화를 감지할 수 있다. 일 실시예에서, 터치 스크린은 디스플레이 패널 (예: 도 1의 디스플레이 패널)과 중첩적으로 배치될 수 있다. 터치 스크린은 센싱 어레이를 포함할 수 있으며, 센싱 어레이는 행(row) 방향 또는 열(column) 방향을 따라 배열된 도선(conductive line)들을 포함 할 수 있다. 터치 스크린은 상기 도선들의 교차 지점에 형성되는 복수의 센서 노드들로 구성될 수 있다. 일 실시예에서, 프로세서는 터치 스크린과 전기적으로 연결되고, 터치 스크린에서의 물리량의 변화를 감지하고, 물리량(예: 전압, 광량, 저항, 전하량, 캐패시턴스 등)의 변화에 기반하여 사용자 입력 예컨 대, 터치에 대한 데이터(예: 터치가 이루어진 위치의 좌표 데이터(X, Y) 등)를 산출할 수 있다. 프로세서 는 터치에 대한 데이터를 사용자 입력에 관한 이벤트로서 획득할 수 있다. 다양한 실시예에 따르면, 프로세서는 전자 장치 내에서 데이터를 처리하고, 전자 장치의 기능과 관련된 적어도 하나의 다른 구성요소를 제어할 수 있고, 기능 수행에 필요한 데이터 처리 및 연산을 수행할 수 있다. 또한, 프로세서는 터치 스크린과 같은 전자 장치의 다른 구성요소 외에도 외부 장치(24 0)와 전기적 및/또는 기능적으로 연결될 수 있다. 다양한 실시예에 따르면, 프로세서가 전자 장치 내 에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한정됨이 없을 것이나, 본 문서에 개시된 다양한 실시예에 서는 터치 스크린 상의 터치 입력 또는 외부 장치로부터 전달되는 버튼 입력을 감지하고 어플리케이 션 화면의 크기를 조절하고, 어플리케이션을 실행하고, 실행 화면을 위젯으로 고정하는 기능에 대해 설명할 것 이다. 일 실시예에 따르면, 메모리는 한정되지 않은 디지털 데이터들을 일시적 또는 영구적으로 저장하기 위한 것으로써, 도 1의 메모리의 구성 및/또는 기능 중 적어도 하나를 포함할 수 있다. 메모리는 OTPROM(onetime programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive(SSD))와 같은 비휘발성 메모리 및 DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM)과 같은 휘발성 메모리 를 포함할 수 있다. 메모리는 프로세서에서 수행될 수 있는 다양한 인스트럭션(instruction)들을 저 장할 수 있다. 이와 같은 인스트럭션들은 프로세서에 의해 인식될 수 있는 산술 및 논리 연산, 데이터 이 동, 또는 입출력을 포함하는 다양한 제어 명령을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 터치 스크린에서 사용자의 드래그 입력이 발생하면, 이를 감지할 수 있다. 이 때 프로세서는 드래그 경로에서 터치 좌표의 변화로부터 드래그 변동값을 산출할 수 있다. 즉 프 로세서는 드래그 경로의 길이, 드래그 방향, 드래드 속도 등을 산출할 수 있다. 또한, 프로세서는 드 래그 변동값에 대응하여 기능 실행 화면에서 수행 가능한 제어 명령을 검출하고 해당 명령을 실행하도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 입력이 감지됨에 따라 변화되는 지정된 물리량 예컨대, 캐패시턴 스 값(Cm)을 획득하고, 획득된 캐패시턴스 값(Cm)에 대응하는 디지털 값을 생성할 수 있다. 프로세서는 생 성된 디지털 값에 교정(calibration), 필터링(filtering) 등을 수행하여 복수의 센서 노드들 각각에 대한 데이 터를 생성할 수 있다. 프로세서는 생성된 데이터에 기초하여 사용자 입력이 발생한 터치 스크린 상에 서의 위치(예: 좌표)를 산출하고, 이에 기초하여 사용자 입력이 입력된 특정 영역을 설정할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 인터페이스 화면 또는 어플리케이션 실행 화면을 포함하는 윈도우 의 크기를 변경하도록 제어할 수 있다. 예를 들어, 프로세서는 사용자의 터치 또는 드래그로 생성된 터치 지점들 중 어느 하나의 터치 지점에 대한 변경 정보를 고려하여 윈도우(예: 어플리케이션 실행 화면)의 크기를 변경하도록 제어할 수 있다. 또한, 프로세서는 윈도우에 포함되는 크기 변경 영역에 대한 터치 정보 또는 드래그 정보를 고려하여 윈도우의 크기를 변경하도록 제어할 수 있다. 즉, 프로세서는 연속적인 드래그 정 보 또는 터치 지점에 대한 변경 정보를 고려하여 터치 스크린 상에 표시되는 윈도우의 크기를 변경하도록 제어할 수 있다. 도 3a 및 도 3b는 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스를 도시한 것이다. 도 3a에 따르면, 전자 장치(예: 도 2의 전자 장치)의 터치 스크린(예: 도 2의 터치 스크린) 상에는 홈 화면 또는 어플리케이션 트레이 화면이 표시될 수 있다. \"홈 화면\"은 전자 장치의 전원을 켰을 때 터치 스크린 상에 표시되는 첫 화면을 의미할 수 있다. 홈 화면에는 전자 장치에 저장된 다수의 어플리케 이션을 실행하기 위한 실행키들이 행들과 열들로 정렬되어 표시될 수 있다. 실행키들은 아이콘들, 버튼들, 또는 텍스트 등으로 형성될 수 있다. \"어플리케이션 트레이\"(app tray)는 이러한 실행키들이 정렬된 화면을 의미할 수 있다. 각 실행키가 터치되면, 터치된 실행키에 대응하는 어플리케이션이 실행되어 디스플레이 상에 표시될 수 있다. 그림 310에서, 프로세서(예: 도 2의 프로세서)는 터치 스크린 상의 사용자의 터치 입력을 감지할 수 있다. 사용자의 터치 입력은 아이콘(icon) 또는 위젯(widget) 상에 입력될 수 있으며, 프로세서는 제1입력(예:짧 은 터치 입력)과 제1입력과는 구분되는 제2입력(예:일정 시간 이상의 롱 터치 입력(long touch press))을 구분 할 수 있다. 제1입력 및 제2입력은 이에 한정되는 것은 아니며, 터치, 롱 프레스(long press), 더블 탭(double tab), 압력 터치(press touch) 등을 더 포함할 수 있다. 프로세서는 제1입력이 감지되는 경우 어플리케이 션을 전체 화면(또는 제1크기 이상의 화면)으로 실행할 수 있다. 프로세서는 제1입력이 아닌 제2입력이 감 지되는 경우 어플리케이션을 전체 화면이 아닌 팝업 형태의 화면을 실행할 수 있다. 위젯(widget)이란 컴퓨터나 휴대폰 등에서 웹 브라우저를 통하지 않고 날씨, 달력, 계산기 등의 기능과 뉴스, 게임 등을 바로 이용할 수 있 도록 만든 미니 응용 프로그램을 의미할 수 있다. 프로세서는 어플리케이션 상의 롱 터치 입력을 감지하고 그림 312에서처럼 어플리케이션의 실행 화면 을 팝업 형태로 표시할 수 있다. 그림 312에서 프로세서는 실행 화면 상의 사용자 입력(예: 드 래그 입력)을 감지할 수 있다. \"드래그(drag) 입력\"은 전자 장치의 사용자가 터치 스크린 상에 터치, 즉 손가락을 접촉한 상태로 양 방향 또는 한 방향으로 손가락을 이동하는 행위를 의미할 수 있다. 프로세서 는 드래그 경로의 길이 및 드래그 방향을 산출할 수 있다. 또한, 프로세서는 드래그 변동 값에 대응하여 어플리케이션 실행 화면에서 수행 가능한 제어 명령을 검출하고 해당 명령을 실행하도록 제어할 수 있다. 예를 들어, 그림 312의 드래그 입력과 같이 반대 방향으로 드래그 입력이 가해지는 경우, 프로세서 는 이것을 실행 화면의 확장을 위한 명령으로 판단할 수 있다. 프로세서는 드래그 입력이 끝나 는 지점을 파악하고, 드래그 입력이 끝나는 지점까지 실행 화면을 확장시켜 터치 스크린 상에 표시할 수 있다. 그림 314의 확장된 실행 화면에는 그림 312의 확장되기 전 실행 화면보다 상대적으로 더 많 은 양의 정보가 표시되거나, 기존 정보가 확장되어 표시될 수 있다. 또한 전자 장치가 롤러블(rollable) 단말의 형태를 갖는 경우, 드래그 입력이 임계 영역(예를 들어 디스플레이의 가장자리 또는 엣지(edge)와 인접 한 영역)에 수신된 경우 프로세서는 디스플레이(미도시)를 자동으로 확장하고 확장된 영역에 실행화면을 확장하여 표시할 수 있다. 또한 프로세서는 앞서 언급한 임계 영역에 드래그 입력이 일정시간 유지되는 경 우 디스플레이를 확장시킬 수 있다. 또한 드래그 입력이 그림 312처럼 반대 방향으로 가해지는 것이 아니라 서로 같은 방향 또는 좁아지는 방향으로 가해지는 경우, 프로세서는 이것을 실행 화면의 축소를 위한 명령으로 판단할 수 있다. 일 실시예에 따르면, 프로세서는 외부 장치(예: 도 2의 외부 장치)와 작동적으로 연결될 수 있다. 도 3b에 따르면, 프로세서는 외부 장치를 이용한 사용자 입력을 인식하고, 사용자 인터페이스를 제공할 수 있다. 이하에서는 외부 장치가 휠 포인터를 갖는 마우스(mouse)로 가정하여 설명하지만 외부 장치(24 0)의 종류가 이에 한정되는 것은 아닐 수 있다. 예를 들어 외부 장치는 스타일러스 펜과 같이 전자 장치 와 물리적으로는 분리되어 있지만, 전기적으로 및/또는 작동적으로 연결된 장치를 포함할 수 있다. 그림 320에서, 프로세서는 어플리케이션 아이콘 상의 사용자의 제1입력을 감지할 수 있다. 사용자의 제1입력은 사전에 설정될 수 있으며, 예를 들어, 마우스 왼쪽 버튼과 휠 버튼을 동시에 또는 임계시간 이 내에 함께 어플리케이션 아이콘을 포함한 임계 영역 상에서 누르는 동작을 포함할 수 있다. 그림 322에서 프로세서는 제1입력을 감지하고 제1입력이 가해진 어플리케이션의 실행화면을 스크린 상에 표시할 수 있다. 이후 그림 324에서 프로세서는 제1입력을 유지한 채 움직이는 마우스의 위치에 대응하여 표시되는 어플리케이션 실행 화면의 크기를 조절할 수 있다. 외부 장치는 스타일러스 펜 또는 전자 펜을 포함할 수 있다. 이 경우 사용자는 마우스를 이용한 제1입력 대신 스타일러스 펜 또는 전자 펜을 이용하여 제1입력을 입력할 수 있다. 예를 들어, 사용자는 전자 펜의 측면 버튼 또는 후면 버튼을 누른 상태에서 펜 끝으로 스크린 상의 어플리케이션 아이콘을 터치할 수 있다. 전 자 펜의 버튼은 측면이나 후면으로 한정된 것은 아니며 제조 과정에 따라 버튼의 위치는 달라질 수 있다. 프로 세서는 이러한 입력을 감지하고 도 3a 내지 도 3b와 마찬가지로 어플리케이션을 실행화면의 크기를 조절하고, 대응하는 어플리케이션을 실행할 수 있다. 도 4a 내지 도 4d는 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스 화면을 나타낸 것이다. 그림 410에서 프로세서(예: 도 2의 프로세서)는 어플리케이션 아이콘 상에 가해지는 제1터치를 인식 하고 어플리케이션 크기 조정 모드를 실행할 수 있다. 제1터치는 일정 시간 이상의 롱 터치(long touch) 입력을 포함할 수 있으며, 이에 대해서는 앞선 도 3a 에서 설명한 바 있다. 어플리케이션 아이콘 상의 임계 영 역에 가해지는 제1입력 및 제2입력은 이에 한정되는 것은 아니며, 터치, 롱 프레스(long press), 더블 탭 (double tab), 압력 터치(press touch) 등을 더 포함할 수 있다. 이후 어플리케이션 크기 조정 모드에서 제1터 치가 유지된 상태에서 드래그 입력을 통해 제2터치 지점이 변경되는 경우, 프로세서는 제2 터치 지점의 변경 정보를 고려하여 제1윈도우(예: 어플리케이션 실행화면)의 크기를 조절할 수 있다. 여기 서, 제 2 터치 지점의 변경 정보는, 제 2 터치 지점의 거리 변화 및 제 2 터치 지점의 변경 방 향을 포함할 수 있다. 프로세서는 제1입력(예: 터치 입력)이 감지되는 경우 어플리케이션을 전체 화면(또 는 제1크기 이상의 화면)으로 실행할 수 있다. 프로세서는 제1입력이 아닌 제2입력(예: 롱 프레스(long press), 더블 탭(double tab), 압력 터치(press touch))이 감지되는 경우 어플리케이션을 전체 화면이 아닌 팝 업 형태의 화면을 실행할 수 있다. 이는 앞선 도 3a에서 설명된 바 있다. 예를 들어, 그림 412 에 도시된 바와 같이 제2터치 지점이 변경되어 제 1 터치 지점과의 거리가 멀어 지는 경우, 전자 장치는 제2터치 지점 의 거리 변화를 고려하여 제1윈도우의 전체 크기를 일정 비율로 확대할 수 있다. 다른 예를 들어, 그림 414에 도시된 바와 같이 제2터치 지점이 제1방향(예:오른쪽)으로 변경되는 경우, 프로세서는 제 1 윈도우를 제1방향(예: 오른쪽)으로 확대할수도 있다. 이때, 프로세서는 제2터치 지점의 거리 변화를 고려하여 오른쪽 크기의 확대 비율을 결정 할 수 있다. 드래그 입력은 꼭 양방향일 필요는 없으며 프로세서는 한 방향 드래그 입력을 인식하고 해당 방향으로 표시된 윈도우의 사이즈 조절을 실행할 수 있다. 또 다른 예를 들어, 그림 416에 도시된 바와 같이 제 2 터치 지점이 아래쪽으로 변경되는 경우, 프로세서 는 제1윈도우의 아래쪽 크기를 확대할 수 있다. 이때, 프로세서는 제2터치 지점의 거리 변 화를 고려하여 아래쪽 크기의 확대 비율을 결정할 수 있다. 그림 418에 따르면 전자 장치는 제2터치 지점 이 일정 거리 이상 제1터치 지점과 멀어지는 경우 전체화면(full screen)으로 어플리케이션 실행 화 면을 표시할 수 있다. 또한 전체화면(full screen)으로 어플리케이션 실행 화면이 전환되기 전에는 팝업 윈도우로 표시될 수도 있다. 그림 414 내지 그림 418의 확장된 실행 화면에는 그림 412의 확장되기 전 실행 화면보다 상대적으로 더 많은 양의 정보가 표시되거나, 기존 정보가 확장되어 표시될 수 있다. 또 한 전자 장치가 롤러블(rollable) 단말의 형태를 갖는 경우, 드래그 입력이 임계 영역(예를 들어 디스플레 이의 가장자리 또는 엣지(edge)와 인접한 영역)에 수신된 경우 프로세서는 디스플레이(미도시)를 자동으로 확장하고 확장된 영역에 실행화면을 확장하여 표시할 수 있다. 또한 프로세서는 앞서 언급한 임계 영역에 드래그 입력이 일정시간 유지되는 경우 디스플레이를 확장시킬 수 있다. 도 4b의 그림 420 내지 그림 426도 도 4a의 그림 410 내지 418과 마찬가지로 이해될 수 있다. 예를 들어, 그림 422 에 도시된 바와 같이 제2터치 지점이 변경되어 제1터치 지점과의 거리가 멀어지 는 경우, 전자 장치는 제2터치 지점의 거리 변화를 고려하여 제1윈도우의 전체 크기를 일정 비 율로 확대할 수 있다. 또한 이러한 크기가 일정 비율 이상 확대되는 경우 프로세서는 그림 428에 도시된 바와 같이 어플리케이션을 전체 화면으로 표시할 수 있다. 다른 예를 들어, 그림 424에 도시된 바와 같이 제2터 치 지점이 아래쪽으로 변경되는 경우, 프로세서는 제1윈도우의 아래쪽 크기를 확대할 수 있다. 이때, 프로세서는 제2터치 지점의 거리 변화를 고려하여 아래쪽 크기의 확대 비율을 결정할 수 있다. 다른 예를 들어, 그림 426에 도시된 바와 같이 제2터치 지점이 오른쪽으로 변경되는 경우, 프로세서 는 제1윈도우의 오른쪽 크기를 확대할 수도 있다. 이때, 프로세서는 제2터치 지점의 거리 변화 를 고려하여 오른쪽 크기의 확대 비율을 결정할 수 있다. 일 실시예에 따르면, 어플리케이션 실행 화면의 크기는 어레이 단위(예:2x2, 2x4, 4x2, 4x4)로 미리 정해 진 채 메모리(예: 도 2의 메모리) 상에 저장되어 있을 수도 있고, 사용자에 의해 자유롭게 지정될 수도 있 다. 어플리케이션 실행 화면의 크기가 어레이 단위로 미리 정해진 경우 일정 영역 이상 윈도우를 줄이거나 늘리더라도 (예: 2.1x2.3) 미리 정해진 단위의 사이즈(예: 2x2)에 맞춰 어플리케이션 실행 화면의 크기가 표시될 수 있다. 도 4c 내지 도 4d는 어플리케이션 실행 화면(또는 제1윈도우)이 사용자에 의해 자유롭게 지정되는 것을 나 타낸 것이다. 그림 430에서 제2터치 지점이 오른쪽으로 이동하는 경우, 프로세서는 이를 인식하고 제 1윈도우의 오른쪽 크기를 431과 같이 확대할 수 있다. 이후 제2터치 지점이 왼쪽으로 이동하는 경우 프로세서는 이러한 움직임을 인식하고 그림 435에서처럼 제1윈도우를 왼쪽으로 축소시킬 수 있다. 이 때 제1윈도우의 크기는 어레이 단위(예: 4x4 사이즈)가 아닌 432와 같이 사용자에 의해 수동으로 결정될 수도 있다. 이는 터치 입력이 아닌 외부 장치를 사용하는 그림 440 및 445에서도 마찬가지로 적용될 수 있 다. 즉, 사용자는 외부 장치를 이용하여 제2터치 지점을 사용자 임의대로 이동시켜 어플리케이션 실 행화면(또는 제1윈도우)의 크기를 결정할 수 있다. 도 5a 내지 도 5b는 어플리케이션 실행 화면의 크기에 따라 화면 상에 표시되는 정보의 형태를 나타낸 것이다. 일 실시예에 따르면, 프로세서(예: 도 2의 프로세서)는 어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격 중 적어도 어느 하나를 결정할 수 있다. 도 5a에 따르면, 프로세서는 제1윈도우(예:어플리케이션 실행 화면)의 크기가 2x2인 경우 하나의 단 위 화면에 어플리케이션 실행 정보를 표시할 수 있다. 반면 그림 515에서처럼 제1윈도우의 크기가 4x2 로 확장되는 경우 적어도 둘 이상의 단위 화면에 어플리케이션 실행 정보를 표시할 수 있다. 또한, 그림 520 에서처럼 제1윈도우의 크기가 4x4로 확장되는 경우 어플리케이션 실행 정보를 표시하는 화면 역시 늘 어나는 것을 확인할 수 있다. 그림 520에서는 어플리케이션 실행 정보를 표시하는 화면이 5개로 표시되었으나, 이는 고정된 것은 아니며, 전자 장치(예: 도 2의 전자 장치)의 화면 크기 및 실행되는 어플리케이션 의 종류에 따라 달라질 수 있다. 프로세서는 제1윈도우의 크기에 대응하여 어플리케이션 실행 정보를 표시하는 화면의 수 외에도 화면 에 표시할 정보의 종류, 정보의 양 및 정보의 성격을 결정할 수 있다. 도 6a 내지 6d는 다양한 실시예들에 따른 어플리케이션 실행 화면의 표시 형태를 나타낸 것이다. 일 실시예에 따르면, 메모리(예: 도 2의 메모리)는, 실행 시에, 프로세서(예: 도2의 프로세서)가 터 치 스크린(예: 도 2의 터치 스크린)을 이용하여, 제2어플리케이션 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제2어플리케이션 상에 제1입력 발생 후 제2방향 으로 드래그 입력이 발생하면 드래그 입력에 대응하여 제2어플리케이션의 실행 화면의 크기를 결정하고, 제2어플리케이션을 실행하며, 제2어플리케이션의 실행 화면을 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 인스트럭션들을 저장할 수 있다. 또한, 멀티 윈도우는 복수의 어플리케이션 의 실행 화면들을 포함할 수도 있고, 하나의 어플리케이션의 복수의 실행 화면을 포함할 수도 있다. 그림 610에서 프로세서는 제1입력에 대응하여 제1입력이 가해진 어플리케이션의 크기 조절 모드 를 실행할 수 있다. 이후 제2입력에 따라 어플리케이션의 실행 화면 크기를 결정하고 그림 612 상의 팝업 윈도우와 같은 형태로 터치 스크린 상에 표시할 수 있다. 본 문서에 포함된 용어 '팝업 윈도 우'는 특정 어플리케이션의 실행 화면이 오버레이(overlay) 형태로 표시되는 것으로서, 팝업 화면, 팝업 뷰 (pop-up view), 또는 플로팅 윈도우(floating window)로 지칭될 수 있다. 또한, '팝업 윈도우'는 특정 화면(예: 메인 화면, 또는 홈 화면) 위에 다른 어플리케이션(예: 제 1 어플리케이션)의 실행 화면을 오버레이 형태로 표시한 화면을 의미할 수 있다. 예를 들면, 프로세서는 사용자가 오버레이로 표시되는 실행 화면을 터치 드래그하는 것에 기반하여 팝업 윈도우를 이동시킬 수 있다. 일 실시예에 따르면, 제1팝업 윈도우는 특정 어플리케이션(예: 제 1 어플리케이션)의 실행 화면을 포함할 수 있다. 또한 제2팝업 윈도우는 다른 어플리케이션(예: 제 2 어플리케이션)의 실행 화면을 포함할 수 있 다. 프로세서는 제 1 팝업 윈도우가 정렬된 상태(예: 도 10의 상태)에서 새로운 팝업 윈도우(예: 제 2 팝 업 윈도우)의 생성과 관련된 사용자 입력에 기반하여 제 2 팝업 윈도우를 메인 화면 및 제 1 팝업 윈 도우 위에 표시할 수 있다. 제 2 팝업 윈도우를 생성하기 위한 사용자 입력은 그림 610의 제1입력과 동일 또는 유사할 수 있다. 일 실시예에 따르면, 프로세서는 제1팝업 윈도우를 표시하는 상태(예: 그림 612)에서, 제 2 팝업 윈 도우의 적어도 일부분을 터치한 채로 드래그하는 사용자 입력에 기반하여 제2팝업 윈도우의 위치를 이동할 수 있다. 여기서 제2팝업 윈도우는 그림 614 또는 그림 624처럼 제1팝업 윈도우와 중첩되어 표시될 수도 있다. 프로세서는 사용자의 입력에 따라 어플리케이션을 전체 화면으로 표시할 수도 있다. 도 6c에서처럼 사용자 가 어플리케이션을 일정 시간 이상 길게 터치하는 것이 아닌 짧게 터치하는 경우 터치 스크린상에 어 플리케이션 화면을 전체 화면으로 표시할 수 있다. 또한, 도 6d에서처럼 사용자가 전체 화면 버튼을 입력하는 경우 프로세서는 이러한 입력을 인식하고 어플리케이션의 실행 화면을 전체화면으로 표시할 수 있다. 도 7은 다양한 실시예들에 따른 전자 장치의 어플리케이션 실행 화면을 홈 화면에 고정하여 표시하는 과정을 도 시한 것이다. 일 실시예에 따르면, 프로세서(예: 도 2의 프로세서)는 제1어플리케이션의 실행 화면 상에 제1입력 이 감지되면 실행 화면을 전자 장치의 홈 화면 또는 어플리케이션 트레이에 위젯(widget)형태로 고정 시켜 표시할 수 있다. 위젯(widget)이란 컴퓨터나 휴대폰 등에서 웹 브라우저를 통하지 않고 날씨, 달력, 계산 기 등의 기능과 뉴스, 게임 등을 바로 이용할 수 있도록 만든 미니 응용 프로그램을 의미할 수 있다. 위젯 그 자체는 애플리케이션이 아니지만, 애플리케이션은 위젯의 실행 화면을 나타내는 데이터를 포함할 수 있다. 위젯 의 데이터는, 예를 들어, 위젯의 실행 화면의 일부 또는 전부를 나타내는 GUI(Graphic User Interface)의 이미지 데이터, GUI의 레이아웃 데이터, 텍스트 데이터 및 동영상 데이터를 포함할 수 있다. 그림 710에 따르면, 프로세서는 어플리케이션 상에 입력된 제1입력을 인식하고 어플리케이션 실행 화 면을 터치 스크린(예: 도 2의 터치 스크린) 상에 팝업 윈도우로 표시할 수 있다. 제1입력은 앞 선 도 3a에서 설명한 것처럼 일정 시간 이상 프레스(press)입력이 가해지는 입력을 의미할 수 있다. 그림 712에 따르면, 어플리케이션 실행 화면 상에 제1입력이 가해지는 경우, 프로세서는 어플리 케이션 실행 화면을 위젯으로 고정시킬 수 있다. 그림 714에 따르면, 프로세서는 사용자 입력에 대응하여, 어플리케이션 실행 화면을 위치하던 자리에 위젯으로 고정시키고, 해당 위치에 존재하던 다른 어플리케이션 아이콘들을 위젯 하단으로 이동 시켜 표시할 수 있다. 이러한 방식으로 사용자는 제1어플리케이션을 사용하면서, 제1어플리케이션과는 다른 제2 어플리케이션을 실행시킬 수 있다. 도 8은 다양한 실시예들에 따른 전자 장치의 인터페이스 표시 방법을 흐름도로 나타낸 것이다. 도시된 방법은 앞서 도 1 내지 도 7을 통해 설명한 전자 장치(예: 도 2의 전자 장치)에 의해 실행될 수 있으며, 앞서 설명한 바 있는 기술적 특징은 이하에서 생략하기로 한다. 동작 810에서, 전자 장치는 특정 어플리케이션(예:제1어플리케이션) 상에 입력된 사용자의 터치 입력 또는 버튼 입력을 감지할 수 있다. 이는 앞선 도 3a 내지 도 3b에서 설명된 바 있다. 터치 입력은 앞선 도 3a에 설명 된 것처럼 사용자의 손가락을 이용하여 터치 스크린(예: 도 2의 터치 스크린) 상에 입력될 수 있다. 버튼 입력은 앞선 도 3b에 설명된 것처럼 외부 장치(예: 도 2의 외부 장치)에 의해 스크린 상에 입력될 수 있다. 동작 820에서 프로세서(예: 도 2의 프로세서)는 전자 장치에 가해진 입력이 일정 시간 이상인지 확인 할 수 있다. 즉, 프로세서는 발생한 터치가 미리 설정된 시간 동안 유지되는지 판단할 수 있다. 동작 820 에서 프로세서는 일반적인 터치와 본 문서의 크기 조절 모드로 진입하기 위한 터치를 구별할 수 있다. 프 로세서는 터치가 설정된 시간 이상 유지되지 않으면 이를 일반적인 터치로 판단할 수 있다. 이에 따라, 프 로세서는 동작 825에서 제1어플리케이션의 기능을 수행하도록 제어할 수 있다. 제1어플리케이션의 기능이 란 모든 사용자 인터페이스를 의미할 수 있으며, 예를 들어 폰 북, 이미지 보기, 음원 재생, 휴대 단말기의 환 경 설정 등을 포함할 수 있다. 프로세서는 확인 결과, 입력이 제1시간 미만의 짧은 입력인 경우 제1어플리 케이션에 대한 실행 입력으로 판단하고, 제1어플리케이션을 실행할 수 있다. 반면, 프로세서는 입력이 제1시간 이상으로 유지되는 롱 프레스(long press)입력인 경우 동작 830에서 제1 어플리케이션의 아이콘 근처에서 드래그 입력이 감지되는지 확인할 수 있다. 일 실시예에 따르면, 프로세서 는 제1어플리케이션 실행 화면 상에 가해지는 드래그(drag) 입력을 감지할 수 있다. 드래그(drag) 입력은 앞선 도 3에서 설명한 것처럼 전자 장치의 사용자가 터치 스크린 상에 터치, 즉 손가락을 접촉한 상태로 손가락을 이동하는 행위를 의미할 수 있다. 이 때 제1손가락은 제1어플리케이션의 아이콘 근처에서 롱 프레스 (long press)입력을 유지하고, 제1손가락이 아닌 다른 제2손가락이 제1어플리케이션의 아이콘 밖의 영역을 터치 후 드래그 동작이 수행될 수 있다. 여기서 터치 및 드래그 입력의 주체는 손가락으로 한정되는 것은 아니며, 스 타일러스 펜 등 전기 신호의 변화를 이용하여 입력을 가할 수 있는 모든 대상을 포함할 수 있다. 프로세서는 제1어플리케이션의 아이콘 근처에서 드래그 입력이 감지되는 경우, 동작 840에서 어플리케이션 크기 조정 모드로 진입할 수 있다. 일 실시예에 따르면, 프로세서는 제1어플리케이션에 대한 크기 조정 모 드로 사용자 인터페이스를 실행할 수 있다. 크기 조정 모드는 제1어플리케이션 화면을 플로팅 모드로 실행시켜 이후 사용자의 입력에 따라 제1어플리케이션 실행 화면의 크기를 조정할 수 있는 모드를 의미할 수 있다. 동작 830에서, 프로세서는 확인 결과, 드래그 입력이 감지되지 않는 경우 동작 835에서 사용자가 터치를 해제하였는지 감지할 수 있다. 사용자가 터치를 해제한 경우 프로세서는 동작 845에서 크기 조정 모드를 유지한 채 대기하다가 일정 시간 후 크기 조정 모드를 해제할 수 있다. 사용자가 터치를 해제하지 않은 경우 프 로세서는 동작 855에서 아이콘 수정 모드로 진입할 수 있다. 아이콘 수정 모드는, 예를 들어, 복수의 어플 리케이션의 아이콘들의 배열을 변경하기 위한 플로팅 모드를 의미할 수 있다. 이후 프로세서는 다시 드래 그 입력이 감지되는 경우 아이콘 수정 모드를 해제할 수 있다. 동작 830에서 프로세서는 확인 결과, 드래그 입력이 감지되는 경우 동작 840에서 어플리케이션 크기 조정 모드로 진입할 수 있다. 이후 프로세서는 동작 850에서 사용자의 드래그 입력 위치에 대응하여 제1어플리 케이션의 실행 화면 크기를 결정하고 제1어플리케이션을 실행할 수 있다. 이 과정에 대해서는 앞선 도 3a 내지 도 4b에서 설명된 바 있다. 동작 860에서, 프로세서는 제1어플리케이션 화면 상에 제1입력이 가해지는 것을 감지할 수 있다. 제1입력 이 감지되는 경우 프로세서는 동작 870에서 홈 화면 또는 어플리케이션 트레이에 제1어플리케이션 화면을 위젯(widget)으로 고정시킬 수 있다. 위젯은 앞선 도 7에서 설명된 것처럼 컴퓨터나 휴대폰 등에서 웹 브라우저 를 통하지 않고 날씨, 달력, 계산기 등의 기능과 뉴스, 게임 등을 바로 이용할 수 있도록 만든 미니 응용 프로 그램을 의미할 수 있다. 프로세서는 제1어플리케이션 화면을 위젯으로 고정시키면서 해당 위치에 배치되었 던 어플리케이션 아이콘들을 자동으로 다른 위치로 배치시키거나 사용자의 입력에 의해 아이콘들을 다른 위치로 배치시킬 수 있다. 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스 제공 방법은 제1어플리케이션 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하는 동작, 제1어플리케이션 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응하여 제1어플리 케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 실행하는 동작, 제1어플리케이션의 실행 화면 상에 서 제1입력의 발생 여부를 감지하는 동작 및 제1어플리케이션의 실행 화면 상에 제1입력이 감지되면 실행 화면 을 전자 장치의 홈 화면 또는 어플리케이션 트레이에 위젯(widget)으로 고정되도록 제어하는 동작을 포함 할 수 있다. 일 실시예에 따르면, 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 실행하는 동작은 제1 어플리케이션의 아이콘 상에 제1입력 발생 시 사용자에게 미리 설정된 제1어플리케이션의 실행 화면의 크기 중 에서 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 실행 화면의 크기를 결정할 것인지 가 이드 화면을 표시하는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 사용자 인터페이스 제공 방법은 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격 중 적어도 어느 하나를 결정하는 동작을 더 포 함할 수 있다. 일 실시예에 따르면, 제2어플리케이션의 아이콘 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하는 동작, 제2어플리케이션의 아이콘 상에 제1입력 발생 후 제2방향으로 드래그 입력이 발생하면 드래그 입력에 대응하여 제2어플리케이션의 실행 화면의 크기를 결정하고, 제2어플리케 이션을 실행하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 제2어플리케이션의 실행 화면을 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시 하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 제2어플리케이션의 실행 화면 상에서 터치 입력 또는 버튼 입력이 미리 설정된 시간 이상 으로 유지되는 제2입력의 발생 여부를 감지하는 동작 및 제2어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하지 않고 고정되도록 제어하는 동작을 더 포함할 수 있다. 다양한 실시예들에 따른 전자 장치는 터치 입력을 수신하는 터치 스크린, 터치 스크린과 작동적으로 연결된 프 로세서 및 메모리를 포함하고, 메모리는, 실행 시에, 프로세서가 터치 스크린을 이용하여, 제1어플리케이션의 아이콘 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제1어플리케 이션의 아이콘 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응 하여 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 결정된 크기에 따라 실행하며, 터치 스크린을 이용하여, 제1어플리케이션의 실행 화면 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제2 입력의 발생 여부를 감지하고, 제1어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하 지 않고 고정되도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 입력에 대응하여 제1어플리케이션의 실행 화면의 크기를 결정할 수 있 다. 일 실시예에 따르면, 메모리는 제1어플리케이션의 실행 화면의 크기 정보가 미리 설정되어 있는 테이블을 저장 하고, 제1어플리케이션 상에 제1입력 발생 시 사용자에게 미리 설정된 제1어플리케이션의 실행 화면의 크기 중 에서 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 실행 화면의 크기를 결정할 것인지 가 이드 화면을 표시하는 인스트럭션들을 저장하며, 실행 화면의 형태는 아이콘 또는 위젯의 형태를 포함할 수 있다. 일 실시예에 따르면, 프로세서는 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격 중 적어도 어느 하나를 결정할 수 있다. 일 실시예에 따르면, 메모리는, 실행 시에, 프로세서가 터치 스크린을 이용하여, 제2어플리케이션의 아이콘 상 에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제2어플리케이션의 아 이콘 상에 제1입력 발생 후 제2방향으로 드래그 입력이 발생하면 드래그 입력에 대응하여 제2어플리케이션의 실 행 화면의 크기를 결정하고, 제2어플리케이션을 실행하며, 제2어플리케이션의 실행 화면을 제1어플리케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 인스트럭션들을 저장할 수 있다. 일 실시예에 따르면, 메모리는, 실행 시에, 프로세서가 터치 스크린을 이용하여, 제2어플리케이션의 실행 화면 상에서 터치 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여부를 감지하고, 제2어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면을 전자 장치의 홈 화면 또는 어플리케이션 트레이에 위젯 (widget)의 형태로로 고정되도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다. 다양한 실시예들에 따른 전자 장치는 전자 장치와 분리된 별도의 하드웨어와 작동적으로 연결된 프로세서 및 메 모리를 포함하고, 메모리는, 실행 시에, 프로세서가 제1어플리케이션의 아이콘 상에서 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제1어플리케이션 의 아이콘 상에 제1입력의 발생 후 제1방향으로 드래그 입력이 발생하면 드래그 입력이 감지된 위치에 대응하여 제1어플리케이션의 실행 화면의 크기를 결정하고, 제1어플리케이션을 실행하며, 제1어플리케이션의 실행 화면 상에서 별도의 하드웨어의 특정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제2입력의 발생 여 부를 감지하고, 제1어플리케이션의 실행 화면 상에 제2입력이 감지되면 실행 화면의 크기가 변하지 않고 고정되 도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다. 일 실시예에 따르면, 전자 장치는 별도의 외부 장치는 마우스(mouse)를 포함하며, 제1입력 및 제2입력에 사용되 는 특정 버튼은 마우스의 왼쪽 클릭 버튼 및 휠 버튼을 포함할 수 있다. 일 실시예에 따르면, 별도의 외부 장치는 스타일러스 펜(stylus pen) 또는 터치 펜(touch pen)중 적어도 어느 하나를 포함하며, 제1입력 및 제2입력에 사용되는 특정 버튼은 스타일러스 펜 또는 터치 펜의 측면 버튼을 포함 할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 입력에 대응하여 제1어플리케이션의 실행 화면의 크기를 결정할 수 있 다. 일 실시예에 따르면, 메모리는 제1어플리케이션의 실행 화면의 크기 정보가 미리 설정되어 있는 테이블을 저장 하고, 제1어플리케이션 상에 제1입력 발생 시 사용자에게 미리 설정된 제1어플리케이션의 실행 화면의 크기 중 에서 실행 화면의 크기를 선택할 것인지 또는 임의의 사용자 입력에 따라 실행 화면의 크기를 결정할 것인지 가 이드 화면을 표시하는 인스트럭션들을 저장할 수 있다. 일 실시예에 따르면, 프로세서는 제1어플리케이션의 실행 화면의 크기에 대응하여 화면에 표시할 정보의 종류, 정보의 양 및 정보의 성격 중 적어도 어느 하나를 결정할 수 있다. 일 실시예에 따르면, 메모리는, 실행 시에, 프로세서가 제2어플리케이션의 아이콘 상에서 별도의 하드웨어의 특 정 버튼을 이용한 입력이 미리 설정된 시간 이상으로 유지되는 제1입력의 발생 여부를 감지하고, 제2어플리케이 션의 아이콘 상에 제1입력의 발생 후 제2방향으로 드래그 입력이 발생하면 드래그 입력에 대응하여 제2어플리케 이션의 실행 화면의 크기를 결정하고, 제2어플리케이션을 실행하며, 제2어플리케이션의 실행 화면을 제1어플리 케이션의 실행 화면과 함께 멀티 윈도우로 표시하는 인스트럭션들을 저장할 수 있다. 일 실시예에 따르면, 메모리는, 실행 시에, 프로세서가 제2어플리케이션의 실행 화면 상에서 제1입력의 발생 여 부를 감지하고, 제2어플리케이션의 실행 화면 상에 제1입력이 감지되면 실행 화면의 크기가 변하지 않고 고정되 도록 제어하는 인스트럭션들(instructions)을 저장할 수 있다.도면 도면1 도면2 도면3a 도면3b 도면4a 도면4b 도면4c 도면4d 도면5a 도면5b 도면6a 도면6b 도면6c 도면6d 도면7 도면8"}
{"patent_id": "10-2021-0105013", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예들에 따른 전자 장치의 구성을 블록도로 나타낸 것이다. 도 3a 및 도 3b는 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스를 도시한 것이다. 도 4a 내지 도 4d는 다양한 실시예들에 따른 전자 장치의 사용자 인터페이스 화면을 나타낸 것이다. 도 5a 내지 도 5b는 어플리케이션 실행 화면의 크기에 따라 화면 상에 표시되는 정보의 형태를 나타낸 것이다. 도 6c 내지 6d는 다양한 실시예들에 따른 어플리케이션 실행 화면의 표시 형태를 나타낸 것이다. 도 7은 다양한 실시예들에 따른 전자 장치의 어플리케이션 실행 화면을 홈 화면에 고정하는 과정을 도시한 것이다. 도 8은 다양한 실시예들에 따른 전자 장치의 인터페이스 표시 방법을 흐름도로 나타낸 것이다."}
