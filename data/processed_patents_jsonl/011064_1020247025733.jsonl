{"patent_id": "10-2024-7025733", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0129028", "출원번호": "10-2024-7025733", "발명의 명칭": "개방형 RAN 네트워크들을 위한 실시간 RIC 아키텍처", "출원인": "라쿠텐 모바일 가부시키가이샤", "발명자": "포렌자 안토니오"}}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "개방형 무선 액세스 네트워크(O-RAN; Open Radio Access Network) 아키텍처에서 실시간 서비스들 및 기능들을제공하기 위한 시스템으로서,명령어들을 실행하여 O-RAN 중앙집중형 유닛(O-CU)을 구현하도록 구성된 적어도 하나의 제1 프로세서를 포함하는 제1 물리적 노드;적어도 하나의 제2 프로세서를 포함하는 적어도 하나의 제2 물리적 노드, ―상기 적어도 하나의 제2 프로세서는명령어들을 실행하여:O-RAN 분산형 유닛(O-DU), 및실시간(RT) RAN 지능형 제어기(RIC)에서 종단되는 인터페이스를 통해 상기 O-DU에 접속되고 10ms 미만의 레이턴시를 갖는 RT RIC를 구현하도록 구성됨―;O-RAN 무선 유닛(O-RU);명령어들을 실행하여 1초보다 큰 시간 스케일에서 동작하는 비-실시간(비-RT) RIC를 구현하도록 구성된 적어도하나의 제3 프로세서를 포함하는 적어도 하나의 제3 물리적 노드; 및명령어들을 실행하여 10ms 내지 1초의 시간 스케일에서 동작하는 준-실시간(준-RT) RIC를 구현하도록 구성된 적어도 하나의 제4 프로세서를 포함하는 적어도 하나의 제4 물리적 노드를 포함하고,상기 RT RIC는 10 ms 미만의 레이턴시를 갖는 실시간 제어 루프를 통해 적어도 상기 O-DU를 제어하기 위한 애플리케이션들을 호스팅하도록 구성된 소프트웨어 플랫폼인, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 RT RIC는 상기 O-DU 내에 제공되는, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 RT RIC는 상기 O-DU의 외부에 있는, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 비-RT RIC가 내부에 위치해 있고 RAN 요소들을 관리 및 조율하도록 구성된 서비스 관리 및 조율(SMO;Service Management and Orchestration) 프레임워크; 및적어도 하나의 관리 서비스를 구현하기 위해 상기 RT RIC를 상기 SMO에 접속시키는 제1 인터페이스를 더 포함하는 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 RT RIC를 상기 비-RT RIC에 접속시키는 제2 인터페이스를 더 포함하고, 상기 제2 인터페이스를 통해 비-RT RIC는, 상기 RAN을 최적화하기 위한 정책 기반의 안내, 머신 학습(ML; machine learning)관리, 및 강화 정보 중 적어도 하나를 상기 RT RIC에 제공하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 RT RIC를 상기 준-RT RIC에 접속시키는 제3 인터페이스를 더 포함하고, 상기 제3 인터페공개특허 10-2024-0129028-3-이스를 통해 준-RT RIC는, 상기 RAN을 최적화하기 위해 정책 기반의 안내, 머신 학습(ML) 관리, 및 강화 정보중 적어도 하나를 상기 RT RIC에 제공하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 RT RIC는, 상기 인터페이스를 통해 상기 O-DU에 관한 보고, 삽입, 제어 및 정책 서비스들중 적어도 하나를 수행하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 RT RIC는, 상기 인터페이스를 통해 상기 O-DU에 관한 인터페이스 관리 및 서비스 업데이트 기능들 중 적어도 하나를 수행하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 RT RIC는, 적어도 하나의 인공 지능(AI)/머신 학습(ML) 모델을 상기 O-DU의 무선 자원 관리(RRM) 기능들에 통합하여 실시간으로 결정 및/또는 추론하는 적어도 하나의 애플리케이션을 호스팅하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 RT RIC는 실시간으로 셀-프리 대규모 MIMO(cell-free massive MIMO)를 위한 기능들을 구현하기 위한 적어도 하나의 애플리케이션을 호스팅하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 상기 RT RIC는 실시간으로 상기 O-DU의 MAC 스케줄러를 활용하기 위한 적어도 하나의 애플리케이션을 호스팅하도록 구성된, 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서, 상기 RT RIC는 실시간으로 제로 신뢰 보안 프레임워크(zero trust security framework)를 구현하기 위한 적어도 하나의 애플리케이션을 호스팅하도록 구성된 시스템."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "개방형 RAN(O-RAN) 시스템에서 실시간(RT) 무선 액세스 네트워크(RAN) 지능형 제어기(RT RIC)를 구현하기 위한장치로서,명령어들을 저장한 메모리; 및적어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는 상기 명령어들을 실행하여:인터페이스를 통해 O-RAN 분산형 유닛(O-DU)에 접속하고;상기 인터페이스를 통해, 10 ms 미만의 레이턴시를 갖는 실시간 제어 루프를 통해 적어도 상기 O-DU를 제어하기위한 하나 이상의 애플리케이션을 호스팅하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여, 적어도 하나의 관리 서비스를 구현하기 위해, 제1 인터페이스를 통해, RAN 요소들을 관리 및 조율하기 위한 서비스 관리 및 조율(SMO;Service Management and Orchestration) 프레임워크에 접속하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여,제2 인터페이스를 통해 비-RT RIC에 접속하고;상기 제2 인터페이스를 통해 상기 비-RT RIC로부터, 상기 O-RAN 시스템을 최적화하기 위한 정책 기반의 안내,공개특허 10-2024-0129028-4-머신 학습(ML) 관리, 및 강화 정보 중 적어도 하나를 획득하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여,제3 인터페이스를 통해 준-RT RIC에 접속하고;상기 제3 인터페이스를 통해 상기 준-RT RIC로부터, 상기 O-RAN 시스템을 최적화하기 위한 정책 기반의 안내,머신 학습(ML) 관리, 및 강화 정보 중 적어도 하나를 획득하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여, 상기 인터페이스를 통해 상기 O-DU에 관한 보고, 삽입, 제어, 및 정책 서비스들 중 적어도 하나를 수행하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여, 상기 인터페이스를 통해 상기 O-DU에 관한 인터페이스 관리 및 서비스 업데이트 기능들 중 적어도 하나를 수행하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여, 적어도 하나의 인공지능(AI)/머신 학습(ML) 모델을 상기 O-DU의 무선 자원 관리(RRM) 기능들에 통합하여 실시간으로 결정 및/또는 추론하는 적어도 하나의 애플리케이션을 호스팅하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는 또한, 상기 명령어들을 실행하여, 실시간으로 상기 O-DU의MAC 스케줄러를 활용하기 위한 적어도 하나의 애플리케이션을 호스팅하도록 구성된, 장치."}
{"patent_id": "10-2024-7025733", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "개방형 무선 액세스 네트워크(O-RAN; Open Radio Access Network) 아키텍처에서 실시간 서비스들 및 기능들을 제공하기 위한 시스템으로서, 명령어들을 실행하여 O-RAN 중앙집중형 유닛(O-CU)을 구현하도록 구성된 제1 물리 적 노드; 적어도 하나의 제2 프로세서를 포함하는 적어도 하나의 제2 물리적 노드, ―적어도 하나의 제2 프로세 (뒷면에 계속)"}
{"patent_id": "10-2024-7025733", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "무선 액세스 네트워크(RAN; radio access network)는, 최종 사용자 디바이스(또는 사용자 장비)를 네트워크의 다른 부분들에 접속시키기 때문에 통신 시스템에서 중요한 컴포넌트이다. RAN은 최종 사용자 디바이스들을 코 어 네트워크에 접속시키는 다양한 네트워크 요소(NE; network element)들의 조합을 포함한다. 일반적으로, 특 정한 RAN의 하드웨어 및/또는 소프트웨어는 벤더-특유이다. 여러 벤더들이 통신 시스템에 하드웨어 및/또는 소프트웨어를 제공할 수 있게 하는 O-RAN(Open RAN) 기술이 등 장했다. 이를 위해, O-RAN은, RAN 기능들을, 중앙집중형 유닛(CU), 분산형 유닛(DU), 및 무선 유닛(RU)으로 분 해한다. CU는, RAN의 무선 자원 제어(RRC; Radio Resource Control), 서비스 데이터 적응 프로토콜(SDAP; Service Data Adaptation Protocol), 및/또는 패킷 데이터 컨버전스 프로토콜(PDCP; Packet Data Convergence Protocol) 하위계층들을 호스팅하기 위한 논리적 노드이다. DU는, RAN의 무선 링크 제어(RLC; Radio Link Control), 매체 액세스 제어(MAC; Media Access Control), 및 물리(PHY; Physical) 하위계층들을 호스팅하는 논리적 노드이다. RU는, 안테나들로부터의 무선 신호들을, 프론트홀(FrontHaul)을 통해 DU에 전송될 수 있는 디지털 신호들로 변환하는 물리적 노드이다. 이들 엔티티들은 개방형 프로토콜들 및 그들 사이의 인터페이스들 을 갖고 있기 때문에, 상이한 벤더들에 의해 개발될 수 있다. 도 1은 관련 기술의 O-RAN 아키텍처를 나타낸다. 도 1을 참조하여, O-RAN 아키텍처에서의 RAN 기능들은 RAN 지 능형 제어기(RIC)에 의해 제어되고 최적화된다. RIC는 모듈식 애플리케이션들을 구현하는 소프트웨어-정의형 컴포넌트로서 O-RAN 시스템에서 요구되는 멀티벤더 운용성을 용이화할뿐만 아니라, RAN 동작들을 자동화 및 최 적화한다. RIC는 2개의 유형: 비-실시간 RIC(비-RT RIC)와 준-실시간 RIC(준-RT RIC)로 구분된다.비-RT RIC는 비-실시간 제어 루프의 제어 포인트이며 서비스 관리 및 조율(SMO; Service Management and Orchestration) 프레임워크 내에서 1초보다 큰 시간 스케일에서 동작한다. 그 기능들은 rApp들이라고 불리는 모듈식 애플리케이션들을 통해 구현되며, 비-RT RIC와 준-RT RIC 사이의 통신을 가능케하는 인터페이스인 A1 인 터페이스를 통해 정책-기반의 안내 및 강화를 제공하는 것; 데이터 분석을 수행하는 것; RAN 최적화를 위한 인 공 지능/머신 학습(AI/ML) 훈련 및 추론; 및/또는 SMO를 RAN 관리형 요소들(예컨대, 준-RT RIC, O-RAN 중앙집중 형 유닛(O-CU), O-RAN 분산형 유닛(O-DU) 등)에 접속하는 인터페이스인 O1 인터페이스를 통해 구성 관리 조치들 을 추천하는 것을 포함한다. 준-RT RIC는 10밀리초 내지 1초의 시간 스케일에서 동작하고, O-DU, O-CU(O-CU 제어 평면(O-CU-CP)과 O-CU 사 용자 평면(O-CU-UP)으로 분해됨), 및 개방형 진화된 NodeB(O-eNB)에 E2 인터페이스를 통해 접속된다. 준-RT RIC는 E2 인터페이스를 이용하여 준실시간 제어 루프에 걸쳐 기저 RAN 요소들(E2 노드들)을 제어한다. 준-RT RIC는, E2 노드들(O-CU, O-DU 및 O-eNB)에 관한 4개의 서비스: 보고(노드에게 기능-특유의 값 설정을 보고할 것 을 요청), 삽입(노드에게 사용자 평면 기능을 활성화할 것을 지시), 제어(노드에게 제어 평면 기능을 활성화할 것을 지시), 및 정책(활성화된 기능들 중 하나에 관한 정책 파라미터를 설정)를 구현한다. 또한, 준-RT RIC는 xApp들을 호스팅하여, 간섭 완화, 부하 밸런싱, 보안 등의 기능들을 구현한다. 2개의 유형의 RIC들이 함께 작 동하여 O-RAN을 최적화한다. 예를 들어, 비-RT RIC는 RAN 최적화를 위해 준-RT RIC에 의해 시행되고 이용되는 정책들, 데이터, 및 AI/ML 모델들을 제공한다. 비-RT RIC가 위치해 있는 SMO 프레임워크는 RAN 요소들을 관리하고 조율한다. 구체적으로, SMO는 O-Ran 클라우 드(O-Cloud)라고 지칭되는 것을 관리하고 조율한다. O-Cloud는, RIC들, O-CU들, 및 O-DU들, 지원 소프트웨어 컴포넌트들(예컨대, 운영 체제들 및 런타임 환경들), 및 SMO 자체를 호스팅하는 물리적 RAN 노드들의 집합이다. 즉, SMO는 O-Cloud를 내부로부터 관리한다. 전술된 바와 같이, 관련 기술의 O-RAN 기능들의 지능형 관리는 비-RT RIC의 경우 1초 이상의 응답 시간을 갖고, 준-RT RIC의 경우 10밀리초의 응답 시간을 갖는 이벤트들 및 자원들에 대해서만 수행될 수 있다. 즉, 관련 기 술에서는, E2 노드들과 준-RT RIC 사이의 최소 레이턴시가 10 ms 초과이다. 이러한 높은 레이턴시 루프는, 도 1에 도시된 O-DU 제어 루프 내에서와 같이, 실시간 동작들 및 제어들을 위한 AI/ML 및 다른 멀티벤더 지능형 관 리 및 제어들의 이용을 방해한다."}
{"patent_id": "10-2024-7025733", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "하나 이상의 실시예의 양태들은 O-RAN 지능형 관리를 실시간으로 수행하기 위한 새로운 실시간 RIC(RT RIC)를 제공한다. 하나 이상의 실시예의 양태들은 RT RIC를 통한 인공 지능/머신 학습(AI/ML)의 능력을 활용하여 DU(Distributed Unit)에서의 무선 자원 관리(RRM)와 AI 모델 및 추론의 긴밀한 통합을 가능케한다. 예시적인 실시예들에 따르면, 개방형 무선 액세스 네트워크(O-RAN; Open Radio Access Network) 아키텍처에서 실시간 서비스들 및 기능들을 제공하기 위한 시스템은, 명령어들을 실행하여 O-RAN 중앙집중형 유닛(O-CU)을 구 현하도록 구성된 적어도 하나의 제1 프로세서를 포함하는 제1 물리적 노드; 적어도 하나의 제2 프로세서를 포함 하는 적어도 하나의 제2 물리적 노드, ―상기 적어도 하나의 제2 프로세서는, 명령어들을 실행하여: O-RAN 분산 형 유닛(O-DU), 및 상기 RT RIC에서 종단되는 인터페이스를 통해 상기 O-DU에 접속되고 10ms 미만의 레이턴시를 갖는 실시간(RT) RAN 지능형 제어기(RIC)를 구현하도록 구성됨―; O-RAN 무선 유닛(O-RU); 명령어들을 실행하여 1초보다 큰 시간 스케일에서 동작하는 비-실시간(비-RT) RIC를 구현하도록 구성된 적어도 하나의 제3 프로세서 를 포함하는 적어도 하나의 제3 물리적 노드; 및 명령어들을 실행하여 10ms 내지 1초의 시간 스케일에서 동작하 는 준-실시간(준-RT) RIC를 구현하도록 구성된 적어도 하나의 제4 프로세서를 포함하는 적어도 하나의 제4 물리 적 노드를 포함하고, 상기 RT RIC는 10 ms 미만의 레이턴시를 갖는 실시간 제어 루프를 통해 적어도 상기 O- DU를 제어하기 위한 애플리케이션들을 호스팅하도록 구성된 소프트웨어 플랫폼이다. RT RIC는 O-DU 내에 제공될 수 있다. RT RIC는 O-DU의 외부에 있을 수 있다. 이 시스템은 또한, 비-RT RIC가 내부에 위치해 있고 RAN 요소들을 관리 및 조율하도록 구성된 서비스 관리 및 조율(SMO; Service Management and Orchestration) 프레임워크; 및 적어도 하나의 관리 서비스를 구현하기 위 해 RT RIC를 SMO에 접속시키는 제1 인터페이스를 더 포함할 수 있다. 이 시스템은 RT RIC를 비-RT RIC에 접속하는 제2 인터페이스를 더 포함할 수 있고, 제2 인터페이스를 통해 비- RT RIC는, RAN을 최적화하기 위한 정책 기반의 안내, 머신 학습(ML; machine learning) 관리, 및 강화 정보 중 적어도 하나를 RT RIC에 제공하도록 구성된다. 이 시스템은 RT RIC를 준-RT RIC에 접속시키는 제3 인터페이스를 더 포함할 수 있고, 제3 인터페이스를 통해 준 -RT RIC는, RAN을 최적화하기 위한 정책 기반의 안내, 머신 학습(ML) 관리, 및 강화 정보 중 적어도 하나를 RT RIC에 제공하도록 구성된다. RT RIC는, 인터페이스를 통해 O-DU에 관한 보고, 삽입, 제어, 및 정책 서비스들 중 적어도 하나를 수행하도록 구성될 수 있다. RT RIC는, 인터페이스를 통해 O-DU에 관한 인터페이스 관리 및 서비스 업데이트 기능들 중 적어도 하나를 수행 하도록 구성될 수 있다. RT RIC는, 적어도 하나의 인공 지능(AI)/머신 학습(ML) 모델을 O-DU의 무선 자원 관리(RRM) 기능들에 통합하여 실시간으로 결정 및/또는 추론하는 적어도 하나의 애플리케이션을 호스팅하도록 구성될 수 있다. RT RIC는 실시간으로 셀-프리 대규모 MIMO(cell-free massive MIMO)를 위한 기능들을 구현하기 위한 적어도 하 나의 애플리케이션을 호스팅하도록 구성될 수 있다. RT RIC는 실시간으로 O-DU의 MAC 스케줄러를 활용하기 위한 적어도 하나의 애플리케이션을 호스팅하도록 구성될 수 있다. RT RIC는 실시간으로 제로 신뢰 보안 프레임워크(zero trust security framework)를 구현하기 위한 적어도 하 나의 애플리케이션을 호스팅하도록 구성될 수 있다. 예시적인 실시예들에 따르면, 개방형 RAN(O-RAN) 시스템에서 실시간(RT) 무선 액세스 네트워크(RAN) 지능형 제 어기(RT RIC)를 구현하기 위한 장치는, 명령어들을 저장한 메모리; 및 적어도 하나의 프로세서를 포함하고, 적 어도 하나의 프로세서는 명령어들을 실행하여: 인터페이스를 통해 O-RAN 분산형 유닛(O-DU)에 접속하고; 인터페 이스를 통해, 10 ms 미만의 레이턴시를 갖는 실시간 제어 루프를 통해 적어도 O-DU를 제어하기 위한 하나 이상 의 애플리케이션을 호스팅하도록 구성된다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 적어도 하나의 관리 서비스를 구현하기 위해, 제1 인터 페이스를 통해, RAN 요소들을 관리 및 조율하기 위한 서비스 관리 및 조율(SMO; Service Management and Orchestration) 프레임워크에 접속하도록 구성될 수 있다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 제2 인터페이스를 통해 비-RT RIC에 접속하고; 제2 인터 페이스를 통해 비-RT RIC로부터, O-RAN 시스템을 최적화하기 위한 정책 기반의 안내, 머신 학습(ML) 관리, 및 강화 정보 중 적어도 하나를 획득하도록 구성된다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 제3 인터페이스를 통해 준-RT RIC에 접속하고; 제3 인터 페이스를 통해 준-RT RIC로부터, O-RAN 시스템을 최적화하기 위한 정책 기반의 안내, 머신 학습(ML) 관리, 및 강화 정보 중 적어도 하나를 획득하도록 구성될 수 있다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 인터페이스를 통해 O-DU에 관한 보고, 삽입, 제어, 및 정책 서비스들 중 적어도 하나를 수행하도록 구성될 수 있다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 인터페이스를 통해 O-DU에 관한 인터페이스 관리 및 서 비스 업데이트 기능들 중 적어도 하나를 수행하도록 구성될 수 있다. 적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 적어도 하나의 인공 지능(AI)/머신 학습(ML) 모델을 O- DU의 무선 자원 관리(RRM) 기능들에 통합해 실시간으로 결정 및/또는 추론하는 적어도 하나의 애플리케이션을 호스팅하도록 구성될 수 있다.적어도 하나의 프로세서는 또한, 명령어들을 실행하여, 실시간으로 O-DU의 MAC 스케줄러를 활용하기 위한 적어 도 하나의 애플리케이션을 호스팅하도록 구성될 수 있다."}
{"patent_id": "10-2024-7025733", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "예시적인 실시예들에 대한 이하의 상세한 설명은 첨부된 도면들을 참조한다. 상이한 도면들에서의 동일한 참조 번호는 동일하거나 유사한 요소들을 식별할 수 있다. 전술된 개시내용은 예시와 설명을 제공하지만, 빠짐없이 열거하거나 개시된 그대로의 형태로 구현들을 제한하려 는 의도는 아니다. 상기 개시내용에 비추어 수정들 및 변경들이 가능하거나 구현들의 실시로부터 취득될 수 있 다. 또한, 하나의 실시예의 하나 이상의 피처 또는 컴포넌트는 또 다른 실시예(또는 또 다른 실시예의 하나 이 상의 피처)에 통합되거나 이와 조합될 수 있다. 또한, 아래에서 제공되는 동작들의 플로차트 및 설명들에서, 하나 이상의 동작이 생략될 수 있고, 하나 이상의 동작이 추가될 수 있으며, 하나 이상의 동작이 (적어도 부분 적으로) 동시에 수행될 수 있고, 하나 이상의 동작의 순서는 전환될 수 있다는 것을 이해해야 한다. 여기서 설명된 시스템들 및/또는 방법들은, 하드웨어, 펌웨어, 또는 하드웨어와 소프트웨어의 조합의 상이한 형 태들로 구현될 수 있음이 명백할 것이다. 이들 시스템들 및/또는 방법들을 구현하는데 이용되는 실제 전문화된 제어 하드웨어 또는 소프트웨어 코드는 구현들을 제한하지 않는다. 따라서, 시스템들 및/또는 방법들의 동작 및 거동은 특정한 소프트웨어 코드를 참조하지 않고 본 명세서에서 설명되었다. 소프트웨어 및 하드웨어는 본 명세서에서의 설명에 기초한 시스템들 및/또는 방법들을 구현하도록 설계될 수 있다는 것을 이해해야 한다. 피처들의 특정한 조합들이 청구항들에서 인용되거나 및/또는 명세서에 개시되더라도, 이들 조합들은 가능한 구 현들의 개시내용을 제한하려는 의도가 아니다. 사실상, 이들 피처들 중 여러개는 청구항들에서 구체적으로 기 재되거나 및/또는 명세서에 개시되지 않은 방식들로 조합될 수 있다. 아래에 나열된 각각의 종속항은 하나의 청구항에만 직접적으로 의존할 수 있지만, 가능한 구현들의 개시내용은 청구항 세트 내의 다른 모든 청구항과 조합하여 각각의 종속항을 포함한다. 여기서 이용된 요소, 행위 또는 지침은, 명시적으로 그렇게 설명되지 않는 한, 중요하거나 필수적인 것으로 해 석되어서는 안 된다. 또한, 본 명세서에서 사용되는 관사 \"a\" 및 \"an\"은 하나 이상의 항목을 포함하려는 의도 이며, \"하나 이상\"과 서로 바꾸어 사용될 수 있다. 단 하나의 항목만을 의도한 경우, 용어 \"하나의(one)\" 또는 유사한 언어가 사용된다. 또한, 본 명세서에서 사용되는 용어 \"가지다\", \"갖다\", \"갖는\", \"포함하다\", \"포함하는\" 등은 개방형 용어들임을 의도한 것이다. 또한, \"~에 기초한\"이라는 문구는, 달리 명시적으로 언급되지 않 는 한, \"적어도 부분적으로 ~에 기초한\"을 의미함을 의도한 것이다. 또한, \"[A]와 [B] 중 적어도 하나\" 또는 \"[A] 또는 [B] 중 적어도 하나\" 등의 표현들은, A만, B만, 또는 A와 B 양쪽 모두를 포함하는 것으로 이해되어야 한다. 전술된 바와 같이, 관련 기술의 RIC들은 준-실시간 제어 루프(10ms - 1초) 및 비-실시간 제어 루프(1초 초과)의 일부로서 구현된다. 무선 유닛들로부터의 그들의 거리 및 특정한 프로토콜 스택 구현들로 인해, 관련 기술의 RIC들은, 자신이 관리하는 O-RU들에 근접하게 상주해야 하는 O-DU에서 실행되는 MAC 스케줄러에 의해 요구되는 1 ms 제어 루프 등의, 실시간 이벤트들 또는 기능들을 서비스할 수 없다. 그 결과, 실시간 서비스들 또는 제어 들의 임의의 구현은, 다른 벤더들에 의해 차단되고 액세스될 수 없는, 기저대역 수신기/전송기의 또는 O-DU의 벤더-특유의 또는 전용 소프트웨어 스택 내로의 직접 통합을 요구한다. 예시적인 실시예들은, DU 근처 또는 그 내에(또는 DU의 물리 계층 및/또는 MAC 계층 근처에) 상주하고, 따라서 무선 액세스 네트워크에서 실시간 기능들 및 이벤트들을 서비스하기 위한 DU-RU 실시간 제어 루프의 일부인 실 시간 RIC(RT RIC)를 제공한다. 추가로, RT RIC는 개방형 또는 표준화된 인터페이스들을 이용하여 다른 O-RAN 네트워크 요소들에 접속됨으로써, 멀티벤더 애플리케이션들 또는 마이크로서비스들이 호스팅되어 실시간 지능형 제어들 및 서비스들을 제공하는 것을 허용한다. 개방형 RAN 네트워크들을 위한 실시간 RIC 아키텍처 이하, 예시적인 실시예들에 따른 O-RAN 네트워크들을 위한 실시간 RIC 아키텍처가 설명될 것이다. 도 2a 및 도 2b는 일부 예시적인 실시예에 따른 실시간 RIC(RT RIC)의 일반적인 아키텍처를 나타낸다. 도 2a를 참조하면, 한 실시예에 따르면, RT RIC는 O-DU의 외부에 있고 인터페이스 또는 API를 통해 O-DU에 접속된다. 도 2b를 참 조하면, 또 다른 실시예에 따르면, RT RIC는 O-DU 내부에 있고 인터페이스를 통해 O-DU 내부의 하나 또는 다수 의 유닛에 직접 접속된다. 여기서, 인터페이스들은 표준 기반의(예컨대, 3GPP, O-RAN, ITU, CNCF, TMF 표준들) 또는 전용 인터페이스들이다. 예시적인 실시예들에 따르면, RT RIC는 O-DU의 물리 계층 및 MAC 계층에 통합되거나 근접해 있어, 10ms 미만의 레이턴시를 갖는 실시간 서비스들 및 기능들을 제공할 수 있다. 또한, 하나 이상의 예시적인 실시예에 따르면, RT RIC는 관련 기술의 RIC들과는 달리, 단 하나의 O-DU에만 접속된다. 하나 이상의 실시예는 상기의 구성들로 제한되지 않는다는 것을 이해할 것이다. 예를 들어, 또 다른 실시예에 따르면, RT RIC는 공유된-셀 구성에서(즉, 여러 RU들이 FHM을 통해 동일한 DU에 접속됨) 프론트홀 멀티플렉서 (FHM; FrontHaul Multiplexer)에 직접 접속될 수 있거나, 또는 O-DU와 FHM 양쪽 모두에 직접 접속될 수 있다. 도 3a 내지 도 3d는, 일부 예시적인 실시예에 따른, FHM과의 공유된-셀 구성의 RT RIC의 일반적인 아키텍처를 나타낸다. 즉, 예시적인 실시예들에 따른 RT RIC는 FHM과의 공유된-셀 구성 모드에서 동작하는 O-RAN 시스템들 에 통합될 수 있다. 도 3a를 참조하면, 한 실시예에 따르면, RT RIC는 표준 또는 전용 인터페이스를 통해 O-DU 에 접속된다. 도 3b를 참조하면, 또 다른 실시예에 따르면, RT RIC는 O-DU와 동일한 유닛 내에 통합된다. 이 경우, RT RIC는 O-DU와 동일한 프로세서(예컨대, CPU, GPU, 또는 임의의 하드웨어 가속기), 또는 동일한 마더보 드 내의 상이한 프로세서, 또는 동일한 인클로저 내의 상이한 마더보드, 또는 동일한 랙 내의 별개의 인클로저, 또는 동일한 데이터 센터 내의 별개의 랙 내에 구현될 수 있다. 전술된 바와 같이, 일부 예시적인 실시예에서, RT RIC는 FHM과 접속되거나 통합될 수 있다. 도 3c를 참조하면, 한 실시예에 따르면, RT RIC는 표준 또는 전용 인터페이스를 통해 FHM에 접속된다. 도 3d를 참조하면, 또 다른 실시예에 따르면, RT RIC는 FHM과 동일한 유닛 내에 통합된다. 도 3b의 실시예와 유사하게, 이 경우, RT RIC는 FHM과 동일한 프로세서(예컨대, CPU, GPU, 또는 임의의 하드웨어 가속기), 또는 동일한 마더보드 내의 상이한 프로세서, 또는 동일한 인클로저 내의 상이한 마더보드, 또는 동일한 랙 내의 별개의 인클로저, 또는 동일한 데 이터 센터 내의 별개의 랙 내에 구현될 수 있다. 하나 이상의 예시적인 실시예에 따르면, FHM은 하나 또는 복 수의 O-RU들과 RT RIC 사이의 데이터 또는 제어 정보(예컨대, SRS 신호들)를 집계하도록 구성될 수 있다. 도 4는 하나 이상의 실시예에 따른 O-RAN 아키텍처를 나타낸다. 도 1과 비교해 볼 때, 본 예시적인 실시예의 O-RAN 아키텍처는, RT RIC, 및 RT RIC를 O-RAN 아키텍처 내의 다른 유닛들에 상호접속하기 위한 여러 인터페이 스들을 포함한다. 도 4를 참조하면, 제1 인터페이스(예를 들어, 비제한적인 예로서, P1 인터페이스로서 라벨링됨)는 RT RIC를 SMO 에 접속한다. 제1 인터페이스는, 네트워크 구성 프로토콜(NETCONF; Network Configuration Protocol) 또는 임의의 다른 네트워크 관리 프로토콜을 이용하는 표준 또는 전용 인터페이스들을 통해 구현되는 동작 및 유지보수 인터페이스일 수 있다. 한 실시예에서, 네트워크 관리 프로토콜은, 관리 서비스들을 프로비저닝하여 관리 객체 인스턴스를 생성하고, 관리 객체 인스턴스를 삭제하고, 관리 객체 인스턴스 속성들을 수정하거나 및/또는 관리 객체 인스턴스 속성들을 판독하기 위해 이용된다. 또 다른 실시예에서, 제1 인터페이스는, 결함 감독 관리, 성 능 보장 관리, 추적 관리, 파일 관리, 중추부(heartbeat) 관리, 물리적 네트워크 기능(PNF) 시동 및 등록 관리, 및/또는 PNF 소프트웨어 관리 등의, 하나 또는 복수의 서비스를 구현한다. 또 다른 실시예에서, 제1 인터페이 스는 [O-RAN.WG1.O1-Interface.0-v04.00]에 명시되고 도 1에 도시된 준-RT RIC에 대한 O1 인터페이스이다. 제2 인터페이스(비제한적인 예로서, P2 인터페이스로서 라벨링됨)는 RT RIC를 비-RT RIC에 접속한다. 제2 인터 페이스는 비-RT RIC가 RAN을 최적화하기 위해 RT RIC에 정책 기반의 안내, ML 모델 관리 및 강화 정보를 제공할 수 있게 한다. 한 실시예에서, 제2 인터페이스의 프로토콜 스택은, 인터넷 프로토콜(IP), 전송 제어 프로토콜 (TCP), 하이퍼텍스트 전송 프로토콜 보안(HTTPS), 자바스크립트 객체 표기(JSON) 및/또는 기타 임의의 전용 또 는 표준 계층들 등의 하나 또는 복수의 계층을 포함한다. 또 다른 실시예에서, 제2 인터페이스는 [O- RAN.WG2.A1GAP-v02.02]에 명시되고 도 1에 도시된 비-RT RIC와 준-RT RIC 사이에 정의된 A1 인터페이스이다. 제3 인터페이스(비제한적인 예로서, P3 인터페이스로서 라벨링됨)는 RT RIC를 준-RT RIC에 접속한다. 제3 인터 페이스는 준-RT RIC가 RAN을 최적화하기 위해 RT RIC에 정책 기반의 안내, ML 모델 관리 및 강화 정보를 제공할 수 있게 한다. 한 실시예에서, 제3 인터페이스의 프로토콜 스택은, IP, TCP, HTTPS, JSON 및/또는 기타 임의의 전용 또는 표준 계층들 등의 하나 또는 복수의 계층을 포함한다. 또 다른 실시예에서, 제3 인터페이스는 [O- RAN.WG2.A1GAP-v02.02]에서 명시되고 도 1에 도시된 비-RT와 준-RT RIC 사이에 정의된 A1 인터페이스이다. 제4 인터페이스(비제한적인 예로서, P4 인터페이스로서 라벨링됨)는 RT RIC를 네트워크 요소들, 예컨대, O-DU, O-CU-CP, O-CU-UP 또는 O-eNB 중 적어도 하나에 접속한다. 제4 인터페이스는, 상이한 RT RIC 서비스들(예컨대, 보고, 삽입, 제어, 및 정책) 및 지원 기능들(예컨대, 인터페이스 관리, 서비스 업데이트 등)을 가능케한다. 또 다른 실시예에서, 제4 인터페이스는 [O-RAN.WG3.E2GAP-v01.01]에서 명시되고 도 1에 도시된 준-RT RIC에 대해 정의된 E2 인터페이스일 수 있다. 제5 인터페이스(비제한적인 예로서, P5 인터페이스로서 라벨링됨)는 RT RIC를 O-RU에 접속한다. 제5 인터페이 스는, 제어, 사용자 및 동기화 평면들을 구현함으로써 RT RIC와 하나 또는 복수의 O-RU 사이에서 데이터 및/또 는 제어 정보를 교환하기 위해 이용되는 직접 논리적 채널 또는 인터페이스이다. 한 실시예에서, P5 인터페이 스는 [O-RAN.WG4.CUS.0-v07.00]에 명시되고 도 1에 도시된 개방형 프론트홀(Open FrontHaul) 인터페이스일 수 있다. 하나 이상의 다른 실시예는 도 4를 참조하여 전술된 O-RAN 아키텍처로 제한되지 않는다는 것을 이해할 것이다. 예를 들어, 전술된 인터페이스들 중 하나 이상이 생략될 수 있거나 및/또는 하나 이상의 추가적이거나 상이한 인터페이스가 포함될 수 있다는 것을 이해할 것이다(예컨대, 도 3c 및 도 3d를 참조하여 전술된 바와 같이, RT RIC와 FHM 사이의 인터페이스). 도 5는 하나 이상의 예시적인 실시예에 따른 RT RIC의 블록도를 나타낸다. 도 5를 참조하면, RT RIC는, 각각, P2, P3 및 P4 인터페이스들에 대한 제1(P2), 제2(P3) 및 제3(P4) 인터페이스 종단들을 포함한다. RT RIC는 하나 또는 복수의 마이크로서비스 또는 애플리케이션(본 명세서에서 비제한적인 예로서 zApp들이라고 지칭됨)을 호스팅하는 소프트웨어 정의형 컴포넌트이다. zApp들은, 서비스들, 자동화, 제어, 최적화 등을 실시간으로(또 는 10ms 미만의 레이턴시로) 제공하는 방법들 또는 기술들을 구현한다. zApp들은 RT RIC의 전술된 인터페이스 들을 통해 준-RT RIC, 비-RT RIC, 및 기타의 네트워크 컴포넌트들(예컨대, O-DU, O-CU-CP, O-CU-UP, O-eNB)과 통신한다. zApp들은 전용 또는 대안으로서 표준 정의형 멀티벤더 인터페이스들을 통해 구현된다. 한 예시적인 실시예에 따르면, zApp들은 개방형 인터페이스를 통해 통신하므로, 이들이 여러 벤더들에 의해 개발되고 어떠한 소스 코드 또는 전용 소프트웨어를 오픈하지 않고도, 또는 그렇지 않으면 네트워크에 통합되기 위해 O-RAN 운영 자(예컨대, 텔코 운영자) 또는 O-Cloud 운영자(예컨대, 텔코 운영자 또는 제3자 데이터 센터)에 의한 애플리케 이션의 소스 코드에 대한 액세스를 요구하지 않고도, O-RAN에 통합되는 것을 허용한다. zApp들은 아래에서 설명되는 하나 또는 복수의 이용 사례 또는 임의의 전용 애플리케이션 또는 임의의 제3자 벤 더 애플리케이션에 대한 방법들 또는 기술들을 구현한다. 예시적인 이용 사례 1: AI/ML 기반의 물리 계층 강화들 한 예시적인 실시예에 따른 RT RIC는, AI/ML 모델들을 DU의 실시간 RRM(Radio Resource Management) 기능들에 효과적으로 통합하는 하나 이상의 zApp를 호스팅할 수 있다. 한 예시적인 실시예에 따른 RT RIC는 애플리케이 션들 또는 마이크로서비스들을 호스팅하기 위한 개방형 플랫폼을 제공하기 때문에, 이러한 AI/ML 모델들 및 대 응하는 애플리케이션들은 어떠한 소스 코드도 오픈/공유하지 않고도 및 텔코 또는 O-RAN 운영자의 솔루션들에 의존하지 않고도 여러 벤더들 및 제공자들 중 어느 하나에 의해 개발될 수 있고 네트워크에 통합될 수 있다. 더 상세하게는, RIC는, 전술된 바와 같이, 표준 개방형 인터페이스를 이용하여 및 네트워크 엔지니어링, 최적화, 및 동작들을 위한 지능형 애플리케이션의 개발에서 AI/ML을 활용하여 자동화 및 자율성을 달성하는데 요구되는 지능을 RAN에서 도입하기 위한 표준 프레임워크를 제공한다. 관련 기술의 O-RAN 프레임워크에서, DU와 준-RT RIC 사이의 최소 레이턴시는 10ms 초과이다. 이러한 높은 레이 턴시 루프는, 낮은 레벨 측정 및 스케줄링 등의 다른 RRM 기능들을 통해 실제의 채널 추정을 위한 AI/ML의 이용 을 방해한다. 이것은 AI/ML 기반의 채널 추정이 낮은 레벨의 RF 측정들과의 긴밀한 결합을 요구하기 때문이다. 예시적인 실시예들에 따른 RT RIC를 통한 AI/ML의 능력(예컨대, 레이턴시 < 10ms)을 활용하는 것은, DU에서의 RRM과 AI/ML 모델들 및 추론의 긴밀한 통합을 가능케한다. 예로서, AI/ML 모델들 또는 추론을 통한 O-DU RRM 내의 AI/ML의 RT RIC 통합을 통해 다음과 같은 이용 사례들이 가능하다: · 오버헤드 감소, 개선된 정확도 및 예측 등의, 채널 추정 및 CSI 피드백 강화. · 제시간의 빔 예측, 빔 선택 정확도 향상 등의 빔 관리 개선들. · 낮은 레벨의 측정들을 통한 RRM의 개선. · 비-가시선(NLOS; Non-Line-Of-Sight) 조건들을 포함한, 상이한 시나리오들에 대한 사용자 위치 결정 정확도 강화들. · 복조 및 오류율들을 개선하기 위해 AI/ML을 이용하는 진보된 디지털 변조 기술들. 예를 들어, 비트 에러율 들은 훈련 기반의 블라인드 채널 추정을 통해 감소될 수 있다 예시적인 이용 사례 2: 셀-프리 대규모 MIMO 한 예시적인 실시예에 따른 RT RIC는 하나 이상의 zApp를 호스팅하여 셀-프리 대규모 MIMO(multiple-input multiple-output)를 효과적으로 구현할 수 있다. 고화질 비디오 스트리밍 및 낮은 레이턴시의 사물인터넷(IoT) 접속을 요구하는 애플리케이션들의 인기가 높아지 는 것으로 인해 무선 데이터 수요는 해마다 매우 빠른 속도로 증가하고 있다. 이러한 수요는, 예컨대, 단위 면 적당 스펙트럼 효율을 증가시키기 위해 셀 치밀화를 통해, 6GHz-미만 스펙트럼에서 동작하는 셀룰러 네트워크들 의 용량을 증가시킴으로써 충족될 수 있다. 그러나, 통신 이론 및 실제 현장 시험들은, 증가된 셀간 간섭으로 인해 각각의 셀 내에서 신호 무결성의 상당한 열화와 그에 따른 총 용량의 열화를 초래한다는 셀 치밀화에 대한 물리적 한계가 있다는 것을 보여주었다. 이 효과는, 구체적으로는 많은 수의 다중 경로 반사를 생성하고 그에 따라 높은 레벨의 셀간 간섭을 생성하는 강철 구조물이 있는 실내 환경과 대형 장소들에서 특히 악화된다. 셀 치밀화의 물리적 한계를 해결하는 한 방식은, 셀-프리 대규모 MIMO 기술들을 이용함으로써 셀간 간섭을 완전 히 제거하는 것이다. 셀-프리 대규모 MIMO 기술들은, 동일한 시간/주파수 대역에서 대규모 수의 사용자 단말기 들을 일관되게 서빙하기 위해 넓은 영역에 걸쳐 분포된 대규모 수의 액세스 포인트들을 수반한다. 이들 기술들 은 셀룰러 네트워크들의 용량을 10배 초과로 증가시킬 잠재력이 있다. 한 배경으로서, 지금까지 구축된 이러한 부류의 기술들의 최초의 작업 테스트베드는 원래 분산-입력 분산-출력 기술이라고 명명되었다. 그 다음, 동일 한 기술이, 지금까지 구축된 제1 LTE vRAN 셀룰러 인프라 제품 내에서 구현되어 개인-셀(pCell) 기술이라고 명 명되었다. 나중에, 이 기술은 학계에 의해 널리 채택되었고 셀-프리 대규모 MIMO라고 재명명되었다. 현재 무 선 업계에서는 셀-프리 대규모 MIMO가 차세대 6G 표준들뿐만 아니라 3GPP Rel.17 이상에서 다중 송수신 포인트 (multi-TRP)들이라는 이름으로 5G 및 5G-Advanced를 위한 핵심 기술들 중 하나로서 고려되고 있다. 셀-프리 대규모 MIMO는 중앙집중형 안테나 어레이들을 갖는 관련 기술의 대규모 MIMO 기술들과는 매우 상이하다. 넓은 영역에 걸쳐 안테나들을 분산시킴으로써, 상이한 안테나들에서의 무선 채널들은 \"매크로-다이 버시티\" 이득을 획득하기 위해 활용될 수 있는 비상관된 장기 채널 통계치들을 경험한다. 대조적으로, 관련 기 술의 대규모 MIMO 시스템들에서, 동일한 어레이로부터의 모든 안테나들은 동일한 경로손실 및 섀도잉을 경험하 여 성능이 열화된다. 또한, 관련 기술의 대규모 MIMO 시스템은 커버리지 영역 전체에 걸쳐 셀간 간섭(ICI; inter-cell interference)이 제거되는 셀-프리 대규모 MIMO 시스템들과는 달리, 임의의 종래의 셀룰러 기술처럼셀 엣지에서만 ICI에 의해 열화되었다. 관련 기술의 대규모 MIMO 시스템들은, 동일한 RU에 접속된 안테나들에 대해서만 빔포밍 가중치들이 계산되기 때 문에, 도 6에 도시된 바와 같이, 분할 7.2 시스템들에서 무선 유닛(RU)에서의 로컬 처리와 함께 디지털 또는 아 날로그 빔포밍을 이용한다. 따라서, 하나의 안테나 어레이에 대한 모든 처리가 RU에서 구현되기 때문에, 관련 기술의 대규모 MIMO 시스템들에서는 어떠한 RIC 구현의 필요성도 없다. 대조적으로, 셀-프리 대규모 MIMO 시스 템들은 여러 RU들(여기서, 각각의 RU는 하나 또는 다수의 안테나와 결합됨)에 걸쳐 파형들을 프리코딩한다. 따 라서, DU 측에서 프리코딩이 구현되어야 한다. 도 6을 참조하면, 관련 기술의 O-RAN 시스템들에서는, 여러 RU들이 FHM을 통해 동일한 DU에 접속되는 공유된-셀 구성에서도, 각각의 DU 프로토콜 스택은 단 하나의 RU에 대해서만 In-band 및 Quadrature(IQ) 샘플들을 생성한 다. 대조적으로, 셀-프리 대규모 MIMO 프리코딩 방법들은 하나의 DU로부터 여러 RU들에 전송된 복수의 또는 모 든 IQ 데이터 스트림들에 적용된다. 관련 기술의 O-RAN 시스템들에서 정의된 2개 유형의 RIC는 셀-프리 대규모 MIMO 기술들에 의해 요구되는 엄격한 실시간 제약들을 해결하기에 충분하지 않은데, 그 이유는 이들이 도 1에서와 같이 비-RT RIC에 대해 1초 초과 또는 준-RT RIC에 대해 10ms 내지 1초의 시간 스케일에서 동작하기 때문이다. 그러나, 셀-프리 대규모 MIMO의 실제 구현들은, 채널 상호성, RU들의 엄격한 동기화, 및 RU들을 통해 전송되거나 수신되는 파형들을 프리코딩 기술들을 통해 변화하는 채널 조건들에 적응시키는 신호 처리 알고리즘들의 실시간 구현을 위한 RF 컴포넌트들 의 안정적인 캘리브레이션을 보장하기 위해 훨씬 더 짧은 스케일에서의 타이밍 정밀도를 요구한다. 예시적인 실시예들에 따른 RT RIC는 10 ms 미만의 시간 스케일에서 동작하고, 따라서, 셀-프리 대규모 MIMO에 대한 새로운 기능들을 구현하는 zApp들을 호스팅할 수 있다. 예시적인 이용 사례 3: 진보된 스케줄링 LTE, 5G-NR 또는 임의의 무선 시스템들에서 매체 액세스 제어(MAC) 계층의 주요 기능들 중 하나는 스케줄러이다. MAC 스케줄러는 다음과 같은 것들을 포함하는 도 7에 도시된 바와 같은 상이한 기능들을 구현한 다: · UE들 또는 RU들로부터의 채널 품질 표시자들(CQI), 또는 무선 링크 제어(RLC) 계층으로부터의 버퍼 상태 보 고들 등의 정보에 기초하여, 시간, 주파수 또는 공간 도메인들에서의 채널 자원들을 상이한 사용자 장비들(UE들)에 할당함으로써 다운링크(DL) 또는 업링크(UL) 대역폭을 할당. · 패킷 손실률, 최대 보장된/허용된 대역폭, 사용자들의 상대적 우선 순위 등의 정보에 기초하여 코어 네트워 크의 정책 및 과금 규칙 기능(PCRF; Policy and Changing Rules Function)들로부터의 서비스 품질(QoS) 규칙들 을 집행. UE들에 대한 동적 대역폭 할당은 전형적으로 그들의 채널 조건들에 기초하여 UE들에 특정한 자원 블록들(RB들) 을 전용시킴으로써 달성된다. 이러한 채널 할당은 매우 짧은 시간 기간 내에 발생할 필요가 있다. 예를 들어, 도 8에 도시된 프레임 구조를 갖는 시분할 듀플렉스(TDD) 시스템들에서, O-RAN DU(O-DU)는 업링크(UL)를 통해 UE들로부터 채널 품질 표시자(CQI)를 수신하는 시간으로부터 다음 세트의 CQI들이 다음 UL 전송을 통해 이용가 능할 때까지 5 ms만을 가질 수도 있다. 또한, UE들의 RF 채널은 그들의 이동성에 따라 이들 5ms 내에서 매우 빠르게 변할 수 있어서, 현재 세트의 CQI들이 다음 UL 전송에 의해 아웃데이트(outdate)되게 한다. 따라서, MAC 스케줄러가 효과적으로 작동하려면, 10msec 미만의 시간 스케일에서 작동할 필요가 있다. 이 문제는, 프레 임 구성에 따라, UL/DL 스위칭이 밀리초-미만 스케일에서 발생할 수 있는 5G-NR 프레임과 훨씬 더 관련이 있다. 또한, 코어 네트워크에서의 PCRF 규칙들은 운영자들에 따라 달라질 수 있을 뿐만 아니라, 강화된 모바일 광대역 (eMBB), 초-신뢰성 낮은 레이턴시 통신(URLLC) 또는 대규모 머신 타입 통신(mMTC) 등의 상이한 QoS KPI들을 요 구할 수 있는 이용 사례들에 따라 달라질 수 있다. 특정한 응용들에 따라, 상이한 운영자들은 그들의 QoS 규칙 들을 구현하고 그들의 특유의 KPI들을 충족시키기 위해 그들의 MAC 스케줄러를 업그레이드하거나 또는 전용 스 케줄링 기술들을 설계할 수 있다. MAC 스케줄러가 도 9에 도시된 바와 같이 O-DU 내에 구현된다면, MAC 스케줄 러를 업데이트하는 것은 네트워크의 동작에 지장을 줄 수 있는 전체 O-DU의 완전한 업데이트를 수반할 것이다. 예시적인 실시예들에 따른 RT RIC는 10ms 미만의 시간 스케일에서 MAC 스케줄러를 동작시키거나 이용할 수 있는 동시에, 운영자들이 네트워크 동작을 방해할 필요 없이 애플리케이션들 및 마이크로서비스들을 통해 그들의 MAC 스케줄러를 업그레이드하고 맞춤화하는 것을 허용한다. 또한, 예시적인 실시예들에 따른 RT RIC는 MAC 스케줄러를 외부에서 실행하여 진보된 대규모 MIMO 또는 무선 자원 관리(RRM; Radio Resource Management) 방법들 등 의 다른 실시간 애플리케이션들을 통한 O-DU 기능들의 맞춤화를 허용할 수 있다. 예를 들어, RT RIC에 의해 호 스팅되는 zApp들은 10 ms 미만의 시간 스케일에서 발생하는 사용자들의 CQI 및 스케줄러 결정들에 기초하여 대 규모 MIMO 어레이들 내의 안테나들을 턴온 및 턴오프하도록 설계된 상이한 에너지 절약 알고리즘들을 구현할 수 있다. 또 다른 예로서, 한 예시적인 실시예에 따른 RT RIC는 셀-엣지 대 셀-중심에서 UE들을 선택하기 위해 DU의 MAC 스케줄러를 이용하여 대규모 MIMO 시스템들에 대한 진보된 에너지 절약 방법들을 제공하는 zApp을 호스팅할 수 있다. 즉, 한 실시예에 따른 RT RIC 상에서 호스팅되는 zApp는 셀-엣지 대 셀-중심에 있는 UE들의 그룹들에 기 초하여 어레이의 안테나들을 턴온/턴오프할 수 있다. 이러한 안테나들의 동적 스위칭은 LTE 및 5G-NR에서 5ms 미만의 스케일에서 발생하기 때문에, 관련 기술의 RIC들의 비-실시간 또는 준-실시간 제어 루프를 이용하여 수 행될 수 없다. 예시적인 이용 사례 4: 엣지에서의 실시간 관측가능성 및 보안 관련 기술의 O-RAN 아키텍처에서, 제어 패킷들 또는 사용자 평면 패킷들로부터 도출된 최신 메타데이터에 기초 하여 보안 제어들을 O-RU에 동적으로 주입하는 것은 가능하지 않다. 특히, 관련 기술의 아키텍처는, a) O-RU 또는 O-DU 상의 관측가능성 플랫폼으로부터 수신된 데이터를 다이제스트하고, b) 다른 소스들을 통해 잠재적으 로 이용가능한 다른 파라미터들과 상관시키고, c) 실시간 레이턴시에서 새로운 보안 제어들/정책들을 주입함으 로써 새로운 보안 조치들을 집행하는 O-RU 또는 O-DU에 관한 프로그래밍 능력이 부족하다. 한편, 제로 신뢰 시대에서는, 발생 시점에서 공격들을 탐지하여 처리함으로써, 영향을 받는 플랫폼 내에서 측방 향 이동의 위험, 외부 인터페이스를 통한 네트워크의 다른 부분들로의 위협 확장 등을 회피할 수 있다. 그 실 시간 스케일로 인해, 예시적인 실시예들에 따른 RT RIC는 제로 신뢰 보안 프레임워크를 달성하는 zApp들을 호스 팅할 수 있다. 예를 들어, RT RIC는 다음과 같은 실시간 구현을 용이화하는 하나 이상의 zApp을 호스팅할 수 있다: a) O-RU 및 O-DU 등의 중요 자산들의 실시간 관측가능성 플랫폼에서, 자산들, 네트워크 인프라 및 통신들의 현 재 상태에 관한 정보를 수집 및/또는 보고. b) 영향을 받는 자산의 보안 상태를 개선하기 위해 보고된 데이터를 지속적으로 분석하고 요구되는 보안 제어 들을 실시간으로 부과. c) 달리 기존 도구들에 위해 탐지되지 못하는 제로-데이 공격들을 탐지하고 완화하기 위해 보안 정책들을 동적 으로 푸시. d) 그 후 정책들을 정교화하거나 및/또는 (O-RU 등의) 중요한/노출된 자산들에 대한 가능한 공격들을 경고하는 데 이용될 수 있도록, 나중의 분석을 위해 보안 중심 정보를 업스트림 디바이스에 푸시. 예시적인 이용 사례 5: zApp들을 통한 AI/ML 모델 및 추론 업그레이드 O-RAN 내의 O-DU 프로토콜 스택의 관련 기술의 구현에서, O-DU는 단일 벤더로부터의 모든 소프트웨어(SW) 컴포 넌트들을 갖는 모놀리식 가상화된 네트워크 기능(VNF)이다. 이 SW 아키텍처는 O-DU가 사전 프로그래밍된 기능 들을 수행하는 경우에만 유용할 수 있다. 그러나, 최신 학습 데이터에 기초하여 동적 기반으로 업데이트될 필요가 있는 머신 학습 모델들 및 추론들이 O- DU SW 스택에 배치되어야 한다면, SW 아키텍처는 AI/ML 모델의 업그레이드를 허용할 필요가 있을 것이다. 예시 적인 실시예들에 따른 RT RIC는, O-DU 내에서 AI/ML 모델들의 업그레이드 또는 추론을 용이화하거나 업그레이드 하기 위해 zApp들을 호스팅할 수 있다. 이와 관련하여, RT RIC는 다양한 zApp들과 O-DU 자신의 기능들 사이의 충돌을 피하기 위해 예시적인 실시예들에 따른 여러 정책들을 구현할 수 있다. 예를 들어, O-DU 내의 AI/ML 모 델들 및 추론들의 라이프 사이클 관리는 RT RIC를 통해 정의되거나 구현되는 정책들에 의해 표준화되거나 제어 될 수 있다. 추가 예로서, RT RIC는, zApp들을 제어하는 프레임워크(예컨대, RT RIC)에 의해 할당된 권한들을 갖는 AI/ML 모 델들 또는 추론들을 설치, 업데이트, 삭제 또는 일시중단할 수 있는 것만 가능하도록 실행중인 zApp들을 제약하 는 예시적인 실시예들에 따른 정책들을 구현할 수 있다. (입력/출력, 온라인/오프라인을 포함한) 모델 훈련, 모델 검증, 모델 테스트, 추론 동작, 훈련을 위한 데이터 세트들, 검증, 테스트 등의 다른 프로세스들도 역시,zApp들과 O-DU 기능들 사이의 충돌 관리를 위한 정책들에 따라 정의되고 구현될 수 있다. 도 10은 하나 이상의 예시적인 실시예에 따른 O-RAN 시스템에서 RT RIC를 구현하는 방법의 플로차트이다. 도 10을 참조하면, 동작 S100에서, 한 예시적인 실시예에 따른 RT RIC는 인터페이스를 통해 O-DU에 접속되어 실시 간(즉, 10ms 미만) 관리 및 제어들을 가능케한다. 예를 들어, RT RIC는 10 ms 미만의 레이턴시로 물리 계층 및 /또는 MAC 계층에 접속하기 위해 O-DU 내에 및/또는 O-DU 근처에 통합될 수 있다. 동작 S200에서, RT RIC 상에서 호스팅되는 zApp가 실행되어 O-RAN 시스템에 대한 실시간 서비스들 및/또는 기능 들을 제공한다. 도 11은 한 예시적인 실시예에 따른 RT RIC에 의해 서비스들을 제공하는 방법의 플로차트이다. 도 11을 참조하 면, 동작 S1100에서, RT RIC는 실시간 제어 루프를 통해 노드(O-DU, O-CU, O-RU 또는 O-eNB 중 적어도 하나)에 대한 보고 동작을 수행한다. 예를 들어, 동작 S1100에서, RT RIC는 노드에게 기능-특유의 값 설정을 보고할 것 을 요청할 수 있다. 동작 S1110에서, RT RIC는 실시간 제어 루프를 통해 노드(O-DU, O-CU, O-RU 또는 O-eNB 중 적어도 하나)에 관 한 삽입 동작을 수행한다. 예를 들어, 동작 S1110에서, RT RIC는 노드에게 사용자 평면 기능을 활성화할 것을 지시할 수 있다. 동작 S1120에서, RT RIC는 실시간 제어 루프를 통해 노드(O-DU, O-CU, O-RU 또는 O-eNB 중 적어도 하나)에 관 한 제어 동작을 수행한다. 예를 들어, 동작 S1120에서, RT RIC는 노드에게 제어 평면 기능을 활성화할 것을 지 시할 수 있다. 동작 S1130에서, RT RIC는 실시간 제어 루프를 통해 노드(O-DU, O-CU, O-RU, O-eNB 중 적어도 하나)에 관한 정 책 동작을 수행한다. 예를 들어, 동작 S1130에서, RT RIC는 활성화된 기능들 중 하나에 관한 정책 파라미터를 설정할 수 있다. 예시적인 실시예들에 따르면, RT RIC는 전술된 서비스들(보고, 삽입, 제어, 및 정책) 중 하나 이상에 가입할 수 있는 하나 이상의 zApp를 호스팅한다. 도 11의 동작들 중 하나 이상은 생략될 수 있거나, 및/또는 하나 이상의 추가적인 또는 상이한 동작이 추가될 수 있다는 것을 이해할 것이다. 또한, 도 11에 도시된 동작들은 임의의 순서로 수행될 수 있다는 것을 이해할 것이다. 도 12는 한 예시적인 실시예에 따른 하나 이상의 디바이스의 컴포넌트들의 도면이다. 디바이스는 전술된 디바이스들 중 임의의 디바이스(예컨대, RT RIC를 호스팅하는 디바이스)에 대응할 수 있다. 도 11에 도시된 바와 같이, 디바이스는, 버스, 프로세서, 메모리, 저장 컴포넌트 , 및 통신 인터페이스를 포함할 수 있다. 컴포넌트들 중 하나 이상은 생략될 수 있거나 및/또는 하나 이상의 추가적인 컴포넌트들이 포함될 수 있다는 것을 이해할 것이다. 버스는 디바이스의 컴포넌트들 사이의 통신을 허용하는 컴포넌트를 포함한다. 프로세서는, 하드웨어, 펌웨어, 또는 하드웨어와 소프트웨어의 조합으로 구현된다. 프로세서는, CPU(Central Processing Unit), GPU(Graphics Processing Unit), APU(Accelerated Processing Unit), 마이크로프로세서, 마이크로제어기, 디지털 신호 프로세서(DSP; Digital Signal Processor), FPGA(Field Programmable Gate Array), 주문형 집적 회로(ASIC; application-specific integrated circuit), 또는 다른 유형의 처리 컴포넌트 이다. 프로세서는 기능을 수행하도록 프로그래밍될 수 있는 하나 이상의 프로세서를 포함한다. 메모리는, 랜덤 액세스 메모리(RAM), 판독 전용 메모리(ROM), 및/또는 프로세서가 이용할 정보 및/ 또는 명령어들을 저장한 또 다른 유형의 동적 또는 정적 저장 디바이스(예컨대, 플래시 메모리, 자기 메모리, 및/또는 광학적 메모리)를 포함한다. 저장 컴포넌트는 디바이스의 동작 및 이용에 관련된 정보 및/또는 소프트웨어를 저장한다. 예를 들어, 저장 컴포넌트는, 하드 디스크(예컨대, 자기 디스크, 광 디스크, 광자기 디스크 및/또는 솔리드 스 테이트 디스크), CD(Compact Disc), DVD(digital versatile disc), 플로피 디스크, 카트리지, 자기 테이프, 및 /또는 또 다른 유형의 비일시적인 컴퓨터 판독가능한 매체를, 대응하는 드라이브와 함께 포함할 수 있다.통신 인터페이스는, 디바이스가 유선 접속, 무선 접속, 또는 유선과 무선 접속들의 조합 등을 통해 다른 디바이스와 통신할 수 있게 하는 트랜시버류 컴포넌트(예컨대, 트랜시버 및/또는 별개의 수신기와 전송 기)를 포함한다. 통신 인터페이스는 디바이스가 또 다른 디바이스로부터 정보를 수신하거나 및/또 는 또 다른 디바이스에 정보를 제공하는 것을 허용할 수 있다. 예를 들어, 통신 인터페이스는, Ethernet 인터페이스, 광학적 인터페이스, 동축 인터페이스, 적외선 인터페이스, RF(Radio Frequency) 인터페이스, USB(Universal Serial Bus) 인터페이스, Wi-Fi 인터페이스, 셀룰러 네트워크 인터페이스 등을 포함할 수 있다. 디바이스는 여기서 설명된 하나 이상의 프로세스 또는 기능을 수행할 수 있다. 디바이스는, 메모 리 및/또는 저장 컴포넌트 등의 비일시적인 컴퓨터 판독가능한 매체에 저장된 소프트웨어 명령어들 을 프로세서가 실행하는 것에 기초하여 동작들을 수행할 수 있다. 컴퓨터 판독가능한 매체는 여기서는 비일시적인 메모리 디바이스로서 정의된다. 메모리 디바이스는, 단일의 물리적 저장 디바이스 내의 메모리 공 간, 또는 여러 물리적 저장 디바이스에 걸쳐 분산된 메모리 공간을 포함한다. 소프트웨어 명령어들은, 또 다른 컴퓨터 판독가능한 매체로부터 또는 통신 인터페이스를 통해 또 다른 디 바이스로부터 메모리 및/또는 저장 컴포넌트 내로 판독될 수 있다. 실행될 때, 메모리 및/ 또는 저장 컴포넌트에 저장된 소프트웨어 명령어들은 프로세서로 하여금 여기서 설명된 하나 이상 의 프로세스를 수행하게 할 수 있다. 추가적으로 또는 대안으로서, 하드와이어드 회로는, 여기서 설명된 하나 이상의 프로세스를 수행하기 위해 소프 트웨어 명령어들 대신에 또는 이와 조합하여 이용될 수 있다. 따라서, 여기서 설명된 실시예들은 하드웨어 회 로 및 소프트웨어의 임의의 특정한 조합으로 제한되지 않는다. 전술된 개시내용은 예시와 설명을 제공하지만, 빠짐없이 열거하거나 개시된 그대로의 형태로 구현들을 제한하려 는 의도는 아니다. 상기 개시내용에 비추어 수정들 및 변경들이 가능하거나 구현들의 실시로부터 취득될 수 있 다. 일부 실시예는, 통합의 임의의 가능한 기술적 세부 레벨에서 시스템, 방법, 및/또는 컴퓨터 판독가능한 매체와 관련될 수 있다. 또한, 전술한 상기의 컴포넌트들 중 하나 이상은, 컴퓨터 판독가능한 매체에 저장되고 적어도 하나의 프로세서에 의해 실행가능한 명령어들로서 구현될 수 있다(및/또는 적어도 하나의 프로세서를 포함할 수 있다). 컴퓨터 판독가능한 매체는, 프로세서로 하여금 동작들을 실행하게 하기 위한 컴퓨터 판독가능한 프로그 램 명령어들을 포함하는 컴퓨터 판독가능한 비일시적인 저장 매체(또는 매체)를 포함할 수 있다. 컴퓨터 판독가능한 저장 매체는 명령어 실행 디바이스에 의한 이용을 위한 명령어를 보유하고 저장할 수 있는 유형의 디바이스(tangible device)일 수 있다. 컴퓨터 판독가능한 저장 매체는, 예를 들어, 전자적 저장 디바 이스, 자기적 저장 디바이스, 광학적 저장 디바이스, 전자기 저장 디바이스, 반도체 저장 디바이스, 또는 이들 의 임의의 적절한 조합일 수 있지만, 이것으로 제한되는 것은 아니다. 컴퓨터 판독가능한 저장 매체의 더 구체 적인 예에 대한 비제한적 목록으로서 하기의 것들이 포함된다: 휴대형 컴퓨터 디스켓, 하드 디스크, 랜덤 액세 스 메모리(RAM), 판독 전용 메모리(ROM), 소거가능한 프로그램가능한 판독 전용 메모리(EPROM 또는 플래시 메모 리), SRAM(Static Random Access Memory), 휴대형 CD-ROM(compact disc read-only memory), DVD(digital versatile disk), 메모리 스틱, 플로피 디스크, 펀치-카드(punch-card) 또는 명령어들이 기록된 그루브 내의 융 기 구조(raised structure)와 같은 기계적 인코딩형 디바이스, 및 이들의 임의의 적절한 조합. 컴퓨터 판독가 능한 저장 매체는, 여기서 사용될 때, 라디오파 또는 다른 자유로이 전파하는 전자기파, 도파관 또는 기타의 전 송 매체를 통해 전파하는 전자기파(예를 들어, 광섬유 케이블을 통과하는 광 펄스), 또는 와이어를 통해 전송되 는 전기 신호 등의, 그 자체로 일시적인 신호인 것으로 해석되어서는 안 된다. 여기서 설명되는 컴퓨터 판독가능한 프로그램 명령어들은, 네트워크, 예를 들어, 인터넷, 근거리 네트워크, 광 역 네트워크 및/또는 무선 네트워크를 통해 컴퓨터 판독가능한 저장 매체로부터 각각의 컴퓨팅/처리 디바이스에 또는 외부 컴퓨터나 외부 저장 디바이스에 다운로드될 수 있다. 네트워크는, 구리 전송 케이블, 광 전송 섬유, 무선 전송, 라우터, 방화벽, 스위치, 게이트웨이 컴퓨터 및/또는 에지 서버(edge server)를 포함할 수 있다. 각각의 컴퓨팅/처리 디바이스의 네트워크 어댑터 카드 또는 네트워크 인터페이스는 네트워크로부터 컴퓨터 판독 가능한 프로그램 명령어들을 수신하고 각각의 컴퓨팅/처리 디바이스 내의 컴퓨터 판독가능한 저장 매체에 저장 하기 위해 컴퓨터 판독가능한 프로그램 명령어들을 포워딩한다. 동작들을 실행하기 위한 컴퓨터 판독가능한 프로그램 코드/명령어들은, 어셈블러 명령어들, ISA(instruction- set-architecture) 명령어들, 머신 명령어들, 머신 의존 명령어들, 마이크로코드, 펌웨어 명령어들, 상태 설정데이터, 집적 회로를 위한 구성 데이터, 또는 Smalltalk, C++ 등과 같은 객체 지향 프로그래밍 언어, 및 \"C\" 프 로그래밍 언어 또는 유사한 프로그래밍 언어 등의 절차형 프로그래밍 언어들을 포함한, 하나 이상의 프로그래밍 언어의 임의의 조합으로 작성된 소스 코드나 오브젝트 코드일 수 있다. 컴퓨터 판독가능한 프로그램 명령어들 은, 완전히 사용자의 컴퓨터 상에서, 부분적으로 사용자의 컴퓨터 상에서, 독립형 소프트웨어 팩키지로서, 부분 적으로는 사용자의 컴퓨터 상에서 및 부분적으로는 원격 컴퓨터 상에서 또는 완전히 원격 컴퓨터 또는 서버 상 에서 실행될 수 있다. 후자의 시나리오에서, 원격 컴퓨터는 근거리 네트워크(LAN) 또는 광역 네트워크(WAN)를 포함한 임의의 유형의 네트워크를 통해 사용자의 컴퓨터에 접속될 수 있거나, 그 접속이 (예를 들어, 인터넷 서 비스 제공자를 이용하여 인터넷을 통해) 외부 컴퓨터에 대해 이루어질 수도 있다. 일부 실시예에서, 예를 들어, 프로그래머블 로직 회로, 필드 프로그래머블 게이트 어레이(FPGA)들 또는 프로그래머블 로직 어레이(PL A)들을 포함하는 전자 회로는, 양태들 또는 동작들을 수행하기 위해, 전자 회로를 개인맞춤화하는 컴퓨터 판독 가능한 프로그램 명령어들의 상태 정보를 활용함으로써 컴퓨터 판독가능한 프로그램 명령어들을 실행할 수 있다. 이들 컴퓨터 판독가능한 프로그램 명령어들은, 범용 컴퓨터, 특별 목적 컴퓨터, 또는 기타의 프로그램가능한 데 이터 처리 장치의 프로세서에 제공되어, 컴퓨터 또는 기타의 프로그램가능한 데이터 처리 장치의 프로세서를 이 용하여 실행되는 명령어들이 플로차트 및/또는 블록도의 블록이나 블록들에 명시된 기능들/작용들을 구현하기 위한 수단을 생성하게 하는 머신을 생성할 수 있다. 이들 컴퓨터 판독가능한 프로그램 명령어는 또한, 명령어 를 저장한 컴퓨터 판독가능한 저장 매체가 플로차트 및/또는 블록도의 블록이나 블록들에 명시된 기능/동작의 양태들을 구현하는 명령어들을 포함하는 제조 물품을 포함하도록, 컴퓨터, 프로그램가능한 데이터 처리 장치, 및/또는 기타의 디바이스들이 특정한 방식으로 기능하도록 지시할 수 있는 컴퓨터 판독가능한 저장 매체에 저장 될 수 있다. 컴퓨터 판독가능한 프로그램 명령어들은 또한, 컴퓨터, 기타의 프로그램가능한 데이터 처리 장치, 또는 기타의 디바이스 상에서 실행되는 명령어들이 플로차트 및/또는 블록도의 블록이나 블록들에 명시된 기능들/동작들을 구현하도록, 컴퓨터, 기타의 프로그램가능한 데이터 처리 장치, 또는 기타의 디바이스 상에 로딩되어, 일련의 동작 단계들이, 컴퓨터, 기타의 프로그램가능한 데이터 처리 장치, 또는 기타의 디바이스 상에서 수행되어 컴퓨 터 구현된 프로세스를 생성하게 할 수 있다. 도면들 내의 플로차트 및 블록도들은, 다양한 실시예에 따른 시스템들, 방법들, 및 컴퓨터 판독가능한 매체 가 능한 구현들의 아키텍처, 기능, 및 동작을 예시한다. 이 점에서, 플로차트 또는 블록도 내의 각각의 블록은, 명시된 논리 기능(들)을 구현하기 위한 하나 이상의 실행가능한 명령어들을 포함하는, 모듈, 세그먼트, 또는 명 령어들의 일부를 나타낼 수 있다. 방법, 컴퓨터 시스템, 및 컴퓨터 판독가능한 매체는, 추가적인 블록들, 더 적은 수의 블록들, 상이한 블록들, 또는 도면들에 도시된 것들과는 상이하게 배열된 블록들을 포함할 수도 있다. 일부 대안적 구현에서, 블록들에 표기된 기능들은 도면들에 표기된 순서와는 다른 순서로 발생할 수도 있다. 예를 들어, 연속적으로 도시된 2개의 블록은, 사실상, 포함된 기능에 따라, 동시에 또는 실질적으로 동 시에 실행될 수 있거나, 블록들은 때때로 역순으로 실행될 수도 있다. 블록도들 및/또는 플로차트 예시들의 각 각의 블록, 및 블록도들 및/또는 플로차트 예시들의 블록들의 조합들은, 명시된 기능들 또는 동작들을 수행하거 나, 또는 특별 목적 하드웨어와 컴퓨터 명령어들의 조합을 실행하는 특별 목적 하드웨어-기반의 시스템들에 의 해 구현될 수 있다는 점에도 역시 유의될 것이다. 여기서 설명된 시스템들 및/또는 방법들은, 하드웨어, 펌웨어, 또는 하드웨어와 소프트웨어의 조합의 상이한 형 태들로 구현될 수 있음이 명백할 것이다. 이들 시스템들 및/또는 방법들을 구현하는데 이용되는 실제 전문화된 제어 하드웨어 또는 소프트웨어 코드는 구현들을 제한하지 않는다. 따라서, 상기 시스템들 및/또는 방법들의 동작 및 거동이 특정한 소프트웨어 코드를 참조하지 않고 본 명세서에서 설명되었다 ― 소프트웨어 및 하드웨어 는 본 명세서의 설명에 기초하여 시스템들 및/또는 방법들을 구현하도록 설계될 수 있다는 것을 이해해야 한다.도면 도면1 도면2a 도면2b 도면3a 도면3b 도면3c 도면3d 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2024-7025733", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이하, 유사한 부호들은 유사한 요소들을 나타내는 첨부된 도면들을 참조하여 본 개시내용의 예시적인 실시예들 의 피처들, 이점들, 및 중요성이 설명될 것이다. 도 1은 관련 기술의 O-RAN 아키텍처를 나타낸다; 도 2a 및 도 2b는 일부 예시적인 실시예에 따른 실시간 RIC(RT RIC)의 일반적인 아키텍처를 나타낸다; 도 3a 내지 도 3d는 일부 예시적인 실시예에 따른 프론트홀 멀티플렉서(FHM; FrontHaul Multiplexer)를 갖는 공 유된-셀 구성에서의 RT RIC의 일반적인 아키텍처를 나타낸다; 도 4는 하나 이상의 예시적인 실시예에 따른 O-RAN 아키텍처를 나타낸다; 도 5는 하나 이상의 예시적인 실시예에 따른 RT RIC의 블록도를 나타낸다; 도 6은 분할된 7.2 O-RAN 시스템을 나타낸다; 도 7은 무선 액세스 네트워크에 대한 MAC 스케줄러 아키텍처를 나타낸다; 도 8은 시분할 듀플렉스(TDD; Time Division Duplex) 시스템들의 프레임 구조를 나타낸다; 도 9는 O-RAN 시스템에서 O-CU, O-DU, 및 O-RU 아키텍처를 나타낸다; 도 10은 하나 이상의 예시적인 실시예에 따른 O-RAN 시스템에서 RT RIC를 구현하는 방법의 플로차트이다; 도 11은 한 예시적인 실시예에 따른 RT RIC에 의해 서비스들을 제공하는 방법의 플로차트이다. 도 12는 한 예시적인 실시예에 따른 하나 이상의 디바이스의 컴포넌트들의 도면이다."}
