{"patent_id": "10-2023-0113173", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0028932", "출원번호": "10-2023-0113173", "발명의 명칭": "프로세스의 실행을 제어하기 위한 전자 장치 및 그 방법", "출원인": "삼성전자주식회사", "발명자": "신영철"}}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치(electronic device)(101; 901, 902)에 있어서,인스트럭션들을 저장하기 위한 메모리(120); 및상기 인스트럭션들을 실행하기 위한 프로세서(110)를 포함하고,상기 프로세서는,복수의 프로세스들에 기반하여 상기 인스트럭션들을 실행하는 동안, 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹을 결정하고;상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 기반하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용되는 시간 구간의 길이를 조절하고;및상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 프로세서는,상기 복수의 프로세스들 각각에 할당된(assigned) 가중치들에 기반하여, 상기 복수의 프로세스들 각각을 실행하기 위하여 이용되는 시간 구간들의 길이들을 결정하고;상기 복수의 프로세스들 각각에 할당된 가중치들은,상기 백그라운드 내 실행을 위한 제1 스케쥴 그룹에 대응하는 제1 프로세스 그룹과 관련된 제1 가중치 및 상기제1 프로세스 그룹과 상이한 제2 프로세스 그룹과 관련된 제2 가중치 중에서 선택되는,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1 내지 청구항 2에 있어서, 상기 프로세서는,상기 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에기반하여 식별된 터치 입력 중 적어도 하나에 기반하여, 상기 제1 가중치를 조절하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1 내지 청구항 3에 있어서, 상기 프로세서는,상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하는 제1 프로세스 그룹으로 분류하도록, 구성된,공개특허 10-2025-0028932-3-전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1 내지 청구항 4에 있어서, 상기 프로세서는,상기 제1 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹들로 스위칭된 상기 적어도 하나의 프로세스를, 루트 프로세스 그룹으로 분류하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1 내지 청구항 5에 있어서, 상기 프로세서는,상기 복수의 프로세스들 사이의 정보의 송신을 위한 요청들에 기반하여, 지정된 딜레이에 기반하여 상기 요청들각각에 대응하는 프로세스들을 순차적으로(sequentially) 실행하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1 내지 청구항 6에 있어서, 상기 프로세서는,상기 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에기반하여 식별된 터치 이벤트 중 적어도 하나에 기반하여, 상기 지정된 딜레이를 조절하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1 내지 청구항 7에 있어서, 상기 프로세서는,인텐트 객체에 기반하는 상기 요청들을 탐지하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 1 내지 청구항 8에 있어서, 상기 프로세서는,상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 상기 복수의 프로세스들을, 백그라운드 내실행을 위한 제1 프로세스 그룹 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹 중 어느 한 그룹으로분류하도록, 구성된,전자 장치."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "전자 장치의 방법에 있어서,복수의 프로세스들에 기반하여 인스트럭션들을 실행하는 동안, 상기 복수의 프로세스들의 상태들에 기반하여,상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹을 결정하는 동작;공개특허 10-2025-0028932-4-상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용되는 시간 구간의 길이를 조절하는동작; 및상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 10에 있어서,상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하는 제1 프로세스 그룹으로 분류하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 10 내지 청구항 11에 있어서,상기 제1 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹들로 스위칭된 상기 적어도 하나의 프로세스를, 루트 프로세스 그룹으로 분류하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 10 내지 청구항 12에 있어서, 상기 조절하는 동작은,상기 복수의 프로세스들 각각에 할당된 가중치들에 기반하여, 상기 복수의 프로세스들 각각을 실행하기 위하여이용되는 시간 구간들의 길이들을 결정하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 10 내지 청구항 13에 있어서, 상기 복수의 프로세스들 각각에 할당된 가중치들은,상기 백그라운드 내 실행을 위한 제1 스케쥴 그룹에 대응하는 제1 프로세스 그룹과 관련된 제1 가중치 및 상기제1 프로세스 그룹과 상이한 제2 프로세스 그룹과 관련된 제2 가중치 중에서 선택되는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 10 내지 청구항 14에 있어서, 상기 조절하는 동작은,상기 전자 장치의 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의터치 센서에 기반하여 식별된 터치 입력 중 적어도 하나에 기반하여, 상기 제1 가중치를 조절하는 동작을 포함하는,공개특허 10-2025-0028932-5-방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 10 내지 청구항 15에 있어서,상기 복수의 프로세스들 사이의 정보의 송신을 위한 요청들에 기반하여, 지정된 딜레이에 기반하여 상기 요청들각각에 대응하는 프로세스들을 순차적으로 실행하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 10 내지 청구항 16에 있어서, 상기 요청들 각각에 대응하는 프로세스들을 순차적으로 실행하는 동작은,상기 전자 장치의 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의터치 센서에 기반하여 식별된 터치 이벤트 중 적어도 하나에 기반하여, 상기 지정된 딜레이를 조절하는 동작을포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 10 내지 청구항 17에 있어서,인텐트 객체에 기반하는 상기 요청들을 탐지하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 10 내지 청구항 18에 있어서,상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 상기 복수의 프로세스들을, 백그라운드 내실행을 위한 제1 프로세스 그룹 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹 중 어느 한 그룹으로분류하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0113173", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체에 있어서, 상기 인스트럭션들은, 전자 장치의프로세서에 의해 실행될 시에, 청구항 10 내지 청구항 19의 동작들 중 어느 한 동작을 실행하도록, 상기 전자장치를 야기하는,비-일시적 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예(an embodiment)에 따른, 전자 장치의 프로세서는, 복수의 프로세스들에 기반하여 인스트럭션들을 실행 하는 동안, 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹 을 결정할 수 있다. 상기 프로세서는, 상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백 그라운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹 들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이 용되는 시간 구간의 길이를 조절할 수 있다. 상기 프로세서는, 상기 조절된 길이를 가지는 상기 시간 구간 내에 서 상기 적어도 하나의 프로세스를 실행할 수 있다."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시(disclosure)는, 프로세스의 실행을 제어하기 위한 전자 장치 및 그 방법에 관한 것이다."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "복수의 프로세스들 및/또는 복수의 스레드들을 이용하여, 전자 장치의 프로세서(예, CPU(central processing unit))는 복수의 기능들을 실질적으로 동시에 실행하는 멀티태스킹을 지원할 수 있다. 프로세서 및/또는 상기 프로세서에 의해 실행되는 시스템 프로세스(또는 운영 체제)는, 프로세서가 상기 복수의 프로세스들 및/또는 상 기 복수의 스레드들 각각에 의해 점유되는(occupied) 시간 구간(또는 타임 슬롯)을 스케쥴링할 수 있다. 상술한 정보는 본 개시에 대한 이해를 돕기 위한 목적으로 하는 배경 기술(related art)로 제공될 수 있다. 상 술한 내용 중 어느 것도 본 개시와 관련된 종래 기술(prior art)로서 적용될 수 있는지에 대하여 어떠한 주장이 나 결정이 제기되지 않는다."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예(an embodiment)에 따른, 전자 장치(electronic device)는, 인스트럭션들을 저장하기 위한 메모리 및 상기 인스트럭션들을 실행하기 위한 프로세서를 포함할 수 있다. 상기 프로세서는, 복수의 프로세스들에 기반 하여 인스트럭션들을 실행하는 동안, 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각 각에 대응하는 스케쥴 그룹을 결정하도록, 구성될 수 있다. 상기 프로세서는, 상기 스케쥴 그룹의 결정에 의하 여, 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹으로 스 위칭하거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용되는 시간 구간의 길이를 조절하도록, 구성될 수 있다. 상기 프로 세서는, 상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행하도록, 구성될 수 있다. 일 실시예에 따른, 전자 장치의 방법은, 복수의 프로세스들에 기반하여 인스트럭션들을 실행하는 동안, 상기 복 수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹을 결정하는 동작 을 포함할 수 있다. 상기 방법은, 상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백그라 운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들 로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용 되는 시간 구간의 길이를 조절하는 동작을 포함할 수 있다. 상기 방법은, 상기 조절된 길이를 가지는 상기 시 간 구간 내에서 상기 적어도 하나의 프로세스를 실행하는 동작을 포함할 수 있다. 일 실시예에 따른, 비-일시적 컴퓨터 판독 가능 저장 매체는, 인스트럭션들을 포함할 수 있다. 상기 인스트럭 션들은, 전자 장치의 프로세서에 의해 실행될 시에, 복수의 프로세스들의 상태에 기반하여, 상기 복수의 프로세 스들 각각에 대응하는 스케쥴 그룹을 결정하도록, 상기 프로세서를 야기할 수 있다. 상기 인스트럭션들은, 상 기 프로세서에 의해 실행될 시에, 상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백그라 운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들 로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용 되는 시간 구간의 길이를 조절하도록, 상기 프로세서를 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서 에 의해 실행될 시에, 상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행 하도록, 상기 프로세서를 야기할 수 있다."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시예들이 첨부된 도면을 참조하여 설명된다. 본 문서의 다양한 실시 예들 및 이에 사용된 용어들은 본 문서에 기재된 기술을 특정한 실시 형태에 대해 한정 하려는 것이 아니며, 해당 실시 예의 다양한 변경, 균등물, 및/또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 단수의 표현 은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및/ 또는 B 중 적어도 하나\", \"A, B 또는 C\" 또는 \"A, B 및/또는 C 중 적어도 하나\" 등의 표현은 함께 나열된 항목 들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", \"첫째\" 또는 \"둘째\" 등의 표현들은 해당 구성요소들 을, 순서 또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해 당 구성요소들을 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에 \"(기능적으로 또는 통신적으로) 연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소 에 직접적으로 연결되거나, 다른 구성요소(예: 제 3 구성요소)를 통하여 연결될 수 있다. 본 문서에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구성된 유닛을 포함하며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는 최소 단위 또는 그 일부가 될 수 있다. 예를 들면, 모듈은 ASIC(application-specific integrated circuit)으로 구성될 수 있다. 도 1은, 일 실시예에 따른, 전자 장치의 하드웨어 구성을 설명하기 위한 예시적인 블록도를 도시한다. 사 용자에 의해 소유되는 관점에서(in terms of), 전자 장치는 단말(또는 사용자 단말)로 지칭될(referred as) 수 있다. 단말은, 스마트워치(smartwatch)(101-1), 스마트 링(101-2) 및/또는 HMD(head-mounted device) 와 같은 스마트액세서리를 포함할 수 있다. 단말은, 예를 들어, 랩톱 및 데스크톱과 같은 개인용 컴퓨터 (personal computer, PC)를 포함할 수 있다. 단말은, 예를 들어, 스마트폰(smartphone)(101-3), 스마트패드 (smartpad), 및/또는 태블릿 PC를 포함할 수 있다. 도 1을 참고하면, 전자 장치의 예시적인 폼 팩터로, 스마트워치(101-1), 스마트링(101-2) 및/또는 스마트폰(101-3)이 도시된다. 실시예가 이에 제한되는 것은 아니 다. 일 실시예에 따른, 전자 장치는, 켜진 동안, 하나 이상의 작업들(tasks)을 수행할 수 있다. 하나 이상의 작업들을 수행하기 위하여, 전자 장치는, 전자 장치에 포함된 하나 이상의 회로들을 활성화하기 위한 동작(예, 부팅)을 수행할 수 있다. 부팅 이후, 전자 장치는, 상기 하나 이상의 회로들을 이용하여, 상기 하나 이상의 작업들을 수행할 수 있다. 도 1을 참고하면, 전자 장치에 포함된 하나 이상의 회로들이 블록 들로 도시된다. 도 1을 참고하면, 전자 장치는, 프로세서, 메모리, 디스플레이, 센서 또는 통신 회로 중 적어도 하나를 포함할 수 있다. 프로세서, 메모리, 디스플레이, 센서 및 통신 회로는 통신 버스(a communication bus)와 같은 전자 부품(electronical component)에 의해 서로 전 기적으로 및/또는 작동적으로 연결될 수 있다(electronically and/or operably coupled with each other). 이 하에서, 전자 부품들(또는 하드웨어 컴포넌트들)이 작동적으로 결합된 것은, 제1 전자 부품에 의해 제2 전자 부 품이 제어되도록, 전자 부품들 사이의 직접적인 연결, 또는 간접적인 연결이 유선으로, 또는 무선으로 수립된 것을 의미할 수 있다. 상이한 블록들에 기반하여 도시되었으나, 실시예가 이에 제한되는 것은 아니며, 도 1의하드웨어들 중 일부분(예, 프로세서, 메모리, 센서 및 통신 회로의 적어도 일부분)이 SoC(system on a chip)와 같이 단일 집적 회로(single integrated circuit)에 포함될 수 있다. 전자 장치 에 포함된 하드웨어 컴포넌트의 타입 및/또는 개수는 도 1에 도시된 바에 제한되지 않는다. 예를 들어, 전자 장치는 도 1에 도시된 하드웨어 컴포넌트들 중 일부만 포함할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 하나 이상의 인스트럭션들에 기반하여 데이터를 처리하기 위한 하드웨어 컴포넌트를 포함할 수 있다. 데이터를 처리하기 위한 하드웨어 컴포넌트는, 예를 들어, ALU(arithmetic and logic unit), FPU(floating point unit), FPGA(field programmable gate array), CPU(central processing unit), 및/또는 AP(application processor)를 포함할 수 있다. 프로세서의 개수 는 하나 이상일 수 있다. 예를 들어, 프로세서는 듀얼 코어(dual core), 쿼드 코어(quad core), 헥사 코 어(hexa core) 또는 옥타 코어(octa core)와 같은 멀티-코어 프로세서의 구조를 가질 수 있다. 멀티-코어 구조 에 기반하는 프로세서는, 빅-리틀 구조에 기반하여, 상이한 성능, 소비 전류들, 및/또는 주파수 범위들을 가지는 코어 회로들을 포함할 수 있다. 일 실시예에 따른, 프로세서는, 프로세스(process)(또는 스레드)에 기반하여, 전자 장치에 의해 수행 될 하나 이상의 작업들을 관리할 수 있거나, 또는 스케쥴링할 수 있다. 프로세스는, 프로세서에 의해 수 행되는 작업 및/또는 계산의 단위일 수 있다. 프로세서는, 전자 장치에 설치된 프로그램(또는 소프 트웨어 어플리케이션)에 의해 구분되는 프로세스를 생성할 수 있거나, 종료할 수 있거나, 또는 관리할 수 있다. 복수의 프로세스들(또는 스레드들)이 생성된 경우, 프로세서는, 인스트럭션들(예, 상이한 소프트웨어 어플 리케이션들에 포함된 인스트럭션들)이 실행되는 순서 및/또는 시간 구간을, 상기 복수의 프로세스들에 기반하여 스케쥴링할 수 있다. 프로세스들에 기반하는 프로세서의 스케쥴링 동작의 일 예가, 도 2를 참고하여 설명 된다. 일 실시예에 따른, 전자 장치의 메모리는 프로세서에 입력 및/또는 출력되는 데이터 및/또는 인 스트럭션을 저장하기 위한 하드웨어 컴포넌트를 포함할 수 있다. 메모리는, 예를 들어, RAM(random- access memory)와 같은 휘발성 메모리(volatile memory) 및/또는 ROM(read-only memory)와 같은 비휘발성 메모 리(non-volatile memory)를 포함할 수 있다. 휘발성 메모리는, 예를 들어, DRAM(dynamic RAM), SRAM(static RAM), Cache RAM, PSRAM (pseudo SRAM) 중 적어도 하나를 포함할 수 있다. 비휘발성 메모리는, 예를 들어, PROM(programmable ROM), EPROM (erasable PROM), EEPROM (electrically erasable PROM), 플래시 메모리, 하 드디스크, 컴팩트 디스크, SSD(solid state drive), eMMC(embedded multi media card) 중 적어도 하나를 포함 할 수 있다. 일 실시예에 따른, 전자 장치의 디스플레이는 사용자에게 시각화된 정보를 출력할 수 있다. 예를 들 어, 디스플레이는, GPU(graphic processing unit)와 같은 컨트롤러에 의해 제어되어, 사용자에게 시각화된 정보(visualized information)를 출력할 수 있다. 디스플레이는 LCD(liquid crystal display), PDP(plasma display panel) 및/또는 하나 이상의 LED(light emitting diode)를 포함할 수 있다. 상기 LED는 OLED(organic LED)를 포함할 수 있다. 디스플레이는 FPD(flat panel display), 플렉서블 디스플레이 및/ 또는 전자 종이(electronic paper)를 포함할 수 있다. 실시예가 이에 제한되지 않으며, 디스플레이는 적 어도 부분적으로 휘어진 형태를 가지거나, 변형가능한(deformable) 형태를 가질 수 있다. 일 실시예에 따른, 전자 장치의 센서는 전자 장치와 관련된 비-전기적 정보(non-electronic information)로부터 프로세서 및/또는 메모리에 의해 처리될 수 있는 전기적 정보를 생성할 수 있다. 예를 들어, 센서는, 전자 장치의 하우징의 일 면(예, 디스플레이)가 배치된 전자 장치의 전 면(front surface)) 상의 외부 객체(예, 사용자의 손가락)을 탐지하기 위한 터치 센서를 포함할 수 있 다. 상기 터치 센서는, TSP(touch sensor panel)로 지칭될 수 있다. 터치 센서를 이용하여, 프로 세서는 디스플레이와 접촉하거나, 또는 디스플레이 상을 부유하는(floating) 외부 객체를 탐지 할 수 있다. 상기 외부 객체를 탐지하는 것에 응답하여, 프로세서는 디스플레이 상에 표시되고 있는 시각적 객체들 중에서 디스플레이 상에서의 상기 외부 객체의 위치에 대응하는 특정 시각적 객체와 관련된 기능을 실행할 수 있다. 도 1을 참고하면, 센서의 일 예로, 터치 센서가 예시되었지만, 실시예가 이에 제한되는 것은 아니며, 센서는, GPS(global positioning system) 센서를 포함할 수 있다. 상기 GPS 센서 외에도, 센서는, 갈릴레오(galileo), 및/또는 베이더우(beidou, compass)와 같은 GNSS(global navigation satellite system)에 기반하여 전자 장치의 지리적 위치를 나타내는 정보를 생성할 수 있다. 센서는, 빛을 포함하는 전자기파를 탐지하기 위한 이미지 센서, 조도 센서, 그립 센서, 홀(hall) 센서, 근접 센서, PPG(photoplethysmogram) 센서, 지문 센서, 오디오 센서(예, 마이크), 및/또는 ToF(time-of-flight) 센서를 포 함할 수 있다. 일 실시예에 따른, 전자 장치의 통신 회로는 전자 장치 및 외부 전자 장치 사이의 전기 신호의 송신 및/또는 수신을 지원하기 위한 하드웨어를 포함할 수 있다. 통신 회로는, 예를 들어, 모뎀(MODEM), 안테나, O/E(optic/electronic) 변환기 중 적어도 하나를 포함할 수 있다. 통신 회로는, 이더넷 (ethernet), LAN(local area network), WAN(wide area network), WiFi(wireless fidelity), NFC(near field communication), Bluetooth, BLE(bluetooth low energy), ZigBee, LTE(long term evolution), 5G(fifth- generation) NR(new radio), 6G(sixth-generation) 및/또는 above-6G와 같은 다양한 타입의 프로토콜에 기반하 여 전기 신호의 송신 및/또는 수신을 지원할 수 있다. 비록 도시되지 않았지만, 일 실시예에 따른 전자 장치는 정보를 시각화한 형태 외에 다른 형태로 출력하기 위한 출력 수단을 포함할 수 있다. 예를 들어, 전자 장치는 음성 신호(acoustic signal)를 출력하기 위한 스피커를 포함할 수 있다. 예를 들어, 전자 장치는 진동에 기반하는 햅틱 피드백을 제공하기 위한 모터를 포함할 수 있다. 일 실시예에 따른, 메모리 내에서, 프로세서가 데이터에 수행할 연산, 및/또는 동작을 나타내는 하나 이상의 인스트럭션들(또는 명령어들)이 저장될 수 있다. 하나 이상의 인스트럭션들의 집합은, 펌웨어, 운영 체 제, 프로세스, 루틴, 서브-루틴 및/또는 소프트웨어 어플리케이션(이하, 어플리케이션)으로 참조될 수 있다. 예를 들어, 전자 장치, 및/또는 프로세서는, 운영체제, 펌웨어, 드라이버, 및/또는 어플리케이션 형 태로 배포된 복수의 인스트럭션의 집합(set of a plurality of instructions)이 실행될 시에, 도 2, 도 4 및/ 또는 도 6의 동작들 중 적어도 하나를 수행할 수 있다. 이하에서, 어플리케이션이 전자 장치에 설치되었 다는 것은, 어플리케이션의 형태로 제공된 하나 이상의 인스트럭션들이 전자 장치의 메모리 내에 저 장된 것으로써, 상기 하나 이상의 어플리케이션들이 전자 장치의 프로세서에 의해 실행 가능한 (executable) 포맷(예, 전자 장치의 운영 체제에 의해 지정된 확장자를 가지는 파일)으로 저장된 것을 의 미할 수 있다. 도 1을 참고하면, 메모리 내에 저장된 프로그램들이, 프로그램들 각각에 의해 지원되는 기능들 및/또는 상 기 프로그램들 사이에서 교환되는(exchanged) 정보에 따라 구분되어 도시된다. 도 1을 참고하면, 전자 장치 에 설치된 프로그램들은, 타겟에 기반하여, 어플리케이션 계층(layer), 플랫폼 계층, 네이티브 (native) 계층 및/또는 커널(kernel) 계층을 포함하는 상이한 레이어들 중 어느 한 레이어로 분류될 수 있다. 실시예가 이에 제한되는 것은 아니며, 상기 레이어들은, 하드웨어 추상화 레이어(hardware abstraction layer, HAL)와 같은 다른 레이어를 더 포함할 수 있다. 도 1을 참고하면, 스케쥴러와 같이, 프로세서로 입력되는 인스트럭션들 및/또는 프로세서에 의 해 실행되는 프로세스(또는 스레드)의 순서를 조절하기 위한 프로그램이, 커널 계층으로 분류될 수 있다. 프로세스 그룹 라이브러리(예, libprocessgroup)와 같이, 상기 프로세스의 순서를 조절하는데 이용되는 정 보를 관리하기 위한 프로그램이, 네이티브 계층으로 분류될 수 있다. 네이티브 계층에 포함되는 프 로그램은, 자바 바이트 코드(java byte code)와 같이, 가상 머신에 기반하여 실행 가능한 타입의 인스트럭션들 과 상이한 인스트럭션들(예, 프로세서에 의해 직접적으로 판독 가능한 인스트럭션들)로 구성될 수 있다. 실시예가 이에 제한되는 것은 아니다. 플랫폼 계층은, 어플리케이션 계층으로 분류되는 소프트웨어 어플리케이션(또는 응용 프로그램)에 기반하여 실행가능한(또는 호출(invoke 또는 call) 가능한) API(application programming interface)를 제공할 수 있다. 액티비티매니저 서비스와 같이, 어플리케이 션 계층으로 분류된 프로그램에 의해 제공된 화면(예, 윈도우 및/또는 액티비티(activity))을 관리하기 위 한 프로그램이, 플랫폼 계층으로 분류될 수 있다. 도 1을 참고하면, 플랫폼 계층, 네이티브 계층 및/또는 커널 계층으로 구분된 프로그램들이 도 시되지만, 실시예가 이에 제한되는 것은 아니다. 플랫폼 계층, 네이티브 계층 및/또는 커널 계층 으로 구분된 프로그램들 중 적어도 두 프로그램들의 기능들 및/또는 동작들이 하나의 프로그램으로 통합될 수 있다. 전자 장치 및/또는 프로세서의 동작이 플랫폼 계층, 네이티브 계층 및/또는 커 널 계층으로 구분된 프로그램들에 의해 구분되어 설명되지만, 실시예가 이에 제한되는 것은 아니다. 예를 들어, 도 2 내지 도 8을 참고하여 설명되는 전자 장치 및/또는 프로세서의 동작은, 단일 프로그램 및 /또는 단일 프로세스에 의해 수행될 수 있다. 일 실시예에 따르면, 어플리케이션 계층 내에, 전자 장치의 사용자를 타겟으로 설계된 프로그램이 분 류될 수 있다. 어플리케이션 계층으로 분류되는 프로그램들의 일 예로, 사진 및/또는 비디오의 열람 (browsing)을 위한 갤러리 어플리케이션, 음성 통화 및/또는 화상 통화를 위한 통화 어플리케이션 및 /또는 게임 어플리케이션이 예시되지만, 실시예가 이에 제한되는 것은 아니다. 예를 들어, 어플리케이션 계층으로 분류되는 프로그램들(예, 소프트웨어 어플리케이션)은, API(application programming interface)를 호출하여, 플랫폼 계층으로 분류되는 프로그램들에 의해 지원되는 기능의 실행을 야기할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는, 도 1의 블록들로 구분되어 도시된 프로그램들의 실행을, 프로세스에 기반하여 제어할 수 있다. 복수의 프로세스들에 기반하여 인스트럭션들을 실행하는 동안, 프로세서 는 상기 복수의 프로세스들의 상태들을 탐지할 수 있거나, 또는 확인할 수 있다. 프로세서는 프로세 스들의 상태들에 기반하여, 프로세스들을, 지정된(preset 또는 predetermined 또는 specified) 스케쥴 그룹들로 분류할 수 있다. 상기 스케쥴 그룹들은, 제한하지 않는 예로, 탑-어플리케이션 스케쥴 그룹, 포어그라운드 (foreground) 스케쥴 그룹, 백그라운드 스케쥴 그룹 및/또는 루트(root) 스케쥴 그룹을 포함할 수 있다. 스케 쥴 그룹은 sched group으로 지칭될(referred) 수 있다. 전자 장치의 프로세서가 스케쥴 그룹들 중 어느 하나로 프로세스를 분류하는 동작이 도 3을 참고하여 설명된다. 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스들을 스케쥴 그룹으로 분류한 결과에 기반하여, 상기 프로세스들 각각의 실행에 이용될 자원을 스케쥴링할 수 있다. 상기 자원은, 프로세스의 실행을 위해 소 비되거나 또는 점유되는 프로세서 및/또는 전자 장치의 가용성(availability)을 나타낼 수 있다. 프 로세서에 의해 스케쥴링 되는 자원은, 프로세스의 인스트럭션들을 실행하기 위하여 이용되는 프로세서 의 시간 구간의 길이를 포함할 수 있다. 실시예가 이에 제한되는 것은 아니며, 프로세서에 의해 스 케쥴링되는 자원은, 메모리 내에서 프로세스를 위해 할당된 부분의 사이즈 및/또는 네트워크를 이용하기 위하여 프로세스에 할당된 포트 넘버를 포함할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 스케쥴링의 빈도를 줄여, 프로세스들의 실행이 스케쥴링 을 위해 지연되는 것을 방지할 수 있거나, 또는 줄일 수 있다. 프로세서가 스케쥴링에 기반하여, 프로세 스의 인스트럭션들을 실행하기 위한 시간 구간의 길이를 결정하는 동작이, 도 4 및/또는 도 5를 참고하여 설명 된다. 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스들 사이의 정보의 송신 및/또는 수신을 위한 기 능을 지원할 수 있다. 상기 기능은, 플랫폼 계층에 의해 제공되는 API 및/또는 지정된 데이터 구조(예, 인텐트(intent) 객체)에 기반하여, 실행될 수 있다. 예를 들어, 프로세서는 특정 프로세스의 인스트럭션 들에 기반하는 상기 API의 호출에 응답하여, 다른 프로세스의 인스트럭션들을 실행할 수 있다. 일 실시예에서, 프로세서는, 프로세스들의 실행에 의해 변경되는 프로세서의 사용량(usage)에 기반하여, 프로세스들 사이의 정보의 송신을 위한 상기 기능을 실행하는 타이밍을 조절할 수 있다(예, 딜레이). 프로세서가 상 기 기능을 실행하는 타이밍을 조절하는 동작이, 도 6 및/또는 도 7을 참고하여 설명된다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세서의 부하를 줄이기 위한 동작을 수행할 수 있다. 저전력 장치 및/또는 저성능 장치의 응답 속도(예, 사용자 입력에 대한 전자 장치 의 반응 속도)를 개선하기 위하여, 전자 장치는, 프로세스들을 스케쥴링하는 빈도를 줄이거나, 또는 프로세스들을 스케쥴링하는 동작을 간소화할 수 있다. 예를 들어, 저성능 장치의 경우, 스케쥴링에 소비되는 시간 및/또는 부하가 응답 속도를 느리게 만들 수 있기 때문에, 전자 장치의 프로세서는 프로세스들 을 스케쥴링하는 빈도를 줄일 수 있다. 상기 응답 속도를 개선하기 위하여 전자 장치는 프로세스들 사이 에서 정보를 송신하는 기능을 실행하는 타이밍을 변경할 수 있다. 도 2는, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 1의 전자 장치 및/또는 프로세서 는 도 2를 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스의 상태의 변경을 탐 지할 수 있다. 동작의 상태는, 프로세서에 의해 실행되는 프로세스의 실행 상태를 포함할 수 있다. 일 실시예에 따라, 동작의 상태는, 프로세스에 의해 제공된 화면이 전자 장치의 디스플레이(예, 도 2의 디스 플레이) 상에 표시되는지 여부, 프로세스에 의해 제공된 오디오 신호가 전자 장치의 스피커를 통해 출력되는지 여부, 화면 전환을 위한 애니메이션이 프로세스에 의해 재생되는지 여부, 또는 다운로드, 업로드 및/또는 업데이트와 같은 동작이 프로세스에 의해 수행되는지 여부 중 적어도 하나에 의해 구분될 수 있다. 일 실시예에 따라, 전자 장치의 프로세서는, 프로세스에 포함된 인스트럭션들에 기반하여, 상기 프로세스의 상 태의 변경을 탐지할 수 있다. 예를 들어, 전자 장치의 출력 수단(예, 도 2의 디스플레이(130 및/또는 스피 커))을 점유하지 않는 백그라운드 상태로 스위칭하기 위한 인스트럭션들을 실행하는 것에 기반하여, 프로세서는, 상기 인스트럭션들에 대응하는 프로세스를, 상기 백그라운드 상태로 스위칭할 수 있다. 실시예가 이에 제한되는 것은 아니며, 프로세서는, 프로세스의 상태를 추적하거나 또는 모니터링하여, 프로세스의 상태의 변경을 탐지할 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 변경된 상태에 기반하여, 프 로세스에 대응하는 스케쥴 그룹을, 복수의 지정된 스케쥴 그룹들 중에서 결정할 수 있다. 복수의 프로세스들을 실행하는 동안, 프로세서는 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응 하는 스케쥴 그룹을 결정할 수 있다. 일 실시예에 따르면, 동작의 지정된 스케쥴 그룹들은, 전자 장치의 디스플레이(예, 도 2의 디스플레이 ) 상에 표시되는 화면을 제공하는 프로세스에 대응하는 탑-어플리케이션 스케쥴 그룹을 포함할 수 있다. 동작의 지정된 스케쥴 그룹들은 탑-어플리케이션 스케쥴 그룹에 포함되지 않은 프로세스에 대응하고, 전자 장치에 의해 출력되는 오디오 신호를 제공하거나, 디스플레이 상에 표시되는 애니메이션(또는 시각 효과)을 제 공하는 프로세스에 대응하는 포어그라운드(foreground) 스케쥴 그룹을 포함할 수 있다. 동작의 지정된 스 케쥴 그룹들은, 상기 탑-어플리케이션 스케쥴 그룹 및/또는 포어그라운드 스케쥴 그룹에 포함되지 않은 프로세 스에 대응하는, 백그라운드 스케쥴 그룹 및/또는 루트(root) 스케쥴 그룹을 포함할 수 있다. 예를 들어, 프로 세서는, 백그라운드 상태로 스위칭된 프로세스를, 백그라운드 스케쥴 그룹으로 분류할 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스가 백그라운드 실행 과 관련된 제1 지정된 스케쥴 그룹에 포함되는지 여부를 확인할 수 있다. 동작의 제1 지정된 스케쥴 그룹 은, 백그라운드 스케쥴 그룹을 포함할 수 있다. 상태의 변경에 기반하여 제1 지정된 스케쥴 그룹으로 분류된 프로세스를 식별한 경우(230-예), 프로세서는 동작을 수행할 수 있다. 예를 들어, 프로세서에 대응하는 스케쥴 그룹이, 백그라운드 스케쥴 그룹과 상이한 다른 스케쥴 그룹들로부터 상기 백그라운드 스케쥴 그룹으로 변경된 경우, 프로세서는 동작을 수행할 수 있다 상태의 변경에 기반하여 제1 지정된 스케쥴 그룹으로 분 류되지 않은 프로세스를 식별한 경우(230-아니오), 프로세서는 동작을 수행할 수 있다.. 예를 들어, 프로 세서에 대응하는 스케쥴 그룹이 백그라운드 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹으로 변경된 경우, 프로 세서는 동작을 수행할 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스에 대응하는 프로세 스 그룹을, 백그라운드 실행과 관련된 백그라운드 프로세스 그룹으로 변경할 수 있다. 프로세스 그룹은 프로세 스 제어 그룹 및/또는 cgroup으로 지칭될 수 있다. 프로세스 그룹은 프로세서 및/또는 전자 장치의 자원을 할 당하기 위하여, 프로세스를 분류하기 위한 그룹일 수 있다. 예를 들어, 백그라운드 스케쥴 그룹과 상이한 다른 스케쥴 그룹들로부터 상기 백그라운드 스케쥴 그룹으로 스위칭된 프로세스에 대하여, 프로세서는 상기 프로세스 를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하는 백그라운드 프로세스 그룹으로 분류할 수 있다. 일 실시예에서, 자원의 분배 및/또는 할당을 위한 프로세스 그룹은, 두 개의 프로세스 그룹들(예, 백그라운드 프로 세스 그룹 및 상기 백그라운드 프로세스 그룹과 상이한 프로세스를 분류하기 위한 루트(root) 프로세스 그룹) 만으로 구분될 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스에 대응하는 프로세 스 그룹을, 루트 프로세스 그룹으로 변경할 수 있다. 프로세서가 두 개의 프로세스 그룹들을 이용하여 프로세 스를 분류하는 일 실시예에서, 동작의 백그라운드 프로세스 그룹으로 분류된 하나 이상의 프로세스들과 다 른 나머지 프로세스들이, 동작의 루트 프로세스 그룹으로 분류될 수 있다. 도 2의 동작들(230, 240, 25 0)을 참고하면, 백그라운드 내에서 실행되는 프로세스가 백그라운드 프로세스 그룹으로 분류될 수 있고, 상기 백그라운드 프로세스 그룹으로 분류되지 않은 다른 프로세스들이, 루트 프로세스 그룹으로 분류될 수 있다. 예 를 들어, 프로세서는, 복수의 프로세스들을, 백그라운드 프로세스 그룹 또는 루트 프로세스 그룹 중 어느 한 프 로세스 그룹으로 분류할 수 있다. 도 2를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 백그라운드 프로세스 그룹 및 /또는 루트 프로세스 그룹의 프로파일 정보에 기반하여, 프로세스의 실행과 관련된 프로세서의 스케쥴링을 수행할 수 있다. 도 2를 참고하면, 프로세서는 동작들(230, 240, 250)에 기반하여, 백그라운드 프로세스 그룹 또는 루트 프로세스 그룹으로 분류된 프로세스들의 스케쥴링을, 대응하는 프로세스 그룹의 프로파일 정보에 기반하여 수행할 수 있다. 일 실시예에 따르면, 동작의 프로파일 정보는, 전자 장치에 의해 이용되는 프로세스 그룹(예, 동작들(240, 250)의 백그라운드 프로세스 그룹 및/또는 루트 프로세스 그룹)에 대응할 수 있다. 프로파일 정보는, 프로세스 그룹에 포함된 프로세스의 실행을 위해 이용되는 프로세서의 시간, 메모리(예, 도 2의 메모리)의 입력 및 출력의 제한 및/또는 메모리 내에 프로세스의 실행을 위해 형성된 캐시 및/또는 페이지의 사이즈를 포함할 수 있다. 전자 장치가 계층화된 프로세스 그룹들에 기반하여 프로세스를 관리하는 경우, 특정 프로세스 그룹의 자 식(child) 프로세스 그룹은, 상기 특정 프로세스 그룹의 프로파일 정보의 적어도 일부분을 상속할 수 있다. 상 기 상속에 기반하여, 자식 프로세스 그룹에 포함된 프로세스에 대한 스케쥴링은, 상기 특정 프로세스 그룹의 프 로파일 정보에 기반하여 수행될 수 있다. 일 실시예에 따르면, 동작의 스케쥴링에 기반하여, 프로세서는, 프로세서가 프로세스들 각각을 실행하는데 점유되는 시간을 결정할 수 있다. 예를 들어, 프로세서는 프로세스의 실행을 위해 이용되는 시간 구간의 길이 (length 또는 duration)를 조절할 수 있다. 일 실시예에서, 프로세서는, 적어도 하나의 프로세스를 백그라운드 내 실행을 위한 제1 지정된 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹 들로부터 상기 제1 지정된 스케쥴 그룹으로 스위칭하는 경우, 동작의 스케쥴링을 수행할 수 있다. 예를 들어, 상기 적어도 하나의 프로세스를 탐지하는 것에 응답하여, 프로세서는 상기 적어도 하나의 프로세스의 실 행을 위해 이용되는 시간 구간의 길이를 조절할 수 있다. 프로세서는 상기 조절된 길이를 가지는 시간 구간 내 에서 상기 적어도 하나의 프로세스를 실행할 수 있다. 일 실시예에 따라, 전자 장치의 프로세서가 동작의 스케쥴링을 수행하는 동안, 프로세서(또는 프로세서에 포함된 특정 코어)에 기반하는 프로세스 및/또는 스레드의 실행이 적어도 일시적으로 중단될 수 있다. 프로세 서는, 동작들(240, 250)과 같이, 단순화된 프로세스 그룹들(예, 백그라운드 프로세스 그룹 및/또는 루트 프로세 스 그룹)에 기반하는 프로세스의 분류에 기반하여, 스케쥴링 동작을 단순화할 수 있다. 단순화된 프로세스 그 룹들이 이용되기 때문에, 프로세서는 프로세스 그룹의 변경에 따라 스케쥴링을 다시 수행하는 빈도(및/또는 횟 수)를 줄일 수 있다. 스케쥴링에 의한 프로세스 및/또는 스레드의 실행이 중단되는 빈도 및/또는 시간이 줄어 들기 때문에, 사용자 입력과 같은 다른 이벤트에 대한 프로세서의 응답 속도가 증가될 수 있다. 도 2의 동작들은, 도 1을 참고하여 설명된 전자 장치의 상이한 프로그램들에 의해 수행될 수 있다. 예를 들어, 스케쥴 그룹을 분류하기 위한 동작이, 도 1의 액티비티매니저 서비스의 실행에 기반하여, 수행될 수 있다. 도 1의 액티비티매니저 서비스의 실행에 기반하여, 프로세서는 동작들(230, 240, 250)을 수행할 수 있다. 도 1의 액티비티매니저 서비스를 실행한 프로세서는, 프로세스에 대응하는 프로세스 그룹을 분류한 결과에 기반하여, 도 1의 프로세스 그룹 라이브러리를 실행할 수 있다. 도 1의 프로세스 그룹 라이브러리 를 실행한 프로세서는, 프로세스 그룹 각각에 대응하는 프로파일 정보를 식별할 수 있다. 식별된 프로파 일 정보에 기반하여, 프로세서는 동작의 스케쥴링을 수행할 수 있다. 동작의 스케쥴링은, 도 1의 프 로세스 그룹 라이브러리 및/또는 커널 계층의 스케쥴러의 실행에 기반하여, 수행될 수 있다. 이하에서는, 도 3을 참고하여, 동작의 프로세스에 대응하는 스케쥴 그룹을 결정하는 전자 장치의 예시적인 동작이 설명된다. 도 3은, 프로세스에 대응하는 스케쥴 그룹을 결정하는 전자 장치의 예시적인 동작을 도시한다. 도 1의 전 자 장치 및/또는 프로세서는 도 3을 참고하여 설명되는 동작을 수행할 수 있다. 도 3의 전자 장치의 동작은 도 2의 동작과 관련될 수 있다. 도 3의 전자 장치의 동작은, 도 1의 액티비티매니저 서비스 (또는 액티비티매니저 서비스에 포함된 OomAdjuster 모듈)의 실행에 기반하여, 수행될 수 있다. 도 3을 참고하면, 프로세스의 분류를 위해 이용되는 예시적인 스케쥴 그룹들이 도시된다. 탑-어플리케이 션 스케쥴 그룹은, 디스플레이(예, 도 2의 디스플레이) 상에 표시되고 있는 화면과 연동된 (associated with) 프로세스를 분류하기 위하여 설정될 수 있다. 상기 화면은, 윈도우 및/또는 액티비티와 같 이, 디스플레이의 표시 영역의 적어도 일부분을 점유하는 도형(예, 사각형 및/또는 둥근 모서리를 가지는 사각 형)의 형태를 가질 수 있다. 도 1의 액티비티매니저 서비스에 의해 관리되는 화면들 중에서, 디스플레이 상에 현재 표시되고 있는 화면에 대응하는 프로세스가 탑-어플리케이션 스케쥴 그룹으로 분류될 수 있다.일 실시예에 따르면, 포어그라운드 스케쥴 그룹, 백그라운드 스케쥴 그룹 및/또는 루트 스케쥴 그룹 은, 탑-어플리케이션 스케쥴 그룹으로 분류된 프로세스를 제외한 다른 프로세스들을 분류하기 위하여 설정될 수 있다. 포어그라운드 스케쥴 그룹은, 디스플레이 상에 표시되는 화면에 대응하지는 않지만, 오 디오 신호를 출력하거나, 애니메이션을 출력하는 프로세스를 분류하기 위하여 설정될 수 있다. 예를 들어, 런 처 화면(또는 홈 화면) 내에서 아이콘을 선택하는 입력에 응답하여, 전자 장치는 상기 아이콘에 대응하는 실행 화면을 표시할 수 있다. 런처 화면에서 실행 화면으로 전환하는 동안, 전자 장치는 런처 화면에 대응하는 프로 세스에 기반하여, 런처 화면에서 실행 화면으로 전환하는 애니메이션을 재생할 수 있다. 상기 예시 내에서, 실 행 화면에 대응하는 프로세스가 탑-어플리케이션 스케쥴 그룹으로 분류될 수 있고, 런처 화면에 대응하는 프로세스가 포어그라운드 스케쥴 그룹으로 분류될 수 있다. 일 실시예에 따르면, 백그라운드 스케쥴 그룹은, 인스트럭션들에 의해 명시적으로(explicitly) 백그라운드 상태로 스위칭된 프로세스를 분류하기 위하여 설정될 수 있다. 백그라운드 스케쥴 그룹은, 전자 장치의 시스템 프로세스(예, 도 1의 액티비티매니저 서비스)에 의해 상기 백그라운드 상태로 스위칭된, 프로세스 를 분류하기 위하여 설정될 수 있다. 프로세서는 복수의 프로세스들 중에서 탑-어플리케이션 스케쥴 그룹 및 포어그라운드 스케쥴 그룹으로 분류되지 않은 프로세스들 중에서, 백그라운드 스케쥴 그룹으로 분 류될 프로세스를 선택할 수 있거나, 또는 필터링할 수 있다. 일 실시예에 따르면, 루트 스케쥴 그룹은, 탑-어플리케이션 스케쥴 그룹, 포어그라운드 스케쥴 그룹 및 백그라운드 스케쥴 그룹으로 분류되지 않은 나머지 프로세스들을 분류하기 위하여 설정될 수 있 다. 전자 장치는, 프로세스가 실행된 상태 및/또는 프로세스에 의해 실행되는 기능에 기반하여, 상기 프로세스 를 도 3을 참고하여 설명된 프로세스 그룹들 중 어느 한 프로세스 그룹으로 분류할 수 있다. 프로세서에 의해 실행되는 프로세스들 전부는, 도 3의 프로세스 그룹들 중 어느 한 프로세스 그룹으로 분류될 수 있다. 프로세 스의 상태가 변경되는 경우, 전자 장치는 상기 프로세스에 대응하는 프로세스 그룹을 변경할 수 있다. 일 실시예에 따른, 전자 장치는, 프로세스 그룹을 이용하여, 프로세스의 실행을 위해 점유될 전자 장치의 자원 (예, 프로세스의 실행을 위해 이용되는 프로세서의 시간 자원)을 조절할 수 있다. 전자 장치는 백그라운드 스 케쥴 그룹에 대응하는 백그라운드 프로세스 그룹 및 다른 스케쥴 그룹들(예, 탑-어플리케이션 스케쥴 그룹 , 포어그라운드 스케쥴 그룹 및/또는 루트 스케쥴 그룹) 전부에 대응하는 루트 프로세스 그룹을 이용하여, 프로세스들 각각으로 자원을 할당할 수 있다. 예를 들어, 탑-어플리케이션 스케쥴 그룹, 포어 그라운드 스케쥴 그룹 및/또는 루트 스케쥴 그룹 사이에서 스위칭되는 프로세스에 대하여, 프로세서 는 상기 프로세스에 대응하는 프로세스 그룹을 변경하지 않고, 상기 프로세스에 할당된 자원을 유지할 수 있다. 상기 예시 내에서, 프로세서는 상기 자원을 변경하지 않을 수 있다. 예를 들어, 백그라운드 스케쥴 그룹 으로부터 다른 스케쥴 그룹들로 스위칭되거나, 또는 다른 스케쥴들로부터 백그라운드 스케쥴 그룹으로 스 위칭되는 프로세스에 대하여, 프로세서는 상기 프로세스에 대응하는 프로세스 그룹을 변경할 수 있고, 상기 프 로세스에 대한 스케쥴링을 다시 수행할 수 있다. 이하에서는, 도 4를 참고하여, 스케쥴 그룹의 변경을 탐지한 전자 장치 및/또는 프로세서의 동작의 일 예를 설 명한다. 도 4는, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 1의 전자 장치 및/또는 프로세서 는 도 4를 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 4의 동작은 도 2의 동작들 중 적어 도 하나와 관련될 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스의 스케쥴 그룹의 변 경을 탐지할 수 있다. 도 1 내지 도 3을 참고하여 상술한 바와 같이, 프로세스의 상태의 변경에 기반하여, 상 기 프로세스가 지정된 스케쥴 그룹들 중 어느 한 스케쥴 그룹에서 다른 스케쥴 그룹으로 재분류될 수 있다. 상 기 지정된 스케쥴 그룹들은, 도 3을 참고하여 설명된 스케쥴 그룹들을 포함할 수 있다. 스케쥴 그룹의 변경을 탐지한 프로세서는 동작을 수행할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 변경된 스케쥴 그룹이 백그라 운드 스케쥴 그룹에 대응하는지 여부를 탐지할 수 있다. 동작의 백그라운드 스케쥴 그룹은, 도 3의 백그 라운드 스케쥴 그룹을 포함할 수 있다. 동작에 기반하여 변경된 스케쥴 그룹이 백그라운드 스케쥴그룹에 대응하는 경우(420-예), 프로세서는 동작을 수행할 수 있다. 동작에 기반하여 변경된 스케쥴 그룹이 백그라운드 스케쥴 그룹과 상이한 경우(420-아니오), 프로세서는 동작을 수행할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스에 대응하는 프로세 스 그룹을, 백그라운드 프로세스 그룹으로 결정할 수 있다. 프로세스가 백그라운드 스케쥴 그룹으로 변경되는 경우, 프로세서는 상기 프로세스를 백그라운드 프로세스 그룹으로 분류할 수 있다. 프로세스의 상태가 백그라 운드 상태로 스위칭되는 것은, 프로세스의 스케쥴 그룹 및 프로세스 그룹 전부의 변경을 야기할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스에 대응하는 프로세 스 그룹을, 루트 프로세스 그룹으로 결정할 수 있다. 프로세스가 백그라운드 스케쥴 그룹과 상이한 스케쥴 그 룹으로 변경되는 경우 프로세서는 상기 프로세스를 루트 프로세스 그룹으로 분류할 수 있다. 프로세스의 상태 가 백그라운드 상태와 상이한 상태들 사이에서 스위칭되는 경우, 프로세서의 프로세스 그룹은, 루트 프로세스 그룹 내에서 유지될 수 있다. 도 4의 동작들(430, 440)을 참고하면, 전자 장치의 프로세서는, 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 복수의 프로세스들을, 백그라운드 내 실행을 위한 제1 프로세스 그룹(예, 동작의 백그라운드 프 로세스 그룹) 및 제1 프로세스 그룹과 상이한 제2 프로세스 그룹(예, 동작의 루트 프로세스 그룹) 중 어느 한 그룹으로 분류할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세스 그룹이 변경되었는 지 여부에 기반하여, 동작의 프로세스의 스케쥴링을 수행할 수 있다. 프로세서가 백그라운드 프로세스 그 룹 또는 루트 프로세스 그룹 중에서, 프로세스에 대응하는 프로세스 그룹을 결정하기 때문에, 프로세서는, 프로 세스를 백그라운드 프로세스 그룹 및 루트 프로세스 그룹 사이에서 스위칭하는 것에 기반하여, 동작을 수 행할 수 있다. 예를 들어, 프로세스를, 백그라운드 프로세스 그룹에 대응하는 백그라운드 스케쥴링 그룹과 상 이한 다른 스케쥴링 그룹들 사이에서 스위칭하는 경우, 프로세서는 동작에 기반하여 스케쥴링을 수행하지 않고, 기 결정된 스케쥴링을 유지할 수 있다. 동작에 기반하는 스케쥴링이 수행되지 않기 때문에, 프로세 서는 스케쥴링을 위해 소비되는 시간 자원을 절약할 수 있거나, 또는 줄일 수 있다. 도 4를 참고하면, 동작의 스케쥴링이 수행되지 않는 경우, 프로세서는 동작의 스케쥴 그룹의 변경을 탐지하는 것과 독립적으로, 프로세스의 스케쥴링을 유지할 수 있다. 예를 들어, 프로세스의 스케쥴 그룹이, 백 그라운드 스케쥴링 그룹과 상이한 스케쥴 그룹들 사이에서 변경되는 경우, 프로세서는 프로세스의 스케쥴링을 위한 정보(예, 프로파일 정보)를 변경하지 않을 수 있다. 프로세서가 프로세스의 스케쥴링을 위한 정보를 변경 하기 위하여 추가적인 계산을 수행하지 않기 때문에, 프로세서는 스케쥴링을 위해 소비되는 자원을 절감할 수 있다. 예를 들어, 프로세서는, 스케쥴링을 위한 정보를 변경하는 대신에, 터치 입력을 포함하는 사용자 입력을 처리할 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는, 백그라운드 프로세스 그룹 또는 루트 프로세스 그룹 중 어느 한 그룹으로 프로세스를 분류할 수 있다. 프로세스를 상기 프로세스 그룹들 사이에서 스위칭하는 경우, 프로세서는 상기 프로세스에 대한 스케쥴링 속성(예, 프로세서가 프로세스를 실행하는 기간(duration))을 변경할 수 있다. 백그라운드 스케쥴 그룹과 상이한 다른 스케쥴 그룹들 전부가 루트 프로세스 그룹에 포함되기 때문에, 프로세스가 탑-어플리케이션 스케쥴 그룹 또는 포어그라운드 스케쥴 그룹 사이에서 스위칭되는 경우, 상기 프로세스의 프로세스 그룹은 루트 프로세스 그룹 내에서 유지될 수 있다. 예를 들어, 프로세스가 상기 다 른 스케쥴 그룹들 사이에서 스위칭되는 것은, 프로세서의 스케쥴링을 촉발(trigger)하지 않을 수 있다. 스케쥴 링이 수행되는 빈도가 줄어들기 때문에, 스케쥴링을 위한 연산량 및/또는 시간이 줄어들 수 있고, 응답 속도가 증가될 수 있다. 스케쥴링을 위한 연산량이 줄어들기 때문에, 전자 장치의 발열이 감소될 수 있고, 배터리 라 이프가 증가될 수 있다. 이하에서는, 도 5를 참고하여, 프로세스 그룹의 스위칭에 기반하여 스케쥴링을 수행하는 전자 장치의 동작이 설 명된다. 도 5는, 프로세스들에 대응하는 프로세스 그룹을 이용하여 프로세서의 시간 자원을 스케쥴링하는 전자 장치의 예시적인 동작을 도시한다. 도 1의 전자 장치 및/또는 프로세서는 도 5를 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 5의 동작은 도 2 및/또는 도 4의 동작들 중 적어도 하나와 관련될 수 있다.도 5를 참고하면, 루트 프로세스 그룹 및 루트 프로세스 그룹의 하위 프로세스 그룹인 백그라운드 프 로세스 그룹 사이의 계층 관계가 예시적으로 도시된다. 백그라운드 프로세스 그룹은, 루트 프로세스 그룹의 프로세스의 스케쥴링을 위한 정보(예, 프로파일 정보)의 적어도 일부분을 상속할 수 있거나, 또는 이용할 수 있다. 예를 들어, 루트 프로세스 그룹의 프로세스로 적용되는 메모리 대역폭 제한, 캐시 메모 리 사이즈 상한, 프로세서의 시간 자원 점유율 및/또는 네트워크 자원 제한 중 적어도 하나가, 백그라운드 프로 세스 그룹의 프로세스로 적용될 수 있다. 도 5를 참고하면, 6 개의 프로세스들을 실행하는 전자 장치의 예시적인 상태가 도시된다. 전자 장치에 의해 실 행되는 프로세스들의 개수는 도 5의 예시적인 상태에 제한되지 않는다. 제1 프로세스, 제2 프로세스 및 제3 프로세스는 백그라운드 프로세스 그룹으로 분류되고, 제4 프로세스, 제5 프로세스 및 제6 프로세스는 루트 프로세스 그룹으로 분류될 수 있다. 전자 장치가 복수의 프로세스들을 분류 하는 동작은, 도 2 및/또는 도 4의 동작들에 기반하여 수행될 수 있다. 실시예가 이에 제한되는 것은 아니며, 커널 계층 및/또는 플랫폼 계층에서 실행되는 프로세스는, 루트 프로세스 그룹으로 분류될 수 있다. 도 5를 참고하면, 일 실시예에 따른, 전자 장치는, 가중치에 기반하여 프로세스들 각각을 실행하는 프로세서의 기간을 계산할 수 있다. 도 5의 'CPU_shares'(또는 'CPU.shares')는, 프로세스의 계산을 위해 이용되는 수치 값(numeric value)일 수 있다. 상기 수치 값은, 가중치, 타임 슬라이스 및/또는 퀀텀(quantum)으로 지칭될 수 있다. 루트 프로세스 그룹에 포함된 프로세스들로, 전자 장치는 일치된 가중치(예, 1024)를 할당할 수 있 다. 도 5의 일 실시예에서, 상기 가중치가 제4 프로세스 내지 제6 프로세스로 할당될 수 있다. 루 트 프로세스 그룹의 프로세스에 할당되는 가중치는, 백그라운드 프로세스 그룹 전체에 할당될 수 있 다. 루트 프로세스 그룹의 상기 가중치는, 루트 프로세스 그룹 및 백그라운드 프로세스 그룹의 계층 관계에 기반하여, 백그라운드 프로세스 그룹으로 적용될 수 있다. 일 실시예에 따른, 전자 장치는 백그라운드 프로세스 그룹으로 할당된 가중치(예, 1024)를, 프로세서의 상 태(예, 부하 및/또는 사용량(usage))에 기반하여 변경할 수 있다. 예를 들어, 터치 입력의 수신, 임계치 이상 으로 증가된 프로세서의 사용량, 임계 온도를 초과하는 프로세서의 온도 및/또는 업데이트와 같은 지정된 이벤 트 중 적어도 하나에 응답하여, 프로세서는 상기 가중치를 변경할 수 있다. 프로세서는, 백그라운드 프로세스 그룹으로 할당된 상기 가중치에, 상기 프로세서의 상태에 기반하는 계수를 곱하여, 백그라운드 프로세스 그룹의 프로세스들 전체를 실행하기 위한 시간 자원을 계산할 수 있다. 도 5의 일 실시예에서, 전자 장치 는 백그라운드 프로세스 그룹으로 할당된 가중치를 50 % 만큼 줄일 수 있다(예, 1025 Х 50 % = 512). 가 중치에 적용되는 계수(예, 상기 50 %)는, 상술된 예시에 기반하여 결정될 수 있다. 스마트워치(예, 도 1의 스 마트워치(101-1))와 같이, 헬스 데이터의 탐지 및/또는 처리를 위해 설계된 전자 장치는, 상기 헬스 데이터와 관련된 프로세스의 처리를 위하여, 백그라운드 프로세스 그룹의 가중치에 적용되는 계수를 지정된 계수(예, 70 % 내지 100 %)로 결정할 수 있다. 도 5를 참고하면, 6 개의 프로세스들 각각의 가중치들이 도시된다. 전자 장치는, 백그라운드 프로세스 그룹 에 할당된 전체 가중치 512를, 백그라운드 프로세스 그룹에 포함된 프로세스의 개수(예, 3 개)로 할당할 수 있다. 예를 들어, 백그라운드 프로세스 그룹에 포함된 프로세스들(예, 제1 프로세스 내지 제3 프 로세스)은, 512/3 170.7의 가중치를 가질 수 있다. 루트 프로세스 그룹에 포함된 프로세스들(예, 제4 프로세스 내지 제6 프로세스)는, 1024의 가중치를 가질 수 있다. 상술한 바와 같이, 프로세스들 각각에 할당되는 가중치들은, 백그라운드 프로세스 그룹에 할당된 가중치 또는 루트 프 로세스 그룹에 할당된 가중치 중에서 선택될 수 있다. 백그라운드 프로세스 그룹에 할당된 가중치는, 프로세서의 사용량, 전자 장치의 온도 또는 터치 입력 중 적어도 하나에 기반하여 조절될 수 있다. 일 실시예에 따른, 전자 장치는, 복수의 프로세스들 각각에 할당된 가중치들에 기반하여, 상기 복수의 프로세스 들 각각을 실행하기 위하여 이용되는 시간 구간들의 길이들을 결정할 수 있다. 프로세스의 실행을 위해 이용되 는 프로세서의 시간 구간의 비율은, 프로세스들 전체의 가중치들의 합과 상기 프로세스에 할당된 가중치의 비율 에 대응할 수 있다. 도 5의 일 실시예에서, 프로세서가 6 개의 프로세스들을 실행하는 비율은, 표 1과 같이 계 산될 수 있다. 표 1 프로세스 1 2 3 4 5 6 합 가중치 170.7 170.7 170.7 1024 1024 1024 4096 시간 자원 점 유율4.17% 4.17% 4.17% 25% 25% 25% 87.51% 표 1을 참고하면, 백그라운드 프로세스 그룹의 가중치로 적용된 계수로 인하여, 약 12.5 %의 시간 자원이, 6 개의 프로세스들과 상이한 다른 프로세스 및/또는 기능을 위해 이용될 수 있다. 백그라운드 프로세스 그룹 으로 분류되는 프로세스들의 개수가 증가될수록, 백그라운드 프로세스 그룹에 포함된 프로세스의 시 간 자원 점유율이 감소될 수 있다. 루트 프로세스 그룹에 포함된 프로세스들의 개수가 증가될수록, 백그 라운드 프로세스 그룹으로 분류된 프로세스들의 시간 자원 점유율이 감소될 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는, 백그라운드 프로세스 그룹 및 루트 프로세스 그룹 만을 이용하여, 프로세스의 실행을 위해 이용되는 프로세서의 시간 구간의 길이를 조절할 수 있거나, 또는 결정할 수 있다. 도 6은, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 1의 전자 장치 및/또는 프로세서 는 도 6을 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 6의 동작은, 도 2 및/또는 도 4의 동작들 중 적어도 하나와 관련될 수 있다. 도 6을 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 프로세서의 상태를 확인할 수 있거나, 또는 탐지할 수 있다. 예를 들어, 프로세서는, 프로세서의 상태를 나타내는 파라미터들을 획득할 수 있다. 상기 파라미터들은, 전자 장치 및/또는 프로세서의 온도, 프로세스의 실행에 의한 프로세서의 사용량 및 /또는 터치 입력을 식별하였는지 여부를 포함할 수 있다. 도 6을 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 동작에 기반하여 확인된 프로세서의 상태 및 브로드캐스트와 관련된 제1 지정된 조건을 비교하여, 브로드캐스트에 대응하는 프로세스들 의 실행에 이용되는 딜레이를 설정 및/또는 조절할 수 있다. 상기 제1 지정된 조건은, 전자 장치 및/또는 프로 세서의 온도가 지정된 임계 온도를 초과하는지 여부를 포함할 수 있다. 상기 제1 지정된 조건은, 프로세서의 사용량이 임계 사용량을 초과하는지 여부를 포함할 수 있다. 상기 제1 지정된 조건은, 터치 입력을 수신하였는 지 여부를 포함할 수 있다. 상기 예시된 제1 지정된 조건을 만족하는 경우, 프로세서는 동작의 딜레이를 설정할 수 있거나, 또는 증가시킬 수 있다. 딜레이가 증가됨에 따라, 브로드캐스트에 대응하는 프로세스들 각 각을 실행하는 타이밍들 사이의 간격이 증가될 수 있다. 동작에 기반하여 딜레이를 설정 및/또는 조절하 는 전자 장치의 동작이 도 7을 참고하여 설명된다. 도 6을 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 동작에 기반하여 확인된 프로세서의 상태 및 프로세서의 스케쥴링과 관련된 제2 지정된 조건을 비교하여, 백그라운드 프로세스 그룹으로 분류된 적어도 하나의 프로세스의 실행을 위해 이용되는 프로세서의 시간 자원을 조절할 수 있다. 상기 제2 지 정된 조건은, 동작의 제1 지정된 조건과 유사하게, 프로세서의 사용량, 터치 입력을 수신하였는지 여부 및 /또는 프로세서의 온도 중 적어도 하나를 포함할 수 있다. 제2 지정된 조건에 기반하여, 프로세서는 백그라운 드 프로세스 그룹에 포함된 프로세스들의 시간 자원을 결정하는데 이용되는, 가중치를 조절할 수 있다. 예를 들어, 프로세서는 도 5의 가중치에 적용되는 계수를 변경할 수 있다. 이하에서는, 도 7을 참고하여, 도 6의 동작에 기반하여 설정된 딜레이와 관련된 전자 장치의 동작이 설명 된다. 도 7은, 프로세스들 사이에서 정보를 송신하는 전자 장치의 예시적인 동작을 도시한다. 도 1의 전자 장치 및/또는 프로세서는 도 7을 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 7을 참고하여 설 명되는 전자 장치의 동작은, 도 2, 도 4 및/또는 도 6의 동작들과 관련될 수 있다. 일 실시예에 따르면, 프로세서는 특정 프로세스로부터 다른 프로세스로 정보의 송신을 위한 요청을 탐지할 수 있다. 상기 요청은 인텐트 객체에 기반하여 탐지될 수 있다. 인텐트 객체는, 프로세스들 사이의 정보의 송신 및/또는 작업의 요청을 위해 정의된 데이터 구조를 포함할 수 있다. 인텐트 객체는, 상기 인텐 트 객체에 기반하여 실행될 프로세스에게 요청된 액션 속성(action attribute) 및/또는 상기 액션과 관련 된 데이터 속성(data attribute)을 포함할 수 있다. 예를 들어, 웹 페이지의 실행을 위해 생성된 인텐트 객체 는, 인텐트 객체가 웹 페이지의 표시를 요청하기 위해 생성되었음을 나타내는 액션 속성 및 상기 웹 페이지의 주소(예, URL(uniform resource location) 및/또는 URI(uniform resource indicator))를 포함할 수 있다. 프로세서는 인텐트 객체에 의해 설정된 조건(예, 인텐트 필터)에 기반하여, 복수의 프로세스들 중 에서, 인텐트 객체에 대응하는 프로세스들을 식별할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는, 인텐트 객체에 기반하여 복수의 프로세스들을 실행할 수 있다. 예를 들어, 상기 복수의 프로 세스들의 실행에 기반하여, 프로세서는 상기 복수의 프로세스들로, 인텐트 객체에 포함된 정보를 브로드캐 스트할 수 있다. 일 실시예에 따르면, 프로세서는 백그라운드 프로세스 그룹으로 분류된 프로세스들 및 루트 프로세스 그룹으로 분류되는 프로세스들 각각에 대한 브로드캐스트 서비스들을 이용하여, 인텐트 객체에 기반하는 브로드캐스 트를 수행할 수 있다. 도 4를 참고하면, 인텐트 객체에 기반하여 4 개의 프로세스들(예, 제1 프로세스 , 제2 프로세스, 제3 프로세스 및 제4 프로세스)를 실행하는 전자 장치의 예시적인 상태가 도시된다. 인텐트 객체를 식별한 전자 장치는, 도 6의 동작에 의해 설정된 딜레이에 기반하여 인텐 트 객체 및/또는 인텐트 객체와 관련된 요청에 대응하는 4 개의 프로세스들을 순차적으로 (sequentially) 실행할 수 있다. 상기 딜레이는, 전자 장치의 프로세서의 사용량, 전자 장치의 온도 또는 전자 장치에 의해 식별된 터치 입력 중 적어도 하나에 기반하여 조절될 수 있다. 예를 들어, 상기 딜레이는, 상기 사용량 및/또는 상기 온도에 비례할 수 있다. 상기 딜레이는, 상기 사용량 및/또는 상기 온도에 기반하는 룩- 업 테이블에 의해 설정될 수 있다. 상기 딜레이는, 터치 입력을 수신한 경우, 증가될 수 있다. 도 7을 참고하면, 프로세서는 인텐트 객체에 기반하여 제1 프로세스를 실행한 다음, 프로세서의 상태 에 따르는 딜레이에 기반하여, 제2 프로세스를 실행할 수 있다. 프로세서는, 인텐트 객체에 기반하 는 제1 프로세스의 동작의 완료를 탐지한 타이밍(예, 제1 프로세스의 종료 응답을 식별한 타이밍)부 터, 상기 딜레이 이후의 타이밍에, 제2 프로세스를 실행할 수 있다. 상기 딜레이에 기반하여, 프로세서는 인텐트 객체와 관련된 4 개의 프로세스들이 중첩으로 실행되는 것을 방지할 수 있다. 상기 딜레이에 기반 하여, 프로세서는, 프로세서의 사용량의 급격한 증가를 방지할 수 있다. 상기 딜레이에 기반하여, 프로세서는, 프로세서의 포화를 방지할 수 있다. 프로세서의 포화가 방지되기 때문에, 프로세서는 터치 입력과 같은 사용자 입력에 보다 빠르게 반응할 수 있다. 도 8은, 일 실시예에 따른, 전자 장치가 부팅하는 동안, 시간 영역에서 전자 장치의 프로세서의 사용량(usage) 을 도시한 그래프들이다. 도 8을 참고하면, 스케쥴 그룹들 각각에 대응하는 프로세스 그룹들에 기반하여 프로세스들의 자원을 계산하는 제1 전자 장치 및 상기 프로세스 그룹들 중에서 백그라운드 프로세스 그룹 및 루트 프로세스 그룹에 기반하여 프로세스들의 자원을 계산하는 제2 전자 장치의 부팅 시간을 비교한 그래프들(810, 820)이 도시된다. 그래프 는, 상기 제1 전자 장치가 부팅하는 동안의 CPU 사용량을 나타낸다. 그래프는, 상기 제2 전자 장치 가 부팅하는 동안의 CPU 사용량을 나타낸다. 제2 전자 장치는 도 1 내지 도 7의 전자 장치의 일 예일 수 있다. 도 8을 참고하면, 제1 전자 장치의 CPU 사용량이 감소되는 시점(t2)은, 제2 전자 장치의 CPU 사용량이 감소되는 시점(t1) 이후일 수 있다. 예를 들어, 제1 전자 장치의 부팅이 제2 전자 장치의 부팅 보다 늦게 완료될 수 있 다. 제2 전자 장치는 도 1 내지 도 7을 참고하여 설명된 동작에 기반하여, 두 개의 프로세스 그룹들 만으로 프 로세스에 대한 스케쥴링을 수행할 수 있고, 프로세서의 상태에 기반하는 딜레이를 이용하여 인텐트 객체와 관련 된 동작을 수행할 수 있다. 제2 전자 장치가 CPU 사용량을 보다 효율적으로 제어하기 때문에, 제1 전자 장치 및 제2 전자 장치가 동시에 켜진 이후, 부팅에 기반하는 제2 전자 장치의 사용량이, 제1 전자 장치의 사용량 보 다 일찍 감소될 수 있다. 표 2를 참고하면, 제1 전자 장치의 부팅이 완료되는 시간을 반복적으로 측정한 제1 케이스 및 제2 전자 장치의 부팅이 완료되는 시간을 반복적으로 측정한 제2 케이스가 도시된다. 표 2 1 2 3 4 5 6 7 8 평균 제1 케이 스223 205204208210207210204209 제2 케이 스186168215172168168165167176 표 2를 참고하면, 제1 전자 장치의 부팅은, 평균 209 초 이후 완료될 수 있고, 제2 전자 장치의 부팅은, 평균 176 초 이후 완료될 수 있다. 예를 들어, 제2 전자 장치는 도 1 내지 도 7의 동작에 기반하여, 프로세서의 스 케쥴링 및/또는 인텐트 객체에 기반하는 프로세스의 실행을 제어할 수 있다. 스케쥴링 및/또는 프로세스의 실 행의 제어에 기반하여, 제2 전자 장치는 스케쥴링에 의한 프로세스의 실행 중단을 줄이고, 프로세서의 사용량을 줄일 수 있다. 프로세스의 실행이 중단되는 횟수 및/또는 빈도가 감소되므로, 도 8의 그래프들(810, 820)과 같 이, 제2 전자 장치는 제1 전자 장치보다 특정 동작(예, 부팅)을 빠르게 완료할 수 있거나, 또는 수행할 수 있다. 실시예가 이에 제한되는 것은 아니다. 도 9는, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 9를 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스 , 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈 , 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치(90 1)에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가 될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테 나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전 자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘 은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습 (semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정 되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포 함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도 로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피 커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복 수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(902, 또는 1504) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의전부 또는 일부는 외부의 전자 장치들(902, 1504, 또는 1508) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터 의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요 청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서 비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정 되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이 템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복 수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구 들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구 분하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어 떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소 에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치 들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우 에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메 모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체들을 포함할 수 있으며, 복수의 개체들 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요 소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다 른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 9의 전자 장치 및/또는 전자 장치는, 도 1의 전자 장치의 일 예일 수 있다. 일 실시예에서, 프로세서의 응답 속도를 개선하는 방안이 요구될 수 있다. 일 실시예에서, 복수의 프로세스들 에 대한 스케쥴링을 효율적으로 수행하는 방안이 요구될 수 있다. 일 실시예에서, 프로세서의 부하의 급격한 증가를 방지하는 방안이 요구될 수 있다. 일 실시예에서, 터치 입력과 같은 사용자 입력에 대한, 전자 장치의 응답 속도를 증가하게 만드는 방안이 요구될 수 있다. 상술한 바와 같은, 일 실시예에 따른, 전자 장치 (electronic device)(예, 도 1의 전자 장치 및/또는 도 9의 전자 장치들(901, 902))는, 인스트럭션들을 저장하기 위한 메모리(예, 도 1의 메모리) 및 상기 인스트럭션들을 실행하기 위한 프로세서(예, 도 1의 프 로세서)를 포함할 수 있다. 상기 프로세서는, 복수의 프로세스들에 기반하여 상기 인스트럭션들을 실행하 는 동안, 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹 을 결정하도록, 구성될 수 있다. 상기 프로세서는, 상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프 로세스를, 백그라운드 내 실행을 위한 제1 스케쥴 그룹(예, 도 3의 백그라운드 스케쥴 그룹)에서 다른 스 케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위해 이용되는 시간 구간의 길이를 조절하도록, 구성될 수 있 다. 상기 프로세서는, 상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행 하도록, 구성될 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는, 복수의 프로세스들에 대한 스케쥴링을 효율적으로 수행하여, 개선된 응답 속도를 가질 수 있다. 일 실시예에 따른, 전자 장치는, 프로세서의 부하를 급격한 증가를 방지하도록, 복수의 프로세스들에 대한 스케쥴링을 수행할 수 있다. 일 실시예에 따른, 전자 장 치는, 터치 입력과 같은 사용자 입력을, 증가된 응답 속도에 기반하여 처리할 수 있다. 예를 들어, 상기 프로세서는, 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하는 제1 프로세스 그룹으로 분류하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 제1 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹들로 스위칭된 상기 적어도 하나의 프로세스를, 루트 프로세스 그룹으로 분류하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 복수의 프로세스들 각각에 할당된(assigned) 가중치들에 기반하여, 상기 복 수의 프로세스들 각각을 실행하기 위하여 이용되는 시간 구간들의 길이들을 결정하도록, 구성될 수 있다. 상기 복수의 프로세스들 각각에 할당된 가중치들은, 상기 백그라운드 내 실행을 위한 제1 스케쥴 그룹에 대응하는 제 1 프로세스 그룹과 관련된 제1 가중치 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹과 관련된 제2 가 중치 중에서 선택될 수 있다. 예를 들어, 상기 프로세서는, 상기 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식별된 터치 입력 중 적어도 하나에 기반하여, 상기 제1 가중치를 조절 하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 복수의 프로세스들 사이의 정보의 송신을 위한 요청들에 기반하여, 지정된 딜레이에 기반하여 상기 요청들 각각에 대응하는 프로세스들을 순차적으로(sequentially) 실행하도록, 구성될수 있다. 예를 들어, 상기 프로세서는, 상기 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식별된 터치 이벤트 중 적어도 하나에 기반하여, 상기 지정된 딜레이를 조절하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 인텐트 객체에 기반하는 상기 요청들을 탐지하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 상기 복수의 프로세스들을, 백그라운드 내 실행을 위한 제1 프로세스 그룹 및 상기 제1 프로세스 그룹과 상이한 제2 프로세 스 그룹 중 어느 한 그룹으로 분류하도록, 구성될 수 있다. 상술한 바와 같은, 일 실시예에 따른, 전자 장치의 방법은, 복수의 프로세스들에 기반하여 인스트럭션들을 실행 하는 동안, 상기 복수의 프로세스들의 상태들에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그 룹을 결정하는 동작을 포함할 수 있다. 상기 방법은, 상기 스케쥴 그룹의 결정에 의하여, 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 제1 스케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭하거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭하는 것에 응답하여, 상기 적어도 하나의 프로세스 의 실행을 위해 이용되는 시간 구간의 길이를 조절하는 동작을 포함할 수 있다. 상기 방법은, 상기 조절된 길 이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된 상기 적어도 하나 의 프로세스를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하는 제1 프로세스 그룹으로 분류하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 제1 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹들로 스위칭된 상기 적어도 하나 의 프로세스를, 루트 프로세스 그룹으로 분류하는 동작을 포함할 수 있다. 예를 들어, 상기 조절하는 동작은, 상기 복수의 프로세스들 각각에 할당된 가중치들에 기반하여, 상기 복수의 프로세스들 각각을 실행하기 위하여 이용되는 시간 구간들의 길이들을 결정하는 동작을 포함할 수 있다. 예를 들어, 상기 복수의 프로세스들 각각에 할당된 가중치들은, 상기 백그라운드 내 실행을 위한 제1 스케쥴 그 룹에 대응하는 제1 프로세스 그룹과 관련된 제1 가중치 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹 과 관련된 제2 가중치 중에서 선택될 수 있다. 예를 들어, 상기 조절하는 동작은, 상기 전자 장치의 프로세서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식별된 터치 입력 중 적어도 하나에 기반하여, 상기 제1 가중치를 조절하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 복수의 프로세스들 사이의 정보의 송신을 위한 요청들에 기반하여, 지정된 딜레 이에 기반하여 상기 요청들 각각에 대응하는 프로세스들을 순차적으로 실행하는 동작을 포함할 수 있다. 예를 들어, 상기 요청들 각각에 대응하는 프로세스들을 순차적으로 실행하는 동작은, 상기 전자 장치의 프로세 서의 사용량, 상기 전자 장치의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식 별된 터치 이벤트 중 적어도 하나에 기반하여, 상기 지정된 딜레이를 조절하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 인텐트 객체에 기반하는 상기 요청들을 탐지하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 상기 복수의 프 로세스들을, 백그라운드 내 실행을 위한 제1 프로세스 그룹 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹 중 어느 한 그룹으로 분류하는 동작을 포함할 수 있다. 상술한 바와 같은, 일 실시예에 따른, 비-일시적 컴퓨터 판독 가능 저장 매체는, 인스트럭션들을 포함할 수 있 다. 상기 인스트럭션들은, 전자 장치의 프로세서에 의해 실행될 시에, 복수의 프로세스들의 상태에 기반하여, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹을 결정하도록, 상기 프로세서를 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 결정에 기반하여, 백그라운드 내 실행을 위한 제1 스 케쥴 그룹에서 다른 스케쥴 그룹들로 스위칭되거나, 또는 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된, 적어도 하나의 프로세스를 탐지하는 것에 응답하여, 상기 적어도 하나의 프로세스의 실행을 위 해 이용되는 시간 구간의 길이를 조절하도록, 상기 프로세서를 야기할 수 있다. 상기 인스트럭션들은, 상기 프 로세서에 의해 실행될 시에, 상기 조절된 길이를 가지는 상기 시간 구간 내에서 상기 적어도 하나의 프로세스를 실행하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 다른 스케쥴 그룹들로부터 상기 제1 스케쥴 그룹으로 스위칭된 상기 적어도 하나의 프로세스를, 백그라운드 내 실행을 위한 프로파일 정보에 대응하 는 제1 프로세스 그룹으로 분류하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 제1 스케쥴 그룹으로부터 상기 다른 스케쥴 그룹들로 스위칭된 상기 적어도 하나의 프로세스를, 루트 프로세스 그룹으로 분류하도록, 상기 프로세서 를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 복수의 프로세스들 각각에 할당된 (assigned) 가중치들에 기반하여, 상기 복수의 프로세스들 각각을 실행하기 위하여 이용되는 시간 구간들의 길 이들을 결정하도록, 상기 프로세서를 야기할 수 있다. 상기 복수의 프로세스들 각각에 할당된 가중치들은, 상 기 백그라운드 내 실행을 위한 제1 스케쥴 그룹에 대응하는 제1 프로세스 그룹과 관련된 제1 가중치 및 상기 제 1 프로세스 그룹과 상이한 제2 프로세스 그룹과 관련된 제2 가중치 중에서 선택될 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 프로세서의 사용량, 상기 전자 장치 의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식별된 터치 입력 중 적어도 하 나에 기반하여, 상기 제1 가중치를 조절하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 복수의 프로세스들 사이의 정보의 송신을 위한 요청들에 기반하여, 지정된 딜레이에 기반하여 상기 요청들 각각에 대응하는 프로세스들을 순차적 으로(sequentially) 실행하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 프로세서의 사용량, 상기 전자 장치 의 온도 센서에 의해 식별된 온도 또는 상기 전자 장치의 터치 센서에 기반하여 식별된 터치 이벤트 중 적어도 하나에 기반하여, 상기 지정된 딜레이를 조절하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 인텐트 객체에 기반하는 상기 요청들을 탐지하도록, 상기 프로세서를 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 복수의 프로세스들 각각에 대응하는 스케쥴 그룹들에 기반하여, 상기 복수의 프로세스들을, 백그라운드 내 실행을 위한 제1 프로세스 그룹 및 상기 제1 프로세스 그룹과 상이한 제2 프로세스 그룹 중 어느 한 그룹으로 분류하도록, 상기 프로세서를 야기할 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 프로세서, 콘트롤 러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되 어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 이때, 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수 개의 하드웨어가 결합된 형태의 다 양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워 크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 어플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다."}
{"patent_id": "10-2023-0113173", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2023-0113173", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은, 일 실시예에 따른, 전자 장치의 하드웨어 구성을 설명하기 위한 예시적인 블록도를 도시한다. 도 2는, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 3은, 프로세스에 대응하는 스케쥴 그룹을 결정하는 전자 장치의 예시적인 동작을 도시한다. 도 4는, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 5는, 프로세스들에 대응하는 프로세스 그룹을 이용하여 프로세서의 시간 자원을 스케쥴링하는 전자 장치의 예시적인 동작을 도시한다. 도 6은, 일 실시예에 따른, 전자 장치의 흐름도의 일 예를 도시한다. 도 7은, 프로세스들 사이에서 정보를 송신하는 전자 장치의 예시적인 동작을 도시한다. 도 8은, 일 실시예에 따른, 전자 장치가 부팅하는 동안, 시간 영역에서 전자 장치의 프로세서의 사용량(usage) 을 도시한 그래프들이다. 도 9는, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다."}
