{"patent_id": "10-2019-0007508", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0090453", "출원번호": "10-2019-0007508", "발명의 명칭": "전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "이동수"}}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 메모리; 및제1 임계 값에 기초하여 상기 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning)하고, 상기복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스를 획득하며,상기 제1 매트릭스를 상기 제1 매트릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제2 매트릭스 및,상기 랭크와 상기 제1 매트릭스의 열의 개수에 기초하여 크기가 결정된 제3 매트릭스로 팩토라이즈(factorize)하고,제2 임계 값에 기초하여 상기 제2 매트릭스에 포함된 복수의 제2 엘리먼트 각각을 프루닝하고, 상기 복수의 제2엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭스를 획득하며,제3 임계 값에 기초하여 상기 제3 매트릭스에 포함된 복수의 제3 엘리먼트 각각을 프루닝하고, 상기 복수의 제3엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스를 획득하고,상기 제2 프루닝 인덱스 매트릭스 및 상기 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱스 매트릭스를 획득하며,상기 최종 인덱스 매트릭스를 상기 제1 프루닝 인덱스 매트릭스와 비교하여 상기 제2 프루닝 인덱스 매트릭스또는 상기 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트하는 프로세서;를 포함하는 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 상기 제1 프루닝 인덱스 매트릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하고,상기 식별된 위치에 대응되는 상기 제1 매트릭스의 엘리먼트의 크기에 기초하여 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하여, 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트하는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는,상기 상이한 데이터를 가지는 위치가 복수 개 식별되면, 상기 식별된 복수의 위치에 대응되는 상기 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하고,상기 합산된 크기가 임계 크기 이상이면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하는,전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 프로세서는,상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 증가되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다공개특허 10-2020-0090453-3-른 하나를 감소시키고,상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 감소되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 증가시키는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득하고,상기 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득하고,상기 랜덤 매트릭스 및 상기 압축 대상 단위에 기초하여 복수의 방정식을 획득하고,상기 압축 대상 단위에 대응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 상기 복수의 방정식 중 적어도 일부를 제거하고, 나머지 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 프로세서는,상기 나머지 방정식의 개수가 상기 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 상기 나머지 방정식 간디펜던시(dependency)에 기초하여, 상기 나머지 방정식 중 상기 미지수의 개수에 대응되는 복수의 제1 방정식을식별하고,상기 복수의 제1 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 프로세서는,상기 획득된 압축 타겟 단위에 대응되는 바이너리 데이터에 기초하여 상기 나머지 방정식 중 상기 복수의 제1방정식을 제외한 적어도 하나의 제2 방정식의 성립 여부를 식별하고,상기 적어도 하나의 제2 방정식 중 성립되지 않는 제3 방정식에 대응되는 패치 정보를 생성하며,상기 패치 정보는,상기 성립되지 않는 제3 방정식의 개수 정보 및 상기 성립되지 않는 제3 방정식 각각의 식별 정보를 포함하는,전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 프로세서는,상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 상기 대표 값 매트릭스및 바이너리 데이터를 포함하는 상기 양자화 매트릭스를 획득하는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 프로세서는,공개특허 10-2020-0090453-4-상기 최종 인덱스 매트릭스에 기초하여 상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트를 식별하는, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제5항에 있어서,상기 랜덤 매트릭스는,제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며,상기 랜덤 메트릭스에 포함된 상기 제1 타입의 엘리먼트의 개수 및 상기 랜덤 메트릭스에 포함된 상기 제2 타입의 엘리먼트의 개수는 서로 동일한, 전자 장치."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 전자 장치의 제어 방법에 있어서,제1 임계 값에 기초하여 상기 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning)하고, 상기복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스를 획득하는 단계;상기 제1 매트릭스를 상기 제1 매트릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제2 매트릭스 및,상기 랭크와 상기 제1 매트릭스의 열의 개수에 기초하여 크기가 결정된 제3 매트릭스로 팩토라이즈(factorize)하는 단계;제2 임계 값에 기초하여 상기 제2 매트릭스에 포함된 복수의 제2 엘리먼트 각각을 프루닝하고, 상기 복수의 제2엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭스를 획득하는 단계;제3 임계 값에 기초하여 상기 제3 매트릭스에 포함된 복수의 제3 엘리먼트 각각을 프루닝하고, 상기 복수의 제3엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스를 획득하는 단계;상기 제2 프루닝 인덱스 매트릭스 및 상기 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱스 매트릭스를 획득하는 단계; 및상기 최종 인덱스 매트릭스를 상기 제1 프루닝 인덱스 매트릭스와 비교하여 상기 제2 프루닝 인덱스 매트릭스또는 상기 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 업데이트하는 단계는,상기 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 상기 제1 프루닝 인덱스 매트릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하는 단계; 및상기 식별된 위치에 대응되는 상기 제1 매트릭스의 엘리먼트의 크기에 기초하여 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하여, 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트하는 단계;를 포함하는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 적어도 하나를 업데이트하는 단계는,상기 상이한 데이터를 가지는 위치가 복수 개 식별되면, 상기 식별된 복수의 위치에 대응되는 상기 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하는 단계; 및상기 합산된 크기가 임계 크기 이상이면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하는단계;를 포함하는, 제어 방법.공개특허 10-2020-0090453-5-청구항 14 제12항에 있어서,상기 적어도 하나를 업데이트하는 단계는,상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 증가되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 감소시키고,상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 감소되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 증가시키는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서,상기 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득하는 단계;상기 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득하는 단계;상기 랜덤 매트릭스 및 상기 압축 대상 단위에 기초하여 복수의 방정식을 획득하는 단계; 및상기 압축 대상 단위에 대응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 상기 복수의 방정식 중 적어도 일부를 제거하고, 나머지 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는,상기 나머지 방정식의 개수가 상기 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 상기 나머지 방정식 간디펜던시(dependency)에 기초하여, 상기 나머지 방정식 중 상기 미지수의 개수에 대응되는 복수의 제1 방정식을식별하는 단계; 및상기 복수의 제1 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계;를 포함하는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는,상기 획득된 압축 타겟 단위에 대응되는 바이너리 데이터에 기초하여 상기 나머지 방정식 중 상기 복수의 제1방정식을 제외한 적어도 하나의 제2 방정식의 성립 여부를 식별하는 단계; 및상기 적어도 하나의 제2 방정식 중 성립되지 않는 제3 방정식에 대응되는 패치 정보를 생성하는 단계;를 더 포함하며,상기 패치 정보는,상기 성립되지 않는 제3 방정식의 개수 정보 및 상기 성립되지 않는 제3 방정식 각각의 식별 정보를 포함하는,제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서,상기 양자화 매트릭스를 획득하는 단계는,공개특허 10-2020-0090453-6-상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 상기 대표 값 매트릭스및 바이너리 데이터를 포함하는 상기 양자화 매트릭스를 획득하는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 양자화 매트릭스를 획득하는 단계는,상기 최종 인덱스 매트릭스에 기초하여 상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트를 식별하는, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제15항에 있어서,상기 랜덤 매트릭스는,제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며,상기 랜덤 메트릭스에 포함된 상기 제1 타입의 엘리먼트의 개수 및 상기 랜덤 메트릭스에 포함된 상기 제2 타입의 엘리먼트의 개수는 서로 동일한, 제어 방법."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 본 전자 장치는 샘플 데이터 및 샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 메모리 및 제1 임계 값에 기초하여 제1 매트릭스에 포함된 복수의 제1 엘 리먼트 각각을 프루닝(pruning)하고, 복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제 (뒷면에 계속)"}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 딥러닝 등의 기계 학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 인공지능 (Artificial Intelligence, AI) 시스템 및 그 응용 중 인공지능 모델을 압축하기 위한 전자 장치 및 그 제어 방 법에 대한 것이다."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "근래에는 인간 수준의 지능을 구현하는 인공 지능 시스템이 다양한 분야에서 이용되고 있다. 인공 지능 시스템 은 기존의 룰(rule) 기반 스마트 시스템과 달리 기계가 스스로 학습하고 판단하며 똑똑해지는 시스템이다. 인공 지능 시스템은 사용할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 룰 기반 스마트 시스템은 점차 딥러닝 기반 인공 지능 시스템으로 대체되고 있다. 인공 지능 기술은 기계학습(예로, 딥러닝) 및 기계학습을 활용한 요소 기술들로 구성된다. 기계학습은 입력 데이터들의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소기술은 딥러닝 등의 기계학 습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공 지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술 로서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간의 경험정보 를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함 한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주행), 조 작 제어(행동 제어) 등을 포함한다. 최근 딥러닝 모델을 성능 저하 없이 압축하는 기술이 상당한 각광을 받고 있다. 성능 저하 없이 효율적으로 압 축하는 경우, 디바이스 제작 비용을 감축하고, 딥러닝 수행 속도를 향상시켜 모바일 장치에서도 딥러닝을 이용 할 수 있게 된다. 종래의 압축 방법 중 대표적인 것은 weight 값의 크기를 기반으로, 특정 값 이하인 weight는 프루닝하고 남은 weight를 이용하여 딥러닝 모델을 리트레이닝(retraining)함으로써 딥러닝의 정확도를 복구하는 방식이 있다. 프루닝과 리트레이닝 과정을 반복하면, 대부분이 0의 값을 가지며, 이를 제거하게 되면 matrix의 크기를 줄일수 있게 된다. 예를 들어, 도 1a와 같은 weight matrix를 가정하면, 0을 제거하기 위해 도 1b와 같은 sparse matrix format으 로 변환할 수 있다. A는 non-zero 값만을 저장하게 되며 IA는 맨 처음 기본적으로 가지는 0을 제외하면 matrix의 각각의 row에 해당 하는 non-zero weight의 수를 누적하게 되고, 마지막으로 JA는 A의 각 non-zero값에 해당하는 column index를 저장한다. 즉, A와 IA, JA를 이용하여 0이 아닌 값들의 magnitude와 위치 정보를 저장하게 된다. A, IA, JA로 구성되는 sparse matrix는 CSR(Compressed Sparse Row) format이라 불린다. 프루닝을 마치고 남은 non-zero 값들은 양자화(quantization) 과정을 거치게 되며, 프루닝 후에는 양자화된 정 보의 양이 줄어들 뿐 아니라 값들의 분포율도 줄어들어 프루닝과 양자화는 함께 이용되는 경우가 대부분이다. 다만, CSR format은 A에 해당하는 non-zero weight의 magnitude보다 index의 양이 항상 더 큰 문제가 있다. 따 라서, index의 압축율을 더욱 효과적으로 높여야 하는 문제점이 있다. 그리고, CSR format을 이용하여 본래의 matrix를 구성하는 경우, CSR format을 읽어내는 방식 자체가 parallel computing에 적합하지 않다는 문제도 있다. 또한, 최근 들어 각 weight를 2 비트를 이용하여 3 가지의 state를 표현하는 방식들이 인기를 얻고있는데, 예를 들면 ternary quantization이 대표적인 예로서, 만일 00혹은 01이면 그 data는 masking된 값(즉, 0이 되는 weight)이고 첫 번째 비트가 1이면, 두 번째 비트는 양자화된 값을 나타낸다. 이 경우, 프루닝 레이트에 상관없 이 항상 weight들은 2 비트를 가지게 되기 때문에 높은 프루닝 레이트를 효율적으로 이용하지 못하고 있는데, 이는 프루닝된 값을 지워서 sparse matrix를 구성할 경우 data access와 처리가 복잡해지는 문제가 있기 때문이 다. 따라서 프루닝 레이트(rate)가 기존 방법만큼 높으면서도 parallel하게 압축을 풀어나갈 수 있는 압축 방법 및 압축을 풀어내는 효과적인 알고리즘과 하드웨어가 필요하다."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 필요성에 따른 것으로, 본 개시의 목적은 데이터 용량을 축소시키면서도 패럴랠 컴퓨팅 (parallel computing)에 적합하도록 인공지능 모델을 압축하는 전자 장치 및 그 제어 방법을 제공함에 있다."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "이상과 같은 목적을 달성하기 위한 본 개시의 일 실시 예에 따른 전자 장치는 샘플 데이터에 기초하여 트레이닝 (training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 메모리 및 제1 임계 값에 기초하여 상기 제1 매트 릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning)하고, 상기 복수의 제1 엘리먼트 각각의 프루닝 여 부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스를 획득하며, 상기 제1 매트릭스를 상기 제1 매트 릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제2 매트릭스 및, 상기 랭크와 상기 제1 매트릭스의 열의 개수에 기초하여 크기가 결정된 제3 매트릭스로 팩토라이즈(factorize)하고, 제2 임계 값에 기초하여 상기 제2 매트릭스에 포함된 복수의 제2 엘리먼트 각각을 프루닝하고, 상기 복수의 제2 엘리먼트 각각의 프루닝 여부 를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭스를 획득하며, 제3 임계 값에 기초하여 상기 제3 매 트릭스에 포함된 복수의 제3 엘리먼트 각각을 프루닝하고, 상기 복수의 제3 엘리먼트 각각의 프루닝 여부를 바 이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스를 획득하고, 상기 제2 프루닝 인덱스 매트릭스 및 상기 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱스 매트릭스를 획득하며, 상기 최종 인덱스 매트릭스를 상기 제1 프루닝 인덱스 매트릭스와 비교하여 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인덱스 매트릭 스 중 적어도 하나를 업데이트하는 프로세서를 포함한다. 또한, 상기 프로세서는 상기 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 상기 제1 프루닝 인덱스 매트릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하고, 상 기 식별된 위치에 대응되는 상기 제1 매트릭스의 엘리먼트의 크기에 기초하여 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하여, 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트할 수 있다.그리고, 상기 프로세서는 상기 상이한 데이터를 가지는 위치가 복수 개 식별되면, 상기 식별된 복수의 위치에 대응되는 상기 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하고, 상기 합산된 크기가 임계 크기 이상이면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경할 수 있다. 또한, 상기 프로세서는 상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 증가되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 감소시키고, 상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 감소되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 증가시킬 수 있다. 그리고, 상기 프로세서는 상기 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득하고, 상기 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득하고, 상기 랜덤 매트릭스 및 상기 압축 대상 단위에 기초하여 복수의 방정식을 획득하고, 상기 압축 대상 단위에 대응되는 복수의 바이너 리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 상기 복수의 방정식 중 적어도 일 부를 제거하고, 나머지 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득할 수 있다. 또한, 상기 프로세서는 상기 나머지 방정식의 개수가 상기 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 상기 나머지 방정식 간 디펜던시(dependency)에 기초하여, 상기 나머지 방정식 중 상기 미지수의 개수에 대응되 는 복수의 제1 방정식을 식별하고, 상기 복수의 제1 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너 리 데이터를 획득할 수 있다. 그리고, 상기 프로세서는 상기 획득된 압축 타겟 단위에 대응되는 바이너리 데이터에 기초하여 상기 나머지 방 정식 중 상기 복수의 제1 방정식을 제외한 적어도 하나의 제2 방정식의 성립 여부를 식별하고, 상기 적어도 하 나의 제2 방정식 중 성립되지 않는 제3 방정식에 대응되는 패치 정보를 생성하며, 상기 패치 정보는 상기 성립 되지 않는 제3 방정식의 개수 정보 및 상기 성립되지 않는 제3 방정식 각각의 식별 정보를 포함할 수 있다. 또한, 상기 프로세서는 상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 상기 대표 값 매트릭스 및 바이너리 데이터를 포함하는 상기 양자화 매트릭스를 획득할 수 있다. 그리고, 상기 프로세서는 상기 최종 인덱스 매트릭스에 기초하여 상기 제1 매트릭스에서 프루닝되지 않은 복수 의 제1 엘리먼트를 식별할 수 있다. 또한, 상기 랜덤 매트릭스는 제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며, 상기 랜덤 메트릭스에 포함된 상기 제1 타입의 엘리먼트의 개수 및 상기 랜덤 메트릭스에 포함된 상기 제2 타입의 엘리먼트의 개수는 서로 동일할 수 있다. 한편, 본 개시의 일 실시 예에 따른 샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 전자 장치의 제어 방법은 제1 임계 값에 기초하여 상기 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning)하고, 상기 복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나 타내는 제1 프루닝 인덱스 매트릭스를 획득하는 단계, 상기 제1 매트릭스를 상기 제1 매트릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제2 매트릭스 및, 상기 랭크와 상기 제1 매트릭스의 열의 개수에 기초하 여 크기가 결정된 제3 매트릭스로 팩토라이즈(factorize)하는 단계, 제2 임계 값에 기초하여 상기 제2 매트릭스 에 포함된 복수의 제2 엘리먼트 각각을 프루닝하고, 상기 복수의 제2 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭스를 획득하는 단계, 제3 임계 값에 기초하여 상기 제3 매트릭스에 포함된 복수의 제3 엘리먼트 각각을 프루닝하고, 상기 복수의 제3 엘리먼트 각각의 프루닝 여부를 바이너리 데 이터로 나타내는 제3 프루닝 인덱스 매트릭스를 획득하는 단계, 상기 제2 프루닝 인덱스 매트릭스 및 상기 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱스 매트릭스를 획득하는 단계 및 상기 최종 인덱스 매트릭스를 상 기 제1 프루닝 인덱스 매트릭스와 비교하여 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인덱스 매 트릭스 중 적어도 하나를 업데이트하는 단계를 포함한다. 또한, 상기 업데이트하는 단계는 상기 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 상기 제1 프루닝 인덱스 매트릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하 는 단계 및 상기 식별된 위치에 대응되는 상기 제1 매트릭스의 엘리먼트의 크기에 기초하여 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하여, 상기 제2 프루닝 인덱스 매트릭스 또는 상기 제3 프루닝 인 덱스 매트릭스 중 적어도 하나를 업데이트하는 단계를 포함할 수 있다. 그리고, 상기 적어도 하나를 업데이트하는 단계는 상기 상이한 데이터를 가지는 위치가 복수 개 식별되면, 상기 식별된 복수의 위치에 대응되는 상기 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하는 단계 및 상기 합산된 크기가 임계 크기 이상이면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 적어도 하나를 변경하는 단계를 포함 할 수 있다. 또한, 상기 적어도 하나를 업데이트하는 단계는 상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 증가되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 감소시키고, 상기 제2 임계 값 또는 상기 제3 임계 값 중 하나가 감소되면, 상기 제2 임계 값 또는 상기 제3 임계 값 중 다른 하나를 증가시킬 수 있다. 그리고, 상기 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득하는 단계, 상기 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득하는 단계, 상기 랜덤 매트릭스 및 상기 압 축 대상 단위에 기초하여 복수의 방정식을 획득하는 단계 및 상기 압축 대상 단위에 대응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 상기 복수의 방정식 중 적어도 일부 를 제거하고, 나머지 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계를 더 포함할 수 있다. 또한, 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는 상기 나머지 방정식의 개수가 상기 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 상기 나머지 방정식 간 디펜던시(dependency)에 기초하여, 상기 나머지 방정식 중 상기 미지수의 개수에 대응되는 복수의 제1 방정식을 식별하는 단계 및 상기 복수의 제1 방정식에 기초하여 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계를 포함할 수 있다. 그리고, 상기 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는 상기 획득된 압축 타겟 단위에 대 응되는 바이너리 데이터에 기초하여 상기 나머지 방정식 중 상기 복수의 제1 방정식을 제외한 적어도 하나의 제 2 방정식의 성립 여부를 식별하는 단계 및 상기 적어도 하나의 제2 방정식 중 성립되지 않는 제3 방정식에 대응 되는 패치 정보를 생성하는 단계를 더 포함하며, 상기 패치 정보는 상기 성립되지 않는 제3 방정식의 개수 정보 및 상기 성립되지 않는 제3 방정식 각각의 식별 정보를 포함할 수 있다. 또한, 상기 양자화 매트릭스를 획득하는 단계는 상기 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 상기 대표 값 매트릭스 및 바이너리 데이터를 포함하는 상기 양자화 매트릭스를 획득 할 수 있다. 그리고, 상기 양자화 매트릭스를 획득하는 단계는 상기 최종 인덱스 매트릭스에 기초하여 상기 제1 매트릭스에 서 프루닝되지 않은 복수의 제1 엘리먼트를 식별할 수 있다. 또한, 상기 랜덤 매트릭스는 제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며, 상기 랜덤 메트릭스에 포함된 상기 제1 타입의 엘리먼트의 개수 및 상기 랜덤 메트릭스에 포함된 상기 제2 타입의 엘리먼트의 개수는 서로 동일할 수 있다."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상과 같은 본 개시의 다양한 실시 예에 따르면, 전자 장치는 패럴랠 컴퓨팅 처리가 가능하도록 인공지능 모델 을 압축하여 하드웨어 성능에 따른 제약을 극복하고, 처리 속도를 향상시킬 수 있다."}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 첨부 도면을 참조하여 본 개시를 상세히 설명한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수 치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. A 또는/및 B 중 적어도 하나라는 표현은 \"A\" 또는 \"B\" 또는 \"A 및 B\" 중 어느 하나를 나타내는 것으로 이해되어 야 한다. 본 명세서에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들 을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 어떤 구성요소가 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것 이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시에서 \"모듈\" 혹은 \"부\"는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되 거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\" 혹은 복수의 \"부\"는 특정한 하드 웨어로 구현될 필요가 있는 \"모듈\" 혹은 \"부\"를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하나의 프 로세서(미도시)로 구현될 수 있다. 본 명세서에서, 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 이하 첨부된 도면들을 참조하여 본 개시의 일 실시 예를 보다 상세하게 설명한다. 도 2a는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 나타내는 블럭도이다. 도 2a에 도시된 바와 같 이, 전자 장치는 메모리 및 프로세서를 포함한다. 전자 장치는 인공지능 모델을 압축하는 장치일 수 있다. 예를 들어, 전자 장치는 인공지능 모델에 포 함된 매트릭스(matrix)를 압축하는 장치로서, 서버, 데스크탑 PC, 노트북, 스마트폰, 태블릿 PC 등일 수 있다. 또한, 인공지능 모델에는 복수의 매트릭스가 포함될 수 있으며, 전자 장치는 복수의 매트릭스 전체를 압축 할 수 있다. 즉, 전자 장치는 인공지능 모델을 압축하여 인공지능 모델의 데이터 크기를 줄일 수 있는 장 치라면 어떠한 장치라도 무방하다. 여기서, 매트릭스는 웨이트(weight) 매트릭스일 수 있다. 또한, 전자 장치는 인공지능 모델을 프루닝(pruning)할 수 있다. 프루닝은 redundant한 웨이트를 제거하는 방법으로, 구체적으로 인공지능 모델에 포함된 매트릭스에서 특정 엘리먼트(특정 딥러닝 파라미터)의 수치를 0 으로 바꾸는 방법이다. 예를 들어, 전자 장치는 인공지능 모델에 포함된 m × n의 매트릭스에 포함된 복수 의 엘리먼트 중 기설정된 값 이하의 엘리먼트를 0으로 바꾸는 방법으로, m × n의 매트릭스를 프루닝할 수있다. 전자 장치는 프루닝에 따라 프루닝 인덱스(프루닝 마스킹)를 획득할 수 있다. 프루닝 인덱스는 매트릭스에 포함된 복수의 엘리먼트(파라미터) 각각이 프루닝 되었는지를 0 또는 1로 나타낸다. 즉, m × n의 매트릭스가 프루닝되면, m × n의 프루닝 인덱스가 매트릭스 형태로 생성될 수 있으며, m × n의 프루닝 인덱스는 m × n의 매트릭스에 포함된 복수의 엘리먼트 중 0으로 변환된 엘리먼트의 위치를 0으로, m × n의 매트릭스에 포함된 복 수의 엘리먼트 중 0으로 변환되지 않은 엘리먼트의 위치를 1로서 포함할 수 있다. 다만, 이에 한정되는 것은 아니며, 0 및 1이 반대의 의미일 수도 있고, 0 및 1이 아닌 다른 값으로 프루닝 여부 가 표현될 수도 있다. 또한, 어떤 엘리먼트가 프루닝 되었는지가 x, y 좌표로 표현될 수도 있다. 프루닝 인덱스는 매트릭스 형태이므로, 이하에서는 프루닝 인덱스 매트릭스라는 표현으로 설명한다. 그리고, 전자 장치는 인공지능 모델을 팩토라이제이션(factorization) 및 양자화(quantization)할 수 있다. 팩토라이제이션은 m × n의 매트릭스를 랭크(rank) r을 가지는 두 개의 매트릭스들로 분할하는 방법이고, 양자화는 대표 값으로 웨이트를 변환하는 방법이다. 메모리는 프로세서와는 별도로 구비되며, 하드디스크, 비휘발성 메모리 및 휘발성 메모리 등으로 구 현될 수 있다. 메모리는 샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스를 저장할 수 있다. 여기서, 제1 매트릭스는 인공지능 모델을 구성하는 필터 데이터, 커널(kernel) 데이터 등일 수 있다. 또한, 메모리는 인공지능 모델에 포함된 복수의 매트릭스를 저장할 수도 있다. 또는, 메모리는 인공지능 모델에 이용될 수 있는 데이터를 저장하고, 프로세서는 메모리에 저장 된 데이터를 제1 매트릭스로서 식별할 수도 있다. 프로세서는 전자 장치의 동작을 전반적으로 제어한다. 일 실시 예에 따라 프로세서는 디지털 시그널 프로세서(digital signal processor(DSP), 마이크로 프로세 서(microprocessor), TCON(Time controller)으로 구현될 수 있다. 다만, 이에 한정되는 것은 아니며, 중앙처리 장치(central processing unit(CPU)), MCU(Micro Controller Unit), MPU(micro processing unit), 컨트롤러 (controller), 어플리케이션 프로세서(application processor(AP)), 또는 커뮤니케이션 프로세서 (communication processor(CP)), ARM 프로세서 중 하나 또는 그 이상을 포함하거나, 해당 용어로 정의될 수 있 다. 또한, 프로세서는 프로세싱 알고리즘이 내장된 SoC(System on Chip), LSI(large scale integration) 로 구현될 수도 있고, FPGA(Field Programmable gate array) 형태로 구현될 수도 있다. 프로세서는 제1 임계 값에 기초하여 메모리에 저장된 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각 각을 프루닝(pruning)하고, 복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스를 획득할 수 있다. 예를 들어, 프로세서는 100 × 10의 제1 매트릭스에 포함된 1000개의 제1 엘리먼트 중 크기가 3 이하인 엘 리먼트를 0으로 변환하고, 나머지 엘리먼트를 그대로 유지하는 방식으로 프루닝할 수 있다. 그리고, 프로세서 는 1000개의 제1 엘리먼트 중 프루닝된 엘리먼트를 0으로, 프루닝되지 않은 엘리먼트를 1로 나타내는 제1 프루닝 인덱스 매트릭스를 획득할 수 있다. 즉, 제1 프루닝 인덱스 매트릭스는 제1 매트릭스와 크기가 동일한 100 × 10의 형태이며, 0 또는 1 만을 포함할 수 있다. 제1 프루닝 인덱스 매트릭스는 이상적인 프루닝이 이루어진 경우이다. 좀더 구체적으로, 제1 매트릭스에 포함된 제1 엘리먼트는 크기가 클수록 중요도가 높을 수 있으며, 제1 프루닝 인덱스 매트릭스는 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기를 반영하여 프루닝된 결과를 나타내기 때문에 이상적이라고 할 수 있다. 다만, 후술할 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스는 팩토라이제이션 과정을 거쳤기 때 문에 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기를 반영하지 못하며, 이상적이라고 할 수 없다. 이를 보완하는 방법에 대하여는 후술한다.한편, 프로세서는 제1 매트릭스를 제1 매트릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제2 매트릭스 및, 랭크와 제1 매트릭스의 열의 개수에 기초하여 크기가 결정된 제3 매트릭스로 팩토라이즈 (factorize)할 수 있다. 예를 들어, 프로세서는 100 × 10의 제1 매트릭스를 100 × 3의 제2 매트릭스 및 3 × 10의 제3 매트릭스 로 팩토라이즈할 수 있다. 이 경우, 랭크는 3이며, 랭크가 작아질수록 압축률이 향상된다. 다만, 제2 매트릭스 및 제3 매트릭스를 곱하더라도 제1 매트릭스가 복원되는 것은 아니며, 오차가 발생하게 된다. 한편, 팩토라이제이션 방법은 non-negative matrix factorization(NMF)일 수 있으나, 이에 한정되는 것은 아니 며, 얼마든지 다양한 방법이 이용될 수 있다. 팩토라이제이션 방법은 종래 기술이므로 구체적인 방법은 생략한 다. 그리고, 프로세서는 제2 임계 값에 기초하여 제2 매트릭스에 포함된 복수의 제2 엘리먼트 각각을 프루닝하 고, 복수의 제2 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭스를 획 득하며, 제3 임계 값에 기초하여 제3 매트릭스에 포함된 복수의 제3 엘리먼트 각각을 프루닝하고, 복수의 제3 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스를 획득할 수 있다. 즉, 프로세서는 제1 프루닝 인덱스 매트릭스와는 별개로 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱 스 매트릭스를 동일한 방법으로 획득할 수 있다. 다만, 프로세서는 프루닝을 위한 임계 값을 다르게 적용 할 수 있다. 상술한 예에서 제2 프루닝 인덱스 매트릭스는 제2 매트릭스와 크기가 동일한 100 × 3의 형태이며, 0 또는 1 만 을 포함할 수 있다. 또한, 제3 프루닝 인덱스 매트릭스는 제3 매트릭스와 크기가 동일한 3 × 10의 형태이며, 0 또는 1 만을 포함할 수 있다. 따라서, 제1 프루닝 인덱스 매트릭스는 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스만큼 압축될 수 있다. 상술한 예에서 제1 프루닝 인덱스 매트릭스는 100 × 10 = 1000 비트이고, 제2 프루닝 인덱스 매트릭 스는 100 × 3 = 300 비트이고, 제3 프루닝 인덱스 매트릭스는 3 × 10 = 30 비트이다. 즉, 1000 비트의 제1 프 루닝 인덱스 매트릭스가 300 + 30 = 330 비트로 압축될 수 있다. 즉, 인공지능 모델을 이용하고자 하는 장치는 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스를 메 모리에 저장하고, 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스로부터 제1 프루닝 인덱스 매트릭 스에 대응되는 매트릭스를 복원하여 인공지능 모델을 이용한 연산을 수행할 수 있다. 다만, 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스로부터 복원된 매트릭스는 제1 프루닝 인덱스 매트릭스와 다르며 연산의 정확도가 낮아질 수 있다. 연산의 정화도가 낮아지는 이유는 제2 프루닝 인덱스 매트 릭스 및 제3 프루닝 인덱스 매트릭스의 획득 과정에서 팩토라이제이션이 이루어졌기 때문이다. 즉, 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스로부터 복원된 매트릭스는 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기를 반영하지 않은 프루닝 결과를 포함하기 때문에 연산의 정확도가 낮아지게 된다. 따라서, 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기가 반영된 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스를 획득할 필요가 있다. 이를 위해, 프로세서는 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱 스 매트릭스를 획득할 수 있다. 좀더 구체적으로, 프로세서는 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스를 이용하여 매트릭스 곱셈을 수행할 수 있다. 다만, 프로세서는 매트릭스 곱셈 과정에서 덧셈 연산을 XOR 연산으로 수행할 수 있다. 즉, 프로세서는 1 + 1 = 0으로 연산하게 되며, 그 밖의 연산은 매트릭스 연산과 동일하다. 상술한 예에 의하면, 최종 인덱스 매트릭스는 제1 프루닝 인덱스 매트릭스와 크기가 동일한 100 × 10의 형태이 며, XOR 연산으로 인해 0 또는 1 만을 포함할 수 있다. 다만, 상술한 바와 같이, 팩토라이제이션 과정을 거쳤기 때문에, 최종 인덱스 매트릭스는 제1 프루닝 인덱스 매트릭스와 동일하지 않을 가능성이 높다. 즉, 최종 인덱스 매트릭스는 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기를 반영하지 않은 프루닝 결과를 포함할 수 있으며, 최종 인덱스 매트릭스를 이용할 경우 연산의 정확도가 낮아질 수 있다. 이후, 프로세서는 최종 인덱스 매트릭스를 제1 프루닝 인덱스 매트릭스와 비교하여 제2 프루닝 인덱스 매 트릭스 또는 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트할 수 있다.구체적으로, 프로세서는 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 제1 프루닝 인덱스 매트 릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하고, 식별된 위치에 대응되는 제1 매트릭스의 엘리먼트의 크기에 기초하여 제2 임계 값 또는 제3 임계 값 중 적어도 하나를 변경하여, 제2 프루닝 인덱스 매트릭스 또는 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트할 수 있다. 특히, 프로세서는 상이한 데이터를 가지는 위치가 복수 개 식별되면, 식별된 복수의 위치에 대응되는 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하고, 합산된 크기가 임계 크기 이상이면, 제2 임계 값 또는 제3 임 계 값 중 적어도 하나를 변경할 수 있다. 이는 최초의 제1 매트릭스에서 중요 엘리먼트가 프루닝에 의해 제거되 었는지를 확인하는 과정으로, 합산된 크기가 클수록 중요 엘리먼트가 팩토라이제이션 및 프루닝으로 인해 제거 되었음을 의미한다. 따라서, 프로세서는 합산된 크기가 임계 크기 이상이면, 제2 임계 값 또는 제3 임계 값 중 적어도 하나를 변경하고, 변경된 제2 임계 값 및 변경된 제3 임계 값에 기초하여 제2 프루닝 인덱스 매트 릭스 및 제3 프루닝 인덱스 매트릭스를 업데이트하는 과정을 반복하게 된다. 여기서, 프로세서는 제2 임계 값 또는 제3 임계 값 중 하나가 증가되면, 제2 임계 값 또는 제3 임계 값 중 다른 하나를 감소시키고, 제2 임계 값 또는 제3 임계 값 중 하나가 감소되면, 제2 임계 값 또는 제3 임계 값 중 다른 하나를 증가시킬 수 있다. 프로세서는 제2 프루닝 인덱스 매트릭스 또는 제3 프루닝 인덱스 매트릭스 중 적어도 하나가 업데이트되면, 최종 인덱스 매트릭스는 재획득하고, 재획득된 최종 인덱스 매트릭스와 제1 프루닝 인덱스 매트 릭스는 비교하여 상이한 데이터를 가지는 위치를 식별할 수 있다. 그리고, 프로세서는 상이한 데이터를 가지는 위치가 복수 개 식별되면, 식별된 복수의 위치에 대응되는 제 1 매트릭스의 복수의 엘리먼트의 크기를 합산하고, 합산된 크기가 임계 크기 이상인지 식별할 수 있다. 프로세 서는 이상과 같은 과정을 합산된 크기가 임계 크기 미만이 될 때까지 반복할 수 있다. 합산된 크기가 임계 크기 미만이 되면, 최종 업데이트된 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스를 포함하는 인 공지능 모델의 연산 결과와 제1 프루닝 인덱스 매트릭스를 포함하는 인공지능 모델의 연산 결과가 큰 차이가 나 지 않으며, 다시 말해 연산의 정확도가 유지될 수 있다. 또한, 제1 프루닝 인덱스 매트릭스가 최종 업데이트된 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스로 압축될 수 있다. 이상과 같은 방법을 통해 연산의 정확도를 유지하며, 프루닝 과정에서 생성되는 프루닝 인덱스 매트릭스의 데이 터 용량을 압축할 수 있다. 한편, 프로세서는 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수 있다. 터너리 양자화 방법은 종래 기술이므로 구체적인 설명은 생략한다. 또는, 프로세서는 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수도 있다. 여기서, 프로세서는 프루닝 여부를 제1 프루닝 인덱스 매트릭스 및 최종 인덱스 매트릭스 하나에 기초하여 식별할 수 있다. 한편, 양자화 매트릭스에 포함된 각 엘리먼트는 1 비트일 수도 있고, 1 비트를 초과할 수도 있다. 다만, 양자화 매트릭스에 포함된 각 엘리먼트가 1 비트를 초과하는 경우라도 양자화 매트릭스에 포함된 각 엘리먼트가 1 비트 인 경우의 압축 방법이 그대로 적용될 수 있다. 가령, 양자화 매트릭스에 포함된 각 엘리먼트가 2 비트라면, 양 자화 매트릭스를 자릿수를 기준으로 동일한 크기의 두 개의 매트릭스로 분할할 수 있으며, 두 개의 매트릭스 각 각에 포함된 엘리먼트는 1 비트일 수 있다. 그리고, 양자화 매트릭스에 포함된 각 엘리먼트가 1 비트인 경우의 압축 방법이 두 개의 매트릭스 각각에 그대로 적용될 수 있다. 따라서, 이하에서는 양자화 매트릭스에 포함된 각 엘리먼트가 1 비트인 것을 가정하고, 압축 방법을 설명한다. 프로세서는 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득할 수 있다. 예를 들어, 프로세서는 양자화 매트릭스에 포함된 바이너 리 데이터의 압축 대상 단위인 7 비트를 및 압축 타겟 단위인 3 비트에 기초하여 7 × 3의 랜덤 매트릭스를 획 득할 수 있다. 여기서, 압축 대상 단위는 양자화 매트릭스에 포함된 바이너리 데이터 중 한 번에 압축하고자 하는 비트수를 의 미하며, 압축 타겟 단위는 압축 대상 단위를 몇 개의 비트수로 압축할 것인지를 나타낸다. 이상의 예에서 7 비트는 3 비트로 압축되며, 양자화 매트릭스에 총 70개의 비트가 있다면 양자화 매트릭스는 최종적으로 30 비트로 압축될 수 있다. 따라서, 압축 타겟 단위가 압축 대상 단위보다 작게 설정되어야 양자화 매트릭스가 압축될 수 있다. 그리고, 랜덤 매트릭스는 제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며, 랜덤 메트릭스에 포함된 제 1 타입의 엘리먼트의 개수 및 랜덤 메트릭스에 포함된 제2 타입의 엘리먼트의 개수는 서로 동일할 수 있다. 예 를 들어, 랜덤 매트릭스는 0 및 1을 포함하며, 0의 개수와 1의 개수는 동일할 수 있다. 다만, 이에 한정되는 것 은 아니며, 랜덤 매트릭스에 포함된 엘리먼트의 개수가 홀수인 경우, 0의 개수와 1의 개수 간의 차이는 1일 수 도 있다. 프로세서는 랜덤 매트릭스 및 압축 대상 단위에 기초하여 복수의 방정식을 획득하고, 압축 대상 단위에 대 응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 복수의 방정 식 중 적어도 일부를 제거하고, 나머지 방정식에 기초하여 압축 타겟 단위에 대응되는 바이너리 데이터를 획득 할 수 있다. 예를 들어, 프로세서는 랜덤 매트릭스 및 압축 타겟 단위의 곱이 압축 대상 단위가 되도록 복수의 방정식 을 획득하고, 압축 대상 단위에 대응되는 복수의 제1 엘리먼트 중 프루닝된 제1 엘리먼트가 포함된 방정식을 제 거할 수 있다. 프루닝된 제1 엘리먼트는 어떠한 값을 갖더라도 의미가 없기 때문에 방정식으로 이용될 가치가 없다. 프로세서는 나머지 방정식에 기초하여 압축 타겟 단위에 대응되는 바이너리 데이터를 획득할 수 있 다. 그리고, 프로세서는 나머지 방정식의 개수가 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 나머지 방정식 간 디펜던시(dependency)에 기초하여, 나머지 방정식 중 미지수의 개수에 대응되는 복수의 제1 방정식을 식별하고, 복수의 제1 방정식에 기초하여 압축 타겟 단위에 대응되는 바이너리 데이터를 획득할 수도 있다. 이때, 프로세서는 획득된 압축 타겟 단위에 대응되는 바이너리 데이터에 기초하여 나머지 방정식 중 복수 의 제1 방정식을 제외한 적어도 하나의 제2 방정식의 성립 여부를 식별하고, 적어도 하나의 제2 방정식 중 성립 되지 않는 제3 방정식에 대응되는 패치 정보를 생성할 수 있다. 여기서, 패치 정보는 성립되지 않는 제3 방정식의 개수 정보 및 성립되지 않는 제3 방정식 각각의 식별 정보를 포함할 수 있다. 한편, 프로세서는 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너리 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수도 있다. 여기서, 프로세서는 최종 인덱스 매트릭스에 기초하여 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리 먼트를 식별할 수 있다. 다만, 이에 한정되는 것은 아니며, 프로세서는 제1 프루닝 인덱스 매트릭스에 기 초하여 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트를 식별할 수도 있다. 이상과 같은 방법을 통해 프로세서는 양자화 매트릭스를 압축할 수 있다. 이후, 인공지능 모델을 복원하는 경우, 랜덤 매트릭스에 기초하여 압축된 양자화 매트릭스로부터 양자화 매트릭스로 복원할 수 있다. 복원 과정 에서 패치 정보를 이용하여 일부 바이너리 데이터를 변환할 수 있다. 도 2b는 본 개시의 일 실시 예에 따른 전자 장치의 세부 구성을 나타내는 블럭도이다. 전자 장치는 메모리 및 프로세서를 포함할 수 있다. 또한, 도 2b에 따르면, 전자 장치는 디스플레이, 통신 인터페이스, 사용자 인터페이스, 입출력 인터페이스, 스피커, 마이크를 더 포함 할 수도 있다. 도 2b에 도시된 구성요소들 중 도 2a에 도시된 구성요소와 중복되는 부분에 대해서는 자세한 설 명을 생략하도록 한다. 메모리는 프로세서에 포함된 롬(ROM)(예를 들어, EEPROM(electrically erasable programmable read- only memory)), 램(RAM) 등의 내부 메모리로 구현되거나, 프로세서와 별도의 메모리로 구현될 수도 있다. 이 경우, 메모리는 데이터 저장 용도에 따라 전자 장치에 임베디드된 메모리 형태로 구현되거나, 전 자 장치에 탈부착이 가능한 메모리 형태로 구현될 수도 있다. 예를 들어, 전자 장치의 구동을 위한 데이터의 경우 전자 장치에 임베디드된 메모리에 저장되고, 전자 장치의 확장 기능을 위한 데이터의 경우 전자 장치에 탈부착이 가능한 메모리에 저장될 수 있다. 한편, 전자 장치에 임베디드된 메모리 의 경우 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비휘발성 메모리(non-volatile Memory)(예: OTPROM(one time programmable ROM), PROM(programmable ROM),EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash 등), 하드 드라이브, 또는 솔리드 스테이트 드라이 브(solid state drive(SSD)) 중 적어도 하나로 구현되고, 전자 장치에 탈부착이 가능한 메모리의 경우 메 모리 카드(예를 들어, CF(compact flash), SD(secure digital), Micro-SD(micro secure digital), Mini- SD(mini secure digital), xD(extreme digital), MMC(multi-media card) 등), USB 포트에 연결가능한 외부 메 모리(예를 들어, USB 메모리) 등과 같은 형태로 구현될 수 있다. 메모리는 전자 장치를 구동시키기 위한 O/S(Operating System) 소프트웨어 모듈, 인공지능 모델 모듈 및 압축 모듈 등과 같이 다양한 데이터를 저장한다. 프로세서는 메모리에 저장된 각종 프로그램을 이용하여 전자 장치의 동작을 전반적으로 제어한 다. 구체적으로, 프로세서는 RAM, ROM, 메인 CPU, 제1 내지 n 인터페이스(124-1 ~ 124-n), 버 스를 포함한다. RAM, ROM, 메인 CPU, 제1 내지 n 인터페이스(124-1 ~ 124-n) 등은 버스를 통해 서로 연결 될 수 있다. ROM에는 시스템 부팅을 위한 명령어 세트 등이 저장된다. 턴온 명령이 입력되어 전원이 공급되면, 메인 CPU는 ROM에 저장된 명령어에 따라 메모리에 저장된 O/S를 RAM에 복사하고, O/S를 실행시 켜 시스템을 부팅시킨다. 부팅이 완료되면, 메인 CPU는 메모리에 저장된 각종 어플리케이션 프로그램 을 RAM에 복사하고, RAM에 복사된 어플리케이션 프로그램을 실행시켜 각종 동작을 수행한다. 메인 CPU는 메모리에 액세스하여, 메모리에 저장된 O/S를 이용하여 부팅을 수행한다. 그리고, 메모리에 저장된 각종 프로그램, 컨텐츠 데이터 등을 이용하여 다양한 동작을 수행한다. 제1 내지 n 인터페이스(124-1 내지 124-n)는 상술한 각종 구성 요소들과 연결된다. 인터페이스들 중 하나는 네 트워크를 통해 외부 장치와 연결되는 네트워크 인터페이스가 될 수도 있다. 한편, 프로세서는 그래픽 처리 기능(비디오 처리 기능)을 수행할 수 있다. 예를 들어, 프로세서는 연 산부(미도시) 및 렌더링부(미도시)를 이용하여 아이콘, 이미지, 텍스트 등과 같은 다양한 객체를 포함하는 화면 을 생성할 수 있다. 여기서, 연산부(미도시)는 수신된 제어 명령에 기초하여 화면의 레이아웃에 따라 각 객체들 이 표시될 좌표값, 형태, 크기, 컬러 등과 같은 속성값을 연산할 수 있다. 그리고, 렌더링부(미도시)는 연산부 (미도시)에서 연산한 속성값에 기초하여 객체를 포함하는 다양한 레이아웃의 화면을 생성할 수 있다. 또한, 프 로세서는 비디오 데이터에 대한 디코딩, 스케일링, 노이즈 필터링, 프레임 레이트 변환, 해상도 변환 등과 같은 다양한 이미지 처리를 수행할 수 있다. 한편, 프로세서는 오디오 데이터에 대한 처리를 수행할 수 있다. 구체적으로, 프로세서는 오디오 데 이터에 대한 디코딩이나 증폭, 노이즈 필터링 등과 같은 다양한 처리가 수행될 수 있다. 디스플레이는 LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플레이, PDP(Plasma Display Panel) 등과 같은 다양한 형태의 디스플레이로 구현될 수 있다. 디스플레이 내에는 a- si TFT, LTPS(low temperature poly silicon) TFT, OTFT(organic TFT) 등과 같은 형태로 구현될 수 있는 구동 회로, 백라이트 유닛 등도 함께 포함될 수 있다. 한편, 디스플레이는 터치 센서와 결합된 터치 스크린, 플 렉시블 디스플레이(flexible display), 3차원 디스플레이(3D display) 등으로 구현될 수 있다. 또한, 본 개시의 일 실시 예에 따른, 디스플레이는 영상을 출력하는 디스플레이 패널뿐만 아니라, 디스플 레이 패널을 하우징하는 베젤을 포함할 수 있다. 특히, 본 개시의 일 실시 예에 따른, 베젤은 사용자 인터랙션 을 감지하기 위한 터치 센서(미도시)를 포함할 수 있다. 통신 인터페이스는 다양한 유형의 통신방식에 따라 다양한 유형의 외부 장치와 통신을 수행하는 구성이다. 통신 인터페이스는 와이파이 모듈, 블루투스 모듈, 적외선 통신 모듈 및 무선 통신 모듈 등을 포함한다. 여기서, 각 통신 모듈은 적어도 하나의 하드웨어 칩 형태로 구현될 수 있다. 프로세서는 통신 인터페이스를 이용하여 각종 외부 장치와 통신을 수행할 수 있다. 여기서, 외부 장 치는 TV와 같은 타 디스플레이 장치, set-top box와 같은 영상 처리 장치, 외부 서버, 리모컨과 같은 제어 장치, 블루투스 스피커와 같은 음향 출력 장치, 조명 장치, 스마트 청소기, 스마트 냉장고와 같은 가전 기기,IOT 홈 매니저 등과 같은 서버 등을 포함할 수 있다. 와이파이 모듈, 블루투스 모듈은 각각 WiFi 방식, 블루투스 방식으로 통신을 수행한다. 와이파이 모 듈이나 블루투스 모듈을 이용하는 경우에는 SSID 및 세션 키 등과 같은 각종 연결 정보를 먼저 송수 신하여, 이를 이용하여 통신 연결한 후 각종 정보들을 송수신할 수 있다. 적외선 통신 모듈은 시 광선과 밀리미터파 사이에 있는 적외선을 이용하여 근거리에 무선으로 데이터를 전 송하는 적외선 통신(IrDA, infrared Data Association)기술에 따라 통신을 수행한다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation)등과 같은 다양한 무선 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 그 밖에 통신 인터페이스는 LAN(Local Area Network) 모듈, 이더넷 모듈, 또는 페어 케이블, 동축 케이블 또는 광섬유 케이블 등을 이용하여 통신을 수행하는 유선 통신 모듈 중 적어도 하나를 포함할 수 있다. 일 예에 따라 통신 인터페이스는 리모컨과 같은 외부 장치 및 외부 서버와 통신하기 위해 동일한 통신 모 듈(예를 들어, Wi-Fi 모듈)을 이용할 수 있다. 다른 예에 따라 통신 인터페이스는 리모컨과 같은 외부 장치 및 외부 서버와 통신하기 위해 상이한 통신 모듈(예를 들어, Wi-Fi 모듈)을 이용할 수 있다. 예를 들어, 통신 인터페이스는 외부 서버와 통신하기 위 해 이더넷 모듈 또는 WiFi 모듈 중 적어도 하나를 이용할 수 있고, 리모컨과 같은 외부 장치와 통신하기 위해 BT 모듈을 이용할 수도 있다. 다만 이는 일 실시 예에 불과하며 통신 인터페이스는 복수의 외부 장치 또는 외부 서버와 통신하는 경우 다양한 통신 모듈 중 적어도 하나의 통신 모듈을 이용할 수 있다. 사용자 인터페이스는 버튼, 터치 패드, 마우스 및 키보드와 같은 장치로 구현되거나, 상술한 디스플레이 기능 및 조작 입력 기능도 함께 수행 가능한 터치 스크린으로도 구현될 수 있다. 여기서, 버튼은 전자 장치 의 본체 외관의 전면부나 측면부, 배면부 등의 임의의 영역에 형성된 기계적 버튼, 터치 패드, 휠 등과 같 은 다양한 유형의 버튼이 될 수 있다. 입출력 인터페이스는 HDMI(High Definition Multimedia Interface), MHL (Mobile High-Definition Link), USB (Universal Serial Bus), DP(Display Port), 썬더볼트(Thunderbolt), VGA(Video Graphics Array) 포트, RGB 포트, D-SUB(D-subminiature), DVI(Digital Visual Interface) 중 어느 하나의 인터페이스일 수 있 다. 입출력 인터페이스는 오디오 및 비디오 신호 중 적어도 하나를 입출력 할 수 있다. 구현 예에 따라, 입출력 인터페이스는 오디오 신호만을 입출력하는 포트와 비디오 신호만을 입출력하는 포 트를 별개의 포트로 포함하거나, 오디오 신호 및 비디오 신호를 모두 입출력하는 하나의 포트로 구현될 수 있다. 스피커는 입출력 인터페이스에서 처리된 각종 오디오 데이터뿐만 아니라 각종 알림 음이나 음성 메시 지 등을 출력하는 구성요소일 수 있다. 마이크는 사용자 음성이나 기타 소리를 입력받아 오디오 데이터로 변환하기 위한 구성이다. 마이크는 활성화 상태에서 사용자의 음성을 수신할 수 있다. 예를 들어, 마이크는 전자 장치의 상측이나 전면 방향, 측면 방향 등에 일체화된 일체형으로 형성될 수 있다. 마이크는 아날로그 형태의 사 용자 음성을 수집하는 마이크, 수집된 사용자 음성을 증폭하는 앰프 회로, 증폭된 사용자 음성을 샘플링하여 디 지털 신호로 변환하는 A/D 변환회로, 변환된 디지털 신호로부터 노이즈 성분을 제거하는 필터 회로 등과 같은 다양한 구성을 포함할 수 있다. 이상과 같이 전자 장치는 인공지능 모델에 포함된 매트릭스를 압축하여 인공지능 모델 전체의 데이터 용량 을 축소시킬 수 있다. 이하에서는 도면을 통해 전자 장치의 동작을 좀더 구체적으로 설명한다. 도 3a 내지 도 3d는 본 개시의 이해를 돕기 위한 인공지능 모델에 포함된 매트릭스의 처리 방법을 설명하기 위 한 도면들이다.도 3a는 두 개의 매트릭스를 포함하는 인공지능 모델의 일 예를 나타내는 도면으로, 프로세서는 Li-1의 입 력값들을 W12에 입력하여 Li의 중간값을 획득하며, Li의 중간값들을 W23에 입력하여 Li+1의 최종값을 획득할 수 있다. 다만, 도 3a는 인공지능 모델을 매우 간략하게 도시한 것으로, 실제로는 도 3a보다 더 많은 매트릭스를 포함할 수 있다. 도 3b는 인공지능 모델에 포함된 제1 매트릭스의 일 예를 나타내는 도면으로, 제1 매트릭스는 m × n의 형태일 수 있다. 예를 들어, 제1 매트릭스는 10000 × 8000의 형태일 수 있다. 그리고, 제1 매트릭스 내의 복수의 제1 엘리먼트는 각각 32 비트일 수 있다. 즉, 제1 매트릭스는 32 비트인 제1 엘리먼트를 10000 × 8000개 포함할 수 있다. 다만, 이에 한정되는 것은 아니며, 제1 매트릭스의 크기 및 각 제1 엘리먼트의 비트수는 얼마든지 다를 수도 있다. 도 3a 및 도 3b에 도시된 바와 같이, 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 크기, 제1 매트릭스에 포함된 복수의 제1 엘리먼트의 개수 및 인공지능 모델에 포함된 매트릭스의 개수를 고려하면, 인공지능 모델을 저장하기 위해 매우 큰 저장 공간이 필요하며, 인공지능 모델의 연산을 위해서도 상당한 전력이 소모될 수 있다. 그에 따라, 프로세서는 매트릭스를 프루닝 및 양자화하여 저장 공간을 축소하고, 연산량을 감소시킬 수 있다. 도 3c는 도 3b에 도시된 제1 매트릭스를 프루닝 및 양자화한 결과를 나타내는 도면이다. 프로세서는 제1 임계 값에 기초하여 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning) 하고, 복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스 를 획득할 수 있다. 예를 들어, 프로세서는 제1 매트릭스에 포함된 복수의 제1 엘리먼트 중 30보다 작은 제1 엘리먼트를 0으로 변환하고, 나머지 제1 엘리먼트를 그대로 유지하는 방식으로 제1 매트릭스를 프루닝할 수 있다. 그리고, 프로세 서는 복수의 제1 엘리먼트 중 0으로 변환된 제1 엘리먼트는 0으로, 나머지 제1 엘리먼트는 1로 변환하여 제1 프루닝 인덱스 매트릭스를 획득할 수 있다. 즉, 제1 프루닝 인덱스 매트릭스는 제1 매트릭스와 크기가 동일하며, 0 또는 1을 포함할 수 있다. 그리고, 프로세서는 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수 있다. 설명의 편의를 위해 [a, b]를 터너리 양자화하는 방법을 설명한다. 여기서, a, b는 각각 32 비트일 수 있다. 프 로세서는 [a, b]를 터너리 양자화하여 대표 값 c 및 양자화 매트릭스 [d, e]를 획득할 수 있다. 여기서, 대표 값 c는 32 비트이고, d, e는 각각 1 비트이다. 즉, 프로세서는 터너리 양자화를 통해 [a, b]의 총 64 비트를 대표 값 c 및 양자화 매트릭스 [d, e]의 총 32 + 1 + 1 = 34 비트로 압축할 수 있다. 터너리 양자화 방법에서 대표 값을 획득하는 방법을 설명하기 위해, [a, b]를 [3, -1]로 예를 들어 설명한다. 프로세서는 3, -1 각각의 크기의 평균인 2를 대표 값으로 설정할 수 있다. 그리고, 프로세서는 3, -1 각각에 대응되는 양자화 매트릭스 [1, 0]을 획득할 수 있다. 이 경우, 3은 2로 양자화되고, -1은 -2로 양자화되 며, 각각 1 만큼의 양자화 오차가 발생하게 된다. 프로세서는 도 3b의 제1 매트릭스에서 n 개의 엘리먼트를 하나의 대표 값을 이용하여 터너리 양자화할 수 있다. 그에 따라, 도 3c에서는 m 개의 엘리먼트를 포함하는 대표 값 매트릭스를 도시하였다. 그리고, 프로 세서는 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수 있으며, 양자화 매트릭스는 제1 매트릭스와 크기가 동일하며, 0 또는 1을 포함할 수 있다. 다만, 이는 터너리 양자화의 일 예를 나타내는 것으로 프로세서는 도 3b의 제1 매트릭스에서 n 개가 아닌 다른 개수의 엘리먼트를 하나의 대표 값을 이용하여 터너리 양자화할 수도 있다. 이 경우, 대표 값 매트릭스 에 포함된 엘리먼트의 개수는 m 개가 아닐 수 있다. 또한, 프로세서는 각 엘리먼트가 복수의 비트로 이루어진 양자화 매트릭스를 획득할 수도 있다. 이는 터너 리 양자화 방법에 따른 것으로 구체적인 설명은 종래 기술이므로 생략한다. 예를 들어, 프로세서는 도 3d의 상단에 도시된 바와 같이, 각 엘리먼트가 2 비트인 양자화 매트릭스를 획 득할 수도 있다. 이 경우, 프로세서는 도 3d의 하단에 도시된 바와 같이, 비트의 자릿수에 따라 두 개의 서브 양자화 매트릭스를 획득할 수 있다.후술할 양자화 매트릭스의 압축 방법은 양자화 매트릭스의 각 엘리먼트가 1 비트인 경우를 가정한다. 다만, 프 로세서는 양자화 매트릭스의 각 엘리먼트가 복수의 비트로 이루어진 경우라도 도 3d와 같이 자릿수에 따라 양자화 매트릭스를 복수의 서브 양자화 매트릭스로 구분하고, 복수의 서브 양자화 매트릭스 각각을 압축할 수도 있다. 따라서, 이하에서는 양자화 매트릭스에 포함된 각 엘리먼트가 1 비트로 이루어진 경우에 대하여만 설명한 다. 프로세서는 도 3c의 제1 프루닝 인덱스 매트릭스 및 양자화 매트릭스의 추가 압축을 수행할 수 있으며, 이에 대하여는 이후의 도면을 통해 설명한다. 도 4a 내지 도 4c는 본 개시의 일 실시 예에 따른 제1 프루닝 인덱스 매트릭스의 압축 방법을 설명하기 위 한 도면들이다. 프로세서는 도 4a에 도시된 바와 같이, 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 절대값을 포함하는 매트릭스를 획득할 수 있다. 그리고, 프로세서는 매트릭스에 포함된 복수의 엘리먼트 중 제1 임계 값(Pa) 미만인 엘리먼트는 0으로 변환하고, 제1 임계 값(Pa) 이상인 엘리먼트는 1로 변환하여, 제1 프루닝 인덱스 매트릭스를 획득할 수 있다. 즉, 제1 프루닝 인덱스 매트릭스는 제1 매트릭스에 포함된 복수의 제1 엘리먼트의 크기를 반영하여 프루닝된 매트릭스이다. 여기서, 제1 임계 값(Pa)은 요구되는 정확도에 기초하여 결정될 수 있다. 예를 들어, 제1 임계 값(Pa)에 따른 프루닝 후 인공지능 모델의 정확도가 프루닝 전의 인공지능 모델의 정확도보다 현저하게 낮아지면, 제1 임계 값 (Pa)을 좀더 낮출 수 있다. 또는, 제1 임계 값(Pa)에 따른 프루닝 후 인공지능 모델의 정확도가 프루닝 전의 인 공지능 모델의 정확도와 큰 차이가 없다면, 제1 임계 값을 좀더 높일 수도 있다. 그리고, 프로세서는 도 4b에 도시된 바와 같이, 제1 매트릭스를 제1 매트릭스의 행의 개수인 4 와 랭크 2의 크기를 갖는 제2 매트릭스(440-1) 및, 랭크 2와 제1 매트릭스의 열의 개수인 4의 크기를 갖는 제3 매트릭스(440-2)로 팩토라이즈(factorize)할 수 있다. 이때, 프로세서는 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각의 절대값을 포함하는 매트릭스를 non-negative matrix factorization(NMF)하여 제2 매트릭스(440-1) 및 제3 매트릭스(440-2)를 획득할 수도 있다. 다만, 제2 매트릭스(440-1) 및 제3 매트릭스 (440-2)를 곱하더라도 매트릭스가 복원되지는 않을 수 있다. 즉, 제2 매트릭스(440-1) 및 제3 매트릭스 (440-2)의 곱은 매트릭스와 다를 수 있다. 그리고, 프로세서는 제2 임계 값(Ba)에 기초하여 제2 매트릭스(440-1)에 포함된 복수의 제2 엘리먼트 각각 을 프루닝하고, 복수의 제2 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매 트릭스(450-1)를 획득하며, 제3 임계 값(Bb)에 기초하여 제3 매트릭스(440-2)에 포함된 복수의 제3 엘리먼트 각 각을 프루닝하고, 복수의 제3 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스(450-2)를 획득할 수 있다. 최초의 제2 임계 값(Ba) 및 제3 임계 값(Bb)은 임의의 수로 설정될 수 있다. 다만, 제2 프루닝 인덱스 매트릭스(450-1)는 제2 매트릭스(440-1)에 포함된 복수의 제2 엘리먼트의 크기를 반영 하여 프루닝되었고, 제3 프루닝 인덱스 매트릭스(450-2)는 제3 매트릭스(440-2)에 포함된 복수의 제3 엘리먼트 의 크기를 반영하여 프루닝되었다. 즉, 제2 프루닝 인덱스 매트릭스(450-1) 및 제3 프루닝 인덱스 매트릭스 (450-2)는 제1 매트릭스에 포함된 복수의 제1 엘리먼트의 크기를 반영하여 프루닝된 것은 아니다. 따라서, 제2 프루닝 인덱스 매트릭스(450-1) 및 제3 프루닝 인덱스 매트릭스(450-2)를 곱한 최종 인덱스 매트릭스 는 도 4a의 제1 프루닝 인덱스 매트릭스와 다를 수 있다. 여기서, 제2 프루닝 인덱스 매트릭스(450-1) 및 제3 프루닝 인덱스 매트릭스(450-2)의 매트릭스 곱셈 과정에서 덧셈 연산은 XOR 연산으로 수행될 수 있다. 즉, 프로세서는 1 + 1 = 0으로 연산하게 되며, 그 밖의 연산은 매트릭스 연산과 동일하다. 프로세서는 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 제1 프루닝 인덱스 매트릭스 에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별할 수 있다. 그리고, 프로세서는 도 4c에 도시된 바와 같이, 식별된 위치에 대응되는 제1 매트릭스의 엘리먼트의 크기를 합산하여 임계 크기 이상이면, 제2 임계 값(Ba) 또는 제3 임계 값(Bb) 중 적어도 하나를 변경할 수 있다. 즉, 프로세서는 식별된 위치에 대응되는 제1 매트릭스의 엘리먼트의 크기가 클수록 최종 인덱 스 매트릭스의 오차가 큰 것으로 판단하고, 제2 임계 값(Ba) 또는 제3 임계 값(Bb) 중 적어도 하나를 변경 할 수 있다. 그리고, 프로세서는 제2 매트릭스(440-1) 및 제3 매트릭스(440-2) 각각으로부터 제2 프루닝 인덱스 매트릭 스(450-1) 및 제3 프루닝 인덱스 매트릭스(450-2)를 재획득할 수 있다. 프로세서는 재획득된 제2 프루닝 인덱스 매트릭스(450-1) 및 제3 프루닝 인덱스 매트릭스(450-2)에 기초하여 최종 인덱스 매트릭스를 재획 득하며, 최종 인덱스 매트릭스 및 제1 프루닝 인덱스 매트릭스를 다시 비교할 수 있다. 프로세서는 식별된 위치에 대응되는 제1 매트릭스의 엘리먼트의 크기의 합산이 임계 크기 미만일 때 까지 이상과 같은 과정을 반복할 수 있다. 프로세서는 프로세서는 식별된 위치에 대응되는 제1 매트 릭스의 엘리먼트의 크기의 합산이 임계 크기 미만이면, 마지막으로 획득된 제2 프루닝 인덱스 매트릭스 (450-1) 및 제3 프루닝 인덱스 매트릭스(450-2)를 제1 프루닝 인덱스 매트릭스 대신 메모리에 저장할 수 있다. 도 4a 내지 도 4c에서는 설명의 편의를 위하여 4 × 4의 제1 매트릭스로 압축 방법을 설명하였으나, 실제 로 제1 매트릭스는 크기가 매우 클 수 있다. 예를 들어, 제1 매트릭스가 m × n의 크기를 갖는다면, 제1 프루닝 인덱스 매트릭스는 m × n의 엘리먼트를 갖게 된다. 반면, 제2 프루닝 인덱스 매트릭스(450- 1)는 m × r의 엘리먼트를 갖게 되고, 제3 프루닝 인덱스 매트릭스(450-2)는 r × n의 엘리먼트를 갖게 되며, 여기서 r은 m 및 n보다 작다. 따라서, 제1 프루닝 인덱스 매트릭스 대신 제2 프루닝 인덱스 매트릭스(450-1) 및 제3 프루닝 인덱스 매트 릭스(450-2)를 이용하게 되면, 총 m × n의 엘리먼트가 (m + n) × r의 엘리먼트로 표현될 수 있다. 가령, m이 1000이고, n이 100이며, r이 30이면, 1000 × 100 = 100000의 엘리먼트가 (1000 + 100) × 30 = 33000의 엘리 먼트로 표현될 수 있으며, 데이터 용량을 감소시킬 수 있다. 또한, 이상에서 설명한 제1 프루닝 인덱스 매트릭 스 대신 제2 프루닝 인덱스 매트릭스(450-1)의 재획득 과정을 반복함에 따라 정확도가 유지될 수 있다. 도 5는 본 개시의 일 실시 예에 따른 압축 성능 및 정확도를 설명하기 위한 도면이다. 종래 기술인 Song Han's Pruning은 도 4a 내지 도 4c의 압축 전의 정확도를 나타내며, 20K 내지 60K는 재획득 과정의 반복 횟수를 나타낸다. 반복 횟수가 높아질수록 정확도가 압축 전의 정확도에 가까워지는 것을 확인할 수 있다. 또한, 랭크 256에서 4로 낮아질수록 압축률이 1.2에서 76.9로 향상되는 것을 확인할 수 있다. 도 6a 및 도 6b는 본 개시의 일 실시 예에 따른 양자화 매트릭스의 압축 방법을 설명하기 위한 도면들이다. 프로세서는 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타겟 단위에 기초 하여 크기가 결정된 랜덤 매트릭스를 획득할 수 있다. 예를 들어, 압축 대상 단위가 9개로 설정되고, 압축 타겟 단위가 5개로 설정되면, 프로세서는 도 6a에 도 시된 바와 같이, 9 × 5의 크기를 갖는 랜덤 매트릭스(A)를 획득할 수 있다. 랜덤 매트릭스(A)는 0 또는 1을 포 함할 수 있다. 그리고, 프로세서는 랜덤 매트릭스(A)와 압축 타겟 단위(x)에 포함된 미지수의 곱이 압축 대상 단위(B)에 포함된 복수의 바이너리 데이터가 되도록 압축 타겟 단위(x)를 획득할 수 있다. 이는, 도 6a와 같이, A × x = B의 매트릭스 곱의 형태로 표현될 수 있다. 여기서, 압축 대상 단위(B)에 포함된 복수의 바이너리 데이터 중 x 는 don't care를 나타내며, 이에 대하여는 후술한다. 프로세서는 랜덤 매트릭스(A) 및 압축 대상 단위(B)에 포함된 복수의 바이너리 데이터에 기초하여 복수의 방정식을 획득할 수 있다. 즉, 도 6a와 같은 예시에 의하면, 9개의 방정식이 획득될 수 있으며, 이때 미지수는 압축 타겟 단위(x)의 5개일 수 있다. 프로세서는 압축 대상 단위(B)에 대응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘리먼트에 대응되는 바이너리 데이터에 기초하여 복수의 방정식 중 적어도 일부를 제거하고, 나머지 방정식에 기초하여 압축 타겟 단위(x)에 대응되는 바이너리 데이터를 획득할 수 있다. 예를 들어, 프로세서는 도 6b에 도시된 바와 같이, don't care에 대응되는 데이터를 삭제하는 방식으로 복 수의 방정식 중 적어도 일부를 제거할 수 있다. don't care는 프루닝된 제1 엘리먼트에 기초하여 결정될 수 있 다. 상술한 바와 같이, 양자화 매트릭스는 제1 매트릭스로부터 획득되므로, 프루닝과는 무관할 수 있다. 다만, 프루닝에 따라 양자화 매트릭스의 일부 데이터는 전혀 이용되지 않게 되며, 이러한 데이터는 don't care 데이터가 된다. 또한, don't care 데이터는 압축 후 다른 값으로 복원되더라도 무방하기 때문에 복수의 방정식 중 don't care에 대응되는 방정식을 삭제해도 무방하다. 여기서, 도 6b의 가장 좌측으로부터 첫 번째 열은 압축 대상 단위(B)의 바이너리 데이터에 대응되는 제1 엘리먼 트의 프루닝 여부를 나타내며, 가운데 부분의 네 개 열은 랜덤 매트릭스이고, 다섯 번째 열은 압축 대상 단위 (B)의 바이너리 데이터이다. 설명의 편의를 위해 도 6b의 예시는 도 6a와 다르게 도시하였다. 프로세서는 도 6b에 도시된 바와 같이, 나머지 방정식 4개를 이용하여 압축 타겟 단위(x)의 4개의 미지수 에 대한 값을 획득할 수 있다. 이때, 프로세서는 가우시안 엘리미네이션(gaussian elimination)과 같은 방 법을 통해 압축 타겟 단위(x)의 4개의 미지수에 대한 값을 획득할 수 있으며, 이는 종래 기술이므로 구체적인 설명은 생략한다. 다만, 이에 한정되는 것은 아니며, 프로세서는 얼마든지 다른 방법으로 미지수에 대한 값을 획득할 수도 있다. 도 6b에서 미지수에 대한 값이 획득되면, 9개의 바이너리 데이터가 4개로 압축될 수 있다. 프로세서는 랜덤 매트릭스와 미지수에 대한 값을 곱하여 압축 전의 바이너리 데이터를 복원할 수 있다. 다 만, 복원된 데이터 중 일부는 압축 전의 데이터와 다를 수 있으나, 이는 don't care에 대응되는 데이터로 인공 지능 알고리즘의 연산 정확도에는 영향을 미치지 않게 된다. 도 7a 및 도 7b는 본 개시의 다른 실시 예에 따른 양자화 매트릭스의 압축 방법을 설명하기 위한 도면들이 다. 프로세서는 나머지 방정식의 개수의 압축 타겟 단위에 포함된 미지수의 개수를 초과하면 나머지 방정식 간 디펜던시(dependency)에 기초하여, 나머지 방정식 중 미지수의 개수에 대응되는 복수의 제1 방정식을 식별하고, 복수의 제1 방정식에 기초하여 압축 타겟 단위에 대응되는 바이너리 데이터를 획득할 수 있다. 예를 들어, 프로세서는 도 7a와 같이, 나머지 방정식의 개수가 5개이고, 압축 타겟 단위에 포함된 미지수 의 개수가 4개이면, 나머지 방정식 간 디펜던시(dependency)에 기초하여, 나머지 방정식 중 4개의 제1 방정식을 식별하고, 4개의 제1 방정식에 기초하여 압축 타겟 단위에 대응되는 바이너리 데이터(미지수에 대한 값)를 획득 할 수 있다. 그리고, 프로세서는 획득된 압축 타겟 단위에 대응되는 바이너리 데이터에 기초하여 나머지 방정식 중 복 수의 제1 방정식을 제외한 적어도 하나의 제2 방정식의 성립 여부를 식별하고, 적어도 하나의 제2 방정식 중 성 립되지 않는 제3 방정식에 대응되는 패치 정보를 생성할 수 있다. 여기서, 패치 정보는 성립되지 않는 제3 방정 식의 개수 정보 및 성립되지 않는 제3 방정식 각각의 식별 정보를 포함할 수 있다. 예를 들어, 도 7a에서 don't care가 아닌 나머지 데이터 중 네 번째 행까지의 데이터(1 0 1 0; 1 1 0 0; 0 0 0 1; 0 0 1 0)를 이용하여 압축 타겟 단위에 대응되는 미지수에 대한 값이 획득된 경우, 프로세서는 획득된 미지수에 대한 값을 나머지 데이터 중 다섯 번째 행의 데이터(1 0 1 1)를 포함하는 방정식에 대입하여 방정식의 성립 여부를 식별할 수 있다. 만약, 방정식이 성립하면, 프로세서는 추가 동작을 수행할 필요가 없다. 이는 획득된 미지수에 대한 값 및 랜덤 매트릭스를 이용하여 don't care를 제외한 압축 대상 단위에 대응되는 바이너리 데이터가 복원되기 때문이 다. 반면, 방정식이 성립하지 않으면, 프로세서는 도 7b와 같이 패치 정보를 생성할 수 있다. 먼저, case 1과 같이, 나머지 방정식이 5개이고, 이중 4개의 방정식을 이용하여 미지수에 대한 값을 획득한 후, 첫 번째 행의 데이터(1 0 1 0)에 기초한 방정식에 미지수에 대한 값을 대입하였으나 성립하지 않는 경우, 프로세서는 패 치가 하나가 필요하며, 패치가 이루어져야 하는 방정식의 위치 정보를 패치 정보로 생성할 수 있다. 즉, 프로세 서는 1010(압축된 데이터)/01(패치 개수)/0100(패치되어야 할 위치)를 최종적으로 획득할 수 있다. 또는, case 2와 같이, 나머지 방정식이 5개이고, 4개의 방정식을 이용하더라도 미지수에 대한 값이 획득되지 않 을 수 있다. 이 경우, 프로세서는 최대한 많은 방정식이 성립하는 미지수에 대한 값을 획득할 수 있다. 도 7b에서는 프로세서가 두 개의 방정식이 성립하는 미지수에 대한 값을 획득한 경우를 가정하였다. 미지수에 대한 값이 획득되면, 프로세서는 패치가 세 개 필요하며, 패치가 이루어져야 하는 세 개의 방정식의 위치 정보를 패치 정보로 생성할 수 있다. 즉, 프로세서는 1010(압축된 데이터)/11(패치 개수)/0100 0110 1011 (패치되어야 할 위치)를 최종적으로 획득할 수 있다. 프로세서는 랜덤 매트릭스와 미지수에 대한 값을 곱하여 압축 전의 바이너리 데이터를 복원할 수 있다. 그 리고, 프로세서는 패치 정보에 포함된 패치되어야 할 위치에 기초하여 복원된 데이터 중 일부를 패치할 수 있다. 프로세서는 0을 1로, 1은 0으로 변환하여 패치할 수 있다. 한편, 복원된 데이터 중 일부는 압축 전 의 데이터와 다를 수 있으나, 이는 don't care에 대응되는 데이터로 인공지능 알고리즘의 연산 정확도에는 영향 을 미치지 않게 된다. 한편, 랜덤 매트릭스가 획득되면, XOR 게이트를 이용하여 회로 구성이 가능하므로, 구현이 용이할 수 있다. 도 8은 본 개시의 일 실시 예에 따른 최적 압축 조건을 획득하기 위한 방법을 설명하기 위한 도면이다. 도 8에서 압축 타겟 단위의 개수는 20으로 가정하며, x축은 압축 대상 단위의 개수, y축은 압축 전의 샘플 데이 터의 압축에 따른 비트수를 나타낸다. 즉, 압축 전의 샘플 데이터는 총 10000 비트이며, 압축 대상 단위의 개수 를 100으로 설정하면, 압축에 따른 비트수는 약 2000 비트가 된다. 압축 대상 단위의 개수를 올리면, 압축에 따 른 비트수는 감소하게 된다. 반면, 압축 대상 단위의 개수를 올리면 방정식의 성립이 어려워지기 때문에 패치 정보에 따른 비트가 추가될 수 있다. 압축률은 압축에 따른 비트수 및 패치 정보에 따른 비트수의 합으로 결정되며, 압축 대상 단위의 개수를 약 200 정도로 유지하는 경우가 최적 압축 조건일 수 있다. 도 9는 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 샘플 데이터에 기초하여 트레이닝(training)된 인공지능 모델에 포함된 제1 매트릭스가 저장된 전자 장치의 제 어 방법은, 먼저 제1 임계 값에 기초하여 제1 매트릭스에 포함된 복수의 제1 엘리먼트 각각을 프루닝(pruning) 하고, 복수의 제1 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제1 프루닝 인덱스 매트릭스를 획득한다(S910). 그리고, 제1 매트릭스를 제1 매트릭스의 행의 개수와 랭크(rank)에 기초하여 크기가 결정된 제 2 매트릭스 및, 랭크와 제1 매트릭스의 열의 개수에 기초하여 크기가 결정된 제3 매트릭스로 팩토라이즈 (factorize)한다(S920). 그리고, 제2 임계 값에 기초하여 제2 매트릭스에 포함된 복수의 제2 엘리먼트 각각을 프루닝하고, 복수의 제2 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제2 프루닝 인덱스 매트릭 스를 획득한다(S930). 그리고, 제3 임계 값에 기초하여 제3 매트릭스에 포함된 복수의 제3 엘리먼트 각각을 프 루닝하고, 복수의 제3 엘리먼트 각각의 프루닝 여부를 바이너리 데이터로 나타내는 제3 프루닝 인덱스 매트릭스 를 획득한다(S940). 그리고, 제2 프루닝 인덱스 매트릭스 및 제3 프루닝 인덱스 매트릭스에 기초하여 최종 인덱 스 매트릭스를 획득한다(S950). 그리고, 최종 인덱스 매트릭스를 제1 프루닝 인덱스 매트릭스와 비교하여 제2 프루닝 인덱스 매트릭스 또는 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트한다(S960). 여기서, 업데이트하는 단계(S960)는 최종 인덱스 매트릭스에 포함된 바이너리 데이터 각각을 제1 프루닝 인덱스 매트릭스에 포함된 대응되는 위치의 바이너리 데이터와 비교하여 상이한 데이터를 가지는 위치를 식별하는 단계 및 식별된 위치에 대응되는 제1 매트릭스의 엘리먼트의 크기에 기초하여 제2 임계 값 또는 제3 임계 값 중 적어 도 하나를 변경하여, 제2 프루닝 인덱스 매트릭스 또는 제3 프루닝 인덱스 매트릭스 중 적어도 하나를 업데이트 하는 단계를 포함할 수 있다. 그리고, 적어도 하나를 업데이트하는 단계는 상이한 데이터를 가지는 위치가 복수 개 식별되면, 식별된 복수의 위치에 대응되는 제1 매트릭스의 복수의 엘리먼트의 크기를 합산하는 단계 및 합산된 크기가 임계 크기 이상이 면, 제2 임계 값 또는 제3 임계 값 중 적어도 하나를 변경하는 단계를 포함할 수 있다. 또는, 적어도 하나를 업데이트하는 단계는 제2 임계 값 또는 제3 임계 값 중 하나가 증가되면, 제2 임계 값 또 는 제3 임계 값 중 다른 하나를 감소시키고, 제2 임계 값 또는 제3 임계 값 중 하나가 감소되면, 제2 임계 값 또는 제3 임계 값 중 다른 하나를 증가시킬 수 있다. 한편, 복수의 제1 엘리먼트 각각을 터너리(ternary) 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하 는 양자화 매트릭스를 획득하는 단계, 양자화 매트릭스에 포함된 바이너리 데이터의 압축 대상 단위 및 압축 타 겟 단위에 기초하여 크기가 결정된 랜덤 매트릭스를 획득하는 단계, 랜덤 매트릭스 및 압축 대상 단위에 기초하 여 복수의 방정식을 획득하는 단계 및 압축 대상 단위에 대응되는 복수의 바이너리 데이터 중 프루닝된 제1 엘 리먼트에 대응되는 바이너리 데이터에 기초하여 복수의 방정식 중 적어도 일부를 제거하고, 나머지 방정식에 기 초하여 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계를 더 포함할 수 있다. 여기서, 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는 나머지 방정식의 개수가 압축 타겟 단 위에 포함된 미지수의 개수를 초과하면 나머지 방정식 간 디펜던시(dependency)에 기초하여, 나머지 방정식 중미지수의 개수에 대응되는 복수의 제1 방정식을 식별하는 단계 및 복수의 제1 방정식에 기초하여 압축 타겟 단 위에 대응되는 바이너리 데이터를 획득하는 단계를 포함할 수 있다. 그리고, 압축 타겟 단위에 대응되는 바이너리 데이터를 획득하는 단계는 획득된 압축 타겟 단위에 대응되는 바 이너리 데이터에 기초하여 나머지 방정식 중 복수의 제1 방정식을 제외한 적어도 하나의 제2 방정식의 성립 여 부를 식별하는 단계 및 적어도 하나의 제2 방정식 중 성립되지 않는 제3 방정식에 대응되는 패치 정보를 생성하 는 단계를 더 포함하며, 패치 정보는 성립되지 않는 제3 방정식의 개수 정보 및 성립되지 않는 제3 방정식 각각 의 식별 정보를 포함할 수 있다. 한편, 양자화 매트릭스를 획득하는 단계는 제1 매트릭스에서 프루닝되지 않은 복수의 제1 엘리먼트 각각을 터너 리 양자화하여 대표 값 매트릭스 및 바이너리 데이터를 포함하는 양자화 매트릭스를 획득할 수 있다. 여기서, 양자화 매트릭스를 획득하는 단계는 최종 인덱스 매트릭스에 기초하여 제1 매트릭스에서 프루닝되지 않 은 복수의 제1 엘리먼트를 식별할 수 있다. 한편, 랜덤 매트릭스는 제1 타입의 엘리먼트 및 제2 타입의 엘리먼트를 포함하며, 랜덤 메트릭스에 포함된 제1 타입의 엘리먼트의 개수 및 랜덤 메트릭스에 포함된 제2 타입의 엘리먼트의 개수는 서로 동일할 수 있다. 이상과 같은 본 개시의 다양한 실시 예에 따르면, 전자 장치는 패럴랠 컴퓨팅 처리가 가능하도록 인공지능 모델 을 압축하여 하드웨어 성능에 따른 제약을 극복하고, 처리 속도를 향상시킬 수 있다. 한편, 본 개시의 일시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media)에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실 시 예들에 따른 전자 장치(예: 전자 장치(A))를 포함할 수 있다. 명령이 프로세서에 의해 실행될 경우, 프로세 서가 직접, 또는 프로세서의 제어 하에 다른 구성요소들을 이용하여 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저 장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 신 호(signal)를 포함하지 않으며 실재(tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시 적으로 저장됨을 구분하지 않는다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품 (computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있 다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어 (hardware) 또는 이들의 조합을 이용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 일부 경우에 있어 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있 다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨 어 모듈들로 구현될 수 있다. 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 동작을 수행할 수 있다. 한편, 상술한 다양한 실시 예들에 따른 기기의 프로세싱 동작을 수행하기 위한 컴퓨터 명령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium)에 저장될 수 있 다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었 을 때 상술한 다양한 실시 예에 따른 기기에서의 처리 동작을 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니라 반영구 적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적 컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등이 있을 수 있다. 또한, 상술한 다양한 실시 예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구 성될 수 있으며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요 소가 다양한 실시 예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로 그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는유사하게 수행할 수 있다. 다양한 실시예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작 들은 순차적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생 략되거나, 또는 다른 동작이 추가될 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2019-0007508", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2019-0007508", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a 및 도 1b는 종래 기술의 문제점을 설명하기 위한 도면들이다. 도 2a는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 나타내는 블럭도이다. 도 2b는 본 개시의 일 실시 예에 따른 전자 장치의 세부 구성을 나타내는 블럭도이다. 도 3a 내지 도 3d는 본 개시의 이해를 돕기 위한 인공지능 모델에 포함된 매트릭스의 처리 방법을 설명하기 위 한 도면들이다. 도 4a 내지 도 4c는 본 개시의 일 실시 예에 따른 제1 프루닝 인덱스 매트릭스의 압축 방법을 설명하기 위한 도 면들이다. 도 5는 본 개시의 일 실시 예에 따른 압축 성능 및 정확도를 설명하기 위한 도면이다. 도 6a 및 도 6b는 본 개시의 일 실시 예에 따른 양자화 매트릭스의 압축 방법을 설명하기 위한 도면들이다.도 7a 및 도 7b는 본 개시의 다른 실시 예에 따른 양자화 매트릭스의 압축 방법을 설명하기 위한 도면들이다. 도 8은 본 개시의 일 실시 예에 따른 최적 압축 조건을 획득하기 위한 방법을 설명하기 위한 도면이다. 도 9는 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다."}
