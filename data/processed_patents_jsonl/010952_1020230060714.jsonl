{"patent_id": "10-2023-0060714", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0163444", "출원번호": "10-2023-0060714", "발명의 명칭": "머신러닝 모델 서빙을 위한 피쳐 제공 방법 및 이를 수행하는 컴퓨팅 장치", "출원인": "주식회사 카카오뱅크", "발명자": "김남기"}}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에서 수행되는 머신러닝 모델 서빙을 위한 피쳐(feature) 제공 방법에 있어서,실시간 데이터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 단계;배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피쳐 저장소에 저장하는 단계; 및상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환하는 단계를 포함하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 교환하는 단계는,상기 오프라인 피쳐 저장소에 저장된 배치 피쳐를 온라인 피쳐 저장소에 제공하는 온라인 피쳐 서빙 단계; 및상기 온라인 피쳐 저장소에 저장된 실시간 피쳐를 오프라인 피쳐 저장소에 제공하는 오프라인 피쳐 서빙 단계를포함하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 온라인 피쳐 서빙 단계는,상기 온라인 피쳐 저장소의 스키마에 따라 추출된 상기 오프라인 피쳐 저장소의 배치 피쳐를 소스 테이블 데이터로 제공하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 오프라인 피쳐 서빙 단계는,상기 온라인 피쳐 저장소의 실시간 피쳐에 대한 주기적 스냅샷을 소스 테이블 데이터로 제공하는 것을 특징으로하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 제공되는 배치 피쳐 또는 스냅샷의 유효성을 검사하는 단계를 더 포함하는 것을 특징으로 하는 피쳐 제공방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 유효성을 검사하는 단계는 상기 소스 테이블 데이터 간 또는 소스 테이블 데이터 및 타겟 테이블 데이터간의 특성을 비교하여 유효여부를 판단하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,유효한 것으로 판단된 상기 소스 테이블 데이터와 상기 타겟 테이블 데이터의 정합성을 검사하는 단계를 더 포공개특허 10-2024-0163444-3-함하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 온라인 피쳐 저장소에 저장하는 단계는,머신러닝 서비스의 실시간성에 따라 인-메모리 데이터베이스로 구현되는 제1 저장소 또는 관계형 데이터베이스로 구현되는 제2 저장소에 상기 실시간 피쳐를 저장하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 오프라인 피쳐 저장소에 저장하는 단계는,머신러닝 서비스의 운영환경에 직접 적용 여부에 따라 계층적으로 구분된 저장소에 상기 배치 피쳐를 저장하는것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 실시간 피쳐 또는 배치 피쳐의 메타 데이터를 수집하는 단계; 및상기 수집된 메타 데이터를 카탈로그 저장소에 저장하는 단계를 더 포함하는 것을 특징으로 하는 피쳐 제공 방법."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "프로세서; 및상기 프로세서와 통신하는 메모리를 포함하고,상기 메모리는 상기 프로세서로 하여금 동작들을 수행하게 하는 명령들을 저장하고,상기 동작들은, 실시간 데이터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 동작,배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피쳐 저장소에 저장하는 동작, 및상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환하는 동작을 포함하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 교환하는 동작은,상기 오프라인 피쳐 저장소에 저장된 배치 피쳐를 온라인 피쳐 저장소에 제공하는 온라인 피쳐 서빙 동작, 및상기 온라인 피쳐 저장소에 저장된 실시간 피쳐를 오프라인 피쳐 저장소에 제공하는 오프라인 피쳐 서빙 동작을포함하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 온라인 피쳐 서빙 동작은,상기 온라인 피쳐 저장소의 스키마에 따라 추출된 상기 오프라인 피쳐 저장소의 배치 피쳐를 소스 테이블 데이터로 제공하는 것을 특징으로 하는 컴퓨팅 장치.공개특허 10-2024-0163444-4-청구항 14 제 13 항에 있어서,상기 오프라인 피쳐 서빙 동작은,상기 온라인 피쳐 저장소의 실시간 피쳐에 대한 주기적 스냅샷을 소스 테이블 데이터로 제공하는 것을 특징으로하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 제공되는 배치 피쳐 또는 스냅샷의 유효성을 검사하는 동작을 더 포함하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,상기 유효성을 검사하는 동작은 상기 소스 테이블 데이터 간 또는 소스 테이블 데이터 및 타겟 테이블 데이터간의 특성을 비교하여 유효여부를 판단하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16 항에 있어서,유효한 것으로 판단된 상기 소스 테이블 데이터와 상기 타겟 테이블 데이터의 정합성을 검사하는 동작을 더 포함하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 11 항에 있어서,상기 온라인 피쳐 저장소에 저장하는 동작은,머신러닝 서비스의 실시간성에 따라 인-메모리 데이터베이스로 구현되는 제1 저장소 또는 관계형 데이터베이스로 구현되는 제2 저장소에 상기 실시간 피쳐를 저장하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 11 항에 있어서,상기 오프라인 피쳐 저장소에 저장하는 동작은,머신러닝 서비스의 운영환경에 직접 적용 여부에 따라 계층적으로 구분된 저장소에 상기 배치 피쳐를 저장하는것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 11 항에 있어서,상기 실시간 피쳐 또는 배치 피쳐의 메타 데이터를 수집하는 동작, 및상기 수집된 메타 데이터를 카탈로그 저장소에 저장하는 동작을 더 포함하는 것을 특징으로 하는 컴퓨팅 장치."}
{"patent_id": "10-2023-0060714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 1 항 내지 제 10 항 중 어느 한 항에 따른 피쳐 제공 방법을 수행하는 프로그램이 저장된 컴퓨터 판독 가능한 기록 매체."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 머신러닝 모델의 서빙을 위한 피쳐의 제공 방법에 관한 것으로 본 발명의 일 실시예에 따른 컴퓨팅 장 치에서 수행되는 컴퓨팅 장치에서 수행되는 머신러닝 모델 서빙을 위한 피쳐(feature) 제공 방법은 실시간 데이 터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 단계; 배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피쳐 저장소에 저장하는 단계; 및 상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환하는 단계를 포함할 수 있다. 본 발명에 따르면 머신러닝 서빙에서 수집되는 피쳐 들을 효율적으로 구분하여 관리함으로써 데이터 처리의 지연에 따른 사용자들의 불편을 해소할 수 있으며 안정적 인 피쳐를 통한 지속적인 머신러닝 모델의 학습을 수행할 수 있다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 머신러닝 모델의 서빙을 위한 피쳐의 제공 방법에 관한 것이다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "소프트웨어의 개발과 운영을 구분하지 않고 개발의 생산성과 운영의 안정성을 최적화하는데 널리 사용되는 DevOps는 지속적 통합(Continuous integration, CI)과 지속적 배포(Continuous deployment, CD)를 운영 과정에 도입해 개발 주기 단축, 배포 속도 증가, 안정적인 출시 등의 효과를 제공한다. 이러한 전통적인 프로그래밍 기반의 서비스 관리를 용이하게 하는 작업이 DevOps(Development operations)라면, 최근에는 산업 전반에 이르는 인공지능 기술의 적용 확대로 머신러닝 기반의 소프트웨어 서비스 운영을 효율화 하고자 MLOps(Machine learning operations)라는 개념이 새롭게 확산되고 있다. 머신러닝 기반의 시스템 역시 소프트웨어 시스템이므로 시스템을 안정적으로 생성하고 운영할 수 있도록 DevOps 와 유사한 방식이 적용될 수 있으나, 머신러닝은 단순한 소프트웨어의 지속적인 개발 외에도 대규모의 데이터에 대한 분석을 위한 데이터 측면의 운영이 보다 강조된다. 즉, MLOps는 데이터 사이언스, 다양한 클라우드 환경에 서 머신러닝을 위한 인프라의 활용 측면에서의 ML 시스템 개발(Dev)과 ML 시스템 운영(Ops)을 통합하는 것을 목 표로 한다. 이러한 MLOps의 운영 모델의 ML 라이프사이클의 각 단계에서 일관성 있는 성능과 낮은 지연시간을 통한 실시간성을 보장하기 위해 추론과 학습에 필수적인 피쳐를 서빙하는 구체적인 파이프라인들에 대한 개발도 지속적으로 수행되고 있다. 이와 관련하여 선행특허(미국공개특허공보 US 2021-0248513 A1 (공개일2021.08.12)는 실시간 모델의 학습을 위 해 온라인과 오프라인 특징을 구분하여 데이터를 수집하고 학습된 오프라인 모델에 온라인 샘플 피쳐를 이용하 여 온라인 모델을 적응시키는 파이프라인을 개시하고 있다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 머신러닝 서빙 환경에서 수집되는 피쳐(특징 데이터)들을 관리하는 방법을 제공하는 것을 목적으로 한다. 또한, 본 발명은 지속적으로 수집되는 피쳐를 효율적으로 구분하여 저장 및 관리함으로써 실시간 추론과 함께 모델의 지속적인 학습을 통해 일관적인 성능을 보장하는 것을 목적으로 한다. 또한, 본 발명은 구분된 실시간 피쳐와 배치 피쳐들 상호 간의 데이터 교환을 위한 파이프라인을 구축함으로써 머신러닝 모델의 추론과 학습 성능을 상호 보완적으로 높이는 것을 목적으로 한다. 또한, 본 발명은 수집된 피쳐 들의 메타 데이터들을 별도 관리함으로써 데이터 분석가의 요청에 따른 실험 환경 을 동적으로 구성하고 지속적인 피쳐들의 수집과 모니터링을 수행할 수 있도록 하는 것을 목적으로 한다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 기술적 과제를 해결하기 위해 본 발명의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨팅 장치에서 수 행되는 머신러닝 모델 서빙을 위한 피쳐(feature) 제공 방법은 실시간 데이터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 단계; 배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피쳐 저장소에 저 장하는 단계; 및 상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환하 는 단계를 포함할 수 있다. 상기 교환하는 단계는, 상기 오프라인 피쳐 저장소에 저장된 배치 피쳐를 온라인 피쳐 저장소에 제공하는 온라 인 피쳐 서빙 단계; 및 상기 온라인 피쳐 저장소에 저장된 실시간 피쳐를 오프라인 피쳐 저장소에 제공하는 오 프라인 피쳐 서빙 단계를 포함할 수 있다. 상기 온라인 피쳐 서빙 단계는, 상기 온라인 피쳐 저장소의 스키마에 따라 추출된 상기 오프라인 피쳐 저장소의 배치 피쳐를 소스 테이블 데이터로 제공하는 것이 바람직하다. 상기 오프라인 피쳐 서빙 단계는, 상기 온라인 피쳐 저장소의 실시간 피쳐에 대한 주기적 스냅샷을 소스 테이블 데이터로 제공하는 것이 바람직하다. 상기 온라인 피쳐 저장소에 저장하는 단계는, 머신러닝 서비스의 실시간성에 따라 제1 또는 제2 저장소에 상기 실시간 피쳐를 저장하는 것이 바람직하다. 상기 오프라인 피쳐 저장소에 저장하는 단계는, 머신러닝 서비스의 운영환경과의 연관성에 따라 계층적으로 구 분된 저장소에 상기 배치 피쳐를 저장하는 것이 바람직하다. 상기 실시간 또는 배치 피쳐의 메타 데이터를 수집하는 단계; 및 상기 수집된 메타 데이터를 카탈로그 저장소에 저장하는 단계를 더 포함할 수 있다. 상기 제공되는 배치 피쳐 또는 스냅샷의 유효성을 검사하는 단계를 더 포함할 수 있다. 상기 유효성을 검사하는 단계는 상기 소스 테이블 데이터 간 또는 소스 테이블 데이터 및 타겟 테이블 데이터 간의 특성을 비교하여 유효여부를 판단하는 것이 바람직하다. 유효한 것으로 판단된 상기 소스 테이블 데이터와 상기 타겟 테이블 데이터의 정합성을 검사하는 단계를 더 포 함할 수 있다. 본 발명의 일 실시예에 따른 컴퓨팅 장치는, 프로세서; 및 상기 프로세서와 통신하는 메모리를 포함하고, 상기 메모리는 상기 프로세서로 하여금 동작들을 수행하게 하는 명령들을 저장하고, 상기 동작들은, 실시간 데이터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 동작, 배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피쳐 저장소에 저장하는 동작, 및 상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환하는 동작을 포함할 수 있다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면 머신러닝 서빙에서 수집되는 피쳐들을 효율적으로 구분하여 관리함으로써 데이터 처리의 지연 에 따른 사용자들의 불편을 해소할 수 있으며 안정적인 피쳐를 통한 지속적인 머신러닝 모델의 학습을 수행할 수 있다. 또한, 본 발명은 구분하여 관리되는 실시간 수집 피쳐와 배치 피쳐들 간의 구체적인 교환 파이프라인을 제공함 으로써 피쳐 상호간이 특성들을 보완한 ML 서빙이 가능하도록 한다. 또한, 본 발명은 수집된 피쳐들의 메타 데이터를 별도로 수집하고 관리함으로써 데이터의 분석가의 실험 환경을 제공하고 피쳐의 반복적인 생산을 통해 머신러닝 모델의 재현성을 높일 수 있다."}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하의 내용은 단지 발명의 원리를 예시한다. 그러므로 당업자는 비록 본 명세서에 명확히 설명되거나 도시 되 지 않았지만 발명의 원리를 구현하고 발명의 개념과 범위에 포함된 다양한 장치를 발명할 수 있는 것이다. 또한, 본 명세서에 열거된 모든 조건부 용어 및 실시 예들은 원칙적으로, 발명의 개념이 이해되도록 하기 위한 목적으로만 명백히 의도되고, 이외같이 특별히 열거된 실시 예들 및 상태들에 제한적이지 않는 것으로 이해되어 야 한다. 상술한 목적, 특징 및 장점은 첨부된 도면과 관련한 다음의 상세한 설명을 통하여 보다 분명해질 것이며, 그에"}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "따라 발명이 속하는 기술분야에서 통상의 지식을 가진 자가 발명의 기술적 사상을 용이하게 실시할 수 있을 것 이다. 또한, 발명을 설명함에 있어서 발명과 관련된 공지 기술에 대한 구체적인 설명이 발명의 요지를 불필요하게 흐 릴 수 있다고 판단되는 경우에 그 상세한 설명을 생략하기로 한다. 이하에는 첨부한 도면을 참조하여 본 발명의 바람직한 실시 예에 대해 상세하게 설명한다. 도 1은 본 발명의 일 실시예에 따른 피쳐 제공 방법을 수행하는 머신러닝(Machine Learning, ML) 시스템의 구조를 나타내는 개념도이다. 본 실시예에 따른 ML 시스템은 피쳐 저장소를 통해 피쳐가 중앙으로 집중화될 수 있도록 하며, API(application programming interface)를 통해 서비스를 요청하는 사용자나 데이터 분석가와 같이 전문적인 사용자들이 접근 가능한 플랫폼을 구성한다. 본 실시예에서 피쳐(feature)는 ML 서빙 또는 학습에 요구되는 데이터로 변수 명과 변수 값을 포괄하는 의미로 사용될 수 있으며, 피쳐 저장소는 피쳐를 저장하는 메모리로 각 피쳐를 정의하는 변수들의 속성에 따른 열 (Column)과 변수 값(value)을 테이블 형태로 저장하여 관리할 수 있다. 본 실시예에 따른 ML 시스템은 피쳐 저장소를 통해 원천 데이터를 피쳐로 변환하는 데이터 파이프라인을 수행하며 피쳐들의 목적에 따라 온라인성 또는 오프라인성 피쳐를 구분하여 저장하고 관리함으로써 피쳐를 서빙 또는 학습에 효율적으로 이용할 수 있는 환경을 제공한다. 따라서, ML 시스템은 실시간 데이터 소스로부터 수신되는 실시간 피쳐들을 저장하는 온라인 피쳐 저 장소와 비교적 장기간의 피쳐들을 배치 데이터 소스로부터 수신하고 저장하는 오프라인 피쳐 저장소 로 구성될 수 있다. 본 실시예에 따른 온라인 피쳐 저장소는 API(application programming interface) 요청에 따라 실시간으 로 수집되는 피쳐들을 학습된 ML 모델에 입력하는 실시간 ML 서빙을 통해 사용자의 요청에 따른 추론 결과를 제 공할 수 있도록 한다. 본 실시예에 따른 오프라인 피쳐 저장소는 배치 피쳐를 기초로 배치 ML 서빙을 제공하거나 ML 모델들을 지 속 학습시키기 위한 학습 데이터로 적절한 단위의 피쳐들의 집합을 구성하여 제공할 수 있다. 이때, 온라인 피쳐 저장소는 실시간 ML 서빙 과정에서 필요에 따라 배치 피쳐를 함께 이용함으로써 빅데이 터 기반의 추론을 요구할 수 있으며 반대로 배치 ML 서빙 이나 모델의 학습을 위해서 오프라인 피쳐 저장소 는 실시간 피쳐를 함꼐 이용함으로써 데이터들의 최신성을 유지하고 변경되는 환경에 대한 지속 학습을 통 해 모델들의 환경 적응성을 높일 필요가 있다. 따라서, 본 실시예에 따른 ML 시스템은 구분된 저장소 간의 피쳐 교환을 위한 파이프라인을 별도로 구성할 수 있으며 각 저장소의 구분에 따른 서빙 안정성을 구현함과 동시에 모델 자체의 지속적인 학습과 고차 원적인 추론 결과를 제공할 수 있는 상보적인 환경을 제공한다. 나아가 본 실시예에 따른 온/오프라인 피쳐 저장소(312, 314)에 저장된 피쳐들 역시 ML 모델의 정확성을 유지하 기 위해 반복적으로 계산되고 업데이트 될 필요가 있으며, ML 시스템은 피쳐들의 분석을 위한 분석 시스템 및 분석을 위한 동작 라이브러리를 구성하기 위한 피쳐들의 메타 데이터들의 수집을 위한 시스템이 추가로 구성 할 수 있다. 이하, 구체적인 본 발명의 일 실시예에 따른 피쳐 제공 방법에 대해서 도 2를 참고하여 보다 상세히 설명한다. 도 2를 참고하면 본 발명의 일 실시예에 따른 ML 시스템은 실시간 데이터 소스로부터 제공된 실시간 피쳐 를 온라인 피쳐 저장소에 저장한다(S100).구체적으로 도 3을 참조하면 본 실시예에 따른 ML 시스템은 실시간 데이터 소스와 온라인 피쳐 저장 소를 포함할 수 있으며 실시간 데이터 소스는 서빙 과정에서 실시간으로 수집되는 데이터들이 적재되 는 임시 데이터 저장소로 운영될 수 있다. 실시간 데이터 소스는 채널(302a), Kafka 이벤트를 통해 데이터를 적재하는 도메인 저장소(302b), 실시간 데이터웨어하우스로 EDW(Enterprise Data Warehouse) (302c) 및 실시간 로그(302d) 등으로 구성될 수 있다. 본 실시예에 따른 채널(302a)은 어플리케이션과 같이 고객과의 직접적인 접점을 제공하는 서비스로 고객이 접근 할 수는 있는 사용자 인터페이스에서 발생하는 데이터로 테이블과 거래 로그 같은 데이터 소스를 저장한다. 도메인 저장소(302b)는 실시간 데이터 스트림 처리를 위한 분산 메시징 시스템으로 Kafka를 통해 수신된 메시지를 토픽 단위로 분할하여 메모리에 캐싱하는 형태로 데이터를 적재할 수 있다. 예를 들어 도메인 저장소(302b)는 도메인 서비스로 금융에서는 수신(요구불, 적금, 예금 등), 여신(비상금, 신 용대출 등)과 같은 각각의 도메인으로부터 발생하는 거래를 적재 관리할 수 있다. EDW(302c)는 기업이 보유하고 있는 대규모의 통합 관리된 정형 데이터를 적재하며 상술한 도메인 서비스에서 발 생하는 거래와 동일한 테이블 또는 가공된 테이블을 실시간으로 테이블로 적재 관리할 수 있다. 실시간 로그(302d)는 도메인 서비스 외로 발생하는 로그성 데이터를 추가적으로 수집하고 저장할 수 있다. 본 실시예에 따른 온라인 피쳐 저장소는 이상의 실시간 데이터 소스에 적재된 피쳐들을 실시간 피쳐 엔지니어링을 통해 수집하고 저장한다. 여기서 실시간 피쳐 엔지니어링은 오픈 소스 기반의 Flink, NiFi, StreamSets과 같은 도구를 사용하여 실시간으 로 발생하는 거래 데이터를 실시간 데이터 소스로부터 수집하고 머신 러닝 모델에 적합한 형식으로 처리함으로 써 피쳐를 추출하는 과정을 의미할 수 있다. 일 예로 실시간 피쳐 엔지니어링은 수치형 데이터의 결측값 처리, 이상값 처리, 비닝(binning) 등과 같이 데이 터 처리 과정을 수행할 수 있으며 데이터들을 가공하여 온라인 피쳐 저장소에 저장할 수 있다. 본 실시예에 따른 온라인 피쳐 저장소는 제1 저장소(312a)와 제2 저장소(312b)로 구분하여 구성될 수 있으 며, 최소 지연시간을 보장할 수 있는 인-메모리 DB(In-Memory DB)를 제1 저장소(312a)로 구성할 수 있다. 온라인 피쳐 저장소는 제1 저장소(312a)로 메모리 데이터베이스를 이용하며 예를 들어 RAM(Random Access Memory)과 같은 주 메모리에 피쳐를 저장함으로써 서빙 과정에서 빠른 읽기/쓰기 속도를 지원하고 ML 서빙의 최 소 지연 시간을 보장해 줄 수 있다. 본 실시예에 따른 제1 저장소(312a)는 테이블 형태로 피쳐를 저장하고 SQL(Structured Query Language)을 사용 하여 데이터를 조작하는 관계형 데이터 베이스(RDB)인 OLTP 시스템을 이용하여 구현될 수 있으며, 이를 통해 실 시간 ML 서빙에서 다수의 사용자가 동시에 수행하는 짧고 빈번한 쓰기 작업을 처리할 수 있도록 한다. 온라인 피쳐 저장소는 제1 저장소(312a)에 장애가 발생하는 경우를 대비하여 2차적인 제2 저장소(312b)를 추가로 구성할 수 있다. 본 실시예에 따른 제2 저장소(312b) 역시 MySQL, PostgreSQL과 같은 관계형 데이터베이스나 Hadoop HDFS(Hadoop Distributed File System) 기반의 HBase와 같은 키 밸류(Key-Value) 저장소로 구성될 수 있다. 제2 저장소(312b)는 필요에 따라 확장 가능하게 구성하고, 서비스에 적합한 데이터베이스를 활용할 수 있도록 한다. 예를 들어, 제2 저장소(312b)는 지연시간에 대한 민감도가 낮고, 지연시간 대비 높은 안정성을 요구하는 서비스에 대한 서빙을 목적으로 피쳐를 저장할 수 있다. 이상 온라인 피쳐 저장소는 실시간 ML 서빙을 위한 API 요청에 따라 요구되는 피쳐를 조회하고 조회된 피 쳐를 임베딩 후, 이를 ML 모델의 입력으로 제공하면 ML 모델은 제공된 피쳐를 이용하여 예측값을 추출하고 응답 한다. 이어서 본 발명의 일 실시예에 따른 ML 시스템은 배치 데이터 소스로부터 제공된 배치 피쳐를 오프라인 피 쳐 저장소에 저장한다(S200). 배치성 데이터는 일정한 기간 동안의 수집된 데이터들에 대한 스냅샷이나 데이터들의 이력에 기반한 특성의 분 석을 목적으로 하는 데이터로 도 4를 참고하면, 배치 데이터 소스는 EDW(304a)와 EDW에 비해 작은 규모의데이터 웨어하우스로 데이터 마트(Data Mart)(304b), 및 피쳐의 구조화 정도에 따라 덜 구조화되었거나 구조화 되지 않은 원시 데이터를 저장하는 데이터 레이크(Data lake)(304c)를 포함하여 구성될 수 있다. 본 실시예에 따른 ML 시스템은 배치 데이터 소스에 저장된 배치 데이터에 대해 배치 피쳐 엔지니어링 을 통해 배치 피쳐들을 수집하고 오프라인 피쳐 저장소에 저장한다. 본 실시예에 따른 오프라인 피쳐 저장소는 관리하는 피쳐를 구조화하는 스키마(schema)의 존재여부에 따라 스키마적 요소를 갖는 스키마 피쳐와 비스키마적 요소를 갖는 비스키마(schemaless) 피쳐를 구분하여 저장할 수 있다. 본 실시예에서 스키마는 저장된 피쳐들의 구성 정보로 피쳐를 식별하기 위한 이름, 기본값, 및 취할 수 있는 값 들에 대한 제약 조건과 피쳐의 데이터 타입으로 예를 들어 정수, 실수, 문자열 등에 대한 정보를 저장하는 메타 데이터일 수 있다. 오프라인 피쳐 저장소의 스키마 피쳐는 임팔라와 같은 쿼리 엔진을 사용하여 스키마의 메타 정보가 관리되 므로 SQL을 이용하여 조회될 수 있으며 조회된 스키마 피쳐는 임베딩 처리 후 ML 모델의 지속적 학습 및 예측 서비스 과정에 이용될 수 있다. 반면 비스키마 피쳐는 HDFS와 같은 데이터 저장소에 저장되는 비정형 데이터로 지속적 학습 또는 예측 서비스에 서 추가적인 가공을 통해 사용될 수 있다. 이때 오프라인 피쳐 저장소는 오픈 소스 기반의 Flink, NiFi, StreamSets과 같은 도구를 사용하여 배치 데 이터 소스에 저장된 데이터를 배치 서빙 또는 ML 모델의 학습을 위한 학습 데이터로 피쳐를 추출할 수 있 으며, ML 모델의 평가를 위한 스코어링을 목적으로 배치 피쳐들을 추출하는 것도 가능하다. 즉 오프라인 피쳐 저장소는 배치 서빙을 제공하는 서비스에서 ML 모델이 실제 사용되는 환경으로 운영환경 (Operational Environment)에 직접적으로 적용되는 피쳐 외에 평가나 실험을 위한 목적의 임시 피쳐들을 모두 저장할 수 있으며, 따라서 본 실시예에 따른 오프라인 피쳐 저장소는 피쳐를 운영환경에 직접적으로 활용 하는지 여부에 따라 운영환경 피쳐(Operational Feature)와 실험실환경 피쳐로 구분하여 저장할 수 있다. 구체적으로 본 실시예에 따른 오프라인 피쳐 저장소는 ML 모델이 배포된 후 예측 또는 추론을 요청할 수 있는 인터페이스를 통해 사용자 또는 다른 시스템이 운영환경에서 ML 모델에 접근하여 서비스를 사용하는 과정 에서 이용되는 피쳐로, 피쳐의 이상이 ML 서비스에 직접적인 영향을 미치는 운영환경 피쳐를 저장하는 운영환경 피쳐 저장소(314a)와 데이터 분석가가 직접 피쳐를 개발하고 생성해 볼 수 있는 환경을 제공하는 실험실 피쳐 저장소(314c)로 구분될 수 있다. 또한, 오프라인 피쳐 저장소는 실험실 환경 피쳐로 개발된 피쳐로서 실제 운영환경에 바로 사용되지 않지 만, 운영환경 피쳐를 생성하는 데이터 소스로 사용될 수 있는 예비적인 피쳐를 저장하는 세미(Semi) 운영환경 피쳐 저장소(314b)를 포함할 수 있다. 또한, 오프라인 피쳐 저장소는 실시간 ML 서빙에서 추가적으로 요구될 수 있는 배치성 데이터를 온라인 피 쳐 저장소를 통해서 제공할 수 있도록 분석과 배치 처리에 용이한 OLAP(Online Analytical Processing) 저장소로 SQL을 지원하는 임팔라(impala)나 HDFS를 분산 파일 시스템(314d)으로 포함할 수 있다. 이어서 본 실시예에 따른 ML 시스템은 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서빙 목적에 따라 교환할 수 있다(S300). 도 5를 참고하면, 본 실시예에 따른 ML 시스템은 오프라인 피쳐 저장소에 저장된 배치 피쳐를 온라인 피쳐 저장소에 제공하는 온라인 피쳐 서빙 단계(S310)와 온라인 피쳐 저장소에 저장된 실시간 피쳐를 오프라인 피쳐 저장소에 제공하는 오프라인 피쳐 서빙 단계(S320)를 수행할 수 있다. 이때, 각각의 온/오프라인 피쳐 서빙 단계(S310, S320)는 상호 독립적으로 수행될 수 있으며 어느 한 피쳐 서빙 단계가 다른 피쳐 서빙 단계에 우선하는 것은 아니다. 먼저 본 실시예에 따른 온라인 피쳐 서빙 단계(S310)에 대하여 설명하면 ML 시스템은 온라인 피쳐 서빙 파 이프라인을 통해 온라인 피쳐 저장소의 스키마를 참조하여 추출된 오프라인 피쳐 저장소의 배치 피쳐 를 제공할 수 있다. 도 6을 참조하면, 본 실시예에 따른 온라인 피쳐 서빙 파이프라인(313a)은 일정 주기마다 오프라인 피쳐 저장소 로부터 추출된 피쳐를 온라인 피쳐 저장소에 저장한다. 세부적인 과정을 도 7을 참조하여 설명하면 온라인 피쳐 서빙 파이프라인(313a)은 온라인 피쳐 저장소에 저장해 야 할 소스 테이블 데이터를 오프라인 피쳐 저장소로부터 먼저 추출한다(S312). 이때 온라인 피쳐 서빙 파이프라인(313a)은 오프라인 피쳐 저장소에서 추출된 소스 테이블 데이터들을 온 라인 피쳐 저장소의 스키마에 따른 템플릿 테이블로 생성한다. 본 실시예에서 소스 테이블 데이터는 ML 모델의 학습 및 검증에 사용되는 원본 데이터를 포함하는 테이블 내 값 들로, 상술한 배치 데이터 소스로부터 가져온 원시 데이터로 데이터 전처리 및 피쳐 엔지니어링 과정에 사 용될 수 있다. 구체적으로 온라인 피쳐 서빙 파이프라인(313a)은 추출된 소스 테이블 데이터들의 스키마로 컬럼명, 컬럼순서, 데이터타입이 온라인 피쳐 저장소의 타겟 테이블 데이터의 스키마와 동일하도록 템플릿 테이블을 생성한다. 만 약 오프라인 피쳐 저장소에서 추출되는 소스 테이블 데이터와 온라인 피쳐 저장소의 스키마가 동일하 면 템플릿 테이블로 생성하는 과정은 생략될 수 있으며, 스키마 명의 입력으로 소스 테이블 데이터를 추출할 수 있다. 이어서, 온라인 피쳐 서빙 파이프 라인(313a)은 오프라인 피쳐 저장소에서 생성한 소스 테이블 데이터를 온라인 피쳐 저장소에 서빙한다(S314). 본 실시예에 따른 온라인 피쳐 서빙 파이프 라인(313a)은 데이터 파이프라인을 구축하고 오픈소스 기반의 플랫 폼으로 에어플로우(Airflow)의 커스텀 오퍼레이터인 ChangeDataCopyOperator를 이용하여 변경분에 대한 효율적 인 서빙을 수행할 수 있다. 생성된 커스텀 오퍼레이터는 정의된 입력값을 받아서 소스 테이블 데이터의 변경분 을 추출하고 온라인 피쳐 저장소에 데이터를 서빙해 준다. 커스텀 오퍼레이터는 최초의 소스 테이블 데이터 서빙인 경우에는 전체분을 반영해 주되 대량의 데이터를 온라 인 피쳐 저장소에 서빙할 때는 MySQL 담당자의 요청에 따라 QPS(Queries-per-second), DB 서버 모니터링 을 진행하여 안정적인 서빙을 제공할 수 있도록 지원한다. 이어서 온라인 피쳐 서빙 파이프라인(313a)은 소스 테이블 데이터가 온라인 피쳐 저장소에 저장되면, 소스 테이 블 데이터와 타겟 테이블 데이터의 유효성을 검사한다(S316). 오프라인 피쳐 저장소의 소스 테이블 데이터를 이용하여 데이터의 유효성을 검사하며, 데이터의 통계량을 모니터링하고 통계적 특성에 변화가 미리 결정된 임계값 이상으로 감지되면 알림을 제공할 수 있다. 예를 들어 온라인 피쳐 서빙 파이프라인(313a)은 소스 테이블 데이터들의 분포를 이용하여 이전의 분포와 기준 이상의 차이를 보이는 경우로 예를 들어 아래의 수학식을 통해 산출된 지수(Population Stability Index, PSI) 를 통하여 특정 시점에서 수집된 데이터의 특징 간 차이로 수치적으로 산출할 수 있다. 만약, 온라인 피쳐 서빙 파이프라인(313a)은 PSI 지수가 설정된 기준 값 보다 큰 경우에는 서빙된 소스 테이블 데이터가 이전 버전의 소스 테이블 데이터에 비해 모델의 성능에 영향을 미치는 유의미한 변화가 발생한 것으로 판단할 수 있다. [수학식]"}
{"patent_id": "10-2023-0060714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "(여기서 %E:이전시점 데이터 구성비, %O:현재시점 데이터 구성비) 또한, 온라인 피쳐 서빙 파이프라인(313a)은 PSI 지수를 이용함으로써 예를 들어 PSI 지수가 10을 초과하여 피 쳐의 모든 값이 null로 존재하는 명백한 오류 상황을 데이터 자체의 통계값을 통해 효율적으로 점검할 수 있다. 그 외 온라인 피쳐 서빙 파이프라인(313a)은 통계적 특징으로 계수(count), 평균(mean), 표준편차(std), 최소값 (min), 각 변위 별 분포 값(25%, 50%, 75%) 또는 최대값(max)을 확인하여 상호 데이터의 특징을 비교할 수 있다. 나아가 온라인 피쳐 서빙 파이프라인(313a)은 서로 다른 버전의 소스 테이블 데이터 간의 통계적 특징을 통한 유효성 검사 외에 온라인 피쳐 저장소로 서빙하고자 하는 타겟 테이블 데이터를 활용하여 데이터의 유효성을 검사하는 것도 가능하다. 이어서 온라인 피쳐 서빙 파이프라인(313a)은 유효한 소스 테이블 데이터에 대하여 타겟 테이블 데이터와의 정 합성을 검사한다(S318). 본 실시예에 따른 온라인 피쳐 서빙 파이프라인(313a)은 정합성 검사 과정(S318)에서 소스와 타겟 테이블 데이 터에 대하여 공통된 피쳐들의 분포 차이를 PSI 지수로 계산하고, 산출된 PSI 지수가 임계값 이상인 경우 소스 테이블 데이터가 타겟 테이블 데이터와 정합 되지 않는 것으로 판단할 수 있다. 예를 들어 온라인 피쳐 서빙 파 이프라인(313a)은 소스 테이블 데이터와 타겟 테이블 데이터의 PSI 지수가 0.1 이하인 경우를 정합하는 것으로 판단하고, 0.1~0.25의 경계값을 벗어나 0.25 이상인 경우는 부정합한 것으로 판단할 수 있다. 반대로, 본 발명의 일 실시예에 따른 오프라인 피쳐 서빙 파이프 라인(313b)은 실시간으로 수집된 피쳐를 ML 모 델의 재현성을 고려하여 지속적인 학습이나 배치 추론을 위한 오프라인 피쳐 저장소에 피쳐를 서빙할 수 있다. 일반적으로 ML 시스템은 주기적으로 ML 모델을 재학습을 시키므로 재학습된 모델을 통한 ML 서빙은 학습의 주기에 따라 추론 결과가 달라질 가능성이 있다. 본 실시예에 따른 ML 시스템은 변화하는 환경에서 일관된 성능의 예측 스코어(Output)를 생성하고자 ML 모 델의 재현성을 유지하기 위한 방법으로 기존의 배치 피쳐 외 특정 기간 동안의 수집된 실시간 피쳐를 ML 모델의 학습을 위해 추가적으로 요구할 수 있다. 즉, 본 실시예에 따른 오프라인 피쳐 서빙 파이프 라인(313b)은 ML 모델의 재학습을 목적으로 특정 기간 동안의 스냅샷을 오프라인 피쳐 저장소로 서빙할 수 있다. 도 8을 참고하면, 오프라인 피쳐 서빙 파이프라인(313b)은 특정 기간(예를 들어 시간/일/주/월별)으로 수집된 실시간 피쳐 저장소의 피쳐들을 데이터베이스 타입별로 소스 테이블의 스냅샷을 추출한다(S322). 이어서 오프라인 피쳐 서빙 파이프 라인(313b)은 추출된 스냅샷을 오프라인 피쳐 저장소에 서빙하고 (S324), 상술한 온라인 피쳐 서빙 파이프라인(313a)과 같이 서빙된 데이터의 유효성을 검사(S326)하는 과정과 정합성을 검사(S328)하는 과정을 수행할 수 있다. 스냅샷의 유효성 검사 과정(S326)에서 오프라인 피쳐 서빙 파이프 라인(313b)은 주기적 스냅샷으로 추출된 소스 테이블 데이터의 피쳐들의 구간별 분포를 PSI 지수를 통해 비교함으로써 소스 테이블 데이터의 유효성을 판단할 수 있다. 오프라인 피쳐 서빙 파이프 라인(313b)은 PSI 지수가 설정된 기준 값 보다 큰 경우에는 서빙된 소스 테이블 데 이터가 이전 주기기의 소스 테이블 데이터에 비해 모델의 성능에 영향을 미치는 유의미한 변화가 발생한 것으로 보고 유효하지 않은 것으로 판단할 수 있다. 또한, 오프라인 피쳐 서빙 파이프라인(313b)은 정합성 검사 과정(S328)에서 소스 테이블 데이터와 오프라인 피 쳐 저장소의 타겟 테이블 데이터 내 공통된 피쳐들의 분포 차이를 PSI 지수로 계산하고, 산출된 PSI 지수 가 임계값 이상인 경우 소스 테이블 데이터가 타겟 테이블 데이터와 정합 되지 않는 것으로 판단할 수 있다. 이 때 오프라인 피쳐 서빙 파이프라인(313b)의 정합성 검사 과정(S328)의 정합성 판단을 위한 임계값은 상술한 온 라인 피쳐 서빙 파이프라인(313a)의 정합성 검사 과정(S318)의 임계값과 다르게 결정될 수 있다. 본 실시예에 따른 오프라인 피쳐 저장소는 오프라인 피쳐 서빙 파이프 라인(313b)외 라이브러리(313c)를 기반으로 주기적으로 피쳐를 제공받는 것도 가능하다. 나아가, 본 실시예에서 ML 시스템은 피쳐를 통한 실험과 같이 ML 모델의 분석을 위한 추가적인 구성을 포 함할 수 있다. 도 9를 참고하면, 본 실시예에 따른 ML 시스템은 오프라인 피쳐 저장소와 추가적인 데이터 파이프라 인을 구성하는 분석 시스템을 구성할 수 있다. 본 실시예에 따른 분석 시스템은 데이터 사이언스 기반의 분석가와 같은 사용자들이 ML 모델의 성능 개선 을 위하여 오프라인 피쳐 저장소로 피쳐를 조회하고, 후술하는 카탈로그 수집기에서 수집된 카탈로그로부 터 제공되는 각종 라이브러리를 활용하여 ML 모델을 테스트하기 위한 실험실 환경을 제공한다. 본 실시예에 따른 분석 시스템은 ML 모델의 실험 결과로 생성된 새로운 피쳐들을 오프라인 피쳐 저장소 로 전달하며 전달된 피쳐들은 실험실 피쳐 저장소(314c)에 저장될 수 있도록 한다. 본 실시예에 따른 분석 시스템은 다양한 라이브러리의 지원을 위하여 CDSW (Cloudera Data Science Workbench) (322a), JupyterLab(322b), 및 MLFlow(322c) 등을 포함하여 테스트 환경을 구성할 수 있다. 예를 들어 CDSW(322a)는 사용자가 필요한 파이썬, 스칼라 라이브러리를 설치하고 관리할 수 있도록 하며, JupyterLab(322b)은 데이터 전처리, 시각화, 머신 러닝 모델링 등 다양한 작업을 위한 파이썬 라이브러리를 지 원할 수 있다. MLflow(322c)는 라이브러리를 통한 실험 관리, 모델 저장소, 배포 및 모니터링 기능을 제공할 수 있다. 이상 본 실시예에 따른 분석 시스템은 ML 프로젝트의 특성 또는 사용자의 실험 목적에 따른 인터페이스를 갖는 라이브러리를 통해 실험실 환경을 구성할 수 있다. 이하, 도 10 내지 12를 참고하여 상술한 분석 시스템의 실험 도구로써 라이브러리를 구성하기 위해 서빙과 학습에서 이용되는 피쳐 들의 메타 데이터를 관리하는 ML 시스템의 추가적인 구성에 대하여 설명한다. 본 실시예에 따른 ML 시스템의 카탈로그 수집기는 온라인 피쳐 저장소 및 오프라인 피쳐 저장소 각각에 저장된 실시간 또는 배치 피쳐의 메타 데이터를 수집할 수 있다(S410). 본 실시예에서 카탈로그는 피쳐에 대한 메타데이터로 피쳐를 정의하기 위한 데이터 일 수 있다. 구체적으로 카 탈로그는 SQL 쿼리 또는 데이터에 대한 변환의 명세서로 피쳐 정의 명세서와, 피쳐에 대한 부가적인 정보로 피 쳐 소유자, 운영환경 또는 실험실의 피쳐 여부 등에 대한 피쳐 메타 데이터를 포함할 수 있다. 본 실시예에 따른 카탈로그 수집기는 피쳐에 대한 스키마 정보로 스키마명, 테이블명, 테이블한글명, 테이 블 설명 등을 메타 데이터로 수집할 수 있으며 테이블의 컬럼명과 컬럼의 데이터 타입에 대한 정보들을 수집하 는 것도 가능하다. 따라서 기존의 피쳐를 생성하는 사용자가 수작업으로 카탈로그를 입력하는 것에 비하여 본 실시예에 따른 ML 시스템은 효율적으로 피쳐에 대한 메타데이터를 수집할 수 있다. 이어서 카탈로그 수집기에서 수집된 메타 데이터는 카탈로그 저장소에 저장된다(S420). 도 12를 참고하면 카탈로그 저장소는 카탈로그 수집기에서 수집된 메타 데이터를 속성에 따라 상술한 피쳐 정의 명세서(334a)와 피쳐 메타 데이터(334b)로 구분하여 저장할 수 있다. 이를 통해 카탈로그 저장소는 사용자가 로직으로 저장된 피쳐를 메타 데이터를 기반으로 쉽게 검색하고 관 리할 수 있도록 하며, 실험실 환경에서 분석 시스템은 카탈로그 저장소의 카탈로그를 기반으로 ML 모 델의 테스트를 위한 라이브러리를 구성할 수 있도록 한다. 또한, 본 실시예에 따른 온라인 또는 오프라인 피쳐 저장소(312, 314)는 저장된 카탈로그를 기반으로 피쳐를 소 스로부터 수집하고 변환하여 저장하는 주기 등을 스케쥴로 생성할 수 있다. 이상 본 발명에 따른 ML 시스템은 머신러닝 서빙에서 수집되는 피쳐들을 효율적으로 구분하여 관리함으로 써 데이터 처리의 지연에 따른 사용자들의 불편을 해소할 수 있으며 안정적인 피쳐를 통한 지속적인 머신러닝 모델의 학습을 수행할 수 있다. 또한, 본 발명은 구분하여 관리되는 실시간 수집 피쳐와 배치 피쳐들 간의 교환 방법을 제공함으로써 피쳐 상호 간이 특성들을 보완한 ML 서빙이 가능하도록 한다. 또한, 본 발명은 수집된 피쳐들의 메타 데이터를 별도로 수집하고 관리함으로써 데이터의 분석가의 실험 환경을 제공할 수 있다 이하, 본 발명의 일 실시예에 따른 신경망 모델의 학습을 수행하는 ML 시스템의 구체적인 하드웨어 구현에 대하여 설명한다. 도 13을 참조하면, 본 발명의 몇몇 실시예들에서 ML 시스템는 컴퓨팅 장치의 형태로 구현될 수 있다. ML 시스템를 구성하는 각각의 모듈 중 하나 이상은 범용 컴퓨팅 프로세서 상에서 구현되며 따라서 프로세서 (processor), 입출력 I/O, 메모리 (memory), 인터페이스(interface) 및 버스(, bus)(38 5)를 포함할 수 있다. 프로세서, 입출력 장치, 메모리 및/또는 인터페이스는 버스를 통하여 서로 결합될 수 있다. 버스는 데이터들이 이동되는 통로(path)에 해당한다. 구체적으로, 프로세서는 CPU(Central Processing Unit), MPU(Micro Processor Unit), MCU(Micro Controller Unit), GPU(Graphic Processing Unit), 마이크로프로세서, 디지털 신호 프로세스, 마이크로컨트롤러, 어플리케이션 프로세서(AP, application processor) 및 이들과 유사한 기능을 수행할 수 있는 논리 소자들 중에서 적어도 하나를 포함할 수 있다. 입출력 장치는 키패드(keypad), 키보드, 터치스크린 및 디스플레이 장치 중 적어도 하나를 포함할 수 있다. 메모리 장치는 데이터 및/또는 프로그램 등을 저장할 수 있다. 인터페이스는 통신 네트워크로 데이터를 전송하거나 통신 네트워크로부터 데이터를 수신하는 기능을 수행 할 수 있다. 인터페이스는 유선 또는 무선 형태일 수 있다. 예컨대, 인터페이스는 안테나 또는 유무 선 트랜시버 등을 포함할 수 있다. 메모리 는 프로세서의 동작을 향상시키되, 개인정보의 보호를 위 한 휘발성의 동작 메모리로서, 고속의 디램 및/또는 에스램 등을 더 포함할 수도 있다. 또한, 메모리 내에는 여기에 설명된 일부 또는 모든 모듈의 기능을 제공하는 프로그래밍 및 데이터 구성을 저장한다. 예를 들어, 상술한 학습 방법의 선택된 양태들을 수행하도록 하는 로직을 포함할 수 있다. 메모리 에 저장된 상술한 학습 방법을 수행하는 각 단계를 포함하는 명령어들의 집합으로 프로그램 또는 어플리케이션을 로드하고 프로세서가 각 단계를 수행할 수 있도록 한다. 예를 들어, 실시간 데이터 소스로부터 제공된 실시간 피쳐를 온라인 피쳐 저장소에 저장하는 동작, 배치 데이터 소스로부터 제공된 배치 피쳐를 오프 라인 피쳐 저장소에 저장하는 동작, 및 상기 온라인 피쳐 저장소 및 오프라인 피쳐 저장소에 저장된 피쳐를 서 빙 목적에 따라 교환하는 동작 등이 포함된 컴퓨터 프로그램이 프로세서에 의해 각 수행될 수 있다. 이상 여기에 설명되는 다양한 실시예는 예를 들어, 소프트웨어, 하드웨어 또는 이들의 조합된 것을 이용하여 컴 퓨터 또는 이와 유사한 장치로 읽을 수 있는 기록매체 내에서 구현될 수 있다. 하드웨어적인 구현에 의하면, 여기에 설명되는 실시예는 ASICs (application specific integrated circuits), DSPs (digital signal processors), DSPDs (digital signal processing devices), PLDs (programmable logic devices), FPGAs (field programmable gate arrays, 프로세서(processors), 제어기(controllers), 마이크로 컨 트롤러(micro-controllers), 마이크로 프로세서(microprocessors), 기타 기능 수행을 위한 전기적인 유닛 중 적어도 하나를 이용하여 구현될 수 있다. 일부의 경우에 본 명세서에서 설명되는 실시예들이 제어 모듈 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시예들은 별도의 소프트웨어 모 듈들로 구현될 수 있다. 상기 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 작동을 수행할 수 있다. 적절한 프로그램 언어로 쓰여진 소프트웨어 어플리케이션으로 소프트웨어 코드가 구현될 수 있 다. 상기 소프트웨어 코드는 메모리 모듈에 저장되고, 제어모듈에 의해 실행될 수 있다. 이상의 설명은 본 발명의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 발명이 속하는 기술 분야에 서 통상의 지식을 가진 자라면 본 발명의 본질적인 특성에서 벗어나지 않는 범위 내에서 다양한 수정, 변경 및 치환이 가능할 것이다. 따라서, 본 발명에 개시된 실시 예 및 첨부된 도면들은 본 발명의 기술 사상을 한정하기 위한 것이 아니라 설명 하기 위한 것이고, 이러한 실시 예 및 첨부된 도면에 의하여 본 발명의 기술 사상의 범위가 한정되는 것은 아니 다. 본 발명의 보호 범위는 아래의 청구 범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기 술 사상은 본 발명의 권리 범위에 포함되는 것으로 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13"}
{"patent_id": "10-2023-0060714", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 ML(머신러닝) 시스템의 구성을 개념적으로 나타내는 예시도이다. 도 2은 본 발명의 일 실시예에 따른 ML 시스템의 피쳐 제공 방법의 흐름을 나타낸 예시도이다. 도 3는 본 발명의 일 실시예에 따른 ML 시스템의 실시간 피쳐 엔지니어링을 수행하는 세부 시스템 구성을 나타 낸 예시도이다. 도 4는 본 발명의 일 실시예에 따른 ML 시스템의 배치 피쳐 엔지니어링을 수행하는 세부 시스템 구성을 나타낸 예시도이다. 도 5는 본 발명의 일 실시예에 따른 ML 시스템의 피쳐 교환 방법을 나타낸 예시도이다. 도 6은 본 발명의 일 실시예에 따른 ML 시스템의 피쳐 교환을 수행하는 세부 시스템 구성을 나타낸 예시도이다 도 7은 본 발명의 일 실시예에 따른 ML 시스템의 온라인 피쳐 서빙 방법의 흐름을 나타낸 예시도이다. 도 8은 본 발명의 일 실시예에 따른 ML 시스템의 오프라인 피쳐 서빙 방법의 흐름을 나타낸 예시도이다. 도 9는 본 발명의 일 실시예에 따른 ML 시스템의 분석 시스템 구성을 나타낸 예시도이다 도 10은 본 발명의 일 실시예에 따른 ML 시스템의 카탈로그 수집 방법을 나타낸 예시도이다. 도 11 및 12는 본 발명의 일 실시예에 따른 ML 시스템의 카탈로그 수집 시스템의 구성을 나타낸 예시도이다 도 13은 본 발명의 일 실시예에 따른 ML 시스템의 컴퓨팅 장치 형태로의 구현을 나타낸 예시도이다."}
