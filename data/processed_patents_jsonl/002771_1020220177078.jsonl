{"patent_id": "10-2022-0177078", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0094639", "출원번호": "10-2022-0177078", "발명의 명칭": "이기종 딥러닝 다중 환경에서의 딥러닝 성능 평가 장치 및 그 방법", "출원인": "주식회사 코난테크놀로지", "발명자": "김민준"}}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래밍 언어로 작성된 제2 코드를 입력 받아 하나의 함수로묶어 주 시스템에 사용되는 주 코드로 변환하는 변환부;변환부를 통해 변환된 주 코드를 가지고 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용하여 제1시스템에 사용되는 제1 모델의 하이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파라미터를 전달하는 제1 API 생성부;주 프로그래밍 언어로 작성된 주 코드를 입력 받아 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달하는 제2 API 생성부;각 API 생성부로부터 각 모델의 하이퍼 파라미터를 전달받아 각 모델을 주 시스템을 사용하여 학습한 후 학습성능을 평가하는 성능 평가부; 및성능 평가결과를 출력하는 출력부;를 포함하는 것을 특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 성능 평가부는서로 상이한 프로그래밍 언어로 작성된 모델의 하이퍼 파라미터를 사용자 조작에 의해 한 번에 변경하는 것을특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 성능 평가부는주 시스템에서 각 모델 별로 학습 및 검증 코드를 실행하는 것을 특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서, 성능 평가부는모델 성능 평가 결과를 간소화하여 저장부에 저장하고 남은 캐시는 모두 삭제한 후 다시 동일한 모델을 평가할때 기 저장된 성능 평가 결과를 재활용하는 것을 특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서, 딥러닝 성능 평가 장치는성능 평가부의 성능 평가 결과를 각각의 모델에서 반환 받아 성능 평가 결과를 출력부를 통해 시각화 하도록 제어하는 출력 제어부;를 더 포함하는 것을 특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서, 출력 제어부는비교 대상 및 성능 지표를 주 시스템 기반으로 입력부를 통한 사용자 조작에 의해 설정하는 것을 특징으로 하는딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2024-0094639-3-제 5 항에 있어서, 출력 제어부는성능 평가 결과를 그래프로 시각화 하되, 입력부를 통한 사용자 선택에 의해 그래프의 X축 항목과, Y축 항목과,각 축의 최소값 및 최대값을 설정하는 것을 특징으로 하는 딥러닝 성능 평가 장치."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "딥러닝 성능 평가 장치를 이용한 딥러닝 성능 평가 방법에 있어서,제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래밍 언어로 작성된 제2 코드를 입력 받아 하나의 함수로묶어 주 시스템에 사용되는 주 코드로 변환하는 단계;변환된 주 코드를 가지고 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용하여 각각 제1 시스템에사용되는 제1 모델의 하이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파라미터를 전달하는 단계;주 프로그래밍 언어로 작성된 주 코드를 입력 받아 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달하는 단계; 및각 모델의 하이퍼 파라미터를 전달받아 각 모델을 주 시스템을 사용하여 학습한 후 학습 성능을 평가하는 단계;를 포함하는 것을 특징으로 하는 딥러닝 성능 평가 방법."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서, 딥러닝 성능 평가 방법은성능 평가 결과를 각각의 모델에서 반환 받아 시각화 하는 단계;를 더 포함하는 것을 특징으로 하는 딥러닝 성능 평가 방법."}
{"patent_id": "10-2022-0177078", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서, 시각화 하는 단계는성능 평가 결과를 그래프로 시각화 하되, 입력부를 통한 사용자 선택에 의해 그래프의 X축 항목과, Y축 항목과,각 축의 최소값 및 최대값을 설정하는 것을 특징으로 하는 딥러닝 성능 평가 방법."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "이기종 딥러닝 다중 환경에서의 딥러닝 성능 평가 장치 및 그 방법이 개시된다. 일 실시 예에 따른 딥러닝 성능 평가 장치는, 제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래밍 언어로 작성된 제2 코드를 입력 받아 하 나의 함수로 묶어 주 시스템에 사용되는 주 코드로 변환하는 변환부와, 변환부를 통해 변환된 주 코드를 가지고 (뒷면에 계속)"}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨터 비전 기술에 관한 것으로, 보다 구체적으로는 데이터 학습 및 성능 평가 기술에 관한 것이다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "근래 4차 산업혁명 시대에 접어들면서, IT 산업에서는 하드웨어의 발전뿐만 아니라 소프트웨어의 발전 또한 급 격히 이루어지고 있다. 기계의 학습을 통해 지능을 가진 것처럼 여러 문제를 판단시킬 수 있는 인공지능 및 기 계 학습(Machine Learning) 기술도 각광받고 있으며, 그 중 기계가 사람을 인식하고 결정을 위한 판단을 내리는 데에 필요한 컴퓨터 비전 기술에 대한 기대치도 높아지고 있다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "일 실시 예에 따라, 인공지능 기술 개발에 있어 이기종 딥러닝 다중 환경에서 딥러닝 성능 비교 프로세스를 효 율적으로 진행할 수 있는 딥러닝 성능 평가 장치 및 그 방법을 제안한다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시 예에 따른 딥러닝 성능 평가 장치는, 제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래밍 언어로 작성된 제2 코드를 입력 받아 하나의 함수로 묶어 주 시스템에 사용되는 주 코드로 변환하는 변환부와, 변환부 를 통해 변환된 주 코드를 가지고 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용하여 제1 시스템에 사용되는 제1 모델의 하이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파라미터를 전달하는 제 1 API 생성부와, 주 프로그래밍 언어로 작성된 주 코드를 입력 받아 주 시스템용 API를 생성하고 생성된 주 시 스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달하는 제2 API 생성부와, 각 API 생성부로부터 각 모델의 하이퍼 파라미터를 전달받아 각 모델을 주 시스템을 사용하여 학습한 후 학습 성능을 평가하는 성능 평가부와, 성능 평가결과를 출력하는 출력부를 포함한다. 성능 평가부는, 서로 상이한 프로그래밍 언어로 작성된 모델의 하이퍼 파라미터를 사용자 조작에 의해 한 번에 변경할 수 있다. 성능 평가부는, 주 시스템에서 각 모델 별로 학습 및 검증 코드를 실행할 수 있다. 성능 평가부는, 모델 성능 평가 결과를 간소화하여 저장부에 저장하고 남은 캐시는 모두 삭제한 후 다시 동일한 모델을 평가할 때 기 저장된 성능 평가 결과를 재활용할 수 있다. 딥러닝 성능 평가 장치는, 성능 평가부의 성능 평가 결과를 각각의 모델에서 반환 받아 성능 평가 결과를 출력 부를 통해 시각화 하도록 제어하는 출력 제어부를 더 포함할 수 있다. 출력 제어부는, 비교 대상 및 성능 지표를 주 시스템 기반으로 입력부를 통한 사용자 조작에 의해 설정할 수 있 다. 출력 제어부는, 성능 평가 결과를 그래프로 시각화 하되, 입력부를 통한 사용자 선택에 의해 그래프의 X축 항목 과, Y축 항목과, 각 축의 최소값 및 최대값을 설정할 수 있다. 다른 실시 예에 따른 딥러닝 성능 평가 장치를 이용한 딥러닝 성능 평가 방법은, 제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래밍 언어로 작성된 제2 코드를 입력 받아 하나의 함수로 묶어 주 시스템에 사용되는 주 코드로 변환하는 단계와, 변환된 주 코드를 가지고 주 시스템용 API를 생성하고 생성된 주 시스템용 API를 이용 하여 각각 제1 시스템에 사용되는 제1 모델의 하이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파 라미터를 전달하는 단계와, 주 프로그래밍 언어로 작성된 주 코드를 입력 받아 주 시스템용 API를 생성하고 생 성된 주 시스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달하는 단계와, 각 모 델의 하이퍼 파라미터를 전달받아 각 모델을 주 시스템을 사용하여 학습한 후 학습 성능을 평가하는 단계를 포 함한다. 딥러닝 성능 평가 방법은, 성능 평가 결과를 각각의 모델에서 반환 받아 시각화 하는 단계를 더 포함할 수 있다. 시각화 하는 단계에서, 성능 평가 결과를 그래프로 시각화 하되, 입력부를 통한 사용자 선택에 의해 그래프의 X 축 항목과, Y축 항목과, 각 축의 최소값 및 최대값을 설정할 수 있다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "일 실시 예에 따른 딥러닝 성능 평가 장치 및 그 방법에 따르면, 인공지능 기술 개발에 있어 필수적인 요소인 성능 비교 프로세스를 효율적으로 진행할 수 있도록 도와 인공지능 모델 개발 및 연구의 효율성을 증대할 수 있 다. 또한, 성능 비교 결과 중 필요한 비교 군을 사용자가 직접 선별하여 결과를 시각화 함에 따라, 다른 비교 군에 대한 검증을 위해 학습 및 평가를 다시 해야 하는 불필요한 과정들을 생략하여 연구 및 개발에 소요되는 시간을 단축할 수 있다. 나아가, 딥러닝 성능 평가 장치 및 그 방법을 통해 다양한 환경 간의 지속적이고 효율적인 연구 개발이 용이해 짐에 따라, 인공지능 모델의 성능 개선 및 유지보수가 용이해지는 효과까지 기대할 수 있다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시 예들에 한정되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시 예들은 본 발명의 개시가 완전하도록 하고, 본 발명이"}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "속하는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 본 발명의 실시 예들을 설명함에 있어서 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요 하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략할 것이며, 후술되는 용어들은 본 발명의 실시 예에서의 기능을 반영하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 이하, 첨부 도면을 참조하여 본 발명의 실시 예를 상세하게 설명한다. 그러나 다음에 예시하는 본 발명의 실시 예는 여러 가지 다른 형태로 변형될 수 있으며, 본 발명의 범위가 다음에 상술하는 실시 예에 한정되는 것은 아"}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "니다. 본 발명의 실시 예는 이 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 본 발명을 보다 완전하 게 설명하기 위하여 제공된다. 도 1은 본 발명의 일 실시 예에 따른 이기종 딥러닝 다중 환경에서의 딥러닝 성능 평가 시스템의 구성을 도시한 도면이다. 도 1을 참조하면, 딥러닝 성능 평가 시스템은 복수의 시스템(10a, 10b, … , 10n)과, 주 시스템 및 딥러 닝 성능 평가 장치를 포함한다. 각 시스템(10a, 10b, … , 10n, 12)은 서로 상이한 딥러닝 프레임워크와 서로 상이한 프로그래밍 언어를 사용할 수 있다. 주 시스템은 소정의 프로그래밍 언어, 예를 들어, 파이썬(Python)을 사용할 수 있고, 딥러닝 프레 임워크는 예를 들어 텐서플로(Tensorflow) 또는 파이토치(Pytorch) 등의 딥러닝 프로그램 등을 사용할 수 있다. 딥러닝 성능 평가 장치는 컴퓨터 비전 기술에서 활용 가능한 다양한 시스템(10a, 10b, … , 10n, 12)에서 개발된 인공지능 모델에 대한 평가를 수월하게 하기 위한 것으로, 서로 상이한 시스템 환경과 서로 상이한 프로 그래밍 언어로 구현된 딥러닝 프로그램 간의 성능 비교를 보다 빠르고 효과적으로 확인할 수 있음에 목적을 둔 다. 일반적인 방식에서는 동일한 시스템 환경에서 구현된 동일한 프로그래밍 언어를 활용했을 때만 하나의 프로그램 에서 성능 결과를 확인하고 비교할 수 있다. 따라서, 상이한 시스템 환경에서 구현된 프로그램은 사용자가 직접 하나하나 실행시켜보고 비교해야 한다. 그러나, 본 발명에 따른 딥러닝 성능 평가 장치는 이기종 딥러닝 환경 상에서 이러한 과정을 간소화하여, 효과적이고 신속하게 서로 상이한 딥러닝 프로그램의 성능을 비교 평가할 수 있다. 또한, 이러한 과정을 통해 얻은 성능 비교 결과를 GUI(Graphical user interface)를 통해 사용자가 원하는 인자만 골라서 시각화하여 제공 함에 따라, 사용자의 편의성을 높일 수 있다. 딥 러닝 성능 평가 장치는 이기종 딥러닝 환경 간의 효율적 성능 비교 프로세스를 제공하고, 성능 비교 결 과를 사용자 맞춤형으로 시각화 함에 따라, 사용자로 하여금 프로그래밍 언어, 프로그램 등의 시스템에 대한 제 약이 없는 접근성을 제공할 수 있다. 사용자가 자신이 사용하는 시스템 사용 중에 시스템 개발 환경이나 프로그 래밍 언어에 따른 업그레이드와 유지보수가 거의 필요하지 않다는 장점이 있다. 딥러닝 성능 평가 장치는 시스템 간 성능 비교 및 시각화를 수행함에 있어서, 기존에는 사람이 직접 처리해 야 했던 부분들을 줄이고, 여러 번 학습 및 평가를 진행해 각각 비교해야 했던 번거로움을 줄임으로써 물리적인 소요시간을 줄일 수 있다. 다만, 코드의 실행시간(running time)을 빠르게 하거나 느리게 하는 것처럼 모델의 자체적인 성능의 향상 혹은 감소와 관련된 부분들은 본 발명과 관련이 없음을 유의한다. 도 2는 본 발명의 일 실시 예에 따른 딥러닝 성능 평가 장치의 구성을 도시한 도면이다. 도 1 및 도 2를 참조하면, 일 실시 예에 따른 딥러닝 성능 평가 장치는 프로세서, 출력부, 입력부 및 저장부를 포함한다. 일 실시 예에 따른 프로세서는 변환부, 제1 API 생성부, 제2 API 생성부, 성능 평가부 및 출력 제어부를 포함할 수 있다. 변환부는 성능 평가부가 서로 상이한 시스템 환경 간의 딥러닝 성능 비교 평가를 할 수 있도록 주 프 로그래밍 언어(예를 들어, 파이썬: Python)를 제외한 다른 프로그래밍 언어(예를 들어, C, C++, Java etc.)로 작성된 각각의 코드를 하나의 함수로 묶어 주 시스템 환경(예를 들어, 파이썬: Python 환경)에 사용되는 주 코 드로 변환한다. 도 1에서는 제1 프로그래밍 언어로 작성된 제1 코드와, 제2 프로그래밍 언어로 작성된 제2 코드 를 예로 도시하고 있으나, 이는 본 발명의 이해를 돕기 위한 일 실시 예일 뿐 그 개수는 이에 한정되는 것은 아 니다. 제1 프로그래밍 언어는 제1 시스템에 사용될 수 있고, 제2 프로그래밍 언어는 제2 시스템에 사용될 수 있 다. 이어서, 제1 API 생성부는 변환부를 통해 변환된 주 코드를 가지고 주 프로그래밍 언어(예를 들어, 파이썬: Python) 기반의 성능 평가부에서 비교할 수 있도록 주 시스템용 API(Application Programming Interface)를 생성한다. 그리고 생성된 주 시스템용 API를 이용하여 각각 제1 시스템에 사용되는 제1 모델의 하 이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파라미터를 전달한다. 하이퍼 파라미터는 해당 모 델의 학습을 위해 설정하는 여러 파라미터들을 포함한다. 제2 API 생성부는 주 프로그래밍 언어(예를 들어, 파이썬: Python)로 작성된 코드를 하나의 함수로 묶은 후 주 코드를 가지고 주 시스템용 API를 생성하고, 생성된 주 시스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달한다. 이에 따라, 제1 API 생성부 및 제2 API 생성부는 주 프로그래밍 언어 기반의 성능 평가부에 주 시스템용 API를 통해 각 모델의 하이퍼 파라미터들을 전달할 수 있다. 성능 평가부는 내부적인 하이퍼 파 라미터 변경을 원하는 사용자 조작신호를 입력부를 통해 입력받아, 비교 대상의 모델의 하이퍼 파라미터들 을 한 번에 변경할 수 있다. 성능 평가부는 제1 API 생성부 및 제2 API 생성부로부터 각 모델의 하이퍼 파라미터를 전달받아, 각 모델을 학습한 후 학습 성능을 평가하고 평가 결과를 저장부에 저장한다. 이때, 성능 평가부 는 주 시스템에서 각 모델 별로 각각 한 줄의 학습 및 검증 코드를 실행시킴으로써, 손쉽게 시스템 간의 성능을 비교할 수 있다. 이러한 방식을 활용하면, 이식성도 향상되어, 또 다른 모델을 비교하고 싶을 때도, 미리 각각의 API만 설정하면, 한두 줄의 코드 수정만으로 동일한 효과를 창출할 수 있다. 출력 제어부는 성능 평가부의 성능 평가 결과를 각각의 모델에서 리스트 형식으로 반환 받아 성능 평 가 결과를 출력부를 통해 시각화 하도록 제어한다. 출력 제어부는 각 모델의 내부적인 동작에 관여하지 않으면서 비교의 대상, 성능 지표의 종류, 반복 횟수 등을 주 시스템 기반으로 입력부를 통한 사용자 조작에 의해 설정 가능하다. 즉, 비교 대상과 성능 지표 등 은 사용자가 원하면 언제든지 추가하거나 수정할 수 있다. 이에 따라, 사용자가 한 눈에 보기 쉽게 비교 대상과 성능 지표를 확인할 수 있다. 성능 평가부가 비교하고자 하는 모델을 학습 및 평가하여 평가 결과를 저장부에 저장하면, 출력 제어 부는 저장된 평가 결과를 가지고 그래프의 X축, Y축의 항목을 구성하여 그래프로 시각화 한다. 이때, 출력 제어부는 입력부를 통한 사용자 조작에 의해 사용자가 선택한 항목의 평가 결과만 골라서 그래프로 시 각화 할 수 있다. 출력 제어부는 그래프의 X축 및 Y축의 최소값, 최대값을 입력부를 통한 사용자 조작 에 의해 설정할 수 있다. 이에 따라, 원하는 구간의 데이터만 얻을 수도 있어 여러 가지 파라미터에 대해 여러 번 학습과 평가를 할 필요가 없어져 더욱 효율적인 결과 비교가 가능하다. 출력 제어부는 입력부를 통한 사용자 조작에 의해 각 축에 대한 비교 군을 쉽게 변경할 수 있다. 이때, 모든 결과를 저장한 상태로 시각화만 진행하기 때문에 소요되는 시간도 매우 적다. 성능 평가부는 모든 프로세스가 종료되면 가지고 있는 성능 평가 결과를 간소화하여 저장부에 저장하 고, 남은 캐시는 모두 삭제함으로써 메모리도 효율적으로 관리할 수 있게 지원한다. 나아가, 성능 평가부 는 다시 동일한 모델을 평가할 때는 간소화했던 성능 평가 결과를 재활용함에 따라 더 빠른 속도로 비교할 수있다. 도 3은 본 발명의 일 실시 예에 따른 서로 상이한 딥러닝 환경 간의 성능 비교 결과 예를 도시한 도면이다. 도 2 및 도 3을 참조하면, 성능 평가부는 서로 상이한 딥러닝 환경에서의 모델 성능을 비교하여 평가할 수 있다. 예를 들어, 도 3에 도시된 바와 같이 비교 대상인 텐서플로(Tensorflow) 모델과 파이토치(Pytorch) 모델 의 성능을 비교하여 평가할 수 있다. 딥러닝 성능 평가 장치는 각 모델의 내부적인 동작에 관여하지 않으면서 비교의 대상, 성능 지표의 종류, 반 복 횟수 등을 주 시스템 기반으로 사용자 조작에 의해 설정 가능하다. 즉, 비교 대상과 성능 지표 등은 사용자 가 원하면 언제든지 추가하거나 수정할 수 있다. 이에 따라, 사용자가 한 눈에 보기 쉽게 비교 대상과 성능 지 표를 확인할 수 있다. 도 3에서 비교 대상은 텐서플로(Tensorflow) 모델과 파이토치(Pytorch) 모델이며, 성능 지표는 실행 시간 (Running Time), 학습 손실(train loss), 정확도(Accuracy), 평균 손실(Avg loss) 등이 있다. 도 4는 본 발명의 일 실시 예에 따른 성능 평가 그래프를 도시한 도면이다. 도 2 및 도 4를 참조하면, 출력 제어부는 성능 평가 결과를 그래프로 시각화 한다. 예를 들어, 도 4에 도 시된 바와 같이 A 모델과 B 모델의 성능 평가 결과를 그래프(X축: epochs, Y축: accuracy)로 시각화 한다. 출력 제어부는 입력부를 통한 사용자 조작에 의해 사용자가 선택한 항목으로 그래프의 X축, Y축을 설 정할 수 있다. 예를 들어, 출력 제어부는 도 4에 도시된 바와 같이 X축(epochs, iteration 등)과 Y축 (accuracy, loss 등)을 각각 설정할 수 있다. 나아가, 출력 제어부는 그래프의 각 축의 최소값 및 최대값 을 입력부를 통한 사용자 조작에 의해 설정할 수 있다. 도 5는 본 발명의 일 실시 예에 따른 딥러닝 성능 평가 방법의 흐름을 도시한 도면이다. 도 1 및 도 5를 참조하면, 딥러닝 성능 평가 장치는 제1 프로그래밍 언어로 작성된 제1 코드와 제2 프로그래 밍 언어로 작성된 제2 코드를 입력 받아 하나의 함수로 묶어 주 시스템에 사용되는 주 코드로 변환한다. 이어서, 딥러닝 성능 평가 장치는 변환된 주 코드를 가지고 주 시스템용 API를 생성하고, 생성된 주 시스템 용 API를 이용하여 제1 시스템에 사용되는 제1 모델의 하이퍼 파라미터 및 제2 시스템에 사용되는 제2 모델의 하이퍼 파라미터를 전달한다. 이어서, 딥러닝 성능 평가 장치는 주 프로그래밍 언어로 작성된 주 코드를 입력 받아 주 시스템용 API를 생 성하고 생성된 주 시스템용 API를 이용하여 주 시스템에 사용되는 주 모델의 하이퍼 파라미터를 전달한다. 이어서, 딥러닝 성능 평가 장치는 각 모델의 하이퍼 파라미터를 전달받아 각 모델을 주 시스템을 사용하여 학습한 후 학습 성능을 평가한다. 나아가, 딥러닝 성능 평가 장치는 성능 평가 결과를 각각의 모델에서 반환 받아 시각화 할 수 있다."}
{"patent_id": "10-2022-0177078", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이제까지 본 발명에 대하여 그 실시 예들을 중심으로 살펴보았다. 본 발명이 속하는 기술분야에서 통상의 지식 을 가진 자는 본 발명이 본 발명의 본질적인 특성에서 벗어나지 않는 범위에서 변형된 형태로 구현될 수 있음을 이해할 수 있을 것이다. 그러므로 개시된 실시 예들은 한정적인 관점이 아니라 설명적인 관점에서 고려되어야 한다. 본 발명의 범위는 전술한 설명이 아니라 특허청구범위에 나타나 있으며, 그와 동등한 범위 내에 있는 모 든 차이점은 본 발명에 포함된 것으로 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5"}
{"patent_id": "10-2022-0177078", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시 예에 따른 이기종 딥러닝 다중 환경에서의 딥러닝 성능 평가 시스템의 구성을 도시한 도면, 도 2는 본 발명의 일 실시 예에 따른 딥러닝 성능 평가 장치의 구성을 도시한 도면, 도 3은 본 발명의 일 실시 예에 따른 서로 상이한 딥러닝 환경 간의 성능 비교 결과 예를 도시한 도면,도 4는 본 발명의 일 실시 예에 따른 성능 평가 그래프를 도시한 도면, 도 5는 본 발명의 일 실시 예에 따른 딥러닝 성능 평가 방법의 흐름을 도시한 도면이다."}
