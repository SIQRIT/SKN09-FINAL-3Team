{"patent_id": "10-2023-0137889", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0054534", "출원번호": "10-2023-0137889", "발명의 명칭": "인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법, 장치 및", "출원인": "아이엠스토리브릿지 주식회사", "발명자": "추대호"}}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에 의해 수행되는 방법에 있어서,하나 이상의 이미지를 포함하는 학습 데이터를 획득하는 단계;상기 학습 데이터를 활용하여 하나 이상의 인공지능 모델을 학습하는 단계; 사용자의 요청 정보를 획득하는 단계; 및상기 학습된 하나 이상의 인공지능 모델을 이용하여 상기 사용자의 요청 정보에 대응하는 결과 이미지를 출력하는 단계; 를 포함하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 인공지능 모델을 학습하는 단계는,선화 완성 모델을 학습하는 단계; 및컬러링 모델을 개발하는 단계; 를 포함하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서, 상기 인공지능 모델을 학습하는 단계는, 상기 사용자의 작화 및 스타일 학습을 수행하는 단계; 를 더 포함하는,인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1 항에 있어서, 상기 인공지능 모델을 학습하는 단계는,학습된 모델에 대한 파인튜닝을 수행하는 단계; 를 더 포함하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4 항에 있어서,상기 파인튜닝을 수행하는 단계는,캐릭터 정보를 학습하는 단계; 를 포함하고, 상기 캐릭터 정보를 학습하는 단계는, 출력되는 결과물의 일관성을 유지할 수 있도록 학습되는 것을 특징으로하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법.공개특허 10-2025-0054534-3-청구항 6 제4 항에 있어서,상기 파인튜닝을 수행하는 단계는, 손상된 이미지를 복원하고, 해상도 업스케일이 가능한 출력 보정이 가능하도록 학습되는 것을 특징으로 하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "하나 이상의 인스트럭션을 저장하는 메모리; 및상기 메모리에 저장된 상기 하나 이상의 인스트럭션을 실행하는 프로세서를 포함하고,상기 프로세서는 상기 하나 이상의 인스트럭션을 실행함으로써, 제1 항의 방법을 수행하는, 장치."}
{"patent_id": "10-2023-0137889", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "하드웨어인 컴퓨터와 결합되어, 제1 항의 방법을 수행할 수 있도록 컴퓨터에서 독출가능한 기록매체에 저장된컴퓨터프로그램."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "하나 이상의 이미지를 포함하는 학습 데이터를 획득하는 단계, 상기 학습 데이터를 활용하여 하나 이상의 인공지 능 모델을 학습하는 단계, 사용자의 요청 정보를 획득하는 단계 및 상기 학습된 하나 이상의 인공지능 모델을 이 용하여 상기 사용자의 요청 정보에 대응하는 결과 이미지를 출력하는 단계를 포함하는, 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법이 개시된다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제공 방법에 관한 것이다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 K-드라마와 K-웹툰은 글로벌 시장에서 큰 성공을 거두고 있으며, 이러한 트렌드는 원천 스토리 IP의 가치 를 크게 향상시켰다. 특히, 국내 웹툰 플랫폼들이 전 세계적으로 1등 플랫폼으로 빠르게 성장하고 있으며, 이에 따라 웹툰 스튜디오의 제작 편수와 콘텐츠 공급이 증가할 것으로 예상된다. 2023년을 기준으로 한국 드라마 중 웹툰 원작 IP가 50% 이상을 차지하며, 드라마의 프리퀄과 스핀오프 형태의 웹툰 제작도 늘어나고 있다. 또한, K-Drama의 세계적인 흥행은 드라마 제작비용을 증가시키며, 웹툰의 영상화에 대한 수요도 높아지고 있어 웹툰의 원천 IP로서의 가능성과 시장 확대가 예상된다. 그러나, 웹툰과 일러스트 산업은 노동 집약적인 특성을 지니고 있다. 웹툰 산업의 빠른 성장에 비해 작가들은 여전히 열악한 노동 환경에서 작업하고 있다. 실제로, 2021년 웹툰 작가 실태 조사 결과, 웹툰 작가들은 주당 평균 61.95시간을 작품 활동에 투입하고 있다. 이러한 상황은 효율적인 작품 제작을 지원하는 기술의 필요성을 높이고 있다. AI 기반 이미지 생성 모델의 등장은 이러한 문제의 해결 방안 중 하나로 보인다. DALL·E, Imagen, Stable Diffusion 등의 다양한 이미지 생성 모델이 이미 발표되었으며, 일러스트 생성 서비스도 출시되었다. 그러나, 이러한 서비스들은 강력하긴 하지만, 작품 활동에 필요한 학습 기능을 제공하지 않아, 작품의 일관성이나 맥락 을 제공하는데 한계가 있다. 또한, 데이터셋이 크롤링에 기반하여 학습되기 때문에, 저작권과 관련된 논란도 존 재한다. 따라서, 이러한 문제점들을 해결할 수 있는 기술의 개발이 요구되고 있다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리보드 제작 플랫폼 제 공 방법을 제공하는 것이다. 본 발명이 해결하고자 하는 과제들은 이상에서 언급된 과제로 제한되지 않으며, 언급되지 않은 또 다른 과제들 은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 과제를 해결하기 위한 본 발명의 일 면에 따른 인공지능 기반의 웹툰 및 일러스트 생성 모델 및 스토리 보드 제작 플랫폼 제공 방법은, 하나 이상의 이미지를 포함하는 학습 데이터를 획득하는 단계, 상기 학습 데이 터를 활용하여 하나 이상의 인공지능 모델을 학습하는 단계, 사용자의 요청 정보를 획득하는 단계 및 상기 학습 된 하나 이상의 인공지능 모델을 이용하여 상기 사용자의 요청 정보에 대응하는 결과 이미지를 출력하는 단계를 포함한다. 본 발명의 기타 구체적인 사항들은 상세한 설명 및 도면들에 포함되어 있다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 상술한 문제점들을 해결하기 위해 개발되었으며, 이를 통해 작가들은 더 빠르고 효율적으로 선화 및 컬러링 작업 등 인력집약적인 업무를 인공지능을 활용하여 빠르게 완료할 수 있고, 이에 따라 작가들의 작업 부 담을 경감하면서도 결과물의 품질을 유지 혹은 향상시킬 수 있는 효과가 있다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나, 본 발명은 이하에서 개시되는 실시예들에 제한되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술 분야의 통상의 기술자에게 본 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 명세서 전체에 걸쳐 동일한 도면 부호는 동일한 구성 요소를 지칭하며, \"및/또는\"은 언급된 구성요소들의 각각 및 하나 이상의 모든 조합을 포함한다. 비록 \"제1\", \"제2\" 등이 다양한 구성요소들을 서술하기 위해서 사용되나, 이들 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단 지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야의 통상의 기술자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또한, 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 명세서에서 사용되는 \"부\" 또는 “모듈”이라는 용어는 소프트웨어, FPGA 또는 ASIC과 같은 하드웨어 구성요소 를 의미하며, \"부\" 또는 “모듈”은 어떤 역할들을 수행한다. 그렇지만 \"부\" 또는 “모듈”은 소프트웨어 또는 하드웨어에 한정되는 의미는 아니다. \"부\" 또는 “모듈”은 어드레싱할 수 있는 저장 매체에 있도록 구성될 수 도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서 \"부\" 또는 “모 듈”은 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라 이버들, 펌웨어, 마이크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 및 변수들을포함한다. 구성요소들과 \"부\" 또는 “모듈”들 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 \"부\" 또는 “모듈”들로 결합되거나 추가적인 구성요소들과 \"부\" 또는 “모듈”들로 더 분리될 수 있다. 공간적으로 상대적인 용어인 \"아래(below)\", \"아래(beneath)\", \"하부(lower)\", \"위(above)\", \"상부(upper)\" 등 은 도면에 도시되어 있는 바와 같이 하나의 구성요소와 다른 구성요소들과의 상관관계를 용이하게 기술하기 위 해 사용될 수 있다. 공간적으로 상대적인 용어는 도면에 도시되어 있는 방향에 더하여 사용시 또는 동작시 구성 요소들의 서로 다른 방향을 포함하는 용어로 이해되어야 한다. 예를 들어, 도면에 도시되어 있는 구성요소를 뒤 집을 경우, 다른 구성요소의 \"아래(below)\"또는 \"아래(beneath)\"로 기술된 구성요소는 다른 구성요소의 \"위 (above)\"에 놓여질 수 있다. 따라서, 예시적인 용어인 \"아래\"는 아래와 위의 방향을 모두 포함할 수 있다. 구성 요소는 다른 방향으로도 배향될 수 있으며, 이에 따라 공간적으로 상대적인 용어들은 배향에 따라 해석될 수 있 다. 본 명세서에서, 컴퓨터는 적어도 하나의 프로세서를 포함하는 모든 종류의 하드웨어 장치를 의미하는 것이고, 실시 예에 따라 해당 하드웨어 장치에서 동작하는 소프트웨어적 구성도 포괄하는 의미로서 이해될 수 있다. 예 를 들어, 컴퓨터는 스마트폰, 태블릿 PC, 데스크톱, 노트북 및 각 장치에서 구동되는 사용자 클라이언트 및 애 플리케이션을 모두 포함하는 의미로서 이해될 수 있으며, 또한 이에 제한되는 것은 아니다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예를 상세하게 설명한다. 본 명세서에서 설명되는 각 단계들은 컴퓨터에 의하여 수행되는 것으로 설명되나, 각 단계의 주체는 이에 제한 되는 것은 아니며, 실시 예에 따라 각 단계들의 적어도 일부가 서로 다른 장치에서 수행될 수도 있다. 도 1은 본 발명의 일 실시예에 따른 시스템을 도시한 도면이다. 도 1을 참조하면, 본 발명의 일 실시예에 따른 시스템은 서버, 사용자 단말 및 외부 서버를 포 함할 수 있다. 여기서, 도 1에 도시된 시스템은 일 실시예에 따른 것이고, 그 구성 요소가 도 1에 도시된 실시예에 한정되는 것은 아니며, 필요에 따라 부가, 변경 또는 삭제될 수 있다. 일 실시예에서, 서버는 개시된 실시 예에 따른 방법을 수행할 수 있다. 예를 들어, 서버는 네트워크를 통해 사용자 단말과 연결될 수 있고, 사용자 단말로 개시된 실시 예에 따른 방법의 이용을 위한 UI를 제공할 수 있으며, UI를 통해 명령을 입력받고 이에 대한 분석결과를 출력할 수 있다. 다양한 실시예에서, 서버는 웹(Web) 또는 애플리케이션(Application) 기반의 서비스를 제공할 수 있다. 그 러나, 이에 한정되지 않는다. 여기서, 사용자 단말은 사용자 단말의 적어도 일부분에 디스플레이를 포함하며, 서버로부터 제 공되는 애플리케이션 혹은 확장 프로그램 기반의 서비스 구동을 위한 운영체제를 포함할 수 있다. 예를 들어, 사용자 단말은 스마트폰(Smart-phone)일 수 있으나, 이에 한정되지 않고, 사용자 단말은, 휴대성과 이동성이 보장되는 무선 통신 장치로서, 네비게이션, PCS(Personal Communication System), GSM(Global System for Mobile communications), PDC(Personal Digital Cellular), PHS(Personal Handyphone System), PDA(Personal Digital Assistant), IMT(International Mobile Telecommunication)-2000, CDMA(Code Division Multiple Access)-2000, W-CDMA(W-Code Division Multiple Access), Wibro(Wireless Broadband Internet) 단 말, 스마트 패드(Smartpad), 타블렛PC(Tablet PC) 등과 같은 모든 종류의 핸드헬드(Handheld) 기반의 무선 통 신 장치를 포함할 수 있다. 또한, 여기서, 네트워크는 복수의 단말 및 서버들과 같은 각각의 노드 상호 간에 정보 교환이 가능한 연결 구조를 의미할 수 있다. 예를 들어, 네트워크는 근거리 통신망(LAN: Local Area Network), 광역 통신망 (WAN: Wide Area Network), 인터넷(WWW: World Wide Web), 유무선 데이터 통신망, 전화망, 유무선 텔레비전 통 신망 등을 포함한다. 또한, 여기서, 무선 데이터 통신망은 3G, 4G, 5G, 3GPP(3rd Generation Partnership Project), 5GPP(5th Generation Partnership Project), LTE(Long Term Evolution), WIMAX(World Interoperability for Microwave Access), 와이파이(Wi-Fi), 인터넷(Internet), LAN(Local Area Network), Wireless LAN(Wireless Local AreaNetwork), WAN(Wide Area Network), PAN(Personal Area Network), RF(Radio Frequency), 블루투스(Bluetooth) 네트워크, NFC(Near-Field Communication) 네트워크, 위성 방송 네트워크, 아날로그 방송 네트워크, DMB(Digital Multimedia Broadcasting) 네트워크 등이 포함되나 이에 한정되지는 않는다. 일 실시예에서, 외부 서버는 네트워크를 통해 서버와 연결될 수 있으며, 서버가 분석을 수 행하기 위하여 필요한 각종 정보/데이터를 저장 및 관리할 수 있고, 서버가 서비스를 제공함에 따라 생성 되는 각종 정보/데이터를 저장 및 관리할 수 있다. 다양한 실시예에서, 외부 서버는 서버의 외부에 별도로 구비되는 저장 서버(예: 데이터베이스 서버) 일 수 있으나, 이에 한정되지 않고, 각종 정보 및 데이터의 저장을 위하여 외부 서버를 서버의 외부 에 별도로 구비하지 않고, 서버 내에 별도의 공간에 데이터베이스를 마련하여 해당 공간에 저장 및 관리할 수 있다. 이하, 도 2를 참조하여, 서버의 하드웨어 구성에 대해 설명하도록 한다. 도 2는 본 발명의 다른 실시예에 따른 서버의 하드웨어 구성도이다. 도 2를 참조하면, 본 발명의 다른 실시예에 따른 서버는 하나 이상의 프로세서, 프로세서에 의 하여 수행되는 컴퓨터 프로그램을 로드(Load)하는 메모리, 버스, 통신 인터페이스 및 컴퓨 터 프로그램을 저장하는 스토리지를 포함할 수 있다. 여기서, 도 2에는 본 발명의 실시예와 관련 있"}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "는 구성요소들만 도시되어 있다. 따라서, 본 발명이 속한 기술분야의 통상의 기술자라면 도 2에 도시된 구성요 소들 외에 다른 범용적인 구성 요소들이 더 포함될 수 있음을 알 수 있다. 프로세서는 서버의 각 구성의 전반적인 동작을 제어한다. 프로세서는 CPU(Central Processing Unit), MPU(Micro Processor Unit), MCU(Micro Controller Unit), GPU(Graphic Processing Unit) 또는 본 발 명의 기술 분야에 잘 알려진 임의의 형태의 프로세서를 포함하여 구성될 수 있다. 또한, 프로세서는 본 발명의 실시예들에 따른 방법을 실행하기 위한 적어도 하나의 애플리케이션 또는 프 로그램에 대한 연산을 수행할 수 있으며, 서버는 하나 이상의 프로세서를 구비할 수 있다. 다양한 실시예에서, 프로세서는 프로세서 내부에서 처리되는 신호(또는, 데이터)를 일시적 및/또는 영구적으로 저장하는 램(RAM: Random Access Memory, 미도시) 및 롬(ROM: Read-Only Memory, 미도시)을 더 포 함할 수 있다. 또한, 프로세서는 그래픽 처리부, 램 및 롬 중 적어도 하나를 포함하는 시스템온칩(SoC: system on chip) 형태로 구현될 수 있다. 메모리는 각종 데이터, 명령 및/또는 정보를 저장한다. 메모리는 본 발명의 다양한 실시예에 따른 방 법/동작을 실행하기 위하여 스토리지로부터 컴퓨터 프로그램을 로드할 수 있다. 메모리에 컴퓨 터 프로그램이 로드되면, 프로세서는 컴퓨터 프로그램을 구성하는 하나 이상의 인스트럭션들을 실행함으로써 상기 방법/동작을 수행할 수 있다. 메모리는 RAM과 같은 휘발성 메모리로 구현될 수 있을 것 이나, 본 개시의 기술적 범위가 이에 한정되는 것은 아니다. 버스는 서버의 구성 요소 간 통신 기능을 제공한다. 버스는 주소 버스(address Bus), 데이터 버 스(Data Bus) 및 제어 버스(Control Bus) 등 다양한 형태의 버스로 구현될 수 있다. 통신 인터페이스는 서버의 유무선 인터넷 통신을 지원한다. 또한, 통신 인터페이스는 인터넷 통 신 외의 다양한 통신 방식을 지원할 수도 있다. 이를 위해, 통신 인터페이스는 본 발명의 기술 분야에 잘 알려진 통신 모듈을 포함하여 구성될 수 있다. 몇몇 실시예에서, 통신 인터페이스는 생략될 수도 있다. 스토리지는 컴퓨터 프로그램을 비 임시적으로 저장할 수 있다. 서버를 통해 정밀 진단 모듈 제 안 프로세스를 수행하는 경우, 스토리지는 개시된 실시 예에 따른 분석을 수행하기 위하여 필요한 각종 정 보를 저장할 수 있다. 스토리지는 ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리 등과 같은 비휘발성 메모리, 하드 디스크, 착탈형 디스크, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터로 읽을 수 있는 기록 매체를 포함하여 구성될 수 있다. 컴퓨터 프로그램은 메모리에 로드될 때 프로세서로 하여금 본 발명의 다양한 실시예에 따른 방 법/동작을 수행하도록 하는 하나 이상의 인스트럭션들을 포함할 수 있다. 즉, 프로세서는 상기 하나 이상 의 인스트럭션들을 실행함으로써, 본 발명의 다양한 실시예에 따른 상기 방법/동작을 수행할 수 있다.일 실시예에서, 컴퓨터 프로그램은 개시된 실시 예에 따른 방법을 수행하도록 하는 하나 이상의 인스트럭 션을 포함할 수 있다. 본 발명의 실시예와 관련하여 설명된 방법 또는 알고리즘의 단계들은 하드웨어로 직접 구현되거나, 하드웨어에 의해 실행되는 소프트웨어 모듈로 구현되거나, 또는 이들의 결합에 의해 구현될 수 있다. 소프트웨어 모듈은 RAM(Random Access Memory), ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리(Flash Memory), 하드 디스크, 착탈형 디스크, CD-ROM, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터 판독가능 기록매체에 상주할 수도 있다. 본 발명의 구성 요소들은 하드웨어인 컴퓨터와 결합되어 실행되기 위해 프로그램(또는 애플리케이션)으로 구현 되어 매체에 저장될 수 있다. 본 발명의 구성 요소들은 소프트웨어 프로그래밍 또는 소프트웨어 요소들로 실행 될 수 있으며, 이와 유사하게, 실시 예는 데이터 구조, 프로세스들, 루틴들 또는 다른 프로그래밍 구성들의 조 합으로 구현되는 다양한 알고리즘을 포함하여, C, C++, 자바(Java), 어셈블러(assembler) 등과 같은 프로그래밍 또는 스크립팅 언어로 구현될 수 있다. 기능적인 측면들은 하나 이상의 프로세서들에서 실행되는 알고리즘으로 구현될 수 있다. 이하에서는, 본 발명에 따른 다양한 실시 예들을 각각 설명한다. 본 발명은, AI기반 웹툰 및 일러스트 제작 플랫폼 구축을 위한 모델 개발을 제안한다. 일 실시 예에서, 자동 선화 완성 기능을 구축할 수 있다. 선화 프로세스를 자동화하기 위해, 심층 신경망을 활 용하여 원본 스케치에서 선을 자동으로 완성하는 기능을 개발할 수 있다. 이를 통해 작가들은 더 빠르고 효율적 으로 선화를 완료할 수 있는 효과를 얻을 수 있다. 일 실시 예에서, 자동 컬러링 기능을 개발할 수 있다. 구체적으로, 각 레이어에 적절한 색상을 자동으로 적용하 여 기본 컬러링을 완료하는 모델을 구축할 수 있다. 컬러링 과정을 자동화하여 작가의 작업 부담을 줄일 수 있 는 효과를 얻을 수 있다. 일 실시 예에서, 작화 및 스타일 학습 기능을 구현할 수 있다. 구체적으로, 작가의 개인 스타일을 학습하여 이 를 새로운 작품에 적용하는 기능을 개발할 수 있다. 모델은 작가의 이전 작품을 분석하여 스타일을 학습하고, 이를 새로운 작품에 일관되게 적용할 수 있다. 일 실시 예에서, 어텐션 레이어의 Key, Query, Value 전이 학습 방법을 적용할 수 있다. 모델의 학습 비용을 절 감하고 효율을 극대화하기 위해, 어텐션 레이어에서 전이 학습 방법을 적용할 수 있다. 이를 통해 모델은 빠르 게 고품질의 결과물을 생성할 수 있다. 또한, AI기반 웹툰 제작 플랫폼 구축을 위한 파인튜닝 프로세스를 개발할 수 있다. 일 실시 예에서, 캐릭터 학습 과정이 수행될 수 있다. 구체적으로, 캐릭터의 얼굴, 의상, 배경 등의 요소를 세 밀하게 학습하여 작품 전반의 일관성을 확보할 수 있다. 일 실시 예에서, 아웃풋 보정 과정이 수행될 수 있다. 이미지 생성 모델의 한계를 극복하기 위해, FineTune 알 고리즘을 적용하여 손상된 이미지를 복원하고 해상도를 업스케일하는 기능이 제공될 수 있다. 구체적으로, 표현 가능한 픽셀 면적에 비하여 품질이 달라지는 ‘이미지 생성 모델’의 한계로 손 또는 손가락 표현의 오차가 발 생할 수 있다. FineTune 알고리즘 적용을 통한 손상된 이미지의 ‘복원‘ 솔루션을 구현할 수 있고, 해상도 업 스케일(Super Resolution) 기능을 개발하여 결과물의 품질을 향상시킬 수 있다. 또한, 웹 기반 UI/UX 플랫폼을 개발할 수 있다. 일 실시 예에서, 파이썬 Gradio 기반 인퍼런스 플랫폼을 개발할 수 있다. 구체적으로, 사용자 친화적인 인터페 이스를 제공하기 위해 Gradio를 활용하여 인퍼런스 플랫폼을 구축할 수 있다. 일 실시 예에서, Prompt 기반 인코더/디코더 전방에 배치되는 UI 모델을 개발할 수 있다. 구체적으로, 사용자의 접근성을 향상시키기 위해, 사용자의 입력을 모델에 더 효과적으로 전달할 수 있는 UI를 개발하여 제공할 수 있 다. 또한, 일러스트 학습 데이터 셋 구축 및 라벨링 프로세스를 구축할 수 있다. 일 실시 예에서, 학습 데이터 셋을 구축할 수 있다. 구체적으로, 장르별 소설 일러스트, 웹툰, 만화 등 다양한 자료를 바탕으로 학습 데이터 셋을 구축할 수 있다. 일 실시 예에서, 데이터 수집 및 분류 자동화 시스템을 제공할 수 있다. 구체적으로, 효율적인 학습을 위해, 데 이터 수집과 분류 과정을 자동화하는 시스템을 구축할 수 있다. 일 실시 예에서, 데이터 증강 기술을 적용할 수 있다. 구체적으로, 학습 데이터의 다양성을 향상시키기 위해, 생성 모델과 결합하여 데이터 증강 기술을 적용할 수 있다. 다양한 실시 예에서, AI 모델의 개발을 위해 아래와 같은 기법이 활용될 수 있다. 일 실시 예에서, 마르코프 체인(Marcov Chain) 및 베이지안 이론 (Bayesian theory)을 기반으로 어텐션 레이어 (Attention Layer)의 Key, Query, Value 파라메터 전이를 통해 적은 학습량으로 효율적인 이미지를 생성하는 새 로운 학습 모델 개발이 수행될 수 있다. 다양한 실시 예에서, FineTune 알고리즘의 구현을 위해 아래와 같은 프로세스가 적용될 수 있다. 일 실시 예에서, 사전 학습된 가중치에 새로운 키워드를 삽입하거나 의상과 얼굴 등 독립적인 오브젝트를 학습 하여 결합 생성하는 프로세스 개발이 수행될 수 있다. 또한, Dreambooth, HyperNetwork, Embedding 기술을 적 용(implement)한 Textual Inversion 기술이 적용될 수 있다. 도 3은 본 개시의 일 실시예에 관련된 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 “노드”라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 “노드”들은 “뉴런(neuron)”들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포 함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의“링크”에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘에 의해 가변될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경 우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하는 링크 에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들을 포함하여 구성될 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노 드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다, 예를 들어, 최초 입력 노드로부터 거 리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어 의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의 될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미 할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의미할수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동 일할 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어 의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형 태의 신경망일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출 력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가 하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태 의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 출력의 오류를 최소 화하기 위한 것이다. 뉴럴 네트워크의 학습에서 반복적으로 학습 데이터를 뉴럴 네트워크에 입력시키고 학습 데 이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 뉴럴 네트워 크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데 이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴 럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨이 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류 가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전 파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이 트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학 습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습 률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regulaization), 학습의 과정에서 네트워크의 노드 일부를 생략하는 드롭아웃(dropout) 등의 방법이 적용될 수 있다."}
{"patent_id": "10-2023-0137889", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상, 첨부된 도면을 참조로 하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야의 통상의 기술 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며, 제한적이아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2023-0137889", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 시스템을 도시한 도면이다. 도 2는 본 발명의 다른 실시예에 따른 서버의 하드웨어 구성도이다. 도 3은 본 개시의 일 실시예에 관련된 네트워크 함수를 나타낸 개략도이다."}
