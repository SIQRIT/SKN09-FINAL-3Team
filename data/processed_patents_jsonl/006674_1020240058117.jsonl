{"patent_id": "10-2024-0058117", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0170405", "출원번호": "10-2024-0058117", "발명의 명칭": "메모리 계층 구조를 포함하는 TOE 기반 네트워크 인터페이스 장치 및 이의 동작 방법", "출원인": "망고부스트코리아 주식회사", "발명자": "정유진"}}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "TCP 이벤트를 스케줄링하고, 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 스케줄러;상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 적어도 하나의 TCP 컨트롤러; 및상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 TCP연산을 수행할지 여부를 판단하고, 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 메모리매니저를 포함하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 위치는 각각의 제1 메모리를 제어하도록 구성된 상기 적어도 하나의 TCP 컨트롤러 및 제2 메모리를 제어하도록 구성된 메모리 매니저를 포함하고;상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함하고;상기 제2 메모리는 DRAM(Dynamic Random Access Memory)을 포함하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 스케줄러는상기 위치에 대응하는 TCP 컨트롤러 또는 상기 메모리 매니저에게 상기 TCP 이벤트를 포워딩하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 스케줄러는각각의 TCP 컨트롤러가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수를 카운트하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 스케줄러는상기 스왑 요청 신호에 대한 응답으로, 상기 적어도 하나의 TCP 컨트롤러 중 제1 TCP 컨트롤러를 선택하고;상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하고;상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하고;스왑 인 완료 신호를 상기 제1 TCP 컨트롤러로부터 획득하고;상기 TCP 연결 정보의 위치를 상기 제1 TCP 컨트롤러로 변경하는 네트워크 인터페이스 장치.공개특허 10-2024-0170405-3-청구항 6 제5항에 있어서,상기 제1 TCP 컨트롤러는상기 TCP 연결 정보의 개수가 가장 작은 TCP 컨트롤러인 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 메모리 매니저는상기 스왑 인 요청 신호에 대한 응답으로, 상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하도록 구성된 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제4항에 있어서,상기 스케줄러는각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인 경우, 적어도 하나의 TCP 컨트롤러 중TCP 연결 정보를 상기 제2 메모리로 방출(evict)시킬 제2 TCP 컨트롤러를 선택하고;방출 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하고;상기 방출 요청 신호에 대한 응답으로, 방출시킬 제2 TCP 연결을 지시하는 정보를 상기 제2 TCP 컨트롤러로부터획득하고;상기 제2 TCP 연결에 대응하는 제2 TCP 연결 정보를 상기 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하고;상기 스왑 아웃 요청 신호에 대한 응답으로, 방출 완료 신호를 상기 메모리 매니저로부터 획득하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 제2 TCP 컨트롤러는상기 스왑 아웃 요청 신호에 대한 응답으로, 상기 메모리 매니저가 제어하는 제2 메모리로 상기 제2 TCP 연결정보를 이동하도록 구성된 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,상기 스케줄러는상기 방출 완료 신호에 대한 응답으로, 상기 제2 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하고;상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하고;스왑 인 완료 신호를 상기 제2 TCP 컨트롤러로부터 획득하고;상기 TCP 연결 정보의 위치를 상기 제2 TCP 컨트롤러로 변경하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,공개특허 10-2024-0170405-4-상기 스케줄러는상기 위치 참조 테이블에서 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치가 이동중임을 지시하는 정보인경우, 상기 TCP 이벤트를 펜딩 큐에 저장하고;소정 시간 이후에 상기 펜딩 큐에서 상기 TCP 이벤트를 추출하고;상기 추출된 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 상기 위치 참조 테이블에 기초하여 상기TCP 이벤트를 상기 위치에 포워딩하는 네트워크 인터페이스 장치."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "전자 장치의 동작 방법에 있어서,스케줄러에 의해 TCP 이벤트를 스케줄링하는 동작;상기 스케줄러에 의해 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 동작;적어도 하나의 TCP 컨트롤러 또는 메모리 매니저에 의해 상기 포워딩된 TCP 이벤트를 획득하는 동작;상기 적어도 하나의 TCP 컨트롤러에 의해 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 동작;상기 메모리 매니저에 의해 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하는 동작; 및상기 메모리 매니저에 의해 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 위치는 각각의 제1 메모리를 제어하도록 구성된 상기 적어도 하나의 TCP 컨트롤러 및 제2 메모리를 제어하도록 구성된 메모리 매니저를 포함하고;상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함하고;상기 제2 메모리는 DRAM(Dynamic Random Access Memory)을 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 스케줄러에 의해 상기 위치에 대응하는 TCP 컨트롤러 또는 상기 메모리 매니저에게 상기 TCP 이벤트를 포워딩하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,상기 스케줄러에 의해 각각의 TCP 컨트롤러가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수를 카운트하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 스케줄러에 의해 상기 스왑 요청 신호에 대한 응답으로, 상기 적어도 하나의 TCP 컨트롤러 중 제1 TCP 컨트롤러를 선택하는동작, 공개특허 10-2024-0170405-5-상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하는 동작, 상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하는 동작, 스왑 인 완료 신호를 상기 제1 TCP 컨트롤러로부터 획득하는 동작, 및상기 TCP 연결 정보의 위치를 상기 제1 TCP 컨트롤러로 변경하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 제1 TCP 컨트롤러는상기 TCP 연결 정보의 개수가 가장 작은 TCP 컨트롤러인 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서,상기 메모리 매니저에 의해 상기 스왑 인 요청 신호에 대한 응답으로, 상기 제1 TCP 컨트롤러가 제어하는 제1메모리로 상기 TCP 연결 정보를 이동하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항에 있어서,상기 스케줄러에 의해각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인 경우, 적어도 하나의 TCP 컨트롤러 중TCP 연결 정보를 상기 제2 메모리로 방출(evict)시킬 제2 TCP 컨트롤러를 선택하는 동작, 방출 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하는 동작,상기 방출 요청 신호에 대한 응답으로, 방출시킬 제2 TCP 연결을 지시하는 정보를 상기 제2 TCP 컨트롤러로부터획득하는 동작, 상기 제2 TCP 연결에 대응하는 제2 TCP 연결 정보를 상기 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하는 동작, 및상기 스왑 아웃 요청 신호에 대한 응답으로, 방출 완료 신호를 상기 메모리 매니저로부터 획득하는 동작을 더포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서,상기 제2 TCP 컨트롤러에 의해, 상기 스왑 아웃 요청 신호에 대한 응답으로, 상기 메모리 매니저가 제어하는 제2 메모리로 상기 제2 TCP 연결 정보를 이동하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제19항에 있어서,상기 스케줄러에 의해상기 방출 완료 신호에 대한 응답으로, 상기 제2 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하는동작,상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하는 동작,스왑 인 완료 신호를 상기 제2 TCP 컨트롤러로부터 획득하는 동작, 및공개특허 10-2024-0170405-6-상기 TCP 연결 정보의 위치를 상기 제2 TCP 컨트롤러로 변경하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제12항에 있어서,상기 스케줄러에 의해상기 위치 참조 테이블에서 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치가 이동중임을 지시하는 정보인경우, 상기 TCP 이벤트를 펜딩 큐에 저장하는 동작,소정 시간 이후에 상기 펜딩 큐에서 상기 TCP 이벤트를 추출하는 동작,상기 추출된 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP이벤트를 상기 위치에 포워딩하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "네트워크 인터페이스 장치 및 이의 동작 방법이 개시된다. 이를 위한 네트워크 인터페이스 장치는 TCP 이벤트를 스케줄링하고, 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 스케줄러; 상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이 벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 적어도 하나의 TCP 컨트롤러; 및 상기 스케줄러로 부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하고, 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 메모리 매니저를 포함할 수 있다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 네트워크 인터페이스에 관한 것으로, 특히 메모리 계층 구조를 포함하는 TOE(TCP/IP Offload Engine) 기반 네트워크 인터페이스 장치 및 이의 동작 방법에 관한 것이다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "빅데이터 또는 인공지능 적용 분야가 확대되고 OTT(Over-The-Top) 서비스 이용이 일상화되고 있다. 이에, 사용 자 단말, 웹 서버(web server), 웹 어플리케이션 서버(Web Application Server: WAS), 스토리지 서버(storage server), 데이터베이스 서버(database server) 등 네트워크를 통해 연결되는 다양한 장치의 데이터 처리 양 및 데이터 처리 속도 등에 있어 성능 향상이 급격히 요구되고 있다. 특히, 네트워크 장치는 초고속 네트워크 환경에서 TCP/IP 프로토콜(Transmission Control Protocol/Internet Protocol) 기반으로 데이터 통신을 수행함에 있어, 막대한 시스템 자원이 요구될 수 있다. 예를 들어, 웹 서버 가 네트워크를 통해 다수의 사용자 단말과 데이터 통신을 수행하는 경우, 웹 서버의 중앙 처리 장치(CPU: Central Processing Unit)가 TCP/IP 연산을 수행하는데 상당한 부하가 야기될 수 있다. 이는 웹 서버 전체의 성 능 저하 및 통신 지연을 야기할 수 있다. 이에, 네트워크 장치에서 CPU 부하(load)를 분산시키는 다양한 기술이 등장하였는데, 이 중 TOE 기술은 기존의 TCP/IP에서 소프트웨어로 구현되었던 전송 계층(Transport layer)과 네트워크 계층(Network layer)을 별도의 하드웨어(예. Network Interface Card)로 구현함으로써 CPU 부하를 오프로드(offload)하는 기술이다. 고속 네 트워크 환경을 구현하기 위한 TOE 기술은 고성능, 다수 연결 지원 등 효율적이고 유연한 하드웨어 또는 소프트 웨어 설계가 요구된다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 메모리 계층 구조를 포함하는 TOE 기반 네트워크 인터페이스 장치 및 이의 동작 방법을 제공한다. 구 체적으로 본 개시의 다양한 실시예들은 TCP 연결 정보를 작지만 빠른 메모리와 느리지만 대용량인 메모리에 분 산시켜 유연하고 효율적으로 관리할 수 있는, 메모리 계층 구조를 포함하는 TOE 기반 네트워크 인터페이스 장치 및 이의 동작 방법에 관한 것이다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 기술적 과제를 해결하기 위하여 본 개시의 일 실시예에 따르면 네트워크 인터페이스 장치는 TCP 이벤트 를 스케줄링하고, 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 스케줄러; 상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 적어도 하나의 TCP 컨트롤러; 및 상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하고, 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤 러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 메모리 매니저 를 포함할 수 있다. 또한, 본 개시의 일 실시예에 따르면 전자 장치의 동작 방법은 스케줄러에 의해 TCP 이벤트를 스케줄링하는 동 작; 상기 스케줄러에 의해 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 동작; 적어도 하나의 TCP 컨트롤러 또는 메모리 매니저에 의해 상기 포워딩된 TCP 이벤트를 획득하는 동작; 상기 적어도 하나의 TCP 컨트롤러에 의해 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 동작; 상기 메모리 매니저에 의해 상기 TCP 이벤트에 대 응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하는 동작; 및 상기 메모리 매니저에 의해 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 동작을 포함할 수 있다. 또한, 본 개시의 일 실시예에 따르면 상기 방법을 수행하기 위한 프로그램이 기록된 컴퓨터로 읽을 수 있는 기 록매체를 포함한다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시예들에 따르면, CPU로부터 TCP/IP 연산을 오프로드하는 TOE 기반 네트워크 인터페이스 장 치에서, TCP 연결 정보를 여러 메모리에 분산시켜 유연하고 효율적으로 관리할 수 있는 메모리 계층 구조를 지 원할 수 있다. 본 개시의 다양한 실시예들에 따르면, 작지만 빠른 메모리(예. SRAM)(이하 제1 메모리)와 느리지만 대용량인 메 모리(예. DRAM)(이하 제2 메모리)의 장점을 효율적으로 활용할 수 있는 메모리 계층 구조에 기반하여, TCP 연산 수행이 필요한 TCP 연결 정보는 작지만 빠른 제1 메모리에 저장하고 당장 TCP 연산 수행이 필요하지 않은 TCP 연결 정보는 느리지만 대용량인 제2 메모리에 저장할 수 있다. 따라서, 기존에 고성능을 위해 TCP 연결 정보를 SRAM에만 저장하는 경우 SRAM 크기 제한으로 인해 많은 수의 TCP 연결 정보를 지원할 수 없었던 한계를 극복함 으로써, 큰 메모리로 많은 수의 TCP 연결을 지원하면서도 TCP/IP 연산을 고성능으로 처리할 수 있다. 본 개시의 다양한 실시예들에 따르면, 네트워크 인터페이스 장치가 TCP 연산 수행을 위해 상기 제1 메모리와 상 기 제2 메모리 간에 TCP 연결 정보를 스왑 인 또는 스왑 아웃 중일 경우, 대응하는 TCP 이벤트를 대응하는 위치 (예. TCP 컨트롤러 또는 메모리 매니저)로 포워딩하는 것을 펜딩 큐를 활용하여 소정 시간 지연시킬 수 있다. 이를 통해, TCP 연결 정보가 메모리들 간에 위치 이동중인 경우, 대응하는 TCP 이벤트가 잘못된 위치로 라우팅 되는 것을 방지할 수 있고 이로 인한 성능 저하를 예방할 수 있다. 또한, 본 개시의 다양한 실시예들에 따르면, 네트워크 인터페이스 장치는 위치 이동중인 TCP 연결 정보에 대응하는 TCP 이벤트가 펜딩 큐에 저장되어 있는 동안, 위치 이동 중이지 않은 다음 TCP 이벤트를 스케줄링하여 처리할 수 있으므로 메모리 계층 구조 하에서도 성능을 향상시킬 수 있다. 본 개시의 예시적 실시예들에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 아니하며, 언급되지"}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아니한 다른 효과들은 이하의 기재로부터 본 개시의 예시적 실시예들이 속하는 기술분야에서 통상의 지식을 가 진 자에게 명확하게 도출되고 이해될 수 있다. 즉, 본 개시의 예시적 실시예들을 실시함에 따른 의도하지 아니"}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 3, "content": "한 효과들 역시 본 개시의 예시적 실시예들로부터 당해 기술분야의 통상의 지식을 가진 자에 의해 도출될 수 있 다."}
{"patent_id": "10-2024-0058117", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 개시의 실시예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 개시는 여러 가지 상이한 형태로 구현될 수 있으 며 여기에서 설명하는 실시예에 한정되지 않는다. 도면의 설명과 관련하여, 동일하거나 유사한 구성요소에 대해 서는 동일하거나 유사한 참조 부호가 사용될 수 있다. 또한, 도면 및 관련된 설명에서는, 잘 알려진 기능 및 구 성에 대한 설명이 명확성과 간결성을 위해 생략될 수 있다. 도 1은 본 개시의 일 실시예에 따른 네트워크 인터페이스 장치의 개략적인 블록도이다. 도 1을 참조하면, 네트워크 인터페이스 장치는 스케줄러, 메모리 매니저 및 적어도 하나의 TCP 컨트롤러(130, 140, 150)를 포함할 수 있다. 일 실시예에 따르면, 네트워크 인터페이스 장치는 TCP/IP 이외에 ICMP(Internet Control Message Protocol), ARP(Address Resolution Protocol) 등 다른 네트워크 프로토콜을 지원하기 위한 별도의 모듈을 더 포함할 수 있다. 네트워크 인터페이스 장치는 도시된 구성요소 외에 추가적인 구성요소를 포함하거나, 도 시된 구성요소 중 적어도 하나를 생략할 수 있다. 일 실시예에 따르면, 스케줄러, 메모리 매니저 및 적어도 하나의 TCP 컨트롤러(130, 140, 150)는 하 드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 스케줄러, 메모리 매니저 및 적어도 하나의 TCP 컨트롤러(130, 140, 150)는 일체로 부품을 구성하거나, 또는 하나 이상의 기능을 수행하는 부품의 최소 단 위 또는 그 일부가 될 수 있다. 일 실시예에 따르면, 스케줄러, 메모리 매니저 및 적어도 하나의 TCP 컨트롤러(130, 140, 150)는 FPGA(field-programmable gate array) 또는 ASIC(application-specific integrated circuit) 등 다양한 집적 회로 형태로 구현될 수 있다. 일 실시예에 따르면, 스케줄러는 스케줄러 코어 로직, 위치 참조 테이블 및 펜딩 큐를 포 함할 수 있다. 스케줄러 코어 로직은 위치 참조 테이블 및 펜딩 큐에 TCP 연결 정보 및 TCP 이 벤트를 각각 저장하거나 제어하는 등 스케줄러의 각종 동작(operation)을 수행할 수 있다. 따라서, 일 실 시예에 따르면, 스케줄러에 의한 동작 수행은 스케줄러 코어 로직에 의한 동작 수행과 상호 호환적으 로 개시될 수 있다. 일 실시예에 따르면, 메모리 매니저는 메모리 매니저 코어 로직 및 제2 메모리를 포함할 수 있 다. 제2 메모리는 DRAM (Dynamic Random Access Memory) 및 HBM (High Bandwidth Memory)을 포함할 수 있 으나, 이에 제한되지 않고 다양한 타입의 대용량 메모리를 포함할 수 있다. 메모리 매니저 코어 로직은 제 2 메모리에 TCP 연결 정보의 저장 및 제어 등 메모리 매니저의 각종 동작(operation)을 수행할 수 있 다. 따라서, 일 실시예에 따르면, 메모리 매니저에 의한 동작 수행은 메모리 매니저 코어 로직에 의 한 동작 수행과 상호 호환적으로 개시될 수 있다. 일 실시예에 따르면, 적어도 하나의 TCP 컨트롤러(130, 140, 150)는 각각 TCP 컨트롤러 코어 로직 및 제1 메모리를 포함할 수 있다. 제1 메모리는 SRAM(Static Random Access Memory)을 포함할 수 있으나, 이에 제한되지 않고 다양한 타입의 고속 또는 고성능 메모리를 포함할 수 있다. 본 개시에서, TCP 컨트롤러 (130, 140, 150)는 플로우 프로세싱 코어(FPC: Flow Processing Core)와 상호 호환적으로 개시될 수 있다. 각 각의 TCP 컨트롤러 코어 로직은 제1 메모리에 TCP 연결 정보의 저장 및 제어 등 TCP 컨트롤러(130, 140, 150)의 각종 동작(operation)을 수행할 수 있다. 따라서, 일 실시예에 따르면, TCP 컨트롤러(130, 140, 150)에 의한 동작 수행은 각각의 TCP 컨트롤러 코어 로직에 의한 동작 수행과 상호 호환적으로 개시될 수있다. 본 개시에서, TCP 컨트롤러 코어 로직은 FPC 코어 로직과 상호 호환적으로 개시될 수 있다. 일 실시예에 따르면, 네트워크 인터페이스 장치는 TCP 연결 상태를 TCP 연결 정보(또는 TCB: Transmission Control Block)라는 구조체에 저장할 수 있다. 네트워크 인터페이스 장치는 TCP 이벤트가 발생하면 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 상기 TCP 연결 정보는 이하 표 1을 참 조하여 상세히 후술한다. 상기 TCP 이벤트는 user call 이벤트, 수신 이벤트 및 타이머 이벤트를 포함할 수 있 다. 일 실시예에 따르면, 네트워크 인터페이스 장치는 생성 또는 업데이트된 TCP 연결 정보에 기초하여 TCP 연 산 수행이 필요한지 여부를 판단할 수 있다. 예를 들어, 네트워크 인터페이스 장치는 생성 또는 업데이트 된 TCP 연결 정보에 기초하여, 수신 장치(receiver)에서 TCP ACK 또는 TCP 패킷을 수신할 수 있는 상황으로 판 단한 경우 TCP 연산을 바로 수행할 필요가 있다고 판단할 수 있지만, 수신 장치(receiver)에서 수신할 수 없는 상황으로 판단한 경우 TCP 연산을 바로 수행하지 않아도 된다고 판단할 수 있다. 일 실시예에 따르면, 상기 TCP 연산은 흐름 제어(flow control) 연산 및 폭주 제어(congestion control) 연산을 포함할 수 있으나, 이에 제한 되지 않는다. 예를 들어, 네트워크 인터페이스 장치는 업데이트된 TCP 연결 정보 중 SND.CWND, SND.SSTHRESH, countDupAck 등의 정보를 이용하여 congestion window 값을 업데이트 하는 등 폭주 제어 연산을 수행할 수 있다. 네트워크 인터페이스 장치는 TCP 연산 수행 결과를 반영하여 TCP 연결 정보를 업데이트할 수 있다. 일 실시예에 따르면, 네트워크 인터페이스 장치는 TCP 연산이 빈번하게 수행될 필요가 있는 TCP 연결 정보 를 메모리 엑세스 속도가 빠른 제1 메모리에 저장하고, 그 외의 TCP 연결 정보를 엑세스 속도는 상대적으 로 느리더라도 대용량인 제2 메모리에 저장할 수 있다. 일 실시예에 따르면, 제1 메모리는 TCP 컨트롤러(130, 140, 150) 내에 각각 구비될 수 있다. TCP 컨트롤러 (130, 140, 150)는 자신의 제1 메모리에 저장된 TCP 연결 정보에 대응하는 TCP 이벤트를 스케줄러로 부터 획득할 수 있고, 상기 TCP 연결 정보에 대응하는 TCP 연산을 수행하는 경우, 상기 TCP 연결 정보를 업데이 트할 수 있다. 일 실시예에 따르면, 제2 메모리는 메모리 매니저 내에 구비될 수 있다. 메모리 매니저는 제2 메모리에 저장된 TCP 연결 정보에 대응하는 TCP 이벤트를 스케줄러로부터 획득할 수 있고, 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 업데이트할 수 있다. 메모리 매니저는 상기 업데이트된 TCP 연결 정보 에 기초하여, 상기 TCP 이벤트에 대응하는 TCP 연결에 대해 TCP 연산을 수행할 상황인지 여부를 판단할 수 있다. TCP 연산을 수행할 상황이라고 판단한 경우, 메모리 매니저는 대응하는 TCP 연결 정보를 제1 메모리 로 이동하는 절차를 개시할 수 있다. TCP 연결 정보가 제1 메모리로 이동된 후, 이동된 제1 메모리 를 제어하는 TCP 컨트롤러는 TCP 연산을 수행하고, TCP 연산 결과에 기초하여 TCP 연결 정보를 업데이트할 수 있다. 상기와 같이, 네트워크 인터페이스 장치는 TCP 연결 정보를 작지만 빠른 제1 메모리와 느리지만 대용 량인 제2 메모리에 분산시켜 저장 및 제어하는 메모리 계층 구조를 포함할 수 있다. 일 실시예에 따르면, 작지만 빠른 제1 메모리와 느리지만 대용량인 제2 메모리의 장점을 효율적으로 활용할 수 있는 메모 리 계층 구조에 기반하여, 네트워크 인터페이스 장치는 TCP 연산 수행이 필요한 TCP 연결 정보는 작지만 빠른 제1 메모리에 저장하고 당장 TCP 연산 수행이 필요하지 않은 TCP 연결 정보는 느리지만 대용량인 제2 메모리에 저장할 수 있다. 따라서, 일 실시예에 따르면, 기존에 고성능을 위해 TCP 연결 정보를 제1 메모 리에만 저장하는 경우 제1 메모리 크기 제한으로 인해 많은 수의 TCP 연결 정보를 지원할 수 없는 한 계를 극복함으로써, 큰 메모리로 많은 수의 TCP 연결을 지원하면서도 TCP/IP 연산을 고성능으로 처리할 수 있다. 일 실시예에 따르면, 스케줄러는 TCP 이벤트를 스케줄링할 때, 대응하는 TCP 연결 정보가 저장된 위치에 대응하는 TCP 컨트롤러 또는 메모리 매니저로 TCP 이벤트를 포워딩할 수 있다. 이를 위해, 스케줄러는 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블(Location LUT)을 포함할 수 있다. 스케줄러는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 대응하는 TCP 연결 정보가 저장된 위치 로 포워딩할 수 있다. 스케줄러는 제1 메모리 및 제2 메모리 간에 TCP 연결 정보의 위치 이동을 관장하고, TCP 연결 정보의 현재 위치를 위치 참조 테이블에 저장할 수 있다. 위치 참조 테이블 및 이에 기반한 스케줄러의 동작은 이하 도 2 내지 도 10을 참조하여 후술한다. 스케줄러로부터 TCP 이벤트를 획득한 TCP 컨트롤러 또는 메모리 매니저는 상술한 바와 같이 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 업데이트할 수 있다. 일 실시예에 따르면, 스케줄러는 TCP 연산 수행을 위해 제1 메모리 및 제2 메모리 간에 TCP 연 결 정보가 위치 이동 중일 경우, 대응하는 TCP 이벤트를 펜딩 큐에 저장할 수 있다. 펜딩 큐에 입력 된 TCP 이벤트는 소정 지연(delay) 후 출력될 수 있다. 소정 지연 이후에 해당 TCP 이벤트가 펜딩 큐에서 출력되는 경우, 스케줄러는 출력된 TCP 이벤트에 대응하는 TCP 연결 정보가 저장된 위치로 상기 TCP 이벤 트를 포워딩할 수 있다. 만약 아직도 TCP 연결 정보가 위치 이동 중이라면, 스케줄러는 상기 TCP 이벤트를 펜딩 큐에 다시 저장할 수 있다. 일 실시예에 따르면, TCP 연산 수행을 위해 TCP 연결 정보가 위치 이동 중일 경우, 펜딩 큐를 활용하여 TCP 이벤트 포워딩을 소정 시간 지연시킴으로써 TCP 이벤트가 잘못된 위치로 라우팅되는 것을 방지할 수 있고, 이로 인한 성능 저하를 예방할 수 있다. 또한, 위치 이동 중인 TCP 연결 정보에 대응하는 TCP 이벤트가 펜딩 큐 에 저장되어 있는 동안, 위치 이동 중이지 않은 다음 TCP 이벤트를 스케줄링하여 처리할 수 있으므로 메모 리 계층 구조 하에서도 성능을 향상시킬 수 있다. 도 2는 본 개시의 일 실시예에 따른 네트워크 인터페이스 장치의 각 블록들의 동작을 개략적으로 도시한다. 일 실시예에 따르면, 도 2의 네트워크 인터페이스 장치는 도 1의 네트워크 인터페이스 장치에 상응하 는 전자 장치일 수 있다. 도 2에 설명되는 네트워크 인터페이스 장치의 동작에 있어서, 도 1에서 설명된 부분과 중복되는 부분은 생략될 수 있다. 도 2를 참조하면, 네트워크 인터페이스 장치는 스케줄러, 메모리 매니저 및 적어도 하나의 FPC(230, 240, 250)를 포함할 수 있다. 일 실시예에 따르면, 적어도 하나의 FPC(230, 240, 250)는 도 1의 적어 도 하나의 TCP 컨트롤러(130, 140, 150)에 대응되며 상호 호환적으로 개시될 수 있다. 일 실시예에 따르면, 스케줄러는 스케줄러 코어 로직, 위치 참조 테이블 및 펜딩 큐를 포 함할 수 있다. 스케줄러 코어 로직은 위치 참조 테이블 및 펜딩 큐에 TCP 연결 정보 및 TCP 이 벤트를 각각 저장하거나 제어하는 등 스케줄러의 각종 동작(operation)을 수행할 수 있다. 따라서, 일 실 시예에 따르면, 스케줄러에 의한 동작 수행은 스케줄러 코어 로직에 의한 동작 수행과 상호 호환적으 로 개시될 수 있다. 일 실시예에 따르면, 메모리 매니저는 메모리 매니저 코어 로직 및 제2 메모리를 포함할 수 있 다. 제2 메모리는 DRAM (Dynamic Random Access Memory) 및 HBM (High Bandwidth Memory)을 포함할 수 있 으나, 이에 제한되지 않고 다양한 타입의 대용량 메모리를 포함할 수 있다. 메모리 매니저 코어 로직은 제 2 메모리에 TCP 연결 정보의 저장 및 제어 등 메모리 매니저의 각종 동작(operation)을 수행할 수 있 다. 따라서, 일 실시예에 따르면, 메모리 매니저에 의한 동작 수행은 메모리 매니저 코어 로직에 의 한 동작 수행과 상호 호환적으로 개시될 수 있다. 일 실시예에 따르면, 적어도 하나의 FPC(230, 240, 250)는 각각 FPC 코어 로직 및 제1 메모리를 포 함할 수 있다. 제1 메모리는 SRAM(Static Random Access Memory)을 포함할 수 있으나, 이에 제한되지 않 고 다양한 타입의 고속 또는 고성능 메모리를 포함할 수 있다. 각각의 FPC 코어 로직은 각각의 제1 메모리에 TCP 연결 정보의 저장 및 제어 등 FPC(230, 240, 250)의 각종 동작(operation)을 수행할 수 있다. 따라서, 일 실시예에 따르면, FPC(230, 240, 250)에 의한 동작 수행은 각각의 FPC 코어 로직에 의한 동작 수행과 상호 호환 적으로 개시될 수 있다. 일 실시예에 따르면, 메모리 매니저는 자신이 제어하는 제2 메모리에 TCP 연결 상태를 지시하는 TCP 연결 정보를 저장할 수 있다. 메모리 매니저는 TCP 이벤트가 발생하면 스케줄러로부터 상기 TCP 이벤 트를 획득할 수 있고, 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 상기 TCP 연결 정보는 이하 표 1을 참조하여 상세히 후술한다. 상기 TCP 이벤트는 user call 이벤트, 수신 이벤트 및 타 이머 이벤트를 포함할 수 있다. 일 실시예에 따르면, 메모리 매니저는 생성하거나 업데이트된 TCP 연결 정보에 기초하여 TCP 연산 수행이 필요한지 여부를 판단할 수 있다. TCP 연산 수행이 필요하다고 판단된 경우, 메모리 매니저는 적어도 하나 의 FPC(230, 240, 250) 중 하나의 FPC로 대응하는 TCP 연결 정보를 이동하는 절차를 개시할 수 있다. 메모리 매 니저는 스왑 요청 신호를 스케줄러에게 전송함으로써 상기 이동 절차를 개시할 수 있다.일 실시예에 따르면, 적어도 하나의 FPC(230, 240, 250)는 자신이 제어하는 제1 메모리에 TCP 연결 상태를 지시 하는 TCP 연결 정보를 저장할 수 있다. 상기 제1 메모리에 저장된 TCP 연결 정보는 상술한 바와 같이 TCP 연산 수행을 위해, 메모리 매니저의 제어에 의해 제2 메모리로부터 이동(스왑 인)된 적어도 하나의 TCP 연 결 정보를 포함할 수 있다. 일 실시예에 따르면, 제2 메모리는 적어도 하나의 FPC(230, 240, 250)로 이동 된 TCP 연결 정보를 유지할 수 있다. 따라서, 각각의 제1 메모리에 저장된 적어도 하나의 TCP 연결 정보는 제2 메모리에 저장된 적어도 하나의 TCP 연결 정보의 일부일 수 있다. 적어도 하나의 FPC(230, 240, 250)는 스케줄러로부터 TCP 이벤트를 획득할 수 있고, 상기 TCP 이벤트에 대 응하는 TCP 연결 정보를 업데이트할 수 있다. 상기 TCP 연결 정보는 이하 표 1을 참조하여 상세히 후술한다. 상 기 TCP 이벤트는 user call 이벤트, 수신 이벤트 및 타이머 이벤트를 포함할 수 있다. 적어도 하나의 FPC(230, 240, 250)는 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어할 수 있다. 적어도 하나의 FPC(230, 240, 250)는 TCP 연산 수행 결과를 반영하여 상기 TCP 연결 정보를 업데이트할 수 있다. 이하 표 1을 참조하면, 상기 TCP 연결 정보는 Setting 카테고리 정보, TX 카테고리 정보, 폭주 제어(congestion control) 카테고리 정보 및 RX 카테고리 정보를 포함할 수 있으나 이에 제한되지 않는다. 표 1에 예시된 TCP 연 결 정보에 정보가 추가되거나 삭제될 수 있고, Category 및 Entry를 다양하게 구성 및 표현할 수 있음은 당업자 에게 이해될 것이다. 표 1 Category Entry Setting Local IP Local Port Remote IP Remote Port recvEce sendEce TX SND. APP SND.NXT SND.UNA SND.WND countDupAck Timeout needProbe Congestion ControlfastRetransmit sendCwr SND.CWND SND.SSTHRESH RX RCV.NXT RCV.APP 일 실시예에 따르면, 상기 Setting 카테고리 정보는 TCP 연결을 식별하기 위한 정보를 포함할 수 있다. 상기 Setting 카테고리 정보는 Local IP, Local Port, Remote IP, Remote Port, recvEce 및 sendEce 정보를 포함할 수 있으나 이에 제한되지 않는다. 예를 들어, Local/Remote IP/Port 정보는 TCP 연결의 로컬 endpoint와 리모 트 endpoint의 IP와 Port를 각각 지시할 수 있다. recvEce 및 sendEce 정보는 명시적 혼잡 알림(Explicit Congestion Notification)을 지시하는 ECN-Echo 비트를 리모트로부터 수신했는지 여부, 리모트로 송신했는지 여 부를 각각 지시할 수 있다. 일 실시예에 따르면, 상기 TX 카테고리 정보는 SND.APP, SND.NXT, SND.UNA, SND.WND, countDupAck, Timeout 및 needProbe를 포함할 수 있으나 이에 제한되지 않는다. 예를 들어, SND.APP 정보는 애플리케이션이 다음에 송신할 시퀀스 넘버(sequence number)를 지시할 수 있다. SND.NXT 정보는 네트워 크 인터페이스 장치가 다음에 송신할 시퀀스 넘버를 지시할 수 있다. SND.UNA 정보는 리모트로부터 다음에 수신해야 할 acknowledge number를 지시할 수 있다. SND.WND 정보는 네트워크 인터페이스 장치가 송신할 수 있는 송신 윈도우(send window) 크기, 즉 TCP 연결에 대해 임의의 시점에서 전송할 수 있는 데이터의 크기를 지시할 수 있다. countDupAck 정보는 중복(duplicate) ACK의 개수를 지시할 수 있다. Timeout 정보는retransmit timeout의 발생 여부를 지시할 수 있다. needProbe 정보는 probe packet 필요 여부를 지시할 수 있 다. 일 실시예에 따르면, RX 카테고리 정보는 RCV.NXT 및 RX.APP를 포함할 수 있으나 이에 제한되지 않는다. 예를 들어, RX.APP 정보는 애플리케이션이 다음에 수신할 시퀀스 넘버를 지시할 수 있다. RCV.NXT 정보는 네트워크 인터페이스 장치가 다음에 수신할 시퀀스 넘버를 지시할 수 있다. 일 실시예에 따르면, 상기 폭주 제어(congestion control) 카테고리 정보는 폭주 제어 연산을 수행하기 위한 정 보를 포함할 수 있다. 상기 폭주 제어(congestion control) 카테고리 정보는 fastRetransmit, sendCwr, SND.CWND 및 SND.SSTHRESH를 포함할 수 있으나 이에 제한되지 않는다. 예를 들어, fastRetransmit 정보는 타이 머가 종료되기 전이라도 손실된 패킷을 빠르게 재전송할 것을 지시할 수 있다. SND.CWND는 TCP 연결에 대한 혼 잡 제어 윈도우의 크기를 지시할 수 있다. sendCwr 정보는 혼잡 제어 윈도우 크기의 감축을 지시할 수 있다. SND.SSTHRESH는 폭주 제어 알고리즘의 슬로우 스타트(slow start) 임계값을 지시할 수 있다. 일 실시예에 따르면, 스케줄러는 TCP 이벤트를 스케줄링할 수 있다. 스케줄러는 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩할 수 있다. 상기 위치는 각각의 제1 메모리를 제어하도록 구성된 적어도 하나의 FPC(230, 240, 250) 및 제2 메모리를 제어하도록 구성된 메모리 매니저를 포함할 수 있다. 따라서, 스케줄러는 상기 위 치에 대응하는 TCP 컨트롤러 또는 메모리 매니저에게 상기 TCP 이벤트를 포워딩할 수 있다. 일 실시예에 따르면, 적어도 하나의 FPC(230, 240, 250)는 스케줄러로부터 상기 TCP 이벤트를 획득할 수 있다. 적어도 하나의 FPC(230, 240, 250)는 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 업데이트할 수 있다. 적어도 하나의 FPC(230, 240, 250)는 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어할 수 있다. 적어도 하나의 FPC(230, 240, 250)는 TCP 연산 수행 결과를 반영하여 TCP 연결 정보를 업데이트할 수 있 다. 일 실시예에 따르면, 메모리 매니저는 스케줄러로부터 상기 TCP 이벤트를 획득할 수 있다. 메모리 매 니저는 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 메모리 매니저(22 0)는 생성 또는 업데이트된 TCP 연결 정보에 기초하여, TCP 연산을 수행할지 여부를 판단할 수 있다. 예를 들어, 메모리 매니저는 업데이트된 TCP 연결 정보에 기초하여, 수신 장치(receiver)에서 TCP ACK 또는 TCP 패킷을 수신할 수 있는 상황으로 판단한 경우 TCP 연산을 바로 수행할 필요가 있다고 판단할 수 있지만, 수신 장치(receiver)에서 TCP ACK 또는 TCP 패킷을 수신할 수 없는 상황으로 판단한 경우 TCP 연산을 바로 수행하지 않아도 된다고 판단할 수 있다. 메모리 매니저는 TCP 연산을 수행할 필요가 있다고 판단한 경우, 상기 적 어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신 호를 스케줄러에게 전송할 수 있다. 일 실시예에 따르면, 스케줄러는 각각의 FPC가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개 수를 카운트할 수 있다. 스케줄러는 메모리 매니저로부터 획득한 상기 스왑 요청 신호에 대한 응답으 로, 상기 적어도 하나의 FPC 중 하나의 FPC(예. FPC 1)를 선택할 수 있다. 예를 들어, 스케줄러는 적어도 하나의 FPC 중, 제1 메모리에 저장된 TCP 연결 정보의 개수가 가장 작은 FPC 1을 선택할 수 있다. 이외에도, 선 택 알고리즘이 랜덤 선택, 라운드 로빈 선택 및 FPC 번호에 기초한 선택(예. 가장 작은 번호) 등 제한되지 않은 다양한 방법을 포함할 수 있음은 당업자에게 이해될 것이다. 일 실시예에 따르면, 스케줄러는 상기 선택된 FPC(예. FPC 1)가 제어하는 제1 메모리로 상기 TCP 연결 정 보를 이동하도록 요청하는 스왑 인 요청 신호를 메모리 매니저에게 전송할 수 있다. 스케줄러는 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경할 수 있다. 일 실시예에 따르면, 메모리 매니저는 상기 스왑 인 요청 신호에 대한 응답으로, 상기 선택된 FPC(예. FPC 1)가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하도록 구성될 수 있다. 일 실시예에 따르면, 상기 TCP 연결 정보가 제1 메모리로 이동이 완료된 경우, 상기 선택된 FPC(예. FPC 1)는 스왑 인 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따르면, 스케줄러는 상기 스왑 인 완료 신호를 FPC 1으로부터 획득할 수 있다. 스케줄러(21 0)는 상기 TCP 연결 정보의 위치를 상기 FPC 1으로 변경할 수 있다.도 3은 본 개시의 일 실시예에 따른 TCP 연결 정보를 메모리 매니저로부터 FPC로 이동(스왑 인)하는 개략적인 흐름도이다. 일 실시예에 따르면, 도 3의 스케줄러, FPC 1 및 메모리 매니저는 도 1의 스케줄러, TCP 컨트롤러 1 및 메모리 매니저에 각각 상응할 수 있다. 도 3에 설명되는 스케줄러, FPC 1 및 메모리 매니저의 동작에 있어서, 도 1 및 도 2에서 설명된 부분과 중복되는 부분은 생략될 수 있다. 도 3에 도시되는 동작들의 일부가 생략될 수 있으며, 도 3에 도시되지 않은 동작이 추가될 수 있다. 일 실시예에 따르면, 위치 참조 테이블은 TCP 연결 Y에 대응하는 TCP 연결 정보가, 메모리 매니저에 의해 제어되는 제2 메모리에 저장되었음을 지시하는 위치 정보를 포함할 수 있다. 제2 메모리는 DRAM (Dynamic Random Access Memory) 및 HBM (High Bandwidth Memory)을 포함할 수 있으나, 이에 제한되지 않고 다 양한 타입의 대용량 메모리를 포함할 수 있다. 일 실시예에 따르면, 스케줄러는 TCP 이벤트를 스케줄링할 수 있다. 일 실시예에 따르면 동작 310에서, 스케줄러는 TCP 연결 Y에 대응하는 TCP 이벤트에 대해, 위치 참조 테이 블에 기초하여 상기 TCP 이벤트를 메모리 매니저에게 포워딩할 수 있다. 일 실시예에 따르면, 메모리 매니저는 상기 포워딩된 TCP 이벤트를 획득할 수 있고, TCP 연결 Y에 대응하 는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 일 실시예에 따르면 동작 320에서, 메모리 매니저는 상기 TCP 이벤트에 대응하는 TCP 연결 Y에 대해, 생성 하거나 업데이트된 TCP 연결 정보에 기초하여 TCP 연산을 수행할지 여부를 판단할 수 있다. TCP 연산 수행이 필요하다고 판단된 경우, 일 실시예에 따르면 동작 330에서, 메모리 매니저는 적어도 하 나의 FPC 중 하나의 FPC에게 TCP 연결 Y에 대응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 스 케줄러에게 전송할 수 있다. 일 실시예에 따르면 동작 340에서, 스케줄러는 메모리 매니저로부터 획득한 상기 스왑 요청 신호에 대한 응답으로, FPC 1을 선택할 수 있다. 예를 들어, 스케줄러는 적어도 하나의 FPC 중, 제1 메모리 에 저장된 TCP 연결 정보의 개수가 가장 작은 FPC 1을 선택할 수 있다. 상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함할 수 있으나, 이에 제한되지 않고 다양한 타입의 고속 또는 고성능 메모리를 포 함할 수 있다. 이외에도, 선택 알고리즘이 랜덤 선택, 라운드 로빈 선택 및 FPC 번호에 기초한 선택(예. 가장 작은 번호) 등 제한되지 않은 다양한 방법을 포함할 수 있음은 당업자에게 이해될 것이다. 일 실시예에 따르면 동작 350에서, 스케줄러는 상기 선택된 FPC 1이 제어하는 제1 메모리로 TCP 연결 Y에 대응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 메모리 매니저에게 전송할 수 있다. 스케줄러는 위치 참조 테이블에서 TCP 연결 Y에 대응하는 TCP 연결 정보의 위치를 이동중임 을 지시하는 정보(예. 'Moving')로 변경할 수 있다. 일 실시예에 따르면, 스케줄러는 다음 수행하는 TCP 이벤트가 TCP 연결 Y에 대한 TCP 이벤트인 경우, 해당 TCP 이벤트를 펜딩 큐에 저장할 수 있다. 펜딩 큐에 입력된 상기 TCP 이벤트는 소정 지연(delay) 후 출력될 수 있다. 소정 지연 이후에 상기 TCP 이벤트가 펜딩 큐에서 출력되는 경우, 스케줄러는 출력 된 TCP 이벤트에 대응하는 TCP 연결 정보가 저장된 위치로 상기 TCP 이벤트를 포워딩할 수 있다. 만약 아직도 TCP 연결 Y가 위치 이동 중이라면, 스케줄러는 상기 TCP 이벤트를 펜딩 큐에 다시 저장할 수 있다. 일 실시예에 따르면 동작 360에서, 메모리 매니저는 상기 스왑 인 요청 신호에 대한 응답으로, FPC 1(23 0)이 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동(스왑 인)할 수 있다. 일 실시예에 따르면 동작 370에서, 상기 TCP 연결 정보가 제1 메모리로 이동이 완료된 경우, FPC 1은 스왑 인 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따르면, 스케줄러는 TCP 연결 Y에 대응하는 TCP 연결 정보의 위치를 FPC1으로 변경할 수 있다. 도 4는 본 개시의 일 실시예에 따른 위치 참조 테이블에 기초하여 TCP 이벤트를 메모리 매니저로 포워딩하는 개 략적인 흐름도이다. 이하에서 도 4 내지 도 9를 참조하여 개시하는 스케줄러, FPC(230, 240, 250) 및 메모리 매니저는 도 1의 스케줄러, TCP 컨트롤러(130, 140, 150) 및 메모리 매니저에 각각 상응할 수 있다. 도 4 내지 도 9를 참조하여 개시하는 DRAM은 상술한 제2 메모리의 일 예시로 도시된 것일 뿐이며, 상기 제2 메모리는 DRAM 및 HBM을 포함할 수 있으나, 이에 제한되지 않고 다양한 타입의 대용량 메모리를 포함할 수 있다. 도 4 내지 도 9를 참조하여 개시하는 SRAM은 상술한 제1 메모리의 일 예시로 도시된 것일 뿐이며, 상기 제1 메모리는 SRAM에 제한되지 않고 다양한 타입의 고속 또는 고성능 메모리를 포함할 수 있다. 도 4 내지 도 9를 참조하여 개시하는 스케줄러, FPC(230, 240, 250) 및 메모리 매니저의 동작에 있어서, 도 1 내지 도 3에서 설명된 부분 과 중복되는 부분은 생략될 수 있다. 도 4 내지 도 9에 도시되는 동작들의 일부가 생략될 수 있으며, 도 4 내지 도 9에 도시되지 않은 동작이 추가될 수 있다. 일 실시예에 따르면 동작 410에서, 스케줄러는 TCP 이벤트를 스케줄링할 수 있다. 예를 들면, 스케줄러 는 상기 스케줄링 동작에 기초하여 TCP 연결 2에 대한 TCP 이벤트를 처리할 수 있다. 구체적으로, 스케줄 러는 위치 참조 테이블에서 TCP 연결 2에 대응하는 TCP 연결 정보가 저장된 위치를 획득할 수 있다. 위치 참조 테이블에 따르면 TCP 연결 2에 대응하는 TCP 연결 정보는 메모리 매니저에 의해 제어되는 제2 메모리에 저장되어 있으므로, 일 실시예에 따른 동작 420에서, 스케줄러는 상기 TCP 이벤트를 메 모리 매니저에게 포워딩할 수 있다. 일 실시예에 따르면, 메모리 매니저는 스케줄러로부터 상기 TCP 이벤트를 획득할 수 있다. 메모리 매 니저는 제2 메모리에 저장된, 상기 TCP 이벤트에 대응하는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 메모리 매니저는 생성하거나 업데이트된 TCP 연결 정보에 기초하여, TCP 연산을 수행할지 여부를 판단할 수 있다. 예를 들어, 메모리 매니저는 업데이트된 TCP 연결 정보에 기초하여, 수신 장치(receive r)에서 TCP ACK 또는 TCP 패킷을 수신할 수 있는 상황으로 판단한 경우 TCP 연산을 바로 수행할 필요가 있다고 판단할 수 있지만, 수신 장치(receiver)에서 TCP ACK 또는 TCP 패킷을 수신할 수 없는 상황으로 판단한 경우 TCP 연산을 바로 수행하지 않아도 된다고 판단할 수 있다. 메모리 매니저가 TCP 연산을 수행할 필요가 있다고 판단한 경우, 일 실시예에 따른 동작 430에서, 메모리 매니저는 적어도 하나의 FPC(230, 240, 250) 중 하나의 FPC에 의해 제어되는 제1 메모리로 TCP 연결 2에 대응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 스케줄러에게 전송할 수 있다. 도 5는 본 개시의 일 실시예에 따른 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인 경우, 선택된 FPC로부터 방출시킬 TCP 연결 정보를 획득하는 개략적인 흐름도이다. 일 실시예에 따르면, 스케줄러는 각각의 FPC가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개 수를 카운트할 수 있다. 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인 경우, 스케줄 러는 상기 스왑 요청 신호에 대한 응답으로, 적어도 하나의 FPC 중 TCP 연결 정보를 제2 메모리로 방 출(evict)시킬 FPC를 FPC 1으로 선택할 수 있다. 상기 소정 최대값은 제1 메모리의 크기 등에 기초하여 사 전에 설정될 수 있다. 예를 들면, 스케줄러는 가장 먼저 소정 최대값에 도달한 FPC 선택, 랜덤 선택, 라운 드 로빈 선택 및 FPC 번호에 기초한 선택(예. 가장 작은 번호) 등 제한되지 않은 다양한 방법으로 방출시킬 FPC 를 선택할 수 있다. 일 실시예에 따르면 동작 440에서, 스케줄러는 방출 요청 신호를 상기 선택된 FPC 1에게 전송할 수 있다. 일 실시예에 따르면, FPC 1은 상기 방출 요청 신호에 대한 응답으로, 방출시킬 TCP 연결 정보로 TCP 연결 1에 대응하는 TCP 연결 정보를 선택할 수 있다. 예를 들면, FPC 1는 마지막으로 수신한 패킷이 가장 오래 된 TCP 연결 1에 대응하는 TCP 연결 정보를 선택할 수 있다. 이외에도 랜덤 선택, 라운드 로빈 선택, TCP 연결 우선 순위에 기초한 선택 등 제한되지 않은 다양한 방법으로 방출시킬 TCP 연결 정보를 선택할 수 있음은 당업 자에게 이해될 것이다. 일 실시예에 따르면 동작 450에서, FPC 1은 TCP 연결 1을 지시하는 정보를 스케줄러에게 전송할 수 있다. 도 6은 본 개시의 일 실시예에 따른 TCP 연결 정보를 제2 메모리로 이동(스왑 아웃)하는 개략적인 흐름도이다. 일 실시예에 따르면 동작 460에서, 스케줄러는 TCP 연결 1에 대응하는 TCP 연결 정보를 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 FPC 1에게 전송할 수 있다. 스케줄러는 위치 참조 테이 블에서 TCP 연결 1에 대응하는 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경할 수 있다. 상기 위치 업데이트가 스왑 아웃 요청 신호 전송 전후에 수행될 수 있음은 당업자에게 이해될 것이다. 일 실시예에 따르면 동작 470에서, FPC 1은 상기 스왑 아웃 요청 신호에 대한 응답으로, TCP 연결 1에 대 응하는 TCP 연결 정보를 제2 메모리로 이동할 수 있다. 도 7은 본 개시의 일 실시예에 따른 방출 완료 신호를 메모리 매니저로부터 획득하는 개략적인 흐름도이다. TCP 연결 1에 대응하는 TCP 연결 정보가 제2 메모리로 이동이 완료된 경우, 일 실시예에 따른 동작 480에 서, 메모리 매니저는 방출 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따르면, 스케줄러는 위치 참조 테이블에서 TCP 연결 1에 대응하는 TCP 연결 정보의 위치 를 메모리 메니저를 지시하는 정보로 변경할 수 있다. 도 8은 본 개시의 일 실시예에 따른 TCP 연결 2에 대응하는 TCP 연결 정보를 FPC 1이 제어하는 제1 메모리로 이 동(스왑 인)하는 개략적인 흐름도이다. 일 실시예에 따르면 동작 490에서, 스케줄러는 FPC 1이 제어하는 제1 메모리로 TCP 연결 2에 대 응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 메모리 매니저에게 전송할 수 있다. 스 케줄러는 위치 참조 테이블에서 TCP 연결 2에 대응하는 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경할 수 있다. 상기 위치 업데이트가 스왑 인 요청 신호 전송 전후에 수행될 수 있음은 당업자에게 이 해될 것이다. 일 실시예에 따르면 동작 491에서, 메모리 매니저는 상기 스왑 인 요청 신호에 대한 응답으로, TCP 연결 2 에 대응하는 TCP 연결 정보를 FPC 1이 제어하는 제1 메모리로 이동할 수 있다. 도 9는 본 개시의 일 실시예에 따른 스왑 인 완료 신호를 FPC 1으로부터 획득하는 개략적인 흐름도이다. TCP 연결 2에 대응하는 TCP 연결 정보가 FPC 1이 제어하는 제1 메모리로 이동이 완료된 경우, 일 실 시예에 따른 동작 492에서, FPC 1은 스왑 인 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따르면, 스케줄러는 위치 참조 테이블에서 TCP 연결 2에 대응하는 TCP 연결 정보의 위치를 FPC 1을 지시하는 정보로 변경할 수 있다. 도 10은 본 개시의 일 실시예에 따른 전자 장치의 동작 흐름을 도시한다. 도 10을 참조하여 개시하는 스케줄러, FPC 1 및 메모리 매니저는 도 1의 스케줄러, TCP 컨트롤러 1 및 메모리 매니저에 각각 상응할 수 있다. 도 10을 참조하여 개시하는 스케줄러, FPC 1 및 메모리 매니저의 동작에 있어서, 도 1 내지 도 9에서 설명된 부분과 중복되는 부분은 생략 될 수 있다. 도 10에 도시되는 동작들의 일부가 생략될 수 있으며, 도 10에 도시되지 않은 동작이 추가될 수 있 다. 일 실시예에 따르면, 전자 장치는 스케줄러에 의해, TCP 이벤트를 스케줄링할 수 있다. 스케줄러는 상기 스케줄링 동작에 기초하여 TCP 연결에 대한 TCP 이벤트를 처리할 수 있다. 예를 들면, 스케줄러는 위 치 참조 테이블에서 TCP 연결 Y에 대응하는 TCP 연결 정보가 저장된 위치를 획득할 수 있다. 위치 참조 테 이블에 따르면 TCP 연결 Y에 대응하는 TCP 연결 정보는 메모리 매니저에 의해 제어되는 제2 메모리 에 저장되어 있으므로, 스케줄러는 상기 TCP 이벤트를 메모리 매니저에게 포워딩할 수 있다. 제 2 메모리는 DRAM (Dynamic Random Access Memory) 및 HBM (High Bandwidth Memory)을 포함할 수 있으나,이에 제한되지 않고 다양한 타입의 대용량 메모리를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 메모리 매니저에 의해 스케줄러로부터 상기 TCP 이벤트를 획득할 수 있다. 메모리 매니저는 제2 메모리에 저장된, TCP 연결 Y에 대응하는 TCP 연결 정보를 생성하거나 업데이트할 수 있다. 메모리 매니저는 생성하거나 업데이트된 TCP 연결 정보에 기초하여, TCP 연산을 수행 할지 여부를 판단할 수 있다. 메모리 매니저가 TCP 연산을 수행할 필요가 있다고 판단한 경우, 메모리 매 니저는 적어도 하나의 FPC(230, 240, 250) 중 하나의 FPC에 의해 제어되는 제1 메모리로 TCP 연결 Y에 대 응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 스케줄러에게 전송할 수 있다. 상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함할 수 있으나, 이에 제한되지 않고 다양한 타입의 고속 또 는 고성능 메모리를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 스케줄러에 의해 각각의 FPC가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수를 카운트할 수 있다. 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최 대값인 경우, 일 실시예에 따른 동작 1010에서, 전자 장치는 스케줄러에 의해, 적어도 하나의 FPC 중 TCP 연결 정보를 제2 메모리로 방출(evict)시킬 FPC로 FPC 1을 선택할 수 있다. 일 실시예에 따른 동작 1020에서, 전자 장치는 스케줄러에 의해, 방출 요청 신호를 FPC 1에게 전송할 수 있다. 일 실시예에 따르면, FPC 1은 상기 방출 요청 신호에 대한 응답으로, 방출시킬 TCP 연결 정보로 TCP 연결 X에 대응하는 TCP 연결 정보를 선택할 수 있다. 일 실시예에 따른 동작 1030에서, 전자 장치는 FPC 1에 의해 TCP 연결 X를 지시하는 정보를 스케줄러(21 0)에게 전송할 수 있다. 일 실시예에 따른 동작 1040에서, 전자 장치는 스케줄러에 의해 TCP 연결 X에 대응하는 TCP 연결 정보를 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 FPC 1에게 전송할 수 있다. 일 실시예에 따른 동작 1041에서, 전자 장치는 스케줄러에 의해, 위치 참조 테이블에서 TCP 연결 X에 대응하는 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경할 수 있다. 상기 위치 업데이트가 스왑 아 웃 요청 신호 전송 전후에 수행될 수 있음은 당업자에게 이해될 것이다. 일 실시예에 따른 동작 1050에서, 전자 장치는 FPC 1에 의해 상기 스왑 아웃 요청 신호에 대한 응답으로, TCP 연결 X에 대응하는 TCP 연결 정보를 제2 메모리로 이동할 수 있다. TCP 연결 X에 대응하는 TCP 연결 정보가 제2 메모리로 이동이 완료된 경우, 일 실시예에 따른 동작 1060에 서, 전자 장치는 메모리 매니저에 의해 방출 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따른 동작 1061에서, 전자 장치는 스케줄러에 의해, 위치 참조 테이블에서 TCP 연결 X에 대응하는 TCP 연결 정보의 위치를 메모리 메니저를 지시하는 정보로 변경할 수 있다. 일 실시예에 따른 동작 1070에서, 전자 장치는 스케줄러에 의해, FPC 1이 제어하는 제1 메모리 로 TCP 연결 Y에 대응하는 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 메모리 매니저에게 전송할 수 있다. 일 실시예에 따른 동작 1071에서, 전자 장치는 스케줄러에 의해, 위치 참조 테이블에서 TCP 연결 Y에 대응하는 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경할 수 있다. 상기 위치 업데이트가 스왑 인 요청 신호 전송 전후에 수행될 수 있음은 당업자에게 이해될 것이다. 일 실시예에 따른 동작 1080에서, 전자 장치는 메모리 매니저에 의해 상기 스왑 인 요청 신호에 대한 응답 으로, TCP 연결 Y에 대응하는 TCP 연결 정보를 FPC 1이 제어하는 제1 메모리로 이동할 수 있다. TCP 연결 Y에 대응하는 TCP 연결 정보가 FPC 1이 제어하는 제1 메모리로 이동이 완료된 경우, 일 실 시예에 따른 동작 1090에서, 전자 장치는 FPC 1에 의해 스왑 인 완료 신호를 스케줄러에게 전송할 수 있다. 일 실시예에 따른 동작 1091에서, 전자 장치는 스케줄러에 의해, 위치 참조 테이블에서 TCP 연결 Y에 대응하는 TCP 연결 정보의 위치를 FPC 1을 지시하는 정보로 변경할 수 있다.본 개시의 일 실시예에 따르면 네트워크 인터페이스 장치는 TCP 이벤트를 스케줄링하고, 상기 TCP 이벤트에 대 응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩 하는 스케줄러; 상기 스케줄러로부터 상기 TCP 이벤트를 획득하고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 적어도 하나의 TCP 컨트롤러; 및 상기 스케줄러로부터 상기 TCP 이벤트를 획득하 고, 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하고, 상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 메모리 매니저를 포함할 수 있다. 일 실시예에 따르면 상기 위치는 각각의 제1 메모리를 제어하도록 구성된 상기 적어도 하나의 TCP 컨트롤러 및 제2 메모리를 제어하도록 구성된 메모리 매니저를 포함하고; 상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함하고; 상기 제2 메모리는 DRAM(Dynamic Random Access Memory)을 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러는 상기 위치에 대응하는 TCP 컨트롤러 또는 상기 메모리 매니저에게 상기 TCP 이벤트를 포워딩할 수 있다. 일 실시예에 따르면 상기 스케줄러는 각각의 TCP 컨트롤러가 제어하는 각각의 제1 메모리에 저장된 TCP 연결 정 보의 개수를 카운트할 수 있다. 일 실시예에 따르면 상기 스케줄러는 상기 스왑 요청 신호에 대한 응답으로, 상기 적어도 하나의 TCP 컨트롤러 중 제1 TCP 컨트롤러를 선택하고; 상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동 하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하고; 상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하고; 스왑 인 완료 신호를 상기 제1 TCP 컨트롤러로부터 획득하고; 상기 TCP 연결 정보의 위치를 상기 제1 TCP 컨트롤러로 변경할 수 있다. 일 실시예에 따르면 상기 제1 TCP 컨트롤러는 상기 TCP 연결 정보의 개수가 가장 작은 TCP 컨트롤러일 수 있다. 일 실시예에 따르면 상기 메모리 매니저는 상기 스왑 인 요청 신호에 대한 응답으로, 상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하도록 구성될 수 있다. 일 실시예에 따르면 상기 스케줄러는 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인 경우, 적어도 하나의 TCP 컨트롤러 중 TCP 연결 정보를 상기 제2 메모리로 방출(evict)시킬 제2 TCP 컨트롤러를 선택하고; 방출 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하고; 상기 방출 요청 신호에 대한 응답으로, 방출 시킬 제2 TCP 연결을 지시하는 정보를 상기 제2 TCP 컨트롤러로부터 획득하고; 상기 제2 TCP 연결에 대응하는 제2 TCP 연결 정보를 상기 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 상기 제2 TCP 컨트롤러에 게 전송하고; 상기 스왑 아웃 요청 신호에 대한 응답으로, 방출 완료 신호를 상기 메모리 매니저로부터 획득할 수 있다. 일 실시예에 따르면 상기 제2 TCP 컨트롤러는 상기 스왑 아웃 요청 신호에 대한 응답으로, 상기 메모리 매니저 가 제어하는 제2 메모리로 상기 제2 TCP 연결 정보를 이동하도록 구성될 수 있다. 일 실시예에 따르면 상기 스케줄러는 상기 방출 완료 신호에 대한 응답으로, 상기 제2 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신호를 상 기 메모리 매니저에게 전송하고; 상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하고; 스왑 인 완료 신호를 상기 제2 TCP 컨트롤러로부터 획득하고; 상기 TCP 연결 정보의 위치를 상기 제2 TCP 컨트롤러로 변경할 수 있다. 일 실시예에 따르면 상기 스케줄러는 상기 위치 참조 테이블에서 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치가 이동중임을 지시하는 정보인 경우, 상기 TCP 이벤트를 펜딩 큐에 저장하고; 소정 시간 이후에 상기 펜딩 큐에서 상기 TCP 이벤트를 추출하고; 상기 추출된 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 상 기 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩할 수 있다. 또한, 본 개시의 일 실시예에 따르면 전자 장치의 동작 방법은 스케줄러에 의해 TCP 이벤트를 스케줄링하는 동 작; 상기 스케줄러에 의해 상기 TCP 이벤트에 대응하는 TCP 연결 정보의 위치를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 동작; 적어도 하나의 TCP 컨트롤러 또는 메모리 매니저에 의해 상기 포워딩된 TCP 이벤트를 획득하는 동작; 상기 적어도 하나의 TCP 컨트롤러에 의해 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보에 대한 연산을 제어하는 동작; 상기 메모리 매니저에 의해 상기 TCP 이벤트에 대 응하는 상기 TCP 연결 정보에 대한 TCP 연산을 수행할지 여부를 판단하는 동작; 및 상기 메모리 매니저에 의해상기 판단 결과에 기초하여 상기 적어도 하나의 TCP 컨트롤러 중 하나의 TCP 컨트롤러로 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 요청 신호를 상기 스케줄러에게 전송하는 동작을 포함할 수 있다. 일 실시예에 따르면 상기 위치는 각각의 제1 메모리를 제어하도록 구성된 상기 적어도 하나의 TCP 컨트롤러 및 제2 메모리를 제어하도록 구성된 메모리 매니저를 포함하고; 상기 제1 메모리는 SRAM(Static Random Access Memory)을 포함하고; 상기 제2 메모리는 DRAM(Dynamic Random Access Memory)을 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 상기 위치에 대응하는 TCP 컨트롤러 또는 상기 메모리 매니저에게 상 기 TCP 이벤트를 포워딩하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 각각의 TCP 컨트롤러가 제어하는 각각의 제1 메모리에 저장된 TCP 연 결 정보의 개수를 카운트하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 상기 스왑 요청 신호에 대한 응답으로, 상기 적어도 하나의 TCP 컨트 롤러 중 제1 TCP 컨트롤러를 선택하는 동작, 상기 제1 TCP 컨트롤러가 제어하는 제1 메모리로 상기 TCP 연결 정 보를 이동하도록 요청하는 스왑 인 요청 신호를 상기 메모리 매니저에게 전송하는 동작, 상기 위치 참조 테이블 에서 상기 TCP 연결 정보의 위치를 이동중임을 지시하는 정보로 변경하는 동작, 스왑 인 완료 신호를 상기 제1 TCP 컨트롤러로부터 획득하는 동작, 및 상기 TCP 연결 정보의 위치를 상기 제1 TCP 컨트롤러로 변경하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 제1 TCP 컨트롤러는 상기 TCP 연결 정보의 개수가 가장 작은 TCP 컨트롤러일 수 있다. 일 실시예에 따르면 상기 메모리 매니저에 의해 상기 스왑 인 요청 신호에 대한 응답으로, 상기 제1 TCP 컨트롤 러가 제어하는 제1 메모리로 상기 TCP 연결 정보를 이동하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대 값인 경우, 적어도 하나의 TCP 컨트롤러 중 TCP 연결 정보를 상기 제2 메모리로 방출(evict)시킬 제2 TCP 컨트 롤러를 선택하는 동작, 방출 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하는 동작, 상기 방출 요청 신호에 대 한 응답으로, 방출시킬 제2 TCP 연결을 지시하는 정보를 상기 제2 TCP 컨트롤러로부터 획득하는 동작, 상기 제2 TCP 연결에 대응하는 제2 TCP 연결 정보를 상기 제2 메모리로 이동하도록 요청하는 스왑 아웃 요청 신호를 상기 제2 TCP 컨트롤러에게 전송하는 동작, 및 상기 스왑 아웃 요청 신호에 대한 응답으로, 방출 완료 신호를 상기 메모리 매니저로부터 획득하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 제2 TCP 컨트롤러에 의해, 상기 스왑 아웃 요청 신호에 대한 응답으로, 상기 메모리 매니저가 제어하는 제2 메모리로 상기 제2 TCP 연결 정보를 이동하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 상기 방출 완료 신호에 대한 응답으로, 상기 제2 TCP 컨트롤러가 제 어하는 제1 메모리로 상기 TCP 이벤트에 대응하는 상기 TCP 연결 정보를 이동하도록 요청하는 스왑 인 요청 신 호를 상기 메모리 매니저에게 전송하는 동작, 상기 위치 참조 테이블에서 상기 TCP 연결 정보의 위치를 이동중 임을 지시하는 정보로 변경하는 동작, 스왑 인 완료 신호를 상기 제2 TCP 컨트롤러로부터 획득하는 동작, 및 상 기 TCP 연결 정보의 위치를 상기 제2 TCP 컨트롤러로 변경하는 동작을 더 포함할 수 있다. 일 실시예에 따르면 상기 스케줄러에 의해 상기 위치 참조 테이블에서 상기 TCP 이벤트에 대응하는 TCP 연결 정 보의 위치가 이동중임을 지시하는 정보인 경우, 상기 TCP 이벤트를 펜딩 큐에 저장하는 동작, 소정 시간 이후에 상기 펜딩 큐에서 상기 TCP 이벤트를 추출하는 동작, 상기 추출된 TCP 이벤트에 대응하는 TCP 연결 정보의 위치 를 지시하는 위치 참조 테이블에 기초하여 상기 TCP 이벤트를 상기 위치에 포워딩하는 동작을 더 포함할 수 있 다. 또한, 본 개시의 일 실시예에 따르면 상기 방법들을 수행하기 위한 프로그램이 기록된 컴퓨터로 읽을 수 있는 기록매체를 포함한다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 디스플레이 장치, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다.예를 들면, 단수로 표현된 구성요소는 문맥상 명백하게 단수만을 의미하지 않는다면 복수의 구성요소를 포함하 는 개념으로 이해되어야 한다. 본 문서에서 사용되는 '및/또는'이라는 용어는, 열거되는 항목들 중 하나 이상의 항목에 의한 임의의 가능한 모든 조합들을 포괄하는 것임이 이해되어야 한다. 본 개시에서 사용되는 '포함하 다,' '가지다,' '구성되다' 등의 용어는 본 개시 상에 기재된 특징, 구성 요소, 부분품 또는 이들을 조합한 것 이 존재함을 지정하려는 것일 뿐이고, 이러한 용어의 사용에 의해 하나 또는 그 이상의 다른 특징들이나 구성 요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 배제하려는 것은 아니다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 본 문서의 다양한 실시예들에서 사용된 용어 \"~부\" 또는 \"~모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용 될 수 있다. \"~부\" 또는 \"~모듈\"은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품 의 최소 단위 또는 그 일부가 될 수 있다. 예를 들면, 일 실시예에 따르면, \"~부\" 또는 \"~모듈\"은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예들에서 사용된 용어 “~할 경우”는 문맥에 따라 “~할 때”, 또는 “~할 시” 또는 “ 결정하는 것에 응답하여” 또는 “검출하는 것에 응답하여”를 의미하는 것으로 해석될 수 있다. 유사하게, “~ 라고 결정되는 경우” 또는 “~이 검출되는 경우”는 문맥에 따라 “결정 시” 또는 “결정하는 것에 응답하여 ”, 또는 “검출 시” 또는 “검출하는 것에 응답하여”를 의미하는 것으로 해석될 수 있다. 본 문서를 통해 설명된 네트워크 인터페이스 장치(100, 200) 및 네트워크 인터페이스 장치(100, 200)를 포함하 는 전자 장치(예. 서버)에 의해 실행되는 프로그램은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨 어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 프로그램은 컴퓨터로 읽을 수 있는 명령어들 을 수행할 수 있는 모든 시스템에 의해 수행될 수 있다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령어(instruction), 또는 이들 중 하나 이상 의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어는, 컴퓨터로 읽을 수 있는 저장 매체(computer- readable storage media)에 저장된 명령어를 포함하는 컴퓨터 프로그램으로 구현될 수 있다. 컴퓨터가 읽을 수 있는 저장 매체로는, 예를 들어 마그네틱 저장 매체(예컨대, ROM(Read-Only Memory), RAM(Random-Access Memory), 플로피 디스크, 하드 디스크 등) 및 광학적 판독 매체(예컨대, 시디롬(CD-ROM), 디브이디(DVD: Digital Versatile Disc)) 등이 있다. 컴퓨터가 읽을 수 있는 저장 매체는 네트워크로 연결된 컴퓨터 시스템들 에 분산되어, 분산 방식으로 컴퓨터가 판독 가능한 코드가 저장되고 실행될 수 있다. 컴퓨터 프로그램은 어플리 케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인 으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부 는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매 체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10"}
{"patent_id": "10-2024-0058117", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 네트워크 인터페이스 장치의 개략적인 블록도이다. 도 2는 본 개시의 일 실시예에 따른 네트워크 인터페이스 장치의 각 블록들의 동작을 개략적으로 도시한다. 도 3은 본 개시의 일 실시예에 따른 TCP 연결 정보를 메모리 매니저로부터 FPC로 이동(스왑 인)하는 개략적인 흐름도이다. 도 4는 본 개시의 일 실시예에 따른 위치 참조 테이블에 기초하여 TCP 이벤트를 메모리 매니저로 포워딩하는 개 략적인 흐름도이다. 도 5는 본 개시의 일 실시예에 따른 각각의 제1 메모리에 저장된 TCP 연결 정보의 개수가 모두 소정 최대값인경우, 선택된 FPC로부터 방출시킬 TCP 연결 정보를 획득하는 개략적인 흐름도이다. 도 6은 본 개시의 일 실시예에 따른 TCP 연결 정보를 제2 메모리로 이동(스왑 아웃)하는 개략적인 흐름도이다. 도 7은 본 개시의 일 실시예에 따른 방출 완료 신호를 메모리 매니저로부터 획득하는 개략적인 흐름도이다. 도 8은 본 개시의 일 실시예에 따른 TCP 연결 2에 대응하는 TCP 연결 정보를 FPC 1이 제어하는 제1 메모리로 이 동(스왑 인)하는 개략적인 흐름도이다. 도 9는 본 개시의 일 실시예에 따른 스왑 인 완료 신호를 FPC 1으로부터 획득하는 개략적인 흐름도이다. 도 10은 본 개시의 일 실시예에 따른 네트워크 인터페이스 장치의 동작 흐름을 도시한다."}
