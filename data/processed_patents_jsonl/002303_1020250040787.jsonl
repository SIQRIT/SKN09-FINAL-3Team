{"patent_id": "10-2025-0040787", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0051050", "출원번호": "10-2025-0040787", "발명의 명칭": "AI 기반 자율 로봇 실행권한 관리 및 특이점 네트워크 격리 시스템", "출원인": "강성운", "발명자": "강성운"}}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "AI 기반 자율 로봇의 실행 권한 관리 시스템에 있어서,현실세계에서 운영되는 AI 기반 자율 로봇(AI-Based Autonomous Robot)의 실행권한을 가상의 메타버스 내 특정영역(메타버스 행성; Planet)으로 매핑하고, 상기 메타버스 내에서 AI 기반 자율 로봇의 활동을 사전 정의된 보안 정책(Security Policy)과 3단계 보안 프로토콜을 통해 실시간으로 감시하며, AI 기반 자율 로봇이 허가된 활동 범위를 벗어나거나, 예상치 못한 동작을 수행할 경우, 해당 AI 기반 자율 로봇이 매핑된 메타버스 행성을 즉시 네트워크에서 격리(행성 격리; Planet Isolation)하고, 현실세계에서 해당 AI 기반 자율 로봇의 작동을 자동으로 정지하는 것을 특징으로 하는 AI 기반 자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 AI 기반 자율 로봇이 자율주행 차량, 드론, 제조업 로봇, 군사 로봇 등으로 구성되며, 각 로봇 유형별로메타버스 내 특정 메타버스 행성(예: 자율운송 행성, 드론 네트워크 행성, 스마트 팩토리 행성, 방위산업 행성)으로 매핑되고, 상기 메타버스 행성 내에서만 실행되도록 권한이 제한되는 것을 특징으로 하는 AI 기반 자율로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 AI 기반 자율 로봇이 네트워크를 통해 주기적으로 메타버스 행성으로 실행 데이터를 전송하며, AI의 의사결정 과정이 메타버스 내에서 사전 검증된 후 현실세계에서 실행되도록 설정되는 것을 특징으로 하는 AI 기반자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서,상기 AI 기반 자율 로봇이 비인가된 명령 수행 또는 예상치 못한 동작을 실행하려고 할 경우, 메타버스 내 해당메타버스 행성의 네트워크 연결을 3단계 보안 프로토콜에 따라 자동으로 차단하며, 1단계: 비정상 동작 탐지 및 경고,2단계: 기능 제한(Access Restriction) 및 AI 행동 로그 분석,3단계: 네트워크 연결 차단 및 관리자 개입 요구의 절차를 통해 폭주를 방지하는 것을 특징으로 하는 AI 기반자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서,상기 메타버스 행성은 현실세계의 물리적 장소 또는 작업 환경과 매핑되며, 특정 AI 기반 자율 로봇의 활동 범위가 사전 설정된 작업 구역을 벗어날 경우, 해당 메타버스 행성의 접근 권한을 즉시 차단(행성 격리; PlanetIsolation)하고, 물리적 로봇의 작동을 정지하는 것을 특징으로 하는 AI 기반 자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,상기 AI 기반 자율 로봇의 네트워크 연결 상태 및 실행 로그를 블록체인 기반 서버(Blockchain-Based Server)에공개특허 10-2025-0051050-3-기록하고, 블록체인 상에서 로그 데이터의 무결성을 검증하기 위해 다음의 절차를 포함하며, 데이터 기록 단계: AI 기반 자율 로봇의 모든 네트워크 활동 로그를 블록체인 기반 서버에 실시간으로기록하고, Merkle Tree 구조를 사용하여 트랜잭션 데이터를 해싱하여 블록체인 상에 저장하며,무결성 검증 단계: 주기적으로 블록체인 상의 Merkle Root 해시 값을 비교하여 데이터 변조 여부를 확인하고,무결성이 보장되지 않을 경우 관리자에게 경고를 전송하며,이상 동작 발생 시: 로그 데이터가 실시간으로 분석되어 관리자에게 알림을 전송하며, 메타버스 내 해당 메타버스 행성을 격리하여 데이터 무결성을 유지하는 것을 특징으로 하는 AI 기반 자율 로봇의 실행 권한 관리시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,상기 AI 기반 자율 로봇의 행동이 사전 정의된 안전 매뉴얼과 일치하는지 메타버스 내에서 실시간 시뮬레이션검증 후, 현실세계에서 물리적 동작이 실행되도록 제어하며, 비정상적 결과가 도출될 경우 해당 메타버스 행성내 모든 활동을 정지하는 것을 특징으로 하는 AI 기반 자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서,특이점(Singularity)을 기준으로 메타버스 내 모든 메타버스 행성과 객체를 계층적으로 배치하고, 특정 AI 기반자율 로봇의 이상 동작이 3단계 보안 프로토콜을 초과하여 제어 불가능한 상황으로 판단될 경우, 특이점 셧다운(Singularity Shutdown)을 실행하여 메타버스 내 전체 메타버스 행성을 비활성화하며, 현실세계에서 모든 AI 기반 자율 로봇의 작동을 즉시 중지시키는 것을 특징으로 하는 AI 기반 자율 로봇의 실행 권한 관리 시스템."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 AI 기반 자율 로봇의 실행 권한을 메타버스 내 가상의 행성으로 매핑하여, 비정상적 행동 발생 시 해 당 영역만 격리(네트워크 샷다운)하는 기술이다. 3단계 보안 프로토콜(비정상 탐지 → 기능 제한 → 네트워크 차 단)을 통해 안전성을 강화하며, 특이점을 기준으로 메타버스 행성과 연결된 객체를 통합적으로 관리한다. 자 율주행, 군사 로봇, 스마트 팩토리 등 다양한 분야에 적용 가능하며, AI 객체의 안전성과 신뢰성을 높일 수 있는 시스템을 제공한다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 AI 기반 자율 로봇의 실행 권한을 관리하고, 예측 불가능한 이상 동작이나 보안 위협 발생 시 특이점 네트워크 격리(Singularity Network Isolation)를 통해 안전성을 확보하는 시스템에 관한 것이다. 더 구체적으 로는, 메타버스 환경 내에서 가상의 행성 단위로 AI 로봇의 실행 권한을 부여하고, 특이점(Singularity)을 기준 으로 계층적 주소 체계를 구성하여 AI 로봇의 활동을 관리 및 제어하는 기술에 관한 것이다. 본 발명은 자율주행 차량, 자율주행 드론, 산업용 로봇, 군사 로봇, 의료 로봇 등 다양한 AI 기반 자율 로봇의 실행 권한을 메타버스 환경 내에서 통합적으로 관리하고, AI 로봇의 이상 동작 또는 비인가된 행위를 감지할 경 우, 해당 행성 단위로 격리하거나 전체 네트워크를 비활성화하는 특이점 네트워크 격리 기능을 포함하는 기술에 관한 것이다. 특히, 본 발명은 특이점을 중심으로 메타버스 내 모든 객체와 행성을 계층적으로 배치하고, AI 로봇의 이상 동작이 3단계 보안 프로토콜을 초과하여 제어 불가능하거나 현실세계에 치명적인 영향을 미칠 수 있다고 판단되는 경우, 특이점 네트워크 격리를 실행하여 메타버스 내 모든 행성과 객체의 접근을 원천 차단하 는 기술을 제공한다. 또한, 본 발명은 2022년 2월 11일 출원된 원출원 발명 '메타버스 포털 서비스 시스템 {METAVERSE PORTAL SERVICE SYSTEM}'의 기술사상을 응용한 응용발명으로서, 원출원에서 정의된 메타버스 환경 내 객체의 계층적 주 소 부여 체계 및 보안 관리 시스템을 기반으로 AI 로봇의 실행 권한 관리와 네트워크 격리 기능을 추가한 개선 기술에 관한 것이다. 따라서 본 발명은 AI 기반 자율 로봇의 안전성과 신뢰성을 강화하고, 메타버스 환경 내에 서 AI 로봇의 실행 권한을 효과적으로 관리하기 위한 시스템을 제공하는 데 그 목적이 있다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "1. 기술적 배경 최근 AI 기술의 급속한 발전으로 자율주행 자동차, 자율주행 드론, 산업용 로봇, 군사 로봇, 의료 로봇 등 다양 한 AI 기반 자율 로봇 시스템이 현실 세계에서 활발히 활용되고 있다. 이러한 자율 로봇은 AI 알고리즘을 기반 으로 독립적으로 의사결정을 내리고 작동할 수 있는 능력을 가지며, 산업, 교통, 군사, 의료 등 여러 분야에서혁신적인 기능을 제공한다. 그러나 AI 로봇의 독립적인 의사결정 기능은 예상치 못한 오작동, 해킹, 보안 취약 점 등을 초래할 수 있으며, 특히 현실 세계에서 물리적으로 수행되는 작업에 있어서는 심각한 위험을 야기할 가 능성이 존재한다. 예를 들어, 자율주행 자동차의 오작동으로 인해 교통사고가 발생하거나, 군사 로봇이 비인가 된 공격을 수행하는 등의 문제가 발생할 수 있다. 이와 같은 위험을 방지하기 위해, AI 로봇의 활동을 모니터링 하고 제어할 수 있는 다양한 보안 기술이 개발되고 있다. 그러나 기존 기술은 주로 개별 로봇 또는 특정 네트워 크 단위에서의 모니터링 및 제어에 한정되며, 문제가 발생할 경우 즉각적인 대응이 어렵거나, 문제가 전체 시스 템으로 확산될 위험이 존재한다. 2. 기존 기술의 한계 및 문제점 기존의 보안 시스템 및 제어 기술은 다음과 같은 문제점이 존재한다; 개별 제어 방식의 한계 기존의 AI 로봇 보안 기술은 주로 개별 로봇 또는 단일 네트워크 단위에서만 동작하도록 설계되어 있다. 이러한 방식은 특정 로봇의 이상 동작을 감지하고 중단하는 데에는 유효할 수 있으나, 여러 로봇이 동시에 연동되는 상 황에서 발생하는 문제를 포괄적으로 해결하는 데 한계가 있다. 예측 불가능한 오작동 및 보안 위협 AI 로봇이 독립적으로 의사결정을 내리는 과정에서 예상치 못한 오류나 오작동이 발생할 수 있으며, 특히 외부 의 해킹이나 악성 코드에 의해 조작될 경우 심각한 보안 위협으로 이어질 수 있다. 기존 기술은 이러한 상황을 실시간으로 탐지하고 대응하는 데 있어 한계를 가진다. 전면적 제어 기능의 부재 기존의 보안 기술은 주로 특정 로봇 또는 네트워크 구역 내에서 문제를 탐지하고 제한하는 방식으로 설계되어 있다. 그러나, AI 로봇의 이상 동작이 다수의 로봇 또는 전체 네트워크로 확산될 경우 이를 근원적으로 차단할 수 있는 전면적 제어 기능이 부족하다. 현실 세계와 가상 환경 간의 연계 부족 현실 세계의 AI 로봇이 네트워크를 통해 가상 환경과 연계되는 경우, 가상 환경 내에서의 보안 제어 및 모니터 링이 현실 세계의 로봇 제어에 직접적으로 영향을 미치는 기술이 부족하다. 특히, 메타버스 환경 내에서 로봇의 활동을 통제하고, 문제가 발생할 경우 즉각적으로 격리할 수 있는 기능이 제한적이다. 3. 원출원 기술과의 연관성 및 개선 필요성 본 발명은 2022년 2월 11일 출원된 '메타버스 포털 서비스 시스템 {METAVERSE PORTAL SERVICE SYSTEM}'의 기술 사상을 응용한 응용발명으로서, 기존 기술에서 정의된 메타버스 환경 내 객체의 계층적 주소 부여 체계 및 보안 관리 시스템을 기반으로 한다. 원출원 발명에서는 메타버스 환경 내의 객체들(사물인터넷 장치, AI 객체, 사용 자 조작 객체 등)을 특이점을 중심으로 하는 계층적 주소 체계로 관리하고, 보안 프로토콜을 통해 비인가된 접근을 차단하는 기술이 제시되었다. 그러나 원출원 발명에서는 AI 로봇의 물리적 제어 기능 및 폭주 방지 기능 이 독립적인 기술로 다루어지지 않았으며, 메타버스 내에서 AI 로봇의 활동을 효과적으로 제어하고, 필요 시 전 체 네트워크를 격리하는 근원적인 제어 방식이 포함되지 않았다. 4. 본 발명이 해결하고자 하는 과제 본 발명은 기존 기술의 한계를 극복하고, 다음과 같은 문제를 해결하고자 한다; AI 로봇의 실행 권한을 메타버스 내 행성 단위로 분리하여 관리함으로써, 특정 로봇의 이상 동작이 전체 시 스템으로 확산되는 것을 방지하는 기술 제공. 특이점을 중심으로 메타버스 내의 모든 객체를 계층적으로 관리하고, 문제가 발생할 경우 특이점 네트워 크 격리(Singularity Network Isolation)를 통해 전체 시스템을 일시적으로 비활성화할 수 있는 기능 제공. AI 로봇의 활동을 실시간으로 모니터링하고, 이상 동작 발생 시 자동으로 차단하는 3단계 보안 프로토콜을 포함. 현실 세계의 AI 로봇과 메타버스 환경 간의 원활한 연계 및 제어 기술 제공. 위와 같은 문제 해결을 목표로 하여, 본 발명은 기존 메타버스 포털 서비스 시스템을 기반으로 AI 로봇의 실행 권한 관리 및 네트워크 격리 기능을 추가한 응용발명으로서 설계되었다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 출원번호 제10-2022-0017847호 (특허문헌 0002) 본 특허문헌은 메타버스 환경 내에서 다양한 서비스를 통합 관리할 수 있는 메타버스 포털 서 비스 시스템에 관한 기술로서, 메타버스 내 객체(사물인터넷 장치, AI 객체 등)의 계층적 주소 체계와 보안 관 리 시스템을 제안하고 있다. 이 선행기술에서는 메타버스 내 각 객체에 특이점을 중심으로 하는 계층적 주소 를 부여하여 객체를 식별하고 관리하는 기술이 제시되었으나, AI 기반 자율 로봇의 물리적 제어, 폭주 방지, 네 트워크 격리 등의 구체적인 기술적 수단은 포함되지 않았다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "1. AI 기반 자율 로봇의 실행 권한을 메타버스 내 행성 단위로 분리하여 관리하고, 문제가 발생할 경우 해당 행 성만을 격리함으로써 전체 시스템으로의 전이 위험을 방지하는 기술을 제공하는 것이다. 본 발명은 AI 로봇의 이상 동작이 특정 행성 내에서만 영향을 미치도록 제한하며, 다른 행성으로의 문제 전이가 발생하지 않도록 차 단하는 구조를 제공한다. 이를 통해 AI 로봇의 이상 동작이나 보안 위협이 전체 시스템으로 확산되는 것을 방지 하고, 문제 발생 시 신속하게 해당 행성을 격리함으로써 피해를 최소화할 수 있다. 2. 특이점을 중심으로 메타버스 내 모든 객체를 계층적으로 배치하고, 문제가 발생할 경우 특이점 네트워크 격리(Singularity Network Isolation)를 실행하여 전체 시스템을 일시적으로 비활성화할 수 있는 기능을 제공하 는 것이다. 본 발명에서는 메타버스 내 객체들이 특이점을 기준으로 계층적으로 구성되며, AI 로봇이 지정된 활 동 범위를 초과하거나 예측하지 못한 동작을 수행할 경우, 해당 행성을 네트워크로부터 격리할 수 있다. 만일 문제의 심각성이 전체 시스템에 위협을 가할 수 있는 수준이라고 판단될 경우, 특이점 네트워크 격리 기능을 사 용하여 메타버스 내 모든 객체와 행성의 접근을 근원적으로 차단할 수 있도록 한다. 3. AI 로봇의 활동을 실시간으로 모니터링하고, 예상치 못한 동작 발생 시 자동으로 차단하는 3단계 보안 프로 토콜을 적용하는 기술을 제공하는 것이다. 본 발명은 AI 로봇의 활동을 모니터링하며, 보안 위협이 감지될 경우 1단계 경고(비정상 동작 탐지 및 자동 경고), 2단계 제한(기능 제한 및 AI 행동 로그 분석), 3단계 차단(네트워 크 연결 차단 및 관리자 개입 요구)으로 구성된 보안 프로토콜을 자동으로 적용한다. 이를 통해 AI 로봇의 이상 동작을 신속하게 감지하고 차단함으로써 현실세계에서 발생할 수 있는 피해를 방지한다. 4. AI 로봇의 실행 권한을 계층적 주소 체계로 관리하고, 각 로봇의 활동 범위를 사전에 설정함으로써 허가되지 않은 작업을 예방하는 기술을 제공하는 것이다. 본 발명은 AI 로봇이 메타버스 내 행성 단위로 배치되고, 각 행 성에서의 활동 범위를 명확하게 설정하여 지정된 범위를 벗어난 작업을 수행하지 못하도록 제어한다. 이를 통해 AI 로봇이 허가된 영역 내에서만 동작하도록 제한하며, 문제가 발생할 경우 신속하게 해당 행성 또는 특이점을 기준으로 격리하는 방식으로 문제를 해결할 수 있다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은 상기와 같은 과제를 해결하기 위하여, AI 기반 자율 로봇의 실행 권한을 메타버스 내 행성 단위로 분 리하여 관리하고, 문제가 발생할 경우 해당 행성만을 격리하거나 필요 시 특이점 네트워크 격리(Singularity Network Isolation)를 통해 전체 시스템을 비활성화하는 기술을 제공한다. 본 발명은 2022년 2월 11일 출원된 원출원 발명 '메타버스 포털 서비스 시스템 {METAVERSE PORTAL SERVICE SYSTEM}' 의 기술사상을 응용하여, 메 타버스 환경 내에서 AI 로봇의 실행 권한을 관리하고 제어하는 응용발명이다. 본 발명은 특이점을 중심으로 하는 계층적 주소 체계(Multi-layer Hierarchical Addressing System)를 기반 으로 메타버스 환경을 구성하며, 각 AI 로봇이 지정된 메타버스 행성 내에서만 작동하도록 권한을 부여하는 방 식으로 동작한다. AI 로봇의 활동을 메타버스 내에서 사전에 검증하고 실행 권한을 부여하는 과정에서, 로봇의 실행 범위와 권한을 사전에 설정하여 지정된 범위를 벗어난 작업을 수행하지 못하도록 제어한다.1. 메타버스 내 행성 단위 실행 권한 관리 시스템 본 발명에서는 메타버스 내의 객체들을 특이점을 중심으로 계층적으로 배치하며, 각각의 메타버스 생태계를 독립적인 행성(Planet) 단위로 구획하여 관리한다. 이 행성 단위 구조는 메타버스 환경 내 AI 로봇의 활동을 분 리하고, 특정 행성 내에서만 실행될 수 있도록 권한을 설정하는 기능을 포함한다. 예를 들어, 자율주행 자동차 는 '자율운송 행성(Autonomous Transport Planet)'에, 군사 로봇은 '방위산업 행성(Military Robotics Planet)'에 배치되며, 해당 행성 내에서만 활동할 수 있도록 권한이 제한된다. 만일 AI 로봇이 지정된 범위를 벗어나거나 비인가된 작업을 수행하려 할 경우, 해당 행성을 자동으로 네트워크에서 격리(Shutdown)하여 문제를 해결한다. 2. 특이점 네트워크 격리(Singularity Network Isolation) 기능 본 발명은 메타버스 환경 내 객체들을 계층적으로 배치하고, 모든 객체의 중심에는 특이점이 존재하며, 특이 점은 메타버스 내 모든 행성과 객체를 통합적으로 관리하는 역할을 담당한다. 문제가 발생할 경우, 개별 행성 단위에서의 격리 조치가 이루어질 수 있으나, 만일 문제의 심각성이 전체 시스템에 영향을 미칠 수 있다고 판단 될 경우, 특이점 네트워크 격리 기능을 통해 메타버스 전체를 일시적으로 비활성화할 수 있도록 한다. 특이점 네트워크 격리 기능은 메타버스 내의 모든 객체와 행성을 통합적으로 관리하며, 문제가 발생한 경우 특 정 객체 또는 행성을 격리하는 기능을 제공한다. 이 기능은 원출원 발명에서 제시된 특이점을 중심으로 하는 계층적 주소 체계를 기반으로 구현되며, 사용자가 지정된 특이점을 기준으로 전체 네트워크의 접근을 차단하거 나 특정 행성을 분리할 수 있도록 구성된다. 3. AI 로봇의 3단계 보안 프로토콜 적용 본 발명에서는 AI 로봇의 활동을 실시간으로 모니터링하고, 문제가 발생할 경우 단계별로 대응하는 3단계 보안 프로토콜을 적용한다. 이 보안 프로토콜은 다음과 같은 절차로 이루어진다. 1단계: 비정상 동작 탐지 및 자동 경고 AI 로봇의 활동을 실시간으로 모니터링하며, 사전 정의된 보안 정책을 위반하거나 비인가된 작업을 수행할 경우 자동으로 경고 메시지를 출력한다. 2단계: 기능 제한 및 AI 행동 로그 분석 경고 메시지가 출력된 후, AI 로봇의 기능을 제한하고 해당 로봇의 행동 로그를 분석하여 문제의 원인을 파악한 다. 이 과정에서는 AI의 의사결정 경로를 검토하고, 이상 동작의 원인이 무엇인지 확인한다. 3단계: 네트워크 연결 차단 및 관리자 개입 요구 문제가 지속되거나 심각하다고 판단되는 경우, 해당 AI 로봇의 네트워크 연결을 차단하고, 관리자가 개입하여 문제를 해결할 수 있도록 조치를 취한다. 4. 계층적 주소 체계를 기반으로 한 실행 권한 관리 본 발명은 AI 로봇의 실행 권한을 메타버스 내 계층적 주소 체계로 관리하며, 이 주소 체계는 메타버스 행성 단 위, 지역 단위, 특정 장소 단위, 제조업자 단위, 개별 장치 단위로 구성된다. AI 로봇은 지정된 계층 내에서만 동작하도록 권한이 설정되며, 문제가 발생할 경우 해당 계층 또는 행성을 격리하여 문제를 해결할 수 있다. 계층적 주소 체계는 원출원 발명에서 제시된 특이점을 중심으로 한 구조를 기반으로 하며, 메타버스 내 객체 의 식별 및 권한 관리를 보다 체계적으로 수행할 수 있도록 설계되었다. 이를 통해 AI 로봇이 허가되지 않은 작 업을 수행하지 않도록 제어하며, 문제가 발생할 경우 신속하게 격리할 수 있도록 한다. 본 발명은 상기와 같은 구성 요소를 통해 AI 기반 자율 로봇의 실행 권한을 효과적으로 관리하고, 문제가 발생 할 경우 신속하게 대응할 수 있는 기술적 수단을 제공한다. 또한, 원출원 발명에서 제시된 메타버스 포털 서비 스 시스템의 기술사상을 응용하여, 메타버스 환경 내에서 AI 로봇의 활동을 보다 안전하고 효율적으로 제어할 수 있도록 한다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 AI 기반 자율 로봇의 실행 권한을 메타버스 환경 내 특이점을 중심으로 하는 계층적 주소 체계 (Multi-layer Hierarchical Addressing System) 를 이용하여 관리하고, 문제가 발생할 경우 특정 행성 또는 전체 시스템을 격리하는 특이점 네트워크 격리(Singularity Network Isolation) 기능을 제공함으로써 다음과 같은 효과를 달성할 수 있다. 1. AI 로봇의 안전성과 신뢰성 향상 본 발명은 AI 로봇의 활동을 메타버스 내 행성 단위로 분리하여 관리하며, 문제가 발생할 경우 해당 행성 또는 전체 네트워크를 격리함으로써 AI 로봇의 폭주, 해킹, 예상치 못한 오류로 인한 위험을 최소화할 수 있다. 특히, AI 로봇이 허가된 범위를 벗어나거나 비정상적인 행동을 수행할 경우, 3단계 보안 프로토콜을 적용하여 자동으로 탐지, 제한, 격리하는 기능을 제공한다. 이를 통해 AI 로봇의 안전성을 확보하고, 사용자가 보다 신뢰 할 수 있는 시스템을 제공할 수 있다. 2. 특이점을 중심으로 한 일괄 제어 기능 본 발명은 특이점을 기준으로 전체 메타버스 시스템의 모든 객체를 일괄적으로 제어할 수 있는 기능을 제공 한다. 특이점은 모든 메타버스 행성, 지역, 객체를 통합 관리하는 기준점 역할을 하며, 특이점 네트워크 격 리 기능을 통해 전체 시스템을 즉시 격리하거나, 문제가 발생한 특정 행성만을 선택적으로 격리할 수 있다. 이 를 통해, 단순히 개별 객체를 제어하는 것을 넘어서, 시스템 전체의 안전성을 보장할 수 있는 일괄 제어 메커니 즘을 구현할 수 있다. 3. 유연한 대응 및 복구 기능 제공 본 발명은 부분 격리와 전체 격리를 모두 구현하여, 문제 발생 시 유연하게 대응할 수 있는 장점을 가진다. 특 정 행성에서 문제가 발생할 경우 해당 행성만 격리함으로써 다른 행성이나 시스템 전체에 영향을 미치지 않고도 안전성을 확보할 수 있다. 또한, 전체 네트워크를 격리하는 경우에도, 문제가 해결된 후에는 재구성 모드 (Reconfiguration Mode) 를 통해 격리된 행성 또는 객체를 안전하게 복구할 수 있는 기능을 제공한다. 이와 같 은 복구 기능은 기존 기술에서 구현하기 어려웠던 다중 단계의 문제 해결 프로세스(탐지 → 제한 → 격리 → 복 구) 를 가능하게 한다. 4. AI 로봇의 자율성과 안전성의 균형 확보 본 발명은 AI 로봇의 자율성을 유지하면서도, 필요할 경우 특정 행성 또는 전체 네트워크를 격리하여 안전성을 확보할 수 있는 기능을 제공한다. 특히, AI 로봇의 활동을 메타버스 내에서 사전 검증하거나 모니터링함으로써, 현실 세계에서 발생할 수 있는 위험을 최소화할 수 있다. 이 시스템은 AI 로봇의 자율성과 안전성을 동시에 확 보할 수 있는 독창적인 기술을 제공하며, 다양한 산업 분야(자율주행, 군사, 제조, 의료 등)에 응용할 수 있다. 5. 기존 메타버스 포털 서비스 시스템과의 기술적 연계성 강화 본 발명은 2022년 2월 11일 출원된 원출원 '메타버스 포털 서비스 시스템'의 기술사상을 응용한 응용발명으로서, 메타버스 환경 내에서 AI 로봇의 활동을 보다 안전하고 효율적으로 관리할 수 있는 기술적 기 반을 제공한다. 특히, 원출원 발명에서 정의된 특이점을 기준으로 하는 계층적 주소 체계를 응용하여 네트워 크 전반을 통제하고, 문제가 발생할 경우 전체 시스템을 격리할 수 있는 기능을 구현하였다. 이로써 원출원 발 명의 기본 개념을 더욱 발전시키고, AI 로봇의 운영 안정성을 강화할 수 있는 새로운 기술적 가치를 제공한다. 6. 산업적 활용 가능성 및 확장성 본 발명은 다양한 산업 분야에서 활용될 수 있는 높은 확장성을 가진다. 예를 들어, 자율주행 차량, 드론, 군사 로봇, 산업용 로봇 등의 AI 기반 자동화 시스템의 안전성을 확보하는 데 유용하다. 의료 로봇, 교육용 로봇 등 사람의 안전이 중요한 분야에서도 AI 로봇의 폭주나 예기치 못한 오류를 방지하는 기술로 적용할 수 있다. 메타 버스 환경 내에서 다양한 AI 객체를 관리하고, 문제가 발생할 경우 신속하게 격리하여 시스템 전체의 안전성을 유지할 수 있는 방법으로 응용할 수 있다. 7. 기존 기술과의 차별성 및 진보성 확보 본 발명은 기존 메타버스 시스템 또는 AI 로봇 제어 기술에서 제공하지 못했던 네트워크 차단 및 격리 기능을 특이점 기반으로 구현함으로써, 독창적이고 진보적인 기술을 제공한다. 특히, 특이점을 중심으로 하는 일괄 제어 메커니즘과 3단계 보안 프로토콜을 통한 자동화된 문제 해결 시스템은 기존 기술과 명확히 구별되는 특징 을 가진다. 본 발명은 이와 같은 다양한 효과를 통해 AI 기반 자율 로봇의 안전성과 신뢰성을 극대화하고, 메타 버스 환경 내에서의 네트워크 관리 및 보안 체계를 강화하는 데 기여할 수 있다."}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "1. 발명의 구성 요소 및 시스템 구조 본 발명은 AI 기반 자율 로봇의 실행 권한을 메타버스 내 행성 단위로 분리하여 관리하고, 문제가 발생할 경우 해당 행성만을 격리하거나 특이점 네트워크 격리(Singularity Network Isolation)를 통해 전체 시스템을 비활성 화하는 방식으로 AI 로봇의 활동을 제어하는 시스템을 제공한다. 본 발명은 특이점을 중심으로 하는 계층적 주소 체계(Multi-layer Hierarchical Addressing System) 를 기반으로 하여 메타버스 환경을 구성하며, 원출원발명인 '메타버스 포털 서비스 시스템'의 기술사상을 응용하여 보다 구체적이고 안전하게 운영될 수 있도록 설 계되었다. 2. 특이점 기반 계층적 주소 체계(Hierarchical Addressing System) 본 발명에서 사용되는 특이점 기반 계층적 주소 체계는 다음과 같이 구성된다. 계층적 주소 체계의 정의 및 구현 방법 가. 특이점: 모든 메타버스 객체의 기준점이 되는 중앙 지점으로, 전체 시스템의 주소 체계 및 데이터 흐름 을 통제하는 역할을 담당한다. 나. 행성(Planet): 메타버스 내에서 각기 다른 AI 로봇의 활동 영역을 구분하기 위해 설정된 단위이다. 예를 들 어, 자율주행 자동차는 '자율운송 행성(Autonomous Transport Planet)'에 배치되고, 군사 로봇은 '방위산업 행 성(Military Robotics Planet)'에 배치된다. 다. 지역(Region): 행성 내에서 추가로 구분된 하위 단위로, AI 로봇의 활동 범위를 더욱 세분화하여 관리할 수 있도록 한다. 라. 특정 장소(Location): 각 지역 내에서 더욱 세밀하게 지정된 장소로, AI 로봇의 활동을 제한하거나 특정 활 동을 허용할 수 있는 단위이다. 마. 제조업자(Manufacturer) 및 개별 장치(Device): AI 로봇이 생성된 출처 및 개별 장치를 식별하기 위한 단위 로, 메타버스 내 특정 객체를 정확히 구분할 수 있도록 한다. 예시로서, AI 로봇 'Device_X'가 행성 'Planet_A', 지역 'Region_1'에 위치하는 경우, 해당 로봇의 주소는 다 음과 같이 정의된다. 표 1 AI 로봇의 계층적 주소 정의 예시 0:Planet_A:Region_1:Device_X 본 발명에서의 계층적 주소 체계는 다음과 같은 Python 프로그램 코드를 통해 구현될 수 있다. 표 2계층적 주소 체계 구현을 위한 Python 프로그램 코드 예시 class AddressNode: def __init__(self, name, parent=None): self.name = name self.parent = parent self.children = {} def add_child(self, name): child_node = AddressNode(name, self) self.children[name] = child_node return child_node def get_full_address(self): if self.parent: return f\"{self.parent.get_full_address()}:{self.name}\" return self.name # 특이점을 중심으로 계층 구조 생성 singularity = AddressNode(\"0\") # 특이점 planet_A = singularity.add_child(\"Planet_A\") # 행성 A region_1 = planet_A.add_child(\"Region_1\") # 지역 1 device_X = region_1.add_child(\"Device_X\") # 특정 장치 X # 전체 주소 출력 예시 print(device_X.get_full_address()) # 출력 결과: 0:Planet_A:Region_1:Device_X 이 프로그램은 AI 로봇이 특정 계층에 위치하고 있으며, 해당 계층 내에서만 활동할 수 있음을 의미한다. 이 계 층적 주소 체계는 AI 로봇의 활동을 효율적으로 관리하고, 문제가 발생할 경우 특정 계층 또는 행성 단위로 격 리할 수 있는 구조를 제공한다. 3. 블록체인 기반 데이터 기록 및 검증 본 발명은 AI 기반 자율 로봇의 실행 로그와 네트워크 활동을 블록체인 기반으로 실시간 기록 및 검증하는 시스 템을 포함한다. 이 시스템은 블록체인 서버를 중심으로, 특이점과 연결된 메타버스 행성 내 AI 로봇 의 모든 활동을 안전하게 기록하고 무결성을 검증한다. 블록체인 서버는 본부와 연결되며, 모든 AI 로봇의 활동 로그를 실시간으로 기록하고 데이터의 무결성을 보장하는 역할을 수행한다. 블록체인 데이터 기 록 과정은 다음과 같이 구성된다; 데이터 기록 단계(Logging Stage) AI 로봇의 모든 네트워크 활동 로그를 블록체인 서버에 실시간으로 기록한다. 블록체인 기록은 해시 함수(Hash Function)를 사용하여 데이터가 변조되지 않도록 암호화되며, Merkle Tree 구조로 저장된다. 각 로그 데이터는 장치 아이디 테이블 및 서비스 사업자 테이블과 연계하여 저장된다. 무결성 검증 단계(Integrity Verification Stage) 블록체인 서버는 일정 주기마다 로그 데이터의 해시 값을 검증하여 데이터 변조 여부를 확인한다. 블록체 인 구조의 특성상, 해시 값이 변조되면 즉시 오류를 탐지할 수 있으며, 데이터의 무결성을 보장할 수 있다. 이상 동작 발생 시 대응 (Error Detection & Response Stage) 만약 블록체인 데이터 검증 과정에서 이상이 발견되거나, AI 로봇이 예상치 못한 동작을 수행할 경우 경고 메시지가 생성된다. 본부는 해당 AI 로봇의 활동을 제한하거나, 필요 시 행성 단위로 격리(Planet Isolation) 조치를 취한다. 문제가 심각할 경우, 특이점 셧다운(Singularity Shutdown)을 실행하여 메타버스 전 체를 비활성화하고 모든 AI 로봇의 작동을 즉시 중지시킬 수 있다.다음의 프로그램 코드 예시는 AI 로봇의 활동 로그를 블록체인 서버에 기록하고, 무결성을 검증하는 과정 을 구현한 것이다. 표 3 블록체인 기반 데이터 기록 및 무결성 검증 구현을 위한 Python 코드 예시 import hashlib import time class Blockchain: def __init__(self): self.chain = [] self.current_data = [] self.create_block(previous_hash='0') # Genesis block def create_block(self, previous_hash): block = { 'index': len(self.chain) + 1, 'timestamp': time.time(), 'data': self.current_data, 'previous_hash': previous_hash, 'hash': self.hash_block(self.current_data, previous_hash) } self.current_data = [] self.chain.append(block) return block def add_data(self, data): self.current_data.append(data) def hash_block(self, data, previous_hash): block_string = str(data) + previous_hash return hashlib.sha256(block_string.encode()).hexdigest() def verify_integrity(self): for i in range(1, len(self.chain)): previous_block = self.chain[i - 1] current_block = self.chain[i] if current_block['previous_hash'] != previous_block['hash']: return False if current_block['hash'] != self.hash_block(current_block['data'], current_block['previous_hash']): return False return True # 예시 사용법 blockchain = Blockchain() # AI 로봇의 활동 로그 기록 blockchain.add_data({\"robot_id\": \"AI_001\", \"activity\": \"Move to Zone A\"}) blockchain.create_block(blockchain.chain[-1]['hash']) blockchain.add_data({\"robot_id\": \"AI_001\", \"activity\": \"Collect Data\"}) blockchain.create_block(blockchain.chain[-1]['hash'])# 블록체인 무결성 검증 is_valid = blockchain.verify_integrity() print(\"블록체인의 무결성 확인 결과:\", \"정상\" if is_valid else \"오류 발생\") # 블록체인 무결성 검증 is_valid = blockchain.verify_integrity() print(\"블록체인의 무결성 확인 결과:\", \"정상\" if is_valid else \"오류 발생\") 블록체인 기반 로그 데이터 기록 및 검증의 효과 본 발명에서 블록체인 서버를 사용하여 AI 로봇의 활동 로그를 기록하고 검증하는 방식은 다음과 같은 효 과를 제공한다; 가. 데이터 무결성 보장 : 블록체인 구조를 사용하여 AI 로봇의 모든 활동 로그를 저장하기 때문에, 데이터 변 조나 손실을 방지할 수 있다. 블록체인 내의 로그 데이터는 해시 함수를 통해 암호화되며, Merkle Tree 구조로 저장되어 데이터의 일관성을 유지한다. 나. 신속한 문제 탐지 및 대응 : AI 로봇의 활동이 정상적으로 기록되고 있는지를 주기적으로 확인함으로써, 비 인가된 접근이나 예상치 못한 동작을 신속히 탐지할 수 있다. 문제가 발생할 경우, 블록체인 데이터의 무결성 검증을 통해 오류 원인을 즉시 파악할 수 있다. 다. 특이점 네트워크 격리 시스템과의 연계 : 블록체인 서버는 특이점과 연결된 모든 메타버스 행성을 모니터링하며, 문제가 발생한 경우 즉각적으로 행성 단위로 격리할 수 있다. 4. AI 로봇의 3단계 보안 프로토콜 본 발명은 AI 로봇의 활동을 모니터링하고, 문제가 발생할 경우 단계별로 대응하는 3단계 보안 프로토콜을 제공 한다. 보안 프로토콜의 구성 요소 가. 비정상 동작 탐지 및 자동 경고 (1단계) AI 로봇의 활동을 실시간으로 모니터링하며, 사전 정의된 보안 정책을 위반하거나 비인가된 작업을 수행할 경우 자동으로 경고 메시지를 출력한다. 나. 기능 제한 및 AI 행동 로그 분석 (2단계) 경고 메시지가 출력된 후, AI 로봇의 기능을 제한하고 해당 로봇의 행동 로그를 분석하여 문제의 원인을 파악한 다. 다. 네트워크 연결 차단 및 관리자 개입 요구 (3단계) 문제가 지속되거나 심각하다고 판단되는 경우, 해당 AI 로봇의 네트워크 연결을 차단하고, 관리자가 개입하여 문제를 해결할 수 있도록 조치를 취한다. 표 4AI 로봇의 보안 프로토콜 적용 및 동작 제어 구현 위한 Python 코드 예시 import time import logging logging.basicConfig(level=logging.INFO) class AIRobot: def __init__(self, robot_id, allowed_zones): self.robot_id = robot_id self.allowed_zones = allowed_zones self.current_zone = None self.log = [] def move_to(self, zone): self.current_zone = zone logging.info(f\"Robot {self.robot_id} moved to zone: {zone}\") self.log.append((time.time(), zone)) self.apply_security_protocol(zone) def apply_security_protocol(self, zone): if zone not in self.allowed_zones: self.alert() self.restrict() self.shutdown() def alert(self): logging.warning(f\"Robot {self.robot_id} triggered ALERT at zone {self.current_zone}.\") def restrict(self): logging.warning(f\"Robot {self.robot_id} activity restricted in zone {self.current_zone}.\") def shutdown(self): logging.error(f\"Robot {self.robot_id} is SHUTDOWN due to unauthorized activity.\") self.current_zone = None # 로봇 생성 및 동작 예시 robot = AIRobot(\"Robot_001\", allowed_zones=[\"Zone_A\", \"Zone_B\"]) robot.move_to(\"Zone_A\") # 허용된 구역 robot.move_to(\"Zone_C\") # 허가되지 않은 구역 5. 특이점 네트워크 격리(Singularity Network Isolation) 개념 및 설계 목적 특이점 네트워크 격리 기능은 특이점을 중심으로 하는 계층적 주소 체계 전체를 제어하고, 문제가 발생할 경 우 특정 행성, 지역 또는 전체 네트워크를 격리하여 안전성을 확보하는 기술이다. 이 시스템은 AI 로봇의 폭주, 해킹 공격, 예상치 못한 시스템 오류 등으로 인한 위험을 최소화하기 위해 설계되었다. 특히, 원출원 발명(메타 버스 포털 서비스 시스템)에서 정의된 특이점 을 중심으로 한 계층적 주소 체계를 기반으로 하여, 네트워크 상의 모든 객체를 특정 지점으로부터 일괄적으로 제어할 수 있다. 특이점 네트워크 격리의 주요 기능 가. 부분 격리 (Partial Isolation) : 문제 발생 지점(행성 또는 특정 지역)만을 선택적으로 격리한다. 예를 들 어, 자율주행 차량의 AI가 폭주하는 경우, 해당 차량이 배치된 ‘자율운송 행성’만 격리하여 다른 영역에 영향 을 미치지 않도록 한다. 격리된 행성은 네트워크 연결이 차단되며, 사용자 접근이 불가능하게 된다. 나. 전체 격리 (Total Isolation) : 특이점을 기준으로 모든 행성 및 객체를 동시에 격리하는 기능이다. 긴 급 상황(예: 대규모 해킹 공격, 시스템 전반의 오류 발생 등) 발생 시 전체 시스템을 일괄적으로 격리하여 안전 성을 확보한다. 모든 AI 로봇 및 IoT 장치의 작동을 즉시 중단하고, 네트워크 연결을 차단한다. 다. 재구성 모드 (Reconfiguration Mode) : 격리된 행성 또는 시스템을 복구하기 위한 모드로, 관리자가 시스템 을 점검하고 안전성을 확인한 후 다시 활성화할 수 있도록 설계된다. 네트워크 재구성 과정에서 문제가 발생했 던 객체 또는 영역을 우선적으로 검증하여, 안전성을 확보한 뒤 전체 네트워크에 복귀시킨다. 표 5특이점 네트워크 격리 및 복구 시스템 구현을 위한 Python 코드 예시 import logging logging.basicConfig(level=logging.INFO) class NetworkManager: def __init__(self): self.active_zones = {} # 활성화된 행성 또는 지역 self.shutdown_mode = False # 전체 격리 모드 여부 self.singularity = \"0\" # 특이점 def add_zone(self, zone_name): if not self.shutdown_mode: self.active_zones[zone_name] = True logging.info(f\"Zone '{zone_name}' is now ACTIVE.\") def isolate_zone(self, zone_name): if zone_name in self.active_zones: del self.active_zones[zone_name] logging.warning(f\"Zone '{zone_name}' has been ISOLATED.\") def activate_total_isolation(self): self.shutdown_mode = True self.active_zones.clear() logging.error(\"TOTAL ISOLATION ACTIVATED: ALL ZONES ARE SHUTDOWN.\") logging.error(f\"Singularity ({self.singularity}) has isolated all zones for safety.\") def reconfigure_zone(self, zone_name): if self.shutdown_mode: logging.info(f\"Cannot reconfigure zone '{zone_name}' while in TOTAL ISOLATION mode.\") return if zone_name not in self.active_zones: self.active_zones[zone_name] = True logging.info(f\"Zone '{zone_name}' has been RECONFIGURED and reactivated.\") def list_active_zones(self): return list(self.active_zones.keys())"}
{"patent_id": "10-2025-0040787", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "def is_active(self, zone_name): return self.active_zones.get(zone_name, False) # 예시 사용법 network = NetworkManager()# 새로운 행성을 추가 network.add_zone(\"Planet_A\") network.add_zone(\"Planet_B\") network.add_zone(\"Planet_C\") # 특정 행성을 격리 network.isolate_zone(\"Planet_B\") # 전체 네트워크 격리 (특이점 기준 격리) network.activate_total_isolation() # 전체 격리 상태에서 특정 행성을 다시 활성화하려고 할 경우 network.reconfigure_zone(\"Planet_B\") # 전체 격리 해제 후 행성 복구 network.shutdown_mode = False # 전체 격리 모드 해제 network.reconfigure_zone(\"Planet_B\") # 격리된 행성 복구 # 활성화된 행성 확인 active_zones = network.list_active_zones() logging.info(f\"Currently active zones: {active_zones}\") 표 6 특이점 네트워크 격리 시스템의 주요 함수 설명 및 기능 구현 개요 add_zone(): 새로운 행성 또는 지역을 활성화 상태로 추가한다. isolate_zone(): 특정 행성을 격리한다. (네트워크 차단) activate_total_isolation(): 전체 네트워크를 즉시 격리한다. (특이점 기준 격리) reconfigure_zone(): 격리된 행성 또는 지역을 재구성하여 활성화한다. list_active_zones(): 현재 활성화된 행성 또는 지역의 목록을 반환한다. is_active(): 특정 행성이 활성화 상태인지 확인한다. 본 발명에서 구현된 특이점 네트워크 격리 기능은 원출원 발명(메타버스 포털 서비스 시스템)에서 정의된 특이점을 기준으로 하여 전체 시스템을 제어하고, 필요에 따라 전체 또는 일부를 격리할 수 있는 안전한 제 어 시스템을 제공한다. 특히, 부분 격리와 전체 격리를 모두 구현함으로써, 위험 상황에 따른 유연한 대응이 가 능하다. 산업상 이용가능성 본 발명은 메타버스 환경에서 AI 객체 및 자율 로봇의 실행 권한을 안전하게 관리하고, 비정상적인 행동을 신속 하게 탐지·차단하는 네트워크 제어 시스템을 제공하는 것으로, 다양한 산업 분야에서 폭넓게 활용될 수 있다. 특히, 본 발명은 메타버스 환경과 현실 세계를 연계하여 AI 객체의 운영을 보다 안전하고 효율적으로 관리할 수 있는 기술적 기반을 제공한다. 1. 자율주행 시스템 (Autonomous Driving Systems) 본 발명은 자율주행 자동차, 드론, 물류 로봇 등 AI 기반의 자율주행 시스템에 적용될 수 있다. AI 객체의 실행 권한을 메타버스 내 가상의 행성으로 매핑하고, 문제 발생 시 해당 행성만 격리하여 네트워크 상에서 안전하게 차단할 수 있기 때문에, 예기치 못한 오류나 해킹으로 인한 사고를 효과적으로 방지할 수 있다. 또한, 각 자율 주행 시스템의 의사결정 과정을 메타버스에서 사전에 시뮬레이션하여 검증할 수 있으므로 안전성과 신뢰성을 크 게 향상시킬 수 있다.2. 스마트 팩토리 및 산업 자동화 (Smart Factory & Industrial Automation) 본 발명은 산업 현장에서 사용되는 다양한 로봇 및 자동화 기기에 적용될 수 있다. 특히, 스마트 팩토리 환경에 서 복수의 로봇이 협업하여 작업을 수행하는 경우, 특정 로봇이 오류를 발생시키더라도 본 발명의 시스템을 통 해 해당 로봇만 격리하여 전체 공정의 안전성을 유지할 수 있다. 또한, 각 로봇의 실행 데이터를 메타버스 내의 특정 행성에서 사전 검증하고 모니터링할 수 있어, 생산 효율성을 향상시킬 수 있다. 3. 군사 및 보안 시스템 (Military & Security Systems) 본 발명은 군사 로봇, 무인 감시 시스템, 드론 방어 시스템 등 보안성이 중요한 분야에서도 활용될 수 있다. 특 히, 군사 로봇이나 감시 드론의 자율성을 유지하면서도 예기치 못한 오작동이나 해킹 시도를 신속하게 탐지하고 격리할 수 있는 기능은 보안성이 중요한 분야에서 매우 유용하다. 메타버스 환경 내에서 위험성을 사전에 시뮬 레이션하고, 필요 시 격리하는 기능을 통해 안전성을 더욱 강화할 수 있다. 4. AI 기반 금융 및 데이터 분석 시스템 (AI-based Financial & Data Analysis Systems) 본 발명은 AI 객체가 금융 데이터를 분석하거나 거래를 수행하는 시스템에서도 활용될 수 있다. 예를 들어, AI 기반 금융 어드바이저가 사용자 데이터를 학습하여 자동으로 투자 결정을 내리는 경우, 본 발명을 활용하면 예 기치 않은 오류나 외부 해킹에 의해 잘못된 명령을 수행할 위험을 효과적으로 방지할 수 있다. 또한, 금융 데이 터의 신뢰성을 평가하고, 의사결정 과정을 메타버스에서 사전에 검증할 수 있어 보안성을 강화할 수 있다. 5. 스마트 홈 및 IoT 시스템 (Smart Home & IoT Systems) 본 발명은 스마트 홈 환경에서 IoT 기기 및 AI 객체의 안전성을 강화하는 데에도 활용될 수 있다. 예를 들어, 가정 내의 다양한 IoT 기기(스마트 조명, 냉장고, 보안 카메라 등)가 메타버스 내에서 관리되고, AI 객체를 통 해 자동으로 제어될 때, 비정상적인 동작이나 해킹 시도를 감지하여 차단할 수 있는 기능은 스마트 홈 환경의 안전성을 크게 향상시킬 수 있다. 6. 교육 및 원격 협업 시스템 (Education & Remote Collaboration Systems) 본 발명은 교육 및 원격 협업 시스템에서도 활용될 수 있다. 예를 들어, AI 기반 강사 객체가 학생의 학습 데이 터를 분석하여 맞춤형 교육을 제공하는 경우, 메타버스 내에서 학습 데이터를 안전하게 관리하고, 필요 시 특정 객체만 격리하여 문제를 해결할 수 있다. 또한, 원격 협업 환경에서 AI 객체가 비정상적으로 작동하는 경우, 해 당 객체만 격리하여 전체 시스템의 안전성을 유지할 수 있다. 7. 환경 모니터링 및 에너지 관리 시스템 (Environmental Monitoring & Energy Management Systems) 본 발명은 AI 객체가 환경 데이터를 수집하고 분석하는 시스템에도 적용될 수 있다. 예를 들어, 대기 오염 감지 드론이나 기후 모니터링 로봇이 특정 행성으로 매핑되어 운영되는 경우, 데이터 수집 과정에서 오류가 발생하거 나 외부의 악의적인 공격이 감지되면, 해당 객체만 격리하여 문제를 해결할 수 있다. 이를 통해 환경 모니터링 시스템의 신뢰성을 강화하고, 보다 정확한 데이터를 제공할 수 있다. 8. 의료 및 헬스케어 시스템 (Healthcare Systems) AI 기반 의료 로봇이나 진단 시스템에 본 발명을 적용하면, 비정상적인 동작이나 데이터 조작을 효과적으로 감 지하고 격리할 수 있다. 특히, 원격 의료 환경에서 AI 객체가 잘못된 진단을 내리거나, 의료 데이터를 외부로 유출하는 것을 방지할 수 있어, 의료 안전성을 크게 향상시킬 수 있다. 9. 메타버스 기반의 디지털 경제 및 콘텐츠 관리 (Digital Economy & Content Management in Metaverse) 본 발명은 메타버스 기반의 디지털 경제에서도 중요한 역할을 할 수 있다. 예를 들어, 가상 자산의 거래, 디지 털 아이템의 제작 및 판매, NFT 기반 예술품의 인증 및 거래 과정에서 발생할 수 있는 보안 문제를 해결할 수 있다. AI 객체가 비정상적으로 작동하거나, 특정 메타버스 환경에서 예기치 않은 오류가 발생할 경우, 본 발명 의 시스템을 통해 신속히 문제를 격리하고 대응할 수 있다. 본 발명은 AI 객체 및 자율 로봇의 안전성과 신뢰성을 강화하기 위한 핵심 기술로서, 다양한 산업 분야에서 활 용될 수 있는 높은 응용 가능성을 가진다. 또한, 메타버스 환경과 현실 세계를 연계하여 안전하고 효율적인 AI 시스템 운영을 구현할 수 있는 기술적 기반을 제공한다. 부호의 설명본 발명에서 사용되는 각 구성 요소의 참조 부호는 다음과 같으며, 도면에서 동일한 부호는 동일한 요소를 나타 낸다; 표 7 특이점과 메타버스 행성 간의 관계 도면 구성 요소 부호설명 0특이점 (Singularity) - 메타버스 전체의 중심 기준점이며, 모든 행성 및 객체의 접근과 데 이터를 통합 관리함. 1메타버스 포털 서비스 시스템 - 전체 시스템을 운영하고 메타버스 환경 내 행성과 객체를 관 리하는 포털 시스템. 11본부 (Server Hub) - 서버와 데이터베이스(111, 112)를 포함하며, 전체 시스템의 핵심 제어 기능을 담당. 110블록체인 서버 (Server) - AI 로봇의 활동 로그를 실시간으로 기록하며, 데이터의 무결성을 검증하는 역할을 수행한다. 모든 로그 데이터는 블록체인 형태로 저장되며, 무결성 검증을 위해 주기적으로 해시 값을 확인한다. 111장치 아이디 테이블 (Device ID Table) - AI 로봇에 부여된 고유 식별 정보를 저장하는 데이터베이스. 블록체인 서버와 연동되어 각 AI 로봇의 로그 데이터를 식별할 수 있도 록 구성된다. 112메타버스 서비스 사업자 테이블 (Metaverse Service Provider Table) - 메타버스 환경 내에 서 운영되는 각 서비스의 사업자 정보를 저장하는 데이터베이스 .블록체인 서버와 연계 하여 각 사업자의 데이터 무결성을 검증하는 기능을 포함한다. 30사용자 조작부 (User Input Device) - 사용자가 메타버스를 조작할 수 있는 입력 장치. 터치 스크린, 키보드, 마우스, VR 컨트롤러 등의 다양한 인터페이스를 포함한다. 100AI 객체 (AI Entity) - 메타버스 내에서 독립적으로 작동하거나 사용자의 명령을 수행하는 인공지능 기반 객체로서, 특정 행성에 배치되어 네트워크로 연결됨. 78자율운송 행성 (Autonomous Transport Planet) - 자율주행 자동차 및 운송 관련 AI 객체가 배치되는 행성. 79드론 네트워크 행성 (Drone Network Planet) - 드론 및 항공 관련 AI 객체가 배치되는 행성. 80스마트 팩토리 행성 (Smart Factory Planet) - 산업용 로봇 및 제조 관련 AI 객체가 배치되 는 행성.도면 도면1 도면2 도면3"}
{"patent_id": "10-2025-0040787", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 : 본 도면은 특이점을 중심으로 메타버스 행성(Planet) 간의 관계 및 블록체인 데이터 기록 구조를 시 각적으로 나타낸 것이다. 특이점은 메타버스 내 모든 행성과 객체를 계층적으로 배치하고 관리하는 기준점 역할을 수행한다. 메타버스 내의 개별 행성(예: 자율운송 행성, 드론 네트워크 행성, 스마트 팩토리 행성, 방위 산업 행성)은 특이점을 기준으로 연결되며, 각 행성은 독립적으로 AI 로봇의 활동을 모니터링하고, 이상 동 작 발생 시 격리(Planet Isolation)할 수 있는 기능을 포함한다. AI 로봇은 메타버스 내의 특정 행성에 배 치되며, 블록체인 서버를 통해 실행 로그가 실시간으로 기록된다. 블록체인 서버는 본부와 연결 되어 있으며, 모든 AI 로봇의 실행 로그와 데이터는 장치 아이디 테이블 및 서비스 사업자 테이블에 등록된 정보와 연계하여 저장된다. 블록체인 데이터 기록 과정은 다음의 절차로 구성된다; 데이터 기록 단계: AI 로봇의 모든 네트워크 활동 로그를 블록체인 서버에 실시간으로 기록한다. 해 당 기록은 해시 함수(Hash Function)를 통해 암호화되고, Merkle Tree 구조로 저장된다. 무결성 검증 단계: 블록체인 서버는 주기적으로 로그 데이터의 해시 값을 검증하여 데이터 변조 여부를 확 인한다. 이를 통해 AI 로봇의 활동 기록이 신뢰성 있게 저장되었는지를 검증한다. 이상 동작 발생 시 대응 단계: 로그 데이터의 변조 또는 이상 동작이 감지되면, 해당 행성을 자동으로 격리하고 본부에 경고 메시지를 전송한다. 도 2 : 본 도면은 AI 로봇의 네트워크 활동이 블록체인 서버에 기록되고, 데이터 무결성을 검증하는 과정 을 상세히 나타낸 것이다. 블록체인 데이터 기록 및 검증 프로세스는 다음과 같은 단계로 구성된다; 로그 데이터 수집 단계 : AI 로봇은 메타버스 행성 내에서 활동하며 발생하는 모든 데이터(예: 이동 경로, 작업 내역, 의사결정 과정)를 실시간으로 수집한다. 수집된 데이터는 본부로 전송되며, 블록체인 서버(11 0)에 저장된다. 블록체인 기록 단계 : 블록체인 서버는 데이터의 무결성을 보장하기 위해 다음과 같은 방식으로 데이터를 기록한다; 데이터를 해시 함수(Hash Function)로 변환하여 암호화. Merkle Tree 구조로 데이터를 저장하고, 블록체인 내의 블록에 포함. 각 블록은 이전 블록의 해시 값을 포함하여 데이터의 연속성을 유지. 기록된 데이터는 장치 아이디 테이블 및 서비스 사업자 테이블에 등록된 정보와 연계하여 저장된다. 무결성 검증 단계 : 블록체인 서버는 정기적으로 해시 값을 확인하여 데이터 변조 여부를 검증한다. 만약 해시 값이 변조되었다면, 블록체인 구조상 오류가 발생하며 이를 탐지할 수 있다. 이상 동작 감지 및 대응 단계 : 블록체인 데이터의 무결성 검증 과정에서 이상이 발견되거나, AI 로봇이 예상치 못한 동작을 수행할 경우 경고 메시지가 생성된다. 경고 메시지가 발생하면 본부는 해당 AI 로봇의 활동을 제한하거나, 필요한 경우 행성 단위로 격리(Planet Isolation) 조치를 취한다. 만약 문제가 심각할 경우, 특이점 셧다운(Singularity Shutdown)을 실행하여 메타버스 전체를 비활성화하고 모든 AI 로봇의 작동을 중지시킨다. 도 3 : 본 발명의 3단계 보안 프로토콜의 흐름도를 나타낸 도면으로서, AI 객체의 이상 행동을 탐지하고 격리하기 위해 적용되는 보안 절차를 단계적으로 설명한다. AI 객체의 동작을 실시간으로 모니터링하여, 경고 및 탐지(1단계), 기능 제한 및 로그 분석(2단계), 네트워크 격리 및 관리자 개입(3단계)의 단계를 순차적 으로 수행한다."}
