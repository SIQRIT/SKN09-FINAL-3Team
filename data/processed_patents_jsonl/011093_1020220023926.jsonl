{"patent_id": "10-2022-0023926", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0126578", "출원번호": "10-2022-0023926", "발명의 명칭": "데이터 활용을 위한 데이터 모델 설계 방법", "출원인": "김기창", "발명자": "김기창"}}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "기존 시스템에서 사용되는 AS-IS 모델의 구조를 효율적으로 변경하여 TO-BE 모델을 생성하고, 기존에 사용하던데이터를 그대로 보존하고 지속적으로 사용하도록 하는 개선 모델링,AS-IS 모델에 존재하지 않는 신규 요건인 TO-BE 요건을 TO-BE 모델 및 AS-IS 모델에 반영하는 신규 모델링 및모델을 검증하고 정제할 패턴을 적용해 주기적으로 수행하는 보완 모델링을 포함하여 모델링들이 서로 유기적으로 연동된 데이터 리모델링 방법에 있어서,상기 개선 모델링은,기존 데이터가 저장되는 데이터베이스인 AS-IS DB(100); 를 포함하고,AS-IS 모델인 AS-IS ERD를 생성하는 AS-IS ERD 생성수단(110); 을 포함하며,TO-BE 모델을 생성하는 TO-BE 모델 생성수단(120); 및AS-IS 모델과 TO-BE 모델이 저장되는 모델 저장소(200)(Model Repository); 를 포함하는 것을 특징으로 하며,상기 신규 모델링은,시스템에 반영된 요건이 누락되지 않도록 하는 TO-BE 요구사항 반영수단(400); 을 포함하고,상기 TO-BE 요구사항 반영수단은,AS-IS 모델에 존재하지 않는 TO-BE 요건이 TO-BE 모델에 반영되도록 TO-BE 요구사항을 TO-BE 모델 생성수단(120)에 전달하며,시스템 구축 중에 이미 반영된 TO-BE 요건을 체크하여 신규 모델링에 반영되도록 TO-BE 모델 생성수단(120)에전달하는 것을 특징으로 하고,상기 보완 모델링은,표준데이터가 등록되는 메타 데이터 저장소(210)(Meta Data Repository); 를 포함하고,주기적으로 데이터 모델을 개선하기 위해 TO-BE 모델을 검증하는 모델 품질 검증수단(310); 을 포함하며,데이터 구조 및 데이터 값에 대한 품질을 검증, 보완하는 표준 검증수단(300); 을 포함하고,상기 모델 품질 검증수단(310)은,상기 메타 데이터 저장소(210)에 저장된 표준 콘텐츠인 상기 표준데이터와 모델 콘텐츠인 CASE 툴의 ERD 메타데이터를 활용하여 TO-BE 모델을 주기적으로 검증하고, 데이터 모델 정제 패턴을 DQ(DATA Quality) 업무 규칙요소로 관리하는 것을 특징으로 하며,상기 표준 검증수단(300)은,데이터 모델에서 지정된 소정의 모델 정제 대상을 관리하여 데이터 값에 대한 품질을 검증, 보완하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 AS-IS ERD 생성수단(110)은,상기 AS-IS DB(100)에서 데이터 딕셔너리를 추출하고, 상기 기존 시스템에서 사용 중인 SQL을 추출하고 조인 구공개특허 10-2023-0126578-3-문을 분석해서 도출한 엔터티 간의 관계를 업데이트하여 AS-IS ERD를 생성하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 TO-BE 모델 생성수단(120)은,데이터 이행 효율성을 높이기 위해, 복수의 매핑 유형에 따라 ERD 모델의 노트 정보를 저장하고, 엔터티와속성, 코드 매핑정의서를 저장하고, 데이터 이행 SQL을 자동으로 추출하는 것을 특징으로 하는 데이터 리모델링방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 AS-IS ERD 생성수단(110)은,상기 AS-IS ERD를 생성시에 컬럼을 분리(Parsing)하여 한글명과의 매핑을 통해 사전 표준화를 완료하고 데이터표준화를 진행하여,상기 데이터 표준화에 소요되는 시간을 단축하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 개선 모델링은,모델링 수행 전의 준비단계에서 사전 모델링을 수행하는 것을 특징으로 하고,상기 사전 모델링은,AS-IS 주제영역을 정의하고 영역별 리버스 모델을 생성하며,모델링 지침서와 표준화 지침서를 생성하고,AS-IS 공통 코드 목록을 생성하며,공통 코드 값 프로파일링을 하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 개선 모델링은,코드명을 통해 유사성을 판단하여 코드의 통합여부를 결정하는 코드 표준화를 포함하는 것을 특징으로 하며,상기 코드 표준화는,코드 인스턴스를 비교하여 코드 값의 중복율이 50% 이상인 데이터를 바탕으로 코드 통합 설계하는 방법을 포함하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2023-0126578-4-제 6 항에 있어서,상기 코드 표준화는,코드 표준화를 통해 코드 오너십을 정리하며,주요 엔터티로 구성된 상위 수준의 논리 모델을 확정하고,구축 도중에 추가된 신규 요구사항을 반영하는 과정을 통해 모델 설계 단계와 구축 개발 단계가 유기적으로 연계되도록 하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 데이터 리모델링 방법은,데이터 이동에 따른 추적과 데이터 흐름을 효과적으로 관리하기 위해, 업무계 모델을 정보계 모델로 설계하면서엔터티 연계나 데이터 이행을 수월하게 하는 방법을 포함하는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1항에 있어서,상기 소정의 모델 정제 대상은,업무 식별자, 중복 속성, 추출 속성, 배타 속성, 배타 관계로 구비되는 것을 특징으로 하는 데이터 리모델링 방법."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 데이터 활용을 위한 데이터 모델 설계 방법에 관한 것으로, 상세하게는 업무에서 발생한 데이터를 저 장하는 장소인 테이블을 설계하는 방법을 체계화한 것으로 개선 모델링, 신규 모델링, 보완 모델링이 유기적으로 연동된 리모델링 기법에 대한 것이다. (뒷면에 계속)"}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 데이터 활용을 위한 데이터 모델 설계 방법에 관한 것으로, 상세하게는 업무에서 발생한 데이터를 저 장하는 장소인 테이블을 설계(이하 데이터 모델 설계)하는 방법을 체계화한 것으로 개선 모델링, 신규 모델링, 보완 모델링이 유기적으로 연동된 리모델링 기법에 대한 것이다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "빅데이터의 활용이 일상을 넘어 기업이나 국가의 생존과 연관되는 시대에 아무리 데이터가 많아도 사용할 수 없 는 데이터라면 의미가 없을 것이며, 데이터의 집을 설계하는 데이터 모델링이 허술하다면 오히려 많은 데이터로 인해 혼란만 가중될 것이다. 이렇게 데이터 자체의 품질이 나빠져서 사용할 수 없게 되는 근본적인 문제와 품질이 나쁜 데이터를 사용함으로 써 발생하는 문제를 최소화하기 위해서 축적된 데이터를 적절하게 활용할 수 있도록 하는 데이터 모델링 기술의 필요성이 대두되고 있고, 기존에 보유하고 있는 데이터를 품질 좋은 데이터로 활용하기 위한 방법이 점차 중요 해지고 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 선행문헌 1: 대한민국 공개특허 10-2015-0010655호(2015.01.28. 공개) (특허문헌 0002) 선행문헌 2: 대한민국 공개특허 10-2012-0078908호(2012.07.11. 공개)"}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 기술적 목적은 상기 문제점을 해결하기 위한 것으로, 데이터 자체가 품질이 나빠서 사용할 수 없게 되는 근본적인 문제와 품질이 나쁜 데이터를 사용함으로써 발생하는 문제를 최소화하기 위해 본 발명에서 데이 터 리모델링 방법을 제시한다. 본 발명에서 제안하는 데이터 리모델링 방법을 사용하면 많은 경험에 의해 도출된 모델링 절차를 따르게 되므로 우선 데이터 모델을 신속하게 설계할 수 있다. 데이터 모델이 빨리 완성될수록 시스템 개발에 활용할 수 있는 기간이 늘어나는 것이기 때문에 튼튼한 시스템을 만드는 데 많은 도움을 준다. 또한 다양한 검증 방법을 통해 데이터 모델의 품질을 높일 수 있으며, 이는 데이터 자체의 품질을 높이는 역할 을 한다. 즉 데이터 모델을 빠르고 정확하게 설계할 수 있으며 높은 품질의 데이터를 저장할 수 있다는 점이 데 이터 리모델링 방법의 특장점이다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은, 기존 시스템에서 사용되는 AS-IS 모델의 구조를 효율적으로 변경하여 TO-BE 모델을 생성하고, 기존 에 사용하던 데이터를 그대로 보존하고 지속적으로 사용하도록 하는 개선 모델링, AS-IS 모델에 존재하지 않는 신규 요건인 TO-BE 요건을 TO-BE 모델 및 AS-IS 모델에 반영하는 신규 모델링 및 모델을 검증하고 정제할 패턴을 적용해 주기적으로 수행하는 보완 모델링을 포함하여 모델링들이 서로 유기적으 로 연동된 데이터 리모델링 방법에 있어서, 개선 모델링은, 기존 데이터가 저장되는 데이터베이스인 AS-IS DB를 포함하고, AS-IS 모델인 AS-IS ERD를 생성하는 AS-IS ERD 생성수단을 포함하며, TO-BE 모델을 생성하는 TO-BE 모델 생성수단 및 AS-IS 모델과 TO-BE 모델이 저장되는 모델 저장소(Model Repository)를 포함하는 것을 특징으로 하며, 신규 모델링은, 시스템에 반영된 요건이 누락되지 않도록 하는 TO-BE 요구사항 반영수단을 포함하고, TO-BE 요구사항 반영수단은, AS-IS 모델에 존재하지 않는 TO-BE 요건이 TO-BE 모델에 반영되도록 TO-BE 요구사항을 TO-BE 모델 생성수단에 전달하며, 시스템 구축 중에 이미 반영된 TO-BE 요건을 체크하여 신규 모델링에 반영되도록 TO-BE 모델 생성수단에 전달하 는 것을 특징으로 하고, 보완 모델링은, 표준데이터가 등록되는 메타 데이터 저장소(Meta Data Repository)를 포함하고, 주기적으로 데이터 모델을 개선하기 위해 TO-BE 모델을 검증하는 모델 품질 검증수단; 을 포함하며, 데이터 구조 및 데이터 값에 대한 품질을 검증, 보완하는 표준 검증수단; 을 포함하고, 모델 품질 검증수단은, 메타 데이터 저장소에 저장된 표준 콘텐츠인 표준데이터와 모델 콘텐츠인 CASE 툴의 ERD 메타 데이터를 활용하 여 TO-BE 모델을 주기적으로 검증하고, 데이터 모델 정제 패턴을 DQ(DATA Quality) 업무 규칙 요소로 관리하는 것을 특징으로 하며, 표준 검증수단은, 데이터 모델에서 지정된 소정의 모델 정제 대상을 관리하여 데이터 값에 대한 품질을 검증, 보완하는 것을 특징 으로 하는 데이터 리모델링 방법. 또한, AS-IS ERD 생성수단은, AS-IS DB에서 데이터 딕셔너리를 추출하고, 기존 시스템에서 사용 중인 SQL을 추출하고 조인 구문을 분석해서 도출한 엔터티 간의 관계를 업데이트하여 AS-IS ERD를 생성하는 것을 특징으로 하는 데이터 리모델링 방법을 제 공한다. 또한, TO-BE 모델 생성수단은, 데이터 이행 효율성을 높이기 위해, 복수의 매핑 유형에 따라 ERD 모델의 노트 정보를 저장하고, 엔터티와 속성, 코드 매핑정의서를 저장하고, 데이터 이행 SQL을 자동으로 추출하는 것을 특징으로 하는 데이터 리모델링 방법을 제공한다. 또한, AS-IS ERD 생성수단은, AS-IS ERD를 생성시에 컬럼을 분리(Parsing)하여 한글명과의 매핑을 통해 사전 표준화를 완료하고 데이터 표준 화를 진행하여, 데이터 표준화에 소요되는 시간을 단축하는 것을 특징으로 하는 데이터 리모델링 방법을 제공한다. 또한, 개선 모델링은, 모델링 수행 전의 준비단계에서 사전 모델링을 수행하는 것을 특징으로 하고, 사전 모델링은, AS-IS 주제영역을 정의하고 영역별 리버스 모델을 생성하며, 모델링 지침서와 표준화 지침서를 생성하고, AS-IS 공통 코드 목록을 생성하며, 공통 코드 값 프로파일링을 하는 것을 특징으로 하는 데이터 리모델링 방법을 제공 한다. 또한, 개선 모델링은, 코드명을 통해 유사성을 판단하여 코드의 통합여부를 결정하는 코드 표준화를 포함하는 것을 특징으로 하며, 코드 표준화는, 코드 인스턴스를 비교하여 코드 값의 중복율이 50% 이상인 데이터를 바탕으로 코드 통합 설계하는 방법을 포함 하는 데이터 리모델링 방법을 제공한다. 또한, 코드 표준화는, 코드 표준화를 통해 코드 오너십을 정리하며, 주요 엔터티로 구성된 상위 수준의 논리 모델을 확정하고, 구축 도중에 추가된 신규 요구사항을 반영하는 과정을 통해 모델 설계 단계와 구축 개발 단계가 유기적으로 연계되도 록 하는 것을 특징으로 하는 데이터 리모델링 방법을 제공한다. 또한, 데이터 리모델링 방법은, 데이터 이동에 따른 추적과 데이터 흐름을 효과적으로 관리하기 위해, 업무계 모델을 정보계 모델로 설계하면서 엔터티 연계나 데이터 이행을 수월하게 하는 방법을 포함하는 것을 특징으로 하는 데이터 리모델링 방법을 제공 한다. 또한, 소정의 모델 정제 대상은, 업무 식별자, 중복 속성, 추출 속성, 배타 속성, 배타 관계로 구비되는 것을 특징으로 하는 데이터 리모델링 방 법을 제공한다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 데이터 리모델링 방법을 사용하여 데이터 모델을 구축하여 시스템을 운영하면 무엇보다 품질이 좋은 데이터를 확보할 수 있다는 점이 발명의 커다란 효과라 할 수 있다. 빅데이터나 AI 등의 최첨단 분야에서 데이터를 사용하려고 해도 데이터 자체의 품질이 떨어져 효용성이 거의 없는 경우가 많지만, 본 방법론을 따라 데이터 모델을 구축한다면 품질이 좋은 데이터를 확보할 수 있다. 또한 본 발명의 커다란 장점 중 하나는 기존에 업무를 수행하면서 사용했던 데이터를 그대로 사용할 수 있도록 하는 방법을 제시한 것인데, 이는 사업을 끊김이 없이 지속해서 할 수 있도록 하여 시스템 재구축으로 인한 부 작용을 최소화할 수 있도록 한다. 기존 데이터를 그대로 유지하면서 새로운 구조의 모델을 구축하는 일은 쉽지 않기 때문에 약간만 잘못돼도 많은 부작용이 생기는데 상호 유기적인 방법을 사용하여 부작용이 줄이면서 모델을 개선하는 효과를 볼 수 있도록 하 며, 더욱이 구축 프로젝트에서의 비용을 절감하는 효과를 볼 수 있다. 본 발명에서 언급한 대로 데이터 모델을 설계하면 시스템 구축의 효율성이 극대화될 수 있다. 빠른 시간 내에 정확히 모델을 설계하는 방법을 제시하며, 이는 결국 좋은 품질의 데이터를 획득하도록 하여 빅데이터나 인공지 능, 데이터 분석, 마이데이터 구축, 데이터 품질 지표 획득이나 정보 공개 활동 등 데이터 활용을 극대화하는 효과를 볼 수 있다. 데이터 모델 구축은 데이터 자체를 제대로 생성하기 위해 필수적인 수단이며, 이러한 데이터 모델 구축을 최우 선으로 생각하는 기업은 데이터 시장의 우위를 점할 수 있고, 이렇게 확보한 데이터 자체가 기업 경쟁력이기 때 문에 해당 기업은 든든한 사업 기반을 확보할 수 있다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 발명의 실시 예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가 진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현될 수 있 으며 이하에서 개시되는 실시 예에 한정되지 않는다. 또한 도면에서 본 발명을 명확하게 개시하기 위해서 본 발 명과 관계없는 부분은 생략하였으며, 도면에서 동일하거나 유사한 부호들은 동일하거나 유사한 구성요소들을 나 타낸다. 본 발명의 목적 및 효과는 하기의 설명에 의해서 자연스럽게 이해되거나 보다 분명해질 수 있으며, 하기의 기재 만으로 본 발명의 목적 및 효과가 제한되는 것은 아니다. 본 발명의 목적, 특징 및 장점은 다음의 상세한 설명을 통하여 보다 분명해질 것이다. 또한, 본 발명을 설명함 에 있어서 본 발명과 관련된 공지 기술에 대한 구체적인 설명이, 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략하기로 한다. 이하, 첨부된 도면을 참조하여 본 발명에 따른 실시예를 상세히 설명하기로 한다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명에 따른 데이터 리모델링 방법론에는 많은 단계가 존재하지만 요약하면 리모델링(remodeling) 방법이다. 리모델링 방법은 이미 건물이 존재하는 상태에서 시작하는 건축물의 리모델링과 마찬가지 개념으로, 현재 운영 하고 있는 시스템이 있고 업무에서 사용하던 데이터를 향후에도 그대로 사용해야 할 경우 적용하는 방법으로 대 부분의 시스템에서 사용할 수 있는 방법이다. 즉 현재 운영되는 시스템이 없는 경우라면 본 발명에 따른 데이터리모델링 방법론을 적용할 수 있는 경우에 해당하지 않는다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 3, "content": "도 1은 본 발명에 따른 데이터 리모델링의 핵심을 요약한 그림이다. 도 1을 참고하면, 본 발명에 따른 데이터 리모델링은 기존 시스템에서 사용되는 AS-IS 모델의 구조를 효율적으 로 변경하여 TO-BE 모델을 생성하고, 기존에 사용하던 데이터를 그대로 보존하고 지속적으로 사용하도록 하는 개선 모델링, AS-IS 모델에 존재하지 않는 신규 요건인 TO-BE 요건을 TO-BE 모델 및 AS-IS 모델에 반영하는 신규 모델링 및 모델을 검증하고 정제할 패턴을 적용해 주기적으로 수행하는 보완 모델링을 포함하여 상기 모델링들이 서로 유 기적으로 연동된 데이터 리모델링 방법이다. 한편, 개선 모델링은 기존 데이터 보존, 모델 구조 변경, 리버스 모델 생성, AS-IS 매핑 설계, 코드 표준화 및 사전 표준화와 같은 과정을 이용하여 개선 모델링을 진행하게 되며, 신규 모델링은 신규 요구사항 반영, 구축기 간 반영 신규 요건 도출 및 업무 영역 요건 최종 반영과 같은 과정을 통해 신규 모델링을 진행하고, 보완 모델 링은 모델 검증, 규칙 도출로 자동 수행, 명명 규칙 위반, 표준화 위반 및 모델 정제 패턴 도출과 같은 항목을 통해 보완 모델링을 진행하게 되고, 이하 상술한 각각의 모델링의 내용과 유기적인 연계과정을 설명하도록 한다. 도 2는 본 발명에 따른 데이터 리모델링의 개략도이다. 도 2를 참고하면, 본 발명에 따른 데이터 리모델링 방법 의 개선 모델링, 신규 모델링 및 보완 모델링이 진행되는 흐름을 확인할 수 있다. 데이터 리모델링은 AS-IS DB에서 데이터를 추출하여 AS-IS ERD 생성수단에서 AS-IS 모델인 AS-IS ERD를 생성하고, 생성된 AS-IS 모델은 모델 저장소에 저장되게 된다. 또한, 생성된 AS-IS 모델을 분석하여 개선 모델링을 통해 TO-BE 모델 생성수단에 전달하고, 신규 업무인 TO-BE 업무를 반영하기 위해 TO-BE 요 구사항을 TO-BE 모델 생성수단에 전달하여 진행하여 TO-BE 모델을 생성하게 된다. 이때 생성된 TO-BE 모델 은 모델 저장소 및 표준 검증수단에 전달되게 된다. 이때, 표준검증수단은 메타 데이터 저장소 에 저장된 메타 데이터를 전달받아 TO-BE 모델의 표준여부를 검증하고, 비표준인 경우 TO-BE 모델 생성수단 으로 피드백을 통해 TO-BE 모델을 개선하게 되고, 표준인 경우 데이터를 메타 데이터 저장소에 다시 전달하여 표준 데이터를 등록하게 된다. 또한, 모델 품질 검증수단은 모델 저장소에 저장된 TO-BE 모 델인 TO-BE ERD와 메타 데이터 저장소에 저장된 표준 데이터를 전달받아 보완 모델링을 수행하여 TO-BE 모 델의 완성도를 높이고 지속적으로 보완하게 된다. 도 2에서 확인할 수 있는 이와 같은 일련의 데이터 리모델링 방법을 수행하기 위해서, 개선 모델링은 AS-IS DB, AS-IS ERD 생성수단, TO-BE 모델 생성수단 및 모델 저장소를 포함하고, 신규 모델링 은 TO-BE 요구사항 반영수단을 포함하며, 보완 모델링은 메타 데이터 저장소, 모델 품질 검증수단 및 표준 검증수단을 포함하도록 구비되며, 이하 각 구성에 대하여 상세히 설명한다. 개선 모델링은, 기존 시스템에서 사용되는 AS-IS 모델의 구조를 효율적으로 변경하여 TO-BE 모델을 생성하고, 기존에 사용하던 데이터를 그대로 보존하고 지속적으로 사용하도록 하는 과정 및 방법을 의미한다. 상세하게, AS-IS 모델의 구조를 변경하며, 적절하지 않은 AS-IS 모델의 구조를 바꾸는 일이 가장 중요한 작업이다. 이와 같은 AS-IS 모델의 구조 변경에는, 데이터 통합, 정규화 또는 비정규화, 엔터티 분리 또는 합체, 주 식별자 정 제, 관계 정제 등이 포함된다. 개선 모델링은, 기존 데이터가 저장되어 데이터베이스를 이루는 AS-IS DB를 포함하고, AS-IS DB에 저 장된 데이터베이스에서 데이터 딕셔너리를 추출하여 AS-IS 모델을 생성하고, 기존 시스템에서 사용 중인 SQL을 추출하고 SQL의 조인 구문을 분석해서 도출한 엔터티 간의 관계를 반영하여 리버스 엔지니어링을 통해 리버스 모델인 AS-IS ERD를 생성하는 AS-IS ERD 생성수단을 포함한다. 또한, 개선 모델링을 통해 TO-BE 모델을 생성하는, TO-BE 모델 생성수단 및 AS-IS 모델과 TO-BE 모델이 등록되어 저장되는 모델 저장소(Model Repository)를 포함한다. AS-IS DB는 기존 시스템의 기존 데이터가 저장되어 데이터베이스를 이루는 구성이다. AS-IS ERD 생성수단은 AS-IS DB에 저장 되어있는 데이터베이스에서 데이터 딕셔너리를 추출하여 AS- IS 모델을 생성하고, 기존 시스템에서 사용 중인 SQL을 추출하고 상기 SQL의 조인 구문을 분석해서 도출한 엔터 티 간의 관계를 업데이트하여 리버스 엔지니어링을 통해 리버스 모델인 AS-IS ERD를 생성하는 구성이다. 결국최종적으로 AS-IS 모델인 AS-IS ERD를 생성하며, 생성된 AS-IS 모델은 모델 저장소에 저장된다. 또한, 이 후 과정에서 AS-IS ERD 생성수단을 통해 생성한 AS-IS 모델을 분석하고, 개선 모델링을 진행하여 TO-BE 모 델을 생성하게 된다. 한편, 본 발명에 따른 AS-IS ERD 생성수단은, AS-IS ERD를 생성시에 컬럼을 분리(Parsing)하여 한글명과의 매핑을 통해 사전 표준화를 완료하고 데이터 표준화가 진행되도록 하여 데이터 표준화에 소요되는 시간을 단축 하는 것을 특징으로 하도록 구비될 수 있다. 이와 같이 AS-IS 모델인 AS-IS ERD를 생성하고, 생성된 AS-IS ERD를 바탕으로 T0-BE 모델을 생성한다. 이때, AS-IS 데이터를 향후에도 사용하기 위해 ERD에 매핑 정보를 관리하면서 개선 모델링이 수행된다. 따라서, TO-BE 모델 및 신규 시스템을 생성하는 동안에도 기존 데이터베이스를 활용할 수 있으며 기존 업무에서 사용하던 데이 터를 향후에도 사용할 수 있다. 모델 저장소(Model Repository)는 AS-IS 모델과 TO-BE 모델이 등록되어 저장되는 구성이다. 모델 저장소에 AS-IS 모델과 TO-BE 모델을 저장하고, 필요시 저장된 해당 정보를 사용할 수 있고 또한, 저 장된 모델들을 후술할 보완 모델링에 사용할 수 있다. 도 3은 본 발명에 따른 개선 모델링의 상세 과정을 나타낸 도면이다. 도 3을 참고하면, 개선 모델링이 진행되는 과정이 AS-IS 업무계, TO-BE 업무계, TO-BE 정보계에서 어떻게 진행되는지 알 수 있다. 이하 개선 모델링의 과 정을 상세히 설명한다. AS-IS 업무계에서는 AS-IS 데이터를 리버스 모델링을 통해 딕셔너리를 추출하고 SQL 분석을 하여 AS-IS ERD를 생성하고 생성된 AS-IS ERD를 활용하여 TO-BE 업무계에서는 시스템구축 핵심단계인 리모델링과 데이터표준화를 진행하고, 리모델링에서는 엔터티 통합, 정규화, 주 식별자 정제 및 이력반영을 데이터 표준에서는 단어 표준, 용어 표준 및 코드 표준을 정리하게 되고, 이와 같은 시스템구축 핵심단계 진행을 통해 TO-BE ERD를 생성하게 된다. 또한, TO-BE 정보계에서는 생성된 AS-IS ERD와 TO-BE ERD를 정보계 매핑 정의서에 기록하게 되고, TO-BE ERD 노트도 정보계 매핑 정의서에 기록하게 된다. 즉, DB에서 스크립트를 통해 AS-IS 모델을 만드는 것으로 개선 모델링은 시작하고, 엔터티 통합과 정규화, 주 식별자 정제, 이력 반영 등을 통해 AS-IS ERD를 개선하며, 이때 표준 사전을 사용하여 데이터 표준화를 병행하 며, AS-IS 데이터를 향후에도 사용하기 위해 ERD에 매핑 정보를 관리면서 개선 모델링이 수행된다. 도 4는 본 발명에 따른 개선 모델링의 세부 절차를 나타낸 도면이다. 도 4를 참고하면 개선 모델링은 준비단계, 분석단계, 설계단계를 거쳐서 이뤄지게 되며, TO-BE 모델 생성수단은 이와 같은 개선 모델링을 통해 TO-BE 모델을 생성하는 구성이다. TO-BE 모델 생성수단은 데이터 이행 효율성을 높이기 위해, 복수의 매핑 유형에 따라 ERD 모델의 노트 정 보를 저장하고, 엔터티와 속성, 코드 매핑정의서를 저장하고, 데이터 이행 SQL을 자동으로 추출하는 것을 특징 으로 한다. 상기 복수의 매핑 유형은 다양하게 구성될 수 있으며, Union, Join, Concatenation, Split 등의 유 형으로 구성될 수 있다. 이와 같이 복수의 매핑 유형에 따라 ERD 모델의 노트 정보를 기술하여 엔터티와 속성, 코드 매핑정의서를 자동 으로 작성할 수 있게 하며 이행 SQL을 자동으로 추출하면, 데이터 이행 효율성을 획기적으로 높여서 기간을 단 축하고 인력을 덜 소모할 수 있다. TO-BE 모델 생성수단에서 이뤄지는 개선 모델링에 있어서, 준비단계는 자료준비 및 리버스 모델링을 통해 기존 데이터를 정리하는 단계이다. 해당 단계는 모델, 표준, 코 드로 구분되는 수행절차를 가진다. 모델 절차에서는 1. AS-IS 엔터티 및 속성 목록 작성, 2. 모델링 대상 엔터티 확정, 3. AS-IS 주제영역 정의, 4. AS-IS ERD 생성 및 5. 모델링 지침서 작성의 5가지 절차를 거치게 된다. 또한, 표준 절차에서는 1. 표준화 지침서 작성, 2. 표준 단어/도메인 도출의 2가지 절차를 거치게 된다. 마지막으로 코드 절차에서는 1. AS-IS 공통 코드목록 작성, 2. 공통코드 값 프로파일링의 절차를 거치게 된다. 준비단계는 일반적으로 프로젝트 착수 전 수행이 최선이며, 물론 프로젝트 착수 이후 진행될 수도 있으며 표준 화와 주제영역을 병행하여 진행되고, 코드 조사 및 수집을 진행하게 된다.이와 같은 준비단계의 수행절차를 거쳐 AS-IS ERD, 표준단어 정의서, 표준도메인 정의서, 데이터모델링 지침서, 데이터표준화 지침서 및 AS-IS 공통코드 정의서를 작성하여 산출물로 얻게 되며, 이를 분석단계에 활용하게 된 다. 분석단계는 현행모델을 분석하는 단계이다. 해당 단계는 수행절차에 따라 진행되며, 1. WBS 확정, TO-BE 주제영 역 정의, 3. 모델링 업무 분장, 4. 주요 엔터티 도출, 5. 주요 엔터티 속성 인터뷰, 6. 주요 엔터티 분석, 7. 데이터 요구사항 정의가 7가지의 분석단계를 통해 수행되고, 프로젝트의 정식 착수 시기는 일반적으로 분석단계 를 의미하며, 주요 엔터티는 전체 엔터티의 약 20% 정도를 차지할 수 있다. 이와 같은 수행 절차를 거쳐서 WBS, 요구사항 정의서, 주제영역 정의서, TO-BE 엔터티/속성 목록을 산출물로 확 정하게 되며, 이를 활용하여 다음 단계인 설계단계를 수행하게 된다. 설계단계는 주요 엔터티 설계와 전체 엔터티 설계의 두 단계로 이루어진다. 주요 엔터티 설계는 1. 주요엔터티 정의, 2. 주요 엔터티 통합, 3. 주요 엔터티 속성 표준화, 4. 주요 엔터티 간 관계 정의, 5. 데이터 요구사항 정의(최종)의 5가지 수행절차를 통해 수행되며 이를 통해 뼈대가 되는 개념 모델을 생성하게 된다. 일반적으로 전체 일정의 60% 정도를 소요할 수 있다. 또한, 전체 엔터티 설계는 1. 전체 엔터티 속성 인터뷰, 2. 주요 엔터티 설계 보강, 3. 전체 엔터티 정의, 4. 엔터티 통합, 5. 전체 속성 표준화, 6. 전체 관계 정의, 7. 공통 코드 정제, 8. 매핑 정의서 작성의 8가지 수행 절차를 통해 수행되어 표준지침에 따라 속성 표준화를 진행하고, 엔터티 정의에 비정규화를 포함하며 애플리케 이션 개발 단계의 전 단계의 역할을 한다. 이와 같은 수행 절차를 거쳐서 주요 엔터티 설계단계는 개념 모델을, 전체 엔터티 설계는 논리/물리 모델, 엔터 티/속성 정의서, 엔터티/속성 매핑 정의서, 공통코드 정의서, 표준용어 정의서, 데이터모델링 결과서를 산출물 로 산출하게 된다. 이처럼 준비단계, 분석단계 및 개발단계의 과정을 통해 개선 모델링을 진행하면 준비 단계에서 많은 준비를 선 행하여 시스템 개발 영역과의 단계를 맞출 일정의 지체함이 없이 개발 일정을 수월하게 진행할 수 있다는 장점 이 있으며, 개선 모델링을 위한 준비단계, 분석단계, 설계단계는 각 단계가 종료되고 나서 다음단계가 수행될 수 있고, 또는 이전단계에서 다음단계에 필요한 산출물이 산출되는 경우 해당 수행절차만 미리 수행되는 것도 가능하며, 필요에 따라 유동적인 순서와 흐름을 가질 수 있다. 다만, 몇몇 단계는 특정 단계가 종료되며 생성되 는 산출물을 바탕으로 진행하는 것이 바람직한 경우가 있으며, 이는 도 4에서 화살표로 표현되어 있다. 한편, 개념 모델을 우선적으로 도출한 후에 논리 모델, 물리 모델을 도출하는 것은 일반적인 모델링 방법론과 같다. 도 5는 본 발명에 따른 코드 표준화 과정을 나타낸 도면이다. 도 5를 참고하면, 개선 모델링 과정 중 AS-IS 공 통 코드목록 작성으로 시작하는 코드 표준화는 도 5의 내용과 같이 수행한다. 도 5를 참고하면, 코드 표준화는 준비, 분석, 설계의 3개 단계로 진행되며, 이하 각각의 단계에서 진행되는 세 부 단계를 설명한다. 준비 단계에서는 AS-IS 전체 속성도출 및 AS-IS 코드 목록 도출이 진행되고, 세부 단계인 AS-IS 전체 속성도출 단계에서는 DB에서 추출한 전체 속성을 기반으로 속성 명 초기 표준화를 진행하며, AS-IS 코드 목록 도출 단계 에서는 코드 테이블을 작성하여 메타시스템을 추출하게 된다. 분석 단계에서는 코드 속성 도출, 미사용 코드 도출, 개별 코드 분류, 코드 속성 프로파일링, AS-IS 코드 목록 에 프로파일링 반영 및 코드 오너십 지정을 진행하고, 세부 단계인 코드 속성 도출 단계에서는 코드, 유형 등으 로 끝나는 속성과 TP, TYPE 등으로 끝나는 컬럼을 기반으로 코드 속성을 도출하고, 미사용 코드 도출 단계에서 는 IT현업에 요청하여 미사용 코드를 도출하고, 필요시 지속적으로 계속 도출하게 되며, 개별 코드 분류 단계에 서는 공통 코드인지 개별 코드인지 구별하여 개별 코드는 제외하고, 코드 속성 프로파일링 단계에서는 DB 조회 로 속성별 코드 인스턴스를 추출하며, AS-IS 코드 목록에 프로파일 반영 단계에서는 앞서 분류한 공통 코드에 대해 속성 프로파일링을 수행하여 코드 인스턴스를 추출한 결과를 반영한 최종 AS-IS 코드 목록 파일을 생성하 고, 코드 오너십 지정 단계에서는 공통 코드에 대해 내부/외부를 포함하여 업무를 기준으로 코드 오너십을 지정 하게 된다. 설계 단계에서는 동일/유사 코드 인스턴스 추출, 개별 엔터티 설계 대상 도출, 코드간 관계 추출, 코드 매핑 정 의서 작성이 진행된다. 세부 단계인 동일/유사 코드 인스턴스 추출 단계에서는 동일/유사 코드 인스턴스를 추출 하여 통합 또는 분리를 검토하고, 개별 엔터티 설계 대상 도출 단계에서는 코드로 관리할 개별 코드를 도출하게 되며, 코드 간 관계추출 단계에서는 코드 인스턴스 간 포함/계층 관계 추출 및 개별 엔터티로 설계검토를 진행 하여 개별 엔터티 설계 대상을 도출하고, 코드 매핑 정의서 작성 단계에서는 AS-IS 코드 목록과 TO-BE 코드 목 록을 매핑하여 코드 매핑 정의서를 작성하게 된다. 이와 같은 코드 표준화 과정을 거쳐 표준화된 코드에 대한 코드 매핑 정의서를 작성하여 AS-IS 코드와 TO-BE 코 드의 매핑을 통해 기존 데이터를 활용할 수 있으며, 두 정보를 연계할 수 있다. 도 2는 본 발명에 따른 데이터 리모델링의 개략도이고, 도 6은 TO-BE 요건 반영 프로세스를 도식화한 도면이다. 도 2 및 도 6을 참고하면, 신규 모델링은 현재 시스템에 없는 요구사항을 TO-BE 모델에 반영하는 것을 의미한다. TO-BE 요구사항을 반영하기 위해서는 AS-IS 모델의 구조를 개선한 개선 모델링이 먼저 수행돼야 한다. 따라서 개선 모델링 수행 후 TO-BE 요구사항을 반영하는 신규 모델링이 끝나면 최종적으로 TO-BE 모델이 생성되는 것이다. 신규 모델링은 TO-BE 요구사항 반영수단을 포함하여 구성되어 TO-BE 요건이 TO-BE 모델에 반영되게 한다. TO-BE 요구사항 반영수단은, 시스템에 반영된 요건이 누락되지 않도록 AS-IS 모델에 존재하지 않는 TO-BE 요건을 반영하고, 시스템 구축 중에 이미 반영된 TO-BE 요건을 찾아 신규 모델링에 반영하는 구성이며, 이를 위 해 TO-BE 요구사항 반영수단에서 TO-BE 모델 생성수단에 TO-BE 요건을 전달하며, 시스템 구축 중에 이미 반영된 TO-BE 요건을 체크하여 신규 모델링에 반영될 수 있도록 TO-BE 생성수단에 전달하게 된다. 한편, TO-BE 요건이 도출되는 시기가 가장 뒤쪽에 해당되어 어떻게 TO-BE 요건을 반영하는 지가 신규 모델링의 핵심이며, 이하 해당 TO-BE 요건 반영 방법을 설명한다. 도 6은 TO-BE 요건 반영 프로세스를 나타낸 도면이고, 도 6을 참고하면 TO-BE 요건이 도출되어 반영될 때, 현재 까지 도출된 TO-BE 모델에 바로 반영하는 순수 TO-BE 요건이 있고, 이는 업무팀에서 도출하기 때문에 분석 단계 후반에 알 수 있으며, 이와 같이 TO-BE 요건을 반영하는 도 6의 3번 과정이 신규 모델링을 나타낸다. 신규 모델링은 상술한 바와 같이 현재까지 도출된 TO-BE모델에 반영되기 때 때문에, 이는 업무팀에서 TO-BE 요 건을 이미 도출한 경우에도 TO-BE 모델의 뼈대가 완성되기 까지는 기다려야 한다는 것을 의미한다. 따라서 TO- BE 요건이 미리 도출되어도 TO-BE 모델이 어느 정도 성숙된 후에 신규 모델링이 진행된다. 한편, 시스템을 구축하는 중에도 업무는 수행되며, 신규 업무인 TO-BE 업무가 AS-IS 시스템에 반영된다. 이런 TO-BE 업무가 AS-IS 모델에 반영되는 과정이 도 6의 2번 과정이다. 또한, AS-IS 모델을 TO-BE 모델로 개선하는 과정인 개선 모델링 과정이 도 6의 1번 과정으로 표현되어 있다. 따라서 도 6의 1번과 2번 과정은 결과적으로 개선 모델링에 포함되는 과정으로 구축 프로젝트 기간 중에 2번 과 정을 수행할 때는 전체 과정의 연계에 있어서 주의가 필요하다. 주기적으로 변경된 모델을 찾아서 업무 설계자 와 협의하여 변경된 모델이 2번 과정에 포함되도록 해야 한다. AS-IS 모델을 개선하는 과정인 1번과 2번 과정을 진행하고, TO-BE 요건을 반영하는 3번 과정인 신규 모델링을 거쳐 TO-BE 모델이 완성되게 되고 이 모델은 모델 저장소에 등록되게 된다. 보완 모델링은 TO-BE 요구사항을 반영하는 신규 모델링이 끝난 최종 TO-BE 모델에 각종 검증 방법을 동원해서 모델의 품질을 높이는 단계를 의미한다. 이 활동은 대부분 자동으로 추출하기 때문에 규칙을 정할 수 있는 부분 이 해당된다. 즉 모델링의 본질에 해당하는 엔터티 자체를 잘못 도출한 것 등은 수작업으로 밖에는 추출할 수 없기 때문에 규칙에 의해 추출하는 보완 모델링에 해당되지 않는다. 명명 규칙 위반이나 표준화 위반, 패턴에 의한 모델 정제 대상 등이 이에 해당되며, 도 3에서 볼 수 있듯이 모 델 품질 검증을 거처 보완 모델링은 시스템이 구축돼 운영되는 중에도 지속적으로 수행할 수 있다. 보완 모델링은 모델 메타 데이터 저장소, 표준 검증수단 및 모델 품질 검증수단을 포함하여 구 성된다. 메타 데이터 저장소는 표준데이터가 등록되는 구성으로, 메타 데이터 저장소에서 보관하는 표준 데이 터를 활용하여 보완 모델링을 진행하게 된다. 모델 품질 검증수단은 주기적으로 데이터 모델을 개선하기 위해 TO-BE 모델을 검증하는 구성이다. 표준 검증수단은 데이터 구조 및 데이터 값에 대한 품질을 검증, 보완하는 구성이다. 상기 구성들을 통해, 보완 모델링이 진행되는 개략적인 방법으로, 모델 품질 검증수단은 표준 데이터를 관 리하는 메타 데이터 저장소와 연동하여 표준에 어긋나는 엔터티나 속성 등의 정보를 추출하고, CASE 툴에 서 제공하는 검증 방법 및 ERD 메타 데이터를 활용하여 ERD 검증을 진행하며, DQ 시스템과 연동하여 업무 규칙 (Business Rule)에 등록된 모델 검증 요소를 추출하여 모델 반영하는 과정에 의해 진행된다. 또한, 표준 검증수단은, 데이터 모델에서 업무 식별자, 중복 속성, 추출 속성, 배타 속성, 배타 관계 등으 로 구비될 수 있는 소정의 모델 정제 대상을 지정 및 관리하여 데이터 구조 및 데이터 값에 대한 품질을 손쉽게 확인하고 검증, 보완할 수 있도록 할 수 있다. 보완 모델링은 표준 콘텐츠와 모델 콘텐츠가 DB에서 관리되어야 수행 가능하며, 이때, 표준 콘텐츠인 표준 데이 터는 메타 데이터 저장소에 보관되며, 모델 콘텐츠는 개선 모델링 단계에서 모델 저장소에 저장되어 보관된다. 또한, 보완 모델링은 기계적으로 추출하는 것에 기반을 두기 때문에 주기적으로 반복해서 진행되고, 이는 시스템의 주기적인 보완으로 이어진다. 한편, 본 발명에 따른 개선 모델링은, 모델링 수행 전의 준비단계에서 사전 모델링을 수행하는 것을 특징으로 하도록 구비될 수 있고, 사전 모델링은, AS-IS 주제영역을 정의하고 영역별 리버스 모델을 생성하며, 모델링 지침서와 표준화 지침서를 작성하여 가이드를 마련하고 AS-IS 공통 코드 목록을 작성하고 공통 코드 값 프로파일링을 하도록 구비될 수 있 다. 이와 같은 사전 모델링을 수행하면 리모델링에 소모되는 시간을 절감하는 효과가 있다. 또한, 본 발명에 따른 개선 모델링은, 코드명을 통해 유사성을 판단하여 코드의 통합여부를 판단하도록 하는 코드 표준화를 포함하는 것을 특징으로 하며, 코드 표준화는, 코드 인스턴스를 비교하여 코드값의 중복율이 50% 이상인 데이터를 바탕으로 코드 통합 설계를 검토하는 방법을 포함할 수 있다. 코드값의 중복율이 50% 이상인 데이터를 바탕으로 대상을 선정하면 후보가 완전히 누락되는 것을 방지할 수 있 으며, 코드값의 중복율을 낮춰서 대상을 선정하면 후보가 누락될 확률은 줄어들 수 있지만, 지나치게 데이터의 범위가 늘어나게 되어 분석에 많은 시간이 필요하게 된다. 한편, 분석 시간이 부족한 경우 코드값의 중복율을 90% 이상인 데이터를 바탕으로 후보를 타이트하게 선정하여 적은 수를 분석하는 것도 가능 하지만, 이때는 데이 터가 후보에서 누락될 가능성이 존재하기 때문에, 50% 이상의 코드값 중복율을 기준으로 코드 통합 설계를 검토 하는 것이 바람직하다. 또한, 코드 표준화는, 개발 일정의 지체 없이 수월하게 신규 시스템을 구축하도록 코드 표준화를 통해 코드 오너십을 정리하며 주요 엔터티로 구성된 상위 수준의 논리 모델 확정과 구축 도중에 추가된 신규 요구사항 반영 등 모델 설계 단계와 구축 개발 단계가 유기적으로 연계될 수 있도록 하는 것을 특징으로 할 수 있다. 한편, 데이터 리모델링 방법은, AS-IS 모델을 TO-BE 모델로 설계하면서 데이터 이행을 수월하게 하는 방법과 같 이 업무계 모델을 정보계 모델로 설계하면서 엔터티 연계나 데이터 이행을 수월하게 만들고, 업무계 데이터와 정보계 데이터를 이어서 관리하도록 하여 데이터 이동에 따른 추적과 데이터 흐름을 효과적으로 관리할 수 있도 록 구비될 수 있다. ERD 모델 내에 AS-IS 데이터를 관리하면서 모델링을 수행하는데, 복수의 매핑 유형에 따라 ERD 모델을 설계한 후에 ETL 솔루션을 사용하여 ETL SQL을 자동으로 생성하는 방법으로 모델링 단계와 ETL 단계의 단절을 방지하여 ETL의 효율성(인력/기간)을 제고할 수 있게 된다. 상세하게, AS-IS와 TO-BE 모델을 가장 잘 아는 모델러가 ERD를 설계하면서 매핑 수행을 하고, 매핑 정의를 감안 하고 작업을 해서 SQL 작성 시간을 극적으로 줄일 수 있으며, 모델러의 매핑 정의가 ETL 담당자에게 SQL로 전달 돼 단계의 단절을 없애게 된다. 또한, ERD를 설계하면서 엔터티의 변화를 명확하게 인식할 수 있도록 Join, Concatenation, Split, Vertical 등 유형 별로 복수의 매핑 유형을 도출하여 각 유형 별로 모델러가 AS-IS 대비 TO-BE 모델에 따라 매핑 정보를 관리하면서 모델링 수행할 수 있다. 또한, ERD에서 기술된 AS-IS 데이터를 기반으로 ETL 관련 솔루션을 구축해서 ETL SQL을 자동으로 추출하여 ETL 인력의 필요를 줄이고, 소수의 인력이 자동 추출된 SQL을 확인 후에 실행하기 때문에 ETL 시간이 단축되어 비용 을 절감하는 효과가 있다. 상기한 본 발명의 바람직한 실시 예는 예시의 목적으로 개시된 것이고, 본 발명에 대해 통상의 지식을 가진 당 업자라면 본 발명의 사상과 범위 안에서 다양한 수정, 변경 및 부가가 가능할 것이며, 이러한 수정, 변경 및 부 가는 상기의 특허청구 범위에 속하는 것으로 보아야 할 것이다."}
{"patent_id": "10-2022-0023926", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "본 발명이 속하는 기술분야에서 통상의 지식을 가진 자라면, 본 발명의 기술적 사상을 벗어나지 않는 범위 내에 서, 여러 가지 치환, 변형 및 변경이 가능하므로, 본 발명은 전술한 실시 예 및 첨부된 도면에 의해 한정되는 것이 아니다. 상술한 예시적인 시스템에서, 방법들은 일련의 단계 또는 블록으로써 순서도를 기초로 설명되고 있지만, 본 발 명은 단계들의 순서에 한정되는 것은 아니며, 어떤 단계는 상술한 바와 다른 단계와 다른 순서로 또는 동시에 발생할 수 있다. 또한, 당업자라면 순서도에 나타낸 단계들이 배타적이지 않고, 다른 단계가 포함되거나 순서도 의 하나 또는 그 이상의 단계가 본 발명의 범위에 영향을 미치지 않고 삭제될 수 있음을 이해할 수 있을 것이다."}
{"patent_id": "10-2022-0023926", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 데이터 리모델링의 핵심을 요약한 도면이다. 도 2는 본 발명에 따른 데이터 리모델링의 개략도이다. 도 3은 본 발명에 따른 개선 모델링의 상세 과정을 나타낸 도면이다. 도 4는 본 발명에 따른 개선 모델링의 세부 절차를 나타낸 도면이다. 도 5는 본 발명에 따른 코드 표준화 과정을 나타낸 도면이다. 도 6은 TO-BE 요건 반영 프로세스를 도식화한 도면이다."}
