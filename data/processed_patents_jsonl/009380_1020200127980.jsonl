{"patent_id": "10-2020-0127980", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0045357", "출원번호": "10-2020-0127980", "발명의 명칭": "전자 장치 및 이의 제어 방법", "출원인": "삼성전자주식회사", "발명자": "이동수"}}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,제1 입력 데이터 및 신경망 모델의 연산에 이용되는 가중치 데이터를 저장하는 메모리; 및 상기 가중치 데이터를 부호(sign) 데이터와 스케일링 인자(scaling factor) 데이터의 조합으로 양자화(quantization)하여 양자화 데이터를 획득하는 프로세서;를 포함하고,상기 프로세서는,상기 제1 입력 데이터를 제1 모듈에 입력하여 상기 제1 입력 데이터에 포함된 입력 값들의 지수(exponent)가 동일한 값으로 변환된 제2 입력 데이터를 획득하고,상기 제2 입력 데이터 및 상기 부호 데이터를 제2 모듈에 입력하여, 상기 제2 입력 데이터에 포함된 입력 값의부호를 결정하고 상기 부호가 결정된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득하고,상기 제1 출력 데이터를 제3 모듈에 입력하여 상기 제1 출력 데이터에 포함된 출력 값을정규화(normalize)하고,상기 정규화된 출력 값이 포함된 데이터와 상기 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출력 데이터를 획득하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 제1 모델을 통해 상기 제1 입력 데이터에 포함된 입력 값들의 지수 중 최소 값을 식별하고, 상기 제1 입력데이터에 포함된 입력 값들의 지수를 상기 식별된 최소 값으로 변환하여 상기 제2 입력 데이터를 획득하는 전자장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 프로세서는,상기 제2 모듈을 통해 상기 부호 데이터에 포함된 -1 또는 1 중 하나를 상기 제2 입력 데이터에 포함된 입력 값에 적용하여 상기 제2 입력 데이터에 포함된 입력 값의 부호를 결정하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 제2 모듈은 시스톨릭 배열(systolic array)을 가지는 복수의 연산 모듈을 포함하고,상기 복수의 연산 모듈 각각은 부호 데이터를 이용하여 상기 제2 입력 데이터의 부호를 결정하는 부호 결정 회로 및 상기 부호가 결정된 제2 입력 데이터에 포함된 입력 값 간의 합 연산을 수행하는 연산 회로를 포함하는전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 프로세서는,공개특허 10-2022-0045357-3-상기 제2 입력 데이터 중 제1 입력 값 및 상기 부호 데이터 중 상기 제1 입력 값에 대응되는 부호 값을 상기 복수의 연산 모듈 중 제1 연산 모듈에 포함된 제1 부호 결정 회로에 입력하여 상기 제1 입력 값의 부호를 결정하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 프로세서는,상기 부호가 결정된 제1 입력 값 및 상기 시스톨릭 배열 상에서 상기 제1 연산 모듈의 상위에 배치된 제2 연산모듈에서 출력된 제2 입력 값을 상기 제1 연산 모듈 중 제1 연산 회로에 입력하여 상기 제1 입력 값 및 상기 제2 입력 값의 합산 값을 획득하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 프로세서는,상기 제1 출력 데이터에 포함된 출력 값의 가수(mantissa)의 첫째 자리가 기수(base)보다 작은 한자리 자연수가되도록 변경하여 상기 제1 출력 데이터에 포함된 출력 값을 정규화하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 스케일링 인자 및 상기 제1 입력 데이터 중 적어도 하나는 부동 소수점(floating point) 형태의 데이터로구현된 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는,상기 가중치 데이터를 k 개의 상기 부호 데이터 및 상기 스케일링 인자 데이터의 곱을 합산하는 방식으로 양자화하고,상기 k의 크기는 상기 신경망 모델의 연산을 수행할 때 요구되는 정확도 레벨에 기초하여 결정하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 입력 데이터 및 신경망 모델의 연산에 이용되는 가중치 데이터를 저장하는 메모리를 포함하는 전자 장치의제어 방법에 있어서,상기 가중치 데이터를 부호(sign) 데이터와 스케일링 인자(scaling factor) 데이터의 조합으로 양자화(quantization)하여 양자화 데이터를 획득하는 단계;상기 제1 입력 데이터를 제1 모듈에 입력하여 상기 제1 입력 데이터에 포함된 입력 값들의 지수(exponent)가 동일한 값으로 변환된 제2 입력 데이터를 획득하는 단계;상기 제2 입력 데이터 및 상기 부호 데이터를 제2 모듈에 입력하여, 상기 제2 입력 데이터에 포함된 입력 값의부호를 결정하고 상기 부호가 결정된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득하는 단계;상기 제1 출력 데이터를 제3 모듈에 입력하여 상기 제1 출력 데이터에 포함된 출력 값을 정규화(normalize)하는단계: 및상기 정규화된 출력 값이 포함된 데이터와 상기 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출력 데이터를 획득하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "공개특허 10-2022-0045357-4-제10항에 있어서,상기 제2 입력 데이터를 획득하는 단계는,상기 제1 모델을 통해 상기 제1 입력 데이터에 포함된 입력 값들의 지수 중 최소 값을 식별하고, 상기 제1 입력데이터에 포함된 입력 값들의 지수를 상기 식별된 최소 값으로 변환하여 상기 제2 입력 데이터를 획득하는단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 제1 출력 데이터를 획득하는 단계는,상기 제2 모듈을 통해 상기 부호 데이터에 포함된 -1 또는 1 중 하나를 상기 제2 입력 데이터에 포함된 입력 값에 적용하여 상기 제2 입력 데이터에 포함된 입력 값의 부호를 결정하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,상기 제2 모듈은 시스톨릭 배열(systolic array)을 가지는 복수의 연산 모듈을 포함하고,상기 복수의 연산 모듈 각각은 부호 데이터를 이용하여 상기 제2 입력 데이터의 부호를 결정하는 부호 결정 회로 및 상기 부호가 결정된 제2 입력 데이터에 포함된 입력 값 간의 합 연산을 수행하는 연산 회로를 포함하는것을 특징으로 하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 제1 출력 데이터를 획득하는 단계는,상기 제2 입력 데이터 중 제1 입력 값 및 상기 부호 데이터 중 상기 제1 입력 값에 대응되는 부호 값을 상기 복수의 연산 모듈 중 제1 연산 모듈에 포함된 제1 부호 결정 회로에 입력하여 상기 제1 입력 값의 부호를 결정하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 제1 출력 데이터를 획득하는 단계는,상기 부호가 결정된 제1 입력 값 및 상기 시스톨릭 배열 상에서 상기 제1 연산 모듈의 상위에 배치된 제2 연산모듈에서 출력된 제2 입력 값을 상기 제1 연산 모듈 중 제1 연산 회로에 입력하여 상기 제1 입력 값 및 상기 제2 입력 값의 합산 값을 획득하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서,상기 정규화하는 단계는,상기 제1 출력 데이터에 포함된 출력 값의 가수(mantissa)의 첫째 자리가 기수(base)보다 작은 한자리 자연수가되도록 변경하여 상기 제1 출력 데이터에 포함된 출력 값을 정규화하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,상기 스케일링 인자 및 상기 제1 입력 데이터 중 적어도 하나는 부동 소수점(floating point) 형태의 데이터로구현된 것을 특징으로 하는 제어 방법.공개특허 10-2022-0045357-5-청구항 18 제10항에 있어서,상기 양자화 데이터를 획득하는 단계는,상기 가중치 데이터를 k 개의 상기 부호 데이터 및 상기 스케일링 인자 데이터의 곱을 합산하는 방식으로 양자화하여 상기 양자화 데이터를 획득하는 단계;를 포함하고,상기 k의 크기는 상기 신경망 모델의 연산을 수행할 때 요구되는 정확도 레벨에 기초하여 결정하는 것을 특징으로 하는 제어 방법."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치 및 이의 제어 방법이 개시된다. 본 개시의 전자 장치는 제1 입력 데이터 및 신경망 모델의 연산에 이 용되는 가중치 데이터를 저장하는 메모리 및 가중치 데이터를 부호 데이터와 스케일링 인자 데이터의 조합으로 양자화하여 양자화 데이터를 획득하는 프로세서를 포함하고, 프로세서는 제1 입력 데이터를 제1 모듈에 입력하여 제1 입력 데이터에 포함된 입력 값들의 지수가 동일한 값으로 변환된 제2 입력 데이터를 획득하고, 제2 입력 데 이터 및 부호 데이터를 제2 모듈에 입력하여, 제2 입력 데이터에 포함된 입력 값의 부호를 결정하고 부호가 결정 된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득하고, 제1 출력 데이터를 제3 모듈에 입력하여 제1 출 력 데이터에 포함된 출력 값을 정규화하고, 정규화된 출력 값이 포함된 데이터와 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출력 데이터를 획득할 수 있따."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 이의 제어 방법에 관한 것으로서, 더욱 상세하게는 인공 지능 모델 상에서 가중치 및 입력 데이터에 대한 연산을 가속화하는 전자 장치 및 이의 제어 방법에 관한 것이다."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근, 인간 수준의 지능을 구현하는 인공 지능 시스템에 대한 개발 및 연구가 진행되고 있다. 인공 지능 시스템 이란 기존의 룰(rule) 기반 시스템과 달리 신경망 모델에 기반하여 학습 및 추론을 수행하는 시스템을 의미하며, 음성 인식, 이미지 인식 및 미래 예측 등과 같은 다양한 범위에서 활용되고 있다. 특히, 최근에는 딥 러닝(deep learning)에 기반한 딥 뉴럴 네트워크(deep neural network)를 통해 주어진 문제 를 해결하는 인공 지능 시스템이 개발되고 있다. 딥 뉴럴 네트워크는 입력 레이어(input layer)와 출력 레이어(output layer) 사이에 다수의 은닉 레이어(hidden layer)을 포함하는 뉴럴 네트워크로써, 각 레이어에 포함된 가중치 값과 입력 데이터 간의 연산을 통해 인공 지 능 기술을 구현하는 모델을 의미한다. 딥 뉴럴 네트워크는 정확한 결과 값을 도출해 내기 위해서 다수의 가중치 값들을 포함하는 것이 일반적이다. 한편, 딥 뉴럴 네트워크에 방대한 양의 가중치 값이 포함되어 있다는 점에서, 연산을 위해 필요한 리소스가 점 차 커진다는 문제가 발생한다. 또한, 딥 뉴럴 네트워크 상에 연산을 압축 또는 단순화할 경우, 연산의 정확도가 떨어질 수 있다는 문제가 발생한다."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 문제점을 해결하기 위해 안출된 것으로서, 본 개시의 목적은 인공 지능 기술에 기반하여 가중 치 데이터와 입력 데이터 간의 연산을 수행하는 전자 장치 및 이의 제어 방법에 관한 것이다."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시예에 따른, 전자 장치는 제1 입력 데이터 및 신경망 모델의 연산에 이용되는 가중치 데이터를 저장하는 메모리 및 상기 가중치 데이터를 부호(sign) 데이터와 스케일링 인자 데이터의 조합으로 양자화하여 양자화 데이터를 획득하는 프로세서를 포함하고, 상기 프로세서는, 상기 제1 입력 데이터를 제1 모듈에 입력하 여 상기 제1 입력 데이터에 포함된 입력 값들의 지수(exponent)가 동일한 값으로 변환된 제2 입력 데이터를 획 득하고, 상기 제2 입력 데이터 및 상기 부호 데이터를 제2 모듈에 입력하여, 상기 제2 입력 데이터에 포함된 입 력 값의 부호를 결정하고 상기 부호가 결정된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득하고, 상기 제1 출력 데이터를 제3 모듈에 입력하여 상기 제1 출력 데이터에 포함된 출력 값을 정규화하고, 상기 정규화된 출력 값이 포함된 데이터와 상기 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출력 데이터를 획득할 수 있다. 본 개시의 또 따른 실시예에 따른, 제1 입력 데이터 및 신경망 모델의 연산에 이용되는 가중치 데이터를 저장하 는 메모리를 포함하는 전자 장치의 제어 방법에 있어서, 상기 가중치 데이터를 부호(sign) 데이터와 스케일링 인자 데이터의 조합으로 양자화하여 양자화 데이터를 획득하는 단계, 상기 제1 입력 데이터를 제1 모듈에 입력 하여 상기 제1 입력 데이터에 포함된 입력 값들의 지수가 동일한 값으로 변환된 제2 입력 데이터를 획득하는 단 계, 상기 제2 입력 데이터 및 상기 부호 데이터를 제2 모듈에 입력하여, 상기 제2 입력 데이터에 포함된 입력 값의 부호를 결정하고 상기 부호가 결정된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득하는 단계; 상 기 제1 출력 데이터를 제3 모듈에 입력하여 상기 제1 출력 데이터에 포함된 출력 값을 정규화하는 단계 및 상기 정규화된 출력 값이 포함된 데이터와 상기 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출력 데이터를 획득하는 단계를 포함할 수 있다."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상술한 바와 같이 본 개시의 다양한 실시예에 의해, 전자 장치는 제한된 리소스를 포함된 단말 장치 상에서 가 중치 값과 입력 데이터 간에 연산을 효율적으로 수행할 수 있다."}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시는 가중치 데이터에 포함된 가중치 값을 양자화(quantization)하여 양자화 데이터를 획득하고, 전체 입 력 데이터의 지수(exponent)를 정렬한 데이터와 양자화 데이터 간의 연산을 수행하여 출력 데이터를 획득하는 전자 장치 및 이의 제어 방법에 관한 것이다. 본 개시의 전자 장치는 가중치 데이터를 부호(sign) 데이터와 스케일링 인자(scaling factor) 데이터로 양자화 함으로써, 가중치 데이터와 입력 데이터 간의 연산을 수행하기 위해 필요한 부동 소수점(floating-point) 곱셈 연산 과정을 줄일 수 있다. 또한, 전자 장치는 전체 입력 데이터의 지수를 정렬함으로써 입력 데이터와 가중치 데이터의 연산을 수행하기 위한 연산 모듈에 정수(integer) 기반의 덧셈(add) 회로만을 포함시킬 수 있다. 따라서, 전자 장치는 부동 소수 점을 가지는 입력 데이터와 가중치 데이터에 대한 출력 데이터를 획득하는 동안 정수 기반의 덧셈 회로를 주로 사용하여 연산의 효율성을 증가시킬 수 있다. 이하에서는 도면을 참조하여 본 개시에 대해 구체적으로 설명하도록 한다. 도 1은 본 개시의 일 실시예에 따른, 전자 장치의 구성을 간략히 도시한 블록도이다. 도 1에 도시된 바와 같이, 전자 장치는 메모리 및 프로세서를 포함할 수 있다. 다만, 도 1에 도시된 구성은 본 개시 의 실시 예들을 구현하기 위한 예시도이며, 통상의 기술자에게 자명한 수준의 적절한 하드웨어 및 소프트웨어 구성들이 전자 장치에 추가로 포함될 수 있다. 한편, 본 개시를 설명함에 있어서, 전자 장치는 신경망 모델(neural network model)(또는, 인공 지능 모델)의 학습, 압축 또는 신경망 모델을 이용하여 입력 데이터에 대한 출력 데이터를 획득하는 장치로써, 예를 들어, 전자 장치는 데스크탑 PC, 노트북, 스마트 폰, 태블릿 PC, 서버 등으로 구현될 수 있다. 또한, 전자 장치가 수행하는 각종 동작은 클라우딩 컴퓨팅 환경이 구축된 시스템에 의해 수행될 수 있다. 예를 들어, 클라우딩 컴퓨팅 환경이 구축된 시스템은 신경망 모델에 포함된 가중치를 양자화하고, 양자화된 데 이터와 입력 데이터 간의 연산을 수행할 수 있다. 메모리는 전자 장치의 적어도 하나의 다른 구성요소에 관계된 명령 또는 데이터를 저장할 수 있다. 그리고, 메모리는 프로세서에 의해 액세스되며, 프로세서에 의한 데이터의 독취/기록/수정/삭제 /갱신 등이 수행될 수 있다. 본 개시에서 메모리라는 용어는 메모리, 프로세서 내 롬(미도시), 램(미도시) 또는 전자 장치에 장착되는 메모리 카드(미도시)(예를 들어, micro SD 카드, 메모리 스틱)를 포함할 수 있다. 또한, 메모리 에는 디스플레이의 디스플레이 영역에 표시될 각종 화면을 구성하기 위한 프로그램 및 데이터 등이 저장될 수 있다. 그리고, 메모리는 전력 공급이 중단되더라도 저장된 정보를 유지할 수 있는 비휘발성 메모리 저장된 정보 를 유지하기 위해서는 지속적인 전력 공급이 필요한 휘발성 메모리를 포함할 수 있다. 예로, 비휘발성 메모리는 OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM 중 적어도 하나로 구현 될 수 있 고, 휘발성 메모리는 DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 중 적어도 하나로 구현될 수 있다. 메모리는 신경망 모델의 연산에 이용되는 가중치 데이터를 저장할 수 있다. 즉, 메모리는 신경망 모 델을 구성하는 복수의 레이어에 포함된 복수의 가중치 데이터를 저장할 수 있다. 가중치 데이터는 가중치 데이터에 포함된 복수의 가중치 값들을 포함할 수 있다. 이 때, 가중치 값은 n(n은 1 이상의 자연수) 비트의 부동 소수점(floating-point) 형태로 구현될 수 있다. 예를 들면, 가중치 데이터는 32 비트(bit)의 부동 소수점으로 구현될 수 있다. 가중치 데이터는 벡터, 행렬 또는 텐서 중 적어도 하나로 표현될 수 있다. 메모리는 가중치 데이터가 부호(sign) 데이터 및 스케일링 인자 데이터의 조합으로 양자화된 양자화 데이 터를 저장할 수 있다. 양자화 데이터는 가중치 데이터의 포맷에 따라 벡터, 매트릭스 또는 텐서 중 적어도 하나 로 표현될 수 있다. 부호 데이터는 스케일링 인자의 크기는 변경하지 않고 부호만을 결정할 수 있는 부호 값인 1 또는 -1을 포함할 수 있다. 스케일링 인자 데이터는 가중치 데이터의 형식과 마찬가지로 부동 소수점 형태(예를 들어, 32bit 부동 소수점 형태)로 표현될 수 있다. 가중치 데이터가 양자화되는 방식은 후술하는 부분에서 설명하도록 한다. 메모리는 다양한 유형의 입력 데이터를 저장할 수 있다. 예를 들면, 메모리는 마이크를 통해 입력된 음성 데이터, 입력부(예를 들어, 카메라, 키보드 등)를 통해 입력된 이미지 데이터 또는 텍스트 데이터 등을 저 장할 수 있다. 메모리에 저장된 입력 데이터는 외부 장치를 통해 수신된 데이터를 포함할 수 있다. 메모리는 제1 모듈, 제2 모듈 및 제3 모듈이 각종 동작을 수행하기 위해 필요한 데이터를 저 장할 수 있다. 제1 모듈, 제2 모듈 및 제3 모듈이 각종 동작을 수행하기 위해 필요한 데이터는 비 휘발성 메모리에 저장되어 있을 수 있다. 각 모듈에 대한 설명은 후술하는 부분에서 설명하도록 한다. 프로세서는 메모리와 전기적으로 연결되어 전자 장치의 전반적인 동작 및 기능을 제어할 수 있 다. 프로세서는 전자 장치의 동작을 제어하기 위해 하나 또는 복수의 프로세서로 구성될 수 있다. 프로세서는 제1 모듈, 제2 모듈 및 제3 모듈이 각종 동작을 수행하기 위해 필요한 데이터를 비휘발성 메모리에서 휘발성 메모리로 로딩(loading)할 수 있다. 로딩이란 프로세서가 액세스할 수 있도록 비휘발성 메모리에 저장된 데이터를 휘발성 메모리에 불러들여 저장하는 동작을 의미한다. 그리고, 휘발성 메모리는 프로세서의 일 구성 요소로서 프로세서에 포함된 형태로 구현될 수 있으나, 이는 일 실시예에 불과하며, 휘발성 메모리는 프로세서와 별개의 구성 요소로 구현될 수 있다. 프로세서는 가중치 데이터를 양자화하여 양자화 데이터를 획득할 수 있다. 가중치를 양자화한다는 것은 가 중치를 효율적으로 활용하기 위하여 가중치의 단위를 단순화하거나 다른 방식으로 표현한다는 것을 의미한다. 예를 들면, 프로세서는 가중치 데이터에 포함된 가중치 값들에 대해 이진 코드(binary coding) 방식의 양 자화를 수행하여 양자화 데이터를 획득할 수 있다. 그리고, 프로세서는 획득된 양자화 데이터를 메모리 에 저장할 수 있다. 가중치 값들에 대해 이진 코드 방식의 양자화를 수행한다는 것은 가중치 값을 부호 데 이터와 스케일링 인자 데이터의 조합으로 양자화한다는 것을 의미한다. 예로, k(k는 1 이상의 자연수) 비트(bit)를 기준으로 가중치 값에 대해 이진 코드 방식의 양자화를 수행한다는 것은, k 개의 부호 값과 스케일링 인자의 곱을 합산하는 방식으로 가중치를 표현하는 것을 의미한다. k가 3인 경우, 하기 수학식 1과 같이 가중치 데이터가 양자화될 수 있다. 수학식 1에서 W는 가중치 데이터를 의 미하고 A는 스케일링 인자 데이터를 의미하며, B는 부호 데이터를 의미한다. 수학식 1"}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "가중치에 대해 이진 코드 방식으로 양자화를 수행할 때, 프로세서는 신경망 모델의 연산을 수행할 때 요구 되는 정확도 레벨에 기초하여 k 값을 결정할 수 있다. k 값이 커질수록 가중치를 좀 더 정확히 표현할 수 있으 므로, 신경망 모델을 통해 획득하는 출력 데이터의 정확도를 높이기 위해 k 값은 큰 값으로 결정될 수 있다. 따라서, 신경망 모델의 연산을 수행할 때 요구되는 정확도 레벨이 높을 경우, 프로세서는 k 값을 높은 값 으로 결정할 수 있다. 신경망 모델의 연산을 수행할 때 요구되는 정확도 레벨은 입력 데이터의 유형에 따라 결 정되거나 사용자가 신경망 모델을 설계할 때 결정될 수 있다. 예를 들어, 입력 데이터가 높은 연산의 정확도를 요구하는 언어 데이터 또는 음성 데이터인 경우, 프로세서 는 k의 값을 5로 결정하고, 입력 데이터가 비교적 낮은 연산의 정확도를 요구하는 이미지 데이터인 경우, 프로세서는 k의 값을 3으로 결정할 수 있다. 다만, 이는 일 실시예에 불과하며 각 입력 데이터의 유형에 대응되는 k 값이 할당될 수 있으며, 사용자에 의해 자유롭게 변경될 수 있음은 물론이다. 상술한 바와 같이, 가중치 데이터의 양자화는 전자 장치의 프로세서에 수행될 수 있다. 다만, 이에 국한되는 것은 아니며, 가중치 데이터의 양자화는 외부 장치(가령, 서버)에 의해 수행될 수도 있다. 외부 장치 에 의해 가중치 데이터의 양자화가 수행되는 경우, 프로세서는 외부 장치로부터 양자화 된 가중치 값들을 포함하는 양자화 데이터를 수신하고, 수신된 양자화 데이터를 메모리에 저장할 수 있다. 프로세서가 양자화 데이터 및 제1 입력 데이터에 기초하여 제2 출력 데이터를 획득하는 과정은 도 2를 참 조하여 구체적으로 설명하도록 한다. 도 2는 본 개시의 일 실시예로, 전자 장치의 프로세서가 양자화 된 데이터 및 제1 입력 데이터 간의 행렬 곱셈(matrix multiplication)을 가속하는 동작 및 구조를 설명하기 위 한 도면이다. 프로세서는 제1 입력 데이터를 제1 모듈에 입력하여 제1 입력 데이터에 포함된 입력 값들의 지수 (exponent)가 동일한 값으로 변환된 제2 입력 데이터를 획득할 수 있다. 제1 모듈은 제1 입력 데이터에 포함된 전체 입력 값의 지수를 동일한 값으로 변경(또는, 정렬(alignment)) 하는 모듈을 의미하며, 지수 정렬 모듈로 표현될 수 있다. 제1 모듈은 하드웨어 모듈로 구현될 수 있으나, 이에 국한되는 것은 아니며 소프트웨어 모듈로도 구현될 수 있다. 프로세서는 제1 모듈을 통해 제1 입력 데이터에 포함된 입력 값들의 지수 중 최소 값을 식별하고, 제1 입력 데이터에 포함된 입력 값들의 지수를 식별된 최소 지수 값으로 변환하여 제2 입력 데이터를 획득할 수 있 다. 예를 들어, 입력 값이 2^(-3)*1.25, 2^(-1)*1.75, 2^*1.0인 경우를 가정하면, 프로세서는 제1 모듈 을 통해 입력 값들의 지수 중 최소 값은 -3임을 식별할 수 있다. 그리고, 프로세서는 제1 모듈을 통해 입력 값 전체의 지수를 -3으로 변경(또는, 정렬)하여 입력 값 2^(-3)*1.25, 2^(-3)*7.0, 2^(-3)*16을 획 득할 수 있다. 다만, 이는 일 실시예에 불과하며, 프로세서는 제1 모듈을 통해 입력 데이터에 포함된 입력 값의 지수 를 기설정된 값으로 변경(또는, 정렬)할 수 있다. 기설정된 값은 사용자에 의해 설정된 값일 수 있으며, 다양하 게 변경될 수 있음은 물론이다. 기존에는 제1 입력 데이터에 포함된 모든 입력 값의 지수를 연산 모듈에 입력하기 전에 동일한 값으로 정렬하지 않고, 두 입력 값에 대해 합 연산을 수행할 때 두 입력 값의 지수를 동일한 값으로 정렬하는 동작이 매번 수행 하였다. 예를 들어, 입력 데이터에 포함된 입력 값이 1000개이고, 각 입력 값의 합 연산이 백만 번 소요되면, 각 입력 데이터의 지수를 정렬하는 동작은 백만 번 수행해야 한다.다만, 본 개시의 전자 장치의 프로세서는 제1 모듈을 통해 입력 데이터에 포함된 모든 입력 값들 의 지수를 동일한 값으로 정렬함으로써, 제2 모듈 상에서 입력 값의 지수를 정렬시키는 회로를 제외시킬 수 있다. 예를 들어, 입력 데이터에 포함된 입력 값이 1000개이고, 각 입력 값의 합 연산이 백만 번 소요되면, 프로세서 는 제1 모듈을 통해 입력 데이터의 지수를 정렬하는 동작을 1000번만 수행할 수 있다. 프로세서는 지수가 동일한 값으로 정렬된 제2 입력 데이터와 가중치 데이터 중 양자화된 부호 데이터간의 연산을 수행한 후, 연산 결과 데이터와 출력 데이터와 스케일링 인자 데이터간의 연산을 수행하여 출력 값을 획 득할 수 있다. 예를 들면, 하기 수학식 2과 같이 가중치(W)를 3 bit로 이진 코드 방식의 양자화된 경우를 가정한다. 수학식 2"}
{"patent_id": "10-2020-0127980", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "수학식 2에서 A는 스케일링 인자 데이터이고 B는 부호 데이터이며 X는 입력 데이터이다. 프로세서는 분배 법칙에 따라 입력 데이터(X)를 B0, B1, B2 각각에 먼저 연산을 수행하고, 연산 결과 데이터와 스케일링 인자 데이 터인 A0, A1, A2과 연산을 수행하여 출력 값을 획득할 수 있다. 이 때, B0, B1, B2는 -1 또는 1인 부호 값으로 포함된 데이터이므로, 입력 데이터(X)과 B0, B1, B2 간의 연산은 입력 데이터의 부호를 결정하는 과정을 의미할 수 있다. 수학식 2에 대한 상황은 도 3의 식별항목 310에 좀 더 구체적으로 도시되어 있다. 310에는 A0, A1, A2가 1 X N 형 태의 행렬로 구현된 경우이다. 그리고, 식별항목 320에 도시된 바와 같이, 프로세서는 분배 법칙에 따라 입력 데이터(X)와 B0, B1, B2 각각에 먼저 연산을 수행하여 입력 데이터의 부호를 결정할 수 있다. 이하에서는 프로세서가 제2 모듈을 이용하여 제1 출력 데이터를 획득하는 과정을 설명하도록 한다. 프로세서는 지수를 동일한 값으로 정렬한 제2 입력 데이터 및 가중치 데이터 중 양자화된 부호 데이터를 제2 모듈에 입력하여, 제2 입력 데이터에 포함된 입력 값의 부호를 결정하고, 부호가 결정된 입력 값들 간 의 연산을 수행하여 제1 출력 데이터를 획득할 수 있다. 도 2에 도시된 바와 같이, 제2 모듈은 시스톨릭 배열(systolic array)을 가지는 복수의 연산 모듈을 포함할 수 있다. 시스톨릭 배열은 같은 기능을 가지는 모듈 등이 연결 망을 구성하여 동기 신호에 따라 하나의 연산을 수행할 수 있도록 설계된 배열을 의미한다. 제2 모듈에 포함된 연산 모듈(20-1)은 부호 데이터를 이용하여 제2 입력 데이터의 부호를 결정하는 부호 결 정 회로(25-1) 및 부호가 결정된 제2 입력 데이터에 포함된 입력 값들 간에 합 연산을 수행하는 연산 회로(25- 2)를 포함할 수 있다. 이 때, 연산 회로(25-2)는 정수 기반의 합 연산을 수행하는 회로로 구현될 수 있다. 즉, 기존의 MAC(Multiplier-accumulator Unit)에는 부동 소수점 형태로 이루어진 가중치 값과 입력 값을 곱 (multiply)하고 합산(add)하는 연산 회로를 포함한다. 본 개시의 연산 모듈(20-1)은 기존의 MAC에 포함된 연산 회로를 제외하고 정수(integer) 기반의 한 연산을 수행하는 연산 회로만을 포함할 수 있다. 즉, 연산 모듈(20-1)은 기존의 MAC 보다 간단한 연산을 수행하는 연산 회로를 포함하고 있으므로, 연산 모듈 (20-1)이 차지하는 면적, 소모되는 전력 및 연산량을 감소시킬 수 있다. 도 2에 도시된 바와 같이, 프로세서는 연산 모듈(20-1) 중 부호 결정 모듈(25-1)에 제2 입력 데이터 중 제 1 입력 값(a) 및 부호 데이터 중 연산 모듈(20-1)에 대응되는 부호 값(w)을 입력하여 제1 입력 값(a)의 부호를 결정할 수 있다. 부호 값(w)은 -1 또는 1 중 하나이므로, 제1 입력 값(a)은 음의 부호 또는 양의 부호 중 하나 로 결정될 수 있다. 프로세서는 부호가 결정된 제1 입력 값(+a 또는 -a) 및 시스톨릭 배열 상에서 연산 모듈(20-1)의 상위에 배치된 연산 모듈(20-2)에서 출력된 제2 입력 값(b)을 연산 회로(25-2)에 입력하여 제1 입력 값 및 제2 입력 값을 합산 값을 획득할 수 있다. 즉, 가중치 데이터가 부호 데이터로 양자화되어 있으므로, 프로세서는, 스케일링 인자 데이터와 곱 연산을 수행하기 전까지, 부호 데이터에 의해 부호가 결정된 입력 데이터 간에 합 연산만을 수행할 수 있다. 부호가 결 정된 합 연산을 수행할 입력 데이터의 지수는 정렬되어 있으므로, 프로세서는 정수 기반의 합 연산 회로 (25-2)를 통해 입력 데이터의 가수(mantissa) 부분에 대해 합 연산을 수행함으로써 제1 출력 데이터를 획득할 수 있다. 프로세서는 제2 모듈을 통해 획득된 제1 출력 데이터를 제3 모듈에 입력하여 제1 출력 데이터에 포함된 출력 값을 정규화(normalize)할 수 있다. 제3 모듈은 정규화 모듈로 표현될 수 있다. 구체적으로, 프로세서는 제1 출력 데이터에 포함된 출력 값의 가수의 첫째 자리가 기수(base)보다 작은 한 자리 자연수가 되도록 변경하여 제1 출력 데이터에 포함된 출력 값을 정규화할 수 있다. 예를 들면, 출력 값이 -0.8*2^(-1)인 경우, 프로세서는 가수의 첫째 자리가 기수보다 작은 한자리 자연수가 되도록 변경하여 출력값을 -1.6*2^(-2)으로 정규화할 수 있다. 프로세서는 제2 모듈에서 출력된 제1 출력 데이터를 제3 모듈에 입력하여 정규화함으로써 시스톨 릭 배열을 가지는 연산 모듈 각각에 정규화를 수행하는 회로를 제외할 수 있다. 즉, 기존에는 복수의 MAC에서 출력된 합산 연산 결과 값을 매번 정규화를 시키는 과정을 수행하였다. 예를 들어, 입력 데이터에 포함된 입력 값이 1000개이고, 각 입력 값의 합 연산이 백만 번 소요되면, 연산 결과 값에 대해 정규화하는 동작은 백만 번 진행해야 한다. 다만, 본 개시의 전자 장치의 프로세서는 제3 모듈을 통해 연산 모듈의 출력 값을 정규화함으로써, 정규화 동작의 횟수를 줄일 수 있다. 예를 들어, 입력 데이터에 포함된 입력 값이 1000개이고, 각 입력 값의 합 연산이 백만 번 소요되면, 프로세서는 제3 모듈을 통해 연산 결과 값에 대해 정규화하는 동작을 1000 번만 수행할 수 있다. 이에 따라, 정규화 동작을 수행하는 회로가 차지하는 면적 및 정규화 동작을 수행하는데 필요한 연산량 또는 전력 소모량을 줄일 수 있다. 프로세서는 정규화된 출력 값이 포함된 데이터와 스케일링 인자 데이터에 대해 곱 연산을 수행하여 제2 출 력 데이터를 획득할 수 있다. 즉, 프로세서는 제1 모듈, 제2 모듈 및 제3 모듈을 이용하여 가 중치 데이터와 입력 데이터 간의 연산을 수행하여 제2 출력 데이터를 획득할 수 있다. 한편, 본 개시에 따른 인공지능과 관련된 기능은 프로세서와 메모리를 통해 동작된다. 프로세서(12 0)는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU(Central Processing Unit), AP(Application Processor), DSP(Digital Signal Processor) 등과 같은 범용 프로세서, GPU(Graphic Processing Unit), VPU(Vision Processing Unit)와 같은 그래픽 전용 프로세서 또는 NPU(Neural Processing Unit)와 같은 인공지능 전용 프로세서일 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기 정의된 동작 규칙 또는 인공지능 모델에 따라, 입 력 데이터를 처리하도록 제어한다. 또는, 하나 또는 복수의 프로세서가 인공지능 전용 프로세서인 경우, 인공지 능 전용 프로세서는, 특정 인공지능 모델의 처리에 특화된 하드웨어 구조로 설계될 수 있다. 기 정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만 들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로 써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미 한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버 및/ 또는 시스템을 통해 이루어 질 수도 있다. 학습 알고리즘의 예로는, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도 형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)이 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 복수의 인공 신경망을 포함하며, 인공 신경망은 복수의 레이어들로 구성될 수 있다. 복수의 신 경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 복수의 신경망 레이어들이 갖고 있는 복수의 가중 치들은 인공지능 모델의 학습 결과에 의해 최적화될 수 있다. 예를 들어, 학습 과정 동안 인공지능 모델에서 획득한 로스(loss) 값 또는 코스트(cost) 값이 감소 또는 최소화되도록 복수의 가중치들이 갱신될 수 있다. 인공 신경망의 예로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 및 심층 Q-네트워크 (Deep Q-Networks) 등이 있으며, 본 개시에서의 인공 신 경망은 명시한 경우를 제외하고 전술한 예에 한정되지 않는다. 도 4는 본 개시의 일 실시예에 따른, 전자 장치의 구성을 상세히 도시한 블록도이다. 도 4에 도시된 바와 같이, 전자 장치는 메모리, 프로세서, 통신부, 디스플레이, 스피커, 마이크 및 입력부를 포함할 수 있다. 메모리 및 프로세서는 도 1 및 도 2를 참조하여 구체적으로 설명하였으므로 중복되는 설명은 생략하도록 한다. 통신부는 회로를 포함하며, 외부 장치와 통신을 수행할 수 있다. 이때, 통신부가 외부 장치와 통신 연결되는 것은 제3 기기(예로, 중계기, 허브, 엑세스 포인트, 서버 또는 게이트웨이 등)를 거쳐서 통신하는 것 을 포함할 수 있다. 통신부는 외부 장치와 통신을 수행하기 위해 다양한 통신 모듈을 포함할 수 있다. 일 예로, 통신부는 무선 통신 모듈을 포함할 수 있으며, 예를 들면, 5G(5TH Generation), LTE, LTE-A(LTE Advance), CDMA(code division multiple access), WCDMA(wideband CDMA), 등 중 적어도 하나를 사용하는 셀룰러 통신 모듈을 포함할 수 있다. 다른 예로, 무선 통신 모듈은, 예를 들면, WiFi(wireless fidelity), 블루투스, 블루투스 저전력(BLE), 지그비 (Zigbee), 라디오 프리퀀시(RF), 또는 보디 에어리어 네트워크(BAN) 중 적어도 하나를 포함할 수 있다. 다만, 이는 일 실시예에 불과하며 통신부는 유선 통신 모듈을 포함할 수 있다. 통신부는 신경망 모델을 구성하는 복수의 레이어에 포함된 복수의 가중치 데이터를 양자화하기 위하여 가 중치 데이터를 외부 서버에 전송할 수 있다. 그리고, 통신부는 외부 서버로부터 양자화된 가중치 데이터를 수신할 수 있다. 통신부는 전자 장치와 통신 연결된 외부 장치로부터 각종 제1 입력 데이터를 수신할 수 있다. 예를 들어, 통신부는 전자 장치와 무선 통신 연결된 입력 장치(예를 들어, 카메라, 마이크, 키보드 등) 또 는 각종 컨텐츠를 제공할 수 있는 외부 서버로부터 다양한 종류의 제1 입력 데이터를 수신할 수 있다. 디스플레이는 프로세서의 제어에 따라 다양한 정보를 표시할 수 있다. 특히, 디스플레이는 제1 입력 데이터를 표시하거나, 가중치 데이터와 입력 데이터 간에 연산을 수행하여 획득된 제2 출력 데이터를 표시 할 수 있다. 여기서, 제2 출력 데이터를 표시한다는 것은 제2 출력 데이터에 기초하여 생성된 텍스트 또는 이미 지가 포함된 화면을 표시하는 동작을 포함할 수 있다. 디스플레이는 LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes), AM-OLED(Active- Matrix Organic Light-Emitting Diode), LcoS(Liquid Crystal on Silicon) 또는 DLP(Digital Light Processing) 등과 같은 다양한 디스플레이 기술로 구현될 수 있다. 또한, 디스플레이는 플렉서블 디스플레 이(flexible display)의 형태로 전자 장치의 전면 영역 및, 측면 영역 및 후면 영역 중 적어도 하나에 결 합될 수도 있다. 또한, 디스플레이는 터치 센서를 구비한 터치 스크린으로 구현될 수도 있다. 스피커는 오디오 처리부(미도시)에 의해 디코딩이나 증폭, 노이즈 필터링과 같은 다양한 처리 작업이 수행 된 각종 오디오 데이터를 출력하는 구성이다. 또한, 스피커는 각종 알림 음이나 음성 메시지를 출력할 수 있다. 예를 들어, 신경망 모델에 의해 가중치 데이터와 입력 데이터 간의 연산 결과 즉, 제2 출력 데이터가 출력되는 경우, 스피커는 출력 데이터가 획득되었다는 알림 음 등을 출력할 수 있다. 마이크는 사용자로부터 음성을 입력받을 수 있는 구성이다. 마이크는 전자 장치 내부에 구비될 수 있으나, 외부에 구비되어 전자 장치와 전기적으로 연결될 수 있다. 또한, 마이크가 외부에 구비된 경우, 마이크는 유/무선 인터페이스(예를 들어, Wi-Fi, 블루투스)을 통해 생성된 사용자 음성 신호를 프로 세서에 전송할 수 있다.마이크는 각종 인공 신경망으로 구성된 인공지능 모델을 활성화시킬 수 있는 웨이크 업 워드(wake-up word)(또는, 트리거 워드(trigger word))가 포함된 사용자 음성을 입력 받을 수 있다. 웨이크 업 워드가 포함된 사용자 음성을 마이크를 통해 입력받으면, 프로세서는 인공 지능 모델을 활성화시키고 사용자 음성을 제1 입력 데이터로 이용하여 가중치 데이터간의 연산을 수행할 수 있다. 입력부는 회로를 포함하며, 전자 장치를 제어하기 위한 사용자 입력을 수신할 수 있다. 특히, 입력부 는 사용자 손 또는 스타일러스 펜 등을 이용한 사용자 터치를 입력받기 위한 터치 패널, 사용자 조작을 입 력받기 위한 버튼 등이 포함될 수 있다. 또 다른 예로, 입력부는 다른 입력 장치(예로, 키보드, 마우스, 모션 입력부 등)로 구현될 수 있다. 한편, 입력부는 사용자로부터 입력된 제1 입력 데이터를 수신하거나 각종 사용자 명령을 입력받을 수 있다. 도 5는 본 개시의 일 실시예에 따른, 전자 장치의 제어 방법을 설명하기 위한 순서도이다. 전자 장치는 가중치 데이터를 부호 데이터와 스케일링 인자 데이터의 조합으로 양자화하여 양자화 데이터 를 획득할 수 있다(S510). 예를 들어, 전자 장치는 가중치 데이터를 k 개의 부호 데이터 및 스케일링 인자 데이터의 곱을 합산하는 방식으로 양자화할 수 있다. k의 크기는 신경망 모델의 연산을 수행할 때 요구되는 정 확도 레벨에 기초하여 결정될 수 있다. 그리고, 스케일링 인자는 부동 소수점 형태의 데이터로 구현될 수 있다. 전자 장치는 제1 입력 데이터를 제1 모듈에 입력하여 제1 입력 데이터에 포함된 입력 값들의 지수가 동일 한 값으로 변환된 제2 입력 데이터를 획득할 수 있다(S520). 예를 들어, 전자 장치는 제1 모델을 통해 제1 입력 데이터에 포함된 입력 값들의 지수 중 최소 값을 식별 하고, 제1 입력 데이터에 포함된 입력 값들의 지수를 식별된 최소 값으로 변환하여 제2 입력 데이터를 획득할 수 있다. 다만, 이는 일 실시예에 불과하며, 전자 장치는 제1 모델을 통해 제1 입력 데이터에 포함된 입력 값들의 지수를 기설정된 값으로 정렬할 수 있다. 전자 장치는 제2 입력 데이터 및 부호 데이터를 제2 모듈에 입력하여 제2 입력 데이터에 포함된 입력 값의 부호를 결정하고 부호가 결정된 입력 값 간의 연산을 수행하여 제1 출력 데이터를 획득할 수 있다(S530). 구체적으로, 전자 장치는 제2 모듈을 통해 부호 데이터에 포함된 -1 또는 1 중 하나를 제2 입력 데이터에 포함된 입력 값에 적용하여 제2 입력 데이터에 포함된 입력 값의 부호를 결정할 수 있다. 예를 들어, 제2 모듈이 시스톨릭 배열을 가지는 복수의 연산 모듈을 포함하고, 복수의 연산 모듈 각각은 부호 데이터를 이용하여 제2 입력 데이터의 부호를 결정하는 부호 결정 회로 및 부호가 결정된 제2 입력 데이터에 포 함된 입력 값 간의 합 연산을 수행하는 연산 회로를 포함할 수 있다. 이 때, 전자 장치는 제2 입력 데이터 중 제1 입력 값 및 부호 데이터 중 제1 입력 값에 대응되는 부호 값 을 복수의 연산 모듈 중 제1 연산 모듈에 포함된 제1 부호 결정 회로에 입력하여 제1 입력 값의 부호를 결정할 수 있다. 그리고, 전자 장치는 부호가 결정된 제1 입력 값 및 시스톨릭 배열 상에서 제1 연산 모듈의 상위에 배치된 제2 연산 모듈에서 출력된 제2 입력 값을 제1 연산 모듈 중 제1 연산 회로에 입력하여 제1 입력 값 및 제2 입력 값의 합산 값을 획득할 수 있다. 전자 장치는 제1 출력 데이터를 제3 모듈에 입력하여 제1 출력 데이터에 포함된 출력 값 정규화할 수 있다 (S540). 구체적으로, 전자 장치는 제3 모델을 통해 제1 출력 데이터에 포함된 출력 값의 가수의 첫째 자리 가 기수보다 작은 한자리 자연수가 되도록 변경하여 제1 출력 데이터에 포함된 출력 값을 정규화할 수 있다. 그리고, 전자 장치는 정규화된 출력 값이 포함된 데이터와 스케일링 인자 데이터에 대해 곱 연산을 수행하 여 제2 출력 데이터 획득할 수 있다(S550). 한편, 본 개시에 첨부된 도면은 본 개시에 기재된 기술을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 개시의 실시예의 다양한 변경(modifications), 균등물(equivalents), 및/또는 대체물(alternatives)을 포함하 는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다.본 개시에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 개시에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\"등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 개시에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성 요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요 소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제 3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 개시에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for),\" \"~하는 능력을 가지는(having the capacity to),\" \"~하도록 설계된(designed to),\" \"~하도 록 변경된(adapted to),\" \"~하도록 만들어진(made to),\" 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 설정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\" 것만을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 부프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메모리 장치에 저장된 하나 이상의 소프트웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 본 개시의 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명 령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시 예들에 따른 서버 클라우드를 포 함할 수 있다. 상기 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 상기 프로세서의 제어하에 다 른 구성요소들을 이용하여 상기 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저 장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적은 저장매체'는 신 호(signal)를 포함하지 않으며 실재(tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시 적으로 저장됨을 구분하지 않는다. 예로, '비일시적 저장매체'는 데이터가 임시적으로 저장되는 버퍼를 포함할 수 있다. 일 실시 예에 따르면, 본 개시에 개시된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래 될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD- ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품(예로, 다운로더블 앱(downloadable app))의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임 시적으로 생성될 수 있다. 다양한 실시 예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구성될 수 있으 며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요소가 다양한 실시 예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로그램)은 하나 의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는 유사하게 수행 할 수 있다. 다양한 실시 예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생략되거나, 또는다른 동작이 추가될 수 있다."}
{"patent_id": "10-2020-0127980", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른, 전자 장치의 구성을 간략히 도시한 블록도, 도 2는 본 개시의 일 실시예에 따른, 전자 장치가 입력 데이터 및 가중치 데이터 간에 연산을 수행하는 구조 및 동작을 설명하기 위한 도면, 도 3은 본 개시의 일 실시예에 따른, 전자 장치가 가중치를 양자화 하는 과정을 설명하기 위한 도면, 도 4는 본 개시의 일 실시예에 따른, 전자 장치의 구성을 상세히 도시한 블록도, 도 5는 본 개시의 일 실시예에 따른, 전자 장치의 제어 방법을 설명하기 위한 순서도이다."}
