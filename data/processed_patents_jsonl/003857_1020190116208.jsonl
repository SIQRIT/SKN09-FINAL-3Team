{"patent_id": "10-2019-0116208", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0034352", "출원번호": "10-2019-0116208", "발명의 명칭": "게임 대전 제공 방법", "출원인": "넷마블 주식회사", "발명자": "신평호"}}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 게임 대전을 제공하기 위한 동작들을 수행하도록 하며 상기 동작들은,제 1 플레이어 단말로부터 대전 요청을 수신하는 동작;상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작; 및상기 제 1 플레이어 단말에 상기 대전 플레이어에 관한 정보를 전송하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 대전 플레이어는 제 2 플레이어 또는 상기 제 2 플레이어를 모방하는 모방 플레이어인,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 대전 플레이어는 온라인 상태의 제 2 플레이어 또는 오프라인 상태의 제 2 플레이어를 모방하는 모방 플레이어인,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작은,모방 학습 정도가 학습 임계 값 이상인 모방 플레이어들 중 상기 대전 플레이어를 결정하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작은,오프라인 대전을 허용한 오프라인 상태의 플레이어에 대한 모방 플레이어들 중 상기 대전 플레이어를 결정하는동작;공개특허 10-2021-0034352-3-을 포함하고, 그리고상기 오프라인 대전을 허용한 플레이어에 대하여 리워드를 줄 것을 결정하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 대전 플레이어는 제 2 플레이어의 게임 로그를 이용하여 상기 제 2 플레이어를 모방하도록 학습된 모방 플레이어인, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리하는 동작;상기 사전 결정된 게임 플레이 환경에 대응되는 상기 제 2 플레이어의 하나 이상의 게임 플레이 액션을 포함하는 게임 플레이 액션 그룹을 상기 게임 플레이 환경에 매핑하여 상기 제 2 플레이어의 게임 플레이 패턴을 결정하는 동작; 및상기 모방 플레이어가 상기 제 2 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 하는동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 모방 플레이어의 게임 플레이 환경에 대응되는 상기 제 2 플레이어의 게임 플레이 패턴이 없는 경우, 상기제 2 플레이어와 유사한 다른 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 6 항에 있어서,상기 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리하는 동작;상기 사전 결정된 게임 플레이 환경을 학습 데이터의 입력으로 하고, 그리고 상기 사전 결정된 게임 플레이 환경에서의 제 2 플레이어의 게임 플레이 액션을 상기 학습 데이터의 라벨로 하는 상기 학습 데이터를 생성하는동작; 및상기 학습 데이터를 이용하여 학습된 게임 플레이 액션 선택 모델을 이용하여 상기 모방 플레이어가 상기 제 2공개특허 10-2021-0034352-4-플레이어를 모방하는 게임 플레이 액션을 수행하도록 하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6 항에 있어서,사전 결정된 초기 학습 단계에서는 제 1 게임 플레이 환경에서 상기 모방 플레이어가 상기 제 1 게임 플레이 환경에서의 제 2 게임 플레이어의 게임 플레이 액션을 모방하도록 게임 플레이 액션 선택 모델을 학습시키는동작; 및사전 결정된 후기 학습 단계에서는 상기 게임 플레이 액션 선택 모델을 이용하여 상기 제 1 게임 플레이 환경에서 상기 모방 플레이어가 수행할 게임 플레이 액션을 출력하도록 하고, 그리고 상기 게임 플레이 액션에 따라변경된 제 2 게임 플레이 환경에 기초하여 상기 게임 플레이 액션에 대한 보상을 결정하여 상기 게임 플레이 액션 선택 모델을 업데이트하도록 상기 게임 플레이 액션 선택 모델을 학습시키는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,상기 게임 플레이 액션에 대한 보상은 상기 제 2 게임 플레이 환경에서 상기 모방 플레이어의 승률에 기초하여결정되는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 7 항 내지 제 11 항 중 어느 한 항에 있어서,상기 게임 플레이 환경은 인게임 오브젝트 요소, 게임 모드 요소 또는 플레이어 요소 중 적어도 하나를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 1 항에 있어서,모방 플레이어의 모방 학습 정도에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 상기 제 1 플레이어 또는 제 2 플레이어 중 적어도 하나의 실적으로 결정하는 동작; 또는상기 모방 플레이어와 대전한 상기 제 1 플레이어와 상기 모방 플레이어의 능력치 차이에 따라 상기 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 상기 제 1 플레이어 또는 상기 제 2 플레이어 중 적어도 하나의 실적으로 결정하는 동작;중 적어도 하나의 동작을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램.공개특허 10-2021-0034352-5-청구항 14 게임 대전을 제공하기 위한 방법으로서,제 1 플레이어 단말로부터 대전 요청을 수신하는 단계;상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 단계; 및상기 제 1 플레이어 단말에 상기 대전 플레이어에 관한 정보를 전송하는 단계;를 포함하는,게임 대전을 제공하기 위한 방법."}
{"patent_id": "10-2019-0116208", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "게임 대전을 제공하기 위한 서버로서,하나 이상의 코어를 포함하는 프로세서; 및메모리;를 포함하고,상기 프로세서는,제 1 플레이어 단말로부터 대전 요청을 수신하고,상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하고, 그리고상기 제 1 플레이어 단말에 상기 대전 플레이어에 관한 정보를 전송하는,게임 대전을 제공하기 위한 서버."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프 로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 게임 대전을 제공하기 위한 동작들을 수행하도 록 하며 상기 동작들은, 제 1 플레이어 단말로부터 대전 요청을 수신하는 동작; 상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작; 및 상기 제 1 플레이어 단말에 상기 대전 플레이어에 관한 정보를 전송하는 동작을 포함할 수 있다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 게임 대전 제공 방법에 관련된 발명으로서, 보다 구체적으로 온라인 게임 대전을 제공하기 위한 방법 에 관한 발명이다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 통신 기술의 발달로 게임을 즐기는 사람이 증가하면서 전략 시뮬레이션 게임, 롤플레잉 게임 등 다양한 종 류의 게임이 개발되었다. 이러한 게임들은 온라인 및 오프라인 상황에서도 게임을 진행할 수 있고, 특히 온라인 게임은 시공간의 제약이 없어 수많은 유저들이 쉽게 모여 함께 게임을 즐길 수 있다. 온라인 대전 게임의 런칭 초기 단계에는 가입자의 수가 적을 수 있고, 또는 사용자들의 접속률이 낮은 시간 대 에는 대전 상대로 매칭될 수 있는 온라인 플레이어의 수가 적을 수 있다. 따라서, 이러한 경우에도 플레이어들 간의 게임 대전을 원활하게 진행하기 위한 당업계의 수요가 존재한다. 대한민국 등록특허 제10-1805123호는 사용자 간 매칭 기반의 온라인 게임 제공 방법 및 그 장치에 관하여 개시 한다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출 된 것으로, 게임 대전 방법을 제공하기 위한 것이다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장되어 컴퓨터로 하여금 이하의 동작들을 수행하도록 하는 명령들을 포함하는 컴퓨터 프로그램이 개시된다. 컴퓨터 프 로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 게임 대전을 제공하기 위한 동작들을 수행하 도록 하며 상기 동작들은, 제 1 플레이어 단말로부터 대전 요청을 수신하는 동작; 상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작; 및 상기 제 1 플레이어 단말에 상기 대전 플레이 어에 관한 정보를 전송하는 동작을 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 대전 플레이어는 제 2 플레이어 또는 상기 제 2 플레이어를 모방하는 모방 플레이어일 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 대전 플레이어는 온라인 상태의 제 2 플레이어 또는 오프라인 상태의 제 2 플레이어를 모방하는 모방 플레 이어일 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작은, 모방 학습 정도가 학습 임계 값 이상인 모방 플레이어들 중 상기 대전 플레이어를 결정하는 동작을 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정하는 동작은, 오프라인 대전을 허용한 오프라인 상태의 플레이어에 대한 모방 플레이어들 중 상기 대전 플레이어를 결정하는 동작을 포함하고, 그리고 상기 오프라인 대전을 허용한 플레이어에 대하여 리워드를 줄 것을 결정하는 동작을 더 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 대전 플레이어는 제 2 플레이어의 게임 로그를 이용하여 상기 제 2 플레이어를 모방하도록 학습된 모방 플 레이어일 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리하는 동작; 상기 사전 결정된 게 임 플레이 환경에 대응되는 상기 제 2 플레이어의 하나 이상의 게임 플레이 액션을 포함하는 게임 플레이 액션 그룹을 상기 게임 플레이 환경에 매핑하여 상기 제 2 플레이어의 게임 플레이 패턴을 결정하는 동작; 및 상기 모방 플레이어가 상기 제 2 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 하는 동작 을 더 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 모방 플레이어의 게임 플레이 환경에 대응되는 상기 제 2 플레이어의 게임 플레이 패턴이 없는 경우, 상기 제 2 플레이어와 유사한 다른 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 하는 동 작을 더 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리하는 동작; 상기 사전 결정된 게 임 플레이 환경을 학습 데이터의 입력으로 하고, 그리고 상기 사전 결정된 게임 플레이 환경에서의 제 2 플레이 어의 게임 플레이 액션을 상기 학습 데이터의 라벨로 하는 상기 학습 데이터를 생성하는 동작; 및 상기 학습 데 이터를 이용하여 학습된 게임 플레이 액션 선택 모델을 이용하여 상기 모방 플레이어가 상기 제 2 플레이어를 모방하는 게임 플레이 액션을 수행하도록 하는 동작을 더 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 사전 결정된 초기 학습 단계에서는 제 1 게임 플레이 환경에서 상기 모방 플레이어가 상기 제 1 게임 플레이 환 경에서의 제 2 게임 플레이어의 게임 플레이 액션을 모방하도록 게임 플레이 액션 선택 모델을 학습시키는 동작; 및 사전 결정된 후기 학습 단계에서는 상기 게임 플레이 액션 선택 모델을 이용하여 상기 제 1 게임 플레 이 환경에서 상기 모방 플레이어가 수행할 게임 플레이 액션을 출력하도록 하고, 그리고 상기 게임 플레이 액션에 따라 변경된 제 2 게임 플레이 환경에 기초하여 상기 게임 플레이 액션에 대한 보상을 결정하여 상기 게임 플레이 액션 선택 모델을 업데이트하도록 상기 게임 플레이 액션 선택 모델을 학습시키는 동작을 더 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 플레이 액션에 대한 보상은 상기 제 2 게임 플레이 환경에서 상기 모방 플레이어의 승률에 기초하여 결정될 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 플레이 환경은 인게임 오브젝트 요소, 게임 모드 요소 또는 플레이어 요소 중 적어도 하나를 포함할 수 있다. 게임 대전을 제공하기 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 모방 플레이어의 모방 학습 정도에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 상기 제 1 플레 이어 또는 제 2 플레이어 중 적어도 하나의 실적으로 결정하는 동작; 또는 상기 모방 플레이어와 대전한 상기 제 1 플레이어와 상기 모방 플레이어의 능력치 차이에 따라 상기 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 상기 제 1 플레이어 또는 상기 제 2 플레이어 중 적어도 하나의 실적으로 결정하는 동작 중 적어도 하 나의 동작을 더 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 게임 대전을 제공하기 위한 방법이 개시 된다. 상기 방법은 제 1 플레이어 단말로부터 대전 요청을 수신하는 단계; 상기 대전 요청에 기초하여 제 1 플 레이어의 대전 상대인 대전 플레이어를 결정하는 단계; 및 상기 제 1 플레이어 단말에 상기 대전 플레이어에 관 한 정보를 전송하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 게임 대전을 제공하기 위한 서버가 제공 된다. 상기 서버는 하나 이상의 코어를 포함하는 프로세서; 및 메모리를 포함하고, 상기 프로세서는, 제 1 플레 이어 단말로부터 대전 요청을 수신하고, 상기 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이 어를 결정하고, 그리고 상기 제 1 플레이어 단말에 상기 대전 플레이어에 관한 정보를 전송할 수 있다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 게임 대전 방법을 제공할 수 있다."}
{"patent_id": "10-2019-0116208", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조 합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시의 일 실시예에서 서버는 서버의 서버 환경을 수행하기 위한 다른 구성들이 포함될 수도 있다. 서버는 임의의 형태의 장치는 모두 포함할 수 있다. 서버는 디지털 기기로서, 랩탑 컴퓨터, 노트북 컴퓨터, 데스크톱 컴퓨터, 웹 패드, 이동 전화기와 같이 프로세서를 탑재하고 메모리를 구비한 연산 능력을 갖춘 디지털 기기일 수 있다. 서버는 서비스를 처리하는 웹 서버일 수 있다. 전술한 서버의 종류는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 명세서에 걸쳐, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인 지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네트워크는 컨볼루셔널 뉴럴 네트워크 (CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 도 1은 본 개시의 일 실시예에 따라 게임 대전 방법을 제공하기 위한 동작을 수행하는 컴퓨팅 장치의 블록 구성 도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 본 개시의 일 실시예에 따른 컴퓨팅 장치는 게임 서버 또는 게임 서버와 연동된 서버일 수 있다. 컴퓨팅 장치는 네트워크부, 프로세서, 메모리를 포함할 수 있다. 네트워크부는 본 개시의 일 실시예에 따른 게임 대전을 제공하기 위한 데이터 등을 다른 컴퓨팅 장치, 서 버 등과 송수신할 수 있다. 네트워크부는 대전 요청, 학습된 모방 플레이어 정보 등 본 개시의 실시예에 필요한 데이터들을 다른 컴퓨팅 장치, 서버 등과 송수신할 수 있다. 예를 들어, 네트워크부는 데이터베이 스 등에서 대전 플레이어들에 관한 정보 등을 수신할 수 있다. 또한, 네트워크부는 복수의 컴퓨팅 장치 사 이의 통신을 가능하게 하여 복수의 컴퓨팅 장치 각각에서 네트워크 함수의 학습이 분산 수행되도록 할 수 있다. 네트워크부는 복수의 컴퓨팅 장치 사이의 통신을 가능하게 하여 네트워크 함수를 사용한 모방 플레이어에 관한 학습을 분산 처리하도록 할 수 있다. 본 개시의 일 실시예에 따른 네트워크부는 공중전화 교환망 (PSTN: Public Switched Telephone Network), xDSL(x Digital Subscriber Line), RADSL(Rate Adaptive DSL), MDSL(Multi Rate DSL), VDSL(Very High Speed DSL), UADSL(Universal Asymmetric DSL), HDSL(High Bit Rate DSL) 및 근거리 통신망(LAN) 등과 같은 다양한 유선 통신 시스템들을 사용할 수 있다. 또한, 본 명세서에서 제시되는 네트워크부는 CDMA(Code Division Multi Access), TDMA(Time Division Multi Access), FDMA(Frequency Division Multi Access), OFDMA(Orthogonal Frequency Division Multi Access), SC-FDMA(Single Carrier-FDMA) 및 다른 시스템들과 같은 다양한 무선 통신 시스템들을 사용할 수 있 다. 본 개시에서 네트워크부는 유선 및 무선 등과 같은 그 통신 양태를 가리지 않고 구성될 수 있으며, 단거리 통신망(PAN: Personal Area Network), 근거리 통신망(WAN: Wide Area Network) 등 다양한 통신망으로 구성될 수 있다. 또한, 상기 네트워크는 공지의 월드와이드웹(WWW: World Wide Web)일 수 있으며, 적외선(IrDA: Infrared Data Association) 또는 블루투스(Bluetooth)와 같이 단거리 통신에 이용되는 무선 전송 기술을 이용 할 수도 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크들에서도 사용될 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치(GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서 는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 게임 대전을 제공할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세서 는 딥러닝(DN: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 게임 대전을 제공할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워크 함 수를 이용한 게임 대전을 제공할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 네트 워크부가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장 치는 인터넷(internet) 상에서 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다.이하에서는 프로세서가 게임 대전을 제공하는 방법에 관하여 설명한다. 프로세서는 대전 게임을 사용자 단말에 제공할 수 있다. 본 개시의 일 실시예에 따른 대전 게임은 둘 이상 의 플레이어가 서로 대결을 하는 게임일 수 있다. 예를 들어, 대전 게임은 격투 대전 게임, 퍼즐 게임, RPG(role playing game), 슈팅 게임, FPS(first person shooter) 게임 등을 포함할 수 있다. 전술한 대전 게임 에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 네트워크부를 통해 제 1 플레이어 단말로부터 대전 요청을 수신할 수 있다. 대전 요청은 일 플레이어가 대결 상대를 매칭시켜줄 것을 게임 서버에 요청하는 것일 수 있다. 프로세서는 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정할 수 있다. 프로세 서는 제 1 플레이어의 게임 정보를 이용하여 대전 플레이어를 결정할 수 있다. 플레이어의 게임 정보는 플 레이어의 게임 플레이 이력에 기초하여 결정되는 정보일 수 있다. 예를 들어, 플레이어의 게임 정보는 플레이어 의 능력치, 플레이어의 보유 아이템, 플레이어의 플레이 성향 등에 관한 정보일 수 있다. 프로세서는 제 1 플레이어의 게임 정보와 다른 플레이어들의 게임 정보를 비교하여, 각각의 플레이어가 비슷한 정도의 승률을 가 지도록 대전 플레이어를 매칭시킬 수 있다. 예를 들어, 프로세서는 제 1 플레이어와 유사한 능력치를 가지 는 플레이어를 대전 플레이어로 결정할 수 있다. 또는, 예를 들어, 프로세서는 제 1 플레이어 보다 낮은 능력치를 가지면서, 제 1 플레이어가 보유한 아이템 보다 더 높은 공격 데미지를 줄 수 있는 아이템을 보유한 플레이어를 대전 플레이어로 결정할 수도 있다. 전술한 플레이어의 게임 정보 또는 대전 플레이어 결정에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 네트워크부를 이용하여 제 1 플레이어 단말에 대전 플레이어에 관한 정보를 전송할 수 있 다. 프로세서는 네트워크부를 이용하여 대전 플레이어 단말에 제 1 플레이어에 관한 정보를 전송할 수 있다. 프로세서는 제 1 플레이어 단말 및 대전 플레이어 단말로부터 대전 승인 정보를 수신하는 경우, 제 1 플레이어와 대전 플레이어의 대전 플레이를 수행할 수 있다. 또는, 프로세서는 별도의 대전 승인 없 이 제 1 플레이어와 대전 플레이어의 대전 플레이를 수행할 수도 있다. 이하에서는 대전 플레이어에 관하여 설명한다. 본 개시의 일 실시예에 따라 대전 플레이어는 제 2 플레이어 또는 제 2 플레이어를 모방하는 모방 플레이어일 수 있다. 대전 플레이어는 실제 사용자가 게임 캐릭터를 컨트롤 하는 제 2 플레이어일 수 있다. 대전 플레이어 는 또는, 실제 사용자가 게임 캐릭터를 컨트롤하지 않는, 실제 사용자의 게임 캐릭터 컨트롤을 모방하는 모방 플레이어일 수 있다. 본 개시의 일 실시예에 따라 제 2 플레이어와 제 2 플레이어를 모방하는 모방 플레이어가 병렬적으로 게임을 플레이할 수 있다. 예를 들어, RPG 게임에서 제 2 플레이어가 게임 캐릭터의 레벨을 올리기 위하여 일반 퀘스트를 수행하고, 그리고 병렬적으로 제 2 플레이어를 모방하는 모방 플레이어가 다른 플레이어 와의 대전을 수행할 수도 있다. 프로세서는 제 1 플레이어의 대전 플레이어로 제 2 플레이어를 결정할 수 있고, 제 2 플레이어는 모방 플레이어가 대신 대전 플레이를 수행하도록 할 수도 있다. 전술한 모방 플레이어의 게임 플레이에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 대전 플레이어는 온라인 상태의 제 2 플레이어 또는 오프라인 상태의 제 2 플레이 어를 모방하는 모방 플레이어일 수 있다. 프로세서는 제 1 플레이어의 게임 정보를 이용하여 대전 플레이 어를 결정할 수 있다. 프로세서는 제 1 플레이어와 대전 플레이를 수행하도록 매칭된 사용자가 게임에 접 속한 온라인 상태인 경우, 사용자가 게임 캐릭터를 컨트롤 하는 제 2 플레이어를 대전 플레이어로 결정할 수 있 다. 프로세서는 제 1 플레이어와 대전 플레이를 수행하도록 매칭된 사용자가 게임에 접속하지 않은 오프라 인 상태인 경우, 사용자가 게임 캐릭터를 컨트롤 하지 않는, 실제 사용자의 게임 캐릭터 컨트롤을 모방하는 모 방 플레이어를 대전 플레이어로 결정할 수 있다. 프로세서는 사용자가 오프라인 상태인 경우에도, 사용자 의 게임 플레이를 모방하는 모방 플레이어를 대전 상대로 매칭시킬 수 있다. 게임에 가입된 전체 사용자의 수가 적은 경우, 비슷한 실력을 가진 사용자들의 수가 적어 대전 상대를 매칭시키는 것이 어려울 수 있다. 또는, 사 용자들의 접속률이 낮은 낮 시간대 또는 새벽 시간대에는 비슷한 실력을 가진 사용자들의 게임 접속률이 낮아 대전 상대를 매칭시키는 것이 어려울 수 있다. 본 발명은 사용자가 게임에 접속하지 않은 오프라인 상태인 경우 라도, 사용자의 실제 게임 플레이를 모방하는 모방 플레이어를 대전 상대로 매칭시켜 사용자들이 비슷한 실력을 가지는 상대방과 대전 게임을 즐기도록 할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 모방 학습 정도에 따라서 모방 플레이어를 대전 상대로 매칭시킬 것인지 여부를 결정할 수 있다. 프로세서는 모방 학습 정도가 학습 임계 값 이상인 모방 플레이어들 중 대 전 플레이어를 결정할 수 있다. 프로세서는 실제 플레이어의 게임 플레이를 모방하도록 학습시키는 모방 학습 정도가 낮은 모방 플레이어는 대전 플레이어에서 제외할 수 있다. 모방 학습 방법에 관하여는 후술하여 설 명한다. 본 개시의 일 실시예에 따라 모방 학습 정도는 실제 사용자의 게임 플레이를 얼마나 유사하게 모방하는지에 기 초하여 결정될 수 있다. 실제 사용자의 게임 플레이와 모방 플레이어의 게임 플레이의 일치도가 높을수록 모방 학습 정도가 높을 수 있다. 예를 들어, 동일한 지형 지물이 있고, 동일한 상대 캐릭터의 공격이 있을 때 실제 사용자의 게임 플레이 액션과 모방 플레이어의 게임 플레이 액션이 동일한 경우, 실제 사용자의 게임 플레이와 모방 플레이어의 게임 플레이가 일치하는 것으로 결정할 수 있다. 프로세서는 복수의 게임 플레이 환경 각 각에서 실제 사용자의 게임 플레이 액션들과 모방 플레이어의 게임 플레이 액션들 각각이 동일한지 여부를 비교 하여, 실제 사용자의 게임 플레이와 모방 플레이어의 게임 플레이의 일치도가 어느 정도인지 결정할 수 있다. 전술한 모방 학습 정도에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 모방 학습 정도는 학습 데이터를 이용한 정량적인 학습의 수행 횟수에 따라 결정될 수 있다. 예를 들어, 사전 결정된 에폭 이상의 학습을 수행한 경우 모방 학습 정도가 높은 것으로 결정할 수도 있다. 예를 들어, 학습 데이터를 이용하여 모델을 학습시키는 경우, 모델의 가중치의 변경 정도가 사전 결정된 임계 비율 이하인 경우 모방 학습 정도가 높은 것으로 결정할 수도 있다. 전술한 모방 학습 정도에 관한 구체적 인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 프로세서는 오프라인 대전을 허용한 오프라인 상태의 플레이어에 대한 모방 플레이어들 중 대전 플레이어를 결정할 수 있다. 이에 관하여 도 2를 참조하여 상세하게 설명한다. 도 2는 본 개시의 일 실시예에 따른 게임 대전 방법을 설명하기 위한 예시도이다. 사용자들 각각은 사용자가 오프라인 상 태일 때, 사용자의 게임 플레이를 모방한 모방 플레이어가 대신 게임 플레이를 수행해도 될지에 따라 오프라인 대전을 허용할지 여부를 결정할 수 있다. 사용자가 오프라인 대전을 허용한 경우, 프로세서는 사용자가 게 임에 접속하지 않은 경우라도 사용자의 게임 플레이를 모방한 모방 플레이어를 대전 플레이의 매칭 상대로 결정 할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 온라인 상태의 사용자들에 대한 플레이어들 및 모방 학습 정도가 학습 임계 값 이상이며 오프라인 대전을 허용한 오프라인 상태의 사용자들에 대한 모방 플레이어들 중 제 1 플 레이어의 대전 상대인 대전 플레이어를 결정할 수 있다. 도 2는 메모리에 저장된 사용자들의 게임 정보 를 예시적으로 도시한다. 사용자 번호 P1234는 오프라인 매칭을 허용하였고, 그리고 모델의 학습 수준이 학습 임계 값(본 예시에서 75%) 이상이므로 프로세서가 대전 플레이어로 결정할 수 있다. 사용자 번호 P7810은 오프라인 매칭을 허용하지 않았고, 그리고 사용자 번호 P0000은 모델의 학습 수준이 학습 임계 값 미만 이므로 프로세서가 대전 플레이어로 결정할 수 없다. 전술한 대전 플레이어 결정에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 오프라인 대전을 허용한 플레이어에게 리워드를 줄 것을 결정할 수 있다. 리워드는 게임 내에 서 게임 플레이어에게 제공되는 보상일 수 있다. 예를 들어, 프로세서는 오프라인 대전을 허용한 플레이어 에게 아이템을 제공할 수도 있고, 또는 보유한 아이템의 능력치를 향상시킬 수도 있다. 전술한 리워드에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 사용자가 게임에 접속하지 않은 상태에서 사 용자의 게임 플레이를 모방하는 모방 플레이어가 사용자 대신 대전 플레이를 수행하는 경우, 실제 사용자가 캐 릭터를 컨트롤 하는 것 보다 게임 수행 능력이 떨어질 수 있다. 모방 플레이어의 게임 수행 능력이 떨어지는 것 을 감안하고, 모방 플레이어의 게임 수행 결과를 자신의 실적으로 반영할 것을 결정한 플레이어에게 리워드를 주어 오프라인 대전 허용을 유도할 수 있다. 오프라인 대전을 허용한 플레이어들이 많을수록 대전 상대를 선택 할 수 있는 폭이 넓어져 온라인 상태인 플레이어들의 게임 몰입도를 증대 시킬 수 있다. 이하에서는 모방 플레이어에 관하여 설명한다. 본 개시의 일 실시예에 따라 대전 플레이어는 플레이어의 게임 로그를 이용하여 플레이어를 모방하도록 학습된 모방 플레이어일 수 있다. 게임 로그는 플레이어가 게임 상에서 수행한 게임 플레이 액션의 기록을 포함할 수 있다. 게임 로그는 예를 들 어, 게임 플레이 환경에서 게임 플레이어가 게임 플레이 액션을 수행한 모든 기록을 포함할 수 있다. 게임 로그는 게임 환경에서 플레이어가 컨트롤하는 캐릭터의 액션이 있을 때, 그 즉시 남는 기록을 포함할 수 있다. 예를 들어, 본 개시의 플레이어의 게임 로그는 캐릭터 플레이 타임, 계정 플레이 타임, 아이템별 사용빈도, 개인상점 거래품목, 아이템 생성, 아이템 습득, 아이템 드랍, 아이템 소비, 아이템 생성, 아이템 소멸, 아이템 거래, 아 이템 강화, 캐릭터 이동, 캐릭터 사망, 캐릭터 레벨업, 캐릭터 생성, 캐릭터 공격, 캐릭터 방어, 서버 시작과 종료시간, 서버 응답시간, 운영자 명령어, 몬스터 생성, 현재 캐릭터가 착용하고 있는 아이템 등을 포함할 수 있다. 전술한 게임 로그에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 프로세서는 모방 플레이어가 제 2 플레이어의 게임 로그에 따라 제 2 플레이 어가 수행했던 게임 플레이 액션을 수행하도록 할 수 있다. 프로세서는 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리할 수 있다. 게임 플레이 환경은 인게임 오브젝트 요소, 게임 모드 요소 또는 플레이어 요소 중 적어도 하나를 포함할 수 있 다. 인게임 오브젝트 요소는 게임 내에서 플레이어와 상호작용할 수 있는 게임 내 요소를 포함할 수 있다. 인게임 오브젝트 요소는 예를 들어, 플레이어가 게임 내에서 활동할 수 있는 맵을 포함할 수 있다. 인게임 오브젝트 요 소는 예를 들어, 게임 환경에서 플레이어 캐릭터가 이동 가능한 요소, 게임 환경에서 플레이어의 캐릭터 이동이 제한되는 요소, 플레이어 캐릭터에 사전 결정된 효과를 발생시키는 요소, 캐릭터 생성 위치 등을 포함할 수 있 다. 플레이어의 캐릭터 이동이 제한되는 요소는 예를 들어, 장애물, 언덕, 강 호수, 산, 건물, 덤불 등이 포함 될 수 있다. 플레이어의 캐릭터에 사전 결정된 효과를 발생시키는 요소는 예를 들어, 캐릭터의 이동속도를 감소 시키거나 증가시키는 바람, 캐릭터의 체력을 감소시키거나 증가시키는 바람, 비 등이 포함될 수 있다. 캐릭터 생성 위치는 예를 들어, 게임 시작할 때 플레이어의 캐릭터가 생성되는 위치, 플레이어의 캐릭터가 부활하는 위 치, 및 NPC(Non-Player-Character), 몬스터, 절대자의 생성 위치 등을 포함할 수 있다. 전술한 인게임 오브젝트 요소에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 모드 요소는 게임의 형식과 관련한 요소를 포함할 수 있다. 게임 모드 요소는 예를 들어, 개인전, 팀전, 시간 내에 상대방 플레이어를 모두 섬멸하거나 임무를 완수하는 타임어택, 깃발 뺏기, 상대편으로부터 아이템 지키기, 및 이벤트 게임모드 등을 포함할 수 있다. 전술한 게임 모드 요소에 관한 구체적인 기재는 예시일 뿐이 며 본 개시는 이에 제한되지 않는다. 플레이어 요소는 게임의 활동 내역, 게임 결과에 영향을 미치는 플레이어에 관련한 요소를 포함할 수 있다. 예 를 들어, 플레이어 요소는 플레이어간 실력 차이, 플레이어 실력차에 따른 플레이어 조합, 캐릭터 능력치에 따 른 플레이어 조합, 캐릭터 상성관계를 포함할 수 있다. 전술한 플레이어 요소에 관한 구체적인 기재는 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 프로세서는 게임 로그에 포함된 복수의 게임 플레이 액션들 각각을 사전 결정된 게임 플레이 환경에 따라 분리할 수 있다. 예를 들어, 프로세서는 플레이어의 캐릭터가 동일한 레벨의 대전 플레이어와 대치 상태이 고 플레이어의 캐릭터 주위에 캐릭터의 아이템 사용에 영향을 주는 호수가 있는 A 게임 플레이 환경에서 플레이 어의 캐릭터가 아이템을 이용하여 상대방을 공격한 B 게임 플레이 액션을 게임 로그에서 분리할 수 있다. 또는, 예를 들어 프로세서는 플레이어의 캐릭터가 동일한 레벨의 대전 플레이어와 대치 상태이고 플레이어의 캐 릭터 주위에 캐릭터의 아이템 사용에 영향을 주는 덤불이 있는 C 게임 플레이 환경에서 플레이어의 캐릭터가 덤 불을 피해 후퇴한 D 게임 플레이 액션을 게임 로그에서 분리할 수 있다. 프로세서는 게임 로그에서 게임 플레이 액션을 분리하여 게임 플레이 환경과 게임 플레이 액션을 매칭하여 메모리에 저장할 수 있다. 전술 한 게임 플레이 액션을 게임 로그에서 분리하는 동작에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제 한되지 않는다. 프로세서는 유사한 게임 플레이 환경들을 클러스터링(clustering) 할 수 있다. 프로세서는 게임 플레 이 환경들의 유사도를 비교하여 유사도가 임계 값 이상인 게임 플레이 환경들을 하나의 그룹으로 클러스터링 할 수 있다. 게임 플레이 환경들의 유사도는, 게임 플레이 환경의 정량적인 유사도 또는 효과의 유사도를 포함할 수 있다. 게임 플레이 환경의 정량적인 유사도는 인게임 오브젝트 요소의 가까운 정도, 플레이어 요소 값의 유사한 정도 를 포함할 수 있다. 예를 들어, A 게임 플레이 환경과 B 게임 플레이 환경 각각에 포함된 인게임 오브젝트인 건 물이 게임 상에서 1미터 거리만큼 차이가 있는 경우, 프로세서는 인게임 오브젝트 요소의 가까운 정도가 높은 것으로 결정하고, 그리고 A 게임 플레이 환경과 B 게임 플레이 환경을 하나의 그룹으로 클러스터링 할 수있다. 예를 들어, 플레이어 간 실력 차이가 A 게임 플레이 환경에서는 15이고 B 게임 플레이 환경에서는 16인 경우, 프로세서는 플레이어 요소 값의 유사한 정도가 높은 것으로 결정하고, 그리고 A 게임 플레이 환경과 B 게임 플레이 환경을 하나의 그룹으로 클러스터링 할 수 있다. 전술한 게임 플레이 환경의 클러스터링에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 플레이 환경의 효과의 유사도는 인게임 오브젝트의 효과가 유사한 정도를 포함할 수 있다. 예를 들어, A 게임 플레이 환경에 포함된 인게임 오브젝트인 호수가 캐릭터의 이동을 방해하는 효과를 발생시키고, 그리고 B 게임 플레이 환경에 포함된 인게임 오브젝트인 모래 바람이 캐릭터의 이동을 방해하는 효과를 발생시키는 경우, 프로세서는 인게임 오브젝트의 효과의 유사도가 높은 것으로 결정하고, 그리고 A 게임 플레이 환경과 B 게 임 플레이 환경을 하나의 그룹으로 클러스터링 할 수 있다. 전술한 게임 플레이 환경의 클러스터링에 관한 구체 적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 사전 결정된 게임 플레이 환경에 대응되는 제 2 플레이어의 하나 이상의 게임 플레이 액션을 포함하는 게임 플레이 액션 그룹을 게임 플레이 환경에 매핑하여 제 2 플레이어의 게임 플레이 패턴을 결정할 수 있다. 프로세서는 클러스터링 된 게임 플레이 환경에 하나 이상의 게임 플레이 액션을 맵핑하여 게임 플레이 액션 그룹을 생성할 수 있다. 예를 들어, 게임 플레이어가 A 게임 플레이 환경에서 B 게임 플레이 액션 을 수행하였고, C 게임 플레이 환경에서 D 게임 플레이 액션을 수행하였고, A 게임 플레이 환경과 C 게임 플레 이 환경의 유사도가 임계 값 이상이어서 하나의 A 게임 플레이 환경 그룹으로 클러스터링 한 경우, 프로세서 는 A 게임 플레이 환경에 B 및 D 게임 플레이 액션을 맵핑하여 게임 플레이 액션 그룹을 생성할 수 있다. 프로세서는 게임 플레이어가 A 게임 플레이 환경에서 B 또는 D 게임 플레이 액션을 수행하는 것으로 게임 플레이 패턴을 결정할 수 있다. 전술한 게임 플레이 패턴에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이 에 제한되지 않는다. 프로세서는 모방 플레이어가 제 2 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도 록 할 수 있다. 프로세서는 모방 플레이어의 게임 플레이 환경에 대응하는 제 2 플레이어의 게임 플레이 패턴이 있는 경우, 모방 플레이어가 제 2 플레이어의 게임 플레이 액션 그룹에 포함된 하나 이상의 게임 플레이 액션 중 하나의 게임 플레이 액션을 모방하도록 할 수 있다. 예를 들어, 프로세서는 게임 플레이 액션 그 룹에 포함된 하나 이상의 게임 플레이 액션 중 하나의 게임 플레이 액션을 랜덤으로 선택하여 모방 플레이어가 게임 플레이 액션을 모방하도록 할 수 있다. 예를 들어, 모방 플레이어가 A 게임 플레이 환경에 있고, 그리고 제 2 게임 플레이어의 게임 플레이 패턴이 \"A 게임 플레이 환경 그룹 - B, C, D 게임 플레이 액션\"인 경우, 프 로세서는 모방 플레이어가 B, C 또는 D 게임 플레이 액션을 수행하도록 결정할 수 있다. 전술한 모방 플레 이어의 게임 플레이에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 모방 플레이어의 게임 플레이 환경에 대응되는 제 2 플레이어의 게임 플레이 패턴이 없는 경우, 모방 플레이어가 제 2 플레이어와 유사한 다른 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액 션을 수행하도록 할 수 있다. 전술한 다른 플레이어는 제 2 플레이어와 유사한 게임 내의 수준을 가지거나 또는 제 2 플레이어와 유사한 게임 플레이 패턴을 가지는 플레이어일 수 있다. 예를 들어, 게임 내의 수준은 게임 플 레이어 캐릭터의 능력치, 게임 플레이어의 랭킹, 보유하고 있는 게임 아이템의 능력치 등일 수 있다. 예를 들어, 프로세서는 제 2 플레이어와 다른 플레이어의 복수의 게임 플레이 환경 각각에서 수행한 게임 플레 이 액션들의 일치도가 높은 경우 유사한 게임 플레이 패턴을 가지는 것으로 결정할 수 있다. 프로세서는 모방 플레이어가 제 2 플레이어와 유사한 다른 플레이어의 게임 플레이 액션 그룹에 포함된 하나 이상의 게임 플레이 액션 중 하나의 게임 플레이 액션을 모방하도록 할 수 있다. 전술한 모방 플레이어의 게임 플레이에 관 한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경 우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하는 링크 에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들을 포함하여 구성될 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노 드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거 리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어 의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의 될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미 할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동 일할 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어 의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형 태의 신경망일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출 력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가 하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태 의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사 한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어의 노드의 수 는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 차원 감소 레이어와 차원 복원 레이어의 노 드는 대칭일 수도 있고 아닐 수도 있다. 오토 인코더는 비선형 차원 감소를 수행할 수 있다. 입력 레이어 및 출 력 레이어의 수는 입력 데이터의 전처리 이후에 남은 센서들의 수와 대응될 수 있다. 오토 인코더 구조에서 인 코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수 도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 출력의 오류를 최소 화하기 위한 것이다. 뉴럴 네트워크의 학습에서 반복적으로 학습 데이터를 뉴럴 네트워크에 입력시키고 학습 데 이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 뉴럴 네트워 크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데 이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴 럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨이 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류 가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전 파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이 트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학 습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습 률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 생략하는 드롭아웃(dropout) 등의 방법이 적용될 수 있다. 이하에서는 프로세서가 게임 플레이 액션 선택 모델을 이용하여 모방 플레이어가 제 2 플레이어를 모방하 도록 하는 방법에 관하여 설명한다. 본 개시의 일 실시예에 따라 프로세서는 모방 플레이어가 제 2 플레이어의 게임 로그를 이용하여 학습된 게임 플레이 액션 선택 모델을 이용하여 게임 플레이 액션을 수행하도록 할 수 있다. 게임 플레이 액션 선택 모 델은 하나 이상의 네트워크 함수를 포함하는 모델일 수 있다. 프로세서는 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리할 수 있다. 전술한 바와 같이 프로세서는 게임 로그에 포함된 복수의 게임 플레이 액션들 각각을 사전 결정된 게임 플레이 환 경에 따라 분리할 수 있다. 프로세서는 사전 결정된 게임 플레이 환경을 학습 데이터의 입력으로 하고, 그 리고 게임 로그에서 분리된 사전 결정된 게임 플레이 환경에서의 제 2 플레이어의 게임 플레이 액션을 학습 데 이터의 라벨로 하는 학습 데이터를 생성할 수 있다. 예를 들어, 프로세서는 플레이어의 캐릭터가 상대 진 영의 몬스터와 대치 상태인 게임 플레이 환경을 학습 데이터의 입력으로 하고, 그리고 플레이어의 캐릭터가 몬 스터에게 A 아이템을 사용하는 게임 플레이 액션을 학습 데이터의 라벨로 하는 학습 데이터를 생성할 수 있다. 전술한 학습 데이터에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따른 게임 플레이 액션 선택 모델은 게임 플레이 환경을 입력시켜 게임 플레이 액션이 출력되도록 교사 학습된 모델일 수 있다. 프로세서는 입력 레이어, 하나 이상의 히든 레이어 및 출력 레이 어를 포함하는 게임 플레이 액션 선택 모델을 생성할 수 있다. 레이어는 하나 이상의 노드를 포함할 수 있다. 노드는 다른 노드와 링크를 통해 연결될 수 있다. 입력 레이어에 포함된 하나 이상의 노드 각각은 게임 플레이환경에 포함된 인게임 오브젝트 요소, 게임 모드 요소 또는 플레이어 요소 각각에 대한 항목 값을 입력 받을 수 있다. 프로세서는 게임 플레이 액션 선택 모델의 입력 레이어의 입력 노드에 입력된 게임 플레이 환경을 입력 노드와 연결된 링크를 통해 연산하여 히든 레이어로 전파할 수 있다. 연산은 임의의 수학적 연산을 포함할 수 있다. 예를 들어, 연산은 곱 또는 합성 곱일 수 있으나, 전술한 기재는 예시일 뿐이며 본 개시는 이에 제한 되지 않는다. 프로세서는 게임 플레이 액션 선택 모델의 출력 레이어로 전파된 값에 기초하여 게임 플레이 액션을 생성할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 게임 플레이 환경에 관한 정보를 게임 플레이 액션 선택 모델에 입력하기 위하여 원 핫 벡터(one hot vector) 표현으로 변형할 수 있다. 게임 플레이 환경에 관한 원 핫 벡터에 관한 표현은 하나 이상의 차원을 가지며, 하나의 차원에 대한 좌표 값 1을 가지고 나머지 좌표에 대하여 좌표 값 0을 가지는 벡터를 포함할 수 있다. 원 핫 벡터는 벡터의 모든 성분에 대하여 값이 0 또는 1인 벡터로 표현 되는 바이너리 벡터일 수 있다. 예를 들어, 학습 데이터의 입력인 게임 플레이 환경이 플레이어의 캐릭터 이동 을 제한시키는 바람 및 캐릭터의 주변에 있는 몬스터를 포함하는 경우, 게임 플레이 환경에 대한 원 핫 벡터 표 현은 플레이어의 캐릭터 이동을 제한시키는 바람 및 캐릭터의 주변에 있는 몬스터 각각에 대해서만 1이고, 나머 지 항목들에 대해서는 0 값을 가지는 벡터 표현일 수 있다. 전술한 게임 플레이 환경에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 게임 플레이 액션 선택 모델을 생성하기 위하여 학습 데이터에 포함된 게임 플레이 환경을 게 임 플레이 액션 선택 모델의 입력 레이어에 포함된 하나 이상의 입력 노드에 입력시키고, 게임 플레이 액션 선 택 모델의 출력 레이어에서 연산한 게임 플레이 액션(즉, 출력)과 학습 데이터에 포함된 라벨인 게임 플레이 액 션(즉, 정답)을 비교하여 오차를 계산할 수 있다. 프로세서는 오차에 기초하여 게임 플레이 액션 선택 모 델의 가중치를 조정할 수 있다. 프로세서는 상기 오차에 기초하여 게임 플레이 액션 선택 모델의 하나 이 상의 네트워크 함수에 포함된 출력 레이어로부터 하나 이상의 히든 레이어를 거쳐 입력 레이어로 전파함으로써, 각각의 링크에 설정된 가중치를 업데이트할 수 있다. 프로세서는 학습 데이터를 이용하여 학습된 게임 플레이 액션 선택 모델을 이용하여 모방 플레이어가 제 2 플레이어를 모방하는 게임 플레이 액션을 수행하도록 할 수 있다. 프로세서는 모방 플레이어의 현재 게임 플레이 환경에 관한 정보를 게임 플레이 액션 선택 모델의 입력으로 하여 연산하고, 그리고 게임 플레이 액션 선택 모델의 출력인 게임 플레이 액션을 이용하여 모방 플레이어가 게임 플레이를 수행하도록 할 수 있다. 이하에서는 프로세서가 게임 플레이 액션 선택 모델을 이용하여 모방 플레이어가 제 2 플레이어를 모방하 도록 하는 다른 방법에 관하여 설명한다. 본 개시의 일 실시예에 따라 프로세서는 모방 플레이어가 제 2 플레이어의 게임 로그에 적어도 일부 기초 하여 학습된 게임 플레이 액션 선택 모델을 이용하여 게임 플레이 액션을 수행하도록 할 수 있다. 본 개시의 일 실시예에 따른 게임 플레이 액션 선택 모델은 강화학습 모델을 포함할 수 있다. 본 개시의 일 실 시예에 따른 강화학습 모델에 관련한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 미국 등록특허 US7837543 (출원일: 2004년04월30일)에서 구체적으로 논의된다. 이하에서는 게임 플레이 액션 선택 모 델에 관하여 도 3을 참조하여 설명한다. 도 3은 본 개시의 일 실시예에 따른 게임 플레이 액션 선택 모델을 예 시적으로 도시한 블록 구성도이다. 강화학습 모델은 정책을 결정하는 적응형 에이전트, 정책의 결과에 대해 보상을 결정하여 정책을 업데이트하기 위한 보상 모듈, 그리고 게임 플레이 환경을 제공하기 위한 게임 엔진을 포함할 수 있다. 적응형 에이전트는 컴퓨터로 제어되는 에이전트일 수 있다. 일반적으로, 적응형 에이전트는 명백한 목표가 있을 수 있다. 적응형 에이전트는 개발단계에서 설정된 목표가 있을 수 있으며, 목표는 게임이 진 행됨에 따라 변경될 수 있다. 적응형 에이전트는 모방 플레이어의 게임 플레이 환경을 감지할 수 있으며, 정책에 따라 행동(즉, 본 개시에서 게임 플레이 액션)을 선택하여 게임 플레이 환경에 영향을 줄 수 있다. 적응 형 에이전트는 본 개시의 일 실시예에서 게임 플레이 액션을 수행하는 인공지능 플레이어인 모방 플레이 어 일 수 있다. 게임 엔진은 게임 플레이 환경을 제공할 수 있다. 일반적으로, 주어진 상태 st 와 행동 at 으로부터 게임 엔진은 주어진 게임 플레이 환경에서 다음 상태 st+1를 예측한다. 시간간격 t는 개발 단계에서 미리 정해 놓은 것으로써, 게임 플레이 환경에서 기본적인 시간 간격을 나타낸다. 예를 들어, 게임에서의 시간 간격은 비 디오의 한 프레임, 실시간 시뮬레이션에서의 사전 결정된 시간 간격 및 동일한 간격을 가지는 시간 간격일 수 있다. 정책은 게임 플레이 환경에서 적응형 에이전트가 주어진 시간 내에 하는 행동인 게임 플레이 액션 을 결정할 수 있다. 일반적으로 정책은 게임 플레이 환경에서의 상태와 게임 플레이 환경에서의 상태로부터 취 하는 행동인 게임 플레이 액션을 맵핑(mapping)시킨다. 상태집합은 게임 플레이 환경에서 적응형 에이전트 가 직면할 수 있는 상태들을 모두 포함하며, 행동집합은 현재 게임 플레이 환경 상태에서 취할 수 있는 모든 행동들을 포함한다. 보상 모듈은 사전 결정된 목표를 달성하기 위해 현재 게임 상태인 게임 플레이 환경에서 선택된 행동(즉, 게임 플레이 액션)이 효과적인지 평가하여 정책을 변경할 수 있다. 보상 모듈은 전형적인 목표를 정의하며, 전형적인 목표는 개발단계에서 특정될 수 있다. 일반적으로, 보상 모듈은 게임 시간 간격t가 아닌 행 동 시간 간격n에 따라 동기화된다. 행동 시간n은 일련의 행동에 포함된 하나의 행동이 시작하여 끝날 때까지 걸 린 시간을 의미한다. 보상 모듈은 인지된 상태 또는 상태-행동 쌍을 보상 변수 rn 과 맵핑(mapping)시킨 다. 적응형 에이전트는 일련의 행동들을 통해 보상 합계가 최대가 되도록 노력한다. 전술한 컴포넌트들은 프로세서 상에서의 연산에 사용되는 소프트웨어 모듈일 수 있으며, 각각의 동작을 수 행하기 위하여 고안된 하드웨어 모듈일 수도 있다. 이하에서는 게임 플레이 액션 선택 모델의 초기 학습 방법에 관하여 설명한다. 프로세서는 사전 결정된 초기 학습 단계에서는 제 1 게임 플레이 환경에서 모방 플레이어가 제 1 게임 플 레이 환경에서의 제 2 게임 플레이어의 게임 플레이 액션을 모방하도록 게임 플레이 액션 선택 모델을 학습시킬 수 있다. 본 개시의 일 실시예에 따라 사전 결정된 초기 학습 단계에서의 게임 플레이 액션 선택 모델은 제 2 플레이어의 게임 로그를 이용하여 교사 학습된 모델일 수 있다. 교사 학습된 모델은 실제 플레이어인 제 2 플레이어의 게임 플레이 액션을 학습하여 모방 플레이어가 게임 플레이 환경에서 게임 플레이 액션을 수행하도록 할 수 있다. 게 임 플레이 액션 선택 모델은 인간 게이머의 활동 내역을 학습 데이터로 하여, 인간 게이머들이 주어진 상황(즉, 게임 플레이 환경)에서 선택한 게임 플레이 액션에 대해 높은 확률을 갖도록 교사 학습될 수 있다. 따라서 초기 에 제 2 플레이어의 게임 로그를 이용하여 학습된 게임 플레이 액션 선택 모델은 제 2 플레이어의 게임 패턴을 학습하여 모방 플레이어가 주어진 게임 플레이 환경에서 인간 게이머의 게임 패턴과 유사하게 플레이 하도록 할 수 있다. 사전 결정된 초기 학습 단계는, 제 2 플레이어의 게임 로그에 대한 교사 학습을 수행하는 동안의 학습 단계일 수 있다. 게임 플레이 액션 선택 모델은 정책 네트워크(policy network)를 사용한 모델일 수 있다. 본 개시의 일 실시예 에 따라 사전 결정된 초기 학습 단계에서의 정책 네트워크는 교사 학습된 정책 네트워크(SL policy network)일 수 있다. 교사 학습된 정책 네트워크는 실제 플레이어인 제 2 플레이어의 활동 내역(즉, 제 2 플레이어의 게임 로그)을 기초로 학습된 네트워크일 수 있다. 사전 결정된 초기 학습 단계에서, 행동집합에 포함된 전체 게임 플레이 액션들 중 랜덤으로 게임 플레이 액션을 선택하는 경우, 행동집합 영역이 크기 때문에(즉, action space가 큼) 초기 학습에 소요되는 연산량이 많아질 수 있고, 그리고 학습에 소요되는 시간이 증가될 수 있다. 따라서, 본 개시의 일 실시예에 따라 초기 학습 단계 에서는 행동집합에 포함된 전체 게임 플레이 액션들 중 랜덤으로 게임 플레이 액션을 선택하는 것이 아니라, 제 2 플레이어의 실제 게임 플레이 액션을 모방하도록 하여, 행동집합에서 게임 플레이 액션을 선택하는 랜덤한 행 동 선택(즉, random behavior 선택)에 대한 변수를 줄여, 학습 속도를 빠르게 할 수 있다. 또한, 초기 학습 단 계에서 실제 제 2 플레이어의 게임 플레이 액션에 따라 행동을 선택함으로써, 모방 플레이어가 제 2 플레이어의 게임 플레이를 모방하도록 할 수 있다. 이하에서는 게임 플레이 액션 선택 모델의 후기 학습 방법에 관하여 설명한다. 프로세서는 사전 결정된 후기 학습 단계에서는 게임 플레이 액션 선택 모델을 이용하여 제 1 게임 플레이 환경에서 모방 플레이어가 수행할 게임 플레이 액션을 출력하도록 하고, 그리고 게임 플레이 액션에 따라 변경 된 제 2 게임 플레이 환경에 기초하여 게임 플레이 액션에 대한 보상을 결정하여 게임 플레이 액션 선택 모델을 업데이트하도록 게임 플레이 액션 선택 모델을 학습시킬 수 있다. 본 개시의 일 실시예에서, 강화학습 모델인 게임 플레이 액션 선택 모델은 정책 네트워크 및 상기 가치 네트워 크(value network)를 사용한 모델일 수 있다. 정책 네트워크는 교사 학습된 정책 네트워크 및/또는 강화 학습된 정책 네트워크일 수 있다. 강화 학습된 정책 네트워크는 사전 결정된 초기 학습 단계에서 제 2 플레이어의 게임 로그를 이용하여 교사 학습된 정책 네트워크를 기초로 초기화될 수 있으며, 리워드를 최대화하도록 학습하는 네 트워크일 수 있다. 가치 네트워크는 강화 학습된 정책 네트워크의 게임 플레이 액션에 대한 선택 및 그에 따른 승률을 기초로 학습하며, 주어진 게임 플레이 환경에서 모방 플레이어의 승률을 예측할 수 있다. 모방 플레이어를 제어하기 위한 게임 플레이 액션 선택 모델인 강화 학습 모델에 관련한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 네이처 논문 Mastering the game of Go with deep neural networks and tree search (공개일: 2016년01월27일, 작성자: David Silver, Aja Huang, Chris J.Maddison, Arthur Guez, Laurent Sifre, George van den Driessche, Julian Schrittwieser, Ioannis Antonoglou, Veda Panneershelvam, Marc Lanctot, Sander Dieleman, Dominik Grewe, John Nham, Nal Kalchbrenner, Ilya Sutskever, Timothy Lillicrap, Madeleine Leach, Koray Kavukcuoglu, Thore Graepel & Demis Hassabis)에서 구체적으로 논의된다. 본 개시의 일 실시예에 따라 사전 결정된 후기 학습 단계에서는 강화학습 모델인 게임 플레이 액션 선택 모델에 포함된 네트워크 함수가 선택한 정책(즉, 선택한 게임 플레이 액션) 및 선택한 게임 플레이 액션에 따른 모방 플레이어의 승률을 기초로 네트워크의 전체적인 정책을 개선하여 승률을 높일 수 있다. 전체적인 정책은 강화학 습 모델이 취하는 게임 플레이 액션들의 집합으로써, 주어진 게임 플레이 환경에서 승률을 높이는 행동을 포함 한다. 본 개시의 일 실시예에 따라 게임 플레이 액션에 대한 보상은 제 2 게임 플레이 환경에서 모방 플레이어의 승률 에 기초하여 결정될 수 있다. 모방 플레이어의 승률은 제 2 게임 플레이 환경의 인게임 오브젝트 요소, 게임 모 드 요소 또는 플레이어 요소 중 적어도 하나에 따라 결정될 수 있다. 예를 들어, 프로세서는 부정적인 영 향을 주는 인게임 오브젝트 요소가 모방 플레이어 캐릭터로부터 멀어지는 경우, 또는 상대 플레이어 캐릭터가 데미지를 입은 경우 승률이 높아진 것으로 결정할 수 있다. 전술한 보상에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 게임 플레이 액션에 대한 보상은 제 2 게임 플레이 환경에서 모방 플레이어의 승패 정도에 따라 상이한 값으로 결정될 수 있다. 모방 플레이어의 승패 정도는 모방 플레이어 캐릭터 및/또는 상대 플레이어 캐릭터에 부정적인 및/또는 긍정적인 영향을 주는 게임 플레이 환경에 포함된 요소들의 변경 정도에 따라 결정될 수 있다. 예를 들어, 상대방 플레이어 캐릭터에 데미지를 100만큼 준 경우의 게임 플레이 액션에 대한 보상은 상대방 플레이어 캐릭터에 데미지를 30만큼 준 경우의 게임 플레이 액션에 대한 보상보다 클 수 있 다. 즉, 본 개시의 일 실시예에 따라 보상은 바이너리 값으로 결정되지 않을 수도 있다. 전술한 보상에 관한 구 체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 프로세서가 제 1 플레이어와 모방 플레이어의 대전에 따른 결과를 제 1 플레이어 및 제 2 플레 이어의 실적에 반영하는 방법에 관하여 설명한다. 본 개시의 일 실시예에 따라 프로세서는 모방 플레이어의 모방 학습 정도에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 제 1 플레이어 또는 제 2 플레이어 중 적어도 하나의 실적으로 결정할 수 있다. 프 로세서는 모방 플레이어의 모방 학습 정도가 높을수록 대전 플레이 결과에 대한 가중치를 높게 결정하여 플레이어들의 실적으로 결정할 수 있다. 예를 들어, 모방 플레이어의 모방 학습 정도가 높은 경우, 실제 제 2 플레이어와 유사한 게임 플레이를 수행할 수 있으므로 제 1 플레이어 및 제 2 플레이어에게 승/패 결과에 대한 실적을 그대로 반영할 수 있다. 또한 예를 들어, 모방 플레이어의 모방 학습 정도가 낮은 경우, 실제 제 2 플레 이어의 게임 실력과 유사하지 않은 게임 플레이를 수행할 수 있으므로, 모방 플레이어가 우승하는 경우 모방 플 레이어의 플레이를 허용한 제 2 플레이어에게 더 큰 가중치를 부여하여 2번 우승한 것과 동일한 실적을 부여할 수도 있고, 그리고 제 1 플레이어에게 2번 진 것과 동일한 실적을 부여할 수도 있다. 전술한 실적에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 프로세서는 모방 플레이어와 대전한 제 1 플레이어와 모방 플레이어의 능력치 차이에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 제 1 플레이어 또는 제 2 플레이어 중 적어 도 하나의 실적으로 결정할 수 있다. 프로세서는 제 1 플레이어의 능력치가 모방 플레이어의 능력치보다 높은 경우에 모방 플레이어가 이기는 경우, 대전 플레이 결과에 대한 가중치를 높게 결정하여 플레이어들의 실 적으로 반영할 수 있다. 즉, 제 1 플레이어의 능력치가 높은 경우이고 그리고 모방 플레이어의 능력치가 낮은 경우임에도 불구하고 모방 플레이어가 이기는 경우, 프로세서는 모방 플레이어의 승리에 더 큰 리워드를 부여할 수 있다. 전술한 실적에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 도 4는 본 개시의 일 실시예에 따른 게임 대전 방법을 제공하기 위한 순서도이다. 컴퓨팅 장치는 제 1 플레이어 단말로부터 대전 요청을 수신할 수 있다. 대전 요청은 일 플레이어가 대결 상대를 매칭시켜줄 것을 게임 서버에 요청하는 것일 수 있다. 컴퓨팅 장치는 대전 요청에 기초하여 제 1 플레이어의 대전 상대인 대전 플레이어를 결정할 수 있다. 대전 플레이어는 제 2 플레이어 또는 제 2 플레이어를 모방하는 모방 플레이어일 수 있다. 대전 플레이어는 실 제 사용자가 게임 캐릭터를 컨트롤 하는 제 2 플레이어일 수 있다. 대전 플레이어는 또는, 실제 사용자가 게임 캐릭터를 컨트롤하지 않는, 실제 사용자의 게임 캐릭터 컨트롤을 모방하는 모방 플레이어일 수 있다. 본 개시의 일 실시예에 따라 제 2 플레이어와 제 2 플레이어를 모방하는 모방 플레이어가 병렬적으로 게임을 플레이할 수 있다. 대전 플레이어는 온라인 상태의 제 2 플레이어 또는 오프라인 상태의 제 2 플레이어를 모방하는 모방 플레이어 일 수 있다. 컴퓨팅 장치는 제 1 플레이어의 게임 정보를 이용하여 대전 플레이어를 결정할 수 있다. 컴퓨 팅 장치는 제 1 플레이어와 대전 플레이를 수행하도록 매칭된 사용자가 게임에 접속한 온라인 상태인 경우, 사용자가 게임 캐릭터를 컨트롤 하는 제 2 플레이어를 대전 플레이어로 결정할 수 있다. 컴퓨팅 장치 는 제 1 플레이어와 대전 플레이를 수행하도록 매칭된 사용자가 게임에 접속하지 않은 오프라인 상태인 경 우, 사용자가 게임 캐릭터를 컨트롤 하지 않는, 실제 사용자의 게임 캐릭터 컨트롤을 모방하는 모방 플레이어를 대전 플레이어로 결정할 수 있다. 컴퓨팅 장치는 모방 학습 정도가 학습 임계 값 이상인 모방 플레이어들 중 대전 플레이어를 결정할 수 있 다. 컴퓨팅 장치는 모방 학습 정도가 학습 임계 값 이상인 모방 플레이어들 중 대전 플레이어를 결정할 수 있다. 컴퓨팅 장치는 실제 플레이어의 게임 플레이를 모방하도록 학습시키는 모방 학습 정도가 낮은 모방 플레이어는 대전 플레이어에서 제외할 수 있다. 본 개시의 일 실시예에 따라 모방 학습 정도는 실제 사용자의 게임 플레이를 얼마나 유사하게 모방하는지에 기초하여 결정될 수 있다. 실제 사용자의 게임 플레이와 모방 플 레이어의 게임 플레이의 일치도가 높을수록 모방 학습 정도가 높을 수 있다. 본 개시의 일 실시예에 따라 모방 학습 정도는 학습 데이터를 이용한 정량적인 학습의 수행 횟수에 따라 결정될 수 있다. 컴퓨팅 장치는 오프라인 대전을 허용한 오프라인 상태의 플레이어에 대한 모방 플레이어들 중 대전 플레이 어를 결정할 수 있다. 컴퓨팅 장치는 오프라인 대전을 허용한 플레이어에 대하여 리워드를 줄 것을 결정할 수 있다. 리워드는 게임 내에서 게임 플레이어에게 제공되는 보상일 수 있다. 본 개시의 일 실시예에 따라 컴퓨팅 장치는 온라인 상태의 사용자들에 대한 플레이어들 및 모방 학습 정도 가 학습 임계 값 이상이며 오프라인 대전을 허용한 오프라인 상태의 사용자들에 대한 모방 플레이어들 중 제 1 플레이어의 대전 상대인 대전 플레이어를 결정할 수 있다. 대전 플레이어는 제 2 플레이어의 게임 로그를 이용하여 제 2 플레이어를 모방하도록 학습된 모방 플레이어일 수 있다. 게임 로그는 플레이어가 게임 상에서 수행한 게임 플레이 액션의 기록을 포함할 수 있다. 게임 로그는 예를 들어, 게임 플레이 환경에서 게임 플레이어가 게임 플레이 액션을 수행한 모든 기록을 포함할 수 있다. 게 임 로그는 게임 환경에서 플레이어가 컨트롤하는 캐릭터의 액션이 있을 때, 그 즉시 남는 기록을 포함할 수 있 다. 컴퓨팅 장치는 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리할 수 있다. 컴퓨 팅 장치는 유사한 게임 플레이 환경들을 클러스터링(clustering) 할 수 있다. 컴퓨팅 장치는 게임 플 레이 환경들의 유사도를 비교하여 유사도가 임계 값 이상인 게임 플레이 환경들을 하나의 그룹으로 클러스터링할 수 있다. 게임 플레이 환경들의 유사도는, 게임 플레이 환경의 정량적인 유사도 또는 효과의 유사도를 포함 할 수 있다. 컴퓨팅 장치는 사전 결정된 게임 플레이 환경에 대응되는 제 2 플레이어의 하나 이상의 게임 플레이 액션을 포함하는 게임 플레이 액션 그룹을 게임 플레이 환경에 매핑하여 제 2 플레이어의 게임 플레이 패턴을 결정할 수 있다. 컴퓨팅 장치는 클러스터링 된 게임 플레이 환경에 하나 이상의 게임 플레이 액션 을 맵핑하여 게임 플레이 액션 그룹을 생성할 수 있다. 컴퓨팅 장치는 모방 플레이어가 제 2 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 할 수 있다. 컴퓨팅 장치는 모방 플레이어의 게임 플레이 환경에 대응하는 제 2 플레이어의 게임 플레이 패턴이 있는 경우, 모방 플레이어가 제 2 플레이어 의 게임 플레이 액션 그룹에 포함된 하나 이상의 게임 플레이 액션 중 하나의 게임 플레이 액션을 모방하도록 할 수 있다. 컴퓨팅 장치는 모방 플레이어의 게임 플레이 환경에 대응되는 제 2 플레이어의 게임 플레이 패턴이 없는 경우, 제 2 플레이어와 유사한 다른 플레이어의 게임 플레이 패턴에 대응되는 게임 플레이 액션을 수행하도록 할 수 있다. 전술한 다른 플레이어는 제 2 플레이어와 유사한 게임 내의 수준을 가지거나 또는 제 2 플레이어와 유사한 게임 플레이 패턴을 가지는 플레이어일 수 있다. 게임 플레이 환경은 인게임 오브젝트 요소, 게임 모드 요소 또는 플레이어 요소 중 적어도 하나를 포함할 수 있 다. 인게임 오브젝트 요소는 게임 내에서 플레이어와 상호작용할 수 있는 게임 내 요소를 포함할 수 있다. 게임 모드 요소는 게임의 형식과 관련한 요소를 포함할 수 있다. 플레이어 요소는 게임의 활동 내역, 게임 결과에 영 향을 미치는 플레이어에 관련한 요소를 포함할 수 있다. 컴퓨팅 장치는 제 2 플레이어의 게임 로그를 사전 결정된 게임 플레이 환경에 따라 분리할 수 있다. 컴퓨 팅 장치는 사전 결정된 게임 플레이 환경을 학습 데이터의 입력으로 하고, 그리고 사전 결정된 게임 플레 이 환경에서의 제 2 플레이어의 게임 플레이 액션을 학습 데이터의 라벨로 하는 학습 데이터를 생성할 수 있다. 컴퓨팅 장치는 학습 데이터를 이용하여 학습된 게임 플레이 액션 선택 모델을 이용하여 모방 플레이어가 제 2 플레이어를 모방하는 게임 플레이 액션을 수행하도록 할 수 있다. 본 개시의 일 실시예에 따른 게임 플레 이 액션 선택 모델은 게임 플레이 환경을 입력시켜 게임 플레이 액션이 출력되도록 교사 학습된 모델일 수 있다. 컴퓨팅 장치는 사전 결정된 초기 학습 단계에서는 제 1 게임 플레이 환경에서 모방 플레이어가 제 1 게임 플레이 환경에서의 제 2 게임 플레이어의 게임 플레이 액션을 모방하도록 게임 플레이 액션 선택 모델을 학습시 킬 수 있다. 본 개시의 일 실시예에 따른 게임 플레이 액션 선택 모델은 강화학습 모델을 포함할 수 있다. 컴퓨 팅 장치는 사전 결정된 후기 학습 단계에서는 게임 플레이 액션 선택 모델을 이용하여 제 1 게임 플레이 환경에서 모방 플레이어가 수행할 게임 플레이 액션을 출력하도록 하고, 그리고 게임 플레이 액션에 따라 변경 된 제 2 게임 플레이 환경에 기초하여 게임 플레이 액션에 대한 보상을 결정하여 게임 플레이 액션 선택 모델을 업데이트하도록 게임 플레이 액션 선택 모델을 학습시킬 수 있다. 게임 플레이 액션에 대한 보상은 제 2 게임 플레이 환경에서 모방 플레이어의 승률에 기초하여 결정될 수 있다. 컴퓨팅 장치는 제 1 플레이어 단말에 대전 플레이어에 관한 정보를 전송할 수 있다. 컴퓨팅 장치는 모방 플레이어의 모방 학습 정도에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정 하여 제 1 플레이어 또는 제 2 플레이어 중 적어도 하나의 실적으로 결정할 수 있다. 컴퓨팅 장치는 모방 플레이어와 대전한 제 1 플레이어와 모방 플레이어의 능력치 차이에 따라 대전 플레이 결과에 대한 가중치를 상이하게 결정하여 제 1 플레이어 또는 제 2 플레이어 중 적어도 하나의 실적으로 결정할 수 있다. 도 5는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술되었 지만, 당업자라면 본 개시가 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구 현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드 헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있다. 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시적 (transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동식 및 비이동식 매체를 포함한다. 컴퓨터 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메모리 기술, CD- ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 기타 전송 메커니즘(transport mechanism)과 같은 피변조 데이터 신호 (modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현 하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호 의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴퓨터 판독가능 전송 매 체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외 선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)-이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음-, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비 휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시 적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다.운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화 된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결 을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화 된 환경에서, 컴퓨터에 대해 설명된 프 로그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예 시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a,b,g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네 트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비인 가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다.본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 매체는 자기 저장 장치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래 쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계 -판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2019-0116208", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따라 게임 대전 방법을 제공하기 위한 동작을 수행하는 컴퓨팅 장치의 블록 구성 도이다. 도 2는 본 개시의 일 실시예에 따른 게임 대전 방법을 설명하기 위한 예시도이다. 도 3은 본 개시의 일 실시예에 따른 게임 플레이 액션 선택 모델을 예시적으로 도시한 블록 구성도이다. 도 4는 본 개시의 일 실시예에 따른 게임 대전 방법을 제공하기 위한 순서도이다. 도 5는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
