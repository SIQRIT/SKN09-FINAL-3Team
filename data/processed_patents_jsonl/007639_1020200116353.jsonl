{"patent_id": "10-2020-0116353", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0033912", "출원번호": "10-2020-0116353", "발명의 명칭": "메모리를 관리하기 위한 전자 장치, 전자 장치의 동작 방법, 및 비 일시적 저장 매체", "출원인": "삼성전자주식회사", "발명자": "권지만"}}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서, 메모리; 및 상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함하며, 상기 메모리는, 상기 적어도 하나의 프로세서에 의해 실행 시, 상기 적어도 하나의 프로세서가, 상기 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하고, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하고, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 제2 임계 값을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하고, 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하도록 하는 인스트럭션들을 저장하며, 상기 제1 임계값은 제2 임계값보다 큰 값인, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제3 메모리 회수 동작은 상기 제2 메모리 회수 동작 보다 빠른 속도로 상기 메모리의 가용 용량을 확보하는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 실행하는 동안, 상기 할당된 적어도 하나의 프로세스 중 선택된 프로세스를 종료한 후, 지정된 딜레이 시간 동안 대기하고, 다음 선택된 프로세스를 종료하는 동작을 수행하도록 하는 인스트럭션을 저장하며, 상기 지정된 딜레이 시간은 제2 메모리 회수 동작에서 지정된 딜레이 시간보다 작은 값으로 지정되는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작 중에 확인된 가용 용량이 상기 제2 임계값을 초과할 때, 상기 제3 메모리 회수 동작을 중단하고, 상기 제2 메모리 회수 동작 중에 확인된 가용 용량이 상기 제1 임계값을 초과할 때, 상기 제2 메모리 회수 동작을 중단하도록 하는 인스트럭션들을 저장하는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 프로세스를 할당하기 위한 요청에 따라 확인된 가용 용량이 지정된 제3 임계값에 도달할 때, 상기 확인된공개특허 10-2022-0033912-3-가용 용량이 부족한 것으로 식별하고, 상기 제1 메모리 회수 동작을 실행하도록 하는 인스트럭션을 저장하며, 상기 제1 메모리 회수 동작은 상기 메모리의 일 영역에 상기 할당된 적어도 하나의 프로세스의 상기 일부 데이터를 회수하는 제1 동작 및 제2 동작을 포함하는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 프로세스를 할당하기 위한 요청에 따라 확인된 가용 용량이 지정된 제3 임계값(low watermark) 이하일 때,상기 제1 동작을 실행하고, 상기 제1 동작 중에 확인된 가용 용량이 지정된 제4 임계값(min watermark) 이하일 때, 상기 제2 동작을 실행하고, 상기 제1 동작 중에 확인된 가용 용량이 제5 임계값을 초과할 때, 상기 제1 동작을 중단하고, 상기 제2 동작 중에 확인된 상기 가용 용량이 상기 제4 임계값을 초과할 때, 상기 제2 동작을 중단하도록 하는인스트럭션들을 저장하며, 상기 제3 임계값은 상기 제2 임계값보다 큰 값이며,상기 제4 임계값은 상기 제2 임계값보다 작은 값인, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 상기 제2 동작을 실행하기 이전에 실행하도록 하는 인스트럭션을 저장하는, 전자장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 실행할 때, 지정된 프로세스 종료 조건을 확인하지 않고, 프로세스 크기 또는 메모리 점유율 중 적어도 하나 및 중요도 값을 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료대상 프로세스를 선택하고, 선택된 적어도 하나의 종료 대상 프로세스를 종료하도록 하는 인스트럭션들을 저장하는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제2 메모리 회수 동작을 실행할 때, 지정된 프로세스 종료 조건 및 지정된 중요도를 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료 대상 프로세스를 선택하고, 선택된 적어도 하나의 종료 대상 프로세스를 종료하도록 하는 인스트럭션들을 저장하는, 전자 장치."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "전자 장치에서의 동작 방법에 있어서, 상기 전자 장치의 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하는 동작; 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하는 동작; 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계값을 초과한 것에 기반하여, 상기제2 메모리 회수 동작을 실행하는 동작; 및 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 포함하며, 공개특허 10-2022-0033912-4-상기 제1 임계값은 제2 임계값보다 큰 값인, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 제3 메모리 회수 동작은 상기 제2 메모리 회수 동작 보다 빠른 속도로 상기 메모리의 가용 용량을 확보하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 제3 메모리 회수 동작을 실행하는 동작은, 상기 제3 메모리 회수 동작을 실행하는 동안, 상기 할당된 적어도 하나의 프로세스 중 선택된 프로세스를 종료하는 동작;지정된 딜레이 시간 동안 대기하는 동작; 및 다음 선택된 프로세스를 종료하는 동작을 포함하며, 상기 지정된 딜레이 시간은 제2 메모리 회수 동작에서 지정된 딜레이 시간보다 작은 값으로 지정되는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서, 상기 방법은, 상기 제3 메모리 회수 동작 중에 확인된 가용 용량이 상기 제2 임계값을 초과할 때, 상기 제3 메모리 회수 동작을 중단하는 동작; 및 상기 제2 메모리 회수 동작 중에 확인된 가용 용량이 상기 제1 임계값을 초과할 때, 상기 제2 메모리 회수 동작을 중단하는 동작을 더 포함하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 제1 메모리 회수 동작을 실행하는 동작은, 상기 프로세스를 할당하기 위한 요청에 따라 확인된 상기 가용 용량이 지정된 제3 임계값에 도달할 때, 상기 확인된 가용 용량이 부족한 것으로 식별하는 동작을 포함하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서, 상기 제1 메모리 회수 동작은 상기 메모리의 일 영역에 상기 할당된 적어도 하나의 프로세스의 상기 일부 데이터를 회수하는 제1 동작 및 제2 동작을 포함하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 제1 메모리 회수 동작을 실행하는 동작은,상기 프로세스를 할당하기 위한 요청에 따라 확인된 상기 가용 용량이 지정된 제3 임계값 이하일 때, 상기 제1동작을 실행하는 동작; 상기 제1 동작 중에 확인된 가용 용량이 지정된 제4 임계값(min watermark) 이하일 때, 상기 제2 동작을 실행하는 동작; 상기 제1 동작 중에 확인된 가용 용량이 제5 임계값을 초과할 때, 상기 제1 동작을 중단하는 동작; 및상기 제2 동작 중에 확인된 가용 용량이 상기 제4 임계값을 초과할 때, 상기 제2 동작을 중단하는 동작을 포함하며, 상기 제3 임계값(Low watermark)은 상기 제2 임계값보다 큰 값이며,공개특허 10-2022-0033912-5-상기 제4 임계값은 상기 제2 임계값보다 작은 값인, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서,상기 제3 메모리 회수 동작은 상기 제2 동작을 실행하기 이전에 실행되는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제10항에 있어서, 상기 제3 메모리 회수 동작을 실행하는 동작은, 지정된 프로세스 종료 조건을 확인하지 않고, 프로세스 크기 또는 메모리 점유율 중 적어도 하나 및 중요도 값을 기반하여 상기 메모리에 할당된 프로세스들 중에서 적어도 하나의 종료 대상 프로세스를 선택하는 동작; 및선택된 적어도 하나의 종료 대상 프로세스를 종료하는 동작을 포함하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제10항에 있어서, 상기 제2 메모리 회수 동작을 실행하는 동작은, 지정된 프로세스 종료 조건을 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 프로세스를 선택하는 동작;선택된 적어도 하나의 프로세스 중 지정된 중요도를 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료 대상 프로세스를 선택하는 동작; 및 선택된 적어도 하나의 종료 대상 프로세스를 종료하는 동작을 포함하는, 전자 장치에서의 동작 방법."}
{"patent_id": "10-2020-0116353", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "비일시적 저장 매체에 있어서, 상기 프로그램은, 프로세서에 의한 실행 시, 상기 프로세서가, 상기 전자 장치의 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하는 동작; 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하는 동작;상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계값을 초과한 것에 기반하여, 상기제2 메모리 회수 동작을 실행하는 동작; 및 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 수행하도록 실행 가능한 명령을 포함하며, 상기 제1 임계값은 제2 임계값보다 큰 값인, 비일시적 저장 매체."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 문서는 메모리를 관리하기 위한 전자 장치 및 전자 장치에서의 동작 방법에 관한 것으로서, 일 실시예에 따르 면, 전자 장치는, 메모리 및 상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함하며, 상기 메모리 는, 상기 적어도 하나의 프로세서에 의해 실행 시, 상기 적어도 하나의 프로세서가, 상기 메모리에 프로세스를 (뒷면에 계속)"}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서의 다양한 실시 예들은 메모리를 관리하기 위한 전자 장치, 전자 장치의 동작 방법, 및 비 일시적 저장 매체에 관한 것이다."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치는 하드웨어 및 소프트웨어의 두 가지 측면으로 구성될 수 있다. 하드웨어의 측면에서 전자장치는 프 로세스의 연산 및 처리를 위한 프로세서(CPU, 또는 SOC)와, 프로세스를 위한 데이터가 로딩되는 메모리를 포함 할 수 있다. 소프트웨어의 측면에서, 전자 장치는 시스템의 기본 관리를 수행하는 운영체제(또는 커널)과, 운영 체제 상에서 구동하며 프로세스를 실행하는 어플리케이션을 포함할 수 있다. 예를 들면, 프로세서(CPU)는 운영 체제에 해당하는 데이터를 메모리에 로딩하여 실행시키고, 운영체제가 실행되는 동안에 어플리케이션을 메모리에 로딩하여 운영체제 상에서 실행시킴으로써, 최종적으로 어플리케이션의 실행에 의해 프로세스가 수행된다. 최근에는 전자 장치가 다양한 서비스를 제공함에 따라 다양한 어플리케이션들을 포함할 수 있으며, 여러 어플리 케이션이 동시에 실행함에 따라 어플리케이션이 로딩되어 실행되는 메모리의 관리도 중요하게 되었다."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "전자 장치는 시간이 경과함에 따라서 동시에 여러 어플리케이션이 실행되고, 여러 어플리케이션의 프로세스의 실행 및 종료가 반복됨에 따라 프로세스의 데이터가 메모리에 로딩되는 점유율인 메모리의 사용용량이 늘어나고, 메모리의 가용용량이 줄어들게 된다. 전자 장치는 메모리의 가용 용량이 소정의 한계치 이하로 줄어 들면, 프로세스의 실행을 위해 메모리의 사용용량을 줄이고 가용용량을 늘리는 동작을 수행할 수 있다. 메모리(RAM)대비 메모리사용비중이 매우 큰 프로세스들이 많이 증가함에 따라 종래에는 메모리의 가용 용량을 늘리기 위한 동작으로 운영체제에서 여러 가지의 메모리 회수 동작을 실행하고 있다. 이러한 종래의 메모리 회 수 동작은 필연적으로 프로세서(CPU)의 부하를 발생시키게 되는데, 이러한 프로세서(CPU)의 부하가 증가되면 동 작의 지연을 발생시키므로 전자장치의 성능이 저하될 수 있다. 전자 장치는 제한된 메모리(RAM) 용량으로 인하여 메모리 상태를 모니터링하고 전자 장치의 성능을 허용 수준에 서 유지하기 위해 메모리의 가용 용량을 확보할 필요가 있다. 본 문서의 다양한 일 실시 예들에 따르면, 메모리의 가용 용량을 확보할 수 있도록 메모리를 관리하기 위한 전 자 장치, 전자 장치의 동작 방법, 및 비 일시적 저장 매체가 제공될 수 있다."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 문서의 일 실시예에 따르면, 전자 장치는, 메모리 및 상기 메모리와 전기적으로 연결된 적어도 하나의 프로 세서를 포함하며, 상기 메모리는, 상기 적어도 하나의 프로세서에 의해 실행 시, 상기 적어도 하나의 프로세서 가, 상기 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적 어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하고, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확 인하고, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 제2 임계 값을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하고, 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하도록 하는 인스트럭션들을 저장하며, 상기 제1 임계 값은 제2 임계값보다 큰 값일 수 있다. 또한, 일 실시예에 따르면, 전자 장치에서의 동작 방법은, 상기 전자 장치의 메모리에 프로세스를 할당하기 위 한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수 하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하는 동작, 상기 제1 메모리 회 수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하는 동작, 상기 확인된 가용 용량 의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계값을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하는 동작 및 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반 하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 포함하며, 상기 제1 임계값은 제2 임계값보다 큰 값일 수 있다. 또한, 일 실시예에 따르면, 비일시적 저장 매체는, 상기 프로그램은, 프로세서에 의한 실행 시, 상기 프로세서 가, 상기 전자 장치의 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리 에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하는 동작, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리 의 가용 용량을 확인하는 동작, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계값 을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하는 동작 및 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 수 행하도록 실행 가능한 명령을 포함하며, 상기 제1 임계값은 제2 임계값보다 큰 값일 수 있다."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "일 실시 예에 따른 전자 장치 및 전자 장치에서의 동작 방법에 따라, 전자 장치는 제3 메모리 회수 동작을 실행 하여 보다 빠른 속도로 메모리에 할당된 프로세스를 종료할 수 있으며, 이에 따라 보다 빠른 속도로 메모리의 가용 용량을 확보하여 메모리 부족 상태를 빠르게 벗어날 수 있으며, 제1 메모리 회수 동작(제1 동작 또는/및 제2 동작)의 실행에 따른 프로세서의 부하를 줄임으로써 전자 장치의 성능을 향상시킬 수 있는 효과가 있다."}
{"patent_id": "10-2020-0116353", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면들을 참조하여 다양한 실시예에 따른 전자 장치에 대해서 살펴본다. 다양한 실시예에서 이용 되는 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예를 들어, 인공지능 전자 장치)를 지칭할 수 있다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신 할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모 듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자 체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공 지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워 크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지 능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 1eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 111 전자 장치는, 예를 들어, 분 산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외 부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경 망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워 크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 이하, 설명되는 일 실시 예에서는 메모리의 가용 용량이 부족한 상태로서, 메모리의 사용용량을 줄이고 가용용 량을 증가시키기 위한 동작을 메모리 회수 동작으로 칭하여 설명될 수 있다. 도 2는 다양한 실시 예들에 따른 전자 장치의 구성 예를 나타내는 도면이다. 도 1 및 도 2를 참조하면, 일 실시예에 따른 전자 장치의 프로세서는 메모리와 전기적으로 연결 되어 메모리에 포함된 소프트웨어인 운영체제(또는 커널) 및 복수의 어플리케이션의 동작을 제 어할 수 있다. 메모리는 운영체제(또는 커널) 및 복수의 어플리케이션을 포함하는 비휘발성 메 모리(또는 플래시 메모리) 및 휘발성 메모리(RAM)을 포함하여 구성될 수 있다. 일 실시예에 따르면, 프로세서는 메모리에 인스톨된 운영체제(또는 커널)를 구동시킬 수 있으며, 운영체제(또는 커널)에 의해 실행되는 어플리케이션의 프로세스를 실행하도록 운영체제(또는 커널)를 제어할 수 있다. 일 실시예에 따르면, 프로세서는 어플리케이션의 실행에 따른 프로세스를 메모리에 할당하도록 메모리를 제어할 수 있다. 예를 들어, 프로세서는 어플리케이션을 메모리에 포함된 비휘발 성 메모리로부터 휘발성 메모리(RAM)로 로딩되도록 처리하고, 휘발성 메모리로 로딩된 어플리케 이션의 프로세스를 실행하도록 처리할 수 있다. 휘발성 메모리로 로딩된 어플리케이션은 휘발성 메모리의 가용 용량을 점유하며, 운영체제(또는 커널)에서 실행될 수 있다. 휘발성 메모리의 가 용용량은, 데이터가 로딩되지 않거나 또는 현재 실행중인 프로세스에 대해 할당되지 않은 저장영역의 용량을 의 미할 수 있다. 운영체제(또는 커널)는 프로세서의 제어에 따라 비휘발성 메모리의 어플리케이션 을 휘발성 메모리에 로딩하여 실행하도록 하는 명령, 휘발성 메모리에 어플리케이션의 프 로세스의 할당 및 할당 해제를 수행하도록 하는 명령을 수행할 수 있다. 휘발성 메모리는 동작 시간이 경과됨에 따라서 프로세스의 실행이 반복 또는 여러 프로세스들이 실행되어 용량을 많이 점유하게 되어 가용 용량이 부족하게 될 수 있다. 이러한 휘발성 메모리의 가용 용량이 부족한 상태인 지를 판단하기 위해, 프로세서는 휘발성 메모리의 가용 용량을 지속적으로 또는 주기적으 로 확인하고, 확인된 가용 용량을 기반하여 휘발성 메모리의 가용 용량이 부족한 상태인지를 식별할 수 있 다. 일 실시예에 따르면, 프로세서는 휘발성 메모리의 가용 용량이 부족한 상태인 것을 식별하면, 새로운 프로세스 실행을 위한 휘발성 메모리의 가용 용량의 확보를 위한 메모리 회수 동작을 실행하도록 처리할 수 있다. 운영체제(또는 커널)는 프로세서의 제어에 따라 메모리 회수 동작들(예: 제1 메모리 동작, 제2 메모리 동작 또는 제3 메모리 동작 중 적어도 하나)을 실행하도록 하는 명령을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 휘발성 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 휘발성 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행하도록 구성 될 수 있다. 제1 메모리 회수 동작은 휘발성 메모리의 일 영역 또는 비휘발성 메모리에서 가상 메모 리의 일부 영역에 적어도 하나의 프로세스의 일부 데이터를 압축하여 할당하는 제1 동작(예: kswapd(kernel swap daemon)) 및 제2 동작(예: direct reclaim)을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 제1 메모리 회수 동작에 의해 발생한 메모리 부족 이벤트에 기반하여, 휘 발성 메모리의 가용 용량을 확인하고, 휘발성 메모리에 할당된 적어도 하나의 프로세스를 종료하기 위한 제2 메모리 회수 동작 또는 제3 메모리 회수 동작 중 적어도 하나를 실행하도록 구성될 수 있다. 제3 메모 리 회수 동작은 제2 메모리 회수 동작 보다 빠른 속도로 휘발성 메모리의 가용 용량을 회수할 수 있다. 예 를 들어, 제2 메모리 회수 동작은 각각 휘발성 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커 널)의 모듈 또는 데몬(또는 서비스)(예: LMKD(low memory killer daemon))일 수 있으며, 제3 메모리 회수 동작은 LMKD 내에서 동작하는 기능(예: direct reclaim kill booster)일 수 있다. 일 실시예에 따르면, 프로세서는 휘발성 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한지를 판단하고, 가용 용량 확보를 위한 제1 메모리 회수 동작, 제2 메모리 회수 동작 및 제3 메모리 회수 동작들 각 각의 실행 및 중단을 판단하기 위해 휘발성 메모리의 가용 용량에 대한 임계값들을 지정할 수 있다. 예를 들어, 지정된 임계값들 중 제1 임계값(예: low watermark*1.1) 및 제2 임계값(예: min watermark*2.0)은 제2 메모리 회수 동작 또는 제3 메모리 회수 동작을 실행 및 중단을 위해 휘발성 메모리의 가용 용량과 비교하 기 위한 값으로 지정될 수 있으며, 지정된 임계값들 중 제3 임계값(예: low watermark) 및 제4 임계값(예: min watermark) 및 제5 임계값(예: high watermark)은 제1 메모리 회수 동작의 실행 및 실행 중단을 위해 휘발성 메 모리의 가용 용량과 비교하기 위한 값으로 지정될 수 있다. 제1 임계값(예: low watermark*1.1)은 제5 임 계값보다 큰 값이며, 제3 임계값에 지정된 값을 곱하여 제3 임계값보다 큰 값으로 지정될 수 있다. 제2 임계값 (예: min watermark*2.0)은 제4 임계값보다 큰 값이며, 제4 임계값에 지정된 값을 곱하여 제4 임계값보다 큰 값 으로 지정될 수 있다. 제3 임계값은 제2 임계값보다 크고, 제5 임계값보다 작은 값으로 지정될 수 있다. 제4 임 계값은 제2 임계값보다 작은 값으로 지정될 수 있다. 제 5 임계값은 제1 임계값보다 작은 작고, 제3 임계값보다 큰 값으로 지정될 수 있다. 일 실시예에 따라 설명되는 상기 지정된 임계값들은 이에 한정되지 않으며, 임계값 들의 크기의 순서(예: 제1 임계값> 제5 임계값> 제3 임계값> 제2 임계값> 제4 임계값 크기의 순서)가 변경되지 않고 유지되면서, 임계값들 각각은 프로세스 및 휘발성 메모리의 성능에 따라 값이 변경될 수 있다. 일 실시예에 따르면, 프로세서는 휘발성 메모리의 가용 용량이 지정된 임계값(low watermark, 이하, 제3 임계값으로 칭함)에 도달할 때, 적어도 하나의 프로세스를 할당하기 위한 휘발성 메모리의 가용 용량 이 부족한 것으로 식별하고, 제1 메모리 회수 동작을 실행하도록 처리할 수 있다. 프로세서는 제1 메모리 회수 동작의 실행 중 확인된 가용 용량의 값이 지정된 메모리 회수 임계값(high watermark)(이하, 제5 임계값이 라 칭함)을 초과할 때, 제1 메모리 회수 동작을 중단하도록 처리할 수 있다. 일 실시예에 따르면, 프로세서는 확인된 가용 용량이 지정된 제3 임계값(low watermark)에 도달할 때, 제1 메모리 회수 동작의 제1 동작을 실행할 수 있다. 프로세서는 적어도 하나의 프로세스의 할당을 위한 요청 에 의해 확인된 가용 용량이 상기 제3 임계값을 초과할 때, 제1 동작을 중단할 수 있다. 일 실시예에 따르면, 프로세서는 제1 동작 중에 확인된 가용 용량이 지정된 지정된 제4 임계값(min watermark) 이하일 때, 상기 제2 동작을 실행할 수 있다. 프로세서는 제1 동작 중에 확인된 상기 가용 용 량이 제4 임계값을 초과할 때, 제1 메모리 회수 동작의 제2 동작을 중단할 수 있다. 일 실시예에 따르면, 프로세서는 확인된 가용 용량의 값이 지정된 제1 임계값(예: low watermark*1.1) 이 하이고 지정된 제2 임계값(예: min watermark*2.0)을 초과할 때, 상기 제2 메모리 회수 동작(예: LMK(lowmemory killer) 또는 LMKD(low memory killer daemon)에서의 제2 메모리 회수 동작)을 실행하도록 처리할 수 있다. 프로세서는 프로세스 종료 조건들을 기반하여 선택된 프로세스를 종료하는 제2 메모리 회수 동작을 실행하도록 처리할 수 있다. 예를 들어, 프로세서는 프로세스 종료 조건들을 만족하는 종료 대상 프로세스 들을 선택할 수 있다. 예를 들어, 제2 메모리 회수 동작은 운영체제(또는 커널)의 모듈 또는 데몬(또는 서 비스)(예: LMK 또는 LMKD)에 의한 동작일 수 있다. 예를 들어, 프로세스 종료 조건들은 메모리의 총 사용량 (swapused 총 합)을 확인하는 조건(예: 제1 조건) 및 할당된 프로세스의 중요도 제한값(OOM_SCORE_ADJ 제한값) 을 확인하는 조건(예: 제2 조건)을 포함할 수 있다. 예를 들어, 프로세서는 제2 메모리 회수 동작을 실행 하는 동안 지정된 제1 딜레이 시간(예: 100ms) 동안 대기한 후 다시 종료 대상 프로세스를 선택하고, 선택된 종 료 대상 프로세스를 종료할 수 있으며, 제1 임계값(예: low watermark*1.1)에 도달할 때까지 지정된 제1 딜레이 시간(예: 100ms)을 갖고 프로세스를 종료하는 동작을 반복 수행할 수 있다. 제1 딜레이 시간(예: 100ms)은 메모 리에 할당된 프로세스들이 과도하게 종료되지 않도록 지정될 수 있다. 일 실시예에 따르면, 프로세서는 상기 제2 메모리 회수 동작을 실행할 때, 제1 메모리 회수 동작에 의해 발생된 메모리 부족 이벤트에 따라 메모리 부족 상태의 수준(level)을 식별할 수 있다. 예를 들어, 프로세서 는 식별된 메모리 부족 상태의 수준(level)이 제1 수준(medium pressure)을 나타내면, 중요도 (OOM_SCORE_ADJ) 제한값(예: 850)보다 큰 중요도 값이 지정된 적어도 하나의 프로세스 중 가장 늦게 사용된 프 로세스를 종료 대상 프로세스로 선택하고, 선택된 프로세스를 종료하도록 처리할 수 있다. 프로세스는 선 택된 적어도 하나의 종료 대상 프로세스의 중요도 값이 지정된 중요도 제한값(예: 850)보다 낮으면, 선택된 적 어도 하나의 종료 대상 프로세스를 종료하지 않도록 처리할 수 있다. 예를 들어, 프로세서는 식별된 메모 리 부족 상태의 수준(level)이 제2 수준(critical pressure)을 나타내면, 중요도(OOM_SCORE_ADJ) 제한값(예: 850)의 조건을 확인하지 않고, 프로세스 크기 및/또는 메모리 점유율을 기반하여 적어도 하나의 종료 대상 프로 세스를 선택할 수 있다. 예를 들어, 프로세서는 휘발성 메모리에 할당된 프로세스들 중 중요도 값이 가장 큰 적어도 하나의 프로세스(예: 우선순위가 가장 낮은 또는 중요도가 가장 높은 프로세스)를 선택하고, 선 택된 적어도 하나의 프로세스 중 휘발성 메모리의 용량을 가장 많이 점유하는 프로세스를 종료할 프로세스 로서 선택할 수 있다. 중요도(OOM_SCORE_ADJ)는 프로세스 중요도를 나타내며, 예를 들어, -1000~1000의 값으로 설정될 수 있으며, 프로세스 사용자에게 노출되는 정도에 따라 중요도에 따른 값이 결정된 후, 프로세스 정보와 함께 획득될 수 있으며, 값이 높을수록 프로세스 종료 대상에 우선적으로 선택될 수 있다. 일 실시예에 따르면, 프로세서는 상기 확인된 가용 용량의 값이 제1 임계값 이하이고 제2 임계값 이하일 때, 제3 메모리 회수 동작(예: direct reclaim kill booster)을 실행하도록 처리할 수 있다. 프로세서는 프로세스 종료 조건들(예: 제1 조건 또는/및 제2 조건)을 확인하지 않고 휘발성 메모리에 할당된 프로세스 들 중 중요도 값이 가장 큰 적어도 하나의 프로세스를 선택하고, 선택된 적어도 하나의 프로세스 중 휘발성 메 모리의 용량을 가장 많이 점유하는 프로세스를 종료할 프로세스로서 선택할 수 있다. 프로세서는 선 택된 프로세스를 종료하는 제3 메모리 회수 동작을 실행하도록 처리할 수 있다. 예를 들어, 제3 메모리 회수 동 작은 운영체제(또는 커널)의 모듈 또는 데몬(또는 서비스)(예: LMK 또는 LMKD)에 의한 동작(예: direct reclaim kill booster)일 수 있다. 예를 들어, 프로세서는 제3 메모리 회수 동작을 실행하는 동안 지정된 제2 딜레이 시간(예: 20ms) 동안 대 기한 후 다시 종료 대상 프로세스를 선택하고, 선택된 종료 대상 프로세스를 종료할 수 있으며, 제2 임계값(예: min watermark*2.0)에 도달할 때까지 지정된 제2 딜레이 시간(예: 20ms)을 갖고 프로세스를 종료하는 동작을 반 복 수행할 수 있다. 이에 한정되지 않고 제2 딜레이 시간은 제1 딜레이 시간(예: 100ms)보다 작은 값으로 설정 될 수 있으며, 제1 딜레이 시간이 줄어들면, 그에 비례하여 제2 딜레이 시간도 낮게 지정될 수 있다. 일 실시예에 따르면, 프로세서는 제3 메모리 회수 동작을 실행 중 확인된 가용 용량의 값이 제2 임계값을 초과할 때, 제3 메모리 회수 동작을 중단할 수 있다. 프로세서는 제3 메모리 회수 동작을 제2 동작을 실행 하기 이전에 실행하도록 처리함으로써, 제3 메모리 회수 동작에 의해 보다 빠른 속도로 메모리 가용 용량을 확 보할 수 있으며, 제2 동작에 의한 동작 시간을 감소시킬 수 있다. 또한, 다양한 실시 예에 따르면, 전자 장치는 진동을 출력하는 수단 또는 냄새를 출력하는 수단을 더 포함 하여 구성될 수 있다. 이와 같이, 본 발명의 다양한 실시 예에서는 상기 도 2의 전자 장치를 통해 전자 장치의 주요 구성 요소에 대해 설명하였다. 그러나 본 발명의 다양한 실시 예에서는 상기 도 2를 통해 도시된 구성 요소가 모두 필수 구성 요 소인 것은 아니며, 도시된 구성 요소보다 많은 구성 요소에 의해 상기 전자 장치가 구현될 수도 있고, 그 보다적은 구성 요소에 의해 상기 전자 장치가 구현될 수도 있다. 또한, 상기 도 2를 통해 상술한 전자 장치의 주요 구성 요소의 위치는 다양한 실시 예에 따라 변경 가능할 수 있다. 일 실시예에 따르면, 전자 장치(예: 도 1 및 도 2의 전자 장치)는, 메모리 및 상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함하며, 상기 메모리는, 상기 적어도 하나의 프로세서에 의해 실행 시, 상 기 적어도 하나의 프로세서가, 상기 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키 기 위한 제1 메모리 회수 동작을 실행하고, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하고, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 제2 임계 값을 초 과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하고, 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하도록 하는 인스트럭션들 을 저장하며, 상기 제1 임계값은 제2 임계값보다 큰 값일 수 있다. 일 실시예에 따르면, 상기 제3 메모리 회수 동작은 상기 제2 메모리 회수 동작 보다 빠른 속도로 상기 메모리의 가용 용량을 확보할 수 있다. 일 실시예에 따르면, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 실행하는 동안, 상기 할당된 적어도 하나의 프로세스 중 선택된 프로세스를 종료한 후, 지정된 딜레이 시간 동안 대기하 고, 다음 선택된 프로세스를 종료하는 동작을 수행하도록 하는 인스트럭션을 저장하며, 상기 지정된 딜레이 시 간은 제2 메모리 회수 동작에서 지정된 딜레이 시간보다 작은 값으로 지정될 수 있다. 일 실시예에 따르면, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작 중에 확인된 가용 용량이 상기 제2 임계값을 초과할 때, 상기 제3 메모리 회수 동작을 중단하고, 상기 제2 메모리 회수 동작 중에 확인된 가용 용량이 상기 제1 임계값을 초과할 때, 상기 제2 메모리 회수 동작을 중단하도록 하는 인스트 럭션들을 저장할 수 있다. 일 실시예에 따르면, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 프로세스를 할당하기 위한 요청에 따라 확인된 가용 용량이 지정된 제3 임계값에 도달할 때, 상기 확인된 가용 용량이 부족한 것으로 식별하고, 상기 제1 메모리 회수 동작을 실행하도록 하는 인스트럭션을 저장하며, 상기 제1 메모리 회수 동작은 상기 메모 리의 일 영역에 상기 할당된 적어도 하나의 프로세스의 상기 일부 데이터를 회수하는 제1 동작 및 제2 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 메모리는, 상기 적어도 하나의 프로세서가, 상기 프로세스를 할당하기 위한 요청에 따라 확인된 가용 용량이 지정된 제3 임계값(low watermark) 이하일 때, 상기 제1 동작을 실행하고, 상기 제1 동작 중에 확인된 가용 용량이 지정된 제4 임계값(min watermark) 이하일 때, 상기 제2 동작을 실행하고, 상기 제1 동작 중에 확인된 가용 용량이 제5 임계값을 초과할 때, 상기 제1 동작을 중단하고, 상기 제2 동작 중에 확 인된 상기 가용 용량이 상기 제4 임계값을 초과할 때, 상기 제2 동작을 중단하도록 하는 인스트럭션들을 저장하 며, 상기 제3 임계값은 상기 제2 임계값보다 큰 값이며, 상기 제4 임계값은 상기 제2 임계값보다 작은 값일 수 있다. 일 실시예에 따르면, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 상기 제2 동 작을 실행하기 이전에 실행하도록 하는 인스트럭션을 저장할 수 있다. 일 실시예에 따르면, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제3 메모리 회수 동작을 실행할 때, 지정된 프로세스 종료 조건을 확인하지 않고, 프로세스 크기 또는 메모리 점유율 중 적어도 하나 및 중요도 값 을 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료 대상 프로세스를 선택하고, 선택된 적어 도 하나의 종료 대상 프로세스를 종료하도록 하는 인스트럭션들을 저장할 수 있다. 일 실시예에 따르면, 상기 메모리는 상기 적어도 하나의 프로세서가, 상기 제2 메모리 회수 동작을 실행할 때, 지정된 프로세스 종료 조건 및 지정된 중요도를 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료 대상 프로세스를 선택하고, 선택된 적어도 하나의 종료 대상 프로세스를 종료하도록 하는 인스트럭션들을 저장할 수 있다. 도 3은 일 실시 예에 따른 전자 장치의 동작 방법의 예를 나타내는 도면이다. 일 실시예에 따른 동작 방법은 전 자 장치(예: 도 1 및 도 2의 전자 장치)에 인스톨된 소프트웨어 구성요소인 운영체제(또는 커널)(예: 도 1의 운영체제)를 제어하는 프로세서(예: 프로세서)에 의해 수행될 수 있다. 도 3을 참조하면, 일 실시 예에 따른 전자 장치(예: 도 1 및 도 2의 전자 장치)는, 301 동작에서, 메모리 할당 요청을 식별할 수 있다. 303 동작에서, 전자 장치는 메모리 할당 요청에 응답하여 메모리(예, 도 1 및 도 2의 휘발성 메모리)에 프로세스를 할당하기 위한 메모리의 현재 가용 용량을 확인할 수 있다. 예를 들어, 전자 장치는 메모리에 할당된 프로세스들이 사용하고 있는 메모리의 총 사용량을 확인하여 사용 가능한 용량을 확인할 수 있다. 305 동작에서, 전자 장치는 확인된 가용 용량이 프로세스를 할당하기에 부족한지를 확인할 수 있다. 확인 결과, 프로세스를 할당하기 위한 가용 용량이 부족하면, 307 동작을 수행하고, 그렇지 않으면, 303 동작을 수행할 수 있다. 307 동작에서, 전자 장치는 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행할 수 있다. 제 1 메모리 회수 동작은 임베디드 시스템으로 구성된 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커널) (예: 도 1 및 도 2의 운영체제)의 적어도 하나의 모듈에서 실행되는 동작일 수 있다. 전자 장치는 프로세 스를 할당하기 위해 충분한 가용 용량을 확보할 때까지 제1 메모리 회수 동작을 실행하여 지속적으로 메모리의 가용 용량을 지속적으로 확보할 수 있다. 예를 들어, 전자 장치는 제1 메모리 회수 동작을 실행하여 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 압축하고, 압축된 프로세스의 일부를 메모리의 일부 영역에 저 장해 두었다가 필요 시 로딩하여 사용할 수 있다. 예를 들어, 제1 메모리 회수 동작은 메모리에 할당된 적어도 하나의 프로세스의 일부를 압축하거나, 캐시된 용량(cachedmem)을 가용 용량으로 변환하여 가용 용량을 확보하 는 제1 동작(예: kswapd) 및 제2 동작(예: direct reclaim)을 포함할 수 있다. 제1 메모리 회수 동작은 동작 부하가 크고, 주연산장치(CPU)에 의한 연산 처리 동작의 우선순위가 높을 수 있다. 309 동작에서, 전자 장치는 제1 메모리 회수 동작에 의해 메모리 부족 이벤트(memory pressure event)의 발생 여부를 확인할 수 있다. 확인 결과, 전자 장치는 메모리 부족 이벤트가 발생한 경우, 311 동작을 수행하고, 그렇지 않은 경우, 307 동작을 수행할 수 있다. 311 동작 내지 321 동작에서, 전자 장치는 메모리의 현재 가용 용량을 식별하고, 메모리에 할당된 적어도 하나 의 다른 프로세스를 종료하여 메모리의 가용 용량을 확보하기 위한 하기 위한 제2 메모리 회수 동작 또는 제3 메모리 회수 동작 중 적어도 하나를 메모리 가용 용량이 충분한 상태에 도달할 때까지 반복 실행할 수 있다. 제 2 메모리 회수 동작 또는 제3 메모리 회수 동작은 제1 메모리 회수 동작 보다 빠른 속도로 메모리의 가용 용량 을 확보할 수 있다. 311 동작에서, 전자 장치는 제1 메모리 회수 동작에 의해 메모리 부족 이벤트(memory pressure event)가 발생한 것을 식별한 것에 응답하여, 메모리의 가용 용량을 확인할 수 있다. 313 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제1 임계값 이하인지 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제1 임계값 이하인 경우, 전자 장치는 313 동작을 수행할 수 있으며, 그렇지 않은 경우, 전자 장치는 상기 303 동작을 수행할 수 있다. 315 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제2 임계값(min watermark*2.0) 이하인지를 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제2 임계값을 초과한 경우, 전자 장치는 317 동작을 수행 할 수 있으며, 확인된 가용 용량의 값이 지정된 제2 임계값 이하인 경우, 전자 장치는 319 동작을 수행할 수 있 다. 제1 임계값은 제2 임계값보다 큰 값으로 지정될 수 있다. 317 동작에서, 전자 장치는 메모리에 할당된 적어도 하나의 프로세스를 종료하여 가용 용량을 확보하기 위한 제 3 메모리 회수 동작을 실행할 수 있다. 전자 장치는 프로세스 우선 순위에 관련된 정보를 기반하여 설정된 메모 리에 할당된 적어도 하나의 프로세스를 종료하여 가용 용량을 확보할 수 있다. 전자 장치는 프로세스 종료 조건 들을 확인하는 동작을 수행하지 않고, 바로 종료 대상 프로세스를 선택하여 선택된 종료 대상 프로세스를 종료 시킬 수 있다. 전자 장치는 지정된 제2 임계값에 도달할 때까지 제3 메모리 회수 동작을 실행할 수 있다. 예를 들어, 상기 제3 메모리 회수 동작은 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커널)의 모듈 또는 데 몬(또는 서비스)(예: LMK 또는 LMKD)에 의한 동작(예: direct reclaim kill booster)일 수 있다. 319 동작에서, 전자 장치는 메모리에 할당된 적어도 하나의 프로세스를 종료하여 가용 용량을 확보하기 위한 제 2 메모리 회수 동작을 실행할 수 있다. 전자 장치는 제1 메모리 회수 동작에 따른 프로세스 우선 순위에 관련된 정보를 기반하여 메모리에 할당된 적어도 하나의 프로세스를 종료하여 가용 용량을 확보할 수 있다. 전자 장치 는 프로세스 종료 조건들을 기반하여 지정된 제1 임계값에 도달할 때까지 제2 메모리 회수 동작을 실행할 수 있다. 예를 들어, 제2 메모리 회수 동작은 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커널)의 모듈(예: LMK(low memory killer) 또는 데몬(또는 서비스)(예: LMKD(low memory killer daemon)에 의한 동작일 수 있다. 예를 들어, 프로세스 종료 조건들은 메모리의 총 사용량(swapused 총 합)을 확인하는 조건(예: 제1 조건) 및 할 당된 프로세스의 중요도 제한값(ADJ 제한값)을 확인하는 조건(예: 제2 조건)을 포함할 수 있다. 321 동작에서, 전자 장치는 확보된 가용 용량이 충분한지를 상태인지를 확인할 수 있다. 확인 결과, 전자 장치 는 확보된 가용 용량이 충분한 경우, 동작을 종료하고, 확보된 가용 용량이 충분하지 않은 경우, 다시 309 동작 을 수행할 수 있다. 도 4는 일 실시 예에 따른 전자 장치의 제1 메모리 회수 동작에 의한 동작 방법의 예를 나타내는 도면이다. 도 4를 참조하면, 실시 예에 따른 전자 장치(예: 도 1 및 도 2의 전자 장치)는, 401 동작에서, 메모리 할 당 요청을 식별할 수 있다. 예를 들어, 전자 장치는 어플리케이션의 프로세스 실행 명령이 수신될 때, 프로세스 실행에 따른 메모리 할당 요청을 식별하고, 운영체제(또는 커널)(예, 도 1 및 도 2의 운영체제)의 메모리 할당 관련 함수를 실행시킬 수 있다. 403 동작에서, 전자 장치는 메모리 할당 요청에 응답하여 메모리(예, 도 1 및 도 2의 휘발성 메모리)의 현 재 가용 용량을 확인할 수 있다. 예를 들어, 전자 장치는 메모리 할당 관련 함수를 통해 해당 프로세스의 메모 리 할당을 시도하고, 메모리의 현재 가용 용량을 확인할 수 있다. 전자 장치는 확인된 가용 용량이 해당 프로세스를 할당하기 위해 충분한지를 확인하도록 411 동작 또는 421 동 작을 수행할 수 있다. 403 동작 이후, 411 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제3 임계값(예: low watermark) 이 하인지를 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제3 임계값 이하인 경우, 전자 장치는 413 동작을 수행하고, 그렇지 않은 경우, 다시 403 동작을 수행할 수 있다. 413 동작에서, 전자 장치는 제1 메모리 회수 동작의 제1 동작(예: kswapd)을 실행하여 메모리의 가용 용량을 증 가시킬 수 있다. 415 동작에서, 전자 장치는 증가된 가용 용량의 값이 지정된 메모리 회수 임계값(예: high watermark)을 나타내 는 제5 임계값을 초과하는 지를 확인할 수 있다. 415 동작에서 확인한 결과, 증가된 가용 용량의 값이 지정된 제5 임계값을 초과하면, 417 동작에서, 전자 장치는 메모리의 가용 용량이 충분한 것으로 식별하고 제1 동작의 실행을 중단한 후 동작을 종료할 수 있다. 반면, 415 동작에서 확인한 결과, 증가된 가용 용량의 값이 지정된 제5 임계값을 초과하지 않으면, 전자 장치는 다시 413 동작을 반복 수행할 수 있다. 403 동작 이후, 421 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제4 임계값(예: min watermark) 이 하인지를 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제4 임계값 이하인 경우, 전자 장치는 423 동작을 수행하고, 그렇지 않은 경우, 다시 403 동작을 수행할 수 있다. 423 동작에서, 전자 장치는 제1 메모리 회수 동작의 제2 동작(예: direct reclaim)을 실행하여 메모리의 가용 용량을 증가시킬 수 있다. 425 동작에서, 전자 장치는 증가된 가용 용량의 값이 지정된 제4 임계값을 초과하는 지를 확인할 수 있다. 415 동작에서 확인한 결과, 증가된 가용 용량의 값이 지정된 제4 임계값을 초과하면, 417 동작에서, 전자 장치는 메 모리의 가용 용량이 충분한 것으로 식별하고 제2 동작의 실행을 중단한 후 동작을 종료할 수 있다. 반면, 415 동작에서 확인한 결과, 증가된 가용 용량의 값이 지정된 제4 임계값을 초과하지 않으면, 전자 장치는 다시 423 동작을 반복 수행할 수 있다. 도 5는 일 실시 예에 따른 전자 장치의 제1 메모리 회수 동작의 예를 나타내는 도면이다. 도 5를 참조하면, 일 실시예에 따른 전자 장치(예: 도 1 및 도 2의 전자 장치)는 510 동작에서 나타내는 막대그래프와 같이, 메모리 회수 동작 이전에 메모리 (예: 도 1 및 도 2의 휘발성 메모리)에서 전체 용량(예: 100%) 중 프로세스가 점유하고 있는 용량(예: 0~m 구간(m%))을 사용 용량으로 식별할 수 있 으며, 식별된 사용 용량을 제외한 나머지 용량(m~100 구간(100-m%))을 가용 용량으로 식별할 수 있다. 도 3의 307 동작 및 도 4의 413 동작 또는 423 동작과 같이, 제1 메모리 회수 동작(예: 제1 동작 또는 제2 동작)을 실행한 후, 520 동작에서 나타내는 막대그래프와 같이, 전자 장치는 프로세스의 데이터들 중 주요 데이터를 유지하고, 부가 데이터를 메모리에서 회수할 수 있다. 전자 장치는 회수된 부가 데이터를 압축하여 메모리의 일부 영역 또는 비휘발성 메모리에서 가상 메모리로 설정된 일부 영역 에 저장할 수 있다. 전자 장치는 부가 데이터가 점유하고 있던 용량(n~m 구간(m-n%))만큼 가용 용량 을 회수하여 가용 용량(100-n%)을 확보할 수 있다. 예를 들어, 프로세스의 주요 데이터는 중요도가 높은 데이터로서, 프로세스의 실행에 필요한 코어 데이터일 수 있으며, 프로세스의 부가 데이터는 주요 데 이터보다 중요도가 낮은 데이터로서, 프로세스의 실행에 선택적으로 사용 또는 사용되지 않을 수 있는 캐 시 데이터 또는 메타 데이터일 수 있다. 상술한 도 5의 510 및 520 동작에서 나타내는 막대 그래프들은 설명의 편의를 위해 메모리의 사용 용량을 나타 내는 구간(0~m 구간)에 하나의 프로세스가 할당되는 것을 예를 들어 설명하였으나, 이에 한정하지 않고, 메모리의 사용 용량을 나타내는 구간(0~m 구간)에 복수의 프로세스가 할당되는 경우도 적용될 수 있다. 일 실시예에 따르면, 제1 메모리 회수 동작과, 제2 메모리 회수 동작 또는/및 제3 메모리 회수 동작과 비교하여, 제1 메모리 회수 동작은 프로세서의 부하가 높고, 메모리 회수 속도가 느리고, 메모리 회수 효율이 높고, 메모리 회수 이후 프로세스의 재실행 시 응답성이 상대적으로 빠를 수 있다. 도 6은 일 실시 예에 따른 전자 장치의 제2 및 제3 메모리 회수 동작에 의한 동작 방법의 예를 나타내는 도면이 다. 도 6을 참조하면, 실시 예에 따른 전자 장치(예: 도 1 및 도 2의 전자 장치)는, 601 동작에서, 제1 메모리 회수 동작에 의해 메모리 부족 이벤트(memory pressure event)의 발생을 식별함에 따라 메모리(예, 도 1 및 도 2의 메모리)에 할당된 프로세스를 종료하기 위한 메모리 회수 동작(예: 제2 메모리 회수 동작 또는/ 및 제3 메모리 회수 동작)의 실행을 시작할 수 있다. 603 동작에서, 전자 장치는 메모리의 현재 가용 용량을 확인할 수 있다. 605 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제1 임계값 이하인지 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제1 임계값 이하인 경우, 전자 장치는 605 동작을 수행할 수 있으며, 그렇지 않은 경우, 전자 장치는 603 동작을 다시 수행할 수 있다. 607 동작에서, 전자 장치는 확인된 가용 용량의 값이 지정된 제2 임계값(min watermark*2.0) 이하인지를 확인할 수 있다. 확인 결과, 확인된 가용 용량의 값이 지정된 제2 임계값을 이하인 경우, 611 동작을 수행하고, 확인된 가용 용량의 값이 지정된 제2 임계값을 초과하면, 전자 장치는 621 동작을 수행할 수 있다. 제1 임계값은 제2 임계값보다 큰 값으로 지정될 수 있다. 611 동작에서, 가용 용량의 값이 지정된 제1 임계값 이하이고, 제2 임계값(min watermark*2.0) 이하인 것으로 식별함에 따라, 전자 장치는 제3 메모리 회수 동작을 위한 제2 딜레이 시간(예, 20ms)을 설정하고, 설정된 제2 딜레이 시간을 기반하여 적어도 하나의 프로세스를 종료하는 제3 메모리 회수 동작의 실행을 시작할 수 있다. 제2 딜레이 시간(예, 20ms)은 제1 딜레이 시간(예: 100ms)보다 작은 값으로 설정될 수 있다. 612 동작에서, 전자 장치는 제3 메모리 회수 동작의 실행에 따라 메모리에 할당된 적어도 하나의 프로세스들 중 종료 대상 프로세스를 선택하고, 선택된 종료 대상 프로세스를 종료하여 메모리의 가용 용량을 증가시킬 수 있 다. 전자 장치는 전자 장치는 프로세스 종료 조건들을 확인하는 동작을 수행하지 않고, 바로 종료 대상 프로세 스를 선택하여 선택된 종료 대상 프로세스를 종료할 수 있다. 예를 들어, 전자 장치는 프로세스 우선 순위에 관 련된 정보를 기반하여, 우선 순위가 낮고(또는 중요도가 높은), 점유하고 있는 용량이 가장 큰(또는 프로세스의 크기가 가장 큰) 프로세스를 종료 대상 프로세스로 선택할 수 있다. 613 동작에서, 전자 장치는 지정된 제2 딜레이 시간 동안 프로세스를 종료하는 동작을 수행하지 않고 대기하고, 제3 메모리 회수 동작에 따른 메모리의 가용 용량을 확인할 수 있다. 614 동작에서, 전자 장치는 확인된 가용 용량 값이 제2 임계값을 초과하는 지를 확인할 수 있다. 상기 614 동작에서 확인한 결과, 확인된 가용 용량 값이 제2 임계값을 초과하면, 615 동작에서, 전자 장치는 확 인된 가용 용량 값이 제2 임계값을 초과하여 메모리의 가용 용량이 충분한 상태인 것을 식별하고, 제3 메모리 회수 동작을 중단(예: wait 상태로 진입)한 후 동작을 종료할 수 있다. 상기 614 동작에서 확인한 결과, 확인된 가용 용량 값이 제2 임계값 이하면, 전자 장치는 601 동작을 다시 수행 할 수 있다. 예를 들어, 상기 제3 메모리 회수 동작은 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커널)의 모듈 또는 데몬(또는 서비스)(예: LMK 또는 LMKD)에 의한 동작(예: direct reclaim kill booster)일수 있다. 상기 607 동작에서 확인한 결과, 가용 용량의 값이 지정된 제2 임계값을 초과하면, 621 동작에서 전자 장치는 가용 용량의 값이 지정된 제1 임계값 이하이고, 제2 임계값(min watermark*2.0)을 초과한 것으로 식별함에 따라, 제2 메모리 회수 동작을 위한 제1 딜레이 시간(예: 100ms)을 설정하고, 설정된 제1 딜레이 시간을 기반하 여 적어도 하나의 프로세스를 종료하는 제2 메모리 회수 동작의 실행을 시작할 수 있다. 622 동작에서, 전자 장치는 제2 메모리 회수 동작의 실행에 따라 메모리에 할당된 적어도 하나의 프로세스들 중 프로세스 종료 조건들을 확인할 수 있다. 예를 들어, 프로세스 종료 조건들은 메모리의 총 사용량(swapused 총 합)을 확인하는 조건(예: 제1 조건) 및 할당된 프로세스의 중요도 제한값(ADJ 제한값)을 확인하는 조건(예: 제2 조건)을 포함할 수 있다. 623 동작에서 전자 장치는 확인된 프로세스 종료 조건들을 기반하여 종료 대상 프로세스를 선택하여 선택된 종 료 대상 프로세스를 종료할 수 있다. 예를 들어, 전자 장치는 프로세스 종료 조건들을 만족하는 적어도 하나의 종료 대상 프로세스를 선택하고, 선택된 적어도 하나의 종료 대상 프로세스들 중에서 프로세스 우선 순위에 관 련된 정보를 기반하여 선택된 프로세스를 종료할 수 있다. 예를 들어, 전자 장치는 메모리 부족 상태의 수준 (level)이 제1 수준(medium pressure)일 때, 가장 나중에 사용한 프로세스를 종료할 수 있다. 예를 들어, 전자 장치는 메모리 부족 상태의 수준(level)이 제2 수준(critical pressure)일 때, 우선 순위가 낮고(또는 중요도가 높은), 점유하고 있는 용량이 가장 큰(또는 프로세스의 크기가 가장 큰) 프로세스를 종료할 수 있다 624 동작에서, 전자 장치는 지정된 제1 딜레이 시간 동안 프로세스를 종료하는 동작을 수행하지 않고 대기하고, 제2 메모리 회수 동작에 따른 메모리의 가용 용량을 확인할 수 있다. 625 동작에서, 전자 장치는 확인된 가용 용량 값이 제1 임계값을 초과하는 지를 확인할 수 있다. 상기 625 동작에서 확인한 결과, 확인된 가용 용량 값이 제1 임계값을 초과하면, 626 동작에서, 전자 장치는 확 인된 가용 용량 값이 제1 임계값을 초과하여 메모리의 가용 용량이 충분한 상태인 것을 식별하고, 제2 메모리 회수 동작을 중단(예: wait 상태로 진입)할 수 있다. 상기 625 동작에서 확인한 결과, 확인한 결과, 확인된 가용 용량 값이 제1 임계값 이하면, 전자 장치는 622 동 작을 다시 수행할 수 있다. 전자 장치는 지정된 제1 임계값에 도달할 때까지 622 동작 내지 625 동작을 반복 실 행할 수 있다. 예를 들어, 상기 제2 메모리 회수 동작은 메모리의 가용 용량을 확보하기 위한 운영체제(또는 커 널)의 모듈 또는 데몬(또는 서비스)(예: LMK 또는 LMKD)에 의한 동작(예: direct reclaim kill booster)일 수 있다. 도 7은 일 실시 예에 따른 전자 장치의 제2 및 제3 메모리 회수 동작의 예를 나타내는 도면이다. 도 7을 참조하면, 일 실시 예에 따른 710 동작에서 나타내는 막대 그래프와 같이, 전자 장치(예: 도 1 및 도 2 의 전자 장치)는 메모리 회수 동작 이전에 메모리 (예: 도 1 및 도 2의 휘발성 메모리) 에서 전 체 용량(예: 100%) 중 프로세스가 점유하고 있는 용량(예: 0~m 용량)을 사용 용량으로 식별할 수 있 으며, 식별된 사용 용량을 제외한 나머지 용량(m~100%)을 가용 용량으로 식별할 수 있다. 도 3의 337 동작 또는 319 동작 및 도 6의 612 동작 또는 623 동작과 같이, 제2 메모리 회수 동작 또는 제3 메모리 동작을 실행 한 후, 720 동작에서 나타내는 막대 그래프와 같이, 전자 장치는 메모리에 할당된 프로세스들 중 선택된 프로세스를 종료하여 프로세스가 점유하던 대부분의 용량(0~m%)을 가용 용량으로 확보할 수 있다. 상술한 도 7의 710 및 720 동작에서 나타내는 막대 그래프들은 설명의 편의를 위해 메모리의 사용 용량을 나타 내는 구간(0~m 구간)에 하나의 프로세스가 할당되는 것을 예를 들어 설명하였으나, 이에 한정되지 않을 수 있다. 도 7의 720 동작의 막대 그래프에서, 메모리의 사용 용량을 나타내는 구간(0~m 구간)에 복수의 프로세스 가 할당되는 것을 예를 들어 설명할 수 있으며, 이러한 경우, 선택된 적어도 하나의 프로세스가 점유하는 대부 분의 용량을 가용 용량으로 확보할 수 있다. 일 실시 예에 따르면, 제2 메모리 회수 동작 및 제3 메모리 회수 동작은 메모리에 로딩되어 있는 프로세스의 데 이터 중에서 주요 데이터 및 부가 데이터를 구별하지 않고, 중요도에 따라서 선택된 프로세스의 전체 데이터를 회수하므로 프로세서의 부하가 제1 메모리 회수 동작에 비해 낮고, 메모리 회수 속도가 제1 메모리 회수 동작에 비해 높을 수 있다. 제2 메모리 회수 동작 또는/및 제3 메모리 회수 동작은 프로세서의 부하가 낮고, 메모리 회 수 속도가 빠르고, 메모리 회수 효율이 낮고, 메모리 회수 이후 프로세스의 재실행 시 응답성이 상대적으로 느 릴 수 있다. 도 8은 일 실시 예에 따른 전자 장치의 동작 예를 나타내는 도면이고, 도 9는 일 실시 예에 따른 전자 장치의 동작에 따른 동작 그래프의 예를 나타내는 도면이다. 도 8을 참조하면, 일 실시 예에 따른 전자 장치는 메모리 할당 요청이 발생한 것을 식별함에 따라 메모리 (예: 도 1 및 도 2의 휘발성 메모리)의 가용 용량을 회수하기 위한 동작 상태로 진입하고, 메모리의 가용 용량을 확인할 수 있다. 이때, 메모리 회수 동작들(예, 제1 메모리 회수 동작, 제2 메모리 회수 동작 및 제3 메 모리 회수 동작)들은 슬립 상태(sleep) 또는 대기 상태(wait)일 수 있다. 전자 장치는 확인된 가용 용량이 제3 임계값(low watermark)에 도달하면, 제1 시점에서 상기 도 4의 413 동작과 같은 제1 메모리 회수 동작의 제1 동작(예: kswapd)을 시작(wake up)할 수 있다. 전자 장치는 제1 메모리 회수 동작에 의해 발생된 메모리 부족 이벤트를 식별함에 따라 메모리에 할당된 프로세스를 종료하기 위 한 메모리 회수 동작(예: 제2 메모리 회수 동작 또는 제3 메모리 회수 동작 중 적어도 하나)을 실행 할 수 있다. 일 실시 예에 따르면, 전자 장치는 제1 동작을 실행하고 시간이 경과함에 따라 확인된 가용 용량이 제3 임 계값(low watermark) 이하로 낮아지면, 도 3의 319 동작 및 도 6의 621 내지 626 동작과 같은 제2 메모리 회수 동작을 실행할 수 있다. 예를 들어, 제2 메모리 회수 동작은 제1 시점에서 시작될 수 있으며, 지정된 딜레이 시간(예: 100ms) 동안 대기한 후 다시 선택된 종료 대상 프로세스를 종료할 수 있으며, 제1 임계 값(예: low watermark*1.1)에 도달할 때까지 지정된 딜레이 시간(예: 100ms)을 갖고 프로세스를 종료하는 동작 을 반복 수행할 수 있다. 일 실시 예에 따르면, 전자 장치는 제1 동작을 실행하고 시간이 경과함에 따라 확인된 가용 용량이 제2 임 계값(예: min watermark*2.0) 이하로 낮아지면, 도 3의 317 동작 및 도 6의 611 내지 615 동작과 같은 제3 메 모리 회수 동작을 실행할 수 있다. 예를 들어, 제3 메모리 회수 동작은 제2 메모리 회수 동작을 실행하는 중에 확인된 가용 용량이 제2 임계값(예: min watermark*2.0) 이하로 낮아질 때, 제2 시점에서 시작될 수 있다. 예를 들어, 제3 메모리 회수 동작은 제1 동작에 의해 발생된 메모리 부족 이벤트를 식별하고, 확인된 가용 용량이 제2 임계값 이하인 것으로 식별될 때, 제2 시점에서 시작될 수 있다. 예를 들어, 제3 메모리 회수 동작은 지정된 딜레이 시간(예: 20ms) 동안 대기한 후 다시 선택된 종료 대상 프로 세스를 종료할 수 있으며, 제2 임계값(예: min watermark*2.0)에 도달할 때까지 지정된 딜레이 시간(예: 20ms) 을 갖고 프로세스를 종료하는 동작을 반복 수행할 수 있다. 일 실시 예에 따르면, 전자 장치는 제1 동작을 실행하는 중에 확인된 가용 용량이 제4 임계값(예: min watermark)에 도달할 때, 제3 시점에서 제2 동작을 시작하고, 가용 용량이 제4 임계값을 초과할 때, 제4 시점에서 제2 동작을 중단하고 대기 상태(wait)로 진입할 수 있다. 일 실시 예에 따르면, 전자 장치는 제3 메모리 회수 동작을 실행하고 시간이 경과함에 따라 확인된 가용 용량이 제2 임계값을 초과할 때, 제5 시점에서 제2 메모리 회수 동작을 다시 시작하고, 제1 임계값 (예: low watermark*1.1)에 도달할 때까지 지정된 딜레이 시간(100ms)을 갖고 프로세스를 종료하는 동작을 반복 수행할 수 있다. 전자 장치는 확인된 가용 용량이 제1 임계값(예: low watermark*1.1)을 초과할 때, 가용 용량 이 충분한 상태로 판단하고, 제7 시점에서 제2 메모리 회수 동작을 중단한 후 대기 상태(wait)로 진 입할 수 있다. 일 실시 예에 따르면, 전자 장치는 제1 동작을 실행하는 중에 확인된 가용 용량이 제5 임계값(high watermark)을 초과할 때, 제6 시점에서 제1 동작을 중단하고 슬립 상태(sleep)로 진입할 수 있다. 상기 도 8에 도시된 바와 같이, 일 실시 예에 따르면, 제1 임계값(예: low watermark*1.1)은 제5 임계값보다 큰 값이며, 제3 임계값에 지정된 값을 곱하여 제3 임계값보다 큰 값으로 지정될 수 있다. 제2 임계값(예: min watermark*2.0)은 제4 임계값보다 큰 값이며, 제4 임계값에 지정된 값을 곱하여 제4 임계값보다 큰 값으로 지정 될 수 있다. 제3 임계값은 제2 임계값보다 크고, 제5 임계값보다 작은 값으로 지정될 수 있다. 제4 임계값은 제 2 임계값보다 작은 값으로 지정될 수 있다. 제5 임계값은 제1 임계값보다 작고, 제3 임계값보다 큰 값으로 지정 될 수 있다. 일 실시예에 따라 설명되는 상기 지정된 임계값들은 이에 한정되지 않으며, 임계값들의 크기의 순 서(예: 제1 임계값> 제5 임계값> 제3 임계값> 제2 임계값> 제4 임계값 크기의 순서)가 변경되지 않고 유지되면 서, 임계값들 각각은 프로세스 및 휘발성 메모리의 성능에 따라 값이 변경될 수 있다. 도 8 및 도 9 참조하면, 메모리의 가용 용량을 제3 임계값 및 제4 임계값만을 비교하여 제1 메모리 회수 동작 및 제2 메모리 회수 동작만을 수행하면, 제1 메모리 회수 동작의 제2 동작(예: direct reclaim)은 t3에서 중단되고, 제1 동작(예: kswapd)은 t4에서 중단될 수 있다. 일 실시 예에 따르면, 전자 장치는 메모리의 가용 용량 을 제2 임계값을 더 비교하여 제3 메모리 회수 동작을 실행함에 따라 제2 메모리 회수 동작보다 빠른 속도 로 메모리의 가용용량을 확보함으로써, 제2 동작(예: direct reclaim)의 동작 시간이 t3에서 t3'만큼 감소될 수 있으며, 제2 동작의 동작 시간이 감소됨에 따라 제1 동작(예: kswapd)의 동작 시간이 t4에서 t4'만큼 감소될 수 있다. 일 실시예에 따르면, 전자 장치는 제1 메모리 회수 동작 중에 심각한 가용 용량 부족 상태가 발생할 때, 제1 메모리 회수 동작(제1 동작 또는/및 제2 동작)의 실행에 따른 프로세서(예, 도 1 및 도 2의 프로세서(12 0))의 부하를 줄일 수 있다. 일 실시예에 따르면, 전자 장치(예: 도 1 및 도 2의 전자 장치)에서의 동작 방법은, 상기 전자 장치의 메 모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제1 메모리 회수 동작을 실행 하는 동작, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모리의 가용 용량을 확인하는 동작, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계값을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하는 동작 및 상기 확인된 가용 용량의 값이 상기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 포함할 수 있다. 상기 제1 임 계값은 제2 임계값보다 큰 값일 수 있다. 일 실시예에 따르면, 상기 제3 메모리 회수 동작은 상기 제2 메모리 회수 동작 보다 빠른 속도로 상기 메모리의 가용 용량을 확보할 수 있다. 일 실시예에 따르면, 상기 제3 메모리 회수 동작을 실행하는 동작은, 상기 제3 메모리 회수 동작을 실행하는 동 안, 상기 할당된 적어도 하나의 프로세스 중 선택된 프로세스를 종료하는 동작, 지정된 딜레이 시간 동안 대기 하는 동작 및 다음 선택된 프로세스를 종료하는 동작을 포함하며, 상기 지정된 딜레이 시간은 제2 메모리 회수 동작에서 지정된 딜레이 시간보다 작은 값으로 지정될 수 있다. 일 실시예에 따르면, 상기 방법은, 상기 제3 메모리 회수 동작 중에 확인된 가용 용량이 상기 제2 임계값을 초 과할 때, 상기 제3 메모리 회수 동작을 중단하는 동작 및 상기 제2 메모리 회수 동작 중에 확인된 가용 용량이 상기 제1 임계값을 초과할 때, 상기 제2 메모리 회수 동작을 중단하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 상기 제1 메모리 회수 동작을 실행하는 동작은, 상기 프로세스를 할당하기 위한 요청에 따 라 확인된 상기 가용 용량이 지정된 제3 임계값에 도달할 때, 상기 확인된 가용 용량이 부족한 것으로 식별하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 제1 메모리 회수 동작은 상기 메모리의 일 영역에 상기 할당된 적어도 하나의 프로세 스의 상기 일부 데이터를 회수하는 제1 동작 및 제2 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 제1 메모리 회수 동작을 실행하는 동작은, 상기 프로세스를 할당하기 위한 요청에 따 라 확인된 상기 가용 용량이 지정된 제3 임계값 이하일 때, 상기 제1 동작을 실행하는 동작, 상기 제1 동작 중 에 확인된 가용 용량이 지정된 제4 임계값(min watermark) 이하일 때, 상기 제2 동작을 실행하는 동작, 상기 제 1 동작 중에 확인된 가용 용량이 제5 임계값을 초과할 때, 상기 제1 동작을 중단하는 동작 및 상기 제2 동작 중 에 확인된 가용 용량이 상기 제4 임계값을 초과할 때, 상기 제2 동작을 중단하는 동작을 포함할 수 있다. 상기 제3 임계값(Low watermark)은 상기 제2 임계값보다 큰 값이며, 상기 제4 임계값은 상기 제2 임계값보다 작은 값 일 수 있다. 일 실시예에 따르면, 상기 제3 메모리 회수 동작은 상기 제2 동작을 실행하기 이전에 실행될 수 있다. 일 실시예에 따르면, 상기 제3 메모리 회수 동작을 실행하는 동작은, 지정된 프로세스 종료 조건을 확인하지 않 고, 프로세스 크기 또는 메모리 점유율 중 적어도 하나 및 중요도 값을 기반하여 상기 메모리에 할당된 프로세 스들 중에서 적어도 하나의 종료 대상 프로세스를 선택하는 동작 및 선택된 적어도 하나의 종료 대상 프로세스 를 종료하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 제2 메모리 회수 동작을 실행하는 동작은, 지정된 프로세스 종료 조건을 기반하여 상 기 메모리에 할당된 프로세스들 중 적어도 하나의 프로세스를 선택하는 동작, 선택된 적어도 하나의 프로세스 중 지정된 중요도를 기반하여 상기 메모리에 할당된 프로세스들 중 적어도 하나의 종료 대상 프로세스를 선택하 는 동작 및 선택된 적어도 하나의 종료 대상 프로세스를 종료하는 동작을 포함할 수 있다. 컴퓨터로 판독 가능한 저장 매체는, 하드디스크, 플로피디스크, 마그네틱 매체(magnetic media)(예: 자기테이프), 광기록 매체(optical media)(예: CD-ROM(compact disc read only memory), DVD(digital versatile disc), 자기-광 매체(magneto-optical media)(예: 플롭티컬 디스크(floptical disk)), 하드웨어 장 치(예: ROM(read only memory), RAM(random access memory), 또는 플래시 메모리 등) 등을 포함할 수 있다. 또 한, 프로그램 명령에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해 서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함할 수 있다. 상술한 하드웨어 장치는 다양한 실시예 의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지다. 일 실시 예에 따르면, 비일시적 저장 매체에 있어서, 상기 프로그램은, 프로세서에 의한 실행 시, 상기 프로세 서가, 상기 전자 장치의 메모리에 프로세스를 할당하기 위한 가용 용량이 부족한 것으로 식별할 때, 상기 메모 리에 할당된 적어도 하나의 프로세스의 일부 데이터를 회수하여 상기 메모리의 가용 용량을 증가시키기 위한 제 1 메모리 회수 동작을 실행하는 동작, 상기 제1 메모리 회수 동작에 의해 발생한 이벤트에 기반하여, 상기 메모 리의 가용 용량을 확인하는 동작, 상기 확인된 가용 용량의 값이 지정된 제1 임계값 이하이고 지정된 제2 임계 값을 초과한 것에 기반하여, 상기 제2 메모리 회수 동작을 실행하는 동작 및 상기 확인된 가용 용량의 값이 상 기 제1 임계값 이하이고 상기 제2 임계값 이하인 것에 기반하여, 상기 제3 메모리 회수 동작을 실행하는 동작을 수행하도록 실행 가능한 명령을 포함하며, 상기 제1 임계값은 제2 임계값보다 큰 값일 수 있다. 그리고 본 문서에 개시된 실시예는 개시된, 기술 내용의 설명 및 이해를 위해 제시된 것이며, 본 문서에서 기재 된 기술의 범위를 한정하는 것은 아니다. 따라서, 본 문서의 범위는, 본 문서의 기술적 사상에 근거한 모든 변 경 또는 다양한 다른 실시예를 포함하는 것으로 해석되어야 한다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2020-0116353", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시 예들에 따른 네트워크 환경을 나타내는 도면이다. 도 2는 일 실시 예에 따른 전자 장치의 구성 예를 나타내는 도면이다. 도 3은 일 실시 예에 따른 전자 장치의 동작 방법을 나태는 도면이다. 도 4는 일 실시 예에 따른 전자 장치의 제1 메모리 회수 동작에 의한 동작 방법의 예를 나타내는 도면이다. 도 5는 일 실시 예에 따른 전자 장치의 제1 메모리 회수 동작의 예를 나타내는 도면이다. 도 6은 일 실시 예에 따른 전자 장치의 제2 및 제3 메모리 회수 동작에 의한 동작 방법의 예를 나타내는 도면이 다. 도 7은 일 실시 예에 따른 전자 장치의 제2 및 제3 메모리 회수 동작의 예를 나타내는 도면이다. 도 8은 일 실시 예에 따른 전자 장치의 동작 예를 나타내는 도면이다. 도 9는 일 실시 예에 따른 전자 장치의 동작에 따른 동작 그래프의 예를 나타내는 도면이다. 도면의 설명과 관련하여, 동일 또는 유사한 구성요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있다."}
