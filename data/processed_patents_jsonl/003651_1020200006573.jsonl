{"patent_id": "10-2020-0006573", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0092986", "출원번호": "10-2020-0006573", "발명의 명칭": "스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스토리지 컨트롤러의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "나한별"}}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 메모리들 각각에 상응하는 복수의 데이터들을 수신하는 스토리지 컨트롤러로서, 상기 복수의 데이터들의 오류 수준을 추정하여, 오류 정보를 생성하는 오류추정부상기 오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이터를 생성하는 판정부상기 연산 데이터의 오류를 정정하여 오류 정정 데이터를 생성하는 오류 정정부 및 상기 오류 정보에 기초하여, 상기 연산 데이터 또는 상기 오류 정정 데이터 중 어느 하나를 선택하는 선택부를포함하는, 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서, 상기 판정부는,상기 복수의 데이터들의 상응하는 비트들에 대하여 다수결 논리 연산하여 경판정 연산 데이터를 생성하는 경판정부를 포함하는 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서, 상기 비트들은 제1 값 또는 제2 값을 가지며,상기 경판정부는, 상기 비트들 중 상기 제1 값을 가지는 비트들이 상기 제2 값을 가지는 비트들보다 많은 경우,상기 제1 값을 경판정 연산 데이터로서 생성하는 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2 항에 있어서, 상기 비트들은 제1 값 또는 제2 값을 가지며, 상기 경판정부는, 상기 비트들이 상기 제1 값 및 상기 제2 값을 모두 포함하는 경우로서, 상기 제1 값을 가지는비트들이 상기 제2 값을 가지는 비트들보다 많은 경우, 상기 제1 값을 경판정 연산 데이터로서 생성하는 것을특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4 항에 있어서, 상기 경판정 연산 데이터는 상기 복수의 데이터들에 존재할 수 있는 오류의 위치에 관한 정보인 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서, 상기 판정부는 경판정부를 포함하고, 상기 경판정부는, 상기 복수의 데이터들의 상응하는 비트들에 대하여 논리합 연산을 수행하는 논리합 회로 상기 비트들에 대하여 논리곱 연산을 수행하는 논리곱 회로 상기 비트들에 대하여 다수결 논리 연산을 수행하는 다수결 논리 회로 및 상기 논리합 연산, 상기 논리곱 연산, 및 상기 다수결 논리 연산의 연산 결과 중 어느 하나를 선택하고, 선택한결과를 경판정 연산 데이터로서 생성하는 멀티플렉서를 포함하는 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 항에 있어서, 상기 판정부는, 공개특허 10-2021-0092986-3-상기 복수의 데이터들의 상응하는 비트들에 대하여 제1 논리 연산하여 경판정 연산 데이터를 생성하는 경판정부및상기 비트들에 대하여 제2 논리 연산하여 연판정 연산 데이터를 생성하는 연판정부를 포함하는 것을 특징으로하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7 항에 있어서, 상기 비트들은 제1 값 또는 제2 값을 가지며,상기 연판정부는, 상기 비트들이 상기 제1 값 및 상기 제2 값을 모두 포함하는 경우, 상기 제1 값을 연판정 연산 데이터로서 생성하는 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8 항에 있어서, 상기 연판정 연산 데이터는 상기 복수의 데이터들에 존재할 수 있는 오류의 위치에 관한 정보인 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 항에 있어서, 상기 오류 추정부는, 호스트로부터 상기 복수의 데이터들의 오류 수준을 추정하기 위한 정보를 더 수신하고,상기 호스트로부터 수신한 정보는 스토리지 시스템이 구성된 이후 상기 스토리지 시스템이 가동되고 있는 시점까지 축적한 스토리지 메모리에 관한 정보인 것을 특징으로 하는 스토리지 컨트롤러."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 실시예에 따른 스토리지 컨트롤러는, 복수의 메모리들 각각에 상응하는 복수의 데이터들을 수신하는 스토리지 컨트롤러로서, 상기 복수의 데이터들의 오류 수준을 추정하여, 오류 정보를 생성하는 오류 추정부, 상 기 오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이터를 생성하는 판정부, 상기 연산 데이 터의 오류를 정정하여 오류 정정 데이터를 생성하는 오류 정정부, 및 상기 오류 정보에 기초하여, 상기 연산 데 이터 또는 상기 오류 정정 데이터 중 어느 하나를 선택하는 선택부를 포함한다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 반도체 집적 회로에 관한 것으로서, 더욱 상세하게는 스토리지 컨트롤러, 이를 포함하는 스토리지 시 스템 및 스토리지 컨트롤러의 동작 방법에 관한 것이다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능기술은 인간이 가진 지각, 학습, 추론, 자연어 처리 등의 능력을 컴퓨터가 실행할 수 있도록 프로그램 으로 구현하는 기술을 말한다. 최근 들어, 인공지능기술이 발전함에 따라 이를 산업 전반에 적용하려는 시도가 이루어지고 있다. 특히, 안전, 교통, 국방 및 의료 등의 분야에서도 연구가 활발히 이루어지고 있는데, 여기에서 다루어지는 데이 터는 여타 분야와 비교하여 더욱 큰 신속성과 신뢰성이 요구된다고 할 수 있다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "상기와 같은 문제점을 해결하기 위한 본 발명의 일 목적은, 신속성과 신뢰성이 향상된 스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스토리지 컨트롤러의 동작 방법을 제공하는 것이다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 일 목적을 달성하기 위해, 본 발명의 일 실시예에 따른 스토리지 컨트롤러는, 복수의 메모리들 각각에 상 응하는 복수의 데이터들을 수신하는 스토리지 컨트롤러로서, 상기 복수의 데이터들의 오류 수준을 추정하여, 오 류 정보를 생성하는 오류 추정부, 상기 오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이 터를 생성하는 판정부, 상기 연산 데이터의 오류를 정정하여 오류 정정 데이터를 생성하는 오류 정정부, 및 상 기 오류 정보에 기초하여, 상기 연산 데이터 또는 상기 오류 정정 데이터 중 어느 하나를 선택하는 선택부를 포 함한다. 상기 일 목적을 달성하기 위해, 본 발명의 일 실시예에 따른 스토리지 시스템은, 호스트, 복수의 데이터들을 저 장하는 스토리지 메모리, 및 상기 호스트로부터 상기 복수의 데이터들의 오류 수준을 추정하기 위한 정보를 수 신하여, 오류 정보를 생성하는 오류 추정부, 상기 오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이터를 생성하는 판정부, 상기 연산 데이터의 오류를 정정하여 오류 정정 데이터를 생성하는 오류 정정 부, 및 상기 오류 정보에 기초하여, 상기 연산 데이터 또는 상기 오류 정정 데이터 중 어느 하나를 선택하는 선 택부를 포함하는 스토리지 컨트롤러를 포함한다. 상기 일 목적을 달성하기 위해, 본 발명의 일 실시예에 따른 스토리지 컨트롤러의 동작 방법은, 복수의 메모리 들 각각에 상응하는 복수의 데이터들을 수신하는 스토리지 컨트롤러의 동작 방법으로서, 상기 복수의 데이터들 의 오류 수준을 추정하여 오류 정보를 생성하는 단계, 상기오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이터를 생성하는 단계, 상기 연산 데이터의 오류를 정정하여 오류 정정 데이터를 생성하는 오류 정정부, 및 상기 오류 정보에 기초하여, 상기 연산 데이터 또는 상기 오류 정정 데이터 중 어느 하나를 선택하 는 단계를 포함한다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 따른 스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스토리지 컨트롤러의 동작 방법은, 복수의 메모리들 각각에 상응하는 복수의 데이터들을 효율적으로 수신할 수 있다. 또한, 본 발명의 실시예들에 따른 스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스토리지 컨트롤러의 동작 방법은 신뢰성 및 신속성 중 어느 하나를 우선시하여 다양한 경로를 통해 복수의 데이터들을 효율적으로 수신할 수 있다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부한 도면들을 참조하여, 본 발명의 바람직한 실시예를 보다 상세하게 설명하고자 한다. 도면상의 동일 한 구성요소에 대해서는 동일한 참조부호를 사용하고 동일한 구성요소에 대해서 중복된 설명은 생략한다. 도 1은 본 발명의 일 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 1을 참조하면, 호스트, 스토리지 컨트롤러, 및 스토리지 메모리는 특정한 목적을 달성하기 위해 스토리지 시스템을 구성할 수 있다. 이 경우, 스토리지 컨트롤러는 호스트의 제어 하에, 스토 리지 메모리에 데이터를 전송하거나 또는 스토리지 메모리로부터 데이터를 수신할 수 있고, 스토리지 메모리는 전달된 데이터를 저장할 수 있다. 여기서, 스토리지 시스템이 인공지능 시스템의 일부를 구성하는 경우로서, 안전, 교통, 국방, 또는 의료 등의 분야에 적용된 경우에 관하여 살펴본다. 이 경우, 상기 스토리지 시스템을 구성하는 스토리지 메모리는 복 수의 메모리들을 포함할 수 있고, 상기복수의 메모리들 각각에 동일한 정보의 복수의 데이터들을 중복적으로 저 장할 수 있다. 그리고, 스토리지 컨트롤러는 상기 복수의 데이터들을 복수의 채널들(CH)을 통해 동시에 수신할 수 있다. 이와 같이 구성되는 스토리지 시스템을 하드웨어 다중화 기법이 적용된 시스템이라 지칭할 수 있다. 이는 상기 인공지능 시스템의 일 목적의 달성에 있어 인간의 생명이 밀접하게 관련되어 있어, 상기 시스 템의 작동 중 처리되는 데이터에 고도의 신뢰성이 요구되기 때문이다. 위와 같은 목적을 달성하기 위해 구성된 스토리지 시스템에서, 스토리지 컨트롤러는, 오류 추정부, 판정부, 오류 정정부, 및 선택부를 포함할 수 있다. 오류 추정부 및 판정부는 상기 복수의 메모리들 각각에 저장된 복수의 데이터들을 채널(CH[0:M]; 단, M은 2이상의 자연수) 별로 수신할 수 있다. 오류 추정부는 상기 복수의 데이터들의 오류 수준을 추정하여, 오류 정보(ERRI)를 생성할 수 있다. 여기서, 상기 복수의 데이터들에 존재하는 오류는 프로그램/소거(P/E)의 반복 가능 횟수(Cycling endurance)를 초과하거나, 프로그램 상태의 메모리 셀들에 대하여 계속된 읽기동작이 행하여지거나, 또는 프로그램 동작 후 장시간의 방치로 인해 메모리 셀들의 데이터 보존 능력(retention)의 한계를 벗어난 경우 등이 원인으로 되어 발생할 수 있다. 여기서, 상기 오류 수준은 채널(CH[0:M]) 별로 수신된 상기 복수의 데이터들에 기초하여 추정될 수 있으나, 실 시예에 따라, 호스트로부터 전송된 정보에 기초하여 추정될 수도 있다. 여기서, 상기 오류 정보(ERRI)는 판정부, 오류 정정부, 또는 선택부에 전송될 수 있고, 구성요 소들(120, 140, 160) 각각이 수행하는 기능에 변화를 가하거나 또는 각각이 수행하는 기능을 멈추도록 하기 위 해 이용될 수 있다. 판정부는 상기 오류 정보에 기초하여, 상기 복수의 데이터들을 논리 연산한 연산 데이터(DTR)를 생성할 수 있다. 여기서, 상기 논리 연산은 상기 복수의 데이터들에 기초하여 수행될 수 있다. 여기서, 상기 논리 연산은 상기 복수의 데이터들에 존재하는 오류의 일부를, 오류 정정부가 수행하는 정정 의 수준에는 미치지 못하나 효율적으로 정정하기 위해 수행될 수 있다. 나아가, 상기 논리 연산은 오류 정정부 의 정정 능력을 향상시키기 위해 오류가 존재할 수 있는 위치에 관한 정보를 생성하기 위해 수행될 수도 있다. 여기서, 상기 연산 데이터(DTR)는 오류 정정부 및 선택부로 전송될 수 있다. 판정부의 구체적인 구성에 관한 다양한 실시예들은 도3 내지 도9를 참조하여 더욱 자세하게 후술하기로 한 다. 오류 정정부는 연산 데이터(DTR)의 오류를 정정하여 오류 정정 데이터(CDTR)를 생성할 수 있다. 여기서, 연산 데이터(DTR)의 오류의 정정은 오류 정정 코드(ECC) 인코더 또는 ECC 디코더에서 사용되는 다양한 기법들을 활용하여 수행될 수 있다. 오류 정정부는 오류 정보(ERRI)에 기초하여 연산 데이터(DTR)의 오류를 정정할 수 있다. 선택부는 상기 오류 정보에 기초하여, 연산 데이터(DTR) 또는 오류 정정 데이터(CDTR) 중 어느 하나를 선 택할 수 있다. 여기서, 연산 데이터(DTR) 및 오류 정정 데이터(CDTR)는 공히 상기 복수의 데이터들에 존재하는 오류가 정정된 데이터들에 해당하나 다만, 수행된 정정의 수준 및 속도에 있어서 차이가 있을 뿐이다. 이러한 차이는, 오류가 정정된 데이터들의 신뢰성 및 신속성과 관계있는 것이어서, 선택부는 신뢰성 또는 신속성 중 어느 하나를 우선시하여 연산 데이터(DTR) 또는 오류 정정 데이터(CDTR) 중 어느 하나를 선택할 수 있다. 도 2는 본 발명의 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 1 및 도 2를 참조하면, 스토리지 컨트롤러(1000-1)는 오류 추정부(100-1), 경판정부(120-1), 오류 정정부 , 및 선택부(406-1)를 포함할 수 있다. 도 1 및 도 2에서 동일한 참조부호를 갖는 구성 요소들은 유사한 기능을 수행하므로, 이하에서 중복되는 설명은 생략하기로 한다. 오류 추정부(100-1) 및 경판정부(120-1)는 복수의 채널들(CH[0], CH[1], 및 CH[2]) 각각을 통해 데이터들 (DTR0, DTR1, 및 DTR2)을 수신할 수 있다. 여기서, 데이터(DTR0)는 채널(CH[0])을 통해 수신된 데이터이고, 데 이터(DTR1)는 채널(CH[1])을 통해 수신된 데이터이고, 데이터(DTR2)는 채널(CH[2])을 통해 수신된 데이터이다. 도 2에서는 3개의 채널들(CH[0], CH[1], 및CH[2])을 통해 데이터들을 수신하는 것으로 도시되어 있으나, 이는 예시적인 것으로서, 본 발명의 범위는 이에 한정되지 않는다. 오류 추정부(100-1)는 데이터들(DTR0, DTR1, 및 DTR2)을 수신하고, 데이터들(DTR0, DTR1, 및 DTR2)의 오류 수 준을 추정하여, 오류 정보(ERRI)를 생성할 수 있다. 여기서, 상기 오류 수준의 추정은, 데이터들(DTR0, DTR1, 및 DTR2)에 기초하여 수행될 수 있다. 실시예에 따라, 상기 오류 수준의 추정은, 데이터들(DTR0, DTR1, 및 DTR2)을 비트 단위로 조사하여 수행될 수 있다. 여기서, 상 기 오류 수준을 추정하기 위해 조사되는 단위 비트 수는 1-비트일 수 있다. 그러나, 다른 실시예에 따라, 상기 단위 비트 수는 복수의 비트일 수 있다. 여기서, 오류 추정부(100-1)는 상기 오류 수준을 추정하기 위해, 다른 구성요소를 더 포함할 수 있다. 실시예에 따라, 오류 추정부(100-1)는 신드롬 연산부를 더 포함할 수 있다. 이 경우, 오류 추정부(100-1)는 신드롬 연산부에 의해 생성된 신드롬 데이터에 기초하여 상기 오류 수준을 추정할 수 있다. 경판정부(120-1)는 데이터들(DTR0, DTR1, 및 DTR2)을 수신하고, 데이터들(DTR0, DTR1, 및 DTR2)을 논리 연산한 경판정 연산 데이터(HDTR)를 생성할 수 있다. 경판정부(120-1)는 상기 논리 연산을 수행하기 위해 복수의 게이트들을 포함하는 게이트 회로를 포함할 수 있다. 이하에서, 경판정부(120-1)가 상기 게이트 회로를 이용하여 상기 논리 연산을 수행하는 과정에 관하여 보 다 구체적으로 설명하기로 한다. 도 3은 도 2에 도시된 경판정부에 포함되는 제1 게이트 회로를 나타내는 도면이다. 도 4는 도 3에 도시된 제1 게이트 회로에 의해 수행되는 논리 연산을 설명하기 위한 도면이다. 도 3을 참조하면, 제1 게이트 회로(120-1a)는 다수결 회로를 포함할 수 있고, 실시예에 따라, 제1 게이트 회로 (120-1a)는 논리곱 게이트들(120-11, 120-12, 및 120-13)과 논리합 게이트(120-14)를 포함할 수 있다. 여기서, 게이트(120-11)는 데이터들(DTR0, DTR1)을 수신하여 논리곱 연산을 수행하고, 게이트(120-12)는 데이터 들(DTR1, DTR2)을 수신하여 논리곱 연산을 수행하고, 게이트(120-13)는 데이터들(DTR2, DTR0)을 수신하여 논리 곱 연산을 수행할 수 있다. 여기서, 게이트(120-14)는 각 게이트들(120-11, 120-12, 및 120-13)의 출력을 수신 하여 논리합 연산을 수행할 수 있다. 실시예에 따라, 제1 게이트 회로(120-1a)는 각 데이터들(DTR0, DTR1, 및 DTR2)의 상응하는 비트들(예를 들어, DTR0[k], DTR1[k], 및DTR2[k]; 단, k는 0 이상의 정수)에 대하여 다수결 논리 연산을 수행할 수 있다. 이는 비 트들(DTR0[k], DTR1[k], 및 DTR2[k]) 중 과반수의 비트들에서 동시에 오류가 발생하는 경우는 극히 드물다는 경 험적 사실에 기초한 것이다. 여기서, 비트들(DTR0[k], DTR1[k], 및 DTR2[k])은 각 데이터들(DTR0, DTR1, 및 DTR2)이 포함하는 정보들을 순차적으로 나열한 스트림(stream) 형태의 신호일 수 있으나, 본 발명의 범위는 이 에 한정되지 않는다. 실시예에 따라, 비트들(DTR0[k], DTR1[k], 및 DTR2[k])은 제1 값 또는 제2 값을 가질 수 있다. 도 4를 참조하면, 제1 게이트 회로(120-1a)가 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여 다수결 논리 연 산을 수행한 결과가 도시되어 있다. 실시예에 따라, 제1 게이트 회로(120-1a)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k]) 중 제1 값을 가지는 비트들 이 제2 값을 가지는 비트들보다 많은 경우, 상기 제1 값을 경판정 연산 데이터(HDTR)로서 생성할 수 있다. 제1 게이트 회로(120-1a)는 각 데이터들(DTR0, DTR1, 및 DTR2)의 상응하는 비트들(DTR0[k], DTR1[k], 및 DTR2[k]) 중 제2 값을 가지는 비트들이 제1 값을 가지는 비트들보다 많은 경우, 상기 제2 값을 경판정 연산 데이터(HDT R)로서 생성할 수 있다. 즉, 제1 게이트 회로(120-1a)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 다수결 논리 연산을 수행한 결과, 데이터들(DTR0, DTR1, 및 DTR2)에 존재하는 오류를 일부 정정할 수 있다. 실시예에 따라, 제1 게이트 회로(120-1a)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])이 제1 값 및 제2 값을 모두 포함하는 경우로서, 상기 제1 값을 가지는 비트들이 상기 제2 값을 가지는 비트들보다 많은 경우, 상기 제1 값 을 경판정 연산 데이터(HDTR)로서 생성할 수 있다. 즉, 제1 게이트 회로(120-1a)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 다수결 논리 연산을 수행한 결과, 데이터들(DTR0, DTR1, 및 DTR2)에 존재할 수 있는 오류의 위치에 관한 정보를 생성할 수 있다(예를 들어, 상기 제1 값이 '1'이고, 상기 제2 값이 '0'인 경우, HDTR[1], HDTR[4], HDTR[8], 및 HDTR[12]. 즉, HDTR의 빗 금 친 비트들의 위치를 나타내는 정보). 도 5는 도 2에 도시된 경판정부에 포함되는 제2 게이트 회로를 나타내는 도면이다. 도 6a 및 도 6b는 도 5에 도 시된 제2 게이트 회로의 제1 논리 연산을 설명하기 위한 도면이다. 도 7a 및 도 7b는 도 5에 도시된 제2 게이트 회로의 제2 논리 연산을 설명하기 위한 도면이다. 먼저, 도 5를 참조하면, 제2 게이트 회로(120-1b)는 논리합 회로를 포함할 수 있고, 실시예에 따라, 제2 게이트 회로(120-1b)는 논리합 게이트(120-16)를 포함할 수 있다. 즉, 게이트(120-16)는 데이터들(DTR0, DTR1, 및 DTR2)을 수신하여, 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대한 논리합 연산을 수행할 수 있다. 이러한 논리 합 연산은 데이터들(DTR0, DTR1, 및 DTR2)에 존재하는 오류가, 프로그램/소거(P/E)의 반복 가능 횟수(Cycling endurance)를 초과하거나, 프로그램 상태의 메모리 셀들에 대하여 계속된 읽기 동작이 행하여짐에 따라 발생한 오류(이하, '제1 오류'라 함)인 것으로 추정되는 경우에 수행될 수 있다. 도 6a를 참조하면, 데이터들(DTR0, DTR1, 및 DTR2)이 낸드 셀에 저장되어 있는 경우, 상기 낸드 셀의 본래의 소 거 상태(ERS0)의 산포는 오른쪽의 열화 된 상태(ESR)의 산포로 변화될 수 있다. 여기서, 가로축은 낸드 셀의 문 턱 전압(VTH)을 나타내고, 세로축은 상기 문턱 전압(VTH)을 갖는 낸드 셀의 수를 나타낸다. 이러한 상기 낸드 셀의 산포의 변화는, P/E가 반복되거나 프로그램 상태의 메모리 셀들에 대한 계속된 읽기 동 작이 행하여짐에 따라 독출 교란(Read Disturb)이 나타난 경우에 발생할 수 있다. 도 6b를 참조하면, 제2 게이트 회로(120-1b)가 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여 논리합 게이트 (120-16)를 이용한 논리합 연산을 수행한 결과가 도시되어 있다. 즉, 제2 게이트 회로(120-1b)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 논리합 연산을 수행한 결과, 데이터들(DTR0, DTR1, 및 DTR2)에 존재하는 제1 오류를 일부 정정할 수 있다. 또한, 제2 게이트 회로(120-1b)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 데이터들(DTR0, DTR1, 및 DTR2)에 존재할 수 있는 오류의 위치에 관한 정보를 생성할 수 있다(예를 들어, 상기 제1 값이 '1'이고, 상기 제2 값이 '0'인 경우, HDTR[1], HDTR[4], HDTR[8], 및 HDTR[12]. 즉, HDTR의 빗금 친 비트들의 위치를 나타내 는 정보). 다시 도 5를 참조하면, 제2 게이트 회로(120-1b)는 논리곱 회로를 포함할 수 있고, 실시예에 따라, 제2 게이트 회로(120-1b)는 논리곱 게이트(120-15)를 포함할 수 있다. 즉, 게이트(120-15)는 데이터들(DTR0, DTR1, 및 DTR2)을 수신하여 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대한 논리곱 연산을 수행할 수 있다. 이러한 논리곱 연산은 데이터들(DTR0, DTR1, 및 DTR2)에 존재하는 오류가, 프로그램 동작 후 장시간의 방치로 인해 발생한 오 류(이하, '제2 오류'라 함)인 것으로 추정되는 경우에 수행될 수 있다. 도 7a를 참조하면, 데이터들(DTR0, DTR1, 및 DTR2)이 낸드 셀에 저장되어 있는 경우, 상기 낸드 셀의 본래의 프 로그램 상태(PGM0)의 산포는 왼쪽의 열화 된 상태(PGM)의 산포로 변화될 수 있다. 여기서, 가로축은 낸드 셀의문턱 전압(VTH)을 나타내고, 세로축은 상기 문턱 전압(VTH)을 갖는 낸드 셀의 수를 나타낸다. 이러한 상기 낸드 셀의 산포의 변화는, 프로그램 동작 후 장시간의 방치로 인해 메모리 셀들의 데이터 보존 능 력(retention)의 한계를 벗어난 경우에 발생할 수 있다. 도 7b를 참조하면, 제2 게이트 회로(120-1b)가 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여 논리곱 게이트 (120-15)를 이용한 논리곱 연산을 수행한 결과가 도시되어 있다. 즉, 제2 게이트 회로(120-1b)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 논리곱 연산을 수행한 결과, 데이터들(DTR0, DTR1, 및 DTR2)에 존재하는 제2 오류를 일부 정정할 수 있다. 또한, 제2 게이트 회로(120-1b)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여, 데이터들(DTR0, DTR1, 및 DTR2)에 존재할 수 있는 오류의 위치에 관한 정보를 생성할 수 있다(예를 들어, 상기 제1 값이 '1'이고, 상기 제2 값이 '0'인 경우, HDTR[1], HDTR[4], HDTR[8], 및 HDTR[12]. 즉, HDTR의 빗금 친 비트들의 위치를 나타내 는 정보). 다시 도 5를 참조하면, 제2 게이트 회로(120-1b)는 다수결 회로를 포함할 수 있고, 상기 다수결 회로는 도 3을 참조하여 설명한 다수결 회로와 동일한 기능을 수행한다. 제2 게이트 회로(120-1b)는 멀티플렉서(120-17)를 포함할 수 있다. 멀티플렉서(120-17)는 오류 추정부(100-1)로 부터 수신한 오류 정보(ERRI)에 기초하여, 상기 논리합 연산, 상기 논리곱 연산, 및 상기 다수결 논리 연산의 연산 결과 중 어느 하나를 선택하고, 선택한 결과를 경판정 연산 데이터(HDTR)로서 생성할 수 있다. 도 8은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 2 및 도 8을 참조하면, 도 8에 도시된 스토리지 컨트롤러(1000-2)는, 오류 추정부(100-1), 경판정부 (120- 1), 연판정부(120-2), 오류 정정부(140-1), 및 선택부(160-1)를 포함할 수 있다. 여기서, 도 8에 도시된 스토리 지 컨트롤러(1000-2)는 도 2에 도시된 스토리지 컨트롤러(1000-1)와 달리, 연판정부(120-2)를 더 포함할 수 있 다. 도 2 및 도 8에서 동일한 참조부호를 갖는 구성 요소들은 유사한 기능을 수행하므로, 이하에서 중복되는 설 명은 생략하기로 한다. 연판정부(120-2)는 데이터들(DTR0, DTR1, 및 DTR2)을 수신하고, 데이터들(DTR0, DTR1, 및 DTR2)을 논리 연산한 연산 데이터(SDTR)를 생성할 수 있다. 연판정부(120-2)는 상기 논리 연산을 수행하기 위해 복수의 게이트들을 포함하는 게이트 회로를 포함할 수 있다. 이하에서 연판정부(120-2)가 상기 게이트 회로를 이용하여 상기 논리 연산을 수행하는 과정에 관하여 보 다 구체적으로 설명하기로 한다. 도 9는 도 8에 도시된 연판정부에 의해 수행되는 논리 연산을 설명하기 위한 도면이다. 도 8을 참조하면, 연판정부(120-2)가 비트들(DTR0[k], DTR1[k], 및 DTR2[k])에 대하여 논리 연산을 수행한 결 과가 도시되어 있다. 실시예에 따라, 연판정부(120-2)는 비트들(DTR0[k], DTR1[k], 및 DTR2[k])이 제1 값 및 제2 값을 모두 포함하 는 경우, 상기 제1 값을 연판정 연산 데이터(SDTR)로서 생성할 수 있다. 즉, 연판정부(120-2)는 비트들(DTR0[k], DTR1[k], 및DTR2[k])에 대하여 논리 연산을 수행한 결과, 데이터들 (DTR0, DTR1, 및 DTR2)에 존재할 수 있는 오류의 위치에 관한 정보를 생성할 수 있다(예를 들어, 상기 제1 값이 '1'이고, 상기 제2 값이 '0'인 경우, SDTR[0:2], SDTR[4], SDTR[5], SDTR[8], SDTR[10:12]. 즉, SDTR의 빗금 친 비트들의 위치를 나타내는 정보). 오류 정정부(140-1)는 경판정 연산 데이터(HDTR) 및 연판정 연산 데이터(SDTR)를 수신하고, 경판정 연산 데이터 (HDTR)의 오류를 정정하여 오류 정정 데이터(CDTR)를 생성할 수 있다. 오류 정정부(140-1)는 오류 정정 데이터(CDTR)를 생성하기 위해 연판정 연산 데이터(SDTR)를 이용할 수 있다. 선택부는 오류 정보(ERRI)에 기초하여, 경판정 연산 데이터(HDTR) 또는 오류 정정 데이터(CDTR) 중 어느 하나를 선택할 수 있다. 도 10은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 1, 도 8 및 도 10을 참조하면, 스토리지 컨트롤러(1000-3)는, 오류 추정부(100-2), 경판정부 (120-1), 연판 정부(120-2), 오류 정정부(140-1), 및 선택부(160-1)를 포함할 수 있다. 여기서, 오류 추정부(100-2)는 도 8에 도시된 오류 추정부(100-1)와 달리, 호스트로부터, 데이터들(DTR0, DTR1, 및 DTR2)의 오류 수준을 추정하기 위 한 정보(ELEI)를 더 수신할 수 있다. 여기서, 정보(ELEI)는 호스트가 스토리지 시스템이 구성된 이후 상기 스토리지 시스템이 가동되고 있는 시점까지 축적한 스토리지 메모리에 관한 정보일 수 있다. 도 11은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 10 및 도 11을 참조하면, 스토리지 컨트롤러(1000-4)는, 오류 추정부(100-2), 경판정부(120-1), 연판정부 (120-2), 오류 정정부(140-1), 선택부(160-1), 및 논리합 게이트(160-2)를 포함할 수 있다. 여기서, 도 11에 도시된 스토리지 컨트롤러(1000-4)는, 도 10에 도시된 스토리지 컨트롤러(1000-3)와 달리 논리 합 게이트(160-2)를 더 포함할 수 있다. 도 10 및 도 11에서 동일한 참조부호를 갖는 구성 요소들은 유사한 기 능을 수행하므로, 이하에서 중복되는 설명은 생략하기로 한다. 논리합 게이트(160-2)는 오류 추정부(100-2)로부터 오류 정보(ERRI)를 수신하고, 호스트로부터 주의 정보(ATT I)를 수신할 수 있다. 여기서, 주의 정보(ATTI)는 호스트, 스토리지 컨트롤러(1000-4), 및 스토리지 메모리를 포함하는 스 토리지 시스템이 긴급 상황에서 동작하여 고도의 신속성이 요구되는 경우, 호스트가 이를 감지하여 스토 리지 컨트롤러(1000-4)에 전달하는 정보일 수 있다. 실시예에 따라, 논리합 게이트(160-2)는 오류 정보(ERRI)와 무관하게 선택부(160-1)가 경판정 연산 데이터(HDTR)를 선택하도록 할 수 있다. 도 12는 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러의 동작 방법을 나타내는 흐름도이다. 도 1 및 도 12를 참조하면, 오류 추정부는 복수의 데이터들의 오류 수준을 추정하여 오류정보를 생성할 수 있다(S1000). 판정부는 오류 정보에 기초하여 복수의 데이터들을 논리 연산한 연산 데이터를 생성할 수 있 다(S2000). 오류 정정부는 연산 데이터의 오류를 정정하여 오류 정정 데이터를 생성할 수 있다(S3000). 선 택부는 오류 정보에 기초하여 연산 데이터 또는 오류 정정 데이터 중 어느 하나를 선택할 수 있다(S4000). 도 13은 본 발명의 실시예들에 따른 메모리 시스템을 나타내는 블록도이다. 도 13을 참조하면, 메모리 시스템은 메모리 컨트롤러 및 적어도 하나의 메모리 장치를 포함할 수 있다. 메모리 장치는 메모리 컨트롤러의 제어에 따라 독출, 기입 또는 소거 동작 등을 수행할 수 있다. 이 를 위하여 메모리 장치는 메모리 컨트롤러로부터 제어 신호(CTRL), 커맨드(CMD), 어드레스(ADDR) 및 기입 데이터(DATA)를 수신하고, 메모리 컨트롤러로 독출 데이터(DATA)를 송신한다. 메모리 컨트롤러는 ECC 엔진을 포함할 수 있다. ECC 엔진은 에러 비트 정정을 수행하고, 도 3에 도시된 바와 같이 ECC 엔진은 ECC 인코더와 ECC 디코더를 포함할 수 있다. ECC 엔진은 ECC 섹터(sector)의 데이터 단위로 에러 비트 정정을 수행한다. 예를 들면, 페이지의 데이터 단위는 8KB~64KB이 고, ECC 섹터의 데이터 단위는 1KB~4KB 일 수 있다. ECC 인코더는 메모리 장치로 제공되는 데이터의 ECC 인코딩을 하여, 패리티(parity) 비트가 부가된 코드워드(codeword), 즉 기입 데이터를 생성한다. 상기 코드워드는 메모리 장치에 전달되어 메모리 장치의 복수의 저장 영역에 저장될 수 있다. ECC 인코더는 ECC 섹터의 데이터 단위로 인코딩을 수행할 수 있다. ECC 디코더는 메모리 장치로부터 독출 된 데이터에 대하여 에러 정정 디코딩을 수행하고 수행 결과에 따라 상기 에러 정정 디코딩의 성공 여부를 판단한다. ECC 디코더는 페리티(parity) 비트를 사용하여 데이 터의 에러 비트를 정정 할 수 있다. 에러 비트 개수가 정정 가능한 에러 비트 한계치 이상 발생하면, ECC 디코 더는 에러 비트를 정정할 수 없고, 에러 정정 실패(fail)가 발생한다. 본 발명의 실시예들에 따라서, ECC 디코더는 상기 복수의 저장 영역들의 각각으로부터 독출 된 복수의 독출 데이터들을 논리 연산하여 논리 연산 데이터를 제공하고, 상기 논리 연산 데이터에 기초한 병합 ECC 디코딩을 수행할 수 있다. ECC 인코더와 ECC 디코더는LDPC(low density parity check) code, BCH code, turbo code, 리드-솔로 몬 코드(Reed-Solomon code), convolution code, RSC(recursive systematic code), TCM(trellis-coded modulation), BCM(Block coded modulation) 등의 코디드 모듈레이션(coded modulation)을 사용하여 에러 정정 을 할 수 있으며, 이에 한정되는 것은 아니다.도 14는 본 발명의 실시예들에 따른 메모리 장치를 나타내는 블록도이다 도 14를 참조하면, 메모리 장치는 메모리 셀 어레이, 어드레스 디코더, 독출-기입 회로, 데이터 입출력 회로, 전압 생성 회로 및 제어 로직을 포함한다. 메모리 셀 어레이는 워드 라인들(WL) 및 선택 라인들(SSL, GSL)을 통해 어드레스 디코더에 연결된다. 예를 들면, 선택 라인들은 스트링 선택 라인들(SSL) 및 접지 선택 라인들(GSL)을 포함할 수 있다. 또한, 메모리 셀 어레이는 비트 라인들(BL)을 통해 독출-기입 회로에 연결된다. 메모리 셀 어레이는 복수의 메모리 셀들을 포함한다. 예를 들면, 메모리 셀 어레이는 기판 상에 행 및 열 방향을 따라 배치된 메모리 셀들을 포함한다. 예시적으로, 메모리 셀 어레이는 셀 당 하나 또는 그 이상의 비트를 저장할 수 있는 복수의 메모리 셀들로 구성된다. 메모리 셀 어레이는 도 10 및 11에 도시된 바와 같은 수직형 낸드 플래시 구조를 가질 수 있다. 어드레스 디코더는 워드 라인들(WL), 스트링 선택 라인들(SSL), 그리고 접지 선택 라인들(GSL)을 통해 메 모리 셀 어레이에 연결된다. 어드레스 디코더는 제어 로직의 제어에 응답하여 동작하도록 구성 된다. 어드레스 디코더는 외부로부터 어드레스(ADDR)를 수신한다. 어드레스 디코더는 수신된 어드레스(ADDR) 중 행 어드레스를 디코딩하도록 구성된다. 어드레스 디코더 는 워드 라인들(WL) 중 디코디드 행 어드레스에 대응하는 워드 라인을 선택하도록 구성된다. 어드레스 디 코더는 스트링 선택 라인들(SSL) 및 접지 선택 라인들(GSL)을 포함하는 선택 라인들 중 디코디드 행 어드 레스에 대응하는 선택 라인들을 선택하도록 구성된다. 어드레스 디코더는 전압 생성 회로로부터 수신되는 다양한 전압들을 선택된 워드 라인, 비선택된 워 드 라인, 선택된 선택 라인, 그리고 비선택된 선택 라인에 전달하도록 구성된다. 어드레스 디코더는 수신된 어드레스(ADDR) 중 열 어드레스를 디코딩하도록 구성된다. 어드레스 디코더 는 디코디드 열 어드레스(DCA)를 독출-기입 회로에 전달한다. 예시적으로, 어드레스 디코더는 행 어드레스를 디코딩하는 행 디코더, 열 어드레스를 디코딩하는 열 디코 더, 수신된 어드레스(ADDR)를 저장하는 어드레스 버퍼를 포함할 수 있다. 독출-기입 회로는 비트 라인들(BL)을 통해 메모리 셀 어레이에 연결되고, 데이터 라인들(DL)을 통해 데이터 입출력 회로에 연결된다. 독출-기입 회로는 제어 로직의 제어에 응답하여 동작한다. 독 출-기입 회로는 어드레스 디코더로부터 디코디드 어드레스 신호들(DCA)을 수신한다. 디코디드 어드레 스 신호들(DCA)을 이용하여, 독출-기입 회로는 비트 라인들(BL)을 선택한다. 예시적으로, 독출-기입 회로는 데이터 입출력 회로로부터 데이터를 수신하고, 수신된 데이터를 메모 리 셀 어레이에 기입한다. 또한, 독출-기입 회로는 메모리 셀 어레이로부터 데이터를 독출하고, 독출 데이터를 데이터 입출력 회로에 전달한다. 예를 들어, 독출-기입 회로는 페이지 버퍼(또는 페이지 레지스터), 열 선택 회로 등과 구성 요소들을 포함 할 수 있다. 다른 예로서, 독출-기입 회로는 감지 증폭기, 쓰기 드라이버, 열 선택 회로 등과 같은 구성 요소들을 포함할 수 있다. 데이터 입출력 회로는 데이터 라인들(DL)을 통해 독출-기입 회로에 연결된다. 데이터 입출력 회로 는 제어 로직의 제어에 응답하여 동작한다. 데이터 입출력 회로는 외부와 데이터(DATA)를 교환 하도록 구성된다. 데이터 입출력 회로는 외부로부터 전달되는 데이터(DATA)를 데이터 라인들(DL)을 통해 독출-기입 회로에 전달하도록 구성된다. 데이터 입출력 회로는 독출-기입 회로로부터 데이터 라 인들(DL)을 통해 전달되는 데이터(DATA)를 외부로 출력하도록 구성된다. 예시적으로, 데이터 입출력 회로 는 데이터 버퍼와 같은 구성 요소를 포함할 수 있다. 전압 생성 회로는 메모리 셀 어레이, 어드레스 디코더, 그리고 제어 로직에 연결된다. 전 압 생성 회로는 외부로부터 전원을 공급받는다. 예를 들면, 전압 생성 회로는 외부로부터 전원 전압 (Vcc) 및 접지 전압(Vss)을 공급받는다. 제어 로직의 제어에 응답하여, 전압 생성 회로는 전원 전압 (Vcc) 및 접지 전압(Vss)으로부터 다양한 레벨들을 갖는 전압들을 생성하도록 구성된다. 예를 들면, 전압 생성 회로는 고전압(Vpp), 프로그램 전압(Vpgm), 패스 전압(Vpass), 읽기 전압(Vread), 소거 전압(Vers) 등과 같은 다양한 전압들을 생성하도록 구성된다.전압 생성 회로에 의해 생성된 전압들은 제어 로직의 제어 하에 어드레스 디코더 및 메모리 셀 어레이에 공급된다. 예를 들면, 프로그램 동작 시에 프로그램 전압(Vpgm) 및 패스 전압(Vpass)이 어드레스 디코더에 공급될 것이다. 읽기 동작 시에, 읽기 전압(Vread)이 어드레스 디코더에 공급될 것이다. 메 모리 셀 어레이의 소거 시에, 소거 전압(Vers)이 메모리 셀 어레이에 공급될 것이다. 제어 로직은 어드레스 디코더, 독출-기입 회로 및 데이터 입출력 회로에 연결된다. 제어 로직은 메모리 장치의 제반 동작을 제어하도록 구성된다. 제어 로직은 외부로부터 전달되는 제 어 신호(CTRL)에 응답하여 동작한다. 도 15a는 도 14의 메모리 셀 어레이의 일 실시예를 나타내는 블록도이고, 도 15b는 메모리 블록의 등가 회로를 나타내는 회로도이다. 메모리 셀 어레이는 복수의 메모리 블록들(BLK1~BLKz)을 포함할 수 있다. 메모리 블록들(BLK1~BLKz)은 어 드레스 디코더에 의해 선택된다. 예를 들면, 어드레스 디코더는 메모리 블록들(BLK1~BLKz) 중 블록 어드레스에 대응하는 메모리 블록을 선택할 수 있다. 도 15a에 도시된 메모리 블록(BLKi)은 기판 상에 삼차원 구조로 형성되는 삼차원 메모리 블록을 나타낸다. 예를 들어, 메모리 블록(BLKi)에 포함되는 복수의 메모리 낸드 스트링들은 상기 기판과 수직한 방향으로 형성될 수 있다. 도 15a를 참조하면, 메모리 블록(BLKi)은 비트 라인들(BL1, BL2, BL3)과 공통 소스 라인(CSL) 사이에 연결되는 복수의 메모리 낸드 스트링들(NS11~NS33)을 포함할 수 있다. 복수의 메모리 낸드 스트링들(NS11~NS33) 각각은 스트링 선택 트랜지스터(SST), 복수의 메모리 셀들(MC1, MC2, ..., MC8) 및 접지 선택 트랜지스터(GST)를 포함 할 수 있다. 도 15b에는 복수의 메모리 낸드 스트링들(NS11~NS33) 각각이 8개의 메모리 셀들(MC1, MC2, ..., MC8)을 포함하는 것으로 도시되어 있으나, 본 발명은 이에 한정되지 않는다. 스트링 선택 트랜지스터(SST)는 상응하는 스트링 선택 라인(SSL1, SSL2, SSL3)에 연결될 수 있다. 복수의 메모 리 셀들(MC1, MC2, ..., MC8)은 각각 상응하는 워드 라인(WL1, WL2, ..., WL8)에 연결될 수 있다. 접지 선택 트랜지스터(GST)는 상응하는 접지 선택 라인(GSL1, GSL2, GSL3)에 연결될 수 있다. 스트링 선택 트랜지스터 (SST)는 상응하는 비트 라인(BL1, BL2, BL3)에 연결되고, 접지 선택 트랜지스터(GST)는 공통 소스 라인(CSL)에 연결될 수 있다. 동일 높이의 워드 라인(예를 들면, WL1)은 공통으로 연결되고, 접지 선택 라인(GSL1, GSL2, GSL3) 및 스트링 선 택 라인(SSL1, SSL2, SSL3)은 각각 분리될 수 있다. 도 11에는 메모리 블록(BLK)이 여덟 개의 워드 라인들(WL1, WL2, ..., WL8) 및 세 개의 비트 라인들(BL1, BL2, BL3)에 연결되는 것으로 도시되어 있으나, 본 발명은 이에 한정되지 않는다. 도 16은 본 발명의 실시예들에 따른 메모리 시스템을 나타내는 블록도이다. 도 16을 참조하면, 메모리 시스템은 메모리 컨트롤러 및 적어도 하나의 메모리 장치를 포함할 수 있다. 메모리 장치는 메모리 컨트롤러의 제어에 따라 독출, 기입 또는 소거 동작 등을 수행할 수 있다. 이 를 위하여 메모리 장치는 메모리 컨트롤러로부터 제어 신호(CTRL), 커맨드(CMD), 어드레스(ADDR) 및 기입 데이터(DATA)를 수신하고, 메모리 컨트롤러로 독출 데이터(DATA)를 송신한다. 메모리 장치는 온칩 ECC 회로를 포함할 수 있다. 온칩 ECC 회로는 메모리 셀 어레이로 데이터를 기입하는 때에 데이터를 인코딩(encoding)하여 패리티 데이터를 생성한다. 온칩 ECC 회로는 메모리 셀 어 레이로부터 데이터를 독출하는 때에, 독출 된 데이터의 패리티 데이터를 디코딩(decoding)하여 데이터의 에러를 체크하고 정정한다. 온칩 ECC 회로는 상기의 동작을 수행하는 인코더 및 디코더를 포함할 수 있다. 본 발 명의 실시예들에 따라서, 온칩 ECC 회로의 ECC 디코더는 메모리 장치의 복수의 저장 영역들의 각각으 로부터 독출 된 복수의 독출 데이터들을 논리 연산하여 논리 연산 데이터를 제공하고, 상기 논리 연산 데이터에 기초한 병합 ECC 디코딩을 수행할 수 있다. 도 17은 본 발명의 실시예들에 따른 스토리지 컨트롤러를 포함하는 에스에스디(SSD: solid state disk or solid state drive)를 나타내는 블록도이다. 도 17을 참조하면, SSD는 복수의 비휘발성 메모리 장치들 및 SSD 제어기를 포함한다. 비휘발성 메모리 장치들은 옵션적으로 외부 고전압(VPP)을 제공받도록 구현될 수 있다. SSD 제어기는 복수의 채널들(CH1~CH4)을 통하여 비휘발성 메모리 장치들에 연결된다. SSD 제어기 는 적어도 하나의 프로세서, 버퍼 메모리, 에러 정정 회로, 호스트 인터페이스 및 비휘발성 메모리 인터페이스를 포함한다. 버퍼 메모리는 메모리 제어기의 구동에 필요한 데이터를 임시로 저장할 수 있다. 또한, 버퍼 메모리는 기입 요청시 프로그램 동작에 이용될 데이터를 버 퍼링 할 수 있다. 에러 정정 회로는 기입 동작에서 프로그램 될 데이터의 에러 정정 코드 값을 계산하고, 독출 동작에서 읽혀진 데이터를 에러 정정 코드 값에 근거로 하여 에러 정정하고, 데이터 복구 동작에서 비휘발 성 메모리 장치로부터 복구된 데이터의 에러를 정정할 수 있다. 비휘발성 메모리 장치들은 전술한 바와 같이, 동일한 기입 데이터를 복수의 저장 영역들에 저장하고 에러 정정 회로는 복수의 독출 데이터들을 논리 연산하여 ECC 디코딩을 수행함으로써 에러 정정의 성공 확률을 향상시킬 수 있다. 이상 설명한 바와 같이, 본 발명의 실시예들에 따른 스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스 토리지 컨트롤러의 동작 방법은, 복수의 메모리들 각각에 상응하는 복수의 데이터들을 효율적으로 수신할 수 있 다. 본 발명의 실시예들에 따른 스토리지 컨트롤러, 이를 포함하는 스토리지 시스템 및 스토리지 컨트롤러의 동작 방법은 신뢰성 및 신속성 중 어느 하나를 우선시하여 다양한 경로를 통해 복수의 데이터들을 효율적으로 수신할 수 있다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "해당 기술분야의 숙련된 당업자는 본 발명의 실시예들이 시스템, 방법, 컴퓨터로 판독 가능한 매체에 저장된 컴 퓨터로 판독 가능한 프로그램 코드를 포함하는 제품 등의 형태로 구현될 수 있음을 이해할 것이다. 상기 컴퓨터 로 판독 가능한 프로그램 코드는 다양한 컴퓨터 또는 다른 데이터 처리 장치의 프로세서로 제공될 수 있다. 상 기 컴퓨터로 판독 가능한 매체는 컴퓨터로 판독 가능한 신호 매체 또는 컴퓨터로 판독 가능한 기록 매체일 수 있다. 상기 컴퓨터로 판독 가능한 기록 매체는 명령어 실행 시스템, 장비 또는 장치 내에 또는 이들과 접속되어 프로그램을 저장하거나 포함할 수 있는 임의의 유형적인 매체일 수 있다. 산업상 이용가능성 본 발명의 실시예들은 에러 정정이 요구되는 메모리 장치 및 이를 포함하는 시스템에서 유용하게 이용될 수 있 다. 특히 본 발명의 실시예들은 메모리 카드, 솔리드 스테이트 드라이브(Solid State Drive; SSD), 임베디드 멀 티미디어 카드(eMMC, embedded multimedia card), 유니버셜 플래시 스토리지(UFS, universal flash storage), 컴퓨터(computer), 노트북(laptop), 핸드폰(cellularphone), 스마트폰(smart phone), MP3 플레이어, 피디에이 (Personal Digital Assistants; PDA), 피엠피(Portable Multimedia Player; PMP), 디지털 TV, 디지털 카메라, 포터블 게임 콘솔(portable game console), 네비게이션(navigation) 기기, 웨어러블(wearable) 기기, IoT(internet of things;) 기기, IoE(internet of everything:) 기기, e-북(e-book), VR(virtual reality) 기 기, AR(augmented reality) 기기 등과 같은 전자 기기에 필요한 반도체 제조 공정에 더욱 유용하게 적용될 수 있다."}
{"patent_id": "10-2020-0006573", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "상기에서는 본 발명이 바람직한 실시예를 참조하여 설명하였지만, 해당 기술분야의 숙련된 당업자는 하기의 특 허청구범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명을 다양하게 수정 및 변경시킬 수 있음을 이해할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6a 도면6b 도면7a 도면7b 도면8 도면9 도면10 도면11 도면12 도면13 도면14 도면15a 도면15b 도면16 도면17"}
{"patent_id": "10-2020-0006573", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 2는 본 발명의 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 3은 도 2에 도시된 경판정부에 포함되는 제1 게이트 회로를 나타내는 도면이다. 도 4는 도 3에 도시된 제1 게이트 회로에 의해 수행되는 논리 연산을 설명하기 위한 도면이다. 도 5는 도 2에 도시된 경판정부에 포함되는 제2 게이트 회로를 나타내는 도면이다. 도 6a 및 도 6b는 도 5에 도시된 제2 게이트 회로의 제1 논리 연산을 설명하기 위한 도면이다. 도 7a 및 도 7b는 도 5에 도시된 제2 게이트 회로의 제2 논리 연산을 설명하기 위한 도면이다. 도 8은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 9는 도 8에 도시된 연판정부에 의해 수행되는 논리 연산을 설명하기 위한 도면이다. 도 10은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 11은 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러를 나타내는 블록도이다. 도 12는 본 발명의 또 다른 실시예에 따른 스토리지 컨트롤러의 동작 방법을 나타내는 흐름도이다. 도 13은 본 발명의 실시예들에 따른 메모리 시스템을 나타내는 블록도이다. 도 14는 본 발명의 실시예들에 따른 메모리 장치를 나타내는 블록도이다 도 15a는 도 14의 메모리 셀 어레이의 일 실시예를 나타내는 블록도이고, 도 15b는 메모리 블록의 등가 회로를 나타내는 회로도이다. 도 16은 본 발명의 실시예들에 따른 메모리 시스템을 나타내는 블록도이다. 도 17은 본 발명의 실시예들에 따른 스토리지 컨트롤러를 포함하는 에스에스디(SSD: solid state disk or solid state drive)를 나타내는 블록도이다."}
