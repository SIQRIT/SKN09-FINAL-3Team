{"patent_id": "10-2024-0122184", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0038612", "출원번호": "10-2024-0122184", "발명의 명칭": "데이터베이스 유형에 비종속적인 데이터 관리 인터페이스 제공 장치, 방법 및 시스템", "출원인": "(주)레몬클라우드", "발명자": "정대욱"}}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "데이터베이스 인터페이스 추상화 장치에 포함된 하나 이상의 프로세서에 의하여 수행되는 방법으로써, 상기 방법은:클라이언트로부터, 데이터베이스 시스템에 대한 제1 추상화 검색 요청을 수신하는 단계-상기 제1 추상화 검색요청은, 매개변수로써 하나 이상의 속성 정보의 조합을 포함함-;상기 하나 이상의 속성 정보의 조합 및 상기 데이터베이스 인터페이스 추상화 장치에 기 저장된 쿼리 생성 패턴에 기초하여, 상기 제1 추상화 검색 요청에 상응하는 하나 이상의 제1 검색 쿼리를 생성하는 단계;를 포함하고,상기 기 저장된 쿼리 생성 패턴 및 상기 하나 이상의 제1 검색 쿼리는,데이터베이스 유형별로 결정되는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 제1 추상화 검색 요청은,데이터베이스 유형에 비종속적으로 구성되는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서,상기 제1 추상화 검색 요청의 하나 이상의 속성 정보는,구조화된 양식의 데이터를 이용하여 구성되는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서,상기 구조화된 양식의 데이터는,JSON, XML 또는 YAML 중 적어도 하나를 이용하는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1 항에 있어서,상기 제1 검색 쿼리를 생성하는 단계는,공개특허 10-2025-0038612-3-상기 제1 추상화 검색 요청의 매개변수를 파싱하여, 제1 검색 요청 요소를 생성하는 단계; 및상기 제1 검색 요청 요소에 기초하여, 상기 기 저장된 쿼리 생성 패턴으로부터 상기 하나 이상의 제1 검색 쿼리를 생성하는 단계;를 포함하는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5 항에 있어서,상기 제1 검색 요청 요소는,상기 하나 이상의 속성 정보 및 논리 조합 관계를 포함하는 것을 특징으로 하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 항에 있어서,상기 하나 이상의 제1 검색 쿼리에 대한 하나 이상의 제1 검색 결과를 상기 데이터베이스 시스템으로부터 수신하는 단계;상기 하나 이상의 제1 검색 결과를 병합하여, 제1 통합 검색 결과를 생성하는 단계; 및상기 제1 통합 검색 결과를 상기 클라이언트로 제공하는 단계;를 포함하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7 항에 있어서,상기 제1 통합 검색 결과를 생성하는 단계는,상기 하나 이상의 제1 검색 결과를 리스트 형태로 연결하는 단계;를 포함하는,방법."}
{"patent_id": "10-2024-0122184", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1 항 내지 제8 항 중 어느 한 항에 따른 방법을 수행하는 데이터베이스 인터페이스 추상화 장치."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 데이터베이스 인터페이스 추상화 장치에 포함된 하나 이상의 프로세서에 의하여 수행되는 방법으로써, 상기 방법은: 클라이언트로부터, 데이터베이스 시스템에 대한 제1 추상화 검색 요청을 수신하는 단계-상기 제1 추상화 검색 요청은, 매개변수로써 하나 이상의 속성 정보의 조합을 포함함-; 상기 하나 이상의 속성 정보의 조 합 및 상기 데이터베이스 인터페이스 추상화 장치에 기 저장된 쿼리 생성 패턴에 기초하여, 상기 제1 추상화 검 색 요청에 상응하는 하나 이상의 제1 검색 쿼리를 생성하는 단계;를 포함하고, 상기 기 저장된 쿼리 생성 패턴 및 상기 하나 이상의 제1 검색 쿼리는, 데이터베이스 유형별로 결정되는 것을 특징으로 할 수 있다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 데이터베이스 유형에 종속적이지 않은 데이터 관리 인터페이스를 제공하는 방법에 관한 것으로, 보다 구체적으로, 추상화된 데이터베이스 인터페이스를 제공하기 위한 방법에 관한 것이다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로 백엔드에 위치하는 데이터베이스를 관리하기 위해서는 사용되는 데이터베이스 유형에 따른 종속적인 인터페이스를 사용하여야 한다.최근, 운용환경 내에서 서로 다른 유형의 데이터베이스를 동시에 운용하는 사례가 늘고 있다. 특히, 멀티 클라 우드를 이용하는 운용 환경이 늘어남에 따라, 프로덕션 환경에서 서로 다른 유형의 데이터베이스를 동시에 운용 하는 사례가 늘어나고 있다. 이러한 경우, 데이터베이스의 관리를 위해서는 데이터베이스 유형 각각에 대해 개 별적으로 데이터 관리가 이루어져야 한다는 문제가 있다. 이러한 문제는 서비스 개발 및 관리의 복잡성을 증대시키므로, 핵심 비즈니스 로직의 개발 및 관리에 집중되어 야 할 역량이 낭비되는 문제를 발생시키게 된다. 따라서, 당업계에는 데이터베이스 유형에 비종속적인 데이터 관리 인터페이스 기법에 대한 수요가 존재한다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 데이터베이스에 종속적이지 않은 데이터 관리 인터페이스를 제공하는 것을 목적으로 한다. 본 개시가 해결하고자 하는 과제들은 상술한 과제에 제한되지 않으며, 언급되지 않은 또 다른 과제들은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시 예에 따른 데이터베이스 인터페이스 추상화 장치에 포함된 하나 이상의 프로세서에 의하여 수행되는 방법으로써, 상기 방법은: 클라이언트로부터, 데이터베이스 시스템에 대한 제1 추상화 검색 요청을 수 신하는 단계-상기 제1 추상화 검색 요청은, 매개변수로써 하나 이상의 속성 정보의 조합을 포함함-; 상기 하나 이상의 속성 정보의 조합 및 상기 데이터베이스 인터페이스 추상화 장치에 기 저장된 쿼리 생성 패턴에 기초하 여, 상기 제1 추상화 검색 요청에 상응하는 하나 이상의 제1 검색 쿼리를 생성하는 단계;를 포함하고, 상기 기 저장된 쿼리 생성 패턴 및 상기 하나 이상의 제1 검색 쿼리는, 데이터베이스 유형별로 결정되는 것을 특징으로 할 수 있다. 또한, 상기 제1 추상화 검색 요청은, 데이터베이스 유형에 비종속적으로 구성되는 것을 특징으로 할 수 있다. 또한, 상기 제1 추상화 검색 요청의 하나 이상의 속성 정보는, 구조화된 양식의 데이터를 이용하여 구성되는 것 을 특징으로 할 수 있다. 또한, 상기 구조화된 양식의 데이터는, JSON, XML 또는 YAML 중 적어도 하나를 이용하는 것을 특징으로 할 수 있다. 또한, 상기 제1 검색 쿼리를 생성하는 단계는, 상기 제1 추상화 검색 요청의 매개변수를 파싱하여, 제1 검색 요 청 요소를 생성하는 단계; 및 상기 제1 검색 요청 요소에 기초하여, 상기 기 저장된 쿼리 생성 패턴으로부터 상 기 하나 이상의 제1 검색 쿼리를 생성하는 단계;를 포함하는 것을 특징으로 할 수 있다. 또한, 상기 제1 검색 요청 요소는, 상기 하나 이상의 속성 정보 및 논리 조합 관계를 포함하는 것을 특징으로 할 수 있다. 또한, 상기 하나 이상의 제1 검색 쿼리에 대한 하나 이상의 제1 검색 결과를 상기 데이터베이스 유형 각각으로 부터 수신하는 단계; 상기 하나 이상의 제1 검색 결과를 병합하여, 제1 통합 검색 결과를 생성하는 단계; 및 상 기 제1 통합 검색 결과를 상기 클라이언트로 제공하는 단계;를 포함할 수 있다. 또한, 상기 제1 통합 검색 결과를 생성하는 단계는, 상기 하나 이상의 제1 검색 결과를 리스트 형태로 연결하는 단계;를 포함할 수 있다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 따른 데이터 관리 인터페이스는 사용자가 개별 데이터베이스 유형에 대한 개발 및 관리 지식 없이도 데이터베이스를 이용 및 관리하기에 용이하도록 만들 수 있다. 또한, 본 개시에 따른 데이터 관리 인터페이스는 단일 인터페이스를 이용하여 서로 다른 유형의 데이터베이스를 이용 및 관리할 수 있도록 함으로써, 데이터베이스 이용 및 관리의 편의성을 증대시킨다. 본 개시에 따른 효과들은 상술한 효과에 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2024-0122184", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면들에 기재된 내용들을 참조하여 본 발명에 따른 예시적 실시 예를 상세하게 설명한다. 다만, 본 발명이 예시적 실시 예들에 의해 제한되거나 한정되는 것은 아니다. 다른 정의가 없다면, 본 명세서에서 사 용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 것이나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 특정한 경우, 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 설명 부분에서 상세히 그 의미를 기재할 것이다. 따라서, 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서 전체에서 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라, 다른 구성요소를 더 포함할 수 있음을 의미한다. 또한, 본 명세서에서 사용된 단수형은 특별히 언급하지 않는 한 복수형도 포함한다. 또한, 본 명세서 전체에서 기재된 \"a, b 및/또는 c 중 적어도 하나\"의 표현은, 'a 단독', 'b 단독', 'c 단독', 'a 및 b', 'a 및 c', 'b 및 c', 또는 'a, b, c 모두'를 포괄할 수 있다. 한편, 본 명세서에서 사용되는 \"제1 및/또는 제2\" 등의 용어는 다양한 구성요소들을 설명하기 위하여 사용될 수 있으나, 이는 하나의 구성요소를 다른 구성요소로부터 구별하기 위한 목적으로만 사용될 뿐, 해당 용어로 지칭 되는 구성요소로 한정하기 위한 것은 아니다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않는 한, 제1 구성요 소는 제2 구성요소로 명명될 수 있으며, 제2 구성요소 또한 제1 구성요소로 명명될 수 있다. 또한, 본 명세서에 기재된 “…부”, “…모듈” 등의 용어는 적어도 하나의 기능이나 동작을 처리하는 단위를 의미하며, 이는 하드웨어 또는 소프트웨어로 구현되거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또 한, 본 명세서에서 본 개시의 실시 예는 기능적인 블록 구성들 및 다양한 처리 단계들로 나타내어질 수 있다. 이러한 기능 블록들은 특정 기능들을 실행하는 다양한 개수의 하드웨어 또는/및 소프트웨어 구성들로 구현될 수 있다. 예를 들어, 본 개시의 실시 예는 하나 이상의 마이크로프로세서의 제어 또는 다른 제어 장치들에 의해서 다양한 기능들을 실행할 수 있는, 메모리, 프로세싱, 로직(logic), 룩 업 테이블(look-up table) 등과 같은 직접 회로 구성들을 채용할 수 있다. 본 명세서에 개시된 구성 요소들이 소프트웨어 프로그래밍 또는 소프트웨어 요소들로 실행될 수 있는 것과 유사 하게, 본 개시의 실시 예는 데이터 구조, 프로세스들, 루틴들 또는 다른 프로그래밍 구성들의 조합으로 구현되 는 다양한 알고리즘을 포함하여, C, C++, 자바(Java), 어셈블러(assembler) 등과 같은 프로그래밍 또는 스크립 팅 언어로 구현될 수 있다. 기능적인 측면들은 하나 이상의 프로세서들에서 실행되는 알고리즘으로 구현될 수 있다. 또한, 본 실시 예는 전자적인 환경 설정, 신호 처리, 및 데이터 처리 중 적어도 하나를 위하여 종래 기술 을 채용할 수 있다. “매커니즘”, “요소”, “수단”, “구성”과 같은 용어는 넓게 사용될 수 있으며, 기계 적이고 물리적인 구성들로 한정되는 것은 아니다. 상기 용어는 프로세서 등과 연계하여 소프트웨어의 일련의 처 리들(routines)의 의미를 포함할 수 있다. 본 명세서에 첨부된 처리 흐름도 도면들의 각 블록과 흐름도 도면들의 조합들은 컴퓨터 프로그램 인스트럭션들 에 의해 수행될 수 있다. 이들 컴퓨터 프로그램 인스트럭션들은 범용 컴퓨터, 특수용 컴퓨터 또는 기타 프로그 램 가능한 데이터 프로세싱 장비의 프로세서에 탑재될 수 있으므로, 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비의 프로세서를 통해 수행되는 그 인스트럭션들이 흐름도 블록(들)에서 설명된 기능들을 수행하는 수단을 생성하게 된다. 이들 컴퓨터 프로그램 인스트럭션들은 특정 방식으로 기능을 구현하기 위해 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 지향할 수 있는 컴퓨터 이용 가능 또는 컴퓨터 판독 가능 메모리에 저장되는 것이 가능 하며, 그 컴퓨터 이용가능 또는 컴퓨터 판독 가능 메모리에 저장된 인스트럭션들은 흐름도 블록(들)에서 설명된 기능을 수행하는 인스트럭션 수단을 내포하는 제조 품목을 생산하는 것도 가능하다. 컴퓨터 프로그램 인스트럭션들은 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에 탑재되는 것도 가능하므로, 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에서 일련의 동작 단계들이 수행되어 컴퓨터로 실행되는 프로세스를 생성해서 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 수행하는 인스트럭션들은 흐름도 블록(들)에서 설명된 기능들을 실행하기 위한 단계들을 제공하는 것도 가능하다. 또한, 각 블록은 특정된 논리적 기능(들)을 실행하기 위한 하나 이상의 실행 가능한 인스트럭션들을 포함하는 모듈, 세그먼트 또는 코드의 일부를 나타낼 수 있다. 또, 몇 가지 대체 실행 예들에서는 블록들에서 언급된 기 능들이 순서를 벗어나서 발생하는 것도 가능할 수 있다. 예컨대, 잇달아 도시되어 있는 두 개의 블록들은 사실 실질적으로 동시에 수행되는 것도 가능하고 또는 그 블록들이 때때로 해당하는 기능에 따라 역순으로 수행되는 것도 가능하다. 본 명세서에서 언급되는 “전자 장치” 또는 “단말”은 네트워크를 통해 서버나 타 단말에 접속할 수 있는 컴 퓨터나 휴대용 단말로 구현될 수 있다. 여기서, 컴퓨터는 예를 들어, 웹 브라우저(WEB Browser)가 탑재된 노트 북, 데스크톱(desktop), 랩톱(laptop) 등을 포함하고, 휴대용 단말은 예를 들어, 휴대성과 이동성이 보장되는 무선 통신 장치로서, IMT(International Mobile Telecommunication), CDMA(Code Division Multiple Access), W-CDMA(W-Code Division Multiple Access), LTE(Long Term Evolution) 등의 통신 기반 단말, 스마트폰, 태블릿 PC 등과 같은 모든 종류의 핸드헬드(Handheld) 기반의 무선 통신 장치를 포함할 수 있다. 또한, 본 명세서에서 언급되는 “전자 장치” 또는 “단말”은 프로세서, 프로그램 데이터를 저장하고 실행하는 메모리, 디스크 드라 이브와 같은 영구 저장부(permanent storage), 외부 장치와 통신하는 통신 포트, 터치 패널, 키(key), 버튼 등 과 같은 사용자 인터페이스 장치 등도 포함할 수 있다. 본 개시에 있어서, 소프트웨어 모듈 또는 알고리즘으로 구현되는 방법들은 프로세서상에서 실행 가능한 컴퓨터 가 읽을 수 있는 코드들 또는 프로그램 명령들로서 컴퓨터가 읽을 수 있는 기록 매체 상에 저장될 수 있다. 여 기서 컴퓨터가 읽을 수 있는 기록 매체는 마그네틱 저장 매체(예컨대, ROM(read-only memory), RAM(random- Access memory), 플로피 디스크, 하드 디스크 등) 및 광학적 판독 매체(예컨대, 시디롬(CD-ROM), 디브이디(DVD: Digital Versatile Disc)) 등을 포함할 수 있다. 컴퓨터가 읽을 수 있는 기록 매체는 네트워크로 연결된 컴퓨 터 시스템들에 분산되어 실행될 수 있다. 이하, 본 개시의 다양한 실시 예들은 첨부된 도면을 참조하여 상세하게 설명될 것이다. 실시 예를 설명함에 있 어서 본 발명이 속하는 기술 분야에 익히 알려져 있고 본 발명과 직접적으로 관련이 없는 기술 내용에 대해서는 설명을 생략할 것이다. 이는 불필요한 설명을 생략함으로써 본 발명의 요지를 흐리지 않고 더욱 명확히 전달하 기 위함이다. 마찬가지 이유로 첨부 도면에 있어서 일부 구성요소는 과장되거나 생략되거나 개략적으로 도시되 었다. 또한, 각 구성요소의 크기는 실제 크기를 전적으로 반영하는 것이 아니다. 본 명세서에서, 전문에 걸쳐동일한 참조 부호는 동일한 또는 대응하는 구성 요소를 지칭할 수 있다. 도 1은 본 개시의 몇몇 실시예에 따른 데이터베이스 인터페이스 추상화 장치의 동작을 나타낸 개념도이다. 도 1을 참조하면, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 클라이언트에게 데이터베 이스 관리를 위한 추상화 인터페이스를 제공하고, 클라이언트로부터 수신된 추상화 인터페이스에 상응하는 명령을 각 데이터베이스에 전송할 수 있다. 일 실시예에서, 인터페이스 추상화 장치와 연결되는 데이터베이스는 복수 개 존재할 수 있다. 이 때, 복수 의 데이터베이스는 서로 다른 물리적 장치에 존재할 수도 있고, 서로 같은 물리적 장치 상에 존재하되 논리적으 로 구별될 수 있다. 일 실시예에서, 인터페이스 추상화 장치와 연결되는 복수의 데이터베이스는 서로 다른 유형의 데이터베이스일 수 있다. 일 실시예에서, 제1 데이터베이스, 제2 데이터베이스 및 제3 데이터 베이스는 서로 다른 소프트웨어 솔루션을 이용하여 구현된 데이터베이스 시스템일 수 있다. 일 예시에서, 제1 데이터베이스는 OracleDB, 제2 데이터베이스는 MongoDB, 제3 데이터베이스는 Redis를 이용 할 수 있다. 인터페이스 추상화 장치와 연결되는 데이터베이스 시스템은 상술한 예시에 한정되지 않으며, 다양한 유형의 데이터베이스 시스템이 제1 데이터베이스 내지 제3 데이터베이스에서 이용될 수 있다. 일 실시예에서, 인터페이스 추상화 장치는 클라이언트로부터 수신된 추상 데이터베이스 동작 요청을 연결된 각 데이터베이스에 적합한 동작 요청으로 변환하고, 변환된 동작 요청을 각 데이터베이스로 전송할 수 있다. 이 때, 각 데이터베이스로 전송되는 변환된 동작 요청은 각 데이터베이스 유형에 종속적인 형식으로 변환 된 것일 수 있다. 인터페이스 추상화 장치는 각 데이터베이스 시스템으로부터 요청에 대한 응답을 수신하 고, 이를 클라이언트로 제공할 수 있다. 바람직하게는, 인터페이스 추상화 장치는 각 데이터베이스로 부터 수신된 요청에 대한 응답을 단일 형식으로 병합하여, 클라이언트에게 통합된 요청에 대한 응답을 제 공할 수 있다. 바람직한 실시예에서, 인터페이스 추상화 장치에 의하여 제공되는 추상화 인터페이스는 데 이터의 생성(Create), 조회(Read), 업데이트(Update) 및/또는 삭제(Delete)에 관한 명령을 포함할 수 있다. 일 실시예에서, 조회를 위한 인터페이스는 검색을 위한 인터페이스를 포함할 수 있다. 일 실시예에서, 인터페이스 추상화 장치는, 데이터베이스의 이용 및 관리 요청을 위한 인터페이스의 추상 화 뿐만 아니라, 데이터베이스의 통합적 뷰(view)를 클라이언트에 제공할 수 있다. 즉, 제1 데이터베이스 , 제2 데이터베이스 및/또는 제3 데이터베이스의 일부 또는 전부는 통합되어, 단일 인터페이스 (예를 들어, 명령줄 인터페이스 또는 그래픽 사용자 인터페이스)를 통하여 사용자에게 제공될 수 있다. 예를 들 어, 제1 데이터베이스, 제2 데이터베이스 및/또는 제3 데이터베이스에 동일한 객체에 대한 속성 정보가 분산되어 저장된 경우, 인터페이스 추상화 장치는 해당 객체에 대한 속성 정보를 통합하여 단일화 된 인터페이스로 클라이언트에 제공할 수 있다. 예를 들어, 해당 객체에 대한 속성 정보 전체가 단일 화면 에서 조회될 수 있다. 도 2는 본 개시의 몇몇 실시예에 따른 데이터베이스 인터페이스 추상화 장치의 구성을 예시적으로 나타낸 블록 도이다. 도 2를 참조하면, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 추상 스토리지, 단순 스 토리지, 스토리지 드라이버 및/또는 검색 쿼리부를 포함할 수 있다. 일 실시예에서, 추상 스토리지는 데이터베이스 시스템을 추상화하여 클라이언트에 제공하기 위 한 기능을 수행하는 모듈일 수 있다. 일 실시예에서, 추상 스토리지는 제1 데이터베이스, 제2 데이터 베이스 및/또는 제3 데이터베이스를 통합하여 단일 데이터베이스 시스템으로 표현하기 위한 통합 뷰 제공 기능, 백엔드 데이터베이스 시스템에 대하여 개별 데이터베이스 시스템에 종속적이지 않은 추상화 인 터페이스를 제공하는 기능 및/또는 인터페이스 추상화 장치 내 다른 구성 요소들 및/또는 백엔드 데이터베 이스 시스템에 포함된 개별 데이터베이스와 통신하는 기능을 수행하기 위한 모듈을 포함할 수 있다. 도 2를 다시 참조하면, 본 개시의 몇몇 실시예에 따른 단순 스토리지는 오브젝트 스토리지(Object storage)와 같은 적어도 하나의 단순 스토리지(Simple storage) 유형의 구현체 및/또는 클라이언트로부터 수신된 추상화 인터페이스에 기반한 요청을 개별 데이터베이스에 종속적인 표현(예를 들어, SQL문)으로 변환하 기 위한 기능을 수행하는 모듈을 포함할 수 있다. 단순 스토리지의 구성 및 동작에 관하여는 도 4에서 상세히 후술한다. 또한, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 데이터베이스 드라이버를 더 포함할 수 있다. 일 실시예에서, 데이터베이스 드라이버는 클라이언트의 추상화된 인터페이스를 통한 요청에 대응하여 생성된 쿼리를 개별 데이터베이스가 이해할 수 있는 형식으로 변환하고, 변환된 요청을 데이터베이스 로 전달할 수 있다. 이 때, 데이터베이스 드라이버에 의하여 변환되는 쿼리는 단순 스토리지에서 생 성된 SQL 쿼리일 수 있다. 또한, 데이터베이스 드라이버는 개별 데이터베이스로부터 수신된 요청에 대한 응답 결과를 클라이언트 및/또는 클라이언트 상에서 요청을 발생시킨 어플리케이션이 이해할 수 있는 형태로 변환할 수 있다. 몇몇 실시예에서, 데이터베이스 드라이버는 개별 데이터베이스 유형 별로 각각 존 재할 수 있다. 예를 들어, 데이터베이스 드라이버는 제1 데이터베이스, 제2 데이터베이스 및/또 는 제3 데이터베이스 각각에 종속되는 데이터베이스 드라이버를 포함할 수 있다. 도 2를 다시 참조하면, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 검색 쿼리부를 더 포함할 수 있다. 일 실시예에서, 검색 쿼리부는 클라이언트로부터 추상화된 인터페이스를 이용하여 작성된 검색 요청을 수신하고, 수신된 검색 요청에 적합한 쿼리를 생성하고 이를 데이터베이스 드라이버에 전달하여, 데이터베이스에서 클라이언트에 의하여 요청된 검색이 실시되도록 할 수 있다. 도 8에서 후술하겠지만, 클라이언트에 의하여 검색 쿼리부로 전달되는 검색 관련 요청 함수는, 데이 터베이스에서 검색되어야 하는 데이터들의 속성에 관한 데이터를 매개변수로 포함할 수 있다. 예를 들어, 데이 터베이스 내에서 특정 성별, 연령 및/또는 성(Last name)을 속성으로써 가진 엔티티를 검색해야 하는 경우, 클 라이언트에 의하여 전송되는 요청 함수에는 이러한 속성 값이 매개변수로써 포함되어 있을 수 있다. 바람 직하게는, 매개변수는 데이터베이스 유형에 종속적이지 않은 데이터로 작성될 수 있다. 예를 들어, 매개변수는 JSON(JavaScript Object Notation), XML(eXtensible Markup Language) 및/또는 YAML와 같이 특정 데이터베이스 유형에 비종속적인 양식을 이용하여 표현됨으로써 검색 쿼리부로 전달될 수 있다. 도 3은 본 개시의 몇몇 실시예에 따른 클라이언트가 데이터베이스 추상화 인터페이스를 이용하여 데이터베이스 를 관리하는 방법을 나타낸 개념도이다. 도 3을 참조하면, 본 개시의 몇몇 실시예에 있어서, 클라이언트는 추상화 인터페이스를 통해 인터페 이스 추상화 장치 및/또는 그 내부의 추상 스토리지와 통신함으로써 데이터베이스 내의 데이터에 대한 접 근 및 관리를 수행할 수 있다. 본 개시의 몇몇 실시예에 있어서, 추상 스토리지는 사용자에게 논리적 및/또는 물리적으로 분리된 하나 이 상의 데이터베이스를 논리적으로 통합하여, 통합된 데이터베이스에 대한 뷰(view)를 클라이언트에게 제공할 수 있다. 또한, 일 실시예에서, 추상 스토리지는 클라이언트의 요청을 수신하고, 요청에 대한 응답을 제 공함으로써 클라이언트에 대한 서비스를 제공할 수 있다. 또한, 일 실시예에서, 추상 스토리지는 인터페이 스 추상화 장치 내의 다른 구성요소 및 백엔드에 위치한 데이터베이스와의 통신을 수행할 수 있다. 상술한 추상 스토리지의 기능은 예시적인 것이며 이에 한정되지 않는다. 또한, 상술된 추상 스토리지의 기능은 인 터페이스 추상화 장치의 기능에 대한 설명을 용이하게 하기 위한 것으로, 추상 스토리지의 기능과 기능을 수행하기 위한 모듈들은 인터페이스 추상화 장치의 다른 구성요소를 통해서 수행될 수도 있다. 도 2를 다시 참조하면, 추상 스토리지는 통합 데이터베이스 뷰 제공부를 포함할 수 있다. 일 실시예 에서, 통합 데이터베이스 뷰 제공부는 백엔드에 위치한 복수의 데이터베이스들에 저장되어 있는 데이터들 이 논리적으로 단일 데이터베이스로 구성된 것과 같은 뷰를 클라이언트에 제공할 수 있다. 일 실시예에서, 클라이언트에 추상 스토리지로 데이터베이스 내에 특정한 속성을 가진 하나 이상의 데이터에 대한 조회가 요청되고, 조회 결과를 클라이언트에 응답으로써 제공할 수 있다. 이 때, 클라이언 트에 의하여 전송되는 요청은 추상화 인터페이스에 기초하여 구성될 수 있다. 상술한 예시와 같이 조 회 요청이 수행되는 경우, 클라이언트의 조회 요청은 조회 요청이 추상화된 인터페이스 함수인 read 함수 를 이용하여 구성될 수 있다. 이 경우, 추상 스토리지는 클라이언트 서비스부를 통하여 클라이언트 의 요청을 수신하고, 이를 백엔드 통신부를 통하여 인터페이스 추상화 장치 내의 다른 구성요소 및/ 또는 데이터베이스에 전송할 수 있다. 클라이언트의 조회 요청에 따른 조회 결과가 데이터베이스 및/또는 인터페이스 추상화 장치 내의 다른 구성요소로부터 백엔드 통신부로 수신될 수 있다. 일 예시에서, 클라이 언트에 의하여 조회 요청이 수신된 속성 요소를 갖는 데이터가 백엔드에 위치한 복수의 데이터베이스에 분산되어 저장되어 있을 수 있다. 이 경우, 통합 데이터베이스 뷰 제공부는 조회 요청의 결과로써 수신된 복 수의 데이터를 단일 형식으로 병합하여, 클라이언트로 전송할 수 있다. 이를 통해, 클라이언트는 백 엔드에 위치한 서로 다른 유형의 복수의 데이터베이스에 대한 지식 없이도 논리적으로 통합된 단일 데이터베이 스의 형식으로 데이터에 대한 접근 및 관리를 수행할 수 있다. 본 개시의 몇몇 실시예에 있어서, 클라이언트가 인터페이스 추상화 장치에게 전송하는 데이터의 접근 및 관리를 위한 요청은, 추상화 인터페이스에 기초하여 구성될 수 있다. 추상화 인터페이스는 데이터의 생성, 조회, 수정 및/또는 삭제(CRUD) 기능을 제공할 수 있다. 도 3에서는 CRUD 기능을 제공하기 위한 인터페이 스 함수 및 그 매개변수를 예시적으로 도시하였으나, 인터페이스 함수 및 매개변수의 형태 및 유형은 도시된 사 항에 한정되지 않는다. 클라이언트가 인터페이스 추상화 장치를 이용하여 관리하는 데이터는 다양한 형식을 가질 수 있다. 예를 들어, 클라이언트에 의하여 관리되는 데이터는 SQL, NoSQL 및/또는 오브젝트 데이터를 포함할 수 있다. 일 실시예에서, 클라이언트는 XML, YAML 및/또는 JSON과 같이 데이터 구조를 기술하는 언어를 이용하여, 인터 페이스 추상화 장치를 통해 백엔드에 위치한 데이터에 대한 접근 및 관리를 수행할 수 있다. 이하 설명의 편의 를 위해 클라이언트가 JSON 형식에 기반하여 인터페이스 추상화 장치에 대한 요청을 전송한다고 가정한다. 일 실시예에서, 데이터를 생성하는 기능은 save 함수를 이용하여 구현될 수 있다. 이 때, save 함수의 매개변수 는 JSON 속성의 키에 해당하는 식별자와 해당 식별자에 대해 저장되어야 하는 값을 포함할 수 있다. 또 다른 실 시예에서, 데이터를 조회하는 기능은 read 함수를 이용하여 구현될 수 있다. 이 때, read 함수의 매개변수는 JSON 속성의 키에 해당하는 식별자를 포함할 수 있다. 또 다른 일 예시에서, 데이터에 대한 수정을 수행하는 기 능은 update 함수를 이용하여 수행될 수 있다. 이 때, update 함수의 매개변수로써 JSON 속성의 식별자, 업데이 트 되어야 하는 값 및/또는 현재 값으로부터의 변화량을 기술하는 증분(increment)이 포함될 수 있다. 또 다른 예시로써, 데이터에 대한 삭제를 수행하는 기능은 delete 함수에 의하여 수행될 수 있으며, delete 함수의 매개 변수로써는 JSON 속성의 식별자가 포함될 수 있다. 상술한 추상화 인터페이스의 목록은 예시적이며, 데이 터에 대한 접근 및 관리를 수행하기 위한 다양한 기능이 함수 및 매개변수를 이용하여 구현될 수 있다. 이에 따라, 클라이언트는 백엔드에 위치한 데이터베이스의 유형과 무관하게, 인터페이스 추상화 장치에 의 하여 제공되는 추상화 인터페이스를 이용하여 데이터에 대한 접근 및 관리를 이용할 수 있다. 따라서, 데 이터베이스에 대한 종속성 문제가 해결되어 데이터베이스 유형 별 관리 및 개발에 요구되는 소요가 핵심 비즈니 스 로직의 개발 및 운용에 투입될 수 있다. 도 4는 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치의 구성 중 단순 스토리지의 구성을 나타낸 블록 도이다. 본 개시의 몇몇 실시예에 따른 단순 스토리지는 데이터 저장부 및 SQL 쿼리 변환부를 포함할 수 있다. 도 3의 추상 스토리지와 관련하여 상술한 바와 같이, 도 4에 도시되는 단순 스토리지의 구성요소들 은 예시적이며, 본 개시의 단순 스토리지는 추가적인 구성요소를 포함하거나, 혹은 도시된 구성요소 중 일 부가 단순 스토리지 외부에 구현되어 있을 수도 있다. 이하 도 4를 참조하면, 본 개시의 몇몇 실시예에 따른 단순 스토리지는 데이터 저장부를 포함할 수 있다. 데이터 저장부는 AWS S3과 같은 Simple Storage의 구현체일 수 있다. 일 예시에서, 데이터 저장부 는 도 4의 도시사항과 같이 오브젝트 스토리지(Object Storage) 형태로 구현될 수 있으나, 이에 한정되는 것은 아니다. 본 개시의 몇몇 실시예에 있어서, 데이터 저장부는 오브젝트 스토리지로써 백엔드에 위치한 데이터베이스 에 저장된 데이터의 적어도 일부를 저장할 수 있다. 일 실시예에서, 이러한 데이터들은 오브젝트 형태로 관리되 며, 스토리지 클래스(Storage class), 버킷(Bucket), 키(Key) 및/또는 메타데이터(Metadata)에 의하여 관리될 수 있다. 일 실시예에서, Standard 스토리지 클래스에 속하는 데이터들은 데이터에 대한 접근 및 관리가 자주 수행되는 데이터일 수 있으며, IA(Infrequent Access) 스토리지 클래스에 포함되는 데이터들은 상대적으로 데이 터에 대한 접근 및 관리 빈도가 낮은 데이터들일 수 있다. 본 개시의 몇몇 실시예에서, 데이터 저장부는 오브젝트를 파일 형태로 관리할 수 있다. 바람직하게는, 데이터 저장부는 백엔드 데이터베이스에 종속적이 지 않게 오브젝트를 관리하기 위해, 오브젝트를 JSON, XML 및/또는 YAML과 같은 구조화 데이터로 관리할 수 있 다. 또한, 도 4에 도시된 바와 같이, 데이터 저장부에 저장된 오브젝트 각각은 오브젝트 데이터 또는 오브젝트 데이터와 연결된 데이터의 라이프사이클(Lifecycle)과 관련된 메타 데이터와 연관될 수 있다. 바람직하게 는, 라이프사이클을 관리하기 위한 메타 데이터는 오브젝트 데이터 또는 데이터베이스 내 데이터의 생성 시점, 수정(또는 업데이트) 시점 및/또는 삭제 시점을 포함할 수 있다. 예를 들어, Person8에 대한 데이터가 백엔드에 위치한 특정 데이터베이스 상에서 제1 시점에서 생성되고, 제2 시점에서 마지막으로 수정된 후, 제3 시점에 삭 제되었다면, 제1 시점에 대한 정보는 Person8 오브젝트에 대한 메타데이터의 createdAt 필드에, 제2 시점은 메 타데이터의 updatedAt필드에, 제3 시점은 메타데이터의 deletedAt 시점에 포함될 수 있다. 도 4에 도시된 바와 같이 데이터 저장부를 통해 데이터베이스에 포함된 데이터들의 적어도 일부를 관리할 때, 오브젝트 스토리지를 이용함으로써 클라이언트에 의한 데이터의 접근 및 관리가 데이터베이스에 종속적이지 않게 이루어질 수 있다. 또한, 새로운 유형의 데이터베이스가 운용 환경에 추가된 경우, 데이터 저장부에 오브젝트 형태로 저장된 데이터를 이용하여 쉽게 데이터의 이식성을 확보할 수 있게 된다. 또한, 일부 데이터베 이스에서 데이터가 삭제되거나 재해 상황이 발생한 경우에도 데이터 저장부에 데이터가 잔존하므로, 데이 터의 복구 및 고가용성 특성의 구현이 용이해질 수 있다. 도 4를 다시 참조하면, 본 개시의 몇몇 실시예에 따른 단순 스토리지는 쿼리 변환부를 더 포함할 수 있다. 일 실시예에서, SQL 쿼리 변환부는 클라이언트의 요청에 포함된 추상화 인터페이스의 내용에 기초하여, 데이터베이스 유형에 적합한 쿼리를 생성하기 위한 모듈일 수 있다. 일 실시예에서, 쿼리 변환부 는 개별 데이터베이스 유형 별로 별도의 서브 모듈을 포함할 수 있고, 백엔드에 위치한 데이터베이스에서 운용되는 데이터베이스 유형에 기초하여 하나 이상의 서브 모듈을 활용함으로써 클라이언트의 요청에 대응하는 쿼리를 생성해낼 수 있다. 본 개시의 몇몇 실시예에 따른 쿼리 변환부는 추상화 인터페이스 요청 분석부(122a) 및/또는 쿼리 생성부 (122b)를 포함할 수 있다. 일 실시예에서, 추상화 인터페이스 요청 분석부(122a)는 클라이언트가 추상화 인터페이스 함수를 이용하여 전송한 요청을 세부 데이터로 분할함으로써, 쿼리 생성부(122b)가 개별 데이터베이 스 유형에 적합한 쿼리를 생성할 수 있도록 하는 모듈일 수 있다. 예시적으로, 추상화 인터페이스 요청 분석부 (122a)는 수신된 클라이언트의 요청을 요소별로 파싱할 수 있다. 예를 들어, 클라이언트가 추상화 인터페 이스의 update 함수를 이용하여 요청을 구성한 경우, 추상화 인터페이스 요청 분석부(122a)는 해당 요청을 함수 명(update), 매개변수 1(식별자), 매개변수 2(업데이트 데이터) 및/또는 매개변수 3(증분)으로 파싱할 수 있다. 추상화 인터페이스 요청 분석부(122a)는 파싱된 클라이언트 요청의 구성요소를 쿼리 생성부(122b)로 전달할 수 있다. 본 개시의 몇몇 실시예에 따른 쿼리 변환부는 쿼리 생성부(122b)를 포함할 수 있다. 일 실시예에서, 쿼리 생성부(122b)는 추상화 인터페이스 요청 분석부(122a)로부터 클라이언트 요청의 구성요소를 수신하고, 이로부터 데이터베이스 유형 별로 적절한 쿼리를 생성할 수 있다. 예를 들어, 쿼리 생성부(122b)는 데이터베이스 유형 별 로 별도의 쿼리 생성을 위한 서브 모듈을 포함할 수 있다. 또 다른 예시에서, 쿼리 생성부(122b)는 파싱된 클라 이언트 요청의 구성 요소의 패턴에 따라 기 설정된 쿼리 생성 패턴을 포함할 수 있고, 이러한 쿼리 생성 패턴은 데이터베이스 유형 별로 인터페이스 추상화 장치의 메모리에 저장되어 있을 수 있다. 도 5는 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치가 개별 데이터베이스에 대한 접근 및 관리를 수 행하는 과정을 나타낸 개념도이다. 도 5를 참조하면, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 데이터베이스 드라이버를 더 포함할 수 있다. 몇몇 실시예에서, 데이터베이스 드라이버는 단순 스토리지 및/또는 단순 스토리지 내의 쿼리 생성부(122b)로부터 생성된 데이터베이스 유형 별 쿼리문을 수신하고, 이를 데이터베이스가 이 해할 수 있도록 변환할 수 있다. 바람직한 실시예에서, 데이터베이스 드라이버는 백엔드에서 운용되는 데 이터베이스 유형 각각에 대응하는 데이터베이스 드라이버를 포함할 수 있다. 예를 들어, 데이터베이스 드라이버 는 CosmosDB를 위한 Cosmos 드라이버를 포함할 수 있고, Cosmos 드라이버로부터 생성된 명령이 CosmosDB 인 제1 데이터베이스로 전송될 수 있다. 마찬가지로, Dynamo 드라이버에 의하여 생성된 명령은 DynamoDB에 해당하는 제2 데이터베이스로 전송될 수 있고, Oracle 드라이버에 의하여 생성된 명령은 OracleDB에 해당 하는 제3 데이터베이스로 전송될 수 있다. 상술한 데이터베이스의 유형은 예시적인 것일 뿐, 더 많은 유형 의 데이터베이스가 백엔드에서 활용될 수 있다.도 6은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터에 대한 업데이트를 수행하는 과정을 예시적으로 나타낸 개념도이다. 도 6을 참조하면, 클라이언트는 데이터베이스 내 저장된 엔티티인 PersonA에 대하여, 그의 나이를 35세로 수정하는 쿼리를 인터페이스 추상화 장치에 의하여 제공되는 추상화 인터페이스 함수를 이용하여 전송할 수 있다. 예를 들어, PersonA의 나이를 35세로 수정하기 위한 쿼리는 update(age, 35, 0)과 같이 구성될 수 있 으며, PersonA라는 엔티티에 대한 지정은 별도의 절차로 이루어질 수 있다. 일 실시예에서, 인터페이스 추상화 장치는 수신된 클라이언트로부터의 요청을 단순 스토리지로 전달할 수 있다. 수신된 요청의 내용에 기초하여, 데이터 저장부는 오브젝트 스토리지 내 PersonA 오브젝 트의 필드 중 age 필드를 35로 변경하고, 수정이 실시된 시점을 YYMMDD 형태인 240826 형태로 메타데이터의 updatedAt 필드 내에 저장할 수 있다. 이와 함께, 클라이언트로부터의 요청은 쿼리 변환부로 전달될 수 있다. 전달된 수정 요청은 추상화 인터페이스 요청 분석부(122a)에 의하여 파싱될 수 있다. 예를 들어, 클라 이언트의 update(age, 35, 0)이라는 요청은 추상화 인터페이스에서 제공되는 함수명인 update, 매개변수인 age, 35, 0으로 각각 파싱되어 쿼리 생성부(122b)로 전달될 수 있다. 몇몇 실시예에서, 쿼리 생성부(122b)는 추상화 인터페이스 요청 분석부(122a)로부터 전달받은 클라이언트 요청 의 분석 결과에 기초하여, 도 6에 개시되는 바와 같이 각 데이터베이스 유형에 적합한 형태의 쿼리를 생성할 수 있다. 도 5에서 서술한 바와 같이, 쿼리 생성부(122b)에서 생성된 요청은 데이터베이스 드라이버(미도시)로 전 송될 수 있으나, 도 6에서는 데이터베이스 유형 별로 쿼리가 별도로 생성되는 것을 표현하기 위하여 이를 생략 하였다. 그러나, 도 6의 도시 사항과 도 5의 도시 사항은 서로 배치되지 아니함은 통상의 기술자에게 자명하게 이해될 것이다. 도 7은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터베이스에 대한 검색을 수행하 는 과정을 예시적으로 나타낸 개념도이다. 도 7을 참조하면, 인터페이스 추상화 장치는 데이터베이스 내 특정 속성의 조합을 가진 엔티티들을 검색하 기 위한 추상화된 인터페이스를 제공할 수 있다. 일 실시예에서, 제공되는 추상화된 인터페이스는 함수 형태로 제공될 수 있다. 예를 들어, 검색을 위한 추상화된 인터페이스 함수는 search일 수 있고, 함수 매개변수는 검색 되어야하는 엔티티의 범위 및/또는 하나 이상의 속성의 조합을 포함할 수 있다. 일 실시예에서, 함수의 매개변 수는 구조화된 양식의 데이터를 이용하여 구성될 수 있다. 예를 들어, 함수의 매개변수는 JSON, XML 및/또는 YAML과 같이 특정 데이터베이스 유형에 종속적이지 않은 구조화된 데이터로써 제공될 수 있다. 클라이언트로부터 수신된 추상화된 검색 요청은 인터페이스 추상화 장치 내에서 검색 쿼리부로 전달될 수 있다. 일 실시예에서, 검색 쿼리부는, 검색 요청 요소 분석부 및/또는 쿼리 생성부를 포함할 수 있다. 일 실시예에서, 검색 요청 요소 분석부는 전달된 추상화된 검색 쿼리에 포함된 하나 이상 의 요소를 분석할 수 있다. 일 실시예에서, 검색 요청 요소 분석부는 수신된 추상화된 검색 요청을 파싱함 으로써, 추상화된 검색 요청의 함수명 및/또는 하나 이상의 매개변수를 탐지할 수 있다. 일 실시예에서, 탐지된 매개변수는 하나 이상의 속성 조합 그 자체일 수도 있고, 속성 조합에 포함된 개별 속성 요소 및 그들의 조합 관계로 분리될 수도 있다. 일 실시예에서, 개별 속성 요소를 조합하기 위한 조합 관계는 AND, OR, NOR 및/또는 XOR을 포함할 수 있으며, 이에 제한되지 않는다. 검색 요청 요소 분석부에서 생성된 함수 및/또는 매개변수는 쿼리 생성부로 전달될 수 있다. 일 실시 예에서, 쿼리 생성부는 운용 환경에서 활용되고 있는 데이터베이스 유형 각각에 대응하는 쿼리문을 생성할 수 있다. 예시적으로, 쿼리 생성부는 데이터베이스 유형 각각에 대응하는 쿼리를 생성하기 위한 하나 이상 의 서브 모듈을 포함할 수 있다. 일 실시예에서, 쿼리 생성부는 검색 요청 요소 분석부로부터 전달된 함수 및/또는 매개변수의 조합에 대응하는 하나 이상의 패턴에 기초하여, 쿼리를 생성할 수 있다. 몇몇 실시예에서, 검색 쿼리부를 통해 생성된 하나 이상의 쿼리는 데이터베이스 드라이버로 전송될 수 있다. 데이터베이스 드라이버는 수신된 하나 이상의 쿼리 각각을, 대응하는 유형의 데이터베이스 드라 이버를 통해 데이터베이스가 이해할 수 있도록 변환할 수 있다. 데이터베이스 드라이버에 의하여 변환된 쿼리는 각각 대응하는 데이터베이스로 전달될 수 있다. 데이터베이스에 의하여 생성된 쿼리 결과는 통합되어 클라이언트에 쿼리 결과 응답으로써 제공될 수 있다. 일 실시예에서, 쿼리 결과 응답은 구조화된 데이터 양식으로 전달될 수 있다. 예를 들어, 쿼리 결과 응답은 JSON, XML 및/또는 YAML을 활용하여 제공될 수 있다. 일 실시예에서, 쿼리 결과 응답은 검색 결과를 포함할 수 있다. 검색 결과는 검색된 엔티티의 수 및/또는 검색된 엔티티의 목록을 적어도 포함할 수 있다. 또한, 검색된 엔티티의 목록은 다양한 데이터 구조를 이용하여 제공될 수 있다. 예를 들어, 검색된 엔티티의 목록은 리스트 (list) 형태로 제공될 수 있다. 도 8은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터베이스에 대한 예시적 검색을 수행하는 과정을 나타낸 개념도이다. 도 8을 참조하면, 본 개시의 몇몇 실시예에 따른 클라이언트는 주어진 데이터 범위 내에서 이름에 \"A\"가 포함되고, 나이가 40세를 초과하는 엔티티를 검색하고자, 인터페이스 추상화 장치에 의하여 제공되는 추상 화된 검색 인터페이스 함수인 search를 이용하여 추상화된 검색 쿼리를 구성할 수 있다. 일 예시에서, 추상화된 검색 쿼리는 search 함수 및 매개변수의 조합을 포함할 수 있다. 이 때, 매개변수의 조합은 이름이 A이며 나이 가 40세 초과임을 표현하기 위하여, \"name\": \"A\", \"age\": \">40\"와 같이 표현될 수 있다. 클라이언트에 의하여 수신된 쿼리는 검색 쿼리부로 전송될 수 있다. 몇몇 실시예에서, 검색 쿼리부 내의 검색 요청 요소 분석부는 추상화된 검색 요청 쿼리를 파싱을 통해 분석하여, 함수 명인 search, 매개변수의 명칭 및 값인 name, age, A, 40 그리고 매개변수의 조합 조건인 AND를 생성할 수 있다. 도 8의 도시와는 다르게, 검색 요청 요소 분석부는 매개변수의 조합을 추가적으로 파싱하지 않을 수 있다. 즉, 이 러한 예시에서 검색 요청 요소 분석부의 분석 결과는 (search, (\"name\": \"A\", \"age\" : \">40\")과 같이 구성될 수 있다. 상술한 검색 요청 요소 분석부의 분석 결과는 예시적인 것으로, 검색 요청 요소 분석부의 동작은 이에 한정되지 않아야 할 것이다. 쿼리 생성부는 검색 요청 요소 분석부의 추상화된 검색 쿼리 결과에 대한 요소 분석 결과를 수신하고, 이에 기초하여 개별 데이터베이스 유형에 적절한 쿼리문을 생성할 수 있다. 즉, 도 8에서 도시되는 바와 같이, Oracle 서브모듈(142a)은 OracleDB에 적합한 검색 쿼리문을, Cosmos 서브모듈(142b)은 CosmosDB에 적합한 검색 쿼리문을 생성할 수 있다. 도 8에 도시되는 데이터베이스 유형은 예시적이며, 다양한 유형의 데이 터베이스 시스템이 사용될 수 있음은 당업자에게 자명하다 할 것이다. 몇몇 실시예에서, 쿼리 생성부에 의하여 생성된 검색 쿼리문은 데이터베이스 드라이버로 전송되어, 각 유형의 데이터베이스 시스템이 이해할 수 있는 형태로 변환된 후 백엔드에 위치한 데이터베이스 시스템으로 전송될 수 있다. 도 8에 도시된 바와 같이, 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치는 데이터베이스로부터 생성된 검색 쿼리에 대한 응답 결과를 클라이언트로 제공할 수 있다. 일 실시예에서, 검색 쿼리에 대한 응 답 결과는 데이터베이스에 비종속적인 형태로 제공될 수 있다. 예를 들어, 검색 쿼리에 대한 응답 결과는 JSON, XML 및/또는 YAML과 같이 구조화된 데이터 양식을 이용하여 데이터베이스 유형에 비종속적으로 제공될 수 있다. 예시적으로, 검색 쿼리에 대한 응답 결과는 검색 결과로써 검색된 엔티티의 수 및 엔티티의 목록을 포함할 수 있다. 도 1 내지 도 8을 통하여 상술한 모듈들에 의한 동작은 소프트웨어, 해당 기능을 수행하기 위한 ASIC과 같은 전 용 하드웨어 및/또는 프로그램 가능한 하드웨어로 구현될 수 있다. 소프트웨어로 상술한 모듈들이 구성되는 경 우, 이는 인터페이스 추상화 장치 내의 비-휘발성 및/또는 휘발성 저장 장치 내에 기록되었다가, 인터페이 스 추상화 장치 내에 포함된 하나 이상의 프로세서에 의하여 실행될 수 있다. 따라서, 도 1 내지 도 8에서 어떤 모듈에 의한 동작은 별도의 설명이 없더라도 인터페이스 추상화 장치 내에 포함된 하나 이상의 프로 세서에 의하여 실행되는 것으로 이해되어야 할 것이다. 또한, 본 개시에 따른 인터페이스 추상화 장치는 단일 물리적 컴퓨팅 장치로 구성될 수도 있지만, 복수의 물리적 컴퓨팅 장치를 이용하여 구성될 수도 있다. 이러한 경우, 인터페이스 추상화 장치를 구성하는 하나 이상의 모듈들은 분산 환경에서 실행될 수 있다. 그러나 분산 환경의 경우에도, 본 발명의 기술적 사상을 구현 하기 위한 인터페이스 추상화 장치의 동작은 단일 물리적 컴퓨팅 장치에서와 동일하게 이해되어야 할 것이다.도 9는 개시의 데이터베이스 추상화 인터페이스 제공 방법을 실행하기 위한 컴퓨팅 장치를 나타낸 블록도이다. 컴퓨팅 장치는 메모리, 프로세서, 통신부 및 입출력 인터페이스를 포함할 수 있으며, 도 9에 도시된 바와 같이, 컴퓨팅 장치는 통신부를 이용하여 네트워크를 통해 정보 및/또는 데이터를 통신할 수 있도록 구성될 수 있다. 메모리는 비-일시적인 임의의 컴퓨터 판독 가능한 기록매체를 포함할 수 있다. 일 실시예에 따르면, 메모 리는 RAM(random access memory), ROM(read only memory), 디스크 드라이브, SSD(solid state drive), 플래시 메모리(flash memory) 등과 같은 비소멸성 대용량 저장 장치(permanent mass storage device)를 포함할 수 있다. 다른 예로서, ROM, SSD, 플래시 메모리, 디스크 드라이브 등과 같은 비소멸성 대용량 저장 장치는 메 모리와는 구분되는 별도의 영구 저장 장치로서 컴퓨팅 장치에 포함될 수 있다. 또한, 메모리에는 운 영체제와 적어도 하나의 프로그램 코드가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 로딩될 수 있 다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 이러한 컴퓨팅 장치에 직접 연결가능한 기록 매체 를 포함할 수 있는데, 예를 들어, 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 예로서, 소프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신부를 통해 메모리에 로딩될 수도 있다. 예를 들어, 적어도 하나의 프로 그램은 개발자들 또는 애플리케이션의 설치 파일을 배포하는 파일 배포 시스템이 통신부를 통해 제공하는 파일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 메모리에 로딩될 수 있다. 여기서 프로그램은, 프로그램 명령, 데이터 파일 및 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 프로그램은 기계어 코드나 고급 언어 코드를 이용하여 설계 및 제작된 것일 수 있다. 프로그램은 상술한 악성 어플리케이션 탐지 시스템을 구현하기 위하여 특별히 설계된 것일 수도 있고, 컴퓨터 소프트웨어 분야에서 통상 의 기술자에게 기 공지되어 사용 가능한 각종 함수나 정의를 이용하여 구현된 것일 수도 있다. 전술한 악성 어 플리케이션 탐지 시스템을 구현하기 위한 프로그램은, 프로세서에 의해 판독 가능한 기록매체에 기록될 수 있다. 메모리는 전술한 동작 및 후술하는 동작을 수행하는 프로그램을 저장할 수 있으며, 프로세서는 메모리에 저장된 프로그램을 실행시킬 수 있다. 프로세서와 메모리가 복수인 경우에, 이들이 하나의 칩에 집적되는 것도 가능하 고, 물리적으로 분리된 위치에 마련되는 것도 가능하다. 메모리(는 데이터를 일시적으로 기억하기 위한 S램 (Static Random Access Memory, S-RAM), D랩(Dynamic Random Access Memory) 등의 휘발성 메모리를 포함할 수 있다. 또한, 메모리는 제어 프로그램 및 제어 데이터를 장기간 저장하기 위한 롬(Read Only Memory), 이피롬 (Erasable Programmable Read Only Memory: EPROM), 이이피롬(Electrically Erasable Programmable Read Only Memory: EEPROM) 등의 비휘발성 메모리를 포함할 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신부에 의해 다른 사용자 단말(미도시) 또는 다른 외부 시스 템으로 제공될 수 있다. 프로세서는 각종 논리 회로와 연산 회로를 포함할 수 있으며, 메모리로부터 제공된 프로그램에 따라 데이터를 처리하고, 처리 결과에 따라 제어 신호를 생성할 수 있다. 이때, 메모리와 프로세서는 각각 별개의 칩으로 구현 될 수 있다. 또는, 메모리와 프로세서는 단일 칩으로 구현될 수도 있다. 프로세서는 하나 이상의 프로세서를 포함할 수 있다. 이 경우, 하나 이상의 프로세서는 동종 또는 이종 프 로세서일 수 있다. 예를 들어, 프로세서에는 중앙 처리 장치(CPU), 그래픽 처리 장치(GPU), 텐서 처리 장 치(TPU) 및/또는 신경 처리 장치(NPU) 등을 포함한 이종 프로세서들이 존재할 수 있다. 설명의 편의를 위하여, 하나 이상의 동종 또는 이종 프로세서들이 본 명세서 내에서 프로세서'로 표현될 수 있다. 통신부는 네트워크를 통해 사용자 단말(미도시)과 컴퓨팅 장치가 서로 통신하기 위한 구성 또는 기능 을 제공할 수 있으며, 컴퓨팅 장치가 외부 시스템(일례로 별도의 클라우드 시스템 등)과 통신하기 위한 구 성 또는 기능을 제공할 수 있다. 일례로, 컴퓨팅 장치의 프로세서의 제어에 따라 제공되는 제어 신호, 명령, 데이터 등이 통신부와 네트워크를 거쳐 사용자 단말 및/또는 외부 시스템의 통신부를 통해 사용자 단말 및/또는 외부 시스템으로 전송될 수 있다. 유선 통신부는, 지역 통신(Local Area Network; LAN) 모듈, 광역 통신(Wide Area Network; WAN) 모듈 또는 부 가가치 통신(Value Added Network; VAN) 모듈 등 다양한 유선 통신부뿐만 아니라, USB(Universal Serial Bus), HDMI(High Definition Multimedia Interface), DVI(Digital Visual Interface), RS-232(recommended standard232), 전력선 통신, 또는 POTS(plain old telephone service) 등 다양한 케이블 통신부를 포함할 수 있다. 무선 통신부는 와이파이(Wifi) 모듈, 와이브로(Wireless broadband) 모듈 외에도, GSM(global System for Mobile Communication), CDMA(Code Division Multiple Access), WCDMA(Wideband Code Division Multiple Access), UMTS(universal mobile telecommunications system), TDMA(Time Division Multiple Access), LTE(Long Term Evolution), 4G, 5G, 6G 등 다양한 무선 통신 방식을 지원하는 무선 통신부를 포함할 수 있다. 무선 통신부는 와이파이 신호를 송신하는 안테나 및 송신기(Transmitter)를 포함하는 무선 통신 인터페이스를 포함할 수 있다. 또한, 무선 통신부는 제어부의 제어에 따라 무선 통신 인터페이스를 통해 제어부로부터 출력된 디지털 제어 신호를 아날로그 형태의 무선 신호로 변조하는 와이파이 신호 변환 모듈을 더 포함할 수 있다. 무선 통신부는 와이파이 신호를 수신하는 안테나 및 수신기(Receiver)를 포함하는 무선 통신 인터페이스를 포함 할 수 있다. 또한, 무선 통신부는 무선 통신 인터페이스를 통하여 수신한 아날로그 형태의 무선 신호를 디지털 제어 신호로 복조하기 위한 와이파이 신호 변환 모듈을 더 포함할 수 있다. 근거리 통신부는 근거리 통신(Short range communication)을 위한 것으로서, 블루투스(Bluetooth쪠), RFID(Radio Frequency Identification), 적외선 통신(Infrared Data Association; IrDA), UWB(Ultra Wideband), ZigBee, NFC(Near Field Communication), Wi-Fi(Wireless-Fidelity), Wi-Fi Direct, Wireless USB(Wireless Universal Serial Bus) 기술 중 적어도 하나를 이용하여, 근거리 통신을 지원할 수 있다. 또한, 컴퓨팅 장치의 입출력 인터페이스는 컴퓨팅 장치와 연결되거나 컴퓨팅 장치가 포함 할 수 있는 입력 또는 출력을 위한 장치(미도시)와의 인터페이스를 위한 수단일 수 있다. 입력부는 오디오 정보(또는 신호), 텍스트 등을 포함하는 정보와 데이터를, 네트워크 또는 사용자로부터 입력 받기 위한 것으로서, 적어도 하나의 마이크로폰 및 사용자 입력부 중 적어도 하나를 포함할 수 있다. 입력부에 서 수집한 데이터는 분석되어 사용자의 제어명령으로 처리될 수 있다. 사용자 입력부는 사용자로부터 정보를 입력받기 위한 것으로서, 사용자 입력부를 통해 정보가 입력되면, 제어부 는 입력된 정보에 대응되도록 본 장치의 동작을 제어할 수 있다. 이러한, 사용자 입력부는 하드웨어식 물리 키 (예를 들어, 본 장치의 전면, 후면 및 측면 중 적어도 하나에 위치하는 버튼, 돔 스위치 (dome switch), 조그 휠, 조그 스위치 등) 및 소프트웨어식 터치 키를 포함할 수 있다. 일 예로서, 터치 키는, 소프트웨어적인 처리 를 통해 터치스크린 타입의 디스플레이부 상에 표시되는 가상 키(virtual key), 소프트 키(soft key) 또는 비주 얼 키(visual key)로 이루어지거나, 상기 터치스크린 이외의 부분에 배치되는 터치 키(touch key)로 이루어질 수 있다. 한편, 상기 가상키 또는 비주얼 키는, 다양한 형태를 가지면서 터치스크린 상에 표시되는 것이 가능하 며, 예를 들어, 그래픽(graphic), 텍스트(text), 아이콘(icon), 비디오(video) 또는 이들의 조합으로 이루어질 수 있다. 도 9에서는 입출력 인터페이스가 프로세서와 별도로 구성된 요소로서 도시되었으나, 이에 한정되지 않으며, 입출력 인터페이스가 프로세서에 포함되도록 구성될 수 있다. 컴퓨팅 장치는 도 9의 구 성요소들보다 더 많은 구성요소들을 포함할 수 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시 할 필요성은 없다. 컴퓨팅 장치의 프로세서는 복수의 사용자 단말 및/또는 복수의 외부 시스템으로부터 수신된 정보 및 /또는 데이터를 관리, 처리 및/또는 저장하도록 구성될 수 있다. 상술된 방법 및/또는 다양한 실시예들은, 디지털 전자 회로, 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이 들의 조합으로 실현될 수 있다. 본 개시의 다양한 실시예들은 데이터 처리 장치, 예를 들어, 프로그래밍 가능한 하나 이상의 프로세서 및/또는 하나 이상의 컴퓨팅 장치에 의해 실행되거나, 컴퓨터 판독 가능한 기록 매체 및/ 또는 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램으로 구현될 수 있다. 상술된 컴퓨터 프로그램은 컴파일된 언어 또는 해석된 언어를 포함하여 임의의 형태의 프로그래밍 언어로 작성될 수 있으며, 독립 실행형 프로그램, 모듈, 서브 루틴 등의 임의의 형태로 배포될 수 있다. 컴퓨터 프로그램은 하나의 컴퓨팅 장치, 동일한 네트워크를 통해 연결된 복수의 컴퓨팅 장치 및/또는 복수의 상이한 네트워크를 통해 연결되도록 분산된 복 수의 컴퓨팅 장치를 통해 배포될 수 있다. 상술된 방법 및/또는 다양한 실시예들은, 원시 샘플을 기초로 동작하거나 출력 데이터를 생성함으로써, 임의의 기능, 함수 등을 처리, 저장 및/또는 관리하는 하나 이상의 컴퓨터 프로그램을 실행하도록 구성된 하나 이상의 프로세서에 의해 수행될 수 있다. 예를 들어, 본 개시의 방법 및/또는 다양한 실시예는 FPGA(Field Programmable Gate Array) 또는 ASIC(Application Specific Integrated Circuit)과 같은 특수 목적 논리 회로 에 의해 수행될 수 있으며, 본 개시의 방법 및/또는 실시예들을 수행하기 위한 장치 및/또는 시스템은 FPGA 또 는 ASIC와 같은 특수 목적 논리 회로로서 구현될 수 있다. 컴퓨터 프로그램을 실행하는 하나 이상의 프로세서는, 범용 목적 또는 특수 목적의 마이크로 프로세서 및/또는 임의의 종류의 디지털 컴퓨팅 장치의 하나 이상의 프로세서를 포함할 수 있다. 프로세서는 읽기 전용 메모리, 랜덤 액세스 메모리의 각각으로부터 명령 및/또는 데이터를 수신하거나, 읽기 전용 메모리와 랜덤 액세스 메모 리로부터 명령 및/또는 데이터를 수신할 수 있다. 본 발명에서, 방법 및/또는 실시예들을 수행하는 컴퓨팅 장치 의 구성 요소들은 명령어들을 실행하기 위한 하나 이상의 프로세서, 명령어들 및/또는 데이터를 저장하기 위한 하나 이상의 메모리 디바이스를 포함할 수 있다. 일 실시예에 따르면, 컴퓨팅 장치는 데이터를 저장하기 위한 하나 이상의 대용량 저장 장치와 데이터를 주고받 을 수 있다. 예를 들어, 컴퓨팅 장치는 자기 디스크(magnetic disc) 또는 광 디스크(optical disc)로부터 데이 터를 수신하거나/수신하고, 자기 디스크 또는 광 디스크로 데이터를 전송할 수 있다. 컴퓨터 프로그램과 연관된 명령어들 및/또는 데이터를 저장하기에 적합한 컴퓨터 판독 가능한 저장 매체는, EPROM(Erasable Programmable Read-Only Memory), EEPROM(Electrically Erasable PROM), 플래시 메모리 장치 등의 반도체 메모리 장치를 포 함하는 임의의 형태의 비 휘발성 메모리를 포함할 수 있으나, 이에 한정되지 않는다. 예를 들어, 컴퓨터 판독 가능한 저장 매체는 내부 하드 디스크 또는 이동식 디스크와 같은 자기 디스크, 광 자기 디스크, CD-ROM 및 DVD-ROM 디스크를 포함할 수 있다. 사용자와의 상호 작용을 제공하기 위해, 컴퓨팅 장치는 정보를 사용자에게 제공하거나 디스플레이하기 위한 디 스플레이 장치(예를 들어, CRT (Cathode Ray Tube), LCD(Liquid Crystal Display) 등) 및 사용자가 컴퓨팅 장 치 상에 입력 및/또는 명령 등을 제공할 수 있는 포인팅 장치(예를 들어, 키보드, 마우스, 트랙볼 등)를 포함할 수 있으나, 이에 한정되지 않는다. 즉, 컴퓨팅 장치는 사용자와의 상호 작용을 제공하기 위한 임의의 다른 종류 의 장치들을 더 포함할 수 있다. 예를 들어, 컴퓨팅 장치는 사용자와의 상호 작용을 위해, 시각적 피드백, 청각 피드백 및/또는 촉각 피드백 등을 포함하는 임의의 형태의 감각 피드백을 사용자에게 제공할 수 있다. 이에 대 해, 사용자는 시각, 음성, 동작 등의 다양한 제스처를 통해 컴퓨팅 장치로 입력을 제공할 수 있다. 본 발명에서, 다양한 실시예들은 백엔드 구성 요소(예: 데이터 서버), 미들웨어 구성 요소(예: 애플리케이션 서 버) 및/또는 프론트 엔드 구성 요소를 포함하는 컴퓨팅 시스템에서 구현될 수 있다. 이 경우, 구성 요소들은 통 신 네트워크와 같은 디지털 데이터 통신의 임의의 형태 또는 매체에 의해 상호 연결될 수 있다. 예를 들어, 통 신 네트워크는 LAN(Local Area Network), WAN(Wide Area Network) 등을 포함할 수 있다. 본 명세서에서 기술된 예시적인 실시예들에 기반한 컴퓨팅 장치는, 사용자 디바이스, 사용자 인터페이스(UI) 디 바이스, 사용자 단말 또는 클라이언트 디바이스를 포함하여 사용자와 상호 작용하도록 구성된 하드웨어 및/또는 소프트웨어를 사용하여 구현될 수 있다. 예를 들어, 컴퓨팅 장치는 랩톱(laptop) 컴퓨터와 같은 휴대용 컴퓨팅 장치를 포함할 수 있다. 추가적으로 또는 대안적으로, 컴퓨팅 장치는, PDA(Personal Digital Assistants), 태 블릿 PC, 게임 콘솔(game console), 웨어러블 디바이스(wearable device), IoT(internet of things) 디바이스, VR(virtual reality) 디바이스, AR(augmented reality) 디바이스 등을 포함할 수 있으나, 이에 한정되지 않는 다. 컴퓨팅 장치는 사용자와 상호 작용하도록 구성된 다른 유형의 장치를 더 포함할 수 있다. 또한, 컴퓨팅 장 치는 이동 통신 네트워크 등의 네트워크를 통한 무선 통신에 적합한 휴대용 통신 디바이스(예를 들어, 이동 전 화, 스마트 전화, 무선 셀룰러 전화 등) 등을 포함할 수 있다. 컴퓨팅 장치는, 무선 주파수(RF; Radio Frequency), 마이크로파 주파수(MWF; Microwave Frequency) 및/또는 적외선 주파수(IRF; Infrared Ray Frequency)와 같은 무선 통신 기술들 및/또는 프로토콜들을 사용하여 네트워크 서버와 무선으로 통신하도록 구 성될 수 있다. 본 개시에 따른 실시 예에서, 인공지능과 관련된 기능은 프로세서 및 메모리를 통해 구현될 수 있다. 이 때, 프 로세서는 CPU(Center Processing Unit), AP(Application Processor), DSP(Digital Signal Processor) 등과 같 은 범용 프로세서, GPU(Graphic Processing Unit), VPU(Vision Processing Unit)와 같은 그래픽 전용 프로세서및 NPU(Neural network Processing Unit)와 같은 인공지능 전용 프로세서 중 어느 하나일 수 있다. 프로세서는 메모리에 저장된 기 정의된 동작 규칙 또는 인공지능 모델에 따라 원시 샘플을 처리할 수 있다. 또는, 프로세서 가 인공지능 전용 프로세서인 경우, 인공지능 전용 프로세서는 특정 인공지능 모델의 처리에 특화된 하드웨어 구조로 설계될 수 있다. 본 개시에 따른 일부 실시 예에서, 인공지능과 관련된 기능은 복수의 프로세서들을 통 해 구현될 수 있다. 상술된 내용은 본 개시를 실시하기 위한 구체적인 실시 예들이다. 본 개시는 상술된 실시 예들뿐만 아니라, 단 순하게 설계 변경되거나 용이하게 변경할 수 있는 실시 예들 또한 포함할 것이다. 또한, 본 개시는 상술된 실시 예들을 이용하여 용이하게 변형하여 실시할 수 있는 기술들도 포함할 것이다. 따라서, 본 개시의 범위는 상술된 실시 예들에 국한되어 정해져서는 안 되며 후술하는 특허청구범위뿐만 아니라 본 개시의 특허청구범위와 균등한 것들에 의해 정해져야 할 것이다."}
{"patent_id": "10-2024-0122184", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 몇몇 실시예에 따른 데이터베이스 인터페이스 추상화 장치의 동작을 나타낸 개념도이다. 도 2는 본 개시의 몇몇 실시예에 따른 데이터베이스 인터페이스 추상화 장치의 구성을 나타낸 블록도이다. 도 3은 본 개시의 몇몇 실시예에 따른 클라이언트가 데이터베이스 추상화 인터페이스를 이용하여 데이터베이스 를 관리하는 방법을 나타낸 개념도이다. 도 4는 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치의 구성 중 단순 스토리지의 구성을 나타낸 블록 도이다. 도 5는 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치가 개별 데이터베이스에 대한 접근 및 관리를 수 행하는 과정을 나타낸 개념도이다. 도 6은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터에 대한 업데이트를 수행하는 과정을 예시적으로 나타낸 개념도이다. 도 7은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터베이스에 대한 검색을 수행하 는 과정을 예시적으로 나타낸 개념도이다. 도 8은 본 개시의 몇몇 실시예에 따른 인터페이스 추상화 장치를 이용하여 데이터베이스에 대한 예시적 검색을 수행하는 과정을 나타낸 개념도이다. 도 9는 본 개시의 데이터베이스 추상화 인터페이스 제공 방법을 실행하기 위한 컴퓨팅 장치를 나타낸 블록도이 다."}
