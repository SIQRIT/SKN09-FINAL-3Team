{"patent_id": "10-2022-0114182", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0035117", "출원번호": "10-2022-0114182", "발명의 명칭": "자연어 문장 처리 방법 및 이를 위한 장치", "출원인": "주식회사 케이티", "발명자": "김태수"}}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "장치에서 자연어 문장을 처리하는 방법으로서,상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되,상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 패드 토큰을 추가하는 것은:상기 자연어 문장의 각 단어에 대한 토큰 개수가 상기 단어의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 패드 토큰을 추가하는 것은:상기 자연어 문장의 각 어절에 대한 토큰 개수가 상기 어절의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서,상기 토큰화는 서브워드 토큰화(subword tokenization)를 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "에 있어서,상기 자연어 문장에 오류가 있는지 판별하는 것은 상기 하나 이상의 제1 토큰 중에서 오류로 판별된 토큰을 오류를 지시하는 값으로 태깅(tagging)하는 것을 포함하고,상기 대응하는 위치의 토큰으로 대체하는 것은 상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 어절과 관련된 토큰 각각을 상기 제1 교정 문장에서 대응하는 위치의 토큰으로 대체하는 것을 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 5에 있어서,상기 자연어 문장에 오류가 있는지 판별하는 것은 상기 하나 이상의 제1 토큰 중에서 오류로 판별된 토큰을 오류를 지시하는 값으로 태깅(tagging)하는 것을 포함하고,상기 대응하는 위치의 토큰으로 대체하는 것은 상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 단어와 관련된 토큰 각각을 상기 제1 교정 문장에서 대응하는 위치의 토큰으로 대체하는 것을 포함하는, 방법.공개특허 10-2024-0035117-3-청구항 7"}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 5에 있어서,상기 오류가 있는 부분과 관련된 토큰은 패드 토큰을 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 5에 있어서,상기 제1 기계 학습 모델을 이용하여 상기 제1 대체 문장의 토큰에 기초하여 상기 제1 대체 문장에 오류가 있는지 판별하는 것;상기 제1 대체 문장에 오류가 있는 것으로 판별된 경우, 상기 제2 기계 학습 모델을 이용하여 상기 제1 대체 문장의 토큰에 기초하여 제2 교정 문장을 획득하는 것; 및상기 제1 교정 문장과 상기 제2 교정 문장이 동일한 경우, 상기 제1 대체 문장에서 오류가 있는 부분과 관련된토큰을 상기 제2 교정 문장에서 대응하는 위치의 2번째로 높은 확률 값을 가지는 토큰으로 대체하여 제2 대체문장을 획득하는 것을 더 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서,상기 제1 기계 학습 모델을 이용하여 상기 제2 대체 문장의 토큰에 기초하여 상기 제2 대체 문장에 오류가 있는지 판별하는 것; 및상기 제2 대체 문장에 오류가 있는 것으로 판별되고 최대 반복 횟수에 도달한 경우, 상기 제2 대체 문장에서 오류가 있는 부분과 관련된 토큰을 상기 제2 교정 문장에서 대응하는 위치의 가장 높은 확률 값을 가지는 토큰으로 대체하여 제3 대체 문장을 획득하는 것을 더 포함하는, 방법."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "프로세서; 및 메모리를 포함하는 장치로서,상기 메모리는 상기 프로세서에 의해 수행될 때 상기 장치가 자연어 문장을 처리하기 위한 특정 동작을 구현하도록 구성된 명령어를 포함하고, 상기 특정 동작은:상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되,상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함하는, 장치."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서,상기 패드 토큰을 추가하는 것은:상기 자연어 문장의 각 어절에 대한 토큰 개수가 상기 어절의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함하는, 장치."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공개특허 10-2024-0035117-4-청구항 11에 있어서,상기 특정 동작은:제1 기계 학습 모델을 이용하여 상기 토큰화에 의해 획득한 하나 이상의 제1 토큰 중에서 오류로 판별된 토큰을오류를 지시하는 값으로 태깅(tagging)하는 것;제2 기계 학습 모델을 이용하여 상기 하나 이상의 제1 토큰에 기초하여 하나 이상의 제2 토큰을 포함하는 교정문장을 획득하는 것; 및상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 어절과 관련된 토큰 각각을 상기 교정 문장에서 대응하는위치의 토큰으로 대체하는 것을 더 포함하되,상기 제2 기계 학습 모델은 입력 크기와 출력 크기가 같은 인공 신경망을 기반으로 하는, 장치."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "프로세서에 의해 실행될 때 상기 프로세서를 포함하는 장치로 하여금 자연어 문장을 처리하기 위한 특정 동작을구현하도록 구성된 명령어들을 저장하고 있는 컴퓨터 판독가능한 저장 매체로서, 상기 특정 동작은:상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되,상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함하는, 컴퓨터 판독가능한 저장 매체."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 14에 있어서,상기 패드 토큰을 추가하는 것은:상기 자연어 문장의 각 어절에 대한 토큰 개수가 상기 어절의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함하는, 컴퓨터 판독가능한 저장 매체."}
{"patent_id": "10-2022-0114182", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 14에 있어서,상기 특정 동작은:제1 기계 학습 모델을 이용하여 상기 토큰화에 의해 획득한 하나 이상의 제1 토큰 중에서 오류로 판별된 토큰을오류를 지시하는 값으로 태깅(tagging)하는 것;제2 기계 학습 모델을 이용하여 상기 하나 이상의 제1 토큰에 기초하여 하나 이상의 제2 토큰을 포함하는 교정문장을 획득하는 것; 및상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 어절과 관련된 토큰 각각을 상기 교정 문장에서 대응하는위치의 토큰으로 대체하는 것을 더 포함하되,상기 제2 기계 학습 모델은 입력 크기와 출력 크기가 같은 인공 신경망을 기반으로 하는, 컴퓨터 판독가능한 저장 매체."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 자연어 문장을 처리하는 방법 및 이를 위한 장치에 관한 것으로서, 보다 구체적으로 상기 자연어 문장 에 대해 토큰화(tokenization)를 수행하는 것을 포함하되, 상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함하는 방법 및 이를 위 한 장치에 관한 것이다. 본 발명에 따르면, 자연어 문장의 오류 교정 시 발생할 수 있는 기술적 문제를 방지하여 자연어 문장을 효과적으로 처리할 수 있다."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 자연어 처리에 관한 것으로서, 보다 구체적으로는 자연어 처리에서 토큰화 및 자동 오류 교정에 관한 것이다."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "다양한 응용 분야에서 자연어 처리 기술이 널리 이용되고 있다. 일 예로, 사용자 발화를 인식하여 텍스트 데이 터로 변환하는 음성 인식 기술은 스마트폰, 인공지능 스피커, 자동차 등에 적용되어 사용자의 편의성을 높여 주고 있다. 또한, 음성 인식 오류를 교정하는 기술도 활발히 연구되고 있으며 다양한 기법들이 제안되고 있다. 음성 인식은 사용자가 발화한 내용을 텍스트로 옮겨 적는 것이므로 음성 인식에 의해 변환된 텍스트 데이터의 의미를 재해석 해서는 안되며, 텍스트 데이터에서 단어의 삭제/추가 혹은 문법적 오류 등을 무시하고 올바르게 텍스트로 변환 되지 않은 부분(예, 음절, 단어, 어절 등)에 한해서만 문장 교정을 수행해야 한다. 음성 인식 오류 교정을 위해 사전을 활용한 문장 교정, 심층 신경망(deep neural network) 기반 문장 생성 모델 을 이용한 문장 교정, 심층 신경망 기반 문법 교정 모델을 이용한 문장 교정 등과 같은 기법들이 제안되었지만, 많은 비용 및 컴퓨팅 자원이 요구됨에도 불구하고, 음성 텍스트 변환된 텍스트 데이터에서 오류가 있는 부분을 명확히 특정하고 대체하기 어려울 뿐만 아니라, 사용자 발화 의도와 다른 의미를 가지는 새로운 문장을 생성하 거나 또는 새로운 단어가 추가되거나 또는 기존 단어가 삭제되는 기술적 문제가 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 공개특허공보 제10-2020-0044208호"}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 자연어 문장의 오류를 효과적으로 교정할 수 있는 방법 및 이를 위한 장치를 제공하는 데 있 다. 구체적으로, 본 발명의 목적은 자연어 문장의 오류가 존재하는지 여부를 효과적으로 평가하고 오류가 있는 부분 을 효과적으로 특정할 수 있는 방법 및 이를 위한 장치를 제공하는 데 있다. 또한, 구체적으로, 본 발명의 목적은 자연어 문장의 오류 교정 시 사용자의 발화 의도 또는 의미가 문장 교정에 의해 변질되는 문제를 효과적으로 방지할 수 있는 방법 및 이를 위한 장치를 제공하는 데 있다. 또한, 구체적으로, 본 발명의 목적은 자연어 문장의 오류 교정 시 새로운 음절 또는 단어가 추가되거나 기존 음 절 또는 단어가 삭제되는 문제를 효과적으로 방지할 수 있는 방법 및 이를 위한 장치를 제공하는 데 있다. 본 발명의 다른 목적은 자연어 문장의 오류를 교정하는 데 효과적인 토큰화 방법 및 이를 위한 장치를 제공하는 데 있다. 본 발명에서 해결하고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급하지 않은"}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "또 다른 기술적 과제는 본 명세서에 기재된 내용으로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 제1 양상으로, 장치에서 자연어 문장을 처리하는 방법이 제공되며, 상기 방법은: 상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되, 상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개 수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함할 수 있다. 본 발명의 제2 양상으로, 프로세서; 및 메모리를 포함하는 장치가 제공되며, 상기 메모리는 상기 프로세서에 의 해 수행될 때 상기 장치가 자연어 문장을 처리하기 위한 특정 동작을 구현하도록 구성된 명령어를 포함하고, 상 기 특정 동작은: 상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되, 상기 토큰화는 상 기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가 하는 것을 포함할 수 있다. 본 발명의 제3 양상으로, 프로세서에 의해 실행될 때 상기 프로세서를 포함하는 장치로 하여금 자연어 문장을 처리하기 위한 특정 동작을 구현하도록 구성된 명령어들을 저장하고 있는 컴퓨터 판독가능한 저장 매체가 제공 되며, 상기 특정 동작은: 상기 자연어 문장에 대해 토큰화(tokenization)를 수행하는 것을 포함하되, 상기 토큰화는 상기 자연어 문장에 대한 토큰(token) 개수가 상기 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰 을 추가하는 것을 포함할 수 있다. 바람직하게는, 상기 패드 토큰을 추가하는 것은: 상기 자연어 문장의 각 단어에 대한 토큰 개수가 상기 단어의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함할 수 있다. 바람직하게는, 상기 패드 토큰을 추가하는 것은: 상기 자연어 문장의 각 어절에 대한 토큰 개수가 상기 어절의 음절 개수와 동일하도록 상기 패드 토큰을 추가하는 것을 포함할 수 있다. 바람직하게는, 상기 토큰화는 서브워드 토큰화(subword tokenization)를 포함할 수 있다. 바람직하게는, 상기 방법 또는 상기 특정 동작은: 제1 기계 학습 모델을 이용하여 상기 토큰화에 의해 획득한 하나 이상의 제1 토큰에 기초하여 상기 자연어 문장에 오류가 있는지 판별하는 것; 상기 자연어 문장에 오류가 있는 것으로 판별된 경우, 제2 기계 학습 모델을 이용하여 상기 하나 이상의 제1 토큰에 기초하여 하나 이상의 제2 토큰을 포함하는 제1 교정 문장을 획득하는 것; 및 상기 자연어 문장에서 오류가 있는 부분과 관련된 토큰 을 상기 제1 교정 문장에서 대응하는 위치의 토큰으로 대체하여 제1 대체 문장을 획득하는 것을 더 포함하되, 상기 제2 기계 학습 모델은 입력 크기와 출력 크기가 같은 인공 신경망을 기반으로 할 수 있다. 바람직하게는, 상기 자연어 문장에 오류가 있는지 판별하는 것은 상기 하나 이상의 제1 토큰 중에서 오류로 판 별된 토큰을 오류를 지시하는 값으로 태깅(tagging)하는 것을 포함하고, 상기 대응하는 위치의 토큰으로 대체하 는 것은 상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 단어와 관련된 토큰 각각을 상기 제1 교정 문장에 서 대응하는 위치의 토큰으로 대체하는 것을 포함할 수 있다. 바람직하게는, 상기 자연어 문장에 오류가 있는지 판별하는 것은 상기 하나 이상의 제1 토큰 중에서 오류로 판 별된 토큰을 오류를 지시하는 값으로 태깅(tagging)하는 것을 포함하고, 상기 대응하는 위치의 토큰으로 대체하 는 것은 상기 자연어 문장에서 상기 태깅된 토큰을 포함하는 어절과 관련된 토큰 각각을 상기 제1 교정 문장에 서 대응하는 위치의 토큰으로 대체하는 것을 포함할 수 있다. 바람직하게는, 상기 오류가 있는 부분과 관련된 토큰은 패드 토큰을 포함할 수 있다. 바람직하게는, 상기 방법 또는 상기 특정 동작은: 상기 제1 기계 학습 모델을 이용하여 상기 제1 대체 문장의 토큰에 기초하여 상기 제1 대체 문장에 오류가 있는지 판별하는 것; 상기 제1 대체 문장에 오류가 있는 것으로 판별된 경우, 상기 제2 기계 학습 모델을 이용하여 상기 제1 대체 문장의 토큰에 기초하여 제2 교정 문장을 획 득하는 것; 및 상기 제1 교정 문장과 상기 제2 교정 문장이 동일한 경우, 상기 제1 대체 문장에서 오류가 있는 부분과 관련된 토큰을 상기 제2 교정 문장에서 대응하는 위치의 2번째로 높은 확률 값을 가지는 토큰으로 대체 하여 제2 대체 문장을 획득하는 것을 더 포함할 수 있다. 바람직하게는, 상기 방법 또는 상기 특정 동작은: 상기 제1 기계 학습 모델을 이용하여 상기 제2 대체 문장의 토큰에 기초하여 상기 제2 대체 문장에 오류가 있는지 판별하는 것; 및 상기 제2 대체 문장에 오류가 있는 것으 로 판별되고 최대 반복 횟수에 도달한 경우, 상기 제2 대체 문장에서 오류가 있는 부분과 관련된 토큰을 상기 제2 교정 문장에서 대응하는 위치의 가장 높은 확률 값을 가지는 토큰으로 대체하여 제3 대체 문장을 획득하는 것을 더 포함할 수 있다. 바람직하게는, 상기 특정 동작은: 제1 기계 학습 모델을 이용하여 상기 토큰화에 의해 획득한 하나 이상의 제1 토큰 중에서 오류로 판별된 토큰을 오류를 지시하는 값으로 태깅(tagging)하는 것; 제2 기계 학습 모델을 이용 하여 상기 하나 이상의 제1 토큰에 기초하여 하나 이상의 제2 토큰을 포함하는 교정 문장을 획득하는 것; 및 상 기 자연어 문장에서 상기 태깅된 토큰을 포함하는 어절과 관련된 토큰 각각을 상기 교정 문장에서 대응하는 위 치의 토큰으로 대체하는 것을 더 포함하되, 상기 제2 기계 학습 모델은 입력 크기와 출력 크기가 같은 인공 신 경망을 기반으로 할 수 있다."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 자연어 문장의 오류를 효과적으로 교정할 수 있다. 구체적으로, 본 발명에 따르면, 자연어 문장의 오류가 존재하는지 여부를 효과적으로 평가하고 오류가 있는 부 분을 효과적으로 특정할 수 있다. 또한, 본 발명에 따르면, 자연어 문장의 오류 교정 시 사용자의 발화 의도 또는 의미가 문장 교정에 의해 변질 되는 문제를 효과적으로 방지할 수 있다. 또한, 본 발명에 따르면, 자연어 문장의 오류 교정 시 새로운 음절 또는 단어가 추가되거나 기존 음절 또는 단 어가 삭제되는 문제를 효과적으로 방지할 수 있다. 또한, 본 발명에 따르면, 토큰화를 통해 자연어 문장의 오류를 효과적으로 교정할 수 있다. 본 발명에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과는 본"}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "명세서에 기재된 내용으로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 다양한 변환을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 이하에서는 특정 실시예들을 첨부 된 도면을 기초로 상세히 설명하고자 한다. 이하의 실시예는 본 명세서에서 기술된 방법, 장치 및/또는 시스템에 대한 포괄적인 이해를 돕기 위해 제공된다. 그러나 이는 예시에 불과하며 본 발명은 이에 제한되지 않는다. 본 발명의 실시예들을 설명함에 있어서, 본 발명과 관련된 공지기술에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략하기로 한다. 그리고, 후술되는 용어들은 본 발명에서의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 상세한 설명에서 사용되 는 용어는 단지 본 발명의 실시예들을 기술하기 위한 것이며, 결코 제한적이어서는 안 된다. 명확하게 달리 사 용되지 않는 한, 단수 형태의 표현은 복수 형태의 의미를 포함한다. 본 설명에서, “포함” 또는 “구비”와 같 은 표현은 어떤 특성들, 숫자들, 단계들, 동작들, 요소들, 이들의 일부 또는 조합을 가리키기 위한 것이며, 기 술된 것 이외에 하나 또는 그 이상의 다른 특성, 숫자, 단계, 동작, 요소, 이들의 일부 또는 조합의 존재 또는 가능성을 배제하도록 해석되어서는 안 된다. 또한, 제1, 제2 등의 용어는 다양한 구성 요소들을 설명하는 데 사용될 수 있지만, 상기 구성 요소들은 상기 용 어들에 의해 한정되는 것은 아니며, 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으 로만 사용된다. 본 발명은 자연어 처리(Natural Language Processing, NLP)에 관한 것으로서, 보다 구체적으로는 자연어 처리를 위한 토큰화(tokenization) 및 자동 오류 교정(automatic error correction)에 관한 것이다. 자연어 처리는 기 계 또는 컴퓨터가 인간의 언어에 기초하여 인간과 상호 작용할 수 있도록 기계 또는 컴퓨터가 인간의 언어를 분 석하고 정보를 추출하여 처리하는 기술을 지칭한다. 자연어는 인간이 일상 생활에서 사용하는 언어를 지칭하며, 기계 또는 컴퓨터가 이해할 수 있도록 설계된 프로그래밍 언어와 대비될 수 있다. 자연어 문장(natural language sentence)은 자연어를 구성하는 적어도 하나의 문장을 지칭하며, 예를 들어 자연어 문장은 텍스트에 기반하여 표현되는 문장일 수 있다. 자연어 처리는 인공 지능(Artificial Intelligence, AI) 기술에 기반하여"}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "구현될 수 있으며, 기계 번역(machine translation), 대화 시스템(dialogue system), 챗봇(chatbot), 감성 분석(sentiment analysis), 텍스트 요약(text summarization), 음성 인식(speech recognition), 질의 응답 (question answering) 등과 같은 다양한 응용 분야에 활용될 수 있다. 본 명세서에서는 본 발명의 이해를 돕기 위해 음성 인식에 기반하여 본 발명을 설명하지만, 본 발명이 음성 인 식으로만 제한 적용되는 것은 아니며 본 발명은 상기 설명한 자연어 처리 응용 분야 뿐만 아니라 향후 개발될 자연어 처리 응용 분야에도 적용 가능하다. 인공 지능(Artificial Intelligence, AI) 인공 지능은 수학적 모델에 기반하여 컴퓨터 장치에 인공적인 지능을 구현하는 것을 지칭하고, 기계 학습 (machine learning)은 인공 지능의 일 분야로서 명시적인 프로그래밍 없이도 학습을 통해 컴퓨터 장치가 특정 문제를 해결할 수 있도록 하는 것을 지칭한다. 인공 신경망(artificial neural network)은 기계 학습에서 사용되는 모델로서, 시냅스의 결합으로 네트워크를 형성한 인공 뉴런(neuron)들로 구성되는 모델을 지칭한다. 인공 신경망은 신경망으로 약칭될 수 있다. 인공 신 경망은 입력층(input layer), 출력층(output layer), 그리고 선택적으로 하나 이상의 은닉층(hidden layer)을 포함할 수 있다. 각 층은 하나 이상의 뉴런을 포함하고, 서로 다른 층(layer) 간의 뉴런과 뉴런은 시냅스를 통 해 연결될 수 있다. 입력층의 뉴런은 학습에 사용되는 특징 벡터(feature vector)를 입력 신호로 가질 수 있고, 출력층의 뉴런은 시냅스를 통해 입력되는 입력 신호들, 시냅스의 가중치, 편향에 대한 활성 함수의 함수 값을 출력할 수 있다. 은닉층의 뉴런은 입력층 또는 이전 은닉층의 뉴런 신호와 시냅스의 가중치에 기반하여 연산된 값을 입력 신호로 가질 수 있으며 다음 은닉층 또는 출력층으로 신호를 제공한다. 모델 파라미터(model parameter)는 학습을 통해 결정되는 파라미터를 지칭하며 시냅스의 가중치와 뉴런의 편향 등을 포함할 수 있다. 하이퍼 파라미터(hyper parameter)는 기계 학습 알고리즘에서 학습 전에 설정되어야 하는 파라미터를 의미하며, 학습률(learning rate), 반복 횟수, 미니 배치 크기, 초기화 함수 등이 포함된다. 인공 신경망의 학습 목적은 손실 함수(loss function)를 최소화하는 모델 파라미터를 결정하는 것으로 볼 수 있다. 손실 함수는 인공 신경망의 학습 과정에서 최적의 모델 파라미터를 결정하기 위한 지표로 이용될 수 있다. 기계 학습은 학습 방식에 따라 지도 학습(supervised learning), 비지도 학습(unsupervised learning), 강화 학습(reinforcement learning)으로 분류할 수 있다. 지도 학습(supervised learning)은 학습 데이터에 대한 레 이블(label)이 주어진 상태에서 인공 신경망을 학습시키는 방법을 의미하며, 레이블이란 학습 데이터가 인공 신 경망에 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결과 값)을 의미할 수 있다. 비지도 학습 (unsupervised learning)은 학습 데이터에 대한 레이블이 주어지지 않는 상태에서 인공 신경망을 학습시키는 방 법을 의미할 수 있다. 강화 학습(reinforcement learning)은 어떤 환경 안에서 정의된 에이전트(agent)가 각 상 태에서 누적 보상을 최대화하는 행동 혹은 행동 순서를 선택하도록 학습시키는 학습 방법을 의미할 수 있다. 인공 신경망 중에서 복수의 은닉층을 포함하는 심층 신경망(deep neural network)으로 구현되는 기계 학습을 심 층 학습(deep learning)으로 지칭할 수 있으며, 심층 학습은 기계 학습의 일 분야이다. 본 명세서에서 “학습” 또는 “기계 학습” 이라는 용어는 기계 학습 또는 심층 학습 뿐만 아니라 다른 인공 지능 알고리즘에 기반한 학습, 규칙 기반 학습(rule-based learning)을 포함할 수 있고, “AI” 또는 “학습 모 델” 또는 “기계 학습 모델”은 기계 학습 또는 심층 학습에 기반하여 학습된 인공 신경망 모델 뿐만 아니라 다른 인공 지능 알고리즘에 기반하여 학습된 인공 지능 모델, 규칙 기반 학습 모델을 포함할 수 있다. 토큰화(Tokenization) 및 패드 토큰(pad token) 자연어 처리의 경우 텍스트 데이터를 입력으로 사용하는 대신 텍스트 데이터를 기계 또는 컴퓨터가 인식하고 처 리할 수 있는 형태의 데이터로 변환하여 사용한다. 이를 위해, 텍스트 데이터를 일정한 말 단위로 나눈 다음 임 베딩(embedding)을 통해 기계 또는 컴퓨터가 인식하고 처리할 수 있는 벡터 값으로 변환하는 전처리 (preprocessing) 과정이 수행될 수 있는데, 토큰화는 텍스트를 일정한 말 단위로 나누는 작업을 지칭하고, 토큰 화에 의해 나누어진 말 단위를 토큰(token)이라고 지칭한다. 예를 들어, 말 단위가 서브워드(subword)인 서브워 드 토큰화, 말 단위가 형태소인 형태소 토큰화, 말 단위가 단어(word)인 단어 토큰화, 말 단위가 어절인 어절 토큰화(또는 띄어쓰기 토큰화), 말 단위가 문장(sentence)인 문장 토큰화가 있다. 토큰화에 관한 자세한 내용은 “https://wikidocs.net/21698”에 개시되어 있으며, 본 명세서는 상기 인터넷 사이트의 내용 전체를 참조로서포함한다. 본 명세서에서 토큰화는 토큰화기(tokenizer)와 혼용될 수 있다. 서브워드 토큰화의 일 예로, 바이트 쌍 인코딩(Byte Pair Encoding, BPE)이 사용될 수 있다. BPE는 데이터 압축 알고리즘으로 제안된 기법이지만 단어 토큰화와 문자 토큰화의 문제를 극복하기 위해 토큰화에 적용되고 있다. 구체적으로, BPE는 단어들을 문자(character) 또는 유니코드(unicode) 단위로 나누어 단어 사전(vocabulary)을 만들고 단어 사전에서 등장하는 빈도수에 따라 연속적으로 등장하는 문자 또는 유니코드를 병합하는 방식으로 서브워드 토큰을 생성하는 기법이다. BPE에 관한 자세한 내용은 “Philip Gage. 1994. A New Algorithm for Data Compression. C Users J., 12:23-38, February”와 “https://wikidocs.net/22592” 및 “ https://en.wikipedia.org/wiki/Byte_pair_encoding”에 개시되어 있으며, 본 명세서는 상기 논문과 인터넷 사 이트의 내용 전체를 참조로서 포함한다. 자연어 처리에서 다양한 길이의 문장을 행렬 형태로 기계 학습 모델에 입력하기 위해 문장 길이를 동일하게 맞 추어 줄 필요가 있는데, 각 문장에 대한 토큰화에 의해 생성된 토큰 길이 또는 개수를 동일하게 맞추어 주는 작 업을 패딩(padding)이라고 지칭하며, 패딩을 위해 추가되는 토큰을 패드 토큰(pad token)이라고 지칭한다. 예를 들어, 패드 토큰은 0의 값으로 설정될 수 있지만, 이에 제한되는 것은 아니며 다양한 값으로 설정될 수 있다. 오토인코더(Autoencoder) 오토인코더는 입력층과 출력층이 같은 구조로 되어 있어 입력과 크기가 같은 출력을 생성하도록 구성된 인공 신 경망을 지칭한다. 도 1은 오토인코더를 예시한다. 도 1은 오로지 예시일 뿐이며 도 1에서 입력층의 뉴런(x1, x2, x3) 개수와 출력층의 뉴런(x1’, x2’, x3’) 개수, 은닉층의 개수는 다양하게 수정 또는 변경될 수 있다. 도 1을 참조하면, 오토인코더는 인코더(encoder)와 디코더(decoder)로 구성되며, 인코더 는 인지망(recognition network)으로도 지칭되고 입력을 내부 표현(representation)으로 변환하고, 디코더 는 생성망(generative network)으로도 지칭되며 내부 표현을 출력으로 변환한다. 오토인코더는 입력 층의 뉴런(x1, x2, x3) 개수와 출력층의 뉴런(x1’, x2’, x3’) 개수가 동일하다는 것만 제외하면 일반적인 인공 신경망과 유사한 구조이다. 오토인코더는 입력(x1, x2, x3)을 처리(예, 압축)하여 재구성하 기 때문에 출력(x1’, x2’, x3’)을 복원(reconstruction)한다고 하며, 비지도 학습 방식으로 학습될 수 있고, 손실함수는 입력과 출력(또는 복원)의 차이를 가지고 계산한다. 도 1에 예시된 바와 같이, 은닉층의 뉴런 개수가 입력층의 뉴런 개수보다 작게 구성될 수 있는데, 이 러한 오토인코더를 불완전(undercomplete) 오토인코더라고 지칭한다. 은닉층의 뉴런 개수가 입력층 보다 작으므로 불완전 오토인코더의 경우 입력(x1, x2, x3)을 그대로 출력(x1’, x2’, x3’)으로 복사할 수 없어서 입력(x1, x2, x3)과 동일한 출력(x1’, x2’, x3’)을 생성하기 위해 학습이 필요하다. 이러한 학습 을 통해 오토인코더는 입력 데이터의 특징(feature)을 학습할 수 있으며, 학습을 위해 비지도 학습 방식이 이용될 수 있고 손실함수는 입력과 출력(또는 복원)의 차이를 가지고 계산한다. 도 1에 예시된 구조 이외에도, 다양한 구조의 오토인코더가 있으며, 은닉층의 뉴런 개수가 입력층보 다 많은 과완전(overcomplete) 오토인코더, 복수의 은닉층을 가지는 적층(stacked) 오토인코더 또는 심층 (deep) 오토인코더, 잡음(noise)를 추가하고 잡음이 없도록 복원하는 잡음 제거(denoising) 오토인코더 등이 있 다. 기술적 문제 도 2는 음성 인식 방법의 흐름도를 예시한다. 도 2는 오로지 예시일 뿐이며 음성 인식 방법은 도 2에 예시되지 않은 다른 동작을 포함하도록 수정 또는 변형될 수 있다. 예를 들어, 음성 인식 방법은 형태소 분석과 같은 동작을 포함할 수 있다. 도 2를 참조하면, 음성 인식 방법은 사용자로부터 음성을 입력 받아 음성 텍스트 변환(Speech-To- Text, STT)을 통해 사용자 음성에 대응하는 텍스트 데이터를 획득한다. 음성 텍스트 변환은 자 동 음성 인식(Automatic Speech Recognition, ASR)과 같은 다른 용어로 지칭될 수 있으며, 은닉 마코프 모델(Hidden Marcov Model, HMM), 동적 시간 워핑(Dynamic Time Warping, DTW), 순환 신경망(Recurrent Neural Network, RNN) 등과 같은 다양한 기법에 기반하여 구현될 수 있다. 음성 텍스트 변환을 위한 기법들은 이 미 공지되어 있으므로 본 명세서에서는 자세한 설명을 생략한다. 음성 인식 방법은 후처리(post processing) 과정으로서 텍스트 데이터에 대해 문장 교정을 수행 할 수 있으며, 이를 위해 텍스트 데이터를 토큰화할 수 있다. 음성 인식 방법은 토큰화에 의해 생성된 토큰들에 기초하여 다양한 문장 교정 기법들을 이용하여 텍스트 데이터의 오류를 교정한 후 교정된 텍스트를 출력할 수 있다. 음성 인식 방법은 사용자가 발화한 내용을 텍스트로 옮겨 적는 것이므로 음성 인식 방법이 텍스 트 데이터의 의미를 재해석해서는 안되며, 텍스트 데이터에서 단어의 삭제/추가 혹은 문법적 오류 등 을 무시하고 올바르게 텍스트로 변환되지 않은 부분(예, 음절, 단어, 어절 등)에 한해서만 문장 교정을 수 행해야 한다. 일 예로, 문장 교정을 위해 사전을 활용한 문장 교정이 이용될 수 있다. 사전을 활용한 문장 교정은 문장 (예, 텍스트 데이터)의 각 단어를 정의된 사전에서 검색하여 평가하고 사전에 등록되지 않은 단어라면 가 장 유사한 단어로 대체하는 방식으로 동작한다. 다만, 사전을 활용한 문장 교정은 사전을 정의하고 구축하는 데 많은 비용이 요구되며 사전을 검색하는 데 많은 컴퓨팅 자원(computing resource)이 요구되는 기술적 문제가 있 다. 다른 예로, 문장 교정을 위해 심층 신경망(deep neural network) 기반 문장 생성 모델이 이용될 수 있다. 심층 신경망 기반 문장 생성 모델은 주어진 문장(예, 텍스트 데이터)을 심층 신경망 기반의 인코더 (encoder)로 압축 후 자기 회귀(auto-regressive) 형식의 디코더(decoder)를 통해 올바른 문장을 생성하는 방 식으로 동작한다. 다만, 심층 신경망 기반 문장 생성 모델은 대체로 많은 컴퓨팅 자원이 요구되고, 사용자 발화 의도와 다른 의미를 가지는 새로운 문장을 생성하는 경우가 있으며, 새로운 단어를 추가하거나 혹은 기존 단어 를 삭제하는 경우가 있고, 생성한 문장이 올바른지 평가할 수 있는 시스템이 없는 기술적 문제가 있다. 또 다른 예로, 문장 교정을 위해 심층 신경망 기반 문법 교정 모델이 이용될 수 있다. 심층 신경망 기반 문법 교정 모델은 주어진 문장(예, 텍스트 데이터)에서 발생한 문법적인 오류를 사전에 정의하고 사전에 기초하여 각 단어 혹은 음절을 Keep, Insertion, Deletion으로 분류하여 태깅(tagging)하는 방식으로 동작한다. 다만, 심층 신경망 기반 문법 교정 모델은 오류 단어 혹은 음절을 어떤 단어 혹은 음절로 대체해야 하는지 알 수 없는 기술적 문제가 있다. 따라서, 종래 기술의 경우, 많은 비용 및 컴퓨팅 자원이 요구됨에도 불구하고, 음성 텍스트 변환된 텍스트 데이터에서 오류가 있는 부분을 명확히 특정하고 대체하기 어려울 뿐만 아니라, 사용자 발화 의도와 다른 의미를 가지는 새로운 문장을 생성하거나 또는 새로운 단어가 추가되거나 또는 기존 단어가 삭제되는 기술 적 문제가 있다. 본 발명의 제안 방법 상기 기술적 문제를 해결하기 위해, 본 발명에서는 인공 신경망(예, 심층 신경망) 기반의 기계 학습 모델에 기 반하여 자연어 문장의 오류가 있는 부분을 특정하고, 인공 신경망(예, 심층 신경망) 기반의 오토인코더 (autoencoder)(예, 도 1 및 관련 설명 참조)를 이용하여 상기 특정된 오류가 있는 부분을 교정하며, 문장 교정 시 음절 또는 단어가 추가/삭제되는 문제를 방지하기 위해 자연어 문장의 토큰 개수와 문장의 음절 개수가 동일 하도록 설정하는 토큰화 방법을 제안한다. 앞서 설명한 바와 같이, 본 명세서에서는 본 발명의 이해를 돕기 위해 음성 인식에 기반하여 본 발명을 설명하 지만, 본 발명이 음성 인식으로만 제한 적용되는 것은 아니며 본 발명은 기계 번역, 대화 시스템, 챗봇, 감성"}
{"patent_id": "10-2022-0114182", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "분석, 텍스트 요약, 음성 인식, 질의 응답 등과 같은 자연어 처리 응용 분야 뿐만 아니라 향후 개발될 자연어 처리 응용 분야에도 적용 가능하다. 본 발명의 제안 방법에 따르면, 인공 신경망(예, 심층 신경망) 기반의 기계 학습 모델을 학습시켜 자연어 문장 의 오류 탐지를 위한 기계 학습 모델을 생성하고 생성된 기계 학습 모델에 기반하여 자연어 문장의 오류 존재 여부를 효과적으로 평가하고 오류가 있는 부분을 효과적으로 특정할 수 있다. 또한, 인공 신경망(예, 심층 신경 망) 기반의 오토인코더(autoencoder)(예, 도 1 및 관련 설명 참조)를 이용하여 교정 문장을 생성하고 교정 문장에 기반하여 특정된 부분을 대체함으로써 사용자의 발화 의도 또는 의미가 문장 교정기에 의해 변질되는 문제를 효과적으로 방지할 수 있다. 또한, 입력 크기와 출력 크기가 같은 오토인코더 특성과 함께 자연어 문장 의 토큰 개수와 음절 개수를 동일하게 설정하는 토큰화 방법을 통해 새로운 음절 또는 단어가 추가되거나 기존 음절 또는 단어가 삭제되는 기술적 문제를 효과적으로 방지할 수 있다. 도 3은 본 발명의 제안 방법의 흐름도를 예시한다. 도 3의 예는 장치에서 수행될 수 있으며, 장치는 자연어 문장을 텍스트 형태로 입력 받아 본 발 명의 제안 방법에 따라 입력 텍스트를 토큰화하고 오류 탐지 모델과 문장 교정 모델 을 통해 오류 자동 교정을 수행한 후 텍스트 형태로 문장을 출력할 수 있다. 예를 들어, 텍스트 형태로 입 력되는 자연어 문장은 음성 텍스트 변환된 텍스트 데이터일 수 있지만, 본 발명의 제안 방법은 이 예로만 제한 적용될 수 있는 것은 아니며 다른 응용 분야에도 동일/유사하게 적용될 수 있다. 또한, 본 발명 의 제안 방법은 도 3에 예시된 구성 이외에도 다른 구성(예, 형태소 분석)을 포함하도록 수정 또는 변형될 수 있다. 장치는 본 발명의 제안 방법에 따른 토큰화에 기반하여 자연어 문장에 대해 토큰화를 수행 할 수 있다. 본 발명의 제안 방법에 따른 토큰화는 자연어 문장에 대한 토큰(token) 개수가 자연어 문장의 음절 개수와 동일하도록 패드(pad) 토큰을 추가하는 것을 포함할 수 있다. 보다 구체적인 예로, 본 발명의 제안 방법에 따른 토큰화는 자연어 문장의 각 서브워드(subword)에 대한 토큰 개수가 해당 서 브워드의 음절 개수와 동일하도록 패드 토큰을 추가하는 것을 포함할 수 있다. 다른 예로, 본 발명의 제안 방법 에 따른 토큰화는 각 단어에 대한 토큰 개수가 해당 단어의 음절 개수와 동일하도록 패드 토큰을 추가하는 것을 포함할 수 있다. 또 다른 예로, 본 발명의 제안 방법에 따른 토큰화는 각 어절에 대한 토큰 개수가 해당 어절의 음절 개수와 동일하도록 패드 토큰을 추가하는 것을 포함할 수 있다. 본 발명의 제안 방법에 따른 토큰화는 (주어진 자연어 문장에 대해 형태소 분석을 수행한 후) 다양한 방식의 토큰화(또는 토큰화기(tokenizer))(예, “토큰화 및 패드 토큰” 참조)에 기반하여 수행될 수 있다. 다 만, 본 발명의 제안 방법에서는 토큰화에 의해 획득되는 토큰 개수가 자연어 문장의 음절 개수를 초 과하지 않는 토큰화 방식만이 사용될 수 있다. 본 발명을 제한하지 않는 예로, 본 발명의 제안 방법에 따른 토 큰화는 서브워드 토큰화(subword tokenization) 또는 서브워드 토큰화기(subword tokenizer)를 포함할 수 있고, 보다 구체적인 예로 서브워드 토큰화는 바이트 쌍 인코딩(Byte Pair Encoding, BPE)(예, “토큰화 및 패 드 토큰” 참조)에 따라 수행될 수 있다. 본 발명의 제안 방법에 따른 토큰화를 적용할 경우 토큰화 에 의해 획득되는 토큰 개수가 자연어 문장의 음절 개수를 초과할 수 없다. 본 발명의 제안 방법에 따라 토큰 개수가 자연어 문장의 음절 개수와 동일하도록 패드 토큰(pad token)을 추가하는 것은 다음과 같은 유리한 기술적 효과가 있다. 한국어 음성 인식기가 오류를 발생시키는 많은 경우 중 하나는 텍스트와 발음열의 차이로 인해 유사한 발음의 텍스트를 출력하는 것이다. 예를 들어, “불닭볶음면”을 “풀닭볶음면”으로 잘못 예측하는 것이며, 이는 “불”과 “풀”이 발음이 비슷하여 생기는 오류일 수 있다. 한국어의 경우, 묵음 처리되는 음절이 존재하지 않기에 오류 단어의 음절 개수와 올바른 단어의 음절 개수는 항 상 동일하다. 또한, 토큰화기(Tokenizer)의 특성에 따라 모든 단어의 토큰 개수는 해당 단어의 음절 개수보다 같거나 작기 때문에, 본 발명의 제안 방법에 따라 패드 토큰을 추가하여 예측한다면 문장 교정 시 음절 또 는 단어가 추가/삭제되는 문제를 효과적으로 방지할 수 있으며, 올바른 단어의 토큰을 표현하기 위한 토큰 개수 를 보장할 수 있다. 반면, 영어의 경우 묵음 처리되는 스펠(spell)이 많아 동일한 음절 개수를 가지더라도 올바 른 단어의 필요 토큰 개수를 보장하는 데 어려움이 있다. 예를 들어, “Fight”를 “Fate”로 잘못 예측했다면, “Fate”를 통해 최대 4개의 토큰을 패드 토큰을 활용해 맞추어도 “Fight”의 최대 토큰 개수는 5개일 수 있기 에 올바른 단어(예, “Fight”)의 필요 토큰 개수(예, 5개)를 보장하기 어렵다. 따라서, 본 발명의 제안 방법에 따른 토큰화는 특히 한국어 자연어 문장을 처리함에 있어서 장점이 있다. 도 4는 본 발명의 제안 방법에 따른 토큰화를 예시한다. 도 4(a)는 본 발명의 제안 방법에 따른 토큰화 를 적용하지 않은 예이고, 도 4(b)는 본 발명의 제안 방법에 따른 토큰화를 적용한 예이다. 도 4의 예에서 자연어 문장의 각 어절에 대해 토큰 개수와 음절 개수가 동일하도록 패드 토큰을 추가하는 것이 예 시되어 있지만, 어절이 아닌 다른 말 단위(예, 단어, 서브워드 등)로 토큰 개수와 음절 개수가 동일하도록 패드 토큰을 추가하는 경우에도 본 발명의 제안 방법이 동일/유사하게 적용될 수 있다. 도 4의 예는 오로지 예시일 뿐이며 본 발명을 제한하는 것이 아니다. 도 4(a)를 참조하면, 본 발명의 제안 방법에 따른 토큰화가 적용되지 않는 경우, 토큰화(또는 토큰화 기)는 입력 텍스트 데이터 “나는 케이티 연구원 입니다”를 4개의 토큰 “나는”, “케이티” , “연구원”, “입니다”로 나눈다고 가정한다. 도 4(b)를 참조하면, 본 발명의 제안 방법에 따른 토큰화가 적용되는 경우, 토큰화(또는 토큰화기)는 입력 자연어 문장 “나는 케이티 연구원 입니다”의 각 어절에 대한 토큰 개수가 해당 어절의 음절 개수와 동일하도록 패드 토큰(PAD)을 추가할 수 있다. 예를 들어, 입력 자연어 문장은 3개의 어절 “나는”, “케 이티”, “연구원입니다”로 분류될 수 있으며, 첫 번째 어절 “나는”은 2개의 음절을 포함하고, 두 번째 어절 “케이티”는 3개의 음절을 포함하고, 세 번째 음절 “연구원입니다”는 6개의 음절을 포함한다. 본 발명의 제 안 방법에 따른 토큰화를 적용할 경우, 첫 번째 어절의 경우 토큰 개수가 음절 개수(예, 2개)와 동일하도 록 토큰 외에 패드 토큰(PAD) 1개를 추가하고, 두 번째 어절의 경우 토큰 개수가 음절 개수(예, 3개)와 동 일하도록 토큰 외에 패드 토큰(PAD) 2개를 추가하고, 세 번째 어절의 경우 토큰 개수가 음절 개수(예, 6개)와 동일하도록 토큰(406, 408) 외에 패드 토큰(PAD) 4개를 추가한다. 다시 도 3을 참조하면, 장치는 인공 신경망(예, 심층 신경망) 기반의 오류 탐지 모델을 이용하여 토 큰화에 의해 획득한 하나 이상의 제1 토큰에 기초하여 자연어 문장에 오류가 있는지 판별할 수 있다 . 본 명세서에서 인공 신경망(예, 심층 신경망) 기반의 오류 탐지 모델은 제1 기계 학습 모델로 지칭 될 수 있다. 만일 자연어 문장에 오류가 없는 것으로 판별된 경우, 장치는 해당 문장을 출력할 수 있다. 만일 자연어 문장에 오류가 있는 것으로 판별된 경우, 장치는 자연어 문장에서 오류 가 있는 부분과 관련된 토큰 각각을 오류를 지시하는 값으로 태깅(tagging)할 수 있다. 태깅은 해당 토큰에 오 류를 지시하는 값을 붙이거나 표시하는 작업을 지칭한다. 일 예로, 장치는 오류 탐지 모델을 통해 예 를 들어 플래그(flag), 이진 값(binary value), 텍스트 스트링(text string) 등과 같은 다양한 형태로 정답 또 는 오류를 지시하는 값을 출력하고 이 값을 해당 토큰에 태깅할 수 있다. 일 예로, 장치는 서브워드 단위 또는 단어 단위 또는 어절 단위로 오류가 있는 부분을 검출하고 해당 부분과 관련된 토큰 각각을 오류를 지시하 는 값으로 태깅할 수 있다. 자연어 문장에 오류가 있는 것으로 판별된 경우, 장치는 인공 신경망(예, 심층 신경망) 기반의 문장 교정 모델을 이용하여 교정 문장을 획득하고 자연어 문장에서 오류가 있는 부분과 관련된 토큰 을 교정 문장에서 대응하는 위치의 토큰으로 대체하는 방식으로 자연어 문장을 교정하고 대체 문장을 획득 할 수 있다. 이 경우, 오류가 있는 부분과 관련된 토큰은 토큰화에 의해 추가된 패드 토큰을 포함할 수 있 다. 본 명세서에서 인공 신경망(예, 심층 신경망) 기반의 문장 교정 모델은 제2 기계 학습 모델로 지칭될 수 있다. 예를 들어, 문장 교정 모델은 입력 크기와 출력 크기가 같은 인공 신경망(예, 심층 신경망)을 기 반으로 할 수 있으며, 보다 구체적인 예로 문장 교정 모델은 오토인코더(autoencoder)(예, 도 1 및 관련 설명 참조)를 포함할 수 있다. 일 예로, 장치는 자연어 문장에서 오류를 지시하는 값으로 태깅된 토큰을 포함하는 부분(예, 서브워 드, 단어, 어절 등)과 관련된 토큰 각각을 교정 문장에서 대응하는 위치의 토큰으로 대체할 수 있다. 예를 들어, 단어 단위로 토큰을 대체하는 경우, 특정 단어가 오류로 태깅된 토큰을 포함하면 패드 토큰을 포함하여 해당 단어에 포함되는 토큰 전부를 교정 문장에서 대응하는 위치의 토큰으로 대체할 수 있다. 예를 들어, 어절 단위로 토큰을 대체하는 경우, 특정 어절이 오류로 태깅된 토큰을 포함하면 패드 토큰을 포함하여 해당 어절에 포함되는 토큰 전부를 교정 문장에서 대응하는 위치의 토큰으로 대체할 수 있다. 장치는 오류가 더 이상 발견되지 않거나 미리 설정된 최대 반복 횟수에 도달할 때까지 대체 문장을 입력 문장으로 하여 오류 탐지 및 문장 교정(320, 322, 330)을 반복할 수 있다. 만일 현재 반복에서의 교정 문장과 이전 반복에서의 교정 문장이 동일한 경우, 현재 반복에서의 교정 문장에서 대응하는 위치의 토큰을 2번째로 높 은 확률 값을 가지는 토큰으로 하여 현재 반복에서의 대체 문장을 획득할 수 있다. 만일 현재 반복에서의 교정 문장과 이전 반복에서의 교정 문장이 동일하지 않은 경우, 이전 반복에서와 마찬가지로 현재 반복에서의 교정 문장에서 대응하는 위치의 토큰을 가장 높은 확률 값을 가지는 토큰으로 하여 현재 반복에서의 대체 문장을 획 득할 수 있다. 만일 현재 반복에서 2번째로 높은 확률 값을 가지는 토큰으로 대체하여 대체 문장을 획득하고 이를 입력 문장으 로 오류 탐지한 결과, 다시 오류가 있는 것으로 판별되었지만 미리 설정된 최대 반복 횟수에 도달한 경우, 장치 는 2번째로 높은 확률 값을 가지는 토큰으로 대체한 부분을 가장 높은 확률 값을 가지는 토큰으로 다시 대 체하여 문장을 출력할 수 있다.도 5는 본 발명의 제안 방법에 따른 오류 탐지 및 문장 교정을 예시한다. 도 5의 예에서 본 발명을 제한하지 않는 예로 장치는 “나는 묵습니다 풀닭볶음면을”을 자연어 문장(30 2)으로 입력 받고, 입력 자연어 문장에 대해 토큰화를 수행하여 하나 이상의 토큰을 획득한다고 가정한다. 또한, 이 예에서, 본 발명의 제안 방법에 따른 토큰화가 어절 단위로 적용된다고 가정하지만, 서브워드 단위 또는 단어 단위로 토큰화가 적용되더라도 오류 탐지 및 문장 교정은 동일한 원리로 수행될 수 있다. 따라서, 도 5의 예에서, 자연어 문장의 각 어절에 대한 토큰 개수가 음절 개수와 동일하도록 패 드 토큰이 추가될 수 있다. 도 5를 참조하면, 장치는 토큰화에 의해 획득한 하나 이상의 제1 토큰을 인공 신경망(예, 심층 신경망) 기반의 오류 탐지 모델(또는 제1 기계 학습 모델)에 이용하여 자연어 문장에 오류가 있는지 여부를 판별할 수 있다. 도 5의 예에서, 오류 탐지 모델이 “묵습니다”와 “풀닭볶음면을” 어절에서 토 큰 “묵”, “습니다”, “풀”, “닭”, “볶음”, “면”, “을”, 및 패드 토큰을 오류로 판별한다고 가정하면, 장치는 오류로 판별된 토큰을 오류를 지시하는 값(예, “오류”)으로 태깅할 수 있고, 나머지 토큰 “나는”과 패드 토큰(528, 522, 524)은 오류가 없음(또는 정답임)을 지시하는 값(예, “정답”)으로 태깅 할 수 있다. 장치는 자연어 문장에 오류가 있는 것으로 판별하였으므로 토큰화에 의해 획득한 하나 이상의 제1 토큰을 인공 신경망(예, 심층 신경망) 기반의 문장 교정 모델(또는 제2 기계 학습 모델)에 이용 하여 하나 이상의 제2 토큰을 포함하는 교정 문장을 획득할 수 있다. 앞서 설명한 바와 같이, 문장 교정 모델은 입력 크기와 출력 크기가 같은 인공 신경망(예, 오토인코더)을 기반으로 할 수 있다. 도 5의 예에서, 문 장 교정 모델이 토큰화 결과와 대비하여 토큰 “난”, “먹”, “불닭”, “볶음”, “면”, “ 을”과 패드 토큰을 달리 포함하여 교정 문장을 출력한다고 가정하면, 장치는 자연어 문장에서 오류 로 태깅된 토큰을 포함하는 어절(예, “묵습니다”, “풀닭볶음면을”)과 관련된 토큰 각각(예, “묵”, “습니 다”, “풀”, “닭”, “볶음”, “면”, “을”, 및 패드 토큰(522, 524, 526))을 교정 문장에서 대응하 는 위치의 토큰(예, “먹”, “습니다”, “불닭”, “볶음”, “면”, “을”, 및 패드 토큰(532, 534, 536, 538))으로 대체하여 대체 문장을 획득하고, 대체 문장에 오류가 없는 것으로 판별될 경우 해당 문장 을 출력할 수 있다. 도 5의 예에서 어절 단위로 토큰을 대체(예, 오류로 판별된 토큰을 포함하는 어절과 관련된 토큰 전부를 대체) 하여 대체 문장을 획득하므로 패드 토큰(522, 524)은 오류 탐지 모델에 의해 오류가 없는 것으로(또 는 정답으로) 판별되었음에도 불구하고 교정 문장의 대응하는 위치의 토큰(532, 534)로 대체된다. 도 5의 예에 서 어절 단위로 토큰을 대체하는 것을 예시하였지만, 서브워드 단위 또는 단어 단위로 토큰을 대체하여 대체 문 장을 획득하는 경우에도 본 발명의 제안 방법은 동일/유사하게 적용될 수 있다. 이상 자세히 설명한 바와 같이, 본 발명의 제안 방법에 따르면, 자연어 문장에서 인공 신경망(예, 심층 신경망) 기반의 오류 탐지 모델을 통해서 오류가 발생하여 교정이 필요한 부분을 명확히 정의할 수 있다. 또한, 인공 신 경망(예, 심층 신경망) 기반의 문장 교정 모델(예, 오토인코더)을 통해 오류가 발생한 부분을 효과적으로 교정 하여 사용자 발화의 의도 또는 의미가 문장 교정기에 의해 변질되는 문제를 효과적으로 방지할 수 있다. 또한, 문장의 토큰 개수를 문장의 음절 개수와 동일하도록 설정하는 토큰화 및 인공 신경망(예, 심층 신경망) 기반의 오토인코더 특성을 활용함으로써 새로운 단어가 추가되거나 기존의 단어가 삭제되는 문제를 효과적으로 방지할 수 있다. 본 발명의 제안 방법이 적용될 수 있는 장치 도 6은 본 발명의 제안 방법이 적용될 수 있는 장치를 예시한다. 도 6을 참조하면, 장치는 본 발명의 제안 방법을 구현하도록 구성될 수 있다. 일 예로, 장치는 자연 어 문장을 처리하도록 구성될 수 있으며, 이를 위해 본 발명의 제안 방법에 따른 토큰화와 오류 탐지 및 문장 교정(320, 322, 330) 중 적어도 하나의 동작을 구현하도록 구성될 수 있다. 예를 들어, 장치는 네트 워크 장치, 서버 장치, 또는 단말 장치를 포함할 수 있다. 예를 들어, 본 발명의 제안 방법이 적용될 수 있는 장치는 리피터, 허브, 브리지, 스위치, 라우터, 게이트 웨이 등과 같은 네트워크 장치, 데스크톱 컴퓨터, 워크스테이션 등과 같은 컴퓨터 장치, 스마트폰 등과 같은 이동 단말, 랩톱 컴퓨터 등과 같은 휴대용 기기, 디지털 TV 등과 같은 가전 제품, 자동차 등과 같은 이동 수단 등 을 포함할 수 있다. 다른 예로, 본 발명이 적용될 수 있는 장치는 SoC(System On Chip) 형태로 구현된 ASIC(Application Specific Integrated Circuit)의 일부로 포함될 수 있다. 메모리는 프로세서의 처리 및 제어를 위한 프로그램 및/또는 명령어들을 저장할 수 있고, 본 발명에 서 사용되는 데이터와 정보, 본 발명에 따른 데이터 및 정보 처리를 위해 필요한 제어 정보, 데이터 및 정보 처 리 과정에서 발생하는 임시 데이터 등을 저장할 수 있다. 메모리는 ROM(Read Only Memory), RAM(Random Access Memory), EPROM(Erasable Programmable Read Only Memory), EEPROM(Electrically Erasable Programmable Read-Only Memory), 플래쉬(flash) 메모리, SRAM(Static RAM), HDD(Hard Disk Drive), SSD(Solid State Drive) 등과 같은 저장 장치로서 구현될 수 있다. 프로세서는 장치 내 각 모듈의 동작을 제어한다. 특히, 프로세서는 본 발명의 제안 방법을 수행 하기 위한 각종 제어 기능을 수행할 수 있다. 프로세서는 컨트롤러(controller), 마이크로 컨트롤러 (microcontroller), 마이크로 프로세서(microprocessor), 마이크로 컴퓨터(microcomputer) 등으로도 불릴 수 있다. 본 발명의 제안 방법은 하드웨어(hardware) 또는 펌웨어(firmware), 소프트웨어, 또는 이들의 결합에 의 해 구현될 수 있다. 하드웨어를 이용하여 본 발명을 구현하는 경우에는, 본 발명을 수행하도록 구성된 ASIC(application specific integrated circuit) 또는 DSP(digital signal processor), DSPD(digital signal processing device), PLD(programmable logic device), FPGA(field programmable gate array) 등이 프로세서 에 구비될 수 있다. 한편, 펌웨어나 소프트웨어를 이용하여 본 발명의 제안 방법을 구현하는 경우에는 펌 웨어나 소프트웨어는 본 발명의 제안 방법을 구현하는 데 필요한 기능 또는 동작들을 수행하는 모듈, 절차 또는 함수 등과 관련된 명령어(instruction)들을 포함할 수 있으며, 명령어들은 메모리에 저장되거나 메모리 와 별도로 컴퓨터 판독가능한 기록 매체(미도시)에 저장되어 프로세서에 의해 실행될 때 장치가 본 발명의 제안 방법을 구현하도록 구성될 수 있다. 또한, 장치는 네트워크 인터페이스 모듈(network interface module, NIM)을 포함할 수 있다. 네트워 크 인터페이스 모듈은 프로세서와 동작시 연결(operatively connected)되며, 프로세서는 네트 워크 인터페이스 모듈을 제어하여 무선/유선 네트워크를 통해 정보 및/또는 데이터, 신호, 메시지 등을 나 르는 무선/유선 신호를 전송 또는 수신할 수 있다. 네트워크 인터페이스 모듈은 예를 들어 IEEE 802 계열, 3GPP LTE(-A), 3GPP 5G 등과 같은 다양한 통신 규격을 지원하며, 해당 통신 규격에 따라 제어 정보 및/또는 데 이터 신호를 송수신할 수 있다. 네트워크 인터페이스 모듈은 필요에 따라 장치 밖에 구현될 수도 있 다. 이상에서 설명된 실시예들은 본 발명의 구성 요소들과 특징들이 소정 형태로 결합된 것들이다. 각 구성 요소 또 는 특징은 별도의 명시적 언급이 없는 한 선택적인 것으로 고려되어야 한다. 각 구성 요소 또는 특징은 다른 구 성 요소나 특징과 결합되지 않은 형태로 실시될 수 있다. 또한, 일부 구성 요소들 및/또는 특징들을 결합하여 본 발명의 실시예를 구성하는 것도 가능하다. 본 발명의 실시예들에서 설명되는 동작들의 순서는 변경될 수 있 다. 어느 실시예의 일부 구성이나 특징은 다른 실시예에 포함될 수 있고, 또는 다른 실시예의 대응하는 구성 또 는 특징과 교체될 수 있다. 특허청구범위에서 명시적인 인용 관계가 있지 않은 청구항들을 결합하여 실시예를 구성하거나 출원 후의 보정에 의해 새로운 청구항으로 포함시킬 수 있음은 자명하다. 산업상 이용가능성 본 발명은 자연어 문장을 처리하도록 구성된 네트워크 장치, 서버 장치, 단말 장치 등과 같은 다양한 장치에 적 용될 수 있다."}
{"patent_id": "10-2022-0114182", "section": "도면", "subsection": "도면설명", "item": 1, "content": "첨부 도면은 본 발명에 관한 이해를 돕기 위해 상세한 설명의 일부로 포함되고 상세한 설명과 함께 본 발명의 실시예와 기술적 특징을 설명한다. 도 1은 오토인코더를 예시한다. 도 2는 음성 인식 흐름도를 예시한다. 도 3은 본 발명의 제안 방법의 흐름도를 예시한다. 도 4는 본 발명의 제안 방법에 따른 토큰화를 예시한다. 도 5는 본 발명의 제안 방법에 따른 오류 탐지 및 문장 교정을 예시한다. 도 6은 본 발명의 제안 방법이 적용될 수 있는 장치를 예시한다."}
