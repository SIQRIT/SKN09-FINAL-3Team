{"patent_id": "10-2022-0052622", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0152990", "출원번호": "10-2022-0052622", "발명의 명칭": "AKA를 통한 상호 TLS 인증 시스템 및 장치", "출원인": "삼성전자주식회사", "발명자": "호르슈차루크 크지슈토프"}}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인증 시스템에 있어서,AKA 인증 및 TLS 인증 기능을 수행하는 전자 장치,AKA 인증 및 TLS 인증 기능을 수행하는 모바일 코어를 포함하고,상기 전자 장치는 TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 클라이언트 메시지를 상기 모바일 코어에 전송하고,상기 모바일 코어는 상기 클라이언트 메시지에 기반한 암호화 자료를 파생하여 TLS 대칭 암호화 키를 계산하고, 상기 모바일 코어는 TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 서버 메시지를 상기 전자 장치에 전달하고,상기 전자 장치는 상기 서버 메시지에 기반한 암호화 자료를 파생하여 TLS 대칭 암호화 키를 계산하고,상기 전자 장치 및 상기 모바일 코어는 상기 TLS 대칭 암호화 키에 기반하여 보안 채널을 생성하고,상기 전자 장치 및 상기 모바일 코어는 상기 보안 채널을 통하여 데이터를 교환하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 모바일 코어는AKA 인증을 수행하는 관리 장치를 포함하고,상기 클라이언트 메시지에 기반하여 암호화 자료를 파생하고,상기 파생된 암호화 자료에 기반하여 TLS 대칭 암호화 키를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 전자 장치는AKA 인증을 수행하는 SIM(Subscriber Identity Module)를 포함하고,상기 SIM은상기 서버 메시지에 기반하여 암호화 자료를 파생하고,상기 파생된 암호화 자료에 기반하여 TLS 대칭 암호화 키를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,공개특허 10-2023-0152990-3-상기 클라이언트 메시지는 [ID]를 포함하고,상기 관리 장치는상기 [ID]에 기반하여 [RAND](Random Network Challenge), [AUTN](AUthentication TokeN), [XRES](ExpectedResponse), [IK](Integrity Key) 및 [CK](Cipher Key)를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 서버 메시지는 [ID], [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)를 포함하고,상기 SIM은 상기 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)에 기반하여[IK](Integrity Key), [CK](Cipher Key) 및 [RES](Response)를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 전자 장치 및 상기 모바일 코어는상기 [IK](Integrity Key) 및 [CK](Cipher Key)에 기반하여 상기 암호화 자료를 파생하고,TLS 매개변수를 상호 동의하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 전자 장치 및 상기 모바일 코어는상기 암호화 자료 및 상기 TLS 매개변수에 기반하여 TLS 대칭 암호화 키를 계산하고,상기 대칭 암호화 키에 기반하여 상기 보안 채널을 생성하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 전자 장치는 상기 보안 채널을 통하여 상기 모바일 코어에 [ID], [realm], [RES], [cnonce] [RAND] 및[AUTN]을 포함하는 응답 데이터를 전송하고,상기 모바일 코어는 상기 [XRES](Expected Response)에 기반하여 상기 보안 채널을 통하여 획득한 상기 응답 데이터를 확인하고,상기 응답 데이터를 확인함에 대응하여 상기 전자 장치를 인증하는인증 시스템.공개특허 10-2023-0152990-4-청구항 9 제 5 항에 있어서,상기 모바일 코어는상기 [XRES](Expected Response), IK(Integrity Key), CK(Cipher Key)]와 관련된 함수에 기반하여 SIGK 서명키를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 SIM은상기 [RES](Response), IK(Integrity Key), CK(Cipher Key)]와 관련된 함수에 기반하여 SIGK 서명 키를 계산하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10항에 있어서,상기 전자 장치 및 상기 모바일 코어는상기 계산된 SIGK 서명 키에 기반하여 보안 채널을 생성하는인증 시스템."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "TLS 인증 기능을 수행하는 전자 장치에 있어서, AKA 인증을 수행하는 SIM(Subscriber Identity Module)을 이용하는 프로세서;를 포함하고,상기 프로세서는TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 클라이언트 메시지를 모바일 코어에 전송하고, AKA 인증을 포함하는 서버 메시지를 상기 모바일 코어로부터 획득하고,상기 서버 메시지에 기반한 암호화 자료를 파생하고,상기 암호화 자료에 기반하여 TLS 대칭 암호화 키를 계산하고,상기 TLS 대칭 암호화 키에 기반하여 보안 채널을 생성하고,상기 보안 채널을 통하여 상기 모바일 코어와 데이터를 교환하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 서버 메시지는 [ID], [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)를 포함하고,공개특허 10-2023-0152990-5-상기 프로세서는상기 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)에 기반하여 [IK](Integrity Key),[CK](Cipher Key) 및 [RES](Response)를 계산하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 프로세서는상기 [IK](Integrity Key) 및 [CK](Cipher Key)에 기반하여 상기 암호화 자료를 파생하고,TLS 매개변수를 상기 모바일 코어와 상호 동의하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 프로세서는상기 암호화 자료 및 상기 TLS 매개변수에 기반하여 TLS 대칭 암호화 키를 계산하고,상기 대칭 암호화 키에 기반하여 상기 보안 채널을 생성하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,상기 프로세서는 상기 보안 채널을 통하여 상기 모바일 코어에 [ID], [realm], [RES], [cnonce] [RAND] 및 [AUTN]을 포함하는응답(response) 데이터를 전송하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 13 항에 있어서,상기 서버 메시지는 [RES](Response), IK(Integrity Key), CK(Cipher Key)]를 포함하고,상기 프로세서는상기 [RES](Response), IK(Integrity Key), CK(Cipher Key)]의 함수에 기반하여 SIGK 서명 키를 계산하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17항에 있어서,공개특허 10-2023-0152990-6-상기 프로세서는상기 계산된 SIGK 서명 키에 기반하여 보안 채널을 생성하는전자 장치."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따른 인증 시스템에 있어서, 인증 시스템은 AKA 인증 및 TLS 인증 기능을 수행하는 전자 장치, AKA 인증 및 TLS 인증 기능을 수행하는 모바일 코어를 포함하고, 상기 전자 장치는 TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 클라이언트 메시지를 상기 모바일 코어에 전송하고, 상기 모바일 코어는 상기 클라이언트 메시 (뒷면에 계속)"}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에 개시된 다양한 실시예들은, 전자 장치와 모바일 코어 사이에서 AKA를 통한 상호 TLS 인증에 관한 것 이다."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "TLS와 AKA 인증 시스템은 완전히 분리되어 있다. AKA는 모바일 무선 액세스 네트워크(RAN) 연결 및 IP 계층 인 증(IMS, XCAP)에 사용되고, TLS는 다른 애플리케이션, 주로 HTTPS 트래픽에 사용된다. AKA 인증 시스템은 전자 장치와 모바일 네트워크 사이의 빠른 상호 인증 및 안전한 암호화 채널을 구축이 한 번 의 핸드셰이크 내에서 이루어질 수 있다. TLS는 보안 암호화된 채널을 설정할 수 있으나, 대부분의 경우 서버에서 전자 장치로의 단방향 인증만 있다. 또 한, TLS 서버에는 신뢰할 수 있는 루트 CA에서 최종적으로 서명한 인증서 체인이 있어야 하고, 클라이언트는 서 버 인증서에 서명하는 데 사용되는 CA를 포함하는 신뢰할 수 있는 루트 CA 데이터베이스로 프로비저닝되어야 한 다."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "TLS 인증서는 비대칭 암호화 및 PKI 인프라 사용으로 인해 높은 보안 수준을 제공할 수 있다. 하지만, TLS 인증 에는 다음과 같은 한계가 있다. 예를 들어, TLS 서버에 유효한 인증서가 있어야 하며, 인증서에는 만료 시간이 있으며 이후에는 교체해야 하고, 새 이름이나 새 IP 주소가 서버에 할당되면 완전한 새 인증서를 생성하여 설치 해야 한다. 또한, 인증서는 CA(Certificate Authority)라는 외부 기관에서 생성하므로 시간과 비용이 필요하다. 또한, CA 개인 키가 손상될 수 있으며 파생된 모든 인증서를 쉽게 취소할 수 있는 방법이 없다. 또한, 루트 CA/ 중간 CA 인증서를 클라이언트에 프로비저닝해야 한다. 또한, 클라이언트는 서버에 대해 인증하지 않으며(클라이 언트 인증서가 배포될 때까지) TLS는 단방향 인증만 제공한다. 본 발명의 다양한 실시 예들에 따른 TLS-AKA 인증 시스템은, TLS 핸드셰이크 단계에서 AKA 절차를 이용하여 인 증을 수행할 수 있다. 구체적으로, TLS-AKA 인증 시스템은, TLS 핸드셰이크 단계에서 AKA 메시지를 상호 전송하 고, 대칭 암호화 키에 대한 암호화 자료를 파생하여 TLS 대칭 암호화 키를 계산할 수 있다. 이에 따라, TLS-AKA 인증 시스템은, PKI 유지 관리 오버헤드를 제거하고, 상호 인증을 제공하고, 보안을 향상하고, 다양한 서비스의 사용을 가능하게 할 수 있다. 본 문서에서 이루고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 인증 시스템에 있어서, 인증 시스템은 AKA 인증 및 TLS 인증 기능을 수행하는 전자 장치, AKA 인증 및 TLS 인증 기능을 수행하는 모바일 코어를 포함하고, 상기 전자 장치는 TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 클라이언트 메시지를 상기 모바일 코어에 전송하고, 상기 모바일 코어는 상기 클라이언트 메시지에 기반한 암호화 자료를 파생하여 TLS 대칭 암호화 키를 계산하고, 상기 모바일 코어는 TLS 핸드셰이크 단계에서 AKA 인증을 포함하는 서버 메시지를 상기 전자 장치에 전달하고, 상기 전자 장치는 상기 서버 메시지 에 기반한 암호화 자료를 파생하여 TLS 대칭 암호화 키를 계산하고, 상기 전자 장치 및 상기 모바일 코어는 상 기 TLS 대칭 암호화 키에 기반하여 보안 채널을 생성하고, 상기 전자 장치 및 상기 모바일 코어는 상기 보안 채널을 통하여 데이터를 교환할 수 있다."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따른 TLS-AKA 시스템은, TLS 핸드셰이크에서 AKA와 유사한 절차를 통해 xSIM 및 가입자 관리 장치에서 생성한 보안 자격 증명을 활용할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서, AKA 암호화 제품군이 사용되어PKI 인증서가 더 이상 필요하지 않으 므로 PKI 유지관리 오버헤드가 발생하지 않고, PKI 인증서를 해지할 필요가 없다. 다양한 실시예에 따른 TLS-AKA 시스템에서, 네트워크 운영자는 PKI 인증서를 업데이트할 필요 없이 서버의 IP 주소 및 FQDN을 쉽게 수정할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서, 보안은 더 이상 서버 이름 및/또는 IP 주소에 고정되지 않으므로 운 영자는 새 인증서를 사용하지 않고도 서버 이름 및/또는 IP 주소를 쉽게 추가하거나 수정할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서, PKI 기반 TLS는 단방향 인증을 제공하는 반면 TLS 수준에서는 클라 이언트 대 서버 및 서버 대 클라이언트의 상호 인증할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서, TLS 핸드셰이크는 4개의 메시지로 TLS 세션을 설정할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서는 MITM 공격 및 피싱 공격에 대한 면역을 강화할 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서는 기존 AKA 암호화 제품군은 TLS 용도로 재사용될 수 있다. 다양한 실시예에 따른 TLS-AKA 시스템에서, 보안 패러다임은 사용자별 공유 비밀을 기반으로 하므로, 하나의 사 용자 자격 증명(즉, 하나의 xSIM UICC)이 손상되면 새 자격 증명으로 쉽게 변경할 수 있으며 이러한 보안 위반 은 다른 사용자에게 영향을 미치지 않을 수 있다."}
{"patent_id": "10-2022-0052622", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming),거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2a는, 전자 장치와 모바일 네트워크 사이의 AKA 인증 동작을 도시한 도면이다. AKA(Authentication & Key Agreement)는 전자 장치(UE, mobile phone, 210)와 모바일 네트워크(mobile network, 220) 상호 인증을 위해 사용되고, 보안 암호화된 통신 채널을 설정하는 기술이다. xSIM은 SIM(2G 네트워크용), USIM(3G 네트워크용), ISIM(IMS용)과 같은 다양한 SIM 애플리케이션을 식별 하는 SIM(Subscriber Identity Module)일 수 있다. xSIM은 전자 장치 내 UICC(Universal Integrated Circuit Card) 카드에 포함될 수 있다. UICC(Universal Integrated Circuit Card) 카드는 전자 장치의 인 증을 위하여 전자 장치에 삽입되는 칩 카드일 수 있다.HSS(Home Subscriber Server, 221)는 4G 모바일 네트워크 내에서 사용되는 가입자 데이터베이스로, 가입 자의 세부 정보를 네트워크 내의 다른 엔티티에 제공할 수 있다. xSIM과 HSS는 가입자별 비밀 키(secret key)를 공유할 수 있다. 전자 장치의 xSIM는 직접적으로 비밀 키(secret key)에 대한 읽기 액세스 권한이 없으나, 비밀 키 (secret key)를 사용하여 암호화 계산을 수행할 수 있는 API(Application Programmer Interface)를 포함할 수 있다. 모바일 네트워크의 HSS는 비밀 키(secret key)를 사용하여 암호화 계산을 수행할 수 있다. 전자 장치와 모바일 네트워크는 AKA 방식에 의하여, 고유의 일회용 대칭 암호 키가 파생되고, 안전한 암호화 채널이 설정될 수 있다. 전자 장치와 모바일 네트워크는 공통의 비밀 지식(common secret information)을 사전에 공유하여, 상호 인증이 발생할 수 있다. 3GPP(3rd Generation Partnership Project)에 의해 지정된 인증 제품군은, 모바일 네트워크의 가입자 관 리 장치(HSS(Home Subscriber Server), UDM(Unified Data Management)/ARPF(Authentication credential Repository and Processing Function) 등)에 삽입된 xSIM UICC에 공통인 공유 비밀과 3GPP 사양에 기재된 공통 AKA 알고리즘 및 절차를 기반으로 할 수 있다. AKA는 NAS(Non-Access Stratum) 계층 인증과 애플리케이션 계층 인증(VoLTE SIP, XCAP(XML(Extensible Markup Language) 구성 액세스 프로토콜))에 모두 사용될 수 있다. 이 경우, 매개변수가 다른 방식으로 전송되더라도, 매개변수를 계산하는 방법은 동일할 수 있다. VoLTE SIP 구현은 AKA를 활용하여 IPSec 암호화 자료를 설정할 수 있다. 일 실시예에 따른 IMS(IP Multimedia Subsystem) AKA가 SIP(Session Initiation Protocol)를 통하여 동작하는 방법은 아래와 같다. 1. 전자 장치는 [IMPI](IP Multimedia Private Identity)로 SIP REGISTER를 시작할 수 있다. 2. HSS는 [IMPI](IP Multimedia Private Identity), [RAND](Random Network Challenge), [AUTN](AUthentication TokeN), [XRES](Expected Response), [IK](Integrity Key) 및 [CK](Cipher Key)를 포 함하는 인증 벡터로 S-CSCF(Serving Call State Control Function)에 응답할 수 있다. 3. S-CSCF(Serving Call State Control Function)는 [XRES](Expected Response)는 유지하고 다른 토큰을 P- CSCF(Proxy Call State Control Function)로 전달할 수 있다. 4. P-CSCF(Proxy Call State Control Function)는 [IK](Integrity Key), [CK](Cipher Key)를 유지하고 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)을 전자 장치에 전달할 수 있다. 5. 전자 장치는 [RAND](Random Network Challenge) 및 [AUTN] (AUthentication TokeN) 토큰을 UICC의 xSIM에 전달할 수 있다. 6. xSIM은 [MAC](Message Authentication Code), [XMAC](Expected Message Authentication Code), [RES](Response), [IK](Integrity Key), [CK](Cipher Key)를 계산한 다음 [XMAC](Expected Message Authentication Code)를 [MAC](Message Authentication Code)와 비교할 수 있다. 이 단계를 통해 모바일 네트 워크가 xSIM에 대해 인증될 수 있다. 7. xSIM은 [IK](Integrity Key), [CK](Cipher Key) 및 [RES](Response)를 전자 장치로 다시 전달할 수 있다. 전자 장치는 암호화된 IPSec 채널을 설정할 수 있다. 8. 전자 장치는 암호화된 IPSec 채널을 통해 [RES](Response)를 S-CSCF(Serving Call State Control Function)에 전달할 수 있다. 9. S-CSCF(Serving Call State Control Function)는 [RES](Response)를 [XRES](Expected Response)와 비교할 수 있다. 전자 장치는 이 단계에서 모바일 네트워크에 인증될 수 있다. 10. S-CSCF(Serving Call State Control Function)는 확인(OK)을 생성하여 전자 장치로 전송할 수 있다. 도 2b는, 클라이언트와 서버 사이의 TLS 인증 동작을 도시한 도면이다. TLS(Transport Layer Security)는 익명의 인터넷 환경에 대한 보안 시스템으로, TLS 핸드셰이크(RFC 5246 및 8446에 정의됨)는 인증서를 기반으로 하는 IETF(Internet Engineering Task Force) 표준이다. 서버는 클라이언트에 대한 정보가 없어, 서드파티 PKI(Public Key Infrastructure) 인프라가 필요할 수 있다. 서버에는 이름(일반적으로, DNS(Domain Name System) 도메인 이름)과 비대칭 키 쌍(공개 및 개인)이 있다. 이름 <-> 공개 키 바인딩은 신뢰할 수 있는 CA(Certificate Authority, 인증 기관, PKI의 일부)에서 발급한 디 지털 인증서로 서명될 수 있다. 클라이언트에는 신뢰할 수 있는 루트 CA 목록이 미리 제공될 수 있다. 클라이언트가 TLS 세션을 시작(“hello”)하고, 서버는 공개 키 및 인증서(“pub key + certificate ”)로 응답하고, 클라이언트는 신뢰할 수 있는 CA 목록에 대해 유효성을 검사할 수 있다. 클라이언트(23 0)와 서버 사이에 Diffie-Hellman 키 교환이 발생하고 임시 대칭 키가 파생될 수 있다. 서버가 클라이언트에 인증됨에 따라 애플리케이션 데이터는 안전하고 암호화된 채널을 통해 교환될 수 있다. 서버에 대한 클라이언트의 인증은 추가 사용자 이름/암호 체계를 통하여 수행될 수 있다. TLS에서 인증서를 사용하는 것은 선택 사항이지만 대부분의 구현에서는 중간 CA(인증 기관) 체인과 끝에 루트 CA에서 서명한 서버 인증서를 사용한다. 이를 위해서는 서버에 유효한 인증서가 있어야 하며, 이 인증서는 최종적으로 루트 CA에서 서명하고 TLS 클라이언트에 알려져 있다. 이 솔루션은 클라이언트에 서버 인증을 제공하지만 클라이언트는 서버에 대해 인증되지 않을 수 있다. TLS 인증을 위한 TLS 핸드셰이크 동작 방법은 아래와 같을 수 있다. 1. 클라이언트는 TLS “ClientHello” 레코드로 TLS 세션을 시작할 수 있다. 레코드에는 지원되는 암호 제 품군 목록이 포함될 수 있다. 2. 서버는 선택된 암호 제품군을 포함하는 TLS “ServerHello” 레코드로 응답할 수 있다. hello exchange 후 클라이언트와 서버 모두 프로토콜 버전, 세션 ID, 암호 제품군 및 압축 사용에 동의 할 수 있다. 또한 클라이언트는 클라이언트 랜덤(client_random)을 생성하고, 서버는 서버 랜덤 (server_random)을 생성할 수 있다. 3. 서버는 Cerificate, ServerKeyExchange, CertificateRequest 및 ServerHelloDone를 포함하는 TLS 레코 드를 클라이언트에 전송할 수 있다. 4. 클라이언트는 Certificate, ClientKeyExchange, CertificateVerify, ChangeCipherSpec 및 Finished를 포함하는 TLS 레코드를 서버에 전송할 수 있다. 5. 서버는 ChangeCipherSpec 및 Finished를 포함하는 TLS 레코드로 응답할 수 있다. 이 때, 클라이언트 와 서버는 공통의 사전 마스터 비밀(Key Exchange의 결과로)과 대칭 암호화 키 역할을 하는 마스터 시크릿에 동의할 수 있다. 6. TLS 핸드셰이크가 완료되고, 클라이언트와 서버 모두 보안 암호화된 채널을 통해 애플리케이션 데 이터를 교환할 수 있다. 도 3은, 다양한 실시예에 따른 전자 장치와 모바일코어 사이의 TLS-AKA 인증 시스템을 도시한 도면 이다. 다양한 실시예에 따른 TLS-AKA 인증 시스템은, 전자 장치와 모바일코어 사이의 TLS 인증에 있어서, TLS 핸드셰이크 단계에서 AKA 인증을 수행하는 시스템일 수 있다. 일 실시예에 따르면, 전자 장치와 모바일코어는 TLS 핸드셰이크 단계에서 AKA 메시지를 상호 전송할 수 있다. 일 실시예에 따르면, 전자 장치와 모바일코어는 AKA 핸드셰이크단계에 대칭 암호화 키에 대한 암호 화 자료를 파생할 수 있다. 일 실시예에 따르면, 전자 장치와 모바일코어는 파생된 암호화 자료에 기반하여 TLS 대칭 암호화 키 를 계산할 수 있다. 일 실시예에 따르면, 전자 장치와 모바일코어는, TLS 핸드셰이크가 완료된 이후에 TLS 애플리케이션 데이터를 교환할 수 있다. 이에 따라, TLS-AKA 인증 시스템은, PKI 유지 관리 오버헤드를 제거하고, 상호 인증을 제공하고, 보안을 향상하 고, 다양한 서비스의 사용을 가능하게 할 수 있다. 도 4는, 다양한 실시예에 따른 전자 장치와 모바일코어 사이의 TLS-AKA인증 시스템을 도시한 도면이 다. 다양한 실시예에 따른 TLS-AKA 인증 시스템은, 전자 장치와 모바일코어 사이의 TLS 세션 설정을 위 해 AKA 공유 자격 증명, 알고리즘 및/또는 절차를 사용하는 시스템일 수 있다. 다양한 실시예에 따르면, 전자 장치는 xSIM을 포함할 수 있다. 예를 들어, xSIM은 SIM(2G 네트 워크용), USIM(3G 네트워크용), ISIM(IMS용)과 같은 다양한 SIM 애플리케이션을 식별하는 SIM(Subscriber Identity Module)일 수 있다. xSIM은 전자 장치 내 UICC(Universal Integrated Circuit Card) 카드 에 포함될 수 있다. UICC(Universal Integrated Circuit Card) 카드는 전자 장치의 인증을 위하여 전자 장치에 삽입되는 칩 카드일 수 있다. 다양한 실시예에 따르면, 모바일코어는 U-AUTH를 포함할 수 있다. U-AUTH는 모바일 코어 내의 관리 장치로, AuC, HLS, HSS, UDM 또는 UDR일 수 있다. 일 실시예에 따른 TLS-AKA 인증 시스템에서, AKA에 의하여 생성된 암호화 자료는 전자 장치와 모바일코어 사이의 TLS 핸드셰이크에 사용되어, 전자 장치와 모바일코어 사이의 상호 신뢰 관계를 설정 할 수 있다. 이에 따라, TLS-AKA 인증 시스템은, 전자 장치와 모바일코어 사이의 TLS 핸드셰이크에 서 PKI 및 인증서는 필요하지 않을 수 있다. xSIM 및 U-AUTH는 현재 표준 및 사양에서 설명하는 AKA 액세스 인증(NAS(Non-Access Stratum) 계층 및/또는 IP 계층), TLS 핸드셰이크 및/또는 세션 설정을 수행할 수 있다. 일 실시예에 따른 전자 장치는 3GPP 사양에 따라 AKA 절차를 사용하여 네트워크에 연결한 다음, TLS 서버 와 TLS-AKA 인증 시스템을 이용하여 TLS 세션을 설정할 수 있다. 다양한 실시예에 따르면, TLS-AKA 인증 시스템은 AKA에 사용되는 xSIM, xSIM API 및 TLS 클라이언트 를 포함하는 전자 장치와 AKA에 사용되는 모바일 코어 인터페이스 및 TLS 서버를 포함하 는 모바일코어 사이의 확장된 TLS 핸드셰이크(TLS extended handshake, 402)에 관한 것일 수 있다. TLS 클라이언트와 xSIM의 통신은 표준 AKA 절차의 일부인 전자 장치 내부의 제어 트래픽일 수 있다. 확장된 TLS 핸드셰이크는 공통 인터넷 IP 데이터플레인을 통한 제어 트래픽일 수 있다. TLS 서버와 U-AUTH의 통신은 사업자 코어 네트워크 내의 제어 평면을 통한 제어 트래픽일 수 있다. 확장된 TLS 핸드셰이크가 완료된 후, 전자 장치와 모바일코어는 공통 인터넷 IP 데이터플레인을 통 과하는 데이터 트래픽을 수행할 수 있다. 다양한 실시예에 따르면, TLS-AKA 시스템은 비-3GPP 네트워크를 통해 설정될 수 있으므로 모든 네트워크 베어러 에서 발생할 수 있는 확장 TLS 핸드셰이크를 통해 터널링될 수 있고, 모바일 로밍 또는 Wi-Fi를 통해 제공될 수 있는 인터넷 액세스가 있는 전자 장치에서 사용 가능하며, 셀룰러 네트워크 액세스가 필요하지 않을 수 있 다. 다양한 실시예에 따르면, TLS-AKA 시스템은, 이동통신사 고객 서비스에 사용될 수 있다. 이동통신사(예 : 모바 일코어)는 일반적으로 웹 애플리케이션(예 : 애플리케이션 클라이언트)을 통해 사용자 서비스를 제 공하고, 전담 지원을 받으려면 웹 앱(예 : 애플리케이션 서버)에서 사용자(예 : 전자 장치)을 식별 한다. 일반적으로, 이동통신사의 사용자(예 : 전자 장치) 식별은 사용자 이름/비밀번호 인증을 통해 이루 어진다. TLS-AKA 시스템에서는, 이동통신사의 사용자(예 : 전자 장치) 식별은 TLS 핸드셰이크 내에서 인증 될 수 있다.다양한 실시예에 따르면, TLS-AKA 시스템은, RCS(Rich Communication Services) 등록 서비스에 사용될 수 있다. 이동통신사(예 : 모바일코어)는 고객에게 메시징, 통화, 프레즌스 등과 관련된 RCS 서비스를 제공 한다. 전자 장치의 RCS 앱(예 : 어플리케이션 클라이언트)은 일반적으로 TLS를 통해 네트워크와 통신 할 수 있다. 일반적으로, RCS 등록은 전자 장치의 RCS 앱(예 : 어플리케이션 클라이언트)은 네트워크 의 RCS 서버와 TLS 세션을 설정하고, 사용자 이름/비밀번호 인증으로 RCS 서버(예 : 어플리케이션 서버) 에 인증하여 수행된다. TLS-AKA 시스템에서는, RCS 서버 인증은 TLS 핸드셰이크 내에서 수행될 수 있다. 다양한 실시예에 따르면, TLS-AKA 시스템은, 5G 네트워크에서 IoT, V2X 및 HTMC 슬라이스에 대한 통신 보안에 사용될 수 있다. 3GPP TS 23.501에 따르면 5G 아키텍처는 일부 특정 서비스 전용 네트워크 슬라이스(예 : MIoT Massive IoT 서 비스, V2X Vehicle-to-Everything 서비스(TS 23.287 참조), HMTC 고성능 기계 유형 통신 서비스)가 있을 수 있 다. xSIM UICC가 장착된 IoT 센서는 전용 애플리케이션 서버와 직접 상호 인증된 TLS 세션을 설정할 수 있다. TLS- AKA 시스템이 IoT 보안은, 센서에 대한 보안 자격 증명 관련 정보를 미리 구성할 필요가 없으므로 배포 프로세 스를 크게 간소화할 수 있다. 인증은 액세스 불가지론적이므로 셀룰러 및 Wi-Fi를 포함한 모든 종류의 무선 액 세스에서 작동할 수 있고, 비 3GPP 무선 액세스는 EAP와 같은 특정 기능을 지원할 필요가 없다. V2X는 차량 셀룰러 장치가 전용 애플리케이션 서버에 직접 TLS를 통해 인증할 수 있기 때문에 TLS-AKA 시스템이 적용될 수 있다. 3GPP TS 22.261 5G 시스템에 대한 서비스 요구 사항에는 IoT, VR 또는 V2X와 같은 서비스에 대한 5G 시스템에 대한 요구 사항이 포함되어 있다. 구체적으로, 8.3절 인증 상태에는 \"5G 시스템은 3GPP 자격 증명을 사용하여 비3GPP 액세스 기술을 통한 인증을 지원할 수 있어야 한다.\" 내용이 개시되어 있다. TLS-AKA 시스템은, AKA 모드, 패스트 모드 및/또는 DH 모드로 동작할 수 있다. AKA 모드는 AKA 방식만 사용되는 모드, 패스트 모드는 AKA 모드를 단순화한 모드, DH 모드는 Diffie-Hellman 교 환에서 TLS 암호화 키가 파생되는 모드일 수 있다. 도 5a 및 도 5b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, AKA 모드인 경우 전자의 장치와 모바일코어 사이의 동작 흐름을 도시한 도면이다. AKA 모드는, TLS-AKA 시스템에서, AKA 방식만 사용되는 모드로, 모든 암호화 자료는 AKA 절차에서 파생되고, 비 대칭 키 암호화나 클라이언트/서버 키 교환 TLS 레코드가 사용되지 않는 모드일 수 있다. 또한, AKA 모드에서는 AKA는 TLS 클라이언트 및 TLS 서버의 “Hello” 메시지에만 사용될 수 있다. AKA 모드에서 TLS 암호화 키는 AKA IK(Integrity Key) 및 CK(Cipher Key) 토큰에서 파생되며, 마지막 응답 메 시지는 RES(Response)/XRES(Expected Response) AKA 토큰을 기반으로 하는 매개변수의 추가 인증을 제공할 수 있다. AKA 모드에서는, 동작을 수행하기 위하여 지정된 사양(예 : 3GPP)을 추가로 정의할 수 있다. 예를 들어, TLS 사 양은 클라이언트(예 : 전자 장치) 및 서버(예 : TLS 서버)의 “Hello” 메시지를 AKA 인식 TLS로 정의할 수 있다. 예를 들어, 앱 서버는, 동작 502를 위한 TLS 서버와 통신 기능, 동작 503, 504를 위한 U-AUTH 및 모바일 코어와의 통신 기능, 예상 응답(XRES)을 계산하고 이를 전자 장치로부 터 수신된 응답(RES)과 비교하여 전자 장치를 인증하는 기능을 수행할 수 있다. 예를 들어, TLS-AKA 시스 템에서는, 앱 서버와 U-AUTH 사이의 통신을 위해 3GPP 사양에 새로운 플로우을 정의할 수 있다. 다양한 실시예에 따르면, 동작 501에서, 전자 장치는 TLS 서버와 TLS 세션을 설정할 수 있다. 전자 장치는 [ID], [realm] 및 [options]이 포함된 확장된 TLS 클라이언트 “Hello” 메시지(TLS client extend Hello)를 TLS 서버로 전송할 수 있다. 다양한 실시예에 따르면, 동작 502에서, TLS 서버는 [ID]와 [realm]을 앱 서버로 전달할 수 있다. 다양한 실시예에 따르면, 동작 503에서, 앱 서버는 [ID]가 포함된 메시지를 U-AUTH로 전송할 수 있 다. U-AUTH의 대상 노드는 [realm]에 의해 결정될 수 있다. 다양한 실시예에 따르면, 동작 504에서, U-AUTH는 전달된 [ID]를 기반으로 AKA 절차에 따라 [RAND](Random Network Challenge), [AUTN](AUthentication TokeN), [XRES](Expected Response), [IK](Integrity Key) 및 [CK](Cipher Key)를 계산하여 앱 서버에 전달할 수 있다. 다양한 실시예에 따르면, 동작 505에서, 앱 서버는 [XRES](Expected Response)를 유지하고 나머지 토큰 을 TLS 서버로 전달할 수 있다. 다양한 실시예에 따르면, 동작 506에서, TLS 서버는 [IK](Integrity Key) 및 [CK](Cipher Key)를 유지하 고 확장된 TLS 서버 “Hello” 메시지(TLS server extended Hello)로 전자 장치에 응답할 수 있다. “ Hello” 메시지에는 [ID], [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)이 포함될 수 있다. 다양한 실시예에 따르면, 동작 507에서, 전자 장치는 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)을 AKA 절차에 따라 UICC의 xSIM에 전달할 수 있다. 다양한 실시예에 따르면, 동작 508에서, xSIM은 네트워크가 전자 장치에 인증될 때의 AKA 절차에 따라 [MAC](Message Authentication Code)/XMAC(Expected Message Authentication Code) 및 [SQN] 일치를 통해 메 시지를 확인할 수있다. 다양한 실시예에 따르면, 동작 509에서, xSIM은 [RAND] 및 [SQN]에 기반하여 [IK](Integrity Key), [CK](Cipher Key)및 [RES](Response)를 계산하고 전자 장치로 반환할 수 있다. 그 순간부터 전자 장치 와 TLS 서버 모두 공통 [IK](Integrity Key) 및 [CK](Cipher Key) 암호화 자료를 가질 수 있다. 다양한 실시예에 따르면, 동작 510에서, 전자 장치와 TLS 서버는 공통 [IK](Integrity Key), [CK](Cipher Key) 토큰의 기능으로 공통 TLS 사전 마스터-비밀(derivePre-MasterSecret)을 유도할 수 있다. 다양한 실시예에 따르면, 동작 511에서, 전자 장치와 TLS 서버는 TLS 암호화 자료 (PreMasterSecret)를 설정하고 TLS 매개변수를 동의할 수 있다. 동작 511은, 표준 TLS 핸드셰이크 내에서 키 교 환이 완료된 순간에 대응될 수 있다. 다양한 실시예에 따르면, 동작 512에서, 마스터 비밀(MasterSecret)은 선택된 암호 제품군 및 표준 TLS 절차에 따라 키 확장 기능에 의해 파생될 수 있다. 다양한 실시예에 따르면, 동작 513에서, 전자 장치와 TLS 서버는 TLS ChangeCipherSpec 메시지를 교환하고 암호화된 데이터 채널(encrypted channel)을 설정할 수 있다. AKA 방식을 반영하므로, TLS Finished 메시지는 ChangeCipherSpec 직후에 전송되지 않는다. 다양한 실시예에 따르면, 동작 514에서, 전자 장치는 IMS AKA 절차에서와 같이 random cononce value를 계산할 수 있다. 다양한 실시예에 따르면, 동작 515에서, 전자 장치는 응답 필드는 IMS AKA와 유사하게 계산할 수 있다. 다양한 실시예에 따르면, 동작 516에서, 전자 장치는 [ID], [realm], [RES], [cnonce] [RAND] 및 [AUTN] 을 포함하는 응답(response)을 TLS 서버로 전달할 수 있다. 응답 메시지는 암호화된 채널을 통해 전송될 수 있다. 다양한 실시예에 따르면, 동작 517에서, TLS 서버는 응답 메시지를 해독하고 앱 서버로 전달할 수 있다. 다양한 실시예에 따르면, 동작 518에서, 앱 서버는 [XRES](Expected Response) 및 기타 전달된 토큰을 사용하여 응답(response)을 확인할 수 있다. 동작 518에서 전자 장치는 모바일 코어에 인증될 수 있 다. 다양한 실시예에 따르면, 동작 519에서, 앱 서버가 성공적으로 응답을 확인하면 TLS 서버에 수락 메시지(accept)를 전송할 수 있다. TLS 서버는 완료 메시지(TLS finished)를 전자 장치로 전송할 수 있다. 다양한 실시예에 따르면, 동작 520에서, 전자 장치는 TLS 서버에 완료 메시지(TLS finished)를 전송 할 수 있다. 도 6a 및 도 6b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, 패스트 모드의 동작 흐름을 도시한 도면이다. 패스트 모드는 AKA 모드와 유사하지만 보다 단순화된 모드일 수 있다. 패스트 모드에서, TLS 암호화 키는 AKA 모드에서와 같이 AKA IK 및 CK 토큰 형식으로 파생될 수 있다. 계산되면 즉시 사용되며 더 이상의 검증은 수행되지 않을 수 있다. 패스트 모드는 보안 수준 요구 사항이 완화될 수 있는 CPU 리소스가 제한된 클라이언트에서 사용될 수 있다. 예 를 들어, AKA 모드는 뱅킹 애플리케이션에 적합하고 패스트 모드는 IoT 애플리케이션에 적합한 선택일 수 있습 니다. 패스트 모드의 핸드셰이크는 2개의 Hello 메시지와 2개의 ChangeSipherSpec/Finished 메시지로 구성되며, AKA 절차가 TLS Hello를 통해 실행되기 때문에 매우 짧고 가중될 수 있다. 또한, 비대칭 키 계산이 없으므로 CPU 경 제적일 수 있다. 동작 601에서, 전자 장치는 TLS 서버와 TLS 세션을 설정할 수 있다. 전자 장치는 [ID], [realm] 및 [options]이 포함된 확장된 TLS 클라이언트 “Hello” 메시지(TLS client Extended Hello)를 TLS 서버/앱 서버로 전송할 수 있다. 동작 602에서, TLS 서버/앱 서버는 [ID]가 포함된 메시지를 U-AUTH로 전송할 수 있다. U- AUTH의 노드는 [realm]에 의해 결정될 수 있다. 동작 603에서, U-AUTH는 전달된 식별자를 기반으로 AKA 절차에 따라 [RAND](Random Network Challenge), [AUTN](AUthentication TokeN), [XRES](Expected Response), [IK](Integrity Key) 및 [CK](Cipher Key)를 계 산하여 TLS 서버/앱 서버로 전달할 수 있다. 동작 604에서, TLS 서버/앱 서버는 [IK](Integrity Key) 및 [CK](Cipher Key)를 유지하고 나머지 토큰을 전자 장치로 전달할 수 있다. 동작 605에서, 전자 장치는 AKA 절차에 따라 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)을 UICC xSIM에 전달할 수 있다. 동작 606에서, xSIM은 네트워크가 전자 장치에 인증될 때의 AKA 절차에 따라 [MAC](Message Authentication Code)/XMAC(Expected Message Authentication Code) 및 [SQN] 일치를 통해 메시지를 확인할 수 있다. 동작 607에서, xSIM은 [IK](Integrity Key), [CK](Cipher Key)및 [RES](Response)를 계산하여 전자 장치 에 반환할 수 있다. 그 순간부터 전자 장치 및 TLS 서버 모두 공통 [IK](Integrity Key) 및 [CK](Cipher Key) 암호화 자료를 가질 수 있다. 동작 608에서, 전자 장치 및 TLS 서버/앱 서버는 공통 [IK](Integrity Key), [CK](Cipher Key) 토큰의 기능으로 공통 TLS 사전 마스터-비밀(derivePreMasterSecret)을 유도할 수 있다 동작 609에서, TLS 암호화 자료(preMasterSecret)가 설정되고 TLS 매개변수가 동의될 수 있다. 동작 609는 표준 TLS 핸드셰이크 내에서 키 교환이 완료된 동작에 대응될 수 있다. 동작 610에서, 마스터 비밀(MasterSecret)은 선택된 암호 제품군 및 표준 TLS 절차에 따라 키 확장 기능에 의해 파생될 수 있다. 동작 611에서, 전자 장치 및 TLS 서버는 TLS ChangeCipherSpec 및 Finished 메시지를 교환하고 암 호화된 데이터 채널(encrypted channel)을 설정할 수 있다. TLS 서버/앱 서버는 전자 장치로 부터 종료 메시지(Finished)를 수신하면 메시지를 검증할 수 있다. 종료 메시지(Finished)는 암호화된 채널 (encrypted channel)을 통해 전송되므로, 메시지를 해독하기 위하여 많은 IK, CK가 필요할 수 있다. 두 번째로 완성된 메시지의 본문에는 TLS 서버/앱 서버에서 계산한 핸드셰이크 다이제스트와 비교되는 전체 핸드셰이크 다이제스트가 포함될 수 있다. 동작 611에서 전자 장치는 모바일코어에 인증될 수 있다. 도 7a 및 도 7b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, DH 모드의 동작 흐름을 도시한 도면이다. DH(Diffie-Hellman) 모드는, TLS-AKA 시스템에서, TLS 암호화 키가 TLS 클라이언트/서버 키 교환 메시지를 사 용하여 Diffie-Hellman 교환에서 파생되는 모드일 수 있다. D-H 교환은 AKA IK, CK 및 RES 토큰에서 파생된 SIGK에 의해 서명될 수 있다.DH 모드에서의 핸드셰이크는 표준 TLS 핸드셰이크와 유사하나, AKA 파생 키가 RSA/PKI 대신 DH 서명에 사용된다 는 것에 차이가 있다. DH 모드는 AKA 모드 또는 표준 TLS와 유사한 높은 수준의 보안을 제공할 수 있다. DH 모드는 제시된 3가지 모드 중 가장 CPU 집약적이지만, 표준 TLS 핸드셰이크가 최소한의 범위에서 변경되기 때문에 구현이 가장 쉬울 수 있다. 동작 701에서, 전자 장치는 TLS 서버와 TLS 세션을 설정할 수 있다. 전자 장치는 [ID], [realm] 및 [options]이 포함된 확장된 TLS 클라이언트 “Hello” 메시지(TLS client extended Hello)를 TLS 서버로 전송할 수 있다. 동작 702에서, TLS 서버는 [ID]와 [realm]을 앱 서버로 전달할 수 있다. 동작 703에서, 앱 서버는 [ID] 포함된 메시지를 U-AUTH로 전송할 수 있다. U-AUTH의 노드는 [realm]에 의해 결정될 수 있다. 동작 704에서, U-AUTH는 전달된 식별자를 기반으로 AKA 절차에 따라 [RAND](Random Network Challenge), [AUTN](AUthentication TokeN), [XRES](Expected Response), [IK](Integrity Key) 및 [CK](Cipher Key)를 계 산하고 이를 다시 앱 서버로 전달할 수 있다. 동작 705에서, 앱 서버는 서명 키 SIGK를 [XRES(Expected Response), IK(Integrity Key), CK(Cipher Key)]의 함수로 계산할 수 있다. 동작 706에서, 앱 서버는 [ID], [RAND](Random Network Challenge), [AUTN](AUthentication TokeN) 및 [SIGK]를 TLS 서버로 전달할 수 있다. 동작 707에서, TLS 서버는 [SIGK]를 유지하고 [ID], [RAND](Random Network Challenge), [AUTN](AUthentication TokeN) 토큰을 사용하여 확장된 TLS 서버 “Hello” 메시지(TLS server Extended Hello)를 전자 장치에 전송할 수 있다. “Hello” 메시지는 SIGK로 서명될 수 있다. 동작 708에서, TLS 서버는 SIGK로 서명된 TLS 서버 키 교환 메시지를 전자 장치로 전송할 수 있다. 동작 709에서, 전자 장치는 UICC의 xSIM에 [RAND](Random Network Challenge) 및 [AUTN](AUthentication TokeN)을 전송할 수 있다. 동작 710에서, xSIM은 [AUTN](AUthentication TokeN) 토큰 내에서 전달된 [MAC](Message Authentication Code) 및 [SQN]을 검증할 수 있다. 동작 710에서 네트워크는 전자 장치에 대해 인증될 수 있다. 동작 711에서, xSIM은 [RES](Response), [IK](Integrity Key) 및 [CK](Cipher Key)를 계산하여 전자 장치 로 보낼 수 있다. 동작 712에서, 전자 장치는 TLS 서버에서 동작 705에 따라 계산한 값과 동일한 값으로 SIGK를 계산 할 수 있다. 동작 713에서, 전자 장치는 최근에 계산된 SIGK를 사용하여 확장된 TLS 서버 “Hello”(TLS server extended Hello) 및 TLS 서버 키 교환(TLS server key exchange) 서명을 확인할 수 있다. 동작 714에서, 전자 장치는 SIGK로 서명된 TLS 클라이언트 키 교환을 전송할 수 있다. 동작 715에서, TLS 서버는 SIGK와 TLS 클라이언트 키 교환의 유효성을 검사하고 메시지를 처리할 수 있다. 동작 715에서 Diffie-Hellman 교환이 완료될 수 있다. 동작 716에서, 추가 TLS 설정은 표준 TLS와 동일하게 수행되며 마지막에 ChangeCipherSpec/Finished가 교환될 수 있다. TLS 핸드셰이크가 완료되고 전자 장치와 TLS 서버 사이에 암호화된 데이터 채널이 설정될 수 있다. 이 단계에서, 장치는 모바일코어에 인증될 수 있다. 도 8a는, 다양한 실시예에 따른 TLS-AKA 시스템을 도시한 도면이다. 도 8a에 도시된 TLS-AKA 시스템은, 서드파티로 확장된 시스템일 수 있다. 다양한 실시예에 따르면, TLS 서버는 서드 파티 애플리케이션 서버에 속할 수 있고, 모바일 코어 는 NEF(Network Exposure Function) 노드를 통해 ID 서비스를 제공할 수 있다. (NEF와 관련된 자세한 내용은 TS 23.501 5G 시스템용 시스템 아키텍처 5.20절 및 6.2.5절을 참조) AKA 교환은 TLS 서버, NEF 인터페이스 및 NEF 자체를 통하여 TLS 클라이언트와 U- AUTH 사이에 발생할 수 있다. NEF 인터페이스는 NEF 네트워크와 통신할 수 있도록 TLS 서버 내에서 구현될 수 있다. AKA 교환이 완료되면 TLS 클라이언트와 TLS 서버는 공통 암호화 자료를 계산하고 TLS 세션을 설정할 수 있다. TLS 암호화 채널을 통한 추가 통신은 모바일 코어의 참여 없이 발생할 수 있다. 예를 들어, 전자 장치 는 WiFi를 통해서도 연결할 수 있고, 셀룰러 데이터가 필요하지 않을 수 있다. 다양한 실시예에 따르면, 도 8a에 도시된 TLS-AKA 시스템은, UAS(Unmanned Aerial System)에서 UTM(Uncrewed Aerial System Traffic Management)으로의 통신에 적용될 수 있다. 3GPP TS 22.125의 \"3GPP의 무인 항공 시스템(UAS) 지원\"에서, UAV는 무인항공기인 드론을 지시할 수 있다. 드론 에는 인간 조종사가 탑승하지 않으며 UAV 컨트롤러를 통해 원격으로 제어될 수 있다. UAV 및 UAV 컨트롤러(TS 22.125에 따름)는 UAS를 구성할 수 있다. UAS는 UTM - Unmanned Aerial System Traffic Management에서 관리할 수 있다. TS 22.125 5.1절은, UTM에 대한 UAS의 원격 식별에 대한 일반 요구 사항을 정의하고, TS 22.125 5.4 절은 UTM에서 UAS의 원격 식별을 위한 보안 요구 사항을 정의한다. 예를 들어, TLS-AKA 시스템이 적용된 UAS(Unmanned Aerial System)에서 UTM(Uncrewed Aerial System Traffic Management)으로의 통신에서는, UTM은 서드 파티 서버에 대응되고, UAS는 전자 장치에 대응되고, UAS 어플리케이션은 어플리케이션 클라이언트에 대응되어 적용될 수 있다. 도 8b는, 다양한 실시예에 따른 TLS-AKA 시스템을 도시한 도면이다. 도 8b에 도시된 TLS-AKA 시스템은, 서드파티로 확장 및 2FA(이중 인증 절차, two-factor authentication)가 적 용된 시스템일 수 있다. 다양한 실시예에 따르면, 서드파티 애플리케이션 서버는 모바일 코어가 제공하는 인증 서비스를 사 용할 수 있고, 기존의 사용자 이름/암호(1510, 1520) 인증을 사용할 수 있다. 2FA는, 클라이언트(예 : 전자 장치) 상호 인증이 TLS-AKA 시스템의 사용에 의해 달성되고, 사용자 인증은 기존의 사용자 이름/암호 체계(1510, 1520)를 사용하여 이루어질 수 있다. 이에 따라 기존의 사용자 인증은 TLS-AKA 시스템의 클라이언트 인증으로 강화되어 강력한 2FA를 구현할 수 있다. 다양한 실시예에 따르면, 도 8b에 도시된 TLS-AKA 시스템은, 2FA를 통한 뱅킹 애플리케이션에 적용될 수 있다. 모바일 뱅킹은 높은 보안 수준을 달성하기 위해 2단계 인증(2FA)을 사용할 수 있다. 2단계 인증(2FA)은 '사용자 가 가지고 있는 것' 및 '알고 있는 것의 원칙'을 기반으로 할 수 있다. 원칙은 SMS로 사용자 UE에게 전송되는 추가 핀 코드로 구현될 수 있다. 이 경우 사용자는 사용자 이름/비밀번호(사용자가 알고 있는 것)를 사용 하여 뱅킹 애플리케이션에 로그인하고 SMS 코드(사용자가 가지고 있는 것, 이 경우 사용자는 xSIM UICC 카 드를 가짐)를 통해 추가 인증을 받을 수 있다. 예를 들어, TLS-AKA 시스템이 적용된 모바일 뱅킹 2단계 인증(2FA)에서는, 모바일 뱅킹 서버는 서드 파티 어플 리케이션 서버에 대응 될 수 있으며, 2단계 인증은 사용자가 사용자 이름/비밀번호를 사용하여 은 행에 로그인(사용자가 알고 있는 것)하면, TLS 서버 및 TLS 클라이언트 사이의 TLS 핸드셰이크(사용 자가 가지고 있는 것)에 의하여 수행될 수 있다. 따라서 수신된 SMS에서 암호를 복사할 필요(기존의 사용자가 가지고 있는 것)가 없으므로 사용자에게 추가 조치가 필요하지 않을 수 있다. 또한, TLS-AKA 시스템이 뱅킹 애 플리케이션에 적용되는 경우, 은행은 사용자에게도 인증되기 때문에 보안 수준도 더 높을 수 있다. 또한, 가짜 은행이 모바일 뱅킹 앱과 TLS 핸드셰이크를 설정할 수 없기 때문에 피싱 공격에 더 강할 수 있다. 도 8c는, 다양한 실시예에 따른 TLS-AKA 시스템을 도시한 도면이다. 도 8c에 도시된 TLS-AKA 시스템은, DNS(Domain Name System) 보안 시스템에 적용될 수 있다. 다양한 실시예에 따르면, TLS 서버는 DoH/DoT 서버에 속할 수 있다. DoT(DNS(Domain Name System) over TLS), DoH(DNS(Domain Name System) over HTTP)의 인터넷 보안에 있어서, DNSSEC 암호화를 사용하여 DNS 보안을 개선하기 위한 이니셔티브가 있다. 예를 들어, TLS-AKA 시스템이 적용된 DNS 보안 시스템은, TLS를 통해 DNS 쿼리를 전송할 수 있다. DNS 서버 는 TLS 서버에 의해 전달된 요청자 ID를 알고 있을 수 있고, 이를 기반으로 DNS를 기반으로 하는 여러 부가 가치 서비스에 TLS-AKA 시스템이 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2022-0052622", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면의 설명과 관련하여, 동일 또는 유사한 구성 요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있 다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블럭도이다. 도 2a는, 전자 장치와 모바일 네트워크 사이의 AKA 인증 동작을 도시한 도면이다. 도 2b는, 클라이언트와 서버 사이의 TLS 인증 동작을 도시한 도면이다. 도 3은, 다양한 실시예에 따른 전자 장치와 모바일코어 사이의 TLS-AKA 인증 시스템을 도시한 도면 이다. 도 4는, 다양한 실시예에 따른 전자 장치와 모바일코어 사이의 TLS-AKA 인증 시스템을 도시한 도면 이다. 도 5a 및 도 5b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, AKA 모드인 경우 전자의 장치와 모바일코어 사이의 동작 흐름을 도시한 도면이다. 도 6a 및 도 6b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, 패스트 모드의 동작 흐름을 도시한 도면이다. 도 7a 및 도 7b는, 다양한 실시예에 따른 TLS-AKA 시스템에서, DH 모드의 동작 흐름을 도시한 도면이다. 도 8a, 도 8b 및 도 8c는, 다양한 실시예에 따른 TLS-AKA 시스템을 도시한 도면이다."}
