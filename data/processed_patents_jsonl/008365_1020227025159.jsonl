{"patent_id": "10-2022-7025159", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0110323", "출원번호": "10-2022-7025159", "발명의 명칭": "소프트웨어 개발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품 및 프로그램", "출원인": "베이징 바이두 넷컴 사이언스 테크놀로지 컴퍼니", "발명자": "왕, 추칭"}}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는보조 연구개발 기능을 인식하며;상기 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 상기 보조 연구개발기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하되, 상기 동작 요청은 상기 서비스 플랫폼으로 하여금상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 피드백하도록지시하기 위한 것이며; 상기 보조 연구개발 기능의 실행 결과를 취득하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 상기 보조 연구개발기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하되, 상기 동작 요청은 상기 서비스 플랫폼으로 하여금상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 피드백하도록지시하기 위한 것은,상기 보조 연구개발 기능이 코드 스캐닝일 경우, 현재 워크(Work) 영역 내의 파일을 취득하여, 처리될 개발 파일을 얻으며;코드 스캐닝 플랫폼으로 코드 스캐닝 요청을 발신하는 것을 포함하며, 상기 코드 스캐닝 요청은 상기 처리될 개발 파일을 포함하며, 상기 코드 스캐닝 요청은 상기 코드 스캐닝 플랫폼으로 하여금 상기 개발 파일에 대해 코드 스캐닝을 진행하여 코드 스캐닝 결과를 피드백하도록 지시하기 위한것이며,상기 보조 연구개발 기능의 실행 결과를 취득하는 것은,상기 개발 파일에 대한 코드 스캐닝 결과를 취득하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,상기 코드 스캐닝 결과는 결함 보고서를 포함하고, 상기 개발 파일에 대한 코드 스캐닝 결과를 취득한 후,상기 결함 보고서를 분석하여, 상기 개발 파일에서 결함의 위치를 결정하며;상기 개발 파일에서 결함의 위치에 따라, 상기 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행하는것을 더 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,상기 개발 파일에서 결함의 위치에 따라, 상기 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행한 후,공개특허 10-2022-0110323-3-라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 결함 정보를 디스플레이하는 것을 더 포함하는소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 3에 있어서,상기 개발 파일에 대한 코드 스캐닝 결과를 취득한 후,상기 결함 보고서의 링크 정보를 디스플레이하며;상기 결함 보고서의 링크 정보가 트리거될 경우, 상기 결함 보고서를 디스플레이 및/또는 다운로드하는 것을 더포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1 내지 청구항 5 중 어느 한 항에 있어서,상기 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 상기 보조 연구개발기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하되, 상기 동작 요청은 상기 서비스 플랫폼으로 하여금상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 피드백하도록지시하기 위한 것은,상기 보조 연구개발 기능이 컴파일링일 경우, 컴파일링 플랫폼으로 컴파일링 요청을 발신하되, 상기 컴파일링요청은 컴파일링될 코드의 정보를 포함하고, 상기 컴파일링 요청은 상기 컴파일링 플랫폼으로 하여금 상기 컴파일링될 코드를 컴파일링하여, 컴파일링 결과 파일을 얻도록 지시하기 위한 것을 포함하며,상기 보조 연구개발 기능의 실행 결과를 취득하는 것은,상기 컴파일링 결과 파일을 로컬 통합 개발 환경으로 자동으로 추출하는 것을 포함하는 소프트웨어 개발의 보조처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서,상기 컴파일링 요청은 또한 상기 컴파일링 플랫폼으로 하여금 컴파일링 로그를 기록하도록 지시하기 위한 것이고, 상기 컴파일링 플랫폼으로 컴파일링 요청을 발신한 후,상기 컴파일링 로그의 링크 정보를 디스플레이하며;상기 컴파일링 로그의 링크 정보가 트리거될 경우, 상기 컴파일링 로그를 디스플레이 및/또는 다운로드하는 것을 더 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "에 있어서,상기 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으로 결정할 경우, 로컬 통합 개발 환경에서상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 취득하는 것은,상기 보조 연구개발 기능이 코딩 사양 실시간 오류 정정일 경우, 현재 파일 중의 코딩 사양 문제를 실시간으로체크하며;상기 현재 파일에서, 상기 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서,상기 현재 파일에서, 상기 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이하는 것은,상기 현재 파일에서, 코딩 사양 문제가 있는 코드 행에 대해 라벨링을 진행하며;라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 코딩 사양 문제의 문제 설명 정보를 디스플레이하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 8 내지 청구항 10 중 어느 한 항에 있어서,상기 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으로 결정할 경우, 로컬 통합 개발 환경에서상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 취득하는 것은,상기 보조 연구개발 기능이 코딩 사양 포맷팅일 경우, 상기 현재 파일 중의 코딩 사양 문제에 대해 수정 처리를진행하는 단계를 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서,상기 현재 파일 중의 코딩 사양 문제에 대해 수정을 진행한 후, 상기 현재 파일에 대한 포맷팅 취소 동작에 응답하여, 상기 현재 파일을 상기 수정 처리 전으로 복구시키는 것을 더 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 1 내지 청구항 12 중 어느 한 항에 있어서,상기 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하것은,사용자가 입력한 보조 동작 명령 정보에 대해 자연 언어 처리를 진행하여, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정하는 단계를 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "공개특허 10-2022-0110323-5-청구항 13에 있어서,보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정할 수 없을 경우, 오류 알림 정보를 디스플레이하는것을 더 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 1 내지 청구항 14 중 어느 한 항에 있어서,상기 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 전에,로컬 통합 개발 환경의 개발 인터페이스에 대화 상자를 디스플레이하며;사용자가 상기 대화 상자에 입력한 보조 동작 명령 정보를 취득하는 것을 더 포함하는 소프트웨어 개발의 보조처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 15에 있어서,상기 보조 연구개발 기능의 실행 결과를 취득한 후,상기 대화 상자에서, 대화 인터랙션의 방식으로 상기 실행 결과를 디스플레이하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 15에 있어서,상기 보조 연구개발 기능에 대응되는 동작을 실행한 후, 상기 보조 연구개발 기능의 실행 결과를 취득하기전에, 상기 대화 상자에서 상기 보조 연구개발 기능이 실행중이라는 알림 정보를 디스플레이하는 것을 더 포함하는 소프트웨어 개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 1 내지 청구항 17 중 어느 한 항에 있어서,로컬 통합 개발 환경의 개발 인터페이스에 대화 상자를 디스플레이하기 전에,로컬 통합 개발 환경에서 지능형 연구개발 어시스턴트 플러그인을 설치하는 것을 더 포함하며,상기 지능형 연구개발 어시스턴트 플러그인은 소프트웨어 개발의 보조 처리를 구현하기 위한 것인 소프트웨어개발의 보조 처리 방법."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "내지 청구항 23 중 어느 한 항에 있어서,상기 제1 보조 모듈은,상기 보조 연구개발 기능이 컴파일링일 경우, 컴파일링 플랫폼으로 컴파일링 요청을 발신하기 위한 컴파일링 모듈을 포함하며,상기 컴파일링 요청은 컴파일링될 코드의 정보를 포함하고, 상기 컴파일링 요청은 상기 컴파일링 플랫폼으로 하여금 상기 컴파일링될 코드를 컴파일링하여, 컴파일링 결과 파일을 얻도록 지시하기 위한 것이며,상기 실행 결과 처리 모듈은,상기 컴파일링 결과 파일을 로컬 통합 개발 환경으로 자동으로 추출하기 위한 컴파일링 결과 처리 서브 모듈을포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 19에 있어서,상기 제1 보조 모듈은,상기 보조 연구개발 기능이 코드 스캐닝일 경우, 현재 워크(Work) 영역 내의 파일을 취득하여, 처리될 개발 파일을 얻으며, 코드 스캐닝 플랫폼으로 코드 스캐닝 요청을 발신하기 위한 코드 스캐닝 서브 모듈을 포함하고,상기 코드 스캐닝 요청은 상기 처리될 개발 파일을 포함하며, 상기 코드 스캐닝 요청은 상기 코드 스캐닝 플랫폼으로 하여금 상기 개발 파일에 대해 코드 스캐닝을 진행하여 코드 스캐닝 결과를 피드백하도록 지시하기 위한것이고,상기 실행 결과 처리 모듈은,상기 개발 파일에 대한 코드 스캐닝 결과를 취득하기 위한 코드 스캐닝 결과 처리 서브 모듈을 포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "청구항 20에 있어서,상기 코드 스캐닝 결과는 결함 보고서를 포함하고, 상기 코드 스캐닝 결과 처리 서브 모듈은 또한,상기 개발 파일에 대한 코드 스캐닝 결과를 취득한 후, 상기 결함 보고서를 분석하여, 상기 개발 파일에서 결함의 위치를 결정하며;상기 개발 파일에서 결함의 위치에 따라, 상기 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행하기위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "청구항 21에 있어서,상기 코드 스캐닝 결과 처리 서브 모듈은 또한,상기 개발 파일에서 결함의 위치에 따라, 상기 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행한 후,라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 결함 정보를 디스플레이하기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "청구항 21에 있어서,상기 코드 스캐닝 결과 처리 서브 모듈은 또한,상기 개발 파일에 대한 코드 스캐닝 결과를 취득한 후, 상기 결함 보고서의 링크 정보를 디스플레이하며;상기 결함 보고서의 링크 정보가 트리거될 경우, 상기 결함 보고서를 디스플레이 및/또는 다운로드하기 위한 것인 소프트웨어 개발의 보조 처리 기기.공개특허 10-2022-0110323-7-청구항 24"}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "청구항 24에 있어서,상기 컴파일링 요청은 또한, 상기 컴파일링 플랫폼으로 하여금 컴파일링 로그를 기록하도록 지시하기 위한 것이고,상기 컴파일링 결과 처리 서브 모듈은 또한,컴파일링 플랫폼으로 컴파일링 요청을 발신한 후, 상기 컴파일링 로그의 링크 정보를 디스플레이하고;상기 컴파일링 로그의 링크 정보가 트리거될 경우, 상기 컴파일링 로그를 디스플레이 및/또는 다운로드하기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "청구항 19 내지 청구항 25 중 어느 한 항에 있어서,상기 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으로 결정할 경우, 로컬 통합 개발 환경에서상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 취득하기 위한제2 보조 모듈을 더 포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "청구항 26에 있어서,상기 제2 보조 모듈은,상기 보조 연구개발 기능이 코딩 사양 실시간 오류 정정일 경우, 현재 파일 중의 코딩 사양 문제를 실시간으로체크하기 위한 코딩 사양 실시간 오류 정정 서브 모듈을 포함하며,상기 실행 결과 처리 모듈은,상기 현재 파일에서, 상기 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이하기 위한 코딩 사양 실시간 오류 정정 결과 처리 서브 모듈을 포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "청구항 27에 있어서,공개특허 10-2022-0110323-8-상기 코딩 사양 실시간 오류 정정 결과 처리 서브 모듈은 또한,상기 현재 파일에서, 코딩 사양 문제가 있는 코드 행에 대해 라벨링을 진행하고;라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 코딩 사양 문제의 문제 설명 정보를 디스플레이하기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "청구항 26 내지 청구항 28 중 어느 한 항에 있어서,상기 제2 보조 모듈은,상기 보조 연구개발 기능이 코딩 사양 포맷팅일 경우, 상기 현재 파일 중의 코딩 사양 문제에 대해 수정 처리를진행하기 위한 코딩 사양 포맷팅 서브 모듈을 포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "청구항 29에 있어서,상기 코딩 사양 포맷팅 서브 모듈은 또한,상기 현재 파일에 대한 포맷팅 취소 동작에 응답하여, 상기 현재 파일을 상기 수정 처리 전으로 복구시키기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_31", "content": "청구항 19 내지 청구항 30 중 어느 한 항에 있어서,상기 기능 인식 모듈은 또한,사용자가 입력한 보조 동작 명령 정보에 대해 자연 언어 처리를 진행하여, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정하기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_32", "content": "청구항 31에 있어서,상기 기능 인식 모듈은 또한,보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정할 수 없을 경우, 오류 알림 정보를 디스플레이하기위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_33", "content": "청구항 19 내지 청구항 32 중 어느 한 항에 있어서,상기 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 전에, 로컬 통합 개발 환경의 개발 인터페이스에 대화 상자를 디스플레이하며; 사용자가 상기 대화 상자에 입력한 보조 동작 명령 정보를 취득하기 위한 정보 입력 모듈을 더 포함하는 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_34", "content": "공개특허 10-2022-0110323-9-청구항 33에 있어서,상기 실행 결과 처리 모듈은 또한,상기 대화 상자에서, 대화 인터랙션의 방식으로 상기 실행 결과를 디스플레이하기 위한 것인 소프트웨어 개발의보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_35", "content": "청구항 33에 있어서,상기 실행 결과 처리 모듈은 또한,상기 대화 상자에서, 상기 보조 연구개발 기능이 실행중이라는 알림 정보를 디스플레이하기 위한 것인 소프트웨어 개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_36", "content": "청구항 19 내지 청구항 35 중 어느 한 항에 있어서,로컬 통합 개발 환경에서 지능형 연구개발 어시스턴트 플러그인을 설치하는 설치 모듈을 더 포함하며,상기 지능형 연구개발 어시스턴트 플러그인은 소프트웨어 개발의 보조 처리를 구현하기 위한 것인 소프트웨어개발의 보조 처리 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_37", "content": "적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신 연결되는 메모리;를 포함하며,상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저장되어 있고, 상기 명령어는 상기 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서로 하여금 청구항1 내지 청구항18 중어느 한 항에 따른 방법을 실행할 수 있게 하는 전자 기기."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_38", "content": "컴퓨터로 하여금 청구항1 내지 청구항18 중 어느 한 항에 따른 방법을 실행하게 하기 위한 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_39", "content": "컴퓨터 프로그램을 포함하며,상기 컴퓨터 프로그램은 프로세서에 의해 실행될 경우, 청구항1 내지 청구항18 중 어느 한 항에 따른 방법을 구현하는 컴퓨터 프로그램 제품."}
{"patent_id": "10-2022-7025159", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_40", "content": "프로그램 코드를 포함하며,컴퓨터에 의해 실행될 경우, 상기 프로그램 코드가 청구항1 내지 청구항18 중 어느 한 항에 따른 방법을 실행하는 컴퓨터 프로그램.공개특허 10-2022-0110323-10-"}
{"patent_id": "10-2022-7025159", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 소프트웨어 개발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품을 개시하며, 컴퓨터 기술 중의 소프트웨어 연구개발, 클라우드 서버 등 분야에 관한다. 구체적인 구현 방안은, 로컬 통합 개발 환경에서 하나 이상의 보조 연구개발 기능을 통합하고, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정 (뒷면에 계속)"}
{"patent_id": "10-2022-7025159", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 2021년 06월 22일에 중국특허청에 출원되고, 출원번호가 CN202110693141.6이며, 출원의 명칭이 \"소프 트웨어 개발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품\"인 중국 특허 출원의 우선권을 주장하며, 그 전부의 내용은 인용을 통해 본 출원에 결합된다. 본 개시는 컴퓨터 기술 중의 소프트웨어 연구개발, 클라우드 서버 등 분야에 관한 것으로, 특히 소프트웨어 개 발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품에 관한 것이다."}
{"patent_id": "10-2022-7025159", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "기존의 코드 스캐닝, 클라우드 컴파일링 등 검증 기능을 진행하기 위한 데브옵스(Devops) 툴은 다양하며, 각자 의 플랫폼에서, 개발된 코드 엔지니어링에 대한 대응되는 검증 기능을 구현한다. Devops 툴을 사용하여 대응되 는 검증 기능을 진행할 시, 개발자가 검증할 코드 등을 대응되는 플랫폼에 제출하여, 대응되는 플랫폼에서 코드 스캐닝 또는 컴파일링 등 검증 동작을 진행해야 하며, 툴 입구가 번잡하고, 인터랙션 로직이 유연하지 않아, 개 발자가 사용하기에 불편함으로 인하여, 소프트웨어 개발의 효율이 떨어지게 된다. 본 개시는 소프트웨어 개발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품을 제공한다. 본 개시의 제1 측면에 따르면, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하며; 상기 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 상기 보조 연구개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하되, 상기 동작 요청은 상기 서비스 플랫폼으로 하여금 상기 보조 연구개발 기능에 대응되는 동작을 실행하고 상기 보조 연구개발 기능의 실행 결과를 피드백하도록 지 시하기 위한 것이며; 상기 보조 연구개발 기능의 실행 결과를 취득하는 것을 포함하는 소프트웨어 개발의 보조 처리 방법을 제공한다. 본 개시의 제2 측면에 따르면, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 상기 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 위한 기능 인식 모듈; 상기 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 상기 보조 연구개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하기 위한 제1 보조 모듈; 상기 보조 연구개발 기능의 실행 결과를 취득하기 위한 실행 결과 처리 모듈;을 포함하며, 상기 동작 요청은 상기 서비스 플랫폼으로 하여금 상기 보조 연구개발 기능에 대응되는 동작을 실행하고, 상기 보조 연구개발 기능의 실행 결과를 피드백하도록 지시하기 위한 것인 소프트웨어 개발의 보조 처리 기기를 제공 한다. 본 개시의 제3 측면에 따르면, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신 연결되는 메모리;를 포함하며, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저장되어 있고, 상기 명령어는 상 기 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서로 하여금 제1 측면에 따른 방법을 실행할 수 있게 하는 전자 기기를 제공한다. 본 개시의 제4 측면에 따르면, 컴퓨터로 하여금 제1 측면에 따른 방법을 실행하게 하기 위한 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독가능 저장 매체를 제공한다. 본 개시의 제5 측면에 따르면, 컴퓨터 프로그램을 포함하며, 상기 컴퓨터 프로그램은 판독가능 저장 매체에 저 장되어 있고, 전자 기기의 적어도 하나의 프로세서는 상기 판독가능 저장 매체로부터 상기 컴퓨터 프로그램을읽을 수 있으며, 상기 적어도 하나의 프로세서는 상기 컴퓨터 프로그램을 실행하여 전자 기기로 하여금 제1 측 면에 따른 방법을 실행하게 하는 컴퓨터 프로그램 제품을 제공한다. 본 개시의 제6 측면에 따르면, 프로그램 코드를 포함하며, 컴퓨터에 의해 실행될 경우, 상기 프로그램 코드가 상기 임의의 실시예에 따른 방법을 실행하는 컴퓨터 프로그램을 제공한다. 본 개시에 따른 기술은 소프트웨어 개발의 효율을 향상한다. 이해해야 할 것은, 본 부분에서 설명되는 내용은 본 개시의 실시예의 핵심적인 특징 또는 중요한 특징을 표시하 기 위한 것이 아니며, 본 개시의 범위를 한정하기 위한 것도 아니다. 본 개시의 다른 특징은 아래의 명세서를 통해 쉽게 이해하게 될 것이다."}
{"patent_id": "10-2022-7025159", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래 도면을 결합하여 본 개시의 예시적인 실시예에 대해 설명한다. 이해를 돕기 위해, 상기 설명에는 본 개시 실시예의 다양한 세부사항을 포함하며, 이를 단지 예시적인 것으로 간주해야 한다. 따라서, 당업자는 본 개시의 범위 및 사상을 벗어나는 것이 없이, 여기에서 설명되는 실시예에 대해 다양한 변경 및 수정을 진행할 수 있음 을 인식해야 한다. 마찬가지로, 명확하고 간명한 설명을 위해, 아래의 설명에서 공지의 기능 및 구조에 대한 설 명은 생략한다. 본 개시는 소프트웨어 개발의 보조 처리 방법, 기기, 저장 매체 및 프로그램 제품을 제공하며, 컴퓨터 기술 중 의 소프트웨어 연구개발, 클라우드 서버 등 분야에 관하며, 소프트웨어 개발의 효율을 향상한다. 본 개시에 의해 제공되는 소프트웨어 개발의 보조 처리 방법은, 구체적으로 소프트웨어 개발을 진행할 시 사용 자(예를 들면, 연구개발자)가 사용하는 로컬 통합 개발 환경(Integrated Development Environment, IDE로 약칭), 예를 들면, VS Code, IDEA, PyCharm 등에 적용될 수 있다. 로컬 통합 개발 환경에서, 예를 들면, 코드 스캐닝, 컴파일링, 코딩 사양 자동 오류 정정 및 포맷팅 등 소프트웨어 개발의 보조 연구개발 기능을 제공함으 로써, 소프트웨어 개발의 다양한 보조 연구개발 기능을 사용자의 로컬 프로그래밍 현장에 부여하여, 연구개발 과정의 데이터 온라인화 및 능력 전치를 구현하며, 코드 스캐닝, 컴파일링, 코딩 사양 자동 오류 정정 및 포맷 팅 등 로컬 검증 능력을 해결하고, 개발 테스트의 전반적인 흐름을 연결하여, 사용자의 프로그래밍 현장과 효과 적으로 결합함으로써, 사용자의 연구개발 효율을 향상시킨다. 예시적으로, 상기 방법은 지능형 연구개발 어시스턴트 등 방식으로 구현할 수 있으며, 로컬 통합 개발 환경에서 지능형 연구개발 어시스턴트를 설치함으로써, 소프트웨어 개발의 보조 처리를 구현할 수 있다. 로컬 통합 개발 환경에서 지능형 연구개발 어시스턴트를 설치한 후의 개발 인터페이스는 도1에 도시된 바와 같아, 개발 인터페 이스에 대화 상자(dialog box)가 디스플레이될 수 있으며, 지능형 연구개발 어시스턴트는 상기 대화 상자를 통 해 사용자와의 대화식 인터랙션을 구현할 수 있다. 사용자는 상기 대화 상자에 지능형 연구개발 어시스턴트의명칭 또는 별명(예를 들면, 도1에 도시된 \" (와룡)\" 또는 \"virlon\")을 입력하여 지능형 연구개발 어시 스턴트를 웨이크업할 수 있고, 지능형 연구개발 어시스턴트는 웨이크업된 후 답장문구(도1에 도시된 바와 같은 (저는 당신의 연구개발 어시스턴트입니다. 무엇을 도와드릴까요? virlon은 무엇을 하면 될까요?)\")를 디스플레 이 할 수 있다. 사용자는 대화 상자에 보조 동작 명령 정보를 입력하여, 지능형 연구개발 어시스턴트를 트리거 하여 대응되는 보조 동작을 실행할 수도 있다. 예를 들면, 도1에 도시된 바와 같이 사용자는 보조 동작 명령 정 보 \" (도움말)\"을 입력하여, 지능형 연구개발 어시스턴트가 제공할 수 있는 보조 기능을 조회한다. 지능형 연구개발 어시스턴트는 대화 상자에 \" (도움말)\"에 대한 응답 결과 \" 입력하여, 지능형 연 구개발 어시스턴트가 제공할 수 있는 보조 기능을 조회한다. 지능형 연구개발 어시스턴트는 대화 상자에 \" |(virlon은 당신을 위해, 코드 스캐닝| 컴파일링| 코딩 사양 실시간 오류 정정의 시작| 코딩 사양 포맷팅|도움 말 문서|를 도와드릴 수 있습니다)\"를 디스플레이 할 수 있다. 또한, 도1에서는 단지 대화 상자가 개발 인터페이스의 코드 에디터 영역 하측에 디스플레이되는 경우만을 예로 들어 예시적으로 설명하나, 실제 적용에서, 대화 상자는 개발 인터페이스의 다른 위치에 디스플레이될 수 있고, 대화 상자의 크기, 위치, 형태는 실제 적용 장면의 수요에 따라 설정 및 조정될 수 있으며, 여기에서 구체적으 로 한정하지 않는다. 도2는 본 개시의 제1 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 방법의 흐름도이다. 본 실시예에 의 해 제공되는 방법은 구체적으로 소프트웨어 개발의 보조 처리 기기에 사용될 수 있다. 본 실시예에서는 보조 처 리 기기가 지능형 연구개발 어시스턴트인 것을 예로 들어, 예시적인 설명을 진행하나, 다른 실시예에서, 소프트 웨어 개발의 보조 처리 기기는 다른 방식을 적용하여 구현될 수도 있으며, 본 실시예는 여기에서 구체적으로 한 정하지 않는다. 도2에 도시된 바와 같이, 이 방법의 구체적인 단계는 아래와 같다. 단계S201에서, 로컬 통합 개발 환경에서, 사용자가에 의해 입력되는 보조 동작 명령 정보에 따라, 보조 동작 명 령 정보와 매칭되는 보조 연구개발 기능을 인식한다. 본 실시예에서, 로컬 통합 개발 환경에 하나 이상의 보조 연구개발 기능이 통합되어 있고, 개발 인터페이스에 정보 입력 영역이 제공되며, 사용자가 정보 입력 영역에 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식한다. 여기서, 각 보조 연구개발 기능은 모두 고유의 식별 정보를 가지며, 식별 정보를 통해 서로 다른 보조 연구개발 기능을 구분할 수 있다. 예를 들면, 보조 연구개발 기능의 명칭, 별명 등을 식별 정보로 할 수 있고, 사용자에 의해 쉽게 인식 및 기억 되는 보조 연구개발 기능의 다른 정보를 식별 정보로 할 수도 있으며, 구체적으로 실제 적용 장면에 따라 설정 할 수 있고, 여기에서 구체적으로 한정하지 않는다. 선택적으로, 사용자가 입력한 보조 동작 명령 정보가 보조 연구개발 기능의 식별 정보와 매칭될 경우, 보조 동 작 명령 정보는 보조 연구개발 기능과 매칭되는 것으로 결정한다. 단계S202에서, 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 보조 연구 개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하며, 동작 요청은 서비스 플랫폼으로 하여금 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 피드백하도록 지시하기 위한 것이다. 본 실시예에서, 로컬 통합 개발 환경에서 통합되는 보조 연구개발 기능은, 로컬에서 구현되지 않아도 되고, 보 조 연구개발 기능에 대응되는 서비스 플랫폼에 의해 구현될 수 있다. 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현될 경우, 사용자가 수동으로 조작할 필요없이, 지능 형 연구개발 어시스턴트가 자동으로 대응되는 서비스 플랫폼으로 대응되는 보조 연구개발 기능의 동작 요청을 발신한다. 여기서, 동작 요청은 서비스 플랫폼에서 보조 연구개발 기능에 대응되는 동작을 실행하는 데 필요한 데이터를 포함한다. 보조 연구개발 기능에 대응되는 서비스 플랫폼이 동작 요청을 수신한 후, 보조 연구개발 기능에 대응되는 동작 을 실행하여, 보조 연구개발 기능의 실행 결과를 얻으며, 보조 연구개발 기능의 실행 결과를 지능형 연구개발 어시스턴트에 피드백한다. 단계S203에서, 보조 연구개발 기능의 실행 결과를 취득한다. 지능형 연구개발 어시스턴트는 보조 연구개발 기능에 대응되는 서비스 플랫폼에서 피드백되는 보조 연구개발 기 능의 실행 결과를 취득한다. 본 실시예에서, 로컬 통합 개발 환경에서 하나 이상의 보조 연구개발 기능이 통합되어 있고, 로컬 통합 개발 환 경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하며; 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 인공 조작이 필 요없이, 보조 연구개발 기능에 대응되는 서비스 플랫폼으로 자동으로 동작 요청을 발신함으로써, 서비스 플랫폼 으로 하여금 동작 요청에 따라 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결 과를 피드백하도록 한다. 이로써, 보조 연구개발 기능의 실행 결과가 취득되고, 소프트웨어 개발의 보조 연구개 발 기능을 사용자의 로컬 프로그래밍 현장에 부여하는 것을 구현하며, 사용자의 프로그래밍 현장과 효과적으로 결합하여, 사용자의 연구개발 효율을 향상한다. 도3은 본 개시의 제2 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 방법의 흐름도이다. 상기 제1 실시 예의 기초에서, 본 실시예에서, 해당 소프트웨어 개발의 보조 처리 방법이 지능형 연구개발 어시스턴트의 방식 을 적용하여 구현되는 것을 예로 들어, 소프트웨어 개발의 보조 처리의 흐름을 예시적으로 설명한다. 본 실시예에서, 로컬 통합 개발 환경에서 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하한 후, 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으로 결정할 경우, 로컬 통합 개발 환경에서 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 취득하는 단계를 더 포함한다. 도3에 도시된 바와 같이, 이 방법의 구체적인 단계는 아래와 같다. 단계S301에서, 로컬 통합 개발 환경의 개발 인터페이스에 대화 상자를 디스플레이한다. 로컬 통합 개발 환경에서 하나 이상의 보조 연구개발 기능이 통합되어 있고, 개발 인터페이스에 정보 입력 영역 이 제공되며, 사용자가 정보 입력 영역에 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식한다. 본 실시예에서, 정보 입력 영역은 대화 상자일 수 있으며, 로컬 통합 개발 환경에 보조 연구개발 기능이 통합된 후, 로컬 통합 개발 환경의 개발 인터페이스에 대화 상자가 디스플레이된다. 대화 인터랙션 유사 방식을 통해 사용자와 지능형 연구개발 어시스턴트의 가시화 인터랙션을 구현하고, 각 보조 연구개발 기능의 동작 결과를 직 관적으로 나타내며, 지능형 연구개발 어시스턴트 인터랙션의 우호성을 향상한다. 선택적으로, 지능형 연구개발 어시스턴트는 플러그인의 방식으로 구현될 수 있다. 로컬 통합 개발 환경에서 지 능형 연구개발 어시스턴트 플러그인을 설치하고, 지능형 연구개발 어시스턴트 플러그인은 소프트웨어 개발의 보 조 처리를 구현하기 위한 것이다. 지능형 연구개발 어시스턴트의 플러그인이 성공적으로 설치된 후, 로컬 통합 개발 환경의 개발 인터페이스에 대 화 상자를 디스플레이 된다. 이렇게 하면, 지능형 연구개발 어시스턴트를 플러그인의 방식으로 로컬 통합 개발 환경에 부여하고, 다양한 소프트웨어 개발 보조 연구개발 기능을 로컬 프로그래밍 스레드와 효과적으로 결합할수 있으며, 지능형 연구개발 어시스턴트의 가용성을 향상한다. 단계S302에서, 사용자가 대화 상자에 입력한 보조 동작 명령 정보를 취득한다. 사용자는 개발 인터페이스에서 디스플레이되는 대화 상자에 보조 동작 명령 정보를 입력할 수 있다. 지능형 연구개발 어시스턴트는 사용자가 대화 상자에 입력한 보조 동작 명령 정보를 취득할 수 있다. 상기 단계S301 내지 단계S302에서, 대화 인터랙션 유사 방식을 통해 사용자와 지능형 연구개발 어시스턴트의 가 시화 인터랙션을 구현하고, 각 보조 연구개발 기능의 동작 결과를 직관적으로 나타내며, 지능형 연구개발 어시 스턴트 인터랙션의 우호성을 향상한다. 단계S303에서, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식한다. 여기서, 각 보조 연구개발 기능은 모두 고유의 식별 정보를 가지며, 식별 정보를 통해 서로 다른 보조 연구개발 기능을 구분할 수 있다. 예를 들면, 보조 연구개발 기능의 명칭, 별명, 명령어 등을 식별 정보로 할 수 있고, 사용자에 의해 쉽게 인식 및 기억되는 보조 연구개발 기능의 다른 정보를 식별 정보로 할 수도 있으며, 구체적으로 실제 적용 장면에 따 라 설정할 수 있고, 여기에서 구체적으로 한정하지 않는다. 선택적으로, 사용자가 입력한 보조 동작 명령 정보가 보조 연구개발 기능의 식별 정보와 매칭될 경우, 보조 동 작 명령 정보는 보조 연구개발 기능과 매칭되는 것으로 결정한다. 예를 들면, 코드 스캐닝 기능은 증분 스캐닝 기능 및 전체 스캐닝 기능을 포함하고, 증분 스캐닝 기능을 예로 들면, 식별 정보는 기능의 명칭 \"증분 스캐닝\"을 포함할 수 있으며, 도4에 도시된 바와 같이, 사용자가 입력한 보조 동작 명령 정보가 \" (나는 증분 스캐닝을 원해요)\"일 경우, 지능형 연구개발 어시스턴트는 입력된 보조 동작 명령 정보에 증분 스캐닝 기능의 명칭 \" (증분 스캐닝)\"을 포 함하고 있는 것을 인식할 수 있어, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능이 증분 스캐닝 기능인 것으로 결정할 수 있다. 예시적으로, 사용자가 입력한 보조 동작 명령 정보는 설명 언어(도4, 도6, 도7에 도시된 바와 같음), 명령(도5 에 도시된 바와 같음), 또는 옵션을 클릭하여 제출되는 정보일 수 있다. 선택적으로, 사용자가 입력한 보조 동작 명령 정보에 대해 자연 언어 처리를 진행하여, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정할 수 있고, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 정확하 게 인식하고, 지능형 연구개발 어시스턴트의 정확성 및 가용성을 향상할 수 있다. 선택적으로, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정할 수 없을 경우, 오류 알림 정보가 디 스플레이된다. 오류 알림 정보는 사용자가 입력한 보조 동작 명령 정보가 정확하지 않아, 매칭되는 보조 연구개 발 기능을 인식할 수 없음을 알리기 위한 것으로서, 이는 사용자가 재입력하게 하여, 지능형 연구개발 어시스턴 트의 우호성 및 가용성을 향상한다. 예를 들면, 대화 상자에서 대화의 형식으로 오류 알림 정보 \" (나는 아직 귀 하의 뜻을 이해하지 못합니다)\"를 사용자에게 알릴 수 있다. 단계S304에서, 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 보조 연구 개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하며, 동작 요청은 서비스 플랫폼으로 하여금 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 피드백하도록 지시하기 위한 것 이다. 본 실시예에서, 로컬 통합 개발 환경에서는 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기능이 통 합되어 있을 수 있다. 여기서, 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기능은, 코드 스캐닝 및 컴파일링을 포함하되 이에 한정되지 않는다. 여기서, 코드 스캐닝은 증분 스캐닝 및 전체 스캐닝을 포함할 수 있으며, 증분 스캐닝및 전체 스캐닝은 각각 독립적인 보조 연구개발 기능으로 할 수 있다. 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능이 결정된 후, 보조 연구개발 기능이 대응되는 서비스 플랫 폼에 의해 구현될 경우, 사용자가 수동으로 조작할 필요없이, 지능형 연구개발 어시스턴트가 자동으로 대응되는 서비스 플랫폼으로 대응되는 보조 연구개발 기능의 동작 요청을 발신한다. 여기서, 동작 요청은 서비스 플랫폼이 보조 연구개발 기능에 대응되는 동작을 실행하는 데 필요한 데이터를 포 함한다. 보조 연구개발 기능에 대응되는 서비스 플랫폼이 동작 요청을 수신한 후, 보조 연구개발 기능에 대응되는 동작 을 실행하여, 보조 연구개발 기능의 실행 결과를 얻으며, 보조 연구개발 기능의 실행 결과를 지능형 연구개발 어시스턴트에 피드백한다. 선택적으로, 보조 연구개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신한 후, 보조 연구개발 기능의 실행 결과를 취득하기 전에, 보조 연구개발 기능이 실행중이라는 알림 정보를 대화 상자에 디스플레이하여, 사 용자에게 보조 연구개발 기능의 진행 상황을 보여 주고, 지능형 연구개발 어시스턴트의 우호성 및 가용성을 향 상한다. 단계S305에서, 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으로 결정할 경우, 로컬 통합 개발 환경에서 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 취득한다. 본 실시예에서, 로컬 통합 개발 환경에서 직접 로컬에서 구현되는 보조 연구개발 기능이 통합되어 있을 수 있다. 여기서, 직접 로컬에서 구현되는 보조 연구개발 기능은 코딩 사양 실시간 오류 정정 및 코딩 사양 포맷팅을 포 함하되 이에 한정되지 않는다. 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정한 후, 보조 연구개발 기능이 로컬 통합 개발 환경 에서 구현되는 것으로 결정할 경우, 지능형 연구개발 어시스턴트는 직접 로컬 통합 개발 환경에서 보조 연구개 발 기능에 대응되는 동작을 실행하여, 보조 연구개발 기능의 실행 결과를 얻는다. 선택적으로, 로컬 통합 개발 환경에서 보조 연구개발 기능에 대응되는 동작을 실행한 후, 보조 연구개발 기능의 실행 결과를 취득하기 전에, 보조 연구개발 기능이 실행중이라는 알림 정보를 대화 상자에 디스플레이하여, 사 용자에게 보조 연구개발 기능의 진행 상황을 보여 줄 수도 있다. 이에 의해 지능형 연구개발 어시스턴트의 우호 성 및 가용성을 향상한다. 단계S306에서, 보조 연구개발 기능의 실행 결과를 취득한다. 로컬 통합 개발 환경에서 코드 스캐닝 및 컴파일링 등 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기능이 통합될 수 있을 뿐만 아니라, 코딩 사양 실시간 오류 정정 및 코딩 사양 포맷팅 등 직접 로컬에서 구현 되는 보조 연구개발 기능이 통합될 수도 있다. 로컬에서 구현되든 대응되는 서비스 플랫폼에서 구현되든, 지능 형 연구개발 어시스턴트는 모두 보조 연구개발 기능의 실행 결과를 취득할 수 있다. 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되면, 지능형 연구개발 어시스턴트는 대응되는 서비 스 플래폼에 의해 피드백되는 보조 연구개발 기능의 실행 결과를 취득한다. 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되면, 지능형 연구개발 어시스턴트는 보조 연구개발 기능에 대응되는 동작을 실행한 후, 보조 연구개발 기능의 실행 결과를 얻을 수 있다. 단계S307에서, 실행 결과를 디스플레이한다. 본 실시예에서, 대화 상자에서 대화 인터랙션의 방식으로 실행 결과를 디스플레이할 수 있다. 보조 연구개발 기능의 실행 결과를 취득한 후, 지능형 연구개발 어시스턴트는 대화 상자에서, 대화 인터랙션의 방식으로 실행 결과를 디스플레이할 수 있으며, 직관적으로 사용자에게 보조 연구개발 기능의 실행 결과를 보여 줄 수 있다. 로컬 통합 개발 환경에서 코드 스캐닝 및 컴파일링 등 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기능이 통합될 수 있을 뿐만 아니라, 코딩 사양 실시간 오류 정정 및 코딩 사양 포맷팅 등 직접 로컬에서 구현 되는 보조 연구개발 기능이 통합될 수도 있음으로써, 소프트웨어 개발의 다양한 보조 연구개발 기능을 사용자의 로컬 프로그래밍 현장에 부여하여, 연구개발 과정의 데이터 온라인화 및 능력 전치를 구현하며, 코드 스캐닝,컴파일링, 코딩 사양 자동 오류 정정 및 포맷팅 등 로컬 검증 능력을 해결하고, 개발 테스트의 전반적인 흐름을 연결하여, 사용자의 프로그래밍 현장과 효과적으로 결합함으로써, 사용자의 연구개발 효율을 향상한다. 선택적인 일 실시예에서, 보조 연구개발 기능이 코드 스캐닝이면, 현재 워크 영역(Work Area) 내의 파일을 취득 하여, 처리될 개발 파일을 얻으며; 코드 스캐닝 플랫폼으로 코드 스캐닝 요청을 발신하고, 코드 스캐닝 요청은 처리될 개발 파일을 포함하며, 코드 스캐닝 요청은 코드 스캐닝 플랫폼으로 하여금 개발 파일에 대해 코드 스캐 닝을 진행하여 코드 스캐닝 결과를 피드백하도록 지시하기 위한 것이다. 사용자가 수동으로 코드 스캐닝 플랫폼으로 코드를 업로드하고 스캐닝 동작을 트리거할 필요가 없이, 지능형 연 구개발 어시스턴트가 자동으로 현재 워크 영역 내의 파일을 패키징하여, 스캐닝될 파일로 하고, 코드 스캐닝 플 랫폼으로 동작 요청을 발신할 시, 스캐닝될 파일을 함께 코드 스캐닝 플랫폼으로 발신함으로써, 사용자의 조작 흐름을 간략화하고, 사용자의 소프트웨어 개발의 효율을 향상한다. 여기서, 코드 스캐닝 기능은 파일에서의 코딩 사양 문제, 결함 문제, 보안 취약점 등에 대한 스캐닝을 구현할 수 있다. 추가적으로, 보조 연구개발 기능의 실행 결과를 취득하는 것은 개발 파일에 대한 코드 스캐닝 결과를 취득하는 것을 포함한다. 선택적으로, 코드 스캐닝 결과는 결함 보고서를 포함할 수 있다. 개발 파일에 대한 코드 스캐닝 결과를 취득한 후, 지능형 연구개발 어시스턴트는 결함 보고서를 분석하여, 개발 파일에서의 결함의 위치를 결정하고, 개발 파 일에서의 결함의 위치에 따라, 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행할 수 있다. 이렇게 하면, 사용자가 스스로 결함 보고서를 대조하여 결함이 존재하는 코드의 위치를 개발 파일에서 조회할 필요없이, 코드에 존재하는 결함을 프로그래밍 현장에서 직관적으로 라벨링할 수 있으며, 사용자가 결함 위치를 결정하는데 편리를 도모하여, 결함에 대한 신속한 사용자의 발견 및 해결을 촉진시킴으로써, 소프트웨어 개발의 효율을 향상한다. 선택적으로, 라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 결함 정보(도4에 도시된 바와 같음)가 디스플레이되어, 코드에 대한 사용자의 편집 조작에 영향주지 않고, 사용자가 상세한 결함 정보를 조회 하는 데 편리를 도모하므로, 사용자가 조작하기 편리하도록 하고, 소프트웨어 개발의 효율을 향상하는 데 유리 하다. 예를 들면, 개발 파일에서 물결 밑줄, 빨간 물결 밑줄, 배경색 증가 등 방식을 통해 결함이 있는 코드 행을 라 벨링할 수 있다. 사용자가 마우스의 커서를 라벨링된 코드 행에 이동할 경우, 라벨링된 코드 행에 대응되는 결 함 정보가 디스플레이된다. 또한, 개발 파일에서 결함이 있는 코드 행을 라벨링하는 방식은, 실제 적용 장면의 수요에 따라 설정 및 조정할 수 있고, 서로 다른 유형의 결함은 서로 다른 방식으로 라벨링될 수 있으며, 본 실시예는 이에 대해 구체적으로 한정하지 않는다. 선택적으로, 결함 보고서의 링크 정보(도4에 도시된 바와 같음)를 디스플레이하며, 결함 보고서의 링크 정보가 트리거될 경우, 결함 보고서를 디스플레이 및/또는 다운로드할 수도 있다. 이로써, 사용자가 결함 보고서를 조 회 및 다운로드하기 편리하도록 한다. 선택적인 일 실시예에서, 보조 연구개발 기능이 컴파일링일 경우, 컴파일링 플랫폼으로 컴파일링 요청을 발신하 며 컴파일링 결과 파일을 얻는다. 컴파일링 요청은 컴파일링될 코드의 정보를 포함하고, 컴파일링 요청은 컴파 일링 플랫폼으로 하여금 컴파일링될 코드를 컴파일링하도록 지시하기 위한 것이다. 사용자가 수동으로 컴파일링 플랫폼을 열어 컴파일링 동작을 트리거할 필요 없이, 지능형 연구개발 어시스턴트 가 자동으로 컴파일링 플랫폼으로 컴파일링 요청을 발신함으로써, 사용자의 조작 흐름을 간략화하고, 사용자의 소프트웨어 개발의 효율을 향상한다. 추가적으로, 보조 연구개발 기능의 실행 결과를 취득하는 것은, 컴파일링 결과 파일을 로컬 통합 개발 환경으로 자동으로 추출하는 것을 포함한다. 선택적으로, 컴파일링 요청은 컴파일링 플랫폼으로 하여금 컴파일링 로그를 기록하도록 지시하는 데 더 사용된 다. 컴파일링 플랫폼으로 컴파일링 요청을 발신한 후, 지능형 연구개발 어시스턴트는 컴파일링 로그의 링크 정 보를 디스플레이하며, 컴파일링 로그의 링크 정보가 트리거될 경우, 컴파일링 로그를 디스플레이 및/또는 다운로드할 수도 있다. 이에 의해, 사용자가 컴파일링 로그를 조회 및 다운로드하는 데 편리를 도모한다. 예시적으로, 컴파일링의 실행 결과는 컴파일링 태스크의 실행 성공 여부, 및 컴파일링 태스크의 관련 정보를 포 함할 수 있다. 도5에 도시된 바와 같이, 컴파일링의 실행 결과는 대화 상자에서 대화 방식으로 디스플레이될 수 있다. 선택적인 일 실시예에서, 보조 연구개발 기능이 코딩 사양 실시간 오류 정정일 경우, 현재 파일에서의 코딩 사 양 문제를 실시간으로 체크하고; 현재 파일에서, 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이 한다. 이렇게 하면, 사용자가 스스로 개발 파일 사양 문제를 체크할 필요없이, 프로그래밍 현장에서 코드에 존재하는 코딩 사양 문제를 직관적으로 디스플레이할 수 있으며, 사용자가 코딩 사양 문제의 위치를 결정하는 데 편리를 도모하여, 사용자가 파일에 존재하는 코딩 사양 문제를 신속히 발견 및 수정하는 것을 촉진시킴으로써, 코드의 사양 및 소프트웨어 개발의 효율을 향상한다. 선택적으로, 현재 파일에서, 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이하는 것은, 현재 파일 에서, 코딩 사양 문제가 있는 코드 행에 대해 라벨링을 진행하고; 라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 코딩 사양 문제의 문제 설명 정보(도6에 도시된 바와 같음)를 디스플레이하는 것을 포함한 다. 이에 의해, 코드에 대한 사용자의 편집 조작에 영향주지 않고, 사용자가 상세한 코딩 사양 문제의 문제 설 명 정보를 조회하는 데 편리를 도모하며, 사용자가 조작하기 편리하도록 하고, 소프트웨어 개발의 효율을 향상 하는 데 유리하다. 예를 들면, 개발 파일에서 물결 밑줄, 빨간 물결 밑줄, 배경색 증가 등 방식을 통해 코딩 사양 문제가 있는 코 드 행을 라벨링할 수 있다. 사용자가 마우스의 커서를 라벨링된 코드 행에 이동할 경우, 라벨링된 코드 행에 대 응되는 코딩 사양 문제의 문제 설명 정보가 디스플레이된다. 또한, 개발 파일에서 코딩 사양 문제가 있는 코드 행을 라벨링하는 방식은, 실제 적용 장면의 수요에 따라 설정 및 조정할 수 있으며, 본 실시예는 이에 대해 구체적으로 한정하지 않는다. 본 실시예에서, 코딩 사양 실시간 오류 정정 기능은 온（On）될 수도 있고 오프（Off）될 수도 있으며, 코딩 사 양 실시간 오류 정정 기능이 온된 후, 지능형 연구개발 어시스턴트는 실시간으로 현재 파일에 대해 코딩 사양 실시간 오류 정정 처리를 진행한다. 코딩 사양 실시간 오류 정정 기능이 오프된 후, 지능형 연구개발 어시스턴 트는 코딩 사양 실시간 오류 정정 처리를 진행하지 않는다. 선택적인 일 실시예에서, 보조 연구개발 기능이 코딩 사양 포맷팅일 경우, 현재 파일에서의 코딩 사양 문제에 대해 수정 처리를 진행한다. 이렇게 하면, 사용자가 수동으로 일일이 수정할 필요없이, 지능형 연구개발 어시스턴트가 자동으로 현재 파일에 서의 코딩 사양 문제에 대해 수정 처리를 진행할 수 있으므로, 소프트웨어 개발의 효율을 크게 향상한다. 선택적으로, 현재 파일에서의 코딩 사양 문제에 대해 수정을 진행한 후, 현재 파일에 대한 포맷팅 취소 동작에 응답하여, 현재 파일을 수정 처리 전으로 복귀시킨다. 선택적으로, 현재 파일에서의 코딩 사양 문제를 수정한 후, 자동으로 수정되지 않은 코딩 사양 문제가 존재할 경우, 수정되지 않은 코딩 사양 문제가 존재하는 것을 알리기 위한 알림 정보(도7에 도시된 바와 같은 알림 정 보 \" (사양 문제가 더 있나요?)\")를 디스플레이할 수 있다. 추가적으로, 수정되지 않은 코딩 사양 문제를 조회하는 요청에 응답하여, 사용자가 조회 및 수동으로 수정할 수 있도록, 수정되지 않 은 코딩 사양 문제를 디스플레이한다. 선택적으로, 코딩 사양 포맷팅의 기능은 코딩 사양 실시간 오류 정정을 진행한 후, 코딩 사양 실시간 오류 정정 의 실행 결과에서 현재 파일 중의 코딩 사양 문제에 기반하여, 현재 파일 중의 코딩 사양 문제에 대해 수정 처 리를 진행할 수 있다. 또한, 코딩 사양 포맷팅의 기능은 별도로 실행될 수도 있다. 코딩 사양 포맷팅을 진행하는 과정은, 현재 파일 중의 코딩 사양 문제를 체크하여, 현재 파일 중의 코딩 사양 문제에 대해 수정 처리를 진행하는 것을 포함한다. 선택적으로, 지능형 연구개발 어시스턴트 플러그인은 상기 모든 보조 연구개발 기능을 구현할 수 있으며, 즉 모 든 보조 연구개발 기능이 하나의 플러그인에 통합될 수 있으다. 로컬 통합 개발 환경에 해당 플러그인을 설치하여, 모든 보조 연구개발 기능을 로컬 통합 개발 환경에서 구현할 수 있다. 선택적으로, 임의의 한가지의 보조 연구개발 기능은 모두 별도의 플러그인으로서 구현될 수 있다. 예를 들면, 코딩 사양 실시간 오류 정정 기능은 별도의 코딩 사양 체크 플러그인을 사용하여 구현될 수 있다. 코딩 사양 실 시간 오류 정정을 온해야 할 경우, 로컬 통합 개발 환경에 코딩 사양 체크 플러그인을 설치해야 하며, 코딩 사 양 체크 플러그인을 성공적으로 설치한 후, 로컬 통합 개발 환경을 재부팅하여 코딩 사양 실시간 오류 정정 기 능을 온할 수 있다. 도6에 코딩 사양 체크 플러그인을 설치하는 예시를 도시한다. 로컬 통합 개발 환경에서 코드 스캐닝, 컴파일링 등 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기 능이 통합될 수 있을 뿐만 아니라, 코딩 사양 실시간 오류 정정 및 코딩 사양 포맷팅 등 직접 로컬에서 구현되 는 보조 연구개발 기능이 통합될 수도 있다. 이로써, 소프트웨어 개발의 다양한 보조 연구개발 기능을 사용자의 로컬 프로그래밍 현장에 부여하여, 연구개발 과정의 데이터 온라인화 및 능력 전치를 구현하며, 코드 스캐닝, 컴파일링, 코딩 사양 자동 오류 정정 및 포맷팅 등 로컬 검증 능력을 해결하고, 개발 테스트의 전반적인 흐름을 연결하여, 사용자의 프로그래밍 현장과 효과적으로 결합하며, 사용자의 연구개발 효율을 향상한다. 본 개시의 실시예에서, 엔지니어의 프로그래밍 현장에서, 다양한 보조 연구개발 기능을 로컬 IDE에 부여하여, 대화식 인터랙션 유사 방식을 통해 코드 스캐닝, 컴파일링, 코딩 사양 실시간 오류 정정 및 포맷팅 등 일반적인 연구개발 조작을 진행한다. 인터랙션 방식이 더 원활하고, 각 동작 결과를 직관적으로 나타낼 수 있다. 개발 테 스트 능력을 왼쪽으로 이동하고, 로컬 검증 능력을 보완하며, 개발 테스트의 전반적인 흐름을 연결하여, 폐루프 를 형성하고, 다양한 Devops 연구개발 툴 포털을 통일시켜, 다양한 툴 포털이 복잡하고, 전환이 번거로우며, 사 용 효율이 낮은 등 문제를 해결하고, 엔지니어의 프로그래밍 현장과 효과적으로 결합하여, 연구개발 효율을 향 상한다. 도8은 본 개시의 제3 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기의 개략도이다. 본 개시의 실시 예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기는 소프트웨어 개발의 보조 처리 방법의 실시예에 의해 제공되는 처리 흐름을 실행할 수 있다. 도8에 도시된 바와 같이, 이 소프트웨어 개발의 보조 처리 기기는, 기능 인식 모듈, 제1 보조 모듈 및 실행 결과 처리 모듈을 포함한다. 구체적으로, 기능 인식 모듈은, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 위한 것이다. 제1 보조 모듈은, 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 보 조 연구개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하기 위한 것이며, 동작 요청은 서비스 플랫 폼으로 하여금 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 피드백하도 록 지시하기 위한 것이다. 실행 결과 처리 모듈은, 보조 연구개발 기능의 실행 결과를 취득하기 위한 것이다. 본 개시의 실시예에 의해 제공되는 기기는 구체적으로 상기 제1 실시예에 의해 제공되는 방법의 실시예를 실행 하는 데 사용될 수 있으며, 구체적인 기능은 여기에서 반복하여 설명하지 않는다. 본 실시예에서, 로컬 통합 개발 환경에서 하나 이상의 보조 연구개발 기능을 통합되어 있고, 로컬 통합 개발 환 경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하며; 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 인공 조작이 필 요없이, 보조 연구개발 기능에 대응되는 서비스 플랫폼으로 자동으로 동작 요청을 발신한다. 이로써, 서비스 플 랫폼이 동작 요청에 따라 보조 연구개발 기능에 대응되는 동작을 실행하고 보조 연구개발 기능의 실행 결과를 피드백하도록 한다. 이에 따라 보조 연구개발 기능의 실행 결과를 취득하고, 소프트웨어 개발의 보조 연구개발 기능을 사용자의 로컬 프로그래밍 현장에 부여하는 것을 구현하며, 사용자의 프로그래밍 현장과 효과적으로 결 합하여, 사용자의 연구개발 효율을 향상한다. 도9는 본 개시의 제4 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기의 개략도이다. 본 개시의 실시 예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기는 소프트웨어 개발의 보조 처리 방법의 실시예에 의해 제공되는 처리 흐름을 실행할 수 있다. 도9에 도시된 바와 같이, 상기 소프트웨어 개발의 보조 처리 기기는, 기능 인식 모듈, 제1 보조 모듈 및 실행 결과 처리 모듈을 포함한다. 구체적으로, 기능 인식 모듈은, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 위한 것이다.제1 보조 모듈은, 보조 연구개발 기능이 대응되는 서비스 플랫폼에 의해 구현되는 것으로 결정할 경우, 보 조 연구개발 기능에 대응되는 서비스 플랫폼으로 동작 요청을 발신하기 위한 것이다. 동작 요청은 서비스 플랫 폼으로 하여금 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기능의 실행 결과를 피드백하도 록 지시하기 위한 것이다. 실행 결과 처리 모듈은, 보조 연구개발 기능의 실행 결과를 취득하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 제1 보조 모듈은 코드 스캐닝 서브 모듈을 포 함한다. 상기 코드 스캐닝 서브 모듈은, 보조 연구개발 기능이 코드 스캐닝일 경우, 현재 워크 영역 내의 파일을 취득하여, 처리될 개발 파일을 얻으며; 코드 스캐닝 플랫폼으로 코드 스캐닝 요청을 발신하기 위한 것이 고, 코드 스캐닝 요청은 처리될 개발 파일을 포함하며, 코드 스캐닝 요청은 코드 스캐닝 플랫폼으로 하여금 개 발 파일에 대해 코드 스캐닝을 진행하여 코드 스캐닝 결과를 피드백하도록 지시하기 위한 것이다. 실행 결과 처리 모듈은 코드 스캐닝 결과 처리 서브 모듈을 포함한다.상기 코드 스캐닝 결과 처리 서브 모듈은, 개발 파일에 대한 코드 스캐닝 결과를 취득하기 위한 것이다. 선택적인 일 실시형태에서, 코드 스캐닝은 결함 보고서를 포함하며, 코드 스캐닝 결과 처리 서브 모듈은, 또한, 개발 파일에 대한 코드 스캐닝 결과를 취득한 후, 결함 보고서를 분석하여, 개발 파일에서 결함의 위치를 결정 하며; 개발 파일에서 결함의 위치에 따라, 개발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행하기 위한 것이다. 선택적인 일 실시형태에서, 코드 스캐닝 결과 처리 서브 모듈은, 또한, 개발 파일에서 결함의 위치에 따라, 개 발 파일에서 결함이 있는 코드 행에 대해 라벨링을 진행한 후, 라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 결함 정보를 디스플레이하기 위한 것이다. 선택적인 일 실시형태에서, 코드 스캐닝 결과 처리 서브 모듈은, 또한, 개발 파일에 대한 코드 스캐닝 결과를 취득한 후, 결함 보고서의 링크 정보를 디스플레이하며; 결함 보고서의 링크 정보가 트리거될 경우, 결함 보고 서를 디스플레이 및/또는 다운로드하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 제1 보조 모듈은 컴파일링 모듈을 포함한다. 상기 컴파일링 모듈은, 보조 연구개발 기능이 컴파일링일 경우, 컴파일링 플랫폼으로 컴파일링 요청을 발 신하기 위한 것이며, 컴파일링 요청은 컴파일링될 코드의 정보를 포함하고, 컴파일링 요청은 컴파일링 플랫폼으 로 하여금 컴파일링될 코드를 컴파일링하여, 컴파일링 결과 파일을 얻도록 지시하기 위한 것이다. 실행 결과 처리 모듈은, 컴파일링 결과 처리 서브 모듈을 포함한다. 상기 컴파일링 결과 처리 서브 모듈은, 컴파일링 결과 파일을 로컬 통합 개발 환경으로 자동으로 추출하 기 위한 것이다. 선택적인 일 실시형태에서, 컴파일링 요청은 또한 컴파일링 플랫폼으로 하여금 컴파일링 로그를 기록하도록 지 시하기 위한 것이다. 컴파일링 결과 처리 서브 모듈은, 또한, 컴파일링 플랫폼으로 컴파일링 요청을 발신한 후, 컴파일링 로그의 링 크 정보를 디스플레이하며; 컴파일링 로그의 링크 정보가 트리거될 경우, 컴파일링 로그를 디스플레이 및/또는 다운로드하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 소프트웨어 개발의 보조 처리 기기는 제2 보조 모듈 을 포함한다. 상기 제2 보조 모듈은, 보조 연구개발 기능이 로컬 통합 개발 환경에서 구현되는 것으 로 결정할 경우, 로컬 통합 개발 환경에서 보조 연구개발 기능에 대응되는 동작을 실행하고, 보조 연구개발 기 능의 실행 결과를 취득하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 제2 보조 모듈은 코딩 사양 실시간 오류 정정 서브 모듈을 포함한다. 상기 코딩 사양 실시간 오류 정정 서브 모듈은, 보조 연구개발 기능이 코딩 사양 실시간 오류 정정일 경우, 현재 파일 중의 코딩 사양 문제를 실시간으로 체크하기 위한 것이다. 실행 결과 처리 모듈은 코딩 사양 실시간 오류 정정 결과 처리 서브 모듈을 포함한다. 상기 코딩 사 양 실시간 오류 정정 결과 처리 서브 모듈은, 현재 파일에서, 코딩 사양 문제가 있는 위치 및 문제 설명 정보를 디스플레이하기 위한 것이다.선택적인 일 실시형태에서, 코딩 사양 실시간 오류 정정 결과 처리 서브 모듈은, 추가적으로 현재 파일에서, 코 딩 사양 문제가 있는 코드 행에 대해 라벨링을 진행하고; 라벨링된 코드 행이 선택될 경우, 라벨링된 코드 행에 대응되는 코딩 사양 문제의 문제 설명 정보를 디스플레이하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 제2 보조 모듈은 코딩 사양 포맷팅 서브 모듈 을 더 포함한다. 상기 코딩 사양 포맷팅 서브 모듈은, 보조 연구개발 기능이 코딩 사양 포맷팅일 경우, 현재 파일에서의 코딩 사양 문제에 대해 수정 처리를 진행하기 위한 것이다. 선택적인 일 실시형태에서, 코딩 사양 포맷팅 서브 모듈은, 또한, 현재 파일에 대한 포맷팅 취소 동작에 응답하 여, 현재 파일을 수정 처리 전으로 복구시키기 위한 것이다. 선택적인 일 실시형태에서, 기능 인식 모듈은, 추가적으로 사용자가 입력한 보조 동작 명령 정보에 대해 자연 언어 처리를 진행하여, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결정하기 위한 것이다. 선택적인 일 실시형태에서, 기능 인식 모듈은, 또한 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 결 정할 수 없을 경우, 오류 알림 정보를 디스플레이하기 위한 것이다. 선택적인 일 실시형태에서, 도9에 도시된 바와 같이, 상기 소프트웨어 개발의 보조 처리 기기는 정보 입력 모듈을 더 포함한다. 상기 정보 입력 모듈은, 로컬 통합 개발 환경에서, 사용자가 입력한 보조 동작 명령 정보에 따라, 보조 동작 명령 정보와 매칭되는 보조 연구개발 기능을 인식하기 전에, 로컬 통합 개발 환경 의 개발 인터페이스에 대화 상자를 디스플레이하며; 사용자에 의해 대화 상자에 입력되는 보조 동작 명령 정보 를 취득하기 위한 것이다. 선택적인 일 실시형태에서, 실행 결과 처리 모듈은, 추가적으로 대화 상자에서, 대화 인터랙션의 방식으로 실행 결과를 디스플레이하기 위한 것이다. 선택적인 일 실시형태에서, 실행 결과 처리 모듈은, 또한 대화 상자에서, 보조 연구개발 기능이 실행중이라는 알림 정보를 디스플레이하기 위한 것이다. 본 개시의 실시예에 의해 제공되는 기기는 구체적으로 상기 제2 실시예에 의해 제공되는 방법 실시예를 실행하 는 데 사용될 수 있으며, 구체적인 기능은 여기에서 반복하여 설명하지 않는다. 로컬 통합 개발 환경에서 코드 스캐닝 및 컴파일링 등 대응되는 서비스 플랫폼에 의해 구현되는 보조 연구개발 기능을 통합할 수 있을 뿐만 아니라, 코딩 사양 실시간 오류 정정 및 코딩 사양 포맷팅 등 직접 로컬에서 구현 되는 보조 연구개발 기능을 통합할 수도 있다. 이로써, 소프트웨어 개발의 다양한 보조 연구개발 기능을 사용자 의 로컬 프로그래밍 현장에 부여하여, 연구개발 과정의 데이터 온라인화 및 능력 전치를 구현하며, 코드 스캐닝, 컴파일링, 코딩 사양 자동 오류 정정 및 포맷팅 등 로컬 검증 능력을 해결하고, 개발 테스트의 전반적 인 흐름을 연결하여, 사용자의 프로그래밍 현장과 효과적으로 결합함으로써, 사용자의 연구개발 효율을 향상한 다. 본 개시의 실시예에서, 엔지니어 프로그래밍 현장에서, 다양한 보조 연구개발 기능을 로컬 IDE에 부여하여, 대 화식 인터랙션 유사 방식을 통해 코드 스캐닝, 컴파일링, 코딩 사양 실시간 오류 정정 및 포맷팅 등 일반적인 연구개발 조작을 진행한다. 인터랙션 방식이 더 원활하고, 각 동작 결과를 직관적으로 나타낼 수 있다. 개발 테 스트 능력을 왼쪽으로 이동하고, 로컬 검증 능력을 보완하며, 개발 테스트의 전반적인 흐름을 연결하여, 폐루프 를 형성하고, 다양한 Devops 연구개발 툴 포털을 통일한다. 이에 따라, 다양한 툴 포털이 번잡하고, 전환이 번 거로우며, 사용 효율이 낮은 등 문제를 해결하고, 엔지니어의 프로그래밍 현장과 효과적으로 결합하여, 연구개 발 효율을 향상한다. 본 개시의 기술방안에서, 언급되는 사용자 개인 정보의 취득, 저장 및 적용 등은, 모두 관련 법율 법규의 규정 에 부합되며, 또한 공서양속에 어긋나지 않는다. 본 개시의 실시예에 따르면, 본 개시는 전자 기기 및 판독가능 저장 매체를 더 제공한다. 본 개시의 실시예에 따르면, 본 개시는 컴퓨터 프로그램 제품을 더 제공하며, 컴퓨터 프로그램 제품은 컴퓨터 프로그램을 포함하고, 컴퓨터 프로그램은 판독가능 저장 매체에 저장되어 있으며, 전자 기기의 적어도 하나의 프로세서는 판독가능 저장 매체로부터 컴퓨터 프로그램을 읽을 수 있고, 적어도 하나의 프로세서는 컴퓨터 프로 그램을 실행하여, 전자 기기로 하여금 상기 임의의 실시예에 의해 제공되는 기술방안을 실행하게 한다. 도10는 본 개시의 실시예를 구현할 수 있는 전자 기기의 블록도를 예시적으로 도시하는 것이다. 전자 기 기는 랩톱 컴퓨터, 데스크톱 컴퓨터, 워크 스테이션, 개인 휴대 정보 단말기, 서버, 블레이드 서버, 메인 프레 임 컴퓨터 및 다른 적합한 컴퓨터 등 다양한 형태의 디지털 컴퓨터를 의미한다. 전자 기기는 개인 디지털 프로 세서, 셀룰러 전화, 스마트 폰, 웨어러블 디바이스 및 다른 유형의 컴퓨팅 장치 등 다양한 형태의 이동 장치를 의미할 수도 있다. 본 문장에 개시되는 부품, 이들의 연결과 관계 및 이들의 기능은 오직 예시일 뿐이고, 본 문 장에서 설명 및/또는 요구되는 본 개시의 구현을 제한하는 것은 아니다. 도10에 도시된 바와 같이, 전자 기기에는 리드 온리 메모리(ROM)에 저장된 컴퓨터 프로그램 또는 저장 유닛으로부터 랜덤 액세스 메모리(RAM)로 로딩되는 컴퓨터 프로그램에 근거하여 여러가지 적 합한 동작과 처리를 실행할 수 있는 컴퓨팅 유닛이 포함된다. RAM에는, 전자 기기의 동작에 필요한 다양한 프로그램 및 데이터가 저장 될 수도 있다. 컴퓨팅 유닛, ROM 및 RAM은 버스 를 통해 서로 연결된다. 입력/출력(I/O) 인터페이스도 버스에 연결된다. 전자 기기에서의 복수의 부품은 I/O 인터페이스에 연결되며, 상기 부품에는, 예를 들면 키보드, 마 우스 등과 같은 입력 유닛, 예를 들면 다양한 유형의 디스플레이, 스피커 등과 같은 출력 유닛, 예 를 들면 디스크, 광 디스크 등과 같은 저장 유닛; 및 예를 들면 네트워크 카드, 모뎀(modem), 무선통신 송수신기 등과 같은 통신 유닛이 포함된다. 통신 유닛은 전자 기기가 인터넷과 같은 컴퓨터 네트워크 및/또는 다양한 텔레콤 네트워크를 통해 기타 기기와 정보/데이터를 교환할 수 있도록 허용한다. 컴퓨팅 유닛은 처리 능력과 컴퓨팅 능력을 갖는 다양한 범용 및/또는 전용 처리 컴포넌트일 수 있다. 컴 퓨팅 유닛의 일부 예시에는, 중앙 처리 유닛(CPU), 그래픽 처리 유닛(GPU), 다양한 전용 인공지능(AI) 컴 퓨팅 칩, 머신 러닝 모델 알고리즘을 실행하는 다양한 컴퓨팅 유닛, 디지털 신호 프로세서(DSP) 및 임의의 적합 한 프로세서, 컨트롤러, 마이크로 컨트롤러 등이 포함되지만 이에 한정되는 것은 아니다. 컴퓨팅 유닛은, 예를 들면, 소프트웨어 개발의 보조 처리 방법과 같은 위에서 설명된 각 방법과 처리를 실행한다. 예를 들면, 일부 실시예에서, 소프트웨어 개발의 보조 처리 방법은 컴퓨터 소프트웨어 프로그램으로 구현되어, 저장 유닛 과 같은 기계 판독가능 매체에 유형적으로 포함될 수 있다. 일부 실시예에서, 컴퓨터 프로그램의 일부 또 는 전부는 ROM 및/또는 통신 유닛을 거쳐 전자 기기에 로딩 및/또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로딩되어 컴퓨팅 유닛에 의해 실행될 경우, 위에서 설명한 소프트웨어 개발의 보 조 처리 방법의 하나 이상의 단계를 실행할 수 있다. 선택적으로, 기타 실시예에서, 컴퓨팅 유닛은 기타 임의의 적합한 방식(예를 들면, 펌웨어를 이용함)을 통해 소프트웨어 개발의 보조 처리 방법을 실행하도록 구성 될 수 있다. 본 문에서 상기 설명한 시스템 및 기술의 다양한 실시형태는 디지털 전자 회로 시스템, 집적 회로 시스템, 현장 프로그래밍 가능 게이트 어레이(FPGA), 전용 집적 회로(ASIC), 전용 표준 제품(ASSP), 시스템 온 칩 시스템 (SOC), 복합 프로그래밍 가능 로직 디바이스(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합 에서 구현될 수 있다. 상기 다양한 실시형태는 다음과 같은 내용을 포함할 수 있다. 하나 이상의 컴퓨터 프로그 램에서 실시되고, 상기 하나 이상의 컴퓨터 프로그램은 적어도 하나의 프로그래밍 가능 프로세서를 포함하는 프 로그래밍 가능 시스템에서 실행 및/또는 해석될 수 있다. 상기 프로그래밍 가능 프로세서는 전용 또는 범용 프 로그래밍 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치로부 터 데이터 및 명령어를 수신하며, 또한 상기 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장 치에 데이터 및 명령어를 전송할 수 있다. 본 개시의 방법을 실시하기 위한 프로그램 코드는 하나 이상의 프로그래밍 언어의 임의의 조합을 적용하여 작성 할 수 있다. 프로그램 코드가 프로세서 또는 컨트롤러에 의해 실행될 시 흐름도 및/또는 블록도에서 규정된 기 능/동작이 실시되도록, 이러한 프로그램 코드를 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그래밍 가능 데이터 처리 장치의 프로세서 또는 컨트롤러에 제공할 수 있다. 프로그램 코드는 완전히 기계에서 실행되거나, 부분적 으로 기계에서 실행되거나, 개별적인 소프트웨어 패키지(Software Package)로서 부분적으로 기계에서 실행되며, 부분적으로 원격 기계에서 실행되거나, 완전히 원격 기계 또는 서버에서 실행될 수 있다. 본 개시의 콘텍스트에서, 기계 판독가능 매체는 유형적인 매체일 수 있다. 상기 기계 판독가능 매체에는, 명령 어 실행 시스템, 장치 또는 기기에 사용되거나 또는 명령어 실행 시스템, 장치 또는 기기와 결합하여 사용되기 위해 제공되는 프로그램이 포함되거나 저장될 수 있다. 기계 판독가능 매체는 기계 판독가능 신호 매체 또는 기 계 판독가능 저장 매체일 수 있다. 기계 판독가능 매체에는, 전자, 자성, 광학, 전자기, 적외선 또는 반도체 시 스템, 장치 또는 기기, 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있지만 이에 한정되는 것은 아니다. 기계 판독가능 저장 매체의 더 구체적인 예시에는 하나 이상의 와이어에 의한 전기적인 연결, 휴대용 컴퓨터 디스크, 하드디스크, 랜덤 액세스 메모리(RAM), 리드 온리 메모리(ROM), 소거 가능 및 프로그램 가능 리드 온리 메모리(EPROM 또는 플래시 메모리), 광섬유，휴대용 콤팩트 디스크 리드 온리 메모리(CD-ROM), 광학 저장 장치, 자기 저장 장치 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있다. 사용자와의 인터랙션을 제공하기 위해, 여기에서 설명하는 시스템과 기술을 컴퓨터에서 실행할 수 있다. 상기 컴퓨터는 사용자에게 정보를 표시하기 위한 디스플레이 장치(예를 들면, CRT(음극선관) 또는 LCD(액정 디스플레 이) 모니터) 및 키보드, 포인팅 장치(예를 들면, 마우스 또는 트랙 볼)를 포함한다. 사용자는 상기 키보드 및 포인팅 장치를 통해 입력을 컴퓨터에 제공한다. 기타 종류의 장치는 사용자와의 인터랙션을 제공하기 위해 사용 될 수도 있다. 예를 들면, 사용자에게 제공하는 피드백은 임의의 형태의 센싱 피드백(예를 들면, 시각 피드백, 청각 피드백 또는 촉각 피드백)일 수 있으며, 또한 사용자로부터의 입력은 임의의 형태(소리 입력, 음성 입력 또는 촉각 입력을 포함)로 수신될 수 있다. 여기에서 설명하는 시스템 및 기술을 백그라운드 부품을 포함하는 컴퓨팅 시스템(예를 들면, 데이터 서버), 또 는 미들웨어 부품을 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버), 또는 프론트 부품을 포함하는 컴 퓨팅 시스템(예를 들면, 그래픽 유저 인터페이스 또는 웹 브라우저를 구비하는 사용자 컴퓨터, 사용자는 상기 그래픽 유저 인터페이스 또는 웹 브라우저를 통해 여기에서 설명하는 시스템 및 기술의 실시형태와 인터랙션을 진행할 수 있음), 또는 상기 백그라운드 부품, 미들웨어 부품 또는 프론트 부품의 임의의 조합을 포함하는 컴퓨 팅 시스템에서 실행할 수 있다. 임의의 형태 또는 매체의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통 해 시스템의 부품을 서로 연결할 수 있다. 통신 네트워크의 예시는 근거리 통신망（LAN）, 광대역 통신망(WAN) 및 인터넷을 포함한다. 컴퓨터 시스템은 클라이언트 및 서버를 포함한다. 클라이언트 및 서버는 일반적으로 서로 멀리 떨어져 있으며, 통신망을 통해 인터랙션을 진행한다. 해당 컴퓨터에서 실행되고, 또한 서로 클라이언트-서버 관계를 갖는 컴퓨 터 프로그램을 통해 클라이언트 및 서버의 관계를 생성한다. 서버는 클라우드 컴퓨팅 서버 또는 클라우드 호스 트라고 칭할 수도 있는 클라우드 서버일 수 있으며, 클라우드 컴퓨팅 서비스 체계에서의 호스트 제품으로서, 기 존의 물리적 호스트와 가상 사설 서버 서비스(“Virtual Private Server”, 또는 “VPS”으로 약칭)에 존재하는 관리 난이도가 크고, 트랜잭션 확장성이 약한 결함을 해결하였다. 서버는 분산 시스템의 서버, 또는 블록체인을 결합한 서버일 수도 있다. 본 출원 실시예의 다른 일 측면에 따르면, 본 출원의 실시예는 프로그램 코드를 포함하는 컴퓨터 프로그램을 더 제공하며, 컴퓨터가 상기 컴퓨터 프로그램을 실행할 시, 상기 프로그램 코드는 상기 임의의 실시예에 언급된 바 와 같은 방법을 실행한다. 상기의 다양한 형태의 프로세스를 이용하여, 단계를 다시 순서 배열, 추가 또는 삭제할 수 있음을 이해해야 한 다. 예를 들면, 본 출원에 기재된 각 단계는 병행하여 실행할 수 있고, 순서대로 실행할 수도 있으며, 서로 다 른 순서로 실행할 수도 있는데, 본 개시에 의해 개시되는 기술방안이 기대하는 결과를 구현할 수만 있다면, 이 에 대해 제한하지 않는다. 상기 구체적인 실시형태는 본 개시의 보호 범위에 대해 제한하지 않는다. 당업자는 설계 요구와 기타 요인에 따 라 다양한 수정, 조합, 서브 조합 및 대체를 진행할 수 있음을 이해해야 한다. 본 개시의 사상 및 원칙 내에서 진행되는 수정, 균등한 교체 및 개선 등은 모두 본 개시의 보호 범위에 포함되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10"}
{"patent_id": "10-2022-7025159", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면은 본 기술방안을 더 잘 이해하기 위한 것이며, 본 개시를 한정하기 위한 것은 아니다. 여기서, 도1은 본 개시의 실시예에 따른 지능형 연구개발 어시스턴트의 효과 예시도이고; 도2는 본 개시의 제1 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 방법의 흐름도이고; 도3은 본 개시의 제2 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 방법의 흐름도이고; 도4는 본 개시의 제2 실시예에 의해 제공되는 코드 스캐닝 기능의 효과 예시도이고; 도5는 본 개시의 제2 실시예에 의해 제공되는 컴파일링 기능의 효과 예시도이고; 도6은 본 개시의 제2 실시예에 의해 제공되는 코딩 사양 실시간 오류 정정 기능의 효과 예시도이고; 도7은 본 개시의 제2 실시예에 의해 제공되는 코딩 사양 포맷팅 기능의 효과 예시도이고; 도8은 본 개시의 제3 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기의 개략도이고; 도9는 본 개시의 제4 실시예에 의해 제공되는 소프트웨어 개발의 보조 처리 기기의 개략도이며; 도10은 본 개시 실시예의 소프트웨어 개발의 보조 처리 방법을 구현하기 위한 전자 기기의 블록도이다."}
