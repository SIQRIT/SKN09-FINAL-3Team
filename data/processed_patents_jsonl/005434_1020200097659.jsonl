{"patent_id": "10-2020-0097659", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0017319", "출원번호": "10-2020-0097659", "발명의 명칭": "메모리 보호 방법 및 전자 장치", "출원인": "삼성전자주식회사", "발명자": "안준홍"}}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "어플리케이션 프로세서에 있어서,메모리와 관련된 정보를 제어하는 메모리 제어 모듈; 및상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 메모리와 관련된 정보를관리하기 위한 제 2 운영 체제를 포함하고, 상기 메모리 제어 모듈에 작동적으로 연결된 프로세서; 를포함하고,상기 프로세서는,상기 제 1 운영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어를감지하고,상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고,상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하고,상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 제 2 운영 체제는, 하드웨어 가상화를 지원하는 플랫폼인 하이퍼바이저(hypervisor)를 지원하는 하이퍼바이저 운영체제를 포함하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 프로세서는,부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블에 저장된 부팅 관련 데이터를 확인하고,상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성화 여부를 결정하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 프로세서는,상기 제 2 운영 체제의 활성화에 응답하여, 상기 메모리를 상기 제 1 운영 체제에 의해 관리되는 제 1 메모리영역 및 상기 제 2 운영 체제에 의해 관리되는 제 2 메모리 영역으로 분할하고,상기 제 1 메모리 영역에 포함된 상기 제 1 페이지 테이블을 기반으로 상기 제 2 메모리 영역에 제 2 페이지 테이블을 생성하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 프로세서는,상기 제 2 운영 체제의 활성화에 응답하여, 상기 제 1 메모리 영역에 포함된 코드 영역을 제외한 나머지 영역,접근 권한 영역 및 제 1 페이지 테이블 중 적어도 하나에 메모리 접근 속성을 변경하는 어플리케이션 프로세서.공개특허 10-2022-0017319-3-청구항 6 제 5 항에 있어서,상기 프로세서는,상기 코드 영역을 제외한, 나머지 영역을 실행 보호 영역으로 설정하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5 항에 있어서,상기 프로세서는,상기 접근 권한 영역 및 상기 제 1 페이지 테이블을 쓰기 보호 영역으로 설정하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 프로세서는,상기 메모리에 접근하기 위한 시작 주소가 저장된 레지스터를 변경하기 위한 명령어를 감지하고,상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고,상기 제 2 운영 체제에서 상기 레지스터의 접근 속성을 확인하고,상기 레지스터의 접근 속성을 기반으로 상기 레지스터를 변경하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 프로세서는,상기 메모리와 관련된 정보를 변경하기 위한 명령어의 감지에 응답하여, 자동적으로 트랩 이벤트가 생성되고,상기 생성된 트랩 이벤트가 상기 제 2 운영 체제에 포함된 트랩 관리 모듈로 전달되는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 프로세서는,상기 명령어에 대응하는 메모리 영역의 접근 속성을 기반으로 상기 트랩 관리 모듈을 통해 상기 어플리케이션프로세서의 동작을 적어도 부분적으로 중지하는 어플리케이션 프로세서."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치에 있어서,메모리;상기 메모리와 관련된 정보를 제어하는 메모리 제어 모듈;가상 운영 체제를 제어하는 가상 관리 모듈; 및상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 가상 관리 모듈에 의해 제어되며 상기 가상 운영 체제인 제 2 운영 체제를 포함하고, 상기 메모리, 상기 메모리 제어 모듈, 및 상기 가상관리 모듈에 작동적으로 연결된 프로세서; 를 포함하고,상기 프로세서는,상기 제 1 운영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어를감지하고,공개특허 10-2022-0017319-4-상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고,상기 가상 관리 모듈을 통해, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하고,상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정하는 전자 장치."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 프로세서는,부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블에 저장된 부팅 관련 데이터를 확인하고,상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성화 여부를 결정하는 전자 장치."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항에 있어서,상기 메모리는,상기 제 1 운영 체제에 의해 관리되는 제 1 메모리 영역 및 상기 제 2 운영 체제에서 생성되는 제 2 메모리 영역으로 분할되고,상기 제 1 메모리 영역의 코드 영역을 제외한 나머지 영역, 접근 권한 영역 및 제 1 페이지 테이블, 및 상기 제2 메모리 영역의 코드 영역 및 제 2 페이지 테이블 중 적어도 하나에 속성 정보가 추가되는 전자 장치."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11 항에 있어서,상기 메모리에 접근하기 위한 시작 주소가 저장된 적어도 하나의 레지스터를 더 포함하고,상기 프로세서는,상기 레지스터 및 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여 자동적으로 트랩 이벤트가 생성되고, 상기 생성된 트랩 이벤트를 상기 제 2 운영 체제에 포함된 트랩 관리모듈로 전달하는 전자 장치."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "방법에 있어서,제 1 운영 체제에서 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하는 동작;상기 명령어의 감지에 응답하여 자동적으로 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하는 동작;상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하는 동작; 및상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정하는 동작; 을 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블에 저장된 부팅 관련 데이터를 확인하는 동작;및상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성화 여부를 결정하는 동작; 을 더 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "공개특허 10-2022-0017319-5-제 16 항에 있어서,상기 제 2 운영 체제의 활성화에 응답하여, 상기 메모리를 상기 제 1 운영 체제에 의해 관리되는 제 1 메모리영역 및 상기 제 2 운영 체제에 의해 관리되는 제 2 메모리 영역으로 분할하는 동작; 및상기 제 1 메모리 영역에 포함된 상기 제 1 페이지 테이블을 기반으로 상기 제 2 메모리 영역에 제 2 페이지 테이블을 생성하는 동작; 을 더 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서,상기 제 1 메모리 영역의 코드 영역을 제외한 나머지 영역, 접근 권한 영역 및 제 1 페이지 테이블, 및 상기 제2 메모리 영역의 코드 영역 및 상기 제 2 페이지 테이블 중 적어도 하나에 메모리 접근 속성을 변경하는 동작;을 더 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 15 항에 있어서,상기 메모리에 접근하기 위한 시작 주소가 저장된 적어도 하나의 레지스터 및 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하는 동작;상기 명령어의 감지에 응답하여 자동적으로 트랩 이벤트를 생성하는 동작;상기 생성된 트랩 이벤트를 상기 제 2 운영 체제에 포함된 트랩 관리 모듈로 전달하는 동작; 을 더 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서,상기 명령어에 대응하는 메모리 영역의 접근 속성을 기반으로 상기 트랩 관리 모듈을 통해 상기 전자 장치의 동작을 적어도 부분적으로 중지하는 동작; 을 더 포함하는 방법."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따르면, 어플리케이션 프로세서는 메모리와 관련된 정보를 제어하는 메모리 제어 모듈, 및 상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 메모리와 관련된 정보를 관리하 기 위한 제 2 운영 체제를 포함하고, 상기 메모리 제어 모듈에 작동적으로 연결된 프로세서를 포함할 수 있다. 상기 프로세서는, 상기 제 1 운영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하 기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하고, 상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정할 수 있다. 그 밖에 다양 한 실시예들이 가능할 수 있다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 다양한 실시 예는 메모리 보호 방법 및 전자 장치에 관한 것이다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치(예: 통신용 전자 장치, 스마트 폰)가 사용자의 생활과 밀접하게 연관되어 사용됨에 따라, 사용자의 개인 정보와 같은 중요한 정보를 보호할 필요성이 증가하고 있다. 최근 전자 장치에 대한 보안 위협이 증가하고 지능화되어 전자 장치에 대한 보안의 중요성이 높아지고 있다. 전자 장치는 메모리에 대한 관리를 위해, 하드웨어(예: H/W, hardware) 구성인 MMU(memory management unit) (예: 메모리 제어 모듈(memory control module))를 포함할 수 있다. 전자 장치는 설치된 운영 체제를 사용하여, MMU를 통해 메모리에 접근할 수 있고, MMU를 통해 메모리에 저장된 데이터를 관리할 수 있다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 운영 체제 상에서 상기 전자 장치와 관련된 자원을 관리 및 제어할 수 있 다. 전자 장치는 운영 체제를 통해 MMU에 접근할 수 있고, 상기 MMU의 제어 하에, 메모리에 저장된 데이터를 관 리 및 제어할 수 있다. 전자 장치는 해커의 공격에 의해 운영 체제의 보안이 무력화될 수 있다. 예를 들어, 해 커는 운영 체제 관련 권한을 획득할 수 있고, 상기 획득한 권한을 사용하여 메모리에 저장된 정보들을 훔치거나, 변조할 수 있다.본 발명의 다양한 실시예는 전자 장치에서 주요 운영 체제 외에, 하드웨어 가상화를 지원하는 플랫폼인 하이퍼 바이저(hypervisor)를 지원하는 운영체제를 활성화하고, 상기 하이퍼바이저를 통해, 메모리에 저장된 정보들을 관리함으로써, 메모리를 보호하는 방법 및 이를 구현하는 전자 장치를 제공할 수 있다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 어플리케이션 프로세서에 있어서, 메모리와 관련된 정보를 제어하는 메모리 제어 모듈 및 상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 메모리와 관련된 정보를 관리하기 위한 제 2 운영 체제를 포함하고, 상기 메모리 제어 모듈에 작동적으로 연결된 프로세서를 포함할 수 있다. 상기 프로세서는, 상기 제 1 운영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하고, 상기 제 2 운영 체제 에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정할 수 있다. 다양한 실시예에 따른 전자 장치에 있어서, 메모리, 상기 메모리와 관련된 정보를 제어하는 메모리 제어 모듈, 가상 운영 체제를 제어하는 가상 관리 모듈, 및 상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 가상 관리 모듈에 의해 제어되며 상기 가상 운영 체제인 제 2 운영 체제를 포함하고, 상기 메모리, 상기 메모리 제어 모듈, 및 상기 가상 관리 모듈에 작동적으로 연결된 프로세서를 포함할 수 있다. 상 기 프로세서는, 상기 제 1 운영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전 환하고, 상기 가상 관리 모듈을 통해, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하고, 상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경 을 결정할 수 있다. 다양한 실시예에 따른 방법에 있어서, 제 1 운영 체제에서 메모리와 관련된 정보를 변경하기 위한 명령어를 감 지하는 동작, 상기 명령어의 감지에 응답하여 자동적으로 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환 하는 동작, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하는 동작, 및 상기 제 2 운영 체 제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정하는 동작을 포함할 수 있다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 다양한 실시예들은 해커가 메모리에 저장된 정보들에 접근하여, 상기 정보들을 변경하려는 시도를 검 출하여, 메모리에 대한 해커의 접근을 차단함으로써, 전자 장치의 보안성을 향상시키는 것을 목적으로 한다. 일 실시예는 주요 운영 체제 외에, 하이퍼바이저를 지원하는 하이퍼바이저 운영체제를 활성화하고, 상기 활성화된 하이퍼바이저 운영체제를 통해 메모리를 관리함으로써, 전자 장치에 대한 보안이 향상될 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2020-0097659", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출 력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈 , 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에 서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성 요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 (central processing unit) 또는 어플리케이션 프로세서(AP, application processor)) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치(graphic processing unit), 신경망 처리 장치 (NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 및/또는 커뮤니케이션 프로세서 (CP, communication processor))를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구 현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)과 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자 체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공 지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워 크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지 능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(globalnavigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobileedge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 본 발명의 다양한 실시예에 따른 프로그램 모듈, 하이퍼바이저 및 하드웨어의 블록도이 다. 일 실시예에 따르면, 프로그램 모듈(예: 도 1의 프로그램)은 전자 장치(예: 도 1의 전자 장치) 에 관련된 자원을 제어하는 운영 체제(예: 도 1의 운영 체제) 및/또는 운영 체제 상에서 구동되는 다양한 어플리케이션(예: 도 1의 어플리케이션)을 포함할 수 있다. 운영 체제는, 예를 들면, AndroidTM, iOSTM, WindowsTM, SymbianTM, TizenTM, 또는 BadaTM를 포함할 수 있다. 운영 체제는 전자 장치의 동작과 관 련된 정보를 운영 및 제어할 수 있는 소프트웨어로 정의될 수 있다. 예를 들어, 운영 체제는 하드 웨어에 포함 된 적어도 하나의 구성부가 높은 성능을 발휘할 수 있도록 관리하는 시스템일 수 있다. 도 2를 참조하면, 프로그램 모듈은 커널, 미들웨어(예: 도 1의 미들 웨어), API, 및 /또는 어플리케이션(예: 도 1의 어플리케이션)을 포함할 수 있다. 프로그램 모듈의 적어도 일부 는 전자 장치 상에 프리로드 되거나, 외부 전자 장치(예: 전자 장치(102, 104) 및/또는 서버)로부터 다운로드 가능하다. 일 실시예에 따르면, 커널은 시스템 리소스 매니저 및/또는 디바이스 드라이버를 포함할 수 있 다. 시스템 리소스 매니저는 시스템 리소스의 제어, 할당, 또는 회수를 수행할 수 있다. 디바이스 드라이 버는, 예를 들면, 디스플레이 드라이버, 카메라 드라이버, 블루투스 드라이버, 공유 메모리 드라이버, USB 드라이버, 키패드 드라이버, WiFi 드라이버, 오디오 드라이버, 또는 IPC(inter-process communication) 드라이 버를 포함할 수 있다. 일 실시예에 따르면, 미들웨어는, 예를 들면, 어플리케이션이 공통적으로 필요로 하는 기능을 제공하 거나, 어플리케이션이 전자 장치 내부의 제한된 시스템 자원을 사용할 수 있도록 API를 통해 다양한 기능들을 어플리케이션으로 제공할 수 있다. 일 실시예에 따르면, 미들웨어 는 런타임 라이브러리 , 어플리케이션 매니저, 윈도우 매니저, 멀티미디어 매니저, 리소스 매니저, 파워 매 니저, 데이터베이스 매니저, 패키지 매니저, 커넥티비티 매니저, 노티피케이션 매니저 , 로케이션 매니저, 그래픽 매니저, 및/또는 시큐리티 매니저 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 미들웨어는 런타임 라이브러리를 포함할 수 있다. 런타임 라이브러리는, 예를 들면, 어플리케이션이 실행되는 동안에 프로그래밍 언어를 통해 새로운 기능을 추가하기 위해 컴파일 러가 사용하는 라이브러리 모듈을 포함할 수 있다. 런타임 라이브러리는 입출력 관리, 메모리 관리, 또는 산술 함수 처리를 수행할 수 있다. 일 실시예에 따르면, 어플리케이션 매니저는, 예를 들면, 어플리케이션의 생명 주기를 관리할 수 있 다. 윈도우 매니저는 화면에서 사용되는 GUI(graphic user interface) 자원을 관리할 수 있다. 멀티미디어 매니저는 미디어 파일들의 재생에 필요한 포맷을 파악하고, 해당 포맷에 맞는 코덱을 이용하여 미디어 파 일의 인코딩 또는 디코딩을 수행할 수 있다. 리소스 매니저는 어플리케이션의 소스 코드 또는 메모리 의 공간을 관리할 수 있다. 파워 매니저는, 예를 들면, 배터리의 용량 또는 전원을 관리하고, 전자 장치의 동작에 필요한 전력 정보를 제공할 수 있다. 일 실시예에 따르면, 파워 매니저는 바이오스(BIOS: basic input/output system)와 연동할 수 있다. 데이터베이스 매니저는, 예를 들면, 어플리케이션에서 사용 될 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저는 패키지 파일의 형태로 배포되는 어 플리케이션의 설치 또는 갱신을 관리할 수 있다. 커넥티비티 매니저는, 예를 들면, 무선 연결을 관리할 수 있다. 노티피케이션 매니저는, 예를 들면, 도착 메시지, 약속, 근접성 알림 등의 이벤트를 사용자에게 제 공할 수 있다. 로케이션 매니저는, 예를 들면, 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저 는, 예를 들면, 사용자에게 제공될 그래픽 효과 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 보안 매니저는, 예를 들면, 시스템 보안 또는 사용자 인증을 제공할 수 있다. 일 실시예에 따르면, 미들웨어는 전자 장치의 음성 또는 영상 통화 기능을 관리하기 위한 통화(telephony) 매니저 또는 전술된 구성요 소들의 기능들의 조합을 형성할 수 있는 하는 미들웨어 모듈을 포함할 수 있다. 일 실시예에 따르면, 미들웨어는 운영 체제의 종류 별로 특화된 모듈을 제공할 수 있다. 미들웨어는 동적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. API는, 예를 들면, API 프로그래밍 함수들의 집합으로, 운영 체제에 따라 다른 구성으로 제공될 수 있다. 예를 들면, 안드로이드 또는 iOS의 경우, 플랫폼 별로 하나의 API 셋을 제공할 수 있으며, 타이젠의 경우, 플랫폼 별로 두 개 이상의 API 셋을 제공할 수 있다. 어플리케이션은, 예를 들면, 홈, 다이얼러, SMS/MMS, IM(instant message), 브라우저, 카메라, 알람, 컨 택트, 음성 다이얼, 이메일, 달력, 미디어 플레이어, 앨범, 와치, 헬스 케어(예: 운동량 또는 혈당 등을 측정), 및/또는 환경 정보(예: 기압, 습도, 또는 온도 정보) 제공 어플리케이션 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 어플리케이션은 전자 장치와 외부 전자 장치(102, 104) 사이의 정보 교환을 지원할 수 있는 정보 교환 어플리케이션을 포함할 수 있다. 일 실시예에 따르면, 프로그램 모듈의 적어도 일부는 소프트웨어, 펌웨어, 하드웨어, 또는 이들 중 적어도 둘 이상의 조합으로 구현(예: 실행)될 수 있으며, 하나 이상의 기능을 수행하기 위한 모듈, 프로그램, 루틴, 명 령어 세트 또는 프로세스를 포함할 수 있다. 일 실시예에 따르면, 하이퍼바이저는 하나의 전자 장치에서 다수의 운영 체제를 동시에 실행할 수 있 도록 관리하는 가상 플랫폼 기술로 정의될 수 있다. 예를 들어, 하이퍼바이저는 전자 장치에서 실행 된, 하드웨어 가상화를 지원하는 플랫폼으로 정의될 수 있다. 예를 들어, 하이퍼바이저는 하드웨어 구성요 소(예: 도 3의 가상 관리 모듈) 및/또는 하드웨어 구성요소를 지원하는 소프트웨어 구성요소(예: 펌웨어, 드라이버)를 포함할 수 있다. 하이퍼바이저는 하이퍼바이저 운영체제(예: 도 3의 제 2 운영체제)에 의해 지원 및/또는 관리될 수 있다. 일 예에서, 하이퍼바이저 운영체제는 하이퍼바이저에 포함될 수 있다. 또 다른 예에서, 하이퍼바이저 운영체제는 하이퍼바이저와 독립적으로 운용될 수 있다. 일 실시예에 따르 면, 전자 장치는 주요 운영 체제로서 제 1 운영 체제를 통해 전자 장치의 동작이 운영되는 상태에서, 주요 운영 체제가 하이퍼바이저 운영체제(예: 제 2 운영 체제)로 전환될 수 있다. 예를 들어, 전자 장치는 제 1 운영 체제로부터 권한이 설정되지 않은 영역으로 접근 시, 트랩 이벤트가 발생할 수 있고, 전자 장치(10 1)의 주요 운영 체제가 제 1 운영 체제에서 제 2 운영 체제(예: 하이퍼바이저 운영체제)로 전환될 수 있다. 일 실시예에 따르면, 하이퍼바이저를 지원하는 운영체제는 제 1 운영 체제보다 높은 권한을 가질 수 있다. 예 를 들어, 해커가 제 1 운영 체제의 권한을 획득하더라도, 하이퍼바이저에 대한 접근이 불가능할 수 있다. 도 2를 참조하면, 하드웨어는 전자 장치를 구성하는 소프트웨어 구성요소 및 하드웨어 구성요소 중 하드웨어 구성요소를 포함할 수 있다. 일 실시예에 따르면, 하드웨어는 MMU(memory management unit)(예: 메모리 제어 모듈(memory control module))를 포함할 수 있다. 일 실시예에 따르면, MMU는 전자 장치에서 수행되는 메모리 접근 관련 명령어들을 관리 및 제어할 수 있다. 예를 들어, MMU는 메모리(예: 도 1의 메모리 )로 접근하는 모든 명령어들을 관리할 수 있다. MMU는 메모리에 저장된 자원을 효율적으로 할당하여 분배 할 수 있다. 예를 들어, MMU는 적어도 하나의 태스크(task)를 처리하기 위한 메모리 영역(memory region)을 설 정할 수 있고, 상기 메모리 영역을 효율적으로 관리할 수 있다. 이하에서, MMU는 메모리 제어 모듈로 칭할 수 있다. 일 실시예에 따르면, 도 2의 프로그램 모듈 및 하이퍼바이저(예: 하이퍼바이저 운영체제)는 도 1의 프로세서에 의해 실행될 수 있고, 하드웨어는 도 1의 프로세서에 포함될 수 있다. 예를 들어, 하드웨어는 프로세서와 하나의 회로(예: SOC(system on chip)) 또는 하나의 패키지에 포함될 수 있다. 도 3은 본 발명의 다양한 실시예에 따른 전자 장치의 어플리케이션 프로세서 및 메모리에 대한 블록도이다. 도 3을 참조하면, 어플리케이션 프로세서는 도 1에 도시된 프로세서의 메인 프로세서에 포함된 어플리케이션 프로세서(AP, application processor)로 정의될 수 있다. 일 실시예에 따르면, 어플리케이션 프로 세서는 메인 프로세서에 포함될 수 있고, 중앙 처리 모듈, 메모리 제어 모듈(예: MMU(memory management unit)) 및 가상 관리 모듈(예: 하이퍼바이저 모듈(hypervisor module))을 포함할 수 있다. 일 실시예에 따르면, 중앙 처리 모듈은 어플리케이션 프로세서에서 소프트웨어를 실행하는 중앙 처리 장치(central processing unit, CPU)를 포함할 수 있다. 메모리 제어 모듈 및 가상 관리 모듈은 하드웨어 구성 요소로 구분될 수 있다. 도 3에는 메모리 제어 모듈과 가상 관리 모듈이 별도 의 하드웨어 구성요소로 도시되었으나, 다양한 실시예에 따르면, 가상 관리 모듈의 적어도 일부 기능은 메 모리 제어 모듈에 포함될 수 있다. 예를 들어, 어플리케이션 프로세서에 하이퍼바이저 기능이 활성화 (예: 제 2 운영 체제의 활성화)됨에 따라, 메모리 제어 모듈은 역시 내재된 가상 관리 모듈의 기능부를 활성화하여, '하이퍼바이저가 활성화된 메모리 제어 모듈'로 설정될 수 있다. 일 실시예에 중앙 처리 모듈은 적어도 하나의 운영 체제(예: 제 1 운영 체제 및 제 2 운영 체제 )를 실행할 수 있다. 일 실시예에 따르면, 제 1 운영 체제 및 제 2 운영 체제는 부트 로더(boot loader), 펌웨어(firmware), 및/또는 소프트웨어 플랫폼 중 적어도 하나를 더 포함할 수 있다. 제 1 운영 체제 는 전자 장치를 운용하는 주요 운영 체제로 정의될 수 있고, 게스트 운영 체제(guest OS)를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 제 1 운영 체제를 통해 전자 장치를 구성하는 적어 도 하나의 구성 요소를 관리할 수 있다. 일 실시예에 따르면, 전자 장치의 중앙 처리 모듈은 제 1 운 영 체제가 활성화된 상태에서, 메모리 제어 모듈을 통해 메모리(예: 도 1의 메모리)에 저장된 정보에 접근할 수 있다. 예를 들어, 중앙 처리 모듈은 제 1 운영 체제가 활성화된 상태에서, 제 1 운 영 체제에 대응하는 제 1 메모리 영역에 저장된 정보에 접근할 수 있다. 일 실시예에 따르면, 제 2 운영 체제는 하드웨어 가상화를 지원하는 플랫폼인 하이퍼바이저(hypervisor)를 지원할 수 있고, 하이퍼바이저 운영체제로 정의될 수 있다. 하이퍼바이저 운영체제는 하이퍼바이저 플랫폼에 포 함될 수도 있고, 독립적으로 운용될 수도 있다. 일 실시예에 따르면, 제 2 운영 체제(예: 하이퍼바이저 운 영체제)는 전자 장치의 부팅 시점에서 활성화 여부가 결정될 수 있다. 일 실시예에 따르면, 전자 장치 는 제 1 운영 체제를 기반으로 전자 장치가 운용되는 상태에서 제 2 운영 체제로 운영 체 제가 전환될 수 있다. 다른 실시예에 따르면, 제 1 운영 체제에서 제 2 운영 체제로 전환되는 시점은 부팅 시점으로 한정되지 않는다. 제 2 운영 체제는 제 1 운영 체제 보다 높은 권한을 가진 운영 체제 일 수 있다. 예를 들어, 해커가 제 1 운영 체제에 대한 제어 권한을 획득하더라도, 제 2 운영 체제로 의 접근이 불가능할 수 있다. 일 실시예에 따르면, 제 2 운영 체제은 트랩 관리 모듈(trapping management module), 쓰기 보호 모 듈(write protection module) 및/또는 감시 모듈(monitoring module)을 포함할 수 있다. 일 실시예 에 따르면, 트랩 관리 모듈, 쓰기 보호 모듈 및/또는 감시 모듈은 제 2 운영 체제가 활성 화된 상태에서 동작할 수 있다. 일 실시예에 따르면, 제 2 운영 체제의 트랩 관리 모듈은 가상 관리 모듈을 통해 TTBR에 쓰기 (write) 명령어를 수행하려는 상황 및 메모리의 페이지 테이블에 쓰기(write) 명령어를 수행하려는 상황 중 적어도 하나의 상황을 감지할 수 있고, 상기 감지에 응답하여, 상기 쓰기 명령어가 수행되는 영역의 권한 정 보를 확인할 수 있다. 예를 들어, 해당 영역이 쓰기 보호 영역으로 설정된 경우 가상 관리 모듈은 트랩 이 벤트를 발생시켜 트랩 관리 모듈로 전달할 수 있다. 예를 들어, 메모리 제어 모듈(MMU 및/또는 가상 관리 모듈)은 중앙 처리 모듈에 트랩을 위해 지정된 인터럽트를 발생시켜서, 제 2 운영 체제에서 트 랩 관리 모듈(예: 트랩 인터럽트핸들러)이 실행되도록 제어할 수 있다. 제 2 운영 체제는 트랩 이벤 트의 발생에 응답하여, 상기 쓰기 명령어의 수행을 중단시킬 수 있다. 일 실시예에 따르면, 제 2 운영 체제 는 메모리의 일 영역에 대한 권한 정보를 확인할 수 있고, 상기 확인된 권한 정보를 기반으로 해당 영역에 대한 변경 여부를 결정할 수 있다. 일 실시예에 따르면, 쓰기 보호 모듈은 제 2 운영 체제에 기반하여, 메모리에 할당된 제 2 메모 리 영역에 저장된 정보를 관리할 수 있다. 예를 들어, 메모리는 제 1 운영 체제에 대응하는 제 1 메모리 영역 및 제 2 운영 체제에 대응하는 제 2 메모리 영역으로 구분될 수 있다. 일 실시예 에 따르면, 전자 장치는 제 2 운영 체제가 활성화된 상태에서 제 1 메모리 영역에 저장된 정보 를 적어도 부분적으로 제 2 메모리 영역에 복사 및/또는 변경하여 저장할 수 있다. 예를 들어, 전자 장치 는 제 1 메모리 영역에 저장된 페이지 테이블 정보(pagetable information), 접근 권한 정보 (credential data), 및/또는 코드 정보(code)를 제 2 메모리 영역으로 이동시켜 저장할 수 있다. 일 실시 예에 따르면, 쓰기 보호 모듈은 제 1 메모리 영역에 저장된 정보를 제 2 메모리 영역으로 이동 시, 상기 정보에 대한 속성 정보를 변경 및/또는 추가할 수 있다. 예를 들어, 쓰기 보호 모듈은 제 2 메모 리 영역에 저장된 정보들에 대한 쓰기 및 변경을 차단하도록 접근 속성을 변경할 수 있다. 일 실시예에 따르면, 감시 모듈은 제 2 운영 체제에 기반하여, 메모리에 저장된 정보를 변경하 기 위한 명령어를 감지할 수 있고, 변경하기 위한 영역의 속성 정보(예: 쓰기 허용, 쓰기 제한)를 확인할 수 있 다. 예를 들어, 상기 확인된 속성 정보를 기반으로, 상기 정보가 저장된 영역이 변경 가능한 영역으로 확인되면, 제 2 운영 체제는 상기 정보의 변경을 허용할 수 있다. 예를 들어, 상기 정보가 저장된 영역이 변경 불가능한 영역으로 확인되면, 제 2 운영 체제는 상기 정보의 변경을 불허할 수 있다. 제 2 운영 체제 는 상기 명령어를 허용하지 않고, 상기 명령어와 관련된 적어도 하나의 소프트웨어의 시스템을 중지하거나, 제 1 운영 체제의 시스템 전체를 중지시킬 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 MMU(memory management unit)를 포함할 수 있다. 메모리 제어 모듈은 중앙 처리 모듈이 처리하는 메모리 관련 명령어들(instructions)의 처리 여부를 결정할 수 있 다. 메모리 제어 모듈은 메모리에 저장된 정보로 접근하기 위한 주소 정보를 참조할 수 있다. 일 실 시예에 따르면, 메모리 제어 모듈은 주소 정보가 저장된 레지스터 정보를 참조할 수 있다. 예를 들어, 레 지스터 정보는 TTBR(translation table base register) 및 VTTBR(virtual translation table base register) 를 포함할 수 있다. 예를 들어, TTBR(translation table base register)은 메모리의 제 1 페이지 테이블 (예: 제 1 운영 체제에 의해 관리되는 메모리 영역)에 저장된 정보를 탐색하기 위한 주소 정보를 포함한 레지스터(register)로 정의될 수 있고, VTTBR(virtual translation table base register)은 제 2 페이지 테이 블(예: 제 2 운영 체제에 의해 관리되는 메모리 영역)에 저장된 정보를 탐색하기 위한 주소 정보를 포함한 레지스터(register)로 정의될 수 있다. 예를 들어, ARMv8 architecture에서 TTBR은 TTBR0_EL1 및 TTBR1_EL1로 정의될 수 있고, VTTBR은 TTBR_EL2로 정의될 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 중앙 처리 모듈로부터 가상 주소(virtual address)를 획득 할 수 있고, TTBR에 접근하여, 상기 획득한 가상 주소에 대응하는 페이지 테이블 주소를 획득할 수 있다. 메모 리 제어 모듈은 획득한 페이지 테이블 주소에 기반하여 해당 페이지 테이블에 저장된 정보를 획득할 수 있 고, 상기 저장된 정보를 기반으로 상기 가상 주소에 대응하는 물리 주소(physical address)를 획득할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 메모리에 정보가 저장되는 상황 또는 메모리에서 정보 변경되는 상황을 감지할 수 있다. 메모리 제어 모듈은 메모리를 구성하는 적어도 하나의 저장 영역에 대응하여 속성 정보를 설정할 수 있다. 예를 들어, 메모리 제어 모듈은 특정한 저장 영역에 저장된 정보를 보호하기 위해 속성 정보를 설정할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 속성 정보가 설정된 저장 영역에 대한 접근을 감지할 수 있고, 상기 접근이 부적절하다고 판단되는 경우(예: 접근하는 프로세스에 접근 권한이 없는 경우) 상기 접근을 차단시킬 수 있다. 일 실시예에 따르면, 가상 관리 모듈은 제 2 운영 체제가 활성화된 상태에서 함께 활성화될 수 있다. 가상 관리 모듈은 하이퍼바이저를 지원하는 제 2 운영 체제와 메모리 제어 모듈 사이에 배치될 수 있고, 상호 간에 명령어를 전달할 수 있다. 일 실시예에 따르면, 가상 관리 모듈은 메모리 제어 모듈 에 포함될 수 있다. 일 실시예에 따르면, 제 1 운영 체제에서 메모리 제어 모듈은 가상 관리 모 듈을 통해 메모리의 정보 변경을 감시할 수 있다. 일 실시예에 따르면, 가상 관리 모듈은 메모 리에 저장된 정보의 변경 여부를 감지할 수 있고, 상기 정보의 변경에 응답하여, 트랩 이벤트를 생성할 수 있다. 가상 관리 모듈은 제 2 운영 체제에 상기 트랩 이벤트를 전달할 수 있고, 제 2 운영 체제(32 0)는 상기 트랩 이벤트의 발생을 확인할 수 있다. 다른 실시예에 따르면, 가상 관리 모듈은 제 2 운영 체 제에 포함된 감시 모듈을 적어도 부분적으로 포함할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈 은 가상 관리 모듈을 제어하여, 메모리 또는 레지스터의 정보 변경을 감시할 수 있고, 상기 정 보 변경에 응답하여 트랩 이벤트를 생성할 수 있다. 일 실시예에 따르면, 메모리는 제 1 운영 체제가 활성화된 상태에서 관리되는 제 1 메모리 영역 및 제 2 운영 체제가 활성화된 상태에서 관리되는 제 2 메모리 영역으로 구분될 수 있다. 일 실시예 에 따르면, 제 2 운영 체제가 활성화될 때, 제 2 운영 체제는 제 2 메모리 영역에 포함된 페이 지 테이블(예: 도 4의 제 2 페이지 테이블)의 속성 정보(예: 도 4의 제 2 속성 정보)를 이용하여 제 1 메모리 영역에 저장된 정보의 속성을 변경할 수 있다. 예를 들어, 제 2 운영 체제는 제 1 메모리 영역을 가리키는 제 2 메모리 영역에 포함된 페이지 테이블의 속성 정보를 변경함으로써, 상기 제 1 메모리 영역의 적어도 일부 영역을 쓰기 보호 영역 또는 실행 보호 영역으로 접근 권한을 부여할 수 있다. 일 실시예에 따르면, 제 2 메모리 영역에 포함된 페이지 테이블은 해커가 제 1 메모리 영역을 해킹하 더라도, 접근할 수 없는 영역을 포함할 수 있다. 예를 들어, 제 2 메모리 영역에 포함된 페이지 테이블의 속성 정보는 보안성이 높은 정보일 수 있다.도 4는 본 발명의 다양한 실시예에 따른 제 1 운영 체제 및 제 2 운영 체제를 사용하여 메모리를 보호하는 방법 이 도시된 예시도이다. 도 4를 참조하면, 일 실시예에 따른 어플리케이션 프로세서는 도 1의 메인 프로세서에 포함된 어플리 케이션 프로세서(AP)로 정의될 수 있다. 어플리케이션 프로세서는 소프트웨어 구성 요소와 하드웨어 구성 요소로 구분될 수 있다. 예를 들어, 소프트웨어 구성 요소는 제 1 운영 체제 및 제 2 운영 체제를 포함할 수 있고, 하드웨어 구성 요소는 메모리 제어 모듈, 가상 관리 모듈, TTBR 및 VTTBR를 포함할 수 있다. 일 실시예에 따르면, TTBR 및 VTTBR은 별도의 저장 영 역(예: 레지스터 영역)으로 하드웨어 구성 요소에 포함되었으나, 이에 한정되지 않는다. 일 실시예에 따르 면, TTBR 및 VTTBR은 메모리에 포함될 수 있다. 일 실시예에 따르면, 메모리는 제 1 메모리 영역 및 제 2 메모리 영역을 포함할 수 있다. 일 실 시예에 따르면, 제 1 운영 체제는 제 1 메모리 영역에 접근 권한이 있으나, 제 2 메모리 영역에 접근 권한이 없을 수 있다. 예를 들어, 제 1 메모리 영역은 제 1 운영 체제가 사용하는 것으로 할당 된 메모리 주소 영역을 포함하고, 제 2 메모리 영역은 제 2 운영 체제가 사용하는 것으로 할당된 메 모리 주소 영역을 포함할 수 있다. 예를 들어, 제 1 메모리 영역은 제 1 운영 체제에서 코드, 데이터, 스 택 및/또는 힙 영역으로 사용하기 위해 할당된 메모리 주소 영역을 포함할 수 있고, 제 2 메모리 영역은 제 2 운영 체제에서 코드, 데이터, 스택 및/또는 힙 영역으로 사용하기 위해 할당된 메모리 주소 영역을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 부팅 시, 주요 운영 체제인 제 1 운영 체제 외에 추가적으로 제 2 운영 체제를 활성화할 수 있다. 예를 들어, 제 2 운영 체제는 하드웨어 가상화를 지원하는 플랫폼인 하이퍼바이저를 지원하는 하이퍼바이저 운영체제를 를 포함할 수 있다. 제 2 운영 체제는 제 1 운영 체제 보다 높은 권한을 가진 운영 체제일 수 있다. 예를 들어, 해커가 제 1 운영 체제의 권한을 획득하더라도, 제 2 운영 체제에 대한 접근이 불가능할 수 있다. 제 2 운영 체제(32 0)는 제 1 운영 체제가 속한 프로그램 모듈(예: 도 2의 프로그램 모듈)과 하드웨어(예: 도 2의 하드 웨어) 사이에서 실행될 수 있다.. 일 실시예에 따르면, 전자 장치가 부팅될 때, 제 2 운영 체제는 제 1 운영 체제에서 변경 가능 한 TTBR 정보를 리스트로 저장할 수 있다. 제 2 운영 체제는 제 1 운영 체제에 대응하는 제 1 메모리 영역에 포함된, 제 1 운영 체제에서 실행 가능한 코드 정보, 접근 권한 정보, 및/ 또는 제 1 페이지 테이블을 리스트로 저장할 수 있다. 제 2 운영 체제는 제 1 운영 체제의 실행 가능한 코드 정보, 접근 권한 정보, 및/또는 제 1 페이지 테이블을 기반으로 제 2 페이지 테이 블을 생성할 수 있다. 제 2 페이지 테이블은 제 2 운영 체제에 대응하는 제 2 메모리 영역(35 2)에 저장될 수 있다. 일 실시예에 따르면, 제 1 메모리 영역은 제 1 운영 체제에 의해 관리되는 영 역을 포함하고, 제 2 메모리 영역은 제 2 운영 체제에 의해 관리되는 영역을 포함할 수 있다. 일 실시예에 따르면, 제 2 운영 체제는 메모리 제어 모듈이 VTTBR(virtual translation table base register)을 사용하도록 설정할 수 있다. 일 실시예에 따르면, 제 2 운영 체제는 제 2 메모리 영역에 포함된 제 2 페이지 테이블의 제 2 속성 정보를 변경함으로써, 제 1 메모리 영역에 포함된 제 1 페이지 테이블의 적어도 일부 영역에 대한 접근 권한을 변경할 수 있다. 예를 들어, 제 2 운영 체제 는 제 1 메모리 영역의 일부 영역을 쓰기 보호 영역(execute protected region) 또는 실행 보호 영역 (write protected region)으로 접근 권한을 변경할 수 있다. 일 실시예에 따르면, 제 2 페이지 테이블의 제 2 속성 정보는 제 1 운영 체제에 의해 접근이 불가능한 영역으로, 제 1 운영 체제를 통해 실 행되거나, 변경될 수 없다. 예를 들어, 제 2 페이지 테이블의 제 2 속성 정보는 제 2 운영 체제(32 0)의 제어 하에, 접근될 수 있다. 일 실시예에 따르면, 전자 장치는 실행 보호 영역으로 설정된 정보를 실행하는 상황을 감지할 수 있고, 제 2 운영 체제에 트랩 이벤트가 발생하였음을 알려줄 수 있다. 전자 장치는 쓰기 보호 영역으로 설정된 정보를 변경하는 상황을 감지할 수 있고, 제 2 운영 체제에 트랩 이벤트가 발생하였음을 알려줄 수 있다. 일 실시예에 따르면, 제 2 운영 체제는 트랩 이벤트의 발생을 확인하고, 트랩 관리 모듈을 통해 상기 트랩 이벤트가 정당한 이벤트인지 여부를 판단할 수 있다. 일 실시예에 따르면, 전자 장치는 제 2 운영 체제가 활성화된 상태에서 메모리에 저장된 정보를 보호하는 동작을 도시한다. 동작 411에서 전자 장치의 제 1 운영 체제는 가상 주소(virtual address)접근 명령을 수신할 수 있고, 동작 412에서 가상 주소 정보를 확인할 수 있다. 제 1 운영 체제는 메모리 에 접근하기 위해 메모리 제어 모듈(예: MMU(memory management unit))에 상기 확인된 가상 주소 정 보를 전달할 수 있고, 메모리로의 접근을 요청할 수 있다. 메모리 제어 모듈은 TTBR(translation table base register)에서 제 1 메모리 영역의 제 1 페이지 테이블 시작 주 소를 확인할 수 있다. 동작 460에서 메모리 제어 모듈은 상기 확인된 제 1 페이지 테이블 시작 주소 를 기반으로 제 1 페이지 테이블에 접근(access)하여 저장된 제 1 데이터를 획득할 수 있다. 예를 들어, 제 1 데이터는 가상 주소에 대응되는 물리적 주소(예: guest physical address) 및 제 1 속성 정보를 포 함할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 상기 획득한 제 1 데이터를 기반으로 가상 주소 (VA, virtual address)를 GPA(guest physical address)로 변환할 수 있다. 메모리 제어 모듈은 상기 GPA 를 PA(physical address)로 변환하기 위해, VTTBR(virtual translation table base register)에서 제 2 메모리 영역의 제 2 페이지 테이블 시작 주소를 확인할 수 있다. 동작 470에서 메모리 제어 모듈 은 상기 확인된 제 2 페이지 테이블 시작 주소를 기반으로 제 2 페이지 테이블에 접근(access) 하여 저장된 제 2 데이터를 획득할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 상기 획득한 제 2 데이터를 기반으로 상기 GPA를 PA로 변환할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 상기 PA를 기반으로 제 1 메모리 영역의 코드 정보 및 제 2 메모리 영역의 코드 정보에 접근할 수 있 고, 상기 가상 주소 정보에 대응하는 데이터를 획득할 수 있다. 일 실시예에 따르면, 부팅 시점에 제 2 운영 체제가 활성화된 전자 장치인 경우 메모리 제어 모듈 은 TTBR에 저장된 정보를 사용하여 가상 주소(VA)를 GPA로 변환할 수 있고, VTTBR에 저장된 정 보를 사용하여 GPA를 PA로 변환할 수 있다. 다른 실시예에 따르면, 제 2 운영 체제가 활성화되지 않은 전 자 장치의 메모리 제어 모듈은 TTBR에 저장된 정보를 사용하여 가상 주소(VA)를 GPA로 변환하는 과정만을 수행할 수 있다. 예를 들어, VTTBR은 제 2 운영 체제가 활성화된 전자 장치에서 접근 할 수 있는 레지스터 영역을 포함할 수 있다. 일 실시예에 따르면, 제 2 운영 체제가 활성화된 전자 장치는 제 2 메모리 영역 및 VTTBR 에 포함된 정보를 활용할 수 있다. 제 2 운영 체제는 제 1 운영 체제 보다 높은 관리 권한을 가질 수 있다. 예를 들어, 제 1 운영 체제는 제 2 운영 체제로의 접근이 어려울 수 있다. 일 실시예에 따르면, 제 2 운영 체제가 활성화된 전자 장치는 가상 관리 모듈을 통해 해커들의 부당한 접근을 감지할 수 있고, 데이터를 보호할 수 있다. 예를 들어, 동작 481에서 가상 관리 모듈은 TTBR의 변경 여부를 감지할 수 있고, 동작 482에서 제 2 메모리 영역에 저장된 정보의 실행 및 변경 여부를 감지할 수 있다. 가상 관리 모듈은 동작 481 및 동작 482에 따른 감지에 응답하여, 트랩(trap) 이 벤트를 발생시킬 수 있다. 동작 493에서 가상 관리 모듈은 트랩 이벤트의 발생 정보를 트랩 관리 모듈 에 전달할 수 있고, 트랩 관리 모듈을 통해 전자 장치의 시스템을 적어도 부분적으로 중단하도 록 제어할 수 있다. 또 다른 예를 들어, 동작 482에서, 가상 관리 모듈은 제 2 메모리 영역의 제 2 페이지 테이블에 대한 쓰기 명령어 및/또는 실행 명령어를 감지할 수 있고, 상기 감지된 명령어에 대응되 는 영역의 제 2 속성 정보를 확인할 수 있다. 가상 관리 모듈은 상기 확인된 제 2 속성 정보를 기반으로 상기 감지된 명령어를 수행하기 위한 영역의 접근 권한을 확인할 수 있다. 예를 들어, 명령어를 수행 하기 위한 영역이 쓰기 보호 영역으로 확인되면, 가상 관리 모듈은 트랩 이벤트를 발생시킬 수 있다. 동작 493에서 가상 관리 모듈은 트랩 이벤트의 발생 정보를 트랩 관리 모듈에 전달할 수 있고, 트랩 관리 모듈을 통해 상기 명령어와 관련된 적어도 하나의 소프트웨어의 시스템을 중지하거나, 전자 장치의 시스템을 적어도 부분적으로 중단시키도록 제어할 수 있다. 일 실시예에 따르면, 전자 장치는 제 2 운영 체제가 활성화된 상태에서 제 2 메모리 영역의 제 2 페이지 테이블을 생성할 수 있고, 상기 제 2 페이지 테이블에 포함된 적어도 하나의 데이터와 관련 하여 제 2 속성 정보를 설정할 수 있다. 제 2 운영 체제는 제 2 페이지 테이블에 대응하여 설정 된 제 2 속성 정보를 리스트화하여 관리할 수 있다. 예를 들어, 제 2 속성 정보는 데이터의 변경을 감지하기 위한 쓰기 보호 설정(write protected configuration) 및 데이터의 실행을 감지하기 위한 실행 보호 설정(execute protected configuration)을 포함할 수 있다. 일 실시예에 따르면, 가상 관리 모듈은 제 2 페이지 테이블에 포함된 데이터를 변경하기 위한 명령어를 감지할 수 있고, 상기 데이터의 제 2 속성 정보 를 확인할 수 있다. 만약, 제 2 속성 정보가 쓰기 보호 설정을 포함하는 경우 가상 관리 모듈은 트랩 이벤트를 발생시킬 수 있다. 가상 관리 모듈은 트랩 이벤트의 발생 정보를 트랩 관리 모듈에 전 달할 수 있고, 트랩 관리 모듈은 상기 트랩 이벤트의 발생에 응답하여, 상기 명령어와 관련된 적어도 하나의 소프트웨어의 시스템을 중지하거나, 전자 장치의 시스템을 적어도 부분적으로 중단시킬 수 있다. 일 실시예에 따르면, 전자 장치의 제 1 운영 체제는 메모리 제어 모듈의 제어 하에, 메모리 (예: 제 1 운영 체제의 프로그램 코드 데이터)에 접근할 수 있다. 메모리 제어 모듈은 제 1 운 영 체제가 관리하는 제 1 메모리 영역에 포함된 제 1 운영 체제의 제 1 페이지 테이블 및 제 2 운영 체제가 관리하는 제 2 메모리 영역에 포함된 제 2 운영 체제의 제 2 페이지 테이블 을 참조하여 메모리에 접근할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 제 1 페이지 테이블에 저장된 주소 정보를 기반으로 제 2 페이지 테이블에 접근할 수 있고, 제 2 페이지 테이블 의 제 2 속성 정보를 기반으로 메모리에 대한 접근 속성을 확인할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 메모리에 접근하는 명령어를 감지할 수 있고, 가상 관리 모 듈을 통해 트랩 이벤트를 발생시킬 수 있다. 가상 관리 모듈은 상기 트랩 이벤트를 제 2 운영 체제 의 트랩 관리 모듈에 전달할 수 있다. 메모리 제어 모듈은 상기 명령어에 대응하는 메모리 영역 의 접근 속성을 확인할 수 있고, 상기 접근 속성을 기반으로 상기 명령어의 접근이 허용되는지 여부를 결정할 수 있다. 일 실시예에 따르면, 상기 명령어의 접근이 불가능한 경우 제 2 운영 체제는 상기 명령어의 실행 을 허용하지 않고, 상기 명령어와 관련된 적어도 하나의 소프트웨어의 시스템을 중지하거나, 제 1 운영 체제 의 시스템 전체를 중지시킬 수 있다. 다양한 실시예에 따른 어플리케이션 프로세서에 있어서, 메모리와 관련된 정보를 제어하는 메모리 제 어 모듈, 및 상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 메모리와 관련된 정보를 관리하기 위한 제 2 운영 체제를 포함하고, 상기 메모리 제어 모듈 에 작동적으로 연결된 프로세서를 포함할 수 있다. 상기 프로세서는, 상기 제 1 운영 체제(31 0)에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하 고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환하고, 상 기 제 2 운영 체제에서 상기 가상 관리 모듈을 통해 상기 정보에 대응하는 속성 정보를 확인하고, 상 기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변 경을 결정할 수 있다. 일 실시예에 따르면, 상기 제 2 운영 체제는 하드웨어 가상화를 지원하는 플랫폼인 하이퍼바이저 (hypervisor)를 지원하는 하이퍼바이저 운영체제를 포함할 수 있다. 일 실시예에 따른 프로세서는 부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블 에 저장된 부팅 관련 데이터를 확인하고, 상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성 화 여부를 결정할 수 있다. 일 실시예에 따른 프로세서는 상기 제 2 운영 체제의 활성화에 응답하여, 상기 메모리를 상기 제 1 운영 체제에 의해 관리되는 제 1 메모리 영역 및 상기 제 2 운영 체제에 의해 관리되는 제 2 메모리 영역으로 분할하고, 상기 제 1 메모리 영역에 포함된 상기 제 1 페이지 테이블을 기반으로 상기 제 2 메모 리 영역에 제 2 페이지 테이블을 생성할 수 있다. 일 실시예에 따른 프로세서는 상기 제 2 운영 체제의 활성화에 응답하여, 상기 제 1 메모리 영역 에 포함된 코드 영역, 접근 권한 영역 및 제 1 페이지 테이블 중 적어도 하나에 메모리 접 근 속성을 변경할 수 있다. 일 실시예에 따른 프로세서는 상기 코드 영역을 제외한, 나머지 영역을 실행 보호 영역으로 설정할 수 있다. 일 실시예에 따른 프로세서는 상기 접근 권한 영역 및 상기 제 1 페이지 테이블을 쓰기 보호 영 역으로 설정할 수 있다. 일 실시예에 따른 프로세서는 상기 메모리에 접근하기 위한 시작 주소가 저장된 레지스터를 변경하기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제 로 전환하고, 상기 제 2 운영 체제에서 상기 레지스터의 접근 속성을 확인하고, 상기 레지스터의 접 근 속성을 기반으로 상기 레지스터를 변경할 수 있다. 일 실시예에 따른 프로세서는 상기 메모리와 관련된 정보를 변경하기 위한 명령어의 감지에 응답하여, 자동적으로 트랩 이벤트가 생성되고, 상기 생성된 트랩 이벤트가 상기 제 2 운영 체제에 포함된트랩 관리 모듈로 전달될 수 있다. 일 실시예에 따른 프로세서는 상기 명령어에 대응하는 메모리 영역의 접근 속성을 기반으로 상기 트랩 관 리 모듈을 통해 상기 어플리케이션 프로세서의 동작을 적어도 부분적으로 중지할 수 있다. 다양한 실시예에 따른 전자 장치에 있어서, 메모리, 상기 메모리와 관련된 정보를 제어하는 메 모리 제어 모듈, 가상 운영 체제를 제어하는 가상 관리 모듈 및 상기 메모리 제어 모듈을 통해 상기 메모리에 접근하기 위한 제 1 운영 체제 및 상기 가상 관리 모듈에 의해 제어되며 상기 가 상 운영 체제인 제 2 운영 체제를 포함하고, 상기 메모리, 상기 메모리 제어 모듈, 및 상기 가 상 관리 모듈에 작동적으로 연결된 프로세서를 포함할 수 있다. 상기 프로세서는 상기 제 1 운 영 체제에서 상기 메모리 제어 모듈을 통해 상기 메모리와 관련된 정보를 변경하기 위한 명령어 를 감지하고, 상기 명령어의 감지에 응답하여, 상기 제 1 운영 체제에서 상기 제 2 운영 체제로 전환 하고, 상기 가상 관리 모듈을 통해, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확 인하고, 상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정할 수 있다. 일 실시예에 따른 프로세서는 부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블 에 저장된 부팅 관련 데이터를 확인하고, 상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성 화 여부를 결정할 수 있다. 일 실시예에 따른 메모리는 상기 제 1 운영 체제에 의해 관리되는 제 1 메모리 영역 및 상기 제 2 운 영 체제에서 생성되는 제 2 메모리 영역으로 분할되고, 상기 제 1 메모리 영역의 코드 영역 을 제외한 나머지 영역, 접근 권한 영역 및 제 1 페이지 테이블, 및 상기 제 2 메모리 영역 의 코드 영역 및 제 2 페이지 테이블 중 적어도 하나에 속성 정보가 추가될 수 있다. 일 실시예에 따른 전자 장치는 상기 메모리에 접근하기 위한 시작 주소가 저장된 적어도 하나의 레지 스터(예: 도 4의 TTBR, VTTBR)를 더 포함하고, 상기 프로세서는 상기 레지스터 및 상기 메모리 와 관련된 정보를 변경하기 위한 명령어를 감지하고, 상기 명령어의 감지에 응답하여 자동적으로 트랩 이 벤트가 생성되고, 상기 생성된 트랩 이벤트를 상기 제 2 운영 체제에 포함된 트랩 관리 모듈로 전달 할 수 있다. 도 5a는 본 발명의 다양한 실시예에 따른 제 1 운영 체제 및 제 2 운영 체제에 의해 가상 주소가 물리 주소로 변환되는 과정을 도시한 예시도이다. 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 제 1 운영 체제(예: 도 3의 제 1 운영 체제 )를 사용하여 가상 주소(VA, virtual address)를 획득할 수 있다. 전자 장치의 메모리 제어 모 듈(예: 도 3의 메모리 제어 모듈)은 TTBR(예: 도 4의 TTBR)에서 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역)의 제 1 페이지 테이블 시작 주소를 확인할 수 있고, 상기 제 1 페이지 테이블로부 터 제 1 데이터를 획득할 수 있다. 메모리 제어 모듈은 상기 획득한 제 1 데이터를 기반으로 가상 주소 를 게스트 물리 주소(GPA, guest physical address)로 변환할 수 있다. 일 실시예에 따르면, 가상 주소에서 게스트 물리 주소로의 변환은 제 1 운영 체제에 의해 제어될 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 VTTBR(예: 도 4의 VTTBR)에서 제 2 메모리 영역(예: 도 3의 제 2 메모리 영역)의 제 2 페이지 테이블 시작 주소를 확인할 수 있고, 상기 제 2 페이지 테이블 로부터 제 2 데이터를 획득할 수 있다. 메모리 제어 모듈은 상기 획득한 제 2 데이터를 기반으로 게 스트 물리 주소를 물리 주소(PA, physical address)로 변환할 수 있다. 일 실시예에 따르면, 게스트 물리 주소에서 물리 주소로의 변환은 제 2 운영 체제에 의해 제어될 수 있다. 일 실시예에 따르면, 전자 장치는 제 1 운영 체제를 통해 가상 주소에서 게스트 물리 주소(52 0)로 1차 변환할 수 있고, 제 2 운영 체제를 통해 게스트 물리 주소에서 물리 주소로 2차 변환 할 수 있다. 일 실시예에 따르면, 메모리의 물리 주소로 접근하기 위해 적어도 2번의 변환 프로세스 를 실행해야 하므로 전자 장치의 보안성이 향상될 수 있다. 도 5b는 본 발명의 다양한 실시예에 따른 블록의 일부를 사용하여 접근 속성을 변경하는 과정을 도시한 예시도 이다. 도 5b는 제 2 운영 체제(예: 도 3의 제 2 운영 체제)가 활성화된 전자 장치에서의 제 2 메모리 영역 (예: 도 3의 제 2 메모리 영역)에 대한 64 bit 크기의 블록(block)의 구조도를 도시한다. 예를 들어, 도 5b의 블록 구조는 ARMv8 architecture에서의 64bit 크기의 블록 구조도를 포함할 수 있다. 도 5b를 참조하면, 하나의 블록은 64 bit 크기를 기반으로 다수 개의 영역으로 분할될 수 있고, 적어도 하 나의 영역에 데이터가 저장될 수 있다. 예를 들어, 블록은 0번 bit부터 63번 bit까지 총 64개의 bit로 구 성될 수 있다. 블록은 2번 bit부터 11번 bit까지 \"lower block attribute\" 영역으로 설정될 수 있고, 51번 bit부터 63번 bit까지 \"upper block attribute\" 영역으로 설정될 수 있다. 도 5b를 참조하면, 블록은 12번 bit부터 50번 bit까지 다수 개의 영역으로 분할될 수 있고, 적어도 하나의 데이터(예: 메모리 에 접근하기 위한 주소 정보)가 저장될 수 있다. 일 실시예에 따르면, 전자 장치는 upper block attribute 영역의 일부 영역에 bit 정보를 저장할 수 있고, 코드 영역(예: 도 4의 코드 영역)을 실행 보호 영역으로 설정할 수 있다. 예를 들어, upper block attribute 영역에서 53번 bit를 0으로 저장하고, 54번 bit를 1로 저장하는 경우, 상기 코드 영역은 실행 보호 영역으로 설정될 수 있다. 일 실시예에 따르면, 53번 비트 및 54번 비트는 XN(eXecute Never) 영역으 로 구성될 수 있고, 실행 금지 정보를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 lower block attribute 영역의 일부 영역에 bit 정보를 저장할 수 있고, 메모리 영역(예: 도 4의 접근 권한 영역 및 제 1 페이지 테이블)을 쓰기 보호 영역으로 설정할 수 있다. 예를 들어, lower block attribute 영역에서 6번 bit를 0으로 저장하고, 7번 bit를 1로 저장하 는 경우, 상기 메모리 영역은 쓰기 보호 영역으로 설정될 수 있다. 일 실시예에 따르면, 6번 비트 및 7번 비트 는 S2AP(stage2 Access Permission) 영역으로 구성될 수 있고, 제 2 페이지 테이블의 접근 권한 (read/write)과 관련된 정보를 포함할 수 있다. 도 6은 본 발명의 다양한 실시예에 따른 메모리를 보호하는 방법을 도시한 흐름도이다. 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 부팅 시, 제 1 운영 체제(예: 도 3의 제 1 운영 체제) 및 제 2 운영 체제(예: 도 3의 제 2 운영 체제)를 활성화할 수 있다. 예를 들어, 전자 장치 의 프로세서(예: 도 3의 어플리케이션 프로세서)는 부팅 과정에서 참고하는 코드 정보를 확인하고, 상기 코드 정보를 기반으로 제 2 운영 체제의 활성화 여부를 결정할 수 있다. 제 2 운영 체제는 하드 웨어 가상화를 지원하는 플랫폼인 하이퍼바이저를 지원하는 하이퍼바이저 운영체제로 정의될 수 있다. 일 실시 예에 따르면, 제 2 운영 체제가 활성화되면, 메모리(예: 도 1의 메모리)를 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역)과 제 2 메모리 영역(예: 도 3의 제 2 메모리 영역)으로 분할할 수 있고, 상기 제 2 메모리 영역을 활용할 수 있다. 일 실시예에 따르면, 전자 장치는 제 2 운영 체제가 활성 화될 때, 제 1 메모리 영역에 포함된 코드 영역(예: 도 3의 코드 영역), 접근 권한 영역(예: 도 3의 접근 권한 영역), 및/또는 제 1 페이지 테이블(예: 도 3의 제 1 페이지 테이블) 중 적어도 하나에 접 근 속성을 변경할 수 있다. 예를 들어, 전자 장치는 해당 영역을 실행 보호 영역 및 쓰기 보호 영역 중 적 어도 하나의 영역으로 설정할 수 있다. 도 6을 참조하면, 도 6은 전자 장치가 부팅된 이후의 메모리를 보호하는 방법을 도시한다. 전자 장치 는 제 1 운영 체제 및 제 2 운영 체제가 활성화된 상태일 수 있다. 일 실시예에 따르면, 동작 601에서 전자 장치의 메모리 제어 모듈(예: 도 3의 메모리 제어 모듈, MMU(memory management unit))은 제 1 운영 체제에서 메모리 정보를 변경하기 위한 명령어를 감지할 수 있다. 예를 들어, 상기 명령어는 ARMv8 architecture에서 mnemonic 영역이 str, stxr, 및/또는 stlr 중 적어도 하나로 등록된 명령어를 포함할 수 있다. 일 실시예에 따르면, 메모리 제어 모듈은 메모리에 접근하 기 위한 명령어(예: 실행 명령어 및 쓰기 명령어)를 감지할 수 있다. 일 실시예에 따르면, 메모리에 접근하기 위한 명령어를 감지하는 상황은 트랩 이벤트(trap event)가 발생 한 상황으로 정의될 수 있다. 예를 들어, 메모리 제어 모듈은 메모리에 포함된 일부 영역(예: 도 4의 제 1 페이지 테이블, 제 2 페이지 테이블)에 대한 접근 명령어를 감지할 수 있고, 상기 일부 영역에 대한 접근 권한(예: 쓰기 보호 영역, 실행 보호 영역)을 확인할 수 있다. 메모리 제어 모듈은 상기 확인된 접근 권한을 기반으로 상기 접근 명령어의 실행 여부를 결정할 수 있다. 일 실시예에 따르면, 동작 603에서 전자 장치는 상기 명령어의 감지에 응답하여, 제 1 운영 체제에서 제 2 운영 체제로 전환할 수 있다. 예를 들어, 메모리 제어 모듈은 제 2 운영 체제에 포함된 가 상 관리 모듈(예: 도 3의 가상 관리 모듈)에 트랩 이벤트의 발생 정보를 전달할 수 있다. 전자 장치의 프로세서는 트랩 이벤트의 발생에 응답하여, 제 1 운영 체제에서 제 2 운영 체제로 전환할 수 있다. 일 실시예에 따르면, 동작 605에서 제 2 운영 체제에 포함된 가상 관리 모듈은 상기 명령어에 의해 변경하려는 메모리 영역에 대한 속성 정보를 확인할 수 있다. 예를 들어, 전자 장치는 부팅 시점에 제 2 운영 체제를 활성화시킬 수 있고, 제 2 운영 체제를 통해, 메모리 영역의 접근 속성을 변경할 수 있 다. 접근 속성은 해당 메모리 영역에 저장된 데이터의 변경을 방지하기 위한 쓰기 보호 정보 및 해당 메모리 영 역에 저장된 데이터의 실행을 방지하기 위한 실행 보호 정보를 포함할 수 있다. 일 실시예에 따르면, 전자 장치 는 메모리 영역의 접근 속성을 확인할 수 있고, 상기 메모리 영역에 저장된 데이터의 변경 여부를 결정할 수 있다. 전자 장치는 메모리 영역의 접근 속성을 기반으로, 상기 메모리 영역에 대한 접근 권한을 확인할 수 있다. 일 실시예에 따르면, 동작 607에서 전자 장치는 상기 확인된 접근 속성을 기반으로 상기 명령어에 대응하 는 메모리 정보의 변경 여부를 결정할 수 있다. 예를 들어, 명령어를 수행하기 위한 메모리 영역에 대한 변경 권한이 허용된 상황이면, 전자 장치는 상기 메모리 영역에 대한 변경을 수행할 수 있다. 도 7은 본 발명의 다양한 실시예에 따른 메모리를 설정하는 방법을 도시한 흐름도이다. 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 부팅 시, 제 1 운영 체제(예: 도 3의 제 1 운영 체제) 및 제 2 운영 체제(예: 도 3의 제 2 운영 체제)를 활성화할 수 있다. 예를 들어, 전자 장치 의 프로세서(예: 도 3의 어플리케이션 프로세서)는 부팅 과정에서 참고하는 코드 정보(예: 부트 로더 (boot loader)에 포함된 코드 정보)를 확인하고, 상기 코드 정보를 기반으로 제 2 운영 체제의 활성화 여 부를 결정할 수 있다. 일 실시예에 따르면, 동작 701에서 전자 장치는 제 2 운영 체제를 활성화할 수 있다. 제 2 운영 체제 는 하드웨어 가상화를 지원하는 플랫폼인 하이퍼바이저를 지원하는 하이퍼바이저 운영체제로 정의될 수 있 다. 일 실시예에 따르면, 전자 장치는 제 1 운영 체제를 사용하여 동작하는 상태에서 특정 조건(예: 제 1 운영 체제로부터 권한이 설정되지 않은 영역으로 접근하는 조건)이 충족되는 경우 주요 운영 체제가 제 1 운영 체제에서 제 2 운영 체제로 전환될 수 있다. 예를 들어, 전자 장치는 특정 메모리 영 역이 쓰기 보호 영역으로 설정된 상태에서 상기 특정 메모리 영역을 변경하기 위한 명령어를 감지할 수 있고, 트랩 이벤트를 발생시킬 수 있다. 일 실시예에 따르면, 전자 장치는 트랩 이벤트의 발생에 응답하여, 제 1 운영 체제에서 제 2 운영 체제로 전환될 수 있다. 일 실시예에 따르면, 전자 장치는 제 2 운영 체제의 활성화에 응답하여, 메모리(예: 도 1의 메모리)를 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역) 및 제 2 메모리 영역(예: 도 3의 제 2 메모리 영역)으로 분할할 수 있고, 메모리 영역에 대한 접근 속성을 변경할 수 있다. 예를 들어, 제 2 운영 체제는 제 2 메모리 영역에 포함된 제 2 속성 정 보(예: 도 4의 제 2 속성 정보)를 변경함으로써, 제 1 메모리 영역에 대한 접근 속성을 변경할 수 있 다. 일 실시예에 따르면, 동작 703에서 전자 장치는 제 1 메모리 영역의 코드 영역(예: 도 4의 코드 영역 )을 제외한, 나머지 영역을 실행 보호 영역으로 설정할 수 있다. 일 실시예에 따르면, 실행 보호 영역으로 설정된다는 것은 해당되는 코드 영역을 제외한, 나머지 영역에 속성 정보를 추가하는 것으로 정의될 수 있다. 제 1 메모리 영역의 코드 영역은 실행 가능한 영역일 수 있다. 일 실시예에 따르면, 전자 장치는 실 행 보호 영역으로 설정된 메모리 영역에 저장된 정보의 실행을 감지할 수 있고, 트랩 이벤트를 발생시킬 수 있 다. 일 실시예에 따르면, 동작 705에서 전자 장치는 제 1 메모리 영역의 접근 권한 영역(예: 도 4의 접근 권한 영역)을 쓰기 보호 영역으로 설정할 수 있다. 일 실시예에 따르면, 전자 장치는 쓰기 보호 영역 으로 설정된 메모리 영역에 저장된 정보의 변경을 감지할 수 있고, 트랩 이벤트를 발생시킬 수 있다. 일 실시예에 따르면, 동작 707에서 전자 장치는 제 1 메모리 영역의 제 1 페이지 테이블(예: 도 4의 제 1 페이지 테이블)을 쓰기 보호 영역으로 설정할 수 있다. 일 실시예에 따르면, 전자 장치는 쓰기 보호 영역으로 설정된 제 1 페이지 테이블에 저장된 정보의 변경을 감지할 수 있고, 트랩 이벤트를 발생시 킬 수 있다. 일 실시예에 따르면, 동작 709에서 전자 장치는 제 2 운영 체제에 대응하는 제 2 메모리 영역에 제 2 페이지 테이블(예: 도 4의 제 2 페이지 테이블)을 생성할 수 있다. 일 실시예에 따르면, 제 2 페이지 테이블의 일부 저장 영역은 제 1 페이지 테이블에 대응되는 제 1 저장 영역의 속성 정보를 포함할 수 있 다. 예를 들어, 제 1 페이지 테이블의 제 1 저장 영역이 쓰기 보호 영역으로 설정된 경우 상기 제 1 저장 영역에 대응되는 제 2 페이지 테이블의 일부 저장 영역도 쓰기 보호 영역으로 설정될 수 있다. 일 실시예 에 따르면, 메모리 제어 모듈(예: 도 3의 메모리 제어 모듈)은 제 1 페이지 테이블을 기반으로 제 2 페이지 테이블에 접근할 수 있다. 제 1 페이지 테이블의 제 1 저장 영역에 대응되는 제 2 페이지 테 이블의 일부 저장 영역은 동일한 속성 정보를 포함할 수 있다. 도 8은 본 발명의 다양한 실시예에 따른 메모리와 관련된 정보를 관리하는 방법을 도시한 예시도이다. 도 9는 본 발명의 다양한 실시예에 따른 트랩 이벤트의 타입을 확인하기 위한 레지스터 구조도를 도시한 예시도 이다. 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 메모리(예: 도 1의 메모리)로 접근하기 위 한 시작 주소가 저장된 레지스터(예: TTBR(translation table base register))가 변경되거나, 메모리에 저장된 정보가 변경되는 경우 트랩 이벤트를 발생시킬 수 있다. 전자 장치는 트랩 이벤트의 발생에 응답하 여, 제 1 운영 체제(예: 도 3의 제 1 운영 체제)를 제 2 운영 체제(예: 도 3의 제 2 운영 체제)로 전 환할 수 있다. 일 실시예에 따르면, 트랩 이벤트가 발생하면, 제 2 운영 체제의 트랩 관리 모듈(예: 도 4 의 트랩 관리 모듈)은 상기 트랩 이벤트가 발생된 적어도 하나의 저장 영역을 기반으로 상기 트랩 이벤트 가 정당한지 여부를 판단할 수 있다. 도 8을 참조하면, 동작 801에서 일 실시예에 따른 전자 장치는 트랩 이벤트의 발생을 감지할 수 있다. 예 를 들어, 전자 장치는 메모리에 접근을 위한 시작 주소가 저장된 TTBR이 변경되는 경우 자동적으로 트랩 이벤트를 발생시킬 수 있다. 전자 장치는 메모리의 코드 영역(예: 도 4의 코드 영역)외의 나머지 영역, 접근 권한 영역(예: 도 4의 접근 권한 영역) 및 제 1 페이지 테이블(예: 도 4의 제 1 페이지 테이블) 중 적어도 하나에 저장된 정보가 변경되는 경우 자동적으로 트랩 이벤트를 발생시킬 수 있다. 일 실시예에 따르면, 트랩 이벤트가 발생하는 경우 전자 장치는 제 1 운영 체제에서 제 2 운영 체제 로 전환될 수 있다. 일 실시예에 따르면, 동작 802에서 전자 장치는 트랩 이벤트가 TTBR의 변경에 응답하여 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 제 2 운영 체제의 트랩 관리 모듈은 트랩 이벤트의 타입(예: TTBR에서 발생된 트랩 이벤트 및 메모리에서 발생된 트랩 이벤트)을 확인하기 위한 레지스터(예: ARMv8 architecture의 ESR_EL2 레지스터)를 기반으로 상기 트랩 이벤트가 TTBR에서 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 동작 802에서 상기 트랩 이벤트가 TTBR에서 발생한 것이 아니라면(No), 동작 807에서 전자 장치는 상기 트랩 이벤트가 메모리에서 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 제 2 운영 체제의 트랩 관리 모듈은 트랩 이벤트의 타입을 확인하기 위한 레지스터(예: ARMv8 architecture 의 ESR_EL2 레지스터)를 기반으로 상기 트랩 이벤트가 메모리에서 발생했는지 여부를 판단할 수 있다. 도 9를 참조하면, 트랩 이벤트의 타입을 확인하기 위한 레지스터(예: ARMv8 architecture 의 ESR_EL2 레지스 터)의 구조도를 도시한다. 도 9의 ESR_EL2 레지스터는 64 비트(bit)의 블록(block)으로 구성될 수 있고, 레지스터 관련 정보를 저장하기 위한 RES0 영역, TTBR 및 메모리에서의 정보 변경을 나타내는 비트값 (bit value)을 저장하기 위한 EC(exception class) 영역, 및 ISS(instruction specific syndrome) 영역 을 포함할 수 있다. 예를 들어, EC 영역에 \"0b011000\"이 저장되고, ISS 영역에 \"ob001100000000100000000000\"이 저장되는 경우 TTBT0 값(예: 도 4의 TTBR)이 변경되었음을 의미하고, EC 영역에 \"0b011000\"이 저장되고, ISS 영역에 \"ob001100100000100000000000\"이 저장되는 경우 TTBT1 값(예: 도 4의 VTTBR)이 변경되었음을 의미할 수 있다. 예를 들어, EC 영역에 \"0b100100\"이 저장되 고, ISS 영역에서 ISS[6]=1(예: ISS 영역의 6번 bit가 1), 또는 ISS[5:2]=0b0011(예: ISS 영역의 2번 bit 부터 5번 비트가 0011)인 경우 쓰기 보호 영역으로 설정된 메모리의 일 영역에서의 정보가 변경되었음을 의미할 수 있다. 일 실시예에 따르면, 가상 관리 모듈(예: 도 3의 가상 관리 모듈)은 ESR_EL2 레지스터 를 기반으로 트랩 이벤트의 타입을 확인할 수 있다. 일 실시예에 따르면, 트랩 관리 모듈은 트랩 이벤트의 확인을 위한 레지스터(예: 도 9의 ESR_EL2 레지스터 )를 기반으로 상기 트랩 이벤트의 타입(예: TTBR에서 발생된 트랩 이벤트 및 메모리에서 발생된 트랩이벤트)을 결정할 수 있다. 일 실시예에 따르면, 동작 802에서 상기 트랩 이벤트가 TTBR에서 발생했다면(Yes), 동작 803에서 트랩 관리 모 듈은 TTBR의 변경이 승인되었는지 여부를 확인할 수 있다. 일 실시예에 따르면, 전자 장치의 부팅 시, 메모리 제어 모듈(예: 도 3의 메모리 제어 모듈)은 TTBR에 대한 변경과 관련하여, 변경이 가능한 정보 를 리스트로 저장할 수 있다. 트랩 관리 모듈은 상기 리스트에 포함된 정보를 기반으로 상기 TTBR의 변경 이 승인되었는지 여부를 판단할 수 있다. 동작 802에서 TTBR의 변경이 승인되지 않았다면(No), 동작 817에서 트 랩 관리 모듈은 전자 장치의 시스템을 적어도 부분적으로 중지시킬 수 있다. 일 실시예에 따르면, 동작 804에서 트랩 관리 모듈은 제 2 페이지 테이블(예: 도 4의 제 2 페이지 테이블 )이 쓰기 보호 영역으로 설정되었는지 여부를 확인할 수 있다. 예를 들어, TTBR의 변경은 메모리의 다른 영역으로의 접근이 가능하다는 의미일 수 있고, 트랩 관리 모듈은 상기 메모리의 제 2 페이지 테이블의 속성 정보(예: 쓰기 보호 영역으로 설정되었는지 여부)를 확인할 수 있다. 일 실시예에 따르면, 동작 804에서 제 2 페이지 테이블이 쓰기 보호 영역으로 설정된 경우(Yes), 트랩 관 리 모듈은 TTBR의 변경이 타당하다고 판단하고, 동작 805에서 상기 TTBR의 변경을 승인할 수 있다. 일 실시예에 따르면, 동작 804에서 제 2 페이지 테이블이 쓰기 보호 영역으로 설정되지 않은 경우(No), 트 랩 관리 모듈은 동작 806에서 메모리 제어 모듈을 통해 상기 제 2 페이지 테이블을 쓰기 보호 영역으로 설정할 수 있다. 예를 들어, 제 2 페이지 테이블에 쓰기 보호 영역으로 설정하기 위한 속성 정보 가 추가될 수 있다. 일 실시예에 따르면, 동작 807에서 트랩 이벤트가 메모리에서 발생되었음을 확인하면(Yes), 동작 808에서 트랩 관리 모듈은 상기 트랩 이벤트가 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역)의 제 1 페이 지 테이블에서 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 동작 808에서 제 1 페이지 테이블에서 트랩 이벤트가 발생했다면(Yes), 동작 809에서 트랩 관리 모듈은 제 1 페이지 테이블에 대한 변경이 승인되었는지 여부를 확인할 수 있다. 일 실시 예에 따르면, 전자 장치의 부팅 시, 메모리 제어 모듈은 제 1 페이지 테이블을 적어도 부분적으 로 쓰기 보호 영역으로 설정할 수 있다. 예를 들어, 트랩 이벤트가 발생한 제 1 페이지 테이블의 일 영역 이 쓰기 보호 영역으로 설정되었다면, 상기 제 1 페이지 테이블에 대한 변경이 승인되지 않을 수 있다. 동 작 809에서 상기 제 1 페이지 테이블에 대한 변경이 승인되지 않았다면(No), 동작 817에서 트랩 관리 모듈 은 전자 장치의 시스템을 적어도 부분적으로 중지시킬 수 있다. 일 실시예에 따르면, 동작 809에서 상기 제 1 페이지 테이블에 대한 변경이 승인되었다면(Yes), 동작 810 에서, 트랩 관리 모듈은 상기 트랩 이벤트에 응답하여, 상기 제 1 페이지 테이블을 변경할 수 있다. 일 실시예에 따르면, 동작 807에서 트랩 이벤트가 메모리에서 발생되었음을 확인하면, 동작 808에서 트랩 관리 모듈은 상기 트랩 이벤트가 제 1 메모리 영역의 제 1 페이지 테이블에서 발생했는지 여부 를 판단할 수 있다. 동작 808에서 상기 트랩 이벤트가 제 1 페이지 테이블에서 발생하지 않았다면, 동작 811에서 트랩 관리 모듈은 상기 트랩 이벤트가 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역)의 코 드 영역에서 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 동작 811에서 코드 영역에서 트랩 이벤트가 발생했다면(Yes), 동작 812에서 트랩 관 리 모듈은 코드 영역에 대한 실행이 승인되었는지 여부를 확인할 수 있다. 일 실시예에 따르면, 전자 장치의 부팅 시, 메모리 제어 모듈은 코드 영역을 실행 가능한 영역(executable region)으로 설정하고, 상기 코드 영역 외의 다른 영역을 실행 보호 영역(execute protection region)으로 설정할 수 있다. 예를 들어, 트랩 이벤트가 발생한 코드 영역 외의 다른 영역이 실행 보호 영역으로 설정되었다면, 트랩 이벤트에 의한 명령어의 실행이 승인되지 않을 수 있다. 동작 812에서 상기 코드 영역 외의 다른 영 역에 대한 실행이 승인되지 않았다면(No), 동작 817에서 트랩 관리 모듈은 전자 장치의 시스템을 적 어도 부분적으로 중지시킬 수 있다. 일 실시예에 따르면, 동작 812에서 상기 코드 영역에 대한 실행이 승인되었다면(Yes), 동작 813에서, 트랩 관리 모듈은 상기 트랩 이벤트에 응답하여, 코드 영역에 저장된 데이터를 실행할 수 있다. 일 실시예에 따르면, 동작 811에서 트랩 이벤트가 코드 영역에서 발생되지 않았음을 확인하면, 동작 814에 서 트랩 관리 모듈은 상기 트랩 이벤트가 제 1 메모리 영역(예: 도 3의 제 1 메모리 영역)의 접근 권한 영역에서 발생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 동작 814에서 접근 권한 영역에서 트랩 이벤트가 발생했다면(Yes), 동작 815에서 트 랩 관리 모듈은 접근 권한 영역에 대한 접근이 승인되었는지 여부를 확인할 수 있다. 일 실시예에 따 르면, 전자 장치의 부팅 시, 메모리 제어 모듈은 접근 권한 영역을 접근 보호 영역(access protection region)으로 설정할 수 있다. 예를 들어, 트랩 이벤트가 발생한 접근 권한 영역이 접근 보호 영역으로 설정되었다면, 트랩 이벤트에 의한 접근 권한 영역으로의 접근이 승인되지 않을 수 있다. 동작 815에서 상기 접근 권한 영역으로의 접근이 승인되지 않았다면(No), 동작 817에서 트랩 관리 모듈은 전자 장치의 시스템을 적어도 부분적으로 중지시킬 수 있다. 일 실시예에 따르면, 동작 815에서 상기 접근 권한 영역에 대한 접근이 승인되었다면(Yes), 동작 816에서, 트랩 관리 모듈은 상기 트랩 이벤트에 응답하여, 접근 권한 영역으로 접근할 수 있다. 다양한 실시예에 따른 방법에 있어서, 제 1 운영 체제에서 메모리와 관련된 정보를 변경하기 위한 명 령어를 감지하는 동작, 상기 명령어의 감지에 응답하여 자동적으로 상기 제 1 운영 체제에서 상기 제 2 운 영 체제로 전환하는 동작, 상기 제 2 운영 체제에서 상기 정보에 대응하는 속성 정보를 확인하는 동 작 및 상기 제 2 운영 체제에서 상기 확인된 속성 정보를 기반으로 상기 감지된 명령어에 대응하는 상기 정보의 변경을 결정하는 동작을 포함할 수 있다. 일 실시예에 따른 방법은 부팅 시에, 상기 제 1 운영 체제를 기반으로 제 1 페이지 테이블에 저장된 부팅 관련 데이터를 확인하는 동작, 및 상기 부팅 관련 데이터를 기반으로 상기 제 2 운영 체제의 활성화 여부를 결정하는 동작을 더 포함할 수 있다. 일 실시예에 따른 방법은 상기 제 2 운영 체제의 활성화에 응답하여, 상기 메모리를 상기 제 1 운영 체제 에 의해 관리되는 제 1 메모리 영역 및 상기 제 2 운영 체제에 의해 관리되는 제 2 메모리 영역으로 분할하는 동작, 및 상기 제 1 메모리 영역에 포함된 상기 제 1 페이지 테이블을 기반으로 상기 제 2 메모리 영 역에 제 2 페이지 테이블을 생성하는 동작을 더 포함할 수 있다. 일 실시예에 따른 방법은 상기 제 1 메모리 영역의 코드 영역을 제외한 나머지 영역, 접근 권한 영역 및 제 1 페이지 테이블, 및 상기 제 2 메모리 영역의 코드 영역 및 상기 제 2 페이지 테이블 중 적어도 하나에 메모리 접근 속성을 변경하는 동작을 더 포함할 수 있다. 일 실시예에 따른 방법은 상기 메모리에 접근하기 위한 시작 주소가 저장된 적어도 하나의 레지스터(예: 도 4의 TTBR, VTTBR) 및 상기 메모리와 관련된 정보를 변경하기 위한 명령어를 감지하는 동작, 상기 명령어의 감지에 응답하여 자동적으로 트랩 이벤트를 생성하는 동작, 및 상기 생성된 트랩 이벤트를 상기 제 2 운영 체제에 포함된 트랩 관리 모듈로 전달하는 동작을 더 포함할 수 있다. 일 실시예에 따른 방법은 상기 명령어에 대응하는 메모리 영역의 접근 속성을 기반으로 상기 트랩 관리 모듈 을 통해 상기 전자 장치의 동작을 적어도 부분적으로 중지하는 동작을 더 포함할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2020-0097659", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면의 설명과 관련하여, 동일 또는 유사한 구성 요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있 다. 도 1은 본 발명의 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 본 발명의 다양한 실시예에 따른 프로그램 모듈, 하이퍼바이저 및 하드웨어의 블록도이다. 도 3은 본 발명의 다양한 실시예에 따른 전자 장치의 어플리케이션 프로세서 및 메모리에 대한 블록도이다. 도 4는 본 발명의 다양한 실시예에 따른 제 1 운영 체제 및 제 2 운영 체제를 사용하여 메모리를 보호하는 방법 이 도시된 예시도이다. 도 5a는 본 발명의 다양한 실시예에 따른 제 1 운영 체제 및 제 2 운영 체제에 의해 가상 주소가 물리 주소로 변환되는 과정을 도시한 예시도이다. 도 5b는 본 발명의 다양한 실시예에 따른 블록의 일부를 사용하여 접근 속성을 변경하는 과정을 도시한 예시도 이다.도 6은 본 발명의 다양한 실시예에 따른 메모리를 보호하는 방법을 도시한 흐름도이다. 도 7은 본 발명의 다양한 실시예에 따른 메모리를 설정하는 방법을 도시한 흐름도이다. 도 8은 본 발명의 다양한 실시예에 따른 메모리와 관련된 정보를 관리하는 방법을 도시한 예시도이다. 도 9는 본 발명의 다양한 실시예에 따른 트랩 이벤트의 타입을 확인하기 위한 레지스터 구조도를 도시한 예시도 이다."}
