{"patent_id": "10-2020-0162028", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0074005", "출원번호": "10-2020-0162028", "발명의 명칭": "펌웨어를 교체하는 장치 및 방법", "출원인": "엘지전자 주식회사", "발명자": "이홍원"}}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1버전의 제1서브 펌웨어 및 제1버전의 제2서브 펌웨어를 포함하는 펌웨어; 및상기 제1버전의 제1서브 펌웨어를 교체할 제2버전의 제1서브 펌웨어와 상기 제2서브 펌웨어의 버전 정보를 포함하는 복합 서브 펌웨어를 제1서버로부터 수신하거나 또는 상기 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브 펌웨어 중 어느 하나 이상의 버전 정보를 상기 제1서버로부터 수신하는 통신부를 포함하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 수신한 복합 서브 펌웨어에 포함된 상기 버전 정보가 상기 제2서브 펌웨어의 제1버전보다 최신 버전임을지시하는 경우 상기 통신부는 상기 제2서브 펌웨어를 상기 제1서버 또는 상기 제1서버와 구분되는 제2서버로부터 수신하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 수신한 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브 펌웨어 중 어느 하나 이상의 버전 정보가 최신 버전임을 지시하는 경우 상기 통신부는 상기 복합 서브 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브펌웨어 중 어느 하나 이상을 상기 제1서버 또는 제1서버와 구분되는 제2서버로부터 수신하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 복합 서브 펌웨어는 하나 이상의 서브 펌웨어 및 하나 이상의 서브 펌웨어의 최신 버전 정보를 포함하는,펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 복합 서브 펌웨어의 파일명은 상기 서브 펌웨어의 버전 정보를 포함하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 복합 서브 펌웨어의 상기 제2버전의 제1서브 펌웨어가 제2버전의 제2서브 펌웨어와 연관성을 가지고 동작하는 경우, 상기 제2버전의 제2서브 펌웨어 또는 상기 제2버전의 제2서브 펌웨어를 포함하는 복합 서브 펌웨어를 수신하기 전까지 상기 제2버전의 제1서브 펌웨어를 저장한 상태에서 상기 제1버전의 제1서브 펌웨어를 상기펌웨어 내에 유지하는, 펌웨어를 교체하는 장치.공개특허 10-2022-0074005-3-청구항 7 제1항에 있어서,상기 장치는 M2M 모듈을 더 포함하며, 상기 M2M 모듈은 다른 장치들이 접속하는 디바이스 연결부를 더 포함하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 디바이스 연결부에 제1장치가 통신 연결을 수행하면, 상기 M2M 모듈의 제어부는 상기 제1서버와의 통신 연결을 확인하며, 상기 제1서버와 통신 연결을 수행한 후, 상기 제1서버에 저장된 서브 펌웨어 또는 펌웨어가 최신 버전인 경우,상기 제1서버로부터 상기 복합 서브 펌웨어를 수신한 후, 상기 복합 서브 펌웨어에 포함된 제2버전의 제1서브펌웨어를 이용하여 상기 제1장치가 요청한 기능을 수행하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 M2M 모듈을 포함하는 상기 장치는 M2M 장치이며,상기 M2M 장치는 비활성 데이터를 업데이트 또는 업그레이드함에 있어서 적용하는 키는 상기 비활성 데이터의버전 또는 상기 M2M 모듈에 탑재된 응용 프로그램의 버전을 적용하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,상기 제1서버와 통신 연결 없이 미리 저장된 상기 제1버전의 제1서브 펌웨어를 이용하여 상기 제1장치가 요청한기능을 수행하는, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 장치를 제어하는 제어부를 더 포함하며, 상기 제어부는 상기 제1서브 펌웨어거나 또는 상기 펌웨어와 구분되는 모듈인, 펌웨어를 교체하는 장치."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "펌웨어를 포함하는 장치가 펌웨어를 교체하는 방법에 있어서, 상기 장치가 제1버전의 제1서브 펌웨어 및 제1버전의 제2서브 펌웨어를 저장하는 단계; 및 상기 장치의 통신부가 제1서버로부터 상기 제1버전의 제1서브 펌웨어를 교체할 제2버전의 제1서브 펌웨어와 상기 제2서브 펌웨어의 버전 정보를 포함하는 복합 서브 펌웨어를 수신하거나 또는 상기 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브 펌웨어 중 어느 하나 이상의 버전 정보를 상기 제1서버로부터 수신하는 단계를 포공개특허 10-2022-0074005-4-함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 수신한 복합 서브 펌웨어에 포함된 상기 버전 정보가 상기 제2서브 펌웨어의 제1버전보다 최신 버전임을지시하는 경우 상기 통신부는 상기 제2서브 펌웨어를 상기 제1서버 또는 상기 제1서버와 구분되는 제2서버로부터 수신하는 단계를 더 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 수신한 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브 펌웨어 중 어느 하나 이상의 버전 정보가 최신 버전임을 지시하는 경우 상기 통신부는 상기 복합 서브 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브펌웨어 중 어느 하나 이상을 상기 제1서버 또는 제1서버와 구분되는 제2서버로부터 수신하는 단계를 더 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서,상기 복합 서브 펌웨어는 하나 이상의 서브 펌웨어 및 하나 이상의 서브 펌웨어의 최신 버전 정보를 포함하는,펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 복합 서브 펌웨어의 파일명은 상기 서브 펌웨어의 버전 정보를 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제12항에 있어서,상기 복합 서브 펌웨어의 상기 제2버전의 제1서브 펌웨어가 제2버전의 제2서브 펌웨어와 연관성을 가지고 동작하는 경우, 상기 제2버전의 제2서브 펌웨어 또는 상기 제2버전의 제2서브 펌웨어를 포함하는 복합 서브 펌웨어를 수신하기 전까지 상기 제2버전의 제1서브 펌웨어를 저장한 상태에서 상기 제1버전의 제1서브 펌웨어를 상기펌웨어 내에 유지하는 단계를 더 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제12항에 있어서,상기 장치는 M2M 모듈을 더 포함하며, 상기 M2M 모듈은 다른 장치들이 접속하는 디바이스 연결부를 더 포함하는, 펌웨어를 교체하는 방법.공개특허 10-2022-0074005-5-청구항 19 제18항에 있어서,상기 디바이스 연결부에 제1장치가 통신 연결을 수행하면, 상기 M2M 모듈의 제어부는 상기 제1서버와의 통신 연결을 확인하며, 상기 제1서버와 통신 연결을 수행한 후, 상기 제1서버에 저장된 서브 펌웨어 또는 펌웨어가 최신 버전인 경우,상기 제1서버로부터 상기 복합 서브 펌웨어를 수신한 후, 상기 복합 서브 펌웨어에 포함된 제2버전의 제1서브펌웨어를 이용하여 상기 제1장치가 요청한 기능을 수행하는 단계를 더 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제18항에 있어서,상기 M2M 모듈을 포함하는 상기 장치는 M2M 장치이며,상기 M2M 장치는 비활성 데이터를 업데이트 또는 업그레이드함에 있어서 적용하는 키는 상기 비활성 데이터의버전 또는 상기 M2M 모듈에 탑재된 응용 프로그램의 버전을 적용하는 단계를 더 포함하는, 펌웨어를 교체하는방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제20항에 있어서,상기 제1서버와 통신 연결 없이 미리 저장된 상기 제1버전의 제1서브 펌웨어를 이용하여 상기 제1장치가 요청한기능을 수행하는 단계를 더 포함하는, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제12항에 있어서,상기 장치를 제어하는 제어부를 더 포함하며, 상기 제어부는 상기 제1서브 펌웨어거나 또는 상기 펌웨어와 구분되는 모듈인, 펌웨어를 교체하는 방법."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 펌웨어를 교체하는 장치 및 방법에 관한 것으로, 본 발명의 일 실시예에 의한 장치는 제1버전의 제1서 브 펌웨어 및 제1버전의 제2서브 펌웨어를 포함하는 펌웨어를 포함하며, 제1서브 펌웨어 및 제2서브 펌웨어의 최 신 버전 정보를 서버에서 수신하여 제1서브 펌웨어 또는 제2서브 펌웨어를 교체한다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 펌웨어를 교체하는 디바이스 및 방법에 관한 기술이다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 가전제품들은 다양한 기능을 제공하기 위해 지속적으로 펌웨어를 업데이트 혹은 업그레이드시킨다. 이는 가전제품이 공장에서 제조되어 출시된 이후에도 새로운 기능을 추가하거나 변화된 환경에 적응하거나 오류를 수 정하는 등의 필요에 따라 이루어진다. 그런데, 이러한 과정은 가전제품이 외부의 서버와 안정적으로 통신을 수행하여 파일을 수신하는 과정을 필요로 하며 이는 가전제품의 동작 과정에서 일정 시간동안 정지되거나 중단된 상황이 발생할 수 있다. 만약 파일의 시 간적 수신 간격이 멀어질 경우 가전제품은 최신의 기능을 제공하지 못하는 문제가 발생한다. 반대로, 파일의 시 간적 수신 간격이 짧아질 경우, 가전제품의 동작에 프로세싱 부담이 발생할 수 있다. 따라서, 펌웨어를 업데이트 또는 업그레이드 시키는 과정이 가전제품의 동작을 방해하지 않고 순차적으로 이루"}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "어지도록 하는 기술이 필요하다. 발명의 내용"}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 명세서는 전술한 문제점을 해결하기 위한 것으로, 펌웨어를 교체하기 위해 다운로드 해야 할 파일이 펌웨어 전체가 아닌 서브 펌웨어를 기준이 되도록 하여 펌웨어의 교체 시간 및 파일 용량을 줄여 신속하게 업그레이드/ 업데이트가 될 수 있도록 한다. 또한, 본 명세서는 복합 서브 펌웨어의 구성을 이용하여 서브 펌웨어의 버전 정보와 서브 펌웨어가 복합된 파일 을 다운로드 하여 펌웨어 교체 및 다음 서브 펌웨어의 다운로드 여부를 신속하게 수행할 수 있도록 한다. 본 발명의 목적들은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 본 발명의 다른 목적 및 장점들 은 하기의 설명에 의해서 이해될 수 있고, 본 발명의 실시예에 의해 보다 분명하게 이해될 것이다. 또한, 본 발 명의 목적 및 장점들은 특허 청구 범위에 나타낸 수단 및 그 조합에 의해 실현될 수 있음을 쉽게 알 수 있을 것 이다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 의한 장치는 제1버전의 제1서브 펌웨어 및 제1버전의 제2서브 펌웨어를 포함하는 펌웨어 를 포함하며, 제1서브 펌웨어 및 제2서브 펌웨어의 최신 버전 정보를 서버에서 수신하여 제1서브 펌웨어 또는 제2서브 펌웨어를 교체한다. 본 발명의 일 실시예에 의한 펌웨어를 교체하는 장치는 제1버전의 제1서브 펌웨어를 교체할 제2버전의 제1서브 펌웨어와 제2서브 펌웨어의 버전 정보를 포함하는 복합 서브 펌웨어를 제1서버로부터 수신하거나 또는 펌웨어 또는 제1서브 펌웨어 또는 제2서브 펌웨어 중 어느 하나 이상의 버전 정보를 제1서버로부터 수신한다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명을 적용할 경우 펌웨어를 교체하기 위해 다운로드 해야 할 파일이 펌웨어 전체가 아닌 서브 펌웨어를 기준이 되도록 하여 펌웨어의 교체 시간 및 파일 용량을 줄여 신속하게 업그레이드/업데이트가 될 수 있다. 또한, 본 발명을 적용할 경우 복합 서브 펌웨어의 구성을 이용하여 서브 펌웨어의 버전 정보와 서브 펌웨어가 복합된 파일을 다운로드 하여 펌웨어 교체 및 다음 서브 펌웨어의 다운로드 여부를 신속하게 수행할 수 있다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과는 전술한 효과에 한정되지 않으며, 본 발명의 구성에서 본 발명의 다양한 효과들이 쉽게 도출될 수 있다."}
{"patent_id": "10-2020-0162028", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 본 발명은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 동일 또는 유사한 구성요소에 대해서는 동일한 참조 부호를 붙이도록 한다. 또한, 본 발명의 일부 실시예들을 예시적인 도 면을 참조하여 상세하게 설명한다. 각 도면의 구성요소들에 참조부호를 부가함에 있어서, 동일한 구성요소들에 대해서는 비록 다른 도면상에 표시되더라도 가능한 한 동일한 부호를 가질 수 있다. 또한, 본 발명을 설명함에 있어, 관련된 공지 구성 또는 기능에 대한 구체적인 설명이 본 발명의 요지를 흐릴 수 있다고 판단되는 경우에 는 그 상세한 설명은 생략할 수 있다. 본 발명의 구성 요소를 설명하는 데 있어서, 제 1, 제 2, A, B, (a), (b) 등의 용어를 사용할 수 있다. 이러한 용어는 그 구성 요소를 다른 구성 요소와 구별하기 위한 것일 뿐, 그 용어에 의해 해당 구성 요소의 본질, 차례, 순서 또는 개수 등이 한정되지 않는다. 어떤 구성 요소가 다른 구성요소에 \"연결\", \"결합\" 또는 \"접속\"된 다고 기재된 경우, 그 구성 요소는 그 다른 구성요소에 직접적으로 연결되거나 또는 접속될 수 있지만, 각 구성 요소 사이에 다른 구성 요소가 \"개재\"되거나, 각 구성 요소가 다른 구성 요소를 통해 \"연결\", \"결합\" 또는 \"접 속\"될 수도 있다고 이해되어야 할 것이다. 또한, 본 발명을 구현함에 있어서 설명의 편의를 위하여 구성요소를 세분화하여 설명할 수 있으나, 이들 구성요 소가 하나의 장치 또는 모듈 내에 구현될 수도 있고, 혹은 하나의 구성요소가 다수의 장치 또는 모듈들에 나뉘 어져서 구현될 수도 있다. 이하, 장치 내에 포함된 펌웨어(firmware)는 소프트웨어를 포함하며, 새로운 펌웨어가 추가될 경우 새로운 기능 을 제공할 수 있다. 펌웨어의 추가는 업그레이드(upgrade) 또는 업데이트(update)에 따라 가능해지는데, 통상 업데이트는 업그레이드 보다 작은 범위의 추가나 수정을 의미한다. 즉, 업그레이드는 버전을 향상시키는 것을 지시할 수 있으며 업데이트는 버전은 유지하되 펌웨어의 일부를 변경하는 것을 지시할 수 있다. 그러나, 본 발 명이 이에 한정되는 것은 아니므로, 이하 본 명세서에서는 업데이트 또는 업그레이드를 혼용하여 사용한다. 즉, 업데이트 또는 업그레이드는 모두 펌웨어의 변경 또는 수정을 가져오는 모든 프로세스를 포함한다. 또는 이러한 프로세스를 통칭하여 교체라고 지시한다. 본 명세서에서 설명하는 M2M(Machine to Machine) 모듈은 휴대폰, 스마트폰, 컴퓨터 또는 M2M 기능을 제공하는 장치 등에 포함된다. M2M 기능을 제공하는 장치란 가전제품을 포함한다. 본 명세서에서 M2M 기능을 제공하거나 M2M 모듈을 포함하는 가전제품 또는 전자제품 등을 통칭하여 M2M 장치라고 지시한다. 한편 M2M 기능을 제공하지 않고 M2M 모듈을 포함하지 않으며 전술한 M2M 장치를 경유하여 펌웨어 업그레이드/업데이트를 수행하는 가전제 품 또는 전자제품 등을 통칭하여 비 M2M(non-M2M) 장치라고 지시한다. M2M 장치는 휴대폰, 스마트폰, 컴퓨터, AP(Access Point) 또는 공유기 뿐만 아니라 특정 가전 제품을 포함할 수 있다. FOTA(Firmware Over The Air 혹은 Firmware On The Air)는 펌웨어 업데이트의 방식으로 와이파이(Wi-Fi) 또는 3G/4G의 환경에서 펌웨어를 업데이트 하는 방식을 지시한다. 이는 무선 통신이 가능한 디바이스, 예를 들어 스 마트폰이나 컴퓨터 등의 장치가 무선 또는 유선 통신으로 서버에 접속하여 펌웨어를 업데이트하는데 필요한 파 일을 수신하는 방법을 일 실시예로 한다. 본 명세서의 일 실시예에 의한 FOTA 시스템은 FOTA시스템은 하드웨어와 밀접한 관계를 가지고 있는 펌웨어를 업 데이트하기 위한 표준을 포함한다. 이 표준을 이용하여 M2M 모듈에서 동작하는 어플리케이션의 비활성 데이터 (변동부)를 수신함으로써 사용자에게 응용프로그램 전체를 다운로드 받는 시간 대비 FOTA시간의 단축이 가능하 며, 한번 수신 받았던 M2M모듈로 이종의 디바이스에서도 최신 음성 안내 맨트의 지원이 가능하다. 또한, 본 명세서의 다른 실시예에 의한 펌웨어 업데이트/업그레이드는 전술한 M2M 모듈과 별개로 동작할 수 있 다. 따라서, 본 명세서의 실시예들은 서브 펌웨어를 포함하는 복합 서브 펌웨어가 디바이스 측에 전달되는 기술적 구성 및 방법을 포함하며, 이들은 선택적으로 M2M 모듈 상에서 동작하거나, 혹은 M2M 모듈과 협업으로 동작하거나 또는 M2M 모듈과 독립적으로 동작할 수 있다. 이하, 본 명세서에서는 펌웨어를 업그레이드하기 위해 펌웨어 파일을 작은 크기의 파일로 분할하여 각각의 펌웨 어 파일들이 고유의 버전을 가지면서 동시에 FOTA 서버가 개별 배포하는 기술적 구성을 제시한다. 또한, 각각의 펌웨어 파일의 버전은 FOTA 서버가 배포하는 펌웨어 파일들의 버전과 비교하여 버전이 높은 펌웨어 파일들을 선 택적으로 다운로드 받아 업그레이드 하므로, FOTA에 소요되는 시간을 절감하는 기술에 대해 살펴본다. 본 발명의 일 실시예에서 펌웨어는 음성 인식 펌웨어를 중심으로 설명한다. 그러나 본 발명이 이에 한정되는 것 은 아니며 다른 종류의 펌웨어의 업그레이드에도 본 발명의 실시예를 적용할 수 있다. 이하, 변경될 펌웨어를 포함하는 장치의 일 실시예로 펌웨어 디바이스라고 한다. 펌웨어 디바이스는 M2M 모듈을 포함하는 M2M 장치인 것을 일 실시예로 한다. 또는 펌웨어 디바이스는 M2M 모듈을 포함하지 않는 비M2M 장치인 것을 일 실시예로 한다. 펌웨어 디바이스는 M2M 모듈을 선택적으로 포함하므로 M2M 장치 또는 비 M2M 장치 모두 를 실시예로 한다. 펌웨어 디바이스는 특정한 기능을 제공하며 지속적인 펌웨어 업그레이드/업데이트를 필요로 하는 모든 전자 장 치를 의미하며, 여기에는 에어컨, 냉장고, TV, 세탁기 등과 같은 가전제품과 휴대폰, 컴퓨터, 노트북 등의 통신 제품 등을 모두 포함한다. 도 1은 본 발명의 일 실시예에 의한 펌웨어가 다수의 서브 펌웨어로 구분되는 예시를 보여주는 도면이다. 도 1의 실시예에서 펌웨어가 다수의 서브 펌웨어로 구분되며 각각 업데이트 될 수 있다. 펌웨어 디바이스 의 펌웨어는 K 개의 서브 펌웨어(210, 220, ..., 290)을 포함한다. K는 2 이상이 될 수 있다. 그리고 이들 서브 펌웨어는 각각 버전(version)을 가진다. 이들 K 개의 서브 펌웨어(sub-firmware, 부분펌웨어) 중 일부는 데이터 파일로, 또한 일부는 운영체제로, 또는 다른 일부는 드라이버를 구성할 수 있다. 따라서 운영체제가 하 나 이상의 서브 펌웨어를 포함할 수 있다. 또한 드라이버 역시 하나 이상의 서브 펌웨어를 포함할 수 있다. 물 론, 특정 기능을 수행하기 위해, 예를 들어 음성 인식이나 사물에 대한 시각적 인식을 수행하는 요소 역시 하나 이상의 서브 펌웨어로 구현될 수 있다. 통신부는 외부의 다른 장치와 데이터를 송수신하는 통신을 수행하는 구성요소이다. M2M 모듈은 선택 적으로 펌웨어 디바이스에 포함될 수 있다. 펌웨어 디바이스는 펌웨어 전체를 교체하지 않는다. 대신, 펌웨어 디바이스는 작은 단위인 서브 펌웨 어들의 각각의 버전과 외부의 장치(서버 또는 다른 M2M 장치)가 배포하는 각각의 서브 펌웨어의 버전을 비교하 여 버전이 낮은 서브 펌웨어만 선택적으로 FOTA 방식으로 교체(업그레이드/업데이트)한다. 이때, 서브 펌웨어 중에서 다른 서브 펌웨어가 교체되어야만 정상적으로 작동하는 경우 이러한 서브 펌웨어는 다른 서브 펌웨어와 링크된 것이며, 다른 서브 펌웨어가 교체되기 전까지는 이전 버전의 서브 펌웨어와 새로운 버전의 서브 펌웨어 모두 펌웨어 디바이스 내에 유지된다. 일 실시예로, 제1서브 펌웨어가 반드시 제2서브 펌웨어와 동일한 버전이어야 동작이 가능하고, 제2서 브 펌웨어가 아직 최신 버전으로 교체되지 않은 경우, 제1서브 펌웨어에 대해 이전 버전과 최신 버전 둘 다 펌웨어 디바이스에 저장될 수 있으며, 제2서브 펌웨어가 최신 버전으로 교체되면 펌웨어 디바 이스는 제1서브 펌웨어의 이전 버전을 삭제할 수 있다. 또한, 펌웨어 디바이스 및 펌웨어, 통신부, M2M 모듈을 제어하는 운영체제(또는 제어부, 컨트롤 러, controller) 역시 서브 펌웨어로 구현 될 수 있다. 이 경우, 운영체제가 동작 중인 경우에는 두 개의 버전 (이전 버전 및 최신 버전)의 서브 펌웨어가 펌웨어 디바이스에 저장될 수 있으며, 운영체제의 동작이 정지 되거나 펌웨어 디바이스가 꺼지는 경우에 운영체제를 구성하는 서브 펌웨어들이 최신 버전으로 교체될 수 있다. 또는 시스템의 안정적 동작의 필요성에 따라, 별도의 제어부가 구현될 수도 있다. 이 경우, 제어부는 펌웨어와 구분되며, 펌웨어와는 별도의 모듈로 구현될 수 있다. 물론, 제어부가 서브 펌웨어 중 어느 하나로 구현될 수도 있다. 또는 제어부를 구성하는 요소 중 일 부는 펌웨어와 독립적으로, 그리고 다른 일부는 서브 펌웨어로 구현될 수 있다. 이는 펌웨어 디바이스의 동작 방식에 따라 다양하게 구현될 수 있다. 도 2는 본 발명의 일 실시예에 의한 음성 인식 펌웨어가 다수의 서브 펌웨어로 구분되어 교체되는 과정을 보여 주는 도면이다. 음성인식을 수행하는 펌웨어는 음성 인식 기능을 제공하는 서브 펌웨어(210v), 운영체제를 구성하는 서브 펌웨어(220c), 드라이버를 구성하는 서브 펌웨어(230d)를 포함한다. 각 서브 펌웨어(210v, 220c, 230d)는 각각 교체될 수 있다. 각 서브 펌웨어들은 각각의 교체 과정을 가지고 있다. 이를 히스토리라고 지시하는데, 예를 들어, 음성인식 서 브 펌웨어(210v)는 버전(version) 1에서 버전 2.5를 거쳐 버전 3의 서브 펌웨어가 설치된 상태이며, 최신 버전 이 v3(version 3) 이다. 마찬가지로, 운영체제 서브 펌웨어(220c)는 버전 1에서 버전 1.2를 거쳐 버전 2의 서브 펌웨어가 설치된 상태이며 최신 버전이 v2(version 2) 이다. 같은 방식으로 드라이버 서브 펌웨어(230d)는 버전 1에서 버전 3, 4를 거쳐 버전 5의 서브 펌웨어가 설치된 상태이며 최신 버전이 v5(version 5) 이다. 도 3은 본 발명의 일 실시예에 의한 서브 펌웨어를 교체하는 과정을 보여주는 도면이다. 서브 펌웨어를 교체하 는 방식은 서브 펌웨어 전체가 포함된 펌웨어를 일괄 교체하는 방식, 또는 서브 펌웨어 각각 또는 둘 이상을 교 체하는 방식으로 나뉘어질 수 있다. 일 실시예로 FOTA 서버에 최신 펌웨어가 저장된 상태이며, 최신 펌웨어는 제1서브 펌웨어 (v2.1), 제2서브 펌웨어(v3.2), 제3서브 펌웨어(v2.5)로 구성된다. 펌웨어 디바이스(100a)는 FOTA 서버에 저장된 펌웨어의 버전을 체크한다(S1). 버전 체크(Version Check) 방식은 전체 펌웨어 버전을 체크하는 방식과 서브 펌웨어별로 버전을 체크하는 방식 두 가지로 나뉘어질 수 있다. 전자의 경우에는 펌웨어 디바이스(100a)가 오랜 기간 펌웨어를 교체하지 않았거나, 공장에서 출시된 후 처음 펌웨어 업그레이드/ 업데이트를 시도할 경우에 전체 펌웨어 버전을 체크할 수 있다. 이와 다른 실시예로 펌웨어 디바이스(100a)는 각 서브 펌웨어별로 버전을 체크할 수 있다. 펌웨어 디바이스 (100a)는 제1서브 펌웨어(210a)와 FOTA 서버의 제1서브 펌웨어의 버전을 비교하고, 제2서브 펌웨어 (220a)와 FOTA 서버의 제2서브 펌웨어의 버전을 비교하고, 제3서브 펌웨어(230a)와 FOTA 서버 의 제3서브 펌웨어의 버전을 비교한다. 그 결과 펌웨어 디바이스(100a)는 제1서브 펌웨어(210a) 및 제2서브 펌웨어(220a)가 FOTA 서버 보다 버전 이 낮은 것을 확인한다. 이러한 확인은 운영체제를 담당하는 서브 펌웨어가 확인할 수 있다. 그리고 펌웨어 디바이스(100a)는 제1서브 펌웨어 및 제2서브 펌웨어를 다운로드 시작한다(S2). 다운로드가 완료된 후 펌웨어 디바이스는 일부 서브 펌웨어들을 교체하는 서브 펌웨어 교체(upgrade/update)를 수행한다(S3). 펌웨어 디바이스(100b)는 기존의 제1서브 펌웨어(v2)를 다운로드 받은 제1서브 펌웨어(v2.1)로 교체한다. 그 결 과 펌웨어 디바이스(100b)의 펌웨어(200b)는 v2.1의 제1서브 펌웨어(210b)를 포함한다. 마찬가지로, 펌웨어 디바이스(100b)는 기존의 제2서브 펌웨어(v3.1)를 다운로드 받은 제2서브 펌웨어(v3.2)로 교체한다. 그 결과 펌웨어 디바이스(100b)의 펌웨어(200b)는 v3.2의 제2서브 펌웨어(220b)를 포함한다. 반면, 펌웨어 디바이스(100b)의 펌웨어(200b)는 제3서브 펌웨어(230a)를 그대로 유지한다. 이와 같이 다양한 디바이스 내에 설치된 펌웨어(예를 들어 음성인식 펌웨어, 사물인식 펌웨어, 스케쥴링 펌웨어 등 다양한 기능을 제공하는 펌웨어들)를 디바이스가 설치된 지점(필드)에서 FOTA(펌웨어 업그레이드)하기 위하 여 해당 펌웨어를 비교적 크기가 작은 서브 펌웨어들, 즉 크기가 작은 파일들(2~n개)의 모음으로 구성하고 각각 의 서브 펌웨어들, 즉 펌웨어의 부분을 구성하는 파일들은 고유의 버전을 가지며 동시에 FOTA서버에서 개 별 배포할 수 있다. 펌웨어 디바이스(예를 들어 음성인식 펌웨어가 설치된 음성인식 보드, 또는 사물인식 펌웨어가 설치된 사물인식 보드, 스케줄링 펌웨어가 설치된 스케줄링 펌웨어 등)는 탑재되어 있는 각각의 서브 펌웨어의 버전을 FOTA 서버 에서 배포 중인 서브 펌웨어들의 각각의 버전과 비교하여 펌웨어 디바이스에 저장된 서브 펌웨어 보다 버 전이 높은 서브 펌웨어만을 선택적으로 다운로드 받아서 펌웨어를 업그레이드/업데이트하는 펌웨어 교체를 실시 함으로써 FOTA에 소요되는 시간을 절감할 수 있다. 특히, 서브 펌웨어 각각 버전 별로 확인 후 교체하므로, 각 서브 펌웨어 중에서 버전 업이 빈번한 서브 펌웨어 만 반복 다운로드 함으로써 펌웨어 교체에 따른 시간을 줄일 수 있다. 도 4는 본 발명의 일 실시예에 의한 음성인식을 수행하는 펌웨어 디바이스에서의 펌웨어 또는 서브 펌웨어 교체 과정을 보여주는 도면이다. 앞서 살펴본 바와 같이, 펌웨어는 총 3개의 서브 펌웨어를 포함한다.여기서, 제1FOTA 서버(500a)는 하나의 서브 펌웨어(제1서브 펌웨어, v2.1)와 그 외 다른 서브 펌웨어의 최 신 버전 정보(721, 731)를 포함하는 복합 서브 펌웨어를 유지하고 있다. 복합 서브 펌웨어는 펌웨어 를 구성하는 둘 이상의 서브 펌웨어 중 하나 이상의 서브 펌웨어와 그 외의 서브 펌웨어의 최신 버전 정보를 포 함한다. 예를 들어 750과 같이 제1서브 펌웨어와 제2서브 펌웨어의 버전 정보, 그리고 제3서브 펌웨 어의 버전정보로 구성된 복합 서브 펌웨어가 구성될 수 있다. 그리고 펌웨어 디바이스(100a)는 제1FOTA 서버(500a)와 버전 체크(Version Check)를 수행하고(S11), 제1FOTA 서버(500a)에 저장된 최신 제1서브 펌웨어의 버전(v2.1)과 펌웨어 디바이스(100a)의 제1서브 펌웨어(210 a)의 버전(v2)을 비교한다. 그 결과 제1FOTA 서버(500a)에 새로운 버전의 제1서브 펌웨어가 저장된 것을 확인하고 펌웨어 디바이스(100a)는 복합 서브 펌웨어를 다운로드한다(S12). 다운로드가 완료되면, 펌웨어 디바이스(100a)는 복합 서브 펌웨어에 포함된 제1서브 펌웨어(v2.1)를 이용하여 제1서브 펌웨어를 교체(업데이트 혹은 업그레이드)한다(S13). 그 결과 펌웨어 디바이스(100b)는 최신 버전인 v2.1로 교체된 제1서브 펌웨어(210b)를 포함한다. 한편, 펌웨어 디바이스(100b)는 복합 서브 펌웨어에 포함된 제2서브 펌웨어 버전정보(v3.2)를 확인할 수 있다. 그 결과, 펌웨어 디바이스(100b)는 다운로드한 제2서브 펌웨어 버전정보(v3.2)가 제2서브 펌웨어 (220a)의 버전(v3.1) 보다 최신 버전이라는 것을 확인하며 교체를 위해 다운로드를 시작한다. 펌웨어 디바이스(100b)는 제1FOTA 서버(500a)에 저장된 제2서브 펌웨어(v3.2) 또는 다른 제2FOTA 서버 (500b)에 저장된 제2서브 펌웨어(v3.2) 중 어느 하나를 다운로드 받는다(S15a 또는 S15b). 이는 FOTA 서 버가 다수 배치된 경우, 펌웨어 디바이스(100b)는 속도가 빠르거나 트래픽이 적은 FOTA 서버를 선택하여 다운로 드 받을 수 있다. 다운로드가 완료되면, 펌웨어 디바이스(100b)는 제2서브 펌웨어(v3.2)를 이용하여 제2서브 펌웨어를 교체 (업데이트 혹은 업그레이드)한다(S16). 그 결과 펌웨어 디바이스(100c)는 최신 버전인 v3.2로 교체된 제2서브 펌웨어(220b)를 포함한다. 한편, 펌웨어 디바이스(100c)는 복합 서브 펌웨어에 포함된 제3서브 펌웨어 버전정보(v2.5)를 확인할 수 있다. 그 결과, 펌웨어 디바이스(100c)는 다운로드한 제3서브 펌웨어 버전정보(v2.5)와 제3서브 펌웨어 (230a)의 버전(v2.5)과 동일하다는 것을 확인하며 별도의 교체를 위한 작업을 수행하지 않는다. 도 5는 본 발명의 일 실시예에 의한 복합 서브 펌웨어의 구성을 보여주는 도면이다. 복합 서브 펌웨어는 펌웨어를 구성하는 다수의 서브 펌웨어 중 적어도 하나 이상의 서브 펌웨어 파일을 포함하 며, 다른 서브 펌웨어의 최신 버전 정보를 포함하는 것을 일 실시예로 한다. 서브 펌웨어와 비교하여 최신 버전 정보는 숫자나 혹은 간단한 문자로만 이루어진다. 따라서 최선 버전 정보는 파일 크기가 매우 작다. 또는 본 발명의 일 실시예에 의한 복합서브 펌웨어의 파일명은 각 서브 펌웨어의 최신 버전 정보들을 포함할 수 도 있다. 파일명에 버전 정보가 포함될 경우, 복합서브 펌웨어에는 별도로 버전 정보들이 저장되지 않을 수 있 다. 다만, 복합서브 펌웨어의 파일명 역시 복합서브 펌웨어를 구성하는 정보인 바, 복합서브 펌웨어의 파일명을 통한 버전 정보의 제공 역시 본 발명의 실시예에 해당한다. 도 5의 21은 제1서브 펌웨어 파일(v2.1)과 제2서브 펌웨어의 버전 정보(v3.2) 및 제3서브 펌웨어의 버전 정보(v2.5)를 포함하는 복합 서브 펌웨어의 구성을 보여준다. 만약, 버전정보들을 파일명에 포함시킬 경우, 복합서브 펌웨어의 파일명의 예시로 SF1filev2.1_SF2infov3.2_SF3infov2.5 와 같이 설정될 수 있다. SF는 공통적으로 서브 펌웨어를 지칭하며, 숫자 1, 2, 3은 각각의 서브 펌웨어를 구분한다. \"file\"은 복합 서브 펌웨어 내에 파일로 저장되었음을 지시한다. 반면 \"info\"는 별도의 파일 없이 버전 정보가 제공됨을 의미한다. 파일명에서 버전 정보가 제공되므로 버전정보가 별도로 복합서브 펌웨어 내에 독립적으로 구성되지 않을 수 있 다. 보다 자세히 살펴본다. \"SF1filev2.1\"는 제1서브 펌웨어 파일이 포함되며 버전은 2.1이라는 것을 지시한다. \"SF2infov3.2\"는 제2서브 펌웨어 버전 정보가 포함되며, 버전 정보가 3.2라는 것을 지시한다. \"SF3infov2.5\"는 제3서브 펌웨어 버전 정보 가 포함되며 버전 정보가 2.5라는 것을 지시한다. 도 5의 22는 제2서브 펌웨어 파일(v3.2)과 제1서브 펌웨어의 버전 정보(v2.1) 및 제3서브 펌웨어의 버전 정보(v2.5)를 포함하는 복합 서브 펌웨어의 구성을 보여준다. 만약, 버전정보들을 파일명에 포함시킬 경우, 복합서브 펌웨어의 파일명의 예시로 SF1infov2.1_SF2filev3.2_SF3infov2.5 와 같이 설정될 수 있다. 도 5의 23은 제3서브 펌웨어 파일(v2.5)과 제1서브 펌웨어의 버전 정보(v2.1) 및 제2서브 펌웨어의 버전 정보(v3.2)를 포함하는 복합 서브 펌웨어의 구성을 보여준다. 만약, 버전정보들을 파일명에 포함시킬 경우, 복합서브 펌웨어의 파일명의 예시로 SF1infov2.1_SF2infov3.2_SF3filev2.5 와 같이 설정될 수 있다. 도 5의 24는 21/22/23과 달리 두 개의 서브 펌웨어가 포함된 실시예로, 제1서브 펌웨어 파일(v2.1)과 제2 서브 펌웨어 파일(v3.2) 및 제3서브 펌웨어의 버전 정보(v2.5)를 포함하는 복합 서브 펌웨어의 구성 을 보여준다. 만약, 버전정보들을 파일명에 포함시킬 경우, 복합서브 펌웨어의 파일명의 예시로 SF1filev2.1_SF2filev3.2_SF3infov2.5 와 같이 설정될 수 있다. 24와 같이 둘 이상의 서브 펌웨어를 포함시키는 경우는 두 개의 서브 펌웨어의 업그레이드 혹은 업데이트가 빈 번하게 발생하는 경우에 적용 가능하다. 또는 두 서브 펌웨어의 변경이 서로 연관된 경우에 적용 가능하다. 정리하면 다음과 같다. 펌웨어 디바이스와 같은 장치는 제1버전의 제1서브 펌웨어 및 제1버전의 제2서브 펌웨어 를 포함한다. 그리고 장치의 통신부는 제1버전의 제1서브 펌웨어를 교체할 제2버전의 제1서브 펌웨어와 제 2서브 펌웨어의 버전 정보를 포함하는 복합 서브 펌웨어를 제1서버(제1FOTA 서버)로부터 수신할 수 있다. 통신부가 수신한 복합 서브 펌웨어에 포함된 버전 정보가 제2서브 펌웨어의 제1버전보다 최신 버전임을 지 시하는 경우 통신부는 제2서브 펌웨어를 제1서버 또는 제1서버와 구분되는 제2서버로부터 수신할 수 있다. 이는 각 FOTA 서버가 서브 펌웨어 별로 배치되는 경우에 적용 가능하다. 또는 각 서버들의 통신 상태에 따라 실 시간으로 제2서버가 결정될 수 있다. 또는 장치의 통신부는 펌웨어 또는 상기 제1서브 펌웨어 또는 상기 제2서브 펌웨어 중 어느 하나 이상의 버전 정보를 상기 제1서버로부터 수신할 수 있다. 이를 통해 장치는 펌웨어 또는 서브 펌웨어를 교체할 것인지 판단할 수 있다. 이때, 도 5의 711, 721, 731 로만 구성된 버전 정보들의 셋트를 장치가 수신하여 업데이트가 필요한 서브 펌웨어 별로 각각 다운로드 할 수 있다. 이 경우, 장치의 통신부가 수신한 펌웨어 또는 제1서브 펌웨어 또는 제2서브 펌웨어 중 어느 하나 이상의 버전 정보가 최신 버전임을 지시하는 경우 통신부는 복합 서브 펌웨어 또는 제1서브 펌웨어 또는 제2서브 펌웨어 중 어느 하나 이상을 제1서버 또는 제1서버와 구분되는 제2서버로부터 수신할 수 있다. 도 6은 본 발명의 일 실시예에 의한 음성 인식 기능을 포함하는 펌웨어 디바이스가 펌웨어를 교체하는 과정을 보여주는 도면이다. 제1FOTA 서버(500a)는 복합 서브 펌웨어(750a)를 포함한다. 음성인식 서브 펌웨어 파일(v1.6)과 운영체제 서브 펌웨어의 버전 정보(v2.5) 및 드라이버 서브 펌웨어의 버전정보(v3.7)이 복합 서브 펌웨어(750a)를 구성한다. 서브 펌웨어의 버전 정보는 문자나 숫자가 포함되는 텍스트파일의 형태를 일 실시예로 한다. 버전 정보는 서브 펌웨어 파일 보다 크기가 작은 것을 특징으로 한다. 또한, 앞서 살펴본 바와 같이, 서브 펌웨어의 버전 정보는 복합 서브 펌웨어(750a)의 파일 명칭에 포함될 수 있다. 이 경우, 복합 서브 펌웨어(750a) 내에는 음성인식 서 브 펌웨어 파일(v1.6) 만이 포함될 수 있다. S31과 같이 펌웨어 디바이스(100a)는 제1FOTA 서버(500a)에 저장된 복합 서브 펌웨어(750a)의 버전 정보를 확인 한다. 확인 방식은 복합 서브 펌웨어(750a)를 다운로드 받아 확인하는 방식 또는 각 서브 펌웨어별로 버전 정보 만을 수신하여 확인하는 방식 등 다양하게 구현할 수 있다. 버전 정보를 확인한 결과, 펌웨어 디바이스(100a)에 저장된 음성인식 서브 펌웨어(210a)의 버전은 1.5이며, 제 1FOTA 서버(500a)에 저장된 복합 서브 펌웨어(750a)를 구성하는 음성인식 서브 펌웨어의 버전은 1.6이다. 버전 정보를 확인한 결과, 펌웨어 디바이스(100a)에 저장된 운영체제 서브 펌웨어(220a)의 버전은 2.3이며, 제 1FOTA 서버(500a)에 저장된 복합 서브 펌웨어(750a)를 구성하는 운영체제 서브 펌웨어의 버전 정보는 2.5이다. 버전 정보를 확인한 결과, 펌웨어 디바이스(100a)에 저장된 드라이버 서브 펌웨어(230a)의 버전은 3.5이며, 제 1FOTA 서버(500a)에 저장된 복합 서브 펌웨어(750a)를 구성하는 드라이버 서브 펌웨어의 버전 정보는 3.7이다. 이에, 펌웨어 디바이스(100a)는 제1FOTA 서버(500a)에 저장된 복합 서브 펌웨어(750a)를 다운받는다. 앞서 확인 과정에서 복합 서브 펌웨어(750a)를 다운받은 경우라면 바로 서브 펌웨어 설치 단계를 시작한다.S32에 도시된 바와 같이, 다운받은 복합 서브 펌웨어(750a) 내의 음성인식 서브 펌웨어(v1.6)을 설치하고, 이전 에 저장되었던 음성인식 서브 펌웨어(210a)를 제거한다. 그 결과 펌웨어 디바이스(100b)의 음성인식 서브 펌웨 어(210b)는 버전 1.6으로 교체(업데이트, 업그레이드)된다. 한편, 다른 서브 펌웨어에 대해서도 교체를 위해 다운로드를 수행한다. 다른 서브 펌웨어들에 대해서는 제1FOTA 서버(500a)와 상이한 서버들(500b, 500c)에서 이루어질 수 있다. 물론 실시예에 따라, 500a, 500b, 500c 모두 하나의 동일한 서버를 지칭할 수도 있다. 펌웨어 디바이스(100b)는 제2FOTA 서버(500b)에 저장된 운영체제 서브 펌웨어(v2.5)를 다운받는다(S33). 그리고 다운받은 운영체제 서브 펌웨어(v2.5)을 설치하고, 이전에 저장되었던 운영체제 서브 펌웨어(220a)를 제거한다. 그 결과 펌웨어 디바이스(100c)의 운영체제 서브 펌웨어(220b)는 버전 2.5으로 교체(업데이트, 업그레이드)된다. 마찬가지로, 펌웨어 디바이스(100c)는 제3FOTA 서버(500c)에 저장된 드라이버 서브 펌웨어(v3.7)를 다운받는다 (S34). 그리고 다운받은 드라이버 서브 펌웨어(v3.7)을 설치하고, 이전에 저장되었던 드라이버 서브 펌웨어 (230a)를 제거한다. 그 결과 펌웨어 디바이스(100d)의 드라이버 서브 펌웨어(230b)는 버전 3.7로 교체(업데이트, 업그레이드)된다. S31, S33, S34 단계는 시간적 간격을 두고 이루어질 수 있다. 이는 펌웨어 디바이스가 서브 펌웨어를 다운로드 받아 교체하는데 시간이 소요되거나 현재 기능 중인 서브 펌웨어를 중단시키는 문제가 있을 경우, 우선 버전 확 인을 한 후에 펌웨어 디바이스의 기능 수행이 잠시 중지된 경우 그때 서브 펌웨어의 다운로드를 수행할 수 있다. 도 6의 FOTA 방식을 정리하면 다음과 같다. 펌웨어 디바이스(100a)가 FOTA 서버에 접속하여 FOTA 진행여부를 판 단하기 위해 펌웨어 디바이스(100a)에 탑재된 펌웨어 버전과 FOTA 서버에서 배포하는 펌웨어버전을 비교한다. 이때, 서브 펌웨어의 버전이 변경된 경우, 당연히 펌웨어 버전 역시 변경된다. 일 실시예로, 도 6에서 전체 펌웨어의 버전을 FOTA 서버(500a)가 별도로 제공할 수 있다. 이는 각 서브 펌웨어 버전에 기반하여 산출될 수 있다. 그리고 펌웨어 디바이스(100a)는 전체 펌웨어의 버전을 비교하여 펌웨어 디바이스(100a) 내에 저장된 펌웨어의 버전 보다 높은 경우에 복합 서브 펌웨어(750a)를 다운로드한다(S31). 복합 서브 펌웨어(750a)는 최신의 제1서브 펌웨어(음성인식 서브 펌웨어) 파일이 포함된다. 따라서, 복합 서브 펌웨어(750a)의 다운로드가 완료되면 S32와 같이 제1서브 펌웨어인 음성인식 서브 펌웨어가 210b와 같이 업데이 트된다. 또한, 펌웨어 디바이스(100b)는 복합 서브 펌웨어(750a)에 포함된 제2서브 펌웨어(운용체제 서브 펌웨어)의 버 전 정보와 제3서브 펌웨어(드라이버 서브 펌웨어)의 버전 정보를 추출하여 펌웨어 디바이스(100b) 내의 제2서브 펌웨어(운용체제 서브 펌웨어)(220a), 제3서브 펌웨어(드라이버 서브 펌웨어)(230a)의 버전과 비교한다. 비교 결과, 220a, 230a의 버전이 낮은 경우 해당하는 서브 펌웨어를 FOTA 서버로부터 다운로드 받아 업데이트한다. 이는 S33, S34 과정에서 살펴보았다. 즉 배포되는 모든 서브 펌웨어파일들을 일괄적으로 FOTA 하는 것이 아니라, 도 6과 같이 각각의 서브 펌웨어의 버전을 비교하여 업데이트가 필요한 서브 펌웨어만 선택적으로 업데 이트 할수 있다. 도 6에 도시된 방식으로 펌웨어를 교체함에 있어서, 파일 사이즈가 큰 전체 펌웨어가 아닌 크기가 작은 부분 펌 웨어 파일들, 즉 서브 펌웨어 파일들(2~n개)을 제공하여, 다수개의 서브 펌웨어 버전들을 각각 비교하여 버전이 낮은 서브 펌웨어들만 선택적으로 FOTA가능하도록 할 수 있다. 또한, 도 6에서 3개의 FOTA 서버를 배치한 바와 같이, 여러 개의 서브 펌웨어파일을 동시에 다수의 FOTA서버에 서 개별 배포할 수 있다. 용량이 큰 하나의 전체 펌웨어를 작은 크기의 서브 펌웨어파일로 구성하고 서브 펌웨어파일 단위로 FOTA를 수행 할 경우, 불필요한 다운로드나 전체 펌웨어 교체 횟수를 줄일 수 있다. 또한, 서브 펌웨어를 일부만 제공하는 과정에서 다른 서브 펌웨어의 버전 정보를 포함하는 복합 서브 펌웨어를 펌웨어 디바이스가 다운로드 받으면, 서브 펌웨어 각각의 다운로드 과정 없이도 버전을 비교할 수 있으므로, 펌 웨어 교체 속도를 높일 수 있다. 예를 들어, FOTA서버가 배포하는 서브 펌웨어파일들의 각각의 버전을 음성인식보드를 일 실시예로 하는 펌웨어 디바이스 내에 탑재되어있는 서브 펌웨어들의 각각의 버전들과 비교하여 버전이 낮은 서브 펌웨어만을 다운로드 하여 선택적으로 FOTA를 수행할 수 있다. 이는 복합 서브 펌웨어 내에 어느 하나 이상의 서브 펌웨어 파일과 어 느 하나 이상의 서브 펌웨어의 버전 정보를 포함시킴으로써, 다운로드하는 파일의 크기는 줄이면서 서브 펌웨어 별 버전 정보가 펌웨어 디바이스로 전달되어 빠른 업데이트 혹은 업그레이드를 가능하게 한다. 전술한 실시예들을 정리하면 다음과 같다. 음성인식, 사물인식, 또는 인공지능 등 특정한 기능을 수행하는 펌웨 어를 FOTA를 이용하여 업그레이드 하기 위하여 펌웨어를 비교적 크기가 작은 파일들(서브 펌웨어)(2~n개)의 모 음으로 구성한다. 그리고 전체 펌웨어 교체가 아닌 일부 서브 펌웨어파일만을 다운로드 받아 교체할 수 있다. 각각의 서브 펌웨어파일들은 고유의 버전을 가지며 각 서브 펌웨어 파일을 단위로 업데이트할 수 있다. 또한 각 서브 펌웨어 파일은 동시에 FOTA서버에서 개별 배포한다. 이 과정에서 다수의 FOTA 서버가 배치될 수 있다. 또한 펌웨어가 설치된 보드 또는 펌웨어를 포함하는 펌웨어 디바이스는 탑재된 각각의 서브 펌웨어파일의 버전 과 FOTA 서버에서 배포중인 서브 펌웨어파일들의 버전을 비교하여 서버에서 배포중인 파일들이 높은 버전일 경 우, 해당 서브 펌웨어 파일만을 선택적으로 다운로드 받아서 펌웨어 업그레이드를 실시한다. 그 결과, FOTA에 소요되는 시간을 최소화 할 수 있다. 특히, 복합 서브 펌웨어는 하나 이상의 서브 펌웨어와 하나 이상의 서브 펌웨어 버전 정보를 포함하여 FOTA 서 버 접속횟수를 줄이면서 FOTA 를 수행할 수 있다. 음성인식보드나 사물인식보드, 인공지능 보드 등을 포함하는 펌웨어 디바이스가 FOTA를 진행하는 과정에서 서브 펌웨어 크기에 비례하여 메모리를 사용할 수 있다. 그리고 펌웨어를 비교적 크기가 작은 서브 펌웨어파일들 (2~n개)의 모음으로 구성하여 특정 서브 펌웨어, 즉 펌웨어의 일부분만을 FOTA로 업그레이드 하는 경우 전체 펌 웨어를 한번에 FOTA하는 과정과 비교할 때, FOTA를 진행하는 과정에서 사용되는 메모리 크기를 최소화 할 수 있 다. 즉, 서브 펌웨어에 FOTA업데이트를 수행함으로써 FOTA에 사용되는 메모리 크기를 최소화 할 수 있다. 본 발명의 실시예를 적용할 경우, 특정한 기능을 수행하는 펌웨어를 하나의 파일로 구성하는 경우 펌웨어의 크 기가 커져서 FOTA수행시 다운로드 시간이 길어지는 문제를 해결할 수 있다. 본 발명의 일 실시예에 의한 구성은 여러 개의 서브 펌웨어파일, 여러 개의 서브 펌웨어파일을 배포하는 하나 이상의 FOTA 서버, FOTA서버에서 배포되는 서브 펌웨어파일들과 펌웨어 디바이스에 탑재되어 있는 서브 펌웨어 들의 버전과 비교하는 부분 등을 포함한다. 또한, 각각의 서브 펌웨어 파일들은 상이한 FOTA 서버에서 배포할 수 있다. 또는 각각의 서브 펌웨어 파일들은 동일한 FOTA 서버에서 배포할 수 있다. 앞서 펌웨어 디바이스는 M2M 장치일 수도 있고 비M2M 장치일 수 있다. M2M 장치인 경우 펌웨어 디바이스는 FOTA 서버에 직접 접속하여 서브 펌웨어를 다운로드 받을 수 있다. 다른 실시예로 펌웨어 디바이스가 비M2M 장치인 경우, 다른 M2M 장치를 경유하여 서브 펌웨어를 다운로드 받을 수 있다. 또한, 일반적인 전자제품이 M2M 장치와 연결하고, M2M 장치는 해당 장치에 적합한 펌웨어를 저장하여 해당 장치 와 연계되어 동작할 수 있다. 예를 들어, 일반적인 전자제품은 음성 인식 혹은 음성 안내 기능을 제공하지 않고, M2M 장치가 대신 해당 기능을 제공할 수 있다. 이 경우, M2M 장치는 다수의 전자제품들과 연결될 수 있으 며, 연결된 전자제품에 적합한 음성인식 혹은 음성 안내 기능을 제공하기 위해 펌웨어를 저장할 수 있다. 그리 고 M2M 장치는 펌웨어의 버전을 확인하여 복합 서브 펌웨어를 다운로드 한 후 펌웨어를 업데이트 또는 업그레이 드를 수행할 수 있다. 그러나 전술한 서브 펌웨어를 포함하는 복합 서브 펌웨어 다운로드는 M2M 모듈 상에서 동작할 수도 있고 M2M 모 듈과 독립적으로 동작할 수 있으며, 본 발명은 다양하게 적용될 수 있다. 이하, M2M 모듈에서 동작하는 FOTA 시스템에서의 본 발명의 실시예를 살펴본다. 도 7은 본 발명의 일 실시예에 의한 M2M 모듈에 기반한 FOTA 과정을 보여주는 도면이다. 펌웨어 또는 M2M 장치의 비활성 데이터는 버전을 할당한다. 비활성 데이터는 음성 안내 과정에서 적용되는 데이 터를 의미하며, 펌웨어의 일 실시예이다. 펌웨어 디바이스가 M2M 모듈을 포함할 경우, 도 1의 통신부는 M2M 모듈의 통신부에 포함될 수 있다. 마찬가지로 도 1의 제어부는 M2M 모듈의 제어부에 포함될 수 있다. 비활성 데이터의 버전은 전술한 바와 같이 펌웨어 전체 버전을 일 실시예로 한다. 또한 비활성 데이터의 버전은 펌웨어 중 서브 펌웨어 들의 버전을 일 실시예로 한다. 비활성 데이터가 다수의 서브 펌웨어로 구성된 경우, 각 각의 서브 펌웨어의 버전에 기반하여 펌웨어 업데이트 여부를 결정할 수 있다. 다수의 전자기기들(50a, 50b, 50c)은 M2M 모듈 또는 M2M 모듈을 포함하는 M2M 장치에 접속한다(S41). M2M 장치는 M2M 모듈 외에 M2M과 무관한 구성 요소를 포함할 수 있다. 이하 M2M 장치 내의 M2M 모듈들의 구성들을 중심으로 설명한다. 다수의 전자기기들 중에 어느 하나에 M2M 모듈이 포함될 경우, 해당 전자기기는 M2M 장치가 되며 다른 전자기기들이 접속할 수 있다. 다수의 전자기기들(50a, 50b, 50c)의 접속은 M2M 장치 또는 M2M 모듈의 디바이스 연결부를 통해 이루어진 다. 예를 들어 제1전자기기(50a)가 M2M 장치의 디바이스 연결부에 접속할 수 있다. 연결 후 M2M 장치는 저장소에 저장된 비활성 데이터를 확인한다. 이때, M2M 모듈의 디바이스 연결부 에 연결된 제1전자기기(50a)가 전달한 소정의 정보 또는 특정한 값에 따라, M2M 장치는 사용자에게 최신의 음성 안내 멘트를 제공할 수 있다. 제1전자기기(50a)가 제공하는 정보 또는 값은 기기의 식별 정보 혹은 기기가 출력하고자 하는 음성안내 멘트에 대한 식별 정보 또는 그외 음성 안내 멘트를 출력하는데 필요한 정보 등을 포함한다. 이 과정에서 저장소에 저장된 비활성 데이터의 버전이 최신인지 M2M 장치는 FOTA 서버에 접속하여 버 전을 확인하여(S42) 최신 버전을 다운로드 받을 수 있다. 이 과정에서 M2M 장치는 앞서 비활성 데이터가 다수의 서브 펌웨어로 구성되고 서브 펌웨어를 하나 이상 포함하며, 서브 펌웨어의 버전 정보를 하나 이상 포함 하는 복합 서브 펌웨어를 다운로드 받을 수 있다. 한번 다운로드 받은 비활성 데이터는 다른 전자기기와 공용인 경우 공통으로 사용할 수 있다. 즉, 다수의 전자기기(50a, 50b, 50c)가 동일한 음성 안내 기능을 제공할 경우, 제1전자기기(50a)가 접속을 수행 하여 음성 안내에 필요한 비활성 데이터가 최신으로 업데이트/업그레이드 된 경우, 제2전자기기(50b)가 추후 M2M 장치에 연결할 경우, 이미 비활성 데이터가 업데이트된 이후이므로, 별도의 업데이트 과정 없이 최신 의 음성 아내 멘트를 제공할 수 있다. 또한, 비활성 데이터에는 각 전자기기들 또는 M2M 장치가 접속해야 하는 최신의 음성인식 서버 주소를 저장할 수 있으므로, 최신의 기술 및 최신 비활성 데이터가 저장된 서버로의 전환이 가능하다. 한편, 본 발명의 일 실시예에 따르면, 비활성 데이터를 구성하는 서브 펌웨어 별로 접속해야 하는 서버 주소가 상이할 수 있다. 도 7의 프로세스 과정을 정리하면 다음과 같다. 전자기기들(50a, 50b, 50c)의 연결 이벤트에 따라, 음성 안내를 요청하는 음성안내 이벤트가 발생한다(S41). 그리고 최신 비활성 데이터인지 여부를 FOTA 서버에 확인하는 과정 을 선택적으로 수행한다(S42). 만약 비활성 데이터의 업데이트/업그레이드가 발생한 후 미리 설정된 시간(예를 들어 6시간, 12시간 등)이 지나지 않은 경우에는 M2M 장치는 버전 체크 과정을 생략할 수 있다. 그리고 저장소 처리부는 저장소에 저장된 음원 및 설정 데이터를 확인한다. 즉, S41에서 요청된 음성 안내 이벤트에 해당하는 음원을 매핑 테이블에서 확인한다(S45). 그리고 확인한 음원을 재생함으로써 사용자에 게 음성 안내를 수행할 수 있다(S46). 도 7의 구성에 기반할 경우, 음성인식 응용프로그램에서 FOTA시스템을 이용하여 최신의 음성 안내 멘트를 제공 할 수 있다. 즉, 전자기기들(50a, 50b, 50c)의 전원이 켜지는 순간 제품 연결 이벤트를 수행하고(S41), 인터넷 과 연결이 가능한 상태에서, FOTA 서버에 최신 비활성 데이터(변동부)가 있는지 확인 후(S42), 서버에 최신 비 활성 데이터가 있으면 최신 데이터로 변경을 한다. 그리고 변경한 최신 비활성 데이터에 기반하여 음성 안내 멘 트를 제공할 수 있다. 도 8은 본 발명의 일 실시예에 의한 서버의 최신 데이터 확인 및 이에 따라 음성 멘트를 재생하는 과정을 보여 주는 도면이다. 전자기기가 M2M 장치와 연결을 수행한다(S61). 음성 안내 이벤트를 전송할 수 있다. M2M 장치는 인터넷에 연결 중인지 확인한다(S62). 연결 중이지 않거나 연결이 불가능한 경우, 바로 S65 단계로 진행하여 저장소에 최 신 정보의 존재 유무를 확인한 후(S65) 저장된 기본 혹은 최신 정보를 이용하여 안내 멘트 및 에러 멘트를 재생 한다(S66, S67). 또는 앞서 비활성 데이터를 교체하거나 다운 받은 이후 일정 시간 이내인 경우(예를 들어 6시 간, 24시간 등 업데이트 주기에 따라 다양하게 설정) 별도의 인터넷 연결 시도나 확인 없이 바로 S67 단계를 수 행할 수 있다. 한편 인터넷에 연결 중인 경우, M2M 장치는 WIFI 연결 또는 그 외 통신 연결을 수행하여 FOTA 서버와 통신 이 가능한 상태가 되면 S63 단계를 수행한다. 즉, M2M 장치는 FOTA 서버에 저장된 정보가 최신인지 확인한 다. 이때, 펌웨어 전체, 즉 비활성 데이터 전체를 기준으로 버전을 확인할 수 있고, 또는 서브 펌웨어 별로 버 전을 확인할 수 있다. M2M 장치는 응용 프로그램의 버전과 비활성 데이터(변동부)의 버전을 확인할 수 있 다. 그 결과 FOTA 서버의 정보가 최신인 경우, M2M 장치는 저장소에 서버로부터 내려받은 정보를 저장한 다(S64). 이때, 다운로드 방식으로 M2M 장치는 앞서 살펴본 바와 같이, 펌웨어 전체를 다운로드 하는 방식, 펌웨어를 서브 펌웨어로 나누어 서브 펌웨어 별로 다운로드 하는 방식 중 어느 하나의 방식을 적용할 수 있다. 또한, 서브 펌웨어 별로 다운로드 할 경우, M2M 장치는 복합서브 펌웨어를 다운로드 받을 수 있다. 또한, 서브 펌웨어 별로 버전 정보를 확인하고 필요한 서브 펌웨어만을 다운로드 받을 수 있다. 한편, FOTA 서버의 정보가 최신이 아닌 경우, 저장소에 정보가 존재하는지를 확인한다(S65). 확인 결 과 정보가 있을 경우, M2M 장치는 저장소에 있는 최신 정보를 이용하여 안내 멘트와 에러 멘트를 재생한다 (S66). 한편, 저장소에 정보가 존재하지 않을 경우, 기본 정보를 이용하여 안내 멘트와 에러 멘트를 재생한다 (S67). 도 8의 과정을 정리하면 다음과 같다. M2M 장치는 FOTA 서버에서 비활성 데이터를 업데이트/업그레이 드 하고자 하는 키로 비활성 데이터의 버전 또는 M2M 장치의 M2M 모듈에 탑재되어 있는 응용프로그램의 버 전을 적용할 수 있다. 그리고 M2M 장치는 어플리케이션 버전과 비활성데이터의 버전에 따라 최신 음성 안 내 데이터 및 설정데이터를 제공한다. 전술한 실시예를 적용할 경우 음성 인식에 필요한 비활성 데이터(변동부)만 지원하면 되므로, 장비에 따른 M2M 모듈의 바이너리가 필요하지 않다. 또한 기존 응용 프로그램들은 FOTA 방식과 대비하여 비활성데이터(변동부) FOTA만 진행하면 되므로, FOTA시 소요되는 시간이 짧다. 특히, 하나의 M2M 모듈용 바이너리를 이용하여 여러 종 류의 장치를 지원 가능하므로 효율적이다. 전술한 실시예를 살펴보면, M2M 모듈에 탑재되어 있는 응용프로그램의 버전과 비활성 데이터 버전을 이용하여 서버의 정보를 확인할 수 있다. 또한, 통신부의 연결이 되지 않은 M2M모듈은 이전에 저장한 비활성 데이터를 이 용하여 장치의 이벤트에 따라 동작할 수 있다. 또한, M2M 모듈을 포함하는 M2M 장치가 비활성 데이터를 업데이트 또는 업그레이드함에 있어서 적용하는 키는 비활성 데이터의 버전 또는 상기 M2M 모듈에 탑재된 응용 프로그램의 버전 중 어느 하나 이상을 포함할 수 있다. 즉, M2M 장치는 비활성 데이터를 업데이트 또는 업그레이드 등의 교체 작업을 수행할 것인지 여부를 판단 하기 위해 비활성 데이터의 버전을 이용할 수 있다. 이 때, 비활성 데이터의 버전이 FOTA 서버에 저장된 비활성 데이터의 버전 보다 낮을 경우 업데이트 또는 업그레이드를 위해 M2M 장치가 FOTA 서버로부터 비활성 데이터를 다운로드 할 수 있다. 마찬가지로, M2M 장치는 M2M 모듈에 탑재된 응용 프로그램의 버전을 기준으로 비활성 데이터의 업데이트 여부를 판단할 수 있다. 예를 들어, M2M 모듈에 탑재된 응용 프로그램의 버전이 FOTA 서버에 저장된 비활성 데이 터의 동작 혹은 실행과 관련된 응용 프로그램의 버전 보다 낮을 경우 업데이트 또는 업그레이드를 위해 M2M 장 치가 FOTA 서버로부터 비활성 데이터를 다운로드 할 수 있다. 물론, 이 과정에서 M2M 장치는 응용 프로그램에 해당하는 펌웨어를 FOTA 서버로부터 펌웨어 다운로드하여 응용 프로그램의 업그레이드 또는 업데이트를 수행할 수 있다. 도 7 및 도 8의 비활성 데이터는 하나 이상의 서브 펌웨어로 구성된 펌웨어인 것을 일 실시예로 한다. 그리고 다운로드 혹은 업데이트 과정에서 서브 펌웨어 별로 수행할 수 있으며, 이때 복합서브 펌웨어를 다운받을 수 있다. 한편, 서브 펌웨어의 개별 버전이 서로 연관성을 가지고 동작하는 경우, M2M 장치 또는 펌웨어 디바이스 등은 서브 펌웨어의 연관성을 반영하여 교체할 수 있다. 도 7 및 도 8을 살펴보면, M2M 장치는 M2M 모듈을 더 포함하며, M2M 모듈의 디바이스 연결부는 다른 장치들(다 른 전자제품들)이 접속을 수행한다. 그리고, 상기 디바이스 연결부에 제1장치가 통신 연결을 수행하면, 상기 M2M 모듈의 제어부는 제1서버와의 통신 연결을 확인하며(S62), 제1서버와 통신 연결을 수행한 후, 제1서버에 저장된 서브 펌웨어 또는 펌웨어가 최신 버전인 경우, 제1서버로부터 복합 서브 펌웨어를 수신한다(S63~S64). 이후, 상기 복합 서브 펌웨어에 포함된 제 2버전의 제1서브 펌웨어를 이용하여 제1장치가 요청한 기능을 수행한다(S66). 한편, 제1서버와 통신 연결 없이 미리 저장된 상기 제1버전의 제1서브 펌웨어를 이용하여 제1장치가 요청한 기 능을 수행할 수도 있다. 이는 M2M 장치가 이전에 서브 펌웨어를 교체한 시점이 얼마 지나지 않은 경우, 빠른 수 행 시간을 위해 별도의 통신 연결 없이 제1버전의 제1서브 펌웨어를 이용하여 안내 멘트나 에러 멘트를 재생하 는 것을 일 실시예로 한다. 도 9는 본 발명의 일 실시예에 의한 연관성을 가지는 서브 펌웨어의 순차 교체의 실시예를 보여주는 도면이다. 도 2의 음성인식에 관한 서브 펌웨어의 예시를 기준으로 살펴본다. 하나의 펌웨어(200e)는 3 개의 서브 펌웨어(210v, 220c, 230d)로 구성된다. 각 서브 펌웨어의 버전은 표시한 바 와 같다. 여기서 각각의 서브 펌웨어들이 다른 서브 펌웨어들과 상호 연관하는 경우가 아니라면 각 서브 펌웨어 별로 최 신으로 교체를 수행할 수 있다. 반면, 어느 한 서브 펌웨어와 다른 서브 펌웨어가 서로 연관성을 가질 경우 서 브 펌웨어의 교체는 연관성에 따라 적용할 수 있다. 연관성이란 예를 들어 데이터를 의존하거나 라이브러리 등 을 의존하는 등의 경우를 일 실시예로 한다. 도 9에서 음성인식 서브 펌웨어와 관련하여 FOTA 서버에서 확인한 버전 3인 것이 최신이라 펌웨어 디바이스가 음성인식 서브 펌웨어(v3, 210v1)을 다운로드 받은 상태를 가정한다. 그런데 음성인식 서브 펌웨어(v3, 210v1) 는 운영체제 서브 펌웨어 v1.3과 연관성을 가진다. 따라서, 펌웨어 디바이스는 운영체제 서브 펌웨어 v1.3을 다 운로드 하기 전까지는 음성인식 서브 펌웨어를 교체하지 않고 최신 파일을 저장한 상태를 유지한다. 이후, 펌웨어 디바이스가 운영체제 서브 펌웨어 v1.3를 다운로드 한 경우, 음성인식 서브 펌웨어와 운영체제 서 브 펌웨어를 동시에 교체하여 펌웨어(200f)는 최신의 음성인식 서브 펌웨어(v3, 210v1)와 최신의 운영체제 서브 펌웨어(v1.3, 220c1)을 포함하며 동작할 수 있다. 정리하면, 복합 서브 펌웨어의 제2버전의 제1서브 펌웨어(도 9의 음성인식 v3)가 제2버전의 제2서브 펌웨어(도 9의 운영체제 v1.3)와 연관성을 가지고 동작하는 경우, 제2버전의 제2서브 펌웨어 또는 제2버전의 제2서브 펌웨 어를 포함하는 복합 서브 펌웨어를 수신하기 전까지 제2버전의 제1서브 펌웨어(도 9의 음성인식 v3)를 저장한 상태에서 상기 제1버전의 제1서브 펌웨어(도 9의 음성인식 v2.5)를 펌웨어 내에 유지한다. 그리고 펌웨어 디바 이스는 제2버전의 제2서브 펌웨어(도 9의 운영체제 v1.3)를 다운로드하면 그때 제2버전의 제2서브 펌웨어(도 9 의 운영체제 v1.3) 및 제2버전의 제2서브 펌웨어(도 9의 운영체제 v1.3)가 펌웨어(200f)에 포함되도록 각각의 서브 펌웨어를 교체할 수 있다. 또한, 펌웨어 디바이스는 새로운 버전의 제1서브 펌웨어와 연관성이 있는 제2서브 펌웨어를 다른 제3서브 펌웨 어보다 먼저 다운로드 받을 수 있다. 이는 펌웨어를 최신 버전으로 유지하기 위한 일 실시예이다. 전술한 펌웨어 및 M2M 모듈은 각 전자 제품에 구현된 저장용량 등에 따라 다양하게 구현될 수 있다. 예를 들어, 저장용량이 부족한 전자제품은 다른 M2M 장치를 경유하여 펌웨어를 업데이트하거나 혹은 펌웨어의 기능을 사용 할 수 있다. 이 경우, 전자제품은 다른 M2M 장치에게 특정 앱에 대한 버전 정보를 전송하거나 혹은 기능에 대한 식별 정보를 전송할 수 있다. 특정한 기능을 수행하는 펌웨어, 예를 들어, 음성인식펌웨어를 하나의 펌웨어로 구성할 경우 펌웨어 파일이 커 지므로 FOTA를 수행하는 과정에서 펌웨어 파일을 다운로드받는데 소요되는 시간이 길어진다. 뿐만 아니라 FOTA 동작에 필요한 메모리의 크기도 커지며 이로 인해 제품의 생산 비용이 상승하는 문제가 있다. 본 발명의 실시예들은 전체 펌웨어를 크기가 큰 하나의 파일이 아닌 여러 개의 작은 부분들인 서브 펌웨어들로 구성하여 FOTA로 업그레이드가 필요한 특정 서브 펌웨어만을 선택적으로 FOTA 업그레이드 함으로써 FOTA 에 소 요 되는 시간과 메모리 용량을 최소화한다. 그 결과 메모리 용량의 축소에 따라 제품의 비용을 낮추는 효과가 있다. 따라서, 본 발명의 실시예를 적용할 경우, 특정한 기능을 제공하는 펌웨어, 예를 들어 음성인식, 음성 안내, 혹 은 사물 인식 등을 위한 모듈을 FOTA 방법으로 업데이트하는 과정에서, 펌웨어를 애플리케이션(application), 운영체제, 드라이버순 으로 나눈 후 각 파트 별로 순서대로 혹은 중요도에 따라 버전을 비교하여 업데이트할 수 있다. 이에 따라 업데이트나 업그레이드 등에 필요한 파일의 용량을 줄이고 업데이트시간을 줄일 수 있다. 본 발명의 실시예를 구성하는 모든 구성 요소들이 하나로 결합되거나 결합되어 동작하는 것으로 설명되었다고 해서, 본 발명이 반드시 이러한 실시예에 한정되는 것은 아니며, 본 발명의 목적 범위 내에서 모든 구성 요소들 이 하나 이상으로 선택적으로 결합하여 동작할 수도 있다. 또한, 그 모든 구성 요소들이 각각 하나의 독립적인 하드웨어로 구현될 수 있지만, 각 구성 요소들의 그 일부 또는 전부가 선택적으로 조합되어 하나 또는 복수 개 의 하드웨어에서 조합된 일부 또는 전부의 기능을 수행하는 프로그램 모듈을 갖는 컴퓨터 프로그램으로서 구현 될 수도 있다. 그 컴퓨터 프로그램을 구성하는 코드들 및 코드 세그먼트들은 본 발명의 기술 분야의 당업자에 의해 용이하게 추론될 수 있을 것이다. 이러한 컴퓨터 프로그램은 컴퓨터가 읽을 수 있는 저장매체(Computer Readable Media)에 저장되어 컴퓨터에 의하여 읽혀지고 실행됨으로써, 본 발명의 실시예를 구현할 수 있다. 컴 퓨터 프로그램의 저장매체로서는 자기 기록매체, 광 기록매체, 반도체 기록소자를 포함하는 저장매체를 포함한 다. 또한 본 발명의 실시예를 구현하는 컴퓨터 프로그램은 외부의 장치를 통하여 실시간으로 전송되는 프로그램 모듈을 포함한다. 이상에서는 본 발명의 실시예를 중심으로 설명하였지만, 통상의 기술자의 수준에서 다양한 변경이나 변형을 가 할 수 있다. 따라서, 이러한 변경과 변형이 본 발명의 범위를 벗어나지 않는 한 본 발명의 범주 내에 포함되는 것으로 이해할 수 있을 것이다."}
{"patent_id": "10-2020-0162028", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 의한 펌웨어가 다수의 서브 펌웨어로 구분되는 예시를 보여주는 도면이다. 도 2는 본 발명의 일 실시예에 의한 음성 인식 펌웨어가 다수의 서브 펌웨어로 구분되어 교체되는 과정을 보여 주는 도면이다. 도 3은 본 발명의 일 실시예에 의한 서브 펌웨어를 교체하는 과정을 보여주는 도면이다. 도 4는 본 발명의 일 실시예에 의한 음성인식을 수행하는 펌웨어 디바이스에서의 펌웨어 또는 서브 펌웨어 교체 과정을 보여주는 도면이다. 도 5는 본 발명의 일 실시예에 의한 복합 서브 펌웨어의 구성을 보여주는 도면이다. 도 6은 본 발명의 일 실시예에 의한 음성 인식 기능을 포함하는 펌웨어 디바이스가 펌웨어를 교체하는 과정을 보여주는 도면이다. 도 7은 본 발명의 일 실시예에 의한 M2M 모듈에 기반한 FOTA 과정을 보여주는 도면이다. 도 8은 본 발명의 일 실시예에 의한 서버의 최신 데이터 확인 및 이에 따라 음성 멘트를 재생하는 과정을 보여 주는 도면이다. 도 9는 본 발명의 일 실시예에 의한 연관성을 가지는 서브 펌웨어의 순차 교체의 실시예를 보여주는 도면이다."}
