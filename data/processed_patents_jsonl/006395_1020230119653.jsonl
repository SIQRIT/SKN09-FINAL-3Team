{"patent_id": "10-2023-0119653", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0135023", "출원번호": "10-2023-0119653", "발명의 명칭": "인공지능을 사용하여 데이터베이스 파라미터를 최적화하기 위한 컴퓨터화된 시스템 및 방법", "출원인": "쿠팡 주식회사", "발명자": "동, 빈"}}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "AI-기반 데이터베이스 파라미터 최적화를 위한 컴퓨터-구현된 방법에 있어서, 어플리케이션에 복수의 질의 중 적어도 하나의 질의를 제출하는 단계;상기 적어도 하나의 제출된 질의에 기반하여 튜닝 요청을 생성하는 단계;상기 적어도 하나의 제출된 질의를 전처리하는 단계;상기 적어도 하나의 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측된 변화를 계산하기 위한 제1 기계학습 모델 및 상기 제1 기계 학습 모델에 기반하여 최적 파라미터의 벡터를 계산하기 위한 제2 기계 학습 모델을 이용하여, 상기 적어도 하나의 질의를 실행하기 위한 복수의 최적 파라미터를 예측하는 단계;상기 어플리케이션에 상기 예측된 최적 파라미터를 푸시(push)하는 단계; 및상기 예측된 최적 파라미터에 기반하여 상기 적어도 하나의 질의를 실행하는 단계를 포함하는, 컴퓨터-구현된방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 적어도 하나의 제출된 질의를 전처리하는 단계는 상기 적어도 하나의 제출된 질의를 피처화하는 것을 더포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 적어도 하나의 제출된 질의와 연관된 클라이언트 세션 컨텍스트에 기반하여 상기 복수의 최적 파라미터를커스터마이징하는 단계를 더 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 클라이언트 세션 컨텍스트는, 상기 적어도 하나의 제출된 질의의 패턴 또는 리턴될 데이터의 예측된 크기중 적어도 하나를 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 복수의 최적 파라미터는, 클라이언트 세션 데이터 베이스 파라미터, 클라이언트 세션 연결 풀 파라미터,또는 클라이언트 세션 작업 부하 균형 파라미터 중 적어도 하나를 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 제1 기계 학습 모델 및 상기 제2 기계 학습 모델을 훈련시키는 단계를 더 포함하고,상기 훈련시키는 단계는,훈련 데이터를 검색하는 단계; 훈련 목표를 정의하는 단계; 공개특허 10-2023-0135023-3-상기 훈련 데이터를 사용하여 상기 제1 기계 학습 모델을 실행하는 단계;상기 훈련 데이터를 사용하여 상기 제2 기계 학습 모델을 실행하는 단계; 및상기 제1 기계 학습 모델 및 상기 제2 기계 학습 모델이 상기 훈련 목표를 출력할 때까지 상기 제1 기계 학습모델의 네트워크 가중치 및 상기 제2 기계 학습 모델의 네트워크 가중치를 반복하여 업데이트하는 단계를 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 데이터 분배 변화를 최적화하기 위하여 데이터 파티션화 파라미터를 최적화하는 단계를 더 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 실행하는 단계는 클라이언트 세션 컨텍스트에 특수한 최적 파라미터를 사용하는 단계를 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 실행된 적어도 하나의 질의와 연관된 성능 점수를 계산하는 단계를 더 포함하는, 컴퓨터-구현된 방법."}
{"patent_id": "10-2023-0119653", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "AI-기반 데이터베이스 파라미터 최적화를 위한 컴퓨터-구현된 시스템에 있어서, 하나 이상의 프로세서; 및상기 하나 이상의 프로세서에 의해 실행될 때, 상기 하나 이상의 프로세서가 제1항 내지 제9항 중 어느 하나의동작을 수행하도록 구성하는 명령어를 저장하는 하나 이상의 메모리를 포함하는, 컴퓨터-구현된 시스템."}
{"patent_id": "10-2023-0119653", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "AI-기반 데이터베이스 파라미터 최적화를 위한 시스템 및 방법이 제공된다. 하나의 방법은, 사용자 디바이스로부 터 질의를 수신하는 단계; 질의를 전처리하는 단계; 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측되는 변화를 계산하고, 데이터베이스 메트릭의 예측되는 변화를 튜너에 전송하고, 데이터베이스 메트릭의 예측되는 변 화 및 현재 데이터베이스 성능 메트릭에 기반하여 데이터베이스 성능 메트릭을 계산하고, 데이터베이스 성능 메 트릭에 기반하여 최적 파라미터의 벡터를 계산함으로써, 질의를 실행하기 위한 복수의 최적 파라미터를 예측하는 단계; 및 예측된 복수의 최적 파라미터에 기반하여 수신된 질의를 실행하는 단계를 포함한다."}
{"patent_id": "10-2023-0119653", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 일반적으로 인공 지능(AI)을 사용하여 데이터베이스 파라미터를 최적화하기 위한 컴퓨터화된 시스템 및 방법에 관한 것이다. 특히, 본 개시의 실시예들은 추천 제품 리스트를 생성하기 위한 모델을 생성함으로써 질의와 연관된 사용자 식별자 및 제품 식별자에 기반하여 사용자 인터페이스 요소를 자동으로 수정할 수 있는 진보적이고 색다른 시스템에 관한 것이다."}
{"patent_id": "10-2023-0119653", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "소비자들은 종종 컴퓨터 및 스마트 디바이스를 통해 온라인으로 다양한 아이템을 쇼핑(shop) 및 구매한다. 이러 한 온라인 쇼핑객들(shoppers)은 종종 다수의 제품을 검색(research), 평가, 및 구매하면서 매일 수백만 건의 질의를 제출한다. 또한, 매일 판매자에 의해 수백만 개의 제품이 온라인에 등록된다. 소비자 또는 판매자로부터 의 입력을 처리하도록 구성되지 않는 온라인 쇼핑 엔진들은 레이턴시(latency)를 증가시키고 작업 부하 균형 (workload balances)을 감소시킴으로써 사용자의 경험을 현저하게 저하시킬 수 있다. 온라인 쇼핑 엔진에 사용되는 데이터베이스는 종종 수백 개의 파라미터를 포함하며, 이는 데이터 집약적 어플리 케이션을 위한 파라미터 튜닝을 필요로 한다. 데이터베이스 파라미터는 통상적으로 질의 패턴보다는 데이터베이 스 작업 부하에 기반하여 최적화된다. 질의 수준에서의 파라미터 최적화가 존재한다고 하더라도, 이러한 방법은 모든 클라이언트 세션 및 질의에 기반한 글로벌 파라미터만을 튜닝한다. 데이터베이스는 또한, 데이터 서버 내 왜곡(skews)을 감소시키기 위해 최적의 작업 부하 균형 전략을 요구한다. 하지만, 일반적인 네트워크 부하 균형 기(network load balancers)는 종종 추가적인 동작 및 성능 비용을 요구하고, 서버 스레드 수와 같은 내부 시스템 메트릭은 인식하지 못한다. 따라서, 소비자가 온라인 쇼핑 중에 신속하게 제품을 찾고 구매할 수 있고 판매자가 그들의 판매용 제품을 신속 하게 등록할 수 있도록 데이터베이스 파라미터를 최적화하는 개선된 방법 및 시스템에 대한 필요성이 존재한다. 본 개시의 일 양태는 AI-기반 데이터베이스 파라미터 최적화를 위한 시스템에 관한 것이다. 시스템은 명령어를 저장하는 메모리와, 명령어를 실행하도록 구성되는 적어도 하나의 프로세서를 포함할 수 있다. 명령어는 사용자 디바이스로부터 질의를 수신하는 것; 질의를 전처리하는 것; 질의를 실행하기 위한 복수의 최적 파라미터를 예 측하되, 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측되는 변화를 계산하고; 데이터베이스 메트릭의 예측된 변화를 튜너로 전송하고; 데이터베이스 메트릭의 예측된 변화와 현재 데이터베이스 성능 메트릭에 기반 하여 데이터베이스 성능 메트릭을 계산하고; 그리고 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡 터를 계산함으로써, 질의를 실행하기 위한 복수의 최적 파라미터를 예측하는 것; 및 예측된 복수의 최적 파라미 터에 기반하여 수신된 질의를 실행하는 것을 포함할 수 있다. 본 개시의 다른 양태는 AI-기반 데이터베이스 파라미터 최적화를 위한 방법에 관한 것이다. 방법은, 사용자 디 바이스로부터 질의를 수신하는 단계; 질의를 전처리하는 단계; 질의를 실행하기 위한 복수의 최적 파라미터를 예측하되, 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측되는 변화를 계산하고; 데이터베이스 메트릭의 예측된 변화를 튜너로 전송하고; 데이터베이스 메트릭의 예측된 변화와 현재 데이터베이스 성능 메트릭에 기반 하여 데이터베이스 성능 메트릭을 계산하고; 및 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산함으로써, 복수의 최적 파라미터를 예측하는 단계; 및 예측된 복수의 최적 파라미터에 기반하여 수신된 질 의를 실행하는 단계를 포함할 수 있다. 본 개시의 또 다른 양태는 AI-기반 데이터베이스 파라미터 최적화를 위한 시스템에 관한 것이다. 시스템은 명령 어를 저장하는 메모리와, 명령어를 실행하도록 구성되는 적어도 하나의 프로세서를 포함할 수 있다. 명령어는 사용자 디바이스로부터 질의를 수신하는 것; 질의를 전처리하는 것; 모델을 사용하여, 질의를 실행하기 위한 복 수의 최적 파라미터를 예측하되, 모델을 사용하여 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측되는 변화를 계산하고, 데이터베이스 메트릭의 예측된 변화를 튜너에 전송하고; 튜너를 사용하여 데이터베이스 메트 릭의 예측된 변화 및 현재 데이터베이스 성능 메트릭에 기반하여 데이터베이스 성능 메트릭을 계산하고; 및 모 델을 사용하여 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산함으로써, 질의를 실행하기 위한 복수의 최적 파라미터를 예측하는 것; 및 튜너를 사용하여 예측된 복수의 최적 파라미터에 기반하여 수신 된 질의를 실행하는 것을 포함할 수 있다. 명령어는, 튜너를 사용하여 실행되는 질의와 연관된 성능 점수를 계 산하는 것; 성능 점수를 모델에 전송하는 것; 및 성능 점수에 기반하여 모델의 네트워크 가중치(network weights)를 업데이트하는 것을 더 포함할 수 있다. 다른 시스템, 방법, 및 컴퓨터-판독 가능 매체 또한 본 명세서에서 논의된다."}
{"patent_id": "10-2023-0119653", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하의 상세한 설명은 첨부된 도면을 참조한다. 가능한 경우, 도면 및 이하의 설명에서는 동일한 또는 유사한 부품을 지칭하기 위해 동일한 도면 부호가 사용된다. 몇 개의 예시적인 실시예들이 본 명세서에서 설명되지만, 수정, 적응 및 다른 구현예들이 가능하다. 예를 들어, 도면에 도시되는 구성요소 및 단계들에 대하여 대체, 추 가 또는 수정이 이루어질 수 있으며, 본 명세서에서 설명되는 예시적인 방법들은 개시된 방법의 단계들을 대체, 재정렬(reordering), 제거, 또는 추가함으로써 수정될 수 있다. 따라서, 이하의 상세한 설명은 개시되는 실시예 및 예시들에 제한되지 않는다. 대신에, 본 발명의 적절한 범주는 첨부된 청구항에 의해 정의된다. 본 개시의 실시예들은 AI-기반 데이터베이스 파라미터 최적화를 위해 구성되는 시스템 및 방법에 관한 것이다. 개시된 실시예들은 접속 시간(connect time)에 사용자의 클라이언트 세션 변수(client session variables)를 초기화하여, 이로 인해 클라이언트 세션 컨텍스트(client session context)에 따라 예측된 최적 파라미터를 커 스터마이징(customizing)할 수 있다. 메트릭 저장 시스템(metrics repository system)은 질의를 피처화 (featurizing)함으로써 질의를 전처리할 수 있다. 일부 실시예에서, 모델 시스템은 모델을 사용하여 질의를 실 행하기 위한 복수의 최적 파라미터를 예측할 수 있다. 최적 파라미터는 클라이언트 세션 데이터베이스 파라미터 (client session database parameters), 클라이언트 세션 연결 풀 파라미터(client session connection pool parameters), 클라이언트 세션 작업 부하 균형 파라미터(client session workload balance parameters), 또는 데이터 파티션화 파라미터(data partitioning parameters) 중 적어도 하나를 포함할 수 있다. 일부 실시예에서, 모델 시스템은 모델을 사용하여, 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측되는 변화를 계산함으로써 최적 파라미터를 예측할 수 있다. 예를 들어, 모델 시스템은 질의 실행 이전으로부터 질의 실행 이후까지 데이터베이스 메트릭의 차이를 예측할 수 있다. 일부 실시예에서, 모델 시스템은 데이터베이스 메트릭의 예측된 변화를 튜너 시스템(tuner system)으로 전송할 수 있다. 튜너 시스템은 데이터베이스 메트릭의 예측된 변화 및 현재 데이터베이스 성능 메트릭에 기반하여 데이터베이스 성능 메트릭을 계산할 수 있다. 예를 들어, 튜너 시스템은 시스템으로부터 현재의 (예를 들어, 실시간) 데이터베이스 성능 메트릭을 검색 (retrieving)하고 데이터베이스 메트릭의 예측된 변화를 현재 데이터베이스 성능 메트릭에 가산(adding)함으로 써 데이터베이스 성능 메트릭을 계산할 수 있다. 일부 실시예에서, 모델 시스템은 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산하 고, 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산할 수 있다. 튜너 시스템은 최적 파라미터를 어플리케이션에 푸시(push)하고, 예측된 최적 파라미터에 기반하여 질의를 실행하여, 이로 인해 클 라이언트 세션에 특수한 최적 파라미터를 사용하여 질의를 실행하고 런타임 중에 클라이언트 세션 파라미터를 수정할 수 있다. 일부 실시예에서, 튜너 시스템은 실행된 질의와 연관된 성능 점수를 계산할 수 있다. 예를 들 어, 성능 점수는 실행된 질의로부터 기인하는 데이터베이스 성능 메트릭의 변화를 결정함으로써 계산될 수 있다. 일부 실시예에서, 튜너 시스템은 성능 점수를 모델 시스템으로 전송할 수 있고, 모델 시스템은 성능 점수 에 기반하여 모델의 네트워크 가중치를 업데이트할 수 있다. 도 1a를 참조하여, 운송, 수송 및 물류 작업을 가능하게 하는 통신을 위한 컴퓨터화된 시스템들을 포함하는 시 스템의 예시적인 실시예를 도시한 개략적인 블록도가 도시되어 있다. 도 1a에 도시된 바와 같이, 시스템 은 다양한 시스템들을 포함할 수 있고, 이들 시스템 각각은 하나 이상의 네트워크를 통해 서로 연결될 수 있다. 시스템들은 또한, 예를 들어, 케이블을 사용하여 직접 연결을 통해 서로 연결될 수 있다. 도시된 시스템 들은, 선적 권한 기술(shipment authority technology)(SAT) 시스템, 외부 프론트 엔드 시스템(external front end system), 내부 프론트 엔드 시스템(internal front end system), 수송 시스템 (transportation system), 모바일 디바이스(107A, 107B 및 107C), 판매자 포털, 선적 및 주문 추적 (shipment and order tracking)(SOT) 시스템, 풀필먼트 최적화(fulfillment optimization)(FO) 시스템 , 풀필먼트 메시징 게이트웨이(fulfillment messaging gateway)(FMG), 공급 체인 관리(supply chain management)(SCM) 시스템, 창고 관리 시스템(warehouse management system), 모바일 디바이스(119A, 119B 및 119C)(풀필먼트 센터(FC)의 내부에 있는 것으로 도시됨), 제3 자의 풀필먼트 시스템(121A, 121B및 121C), 풀필먼트 센터 인증 시스템(fulfillment center authorization system)(FC Auth) 및 노동 관리 시스템(labor management system)(LMS)을 포함한다. 일부 실시예에서, SAT 시스템은 주문 상태(order status) 및 배송 상태(delivery status)를 모니터링하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들어, SAT 시스템은 주문이 그 약속된 배송 날짜(Promised Delivery Date)(PDD)를 경과한 것인지 여부를 결정할 수 있고, 새로운 주문을 개시하는 것, 미배송의 주문의 아 이템들을 재운송하는 것, 미배송의 주문을 취소하는 것, 주문한 고객과의 연락(contact)을 개시하는 것 등을 포 함한 적절한 액션을 취할 수 있다. SAT 시스템은 또한, (특정 기간 동안 운송된 다수의 패키지와 같은) 출 력 및 (운송에 사용하기 위해 수신된 빈 판지 박스(empty cardboard boxes)의 수와 같은) 입력을 포함한 기타 데이터를 모니터링할 수 있다. SAT 시스템은 또한, 시스템에서 상이한 디바이스들 간의 게이트웨이로 서 동작하여, (예를 들어, 저장-및-전달(store-and-forward) 또는 다른 기술들을 사용하여) 외부 프론트 엔드 시스템 및 FO 시스템과 같은 디바이스들 사이의 통신을 가능하게 한다. 일부 실시예에서, 외부 프론트 엔드 시스템은 외부 사용자들이 시스템 내의 하나 이상의 시스템과 상 호 작용할 수 있게 하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들어, 시스템이 시스템들에 대한 프리 젠테이션을 가능하게 하여 사용자들이 아이템을 주문할 수 있게 하는 실시예들에서, 외부 프론트 엔드 시스템 은 검색 요청들을 수신하고, 아이템 페이지들을 제시하고, 결제 정보를 요구(solicit)하는 웹 서버로서 구 현될 수 있다. 예를 들어, 외부 프론트 엔드 시스템은 Apache HTTP 서버, 마이크로소프트 인터넷 정보 서 비스(Microsoft Internet Information Services)(IIS), NGINX 등과 같은 소프트웨어를 실행하는 컴퓨터 또는 컴퓨터들로서 구현될 수 있다. 다른 실시예들에서, 외부 프론트 엔드 시스템은 외부 디바이스들(예를 들어, 모바일 디바이스(102A) 또는 컴퓨터(102B))로부터 요청들을 수신하고 처리하도록 설계된 고객 웹 서버 소 프트웨어(custom web server software)를 실행하고, 이들 요청에 기반하여 데이터베이스들 및 기타 데이터 저장 소들로부터 정보를 획득하고, 획득된 정보에 기반하여 수신된 요청들에 대한 응답들을 제공할 수 있다. 일부 실시예에서, 외부 프론트 엔드 시스템은 웹 캐싱 시스템(web caching system), 데이터베이스, 검색 시스템 또는 지불 시스템 중 하나 이상을 포함할 수 있다. 일 양태에서, 외부 프론트 엔드 시스템은 이들 시스템 중 하나 이상을 포함할 수 있지만, 다른 양태에서, 외부 프론트 엔드 시스템은 이들 시스템 중 하 나 이상에 연결되는 인터페이스들(예를 들어, 서버-대-서버, 데이터베이스-대-데이터베이스, 또는 다른 네트워 크 연결들)을 포함할 수 있다. 도 1b, 도 1c, 도 1d 및 도 1e에 의해 도시된 단계들의 예시적인 세트는 외부 프론트 엔드 시스템의 일부 동작을 설명하는 데에 도움이 될 것이다. 외부 프론트 엔드 시스템은 프리젠테이션 및/또는 디스플레이를 위해 시스템 내의 시스템들 또는 디바이스들로부터 정보를 수신할 수 있다. 예를 들어, 외부 프론트 엔드 시스템은 검색 결과 페이지(SRP)(예를 들어, 도 1b), 단일 상세 페이지(SDP)(예를 들어, 도 1c), 카트 페 이지(예를 들어, 도 1d) 또는 주문 페이지(예를 들어, 도 1e)를 포함하여, 하나 이상의 웹 페이지를 호스팅하거 나 제공할 수 있다. 사용자 디바이스(예를 들어, 모바일 디바이스(102A) 또는 컴퓨터(102B)를 사용함)는, 외부 프론트 엔드 시스템을 탐색(navigate)하고, 검색 박스에 정보를 입력함으로써 검색을 요청할 수 있다. 외 부 프론트 엔드 시스템은 시스템 내의 하나 이상의 시스템으로부터 정보를 요청할 수 있다. 예를 들 어, 외부 프론트 엔드 시스템은 검색 요청을 만족시키는 FO 시스템으로부터 정보를 요청할 수 있다. 외부 프론트 엔드 시스템은 또한, 검색 결과에 포함된 각 제품에 대한 약속된 배송 날짜, 즉 \"PDD\"를 (FO 시스템으로부터) 요청 및 수신할 수 있다. 일부 실시예에서, PDD는, 특정 기간 내에 예를 들어 하루가 끝 날 때까지(오후 11시 59분) 주문된 경우에 제품을 포함하는 패키지가 사용자의 원하는 위치에 언제 도착하는지 에 대한 예측(estimate of when), 또는 제품이 사용자의 희망하는 위치에 배송될 것으로 약속된 날짜를 나타낼 수 있다. (PDD는 FO 시스템과 관련하여 아래에 더 논의된다.) 외부 프론트 엔드 시스템은 정보에 기반하여 SRP(예를 들어, 도 1b)를 준비할 수 있다. SRP는 검색 요청을 만족시키는 정보를 포함할 수 있다. 예를 들어, 이는 검색 요청을 만족시키는 제품들의 사진을 포함할 수 있다. SRP는 또한, 각 제품에 대한 각각의 가격, 또는 각 제품에 대한 향상된 배송 옵션, PDD, 무게, 크기, 제안 (offers), 할인 등에 관한 정보를 포함할 수 있다. 외부 프론트 엔드 시스템은 (예를 들어, 네트워크를 통 해) 요청측 사용자 디바이스(requesting user device)에 SRP를 전송할 수 있다. 그 후, 사용자 디바이스는, 예를 들어 사용자 인터페이스를 클릭(clicking) 또는 탭(tapping)하거나 다른 입력 디바이스를 사용함으로써, SRP 상에 제시된(represented) 제품을 선택하여, SRP로부터 제품을 선택할 수 있다. 사용자 디바이스는 선택된 제품에 관한 정보 요청을 공식화하여(formulate) 그것을 외부 프론트 엔드 시스템에 전송할 수 있다. 이에 응답하여, 외부 프론트 엔드 시스템은 선택된 제품과 관련된 정보를 요청할 수 있다. 예를 들어, 정보는 각각의 SRP 상에 제품에 대해 제시된 것 이외의 추가 정보를 포함할 수 있다. 이는, 예를 들어, 유통 기한(shelf life), 원산지(country of origin), 무게, 크기, 패키지 내 아이템의 수, 취급 안내(handling instructions) 또는 제품에 대한 기타 정보를 포함할 수 있다. 이 정보는 (예를 들어, 이 제품 및 적어도 하나의 다른 제품을 구매한 고객들에 대한 빅 데이터 및/또는 기계 학습 분석에 기반하여) 유사 한 제품들에 대한 추천, 자주 묻는 질문에 대한 답변, 고객으로부터의 리뷰, 제조자 정보, 사진 등을 포함할 수 있다. 외부 프론트 엔드 시스템은 수신된 제품 정보에 기반하여 SDP(단일 상세 페이지)(예를 들어, 도 1c)를 준 비할 수 있다. SDP는 또한 \"바로 구매하기(Buy Now)\" 버튼, \"카트에 추가하기(Add to Cart)\" 버튼, 수량 필드, 아이템의 사진 등과 같은 기타 대화형 요소들을 포함할 수 있다. SDP는 제품을 제안하는 판매자들의 목록을 더 포함할 수 있다. 목록은 각 판매자가 제안하는 가격에 기반하여, 최저 가격으로 제품을 판매하겠다고 제안한 판 매자가 가장 위(the top)에 나열될 수 있도록 순서화(ordered)될 수 있다. 목록은 또한, 최고 랭킹의 판매자 (highest ranked seller)가 맨 위에 나열될 수 있도록 판매자 랭킹에 기반하여 순서화될 수 있다. 판매자 랭킹 은, 예를 들어 약속된 PDD를 충족한 판매자의 과거 추적 기록을 포함한 다수의 인자에 기반하여 공식화될 수 있 다. 외부 프론트 엔드 시스템은 (예를 들어, 네트워크를 통해) 요청측 사용자 디바이스에 SDP를 전달할 수 있다. 요청측 사용자 디바이스는 제품 정보를 나열한 SDP를 수신할 수 있다. SDP를 수신하면, 사용자 디바이스는 SDP 와 상호 작용할 수 있다. 예를 들어, 요청측 사용자 디바이스의 사용자는 SDP 상의 \"카트에 담기(Place in Cart)\" 버튼을 클릭하거나 다른 방식으로 상호 작용할 수 있다. 이로써 그 제품이 사용자와 연관된 쇼핑 카트 (shopping cart)에 추가된다. 사용자 디바이스는 제품을 쇼핑 카트에 추가하라는 이러한 요청을 외부 프론트 엔 드 시스템에 송신할 수 있다. 외부 프론트 엔드 시스템은 카트 페이지(예를 들어, 도 1d)를 생성할 수 있다. 일부 실시예에서, 카트 페 이지는 사용자가 가상의 \"쇼핑 카트\"에 추가한 제품들을 나열한다. 사용자 디바이스는 SRP, SDP 또는 기타 페이 지 상의 아이콘을 클릭하거나 다른 방식으로 상호 작용함으로써 카트 페이지를 요청할 수 있다. 일부 실시예에 서, 카트 페이지는 사용자가 쇼핑 카트에 추가한 모든 제품을 나열할 뿐만 아니라, 각 제품의 수량, 각 제품의 아이템당 가격, 각 제품의 관련 수량에 기반한 가격, PDD에 관한 정보, 배송 방법, 운송비(shipping cost), 쇼 핑 카트 내의 제품들을 수정(예를 들어, 수량 삭제 또는 수정)하기 위한 사용자 인터페이스 요소들, 다른 제품 을 주문하거나 제품의 정기 배송(periodic delivery)을 설정하기 위한 옵션들, 이자 결제(interest payment)를 설정하기 위한 옵션들, 구매를 진행하기 위한 사용자 인터페이스 요소들 등과 같이 카트에 있는 제품들에 관한 정보를 나열할 수 있다. 사용자 디바이스에서 사용자는, 쇼핑 카트에서 제품의 구매를 개시하기 위해 사용자 인 터페이스 요소(예를 들어, \"바로 구매하기\"라고 적힌(read) 버튼)를 클릭하거나 다른 방식으로 상호 작용할 수 있다. 그렇게 하면, 사용자 디바이스는 구매를 개시하라는 이러한 요청을 외부 프론트 엔드 시스템에 송신 할 수 있다. 외부 프론트 엔드 시스템은 구매를 개시하라는 요청을 수신한 것에 응답하여 주문 페이지(예를 들어, 도 1e)를 생성할 수 있다. 일부 실시예에서, 주문 페이지는 쇼핑 카트로부터 아이템들을 재나열하고(re-list), 결 제 및 운송 정보의 입력을 요청한다. 예를 들어, 주문 페이지는, 쇼핑 카트에 있는 아이템들의 구매자에 관한 정보를 요청하는 섹션(예를 들어, 이름, 주소, 이메일 주소, 전화 번호), 받는 사람에 관한 정보(예를 들어, 이 름, 주소, 전화 번호, 배송 정보), 운송 정보(예를 들어, 배송 속도/방법 및/또는 픽업(pickup), 결제 정보(예 를 들어, 신용 카드, 은행 송금, 수표, 저장된 신용카드(stored credit)), (예를 들어, 세금 목적으로) 현금 영 수증을 요청하기 위한 사용자 인터페이스 요소 등을 포함할 수 있다. 외부 프론트 엔드 시스템은 주문 페 이지를 사용자 디바이스에 전송할 수 있다. 사용자 디바이스는, 주문 페이지 상에 정보를 입력하고, 정보를 외부 프론트 엔드 시스템에 전송하는 사용 자 인터페이스 요소를 클릭하거나 다른 방식으로 상호 작용할 수 있다. 거기서부터, 외부 프론트 엔드 시스템 은 정보를 시스템 내의 상이한 시스템들에 전송하여 쇼핑 카트에 있는 제품들을 갖는 새로운 주문의 생성 및 처리를 가능하게 할 수 있다. 일부 실시예에서, 외부 프론트 엔드 시스템은 판매자들이 주문들에 관한 정보를 송신하고 수신할 수 있도 록 더 구성될 수 있다. 일부 실시예에서, 내부 프론트 엔드 시스템은 내부 사용자들(예를 들어, 시스템을 소유, 운영 또는 임대하는 조직의 직원들)이 시스템 내의 하나 이상의 시스템과 상호 작용할 수 있게 하는 컴퓨터 시스템으 로서 구현될 수 있다. 예를 들어, 시스템이 사용자들이 아이템을 주문할 수 있게 하는 시스템들의 프리젠 테이션을 가능하게 하는 실시예들에서, 내부 프론트 엔드 시스템은 내부 사용자들이 주문들에 대한 진단 및 통계 정보를 보거나(view), 아이템 정보를 수정하거나, 주문들에 관한 통계를 검토(review)할 수 있게 하는 웹 서버로서 구현될 수 있다. 예를 들어, 내부 프론트 엔드 시스템은 Apache HTTP 서버, 마이크로소프트 인터넷 정보 서비스(IIS), NGINX 등과 같은 소프트웨어를 실행하는 컴퓨터 또는 컴퓨터들로서 구현될 수 있다. 다른 실시예들에서, 내부 프론트 엔드 시스템은 시스템에 도시된 시스템들 또는 디바이스들(도시되지 않은 다른 디바이스들뿐만 아니라)로부터 요청들을 수신하고 처리하도록 설계된 고객 웹 서버 소프트웨어를 실 행할 수 있고, 이들 요청에 기반하여 데이터베이스들 및 기타 데이터 저장소들로부터 정보를 획득하고, 획득된 정보에 기반하여 수신된 요청들에 대한 응답들을 제공할 수 있다. 일부 실시예에서, 내부 프론트 엔드 시스템은 웹 캐싱 시스템, 데이터베이스, 검색 시스템, 결제 시스템, 분석 시스템, 주문 모니터링 시스템 등 중 하나 이상을 포함할 수 있다. 일 양상에서, 내부 프론트 엔드 시스템 은 이들 시스템 중 하나 이상을 포함할 수 있고, 반면에 다른 양상에서, 내부 프론트 엔드 시스템은 이들 시스템 중 하나 이상에 연결된 인터페이스들(예를 들어, 서버-대-서버, 데이터베이스-대-데이터베이스, 또 는 다른 네트워크 연결들)을 포함할 수 있다. 일부 실시예에서, 수송 시스템은 시스템 내의 시스템들 또는 디바이스들과 모바일 디바이스(107A 내 지 107C) 사이의 통신을 가능하게 하는 컴퓨터 시스템으로서 구현될 수 있다. 일부 실시예에서, 수송 시스템 은 하나 이상의 모바일 디바이스(107A 내지 107C)(예를 들어, 모바일 폰, 스마트 폰, PDA 등)로부터 정보 를 수신할 수 있다. 예를 들어, 일부 실시예에서, 모바일 디바이스(107A 내지 107C)는 배송 작업자(delivery worker)들에 의해 운영되는 디바이스들을 포함할 수 있다. 정규직(permanent) 직원, 임시(temporary) 직원 또는 교대(shift) 직원일 수 있는 배송 작업자들은 모바일 디바이스(107A 내지 107C)를 활용하여 사용자들에 의해 주 문된 제품들을 포함하는 패키지들의 배송을 행할 수 있다. 예를 들어, 패키지를 배송하기 위해, 배송 작업자는 어느 패키지를 배송할 것인지와 그 패키지를 어디로 배송할 것인지를 나타내는 통지를 모바일 디바이스 상에 수 신할 수 있다. 배송 위치에 도착하면, 배송 작업자는 패키지를 (예를 들어, 트럭의 후면에, 혹은 패키지들의 상 자(crate)에) 위치시키거나, 모바일 디바이스를 사용하여 패키지 상의 식별자(identifier)(예를 들어, 바코드, 이미지, 텍스트 스트링(text string), RFID 태그 등)와 연관된 데이터를 스캔하거나 다른 방식으로 캡처하고, 패키지를 (예를 들어, 문 앞에 두거나, 경비원에게 맡겨 두거나, 받는 사람에게 건네주는 등으로써) 전달한다. 일부 실시예에서, 배송 작업자는 모바일 디바이스를 사용하여 패키지의 사진(들)을 캡처하고, 및/또는 서명을 얻을 수 있다. 모바일 디바이스는, 예를 들어, 시간, 날짜, GPS 위치, 사진(들), 배송 작업자와 관련된 식별자, 모바일 디바이스와 관련된 식별자 등을 포함하는 배송에 관한 정보를 포함하는 정보를 수송 시스템에 전송 할 수 있다. 수송 시스템은 시스템 내의 다른 시스템들에 의해 액세스되도록 이 정보를 데이터베이스 (도시되지 않음)에 저장할 수 있다. 일부 실시예에서, 수송 시스템은 이 정보를 사용하여 특정 패키지의 위치를 나타내는 추적 데이터를 준비하여 다른 시스템들에 전송할 수 있다. 일부 실시예에서, 특정 사용자들은 한 종류의 모바일 디바이스를 사용할 수 있으며(예를 들어, 정규직 작업자들 은 바코드 스캐너, 스타일러스 및 기타 디바이스들과 같은 맞춤형 하드웨어(custom hardware)를 갖는 전용 PDA(specialized PDA)를 사용할 수 있고), 반면에 다른 사용자들은 다른 종류의 모바일 디바이스들을 사용할 수 있다(예를 들어, 임시 또는 교대 작업자들은 기성품의(off-the-shelf) 모바일 폰 및/또는 스마트 폰을 활용할 수 있다). 일부 실시예에서, 수송 시스템은 사용자를 각 디바이스와 연관시킬 수 있다. 예를 들어, 수송 시스템(10 7)은, 사용자(예를 들어, 사용자 식별자, 직원 식별자 또는 전화 번호로 나타내어짐)와 모바일 디바이스(예를 들어, IMEI(International Mobile Equipment Identity), IMSI(International Mobile Subscription Identifier), 전화 번호, UUID(Universal Unique Identifier) 또는 GUID(Globally Unique Identifier)로 나타 내어짐) 사이의 연관성을 저장할 수 있다. 수송 시스템은, 무엇보다도, 작업자의 위치, 작업자의 효율성 또는 작업자의 속도를 결정하기 위해, 배송시 수신된 데이터와 함께 이 연관성을 사용하여 데이터베이스에 저장 된 데이터를 분석할 수 있다. 일부 실시예에서, 판매자 포털은, 판매자들 또는 다른 외부 개체들이 시스템 내의 하나 이상의 시스 템과 전자적으로 통신할 수 있게 하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들어, 판매자는, 판매자 포털 을 사용하여, 판매자가 시스템을 통해 판매하고 싶어하는 제품들에 대한 제품 정보, 주문 정보, 연락처 정보 등을 업로드하거나 제공하기 위해 컴퓨터 시스템(도시되지 않음)을 활용할 수 있다. 일부 실시예에서, 선적 및 주문 추적 시스템은, 고객들에 의해(예를 들어, 디바이스(102A 및 102B)를 사용 하는 사용자에 의해) 주문된 제품들을 포함하는 패키지들의 위치에 관한 정보를 수신하고, 저장하고, 전달하는 컴퓨터 시스템으로서 구현될 수 있다. 일부 실시예에서, 선적 및 주문 추적 시스템은, 고객들에 의해 주문 된 제품들을 포함하는 패키지들을 배송하는 운송 회사들에 의해 운영되는 웹 서버들(도시되지 않음)로부터, 정 보를 요청하거나 저장할 수 있다. 일부 실시예에서, 선적 및 주문 추적 시스템은 시스템 내에 도시된 시스템들로부터 정보를 요청하고 저장할 수 있다. 예를 들어, 선적 및 주문 추적 시스템은 수송 시스템으로부터 정보를 요청할 수 있 다. 위에서 논의된 바와 같이, 수송 시스템은, 하나 이상의 사용자(예를 들어, 배송 작업자) 또는 차량(예 를 들어, 배송 트럭)과 연관된 하나 이상의 모바일 디바이스(107A 내지 107C)(예를 들어, 모바일 폰, 스마트 폰, PDA 등)로부터 정보를 수신할 수 있다. 일부 실시예에서, 선적 및 주문 추적 시스템은 또한, 풀필먼트 센터(예를 들어, 풀필먼트 센터) 내부의 개별 제품의 위치를 결정하기 위해, 창고 관리 시스템(WMS) 으로부터 정보를 요청할 수 있다. 선적 및 주문 추적 시스템은, 수송 시스템 또는 WMS 중 하나 이상으로부터 데이터를 요청하고, 데이터를 처리하고, 요청 시 데이터를 디바이스(예를 들어, 사용자 디바이스 (102A 및 102B))에 제시할 수 있다. 일부 실시예에서, 풀필먼트 최적화(FO) 시스템은, 다른 시스템들(예를 들어, 외부 프론트 엔드 시스템 및/또는 선적 및 주문 추적 시스템)으로부터의 고객 주문들에 관한 정보를 저장하는 컴퓨터 시스템 으로서 구현될 수 있다. FO 시스템은 또한, 특정 아이템들이 어디에 보유되거나 저장되는지를 설명하는 정 보를 저장할 수 있다. 예를 들어, 특정 아이템들은 하나의 풀필먼트 센터에만 저장될 수 있고, 반면에 특정 다 른 아이템들은 다수의 풀필먼트 센터에 저장될 수 있다. 또 다른 실시예에서, 특정 풀필먼트 센터들은 특정 세 트의 아이템들(예를 들어, 신선 제품 또는 냉동 제품)만을 저장하도록 설계될 수 있다. FO 시스템은, 이 정보뿐만 아니라 관련 정보(예를 들어, 수량, 크기, 영수증의 날짜, 만료일 등)를 저장한다. FO 시스템은 또한, 각 제품의 대응하는PDD(promised delivery date)를 계산할 수 있다. 일부 실시예에서, PDD는 하나 이상의 인자에 기반할 수 있다. 예를 들어, FO 시스템은, 제품에 대한 과거 수요(예를 들어, 한 기간 동안 제품이 얼마나 자주 주문되었는지), 제품에 대한 예상 수요(다가오는 기간 동안 얼마나 많은 고객 들이 해당 제품을 주문할 것으로 예측되는지), 한 기간 동안 얼마나 많은 제품들이 주문되었는지를 나타내는 네 트워크-전역(network-wide) 과거 수요, 다가오는 기간 동안 얼마나 많은 제품들이 주문될 것인지 예상되는 것을 나타내는 네트워크-전역 예상 수요, 각 풀필먼트 센터에 저장되는 제품에 대한, 풀필먼트 센터가 각 제품 마다 저장하는 하나 이상의 카운트, 해당 제품에 대한 예상 주문 또는 현재 주문 등에 기반하여, 제품에 대한 PDD를 계산할 수 있다. 일부 실시예에서, FO 시스템은, 주기적으로(예를 들어, 시간마다) 각 제품에 대한 PDD를 결정하고, 이를 검색을 위해 데이터 베이스에 저장하거나, 다른 시스템들(예를 들어, 외부 프론트 엔드 시스템, SAT 시스 템, 선적 및 주문 추적 시스템)에 전송할 수 있다. 다른 실시예에서, FO 시스템은, 하나 이상의 시스템(예를 들어, 외부 프론트 엔드 시스템, SAT 시스템, 선적 및 주문 추적 시스템)으로부터 전자식 요청들(electronic requests)을 수신하고, 요구 시(on demand) PDD를 계산할 수 있다. 일부 실시예에서, 풀필먼트 메시징 게이트웨이(FMG)는, 시스템 내의 하나 이상의 시스템, 예를 들어, FO 시스템, 으로부터 하나의 포맷 또는 프로토콜로 요청 또는 응답을 수신하고, 요청 또는 응답을 다른 포 맷 또는 프로토콜로 변환하고, 변환된 포맷 또는 프로토콜로 요청 또는 응답을 다른 시스템, 예를 들어, WMS 또는 제3 자의 풀필먼트 시스템(121A, 121B 또는 121C), 에 전달하거나, 그 반대도 성립하는 컴퓨터 시스템으로서 구현될 수 있다. 일부 실시예에서, 공급 체인 관리(SCM) 시스템은 예측 기능들을 수행하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들어, SCM 시스템은, 예를 들어, 제품들에 대한 과거 수요, 제품에 대한 예상 수요, 네트워크- 전역 과거 수요, 네트워크-전역 예상 수요, 각 풀필먼트 센터에 저장되는 제품들의 수 (count), 각 제품에 대한 예상 주문 또는 현재 주문 등에 기반하여 특정 제품에 대한 수요 레벨(level of demand)을 예측할 수 있다. 모든 풀필먼트 센터에 걸쳐 각 제품에 대한 이 예측된 레벨 및 양에 응답하여, SCM 시스템은, 특정 제품에 대한 예측된 수요를 만족시키기에 충분한 수량을 구매하고 비축(stock)하기 위해서 하나 이상의 구매 주 문을 생성할 수 있다.일부 실시예에서, 창고 관리 시스템(WMS)은 작업 흐름을 모니터링하는 컴퓨터 시스템으로서 구현될 수 있 다. 예를 들어, WMS는 개별 이벤트(discrete events)를 나타내는 개별 디바이스(예를 들어, 디바이스(107A 내지 107C 또는 119A 내지 119C))로부터 이벤트 데이터를 수신할 수 있다. 예를 들어, WMS는 패키지를 스 캔하기 위해 이들 디바이스 중 하나의 사용을 나타내는 이벤트 데이터를 수신할 수 있다. 풀필먼트 센터 및 도 2에 관련하여 아래에 논의되는 바와 같이, 풀필먼트 프로세스 동안, 패키지 식별자(예를 들어, 바코드 또 는 RFID 태그 데이터)는 특정 단계에서 기계들(예를 들어, 자동화되거나 휴대형의 바코드 스캐너, RFID 판독기, 고속 카메라, 태블릿(119A), 모바일 디바이스/PDA(119B), 컴퓨터(119C) 등과 같은 디바이스)에 의해 스캐닝되거 나 판독될 수 있다. WMS는, 패키지 식별자, 시간, 날짜, 위치, 사용자 식별자 또는 기타 정보와 함께 대응 하는 데이터베이스(도시되지 않음)에 패키지 식별자의 스캔 또는 판독을 나타내는 각 이벤트를 저장할 수 있고, 이 정보를 다른 시스템(예를 들어, 선적 및 주문 추적 시스템)에 제공할 수 있다. 일부 실시예에서, WMS는 하나 이상의 디바이스(예를 들어, 디바이스(107A 내지 107C 또는 119A 내지 119C))를 시스템과 연관된 하나 이상의 사용자와 관련시킨 정보를 저장할 수 있다. 예를 들어, 일부 상황 에서, 사용자(예를 들어, 시간제 또는 전일제 직원)는, 사용자가 모바일 디바이스(예를 들어, 모바일 디바이스 는 스마트 폰임)를 소유한다는 점에서, 모바일 디바이스와 연관될 수 있다. 다른 상황에서, 사용자는, 사용자가 일시적으로 모바일 디바이스를 소유하고 있다(예를 들어, 사용자는 하루의 시작 시에 모바일 디바이스를 체크 아웃하고, 하루 동안 사용할 것이고, 하루가 끝나면 반환할 것이다)는 점에서, 모바일 디바이스와 연관될 수 있 다. 일부 실시예에서, WMS는 시스템과 연관된 각 사용자에 대한 작업 로그(work log)를 유지할 수 있다. 예를 들어, WMS는, 임의의 할당된 프로세스(예를 들어, 트럭 하역하기(unloading trucks), 픽 구역(pick zone)으로부터 아이템 픽킹하기, 리빈 월 작업(rebin wall work), 아이템 포장하기), 사용자 식별자, 위치(예를 들어, 풀필먼트 센터 내의 층 또는 구역), 직원에 의해 시스템을 통해 이동된 다수의 유닛(예를 들어, 피 킹된 아이템의 수, 포장된 아이템의 수), 디바이스(예를 들어, 디바이스(119A 내지 119C))와 관련된 식별자 등 을 포함하여, 각 직원과 연관된 정보를 저장할 수 있다. 일부 실시예에서, WMS는 디바이스(119A 내지 119C)상에서 운영되는 시간 기록 시스템(timekeeping system)과 같은 시간 기록 시스템으로부터 체크 인 및 체 크 아웃 정보를 수신할 수 있다. 일부 실시예에서, 제3 자의 풀필먼트(3PL) 시스템(121A 내지 121C)은 물류 및 제품의 제3자 제공자와 연관된 컴 퓨터 시스템을 나타낸다. 예를 들어, 일부 제품은 (도 2와 관련하여 후술되는 바와 같이) 풀필먼트 센터에 저장되지만, 다른 제품들은 장외(off-site)에 저장될 수 있거나, 요구 시 생산될 수 있거나, 달리 풀필먼트 센 터에 저장되어 사용 가능하지 않을 수 있다. 3PL 시스템(121A 내지 121C)은, (예를 들어, FMG를 통해) FO 시스템으로부터 주문을 수신하도록 구성될 수 있고, 제품 및/또는 서비스(예를 들어, 배송 또는 설치)를 고객들에게 직접 제공할 수 있다. 일부 실시예에서, 3PL 시스템(121A 내지 121C) 중 하나 이상은 시스 템의 일부일 수 있고, 반면에 다른 실시예들에서, 3PL 시스템(121A 내지 121C) 중 하나 이상은 시스템 외부에 있을 수 있다(예를 들어, 제3 자 제공자에 의해 소유되거나 운영된다). 일부 실시예에서, 풀필먼트 센터 인증 시스템(FC Auth)은 다양한 기능들을 갖는 컴퓨터 시스템으로서 구현 될 수 있다. 예를 들어, 일부 실시예에서, FC Auth은 시스템 내의 하나 이상의 다른 시스템에 대한 SSO(single-sign on) 서비스로서 작용할 수 있다. 예를 들어, FC Auth은 사용자가 내부 프론트 엔드 시스 템을 통해 로그인할 수 있게 하고, 사용자가 선적 및 주문 추적 시스템에서 리소스들에 액세스할 수 있는 유사한 권한들(privileges)을 가지고 있는 것으로 결정하고, 사용자가 제2 로그 인 프로세스(second log in process)를 필요로 하지 않고 이들 권한에 액세스할 수 있게 한다. 다른 실시예들에서, FC Auth은 사용 자들(예를 들어, 직원들)이 그들 자신을 특정 작업과 연관시킬 수 있게 한다. 예를 들어, 일부 직원은 전자 디 바이스(예를 들어, 디바이스(119A 내지 119C))를 갖지 않을 수 있고, 대신에 하루의 일과에서(during the course of a day), 풀필먼트 센터 내에서, 작업별로, 그리고 구역별로, 이동할 수 있다. FC Auth은 이들 직원이 어떤 작업을 행하고 있는지와, 그들이 하루 중 서로 다른 시각에 어느 구역에 있는지를 나타낼 수 있도록 구성될 수 있다. 일부 실시예에서, 노동 관리 시스템(LMS)은 직원들(전일제 및 시간제 직원들을 포함)에 대한 출근 및 초과 근무 정보(attendance and overtime information)를 저장하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들어, LMS는 FC Auth, WMS, 디바이스(119A 내지 119C), 수송 시스템 및/또는 디바이스 (107A 내지 107C)로부터 정보를 수신할 수 있다.도 1a에 도시된 특정 구성은 단지 예시이다. 예를 들어, 도 1a는 FO 시스템에 연결된 FC Auth 시스템 을 도시하지만, 모든 실시예들이 이 특정 구성을 요구하는 것은 아니다. 실제로, 일부 실시예에서, 시스템 내의 시스템들은, 인터넷, 인트라넷, WAN(Wide-Area Network), MAN(Metropolitan-Area Network), IEEE 802.11a/b/g/n 표준과 호환되는 무선 네트워크, 전용 회선(leased line) 등을 포함하는 하나 이상의 공개 또는 비공개 네트워크를 통해 서로 연결될 수 있다. 일부 실시예에서, 시스템 내의 시스템들 중 하나 이상은 데 이터 센터, 서버 팜(server farm) 등에 구현되는 하나 이상의 가상 서버로서 구현될 수 있다. 도 2는 풀필먼트 센터를 도시한다. 풀필먼트 센터는 주문 시 고객들에게 운송되기 위한 아이템들을 저장하는 물리적 위치의 예이다. 풀필먼트 센터(FC)는 다수의 구역으로 분할될 수 있고, 이들 구역 각각은 도 2에 도시되어 있다. 일부 실시예에서, 이들 \"구역\"은 아이템들을 수신하고, 아이템들을 저장하고, 아이템들 을 검색하고, 아이템들을 운송하는 프로세스의 상이한 단계들 사이의 가상 분할(virtual divisions)로 여겨질 수 있다. 따라서, \"구역들\"이 도 2에 도시되어 있지만, 구역들에 대한 다른 분할이 가능하고, 일부 실시예에서, 도 2의 구역들이 생략되거나, 복제되거나, 수정될 수 있다. 인바운드 구역은 도 1a로부터 시스템을 사용하여 제품들을 판매하고 싶어하는 판매자들로부터 아이템 들이 수신되는 FC의 영역을 나타낸다. 예를 들어, 판매자는 트럭을 사용하여 아이템(202A 및 202B)을 배송할 수 있다. 아이템(202A)은 그 자체의 운송 팔레트(shipping pallet)를 점유하기에 충분히 큰 단일 아이템 을 나타낼 수 있고, 반면에 아이템(202B)은 공간을 절약하기 위해 동일한 팔레트 상에 함께 적재된 아이템들의 세트를 나타낼 수 있다. 작업자는 인바운드 구역에서 아이템을 수신하고, 선택적으로 컴퓨터 시스템(도시되지 않음)을 사용하여 아 이템들의 손상 및 정확성에 대해 체크할 수 있다. 예를 들어, 작업자는 컴퓨터 시스템을 사용하여 아이템(202A 및 202B)의 수량을 아이템의 주문 수량과 비교할 수 있다. 수량이 매칭되지(match) 않으면, 그 직원은 아이템 (202A 또는 202B) 중 하나 이상을 거부할 수 있다. 수량이 매칭되면, 작업자는 (예를 들어, 돌리(dolly), 핸드 트럭, 지게차(forklift)를 사용하거나 수동으로) 이들 아이템을 버퍼 구역으로 이동시킬 수 있다. 버퍼 구 역은, 예를 들어, 피킹 구역에 예측된 수요를 충족시키기에 매우 충분한 수량의 해당 아이템이 있기 때문 에, 피킹 구역에서 현재 필요하지 않은 아이템들에 대한 임시 저장 영역일 수 있다. 일부 실시예에서, 지게차 는 버퍼 구역 주위에서, 그리고 인바운드 구역과 드롭 구역 사이에서 아이템들을 이동시키 도록 동작된다. 피킹 구역에서 아이템(202A 또는 202B)이 필요하다면(예를 들어, 예측된 수요로 인함), 지게차 는 아이템(202A 또는 202B)을 드롭 구역으로 이동시킬 수 있다. 드롭 구역은, 아이템들이 피킹 구역으로 이동되기 전에 아이템들을 저장하는 FC의 영역일 수 있 다. 피킹 작업에 할당된 작업자(\"피커(picker)\")는, 피킹 구역에서 아이템(202A 및 202B)에 접근하고, 피킹 구 역에 대한 바코드를 스캔하고, 모바일 디바이스(예를 들어, 디바이스(119B))를 사용하여 아이템(202A 및 202B) 과 연관된 바코드를 스캔할 수 있다. 그 후, 피커는 (예를 들어, 아이템을 카트에 담거나 운반함으로써) 아이템 을 피킹 구역으로 가져갈 수 있다. 피킹 구역은 아이템이 저장 유닛 상에 저장되는 FC의 영역일 수 있다. 일부 실시예에서, 저장 유닛은 물리적 선반, 책장, 박스, 토트(totes), 냉장고, 냉동고, 냉장 창고(cold stores) 등 중 하나 이상을 포함할 수 있다. 일부 실시예에서, 피킹 구역은 다수의 층으로 구성될 수 있다. 일부 실시예에서, 작업자 또는 기계는, 예를 들어, 지게차, 엘리베이터, 컨베이어 벨트, 카트, 핸드 트럭, 돌리, 자동화된 로봇 또는 디바이스를 포함하여 여러 방식으로, 또는 수동으로 아이템을 피킹 구역으로 이동시킬 수 있다. 예를 들어, 피커는 드롭 구역에서 핸드 트럭 또는 카트 상에 아이템(202A 및 202B)을 담고, 아이템(202A 및 202B)을 피킹 구역까지 걸어서 운반할 수 있다. 피커는, 저장 유닛상의 특정 공간과 같이, 피킹 구역의 특정 지점(particular spots)에 아이템을 배 치(또는 \"수납\")하라는 명령어(instruction)를 수신할 수 있다. 예를 들어, 피커는 모바일 디바이스(예를 들어, 디바이스(119B))를 사용하여 아이템(202A)을 스캔할 수 있다. 디바이스는, 예를 들어, 통로(aisle), 선반 및 위 치를 나타내는 시스템을 사용하여 피커가 아이템(202A)을 수납해야 하는 위치를 나타낼 수 있다. 그 후, 디바이 스는 그 위치에 아이템(202A)을 수납하기 전에 피커가 그 위치에서 바코드를 스캔하도록 촉구할 수 있다. 디바 이스는, 디바이스(119B)를 사용하는 사용자에 의해 그 위치에 아이템(202A)이 수납되었음을 나타내는 데이터를, (예를 들어, 무선 네트워크를 통해) 도 1a의 WMS와 같은 컴퓨터 시스템에 전송할 수 있다. 사용자가 주문을 하면, 피커는 저장 유닛으로부터 하나 이상의 아이템을 검색하라는 명령어를 디바이 스(119B)상에 수신할 수 있다. 피커는, 아이템을 검색하고, 아이템상의 바코드를 스캔하고, 아이템을수송 메커니즘(transport mechanism) 상에 배치할 수 있다. 수송 메커니즘은, 슬라이드로 나타내어져 있지만, 일부 실시예에서, 수송 메커니즘은 컨베이어 벨트, 엘리베이터, 카트, 지게차, 핸드 트럭, 돌리, 카트 등 중 하나 이상으로서 구현될 수 있다. 그 후, 아이템은 포장 구역(packing zone)에 도착할 수 있다. 포장 구역은, 아이템이 피킹 구역으로부터 수신되어 고객에게 최종 운송되기 위해 박스 또는 백 (bags)에 포장되는 FC의 영역일 수 있다. 포장 구역에서, 아이템 수신에 할당된 작업자(\"리빈 작업자\")는 피킹 구역으로부터 아이템을 수신하고 그것이 어느 주문에 대응하는지를 결정할 것이다. 예를 들어, 리빈 작업자는 컴퓨터(119C)와 같은 디바이스를 사용하여 아이템상의 바코드를 스캔할 수 있다. 컴퓨터(119C)는 아이템이 어느 주문과 연관되는지를 시각적으로 나타낼 수 있다. 이는, 예를 들어, 주문에 대응하는 공간 또는 벽의 \"셀\"을 포함할 수 있다. 일단 주문이 완료되면 (예를 들어, 셀은 주문에 대한 모든 아이템을 포함하기 때문에), 리빈 작업자는 주문이 완료된 것을 포장 작업자(packing worker)(또는 \"패커(packer)\")에게 나타낼 수 있다. 패커는 셀로부터 아이템들을 회수하여 운송을 위해 박스 또는 백에 담을 수 있다. 그 후, 패커는 예를 들어, 지게차, 카트, 돌리, 핸드 트럭, 컨베이어 벨트를 통해, 박스 또는 백을 허 브 구역으로 수동으로 또는 다른 방식으로 전송할 수 있다. 허브 구역은 포장 구역으로부터 모든 박스 또는 백(\"패키지\")을 수신하는 FC의 영역일 수 있다. 허브 구역의 작업자 및/또는 기계는, 패키지를 검색하고, 각 패키지가 배송 지역 중 어느 부분으로 가고자 의도되는지를 결정하고, 패키지를 적절한 캠프 구역으로 라우팅할 수 있다. 예를 들어, 배송 지역 이 2개의 더 작은 하위-지역(sub-areas)을 갖는 경우, 패키지는 2개의 캠프 구역 중 하나로 갈 것이다. 일 부 실시예에서, 작업자 또는 기계는 (예를 들어, 디바이스(119A 내지 119C) 중 하나를 사용하여) 패키지를 스캔 하여 그 최종 목적지를 결정할 수 있다. 패키지를 캠프 구역으로 라우팅하는 것은, 예를 들어, (예를 들어, 우편 번호에 기반하여) 패키지가 예정되어 있는 지리적 지역의 일부를 결정하는 것, 및 지리적 지역의 일 부와 연관된 캠프 구역을 결정하는 것을 포함할 수 있다. 일부 실시예에서, 캠프 구역은 하나 이상의 건물, 하나 이상의 물리적 공간 또는 하나 이상의 지역을 포함 할 수 있고, 여기서 패키지는 루트 및/또는 서브-루트로 분류되기 위해 허브 구역으로부터 수신된다. 일부 실시예에서, 캠프 구역은 FC로부터 물리적으로 분리되고, 반면에 다른 실시예에서, 캠프 구역은 FC의 일부를 형성할 수 있다. 캠프 구역 내의 작업자 및/또는 기계는, 예를 들어, 목적지를 기존의 루트 및/또는 서브-루트와 비교하는 것, 각 루트 및/또는 서브-루트에 대한 작업 부하를 계산하는 것, 하루 중 시각(the time of day), 운송 방법, 패키지를 운송하기 위한 비용, 패키지 내의 아이템과 연관된 PDD 등에 기반하여, 패키지가 어느 루트 및/또는 서브-루트와 연관되어야 하는지를 결정할 수 있다. 일부 실시예에서, 작업자 또는 기계는 (예를 들어, 디바이스(119A 내지 119C) 중 하나를 사용하여) 패키지를 스캔하여 그 최종 목적지를 결정할 수 있다. 일 단 패키지가 특정 루트 및/또는 서브-루트에 할당되면, 작업자 및/또는 기계는, 운송될 패키지를 이 동시킬 수 있다. 예시적인 도 2에서, 캠프 구역은 트럭, 자동차 및 배송 작업자(224A 및 224B) 를 포함한다. 일부 실시예에서, 트럭은 배송 작업자(224A)에 의해 구동될 수 있고, 여기서 배송 작업자 (224A)는 FC를 위한 패키지를 배달하는 전일제 직원이고, 트럭은, FC를 소유하거나, 임대하거나, 운영하는 동일한 회사에 의해 소유되거나, 임대되거나, 운영된다. 일부 실시예에서, 자동차는 배송 작업자(224B)에 의해 운전될 수 있고, 여기서 배송 작업자(224B)는 필요에 따라(on an as-needed basis) (예를 들어, 계절에 따라) \"가변적인(flex)\" 또는 비정기적인 작업자(occasional worker)이다. 자동차는 배송 작업자(224B)에 의해 소유되거나, 임대되거나, 운영될 수 있다. 도 3을 참조하면, AI-기반 데이터베이스 파라미터 최적화를 위한 디바이스 및 시스템의 예시적인 네트워크가 도 시되어 있다. 도 3에 도시된 바와 같이, 시스템은 어플리케이션, 데이터베이스, 데이터베이스 , 메트릭 수집 시스템(metrics collector system), 메트릭 저장 시스템(metrics repository system), 모델 시스템, 시험 데이터베이스(testing database), 및 튜너 시스템을 포함할 수 있다. 어플리케이션은 사용자(320A)와 연관된 사용자 디바이스 또는 시스템 내 다른 컴포넌 트들과 네트워크를 통해 통신할 수 있다. 일부 실시예에서, 어플리케이션은 시스템 내 다른 컴포넌트 들과 예를 들어 케이블을 사용한 직접 연결을 통해 통신할 수 있다. 일부 다른 실시예에서, 시스템은 도 1a의 시스템의 일부일 수 있으며, 네트워크를 통해 또는 예를 들어 케이블을 사용한 직접 연결을 통해 시 스템의 다른 컴포넌트들과 통신할 수 있다. 어플리케이션은 단일 컴퓨터를 포함할 수 있거나, 개시된 예시들과 연관된 프로세스들 및 기능들 중 하나 이상을 수행하도록 상호 동작(interoperate)하는 다수의 컴퓨터를 포함한 분산형 컴퓨터 시스템으로 각각 구현될 수 있다. 일부 실시예에서, 어플리케이션은 특정 언어 (예를 들어, Java)로 구현되는 클라이언트 컴포넌트, 및 외부 프론트 엔드 시스템 및 시스템(100 또는 300) 내 다른 컴포넌트들과 통신하기 위한 프로토콜을 포함할 수 있다. 시스템은, IntelTM 사에서 제조되는 PentiumTM 패밀리 또는 AMDTM사에서 제조되는 TurionTM 패밀리의 마이크 로프로세서와 같이 하나 이상의 공지된 처리 장치일 수 있는 적어도 하나의 프로세서를 포함할 수 있다. 프로세 서는 병렬 프로세스들을 동시에 실행하는 단일 코어(single core) 또는 다중 코어 프로세서(multiple core processor)를 구성할 수 있다. 예를 들어, 프로세서는 다수의 프로세스를 동시에 실행 및 제어하기 위해 논리 프로세서(logical processors)를 사용할 수 있다. 프로세서는 다수의 소프트웨어 프로세스, 어플리케이션, 프로 그램 등을 실행, 제어, 구동(run), 조작, 저장 등을 하는 능력을 제공하기 위해 가상 머신 기술 또는 다른 공지 된 기술을 구현할 수 있다. 다른 예시에서, 프로세서는 시스템이 다수의 프로세스를 동시에 실행할 수 있 도록 병렬 처리 기능을 제공하도록 구성되는 다중-코어 프로세서 배열을 포함할 수 있다. 통상의 기술자는 본 명세서에서 개시되는 능력(capabilities)을 제공하는 다른 유형의 프로세서 배열이 구현될 수 있음을 이해할 것 이다. 시스템은, 프로세서에 의해 실행될 때 공지된 운영 체제 기능(operating system functions)을 수행하는 하 나 이상의 운영 체제를 저장할 수 있는 적어도 하나의 메모리를 포함할 수 있다. 예시로서, 운영 체제는 Microsoft Windows, Unix, Linux, Android, Mac OS, iOS, 또는 다른 유형의 운영 체제를 포함할 수 있다. 따라 서, 개시된 본 발명의 예시들은 임의의 유형의 운영 체제를 구동하는 컴퓨터 시스템으로 작동 및 기능할 수 있 다. 메모리는 휘발성 또는 비-휘발성, 자성, 반도체, 테이프, 광학, 제거 가능한, 제거 불가능한, 또는 다른 종 류의 저장 디바이스 또는 유형의 컴퓨터 판독 가능 매체(tangible computer readable medium)일 수 있다. 데이터베이스(302, 303, 또는 307)는 예를 들어, OracleTM 데이터베이스, SybaseTM 데이터베이스, 또는 기타 관 계형 데이터베이스, 또는 HadoopTM 시퀀스 파일, HBaseTM, 또는 CassandraTM과 같은 비관계형 데이터베이스를 포 함할 수 있다. 일부 실시예에서, 시스템은 더 많은 데이터베이스를 포함할 수 있다. 데이터베이스(302, 303, 또는 307)는 데이터베이스(들)의 메모리 디바이스에 저장되는 데이터에 대한 요청을 수신 및 처리하도록, 그리고 데이터베이스(들)로부터 데이터를 제공하도록 구성되는 컴퓨팅 컴포넌트(예를 들어, 데이터베이스 관리 시스템, 데이터베이스 서버 등)을 포함할 수 있다. 데이터베이스(302, 303, 또는 307)는 HBase, MongoDBTM 또는 CassandraTM과 같은 NoSQL 데이터베이스를 포함할 수 있다. 대안적으로, 데이터베이스(302, 303, 또는 307)는 Oracle, MySQL, 및 Microsoft SQL Server와 같은 관계형 데이터베이스를 포함할 수 있다. 일부 실시예에서, 데 이터베이스(302, 303, 또는 307)는 서버, 범용 컴퓨터(general purpose computers), 메인 프레임 컴퓨터(main frame computers), 또는 이러한 컴퓨터들의 임의의 조합의 형태를 취할 수 있다. 데이터베이스(302, 303, 또는 307)는 개시된 예시들과 연관된 방법 및 프로세스를 수행하기 위한 프로세서에 의 해 사용될 수 있는 데이터를 저장할 수 있다. 데이터베이스(302, 303, 또는 307)는 도 3에 도시된 바와 같이 시 스템에 위치되거나, 대안적으로 시스템 외측에 위치되는 외부 저장 디바이스 내 질의 시스템일 수 있다. 데이터베이스(302 또는 303)에 저장되는 데이터는 질의, 질의 계획, 질의 패턴(예를 들어, select- name_from_user_where_email=?), 질의 파라미터, 데이터베이스 작업 부하 파라미터, 최적 파라미터, 클라이언트 세션 데이터베이스 파라미터, 클라이언트 세션 연결 풀 파라미터, 클라이언트 세션 작업 부하 균형 파라미터, 데이터베이스 메트릭의 변화, 현재 데이터베이스 성능 메트릭, 데이터베이스 성능 메트릭의 변화, 클라이언트 세션 데이터, 질의 프로파일링, 시스템 작업 부하, 실행 계획 등을 포함할 수 있다. 데이터베이스에 저장 되는 데이터는 히스토리 데이터(historical data), 질의, 질의 패턴, 질의 파라미터, 데이터베이스 작업 부하 파라미터, 피처화된 질의(featurized queries), 최적 파라미터, 클라이언트 세션 데이터베이스 파라미터, 클라 이언트 세션 연결 풀 파라미터, 클라이언트 세션 작업 부하 균형 파라미터, 데이터베이스 메트릭의 예측된 변화, 데이터베이스 메트릭의 변화, 현재 데이터베이스 성능 메트릭, 데이터베이스 성능 메트릭의 변화, 훈련 데이터, 훈련 목표(training targets), 모델 입력값(model inputs), 모델 출력값(model outputs), 모델 네트워 크 가중치(model network weights), 오류 함수(error functions), 성능 점수, 클라이언트 세션 데이터, 질의 프로파일링, 시스템 작업 부하, 실행 계획 등을 포함할 수 있다. 일부 실시예에서, 데이터베이스(302, 303, 또 는 307)에 저장되는 데이터는 외부 프론트 엔드 시스템으로부터의 데이터, FO 시스템으로부터의 데이 터, 내부 프론트 엔드 시스템으로부터의 데이터 등과 같은, 시스템으로부터의 데이터를 포함할 수 있 다. 사용자 디바이스는 태블릿, 모바일 디바이스, 컴퓨터 등일 수 있다. 사용자 디바이스는 디스플레이를 포함할 수 있다. 디스플레이는 예를 들어, LCD(liquid crystal displays), LED(light emitting diode) 스크린, OLED(organic light emitting diode) 스크린, 터치 스크린, 및 기타 공지된 디스플레이 디바이스를 포함할 수 있다. 디스플레이는 사용자에게 다양한 정보를 보여줄 수 있다. 예를 들어, 이는 질의 제출을 위한 옵션, 모델 훈련을 위한 옵션, 훈련 데이터 생성을 위한 옵션, 파라미터 튜닝을 위한 옵션 등을 포함할 수 있는 사용자 인 터페이스 요소를 (예를 들어, 외부 프론트 엔드 시스템 또는 내부 프론트 엔드 시스템을 통해 웹페이 지 상에) 디스플레이할 수 있다. 사용자 디바이스는 하나 이상의 입력/출력(I/O) 디바이스를 포함할 수 있다. I/O 디바이스는 사용자 디바 이스가 사용자(320A) 또는 다른 디바이스로부터 정보를 전송 및 수신할 수 있도록 하는 하나 이상의 디바 이스를 포함할 수 있다. I/O 디바이스는 다양한 입력/출력 디바이스, 카메라, 마이크, 키보드, 마우스-형 디바 이스, 제스처 센서(gesture sensor), 액션 센서(action sensor), 물리적 버튼, 구어적 입력(oratory input) 등 을 포함할 수 있다. I/O 디바이스는 또한, 예를 들어 사용자 디바이스와 네트워크 사이의 유선 또는 무선 연결을 형성함으로써, 시스템 내에서 또는 시스템으로부터 정보를 전송 및 수신하기 위한 하나 이상 의 통신 모듈(도시되지 않음)을 포함할 수 있다. 일부 실시예에서, 사용자 디바이스는 모바일 디바이스 (102A) 또는 컴퓨터(102B)와 같은 시스템의 디바이스를 포함할 수 있다. 메트릭 수집 시스템은 시스템(100 또는 300)의 컴포넌트로부터 데이터(예를 들어, 히스토리 데이터, 질의, 질의 패턴, 질의 파라미터, 데이터베이스 작업 부하 파라미터, 피처화된 질의, 최적 파라미터, 클라이언트 세션 데이터베이스 파라미터, 클라이언스 세션 연결 풀 파라미터, 클라이언트 세션 작업 부하 균형 파라미터, 데이터 베이스 메트릭의 예측된 변화, 데이터베이스 메트릭의 변화, 현재 데이터베이스 성능 메트릭, 데이터베이스 성 능 메트릭의 변화, 훈련 데이터, 훈련 목표, 모델 입력값, 모델 출력값, 모델 네트워크 가중치, 오류 함수, 성 능 점수, 클라이언트 세션 데이터, 질의 프로파일링, 시스템 작업 부하, 실행 계획 등)를 수집하고, 데이터를 메트릭 저장 시스템으로 전송할 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 질의 데이터를 분 석하고, 질의 데이터로부터 질의 계획을 추출(extract)하고, 벡터를 생성함으로써, 질의를 피처화(featurize)할 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 질의 핑거프린팅(query fingerprinting) 또는 질의 트래 픽 캡쳐링(query traffic capturing)에 의해 질의를 피처화할 수 있다. 예를 들어, 질의 핑거프린팅은 질의를 질의 핑거프린트로 변환하는 것을 포함할 수 있다. 질의 핑거프린트는 질의의 추상화된 형태(abstracted form) 이며, 질의의 추상화는 리터럴 값(literal values)의 제거, 화이트 스페이스 정규화 등을 포함한다. 예를 들어, “select name, password from user where id=6”라는 질의는 “password from user where id=?”라는 질의 핑 거프린트로 변환될 수 있다. 추상화된 질의는 유사한 질의들이 함께 그룹화될 수 있도록 한다. 일부 실시예에서, 사용자(320A)는 내부 사용자(예를 들어, 시스템(100 또는 300)을 소유, 운영, 또는 대여하는 기관의 직원) 또는 외부 사용자(예를 들어, 온라인 쇼핑객)일 수 있다. 일부 실시예에서, 사용자(320A)는 클라이언트 세션 중에 사용자 디바이스를 통해 어플리케이션에 질 의를 제출할 수 있다. 예를 들어, 사용자(320A)는 사용자 디바이스를 사용하여 외부 프론트 엔드 시스템 )를 탐색하고 외부 프론트 엔드 시스템에 의해 전달되는 웹 페이지 상의 검색 상자에 정보를 입력함 으로써 검색을 요청할 수 있다. 외부 프론트 엔드 시스템은 시스템 내 하나 이상의 시스템으로부터 정보를 요청할 수 있다. 예를 들어, 외부 프론트 엔드 시스템은 검색 요청을 만족시키는 FO 시스템으 로부터 정보를 요청할 수 있다. 일부 실시예에서, 외부 프론트 엔드 시스템은 정보에 기반하여 SRP(예를 들어, 도 1b)를 준비할 수 있다. SRP는 검색 요청을 만족시키는 정보를 포함할 수 있다. 예를 들어, 이는 검색 요청을 만족시키는 제품의 사진들을 포함할 수 있다. 일부 실시예에서, 질의는 복수의 질의를 포함할 수 있거나, 사용자(320A)는 복수의 질의를 제출할 수 있다. 어플리케이션은 수신된 질의에 기반하여 튜닝 요 청을 생성하고, 튜닝 요청을 튜너 시스템으로 전송할 수 있다. 일부 실시예에서, 어플리케이션은 연 결 시간에 사용자(320A)의 클라이언트 세션 변수(client session variables)를 초기화하고, 이로 인해 클라이언 트 세션 컨텍스트에 따라 예측된 최적 파라미터를 커스터마이징(예를 들어, 질의의 패턴, 리턴될 데이터의 예측 된 크기에 기반하여 커스터마이징)할 수 있다. 메트릭 저장 시스템은 질의를 피처화함으로써 질의를 전처리(예를 들어, 변환, 정리(clean up) 등)할 수 있다. 메트릭 저장 시스템은 질의를 분석하고, 질의로부터 질의 계획을 추출하고, 벡터를 생성함으로써 질 의를 피처화할 수 있다. 일부 실시예에서, 질의 계획은 질의 패턴, 질의 파라미터(예를 들어, 질의에 포함되는 표, 질의를 처리하는 비용, 질의 속성(query attributes), 삽입, 삭제, 선택, 업데이트와 같은 질의 유형, 선택, 결합(join), ~에 따라 그룹화(group by)와 같은 질의 동작) 또는 데이터베이스 작업 부하 파라미터(예를들어, 데이터베이스 서버 사이에 분산될 활성 접속(active connection)의 수) 중 적어도 하나를 포함할 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 작업 부하 내 복수의 질의 중 각각의 질의에 대한 벡터를 생성하고, 단일 벡터를 생성하기 위해 벡터들을 병합(merge)할 수 있다. 일부 실시예에서, 메트릭 저장 시스템 은 벡터들을 병합하지 않고, 복수의 질의들 중 각각의 질의에 대한 벡터를 생성할 수 있다. 일부 실시예에 서, 메트릭 저장 시스템은 복수의 질의의 각각의 파라미터에 대한 이산 값(discrete value)을 학습하고, 이러한 이산 구성 패턴에 기반하여 질의들을 분류(classify)하는 모델(예를 들어, 딥 러닝 모델)을 포함할 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 질의 핑거프린팅 또는 질의 트래픽 캡처링에 의해 질의를 피처화할 수 있다. 예를 들어, 질의 핑거프린팅은 질의를 질의 핑거프린트로 전환하는 것을 포함할 수 있다. 질 의 핑거프린트는 질의의 추상화된 형태이며, 질의의 추상화는 리터럴 값의 제거, 화이트스페이스의 정규화 등을 포함한다. 예를 들어, “select name, password from user where id=6”이라는 질의는 “password from user where id=?”라는 질의 핑거프린트로 전환될 수 있다. 추상화된 질의는 유사한 질의들이 함께 그룹화될 수 있도 록 한다. 일부 실시예에서, 모델 시스템은 모델(예를 들어, 심층 강화 학습 모델, 신경 망, 이중-상태 DDPG(deep deterministic policy gradient) 모델 등)을 사용하여 질의를 실행하기 위해 복수의 최적 파라미터를 예측할 수 있다. 최적 파라미터는 클라이언트 세션 데이터베이스 파라미터(예를 들어, 버퍼 크기, 캐시 크기, 작업 메모리 (working memory)), 클라이언트 세션 연결 풀 파라미터(예를 들어, 데이터베이스 서버들 사이에 분배되는 최대 활성 접속), 클라이언트 세션 작업 부하 균형 파라미터(예를 들어, 각각의 데이터베이스 서버에 대한 연결 풀의 비율), 또는 데이터 파티션화 파라미터(예를 들어, 클러스터링 파라미터) 중 적어도 하나를 포함할 수 있다. 예 를 들어, 클라이언트 세션에 특수한 버퍼 크기와 같은 클라이언트 세션 데이터베이스 파라미터의 최적화는 레이 턴시를 유리하게 감소시킬 수 있다(예를 들어, 버퍼 크기는 디스크에 임시 파일(temporary files)이 생성되지 않을 만큼 충분히 크지만, 메모리가 낭비되지 않을 만큼 충분히 작을 수 있다. 유사하게, 클라이언트 세션 연결 풀 파라미터, 작업 부하 균형 파라미터, 또는 데이터 파티션화 파라미터는 시스템 성능을 개선하도록 최적화될 수 있다. 예를 들어, 시스템 내 각각의 데이터베이스에 대한 최적의 최대 활성 접속은, 하나의 데이터베이 스 서버가 더 많은 작업 부하를 제공하는 경우에, 레이턴시 및 데이터베이스 서버 왜곡(database server skew s)을 감소시키기 위해 데이터가 또 다른 데이터베이스로 제공될 수 있을 만큼 충분히 클 수 있다. 일부 실시예 에서, 최적의 데이터 파티션화 파라미터는, 데이터 분배가 변할 때(예를 들어, 마이그레이션, 스케일링 등 중에) 런타임 중에 최적의 메커니즘이 선택될 수 있도록 라우팅 전략(routing strategies)을 포함할 수 있다. 일부 실시예에서, 모델 시스템은 모델을 사용하여, 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측 된 변화(예를 들어, 레이턴시, 처리량 등)를 계산함으로써 최적 파라미터를 예측할 수 있다. 예를 들어, 모델 시스템은 질의 실행 이전부터 질의 실행 이후까지의 데이터베이스 메트릭의 차이를 예측할 수 있다. 일부 실시 예에서, 모델 시스템은 데이터베이스 메트릭의 예측된 변화를 튜너 시스템으로 전송할 수 있다. 일부 실시예에서, 튜너 시스템은 데이터베이스 메트릭의 예측된 변화 및 현재 데이터베이스 성능 메트릭에 기반하여 데이터베이스 성능 메트릭을 계산할 수 있다. 예를 들어, 튜너 시스템은 시스템으로부터 현 재(예를 들어, 실시간) 데이터베이스 성능 메트릭을 검색하고 데이터베이스 메트릭의 예측된 변화를 현재 데이 터베이스 성능 메트릭에 가산함으로써 데이터베이스 성능 메트릭을 계산할 수 있다. 일부 실시예에서, 튜너 시스템은 계산된 데이터베이스 성능 메트릭을 모델 시스템에 전송할 수 있고, 모델은 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산할 수 있다. 일부 실시예에서, 모델 시스템은 복수의 모델을 사용할 수 있다. 예를 들어, 모델 시스템은 전처리된 질의 에 기반하여 데이터베이스 메트릭 내 예측된 변화를 계산하기 위해 제1 모델을, 그리고 계산된 데이터베이스 성 능 메트릭에 기반하여 최적 파라미터의 벡터를 계산하기 위해 제2 모델을 사용할 수 있다. 모델 시스템은 계산된 데이터베이스 성능 메트릭을 모델에 입력할 수 있다. 모델 시스템은 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산하여, 최적 파라미터의 벡터를 튜너 시스템으로 전송할 수 있다. 튜 너 시스템은 어플리케이션으로 최적 파라미터를 푸시하여, 예측된 최적 파라미터에 기반하여 질의를 실행할 수 있고, 이로 인해 클라이언트 세션에 특수한 최적 파라미터를 사용하여 질의를 실행하고 런타임에 클 라이언트 세션 파라미터를 수정할 수 있다. 일부 실시예에서, 튜너 시스템은 실행된 질의와 연관된 성능 점수를 계산할 수 있다. 예를 들어, 성능 점수는 실행된 질의로부터 발생되는 데이터베이스 성능의 변화를 결정 함으로써 계산될 수 있다. 일부 실시예에서, 튜너 시스템은 성능 점수를 모델 시스템의 모델에 전송할 수 있다. 모델 시스템 은 성능 점수에 기반하여 모델의 네트워크 가중치를 업데이트할 수 있다. 일부 실시예에서, 모델 시스템은 데이터베이스(302, 303, 또는 307)에 저장된 데이터, 메트릭 수집 시스템 , 또는 튜너 시스템으로부터의 데이터를 검색함으로써 훈련 데이터를 생성할 수 있다. 일부 실시예에 서, 모델 시스템은 데이터베이스(302 또는 303)로부터 현재 클라이언트 세션 데이터(예를 들어, 실시간 데 이터) 또는 데이터베이스로부터 히스토리 데이터를 검색하고, 검색된 데이터를 피처화함으로써 훈련 데이 터를 생성할 수 있다. 예를 들어, 훈련 데이터는 클라이언트 세션으로부터의 히스토리 데이터 또는 현재 클라이 언트 세션으로부터의 실시간 데이터(예를 들어, 질의 패턴, 질의 파라미터, 질의에 포함되는 표, 질의 처리 비 용, 질의 특성, 삽입, 삭제, 선택, 업데이트와 같은 질의 유형, 선택, 결합, ~에 따라 그룹화 와 같은 질의 동 작, 데이터베이스 작업 부하 파라미터, 데이터 서버에 분배될 활성 접속의 수, 질의 벡터, 질의 구성 패턴, 최 적 파라미터, 버퍼 크기, 캐시 크기, 작업 메모리, 클라이언트 세션 연결 풀 파라미터, 데이터베이스 서버들에 분배되는 최대 활성 접속, 클라이언트 세션 작업 부하 균형 파라미터, 각각의 데이터베이스 서버에 대한 연결 풀의 비율, 데이터베이스 메트릭의 예측된 변화, 전처리된 질의, 계산된 데이터베이스 성능 메트릭, 실제 데이 터베이스 성능 메트릭, 성능 점수 등)를 포함할 수 있다. 검색된 데이터의 피처화는 데이터 분석, 데이터로부터 의 질의 계획 추출, 및 벡터 생성을 포함할 수 있다. 일부 실시예에서, 모델 시스템은 피처화된 검색된 데 이터를 모델에 입력하고, 모델로부터 성능 메트릭의 변화를 결정함으로써 훈련 데이터를 생성할 수 있으며, 성 능 메트릭의 결정된 변화는 훈련 데이터일 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 질의 핑거프 린팅 또는 질의 트래픽 캡처링함으로써 질의를 피처화할 수 있다. 예를 들어, 질의 핑거프린팅은 질의를 질의 핑거프린트로 전환하는 것을 포함할 수 있다. 질의 핑거프린트는 질의의 추상화된 형태이며, 질의의 추상화는 리터럴 값의 제거, 화이스스페이스의 정규화를 포함한다. 예를 들어, “select name, password from user where id=6”라는 질의는 “password from user where id=?”라는 질의 핑거프린트로 전환될 수 있다. 추상화 된 질의는 유사한 질의들이 함께 그룹화될 수 있도록 한다. 일부 실시예에서, 모델 시스템은 훈련 데이터를 검색하고, 훈련 목표를 정의하고, 훈련 데이터를 사용하여 모델을 실행하고, 모델이 훈련 목표를 출력할 때까지 모델의 네트워크 가중치를 반복적으로 업데이트함으로써 모델을 훈련할 수 있다. 일부 실시예에서, 훈련 목표는 오류 함수의 최소화를 포함할 수 있다. 일부 실시예에서, 모델은 훈련 데이터를 무작위로 선택함으로써 훈련될 수 있다. 일부 실시예에서, 모델은 4개의 완전히 연결된 층들로 구성되는 다층 퍼셉트론 모델(multilayer perceptron model)일 수 있다. 일부 실시예에서, 모델 시스템은 (예를 들어, 모델의 각 층의 뉴런 수를 결정하기 위해) 입력 또는 출력 벡터의 스케일에 기반하여 모델을 생성할 수 있다. 모델의 입력 층은 피처 벡터를 수용하 고 매핑된 텐서(예를 들어, 더 높은 차원)를 은닉 층으로 출력할 수 있다. 은닉 층은 일련의 비-선형 데이터 변 환을 포함할 수 있다. 출력은 텐서를 데이터베이스의 스케일로 제한하고, 데이터베이스 메트릭의 계측된 변화를 나타내는 벡터를 생성할 수 있다. 네트워크는 입력을 출력 스페이스(예를 들어, 패턴)로 변환하는 함수 합성 (function compositions)의 체인을 나타낼 수 있다. 일부 실시예에서, 모델은 더 많은 패턴을 캡처하기 위해 은 닉 층에 활성 함수(예를 들어, ReLU)를 포함할 수 있다. 일부 실시예에서, 네트워크의 가중치는 표준 정규 분포 에 의해 초기화될 수 있다. 일부 실시예에서, 모델 시스템은 질의들을 이산 설정 패턴(discrete configuration patterns)으로 매핑할 수 있다. 예를 들어, 모델의 입력 층은 입력으로서 피처 벡터를 수신하고, 출력을 스케일링하기 위해 피처 벡터 를 목표 파라미터 공간에 매핑할 수 있다. 제2 층은 입력 피처들 사이의 상관 관계(예를 들어, 다른 피처가 변 할 때 피처의 값 차이) 또는 입력 벡터와 출력 벡터 사이의 매핑 관계를 캡처하는 활성 함수(예를 들어, ReLU) 를 갖는 덴스 층(dense layer)일 수 있다. 후속하는 층들은 이산화된 결과를 획득하기 위해 입력 벡터를 정규화 하고, 시그모이드 활성 함수(sigmoid activation function)를 사용하여 입력으로서 실수 값을 수신하고 “0” 내지 “1”의 값을 출력할 수 있다. 일부 실시예에서, 모델의 출력 층은, 출력 벡터 내 각 피처에 대해, 피처가 0.5 미만일 경우에는 결과 비트가 “-1”이고, 피처가 0.5와 같을 경우에는 ”0”이며, 그 외의 경우에는 “1” 인 확률 분포 함수로서 사용될 수 있다. 일부 실시예에서, 모델은 네트워크를 통해 피처들을 전파하고, 질의 패 턴을 출력하고, 출력 질의 패턴과 실제 질의 패턴 사이의 차이를 최소화함으로써 모델의 네트워크 가중치를 업 데이트할 수 있다. 일부 실시예에서, 모델 시스템은, 확률론적 목적 함수(stochastic objective function)을 사용하여 컴퓨 팅될 수 있는 기울기(gradients)들의 제1 및 제2 모멘트에 의해 네트워크 가중치를 반복적으로 업데이트하는 확 률론적 최적화 알고리즘(stochastic optimization algorithm)(예를 들어, 적응형 모멘트 추정(Adaptive Moment Estimation)을 사용하여 모델을 훈련할 수 있다. 훈련은 모델이 수렴되거나 주어진 수의 단계를 실행하는 경우에 종료될 수 있다. 예를 들어, 모델은 성능 메트릭의 변화가 훈련 목표에 도달할 때(예를 들어, 성능 메트릭의 변화가 임계값 보다 작을 때, 임계값 보다 클 때 등) 변환될 수 있다. 일부 실시예에서, 모델 시스템은 질의들을 질의 패턴의 유사성에 기반하여 상이한 클러스터로 분류 (classify)할 수 있다. 예를 들어, 클러스터링 알고리즘은 설정들(configurations)을 클러스터링하기 위해 설정 패턴에 기반하여 사용될 수 있으며, 모델 시스템은 거리 측정 값 및 함께 클러스터링되는 점의 최소 개수 에 따라 서로 가까운 패턴들을 함께 그룹화할 수 있다. 일부 실시예에서, 모델 시스템은 주기적으로 데이터(예를 들어, 실시간 데이터, 히스토리 데이터 등)를 검 색하고, 모델을 실행하고, 예측된 최적 파라미터를 어플리케이션으로 푸시할 수 있다. 어플리케이션 은 예측된 최적 파라미터를 수신하고, 런타임에 최적 파라미터를 사용하여 데이터베이스 설정을 리프레쉬할 수 있다. 도 4를 참조하면, AI-기반 데이터베이스 파라미터 최적화를 위한 프로세스가 도시되어 있다. 일부 실시예 에서, 시스템은 본 명세서에 설명되는 몇몇 단계들을 수행할 수 있지만, 다른 구현예도 가능하다. 예를 들 어, 본 명세서에서 설명 및 도시되는 시스템 및 컴포넌트(예를 들어, 시스템) 중 임의의 것은 본 개시에서 설명되는 단계들을 수행할 수 있다. 단계에서, 사용자(320A)는 클라이언트 세션 중에 사용자 디바이스를 통해 어플리케이션으로 질 의를 제출할 수 있다. 일부 실시예에서, 질의가 복수의 질의를 포함할 수 있거나, 사용자(320A)가 복수의 질의 를 제출할 수 있다. 어플리케이션은 수신된 질의에 기반하여 튜닝 요청을 생성하고, 튜닝 요청을 튜너 시 스템으로 전송할 수 있다. 일부 실시예에서, 어플리케이션은 접속 시간에 사용자(320A)의 클라이언트 세션 변수를 초기화하여, 이로 인해 클라이언트 세션 컨텍스트에 따라 예측된 최적 파라미터를 커스터마이징(예 를 들어, 질의의 패턴, 리턴될 데이터의 예측되는 크기 등에 기반하여 커스터마이징)할 수 있다. 메트릭 저장 시스템은 질의를 피처화함으로써 질의를 전처리(예를 들어, 변환, 정리(clean up) 등) 할 수 있다. 메트릭 저장 시스템은 질의를 분석하고, 질의로부터 질의 계획을 추출하고, 벡터를 생성함으로써 질 의를 피처화할 수 있다. 일부 실시예에서, 질의 계획은 질의 패턴, 질의 파라미터(예를 들어, 질의에 포함되는 표, 질의 처리 비용, 질의 특성, 삽입, 삭제, 선택, 업데이트와 같은 질의 유형, 선택, 결합, ~에 따라 그룹화 와 같은 질의 동작, 등) 또는 데이터베이스 작업 부하 파라미터(예를 들어, 데이터베이스 서버들에 분배될 활성 접속의 수) 중 적어도 하나를 포함할 수 있다. 일부 실시예에서, 메트릭 저장 시스템은 질의 핑거프린팅 또는 질의 트래픽 캡처에 의해 질의를 피처화할 수 있다. 예를 들어, 질의 핑거프린팅은 질의를 질의 핑거프린 트로 변환할 수 있다. 질의 핑거프린트는 질의의 추상화된 형태이며, 질의의 추상화는 리터럴 값의 제거, 화이 트스페이스 정규화 등을 포함한다. 예를 들어, “select name, password from user where id=6”이라는 질의는 “password from use where id=?”라는 질의 핑거프린트로 변환될 수 있다. 추상화된 질의는 유사한 질의들이 함께 그룹화될 수 있도록 한다. 단계에서, 모델 시스템은 모델을 사용하여, 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측된 변화(예를 들어, 레이턴시, 처리량 등)를 계산함으로써 최적 파라미터를 예측할 수 있다. 예를 들어, 모델 시스 템은 질의의 실행 이전으로부터 질의의 실행 이후까지 데이터베이스 메트릭의 차이를 예측할 수 있다. 일부 실 시예에서, 모델 시스템은 데이터베이스 메트릭의 예측된 변화를 튜너 시스템으로 전송할 수 있다. 일부 실시예에서, 모델 시스템은 모델(예를 들어, 심층 강화 학습 모델, 신경 회로망, 이중-상태 DDPG 모 델 등)을 사용하여, 질의를 실행하기 위한 복수의 최적 파라미터를 예측할 수 있다. 최적 파라미터는 클라이언 트 세션 데이터베이스 파라미터(예를 들어, 버퍼 크기, 캐시 크기, 작업 메모리), 클라이언트 세션 연결 풀 파 라미터(예를 들어, 데이터베이스 서버들에 분배되는 최대 활성 접속), 클라이언트 세션 작업 부하 균형 파라미 터(예를 들어, 각 데이터베이스 서버에 대한 연결 풀의 비율), 또는 데이터 파티션화 파라미터(예를 들어, 클러 스터링 파라미터) 중 적어도 하나를 포함할 수 있다. 예를 들어, 버퍼 크기와 같이, 클라이언트 세션에 특수한 클라이언트 세션 데이터베이스 파라미터를 최적화함으 로써, 레이턴시를 유리하게 감소시킬 수 있다(예를 들어, 버퍼 크기는 디스크에 임시 파일이 생성되지 않을 만 큼 충분히 크고, 메모리가 낭비되지 않을 만큼 충분히 작을 수 있다). 유사하게, 클라이언트 세션 연결 풀 파라 미터, 작업 부하 균형 파라미터, 또는 데이터 파티션화 파라미터는 시스템 성능을 향상시키기 위해 최적화될 수 있다. 예를 들어, 시스템 내 각 데이터베이스에 대한 최적의 최대 활성 접속은, 하나의 데이터베이스가 더 많은 작업 부하를 제공하는 경우, 레이턴시 및 데이터베이스 서버 왜곡을 감소시키기 위해 데이터가 다른 데이터베이스에 제공될 수 있도록 충분히 클 수 있다. 일부 실시예에서, 최적의 데이터베이스 파티션화 파라미터는, 데이터 분배가 변할 때(예를 들어, 마이그레이션, 스케일링 등 중에) 런타임에 최적 메커니즘이 선택될 수 있도 록 라우팅 전략을 포함할 수 있다. 단계에서, 튜너 시스템은 데이터베이스 메트릭의 예측된 변화 및 현재 데이터베이스 성능 메트릭에 기반하여 데이터베이스 성능 메트릭을 계산할 수 있다. 예를 들어, 튜너 시스템은 시스템으로부터 현 재(예를 들어, 실시간) 데이터베이스 성능 메트릭을 검색하여 데이터베이스 메트릭의 예측된 변화를 현재 데이 터베이스 성능 메트릭에 가산함으로써 데이터베이스 성능 메트릭을 계산할 수 있다. 일부 실시예에서, 튜너 시 스템은 계산된 데이터베이스 성능 메트릭을 모델 시스템으로 전송할 수 있다. 단계에서, 모델 시스템은 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산할 수 있다. 일부 실시예에서, 모델 시스템은 프로세스의 단계들을 수행하기 위해 복수의 모델을 사용할 수 있다. 예를 들어, 모델 시스템은 전처리된 질의에 기반하여 데이터베이스 메트릭의 예측된 변화를 계산하 기 위해 제1 모델을 사용하고, 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산하기 위해 제2 모델을 사용할 수 있다. 모델 시스템은 계산된 데이터베이스 성능 메트릭을 모델에 입력할 수 있 다. 모델 시스템은 계산된 데이터베이스 성능 메트릭에 기반하여 최적 파라미터의 벡터를 계산하고, 최적 파라 미터의 벡터를 튜너 시스템으로 전송할 수 있다. 단계에서, 튜너 시스템은 어플리케이션에 최적 파라미터를 푸시하여, 예측된 최적 파라미터에 기반하여 질의를 실행할 수 있으며, 이로 인해 클라이언트 세션에 특수한 최적 파라미터를 사용하여 질의를 실 행하고, 런타임 중에 클라이언트 세션 파라미터를 수정할 수 있다. 일부 실시예에서, 튜너 시스템은 실행 된 질의와 연관된 성능 점수를 계산할 수 있다. 예를 들어, 성능 점수는 실행된 질의로부터 발생하는 데이터베 이스 성능 메트릭의 변화를 결정함으로써 계산될 수 있다. 일부 실시예에서, 튜너 시스템은 모델 시스템 의 모델로 성능 점수를 전송할 수 있다. 모델 시스템은 성능 점수에 기반하여 모델의 네트워크 가중 치를 업데이트할 수 있다. 본 개시는 그 특정 실시예들을 참조하여 도시되고 설명되었지만, 본 개시는 다른 환경에서 수정없이 실시될 수 있음이 이해될 것이다. 전술한 설명은 예시 목적으로 제시되었다. 이는 총망라하는(exhaustive) 것이 아니며, 개시된 정확한 형태들 또는 실시예들에 제한되는 것이 아니다. 개시된 실시예들의 명세서 및 실시를 고려하여 본 분야의 통상의 기술자에게 수정 및 개조가 명백할 것이다. 추가적으로, 개시된 실시예들의 양상들이 메모리 에 저장되는 것으로 설명되어 있지만, 본 분야의 통상의 기술자는, 이러한 양상들이 보조 저장 디바이스, 예를 들어, 하드 디스크 또는 CD ROM 또는 다른 형태의 RAM 또는 ROM, USB 매체, DVD, Blu-ray 또는 기타 광학 드라 이브 매체와 같은 다른 타입의 컴퓨터 판독 가능한 매체에 저장될 수 있음을 이해할 것이다. 기재된 설명 및 개시된 방법들에 기반한 컴퓨터 프로그램들은 숙련된 개발자의 기술 내에 있다. 다양한 프로그 램들 또는 프로그램 모듈들은 본 분야의 통상의 기술자에게 공지된 임의의 기술을 사용하여 작성될 수 있거나 기존 소프트웨어와 관련하여 설계될 수 있다. 예를 들어, 프로그램 섹션 또는 프로그램 모듈은 .Net Framework, .Net Compact Framework(및 Visual Basic, C 등의 관련 언어), Java, C++, Objective-C, HTML, HTML/AJAX 조 합, XML, 또는 Java 애플릿이 포함된 HTML에, 또는 이들에 의해 설계될 수 있다. 또한, 예시적인 실시예들이 본 명세서에 설명되었지만, (예를 들어, 다양한 실시예들에 걸친 양상들의) 동등한 요소들, 수정들, 생략들, 조합들, 개조들 및/또는 변경들을 갖는 임의의 및 모든 실시예들의 범주는 본 개시에 기반하여 본 분야의 통상의 기술자에 의해 인식될 것이다. 청구항들에서 제한사항은, 청구항들에 사용된 언어에 기반하여 광범위하게 해석되어야 하고, 출원의 절차 동안 또는 본 명세서에 설명된 예시들에 제한되는 것은 아 니다. 예시들은 비배타적인 것으로 해석될 것이다. 또한, 개시된 방법들의 단계들은 단계들을 재순서화하고, 및 /또는 단계들을 삽입하거나 삭제하는 것을 포함하여 임의의 방식으로 수정될 수 있다. 그러므로, 본 명세서 및 예시들은 단지 예시적인 것으로 간주되고, 진정한 범주 및 사상은 다음의 청구항들 및 그들의 등가물의 전체 범 주에 의해 나타내어진다.도면 도면1a 도면1b 도면1c 도면1d 도면1e 도면2 도면3 도면4"}
{"patent_id": "10-2023-0119653", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 개시되는 실시예들에 따른, 운송, 수송, 및 물류 작업(logistics operations)을 가능하게 하는 통신을 위한 컴퓨터화된 시스템들(computerized systems)을 포함하는 네트워크의 예시적인 실시예를 나타내는 개략적인 블록도이다. 도 1b는 개시되는 실시예들에 따른, 대화형 사용자 인터페이스 요소(interactive user interface elements)와 함께 검색 요청(search request)을 만족하는 하나 이상의 검색 결과를 포함하는 샘플 검색 결과 페이지(SRP: Search Result Page)를 도시한다. 도 1c는 개시되는 실시예에 따른, 대화형 사용자 인터페이스 요소와 함께 제품 및 제품에 대한 정보를 포함하는 샘플 단일 상세 페이지(SDP: Single Detail Page)를 도시한다. 도 1d는 개시되는 실시예에 따른, 대화형 사용자 인터페이스 요소와 함께 가상의 쇼핑 카트 내 아이템들을 포함 하는 샘플 카트 페이지(Cart page)를 도시한다. 도 1e는 개시되는 실시예에 따른, 대화형 사용자 인터페이스 요소와 함께, 구매 운송에 관한 정보와 함께 가상 의 쇼핑 카트로부터의 아티엠을 포함하는 샘플 주문 페이지(Order page)를 도시한다. 도 2는 개시되는 실시예에 따른, 개시되는 컴퓨터화된 시스템을 활용하도록 구성되는 예시적인 풀필먼트 센터(fulfillment center)의 개략도이다. 도 3은 개시된 실시예에 따른 AI-기반 데이터페이스 파라미터 최적화를 위한 디바이스 및 시스템의 예시적인 네 트워크를 도시한다. 도 4는 개시된 실시예에 따른 AI-기반 데이터베이스 파라미터 최적화를 위한 예시적인 프로세스를 도시한다."}
