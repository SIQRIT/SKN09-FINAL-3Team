{"patent_id": "10-2022-0004467", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0108848", "출원번호": "10-2022-0004467", "발명의 명칭": "분산형 데이터 처리 기술을 활용한 질병 예측 AI 모델 학습 시스템", "출원인": "주식회사 에비드넷", "발명자": "우현기"}}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "하나 이상의 프로세서를 포함하는 컴퓨팅 장치에 의해 수행되는 질병을 예측하기 위한 방법으로서, 상기방법은:적어도 하나의 외부 기기로부터 의료 데이터를 수신하는 단계; 및상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하는 단계;를 포함하고,상기 질병예측 모델은,복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성되는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 질병예측 모델은,서로 다른 상기 복수의 모델들을 앙상블(ensemble)하여 통합된 모델인,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 질병예측 모델은,서로 다른 상기 복수의 모델들 각각에 상기 의료 데이터를 입력하여 출력 데이터를 획득하고, 그리고 상기 출력데이터를 보팅(voting)하여 상기 분석 결과 데이터를 생성하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 복수의 외부 서버들 각각은 복수의 후보 모델들을 포함하며, 그리고상기 복수의 후보 모델들 각각은 상기 복수의 외부 서버들 각각에서 생성된 학습 데이터에 기초하여 학습되는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 학습 데이터는,공개특허 10-2023-0108848-3-상기 복수의 외부 서버들 각각에 기 저장된 데이터들에 기초하여 생성된 제 1 테이블 및 제 2 테이블에서 추출되고,상기 제 1 테이블 및 상기 제 2 테이블은,상기 질병에 관련된 데이터를 포함하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 제 1 테이블은,상기 기 저장된 데이터들 중에서 상기 질병에 대응되는 제 1 환자군; 및상기 기 저장된 데이터들 중에서 상기 질병과 관련된 적어도 하나의 변수;를 포함하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5 항에 있어서,상기 제 2 테이블은,상기 기 저장된 데이터들 중에서 상기 질병에 대응되지 않는 제 2 환자군; 및상기 기 저장된 데이터들 중에서 상기 질병과 관련된 적어도 하나의 변수;를 포함하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 5 항에 있어서,상기 제 1 테이블 및 상기 제 2 테이블 각각에 비정상 데이터가 포함된 경우, 상기 비정상 데이터는 수정 또는삭제되는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 4 항에 있어서,상기 복수의 모델들 중에서 제 1 모델은,상기 복수의 외부 서버들 중에서 제 1 외부 서버에 포함된 제 1 후보 모델들 각각의 성능 점수에 기초하여 상기제 1 후보 모델들 중에서 선택되는,질병을 예측하기 위한 방법.공개특허 10-2023-0108848-4-청구항 10 제 5 항에 있어서,상기 복수의 모델들 각각의 가중치는,상기 복수의 외부 서버들 각각으로부터 수신된 테스트 데이터에 기초하여 결정되고,상기 테스트 데이터는,상기 제 1 테이블 및 상기 제 2 테이블에서 추출되는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 5 항에 있어서,상기 복수의 모델들 각각의 가중치는,상기 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터에 기초하여 결정되고,상기 테스트 데이터는,상기 제 1 테이블 및 상기 제 2 테이블에서 추출되는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1 항에 있어서,상기 질병에 관한 분석 결과 데이터를 생성하는 단계는,상기 질병예측 모델의 서로 다른 상기 복수의 모델들 각각에 상기 의료 데이터를 입력하여 각각의 출력 데이터를 획득하는 단계;상기 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터에 기초하여 결정된 상기 복수의 모델들 각각의 가중치를 상기 각각의 출력 데이터에 적용하는 단계; 및상기 복수의 모델들 각각의 가중치가 적용된 상기 출력 데이터를 보팅하여 상기 분석 결과 데이터를 생성하는단계;를 포함하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 4 항에 있어서,상기 방법은:상기 복수의 외부 서버들 각각이 상기 학습 데이터를 생성하여 상기 복수의 후보 모델들을 학습시키도록 허용하는 제 1 서브 쿼리 및 상기 복수의 외부 서버들 각각이 상기 복수의 후보 모델들 중에서 하나의 모델을 상기 컴퓨팅 장치에 전송하도록 허용하는 제 2 서브 쿼리를 포함하는 쿼리(query)를 생성하는 단계;상기 쿼리를 상기 복수의 외부 서버들 각각에 전송하는 단계; 및상기 복수의 외부 서버들 각각으로부터 서로 다른 상기 복수의 모델들에 대한 정보를 수신하는 단계;공개특허 10-2023-0108848-5-를 더 포함하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 제 1 서브 쿼리는,상기 복수의 외부 서버들 각각이 상기 복수의 외부 서버들 각각에 기 저장된 데이터들 중에서 상기 질병에 대응되는 제 1 환자군을 선별하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 기 저장된 데이터들 중에서 상기 질병에 대응되지 않는 제 2 환자군을 선별하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 기 저장된 데이터들 중에서 상기 질병에 대응되는 적어도 하나의 변수를선별하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 제 1 환자군 및 상기 적어도 하나의 변수를 포함하는 제 1 테이블을 생성하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 제 2 환자군 및 상기 적어도 하나의 변수를 포함하는 제 2 테이블을 생성하도록 허용하고, 그리고상기 복수의 외부 서버들 각각이 상기 제 1 테이블 및 상기 제 2 테이블에서 상기 학습 데이터 및 테스트 데이터를 추출하도록 허용하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 제 1 서브 쿼리는,상기 복수의 외부 서버들 각각이 상기 제 1 테이블 및 상기 제 2 테이블 각각에 비정상 데이터가 포함되었는지여부를 판단하도록 허용하고, 그리고상기 복수의 외부 서버들 각각이 상기 비정상 데이터가 포함되었다고 판단한 경우, 상기 비정상 데이터를 수정또는 삭제하도록 허용하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항에 있어서,상기 제 1 서브 쿼리는,상기 복수의 외부 서버들 각각이 상기 학습 데이터에 기초하여 상기 복수의 후보 모델들을 학습하도록허용하고, 그리고상기 복수의 외부 서버들 각각이 상기 테스트 데이터를 상기 컴퓨팅 장치에 전송하도록 허용하는,질병을 예측하기 위한 방법.공개특허 10-2023-0108848-6-청구항 17 제 13 항에 있어서,상기 제 2 서브 쿼리는,상기 복수의 외부 서버들 각각이 복수의 후보 모델들 중에서 하나의 모델을 선택하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 하나의 모델에 상기 복수의 외부 서버들 중에서 어느 하나의 외부 서버에저장된 테스트 데이터를 이용하여 성능 점수를 산출하도록 허용하고, 그리고상기 복수의 외부 서버들 각각이 상기 성능 점수를 포함하는 상기 하나의 모델에 대한 정보를 상기 컴퓨팅 장치에 전송하도록 허용하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 13 항에 있어서,상기 제 2 서브 쿼리는,상기 복수의 외부 서버들 각각이 상기 복수의 후보 모델들 각각의 성능 점수를 산출하도록 허용하고,상기 복수의 외부 서버들 각각이 상기 성능 점수에 기초하여 상기 복수의 후보 모델들 중에서 하나의 모델을 선택하도록 허용하고, 그리고상기 복수의 외부 서버들 각각이 선택된 상기 하나의 모델에 대한 정보를 상기 컴퓨팅 장치에 전송하도록 허용하는,질병을 예측하기 위한 방법."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 질병을 예측하기 위한 컴퓨팅 장치의 프로세서로 하여금 이하의 단계들을 수행하기 위한 명령들을 포함하며, 상기 단계들은:적어도 하나의 외부 기기로부터 의료 데이터를 수신하는 단계; 및상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하는 단계;를 포함하고,상기 질병예측 모델은,복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성되는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2022-0004467", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "질병을 예측하기 위한 컴퓨팅 장치에 있어서,프로세서;상기 프로세서에 의해 실행가능한 컴퓨터 프로그램을 저장하는 메모리; 및네트워크부;를 포함하고,공개특허 10-2023-0108848-7-상기 프로세서는,적어도 하나의 외부 기기로부터 의료 데이터를 수신하고, 그리고상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하며,상기 질병예측 모델은,복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성되는,컴퓨팅 장치."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 몇몇 실시예에 따른 하나 이상의 프로세서를 포함하는 컴퓨팅 장치에 의해 수행되는 질병을 예측하기 위한 방법으로서, 상기 방법은: 적어도 하나의 외부 기기로부터 의료 데이터를 수신하는 단계; 및 상기 의료 데 이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하는 단계;를 포함하고, 상기 질병예측 모델은, 복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성될 수 있다."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 인공지능 기술에 관한 것으로, 보다 구체적으로, 인공지능 기반의 질병 예측 모델을 이용하여 질병을 예측하기 위한 방법에 관한 것이다."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 수년간 딥러닝(deep-learning)을 포함하는 머신러닝(machine-learning) 기술은 영상, 음성 및 텍스트 등 다양한 형태의 데이터 분석에서 기존 방법의 성능을 뛰어 넘는 결과를 보이며 주목받아 왔다. 또한, 머신러닝 기술은 기술 자체에 내재된 확장성 및 유연성으로 인해 다양한 분야에 도입되어 활용되고 있다. 머신러닝 기술이 적용될 수 있는 다양한 분야 중에서도 의료 분야는 진단 보조 시스템 및 질병 예측 시스템을 개발하기 위해 기계학습 기술을 가장 활발하게 도입하고 있는 분야 중 하나에 해당한다. 머신러닝 모델이 특정한 도메인에 적절히 활용되기 위해서는, 방대한 양의 학습 데이터가 필요하다. 의료 데이 터는 개인 정보의 일환으로서 특히, 환자의 진료 정보 및 처방 정보 등에 대해서는 개인 의료 정보에 해당하여 학습 데이터로서의 사용 가능성이 낮아, 이러한 의료 분야에서의 머신러닝 기술이 적용되기 위해서는 개인 정보 를 보호하면서 방대한 양의 학습 데이터를 확보하는 것이 선제적으로 요구된다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 공개특허 제10-2002-0083373호(2004.07.01. 공개)"}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 의료 데이터에 대한 보안을 유지하는 방식으로 질병 예 측 모델을 이용하여 질병을 예측하기 위한 방법을 제공하고자 한다. 본 개시의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과 제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 해결하기 위한 본 개시의 몇몇 실시예에 따라, 하나 이상의 프로세서를 포함하는 컴퓨 팅 장치에 의해 수행되는 질병을 예측하기 위한 방법으로서, 상기 방법은: 적어도 하나의 외부 기기로부터 의료 데이터를 수신하는 단계; 및 상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하는 단계;를 포함하고, 상기 질병예측 모델은, 복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성될 수 있다. 대안적으로, 상기 질병예측 모델은, 서로 다른 상기 복수의 모델들을 앙상블(ensemble)하여 통합된 모델일 수 있다. 대안적으로, 상기 질병예측 모델은, 서로 다른 상기 복수의 모델들 각각에 상기 의료 데이터를 입력하여 출력 데이터를 획득하고, 그리고 상기 출력 데이터를 보팅(voting)하여 상기 분석 결과 데이터를 생성할 수 있다. 대안적으로, 상기 복수의 외부 서버들 각각은 복수의 후보 모델들을 포함하며, 그리고 상기 복수의 후보 모델들 각각은 상기 복수의 외부 서버들 각각에서 생성된 학습 데이터에 기초하여 학습될 수 있다. 대안적으로, 상기 학습 데이터는, 상기 복수의 외부 서버들 각각에 기 저장된 데이터들에 기초하여 생성된 제 1 테이블 및 제 2 테이블에서 추출되고, 상기 제 1 테이블 및 상기 제 2 테이블은, 상기 질병에 관련된 데이터를 포함할 수 있다. 대안적으로, 상기 제 1 테이블은, 상기 기 저장된 데이터들 중에서 상기 질병에 대응되는 제 1 환자군; 및 상기 기 저장된 데이터들 중에서 상기 질병과 관련된 적어도 하나의 변수;를 포함할 수 있다. 대안적으로, 상기 제 2 테이블은, 상기 기 저장된 데이터들 중에서 상기 질병에 대응되지 않는 제 2 환자군; 및 상기 기 저장된 데이터들 중에서 상기 질병과 관련된 적어도 하나의 변수;를 포함할 수 있다. 대안적으로, 상기 제 1 테이블 및 상기 제 2 테이블 각각에 비정상 데이터가 포함된 경우, 상기 비정상 데이터 는 수정 또는 삭제될 수 있다. 대안적으로, 상기 복수의 모델들 중에서 제 1 모델은, 상기 복수의 외부 서버들 중에서 제 1 외부 서버에 포함 된 제 1 후보 모델들 각각의 성능 점수에 기초하여 상기 제 1 후보 모델들 중에서 선택될 수 있다. 대안적으로, 상기 복수의 모델들 각각의 가중치는, 상기 복수의 외부 서버들 각각으로부터 수신된 테스트 데이 터에 기초하여 결정되고, 상기 테스트 데이터는, 상기 제 1 테이블 및 상기 제 2 테이블에서 추출될 수 있다. 대안적으로, 상기 복수의 모델들 각각의 가중치는, 상기 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터에 기초하여 결정되고, 상기 테스트 데이터는, 상기 제 1 테이블 및 상기 제 2 테이블에서 추출될 수 있다. 대안적으로, 상기 질병에 관한 분석 결과 데이터를 생성하는 단계는, 상기 질병예측 모델의 서로 다른 상기 복 수의 모델들 각각에 상기 의료 데이터를 입력하여 각각의 출력 데이터를 획득하는 단계; 상기 복수의 외부 서버 들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터에 기초하여 결정된 상기 복수의 모델들 각각의 가중 치를 상기 각각의 출력 데이터에 적용하는 단계; 및 상기 복수의 모델들 각각의 가중치가 적용된 상기 출력 데 이터를 보팅하여 상기 분석 결과 데이터를 생성하는 단계;를 포함할 수 있다. 대안적으로, 상기 방법은: 상기 복수의 외부 서버들 각각이 상기 학습 데이터를 생성하여 상기 복수의 후보 모 델들을 학습시키도록 허용하는 제 1 서브 쿼리 및 상기 복수의 외부 서버들 각각이 상기 복수의 후보 모델들 중 에서 하나의 모델을 상기 컴퓨팅 장치에 전송하도록 허용하는 제 2 서브 쿼리를 포함하는 쿼리(query)를 생성하 는 단계; 상기 쿼리를 상기 복수의 외부 서버들 각각에 전송하는 단계; 및 상기 복수의 외부 서버들 각각으로부 터 서로 다른 상기 복수의 모델들에 대한 정보를 수신하는 단계;를 더 포함할 수 있다. 대안적으로, 상기 제 1 서브 쿼리는, 상기 복수의 외부 서버들 각각이 상기 복수의 외부 서버들 각각에 기 저장 된 데이터들 중에서 상기 질병에 대응되는 제 1 환자군을 선별하도록 허용하고, 상기 복수의 외부 서버들 각각 이 상기 기 저장된 데이터들 중에서 상기 질병에 대응되지 않는 제 2 환자군을 선별하도록 허용하고, 상기 복수 의 외부 서버들 각각이 상기 기 저장된 데이터들 중에서 상기 질병에 대응되는 적어도 하나의 변수를 선별하도 록 허용하고, 상기 복수의 외부 서버들 각각이 상기 제 1 환자군 및 상기 적어도 하나의 변수를 포함하는 제 1 테이블을 생성하도록 허용하고, 상기 복수의 외부 서버들 각각이 상기 제 2 환자군 및 상기 적어도 하나의 변수 를 포함하는 제 2 테이블을 생성하도록 허용하고, 그리고 상기 복수의 외부 서버들 각각이 상기 제 1 테이블 및 상기 제 2 테이블에서 상기 학습 데이터 및 테스트 데이터를 추출하도록 허용할 수 있다. 대안적으로, 상기 제 1 서브 쿼리는, 상기 복수의 외부 서버들 각각이 상기 제 1 테이블 및 상기 제 2 테이블 각각에 비정상 데이터가 포함되었는지 여부를 판단하도록 허용하고, 그리고 상기 복수의 외부 서버들 각각이 상 기 비정상 데이터가 포함되었다고 판단한 경우, 상기 비정상 데이터를 수정 또는 삭제하도록 허용할 수 있다. 대안적으로, 상기 제 1 서브 쿼리는, 상기 복수의 외부 서버들 각각이 상기 학습 데이터에 기초하여 상기 복수 의 후보 모델들을 학습하도록 허용하고, 그리고 상기 복수의 외부 서버들 각각이 상기 테스트 데이터를 상기 컴 퓨팅 장치에 전송하도록 허용할 수 있다.대안적으로, 상기 제 2 서브 쿼리는, 상기 복수의 외부 서버들 각각이 복수의 후보 모델들 중에서 하나의 모델 을 선택하도록 허용하고, 상기 복수의 외부 서버들 각각이 상기 하나의 모델에 상기 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터를 이용하여 성능 점수를 산출하도록 허용하고, 상기 복수의 외 부 서버들 각각이 상기 성능 점수를 포함하는 상기 하나의 모델에 대한 정보를 상기 컴퓨팅 장치에 전송하도록 허용할 수 있다. 대안적으로, 상기 제 2 서브 쿼리는, 상기 복수의 외부 서버들 각각이 상기 복수의 후보 모델들 각각의 성능 점 수를 산출하도록 허용하고, 상기 복수의 외부 서버들 각각이 상기 성능 점수에 기초하여 상기 복수의 후보 모델 들 중에서 하나의 모델을 선택하도록 허용하고, 그리고 상기 복수의 외부 서버들 각각이 선택된 상기 하나의 모 델에 대한 정보를 상기 컴퓨팅 장치에 전송하도록 허용할 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 몇몇 다른 실시예에 따른 컴퓨터 판독가능 저장 매체에 저장 된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 질병을 예측하기 위한 컴퓨팅 장치의 프로세서로 하여금 이 하의 단계들을 수행하기 위한 명령들을 포함하며, 상기 단계들은: 적어도 하나의 외부 기기로부터 의료 데이터 를 수신하는 단계; 및 상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하 는 단계;를 포함하고, 상기 질병예측 모델은, 복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델 들에 기초하여 생성될 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 몇몇 또 다른 실시예에 따른 질병을 예측하기 위한 컴퓨팅 장치에 있어서, 프로세서; 상기 프로세서에 의해 실행가능한 컴퓨터 프로그램을 저장하는 메모리; 및 네트워크 부;를 포함하고, 상기 프로세서는, 적어도 하나의 외부 기기로부터 의료 데이터를 수신하고, 그리고 상기 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성하며, 상기 질병예측 모델은, 복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 생성될 수 있다."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 의료 데이터에 대한 보안을 유지하는 방식으로 질병 예측 모델을 이용하여 질병을 예측할 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0004467", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, \"A 또는 B 중 적어도 하나\"이라는 용어는, \"A만을 포함하는 경우\", \"B 만을 포함하는 경우\", \"A와 B의 구성으로 조합된 경우\"를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개 시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서 네트워크 함수와 인공 신경망 및 뉴럴 네트워크(neural network)는 상호교환가능하게 사용될 수 있 다. 도 1은 본 개시의 몇몇 실시예에 따른 질병을 예측하기 위한 시스템을 설명하기 위한 도면이다. 도 1을 참조하면, 본 개시의 몇몇 실시예에 따른 질병을 예측하기 위한 시스템은 컴퓨팅 장치, 복수의 외 부 서버들(예를 들어, 200a. 200b, …, 200N), 외부 기기 및 네트워크를 포함할 수 있다. 다만, 상술한 구성 요소들은 시스템을 구현하는데 있어서, 필수적인 것은 아니며, 시스템은 위에 열거된 구성요소들보다 많거나, 또는 적은 구성요소들을 가질 수 있다. 먼저 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치는 질병을 예측하기 위한 장치일 수 있다. 예를 들어, 컴 퓨팅 장치는 인공지능 기반의 질병예측 모델을 이용하여 질병을 예측하는 장치일 수 있다. 컴퓨팅 장치 는 임의의 형태의 서버 또는 사용자 단말을 포함할 수 있다. 컴퓨팅 장치에 대한 구체적인 설명은 도 2를 참조하여 후술한다. 도 2는 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치를 설명하기 위한 도면이다. 도 2에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 컴퓨팅 장치는 하나 이상의 프로세서, 메모리 및 네트워크부를 포함할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝(DL: deep learning)을 포함하는 머신러닝을 위한 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 기계 학습을 위한 데이터 처리를 수행할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 네트워크 함수의 학습을 위한 연산을 수행할 수 있다. 프로세서는 머신러닝에서 학습을 위한 입력 데이터 의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역전파(backpropagation)를 이용한 네트워크 함수의 가중치 업데이트 등의 네트워크 함수의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있 다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행 가능 프로그램일 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 네트 워크부가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장 치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관 련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따른 네트워크부는 임의의 형태의 데이터 및 신호 등을 송수신할 수 있는 임의의 유무선 통신 네트워크가 본 개시 내용에서 표현되는 네트워크에 포함될 수 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크들에서도 사용될 수 있다. 도 3은 본 개시의 몇몇 실시예에 따른 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크, 적대적 생 성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 반교사학습(semi supervised learning), 또는 강화학습(reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정 일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학 습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이 어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가 중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하 여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 본 개시의 일 실시예에 따라 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자 정의 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매체(예를 들어, 영구 저장 장치)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨팅 장치는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산 을 수행할 수 있다. 구체적으로 컴퓨팅 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트 (List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다.비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 이하에서는 신경망으로 통일하여 기술한다. 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등을 포함할 수 있다. 신경망을 포함한 데이터 구조는 상기 개시된 구성들 중 임의의 구성 요소들을 포함 할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력 되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등 전부 또는 이들의 임의의 조합을 포함하 여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발생되는 모든 형태의 데 이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망 은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습 데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는 전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 가중치에 기초하여 출력 노드에서 출력되는 데이터 값을 결정할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및 /또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨팅 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨팅 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨팅 장치 또는 다른 컴퓨팅 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데이터 구조에서 B-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다. 데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 다시 도 2를 참조하면, 컴퓨팅 장치의 프로세서는 적어도 하나의 외부 기기로부터 의료 데이터 를 수신할 수 있다. 의료 데이터는 특정 사람의 의료에 관련된 정보를 포함할 수 있다. 예를 들어, 의료 데이터는 의료 분야에 있어 서 적어도 하나의 질병과 관련된 변수를 포함할 수 있다. 예를 들어, 의료 데이터는 특정 사람의 건강정보, 진 료정보 등을 포함하는 데이터로, 특정 사람의 CT 영상 데이터, MRI 검사 결과 데이터, 심전도 측정 결과 데이터, 전자의무기록(Electronic medical record, EMR) 데이터 등을 포함할 수 있다. 변수는 생활 습관(음주, 흡연), 가족력, 나이, 성별, 콜레스테롤 수치, 유전자 관련 변수 등 질병과 관련될 수 있다. 의료 데이터는 공통 데이터 모델(Common Data Model, CDM)로 변환된 형태의 데이터일 수 있다. 공통 데이터 모 델은 서로 다른 구조의 데이터를 서로 동일한 구조의 데이터로 변환하기 위해 설정된 규격일 수 있다. 예를 들 어, 공통 데이터 모델은 서로 다른 병원에 저장된 서로 다른 구조의 전자의무기록 데이터를 서로 동일한 구조의 데이터로 변환하기 위한 규격일 수 있다. 의료 데이터는 서로 다른 구조, 용어 및 코드를 가지는 개인정보가 노 출된 전자의무기록 데이터들을 서로 동일한 구조, 용어 및 코드를 가지는 익명화 된 공통 데이터 모델로 변환한 형태의 데이터일 수 있다. 다만, 이에 한정되지 않으며, 의료 데이터는 다양한 형태의 데이터일 수 있다. 프로세서는 외부 기기로부터 수신한 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결 과 데이터를 생성할 수 있다. 본 개시내용에서의 질병은 심신의 전체 또는 일부가 일차적 또는 계속적으로 장애를 일으켜서 정상적인 기능을 할 수 없는 상태로, 감염성 질환 및 비감염성 질환을 포함할 수 있다. 감염성 질환은 바이러스, 세균, 곰팡이, 기생충과 같이 질병을 일으키는 병원체가 동물이나 인간에게 전파 또는 침입하여 일으키는 질환을 의미할 수 있 다. 반면, 비감염성 질환은 병원체 없이 발생되는 질환을 의미할 수 있다. 예를 들어, 비감염성 질환은 당뇨병, 고혈압, 고지혈증, 심뇌혈관 질환 등을 의미할 수 있다. 질병예측 모델은 복수의 외부 서버들 각각으로부터 수신된 서로 다른 복수의 모델들에 기초하여 프로세서 에 의해 생성될 수 있다. 질병예측 모델은 서로 다른 복수의 모델들을 앙상블(ensemble)하여 통합된 모델 일 수 있다. 질병예측 모델에 대한 자세한 설명은 도 4를 참조하여 후술한다. 도 4는 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치의 질병예측 모델을 설명하기 위한 도면이다. 도 4에서는 질 병 예측 모델에서 의료 데이터를 입력으로 할 때의 인퍼런스(inference) 과정이 예시적으로 설명된다. 도 4를 참조하면, 질병예측 모델은 복수의 외부 서버들로부터 각각 수신한 복수의 모델들을 포함 할 수 있다. 예를 들어, 질병예측 모델은 복수의 외부 서버들 각각에서 학습이 완료된 복수의 모델들 에 대한 정보를 수신할 수 있다. 일례로, 상기 복수의 모델들에 대한 정보는 모델의 가중치 정보, 파라 미터 정보, 학습 방식에 대한 정보 및/또는 모델의 구조에 대한 정보 중 적어도 하나를 포함할 수 있다. 복수의 모델들은 적어도 하나의 인공지능 모델을 포함할 수 있다. 예를 들어, 복수의 모델들은 GBM(Gradient Boosting Model), 랜덤 포레스트(Random Forest), XGBoost(eXtreme Gradient Boosting), 네트워 크 함수 등을 포함할 수 있다. GBM(Gradient Boosting Model)는 이전 트리의 오차를 보완하는 방식으로 복수의 트리를 순차적으로 연결되도록 구축하여 최종 트리에서 예측된 값을 최종 값으로 결정할 수 있다. 랜덤 포레스트(Random Forest)는 변수를 무작위로 선택하여 복수의 트리를 구축하고, 복수의 트리에서 각각 예 측된 확률들의 평균치를 최종 값으로 결정할 수 있다. XGBoost(eXtreme Gradient Boosting)는 GBM에 기반한 알고리즘으로, 반복 수행마다 교차검증을 수행하여 최적 화된 횟수를 선택할 수 있다. 네트워크 함수는 앞서 도 3을 참조하여 상술한 내용으로 대체될 수 있다. 복수의 모델들은 복수의 외부 서버들 각각에 포함된 복수의 후보 모델들 각각의 성능 점수에 기초하여 복수의 후보 모델들 중에서 각각 선택된 모델의 집합일 수 있다. 성능 점수는 후보 모델의 정확도와 관련될 수 있고, 후보 모델에 테스트 데이터를 입력하여 출력된 값에 기초하여 측정될 수 있다. 예를 들어, 테스트 데이터 가 특정 질병이 존재하는 것으로 라벨링된 경우, 성능 점수는 후보 모델에서 출력된 값이 1에 가까울수록 높게 측정될 수 있다. 다만, 이에 한정되지 않으며, 성능 점수는 후보 모델들에 따라 다양한 방법으로 측정될 수 있 다. 테스트 데이터는 복수의 외부 서버들 각각에서 생성되는 데이터일 수 있다. 그리고, 복수의 모델들 중에서 제 1 모델(11a)은 제 1 외부 서버(200a)에 포함된 제 1 후보 모델들 각각의 성능 점수에 기초하여 제 1 후보 모델들 중에서 선택된 모델일 수 있다. 복수의 모델들 중에서 제 2 모델 (11b)은 제 2 외부 서버(200b)에 포함된 제 2 후보 모델들 각각의 성능 점수에 기초하여 제 2 후보 모델들 중에 서 선택된 모델일 수 있다. 복수의 모델들 중에서 제 N 모델(11N)은 제 N 외부 서버(200N)에 포함된 제 N 후보 모델들 각각의 성능 점수에 기초하여 제 N 후보 모델들 중에서 선택된 모델일 수 있다. 질병예측 모델은 서로 다른 복수의 모델들 각각에 외부 기기로부터 수신한 의료 데이터를 입 력하여 출력 데이터를 획득할 수 있다. 예를 들어, 질병예측 모델은 제 1 모델(11a)에 의료 데이터(2 0)를 입력하여 제 1 출력 데이터(12a)를 획득할 수 있다. 질병예측 모델은 제 2 모델(11b)에 의료 데이터 를 입력하여 제 2 출력 데이터(12b)를 획득할 수 있다. 질병예측 모델은 제 N 모델(11N)에 의료 데이터 를 입력하여 제 N 출력 데이터(12N)를 획득할 수 있다. 질병예측 모델은 출력 데이터를 보팅(voting)하여 분석 결과 데이터를 생성할 수 있다. 보팅 은 하드 보팅(hard voting) 및 소프트 보팅(soft voting)을 포함할 수 있다. 하드 보팅은 출력 데이터 중에서 가장 중복이 많이 되는 값을 기준으로 질병의 유무에 대한 정보를 생성할 수 있다. 소프트 보팅은 출력 데이터의 평균치 또는 가중 평균치에 기초하여 질병의 확률에 대한 정보를 생성할 수 있다. 가중 평균치는 출력 데이터에 복수의 모델들 각각의 가중치를 적용한 후에 산출된 평균치일 수 있다. 질병예측 모델은 하드 보팅을 통해 질병 유무에 대한 정보를 포함하는 분석 결과 데이터를 생성할 수 있다. 그리고, 질병예측 모델은 질병의 확률에 대한 정보를 포함하는 분석 결과 데이터를 생성할 수 있 다. 상술한 바와 같이, 분석 결과 데이터는 질병의 유무 또는 확률 중 적어도 하나를 포함하는 정보를 포함 할 수 있다. 그리고, 컴퓨팅 장치는 분석 결과 데이터를 네트워크부를 통해 외부 기기에 전송할 수 있다. 다시 도 2를 참조하면, 프로세서는 복수의 외부 서버들 각각이 학습 데이터를 생성하여 복수의 후보 모델들을 학습시키도록 허용하는 제 1 서브 쿼리 및 복수의 외부 서버들 각각이 복수의 후보 모델들 중에 서 하나의 모델을 컴퓨팅 장치에 전송하도록 허용하는 제 2 서브 쿼리를 포함하는 쿼리(query)를 생성할 수 있다. 프로세서는 생성된 쿼리를 네트워크부를 통해 복수의 외부 서버들 각각에 전송할 수 있다. 프로세서는 복수의 외부 서버들 각각으로부터 서로 다른 복수의 모델들에 대한 정보를 수 신할 수 있다. 따라서, 복수의 모델들 각각은 복수의 외부 서버들 각각에서 생성된 학습 데이터에 기 초하여 학습된 상태일 수 있다. 쿼리는 복수의 외부 서버들 각각에 저장되어 있는 데이터에 대해서 어떠한 조작을 하기 원하는지를 기술한 적어도 하나의 코드를 포함하고, SQL(Structured Query Language)과 같은 언어로 표현될 수 있다. 여기서, 복수 의 외부 서버들은 각각 컴퓨팅 장치로부터 특정 쿼리를 수신하는 경우, 수신한 쿼리에 대응하여 원하 는 출력을 제공할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 복수의 외부 서버들 각각에 기 저장된 데이터들 중에서 질병에 대응되는 제 1 환자군을 선별하도록 허용할 수 있다. 제 1 환자군은 기 저장된 데이터들 중에서 질병에 대응되는 환자의 집단일 수 있다. 제 1 환자군은 환자군을 식별하기 위한 번호, 환자군에 포함된 환자의 번호,환자가 환자군에 포함된 날짜, 환자가 환자군에서 제외된 날짜 등의 정보를 포함할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 기 저장된 데이터들 중에서 질병에 대응되지 않는 제 2 환자 군을 선별하도록 허용할 수 있다. 제 2 환자군은 기 저장된 데이터들 중에서 질병에 대응되지 않는 환자의 집단 일 수 있다. 제 2 환자군은 환자군을 식별하기 위한 번호, 환자군에 포함된 환자의 번호, 환자가 환자군에 포함 된 날짜, 환자가 환자군에서 제외된 날짜 등의 정보를 포함할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 기 저장된 데이터들 중에서 질병에 대응되는 적어도 하나의 변수를 선별하도록 허용할 수 있다. 적어도 하나의 변수는 기 저장된 데이터들 중에서 질병과 관련된 인자들을 의미할 수 있다. 예를 들어, 적어도 하나의 변수는 2형 당뇨 여부, 성별, 나이, 흡연 여부, 음주 여부, 고혈압 여부, 고지혈증 여부, 수축기 혈압, 당화혈색소 수치, ALT(alanine aminotransferase) 수치, 고밀도 콜레스테롤 수치, 이완기 혈압, 혈중 요소 질소 수치, AST(aspartate aminotransferase) 수치, 크레아티닌 수치, 트리글리 세리드 수치, 알부민 수치, 콜레스테롤 수치, 헤모글로빈 수치, 저밀도 콜레스테롤 수치, 공복 혈당 수치, BMI 수치 등을 포함할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 제 1 환자군 및 적어도 하나의 변수를 포함하는 제 1 테이블 을 생성하도록 허용할 수 있다. 제 1 테이블은 제 1 환자군, 적어도 하나의 변수 및 제 1 환자군에 대응되는 적 어도 하나의 변수에 대한 값이 기재된 표 형태의 데이터일 수 있다. 복수의 외부 서버들 각각은 제 1 테이 블에서 질병이 존재하는 경우로 라벨링되는 학습 데이터 및/또는 테스트 데이터를 추출할 수 있다. 복수의 외부 서버들 각각은 제 1 서브 쿼리에 대응하여 학습 데이터와 테스트 데이터를 기 설정된 비율로 추출할 수 있 다. 예를 들어, 복수의 외부 서버들 각각은 제 1 서브 쿼리에 대응하여 학습 데이터와 테스트 데이터를 6:4 내지 8:2의 비율로 추출할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 제 2 환자군 및 적어도 하나의 변수를 포함하는 제 2 테이블 을 생성하도록 허용할 수 있다. 제 2 테이블은 제 2 환자군, 적어도 하나의 변수 및 제 2 환자군에 대응되는 적 어도 하나의 변수에 대한 값이 기재된 표 형태의 데이터일 수 있다. 복수의 외부 서버들 각각은 제 2 테이 블에서 질병이 존재하지 않는 경우로 라벨링되는 학습 데이터 및/또는 테스트 데이터를 추출할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 제 1 테이블 및 제 2 테이블에서 학습 데이터 및/또는 테스 트 데이터를 추출하도록 허용할 수 있다. 복수의 외부 서버들 각각은 질병의 유무에 따른 데이터 개수의 불균형을 교정하기 위해 다운샘플링(down sampling)을 통해 제 1 테이블 및 제 2 테이블에서 학습 데이터 및/또 는 테스트 데이터를 추출할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 제 1 테이블 및 제 2 테이블 각각에 비정상 데이터가 포함되 었는지 여부를 판단하도록 허용할 수 있다. 비정상 데이터는 결측 데이터, 이상 데이터 또는 범주형 변수 데이 터 중 적어도 하나를 포함할 수 있다. 결측 데이터는 데이터가 누락되어 데이터가 없는 상태일 수 있다. 이상 데이터는 기 설정된 범위를 벗어나는 값을 포함하는 데이터일 수 있다. 범주형 변수 데이터는 0 또는 1로만 표 현되는 변수를 포함하는 데이터일 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 비정상 데이터가 포함되었다고 판단한 경우, 비정상 데이터 를 수정 또는 삭제하도록 허용할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 학습 데이터에 기초하여 복수의 후보 모델들을 학습하도록 허용할 수 있다. 제 1 서브 쿼리는 복수의 외부 서버들 각각이 테스트 데이터를 컴퓨팅 장치에 전송하도록 허용할 수 있다. 한편, 제 2 서브 쿼리는 복수의 외부 서버들 각각이 복수의 후보 모델들 각각의 성능 점수를 산출하도록 허용할 수 있다. 제 2 서브 쿼리는 복수의 외부 서버들 각각이 성능 점수에 기초하여 복수의 후보 모델들 중에서 하나의 모 델을 선택하도록 허용할 수 있다. 제 2 서브 쿼리는 복수의 외부 서버들 각각이 선택된 하나의 모델에 대한 정보를 컴퓨팅 장치에 전송 하도록 허용할 수 있다. 본 개시의 몇몇 다른 실시예에 따르면, 제 2 서브 쿼리는 복수의 외부 서버들 각각이 복수의 후보 모델들 중에서 하나의 모델을 선택하도록 허용할 수 있다. 예를 들어, 제 2 서브 쿼리는 복수의 외부 서버들 각각 이 복수의 외부 서버들 각각에 저장된 테스트 데이터를 이용하여 복수의 후보 모델들 각각의 성능 점수를 산출하고, 성능 점수에 기초하여 복수의 외부 서버들 각각에서 하나의 모델을 선택하도록 허용할 수 있다. 제 2 서브 쿼리는 복수의 외부 서버들 각각이 하나의 모델에 복수의 외부 서버들 중에서 어느 하나의 외부 서버(예를 들어, 제 1 외부 서버(200a))에 저장된 테스트 데이터를 이용하여 성능 점수를 산출하도록 허용 할 수 있다. 예를 들어, 제 2 서브 쿼리는 복수의 외부 서버들 각각이 복수의 외부 서버들 각각에서 선택된 복수의 모델들에 복수의 외부 서버들 중에서 어느 하나의 외부 서버(예를 들어, 제 N 외부 서버 (200N))에 저장된 테스트 데이터를 이용하여 복수의 모델들 각각의 성능 점수를 재산출하도록 허용할 수 있다. 따라서, 복수의 후보 모델들 중에서 하나의 모델을 선택할 때 복수의 외부 서버들 각각에 저장된 테스트 데이터를 이용하여 산출된 모델의 성능 점수와, 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장 된 테스트 데이터를 이용하여 재산출된 모델의 성능 점수는 서로 다를 수 있다. 제 2 서브 쿼리는 복수의 외부 서버들 각각이 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터를 이용하여 재산출된 성능 점수를 포함하는 선택된 하나의 모델에 대한 정보를 복수의 외 부 서버들 각각의 네트워크부를 통해 컴퓨팅 장치에 전송하도록 허용할 수 있다. 한편, 프로세서는 기 설정된 플랫폼에 기초하여 쿼리를 생성할 수 있다. 기 설정된 플랫폼은 복수의 외부 서버들 각각과 연동되어 있을 수 있다. 예를 들어, 기 설정된 플랫폼은 복수의 외부 서버들 각각의 저장부와 연동되어 있을 수 있다. 컴퓨팅 장치는 기 설정된 플랫폼이 저장부에 저장되어 있거나, 기 설정 된 플랫폼과 네트워크를 통해 연결되어 있을 수 있다. 상술한 제 1 서브 쿼리 및 제 2 서브 쿼리를 포함하는 쿼리를 통해 복수의 외부 서버들 각각에서 수행되는 과정에 대한 자세한 설명은 복수의 외부 서버들을 참조하여 후술한다. 다시 도 1을 참조하면, 복수의 외부 서버들 각각은 프로세서, 메모리 및 네트워크부를 포함할 수 있다. 그 리고, 복수의 외부 서버들 각각은 복수의 후보 모델들 및 기 저장된 데이터들을 포함할 수 있다. 여기서, 복수의 외부 서버들 각각은 서로 다른 기 저장된 데이터들을 가지고 있을 수 있다. 예를 들어, 제 1 외부 서버(200a)에 기 저장된 데이터와 제 2 외부 서버(200b)에 기 저장된 데이터는 서로 다를 수 있다. 예를 들어, 복수의 외부 서버들 각각은 의료 기관(예를 들어, 병원)에 구축되어 있는 서버일 수 있다. 복 수의 외부 서버들 각각은 각각의 의료 기관에서 업무를 수행하면서 발생되는 복수의 의료 데이터들이 각각 저장될 수 있다. 복수의 외부 서버들 각각의 프로세서, 메모리 및 네트워크부는 컴퓨팅 장치의 프로세서, 메모리 및 네트워크부와 유사하며 설명이 중복되는 부분은 생략할 수 있다. 다음으로, 복수의 외부 서버들 각각에서 컴퓨팅 장치로부터 수신한 쿼리에 대응하여 수행되는 구체적 인 과정을 후술한다. 복수의 외부 서버들 각각은 학습 데이터를 복수의 외부 서버들 각각에 기 저장된 데이터들에 기초하 여 생성된 제 1 테이블 및 제 2 테이블에서 추출할 수 있다. 기 저장된 데이터들은 복수의 외부 서버들 각 각의 전자의무기록(Electronic medical record, EMR)에서 수집된 의료 데이터들이 공통 데이터 모델(Common Data Model, CDM)로 변환된 형태일 수 있다. 예를 들어, 기 저장된 데이터들 중에서 제 1 데이터들은 제 1 외부 서버(200a)의 전자의무기록에서 수집된 의료 데이터들이 공통 데이터 모델로 변환된 형태일 수 있다. 제 1 테이블 및 제 2 테이블은 질병에 관련된 데이터를 포함할 수 있다. 제 1 테이블에 관한 자세한 설명은 도 5 및 도 6를 참조하여 후술하도록 한다. 도 5는 본 개시의 몇몇 실시예에 따른 제 1 테이블을 설명하기 위한 도면이고, 도 6은 본 개시의 몇몇 실시예에 따른 제 1 환자군을 설명하기 위한 도면이다. 먼저 도 5를 참조하면, 제 1 테이블은 제 1 환자군 및 적어도 하나의 변수를 포함할 수 있다. 제 1 환자군은 기 저장된 데이터들 중에서 질병에 대응되는 환자들의 집단을 의미할 수 있다. 여기서, 도 6을 참 조하면, 제 1 환자군은 환자군을 식별하기 위한 번호(Cohort_definition_id), 환자군에 포함된 환자의 번호 (Subject_id), 환자가 환자군에 포함된 날짜(Cohort_start_date), 환자가 환자군에서 제외된 날짜 (Cohort_end_date) 등의 정보를 포함할 수 있다. 환자군을 식별하기 위한 번호는 환자군에 따라 서로 다르게 설 정될 수 있다. 따라서, 동일한 환자군에 속한 환자들은 환자군을 식별하기 위한 번호가 서로 동일할 수 있다. 환자군에 포함된 환자의 번호는 복수의 외부 서버들 각각에 저장된 번호와 상이하고, 무작위로 부여된 번 호일 수 있다. 따라서, 환자군에 포함된 환자의 번호를 통해 환자 개인에 대한 정보를 파악할 수 없으므로, 학 습 데이터가 외부에 공개되더라도 환자 개인정보는 유출되지 않는다. 다시 도 5를 참조하면, 제 1 테이블은 제 1 환자군과 적어도 하나의 변수를 조인(join)한 형태일 수 있다. 적어도 하나의 변수는 기 저장된 데이터들 중에서 질병과 관련된 인자들을 의미할 수 있다. 예를 들어, 적어도 하나의 변수는 2형 당뇨 여부(dm), 성별(sex), 나이(age), 흡연 여부(smoke), 음주 여부 (drink), 고혈압 여부(hypertension), 고지혈증 여부(hyperlipidemia), 수축기 혈압(SBP), 당화혈색소 수치 (HbA1c), ALT(alanine aminotransferase) 수치(ALT), 고밀도 콜레스테롤 수치(HDL), 이완기 혈압(DBP), 혈중 요소 질소 수치(BUN), AST(aspartate aminotransferase) 수치(AST), 크레아티닌 수치(creatinine), 트리글리세 리드 수치(triglyceride), 알부민 수치(albumin), 콜레스테롤 수치(cholesterol), 헤모글로빈 수치 (hemoglobin), 저밀도 콜레스테롤 수치(LDL), 공복 혈당 수치(Glucose_pre_meal), BMI 수치(BMI) 등을 포함할 수 있다. 다만, 적어도 하나의 변수는 이에 한정되지 않으며, 질병에 따라 다양한 변수를 포함할 수 있다. 적어도 하나의 변수는 복수의 외부 서버들 각각에 포함된 단계선택(stepwise) 방식에 기초하여 사전에 구축된 질병을 예측하는 로지스틱 회귀(logistic regression) 모델에서 가장 높은 성능을 보일 때 선택된 적어 도 하나의 변수를 포함할 수 있다. 또한, 적어도 하나의 변수는 임상적 검토에 의하여 질병의 예측과 밀접 한 연관이 있다고 판단되는 기 설정된 지정변수를 포함할 수도 있다. 한편, 제 2 테이블은 제 2 환자군 및 기 저장된 데이터들 중에서 질병과 관련된 적어도 하나의 변수를 포함할 수 있다. 제 2 환자군은 기 저장된 데이터들 중에서 질병에 대응되지 않는 환자들의 집단일 수 있다. 제 2 환자 군은 제 1 환자군과 질병의 대응 여부만 서로 차이가 있고, 그 이외의 구성은 유사하므로 구체적인 설명은 상술 한 제 1 환자군에 대한 설명으로 대체할 수 있다. 한편, 제 1 테이블 및 제 2 테이블 각각에 비정상 데이터가 포함된 경우, 비정상 데이터는 수정 또는 삭제될 수 있다. 비정상 데이터는 결측 데이터, 이상 데이터 또는 범주형 변수 데이터 중 적어도 하나를 포함할 수 있다. 결측 데이터는 데이터가 누락되어 데이터가 없는 상태일 수 있다. 이상 데이터는 기 설정된 범위를 벗어나는 값 을 포함하는 데이터일 수 있다. 범주형 변수 데이터는 0 또는 1로만 표현되는 변수를 포함하는 데이터일 수 있 다. 결측 데이터가 수치형 데이터인 경우, 복수의 외부 서버들 각각은 결측 데이터를 성별, 라벨(label) 등에 기초하여 결측 데이터에 해당되는 변수의 평균치로 수정할 수 있다. 다만, 이에 한정되지 않으며, 복수의 외부 서버들 각각은 모델의 종류에 따라 다양한 방법으로 결측 데이터를 수정 또는 삭제할 수 있다. 비정상 데이터가 이상 데이터인 경우, 복수의 외부 서버들 각각은 이상 데이터를 이상 데이터에 해당되는 변수의 평균치로 수정할 수 있다. 다만, 이에 한정되지 않으며, 복수의 외부 서버들 각각은 모델의 종류에 따라 다양한 방법으로 이상 데이터를 수정 또는 삭제할 수 있다. 비정상 데이터가 범주형 변수 데이터인 경우, 복수의 외부 서버들 각각은 0과 1로 표현되는 변수를 팩터 (factor)형 변수로 타입(type)을 변경할 수 있다. 복수의 외부 서버들 각각은 제 1 테이블 및 제 2 테이블에서 학습 데이터 및 테스트 데이터를 추출할 수 있다. 복수의 외부 서버들 각각은 질병의 유무에 따른 데이터 개수의 불균형을 교정하기 위해 다운샘플링 (down sampling)을 통해 제 1 테이블 및 제 2 테이블에서 학습 데이터 및 테스트 데이터를 추출할 수 있다. 복수의 외부 서버들 각각은 학습 데이터에 기초하여 복수의 후보 모델들을 학습시킬 수 있다. 그리고, 복 수의 외부 서버들 각각은 테스트 데이터를 복수의 외부 서버들 각각의 네트워크부를 통해 컴퓨팅 장치에 전송할 수 있다. 여기서, 컴퓨팅 장치는 테스트 데이터에 기초하여 복수의 모델들 각각의 가중 치를 결정할 수 있다. 예를 들어, 컴퓨팅 장치는 복수의 모델들에 각각 테스트 데이터를 입력하고, 출력되 는 테스트 출력 데이터에 기초하여 복수의 모델들 각각의 가중치를 결정할 수 있다. 복수의 외부 서버들 각각에서 추출된 테스트 데이터는 복수의 외부 서버들 각각에 저장될 수 있다. 복수의 외부 서버들 각각은 복수의 후보 모델들 각각의 성능 점수를 산출할 수 있다. 복수의 외부 서버들 각각은 복수의 외부 서버들 각각에서 저장된 테스트 데이터를 사용하여 산출된 성능 점수에 기초하 여 복수의 후보 모델들 중에서 하나의 모델을 선택할 수 있다. 예를 들어, 복수의 외부 서버들 중에서 제 1 외부 서버(200a)는 제 1 외부 서버(200a)에 포함된 제 1 후보 모델들 각각의 성능 점수에 기초하여 제 1 후보 모델들 중에서 제 1 모델을 선택할 수 있다. 여기서, 복수의 외부 서버들 각각은 성능 점수가 복수의 후보 모델들 중에서 성능 점수가 가장 높은 하나의 모델을 선택할 수 있다. 다만, 복수의 외부 서버들 각각이 복수의 후보 모델들 중에서 하나의 모델을 선택하는 방법은 이에 한정되지 않으며, 다양한 방법으로 모델을 선 택할 수 있다. 본 개시의 몇몇 다른 실시예에 따르면, 복수의 외부 서버들 각각은 복수의 외부 서버들 중에서 어느 하나의 외부 서버(예를 들어, 제 N 외부 서버(200N))에 저장된 테스트 데이터를 이용하여 복수의 외부 서버들 각각에서 선택된 복수의 모델들 각각의 성능 점수를 재산출할 수 있다. 복수의 모델들 각각의 가중치는 재산출된 성능 점수에 기초하여 결정될 수 있다. 예를 들어, 제 1 외부 서버(200a)는 제 N 외부 서버(200N)에 저장된 테스트 데이터를 제 1 후보 모델들 중에서 선택된 제 1 모델에 입력하고, 출력되는 테스트 출력 데이터 에 기초하여 제 1 모델의 가중치를 결정할 수 있다. 즉, 복수의 모델들 각각의 가중치는 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터에 기초하여 결정될 수 있다. 여기서, 제 N 외부 서버(200N)는 제 1 외부 서버(200a)와 서로 연동될 수도 있다. 따라서, 복수의 후보 모델들 중에서 하나의 모델을 선택할 때 복수의 외부 서버들 각각에 저장된 테스트 데이터를 이용하여 산출된 모델의 성능 점수와, 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장 된 테스트 데이터를 이용하여 재산출된 모델의 성능 점수는 서로 다를 수 있다. 또한, 복수의 모델들 각각의 가중치는 질병예측 모델에서 출력 데이터를 보팅하여 분석 결과 데이터를 생성하는 경우에 사용될 수 있다. 질병예측 모델은 보팅 시에 확률적 클래스(class) 분류를 수행하기 위해 복수의 모델들 의 각각의 가중치가 반영된 소프트 보팅(soft voting) 방식을 이용할 수 있다. 컴퓨팅 장치는 복수의 외부 서버들로부터 각각 재산출된 성능 점수에 대한 정보 및 복수의 모델들을 수신할 수 있다. 복수의 모델들은 각각 재산출된 성능 점수에 기초하여 가중치가 결정될 수 있다. 따라서, 질병 예측 모델은 의료 데이터를 복수의 모델들 각각에 입력하여 출력 데이터를 생성하는 경우, 출력 데이터 각각에 재산출된 성능 점수에 기초한 가중치를 각각 적용한 소프트 보팅을 이용하여 수행될 수 있다. 복수의 외부 서버들 각각은 선택된 하나의 모델에 대한 정보를 복수의 외부 서버들 각각의 네트워크 부를 통해 컴퓨팅 장치에 전송할 수 있다. 선택된 하나의 모델에 대한 정보는 모델의 종류, 퍼포먼스 또는 파라미터 정보 중 적어도 하나를 포함할 수 있다. 본 개시의 몇몇 다른 실시예에 따르면, 복수의 외부 서버들 각각은 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테스트 데이터를 이용하여 재산출된 성능 점수를 포함하는 선택된 하나의 모델에 대 한 정보를 복수의 외부 서버들 각각의 네트워크부를 통해 컴퓨팅 장치에 전송할 수 있다. 한편, 다시 도 1을 참조하면, 적어도 하나의 외부 기기는 컴퓨팅 장치 또는 복수의 외부 서버들(20 0)과 통신을 위한 매커니즘을 갖는 시스템에서의 임의의 형태의 노드들을 의미할 수 있다. 예를 들어, 적어도 하나의 외부 기기는 모바일 단말기, 스마트 폰 등을 포함하는 사용자 단말일 수 있다. 다만, 외부 기기 는 이에 한정되지 않으며, 제약회사의 서버, IT 회사의 서버, 연구원 단말 등 다양한 기기를 포함할 수 있 다. 적어도 하나의 외부 기기는 의료 데이터를 컴퓨팅 장치로 전송하고, 컴퓨팅 장치로부터 질병에 관한 분석 결과 데이터를 수신할 수 있다. 네트워크는 임의의 형태의 데이터 및 신호 등을 송수신할 수 있는 임의의 유무선 통신 네트워크를 포함할 수 있다. 구체적으로, 네트워크는 컴퓨팅 장치, 복수의 외부 서버들 및 외부 기기가 서로 데이터 및 신호 등을 송수신할 수 있는 유무선 통신 네트워크를 포함할 수 있다. 도 7은 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치에서 수행되는 질병을 예측하기 위한 방법을 설명하기 위한 도면이다. 도 7을 참조하면, 프로세서는 적어도 하나의 외부 기기로부터 의료 데이터를 수신할 수 있다(S110). 적어도 하나의 외부 기기는 의료 데이터를 통해 질병에 관한 분석 결과 데이터를 제공받기를 원하는 개인 또는 기관일 수 있다. 의료 데이터는 특정 사람의 의료에 관련된 정보를 포함할 수 있다. 예를 들어, 의료 데이 터는 의료 분야에 있어서 적어도 하나의 질병과 관련된 변수를 포함할 수 있다. 그리고, 의료 데이터는 공통 데 이터 모델로 변환된 형태의 데이터일 수 있다. 공통 데이터 모델은 서로 다른 구조의 데이터를 서로 동일한 구 조의 데이터로 변환하기 위해 설정된 규격일 수 있다. 프로세서는 의료 데이터를 질병예측 모델에 입력하여, 질병에 관한 분석 결과 데이터를 생성할 수 있다 (S120). 여기서, 프로세서는 질병예측 모델의 서로 다른 복수의 모델들 각각에 의료 데이터를 입력하여 각각의 출 력 데이터를 획득할 수 있다. 프로세서는 복수의 외부 서버들 중에서 어느 하나의 외부 서버에 저장된 테 스트 데이터에 기초하여 결정된 복수의 모델들 각각의 가중치를 각각의 출력 데이터에 적용할 수 있다. 프로세 서는 복수의 모델들 각각의 가중치가 적용된 출력 데이터를 보팅하여 분석 결과 데이터를 생성할 수 있다. 프로세서는 생성된 질병에 관한 분석 결과 데이터를 네트워크부를 통해 외부 기기에 전송할 수 있다. 한편, 프로세서는 복수의 외부 서버들 각각이 학습 데이터를 생성하여 복수의 후보 모델들을 학습시 키도록 허용하는 제 1 서브 쿼리 및 복수의 외부 서버들 각각이 복수의 후보 모델들 중에서 하나의 모델을 컴퓨팅 장치에 전송하도록 허용하는 제 2 서브 쿼리를 포함하는 쿼리(query)를 생성할 수 있다. 프로세서는 쿼리를 도커(docker) 이미지의 형태로 생성할 수 있다. 도커는 가상의 사용자 공간에서 실행되 는 소프트웨어 및 소프트웨어 실행에 필요한 모든 파일들의 패키지를 의미할 수 있다. 도커는 소프트웨어와 소 프트웨어의 실행에 필요한 모든 파일들이 포함된 도커 이미지에 의해 실행될 수 있다. 이러한 도커 이미지는 소 프트웨어의 실행에 필요한 모든 파일들이 포함되어 있어 다양한 개발, 테스트 환경 간에 오류 없이 실행될 수 있다. 따라서, 쿼리는 도커 이미지의 형태를 가짐으로써, 서로 다른 환경인 복수의 외부 서버들 각각에서 도 오류 없이 실행될 수 있다. 프로세서는 생성된 쿼리를 네트워크부를 통해 복수의 외부 서버들 각각에 전송할 수 있다. 프로세서는 복수의 외부 서버들 각각으로부터 서로 다른 복수의 모델들에 대한 정보를 수신할 수 있다. 도 8 내지 도 11은 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치에서 생성되는 쿼리에 대응하여 복수의 외부 서버 들 각각에서 수행되는 과정을 설명하기 위한 도면이다. 도 8을 참조하면, 복수의 외부 서버들 각각은 쿼리에 대응하여 복수의 외부 서버들 각각에 기 저장된 데이터들 중에서 질병에 대응되는 제 1 환자군을 선별할 수 있다(S210). 쿼리는 제 1 환자군이 선별되는 기 설정된 기간에 대한 정보를 포함할 수 있다. 따라서, 복수의 외부 서버들 각각은 쿼리에 대응하여 기 설정된 기간 및 질병에 대응되는 제 1 환자군을 선별할 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 기 저장된 데이터들 중에서 질병에 대응되지 않는 제 2 환자 군을 선별할 수 있다(S220).쿼리는 제 2 환자군이 선별되는 기 설정된 기간에 대한 정보를 포함할 수 있다. 따라서, 복수의 외부 서버들 각각은 쿼리에 대응하여 기 설정된 기간 및 질병에 대응되는 제 2 환자군을 선별할 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 기 저장된 데이터들 중에서 질병에 대응되는 적어도 하나의 변수를 선별할 수 있다(S230). 적어도 하나의 변수는 예측하고자 하는 질병에 따라 다르게 선별될 수 있다. 예를 들어, 예측하고자 하는 질병 이 고혈압인 경우, 적어도 하나의 변수는 고혈압의 원인과 관련된 변수로서, 성별, BMI, 키, 몸무게, 콜레스테 롤, 흡연 여부 또는 운동 여부 중 적어도 하나를 포함할 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 제 1 환자군 및 변수를 포함하는 제 1 테이블을 생성할 수 있 다(S240). 제 1 테이블은 제 1 환자군, 적어도 하나의 변수 및 제 1 환자군에 대응되는 적어도 하나의 변수에 대한 값이 기재된 표 형태의 데이터일 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 제 2 환자군 및 변수를 포함하는 제 2 테이블을 생성할 수 있 다(S250). 제 2 테이블은 제 2 환자군, 적어도 하나의 변수 및 제 2 환자군에 대응되는 적어도 하나의 변수에 대한 값이 기재된 표 형태의 데이터일 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 제 1 테이블 및 제 2 테이블에서 학습 데이터 및 테스트 데이 터를 추출할 수 있다(S260). 복수의 외부 서버들 각각은 제 1 테이블 및 제 2 테이블에서 기 설정된 방법에 기초하여 학습 데이터 및 테스트 데이터를 추출할 수 있다. 기 설정된 방법은 무작위로 추출하는 방법, 제 1 테이블 및 제 2 테이블에서 교차로 선택하는 방법 등을 포함할 수 있다. 예를 들어, 복수의 외부 서버들 각각은 제 1 테이블 및 제 2 테이블에서 무작위로 학습 데이터 및 테스트 데이터를 추출할 수 있다. 다음으로, 도 9를 참조하면, 복수의 외부 서버들 각각은 쿼리에 대응하여 제 1 테이블 및 제 2 테이블 각 각에 비정상 데이터가 포함되었는지 여부를 판단할 수 있다(S310). 비정상 데이터는 결측 데이터, 이상 데이터 또는 범주형 변수 데이터 중 적어도 하나를 포함할 수 있다. 결측 데이터는 데이터가 누락되어 데이터가 없는 상태일 수 있다. 이상 데이터는 기 설정된 범위를 벗어나는 값을 포 함하는 데이터일 수 있다. 범주형 변수 데이터는 0 또는 1로만 표현되는 변수를 포함하는 데이터일 수 있다. 예를 들어, 복수의 외부 서버들 각각은 제 1 테이블에서 데이터가 누락되어 기재가 되지 않은 변수의 값이 존재하는 경우, 해당 변수의 값은 결측 데이터로 판단할 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 비정상 데이터가 포함되었다고 판단한 경우, 비정상 데이터를 수정 또는 삭제할 수 있다(S320). 복수의 외부 서버들 각각은 쿼리에 대응하여 비정상 데이터인 결측 데이터를 수정 또는 삭제할 수 있다. 예를 들어, 제 1 테이블에서 결측 데이터가 존재하고 결측 데이터에 해당하는 변수가 몸무게인 경우, 복수의 외 부 서버들 각각은 결측 데이터를 제 1 테이블에 포함된 몸무게 값들의 평균 값으로 수정할 수 있다. 다음으로, 도 10을 참조하면, 복수의 외부 서버들 각각은 쿼리에 대응하여, 학습 데이터에 기초하여 복수 의 후보 모델들을 학습시킬 수 있다(S410). 복수의 외부 서버들 각각은 쿼리에 대응하여, 테스트 데이터를 컴퓨팅 장치에 전송할 수 있다(S420). 한편, 본 개시의 몇몇 다른 실시예에 따르면, 복수의 외부 서버들 각각은 쿼리에 대응하여, 복수의 외부 서버들 각각에 저장된 테스트 데이터를 이용하여 복수의 후보 모델들 각각의 성능 점수를 산출하고, 성능 점수에 기초하여 복수의 외부 서버들 각각에서 하나의 모델을 선택할 수 있다. 즉, 복수의 외부 서버들 각각은 성능 점수에 기초하여 외부 서버 하나당 하나의 모델을 선택할 수 있다. 이에 대한 구체적인 설명 은 도 11을 참조하여 후술한다. 도 11을 참조하면, 복수의 외부 서버들 각각은 쿼리에 대응하여 복수의 후보 모델들 각각의 성능 점수를 산출할 수 있다(S510). 성능 점수는 후보 모델에 테스트 데이터를 입력하여 출력된 값에 기초하여 측정될 수 있다. 예를 들어, 테스트 데이터가 특정 질병이 존재하는 것으로 라벨링된 경우, 성능 점수는 후보 모델에서 출력된 값이 1에 가까울수록 높게 측정될 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 성능 점수에 기초하여 복수의 후보 모델들 중에서 하나의 모 델을 선택할 수 있다(S520). 예를 들어, 복수의 외부 서버들 각각은 성능 점수가 복수의 후보 모델들 중에서 성능 점수가 가장 높은 하 나의 모델을 선택할 수 있다. 복수의 외부 서버들 각각은 쿼리에 대응하여 선택된 하나의 모델에 대한 정보를 컴퓨팅 장치에 전송 할 수 있다(S530). 한편, 본 개시의 몇몇 다른 실시예에 따르면, 복수의 외부 서버들 각각은 복수의 후보 모델들 중에서 하나 의 모델을 선택할 수 있다. 복수의 외부 서버들 각각은 선택된 하나의 모델에 복수의 외부 서버들 중에서 어느 하나의 외부 서버 (예를 들어, 제 1 외부 서버(200a))에 저장된 테스트 데이터를 이용하여 성능 점수를 산출하도록 허용할 수 있 다. 복수의 외부 서버들 각각은 재산출된 성능 점수를 포함하는 선택된 하나의 모델에 대한 정보를 컴퓨팅 장 치에 전송할 수 있다. 도 7 내지 도 11에 도시되는 단계들은 예시적인 단계들이다. 따라서, 본 개시내용의 사상의 범위를 벗어나지 않 는 한도에서 도 7 내지 도 11의 단계들 중 일부가 생략되거나 추가적인 단계들이 존재할 수 있다는 점 또한 당 업자에게 명백할 것이다. 또한, 도 7 내지 11에 기재된 구성들(100 내지 400)에 관한 구체적인 내용은 앞서 도 1 내지 도 6을 통해 설명한 내용으로 대체될 수 있다. 일반적으로 질병의 발생 가능성은 건강 검진을 통한 검진 결과를 토대로 의사가 판단하거나, 미리 정해진 수치 와의 단순 비교를 통해 예측하므로 예측의 정확도가 다소 낮을 수 있다. 도 1 내지 11을 참조하여 상술한 바와 같이, 컴퓨팅 장치는 질병예측 모델을 사용하여 검진 결과를 토대로 의사가 판단하거나, 또는 미리 정해진 수치와의 단순 비교를 통해 예측되는 질병의 발생 가능성보다 높은 정확 도를 가질 수 있다. 컴퓨팅 장치는 복수의 외부 서버들 각각으로부터 모델들을 수신함으로써, 복수의 외부 서버들 각각의 의료 데이터가 반출되지 않을 수 있다. 따라서, 컴퓨팅 장치는 의료 데이터에 포함된 환자의 정보 를 열람할 필요가 없어 개인정보 보호 이슈와 같은 문제가 발생하지 않을 수 있다. 예를 들어, 컴퓨팅 장치 는 병원 내에 포함되어 있는 외부 서버들 각각에 저장된 개인 정보(예컨대, 환자 진료 데이터 등의 의료 데이터)를 수신하지 않고, 외부 서버들 각각에 전처리를 수행하기 위한 쿼리 및/또는 학습을 수행하 기 위한 쿼리를 전송함으로써, 외부 서버들 내에 포함된 후보 모델들이 이러한 쿼리에 대응하여 학습되도 록 허용할 수 있다. 나아가, 컴퓨팅 장치는 외부 서버들 각각에서 학습이 완료된 복수의 모델들에 대 한 정보를 수신하고 그리고 수신된 정보를 이용하여 출력되는 데이터에 대한 앙상블을 통해서 개인 정보 이슈를 해결함과 동시에 방대한 학습 데이터에 기반한 질병 예측 모델을 생성할 수 있다. 컴퓨팅 장치는 복수의 외부 서버들 각각으로부터 모델들을 수신하여 특정 하나의 서버의 데이터를 기 반으로 학습된 모델보다 과적합(overfitting)이 발생할 가능성이 적을 수 있다. 컴퓨팅 장치의 질병예측 모델은 복수의 외부 서버들 각각으로부터 수신한 복수의 모델들을 포함할 수 있다. 그리고, 복수의 모델들은 서로 다른 파라미터 값을 가질 수 있다. 따라서, 컴퓨팅 장치의 질병예측 모델은 하나의 고정된 파라미터 값을 가지도록 파인 튜닝(fine-tuning)하는 기존의 모델보다 정확도가 향상될 수 있다. 예를 들어, 컴퓨팅 장치는 병원 내에 포함되어 있는 외부 서버들 각각에서 서로 다른 학습 데이터로 학습이 완료된 복수의 모델들에 대한 정보를 수신하여 복수의 모델들 각각의 파라미터가 다르게 설정되어 있을 수 있다. 하지만, 기존의 연합 학습(federated learning)은 각각의 컴퓨팅 자원에서 학습된 결과를 통합하여 하나의 파인 튜닝된 하나의 모델을 생성한다. 따라서, 다양한 의료 데이터에 대한 정확도는 파라미터 값이 하나로 고정된 기존의 모델보다 본 개시에 따른 컴퓨팅 장치의 질병예측 모델이 더 높을 수 있다. 컴퓨팅 장치는 하나의 쿼리만을 이용하여 복수의 외부 서버들 각각에서 복수의 후보 모델들 학습, 복 수의 후보 모델들 중 하나의 모델 선택, 선택된 하나의 모델에 대한 정보 전송을 수행하도록 할 수 있다. 따라 서, 컴퓨팅 장치는 복잡한 과정 없이 질병예측 모델을 구성할 수 있다. 도 12는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드(handheld) 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다.컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2022-0004467", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다양한 양상들이 이제 도면들을 참조로 기재되며, 여기서 유사한 참조 번호들은 총괄적으로 유사한 구성요소들 을 지칭하는데 이용된다. 이하의 실시예에서, 설명 목적을 위해, 다수의 특정 세부사항들이 하나 이상의 양상들 의 총체적 이해를 제공하기 위해 제시된다. 그러나, 그러한 양상(들)이 이러한 구체적인 세부사항들 없이 실시 될 수 있음은 명백할 것이다. 도 1은 본 개시의 몇몇 실시예에 따른 질병을 예측하기 위한 시스템을 설명하기 위한 도면이다. 도 2는 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치를 설명하기 위한 도면이다. 도 3은 본 개시의 몇몇 실시예에 따른 네트워크 함수를 나타낸 개략도이다. 도 4는 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치의 질병예측 모델을 설명하기 위한 도면이다. 도 5는 본 개시의 몇몇 실시예에 따른 제 1 테이블을 설명하기 위한 도면이다. 도 6은 본 개시의 몇몇 실시예에 따른 제 1 환자군을 설명하기 위한 도면이다. 도 7은 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치에서 수행되는 질병을 예측하기 위한 방법을 설명하기 위한 도면이다. 도 8 내지 도 11은 본 개시의 몇몇 실시예에 따른 컴퓨팅 장치에서 생성되는 쿼리에 대응하여 복수의 외부 서버 들 각각에서 수행되는 과정을 설명하기 위한 도면이다. 도 12는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도시 한다."}
