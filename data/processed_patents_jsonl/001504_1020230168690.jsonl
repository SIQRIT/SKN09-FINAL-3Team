{"patent_id": "10-2023-0168690", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0053668", "출원번호": "10-2023-0168690", "발명의 명칭": "소프트웨어 어플리케이션들의 실행에 기반하여 삭제된 정보를 관리하기 위한 전자 장치 및 그", "출원인": "삼성전자주식회사", "발명자": "정효정"}}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,디스플레이;프로세서; 및인스트럭션들을 저장하는 메모리를 포함하고, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기전자 장치가,제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하고, 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성됨;제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하고, 상기 제2 실행 화면은, 상기 제2소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성됨;상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하고;상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2매니징 어플리케이션을 실행하고; 및상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사용자 입력을 수신하는 것에기반하여:상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하고, 및상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 제2 매니징 어플리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴지통 디렉토리로 분류된파일을 지시하기 위한 속성(attribute)에 의해 필터링된 상기 파일들의 상기 리스트를 획득하고;상기 제1 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,공개특허 10-2025-0053668-3-상기 제2 데이터베이스의 인덱스 값들에 의해 구분되는 상기 메모리 내 상기 파일들의 그룹들 각각에서, 상기속성에 의해 휴지통 디렉토리로 분류된 것으로 지시되는 파일들의 개수를 획득하고;상기 그룹들 중에서 양수(positive number)인 상기 개수를 가지는 그룹과 관련된 상기 파일들의 상기 리스트를이용하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 2에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 제1 데이터베이스에 연결된 파일들 중에서, 상기 리스트에 포함된 파일들과 상이한 파일을, 상기 제1 데이터베이스로부터 연결 해제(disassociate)하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서, 상기 제1 데이터베이스는, 상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관련된 미디어프로바이더 소프트웨어 프로그램인 상기 제1 매니징 어플리케이션에 의해 관리되는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제2데이터베이스는, 휴지통 디렉토리 매니징 소프트웨어 프로그램인 상기 제2 매니징 어플리케이션에 의해 관리되는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 제2 매니징 어플리케이션에 의해 관리되는 디렉토리 내에서, 상기 제1 소프트웨어 어플리케이션과 상이한다른 소프트웨어 어플리케이션의 패키지 명칭(package name)을 가지는 서브 디렉토리(610; 710)에 액세스하여,상기 제1 데이터베이스와 연동될 파일들을 탐지하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 서브 디렉토리 내에 저장된 파일을 식별하는 것에 기반하여, 상기 식별된 파일의 제1 경로(path)를 나타내는 문자열(character string)로부터, 상기 식별된 파일이 저장되었던(was stored) 제2 경로(path)를 획득하도록, 야기하는,공개특허 10-2025-0053668-4-전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 8에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 문자열 내에서, 지정된 문자열 이전의(before) 부분으로부터, 상기 제2 경로를 획득하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 1에 있어서, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가,상기 제1 소프트웨어 어플리케이션의 실행에 기반하여 수신된, 파일의 삭제를 위한 다른 입력에 응답하여, 상기다른 입력에 대응하고, 상기 파일의 삭제를 지시하는, 지정된 URI(uniform resource indicator)에 기반하는 콘텐트 프로바이더(content provider)를 실행하도록, 야기하는,전자 장치."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법에 있어서,제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하는 동작, 상기제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을수신하도록 구성됨;제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하는 동작, 상기 제2 실행 화면은, 상기제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성됨;상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하는 동작; 및상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2매니징 어플리케이션을 실행하는 동작을 포함하고,상기 제1 실행 화면을 표시하는 동작은, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하는 동작; 및상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서, 상기 제1 데이터베이스는,상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관련된 미디어프로바이더 소프트웨어 프로공개특허 10-2025-0053668-5-그램인 상기 제1 매니징 어플리케이션에 의해 관리되는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 11에 있어서,상기 제2 매니징 어플리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴지통 디렉토리로 분류된파일을 지시하기 위한 속성에 의해 필터링된 상기 파일들의 상기 리스트를 획득하는 동작;상기 제1 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 13에 있어서, 상기 동기화를 수행하는 동작은,상기 제2 데이터베이스의 인덱스 값들에 의해 구분되는 상기 메모리 내 상기 파일들의 그룹들 각각에서, 상기속성에 의해 휴지통 디렉토리로 분류된 것으로 지시되는 파일들의 개수를 획득하는 동작;상기 그룹들 중에서 양수인 상기 개수를 가지는 그룹과 관련된 상기 파일들의 상기 리스트를 이용하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 13에 있어서, 상기 동기화를 수행하는 동작은,상기 제1 데이터베이스와 연결된 파일들 중에서, 상기 리스트에 포함된 파일들과 상이한 파일을, 상기 제1 데이터베이스로부터 연결해제(disassociating)하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 11에 있어서, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제2데이터베이스는, 휴지통 디렉토리 매니징 소프트웨어 프로그램인 상기 제2 매니징 어플리케이션에 의해 관리되는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 11에 있어서, 상기 제1 데이터베이스는,상기 제2 매니징 어플리케이션에 의해 관리되는 디렉토리 내에서, 상기 제1 소프트웨어 어플리케이션과 상이한다른 소프트웨어 어플리케이션의 패키지 명칭을 가지는 서브 디렉토리에 포함된 파일들에 대한 정보를포함하는,공개특허 10-2025-0053668-6-방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 17에 있어서, 상기 제1 데이터베이스는,상기 서브 디렉토리 내 상기 파일이 저장되었던 제2 경로를 포함하고,상기 제2 경로는,상기 서브 디렉토리에 포함된 상기 파일들에 대한 정보로써, 상기 서브 디렉토리 내에 저장된 파일의 제1 경로를 나타내는 문자열 내에서, 지정된 문자열 이전의 부분으로부터 획득된,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 11에 있어서,상기 제1 소프트웨어 어플리케이션의 실행에 기반하여 수신된, 파일의 삭제를 위한 다른 입력에 응답하여, 상기다른 입력에 대응하고, 상기 파일의 삭제를 지시하는, 지정된 URI에 기반하는 콘텐트 프로바이더를 실행하는 동작을 더 포함하는,방법."}
{"patent_id": "10-2023-0168690", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체에 있어서, 상기 인스트럭션들은, 디스플레이,메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가,제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하고, 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성됨;제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하고, 상기 제2 실행 화면은, 상기 제2소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성됨;상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하고;상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2매니징 어플리케이션을 실행하고; 및상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사용자 입력을 수신하는 것에기반하여:상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하고, 및상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기하는,공개특허 10-2025-0053668-7-비-일시적 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예(an embodiment)에 따른, 전자 장치는, 제1 소프트웨어 어플리케이션의 실행에 기반하고, 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성된, 제1 실행 화면을 표시할 수 있다. 상기 전자 장 치는, 제2 소프트웨어 어플리케이션의 실행에 기반하고, 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 (뒷면에 계속)"}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시(present disclosure)는, 소프트웨어 어플리케이션들의 실행에 기반하여 삭제된 정보(예, 파일 및/또는 디렉토리)를 관리하기 위한 전자 장치 및 그 방법에 관한 것이다."}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "다양한 기능들을 지원하기 위한 소프트웨어 어플리케이션들이 전자 장치에 설치될 수 있다. 상기 소프트웨어 어플리케이션들은, 예를 들어, 전자 장치에 포함된 하나 이상의 카메라들을 제어하기 위한 카메라 어플리케이션, 전자 장치에 포함된 마이크를 제어하기 위한 녹음 어플리케이션, 네트워크의 통신에 기반하여 텍 스트, 이미지, 비디오 및/또는 오디오를 송신하거나, 또는 수신하기 위한 메신저 어플리케이션(또는 통화 어플 리케이션), 및/또는 전자 장치에 저장된 하나 이상의 파일들 및/또는 디렉토리들을 관리하기 위한 파일 관리 어 플리케이션을 포함할 수 있다. 상이한 소프트웨어 어플리케이션들의 실행에 기반하여, 전자 장치는, 파일 및/ 또는 디렉토리를 생성하거나, 변경하거나, 또는 삭제하기 위한 사용자 입력을 수신할 수 있다. 상술한 정보는 본 개시에 대한 이해를 돕기 위한 목적으로 하는 배경 기술(related art)로 제공될 수 있다. 상 술한 내용 중 어느 것도 본 개시와 관련된 종래 기술(prior art)로서 적용될 수 있는지에 대하여 어떠한 주장이 나 결정이 제기되지 않는다."}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예(an embodiment)에 따른, 전자 장치(electronic device)는, 디스플레이, 프로세서 및 인스트럭션들을 저장하는 메모리를 포함할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치 가, 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하도록, 야기 할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상 기 전자 장치가, 제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하도록, 야기할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사 용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따 라 상기 메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도 록 구성된 제2 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의 해 실행될 시에, 상기 전자 장치가, 상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토리로 액세스하기 위 한 상기 사용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포 함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉 토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파 일을 식별하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치 가, 상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대 응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 일 실시예에서, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된다. 상기 방법은, 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하는 동작을 포함할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사 용자 입력을 수신하도록 구성될 수 있다. 상기 방법은, 제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하는 동작을 포함할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제 2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 방법은, 상기 제1 소프 트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기 메모리에 저장 된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하 는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2 매니징 어플리케이션을 실행하는 동작을 포함할 수 있다. 상기 제1 실행 화면을 표시하는 동작은, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보 를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어 플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하는 동작을 포함할 수 있다. 상기 제1 실행 화면을 표시하는 동작은, 상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상 기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하는 동작을 포함할 수 있다. 일 실시예에서, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공된다. 상기 인스트럭션 들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 제1 소프 트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하도록, 야기할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입 력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치 가, 제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하도록, 야기할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신 하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기 메모 리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으 로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이 션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치 가, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사 용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되 고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하도 록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 일 실시예에 따른, 전자 장치는, 디스플레이, 제1 소프트웨어 어플리케이션 및 제2 소프트웨어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 인스트럭션들을 저장하기 위한 메모리 및 프로세서를 포함할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플 리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 입력을 수신하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장 치가, 상기 입력에 응답하여, 상기 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들 중 어느 하나로 분 류된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케이션을 실행하여, 상기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지통 디렉토리와 상 이한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 실행 화면 내에, 상기 식별된 적 어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 상기 제1 데이터베이 스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복 수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메모리 내 파일들의 상태들을 저장하는제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데이트될 수 있다. 일 실시예에서, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된다. 상기 방법은, 제1 소프트웨어 어플리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 입력을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 입력에 응답하여, 상기 제1 소프 트웨어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들 중 어느 하나로 분류 된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케이션을 실행하여, 상 기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지통 디렉토리와 상이 한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 실행 화면 내에, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하는 동작을 포 함할 수 있다. 상기 제1 데이터베이스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메 모리 내 파일들의 상태들을 저장하는 제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데이트될 수 있다. 일 실시예에서, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공된다. 상기 인스트럭션 들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 입력을 수신하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시 에, 상기 전자 장치가, 상기 입력에 응답하여, 상기 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들 중 어느 하나로 분류된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케이션 을 실행하여, 상기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지통 디렉토리와 상이한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 실행 화면 내에, 상기 식별된 적 어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 상기 제1 데이터베이 스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복 수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메모리 내 파일들의 상태들을 저장하는 제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데이트될 수 있다. 일 실시예에 따른, 전자 장치는, 디스플레이, 복수의 소프트웨어 어플리케이션들의 인스트럭션들을 저장하기 위 한 메모리 및 프로세서를 포함할 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장 치가, 상기 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화면을, 상기 디스플레이 상에 표시하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제1 화면에 기반하여, 상기 메모리 내에서 삭제된 것으로 지시되는 정보를 열람하기 위한 사 용자 입력을 수신하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장 치가, 상기 사용자 입력에 응답하여, 제2 소프트웨어 어플리케이션에 의해 관리되고, 상기 복수의 소프트웨어 어플리케이션들에 의해 액세스 가능한 제1 데이터베이스와 동기화된, 제2 데이터베이스를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 파일을 포 함하는 상기 정보를 획득하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 디스플레이 상에, 상기 정보에 기반하여, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭 제된 것으로 지시되는 상기 파일에 대응하는 시각적 객체를 포함하는 제2 화면을 표시하도록, 구성될 수 있다. 일 실시예에서, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된다. 상기 방법은, 상기 메모리에 저장된 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화 면을, 상기 디스플레이 상에 표시하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 화면에 기반하여, 상기 메모리 내에서 삭제된 것으로 지시되는 정보를 열람하기 위한 사용자 입력을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 사용자 입력에 응답하여, 제2 소프트웨어 어플리케이션에 의해 관리되고, 상기 복수의 소프 트웨어 어플리케이션들에 의해 액세스가능한 제1 데이터베이스와 동기화된, 제2 데이터베이스를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 파일 을 포함하는 상기 정보를 포함하는 동작을 포함할 수 있다. 상기 방법은, 상기 디스플레이 상에, 상기 정보에 기반하여, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상기 제3 소프트웨어 어플리 케이션에 기반하여 삭제된 것으로 지시되는 상기 파일에 대응하는 시각적 객체를 포함하는 제2 화면을 표시하는동작을 포함할 수 있다. 일 실시예에서, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공된다. 상기 인스트럭션 들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 메 모리에 저장된 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화면 을 상기 디스플레이 상에 표시하는 동안, 상기 메모리 내에서 삭제된 것으로 지시되는 정보를 열람하기 위한 사 용자 입력을 식별하도록, 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전 자 장치가, 상기 사용자 입력에 응답하여, 상기 인스트럭션들에 대응하는 제2 소프트웨어 어플리케이션에 의해 관리되고, 상기 복수의 소프트웨어 어플리케이션들에 의해 액세스가능한 제1 데이터베이스와 동기화된, 제2 데 이터베이스를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 파일을 포함하는 상기 정보를 획득하도록, 구성될 수 있다. 상기 인스트럭션들은, 상 기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상기 파일에 대응하는 시각적 객체를 포함하는 제2 화면을 표시하기 위하여, 상기 제1 소프트웨 어 어플리케이션으로 상기 정보를 제공하도록, 구성될 수 있다."}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시예들이 첨부된 도면을 참조하여 설명된다. 도 1은, 복수의 소프트웨어 어플리케이션들의 실행에 기반하는 화면들(예, 제1 화면, 제2 화면 및/또 는 제3 화면)을 표시하는 전자 장치의 일 실시예를 도시한다. 사용자에 의해 소유되는 관점에서(in terms of), 전자 장치는 단말(또는 사용자 단말)로 지칭될(referred as) 수 있다. 단말은, 예를 들어, 랩톱 및 데스크톱과 같은 개인용 컴퓨터(personal computer, PC)를 포함할 수 있다. 단말은, 예를 들어, 스마 트폰(smartphone), 스마트패드(smartpad), 및/또는 태블릿 PC를 포함할 수 있다. 단말은, 스마트워치 (smartwatch) 및/또는 HMD(head-mounted device)와 같은 스마트액세서리를 포함할 수 있다. 실시예가 이에 제 한되는 것은 아니며, 단말은, TV(television), STB(set-top box)(또는 STU(set-top unit)) 및/또는 빔 프로젝 터(beam projector)와 같은 가전 기기(home appliance)를 포함할 수 있다. 전자 장치는, 전자 장치에 저장된 정보를 출력하기 위한 부품을 포함할 수 있다. 도 1을 참고하면, 디스플레이를 포함하는 전자 장치의 일 실시예가 도시되지만, 실시예가 이에 제한되는 것은 아니다. 전자 장치는 디스플레이 상에, 전자 장치에 저장된 정보에 기반하는 UI(user interface)를 표시 할 수 있다. 전자 장치에 포함된 하나 이상의 부품들의 예시적인 하드웨어 구성(hardware configuratio n)이, 도 2를 참고하여 설명된다. 일 실시예에 따른, 전자 장치는, 소프트웨어 어플리케이션의 실행에 기반하여, 정보의 생성, 변경 및/또는 삭제와 관련된 하나 이상의 동작을 수행할 수 있다. 다양한 기능들을 지원하기 위하여, 전자 장치는, 복 수의 소프트웨어 어플리케이션들의 설치(installation)를 지원할 수 있다. 전자 장치에 설치된 복수의 소 프트웨어 어플리케이션들은, 멀티태스킹에 기반하여 동시에 실행될 수 있다. 일 실시예에서, 전자 장치는 소프트웨어 어플리케이션의 실행에 기반하여 생성되거나, 또는 변경된 정보를, 상기 정보를 보존하기 위한 부품 내에 저장할 수 있다. 상기 부품은, 스토리지와 같은 메모리를 포함 할 수 있다. 전자 장치는 파일 및/또는 디렉토리에 기반하여, 상기 스토리지 내에 저장된 정보를 관리할 수 있거나, 또는 구별할(distinguish) 수 있다. 예를 들어, 전자 장치는 파일 및/또는 디렉토리의 단위에 기반하여, 전자 장치의 스토리지 내에 저장된 정보를 관리할 수 있다. 일 실시예에서, 전자 장치는 파일 및/또는 디렉토리에 기반하는 주소 공간을 이용하여, 스토리지 내에 저장된 정보를 관리할 수 있다. 예를 들어, 전자 장치는, 경로(path)와 같은 문자열(character string)을 이용하여, 스토리지 내에 저장된 파일 및/또는 디렉토리로 액세스할 수 있다. 스토리지 내에 저장된 파일 및/또는 디렉토리는, 고유한 경로를 가질 수 있다. 일 실시예에서, 전자 장치는, 전자 장치 내에 저장된 정보(예, 하나 이상의 파일들 및/또는 하나 이 상의 파일들을 수용하기 위한 디렉토리)를 삭제할(delete 또는 erase) 수 있다. 전자 장치에 의한 상기 정보의 삭제는, 2 단계 방식(two-stage scheme)에 기반하여 수행될 수 있다. 의도되지 않은(unintentional) 정보의 삭제를 줄이기 위하여, 상기 2 단계 방식을 지원하는 전자 장치는, 특정(specific) 파일을 삭제하 기 위한 최초(initial) 요청(또는 최초 입력)에 기반하여, 상기 특정 파일을 예비적으로(preliminarily) 삭제할 수 있다. 이하에서, 파일 및/또는 디렉토리의 삭제(deletion)는, 상기 최초 요청 및/또는 상기 최초 입력에 기 반하는 파일 및/또는 디렉토리의 예비적인 삭제(preliminary deletion)를 의미할 수 있다. 일 실시예에서, 파일의 예비적인 삭제는, 상기 파일이 최초 요청에 기반하여 삭제되었음을 지시하는 (indicating) 지정된 속성을 상기 파일과 연결하는(associate 또는 link) 동작을 포함할 수 있다. 파일의 예비 적인 삭제는, 스토리지의 지정된 영역으로, 상기 파일을 이동하는 동작을 포함할 수 있다. 상기 지정된 영역은, 상기 스토리지의 주소 공간에 의해 논리적으로 지정된(logically designated) 디렉토리를 포함할 수 있 다. 일 실시예에서, 상기 디렉토리는, 휴지통(recycle bin)으로 지칭될 수 있다. 일 실시예에서, 상기 2 단계 방식에 기반하는 상기 최초 요청 이후, 상기 최초 요청에 대응하는 상기 파일의 상 태는, 영구적인(permanent) 삭제를 위한 최후(final) 요청(또는 최후 입력)을 수신 가능한 지정된 상태로 스위 칭될 수 있다. 전자 장치는, 상기 최후 요청을 수신하는 경우, 스토리지로부터 상기 지정된 상태의 파일 을 삭제할 수 있다. 실시예가 이에 제한되는 것은 아니며, 상기 지정된 상태 내에서, 전자 장치는 상기 파일을, 상기 최초 요청을 수신하기 이전의 상태로 복원하기 위한 복원 요청을 수신할 수 있다. 상술한 바와 같이, 전자 장치는 스토리지 내 파일을 삭제하기 위한 요청을 2 스텝으로 분할하여, 파일이 의도되지 않은 단일 입력(unintended single input)에 기반하여 삭제되는 케이스를 줄일 수 있다. 파일에 기반 하는 전자 장치의 동작이 설명되었지만, 실시예가 이에 제한되는 것은 아니며, 전자 장치는 상기 2 단계 방식에 기반하여 스토리지의 디렉토리를 삭제할 수 있다. 예를 들어, 최후 요청에 기반하여 영구적으로 삭제되기 이전까지, 파일 및/또는 디렉토리는 전자 장치 및/또는 전자 장치의 사용자에 의해 액세스 가능할 수 있다. 최후 요청에 기반하여 영구적으로 삭제된 파일 및/또는 디렉토리는, 전자 장치 및/또는 전자 장치의 사용자에 의해 액세스 불가하다. 예를 들어, 파일을 삭제하기 위한 제1 사용자 입력에 응답하여, 전자 장치는, 상기 파일을 직접적으로 삭 제하는 대신에, 상기 파일로, 삭제된 것으로 지시되는 속성(attribute)(또는 플래그(flag) 값)을 할당(assign) 할 수 있다. 예를 들어, 상기 제1 사용자 입력에 응답하여, 전자 장치는, 상기 파일을 직접적으로 삭제하 는 대신에, 삭제된 것으로 지시되는 파일 및/또는 디렉토리를 저장하는 지정된 영역(예, 휴지통과 같은 지정된 디렉토리)로 상기 파일을 이동할 수 있다. 상기 예시들 내에서, 제1 사용자 입력에 대응하는 상기 파일은, 상 기 제1 사용자 입력 이후의 제2 사용자 입력에 기반하여, 전자 장치 내에서 영구적으로(또는 비가역적으로 (irreciprocal)) 삭제될 수 있다. 상기 예시들 내에서, 제1 사용자 입력에 대응하는 상기 파일은 상기 제1 사 용자 입력 이후의 제3 사용자 입력에 기반하여, 상기 제1 사용자 입력을 수신하기 이전의 경로(path)로 이동될 수 있거나, 또는 복원될 수 있다. 실시예가 이에 제한되는 것은 아니며, 제1 사용자 입력에 대응하는 상기 파 일은, 제2 사용자 입력과 독립적으로, 또는 상기 제2 사용자 입력을 수신하기 이전에, 전자 장치 내에서 영구적으로 삭제될 수 있다. 일 실시예에 따른, 전자 장치는, 복수의 소프트웨어 어플리케이션들 각각에 기반하는 사용자 입력들에 응답하여, 상기 2 단계 방식을 수행할 수 있다. 도 1을 참고하면, 복수의 소프트웨어 어플리케이션들 각각을 실행하는 동안, 전자 장치의 디스플레이 내에 표시되는 예시적인 화면들(예, 제1 화면 내지 제3 화면)이 도시된다. 상기 복수의 소프트웨어 어플리케이션들은, 전자 장치에 저장된 이미지 파일 및/또는 비디오 파일의 열람을(browsing 또는 viewing) 위한 제1 화면을 제공하는 제1 소프트웨어 어플리케이션(예, 갤러리 어플리케이션)을 포함할 수 있다. 상기 복수의 소프트웨어 어플리케이션들은, 전자 장치에 저장된 오디오 파일의 열람을 위한 제2 화 면을 제공하는 제2 소프트웨어 어플리케이션(예, 녹음 어플리케이션)을 포함할 수 있다. 상기 복수의 소 프트웨어 어플리케이션들은, 전자 장치의 스토리지(또는 스토리지에 형성된 파티션(partition))에 저장된 파일 및/또는 디렉토리의 열람을 위한 제3 화면을 제공하는 제3 소프트웨어 어플리케이션(예, 파일 열람 (browser) 어플리케이션)을 포함할 수 있다. 일 실시예에서, 전자 장치는, 복수의 소프트웨어 어플리케이션들을, 샌드박스(또는 어플리케이션 샌드박스)로 지칭되는 실행 환경(execution environment)을 이용하여 실행할 수 있다. 샌드박스에 기반하여, 전자 장치는 상기 소프트웨어 어플리케이션의 인스트럭션들을, 상기 전자 장치의 리소스에 제한적으 로 액세스할 수 있는 실행 환경 내에서 실행할 수 있다. 예를 들어, 전자 장치는, 특정 소프트웨어 어플 리케이션에 기반하여 실행되는 기능이 다른 소프트웨어 어플리케이션의 실행을 방해하거나, 또는 중단하지 않게 만들기 위하여, 복수의 소프트웨어 어플리케이션들 각각의 실행 환경들을 분리할 수 있다. 예를 들어, 제1 소 프트웨어 어플리케이션에 기반하여 삭제된 파일은, 상기 실행 환경에 의해 상기 제1 소프트웨어 어플리케이션에 게 전용되는(dedicated to) 디렉토리(예, 제1 소프트웨어 어플리케이션에 의해 생성된 휴지통)로 이동될 수 있 다. 상기 예시 내에서, 제2 소프트웨어 어플리케이션 및/또는 제3 소프트웨어 어플리케이션을 통하여 상기 파 일로 액세스하는 것을 지원하기 위하여, 일 실시예에 따른, 전자 장치는 복수의 소프트웨어 어플리케이션 들에 의해 공유되는 데이터베이스 및/또는 디렉토리를 제공할 수 있다. 도 1을 참고하면, 제1 소프트웨어 어플리케이션에 기반하여 이미지 파일을 삭제하기 위한 입력을 수신한 전자 장치의 예시적인 상태가 도시된다. 상기 입력을 식별한 전자 장치는 디스플레이 상에 표시되는 제1 화면을 통해, 상기 제1 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상기 이미지 파 일에 대응하는 시각적 객체를 표시할 수 있다. 제1 화면을 통해, 전자 장치는, 삭제된 것으로 지시되는 하나 이상의 이미지 파일들 및/또는 비디오 파일들의 리스트를 제공할 수 있다. 제1 화면을 통 해 표시되는 리스트 내에서, 전자 장치는 상기 이미지 파일의 파일 명칭, 상기 이미지 파일에 대한 축소된 사이즈의 썸네일 또는 이미지 파일이 영구적으로 삭제될 타이밍 중 적어도 하나를 포함하는 시각적 객체를 표시할 수 있다. 유사하게, 제2 소프트웨어 어플리케이션에 기반하여 오디오 파일을 삭제하기 위한 입력(예, 상기 2 단계 방식에 기반하는 최초 요청)을 수신한 이후, 전자 장치는 제2 화면을 통해, 상기 입력에 의해 삭제된 것으로 지시되는 오디오 파일에 매칭된 시각적 객체를 표시할 수 있다. 삭제된 것으로 지시되는 하나 이상의 오 디오 파일들의 리스트를 포함하는 제2 화면 내에서, 전자 장치는 상기 오디오 파일과 관련된 정보를 포함하는 시각적 객체를 표시할 수 있다. 시각적 객체는 제2 화면의 리스트의 아이템(또는 리 스트 아이템)으로 지칭될 수 있다. 시각적 객체에 포함되는 정보는, 오디오 파일을 표현하는 아이콘, 오 디오 파일의 파일 명칭, 오디오 파일의 전체 재생 시간 또는 오디오 파일의 생성 시간 중 적어도 하나를 포함할 수 있다. 도 1을 참고하면, 제1 소프트웨어 어플리케이션 및 제2 소프트웨어 어플리케이션 각각에 기반하여 이미지 파일 및 오디오 파일을 삭제하기 위한 입력들을 수신한 이후, 전자 장치는 제3 소프트웨어 어플리케이션에 의해 제공되는 제3 화면을 통해, 상기 이미지 파일 및 상기 오디오 파일 각각에 대응하는 시각적 객체들(153, 154)을 표시할 수 있다. 제3 화면 내에서, 전자 장치는, 제1 소프트웨어 어플리케이션 내지 제3 소 프트웨어 어플리케이션을 포함하는 전자 장치의 복수의 소프트웨어 어플리케이션들에 기반하여 삭제된 것으로 지시되는 하나 이상의 파일들 및/또는 디렉토리들의 리스트를 표시할 수 있다. 도 3의 예시적인 화면의 리스트 내에서, 전자 장치는 제3 소프트웨어 어플리케이션의 실행에 기반하 여 삭제된 것으로 지시되는 파일(예, pdf(portable document format)에 기반하는 문서 파일)에 대응하는 시각적 객체, 제3 소프트웨어 어플리케이션의 실행에 기반하여 삭제된 것으로 지시되는 디렉토리에 대응하는 시각 적 객체, 제2 소프트웨어 어플리케이션의 실행에 기반하여 삭제된 것으로 지시되는 상기 오디오 파일에 대 응하는 시각적 객체 및/또는 제1 소프트웨어 어플리케이션의 실행에 기반하여 삭제된 것으로 지시되는 상 기 이미지 파일에 대응하는 시각적 객체를 표시할 수 있다. 복수의 소프트웨어 어플리케이션들에 의해 삭 제되었던 파일들이 특정 소프트웨어 어플리케이션(예, 제3 소프트웨어 어플리케이션)의 화면(예, 제3 화면)을 통해 표시되는 동안, 전자 장치의 사용자는, 상이한 소프트웨어 어플리케이션들을 개별적으로 (individually) 실행하지 않으면서, 상기 파일들 전부를 하나의 화면을 통해 열람할 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치는, 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화면을, 디스플레이 상에 표시할 수 있다. 전자 장치는 상기 제1 화면에 기반하여, 전자 장치의 메모리 내에서 삭제된 것으로 지시되는(indicated as deleted) 정보를 열람하기(browse) 위한 사용자 입력을 수신할 수 있다. 전자 장치는, 상기 사용자 입력에 응답하여, 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 파일을 포 함하는 정보를 획득할 수 있다. 전자 장치는 디스플레이 상에, 상기 정보에 기반하여, 상기 파일에 대응하는 시각적 객체(예, 시각적 객체들(131, 141, 151, 152, 153, 154))를 포함하는 제2 화면(예, 도 1의 제 3 화면)을 표시할 수 있다. 일 실시예에 따르면, 상기 제2 화면을 이용하여, 전자 장치는, 상이한 소프트웨어 어플리케이션들에 기반 하여 삭제되었던 파일들 및/또는 디렉토리들을 통합적으로 관리하기 위한 사용자 경험(user experience)을 제공 할 수 있다. 상기 제2 화면에 기반하여, 전자 장치는, 상기 소프트웨어 어플리케이션들에 전용되는 휴지 통들에 개별적으로 접근하여, 상이한 파일들 및/또는 디렉토리들을 제거하는 사용자의 액션을 방지할 수 있거나, 또는 간소화할(simplify) 수 있다. 예를 들어, 상기 제2 화면에 기반하여, 전자 장치는 상이한 소프트웨어 어플리케이션들의 휴지통들 각각에 대응하는 다른 화면들을 표시하지 않으면서, 상이한 소프트웨어 어플리케이션들에 기반하여 삭제되었던 파일들 및/또는 디렉토리들을 관리하기 위한 기능을 실행할 수 있다. 이하에서는, 도 2를 참고하여, 상이한 소프트웨어 어플리케이션들에 의해 삭제되었던 파일들 및/또는 디렉토리 들을 관리하기 위한 전자 장치에 의해 실행되는 프로그램들이 설명된다. 도 2는, 일 실시예에 따른, 전자 장치의 블록도의 일 예를 도시한다. 도 1의 전자 장치는, 도 2에 도시된 예시적인 하드웨어 구성 및 상기 하드웨어 구성에 기반하여 실행되는 하나 이상의 프로그램들을 포함할 수 있다. 전자 장치는, 프로세서, 메모리, 디스플레이, 센서 또는 통신 회로 중 적어도 하나를 포함할 수 있다. 프로세서, 메모리, 디스플레이, 센서, 및 통신 회로 는 통신 버스(a communication bus)와 같은 전자 부품(electronical component)에 의해 서로 전기적 으로 및/또는 작동적으로 연결될 수 있다(electronically and/or operably coupled with each other). 이하에 서, 하드웨어 부품들이 작동적으로 결합된 것은, 제1 하드웨어 부품에 의해 제2 하드웨어 부품이 제어되도록, 하드웨어 부품들 사이의 직접적인 연결, 또는 간접적인 연결이 유선으로, 또는 무선으로 수립된 것을 의미할 수 있다. 상이한 블록들에 기반하여 도시되었으나, 실시예가 이에 제한되는 것은 아니며, 도 2의 하드웨어 부품들 중 일부분(예, 프로세서, 메모리 및 통신 회로의 적어도 일부분)이 SoC(system on a chip)와 같이 단일 집적 회로(single integrated circuit)에 포함될 수 있다. 전자 장치에 포함된 하드웨어 부품 의 타입 및/또는 개수는 도 2에 도시된 바에 제한되지 않는다. 예를 들어, 전자 장치는 도 2에 도시된 하 드웨어 부품들 중 일부만 포함할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 하나 이상의 인스트럭션들에 기반하여 데이터를 처리하기 위한 하드웨어 부품을 포함할 수 있다. 데이터를 처리하기 위한 하드웨어 부품은, 예를 들어, ALU(arithmetic and logic unit), FPU(floating point unit), FPGA(field programmable gate array), CPU(central processing unit), NPU(neural processing unit), 및/또는 AP(application processor)를 포함할 수 있다. 제1 프로세서 의 개수는 하나 이상일 수 있다. 예를 들어, 제1 프로세서는 듀얼 코어(dual core), 쿼드 코어(quad core), 헥사 코어(hexa core) 또는 옥타 코어(octa core)와 같은 멀티-코어 프로세서의 구조를 가질 수 있다. 일 실시예에 따른, 전자 장치의 메모리는 프로세서에 입력 및/또는 출력되는 데이터 및/또는 인 스트럭션을 저장하기 위한 하드웨어 부품을 포함할 수 있다. 메모리는, 예를 들어, RAM(random-access memory)과 같은 휘발성 메모리(volatile memory) 및/또는 ROM(read-only memory)과 같은 비휘발성 메모리(non- volatile memory)를 포함할 수 있다. 휘발성 메모리는, 예를 들어, DRAM(dynamic RAM), SRAM(static RAM), Cache RAM, PSRAM (pseudo SRAM) 중 적어도 하나를 포함할 수 있다. 비휘발성 메모리는, 예를 들어, PROM(programmable ROM), EPROM (erasable PROM), EEPROM(electrically erasable PROM), 플래시 메모리, 하드 디스크, 컴팩트 디스크, SSD(solid state drive), eMMC(embedded multi media card) 중 적어도 하나를 포함할 수 있다. 일 실시예에 따른, 전자 장치의 디스플레이는 사용자에게 시각화된 정보(예를 들어, 도 1의 제1 화면 , 제2 화면 및/또는 제2 화면)를 출력할 수 있다. 예를 들어, 디스플레이는, GPU(graphic processing unit) 및/또는 프로세서와 같은 컨트롤러에 의해 제어되어, 사용자에게 시각화된 정보(visualized information)를 출력할 수 있다. 디스플레이는 LCD(liquid crystal display), PDP(plasma display panel) 및/또는 하나 이상의 LED(light emitting diode)를 포함할 수 있다. 상기 LED는 OLED(organic LED)를 포함할 수 있다. 디스플레이는 FPD(flat panel display) 및/또는 전자 종이 (electronic paper)를 포함할 수 있다. 실시예가 이에 제한되지 않으며, 디스플레이는 적어도 부분적으로 휘어진 형태를 가지거나, 변형가능한(deformable) 형태를 가질 수 있다. 변형가능한 디스플레이가 플렉서 블 디스플레이로 지칭될 수 있다. 일 실시예에 따른, 전자 장치의 디스플레이는, 디스플레이 상의 외부 객체(예, 사용자의 손가락)를 탐지하기 위한 센서(예, TSP(touch sensor panel))를 포함할 수 있다. 예를 들어, TSP에 기반하여, 전자 장치는 디스플레이와 접촉하거나, 또는 디스플레이 상을 부유하는(floating) 외부 객체를 탐지할 수 있다. 상기 외부 객체를 탐지하는 것에 응답하여, 전자 장치는 디스플레이 내에 표시되고 있는 시각적 객체들 중에서, 상기 외부 객체와 접촉되거나, 또는 상기 외부 객체와 인접한 디스플레이 상 의 위치에 대응하는 특정 시각적 객체와 관련된 기능을 실행할 수 있다. 일 실시예에 따른 전자 장치의 센서는 전자 장치와 관련된 비-전기적 정보(non-electronic information)로부터 프로세서 및/또는 메모리에 의해 처리될 수 있는 정보를 생성할 수 있다. 예를 들어, 센서는 전자 장치의 지리적 위치(geographic location)를 탐지하기 위한 GPS(global positioning system) 센서를 포함할 수 있다. 상기 GPS 방식 외에도, 센서는, 예를 들어, 갈릴레오 (galileo), 베이더우(beidou, compass)와 같은 GNSS(global navigation satellite system)에 기반하여 전자 장 치의 지리적 위치를 나타내는 정보를 생성할 수 있다. 상기 정보는 메모리에 저장되거나, 프로세서 에 의해 처리되거나, 및/또는 통신 회로를 통해 전자 장치와 구별되는 다른 전자 장치로 송신될 수 있다. 일 실시예에서, 센서는, 빛을 포함하는 전자기파를 탐지하기 위한 이미지 센서, 조도 센서 및/ 또는 ToF 센서를 포함할 수 있다. 센서는, IMU(inertial measurement unit), 자이로 센서, 가속도 센서, 중력 센서 및/또는 6-축(6-DoF(degree of freedom)) 센서와 같은, 전자 장치의 모션을 탐지하기 위한 센 서를 포함할 수 있다. 센서는, 조도 센서, 근접 센서, 그립 센서 및/또는 홀 센서를 포함할 수 있다. 일 실시예에 따른 전자 장치의 통신 회로는 전자 장치 및 외부 전자 장치 사이의 전기 신호의 송신 및/또는 수신을 지원하기 위한 하드웨어를 포함할 수 있다. 통신 회로는, 예를 들어, 모뎀(MODEM), 안테나, O/E(optic/electronic) 변환기 중 적어도 하나를 포함할 수 있다. 통신 회로는, 이더넷 (ethernet), LAN(local area network), WAN(wide area network), WiFi(wireless fidelity), NFC(near field communication), Bluetooth, BLE(bluetooth low energy), ZigBee, LTE(long term evolution), 5G(fifth generation) NR(new radio), 6G(sixth generation) 및/또는 above-6G와 같은 다양한 타입의 프로토콜에 기반 하여 전기 신호의 송신 및/또는 수신을 지원할 수 있다. 비록 도시되지 않았지만, 일 실시예에 따른 전자 장치는 정보를 시각화한 형태 외에 다른 형태로 출력하기 위한 출력 수단을 포함할 수 있다. 예를 들어, 전자 장치는 음성 신호(acoustic signal)를 출력하기 위한 스피커를 포함할 수 있다. 예를 들어, 전자 장치는 진동에 기반하는 햅틱 피드백을 제공하기 위한 모터 및/또는 햅틱 액추에이터를 포함할 수 있다. 도 2를 참고하면, 메모리 내에서, 프로세서가 데이터에 수행할 연산, 및/또는 동작을 나타내는 하나 이상의 인스트럭션들(또는 명령어들)이 저장될 수 있다. 하나 이상의 인스트럭션들의 집합은, 펌웨어, 운영 체 제, 프로세스, 루틴, 서브-루틴, 프로그램, 및/또는 소프트웨어 어플리케이션(또는, 어플리케이션)으로 참조될 수 있다. 예를 들어, 전자 장치, 및/또는 프로세서는, 운영체제, 펌웨어, 드라이버, 및/또는 소프트 웨어 어플리케이션의 형태로 배포된 복수의 인스트럭션들의 집합(set of a plurality of instructions)이 실행 될 시에, 도 3 내지 도 5 및/또는 도 8의 동작들 중 적어도 하나를 수행할 수 있다. 이하에서, 소프트웨어 어 플리케이션이 전자 장치에 설치되었다는 것은, 소프트웨어 어플리케이션의 형태로 제공된 복수의 인스트럭 션들이 전자 장치의 메모리 내에 저장된 것으로써, 소프트웨어 어플리케이션이 프로세서에 의해 실행 가능한(executable) 포맷(예, 전자 장치의 운영 체제에 의해 지정된 확장자를 가지는 파일)으로 저장 된 것을 의미할 수 있다. 도 2를 참고하면, 전자 장치에 설치된 소프트웨어 어플리케이션들은, 타겟에 기반하여, 프레임워크 레이어 및/또는 어플리케이션 레이어로 분류될 수 있다. 실시예가 이에 제한되는 것은 아니며, 상기 소프 트웨어 어플리케이션들은, 하드웨어 추상화 레이어(hardware abstraction layer, HAL)와 같은 다른 레이어로 분 류될 수 있다. 도 2의 레이어들은, 논리적으로(또는 설명의 편의를 위하여) 구분된 것으로 메모리의 주소 공간이 상기 레이어들에 의해 구분되는 것을 의미하지 않을 수 있다. 예를 들어, 프레임워크 레이어 내에, 전자 장치에 설치된 다른 소프트웨어 어플리케이션에 의해 실행 가능한 기능을 제공하기 위한 소프트웨어 어플리케이션들(예, 트래쉬 프로바이더 및/또는 미디어 프로바이 더)이 분류될 수 있다. 프레임워크 레이어로 분류되는 소프트웨어 어플리케이션들은, 다른 소프트웨 어 어플리케이션에 의해 실행가능한(또는 호출(invoke 또는 call)가능한) API(application programming interface)를 제공할 수 있다. 예를 들어, 어플리케이션 레이어 내에, 전자 장치의 사용자를 타겟으로 설계된 소프트웨어 어플리케 이션들이 분류될 수 있다. 어플리케이션 레이어로 분류되는 소프트웨어 어플리케이션의 일 예로, 이미지 파일 및/또는 비디오 파일의 열람을 위한 갤러리 어플리케이션, 오디오 파일의 생성, 편집 및/또는 관리를 위한 녹음 어플리케이션, 메모리에 저장된 파일 및/또는 디렉토리의 관리를 위한 파일 열람 어플리케 이션, 텍스트 메시지(예, SMS(short message service) 및/또는 LMS(long message service))의 송신 및/또 는 수신을 위한 메신저 어플리케이션이 예시되지만, 실시예가 이에 제한되는 것은 아니다. 일 실시예에서, 어플리케이션 레이어로 분류되는 소프트웨어 어플리케이션의 실행에 기반하여, 전자 장치 의 프로세서는 디스플레이 상에 상기 실행된 소프트웨어 어플리케이션에 의해 제공되는 화면(예, 도 1의 제1 화면, 제2 화면 및/또는 제3 화면)을 표시할 수 있다. 예를 들어, 디스플 레이를 통해 보일 수 있는(visible) 화면에 대응하는 적어도 하나의 어플리케이션이 포어그라운드 (foreground) 어플리케이션으로, 프로세서에 의해 실행되는 상기 복수의 소프트웨어 어플리케이션들 중에서, 상 기 포어그라운드 어플리케이션과 상이한 다른 소프트웨어 어플리케이션들이 백그라운드(background) 어플리케이 션(또는 백그라운드 프로세스(background process)및/또는 데몬(daemon))으로 구분될 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 미디어 프로바이더의 실행에 기반하여, 메모리 내에 저장된 미디어 콘텐트(예, 이미지 파일, 비디오 파일 및/또는 오디오 파일)를 관리할 수 있다. 상기 미디 어 콘텐트를 관리하기 위하여, 메모리 내에 미디어 프로바이더의 실행에 기반하여 업데이트되는 미디 어 데이터베이스(database, DB)가 저장될 수 있다. 미디어 DB와 같은 DB는, 체계화된 (systematized) 정보의 집합, 상기 정보를 관리하는 하나 이상의 소프트웨어 어플리케이션들 또는 이들의 조합 을 포함할 수 있다. 상기 정보의 집합에서, 서로 다른 정보가 타입, 속성, 컬럼(column), 레코드, 튜플 (tuple), 아이템, 및/또는 테이블과 같은 단위에 기반하여 서로 조합될 수 있다. 정보의 조합은, DB 내에서 정 보의 추가, 삭제, 변경(update) 및 검색에 이용될 수 있다. 예를 들어, 전자 장치가 지정된 조건의 정보 를 검색하는 상태에서, 전자 장치는 DB를 이용하여 상기 조건에 만족하는 정보 및 상기 정보와 함께 조합 된 다른 정보를 더 식별할 수 있다. 미디어 DB를 관리하는 관점에서, 미디어 프로바이더는 매니징 어플리케이션(또는 미디어 DB 매니징 어플리케이션)으로 지칭될 수 있다. 일 실시예에서, DB의 업데이트 및/또는 검색은 SQL(structured query language)과 같은 포맷 내 문자열에 기반 하여 수행될 수 있다. 예를 들어, 미디어 프로바이더를 실행하는 프로세서는, 다른 소프트웨어 어플 리케이션에 기반하여 제공된, SQL 포맷의 문자열을 이용하여, 미디어 DB에 저장된 정보를 검색할 수 있다. 프로세서는 검색된 정보를 이용하여 상기 다른 소프트웨어 어플리케이션을 실행하여, 상기 검색된 정보를 활용하는(utilizing) 상기 다른 소프트웨어 어플리케이션의 기능을 실행할 수 있다. 일 실시예에서, 미디어 프로바이더의 실행에 기반하여 관리되는 미디어 DB는, 메모리에 저장된 미디어 콘텐트들 각각에 대응하는 레코드들을 포함할 수 있다. 상기 레코드들 각각은, 레코드들을 구별하기 위 한 인덱스 값(index value)(예, 고유 값(unique value), 키 값(key value) 및/또는 식별자(identifier, ID))을 포함할 수 있다. 상기 레코드들 각각은, 대응하는 미디어 콘텐트의 경로, 이름, 타임스탬프(예, 미디어 콘텐트 가 생성된 타이밍을 나타내는 타임스탬프) 또는 타입(예, 미디어 타입 및/또는 MIME(multipurpose internet mail extensions) 타입) 중 적어도 하나를 포함할 수 있다. 상기 레코드들 각각은, 대응하는 미디어 콘텐트가 업데이트된 횟수를 나타내는 카운트 넘버를 포함할 수 있다. 상기 카운트 넘버는, \"generation_modified\"와 같 은 명칭을 가질 수 있다. 상기 카운트 넘버는, 미디어 콘텐트를 적어도 부분적으로 변경하기 위한 이벤트에 응답하여, 원자성(atomicit y)에 기반하여 점진적으로(gradually) 증가될 수 있다. 예를 들어, 미디어 DB의 레코드들 각각의 카운트넘버들 중 최대 값이 k인 경우, 전자 장치는 미디어 콘텐트의 업데이트에 응답하여, 상기 미디어 콘텐트의 레코드의 카운트 넘버를 k+1로 변경할 수 있다. 예를 들어, 가장 큰 카운트 넘버를 가지는 미디어 DB의 레코드는, 마지막으로 업데이트된 미디어 콘텐트와 연결될(associated 또는 linked) 수 있다. 일 실시예에서, 미디어 DB 내 레코드들 각각은, 대응하는 미디어 콘텐트가 2 단계 방식에 기반하여 삭제되 었는지 여부(또는, 2 단계 방식에 의해 설정된 최초 입력에 기반하여 삭제되었는지 여부)를 나타내는 속성 (attribute)을 포함할 수 있다. 상기 속성은, \"is_trashed\"와 같은 명칭을 가질 수 있다. 상기 속성은, 불리 언 타입(boolean type)에 기반하는 값을 가질 수 있다. 예를 들어, 미디어 콘텐트가 삭제되지 않은 경우, 미디 어 DB 내에서 상기 미디어 콘텐트에 대응하는 상기 속성은, FALSE를 나타내는 지정된 값(예, 0 및/또는 logic 0)을 가질 수 있다. 예를 들어, 미디어 콘텐트를 삭제하기 위한 최초 입력에 응답하여, 프로세서는 상기 미디어 콘텐트에 대응하는 미디어 DB의 레코드 내에서, \"is_trashed\"의 명칭을 가지는 속성에, TRUE 를 나타내는 지정된 값(예, 1 및/또는 logic 1)을 할당(assign)할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 트래쉬 프로바이더의 실행에 기반하여, 메모리 내 상이한 소프트웨어 어플리케이션들(예, 어플리케이션 레이어로 분류된 소프트웨어 어플리케이션들)의 실행에 기반하여 공통으로(commonly) 액세스가능한 트래쉬 DB 및/또는 디렉토리를 제공할 수 있다. 트래쉬 DB를 관리하는 관점에서, 트래쉬 프로바이더는 매니징 어플리케이션(또는 트래쉬 DB 매 니징 어플리케이션)으로 지칭될 수 있다. 디렉토리를 관리하는 관점에서, 트래쉬 프로바이더는 휴지 통 디렉토리 매니징 소프트웨어 어플리케이션으로 지칭될 수 있다. 프로세서는, 트래쉬 프로바이더 가 실행된 상태 내에서, 미디어 DB를 주기적으로 및/또는 반복적으로 스캔하여, 미디어 DB 및 트래쉬 DB의 동기화를 수행할 수 있다. 미디어 DB의 속성(예, \"is_trashed\"와 같은 명칭을 가지는 속성)에 기반하여 트래쉬 DB를 변경하는 프로세서의 동작이, 도 4 및/또는 도 5를 참고하여 설명된다. 프로 세서는, 트래쉬 프로바이더가 실행된 상태 내에서, 디렉토리를 스캔하여, 트래쉬 프로바이더 와 상이한 다른 소프트웨어 어플리케이션에 기반하여 디렉토리 내에 저장된 서브 디렉토리 및/또는 파일을 식별할 수 있다. 디렉토리를 스캔하는 프로세서의 동작이 도 6 및/또는 도 7을 참고하여 설 명된다. 일 실시예에서, 안드로이드와 같은 운영 체제에 기반하여 동작하는 전자 장치는, 콘텐트 프로바이더에 기 반하는 소프트웨어 어플리케이션들 사이의 정보의 교환을 지원할 수 있다. 콘텐트 프로바이더는, 안드로이드에 기반하여 실행되는 소프트웨어 어플리케이션에 포함되는 컴포넌트일 수 있다. 콘텐트 프로바이더에 의해 설정 된 객체(예, 콘텐트 리졸버(resolver) 객체)를 이용하여 프로세서는, 특정 소프트웨어 어플리케이션으로부 터 다른 소프트웨어 어플리케이션으로 정보를 제공하기 위한 기능을 실행할 수 있다. 예를 들어, 트래쉬 프로 바이더와 상이한 소프트웨어 어플리케이션들을 실행하는 프로세서는, 콘텐트 프로바이더를 이용하여, 디렉토리 내에 파일 및/또는 디렉토리를 저장하기 위한 트래쉬 프로바이더의 기능을 실행할 수 있다. 상기 기능을 실행하는 프로세서는, 디렉토리 내에 상기 콘텐트 프로바이더에 의해 지정된 파일 및/또 는 디렉토리를 저장할 수 있거나, 또는 트래쉬 DB 내에 상기 콘텐트 프로바이더에 의해 지정된 파일 및/또 는 디렉토리와 관련된 레코드를 생성할 수 있거나, 또는 추가할 수 있다. 콘텐트 프로바이더에 기반하는 프로 세서의 동작이 도 8을 참고하여 설명된다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치는, 상이한 소프트웨어 어플리케이션들에 의해 삭제되는 파일들 및/또는 디렉토리들을 통합적으로 관리하기 위한 디렉토리 및/또는 DB(예, 트래쉬 DB)를 포함 할 수 있다. 예를 들어, 트래쉬 프로바이더의 실행에 기반하여, 전자 장치의 프로세서는 디렉 토리 및/또는 트래쉬 DB를 주기적으로 업데이트할 수 있다. 디렉토리 및/또는 트래쉬 DB 에 기반하여, 전자 장치는, 파일 및/또는 디렉토리가 어느 소프트웨어 어플리케이션의 실행에 기반하여 삭 제되었는지를 나타내는 정보를 제공할 수 있다. 디렉토리 및/또는 트래쉬 DB에 기반하여, 전자 장치 는, 특정 소프트웨어 어플리케이션에 의해 관리되는 휴지통을 통하여, 다른 소프트웨어 어플리케이션에 의 해 삭제되었던 파일 및/또는 디렉토리에 액세스하는 것을 지원할 수 있다. 특정 파일을 삭제하였던 전자 장치 의 사용자는, 상기 파일을 삭제하였던 소프트웨어 어플리케이션을 실행하지 않더라도, 임의의 소프트웨어 어플리케이션의 휴지통을 통하여, 상기 파일에 액세스할 수 있다. 트래쉬 DB 및/또는 디렉토리의 구 조에 기반하여, 전자 장치는 삭제된 것으로 지시되는 파일 및/또는 디렉토리에 대한 정보를 제공할 수 있 다. 이하에서는, 도 3을 참고하여, 트래쉬 프로바이더의 실행에 기반하는 전자 장치의 예시적인 동작이 설명된다. 도 3은, 일 실시예에 따른, 전자 장치의 흐름도를 도시한다. 도 1 및/또는 도 2의 전자 장치는, 도 3을 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 2의 전자 장치 및/또는 프로세서는 도 3 의 동작들 중 적어도 하나를 수행할 수 있다. 일 실시예에 따른, 전자 장치는, 디스플레이(예, 도 2의 디스플레이) 상에 표시되는 화면을 제공하지 않는 트래쉬 프로바이더를 이용하여, 삭제된 것으로 지시되는 하나 이상의 파일들 및/또는 디렉토리들을 관리할 수 있다. 전자 장치의 프로세서는, 전자 장치의 부팅의 완료에 기반하여, 트래쉬 프로바이더를 자동 적으로 실행할 수 있다. 트래쉬 프로바이더는, 백그라운드 프로세스로써 실행될 수 있고, 디스플레이 상 에 표시되는 화면 및/또는 상기 화면에 기반하는 전자 장치 및 사용자 사이의 상호작용(interaction)과 독립적 으로 실행될 수 있다. 백그라운드 프로세스로써 실행되는 트래쉬 프로바이더에 기반하여, 프로세서는 동 작들(310, 320) 중 적어도 하나를 수행할 수 있다. 동작들(310, 320) 중 적어도 하나는 프로세서에 의해 반복 적으로 수행될 수 있거나, 또는 주기적으로 수행될 수 있다. 도 3을 참고하면, 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 미디어 프로 바이더(예, 도 2의 미디어 프로바이더)의 미디어 DB(예, 도 2의 미디어 DB)에 대한 트래쉬 DB(예, 도 2의 트래쉬 DB)에 대한 동기화를 수행할 수 있다. 동작의 동기화는, 삭제된 것으로 지시되는 속성을 가지는 미디어 DB 내 레코드를 로드(load)(또는 검색)하는 동작을 포함할 수 있다. 로드된 미디어 DB 내 레코 드에 기반하는 프로세서의 동작이, 도 4를 참고하여 설명된다. 동작의 동기화는, 미디어 DB의 레코드들 및 트래쉬 DB의 레코드들의 비교(또는 조화(reconcilation))에 기반하여, 트래쉬 DB의 레코드들 중에서, 미디어 DB에 의해 복원된 것으로 지시되는 파일 및/또는 디렉토리에 대응하는 레코드를 삭제하는 동작을 포함할 수 있 다. 미디어 DB의 레코드들 및 트래쉬 DB의 레코드들의 비교에 기반하는 프로세서의 동작이 도 5를 참고하여 설 명된다. 도 3을 참고하면, 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 전자 장치 내 복수의 소프트웨어 어플리케이션들(예, 소프트웨어 어플리케이션)에 기반하여 삭제된 것으로 지시되는 파일 및/또는 디렉토리를 스캔할 수 있다. 상기 스캔은, 트래쉬 프로바이더에 의해 관리되는 지정된 디렉 토리(예, 도 2의 디렉토리)를 스캔하는 동작을 포함할 수 있다. 예를 들어, 트래쉬 프로바이더와 상 이한 소프트웨어 어플리케이션을 실행하는 동안, 프로세서는 파일 및/또는 디렉토리를 삭제하기 위한 사용자 입 력에 응답하여, 상기 지정된 디렉토리 내에 상기 사용자 입력에 대응하는 상기 파일 및/또는 상기 디렉토리를 이동할 수 있거나, 또는 저장할 수 있다. 프로세서는, 트래쉬 프로바이더에 의해 요구되는 규칙에 기반하 여, 상기 지정된 디렉토리 내에 상기 파일 및/또는 상기 디렉토리를 저장할 수 있다. 예를 들어, 상기 지정된 디렉토리 내에 저장되는 상기 파일 및/또는 상기 디렉토리는, 상기 규칙에 기반하는 경로를 가질 수 있다. 상 기 규칙에 기반하는 경로를 가지는 파일 및/또는 디렉토리를 이용하여, 프로세서는 트래쉬 DB 내에, 상기 파일 및/또는 상기 디렉토리에 기반하는 레코드를 생성할 수 있거나, 또는 변경할 수 있다. 상기 규칙에 기반하는 경로를 가지는, 지정된 디렉토리 내 파일 및/또는 디렉토리를 식별한 프로세서의 동작이 도 6 및/또는 도 7을 참고하여 설명된다. 도 3을 참고하면, 동작 내에서, 소프트웨어 어플리케이션을 실행하는 전자 장치의 프로세서는, 메모 리 내에서 삭제된 것으로 지시되는 정보(예, 파일 및/또는 디렉토리)를 획득하기 위한 제1 기능을 실행할 수 있 다. 상기 제1 기능은, 소프트웨어 어플리케이션의 실행에 기반하여 제공되는 화면을 통해 수신된 사용자 입력에 응답하여, 실행될 수 있다. 동작의 소프트웨어 어플리케이션은, 도 2의 어플리케이션 레이어 에 포함된 복수의 소프트웨어 어플리케이션들을 포함할 수 있다. 소프트웨어 어플리케이션에 의해 지원되는 상기 제1 기능을 실행하는 프로세서는, 소프트웨어 어플리케이션들 사이의 통신을 위해 정의된 콘텐트 프로바이더 및/또는 인텐트를 이용하여, 트래쉬 프로바이더의 실행에 기반하는 동작을 수행할 수 있 다. 도 3을 참고하면, 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 트래쉬 DB와 연결되거나, 및/또는 트래쉬 프로바이더에 의해 관리되는 디렉토리에 저장된 파일들 및/또는 디렉토리들과 관련 된 정보를 제공할 수 있다. 프로세서는 소프트웨어 어플리케이션에 기반하여 지정된 조건을 이용하여 트 래쉬 DB를 검색하여, 소프트웨어 어플리케이션으로 제공될 정보를 획득할 수 있거나, 또는 생성할 수 있다. 프로세서는, 트래쉬 프로바이더와 관련된 지정된 디렉토리에 포함된 파일들 및/또는 디렉토리들에기반하여, 소프트웨어 어플리케이션으로 제공될 정보를 획득할 수 있다. 동작의 정보는, 콘텐트 프 로바이더의 콘텐트 리졸버 객체에 매칭되는 커서 객체의 포맷으로, 소프트웨어 어플리케이션으로 제공될 수 있다. 도 3을 참고하면, 동작 내에서, 소프트웨어 어플리케이션을 실행하는 전자 장치의 프로세서는, 트래 쉬 프로바이더의 동작에 기반하여 제공된 정보에 기반하는 제2 기능을 실행할 수 있다. 상기 제2 기 능은, 동작의 제1 기능을 실행하기 위한 사용자 입력에 의해 특정될 수 있다. 예를 들어, 소프트웨어 어 플리케이션의 휴지통에 액세스하기 위한 사용자 입력에 응답하여, 전자 장치의 프로세서는 동작의 제 1 기능의 실행에 기반하여 트래쉬 프로바이더에 의해 관리되는 정보를 획득한 다음, 동작의 제2 기능 의 실행에 기반하여 상기 휴지통과 관련된 화면(예, 도 1의 제1 화면, 제2 화면 및/또는 제3 화면 )을 표시할 수 있다. 실시예가 이에 제한되는 것은 아니며, 동작의 제2 기능은, 동작의 정보를 적어도 부분적으로 표시하는 동작을 포함할 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는 소프트웨어 어플리케이션을 실행하는 동안, 트래쉬 프로바이더에 의해 관리되고, 복수의 소프트웨어 어플리케이션들에 의해 액세스가능한 미디어 DB와 동기화된, 트래쉬 DB를 이용하여, 메모리 내에서 삭제된 것으로 지시되는 파일 및/또는 디렉토리를 포함하는 정 보를 획득할 수 있다. 상기 정보를 획득한 프로세서는, 소프트웨어 어플리케이션과 상이한 다른 소프트웨 어 어플리케이션에 의해 삭제되었던 파일 및/또는 디렉토리를, 동작의 제2 기능의 실행에 기반하여, 사용 자에게 출력할 수 있다. 도 4는, 복수의 데이터베이스들(예, 도 2의 미디어 DB 및/또는 트래쉬 DB)의 동기화를 수행하는 전자 장치의 예시적인 동작에 대한 흐름도를 도시한다. 도 1 및/또는 도 2의 전자 장치는, 도 4를 참고하여 설 명되는 전자 장치의 동작을 수행할 수 있다. 도 2의 전자 장치 및/또는 프로세서는 도 4의 동작들 중 적어도 하나를 수행할 수 있다. 도 4를 참고하여 설명되는 동작들은, 도 3의 동작과 관련될 수 있거나, 또는 포함될 수 있다. 도 4의 동작들은, 도 2의 트래쉬 프로바이더를 실행하는 전자 장치에 의해 수행될 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 미디어 DB(예, 도 2의 미디어 DB) 및 트래쉬 DB(예, 도 2의 트래쉬 DB)의 동기화를 개시할 수 있다. 프로세서는 트래쉬 프로바이 더의 실행에 기반하여, 동작을 수행할 수 있다. 트래쉬 프로바이더는, 전자 장치가 부팅하는 동안, 또는 전자 장치의 부팅의 완료에 응답하여, 실행될 수 있다. 트래쉬 프로바이더의 실행에 기반하여, 전자 장치의 프 로세서는 도 4의 동작들을 수행할 수 있다. 동작은, 도 3의 동작과 같이, 트래쉬 프로바이더에 의해 관리되는 지정된 디렉토리 및/또는 트래쉬 DB와 관련된 기능(예, 트래쉬 프로바이더와 상이한 다른 소프트웨어 어플리케이션의 기능)의 실행에 기반하여, 수행될 수 있다. 도 4의 동작의 동기화를 수행하기 이전에, 도 2의 미디어 프로바이더에 의해 관리되는 미디어 DB는, 미디어 콘텐트의 생성, 변경 및/또는 삭제에 기반하여 변경될 수 있다. 예를 들어, 사용자가 전자 장치의 카메 라를 제어하여 사진을 촬영하는 경우, 상기 사진을 포함하는 이미지 파일이 전자 장치에 저장될 수 있고, 상기 이미지 파일에 대응하는 레코드가 미디어 DB 내에 추가될 수 있다. 예를 들어, 사용자가 도 2의 갤러리 어플리 케이션을 이용하여 상기 이미지 파일을 편집하는 경우(예, 상기 이미지 파일의 명칭을 변경하거나, 및/또 는 상기 이미지 파일에 포함된 사진의 밝기 및/또는 채도를 조절하는 경우), 미디어 DB의 상기 레코드 내 카운 트 넘버(예, \"generation_modified\"의 명칭을 가지는 카운트 넘버)가 증가될 수 있다. 예를 들어, 사용자가 도 2의 파일 열람 어플리케이션 및/또는 갤러리 어플리케이션의 실행에 기반하여 상기 이미지 파일을 삭 제하는 경우, 미디어 DB의 상기 레코드 내 지정된 속성(예, \"is_trashed\"의 명칭을 가지는 속성)에, 삭제를 지 시하는 지정된 값(예, TRUE, 1 및/또는 logic 1)이 할당될 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 동작의 동기화에 기반하여, 미디어 DB의 레코드들 중에서, 지 정된 속성으로써, 삭제된 파일 및/또는 디렉토리를 지시하는 지정된 값을 가지는 하나 이상의 레코드들을 획득 할 수 있다. 획득된 하나 이상의 레코드들에 기반하여, 프로세서는 트래쉬 DB를 업데이트할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 파일 및/또는 디렉토리와 연 결된 미디어 DB의 레코드들로부터, 지정된 카운트 넘버보다 큰 카운트 넘버를 가지는 적어도 하나의 레코드를 식별할 수 있다. 동작의 카운트 넘버는 \"generation_modified\"의 명칭을 가지는 미디어 DB의 레코드 내컬럼을 포함할 수 있다. 동작의 지정된 카운트 넘버는, 동작의 동기화 이전에 미디어 DB 및 트래쉬 DB를 동기화하던 타이밍에 획득되었던, 미디어 DB에 저장된 최대 카운트 넘버일 수 있다. 동작에 기반하 여, 프로세서는 미디어 DB로부터, 상기 타이밍 이후에 업데이트된 적어도 하나의 레코드를 검색할 수 있다. 일 실시예에서, 트래쉬 프로바이더를 실행하는 프로세서가 동작에 기반하여, 미디어 DB의 적어도 하나의 레코드를 식별하는 것은, 상기 미디어 DB에 대응하는 미디어 프로바이더로, 상기 적어도 하나의 레코드를 식별 하기 위한 쿼리(예, SQL에 기반하는 문자열을 포함하는 쿼리)를 제공하는 동작을 포함할 수 있다. 미디어 프로 바이더를 이용하여 미디어 DB에 액세스하기 위하여, 프로세서는, 상기 미디어 프로바이더로 상기 쿼리를 포함하 는 객체(예, 인텐트 객체 및/또는 콘텐트 리졸버 객체)를 생성할 수 있다. 일 실시예에서, 상기 문자열은, 미디어 DB의 명칭이 \"files\"인 경우, \"SELECT * FROM files WHERE generation_modified > ?\"의 포맷을 가질 수 있다. 대문자 및 소문자를 구분하여 기재된 문자열이 도시되지만, 실시예가 이에 제한되는 것은 아니며, 프로세서는 소문자로 기재된 문자열에 대해서도 유사하게 동작할 수 있다. 상기 문자열의 \"SELECT\"는, 데이터베이스의 검색을 지시하는 SQL의 명령 코드(operation code)일 수 있 다. 상기 문자열의 \"*\"은, 미디어 DB로부터 추출하고자 하는 컬럼의 명칭으로 교체될 수 있다. 프로세서는, 상기 문자열의 \"FROM\" 이후의 오퍼랜드(operand)(예, \"files\")를, 상기 문자열에 기반하여 검색될 데이터베이스 (또는 상기 데이터베이스 내 테이블)의 명칭으로써 식별할 수 있다. 프로세서는, 상기 문자열의 \"WHERE\" 이후 의 오퍼랜드를, 검색 조건(또는 필터링 조건)으로써 식별할 수 있다. 상기 문자열의 \"?\"은, 동작의 지정 된 카운트 넘버로 교체될(replaced) 수 있다. 예를 들어, 상기 문자열의 \"generation_modified > ?\"은, \"generation_modified\"의 명칭을 가지는 속성이 \"?\"에 기재된 카운트 넘버를 초과하는 레코드를 검색함을 지시 할 수 있다. 상기 문자열을 포함하는 상기 객체에 기반하여 미디어 프로바이더를 실행하여, 프로세서는 동작 의 적어도 하나의 레코드를 획득할 수 있다. 도 4를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 식별된 적어도 하나의 레코드 가 삭제를 지시하는 지정된 속성을 포함하는지 여부에 기반하여, 트래쉬 DB를 업데이트할 수 있다. 동작 의 지정된 속성은, \"is_trashed\"의 명칭을 가지는 컬럼일 수 있다. 파일 및/또는 디렉토리의 삭제를 지시하는 지정된 값을, 상기 지정된 속성으로 저장하는 레코드를 식별한 프로세서는, 상기 레코드에 기반하여, 트래쉬 DB 를 업데이트할 수 있다. 예를 들어, 상기 레코드에 대응하는 레코드가 트래쉬 DB에 삽입(inserted)될 수 있다. 예를 들어, 상기 레코드에 대응하는 트래쉬 DB의 레코드가 업데이트될 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는, 미디어 DB의 카운트 넘버를 이용하여, 미디어 DB를 제한적으로 검색할 수 있다. 이미지, 비디오 및/또는 사운드와 관련된 전자 장치의 모든 파일들이 미디어 DB에 의해 관리되기 때문에, 미디어 DB 전체를 검색하는 것은, 상대적으로 긴 시간을 요구할 수 있다. 프로세 서는 상기 카운트 넘버 보다 큰 카운트 넘버를 가지는 미디어 DB의 레코드들 내에서, 지정된 속성에 기반하는 검색을 수행하여, 미디어 DB 및 트래쉬 DB를 마지막으로 동기화한 타이밍 이후에 새롭게 업데이트된 미디어 DB 의 레코드 만을 추출할 수 있다. 상술된 미디어 DB의 레코드의 추출에 기반하여, 프로세서는 상대적으로 짧은 시간, 및/또는 상대적으로 적은 계산량에 기반하여, 트래쉬 DB의 업데이트에 이용될 하나 이상의 레코드들을 획 득할 수 있다. 도 4를 참고하여 상술된 동작에 기반하여, 프로세서는 미디어 DB 및 트래쉬 DB를 마지막으로 동기화한 이후에 삭제된 하나 이상의 미디어 콘텐트들(예, 이미지 파일, 비디오 파일 및/또는 오디오 파일)을 식별할 수 있다. 도 4의 동작에 기반하여, 상기 하나 이상의 미디어 콘텐트들에 대응하는 하나 이상의 레코드들이 트래쉬 DB 내 에 삽입될 수 있다. 프로세서가 2 단계 방식에 기반하여 파일 및/또는 디렉토리를 삭제하기 때문에, 삭제된 것으로 지시되는 파일 및/또는 디렉토리가 사용자의 추가적인 입력에 의해 복원될 수 있다. 이하에서는, 도 5를 참고하여, 사용자 입력에 의해 복원된 파일 및/또는 디렉토리를 식별하기 위한 전자 장치의 예시적인 동작이 설명된다. 도 5는, 복수의 데이터베이스들의 동기화를 수행하는 전자 장치의 예시적인 동작에 대한 흐름도를 도시한다. 도 1 및/또는 도 2의 전자 장치는 도 5를 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 2의 전자 장치 및/또는 프로세서는 도 5의 동작들 중 적어도 하나를 수행할 수 있다. 도 5를 참고하여 설명되는 동작들은, 도 3의 동작 및/또는 도 4의 동작들과 관련될 수 있거나, 또는 포함될 수 있다. 도 5 의 동작들은, 도 2의 트래쉬 프로바이더를 실행하는 전자 장치에 의해 수행될 수 있다. 도 5의 동작들은, 미디어 DB 내에서 지정된 속성으로써, 삭제되지 않았음을 지시하는 지정된 값을 가지는 레코 드 및/또는 미디어 DB 내에 존재하지 않는 레코드를, 트래쉬 DB로부터 삭제하기 위하여 수행될 수 있다. 미디 어 DB에 액세스하기 위한 쿼리의 개수를 줄이기 위하여, 프로세서는 레코드의 인덱스 값에 의해 구별되는, 미디 어 DB의 레코드들의 그룹들을 이용할 수 있다. 미디어 DB의 그룹은, 미디어 DB와 연결된 파일들을 구별하기 위 한 인덱스 값들의 구간에 대응할 수 있다. 프로세서는 상기 구간 내에서, 지정된 속성에 의해 삭제된 것으로 지시되는 파일들 및/또는 디렉토리들의 개수를 획득할 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 미디어 DB(예, 도 2의 미디어 DB) 및 트래쉬 DB(예, 도 2의 트래쉬 DB)로부터, 인덱스 값에 기반하는 그룹들에 각각 대응하고, 그 룹들 내에서 삭제된 것으로 지시되는 속성을 가지는, 파일 및/또는 디렉토리의 개수들을 포함하는 정보를 획득 할 수 있다. 동작의 속성은, \"is_trashed\"의 명칭을 가지는 지정된 속성을 포함할 수 있다. 지정된 범위 (예, 512)로 그룹핑된 인덱스 값의 그룹들(또는 구간들)을 이용하여, 프로세서는, 상기 그룹들 각각에서 삭제된 것으로 지시되는 속성을 가지는 파라미터 및/또는 디렉토리의 개수들을 획득할 수 있다. 예를 들어, 상기 인덱스 값이 \"_id\"의 필드 명칭을 가지고, 미디어 DB 및/또는 미디어 DB 내 테이블의 명칭이 \"files\"인 경우, \"SELECT COUNT(_id) FROM files WHERE is_trashed=1 GROUP BY _id/512 ORDER BY _id ASC\"의 포맷을 가지는 문자열(또는 상기 문자열을 포함하는 쿼리)이, 미디어 DB의 검색을 위해 이용될 수 있다. 상기 문자열의 \"COUNT(_id)\"는, 상기 문자열 내에서, \"WHERE\" 이후의 문자열에 의해 설정된 조건을 만족하는 레코드 들의 개수를 출력할 것을 지시할 수 있다. 상기 문자열에 기반하여 미디어 DB를 검색하는 경우, 프로세서는, 그룹들 각각에서, 삭제된 파일 및/또는 디렉토리를 지시하는 지정된 값을 가지는 레코드들의 개수를 획득할 수 있다. 상기 문자열에 기반하여 미디어 DB를 검색하는 경우, 프로세서는 (512Х(n-1)+1) 부터 (512Хn) 까지의 인덱스 값들을 포함하는 그룹들(n > 0) 내에서, 삭제된 것으로 지시되는 지정된 값을 상기 지정된 속성으로 가 지는(예, \"is_trashed=1\"), 레코드들의 개수를 획득할 수 있다. 동작에 기반하여 획득된 정보는, 2 차원 배열을 포함할 수 있다. 상기 2 차원 배열은, 상기 문자열에 기 반하여 미디어 DB를 검색하여 획득된, 그룹들에 포함된 레코드들의 개수들 및 상기 그룹들의 대푯값(예, 512Х (n-1) 값으로 설정되거나 또는 보정된 인덱스 값)을 포함할 수 있다. 예를 들어, 인덱스 값에 의해 그룹핑된 그룹들에 기반하여, 프로세서는 표 1의 제1 행 및 제2 행을 원소(elements)로 포함하는 2 차원 배열을 획득할 수 있다. 표 1 n 1 2 3 ... 제n 그룹에 포함 된 미디어 DB의 레코드들인덱스 값이 1 부터 512인, 최대 512 개의 레코드들인덱스 값이 513 부터 1024 인, 최대 512 개 의 레코드들인덱스 값이 1025 부 터 1536 인, 최대 512 개의 레코드들... 제1 행 0 ( = 512 Х (1-1))512 ( = 512 Х (2- 1))1024 ( = 512 Х (3- 1))... 제2 행 제1 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수 제2 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수제3 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수... 상술한 바와 같이, 미디어 DB를 검색하는 프로세서의 동작은, 트래쉬 DB에 대하여 유사하게 수행될 수 있다. 예를 들어, 프로세서는, 트래쉬 DB 내 테이블의 명칭이 \"local\"인 경우, \"SELECT COUNT(_id) FROM local WHERE is_trashed=1 GROUP BY _id/512 ORDER BY _id ASC\"의 포맷을 가지는 문자열(또는 상기 문자열을 포함하는 쿼리)을 이용하여 트래쉬 DB를 검색할 수 있다. 상기 트래쉬 DB의 검색에 기반하여, 프로세서는, 트래쉬 DB의 인덱스 값들에 의해 그룹핑된 그룹들 내에서, 삭제된 파일 및/또는 디렉토리를 지시하는 지정된 값을 가지는 레 코드들의 개수들을 획득할 수 있다. 프로세서는 트래쉬 DB로부터 획득된 상기 개수들을 저장하는, 표 2의 제1 행 및 제2 행을 원소로 포함하는 2 차원 배열을 획득할 수 있다. 표 2 n 1 2 3 ... 제n 그룹에 포함 된 트래쉬 DB의 레코드들인덱스 값이 1 부터 512인, 최대 512 개의 레코드들인덱스 값이 513 부터 1024 인, 최대 512 개 의 레코드들인덱스 값이 1025 부 터 1536 인, 최대 512 개의 레코드들... 제1 행 0 ( = 512 Х (1-1))512 ( = 512 Х (2- 1))1024 ( = 512 Х (3- 1))... 제2 행 제1 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수 제2 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수제3 그룹의 레코드들 중에서, \"1\"을, \"is_trashed\"의 명칭 을 가지는 속성으로 가지는 레코드들의 개 수... 표 1 및 표 2를 참고하면, 미디어 DB로부터 획득된 2 차원 배열 및 트래쉬 DB로부터 획득된 2 차원 배열은, 서 로 대응하는 미디어 DB 내 그룹들 및 트래쉬 DB 내 그룹들 각각에서, 삭제된 것으로 지시되는 파일 및/또는 디 렉토리의 개수를 비교하기 위하여 생성될 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전 자 장치의 프로세서는, 미디어 DB 내에서, 삭제된 것으로 지시되는 속성을 가지는 파일 및/또는 디렉토리의 개 수가 양수인지 여부를 식별할 수 있다. 표 1의 제1 행 및 제2 행을 포함하는 2 차원 배열을 획득한 프로세서는, 상기 제2 행에 저장된, 그룹들 각각에 대응하는 개수들이 양수인지 여부를 식별할 수 있다. 양수 가 아닌 수(예, 0)를 식별한 경우(520-아니오), 프로세서는 동작을 수행할 수 있다. 양수를 식별한 경우 (520-예), 프로세서는 동작을 수행할 수 있다. n 개의 그룹들에 기반하는 2 차원 배열을 획득한 일 실시 예에서, 프로세서는 상기 그룹들 각각에 대하여 동작들(520, 525, 530)을 수행할 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 트래쉬 DB 내에서, 특정 그룹 에 포함된 레코드들 전부를 제거할 수 있다. 동작의 그룹은, 동작의 개수가 양수가 아닌 미디어 DB 의 그룹에 대응하는 트래쉬 DB의 그룹일 수 있다. 특정 그룹 내에서 삭제된 파일 및/또는 디렉토리가 없는 케 이스 내에서, 동작의 개수가 0일 수 있다. 상기 케이스 내에서, 프로세서는 상기 특정 그룹에 대응하는 레코드들을, 트래쉬 DB로부터 제거할 수 있다. 유사하게, 미디어 DB에 대응하는 2 차원 배열이 양수(예, 표 1 의 제2 행에 대응하는 원소들 내에서)를 포함하지 않는 경우, 프로세서는 트래쉬 DB의 모든 레코드들을 삭제할 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 그룹들 각각에 기반하여 미디 어 DB 및 트래쉬 DB를 비교하여, 미디어 DB를 동기화할 수 있다. 미디어 DB 및 트래쉬 DB의 비교는, 미디어 DB 내에서, 삭제를 지시하기 위한 속성(예, \"is_trashed\"의 명칭을 가지는 속성)에 의해 필터링된 복수의 레코드들 (또는 상기 복수의 레코드들에 대응하는 파일들)의 리스트에 기반하여, 수행될 수 있다. 프로세서는 상기 리스 트 및 트래쉬 DB를 비교하여, 미디어 DB 및 트래쉬 DB의 동기화를 수행할 수 있다. 동작은, 미디어 DB에 대응하는 2 차원 배열(예, 표 1의 제1 행 및 제2 행을 원소로 가지는 2 차원 배열)에 의하여 양수를 가지는 그 룹들에 대하여 수행될 수 있다. 동작의 양수인 개수에 응답하여, 프로세서는 상기 양수에 대응하는 미디 어 DB 및 트래쉬 DB의 그룹들(또는 구간들)에 대한 동기화를 수행할 수 있다. 동작을 수행하는 프로세서 는, 상기 그룹들 각각에 대하여 동작들(532, 534)을 수행할 수 있다. 미디어 DB의 특정 그룹 및 상기 특정 그 룹에 대응하는 트래쉬 DB의 그룹 내에서, 삭제된 것으로 지시되는 속성을 가지는 파일 및/또는 디렉토리의 개수 가 같은 경우, 프로세서는 동작들(532, 534)을 수행하지 않을 수 있거나, 또는 바이패스할 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 특정 그룹에 포함된 미디어 DB의 레코드들로부터, 삭제된 것으로 지시되는 속성을 가지는 파일 및/또는 디렉토리에 대응하는 하나 이상의 인덱스 값들을 획득할 수 있다. 예를 들어, 프로세서는, 제n 그룹에 대하여, \"SELECT GROUP_CONCAT(_id) FROM files WHERE is_trashed=1 AND _id >= (512Х(n-1)) AND _id < (512Хn)\"의 문자열에 기반하여, 미디어 DB를 검색할 수 있다. 상기 문자열의 \"(512Х(n-1))\" 및 \"(512Хn)\"는, n이 대입된(put) 수치 값들로 교체될 수 있 다. 상기 문자열의 \"is_trashed=1\"은, \"is_trashed\"의 명칭을 가지는 속성(예, 파일 및/또는 디렉토리의 삭제 를 지시하는 속성)으로 지정된 값(예, 파일 및/또는 디렉토리의 삭제를 지시하는 지정된 값)을 가지는 하나 이 상의 레코드들을 검색하기 위한 조건을 지시할 수 있다. 상기 문자열의 \"GROUP_CONCAT(_id)\"은, 상기 조건에 의해 검색된 하나 이상의 레코드들의 인덱스 값들이(예, \"_id\"의 명칭을 가지는 컬럼 및/또는 속성) 지정된 구 분자(delimeter)(예, 콤마 및/또는 세미콜론)에 기반하여 서로 연접된(concatenated) 문자열을 반환할 것을 지시할 수 있다. 상기 예시된 문자열을 포함하는 쿼리를 이용하여, 프로세서는 제n 그룹에 포함된 미디어 DB의 레코드들 중에서, 삭제된 것으로 지시되는 속성을 가지는 파일 및/또는 디렉토리에 대응하는 하나 이상의 레코 드들의 인덱스 값들을 포함하는 상기 문자열을 획득할 수 있다. 예를 들어, 1, 3, 4, 5의 인덱스 값들을 가지 는 레코드들이 검색된 경우, 프로세서는 \"1,3,4,5\"의 문자열을 획득할 수 있다. 도 5를 참고하면, 동작 내에서, 일 실시예에 따른, 전자 장치의 프로세서는, 특정 그룹에 포함된 트래쉬 DB의 레코드들 중에서, 동작에 기반하여 획득된 하나 이상의 인덱스 값들과 상이한 인덱스 값을 가지는 파 일 및/또는 디렉토리에 대응하는 레코드를 제거할 수 있다. 예를 들어, 프로세서는, \"local\"의 명칭을 가지는 트래쉬 DB(또는 트래쉬 DB의 테이블)에 대하여, \"DELETE FROM local WHERE _id NOT IN ?\"의 문자열을 이용하여, 트래쉬 DB 내 하나 이상의 레코드들을 제거하기 위한 동작을 수행할 수 있다. 상기 문자열의 \"DELETE\"는, \"WHERE\" 이후에 기재된 조건에 의해 필터링된 적어도 하나의 레코드의 제거를 지시하는 SQL의 명령 코드일 수 있다. 상기 문자열에 포함된 조건 \"_id NOT IN ?\"은, 트래쉬 DB의 레코드들 중에서 \"?\"에 포함된 인 덱스 값들과 상이한 인덱스 값을 가지는 레코드의 검색을 지시할 수 있다. 상기 조건 \"_id NOT IN ?\"의 \"?\"는, 동작에 기반하여 획득된 인덱스 값들(또는 상기 인덱스 값들이 서로 연결된 문자열)로 교체될 수 있다. 예를 들어, 동작 내에서 상술된, \"SELECT GROUP_CONCAT(_id) FROM files WHERE is_trashed=1 AND _id >= (512Х(n-1)) AND _id < (512Хn)\"의 문자열에 기반하여 미디어 DB로 액세스한 결과(예, 1, 3, 4, 5의 인덱스 값들을 가지는 레코드들이 검색된 경우, 프로세서는 \"1,3,4,5\"의 문자열)를 획득한 프로세서는, 상기 문자열의 조건 \"_id NOT IN ?\"의 \"?\"에, 상기 결과(예, \"1,3,4,5\"의 문자열)를 삽입할 수 있다. 상기 예시 내에서, 프 로세서는 한 번의 쿼리에 기반하여, 트래쉬 DB 내에서, 동작에 기반하여 획득된 하나 이상의 인덱스 값들 과 상이한 인덱스 값을 가지는 레코드를 일괄하여(in a lump) 제거할 수 있다. 단일 쿼리에 기반하여 트래쉬 DB에 액세스하기 때문에, 프로세서는 트래쉬 DB의 하나 이상의 레코드들을 제거하는 동안, 트래쉬 DB의 원자성 (atomicity) 및/또는 독립성(isolation)을 보장할 수 있다. 상술한 바와 같이, 도 5의 동작들에 기반하여, 트래쉬 DB에 연결된 파일들 및/또는 디렉토리들 중에서, 삭제된 것으로 지시되는 파일 및/또는 디렉토리와 상이한 파일 및/또는 디렉토리가, 트래쉬 DB로부터 연결 해제될 (disassociated) 수 있다. 일 실시예에 따른, 프로세서는, 도 4 내지 도 5의 동작들을 주기적으로 수행하여, 트래쉬 DB가 미디어 DB에 의해 삭제된 것으로 지시되는 파일들 및/또는 디렉토리들에 대응하는 레코드들 만을 포함하게 만들 수 있다. 예를 들어, 트래쉬 DB의 레코드들은, 삭제된 것으로 지시되는 파일 및/또는 디렉토리와 연결될 수 있다. 프로 세서는 트래쉬 DB의 정보를 이용하여, 어떤 소프트웨어 어플리케이션이 트래쉬 DB에 연결된 파일 및/또는 디렉 토리를 삭제하기 위하여 실행되었는지를 확인할 수 있다. 예를 들어, 어떤 소프트웨어 어플리케이션이 파일 및 /또는 디렉토리를 삭제하기 위하여 실행되었는지와 독립적으로, 프로세서는 트래쉬 DB를 이용하여, 삭제된 것으 로 지시되는 파일 및/또는 디렉토리로 액세스하는 것을 지원할 수 있다. 예를 들어, 특정 소프트웨어 어플리케이션을 실행하는 동안, 프로세서는 다른 소프트웨어 어플리케이션에 의해 삭제된 것으로 지시되는 파일 및/또는 디렉토리를 포함하는 화면(예, 도 1의 제1 화면 내지 제3 화면 )을 표시할 수 있다. 상기 화면에 기반하여, 사용자는 서로 다른 소프트웨어 어플리케이션들을 실행하여, 상기 소프트웨어 어플리케이션들 각각에 대응하는 휴지통들에 개별적으로 액세스하는 대신에, 트래쉬 DB에 기반 하여 상기 소프트웨어 어플리케이션들 사이에서 공유되는 통합 휴지통으로 액세스할 수 있다. 상기 통합 휴지 통을 이용하여, 전자 장치는, 메모리(예, 도 2의 메모리)의 효율적인 관리를 지원할 수 있다. 이하에서는, 도 6 및/또는 도 7을 참고하여, 지정된 디렉토리에 기반하여, 상이한 소프트웨어 어플리케이션들에 기반하여 삭제된 파일 및/또는 디렉토리를 관리하기 위한 전자 장치의 예시적인 동작이 설명된다. 도 6은, 일 실시예에 따른, 전자 장치에 의해 관리되는 디렉토리의 예시적인 구조를 도시한다. 도 1, 도 2의 전자 장치 및/또는 프로세서는 도 6을 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 6 의 전자 장치의 동작은, 도 3의 동작과 관련될 수 있다. 도 6의 동작은, 도 2의 트래쉬 프로바이더 를 실행하는 전자 장치에 의해 수행될 수 있다. 도 6을 참고하면, 트래쉬 프로바이더의 실행에 기반하여 관리되는 지정된 디렉토리에 저장된 예시적인 파일 및/ 또는 예시적인 디렉토리의 경로가 도시된다. 일 실시예에서, 상기 지정된 디렉토리는, \".Trash\"의 명칭을 가질 수 있다. 상기 명칭에 포함된 도트(\".\")는, 상기 지정된 디렉토리가 숨겨진 디렉토리임을 지시하는 접두사(prefix)일 수 있다. 상기 접두사를 식별한 프로세서는, 디스플레이 상에서 상기 지정된 디렉토리의 표시를 삼 갈(refrain from) 수 있다. 트래쉬 프로바이더를 실행하는 프로세서는, 상기 지정된 디렉토리를 스캔하여, 소 프트웨어 어플리케이션에 기반하여 상기 지정된 디렉토리로 이동된 하나 이상의 파일들(예, \"File1\"의 명칭을 가지는 파일) 및/또는 디렉토리들(예, \"Dir1\"의 명칭을 가지는 디렉토리 및/또는 \"Dir2\"의 명칭을 가 지는 디렉토리)을 식별할 수 있다. 식별된 파일들 및/또는 디렉토리들에 기반하여, 프로세서는 트래쉬 DB(예, 도 2의 트래쉬 DB)를 관리할 수 있다. 상기 소프트웨어 어플리케이션은, 도 2의 어플리케이션 레 이어로 분류되는 하나 이상의 소프트웨어 어플리케이션들을 포함할 수 있다. 상기 소프트웨어 어플리케이 션을 실행한 프로세서는, 파일 및/또는 디렉토리를 삭제하기 위한 사용자 입력(예, 2 단계 방식에 기반하는 최 초 입력)에 응답하여, 상기 사용자 입력에 의해 지정된 파일 및/또는 디렉토리를, 지정된 디렉토리로 이동할 수 있거나, 또는 복사할 수 있다. 일 실시예에서, 트래쉬 프로바이더의 지정된 디렉토리로 이동된 파일 및/또는 디렉토리는, 트래쉬 프로바이더의 실행에 기반하여 식별가능한 정보를 포함하는 경로를 가질 수 있다. 예를 들어, 프로세서는, 상기 지정된 디렉 토리 내 파일 및/또는 디렉토리의 경로에 기반하여, 삭제 이전의 상기 파일 및/또는 상기 디렉토리의 과거 경로 (past path), 상기 파일 및/또는 상기 디렉토리가 삭제된 시간, 상기 파일 및/또는 상기 디렉토리를 삭제하기 위하여 실행된 소프트웨어 어플리케이션 중 적어도 하나를 식별할 수 있다. 예를 들어, 상기 과거 경로, 상기 시간 및/또는 상기 소프트웨어 어플리케이션을 나타내는 텍스트가, 지정된 디렉토리 내에 저장된 상기 파일 및/ 또는 상기 디렉토리의 경로를 표현하는 문자열 내에 포함될 수 있다. 트래쉬 프로바이더와 상이한 소프트웨어 어플리케이션을 실행한 프로세서는, 상기 지정된 디렉토리로 파일 및/또는 디렉토리를 이동한 다음, 상기 지정 된 디렉토리를 스캔하기 위한 트래쉬 프로바이더의 기능을 실행할 수 있거나, 또는 요청할 수 있다. 상기 기능 을 실행한 프로세서는, 지정된 디렉토리에 저장된 하나 이상의 파일들 및/또는 디렉토리들의 경로에 대한 파싱 을 수행하여, 상술된 정보를 추출할 수 있거나, 또는 식별할 수 있다. 일 실시예에서, 프로세서는 트래쉬 DB 내에, 지정된 디렉토리에 저장된 파일 및/또는 디렉토리의 경로로부터 획 득된 정보를 저장할 수 있다. 트래쉬 DB 내에서, 파일 및/또는 디렉토리에 대응하는 레코드는, 표 3과 같은 컬 럼 및/또는 속성을 가질 수 있다. 표 3 컬럼 및/또는 속성의 명칭 설명 _id 레코드에 고유하게 할당되는(uniquely assigned to) 인덱스 값 _data 지정된 디렉토리 내에서, 레코드에 대응하는 파일 및/또는 디렉토리의 경 로 original_path 삭제 이전의 파일 및/또는 디렉토리의 경로(또는, 파일 및/또는 디렉토리 가 복원될 경로) parent 기본 값은 지정된 수치 값(예, 0)이다. 예외적으로, 소프트웨어 어플리 케이션에 기반하여 삭제된 디렉토리 내 파일 및/또는 서브 디렉토리에 대 응하는 레코드 내에서, 상기 디렉토리에 대응하는 레코드의 인덱스 값 (_id)이 할당된다. volume_name 내장 메모리 또는 외장 메모리에 저장되었는지를 지시하는 값 _size 파일의 사이즈 mime_type 파일의 MIME type을 지시하는 문자열(예, \"image/jpg\") title 확장자가 제외된 파일 및/또는 디렉토리의 명칭 _display_name 확장자를 포함하는, 디스플레이 상에 표시되는 명칭 media_type 레코드에 대응하는 파일 및/또는 디렉토리의 타입을 지시하는 수치 값(예, 일반 파일에 대하여 0, 이미지 파일에 대하여 1, : 오디오 파일에 대하여 3, 비디오 파일에 대하여 4) date_expires 레코드에 대응하는 파일 및/또는 디렉토리가 지정된 디렉토리 내에서 보 존되는 기한(expiration date)(예, \"date_deleted\"의 명칭의 속성에 할 당된 날짜로부터 미리 설정된 날짜(days)(예, 31일) 이후의 날짜) 및/또 는 파일 및/또는 디렉토리가 영구적으로 삭제될 날짜 date_deleted 레코드에 대응하는 파일 및/또는 디렉토리가 삭제되었던 날짜 width 이미지 파일 및/또는 비디오 파일이 레코드에 대응하는 경우, 상기 이미 지 파일 및/또는 상기 비디오 파일의 너비 height 이미지 파일 및/또는 비디오 파일이 레코드에 대응하는 경우, 상기 이미 지 파일 및/또는 상기 비디오 파일의 높이 orientation 이미지 파일 및/또는 비디오 파일이 레코드에 대응하는 경우, 상기 이미 지 파일 및/또는 상기 비디오 파일의 방향(예, 각도)orientation_tag 이미지 파일 및/또는 비디오 파일이 레코드에 대응하는 경우, 상기 이미 지 파일 및/또는 상기 비디오 파일의 방향(예, 포트레이트 모드 및/또는 랜드스케이프 모드) user_id 레코드에 대응하는 파일 및/또는 디렉토리에 대한 최초 입력을 수행한 사 용자의 ID delete_package_name 레코드에 대응하는 파일 및/또는 디렉토리를 삭제하기 위하여 실행된 소 프트웨어 어플리케이션의 패키지 명칭 datetaken 오디오 파일(예, 음악 파일)이 레코드에 대응하는 경우, 상기 오디오 파 일이 녹음된 날짜 duration 비디오 파일이 레코드에 대응하는 경우, 상기 비디오 파일의 전체 재생 시간 recordingtype 오디오 파일이 레코드에 대응하는 경우, 상기 오디오 파일의 타입을 지시 하는 값 generation_modified 레코드에 대응하는 파일 및/또는 디렉토리가 변경된 횟수를 지시하는 값 도 6을 참고하면, 지정된 디렉토리 내에서, 삭제를 위한 사용자 입력에 의해 삭제되는 파일 및/또는 디렉토리는, 지정된 문자열(예, \".!%#@$\")의 명칭을 가지는 디렉토리 내에 저장될 수 있다. 디렉토리 는 분리(separator) 디렉토리로 지칭될 수 있다. 프로세서는 상기 지정된 디렉토리 내에서 상기 지정된 문자열을 가지는 디렉토리를 검색하여, 삭제된 파일 및/또는 디렉토리를 확인할 수 있다. 예를 들어, 사 용자에 의해 직접적으로 삭제된 파일 및/또는 디렉토리가 지정된 문자열을 가지는 디렉토리에 저장될 수 있다. 도 6을 참고하면, 디렉토리에 저장된 서브 디렉토리들(예, 디렉토리들(640, 660)) 및/또는 파일(예, 파일)이 사용자에 의해 직접적으로 삭제된 파일 및/또는 디렉토리일 수 있다. 예를 들어, 상기 서브 디렉토리들에 포함된 서브 파일(예, \"SubFile1\"의 명칭을 가지는 파일 및/또는 \"SubFile2\"의 명칭을 가지는 파일)은, 상기 사용자에 의해 직접적으로 삭제된 디렉토리에 저장된 파일일 수 있다. 도 6을 참고 하면, 파일 및/또는 디렉토리들(640, 660)이 저장되고, 지정된 문자열의 명칭을 가지는, 디렉토리는, 상기 파일 및/또는 상기 디렉토리들(640, 660)이 삭제 이전에 저장되었던 경로를 표현하기 위하여, 연쇄적 으로 생성된, 하나 이상의 디렉토리들 내에 저장될 수 있다. 상기 경로를 표현하기 위하여 복수의 디렉토 리들이 생성된 경우, 상기 복수의 디렉토리들은, 서브 디렉토리의 관계에 기반하여 계층적으로 생성 될 수 있다. 일 실시예에 따른, 프로세서는, 파일의 경로를 지시하는 문자열 내에서, 지정된 문자열을 가 지는 디렉토리 이전의 부분으로부터, 파일이 삭제 이전에 저장되었던 경로를 식별할 수 있다. 하나 이상의 디렉토리들에 의해 표현된 상기 경로는, 표 3의 \"original_path\"의 명칭을 가지는 컬럼 내에 저장 될 수 있다. 도 6을 참고하면, 하나 이상의 디렉토리들은, 지정된 디렉토리의 서브 디렉토리로써, 파일 및/또는 디렉토리들(640, 660)을 삭제하기 위하여 실행되었던 소프트웨어 어플리케이션의 패키지 명칭, 및 파일 및 /또는 디렉토리들(640, 660)이 삭제되었던 시간을 나타내는 명칭을 가지는 디렉토리들 내에 저장될 수 있 다. 지정된 디렉토리에 저장된 파일을 식별한 일 실시예에서, 프로세서는 파일의 경로를 지시하는 문자열 내에서, 지정된 디렉토리의 경로에 대응하는 부분(예, \"/storage/emulated/0/Android/.Trash/\") 이후의 부분에 포함된, 디렉토리들의 명칭들로부터, 파일이 삭제되었던 타이밍(예, 타임스탬프, 유닉스 에포 크(epoch), 및/또는 유닉스 시간) 및/또는 파일을 삭제하기 위하여 실행되었던 소프트웨어 어플리케이션의 패키지 명칭을 식별할 수 있다. 일 실시예에 따른, 프로세서는, 트래쉬 프로바이더의 실행에 기반하여, 지정된 디렉토리 내에서, 특정 소프트웨 어 어플리케이션의 패키지 명칭에 기반하는 서브 디렉토리에 액세스하여, 상기 특정 소프트웨어 어플리케이션의 실행에 기반하여 삭제되었던 파일(또는 디렉토리) 및 상기 파일(또는 디렉토리)의 정보를 획득할 수 있다. 프 로세서는 상기 서브 디렉토리에 저장된 파일을 식별하는 것에 기반하여, 파일의 경로에 의해 지시되 는 하나 이상의 디렉토리들로부터, 상기 파일이 삭제 이전에 저장되었던 경로를 식별할 수 있다. 프 로세서는, 지정된 문자열의 명칭을 가지는 디렉토리의 상위 디렉토리(또는, 파일의 경로를 표현하는 문자열 내에서 상기 지정된 문자열 이전의(before 또는 prior to) 부분)로부터, 상기 경로를 획득할 수 있다. 프로세서는, 파일의 경로를 표현하는 문자열 내에서, 상기 경로에 대응하는 부분 이전의 부분으로부터, 파 일이 삭제되었던 타이밍 및/또는 파일의 삭제를 위해 실행되었던 소프트웨어 어플리케이션을 식별할 수 있다. 일 실시예에서, 프로세서는, 파일의 경로를 표현하는 문자열로부터 식별된, 상기 경로, 상기 타이밍 및/또 는 상기 소프트웨어 어플리케이션을, 파일에 대응하는 레코드 내에 저장할 수 있다. 예를 들어, 표 3에기반하여, 상기 레코드 내에서 \"original_path\", \"date_deleted\", \"delete_package_name\"의 명칭들을 가지는 컬럼들 각각에, 상기 경로, 상기 타이밍 및 상기 소프트웨어 어플리케이션의 패키지 명칭이 저장될 수 있다. 예를 들어, 트래쉬 프로바이더와 상이한 소프트웨어 어플리케이션을 실행한 프로세서는, 디렉토리의 삭제 를 지시하는 사용자 입력에 응답하여, 상기 트래쉬 프로바이더에 의해 관리되는 지정된 디렉토리 내에서, 도 6 을 참고하여 설명된 서브 디렉토리들(예, 디렉토리들(610, 620))을 생성한 다음, 상기 생성된 서브 디렉토리들 의 최하위 디렉토리 내에, 지정된 문자열(.!%#@$)의 명칭을 가지는 디렉토리를 생성할 수 있다. 프로세서 는 상기 디렉토리로, 상기 사용자 입력에 의해 지정된 상기 디렉토리 및 상기 디렉토리에 저장 된 파일들(642, 644)을 이동할 수 있다. 디렉토리로 디렉토리를 이동한 다음, 프로세서는 상기 소프 트웨어 어플리케이션의 패키지 명칭을 포함하는 디렉토리들에 기반하여 트래쉬 프로바이더를 실행할 수 있 다. 상기 예시 내에서, 트래쉬 프로바이더를 실행한 프로세서는, 디렉토리들의 서브 디렉토리를 스캔하여, 디렉토리를 확인할 수 있다. 디렉토리의 확인에 응답하여, 프로세서는 트래쉬 DB 및 디렉 토리를 연결하기 위하여, 트래쉬 DB 내에 디렉토리에 대응하는 레코드를 추가할 수 있다. 이하에서는, 도 7을 참고하여, 예시적인 파일 및/또는 디렉토리를 포함하는 지정된 디렉토리를 스캔하는 전자 장치의 동작이 설명된다. 도 7은, 하나 이상의 파일들 및/또는 서브 디렉토리들을 저장하는 예시적인 디렉토리를 스캔하는 전자 장치의 동작을 도시한다. 도 1, 도 2의 전자 장치 및/또는 프로세서는 도 7을 참고하여 설명되는 전자 장치 의 동작을 수행할 수 있다. 도 7의 전자 장치의 동작은, 도 3의 동작과 관련될 수 있다. 도 7의 동작은, 도 2의 트래쉬 프로바이더를 실행하는 전자 장치에 의해 수행될 수 있다. 도 7을 참고하면, 일 실시예에 따른, 전자 장치의 프로세서에 의해 탐색되는 지정된 디렉토리(예, \"/storage/emulated/0/Android/.Trash/\"의 경로를 가지는 디렉토리)의 예시적인 트리 구조가 도시된다. 예를 들어, 특정 타이밍(예, \"123456789\"의 유닉스 시간)에, \"com.sec.android.app.myfiles\"의 패키지 명칭을 가지 는 소프트웨어 어플리케이션의 실행에 기반하여, \"Album1\"의 명칭을 가지는 디렉토리, \"20230808_12345.jpg\"의 명칭을 가지는 이미지 파일 및 \"Album2\"의 명칭을 가지는 디렉토리를 삭제 하는 프로세서는, 상기 지정된 디렉토리 내에서, 상기 패키지 명칭, 상기 타이밍을 표현하는 텍스트를 가지는 디렉토리들(710, 720)을 생성할 수 있다. 프로세서는 디렉토리들(710, 720) 내 분리 디렉토리로, 디렉토 리들(740, 760) 및 이미지 파일을 이동할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는, 트래쉬 프로바이더의 실행에 기반하여, 지정된 디렉토리를 스캔할 수 있다. 예를 들어, 프로세서는 DFS(depth-first search)와 같은 알고리즘에 기반하여, 지정된 디렉토리의 서 브 디렉토리 및/또는 파일들을 스캔할 수 있다. 상기 스캔에 기반하여, 프로세서는 지정된 디렉토리 내에서 삭 제된 것으로 지시되는 파일, 디렉토리들(740, 760) 및 디렉토리들(740, 760)의 서브 파일들(예, 파일들 (742, 744))을 식별할 수 있다. 일 실시예에서, 프로세서는 분리 디렉토리 내에 저장된 파일들(742, 744, 750) 및 디렉토리들(740, 760) 각각에 대응하는 5 개의 레코드들을, 트래쉬 DB 내에 생성할 수 있거나, 또는 추 가할 수 있다. 프로세서는, 도 6을 참고하여 설명된 동작에 기반하여, 상기 레코드들의 컬럼 및/또는 속성을 결정할 수 있다. 예를 들어, 트래쉬 DB 내에서, 파일에 대응하는 레코드는, 표 4에 예시된 컬럼 및/또는 속성을 가질 수 있다. 표 4 컬럼 및/또는 속성의 명칭 값 _id 1 _data /storage/emulated/0/Android/.Trash/com.sec.android.app.myfiles/123 456789/storage/emulated/0/ DCIM/Camera/.!%#@$/20230808_12345.jpg original_path /storage/emulated/0/DCIM/Camera/20230808_12345.jpg parent 0 volume_name external_primary _size 328 Kbytes mime_type image/jpg media_type 1 date_expires 123456819 ( = 123456789 + 30일)date_deleted 123456789 delete_package_name com.sec.android.app.myfiles : 표 4를 참고하면, 분리 디렉토리에 직접적으로 저장된 파일에 대응하는 레코드는, 분리 디렉토리 에 직접적으로 저장된 파일 및/또는 디렉토리를 지시하는 지정된 값(예, \"0\")을, \"parent\"의 명칭을 가지 는 속성으로써 가질 수 있다. 표 4를 참고하면, 트래쉬 프로바이더를 실행하는 프로세서는, 파일이 저장 된 분리 디렉토리의 상위 디렉토리들(예, 디렉토리들(710, 720))의 명칭들로부터, 파일이 삭제되었던 경로, 파일의 삭제를 위해 실행되었던 소프트웨어 어플리케이션을 지시하는 값들을, 상기 레코드 내에 저 장할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 트래쉬 DB 내에, 디렉토리에 대응하고, 표 5에 예시된 속성을 가지는 레코드를 추가할 수 있다. 표 5 컬럼 및/또는 속성의 명칭 설명 _id 2 _data /storage/emulated/0/Android/.Trash/com.sec.android.app.myfiles/123 456789/storage/emulated/0/ DCIM/Camera/.!%#@$/Album1 original_path /storage/emulated/0/DCIM/Camera/Album1 Parent 0 : 표 5를 참고하면, \"original_path\"의 명칭을 가지는 속성 내에, 디렉토리의 명칭을 포함하는, 삭제 이전의 경로가 저장될 수 있다. 삭제 이전의 경로는, 분리 디렉토리가 저장된 하나 이상의 디렉토리들에 의 해 식별될 수 있다. 일 실시예에서, 분리 디렉토리 내 디렉토리에 저장된 파일을 식별한 프로 세서는, 트래쉬 DB 내에 상기 파일에 대응하는 레코드를 추가할 수 있거나, 또는 생성할 수 있다. 파일 에 대응하는 트래쉬 DB의 레코드는, 표 6에 예시된 속성을 가질 수 있다. 표 6 컬럼 및/또는 속성의 명칭 설명 _id 3 _data /storage/emulated/0/Android/.Trash/com.sec.android.app.myfiles/123 456789/storage/emulated/0/ DCIM/Camera/.!%#@$/Album1/20220101.jpg original_path /storage/emulated/0/DCIM/Camera/Album1/20220101.jpg parent 2 volume_name external_primary media_type 1 : 표 6을 참고하면, 파일에 대응하는 레코드 내에서, 파일이 저장된 상위(parent) 디렉토리(예, 디렉토 리)에 대응하는 레코드의 인덱스 값(예, 2)이, \"parent\"의 명칭을 가지는 컬럼 내에 저장될 수 있다. 상 기 컬럼에 기반하여, 프로세서는 파일이 디렉토리의 서브 파일임을 확인할 수 있다. 유사하게, 디렉 토리 내 파일을 식별한 프로세서는, 표 7의 속성을 가지는 레코드를, 파일에 대응하는 레코드로 써, 트래쉬 DB에 저장할 수 있다. 표 7 컬럼 및/또는 속성의 명칭 설명 _id 4 _data /storage/emulated/0/Android/.Trash/com.sec.android.app.myfiles/123 456789/storage/emulated/0/ DCIM/Camera/.!%#@$/Album1/20220102.jpgoriginal_path /storage/emulated/0/DCIM/Camera/Album1/20220102.jpg parent 2 volume_name external_primary media_type 1 : 일 실시예에 따른, 전자 장치의 프로세서는, 분리 디렉토리 내 디렉토리를 식별한 경우, 트래쉬 DB 내에 표 8의 값들을 속성으로써 가지는 레코드를 추가할 수 있다. 표 8 컬럼 및/또는 속성의 명칭 설명 _id 5 _data /storage/emulated/0/Android/.Trash/com.sec.android.app.myfiles/123 456789/storage/emulated/0/ DCIM/Camera/.!%#@$/Album2 original_path /storage/emulated/0/DCIM/Camera/Album2 parent 0 volume_name external_primary : 표 4 내지 표 8에 기반하는 레코드들이 트래쉬 DB 내에 저장된 일 실시예에서, 프로세서는, 트래쉬 DB로 액세스 하는 소프트웨어 어플리케이션의 실행에 기반하여, 상기 레코드들에 대한 필터링을 수행할 수 있다. 예를 들어, 도 2의 파일 열람 어플리케이션을 실행하는 프로세서는, 삭제되었던 파일들 및/또는 디렉토리들 전 부를 검색하기 위하여, \"parent\"의 명칭을 가지는 속성에 지정된 값(예, \"0\")을 가지는 레코드들을 검색할 수 있다. 상기 예시 내에서, 프로세서는 파일 및 디렉토리들(740, 760)에 대응하는 레코드들에 기반하여, 파 일 및 디렉토리들(740, 760) 각각에 대응하는 시각적 객체들을 포함하는 화면(예, 도 1의 제3 화면) 을 표시할 수 있다. 예를 들어, 도 2의 갤러리 어플리케이션을 실행하는 프로세서는, 삭제되었던 이미지 파일들 전부를 검색하기 위하여, \"mime_type\"의 명칭을 가지는 속성에 이미지 파일을 나타내는 문자열(예, \"img/jpg\" 및/또는 \"img/jpeg\")을 가지는 레코드들을 검색할 수 있거나, 또는 \"media_type\"의 명칭을 가지는 속성에 이미지 파일에 대응하는 지정된 수치 값(예, \"1\")을 가지는 레코드들을 검색할 수 있다. 상기 예시 내 에서, 프로세서는 파일들(742, 744, 750)을 포함하는 리스트의 적어도 일부분을 표시할 수 있다(예, 도 1의 제1 화면). 상술한 바와 같이, 일 실시예에 따른, 전자 장치의 프로세서는, 경로를 설정하는 지정된 규칙에 기반하여 관리 되는 지정된 디렉토리를 스캔하여, 트래쉬 DB를 업데이트할 수 있다. 트래쉬 프로바이더를 실행하는 프로세서 는, 상기 지정된 디렉토리에 저장된 파일 및/또는 디렉토리의 경로에 대한 파싱을, 상기 지정된 규칙에 기반하 여 수행할 수 있다. 상기 파싱에 기반하여, 프로세서는, 표 3을 참고하여 설명된 컬럼 및/또는 속성을 가지는 레코드를, 트래쉬 DB 내에 저장할 수 있다. 도 6 내지 도 7을 참고하여 상술된, 지정된 디렉토리를 스캔하는 동작은, 트래쉬 DB와 같이, 트래쉬 프로바이더 에 의해 관리되는 데이터베이스의 손상 및/또는 유실에 응답하여, 수행될 수 있다. 예를 들어, 도 6 내지 도 7 을 참고하여 상술된 동작에 기반하여 지정된 디렉토리를 스캔하여, 프로세서는 트래쉬 DB를 복원할 수 있다. 이하에서는, 도 8을 참고하여, 콘텐트 프로바이더와 같이, 운영 체제에 의해 지원되는 기능들 중에서, 정보의 송신을 위하여 지원되는 기능에 기반하여, 트래쉬 DB 및/또는 지정된 디렉토리를 관리하는 전자 장치의 예시적 인 동작이 설명된다. 도 8은, 파일 및/또는 디렉토리를 삭제하기 위한 사용자 입력을 수신한 전자 장치의 예시적인 동작을 도시한다. 도 1, 도 2의 전자 장치 및/또는 프로세서는 도 8을 참고하여 설명되는 전자 장치의 동작을 수행할 수 있다. 도 8의 전자 장치의 동작은, 도 2의 트래쉬 프로바이더와 관련될 수 있다. 도 8의 소프트웨어 어플리케이션은, 트래쉬 프로바이더와 구분되는, 전자 장치에 설치된 소프트웨어 어플리케이션을 포 함할 수 있다. 도 8을 참고하면, 동작 내에서, 소프트웨어 어플리케이션을 실행하는 전자 장치의 프로세서는, 파일 및/또는 디렉토리의 삭제와 관련된 콘텐트 리졸버 객체를 생성할 수 있다. 상기 콘텐트 리졸버 객체는, 소프트 웨어 어플리케이션에 기반하는 콘텐트 프로바이더의 실행을 위해 정의된 객체일 수 있다. 동작은, 소프트웨어 어플리케이션에 기반하여 식별된, 파일 및/또는 디렉토리의 삭제를 지시하는 사용자 입력에 응 답하여, 수행될 수 있다. 프로세서는, 상기 사용자 입력에 응답하여, 트래쉬 프로바이더에 의해 관리되는 지정된 디렉토리(예, 도 6 내지 도 7을 참고하여 상술된, \".Trash\"의 명칭을 가지는 디렉토리)로 상기 파일 및/ 또는 디렉토리를 이동한 다음, 동작을 수행할 수 있다. 지정된 디렉토리로 사용자 입력에 의해 지정된 파 일 및/또는 디렉토리를 이동하는 것은, 상기 지정된 디렉토리 내에서, 도 6 내지 도 7을 참고하여 설명된, 분리 디렉토리를 포함하는 하나 이상의 서브 디렉토리들을 생성하는 동작, 및 상기 생성된 하나 이상의 서브 디렉토 리들로 상기 파일 및/또는 상기 디렉토리를 이동하는 동작을 포함할 수 있다. 도 8을 참고하면, 동작 내에서, 소프트웨어 어플리케이션을 실행하는 전자 장치의 프로세서는, 콘텐 트 리졸버 객체에 의해 지정된, 트래쉬 프로바이더의 기능을 실행할 수 있다. 예를 들어, 콘텐트 리졸버 객체는, 상기 콘텐트 리졸버 객체에 기반하여 실행될 트래쉬 프로바이더의 기능을 지시하는 문자열을 포함 할 수 있다. 상기 문자열은, URI(uniform resource indicator)의 포맷을 가질 수 있다. 예를 들어, \"content://sectrash/files\"의 문자열을 포함하는 콘텐트 리졸버 객체는, 트래쉬 프로바이더에 기반하는 트래쉬 DB(예, 도 2의 트래쉬 DB)의 업데이트(예, 도 3의 동작 및/또는 도 6 내지 도 7을 참고하여 상술된 전자 장치의 동작)를 수행하기 위하여 생성될 수 있다. 예를 들어, \"content://sectrash/files/trash\"의 문자열을 포함하는 콘텐트 리졸버 객체는, 트래쉬 프로바이더 의 지정된 디렉토리로의 파일 및/또는 디렉토리의 이동 및 트래쉬 DB의 업데이트를 수행하기 위하여 생성 될 수 있다. 콘텐트 리졸버 객체는, \"ContentResolver#insert\"와 같이, 트래쉬 DB에 정보를 삽입하기 위한 기 능을 지시하는 지정된 문자열을 포함할 수 있다. 콘텐트 리졸버 객체는, 트래쉬 DB에 저장될 정보(예, 도 3을 참고하여 상술된 적어도 하나의 컬럼에 저장될 값들)를 포함할 수 있다. 동작의 기능을 실행하는 것은, 전자 장치의 운영 체제에 의해 지원되는 콘텐트 프로바이더를 실행하는 동작을 포함할 수 있다. 도 8을 참고하면, 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 콘텐트 리졸 버 객체에 의해 지정된 파일 및/또는 디렉토리에 기반하여, 트래쉬 DB 및/또는 지정된 디렉토리를 업데이트할 수 있다. 예를 들어, 프로세서는 콘텐트 리졸버 객체를 이용하여, 소프트웨어 어플리케이션의 실행에 기 반하여 지정된 디렉토리로 이동된 파일 및/또는 디렉토리를 확인할 수 있다. 프로세서는 콘텐트 리졸버 객체에 포함된 정보, 상기 파일 및/또는 상기 디렉토리의 경로 중 적어도 하나를 이용하여, 상기 파일 및/또는 상기 디 렉토리에 대응하는 레코드를, 트래쉬 DB에 추가할 수 있다. \"content://sectrash/files\"의 문자열을 포함하는 콘텐트 리졸버 객체에 기반하여 트래쉬 프로바이더를 실행하는 프로세서는, 상기 콘텐트 리졸버 객체에 대 응하는 파일 및/또는 디렉토리를, 상기 지정된 디렉토리로 이동할 수 있다. 도 8을 참고하면, 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 콘텐트 리졸 버 객체에 대응하는 커서(cursor) 객체를 이용하여, 소프트웨어 어플리케이션의 기능을 실행할 수 있다. 상기 커서 객체는, 트래쉬 DB 및/또는 지정된 디렉토리가 동작에 기반하여 성공적으로 업데이트되었는지 여부를 지시하는 파라미터 및/또는 플래그를 포함할 수 있다. 상기 커서 객체는, 동작에 대한 트래쉬 프 로바이더의 응답으로써(as a response), 소프트웨어 어플리케이션의 실행에 이용될 수 있다. 예를 들어, 동작에 기반하여 실행되는 소프트웨어 어플리케이션의 기능은, 상기 커서 객체에 기반하여 파 일 및/또는 디렉토리의 삭제를 완료하는 기능을 포함할 수 있다. 일 실시예에서, 동작은 바이패스될 수 있거나, 또는 생략될 수 있다. 도 8을 참고하면, 동작들(830, 840) 이후의 동작 내에서, 트래쉬 프로바이더를 실행하는 전자 장치의 프로세서는, 전자 장치에 설치된 소프트웨어 어플리케이션(예, 소프트웨어 어플리케이션)으로, 동작 에 기반하여 업데이트된 트래쉬 DB 및/또는 지정된 디렉토리에 기반하는 리스트를 제공할 수 있다. 동작 의 리스트는, 전자 장치에 설치된 하나 이상의 소프트웨어 어플리케이션들에 의해 삭제되었던 파일 및/또는 디 렉토리를 포함할 수 있다. 프로세서는, \"ContentResolver#query\"와 같이 동작의 수행을 지시하는 지정된 문자열을 포함하는 콘텐트 리졸버 객체에 응답하여, 동작을 수행할 수 있다. 동작에 기반하여, 소프 트웨어 어플리케이션과 상이한 다른 소프트웨어 어플리케이션을 실행하는 프로세서는, 소프트웨어 어플리 케이션에 기반하여 삭제된, 동작의 파일 및/또는 디렉토리를 포함하는 리스트를 표시할 수 있다. 실 시예가 이에 제한되는 것은 아니며, 소프트웨어 어플리케이션을 실행하는 프로세서 또한, 동작에 기반하여, 동작의 파일 및/또는 디렉토리를 포함하는 리스트를 표시할 수 있다. 상술한 바와 같이, 일 실시예에 따른, 전자 장치는, 복수의 소프트웨어 어플리케이션들 각각에 의해 개별적으로 삭제된 파일들 및/또는 디렉토리들을 통합적으로 관리하기 위한 데이터베이스(예, 도 2의 트래쉬 DB) 및/ 또는 디렉토리를 포함할 수 있다. 상기 데이터베이스 및/또는 상기 디렉토리를 추적 및/또는 모니터링하기 위 하여, 전자 장치는 백그라운드 상태 내에서 실행되는 프로세스(예, 도 2의 트래쉬 프로바이더)를 포함할 수 있다. 도 9는, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 9를 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스 , 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈 , 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치(90 1)에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가 될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테 나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전 자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘 은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습 (semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정 되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망 (DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포 함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도 로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피 커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선)통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복 수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(902, 또는 1504) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(902, 1504, 또는 1508) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터 의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요 청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서 비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정 되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이 템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복 수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구 들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구 분하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어 떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소 에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD- ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치 들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우 에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메 모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체들을 포함할 수 있으며, 복수의 개체들 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한실시예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요 소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다 른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 9의 전자 장치는, 도 1 및/또는 도 2를 참고하여 설명된 전자 장치의 일 예일 수 있다. 일 실시예에서, 소프트웨어 어플리케이션들에 의해 개별적으로 삭제된 파일 및/또는 디렉토리를 통합적으로 관 리하는 방안이 요구될 수 있다. 상술한 바와 같은, 일 실시예에 따른, 전자 장치(electronic device)(예, 도 1 의 전자 장치 및/또는 도 9의 전자 장치)는, 디스플레이(예, 도 1의 디스플레이), 복수의 소프 트웨어 어플리케이션들의 인스트럭션들을 저장하기 위한 메모리(예, 도 2의 메모리) 및 프로세서(예, 도 2 의 프로세서)를 포함할 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화면을, 상기 디스플레이 상에 표시하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제1 화면에 기반하여, 상기 메모리 내에서 삭제된 것으로 지시되는 정보를 열람하기 위한 사용자 입력을 수신하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 사용자 입력에 응답하여, 제2 소프트웨어 어플리케이션(예, 도 2의 트래쉬 프로바이더)에 의해 관리 되고, 상기 복수의 소프트웨어 어플리케이션들에 의해 액세스가능한 제1 데이터베이스(예, 미디어 DB)와 동기화된, 제2 데이터베이스(예, 트래쉬 DB)를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 파일(예, 도 6의 파일 및/또는 도 7의 파일 )을 포함하는 상기 정보를 획득하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 디스플레이 상에, 상기 정보에 기반하여, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상기 파일에 대응하는 시각적 객체를 포함하는 제2 화면(예, 도 1의 제1 화면 , 제2 화면 및/또는 제3 화면)을 표시하도록, 구성될 수 있다. 일 실시예에 따른, 전자 장치는, 상이한 소프트웨어 어플리케이션들에 기반하여 삭제되었던 파일들 및/또는 디렉토리들을 통합적으로 관 리할 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제2 소프트웨어 어플 리케이션의 실행에 기반하여, 상기 제1 데이터베이스 내에서, 삭제를 지시하기 위한 속성(attribute)에 의해 필 터링된 복수의 파일들의 리스트를 획득하도록, 구성될 수 있다. 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제2 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스 내 에서, 상기 제1 데이터베이스와 연결된 파일들을 구별하기 위한 인덱스 값들의 구간에 기반하여, 상기 구간 내 에서 상기 속성에 의해 삭제된 것으로 지시되는 파일들의 개수를 획득하도록, 구성될 수 있다. 상기 프로세서 는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 양수(positive number)인 상기 개수에 응답하여, 상 기 구간에 기반하는 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제2 데이터베이스에 연결된 파일들 중에서, 상기 리스트에 포함된 파일들과 상이한 파일을, 상기 제2 데이터베이스로부터 연결 해제 (disassociate)하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 미디어 프로바이더(예, 도 2의 미디어 프로바이더)에 의해 관리되는 상기 제1 데이터베이스 내에서, 삭제를 지시하기 위한 지정된 값 이 상기 속성에 할당된 하나 이상의 레코드들을 검색하여, 상기 리스트를 획득하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 메모리 내에 저장된 이미지 파일, 비디오 파일 또는 오디오 파일 중 적어도 하나를 포함하는 미디어 콘텐트를 관리하기 위한 상기 미디어 프로바이더를 이용하여, 상기 제1 데이터베이스에 액세스하도록, 구성될 수 있다.예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제2 소프트웨어 어플 리케이션에 의해 관리되는 디렉토리 내에서, 상기 제3 소프트웨어 어플리케이션의 패키지 명칭(package name)에 기반하는 서브 디렉토리(예, 도 6의 디렉토리들 및/또는 도 7의 디렉토리들)에 액세스하여, 상기 파 일을 포함하는 상기 정보를 획득하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 서브 디렉토리 내에 저장된 상기 파일을 식별하는 것에 기반하여, 상기 파일의 제1 경로(path)를 나타내는 문자열(character string)로부터, 상기 파일이 저장되었던(was stored) 제2 경로(path)를 획득하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 문자열 내에서, 삭제 된 파일 또는 디렉토리를 나타내는 지정된 문자열 이전의(before) 부분으로부터, 상기 제2 경로를 획득하도록, 구성될 수 있다. 예를 들어, 상기 프로세서는, 상기 인스트럭션들이 실행될 시에, 상기 전자 장치가, 상기 제2 화면을 통하여 수 신된, 상기 파일의 삭제를 위한 다른 사용자 입력에 응답하여, 상기 파일의 삭제를 지시하는 지정된 URI(uniform resource indicator)에 기반하는 콘텐트 프로바이더(content provider)를 실행하도록, 구성될 수 있다. 상술한 바와 같은, 일 실시예에 따른, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된 다. 상기 방법은, 상기 메모리에 저장된 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 화면을, 상기 디스플레이 상에 표시하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 화면에 기반하여, 상기 메모리 내에서 삭제된 것으로 지시되는 정보를 열람하기 위한 사용자 입력을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 사용자 입력에 응답하여, 제2 소프트웨어 어플리케이션에 의해 관 리되고, 상기 복수의 소프트웨어 어플리케이션들에 의해 액세스가능한 제1 데이터베이스와 동기화된, 제2 데이 터베이스를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플리케이션에 기반하여 삭 제된 것으로 지시되는 파일을 포함하는 상기 정보를 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 디스 플레이 상에, 상기 정보에 기반하여, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상 기 파일에 대응하는 시각적 객체를 포함하는 제2 화면을 표시하는 동작을 포함할 수 있다. 예를 들어, 상기 획득하는 동작은, 미디어 프로바이더에 의해 관리되는 상기 제1 데이터베이스와 동기화된, 상 기 제2 데이터베이스에 액세스하여, 상기 파일을 포함하는 상기 정보를 획득하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 제2 소프트웨어 어플리케이션의 실행에 기반하여, 상기 제1 데이터베이스 내에서, 삭제를 지시하기 위한 속성에 의해 필터링된 복수의 파일들의 리스트를 획득하는 동작을 포함할 수 있 다. 상기 방법은, 상기 제2 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데 이터베이스의 동기화를 수행하는 동작을 포함할 수 있다. 예를 들어, 상기 동기화를 수행하는 동작은, 상기 제1 데이터베이스 내에서, 상기 제1 데이터베이스와 연결된 파일들을 구별하기 위한 인덱스 값들의 구간에 기반하여, 상기 구간 내에서 상기 속성에 의해 삭제된 것으로 지 시되는 파일들의 개수를 획득하는 동작을 포함할 수 있다. 상기 방법은, 양수인 상기 개수에 응답하여, 상기 구간에 기반하는 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하는 동작을 포함할 수 있다. 예를 들어, 상기 동기화를 수행하는 동작은, 상기 제2 데이터베이스와 연결된 파일들 중에서, 상기 리스트에 포 함된 파일들과 상이한 파일을, 상기 제2 데이터베이스로부터 연결해제(disassociating)하는 동작을 포함할 수 있다. 예를 들어, 상기 획득하는 동작은, 상기 메모리 내에 저장된 이미지 파일, 비디오 파일 또는 오디오 파일 중 적 어도 하나를 포함하는 미디어 콘텐트를 관리하기 위한 상기 미디어 프로바이더를 이용하여, 상기 제1 데이터베 이스에 액세스하는 동작을 포함할 수 있다. 예를 들어, 상기 획득하는 동작은, 상기 제2 소프트웨어 어플리케이션에 의해 관리되는 디렉토리 내에서, 상기 제3 소프트웨어 어플리케이션의 패키지 명칭에 기반하는 서브 디렉토리에 액세스하여, 상기 파일을 포함하는 상 기 정보를 획득하는 동작을 포함할 수 있다. 예를 들어, 상기 정보를 획득하는 동작은, 상기 서브 디렉토리 내에 저장된 상기 파일의 제1 경로를 나타내는 문자열 내에서, 삭제된 파일 또는 디렉토리를 나타내는 지정된 문자열 이전의 부분으로부터, 상기 파일이 저장 되었던 제2 경로를 획득하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 제2 화면을 수신된, 상기 파일의 삭제를 위한 다른 사용자 입력에 응답하여, 상 기 파일의 삭제를 지시하는 지정된 URI에 기반하는 콘텐트 프로바이더를 실행하는 동작을 포함할 수 있다. 상술한 바와 같은, 일 실시예에 따른, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공 된다. 상기 인스트럭션들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 메모리에 저장된 복수의 소프트웨어 어플리케이션들 중 제1 소프트웨어 어플리케이션의 실행 에 기반하는 제1 화면을 상기 디스플레이 상에 표시하는 동안, 상기 메모리 내에서 삭제된 것으로 지시되는 정 보를 열람하기 위한 사용자 입력을 식별하도록, 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 사용자 입력에 응답하여, 상기 인스트럭션들에 대응하는 제2 소프트웨어 어플리케이션에 의해 관리되고, 상기 복수의 소프트웨어 어플리케이션들에 의해 액세스가능한 제1 데이터베이스 와 동기화된, 제2 데이터베이스를 이용하여, 상기 제1 소프트웨어 어플리케이션과 상이한 제3 소프트웨어 어플 리케이션에 기반하여 삭제된 것으로 지시되는 파일을 포함하는 상기 정보를 획득하도록, 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제3 소프트웨어 어플리케이션에 기반하여 삭제된 것으로 지시되는 상기 파일에 대응하는 시각적 객체를 포함하는 제2 화면을 표시하기 위하여, 상기 제1 소프트웨어 어플리케이션으로 상기 정보를 제공하도록, 구성될 수 있다. 상술한 바와 같은, 일 실시예에 따른, 전자 장치는, 디스플레이, 제1 소프트웨어 어플리케이션 및 제2 소프트웨 어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 인스트럭션들을 저장하기 위한 메모리 및 프 로세서를 포함할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리 로 액세스하기 위한 입력을 수신하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 입력에 응답하여, 상기 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들 중 어느 하나로 분류된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케 이션을 실행하여, 상기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지 통 디렉토리와 상이한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 상 기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 실행 화면 내에, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 상기 제1 데이터베 이스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메모리 내 파일들의 상태들을 저장하 는 제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데이트될 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제2 소프트웨어 어플리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴지통 디렉토리로 분류된 파일을 지시하기 위한 속성(attribute)에 의해 필터링된 상기 파일들의 상기 리스트를 획득하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제2 데이터베이 스의 인덱스 값들에 의해 구분되는 상기 메모리 내 상기 파일들의 그룹들 각각에서, 상기 속성에 의해 휴지통 디렉토리로 분류된 것으로 지시되는 파일들의 개수를 획득하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 그룹들 중에서 양수(positive number)인 상기 개수를 가 지는 그룹과 관련된 상기 파일들의 상기 리스트를 이용하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스 의 동기화를 수행하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이 스에 연결된 파일들 중에서, 상기 리스트에 포함된 파일들과 상이한 파일을, 상기 제1 데이터베이스로부터 연결 해제(disassociate)하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관련된 상기 제2 데이터베이스 내 정보를 관리하기 위한 제3 소 프트웨어 어플리케이션을 실행하여, 상기 파일들의 상기 리스트를 획득하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 복수의 소프트웨 어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제1 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함된 상기 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제2 소프트웨어 어플리케이션에 의해 관리되는 디렉토리 내에서, 상기 제1 소프트웨어 어플리케이션과 상이한 다른 소프트웨어 어플리케이션의 패키지 명칭(package name)을 가지는 서브 디렉토리에 액세스하여, 상기 제1 데이터베이스와 연 동될 파일들을 탐지하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 서브 디렉토리 내에 저장된 파일을 식별하는 것에 기반하여, 상기 식별된 파일의 제1 경로(path)를 나타내는 문자열(character string)로부터, 상기 식별된 파일이 저장되었던(was stored) 제2 경로(path)를 획득하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 문자열 내에서, 지정된 문자열 이전의(before) 부분으로부터, 상기 제2 경로를 획득하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 실행에 기반하여 수신된, 파일의 삭제를 위한 다른 입력에 응답하여, 상기 다른 입력에 대응하 고, 상기 파일의 삭제를 지시하는, 지정된 URI(uniform resource indicator)에 기반하는 콘텐트 프로바이더 (content provider)를 실행하도록, 야기할 수 있다. 상술한 바와 같은, 일 실시예에서, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된다. 상기 방법은, 제1 소프트웨어 어플리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이션의 제1 휴 지통 디렉토리로 액세스하기 위한 입력을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 입력에 응답하 여, 상기 제1 소프트웨어 어플리케이션을 포함하는 복수의 소프트웨어 어플리케이션들의 휴지통 디렉토리들 중 어느 하나로 분류된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케이션 을 실행하여, 상기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지통 디렉토리와 상이한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하는 동작을 포함할 수 있다. 상 기 방법은, 상기 실행 화면 내에, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표 시하는 동작을 포함할 수 있다. 상기 제1 데이터베이스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴 지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메모리 내 파일들의 상태들을 저장하는 제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데 이트될 수 있다. 예를 들어, 상기 파일들의 상기 리스트는, 상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관련된 상기 제2 데이터베이스 내 정보를 관리하기 위한 제3 소프트웨어 어플리케이션을 실행하여 획득될 수 있 다. 예를 들어, 상기 방법은, 상기 제2 소프트웨어 어플리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴지통 디렉토리로 분류된 파일을 지시하기 위한 속성에 의해 필터링된 상기 파일들의 상기 리스트를 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하는 동작을 포함할 수 있다. 예를 들어, 상기 동기화를 수행하는 동작은, 상기 제2 데이터베이스의 인덱스 값들에 의해 구분되는 상기 메모 리 내 상기 파일들의 그룹들 각각에서, 상기 속성에 의해 휴지통 디렉토리로 분류된 것으로 지시되는 파일들의 개수를 획득하는 동작을 포함할 수 있다. 상기 동기화를 수행하는 동작은, 상기 그룹들 중에서 양수인 상기 개 수를 가지는 그룹과 관련된 상기 파일들의 상기 리스트를 이용하여, 상기 제1 데이터베이스 및 상기 제2 데이터 베이스의 동기화를 수행하는 동작을 포함할 수 있다. 예를 들어, 상기 동기화를 수행하는 동작은, 상기 제1 데이터베이스와 연결된 파일들 중에서, 상기 리스트에 포 함된 파일들과 상이한 파일을, 상기 제1 데이터베이스로부터 연결해제(disassociating)하는 동작을 포함할 수 있다. 예를 들어, 상기 식별하는 동작은, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제1 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함된 상기 적어도 하나의 파일을 식별하는 동작을 포함할 수 있다. 예를 들어, 상기 제1 데이터베이스는, 상기 제2 소프트웨어 어플리케이션에 의해 관리되는 디렉토리 내에서, 상 기 제1 소프트웨어 어플리케이션과 상이한 다른 소프트웨어 어플리케이션의 패키지 명칭을 가지는 서브 디렉토 리에 포함된 파일들에 대한 정보를 포함할 수 있다. 예를 들어, 상기 제1 데이터베이스는, 상기 서브 디렉토리 내 상기 파일이 저장되었던 제2 경로를 포함할 수 있 다. 상기 제2 경로는, 상기 서브 디렉토리에 포함된 상기 파일들에 대한 정보로써, 상기 서브 디렉토리 내에 저장된 파일의 제1 경로를 나타내는 문자열 내에서, 지정된 문자열 이전의 부분으로부터 획득될 수 있다. 예를 들어, 상기 방법은, 상기 제1 소프트웨어 어플리케이션의 실행에 기반하여 수신된, 파일의 삭제를 위한 다 른 입력에 응답하여, 상기 다른 입력에 대응하고, 상기 파일의 삭제를 지시하는, 지정된 URI에 기반하는 콘텐트 프로바이더를 실행하는 동작을 포함할 수 있다. 상술한 바와 같은, 일 실시예에서, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공된다. 상기 인스트럭션들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 실행 화면을 통하여, 상기 제1 소프트웨어 어플리케이 션의 제1 휴지통 디렉토리로 액세스하기 위한 입력을 수신하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 입력에 응답하여, 상기 복수의 소프트웨어 어플리케이 션들의 휴지통 디렉토리들 중 어느 하나로 분류된 파일들에 대한 정보를 포함하는 제1 데이터베이스를 관리하는 제2 소프트웨어 어플리케이션을 실행하여, 상기 제1 소프트웨어 어플리케이션에 의해 액세스가능한 카테고리에 포함되고, 상기 제1 휴지통 디렉토리와 상이한 제2 휴지통 디렉토리에 포함된, 적어도 하나의 파일을 식별하도 록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 실행 화면 내에, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 상기 제1 데이터베이스는, 상기 복수의 소프트웨어 어플리케이션들의 상기 휴지통 디렉토리들로 분류된 파일들을 저장하고, 상기 복수의 소프트웨어 어플리케이션들에 의해 추가되거나 또는 변경되는 상기 메모리 내 파일들의 상태들을 저장하는 제2 데이터베이스로부터 획득된, 리스트를 이용하여 업데이트될 수 있다. 상술한 바와 같은, 일 실시예(an embodiment)에 따른, 전자 장치(electronic device)는, 디스플레이, 프로세서 및 인스트럭션들을 저장하는 메모리를 포함할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시 에, 상기 전자 장치가, 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하도록, 야기할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토 리로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하도록, 야기할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하 기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기 메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스 를 관리하도록 구성된 제2 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프 로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토리로 액 세스하기 위한 상기 사용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디 렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상 기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어도 하나 의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제2 매니징 어플 리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴지통 디렉토리로 분류된 파일을 지시하기 위한 속성(attribute)에 의해 필터링된 상기 파일들의 상기 리스트를 획득하도록, 야기할 수 있다. 상기 인스트럭션 들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스 및 상기 리스트를 비교하 여, 상기 제1 데이터베이스 및 상기 제2 데이터베이스의 동기화를 수행하도록, 야기할 수 있다. 예를 들어, 상기 제1 데이터베이스는, 상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관 련된 미디어프로바이더 소프트웨어 프로그램인 상기 제1 매니징 어플리케이션에 의해 관리될 수 있다. 예를 들어, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션을 포함하는 복수의 소프트 웨어 어플리케이션들의 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제2 데 이터베이스는, 휴지통 디렉토리 매니징 소프트웨어 프로그램인 상기 제2 매니징 어플리케이션에 의해 관리될 수 있다. 예를 들어, 상기 인스트럭션들은, 상기 프로세서에 의해 실행될 시에, 상기 전자 장치가, 상기 제2 매니징 어플 리케이션에 의해 관리되는 디렉토리 내에서, 상기 제1 소프트웨어 어플리케이션과 상이한 다른 소프트웨어 어플 리케이션의 패키지 명칭(package name)을 가지는 서브 디렉토리에 액세스하여, 상기 제1 데이터베이스와 연동될 파일들을 탐지하도록, 야기할 수 있다. 상술한 바와 같은, 일 실시예에서, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치의 방법이 제공된다. 상기 방법은, 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표시하는 동작을 포함할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 방법은, 제2 소프트웨어 어플리케이션의 실 행에 기반하는 제2 실행 화면을 표시하는 동작을 포함할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 방법 은, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행되는 동작들에 따라 상기 메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포 함된 것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어 플리케이션을 실행하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이터베이스를 관리하도록 구성된 제2 매니징 어플리케이션을 실행하는 동작을 포함 할 수 있다. 상기 제1 실행 화면을 표시하는 동작은, 상기 제1 휴지통 디렉토리로 액세스하기 위한 상기 사용 자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상기 제2 휴지통 디렉토리에 포함되 고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련된 적어도 하나의 파일을 식별하는 동작을 포함할 수 있다. 상기 제1 실행 화면을 표시하는 동작은, 상기 제1 소프트웨어 어플리케이션의 상기 제 1 실행 화면을 통하여, 상기 식별된 적어도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하는 동 작을 포함할 수 있다. 예를 들어, 상기 제1 데이터베이스는, 상기 메모리 내 상기 파일들에 포함된 이미지, 비디오 또는 오디오와 관 련된 미디어프로바이더 소프트웨어 프로그램인 상기 제1 매니징 어플리케이션에 의해 관리될 수 있다. 예를 들어, 상기 방법은, 상기 제2 매니징 어플리케이션의 실행에 기반하여, 상기 제2 데이터베이스 내에서, 휴 지통 디렉토리로 분류된 파일을 지시하기 위한 속성에 의해 필터링된 상기 파일들의 상기 리스트를 획득하는 동 작을 포함할 수 있다. 상기 방법은, 상기 제1 데이터베이스 및 상기 리스트를 비교하여, 상기 제1 데이터베이 스 및 상기 제2 데이터베이스의 동기화를 수행하는 동작을 포함할 수 있다. 예를 들어, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션을 포함하는 복수의 소프트 웨어 어플리케이션들의 휴지통 디렉토리들로 분류된 파일들에 각각 대응하는 레코드들을 포함하는 상기 제2 데 이터베이스는, 휴지통 디렉토리 매니징 소프트웨어 프로그램인 상기 제2 매니징 어플리케이션에 의해 관리될 수 있다. 예를 들어, 상기 제1 데이터베이스는, 상기 제2 매니징 어플리케이션에 의해 관리되는 디렉토리 내에서, 상기 제1 소프트웨어 어플리케이션과 상이한 다른 소프트웨어 어플리케이션의 패키지 명칭을 가지는 서브 디렉토리에 포함된 파일들에 대한 정보를 포함할 수 있다. 상술한 바와 같은, 일 실시예에서, 인스트럭션들을 포함하는 비-일시적 컴퓨터 판독 가능 저장 매체가 제공된다. 상기 인스트럭션들은, 디스플레이, 메모리 및 프로세서를 포함하는 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 제1 소프트웨어 어플리케이션의 실행에 기반하는 제1 실행 화면을 상기 디스플레이 내에 표 시하도록, 야기할 수 있다. 상기 제1 실행 화면은, 상기 제1 소프트웨어 어플리케이션의 제1 휴지통 디렉토리 로 액세스하기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 제2 소프트웨어 어플리케이션의 실행에 기반하는 제2 실행 화면을 표시하도록, 야기할 수 있다. 상기 제2 실행 화면은, 상기 제2 소프트웨어 어플리케이션의 제2 휴지통 디렉토리로 액세스하 기 위한 사용자 입력을 수신하도록 구성될 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션 및 상기 제2 소프트웨어 어플리케이션에 의해 수행 되는 동작들에 따라 상기 메모리에 저장된 파일들의 상태를 기록하고, 상기 제1 휴지통 디렉토리 및 상기 제2 휴지통 디렉토리에 포함된 것으로 분류된 리스트와 관련된 파일들을 포함하는, 제1 데이터베이스를 관리하도록 구성된 제1 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 데이터베이스로부터 획득된 리스트를 이용하여 업데이트된 제2 데이 터베이스를 관리하도록 구성된 제2 매니징 어플리케이션을 실행하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 실행 화면을 통하여, 상기 제1 휴지통 디렉토 리로 액세스하기 위한 상기 사용자 입력을 수신하는 것에 기반하여, 상기 제1 휴지통 디렉토리 및 상기 제2 휴 지통 디렉토리에 포함된 것으로 분류된 파일들에 대한 정보를 포함하는 상기 제2 데이터베이스를 이용하여, 상 기 제2 휴지통 디렉토리에 포함되고 상기 제1 소프트웨어 어플리케이션에 의해 액세스 가능한 카테고리와 관련 된 적어도 하나의 파일을 식별하도록, 야기할 수 있다. 상기 인스트럭션들은, 상기 전자 장치에 의해 실행될 시에, 상기 전자 장치가, 상기 제1 소프트웨어 어플리케이션의 상기 제1 실행 화면을 통하여, 상기 식별된 적어 도 하나의 파일에 대응하는 적어도 하나의 시각적 객체를 표시하도록, 야기할 수 있다. . 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 프로세서, 콘트롤 러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되 어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 이때, 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수 개의 하드웨어가 결합된 형태의 다 양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워 크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 어플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다."}
{"patent_id": "10-2023-0168690", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2023-0168690", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은, 복수의 소프트웨어 어플리케이션들의 실행에 기반하는 화면들을 표시하는 전자 장치의 일 실시예를 도 시한다. 도 2는, 일 실시예에 따른, 전자 장치의 블록도의 일 예를 도시한다. 도 3은, 일 실시예에 따른, 전자 장치의 흐름도를 도시한다. 도 4는, 복수의 데이터베이스들의 동기화를 수행하는 전자 장치의 예시적인 동작에 대한 흐름도를 도시한다. 도 5는, 복수의 데이터베이스들의 동기화를 수행하는 전자 장치의 예시적인 동작에 대한 흐름도를 도시한다. 도 6은, 일 실시예에 따른, 전자 장치에 의해 관리되는 디렉토리의 예시적인 구조를 도시한다. 도 7은, 하나 이상의 파일들 및/또는 서브 디렉토리들을 저장하는 예시적인 디렉토리를 스캔하는 전자 장치의 동작을 도시한다. 도 8은, 파일 및/또는 디렉토리를 삭제하기 위한 사용자 입력을 수신한 전자 장치의 예시적인 동작을 도시한다. 도 9는, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다."}
