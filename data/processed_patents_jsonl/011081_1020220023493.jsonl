{"patent_id": "10-2022-0023493", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0154009", "출원번호": "10-2022-0023493", "발명의 명칭": "다중 저장 프로세싱 코어들을 갖는 컴퓨팅 저장 아키텍처", "출원인": "웨스턴 디지털 테크놀로지스, 인코포레이티드", "발명자": "윤인수"}}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리 디바이스로서,프로세서들 및 메모리 셀들을 갖는 복수의 다이들을 각각 포함하는 복수의 패키지들을 포함하며, 상기 다이들은도체들을 통해 상기 패키지 내에서 함께 커플링되고 다른 패키지들과 커플링되며,상기 패키지들 중 하나의 패키지 내의 제1 다이 상의 상기 프로세서들 중 임의의 프로세서는, 상기 패키지들 중임의의 패키지 내의 제2 다이 상의 상기 프로세서들 중 임의의 프로세서에게, 상기 디바이스 내에서 내부적으로데이터를 전송하도록 구성되는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제1 다이 상의 임의의 프로세서는 상기 제2 다이 상의 상기 메모리 셀들 중 임의의 메모리 셀에 또는 그로부터 데이터를 기록 또는 판독하도록 추가로 구성되며, 상기 기록되는 데이터는 하나 이상의컴퓨팅 기능들에서 사용하기 위한 다른 프로세서에게 액세스가능한, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 프로세서들 각각은 상기 프로세서가 상기 프로세서들 또는 메모리 셀들 중 임의의 다른프로세서 또는 메모리 셀 사이에서 높은 우선순위 데이터 전송들을 선점적으로 수행할 수 있게 하도록 구성된우선순위 스케줄러를 포함하는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 복수의 다이들 상의 상기 프로세서들 각각은 분산 컴퓨팅 기능들을 수행하도록 추가로 구성되는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 복수의 다이들 상의 상기 프로세서들 각각은 전용 그래픽 기능들, 인공 지능 기능들, 기계 학습 기능들, 분산 컴퓨팅 기능들, 또는 검색 기능들 중 적어도 하나를 수행하도록 추가로 구성되는, 메모리디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 패키지 내에서 함께 커플링된 상기 다이들 사이의 상기 도체들의 적어도 일부분은 인-패키지(in-package) 인터페이스 버스를 포함하는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 기판 상의 인접하거나 적층된 패키지들에 대응하는 인-패키지 인터페이스 버스들은 직렬로 연결되고, 채널간 통신들을 가능하게 하기 위해 각각 입력 포트 및 출력 포트가 구성되는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 패키지들 각각에 대해, 상기 패키지 내의 상기 다이들 각각에 전기적으로 연결된 인터페이스 집적 회로(interface integrated circuit, IIC)를 추가로 포함하고, 상기 IIC들은 인-패키지 통신들을 가능하게 하도록 구성되는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 기판 상의 인접하거나 적층된 패키지들에 대응하는 상기 인터페이스 IC들은 직렬로 함께 커플링되고, 상기 다이들이 채널간 통신들을 수행할 수 있게 하도록 구성되는, 메모리 디바이스.공개특허 10-2022-0154009-3-청구항 10 제1항에 있어서, 상기 패키지들 각각은 메모리 셀들을 포함하는 다이들과 함께 사용하기 위한 전용 제어 회로부를 포함하는 적어도 하나의 다이를 포함하는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 하나 이상의 패키지들 내의 상기 복수의 다이들은 CMOS 접합 어레이(CMOS Bonded Array, CBA)를 포함하는, 메모리 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "패키지 내(intra-package) 및 채널간(inter-channel) 프로세서 통신을 위한 디바이스로서,기판 상의 복수의 패키지들을 포함하며, 각각의 패키지는 복수의 다이들을 포함하고, 각각의 다이는 프로세서들및 메모리 셀들을 포함하고, 상기 다이들은 도체들을 통해 상기 패키지 내에서 함께 커플링되고, 상기 패키지들의 다른 것들과 커플링되고,상기 패키지들 중 하나의 패키지 내의 제1 다이 상의 상기 프로세서들 중 임의의 프로세서는, 상기 프로세서와상기 패키지들 중 임의의 패키지 내의 제2 다이 상의 다른 프로세서 또는 메모리 셀들 사이에서, 상기 디바이스내에서 내부적으로 데이터를 전송하도록 구성되는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 프로세서들 각각은 상기 프로세서가 다른 프로세서 또는 상기 메모리 셀들로 높은 우선순위 데이터 전송들을 선점적으로 수행할 수 있게 하는 우선순위 스케줄러를 포함하는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 프로세서들 각각은 다른 프로세서들 또는 메모리 셀들을 사용하여 상기 복수의 패키지들내에서 그리고 그들을 가로질러 분산 컴퓨팅 기능들을 수행하도록 구성되는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서, 상기 패키지들 각각 내의 상기 다이들 사이의 상기 도체들의 적어도 일부분은, 프로세서들이인-패키지 통신들을 전송 및 수신할 수 있게 하도록 구성된 인-패키지 인터페이스 버스를 포함하는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항에 있어서, 상기 제1 다이 및 상기 제2 다이는 동일한 패키지 내에 위치되는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제12항에 있어서, 상기 패키지들 각각에 대해, 상기 패키지 내의 상기 다이들 각각에 커플링된 인터페이스 집적회로(IC)를 추가로 포함하고, 상기 인터페이스 IC들은 상기 프로세서들에 의한 인-패키지 데이터 전송들을 가능하게 하도록 구성되는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서, 상기 인터페이스 IC들은 인접한 패키지들 사이에 추가로 직렬로 연결되고, 상기 프로세서들이상기 메모리 셀들을 사용하여 채널간 통신들을 수행할 수 있게 하도록 구성되는, 디바이스."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "장치로서,기판 상에 배열되고 복수의 다이들을 포함하는 패키지를 포함하며, 상기 복수의 다이들은 프로세서들 및 입/출력(I/O) 인터페이스를 각각 가지고, 상기 입/출력(I/O) 인터페이스는 도체들을 통해 다른 다이들에 커플링되며,외부 저장 제어기에 연결되도록 구성되고,상기 I/O 인터페이스는 상기 다이들 중 하나의 다이 상의 프로세서가 상기 다이들 중 다른 다이 상의 다른 프로공개특허 10-2022-0154009-4-세서로 또는 그로부터 인-패키지 데이터 전송을 수행하게 하고, 상기 장치 외부의 프로세서들과 채널간 데이터전송들을 수행할 수 있게 하도록 구성되는, 장치."}
{"patent_id": "10-2022-0023493", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 I/O 인터페이스들에 커플링되고, 상기 외부 저장 제어기에 연결되도록 구성된 인터페이스 집적 회로(IIC)를 추가로 포함하며, 상기 IIC는 상기 패키지 내의 상이한 다이들간의 인-패키지 통신들 및상이한 패키지들 상의 프로세서들간의 상기 저장 제어기를 통한 채널간 통신들을 가능하게 하도록 구성되는, 장치."}
{"patent_id": "10-2022-0023493", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "컴퓨팅 저장 아키텍처가 개시된다. 메모리 디바이스들은 분산된 프로세서들 및 메모리를 포함할 수 있다. 디바 이스들은 다수의 패키지들을 사용하여 배열될 수 있으며, 각각의 패키지는 하나 또는 다수의 다이들을 포함할 수 있다. 본 개시내용의 하나의 태양에서, 제1 다이 상의 프로세서들 중 임의의 프로세서는, 외부 저장 제어기를 통과할 필요 없이, 디바이스 내에서 내부적으로 제2 다이 상의 임의의 프로세서로 그리고 그로부터 데이터를 전 송할 수 있다. 본 개시내용의 다른 태양에서, 멀티 패키지 프로세싱 아키텍처는 동일한 디바이스 내의 프로세서 들간의 인-패키지(in-package) 데이터 전송 및 채널간(inter-channel) 데이터 전송 둘 모두를 허용한다. 본 개 시내용의 또 다른 태양에서, 하나 이상의 프로세서들은 선점형 스케줄러(preemptive scheduler) 회로를 포함할 수 있으며, 이는 프로세서가 진행중인 낮은 우선순위 송신을 중단하고 데이터를 즉시 전송할 수 있게 한다."}
{"patent_id": "10-2022-0023493", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시내용은 일반적으로 메모리 및 프로세서 동작들에 관한 것으로, 보다 구체적으로는 직접 다이간 및 패키 지간 통신들을 가능하게 하는 컴퓨팅 아키텍처에 관한 것이다."}
{"patent_id": "10-2022-0023493", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 몇 년 동안 주류 전자 애플리케이션들에서 전례 없는 속도를 달성한 최신 상용 프로세싱 및 솔리드 스테이 트 메모리 기술로 제조업체들의 관심은 멀티프로세싱 애플리케이션들을 위해 증가된 다이 영역을 제공하는 메모 리 아키텍처들로 점점 더 많이 향하고 있다. 원하는 결과는 현재의 프로세서 아키텍처들에서 흔히 볼 수 있는 단점들을 극복하여 새로운 정교한 수준으로 계산 집약적 애플리케이션들을 구현하는 멀티프로세서 시스템이다. 이러한 추세와 이러한 발전에도 불구하고 프로세서-대-메모리 병목 현상들은 기존 아키텍처들에서 지속된다. 예를 들어, 상이한 메모리 다이들간의 프로세서 통신들은 일반적으로 외부 제어기에 의해 조정된다. 결과적으 로 이러한 멀티프로세싱 디바이스들은 제어기에서의 레이턴시들로 인해 병목 현상들을 겪는다. 또한, 통신이 제어기에 의해 통제되기 때문에, 메모리/프로세서 아키텍처들은 데이터 전송을 개시하는 능력을 갖지 않는다. 메모리 아키텍처들의 이러한 고유 레이턴시들은 고급 프로세싱 애플리케이션들이 실현될 수 있는 정도를 실질적 으로 제한한다. 메모리 디바이스의 하나의 태양이 본 명세서에 개시된다. 메모리 디바이스는 복수의 패키지들을 포함한다. 각 각의 패키지는 프로세서들 및 메모리 셀들을 갖는 복수의 다이들을 포함한다. 다이들은 패키지 내에서 함께 커 플링되고 도체들을 통해 다른 패키지들과 커플링된다. 패키지들 중 하나의 패키지 내의 제1 다이 상의 프로세 서들 중 임의의 프로세서는, 패키지들 중 임의의 패키지 내의 제2 다이 상의 프로세서들 중 임의의 프로세서에 게, 디바이스 내에서 내부적으로 데이터를 전송하도록 구성된다. 디바이스의 다른 태양은 패키지 내(intra-package) 및 채널간(inter-channel) 프로세서 통신을 위한 아키텍처를 포함한다. 디바이스는 기판 상에 복수의 패키지들을 포함한다. 각각의 패키지는 복수의 다이들을 포함한다. 각각의 다이는 프로세서들 및 메모리 셀들을 갖는다. 다이들은 패키지 내에서 함께 커플링되고 도체들을 통해 패키지들 중 다른 패키지들과 커플링된다. 패키지들 중 하나의 패키지 내의 제1 다이 상의 프로세서들 중 임의 의 프로세서는, 프로세서와 패키지들 중 임의의 패키지 내의 제2 다이 상의 다른 프로세서 또는 메모리 셀들 사 이에서, 디바이스 내에서 내부적으로 데이터를 전송하도록 구성된다. 장치의 또 다른 태양이 또한 개시된다. 장치는 기판 상에 배열된 패키지를 포함한다. 패키지는 복수의 다이들 을 포함한다. 각각의 다이는 프로세서들 및 입/출력(I/O) 인터페이스를 가지며, 입/출력(I/O) 인터페이스는 도 체들을 통해 다른 다이들에 커플링되며, 외부 저장 제어기에 연결되도록 구성된다. I/O 인터페이스는 다이들 중 하나의 다이 상의 프로세서가, 다이들 중 다른 하나의 다이 상의 다른 프로세서로 또는 그로부터 인-패키지 (in-package) 데이터 전송을 수행하고, 장치 외부의 프로세서들과 채널간 데이터 전송들을 수행할 수 있게 하도 록 구성된다. 멀티프로세서 컴퓨팅 아키텍처의 다른 태양들은 하기의 상세한 설명으로부터 당업자에게 용이하게 명백해질 것 임이 이해될 것이며, 여기서 장치들 및 방법들의 다양한 태양들이 예시로서 도시되고 기술된다. 실현되는 바와 같이, 이러한 태양들은 다른 그리고 상이한 형태들로 구현될 수 있고, 그의 여러 세부사항들은 다양한 다른 태 양들에서 수정될 수 있다. 따라서, 도면 및 상세한 설명은 사실상 예시적인 것으로 간주되어야 하며 제한적인것은 아니다."}
{"patent_id": "10-2022-0023493", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "첨부된 도면들과 관련하여 하기에서 설명되는 상세한 설명은 본 발명의 다양한 예시적인 실시예들의 설명으로서 의도되며, 본 발명이 실시될 수 있는 유일한 실시예들을 표현하도록 의도되지 않는다. 상세한 설명은 본 발명 의 완전한 이해를 제공하려는 목적으로 구체적인 상세사항들을 포함한다. 그러나, 본 발명이 이러한 구체적인 상세사항들 없이 실시될 수 있다는 것은 당업자들에게 명백할 것이다. 일부 경우들에서, 주지된 구조물들 및 컴포넌트들은 본 발명의 개념들을 모호하게 하는 것을 피하기 위해 블록도 형태로 도시된다. 두문자어들 및 다 른 서술적 용어는 단지 편의상 그리고 명확함을 위해 사용될 수 있으며, 본 발명의 범주를 제한하도록 의도되지 않는다. 단어들 \"예시적\" 및 \"예\"는 본 명세서에서 일례, 사례, 또는 예시의 역할을 의미하는 데 사용된다. 본 명세서 에서 \"예시적인\"으로 기술되는 임의의 예시적인 실시예는 반드시 다른 예시적인 실시예들에 비해 바람직하거나 유리한 것으로 해석되어야 하는 것은 아니다. 마찬가지로, 장치, 방법 또는 제조 물품의 \"예시적인 실시예\"라 는 용어는 본 발명의 모든 예시적인 실시예들이 기술된 컴포넌트들, 구조, 특징부들, 기능성, 프로세스들, 이점 들, 이득들, 또는 작동 모드들을 포함하는 것을 요구하지는 않는다. 본 개시내용의 원리들은, 제한 없이, CMOS 접합된 어레이(CMOS Bonded Array, CBA)를 포함하는 다수의 최신 기 술의 메모리 아키텍처들에 적용될 수 있다. 웨이퍼-대-웨이퍼 접합은 본 명세서에 기술된 바와 같이 3차원 메 모리/프로세서 디바이스들을 허용할 수 있다. 예를 들어, 메모리 셀들은 하나의 웨이퍼 상에 배치될 수 있고, CMOS 어레이는 다른 웨이퍼 상의 제어 로직을 포함할 수 있으며, 이어서, 웨이퍼들은 예컨대, 구리 또는 다른 적합한 요소를 사용하여 함께 접합될 수 있다. 샌드위치형 다이는 단일 패키지 내에 배치될 수 있다. 일부 경 우들에서, 제어 로직을 갖는 다이는 다른 애플리케이션들을 위해 남겨진 다이 영역을 가질 수 있다. 따라서, 본 개시내용의 하나의 태양에서, 제어 로직에 인접한 CMOS 다이 상의 이용 가능한 영역들은 복수의 프로세서들 로 채워진다. CBA의 이 예에서, 하나의 다이는 메모리 코어를 포함할 수 있는 한편, 다른 접합 다이는 LDPC 엔 진, 보안 엔진, I/O 인터페이스, 및 멀티프로세서들을 포함할 수 있다. 본 개시내용의 목적들을 위해, \"다이\" 는 또한 CBA 샌드위치형 다이들 및 유사한 3D 다이 어레이 기술들뿐만 아니라 종래의 반도체 다이 기술들을 포 함하는 것으로 간주될 수 있다. 본 개시내용의 원리들은 상이한 유형들의 메모리 디바이스들에 의해 구현될 수 있다. 이러한 디바이스들은 다 수의 프로세서들(본 명세서에서 때때로 \"멀티프로세서\"또는 \"멀티프로세서들\"로 지칭됨) 및 다른 요소들을 포함 할 수 있다. 그들의 컴포넌트들은 전자 하드웨어, 컴퓨터 소프트웨어, 또는 이들의 임의의 조합을 사용하여 구 현될 수 있다.예로서, 메모리 디바이스의 요소, 컴포넌트, 또는 이들의 임의의 조합이 하나 이상의 프로세서들을 사용하여 구 현될 수 있다. 프로세서들의 예들은 마이크로프로세서들, 마이크로제어기들, GPU(graphics processing unit)들, CPU(central processing unit)들, 애플리케이션 프로세서들, DSP(digital signal processor)들, RISC(reduced instruction set computing) 프로세서들, SoC(systems on a chip), 기저대역 프로세서들, FPGA(field programmable gate array), PLD(programmable logic device)들, 상태 머신들, 게이팅된 로직, 이산 적 하드웨어 회로들, 및 본 개시내용 전반에 걸쳐 기술되는 다양한 기능을 수행하도록 구성되는 다른 적절한 하 드웨어를 포함한다. 하나 이상의 프로세서들은 소프트웨어 및 펌웨어를 실행할 수 있다. 소프트웨어 및 펌웨 어는, 소프트웨어, 펌웨어, 미들웨어, 객체 코드 소스 코드, 또는 다른 것으로 지칭되는지에 관계없이, 명령어 들, 명령어 세트들, 코드, 코드 세그먼트들, 프로그램 코드, 프로그램들, 서브프로그램들, 소프트웨어 컴포넌트 들, 애플리케이션들, 소프트웨어 애플리케이션들, 소프트웨어 패키지들, 루틴들, 서브루틴들, 오브젝트들, 실행 가능물들, 실행 스레드들, 절차들, 함수들 등을 의미하도록 광범위하게 해석되어야 한다. 따라서, 하나 이상의 예시적인 실시예들에서, 설명된 기능들은 하드웨어, 소프트웨어, 또는 이들의 임의의 조합 으로 구현될 수 있다. 소프트웨어로 구현된 경우, 기능들은 컴퓨터 판독가능 매체 상에 하나 이상의 명령어들 또는 코드로서 저장 또는 인코딩될 수 있다. 본 명세서의 메모리 디바이스들은 인접한 하나 이상의 메모리 어 레이들을 포함하여 회로 전체에 걸쳐 상이한 위치들에 위치된 분산 프로세서들을 추가로 포함할 수 있다. 메모 리 디바이스들 및 대응하는 멀티프로세서들은 하나 이상의 다이들 상에 형성될 수 있다. 일부 구성들에서, 다 이들은 하나 이상의 다이들을 수용하기 위한 도체들을 갖는 세라믹, 플라스틱 또는 다른 유형의 케이싱과 같은 패키지에 포함된다. 일부 실시예들에서, 다이들은 하나 이상의 기판 상의 다양한 위치들에 배열될 수 있다. 다이들은 적층될 수 있다. 예를 들어, 하나의 다이는 메모리 회로들을 포함할 수 있고, 제1 다이에 수직으로 그리고 대향하여 적층된 다른 다이는 제어 회로들을 포함할 수 있다. 어느 다이나 하나 이상의 프로세서들을 포함할 수 있다. 일부 구성들에서, 메모리 디바이스는 다수의 패키지들을 포함할 수 있으며, 각각의 패키지는 다수의 다이들을 가질 수 있다. 패키지들은 마찬가지로 표면 또는 기판(예컨대, 인쇄 회로 기판) 상에 배열될 수 있다. 메모리 디바이스는 패키지들의 어레이를 포함할 수 있다. 다이들과 마찬가지로, 패키지들은 기판 상 에 서로 인접하게 분포될 수 있거나, 또는 이들은 적층될 수 있다. 다른 배열들에서, 프로세서들은 다이 상의 메모리들 사이에 분산되거나, 또는 달리 위치될 수 있다. 도 1은 저장 제어기에 연결된 메모리 패키지들(118, 120, 122, 124, 126)을 포함하는 멀티프로세서 회로 의 블록도이다. 저장 제어기는, 예를 들어, SSD 드라이브에 사용되는 솔리드 스테이트 드라이브 (SSD) 제어기일 수 있다. 메모리 패키지들 각각은, 멀티프로세서, 메모리 코어, 보안 엔진, 저 밀도 패리티 체크(LDPC) 엔진, 및 I/O 인터페이스를 갖는 하나 이상의 다이들을 포함한다. 예 에 도시된 바와 같이, 유사한 회로부를 포함하는 4개의 다이들이 각각의 메모리 패키지(예컨대, 118) 내에 포함되고 함께 커플링된다. 저장 제어기는 호스트 인터페이스, 데이터 프로세서, 및 저장 관리 프로세서(SMP)를 포함하며, 이들 각각은 크로스바(crossbar) 또는 패킷 스위치 모듈에 각각 커플링된 다. 저장 제어기는 상이한 다이 상의 상이한 프로세싱 및 메모리 요소들 사이의 판독, 기록 및 다른 데이 터 전송 동작들을 개시하고 실행할 수 있다. SMP는 저장 제어기에 의한 자원들의 사용을 중재할 수 있다. 각각의 메모리 패키지(118, 120, 122) 상의 각각의 다이의 I/O 인터페이스 등은 저장 제어기 상 의 각자의 I/O 인터페이스에 커플링된다. 저장 제어기 상의 각각의 I/O 인터페이스는 크로스바 또는 패킷 스위치 모듈에 전기적으로 커플링된다. 부가적으로, SMP는 각각의 I/O 인터페이스에 커플 링되지만, 과도한 배선으로 도면을 과도하게 모호하게 하는 것을 피하기 위해, SMP는 좌측의 처음 2개의 I/O 인터페이스 요소들에 커플링된 것으로만 도시되어 있다. 크로스바 또는 패킷 스위치 모듈의 하 나의 태스크는 데이터를 적절한 위치로 라우팅하는 것이다; 예를 들어, 크로스바는 다이 상의 소스 프로세서들 중 하나로부터 패킷을 수신하고 SMP의 제어 하에 패킷을 그의 목적지 프로세서로 전달할 수 있 다. 도 1의 메모리 패키지들은 각각 프로세서-대-프로세서 데이터 전송 또는 다른 동작들을 위한 종래의 저장 제어 기에 커플링되며, 이는 현재 이러한 채널간 또는 패키지 내(예컨대, 패키지 내의 다이들간)의 데이터 전송들의 속도 및 효율을 방해한다. 개별 패키지들(또는 다이들) 각각은 별개의 I/O 인터페이스를 사용한다. 이러 한 다수의 메모리 디바이스들을 사용하여 데이터를 프로세싱하기 위해 대칭형 멀티프로세싱을 위한 펌웨어가 필 요하다. 크로스바/패킷 스위치 모듈은 데이터 전송이 내부 용인지 또는 대신에 호스트로부터의 외부 메모 리 동작들을 위한 것인지 여부에 관계없이, 각각의 데이터 패킷의 전송을 제어하기 위해 사용되어야 한다.SMP가 다른 태스크들에 관여하거나 결과를 기다리는 것으로 인해 추가의 레이턴시들이 발생될 수 있다. 멀티프로세서 컨텍스트에서 모든 데이터 전송들에 대한 저장 제어기의 사용은 전체 데이터 전송 프로세스 에 상당한 레이턴시들을 추가할 수 있으며, 실제로 높은 속도와 낮은 레이턴시들이 성능에 중요한 인공 지능, 자율 주행 자동차 등과 같은 고도로 정교한 멀티프로세싱 기술에서 상당한 제한을 나타낸다. 내부 통신들이 통상적으로 저장 제어기 및 저장 관리 프로세서를 사용하여 라우팅되어야 한다는 사실 은 데이터 전송들, 기록들 및 판독들에 상당한 레이턴시들을 추가할 뿐만 아니라, 메모리 측 개시 데이터 통신 을 위한 메커니즘을 제공할 수 없다. 종래의 아키텍처들의 예로서, 제1 메모리 패키지로부터 제2 메모리 패키 지로 할당된 주어진 컴퓨팅 태스크에 대해, 태스크를 완료하기 위해 제1 패키지로부터 하나의 다이가 할당된다. 저장 관리 프로세서는 태스크가 완료되었는지 여부를 결정하기 위해 디바이스에 폴링한다. 그렇지 않은 경우, SMP는 통상적으로 패키지로부터 데이터를 검색하기 위해 반환하기 전에 전송이 완료되기를 대기할 때 다른 데이터 전송으로 전환한다. 그 다음, SMP는 데이터를 해석하고 또 다른 이용 가능한 전송 슬롯이 최 종적으로 패키지에 데이터를 전송하기를 대기할 수 있다. 이러한 지연들은 본 개시내용의 실시예들에 의해 대체로 또는 전체적으로 해결된다. 또한, 메모리 패키지들(118, 120) 등에 대해 데이터 전송들을 우선순위화하기 위한 메커니즘이 존재하지 않는다. 오히려, 이 능력은 저장 제어기에만 존재한다. 이러한 제한은 예를 들어, 높은 우선순위 데이터 전송을 수행하는 프로세서의 능력이 중요한 인공 지능 및 기계 학습 애플리케이션들에 대한 상당한 장애물이 될 수 있다. 도면들의 목적을 위해, 본 명세서에 기술된 바와 같은 멀티프로세서들(예컨대, 도 2의 멀티프로세서)은 (예컨대, CMOS를 사용하여) 다이의 주어진 영역 내의 단일 블록으로서 도시될 수 있다. 일부 실시예들에서, 프 로세서들은 다이 상의 특정 공간을 점유하도록 구성될 수 있다. 그러나, 본 개시내용의 목적을 위해, 용어 \"멀 티프로세서(들)\"는 다이 상의 임의의 배열의 복수의 프로세서들을 포함하는 것으로 광범위하게 해석될 수 있다. 예를 들어, 본 명세서에 기술된 바와 같은 \"멀티프로세서(들)\"는 프로세서들이 인접한 메모리 어레이들의 그룹 들 사이의 위치들에 위치되는 분산 프로세서 아키텍처를 포함할 수 있다. 부가적으로, 용어 \"메모리 코어\"는 또한 블록 형태로 예시될 수 있다(예컨대, 메모리 코어). 용어 \"메모리 코어\"는 마찬가지로, 복수의 메모 리 평면들, 블록들 또는 어레이들이 위치되는 다이의 영역을 부분적으로 지칭하는 데 사용된다. 그러나, 본 개 시내용의 목적을 위해, 용어 \"메모리 코어\"는 다이 상의 개별 메모리 셀들의 위치에 관계없이, 디바이스 상의 메모리 셀들의 사실상 임의의 유형의 배열을 포함하는 것으로 광범위하게 해석되도록 의도된다. 본 개시내용의 하나의 태양에서, 다수의 프로세서 및 메모리 아키텍처가 개시된다. 메모리 디바이스는 하 나 이상의 패키지들을 포함할 수 있다. 각각의 패키지 내에서, 하나 이상의 다이가 인접하거나 적층된 배열들 로 존재할 수 있다. 다양한 실시예들에서, 저장 제어기의 개입 또는 그에 의한 레이턴시들의 도입을 요구하지 않으면서 양방향 통신들이 디바이스 내의 프로세서들 사이에서 발생하도록 구성될 수 있다. 예를 들어, 일부 실시예들에서, 동일한 다이 내에 있거나 또는 동일한 패키지 내의 상이한 다이들 상에 존재하는 프로세서들은 디바이스 내에서 양방향 데이터 전송들을 직접 실행할 수 있다. 다른 실시예들에서, 상이한 패키지들 내의 다 이들 상에 위치된 프로세서들은 저장 제어기를 필요로 하지 않고 직접 데이터를 전송할 수 있다. 또 다른 실시예들에서, 본 명세서에 기술된 메모리 디바이스는 전술한 바와 같은 양방향 통신 및 다중-우선순위 패킷들의 선점적 우선순위 전송들 둘 모두를 지원하도록 구성된 I/O 인터페이스를 포함할 수 있다. 하나의 예 로서, 본 명세서에 기술된 아키텍처에 사용되는 데이터 패킷들은 다음의 형태를 취할 수 있다:"}
{"patent_id": "10-2022-0023493", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "데이터 패킷 다양한 실시예들에서, 데이터를 교환하는 프로세서들은 물리적 링크를 공유할 수 있거나, 또는 더 높은 대역폭 들이 바람직한 집중 데이터 교환들에서 사용하기 위한 것과 같은 별개의 링크들을 사용할 수 있다. 부가적으로, 본 개시내용의 다른 태양에서, 통신들은 또한 공유되거나 별개의 채널들을 사용할 수 있는 다수의 우선순위 레벨들을 사용할 수 있다. 예를 들어, 더 높은 우선순위 통신들을 위해 하나 이상의 전용 데이터 채 널들이 사용될 수 있다. 특정 실시예들에 따른 선점형 스케줄러(preemptive scheduler)들(후술됨)은 또한 매우 높은 우선순위 통신들을 즉시 스케줄링하고 개시하기 위해 하드웨어 인터럽트들을 수행할 수 있다. 본 명세서 에 기술된 아키텍처의 이러한 태양들은 전통적인 메모리 및 멀티프로세서들의 프로세싱 병목 현상들을극복하고, 언급된 바와 같이, 항공기 또는 우주선, 인공 지능, 로봇 공학, 기계 학습, 집약적 계산 및 다른 애 플리케이션들에서 사용하는 것과 같은 고성능 태스크들에 특히 적합하다. 일부 실시예들에서, 상이한 패키지들 내의 프로세서들 사이의 송신은 디바이스 내의 프로세서에 의해 내부적으 로 또는 저장 제어기를 통해 개시될 수 있다. 또한, 본 명세서에 기술된 디바이스들은 외부 기록들을 수신하거 나 판독 동작들을 수행하기 위해 저장 제어기와 통신할 수 있다. 디바이스는 또한 크로스바 또는 패킷 스위치 를 그 자체의 I/O 인터페이스로 포함할 수 있어 크로스바 또는 패킷 스위치가 소스 프로세서로부터 패킷들을 독 립적으로 수신하고 이를 목적지 프로세서로 전달할 수 있다. 도 2는 내부 버스를 사용하여 패키지 내 통신을 수행하는 분산 멀티프로세서 및 메모리 디바이스의 블록도 이다. 디바이스는 하나 내지 다수의 메모리 패키지들을 포함할 수 있으며, 메모리 패키지는 202로 라 벨링되고, 일부 메모리 패키지는 디바이스가 최대 N개의 패키지들을 사용할 수 있음을 나타내기 위해 N으 로 라벨링되며, 여기서 N은 1보다 큰 임의의 정수를 포함할 수 있다. 이 예의 목적을 위해, N개의 패키지들은 회로 기판과 같은 기판 또는 표면 상에 위치되고, 표면 상에 단일 디바이스를 형성할 수 있다. 그러나, 본 개시내용의 목적을 위해, 패키지들은 다른 수의 기판들 및 다른 배향들을 모두 포함할 수 있다. 예를 들어, 패키지들은 적층될 수 있거나, 또는 복수의 패키지들을 각각 유지하는 기판들이 모두 본 개시내용의 사상 및 범 위를 벗어나지 않으면서 수직으로 적층되거나 형성될 수 있다. 이 실시예에서, 메모리 패키지 1은 2개의 다이들(다이 0 및 다이 1)을 포함한다. 그러나, 본 개시내용의 목적들을 위해, 더 많은 수의 다이들이 패키지 내에 포함될 수 있다. 부가적으로, 상이한 다이 구성들(적층형, 3차원 등)이 패키지에 사용될 수 있다. 각각의 다이는 멀티프로세서를 포함한다. 이 예에서 멀티프로세 서가 다이 상에 국소화된 것으로 도시되어 있지만, 실제로, 멀티프로세서의 프로세서들 또는 그들의 코어들은 다이 상에서 임의의 적절한 방식으로 배향될 수 있다. 예를 들어, 프로세서들은 인접한 메모리 셀들 의 어레이들 사이에서 다이에 걸쳐 분산될 수 있다. 유사하게 메모리 코어는 하나의 물체로서 개략적으로 도시되어 있지만, 메모리 어레이들(페이지들, 블록들, 평면들 등)는 다이 전체에 분포되거나, 샌드위치형 다이(예컨대, CBA 구현)의 하나의 부분 상에 위치되 거나, 또는 본 개시내용의 범위를 벗어나지 않으면서 달리 다이 상에 배열될 수 있다. 따라서 메모리 코어는 다이의 주어진 영역 또는 서로 다른 영역들 내의 많은 수의 메모리 셀들을 지칭할 수 있다. 다이-0, 다이-1 및 다이-N이 개시되어 있지만, 이 맥락에서 숫자 N은 패키지와 동일할 필요는 없으며, 주로 임의의 수의 다이들이 패키지 내에, 그리고 전체적으로는 메모리 디바이스 상에 존재할 수 있음을 예시하기 위해 의도된 것이다. 여전히 도 2를 참조하면, I/O 인터페이스 회로가 각각의 다이 상에 도시되어 있다. I/O 인터페이스는 하 나 이상의 메모리 큐(266, 268)를 포함할 수 있으며, 이는 다이 상의 프로세서 또는 메모리 위치로 들어오거나 다른 다이 또는 패키지 상의 다른 위치로 나가는 캐싱되거나 래칭된 데이터를 전송하기 위한 버퍼 또는 레지스 터를 나타낼 수 있다. I/O 인터페이스는 다이 상의 회로부의 적절한 기능을 위해 필요한 다른 디지털 및 아날로그 회로들을 포함할 수 있다. 개시내용의 이 태양에서, 직접 다이-대-다이 데이터 전송들은 저장 제어기를 사용하지 않고 패키지 내의 임의의 다이 상의 소스 프로세서와 목적지 프로세서 사이에서 디바이스 내에서 내부적으로 개시되고 수행될 수 있 다. 부가적으로, 하나의 실시예에서, 메모리 디바이스는 제1 다이로부터 제2 다이로의 직접 통신이 가능한 개 별 메모리 패키지를 포함할 수 있으며, 이는 더 이상 저장 제어기를 통해 공급될 필요가 없다. 새로 운 아키텍처는 실질적으로 레이턴시들을 감소시키면서 멀티프로세서 데이터 교환들의 속도, 효율 및 대역폭을 크게 향상시킨다. 다시 도 2의 I/O 인터페이스를 참조하면, 아키텍처의 하나의 실시예는 예시의 편의를 위해 2개의 다이들 (다이 0 및 다이 1)을 포함하는 메모리 패키지 1을 참조하여 기술된다. 멀티프로세서의 프로세서들 중 하나는 멀티프로세서의 다른 프로세서를 목적지로 하는 데이터를 전송할 수 있다. 이러한 전송은 멀티 프로세서 내에서 수행될 수 있다. 부가적으로, 메모리 코어에 대한 로컬 메모리 액세스들은 데이터 버스를 사용하여 수행될 수 있다. 도시된 실시예에서, 패키지들 각각은 패키지 내의 I/O 인터페이스들 뿐만 아니라 데이터 버스에 커플링되는 인-패키지 버스를 포함한다. 일부 실시예들에서, 멀티 프로세서로부터의 데이터는 I/O 인터페이스의 큐를 통해 전송될 수 있고 그 후 버스를 통해, 기 록 동작을 스케줄링하기 위해 큐에서 수신될 수 있으며, 이는 동일한 패키지 내의 다른 다이에서 수 신될 수 있다.본 개시내용의 다른 태양에서, 다이-0 상의 멀티프로세서의 프로세서는 인 패키지 버스를 사용하여 다이-1 상의 프로세서로 그리고 그로부터 데이터를 전송할 수 있다. 따라서, 메모리 패키지 1 내의 다이 간 데이터 전송들은 패키지 내의 임의의 다이 상의 프로세서에 의해 개시될 수 있고, 다이-1 또는 다이-0의 멀 티프로세서들 내의 프로세서로 데이터를 라우팅하기 위해 인-패키지 버스를 사용하여 실행 및 수신될 수 있다. 데이터 전송이 더 이상 저장 제어기를 통해 라우팅될 필요가 없기 때문에 전송과 연관된 레이턴 시들이 극적으로 감소될 수 있다. 저장 제어기 및 SMP는 여전히 외부 판독 및 기록 동작들, 또는 멀 티프로세서 내의 프로세서들 중 하나의 프로세서에 의한 외부 데이터 전송들을 위해 사용될 수 있다. 부 가적으로, 이러한 배열에서의 채널간 데이터 전송들은 저장 제어기를 사용하여 수행될 수 있다. 본 개시내용의 다른 태양에서, I/O 인터페이스는 하나 이상의 선점 스케줄러 회로들을 포함할 수 있 다. 전술한 바와 같이, 종래의 멀티프로세서 시스템들 내의 프로세서들은 상이한 우선순위들로 데이터 전송들 을 개시하는 능력이 없다. 오히려, 이 절차는 저장 제어기에 의해서만 수행될 수 있다. 도시된 실시예들 에서, 멀티프로세서(또는 멀티프로세서 내의 임의의 프로세서)는 임의의 기존 활동보다 우선해야 하는 높 은 우선순위 데이터 전송을 가질 수 있다. 선점형 스케줄러는 다이-0의 프로세서로부터 (예컨대, 다이-1 상의 프로세서로 데이터를 전송하라는) 높은 우선순위 명령을 수신하는 하드웨어 로직 디바이스(또는 특수 프로 세싱 디바이스, DSP, FPGA 등)일 수 있다. 선점형 스케줄러는 예컨대 큐 내의 이용 가능한 레지스터 들에 데이터를 일시적으로 저장함으로써, 더 낮은 우선순위 전송들을 일시 중단할 수 있고, 높은 우선순위 데이 터를 즉시 전송할 수 있다. 이 예에서, 데이터는 대응하는 목적지 프로세서에 직접 경로를 통해 추가의 지연 없이 버스를 통해 전송될 수 있다. 그 후에, 선점형 스케줄러는 더 낮거나 정규의 우선순위 데 이터 전송들을 재개할 수 있다. 예컨대 프로세서들이 높은 우선순위 데이터 전송들을 개시되고/되거나 수신할 수 있도록, 부가의 선점형 스케줄러들이 멀티프로세서 및 메모리 코어의 수신 경로에 배치 될 수 있다. 다른 실시예들에서, 선점형 스케줄러 능력은 멀티프로세서에 포함될 수 있다. 다양한 실시 예들에서 선점형 스케줄러는 외부 데이터 전송들을 우선순위화하는 데에도 사용될 수 있다. 도 2의 실시예에서, 메모리 디바이스(또는 메모리 패키지 1)는 전술한 바와 같이 채널간 데이터 전송 들을 수행할 수 있다. 채널간 통신들은 상이한 패키지들 상의 디바이스들간의 통신들을 지칭한다. 예를 들어, 다이-1 상의 제1 프로세서는 채널간 통신 경로를 사용하여 다이-N 상의 제2 프로세서로 데이터를 전송할 수 있다. 본 개시내용의 목적을 위해, 통신 경로는 데이터 흐름의 방향을 예시하기 위해 점선으로 도시되 어 있다. 채널간 통신 경로와 연관된 데이터는 저장 제어기의 I/O 인터페이스(245a)에 인-패키지 버 스를 연결하는 버스를 통해 라우팅될 수 있다. 데이터는 스케줄러를 통해 라우팅될 수 있고 그 후에 저장 제어기 상의 크로스바 또는 패킷 스위치 모듈을 통해 라우팅될 수 있다. 저장 관리 프로 세서는 데이터 흐름을 제어하기 위해 I/O 인터페이스 및 크로스바에 커플링될 수 있다. 그 후 에, 채널간 데이터는, 버스를 사용하여 I/O 인터페이스(245b)를 통해 다이-N 상의 I/O 인터페이스로 전송될 수 있다. 다이-N 상의 I/O 인터페이스 회로는 다이-N 상의 목적지 프로세서로 데이터를 라우팅할 수 있다. 저장 데이터 판독 및 저장 데이터 기록 데이터 경로들에 의해 도시된 바와 같이, 다이-N 중 임의의 것 상의 메모리 코어들은 외부 메모리 판독들 및 호스트로부터의 기록들을 위해 사용될 수 있다. 특정 다 이의 메모리 코어에 기록되거나 그로부터 판독된 데이터는 버스(251 또는 252)와 같은 버스를 통해 전송될 수 있다. 도 3은 내부 인터페이스 회로를 사용하여 패키지 내 통신을 수행하는 분산 멀티프로세서 및 메모리 디바이 스의 블록도이다. 구현예에 따라, 메모리/프로세서 디바이스는 개별 메모리 패키지 1을 포함할 수 있다. 대안적으로, 디바이스는 기판, 또는 복수의 적층된 기판들, 또는 다른 적합한 구성 상에 배열된 N 개의 패키지들의 각각을 포함할 수 있다. 예를 들어, 도 3의 메모리 디바이스는 복수의 패키지들 1 내지 N(302, 304)을 하우징하는 단일 디바이스를 포함할 수 있다. 다른 실시예들에서, 메모리 디바이스는, 별 개의 기판 상에 배열되고 패키지 내에 하나 이상의 다이들을 포함하는 메모리 패키지를 포함할 수 있다. 따라서, 메모리 패키지들 1 내지 N(302, 304)이 단일의 통합 메모리 디바이스로서 구현될 수 있음을 입증하기 위해 표면이 도시되어 있지만, 패키지들은 본 개시내용의 범위를 벗어나지 않으면서 일부 다른 배향을 가 질 수 있다. 부가적으로, 개별 다이들은 CBA 다이들로서 적층 또는 형성되거나 또는 다른 구성과 함께 사용될 수 있다. 패키지들 및 다이들은 임의의 수의 요소들을 가질 수 있다. 도 3의 인터페이스 회로들(308a 내지 308n)은 도 2의 인-패키지 버스들 대신에 사용될 수 있다. 인터페이 스 회로들(308a 내지 308n)은 패키지 내의 다이들 사이의 고용량 데이터 라우팅을 수행하는 데 사용될 수 있고,또한 저장 제어기와의 채널간 통신들 또는 예컨대, 네트워크를 통한 외부 통신들을 중재하는 데 사용될 수 있다. 인터페이스 회로들(308a 내지 308n)은 프로세서들간에 직렬 또는 병렬 연결들을 형성하는 데 추가로 사 용될 수 있다. 일부 실시예들에서, 인터페이스 회로들(308a 내지 308n)은 그렇지 않으면 별개의 회로 요소를 필요로 할 다른 인터페이스 로직을 수행하는 데 사용될 수 있다. 도 2의 디바이스와 마찬가지로, 메모리 디바이스 및 디바이스 상의 메모리 패키지들은 예를 들 어 저장 제어기의 필요 또는 개입 없이 다이간 데이터 전송들을 수행할 수 있다. 도 2와 유사하게, 디바 이스는 N개의 패키지들(302, 304) 내의 N개의 다이들 각각에 대한 I/O 인터페이스(350a, 350b, 350n)를 포함할 수 있다. 다이들의 수는 패키지들의 수와 상이할 수 있고, 다양한 실시예들에서 하나의 패키지는 다수 의 다이들을 포함할 수 있다. 각각의 I/O 인터페이스는 큐(366, 368)를 포함할 수 있으며, 이는 차례로 데이터 전송들을 용이하게 하기 위한 필요한 레지스터들 또는 버퍼들을 포함할 수 있다. 멀티프로세서(314a)는 여러 상이한 실시예들 중 임의의 실시예에서 메모리 코어에 커플링될 수 있으며, 각각의 요소는 다이 내의 데이터 전 송 동작들 및 메모리 회수 절차들을 용이하게 하기 위해 도체와 같은 도체들에 커플링된다. 부가적으로, 다양한 실시예들에서, 다이들 각각은 선점형 스케줄러들을 포함할 수 있다. 전술한 바와 같 이, 선점형 스케줄러들은 멀티프로세서(314a, 314b, 314n) 내의 프로세서들이 높은 우선순위 데이터 전송들을 개시하고 수행할 수 있게 하는 하드웨어를 포함할 수 있다. 예컨대 다이 0으로부터 다이 1로의 패키지 내 데이 터 전송들은 저장 제어기의 관여에 대한 필요 없이 우선순위화되고 수행될 수 있다. 대신에, 높은 우선순위 데 이터 패킷들은 데이터 경로를 통하고(예컨대, 도체들/버스들(362, 363)을 통하고), I/O 인터페이스(350a), 인터페이스 회로(308a), 및 I/O 인터페이스(350b)를 통해 그리고 예를 들어 다이-1 상의 목적지 프로세서로 라 우팅될 수 있다. 데이터 경로는 멀티프로세서(314a)의 제1 프로세서로부터 별개의 다이-1 상의 제2 프로세서(314b)로 데이 터를 라우팅하기 위한 인터페이스 회로(308a)로의 도체들의 흐름을 나타낸다. 다른 실시예들에서, 멀티프로세 서(314a) 내의 프로세서들 중 임의의 프로세서는 내부 데이터 경로들(329, 362) 중 하나 이상을 사용하여 메모 리 코어(337a) 내의 메모리로 그리고 그로부터 판독 및 기록 동작들을 수행할 수 있다. 멀티프로세서 내 의 프로세서는 또한 인터페이스 회로(308a)를 통해 메모리 코어(337b)로 그리고 그로부터 판독 및 기록 동작들 을 수행할 수 있다. 부가적으로, 다른 다이들(예컨대, 다이-0 및 다이-N)은 채널간 통신 경로를 사용하여 프로세서들 또는 메모리로 그리고 그로부터 데이터를 전송할 수 있으며, 이는 전술한 바와 같이 I/O 인터페이스 , 스케줄러 및 레지스터들을 사용하여 저장 제어기를 통해 데이터를 라우팅한다. 예를 들 어, 저장 관리 프로세서의 제어 하에서, 데이터는 크로스바/패킷 스위치 모듈을 통해 그의 목적지 채 널로 라우팅될 수 있다. 부가적으로, 호스트 판독 동작들 및 기록 동작들은 예를 들어 버스를 사용하여 저장 제어기에 의해 수행될 수 있다. 외부 데이터 전송들도 수행될 수 있다. 도 4는 내부 인터페이스 회로(416a)를 사용하여 패키지 내 및 채널간 통신 둘 모두를 수행할 수 있는 분산 멀티 프로세서 및 메모리 디바이스의 블록도이다. 메모리 디바이스는 특정 측면들에서 도 2 및 도 3 의 디바이스들과 유사하다. 예를 들어, 회로는 복수의 메모리 패키지들 1 내지 N을 포함하며, 2개의 이러 한 예시적인 패키지들(402, 404)이 도면에 도시되어 있다. 개별 다이들의 예들이 또한 도시되어 있으며(다이들 0, 1 및 N), 다이들의 수는 패키지들의 수와 상이할 수 있음에 유의한다. 이전 실시예들에서와 같이, 예를 들 어, 단일 패키지는 하나 내지 다수의 다이들을 포함할 수 있다. 도시된 바와 같이, 이러한 각각의 다이는 (다 이들 상에 물리적으로 분산되거나 국한되었다 하더라도) 그의 자체 프로세서 회로부, 그의 자체 메모리 및 I/O 인터페이스 회로들을 포함한다. 또한, 이전 실시예들에서와 같이, 각각의 다이는 복수의 도체들을 사용하여 패키지 내에서 각각의 다른 다이에 커플링된다. 각각의 다이는 프로세서들이 상이한 우선순위 레벨들을 사용하여 데이터를 전송할 수 있게 하는 선점형 스케줄러들을 포함한다. 도 3에서와 같이, 도 4의 구성은 고용량 통신들을 능동적으로 라우팅하기 위한 복수의 인터페이스 집적 회로(IC) 디바이스들을 포함한다. 예를 들어, 패키지 내의 다이-0 상의 임 의의 프로세서는 저장 제어기를 사용하지 않고 인터페이스 IC를 사용하여 동일한 패키지 내의 다른 다이-1 상의 임의의 프로세서로 그리고 그로부터 내부적으로 데이터를 라우팅할 수 있다. 부가적으로, 이전 실 시예들에서와 마찬가지로, 저장 제어기는 그의 저장 관리 프로세서에 의해 보조되는 외부 판독 및 기 록 동작들을 수행할 수 있다. 예들은 디바이스 내의 메모리, 및 저장 제어기와 디바이스 사이 의 이용 가능한 데이터 버스(451, 452)를 사용하는 데이터 판독을 포함한다. 데이터 기록이 유사하 게 수행될 수 있다.본 개시내용의 또 다른 태양에서, 인터페이스 IC들(416a 내지 416n)의 각각(2개의 그러한 IC들(416a, 416n)이 예시적인 목적들로 도시됨)은 버스를 사용하여 \"데이지 체인(daisy chain)\" 방식으로 직렬로 함께 커플링 된다. 이러한 버스들의 수는 하나의 실시예에서 패키지들의 수에 의존하며, 총 N-1개의 버스들이 N개의 패키지들을 연결하는 데 사용된다. 예를 들어, 16개의 패키지들이 디바이스 상에 있는 경우, N-1=15개 버스들 이 이들을 직렬로 연결하는 데 사용될 수 있다. 이러한 \"채널간\"또는 \"패키지간\"버스 연결들은 복수의 메모리/ 프로세서 디바이스들을 연결하는 데 사용될 수 있으며, 각각의 디바이스는 하나 이상의 패키지들을 가질 수 있 다. I/O 인터페이스들(450a 내지 450n) 또는 인터페이스 IC들(416a 내지 416a) 내의 제어 로직은 프로세서들이 임의의 다른 패키지 상의 임의의 다이 사이에서 데이터를 전송하는 것을 보조하기 위해 사용될 수 있다. 저장 제어기는 내부 채널간 통신들을 수행하는 데 필요하지 않으며, 이는 디바이스의 임의의 다이 상의 임 의의 프로세서가 인터페이스 IC들(416a) 등을 통해 디바이스 내의 임의의 다른 패키지의 임의의 다른 다이 상의 임의의 프로세서 또는 메모리와 통신할 수 있음을 의미한다. 따라서 채널간 통신들이 고용량으로 수행되어, 저 장 제어기로 인한 레이턴시들, 경로 지연들 및 기타 단점들을 효과적으로 제거할 수 있다. 대역폭은 고성능 애 플리케이션들에서 사용하기 위해 증가될 수 있다. 데이터 패킷들이 라우팅되는 각각의 인터페이스 IC의 타이밍이 고려되어야 하지만, 레이턴시들은 인터페이스 IC들의 경로 지연들을 가능한 한 작게 만들어 스마 트 아키텍처를 사용하여 최소화될 수 있다. 여전히 도 4를 참조하면, 저장 제어기는 여전히 디바이스 내의 메모리 위치들에 대한 외부 판독 및 기록 동작들뿐만 아니라 멀티프로세서로 또는 그로부터 외부 데이터 전송들을 수행할 수 있다. 예를 들어, 데 이터 판독 동작 또는 데이터 기록 동작은 버스를 사용하여 수행될 수 있다. 디바이스의 위치에 있는 프로세서들은 또한 저장 제어기와 통신하거나 버스들(451 및 452)을 통해 저장 제어기에 데이터를 전송할 수 있다. 또한 선점적 데이터 전송들이 상이한 패키지들간에 스케줄링되어 디바이스 내부에서 높 은 우선순위 통신들의 채널간 통신을 가능하게 할 수 있다는 점에 유의해야 한다. 도 5는 분산 메모리 및 프로세서 아키텍처의 블록도이다. 도 5는 도 4의 회로의 다른 예를 도시한다. 2 개의 패키지들(514, 516)을 사용하는 디바이스가 본 예에서 설명되지만, 임의의 수의 패키지들이 사용될 수 있다. 제어기는 저장 제어기, 또는 디바이스와 인터페이스하는 데 사용될 수 있는 다른 유형의 제어기일 수 있다. 채널간 통신들을 수행하고 제어기와 통신하기 위해, 인터페이스 IC들(504a, 504b)은 IO1, IO2 및 IO3을 포함하는 3개의 동작 I/O 포트들을 포함하지만, 패키지 당 다수의 포트들이 또한 사용될 수 있다. 패키지들(514, 516) 각각은 4개의 별개의 다이들을 포함한다. 4개의 다이들은 각자의 복수의 도체들 (577a, 577b)을 사용하여 서로 연결되고 인터페이스 IC들(504a, 504b)에 연결된다. 각각의 개별 다이는 멀티프로세서 및 메모리 코어를 포함할 수 있다. 앞에서와 같이, 멀티프로세서의 프로세서들은 다이 의 영역에 국소화될 수 있다. 다른 실시예들에서, 멀티프로세서는 다이 전체에 분산된 프로세서를 포함할 수 있다. CBA가 사용되는 일부 실시예들에서, 프로세서들은 적층된 다이들 중 하나의 다이 상에 포함될 수 있고, 메모리는 다른 다이 상에 포함될 수 있다. 메모리 코어는 NAND 또는 NOR 플래시 메모리와 같은 비휘발성 메모리, 또는 다른 기술을 포함할 수 있다. 메모리 코어는 또한 캐시 메모리 및 휘발성 메모리, 또는 이 들의 조합을 포함할 수 있다. 메모리 코어 및/또는 프로세서들은 각각 멀티 캐시 레벨들을 사용할 수 있 다. 프로세서들과 마찬가지로, 메모리 코어 내의 메모리는 다이에 걸쳐 임의의 적절한 방식으로 분산될 수 있다. 각각의 다이는 또한 I/O 인터페이스 모듈(545a, 545b)을 포함할 수 있다. I/O 인터페이스들은 멀티 우선 순위 데이터 송신들을 수행하기 위한 하나 이상의 선점형 스케줄러들을 포함할 수 있다. 다른 실시예들에서, 선점형 스케줄러들은 대신 인터페이스 IC들(504a, 504b) 내에 위치될 수 있다. 일 실시예에서, 인터페이스 IC 들(504a, 504b)은 다이간 및 채널간(패키지간) 통신들 둘 모두에 대해 고속으로 고용량 통신들을 가능하게 하도 록 설계된다. 제어기는 CHO로 라벨링된 하나 이상의 I/O 경로들 또는 버스들을 사용하여 디바이스와 통신할 수 있 다. 제어기는 패키지들(514, 516), 또는 패키지들 내에 위치된 임의의 다이로 그리고 그로부터 외부 기록 및 판독 동작들을 실행할 수 있다. 도 6은 전용 집적 회로 대신 내부 I/O 인터페이스를 사용하여 패키지 내 및 채널간 통신을 수행하는 분산 멀티 프로세서 및 메모리 디바이스의 블록도이다. 이 예에서, 메모리 패키지들 1 내지 N은, 예컨대, 패키지들 이 배열될 수 있는 인쇄 회로 기판을 사용하거나 또는 다른 적합한 기술들을 사용하여 단일 디바이스의 일부로서 구현될 수 있다. 도 6은 도 4 및 도 5에 도시된 회로들과 유사하고, 패키지들(602, 604) 내에 포함된 하나 이상의 다이들 0, 1, … N을 포함하며, 패키지들의 수는 다양할 수 있다. 이전 예들에서와 같이, 각각의 다이 는 프로세서들 메모리, I/O 인터페이스, 및 멀티 우선순위 통신들을 수행하기 위한 복수의 선점형 스케줄 링 회로들을 포함할 수 있다. 이 실시예에서, 채널간 및 인-패키지 통신들 둘 모두는 저장 제어기 개입 없이 수행될 수 있다. 그러나, 도 4 에서와 같은 인터페이스 IC들을 사용하는 대신에. 메모리 디바이스는 650a, 650b, … 650n으로 라벨링된 I/O 인터페이스의 일부분을 포함한다. 인터페이스 부분들의 각각은 다이와 패키지들 사이의 도체들 또는 버스 들(610, 689)과 함께, 프로세서들이 인-패키지 및 채널간 통신들 둘 모두를 수행할 수 있게 한다. 보다 구체적 으로, 도 6의 실시예에서, I/O 인터페이스들(650a, 650b, … 650n) 부분들은 하나의 다이로부터의 하나의 프로 세서가 동일한 다이, 상이한 다이, 또는 상이한 패키지 상의 다른 프로세서들 중 임의의 프로세서와 데이터를 교환할 수 있게 한다. 도시된 실시예에서, I/O 섹션들(650a, 650b, … 650n) 각각은 데이터가 버스들을 가로질 러 각각의 인접한 패키지에 대해 또는 패키지 내의 다이로 또는 그로부터 이동할 수 있게 하는 2개의 양방향 포 트들을 포함할 수 있다. 일부 실시예들에서, 인접한 세트의 말단에 있는 메모리 패키지들은, 단지 하나의 다운 스트림 인접 패키지만 있기 때문에 단지 하나의 그러한 포트만을 필요로 할 수 있다. 다른 실시예들에서, 다수 의 포트들이 사용될 수 있다. I/O 섹션들(650, 650b, … 650n)은 데이터 패킷들이 패키지들 중 임의의 패키지 내의 임의의 다이로부터 기원할 수 있게 하기 위해 데이지 체인 또는 직렬 방식으로 연결된 도체들을 포함할 수 있다. 이러한 구성의 이점들 중 하나는 이 실시예에서 인터페이스 IC가 사용되지 않기 때문에, 활성 회로들을 통해 데이터를 통과시키는 것의 레이턴시들뿐만 아니라 개입되는 제어 로직의 양이 감소될 수 있다는 것이다. 따라서, 통신들은 복수의 패키지들 내에서 모두 내부적으로 더 낮은 레이턴시들로 고속으로 전후로 전송될 수 있다. 도 7은 도 6의 회로의 일부분의 예시적인 구성의 블록도이다. 이 예에서, 2개의 패키지들(712, 714) 각각 은 4개의 별개의 다이들에 의해 점유된다. 이 실시예에서, 각각의 다이는 별개의 I/O 인터페이스를 갖는다. 패키지는 I/O 인터페이스들(750a, 750b, 750c, 750d)을 포함한다. 패키지는 750e, 750f, 750g 및 750h를 포함한다. 이러한 실시예들의 세트의 이점들 중 하나는 IBC 기능이 메모리 다이 상의 CMOS로 병합될 수 있다는 것이다. 데이터는 또한 패키지 내 및 채널간 통신들 둘 모두에 대해 저장 제어기를 통 과하지 않고 전송될 수 있으며, 점 대 점 전송들은 IBC 없이 발생할 수 있다. 도 7에 도시된 바와 같이, 연속 적인 데이터 전송들을 지원하기 위해 각각의 다이 상에서 I/O 모듈들의 적어도 2개의 포트들 또는 세트들이 이 용 가능할 수 있다. 각각 패키지(712, 714) 당 4개의 다이들이 도시되어 있지만, 부가의 패키지들이 디바 이스에 인접하게 접합되거나 배열될 수 있고 아키텍처의 일부로서 포함될 수 있다. 메모리 디바이스는 멀티프로세서 유닛들 또는 메모리 코어 다이들에 인접하거나 그에 접합된 분산 프로세 서들에 걸쳐 완전 메시형 실시간 저 레이턴시 상호 연결들을 지원하는 새로운 프로세서간 통신 아키텍처를 제공 하며, 이는 고도로 정교한 계산 저장 아키텍처로 이상적일 수 있다. 도 8은 패키지 내 및 채널간 통신을 설명하는 흐름도이다. 예시적인 단계에서, 프로세서는 인-패키지 통 신 도체들 또는 다른 I/O 회로들을 사용하여 제1 다이 상의 그의 위치로부터 제2 다이 상의 다른 프로세서 또는 메모리 위치로 데이터 전송을 수행할 수 있다. 이러한 디바이스 내부 통신들에 더하여, 예시적인 단계에 서 메모리 디바이스는 또한 외부 저장 제어기로부터 제1 다이 상의 메모리에서 외부 데이터 기록 요청들을 수신 할 수 있다. 부가적으로, 외부 저장 제어기는 또한 메모리 디바이스를 사용하여 메모리 판독 동작들을 수행할 수 있다. 예시적인 단계에서, 메모리 패키지 내의 제1 다이 상의 프로세서는 데이지 체인형 채널간 버스를 사용하여 상이한 패키지의 상이한 다이 상의 프로세서로부터 둘 모두 제1 다이의 내부 및 외부인 도체들 또는 버스들(또 는 다른 I/O 회로들)을 통해 데이터를 수신할 수 있다. 선점적 통신 또는 더 높은 우선순위 통신이 수신되지 않은 경우, 프로세서는 지연 없이 현재 데이터 전송을 수신하도록 진행할 수 있다. 그러나 프로세서가 선점 명 령을 수신하는 경우, 예시적인 긴급의 높은 우선순위 데이터 전송이 즉시 발생하도록 버스에 공간을 확보하기 위해 데이터 전송을 즉시 일시 중단할 수 있다. 대안적으로, 다른 프로세서가 현재 버스를 사용하여 일반 데이 터 전송 또는 낮은 우선순위 데이터 전송을 수행하는 경우, 제1 프로세서는, 높은 우선순위 통신을 목적지 프로 세서 또는 메모리 위치로 전송할 수 있도록 선점 스케줄러를 사용하여 진행 중인 데이터 전송을 일시 중단할 수 있다. 따라서, 예시적인 단계에서와 같이, 선점된 디바이스에서 수신된 데이터는 즉시 선점된 데이터로 대체될 수 있다. 일부 실시예들에서, 2개의 우선순위 레벨들이면 충분할 수 있다. 그러나, 다른 실시예들에서, 메모리 디바이스는 다수의 우선순위 레벨들을 갖는 선점 스케줄러들을 사용하여 버스가 가장 필요한 목적들을 위해 먼저 사용되는 것을 보장할 수 있으며, 그 후에 모든 낮은 우선순위 데이터에 대한 전송들 이 재개될 수 있다. 선점형 스케줄러들 및 I/O 컴포넌트들과 같은 회로들은 종래의 로직, DSP들, FPGA들 등을 포함하는 임의의 적합 한 하드웨어 아키텍처를 사용하여 구현될 수 있다. 대안적으로, 또는 부가적으로, 다이들 상의 선점형 스케줄 러들 및 다른 기능들은 전용 또는 범용 프로세서 실행 코드를 사용하여 구현될 수 있다. 본 개시내용의 다양한 태양들은 당업자가 본 발명을 실시할 수 있게 하기 위해 제공된다. 본 개시내용 전반에 걸쳐서 제시된 예시적인 실시예들에 대한 다양한 수정들은 당업자에게 용이하게 명백할 것이며, 본 명세서에 개 시된 개념들은 다른 자기 저장 디바이스들로 확장될 수 있다. 따라서, 청구범위는 본 개시내용의 다양한 태양 들로 제한되는 것으로 의도되지 않으며, 청구항의 언어와 일치하는 전체 범주에 부합되어야 한다. 당업자에게 알려져 있거나 나중에 알려지게 될 본 개시내용 전반에 걸쳐 기술된 예시적인 실시예들의 다양한 컴포넌트들에 대한 모든 구조적 및 기능적 등가물들은 명백히 본 명세서에 참고로 포함되며, 청구범위에 의해 포함되도록 의 도된다. 더욱이, 본 명세서에 개시된 어떠한 것도, 그러한 개시내용이 청구항에서 명시적으로 인용되는지 여부 에 관계없이 공중에게 전용되는 것으로 의도되지 않는다. 청구항 구성요소도, 그 구성요소가 문구 \"~하기 위한 수단\"을 사용하여 명시적으로 인용되지 않는 한, 또는, 방법 청구항의 경우, 그 구성요소가 문구 \"~하기 위한 단계\"를 사용하여 인용되지 않는 한, 미국 35 U.S.C. §112(f)의 규정 또는 다른 사법권 내에서 유사한 법령 또 는 법규 하에서 해석되어서는 안 된다."}
{"patent_id": "10-2022-0023493", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이제, 본 발명의 다양한 태양들이, 첨부 도면을 참조하여, 제한으로서가 아니라 예로서 상세한 설명에서 제시될 것이다. 도 1은 저장 제어기에 의해 함께 연결된 메모리 패키지들을 포함하는 멀티프로세서 회로의 블록도이다. 도 2는 내부 버스를 사용하여 패키지 내 통신을 수행하는 분산 멀티프로세서 및 메모리 디바이스의 블록도이다. 도 3은 내부 인터페이스 회로를 사용하여 패키지 내 통신을 수행하는 분산 멀티프로세서 및 메모리 디바이스의 블록도이다. 도 4는 내부 인터페이스 회로를 사용하여 패키지 내 및 채널간 통신을 수행하는 분산 멀티프로세서 및 메모리 디바이스의 블록도이다. 도 5는 분산 메모리 및 프로세서 아키텍처의 블록도이다. 도 6은 내부 I/O 인터페이스를 사용하여 패키지 내 및 채널간 통신을 수행하는 분산 멀티프로세서 및 메모리 디 바이스의 블록도이다. 도 7은 도 6의 회로의 예시적인 부분의 블록도이다. 도 8은 패키지 내 및 채널간 통신을 설명하는 흐름도이다."}
