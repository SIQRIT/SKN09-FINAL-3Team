{"patent_id": "10-2021-0063204", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0155679", "출원번호": "10-2021-0063204", "발명의 명칭": "제어 방법 및 그 방법을 이용하는 장치", "출원인": "삼성전자주식회사", "발명자": "강승호"}}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력을 수신하는 입력 모듈; 및상기 복수의 렌더링 영상들을 복수의 버퍼들에 저장하고, 상기 복수의 버퍼들 중 마지막 버퍼로부터 상기 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상을 로드하고, 상기 가장 최근의 렌더링 영상에 기초하여 상기 사용자 입력에 대응하는 디스플레이 영상을 구성하는 프로세서를 포함하는, 전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 복수의 렌더링 영상들 중 상기 가장 최근의 렌더링 영상 이외의 나머지 적어도 하나의 렌더링 영상은 버려지는전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 디스플레이 영상은 상기 단일 동기화 주기의 단일 렌더링 영상에 기초하는 다른 디스플레이 영상들에 비해큰 변동성을 갖는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는상기 사용자 입력에 기초하여 상기 복수의 렌더링 영상들을 생성하고,상기 복수의 렌더링 영상들을 상기 복수의 버퍼들에 순차적으로 저장하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는SurfaceFlinger의 비동기 모드를 활성화하여 상기 복수의 렌더링 영상들 중 상기 가장 최근의 렌더링 영상을 선택적으로 로드하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 프로세서는상기 사용자 입력이 종료된 후 상기 비동기 모드를 비활성화하는,공개특허 10-2022-0155679-3-전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 단일 동기화 주기는안드로이드 운영 체제의 VSYNC 하나에 대응하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 사용자 입력은드로잉 입력, 어플리케이션 실행 입력, 및 스크롤 입력 중 적어도 하나를 포함하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "사용자 입력에 기초하여 하나의 VSYNC 내 복수의 렌더링 영상들이 생성되면, 상기 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상에 기초하여 디스플레이 영상을 구성하는 프로세서; 및상기 디스플레이 영상을 디스플레이하는 디스플레이 모듈을 포함하는, 전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 프로세서는SurfaceFlinger의 비동기 모드를 활성화하여 상기 복수의 렌더링 영상들 중 상기 가장 최근의 렌더링 영상을 선택적으로 이용하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 프로세서는상기 사용자 입력이 종료된 후 상기 비동기 모드를 비활성화하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 사용자 입력은드로잉 입력, 어플리케이션 실행 입력, 및 스크롤 입력 중 적어도 하나를 포함하는,전자 장치."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력을 수신하는 단계; 및상기 복수의 렌더링 영상들 중 일부에 기초하여 상기 사용자 입력에 대응하는 디스플레이 영상을 구성하는 단계공개특허 10-2022-0155679-4-를 포함하는, 제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 복수의 렌더링 영상들 중 상기 일부는상기 복수의 렌더링 영상들 중 가장 늦게 생성된 렌더링 영상에 해당하는,제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,상기 디스플레이 영상은 상기 단일 동기화 주기의 단일 렌더링 영상들에 기초하는 다른 디스플레이 영상들에 비해 큰 변동성을 갖는,제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제13항에 있어서,상기 사용자 입력에 기초하여 상기 복수의 렌더링 영상들을 생성하는 단계;상기 복수의 렌더링 영상들을 복수의 버퍼들에 순차적으로 저장하는 단계; 및상기 복수의 버퍼들 중 마지막 버퍼로부터 상기 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상을 로드하는단계를 더 포함하고,상기 디스플레이 영상은 상기 가장 최근의 렌더링 영상에 기초하여 구성되는,제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 가장 최근의 렌더링 영상을 로드하는 단계는SurfaceFlinger의 비동기 모드를 활성화하여 상기 복수의 렌더링 영상들 중 상기 가장 최근의 렌더링 영상을 선택적으로 로드하는 단계를 포함하는,제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 사용자 입력이 종료된 후 상기 비동기 모드를 비활성화하는 단계를 더 포함하는, 제어 방법."}
{"patent_id": "10-2021-0063204", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제13항에 있어서,상기 단일 동기화 주기는안드로이드 운영 체제의 VSYNC 하나에 대응하는,제어 방법.공개특허 10-2022-0155679-5-청구항 20 제13항 내지 제19항 중 어느 한 항의 방법을 수행하는 명령어들을 포함하는 하나 이상의 프로그램을 저장한 컴퓨터 판독 가능 저장매체."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "제어 방법 및 그 방법을 이용하는 장치가 개시된다. 일 실시예에 따르면, 전자 장치는 단일 동기화 주기 내 복 수의 렌더링 영상들을 발생시키는 사용자 입력을 수신하는 입력 모듈, 및 복수의 렌더링 영상들을 복수의 버퍼들 에 저장하고, 복수의 버퍼들 중 마지막 버퍼로부터 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상을 로드하 고, 가장 최근의 렌더링 영상에 기초하여 사용자 입력에 대응하는 디스플레이 영상을 구성하는 프로세서를 포함 할 수 있다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 개시는 단말 제어 방법 및 그 방법을 수행하는 장치에 관한 것이다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "안드로이드 운영 체제는 VSYNC라는 동기화 주기를 사용하고 있다. VSYNC 신호는 디스플레이에 영상을 표시하는 디스플레이 파이프라인을 동기화할 수 있다. 디스플레이 파이프라인은 어플리케이션 렌더링, SurfaceFlinger에 서 Hardware Composer(HWC), 그리고 디스플레이 모듈에 이미지를 출력하는 일련의 과정을 포함하고 있다. 이러 한 VSYNC 동기화는 끊김 및 화면 떨림 현상을 억제하고 그래픽의 부드러운 화면을 시각적으로 향상시킬 수 있다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 실시예들은 디스플레이 파이프라인에 따라 유발될 수 있는 지연(delay)을 감소시키는 동작들을 포함할 수 있다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예들에 따르면, 전자 장치는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력 을 수신하는 입력 모듈; 및 상기 복수의 렌더링 영상들을 복수의 버퍼들에 저장하고, 상기 복수의 버퍼들 중 마 지막 버퍼로부터 상기 복수의 렌더링 영상들 중 마지막 렌더링 영상을 로드하고, 상기 마지막 렌더링 영상에 기 초하여 사용자 입력에 대응하는 디스플레이 영상을 구성하는 프로세서를 포함할 수 있다. 다양한 실시예들에 따르면, 사용자 입력에 기초하여 하나의 VSYNC 내 복수의 렌더링 영상들이 생성되면, 복수의 렌더링 영상들 중 마지막 렌더링 영상에 기초하여 디스플레이 영상을 구성하는 프로세서; 및 디스플레이 영상을 디스플레이하는 디스플레이 모듈을 포함할 수 있다. 다양한 실시예들에 따르면, 제어 방법은 단위 시간 내 복수의 렌더링 영상들을 발생시키는 사용자 입력을 수신 하는 단계; 및 복수의 렌더링 영상들 중 일부에 기초하여 사용자 입력에 대응하는 디스플레이 영상을 구성하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예들에 따르면 디스플레이 파이프라인에 따라 유발될 수 있는 지연이 감소될 수 있다."}
{"patent_id": "10-2021-0063204", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환 경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치 와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자 , 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시 예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전 자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘 은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습 (semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망 (DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포 함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 다양한 실시예들에 따르면, 입력 모듈은 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력을 수신할 수 있고, 프로세서는 복수의 렌더링 영상들을 복수의 버퍼들에 저장하고, 복수의 버퍼들 중 마지막 버퍼로부터 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상을 로드하고, 가장 최근의 렌더링 영상에 기초하여 사용자 입력에 대응하는 디스플레이 영상을 구성할 수 있다. 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상 이외의 나머지 적어도 하나의 렌더링 영상은 버려질 수 있다. 디스플레이 영상은 단일 동기화 주 기의 단일 렌더링 영상에 기초하는 다른 디스플레이 영상들에 비해 큰 변동성을 가질 수 있다. 프로세서는 사용자 입력에 기초하여 복수의 렌더링 영상들을 생성하고, 복수의 렌더링 영상들을 복수의 버 퍼들에 순차적으로 저장할 수 있다. 프로세서는 SurfaceFlinger의 비동기 모드를 활성화하여 복수의 렌더 링 영상들 중 마지막 렌더링 영상을 선택적으로 로드할 수 있다. 프로세서는 사용자 입력이 종료된 후 비 동기 모드를 비활성화할 수 있다. 단일 동기화 주기는 안드로이드 운영 체제의 VSYNC 하나에 대응할 수 있다. 사용자 입력은 드로잉 입력, 어플리케이션 실행 입력, 및 스크롤 입력 중 적어도 하나를 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도 로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피 커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 다양한 실시예들에 따르면, 사용자 입력에 기초하여 하나의 VSYNC 내 복수의 렌더링 영상들이 생성되면, 프로세 서는 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상에 기초하여 디스플레이 영상을 구성할 수 있다. 디스플레이 모듈은 디스플레이 영상을 디스플레이할 수 있다. 프로세서는 SurfaceFlinger의 비동기 모드를 활성화하여 복수의 렌더링 영상들 중 가장 최근의 렌더링 영상을 선택적으로 이용할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다.인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복 수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예들에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치(10 1)와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전 부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있 다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또 는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일 부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네 트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비 스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 다양한 실시예들에 따른 프로그램을 예시하는 블록도이다. 도 2은 다양한 실시예들에 따른 프로그램 을 예시하는 블록도이다. 일실시예에 따르면, 프로그램은 전자 장치의 하나 이상의 리소 스들을 제어하기 위한 운영 체제, 미들웨어, 또는 상기 운영 체제에서 실행 가능한 어플리케이 션을 포함할 수 있다. 운영 체제는, 예를 들면, AndroidTM, iOSTM, WindowsTM, SymbianTM, TizenTM, 또 는 BadaTM를 포함할 수 있다. 프로그램 중 적어도 일부 프로그램은, 예를 들면, 제조 시에 전자 장치(10 1)에 프리로드되거나, 또는 사용자에 의해 사용 시 외부 전자 장치(예: 전자 장치(102 또는 104), 또는 서버 )로부터 다운로드되거나 갱신 될 수 있다. 운영 체제는 전자 장치의 하나 이상의 시스템 리소스들(예: 프로세스, 메모리, 또는 전원)의 관리(예: 할당 또는 회수)를 제어할 수 있다. 운영 체제는, 추가적으로 또는 대체적으로, 전자 장치(10 1)의 다른 하드웨어 디바이스, 예를 들면, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디 오 모듈, 센서 모듈, 인터페이스, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 구동하기 위한 하나 이상의 드 라이버 프로그램들을 포함할 수 있다. 미들웨어는 전자 장치의 하나 이상의 리소스들로부터 제공되는 기능 또는 정보가 어플리케이션 에 의해 사용될 수 있도록 다양한 기능들을 어플리케이션으로 제공할 수 있다. 미들웨어는, 예를 들 면, 어플리케이션 매니저, 윈도우 매니저, 멀티미디어 매니저, 리소스 매니저, 파워 매니 저, 데이터베이스 매니저, 패키지 매니저, 커넥티비티 매니저, 노티피케이션 매니저, 로케이션 매니저, 그래픽 매니저, 시큐리티 매니저, 통화 매니저, 또는 음성 인식 매니저를 포함할 수 있다. 어플리케이션 매니저는, 예를 들면, 어플리케이션의 생명 주기를 관리할 수 있다. 윈도우 매니저 는, 예를 들면, 화면에서 사용되는 하나 이상의 GUI 자원들을 관리할 수 있다. 멀티미디어 매니저는, 예를 들면, 미디어 파일들의 재생에 필요한 하나 이상의 포맷들을 파악하고, 그 중 선택된 해당 하는 포맷에 맞는 코덱을 이용하여 상기 미디어 파일들 중 해당하는 미디어 파일의 인코딩 또는 디코딩을 수행 할 수 있다. 리소스 매니저는, 예를 들면, 어플리케이션의 소스 코드 또는 메모리의 메모리의 공간을 관리할 수 있다. 파워 매니저는, 예를 들면, 배터리의 용량, 온도 또는 전원을 관리하고, 이 중 해당 정보를 이용하여 전자 장치의 동작에 필요한 관련 정보를 결정 또는 제공할 수 있다. 일실시예에 따르면, 파워 매니저는 전자 장치의 바이오스(BIOS: basic input/output system)(미도시)와 연동할 수 있다. 데이터베이스 매니저는, 예를 들면, 어플리케이션에 의해 사용될 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저는, 예를 들면, 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 갱신을 관리할 수 있다. 커넥티비티 매니저는, 예를 들면, 전자 장치와 외부 전자 장치 간의 무선 연결 또는 직접 연결을 관리할 수 있다. 노티피케이션 매니저는, 예를 들면, 지정된 이벤트(예: 착신 통 화, 메시지, 또는 알람)의 발생을 사용자에게 알리기 위한 기능을 제공할 수 있다. 로케이션 매니저는, 예를 들면, 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저는, 예를 들면, 사용자에게 제 공될 하나 이상의 그래픽 효과들 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 시큐리티 매니저는, 예를 들면, 시스템 보안 또는 사용자 인증을 제공할 수 있다. 통화(telephony) 매니 저는, 예를 들면, 전자 장치에 의해 제공되는 음성 통화 기능 또는 영상 통화 기능을 관리할 수 있다. 음성 인식 매니저는, 예를 들면, 사용자의 음성 데이터를 서버로 전송하고, 그 음성 데이터에 적어도 일부 기반하여 전자 장치에서 수행될 기능에 대응하는 명령어(command), 또는 그 음성 데이터에 적 어도 일부 기반하여 변환된 문자 데이터를 서버로부터 수신할 수 있다. 일 실시예에 따르면, 미들웨어 는 동적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. 일 실시예에 따르 면, 미들웨어의 적어도 일부는 운영 체제의 일부로 포함되거나, 또는 운영 체제와는 다른 별도 의 소프트웨어로 구현될 수 있다. 어플리케이션은, 예를 들면, 홈, 다이얼러, SMS/MMS, IM(instant message), 브라우 저, 카메라, 알람, 컨택트, 음성 인식, 이메일, 달력, 미디어 플레이어 , 앨범, 와치, 헬스(예: 운동량 또는 혈당과 같은 생체 정보를 측정), 또는 환경 정보 (예: 기압, 습도, 또는 온도 정보 측정) 어플리케이션을 포함할 수 있다. 일실시예에 따르면, 어플리케이 션은 전자 장치와 외부 전자 장치 사이의 정보 교환을 지원할 수 있는 정보 교환 어플리케이션(미도 시)을 더 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치로 지정된 정보 (예: 통화, 메시지, 또는 알람)를 전달하도록 설정된 노티피케이션 릴레이 어플리케이션, 또는 외부 전자 장치를 관리하도 록 설정된 장치 관리 어플리케이션을 포함할 수 있다. 노티피케이션 릴레이 어플리케이션은, 예를 들면, 전자 장치의 다른 어플리케이션(예: 이메일 어플리케이션)에서 발생된 지정된 이벤트(예: 메일 수신)에 대 응하는 알림 정보를 외부 전자 장치로 전달할 수 있다. 추가적으로 또는 대체적으로, 노티피케이션 릴레이 어 플리케이션은 외부 전자 장치로부터 알림 정보를 수신하여 전자 장치의 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치 또는 그 일부 구성 요소(예: 외부 전자장치의 디스플레이 모듈 또는 카메라 모듈)의 전원(예: 턴-온 또는 턴-오프) 또는 기능(예: 밝기, 해 상도, 또는 포커스)을 제어할 수 있다. 장치 관리 어플리케이션은, 추가적으로 또는 대체적으로, 외부 전자 장 치에서 동작하는 어플리케이션의 설치, 삭제, 또는 갱신을 지원할 수 있다. 도 3은 안드로이드 운영 체제의 디스플레이 파이프라인을 나타낸다. 도 3을 참조하면, 디스플레이 파이프라인 은 사용자 입력을 수신하는 제1 동작, 사용자 입력에 기초하여 어플리케이션의 렌더링 영상을 렌더링하는 제2 동작, 렌더링 영상에 기초하여 디스플레이 영상을 구성(composition)하는 제3 동작, 및 디스플레 이 영상에 기초하여 디스플레이를 업데이트하는 제4 동작을 포함할 수 있다. 제1 동작은 입력 구성요소(component)(예: 전자 장치의 입력 모듈, 센서 모듈, 햅틱 모듈 , 프로세서)에 기초하여 수행될 수 있고, 제2 동작은 어플리케이션 구성요소(예: 프로그램 , 어플리케이션, 프로세서)에 기초하여 수행될 수 있고, 제3 동작은 운영 체제 구성요소 (예: 프로그램, 운영 체제, 프로세서)에 기초하여 수행될 수 있고, 제4 동작은 디스플레이구성요소(예: 디스플레이 모듈, 프로세서)에 기초하여 수행될 수 있다. 제3 동작은 안드로이드 운영 체제의 SurfaceFlinger에 기초하여 수행될 수 있다. 예를 들어, 어플리케이션이 어플리케이션 렌더링을 통해 렌더링 영상을 생성하면, SurfaceFlinger는 렌더링 영상에 기초하여 디스플레이 영상을 구성(compositio n)할 수 있다. 렌더링 영상은 디스플레이 영상의 적어도 일부에 포함될 수 있다. 동작들(310 내지 340)은 동기화 주기(synchronization period)에 기초하여 수행될 수 있다. 동기화 주기는 안 드로이드 운영 체제의 VSYNC에 해당할 수 있고, 디스플레이의 프레임 레이트(frame rate)에 기초하여 설정될 수 있다. 예를 들어, 디스플레이가 60Hz의 프레임 레이트로 동작한다면, 하나의 동기화 주기는 16.6ms일 수 있다. 하나의 동기화 주기는 단위 시간 및/또는 하나의 VSYNC로 지칭될 수 있다. 도 3에서 디스플레이 파이프라인의 동작들(310 내지 340)은 동기화 주기들(301 내지 304)에 맞게 수행될 수 있다. 예를 들어, 동작들(310 내지 340) 각각은 자신이 속한 동기화 주기의 시작 시점에 시작될 수 있다. 예를 들어, 제1 동기화 주기의 시 작 시점에 제1 동작이 시작될 수 있다. 사용자 입력은 사용자 입력에 대한 파이프라인 처리가 완료된 후 디스플레이에 반영될 수 있다. 예를 들어, 사 용자 입력이 드로잉 입력이라면, 드로잉 입력에 대한 렌더링, 구성, 및 디스플레이의 파이프라인 처리가 완료된 후 해당 드로잉 입력이 디스플레이에 표시될 수 있다. 프레임 레이트가 60Hz인 경우 사용자 입력의 디스플레이 에 요구되는 필수 시간은 16.6ms*3=49.8ms일 수 있다. 여기서 '3'은 렌더링, 구성, 및 디스플레이가 수행되는 제2 동기화 주기 제4 동기화 주기에 대응할 수 있다. 사용자 입력에 소요되는 시간이 10ms라면 사용자 입력이 디스플레이 상에 나타나기까지 59.8ms의 시간이 필요할 수 있다. 도 4는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 디스플레이 파이프라인을 적용 하는 예시를 나타낸다. 도 4를 참조하면, 제1 시점(t1)의 제1 센싱 동작을 통해 제1 사용자 입력(도 4의 입력 1)이 센싱될 수 있다. 시점들(t1 내지 t8) 사이의 간격은 동기화 주기 또는 단위 시간에 대응할 수 있다. 제2 시점(t2)의 렌더링 동작들(411, 422)을 통해 제1 사용자 입력에 따른 렌더링 영상들(#1, #2)이 생성될 수 있고, 렌더링 영상들(#1, #2)은 버퍼(예: 버퍼 큐(buffer queue))에 저장될 수 있다. 제1 사용자 입력은 단일 동기화 주기 내 복수의 렌더링 영상들(#1, #2)을 발생시킬 수 있다. 예를 들어, 제1 사용자 입력은 드로잉 입력, 어플리케이션 실행 입력, 및 스크롤 입력 중 적어도 하나에 해당할 수 있다. 여기 서, 어플리케이션의 실행은 어플리케이션의 시작 또는 진입과 같이 짧은 시간에 많은 데이터의 처리가 필요한 동작을 의미할 수 있다. 이러한 유형의 입력은 드로잉 입력의 속도, 드로잉 입력에 사용되는 디지털 펜의 성능 (예: 처리 주기), 어플리케이션이 로드(load)하는 데이터의 양, 화면 스크롤에 응답하여 렌더링이 요구되는 데 이터의 양으로 인해 복수의 렌더링 영상들을 발생시킬 수 있다. 다만, 여기 나열된 입력의 종류는 하나의 예시 에 불과하며, 단일 동기화 주기에 복수의 렌더링 영상들을 유발하는 다른 입력이 더 존재할 수 있다. 또한, 여 기서 단일 동기화 주기 내 2개의 렌더링 영상들(#1, #2)이 생성되는 것이 설명되지만, 3개 이상의 렌더링 영상 들이 생성되는 것도 가능하다. 제3 시점(t3)의 구성 동작을 통해 제1 렌더링 영상(#1)에 대응하는 제1 디스플레이 영상이 구성될 수 있다. 안드로이드 운영 체제(예: SurfaceFlinger)는 VSYNC에 기초하여 버퍼의 영상 데이터를 순차적으로 처리 할 수 있다. 제3 시점(t3)에서 버퍼에 제1 렌더링 영상(#1) 및 제2 렌더링 영상(#1)이 쌓여 있으므로 SurfaceFlinger는 제3 시점(t3)에서 제1 렌더링 영상(#1)을 먼저 처리하고, 제2 렌더링 영상(#2)은 제4 시점 (t4)에 처리할 수 있다. 제4 시점(t4)에 제1 디스플레이 영상에 기초하여 디스플레이 처리가 수행될 수 있고, 제5 시점(t5)에 제1 디스플레이 영상이 디스플레이될 수 있다. 제2 렌더링 영상(#2)의 제2 디스플레이 영상은 동작들(442, 451)을 거쳐 제6 시점(t6)에 디스플레이될 수 있다. 이러한 순차적인 처리 방식에 따르면, 제2 시점(t2)의 제2 사용자 입력(도 4의 입력 2)에 대응하는 제3 디스플 레이 영상은 동작들(423, 432, 452, 461)을 거쳐 제7 시점(t7)에 디스플레이될 수 있고, 제3 시점(t3)의 제3 사 용자 입력(도 4의 입력 3)에 대응하는 제4 디스플레이 영상은 동작들(433, 443, 462, 471)을 거쳐 제8 시점(t 8)에 디스플레이될 수 있다. 제1 사용자 입력으로부터 제1 렌더링 영상(#1)의 디스플레이까지 총 4 동기화 주 기들이 소요된 것에 비해, 제1 사용자 입력으로부터 제2 렌더링 영상(#2)의 디스플레이, 제2 사용자 입력으로부 터 제3 렌더링 영상(#3)의 디스플레이, 및 제3 사용자 입력으로부터 제4 렌더링 영상(#4)의 디스플레이까지 총 5 동기화 주기들이 소요될 수 있다. 제2 렌더링 영상(#2)으로 인한 1 동기화 주기만큼의 지연이 지속될 수 있 다. 도 5는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 따른 각 계층의 예시적인 상태 를 나타낸다. 도 5를 참조하면, 어플리케이션은 사용자 입력에 기초하여 렌더링 영상을 생성할 수 있다. 보다구체적으로, 어플리케이션은 단일 동기화 주기 내 복수의 렌더링 영상들을 유발하는 사용자 입력에 반응하여 제 1 동기화 주기에 제1 렌더링 영상 및 제2 렌더링 영상을 생성할 수 있다. 제1 블록의 데 이터 처리에 기초하여 제1 렌더링 영상이 생성될 수 있고, 제2 블록의 데이터 처리에 기초하여 제2 렌더링 영상이 생성될 수 있다. 제1 렌더링 영상 및 제2 렌더링 영상은 버퍼에 순차적으로 저 장될 수 있다. 제2 동기화 주기의 구성 동작에 따라 제1 렌더링 영상은 버퍼에서 제거될 수 있다. 제2 렌더링 영상 은 제2 동기화 주기의 다음 동기화 주기에서 처리되면서 디스플레이에 출력된다. 제1 렌더링 영상 및 제2 렌더링 영상이 동일한 동기화 주기의 사용자 입력에 따른 것이므로, 제2 렌더링 영상이 다음 동기화 주기에서 처리된다는 것은 제2 렌더링 영상의 처리가 지연되어 다음 동기화 주기에 처리된다 는 것을 의미할 수 있다. 제2 렌더링 영상의 처리는 제1 렌더링 영상에 비해 1 동기화 주기만큼 지 연될 수 있다. 다음 렌더링 영상들이 생성되면 제2 동기화 주기를 비롯한 다음 동기화 주기들에 제2 렌더 링 영상으로 인한 지연이 지속될 수 있다. 다양한 실시예들에 따르면 버퍼 컨트롤을 통해 제1 렌더링 영상의 처리가 생략(skip)되고 제1 렌더링 영상 의 처리 시점에 제2 렌더링 영상이 처리될 수 있다. 제1 렌더링 영상의 생략은 단일 동기화 주 기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 따른 지연을 해소할 수 있다. 버퍼 컨트롤에 따르면 영상의 변동성이 커질 수 있다. 예를 들어, 일정한 속도의 드로잉 입력에 따라 단일 동기화 주기 내 복수의 렌 더링 영상들이 밀리는 것을 가정할 수 있다. 이 경우, 버퍼 컨트롤이 없이 단일 동기화 주기의 단일 렌더링 영 상에 기초하여 디스플레이 영상들 을 생성하면 지연으로 인해 펜 끝과 선 끝 간의 간격이 벌어질 수 있으나 디 스플레이에 선이 일정한 속도로 그려질 수 있다. 버퍼 컨트롤이 있다면 어느 렌더링 영상이 생략된 시점에 선 끝이 펜 끝에 급격히 따라붙을 수 있다. 이와 같이 영상에 갑작스러운 변화가 느껴지는 현상에 대해 영상의 변 동성이 커졌다는 표현이 사용될 수 있다. 버퍼 컨트롤은 특정 어플리케이션 및/또는 특정 시나리오에 적용될 수 있다. 예를 들어, 버퍼 컨트롤의 적용에 영상의 변동성 및/또는 영상의 안정성이 고려될 수 있다. 드로잉의 경우 펜과 그림 사이의 간격이 좁은 것이 유리할 수 있고, 어플리케이션의 실행 시 필요한 모든 데이터가 표시된 화면을 신속히 보여주는 것이 유리할 수 있고, 스크롤 시 슬러기시(sluggish)가 심하지 않는 한 현재 스크롤 위치에 대응하는 화면을 빠르게 보여주는 것이 유리할 수 있으므로, 드로잉 입력, 어플리케이션 실행 입력, 및 스크롤 입력에 관해 버퍼 컨트롤이 적용될 수 있다. 도 6은 다양한 실시예들에 따른 버퍼 컨트롤과 관련된 각 계층의 구성을 개략적으로 나타낸다. 다양한 실시예 들에 따르면 전자 장치에 대한 사용자 입력(예: 펜 입력 및/또는 손가락 터치 입력)에 반응하여 낮은 지연의 디 스플레이가 제공될 수 있다. 보다 구체적으로, 디스플레이 파이프라인에 따라 버퍼에 복수의 렌더링 영상의 영 상 데이터가 밀리면, 기존과 같이 영상 데이터를 순차적으로 처리하는 대신 영상 데이터에서 최종의 것을 선택 적으로 표시하여 지연이 지속되는 것이 방지될 수 있다. 도 6을 참조하면, 최상위 계층에 해당하는 어플리케이션 계층의 어플리케이션은 사용자 입력에 기초하여 어플리케이션 렌더링을 수행하여 렌더링 영상을 생성할 수 있다. 어플리케이션 계층 아래에는 프레임워크 계층 이 있을 수 있다. 중간 계층에 해당하는 네이티브 라이브러리 계층의 버퍼 컨트롤 로직(buffer control logic, 620)은 전자 장치의 시스템 상태(system status, 630)를 실시간으로 확인할 수 있다. 버퍼 컨트롤 로직은 전자 장치의 발열에 의한 클록 제한과 같은 강제적인 성능 제한 상황, 버퍼 컨트롤이 적용되는 어플리케이션 리 스트, 및 버퍼 컨트롤이 적용되는 시나리오 중 적어도 하나를 확인할 수 있고, 버퍼 컨트롤의 적용이 가능한 상 황(예: 드로잉 입력, 어플리케이션 실행 입력, 스크롤 입력)에서 버퍼 큐에 렌더링 영상이 밀리는 경우 버 퍼 컨트롤을 수행할 수 있다. SurfaceFlinger는 버퍼 컨트롤을 통해 버퍼 큐의 마지막 렌더링 영상 으로 디스플레이 영상을 구성할 수 있고, 커널 계층 아래의 하드웨어 계층의 디스플레이 컨트롤러는 마지 막 렌더링 영상을 포함하는 디스플레이 영상을 표시할 수 있다. 마지막 렌더링 영상은 가장 최근의 렌더링 영 상에 해당할 수 있다. 도 7은 다양한 실시예들에 따른 버퍼 컨트롤이 반영된 각 계층의 예시적인 상태를 나타낸다. 도 7을 참조하면, 어플리케이션은 단일 동기화 주기 내 복수의 렌더링 영상들을 유발하는 사용자 입력에 반응하여 제1 동기화 주 기에 제1 렌더링 영상 및 제2 렌더링 영상을 생성할 수 있다. 제1 블록의 데이터 처리에 기초하여 제1 렌더링 영상이 생성될 수 있고, 제2 블록의 데이터 처리에 기초하여 제2 렌더링 영상 이 생성될 수 있다. 제1 렌더링 영상 및 제2 렌더링 영상은 버퍼에 순차적으로 저장될 수있다. 제2 동기화 주기에서 제1 렌더링 영상의 구성 동작은 생략될 수 있고, 그 대신 제2 렌더링 영상(72 2)의 구성 동작이 수행될 수 있다. 따라서, 제1 동기화 주기에서 생성된 모든 렌더링 영상은 제2 동기화 주기에서 처리될 수 있고 다음 동기화 주기로 밀리지 않을 수 있다. 제2 동기화 주기에서 제3 블록 의 데이터 처리에 기초하여 제3 렌더링 영상이 생성될 수 있고, 제3 렌더링 영상은 다음 동기화 주기 에서 처리될 수 있다. 제4 블록의 데이터 처리에 기초하여 생성된 제4 렌더링 영상도 그 다음 동기 화 주기에서 처리될 수 있다. 따라서, 제1 렌더링 영상의 처리를 생략하고 버퍼의 마지막 데이터에 해당 하는 제2 렌더링 영상을 처리하여 지연이 감소될 수 있다. 도 8은 다양한 실시예들에 따른 버퍼 컨트롤이 반영된 디스플레이 파이프라인의 예시를 나타낸다. 도 8을 참조 하면, 제1 시점(t1)의 제1 센싱 동작을 통해 제1 사용자 입력(도 8의 입력 1)이 센싱될 수 있다. 제2 시 점(t2)의 렌더링 동작들(821, 822)을 통해 제1 사용자 입력에 따른 렌더링 영상들(#1, #2)이 생성될 수 있고, 렌더링 영상들(#1, #2)은 버퍼에 순차적으로 저장될 수 있다. 버퍼에 복수의 렌더링 영상들(#1, #2)이 누적된 것이 확인되면, 버퍼 컨트롤을 통해 이들 중 최종의 것이 선택될 수 있다. 제1 렌더링 영상(#1)의 구성 동작은 생략될 수 있고, 제3 시점(t3)의 구성 동작을 통해 제2 렌더링 영상(#2)에 대응하는 제1 디스플레이 영상 이 구성될 수 있다. SurfaceFlinger는 VSYNC에 기초하여 버퍼의 데이터를 순차적으로 처리할 수 있는데, 버퍼 컨트롤이 발동되면 비동기 모드를 활성화하여 버퍼의 최종 데이터를 처리할 수 있다. 제4 시점(t4)에 제1 디스 플레이 영상에 기초하여 디스플레이 처리가 수행될 수 있고, 제5 시점(t5)에 제1 디스플레이 영상이 디스 플레이될 수 있다. 이러한 처리 방식에 따르면, 제2 시점(t2)의 제2 사용자 입력(도 8의 입력 2)에 대응하는 제2 디스플레이 영상 은 동작들(823, 832, 842, 851)을 거쳐 제6 시점(t6)에 디스플레이될 수 있고, 제3 시점(t3)의 제3 사용자 입력 (도 8의 입력 3)에 대응하는 제3 디스플레이 영상은 동작들(833, 843, 852, 861)을 거쳐 제7 시점(t7)에 디스플 레이될 수 있다. 도 4의 순차적인 처리 방식에 따르면 제2 렌더링 영상(#2)으로 인한 1 동기화 주기만큼의 지 연이 지속될 수 있지만, 도 8의 비순차적인 처리 방식에 따르면 이러한 지연이 해소될 수 있다. 도 9는 다양한 실시예들에 따른 저 지연 제어 동작의 구체적인 적용 예시를 나타내는 플로우 차트이다. 도 9의 다양한 실시예들의 동작들(901 내지 910)은 순차적으로 수행되거나, 혹은 비 순차적으로 수행될 수 있다. 예를 들어, 동작들(901 내지 910)의 순서가 변경되거나, 및/또는 동작들(901 내지 910)의 적어도 둘이 병렬적으로 수 행될 수 있다. 동작들(901 내지 910)은 전자 장치의 적어도 하나의 구성요소(예: 프로세서, 프로그 램, 입력 모듈, 디스플레이 모듈, 센서 모듈, 햅틱 모듈)에 의해 수행될 수 있다. 도 9를 참조하면, 동작에서 어플리케이션이 실행될 수 있고, 동작에서 어플리케이션 리스트 및 동작 시나리오가 체크될 수 있다. 어플리케이션 리스트는 버퍼 컨트롤을 적용할 어플리케이션들(예: 듀얼 버퍼를 지 원하는 어플리케이션)을 포함할 수 있고, 동작 시나리오는 버퍼 컨트롤을 적용할 시나리오들(예: 펜 입력 상 황)을 포함할 수 있다. 실행된 어플리케이션이 리스트에 없다면 저 지연 제어 동작이 종료될 수 있다. 동작에서 사용자 입력이 감지될 수 있다. 사용자 입력의 시작(예: 터치 다운(touch down))에 따라 사용자 입력이 감지될 수 있다. 동작에서 시스템 상태가 체크될 수 있다. 발열 및/또는 과전류 상태와 같이 강 제적인 성능 제한 상황이 없는 경우, 동작에서 비동기 모드(async mode)가 활성화될 수 있다. 성능 제한 에 따라 데이터 처리가 밀리는 것과 사용자 입력의 특성에 따라 데이터 처리가 밀리는 것이 구분될 수 있다. 동작에서 복수 버퍼 사용이 체크될 수 있다. 복수의 버퍼들에 렌더링 영상들이 쌓여 있는 경우, 동작 에서 버퍼 컨트롤이 발동될 수 있고, 동작의 SurfaceFlinger 업데이트를 통해 마지막 버퍼의 렌더링 데이터로 디스플레이 영상이 구성될 수 있다. 성능 제한이 걸려있거나, 복수 버퍼 사용이 없다면, 버퍼 컨트롤 없이 기본적인 SurfaceFlinger 업데이트 시퀀스가 실행될 수 있다. 동작에서 사용자 입력이 종료되었는지 체크될 수 있다. 사용자 입력 종료는 터치 해제(touch release) 또 는 터치 종료(touch end)를 의미할 수 있다. 사용자 입력이 지속되고 있다면 동작이 다시 수행될 수 있고, 사용자 입력이 종료되었다면 동작에서 비동기 모드가 비활성화될 수 있다. 비동기 모드는 비활성화 상태에 있다가 동작들(902, 904)의 조건이 만족될 때 활성화될 수 있고, 사용자 입력이 종료되면 다시 비활성화 상태로 돌아갈 수 있다. 도 10은 어플리케이션 실행에 따른 각 계층의 데이터 처리 상태를 나타낸다. 어플리케이션의 실행은 어플리케 이션을 처음 시작하거나 어플리케이션에 진입하는 것과 같이 짧은 시간에 많은 데이터의 처리가 필요한 동작을의미할 수 있다. 예를 들어, 갤러리 어플리케이션을 처음으로 시작하면 복수의 앨범들의 복수의 영상들을 로드 하기 위해 짧은 시간에 많은 데이터의 처리가 필요할 수 있다. 도 10에서 제1 구간은 어플리케이션의 시 작에 따른 데이터 처리 상태를 나타낼 수 있고, 제2 구간은 어플리케이션 데이터(예: 갤러리 리스트)의 로드에 따른 데이터 처리 상태를 나타낼 수 있다. 어플리케이션 실행은 화면을 빠르게 업데이트하는 동작이므 로, 제2 구간에서 영상 버퍼에 영상 데이터가 지속적으로 누적될 수 있다. 영역은 영상 데이터가 버퍼에 누적되어 처리 속도가 느려지는 구간을 나타낼 수 있다. 1 Vsync도 되지 않는 짧은 순간에 어플리케이 션의 업데이트가 연속적으로 발생하여 최신 영상은 한 프레임 뒤에 디스플레이될 수 있다. 디스플레이가 60Hz 의 프레임 레이트로 동작한다면, 16.6ms의 지연이 발생할 수 있다. 어플리케이션 실행 시 SurfaceFlinger의 비 동기 모드가 활성화되면, 버퍼 큐의 첫 번째 영상 데이터를 무시하고 마지막 영상 데이터로 디스플레이를 업데 이트함으로써 지연(예: 16.6ms)이 제거될 수 있다. 도 11은 다양한 실시예들에 따라 디스플레이 상태를 체크하여 버퍼 컨트롤을 적용하는 동작을 나타내는 플로우 차트이다. 도 9의 다양한 실시예들의 동작들(901, 903, 908, 1101)은 순차적으로 수행되거나, 혹은 비 순차적 으로 수행될 수 있다. 예를 들어, 동작들(901, 903, 908, 1101)의 순서가 변경되거나, 및/또는 동작들(901, 903, 908, 1101)의 적어도 둘이 병렬적으로 수행될 수 있다. 동작들(901, 903, 908, 1101)은 전자 장치 의 적어도 하나의 구성요소(예: 프로세서, 프로그램, 입력 모듈, 디스플레이 모듈, 센서 모듈, 햅틱 모듈)에 의해 수행될 수 있다. 도 9에서 동작에 따르면 실행된 어플리케이션이 리스트에 없다면 저 지연 제어 동작이 종료될 수 있다. 도 11에 따르면 실행된 어플리케이션이 리스트에 없어도 디스플레이 상태에 따라 저 지연 제어 동작이 수행될 수 있다. 도 11을 참조하면, 도 9의 동작에서 어플리케이션이 실행될 수 있고, 동작에서 디스플레 이 상태가 체크될 수 있다. 예를 들어, 화면 스크롤 시 디스플레이 상태 및 누적된 버퍼의 개수를 확인하여 버 퍼 컨트롤이 수행될 수 있다. 디스플레이 상태는 잰키 레이트(janky rate) 및/또는 슬러기시(sluggish)에 기초하여 나타낼 수 있다. 현재 잰 키 레이트 및/또는 슬러기시가 임계치와 비교될 수 있고, 비교 결과에 따라 도 9의 동작들(903, 908)이 수행될 수 있다. 잰키 레이트 및/또는 슬러기시가 높지 않다면 디스플레이 상태가 안정적인 것을 의미하므로 비동기 모드가 적용될 수 있다. 예를 들어, 화면 스크롤 시 2개 이상 버퍼가 사용되면 버퍼 컨트롤을 통해 화면이 신 속히 업데이트될 수 있다. 사용자는 빠른 스크롤 속도를 체감할 수 있다. 잰키 레이트 및/또는 슬러기시가 높은 것은 디스플레이 상태가 안정적이지 않은 것을 의미할 수 있다. 이 경우, 화면 변동성이 커지는 것을 막기 위해 비동기 모드를 사용하지 않고 동작에서 기본적인 SurfaceFlinger 업데이트 시퀀스가 실행될 수 있다. 발열 및/또는 전체적인 시스템의 열화 상황에서는 Surfaceflinger의 비동기 모드가 비활성화될 수 있고, 버퍼 내 영상들이 순차적으로 처리될 수 있다. 시스템이 느리게 동작되는 상황에서는 프레임을 스킵하고 화면을 빠르게 업데이트하는 것은 화면을 더욱 떨려 보이게 할 수 있으므로 비동기 모드의 비활성화가 필요할 수 있다. 잰키 레이트가 높으면 화질이 떨어지므로 비동기 모드 가 비활성화될 수 있다. 잰키 레이트가 높은 상황에서 빠른 화면 처리를 위해 프레임을 스킵하면 화면이 떨려 보이는 현상이 더욱 가중될 수 있다. 도 12는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 대한 다양한 실시예들에 따른 제어 동작들을 나타내는 플로우 차트이다. 도 12의 다양한 실시예들의 동작들(1210, 1220)은 순차적으로 수행 되거나, 혹은 비 순차적으로 수행될 수 있다. 예를 들어, 동작들(1210, 1220)의 순서가 변경되거나, 및/또는 동작들(1210, 1220)의 적어도 둘이 병렬적으로 수행될 수 있다. 동작들(1210, 1220)은 전자 장치의 적어 도 하나의 구성요소(예: 프로세서, 프로그램, 입력 모듈, 디스플레이 모듈, 센서 모듈 , 햅틱 모듈)에 의해 수행될 수 있다. 도 12를 참조하면, 동작에서 단위 시간 내 복수의 렌더링 영상들을 발생시키는 사용자 입력이 수신될 수 있고, 동작에서 복수의 렌더링 영상들 중 일부에 기초하여 사용자 입력에 대응하는 디스플레이 영상이 구 성될 수 있다. 단일 동기화 주기는 안드로이드 운영 체제의 VSYNC 하나에 대응할 수 있다. 복수의 렌더링 영 상들 중 일부는 복수의 렌더링 영상들 중 가장 늦게 생성된 렌더링 영상에 해당할 수 있다. 디스플레이 영상은 단일 동기화 주기의 단일 렌더링 영상에 기초하는 다른 디스플레이 영상들에 비해 큰 변동성을 가질 수 있다. 사용자 입력에 기초하여 복수의 렌더링 영상들을 생성하고, 복수의 렌더링 영상들을 복수의 버퍼들에 순차적으 로 저장하고, 복수의 버퍼들 중 마지막 버퍼로부터 복수의 렌더링 영상들 중 마지막 렌더링 영상이 로드될 수 있다. 동작의 복수의 렌더링 영상들 중 일부는 이 마지막 렌더링 영상에 해당할 수 있고, 동작의디스플레이 영상은 이 마지막 렌더링 영상에 기초하여 구성될 수 있다. 마지막 렌더링 영상을 로드하는 동작은 SurfaceFlinger의 비동기 모드를 활성화하여 복수의 렌더링 영상들 중 마지막 렌더링 영상을 선택적으로 로드하 는 동작을 포함할 수 있다. 사용자 입력이 종료된 후 비동기 모드는 비활성화될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정 되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이 템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복 수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구 들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분 하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤 (예: 제1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직 접적으로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD- ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치 들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우 에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메 모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실 시예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이 상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모 듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소 들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의 해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2021-0063204", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예들에 따른 프로그램을 예시하는 블록도이다. 도 3은 안드로이드 운영 체제의 디스플레이 파이프라인을 나타낸다. 도 4는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 디스플레이 파이프라인을 적용 하는 예시를 나타낸다. 도 5는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 따른 각 계층의 예시적인 상태 를 나타낸다. 도 6은 다양한 실시예들에 따른 버퍼 컨트롤과 관련된 각 계층의 구성을 개략적으로 나타낸다.도 7은 다양한 실시예들에 따른 버퍼 컨트롤이 반영된 각 계층의 예시적인 상태를 나타낸다. 도 8은 다양한 실시예들에 따른 버퍼 컨트롤이 반영된 디스플레이 파이프라인의 예시를 나타낸다. 도 9는 다양한 실시예들에 따른 저 지연 제어 동작의 구체적인 적용 예시를 나타내는 플로우 차트이다. 도 10은 어플리케이션 실행에 따른 각 계층의 데이터 처리 상태를 나타낸다. 도 11은 다양한 실시예들에 따라 디스플레이 상태를 체크하여 버퍼 컨트롤을 적용하는 동작을 나타내는 플로우 차트이다. 도 12는 단일 동기화 주기 내 복수의 렌더링 영상들을 발생시키는 사용자 입력에 대한 다양한 실시예들에 따른 제어 동작들을 나타내는 플로우 차트이다."}
