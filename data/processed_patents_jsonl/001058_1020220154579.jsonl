{"patent_id": "10-2022-0154579", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0162896", "출원번호": "10-2022-0154579", "발명의 명칭": "그룹화 행렬을 기반으로 계층적 구조의 그래프 데이터를 풀링하기 위한 학습 처리 장치 및 방", "출원인": "주식회사 LG 경영개발원", "발명자": "고성문"}}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리;상기 메모리와 통신을 수행하는 프로세서를 포함하고,상기 프로세서는,그래프 데이터를 사전에 학습된 인공지능 모델에 입력함에 따라 쌍별 노드(pairwise node)의 유사도를 기반으로그룹핑 한 2차 형태의 그룹화 행렬을 생성하고, 및상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득하는, 학습 처리 장치."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 그룹화 행렬을 생성할 때, 상기 그래프 데이터 내 복수의 노드 및 상기 복수의 노드 간의 연결관계를 기설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화하는,학습 처리 장치."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 프로세서는,풀링 후 그룹 수 및 동일 그룹 내 할당된 노드를 포함하여 상기 풀링 연산자를 생성하는,학습 처리 장치."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는,하기 수학식 1 및 수학식 2를 기초로 상기 풀링 연산자를 생성하고,(수학식 1)공개특허 10-2023-0162896-3-(수학식 2)상기 는 l번째 레이어의 풀링 연산자이고, 상기 은 l번째 레이어의 그룹화 행렬이고, 상기 는 주어진 행렬의 직교 기준으로 이고, 및 상기 는 고유값으로 인, 학습 처리 장치."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 풀링 연산자는, 각 그룹별 노드 현황을 포함하는 트랜스포메이션 행렬 형태인,학습 처리 장치."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "학습 처리 장치에 의해 수행되는 방법에 있어서, 그래프 데이터를 사전에 학습된 제1 인공지능 모델에 입력함에 따라 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성하는 단계; 및상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득하는 단계;를 포함하는, 학습 처리 방법."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 그룹화 행렬을 생성하는 단계에서, 상기 그래프 데이터 내 복수의 노드 및 상기 복수의 노드 간의 연결관계를 기 설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화하는,학습 처리 방법."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 풀링 연산자를 획득하는 단계에서,풀링 후 그룹 수 및 동일 그룹 내 할당된 노드를 포함하여 상기 풀링 연산자를 생성하는,학습 처리 방법.공개특허 10-2023-0162896-4-청구항 9 제6항에 있어서,상기 풀링 연산자를 획득하는 단계에서,하기 수학식 1 및 수학식 2를 기초로 상기 풀링 연산자를 생성하고,(수학식 1)(수학식 2)상기 는 l번째 레이어의 풀링 연산자이고, 상기 은 l번째 레이어의 그룹화 행렬이고, 상기 는 주어진 행렬의 직교 기준으로 이고, 및 상기 는 고유값으로 인, 학습 처리 방법."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제6항에 있어서,상기 풀링 연산자는, 각 그룹별 노드 현황을 포함하는 트랜스포메이션 행렬 형태인,학습 처리 방법."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "컴퓨터와 결합되어, 제6항 내지 제10항 중 어느 한 항의 학습 처리 방법을 실행시키기 위하여 컴퓨터 판독 가능한 기록매체에 저장된 프로그램."}
{"patent_id": "10-2022-0154579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "학습 처리 장치에 의해 수행되는 방법에 있어서, 그래프 데이터를 수집하는 단계; 및상기 수집된 그래프 데이터를 이용하여 인공지능 모델을 학습시키는 단계;를 포함하고,상기 인공지능 모델을 학습시키는 단계는,상기 수집된 그래프 데이터를 이용하여 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의그룹화 행렬을 생성하는 단계, 및상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하여 출력하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득하는 단계를 포함하는,인공지능 모델을 학습시키는 방법.공개특허 10-2023-0162896-5-"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "그룹화 행렬을 기반으로 계층적 구조의 그래프 데이터를 풀링하기 위한 학습 처리 장치 및 방법과, 인공지능 모 델을 학습시키는 방법이 개시된다. 본 발명의 일 실시예에 따른 학습 처리 장치는 메모리; 메모리와 통신을 수행 하는 프로세서를 포함하고, 프로세서는, 그래프 데이터를 사전에 학습된 제1 인공지능 모델에 입력함에 따라 쌍 별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성하고, 및 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득한 다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 그래프 데이터를 풀링하기 위한 방법에 관한 것이다. 보다 상세하게는, 본 개시는 그룹화 행렬을 기 반으로 계층적 구조의 그래프 데이터를 풀링하기 위한 학습 처리 장치 및 방법과, 인공지능 모델을 학습시키는 방법에 관한 것이다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "그래프 신경망(graph neural networks, GNN)은 입력 그래프의 연결 구조를 기초로 개별 노드의 표현을 학습할 수 있다. 그래프 수준 예측 태스크(task)의 경우, 표준 절차는 모든 노드 기능을 가중치 차이 없이 단일 그래프 표현으로 전역적으로 풀링한 후, 해당 표현을 최종 예측 레이어에 제공할 수 있다. 이러한 절차는 정보가 노드 간 에지를 통해서만 전파되어 모델이 로컬 컨볼루션을 넘어 정보를 계층적으로 집계하는데 어려움이 있을 수 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 공개특허공보 제10-2021-0040316호 (2021. 04. 13.)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시에 개시된 실시예는 그래프 데이터에서 클러스터의 수를 자동으로 결정하는 그룹화 행렬을 기반으로 계 층적 구조의 그래프 데이터를 풀링하기 위한 학습 처리 장치 및 방법과, 인공지능 모델을 학습시키는 방법을 제 공하는데 그 목적이 있다. 본 개시가 해결하고자 하는 과제들은 이상에서 언급된 과제로 제한되지 않으며, 언급되지 않은 또 다른 과제들 은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 기술적 과제를 달성하기 위한 본 개시에 일 측면에 따른 학습 처리 장치는, 메모리; 상기 메모리와 통신 을 수행하는 프로세서를 포함하고, 상기 프로세서는, 그래프 데이터를 사전에 학습된 인공지능 모델에 입력함에 따라 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성하고, 및 상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득할 수 있다. 상기 프로세서는, 상기 그룹화 행렬을 생성할 때, 상기 그래프 데이터 내 복수의 노드 및 상기 복수의 노드 간 의 연결관계를 기 설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화 할 수 있다. 상기 프로세서는, 풀링 후 그룹 수 및 동일 그룹 내 할당된 노드를 포함하여 상기 풀링 연산자를 생성할 수 있 다. 상기 프로세서는, 하기 수학식 1 및 수학식 2를 기초로 상기 풀링 연산자를 생성하고, (수학식 1) , (수학식 2) 상기 는 l번째 레이어의 풀링 연산자이고, 상기 은 l번째 레이어의 그룹화 행렬이고, 상기 는 주어진 행렬의 직교 기준으로 이고, 및 상기 는 고유값으로 일 수 있다. 상기 풀링 연산자는, 각 그룹별 노드 현황을 포함하는 트랜스포메이션 행렬 형태일 수 있다. 또한, 본 개시의 다른 측면에 따른 학습 처리 방법은, 학습 처리 장치에 의해 수행되는 방법에 있어서, 그래프 데이터를 사전에 학습된 제1 인공지능 모델에 입력함에 따라 쌍별 노드(pairwise node)의 유사도를 기반으로 그 룹핑 한 2차 형태의 그룹화 행렬을 생성하는 단계; 및 상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matri x)을 생성하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득하는 단계;를 포함할 수 있다. 상기 학습 처리 방법은, 상기 그룹화 행렬을 생성하는 단계에서, 상기 그래프 데이터 내 복수의 노드 및 상기 복수의 노드 간의 연결관계를 기 설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화할 수 있다. 상기 학습 처리 방법은, 상기 풀링 연산자를 획득하는 단계에서, 풀링 후 그룹 수 및 동일 그룹 내 할당된 노드 를 포함하여 상기 풀링 연산자를 생성할 수 있다. 상기 학습 처리 방법은, 상기 풀링 연산자를 획득하는 단계에서, 하기 수학식 1 및 수학식 2를 기초로 상기 풀 링 연산자를 생성하고, (수학식 1) , (수학식 2) , 상기 는 l번째 레이어의 풀링 연산자이고, 상기 은 l 번째 레이어의 그룹화 행렬이고, 상기 는 주어진 행렬의 직교 기준으로 이고, 및 상기 는 고유값으로 일 수 있다. 상기 풀링 연산자는, 각 그룹별 노드 현황을 포함하는 트랜스포메이션 행렬 형태일 수 있다. 또한, 본 개시의 다른 측면에 따른 인공지능 모델을 학습시키는 방법은, 학습 처리 장치에 의해 수행되는 방법 에 있어서, 그래프 데이터를 수집하는 단계; 및 상기 수집된 그래프 데이터를 이용하여 인공지능 모델을 학습시 키는 단계;를 포함하고, 상기 인공지능 모델을 학습시키는 단계는, 상기 수집된 그래프 데이터를 이용하여 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성하는 단계, 및 상기 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하여 출력하되, 상기 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득하는 단계를 포함할 수 있다. 이 외에도, 본 개시를 구현하기 위한 실행하기 위한 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램이 더 제공될 수 있다. 이 외에도, 본 개시를 구현하기 위한 방법을 실행하기 위한 컴퓨터 프로그램을 기록하는 컴퓨터 판독 가능한 기 록 매체가 더 제공될 수 있다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 전술한 과제 해결 수단에 의하면, 본 개시는 사전에 사용자 하이퍼파라미터로 보편적인 클러스터 수 를 요구하지 않아도 클러스터의 수를 자동으로 결정할 수 있는 풀링 프레임워크를 제공할 수 있다는 효과를 기 대할 수 있다. 또한, 본 개시의 전술한 과제 해결 수단에 의하면, 입력 데이터의 넘버링 순서에 상관없이, 입력 그래프의 계층 적 구조가 반영된 출력 그래프를 획득할 수 있다. 또한, 본 개시의 전술한 과제 해결 수단에 의하면, 복수 개의 그룹 간에 연관성이 있어 그룹의 경계가 불명확한 경우에도 그룹의 개수를 자동으로 구분하여 그래프의 정확한 표현이 가능할 수 있다. 본 개시의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시 전체에 걸쳐 동일 참조 부호는 동일 구성요소를 지칭한다. 본 개시가 실시예들의 모든 요소들을 설명"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "하는 것은 아니며, 본 개시가 속하는 기술분야에서 일반적인 내용 또는 실시예들 간에 중복되는 내용은 생략한 다. 명세서에서 사용되는 '부, 모듈, 부재, 블록'이라는 용어는 소프트웨어 또는 하드웨어로 구현될 수 있으며, 실시예들에 따라 복수의 '부, 모듈, 부재, 블록'이 하나의 구성요소로 구현되거나, 하나의 '부, 모듈, 부재, 블 록'이 복수의 구성요소들을 포함하는 것도 가능하다. 명세서 전체에서, 어떤 부분이 다른 부분과 \"연결\"되어 있다고 할 때, 이는 직접적으로 연결되어 있는 경우 뿐 아니라, 간접적으로 연결되어 있는 경우를 포함하고, 간접적인 연결은 무선 통신망을 통해 연결되는 것을 포함 한다. 또한 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 명세서 전체에서, 어떤 부재가 다른 부재 \"상에\" 위치하고 있다고 할 때, 이는 어떤 부재가 다른 부재에 접해 있는 경우뿐 아니라 두 부재 사이에 또 다른 부재가 존재하는 경우도 포함한다. 제 1, 제 2 등의 용어는 하나의 구성요소를 다른 구성요소로부터 구별하기 위해 사용되는 것으로, 구성요소가 전술된 용어들에 의해 제한되는 것은 아니다. 단수의 표현은 문맥상 명백하게 예외가 있지 않는 한, 복수의 표현을 포함한다. 각 단계들에 있어 식별부호는 설명의 편의를 위하여 사용되는 것으로 식별부호는 각 단계들의 순서를 설명하는 것이 아니며, 각 단계들은 문맥상 명백하게 특정 순서를 기재하지 않는 이상 명기된 순서와 다르게 실시될 수 있다. 이하 첨부된 도면들을 참고하여 본 개시의 작용 원리 및 실시예들에 대해 설명한다. 본 명세서에서 '본 개시에 따른 학습 처리 장치'는 연산처리를 수행하여 사용자에게 결과를 제공할 수 있는 다 양한 장치들이 모두 포함된다. 예를 들어, 본 개시에 따른 학습 처리 장치는, 컴퓨터, 서버 장치 및 휴대용 단 말기를 모두 포함하거나, 또는 어느 하나의 형태가 될 수 있다. 여기에서, 상기 컴퓨터는 예를 들어, 웹 브라우저(WEB Browser)가 탑재된 노트북, 데스크톱(desktop), 랩톱 (laptop), 태블릿 PC, 슬레이트 PC 등을 포함할 수 있다. 상기 서버 장치는 외부 장치와 통신을 수행하여 정보를 처리하는 서버로써, 애플리케이션 서버, 컴퓨팅 서버, 데이터베이스 서버, 파일 서버, 게임 서버, 메일 서버, 프록시 서버 및 웹 서버 등을 포함할 수 있다. 상기 휴대용 단말기는 예를 들어, 휴대성과 이동성이 보장되는 무선 통신 장치로서, PCS(Personal Communication System), GSM(Global System for Mobile communications), PDC(Personal Digital Cellular), PHS(Personal Handyphone System), PDA(Personal Digital Assistant), IMT(International Mobile Telecommunication)-2000, CDMA(Code Division Multiple Access)-2000, W-CDMA(W-Code Division Multiple Access), WiBro(Wireless Broadband Internet) 단말, 스마트 폰(Smart Phone) 등과 같은 모든 종류의 핸드헬드 (Handheld) 기반의 무선 통신 장치와 시계, 반지, 팔찌, 발찌, 목걸이, 안경, 콘택트 렌즈, 또는 머리 착용형 장치(head-mounted-device, HMD) 등과 같은 웨어러블 장치를 포함할 수 있다.본 개시의 그래프 풀링(graph pooling)은 전체 그래프(full graph)에서 다운스트림 작업(downstream task)에 따라 유사도를 기초로 그룹핑하여 이전 보다 간단히 도식화한 그래프를 생성하는 것을 의미할 수 있다. 이러한 그래프 풀링은 그래프 내의 계층적 구조를 인코딩하는데 중요한 작업일 수 있다. 일반적인 그래프 풀링 접근 방식은 그래프 토폴로지를 효과적으로 캡처하는 노드 클러스터링 작업으로 처리할 수 있다. 이러한 일반적인 방법은 사용자를 통해 적절한 수의 클러스터(clusters)를 사전에 하이퍼파라미터 (hyperparameter)로 지정한 후, 모든 입력 그래프가 동일한 수의 클러스터를 공유하도록 한다. 한편, 클러스터 수가 다양할 수 있는 귀납적 설정(inductive setting)에서, 인공지능 모델은 적합한 클러스터를 학습하기 위해 풀링 레이어에 다양한 클러스터 수를 적용할 수 있어야 한다. 이에, 본 개시는 입력 데이터인 그래프 데이터를 기반으로 적절한 클러스터 수를 자동으로 결정하는 미분 가능 한 그래프 풀링 아키텍처(예를 들어, GMPOOL)를 제공할 수 있다. 계층 구조(hierarchical structure)는 장거리 상호 작용의 효과적인 학습에 유용한 그래프의 전역 토폴로지 (global topology)를 인코딩할 수 있다. 이에, 그래프 구조를 고려하는 풀링 아키텍처를 설계하는 것은 소셜 네 트워크 분석 및 분자 속성 예측과 같은 다운스트림 태스크(downstream task)에 중요할 수 있다. 상술한 전역 풀링(global pooling)의 대안으로, DiffPool은 먼저 각 노드를 더 적은 수의 클러스터로 소프트 분 류하여 종단 간 미분 가능한 풀링을 수행하는 것일 수 있다. 이후, gPool 및 SAGpool은 어텐션 메커니즘을 풀링 에 통합했으며, MinCutPool은 완화된 K-way 정규화 최소 절단 목표를 최소화하여 노드를 클러스터로 그룹화할 수 있다. 대부분의 일반적인 귀납적 설정에서는 데이터 세트의 모든 그래프에 적합한 단일 수의 클러스터가 존재하지 않 는다. 특히, 분자 그래프에서 작용기의 수는 유용한 특성과 화학적 거동을 결정하는 반면 분자마다 크게 다를 수 있다. 일반적인 풀링 방법은 하이퍼파라미터로 클러스터의 수를 요구하고 모든 그래프가 동일한 수의 클러스 터를 공유한다는 가정 하에 동작한다. 이는, 추가 초매개변수 조정이 필요할 뿐만 아니라 다운스트림 성능을 저 하시키는 강한 유도성 바이어스를 부과할 수 있다. 이에, 본 개시는 사전에 사용자 하이퍼파라미터로 보편적인 클러스터 수를 요구하지 않아도 클러스터의 수를 자 동으로 결정할 수 있는 풀링 프레임워크를 제안하는 것으로, 상세 설명은 후술하기로 한다. 후술하는 본 개시의 모든 표현 공간은 유클리드 공간(Euclidean space) 기반이라고 가정할 수 있다. 도 1은 본 개시의 학습 처리 장치의 블록도이고, 도 2는 도 1의 일부 구성을 상세하게 설명하기 위한 블록도이 다. 이하에서는, 본 개시의 프레임워크를 나타내는 도 3 및 본 개시의 학습 처리 방법을 설명하기 위한 예시도인 도 4를 참고하여 설명하기로 한다. 도 1을 참고하면, 학습 처리 장치는 프로세서, 메모리 및 통신부를 포함한다. 이때, 프로 세서는 학습 처리하기 위한 복수의 인공지능 모델을 포함하여 해당 각 구성의 동작을 제어할 수 있다. 도 1에 도시된 구성요소들은 본 개시에 따른 학습 처리 장치를 구현하는데 있어서 필수적인 것은 아니어서, 본 명세서 상에서 설명되는 학습 처리 장치는 위에서 열거된 구성요소들 보다 많거나, 또는 적은 구성요소 들을 가질 수 있다. 도 1을 참고하면, 프로세서는 그래프 데이터를 사전에 학습된 제1 인공지능 모델에 입력함에 따라 쌍별 노 드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬(grouping matrix)을 생성할 수 있다. 이때, 그룹핑 기준은 다운스트림 태스크(downstream task)에 따라 결정될 수 있다. 예를 들어, 그래프 데이터는 SMILES(simplified molecular-input line-entry system) 형태일 수 있으며, 이에 한정되지 않는다. 상기 제1 인공지능 모델은 노드들 간의 상관성을 기반으로 그룹핑하도록 학습된 모델일 수 있다. 구체적으로, 프로세서는 입력된 그래프 데이터의 노드의 쌍별 조합의 이진 분류 확률의 사용을 유도하는 풀링 연산자의 2차 형식으로 정의된 그룹화 행렬을 생성할 수 있다. 도 4를 참고하면, 프로세서는 그룹화 행렬을 생성할 때, 그래프 데이터 내 복수의 노드 및 복수의 노드 간 의 연결관계를 기 설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화 (B1, B2, B3)할 수 있다. 즉, 프로세서는 그래프 데이터 내 복수의 노드 및 복수의 노드 간의 연결관계를 0, 1, 및 0 내지 1 사이(0~1) 중 어느 하나의 식별자로 지정하여 그룹화할 수 있다는 것이다. 이때, 0은 서로 다른 그룹, 1은 동일 그룹, 0 내지 1 사이([0, 1])는 동일한 그룹으로 판단되는 정도에 따라 다 른 값을 의미할 수 있다. 도 3은 본 개시의 프레임워크를 나타내는 도면으로서, GMPool의 전체 프레임워크를 예로 들어 나타내는 것이다. 도 3을 참고하면, 프로세서는 입력 데이터인 그래프 데이터(input graph)를 수신하면, 그래프 데이터의 각 노드(1 ~ 6) 쌍 간의 클러스터링 유사성을 인코딩하는 그룹화 행렬(Grouping M)을 형성할 수 있다. 이때, 그룹화 행렬은 노드 1, 2 및 3을 포함하는 B1의 그룹 블록, 노드 4 및 5를 포함하는 B2의 그룹 블록, 및 노드 6을 포함하는 B3의 그룹 블록을 포함할 수 있다. 상기 입력 데이터는 계층적 구조를 갖는 그래프 데이터를 모두 포함할 수 있다. 상기 계층적 구조를 갖는 그래 프 데이터는 복수의 노드와 노드 간의 연결 관계인 에지(edge)를 포함할 수 있다. 예를 들어, 그래프 데이터는 분자 화학식, 소셜 네트워크 데이터 등일 수 있다. 도 3에서, 풀링 행렬의 곱이 그 자체로 그룹화 행렬을 형성할 수 있다. 이때, 각 (i, j) 번째 항목은 노드 i와 노드 j가 동일한 클러스터로 풀링되는지 여부와 같은 쌍별 클러스터링 유사성을 나타낼 수 있다. 프로세서는 각 그래프 데이터에 대해, 분류 레이어를 통해 그룹화 행렬(grouping matrix)의 클러스터링 유 사성을 매개변수화(parameterizes)할 수 있다. 프로세서는 그래프 를 속성 레이블 에 매핑하는 함수 를 학습하는 것이 목표인 귀납적 그래프 수준 예측 설정을 가정할 수 있다. 복수의 노드를 포함하는 각 그래프 데이터는 그래프 인접성(graph adjacency), 노드 피처(node features) 및 에 지 피처(edge features)를 포함하는 삼중항으로 형성할 수 있다. 이를 기초로, 프로세서는 그래프 데이터 의 쌍별 노드의 유사도를 판단할 때, 그래핑 인접성, 노드 피처 및 에지 피처를 고려할 수 있다는 것이다. 예를 들어, n개의 노드가 있는 그래프 데이터 G는 그래프 인접성 , 노드 피처 및 에지 피처 를 포함하는 삼중항 로 나타낼 수 있다. 본 개시에서는 노드 i와 에지(i, j)의 기능을 각각 표시하기 위해 와 를 사용할 수 있다. 상술한 그룹화 행렬은 쌍별 노드 조합의 이진 분류 체계를 기반으로 할 수 있다. 이에, 프로세서는 그룹화 행령 생성 이전에, GNN 모델로 노드 표현을 획득할 수 있다. 이때, 인코더로 DMPNN(Directed Message Passing Neural Network)을 적용할 수 있다. 프로세서는 입력 데이터인 그래프 데이터로부터 노드 피처를 추출할 수 있다. 이때, 도 2를 참고하면, 프로세서는 백본(backbone) GNN으로서, 방향성 에지를 통해 메시지를 집계하는 DMPNN을 적용할 수 있으며, 이에 한정되지 않는다. 구체적으로, 도 2를 참고하면, 프로세서는 입력 데이터로 그래프 데이터를 수신하면, 에지 피처인 제1 피 처( )와 소스 노드의 피처인 제2 피처( )를 기초로 각 에지(i, j)의 히든 상태(hidden state)를 초기화 할 수 있다. 프로세서는 각 시간 단계 t에서, 각 방향 에지로 입사 에지(incident edges)에서 메시지 으로 히든 상태를 수집하고, 수학식 1 및 수학식 2와 같이 히든 상태를 로 업데이트할 수 있다. 이때, 입사 에지 (incident edges)는 하나의 노드와 노드에 연결된 간선들 사이의 관계를 의미할 수 있다.(수학식 1)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "(수학식 2)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기에서, 은 노드 i의 인접 노드 집합이고, 는 학습 가능한 가중치일 수 있다. 후술하는 수학식 3 및 4를 참고하면, 노드의 히든 상태는 입사 에지의 히든 상태를 메시지 로 집계하여 노드 피처 와의 연결을 선형 레이어로 전달한 후, ReLU(rectified linear unit,) 함수의 비선형성을 통해 업데이트할 수 있다. 이때, ReLU 함수는 입력값이 0보다 작으면 0을 출력하고, 입력값이 0 보다 크면 입력값 그 대로 출력할 수 있다. (수학식 3)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "(수학식 4)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "은 학습 가능한 가중치일 수 있다. DMPNN이 T 시간 단계 동안 실행된다고 가정하면, 프로세서는 를 사용하여 각각의 모든 노드와 에지의 히든 상태를 포함하는 출력 표현 행렬을 다음과 같이 나타낼 수 있다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "프로세서는 각 계층적 레이어(hierarchical layer)에서, GNN 이후 입력 데이터인 그래프 데이터를 축소 (coarsen)하는 풀링 연산자를 학습할 수 있다. 각 계층적 레이어에서, 프로세서는 GNN을 통해 노드 표현을 구성하고, 풀링 레이어를 통해 다음 계층적 레 이어(next hierarchical layer)에 대한 입력으로 사용되는 축소 그래프(coarsened graph)를 형성할 수 있다. 이때, 그래프 데이터를 축소(coarsen)한다는 것은 유사한 노드들을 하나의 군집으로 그룹핑하고, 이를 다시 노 드로 사용하여 노드 개수가 줄어든 그래프를 형성하는 것을 의미할 수 있다. 구체적으로, l번째 레이어가 이면, 풀링 레이어는 개의 노 드를 개의 클러스터로 풀링하는 할당 행렬(assignment matrix) 을 생성할 수 있다. 그런 다음, 그래프 는 로 축소될 수 있다. 이 계층적 프로세스는 해당 태스크(task)에 따라 반복적으로 활용될 수 있다. 이하에서는, 노드 쌍 간의 관계를 기초한 그룹화 작업을 설명하기로 한다. 프로세서는 쌍별 노드의 클러스터링 유사성을 포함하는 그룹화 행렬을 형성할 수 있다. 프로세서는 각 노드 쌍이 동일한 그룹에 포함되는지 여부를 분류하는 작업을 수행할 있다. 이때, 그룹은 클러스터라고도 명명할 수 있다. 본 개시에서, 프로세서는 사전에 클러스터 수를 설정하는 절차를 생략할 수 있다. 상술한 분류는 순열 불변성을 보장(ensure permutation invariance)하기 위해 모든 노드 조합 쌍을 거칠 수 있 다. (수학식 5)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "이때, 이고, 는 가환 함수(commutative function)일 수 있다. (수학식 6)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "이때, 일 수 있다. 프로세서는 두 개의 입력 벡터를 하나의 출력 벡터로 매핑할 수 있다. 에 대해 사용할 수 있는 선택 사항이 다수지만, 분류 작업(classification task)을 단순화하기 위해 입력 벡 터 사이의 유클리드 거리(Euclidean distance)를 사용할 수 있다. 각 행렬 인덱스는 노드 번호에 해당하며, 각 요소는 노드 쌍이 동일한 그룹에 포함되는지 여부와 관계없이 각 노드 쌍에 대한 확률 값(probability values) 을 포함할 수 있다. 일 예로, 프로세서는 중첩되는 노드가 없는 분리된 클러스터 세트를 고려할 수 있다. 이때, 도 4를 참고하면, 그룹화 행렬 M은 0, 1을 요소로 포함하는 블록 대각 형태(block diagonal form)로 재구 성될 수 있다. 블록(B1, B2, B3)의 개수는 풀링 후 그룹의 개수에 해당하며, 동일한 블록에 할당된 노드는 동일 한 그룹에 해당할 수 있다. 예를 들어, 3개의 다른 그룹이 있고 각 그룹 크기가 k1, k2, k3인 경우, 수학식 7과 같을 수 있다. (수학식 7)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "수학식 7의 그룹화 행렬의 각 요소는 [0, 1] 내에서 연속적인 숫자로 노드가 중첩되는 소프트 클러스터링(soft- clustering)일 수 있다. 상기 그룹화 행렬은 쌍별 노드 조합의 이진 분류 체계를 기반으로 할 수 있다. 이에, GNN 모델로 노드 표현을 획득하는 것으로 시작할 수 있다. 본 개시는 인코더로 DMPNN을 적용할 수 있다. 프로세서는 그룹화 행렬을 형성하기 위해, 입력된 그래프 데이터의 쌍별 노드 조합의 랭크 2의 텐서 (tensor of rank 2)를 우선적으로 계산할 수 있다. 상기 랭크 2 텐서는 크기와 2개의 방향을 나타내는 9개의 성 분(노드)을 의미할 수 있다. 이때, 노드의 순서는 관련이 없으므로 텐서는 대칭이어야 하고, 절차에서 교환 기능을 사용할 수 있다. 본 개시 에서는 분류를 단순화하기 위해 노드 쌍 간의 유클리드 거리에 중점을 둘 수 있다. (수학식 8)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "상기 는 입력 데이터로 그래프 데이터, 는 노드 피처일 수 있다. 는 일반화된 인접 텐서(generalized adjacency tensor)로 수학식 9와 같이 정의될 수 있다. 는 텐서 구성요소 인덱스 (tensor component indices), 는 히든 차원에 대한 인덱스(indices for hidden dimension)를 의미할 수 있 다. (수학식 9)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "본 개시의 이진 분류기는 과적합 문제를 피하기 위해 단순하도록 설정될 수 있다. 또한, 본 개시는 각 노드 쌍 에 대한 확률을 추출하기 위해 소프트맥스 활성화가 있는 단일 레이어를 사용할 수 있다. (수학식 10)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "상기 는 그룹화 행렬(grouping matrix), 는 레이이의 가중치(weight of layer)일 수 있다. 입력 데이터인 그래프 데이터는 인덱스 아래에서 대칭이므로 그룹화 행렬도 대칭일 수 있다. 계산의 모든 단계 는 노드 수준을 기반으로 하며, 활성화 함수 가 요소별 연산인 경우 수학식 8 및 9는 순열 연산자 (permutation operator) 를 사용하는 순열 등변량일 수 있다. 노드 쌍이 여러 그룹에 동시에 할당되지 않는 이상적인 그룹화의 경우 그룹화 행렬은 요소에 대해 0, 1만 포함 할 수 있다. 적절한 순열을 사용하면 인접한 범위에서 동일한 그룹의 노드 쌍을 수집하고 그룹화 행렬을 블록 대각선(block diagonal)으로 형성할 수 있다. 블록 대각 행렬에서, 블록 수는 풀링 후 그룹 수에 해당할 수 있고, 풀링 시 동일한 그룹은 자신에게 할당된 노 드 쌍을 포함할 수 있다. 예를 들어, 세 개의 다른 그룹이 있고 각 그룹 크기가 k1, k2, k3인 경우의 그룹화 행 렬은 수학식 11과 같을 수 있는 것이다.(수학식 11)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "프로세서는 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자(pooling operator)를 획득할 수 있다. 즉, 프로세서는 그룹화 행렬을 분해하여 그래 프를 축소(carsen)한 형태의 풀링 행렬을 획득하는 것이다. 상술한 프로세서는 제2 인공지능 모델을 통해 상술한 풀링 행렬을 생성할 수 있다. 이때, 제2 인공지능 모 델은 그룹화 행렬을 기초로 풀링 행렬을 생성하도록 사전에 학습된 모델일 수 있다. 도 3 및 4를 참고하면, 상기 풀링 행렬(pooling S)은 풀링 연산자(S) 및 풀링 연산자의 전치(ST)의 곱이 그룹화 행렬(M)과 동일( )함을 기초로 획득할 수 있다. 프로세서는 풀링 후 그룹 수 및 동일 그룹 내 할당된 노드를 포함하여 상기 풀링 연산자를 생성할 수 있다. 도 3을 참고하면, 풀링 행렬에서 그룹 수는 3개이고, 제1 그룹(그룹 인덱스 1)은 노드 1, 2 및 3을 포함하고, 제2 그룹(그룹 인덱스 2)은 노드 4 및 5를 포함하며, 제3 그룹(그룹 인덱스 3)은 노드 6을 포함하는 것을 확인 할 수 있다. 이러한 풀링 행렬은 이후 출력 그래프(output graph) 형태로 출력될 수 있다. 도 4를 참고하면, 풀링 행렬은 각 그룹별 노드 현황을 포함하는, 0 이상 내지 1 이하의 식별자로 표시될 수 있 다. 상술한 그룹화 행렬 자체는 풀링 작업에서 제한된 역할을 수행할 수 있다. 이에, 프로세서는 그룹화 행렬 을 기초로 풀링 연산자를 생성할 수 있다. 프로세서는 수학식 12와 같이 그룹화 행렬을 제곱근 형태(square-root form)로 분해하여 풀링 연산자를 획 득할 수 있다. 풀링 연산자는 수학식 12와 같을 수 있다. 모든 단일 요소는 소프트 클러스터링 경우를 나타내는 수학식 7의 그 룹화 행렬에 대해 [0, 1] 범위의 연속된 숫자로 일반화될 수 있다. (수학식 12)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 15, "content": "프로세서는 후술하는 수학식 13 및 수학식 16을 기초로 풀링 연산자를 생성할 수 있다. 상기 풀링 연산자 는, 각 그룹별 노드 현황을 포함하는 트랜스포메이션 행렬 형태일 수 있다. 구체적으로, 그룹화 행렬은 그대로 풀링에 사용할 수는 없지만, 수학식 13과 같이, 풀링 연산자와 전치를 곱한 값과 같기 때문에, 각 노드 쌍이 풀링되는 방식과 유사하게 인코딩할 수 있다. 그룹화 행렬의 (i, j) 번째 항목은 노드가 동일한 클러스터에 정확히 풀링된 경우인 과 같고, 다른 클러스터에 직교하여 풀링된 경우인 과 같을 수 있다. 이에, 그룹화 행렬을 제 곱근 형태로 분해하면, 이를 모델에 대한 풀링 연산자로 해석할 수 있다.(수학식 13)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 16, "content": "상기 는 l번째 레이어의 풀링 연산자이고, 풀링 연산자 는 에서의 행렬일 수 있다. 풀링 연산자 S를 역순으로 곱하면, 수학식 14와 같은 풀링 공간의 차수 행렬(degree matrix)인 을 획득할 수 있다. (수학식 14)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 17, "content": "수학식 13을 참조하면, 풀링 연산자가 풀링 인덱스를 상호작용하여 그룹화 행렬을 완전히 재구성할 수 있다. 또 한, 풀링 연산자 S는 적절한 하위 구조를 형성하기 위해 각 노드에 대한 가중치 행렬로 해석될 수 있다. 일 예로, 프로세서는 수학식 15와 같이, 고유 분해(eigen decomposition)를 이용하여 분해할 수 있다. 상 기 고유 분해는, 주어진 행렬을 직교 기준(orthonormal basis)인 와 고유값(eigen value)인 으로 분해하는데 적용될 수 있다. (수학식 15)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 18, "content": "상술한 고유 분해 방식은 주어진 행렬의 행렬식이 0이 아닌 한 항상 적용될 수 있다. 수학식 15에서 로 설정되면, 방정식의 우변(RHS)을 제곱 형태의 풀링 연산자로 재정렬하여 수학 식 16를 획득할 수 있다. (수학식 16)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 19, "content": "상기 은 l번째 레이어의 그룹화 행렬이고, 상기 는 주어진 행렬의 직교 기준으로 이고, 및 상기 는 고유값으로 일 수 있다. 풀링 연산자 S는 크기가 인 정방 행렬(square matrix)이지만, 고유 값(eigen value) Λ는 직교 기준 (orthonormal basis)의 각 열(column)에 0을 곱하여 행렬에서 불필요한 랭크(rank)를 제한할 수 있다. 이러한, 고유 분해는 0이 아닌 행렬식이 있는 모든 행렬에 대해 적용할 수 있으므로, 실제 상황에서 완벽하게 수행될 수 있다는 효과를 기대할 수 있다. 또한, 모든 대칭 및 실수 행렬은 벡터와 마찬가지로 실수 고유 값을 갖도록 보장될 수 있다. 이에, 그룹화 행렬 의 제곱근은 노드에서 하위 그룹을 구성하는 변환 연산자로 해석될 수 있다. 상술한 연속적인 실수값 요소는 노드가 하위 그룹으로 소프트 클러스터링될 수 있다. 일반적인 클러스터링에서 는 상술한 구조를 적절하게 클러스터링하기가 어려울 수 있다. 본 개시의 소프트 클러스터링은 알고리즘에 자연 스럽게 포함되어 있으므로 링커 구조(linker structures)를 용이하게 처리할 수 있는 것이다. 노드는 기본 표현(fundamental representation)에 있는 반면, 에지 피처(edge features)와 인접 행렬 (adjacency matrix)은 인접 표현(adjoint representation)에 있을 수 있다. 이는, 수학식 17 내지 19의 변환 규칙으로 나타낼 수 있다. (수학식 17)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 20, "content": "(수학식 18)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 21, "content": "(수학식 19)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 22, "content": "그룹핑이 제대로 이루어지면 0(또는 0에 가까운) 성분이 분해된 고유값 행렬(eigen value matrix)을 생성할 수 있다. 다른 예로, 프로세서는 그룹화 행렬에 대해 특이값 분해(Singular Value Decomposition, SVD)를 수행하 여 전체 랭크(overall rank)가 적절한 클러스터 수를 나타내도록 풀링 행렬을 획득할 수 있다. 예를 들어, 행렬 U와 V에 속한 벡터를 특이 벡터(singular vector)라고 할 때, 모든 특이 벡터는 서로 직교하는 성질을 가질 수 있다. 시그마(∑)는 대각행렬(diagonal matrix)로, 행렬의 주대각선에 위치한 값만 0이 아니고 나머지 위치의 값은 모두 0일 수 있다. 또 다른 예로, 도 2를 참고하면, 프로세서는 그룹화 행렬을 분해하지 않고 풀링을 수행할 수 있다(skip connection). 즉, 프로세서는 분해를 수행하지 않고 그룹화 행렬을 있는 그대로 사용하는 단일 풀링 변형 (NGMPool)을 적용할 수 있다. 프로세서는 그룹화 행렬과 풀링 연산자의 제곱이 동일함을 기반으로 그룹화 행렬을 분해하지 않고 그룹화 행렬을 곱하여 풀링과 같은 효과를 제공할 수 있는 것이다.. 구체적으로, 프로세서는 풀링 깊이를 1로 유지하고 풀링 공간에서 가중 집계 벡터(weighted aggregation vector)를 집계 기반으로 적용할 수 있다. 상기 가중 집계 벡터는 수학식 20과 같이, 그룹화 행렬을 분해하여 획득한 풀링 행렬을 적용하여 유클리드 1(one) 벡터로 변환될 수 있다. (수학식 20)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 23, "content": "트랜스포메이션의 최종 형태는 수학식 21 및 22와 같을 수 있다. (수학식 21)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 24, "content": "(수학식 22)"}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 25, "content": "도 2를 참고하면, 프로세서는 제1 인공지능 모델을 통해 그래프 데이터를 기초로 형성된 그룹화 행렬, 및 제2 인공지능 모델 또는 skip connection 절차를 통해 형성된 풀링 행렬을 최종 종합하여 FFN 모델(Feed- Forward Network)에 적용할 수 있다. 이를 통해, 프로세서는 하나의 그룹이 하나의 노드처럼 작동하는 출력 그래프(도 3의 output graph)를 획 득할 수 있다. 상술한 풀링 행렬은 그룹화 행렬을 분해하거나, 또는 분해하지 않는 방식을 통해 획득될 수 있다. 예를 들어, 입력되는 그래프 데이터가 도너(donor) 및 억셉터(acceptor)를 포함하여 계층적 구조를 이루고 있는 TADF(Thermally Activated Delayed Fluorescence) 분자인 경우, 클러스터 수를 자동으로 결정할 수 있는 본 개 시의 학습 처리를 통해 분자 물성 예측 정확도를 향상시킬 수 있다. 이때, 그래프 데이터는 SMILES(simplified molecular-input line-entry system) 형태로 입력될 수 있다. 구체적으로, TADF는 분자의 크기에 따라 구조물의 개수가 상이할 수 있는데, 본 개시는 사전에 클러스터(그룹) 의 수를 설정하지 않고 자동으로 클러스터 수를 파악하기 때문에, 분자마다 서로 다른 개수의 그룹으로 구분할 수 있다는 효과를 기대할 수 있는 것이다. 한편, 학습 처리 장치의 프로세서는 그래프 데이터가 입력되면, 이를 데이터 셋으로 설정하여 2차 형 태의 그룹화 행렬을 생성하고, 그룹화 행렬을 분해하여 풀링 행렬을 생성 및 출력할 수 있도록 하는 인공지능 모델을 학습시킬 수 있다. 이때, 인공지능 모델은 상술한 제1 및 제2 인공지능 모델을 비롯하여 본 개시에서 구 현되는 인공지능 모델을 포함하는 의미일 수 있다. 구체적으로, 프로세서는 그래프 데이터를 수집할 수 있다. 이때, 그래프 데이터는 복수일 수 있다. 프로세서는 수집된 그래프 데이터를 이용하여 인공지능 모델을 학습시킬 수 있다. 보다 상세하게, 프로세서는 수집된 그래프 데이터를 이용하여 쌍별 노드(pairwise node)의 유사도를 기반 으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성할 수 있다. 또한, 프로세서는 그룹화 행렬을 분해하여 풀 링 행렬(pooling matrix)을 생성하여 출력하되, 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득할 수 있다. 메모리는 본 개시의 학습 처리 방법을 제공하기 위한 컴퓨터 프로그램을 저장할 수 있으며, 저장된 컴퓨터 프로그램은 프로세서에 의해 판독되어 구동될 수 있다. 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 통신부가 수신한 임의의 형태의 정보를 저장할 수 있다. 메모리는 학습 처리 장치의 다양한 기능을 지원하는 데이터와, 프로세서의 동작을 위한 프로그 램을 저장할 수 있고, 입/출력되는 데이터들을 저장할 있고, 학습 처리 장치에서 구동되는 다수의 응용 프 로그램(application program 또는 애플리케이션(application)), 학습 처리 장치의 동작을 위한 데이터들, 명령어들을 저장할 수 있다. 이러한 응용 프로그램 중 적어도 일부는, 무선 통신을 통해 외부 서버로부터 다운 로드 될 수 있다. 이러한, 메모리는 플래시 메모리 타입(Flash memory type), 하드디스크 타입(Hard disk type), SSD 타입 (Solid State Disk type), SDD 타입(Silicon Disk Drive type), 멀티미디어 카드 마이크로 타입(Multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random access memory; RAM), SRAM(Static random access memory), 롬(Read-only memory; ROM), EEPROM(Electrically erasable programmable read-only memory), PROM(Programmable read-only memory), 자기 메모리, 자기 디스크 및 광디스 크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 또한, 메모리는 본 장치와는 분리되어 있으나, 유선 또는 무선으로 연결된 데이터베이스가 될 수도 있다. 통신부는 외부 장치와 통신을 가능하게 하는 하나 이상의 구성 요소를 포함할 수 있으며, 예를 들어, 방송 수신 모듈, 유선통신 모듈, 무선통신 모듈, 근거리 통신 모듈, 위치정보 모듈 중 적어도 하나를 포함할 수 있다. 도시하지 않았지만, 본 개시의 학습 처리 장치는 출력부 및 입력부를 더 포함할 수도 있다. 출력부는 그래프 풀링 데이터를 비롯한 학습 처리 결과 등을 제공하기 위한 사용자 인터페이스(UI, user interface)를 표시할 수 있다. 출력부는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 통신부 가 수신한 임의의 형태의 정보를 출력할 수 있다. 출력부는 액정 디스플레이(LCD: liquid crystal display), 박막 트랜지스터 액정 디스플레이(TFT LCD: thin film transistor- liquid crystal display), 유기 발광 다이오드(OLED: organic light-emitting diode), 플렉 시블 디스플레이(Flexible display), 3차원 디스플레이(3D display) 중에서 적어도 하나를 포함할 수 있다. 이들 중 일부 디스플레이 모듈은, 그를 통해 외부를 볼 수 있도록 투명형 또는 광 투과형으로 구성될 수 있다. 이 는 투명 디스플레이 모듈이라 지칭될 수 있는데, 상기 투명 디스플레이 모듈의 대표적 인 예로는 TOLED(Transparent OLED) 등이 있다. 입력부는 사용자에 의해서 입력된 정보를 수신할 수 있다. 입력부는 사용자에 의해서 입력된 정보를 수신하기 위한 사용자 인터페이스 상의 키 및/또는 버튼들, 또는 물리적인 키 및/또는 버튼들을 구비할 수 있다. 입력부 를 통한 사용 자 입력에 따라 본 개시의 실시예들에 따른 디스플레이를 제어하기 위한 컴퓨터 프로그램이 실행 될 수 있다. 그래프 풀링은 일반적으로 클러스터 수를 각 레이어에 대해 하이퍼파라미터로 사전 정의할 수 있다. 이는, 각 그래프가 다양한 수의 유용한 하위 구조를 가질 수 있는 분자 특성 예측과 같은 유도 설정에서 부합하지 않을 수 있다. 본 개시는 그래프 데이터를 기반으로 다양한 수의 클러스터로 모델을 풀링하기 때문에, 분자 특성 예측을 비롯 한 계층적 구조를 갖는 그래프 데이터에 대한 학습 성능이 향상될 수 있다. 본 개시의 GMPool은 그룹화 행렬의 랭크(rank)를 통해 상술한 클러스터 수의 다양성을 허용할 수 있다. 즉, 본 개시는 추가적인 하이퍼파라미터 튜 닝을 통해 클러스터 수를 수동으로 조정하는 과정을 생략할 수 있다는 것이다. 도 5는 본 개시의 학습 처리 방법을 설명하기 위한 흐름도이다. 도 5를 참고하면, 학습 처리 장치의 프로세서는 그래프 데이터를 수신할 수 있다. 다음, 프로세서는 그래프 데이터를 사전에 학습된 제1 인공지능 모델에 입력함에 따라 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성할 수 있다. 프로세서는 그래프 데이터 내 복수의 노드 및 복수의 노드 간의 연결관계를 기 설정된 그룹핑 기준에 따른 유사도를 기초로 0 이상 내지 1 이하의 식별자로 지정하여 그룹화할 수 있다. 즉, 프로세서는 그래프 데이 터 내 복수의 노드 및 복수의 노드 간의 연결관계를 0, 1, 및 0 내지 1 사이(0~1) 중 어느 하나의 식별자로 지 정하여 그룹화할 수 있다는 것이다. 이때, 0은 서로 다른 그룹, 1은 동일 그룹, 0 내지 1 사이([0, 1])는 동일한 그룹으로 판단되는 정도에 따라 다 른 값을 의미할 수 있다. 다음, 프로세서는 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하되, 그룹화 행렬을 제곱근 형태로 분해하여 풀링 연산자를 획득할 수 있다. 상기 풀링 연산자는 각 그룹별 노드 현황을 포함하는 트 랜스포메이션 행렬 형태일 수 있다. 프로세서는 풀링 후 그룹 수 및 동일 그룹 내 할당된 노드를 포함하여 풀링 연산자를 생성할 수 있다. 프로세서는 수학식 13 및 수학식 16을 기초로 풀링 연산자를 생성할 수 있다. 다음, 프로세서는 출력 그래프를 획득할 수 있다. 상기 출력 그래프는 하나의 그룹이 하나의 노드처럼 작동할 수 있다. 도 6은 본 개시의 인공지능 모델을 학습시키는 방법을 설명하기 위한 흐름도로서, 상술한 도 1 및 도 5에서 언 급된 인공지능 모델을 학습시키는 방법을 예로 들어 설명하기로 한다. 이하에서는, 상술한 제1 및 제2 인공지능 모델을 모두 인공지능 모델이라고 하기로 한다. 먼저, 학습 처리 장치의 프로세서는 그래프 데이터를 수집할 수 있다. 이때, 그래프 데이터는 복수일 수 있다. 다음, 프로세서는 수집된 그래프 데이터를 이용하여 인공지능 모델을 학습시킬 수 있다(2200~2300). 구체적으로, 프로세서는 수집된 그래프 데이터를 이용하여 쌍별 노드(pairwise node)의 유사도를 기반으로 그룹핑 한 2차 형태의 그룹화 행렬을 생성할 수 있다. 다음, 프로세서는 그룹화 행렬을 분해하여 풀링 행렬(pooling matrix)을 생성하여 출력하되, 그룹화 행렬 을 제곱근 형태로 분해하여 풀링 연산자를 획득할 수 있다. 즉, 본 개시의 인공지능 모델은 그래프 데이터가 입력되면, 이를 데이터 셋으로 설정하여 2차 형태의 그룹화 행 렬을 생성하고, 그룹화 행렬을 분해하여 풀링 행렬을 생성 및 출력할 수 있도록 학습될 수 있는 것이다. 한편, 도 6에서 설명의 편의를 위해 개시하지 않았지만, 인공지능 모델이 도 1 및 도 5의 제1 및 제2 인공지능 모델의 역할을 추가 수행할 수 있도록 학습되는 것은 당연하다 할 것이다. 상술한 본 개시는 소셜 데이터(social data), 저작권 데이터(authorship data) 및 분자를 비롯하여 계층적 구조 를 갖는 모든 그래프 데이터에 적용될 수 있다. 한편, 전술한 본 개시에 따른 방법은, 하드웨어인 서버와 결합되어 실행되기 위해 프로그램(또는 애플리케이 션)으로 구현되어 매체에 저장될 수 있다. 개시된 실시예들은 컴퓨터에 의해 실행 가능한 명령어를 저장하는 기록매체의 형태로 구현될 수 있다. 명령어는 프로그램 코드의 형태로 저장될 수 있으며, 프로세서에 의해 실행되었을 때, 프로그램 모듈을 생성하여 개시된 실시예들의 동작을 수행할 수 있다. 기록매체는 컴퓨터로 읽을 수 있는 기록매체로 구현될 수 있다. 컴퓨터가 읽을 수 있는 기록매체로는 컴퓨터에 의하여 해독될 수 있는 명령어가 저장된 모든 종류의 기록 매체 를 포함한다. 예를 들어, ROM(Read Only Memory), RAM(Random Access Memory), 자기 테이프, 자기 디스크, 플 래쉬 메모리, 광 데이터 저장장치 등이 있을 수 있다."}
{"patent_id": "10-2022-0154579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 26, "content": "이상에서와 같이 첨부된 도면을 참조하여 개시된 실시예들을 설명하였다. 본 개시가 속하는 기술분야에서 통상 의 지식을 가진 자는 본 개시의 기술적 사상이나 필수적인 특징을 변경하지 않고도, 개시된 실시예들과 다른 형 태로 본 개시가 실시될 수 있음을 이해할 것이다. 개시된 실시예들은 예시적인 것이며, 한정적으로 해석되어서 는 안 된다."}
{"patent_id": "10-2022-0154579", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 학습 처리 장치의 블록도 도 2는 도 1의 일부 구성을 상세하게 설명하기 위한 블록도 도 3은 본 개시의 프레임워크를 나타내는 도면 도 4는 본 개시의 학습 처리 방법을 설명하기 위한 예시도 도 5는 본 개시의 학습 처리 방법을 설명하기 위한 흐름도 도 6은 본 개시의 인공지능 모델을 학습시키는 방법을 설명하기 위한 흐름도"}
