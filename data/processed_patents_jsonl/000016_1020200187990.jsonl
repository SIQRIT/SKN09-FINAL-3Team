{"patent_id": "10-2020-0187990", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0005833", "출원번호": "10-2020-0187990", "발명의 명칭": "게임 환경 변경 방법", "출원인": "넷마블 주식회사", "발명자": "박승제"}}
{"patent_id": "10-2020-0187990", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프 로그램은 하나 이상의 프로세서에서 실행되는 경우 게임 환경 변경을 위한 이하의 동작을 수행하도록 하며, 상기 동작은, 플레이어의 활동내역을 획득하는 동작; 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하 는 동작; 및 상기 상관 관계에 기초하여 게임 환경의 변경을 결정하는 동작을 포함할 수 있다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 게임 운영 기술에 관한 것으로써 보다 구체적으로는 게임 환경을 변경하기 위한 방법에 관한 것이다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 통신 기술의 발달로 게임을 즐기는 사람이 증가하면서 전략 시뮬레이션 게임, 롤플레잉 게임 등 다양한 종 류의 게임이 개발되었다. 이러한 게임들은 온라인 및 오프라인 상황에서도 게임을 진행할 수 있고, 특히 온라인 게임은 시공간의 제약이 없어 수많은 유저들이 쉽게 모여 함께 게임을 즐길 수 있다. 게임은 승리 또는 패배와 같은 결과를 가지게 되며, 게임을 플레이하는 유저들은 손쉽게 연승을 하거나, 연패를 당하는 경우 게임에 대한 흥미를 상실할 수 있고, 이는 게임에서의 이탈로 연결될 수 있다. 그러므로 수많은 유 저들이 존재하는 온라인 게임에서는, 게임 유저들의 관심을 유지하고, 흥미를 유발하도록 게임이 더욱 다양하게 진행될 필요가 있다. 대한민국 등록특허 10-1868286 호는 게임 맵 랜덤 생성 장치 및 방법을 개시한다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 게임 운영을 위한 방법을 제공하기 위한 것이다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장되어 컴퓨터로 하여금 이하의 동작들을 수행하도록 하는 명령들을 포함하는 컴퓨터 프로그램이 개시된다. 상기 동작 들은, 플레이어의 활동 내역을 획득하는 동작; 상기 플레이어의 활동 내역과 게임 환경과의 상관관계를 분석하 는 동작; 및 상기 상관 관계에 기초하여 게임 환경의 변경을 결정하는 동작을 포함할 수 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역은, 실제 플레이어의 활동 내역 및 인공지능 플레이어의 활동 내 역 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역은, 실제 플레이어의 활동 내역 및 인공지능 플레이어의 활동 내 역 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 상기 인공지능 플레이어는, 강화학습 모델에 기초하여 게임 동작을 결정하는 플레이어로서, 게임 상태로부터 정책 네트워크(policy network)를 통해 결정되는 게임 동작을 수행하고, 상기 게임 상태로부터 가치 네트워크(value network)를 통해 게임 상황을 판단하는 플레이어를 포함할 수 있다. 대안적 실시예에서, 상기 강화학습 모델은, 실제 플레이어의 활동 내역에 기초하여 학습되며, 특정 시점에서의 게임 환경을 포함하는 상기 게임 상태를 상기 정책 네트워크 및 상기 가치 네트워크를 이용하여 연산함으로써, 상기 게임 상태에서의 리워드를 연산하고, 상기 게임 상태에서 상기 리워드를 최대화 할 수 있는 상기 게임 동 작을 인공지능 플레이어가 수행하도록 하는 모델을 포함할 수 있다. 대안적 실시예에서, 상기 플레이어어의 활동 내역은, 상기 게임 환경에서 복수의 상기 인공지능 플레이어를 병 렬적으로 플레이 하도록 하여 획득된 활동 내역 및 상기 게임 환경에서 상기 인공지능 플레이어의 플레이를 실 제 플레이보다 가속시켜 획득된 활동내역 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 상기 플레이어 활동 내역은, 상기 게임 환경에서 둘 이상의 플레이어들의 게임 결과와 관련 한 정보를 포함할 수 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하는 동작은, 상기 게임 환경 에서 인게임 오브젝트 요소, 게임 모드 요소 및 플레이어 요소 중 적어도 하나와 상기 활동 내역의 게임 결과와 의 상관 관계를 분석하는 동작을 포함할 수도 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하는 동작은, 상기 게임 환경 을 강화학습 모델을 이용하여 분석함으로써, 상기 게임 환경과 게임 결과의 상관 관계를 분석하는 동작을 포함 할 수 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하는 동작은, 상기 게임 환경 과 상기 플레이어의 활동 내역의 게임 결과를 변량으로 하는 상관계수 산출을 통해 상기 게임 환경과 게임 결과 의 상관 관계를 분석하는 동작을 포함할 수 있다. 대안적 실시예에서, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석은, 상기 게임 환경에 기초하 여 달라지는 상기 플레이어의 승률 분석을 포함할 수 있다. 대안적 실시예에서, 상기 상관 관계에 기초하여 게임 환경의 변경을 결정하는 동작은, 상기 게임 환경의 인게임 오브젝트 요소를 사전 결정된 게임 결과가 도출되도록 변경하는 동작을 포함할 수 있다. 대안적 실시예에서, 상기 사전 결정된 게임 결과는, 게임의 운영과 관련하여 의도되는 게임 결과로서, 게임 모 드 요소, 및 사전 결정된 플레이어 요소 중 적어도 하나에 기초하여 의도되는 게임 결과를 포함할 수 있다. 대안적 실시예에서, 상기 인게임 오브젝트 요소는, 게임 내에서 플레이어의 캐릭터와 상호작용할 수 있는 요소 를 포함할 수 있다. 대안적 실시예에서, 상기 변경된 게임 환경에서 플레이어의 추가 활동 내역을 획득하는 동작; 및 상기 추가 활 동 내역과 상기 변경된 게임 환경과의 상관 관계를 분석하는 동작을 더 포함할 수 있다. 본 개시의 다른 일 실시예에 따라 게임 환경과 플레이어의 활동 내역의 상관관계에 따라 게임 환경을 변경하는 방법이 개시된다. 플레이어의 활동 내역을 획득하는 단계; 상기 플레이어의 활동 내역과 게임 환경과의 상관 관 계를 분석하는 단계; 및 상기 상관 관계에 기초하여 게임 환경의 변경을 결정하는 단계를 포함할 수 있다. 본 개시의 다른 일 실시예에 따라 컴퓨팅 장치가 개시된다. 상기 컴퓨팅 장치는 하나 이상의 프로세서; 및 상기 프로세서에서 실행가능한 명령들을 저장하는 메모리; 를 포함하고, 상기 하나 이상의 프로세서는, 플레이어의 활동 내역을 획득하고, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하고, 상기 상관 관계에 기초하여 게임 환경의 변경을 결정할 수 있다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 게임 운영을 위한 방법을 제공할 수 있다."}
{"patent_id": "10-2020-0187990", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조 합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지 식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 도 1은 본 개시의 일 실시예에 따른 게임 환경의 변경을 수행하는 컴퓨팅 장치의 블록 구성도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 컴퓨팅 장치는 프로세서, 메모리, 네트워크부를 포함할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장 치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서 는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 게임 환경의 변경을 결 정하는 동작을 수행할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행 할 수 있다. 프로세서는 딥러닝(DN: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에 서의 피쳐(feature) 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중 치 업데이트 등의 신경 망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함 수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하 여 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예 에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 프로세서는 게임 환경을 새롭게 변경하는 동작을 수행할 수 있다. 프로세서는 게임 환경과 플레이어 활동 내역의 상관관계에 따라 게임 환경을 변경하는 동작을 수행할 수 있다. 플레이어의 활동 내역은 플레이어 가 게임 상에서 수행한 모든 활동의 기록을 포함할 수 있다. 플레이어의 활동 내역은 예를 들어, 게임 환경에서 활동한 기록으로서 액션 로그를 포함할 수 있다. 액션 로그는 게임 환경에서 플레이어가 조종하는 캐릭터의 활 동이 있을 때, 그 즉시 남는 기록을 포함한다. 예를 들어, 본 개시의 플레이어의 활동 내역은 캐릭터 플레이 타 임, 계정 플레이 타임, 아이템별 사용빈도, 개인상점 거래품목, 아이템 생성, 아이템 습득, 아이템 드랍, 아이 템 소비, 아이템 생성, 아이템 소멸, 아이템 거래, 아이템 강화, 캐릭터 이동, 캐릭터 사망, 캐릭터 레벨업, 캐 릭터 생성, 캐릭터 공격, 캐릭터 방어, 서버 시작과 종료시간, 서버 응답시간, 운영자 명령어, 몬스터 생성, 현 재 캐릭터가 착용하고 있는 아이템 등을 포함할 수 있다. 전술한 활동 내역의 항목들은 예시일 뿐이며 본 개시 는 이에 제한되지 않는다. 프로세서는 플레이어의 활동 내역을 획득할 수 있다. 활동 내역은 네트워크부를 통하여 네트워크를 통해 수신될 수 있다. 상기 활동 내역은 메모리에 저장될 수 있다. 본 개시의 일 실시예에서, 플레이어의 활동 내역은 실제 플레이어의 활동 내역 및 인공지능 플레이어의 활동 내 역을 포함할 수 있다. 실제 플레이어는 게임을 플레이하는 인간 유저를 포함할 수 있다. 인공지능 플레이어의 활동 내역은 실제 플레이어의 플레이에 의하지 않은 모든 활동 기록을 포함할 수 있다. 예를 들어, 인공지능 플 레이어는 모든 종류의 논 플레이어를 포함할 수 있다. 논 플레이어는 게임에서 사람이 직접 조작하지 않는 플레 이어일 수 있다. 전술한 플레이어는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 인공지능 플레이어는 게임 환경에 기초하여 결정되는 게임 동작을 수행하는 플레이어 를 포함할 수 있다. 게임 환경에 기초하여 결정되는 게임 동작을 수행하는 플레이어는 게임에서 동작을 결정하 기 위한 임의의 알고리즘에 의하여 게임 동작을 결정할 수 있다. 예를 들어, 인공지능 플레이어는 게임의 승리 를 위한 알고리즘에 기초하여 게임에서의 의사 결정을 수행할 수 있다. 상기 알고리즘은 주어진 게임환경에서 인공지능 플레이어가 최적의 선택을 하는 것을 목표로 한다. 상기 알고리즘은 예를 들어, A* 알고리즘, 결정트 리, 명령 계통구조, 장애물 회피, 지형분석 등을 포함할 수 있다. A* 알고리즘은 시작점에서부터 목표지점까지 최단 경로를 찾아내는 알고리즘이다. 결정트리는 사전 결정된 트리 구조에 새로운 상황을 입력하면 기존 트리에 입력되어 있는 상황들과 비슷한 상황을 찾아서 입력된 상황에서 해야 할 학습된 행동을 결정하게 되는 알고리즘이다. 전술한 인공지능 플레이어의 알고리즘은 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 인공지능 플레이어는 강화학습 모델에 기초하여 게임 동작을 결정하는 플레이어를 포 함할 수 있다. 강화학습 모델은 게임 상태로부터 정책 네트워크(Policy Network)를 통해 게임 동작을 결정하고, 상기 게임 상태로부터 가치 네트워크(Value Network)를 통해 게임에서 현재 상황과 리워드에 관한 정보를 판단 할 수 있다. 본 개시의 일 실시예에서, 상기 정책 네트워크(Policy Network)는 입력으로 게임 상태가 주어졌을 때 현재 게임 상태에서 취할 수 있는 액션을 결정하기 위한 네트워크일 수 있다. 따라서 상기 정책 네트워크 (Policy Network)는 현재 상태가 주어졌을 때, 현재 상태에서 최대 리워드를 획득하기 위한 액션에 대한 확률을 학습하여 현재 상태에서 취할 수 있는 각각의 액션에 대한 확률을 출력할 수 있다. 본 개시의 일 실시예에서, 상기 가치 네트워크(Value Network)는 현재 상태 및/또는 정책이 입력으로 주어졌을 때, 가치 함수(Value Function) 값을 예측하는 네트워크일 수 있다. 상기 가치 함수(Value function)는 입력된 현재 상태와 정책을 기초로 기대되는 리워드를 도출할 수 있다. 예를 들어, 가치 함수에서 출력되는 리워드는 미래 리워드들의 총합 의 평균일 수 있다. 상기 리워드는 현재 상태에서 어떤 정책을 취했을 때 얻어지는 보상일 수 있다. 예를 들어, 게임에서 리워드는 승률을 포함할 수 있다. 전술한 리워드는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 강화학습 모델은 실제 플레이어의 활동 내역에 기초하여 학습되며, 특정 시점에서의 게임 환경을 포함하는 상기 게임 상태를 상기 정책 네트워크(policy network) 및 상기 가치 네트워크(value network)를 이용하여 연산함으로써, 상기 게임 상태에서의 리워드를 연산하고, 상기 게임 상태에서 상기 리워드 를 최대화 할 수 있는 상기 게임 동작을 인공지능 플레이어가 수행하도록 하는 모델일 수 있다. 본 개시의 일 실시예에서, 강화학습 모델은 교사 학습(Supervised Learning)된 모델일 수 있다. 교사 학습된 모 델은 실제 플레이어의 활동 내역을 학습하여 게임 환경에서 플레이할 수 있다. 교사 학습된 모델은 인간 게이머 의 활동 내역을 학습데이터로 하여, 인간 게이머들이 주어진 상황에서 선택한 액션에 대해 높은 확률을 갖도록 학습할 수 있다. 따라서 교사 학습된 모델은 인간 게이머의 게임 패턴을 학습하여 주어진 게임 환경에서 인간 게이머의 게임 패턴과 유사하게 플레이할 수 있다. 본 개시의 일 실시예에서, 강화학습 모델은 정책 네트워크(policy network) 및 상기 가치 네트워크(value network)를 사용한 모델일 수 있다. 정책 네트워크(policy network)는 교사 학습된 정책 네트워크(SL policy network) 및/또는 강화 학습된 정책 네트워크(RL policy network)일 수 있다. 강화 학습된 정책 네트워크(RL policy network)는 교사 학습된 정책 네트워크(SL policy network)를 기초로 초기화될 수 있으며, 리워드를 최 대화하도록 학습하는 네트워크일 수 있다. 교사 학습된 정책 네트워크(SL policy network)는 실제 플레이어들의 활동 내역을 기초로 학습된 네트워크일 수 있다. 가치 네트워크(value network)는 강화 학습된 정책 네트워크 (RL policy network)의 자가 대결(Self-play)을 기초로 학습하며, 주어진 상황에서 승률을 예측할 수 있다. 인공지능 플레이어를 제어하기 위한 강화학습 모델에 관련한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 네이처 논문 Mastering the game of Go with deep neural networks and tree search (공개 일: 2016년01월27일, 작성자: David Silver, Aja Huang, Chris J.Maddison, Arthur Guez, Laurent Sifre, George van den Driessche, Julian Schrittwieser, Ioannis Antonoglou, Veda Panneershelvam, Marc Lanctot, Sander Dieleman, Dominik Grewe, John Nham, Nal Kalchbrenner, Ilya Sutskever, Timothy Lillicrap, Madeleine Leach, Koray Kavukcuoglu, Thore Graepel & Demis Hassabis)에서 구체적으로 논의된다. 본 개시의 일 실시예에서, 강화학습 모델은 실제 플레이어의 활동 내역을 학습 데이터로 하지 않는 모델일 수 있다. 이는 인공지능 플레이어를 제어하기 위한 강화학습 모델이 강화 학습 방식만을 이용하고 교사 학습 방식 은 이용하지 않는 모델일 수 있다. 강화학습 모델은 학습을 위해 기본적인 게임 규칙만 입력된 상태에서, 강화 학습 네트워크 간 자가 대결(Self-play)을 할 수 있다. 강화학습 모델은 자가 대결(Self-play)을 통해 승자 네 트워크가 선택한 정책(policy)을 기초로 네트워크의 전체적인 정책을 개선하여 승률을 높일 수 있다. 전체적인 정책은 강화학습 모델이 취하는 행동들의 집합으로써, 주어진 상황에서 승률을 높이는 행동을 포함한다. 인공지능 플레이어를 제어하기 위한 강화학습 모델에 관련한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 네이처 논문 Mastering the game of Go without human knowledge (공개일: 2017년10월18일, 작성자: David Silver, Julian Schrittwieser, Karen Simonyan, Ioannis Antonoglou, Aja Huang, Arthur Guez, Thomas Hubert, Lucas Baker, Matthew Lai, Adrian Bolton, Yutian chen, Timothy Lillicrap, Fan Hui, Laurent Sifre, George van den Driessche, Thore Graepel & Demis Hassabis)에서 구체적으로 논의된다. 본 개시의 일 실시예에서, 상기 플레이어의 활동 내역은, 상기 게임 환경에서 복수의 상기 인공지능 플레이어를 병렬적으로 플레이 하도록 하여 획득된 활동 내역 및 상기 게임 환경에서 상기 인공지능 플레이어의 플레이를 실제 플레이보다 가속시켜 획득된 활동 내역 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에서, 프로 세서는 상기 인공지능 플레이어를 병렬적으로 플레이하도록 함으로써, 빠른 시간 내에 다수의 인공지능 플 레이어의 활동 내역을 얻을 수 있다. 즉, 본 개시의 일 실시예에서 프로세서는 복수의 인공지능 플레이어 로 하여금 게임 수행을 동시적으로 수행하도록 할 수 있다. 프로세서는 인공지능 플레이어의 게임 플레이 시뮬레이션을 병렬적으로 처리할 수 있다. 예를 들어, 프로세서는 인공지능 플레이어 A, B의 대전 게임을 시뮬레이션 하여 활동 내역을 획득하고자 하는 경우, 게임 플레이 시뮬레이션을 프로세서에서 병렬로 처리 하거나, 다른 컴퓨팅 장치와 연계하여 분산 처리할 수도 있다. 이러한 방식으로 프로세서는 통계적으로 처 리할 수 있는 충분한 수의 활동 내역을 신속하게 확보할 수 있다. 마찬가지로, 프로세서는 상기 인공지능 플레이어의 플레이를 실제 플레이보다 가속시켜, 빠른 시간 내에 인공지능 플레이어의 활동 내역을 얻을 수 있 다. 예를 들어, 플레이 타임이 5분 정도 걸리는 게임의 시뮬레이션 결과를 획득하기 위하여 프로세서는 게 임 자체의 진행 속도를 가속하여 1분 이내로 게임의 시뮬레이션 결과를 획득할 수 있다. 이러한 방식으로 프로 세서는 통계적으로 처리할 수 있는 충분한 수의 활동 내역을 신속하게 확보할 수 있다. 전술한 플레이 타 임에 관한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 상기 플레이어 활동 내역은, 상기 게임 환경에서 둘 이상의 플레이어들의 게임 결과 와 관련한 정보를 포함할 수 있다. 게임 결과는 게임의 일반적인 진행 상황이 종료되었을 때 결정될 수 있는 상 태일 수 있다. 둘 이상의 플레이어들의 게임 결과와 관련한 정보는, 예를 들어, 개인전의 승패결과, 팀전의 승 패결과, 개인전의 경우 상대방과의 점수차이, 팀전의 경우 상대방 팀과의 점수차이, 팀 내 구성원의 개별 점수 가 포함될 수 있는데, 전술한 사항들은 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 프로세서는 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석할 수 있다. 프로세서는 게임 환경과 활동 내역의 상관 관계를 활동 내역에 대한 통계적인 방법론 또는 강화학습 모델을 이용하여 분석할 수 있다. 전술한 사항들은 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 상기 게임 환경은 인게임 오브젝트 요소, 게임 모드 요소 및 플레이어 요소 중 적어 도 하나를 포함할 수 있다. 인게임 오브젝트 요소는 게임 내에서 플레이어와 상호작용할 수 있는 게임 내 요소 를 포함할 수 있다. 인게임 오브젝트 요소는 예를 들어, 플레이어가 게임 내에서 활동할 수 있는 맵을 포함할 수 있다. 인게임 오브젝트 요소는 예를 들어, 게임 환경에서 플레이어 캐릭터가 이동 가능한 요소, 게임 환경에 서 플레이어의 캐릭터 이동이 제한되는 요소, 플레이어 캐릭터에 사전 결정된 효과를 발생시키는 요소, 캐릭터 생성 위치 등을 포함할 수 있다. 전술한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 플레이어의 캐릭터 이동이 제한되는 요소는 예를 들어, 장애물, 언덕, 강 호수, 산, 건물, 덤불 등이 포함될 수 있다. 플레이어의 캐릭터에 사전 결정된 효과를 발생시키는 요소는 예를 들어, 캐릭터의 이동속도를 감소시키거 나 증가시키는 바람, 캐릭터의 체력을 감소시키거나 증가시키는 바람, 비 등이 포함될 수 있다. 캐릭터 생성 위 치는 예를 들어, 게임 시작할 때 플레이어의 캐릭터가 생성되는 위치, 플레이어의 캐릭터가 부활하는 위치, 및 NPC(Non-Player-Character), 몬스터, 절대자의 생성 위치 등을 포함할 수 있다. 전술한 사항들은 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 모드 요소는 게임의 형식과 관련한 요소를 포함할 수 있다. 게임 모드 요소는 예를 들어, 개인전, 팀전, 시간 내에 상대방 플레이어를 모두 섬멸하거나 임무를 완수하는 타임어택, 깃 발 뺏기, 상대편으로부터 아이템 지키기, 및 이벤트 게임모드 등을 포함할 수 있다. 플레이어 요소는 게임의 활 동 내역, 게임 결과에 영향을 미치는 플레이어에 관련한 요소를 포함할 수 있다. 예를 들어, 플레이어 요소는 플레이어간 실력차, 플레이어 실력차에 따른 플레이어 조합, 캐릭터 능력치에 따른 플레이어 조합, 캐릭터 상성 관계를 포함할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 프로세서는 상기 게임 환경을 강화학습 모델을 이용하여 분석함으로써, 상기 게 임 환경과 게임 결과의 상관 관계를 분석할 수 있다. 프로세서는 강화학습 모델을 이용하여 특정 게임환경 에서 플레이어의 게임 결과를 예측할 수 있다. 프로세서는 게임 환경에서 플레이어들의 활동 내역과 게임 결과를 학습데이터로 강화학습 모델을 학습시킬 수 있고, 강화 학습 모델을 이용하여 게임 환경의 인게임 오브 젝트 요소, 게임 모드 요소 및 플레이어 요소에 따른 게임 결과를 예측할 수 있다. 예를 들어, 캐릭터의 체력을 소진시키는 몬스터가 배치되는 위치에 따라 플레이어의 활동 내역으로부터 플레이어의 승패데이터가 축적되고, 이러한 승패 데이터, 활동 내역을 강화학습 모델에 학습시킴으로써, 프로세서는 강화학습 모델을 이용하여 상기 몬스터 위치에 따라 달라지는 플레이어의 승패 확률을 예측할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다.본 개시의 일 실시예에서, 프로세서는 게임 환경과 상기 플레이어의 활동 내역의 게임 결과를 변량으로 하 는 상관계수 산출을 통해 상기 게임 환경과 게임 결과의 상관 관계를 분석할 수 있다. 상기 상관계수는 입력된 변량 사이의 상관 관계를 수치로 나타낸 값으로써, 변량 간에 상관 관계가 클수록 상관계수 값은 높게 도출될 수 있다. 예를 들어, 변량이 인게임 오브젝트 위치와 플레이어 게임 승패 결과 인 경우, 게임 오브젝트 위치가 변동됨에 따라 플레이어 게임 승패 결과가 큰 폭으로 변동한다면 상관 계수가 높게 계산될 것이다. 따라서 프로 세서는 게임 오브젝트의 위치는 플레이어 승패 결과에 큰 영향을 미친다는 상관 관계 분석 결과를 획득할 수 있다. 프로세서는 이러한 상관 관계 분석을 통하여 게임 요소가 게임의 결과에 미치는 영향을 판단할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 프로세서는 상기 게임 환경에 기초하여 변경되는 플레이어의 승률을 분석할 수 있다. 예를 들어, 프로세서는 게임 환경 내에 캐릭터의 생성 위치에 따라 변화하는 플레이어의 승률을 분 석할 수 있다. 예를 들어, 프로세서는 활동 내역과 게임 환경과의 상관 관계 분석을 통해 플레이어가 게임 환경 내 A 라는 위치에서 캐릭터가 생성되었을 경우에는 승률이 30% 였으나, 게임 환경 내 B 라는 위치에서 캐 릭터가 생성되었을 경우 승률이 70% 라는 데이터를 획득할 수 있다. 이 경우 프로세서는 게임 환경 내 B 라는 위치에서 캐릭터가 생성되었을 경우 플레이어의 승률이 상승한다는 분석 결과를 얻을 수 있다. 이러한 분 석 결과에 기초하여 프로세서는 게임 환경을 적절히 변경할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 프로세서는 플레이어의 활동 내역과 게임 환경과의 상관 관계에 기초하여 게임 환경의 변경을 결정할 수 있다. 본 개시의 일 실시예에서, 프로세서는 게임 환경의 인게임 오브젝트 요소를 사전 결정된 게임 결과 가 도출되도록 변경할 수 있다. 본 개시의 일 실시예에서, 상기 사전 결정된 게임 결과는, 게임 운영과 관련하 여 의도되는 게임 결과로서, 게임 모드 요소, 및 사전 결정된 플레이어 요소 중 적어도 하나에 기초하여 의도되 는 게임 결과를 포함할 수 있다. 상기 운영과 관련하여 의도되는 게임 결과는, 예를 들어 연패 중인 실제 플레 이어의 게임 이탈 방지를 위해 인게임 오브젝트 위치를 변경함으로써 실제 플레이어가 새로운 게임 환경에서 승 리할 수 있도록 하는 것을 포함할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 상기 인게임 오브젝트 요소는, 게임 내에서 플레이어의 캐릭터와 상호작용할 수 있는 요소를 포함할 수 있다. 상기 캐릭터와 상호작용할 수 있는 요소에는 상기 게임 환경에서 플레이어의 산, 강, 절벽 등과 같이 캐릭터의 이동을 제한할 수 있는 요소, 도로, 평지, 초원 등과 같이 캐릭터의 이동이 가능한 요 소, 늪지, 숲, 사막, 바람, 돌풍, 비, 눈, 우박 등과 같이 캐릭터의 이동속도에 영향을 미치는 요소, 캐릭터의 체력을 회복시키는 장소, 캐릭터의 체력을 감소시키는 장소, 함정, 게임 아이템, NPC 캐릭터 및 건물 등을 포함 할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 프로세서는 변경된 게임 환경에서 플레이어의 추가 활동 내역을 획득할 수 있고, 상기 추가 활동 내역과 상기 변형된 게임 환경과의 상관 관계를 분석할 수 있다. 상기 변경된 게임 환경 에서 플레이어의 추가 활동 내역은 네트워크부를 통해 수신될 수 있고, 상기 추가 활동 내역은 메모리 에 저장될 수 있다. 본 개시의 일 실시예에서, 상기 추가 활동 내역은 예를 들어 인게임 오브젝트의 위치 가 변경된 맵에서 실제 플레이어 또는 인공지능 플레이어가 활동한 활동 내역을 포함할 수 있다. 상기 추가 활 동 내역과 상기 변형된 게임 환경과의 상관 관계를 분석하여 맵 에디터는 실시간으로 사전 결정된 게임 결과를 도출하기 위해 게임 환경을 변경할 수 있다. 상기 맵 에디터는 게임 환경을 변경하는 기록매체에 저장된 컴퓨터 프로그램일 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 서, 실시간으로 게임 환경 변경을 통해 새로운 게임 환경을 생성함으로써, 실제 플레이어들은 게임에 대한 흥미 를 유지하고, 지형에 따라 고착화된 전략이 생겨 반복되는 게임 플레이 패턴을 제거함으로써 실제 플레이어들이 게임플레이 할 때마다 새로움을 느껴 게임에서 이탈하지 않을 수 있다. 본 개시의 일 실시예에서, 프로세서는 게임 환경에서 변경되는 인게임 오브젝트 요소의 비율을 정할 수 있 다. 게임 환경에서 인게임 오브젝트 요소가 높은 비율로 변경되는 경우, 프로세서는 새로운 환경에서 인공 지능 플레이어를 제어하기 위한 강화학습 모델을 학습시켜야 하므로, 새로운 게임 환경에서 게임 환경과 플레이 어의 활동 내역과의 상관 관계 분석을 위해 과도한 연산이 필요할 수 있다. 따라서 프로세서가 게임 환경 에서 변경되는 인게임 오브젝트 요소의 비율을 조절할 수 있도록 함으로써, 게임 플레이할 경우 프로세서 의 연산량을 감소시켜 원활한 게임 플레이를 실제 플레이어가 즐길 수 있도록 할 수 있다. 본 개시의 일 실시예에 따른 게임환경 변경 방법은 실제 플레이어 뿐만 아니라 인공지능 플레이어의 활동 내역 도 포함시킴으로써, 실제 플레이어의 플레이 패턴에 한정하여 상관 관계를 분석하지 않고, 실제 플레이어가 플레이하지 않은 플레이 패턴에 대해서도 게임 환경과 활동 내역의 상관 관계를 분석할 수 있게 되어, 실제 플레 이어가 다양한 패턴으로 게임 플레이를 시도하더라도 정확한 게임 결과 예측이 가능하므로, 사전 결정된 게임 결과가 도출될 수 있다. 또한 인공지능 플레이어의 활동 내역을 통해 보다 많은 표본을 가지고 게임 환경과 활 동 내역을 분석할 수 있다. 상기 상관 관계에 기초하여 게임 환경을 변경함으로써, 실제 플레이어들이 게임을 즐길 수 있는 게임 환경이 다양해지고, 실제 플레이어들이 게임 환경에서 승리 패턴을 쉽게 파악하지 못하여 특 정 플레이어가 연승하는 것을 방지하고, 연패 중인 플레이어에게는 게임 환경에 유리하게 변경되어 저하된 게임 의욕을 다시 고취시켜 게임 이탈을 방지할 수 있다. 도 2는 본 개시의 일 실시예에 따라 인공지능 플레이어의 게임 활동을 결정하기 위한 강화학습 모델의 기반이 되는 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경 우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하는 링크 에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들을 포함하여 구성될 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노 드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거 리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어 의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의 될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미 할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동 일할 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어 의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형 태의 신경망일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출 력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태 의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사 한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어의 노드의 수 는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 이 경우, 도 2의 예시에서는 차원 감소 레이 어와 차원 복원 레이어가 대칭되는 것으로 도시되어 있으나, 본 개시는 이에 제한되지 않으며, 차원 감소 레이 어와 차원 복원 레이어의 노드는 대칭일 수도 있고 아닐 수도 있다. 오토 인코더는 비선형 차원 감소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 남은 센서들의 수와 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 출력의 오류를 최소 화하기 위한 것이다. 뉴럴 네트워크의 학습에서 반복적으로 학습 데이터를 뉴럴 네트워크에 입력시키고 학습 데 이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 뉴럴 네트워 크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데 이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴 럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨이 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류 가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전 파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이 트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학 습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습 률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 생략하는 드롭아웃(dropout) 등의 방법이 적용될수 있다. 도 3은 본 개시의 일 실시예에 따른 인공지능 플레이어를 제어하기 위한 강화학습 모델의 각각의 모듈을 예시적 으로 도시한 블록 구성도이다. 인공지능 플레이어를 제어하기 위한 강화학습 모델에 관련한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 미국 등록특허 US7837543 (출원일: 2004년04월30일)에서 구체적으로 논의된다. 적응형 에이전트는 컴퓨터로 제어되는 에이전트일 수 있다. 일반적으로, 적응형 에이전트는 명백한 목표가 있을 수 있다. 적응형 에이전트는 개발단계에서 설정된 목표가 있을 수 있으며, 목표는 게임이 진 행됨에 따라 변경될 수 있다. 적응형 에이전트는 자신의 주변 환경을 감지할 수 있으며, 정책에 따라 행 동을 선택하여 주변 환경에 영향을 줄 수 있다. 적응형 에이전트는 본 개시의 일 실시예에서 게임 동작을 수행하는 인공지능 플레이어 일 수 있다. 게임 엔진은 게임 환경을 제공할 수 있다. 일반적으로, 주어진 상태 st 와 행동 at 으로부터 게임 엔진 은 주어진 환경에서 다음 상태 st+1를 예측한다. 시간간격t는 개발단계에서 미리 정해 놓은 것으로써, 게 임 환경에서 기본적인 시간간격을 나타낸다. 예를 들어, 게임에서의 시간 간격은 비디오의 한 프레임, 실시간 시뮬레이션에서의 사전 결정된 시간 간격 및 동일한 간격을 가지는 시간 간격일 수 있다. 정책은 게임환경에서 적응형 에이전트가 주어진 시간내에 하는 행동을 결정할 수 있다. 일반적으로 정책은 게임 환경에서의 상태와 게임 환경에서의 상태로부터 취하는 행동을 맵핑(mapping)시킨다. 상태집합은 게임 환경에서 적응형 에이전트가 직면할 수 있는 상태들을 모두 포함하며, 행동집합은 현재 게임 환경 상태에서 취할 수 있는 모든 행동들을 포함한다. 보상 모듈은 사전 결정된 목표를 달성하기 위해 현재 게임 상태에서 선택된 행동이 효과적인지 평가하여 정책을 변경할 수 있다. 보상 모듈은 전형적인 목표를 정의하며, 전형적인 목표는 개발단계에서 특 정될 수 있다. 일반적으로, 보상 모듈은 게임 시간 간격t가 아닌 행동 시간 간격n에 따라 동기화된다. 행동 시 간n은 일련의 행동에 포함된 하나의 행동이 시작하여 끝날 때까지 걸린 시간을 의미한다. 보상 모듈은 인 지된 상태 또는 상태-행동 쌍을 보상 변수 rn 과 맵핑(mapping)시킨다. 적응형 에이전트는 일련의 행동들 을 통해 보상 합계가 최대가 되도록 노력한다. 전술한 컴포넌트들은 프로세서 상에서의 연산에 사용되는 소프트웨어 모듈일 수 있으며, 각각의 동작을 수 행하기 위하여 고안된 하드웨어 모듈일 수도 있다. 도 4a 및 도 4b는 본 개시의 일 실시예에 따른 게임 오브젝트와 게임 결과의 상관 관계에 기초하여 게임 환경의 변경을 결정하는 동작을 설명하기 위한 예시도이다. 도 4a 및 도 4b에는 하나 이상의 게임 오브젝트가 표시되어 있다. 도 4a를 참조하면 게임 오브젝트인 덤불 , 블록, 캐릭터 생성위치 및 각 캐릭터별 승률이 도시되어 있다. 덤불은 캐릭터가 통 과해서 이동할 수 있는 게임 오브젝트이지만, 플레이어의 캐릭터가 덤불에 위치하는 경우 플레이어의 캐릭터는 상대팀 시야에 보이지 않는 게임 오브젝트이며, 블록은 캐릭터가 통과해서 이동할 수 없는 게임 오브젝트 이다. 캐릭터 생성위치는 게임이 시작할 때 플레이어의 캐릭터가 생성되는 위치이다. 전술한 각각의 게임 오브젝트 별 효과는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 도 4a에 도시된 게임 환경(예를 들어, 대전 게임의 플레이 맵)에서, 각각의 캐릭터의 승률이 참조번호 240과 같 이 예시될 수 있다. 각각의 캐릭터의 승률은 전술한 바와 같이 플레이어의 활동 내역을 기초로 획득될 수 있다. 전술한 바와 같이, 인공지능 플레이어 또는 실제 플레이어의 활동 내역을 기초로 도 4a에 도시된 게임 환경에서 의 각각의 캐릭터의 승률이 획득될 수 있다. 컴퓨팅 장치는 도 4a와 같은 게임 환경에서 인공지능 플레이어의 시뮬레이션에 의하여 획득된 활동 내역 또는 실제 플레이어의 활동 내역으로부터 각각의 캐릭터 별 승률을 획득할 수 있다. 컴퓨팅 장치는 게임 환경과 활동 내역의 상관 관계를 분석할 수 있다. 컴퓨팅 장치는 예를 들어, 강화학습 모델을 이용하여 게 임 환경과 활동 내역의 상관 관계를 획득할 수 있다. 또한, 도 4a에 도시된 캐릭터 별 승률은 인공지능 플레이어의 시뮬레이션에 의하여 획득된 활동내역 또는 실제 플레이어의 활동 내역으로부터 획득될 수도 있으나, 본 개시의 일 실시예에서, 게임 환경과 활동 내역의 상관 관계 분석이 완료된 경우, 활동 내역 없이도, 게임 환경 만으로 예측되는 승률이 획득될 수도 있다. 컴퓨팅 장 치는 본 개시의 일 실시예에 따라 게임 환경과 활동 내역의 상관관계를 사전에 분석하였으므로, 도 4a와 같은 게임 환경으로부터 각 캐릭터 별 승률을 추측할 수 있다. 컴퓨팅 장치는 게임 환경과 활동 내역의 상 관 관계에 기초하여 게임 환경으로부터 예상되는 캐릭터 별 승률을 획득할 수 있다. 게임 맵을 생성하는 맵 에디터 사용자는 본 개시의 일 실시예의 게임 환경과 활동 내역의 상관관계 분석에 기초 하여, 맵을 편집하면서, 각각의 캐릭터, 진영(예를 들어, 하나 이상의 플레이어가 게임을 시작하는 위치 등) 별 승률을 확인할 수 있다. 컴퓨팅 장치는 게임 환경과 활동 내역의 상관관계에 기초하여, 게임 환경에서 예 상되는 활동 내역(즉, 승률 등)에 관한 추정 정보를 생성하여 사용자에게 제공할 수 있다. 맵 에디터의 사용자 는 맵을 실제로 플레이어들에게 플레이 시켜 보지 않고서도 자신이 생성하는 맵이 자신의 의도와 부합하는지(예 를 들어, 밸런싱, 특정 진영, 특정 캐릭터에게 유리하게 배치 등)를 알 수 있다. 도 4b는 게임 환경이 변경된 경우에 변화하는 캐릭터 별 승률을 나타낸 예시도이다. 도 4b의 게임 환경에서의 승률 또한 실제 플레이어의 플레이 결과, 인공지능 플레이어의 시뮬레이션 결과로 획득되거나, 게임 환경과 활 동 내역의 상관 관계에 기초하여 플레이어들의 플레이 없이도 획득될 수 있다. 도 4b의 예시에서 참조번호 202 영역을 보면, 도 4a의 게임 맵에 비하여 덤불과 장애물의 영역이 증가하였음을 알 수 있다. 도 4b의 예시에서, 맵의 게임 오브젝트 변경에 따라서 각각의 캐릭터들의 승률이 캐릭터 A가 36%에서 85%로, 캐릭터 B가 70%에서 50%로, 캐릭터 C가 80%에서 45% 로 변경되었음을 알 수 있다. 게임 맵을 생성하는 맵 에디터 사용자는 도 4a의 예시와 같은 게임 맵을 도 4b와 같이 변경시키면서 각각의 캐릭터 별 승률에 기초하여 캐릭터 별 유불리를 판단 할 수 있다. 컴퓨팅 장치는 캐릭터 A로 플레이 중인 사용자가 연패중인 경우, 사용자가 플레이 할 게임의 맵을 도 4a에 서 도 4b의 예시와 같이 변경할 수 있다. 이러한 경우, 사용자는 캐릭터 A가 유리한 맵에서 플레이를 할 수 있 으며, 연패에서 탈출할 가능성이 높아지게 된다. 컴퓨팅 장치는 사용자 별로 활동 내역에서 승패 기록을 획득하여, 사전 결정된 운영 의도에 맞는 새로운 게임 환경을 생성할 수 있다. 컴퓨팅 장치는 사용자가 사 전 결정된 운영 의도에 맞는 새로운 게임 환경에서 플레이 하도록 결정할 수 있다. 컴퓨팅 장치는 새로운 게임 환경에서 사용자간 매치메이킹(Matchmaking)을 수행하는 경우, 사용자의 게임 이탈을 방지하기 위하여 게임 이탈 가능성이 높은 플레이어를 위한 매치메이킹(Matchmaking)을 결정할 수 있다. 매치메이킹(Matchmaking)은 플레이어끼리 대전하는 요소가 있는 게임에서 대결 상대를 짝지어 주는 것을 의미할 수 있다. 예를 들어, 캐릭터 A로 플레이 중인 제 1 사용자가 연패 중인 경우, 컴퓨팅 장치는 제 1 사용자 가 연패에서 탈출할 수 있도록 캐릭터 A가 유리한 게임 환경을 생성하여 제 1 사용자에게 제공할 수 있다. 이 경우, 컴퓨팅 장치는 해당 게임 환경은 캐릭터 A가 유리한 게임 환경이므로 다른 캐릭터를 플레이 하는 사 용자는 패배할 수 있음을 고려하여, 제 1 사용자와 대전하게 될 사용자를 연승 중인 사용자 중에서 선택할 수도 있다. 즉, 연패를 기록하고 있는 사용자의 게임 이탈을 방지하기 위하여 컴퓨팅 장치는 연패를 기록하고 있는 사용자가 연패를 탈출할 수 있는 게임 환경에서 플레이 하도록 결정할 수 있다. 이 경우 컴퓨팅 장치(10 0)는 운영 의도에 의하여 다른 사용자의 패배에 따른 게임 이탈을 방지하기 위하여 패배할 가능성이 높은 매치 메이킹(Matchmaking)이 성사되는 다른 사용자를 사전 결정된 기준에 기초하여 결정할 수 있다. 전술한 바와 같 이 사전 결정된 기준은 연패 중이 아닌 사용자 일 수 있으나 본 개시는 이에 제한되지 않으며, 사전 결정된 기 준은 해당 매치에서 패배하더라도 게임에 대한 이탈을 할 가능성이 낮은 사용자를 선택하기 위한 임의의 기준을 포함할 수 있다. 또한 프로세서가 도 4a에 도시된 맵을 도 4b로 변경함으로써 캐릭터 A의 승률을 높일 수 있다는 결과를 상 관 관계 분석을 통해 알아냈다면, 플레이어가 매번 게임을 할 때마다 플레이어의 활동 내역을 기초로, 사전 결 정된 운영 의도에 맞는 새로운 게임 환경을 생성해 낼 수 있다. 실시간으로 실제 플레이어의 상황과 사전 결정 된 운영 의도를 반영하여 게임 환경을 생성해 냄으로써 게임을 즐기는 유저가 게임에서 이탈하지 하지 않고, 게 임에 대한 흥미를 유지할 수 있다. 도 5는 본 개시의 일 실시예에 따른 게임 모드와 게임 결과의 상관 관계에 기초하여 게임 환경의 변경을 결정하 는 동작을 설명하기 위한 예시도이다.도 5의 예시적인 게임 환경에서 게임 오브젝트인 호수와 독가스가 도시되어 있다. 호수는 캐릭터의 이동을 막는 게임 오브젝트이고, 독가스는 캐릭터의 체력을 감소시키는 게임 오브젝트이다. 독가스는 게임 플레이 시간이 경과할 수록 게임 환경에서 캐릭터가 플레이할 수 있는 면적을 가운데로 좁혀 들어가는 기 능을 한다. 도 5에 도시된 게임 환경을 예로 들면, 적어도 둘 이상의 플레이어들이 최후 한 명의 플레이어만 생존할 때까지 플레이하는 게임 모드에서, 프로세서는 연패중인 플레이어에 대해서는 독가스가 다른 플레이어에게 다가가는 속도와 비교하여 천천히 다가가게 함으로써, 연패중인 플레이어가 다른 플레이어보다 상대적으로 여유 로운 공간을 확보하여 승률을 높이게 할 수 있다. 또한 프로세서는 연승중인 플레이어에 대해서는 캐릭터 가 통과해서 이동할 수 없는 오브젝트인 호수 쪽으로 플레이어를 유도하기 위해 독가스가 호수 방향 으로 퍼지게 함으로써, 연승중인 플레이어의 게임 스릴감을 느낄 수 있게 하며, 동시에 연패중인 플레이어의 승 률을 높이게 할 수 있다. 즉 본 개시의 일 실시예에서, 컴퓨팅 장치는 플레이어들이 게임을 플레이 중인 경우, 실시간으로 게임 환 경과 활동 내역(즉, 승률)의 상관관계에 기초하여 각각의 플레이어들의 승률을 판단할 수 있다. 이 경우 컴퓨팅 장치는 사전 결정된 운영 의도에 기초하여 게임에서의 이탈을 방지하기 위하여 특정 사용자에게 유리하거 나 불리하도록 게임 오브젝트를 변경할 수 있다. 도 6는 본 개시의 일 실시예에 따른 플레이어 요소와 게임 결과의 상관 관계에 기초하여 매치메이킹을 결정하는 동작을 설명하기 위한 예시도이다. 도 6는 게임 환경과 게임 결과의 상관 관계에 기초하여 운영 의도에 기초하여 매치메이킹을 수행하는 예시를 나 타낸 도면이다. 도 6의 예시는, 플레이어 1 이 다른 플레이어와 팀을 이루어 3 대 3 대전 게임을 수행할 때, 매 치메이킹이 이루어지는 방식을 설명하기 위한 도면이다. 도 6에 도시된 바와 같이, 컴퓨팅 장치는 대기 플레이어 리스트에서 팀을 이루어 대전할 플레이어를 구성 할 수 있다. 도 6에 도시된 예시에서 컴퓨팅 장치는 대기 플레이어 리스트에서 캐릭터 A를 선택한 플 레이어1을 기준으로 레드팀 및 블루팀의 플레이어를 구성할 수 있다. 대기 플레이어 리스트 는 플레이어와 함께 게임 플레이하기 위해 기다리는 임의의 플레이어 목록일 수 있다. 대기 플레이어 리스 트는 게임 플레이를 대기하는 각각의 플레이어가 선택한 게임 캐릭터 정보를 포함하고 있을 수 있다. 예를 들어, 대기 플레이어 리스트에는 플레이어1이 캐릭터A를 게임 캐릭터로 선택한 정보를 포함할 수 있다. 컴 퓨팅 장치는 대기 플레이어 리스트에 있는 플레이어를 선택하여 매치메이킹(Matchmaking)을 할 수 있 다. 전술한 대기플레이어 리스트, 레드팀, 및 블루팀은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 컴퓨팅 장치는 플레이어1이 캐릭터 A를 선택하여 레드팀에 포함된 경우, 레드팀 플레이어 구성을 사전 결정된 게임 결과가 도출되도록 팀을 만들 수 있다. 예를 들어 플레이어1은 연패중인 플레이 어 일 수 있다. 그리고 플레이어1이 플레이 할 게임 환경은 도 4a에 도시된 예시와 같은 게임 환경일 수 있다. 이 경우 컴퓨팅 장치는 상관 관계 분석에 기초하여 도 4a의 게임 환경에서 캐릭터 A의 승률이 36% 이고, 캐릭터 B의 승률이 70%이고 그리고, 캐릭터 C의 승률이 80% 임을 알 수 있다. 즉, 플레이어1이 플레 이 할 게임 환경에서는 캐릭터 A는 불리한 선택이며, 캐릭터 B 및 C가 유리한 캐릭터 일 수 있다. 연패중인 플 레이어1은 현재 결정된 게임 환경에서 다소 불리한 캐릭터인 캐릭터 A를 선택하였다. 따라서 컴퓨팅 장치 는 연패 중인 플레이어1의 승률을 높이기 위해 도 4a의 게임 환경에서 승률이 높은 캐릭터 B를 선택 한 플레이어2와 캐릭터 C를 선택한 플레이어3를 플레이어1과 같은 팀을 구성하도록 레드팀에 포 함시킬 수 있다. 컴퓨팅 장치는 도 4a의 게임 환경에서 유리한 캐릭터를 선택한 플레이어를 연패 중인 플 레이어1이 포함된 레드팀에 포함시킴으로써, 플레이어1의 승리 가능성을 높일 수 있다. 전술한 레드팀의 플레이어 구성은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 컴퓨팅 장치는 플레이어1이 캐릭터 A를 선택하여 레드팀에 포함된 경우, 블루팀 플레이어 구성을 사전 결정된 게임 결과가 도출되도록 팀을 만들 수 있다. 블루팀은 레드팀과 대전할 팀일 수 있다. 예를 들어, 컴퓨팅 장치는 상관 관계 분석에 기초하여 도 4a의 게임 환경에서 캐릭터 A, B 및 C 각 각의 승률을 알 수 있다. 따라서 컴퓨팅 장치는 연패 중인 플레이어1의 승률을 높이기 위해 도 4a의 게임 환경에서 승률이 낮은 캐릭터A를 선택한 플레이어7 및 플레이어8를 블루팀에 포함시킬 수 있다. 컴퓨팅 장치는 도 4a의 게임 환경에서 불리한 캐릭터A를 선택한 플레이어를 연패중인 플레이어1의 상대편에 상대적으로 많이 포함시킴으로써, 플레이어1의 승리 가능성을 높일 수 있다. 즉, 컴퓨 팅 장치는 게임 환경과 게임 결과와의 상관 관계에 기초하여, 특정한 플레이어에게 특정한 게임 결과가 도 출되도록 매치메이킹을 결정할 수 있다. 예를 들어, 컴퓨팅 장치는 게임의 이탈 가능성이 높은 플레이어에 게 게임 이탈을 방지할 수 있는 게임 결과가 도출될 가능성이 높은 매치메이킹을 결정할 수 있다. 전술한 블루 팀의 플레이어 구성은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 컴퓨팅 장치는 플레이어1이 캐릭터 A를 선택하여 레드팀에 포함된 경우, 블루팀 플레이어 구성을 사전 결정된 게임 결과가 도출되도록 팀을 만들 수 있다. 전술한 도 6의 예시에서 캐릭터 B는 도 4a의 게임 환경에서 승률 70%를 가지는 다소 유리한 캐릭터이나, 운영 의도에 기초하여 블루팀에 포함될 수 있 다. 예를 들어, 캐릭터 A와 B가 상성관계에 있어, 캐릭터 A와 B의 싸움에서는 캐릭터 A가 캐릭터 B를 사살할 확 률이 높도록 밸런싱 되었을 수 있다. 게임 캐릭터 상성 관계는 특정 캐릭터가 다른 캐릭터와의 관계에서 유리하 거나 불리한 관계일 수 있다. 예를 들어, 도 4a의 게임 환경에서 캐릭터 A는 캐릭터 B와의 관계에서 더 유리하 여 캐릭터 A는 캐릭터 B와 경합할 경우, 승리할 가능성이 클 수 있다. 따라서 컴퓨팅 장치는 도 4a의 게임 환경에서 연패 중인 플레이어1이 캐릭터 A를 선택한 경우, 블루팀에 캐릭터 A와 상성 관계에 있는 캐 릭터 B를 선택한 플레이어9를 포함시킴으로써, 플레이어1의 승리 가능성을 높일 수 있다. 또한 연패 중인 플레이어1가 상성관계에 있는 캐릭터를 선택한 플레이어9을 집중적으로 공략하여 제압함으로써, 게임의 흥미를 되찾을 수 있다. 전술한 블루팀의 플레이어 구성은 예시일 뿐이며, 본 개시는 이에 제한되 지 않는다. 도 7은 본 개시의 일 실시예에 따라 게임 환경 변경하는 방법의 순서도이다. 컴퓨팅 장치는 플레이어의 활동 내역을 획득할 수 있다. 플레이어의 활동 내역은 예를 들어, 게임 환 경에서 활동한 기록으로서 액션 로그를 포함할 수 있다. 액션 로그는 게임 환경에서 플레이어가 조종하는 캐릭 터의 활동이 있을 때, 그 즉시 남는 기록을 의미한다. 본 개시의 일 실시예에서, 플레이어의 활동 내역은 실제 플레이어의 활동 내역 및 인공지능 플레이어의 활동 내 역 중 적어도 하나를 포함할 수 있다. 실제 플레이어는 게임을 플레이하는 인간 유저를 포함할 수 있다. 인공지 능 플레이어의 활동 내역은 실제 플레이어의 플레이에 의하지 않은 모든 활동 기록을 포함할 수 있다. 본 개시의 일 실시예에서 인공지능 플레이어는 상기 게임 환경에 기초하여 결정되는 게임 동작을 수행하는 플레 이어를 포함할 수 있다. 게임 환경에 기초하여 결정되는 게임 동작을 수행하는 플레이어는 게임에서 동작을 결 정하기 위한 임의의 알고리즘을 사용한다. 예를 들어, 인공지능 플레이어는 게임의 승리를 위한 알고리즘에 기 초하여 게임에서의 의사 결정을 수행할 수 있다. 상기 알고리즘은 주어진 게임환경에서 인공지능 플레이어가 최 적의 선택을 하는 것을 목표로 한다. 본 개시의 일 실시예에 있어서, 인공지능 플레이어는 상기 게임 환경에 기초하여 결정되는 게임 동작을 수행하 는 플레이어를 포함할 수 있다. 본 개시의 일 실시예에서, 인공지능 플레이어는 강화학습 모델에 기초하여 게임 동작을 결정하는 플레이어로서, 게임 상태로부터 정책 네트워크(policy network)를 통해 결정되는 게임 동작을 수행하고, 상기 게임 상태로부터 가치 네트워크(value network)를 통해 게임 상황을 판단할 수 있다. 본 개시의 일 실시예에서, 상기 정책 네트워크(Policy Network)는 입력으로 게임 상태가 주어졌을 때 현재 게임 상태에서 취할 수 있는 액션을 결정하기 위한 네트워크일 수 있다. 따라서 상기 정책 네트워크(Policy Networ k)는 현재 상태가 주어졌을 때, 현재 상태에서 최대 리워드를 획득하기 위한 액션에 대한 확률을 학습하여 현재 상태에서 취할 수 있는 각각의 액션에 대한 확률 데이터를 저장할 수 있다. 본 개시의 일 실시예에서, 상기 가 치 네트워크(Value Network)는 현재 상태 및/또는 정책이 입력으로 주어졌을 때, 가치 함수(Value Function) 값 을 예측하는 네트워크일 수 있다. 상기 가치 함수(Value function)는 입력된 현재 상태와 정책을 기초로 기대되 는 미래 리워드들의 총합의 평균일 수 있다. 상기 리워드는 현재 상태에서 어떤 정책을 취했을 때 얻어지는 보 상일 수 있다. 본 개시의 일 실시예에서, 강화학습 모델은 실제 플레이어의 활동 내역에 기초하여 학습되며, 특정 시점에서의 게임 환경을 포함하는 상기 게임 상태를 상기 정책 네트워크(policy network) 및 상기 가치 네트워크(value network)를 이용하여 연산함으로써, 상기 게임 상태에서의 리워드를 연산하고, 상기 게임 상태에서 상기 리워드 를 최대화 할 수 있는 상기 게임 동작을 인공지능 플레이어가 수행하도록 하는 모델일 수 있다. 본 개시의 일 실시예에서, 상기 플레이어의 활동 내역은, 상기 게임 환경에서 복수의 상기 인공지능 플레이어를 병렬적으로 플레이 하도록 하여 획득된 활동 내역 및 상기 게임 환경에서 상기 인공지능 플레이어의 플레이를 실제 플레이보다 가속시켜 획득된 활동 내역 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에서, 컴퓨 팅 장치는 상기 인공지능 플레이어를 병렬적으로 플레이하도록 함으로써, 빠른 시간 내에 인공지능 플레이 어의 활동 내역을 얻을 수 있다. 마찬가지로, 컴퓨팅 장치는 상기 인공지능 플레이어의 플레이를 실제 플 레이보다 가속시켜, 빠른 시간 내에 인공지능 플레이어의 활동 내역을 얻을 수 있다. 본 개시의 일 실시예에서, 상기 플레이어 활동 내역은, 상기 게임 환경에서 둘 이상의 플레이어들의 게임 결과 와 관련한 정보를 포함할 수 있다. 게임 결과는 게임의 일반적인 진행 상황이 종료되었을 때 결정될 수 있는 상 태일 수 있다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석할 수 있다. 컴퓨팅 장치는 게임 환경과 활동 내역의 상관 관계를 활동 내역에 대한 통계적인 방법론 또 는 강화학습 모델을 이용하여 분석할 수 있다. 본 개시의 일 실시예에서, 상기 게임 환경은 인게임 오브젝트 요소, 게임 모드 요소 및 플레이어 요소 중 적어 도 하나를 포함할 수 있다. 인게임 오브젝트 요소는 게임 내에서 플레이어와 상호작용할 수 있는 게임 내 요소 를 포함할 수 있다. 인게임 오브젝트 요소는 예를 들어, 플레이어가 게임 내에서 활동할 수 있는 맵을 포함할 수 있다. 인게임 오브젝트 요소는 예를 들어, 게임 환경에서 플레이어 캐릭터가 이동 가능한 요소, 상기 게임 환경에서 플레이어의 캐릭터 이동이 제한되는 요소, 상기 플레이어 캐릭터에 사전 결정된 효과를 발생시키는 요 소, 상기 캐릭터 생성 위치를 포함할 수 있다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 상기 게임 환경을 강화학습 모델을 이용하여 분석함으로써, 상기 게임 환경과 게임 결과의 상관 관계를 분석할 수 있다. 컴퓨팅 장치는 강화학습 모델을 이용하여 특정 게 임환경에서 플레이어의 게임 결과를 예측할 수 있다. 컴퓨팅 장치는 게임 환경에서 플레이어들의 활동 내 역과 게임결과를 학습데이터로 강화학습 모델을 학습시킬 수 있고, 강화 학습 모델을 이용하여 게임 환경의 인 게임 오브젝트 요소, 게임 모드 요소 및 플레이어 요소에 따른 게임 결과를 예측할 수 있다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 게임 환경과 상기 플레이어의 활동 내역의 게임 결과를 변량으로 하는 상관계수 산출을 통해 상기 게임 환경과 게임 결과의 상관 관계를 분석할 수 있다. 상기 상관계수는 입력 된 변량 사이의 상관 관계를 수치로 나타낸 값으로써, 변량 간에 상관 관계가 클수록 상관계수 값은 높게 도출 될 수 있다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 상기 게임 환경에 기초하여 변경되는 플레이어의 승률을 분석할 수 있다. 예를 들어, 프로세서는 게임 환경 내에 캐릭터의 생성 위치에 따라 변화하는 플레이어의 승률을 분석할 수 있다. 컴퓨팅 장치는 플레이어의 활동 내역과 게임 환경과의 상관 관계에 기초하여 게임 환경의 변경을 결정할 수 있다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 게임 환경의 인게임 오브젝트 요소를 사전 결정된 게임 결과가 도출되도록 변경할 수 있다. 본 개시의 일 실시예에서, 상기 사전 결정된 게임 결과는, 게임 운영 과 관련하여 의도되는 게임 결과로서, 게임 모드 요소, 및 사전 결정된 플레이어 요소 중 적어도 하나에 기초하 여 의도되는 게임 결과를 포함할 수 있다. 상기 운영과 관련하여 의도되는 게임 결과는, 예를 들어 연패 중인 실제 플레이어의 게임 이탈 방지를 위해 인게임 오브젝트 위치를 변경함으로써 실제 플레이어가 새로운 게임 환 경에서 승리할 수 있도록 하는 것을 포함할 수 있다. 본 개시의 일 실시예에서, 상기 인게임 오브젝트 요소는, 게임 내에서 플레이어의 캐릭터와 상호작용할 수 있는 요소를 포함할 수 있다. 상기 캐릭터와 상호작용할 수 있는 요소에는 상기 게임 환경에서 플레이어의 산, 강, 절벽 등과 같이 캐릭터의 이동을 제한할 수 있는 요소, 도로, 평지, 초원등과 같이 캐릭터의 이동이 가능한 요 소, 늪지, 숲, 사막, 바람, 돌풍, 비, 눈, 우박 등과 같이 캐릭터의 이동속도에 영향을 미치는 요소, 캐릭터의 체력을 회복시키는 장소, 캐릭터의 체력을 감소시키는 장소, 함정, 게임 아이템, NPC 캐릭터 및 건물을 포함 할 수 있다. 전술한 사항들은 예시일 뿐이며, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 컴퓨팅 장치는 변경된 게임 환경에서 플레이어의 추가 활동 내역을 획득할 수 있고, 상기 추가 활동 내역과 상기 변형된 게임 환경과의 상관 관계를 분석할 수 있다. 본 개시의 일 실시예에 서, 상기 추가 활동 내역은 예를 들어 인게임 오브젝트의 위치가 변경된 맵에서 실제 플레이어 또는 인공지능 플레이어가 활동한 활동 내역을 포함할 수 있다. 상기 추가 활동 내역과 상기 변형된 게임 환경과의 상관 관계 를 분석하여 맵 에디터는 실시간으로 사전 결정된 게임 결과를 도출하기 위해 게임 환경을 변경할 수 있다. 상기 맵 에디터는 게임 환경을 변경하는 기록매체에 저장된 컴퓨터 프로그램일 수 있다. 본 개시의 일 실시예에서, 실시간으로 게임 환경 변경을 통해 새로운 게임 환경을 생성함으로써, 실제 플레이어 들은 게임에 대한 흥미를 유지하고, 지형에 따라 고착화된 전략이 생겨 반복되는 게임 플레이 패턴을 제거함으 로써 실제 플레이어들이 게임플레이 할 때마다 새로움을 느껴 게임에서 이탈하지 않을 수 있다. 도 8은 본 개시의 일 실시예에 따라 게임 환경 변경을 구현하기 위한 모듈을 도시한 블록 구성도이다. 본 개시의 일 실시예에 따라 게임 환경 변경은 다음과 같은 모듈에 의해 구현될 수 있다. 본 개시의 일 실시예에 따라 플레이어의 활동 내역을 획득하기 위한 모듈; 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하기 위한 모듈; 및 상기 상관 관계에 기초하여 게임 환경의 변경을 결정 하기 위한 모듈에 의하여 구현될 수 있다. 게임 환경 변경의 대안적 실시예에서, 플레이어의 활동 내역을 획득하기 위한 모듈은, 실제 플레이어의 활 동 내역 및 인공지능 플레이어의 활동 내역을 획득하기 위한 모듈을 포함할 수 있다. 게임 환경 변경의 대안적 실시예에서, 플레이어의 활동 내역을 획득하기 위한 모듈은, 상기 게임 환경에서 복수의 상기 인공지능 플레이어를 병렬적으로 플레이 하도록 하여 활동 내역을 획득하기 위한 모듈 및 상기 게 임 환경에서 상기 인공지능 플레이어의 플레이를 실제 플레이보다 가속시켜 활동 내역을 획득하기 위한 모듈을 포함할 수 있다. 게임 환경 변경의 대안적 실시예에서, 상기 플레이어의 활동 내역과 게임 환경과의 상관 관계를 분석하기 위한 모듈은, 상기 게임 환경에서 인게임 오브젝트 요소, 게임 모드 요소 및 플레이어 요소 중 적어도 하나와 상기 활동 내역의 게임 결과와의 상관 관계를 분석하기 위한 모듈을 포함할 수 있다. 게임 환경 변경의 대안적 실시예에서, 상기 상관 관계에 기초하여 게임 환경의 변경을 결정하기 위한 모듈(63 0)은, 상기 게임 환경의 인게임 오브젝트 요소를 사전 결정된 게임 결과가 도출되도록 변경하기 위한 모듈을 포 함할 수 있다. 본 개시의 일 실시예에 따르면 게임 환경 변경을 위한 모듈은, 컴퓨팅 장치를 구현하기 위한 수단, 회로 또는 로직에 의하여 구현될 수도 있다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예 시적 논리적 블록들, 구성들, 모듈들, 회로들, 수단들, 로직들 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소 프트웨어, 또는 양쪽 모두의 조합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성 을 명백하게 예시하기 위해, 다양한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어 로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있 다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있으나, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 도 9은 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다.컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다.사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2020-0187990", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 게임 환경의 변경을 수행하는 컴퓨팅 장치의 블록 구성도이다. 도 2는 본 개시의 일 실시예에 따라 인공지능 플레이어의 게임 활동을 결정하기 위한 강화학습 모델의 기반이되는 네트워크 함수를 나타낸 개략도이다. 도 3은 본 개시의 일 실시예에 따른 인공지능 플레이어를 제어하기 위한 강화학습 모델의 각각의 모듈을 예시적 으로 도시한 블록 구성도이다. 도 4a 및 도 4b는 본 개시의 일 실시예에 따른 게임 오브젝트와 게임 결과의 상관 관계에 기초하여 게임 환경의 변경을 결정하는 동작을 설명하기 위한 예시도이다. 도 5는 본 개시의 일 실시예에 따른 게임 모드와 게임 결과의 상관 관계에 기초하여 게임 환경의 변경을 결정하 는 동작을 설명하기 위한 예시도이다. 도 6는 본 개시의 일 실시예에 따른 플레이어 요소와 게임 결과의 상관 관계에 기초하여 매치메이킹을 결정하는 동작을 설명하기 위한 예시도이다. 도 7은 본 개시의 일 실시예에 따라 게임 환경 변경하는 방법의 순서도이다. 도 8은 본 개시의 일 실시예에 따라 게임 환경 변경을 구현하기 위한 모듈을 도시한 블록 구성도이다. 도 9은 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
