{"patent_id": "10-2022-0051071", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0106064", "출원번호": "10-2022-0051071", "발명의 명칭": "로봇 및 로봇의 제어 방법", "출원인": "삼성전자주식회사", "발명자": "김한결"}}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "로봇에 있어서,라이다 센서;구동부;제1 주행 공간에 대응되는 제1 맵 데이터가 저장된 메모리; 및상기 로봇의 주행 시작 위치에서 상기 라이다 센서를 통해 센싱 데이터를 획득하고, 상기 획득된 데이터에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치에 대응되는 위치가 식별되지 않는 경우 상기 로봇이 주행하도록 하도록 상기 구동부를 제어하고, 상기 로봇이 주행하는 동안 상기 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데이터를획득하고, 상기 제1 맵 데이터에 포함된 확률 정보 및 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 상기 제2 맵 데이터에 대응되는 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하고, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별되면, 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치 및 상기 오브젝트에 대한 위치 정보에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의주행 시작 위치를 식별하는 프로세서;를 포함하는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 라이다 센서를 통해 상기 제2 주행 공간에 대응하는 포인트 맵 데이터를 획득하고, 상기 포인트 맵 데이터에 포함된 복수의 포인트 중 기 설정된 확률 값 이상인 복수의 포인트를 유효 포인트로식별하고, 상기 식별된 유효 포인트의 위치 정보를 기초로, 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보를 획득하고, 상기 획득한 오브젝트에 대한 위치 정보 및 상기 확률 정보를 기초로, 상기 제1 맵 데이터와 상기 제2 맵 데이터 간의 매칭 스코어를 획득하고, 상기 획득된 매칭 스코어에 기초하여 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는,로봇"}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 제1 맵 데이터는, 기 설정된 크기의 복수의 영역으로 분할되고, 각각의 영역에 대응되는 확률 정보를 포함하고, 상기 프로세서는, 상기 유효 포인트의 위치 정보를 기초로, 상기 제1 맵 데이터 상에서 상기 오브젝트의 위치에 대응하는 영역을식별하고, 상기 확률 정보에 기초하여, 상기 식별된 영역에 대응하는 확률 값을 식별하고, 상기 식별된 확률 값을 기초로, 상기 매칭 스코어를 획득하는, 로봇공개특허 10-2023-0106064-3-청구항 4 제3항에 있어서, 상기 프로세서는, 상기 확률 값의 평균 값이 임계 값 이상이면, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별하는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 프로세서는, 상기 확률 값의 평균 값이 상기 임계 값 미만이면, 상기 메모리에 저장된 상기 제1 맵 데이터를 상기 제2 맵 데이터에 대응하는 맵 데이터로 업데이트하는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서, 상기 프로세서는, 상기 제2 맵 데이터를 기 설정된 각도로 회전 시키고, 상기 제2 맵 데이터를 상기 기 설정된 각도로 회전 시킬때마다, 상기 확률 값의 평균 값을 획득하고, 상기 획득한 평균 값 중 최대 값을 갖는 평균 값에 대응하는 회전각도를 식별하고, 상기 식별된 회전 각도 및 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제3항에 있어서, 상기 맵 데이터는, 기 설정된 개수의 영역을 포함하는 복수의 서브 영역으로 분할되고, 상기 프로세서는, 상기 서브 영역에 포함된 기 설정된 개수의 영역 중 어느 하나의 영역에 대응하는 확률 값을 식별하고, 상기 식별된 영역이 상기 복수의 영역 중 적어도 하나의 영역에 해당하면, 상기 식별된 확률 값을 적용하여 상기 매칭스코어를 획득하는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 서브 영역에 포함되는 영역의 개수는, 상기 유효 포인트의 개수에 기초하여 결정되는, 로봇."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "로봇을 제어하는 방법에 있어서, 상기 로봇의 주행 시작 위치에서 라이다 센서를 통해 센싱 데이터를 획득하는 단계;상기 획득된 데이터에 기초하여 메모리에 저장된 제1 주행 공간에 대응되는 제1 맵 데이터 상에서 상기 로봇의주행 시작 위치에 대응되는 위치가 식별되지 않는 경우, 상기 로봇이 주행하도록 구동부를 제어하는 단계; 상기 로봇이 주행하는 동안 상기 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데이터를 획득하는단계; 상기 제1 맵 데이터에 포함된 확률 정보 및 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 상기 제2 맵 데이터에 대응되는 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계;및공개특허 10-2023-0106064-4-상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별되면, 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치 및 상기 오브젝트에 대한 위치 정보에 기초하여 상기 맵 데이터 상에서 상기 로봇의 주행시작 위치를 식별하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 라이다 센서를 통해 상기 제2 주행 공간에 대응하는 포인트 맵 데이터를 획득하는 단계를 더 포함하고, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 포인트 맵 데이터에 포함된 복수의 포인트 중 기 설정된 확률 값 이상인 복수의 포인트를 유효 포인트로식별하는 단계; 상기 식별된 유효 포인트의 위치 정보를 기초로, 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보를 획득하는 단계; 상기 획득한 오브젝트에 대한 위치 정보 및 상기 확률 정보를 기초로, 상기 제1 맵 데이터와 상기 제2 맵 데이터 간의 매칭 스코어를 획득하는 단계; 및상기 획득된 매칭 스코어에 기초하여 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는단계를 포함하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 제1 맵 데이터는, 기 설정된 크기의 복수의 영역으로 분할되고, 각각의 영역에 대응되는 확률 정보를 포함하고, 상기 매칭 스코어를 획득하는 단계는, 상기 유효 포인트의 위치 정보를 기초로, 상기 제1 맵 데이터 상에서 상기 오브젝트의 위치에 대응하는 영역을식별하고, 상기 확률 정보에 기초하여, 상기 식별된 영역에 대응하는 확률 값을 식별하고, 상기 식별된 확률 값을 기초로, 상기 매칭 스코어를 획득하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는,상기 확률 값의 평균 값이 임계 값 이상이면, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는,상기 확률 값의 평균 값이 상기 임계 값 미만이면, 상기 메모리에 저장된 상기 제1 맵 데이터를 상기 제2 맵 데이터에 대응하는 맵 데이터로 업데이트하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는,상기 제2 맵 데이터를 기 설정된 각도로 회전 시키고, 상기 제2 맵 데이터를 상기 기 설정된 각도로 회전 시킬때마다, 상기 확률 값의 평균 값을 획득하고, 상기 획득한 평균 값 중 최대 값을 갖는 평균 값에 대응하는 회전공개특허 10-2023-0106064-5-각도를 식별하고, 상기 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는 단계는, 상기 식별된 회전 각도 및 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치에 기초하여 상기 제1 맵데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서, 상기 맵 데이터는, 기 설정된 개수의 영역을 포함하는 복수의 서브 영역으로 분할되고, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는,상기 서브 영역에 포함된 기 설정된 개수의 영역 중 어느 하나의 영역에 대응하는 확률 값을 식별하고, 상기 식별된 영역이 상기 복수의 영역 중 어느 하나의 영역에 해당하면, 상기 식별된 확률 값을 적용하여 상기 매칭 스코어를 획득하는, 방법."}
{"patent_id": "10-2022-0051071", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 서브 영역에 포함되는 영역의 개수는, 상기 유효 포인트의 개수에 기초하여 결정되는,방법."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "로봇 및 로봇의 제어 방법이 개시된다. 본 로봇은, 라이다 센서, 구동부, 제1 주행 공간에 대응되는 제1 맵 데이 터가 저장된 메모리 및 상기 로봇의 주행 시작 위치에서 상기 라이다 센서를 통해 센싱 데이터를 획득하고, 상기 획득된 데이터에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치에 대응되는 위치가 식별되지 (뒷면에 계속)"}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 로봇 및 그의 제어 방법에 관한 것으로, 보다 상세하게는 주행 시작 위치의 변경에 따라 맵 데이터를 생성하는 로봇 및 그의 제어 방법에 관한 것이다."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 실내 공간에 배치되어 사용자에게 서비스를 제공하는 로봇에 대한 기술 개발이 활발해지고 있다. 예를 들 어, 실내 공간을 청소하는 로봇 청소기가 이에 해당할 수 있다. 로봇 청소는, 로봇 청소기가 위치한 실내 공간을 메모리에 저장된 해당 실내 공간에 대응하는 맵 데이터를 이용 하여 주행한다. 이때, 로봇 청소기는 주행을 반복할 때마다, 실내 공간에 대한 정보를 반복하여 수집하고, 이를 기초로, 맵 데이터를 업데이트할 수 있다. 즉, 주행이 반복될 때마다 로봇 청소기에 저장된 맵 데이터에 포함된 실내 공간에 대한 정보는 보다 정확해질 수 있으며, 뿐만 아니라 맵 데이터에는 실내 공간 내 오브젝트에 대한 다양한 정보를 포함할 수도 있다. 한편, 로봇은 기 저장된 맵 데이터를 기초로 로봇의 주행 시작 위치를 식별한 후 기 설정된 주행 경로에 따라 로봇이 위치한 실내 공간 내에서의 주행을 시작한다. 따라서, 로봇이 특정 주행 공간 내에서 주행을 시작하기 위해서는, 로봇의 주행을 시작하는 위치를 맵 데이터 상에서 식별하는 과정이 선행적으로 수반되어야 한다. 이 때, 로봇이 맵 데이터를 기초로 로봇의 최초 주행 시작 위치를 식별하지 못하는 경우에는 로봇은 기존의 맵 데 이터가 아닌 새로운 주행 시작 위치를 기준으로 한 맵 데이터를 생성한다. 그러나, 동일한 주행 공간 내에서 주행 시작 위치가 변경될 때마다 이러한 과정을 반복하여 수행한다면, 데이터 를 생성하기 위하여 불필요하게 시간을 낭비하는 문제점을 야기시킨다. 특히 기존의 맵 데이터의 경우 로봇이 동일한 주행 시작 위치에서의 주행을 반복함에 따라 센서 등을 통해 획득한 데이터를 기초로 업데이트 되고, 이 에 따라 다양한 정보가 포함될 수 있는데, 주행 시작 위치의 변경 만으로 활용도가 높은 기존의 맵 데이터의 이 용을 중단하는 것은 비효율적이다. 이에 따라 주행 시작 위치가 변경되더라도 기존의 맵 데이터를 활용할 수 있 는 방안이 요구되는 실정이다."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상술한 문제점을 해결하기 위해 안출된 것으로, 저장된 기존의 맵 데이터와 새롭게 획득된 맵 데이터 를 비교하여, 주행 공간이 일치한 것으로 식별되면, 기존의 맵 데이터 상에서 새로운 주행 시작 위치를 식별한 후 기존의 맵 데이터를 계속하여 이용하는, 로봇 및 그의 제어 방법을 제공함에 있다."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 목적을 달성하기 위한 본 발명의 일 실시 예에 따른 로봇에 있어서, 로봇은 라이다 센서, 구동부, 제1 주행 공간에 대응되는 제1 맵 데이터가 저장된 메모리 및 상기 로봇의 주행 시작 위치에서 상기 라이다 센서를 통해 센싱 데이터를 획득하고, 상기 획득된 데이터에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시 작 위치에 대응되는 위치가 식별되지 않는 경우 상기 로봇이 주행하도록 하도록 상기 구동부를 제어하고, 상기 로봇이 주행하는 동안 상기 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데이터를 획득하고, 상 기 제1 맵 데이터에 포함된 확률 정보 및 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 상기 제2 맵 데이터에 대응되는 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하고, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별되면, 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치 및 상기 오브젝트에 대한 위치 정보에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는 프로세서;를 포함할 수 있다. 또한, 상기 프로세서는, 상기 라이다 센서를 통해 상기 제2 주행 공간에 대응하는 포인트 맵 데이터를 획득하고, 상기 포인트 맵 데이터에 포함된 복수의 포인트 중 기 설정된 확률 값 이상인 복수의 포인트를 유효 포인트로 식별하고, 상기 식별된 유효 포인트의 위치 정보를 기초로, 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보를 획득하고, 상기 획득한 오브젝트에 대한 위치 정보 및 상기 확률 정보를 기초로, 상기 제1 맵 데이터와 상기 제2 맵 데이터 간의 매칭 스코어를 획득하고, 상기 획득된 매칭 스코어에 기초하여 상기 제2 주 행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별할 수 있다. 또한, 상기 제1 맵 데이터는, 기 설정된 크기의 복수의 영역으로 분할되고, 각각의 영역에 대응되는 확률 정보 를 포함하고, 상기 프로세서는, 상기 유효 포인트의 위치 정보를 기초로, 상기 제1 맵 데이터 상에서 상기 오브 젝트의 위치에 대응하는 영역을 식별하고, 상기 확률 정보에 기초하여, 상기 식별된 영역에 대응하는 확률 값을 식별하고, 상기 식별된 확률 값을 기초로, 상기 매칭 스코어를 획득할 수 있다. 또한, 상기 프로세서는, 상기 확률 값의 평균 값이 임계 값 이상이면, 상기 제2 주행 공간이 상기 제1 주행 공 간과 일치하는 것으로 식별할 수 있다. 또한, 상기 프로세서는, 상기 확률 값의 평균 값이 상기 임계 값 미만이면, 상기 메모리에 저장된 상기 제1 맵 데이터를 상기 제2 맵 데이터에 대응하는 맵 데이터로 업데이트할 수 있다. 또한 상기 프로세서는, 상기 제2 맵 데이터를 기 설정된 각도로 회전 시키고, 상기 제2 맵 데이터를 상기 기 설 정된 각도로 회전 시킬 때마다, 상기 확률 값의 평균 값을 획득하고, 상기 획득한 평균 값 중 최대 값을 갖는 평균 값에 대응하는 회전 각도를 식별하고, 상기 식별된 회전 각도 및 상기 제2 맵 데이터 상에서의 상기 로봇 의 주행 시작 위치에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별할 수 있다. 또한, 상기 맵 데이터는, 기 설정된 개수의 영역을 포함하는 복수의 서브 영역으로 분할되고, 상기 프로세서는, 상기 서브 영역에 포함된 기 설정된 개수의 영역 중 어느 하나의 영역에 대응하는 확률 값을 식별하고, 상기 식 별된 영역이 상기 복수의 영역 중 적어도 하나의 영역에 해당하면, 상기 식별된 확률 값을 적용하여 상기 매칭 스코어를 획득할 수 있다. 여기서, 상기 서브 영역에 포함되는 영역의 개수는, 상기 유효 포인트의 개수에 기초하여 결정될 수 있다. 상술한 목적을 달성하기 위한 본 개시의 다른 실시 예에 따른, 로봇을 제어하는 방법에 있어서, 상기 방법은 상 기 로봇의 주행 시작 위치에서 라이다 센서를 통해 센싱 데이터를 획득하는 단계, 상기 획득된 데이터에 기초하 여 메모리에 저장된 제1 주행 공간에 대응되는 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위치에 대응되는 위치가 식별되지 않는 경우, 상기 로봇이 주행하도록 구동부를 제어하는 단계, 상기 로봇이 주행하는 동안 상기 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데이터를 획득하는 단계, 상기 제1 맵 데이터에 포 함된 확률 정보 및 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 상기 제2 맵 데이터에 대응되는 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계 및 상기 제2 주행 공간이 상 기 제1 주행 공간과 일치하는 것으로 식별되면, 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치 및 상기 오브젝트에 대한 위치 정보에 기초하여 상기 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는 단계를 포함할 수 있다. 또한, 상기 방법은, 상기 라이다 센서를 통해 상기 제2 주행 공간에 대응하는 포인트 맵 데이터를 획득하는 단 계를 더 포함하고, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 포인 트 맵 데이터에 포함된 복수의 포인트 중 기 설정된 확률 값 이상인 복수의 포인트를 유효 포인트로 식별하는 단계, 상기 식별된 유효 포인트의 위치 정보를 기초로, 상기 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정 보를 획득하는 단계, 상기 획득한 오브젝트에 대한 위치 정보 및 상기 확률 정보를 기초로, 상기 제1 맵 데이터 와 상기 제2 맵 데이터 간의 매칭 스코어를 획득하는 단계 및 상기 획득된 매칭 스코어에 기초하여 상기 제2 주 행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계를 포함할 수 있다. 또한, 상기 제1 맵 데이터는, 기 설정된 크기의 복수의 영역으로 분할되고, 각각의 영역에 대응되는 확률 정보 를 포함하고, 상기 매칭 스코어를 획득하는 단계는, 상기 유효 포인트의 위치 정보를 기초로, 상기 제1 맵 데이 터 상에서 상기 오브젝트의 위치에 대응하는 영역을 식별하고, 상기 확률 정보에 기초하여, 상기 식별된 영역에 대응하는 확률 값을 식별하고, 상기 식별된 확률 값을 기초로, 상기 매칭 스코어를 획득할 수 있다. 또한, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 확률 값의 평균 값이 임계 값 이상이면, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는 것으로 식별할 수 있다. 또한, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 확률 값의 평균 값이 상기 임계 값 미만이면, 상기 메모리에 저장된 상기 제1 맵 데이터를 상기 제2 맵 데이터에 대응하는 맵 데이터로 업데이트할 수 있다. 또한, 상기 제2 주행 공간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 제2 맵 데이터를 기 설정된 각도로 회전 시키고, 상기 제2 맵 데이터를 상기 기 설정된 각도로 회전 시킬 때마다, 상기 확률 값 의 평균 값을 획득하고, 상기 획득한 평균 값 중 최대 값을 갖는 평균 값에 대응하는 회전 각도를 식별하고, 상 기 맵 데이터 상에서 상기 로봇의 주행 시작 위치를 식별하는 단계는, 상기 식별된 회전 각도 및 상기 제2 맵 데이터 상에서의 상기 로봇의 주행 시작 위치에 기초하여 상기 제1 맵 데이터 상에서 상기 로봇의 주행 시작 위 치를 식별할 수 있다. 또한, 상기 맵 데이터는, 기 설정된 개수의 영역을 포함하는 복수의 서브 영역으로 분할되고, 상기 제2 주행 공 간이 상기 제1 주행 공간과 일치하는지 여부를 식별하는 단계는, 상기 서브 영역에 포함된 기 설정된 개수의 영 역 중 어느 하나의 영역에 대응하는 확률 값을 식별하고, 상기 식별된 영역이 상기 복수의 영역 중 어느 하나의 영역에 해당하면, 상기 식별된 확률 값을 적용하여 상기 매칭 스코어를 획득할 수 있다. 여기서, 상기 서브 영역에 포함되는 영역의 개수는, 상기 유효 포인트의 개수에 기초하여 결정될 수 있다."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상과 같은 본 발명의 다양한 실시 예에 따르면, 로봇은 로봇의 주행 시작 위치가 변경되더라도, 메모리에 저 장된 기존의 맵 데이터를 삭제하지 않으며, 기존의 맵 데이터 상에서 새로운 주행 시작 위치를 식별한 후, 다양 한 정보가 포함된 활용성이 높은 기존의 맵 데이터를 계속하여 이용할 수 있다."}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. A 또는/및 B 중 적어도 하나라는 표현은 \"A\" 또는 \"B\" 또는 \"A 및 B\" 중 어느 하나를 나타내는 것으로 이해되어 야 한다. 본 개시에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 어떤 구성요소가 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또 는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시에서 \"모듈\" 혹은 \"부\"는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되 거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\" 혹은 복수의 \"부\"는 특정한 하드 웨어로 구현될 필요가 있는 \"모듈\" 혹은 \"부\"를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하나의 프 로세서로 구현될 수 있다. 본 명세서에서, 사용자라는 용어는 로봇을 사용하는 사람 또는 로봇을 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 이하 첨부된 도면들을 참조하여 본 개시의 일 실시 예를 보다 상세 하게 설명한다. 도 1은 본 개시의 일 실시 예에 따른, 로봇의 예시도이다. 도 1을 참조하면, 로봇은 주행 공간 내에서 스스로 이동하고, 다양한 동작을 수행할 수 있다. 여기서 주행 공간이란, 로봇이 주행할 수 있도록 주행 경로가 설정된 공간을 의미한다. 예를 들어, 로봇이 위치한 실내 공간이 이에 해당할 수 있다. 로봇은 로봇이 위치한 특정 실내 공간 내에서 최초로 주행을 시작하면, 다양한 센서 등을 통하여 특 정 실내 공간에 대한 정보를 수집하고, 수집한 정보를 기초로 특정 실내 공간에 대응하는 맵 데이터를 생성할 수 있다. 그리고, 로봇은 맵 데이터를 기초로 특정 실내 공간을 주행하기 위한, 최적의 주행 경로를 설정 할 수 있다. 그리고, 설정된 주행 경로와 맵 데이터를 기초로, 특정 실내 공간 내에서 주행을 반복하며, 맵 데 이터에 포함된 정보를 업 데이트할 수 있다. 한편, 로봇은 맵 데이터를 기초로 주행을 시작하기에 앞서, 맵 데이터 상에서의 로봇의 주행 시작 위 치를 식별할 수 있다. 구체적으로, 로봇은 주행을 시작하기 위하여 사용자로부터 주행 시작에 관한 명령어 를 입력 받은 시점 또는 주행 시작에 관한 기 설정된 조건(예를 들어, 기 설정된 주행 시작 시간)이 충족된 것으로 식별된 시점에서의 로봇의 주행 시작 위치를 식별한다. 이때, 로봇은 맵 데이터에 기반하여 주행 시작 위치를 식별할 수 있다. 구체적으로, 로봇은 주행을 시작하면, 라이다 센서를 통해 주행 시작 위치 주변의 오브젝트에 대한 정보(예를 들어, 오브젝트에 대한 거리 정보 및 오브젝트에 대응하는 포인트 클라우드 데이터)를 실시간으로 획득한다. 그리고, 로봇은 메모리 에 저장된 기 설정된 주행 시작 위치에서 획득되는 주변의 오브젝트에 대한 정보와 라이다 센서를 통해 실 시간으로 획득한 주변의 오브젝트에 대한 정보를 비교한다. 그리고, 로봇은 메모리에 저장된 주행 시 작 위치에서 획득되는 주변의 오브젝트에 대한 정보와 라이다 센서를 통해 실시간으로 획득한 주변의 오브젝트 에 대한 정보가 일치하는 것으로 식별되면, 로봇의 주행 시작 위치가 기 설정된 주행 시작 위치와 일치하는 것으로 식별한다. 이로써, 로봇은 맵 데이터 상에서의 주행 시작 위치를 식별할 수 있게 된다. 그리고, 로봇은 맵 데이터 상에서 로봇의 주행 시작 위치를 식별한 후 식별된 주행 시작 위치를 기준 으로 기 설정된 주행 경로에 따라 주행을 시작할 수 있다. 따라서, 로봇이 주행 공간을 주행을 하기 위해 서는, 맵 데이터 상에서 주행 시작 위치를 식별하는 과정이 우선적으로 수행되어야 한다. 만약, 주행 시작 위치가 변경된 경우에는 로봇은 기존의 맵 데이터 상에서 변경된 주행 시작 위치를 식별 할 수 없다. 기 설정된 주행 시작 위치에서 획득되는 주변의 오브젝트에 대한 정보와 라이다 센서를 통해 실시 간으로 획득한 주변의 오브젝트에 대한 정보가 일치하지 않기 때문이다. 이로 인하여, 로봇은 기존의 맵 데이터 상에서 기 설정된 주행 시작 위치를 기준으로 설정된 주행 경로 정보를 더 이상 활용할 수 없게 된다. 즉, 로봇은 주행을 하는데 있어, 기존의 맵 데이터를 더 이상 이용하지 못한다. 이에 따라, 로봇이 기존의 맵 데이터 상에서 로봇의 주행 시작 위치를 식별할 수 없는 경우, 로봇은 새로운 주행 시작 위치를 기준으로 새로운 맵 데이터를 획득한다. 그리고, 로봇은, 새로운 맵 데이터를 기초로 로봇의 주행 공간 내 새로운 주행 경로를 설정할 수 있다. 도 2는 동일한 주행 공간에 위치했음에도 불구하고, 주행 시작 위치의 변경으로 맵 데이터를 다시 생성하는 것 을 나타낸 도면이다. 다만, 도 2를 참조하면, 로봇이 동일한 주행 공간 내 위치하고, 동일한 주행 공간 내에서 주행을 시작함에도 불구하고, 주행 시작 위치의 변경 만으로 새로운 맵 데이터를 반복하여 획득하는 비효율 적이다. 구 체적으로, 로봇의 주행 시작 위치가 동일한 주행 공간 내에서 제1 위치에서 제2 위치로 변경되 었다고 가정한다. 이때, 로봇은 라이다 센서를 이용하여, 기존의 맵 데이터(20-1) 상에서 주행 시작 위치 를 식별할 수 없다. 이에 따라, 로봇은 기존의 맵 데이터(20-1)를 활용할 수 없다고 판단하고, 새로운 맵 데이터(20-2)를 획득하게 된다. 다만, 이 경우, 기존의 맵 데이터(20-1)와 새로운 맵 데이터(20-2)는 동일한 주 행 공간에 대한 것으로, 이처럼 주행 시작 위치의 변경될 때마다 기존의 맵 데이터(20-1)의 활용을 중단하 고 새로운 맵 데이터(20-1)를 생성하는 것은 비효율 적이다. 이에 따라, 본 개시는 주행 시작 위치가 변경되었 더라도, 동일한 주행 공간에서 로봇이 주행하는 것으로 식별되면 기존의 맵 데이터를 계속하여 활용할 수 있도록 한다. 이하, 이와 관련된 본 개시에 대하여 자세히 설명하도록 한다. 도 3은 본 개시의 일 실시 예에 따른, 로봇의 개략적인 구성도이다. 도 3을 참조하면, 로봇은 라이다 센서, 구동부, 메모리 및 프로세서를 포함할 수 있 다. 본 개시의 일 실시 예로 로봇은 청소기로 구현될 수 있다. 로봇은 로봇이 위치한 실내 공간을 주행하며 청소를 수행할 수 있다. 이때, 로봇의 주행 시작 위치는 로봇의 스테이션 위치일 수 있다. 스테이션은, 로봇의 배터리 충전 기능, 서버와의 통신 기능 등 로봇과 관련하여 다양한 기능을 수행하는 장치일 수 있다. 로봇이 스테이션에 결합된 상태에서, 사용자의 주행 시작 명령어를 입력 받으면, 로봇은 맵 데이터 상에서 스테이션의 위치를 식별하고, 식별된 스테이션의 위치를 주행 시작 위치로 식별할 수 있다. 그리고, 로봇은 스테이션으로부터 분리되어 기 설정된 주행 경로 및 맵 데이터에 기초하여 실내 공간에 대한 주행을 수행할 수 있다. 한편, 다른 예로, 로봇은 리테일 로봇 또는 가이드 로봇 등으로 구현될 수 있다. 예를 들어, 로봇은 매장 내에서 사용자에게 경로를 안내하거나, 매장 내의 제품을 사용자에게 설명하거나, 또는 사용자의 물건을 들고 매장 내에서 사용자를 따라 이동하는 기능을 수행할 수 있다. 라이다 센서(Lidar Sensor)는 로봇 주변의 오브젝트(예를 들어, 장애물 등)와의 거리를 감지할 수 있 다. 구체적으로, 라이다 센서는 360° 회전하며 로봇 주변의 오브젝트를 향하여 레이저를 조사하고, 조사된 레이저가 로봇 주변의 오브젝트로부터 반사되어 수신되면, 레이저가 수신된 시간에 기초하여 오브 젝트와의 거리를 감지하거나, 수신된 레이저의 위상 변화 량을 측정하여 오브젝트와의 거리를 감지할 수 있다. 여기에서, 오브젝트는 주행 공간 내 벽, 전자 기기 등을 포함할 수 있다. 구동부는 로봇을 이동시키기 위한 구성요소이다. 구동부는 바퀴 또는 로봇의 다리 등으로 구현될 수 있다. 이를 위해, 구동부는 모터를 포함할 수 있다. 프로세서는 구동부를 제어하여 로봇의 이동, 정지, 속도 제어 및 방향 전환 등과 같은 다양한 주행 동작을 제어할 수 있다. 메모리는 본 개시의 다양한 실시 예를 위해 필요한 데이터를 저장할 수 있다. 메모리는 데이터 저장 용도에 따라 로봇에 임베디드 된 메모리 형태로 구현되거나, 로봇에 탈 부착이 가능한 메모리 형태로 구현될 수도 있다. 예를 들어, 로봇의 구동을 위한 데이터의 경우 로봇에 임베디드 된 메모리에 저장되고, 로봇의 확장 기능을 위한 데이터의 경우 로봇에 탈 부착이 가능한 메모리 에 저장될 수 있다. 한편, 로봇에 임베디드 된 메모리의 경우 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비휘발성 메모리(non-volatile Memory) (예: OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash 등), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive(SSD)) 중 적어도 하나 로 구현될 수 있다. 또한, 로봇에 탈부착이 가능한 메모리의 경우 메모리 카드(예를 들어, CF(compact flash), SD(secure digital), Micro-SD(micro secure digital), Mini-SD(mini secure digital), xD(extreme digital), MMC(multi-media card) 등), USB 포트에 연결 가능한 외부 메모리(예를 들어, USB 메모리) 등과 같은 형 태로 구현될 수 있다. 본 개시의 일 실시 예로, 메모리에는 맵 데이터가 저장될 수 있다. 맵 데이터란, 로봇이 위치한 주행 공간에 대하여 획득한 맵 데이터를 의미할 수 있다. 맵 데이터에는 주행 공간에 대한 정보가 포함될 수 있다. 예를 들어, 주행 공간 내 오브젝트(예를 들어, 벽, 가전 제품 등)의 위치 정보 등이 포함될 수 있다. 한편, 메모리에 저장된 맵 데이터는 로봇이 로봇이 위치한 주행 공간에 대한 최초 주행을 시작 한 후 획득되어 메모리에 저장된 맵 데이터일 수 있다. 구체적으로, 로봇이 특정 주행 공간 내에서 최초로 주행을 시작하면, 프로세서는 라이다 센서를 이용하여 특정 주행 공간에 대한 센싱 데이터를 획득할 수 있다. 그리고, 프로세서는 획득한 센싱 데이터를 이용하여, 특정 주행 공간에 대한 맵 데이터를 생성하고, 생성된 맵 데이터를 메모리에 저장될 수 있다. 한편, 프로세서는 로봇이 위치한 주행 공간이 변경된 것으로 식별되면, 새로운 주행 공간에 대한 신 규 맵 데이터를 생성하고, 메모리에 기 저장된 맵 데이터를 삭제한 후 신규 맵 데이터를 저장할 수 있다. 따라서, 메모리에 저장된 맵 데이터는 로봇이 위치한 주행 공간이 변경되지 않는 한, 계속 메모리 에 저장될 수 있다. 이하에서는, 로봇이 위치한 주행 공간이 변경된 것으로 식별됨으로써, 프로세서에 의해 새롭게 생성 된 신규 맵 데이터와 메모리에 저장된 맵 데이터를 구별하도록 한다. 이를 위해, 메모리에 저장된 맵데이터를 제1 맵 데이터로 지칭하고, 로봇이 위치한 주행 공간이 변경된 것으로 식별됨으로써, 프로세 서에 의해 새롭게 생성된 신규 맵 데이터를 제2 맵 데이터로 지칭하겠다. 한편, 로봇은 메모리에 저장된 제1 맵 데이터를 이용하여, 로봇이 위치한 주행 공간을 반복 하여 주행할 수 있다. 프로세서는 주행을 반복할 때마다 획득되는 센싱 데이터를 기초로, 메모리에 저장된 제1 맵 데이터를 업 데이트할 수 있다. 뿐만 아니라, 프로세서는 입력 인터페이스를 통해 사용 자로부터 제1 주행 공간에 관한 부가 정보(예를 들어, 전자 기기의 식별 정보 등)를 입력 받을 수도 있으며, 입 력 받은 부가 정보를 기초로, 제1 맵 데이터를 업 데이트할 수도 있다. 프로세서는 로봇의 전반적인 동작을 제어한다. 구체적으로, 프로세서는 라이다 센서, 구동 부를 포함하는 로봇의 구성과 연결되어 로봇의 동작을 전반적으로 제어할 수 있다. 이를 위해, 프로세서는 라이다 센서 및 구동부와 전기적으로 연결될 수 있다. 그리고, 프로세서 는 중앙처리장치(central processing unit, CPU) 또는 어플리케이션 프로세서(application processor, AP) 등을 포함할 수 있다. 이 경우, 프로세서는 하나 이상의 인스트럭션에 따라 메모리에 저장된 하 나 이상의 소프트웨어 프로그램을 실행하여, 로봇에 구비된 각종 하드웨어의 동작들을 제어하고, 각종 기 능을 지원할 수 있다. 특히, 상술한 바와 같이, 프로세서는 라이다 센서를 통해 획득한 센싱 데이터를 기초로, 로봇이 위치하는 주행 공간에 대한 맵 데이터를 획득할 수 있다. 예를 들어, 로봇이 로봇 청소기로 구현되는 경우, 프로세서는 라이다 센서를 이용하여, 로봇 청소기가 위치하고, 로봇 청소기가 주행하는 것으로 설정된 공간인 사용자의 집, 회사 등에 대한 맵 데이터를 획득할 수 있다. 또 다른 예로, 로봇이 매장 내에서 서비스를 제공하는 로봇으로 구현되는 경우, 프로세서는 라 이다 센서를 이용하여, 로봇이 위치한 매장에 대한 맵 데이터를 획득할 수도 있다. 한편, 프로세서 는 획득한 맵 데이터를 기반으로 로봇의 실시간 위치를 식별할 수도 있다. 이때, 프로세서의 맵 데이터를 생성하는 과정과 로봇의 위치를 식별하는 과정은 동시에 수행될 수 있다. 프로세서가 맵 데이터를 생성하는 과정에 대하여 보다 구체적으로 설명하면, 프로세서는 라이다 센서 를 이용하여 로봇과 로봇 주변의 오브젝트 간의 거리 데이터와 주변의 오브젝트에 대응하는 포 인트 클라우드(Point Cloud) 데이터를 획득할 수 있다. 구체적으로, 프로세서는 오브젝트를 향하여 레이저를 조사하고, 조사된 레이저가 오브젝트로부터 반사되어 수신되면, 레이저가 수신된 시간에 기초하여 오브젝트와의 거리를 식별할 수 있다. 그리고, 프로세서는 식 별된 거리에 기초하여 레이저가 반사된 지점에 대응하는 포인트를 식별할 수 있다. 이때, 포인트는 오브젝트의 표면 상에 식별될 수 있다. 그리고, 프로세서는 오브젝트의 표면 상에서 식별되는 복수의 포인트가 군집화 된 포인트 집합을 식별할 수 있다. 이때, 오브젝트의 표면 상에서 식별되는 복수의 포인트의 집합이 클라우드 포인트에 해당할 수 있다. 이때, 프로세서는 로봇과 로봇 주변의 오브젝트 간의 거리 데이터 및 주변의 오브젝트에 대응하 는 포인트 클라우드(Point Cloud) 데이터를 포인트 맵 데이터의 형태로 획득할 수 있다. 포인트 맵 데이터에는 주행 공간에 대응하는 포인트 클라우드 및 주행 공간에 위치한 오브젝트에 대한 포인트 클라우드가 포함될 수 있다. 이때, 각각의 포인트 클라우드의 위치는, 획득한 거리 데이터에 기초하여, 주행 공간 내에서의 오브젝트의 위치 에 대응하도록, 포인트 맵 데이터 상에서 식별될 수 있다. 한편, 프로세서는 획득된 주행 공간의 맵 데이 터에 SLAM(simultaneous localization and mapping) 알고리즘을 적용하여, 주행 공간에 대한 맵 데이터를 획득 할 수 있다. 예를 들어, 프로세서는 GraphSLAM, Cartographer, Gmapping, EKF SLAM 등의 기법을 통해 맵 데이터를 생성할 수 있다. 이하에서는, 도 4 내지 도 12를 참조하여, 본 개시의 일 실시 예에 따른 로봇의 동작에 대하여 보다 구체적으로 설명하도록 한다. 먼저, 프로세서는 로봇의 주행 시작 위치에서 라이다 센서를 통해 센싱 데이터를 획득한다 여기서, 주행 시작 위치는, 로봇이 주행을 시작하는 시점에서의 로봇의 현재 위치일 수 있다. 예를 들어, 오프 된 상태 또는 기 설정된 시간 동안의 대기 상태에 있는 로봇이 사용자의 주행 시작 명령어를 입력 받은 시점 또는 주행 시작 설정 조건(예를 들어, 기 설정된 주행 시작 시간에 도래한 경우)이 만족된 것으로 식별한 시점에, 로봇의 현재 위치를 의미할 수 있다. 프로세서는 라이다 센서를 이용하여 로봇의 주행 시작 위치에서의 주변 오브젝트에 대한 센싱 데이터를 획득한다. 상술한 바와 같이, 센싱 데이터는 로봇과 로봇 주변의 오브젝트 간의 거리 데이 터 및 주변의 오브젝트에 대한 포인트 클라우드 데이터를 포함할 수 있다. 구체적으로, 프로세서는 메모리에 저장된 제1 맵 데이터 상에서 로봇의 주행 시작 위치에 대응되는 위치를 식별하기 위한 정보를 획득할 수 있다. 예를 들어, 프로세서는 주행 시작 위치에서 로봇 이 360° 회전하도록 구동부를 제어하고, 로봇이 360° 회전하는 동안 주행 시작 위치 주변의 오브젝트에 대한 센싱 데이터를 획득할 수 있다. 또는, 프로세서는 주행 시작 위치에서 기 설정된 반경 내 에서, 로봇이 주행하도록 구동부를 제어하고, 로봇이 주행하는 동안 라이다 센서를 이용하여 주 행 시작 위치에서의 주변 오브젝트에 대한 센싱 데이터를 획득할 수도 있다. 이처럼, 주행 시작 위치에서 획득한 센싱 데이터는 이후 제1 맵 데이터 상에서 주행 시작 위치에 대응되는 위치를 식별하는데 이용될 수 있다. 프로세서는 로봇의 주행 시작 위치에서 센싱 데이터를 획득한 후, 획득된 센싱 데이터에 기초하여 제 1 맵 데이터 상에서 로봇의 주행 시작 위치에 대응되는 위치를 식별하고, 제1 맵 데이터 상에서 로봇의 주행 시작 위치에 대응되는 위치가 식별되지 않는 경우 로봇이 주행하도록 하도록 구동부를 제어할 수 있 다. 구체적으로, 프로세서는 라이다 센서를 통해 획득된 센싱 데이터를 기초로 제1 맵 데이터 상에서 의 로봇의 주행 시작 위치에 대응되는 위치를 식별할 수 있다. 여기에서, 로봇의 주행 시작 위치에 대응되는 위치를 식별한다는 것은 현재 로봇이 제1 맵 데이터 상에 설정된 주행 시작 위치에 위치하는지를 식별하는 것을 의미할 수 있다. 이하에서는, 설명의 편의 를 위해, 제1맵 데이터 상에 설정된 주행 시작 위치를 제1 주행 시작 위치라 지칭한다. 구체적으로, 프로세서는 라이다 센서를 이용하여 로봇의 주변 오브젝트에 대한 정보(즉, 로봇 과 로봇 주변의 오브젝트 간의 거리 데이터 및 주변의 오브젝트에 대응하는 포인트 클라우드 데이 터)를 획득한다. 이 경우, 주변 오브젝트에 대한 정보는 로봇이 주행하기 전 또는 로봇이 주행을 시 작한 시점에 획득될 수 있다. 그리고, 프로세서는 획득된 주변 오브젝트에 대한 정보를 기초로, 메모리에 저장된 제1 맵 데이터 상에서 로봇의 주행 시작 위치에 대응하는 위치를 식별할 수 있다. 구체적으로, 프로세서는 로봇의 주행 시작 위치인 로봇의 현재 위치가 제1 맵 데이터상에 설정된 제1 주행 시작 위치와 일치하는지를 식별하고, 그에 따라, 로봇의 주행 시작 위치에 대응하는 위치를 식별할 수 있다. 구체적으로, 프로세서는 라이다 센서를 이용하여 로봇의 현재 위치에서 획득한 주변 오브젝트에 대한 정보(예를 들어, 로봇 주변의 오브젝트에 대한 거리 데이터 및 오브젝트에 대응하는 포인트 클라우드 데이터)와 제1 맵 데이터상에서의 제1 주행 시작 위치에서 획득된 정보(예를 들어, 제1 주행 시작 위치 주변의 오브젝트에 대한 거리 데이터 및 오브젝트에 대응하는 포인트 클라우드 데이터)를 비교하여, 로봇 의 현재 위치가 제1 주행 시작 위치와 일치하는지를 식별할 수 있다. 이 경우, 제1 주행 시작 위치에서 획득된 정보는 로봇이 제1 주행 시작 위치에 위치할 때, 라이다 센서를 통해 획득되며, 프로세서는 획득된 정보를 메모리에 저장할 수 있다. 그리고, 프로세서는 로봇의 현재 위치가 제1 주행 시작 위치와 일치하는 것으로 식별되면, 로봇 이 제1 주행 시작 위치에 위치하는 것으로 식별할 수 있다. 한편, 프로세서는 로봇의 현재 위치가 제1 주행 시작 위치와 일치하는지 않는 경우, 로봇이 제1 주행 시작 위치에 위치하지 않는 것으로 식별할 수 있다. 한편, 프로세서는 로봇의 현재 위치가 제1 맵 데이터 상에서의 제1 주행 시작 위치와 일치하 는지 않는 것으로 식별되면, 프로세서는 로봇이 메모리에 저장된 제1 맵 데이터에 대응하는 제1 주행 공간이 아닌 새로운 주행 공간인, 제2 주행 공간에 위치한 것으로 식별할 수 있다. 즉, 프로세서(14 0)는 로봇이 위치한 주행 공간이 변경된 것으로 식별할 수 있다. 그리고 프로세서는 제2 주행 공간 내에서 로봇이 주행하도록 구동부를 제어할 수 있다. 구체적 으로, 프로세서는 구동부에 포함된 모터에 제어 신호를 전송하고, 모터를 통해 구동부를 구동하 고, 구동부의 구동에 의하여 제2 주행 공간 내에서 로봇을 이동시킬 수 있다. 그리고, 프로세서는 로봇이 주행하는 동안 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데이터를 획득할 수 있다. 구체적으로, 프로세서는 로봇의 주행 시작 위치가 제1 주행 시작 위치와 일치하지 않는 것으로 식 별되면, 로봇이 위치한 공간이 기존의 제1 맵 데이터에 대응하는 제1 주행 공간에서 새로운 주행 공간 인, 제2 주행 공간으로 변경된 것으로 식별할 수 있다. 그리고, 프로세서는 로봇의 주행 시작 위치를 새로운 주행 공간인 제2 주행 공간에서의 주행 시작 위치로 식별할 수 있다. 이하에서는, 제2 주행 공간에 대한 주행 시작 위치를 제2 주행 시작 위치라 지칭한다. 프로세서는 제2 주행 시작 위치에서 로봇이 주행하도록 구동부를 제어하고, 제2 주행 공간에 대한 신규 맵 데이터(즉, 제2 맵 데이터)를 생성하기 위한 데이터를 획득할 수 있다. 구체적으로, 프로세서 는 라이다 센서를 이용하여, 제2 주행 공간 및 제2 주행 공간 내 오브젝트에 대한 센싱 데이터를 획 득할 수 있다. 프로세서는 라이다 센서를 이용하여, 제2 주행 공간에서의 로봇과 로봇 주 변의 오브젝트 간의 거리 데이터 및 포인트 클라우드 데이터를 획득하고, 획득된 거리 데이터 및 포인트 클라우 드 데이터에 기초하여, 제2 맵 데이터를 생성할 수 있다. 도 4는 본 개시의 일 실시 예에 따른, 라이다 센서를 이용하여 오브젝트에 대한 거리 데이터 및 포인트 클라우 드 데이터를 획득하는 것을 나타낸 예시도이다. 구체적으로, 도 4를 참조하면, 프로세서는 라이다 센서를 이용하여 획득한 거리 데이터 및 포인트 클 라우드 데이터에 기초하여, 라인 형태를 갖는 오브젝트에 대응되는 라인 데이터를 획득할 수 있다. 구체적 으로, 프로세서는 라이다 센서를 이용하여 제2 주행 공간 내에서의 로봇과 로봇 주변의 오 브젝트 간의 거리 데이터를 획득할 수 있다. 그리고 프로세서는 라이다 센서에서 조사된 레이저가 오 브젝트에 반사된 각 지점들이 2차원 공간에서 좌표 값을 가지는 포인트로 표현된 포인트 클라우드 데이터를 획득할 수 있다. 그리고, 프로세서는 획득한 거리 데이터 및 포인트 클라우드 데이터를 기초로, 제2 주행 공간에 대한 포인트 클라우드 맵을 획득할 수 있다. 이하에서는, 설명의 편의를 위해 포인트 클라우드 맵 을 포인트 맵 데이터((예를 들어, 제2 포인트 맵 데이터)라 지칭한다. 프로세서는 획득한 포인트 클라우드 맵 상에서, 포인트 클라우드 데이터에 대응하는 복수 개의 직선 성분들을 획득할 수 있다. 구체적으로, 프로세서는 포인트 클라우드 데이터로부터 복수 개의 직선 성 분들을 추출할 수 있다. 그리고, 프로세서는 추출한 복수 개의 직선들에 대해 군집화(clustering)를 통하 여 라인 형태를 갖는 오브젝트에 대응되는 라인 데이터를 획득할 수 있다. 한편, 프로세서는 포인트 클라우드 데이터에 대하여 다양한 직선 검출 알고리즘(예를 들어, 허프 변환(Hough transform) 또는 HoughLines 함수 등)을 이용하여 직선 성분들을 추출할 수 있다. 한편, 프로세서는 포인트 맵 데이터 상에서 포인트 클라우드 데이터의 좌표 값을 기초로 라인 데이터 의 위치를 식별할 수 있다. 그리고, 프로세서는 식별된 라인 데이터의 위치를 라인 데이터에 대응하는 오브젝트의 위치로 식별할 수도 있다. 그리고, 프로세서는 포인트 클라우드 맵 데이터 상에서, 제2 주행 공간 내 오브젝트에 대응되는 라인 데이터를 획득한 후 포인트 클라우드 맵 데이터에 SLAM 알고리 즘을 적용하여 제2 맵 데이터를 획득할 수 있다. 한편, 본 개시의 일 실시 예로, 프로세서는 제2 맵 데이터를 획득한 후, 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 제2 맵 데이터에 대응되 는 제2 주행 공간이 제1 주행 공간과 일치하는지 여부를 식별할 수 있다. 구체적으로, 프로세서는 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보를 기초로, 제2 맵 데이터 상에서의 오브젝트의 위치를 식별할 수 있다. 예를 들어, 프로세서는 제2 맵 데이터에서의 오브 젝트의 위치에 대응하는 좌표 값을 식별할 수 있다. 그리고, 프로세서는 식별된 제2 맵 데이터 상에서의 오브젝트의 위치와 대응하는 위치를 제1 맵 데이 터 상에서 식별할 수 있다. 여기서, 제1 맵 데이터 상에서 오브젝트의 위치와 대응하는 위치를 식별하 는 것은, 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별되는지를 판단하는 것일수 있다. 즉, 제2 맵 데이터상에서의 오브젝트의 위치를 제1 맵 데이터 상에서의 위치로 인지하는 과정 (Localization)으로, 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별되는지를 판 단하는 것일 수 있다. 한편, 프로세서는 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별되는지를 판단하기 위해, 제1 맵 데이터에 포함된 확률 정보를 이용할 수 있다. 여기서 확률 정보는 제1 맵 데이터 상에서 특정 위치에 오브젝트가 존재할 수 있는 확률 값일 수 있다. 프로세서는 확률 정보에 기초하여, 제1 맵 데이터 상에서 식별된 위치에 오브젝트가 존재하는 것으로 식별되면, 제1 맵 데이터와 제2 맵 데이터 동일한 주행 공간에 대응하는 것으로 식별할 수 있다. 즉, 프로세서는 제1 맵 데이터에 대응하는 제1 주행 공간과 제2 맵 데이터에 대응하는 제2 주행 공간 이 일치한 것으로 식별할 수 있다. 예를 들어, 프로세서는 제2 맵 데이터 상에서 식별되는 복수의 벽, 구조물 등이 제1 맵 데이터 상에서도 식별되면, 제1 주행 공간과 제2 주행 공간이 일치하는 것으로 식별할 수 있다. 이하에서는, 도 5를 참조하여, 본 개시의 일 실시 예에 따른 맵 데이터에 대하여 설명하도록 한다. 도 5는 본 개시의 일 실시 예에 따른 맵 데이터를 설명하기 위한 도면이다. 본 개시의 일 실시 예에 따라, 제1 맵 데이터(또는 제2 맵 데이터)는 맵 데이터 상에서의 특정 위치에 오브젝트가 존재할 확률에 관한 확률 정보를 포함할 수 있다. 또한, 제2 맵 데이터(또는 제1 맵 데이터 )는 오브젝트의 위치 정보를 포함할 수 있다. 도 5를 참조하면, 라이다 센서를 통해 획득한 포인트 맵 데이터(예를 들어, 제1 포인트 맵 데이터)에 SLAM 알고리즘을 적용하여 획득한 제1 맵 데이터는 기 설정된 크기의 복수의 영역으로 분할될 수 있다. 이때, 제 1 맵 데이터는 각각의 영역에 대응되는 확률 정보를 포함할 수 있다. 구체적으로, 프로세서는 라이다 센서를 통해 획득한 센싱 데이터를 기초로, 포인트 맵 데이터를 획득하고, 획득한 포인트 맵 데이터에 SLAM 알고리즘을 적용하여, 제1 주행 공간에 대한 제1 맵 데이터를 획득할 수 있다. 이때, 획득한 제1 맵 데이터는 복수의 격자 선으로 분할되어, 기 설정된 크기를 갖는 복수의 영역으로 구분된 형태일 수 있다. 그리고, 제1 맵 데이터에는 각각의 영역에 대응하는 확률 정보가 포함될 수 있 다. 여기서 각각의 영역에 대응하는 확률 정보란, 각각의 영역에서 오브젝트가 존재할 수 있는 확률 값일 수 있다. 그리고, 프로세서는 확률 값이 기 설정된 값 이상인 영역에 대하여, 해당 영역에 오브젝트가 존 재하는 것으로 식별할 수 있다. 도 5를 참조하면, 프로세서는 획득한 제1 맵 데이터에 포함된 각각의 영역에 대응하는 확률 정보를 기 초로, 확률 값이 0.6 이상인 영역에 대해서만, 해당 영역에 오브젝트가 존재한 것으로 식별할 수 있다. 이에 따 라, 프로세서는, 0.1의 확률 값을 갖는 제1 영역(21-1)과 0.2의 확률 값을 갖는 제2 영역(21-2)에는 오브 젝트가 존재하지 않는 것으로 식별할 수 있다. 그리고, 프로세서는 오브젝트가 존재한 것으로 식별된 각각 의 영역의 위치 정보 또는 좌표 정보를 기초로, 제1 주행 공간 내에서의 오브젝트의 위치를 식별할 수 있다. 따 라서, 제1 맵 데이터에 포함된 오브젝트에 대한 위치 정보는, 확률 정보에 기초하여 식별된 각각의 영역의 위치 정보 또는 좌표 정보에 해당할 수 있다. 한편, 상술한 제1 맵 데이터에 관한 설명은 제2 맵 데이터에 대해서도 동일하게 적용될 수 있다. 따라 서, 프로세서는 제2 맵 데이터를 기초로, 제2 주행 공간 내에서의 오브젝트의 위치를 식별할 수 있다. 한편, 본 개시의 일 실시 예에 따라, 제1 맵 데이터 및 제2 맵 데이터는 동일한 개수의 복수의 영역으 로 구분될 수 있다. 또한, 제1 맵 데이터 및 제2 맵 데이터를 구분하는 복수의 영역의 형태는 동일할 수 있다. 예를 들어, 메모리에 저장된 제1 맵 데이터가 10 x 10의 형태의 100개의 영역으로 구분된다 면, 프로세서가 라이다 센서에 의해 새롭게 획득한 제2 맵 데이터 또한 10 x 10의 형태의 100개 의 영역으로 구분될 수 있다. 한편, 프로세서는 제2 주행 공간 내 오브젝트의 위치를 식별하기 위하여, 제2 맵 데이터를 생성하는데 이용되는 포인트 클라우드 중 유효 포인트 만을 선별할 수 있다. 이를 위해, 본 개시의 일 실시 예에 따라, 프로세서는, 라이다 센서를 통해 제2 주행 공간에 대응하 는 포인트 맵 데이터를 획득하고, 포인트 맵 데이터에 포함된 복수의 포인트 중 기 설정된 확률 값 이 상인 복수의 포인트를 유효 포인트로 식별하고, 식별된 유효 포인트의 위치 정보를 기초로, 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보를 획득할 수 있다. 그리고, 프로세서는 유효 포인트의 위치 정보를 기초로 획득한 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보와 제1 맵 데이터에 포함된 확률 정 보를 기초로, 제1 맵 데이터와 제2 맵 데이터 간의 매칭 스코어를 획득할 수 있다. 그리고, 프로세서 는 획득된 매칭 스코어에 기초하여 제2 주행 공간이 제1 주행 공간과 일치하는지 여부를 식별할 수 있다. 이하 이와 관련한 본 개시의 실시 예에 대하여 상세히 설명하도록 한다. 구체적으로, 프로세서는 라이다 센서를 이용하여 제2 주행 공간에 대한 센싱 데이터를 획득하고, 획 득된 센싱 데이터를 기초로 제2 주행 공간에 대한 포인트 맵 데이터를 획득할 수 있다. 여기서, 포인트 맵 데이터란, 로봇이 라이다 센서를 통해 획득한 제2 주행 공간에 대한 포인트 클라우드 맵 일 수 있다. 구체적으로, 프로세서는 로봇이 제2 주행 공간을 주행하는 동안, 라이다 센서를 이용하여, 제2 주행 공간에 관한 거리 데이터 및 포인트 클라우드 데이터를 획득할 수 있다. 그리고, 획득된 거리 데이터 및 포인트 클라우드 데이터가 포함된 포인트 클라우드 맵을 획득할 수 있다. 프로세서가 주행 공간에 대한 포인트 클라우드 맵을 획득하는 방법에 대해서는 상술하여 설명한 바 생략하도록 한다. 도 6은 본 개시의 일 실시 예에 따른, 유효 포인트를 식별하고, 식별된 유효 포인트를 기초로 제2 맵 데이터 상 에서 오브젝트의 위치를 식별하는 것을 나타낸 예시도이다. 그리고, 프로세서는 획득한 포인트 맵 데이터에 SLAM 알고리즘을 적용하여 제2 맵 데이터를 획득 할 수 있다. 그리고 프로세서는 획득된 제2 맵 데이터에 포함된 확률 정보에 기초하여, 포인트 맵 데 이터에 포함된 포인트 클라우드 또는 포인트 클라우드를 구성하는 복수의 포인트 중에서 유효 포인트를 식 별할 수 있다. 예를 들어, 도 6을 참조하면, 유효 포인트를 식별하는 기준인, 기 설정된 확률 값이 0.3 이라고 가정한다. 이때, 프로세서는 제2 맵 데이터 내 복수의 영역 중 확률 값이 0.3 이하의 확률 값을 갖는 영역을 식별할 수 있다. 보다 구체적으로, 제2 맵 데이터 내 복수의 영역 중 0.1의 확률 값을 갖는 4개의 영역 (31-1, 31-3, 31-4 및 31-5)과 0.2의 확률 값을 갖는 1개의 영역(31-2)을 식별할 수 있다. 그리고, 프로세서 는 식별된 영역(31-1 내지 31-5)에 포함된 포인트(42-1 내지 42-5)를 제외한 나머지 포인트를 포인트 맵 데이터 상에서 유효 포인트로 식별할 수 있다. 즉, 프로세서는 포인트 맵 데이터 상에서 기 설정 된 확률 값 미만의 확률 값을 갖는 영역에 포함된 포인트를 제거한 후 나머지 포인트 만을 유효 포인트로 식별 할 수 있다. 그리고, 프로세서는 유효 포인트의 위치 정보를 기초로 제2 맵 데이터에 포함된 오브젝트의 위치를 식 별할 수 잇다. 구체적으로, 프로세서는 포인트 맵 데이터 상에서의 유효 포인트의 좌표 값을 식별하고, 식별된 좌표 값에 대응하는 영역의 위치를 제2 맵 데이터 상에서 식별할 수 있다. 그리고, 프로 세서는, 제2 맵 데이터 상에서 식별된 영역의 위치에 오브젝트가 위치한 것으로 식별할 수 있다. 한편, 본 개시의 일 실시 예로, 프로세서는 제2 맵 데이터 상에서 식별된 유효 포인트의 위치 정보 및 제1 맵 데이터에 포함된 확률 정보를 기초로, 제1 맵 데이터와 제2 맵 데이터 간의 매칭 스코어를 획득할 수 있다. 여기서, 매칭 스코어는 제1 맵 데이터와 제2 맵 데이터의 일치하는 정도를 나타낸 값일 수 있다. 구체 적으로, 매칭 스코어가 임계 값 이상이면, 프로세서는 제2 주행 공간에서 식별된 오브젝트가 제1 주행 공 간에도 존재하는 것으로 식별할 수 있다. 그리고, 프로세서는 제2 주행 공간에서 식별된 오브젝트가 제1 주행 공간에도 존재하는 것으로 식별되면, 제1 맵 데이터와 제2 맵 데이터의 일치하는 것으로 식별할 수 있다. 그리고, 프로세서는 제1 맵 데이터와 제2 맵 데이터의 일치하는 것으로 식별되면, 제1 맵 데이터에 대응하는 제1 주행 공간과 제2 맵 데이터에 대응하는 제2 주행 공간이 일치하는 것으로 식 별할 수 있다. 한편, 프로세서는 매칭 스코어가 임계 값 미만이면, 제1 주행 공간과 제2 주행 공간이 일치하지 않는 것으 로 식별할 수 있다. 이하에서는, 매칭 스코어를 획득하는 본 개시의 실시 예에 대하여 설명하도록 한다. 도 7은 본 개시의 일 실시 예에 따른, 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트 에 대한 위치 정보에 기초하여 제2 맵 데이터에 대응되는 제2 주행 공간이 제1 주행 공간과 일치하는지 여부를 식별하는 것을 설명하기 위한 예시도이다. 본 개시의 일 실시 예로, 프로세서는 유효 포인트의 위치 정보를 기초로, 제1 맵 데이터 상에서 제2 맵 데이터 내 오브젝트의 위치와 대응하는 영역을 식별할 수 있다. 그리고, 프로세서는 제1 맵 데 이터에 포함된 확률 정보에 기초하여, 식별된 영역에 대응하는 확률 값을 식별할 수 있다. 그리고, 프 로세서는 식별된 확률 값을 기초로, 매칭 스코어를 획득할 수 있다. 한편, 본 개시의 일 실시 예로, 매칭 스코어는 식별된 복수의 영역 각각에 대응되는 확률 값의 평균 값일 수 있다. 그리고 평균 값은 확률 값의 총 합을 제1 맵 데이터 내 복수의 영역의 개수로 나눈 값일 수 있다. 구체적으로, 프로세서는 먼저 제2 주행 공간 내에서 식별된 오브젝트의 위치를 제1 맵 데이터 상에서 인지하는 과정을 수행할 수 있다. 이를 위해, 프로세서는 제2 맵 데이터에 포함된 제2 주행 공간 내 오브젝트에 대한 위치 정보를 이용할 수 있다. 구체적으로, 프로세서는 포인트 맵 데이터 내에서의 유효 포인트의 위치 정보를 기초로 제2 맵 데이터 상에서의 오브젝트의 위치와 대응하는 영역을 제2 맵 데이터 상에서 식별할 수 있다. 그리고, 프로세 서는 식별된 제2 맵 데이터 상에서의 영역과 대응하는 제1 맵 데이터 상에서의 영역을 식별할 수 있다. 예를 들어, 프로세서는 제2 맵 데이터 상에서 (2, 1) 좌표 값에 대응되는 영역 및 (2, 2) 좌 표 값에 오브젝트가 존재한 것으로 식별하였다고 가정한다. 이때, 프로세서는 제1 맵 데이터 상에서도 동일한 (2, 1) 좌표 값에 대응되는 영역 및 (2, 2) 좌표 값에 대응되는 영역에 오브젝트가 위치한 것으로 식별 할 수 있다. 그리고, 프로세서는 제1 맵 데이터 상에서 식별된 (2, 1) 좌표 값에 대응되는 영역의 확 률 값과 (2, 2) 좌표 값에 대응되는 영역의 확률 값을 식별할 수 있다. 그리고, 프로세서는 식별된 복수의 확률 값의 평균 값을 산출하고, 산출된 평균 값을 제1 맵 데이터와 제2 맵 데이터 간의 매칭 스코어로 식별할 수 있다. 이때, 본 개시의 일 실시 예로, 프로세서는 확률 값의 평균 값이 임계 값 이상이면, 제2 주행 공간이 제1 주행 공간과 일치하는 것으로 식별할 수 있다. 구체적으로, 프로세서는 매칭 스코어에 해당하는 확률 값의 평균 값이 기 설정된 값 이상이면, 제2 맵 데 이터 내 오브젝트가 제1 맵 데이터에 포함된 것으로 식별할 수 있다. 즉, 제2 주행 공간 내 포함된 오 브젝트가 제1 주행 공간에도 동일하게 포함된 것으로 식별될 수 있다. 이에 따라, 프로세서는 제1 주행 공 간과 제2 주행 공간이 일치하는 것으로 식별할 수 있다. 보다 구체적으로, 도 7을 참조하면, 제1 맵 데이터내 복수의 영역 중 음영 처리된 영역이 제1 맵 데이터 상에서 식별된 오브젝트의 위치(또는 영역)에 대응하는 위치(또는 영역)일 수 있다. 프로세서는 제1 맵 데이터내 복수의 영역 중 음영 처리된 복수의 영역에 대한 각각의 확률 값을 식별할 수 있다. 그리고, 프로세서는 식별된 복수의 확률 값의 평균 값을 획득할 수 있다. 그리고 프로세서는 획득한 평균 값을 매칭 스코어로 식별할 수 있다. 구체적으로, 프로세서는 식별된 복수의 확률 값의 총 합(3.4)을 제1 맵 데이터를 구분하는 복수의 영역의 개수(100 개)로 나눠 평균 값(0.034)을 획득할 수 있다. 그리고, 프로세서는 획득한 평균 값을 매칭 스코어(0.034)로 획득할 수 있다. 이때, 제1 주행 공간과 제2 주행 공 간이 일치하는 것으로 판단하는 기준인, 임계 값이 0.033이라고 가정한다면, 프로세서는 제1 맵 데이터 에 대응하는 제1 주행 공간과 제2 맵 데이터에 대응하는 제2 주행 공간이 일치하는 것으로 식별할 수 있다. 한편, 본 개시의 일 실시 예로, 프로세서는 확률 값의 평균 값이 임계 값 미만인 것으로 식별되면, 메모리 에 저장된 제1 맵 데이터를 제2 맵 데이터로 업데이트할 수 있다. 구체적으로, 프로세서는 매칭 스코어에 해당하는 확률 값의 평균 값이 임계 값 미만인 것으로 식별되면, 제1 주행 공간과 제2 주행 공간이 일치하지 않는 것으로 식별할 수 있다. 즉, 프로세서는 로봇이 새 로운 주행 공간에 위치한 것으로 식별할 수 있다. 이에 따라, 프로세서는 메모리에 저장된 기존의 제 1 주행 공간에 대한 제1 맵 데이터를 새로운 주행 공간인 제2 주행 공간에 대한 제2 맵 데이터로 업데 이트 할 수 있다. 즉, 프로세서는 메모리에 저장된 제1 맵 데이터를 삭제하고, 제2 맵 데이터 를 저장할 수 있다. 이로써, 프로세서는 제2 맵 데이터를 이용하여, 제2 주행 공간 내에서 로봇 이 주행하도록 제어할 수 있다. 도 8은 본 개시의 일 실시 예에 따른, 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트 에 대한 위치 정보에 기초하여 제2 맵 데이터에 대응되는 제2 주행 공간이 제1 주행 공간과 일치하지 않는 것으 로 식별하는 것을 나타낸 예시도이다. 도 8을 참조하면, 프로세서가 획득한 제1 맵 데이터와 제2 맵 데이터에 대한 매칭 스코어는 0.032 이다. 이때, 제1 주행 공간과 제2 주행 공간이 일치하는 것으로 판단하는 기준인, 임계 값이 0.033이라고 가정 한다면, 프로세서는 획득한 매칭 스코어(0.032)가 기 설정된 값(0.033) 미만인 것으로 식별할 수 있으며, 프로세서는 제1 맵 데이터에 대응하는 제1 주행 공간과 제2 맵 데이터에 대응하는 제2 주행 공간 이 일치하지 않은 것으로 식별할 수 있다. 그리고, 프로세서는 메모리에 저장된 제1 맵 데이터를 삭제하고, 제2 맵 데이터를 메모리에 저장할 수 있다. 한편, 프로세서는 복수의 매칭 스코어를 획득하고, 획득한 복수의 매칭 스코어의 최대 값이 기 설정된 값 이 이상인 경우에, 제1 주행 공간과 제2 주행 공간이 일치한 것으로 식별할 수 있다. 이하, 이와 관련된 본 개 시의 일 실시 예에 대하여 설명하도록 한다. 도 9는 본 개시의 일 실시 예에 따른, 제2 맵 데이터를 기 설정된 각도로 회전시켜, 제1 주행 공간과 제2 주행 공간이 일치하는 지를 식별하는 방법을 설명하기 위한 도면이다. 구체적으로, 도 9(a)는 제2 맵 데이터를 회전 시키지 않은 상태에서, 제1 주행 공간과 제2 주행 공간이 일 치하는 지를 식별하는 방법을 설명하기 위한 도면이고, 도 9(b)는 제2 맵 데이터를 반 시계 방향으로 90° 만큼 회전 시킨 상태에서, 제1 주행 공간과 제2 주행 공간이 일치하는 지를 식별하는 방법을 설명하기 위한 도 면이고, 도 9(c)는 제2 맵 데이터를 반 시계 방향으로 180°만큰 회전 시킨 상태에서, 제1 주행 공간과 제2 주행 공간이 일치하는 지를 식별하는 방법을 설명하기 위한 도면이고, 도 9(d)는 제2 맵 데이터를 반 시계 방향으로 270°만큰 회전 시킨 상태에서, 제1 주행 공간과 제2 주행 공간이 일치하는 지를 식별하는 방법을 설 명하기 위한 도면이다. 본 개시의 일 실시예로, 프로세서는, 제2 맵 데이터를 기 설정된 각도로 회전시키고, 제2 맵 데이터 를 기 설정된 각도로 회전시킬 때마다, 확률 값의 평균 값을 획득하여 복수의 매칭 스코어를 획득할 수 있 다. 그리고, 복수의 매칭 스코어 중 최대 값을 갖는 매칭 스코어 기 설정된 값 이상이면 제1 주행 공간과 제2 주행 공간이 일치하는 것으로 식별할 수 있다. 구체적으로, 프로세서는 제1 맵 데이터와 제2 맵 데이터의 매칭 스코어를 복수 개 획득할 수 있다. 이를 위해, 프로세서는 제1 맵 데이터 상에서의 기준 점을 기준으로, 제2 맵 데이터를 기 설정된 각도로 회전시킬 수 있다. 그리고, 프로세서는 회전시킨 제2 맵 데이터 내 오브젝트의 위치와 대응하는 위치를 제1 맵 데이터 상에서 식별할 수 있다. 기 설정된 각도가 반 시계 방향으로의 90°라고 가정한다. 도 9(a)를 참조하면, 먼저, 프로세서는 제1 맵 데이터의 기준 점을 기준으로, 제2 맵 데이터를 회전시키지 않은 상태에서 제2 맵 데이터에서의 오 브젝트의 위치와 대응하는 제1 맵 데이터에서의 위치를 식별할 수 있다. 구체적으로, 프로세서는 제2 맵 데이터에서의 오브젝트의 위치에 대응하는 제1 맵 데이터 내 영역의 위치(예를 들어, 영역의 좌표 값)를 식별할 수 있다. 그리고, 프로세서는 식별된 영역에 대응하는 확률 값을 식별하고, 식별된 확률 값 의 평균 값을 제1 맵 데이터와 제2 맵 데이터의 매칭 스코어를 0.034으로 획득할 수 있다. 그리고, 도 9(b)를 참조하면, 프로세서는 제1 맵 데이터의 기준 점을 기준으로, 제2 맵 데이터(3 0)를 반 시계 방향으로 90°회전한 후 제2 맵 데이터에서의 오브젝트의 위치에 대응하는 위치를 제1 맵 데 이터상에서 식별할 수 있다. 그리고, 프로세서는 제2 맵 데이터가 반 시계 방향으로 90°회전한 상태에서 식별된 영역에 대응하는 확률 값을 식별할 수 있다. 그리고, 프로세서는 제2 맵 데이터가 반 시계 방향으로 90°회전한 상태에서의 제1 및 제2 맵 데이터 간의 매칭 스코어를 0.209으로 획득할 수 있다. 이처럼, 프로세서는 제2 맵 데이터를 반 시계 방향으로 90°씩 회전시킬 때마다 제1 및 제2 맵 데이터 간의 매칭 스코어를 획득할 수 있다. 도 9(c)를 참조하면, 프로세서는 제2 맵 데이터가 반 시계 방향으로 180°회전한 상태에서의 제1 및 제2 맵 데이터 간의 매칭 스코어를 0.034으로 획득할 수 있다. 그리고, 도 9(d)를 참조하면, 제2 맵 데이터 가 반 시계 방향으로 270°회전한 상태에서의 제1 및 제2 맵 데이터 간의 매칭 스코어를 0.270으로 획 득할 수 있다. 그리고, 프로세서는 획득한 복수의 매칭 스코어(0.034, 0.202, 0.034 및 0.270) 중에서 최 대 값을 갖는 매칭 스코어(0.270)가 기 설정된 값 이상인지를 식별할 수 있다. 그리고, 프로세서는 최대 값을 갖는 매칭 스코어가 기 설정된 값 이상인 것으로 식별되면, 제1 맵 데이터에 대응하는 제1 주행 공간 과 제2 맵 데이터에 대응하는 제2 주행 공간이 일치하는 것으로 식별할 수 있다. 한편, 본 개시의 일 실시 예에 따라, 기 설정된 각도는 유효 포인트의 개수에 기초하여 결정될 수 있다. 구체적 으로, 유효 포인트의 개수가 적을수록 제2 맵 데이터 상에서 유효 포인트의 위치에 대응하여 식별되는 영역 의 개수 또한 적을 수 있다. 그리고, 제2 맵 데이터 상에서 식별되는 영역의 개수가 적으면, 제1 맵 데이터 상에서 식별되는 오브젝트의 위치에 대응하는 영역 또한 적을 수 있다. 따라서, 프로세서는 유효 포인트의 개수가 적을수록 기 설정된 각도를 작게 설정함으로써, 제2 맵 데이터를 제1 맵 데이터 상에 서 더 빈번하게 회전시켜 많은 매칭 스코어를 획득할 수 있다. 즉, 프로세서는 기 설정된 각도를 유효 포 인트의 개수와 반비례하도록 설정함으로써, 제1 맵 데이터와 제2 맵 데이터의 매칭 여부를 좀 더 세밀 하게 식별할 수 있다. 한편, 본 개시의 일 실시 예로, 프로세서는 제2 주행 공간이 제1 주행 공간과 일치하는 것으로 식별되면, 제2 맵 데이터 상에서의 로봇의 주행 시작 위치 및 오브젝트에 대한 위치 정보에 기초하여 제1 맵 데이터 상에서 로봇의 주행 시작 위치를 식별할 수 있다. 도 10은 본 개시의 일 실시 예에 따른, 제2 맵 데이터 상에서의 로봇의 주행 시작 위치 및 오브젝트에 대한 위 치 정보에 기초하여 제1 맵 데이터 상에서 로봇의 주행 시작 위치를 업 데이트 하는 것을 나타낸 예시도이다. 구체적으로, 도 10을 참조하면, 프로세서는 제1 맵 데이터와 제2 맵 데이터가 동일한 주행 공간에 대응하는 것으로 식별되면, 제1 맵 데이터 상에서의 새로운 주행 시작 위치를 설정할 수 있다. 즉, 제1 맵 데이터 상에서의 제1 주행 시작 위치를 새로운 주행 시작 위치로 변경할 수 있다. 이를 위해, 프로세서 는 제2 맵 데이터 상에서 식별되는 제2 주행 시작 위치를 식별할 수 있다. 예를 들어, 프로세서 는 제2 맵 데이터 상에서 식별되는 제2 주행 시작 위치의 좌표 값을 식별할 수 있다. 그리고, 프로 세서는 제2 맵 데이터 상에서의 오브젝트에 대한 위치를 식별하고, 식별된 오브젝트에 대한 위치와 대 응하는 위치를 제1 맵 데이터 상에서 식별할 수 있다. 그리고, 프로세서는 제2 맵 데이터 상에서의 오브젝트에 대한 위치 및 제1 맵 데이터 상에서 식별 된 오브젝트에 대한 위치를 기초로, 변환 함수를 식별할 수 있다. 예를 들어, 프로세서는 제2 맵 데이터 상에서의 오브젝트에 대한 위치에 대응하는 영역의 좌표 값을 식별할 수 있다. 그리고, 프로세서는 제2 맵 데이터의 영역과 대응하는 영역을 제1 맵 데이터 상에서 식별하고, 식별된 제1 맵 데이터 상에서의 영역의 좌표 값을 식별할 수 있다. 그리고, 프로세서는 제1 맵 데이터의 영역의 좌표 값과 제2 맵 데이터의 영역의 좌표 값을 기초로 변환 함수를 획득하고, 획득된 변환 함수를 이용하여 제2 맵 데 이터 상에서 식별된 제2 주행 시작 위치의 좌표 값을 변환할 수 있다. 그리고 프로세서는 변환된 좌표 값을 제1 맵 데이터 상에서의 새로운 주행 시작 위치로 식별할 수 있다. 즉, 프로세서는 제1 주 행 시작 위치를 변환된 좌표 값으로 변경하여 식별할 수 있다. 한편, 본 개시의 일 실시 예로, 프로세서는 제2 맵 데이터를 기 설정된 각도로 회전시킬 때마다 평균 값을 획득하고, 획득한 평균 값 중 최대 값을 갖는 평균 값에 대응하는 회전 각도를 식별하고, 식별된 회전 각 도 및 제2 맵 데이터 상에서의 로봇의 주행 시작 위치에 기초하여 제1 맵 데이터 상에서 로봇의 주행 시작 위치를 식별할 수 있다. 다시 도 9(a) 내지 9(d)를 참조하면, 프로세서가 제2 맵 데이터를 제1 맵 데이터의 기준 점을 기준으로 반 시계 방향으로 270°회전 시켰을 때 획득한 평균 값, 즉 매칭 스코어가 최대 값을 갖는다. 이때, 프로세서는 최대 값을 갖는 매칭 스코어에 대응하는 회전 각도를 식별할 수 있다. 즉, 프로세서는 반 시계 방향으로 270°의 회전 각도를 식별할 수 있다. 그리고, 프로세서는 식별된 회전 각도(반 시계 방향 으로 270°)를 기초로, 제2 맵 데이터 상에서의 제2 주행 시작 위치의 좌표 값을 변환한 후 변환된 좌표 값을 제1 맵 데이터의 새로운 주행 시작 위치로 식별할 수 있다. 예를 들어, 프로세서는 식별된 회전 각도에 대응하는 변환 행렬을 식별한 후 식별된 변환 행렬을 제2 맵 데이터 상에서의 제2 주행 시작 위치 의 좌표 값에 적용하여 새로운 주행 시작 위치의 좌표 값을 식별할 수 있다. 그리고, 프로세서는 제1 맵 데이터의 제1 주행 시작 위치를 식별된 새로운 주행 시작 위치의 좌표 값으로 변경할 수 있다. 도 11은 본 개시의 일 실시 예에 따른, 맵 데이터를 서브 영역으로 구분하여, 매칭 스코어를 획득하는 것을 나 타낸 예시도이다. 본 개시의 일 실시 예로, 메모리에 저장된 제1 맵 데이터는, 기 설정된 개수의 영역을 포함하는 복수의 서브 영역으로 분할될 수 있다. 여기서 서브 영역이란, 복수의 영역 중 기 설정된 개수의 인접 한 복수의 영역을 포함하는 영역을 의미할 수 있다. 이때 복수의 서브 영역, 각각에 포함되는 영역의 개수 는 동일할 수 있다. 프로세서는 제1 맵 데이터에 기 설정된 크기의 복셀(Voxel Filter)를 적용하여, 하나의 복셀에 포함되 는 복수의 영역을 결합하고, 결합된 복수의 영역을 하나의 서브 영역으로 식별할 수 있다. 이때, 복셀 필터의 크기에 따라, 서브 픽셀에 포함되는 영역의 개수는 달라질 수 있다. 도 11에서는, 제1 맵 데이터가 인접한 4개의 영역을 2 X 2의 매트릭스 형태로 포함하는 복수의 서브 영 역으로 구분된 것으로 도시 되었다. 이때, 제1 맵 데이터를 복수의 서브 영역으로 구분하는 경우, 제1 맵 데이터는 5 X 5의 매트릭스 형태의 복수의 서브 영역으로 구분될 수 있다. 한편, 프로세서는, 서브 영역에 포함된 기 설정된 개수의 영역 중 어느 하나의 영역에 대응하는 확률 값을 식별하고, 식별된 위치에 대응하는 영역이 복수의 영역 중 어느 하나이면, 식별된 확률 값을 적용하여 매 칭 스코어를 획득할 수 있다. 구체적으로, 프로세서는 서브 영역에 포함된 복수의 영역 각각에 대응하는 확률 정보를 기초로, 각각의 영역에 대한 확률 값을 식별하고, 식별된 복수의 확률 값 중 어느 하나를 서브 영역에 대응하는 확률 값으로 식별할 수 있다. 다시 말해, 프로세서는 서브 영역에 포함된 복수의 영역 중 어느 하 나의 영역에 대한 확률 값으로, 서브 영역의 확률 값을 설정할 수 있다. 이때, 프로세서는 서브 영역에 대응하는 확률 값을 식별하기 위하여 복수의 서브 영역에 대하여 동일한 기준을 적용할 수 있다. 구체적으로, 도 11을 참조하면, 프로세서가 각각의 서브 영역에 포함된 복수의 영역 중 2행 1열에 위치한 영역의 확률 값을, 각각의 서브 영역에 대응하는 확률 값으로 식별하는 것으로 가정한다. 이때, 프 로세서는 제1 서브 영역(22-1)에 포함된 4개의 영역(21-3 내지 21-6) 중 2행 1열에 위치한 영역(21-5)의 확률 값인 0.8을 제1 서브 영역(22-1)에 대응하는 확률 값으로 식별할 수 있다. 그리고, 프로세서는 제1 맵 데이터 상에서 우측 하단에 위치한 제2 서브 영역(22-2)에 대해서도, 제2 서브 영역(22-2)에 포함된 4개 의 영역(21-7 내지 21-10) 중 2행 1열에 위치한 영역(21-9)의 확률 값인 '0'을 제2 서브 영역(22-2)에 대응하는 확률 값으로 식별할 수 있다. 한편, 프로세서는 식별된 위치에 대응하는 영역이 서브 픽셀이 포함된 복수의 영역 중 어느 하나이면, 식 별된 확률 값을 적용하여 매칭 스코어를 획득할 수 있다. 구체적으로, 프로세서는 유효 포인트를 기초로 획득된 라인 데이터의 위치를 포인트 맵 상에서 식별하고, 식별된 위치에 대응하는 위치 또는 좌표 값을 맵 데이터 상에서 식별할 수 있다. 이때, 프로세서는 식별된 위치 또는 좌표 값이 서브 영역을 구성하는 복수의 영역 중 적어도 하나의 영역에 포함되면, 식별된 위치 또는 좌표 값이 서브 영역에 포함된 것을 식별할 수 있다. 또한, 프로세서는 서브 영역에 설정된 확률 값에 대응하는 영역 이외의 나머지 영역에 식별된 위치 또 는 좌표 값이 포함되더라도, 식별된 위치 또는 좌표 값이 서브 영역에 포함된 것으로 식별할 수 있다. 한편, 프로세서는 식별된 위치 또는 좌표 값이 서브 영역에 포함된 것으로 식별되면, 서브 영역에 대응하여 설정된 확률 값을 획득하고, 획득된 확률 값을 이용하여 매칭 스코어를 획득할 수 있다. 다시 도 11을 참조하면, 프로세서는 서브 영역으로 구분된 제1 맵 데이터와 제2 맵 데이터의 매칭 스코어를 0.072((0.8Х9)χ100)로 식별하였다. 복수의 서브 영역으로 제1 맵 데이터를 구분하여 매칭 스코어를 획득하는 경우, 프로세서는 기 설정된 개수의 영역에 대한 연산 과정을 하나의 서브 영역 에 대한 연산 과정으로 간소화하여, 매칭 스코어를 획득하는 시간을 절감하는 효과를 발휘할 수 있다. 다만, 도 7 및 도 11을 비교하였을 때, 복수의 영역으로 제1 맵 데이터를 구분하였을 때보다, 복수의 서브 영역으로 제1 맵 데이터를 구분하는 경우 획득한 매칭 스코어가 더 낮은 값을 갖는 것을 알 수 있 다. 따라서, 서브 영역으로 구분된 제1 맵 데이터에 기반하여, 제1 주행 공간과 제2 주행 공간이 일치 하는지를 식별하는 경우, 임계 값은 더 낮은 값으로 설정될 수 있다. 한편, 본 개시의 일 실시 예로, 서브 영역에 포함되는 영역의 개수는, 유효 포인트의 개수에 기초하여 결정될 수 있다. 도 12는 본 개시의 일 실시 예에 따른, 유효 포인트의 개수에 기초하여 서브 영역에 포함되는 영역의 개수를 증 가시키는 것을 나타낸 예시도이다. 구체적으로, 제2 맵 데이터 상에서의 유효 포인트의 개수가 많을수록, 유효 포인트를 기초로 획득되는 라인 데이터의 개수도 증가할 수 있다. 그리고 라인 데이터의 개수가 증가함에 따라, 프로세서가 수행해야 하는, 라인 데이터의 위치와 대응하는 제1 맵 데이터 상에서의 위치를 식별하는 과정의 횟수 또한 증가할 수 있다. 이에 따라, 프로세서는 유효 포인트의 개수가 많을수록, 서브 영역에 포함되는 영역의 개수를 증가시킬 수 있다. 이를 위해, 프로세서는 제2 맵 데이터 상에서의 유효 포인트의 개수를 식별 하고, 식별된 유효 포인트 개수에 기초하여 복셀 필터의 크기를 결정할 수 있을 것이다. 예를 들어, 프로세서는 유효 포인트의 개수가 제1 값 미만이면, 서브 영역에 포함되는 영역의 개수를 n2(n은 2 이상의 자연수이다.)으로 설정하고, n2 개의 복수의 영역이 n x n의 매트릭스 형태로 서브 영역에 포함되는 것으로 설정할 수 있다. 또한, 프로세서는 유효 포인트의 개수가 제1 값 이상이면, 서브 영역 에 포함되는 영역의 개수를 m2(m은 n 이상의 자연수이다.)으로 설정하고, m2 개의 복수의 영역이 m x m의 매 트릭스 형태로 서브 영역에 포함되는 것으로 설정할 수 있다. 도 12를 참조하면, 기존의 서브 영역에는 4개의 영역이 2 x 2의 매트릭스 형태로 포함되었다면, 유효 포인 트의 개수가 증가함에 따라, 프로세서는 9개의 영역이 3 x 3의 매트릭스 형태로 서브 영역에 포함되도 록 변경할 수 있을 것이다. 이처럼, 프로세서는 유효 포인트 개수에 기초하여 서브 영역에 포함되는 영역의 개수를 변경함으로써, 제1 주행 공간과 제2 주행 공간의 일치하는지 여부를 신속히 판단할 수 있을 것이다. 한편, 도 1 내지 도 12에서는 프로세서가 라이다 센서를 통해 획득한 센싱 데이터를 기초로 2차원의 맵 데이터(예를 들어, 제1 맵 데이터 및 제2 맵 데이터)를 획득하는 것으로 도시 되었으나, 이에 제한 되는 것은 아니며, 프로세서는 3D(3-Dimension) 라이다 센서를 통해 획득한 센싱 데이터를 기초로 로 봇의 주행 공간 및 주변 환경에 대한 3차원 형태의 맵 데이터를 획득하는 것 또한 가능하다. 도 13은 본 개시의 일 실시 예에 따른 로봇의 세부적인 구성도이다. 본 개시의 일 실시 예에 따라 로봇은 라이다 센서, 구동부, 메모리, 프로세서, 디스 플레이, 입출력 인터페이스 및 통신 인터페이스를 포함할 수 있다. 도 11에 도시된 구성 중 도 3에 도시된 구성과 중복되는 구성에 대해서는 자세한 설명을 생략하도록 한다. 디스플레이는 다양한 시각 정보를 표시할 수 있다. 예를 들어, 프로세서는 디스플레이를 통해 제1 맵 데이터, 제2 맵 데이터 및 로봇의 주행 경로 정보를 표시할 수 있을 것이다. 한편, 디스플 레이는 LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플레이, QLED(Quantum dot light-emitting diodes) 디스플레이, PDP(Plasma Display Panel) 등과 같은 다양한 형태의 디스플레이로 구현될 수 있다. 디스플레이 내에는 TFT, LTPS(low temperature poly silicon) TFT, OTFT(organic TFT) 등과 같은 형태로 구현될 수 있는 구동 회로, 백라이트 유닛 등도 함께 포함될 수 있다. 한편, 디스플레이(15 0)는 플렉서블 디스플레이(flexible display), 3차원 디스플레이(3D display) 등으로 구현될 수 있다. 입출력 인터페이스는 로봇이 사용자와 인터렉션(Interaction)을 수행하는 데 이용되는 구성으로, 프 로세서는 입 출력 인터페이스를 통해 주행 공간에 대한 다양한 정보를 입력 받을 수 있다. 한편, 입 출력 인터페이스는 터치 센서, 모션 센서, 버튼, 조그(Jog) 다이얼, 스위치, 마이크 또는 스피커 중 적어 도 하나를 포함할 수 있으나 이에 한정되는 것은 아니다. 통신 인터페이스는 다양한 타입의 데이터를 입력 및 출력할 수 있다. 예를 들어 통신 인터페이스는 AP 기반의 Wi-Fi(와이파이, Wireless LAN 네트워크), 블루투스(Bluetooth), 지그비(Zigbee), 유/무선 LAN(Local Area Network), WAN(Wide Area Network), 이더넷(Ethernet), IEEE 1394, HDMI(High-Definition Multimedia Interface), USB(Universal Serial Bus), MHL(Mobile High-Definition Link), AES/EBU(Audio Engineering Society/ European Broadcasting Union), 옵티컬(Optical), 코액셜(Coaxial) 등과 같은 통신 방식 을 통해 외부 장치(예를 들어, 소스 장치), 외부 저장 매체(예를 들어, USB 메모리), 외부 서버(예를 들어 웹 하드)와 다양한 타입의 데이터를 송수신할 수 있다. 한편, 도 14는 본 개시의 일 실시 예에 따른 로봇의 제어 방법을 개략적으로 나타낸 순서도이다. 도 14를 참조하면, 먼저 프로세서는 로봇의 주행 시작위치에서 라이다 센서를 통해 센싱 데이터를 획득할 수 있다(S1410). 구체적으로, 프로세서는 사용자로부터 로봇의 전원을 키는 명령어 또는 로봇의 주행을 시 작하는 명령을 입력 받은 시점에, 라이다 센서를 이용하여 로봇의 주행 시작 위치의 주변 오브젝트에 대한 센싱 데이터를 획득할 수 있다. 이때, 센싱 데이터는 로봇과 주변 오브젝트와의 거리 데이터 및 주변 오브젝트에 대응하는 포인트 클라우드 데이터를 포함할 수 있다. 그리고, 프로세서는 획득된 데이터에 기초하여 메모리에 저장된 제1 주행 공간에 대응되는 제1 맵 데 이터 상에서 로봇의 주행 시작 위치에 대응되는 위치가 식별되지 않는 경우, 로봇이 주행하도록 구동부 를 제어할 수 있다(S1420). 구체적으로, 프로세서는 획득된 센싱 데이터에 기초하여 메모리에 저장된 제1 맵 데이터에 설정 된 제1 주행 시작 위치와 로봇의 현재 위치가 일치하는 지를 식별할 수 있다. 그리고, 프로세서는 제1 맵 데이터에 설정된 제1 주행 시작 위치와 로봇의 현재 위치가 일치하지 않는 것으로 식별되면, 로봇이 위치한 주행 공간이 변경된 것으로 식별할 수 있다. 즉, 로봇이 위치한 주행 공간이 제1 주행 공간에서 제2 주행 공간으로 변경된 것으로 식별할 수 있다. 그리고, 프로세서는 새로운 주행 공간으로 식 별된 제2 주행 공간을 로봇이 주행하도록 구동부를 제어할 수 있다. 즉, 프로세서는 새로운 주 행 공간인 제2 주행 공간에 대한 맵 데이터를 생성하기 위한 데이터를 수집하는 과정을 수행할 수 있다. 그리고, 프로세서는 로봇이 주행하는 동안 라이다 센서를 통해 획득된 센싱 데이터에 기초하여 제2 맵 데 이터를 획득할 수 있다(S1430). 구체적으로, 프로세서는 라이다 센서를 이용하여, 제2 주행 공간에 대한 포인트 맵 데이터를 획 득하고, 획득된 포인트 맵 데이터에 SLAM 알고리즘을 적용하여 제2 주행 공간에 대응하는 제2 맵 데이터 를 획득할 수 있다. 이를 위해, 프로세서는 다양한 SLAM 알고리즘을 이용할 수 있다. 그리고, 프로세서는 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트에 대 한 위치 정보에 기초하여 제2 맵 데이터에 대응되는 제2 주행 공간이 제1 주행 공간과 일치하는지 여부를 식별할 수 있다(S1340). 구체적으로, 프로세서는 제2 맵 데이터 상에서의 오브젝트의 위치를 식별하고, 식별된 위치와 대응하 는 제1 맵 데이터 상에서의 위치를 식별할 수 있다. 여기서, 제1 맵 데이터 상에서 오브젝트의 위치와 대응하는 위치를 식별하는 것은, 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별 되는지를 판단하는 것일 수 있다. 즉, 제2 맵 데이터상에서의 오브젝트의 위치를 제1 맵 데이터 상에서 의 위치로 인지하는 과정(Localization)으로, 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별되는지를 판단하는 것일 수 있다. 한편, 프로세서는 제2 맵 데이터상에서 식별되는 오브젝트가 제1 맵 데이터 상에서 식별되는지를 판단하기 위해, 제1 맵 데이터에 포함된 확률 정보를 이용할 수 있다. 여기서 확률 정보는 제1 맵 데이터 상에서 특정 위치에 오브젝트가 존재할 수 있는 확률 값일 수 있다. 프로세서는 확률 정보에 기초하 여, 제1 맵 데이터 상에서 식별된 위치에 오브젝트가 존재하는 것으로 식별되면, 제1 맵 데이터와 제2 맵 데이터 동일한 주행 공간에 대응하는 것으로 식별할 수 있다. 그리고, 프로세서는 제2 주행 공간이 제1 주행 공간과 일치하는 것으로 식별되면, 제2 맵 데이터 상에 서의 로봇의 주행 시작 위치 및 오브젝트에 대한 위치 정보에 기초하여 맵 데이터 상에서 로봇의 주행 시작 위 치를 식별할 수 있다(S1350). 구체적으로, 프로세서는 제1 맵 데이터와 제2 맵 데이터가 동일한 주행 공간에 대한 것임을 식별 하면, 제2 맵 데이터 상에서의 제2 주행 시작 위치와 오브젝트의 위치 정보를 기초로, 제1 맵 데이터 상에 설정된 제1 주행 시작 위치를 새로운 주행 시작 위치로 변경할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치에 설치 가능한 어플리케이션 형태 로 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치에 대한 소프트웨어 업그레이드, 또 는 하드웨어 업그레이드 만으로도 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들은 전자 장치에 구비된 임베디드 서버, 또는 전자 장치 및 디스플레이 장치 중 적어도 하나의 외부 서버를 통해 수행되는 것도 가능하다. 한편, 본 개시의 일시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media)에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시 예들에 따른 전자 장치를 포함할 수 있다. 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 프로세서의 제어 하에 다른 구성요소들을 이용하여 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저 장 매체는, 비일시적(non-transitory) 저장 매체의 형태로 제공될 수 있 다. 여기서, '비일시적'은 저장 매체가 신호(signal)를 포함하지 않으며 실재 (tangible)한다는 것을 의미할 뿐 데이터가 저장 매체에 반영구적 또는 임시적으로 저장됨을 구분하지 않는다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실 시 예들에 따른 방법은 컴퓨터 프로그램 제 품(computer program product)에 포함되 어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구 매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 또한, 상술한 다양한 실시 예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구 성될 수 있으며, 전술한 해당 서브 구 성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요소가 다 양한 실시 예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소 들(예: 모듈 또는 프로그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또 는 유사하게 수행할 수 있다. 다양 한 실시 예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작 들은 순차적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하 였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2022-0051071", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "한정되지 아니하며, 청구범위에서 청 구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형 실시가 가능한 것은 물론이고, 이러한 변형 실시들은 본 개시의 기 술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2022-0051071", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시 예에 따른, 로봇의 예시도이다. 도 2는 동일한 주행 공간에 위치했음에도 불구하고, 주행 시작 위치의 변경으로 맵 데이터를 다시 생성하는 것 을 나타낸 도면이다. 도 3은 본 개시의 일 실시 예에 따른, 로봇의 개략적인 구성도이다. 도 4는 본 개시의 일 실시 예에 따른, 라이다 센서를 이용하여 오브젝트에 대한 거리 데이터 및 포인트 클라우 드 데이터를 획득하는 것을 나타낸 예시도이다. 도 5는 본 개시의 일 실시 예에 따른 맵 데이터를 설명하기 위한 도면이다. 도 6은 본 개시의 일 실시 예에 따른, 유효 포인트를 식별하고, 식별된 유효 포인트를 기초로 제2 맵 데이터 상 에서 오브젝트의 위치를 식별하는 것을 나타낸 예시도이다. 도 7은 본 개시의 일 실시 예에 따른, 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트에 대한 위치 정보에 기초하여 제2 맵 데이터에 대응되는 제2 주행 공간이 제1 주행 공간과 일치하는지 여부를 식별하는 것을 설명하기 위한 예시도이다. 도 8은 본 개시의 일 실시 예에 따른, 제1 맵 데이터에 포함된 확률 정보 및 제2 맵 데이터에 포함된 오브젝트 에 대한 위치 정보에 기초하여 제2 맵 데이터에 대응되는 제2 주행 공간이 제1 주행 공간과 일치하지 않는 것으 로 식별하는 것을 나타낸 예시도이다. 도 9(a) 내지 9(d)는 본 개시의 일 실시 예에 따른, 제2 맵 데이터를 기 설정된 각도로 회전시켜, 제1 주행 공 간과 제2 주행 공간이 일치하는 지를 식별하는 방법을 설명하기 위한 도면이다. 도 10은 본 개시의 일 실시 예에 따른, 제2 맵 데이터 상에서의 로봇의 주행 시작 위치 및 오브젝트에 대한 위 치 정보에 기초하여 제1 맵 데이터 상에서 로봇의 주행 시작 위치를 업 데이트 하는 것을 나타낸 예시도이다. 도 11은 본 개시의 일 실시 예에 따른, 맵 데이터를 서브 영역으로 구분하여, 매칭 스코어를 획득하는 것을 나 타낸 예시도이다. 도 12는 본 개시의 일 실시 예에 따른, 유효 포인트의 개수에 기초하여 서브 영역에 포함되는 영역의 개수를 증가시키는 것을 나타낸 예시도이다. 도 13은 본 개시의 일 실시 예에 따른, 로봇의 세부적인 구성도이다. 도 14는 본 개시의 일 실시 예에 따른, 로봇을 제어하는 방법의 개략적인 순서도이다."}
