{"patent_id": "10-2021-0110139", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0027874", "출원번호": "10-2021-0110139", "발명의 명칭": "전자 장치 및 전자 장치의 발화 처리 방법", "출원인": "삼성전자주식회사", "발명자": "김태구"}}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,사용자의 발화를 포함한 오디오 신호를 수신하는 마이크;프로세서; 및상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고,상기 프로세서는,상기 발화에 대한 인식 결과를 생성하고,상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단하고,지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하고,상기 처리 여부에 기초하여 상기 발화에 대응하는 명령을 처리하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 발화에 기초하여 ASR(Automatic Speech Recognition)을 수행함으로써 상기 발화에 대응하는 텍스트를 생성함으로써 상기 인식 결과를 생성하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 프로세서는,상기 인식 결과를 룰 기반 자연어 모델(rule based model)에 입력함으로써 상기 발화가 상기 전자 장치에 의해처리 가능한지 여부를 판단하고,상기 룰 기반 자연어 모델에 기초하여 상기 발화를 처리하기 위한 어플리케이션(application)이 상기 전자 장치에 의해 지원되는지 여부를 판단하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는,공개특허 10-2023-0027874-3-상기 인식 결과가 미리 결정된 패턴을 포함하는 경우, 상기 발화를 처리하기 위한 연동 어플리케이션을 이용하여 상기 발화에 대응하는 명령을 처리하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는,상기 인식 결과에 기초하여 상기 발화에 대응하는 명령을 수행할 어플리케이션을 탐색하고,상기 어플리케이션이 상기 전자 장치에 의해 실행 가능한지 여부를 판단하고,상기 전자 장치에 의해 실행 가능한지 여부에 기초하여 상기 인식 결과를 서버로 전송하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 프로세서는,상기 어플리케이션이 상기 전자 장치에 의해 실행 불가능할 경우, 상기 인식 결과 또는 상기 오디오 신호를 상기 서버로 전송하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 프로세서는,상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요성을 결정하고,상기 필요성에 기초하여 상기 메모리를 탐색하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 프로세서는,상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 유형을 획득하고,상기 유형에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,공개특허 10-2023-0027874-4-상기 추가 파라미터의 유형은,수치 정보를 포함하는 제1 유형, 상기 발화를 처리하기 위한 동작에 관련된 정보를 포함하는 제2 유형 및 상기발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "전자 장치에 있어서,사용자의 발화를 포함한 오디오 신호를 수신하는 마이크;프로세서; 및상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고,상기 프로세서는,상기 발화에 대한 인식 결과를 생성하고,상기 인식 결과에 기초하여 룰(rule)에 기초한 제1 분류를 수행함으로써 상기 발화에 대한 상기 전자 장치의 제1 지원 여부를 판단하고,상기 제1 지원 여부에 기초하여 제2 분류를 수행함으로써 상기 발화에 대한 상기 전자 장치의 제2 지원 여부를판단하고,상기 제2 지원 여부에 기초하여 상기 발화에 대응하는 명령을 처리하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 프로세서는,상기 발화에 기초하여 ASR(Automatic Speech Recognition)을 수행함으로써 상기 발화에 대응하는 텍스트를 생성함으로써 상기 인식 결과를 생성하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 프로세서는,상기 인식 결과를 룰 기반 자연어 모델(rule based natural language model)에 입력함으로써 상기 발화가 상기전자 장치에 의해 처리 가능한지 여부를 판단하고,상기 룰 기반 자연어 모델에 기초하여 상기 발화를 처리하기 위한 어플리케이션(application)이 상기 전자 장치에 의해 지원되는지 여부를 판단함으로써 상기 제1 지원 여부를 판단하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공개특허 10-2023-0027874-5-제10항에 있어서,상기 프로세서는,상기 인식 결과가 미리 결정된 패턴을 포함하는 경우, 상기 발화를 처리하기 위한 연동 어플리케이션을 이용하여 상기 발화에 대응하는 명령을 처리하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서,상기 프로세서는,상기 발화를 처리하기 위한 목표 동작의 분류를 수행함으로써 상기 제2 지원 여부를 판단하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서,상기 프로세서는,상기 인식 결과에 기초하여 상기 발화에 대응하는 명령을 수행할 어플리케이션을 탐색하고,상기 어플리케이션이 상기 전자 장치에 의해 실행 가능한지 여부를 판단함으로써 상기 제2 지원 여부를 판단하고,상기 제2 지원 여부에 기초하여 상기 인식 결과를 서버로 전송하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 프로세서는,상기 어플리케이션이 상기 전자 장치에 의해 실행 불가능할 경우, 상기 인식 결과 또는 상기 오디오 신호를 상기 서버로 전송하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,상기 프로세서는,상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요성을 결정하고,상기 필요성에 기초하여 상기 메모리를 탐색하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "공개특허 10-2023-0027874-6-제10항에 있어서,상기 프로세서는,상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 유형을 획득하고,상기 유형에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 추가 파라미터의 유형은,수치 정보를 포함하는 제1 유형, 상기 발화를 처리하기 위한 동작에 관련된 정보를 포함하는 제2 유형 및 상기발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함하는,전자 장치."}
{"patent_id": "10-2021-0110139", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "전자 장치의 발화 처리 방법에 있어서,사용자의 발화를 포함한 오디오 신호를 수신하는 동작;상기 발화에 대한 인식 결과를 생성하는 동작;상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단하는 동작;지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하는 동작; 및처리 여부에 기초하여 상기 발화에 대응하는 명령을 처리하는 동작을 포함하는 전자 장치의 발화 처리 방법."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 사용자의 발화를 포함한 오디오 신호를 수신하는 마이크와, 프로세서와, 상 기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 상기 발화에 대한 인식 결과를 생성하고, 상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단 하고, 지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하고, 처리 여부에 기초하여 상 기 발화에 대응하는 명령을 처리할 수 있다. 그 외에도 다양한 실시예들이 가능할 수 있다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "다양한 실시예들은 전자 장치 및 전자 장치의 발화 처리 방법에 관한 것이다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "종래의 발화 처리 방식은 수신된 발화의 온 디바이스(on device) AI(artificial intelligence) 내의 발화 성공 여부에 따라 인텐트 마스킹(intent masking) 정보를 업데이트하고, 이후 발화가 들어올 경우 인텐트 정보를 확 인하여 해당 인텐트가 디바이스에 의해 처리되도록 지정 되어있을 경우, 온 디바이스 상에서 발화를 처리하였다. 종래의 발화 처리 방식에서, 추가 파라미터를 요구하는 발화가 수신된 경우, 추가 파라미터가 온 디바이스 상에 서 얻을 수 있는 정보일지라도, 온 디바이스 AI 처리시 처리 결과를 실패하여 항상 서버에서 다시 처음부터 처 리하는 상황이 발생될 수 있다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 실시예들은, 사용자의 발화가 입력된 경우, 발화의 내용이나 상황에 따라, 온 디바이스에서 처리할지 또 는 서버에서 처리할지 여부를 결정하여 발화를 처리할 수 있다.다양한 실시예들은, 입력된 발화가 디바이스 상에서 처리 가능한 경우, 서버를 활용하지 않고 온 디바이스 상에 서 발화를 처리할 수 있다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 사용자의 발화를 포함한 오디오 신호를 수신하는 마이크와, 프로세서와, 상 기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 상기 발화에 대 한 인식 결과를 생성하고, 상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단하고, 지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하고, 처리 여부에 기초하 여 상기 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따른 전자 장치는, 사용자의 발화를 포함한 오디오 신호를 수신하는 마이크와, 프로세서와, 상 기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 상기 발화에 대 한 인식 결과를 생성하고, 상기 인식 결과에 기초하여 룰(rule)에 기초한 제1 분류를 수행함으로써 상기 발화에 대한 상기 전자 장치의 제1 지원 여부를 판단하고, 상기 제1 지원 여부에 기초하여 제2 분류를 수행함으로써 상 기 발화에 대한 상기 전자 장치의 제2 지원 여부를 판단하고, 상기 제2 지원 여부에 기초하여 상기 발화에 대응 하는 명령을 처리할 수 있다. 다양한 실시예에 따른 전자 장치의 발화 처리 방법은, 사용자의 발화를 포함한 오디오 신호를 수신하는 동작과, 상기 발화에 대한 인식 결과를 생성하는 동작과, 상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의 해 지원되는지 여부를 판단하는 동작과, 지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하는 동작과, 처리 여부에 기초하여 상기 발화에 대응하는 명령을 처리하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예들은, 사용자의 발화가 입력된 경우, 발화의 내용이나 상황에 따라, 온 디바이스에서 처리할지 또 는 서버에서 처리할지 여부를 결정하여 발화를 효율적으로 처리할 수 있다. 다양한 실시예들은, 입력된 발화가 온 디바이스에서 처리가 가능한 경우, 서버와 연동하지 않음으로써 디바이스 내의 개인 정보의 유출을 감소시키고, 통신 비용을 절감하고, 서버의 활용 비중을 감소시킬 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2021-0110139", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예:블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치)에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 2를 참조하면, 일 실시예의 통합 지능화 시스템은 전자 장치(예: 도 1의 전자 장치), 지능형 서버 (예: 도 1의 서버), 및 서비스 서버(예: 도 1의 서버)를 포함할 수 있다. 일 실시 예의 전자 장치는, 인터넷에 연결 가능한 단말 장치(또는, 전자 장치)일 수 있으며, 예를 들어, 휴대폰, 스마트폰, PDA(personal digital assistant), 노트북 컴퓨터, TV, 백색 가전, 웨어러블 장치, HMD, 또 는 스마트 스피커일 수 있다. 도시된 실시 예에 따르면, 전자 장치는 통신 인터페이스(예: 도 1의 인터페이스), 마이크(150- 1)(예: 도 1의 입력 모듈), 스피커(155-1)(예: 도 1의 음향 출력 모듈), 디스플레이 모듈(예: 도 1의 디스플레이 모듈), 메모리(예: 도 1의 메모리), 또는 프로세서(예: 도 1의 프로세 서)를 포함할 수 있다. 상기 열거된 구성요소들은 서로 작동적으로 또는 전기적으로 연결될 수 있다. 일 실시 예의 통신 인터페이스는 외부 장치와 연결되어 데이터를 송수신하도록 구성될 수 있다. 일 실시 예의 마이크(150-1)는 소리(예: 사용자 발화)를 수신하여, 전기적 신호로 변환할 수 있다. 일 실시예의 스피커 (155-1)는 전기적 신호를 소리(예: 음성)으로 출력할 수 있다. 일 실시 예의 디스플레이 모듈은 이미지 또는 비디오를 표시하도록 구성될 수 있다. 일 실시 예의 디스플 레이 모듈은 또한 실행되는 앱(app)(또는, 어플리케이션 프로그램(application program))의 그래픽 사용자 인터페이스(graphic user interface)(GUI)를 표시할 수 있다. 일 실시 예의 디스플레이 모듈은 터치 센 서를 통해 터치 입력을 수신할 수 있다. 예를 들어, 디스플레이 모듈은 디스플레이 모듈 내에 표시 되는 화상 키보드 영역의 터치 센서를 통해 텍스트 입력을 수신할 수 있다. 일 실시 예의 메모리는 클라이언트 모듈, SDK(software development kit), 및 복수의 앱들 (예: 도 1의 어플리케이션)을 저장할 수 있다. 상기 클라이언트 모듈, 및 SDK는 범용적인 기능을 수행하기 위한 프레임워크(framework)(또는, 솔루션 프로그램)를 구성할 수 있다. 또한, 클라이언트 모 듈 또는 SDK는 사용자 입력(예: 음성 입력, 텍스트 입력, 터치 입력)을 처리하기 위한 프레임워크를 구성할 수 있다. 일 실시 예의 메모리는 상기 복수의 앱들은 지정된 기능을 수행하기 위한 프로그램일 수 있다. 일 실 시 예에 따르면, 복수의 앱은 제1 앱(146_1), 제2 앱(146_3)을 포함할 수 있다. 일 실시 예에 따르면, 복 수의 앱 각각은 지정된 기능을 수행하기 위한 복수의 동작들을 포함할 수 있다. 예를 들어, 상기 앱들은, 알람 앱, 메시지 앱, 및/또는 스케줄 앱을 포함할 수 있다. 일 실시 예에 따르면, 복수의 앱들은 프로세 서에 의해 실행되어 상기 복수의 동작들 중 적어도 일부를 순차적으로 실행할 수 있다. 일 실시 예의 프로세서는 전자 장치의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로세서는 통신 인터페이스, 마이크(150-1), 스피커(155-1), 및 디스플레이 모듈와 전기적으로 연결되어 지정된 동작을 수행할 수 있다. 일 실시 예의 프로세서는 또한 상기 메모리에 저장된 프로그램을 실행시켜 지정된 기능을 수행할 수 있다. 예를 들어, 프로세서는 클라이언트 모듈 또는 SDK 중 적어도 하나를 실행하여, 사용자 입력을 처리하기 위한 이하의 동작을 수행할 수 있다. 프로세서는, 예를 들어, SDK를 통해 복수의 앱 의 동작을 제어할 수 있다. 클라이언트 모듈 또는 SDK의 동작으로 설명된 이하의 동작은 프로 세서의 실행에 의한 동작일 수 있다. 일 실시 예의 클라이언트 모듈은 사용자 입력을 수신할 수 있다. 예를 들어, 클라이언트 모듈은 마이 크(150-1)를 통해 감지된 사용자 발화에 대응되는 음성 신호를 수신할 수 있다. 또는, 클라이언트 모듈은 디스플레이 모듈을 통해 감지된 터치 입력을 수신할 수 있다. 또는, 클라이언트 모듈은 키보드 또는 화상 키보드를 통해 감지된 텍스트 입력을 수신할 수 있다. 이 외에도, 전자 장치에 포함된 입력 모듈 또 는 전자 장치에 연결된 입력 모듈을 통해 감지되는 다양한 형태의 사용자 입력을 수신할 수 있다. 상기클라이언트 모듈은 수신된 사용자 입력을 지능형 서버로 송신할 수 있다. 클라이언트 모듈은 수 신된 사용자 입력과 함께, 전자 장치의 상태 정보를 지능형 서버로 송신할 수 있다. 상기 상태 정보 는, 예를 들어, 앱의 실행 상태 정보일 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 사용자 입력에 대응되는 결과를 수신할 수 있다. 예를 들어, 클라 이언트 모듈은 지능형 서버에서 상기 수신된 사용자 입력에 대응되는 결과를 산출할 수 있는 경우, 수신된 사용자 입력에 대응되는 결과를 수신할 수 있다. 클라이언트 모듈은 상기 수신된 결과를 디스플레 이 모듈에 표시할 수 있다. 또한, 클라이언트 모듈은 상기 수신된 결과를 스피커(155-1)를 통해 오디 오로 출력할 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 사용자 입력에 대응되는 플랜을 수신할 수 있다. 클라이언트 모듈 은 플랜에 따라 앱의 복수의 동작을 실행한 결과를 디스플레이 모듈에 표시할 수 있다. 클라이언트 모듈은, 예를 들어, 복수의 동작의 실행 결과를 순차적으로 디스플레이 모듈에 표시할 수 있고, 스피 커(155-1)를 통해 오디오를 출력할 수 있다. 전자 장치는, 다른 예를 들어, 복수의 동작을 실행한 일부 결 과(예: 마지막 동작의 결과)만을 디스플레이 모듈에 표시할 수 있으며, 스피커(155-1)를 통해 오디오로 출 력할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 지능형 서버로부터 사용자 입력에 대응되는 결과를 산출하 기 위해 필요한 정보를 획득하기 위한 요청을 수신할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 상기 요청에 대응하여 상기 필요한 정보를 지능형 서버로 송신할 수 있다. 일 실시 예의 클라이언트 모듈은 플랜에 따라 복수의 동작을 실행한 결과 정보를 지능형 서버로 송신 할 수 있다. 지능형 서버는 상기 결과 정보를 이용하여 수신된 사용자 입력이 올바르게 처리된 것을 확인 할 수 있다. 일 실시 예의 클라이언트 모듈은 음성 인식 모듈을 포함할 수 있다. 일 실시 예에 따르면, 클라이언트 모 듈은 상기 음성 인식 모듈을 통해 제한된 기능을 수행하는 음성 입력을 인식할 수 있다. 예를 들어, 클라 이언트 모듈은 지정된 입력(예: 웨이크 업!)을 통해 유기적인 동작을 수행하기 위한 음성 입력을 처리하기 위한 지능형 앱을 수행할 수 있다. 일 실시 예의 지능형 서버는 통신 망을 통해 전자 장치로부터 사용자 음성 입력과 관련된 정보를 수 신할 수 있다. 일 실시 예에 따르면, 지능형 서버는 수신된 음성 입력과 관련된 데이터를 텍스트 데이터 (text data)로 변경할 수 있다. 일 실시 예에 따르면, 지능형 서버는 상기 텍스트 데이터에 기초하여 사용 자 음성 입력과 대응되는 태스크(task)를 수행하기 위한 플랜(plan)을 생성할 수 있다 일 실시 예에 따르면, 플랜은 인공 지능(artificial intelligent)(AI) 시스템에 의해 생성될 수 있다. 인공지능 시스템은 룰 베이스 시스템(rule-based system) 일 수도 있고, 신경망 베이스 시스템(neural network-based system)(예: 피드포워드 신경망(feedforward neural network(FNN)), 순환 신경망(recurrent neural network(RNN))) 일 수도 있다. 또는, 전술한 것의 조합 또는 이와 다른 인공지능 시스템일 수도 있다. 일 실시 예에 따르면, 플랜은 미리 정의된 플랜의 집합에서 선택될 수 있거나, 사용자 요청에 응답하여 실시간으로 생성 될 수 있다. 예를 들어, 인공지능 시스템은 미리 정의된 복수의 플랜 중 적어도 플랜을 선택할 수 있다. 일 실시 예의 지능형 서버는 생성된 플랜에 따른 결과를 전자 장치로 송신하거나, 생성된 플랜을 전 자 장치로 송신할 수 있다. 일 실시 예에 따르면, 전자 장치는 플랜에 따른 결과를 디스플레이에 표 시할 수 있다. 일 실시 예에 따르면, 전자 장치는 플랜에 따른 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 일 실시 예의 지능형 서버는 프론트 엔드(front end), 자연어 플랫폼(natural language platform), 캡슐 데이터베이스(capsule DB), 실행 엔진(execution engine), 엔드 유저 인터페 이스(end user interface), 매니지먼트 플랫폼(management platform), 빅 데이터 플랫폼(big data platform), 또는 분석 플랫폼(analytic platform)을 포함할 수 있다. 일 실시 예의 프론트 엔드는 전자 장치로부터 수신된 사용자 입력을 수신할 수 있다. 프론트 엔드 는 상기 사용자 입력에 대응되는 응답을 송신할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼은 자동 음성 인식 모듈(automatic speech recognition module)(ASR module), 자연어 이해 모듈(natural language understanding module)(NLU module), 플래너 모듈(planner module), 자연어 생성 모듈(natural language generator module)(NLG module) 또는 텍스트 음성 변환 모듈(text to speech module)(TTS module)를 포함할 수 있다. 일 실시 예의 자동 음성 인식 모듈은 전자 장치로부터 수신된 음성 입력을 텍스트 데이터로 변환할 수 있다. 일 실시 예의 자연어 이해 모듈은 음성 입력의 텍스트 데이터를 이용하여 사용자의 의도를 파악 할 수 있다. 예를 들어, 자연어 이해 모듈은 텍스트 데이터 형태의 사용자 입력에 대하여 문법적 분석 (syntactic analyze) 또는 의미적 분석(semantic analyze)을 수행하여 사용자의 의도를 파악할 수 있다. 일 실 시 예의 자연어 이해 모듈은 형태소 또는 구의 언어적 특징(예: 문법적 요소)을 이용하여 사용자 입력으로 부터 추출된 단어의 의미를 파악하고, 상기 파악된 단어의 의미를 의도에 매칭시켜 사용자의 의도를 결정할 수 있다. 일 실시 예의 플래너 모듈은 자연어 이해 모듈에서 결정된 의도 및 파라미터를 이용하여 플랜을 생성 할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 의도에 기초하여 태스크를 수행하기 위해 필요한 복수의 도메인을 결정할 수 있다. 플래너 모듈은 상기 의도에 기초하여 결정된 복수의 도메인 각각 에 포함된 복수의 동작을 결정할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 복수의 동작 을 실행하는데 필요한 파라미터나, 상기 복수의 동작의 실행에 의해 출력되는 결과 값을 결정할 수 있다. 상기 파라미터, 및 상기 결과 값은 지정된 형식(또는, 클래스)의 컨셉으로 정의될 수 있다. 이에 따라, 플랜은 사용 자의 의도에 의해 결정된 복수의 동작, 및 복수의 컨셉을 포함할 수 있다. 상기 플래너 모듈은 상기 복수 의 동작, 및 상기 복수의 컨셉 사이의 관계를 단계적(또는, 계층적)으로 결정할 수 있다. 예를 들어, 플래너 모 듈은 복수의 컨셉에 기초하여 사용자의 의도에 기초하여 결정된 복수의 동작의 실행 순서를 결정할 수 있 다. 다시 말해, 플래너 모듈은 복수의 동작의 실행에 필요한 파라미터, 및 복수의 동작의 실행에 의해 출 력되는 결과에 기초하여, 복수의 동작의 실행 순서를 결정할 수 있다. 이에 따라, 플래너 모듈는 복수의 동작, 및 복수의 컨셉 사이의 연관 정보(예: 온톨로지(ontology))가 포함된 플랜을 생성할 수 있다. 상기 플래 너 모듈은 컨셉과 동작의 관계들의 집합이 저장된 캡슐 데이터베이스에 저장된 정보를 이용하여 플랜 을 생성할 수 있다. 일 실시 예의 자연어 생성 모듈은 지정된 정보를 텍스트 형태로 변경할 수 있다. 상기 텍스트 형태로 변경 된 정보는 자연어 발화의 형태일 수 있다. 일 실시 예의 텍스트 음성 변환 모듈은 텍스트 형태의 정보를 음성 형태의 정보로 변경할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼의 기능의 일부 기능 또는 전체 기능은 전자 장치에서도 구현가 능 할 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인에 대응되는 복수의 컨셉과 동작들의 관계에 대한 정보를 저장할 수 있다. 일 실시예에 따른 캡슐은 플랜에 포함된 복수의 동작 오브젝트(action object 또는, 동작 정보) 및 컨 셉 오브젝트(concept object 또는 컨셉 정보)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스(23 0)는 CAN(concept action network)의 형태로 복수의 캡슐을 저장할 수 있다. 일 실시 예에 따르면, 복수의 캡슐 은 캡슐 데이터베이스에 포함된 기능 저장소(function registry)에 저장될 수 있다. 상기 캡슐 데이터베이스는 음성 입력에 대응되는 플랜을 결정할 때 필요한 전략 정보가 저장된 전략 레지 스트리(strategy registry)를 포함할 수 있다. 상기 전략 정보는 사용자 입력에 대응되는 복수의 플랜이 있는 경우, 하나의 플랜을 결정하기 위한 기준 정보를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 지정된 상황에서 사용자에게 후속 동작을 제안하기 위한 후속 동작의 정보가 저장된 후속 동작 레지스 트리(follow up registry)를 포함할 수 있다. 상기 후속 동작은, 예를 들어, 후속 발화를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 전자 장치를 통해 출력되는 정보의 레이아웃(layout) 정보를 저장하는 레이아웃 레지스트리(layout registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 캡슐 정보에 포함된 어휘(vocabulary) 정보가 저장된 어휘 레지스트리(vocabulary registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자와의 대화(dialog)(또는, 인터렉션 (interaction)) 정보가 저장된 대화 레지스트리(dialog registry)를 포함할 수 있다. 상기 캡슐 데이터베이스 는 개발자 툴(developer tool)을 통해 저장된 오브젝트를 업데이트(update)할 수 있다. 상기 개발자 툴은, 예를 들어, 동작 오브젝트 또는 컨셉 오브젝트를 업데이트하기 위한 기능 에디터(function editor)를 포함할 수 있다. 상기 개발자 툴은 어휘를 업데이트하기 위한 어휘 에디터(vocabulary editor)를 포함할 수 있다. 상기 개 발자 툴은 플랜을 결정하는 전략을 생성 및 등록하는 전략 에디터(strategy editor)를 포함할 수 있다. 상기 개 발자 툴은 사용자와의 대화를 생성하는 대화 에디터(dialog editor)를 포함할 수 있다. 상기 개발자 툴은 후속목표를 활성화하고, 힌트를 제공하는 후속 발화를 편집할 수 있는 후속 동작 에디터(follow up editor)를 포함 할 수 있다. 상기 후속 목표는 현재 설정된 목표, 사용자의 선호도 또는 환경 조건에 기초하여 결정될 수 있다. 일 실시 예에서는 캡슐 데이터베이스는 전자 장치 내에도 구현이 가능할 수 있다. 일 실시 예의 실행 엔진은 상기 생성된 플랜을 이용하여 결과를 산출할 수 있다. 엔드 유저 인터페이스 는 산출된 결과를 전자 장치로 송신할 수 있다. 이에 따라, 전자 장치는 상기 결과를 수신하고, 상기 수신된 결과를 사용자에게 제공할 수 있다. 일 실시 예의 매니지먼트 플랫폼은 지능형 서버에서 이용되는 정보를 관리할 수 있다. 일 실시 예의 빅 데이터 플랫폼은 사용자의 데이터를 수집할 수 있다. 일 실시 예의 분석 플랫폼은 지능형 서버의 QoS(quality of service)를 관리할 수 있다. 예를 들어, 분석 플랫폼은 지능형 서버의 구성 요소 및 처리 속도(또는, 효율성)를 관리할 수 있다. 일 실시 예의 서비스 서버는 전자 장치에 지정된 서비스(예: 음식 주문 또는 호텔 예약)를 제공할 수 있다. 일 실시 예에 따르면, 서비스 서버는 제3 자에 의해 운영되는 서버일 수 있다. 일 실시 예의 서비스 서버는 수신된 사용자 입력에 대응되는 플랜을 생성하기 위한 정보를 지능형 서버에 제공할 수 있다. 상기 제공된 정보는 캡슐 데이터베이스에 저장될 수 있다. 또한, 서비스 서버는 플랜에 따른 결과 정 보를 지능형 서버에 제공할 수 있다. 위에 기술된 통합 지능 시스템에서, 상기 전자 장치는, 사용자 입력에 응답하여 사용자에게 다양한 인 텔리전트 서비스를 제공할 수 있다. 상기 사용자 입력은, 예를 들어, 물리적 버튼을 통한 입력, 터치 입력 또 는 음성 입력을 포함할 수 있다. 일 실시 예에서, 상기 전자 장치는 내부에 저장된 지능형 앱(또는, 음성 인식 앱)을 통해 음성 인식 서비 스를 제공할 수 있다. 이 경우, 예를 들어, 전자 장치는 상기 마이크를 통해 수신된 사용자 발화 (utterance) 또는 음성 입력(voice input)을 인식하고, 인식된 음성 입력에 대응되는 서비스를 사용자에게 제공 할 수 있다. 일 실시 예에서, 전자 장치는 수신된 음성 입력에 기초하여, 단독으로 또는 상기 지능형 서버 및/또는 서 비스 서버와 함께 지정된 동작을 수행할 수 있다. 예를 들어, 전자 장치는 수신된 음성 입력에 대응되는 앱을 실행시키고, 실행된 앱을 통해 지정된 동작을 수행할 수 있다. 일 실시 예에서, 전자 장치가 지능형 서버 및/또는 서비스 서버와 함께 서비스를 제공하는 경우에는, 상기 전자 장치는, 상기 마이크(150-1)를 이용하여 사용자 발화를 감지하고, 상기 감지된 사용자 발화에 대응되는 신호(또는, 음성 데이터)를 생성할 수 있다. 상기 전자 장치는, 상기 음성 데이터를 통신 인터 페이스를 이용하여 지능형 서버로 송신할 수 있다. 일 실시 예에 따른 지능형 서버는 전자 장치로부터 수신된 음성 입력에 대한 응답으로써, 음성 입력 에 대응되는 태스크(task)를 수행하기 위한 플랜, 또는 상기 플랜에 따라 동작을 수행한 결과를 생성할 수 있다. 상기 플랜은, 예를 들어, 사용자의 음성 입력에 대응되는 태스크(task)를 수행하기 위한 복수의 동작, 및 상기 복수의 동작과 관련된 복수의 컨셉을 포함할 수 있다. 상기 컨셉은 상기 복수의 동작의 실행에 입력되는 파라미터나, 복수의 동작의 실행에 의해 출력되는 결과 값을 정의한 것일 수 있다. 상기 플랜은 복수의 동작, 및 복수의 컨셉 사이의 연관 정보를 포함할 수 있다. 일 실시 예의 전자 장치는, 통신 인터페이스를 이용하여 상기 응답을 수신할 수 있다. 전자 장치 는 상기 스피커(155-1)를 이용하여 전자 장치 내부에서 생성된 음성 신호를 외부로 출력하거나, 디스 플레이 모듈을 이용하여 전자 장치 내부에서 생성된 이미지를 외부로 출력할 수 있다. 도 3은 다양한 실시 예에 따른, 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 상기 지능형 서버의 캡슐 데이터베이스(예: 캡슐 데이터베이스)는 CAN (concept action network) 형태로 캡슐을 저장할 수 있다. 상기 캡슐 데이터베이스는 사용자의 음성 입력에 대응되는 태스 크를 처리하기 위한 동작, 및 상기 동작을 위해 필요한 파라미터를 CAN(concept action network) 형태로 저장될 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인(예: 어플리케이션) 각각에 대응되는 복수의 캡슐(capsule(A), capsule(B))을 저장할 수 있다. 일 실시 예에 따르면, 하나의 캡슐(예: capsule(A))은 하나의 도메 인(예: 위치(geo), 어플리케이션)에 대응될 수 있다. 또한, 하나의 캡슐에는 캡슐과 관련된 도메인에 대한 기능을 수행하기 위한 적어도 하나의 서비스 제공자(예: CP 1 또는 CP 2 )가 대응될 수 있다. 일 실시 예 에 따르면, 하나의 캡슐은 지정된 기능을 수행하기 위한 적어도 하나 이상의 동작 및 적어도 하나 이상의 컨셉을 포함할 수 있다. 상기, 자연어 플랫폼은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 수신된 음성 입력에 대응하는 태스크 를 수행하기 위한 플랜을 생성할 수 있다. 예를 들어, 자연어 플랫폼의 플래너 모듈은 캡슐 데이터베이스 에 저장된 캡슐을 이용하여 플랜을 생성할 수 있다. 예를 들어, 캡슐 A 의 동작들(4011,4013) 과 컨셉들 (4012,4014) 및 캡슐 B의 동작과 컨셉을 이용하여 플랜 을 생성할 수 있다. 도 4는 다양한 실시 예에 따른 전자 장치가 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면 이다. 전자 장치(예: 도 1의 전자 장치)는 지능형 서버(예: 도 2의 지능형 서버)를 통해 사용자 입력을 처 리하기 위해 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 310 화면에서, 전자 장치는 지정된 음성 입력(예: 웨이크 업!)를 인식하거나 하드웨 어 키(예: 전용 하드웨어 키)를 통한 입력을 수신하면, 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있다. 전자 장치는, 예를 들어, 스케줄 앱을 실행한 상태에서 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 전자 장치는 지능형 앱에 대응되는 오브젝트(예: 아이콘)를 디스플레이 모듈에 표시할 수 있다. 일 실시 예에 따르면, 전자 장치는 사용자 발화에 의한 음성 입력을 수신할 수 있다. 예를 들어, 전자 장치는 \"이번주 일정 알려줘!\"라는 음성 입력을 수신할 수 있다. 일 실시 예에 따르면, 전자 장치 는 수신된 음성 입력의 텍스트 데이터가 표시된 지능형 앱의 UI(user interface)(예: 입력창)를 디스 플레이에 표시할 수 있다. 일 실시 예에 따르면, 320 화면에서, 전자 장치는 수신된 음성 입력에 대응되는 결과를 디스플레이에 표시 할 수 있다. 예를 들어, 전자 장치는 수신된 사용자 입력에 대응되는 플랜을 수신하고, 플랜에 따라 '이번 주 일정'을 디스플레이에 표시할 수 있다. 도 5는 다양한 실시예에 따른 전자 장치의 개략적인 블록도를 나타낸다. 도 5를 참조하면, 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 사용자의 발화 (utterance)를 처리할 수 있다. 전자 장치는 사용자의 발화를 처리함으로써 처리 결과를 생성하고, 생성 된 처리 결과를 사용자에게 제공할 수 있다. 다양한 실시예에 따르면, 전자 장치는 마이크(예: 도 2의 마이크(150-1)), 프로세서(예: 도 1의 프로세서) 및 메모리(예: 도 1의 메모리)를 포함할 수 있다. 마이크는 사용자의 발화를 포함한 오디오 신호를 수신할 수 있다. 마이크는 수신한 오디오 신호를 프로세서로 출력할 수 있다. 다양한 실시예에 따르면, 프로세서는 메모리에 저장된 데이터를 처리할 수 있다. 프로세서는 메모리에 저장된 컴퓨터로 읽을 수 있는 코드(예를 들어, 소프트웨어) 및 프로세서에 의해 유발된 인 스트럭션(instruction)들을 실행할 수 있다. 프로세서는 목적하는 동작들(desired operations)을 실행시 키기 위한 물리적인 구조를 갖는 회로를 가지는 하드웨어로 구현된 데이터 처리 장치일 수 있다. 예를 들어, 목적하는 동작들은 프로그램에 포함된 코드(code) 또는 인스트럭션들(instructions)을 포함할 수 있다. 다양한 실시예에 따르면, 하드웨어로 구현된 데이터 처리 장치는 마이크로프로세서(microprocessor), 중앙 처리 장치(central processing unit), 프로세서 코어(processor core), 멀티-코어 프로세서(multi-core processor), 멀티프로세서(multiprocessor), ASIC(Application-Specific Integrated Circuit), 및/또는 FPGA(Field Programmable Gate Array)를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화에 대한 인식 결과를 생성할 수 있다. 프로세서는 발화에 기초하여 ASR(automatic speech recognition)을 수행함으로써 발화에 대응하는 텍스트를 생성함으로써 인식 결 과를 생성할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과에 기초하여 발화가 전자 장치에 의해 지원되는지 여 부를 판단할 수 있다. 프로세서는 지원 여부에 기초하여 전자 장치가 발화를 처리할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과를 룰 기반 자연어 모델(rule based NL(natural language) model)에 입력함으로써 발화가 전자 장치에 의해 처리 가능한지 여부를 판단할 수 있다. 프로세서는 룰 기반 자연어 모델에 기초하여 발화를 처리하기 위한 어플리케이션(application)(또는, 앱(app))이 전자 장치 에 의해 지원되는지 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과가 미리 결정된 패턴을 포함하는 경우, 발화를 처리하기 위 한 연동 어플리케이션을 이용하여 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과에 기초하여 발화에 대응하는 명령을 수행할 어플리케이션 을 탐색할 수 있다. 프로세서는 어플리케이션이 전자 장치에 의해 실행 가능한지 여부를 판단할 수 있다. 프로세서는 전자 장치에 의해 실행 가능한지 여부에 기초하여 인식 결과를 서버(예: 도 1의 서버 또 는 도 2의 지능형 서버)로 전송할 수 있다. 프로세서는 어플리케이션이 전자 장치에 의해 실행 불가 능할 경우, 인식 결과 및/또는 오디오 신호를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요성을 결 정할 수 있다. 프로세서는 추가 파라미터의 필요성에 기초하여 메모리를 탐색할 수 있다. 다양한 실시예에 따르면, 추가 파라미터의 유형은 수치 정보를 포함하는 제1 유형, 발화를 처리하기 위한 동작 에 관련된 정보를 포함하는 제2 유형 및 발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함 할 수 있다. 추가 파라미터의 유형은 도 9를 참조하여 자세하게 설명한다. 다양한 실시예에 따르면, 프로세서는 처리 여부에 기초하여 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과에 기초하여 룰에 기초한 제1 분류를 수행함으로써 발화에 대한 전자 장치의 제1 지원 여부를 판단할 수 있다. 프로세서는 제1 지원 여부에 기초하여 제2 분류 를 수행함으로써 발화에 대한 전자 장치의 제2 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과를 룰 기반 자연어 모델에 입력함으로써 발화가 전자 장치 에 의해 처리 가능한지 여부를 판단할 수 있다. 프로세서는 룰 기반 자연어 모델에 기초하여 발화를 처리하기 위한 어플리케이션이 전자 장치에 의해 지원되는지 여부를 판단함으로써 제1 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화를 처리하기 위한 목표 동작의 분류를 수행함으로써 제2 지원 여 부를 판단할 수 있다. 프로세서는 인식 결과에 기초하여 발화에 대응하는 명령을 수행할 어플리케이션을 탐색할 수 있다. 프로세서는 어플리케이션이 전자 장치에 의해 실행 가능한지 여부를 판단함으로써 제2 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 제2 지원 여부에 기초하여 발화에 대응하는 명령을 처리할 수 있다. 프로세서는 제2 지원 여부에 기초하여 인식 결과를 서버로 전송할 수 있다. 프로세서는 어플리 케이션이 전자 장치에 의해 실행 불가능할 경우, 인식 결과 및/또는 오디오 신호를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 메모리는 프로세서에 의해 실행가능한 인스트럭션들(또는 프로그램)을 저장할 수 있다. 예를 들어, 인스트럭션들은 프로세서의 동작 및/또는 프로세서의 각 구성의 동작을 실행하기 위한 인스트럭션들을 포함할 수 있다. 다양한 실시예에 따르면, 메모리는 휘발성 메모리 장치(예: 도 1의 휘발성 메모리) 또는 불휘발성 메 모리 장치(예: 도 1의 비휘발성 메모리)로 구현될 수 있다. 휘발성 메모리 장치는 DRAM(dynamic random access memory), SRAM(static random access memory), T-RAM(thyristor RAM), Z-RAM(zero capacitor RAM), 또 는 TTRAM(Twin Transistor RAM)으로 구현될 수 있다. 다양한 실시예에 따르면, 불휘발성 메모리 장치는 EEPROM(Electrically Erasable Programmable Read-Only Memory), 플래시(flash) 메모리, MRAM(Magnetic RAM), 스핀전달토크 MRAM(Spin-Transfer Torque(STT)-MRAM), Conductive Bridging RAM(CBRAM), FeRAM(Ferroelectric RAM), PRAM(Phase change RAM), 저항 메모리 (Resistive RAM(RRAM)), 나노 튜브 RRAM(Nanotube RRAM), 폴리머 RAM(Polymer RAM(PoRAM)), 나노 부유 게이트 메모리(Nano Floating Gate Memory(NFGM)), 홀로그래픽 메모리(holographic memory), 분자 전자 메모리 소자(Molecular Electronic Memory Device), 또는 절연 저항 변화 메모리(Insulator Resistance Change Memory)로 구현될 수 있다. 도 6은 다양한 실시예에 따른 전자 장치의 시스템 아키텍처의 예를 나타낸다. 도 6을 참조하면, 다양한 실시예에 따르면, 전자 장치(예: 도 5의 전자 장치)는 사용자 발화를 수신 하고, 발화의 내용이나 상황에 따라 전자 장치 상에서 처리할 지, 또는 서버(예: 도 1의 서버)로 전 달하여 처리할 지 결정할 수 있다. 수신한 발화가 전자 장치 내에서 처리 가능한 경우라면 프로세서(예: 도 1의 프로세서)가 발화를 처리하여 사용자에게 처리 결과를 제공할 수 있다. 전자 장치가 직접 발 화를 처리하는 경우, 서버와 연동되지 않아 메모리 내의 개인 정보, 및/또는 디바이스 컨텍스트와 같 은 정보 전달을 방지하거나 줄임으로써 통신 비용을 절감하고 서버의 활용 비중을 줄일 수 있다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 eASR(embedded automatic speech recognition), 컨버세이션(conversation), e토크나이저(embedded tokenizer), e디바이스 컨텍 스트(embedded device context), ePDSS(embedded personal data sync service), e룰 엔진(embedded rule engines), eNL 모듈(embedded natural language modules), 액션 플래너(action planner) 및/또는 서포터블 앱 모델(supportable app models)을 포함할 수 있다.다양한 실시예에 따르면, e룰 엔진 은 디스패처(dispachers) 및 RNLU(rule natural language understanding)을 포함할 수 있다. e룰 엔진은 룰 기반의 다양한 디스패처들과 룰들이 정의된 패턴들을 이용하여, 입력된 발화에서 특정 앱을 판단하거나 특정 기기를 판단할 수 있다. e룰 엔진은 어떤 동작을 수행하고자 하는지를 등록된 패턴과 비 교하여 전자 장치에서 처리 가능한지 서버로 전달해야 하는지에 대한 판단을 수행할 수 있다. 다양한 실시예에 따르면, eNL 모듈은 앱 분류기(app classifier), 신호 레이블러(signal labeler), 신호 분류기(signal classifier), 골 분류기(goal classifier), 매치 셀렉터(match selector) 및/또는 롤 레이블러(role labeler)를 포함할 수 있다. 다양한 실시예에 따르면, eNL 모듈은 e룰 엔진에서 판별하지 못한 발화에 대해서 다양한 NL 모듈들을 활용한 분류기들을 통해 발화 분석을 수행할 수 있다. eNL 모듈은 캡슐 분류기(capsule classifier)를 통 해 발화가 처리될 앱을 결정할 수 있다. 예를 들어, \"아이유 밤편지 틀어줘\"와 같은 발화를 수신하여 발화를 처리하기 위해 음악 재생 어플리케이션이 결정되면, eNL 모듈은 골 분류기(goal classifier)를 통해 수행 되어야 하는 목표 골(예: 음악 재생(play song))을 결정할 수 있다. 다양한 실시예에 따르면, 신호 레이블러는 발화에 포함된 파라미터(예: \"아이유 밤편지 틀어줘\"와 같은 발 화를 수신한 경우, 아이유 및 밤편지를 검색(search) 하는 키워드)를 구분할 수 있다. 파라미터를 예측하고 판 단을 돕기 위해 추가적인 모듈들이 연동될 수 있다. 매치 셀렉터는 획득한 파라미터들 간의 유효성, 스코 어를 판단하여 파라미터를 구분하고 판단을 지원할 수 있다. 신호 분류기는 발화의 특정 단어(word)가 아 닌, 발화 전체에 기초하여 의미 있는 정보 및 파라미터가 있는지 여부를 판단할 수 있다. 롤 레이블러는 획득한 파라미터들에 기초하여 파라미터가 가지는 의미 및 개념을 예측할 수 있다. 예를 들어, \"아이유 밤편지 틀어줘\"와 같은 발화를 수신한 경우, 롤 레이블러는 아이유를 \"아티스트 이름(artist name), 밤편지를 노 래 제목(song title)로 예측할 수 있다. 다양한 실시예에 따르면, 액션 플래너는 플래너, 익스큐션(execution), TTS(text-to- speech) 및 리스폰스 매니저(response manager)를 포함할 수 있다. 플래너는 eNL 모듈에서 획 득한 정보들에 기초하여 파라미터들과 골들을 이용한 플랜 그래프(plan graph)를 생성할 수 있다. 플래너(65 1)는 생성환 플랜 그래프에 기초하여 완료될 결과와 수행해야 할 행동에 대한 액션을 결정할 수 있다. 다양한 실시예에 따르면, 익스큐션은 플래너에서 획득한 결과들이 담긴 인텐트(intent) 정보를 수신 하여 앱 모델과 연계하여 동작을 수행할 수 있다. 서포터블 앱 모델은 복수의 앱들(671, 672, 673, 674, 675)을 포함할 수 있다. 다양한 실시예에 따르면, eASR은 수신한 오디오 신호 또는 음성 신호를 처리 가능한 텍스트로 변환할 수 있다. e토크나이저는 변환된 텍스트의 정보를 분석하기 쉽게 단어(word)를 나누고 구분할 수 있다. ePDSS는 전자 장치 내에서 개인화된 정보를 처리하기 위한 개인화 데이터를 관리할 수 있다. e디바이 스 컨텍스트는 전자 장치에 관련된 기기 정보를 관리할 수 있다.다양한 실시예에 따르면, e룰 엔진은 복수의 룰(rule)들이 정의된 패턴들을 이용하여 발화에 기초하여 발 화를 처리할 지정된 어플리케이션을 판단하거나, 발화를 처리할 기기를 판단할 수 있다. e룰 엔진은 발화 의 패턴을 등록된 패턴과 비교함으로써 전자 장치가 발화를 처리 가능한지 또는 서버로 발화를 전달 해야 하는지를 판단할 수 있다. 디스패처는 복수 개가 존재할 수 있다. 디스패처는 발화를 처리하기 위한 어플리케이션의 명칭을 인 지하고, 분류할 수 있다. 디스패처는 발화를 처리하기 위한 장치의 명칭을 인지하고, 분류할 수 있다. eNL 모듈은 e룰 엔진에서 판별하지 못한 발화를 분류기(classifier)들을 이용하여 분석할 수 있다. 골 분류기는 앱 분류기(app classifier)(또는, 캡슐 분류기(capsule classifier))를 통해 발화가 처 리될 어플리케이션이 결정되면(예: \"노래 틀어줘\"와 같은 발화에 대하여 음악 재생 어플리케이션이 결정되면) 목표로 하는 골(goal)(예: 음악 재생(play song))을 결정할 수 있다. 신호 레이블러는 발화에 포함된 파 라미터를 획득할 수 있다. 예를 들어, 신호 레이블러는 \"아이유 밤편지 틀어줘\"와 같은 발화에서 아이유 및 밤편지를 검색(search)하는 키워드(keyword)로 결정할 수 있다. 매치 셀렉터는 획득한 파라미터들 간 의 유효성을 판단하고, 스코어(score)를 계산하여 파라미터를 구분함으로써 판단을 지원할 수 있다. 신호 분류 기는 발화의 지정된 단어가 아닌 발화 전체를 바탕으로 의미있는 정보 또는 파라미터가 존재하는지 여부를 판단할 수 있다. 롤 레이블러는 획득된 파라미터에 기초하여 파라미터가 가지는 의미, 또는 개념을 예측 할 수 있다. 예를 들어, 롤 레이블러는 \"아이유 밤편지 틀어줘\"와 같은 발화를 수신한 경우, 아이유를 아 티스트 이름(artist name)으로 예측하고, 밤편지를 노래 제목(song title)으로 예측할 수 있다. 다양한 실시예에 따르면, 플래너는 파라미터들과 골들을 이용하여 플랜 그래프(plan graph)를 생성할 수 있다. 플래너는 플랜 그래프에 기초하여 발화와 관련하여 완료될 결과와 수행해야 될 행동에 대한 액션을 결정할 수 있다. 익스큐션은 플래너에서 제공된 정보가 포함된 인텐트(intent) 정보에 기초하여 서포터블 앱 모델의 복수의 앱들(671, 672, 673, 674, 675)과 연계하여 동작을 수행할 수 있다. 도 7은 다양한 실시예에 따른 전자 장치의 동작을 설명하기 위한 도면이다. 도 7을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 1의 프로세서 또는 도 5의 프로세서)는 사용자 발화를 수신하고, 수신한 발화가 지정된 도메인(domain)을 명시하였는지 여부를 판단할 수 있다. 프로 세서는 지정된 도메인이 명시된 경우, 전자 장치(예: 도 5의 전자 장치) 내의 온 디바이스 NLU(예: 도 6의 eNL 모듈)에서 발화를 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 NLU의 처리 과정에서 추가 파라미터가 필요할 경우, 추가 파라미터가 전자 장치 내에서 처리할 수 있는 파라미터인지 아닌지 판단할 수 있다. 프로세서는 전자 장치 내에서 처리할 수 있는 추가 파라미터일 경우 추가 파라미터를 전자 장치내에 저장된 정보를 이용하여 처 리하고, 전자 장치 내에서 처리할 수 없는 파라미터일 경우, 서버(예: 도 1의 서버)에 발화 정 보를 전달하여 서버에서 처리할 수 있도록 동작할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자의 발화에 대한 인식 결과를 생성할 수 있다. 프로세서 는 ASR을 이용하여 사용자의 발화(또는, 음성)을 입력 받아 분석할 수 있다. 프로세서는 eASR(예: 도 6의 eASR)을 이용하여 전자 장치(예: 도 5의 전자 장치)에 입력된 발화를 분석 가능한 텍스트로 변환할 수 있다. 프로세서는 변환된 텍스트를 분석하고, 처리 가능한지 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 온 디바이스 분류기(예: 도 6의 e룰 엔진)를 통해 전자 장 치에 의해 지원 가능한 발화인지 여부를 분석할 수 있다. 프로세서는 온 디바이스 분류기를 통 해 룰(rule)에 기초하여 발화가 전자 장치에 의해 지원 가능한지 여부를 판단할 수 있다. 다양한 실시예에 따르면, 온 디바이스 분류기는 RNLU(rule natural language unit) 및 분류기 를 포함할 수 있다. RNLU는 룰 기반으로 구성된 하나 이상의 모델을 이용하여 기기 명칭 및 어플리케이션 명칭을 인지하고 분류하는 디스패처(dispatcher)를 포함할 수 있다. 예를 들어, 기기 명칭을 인지하는 디스패 처는 \"TV에서 무한도전 찾아줘\"와 같은 발화를 수신한 경우, \"TV에서\"를 인지하여 전자 장치가 아닌 서버 에서 처리하도록 발화를 전달할 수 있다. 어플리케이션 명칭을 인지하는 디스패처는 \"갤러리에 오늘 찍은 사진 찾아줘\" 와 같은 발화를 수신한 경우, \"갤러리\" 라는 어플리케이션이 전자 장치에서 지원되는 어플리 케이션 인지를 판단하여 전자 장치 또는 서버에서 처리할지 여부를 결정할 수 있다. 분류기는발화를 처리할 기기 또는 발화를 처리할 어플리케이션을 분류할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화로부터 생성된 인식 결과가 미리 결정된 패턴을 포함하는 경우, 발화를 처리하기 위한 연동 어플리케이션을 이용하여 발화에 대응하는 명령을 처리할 수 있다. 프로세서 는 온 디바이스 분류기를 이용하여 디스패처를 이용하지 않고, 지정된 발화 또는 지정된 패턴이 등록된 경 우, 룰에 기초하여 전자 장치의 지원 가능 여부를 판단할 수 있다. 예를 들어, 프로세서는 \"TV 꺼\" 와 같은 발화를 수신한 경우, 기기(예: TV)를 제어하는 연동 어플리케이션으로 이용하여 즉시 처리함으로써 별 도로 서버로 발화를 전달하지 않고, 전자 장치에서 발화를 바로 처리할 수 있다. 또한, 프로세서 는 온 디바이스 분류기를 이용하여 \"뒤로\" 또는, \"취소\"와 같은 짧은 발화(short utterance)를 수신 한 경우, 룰에 기반하여 서버로 발화를 전달하지 않고, 전자 장치를 통해 처리 가능한 발화임을 인지 할 수 있다. 다양한 실시예에 따르면, 프로세서는 온 디바이스 분류기의 RNLU 모델을 이용하여 전자 장치의 지원 가능 여부를 판단하지 못한 경우, 온 디바이스 NL(예: 도 6의 eNL 모듈)을 이용하여 수신한 발 화에 대응하는 명령을 수행할 어플리케이션을 탐색할 수 있다. 프로세서는 온 디바이스 NL의 골 분 류기 및 슬롯 태거(slot tagger)를 이용하여 수신한 발화를 수행하기 위한 어플리케이션을 탐색할 수 있다. 예를 들어, 온 디바이스 NL은 \"블루투스 켜줘\"와 같은 발화를 수신한 경우, 발화를 시스템/설정 어 플리케이션으로 분류할 수 있고, 시스템/설정 어플리케이션이 전자 장치에 의해 지원되는 어플리케이션이 라면 전자 장치 내부에서 발화를 처리할 수 있다. 다양한 실시예에 따르면, 슬롯 태거는 발화에서 파라미터를 추출할 수 있다. 슬롯 태거는 신호 레이 블러(예: 도 6의 신호 레이블러), 신호 분류기(예: 도 6의 신호 분류기), 매치 셀렉터(예: 도 6의 매 치 셀렉터) 및 롤 레이블러(예: 도 6의 롤 레이블러)를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 온 디바이스 NL에서 수신한 발화가 전자 장치에 의해 지원 불가능한 발화라고 판단한 경우, 수신한 발화를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 어플리케이션이 전자 장치에 의해 실행 불가능할 경우, 인식 결 과 및/또는 오디오 신호를 서버로 전송할 수 있다. 예를 들어, 프로세서는 ASR 통해 획득한 텍스트 를 서버로 전달하거나 수신한 발화가 포함된 오디오 신호의 원음 그대로의 웨이브(wave)를 서버로 전 송할 수 있다. 또는, 프로세서는 두 가지 모두를 서버로 전송할 수 있다. 프로세서는 온 디바 이스 NL에서 전자 장치가 지원 가능한 발화라고 판단한 경우, 전자 장치 내의 NL모듈(예: 도 6 의 eNL 모듈)에서 발화를 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요성을 결 정할 수 있다. 프로세서는 추가 파라미터의 필요성에 기초하여 메모리(예: 도 5의 메모리)를 탐색할 수 있다. 프로세서는 프롬프트(prompt)가 필요한지 여부를 판단할 수 있다. 일 실시 예에 따르면, 프로세 서는 추가 파라미터가 메모리에 존재하는지 여부에 기초하여 프롬프트가 필요한지 여부를 판단할 수 있다. 예를 들어, 프로세서는 추가 파라미터가 메모리에 존재하지 않는 경우, 프롬프트가 필요하다고 판단할 수 있다. 프롬프트가 필요한 경우, 프로세서는 ASR 결과 또는 웨이브를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 프롬프트가 필요하지 않은 경우(예: 추가 파라미터가 메모리에 존재하는 경우), 프로 세서는 온 디바이스 플랜/실행 모듈을 이용하여 발화에 대응하는 명령을 처리하기 위해 수행해야 할 행동에 대한 액션(action)을 결정할 수 있다. 프로세서는 다이나믹 플래너(예: 도 6의 플래너(65 1))를 이용하여 파라미터들과 골들을 이용한 플랜 그래프를 생성하고, 액션을 결정하고, 실행기(예: 도 6 의 익스큐션)를 이용하여 플랜 그래프 및 액션을 포함하는 인텐트(intent) 정보에 기초하여 어플리케이션 과 연계하여 명령을 처리하기 위한 동작을 수행할 수 있다. 프로세서는 TTS(예: 도 6의 TTS) 및/또 는 리스폰스 매니저(예: 도 6의 리스폰스 매니저)를 이용하여 동작 수행의 결과 및/또는 TTS 결과를 생성 하여 사용자에게 제공할 수 있다. 도 8은 다양한 실시예에 따른 전자 장치의 동작을 설명하기 위한 도면이다. 도 8을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 사용자의 음성에 포함된 발 화에 대한 인식 결과를 생성하고, 생성한 인식 결과에 기초하여 룰(rule)에 기초한 제1 분류를 수행함으로써 발 화에 대한 전자 장치(예: 도 5의 전자 장치)의 제1 지원 여부를 판단할 수 있다. 프로세서는 제1 지원 여부에 기초하여 제2 분류를 수행함으로써 발화에 대한 전자 장치의 제2 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 수신한 발화를 분류기(예: 도 7의 온 디바이스 분류기)에 진입 시킬 수 있다. 프로세서는 룰 기반 모델에 입력할 수 있다. 프로세서는 발화가 전자 장 치에 의해 처리 가능한지 여부가 룰 기반 모델에서 판별 가능한지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화가 전자 장치에서 지원 불가능한 경우, 텍스트 및/또는 웨이브를 서버(예: 도 1의 서버)로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 룰 기반 모델(예: 도 6의 e룰 엔진)에서 전자 장치의 지원 여부가 판단되는 경우, 발화를 분류기 모델(예: 도 6의 eNL 모듈)로 입력할 수 있다. 프로세서(53 0)는 분류기 모델에서 전자 장치의 지원 여부가 판별되는지 여부를 결정할 수 있다. 프로세서 는 발화가 전자 장치에서 지원 불가능한 경우, 텍스트 및/또는 웨이브를 서버(예: 도 1의 서버)로 전 송할 수 있다. 발화가 전자 장치에서 판별 가능한 경우, 프로세서는 다음 스테이지로 진입할 수 있 다. 도 9a 및 도 9b는 다양한 실시예에 따른 추가 파라미터를 설명하기 위한 도면이다. 도 9a 및 도 9b를 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 유형을 획득하고, 추가 파라미터의 유형에 기초하여 전자 장치(예: 도 5 의 전자 장치)가 발화를 처리할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 추가 파라미터의 유형은 수치 정보를 포함하는 제1 유형, 발화를 처리하기 위한 동작 에 관련된 정보를 포함하는 제2 유형 및 발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함 할 수 있다. 다양한 실시예에 따르면, NL 분류기(예: 도 7의 온 디바이스 분류기)를 통해 발화가 수행되어야 할 어플리 케이션이 정해진 후, 프로세서는 온 디바이스 NL 모듈(예: 온 디바이스 NL 모듈)에 발화를 입력하여 NL의 모델들을 통해 수행되어야 할 동작을 규정하고 발화 내부의 파라미터들을 추출할 수 있다. 프로세서(53 0)는 골 분류기(예: 도 7의 골 분류기)를 통해 발화에 대응하는 명령을 처리하기 위해 어떤 동작을 수행하 면 되는지를 결정할 수 있다. 프로세서는 신호 레이블러(예: 도 6의 신호 레이블러), 매치 셀렉터 (예: 도 6의 매치 셀렉터) 및 신호 분류기(예: 도 6의 신호 분류기)와 같은 모듈들을 이용하여 발화 내의 파라미터를 구분하고 예측을 수행할 수 있다. 다양한 실시예에 따르면, 프로세서는 수신한 발화를 분석하여 처리하는 과정에서 수신한 데이터 외에 사용 자로부터 추가적인 정보들을 요구할 수 있다. 예를 들어, \"캘린더에 8시에 저녁약속 등록해줘\"라는 발화를 수신 한 경우, 발화를 처리하는 기기에서는 \"장소는 어디로 할까요?\" 또는 \"날짜는 어떻게 되나요?\"와 같은 정확한 등록을 위한 추가적인 정보를 사용자에게 요구할 수 있다. 이 때, 추가적인 정보를 받고 분석하는 과정에서 전 자 장치가 아닌 서버(예: 도 1의 서버)의 지원이 요구될 수 있다. 다양한 실시예에 따르면, 메모리(예: 도 5의 메모리)는 파라미터 유형에 따라 지원 가능한 어플리케이션 및 골(goal)에 대한 정보를 저장할 수 있다. 프로세서는 각각의 어플리케이션 별로 지원되는 골에 대한 정보 및 골에서 사용되는 파라미터의 종류(또는, 유형)에 대한 정보에 기초하여 전자 장치에서 발화를 처 리할지 또는 서버로 발화를 전송할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 파라미터 정보에 기초하여 전자 장치가 지원 가능한 어플리케이 션(또는 앱) 및 골에 대한 판단을 수행할 수 있다. 파라미터의 유형은 제1 유형, 제2 유형 및 제2 유형을 포함 할 수 있다. 다양한 실시예에 따르면, 제1 유형의 파라미터는 스태틱 밸류(static value)를 포함할 수 있다. 스태틱 밸류는 '1', '2', '20%', '80%', '켜줘', 또는 '꺼줘'와 같은 정해진 골에서 전자 장치의 내부 또는 외부에 대한 추가적인 탐색 없이 즉각적으로 획득 가능한 수치와 같은 형태를 의미할 수 있다. 예를 들어, 프 로세서는 \"볼륨 조절해줘\"와 같은 발화를 수신하여 처리하면서, 볼륨 제어(volume_control)라는 골이 요구 된다고 판단했을 때, 골이 가질 수 있는 파라미터가 스태틱 밸류일 수 있다. 이 때, 프로세서는 \"볼 륨을 얼마로 조절해드릴까요?\"와 같은 프롬프트를 사용자에게 요구하여 볼륨을 얼마로 조절할지에 대한 추가 파 라미터 정보를 포함한 발화가 실제로 수치와 관련된 스태틱 밸류에 매칭되는 경우, 전자 장치에서 발화를 처리할 수 있다. 만약, 스태틱 밸류에 매칭되지 않는 추가 정보 발화를 사용자로부터 수신한 경우, 프로세서는 수신한 발화를 전자 장치에서 실패 동작으로 처리하거나 서버로 전달하는 추가적인 동작을 수행할 수 있다. 다양한 실시예에 따르면, 제2 유형의 파라미터는 다이나믹 밸류(dynamic value)를 포함할 수 있다. 다이 나믹 밸류는 골을 수행하기 위해 필요한 스태틱 밸류 외의 추가적인 정보 값들을 의미할 수 있다. 다이나믹 밸류는 메모리 내에 저장된 정보일 수 있고, 서버에 보관된 정보일 수 있다. 예를 들 어, \"갤러리에서 사진 보여줘\"와 같은 사용자 발화를 수신하여, 갤러리 보여주기(gallery_show)라는 골로 판단 한 경우, 프로세서는 갤러리 보여주기 골이 가질 수 있는 파라미터가 다이나믹 밸류라는 것을 인지할 수 있다. 프로세서는 \"어떤 사진을 원하시나요?\"와 같이 프롬프트를 통해 사용자에게 추가 정보를 요구하 여, \"가족 앨범\"과 같은 추가 정보를 수신하면, 전자 장치 내에 매칭 되는 정보가 있는지를 탐색할 수 있 다. 매칭되는 정보가 존재하는 경우, 프로세서는 전자 장치 내에서 발화를 처리하고, 정보가 존재하 지 않는 경우, 발화를 서버로 전송하여 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 획득한 골과 다이나믹 밸류를 어플리케이션으로 전달하여 어플 리케이션에서 처리된 결과가 실패인 경우, 서버로 발화를 처리하여 전달할 수 있다. 프로세서는 다 이나믹 밸류로 추가 정보를 수신한 경우, 추가 정보가 전자 장치 내에 존재하는지 여부를 판단하고, 서버에 대한 전달 여부를 결정할 수 있다. 다양한 실시예에 따르면, 제3 유형의 파라미터는 오픈 타이틀을 포함할 수 있다. 오픈 타이틀(open title)은 기본적으로 어떤 값이든 가질 수 있는 파라미터를 의미할 수 있다. 오픈 타이틀은 어떤 정보를 가지는지를 알 수 있는 카테고리(category) 값을 가질 수 있다. 예를 들어, 카테고리는 '노래 제목(song name)', '배우(actor)', 및/또는 '장소(location)'와 같은 정보를 포함할 수 있다. 오픈 타이틀에 포함 된 카테고리를 전자 장치에서 처리할 수 있는지 여부에 따라 프로세서의 동작이 달라질 수 있다. 프 로세서는 발화를 그대로 옮기는 메모(memo)나 딕테이션(dictation)과 같은 동작은 전자 장치에서 직 접 처리하도록 할 수 있다. 처리할 수 없는 정보의 카테고리인 경우, 프로세서는 발화를 서버로 전 송하여 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 지원 가능한 앱들과 발화를 처리하기 위해 필요한 파라미터의 유형에 대한 정보를 도 9b의 예시와 같이 인지할 수 있다. 앱 1은 발화의 처리를 위해 골1 및 골 2을 수행할 수 있고, 골 1는 스태틱 밸류 유형의 파라미터를 이용하고, 골 2은 스태틱 밸류 및 다이나믹 밸류 유형의 파라미터를 이용할 수 있다. 앱 2는 발화의 처리를 위해 골 1 및 골 2을 수행할 수 있고, 골 1는 다이나믹 밸류 및 오픈 타이틀 유형의 파라미터를 이용하고, 골 2은 스태틱 밸류, 다이나믹 밸류 및 오픈 타이틀 유형의 파라미터를 이용할 수 있다. 도 10은 다양한 실시예에 따른 추가 파라미터의 필요성을 결정하는 동작의 흐름도를 나타낸다. 도 10을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 추가 정보(예: 추가 파라미 터)에 기초하여 온 디바이스(예: 도 5의 전자 장치)에서 발화를 처리할지 여부를 결정할 수 있다. 프로세 서는 추가 정보에 대하여 입력 처리를 수행할 수 있다. 프로세서는 추가 정보의 파라미터 유 형을 판단할 수 있다. 추가 정보가 다이나믹 밸류(예: 도 9a의 다이나믹 밸류)인 경우, 프로세서 는 내부 개인 정보를 비교할 수 있다. 프로세서는 매치 정보의 비교 유무를 판단할 수 있다 . 매치 정보가 존재하지 않는 경우, 프로세서는 발화를 서버(예: 도 1의 서버)로 전달할 수 있다. 매치 정보가 존재하는 경우, 프로세서는 추가 정보가 필요한지 여부를 판단할 수 있다 . 다양한 실시예에 따르면, 프로세서는 파라미터의 유형이 스태틱 밸류(예: 도 9a의 스태틱 밸류)인지 여부를 판단할 수 있다. 파라미터 유형이 스태틱 밸류가 아닌 경우, 프로세서는 발화를 서버 로 전달할 수 있다. 파라미터 유형이 스태틱 밸류인 경우, 프로세서는 추가 정보가 필요한지 여부를 판단 할 수 있다. 다양한 실시예에 따르면, 프로세서는 파라미터의 유형이 오픈 타이틀(예: 도 9a의 오픈 타이틀)인 경 우, 오픈 타이틀에 포함된 카테고리가 지원 가능한 카테고리인지 여부를 판단할 수 있다. 지원 가능하지 않은 카테고리인 경우, 프로세서는 발화를 서버로 전달할 수 있다. 지원 가능한 카테고리인경우, 프로세서는 추가 정보가 필요한지 여부를 판단할 수 있다. 프로세서는 추가 정보가 필 요한 경우, 1011의 동작을 다시 수행할 수 있고, 추가 정보가 필요하지 않은 경우, 온 디바이스 처리를 수행할 수 있다. 다양한 실시예에 따르면, 프로세서는 지원되는 어플리케이션과 골(goal)들에 대하여 추가 정보를 입력 받 는 과정에서 전자 장치가 지원이 어렵거나 서버의 지원이 필요하여 서버로 발화를 전달하는 것으로 결정한 경우, 온 디바이스 지원으로 동작 중이더라도 서버로 발화를 전달하고 처리를 이관할 수 있다. 프로세서는 발화를 서버로 전달하기로 결정한 경우, 수신한 발화의 웨이브 음성 정보를 그대 로 전달할 수 있고, 온 디바이스에서 발화를 처리하며 획득한 골 및 추가 입력된 파라미터를 서버로 전송 할 수도 있다. 도 11은 다양한 실시예에 따른 온 디바이스 NL 구간에서의 동작의 흐름도를 나타낸다. 도 11을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 NL 모델(예: 도 7의 온 디 바이스 NL)에 발화를 진입시킬 수 있다. 프로세서는 골 분류기(예: 도 7의 골 분류기)를 이용하여 발화를 처리할 수 있다. 프로세서는 골 분류기의 처리 결과에 기초하여 발화를 처리하기 위한 골(goal)을 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 결정된 골에 기초하여 발화가 온 디바이스(예: 도 5의 전자 장치 )에서 지원되는지 여부를 판단할 수 있다. 온 디바이스에서 발화가 지원되는 경우에 프로세서(53 0)는 파라미터를 추출할 수 있다. 온 디바이스에서 발화가 지원되지 않는 경우에, 프로세서는 발화 를 서버(예: 도 1의 서버)로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 추가 정보가 필요한지 여부를 결정할 수 있다. 추가 정보가 필요한 경우, 프로세서는 사용자에게 추가 정보를 요청할 수 있다. 예를 들어, 프로세서는 프 롬프트 또는 인터럽트(interrupt)의 형태로 추가 정보를 요청할 수 있다. 프로세서는 수신한 추가 정보를 입력할 수 있다. 프로세서는 입력된 추가 정보에 기초하여 1119의 동작을 다시 수행할 수 있다. 다양한 실시예에 따르면, 프로세서는 추가 정보가 필요하지 않은 경우, 발화가 온 디바이스에서 지원되는 지 여부를 결정할 수 있다. 발화가 온 디바이스에서 지원되지 않는 경우, 프로세서는 발화를 서버 로 전송할 수 있다. 발화가 온 디바이스에서 지원되는 경우, 프로세서는 다음 스테이지를 진 행할 수 있다. 다양한 실시예에 따르면, 분류기와 NL 모듈에서 온 디바이스 지원 가능 여부를 판단하고, 온 디바이스에서 지원 할 수 없다고 판단된 경우, 서버에서 발화를 처리시키고, 서버로부터 처리 결과를 수신하여 사용자에 게 제공할 수 있다. 온 디바이스에서 처리 가능한 경우, 온 디바이스 내부에 구현된 액션 플래너(예: 도 6의 액션 플래너)에서 어플리케이션과 연계하여 수행해야 할 동작을 수행하고, 결과를 사용자에게 시각적 및/ 또는 음성적으로 제공할 수 있다. 도 12a 내지 도 13은 다양한 실시예에 따른 발화 처리를 위한 사용자 인터페이스의 예들을 나타낸다. 도 12a 내지 도 13을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 사용자로부터 발화가 포함된 오디오 신호를 수신하고, 수신한 오디오 신호에 기초하여 사용자에게 프롬프트를 통해 추가 정보 를 요청할 수 있다. 예를 들어, 프로세서가 \"비행기 시간 알려줘\"와 같은 발화를 수신한 경우, 사용자 인 터페이스과 같은 화면을 제공할 수 있다. 다시 말해, 프로세서는 사용자에게 프롬프트를 통해 추가 정보를 요청할 수 있다. 예를 들어, 프로세서는 \"검색할 공항 또는 항공편 명을 함께 말해주세요.\"와 같 은 프롬프트를 제공할 수 있다. 다양한 실시예에 따르면, 추가 정보의 요청에 대한 답변에 응답하여, 프로세서는 사용자 인터페이스(123 0)과 같은 화면을 제공할 수 있다. 예를 들어, 프로세서는 \"인천공항\"이라는 사용자의 답변에 응답하여 \"검색할 도착 공항을 알려주세요\"라는 추가 정보를 요청할 수 있다. 다양한 실시예에 따르면, 추가 정보의 요청에 대한 답변에 응답하여 프로세서는 사용자 인터페이스 과 같은 화면을 제공할 수 있다. 예를 들어, 프로세서는 \"제주공항\"이라는 사용자의 답변에 응답하여 \"현재 시각 기준 12시간 전후에는 서울에서 출발하는 제주행 항공편이 없네요.\"라는 응답을 사용자에게 제공할 수 있다. 다양한 실시예에 따르면, 사용자 인터페이스는 도 13의 예시와 같이, 보이스 에이전트 오프라인 모드(voice agent offline mode) 메뉴에 콜(call), 알람(alarm), 오픈(open), 세팅 (setting), 뮤직(music) 및 맵(map) 메뉴를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자 발화 처리를 위한 온 디바이스 상에서 지원 가능한 어플리케 이션에 관한 사용자 인터페이스를 제공할 수 있다. 도 14는 다양한 실시예에 따른 전자 장치의 동작의 흐름도를 나타낸다. 도 14를 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 마이크(예: 도 2의 마이크 (150-1))를 이용하여 사용자의 발화를 포함한 오디오 신호를 수신할 수 있다. 프로세서는 발화에 대한 인식 결과를 생성할 수 있다. 프로세서는 발화에 기초하여 ASR(automatic speech recognition)을 수행함으로써 발화에 대응하는 텍스트를 생성함으로써 인식 결과를 생성할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과에 기초하여 발화가 전자 장치(예: 도 5의 전자 장치(50 0))에 의해 지원되는지 여부를 판단할 수 있다. 프로세서는 지원 여부에 기초하여 전자 장치 가 발화를 처리할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과를 룰 기반 자연어 모델(rule based model)에 입력함으로써 발화가 전자 장치에 의해 처리 가능한지 여부를 판단할 수 있다. 프로세서는 룰 기반 자연어 모델에 기초하여 발화를 처리하기 위한 어플리케이션(application)(또는, 앱(app))이 전자 장치에 의해 지원되는 지 여부를 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과가 미리 결정된 패턴을 포함하는 경우, 발화를 처리하기 위 한 연동 어플리케이션을 이용하여 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 프로세서는 인식 결과에 기초하여 발화에 대응하는 명령을 수행할 어플리케이션 을 탐색할 수 있다. 프로세서는 어플리케이션이 전자 장치에 의해 실행 가능한지 여부를 판단할 수 있다. 프로세서는 전자 장치에 의해 실행 가능한지 여부에 기초하여 인식 결과를 서버(예: 도 1의 서버)로 전송할 수 있다. 프로세서는 어플리케이션이 전자 장치에 의해 실행 불가능할 경우, 인식 결과 및/또는 오디오 신호를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요성을 결 정할 수 있다. 프로세서는 추가 파라미터의 필요성에 기초하여 메모리(예: 도 5의 메모리)를 탐색할 수 있다. 다양한 실시예에 따르면, 추가 파라미터의 유형은 수치 정보를 포함하는 제1 유형, 발화를 처리하기 위한 동작 에 관련된 정보를 포함하는 제2 유형 및 발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함 할 수 있다. 다양한 실시예에 따르면, 프로세서는 처리 여부에 기초하여 발화에 대응하는 명령을 처리할 수 있다 . 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는, 사용자의 발화를 포함한 오디오 신호를 수 신하는 마이크(예: 도 2의 마이크(150-1))와, 프로세서(예: 도 1의 프로세서)와, 상기 프로세서에 의해 실 행 가능한 인스트럭션을 저장하는 메모리(예: 도 1의 메모리)를 포함하고, 상기 프로세서는, 상기 발화에 대한 인식 결과를 생성하고, 상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단하고, 지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정하고, 상기 처리 여부에 기초하여 상기 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 기초하여 ASR(Automatic Speech Recognition)을 수행함 으로써 상기 발화에 대응하는 텍스트를 생성함으로써 상기 인식 결과를 생성할 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과를 룰 기반 자연어 모델(rule based model)에 입력함 으로써 상기 발화가 상기 전자 장치에 의해 처리 가능한지 여부를 판단하고, 상기 룰 기반 자연어 모델에 기초 하여 상기 발화를 처리하기 위한 어플리케이션(application)이 상기 전자 장치에 의해 지원되는지 여부를 판단 할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과가 미리 결정된 패턴을 포함하는 경우, 상기 발화를 처리하기 위한 연동 어플리케이션을 이용하여 상기 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과에 기초하여 상기 발화에 대응하는 명령을 수행할 어 플리케이션을 탐색하고, 상기 어플리케이션이 상기 전자 장치에 의해 실행 가능한지 여부를 판단하고, 상기 전 자 장치에 의해 실행 가능한지 여부에 기초하여 상기 인식 결과를 서버(예: 도 1의 서버)로 전송할 수 있 다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 어플리케이션이 상기 전자 장치에 의해 실행 불가능할 경우, 상기 인식 결과 또는 상기 오디오 신호를 상기 서버로 전송할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요 성을 결정하고, 상기 필요성에 기초하여 상기 메모리를 탐색할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 유형 을 획득하고, 상기 유형에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 상기 추가 파라미터의 유형은, 수치 정보를 포함하는 제1 유형, 상기 발화를 처리하기 위한 동작에 관련된 정보를 포함하는 제2 유형 및 상기 발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치는, 사용자의 발화를 포함한 오디오 신호를 수신하는 마이크와, 프로세서와, 상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 상기 발화에 대한 인식 결과를 생성하고, 상기 인식 결과에 기초하여 룰(rule)에 기초한 제1 분류를 수행함으로써 상기 발화 에 대한 상기 전자 장치의 제1 지원 여부를 판단하고, 상기 제1 지원 여부에 기초하여 제2 분류를 수행함으로써 상기 발화에 대한 상기 전자 장치의 제2 지원 여부를 판단하고, 상기 제2 지원 여부에 기초하여 상기 발화에 대 응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 기초하여 ASR(Automatic Speech Recognition)을 수행함 으로써 상기 발화에 대응하는 텍스트를 생성함으로써 상기 인식 결과를 생성할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과를 룰 기반 자연어 모델(rule based model)에 입력함 으로써 상기 발화가 상기 전자 장치에 의해 처리 가능한지 여부를 판단하고, 상기 룰 기반 자연어 모델에 기초 하여 상기 발화를 처리하기 위한 어플리케이션(application)이 상기 전자 장치에 의해 지원되는지 여부를 판단 함으로써 상기 제1 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과가 미리 결정된 패턴을 포함하는 경우, 상기 발화를 처리하기 위한 연동 어플리케이션을 이용하여 상기 발화에 대응하는 명령을 처리할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화를 처리하기 위한 목표 동작의 분류를 수행함으로써 상기 제2 지원 여부를 판단할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 인식 결과에 기초하여 상기 발화에 대응하는 명령을 수행할 어 플리케이션을 탐색하고, 상기 어플리케이션이 상기 전자 장치에 의해 실행 가능한지 여부를 판단함으로써 상기 제2 지원 여부를 판단하고, 상기 제2 지원 여부에 기초하여 상기 인식 결과를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 어플리케이션이 상기 전자 장치에 의해 실행 불가능할 경우, 상기 인식 결과 또는 상기 오디오 신호를 상기 서버로 전송할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 필요 성을 결정하고, 상기 필요성에 기초하여 상기 메모리를 탐색할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 발화에 대응하는 명령을 처리하기 위한 추가 파라미터의 유형 을 획득하고, 상기 유형에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부를 결정할 수 있다.다양한 실시예에 따르면, 상기 추가 파라미터의 유형은, 수치 정보를 포함하는 제1 유형, 상기 발화를 처리하기 위한 동작에 관련된 정보를 포함하는 제2 유형 및 상기 발화의 처리를 위한 정보의 카테고리 정보를 포함하는 제3 유형을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치의 발화 처리 방법은, 사용자의 발화를 포함한 오디오 신호를 수신하는 동작 과, 상기 발화에 대한 인식 결과를 생성하는 동작과, 상기 인식 결과에 기초하여 상기 발화가 상기 전자 장치에 의해 지원되는지 여부를 판단하는 동작과, 지원 여부에 기초하여 상기 전자 장치가 상기 발화를 처리할지 여부 를 결정하는 동작과, 처리 여부에 기초하여 상기 발화에 대응하는 명령을 처리하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0110139", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 3은 다양한 실시예에 따른, 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 도 4는 다양한 실시예에 따른 전자 장치가 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면 이다. 도 5는 다양한 실시예에 따른 전자 장치의 개략적인 블록도를 나타낸다. 도 6은 다양한 실시예에 따른 전자 장치의 시스템 아키텍처의 예를 나타낸다. 도 7은 다양한 실시예에 따른 전자 장치의 동작을 설명하기 위한 도면이다. 도 8은 다양한 실시예에 따른 전자 장치의 분류 동작의 흐름도를 나타낸다. 도 9a 및 도 9b는 다양한 실시예에 따른 추가 파라미터를 설명하기 위한 도면이다. 도 10은 다양한 실시예에 따른 추가 파라미터의 필요성을 결정하는 동작의 흐름도를 나타낸다. 도 11은 다양한 실시예에 따른 온 디바이스 NL 구간에서의 동작의 흐름도를 나타낸다. 도 12a 내지 도 12c는 다양한 실시예에 따른 발화 처리를 위한 사용자 인터페이스의 예들을 나타낸다. 도 13은 다양한 실시예에 따른 사용자 인터페이스의 다른 예를 나타낸다. 도 14는 다양한 실시예에 따른 전자 장치의 동작의 흐름도를 나타낸다."}
