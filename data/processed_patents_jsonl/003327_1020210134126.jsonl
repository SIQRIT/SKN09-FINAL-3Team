{"patent_id": "10-2021-0134126", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0050846", "출원번호": "10-2021-0134126", "발명의 명칭": "세분성 자각 어텐션 기반의 신경망", "출원인": "네이버 주식회사", "발명자": "고소동"}}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서에 의해 수행되는 방법으로서,세분성 자각 셀프-어텐션 레이어의 입력으로 복수의 입력 토큰을 수신하는 단계;상기 복수의 입력 토큰 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬을 생성하는 단계;학습된 쿼리 선형 변환을 상기 복수의 입력 토큰 각각에 적용하여 쿼리 행렬을 생성하는 단계;학습된 키 선형 변환을 상기 복수의 입력 토큰 각각에 적용하여 키 행렬을 생성하는 단계;학습된 값 선형 변환을 상기 복수의 입력 토큰 각각에 적용하여 값 행렬을 생성하는 단계; 및상기 세분성 스코어 행렬, 상기 쿼리 행렬, 상기 키 행렬 및 상기 값 행렬에 기초하여 상기 세분성 자각 셀프-어텐션 레이어의 출력을 생성하는 단계를 포함하고,세분성 스코어는 각 입력 토큰의 세분성 레벨을 나타내는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,세분성 스코어는 제1 값과 제2 값 사이의 연속적인(continuous) 값을 가지고,세분성 스코어가 제1 값에 가까울수록 낮은 세분성 레벨을 나타내고,세분성 스코어가 제2 값에 가까울수록 높은 세분성 레벨을 나타내는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 복수의 입력 토큰 각각에 대한 세분성 스코어를 시각화하여 출력하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 세분성 스코어 행렬에 제1 마스크를 적용하여 각 입력 토큰 사이의 세분성 레벨 연관성을 나타내는 세분성공명(granularity resonance) 행렬을 생성하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 세분성 스코어 행렬에 제2 마스크를 적용하여 각 입력 토큰 사이의 어텐션 범위를 나타내는 세분성 범위공개특허 10-2023-0050846-3-행렬을 생성하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 세분성 자각 셀프-어텐션 레이어의 출력을 생성하는 단계는,상기 쿼리 행렬과 상기 키 행렬에 기초하여 상기 복수의 입력 토큰 사이의 어텐션 스코어를 포함하는 어텐션 스코어 행렬을 생성하는 단계; 및상기 세분성 공명 행렬 및 상기 세분성 범위 행렬을 상기 어텐션 스코어 행렬에 적용하여 세분성-자각 어텐션스코어 행렬을 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 세분성 공명 행렬은 유사한 세분성 스코어를 가지는 입력 토큰들 사이에 높은 세분성-자각 어텐션 스코어가 부여되도록 하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 세분성 범위 행렬은 낮은 세분성 레벨을 가지는 입력 토큰이 높은 세분성 레벨을 가지는 입력 토큰보다 좁은 어텐션 범위를 가지도록 하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제6항에 있어서,상기 세분성 자각 셀프-어텐션 레이어의 출력을 생성하는 단계는,상기 세분성-자각 어텐션 스코어 및 상기 값 행렬에 기초하여 상기 세분성 자각 셀프-어텐션 레이어의 출력을생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제9항 중 어느 한 항에 따른 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "정보 처리 시스템으로서,적어도 하나의 프로세서 및 공개특허 10-2023-0050846-4-상기 적어도 하나의 프로세서에 의해 실행될 때 적어도 하나의 프로세서로 하여금 복수의 네트워크 입력을 갖는입력 시퀀스를, 복수의 네트워크 출력을 갖는 출력 시퀀스로 변환하는 세분성 자각 어텐션 기반의 시퀀스 변환신경망을 구현하게 하는 명령을 저장하는 메모리를 포함하고,상기 시퀀스 변환 신경망은,상기 입력 시퀀스를 수신하여 각각의 네트워크 입력의 개별 인코딩된 표현을 생성하도록 구성된 인코더 신경망;및상기 각각의 네트워크 입력의 개별 인코딩된 표현을 수신하여 상기 출력 시퀀스를 생성하도록 구성된 디코더 신경망을 포함하고,상기 인코더 신경망은 적어도 하나의 인코더 서브 네트워크의 시퀀스를 포함하고,각 인코더 서브 네트워크는 복수의 인코더 서브 네트워크 입력을 수신하여 복수의 인코더 서브 네트워크 출력을생성하도록 구성되고,각 인코더 서브 네트워크는 인코더 세분성 자각 셀프-어텐션 레이어를 포함하고,상기 인코더 세분성 자각 셀프-어텐션 레이어는,입력으로 복수의 인코더 서브 네트워크 입력을 수신하고, 상기 복수의 인코더 서브 네트워크 입력 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬을생성하고,학습된 쿼리 선형 변환을 상기 복수의 인코더 서브 네트워크 입력 각각에 적용하여 쿼리 행렬을 생성하고,학습된 키 선형 변환을 상기 복수의 인코더 서브 네트워크 입력 각각에 적용하여 키 행렬을 생성하고,학습된 값 선형 변환을 상기 복수의 인코더 서브 네트워크 입력 각각에 적용하여 값 행렬을 생성하고,상기 세분성 스코어 행렬, 상기 쿼리 행렬, 상기 키 행렬 및 상기 값 행렬에 기초하여 출력을 생성하도록 구성되고, 상기 세분성 스코어는 각 인코더 서브 네트워크 입력의 세분성 레벨을 나타내는, 정보 처리 시스템."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 인코더 신경망은, 상기 입력 시퀀스의 복수의 네트워크 입력을 복수의 임베딩된 표현으로 맵핑하고, 상기복수의 임베딩된 표현을 상기 복수의 네트워크 입력의 대응하는 위치 임베딩(positional embedding)과 결합하여복수의 결합된 임베딩된 표현을 생성하도록 구성된 임베딩 레이어를 더 포함하고,상기 적어도 하나의 인코더 서브 네트워크의 시퀀스에서 첫 번째 인코더 서브 네트워크에 대한 복수의 인코더서브 네트워크 입력으로서 상기 복수의 결합된 임베딩된 표현이 제공되는, 정보 처리 시스템."}
{"patent_id": "10-2021-0134126", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 각각의 네트워크 입력의 개별 인코딩된 표현은, 상기 적어도 하나의 인코더 서브 네트워크의 시퀀스에서마지막 인코더 서브 네트워크에 의해 생성된 복수의 인코더 서브 네트워크 출력인, 정보 처리 시스템.공개특허 10-2023-0050846-5-청구항 14 제13항에 있어서,상기 적어도 하나의 인코더 서브 네트워크의 시퀀스가 2개 이상의 인코더 서브 네트워크를 포함하고, 상기 적어도 하나의 인코더 서브 네트워크의 시퀀스에서 첫 번째 인코더 서브 네트워크 이외의 각 인코더 서브네트워크에서 복수의 인코더 서브 네트워크 입력은 선행하는 인코더 서브 네트워크의 복수의 인코더 서브 네트워크 출력인, 정보 처리 시스템."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는, 적어도 하나의 프로세서에 의해 수행되는 방법에 관한 것이다. 방법은 세분성 자각 셀프-어텐션 레 이어의 입력으로 복수의 입력 토큰을 수신하는 단계, 복수의 입력 토큰 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬을 생성하는 단계, 학습된 쿼리 선형 변환을 복수의 입력 토큰 각각에 적용하여 쿼리 행렬을 생성하는 단계, 학습된 키 선형 변환을 복수의 입력 토큰 각각에 적용하여 키 행렬을 생성하는 단계, 학습된 값 선형 변환을 복수의 입력 토큰 각각에 적용하여 값 행렬을 생성하는 단계 및 세분성 스코어 행렬, 쿼리 행렬, 키 행렬 및 값 행렬에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성하는 단계를 포함한다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 세분성 자각 어텐션 기반의 신경망에 관한 것으로, 구체적으로, 세분성 자각 어텐션 기반의 신경망을 이용하여 문장의 세분성을 추정하고, 이를 바탕으로 어떤 단어들에 더 집중해야 하는지에 대한 어텐션을 더욱 정확하게 계산하기 위한 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 인공지능 기술이 발전하고 있는 가운데, 이를 적극적으로 활용 및 상용화하고 있는 분야로 언어 이해 기술 이 대표적이다. 언어 이해 기술은 사람들이 표현하는 방대한 텍스트로부터 의미를 이해하고 텍스트에 포함된 정보를 추출 및 분류하며, 더 나아가 직접 텍스트를 생성하는 기술을 포함한 자연어 처리(Natural Language Processing: NLP)로 대표된다. 이러한 NLP의 세부 분야로는 감정 분석, 의미 분석, 구문 분석, 음성 인식, 질 의 응답 등이 있다. 이러한 NLP 분야에서 어텐션 메커니즘을 사용한 트렌스포머(transformer) 모델이 많은 성공을 거두고 있다. 그 러나, 기존의 트렌스포머 모델은 텍스트의 언어 구조를 모델링하는 데에는 제한적인 성능 보인다. 즉, 트렌스 포머 모델은 구문 구조에 대한 모델링 없이 단어들을 균일한 방식으로 처리한다는 문제가 있다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "상기와 같은 문제를 해결하기 위한 방법, 기록매체에 저장된 컴퓨터 프로그램 및 장치(시스템)를 제공한다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시는 방법, 장치(시스템) 또는 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 포함한 다양한 방식으로 구현될 수 있다. 본 개시의 일 실시예에 따른 적어도 하나의 프로세서에 의해 수행되는 방법은, 세분성 자각 셀프-어텐션 레이어 의 입력으로 복수의 입력 토큰을 수신하는 단계, 복수의 입력 토큰 각각에 대한 세분성 스코어를 추정하여 세분 성 스코어 행렬을 생성하는 단계, 학습된 쿼리 선형 변환을 복수의 입력 토큰 각각에 적용하여 쿼리 행렬을 생 성하는 단계, 학습된 키 선형 변환을 복수의 입력 토큰 각각에 적용하여 키 행렬을 생성하는 단계, 학습된 값 선형 변환을 복수의 입력 토큰 각각에 적용하여 값 행렬을 생성하는 단계 및 세분성 스코어 행렬, 쿼리 행렬, 키 행렬 및 값 행렬에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성하는 단계를 포함하고, 세분성 스코어는 각 입력 토큰의 세분성 레벨을 나타낸다. 본 개시의 일 실시예에 따르면, 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨 터 프로그램이 제공된다. 본 개시의 일 실시예에 따른 정보 처리 시스템은, 적어도 하나의 프로세서 및 적어도 하나의 프로세서에 의해 실행될 때 적어도 하나의 프로세서로 하여금 복수의 네트워크 입력을 갖는 입력 시퀀스를, 복수의 네트워크 출 력을 갖는 출력 시퀀스로 변환하는 세분성 자각 어텐션 기반의 시퀀스 변환 신경망을 구현하게 하는 명령을 저 장하는 메모리를 포함하고, 시퀀스 변환 신경망은, 입력 시퀀스를 수신하여 각각의 네트워크 입력의 개별 인코 딩된 표현을 생성하도록 구성된 인코더 신경망 및 각각의 네트워크 입력의 개별 인코딩된 표현을 수신하여 출력시퀀스를 생성하도록 구성된 디코더 신경망을 포함하고, 인코더 신경망은 적어도 하나의 인코더 서브 네트워크 의 시퀀스를 포함하고, 각 인코더 서브 네트워크는 복수의 인코더 서브 네트워크 입력을 수신하여 복수의 인코 더 서브 네트워크 출력을 생성하도록 구성되고, 각 인코더 서브 네트워크는 인코더 세분성 자각 셀프-어텐션 레 이어를 포함하고, 인코더 세분성 자각 셀프-어텐션 레이어는, 입력으로 복수의 인코더 서브 네트워크 입력을 수 신하고, 복수의 인코더 서브 네트워크 입력 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬을 생성 하고, 학습된 쿼리 선형 변환을 복수의 인코더 서브 네트워크 입력 각각에 적용하여 쿼리 행렬을 생성하고, 학 습된 키 선형 변환을 복수의 인코더 서브 네트워크 입력 각각에 적용하여 키 행렬을 생성하고, 학습된 값 선형 변환을 복수의 인코더 서브 네트워크 입력 각각에 적용하여 값 행렬을 생성하고, 세분성 스코어 행렬, 쿼리 행 렬, 키 행렬 및 값 행렬에 기초하여 출력을 생성하도록 구성되고, 세분성 스코어는 각 인코더 서브 네트워크 입 력의 세분성 레벨을 나타낸다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시예에 따르면, 세분성 자각 어텐션 기반의 신경망은 입력 시퀀스에 포함된 복수의 네트워 크 입력의 연속적인 세분성 스코어를 추정할 수 있으며, 추정된 세분성 스코어를 기초로 복수의 네트워크 입력 사이의 어텐션 스코어를 조정함으로써, 보다 정확한 출력 시퀀스를 생성할 수 있다. 본 개시의 다양한 실시예에 따르면, 사용자(예: 텍스트 생성 서비스의 관리자)는 세분성 스코어를 시각화한 결 과를 확인함으로써, 세분성 자각 어텐션 기반의 시퀀스 변환 신경망이 세분성을 정확하게 추정하고 있는지 확인 하여 신경망이 의도한 것과 같이 동작하고 있는지 여부, 모델의 성능을 개선시기 위한 구조 개선 방법 등을 고 민할 수 있다. 본 개시의 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급되지 않은 다른 효과들은 청구범위의 기재로부"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자(\"통상의 기술자\"라 함)에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 개시의 실시를 위한 구체적인 내용을 첨부된 도면을 참조하여 상세히 설명한다. 다만, 이하의 설명에 서는 본 개시의 요지를 불필요하게 흐릴 우려가 있는 경우, 널리 알려진 기능이나 구성에 관한 구체적 설명은 생략하기로 한다. 첨부된 도면에서, 동일하거나 대응하는 구성요소에는 동일한 참조부호가 부여되어 있다. 또한, 이하의 실시예 들의 설명에 있어서, 동일하거나 대응되는 구성요소를 중복하여 기술하는 것이 생략될 수 있다. 그러나, 구성 요소에 관한 기술이 생략되어도, 그러한 구성요소가 어떤 실시예에 포함되지 않는 것으로 의도되지는 않는다.개시된 실시예의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 후술되어 있는 실시예 들을 참조하면 명확해질 것이다. 그러나, 본 개시는 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 개시가 완전하도록 하고, 본 개시가 통상의 기술 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것일 뿐이다. 본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 개시된 실시예에 대해 구체적으로 설명하기로 한다. 본 명세서에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 관련 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 발명의 설명 부분에서 상세히 그 의미를 기재할 것이다. 따라서, 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어 가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서에서의 단수의 표현은 문맥상 명백하게 단수인 것으로 특정하지 않는 한, 복수의 표현을 포함한다. 또한, 복수의 표현은 문맥상 명백하게 복수인 것으로 특정하지 않는 한, 단수의 표현을 포함한다. 명세서 전체 에서 어떤 부분이 어떤 구성요소를 포함한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있음을 의미한다. 또한, 명세서에서 사용되는 '모듈' 또는 '부'라는 용어는 소프트웨어 또는 하드웨어 구성요소를 의미하며, '모 듈' 또는 '부'는 어떤 역할들을 수행한다. 그렇지만, '모듈' 또는 '부'는 소프트웨어 또는 하드웨어에 한정되 는 의미는 아니다. '모듈' 또는 '부'는 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서, '모듈' 또는 '부'는 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌웨어, 마이 크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 또는 변수들 중 적어도 하나를 포 함할 수 있다. 구성요소들과 '모듈' 또는 '부'들은 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 '모듈' 또는 '부'들로 결합되거나 추가적인 구성요소들과 '모듈' 또는 '부'들로 더 분리될 수 있다. 본 개시의 일 실시예에 따르면, '모듈' 또는 '부'는 프로세서 및 메모리로 구현될 수 있다. '프로세서'는 범용 프로세서, 중앙 처리 장치(CPU), 마이크로프로세서, 디지털 신호 프로세서(DSP), 제어기, 마이크로제어기, 상태 머신 등을 포함하도록 넓게 해석되어야 한다. 몇몇 환경에서, '프로세서'는 주문형 반도체(ASIC), 프로그램가 능 로직 디바이스(PLD), 필드 프로그램가능 게이트 어레이(FPGA) 등을 지칭할 수도 있다. '프로세서'는, 예를 들어, DSP와 마이크로프로세서의 조합, 복수의 마이크로프로세서들의 조합, DSP 코어와 결합한 하나 이상의 마 이크로프로세서들의 조합, 또는 임의의 다른 그러한 구성들의 조합과 같은 처리 디바이스들의 조합을 지칭할 수 도 있다. 또한, '메모리'는 전자 정보를 저장 가능한 임의의 전자 컴포넌트를 포함하도록 넓게 해석되어야 한 다. '메모리'는 임의 액세스 메모리(RAM), 판독-전용 메모리(ROM), 비-휘발성 임의 액세스 메모리(NVRAM), 프 로그램가능 판독-전용 메모리(PROM), 소거-프로그램가능 판독 전용 메모리(EPROM), 전기적으로 소거가능 PROM(EEPROM), 플래쉬 메모리, 자기 또는 광학 데이터 저장장치, 레지스터들 등과 같은 프로세서-판독가능 매체 의 다양한 유형들을 지칭할 수도 있다. 프로세서가 메모리로부터 정보를 판독하고/하거나 메모리에 정보를 기 록할 수 있다면 메모리는 프로세서와 전자 통신 상태에 있다고 불린다. 프로세서에 집적된 메모리는 프로세서 와 전자 통신 상태에 있다. 본 개시에서, '시스템'은 서버 장치와 클라우드 장치 중 적어도 하나의 장치를 포함할 수 있으나, 이에 한정되 는 것은 아니다. 예를 들어, 시스템은 하나 이상의 서버 장치로 구성될 수 있다. 다른 예로서, 시스템은 하나 이상의 클라우드 장치로 구성될 수 있다. 또 다른 예로서, 시스템은 서버 장치와 클라우드 장치가 함께 구성되 어 동작될 수 있다. 도 1은 본 개시의 일 실시예에 따른 인공 신경망 시스템을 이용하여 입력 시퀀스를 기초로 출력 시퀀스를 생성하는 예시를 나타내는 도면이다. 일 실시예에 따르면, 인공 신경망 시스템은 입력 시퀀스를 변 환하여 출력 시퀀스를 생성하는 시퀀스 변환 신경망일 수 있다. 여기서, 시퀀스는 일련의 순서를 가진 데 이터(예를 들어, 하나 이상의 문장 등)를 지칭할 수 있으며, 시퀀스는 복수의 네트워크 입력(예를 들어, 복수의 단어 등)을 포함할 수 있다. 인공 신경망 시스템은 입력 시퀀스를 기초로 출력 시퀀스를 생성하는 다양한 종류의 작업을 수 행할 수 있다. 예를 들어, 인공 신경망 시스템은 입력된 텍스트에 대응하는 기계 번역문을 생성하는 기계 번역 생성 작업, 입력된 질문을 기초로 입력된 질문에 대한 응답을 생성하는 응답 생성 작업, 입력된 텍스트를기초로 입력된 텍스트와 동일한 의미를 가지는 새로운 텍스트를 생성하는 의역 생성 작업(paraphrasing) 등을 수행할 수 있다. 인공 신경망 시스템은 사용 목적에 따라 다양한 학습 데이터에 의해 학습될 수 있다. 예를 들어, 기계 번 역 생성 작업을 위해 학습되는 경우, 복수의 텍스트 및 번역된 텍스트 데이터 쌍, 응답 생성 작업을 위해 학습 되는 경우, 복수의 질문 및 응답 데이터 쌍, 의역 생성 작업을 위해 학습되는 경우, 복수의 텍스트 및 의역 텍 스트 쌍 등에 의해 학습될 수 있다. 일 실시예에 따르면, 인공 신경망 시스템은 세분성 자각 어텐션 기반의 신경망일 수 있다. 세분성 자각 어텐션 기반의 신경망은 입력 시퀀스에 포함된 복수의 네트워크 입력의 연속적인 세분성 스코어를 추정할 수 있 으며, 추정된 세분성을 기초로 복수의 네트워크 입력 사이의 어텐션 스코어를 조정함으로써, 보다 정확한 출력 시퀀스를 생성할 수 있다. 도 2는 본 개시의 일 실시예에 따른 정보 처리 시스템이 복수의 사용자 단말(210_1, 210_2, 210_3)과 통신 가능하도록 연결된 구성을 나타내는 개요도이다. 정보 처리 시스템은 네트워크를 통해 복수의 사용 자 단말(210_1, 210_2, 210_3)에 입력 시퀀스를 기초로 출력 시퀀스를 생성하는 서비스를 제공할 수 있는 시스 템을 포함할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 텍스트 생성 서비스(기계 번역 생성 서비 스, 챗봇 서비스, 응답 생성 서비스, 의역 생성 서비스 등)과 관련된 컴퓨터 실행 가능한 프로그램(예를 들어, 다운로드 가능한 애플리케이션) 및 데이터를 저장, 제공 및 실행할 수 있는 하나 이상의 서버 장치 및/또는 데 이터베이스, 또는 클라우드 컴퓨팅 서비스 기반의 하나 이상의 분산 컴퓨팅 장치 및/또는 분산 데이터베이스를 포함할 수 있다. 정보 처리 시스템에 의해 제공되는 텍스트 생성 서비스는, 복수의 사용자 단말(210_1, 210_2, 210_3)의 각각에 설치된 텍스트 생성 애플리케이션(번역 애플리케이션, 챗봇 애플리케이션 등, 웹 브라 우저 등)을 통해 사용자에게 제공될 수 있다. 복수의 사용자 단말(210_1, 210_2, 210_3)은 네트워크를 통해 정보 처리 시스템과 통신할 수 있다. 네트워크는, 복수의 사용자 단말과 정보 처리 시스템 사이의 통신이 가능하도록 구성될 수 있다. 네트워크는 설치 환경에 따라, 예를 들어, 이더넷(Ethernet), 유선 홈 네트워크(Power Line Communication), 전화선 통신 장치 및 RS-serial 통신 등의 유선 네트워크, 이동통신망, WLAN(Wireless LAN), Wi-Fi, Bluetooth 및 ZigBee 등과 같은 무선 네트워크 또는 그 조합으로 구성될 수 있다. 통신 방 식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망, 위성망 등)을 활용하는 통신 방식뿐만 아니라 사용자 단말(210_1, 210_2, 210_3) 사이의 근거 리 무선 통신 역시 포함될 수 있다. 예를 들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus area network), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네트워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포함하는 네트워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으 나, 이에 제한되지 않는다. 도 2에서 휴대폰 단말(210_1), 태블릿 단말(210_2) 및 PC 단말 (210_3)가 사용자 단말의 예로서 도시되었으나, 이에 한정되지 않으며, 사용자 단말(210_1, 210_2, 210_3)은 유선 및/또는 무선 통신이 가능하고 텍스트 생성 애플리케이션이 설치되어 실행될 수 있는 임의의 컴퓨팅 장치일 수 있다. 예를 들어, 사용자 단말은, 스마트폰, 휴대폰, 내비게이션, 컴퓨터, 노트북, 디지털방송용 단말, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC, 게임 콘솔(game console), 웨어러블 디바이스(wearable device), IoT(internet of things) 디바이스, VR(virtual reality) 디바이스, AR(augmented reality) 디바이스 등을 포함할 수 있다. 또한, 도 2에는 3개의 사용자 단말(210_1, 210_2, 210_3)이 네트워크를 통해 정보 처리 시스템과 통신하는 것으로 도시되어 있으나, 이에 한정되지 않으며, 상이한 수의 사용자 단말(210_1, 210_2, 210_3)이 네트워크를 정보 처리 시스템과 통신하도록 구성될 수도 있다. 정보 처리 시스템은 텍스트 생성 애플리케이션이 동작하는 사용자 단말(210_1, 210_2, 210_3)로부터 입력 텍스트가 포함된 텍스트 생성 요청을 수신할 수 있다. 입력 텍스트가 수신되는 경우, 정보 처리 시스템은 입력된 텍스트에 기초하여 출력 텍스트를 생성할 수 있다. 그 후, 정보 처리 시스템은 생성된 출력 텍스 트를 사용자 단말(210_1, 210_2, 210_3)로 제공할 수 있다. 도 2에는 사용자 단말(210_1, 210_2, 210_3)이 정 보 처리 시스템으로부터 입력 텍스트에 기초한 출력 텍스트를 수신하는 것으로 도시되었으나, 이에 한정되 지 않으며, 사용자 단말(210_1, 210_2, 210_3)이 입력 텍스트를 수신하고, 입력 텍스트에 기초한 출력 텍스트를직접 생성하도록 구성될 수 있다. 도 3은 본 개시의 일 실시예에 따른 사용자 단말 및 정보 처리 시스템의 내부 구성을 나타내는 블록 도이다. 사용자 단말은 텍스트 생성 애플리케이션, 웹 브라우저 등이 실행 가능하고 유/무선 통신이 가능 한 임의의 컴퓨팅 장치를 지칭할 수 있으며, 예를 들어, 도 2의 휴대폰 단말(210_1), 태블릿 단말(210_2), PC 단말(210_3) 등을 포함할 수 있다. 도시된 바와 같이, 사용자 단말은 메모리, 프로세서, 통신 모듈 및 입출력 인터페이스를 포함할 수 있다. 이와 유사하게, 정보 처리 시스템은 메모리 , 프로세서, 통신 모듈 및 입출력 인터페이스를 포함할 수 있다. 도 3에 도시된 바와 같 이, 사용자 단말 및 정보 처리 시스템은 각각의 통신 모듈(316, 336)을 이용하여 네트워크를 통 해 정보 및/또는 데이터를 통신할 수 있도록 구성될 수 있다. 또한, 입출력 장치는 입출력 인터페이스 를 통해 사용자 단말에 정보 및/또는 데이터를 입력하거나 사용자 단말로부터 생성된 정보 및/ 또는 데이터를 출력하도록 구성될 수 있다. 메모리(312, 332)는 비-일시적인 임의의 컴퓨터 판독 가능한 기록매체를 포함할 수 있다. 일 실시예에 따르면, 메모리(312, 332)는 RAM(random access memory), ROM(read only memory), 디스크 드라이브, SSD(solid state drive), 플래시 메모리(flash memory) 등과 같은 비소멸성 대용량 저장 장치(permanent mass storage device) 를 포함할 수 있다. 다른 예로서, ROM, SSD, 플래시 메모리, 디스크 드라이브 등과 같은 비소멸성 대용량 저장 장치는 메모리와는 구분되는 별도의 영구 저장 장치로서 사용자 단말 또는 정보 처리 시스템에 포함 될 수 있다. 또한, 메모리(312, 332)에는 운영체제와 적어도 하나의 프로그램 코드(예를 들어, 사용자 단말 에 설치되어 구동되는 텍스트 생성 애플리케이션 등을 위한 코드)가 저장될 수 있다. 예를 들어, 메모리 (312, 332)는 세분성 자각 어텐션 기반의 시퀀스 변환 신경망을 구현하게 하는 명령을 저장할 수 있다. 이러한 소프트웨어 구성요소들은 메모리(312, 332)와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독가능한 기록매체는 이러한 사용자 단말 및 정보 처리 시스템 에 직접 연결가능한 기록 매체를 포함할 수 있는데, 예를 들어, 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 예로서, 소 프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신 모듈을 통해 메모리(312, 332)에 로딩될 수도 있다. 예를 들어, 적어도 하나의 프로그램은 개발자들 또는 애플리케이션의 설치 파일을 배포하는 파일 배포 시스템이 네트워크를 통해 제공하는 파일들에 의해 설치되는 컴퓨터 프로그램(예: 텍스트 생성 서비 스를 제공하는 애플리케이션)에 기반하여 메모리(312, 332)에 로딩될 수 있다. 프로세서(314, 334)는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하 도록 구성될 수 있다. 명령은 메모리(312, 332) 또는 통신 모듈(316, 336)에 의해 프로세서(314, 334)로 제공 될 수 있다. 예를 들어, 프로세서(314, 334)는 메모리(312, 332)와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행하도록 구성될 수 있다. 통신 모듈(316, 336)은 네트워크를 통해 사용자 단말과 정보 처리 시스템이 서로 통신하기 위한 구성 또는 기능을 제공할 수 있으며, 사용자 단말 및/또는 정보 처리 시스템이 다른 사용자 단말 또 는 다른 시스템(일례로 별도의 클라우드 시스템 등)과 통신하기 위한 구성 또는 기능을 제공할 수 있다. 일례 로, 사용자 단말의 프로세서가 메모리 등과 같은 기록 장치에 저장된 프로그램 코드에 따라 생 성한 요청(예를 들어, 텍스트 생성/변환 요청)은 통신 모듈의 제어에 따라 네트워크를 통해 정보 처 리 시스템으로 전달될 수 있다. 역으로, 정보 처리 시스템의 프로세서의 제어에 따라 제공되는 제어 신호나 명령이 통신 모듈과 네트워크를 거쳐 사용자 단말의 통신 모듈을 통해 사용자 단말에 수신될 수 있다. 예를 들어, 사용자 단말은 정보 처리 시스템으로부터 통신 모듈 을 통해 입력 텍스트에 기초한 출력 테스트를 수신할 수 있다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 일 예로서, 입력 장치는 이미지 센서를 포함한 카메라, 키보드, 마이크로폰, 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피 커, 햅틱 피드백 디바이스(haptic feedback device) 등과 같은 장치를 포함할 수 있다. 다른 예로, 입출력 인 터페이스는 터치스크린 등과 같이 입력과 출력을 수행하기 위한 구성 또는 기능이 하나로 통합된 장치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 사용자 단말의 프로세서가 메모리에 로딩된 컴 퓨터 프로그램의 명령을 처리함에 있어서 정보 처리 시스템이나 다른 사용자 단말이 제공하는 정보 및/또는 데이터를 이용하여 구성되는 서비스 화면이 입출력 인터페이스를 통해 디스플레이에 표시될 수 있 다. 도 3에서는 입출력 장치가 사용자 단말에 포함되지 않도록 도시되어 있으나, 이에 한정되지 않으며, 사용자 단말과 하나의 장치로 구성될 수 있다. 또한, 정보 처리 시스템의 입출력 인터페이스 는 정보 처리 시스템과 연결되거나 정보 처리 시스템이 포함할 수 있는 입력 또는 출력을 위한 장치(미도시)와의 인터페이스를 위한 수단일 수 있다. 도 3에서는 입출력 인터페이스(318, 338)가 프로세서 (314, 334)와 별도로 구성된 요소로서 도시되었으나, 이에 한정되지 않으며, 입출력 인터페이스(318, 338)가 프 로세서(314, 334)에 포함되도록 구성될 수 있다. 사용자 단말 및 정보 처리 시스템은 도 3의 구성요소들보다 더 많은 구성요소들을 포함할 수 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 일 실시예에 따르면, 사용자 단말 은 상술된 입출력 장치 중 적어도 일부를 포함하도록 구현될 수 있다. 또한, 사용자 단말은 트 랜시버(transceiver), GPS(Global Positioning system) 모듈, 카메라, 각종 센서, 데이터베이스 등과 같은 다 른 구성요소들을 더 포함할 수 있다. 예를 들어, 사용자 단말이 스마트폰인 경우, 일반적으로 스마트폰이 포함하고 있는 구성요소를 포함할 수 있으며, 예를 들어, 가속도 센서, 자이로 센서, 카메라 모듈, 각종 물리적 인 버튼, 터치패널을 이용한 버튼, 입출력 포트, 진동을 위한 진동기 등의 다양한 구성요소들이 사용자 단말 에 더 포함되도록 구현될 수 있다. 일 실시예에 따르면, 사용자 단말의 프로세서는 텍스트 생성 서비스를 제공하는 텍스트 생성 애플리 케이션 또는 웹 브라우저 애플리케이션을 동작하도록 구성될 수 있다. 이 때, 해당 애플리케이션과 연관된 프 로그램 코드가 사용자 단말의 메모리에 로딩될 수 있다. 애플리케이션이 동작되는 동안에, 사용자 단말의 프로세서는 입출력 장치로부터 제공된 정보 및/또는 데이터를 입출력 인터페이스를 통해 수신하거나 통신 모듈을 통해 정보 처리 시스템으로부터 정보 및/또는 데이터를 수신할 수 있으 며, 수신된 정보 및/또는 데이터를 처리하여 메모리에 저장할 수 있다. 또한, 이러한 정보 및/또는 데이 터는 통신 모듈을 통해 정보 처리 시스템에 제공할 수 있다. 텍스트 생성 애플리케이션이 동작되는 동안에, 프로세서는 입출력 인터페이스와 연결된 터치 스크린, 키보드 등의 입력 장치를 통해 입력되거나 선택된 텍스트, 이미지 등을 수신할 수 있으며, 수신된 텍스트 및/또는 이미지를 메모리에 저장하거나 통신 모듈 및 네트워크를 통해 정보 처리 시스템에 제공할 수 있다. 예를 들어, 프로세서는 터치 스크린, 키보드 등의 입력 장치를 통하여 텍스트 입력, 텍 스트 생성/변환 요청 등에 대한 정보 등을 수신할 수 있다. 이에 따라 수신된 요청 및/또는 정보는 통신 모듈 및 네트워크를 통해 정보 처리 시스템에 제공될 수 있다. 사용자 단말의 프로세서는 입출력 장치, 다른 사용자 단말, 정보 처리 시스템 및/또는 복 수의 외부 시스템으로부터 수신된 정보 및/또는 데이터를 관리, 처리 및/또는 저장하도록 구성될 수 있다. 프 로세서에 의해 처리된 정보 및/또는 데이터는 통신 모듈 및 네트워크를 통해 정보 처리 시스템 에 제공될 수 있다. 사용자 단말의 프로세서는 입출력 인터페이스를 통해 입출력 장치 로 정보 및/또는 데이터를 전송하여 출력할 수 있다. 예를 들면, 프로세서는 수신한 정보 및/또는 데이터를 사용자 단말의 화면에 디스플레이하거나 스피커를 통해 출력할 수 있다. 정보 처리 시스템의 프로세서는 복수의 사용자 단말 및/또는 복수의 외부 시스템으로부터 수신 된 정보 및/또는 데이터를 관리, 처리 및/또는 저장하도록 구성될 수 있다. 프로세서에 의해 처리된 정보 및/또는 데이터는 통신 모듈 및 네트워크를 통해 사용자 단말에 제공할 수 있다. 도 3에서는 정보 처리 시스템이 단일 시스템으로 도시되었으나, 이에 한정되지 않으며, 텍스트 생성 서비스와 연관된 다양한 서비스를 제공하기 위한 복수의 시스템/서버로 구성될 수 있다. 도 4는 본 개시의 일 실시예에 따른 세분성 자각 어텐션 기반의 시퀀스 변환 신경망이 입력 시퀀스를 출력 시퀀스로 변환하는 예시를 나타내는 도면이다. 시퀀스 변환 신경망은 입력 시퀀스(410; 예를 들어, 입력 텍스트)를 기초로 출력 시퀀스(420; 예를 들어, 변역된 텍스트)를 생성할 수 있다. 여기서, 입력 시퀀스는 복수의 네트워크 입력(예를 들어, 복수의 단어)을 포함할 수 있으며, 출력 시퀀스는 복수의 네트워크 출력(예를 들어, 복수의 단어)을 포함할 수 있다. 시퀀스 변환 신경망은 인코더 신경망 및 디코더 신경망을 포함할 수 있다. 여기서, 인코더 신 경망 및/또는 디코더 신경망은 세분성 자각 셀프 어텐션(granularity aware self-attention) 기반 네트워크일 수 있다. 즉, 인코더 신경망 및/또는 디코더 신경망은 세분성 자각 셀프-어텐션 레이어 (446, 464, 466)를 포함할 수 있다. 일 실시예에 따르면, 인코더 신경망은 입력 시퀀스를 기초로, 복수의 네트워크 입력 각각에 대한 인코딩된 표현(encoded representation)을 생성할 수 있으며, 디코더 신경망 은 인코더 신경망이 생성한 복수의 네트워크 입력 각각에 대한 인코딩된 표현을 이용하여 출력 시퀀스를 생성할 수 있다. 일 실시예에 따르면, 인코더 신경망은 입력 임베딩 레이어 및 N개의 인코더 서브 네트워크(즉, 인코더 서브 네트워크의 시퀀스)를 포함할 수 있다. 입력 임베딩 레이어는 입력 시퀀스에 포함된 복 수의 네트워크 입력을 임베딩 공간 내의 벡터로 맵핑하여 복수의 임베딩 표현(embedding representation)을 생 성할 수 있다. 그 후, 복수의 임베딩 표현은 각 네트워크 입력의 입력 시퀀스 내의 위치 정보를 나타내는 위치 임베딩(positional embedding)과 결합(예를 들어, 합 또는 평균)되어, 각 네트워크 입력에 대한 결합된 임 베딩 표현이 생성될 수 있다. 즉, 복수의 임베딩된 표현이 복수의 네트워크 입력의 대응하는 위치 임베딩과 결 합되어 복수의 결합된 임베딩된 표현이 생성될 수 있다. 이렇게 생성된 결합된 임베딩 표현은 N개의 인코더 서브 네트워크 중 첫 번째 인코더 서브 네트워크의 입 력(즉, 복수의 인코더 서브 네트워크 입력)으로 제공될 수 있다. 또한, N개의 인코더 서브 네트워크 중 첫 번째 인코더 서브 네트워크 이외의 각 인코더 서브 네트워크에서 복수의 인코더 서브 네트워크 입력은 선행 하는 인코더 서브 네트워크의 복수의 인코더 서브 네트워크 출력일 수 있다. 즉, L-1번째 인코더 서브 네트워 크의 인코더 서브 네트워크 출력은 L번째 인코더 서브 네트워크의 인코더 서브 네트워크 입력으로 제공될 수 있 다. N개의 인코더 서브 네트워크 중 마지막 인코더 서브 네트워크의 출력은 인코더 신경망의 출력일 수 있다. 즉, 각각의 네트워크 입력의 개별 인코딩된 표현은, N개의 인코더 서브 네트워크 중 마지막 인 코더 서브 네트워크에 의해 생성된 복수의 인코더 서브 네트워크 출력일 수 있다. 예를 들어, N은 3일 수 있다. 각 인코더 서브 네트워크는 인코더 세분성 자각 셀프-어텐션 레이어와 위치별 피드 포워드(position- wise Feed Forward) 레이어를 포함할 수 있다. 인코더 세분성 자각 셀프-어텐션 레이어의 구성 및 동작은 도 5를 참조하여 상세히 후술된다. 위치별 피드 포워드 레이어는 입력 시퀀스의 각 위치에서 개별적으로 동작하도록 구성될 수 있다. 구체적으로, 각각의 입력 위치에 대해, 피드 포워드 레이어는 입 력 위치에서 입력을 수신하여, 그 입력 위치에서 입력에 변환 시퀀스를 적용하여 입력 위치에 대한 출력을 생성 하도록 구성될 수 있다. 일 실시예에 따르면, 각 인코더 서브 네트워크는 인코더 세분성 자각 셀프-어텐션 레이어의 출력을 인코더 세분성 자각 셀프-어텐션 레이어의 입력과 결합(예를 들어, 합)하고, 레이어 정규화를 적용할 수 있다(도 4에서 \"Add & Norm\" 레이어로 도시됨). 또한, 각 인코더 서브 네트워크는 위치별 피드 포워드 레 이어의 출력을 위치별 피드 포워드 레이어의 입력과 결합(예를 들어, 합)하고, 레이어 정규화를 적용 할 수 있으며(도 4에서 \"Add & Norm\" 레이어로 도시됨), 정규화된 결과는 각 인코더 서브 네트워크의 출력 이 될 수 있다. 일 실시예에 따르면, 디코더 신경망은 출력 임베딩 레이어, N개의 디코더 서브 네트워크, 선형 레이어 및 소프트맥스 레이어를 포함할 수 있다. 예를 들어, N은 3일 수 있다. 일 실시예에서, 디 코더 신경망은 인코더 신경망에 의해 생성된 인코딩된 표현을 기초로 자동-회귀 방식으로 출력 시퀀 스를 생성할 수 있다. 출력 임베딩 레이어는 각 생성 시간 스탭에서, 입력 임베딩 레이어와 동 일한 방식으로 결합된 임베딩 표현을 생성할 수 있다. 일 실시예에 따르면, 각 디코더 서브 네트워크는 2개의 상이한 어텐션 서브 레이어(464, 466)를 포함할 수 있다. 예를 들어, 각 디코더 서브 네트워크는 마스킹된 디코더 세분성 자각 셀프-어텐션 레이어와 디코더 세분성 자각 셀프-어텐션 레이어를 포함할 수 있다. 마스킹된 디코더 세분성 자각 셀프-어텐션 레 이어는 세분성 자각 셀프-어텐션 레이어에서 마스킹 작업(또는 마스킹 레이어)이 추가된 것일 수 있다. 선형 레이어는 각 생성 시간 스탭에서, 마지막 디코더 서브 네트워크의 출력을 소프트맥스 레이어에 의한 처리를 위한 적절한 공간으로 투영하기 위해, 마지막 디코더 서브 네트워크의 출력에 선형 변환을 적용하 도록 구성될 수 있다. 또한, 소프트맥스 레이어는 선형 레이어의 출력에 소프트맥스 함수를 적용하 여, 해당 생성 시간 스탭에서 가능한 출력에 대한 확률 분포를 생성할 수 있다. 그런 다음, 디코더 신경망 은 확률 분포를 이용하여, 가능한 네트워크 출력으로부터 네트워크 출력을 선택할 수 있다. 상술한 과정 에 의해 시퀀스 변환 신경망은 입력 시퀀스로부터 출력 시퀀스를 생성할 수 있다. 도 5는 본 개시의 일 실시예에 따른 세분성 자각 셀프-어텐션 레이어의 구성의 예시를 나타내는 도면이다. 정보 처리 시스템(또는 사용자 단말)은 세분성 자각 셀프-어텐션 레이어를 이용하여, 복수의 입력 토큰의 세분성을 추정할 수 있으며, 추정된 세분성을 기초로 복수의 입력 토큰 사이의 어텐션 스코어의 가중치를 조정함으로써, 보다 정확한 결과를 출력할 수 있다. 예를 들어, 세분성 자각 셀프-어텐션 레이어는 도 4의 인 코더 세분성 자각 셀프-어텐션 레이어 및 디코더 세분성 자각 셀프-어텐션 레이어의 상세 구조일 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 세분성 자각 셀프-어텐션 레이어의 입력으로 복수의 입력 토큰 (예, 복수의 인코더 서브 네트워크 입력 / 은닉 상태 )을 수신할 수 있다. 그런 다음, 학습된 쿼리 선형 변환, 학습된 키 선형 변환, 학습된 값 선형 변환을 복수의 입력 토큰 각각에 적용하여 쿼리 행렬, 키 행렬, 값 행렬을 생성할 수 있다. 예를 들어, 복수의 입력 토큰으로부터 쿼리 행렬, 키 행렬, 값 행렬을 생성하는 과정은 아래와 같은 수학식 1로 표현될 수 있다. 수학식 1"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, 는 각각 쿼리 행렬, 키 행렬, 값 행렬을 나타내고, 는 학습된 파라 미터이며, 은 레이어의 수(예를 들어, N=3)를 나타낼 수 있다. 또한, 정보 처리 시스템은 복수의 입력 토큰 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬 을 생성할 수 있다. 여기서, 는 의 세분성 레벨을 나타내는 세분성 스코어이며, 0과 1 사이의 연속적인 값을 가질 수 있다. 세분성 스코어가 1에 가까울수록, 낮은 세분성 레벨을 가짐을 나타내며, 이는 해당 토큰이 세부적인 단어(detailed word)임을 나타낼 수 있다. 또한, 세분성 스코어 가 0에 가까울수록, 높은 세분성 레벨을 가짐을 나타내며, 이는 해당 토큰이 형식적인 단어(template word)임을 나타낼 수 있다. 일 실시예에 따르면, 세분성 스코어 행렬은 입력 토큰에 학습된 선형 변환을 수행하고, 시그모이드 함수 를 적용함으로써 생성될 수 있다. 예를 들어, 입력 토큰으로부터 세분성 스코어 행렬을 생성하는 과정은 아래와 같은 수학식 2로 표현될 수 있다. 수학식 2"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, 는 학습된 파라미터이며, 은 번째 레이어의 은닉 상태(즉, 번째 인코더 서 브 네트워크의 복수의 인코더 서브 네트워크 출력)를 나타낼 수 있다. 추가적으로, 정보 처리 시스템은 세분성 스코어 행렬에 제1 마스크를 적용하여, 각 입력 토큰 사이의 세분 성 레벨의 상관관계를 나타내는 세분성 공명(granularity resonance) 행렬을 생성할 수 있다. 예를 들어, 세분 성 스코어 행렬(z)로부터 세분성 공명 행렬(C)을 생성하는 과정은 아래와 같은 수학식 3으로 표현될 수 있다. 수학식 3"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, 는 각각 토큰 , 토큰 의 세분성 스코어를 나타낼 수 있으며, 는 토큰 와 토큰 사이의 세분성 공명 스코어를 나타낼 수 있다. 세분성이 유사한 토큰들은 서로 연관성이 높은 경향이 있다. 이러한점을 반영하여, 토큰 , 토큰 가 유사한 세분성 스코어를 가질수록 는 높은 세분성 공명 스코어 값을 가지 도록 세분성 공명 행렬을 생성할 수 있다. 추가적으로, 정보 처리 시스템은 세분성 스코어 행렬에 제2 마스크를 적용하여, 각 입력 토큰 사이의 어텐 션 범위를 나타내는 세분성 범위(granularity scope) 행렬(S)을 생성할 수 있다. 예를 들어, 세분성 스코어 행 렬(z)로부터 세분성 범위 행렬을 생성하는 과정은 아래와 같은 수학식 4로 표현될 수 있다. 수학식 4"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서, 은 토큰의 개수를 나타내고, 는 세부적인 단어(detailed word)가 어텐션을 가질 수 있는 최대 거 리를 나타낼 수 있으며, 값은 사용자에 의해 설정될 수 있는 하이퍼파라미터(hyperparameter)이다. 예를 들 어, 는 2일 수 있다. 는 토큰 의 토큰 에 대한 세분성 범위 스코어를 나타낼 수 있다. 세분성 레벨이 낮은 토큰(큰 값을 가지는 세부적인 단어)는 주변 토큰에 연관성을 가지는 경향이 있는 반면, 세분성 레벨이 높은 토큰(작은 값을 가지는 형식적인 단어)은 거리에 관계없이 다른 토큰에 균등하게 연관성을 가지는 경향 이 있다. 즉, 세분성 레벨이 낮은 토큰은 세분성 레벨이 높은 토큰에 비해 어텐션 범위가 상대적으로 좁을 수 있다. 이를 반영하여, 토큰 의 세분성 레벨이 낮고(세분성 스코어 값이 1에 가깝고), 토큰 와 토큰 의 거리 가 멀수록, 토큰 의 토큰 에 대한 세분성 범위 스코어 는 작은 값을 가지도록 세분성 범위 행렬을 생성할 수 있다. 정보 처리 시스템은 세분성 스코어 행렬, 쿼리 행렬, 키 행렬 및 값 행렬에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 쿼리 행렬(Q)과 키 행렬(K)에 기초하여 어텐션 스코어 행렬(A)을 생성할 수 있다. 예를 들어, 쿼리 행렬(Q) 및 키 행렬(K)의 전치 행렬의 곱 을 수행하고, 크기 변환을 수행한 다음, 소프트맥스 함수를 적용하여 어텐션 스코어 행렬을 생 성할 수 있다. 이는 아래와 같은 수학식 5로 표현될 수 있다. 수학식 5"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "여기서, 은 어텐션 스코어 행렬을 나타내고, 는 키 행렬의 차원을 나타낼 수 있다. 그런 다음, 정보 처리 시스템은 세분성 공명 행렬(C) 및 세분성 범위 행렬(S)을 어텐션 스코어 행렬(A)에 적용 하여 세분성-자각 어텐션 스코어 행렬을 생성할 수 있다. 예를 들어, 세분성-자각 어텐션 스코어 행렬은 세분 성 공명 행렬, 세분성 범위 행렬, 어텐션 스코어 행렬의 원소 별 곱(element-wise multiplication)을 수 행함으로써 생성될 수 있다. 이는 아래와 같이 수학식 6으로 표현될 수 있다.수학식 6"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "여기서, 는 세분성-자각 어텐션 스코어 행렬을 나타내고, 는 원소 별 곱을 나타낼 수 있다. 세분성-자각 어텐션 스코어는 세분성 공명 스코어 및 세분성 범위 스코어를 이용하여 어텐션 스코어를 조정한 스코어, 즉, 세분성을 반영한 어텐션 스코어일 수 있다. 세분성 공명 스코어는 유사한 세분성 스코어를 가지는 토큰들 사이 에 어텐션이 존재하도록 어텐션 스코어를 조정할 수 있으며, 세분성 범위 스코어는 낮은 세분성 레벨을 가지는 입력 토큰이 상대적으로 좁은 어텐션 범위를 가지도록 어텐션 스코어를 조정할 수 있다. 정보 처리 시스템은 생성된 세분성-자각 어텐션 스코어 행렬과 값 행렬(V)에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성할 수 있다. 예를 들어, 세분성-자각 어텐션 스코어 행렬의 전치 행렬과 값 행렬 (V)의 곱을 수행함으로써, 세분성 자각 셀프-어텐션 레이어의 출력이 생성될 수 있다. 이는 아래와 같이 수학식 7로 표현될 수 있다. 수학식 7"}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 8, "content": "도 4의 마스킹된 디코더 세분성 자각 셀프-어텐션 레이어는 세분성 자각 셀프-어텐션 레이어의 스케 일 레이어와 소프트맥스 레이어 사이에 마스크 레이어가 추가될 수 있다. 또한, 도 4의 디코더 세분성 자각 셀프-어텐션 레이어에서는 세분성 스코어 행렬을 생성하기 위한 선형 레 이어, 키 선형 레이어 및 값 선형 레이어의 입력으로 인코더 신경망에 의해 생성된 인코딩된 표 현을 수신할 수 있으며, 쿼리 선형 레이어의 입력으로 이전 레이어(마스킹된 디코더 세분성 자각 셀프-어 텐션 레이어 및 Add & Norm 레이어)의 은닉 상태를 수신할 수 있다. 도 6은 본 개시의 일 실시예에 따른 세분성 자각 셀프-어텐션 기반의 시퀀스 변환 신경망의 성능을 평가한 예시 를 나타내는 도면이다. 제1 그래프는 세분성 자각 셀프-어텐션 기반의 시퀀스 변환 신경망의 인코더 서브 네트워크의 수에 따른 성능 평가를 나타내고, 제2 그래프는 어텐션 헤드의 수에 따른 성능 평가를 나타낸 다. 평가 지표는 텍스트 생성 분야에 있어서, 널리 사용되는 지표인 BLEU, NIST, ROUGE-L 및 METEOR이 사용되 었다. 제1 그래프를 살펴보면, 인코더 서브 네트워크의 수가 증가할수록 모델의 성능은 증가하는 경향을 가지는 것을 확인할 수 있다. 즉, 인코더 서브 네트워크의 수와 모델의 성능은 양의 상관관계를 가지는 것을 확인할 수 있다. 반면, 제2 그래프를 살펴보면, 어텐션 헤드의 수는 모델의 성능에 미미한 영향을 주는 것을 확인할 수 있다. 이러한 점에 비추어 보았을 때, 세분성 자각 셀프 어텐션 기반의 네트워크에서 어텐션 헤드의 수를 감소시킬 수 있다는 것을 확인할 수 있다. 즉, 적은 수의 어텐션 헤드로도 좋은 성능을 얻을 수 있다. 아래 표 1은 Quora 데이터셋에 대한 다양한 모델에 따른 의역 생성 작업의 결과를 나타낸다. 표 1에서 확인할 수 있는 것과 같이, 본 발명에 따른 세분성 자각 어텐션 기반의 신경망(표에서 GA-Transformer)은 모든 측면에 서 최고의 성능을 보인다. 이는 보다 세분화된 세분성 수준을 모델링함으로써 본 발명에 따른 세분성 자각 어 텐션 기반의 신경망이 텍스트 생성을 위한 구문 안내(syntactic guidance)를 더 잘 활용할 수 있음을 의미한다. 표 1 모델 BLEU NIST ROUGE-L METEOR Transformer 21.04 51.58 21.88 23.42 TransformerCopy 22.44 60.71 22.24 23.18 DNPG 24.36 68.80 24.92 23.26 GA-Transformer27.78 90.37 35.23 32.79아래 표 2는 WMT19 (Zh-En) 데이터셋에 대한 다양한 모델에 따른 기계 번역 작업의 결과를 나타낸다. 표 2에서 확인할 수 있는 것과 같이, 본 발명에 따른 세분성 자각 어텐션 기반의 신경망(표에서 GA-Transformer)은 기계 번역 작업에서 종래의 다른 모델과 비교하여 최고의 성능을 보인다. 표 2 모델 BLEU NIST ROUGE-L METEOR Transformer 24.31 100.95 22.10 21.00 TransformerCopy 23.51 86.44 18.83 17.58 DNPG 23.82 79.70 17.84 15.96 GA-Transformer25.27 108.36 22.72 21.97 아래 표 3은 Reddit 디스커션 데이터셋에 대한 다양한 모델에 따른 응답 생성 작업의 결과를 나타낸다. 표 3에 서 확인할 수 있는 것과 같이, 본 발명에 따른 세분성 자각 어텐션 기반의 신경망(표에서 GA-Transformer)은 모 든 측정항목에서 가장 높은 점수를 받았다. 이러한 결과는 세분화된 세분성 모델링이 응답 생성 성능을 향상시 킬 수 있음을 시사한다. 표 3 모델 BLEU NIST ROUGE-L METEOR Transformer 7.71 9.61 4.01 3.10 TransformerCopy 8.25 10.14 4.32 3.26 DNPG 6.18 6.96 2.94 2.21 GA-Transformer8.87 11.15 4.41 3.36 도 7은 본 개시의 일 실시예에 따라 각 인코더 세분성 자각 셀프-어텐션 레이어에서 산출된 세분성 스코어(z)를 시각화하여 출력한 예시를 나타내는 도면이다. 제1 시각 출력은 제1 입력 시퀀스(what is the expected cut off of uspc 2016?) 내의 복수의 입력 토큰 각각에 대한 세분성 스코어를 나타낸다. 여기서, 토큰의 배경 색이 붉은색에 가까울수록 높은 세분성 레벨(형식적인 단어)임을 나타낼 수 있으며, 토큰의 배경 색이 푸른색에 가까울수록 낮은 세분성 레벨(세부적인 단어)임을 나타낼 수 있다. 제2 시각 출력 및 제3 시각 출력(73 0)도 유사하게 제2 입력 시퀀스 및 제3 입력 시퀀스 내의 복수의 입력 토큰 각각에 대한 세분성 스코어를 나타 낸다. 각 시각 출력에서 Layer 1은 첫번째 인코더 서브 네트워크의 세분성 자각 셀프-어텐션 레이어에 의해 추정된 입 력 토큰들의 세분성 스코어( )를 시각화한 것이고, Layer 2는 두번째 인코더 서브 네트워크의 세분성 자각 셀 프-어텐션 레이어에 의해 추정된 입력 토큰들의 세분성 스코어( )를 시각화한 것이고, Layer 3은 세번째 인코 더 서브 네트워크의 세분성 자각 셀프-어텐션 레이어에 의해 추정된 입력 토큰들의 세분성 스코어( )를 시각 화한 것을 나타낸다. 세가지 시각 출력(710, 720, 730)을 살펴보면, 여러 개의 세분성 자각 셀프-어텐션 레이 어를 거침으로써 보다 연속적인 세분성 값이 효과적으로 추정되어, 연속적인 언어 구조를 효과적으로 모델링할 수 있음을 확인할 수 있다. 사용자(예: 텍스트 생성 서비스의 관리자)는 이와 같이 세분성 스코어를 시각화한 결과를 확인함으로써, 세분성 자각 어텐션 기반의 시퀀스 변환 신경망이 세분성을 정확하게 추정하고 있는지 확인하여 신경망이 의도한 것과 같이 동작하고 있는지 여부, 모델의 성능을 개선시기 위한 구조 개선 방법 등을 고민할 수 있다. 도 8은 본 개시의 일 실시예에 따라 세분성 자각 셀프-어텐션 메커니즘이 적용되는 방법을 나타내는 흐름 도이다. 방법은 정보 처리 시스템의 적어도 하나의 프로세서 또는 사용자 단말의 적어도 하나의 프로세서 에 의해 수행될 수 있다. 일 실시예에 따르면, 방법은 프로세서가 세분성 자각 셀프-어텐션 레이어의 입 력으로 복수의 입력 토큰을 수신함으로써 개시될 수 있다(S810). 여기서, 복수의 입력 토큰은 인코더 세분성 자각 셀프-어텐션 레이어 및/또는 디코더 세분성 자각 셀프-어텐션 레이어의 입력(예: 복수의 인코더 서브 네트 워크 입력 또는 복수의 디코더 서브 네트워크 입력)일 수 있다.그 후, 프로세서는 복수의 입력 토큰 각각에 대한 세분성 스코어를 추정하여 세분성 스코어 행렬을 생성할 수 있다(S820). 여기서, 세분성 스코어는 각 입력 토큰의 세분성 레벨을 나타내고, 제1 값과 제2 값 사이의 연속 적인 값을 가질 수 있다. 예를 들어, 세분성 스코어가 제1 값에 가까울수록 낮은 세분성 레벨을 나타내고, 세 분성 스코어가 제2 값에 가까울수록 높은 세분성 레벨을 나타낼 수 있다. 일 실시예에서, 프로세서는 복수의 입력 토큰 각각에 대한 세분성 스코어를 시각화하여 출력할 수 있다. 예를 들어, 프로세서는 각 인코더 서브 네트워크 내의 인코더 세분성 자각 셀프-어텐션 레이어에 의해 추정되는 각 입력 토큰의 세분성 스코어를 레이어별로 시각화하여 출력할 수 있다. 대안적으로, 프로세서는 마지막 인코더 서브 네트워크 내의 인코더 세분성 자각 셀프-어텐션 레이어에 의해 계산되는 세분성 스코어를 시각화하여 출력 할 수 있다. 일 실시예에서, 프로세서는 세분성 스코어 행렬에 제1 마스크를 적용하여 각 입력 토큰 사이의 세분성 레벨 연 관성을 나타내는 세분성 공명 행렬을 생성할 수 있다. 여기서, 세분성 공명 행렬은 유사한 세분성 스코어를 가 지는 입력 토큰들 사이에 높은 세분성-자각 어텐션 스코어가 부여되도록 할 수 있다. 또한, 프로세서는 세분성 스코어 행렬에 제2 마스크를 적용하여 각 입력 토큰 사이의 어텐션 범위를 나타내는 세분성 범위 행렬을 생성할 수 있다. 여기서, 세분성 범위 행렬은 낮은 세분성 레벨을 가지는 입력 토큰이 높은 세분성 레벨을 가지는 입 력 토큰보다 좁은 어텐션 범위를 가지도록 할 수 있다. 즉, 높은 세분성 레벨을 가지는 입력 토큰이 낮은 세분 성 레벨을 가지는 입력 토큰보다 높은 어텐션 범위를 가질 수 있다. 그리고, 프로세서는 학습된 쿼리 선형 변환을 복수의 입력 토큰 각각에 적용하여 쿼리 행렬을 생성하고(S830), 학습된 키 선형 변환을 복수의 입력 토큰 각각에 적용하여 키 행렬을 생성하고(S840), 학습된 값 선형 변환을 복수의 입력 토큰 각각에 적용하여 값 행렬을 생성할 수 있다(S850). 최종적으로, 프로세서는 세분성 스코어 행렬, 쿼리 행렬, 키 행렬 및 값 행렬에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성할 수 있다 (S860). 구체적으로, 프로세서는 쿼리 행렬과 키 행렬에 기초하여 복수의 입력 토큰 사이의 어텐션 스코어를 포함하는 어텐션 스코어 행렬을 생성하고, 세분성 공명 행렬 및 세분성 범위 행렬을 어텐션 스코어 행렬에 적용 하여 세분성-자각 어텐션 스코어 행렬을 생성할 수 있다. 그리고, 프로세서는 세분성-자각 어텐션 스코어 및 값 행렬에 기초하여 세분성 자각 셀프-어텐션 레이어의 출력을 생성할 수 있다. 상술한 방법은 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록매체에 저장된 컴퓨터 프로그램으로 제공될 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하 는 것일수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록 수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워크 상에 분산 존재하는 것일 수 도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD 와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체 의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 본 개시의 방법, 동작 또는 기법들은 다양한 수단에 의해 구현될 수도 있다. 예를 들어, 이러한 기법들은 하드 웨어, 펌웨어, 소프트웨어, 또는 이들의 조합으로 구현될 수도 있다. 본원의 개시와 연계하여 설명된 다양한 예시적인 논리적 블록들, 모듈들, 회로들, 및 알고리즘 단계들은 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양자 의 조합들로 구현될 수도 있음을 통상의 기술자들은 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 대 체를 명확하게 설명하기 위해, 다양한 예시적인 구성요소들, 블록들, 모듈들, 회로들, 및 단계들이 그들의 기능 적 관점에서 일반적으로 위에서 설명되었다. 그러한 기능이 하드웨어로서 구현되는지 또는 소프트웨어로서 구 현되는 지의 여부는, 특정 애플리케이션 및 전체 시스템에 부과되는 설계 요구사항들에 따라 달라진다. 통상의 기술자들은 각각의 특정 애플리케이션을 위해 다양한 방식들로 설명된 기능을 구현할 수도 있으나, 그러한 구현 들은 본 개시의 범위로부터 벗어나게 하는 것으로 해석되어서는 안된다. 하드웨어 구현에서, 기법들을 수행하는 데 이용되는 프로세싱 유닛들은, 하나 이상의 ASIC들, DSP들, 디지털 신 호 프로세싱 디바이스들(digital signal processing devices; DSPD들), 프로그램가능 논리 디바이스들 (programmable logic devices; PLD들), 필드 프로그램가능 게이트 어레이들(field programmable gate arrays; FPGA들), 프로세서들, 제어기들, 마이크로제어기들, 마이크로프로세서들, 전자 디바이스들, 본 개시에 설명된 기능들을 수행하도록 설계된 다른 전자 유닛들, 컴퓨터, 또는 이들의 조합 내에서 구현될 수도 있다. 따라서, 본 개시와 연계하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, DSP, ASIC, FPGA나 다른 프로그램 가능 논리 디바이스, 이산 게이트나 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본원에 설명된 기능들을 수행하도록 설계된 것들의 임의의 조합으로 구현되거나 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수도 있지만, 대안으로, 프로세서는 임의의 종래의 프로세서, 제어기, 마이크로 제어기, 또는 상태 머신일 수도 있다. 프로세서는 또한, 컴퓨팅 디바이스들의 조합, 예를 들면, DSP와 마이크 로프로세서, 복수의 마이크로프로세서들, DSP 코어와 연계한 하나 이상의 마이크로프로세서들, 또는 임의의 다 른 구성의 조합으로서 구현될 수도 있다. 펌웨어 및/또는 소프트웨어 구현에 있어서, 기법들은 랜덤 액세스 메모리(random access memory; RAM), 판독 전 용 메모리(read-only memory; ROM), 비휘발성 RAM(non-volatile random access memory; NVRAM), PROM(programmable read-only memory), EPROM(erasable programmable read-only memory), EEPROM(electrically erasable PROM), 플래시 메모리, 컴팩트 디스크(compact disc; CD), 자기 또는 광학 데이 터 스토리지 디바이스 등과 같은 컴퓨터 판독가능 매체 상에 저장된 명령들로서 구현될 수도 있다. 명령들은 하나 이상의 프로세서들에 의해 실행 가능할 수도 있고, 프로세서(들)로 하여금 본 개시에 설명된 기능의 특정 양태들을 수행하게 할 수도 있다. 소프트웨어로 구현되는 경우, 상기 기법들은 하나 이상의 명령들 또는 코드로서 컴퓨터 판독 가능한 매체 상에 저장되거나 또는 컴퓨터 판독 가능한 매체를 통해 전송될 수도 있다. 컴퓨터 판독가능 매체들은 한 장소에서 다른 장소로 컴퓨터 프로그램의 전송을 용이하게 하는 임의의 매체를 포함하여 컴퓨터 저장 매체들 및 통신 매 체들 양자를 포함한다. 저장 매체들은 컴퓨터에 의해 액세스될 수 있는 임의의 이용 가능한 매체들일 수도 있 다. 비제한적인 예로서, 이러한 컴퓨터 판독가능 매체는 RAM, ROM, EEPROM, CD-ROM 또는 다른 광학 디스크 스 토리지, 자기 디스크 스토리지 또는 다른 자기 스토리지 디바이스들, 또는 소망의 프로그램 코드를 명령들 또는 데이터 구조들의 형태로 이송 또는 저장하기 위해 사용될 수 있으며 컴퓨터에 의해 액세스될 수 있는 임의의 다 른 매체를 포함할 수 있다. 또한, 임의의 접속이 컴퓨터 판독가능 매체로 적절히 칭해진다. 예를 들어, 소프트웨어가 동축 케이블, 광섬유 케이블, 연선, 디지털 가입자 회선 (DSL), 또는 적외선, 무선, 및 마이크로파와 같은 무선 기술들을 사용하여 웹사이트, 서버, 또는 다른 원격 소스로부터 전송되면, 동축 케 이블, 광섬유 케이블, 연선, 디지털 가입자 회선, 또는 적외선, 무선, 및 마이크로파와 같은 무선 기술들은 매 체의 정의 내에 포함된다. 본원에서 사용된 디스크(disk) 와 디스크(disc)는, CD, 레이저 디스크, 광 디스크, DVD(digital versatile disc), 플로피디스크, 및 블루레이 디스크를 포함하며, 여기서 디스크들(disks)은 보통 자기적으로 데이터를 재생하고, 반면 디스크들(discs) 은 레이저를 이용하여 광학적으로 데이터를 재생한다. 위의 조합들도 컴퓨터 판독가능 매체들의 범위 내에 포함되어야 한다. 소프트웨어 모듈은, RAM 메모리, 플래시 메모리, ROM 메모리, EPROM 메모리, EEPROM 메모리, 레지스터들, 하드 디스크, 이동식 디스크, CD-ROM, 또는 공지된 임의의 다른 형태의 저장 매체 내에 상주할 수도 있다. 예시적인 저장 매체는, 프로세가 저장 매체로부터 정보를 판독하거나 저장 매체에 정보를 기록할 수 있도록, 프로세서에 연결될 수 있다. 대안으로, 저장 매체는 프로세서에 통합될 수도 있다. 프로세서와 저장 매체는 ASIC 내에 존 재할 수도 있다. ASIC은 유저 단말 내에 존재할 수도 있다. 대안으로, 프로세서와 저장 매체는 유저 단말에서 개별 구성요소들로서 존재할 수도 있다. 이상 설명된 실시예들이 하나 이상의 독립형 컴퓨터 시스템에서 현재 개시된 주제의 양태들을 활용하는 것으로 기술되었으나, 본 개시는 이에 한정되지 않고, 네트워크나 분산 컴퓨팅 환경과 같은 임의의 컴퓨팅 환경과 연계 하여 구현될 수도 있다. 또 나아가, 본 개시에서 주제의 양상들은 복수의 프로세싱 칩들이나 장치들에서 구현 될 수도 있고, 스토리지는 복수의 장치들에 걸쳐 유사하게 영향을 받게 될 수도 있다. 이러한 장치들은 PC들, 네트워크 서버들, 및 휴대용 장치들을 포함할 수도 있다."}
{"patent_id": "10-2021-0134126", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "본 명세서에서는 본 개시가 일부 실시예들과 관련하여 설명되었지만, 본 개시의 발명이 속하는 기술분야의 통상 의 기술자가 이해할 수 있는 본 개시의 범위를 벗어나지 않는 범위에서 다양한 변형 및 변경이 이루어질 수 있 다. 또한, 그러한 변형 및 변경은 본 명세서에 첨부된 특허청구의 범위 내에 속하는 것으로 생각되어야 한다."}
{"patent_id": "10-2021-0134126", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 인공 신경망 시스템을 이용하여 입력 시퀀스를 기초로 출력 시퀀스를 생성 하는 예시를 나타내는 도면이다. 도 2는 본 개시의 일 실시예에 따른 정보 처리 시스템이 복수의 사용자 단말과 통신 가능하도록 연결된 구성을 나타내는 개요도이다. 도 3은 본 개시의 일 실시예에 따른 사용자 단말 및 정보 처리 시스템의 내부 구성을 나타내는 블록도이다. 도 4는 본 개시의 일 실시예에 따른 세분성 자각 어텐션 기반의 시퀀스 변환 신경망이 입력 시퀀스를 출력 시퀀 스로 변환하는 예시를 나타내는 도면이다. 도 5는 본 개시의 일 실시예에 따른 세분성 자각 셀프-어텐션 레이어의 구성의 예시를 나타내는 도면이다. 도 6은 본 개시의 일 실시예에 따른 세분성 자각 셀프-어텐션 기반의 시퀀스 변환 신경망의 성능을 평가한 예시 를 나타내는 도면이다. 도 7은 본 개시의 일 실시예에 따라 각 인코더 세분성 자각 셀프-어텐션 레이어에서 산출된 세분성 스코어를 시 각화하여 출력한 예시를 나타내는 도면이다. 도 8은 본 개시의 일 실시예에 따라 세분성 자각 셀프-어텐션 메커니즘이 적용되는 방법을 나타내는 흐름도이다."}
