{"patent_id": "10-2022-0189714", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0106715", "출원번호": "10-2022-0189714", "발명의 명칭": "인공지능 가속기의 캐시 메모리 구조 설계 방법 및 그를 위한 장치", "출원인": "연세대학교 산학협력단", "발명자": "정의영"}}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "캐시 메모리 구조 설계 장치에서, 가속기의 캐시 메모리의 구조를 설계하는 방법에 있어서,가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각타임 스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모리 접근 정보 추출 단계;상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정 단계; 및메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출하고, 상기캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계 단계를 포함하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 메모리 접근 패턴으로부터 상기 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여특징 매트릭스를 생성하는 특징 매트릭스 생성 단계를 추가로 포함하되,상기 캐시 구조 설계 단계는, 상기 어플리케이션에 대한 상기 특징 매트릭스를 상기 캐시 구조 설계 모델에 입력하여 상기 캐시 메모리 구조를 설계하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 특징 매트릭스 생성 단계는,상기 어플리케이션에 대해서 상기 프로세싱 엘리먼트 어레이에서 상기 캐시 메모리에 접근한 시점을 나타내는복수의 기준 타임스탬프에 대한 특징 정보를 추출하고, 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 특징 매트릭스 생성 단계는,상기 연속적인 복수의 타임스탬프에서 접근된 메모리 주소 중에서, 상기 기준 타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하고, 상기 기준 타임스탬프에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의 차이값에 대한 최소 차이 정보를 취합하여 상기 어플리케이션에 대한 제1 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 특징 매트릭스 생성 단계는,연속적인 복수의 타임스탬프 중에서 상기 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임 스탬프의 개수에 대한 제1 개수 정보를 추출하고, 모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리케이션에 대한 제2 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법.공개특허 10-2024-0106715-3-청구항 6 제3항에 있어서,상기 특징 매트릭스 생성 단계는,복수의 스트리밍 프로세서를 포함하는 적어도 하나의 프로세서 그룹 별 상기 메모리 주소의 지역성(locality)을기반으로 하는 특징 정보를 추출하여 제3 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 특징 매트릭스 생성 단계는,한번만 접근하고 버려지는 메모리 주소에 대한 접근 카운팅값, 상기 적어도 하나의 프로세서 그룹 간의 접근에대한 메모리 주소를 카운팅한 접근 카운팅값 및 상기 프로세서 그룹 내의 스트리밍 프로세서의 접근에 대한 메모리 주소를 카운팅한 접근 카운팅값 중 적어도 하나의 접근 카운팅값에 대한 특징 정보를 추출하고, 상기 특징정보를 취합하여 상기 어플리케이션에 대한 상기 제3 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 특징 매트릭스 생성 단계는,상기 프로세서 그룹 내에 접근한 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 동작 여부와 상기 프로세서 그룹 내에 접근한 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 빈도수에 대한 상기 접근 카운팅값에 대한 특징 정보를 추출하여 상기 제3 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제4항 내지 제6항에 있어서,상기 특징 매트릭스 생성 단계는,상기 제1 특징 매트릭스, 상기 제2 특징 매트릭스 및 제3 특징 매트릭스 중 어느 하나 또는 두 개 이상의 조합을 통해 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 방법."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "가속기의 캐시 메모리의 구조를 설계하기 위한 캐시 메모리 구조 설계 장치에 있어서, 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각타임 스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모리 접근 정보 추출부;상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정부; 및메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출하고, 상기캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계부를 포함하는 것을 특징으로 하는 캐시 메모리 구조 설계 장치."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 메모리 접근 패턴으로부터 상기 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여특징 매트릭스를 생성하는 특징 매트릭스 생성부를 추가로 포함하되,공개특허 10-2024-0106715-4-상기 캐시 구조 설계부는, 상기 어플리케이션에 대한 상기 특징 매트릭스를 상기 캐시 구조 설계 모델에 입력하여 상기 캐시 메모리 구조를 설계하는 것을 특징으로 하는 캐시 메모리 구조 설계 장치."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 특징 매트릭스 생성부는,상기 어플리케이션에 대해서 상기 프로세싱 엘리먼트 어레이에서 상기 캐시 메모리에 접근한 시점을 나타내는복수의 기준 타임스탬프에 대한 특징 정보를 추출하고, 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 것을 특징으로 하는 캐시 메모리 구조 설계 장치."}
{"patent_id": "10-2022-0189714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "메모리;가속기에서의 어플리케이션 실행을 제어하는 호스트 프로세서;상기 어플리케이션에 대한 연산 처리를 수행하는 프로세싱 엘리먼트 어레이(PE Array: Processing ElementArray) 및 상기 프로세싱 엘리먼트 어레이와 연동하는 캐시 메모리를 포함하는 가속기; 및상기 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 각 타임 스탬프마다 접근하는 캐시메모리의 메모리 주소를 추출하는 메모리 접근 정보 추출부; 상기 캐시 메모리에 시간의 흐름에 따라 접근하는상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정부; 및 메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출하고,상기 캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계부를 포함하는 캐시 메모리 구조설계 장치를 포함하는 것을 특징으로 하는 가속기 시스템."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공지능 가속기의 캐시 메모리 구조 설계 방법 및 그를 위한 장치를 개시한다. 본 발명의 실시예에 따른 캐시 메모리 구조 설계 장치에서, 가속기의 캐시 메모리의 구조를 설계하는 방법에 있 어서, 캐시 메모리 구조 설계 방법은, 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각 타임 스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모 리 접근 정보 추출 단계; 상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정 단계; 및 메모리 접근 패턴을 기반으 로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출하고, 상기 캐시 메모리 구조에 대한 캐 시 구조 설계 정보를 생성하는 캐시 구조 설계 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 가속기의 캐시 메모리 구조 설계 방법 및 그를 위한 장치에 관한 것이다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이 부분에 기술된 내용은 단순히 본 발명의 실시예에 대한 배경 정보를 제공할 뿐 종래기술을 구성하는 것은 아 니다. 최근에 각종 연산을 신속하게 처리하기 위한 프로세싱 엘리먼트(PE: Processing Element) 어레이와 캐시 메모리 가 장착된 가속기가 다수 개발되고 있다. 프로세싱 엘리먼트 어레이는 병렬 연산에 적합한 프로세싱 엘리먼트 (코어 프로세서)의 배열로서, 연산에 필요한 데이터를 캐시 메모리의 특정 저장 공간에 접근하는 방식으로 획득 할 수 있다. 따라서, 최적화된 저전력의 고성능 가속기의 처리를 위해서는 특정 연산에 맞추어 미리 적절하게 캐시 메모리의 구조를 설계할 필요가 있다. 특히 인공지능 가속기와 같이 복잡도가 높은 경우 개발 기간 단축을 위해 각 단계 (step)의 런타임을 줄이거나 전체 플로우(flow)의 반복 횟수를 줄이는 것이 중요하다. 하지만, 일반적으로 캐시 메모리를 설계하는 방법은 설계자가 경험 또는 직관에 따라 가속기의 캐시 구조를 설 계하기 때문에 시간과 비용이 많이 소요되고, 최적의 캐시 메모리 구조를 설계하기 어렵다는 문제가 있다. 따라서, 인공지능을 이용하여 자동으로 캐시 메모리의 구조를 설계하는 방법이 필요하다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 인공지능 가속기에서 처리하는 소정의 어플리케이션에 따른 메모리 접근 패턴을 추출하고, 추출된 메 모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 최적의 캐시 메모리 구조를 자동으로 설 계하는 인공지능 가속기의 캐시 메모리 구조 설계 방법 및 그를 위한 장치를 제공하는 데 주된 목적이 있다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 측면에 의하면, 상기 목적을 달성하기 위한 캐시 메모리 구조 설계 장치에서, 가속기의 캐시 메모 리의 구조를 설계하는 방법에 있어서, 캐시 메모리 구조 설계 방법은, 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각 타임 스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모리 접근 정보 추출 단계; 상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정 단계; 및 메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출하 고, 상기 캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계 단계를 포함할 수 있다. 또한, 본 발명의 다른 측면에 의하면, 상기 목적을 달성하기 위한 가속기의 캐시 메모리의 구조를 설계하기 위 한 캐시 메모리 구조 설계 장치에 있어서, 캐시 메모리 구조 설계 장치는, 가속기에 입력된 어플리케이션에 대 해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각 타임 스탬프마다 접근하는 캐시 메 모리의 메모리 주소를 추출하는 메모리 접근 정보 추출부; 상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상 기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정부; 및 메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모리 구조를 도출 하고, 상기 캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계부를 포함할 수 있다. 또한, 본 발명의 다른 측면에 의하면, 상기 목적을 달성하기 위한 가속기 시스템은, 메모리; 가속기에서의 어플 리케이션 실행을 제어하는 호스트 프로세서; 상기 어플리케이션에 대한 연산 처리를 수행하는 프로세싱 엘리먼 트 어레이(PE Array: Processing Element Array) 및 상기 프로세싱 엘리먼트 어레이와 연동하는 캐시 메모리를 포함하는 가속기; 및 상기 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 각 타임 스탬프 마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모리 접근 정보 추출부; 상기 캐시 메모리에 시간의 흐 름에 따라 접근하는 상기 메모리 주소들에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메 모리 접근 패턴 결정부; 및 메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용하여 캐시 메모 리 구조를 도출하고, 상기 캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계부를 포함 하는 캐시 메모리 구조 설계 장치를 포함할 수 있다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상에서 설명한 바와 같이, 본 발명은 캐시 구조 자동화 설계 방법을 이용하여 특정 가속기에 최적화된 저전력 고성능 캐시 구조를 도출할 수 있다는 효과가 있다. 또한, 본 발명은 일반적으로 가속기의 캐시 설계를 위한 시간, 인적 자원 등을 감소시킬 수 있는 효과가 있다. 또한, 본 발명은 단일 메모리 캐시 메모리 기반이 아닌 두 개의 메모리를 적용한 하이브리드 캐시 메모리 구조 로 변경하여 칩 면적(chip area), 누설 전력(leakage power) 측면에서의 이득을 기대할 수 있는 효과가 있다."}
{"patent_id": "10-2022-0189714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 바람직한 실시예를 첨부된 도면들을 참조하여 상세히 설명한다. 본 발명을 설명함에 있어, 관 련된 공지 구성 또는 기능에 대한 구체적인 설명이 본 발명의 요지를 흐릴 수 있다고 판단되는 경우에는 그 상 세한 설명은 생략한다. 또한, 이하에서 본 발명의 바람직한 실시예를 설명할 것이나, 본 발명의 기술적 사상은 이에 한정하거나 제한되지 않고 당업자에 의해 변형되어 다양하게 실시될 수 있음은 물론이다. 이하에서는 도면 들을 참조하여 본 발명에서 제안하는 인공지능 가속기의 캐시 메모리 구조 설계 방법 및 그를 위한 장치에 대해 자세하게 설명하기로 한다. 도 1 및 도 2는 본 발명의 실시예에 따른 캐시 구조를 설계하는 동작을 설명하기 위한 도면이다. 본 실시예에 따른 캐시 메모리 구조 설계 장치는 캐시 메모리의 캐시 구조를 설계한다. 캐시 구조를 설계하는 것은 메모리 계층 구조(Memory hierarchy), 캐시 메모리의 각 레벨 저장 공간의 용 량(Cache level capacity), 캐시 메모리의 연상 기억 장치(associative memomry)의 구성 및 캐시 메모리 의 정책(policy) 중 적어도 하나를 결정하는 것일 수 있다. 종래의 캐시 구조 설계 방식은 설계자의 경험에 의존하여 인력, 시간, 비용 등이 많이 소모된다. 이에 비해, 본 발명에서는 인공지능 기반 캐시 메모리 구조 자동화 설계 방법을 통해 특정 어플리케이션의 캐시 접근 패턴에 대한 최적의 캐시 구조를 도출할 수 있다. 본 발명에서는 캐시 구조에 대한 설계를 위해 캐시 메모리의 지역성(locality), 하이브리드 캐시 메모리의 특성 에 따른 프로세서 그룹에 대한 지역성(locality) 등을 고려하여 최적화된 캐시 구조를 탐색한다. 여기서, 하이 브리드 캐시 메모리는 SRAM-MRAM 하이브리드 캐시 메모리인 것이 바람직하나 반드시 이에 한정되는 것은 아니다. 캐시 메모리 구조 설계 장치는 메모리 접근 패턴을 기초로 캐시 구조 설계 모델을 이용하여 캐시 메모리 의 메모리 계층 구조, 캐시 메모리의 각 레벨 저장 공간의 용량, 캐시 메모리의 연상 기억 장치 의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계할 수 있다. 한편, 캐시 메모리 구조 설계 장치가 캐시 메모리의 캐시 구조를 설계할 때 결정하거나 고려하는 것이 반드시 전술한 메모리 계층 구조, 각 레벨 저장 공간의 용량, 연상 기억 장치의 구성 및 캐시 메모리의 정 책에 한정되는 것은 아니며, 메모리 접근 패턴을 기초로 캐시 구조 설계 모델을 이용해서 캐시 메모리의 구조를 설계할 수 있다면 캐시 메모리의 어떠한 요소라도 일 실시예에 따른 캐시 메모리 설계 과정에서 결 정될 수 있다. 도 3은 본 발명의 실시예에 따른 가속기 시스템을 개략적으로 나타낸 블록 구성도이다. 본 실시예에 따른 가속기 시스템은 호스트 프로세서, 메모리, 가속기 및 캐시 메모리 구조 설 계 장치를 포함한다. 도 1의 가속기 시스템은 일 실시예에 따른 것으로서, 도 1에 도시된 모든 블록이 필수 구성요소는 아니며, 다른 실시예에서 가속기 시스템에 포함된 일부 블록이 추가, 변경 또는 삭제될 수 있다. 호스트 프로세서는 가속기 시스템에 포함된 구성들의 동작을 제어하는 장치로, 예를 들어, 호스트 프로 세서는 중앙 처리 장치(CPU: Central Processing Unit)를 포함할 수 있다. 호스트 프로세서는 가속기의 동작을 제어할 수 있으며, 가속기로 하나 이상의 워크로드들을 할당할 수 있다. 워크로드는 객체 인식, 음성 인식, 패턴 인식, 컴퓨터 비전, 기계 번역 등을 위해 가속기로 하여 금 뉴럴 네트워크에 대한 어플리케이션을 실행하도록 하는 명령을 포함할 수 있다. 호스트 프로세서는 요청 되는 하나 이상의 작업에 따라 하나 이상의 워크로드들을 가속기에 할당할 수 있다. 메모리는 가속기의 외부에 배치된 메모리로서, 예를 들어, 가속기 시스템의 메인 메모리로 활용되 는 메모리일 수 있다. 여기서, 메모리는 DRAM일 수 있으나 반드시 이에 한정되는 것은 아니며, 다양한 형태 의 메모리로 구현될 수 있다. 가속기는 할당된 워크로드에 따른 뉴럴 네트워크에 대한 어플리케이션을 실행하여 입력되는 데이터를 추론 하는 인공지능 가속기(Artificial Intelligence accelerator)를 말한다. 가속기는 호스트 프로세서와 구별되는 별도의 프로세서일 수 있다. 다시 말해, 가속기는 호스트 프 로세서에서 할당된 하나 또는 복수의 워크로드들을 동시에 수행할 수 있다. 가속기는 프로세싱 엘리먼트 어레이, 캐시 메모리 및 컨트롤러를 포함한다. 프로세싱 엘리먼트 어레이는 복수의 프로세싱 엘리먼트를 포함하고, 병렬 처리가 가능한 형태로 배열될 수 있다. 프로세싱 엘리먼트 어레이는 적어도 하나의 프로세싱 엘리먼트들을 포함하는 단위로 그룹화된 프로세서 그 룹을 포함할 수 있다. 복수의 프로세서 그룹은 블록으로 그룹화될 수 있다. 여기서, 프로세싱 엘리먼트 각각은 스트리밍 프로세서, 코어 프로세서 등일 수 있고, 프로세서 그룹은 워프 (warp)일 수 있으며, 블록은 스트리밍 멀티프로세서(SM: streaming multiprocessor)일 수 있으나 반드시 이에 한정되는 것은 아니다. 프로세싱 엘리먼트 어레이는 뉴럴 네트워크 기반의 어플리케이션을 입력 받으면 해당 어플리케이션의 수행 에 필요한 데이터를 캐시 메모리로부터 획득할 수 있다. 즉, 특정한 어플리케이션의 수행에 필요한 데이터 는 캐시 메모리의 복수의 공간에 저장된 데이터일 수 있다. 프로세싱 엘리먼트 어레이는 범용 어플리케이션들을 처리하는 CPU 및 GPU와 달리 DNN(Deep Neural Network)에 특화된 하드웨어일 수 있으나 이에 한정되는 것은 아니다. 프로세싱 엘리먼트 어레이는 필요한 데이터가 미리 저장되어 있는 어떤 특정한 메모리 주소의 저장 공간에 접근하여 데이터를 획득할 수 있다. 어플리케이션을 수행하는데 필요한 데이터들은 캐시 메모리에서 복수 의 저장 공간에 각각 저장되어 있을 수 있다. 프로세싱 엘리먼트 어레이는 시간의 흐름에 따라 그때 그때 필요한 데이터를 획득하기 위해서 어떤 특정한 메모리 주소의 저장 공간에 접근하여 데이터를 획득한 후, 다른 메모리 주소의 저장 공간에 접근하여 다음으로 필요한 데이터를 획득하는 과정을 반복할 수 있다. 본 실시예에 따른 캐시 메모리는 제1 메모리 캐시 및 제2 메모리 캐시로 구성된 하이브리드 캐 시 메모리일 수 있다. 제1 메모리 캐시은 제1 메모리 기반으로 생성된 캐시 메모리이고, 제2 메모리 캐시는 제2 메모리 기 반으로 생성된 캐시 메모리이다. 여기서, 제1 메모리는 휘발성 램일 수 있으며, 예를 들어, SRAM(Static Random Access Memory), DRAM(Dynamic Random Access Memory) 등일 수 있다. 또한, 제2 메모리는 비휘발성 램일 수 있 으며, 예를 들어, FeRAM(Ferroelectric RAM), MRAM(Magnetic RAM), PRAM(Phase Change RAM), ReRAM(Resistance RAM), PoRAM(Polymer RAM), NFGM(Nano Floating Gate Memory) 등일 수 있다. 도 4를 참고하면, 본 실시예에 따른 가속기는 복수의 프로세싱 엘리먼트(PE)를 포함하는 프로세싱 엘리먼트 어레이와 캐시 메모리로 구현될 수 있다. 도 4에 도시된 바와 같이, 캐시 메모리는 서로 다른 두 개의 메모리(예: SRAM, MRAM)로 구현된 캐시를 포 함하며, 각각의 캐시는 제1 레벨 캐시(L1), 제2 레벨 캐시(L2)로 구현될 수 있다. 여기서, 서로 다른 두 개의 메모리로 구현된 캐시의 개수의 비율은 변경될 수 있다. 컨트롤러는 가속기의 전반적인 동작을 제어하는 장치일 수 있다. 컨트롤러는 가속기의 동작 시 프로세싱 엘리먼트 어레이 및 캐시 메모리 간의 제어를 수행 할 수 있다. 또한, 컨트롤러는 캐시 메모리에 연결되는 DMA(Direct Memory Access)로 구현될 수도 있다. 또한, 컨트롤러는 캐시 메모리 구조 설계 장치로부터 캐시 구조 설계 정보를 획득한 경우, 캐시 구조 설계 정보를 캐시 메모리에 적용할 수 있다. 컨트롤러는 하나의 모듈인 것으로 기재하고 있으나 반드시 이에 한정되는 것은 아니며, 가속기 내의 제어를 위한 복수의 컨트롤러로 구현될 수 있다. 캐시 메모리 구조 설계 장치는 가속기와 연동하여 캐시 메모리의 캐시 구조를 자동으로 설계하는 동작을 수행한다. 캐시 메모리 구조 설계 장치는 가속기에서 처리하는 애플리케이션에 따른 메모리 접근 패턴을 캐시 구 조 설계 모델에 적용하여 최적의 캐시 구조를 자동으로 설계한다. 이하, 캐시 메모리 구조 설계 장치에서 동작하는 캐시 메모리 구조 설계 방법에 대해 설명하도록 한다. 캐시 메모리 구조 설계 장치는 가속기에 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이(PE Array: Processing Element Array)가 각 타임 스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 메모 리 접근 정보 추출 단계를 수행한다. 또한, 캐시 메모리 구조 설계 장치는 상기 캐시 메모리에 시간의 흐름에 따라 접근하는 상기 메모리 주소들 에 근거하여 상기 어플리케이션에 대한 메모리 접근 패턴을 결정하는 메모리 접근 패턴 결정 단계를 수행한다. 또한, 캐시 메모리 구조 설계 장치는 메모리 접근 패턴을 기반으로 기 학습된 캐시 구조 설계 모델을 이용 하여 캐시 메모리 구조를 도출하고, 상기 캐시 메모리 구조에 대한 캐시 구조 설계 정보를 생성하는 캐시 구조 설계 단계를 수행한다. 한편, 캐시 메모리 구조 설계 장치는 상기 메모리 접근 패턴으로부터 상기 메모리 주소의 지역성(localit y)을 기반으로 하는 특징 정보를 추출하여 특징 매트릭스를 생성하는 특징 매트릭스 생성 단계를 추가로 수행할 수 있다. 캐시 메모리 구조 설계 장치는 캐시 구조 설계 단계에서, 상기 어플리케이션에 대한 상기 특징 매트릭스를 상기 캐시 구조 설계 모델에 입력하여 상기 캐시 메모리 구조를 설계하는 동작을 수행한다. 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 어플리케이션에 대해서 상기 프로세싱 엘리먼 트 어레이에서 상기 캐시 메모리에 접근한 시점을 나타내는 복수의 기준 타임스탬프에 대한 특징 정보를 추출하 고, 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성한다. 또한, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 연속적인 복수의 타임스탬프에서 접근 된 메모리 주소 중에서, 상기 기준 타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하고, 상기 기준 타임스탬프에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의 차이값에 대 한 최소 차이 정보를 취합하여 상기 어플리케이션에 대한 제1 특징 매트릭스를 생성한다. 또한, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 연속적인 복수의 타임스탬프 중에서 상 기 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임 스탬프의 개수에 대한 제1 개 수 정보를 추출하고, 모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리케이션에 대한 제2 특징 매트릭스를 생성한다. 또한, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 복수의 스트리밍 프로세서를 포함하는 적어도 하나의 프로세서 그룹 별 상기 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 제3 특징 매트릭스를 생성한다. 또한, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 한번만 접근하고 버려지는 메모리 주소 에 대한 접근 카운팅값, 상기 적어도 하나의 프로세서 그룹 간의 접근에 대한 메모리 주소를 카운팅한 접근 카 운팅값 및 상기 프로세서 그룹 내의 스트리밍 프로세서의 접근에 대한 메모리 주소를 카운팅한 접근 카운팅값 중 적어도 하나의 접근 카운팅값에 대한 특징 정보를 추출하고, 상기 특징 정보를 취합하여 상기 어플리케이션 에 대한 상기 제3 특징 매트릭스를 생성한다. 또한, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 상기 프로세서 그룹 내에 접근한 메모 리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 동작 여부와 상기 프로세서 그룹 내에 접근한 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 빈도수에 대한 상기 접근 카운팅값에 대한 특징 정보를 추출하여 상기 제3 특징 매트릭스를 생성한다. 한편, 특징 매트릭스 생성 단계에서, 캐시 메모리 구조 설계 장치는 상기 제1 특징 매트릭스, 상기 제2 특 징 매트릭스 및 제3 특징 매트릭스 중 어느 하나 또는 두 개 이상의 조합을 통해 상기 어플리케이션에 대한 특 징 매트릭스를 생성할 수 있다. 캐시 메모리 구조 설계 장치에 포함된 구성요소 각각에 대한 설명은 도 5에 기재하도록 한다. 도 5는 본 발명의 실시예에 따른 캐시 메모리 구조 설계 장치를 개략적으로 나타낸 블록 구성도이다. 캐시 메모리 구조 설계 장치는 가속기와 연동하여 캐시 메모리의 캐시 구조를 자동으로 설계하는 동작을 수행한다. 캐시 메모리 구조 설계 장치는 가속기에서 처리하는 애플리케이션에 따른 메모리 접근 패턴을 캐시 구 조 설계 모델에 적용하여 최적의 캐시 구조를 자동으로 설계한다. 가속기에 입력되는 애플리케이션에 최적으로 미리 캐시 메모리의 구조를 설계한다면 특정 프로세싱 엘 리먼트 어레이에 맞는 최적화된 저전력의 고성능 캐시 구조를 도출할 수 있다. 하지만, 일반적으로 캐시 메모리를 설계하는 방법은 설계자의 경험을 토대로 프로세싱 엘리먼트 어레이에 맞는 캐시를 설계하 기 때문에 시간과 비용이 많이 소요된다는 문제가 있다. 특히 AI 가속기와 같이 복잡도가 높은 프로세싱 엘리먼 트 어레이에 대한 캐시 메모리의 경우 개발 기간 단축을 위해 각 단계(step)의 런타임을 줄이거나 전 체 플로우(flow)의 반복 횟수를 줄이는 것이 중요하다. 본 발명에 따른 캐시 메모리 구조 설계 장치는 메모리 접근 패턴을 기초로 기 학습된 캐시 구조 설계 모델 을 이용하여 어플리케이션에 대한 캐시 구조에 대한 구성(cache configuration)을 설계할 수 있다. 여기서, 캐 시 구조 설계 모델은 기계학습 방식으로 학습된 딥러닝(deep learning) 모델일 수 있다. 결과적으로, 본 발명에 따른 캐시 메모리 구조 설계 장치는 설계자의 경험 또는 직관에 의존한 기존의 방법 과 달리, 인공지능 기반의 설계 방법으로 최적 또는 고성능의 캐시 메모리 구조를 자동으로 설계할 수 있다. 본 발명에 따른 캐시 메모리 구조 설계 장치는 학습 처리부 및 추론 처리부를 포함할 수 있다. 학습 처리부는 가속기에 입력된 학습용 어플리케이션을 이용하여 캐시 구조 설계 모델을 생성하는 동작 을 수행한다. 여기서, 학습용 어플리케이션은 모델 생성을 위해 입력된 신경망에 대한 어플리케이션인 것이 바 람직하나 반드시 이에 한정되는 것은 아니며, 일반적으로 가속기에 입력된 어플리케이션일 수도 있다. 이하, 본 실시예에 따른 학습 처리부에 포함된 구성요소에 대해 설명하도록 한다 제1 메모리 접근 정보 추출부는 입력된 학습용 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 각 타임스탬프(timestamp)마다 접근하는 캐시 메모리의 메모리 주소를 추출할 수 있다. 여기서, 타임스탬 프는 특정한 시각을 나타내거나 기록하는 문자열일 수 있다. 구체적으로, 타임스탬프는 이벤트, 즉 사건이 컴퓨 터에 기록된 시간을 의미할 수 있다. 시간의 흐름에 따라 프로세싱 엘리먼트 어레이는 복수의 메모리 주소에 순차적으로 접근하므로, 제1 메모 리 접근 정보 추출부는 각 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 저장 공간의 메모리 주소들의 정보를 획득할 수 있다. 제1 메모리 접근 패턴 결정부는 프로세싱 엘리먼트 어레이가 시간의 흐름에 따라 접근하는 메모리 주 소들을 기초로, 학습용 어플리케이션에 대한 메모리 액세스 패턴(memory access pattern)을 결정할 수 있다. 메모리 접근 패턴은 특정한 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 접근하는 메모리 주소의 타임스탬프의 흐름에 따른 경향이나 패턴일 수 있다. 따라서, 동일한 프로세싱 엘리먼트 어레이가 동일한 캐시 메모리에 접근하는 경우라 해도 어플리케이션의 종류에 따라 메모리 접근 패턴은 다를 수 있다. 또한, 캐시 메모리의 구조에 대한 구성(configuration)를 미리 어떻게 설계했는지에 따라 동일한 프로세싱 엘리먼트 어레이가 동일한 어플리케이션에 대해서 동일한 캐시 메모리에 접근하더라도 메모리 접근 패턴은 전혀 다르게 나타날 수 있다. 데이터 세트 구성부는 캐시 구조 설계 모델의 학습을 위한 데이터 세트를 구성하는 동작을 수행한다. 여기 서, 데이터 세트는 메모리 접근 패턴을 기반으로 생성된 특징 매트릭스와 캐시 구성 시뮬레이션을 통해 생성된라벨 정보를 포함할 수 있다. 본 실시예에 따른 데이터 세트 구성부는 제1 특징 매트릭스 생성부 및 캐시 구성 시뮬레이션부 를 포함한다. 제1 특징 매트릭스 생성부는 메모리 접근 패턴으로부터 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 특징 매트릭스(feature matrix)를 생성한다. 여기서, 특징 매트릭스는 기준이 되는 복수의 타임스탬프 각각에 대해, 일정 타임스탬프 범위 내에서 프로세싱 엘리먼트 어레이가 접근하는 메모리 주소들의 특징들을 기초로 생성되는 특징일 수 있다. 예를 들어, 특징 매트릭스는 프로세싱 엘리먼트 어레이가 어느 정도로 서로 인접한 메모리 주소의 저장공간에 많이 또는 빈 번하게 접근하는지에 대한 특징을 나타내는 것일 수 있으나, 이에 한정되는 것은 아니다. 이러한 특징 매트릭스 는 결국 각각의 어플리케이션마다 하나씩 생성될 수 있다. 또한, 제1 특징 매트릭스 생성부는 프로세싱 엘리먼트 어레이의 복수의 스트리밍 프로세서를 포함하 는 적어도 하나의 프로세서 그룹 별 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 특 징 매트릭스를 생성할 수도 있다. 캐시 구성 시뮬레이션부는 메모리 접근 패턴에 캐시 구조의 구성 별로 성능 측정을 시뮬레이션하여 라벨링 된 라벨 정보를 생성할 수 있다. 여기서, 라벨 정보는 각각의 어플리케이션 별로 메모리 접근 패턴마다 성능이 측정된 레벨값을 부여한 정보일 수 있다. 캐시 구성 시뮬레이션부는 학습 데이터 세트의 라벨링을 위해, 여러가지 캐시 구조의 구성을 적용하여 성 능을 측정하고 라벨링을 처리한다. 모델 학습부는 반복적인 기계 학습(Machine Learning)을 통해 손실 함수가 감소하는 방식 등을 이용하여 캐시 구조 설계 모델을 학습할 수 있다. 모델 학습부에서 학습된 캐시 구조 설계 모델은 추론 처리부로 전달되어 저장될 수 있으며, 가속기 시 스템의 메모리에 저장될 수도 있다. 모델 학습부에서 수행되는 기계 학습이란 다수의 파라미터로 구성된 모델을 이용하며, 주어진 데이터로 파 라미터를 최적화하는 것을 의미할 수 있다. 기계 학습은 학습 문제의 형태에 따라 지도 학습(supervised learning), 비지도 학습(unsupervised learning), 강화 학습(reinforcement learning)을 포함할 수 있다. 지도 학습(supervised learning)은 입력과 출력 사이의 매핑을 학습하는 것이며, 입력과 출력 쌍이 데이터로 주어지 는 경우에 적용할 수 있다. 비지도 학습(unsupervised learning)은 입력만 있고 출력은 없는 경우에 적용하며, 입력 사이의 규칙성 등을 찾아낼 수 있다. 다만, 일 실시예에 따른 기계 학습이 반드시 전술한 학습 방식으로 한정되는 것은 아니다. 모델 학습부는 다양한 방식으로 캐시 구조 설계 모델을 학습할 수 있다. 예를 들어, 모델 학습부는 복수의 학습용 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 시간의 흐름에 따라 접근하는 메모리의 주소들로부터 추출되는 특징(feature)을 딥러닝 기반의 학습방법으로 학습할 수 있다. 이때, 프로세싱 엘리먼트 어레이가 시간의 흐름에 따라 접근하는 메모리의 주소로부터 특징, 즉 특징 매트 릭스를 추출하는 방법을 학습하기 위해 여러 단계의 컨볼루션 계층(Convolution layer)을 쌓은 CNN(Convolutional Neural Networks) 구조가 활용될 수 있으나, 모델 학습부의 학습방법이 반드시 CNN 구 조를 활용하는 방법으로 한정되는 것은 아니다. 예를 들어, 모델 학습부는 컴퓨팅 시스템 컴포넌트(computing system component)간의 최적의 토폴로지 (topology)를 빠르게 예측하는 GNN(Graph Neural Network) 구조를 활용하여 기계학습을 수행할 수도 있으며, 특정 어플리케이션과 시스템을 타겟으로 최적화된 캐시 구조를 설계할 수 있다면 어떠한 ANN(Artificial Neural Network)를 활용하더라도 문제없다. 한편, 전술한 방식대로 기계 학습을 진행하기 위해서는 각각의 학습용 어플리케이션마다 최적의 캐시 구조가 정 답으로서 미리 정해져 있을 필요가 있다. 모델 학습부는 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출력 변수 로 설정하여 캐시 구조 설계 모델을 학습할 수 있다.추론 처리부는 기 학습된 캐시 구조 설계 모델을 저장하고, 가속기에 입력된 어플리케이션의 메모리 접 근 패턴에 따른 특징 매트릭스를 저장된 캐시 구조 설계 모델에 적용하여 최적의 캐시 구조를 자동으로 설계한 다. 이하, 본 실시예에 따른 추론 처리부에 포함된 구성요소에 대해 설명하도록 한다 제2 메모리 접근 정보 추출부는 입력된 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 각 타임 스탬프(timestamp)마다 접근하는 캐시 메모리의 메모리 주소를 추출할 수 있다. 여기서, 타임스탬프는 특 정한 시각을 나타내거나 기록하는 문자열일 수 있다. 구체적으로, 타임스탬프는 이벤트, 즉 사건이 컴퓨터에 기 록된 시간을 의미할 수 있다. 시간의 흐름에 따라 프로세싱 엘리먼트 어레이는 복수의 메모리 주소에 순차적으로 접근하므로, 제2 메모 리 접근 정보 추출부는 각 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 저장 공간의 메모리 주소들의 정보를 획득할 수 있다. 제2 메모리 접근 패턴 결정부는 프로세싱 엘리먼트 어레이가 시간의 흐름에 따라 접근하는 메모리 주 소들을 기초로, 어플리케이션에 대한 메모리 액세스 패턴(memory access pattern)을 결정할 수 있다. 메모리 접근 패턴은 특정한 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 접근하는 메모리 주소의 타임스탬프의 흐름에 따른 경향이나 패턴일 수 있다. 따라서, 동일한 프로세싱 엘리먼트 어레이가 동일한 캐시 메모리에 접근하는 경우라 해도 어플리케이션의 종류에 따라 메모리 접근 패턴은 다를 수 있다. 또한, 캐시 메모리의 구조에 대한 구성(configuration)를 미리 어떻게 설계했는지에 따라 동일한 프로세싱 엘리먼트 어레이가 동일한 어플리케이션에 대해서 동일한 캐시 메모리에 접근하더라도 메모리 접근 패턴은 전혀 다르게 나타날 수 있다. 제2 특징 매트릭스 생성부는 메모리 접근 패턴으로부터 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 특징 매트릭스(feature matrix)를 생성한다. 여기서, 특징 매트릭스는 기준이 되는 복수의 타임스탬프 각각에 대해, 일정 타임스탬프 범위 내에서 프로세싱 엘리먼트 어레이가 접근하는 메모리 주소들의 특징들을 기초로 생성되는 특징일 수 있다. 예를 들어, 특징 매트릭스는 프로세싱 엘리먼트 어레이가 어느 정도로 서로 인접한 메모리 주소의 저장공간에 많이 또는 빈 번하게 접근하는지에 대한 특징을 나타내는 것일 수 있으나, 이에 한정되는 것은 아니다. 이러한 특징 매트릭스 는 결국 각각의 어플리케이션마다 하나씩 생성될 수 있다. 또한, 제2 특징 매트릭스 생성부는 프로세싱 엘리먼트 어레이의 복수의 스트리밍 프로세서를 포함하 는 적어도 하나의 프로세서 그룹 별 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 특 징 매트릭스를 생성할 수도 있다. 캐시 구조 설계부는 어플리케이션에 대한 특징 매트릭스를 캐시 구조 설계 모델에 입력하여 캐시 구조를 설계할 수 있다. 캐시 구조 설계부는 메모리 액세스 패턴을 기초로 캐시 구조 설계 모델을 이용하여 캐시 메모리의 메 모리 계층 구조, 캐시 메모리의 각 레벨 저장 공간의 용량, 캐시 메모리의 연상 기억 장치의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계할 수 있다. 한편, 캐시 구조 설계부가 캐시 메모리의 캐시 구조를 설계할 때 결정하거나 고려하는 것이 반드시 전술한 메모리 계층 구조, 각 레벨 저장 공간의 용량, 연상 기억 장치의 구성 및 캐시 메모리의 정책에 한 정되는 것은 아니며, 메모리 액세스 패턴을 기초로 캐시 구조 설계 모델을 이용해서 캐시 메모리의 구조를 설계할 수 있다면 캐시 메모리의 어떠한 요소라도 일 실시예에 따른 캐시 메모리 설계 과정에서 결정될 수 있다. 도 6 및 도 7은 본 발명의 실시예에 따른 캐시 메모리 구조 설계 방법을 설명하기 위한 순서도이다. 도 6을 참고하면, 캐시 메모리 구조 설계 장치는 가속기로부터 학습용 어플리케이션의 메모리 접근 정 보를 추출한다(S610). 캐시 메모리 구조 설계 장치는 학습용 어플리케이션의 메모리 접근 정보에 포함된 메모리 주소를 기반으로 학습용 어플리케이션에 대한 메모리 접근 패턴을 결정한다(S620).캐시 메모리 구조 설계 장치는 메모리 접근 패턴 기반의 적어도 하나의 특징 정보를 추출하여 특징 매트릭 스를 생성한다(S630). 캐시 메모리 구조 설계 장치는 캐시 구성 시뮬레이션을 통해 메모리 접근 패턴 기반의 라벨 정보를 생성한 다(S640). 캐시 메모리 구조 설계 장치는 특징 매트릭스 및 라벨 정보를 포함하는 데이터 세트로 기계 학습을 수행하 여 캐시 구조 설계 모델을 생성한다(S650). 도 7을 참고하면, 캐시 메모리 구조 설계 장치는 가속기로부터 어플리케이션의 메모리 접근 정보를 추 출한다(S710). 캐시 메모리 구조 설계 장치는 어플리케이션의 메모리 접근 정보에 포함된 메모리 주소를 기반으로 어플리 케이션에 대한 메모리 접근 패턴을 결정한다(S720). 캐시 메모리 구조 설계 장치는 메모리 접근 패턴 기반의 적어도 하나의 특징 정보를 추출하여 특징 매트릭 스를 생성한다(S730). 캐시 메모리 구조 설계 장치는 특징 매트릭스를 기 학습된 캐시 구조 설계 모델에 적용하여 최적의 캐시 구 조를 도출하여 캐시 구조 설계 정보를 생성한다(S740). 도 6 및 도 7 각각에서는 각 단계를 순차적으로 실행하는 것으로 기재하고 있으나, 반드시 이에 한정되는 것은 아니다. 다시 말해, 도 6 및 도 7 각각에 기재된 단계를 변경하여 실행하거나 하나 이상의 단계를 병렬적으로 실행하는 것으로 적용 가능할 것이므로, 도 6 및 도 7 각각은 시계열적인 순서로 한정되는 것은 아니다. 도 6 및 도 7에 기재된 본 실시예에 따른 캐시 메모리 구조 설계 방법은 어플리케이션(또는 프로그램)으로 구현 되고 단말장치(또는 컴퓨터)로 읽을 수 있는 기록매체에 기록될 수 있다. 본 실시예에 따른 캐시 메모리 구조 설계 방법을 구현하기 위한 어플리케이션(또는 프로그램)이 기록되고 단말장치(또는 컴퓨터)가 읽을 수 있는 기 록매체는 컴퓨팅 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록장치 또는 매체를 포함한 다. 도 8은 본 발명의 실시예에 따른 메모리 접근 패턴을 도시한 도면이다. 도 8를 참조하면, 시간의 흐름에 따라 프로세싱 엘리먼트 어레이가 접근하는 메모리 주소의 경향의 예시를 확인할 수 있다. 즉, 메모리 액세스 패턴의 예시를 확인할 수 있다. 도시된 2개의 그래프는 각각 서로 다른 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 접근하는 메모 리 주소의 경향을 나타낸 것이다. 구체적으로, 도시된 그래프들의 x축은 타임스탬프를 나타내며, y축은 메모리의 주소를 나타내는 것일 수 있다. 이때, 시간의 흐름에 따라 타임스탬프가 변하면 프로세싱 엘리먼트 어레이가 접근하는 저장 공간의 메모리 주소가 달라질 수 있다. 물론 경우에 따라 타임스탬프가 변하더라도 동일한 메모리 주소의 공간에 프로세싱 엘 리먼트 어레이가 접근하는 것도 가능하다. 도시된 그래프의 경향, 즉 메모리 액세스 패턴을 참조하면 서로 인접한 타임스탬프일수록 서로 인접한 메모리 주소의 저장 공간에 프로세싱 엘리먼트 어레이가 접근한다는 것을 확인할 수 있다. 예를 들어, 하단의 그 래프의 예시에서는 타임스탬프가 증가하더라도 일정 타임스탬프 범위 내에서는 아주 인접한 메모리 주소의 저장 공간에 프로세싱 엘리먼트 어레이가 접근하다가 특정 타임스탬프가 되면 갑자기 어느 정도 차이가 있는 메 모리 주소로 접근하게 되고, 또 일정 타임스탬프 범위 내에서는 인접한 메모리 주소의 저장 공간에 프로세싱 엘 리먼트 어레이가 접근하는 것이 반복되는 것을 확인할 수 있다. 이처럼, 프로세싱 엘리먼트 어레이가 시간의 흐름에 따라 접근하는 캐시 메모리의 메모리 주소는 어 플리케이션에 따라 일정한 지역성(locality)을 가질 수 있다. 이러한 지역성에 관련된 특징을 기초로 캐시 구조 설계 모델이 학습되도록 하여, 추후에 캐시 메모리 구조 설계 장치가 해당 캐시 구조 설계 모델을 이용하여 어플리케이션에 대한 캐시 구조를 설계하도록 할 수 있다. 도 9 및 도 10은 본 발명의 실시예에 따른 메모리 접근 패턴에 대한 특징값을 추출하는 동작을 설명하기 위한 도면이다. 도 9는 그래프에 도시된 메모리 접근 패턴을 기반으로 특징 정보 추출하여 특징 매트릭스를 생성하는 동작을 나 타낸다. 그래프에 도시된 바와 같이, 어플리케이션마다 메모리 접근 패턴이 다르다. 이에 따라 메모리 접근 패턴 각각에 대한 서로 다른 특징 메트릭스를 생성할 수 있다. 캐시 메모리 구조 설계 장치에서는 인접한 주소에 접근하는 지역성(spatial locality), 동일한 주소에 접근 하는 지역성(temporal locality), 하이브리드 캐시 메모리의 특성에 따른 프로세서 그룹 또는 블록 별 지역성 (locality) 등을 이용하여 특징 메트릭스를 생성할 수 있다. 도 10은 일 실시예에 따른 특징 정보를 추출하는 과정을 설명하기 위한 도면이다. 도 10에 도시된 그래프를 참조하면, 시간의 흐름에 따라 타임스탬프가 변하고, 각각의 타임스탬프에서는 프로세 싱 엘리먼트 어레이가 어느 하나의 메모리 주소의 저장 공간에 접근할 수 있다. 기준 타임스탬프(current address의 t값)는 어플리케이션에 대해서 프로세싱 엘리먼트 어레이가 메모리에 접근한 시점을 나타내는 타임스탬프일 수 있다. 도시된 그래프를 참조하면 어느 특정 시점의 타임스탬프가 기준 타임스탬프로 결정되어 있음을 확인할 수 있으며, 해당 기준 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소(Current address)가 활용될 수 있음을 확인할 수 있다. 즉, 기준 타임스탬프는 어플리케이션에 대한 특징 정보를 추출할 때 필요한 기준이 되는 타임스탬프일 수 있다. 한편, 어느 한 어플리케이션에 대해서 특징 매트릭스를 추출하기 위해서는 복수의 타임스탬프가 필요할 수 있다. 구체적으로, 시간의 흐름에 따라 타임스탬프는 계속 변할 수 있는데, 모든 타임스탬프가 순서대로 기준 타임스 탬프가 될 수 있다. 즉, 어느 한 타임스탬프가 기준 타임스탬프로서 해당 타임스탬프에 대한 특징 정보를 추출하는데 이용되고 난 후, 해당 타임스탬프 바로 뒤의 타임스탬프로 기준 타임스탬프가 변경되어 변경된 기준 타임스탬프에 대한 특징 정보가 추출되는 방식으로 계속해서 모든 타임스탬프에 대한 특징 정보들을 추출할 수 있다. 한편, 반드시 모든 타임스탬프가 기준 타임스탬프로서 이용되어야 하는 것은 아니고 일정한 규칙을 가지고 몇 개의 타임스탬프만 기준 타임스탬프로서 이용되는 것도 가능하다. 특징 정보는 각각의 타임스탬프에 대해서 프로세싱 엘리먼트 어레이의 메모리 접근 패턴에 따라 결정되는 특징에 관련된 정보일 수 있다. 특징 정보는 사용자가 어떤 기준을 가지고 정의하는지에 따라 얼마든지 달라질 수 있으며 다양한 특징이 특징 정보로 결정될 수 있다. 도 11은 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제1 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 도 11을 참조하면, 어느 한 기준 타임스탬프의 특징 정보는 연속적인 복수의 타임스탬프(window)에서 접근된 메 모리 주소와 해당 기준 타임스탬프에서 접근된 메모리 주소와의 차이 값을 기초로 결정될 수 있다. 캐시 메모리 구조 설계 장치는 최소 차이 메모리 주소(o)를 추출할 수 있다. 최소 차이 메모리 주소(o)는 연속적인 복수의 타임스탬프(window)에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소 중에서, 기준 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소와 가장 차이가 적은 메모리 주소일 수 있다. 예를 들어, 기준 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소가 z일때, 연속적인 복수 의 타임스탬프(window)에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소들(a, b, c … m, n, o. p) 중 에서 z와 가장 차이가 작은 메모리 주소가 z와 1 차이나는 o이고 나머지는 2이상이면, o가 해당 기준 타임스탬 프에 대한 최소 차이 메모리 주소(o)일 수 있다. 캐시 메모리 구조 설계 장치는 기준 타임스탬프에서 접근된 메모리 주소와 최소 차이 메모리 주소(o)의 차 이 값을 연산하여 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보를 결정할 수 있다. 예를 들어, 기준 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소가 z이고 z와 1 차이나는 o가 최소 차이 메모리 주소(o)이면, 특징 정보 추출부는 1을 해당 기준 타임스탬프에 대한 메모리 주소 최 소 차이 정보로 결정할 수 있다.캐시 메모리 구조 설계 장치는 모든 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보를 취합하여 어플 리케이션에 대한 특징 매트릭스를 생성할 수 있다. 즉, 각각의 기준 타임스탬프마다 대응되는 메모리 주소 최소 차이 정보가 존재하며, 캐시 메모리 구조 설계 장 치는 이를 취합하여 통계적으로 정리하는 방식으로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 예를 들어, 수천 또는 수만개의 기준 타임스탬프 각각에 대한 메모리 주소 최소 차이 정보들을 취합한 결과, 메 모리 주소 최소 차이 정보가 0인 기준 타임스탬프가 5050개, 메모리 주소 최소 차이 정보가 1인 기준 타임스탬 프가 1222개, 메모리 주소 최소 차이 정보가 2인 기준 타임스탬프가 3개 존재할 수 있으며, 이러한 통계 수치를 기초로 특징 매트릭스가 생성될 수 있다. 도 12는 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제2 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 도 12을 참조하면, 어느 한 기준 타임스탬프의 특징 정보는 연속적인 복수의 타임스탬프(window) 중에서, 해당 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개수를 기초로 결정될 수 있다. 캐시 메모리 구조 설계 장치는 제1 개수 정보를 추출할 수 있다. 제1 개수 정보는 연속적인 복수의 타임스 탬프(window) 중에서 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개 수에 대한 정보일 수 있다. 예를 들어, 기준 타임스탬프에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소가 z일때, 연속적인 복수 의 타임스탬프(window)에서 프로세싱 엘리먼트 어레이가 접근한 메모리 주소들(a, b, z, d, e, f, g, h … j, k, l, z, n, o. p) 중에서 기준 타임스탬프에서 접근된 메모리 주소(z)와 동일한 메모리 주소에 접근한 타임 스탬프의 개수는 2이므로, 캐시 메모리 구조 설계 장치는 2를 해당 기준 타임스탬프에 대한 제1 개수 정보 로 결정할 수 있다. 캐시 메모리 구조 설계 장치는 모든 기준 타임스탬프에 대한 제1 개수 정보를 취합하여 어플리케이션에 대 한 특징 매트릭스를 생성할 수 있다. 즉, 각각의 기준 타임스탬프마다 대응되는 제1 개수 정보가 존재하며, 특징 매트릭스 생성부는 이를 취합 하여 통계적으로 정리하는 방식으로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 예를 들어, 수천 또는 수만개의 기준 타임스탬프 각각에 대한 제1 개수 정보들을 취합한 결과, 제1 개수 정보가 1인 기준 타임스탬프가 44 개, 제1 개수 정보가 2인 기준 타임스탬프가 3332개, 제1 개수 정보가 3인 기준 타임 스탬프가 123개 존재할 수 있으며, 이러한 통계 수치를 기초로 특징 매트릭스가 생성될 수 있다. 도 13 및 도 14는 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제3 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 캐시 메모리 구조 설계 장치는 복수의 스트리밍 프로세서를 포함하는 적어도 하나의 프로세서 그룹 별 상기 메모리 주소의 지역성(locality)을 기반으로 하는 특징 정보를 추출하여 특징 매트릭스를 생성할 수 있다. 캐시 메모리 구조 설계 장치는 한번만 접근하고 버려지는 메모리 주소에 대한 접근 카운팅값, 적어도 하나 의 프로세서 그룹 간의 접근에 대한 메모리 주소를 카운팅한 접근 카운팅값 및 프로세서 그룹 내의 스트리밍 프 로세서의 접근에 대한 메모리 주소를 카운팅한 접근 카운팅값 중 적어도 하나의 접근 카운팅값에 대한 특징 정 보를 추출하고, 특징 정보를 취합하여 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 캐시 메모리 구조 설계 장치는 프로세서 그룹 내에 접근한 메모리 주소에 대한 읽기(Read) 또는 쓰기 (Write)에 대한 동작 여부와 프로세서 그룹 내에 접근한 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대 한 빈도수에 대한 접근 카운팅값에 대한 특징 정보를 추출하여 특징 매트릭스를 생성할 수 있다. 예를 들어, 캐시 메모리 구조 설계 장치는 SRAM-MRAM 하이브리드 캐시 메모리의 특성에 따른 warp 별 지역 성(locality)을 분석하여 특징 정보를 추출할 수 있다. 도 13에서, Streaming는 한번만 접근하고 버려지는 주소를 의미하고, Inter-warp은 warp 와 warp 사이의 접근을 파악한 값(L1 캐시)이며, Intra-warp은 warp 내의 접근을 파악 값(L2 캐시)이다. 캐시 메모리 구조 설계 장치는 Intra-warp의 지역성의 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 동작을 파악하고, Intra-warp의 지역성의 메모리 주소에 대한 읽기(Read) 또는 쓰기(Write)에 대한 빈도를 파악하여 SRAM-MRAM 특징 정보를 추출할 수 있다. 가속기에서 여러 개의 warp가 동시에 도는 GPU의 특성상 캐시의 지역성 를 분석하기 위해서는 warp 별 지역 성을 분석하여야만 한다. 즉, Inter-warp, Intra-warp 등의 지역성을 분석하여 밴치마크(benchmark)의 지역성의 특성을 파악할 수 있다. 도 15는 본 발명의 실시예에 따른 캐시 구조 설계 모델의 학습을 위한 라벨 정보를 생성하는 동작을 설명하기 위한 도면이다. 캐시 메모리 구조 설계 장치는 메모리 접근 패턴에 캐시 구조의 구성 별로 성능 측정을 시뮬레이션하여 라 벨링된 라벨 정보를 생성할 수 있다. 여기서, 라벨 정보는 각각의 어플리케이션 별로 메모리 접근 패턴마다 성 능이 측정된 레벨값을 부여한 정보일 수 있다. 캐시 메모리 구조 설계 장치는 학습 데이터 세트의 라벨링을 위해, 여러가지 캐시 구조의 구성을 적용하여 성능을 측정하고 라벨링을 처리한다. 이상의 설명은 본 발명의 실시예의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 발명의 실시예가 속하는 기술 분야에서 통상의 지식을 가진 자라면 본 발명의 실시예의 본질적인 특성에서 벗어나지 않는 범위에 서 다양한 수정 및 변형이 가능할 것이다. 따라서, 본 발명의 실시예들은 본 발명의 실시예의 기술 사상을 한정 하기 위한 것이 아니라 설명하기 위한 것이고, 이러한 실시예에 의하여 본 발명의 실시예의 기술 사상의 범위가 한정되는 것은 아니다. 본 발명의 실시예의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등 한 범위 내에 있는 모든 기술 사상은 본 발명의 실시예의 권리범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2022-0189714", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 및 도 2는 본 발명의 실시예에 따른 캐시 구조를 설계하는 동작을 설명하기 위한 도면이다. 도 3은 본 발명의 실시예에 따른 가속기 시스템을 개략적으로 나타낸 블록 구성도이다. 도 4는 본 발명의 실시예에 따른 가속기의 구조를 설명하기 위한 도면이다. 도 5는 본 발명의 실시예에 따른 캐시 메모리 구조 설계 장치를 개략적으로 나타낸 블록 구성도이다. 도 6 및 도 7은 본 발명의 실시예에 따른 캐시 메모리 구조 설계 방법을 설명하기 위한 순서도이다. 도 8은 본 발명의 실시예에 따른 메모리 접근 패턴을 도시한 도면이다. 도 9 및 도 10은 본 발명의 실시예에 따른 메모리 접근 패턴에 대한 특징값을 추출하는 동작을 설명하기 위한 도면이다. 도 11은 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제1 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 도 12는 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제2 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 도 13 및 도 14는 본 발명의 실시예에 따른 메모리 접근 패턴을 기반으로 제3 특징 매트릭스를 생성하는 동작을 설명하기 위한 도면이다. 도 15는 본 발명의 실시예에 따른 캐시 구조 설계 모델의 학습을 위한 라벨 정보를 생성하는 동작을 설명하기 위한 도면이다."}
