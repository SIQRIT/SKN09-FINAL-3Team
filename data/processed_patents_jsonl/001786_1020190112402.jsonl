{"patent_id": "10-2019-0112402", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0110500", "출원번호": "10-2019-0112402", "발명의 명칭": "인공지능 서버", "출원인": "엘지전자 주식회사", "발명자": "한종우"}}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "입력 데이터가 입력되는 입력부; 및인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 상기 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여오답을 야기한 제1 도메인을 획득하고,상기 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인공지능 모델을 트레이닝 하는 프로세서를 포함하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 프로세서는,상기 트레이닝 된 인공지능 모델이 제3 입력 데이터에 대하여 출력한 제3 출력 값이 정답이고 상기 트레이닝 된인공지능 모델이 제4 입력 데이터에 대하여 출력한 제4 출력 값이 오답인 경우, 상기 제3 입력 데이터 및 상기제4 입력 데이터를 이용하여 오답을 야기한 제2 도메인을 획득하고,상기 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 트레이닝 된 인공지능 모델을 재 트레이닝 하고,상기 제2 도메인은 상기 제1 도메인과 상이한인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2항에 있어서,상기 프로세서는,상기 인공지능 모델이 복수의 도메인에 대응하는 특징(feature)들을 이용하여 출력 값을 출력하는 경우, 상기복수의 도메인 중 오답을 가장 크게 야기한 상기 제1 도메인을 획득하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3항에 있어서,상기 프로세서는,상기 인공지능 모델이 상기 복수의 도메인에 대응하는 특징(feature)들을 이용하여 출력 값을 출력하는 경우,상기 복수의 도메인 각각에 대한 상기 제1 입력 데이터의 분포 및 상기 제2 입력 데이터의 분포를 이용하여, 상기 복수의 도메인 중 오답을 가장 크게 야기한 상기 제1 도메인을 획득하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 3항에 있어서,상기 프로세서는,공개특허 10-2019-0110500-3-상기 트레이닝 된 인공지능 모델이 상기 복수의 도메인에 대응하는 특징(feature) 들을 이용하여 출력 값을 출력하는 경우, 상기 복수의 도메인 중 오답을 가장 크게 야기한 상기 제2 도메인을 획득하는 인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5항에 있어서,상기 프로세서는,상기 트레이닝 된 인공지능 모델이 상기 복수의 도메인에 대응하는 특징(feature) 들을 이용하여 출력 값을 출력하는 경우, 상기 복수의 도메인 각각에 대한 상기 제1 입력데이터의 분포 및 상기 제2 입력 데이터의 분포를이용하여, 상기 복수의 도메인 중 오답을 가장 크게 야기한 상기 제2 도메인을 획득하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 2항에 있어서,상기 제1 도메인은, 제1-1 도메인 및 제1-2 도메인을 포함하고,상기 프로세서는,상기 인공지능 모델이 상기 제1-1 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)과, 상기 인공지능 모델이 상기 제1-2 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)이 동일한 영역에 맵핑되도록 상기 인공지능 모델을 트레이닝 하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서,상기 제2 도메인은, 제2-1 도메인 및 제2-2 도메인을 포함하고,상기 프로세서는,상기 트레이닝 된 인공지능 모델이 상기 제2-1 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)과, 상기 인공지능 모델이 상기 제2-2 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)이 동일한영역에 맵핑되도록 상기 트레이닝 된 인공지능 모델을 재 트레이닝 하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7항에 있어서,상기 인공지능 모델은,입력 데이터를 이용하여 상기 특징(feature)을 추출하는 특징 추출기;상기 추출된 특징(feature)을 이용하여 클래스를 분류하는 클래스 분류기; 및상기 추출된 특징(feature)을 이용하여 도메인을 분류하는 도메인 분류기를 포함하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9항에 있어서,상기 프로세서는,상기 클래스 분류기가 상기 클래스를 분류하고, 상기 도메인 분류기가 상기 제1-1 도메인 및 제1-2 도메인을 분공개특허 10-2019-0110500-4-류하지 못하도록, 상기 인공지능 모델을 트레이닝 하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1항에 있어서,상기 프로세서는,상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여 복수의 도메인 중 오답을 두번째로 크게 야기한 제2도메인을 획득하고, 상기 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 트레이닝 된 인공지능 모델을 재 트레이닝 하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1항에 있어서,상기 프로세서는,도메인 적응(domain adaptation)의 횟수, 도메인 적응(domain adaptation)의 대상 도메인 또는 도메인 적응(domain adaptation)의 순서 중 적어도 하나가 상이한 복수의 인공지능 모델 중 가장 높은 성능의 인공지능 모델을 선택하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12항에 있어서,상기 프로세서는,상기 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고,제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성하고,상기 제2 인공지능 모델 및 상기 제3 인공지능 모델 중 더 높은 성능의 인공지능 모델을 선택하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 12항에 있어서,상기 프로세서는,상기 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성하고,상기 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인공지능 모델을 트레이닝 하여 제4인공지능 모델을 생성하고,상기 제3 인공지능 모델 및 상기 제4 인공지능 모델 중 더 높은 성능의 인공지능 모델을 선택하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "공개특허 10-2019-0110500-5-제 12항에 있어서,상기 프로세서는,상기 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고,제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성하고,상기 제2 인공지능 모델 및 상기 제3 인공지능 모델 중 상기 제2 인공지능 모델의 성능이 더 높은 경우, 상기제3 인공지능 모델을 메모리로부터 삭제하는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 12항에 있어서,상기 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고,제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성하고,상기 제3 인공지능 모델의 성능이 상기 제2 인공지능 모델의 성능에 비하여 기 설정된 값 이하만큼 증가하는 경우, 상기 제3 인공지능 모델을 추가적으로 트레이닝 하지 않는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 12항에 있어서,상기 프로세서는,상기 복수의 인공지능 모델 중 기 설정된 기간 이상 가장 높은 성능의 인공지능 모델로 선택되지 않은 인공지능모델은 추가적으로 트레이닝 하지 않는인공지능 서버."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 상기 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여오답을 야기한 제1 도메인을 획득하는 단계; 및상기 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인공지능 모델을 트레이닝 하는 단계를 포함하는 도메인 적응 방법."}
{"patent_id": "10-2019-0112402", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서,상기 트레이닝 된 인공지능 모델이 제3 입력 데이터에 대하여 출력한 제3 출력 값이 정답이고 상기 트레이닝 된인공지능 모델이 제4 입력 데이터에 대하여 출력한 제4 출력 값이 오답인 경우, 상기 제3 입력 데이터 및 상기제4 입력 데이터를 이용하여 오답을 야기한 제2 도메인을 획득하는 단계; 및상기 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 트레이닝 된 인공지능 모델을 재 트레이닝 하는 단계를 더 포함하고,상기 제2 도메인은 상기 제1 도메인과 상이한공개특허 10-2019-0110500-6-도메인 적응 방법."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공지능 서버가 개시된다. 본 발명의 실시 예에 따른 인공지능 서버는, 입력 데이터가 입력되는 입력부, 및, 인 공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 상기 인공지능 모델이 제2 입력 데이터 에 대하여 출력한 제2 출력 값이 오답인 경우, 상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여 오답 을 야기한 제1 도메인을 획득하고, 상기 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인 공지능 모델을 트레이닝 하는 프로세서를 포함한다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은, 오답을 야기한 다양한 도메인들에 대하여 순차적으로 도메인 적응(domain adaptation)이 되도록 인 공지능 모델을 트레이닝 함으로써 인공지능 모델의 성능을 향상시킬 수 있는 인공지능 서버에 관한 것이다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능(artificial intelligence)은 인간의 지능으로 할 수 있는 사고, 학습, 자기계발 등을 컴퓨터가 할 수 있도록 하는 방법을 연구하는 컴퓨터 공학 및 정보기술의 한 분야로, 컴퓨터가 인간의 지능적인 행동을 모방할 수 있도록 하는 것을 의미한다. 또한, 인공지능은 그 자체로 존재하는 것이 아니라, 컴퓨터 과학의 다른 분야와 직간접으로 많은 관련을 맺고 있다. 특히 현대에는 정보기술의 여러 분야에서 인공지능적 요소를 도입하여, 그 분야의 문제 풀이에 활용하려 는 시도가 매우 활발하게 이루어지고 있다. 한편, 인공지능을 이용하여 주변의 상황을 인지 및 학습하고 사용자가 원하는 정보를 원하는 형태로 제공하거나 사용자가 원하는 동작이나 기능을 수행하는 기술이 활발하게 연구되고 있다. 그리고 이러한 각종 동작과 기능을 제공하는 전자장치를 인공지능 디바이스라고 명칭 할 수 있다. 한편, 인공지능 모델은 실험실 환경에서 트레이닝 되어 제품으로 출시된다. 다만 실험실 환경과 인공지능 모델의 실제 사용 환경은 상이할 수 있기 때문에, 인공지능 모델을 실제 사용하는 경우 실험실 환경에 비해 낮은 성능이 나타날 수 있다. 예를 들어 인공지능 모델의 설계자는, 조용한 환경(즉 노이즈가 작은 환경)에서 수집된 음성 데이터를 이용하여 음성 인식 모델을 트레이닝 하였다. 다만 음성 인식 모델이 탑재된 제품이 시끄러운 환경(노이즈가 큰 환경)에 서 사용되는 경우, 노이즈가 큰 음성 데이터가 음성 인식 모델에 입력되기 때문에 음성 인식 모델의 성능이 낮 아지는 문제가 발생할 수 있다. 따라서 인공지능 모델이 트레이닝 되는 환경과 실제 사용 환경과의 차이를 검출하고, 이 차이에 따라 딥 러닝 모델을 트레이닝 함으로써 성능을 향상시킬 필요성이 대두되었다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상술한 문제점을 해결하기 위한 것으로, 본 발명의 목적은 오답을 야기한 다양한 도메인들에 대하여 순차적으로 도메인 적응(domain adaptation)이 되도록 인공지능 모델을 트레이닝 함으로써 인공지능 모델의 성 능을 향상시킬 수 있는 인공지능 서버에 관한 것이다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시 예에 따른 인공지능 서버는, 입력 데이터가 입력되는 입력부, 및, 인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 상기 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여 오답을 야기한 제1 도메인 을 획득하고, 상기 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인공지능 모델을 트레 이닝 하는 프로세서를 포함한다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은, 도메인 적응을 반복적으로 수행함으로써 인공지능 모델의 성능을 끊임없이 향상시킬 수 있는 장점이 있다.또한 본 발명은, 오답을 가장 크게 야기하는 도메인을 결정한 후, 오답을 가장 크게 야기하는 도메인에 대하여 우선적으로 도메인 적응을 수행하기 때문에, 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장점이 있다. 또한 본 발명에 따르면, 도메인 적응의 대상이 되는 도메인을 변경해가면서 도메인 적응을 반복적으로 수행하기 때문에, 다양한 도메인들이 도메인 적응 된다. 따라서 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장 점이 있다. 또한 본 발명에 따르면, 도메인 적응을 반복적으로 수행할 때마다 오답을 가장 크게 야기하는 도메인을 선택하 여 도메인 적응을 수행한다. 따라서 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장점이 있다. 본 발명에 따르면 다양한 조합으로 도메인 적응을 수행하고 가장 높은 성능의 인공지능 모델을 선택함으로써, 인공지능 모델의 성능을 향상시킬 수 있다. 본 발명에 따르면, 복수의 인공지능 모델 중 일부 인공지능 모델에 대하여 추가 트레이닝을 수행하지 않거나, 일부 인공지능 모델을 메모리로부터 삭제함으로써, 계산 량 및 저장 공간을 줄일 수 있는 장점이 있다."}
{"patent_id": "10-2019-0112402", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 명세서에 개시된 실시 예를 상세히 설명하되, 도면 부호에 관계없이 동일하거 나 유사한 구성요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 이하의 설명 에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 명세서 작성의 용이함만이 고려되어 부여되거나 혼용 되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 또한, 본 명세서에 개시된 실시 예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 명세서에 개시된 실시 예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부된 도면은 본 명세서에 개시된 실시 예를 쉽게 이 해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명세서에 개시된 기술적 사상이 제한되지 않으며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소 들은 상기 용어들에 의해 한정되지는 않는다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. <인공 지능(AI: Artificial Intelligence)> 인공 지능은 인공적인 지능 또는 이를 만들 수 있는 방법론을 연구하는 분야를 의미하며, 머신 러닝(기계 학습, Machine Learning)은 인공 지능 분야에서 다루는 다양한 문제를 정의하고 그것을 해결하는 방법론을 연구하는 분야를 의미한다. 머신 러닝은 어떠한 작업에 대하여 꾸준한 경험을 통해 그 작업에 대한 성능을 높이는 알고리 즘으로 정의하기도 한다. 인공 신경망(ANN: Artificial Neural Network)은 머신 러닝에서 사용되는 모델로써, 시냅스의 결합으로 네트워 크를 형성한 인공 뉴런(노드)들로 구성되는, 문제 해결 능력을 가지는 모델 전반을 의미할 수 있다. 인공 신경 망은 다른 레이어의 뉴런들 사이의 연결 패턴, 모델 파라미터를 갱신하는 학습 과정, 출력값을 생성하는 활성화 함수(Activation Function)에 의해 정의될 수 있다. 인공 신경망은 입력층(Input Layer), 출력층(Output Layer), 그리고 선택적으로 하나 이상의 은닉층(Hidden Layer)를 포함할 수 있다. 각 층은 하나 이상의 뉴런을 포함하고, 인공 신경망은 뉴런과 뉴런을 연결하는 시냅 스를 포함할 수 있다. 인공 신경망에서 각 뉴런은 시냅스를 통해 입력되는 입력 신호들, 가중치, 편향에 대한 활성 함수의 함숫값을 출력할 수 있다. 모델 파라미터는 학습을 통해 결정되는 파라미터를 의미하며, 시냅스 연결의 가중치와 뉴런의 편향 등이 포함된 다. 그리고, 하이퍼파라미터는 머신 러닝 알고리즘에서 학습 전에 설정되어야 하는 파라미터를 의미하며, 학습 률(Learning Rate), 반복 횟수, 미니 배치 크기, 초기화 함수 등이 포함된다. 인공 신경망의 학습의 목적은 손실 함수를 최소화하는 모델 파라미터를 결정하는 것으로 볼 수 있다. 손실 함수 는 인공 신경망의 학습 과정에서 최적의 모델 파라미터를 결정하기 위한 지표로 이용될 수 있다. 머신 러닝은 학습 방식에 따라 지도 학습(Supervised Learning), 비지도 학습(Unsupervised Learning), 강화 학습(Reinforcement Learning)으로 분류할 수 있다. 지도 학습은 학습 데이터에 대한 레이블(label)이 주어진 상태에서 인공 신경망을 학습시키는 방법을 의미하며, 레이블이란 학습 데이터가 인공 신경망에 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결과 값)을 의미할 수 있다. 비지도 학습은 학습 데이터에 대한 레이블이 주어지지 않는 상태에서 인공 신경망을 학습시키 는 방법을 의미할 수 있다. 강화 학습은 어떤 환경 안에서 정의된 에이전트가 각 상태에서 누적 보상을 최대화 하는 행동 혹은 행동 순서를 선택하도록 학습시키는 학습 방법을 의미할 수 있다. 인공 신경망 중에서 복수의 은닉층을 포함하는 심층 신경망(DNN: Deep Neural Network)으로 구현되는 머신 러닝 을 딥 러닝(심층 학습, Deep Learning)이라 부르기도 하며, 딥 러닝은 머신 러닝의 일부이다. 이하에서, 머신 러닝은 딥 러닝을 포함하는 의미로 사용된다. <로봇(Robot)> 로봇은 스스로 보유한 능력에 의해 주어진 일을 자동으로 처리하거나 작동하는 기계를 의미할 수 있다. 특히, 환경을 인식하고 스스로 판단하여 동작을 수행하는 기능을 갖는 로봇을 지능형 로봇이라 칭할 수 있다. 로봇은 사용 목적이나 분야에 따라 산업용, 의료용, 가정용, 군사용 등으로 분류할 수 있다. 로봇은 액츄에이터 또는 모터를 포함하는 구동부를 구비하여 로봇 관절을 움직이는 등의 다양한 물리적 동작을 수행할 수 있다. 또한, 이동 가능한 로봇은 구동부에 휠, 브레이크, 프로펠러 등이 포함되어, 구동부를 통해 지 상에서 주행하거나 공중에서 비행할 수 있다. <자율 주행(Self-Driving)> 자율 주행은 스스로 주행하는 기술을 의미하며, 자율 주행 차량은 사용자의 조작 없이 또는 사용자의 최소한의 조작으로 주행하는 차량(Vehicle)을 의미한다. 예컨대, 자율 주행에는 주행중인 차선을 유지하는 기술, 어댑티브 크루즈 컨트롤과 같이 속도를 자동으로 조절 하는 기술, 정해진 경로를 따라 자동으로 주행하는 기술, 목적지가 설정되면 자동으로 경로를 설정하여 주행하 는 기술 등이 모두 포함될 수 있다. 차량은 내연 기관만을 구비하는 차량, 내연 기관과 전기 모터를 함께 구비하는 하이브리드 차량, 그리고 전기 모터만을 구비하는 전기 차량을 모두 포괄하며, 자동차뿐만 아니라 기차, 오토바이 등을 포함할 수 있다. 이때, 자율 주행 차량은 자율 주행 기능을 가진 로봇으로 볼 수 있다. *<확장 현실(XR: eXtended Reality)> 확장 현실은 가상 현실(VR: Virtual Reality), 증강 현실(AR: Augmented Reality), 혼합 현실(MR: Mixed Reality)을 총칭한다. VR 기술은 현실 세계의 객체나 배경 등을 CG 영상으로만 제공하고, AR 기술은 실제 사물 영상 위에 가상으로 만들어진 CG 영상을 함께 제공하며, MR 기술은 현실 세계에 가상 객체들을 섞고 결합시켜서 제공하는 컴퓨터 그래픽 기술이다. MR 기술은 현실 객체와 가상 객체를 함께 보여준다는 점에서 AR 기술과 유사하다. 그러나, AR 기술에서는 가상 객체가 현실 객체를 보완하는 형태로 사용되는 반면, MR 기술에서는 가상 객체와 현실 객체가 동등한 성격으로 사용된다는 점에서 차이점이 있다. XR 기술은 HMD(Head-Mount Display), HUD(Head-Up Display), 휴대폰, 태블릿 PC, 랩탑, 데스크탑, TV, 디지털 사이니지 등에 적용될 수 있고, XR 기술이 적용된 장치를 XR 장치(XR Device)라 칭할 수 있다. 도 1은 본 발명의 일 실시 예에 따른 AI 장치를 나타낸다. AI 장치는 TV, 프로젝터, 휴대폰, 스마트폰, 데스크탑 컴퓨터, 노트북, 디지털방송용 단말기, PDA(personal digital assistants), PMP(portable multimedia player), 네비게이션, 태블릿 PC, 웨어러블 장치, 셋톱박스(STB), DMB 수신기, 라디오, 세탁기, 냉장고, 데스크탑 컴퓨터, 디지털 사이니지, 로봇, 차량 등 과 같은, 고정형 기기 또는 이동 가능한 기기 등으로 구현될 수 있다. 도 1을 참조하면, 단말기는 통신부, 입력부, 러닝 프로세서, 센싱부, 출력부, 메모리 및 프로세서 등을 포함할 수 있다. 통신부는 유무선 통신 기술을 이용하여 다른 AI 장치(100a 내지 100e)나 AI 서버 등의 외부 장치들과 데이터를 송수신할 수 있다. 예컨대, 통신부는 외부 장치들과 센서 정보, 사용자 입력, 학습 모델, 제어 신호 등을 송수신할 수 있다. 이때, 통신부가 이용하는 통신 기술에는 GSM(Global System for Mobile communication), CDMA(Code Division Multi Access), LTE(Long Term Evolution), 5G, WLAN(Wireless LAN), Wi-Fi(Wireless-Fidelity), 블 루투스(Bluetooth™), RFID(Radio Frequency Identification), 적외선 통신(Infrared Data Association; IrDA), ZigBee, NFC(Near Field Communication) 등이 있다. 입력부는 다양한 종류의 데이터를 획득할 수 있다. 이때, 입력부는 영상 신호 입력을 위한 카메라, 오디오 신호를 수신하기 위한 마이크로폰, 사용자로부터 정보를 입력 받기 위한 사용자 입력부 등을 포함할 수 있다. 여기서, 카메라나 마이크로폰을 센서로 취급하여, 카메라나 마이크로폰으로부터 획득한 신호를 센싱 데이터 또는 센서 정보라고 할 수도 있다. 입력부는 모델 학습을 위한 학습 데이터 및 학습 모델을 이용하여 출력을 획득할 때 사용될 입력 데이터 등을 획득할 수 있다. 입력부는 가공되지 않은 입력 데이터를 획득할 수도 있으며, 이 경우 프로세서 또는 러닝 프로세서는 입력 데이터에 대하여 전처리로써 입력 특징점(input feature)을 추출할 수 있다. 러닝 프로세서는 학습 데이터를 이용하여 인공 신경망으로 구성된 모델을 학습시킬 수 있다. 여기서, 학습 된 인공 신경망을 학습 모델이라 칭할 수 있다. 학습 모델은 학습 데이터가 아닌 새로운 입력 데이터에 대하여 결과 값을 추론해 내는데 사용될 수 있고, 추론된 값은 어떠한 동작을 수행하기 위한 판단의 기초로 이용될 수 있다. 이때, 러닝 프로세서는 AI 서버의 러닝 프로세서과 함께 AI 프로세싱을 수행할 수 있다. 이때, 러닝 프로세서는 AI 장치에 통합되거나 구현된 메모리를 포함할 수 있다. 또는, 러닝 프로세서 는 메모리, AI 장치에 직접 결합된 외부 메모리 또는 외부 장치에서 유지되는 메모리를 사용하 여 구현될 수도 있다.센싱부는 다양한 센서들을 이용하여 AI 장치 내부 정보, AI 장치의 주변 환경 정보 및 사용자 정보 중 적어도 하나를 획득할 수 있다. 이때, 센싱부에 포함되는 센서에는 근접 센서, 조도 센서, 가속도 센서, 자기 센서, 자이로 센서, 관성 센 서, RGB 센서, IR 센서, 지문 인식 센서, 초음파 센서, 광 센서, 마이크로폰, 라이다, 레이더 등이 있다. 출력부는 시각, 청각 또는 촉각 등과 관련된 출력을 발생시킬 수 있다. 이때, 출력부에는 시각 정보를 출력하는 디스플레이부, 청각 정보를 출력하는 스피커, 촉각 정보를 출력하 는 햅틱 모듈 등이 포함될 수 있다. 메모리는 AI 장치의 다양한 기능을 지원하는 데이터를 저장할 수 있다. 예컨대, 메모리는 입력 부에서 획득한 입력 데이터, 학습 데이터, 학습 모델, 학습 히스토리 등을 저장할 수 있다. 프로세서는 데이터 분석 알고리즘 또는 머신 러닝 알고리즘을 사용하여 결정되거나 생성된 정보에 기초하 여, AI 장치의 적어도 하나의 실행 가능한 동작을 결정할 수 있다. 그리고, 프로세서는 AI 장치(10 0)의 구성 요소들을 제어하여 결정된 동작을 수행할 수 있다. 이를 위해, 프로세서는 러닝 프로세서 또는 메모리의 데이터를 요청, 검색, 수신 또는 활용할 수 있고, 상기 적어도 하나의 실행 가능한 동작 중 예측되는 동작이나, 바람직한 것으로 판단되는 동작을 실행 하도록 AI 장치의 구성 요소들을 제어할 수 있다. 이때, 프로세서는 결정된 동작을 수행하기 위하여 외부 장치의 연계가 필요한 경우, 해당 외부 장치를 제 어하기 위한 제어 신호를 생성하고, 생성한 제어 신호를 해당 외부 장치에 전송할 수 있다. 프로세서는 사용자 입력에 대하여 의도 정보를 획득하고, 획득한 의도 정보에 기초하여 사용자의 요구 사 항을 결정할 수 있다. 이때, 프로세서는 음성 입력을 문자열로 변환하기 위한 STT(Speech To Text) 엔진 또는 자연어의 의도 정 보를 획득하기 위한 자연어 처리(NLP: Natural Language Processing) 엔진 중에서 적어도 하나 이상을 이용하여, 사용자 입력에 상응하는 의도 정보를 획득할 수 있다. 이때, STT 엔진 또는 NLP 엔진 중에서 적어도 하나 이상은 적어도 일부가 머신 러닝 알고리즘에 따라 학습된 인 공 신경망으로 구성될 수 있다. 그리고, STT 엔진 또는 NLP 엔진 중에서 적어도 하나 이상은 러닝 프로세서 에 의해 학습된 것이나, AI 서버의 러닝 프로세서에 의해 학습된 것이거나, 또는 이들의 분산 처리에 의해 학습된 것일 수 있다. 프로세서는 AI 장치의 동작 내용이나 동작에 대한 사용자의 피드백 등을 포함하는 이력 정보를 수집 하여 메모리 또는 러닝 프로세서에 저장하거나, AI 서버 등의 외부 장치에 전송할 수 있다. 수 집된 이력 정보는 학습 모델을 갱신하는데 이용될 수 있다. 프로세서는 메모리에 저장된 응용 프로그램을 구동하기 위하여, AI 장치의 구성 요소들 중 적어 도 일부를 제어할 수 있다. 나아가, 프로세서는 상기 응용 프로그램의 구동을 위하여, AI 장치에 포 함된 구성 요소들 중 둘 이상을 서로 조합하여 동작시킬 수 있다. 도 2는 본 발명의 일 실시 예에 따른 AI 서버를 나타낸다. 도 2를 참조하면, AI 서버는 머신 러닝 알고리즘을 이용하여 인공 신경망을 학습시키거나 학습된 인공 신 경망을 이용하는 장치를 의미할 수 있다. 여기서, AI 서버는 복수의 서버들로 구성되어 분산 처리를 수행 할 수도 있고, 5G 네트워크로 정의될 수 있다. 이때, AI 서버는 AI 장치의 일부의 구성으로 포함되어, AI 프로세싱 중 적어도 일부를 함께 수행할 수도 있다. AI 서버는 통신부, 메모리, 러닝 프로세서 및 프로세서 등을 포함할 수 있다. 통신부는 AI 장치 등의 외부 장치와 데이터를 송수신할 수 있다. 메모리는 모델 저장부를 포함할 수 있다. 모델 저장부는 러닝 프로세서을 통하여 학습 중 인 또는 학습된 모델(또는 인공 신경망, 231a)을 저장할 수 있다. 러닝 프로세서는 학습 데이터를 이용하여 인공 신경망(231a)을 학습시킬 수 있다. 학습 모델은 인공 신경 망의 AI 서버에 탑재된 상태에서 이용되거나, AI 장치 등의 외부 장치에 탑재되어 이용될 수도 있다. 학습 모델은 하드웨어, 소프트웨어 또는 하드웨어와 소프트웨어의 조합으로 구현될 수 있다. 학습 모델의 일부 또는 전부가 소프트웨어로 구현되는 경우 학습 모델을 구성하는 하나 이상의 명령어(instruction)는 메모리 에 저장될 수 있다. 프로세서는 학습 모델을 이용하여 새로운 입력 데이터에 대하여 결과 값을 추론하고, 추론한 결과 값에 기 초한 응답이나 제어 명령을 생성할 수 있다. 도 3은 본 발명의 일 실시 예에 따른 AI 시스템을 나타낸다. 도 3을 참조하면, AI 시스템은 AI 서버, 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스마트폰 (100d) 또는 가전(100e) 중에서 적어도 하나 이상이 클라우드 네트워크와 연결된다. 여기서, AI 기술이 적 용된 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스마트폰(100d) 또는 가전(100e) 등을 AI 장치(100a 내지 100e)라 칭할 수 있다. 클라우드 네트워크는 클라우드 컴퓨팅 인프라의 일부를 구성하거나 클라우드 컴퓨팅 인프라 안에 존재하는 네트워크를 의미할 수 있다. 여기서, 클라우드 네트워크는 3G 네트워크, 4G 또는 LTE(Long Term Evolution) 네트워크 또는 5G 네트워크 등을 이용하여 구성될 수 있다. 즉, AI 시스템을 구성하는 각 장치들(100a 내지 100e, 200)은 클라우드 네트워크를 통해 서로 연결될 수 있다. 특히, 각 장치들(100a 내지 100e, 200)은 기지국을 통해서 서로 통신할 수도 있지만, 기지국을 통하지 않 고 직접 서로 통신할 수도 있다. AI 서버는 AI 프로세싱을 수행하는 서버와 빅 데이터에 대한 연산을 수행하는 서버를 포함할 수 있다. AI 서버는 AI 시스템을 구성하는 AI 장치들인 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스 마트폰(100d) 또는 가전(100e) 중에서 적어도 하나 이상과 클라우드 네트워크을 통하여 연결되고, 연결된 AI 장치들(100a 내지 100e)의 AI 프로세싱을 적어도 일부를 도울 수 있다. 이때, AI 서버는 AI 장치(100a 내지 100e)를 대신하여 머신 러닝 알고리즘에 따라 인공 신경망을 학습시킬 수 있고, 학습 모델을 직접 저장하거나 AI 장치(100a 내지 100e)에 전송할 수 있다. 이때, AI 서버는 AI 장치(100a 내지 100e)로부터 입력 데이터를 수신하고, 학습 모델을 이용하여 수신한 입력 데이터에 대하여 결과 값을 추론하고, 추론한 결과 값에 기초한 응답이나 제어 명령을 생성하여 AI 장치 (100a 내지 100e)로 전송할 수 있다. 또는, AI 장치(100a 내지 100e)는 직접 학습 모델을 이용하여 입력 데이터에 대하여 결과 값을 추론하고, 추론 한 결과 값에 기초한 응답이나 제어 명령을 생성할 수도 있다. 이하에서는, 상술한 기술이 적용되는 AI 장치(100a 내지 100e)의 다양한 실시 예들을 설명한다. 여기서, 도 3에 도시된 AI 장치(100a 내지 100e)는 도 1에 도시된 AI 장치의 구체적인 실시 예로 볼 수 있다. <AI+로봇> 로봇(100a)은 AI 기술이 적용되어, 안내 로봇, 운반 로봇, 청소 로봇, 웨어러블 로봇, 엔터테인먼트 로봇, 펫 로봇, 무인 비행 로봇 등으로 구현될 수 있다. 로봇(100a)은 동작을 제어하기 위한 로봇 제어 모듈을 포함할 수 있고, 로봇 제어 모듈은 소프트웨어 모듈 또는 이를 하드웨어로 구현한 칩을 의미할 수 있다. 로봇(100a)은 다양한 종류의 센서들로부터 획득한 센서 정보를 이용하여 로봇(100a)의 상태 정보를 획득하거나, 주변 환경 및 객체를 검출(인식)하거나, 맵 데이터를 생성하거나, 이동 경로 및 주행 계획을 결정하거나, 사용 자 상호작용에 대한 응답을 결정하거나, 동작을 결정할 수 있다. 여기서, 로봇(100a)은 이동 경로 및 주행 계획을 결정하기 위하여, 라이다, 레이더, 카메라 중에서 적어도 하나 이상의 센서에서 획득한 센서 정보를 이용할 수 있다. 로봇(100a)은 적어도 하나 이상의 인공 신경망으로 구성된 학습 모델을 이용하여 상기한 동작들을 수행할 수 있 다. 예컨대, 로봇(100a)은 학습 모델을 이용하여 주변 환경 및 객체를 인식할 수 있고, 인식된 주변 환경 정보 또는 객체 정보를 이용하여 동작을 결정할 수 있다. 여기서, 학습 모델은 로봇(100a)에서 직접 학습되거나, AI서버 등의 외부 장치에서 학습된 것일 수 있다. 이때, 로봇(100a)은 직접 학습 모델을 이용하여 결과를 생성하여 동작을 수행할 수도 있지만, AI 서버 등 의 외부 장치에 센서 정보를 전송하고 그에 따라 생성된 결과를 수신하여 동작을 수행할 수도 있다. 로봇(100a)은 맵 데이터, 센서 정보로부터 검출한 객체 정보 또는 외부 장치로부터 획득한 객체 정보 중에서 적 어도 하나 이상을 이용하여 이동 경로와 주행 계획을 결정하고, 구동부를 제어하여 결정된 이동 경로와 주행 계 획에 따라 로봇(100a)을 주행시킬 수 있다. 맵 데이터에는 로봇(100a)이 이동하는 공간에 배치된 다양한 객체들에 대한 객체 식별 정보가 포함될 수 있다. 예컨대, 맵 데이터에는 벽, 문 등의 고정 객체들과 화분, 책상 등의 이동 가능한 객체들에 대한 객체 식별 정보 가 포함될 수 있다. 그리고, 객체 식별 정보에는 명칭, 종류, 거리, 위치 등이 포함될 수 있다. 또한, 로봇(100a)은 사용자의 제어/상호작용에 기초하여 구동부를 제어함으로써, 동작을 수행하거나 주행할 수 있다. 이때, 로봇(100a)은 사용자의 동작이나 음성 발화에 따른 상호작용의 의도 정보를 획득하고, 획득한 의도 정보에 기초하여 응답을 결정하여 동작을 수행할 수 있다. <AI+자율주행> 자율 주행 차량(100b)은 AI 기술이 적용되어, 이동형 로봇, 차량, 무인 비행체 등으로 구현될 수 있다. 자율 주행 차량(100b)은 자율 주행 기능을 제어하기 위한 자율 주행 제어 모듈을 포함할 수 있고, 자율 주행 제 어 모듈은 소프트웨어 모듈 또는 이를 하드웨어로 구현한 칩을 의미할 수 있다. 자율 주행 제어 모듈은 자율 주 행 차량(100b)의 구성으로써 내부에 포함될 수도 있지만, 자율 주행 차량(100b)의 외부에 별도의 하드웨어로 구 성되어 연결될 수도 있다. 자율 주행 차량(100b)은 다양한 종류의 센서들로부터 획득한 센서 정보를 이용하여 자율 주행 차량(100b)의 상 태 정보를 획득하거나, 주변 환경 및 객체를 검출(인식)하거나, 맵 데이터를 생성하거나, 이동 경로 및 주행 계 획을 결정하거나, 동작을 결정할 수 있다. 여기서, 자율 주행 차량(100b)은 이동 경로 및 주행 계획을 결정하기 위하여, 로봇(100a)과 마찬가지로, 라이다, 레이더, 카메라 중에서 적어도 하나 이상의 센서에서 획득한 센서 정보를 이용할 수 있다. 특히, 자율 주행 차량(100b)은 시야가 가려지는 영역이나 일정 거리 이상의 영역에 대한 환경이나 객체는 외부 장치들로부터 센서 정보를 수신하여 인식하거나, 외부 장치들로부터 직접 인식된 정보를 수신할 수 있다. 자율 주행 차량(100b)은 적어도 하나 이상의 인공 신경망으로 구성된 학습 모델을 이용하여 상기한 동작들을 수 행할 수 있다. 예컨대, 자율 주행 차량(100b)은 학습 모델을 이용하여 주변 환경 및 객체를 인식할 수 있고, 인 식된 주변 환경 정보 또는 객체 정보를 이용하여 주행 동선을 결정할 수 있다. 여기서, 학습 모델은 자율 주행 차량(100b)에서 직접 학습되거나, AI 서버 등의 외부 장치에서 학습된 것일 수 있다. 이때, 자율 주행 차량(100b)은 직접 학습 모델을 이용하여 결과를 생성하여 동작을 수행할 수도 있지만, AI 서 버 등의 외부 장치에 센서 정보를 전송하고 그에 따라 생성된 결과를 수신하여 동작을 수행할 수도 있다. 자율 주행 차량(100b)은 맵 데이터, 센서 정보로부터 검출한 객체 정보 또는 외부 장치로부터 획득한 객체 정보 중에서 적어도 하나 이상을 이용하여 이동 경로와 주행 계획을 결정하고, 구동부를 제어하여 결정된 이동 경로 와 주행 계획에 따라 자율 주행 차량(100b)을 주행시킬 수 있다. 맵 데이터에는 자율 주행 차량(100b)이 주행하는 공간(예컨대, 도로)에 배치된 다양한 객체들에 대한 객체 식별 정보가 포함될 수 있다. 예컨대, 맵 데이터에는 가로등, 바위, 건물 등의 고정 객체들과 차량, 보행자 등의 이 동 가능한 객체들에 대한 객체 식별 정보가 포함될 수 있다. 그리고, 객체 식별 정보에는 명칭, 종류, 거리, 위 치 등이 포함될 수 있다. 또한, 자율 주행 차량(100b)은 사용자의 제어/상호작용에 기초하여 구동부를 제어함으로써, 동작을 수행하거나 주행할 수 있다. 이때, 자율 주행 차량(100b)은 사용자의 동작이나 음성 발화에 따른 상호작용의 의도 정보를 획득하고, 획득한 의도 정보에 기초하여 응답을 결정하여 동작을 수행할 수 있다. <AI+XR> XR 장치(100c)는 AI 기술이 적용되어, HMD(Head-Mount Display), 차량에 구비된 HUD(Head-Up Display), 텔레비 전, 휴대폰, 스마트 폰, 컴퓨터, 웨어러블 디바이스, 가전 기기, 디지털 사이니지, 차량, 고정형 로봇이나 이동형 로봇 등으로 구현될 수 있다. XR 장치(100c)는 다양한 센서들을 통해 또는 외부 장치로부터 획득한 3차원 포인트 클라우드 데이터 또는 이미 지 데이터를 분석하여 3차원 포인트들에 대한 위치 데이터 및 속성 데이터를 생성함으로써 주변 공간 또는 현실 객체에 대한 정보를 획득하고, 출력할 XR 객체를 렌더링하여 출력할 수 있다. 예컨대, XR 장치(100c)는 인식된 물체에 대한 추가 정보를 포함하는 XR 객체를 해당 인식된 물체에 대응시켜 출력할 수 있다. XR 장치(100c)는 적어도 하나 이상의 인공 신경망으로 구성된 학습 모델을 이용하여 상기한 동작들을 수행할 수 있다. 예컨대, XR 장치(100c)는 학습 모델을 이용하여 3차원 포인트 클라우드 데이터 또는 이미지 데이터에서 현실 객체를 인식할 수 있고, 인식한 현실 객체에 상응하는 정보를 제공할 수 있다. 여기서, 학습 모델은 XR 장 치(100c)에서 직접 학습되거나, AI 서버 등의 외부 장치에서 학습된 것일 수 있다. 이때, XR 장치(100c)는 직접 학습 모델을 이용하여 결과를 생성하여 동작을 수행할 수도 있지만, AI 서버 등의 외부 장치에 센서 정보를 전송하고 그에 따라 생성된 결과를 수신하여 동작을 수행할 수도 있다. <AI+로봇+자율주행> 로봇(100a)은 AI 기술 및 자율 주행 기술이 적용되어, 안내 로봇, 운반 로봇, 청소 로봇, 웨어러블 로봇, 엔터 테인먼트 로봇, 펫 로봇, 무인 비행 로봇 등으로 구현될 수 있다. AI 기술과 자율 주행 기술이 적용된 로봇(100a)은 자율 주행 기능을 가진 로봇 자체나, 자율 주행 차량(100b)과 상호작용하는 로봇(100a) 등을 의미할 수 있다. 자율 주행 기능을 가진 로봇(100a)은 사용자의 제어 없이도 주어진 동선에 따라 스스로 움직이거나, 동선을 스 스로 결정하여 움직이는 장치들을 통칭할 수 있다. 자율 주행 기능을 가진 로봇(100a) 및 자율 주행 차량(100b)은 이동 경로 또는 주행 계획 중 하나 이상을 결정 하기 위해 공통적인 센싱 방법을 사용할 수 있다. 예를 들어, 자율 주행 기능을 가진 로봇(100a) 및 자율 주행 차량(100b)은 라이다, 레이더, 카메라를 통해 센싱된 정보를 이용하여, 이동 경로 또는 주행 계획 중 하나 이상 을 결정할 수 있다. 자율 주행 차량(100b)과 상호작용하는 로봇(100a)은 자율 주행 차량(100b)과 별개로 존재하면서, 자율 주행 차 량(100b)의 내부에서 자율 주행 기능에 연계되거나, 자율 주행 차량(100b)에 탑승한 사용자와 연계된 동작을 수 행할 수 있다. 이때, 자율 주행 차량(100b)과 상호작용하는 로봇(100a)은 자율 주행 차량(100b)을 대신하여 센서 정보를 획득 하여 자율 주행 차량(100b)에 제공하거나, 센서 정보를 획득하고 주변 환경 정보 또는 객체 정보를 생성하여 자 율 주행 차량(100b)에 제공함으로써, 자율 주행 차량(100b)의 자율 주행 기능을 제어하거나 보조할 수 있다. 또는, 자율 주행 차량(100b)과 상호작용하는 로봇(100a)은 자율 주행 차량(100b)에 탑승한 사용자를 모니터링하 거나 사용자와의 상호작용을 통해 자율 주행 차량(100b)의 기능을 제어할 수 있다. 예컨대, 로봇(100a)은 운전 자가 졸음 상태인 경우로 판단되는 경우, 자율 주행 차량(100b)의 자율 주행 기능을 활성화하거나 자율 주행 차 량(100b)의 구동부의 제어를 보조할 수 있다. 여기서, 로봇(100a)이 제어하는 자율 주행 차량(100b)의 기능에는 단순히 자율 주행 기능뿐만 아니라, 자율 주행 차량(100b)의 내부에 구비된 네비게이션 시스템이나 오디오 시스 템에서 제공하는 기능도 포함될 수 있다. 또는, 자율 주행 차량(100b)과 상호작용하는 로봇(100a)은 자율 주행 차량(100b)의 외부에서 자율 주행 차량 (100b)에 정보를 제공하거나 기능을 보조할 수 있다. 예컨대, 로봇(100a)은 스마트 신호등과 같이 자율 주행 차 량(100b)에 신호 정보 등을 포함하는 교통 정보를 제공할 수도 있고, 전기 차량의 자동 전기 충전기와 같이 자 율 주행 차량(100b)과 상호작용하여 충전구에 전기 충전기를 자동으로 연결할 수도 있다. <AI+로봇+XR> 로봇(100a)은 AI 기술 및 XR 기술이 적용되어, 안내 로봇, 운반 로봇, 청소 로봇, 웨어러블 로봇, 엔터테인먼트 로봇, 펫 로봇, 무인 비행 로봇, 드론 등으로 구현될 수 있다. XR 기술이 적용된 로봇(100a)은 XR 영상 내에서의 제어/상호작용의 대상이 되는 로봇을 의미할 수 있다. 이 경 우, 로봇(100a)은 XR 장치(100c)와 구분되며 서로 연동될 수 있다. XR 영상 내에서의 제어/상호작용의 대상이 되는 로봇(100a)은 카메라를 포함하는 센서들로부터 센서 정보를 획 득하면, 로봇(100a) 또는 XR 장치(100c)는 센서 정보에 기초한 XR 영상을 생성하고, XR 장치(100c)는 생성된 XR 영상을 출력할 수 있다. 그리고, 이러한 로봇(100a)은 XR 장치(100c)를 통해 입력되는 제어 신호 또는 사용자의 상호작용에 기초하여 동작할 수 있다. 예컨대, 사용자는 XR 장치(100c) 등의 외부 장치를 통해 원격으로 연동된 로봇(100a)의 시점에 상응하는 XR 영 상을 확인할 수 있고, 상호작용을 통하여 로봇(100a)의 자율 주행 경로를 조정하거나, 동작 또는 주행을 제어하 거나, 주변 객체의 정보를 확인할 수 있다. <AI+자율주행+XR> 자율 주행 차량(100b)은 AI 기술 및 XR 기술이 적용되어, 이동형 로봇, 차량, 무인 비행체 등으로 구현될 수 있 다. XR 기술이 적용된 자율 주행 차량(100b)은 XR 영상을 제공하는 수단을 구비한 자율 주행 차량이나, XR 영상 내 에서의 제어/상호작용의 대상이 되는 자율 주행 차량 등을 의미할 수 있다. 특히, XR 영상 내에서의 제어/상호 작용의 대상이 되는 자율 주행 차량(100b)은 XR 장치(100c)와 구분되며 서로 연동될 수 있다. XR 영상을 제공하는 수단을 구비한 자율 주행 차량(100b)은 카메라를 포함하는 센서들로부터 센서 정보를 획득 하고, 획득한 센서 정보에 기초하여 생성된 XR 영상을 출력할 수 있다. 예컨대, 자율 주행 차량(100b)은 HUD를 구비하여 XR 영상을 출력함으로써, 탑승자에게 현실 객체 또는 화면 속의 객체에 대응되는 XR 객체를 제공할 수 있다. 이때, XR 객체가 HUD에 출력되는 경우에는 XR 객체의 적어도 일부가 탑승자의 시선이 향하는 실제 객체에 오버 랩되도록 출력될 수 있다. 반면, XR 객체가 자율 주행 차량(100b)의 내부에 구비되는 디스플레이에 출력되는 경 우에는 XR 객체의 적어도 일부가 화면 속의 객체에 오버랩되도록 출력될 수 있다. 예컨대, 자율 주행 차량 (100b)은 차로, 타 차량, 신호등, 교통 표지판, 이륜차, 보행자, 건물 등과 같은 객체와 대응되는 XR 객체들을 출력할 수 있다. XR 영상 내에서의 제어/상호작용의 대상이 되는 자율 주행 차량(100b)은 카메라를 포함하는 센서들로부터 센서 정보를 획득하면, 자율 주행 차량(100b) 또는 XR 장치(100c)는 센서 정보에 기초한 XR 영상을 생성하고, XR 장 치(100c)는 생성된 XR 영상을 출력할 수 있다. 그리고, 이러한 자율 주행 차량(100b)은 XR 장치(100c) 등의 외 부 장치를 통해 입력되는 제어 신호 또는 사용자의 상호작용에 기초하여 동작할 수 있다. 다음은 인공지능에 대하여 간단히 설명한다. 인공 지능(artificial intelligence, AI)은 인간의 지능으로 할 수 있는 사고, 학습, 자기계발 등을 컴퓨터가 할 수 있도록 하는 방법을 연구하는 컴퓨터 공학 및 정보기술의 한 분야로, 컴퓨터가 인간의 지능적인 행동을 모방할 수 있도록 하는 것을 의미한다. 또한, 인공지능은 그 자체로 존재하는 것이 아니라, 컴퓨터 과학의 다른 분야와 직간접으로 많은 관련을 맺고 있다. 특히 현대에는 정보기술의 여러 분야에서 인공지능적 요소를 도입하여, 그 분야의 문제 풀이에 활용하려 는 시도가 매우 활발하게 이루어지고 있다. 머신 러닝(machine learning)은 인공지능의 한 분야로, 컴퓨터에 명시적인 프로그램 없이 배울 수 있는 능력을 부여하는 연구 분야이다. 구체적으로 머신 러닝은, 경험적 데이터를 기반으로 학습을 하고 예측을 수행하고 스스로의 성능을 향상시키는 시스템과 이를 위한 알고리즘을 연구하고 구축하는 기술이라 할 수 있다. 머신 러닝의 알고리즘들은 엄격하게 정해진 정적인 프로그램 명령들을 수행하는 것이라기보다, 입력 데이터를 기반으로 예측이나 결정을 이끌어내기 위해 특정한 모델을 구축하는 방식을 취한다. 용어 ‘머신 러닝’은 용어 ‘기계 학습’과 혼용되어 사용될 수 있다. 기계 학습에서 데이터를 어떻게 분류할 것인가를 놓고, 많은 기계 학습 알고리즘이 개발되었다. 의사결정나무 (Decision Tree)나 베이지안 망(Bayesian network), 서포트벡터머신(SVM: support vector machine), 그리고 인 공 신경망(ANN: Artificial Neural Network) 등이 대표적이다. 의사결정나무는 의사결정규칙(Decision Rule)을 나무구조로 도표화하여 분류와 예측을 수행하는 분석방법이다. 베이지안 망은 다수의 변수들 사이의 확률적 관계(조건부독립성: conditional independence)를 그래프 구조로 표현하는 모델이다. 베이지안 망은 비지도 학습(unsupervised learning)을 통한 데이터마이닝(data mining)에 적합하다. 서포트벡터머신은 패턴인식과 자료분석을 위한 지도 학습(supervised learning)의 모델이며, 주로 분류와 회귀 분석을 위해 사용한다. 인공신경망은 생물학적 뉴런의 동작원리와 뉴런간의 연결 관계를 모델링한 것으로 노드(node) 또는 처리 요소 (processing element)라고 하는 다수의 뉴런들이 레이어(layer) 구조의 형태로 연결된 정보처리 시스템이다. 인공 신경망은 기계 학습에서 사용되는 모델로써, 기계학습과 인지과학에서 생물학의 신경망(동물의 중추신경계 중 특히 뇌)에서 영감을 얻은 통계학적 학습 알고리즘이다. 구체적으로 인공신경망은 시냅스(synapse)의 결합으로 네트워크를 형성한 인공 뉴런(노드)이 학습을 통해 시냅 스의 결합 세기를 변화시켜, 문제 해결 능력을 가지는 모델 전반을 의미할 수 있다. 용어 인공신경망은 용어 뉴럴 네트워크(Neural Network)와 혼용되어 사용될 수 있다. 인공신경망은 복수의 레이어(layer)를 포함할 수 있고, 레이어들 각각은 복수의 뉴런(neuron)을 포함할 수 있다. 또한 인공신경망은 뉴런과 뉴런을 연결하는 시냅스를 포함할 수 있다. 인공 신경망은 일반적으로 다음의 세가지 인자, 즉 다른 레이어의 뉴런들 사이의 연결 패턴 연결의 가 중치를 갱신하는 학습 과정 이전 레이어로부터 수신되는 입력에 대한 가중 합으로부터 출력값을 생성하는 활성화 함수에 의해 정의될 수 있다. 인공 신경망은, DNN(Deep Neural Network), RNN(Recurrent Neural Network), BRDNN(Bidirectional Recurrent Deep Neural Network), MLP(Multilayer Perceptron), CNN(Convolutional Neural Network)와 같은 방식의 네트 워크 모델들을 포함할 수 있으나, 이에 한정되지 않는다. 본 명세서에서 용어 ‘레이어’는 용어 ‘계층’과 혼용되어 사용될 수 있다. 인공신경망은 계층 수에 따라 단층 신경망(Single-Layer Neural Networks)과 다층 신경망(Multi-Layer Neural Networks)으로 구분된다. 일반적인 단층 신경망은, 입력층과 출력층으로 구성된다. 또한 일반적인 다층 신경망은 입력층(Input Layer)과 하나 이상의 은닉층(Hidden Layer), 출력층(Output Layer)으로 구성된다. 입력층은 외부의 자료들을 받아들이는 층으로서, 입력층의 뉴런 수는 입력되는 변수의 수와 동일하며, 은닉층은 입력층과 출력층 사이에 위치하며 입력층으로부터 신호를 받아 특성을 추출하여 출력층으로 전달한다. 출력층은 은닉층으로부터 신호를 받고, 수신한 신호에 기반한 출력 값을 출력한다. 뉴런간의 입력신호는 각각의 연결강도 (가중치)와 곱해진 후 합산되며 이 합이 뉴런의 임계치보다 크면 뉴런이 활성화되어 활성화 함수를 통하여 획득 한 출력값을 출력한다. 한편 입력층과 출력 층 사이에 복수의 은닉층을 포함하는 심층 신경망은, 기계 학습 기술의 한 종류인 딥 러닝 을 구현하는 대표적인 인공 신경망일 수 있다. 한편 용어 ‘딥 러닝’은 용어 ‘심층 학습’과 혼용되어 사용될 수 있다. 인공 신경망은 훈련 데이터(training data)를 이용하여 학습(training)될 수 있다. 여기서 학습이란, 입력 데이 터를 분류(classification)하거나 회귀분석(regression)하거나 군집화(clustering)하는 등의 목적을 달성하기 위하여, 학습 데이터를 이용하여 인공 신경망의 파라미터(parameter)를 결정하는 과정을 의미할 수 있다. 인공 신경망의 파라미터의 대표적인 예시로써, 시냅스에 부여되는 가중치(weight)나 뉴런에 적용되는 편향(bias)을 들 수 있다. 훈련 데이터에 의하여 학습된 인공 신경망은, 입력 데이터를 입력 데이터가 가지는 패턴에 따라 분류하거나 군 집화 할 수 있다. 한편 훈련 데이터를 이용하여 학습된 인공 신경망을, 본 명세서에서는 학습 모델(a trained model)이라 명칭 할 수 있다. 다음은 인공 신경망의 학습 방식에 대하여 설명한다. 인공 신경망의 학습 방식은 크게, 지도 학습, 비 지도 학습, 준 지도 학습(Semi-Supervised Learning), 강화 학 습(Reinforcement Learning)으로 분류될 수 있다. 지도 학습은 훈련 데이터로부터 하나의 함수를 유추해내기 위한 기계 학습의 한 방법이다. 그리고 이렇게 유추되는 함수 중, 연속 적인 값을 출력하는 것을 회귀분석(Regression)이라 하고, 입력 벡터의 클래스(class)를 예측하여 출력하는 것을 분류(Classification)라고 할 수 있다. 지도 학습에서는, 훈련 데이터에 대한 레이블(label)이 주어진 상태에서 인공 신경망을 학습시킨다. 여기서 레이블이란, 훈련 데이터가 인공 신경망에 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결 과 값)을 의미할 수 있다. 본 명세서에서는 훈련 데이터가 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결과값)을 레이블 또 는 레이블링 데이터(labeling data)이라 명칭 한다. 또한 본 명세서에서는, 인공 신경망의 학습을 위하여 훈련 데이터에 레이블을 설정하는 것을, 훈련 데이터에 레 이블링 데이터를 레이블링(labeling) 한다고 명칭 한다. 이 경우 훈련 데이터와 훈련 데이터에 대응하는 레이블)은 하나의 트레이닝 셋(training set)을 구성하고, 인공 신경망에는 트레이닝 셋의 형태로 입력될 수 있다. 한편 훈련 데이터는 복수의 특징(feature)을 나타내고, 훈련 데이터에 레이블이 레이블링 된다는 것은 훈련 데 이터가 나타내는 특징에 레이블이 달린다는 것을 의미할 수 있다. 이 경우 훈련 데이터는 입력 객체의 특징을 벡터 형태로 나타낼 수 있다. 인공 신경망은 훈련 데이터와 레이블링 데이터를 이용하여, 훈련 데이터와 레이블링 데이터의 연관 관계에 대한 함수를 유추할 수 있다. 그리고, 인공 신경망에서 유추된 함수에 대한 평가를 통해 인공 신경망의 파라미터가 결정(최적화)될 수 있다. 비 지도 학습은 기계 학습의 일종으로, 훈련 데이터에 대한 레이블이 주어지지 않는다. 구체적으로, 비 지도 학습은, 훈련 데이터 및 훈련 데이터에 대응하는 레이블의 연관 관계 보다는, 훈련 데이터 자체에서 패턴을 찾아 분류하도록 인공 신경망을 학습시키는 학습 방법일 수 있다. 비 지도 학습의 예로는, 군집화 또는 독립 성분 분석(Independent Component Analysis)을 들 수 있다. 본 명세서에서 용어 ‘군집화’는 용어 ‘클러스터링’과 혼용되어 사용될 수 있다. 비지도 학습을 이용하는 인공 신경망의 일례로 생성적 적대 신경망(GAN: Generative Adversarial Network), 오 토 인코더(AE: Autoencoder)를 들 수 있다. 생성적 적대 신경망이란, 생성기(generator)와 판별기(discriminator), 두 개의 서로 다른 인공지능이 경쟁하며 성능을 개선하는 머신 러닝 방법이다. 이 경우 생성기는 새로운 데이터를 창조하는 모형으로, 원본 데이터를 기반으로 새로운 데이터를 생성할 수 있 다. 또한 판별기는 데이터의 패턴을 인식하는 모형으로, 입력된 데이터가 원본 데이터인지 또는 생성기에서 생성한 새로운 데이터인지 여부를 감별하는 역할을 수행할 수 있다. 그리고 생성기는 판별기를 속이지 못한 데이터를 입력 받아 학습하며, 판별기는 생성기로부터 속은 데이터를 입 력 받아 학습할 수 있다. 이에 따라 생성기는 판별기를 최대한 잘 속이도록 진화할 수 있고, 판별기는 원본 데 이터와 생성기에 의해 생성된 데이터를 잘 구분하도록 진화할 수 있다. 오토 인코더는 입력 자체를 출력으로 재현하는 것을 목표로 하는 신경망이다. 오토 인코더는 입력층, 적어도 하나의 은닉층 및 출력층을 포함한다. 이 경우 은닉 계층의 노드 수가 입력 계층의 노드 수보다 적으므로 데이터의 차원이 줄어들게 되며, 이에 따라 압축 또는 인코딩이 수행되게 된다. 또한 은닉 계층에서 출력한 데이터는 출력 계층으로 들어간다. 이 경우 출력 계층의 노드 수는 은닉 계층의 노 드 수보다 많으므로, 데이터의 차원이 늘어나게 되며, 이에 따라 압축 해제 또는 디코딩이 수행되게 된다. 한편 오토 인코더는 학습을 통해 뉴런의 연결 강도를 조절함으로써 입력 데이터가 은닉층 데이터로 표현된다. 은닉층에서는 입력층보다 적은 수의 뉴런으로 정보를 표현하는데 입력 데이터를 출력으로 재현할 수 있다는 것 은, 은닉층이 입력 데이터로부터 숨은 패턴을 발견하여 표현했다는 것을 의미할 수 있다. 준 지도 학습은 기계 학습의 일종으로, 레이블이 주어진 훈련 데이터와 레이블이 주어지지 않은 훈련 데이터를 모두 사용하는 학습 방법을 의미할 수 있다. 준 지도 학습의 기법 중 하나로, 레이블이 주어지지 않은 훈련 데이터의 레이블을 추론한 후 추론된 라벨을 이 용하여 학습을 수행하는 기법이 있으며, 이러한 기법은 레이블링에 소요되는 비용이 큰 경우에 유용하게 사용될 수 있다. 강화 학습은, 에이전트(Agent)가 매 순간 어떤 행동을 해야 좋을지 판단할 수 있는 환경이 주어진다면, 데이터 없이 경험으로 가장 좋을 길을 찾을 수 있다는 이론이다. 강화 학습은 주로 마르코프 결정 과정(MDP: Markov Decision Process)에 의하여 수행될 수 있다. 마르코프 결정 과정을 설명하면, 첫 번째로 에이전트가 다음 행동을 하기 위해 필요한 정보들이 구성된 환경이 주어지며, 두 번째로 그 환경에서 에이전트가 어떻게 행동할지 정의하고, 세 번째로 에이전트가 무엇을 잘하면 보상(reward)를 주고 무엇을 못하면 벌점(penalty)을 줄지 정의하며, 네 번째로 미래의 보상이 최고점에 이를 때까지 반복 경험하여 최적의 정책(policy)을 도출하게 된다. 인공 신경망은 모델의 구성, 활성 함수(Activation Function), 손실 함수(Loss Function) 또는 비용 함수(Cost Function), 학습 알고리즘, 최적화 알고리즘 등에 의해 그 구조가 특정되며, 학습 전에 하이퍼파라미터 (Hyperparameter)가 미리 설정되고, 이후에 학습을 통해 모델 파라미터(Model Parameter)가 설정되어 내용이 특 정될 수 있다. 예컨대, 인공 신경망의 구조를 결정하는 요소에는 은닉층의 개수, 각 은닉층에 포함된 은닉 노드의 개수, 입력 특징 벡터(Input Feature Vector), 대상 특징 벡터(Target Feature Vector) 등이 포함될 수 있다. 하이퍼파라미터는 모델 파라미터의 초기값 등과 같이 학습을 위하여 초기에 설정하여야 하는 여러 파라미터들을 포함한다. 그리고, 모델 파라미터는 학습을 통하여 결정하고자 하는 여러 파라미터들을 포함한다. 예컨대, 하이퍼파라미터에는 노드 간 가중치 초기값, 노드 간 편향 초기값, 미니 배치(Mini-batch) 크기, 학습 반복 횟수, 학습률(Learning Rate) 등이 포함될 수 있다. 그리고, 모델 파라미터에는 노드 간 가중치, 노드 간 편향 등이 포함될 수 있다. 손실 함수는 인공 신경망의 학습 과정에서 최적의 모델 파라미터를 결정하기 위한 지표(기준)로 이용될 수 있다. 인공 신경망에서 학습은 손실 함수를 줄이기 위하여 모델 파라미터들을 조작하는 과정을 의미하며, 학습 의 목적은 손실 함수를 최소화하는 모델 파라미터를 결정하는 것으로 볼 수 있다. 손실 함수는 주로 평균 제곱 오차(MSE: Mean Squared Error) 또는 교차 엔트로피 오차(CEE, Cross Entropy Error)를 사용할 수 있으며, 본 발명이 이에 한정되지는 않는다. 교차 엔트로피 오차는 정답 레이블이 원 핫 인코딩(one-hot encoding)된 경우에 사용될 수 있다. 원 핫 인코딩 은 정답에 해당하는 뉴런에 대하여만 정답 레이블 값을 1로, 정답이 아닌 뉴런은 정답 레이블 값이 0으로 설정 하는 인코딩 방법이다. 머신 러닝 또는 딥 러닝에서는 손실 함수를 최소화하기 위하여 학습 최적화 알고리즘을 이용할 수 있으며, 학습 최적화 알고리즘에는 경사 하강법(GD: Gradient Descent), 확률적 경사 하강법(SGD: Stochastic Gradient Descent), 모멘텀(Momentum), NAG(Nesterov Accelerate Gradient), Adagrad, AdaDelta, RMSProp, Adam, Nadam 등이 있다. 경사 하강법은 현재 상태에서 손실 함수의 기울기를 고려하여 손실 함수값을 줄이는 방향으로 모델 파라미터를 조정하는 기법이다. 모델 파라미터를 조정하는 방향은 스텝(step) 방향, 조정하는 크기는 스텝 사이즈(size)라고 칭한다. 이때, 스텝 사이즈는 학습률을 의미할 수 있다. 경사 하강법은 손실 함수를 각 모델 파라미터들로 편미분하여 기울기를 획득하고, 모델 파라미터들을 획득한 기 울기 방향으로 학습률만큼 변경하여 갱신할 수 있다. 확률적 경사 하강법은 학습 데이터를 미니 배치로 나누고, 각 미니 배치마다 경사 하강법을 수행하여 경사 하강 의 빈도를 높인 기법이다. Adagrad, AdaDelta 및 RMSProp는 SGD에서 스텝 사이즈를 조절하여 최적화 정확도를 높이는 기법이다. SGD에서 모멘텀 및 NAG는 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. Adam은 모멘텀과 RMSProp를 조합하여 스텝 사이즈와 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. Nadam은 NAG와 RMSProp를 조합하여 스 텝 사이즈와 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. 인공 신경망의 학습 속도와 정확도는 인공 신경망의 구조와 학습 최적화 알고리즘의 종류뿐만 아니라, 하이퍼파 라미터에 크게 좌우되는 특징이 있다. 따라서, 좋은 학습 모델을 획득하기 위하여는 적당한 인공 신경망의 구조 와 학습 알고리즘을 결정하는 것뿐만 아니라, 적당한 하이퍼파라미터를 설정하는 것이 중요하다. 통상적으로 하이퍼파라미터는 실험적으로 다양한 값으로 설정해가며 인공 신경망을 학습시켜보고, 학습 결과 안 정적인 학습 속도와 정확도를 제공하는 최적의 값으로 설정한다. 한편 용어 “AI 장치”는 용어 “인공지능 서버”와 혼용되어 사용될 수 있다. 한편 입력부는 통신부를 포함할 수 있으며, 입력 데이터는 입력부를 통하여 인공지능 서버에 입력될 수 있다. 도 4는 본 발명의 실시 예에 따른 인공지능 서버의 동작 방법을 설명하기 위한 도면이다. 본 발명의 실시 예에 따른 인공지능 서버는, 인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 제1 입력 데이터 및 제2 입력 데이터를 이용하여 오답을 야기한 제1 도메인을 획득하는 단계(S410), 제1 도메인에 대하여 도메인 적 응(domain adaptation)이 되도록 인공지능 모델을 트레이닝 하는 단계(S430), 트레이닝 된 인공지능 모델이 제3 입력 데이터에 대하여 출력한 제3 출력 값이 정답이고 트레이닝 된 인공지능 모델이 제4 입력 데이터에 대하여 출력한 제4 출력 값이 오답인 경우, 제3 입력 데이터 및 제4 입력 데이터를 이용하여 오답을 야기한 제2 도메인 을 획득하는 단계(S450) 및 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지 능 모델을 재 트레이닝 하는 단계(S470)를 포함할 수 있다. 도 5 내지 도 7은 본 발명의 실시 예에 따른, 오답을 야기한 도메인을 획득하는 방법을 설명하기 위한 도면이다. 도 5는 본 발명의 실시 예에 따른, 영상 인식 모델에서의 도메인을 설명하기 위한 도면이다. 본 발명의 실시 예에 따른 인공지능 모델은 영상 인식 모델일 수 있다. 또한 영상 인식 모델은, 영상을 분류 (classification)하도록 트레이닝 된 뉴럴 네트워크일 수 있다. 구체적으로 학습 장치는 훈련용 영상 데이터 및 훈련용 영상 데이터에 대응하는 레이블링 데이터를 이용하 여 뉴럴 네트워크를 트레이닝 함으로써 영상 인식 모델을 생성할 수 있다. 여기서 레이블링 데이터는, 영상의 명칭일 수 있다. 한편 영상 인식 모델은 단말기에 탑재될 수 있다. 또한 영상 데이터가 입력되면, 영상 인식 모델은 입력된 영상 데이터에 대응하는 결과 값을 출력할 수 있다. 구체적으로 영상 데이터가 입력되면, 영상 인식 모델은 영상 데이터로부터 하나 이상의 특징을 추출할 수 있다. 또한 영상 인식 모델은, 하나 이상의 특징을 이용하여, 수신된 영상 데이터를 복수의 클래스 중 어느 하나의 클 래스로 분류한 결과 값을 출력할 수 있다. 여기서 영상 인식 모델이 추출하는 특징(feature)은, 입력 데이터의 명도, 채도, 대조비, 질감(texture), 색상, 선명도(sharpness) 등을 나타낼 수 있다. 한편 도메인은, 영상 인식 모델이 영상 데이터를 분류하는데 영향을 미치는 영상 데이터의 성분을 의미할 수 있 다. 예를 들어 도메인은, 명도, 채도, 대조비, 질감(texture), 색상, 선명도(sharpness) 등을 포함할 수 있다. 그리고 영상 인식 모델이 영상 데이터를 분류하는데 영향을 미치는 제1 성분(예를 들어 명도)은 제1 도메인, 영 상 인식 모델이 영상 데이터를 분류하는데 영향을 미치는 제2 성분(예를 들어 색상)은 제2 도메인일 수 있다. 한편 영상 데이터가 수신되면, 영상 인식 모델은 복수의 도메인을 나타내는 특징(feature) 들을 추출하고, 추출 된 특징(feature)을 이용하여 영상 데이터를 분류하여 결과 값을 출력할 수 있다. 이 경우 결과 값은 정답일수 도 또는 오답일 수도 있다. 예를 들어 도 5에서 도시하는 바와 같이, 고양이의 영상 데이터가 입력되는 경우, 영상 인식 모델은 정답인 제1 출력 값(고양이)를 출력할 수도 있으며, 오답인 제2 출력 값(개)를 출력할 수 있다. 그리고 오답이 출력되는 원인은, 실험실 환경에서 영상 인식 모델을 생성하는데 사용된 훈련용 입력 데이터의 특징(feature)과, 실제 사용 환경에서 영상 인식 모델에 제공된 입력 데이터의 특징(feature)이 상이한 것일 수 있다. 예를 들어 영상 인식 모델을 생성하는데 사용된 훈련용 입력 데이터는 명도가 높은 환경에서 수집된 영상 데이 터일 수 있다. 이에 반해 실제 사용 환경에서 영상 인식 모델에 제공된 입력 데이터는 명도가 낮은 환경에서 수 집된 영상 데이터일 수 있다. 그리고 명도가 낮은 환경에서 수집되는 영상 데이터에 대한 트레이닝이 미비하였기 때문에, 영상 인식 모델은 오답을 출력할 수 있으며 이에 따라 영상 인식 모델의 성능이 낮아지는 문제가 발생한다. 도 6은 본 발명의 실시 예에 따른, 음성 인식 모델에서의 도메인을 설명하기 위한 도면이다. 본 발명의 실시 예에 따른 인공지능 모델은 음성 인식 모델일 수 있다. 또한 음성 인식 모델은, 음성을 분류 (classification)하도록 트레이닝 된 뉴럴 네트워크일 수 있다. 구체적으로 학습 장치는 훈련용 음성 데이터 및 훈련용 음성 데이터에 대응하는 레이블링 데이터를 이용하 여 뉴럴 네트워크를 트레이닝 함으로써 음성 인식 모델을 생성할 수 있다. 여기서 레이블링 데이터는, 음성 데 이터에 대응하는 문자열이나 음성 데이터의 언어적 의미일 수 있다. 한편 음성 인식 모델은 단말기에 탑재될 수 있다. 또한 음성 데이터가 입력되면, 음성 인식 모델은 입력된 음성 데이터에 대응하는 결과 값을 출력할 수 있다. 구체적으로 음성 데이터가 입력되면, 음성 인식 모델은 음성 데이터로부터 하나 이상의 특징을 추출할 수 있다. 또한 음성 인식 모델은, 하나 이상의 특징을 이용하여, 수신된 음성 데이터를 복수의 클래스 중 어느 하나의 클 래스로 분류한 결과 값을 출력할 수 있다. 여기서 음성 인식 모델이 추출하는 특징(feature)은, 입력 데이터의 신호의 크기(signal level), 노이즈의 크기 (noise level), 신호 대 잡음비(SNR), 피크 값(peak value), 발화 속도(speech speed) 또는 화자 정보(성별, 나이 또는 지역 중 적어도 하나를) 등을 나타낼 수 있다. 한편 도메인은, 음성 인식 모델이 음성 데이터를 분류하는데 영향을 미치는 음성 데이터의 성분을 의미할 수 있 다. 예를 들어 도메인은, 신호의 크기(signal level), 노이즈의 크기(noise level), 신호 대 잡음비(SNR), 피크 값 (peak value), 발화 속도(speech speed), 성별, 나이 또는 지역 등을 포함할 수 있다. 그리고 음성 인식 모델이 음성 데이터를 분류하는데 영향을 미치는 제1 성분(예를 들어 성별)은 제1 도메인, 음 성 인식 모델이 음성 데이터를 분류하는데 영향을 미치는 제2 성분(예를 들어 노이즈의 크기)은 제2 도메인일 수 있다. 한편 음성 데이터가 수신되면, 음성 인식 모델은 복수의 도메인을 나타내는 특징(feature) 들을 추출하고, 추출 된 특징(feature)을 이용하여 음성 데이터를 분류하여 결과 값을 출력할 수 있다. 이 경우 결과 값은 정답일수 도 또는 오답일 수도 있다. 예를 들어 도 6에서 도시하는 바와 같이, “안녕하세요”라는 음성 데이터가 입력되는 경우, 음성 인식 모델은 정답인 제1 출력 값(안녕하세요)를 출력할 수도 있으며, 오답인 제2 출력 값(안뇽하세요)를 출력할 수 있다. 그리고 오답이 출력되는 원인은, 실험실 환경에서 음성 인식 모델을 생성하는데 사용된 훈련용 입력 데이터의 특징(feature)과, 실제 사용 환경에서 음성 인식 모델에 제공된 입력 데이터의 특징(feature)이 상이한 것일 수 있다.예를 들어 음성 인식 모델을 생성하는데 사용된 훈련용 입력 데이터는 노이즈가 작은 환경에서 수집된 음성 데 이터일 수 있다. 이에 반해 실제 사용 환경에서 음성 인식 모델에 제공된 입력 데이터는 노이즈가 큰 환경에서 수집된 음성 데이터일 수 있다. 그리고 노이즈가 큰 환경에서 수집되는 음성 데이터에 대한 트레이닝이 미비하였기 때문에, 음성 인식 모델은 오답을 출력할 수 있으며 이에 따라 음성 인식 모델의 성능이 낮아지는 문제가 발생한다. 한편 정답 케이스와 오답 케이스를 수집하고, 정답 케이스와 오답 케이스에서의 특징의 차이에 기초하여 인공지 능 모델을 트레이닝 할 수 있다. 이와 관련해서는 도 7을 참고하여 설명한다. 도 7은 본 발명의 실시 예에 따른, 도메인 적응(domain adaptation)의 대상이 되는 도메인을 결정하는 방법을 설명하기 위한 도면이다. 인공지능 서버의 프로세서는 인공 지능 모델에 입력된 입력 데이터를 수집할 수 있다. 여기서 입력 데이터는 하 나의 입력 데이터를 의미하는 것이 아니라 하나 또는 복수의 인공지능 모델에 제공된 다양한 입력 데이터를 통 칭하는 의미일 수 있다. 이 경우 인공지능 서버의 프로세서는, 인공지능 모델이 탑재된 복수의 단말기로부터, 통신부를 통하여, 입력 데 이터를 수신할 수 있다. 또한 인공지능 서버의 프로세서는, 인공지능 모델이 정답을 출력한 입력 데이터 및 인공지능 모델이 오답을 출 력한 입력 데이터를 수집할 수 있다. 구체적으로 인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력값이 정답이고 인공지능 모델이 제2 입 력 데이터에 대하여 출력한 제2 출력값이 오답인 경우, 인공지능 서버의 프로세서는 제1 입력 데이터 및 제2 입 력 데이터를 수집할 수 있다. 여기서 제1 입력 데이터 역시, 하나의 입력 데이터를 의미하는 것이 아니라 하나 또는 복수의 인공지능 모델에 제공되어 정답을 출력하게 한 다양한 입력 데이터를 통칭하는 의미일 수 있다. 또한 제2 입력 데이터 역시, 하나의 입력 데이터를 의미하는 것이 아니라 하나 또는 복수의 인공지능 모델에 제 공되어 오답을 출력하게 한 다양한 입력 데이터를 통칭하는 의미일 수 있다. 그리고 인공지능 서버의 프로세서는, 제1 입력 데이터 및 제2 입력 데이터를 이용하여 오답을 야기한 제1 도메 인을 획득할 수 있다. 구체적으로 인공지능 서버의 프로세서는, 인공지능 모델이 복수의 도메인에 대응하는 특징(feature) 들을 이용 하여 출력 값을 출력하는 경우, 복수의 도메인 각각에 대한 정답 케이스의 분포 및 오답 케이스의 분포를 이용 하여 오답을 야기한 제1 도메인을 획득할 수 있다. 더욱 구체적으로 인공지능 서버의 프로세서는, 각각의 도메인에 대하여 제1 입력 데이터와 제2 입력 데이터의 분포 유사성 측정(distribution similarity measure)을 수행할 수 있다. *예를 들어 인공지능 서버의 프로세서는, 제1 도메인(예를 들어 노이즈 크기)에 대하여, 제1 입력 데이터(정답 을 야기한 데이터)와 제2 입력 데이터(오답을 야기한 데이터)의 분포 유사성(distribution similarity)을 측정 할 수 있다. 다른 예를 들어 인공지능 서버의 프로세서는, 제2 도메인(예를 들어 성별)에 대하여, 제1 입력 데이터(정답을 야기한 데이터)와 제2 입력 데이터(오답을 야기한 데이터)의 분포 유사성(distribution similarity)을 측정할 수 있다. 즉 인공지능 서버의 프로세서는 각각의 도메인에 대하여 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리를 산출할 수 있다. 여기서 분포 유사성 측정(distribution similarity measure)은, KL-Divergence, Jensen-Shannon (JS) divergence, earth mover distance (EMD), Bhattacharyya Distance 등에 의해 수행될 수 있다. 또한 분포 유사성 측정(distribution similarity measure)은, Domainadversarial training of neural networks(DANN) 등의 Domain Adversarial Training 방법, A kernel method for the two sample problem(MMD), Correlation Alignment for Deep Domain Adaptation(Deep CORAL) 등의 분포 측정 방법, DB taxonomy 분석 방법 등에 의해 수행될 수도 있다. 여기서 DB taxonomy 분석 방법은, A, B, C의 3개의 도메인이 있는 경우, 각 도메인으로 트레이닝 한 인공지능 모델로 다른 도메인 에서의 성능을 측정하는 방식일 수 있다. 이 경우 분포가 유사한 도메인에 대해서는 인공지 능 모델이 높은 성능을 나타낼 수 있으며, 분포가 상이한 도메인에 대해서는 인공지능 모델이 낮은 성능을 나타 낼 수 있다. 한편 인공지능 서버의 프로세서는, 복수의 도메인 중 오답을 야기한 제1 도메인을 획득할 수 있다. 구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 중 제1 입력 데이터(정답을 야기한 데이터)의 분포 와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 기 설정된 값보다 큰 제1 도메인을 획득할 수 있다. 여기서 분포는, 각각의 도메인에서의 특징(feature)의 분포를 의미할 수 있다. 또한 인공지능 모델이 복수의 도메인에 대응하는 특징(feature) 들을 이용하여 출력 값을 출력하는 경우, 인공 지능 서버의 프로세서는, 복수의 도메인 중 오답을 가장 크게 야기한 제1 도메인을 획득할 수 있다. 구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 각각에 대한 제1 입력 데이터(정답을 야기한 데이터) 의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포를 이용하여 복수의 도메인 중 오답을 가장 크게 야기 한 제1 도메인을 획득할 수 있다. 여기서 분포는, 각각의 도메인에서의 특징(feature)의 분포를 의미할 수 있다. 더욱 구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 중 제1 입력 데이터(정답을 야기한 데이터)의 분 포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 가장 큰 제1 도메인을 획득할 수 있다. 예를 들어 복수의 도메인 중 제1 도메인(예를 들어 성별)에서 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 가장 크고, 복수의 도메인 중 제2 도메인(예를 들어 노이즈의 크기)에서 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데 이터)의 분포 사이의 거리가 중간 이고, 복수의 도메인 중 제3 도메인(예를 들어 SNR)에서 제1 입력 데이터(정 답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 가장 작다고 가정 한다. 그리고 제1 도메인(예를 들어 성별)에서 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오 답을 야기한 데이터)의 분포 사이의 거리가 가장 크다는 것은, 인공지능 모델이 오답을 출력하는데 제1 도메인 이 가장 큰 영향을 미쳤다는 것을 의미할 수 있다. 따라서, 인공지능 서버의 프로세서는, 복수의 도메인 중 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 가장 큰 제1 도메인(성별)을 획득할 수 있다. 다시 말해서, 인공지능 서버의 프로세서는, 복수의 도메인 중 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포의 분포 유사성이 가장 작은 제1 도메인(성별)을 획득할 수 있다. 여기서 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이 의 거리가 가장 큰 제1 도메인은, 정답과 오답을 구분하는 특징(feaure)이 가장 많이 나타나는 도메인일 수 있 다. 예를 들어 제1 입력 데이터(정답을 야기한 데이터)가 밝은 명도에서 촬영된 영상들이고 제2 입력 데이터(오답을 야기한 데이터)가 어두운 명도에서 촬영된 영상 들이며, 정답과 오답을 구분하는데 가장 큰 영향을 미친 성분이 명도인 경우, 도메인 “명도”는 정답과 오답을 구분하는 특징(feaure)이 가장 많이 나타나는 도메인일 수 있다. 따라서 제1 입력 데이터(정답을 야기한 데이터)의 분포와 제2 입력 데이터(오답을 야기한 데이터)의 분포 사이 의 거리가 가장 큰 제1 도메인은, 복수의 도메인 중 오답을 가장 크게 야기한 도메인일 수 있다. 즉 제1 도메인 은, 복수의 도메인 중 인공지능 모델의 성능 하락에 가장 큰 영향을 미친 도메인일 수 있다. 한편 정답과 오답을 구분하는 도메인, 즉 오답을 야기하는 도메인은 다양한 클러스터를 이용한 특징 선택 (feature selection) 기법을 통해 결정될 수 있다. 여기서 특징 선택(feature selection) 기법으로는,Recursive feature elimination (RFE), Accumulated Local Effect(ALE) 등이 사용될 수 있다. 한편 프로세서는 제1 도메인을 두 개의 세부 도메인으로 구분할 수 있다, 여기서 세부 도메인은 제1-1 도메인 및 제 1-2 도메인을 포함할 수 있다. 여기서 제1-1 도메인은, 제1 도메인 중 정답으로 분류되는 특징(feaure)이 많이 나타나는 도메인일 수 있다. 또 한 제1-2 도메인은, 제2 도메인 중 오답으로 분류되는 특징(feaure)이 많이 나타나는 도메인일 수 있다. 다시 말해서, 제1-1 도메인은, 제1 도메인 중 정답을 크게 야기한 도메인일 수 있다. 또한 제1-2 도메인은, 제2 도메인 중 오답을 크게 야기한 도메인일 수 있다. 예를 들어 정답과 오답을 구분하는데 가장 큰 영향을 미친 성분이 명도이고, 제1 입력 데이터(정답을 야기한 데 이터)가 밝은 명도에서 촬영된 영상들이고 제2 입력 데이터(오답을 야기한 데이터)가 어두운 명도에서 촬영된 영상 들인 경우, 제1-1 도메인은 밝은 명도이고 제1-2는 어두운 명도일 수 있다. 그리고 스마트 도어의 프로세서는, 트레이닝 데이터를 기준 값(A)을 기준으로 제1-1 도메인 및 제1-2 도메인으 로 분류할 수 있다. 예를 들어 스마트 도어의 프로세서는, 노이즈의 크기가 기준 값(A)보다 작은 입력 데이터를 제1-1 도메인으로, 노이즈의 크기가 기준 값(A)보다 큰 입력 데이터를 제1-2 도메인으로 분류할 수 있다. 그리고 나서, 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 인공지능 모델을 트레 이닝 할 수 있다. 이와 관련해서는 도 8을 참고하여 설명한다. 도 8은 도메인 적응 방법을 설명하기 위한 도면이다. 도메인 적응(domain adaptation, DA)은, 이미 습득한 지식을 사용해서, 새로운 입력 데이터에 대하여 정답을 맞 출 확률을 향상시키는 기법이다. 즉 도메인 적응(domain adaptation, DA)은 소스 도메인(source domain)에 대한 트레이닝을 수행한 인공지능 모 델이, 타겟 도메인(source domain)에서도 효과적으로 동작하는 것을 목표로, 소스와 타겟 사이의 맵핑을 수행하 는 것이다. 그리고 소스와 타겟 사이의 맵핑이 수행됨에 따라, 소스 도메인(source domain)의 분포와 타겟 도메인(source domain)의 분포가 유사해질 수 있다. 한편 본 발명에서 소스 도메인(source domain)은 정답에 대응하는 제1-1 도메인일 수 있다. 또한 본 발명에서 타겟 도메인(source domain)인은 오답에 대응하는 제1-2 도메인일 수 있다. 한편 인공지능 모델이 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록, 프로세서는 제1-1 도메 인에 해당하는 입력 데이터 및 제1-2 도메인에 해당하는 입력 데이터를 이용하여 인공지능 모델을 트레이닝 할 수 있다. 구체적으로 프로세서는, 인공지능 모델이 제1-1 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(featur e)과, 인공지능 모델이 제1-2 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)이 동일한 영역에 맵핑되도록 인공지능 모델을 트레이닝 할 수 있다. 예를 들어 제1 도메인은 노이즈일 수 있고, 제1-1 도메인은 작은 노이즈, 제1-2는 큰 노이즈일 수 있다. 그리고 제1 도메인(노이즈)이 오답을 가장 크게 야기하는 도메인인 경우, 제1-1 도메인에 해당하는 입력 데이터 의 특징 벡터의 맵핑 영역과 제1-2 도메인에 해당하는 입력 데이터의 특징 벡터의 맵핑 영역의 거리가 가장 클 수 있다. 이 경우 프로세서는, 인공지능 모델이 제1-1 도메인에 해당하는 입력 데이터에 대하여 추출한 특징 벡터와, 인 공지능 모델이 제1-2 도메인에 해당하는 입력 데이터에 대하여 추출한 특징 벡터가 동일한 영역에 맵핑되도록 인공지능 모델을 트레이닝 할 수 있다. 다음은 Domainadversarial training of neural networks(DANN)을 이용한 도메인 적응(domain adaptation)을 설 명한다.도 9는 본 발명의 실시 예에 따른, Domainadversarial training of neural networks(DANN)을 이용한 도메인 적 응(domain adaptation)을 설명하기 위한 도면이다. 도 9를 참고하면, 인공지능 모델은 입력 데이터를 이용하여 특징(feature)을 추출하는 특징 추출기, 추출된 특징(feature)을 이용하여 클래스를 분류하는 클래스 분류기 및 추출된 특징(feature)을 이용하여 도메인을 분류하는 도메인 분류기를 포함할 수 있다. 여기서 단말기에 탑재되는 인공지능 모델은 특징 추출기 및 클래스 분류기를 포함할 수 있다. 또한 인공지능 서버에서 도메인 적응(domain adaptation)을 수행하는 과정에서는 도메인 분류기가 인공지 능 모델에 추가될 수 있다. 한편 인공지능 서버는 제1-1 도메인에 해당하는 입력데이터 및 제1-2 도메인에 해당하는 입력 데이터에, 클래스 에 대한 정보 및 도메인에 대한 정보를 레이블링 하여 인공지능 모델을 트레이닝 할 수 있다. 구체적으로 인공지능 서버는, 제1-1 도메인에 해당하는 입력데이터 및 제1-2 도메인에 해당하는 입력 데이터를 특징 추출기에 입력되는 입력 값으로, 클래스에 대한 정보를 클래스 분류기에서 출력되는 제1 출력 값으로, 도메인에 대한 정보를 도메인 분류기에서 출력되는 제2 출력 값으로 이용하여 특징 추출기를 트레이닝 할 수 있다. 여기서 클래스에 대한 정보는, 클래스 분류기가 특징 추출기에서 추출된 특징(feature)을 이용하여 추론해야 하는 정답(또는 분류해야 하는 결과 값)을 의미할 수 있다. 또한 클래스는, 단말기에 탑재된 인공지능 모델이 추론해야 하는 정답을 의미할 수 있다. 예를 들어 인공지능 모델이 영상 인식 모델인 경우 두 개의 클래 스는 개 및 고양이 일 수 있다. 한편 도메인에 대한 정보는, 도메인 분류기가 특징 추출기에서 추출된 특징(feature)을 이용하여 추 론해야 하는 정답을 의미할 수 있다. 또한 도메인은 세부 도메인일 수 있다. 예를 들어 제1 도메인이 노이즈인 경우, 도메인 분류기가 추론해야 하는 정답은 제1-1 도메인(입력데이터가 노이즈가 작은 데이터인지) 또는 제1-2 도메인(입력데이터가 노이즈가 큰 데이터인지)일 수 있다. 또한 제1-1 도메인은 정답에 대응하는 도메인이며, 제1-2 도메인은 오답에 대응하는 도메인일 수 있다. 따라서 도메인 분류기가 추론해야 하는 정답은 도메인 적응 이전의 인공지능 모델이 정답으로 판별할 입력 데이터 인지 또는 도메인 적응 이전의 인공지능 모델이 오답으로 판별할 입력 데이터인지일 수 있다. 한편 프로세서는, 클래스 분류기가 클래스를 분류하고, 도메인 분류기가 제1-1 도메인 및 제1-2 도메인을 분류하지 못하도록, 인공지능 모델을 트레이닝 할 수 있다. 먼저 클래스 분류기와 관련해서 설명하면, 프로세서는 클래스 분류기에서의 손실 함수 값을 최소화 방향으로 특징 추출기의 파라미터를 조정할 수 있다. 예를 들어 경사 하강법을 이용하는 경우, 프로세서는 클래스 분류기에서의 손실 함수를 각 모델 파라미터 들로 편미분하여 기울기를 획득하고, 모델 파라미터들을 획득한 기울기 방향으로 학습률만큼 변경하여 갱신할 수 있다. 한편 도메인 분류기와 관련해서 설명하면, 프로세서는 입력데이터가 제1-1 도메인에 해당하는 데이터인지 또는 제1-2 도메인에 해당하는 데이터인지 구별하지 못하도록, 도메인 분류기를 악화하는 방향(gradient reverse backprop)으로 트레이닝 할 수 있다. 구체적으로 도메인 분류기는 특징 추출기에서 추출된 특징을 이용하여 도메인을 분류한다. 그리고 도 메인 분류기가 특징 추출기에서 추출된 특징을 이용하여 도메인을 구분할 수 없도록, 특징 추출기 의 모델 파라미터를 조정할 수 있다. 이를 위하여 프로세서는, 도메인 분류기가 도메인을 잘 구분한 경우(즉 도메인 분류기가, 입력데이터 가 제1-1 도메인에 해당하는 데이터인지 또는 제1-2 도메인에 해당하는 데이터인지 구분한 경우), 기울기 (gradient)를 반전(reverse) 시키는 방식으로 특징 추출기의 파라미터를 조절할 수 있다. 즉 프로세서는 도메인 분류기가 도메인을 잘 구분한 경우, 특징 추출기에 패널티를 부여할 수 있다. 또한 인공지능 모델은 클래스 분류기의 성능은 향상되면서 도메인 분류기의 성능은 약화되도록 트레이닝 되어야 한다. 따라서 클래스 분류기의 성능이 향상되도록 특징 추출기의 모델 파라미터를 조정하는 과정과, 도메인 분류기의 성능이 약화되도록 특징 추출기의 모델 파라미터를 조정하는 과정은, 동일한 입력 데이터에 대하여 동시에 수행될 수 있다. 이러한 방식으로 트레이닝이 반복되는 경우, 특징 추출기에서 추출되는 특징 중 제1 도메인에 의존성 (dependency)이 높은 특징들은 점점 줄어들 수 있다. 구체적으로, 트레이닝 전의 특징 추출기가 추출한 특징들은 제1 도메인(예를 들어 명도)에 대한 의존성이 가장 높았으며, 이러한 특징에 기반하여 클래스를 분류한 클래스 분류기의 성능은 낮았다. 다만 트레이닝을 반복함으로써, 제1 도메인(명도)에 의존성(dependency)이 높은 특징들은 점점 줄어들며, 클래 스를 분류할 수 있는 새로운 도메인(예를 들어 명도에 둔감한 콘트라스트(contrast), 선명도(sharpness), 형태 (shape) 등)에 의존성이 높은 특징들이 증가할 수 있다. 그리고 클래스 분류기는 클래스를 분류할 수 있는 새로운 도메인에 의존성이 높은 특징들을 이용하여 클래스를 분류하기 때문에, 클래스 분류기의 분류 성능이 향상될 수 있다. 즉 기존에는 인공지능 모델이 제1 도메인에 해당하는 특징을 가장 많이 이용하였다. 극단적인 예를 들면, 제1 도메인이 명도인 경우, 인공지능 모델은 제1-1 도메인(명도가 높음)에 해당하는 입력 데이터는 개로, 제1-2 도 메인(명도가 낮음)에 해당하는 입력 데이터는 고양이로 분류하였기 때문에 오답이 많이 발생하였다. 다만 도메인 적응 후에는, 입력 데이터가 제1-1 도메인(명도가 높음)에 해당하지 또는 제1-2 도메인(명도가 낮 음)에 해당하는지 구분할 수 없도록 특징 벡터가 출력된다. 따라서 오답을 가장 크게 야기한 제1 도메인에 대한 의존성이 낮아지기 때문에, 인공지능 모델의 성능이 향상되게 된다. 한편 앞서 설명한 과정은 도메인을 변경한 상태에서 반복될 수 있다. 이와 관련해서는 도 8을 다시 참고하여 설 명한다. 트레이닝 된 인공지능 모델(제1 도메인에 대하여 도메인 적응이 되도록 트레이닝 된 인공지능 모델)은 인공지능 서버에서 동작하거나 단말기에 배포되어 동작할 수 있다. 그리고 인공지능 서버의 프로세서는, 트레이닝 된 인공지능 모델에 입력된 입력 데이터를 수집할 수 있다. 구체적으로 인공지능 서버의 프로세서는, 트레이닝 된 인공지능 모델이 정답을 출력한 입력 데이터 및 인공지능 모델이 오답을 출력한 입력 데이터를 수집할 수 있다. 더욱 구체적으로 트레이닝 된 인공지능 모델이 제3 입력 데이터에 대하여 출력한 제3 출력값이 정답이고 트레이 닝 된 인공지능 모델이 제4 입력 데이터에 대하여 출력한 제4 출력값이 오답인 경우, 인공지능 서버의 프로세서 는 제3 입력 데이터 및 제4 입력 데이터를 수집할 수 있다. 그리고 인공지능 서버의 프로세서는, 제3 입력 데이터 및 제4 입력 데이터를 이용하여 오답을 야기한 제2 도메 인을 획득할 수 있다. 구체적으로 인공지능 서버의 프로세서는, 트레이닝 된 인공지능 모델이 복수의 도메인에 대응하는 특징 (feature) 들을 이용하여 출력 값을 출력하는 경우, 복수의 도메인 각각에 대한 정답 케이스의 분포 및 오답 케 이스의 분포를 이용하여 오답을 야기한 제2 도메인을 획득할 수 있다. 더욱 구체적으로 인공지능 서버의 프로세서는, 각각의 도메인에 대하여 제3 입력 데이터와 제4 입력 데이터의 분포 유사성 측정(distribution similarity measure)을 수행할 수 있다. 즉 인공지능 서버의 프로세서는 각각의 도메인에 대하여 제3 입력 데이터(정답을 야기한 데이터)의 분포와 제4 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리를 산출할 수 있다. 한편 인공지능 서버의 프로세서는, 복수의 도메인 중 오답을 야기한 제2 도메인을 획득할 수 있다. 구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 중 제3 입력 데이터(정답을 야기한 데이터)의 분포와 제4 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 기 설정된 값보다 큰 제2 도메인을 획득할 수 있 다. 또한 트레이닝 된 인공지능 모델이 복수의 도메인에 대응하는 특징(feature) 들을 이용하여 출력 값을 출력하는 경우, 인공지능 서버의 프로세서는, 복수의 도메인 중 오답을 가장 크게 야기한 제2 도메인을 획득할 수 있다.구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 각각에 대한 제3 입력 데이터(정답을 야기한 데이터) 의 분포와 제4 입력 데이터(오답을 야기한 데이터)의 분포를 이용하여 복수의 도메인 중 오답을 가장 크게 야기 한 제2 도메인을 획득할 수 있다. 더욱 구체적으로, 인공지능 서버의 프로세서는, 복수의 도메인 중 제3 입력 데이터(정답을 야기한 데이터)의 분 포와 제4 입력 데이터(오답을 야기한 데이터)의 분포 사이의 거리가 가장 큰 제2 도메인을 획득할 수 있다. 여기서 제3 입력 데이터(정답을 야기한 데이터)의 분포와 제4 입력 데이터(오답을 야기한 데이터)의 분포 사이 의 거리가 가장 큰 제2 도메인은, 정답과 오답을 구분하는 특징(feaure)이 가장 많이 나타나는 도메인일 수 있 다. 따라서 제3 입력 데이터(정답을 야기한 데이터)의 분포와 제4 입력 데이터(오답을 야기한 데이터)의 분포 사이 의 거리가 가장 큰 제2 도메인은, 복수의 도메인 중 오답을 가장 크게 야기한 도메인일 수 있다. 즉 제2 도메인 은, 복수의 도메인 중 트레이닝 된 인공지능 모델의 성능 하락에 가장 큰 영향을 미친 도메인일 수 있다. 한편 제2 도메인은 제1 도메인과 상이할 수 있다. 구체적으로 제1 도메인이 노이즈인 것으로 가정하여 설명한다. 도 8a를 참고하면, 인공지능 모델이 오답을 출력하는 경우, 오답을 가장 크게 야기한 도메인은 제1 도메인(노이 즈)이다. 따라서 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 인공지능 모델을 트레이닝한 상태이다. 그리고 도 8b를 참고하면, 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 인공지능 모델이 트 레이닝 됨에 따라, 제1-1 도메인(노이즈가 작은 도메인)에 해당하는 입력 데이터에서 추출된 특징 벡터와 제1-2 도메인(노이즈가 큰 도메인)에 해당하는 입력 데이터에서 추출된 특징 벡터는 유사한 영역에 맵핑되는 것을 알 수 있다. 따라서 트레이닝 된 인공지능 모델이 오답을 출력하는 경우, 오답을 가장 크게 야기한 도메인은 제1 도메인(노 이즈)과 다른 제2 도메인(나이)으로 변경될 수 있다. 한편 프로세서는 제2 도메인을 두 개의 세부 도메인으로 구분할 수 있다, 여기서 세부 도메인은 제2-1 도메인 및 제 2-2 도메인을 포함할 수 있다. 여기서 제2-1 도메인은, 제2 도메인 중 정답으로 분류되는 특징(feaure)이 많이 나타나는 도메인일 수 있다. 또 한 제2-2 도메인은, 제2 도메인 중 오답으로 분류되는 특징(feaure)이 많이 나타나는 도메인일 수 있다. 다시 말해서, 제2-1 도메인은, 제2 도메인 중 정답을 크게 야기한 도메인일 수 있다. 또한 제2-2 도메인은, 제2 도메인 중 오답을 크게 야기한 도메인일 수 있다. 예를 들어 정답과 오답을 구분하는데 가장 큰 영향을 미친 성분이 나이이고, 제1 입력 데이터(정답을 야기한 데 이터)가 어른의 음성 데이터이고 제2 입력 데이터(오답을 야기한 데이터)가 아이의 음성 데이터인 경우, 제2-1 도메인은 어른이고 제2-2는 아이일 수 있다. 그리고 나서, 프로세서는 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. 구체적으로 트레이닝 된 인공지능 모델이 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록, 프로 세서는 제2-1 도메인에 해당하는 입력 데이터 및 제2-2 도메인에 해당하는 입력 데이터를 이용하여 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. *구체적으로 프로세서는, 인공지능 모델이 제2-1 도메인에 해당하는 입력 데이터에 대하여 추출한 특징 (feature)과, 인공지능 모델이 제2-2 도메인에 해당하는 입력 데이터에 대하여 추출한 특징(feature)이 동일한 영역에 맵핑되도록 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. 또한 프로세서는 제2-1 도메인에 해당하는 입력데이터 및 제2-2 도메인에 해당하는 입력 데이터에, 클래스에 대 한 정보 및 도메인에 대한 정보를 레이블링 하여 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. 구체적으로 인공지능 서버는, 제2-1 도메인에 해당하는 입력데이터 및 제2-2 도메인에 해당하는 입력 데이터를 특징 추출기에 입력되는 입력 값으로, 클래스에 대한 정보를 클래스 분류기에서 출력되는 제1 출력 값으로, 도메인에 대한 정보를 도메인 분류기에서 출력되는 제2 출력 값으로 이용하여 특징 추출기를 트레이닝 할 수 있다. 그리고 프로세서는, 클래스 분류기가 클래스를 분류하고, 도메인 분류기가 제2-1 도메인 및 제2-2 도메인 을 분류하지 못하도록, 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. 도 8b는 제1 도메인(노이즈의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 인공지능 모델을 트레 이닝한 상태이다. 그리고 도 8c를 참고하면, 제2 도메인(나이)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지능 모델이 재 트레이닝 됨에 따라, 제2-1 도메인(어른)에 해당하는 입력 데이터에서 추출된 특징 벡터와 제2-2 도메인(아이)에 해당하는 입력 데이터에서 추출된 특징 벡터는 유사한 영역에 맵핑되는 것을 알 수 있다. 한편 프로세서는 이와 같은 과정을 계속적으로 반복할 수 있다. 즉 프로세서는 제1 도메인에 대하여 도메인 적응되도록 트레이닝 된 인공지능 모델을, 제2 도메인에 대하여 도 메인 적응되도록 다시 트레이닝 할 수 있다. 또한 프로세서는 제1 도메인에 대하여 도메인 적응되도록 트레이닝 되고 제2 도메인에 대하여 도메인 적응되도록 트레이닝 된 인공지능 모델을, 제3 도메인에 대하여 도메인 적응 되도록 다시 트레이닝 할 수 있다. 표 1은 본 발명에서 제안하는 방법을 통하여 트레이닝 된 인공지능 모델의 성능을 실험한 결과이다. 표 1 1차 트레이닝 성능 2차 트레이닝 성능 제1 도메인 70.17 제1 도메인 71.69 제1 도메인 제2 도메인 72.27 제2 도메인 69.5 제2 도메인 70.8 먼저 오답을 가장 크게 야기한 제1 도메인에 대하여 도메인 적응 되도록 인공지능 모델을 트레이닝 시킨 경우 트레이닝 된 인공지능 모델의 성능은 70.17로 나타났으며, 오답을 두번째로 크게 야기한 제2 도메인에 대하여 도메인 적응 되도록 인공지능 모델을 트레이닝 시킨 경우 트레이닝 된 인공지능 모델의 성능은 69.5로 나타났다. 이것은, 정답을 야기한 입력 데이터의 분포와 오답을 야기한 입력 데이터의 분포의 차이가 큰 도메인 에 대하여 도메인 적응을 하면, 인공지능 모델의 성능이 더욱 향상된다는 것을 의미할 수 있다.또한 제1 도메인 (노이즈의 크기)에 대하여 도메인 적응 되도록 인공지능 모델을 트레이닝 시킨 경우 트레이닝 된 인공지능 모델 의 성능은 70.17로 나타났으며, 제1 도메인(노이즈의 크기)에 대하여 도메인 적응 되도록 인공지능 모델을 재 트레이닝 시킨 경우 재 트레이닝 된 인공지능 모델의 성능은 71.69로 나타났다. 또한 제2 도메인(성별)에 대하 여 도메인 적응 되도록 인공지능 모델을 트레이닝 시킨 경우 트레이닝 된 인공지능 모델의 성능은 69.5로 나타 났으며, 제2 도메인(성별)에 대하여 도메인 적응 되도록 인공지능 모델을 재 트레이닝 시킨 경우 재 트레이닝 된 인공지능 모델의 성능은 70.08로 나타났다. 이것은, 동일한 도메인에 대하여 도메인 적응을 반복적으로 수행 하는 경우에도, 성능이 계속 증가할 수 있음을 의미한다. 또한 제1 도메인(노이즈의 크기)에 대하여 도메인 적응 되도록 인공지능 모델을 트레이닝 시키고 제1 도메인(노 이즈의 크기)에 대하여 도메인 적응 되도록 인공지능 모델을 재 트레이닝 시킨 경우, 재 트레이닝 된 인공지능 모델의 성능은 71.69로 나타났다. 이에 반해 제1 도메인(노이즈의 크기)에 대하여 도메인 적응 되도록 인공지능 모델을 트레이닝 시키고 제2 도메인(성별)에 대하여 도메인 적응 되도록 인공지능 모델을 재 트레이닝 시킨 경 우, 재 트레이닝 된 인공지능 모델의 성능은 72.27로 나타났다. 이것은, 도메인을 변경해가면서 도메인 적응을 수행하는 경우, 성능이 더욱 향상됨을 의미한다. 이와 같이 본 발명은, 도메인 적응을 반복적으로 수행함으로써 인공지능 모델의 성능을 끊임없이 향상시킬 수 있는 장점이 있다. 또한 본 발명은, 오답을 가장 크게 야기하는 도메인을 결정한 후, 오답을 가장 크게 야기하는 도메인에 대하여 우선적으로 도메인 적응을 수행하기 때문에, 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장점이 있다. 또한 본 발명에 따르면, 도메인 적응의 대상이 되는 도메인을 변경해가면서 도메인 적응을 반복적으로 수행하기 때문에, 다양한 도메인들이 도메인 적응 된다. 따라서 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장 점이 있다. 또한 본 발명에 따르면, 도메인 적응을 반복적으로 수행할 때마다 오답을 가장 크게 야기하는 도메인을 선택하 여 도메인 적응을 수행한다. 따라서 인공지능 모델의 성능을 더욱 빨리 향상시킬 수 있는 장점이 있다. 한편 도메인 적응을 반복적으로 수행할 때마다 오답을 가장 크게 야기하는 도메인을 선택하여 도메인 적응을 하 는 대신, 오답을 야기하는 순서대로 순차적으로 도메인 적응을 수행할 수도 있다. 구체적으로, 인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 프로세서는 제1 입력 데이터 및 상기 제2 입력 데이 터를 이용하여 복수의 도메인 중 오답을 가장 크게 야기한 제1 도메인 및 오답을 두번째로 크게 야기한 제2 도 메인을 획득할 수 있다. 그리고 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 인 공지능 모델을 트레이닝 할 수 있다. 그리고 나서 프로세서는 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지능 모델을 재 트레이닝 할 수 있다. 도 10은, 도메인 적응을 반복적으로 수행하면서 최적의 성능을 가지는 인공지능 모델을 선택하고, 히스토리를 관리하는 방법을 설명한다. 프로세서는, 도메인 적응(domain adaptation)의 횟수, 도메인 적응(domain adaptation)의 대상 도메인 또는 도 메인 적응(domain adaptation)의 순서 중 적어도 하나가 상이한 복수의 인공지능 모델 중 가장 높은 성능의 인 공지능 모델을 선택할 수 있다. 구체적으로 도 10을 참고하면, 프로세서는 다양한 조합으로 도메인 적응(domain adaptation)을 수행할 수 있다. 구체적으로 stage 1을 참고하면, 프로세서는 제1 도메인(성별)에 대한 도메인 적응(domain adaptation)을 수행 하여 초기 인공지능 모델을 트레이닝 하였다. 이렇게 트레이닝 된 인공지능 모델을 제1 인공지능 모델이 라고 지칭할 수 있다. 한편 프로세서는 한단계 이전의 인공지능 모델이 새로운 도메인에 대하여 도메인 적응(domain adaptation) 되도 록 인공지능 모델을 트레이닝 할 수 있다. 구체적으로 stage 1을 참고하면, 프로세서는 제2 도메인(노이즈의 크기)에 대한 도메인 적응(domain adaptation)을 수행하여 제1 인공지능 모델(제1 도메인(성별)에 대한 도메인 적응(domain adaptation)을 수행한)을 트레이닝 하였다. 이렇게 트레이닝 된 인공지능 모델은 제2 인공지능 모델이라 지칭할 수 있다. 그리고 제2 인공지능 모델은, 제1 도메인(성별)에 대하여 도메인 적응(domain adaptation)이 되도록 트레 이닝 되고, 제2 도메인(노이즈의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지 능 모델일 수 있다. 여기서도 프로세서는 한 단계 이전의 인공지능 모델이 새로운 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트레이닝 할 수 있다. 구체적으로 stage 2를 참고하면, 프로세서는 제3 도메인(신호의 크기)에 대한 도메인 적응(domain adaptation) 을 수행하여 제2 인공지능 모델을 트레이닝 할 수 있다. 이렇게 트레이닝 된 인공지능 모델은 제3 인공지 능 모델이라 지칭할 수 있다. 그리고 제3 인공지능 모델은, 제1 도메인(성별)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고, 제2 도메인(노이즈의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고 제3 도메인(신호의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지능 모델일 수 있다. 또한 stage 3을 참고하면, 프로세서는 제4 도메인(SNR)에 대한 도메인 적응(domain adaptation)을 수행하여 제3 인공지능 모델을 트레이닝 할 수 있다. 이렇게 트레이닝 된 인공지능 모델은 제5 인공지능 모델이라 지칭 할 수 있다. 그리고 제5 인공지능 모델은, 제1 도메인(성별)에 대하여 도메인 적응(domain adaptation)이 되도 록 트레이닝 되고, 제2 도메인(노이즈의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되 고 제3 도메인(신호의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고 제4 도메인 (SNR)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 된 인공지능 모델일 수 있다. 또한 프로세서는 복수의 단계 이전의 인공지능 모델이 새로운 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트레이닝 할 수 있다.예를 들어 stage 2를 참고하면, 프로세서는 제3 도메인(신호의 크기)에 대한 도메인 적응(domain adaptation)을 수행하여 제1 인공지능 모델을 트레이닝 할 수 있다. 이렇게 트레이닝 된 인공지능 모델은 제4 인공지능 모델이라 지칭할 수 있다. 그리고 제3 인공지능 모델은, 제1 도메인(성별)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고, 제3 도메인(신호의 크기)에 대하여 도메인 적응(domain adaptation)이 되 도록 트레이닝 된 인공지능 모델일 수 있다. 즉 프로세서는 두 단계 이전의 인공지능 모델(제1 인공지능 모델) 이 새로운 도메인(신호의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 두 단계 이전의 인공지능 모델(제1 인공지능 모델)을 트레이닝 할 수 있다. 또 다른 예를 들어 stage 3을 참고하면, 프로세서는 제4 도메인(SNR)에 대한 도메인 적응(domain adaptation)이 되도록 제2 인공지능 모델을 트레이닝 할 수 있다. 이렇게 트레이닝 된 인공지능 모델을 제6 인공지능 모 델이라 지칭할 수 있다. 그리고 제6 인공지능 모델은, 제1 도메인(성별)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고, 제2 도메인(노이즈의 크기)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝 되고 제4 도메인(SNR)에 대하여 도메인 적응(domain adaptation)이 되도록 트레이닝된 인공지 능 모델일 수 있다. 즉 프로세서는 두 단계 이전의 인공지능 모델(제2 인공지능 모델)이 새로운 도메인(SNR)에 대하여 도메인 적응(domain adaptation)이 되도록 두 단계 이전의 인공지능 모델(제2 인공지능 모델)을 트레이 닝 할 수 있다. 이와 같은 방식으로 프로세서는 도메인 적응의 횟수, 도메인 적응의 대상 도메인 또는 도메인 적응(domain adaptation)의 순서 중 적어도 하나가 상이한 복수의 인공지능 모델을 생성하고, 생성된 복수의 인공지능 모델 중 가장 높은 성능의 인공지능 모델을 선택할 수 있다. 여기서 성능의 판단 기준은, 인공지능 모델의 분류(예측)의 정확도를 의미할 수 있다. 그리고 프로세서는 선택된 인공지능 모델을 하나 이상의 단말기로 전송할 수 있다. 이 경우 단말기는 인공지능 모델을 다운로드 하고, 다운로드 된 인공지능 모델을 이용하여 결과 값을 획득할 수 있다. 한편 도메인 적응(domain adaptation)의 순서가 상이하다는 것은 복수의 도메인에 대하여 도메인 적응이 수행되 는 순서가 상이하다는 것을 의미할 수 있다. 예를 들어 제2 인공지능 모델은 제1 도메인에 대하여 도메인 적응 이 되도록 트레이닝 되고, 그리고 나서 제2 도메인에 대하여 도메인 적응이 되도록 트레이닝 된 인공지능 모델 일 수 있다. 다른 예를 들어 제3 인공지능 모델은 제2 도메인에 대하여 도메인 적응이 되도록 트레이닝 되고, 그리고 나서 제1 도메인에 대하여 도메인 적응이 되도록 트레이닝 된 인공지능 모델일 수 있다. 이와 같이 본 발명에 따르면 다양한 조합으로 도메인 적응을 수행하고 가장 높은 성능의 인공지능 모델을 선택 함으로써, 인공지능 모델의 성능을 향상시킬 수 있다. 예를 들어 초기 인공지능 모델에서 오답을 가장 크게 야기한 제1 도메인에 대하여 도메인 적응이 되도록 초기 인공지능 모델을 트레이닝 함으로써 제1 인공지능 모델을 생성하고, 제1 인공지능 모델에서 오답을 가장 크게 야기한 제2 도메인에 대하여 도메인 적응이 되도록 제1 인공지능 모델을 트레이닝 함으로써 제2 인공지능 모델 을 생성하고, 제2 인공지능 모델에서 오답을 가장 크게 야기한 제3 도메인에 대하여 도메인 적응이 되도록 제2 인공지능 모델을 트레이닝 함으로써 제3 인공지능 모델을 생성하는 방식은, 오답을 가장 크게 야기하는 도메인 에 대하여 반복적으로 도메인 적응을 하면 성능이 가장 좋아질 가능성이 높다는 것에 착안한 것이기 때문에, 다 른 조합의 성능이 더 좋을 가능성도 존재한다. 따라서 본 발명은 다양한 조합으로 도메인 적응을 수행하고 가장 높은 성능의 인공지능 모델을 선택함으로써, 인공지능 모델의 성능을 향상시킬 수 있는 장점이 있다. 예를 들어 stage 2를 다시 참고하면, 프로세서는 상기 제1 도메인에 대하여 도메인 적응(domain adaptation) 되 도록 제1 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적 응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성할 수 있다 . 또한 프로세서는 제2 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 제1 인공지능 모델을 트레이닝 하여 제4 인공지능 모델을 생성할 수 있다. 이 경우 제3 인공지능 모델의 도메인 적응의 횟수가 더 큼에도 불구하고, 제4 인공지능 모델의 성능이 제3 인공지능 모델의 성능보다 높을 수 있다. 이 경우 프로세 서는 제3 인공지능 모델 및 제4 인공지능 모델 중 더 높은 성능의 인공지능 모델인 제4 인공지능 모델을 선택할 수 있다. 다른 예를 들어 프로세서는, 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 인공지능 모델 을 트레이닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성할 수 있다. 그리고 프로세서 는 제2 인공지능 모델 및 제3 인공지능 모델 중 더 높은 성능의 인공지능 모델을 선택할 수 있다. 한편 조합의 개수가 늘어날수록 최적의 성능의 인공지능 모델이 선택될 가능성이 높아지는데 반해, 계산 량 및 저장 공간의 제한이라는 한계 때문에 전체 조합들을 다 보유하고 있을 수는 없다. 따라서 프로세서는 기 생성되어 메모리에 저장된 복수의 인공지능 모델 중 일부 인공지능 모델을 메모리로부터 삭제하거나, 인공지능 모델에 대한 추가적인 트레이닝을 중단할 수 있다. 구체적으로 프로세서는, 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트레이 닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 상기 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성할 수 있다. 또한 프로세서는 제2 인공지능 모델 및 제3 인공지능 모델을 메모리에 저장할 수 있다. 그리고 제2 인공지능 모델 및 제3 인공지능 모델 중 제2 인공지능 모델의 성능이 더 높은 경우, 프로세서는 제2 인공지능 모델을 선택하고 제3 인공지능 모델을 메모리로부터 삭제할 수 있다. 즉 제3 인공지능 모델은 이전의 인공지능 모델에 비하여 성능이 저하된 모델이기 때문에, 제3 인공지능 모델은 메모리에서 삭제될 수 있다. 그리고 제3 인공지능 모델이 메모리에서 삭제됨에 따라 제3 인공지능 모델에 대한 추가적인 트레이닝(도메인 적응)은 수행되지 않을 수 있다. 다른 실시 예로, 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트 레이닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 제2 인공지능 모델을 트레이닝 하여 제3 인공지능 모델을 생성할 수 있다. 그리고 제3 인공지능 모델의 성능이 제2 인공지능 모델의 성능에 비하여 기 설정된 값 이하만큼 증가하는 경우, 프로세서는 제3 인공지능 모델을 추가적으로 트레이닝 하지 않을 수 있다. 즉 제3 인공지능 모델의 성능 향상이 낮은 경우, 제3 인공지능 모델을 시작점으로 가지는 브랜치는(branch) 역시 낮은 성능을 나타낼 수 있다. 따라 서 프로세서는 제3 인공지능 모델을 추가적으로 트레이닝 하지 않음으로써 제3 인공지능 모델을 시작점으로 가 지는 브랜치는(branch)를 생성하지 않을 수 있다. 이 경우 프로세서는 다른 브랜치(branch)를 선택하여 도메인 적응을 위한 트레이닝을 계속할 수 있다. 예를 들어 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고, 제3 도메인에 대하여 도메인 적응(domain adaptation) 되도록 제2 인공지 능 모델을 트레이닝 하여 제4 인공지능 모델을 생성할 수 있다. 그리고 제4 인공지능 모델의 성능이 제2 인공지능 모델의 성능에 비하여 기 설정된 값 이상 증가하는 경우, 프 로세서는 제4 인공지능 모델을 선택할 수 있다. 또한 프로세서는 도메인 적응을 위하여 제4 인공지능 모델을 추 가적으로 트레이닝 할 수 있다. 다른 실시 예로, 프로세서는, 복수의 인공지능 모델 중 기 설정된 기간 이상 가장 높은 성능의 인공지능 모델로 선택되지 않은 인공지능 모델은 추가적으로 트레이닝 하지 않을 수 있다. 예를 들어 프로세서는 제1 도메인에 대하여 도메인 적응(domain adaptation) 되도록 인공지능 모델을 트레이닝 하여 제2 인공지능 모델을 생성하고, 제2 도메인에 대하여 도메인 적응(domain adaptation) 되도록 제2 인공지 능 모델을 트레이닝 하여 제3 인공지능 모델을 생성하였다. 그리고 제3 인공지능 모델의 성능이 제2 인공지능 모델의 성능보다 기 설정된 값 이상 향상되어, 프로세서는 제3 인공지능 모델을 메모리에 저장하고 보유하고 있 는 상태이다. 한편 프로세서는 보유하고 있는 복수의 인공지능 모델 중 가장 높은 성능의 인공지능 모델을 선택할 수 있다. 한편 인공지능 서버는 제3 인공지능 모델을 보유하고 있으나, 제3 인공지능 모델은 기 설정된 기간 동안 가장 높은 성능의 인공지능 모델로 선택되지 않았다. 이 경우 프로세서는 제3 인공지능 모델을 더 이상 트레이닝 하 지 않음으로써 제3 인공지능 모델을 시작점으로 하는 브랜치가 생성되는 것을 방지할 수 있다. 또한 프로세서는 제3 인공지능 모델을 메모리로부터 삭제할 수 있다. 이와 같이 본 발명에 따르면, 복수의 인공지능 모델 중 일부 인공지능 모델에 대하여 추가 트레이닝을 수행하지 않거나, 일부 인공지능 모델을 메모리로부터 삭제함으로써, 계산 량 및 저장 공간을 줄일 수 있는 장점이 있다. 도 11은 본 발명의 실시 예에 따른, 발화문으로부터 중요 단어를 추출하고, 중요 단어에서 추출된 특징을 이용 하여 오답을 야기한 도메인을 획득하는 방법을 설명하기 위한 도면이다. 사용자의 발화문, 즉 입력 데이터가 세개의 단어(쿨럭, 노래, 틀어줘)로 구성된 것으로 가정하여 설명한다. 여기서 “쿨럭”은 헛기침 소리일 수 있다. 프로세서는 입력 데이터에 포함되는 복수의 단어를 추출하고, 추출된 복수의 단어 각각의 중요도를 산출할 수 있다. 구체적으로 프로세서는 입력데이터에 포함되는 복수의 단어 중 일부 단어(예를 들어 하나의 단어)를 삭제하면서 자연어 처리(Natural Language Processing)를 수행할 수 있다. 더욱 구체적으로, 도 11a를 참고하면, 입력 데이터에 제1 단어, 제2 단어 및 제3 단어가 포함되는 경우, 프로세 서는 제1 단어를 제외하고 제2 단어 및 제3 단어를 포함하는 입력 데이터를 자연어 처리할 수 있다. 예를 들어 “쿨럭 노래 틀어줘”라는 입력 데이터가 수신되는 경우, 프로세서는 “노래 틀어줘”라는 입력 데이 터를 자연어 처리 모델에 제공하여 자연어 처리를 수행할 수 있다. 이 경우 자연어 처리 모델은 입력 데이터에 대한 의미 분석 결과 및 신뢰 스코어(Confidence Score)를 출력할 수 있다. 예를 들어 자연어 처리 모델은, 노 래 재생이라는 의미 분석 결과와 99%의 신뢰 스코어를 출력할 수 있다. 또한 입력 데이터에 제1 단어, 제2 단어 및 제3 단어가 포함되는 경우, 프로세서는 제3 단어를 제외하고 제1 단 어 및 제2 단어를 포함하는 입력 데이터를 자연어 처리할 수 있다. 예를 들어 “쿨럭 노래 틀어줘”라는 입력 데이터가 수신되는 경우, 프로세서는 “쿨럭 노래”라는 입력 데이터 를 자연어 처리 모델에 제공하여 자연어 처리를 수행할 수 있다. 이 경우 음성 인식 모델은 입력 데이터에 대한 의미 분석 결과 및 신뢰 스코어(Confidence Score)를 출력할 수 있다. 예를 들어 자연어 처리 모델은, 노래 재 생이라는 의미 분석 결과와 80%의 신뢰 스코어를 출력할 수 있다. 또한 입력 데이터에 제1 단어, 제2 단어 및 제3 단어가 포함되는 경우, 프로세서는 제2 단어를 제외하고 제1 단 어 및 제3 단어를 포함하는 입력 데이터를 자연어 처리할 수 있다. 예를 들어 “쿨럭 노래 틀어줘”라는 입력 데이터가 수신되는 경우, 프로세서는 “쿨럭 틀어줘”라는 입력 데이 터를 자연어 처리 모델에 제공하여 자연어 처리를 수행할 수 있다. 이 경우 자연어 처리 모델은 입력 데이터에 대한 의미 분석 결과 및 신뢰 스코어(Confidence Score)를 출력할 수 있다. 예를 들어 자연어 처리 모델은, 웹 검색 실행이라는 의미 분석 결과와 45%의 신뢰 스코어를 출력할 수 있다. 한편 프로세서는 입력데이터에 포함되는 복수의 단어를 하나씩 삭제해가면서 획득한 의미 분석 결과 및 신뢰 스 코어를 이용하여 중요 단어 및 불필요한 단어를 획득할 수 있다. 구체적으로, 특정 단어를 제외한 특정 입력 데이터를 자연어 처리한 결과 발화문의 의미와 의미 분석 결과가 대 응하고 신뢰 스코어가 가장 높은 출력값이 획득된 경우, 프로세서는 특정 단어를 불필요한 단어로 결정할 수 있 다. 예를 들어 “쿨럭”을 제외한 “노래 틀어줘”를 자연어 처리한 결과, 노래 재생이라는 의미 분석 결과와 99%의 신뢰 스코어가 출력된 경우, 프로세서는 “쿨럭”을 불필요한 단어로 결정할 수 있다. 또한, 특정 단어를 제외한 특정 입력 데이터를 자연어 처리한 결과 발화문의 의미와 의미 분석 결과가 대응하지 않거나 신뢰 스코어가 가장 낮은 출력값이 획득된 경우, 프로세서는 특정 단어를 중요 단어로 결정할 수 있다. 예를 들어 “노래”를 제외한 “쿨럭 틀어줘”를 자연어 처리한 결과, 웹 검색 실행이라는 의미 분석 결과가 출 력된 경우, 프로세서는 “노래”를 중요 단어로 결정할 수 있다. 다른 예를 들어 “노래”를 제외한 “쿨럭 틀 어줘”를 자연어 처리한 결과, 노래 재생이라는 의미 분석 결과와 30%의 신뢰 스코어가 출력된 경우, 프로세서 는 “노래”를 중요 단어로 결정할 수 있다. 그리고 프로세서는 중요 단어로부터 추출된 특징(feature)을 이용하여, 오답을 야기한 도메인을 획득할 수 있다. 구체적으로 인공지능 모델이 제1 입력 데이터에 대하여 출력한 제1 출력 값이 정답이고 인공지능 모델이 제2 입 력 데이터에 대하여 출력한 제2 출력 값이 오답인 경우, 프로세서는 제1 입력 데이터에 포함되는 중요 단어로부 터 제1 특징(feature)을 추출하고 제2 입력 데이터에 포함되는 중요 단어로부터 제2 특징(feature)을 추출할 수 있다. 또한 프로세서는 제1 특징과 제2 특징 데이터의 분포 유사성 측정(distribution similarity measure)을 수행할 수 있다. 그리고 프로세서는, 복수의 도메인 중 오답을 가장 크게 야기한 제1 도메인을 획득할 수 있다. 구체적으로 프로 세서는, 복수의 도메인 중 제1 특징의 분포와 제2 특징의 분포 사이의 거리가 가장 큰 제1 도메인을 획득할 수 있다. 즉 본 발명에 따르면, 중요 단어에서 추출된 특징을 이용하여 오답을 가장 크게 야기한 도메인을 획득하기 때문 에, 중요 단어에 대한 인식 성능을 더욱 향상시킬 수 있는 장점이 있다. 도 12는 본 발명의 실시 예에 따른, 저 신뢰 단어를 획득하고, 저 신뢰 단어의 중요도를 이용하여 저 신뢰 단어 를 구분하는 방법을 설명하기 위한 도면이다. 여기서 신뢰 단어는, 음성 인식 모델의 신뢰 스코어가 기 설정된 값(예를 들어 50% 보다 낮은) 단어를 의미할 수 있다. 구체적으로 사용자의 발화문, 즉 입력 데이터가 세개의 단어(쿨럭, 노래, 틀어줘)로 구성된 것으로 가정하여 설 명한다. 프로세서는 입력 데이터에 포함되는 복수의 단어를 추출하고, 추출된 복수의 단어 각각의 신뢰 스코어를 산출할 수 있다. 구체적으로 프로세서는 입력 데이터를 음성 인식 모델에 입력할 수 있다. 이 경우 음성 인식 모델은 복수의 단 어 각각에 대한 인식 결과 및 복수의 단어 각각의 신뢰 스코어를 출력할 수 있다. 예를 들어 음성 인식 모델은 “쿨럭”에 대해서는 40%, “노래”에 대해서는 90%, “틀어줘”에 대해서는 60%의 신뢰 스코어를 출력할 수 있다. 그리고 프로세서는 음성 인식 모델의 신뢰 스코어가 기 설정된 값보다 작은 단 어를 저 신뢰 단어로 결정할 수 있다. 예를 들어 기 설정된 값이 50%인 경우, 프로세서는 “쿨럭”을 저 신뢰 단어로 결정할 수 있다. 다른 예를 들어 “노래(작은 소리) 틀어줘”라는 입력 데이터에 대하여, 음성 인식 모델은 “노래(작은 소리)” 에 대해서는 35%, “틀어줘”에 대해서는 90%의 신뢰 스코어를 출력할 수 있다. 그리고 프로세서는 신뢰 스코어 가 50%보다 낮은 “노래(작은 소리)”를 저 신뢰 단어로 결정할 수 있다. 한편 프로세서는 저 신뢰 단어의 중요도를 이용하여 저 신뢰 단어를 중요 단어 및 불필요한 단어로 구분할 수 있다. 구체적으로 프로세서는 입력데이터에 포함되는 복수의 단어 중 저 신뢰 단어를 삭제하여 자연어 처리(Natural Language Processing)를 수행할 수 있다. 예를 들어 프로세서는 “쿨럭 노래 틀어줘”라는 입력 데이터에서 “쿨럭”을 제외하고,“노래 틀어줘”에 대한 자연어 처리를 수행할 수 있다. 다른 예를 들어 프로세서는 “노래(작은 소리) 틀어줘”라는 입력 데이터에서 “노래(작은 소리)”를 제외하고, “틀어줘”에 대한 자연어 처리를 수행할 수 있다. 이 경우 자연어 처리 모델은 입력 데이터에 대한 의미 분석 결과 및 신뢰 스코어(Confidence Score)를 출력할 수 있다. 한편 프로세서는 자연어 처리 모델이 출력한 의미 분석 결과 및 신뢰 스코어를 이용하여 중요 단어 및 불필요한 단어를 획득할 수 있다. 구체적으로 저 신뢰 단어를 제외한 입력 데이터를 자연어 처리한 결과 발화문의 의미와 의미 분석 결과가 대응 하고 신뢰 스코어가 일정 값 이상인 출력값이 획득된 경우, 프로세서는 저 신뢰 단어를 불필요한 단어로 결정할 수 있다. 예를 들어 쿨럭 노래 틀어줘”라는 입력 데이터에서 “쿨럭”을 제외하고,“노래 틀어줘”에 대한 자연어 처리 를 수행하였고, 자연어 처리 모델은 “노래 틀어줘”라는 의미 분석 결과와 90%의 신뢰 스코어를 출력한 경우, 프로세서는 “쿨럭”을 불필요한 단어로 결정할 수 있다. 또한, 저 신뢰 단어를 제외한 입력 데이터를 자연어 처리한 결과 발화문의 의미와 의미 분석 결과가 대응하지 않거나 신뢰 스코어가 가장 낮은 출력값이 획득된 경우, 프로세서는 저 신뢰 단어를 불필요한 단어로 결정할 수 있다. 예를 들어 “노래(작은 소리) 틀어줘”라는 입력 데이터에서 “노래(작은 소리)”을 제외하고,“틀어줘”에 대 한 자연어 처리를 수행하였고, 자연어 처리 모델은 “노래 틀어줘”라는 의미 분석 결과와 30%의 신뢰 스코어를 출력한 경우, 프로세서는 “쿨럭”을 중요 단어로 결정할 수 있다. 한편 프로세서는 불필요한 단어 및 중요 단어를 메모리에 저장할 수 있다. 또한 프로세서는 불필요한 단어 및 중요 단어를 훈련 데이터로 이용하여 인공지능 모델을 트레이닝 할 수 있다. 일 실시 예로, 앞서 설명한 바와 같이, 프로세서는 중요 단어로부터 추출된 특징(feature)을 이용하여, 오답을 야기한 도메인을 획득할 수 있다. 다른 실시 예로, 프로세서는, 다양한 도메인 및 다양한 세부 도메인을 가지는 중요 단어 들을 훈련 데이터로 이 용하여 인공지능 모델을 트레이닝 할 수 있다. 예를 들어 프로세서는 노이즈가 큰 환경에서 수집된 음성인 “노래”, 노이즈가 중간인 환경에서 수집된 음성인 “노래”, 노이즈가 작은 환경에서 수집된 음성인 “노래”, 남자가 발화한 음성인 “노래”, 여자가 발화한 음 성인 “노래”를 입력 값으로, 그리고 단어 “노래”를 출력 값으로, 인공지능 모델을 트레이닝 할 수 있다. 다음은 도메인 적응 방법을 설명한다. 본 발명의 실시 예에 따른 도메인 적응 방법은, 인공지능 모델이 제1 입 력 데이터에 대하여 출력한 제1 출력 값이 정답이고 상기 인공지능 모델이 제2 입력 데이터에 대하여 출력한 제 2 출력 값이 오답인 경우, 상기 제1 입력 데이터 및 상기 제2 입력 데이터를 이용하여 오답을 야기한 제1 도메 인을 획득하는 단계, 및, 상기 제1 도메인에 대하여 도메인 적응(domain adaptation)이 되도록 상기 인공지능 모델을 트레이닝 하는 단계를 포함할 수 있다. 이 경우 상기 트레이닝 된 인공지능 모델이 제3 입력 데이터에 대하여 출력한 제3 출력 값이 정답이고 상기 트 레이닝 된 인공지능 모델이 제4 입력 데이터에 대하여 출력한 제4 출력 값이 오답인 경우, 상기 제3 입력 데이 터 및 상기 제4 입력 데이터를 이용하여 오답을 야기한 제2 도메인을 획득하는 단계, 및, 상기 제2 도메인에 대 하여 도메인 적응(domain adaptation)이 되도록 상기 트레이닝 된 인공지능 모델을 재 트레이닝 하는 단계를 더 포함하고, 상기 제2 도메인은 상기 제1 도메인과 상이할 수 있다. 전술한 본 발명은, 프로그램이 기록된 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨터 가 읽을 수 있는 매체는, 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록장치를 포함한다. 컴퓨터가 읽을 수 있는 매체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있다. 또한, 상기 컴 퓨터는 단말기의 제어부를 포함할 수도 있다. 따라서, 상기의 상세한 설명은 모든 면에서 제한적으로 해석 되어서는 아니 되고 예시적인 것으로 고려되어야 한다. 본 발명의 범위는 첨부된 청구항의 합리적 해석에 의해 결정되어야 하고, 본 발명의 등가적 범위 내에서의 모든 변경은 본 발명의 범위에 포함된다."}
{"patent_id": "10-2019-0112402", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시 예에 따른 AI 장치를 나타낸다. 도 2는 본 발명의 일 실시 예에 따른 AI 서버를 나타낸다. 도 3은 본 발명의 일 실시 예에 따른 AI 시스템을 나타낸다. 도 4는 본 발명의 실시 예에 따른 인공지능 서버의 동작 방법을 설명하기 위한 도면이다. 도 5 내지 도 7은 본 발명의 실시 예에 따른, 오답을 야기한 도메인을 획득하는 방법을 설명하기 위한 도면이다. 도 8은 도메인 적응 방법을 설명하기 위한 도면이다. 도 9는 본 발명의 실시 예에 따른, Domainadversarial training of neural networks(DANN)을 이용한 도메인 적 응(domain adaptation)을 설명하기 위한 도면이다. 도 10은, 도메인 적응을 반복적으로 수행하면서 최적의 성능을 가지는 인공지능 모델을 선택하고, 히스토리를 관리하는 방법을 설명하기 위한 도면이다. 도 11은 본 발명의 실시 예에 따른, 발화문으로부터 중요 단어를 추출하고, 중요 단어에서 추출된 특징을 이용 하여 오답을 야기한 도메인을 획득하는 방법을 설명하기 위한 도면이다. 도 12는 본 발명의 실시 예에 따른, 저 신뢰 단어를 획득하고, 저 신뢰 단어의 중요도를 이용하여 저 신뢰 단어 를 구분하는 방법을 설명하기 위한 도면이다."}
