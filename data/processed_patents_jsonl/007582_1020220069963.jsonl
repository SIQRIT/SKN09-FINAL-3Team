{"patent_id": "10-2022-0069963", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0169608", "출원번호": "10-2022-0069963", "발명의 명칭": "컨텍스트 기반의 텍스트 오류 교정 방법 및 시스템", "출원인": "김준수", "발명자": "김준수"}}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "파서(parcer)가 원시 문서를 파싱하여, 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 오기(誤記) 단어를 찾는 단계;DB 구축기(DB developer)가 상기 오기 단어가 포함된 교정 전 문장(精製 前 文章)들을 교정 대상 DB에저장하고, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers)의 단말들로 전송하며, 상기크라우드 검수자의 리뷰에 의해 수정된 교정 후 문장(精製 後 文章)으로 레퍼런스 DB를 구성하는 단계; 및 교정기(corrector)가 상기 레퍼런스 DB를 기초로 상기 원시 문서에 포함된 교정 전 문장을 교정 후 문장으로 자동 교정하여 교정 문서를 생성하는 단계를 포함하는 컨텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 파서(parcer)가 오기 단어를 찾는 단계는,상기 원시 문서에서 마침표(period)와 줄 바꿈(carriage return)을 구분자로 하여 문장을 분리하는 단계;상기 분리된 문장에서 특수문자를 공백문자(space character)로 대체하고, 공백문자를 기준으로 단어를 구분하는 단계;상기 원시 문서에서 단어별 출현 횟수 또는 출현 빈도를 분석하고, 설정된 기준 이하의 출현 횟수 또는 출현 빈도를 보이는 단어를 오기 단어로 정의하는 단계를 포함하는 컨텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 상기 원시 문서에 포함된 문장의 개수에따라 가변적으로 설정되는 것을 특징으로 하는 컨텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 DB 구축기가 상기 구축된 레퍼런스DB에 저장된 교정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전송하고, 상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장하는 단계를 더포함하는 컨텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 경우, 상기 DB 구축기는 상기 발견된 오기 단어가 포함된 문장을 검수했던 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공하는 단계를 더 포함하는 컨텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,학습기(learner)가 상기 생성된 교정 문서를 기초로 머신 러닝용 데이터 셋을 구축하는 단계를 더 포함하는 컨공개특허 10-2023-0169608-3-텍스트 기반의 텍스트 오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 DB 구축기는, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 상기 교정 전 문장과 연관된 상기 데이터 셋을 검수 참고 문장으로 함께 전송하는 것을 특징으로 하는 컨텍스트 기반의 텍스트오류 교정 방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 DB 구축기는 상기 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 상기 구축된 데이터 셋과 연동된 인공지능 크라우드 검수자(AI crowd workers)에게 전송하는 것을 특징으로 하는 컨텍스트 기반의 텍스트 오류 교정방법."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "원시 문서를 파싱하여, 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린단어인 오기(誤記) 단어를 찾는 파서(parcer);상기 오기 단어가 포함된 교정 전 문장(精製 前 文章)들을 교정 대상 DB에 저장하고, 상기 교정 대상 DB의 교정전 문장들을 크라우드 검수자(crowd workers)의 단말들로 전송하며, 상기 크라우드 검수자의 리뷰에 의해 수정된 교정 후 문장(精製 後 文章)으로 레퍼런스 DB를 구성하는 DB 구축기(DB developer); 및상기 레퍼런스 DB를 기초로 상기 원시 문서에 포함된 교정 전 문장을 교정 후 문장으로 자동 교정하여 교정 문서를 생성하는 교정기(corrector)를 포함하는 컨텍스트 기반의 텍스트 오류 교정 시스템,"}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 파서는,상기 원시 문서에서 마침표(period)와 줄 바꿈(carriage return)을 구분자로 하여 문장을 분리하고, 상기 분리된 문장에서 특수문자를 공백문자(space character)로 대체하고, 공백문자를 기준으로 단어를 구분하며, 상기원시 문서에서 단어별 출현 횟수 또는 출현 빈도를 분석하고, 설정된 기준 이하의 출현 횟수 또는 출현 빈도를보이는 단어를 오기 단어로 정의하는 컨텍스트 기반의 텍스트 오류 교정 시스템."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 상기 원시 문서에 포함된 문장의 개수에따라 가변적으로 설정되는 것을 특징으로 하는 컨텍스트 기반의 텍스트 오류 교정 시스템."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 DB 구축기는,상기 구축된 레퍼런스DB에 저장된 교정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전송하고, 상기 품질검증자의 리뷰 결과 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장하는 컨텍스트 기반의 텍스트 오류교정 시스템.공개특허 10-2023-0169608-4-청구항 13 제12항에 있어서,상기 DB 구축기는,상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 경우 상기 발견된 오기 단어가 포함된 문장을 검수했던 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공하는 컨텍스트 기반의 텍스트 오류 교정시스템."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 생성된 교정 문서를 기초로 머신 러닝용 데이터 셋을 구축하는 학습기(learner)를 더 포함하는 컨텍스트기반의 텍스트 오류 교정 시스템."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,상기 DB 구축기는, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 상기 교정 전 문장과 연관된 상기 데이터 셋을 검수 참고 문장으로 함께 전송하는 것을 특징으로 하는 컨텍스트 기반의 텍스트오류 교정 시스템."}
{"patent_id": "10-2022-0069963", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 DB 구축기는 상기 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 상기 구축된 데이터 셋과 연동된 인공지능 크라우드 검수자(AI crowd workers)에게 전송하는 것을 특징으로 하는 컨텍스트 기반의 텍스트 오류 교정시스템."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 문서 데이터에서 교정 범위 및 교정 대상(단어 및 문장)을 알고리즘을 통해 선정하고, 교정 담당자가 교정 대상의 문맥 및 문장의 의미를 파악하여 잘못 표기된 단어를 교정하며, 교정 담당자가 교정한 문장을 검증 담당자로부터 품질을 검증받기 때문에 교정에 대한 신뢰도를 높으며, 상기와 같은 방식으로 교정된 단어 및 문장 은 인공지능 학습 데이터 셋으로 활용되고 이를 문서 데이터를 교정하는 프로그램으로 생성하여 대량의 문서를 자동으로 교정할 수 있는 컨텍스트 기반의 텍스트 오류 교정 방법에 관한 것이다."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컨텍스트 기반의 텍스트 오류 교정 기술에 관한 것으로, 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 오기(誤記) 단어를 찾기 위해 단순히 단어 자체를 검수하는 것으로는 교정율과 교정 속도에 한계가 있으므로 해당 오기 단어의 앞뒤 문맥(컨텍스트)을 함께 살펴보고 검수 하되 다수의 크라우드 검수자를 이용하여 동시다발적으로 검수를 수행하고, 검수 결과는 기계학습의 데이터 셋 으로 활용하여 크라우드 검수자를 점차 인공지능으로 대체함으로써 대량의 텍스트 데이터에 대한 오류 검증 및 교정의 속도를 배가하고 교정율을 획기적으로 향상시킬 수 있는 컨텍스트 기반의 텍스트 오류 교정 방법 및 시 스템에 관한 것이다."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨터나 스마트폰 또는 태블릿 PC 등이 널리 보급됨에 따라, 이러한 전자 단말 장치를 이용하여 전자 문서를 열람, 작성, 편집할 수 있도록 하는 다양한 종류의 전자 문서 관련 프로그램들이 출시되고 있다. 전자 단말 장치에서 사용 가능한 전자 문서 관련 프로그램들로는 기본적인 문서의 작성, 편집 등을 지원하는 워 드프로세서, 데이터의 입력, 산술연산, 데이터 관리를 보조하는 스프레드시트, 발표자의 발표를 보조하기 위한 프레젠테이션 프로그램들이 있다. 사용자는 이러한 전자 문서 관련 프로그램들을 사용할 때 전자 문서 상에서 오타를 내는 경우가 많다. 따라서 전자 문서 프로그램들은 맞춤법/문법 검사기능을 제공함으로써 사용자가 보다 쉽게 오타를 정정할 수 있도록 지 원하고 있다. 그러나 이와 같은 오타 정정 방식은 틀린 맞춤법, 유사단어는 쉽게 확인되지 않고 그대로 이용되는 경우가 많다. 특히, 단어로만 봤을 때는 오타가 아니지만 문장의 의미에 따라서 잘못된 표기인 단어들이 있다. 예를 들 면, “결재”는 오타가 아니지만 “카드 결재”로 쓰일 경우에는 잘못된 표기 방식으로 볼 수 있다. 종래의 오타 정정 시스템은 사전적으로 맞춤법이 잘못된 오타를 정정하는 것은 가능하나 문맥에 따라 다르게 사 용되는 단어는 교정이 불가능한 한계가 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허공보 제10-2140342호 (2020.07.27)"}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는 문서 데이터에서 교정 범위 및 교정 대상(단어 및 문장)을 알고리즘을 통해 선정하고, 교정 담당자가 교정 대상의 문맥 및 문장의 의미를 파악하여 잘못 표기된 단어를 교정하는 컨텍스트 기반의 텍스트 오류 교정 방법을 제공하는 것이다. 또한 본 발명이 해결하고자 하는 과제는 상기와 같은 방식으로 교정된 단어 및 문장은 인공지능 학습 데이터 셋 으로 활용되고 이를 문서 데이터를 교정하는 프로그램으로 생성하여 대량의 문서를 자동으로 교정하기 위한 것 이다."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 컨텍스트 기반의 텍스트 오류 교정 방법은 파서(parcer)가 원시 문서를 파싱하여, 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 오기(誤記) 단 어를 찾는 단계와, DB 구축기(DB developer)가 상기 오기 단어가 포함된 교정 전 문장(精製 前 文章)들을 교정 대상 DB에 저장하고, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers)의 단말들로 전송 하며, 상기 크라우드 검수자의 리뷰에 의해 수정된 교정 후 문장(精製 後 文章)으로 레퍼런스 DB를 구성하는 단 계 및 교정기(corrector)가 상기 레퍼런스 DB를 기초로 상기 원시 문서에 포함된 교정 전 문장을 교정 후 문장 으로 자동 교정하여 교정 문서를 생성하는 단계를 포함할 수 있다. 상기 파서(parcer)가 오기 단어를 찾는 단계는, 상기 원시 문서에서 마침표(period)와 줄 바꿈(carriage return)을 구분자로 하여 문장을 분리하는 단계와, 상기 분리된 문장에서 특수문자를 공백문자(space character)로 대체하고, 공백문자를 기준으로 단어를 구분하는 단계와, 상기 원시 문서에서 단어별 출현 횟수 또는 출현 빈도를 분석하고, 설정된 기준 이하의 출현 횟수 또는 출현 빈도를 보이는 단어를 오기 단어로 정의 하는 단계를 포함할 수 있다. 상기 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 상기 원시 문서에 포함된 문장의 개수에 따라 가변적으로 설정될 수 있다. 상기 DB 구축기가 상기 구축된 레퍼런스DB에 저장된 교정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전송 하고, 상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장하는 단계를 더 포함할 수 있다. 상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 경우, 상기 DB 구축기는 상기 발견된 오기 단어가 포함된 문 장을 검수했던 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공하는 단계를 더 포함 할 수 있다. 학습기(learner)가 상기 생성된 교정 문서를 기초로 머신 러닝용 데이터 셋을 구축하는 단계를 더 포함할 수 있 다. 상기 DB 구축기는, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 상기 교정 전 문장과 연관된 상기 데이터 셋을 검수 참고 문장으로 함께 전송할 수 있다.상기 DB 구축기는 상기 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 상기 구축된 데이터 셋과 연동된 인공 지능 크라우드 검수자(AI crowd workers)에게 전송할 수 있다. 본 발명의 실시예2에 따른 시스템은 원시 문서를 파싱하여, 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 오기(誤記) 단어를 찾는 파서(parcer)와, 상기 오기 단어가 포함된 교정 전 문장(精製 前 文章)들을 교정 대상 DB에 저장하고, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검 수자(crowd workers)의 단말들로 전송하며, 상기 크라우드 검수자의 리뷰에 의해 수정된 교정 후 문장(精製 後 文章)으로 레퍼런스 DB를 구성하는 DB 구축기(DB developer) 및 상기 레퍼런스 DB를 기초로 상기 원시 문서에 포함된 교정 전 문장을 교정 후 문장으로 자동 교정하여 교정 문서를 생성하는 교정기(corrector)를 포함할 수 있다. 상기 파서는, 상기 원시 문서에서 마침표(period)와 줄 바꿈(carriage return)을 구분자로 하여 문장을 분리하 고, 상기 분리된 문장에서 특수문자를 공백문자(space character)로 대체하고, 공백문자를 기준으로 단어를 구 분하며, 상기 원시 문서에서 단어별 출현 횟수 또는 출현 빈도를 분석하고, 설정된 기준 이하의 출현 횟수 또는 출현 빈도를 보이는 단어를 오기 단어로 정의할 수 있다. 상기 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 상기 원시 문서에 포함된 문장의 개수에 따라 가변적으로 설정될 수 있다. 상기 DB 구축기는, 상기 구축된 레퍼런스DB에 저장된 교정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전 송하고, 상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장할 수 있다. 상기 DB 구축기는, 상기 품질 검증자의 리뷰 결과 오기 단어가 발견된 경우 상기 발견된 오기 단어가 포함된 문 장을 검수했던 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공할 수 있다. 상기 생성된 교정 문서를 기초로 머신 러닝용 데이터 셋을 구축하는 학습기(learner)를 더 포함할 수 있다. 상기 DB 구축기는, 상기 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 상기 교정 전 문장과 연관된 상기 데이터 셋을 검수 참고 문장으로 함께 전송할 수 있다. 상기 DB 구축기는 상기 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 상기 구축된 데이터 셋과 연동된 인공 지능 크라우드 검수자(AI crowd workers)에게 전송할 수 있다."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예에 의하면 문서 데이터에서 교정 범위 및 교정 대상(단어 및 문장)을 알고리즘을 통해 선정하 고, 교정 담당자가 교정 대상의 문맥 및 문장의 의미를 파악하여 잘못 표기된 단어를 교정하며, 교정 담당자가 교정한 문장을 검증 담당자로부터 품질을 검증받기 때문에 교정에 대한 신뢰도를 높일 수 있다. 또한, 본 발명의 실시예에 의하면 상기와 같은 방식으로 교정된 단어 및 문장은 인공지능 학습 데이터 셋으로 활용되고 이를 문서 데이터를 교정하는 프로그램으로 생성하여 대량의 문서를 자동으로 교정할 수 있다."}
{"patent_id": "10-2022-0069963", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 본 발명의 몇 가지 실시예들을 도면을 이용하여 상세히 설명한다. 다만 이것은 본 발명을 어느 특정한 실 시예에 대해 한정하려는 것이 아니며 본 발명의 기술적 사상을 포함하는 모든 변형(transformations), 균등물 (equivalents) 및 대체물(substitutions)은 본 발명의 범위에 포함되는 것으로 이해되어야 한다. 본 명세서에서 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서 어느 한 구성이 어떤 서브 구성을 \"구비(have)\" 또는 \"포함(comprise)\" 한다고 기재한 경우, 특 별히 반대되는 기재가 없는 한 다른(other) 구성을 제외하는 것이 아니라 다른 구성을 더 포함할 수도 있음을 의미한다. 본 명세서에서 \"...유닛(Unit)\", \"...모듈(Module)\" 및 \"컴포넌트(Component)\"의 용어는 적어도 하나의 기능이 나 동작을 처리하는 단위를 의미하며, 하드웨어, 소프트웨어 또는 하드웨어 및 소프트웨어의 결합으로 구현될 수도 있다. 도 1는 실시예1에 따른 컨텍스트 기반의 텍스트 오류 교정 시스템의 블록도이다. 실시예1은 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 오기 (誤記) 단어를 찾고, 오기 단어가 포함된 문장의 문맥에 기초하여 교정하며, 교정 결과를 기계학습의 데이터 셋 으로 활용하여 대량의 텍스트 데이터에 대한 오류를 검증할 수 있는 기술에 관한 것이다. 도 1를 참조하면, 실시예1에 따른 시스템은 파서, DB 구축기 및 교정기을 포함한다. 참고로, 본 명세서의 모든 실시예에서 원시 문서라 함은 잘못 표기된 단어들이 교정되기 전의 문서를 의미하고, 교정 문서라 함은 시스템에 의해 오기(誤記)가 자동으로 검증 및 교정된 문서를 의미한다. 파서(parcer)는 적어도 하나 이상의 원시 문서를 수집한다. 그리고 파서는 원시 문서를 파싱 (parsing)하여 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완전하지만 문맥상 틀린 단어인 단어인 오기(誤記) 단어를 찾는다. 이를 위해, 파서는 원시 문서별로 문서 번호를 부여한다. 그리고 파서는 선택된 문서 번호의 원시 문 서에서 문장 및 단어를 추출하고, 각 문장과 단어마다 문장 추적 번호와 단어 추적 번호를 부여함으로써 텍스트 데이터를 분류한다(도 2 참조). 파서는 마침표, 줄 바꿈을 구분자로 하여 문장을 분리할 수 있다. 파서는 분리된 문장에서 특수기호를 공백문자(space character)로 대체하고 공백문자를 기준으로 단어를 구분하여 단어 추적 번호를 부여한다. 예를 들면, 파서는 “협력/협조”에서 “/”를 공백문자 대체하여 “협력”과 “협조”로 구분하고 각각에 단어 추적 번호를 부여할 수 있다. 파서는 조사를 제외한 단어에 추적 번호를 부여할 수도 있고, 조사를 포함한 단어에 단어 추적 번호를 부 여할 수도 있다. 예를 들면, 파서는 “자동차를 타고 교외로 나갈 것 같다”라는 문장에서 “자동차”에 단어 추적 번호 1을 부여할 수도 있고 “자동차를”에 단어 추적 번호 1을 부여할 수도 있다. 또한 파서는 '것, 줄, 수, 대로, 뿐, 데’와 같은 의존명사를 포함한 단어에도 단어 추적 번호를 부여할 수도 있다. 예를 들어, 파서는 “자동차를 타고 교외로 나갈 것 같다”의 문장에서 “자동차를”, “타고” “교외로 ”, “나갈” “것” “같다” 각각에 단어 추적 번호를 부여할 수 있다. 한편, 도 3에서 보듯, 파서는 원시 문서에 포함된 단어별 출현 횟수 또는 출현 빈도에 기초하여 기준 이하 의 출현 횟수 또는 출현 빈도를 보이는 단어를 오기 단어로 정의한다. 이 때, DB 구축기는 파서에서 오기로 정의한 단어가 포함된 교정 전 문장을 교정 대상 DB에 저장한다. 예컨대, 파서는 원시 문서에서 출현 빈도가 100회 미만 또는 출현빈도 6% 미만인 단어를 오기 단어로 선정 할 수 있다. 파서는 오기 단어로 선정하는 기준(예를 들면, 출현 빈도 100회)의 경계선에 위치된 단어는 기존에 오기 단어로 선정된 이력에 기초하여 오기 단어로 선정할 수도 있다. 파서에서 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 원시 문서에 포함된 문장의 개 수에 따라 가변적으로 설정될 수 있다. 예컨대, 원시 문서에 포함된 문장의 개수가 적으면, 문장의 개수가 많은 경우보다 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준을 작게 설정할 수 있다.파서는 원시 문서의 구조분석과 형태소 분석을 하고 말뭉치와 사전 및 LDA(Latent Dirichlet Allocation)) 분류 방법을 이용하여 단어의 분석을 수행함으로써 오기 단어를 선정할 수 있다. 참고로 LDA는 문 서 수준에서 단어의 동시 출현 패턴에 기반을 둔 분석 방식이다. 예를 들면, DB 구축기는“ㅏ”, “안면인삭”, “자돔차”를 오기 단어로 선정할 수 있다. DB 구축기는 파서에서 분류(추적 번호부여)된 원시 문서를 분석하여 오기 단어가 포함된 교정 전 문 장을 교정 대상 DB에 저장한다. 예를 들면, DB 구축기는 도 2에서 보듯, 오기 단어인 '안면인삭'이 포함된 “특히, 안면인삭 기술이 전 세 계 광 범위한 …”의 문장 전체를 교정 전 문장으로 선정한다. DB 구축기는 하나의 문장 내에 서로 연관된 두 개 이상의 관련 단어가 포함되면 상기 두개 이상의 단어들 을 오기 단어들로 선정하고, 해당 오기 단어가 포함된 교정 전 문장을 교정 대상 DB에 더 저장할 수도 있 다. DB 구축기는 AI 알고리즘을 이용하여 단어를 벡터(vector)로 변환하고 문맥(컨텍스트)에 의한 서로 연 관된 두 개 이상의 관련 단어를 추출할 수도 있다. 예를 들면, DB 구축기는 문장번호 1에 “카드”와 “결재” 단어가 포함되어 있다면 해당 문장을 교정 전 문장으로 선정한다. 즉, “결재” 단어 자체는 완전한 단어이고 오기로 분류되지 않지만 “카드”와 함께 쓰일 경우에는 오기로 분류되어 교정 대상이 될 수 있다. DB 구축기는 “결재” 단어가 포함된 문장을 교정 전 문장으로 선정하여 교정 대상 DB에 저장한다. DB 구축기는 미리 설정된 범위 내에 배치된 문장 내에 서로 연관된 두 개 이상의 단어가 포함되면 두 개 이상의 단어들을 오기 단어들로 선정하여 교정 대상 DB에 더 저장할 수도 있다. 예를 들면, DB 구축기는 문장번호1에 “카드”가 포함되어 있고, 문장번호 2에 “결재”가 포함되어 있으 면 “카드”와 “결재”가 포함된 문장번호 1과 문장번호 2를 교정 전 문장으로 선정한다. 도 4에서 보듯, DB 구축기는 선정된 오기 단어가 포함된 동일한 원시 문서의 다른 문장들을 조회하고, 조 회된 다른 문장을 교정 대상 DB에 더 저장한다. DB 구축기는 교정 대상 DB에 저장된 오기 단어가 포함된 교정 전 문장들을 크라우드 검수자의 단말로 제공한다. 참고로, 크라우드 검수자는 교정 방법을 교육받은 적어도 둘 이상의 검수자들일 수 있다. 크라우드 검수자는 DB 구축기로부터 제공받은 교정 전 문장의 문맥 및 의미를 파악하고 문장에 포함된 오기 단어를 교정한다. 일 예로, DB 구축기는 교정 대상 DB에 저장된 문장들 중 교정 대상 단어(오기 단어)인 “결재”가 포 함된 동일한 문서의 다른 교정 전 문장들을 목록화 하여 크라우드 검수자의 단말로 제공한다. 이때, DB 구축기 는 크라우드 검수자가 교정 전 문장들을 선택적으로 수정할 수 있는 사용자 인터페이스를 제공할 수 있다. 예를 들면, DB 구축기는 교정 전 문장들 각각의 일측에 'OK'버튼을 제공하고 교정 전 문장들의 목록 하단 에 “일괄 정제” 버튼을 제공한다. 크라우드 검수자가 교정할 문장들만 선택하여 'OK' 버튼을 클릭한 뒤 “일 괄 정제” 버튼을 클릭하면 “OK”버튼이 클릭된 교정 전 문장들만 '결재'가 '결제'로 교정(수정)된다. 만약, 크라우드 검수자가 'OK'버튼을 누르지 않은 교정 전 문장(문장번호 15)은 “일괄 정제” 버튼을 누르더라도 '결 재'가 그대로 유지될 수 있다. DB 구축기는 크라우드 검수자의 리뷰에 의해 교정(수정)된 교정 후 문장을 레퍼런스 DB에 저장한다. 도 5에서 보듯, DB 구축기는 선정된 오기 단어가 포함된 다른 원시 문서의 다른 문장들을 조회하고, 조회 된 다른 원시 문서의 문장을 교정 대상 DB에 더 저장하여 크라우드 검수자의 단말로 전송할 수도 있다. 예를 들면, DB 구축기는 문서 번호 1에 5번째 문장에서 “걸재를”의 단어가 오기 단어로 선정되면 다른 문서 번호(예를 들면, 문서 번호 3, 18, 39)에서 “걸재를”이 포함된 문장을 교정 전 문장으로 선정하여 교정 대상 DB에 저장할 수 있다(도 5 참조). DB 구축기는 교정 전 문장들 각각의 일측에 ‘OK’버튼을 제 공하고, 교정 전 문장들의 목록 하단에 “일괄 정제” 버튼을 제공한다. 크라우드 검수자가 교정할 문장들만 선택하여 ‘OK’ 버튼을 클릭한 뒤 “일괄 정제” 버튼을 클릭하면 “OK” 버튼이 클릭된 교정 전 문장들만 ‘결재’가 ‘결제’로 교정(수정)된다. 만약, 크라우드 검수자가 ‘OK’버튼 을 누르지 않은 교정 전 문장(문장번호 15)은 “일괄 정제” 버튼을 누르더라도 ‘결재’가 그대로 유지될 수있다. DB 구축기는 크라우드 검수자의 리뷰에 의해 수정된 교정 후 문장을 레퍼런스 DB에 저장한다. 교정기은 레퍼런스 DB를 기초로 원시 문서에 포함된 교정 전 문장을 교정 후 문장으로 자동 교정하여 교정 문서를 생성한다. 예컨대, 교정기은 파서에 의해 문장에 부여된 단어 추적 번호와 문장 추적번호를 통해 원시 문서에서 교정 문장을 추적하고 이를 교정하여 교정 문서로 저장한다. 예컨대, 교정기은 교정 전 문장 번호가 문서 1, 문장 추적 번호 3, 단어 추적 번호 2이면, 원시 문서의 문 서 1, 문장 추적 번호 3, 단어 추적 번호 2에 대응하는 텍스트를 레퍼런스 DB에 저장된 텍스트로 치환하여 교정 문서로 저장한다. 교정기은 교정 문서의 확장자를 원시 문서와 동일한 확장자로 저장할 수 있다. 한편, DB 구축기는 레퍼런스DB에 저장된 교정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전송하고, 품질 검증자의 리뷰 결과 오기 단어가 발견된 문장을 교정 대상 DB에 재 저장한다. 예컨대, 품질 검증자로부터 리뷰된 크라우드 검수자의 교정 후 문장들 중에 오기 및 문맥 오류가 발견되면, DB 구축기는 오기 단어가 발견된 문장을 교정 대상 DB에 재 저장하고, 해당 문장을 수정한 크라우드 검수자가 수행한 다른 검수 문장들을 품질 검증자 단말로 전송할 수도 있다. DB 구축기는 품질 검증자 단말로부터 크라우드 검수자의 다른 교정 후 문장들을 리뷰 결과를 제공받아 교정 대상 DB에 재 저장한다. 본 실시예는 학습기(learner)를 더 포함할 수 있다. 학습기는 오기가 교정된 교정 문서를 기초로 머신 러닝용 데이터 셋을 구축한다. 이 때 DB 구축기는 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 교정 전 문장과 연관된 데이터 셋을 검수에 참고할 문장으로써 함께 전송한다. 또한, DB 구축기는 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 구축된 데이터 셋과 연동된 인공지능 크라우드 검수자(AI crowd workers)(미도시)에게 전송할 수도 있다. 인공지능 크라우드 검수자는 전술한 크라우 드 검수자와 동일한 역할을 수행한다. 학습기의 머신 러닝용 데이터 셋은 문서를 교정하는 프로그램으로 활용되어 대량의 문서들의 오기를 빠른 시간 에 정확하게 수정하는 것이 가능하다. 도 6은 본 발명의 실시예2에 따른 컨텍스트 기반의 텍스트 오류 교정 방법을 예시한 개략도이다. 본 실시예의 방법은 문서에서 문장 및 단어를 분류하고, 미리 정해진 기준에 의해 교정 범위 및 교정 대상(단어 및 문장)을 알고리즘을 통해 선정한다. 그리고 크라우드 검수자가 교정 대상의 문맥 및 문장의 의미를 파악하여 교정 대상 단어를 교정한다. 크라우드 검수자에 의해 교정된 문장은 교정 대상 DB에 저장되고 품질 검증자로부 터 품질을 검증 받고 품질 검증까지 완료된 문장은 레퍼런스 DB에 저장되어 교정 전 문서를 자동으로 교정하여 문서를 생성한다. 이와 같은 방식으로 교정된 문장 및 단어는 인공지능 학습 데이터로 활용되어 문서를 자동으로 교정하는 프로그 램에 사용될 수 있다. 도 7은 본 발명의 실시예2에 따른 문서 데이터의 교정 방법을 나타낸 흐름도이다. 본 발명의 방법은 오기(誤記) 단어를 찾는 단계(S110), 레퍼런스 DB를 구성하는 단계(S120), 교정 문서를 생성 하는 단계(S130)를 포함한다. 오기(誤記) 단어를 찾는 단계(S110)에서, 파서(parcer)는 적어도 하나 이상의 원시 문서를 수집한다. 파서는 원시 문서를 파싱(parsing)하여 잘못된 입력으로 인해 단어의 의미를 알 수 없거나 단어 자체는 완 전하지만 문맥상 틀린 단어인 오기(誤記) 단어를 찾는다. 예컨대, 파서는 원시 문서별로 문서 번호를 부여한다. 파서는 수집된 원시 문서에서 문장 및 단어를 추출하여 문장 추적 번호와 단어 추적 번호를 부여하여 텍스트 데이터를 분류한다. 오기(誤記) 단어를 찾는 단계(S110)는 문장을 분리하는 단계(S111), 공백문자를 기준으로 단어를 구분하는 단계 (S112) 및 오기 단어로 정의하는 단계(S113)를 포함할 수 있다(도 8 참조). 문장을 분리하는 단계(S111)에서 파서는 원시 문서에서 마침표, 줄 바꿈을 구분자로 하여 문장을 분리한다. 단어를 구분하는 단계(S112)에서 파서는 상기 분리된 문장에서 특수기호를 공백문자(space character)로 대체하고 공백문자를 기준으로 단어를 구분하여 단어 추적 번호를 부여한다. 예를 들면, 파서는 “협력/협 조”에서 “/”를 공백문자 대체하여 “협력”, “협조” 각각에 단어 추적 번호를 부여할 수 있다. 파서는 조사를 제외한 단어에 추적 번호를 부여할 수도 있고, 조사를 포함한 단어에 단어 추적 번호를 부 여할 수도 있다. 예를 들면, 파서는 “자동차를 타고 교외로 나갈 것 같다”라는 문장에서 “자동차”에 단어 추적 번호 1을 부여할 수도 있고 “자동차를”에 단어 추적 번호 1을 부여할 수도 있다. 파서는 '것, 줄, 수, 대로, 뿐, 데’와 같은 의존명사를 포함한 단어에도 단어 추적 번호를 부여할 수도 있다. 예를 들어, 파서는 “자동차를 타고 교외로 나갈 것 같다”의 문장에서 “자동차를”, “타고” “ 교외로”, “나갈” “것” “같다” 각각에 단어 추적 번호를 부여할 수 있다. 오기 단어로 정의하는 단계(S113)에서 파서는 원시 문서에 포함된 단어별 출현 횟수 또는 출현 빈도에 기 초하여 기준 이하의 출현 횟수 또는 출현 빈도를 보이는 단어를 오기 단어로 정의한다. 이 때, DB 구축기 는 파서에서 오기로 정의된 단어가 포함된 교정 전 문장을 교정 대상 DB에 저장한다. 예컨대, 파서는 원시 문서에서 출현 빈도가 100회 미만 또는 출현빈도 6% 미만인 단어를 오기 단어로 선정 할 수도 있다. 파서는 오기 단어로 선정하는 기준(예를 들면, 출현 빈도 100회)의 경계선에 위치된 단어는 기존에 오기 단어로 선정된 이력에 기초하여 오기 단어로 선정할 수도 있다. 파서에서 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준은, 원시 문서에 포함된 문장의 개 수에 따라 가변적으로 설정될 수 있다. 예컨대, 원시 문서에 포함된 문장의 개수가 적으면, 문장의 개수가 많은 경우보다 오기 단어로 정의하기 위한 출현 횟수 또는 출현 빈도의 기준을 작게 설정할 수 있다. 파서는 원시 문서의 구조분석과 형태소 분석을 하고 말뭉치와 사전 및 LDA(Latent Dirichlet Allocation)) 분류 방법을 이용하여 단어의 분석을 수행함으로써 오기 단어를 선정할 수도 있다. 예를 들면, DB 구축기는“ㅏ”, “안면인삭”, “자돔차”를 오기 단어로 선정할 수 있다. 레퍼런스 DB를 구성하는 단계(S120)에서 DB 구축기는 파서에서 분류(추적 번호부여)된 원시 문서를 분석하여 오기 단어가 포함된 교정 전 문장을 교정 대상 DB에 저장한다. 예를 들면, DB 구축기는 도 2에서 처럼 오기 단어인 “안면인삭”이 포함된 “특히, 안면인삭 기술이 전 세계 광 범위한 …”의 문장 전체를 교정 전 문장으로 선정한다. DB 구축기는 하나의 문장 내에 서로 연관된 두 개 이상의 관련 단어가 포함되면 상기 두 개 이상의 단어들 을 오기 단어들로 선정하고, 해당 오기 단어가 포함된 교정 전 문장을 교정 대상 DB에 더 저장할 수도 있 다. DB 구축기는 AI 알고리즘을 이용하여 단어를 벡터(vector)로 변환하고 문맥(컨텍스트)에 의한 서로 연 관된 두 개 이상의 관련 단어를 추출할 수도 있다. 예를 들면, DB 구축기는 문장번호 1에 “카드”와 “결재” 단어가 포함되어 있다면 해당 문장을 교정 전 문장으로 선정한다. 즉, “결재” 단어 자체는 완전한 단어이고 오기로 분류되지 않지만 “카드”와 함께 쓰일 경우에는 오기로 분류되어 교정 대상이 될 수 있다. DB 구축기는 “결재” 단어가 포함된 문장을 교정 전 문장으로 선정하여 교정 대상 DB에 저장한다. DB 구축기는 미리 설정된 범위 내에 배치된 문장 내에 서로 연관된 두 개 이상의 단어가 포함되면 두 개 이상의 단어들을 오기 단어들로 선정하여 교정 대상 DB에 더 저장할 수도 있다. 예를 들면, DB 구축기는 문장번호1에 “카드”가 포함되어 있고, 문장번호 2에 “결재”가 포함되어 있으 면 “카드”와 “결재”가 포함된 문장번호 1과 문장번호 2를 교정 전 문장으로 선정한다. 도 4에서 보듯, DB 구축기는 선정된 오기 단어가 포함된 동일한 원시 문서의 다른 문장들을 조회하고, 조 회된 다른 문장을 교정 대상 DB에 더 저장한다. DB 구축기는 교정 대상 DB에 저장된 오기 단어가 포함된 교정 전 문장들을 크라우드 검수자의 단말로 제공한다. 참고로, 크라우드 검수자는 교정 방법을 교육받은 적어도 둘 이상의 검수자들일 수 있다. 크라우드검수자는 DB 구축기로부터 제공받은 교정 전 문장의 문맥 및 의미를 파악하고 문장에 포함된 오기 단어를 교정한다. 일 예로, DB 구축기는 교정 대상 DB에 저장된 문장들 중 교정 대상 단어(오기 단어)인 “결재”가 포 함된 동일한 문서의 다른 교정 전 문장들을 목록화 하여 크라우드 검수자의 단말로 제공한다. 이때, DB 구축기 는 크라우드 검수자가 교정 전 문장들을 선택적으로 수정할 수 있는 사용자 인터페이스를 제공할 수 있다. 예를 들면, DB 구축기는 교정 전 문장들 각각의 일측에 ‘OK’버튼을 제공하고 교정 전 문장들의 목록 하 단에 “일괄 정제” 버튼을 제공한다. 크라우드 검수자가 교정할 문장들만 선택하여 ‘OK’ 버튼을 클릭한 뒤 “일괄 정제” 버튼을 클릭하면 “OK”버튼이 클릭된 교정 전 문장들만 ‘결재’가 ‘결제’로 교정(수정)된다. 만약, 크라우드 검수자가 ‘OK’버튼을 누르지 않은 교정 전 문장(문장번호 15)은 “일괄 정제” 버튼을 누르더 라도 ‘결재’가 그대로 유지될 수 있다. DB 구축기는 크라우드 검수자의 리뷰에 의해 교정(수정)된 교정 후 문장을 레퍼런스 DB에 저장한다. 도 5에서 보듯, DB 구축기는 선정된 오기 단어가 포함된 다른 원시 문서의 다른 문장들을 조회하고, 조회 된 다른 원시 문서의 문장을 교정 대상 DB에 더 저장하여 크라우드 검수자의 단말로 전송할 수도 있다. 예를 들면, DB 구축기는 문서 번호 1에 5번째 문장에서 “걸재를”의 단어가 오기 단어로 선정되면 다른 문서 번호(예를 들면, 문서 번호 3, 18, 39)에서 “걸재를”이 포함된 문장을 교정 전 문장으로 선정하여 교정 대상 DB에 저장할 수 있다(도 5 참조). DB 구축기는 교정 전 문장들 각각의 일측에 ‘OK’버튼을 제 공하고, 교정 전 문장들의 목록 하단에 “일괄 정제” 버튼을 제공한다. 크라우드 검수자가 교정할 문장들만 선택하여 ‘OK’ 버튼을 클릭한 뒤 “일괄 정제” 버튼을 클릭하면 “OK” 버튼이 클릭된 교정 전 문장들만 ‘결재’가 ‘결제’로 교정(수정)된다. 만약, 크라우드 검수자가 ‘OK’버튼 을 누르지 않은 교정 전 문장(문장번호 15)은 “일괄 정제” 버튼을 누르더라도 ‘결재’가 그대로 유지될 수 있다. DB 구축기는 크라우드 검수자의 리뷰에 의해 교정 전 문장이 수정된 교정 후 문장을 입력 받아 레퍼런스 DB에 저장한다. 교정 문서를 생성하는 단계(S130)에서 교정기는 레퍼런스 DB를 기초로 원시 문서에 포함된 교정 전 문장을 교정 후 문장으로 자동 교정하여 교정 문서를 생성한다. 예컨대, 교정기은 파서에 의해 문장에 부여된 단어 추적 번호와 문장 추적번호를 통해 원시 문서에서 교정 문장을 추적하고 이를 교정하여 교정 문서로 저장한다. 예컨대, 교정기은 교정 전 문장 번호가 문서 1, 문장 추적 번호 3, 단어 추적 번호 2이면, 원시 문서의 문 서 1, 문장 추적 번호 3, 단어 추적 번호 2에 대응하는 텍스트를 레퍼런스 DB에 저장된 텍스트로 치환하여 교정 문서로 저장한다. 교정기은 교정 문서의 확장자를 원시 문서와 동일한 확장자로 저장할 수 있다. 한편, 본 실시예에서는 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장하는 단계(미도시) 및 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공하는 단계(미도시)를 더 포함할 수 있다. 오기 단어가 발견된 문장을 상기 교정 대상 DB에 재 저장하는 단계는 DB 구축기가 레퍼런스DB에 저장된 교 정 후 문장들 중 적어도 하나를 품질 검증자 단말로 전송하고, 품질 검증자의 리뷰 결과 오기 단어가 발견된 문 장을 교정 대상 DB에 재 저장한다. 크라우드 검수자의 다른 검수 문장(들)을 추려서 상기 품질 검증자에게 제공하는 단계는 품질 검증자로부터 리 뷰된 크라우드 검수자의 교정 후 문장들 중에 오기 및 문맥 오류가 발견되면, DB 구축기는 오기 단어가 발 견된 문장을 교정 대상 DB에 재 저장하고, 해당 문장을 수정한 크라우드 검수자가 검수 했던 다른 검수 문장들 을 품질 검증자 단말로 전송할 수 있다. 그리고 DB 구축기는 품질 검증자 단말로부터 크라우드 검수자의 다른 교정 후 문장들을 리뷰 결과를 제공받아 교정 대상 DB에 재 저장할 수 있다. 본 실시예는 머신 러닝용 데이터 셋을 구축하는 단계(미도시)를 더 포함할 수 있다. 머신 러닝용 데이터 셋을 구축하는 단계는 학습기가 오기가 교정된 교정 문서를 기초로 머신 러닝용 데이터 셋 을 구축한다.이 때 DB 구축기는 교정 대상 DB의 교정 전 문장들을 크라우드 검수자(crowd workers) 단말들로 전송할 때, 교 정 전 문장과 연관된 데이터 셋을 검수 참고 문장으로 함께 전송한다. 또한, DB 구축기는 교정 대상 DB의 교정 전 문장들 중 적어도 일부를 구축된 데이터 셋과 연동된 인공지능 크라 우드 검수자(AI crowd workers)에게 전송할 수도 있다. 인공지능 크라우드 검수자는 전술한 크라우드 검수자와 동일한 역할을 수행한다. 학습기의 머신 러닝용 데이터 셋은 문서를 교정하는 프로그램으로 활용되어 대량의 문서들의 오기를 빠른 시간 에 정확하게 수정하는 것이 가능하다. 이상에서는 본 발명에 관한 몇 가지 실시예를 참조하여 설명하였지만, 해당 기술 분야에서 통상의 지식을 가진 자라면 하기의 특허 청구의 범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명 을 다양하게 수정 및 변경시킬 수 있음을 이해할 수 있을 것이다. 또한 이상에서 설명한 실시예들 중 방법에 관한 발명은 프로그램으로 구현되거나 그 프로그램이 저장된 컴퓨터 로 판독 가능한 기록매체로 구현될 수 있다. 즉, 본 발명은 애플리케이션 형태로 구현될 수 있으며, 구글사의 안드로이드나 애플사의 IOS를 기반으로 실행되 는 스마트폰, 태블릿PC 등의 모바일 단말기에서 실행되는 소프트웨어 프로그램으로 구현되거나, 구글 글래스, 애플 워치, 삼성 갤럭시 워치, 스마트 워치 등과 같은 웨어러블 장치에서 실행되는 소프트웨어 프로그램으로 구 현되거나, 마이크로소프트사의 윈도우즈나 구글사의 크롬OS를 기반으로 실행되는 노트북PC, 데스크탑PC 등에서 실행되는 소프트웨어 프로그램으로 구현될 수 있다. 또한 상술한 장치 또는 시스템의 부분적 기능들은 이를 구현하기 위한 명령어들의 프로그램이 유형적으로 구현 됨으로써 컴퓨터를 통해 판독될 수 있는 기록매체에 포함되어 제공될 수도 있다. 컴퓨터로 판독 가능한 기록매 체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 컴퓨터 판 독 가능한 기록매체의 예에는 하드 디스크, 플로피 디스크 및 자기테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리, USB 메모리 등과 같은 프로그램 명령을 저장 하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다."}
{"patent_id": "10-2022-0069963", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1는 실시예1에 따른 본 발명의 교정 시스템의 블록도이다. 도 2은 실시예1에서 텍스트를 분류하는 방식을 나타낸 도면이다. 도 3는 실시예1에서 단어의 출현 빈도를 나타낸 도면이다. 도 4는 실시예1에서 교정 대상 단어를 문서에 적용하는 것을 나타낸 도면이다. 도 5는 실시예1에서 교정 대상 문장들을 크라우드 검수자에게 제공하는 방식을 나타낸 도면이다. 도 6은 본 발명의 실시예2에 따른 컨텍스트 기반의 텍스트 오류 교정 방법을 예시한 개략도이다. 도 7은 도 6의 방법을 나타낸 흐름도이다. 도 8은 도 7에 도시된 오기 단어를 찾는 단계를 구체화한 흐름도이다."}
