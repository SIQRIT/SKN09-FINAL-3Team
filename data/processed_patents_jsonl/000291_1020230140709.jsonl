{"patent_id": "10-2023-0140709", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0056704", "출원번호": "10-2023-0140709", "발명의 명칭": "스마트 컨트랙트 데이터의 전처리 방법, GAN 모델 학습 방법 및 스마트 컨트랙트 데이터 생성", "출원인": "한국전력공사", "발명자": "최윤호"}}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업단계; 및추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계를 포함하는 스마트 컨트랙트 데이터의 전처리 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 토큰화 단계에서는,ANTLR를 사용하여 불필요한 주석 분분을 제거하고 각각의 단어의 의미를 가지는 데이터만을 분리하는 스마트 컨트랙트 데이터의 전처리 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 AST 추출 작업 단계에서는,스마트 컨트랙트 소스코드의 컴파일을 통해, 소스코드 내의 요소들의 관계를 트리형식으로 나타낸 AST를 추출하는 스마트 컨트랙트 데이터의 전처리 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 함수 추출 및 전처리 컨트랙트 생성 단계에서는,추출된 AST를 활용하여 함수 내에 있는 변수들의 의존성(dependency)을 탐색하고, 의존성이 발견되면 이러한 의존성을 따라서 변수를 새로 선언하는 스마트 컨트랙트 데이터의 전처리 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "모델 학습용 스마트 컨트랙트의 리얼 데이터를 수집하는 단계;상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 단계; 전처리가 수행된 리얼 데이터를 이용하여 모델 학습용 위조 데이터를 생성하는 단계;전처리가 수행된 리얼 데이터와 생성된 상기 위조 데이터로 스마트 컨트랙트 데이터셋을 구성하는 단계; 및상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 상기 스마트 컨트랙트 데이터셋으로 학습시키는 단계공개특허 10-2025-0056704-3-를 포함하는 스마트 컨트랙트를 위한 GAN 모델 학습 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 위조 데이터를 생성하는 단계는,상기 리얼 데이터를 모사하는 생성(Generator) 모델에 의해 수행되는 스마트 컨트랙트를 위한 GAN 모델 학습 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 구별(Discriminator) 모델의 구별 결과로, 상기 생성(Generator) 모델을 학습시키는 단계를 더 포함하고,상기 구별(Discriminator) 모델과 상기 생성(Generator) 모델에 대한 학습은, 경쟁학습의 관계인 스마트 컨트랙트를 위한 GAN 모델 학습 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 전처리를 수행하는 단계는,상기 리얼 데이터에서 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업단계; 및추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계를 포함하는 스마트 컨트랙트를 위한 GAN 모델 학습 방법."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "수집된 모델 학습용 스마트 컨트랙트의 리얼 데이터를 보유하는 리얼 데이터 획득부;상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 전처리 수행부;전처리가 수행된 리얼 데이터를 이용하여 모델 학습용 위조(fake) 데이터를 생성하는 생성(Generator) 모델;전처리가 수행된 리얼 데이터와 생성된 상기 위조(fake) 데이터로 스마트 컨트랙트 데이터셋을 구성하는 데이터셋 구성부; 및상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 포함하는 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,공개특허 10-2025-0056704-4-상기 생성(Generator) 모델 및 상기 구별(Discriminator) 모델을 경쟁학습시키는 학습부를 더 포함하는 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크."}
{"patent_id": "10-2023-0140709", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에 있어서,상기 전처리 수행부는,상기 리얼 데이터에서 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업단계; 및추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계를 포함하는 스마트 컨트랙트 데이터의 전처리 방법을 수행하는 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 스마트 컨트랙트 데이터의 전처리 방법은, 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스 마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단 계; 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단 계를 포함할 수 있다."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 단순 데이터 삽입 기반 스마트 컨트랙트 증강 기법과는 다르게 인공지능(GAN) 기반의 소스코드 데이 터 생성을 통해, 다양한 소스코드 데이터를 생성하도록 지원하는 데이터 전처리 기술 및 스마트 컨트랙트 데이 터 생성을 위한 GAN 모델링 기술에 관한 것이다."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "공개형 블록체인(Public Blockchain) 플랫폼은 높은 접근성, 투명성, 불변성으로 활발한 연구가 이루어 지고 있 다. 특히, 스마트 컨트랙트는 블록체인 상에서 계약의 자동화로 다양한 산업분야에 응용이 가능하다는 점에서 주목을 받고 있다. 이러한 스마트 컨트랙트를 다양한 부분에서 활용하기 위해, 딥러닝 또는 머신러닝 기술을 적 용하는 연구 또한 이루어지고 있다. 하지만, 딥러닝 및 머신러닝 활용을 위해서는 모델을 학습하기 위한 많은 데이터셋이 요구되며, 이를 검증하기 위한 데이터셋 또한 다량 필요하다. 하지만, 스마트 컨트랙트의 경우 개발 된지 얼마되지 않은 최신기술이며, 다양한 플랫폼(이더리움, 이오스 등)에서 다양한 언어로 구현되는 특성 상 다량의 데이터셋을 확보하기가 매우 어렵다. 이로 인해, 다양한 분야에서 딥러닝 및 머신러닝 기술의 활용이 어 려운 문제가 존재하며 개발된 도구의 검증 또한 어려운 문제가 존재한다. 이러한 문제점을 활용하기 위해서, 기존 웹에 존재하는 데이터를 크롤링 하는 기술이나 데이터를 삽입하여 일부 증강시켜주는 기술을 사용할 수 있으나, 이러한 방법으로 수집할 수 있는 데이터 또한 역시 한정적인 문제가 존 재한다. 스마트 컨트랙트는 블록체인 플랫폼 상에서 프로그래밍 언어를 통해 작성된 계약(contract)으로 각종 계약, 게 임, 유통 정보 기록 등 다양한 분야에 활용될 수 있다. 이러한 스마트 컨트랙트를 딥러닝 또는 머신러닝을 통해 활용하기 위한 연구 또한 이루어 지고 있으나, 종래 기술의 문제점으로 인해 활용이 어려운 상황이다. 이러한 문제를 해결하기 위해, 본 발명에서는 스마트 컨트랙트를 Generative Adversarial Networks(GAN) 기반으로 증 강할 수 있는 기술을 제안한다. 기존의 스마트 컨트랙트 기반 관련 데이터 증강 기술은 미리 작성해놓은 스니펫(snippet)을 기존의 스마트 컨트 랙트에 삽입하여 증강 시도한다. 이러한 방식은 스마트 컨트랙트 데이터 수를 늘릴 수 있다는 장점이 존재하지 만, 관련 스니펫을 직접 작성해야한다는 문제점과, 결국, 생성되는 스마트 컨트랙트 또한 스니펫 형태 및 수에 한정될 수 밖에 없는 한계점이 존재한다.기존의 이미지를 증강시켜주는 GAN 기술은 이미지 특성에 집중되어 있으며, 텍스트를 대상으로한 일부 GAN 또한 소스코드가 아닌 자연어 텍스트의 특성에 집중되어 있다. 따라서, 계약 분야에서 유효한 소스코드를 증강시켜주 기 어려운 한계가 존재한다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록공보 10-2197989호"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명에서는 스마트 컨트랙트 분야에서 학습 모델 적용시 적합한 학습용 데이터를 충분히 생성할 수 있는 스 마트 컨트랙트 데이터의 전처리 방법, GAN 모델 학습 방법 및 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임 워크를 제공하고자 한다."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 측면에 따른 스마트 컨트랙트 데이터의 전처리 방법은, 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계; 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처 리 컨트랙트 생성 단계를 포함할 수 있다. 여기서, 상기 토큰화 단계에서는, ANTLR를 사용하여 불필요한 주석 분분을 제거하고 각각의 단어의 의미를 가지 는 데이터만을 분리할 수 있다. 여기서, 상기 AST 추출 작업 단계에서는, 스마트 컨트랙트 소스코드의 컴파일을 통해, 소스코드 내의 요소들의 관계를 트리형식으로 나타낸 AST를 추출할 수 있다. 여기서, 상기 함수 추출 및 전처리 컨트랙트 생성 단계에서는, 추출된 AST를 활용하여 함수 내에 있는 변수들의 의존성(dependency)을 탐색하고, 의존성이 발견되면 이러한 의존성을 따라서 변수를 새로 선언할 수 있다. 본 발명의 다른 측면에 따른 스마트 컨트랙트를 위한 GAN 모델 학습 방법은, 모델 학습용 스마트 컨트랙트의 리 얼 데이터를 수집하는 단계; 상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 단계; 전처리 가 수행된 리얼 데이터를 이용하여 모델 학습용 위조 데이터를 생성하는 단계; 전처리가 수행된 리얼 데이터와 생성된 상기 위조 데이터로 스마트 컨트랙트 데이터셋을 구성하는 단계; 및 상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 상기 스마트 컨트랙트 데이터 셋으로 학습시키는 단계를 포함할 수 있다. 여기서, 상기 위조 데이터를 생성하는 단계는, 상기 리얼 데이터를 모사하는 생성(Generator) 모델에 의해 수행 될 수 있다. 여기서, 상기 구별(Discriminator) 모델의 구별 결과로, 상기 생성(Generator) 모델을 학습시키는 단계를 더 포 함하고, 상기 구별(Discriminator) 모델과 상기 생성(Generator) 모델에 대한 학습은, 경쟁학습의 관계일 수 있 다. 여기서, 상기 전처리를 수행하는 단계는, 상기 리얼 데이터에서 주석 제거를 수행하는 스마트 컨트랙트의 토큰 화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계; 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨 트랙트 생성 단계를 포함할 수 있다.본 발명의 또 다른 측면에 따른 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크는, 수집된 모델 학습용 스 마트 컨트랙트의 리얼 데이터를 보유하는 리얼 데이터 획득부; 상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 전처리 수행부; 전처리가 수행된 리얼 데이터를 이용하여 모델 학습용 위조(fake) 데이터를 생성하는 생성(Generator) 모델; 전처리가 수행된 리얼 데이터와 생성된 상기 위조(fake) 데이터로 스마트 컨트 랙트 데이터셋을 구성하는 데이터셋 구성부; 및 상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 포함할 수 있다. 여기서, 상기 생성(Generator) 모델 및 상기 구별(Discriminator) 모델을 경쟁학습시키는 학습부를 더 포함할 수 있다. 여기서, 상기 전처리 수행부는, 상기 리얼 데이터에서 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계; 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계를 포함하는 스마트 컨트랙트 데이터의 전처리 방법을 수행할 수 있다."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상술한 구성의 본 발명의 사상에 따른 스마트 컨트랙트 데이터의 전처리 방법 및/또는 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크를 실시하면, 기존의 단순 데이터 삽입 기반 스마트 컨트랙트 증강 기법과는 다르게 인공지능(GAN) 기반의 소스코드 데이터 생성을 통해, 다양한 소스코드 데이터를 생성할 수 있는 이점이 있다. 본 발명의 스마트 컨트랙트 데이터의 전처리 방법 및/또는 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크 는 효율적인 전처리를 통해 학습 효율을 높일 수 있으며, 딥러닝/머신러닝 등에 필요한 양질의 데이터를 생성해 낼 수 있어, 이를 활용한 스마트 컨트랙트 사업에서의 딥러닝/머신러닝 활용을 지원하는 이점이 있다."}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명을 설명함에 있어서 제 1, 제 2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 구성요 소들은 용어들에 의해 한정되지 않을 수 있다. 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적 으로만 된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제 1 구성요소는 제 2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소도 제 1 구성요소로 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 연결되어 있다거나 접속되어 있다고 언급되는 경우는, 그 다른 구성요소에 직 접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이해 될 수 있다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 본 명세서에서, 포함하다 또는 구비하다 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것이 존재함을 지정하려는 것으로서, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해될 수 있다. 또한, 도면에서의 요소들의 형상 및 크기 등은 보다 명확한 설명을 위해 과장될 수 있다. 도 1은 1 SolidiFi 기반의 스마트 컨트랙트 데이터 증강 방법을 도시한다. 기존의 스마트 컨트랙트 데이터 증강 기술인 SolidiFI 연구는 기존 스마트 컨트랙트 취약점 탐지 도구들의 성능 을 평가하기 위한 연구로 도 1과 같이 기존 스마트 컨트랙트 데이터셋에 Bugs라고하는 취약점 스니펫을 삽입함 으로써 취약점 데이터를 생성한다. 이 때, Bugs의 삽입 방법은 취약점의 유형이 어떤 것이 되느냐에 따라서 달라지는데 취약점 종류에 따라서 변형 (transform), 약화(weakening), 삽입 (injection)을 사용한다. 변형 방식의 경우 스마트 컨트랙트 언어의 특성 을 이용하는 방식으로 특정 키워드를 변경함으로써 취약점을 유발하는 방식이다. 예를 들어, 프로그래밍 언어에 서 32bit 범위의 양의 정수를 담을 수 있는 uint32 타입이 있다면 이는 32bit의 정수 표현만큼의 값을 저장할 수 있다. 만약 이를 8bit 범위의 양의 정수를 담을 수 있는 uint8 타입으로 변경한다면 0 ~ uint8까지만을 담을 수 있고 uint8 ~ uint32 범위까지는 담을 수가 없게 된다. 즉, 관련 연산에서 정수의 오버플로우 또는 언더플로 우가 발생하게 된다. 하기 표 1은 변형 기반의 취약점 데이터 생성 방식의 변형 규칙(SolidiFI의 변형 규칙)을 나타내고 있다. 이는 txorigin, overflow 타입에 적용 가능하며 각각의 Original code pattern들을 새로운 코 드 패턴으로 변형하는 방법을 나타낸다. 표 1"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "하기 표 2는 SolidiFI의 변형 규칙을 기반으로 취약점 데이터를 생성한 예(txorigin)이다. 표 2"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "상기 표 2는 상기 표 1을 기반으로한 변형 방식의 예를 실제 스마트 컨트랙트 소스코드를 통해 나타내고 있다. 3번 째 줄의 msgsender 키워드가 7번 째 줄의 txorigin 키워드로 변형된 것을 확인 할 수 있다. 약화 방식의 경우, 특정 조건을 체크하는 키워드인 revert나 require을 제거하는 방식으로 사용될 수 있다. 예 를 들어 unchecked low level calls를 방지하기 위해서 revert 함수를 사용할 수 있는데 이때 revert 코드를 제거해버리는 방법이다. 표 2는 약화 방식을 사용한 unchecked low level calls의 취약점 생성 예를 나타낸다. 5번째 줄의 revert함수는 send함수를 통한 전송이 실패했을 시 이를 복구시키는 revert를 수행하고 있다. 하지 만 SolidiFI의 약화를 적용시켰을 때, revert가 제거되고 전송이 실패했음에도 state가 복구되지 않는 코드로 변경된 것을 확인할 수 있다. 하기 표 3은 SolidiFI의 삽입 규칙을 기반으로 취약점 데이터를 생성한 예(Reentrancy)이다. 표 3"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "마지막으로 삽입 기반의 취약점 생성 방식은 Reentrancy와 같이 변형/약화 취약점을 적용하기 어려운 경우에 사 용할 수 있으며, 미리 삽입할 취약점을 가지고 있는 함수 스니펫을 작성해둔뒤 이를 스마트 컨트랙트 코드에 삽 입함으로써, 취약점이 존재하는 스마트 컨트랙트를 생성할 수 있다. 하기 표 4는 Reentrancy 취약점이 발생하는 코드의 스니펫 샘플을 나타내며, 이는 함수 단위로 구성될 수 있다. 이러한 취약점 샘플을 정상적인 컨트랙트에 삽입할 수 있으며, 이는 개별로 구성된 함수이기 때문에 컨트랙트에 실행되지 않음에도 불구하고 삽입되면 정상 컴파일 가능하다. 표 4"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "하기 표 5는 정상 컨트랙트에 스니펫을 삽입한 예를 나타내고 있으며 표 5의 스니펫이 4 ~ 7번째 줄에 그대로 삽입되어 Reentrancy가 존재하는 스마트 컨트랙트가 된 것을 확인할 수 있다. 표 5"}
{"patent_id": "10-2023-0140709", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "SolidiFI는 이러한 세 가지 방식을 사용하여, 기존의 스마트 컨트랙트 코드에서 취약점을 생성하고 이를 통해 취약점 탐지 도구의 성능을 검증할 수 있었으나, SolidiFI의 방법은 결국에 기존의 코드를 그대로 활용하는 것 이기 때문에 다양한 코드를 생성하기가 어렵고 특히, Reentrancy와 같은 취약점을 생성해낼 수 있는 삽입기반의 방식의 경우 스니펫에 매우 의존적이다. 실제로 SolidiFI에 사용된 Reentrancy 스니펫은 10개가 되지 않으며, 이는 생성할 수 있는 Reentrancy의 패턴이 10개가 되지 않는다는 의미이다. 즉, 정확한 검증에 한계가 여전히 존재하며, SolidiFI를 통한 검증 및 딥러닝 학습에 필요한 수천, 수만개의 데이터 생성에 대한 다양성에도 한계 가 존재한다. 도 2는 GAN 기술에 대한 개요도이다. GAN 기반 데이터 증강 기술의 경우 도 2와 같이 이미지를 생성하도록 학습되는 모델인 Generator와 Generator가 생성한 이미지가 실제로 존재하는 이미지인지, 생성된 이미지인지 판별하는 Discriminator를 경쟁학습하여, 실 제 데이터에 가까운 데이터를 생성하는 기술이다. GAN 기술의 경우, 이미지 분야에서 매우 활발히 연구되고 있 으며, 현재 새로운 사진 생성, 애니메이션 생성, 흑백 이미지의 컬러 변환, 화질 보정(super resolution), 사진 보정 등 다양한 분야에서 활용되고 있다. 하지만, 이러한 GAN 기술의 경우 일반적으로 이미지에 대해서는 잘 동작하지만 이미지가 아닌 텍스트 데이터에 대해서는 잘 동작하지 않는 문제점이 존재한다. 이러한 문제점을 해결하기 위해, SeqGAN, LeakGAN 모델과 같은 텍스트 생성을 위한 GAN 모델이 등장하였으며 기존 텍스트 생성 문제를 해결하였다. 하지만, 이러한 모델은 스 마트 컨트랙트와 같은 소스코드 데이터 생성을 위해 제안된 것이 아니며 자연어를 대상으로 설계된 모델이다. 따라서, 스마트 컨트랙트 데이터를 생성에는 한계가 존재한다. 예를 들어, 스마트 컨트랙트와 같은 소스코드 데 이터는 자연어와 다른 문법 체계가 존재한다. 스마트 컨트랙트의 경우, 일반적으로 스마트 컨트랙트의 버전이 명시가 되며, 그 뒤로 컨트랙트 이름, 변수 선언 및 함수 선언이 이어지게 된다. 도 3은 스마트 컨트랙트의 예시를 나타낸다. 1번째 줄에서 스마트 컨트랙트의 버전을 명시하는 “pragma solidiy ^0423;” 이 존재하며, 3번째 줄에서 contract 정의 및 이름을 정의해주는 “contract CYBRPurchaseAddress”가 존재하는 것을 알 수 있다. 5번째 줄에서는 “wallet”이라는 변수의 타입 정의 및 값을 정의하여 선언하고 있으며, 7번째 줄에서는 함수 선언, 8 번째 줄에서는 5번째 줄에서 사용한 “wallet” 변수를 사용하여 코인을 전송하고 있다. 이러한 스마트 컨트랙트 코드는 스마트 컨트랙트 문법과 맞지 않을 경우, 컴파일 에러를 일으킨다. 예를들어, 1 번째 줄의 버전 명시가 없거나, 3번째 줄의 contract 정의가 없거나 8번째 줄의 코인 전송에 있어 5번째 줄의 wallet 변수의 정의가 없다면 정상적인 스마트 컨트랙트가 될 수 없는 것이다. 도 4는 유효하지 않은 스마트 컨트랙트를 생성하는 예시이다. 이러한 스마트 컨트랙트를 단순한 텍스트 기반 모델에 학습시킬 경우, 도 4와 같이 유효하지 않은 결과를 생성 해내며 의미 없이 토큰들이 반복되는 것을 확인할 수 있다. 도 5는 SeqGAN 기반으로 생성한 유효하지 않은 contract 예시이다. 기존의 텍스트에서 좋은 성능을 보인 SeqGAN과 같은 모델을 전처리 후 적용시키더라도, 도 5와 같은 유효하지 않은 컨트랙트를 생성하는 것을 확인할 수 있다. 도 5의 예제 코드에서는 선언되지 않는 변수를 사용하는 에러 및 불필요한 중괄호를 “}” 생성하여 문법적 오 류를 일으키는 것을 볼 수 있다. 따라서, 이러한 문제를 해결하기 위해 스마트 컨트랙트와 같은 소스코드에 적 합한 데이터 전처리와 모델이 선정이 요구된다. 도 6은 본 발명의 사상에 따른 스마트 컨트랙트 데이터의 전처리 방법의 일 실시예를 도시한 흐름도이다. 도 7a는 본 발명의 사상에 따른 토큰화 전 스마트 컨트랙트를 예시한다. 도 7b는 본 발명의 사상에 따라 토큰화된 스마트 컨트랙트를 예시한다. 도 8은 Solidity 코드의 AST 파싱 수행을 예시한다. 상술한 종래 발명의 문제점을 해결하기 위해, 본 발명에서는 스마트 컨트랙트 데이터 생성을 위한 데이터 전처 리 기술과 GAN 모델을 제안한다. 전처리 과정은 3단계로 진행된다. 도 6에 도시한 본 발명의 사상에 따른 스마트 컨트랙트 데이터의 전처리 방법은, 모델 학습용 위조 데이터 생성 을 위해 이용되는 리얼(필드) 데이터로서 스마트 컨트랙트 데이터에 대한 전처리 방법이다. 도시한 전처리 방법은, 주석 제거를 수행하는 스마트 컨트랙트의 토큰화 단계(S220); 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계(S240); 및 추출된 AST 정보를 기반 으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계(S260)를 포함한다. 1단계로서 상기 S220 단계에서는 스마트 컨트랙트의 토큰화를 수행한다. 스마트 컨트랙트 데이터 학습의 효율을 높이기 위해서는 불필요한 주석과 같은 부분을 제거하고 각각의 의미를 가지는 데이터만을 분리해주는 작업이 필요하다. 스마트 컨트랙트를 유효한 데이터만을 가지는 데이터로 변환해주기 위해, 이를 변환해주는 도구인 ANTLR를 사용하였다. ANTLR 도구를 사용 시에, 도 7a과 같은 스마트 컨트랙트는 도 7b와 같이 토큰화된다. 상술한 1단계(S220)의 토큰화 과정으로, 불필요한 주석이 제거되었으며, 단어의 의미별로 구분된 것을 확인할 수 있다. 이러한 전처리 이후 2단계인 상기 S240 단계에서는 abstract syntax tree(AST) 추출 작업을 진행한다. AST는 소스코드 내의 요소들의 관계를 도 8과 같이 트리형식으로 나타낸 것으로 소스코드의 컴파일을 통해 추출 할 수 있다. 도 9는 3개의 선언되지 않은 변수를 사용하는 함수를 가지고 있는 컨트랙트의 예시이다. 도 10은 본 발명의 사상에 따라 전처리 기술 적용 후, 최종 결과를 예시한다. 도 11은 SeqGAN의 주요 구조를 도시한다. 3단계인 상기 S260 단계는 함수 추출 및 전처리 컨트랙트 생성 단계이다. 우선, 스마트 컨트랙트에서 function 을 모두 추출해낸다. 추출된 함수들은 도 5에서 발생하는 선언되지 않은 변수 등과 같은 문제를 가지고 있으므 로, 이와 같은 문제를 해결하기 위해 추출된 AST를 활용하여 함수 내에 있는 변수들의 의존성(dependency)을 탐 색해준다. 의존성이 발견되었을 경우, 이러한 의존성을 따라서 변수를 새로 선언해준다. 즉, 도 9와 같이 Ownable 컨트랙트가 3개의 함수를 가지고 있을 때, 각 함수에서는 선언되지 않은 _pendingOwner, _owner 변수를 사용하고 있다. 이때, 추출된 AST 정보를 기반으로 각각의 함수 내에 _pendingOwner, _owner 변수를 선언해주는 것이다. 이러한 형태로 변환된 함수를 저장 후, 도 10과 같은 형태를 만듦으로써 전처리 단계는 완료된다. 도 10은 생성 된 컨트랙트를 학습을 위해 하나의 파일에 저장한 모습을 나타낸다. 이러한 전처리 데이터는 도 11과 같은 SeqGAN 모델 구조를 통해 학습될 수 있다. SeqGAN은 기존의 텍스트에서 GAN의 성능이 좋지 않았던 문제를 강화학습을 기반으로 해결하였으며, 몬테카를로 검색(Monte Carlo Tree Search, MCTS)를 사용한다. 도 12는 본 발명에서 제안하는 방법을 통해 생성된 스마트 컨트랙트 데이터를 예시한다. 도 13은 본 발명에서 제안하는 방법을 통해 생성된 스마트 컨트랙트 데이터와 학습 데이터의 차이를 예시한다. SeqGAN을 기반으로 스마트 컨트랙트를 생성하기 위해, 전처리된 데이터를 SeqGAN의 입력으로 사용하였으며, 입 력된 데이터는 Generator의 MCTS를 통해 소스코드 데이터를 생성한다. 이때, MCTS는 각각의 토큰들을 생성 시 최종적으로 소스코드 생성 결과에 대한 확률값을 저장하며(체스나 바둑게임에서 현재 둔 수를 기준으로 최종 게 임 승패에 대한 확률을 계산하듯이), 최종적으로 생성된 소스코드는 사전에 학습한 Discriminator를 통해 진짜 스마트 컨트랙트 소스코드인지 Generator가 생성한 데이터인지 계산한다. Generator는 이때 Discriminator가 가 짜 데이터라고 판단할 확률이 최소가 되도록 학습되고, 반대로 Discriminator는 Generator가 생성한 데이터가 진짜라고 판단할 확률이 최소가 되도록 경쟁 학습된다. 학습 결과 도 12와 같은 실제학습 데이터에서 사용되지 않은 소스코드가 생성된 것을 확인할 수 있다. 한편, 도 13은 도 12에서 실제 학습데이터와 GAN에 의해 생성된 데이터의 차이를 중점으로 보여준다. 여기서, 매개변수가 uint supply에서 uint balance로 변경된 것을 확인할 수 있다. 도 14는 본 발명의 사상에 따른 스마트 컨트랙트를 위한 GAN 모델 학습 방법의 일 실시예를 도시한 흐름도이다. 도시한 스마트 컨트랙트를 위한 GAN 모델 학습 방법은, 모델 학습용 스마트 컨트랙트의 리얼(필드) 데이터를 수 집하는 단계(S100); 상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 단계(S200); 전처리가 수행된 리얼 데이터를 이용하여 모델 학습용 위조(fake) 데이터를 생성하는 단계(S300); 전처리가 수행된 리얼 데이터와 생성된 상기 위조(fake) 데이터로 스마트 컨트랙트 데이터셋을 구성하는 단계; 및 상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 상기 스 마트 컨트랙트 데이터셋으로 학습시키는 단계(S600)를 포함한다. 도시한 스마트 컨트랙트를 위한 GAN 모델 학습 방법은, 상기 구별(Discriminator) 모델의 구별 결과로, 상기 생 성(Generator) 모델을 학습시키는 단계(S700)를 더 포함한다. 여기서, 상기 위조(fake) 데이터를 생성하는 단계(S300)는, 상기 리얼 데이터를 입력받아 이를 모사하는 생성 (Generator) 모델에 의해 수행되는데, 상기 구별(Discriminator) 모델과 상기 생성(Generator) 모델에 대한 학 습은 경쟁학습의 관계로서, 상기 구별(Discriminator) 모델과 상기 생성(Generator) 모델은 하나의 GAN 구조를 형성할 수 있다. 한편, 상기 전처리를 수행하는 단계(S200)는, 도 6에 도시한 바와 같이, 상기 리얼 데이터에서 주석 제거를 수 행하는 스마트 컨트랙트의 토큰화 단계(S220); 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계(S240); 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계(S260)를 포함할 수 있다.도 15는 본 발명의 사상에 따른 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크를 도시한 구조도이다. 도시한 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크는, 수집된 모델 학습용 스마트 컨트랙트의 리얼 데 이터를 보유하는 리얼 데이터 획득부; 상기 리얼 데이터에 대하여 AST 정보를 기반으로 전처리를 수행하는 전처리 수행부; 전처리가 수행된 리얼 데이터를 이용하여 모델 학습용 위조(fake) 데이터를 생성하는 생성 (Generator) 모델; 전처리가 수행된 리얼 데이터와 생성된 상기 위조(fake) 데이터로 스마트 컨트랙트 데 이터셋을 구성하는 데이터셋 구성부; 및 상기 스마트 컨트랙트 데이터셋을 구성하는 각 데이터에 대하여 위조 여부를 식별하는 구별(Discriminator) 모델을 포함한다. 도시하지는 않았지만 상기 GAN 프레임워크는, 상기 생성(Generator) 모델 및 상기 구별(Discriminator) 모델을 경쟁학습시키는 학습부를 더 포함한다고 규정될 수 있다. 본 발명의 사상에 따라 상기 전처리 수행부는, 상기 리얼 데이터에서 주석 제거를 수행하는 스마트 컨트랙 트의 토큰화 단계; 스마트 컨트랙트 소스코드 내의 요소들의 관계를 트리형식으로 나타내는 AST(abstract syntax tree) 추출 작업 단계; 및 추출된 AST 정보를 기반으로 각각의 함수 내의 변수를 선언해주는 함수 추출 및 전처리 컨트랙트 생성 단계를 포함하는 도 6에 도시한 바와 같은 스마트 컨트랙트 데이터의 전처리 방법을 수행할 수 있다. 본 발명이 속하는 기술 분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고서 다른 구 체적인 형태로 실시될 수 있으므로, 이상에서 기술한 실시 예들은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 본 발명의 범위는 상세한 설명보다는 후술하는 특허청구범위에 의하여 나타내 어지며, 특허청구범위의 의미 및 범위 그리고 그 등가개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2023-0140709", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 1 SolidiFi 기반의 스마트 컨트랙트 데이터 증강 방법을 도시한다. 도 2는 GAN 기술에 대한 개요도이다. 도 3은 스마트 컨트랙트의 예시이다. 도 4는 유효하지 않은 스마트 컨트랙트를 생성하는 예시이다. 도 5는 SeqGAN 기반으로 생성한 유효하지 않은 contract 예시이다. 도 6은 본 발명의 사상에 따른 스마트 컨트랙트 데이터의 전처리 방법의 일 실시예를 도시한 흐름도이다. 도 7a는 본 발명의 사상에 따른 토큰화 전 스마트 컨트랙트를 예시한다. 도 7b는 본 발명의 사상에 따라 토큰화된 스마트 컨트랙트를 예시한다. 도 8은 Solidity 코드의 AST 파싱 수행을 예시한다. 도 9는 3개의 선언되지 않은 변수를 사용하는 함수를 가지고 있는 컨트랙트의 예시이다. 도 10은 본 발명의 사상에 따라 전처리 기술 적용 후, 최종 결과를 예시한다. 도 11은 SeqGAN의 주요 구조를 도시한다. 도 12는 본 발명에서 제안하는 방법을 통해 생성된 스마트 컨트랙트 데이터를 예시한다. 도 13은 본 발명에서 제안하는 방법을 통해 생성된 스마트 컨트랙트 데이터와 학습 데이터의 차이를 예시한다. 도 14는 본 발명의 사상에 따른 스마트 컨트랙트를 위한 GAN 모델 학습 방법의 일 실시예를 도시한 흐름도이다. 도 15는 본 발명의 사상에 따른 스마트 컨트랙트 데이터 생성을 위한 GAN 프레임워크를 도시한 구조도이다."}
