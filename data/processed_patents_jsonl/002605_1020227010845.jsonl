{"patent_id": "10-2022-7010845", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0079837", "출원번호": "10-2022-7010845", "발명의 명칭": "로봇 프로세스 자동화를 위한 자동 분석, 우선순위 지정, 및 로봇 생성", "출원인": "유아이패스, 인크.", "발명자": "싱 프랍딥"}}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 구현 방법에 있어서,사용자 컴퓨팅 시스템에 리스너(listener)를 배치하는 단계; 상기 사용자 컴퓨팅 시스템과의 사용자 상호작용, 상기 사용자 컴퓨팅 시스템 상에서의 배치된 로봇 프로세스자동화(robotic process automation; RPA) 로봇의 성능, 또는 둘 다에 관한 데이터를 상기 리스너로부터 수집하는 단계;상기 수집된 데이터를 저장하는 단계;투자 수익(return on investment; ROI)을 개선시키는, 상기 사용자 컴퓨팅 시스템과의 사용자 상호작용에서의프로세스, 상기 사용자 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스 흐름, 기존 RPA 로봇에 대한 프로세스 개선, 또는 이들의 임의의 조합을 발견하기 위해 인공 지능(artificial intelligence; AI)을 사용하여 상기저장된 데이터를 분석하는 단계; 및ROI 개선을 위한 식별된 프로세스 또는 프로세스 흐름을 구현하는 워크플로우를 생성하는 단계를 포함하는 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 저장된 데이터의 분석의 결과들은 ROI에 대한 추정된 이익에 기초하여 등급화되는 것인 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 등급화에 기초하여 상기 프로세스, 상기 프로세스 흐름, 또는 둘 다의 우선순위를 지정하는 단계를 더 포함하는 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,ROI 개선들을 결정하고 우선순위를 지정하는데 사용되는 메트릭들은, 평균 프로세스 완료 시간, 프로세싱으로부터의 ROI를 보여주기 위한 송장으로부터 생성된 총 수익, 직원 작업량이 미리 결정된 문턱값을 초과하는지여부, 직원이 적어도 최소 문턱 시간량 동안 업무 일을 하고 있는지 여부, 비즈니스 특유적 핵심 성과 지표(keyperformance indicator; KPI), 또는 이들의 임의의 조합을 포함하는 것인 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 메트릭들은 ROI 결정에 대한 자신들의 상대적 중요도에 기초하여 가중치를 할당받는 것인 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 저장된 데이터의 분석은 상기 프로세스 흐름에 대한 사용 빈도를 결정하는 것을 포함한 것인 컴퓨터 구현방법.공개특허 10-2022-0079837-3-청구항 7 제1항에 있어서,상기 저장된 데이터의 분석은 사용자들이 워크플로우를 따르고 있는 것을 보장하기 위해 적합성 체크를 수행하는 것을 포함한 것인 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 데이터는 로봇 및/또는 사용자 동작에 관한 데이터를 포함하면서 컨덕터 애플리케이션에 주기적으로 전송되는 하트비트(heartbeat)를 통해 상기 리스너로부터 수집되는 것인 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 생성된 워크플로우를 구현하는 RPA 로봇을 생성하는 단계; 및상기 생성된 RPA 로봇을 상기 사용자 컴퓨팅 시스템 중 적어도 하나에 배치하는 단계를 더 포함하는 컴퓨터 구현 방법."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "비일시적 컴퓨터 판독가능 매체 상에 포함된 컴퓨터 프로그램에 있어서, 상기 컴퓨터 프로그램은 적어도 하나의프로세서로 하여금,각각의 컴퓨팅 시스템과의 사용자 상호작용, 상기 사용자 컴퓨팅 시스템 상에서의 배치된 로봇 프로세스 자동화(RPA) 로봇의 성능, 또는 둘 다에 관한 데이터를 복수의 리스너로부터 수집하게 하고;투자 수익(ROI)을 개선시키는, 상기 사용자 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스, 상기 사용자컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스 흐름, 기존 RPA 로봇에 대한 프로세스 개선, 또는 이들의임의의 조합을 발견하기 위해 인공 지능(AI)을 사용하여 상기 수집된 데이터를 분석하게 하며;ROI 개선을 위한 식별된 프로세스 또는 프로세스 흐름을 구현하는 워크플로우를 생성하게 하도록 구성된 것인컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 컴퓨터 프로그램은 또한 상기 적어도 하나의 프로세서로 하여금,ROI에 대한 추정된 이익에 기초하여 상기 수집된 데이터의 분석의 결과들을 등급화하게 하도록 구성된 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 컴퓨터 프로그램은 또한 상기 적어도 하나의 프로세서로 하여금,상기 등급화에 기초하여 상기 프로세스, 상기 프로세스 흐름, 또는 둘 다의 우선순위를 지정하게 하도록 구성된것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,ROI 개선들을 결정하고 우선순위를 지정하는데 사용되는 메트릭들은, 평균 프로세스 완료 시간, 프로세싱으로부터의 ROI를 보여주기 위한 송장으로부터 생성된 총 수익, 직원 작업량이 미리 결정된 문턱값을 초과하는지여부, 직원이 적어도 최소 문턱 시간량 동안 업무 일을 하고 있는지 여부, 비즈니스 특유적 핵심 성과 지표공개특허 10-2022-0079837-4-(KPI), 또는 이들의 임의의 조합을 포함하는 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서,상기 수집된 데이터의 분석은 상기 프로세스 흐름에 대한 사용 빈도를 결정하는 것을 포함한 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서,상기 저장된 데이터의 분석은 사용자들이 워크플로우를 따르고 있는 것을 보장하기 위해 적합성 체크를 수행하는 것을 포함한 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서,상기 데이터는 로봇 및/또는 사용자 동작에 관한 데이터를 포함하면서 컨덕터 애플리케이션에 주기적으로 전송되는 하트비트를 통해 상기 리스너로부터 수집되는 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,상기 컴퓨터 프로그램은 또한 상기 적어도 하나의 프로세서로 하여금,상기 생성된 워크플로우를 구현하는 RPA 로봇을 생성하게 하며;상기 생성된 RPA 로봇을 상기 사용자 컴퓨팅 시스템 중 적어도 하나에 배치하게 하도록 구성된 것인 컴퓨터 프로그램."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "장치에 있어서,로봇 프로세스 자동화(RPA)를 위한 프로세스, 프로세스 흐름, 또는 둘 다를 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 자동으로 생성하기 위한 컴퓨터 프로그램 명령어들을 저장한 메모리; 및상기 메모리에 통신가능하게 커플링되고 상기 컴퓨터 프로그램 명령어들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 명령어들은 상기 적어도 하나의 프로세서로 하여금,각각의 컴퓨팅 시스템과의 사용자 상호작용, 상기 사용자 컴퓨팅 시스템 상에서의 배치된 로봇 프로세스 자동화(RPA) 로봇의 성능, 또는 둘 다에 관한 데이터를 복수의 리스너로부터 수집하게 하고;투자 수익(ROI)을 개선시키는, 상기 사용자 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스, 상기 사용자컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스 흐름, 기존 RPA 로봇에 대한 프로세스 개선, 또는 이들의임의의 조합을 발견하기 위해 인공 지능(AI)을 사용하여 상기 수집된 데이터를 분석하게 하고;ROI 개선을 위한 식별된 프로세스 또는 프로세스 흐름을 구현하는 워크플로우를 생성하게 하고;상기 생성된 워크플로우를 구현하는 RPA 로봇을 생성하게 하며;상기 생성된 RPA 로봇을 상기 사용자 컴퓨팅 시스템 중 적어도 하나에 배치하게 하도록 구성된 것인 장치."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,공개특허 10-2022-0079837-5-상기 명령어들은 또한 상기 적어도 하나의 프로세서로 하여금,상기 수집된 데이터의 분석의 결과들을 ROI에 대한 추정된 이익에 기초하여 등급화하게 하고;상기 등급화에 기초하여 상기 프로세스, 상기 프로세스 흐름, 또는 둘 다의 우선순위를 지정하게 하며,ROI 개선들을 결정하고 우선순위를 지정하는데 사용되는 메트릭들은, 평균 프로세스 완료 시간, 프로세싱으로부터의 ROI를 보여주기 위한 송장으로부터 생성된 총 수익, 직원 작업량이 미리 결정된 문턱값을 초과하는지여부, 직원이 적어도 최소 문턱 시간량 동안 업무 일을 하고 있는지 여부, 비즈니스 특유적 핵심 성과 지표(KPI), 또는 이들의 조합을 포함하는 것인 장치."}
{"patent_id": "10-2022-7010845", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제18항에 있어서,상기 수집된 데이터의 분석은 상기 프로세스 흐름에 대한 사용 빈도를 결정하는 것을 포함한 것인 장치."}
{"patent_id": "10-2022-7010845", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "로봇 프로세스 자동화(robotic process automation; RPA)를 위한 프로세스 및/또는 프로세스 흐름을 구현하는 로봇을 분석하고, 우선순위를 지정하고, 잠재적으로 자동 생성하기 위한 시스템 및 방법이 개시된다. 비즈니스 프로세스 및/또는 프로세스 흐름을 분석하고 기존 자동화의 개선 또는 자동화를 위한 가능한 후보들을 찾는 데 (뒷면에 계속)"}
{"patent_id": "10-2022-7010845", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 출원은 2019년 12월 9일에 출원된 미국 가특허출원 제16/707,763호, 및 2019년 10월 15일에 출원된 미국 가 특허출원 제62/915,366호의 이익을 청구한다. 이전에 출원된 이 출원들의 발명내용은 그 전문이 참조로 여기에 편입된다. 본 발명은 일반적으로 로봇 프로세스 자동화(robotic process automation; RPA)에 관한 것이며, 보다 구체적으 로, RPA에 대한 유익한 프로세스들 및/또는 프로세스 흐름들을 구현하는 로봇들을 분석하고, 우선순위 지정하며, 잠재적으로 자동 생성하는 것에 관한 것이다."}
{"patent_id": "10-2022-7010845", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "예를 들어, RPA COE(Center of Excellence)에서 다음에 자동화할 대상을 결정할 때, 어떤 비즈니스 프로세스에 집중할 것인지(예컨대, 가장 많이 비용 및/또는 시간을 절약하고, 가장 많이 추가 수익을 창출하기 등) 우선순 위를 지정하는 것은 어려울 수 있다. 또한 ROI 관점에서 어떤 프로세스가 자동화에 있어서 우수한 후보인지조 차 알기 어려울 수 있다. 기존 자동화는 개선될 수 있지만, 이러한 자동화를 개선하는 방법을 결정하기는 어려 울 수 있다. 따라서, 개선된 접근법이 유리할 수 있다."}
{"patent_id": "10-2022-7010845", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 특정 실시예들은 현재 RPA 기술에 의해 아직 완전히 식별되거나, 인식되거나, 또는 해결되지 않은 당 업계의 문제들과 요구들에 대한 솔루션을 제공할 수 있다. 예를 들어, 본 발명의 일부 실시예들은 RPA에 대한 프로세스들 및/또는 프로세스 흐름들을 구현하는 로봇들의 자동 분석, 우선순위 지정, 및 잠재적으로 자동 생 성에 관한 것이다. 실시예에서, 컴퓨터 구현 방법은, 사용자 컴퓨팅 시스템에 리스너(listener)를 배치하는 단계, 컴퓨팅 시스템과 의 사용자 상호작용, 사용자 컴퓨팅 시스템 상에서의 배치된 RPA 로봇의 성능, 또는 둘 다에 관한 데이터를 리 스너로부터 수집하는 단계, 및 수집된 데이터를 저장하는 단계를 포함한다. 컴퓨터 구현 방법은 또한, ROI를 개선시키는, 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스, 컴퓨팅 시스템과의 사용자 상호작용에서의 프 로세스 흐름, 기존 RPA 로봇에 대한 프로세스 개선, 또는 이들의 임의의 조합을 발견하기 위해 AI를 사용하여 저장된 데이터를 분석하는 단계를 포함한다. 컴퓨터 구현 방법은 ROI 개선을 위한 식별된 프로세스 또는 프로 세스 흐름을 구현하는 워크플로우를 생성하는 단계를 더 포함한다. 다른 실시예에서, 컴퓨터 프로그램은 비일시적 컴퓨터 판독가능 매체 상에 포함된다. 프로그램은 적어도 하나 의 프로세서로 하여금, 각각의 컴퓨팅 시스템과의 사용자 상호작용, 사용자 컴퓨팅 시스템 상에서의 배치된 RPA 로봇의 성능, 또는 둘 다에 관한 데이터를 복수의 리스너로부터 수집하게 하도록 구성된다. 프로그램은 또한, 적어도 하나의 프로세서로 하여금, 투자 수익(return on investment; ROI)을 개선시키는, 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스, 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스 흐름, 기존 RPA 로봇에 대 한 프로세스 개선, 또는 이들의 임의의 조합을 발견하기 위해 인공 지능(artificial intelligence; AI)을 사용 하여 수집된 데이터를 분석하게 하도록 구성된다. 프로그램은 또한, 적어도 하나의 프로세서로 하여금, ROI 개 선을 위한 식별된 프로세스 또는 프로세스 흐름을 구현하는 워크플로우를 생성하게 하도록 구성된다. 또다른 실시예에서, 장치는 RPA를 위한 프로세스, 프로세스 흐름, 또는 둘 다를 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 자동으로 생성하기 위한 컴퓨터 프로그램 명령어들을 저장하는 메모리를 포함한다. 장치 는 또한 메모리에 통신가능하게 커플링되고 컴퓨터 프로그램 명령어들을 실행하도록 구성된 적어도 하나의 프로 세서를 포함한다. 명령어들은 적어도 하나의 프로세서로 하여금, 각각의 컴퓨팅 시스템과의 사용자 상호작용, 사용자 컴퓨팅 시스템 상에서의 배치된 RPA 로봇의 성능, 또는 둘 다에 관한 데이터를 복수의 리스너로부터 수 집하게 하도록 구성된다. 명령어들은 또한, 적어도 하나의 프로세서로 하여금, ROI를 개선시키는, 컴퓨팅 시스 템과의 사용자 상호작용에서의 프로세스, 컴퓨팅 시스템과의 사용자 상호작용에서의 프로세스 흐름, 기존 RPA 로봇에 대한 프로세스 개선, 또는 이들의 임의의 조합을 발견하기 위해 AI를 사용하여 수집된 데이터를 분석하 게 하도록 구성된다. 명령어들은 또한, 적어도 하나의 프로세서로 하여금, ROI 개선을 위한 식별된 프로세스 또는 프로세스 흐름을 구현하는 워크플로우를 생성하고, 생성된 워크플로우를 구현하는 RPA 로봇을 생성하고, 생성된 RPA 로봇을 사용자 컴퓨팅 시스템들 중 적어도 하나에 배치하게 하도록 구성된다."}
{"patent_id": "10-2022-7010845", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "일부 실시예들은 RPA를 위한 프로세스들 및/또는 프로세스 흐름들을 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 잠재적으로 자동으로 생성하는 것에 관한 것이다. 일부 실시예들에서, 비즈니스 프로세스들을 분석 하고 기존 자동화의 개선 또는 자동화를 위한 가능한 후보들을 찾는 데 인공 지능(AI)이 사용될 수 있다. 워크 플로우 효율성과 관련된 데이터를 마이닝하기 위해 사용자 컴퓨팅 시스템 상의 백그라운드에서 리스닝하도록 리 스너(예컨대, 로봇, 별개의 소프트웨어 애플리케이션, 운영 체제 확장 등)가 활용될 수 있다. 예를 들어, 사용 자 컴퓨팅 시스템 상에서 RPA 워크플로우들을 구현하는 로봇들을 통해 자동화가 생산에 배치될 때, 프로세스(들)이 의도한 대로 올바르고 정확하게 수행되고 있다는 것을 보장하고 새로운 프로세스들의 자동화를 위한 데이터를 제공하기 위해 리스너들이 추가될 수 있다. 프로세스는 본질적으로 동일한 작업을 달성하는 여러 변형들(즉, 프로세스 흐름들)을 가질 수 있다. 따라서 프 로세스를 위한 다양한 프로세스 흐름들 중 어떤 프로세스 흐름(들)이 상대적으로 빈번하게 사용되고 있는지, 어 떤 프로세스 흐름(들)이 비교적 덜 빈번하게 사용되고 있는지 등을 아는 것이 바람직할 수 있다.일부 실시예들에서, 적합성(conformance) 체크가 수행될 수 있다. 시스템은 사용자들이 특정 워크플로우를 따 르고 있다는 것을 보장하기 위해 각각의 리스너들을 통해 각자의 컴퓨팅 시스템들과의 사용자 상호작용들을 체 크할 수 있다. 예를 들어, 해킹 이벤트가 검출된 후에 일련의 단계들이 취해지고, 특정 보고서를 제출하는 것으로 종결되는 경우를 고려한다. 리스너들로부터 수거된 정보는 단계들을 적절하게 따르고 있었다는 것, 보고 서를 제출하였다는 것, 보고서가 올바르게 작성되었다는 것 등을 보장하기 위해 분석될 수 있다. 워크플로우를 적절하게 따르지 않는 사용자들은 재트레이닝될 수 있다. 일부 실시예들은 어느 구현된 워크플로우들이 가장 유익한지를 결정하는 데에도 유용될 수 있다. 비제한적인 예시로서, 16개의 워크플로우들이 사용자 컴퓨팅 시스템들 상에서 RPA 로봇들에 의해 구현되는 경우를 고려한다. 리스너들은 사용자 액션들, 로봇 성능, 또는 둘 다에 관한 데이터 수집하기 위해 리스닝할 수 있다. 이 데이터는 데이터베이스에 저장되고, 그런 후 서버측 애플리케이션에 의해 액세스되어, AI를 적용하고, ROI를 개선하기 위해 자동화될 수 있고 사용자들이 수행하려는 경향이 있는 프로세스들을 찾고, 하나의 구현된 로봇이 유사한 작업에 대해 다른 로봇보다 ROI를 더 잘 개선시키는지 여부 등을 결정한다. 예를 들어, A/B(분할) 테스 트 또는 카나리아 테스트(canary testing)를 활용하여 어떤 로봇들이 가장 잘 일하는지를 결정할 수 있다. 이 러한 프로세스들은 ROI에 대한 예상된 이익들에 기초하여 RPA 로봇들로서 등급화되고 롤아웃(rolled out)될 수 있다. 추가적으로 또는 대안적으로, 이 데이터는 RPA에 대한 ROI 개선 후보들이 될 새로운 프로세스들을 식별하기 위 해 분석될 수 있다. 기존 로봇들을 통해 구현된 워크플로우들을 개선하는 데 이점이 있는지의 여부, ROI를 개 선하기 위해 새로운 프로세스들이 자동화될 수 있는지의 여부, 또는 둘 다를 결정하기 위해, 상이한 메트릭들이 사용될 수 있다. 이러한 메트릭들은, 비제한적인 예시로서, 평균 프로세스 완료 시간, 프로세스의 반복 횟수, 프로세싱으로부터의 ROI를 보여주기 위한 송장으로부터 생성된 총 수익, 직원 업무량이 미리 결정된 문턱값을 초과하는지의 여부(예컨대, 70% 미만의 직원 업무량이 바람직할 수 있으며, 이는 피로를 줄이기 위해 직원이 70% 미만의 시간으로 영업 일을 하고 있음을 의미함), 직원이 적어도 최소 문턱 시간량 동안 영업 일을 하고 있 는지의 여부, 사용자/부서/회사별 사업 특유적 핵심 성과 지표(key performance indicator; KPI)(예컨대, 생성 된 수익의 양, 소요 시간 등), 이들의 임의의 조합 등을 포함한다. 일부 실시예들에서, 일부가 다른 것들보다 더 영향력이 있도록 메트릭들은 가중화될 수 있다. 특정 실시예들에서, 리스너 로봇들은 하트비트(heartbeat)를 주기적으로 컨덕터(conductor) 애플리케이션에 전 송한다. 이 \"하트비트\"에서 전송된 정보는 로봇이 여전히 작동 중인지 여부를 나타낼 수 있으며, 로봇 및/또는 사용자 동작들과 관련한 데이터를 리스너로부터 제공할 수 있다. 일부 실시예들에서, 리스너 로봇들은 주어진 워크플로우의 효율성에 관한 정보를 제공할 수 있다(일반적으로 로봇은 워크플로우의 실행가능 구현물이다). 16개의 로봇들의 이 예시를 사용하여, 16개의 로봇들이 16개의 상이한 워크플로우들을 실행하는 경우, 각 로봇 의 동작과 관련하여 하트비트와 함께 전송된 정보는 캡처되고 분석되어 워크플로우 효율성 및 ROI에 대한 영향 을 결정할 수 있다. 리스너 로봇은 또한 사용자 액션들을 모니터링하는 데 사용될 수 있다. 상기에 따르면, 기존 로봇들에서의 구현된 워크플로우들을 분석하는 것에 더하여 또는 이를 대신하여, 일부 실 시예들은 잠재적으로 하트비트와 함께 또는 하트비트에서 컨덕터 애플리케이션에 제공되는 정보로서, 리스너 로 봇들로부터 정보를 수거한다. 이 정보가 수집되면, AI를 사용하여 이 데이터를 분석하고 ROI를 개선시킬 워크 플로우(들)을 자동으로 식별하고 잠재적으로 워크플로우(들)의 우선순위를 지정할 수 있다. 그런 후, 이러한 워크플로우들은 디자이너 애플리케이션을 통해 개발자 지원으로 또는 잠재적으로 자동으로 생성되고 배치될 수 있다. 일부 자동화된 실시예들에서, 이는 ROI 개선을 위한 인지된 유익한 프로세스를 구현할 수 있는 워크플로우의 단 계들을 지능적으로 식별하기 위해 AI를 사용하여 달성될 수 있다. 예를 들어, AI 분석은 초기 부팅 시, 특정 파라미터들 및/또는 구성들이 이미 존재하는 상태에서 소프트웨어 애플리케이션들의 군이 자동으로 런칭될 때 사용자들은 생산성이 더 높다고 결정할 수 있다. 하나의 비제한적인 예시에서, 최고의 자동화 ROI를 결정하는 데 계량경제학(econometrics)이 사용된다. 그러나, 계량경제학에서는, 이 접근법을 활용하기 위한 전제 조건으로서 일반적으로 작업 시간과 비용(예컨대, 작업을 수행하는 데 소요되는 시간과 지불액)이 필요하다는 점에 유의해야 한다. 또한, 계량경제학에서는, 추 적할 가장 정량적인 메트릭을 결정해야 한다. 예를 들어, 이는 절약되거나 생성되는 최대 자금일 수 있다. 샘플 사이즈가 작을 때 무너지는 기존의 접근법들과는 달리, 일부 실시예들은 어떤 프로세스들이 더 좋고 어떤 프로세스들이 더 나쁜지를 살펴보는 로봇을 갖는다. 달리 말하면, 로봇은 우수한 프로세스들을 식별하기 위해또는 성능을 감소시키는 프로세스들을 식별하기 위해 프로세스들을 비교할 수 있다. 일부 실시예들은 로봇들이 하나 이상의 외부 애플리케이션에서 실행되고, 사용자들에 의해 구현되고, 리스너들을 통해 관찰되는 등의 프로 세스들을 모니터링하는 것을 허용할 수 있다. 알려진 및/또는 발견된 프로세스들의 ROI가 결정되고 우선순위가 지정되면, AI를 사용하여 이상적인 자동화 경 로(즉, 프로세스를 구현하는 RPA 워크플로우)를 결정할 수 있다. 그런 후 디자이너 애플리케이션을 사용하여 워크플로우를 구축하고, 워크플로우에 기초하여 로봇을 생성하고, 로봇을 배치하여 워크플로우를 수행할 수 있 다. 디자이너 애플리케이션은 또한 일부 실시예들에서 메트릭으로서 ROI를 사용하여 워크플로우들을 자동 생성 및/또는 자동 재구성할 수 있다. 예를 들어, 신규 워크플로우 또는 수정된 워크플로우를 자동으로 생성하는 것 외에도, 시스템은 보다 효율적으로 동작하도록 워크플로우의 구성들을 변경할 수 있다. 특정 실시예들에서, 리스너는 로봇이 활용되고 있지 않거나, 사람의 입력을 기다리고 있거나, 또는 둘 다일 때 자동 경보를 수신할 수 있다. 이는 사용자가 생산적이지 않음 등으로 인해 발생하는 미활용 또는 오용으로 인 해 최적화되지 않은 ROI가 발생하는지 여부를 결정하는 데 도움이 될 수 있다. 그런 후 사용자는 자동화를 보 다 효율적으로 사용하도록 트레이닝될 수 있다. 도 1은 본 발명의 실시예에 따른, RPA 시스템을 나타내는 아키텍처 다이어그램이다. RPA 시스템은 개발자가 워크플로우들을 설계하고 구현할 수 있게 하는 디자이너를 포함한다. 디자이너는 제3자 애 플리케이션들, 관리 정보 기술(IT) 작업들, 및 비즈니스 IT 프로세스들의 자동화뿐만 아니라, 애플리케이션 통 합을 위한 솔루션을 제공할 수 있다. 디자이너는 비즈니스 프로세스의 그래픽 표현인 자동화 프로젝트의 개발을 용이하게 할 수 있다. 간단히 말해서, 디자이너는 워크플로우들 및 로봇들의 개발 및 배치를 용이 하게 한다. 자동화 프로젝트는 개발자에게 본원에서 \"액티비티\"로서 정의되는, 워크플로우에서 개발된 커스텀한 단계들의 세트 간의 관계 및 실행 순서의 제어를 제공함으로써 규칙 기반 프로세스들의 자동화를 가능하게 한다. 디자이 너의 실시예의 하나의 상용 예는 UiPath Studio™이다. 각 액티비티는, 버튼 클릭, 파일 읽기, 로그 패널 에 기록하기 등과 같은 액션을 포함할 수 있다. 일부 실시예들에서, 워크플로우들은 중첩(nested)되거나 임베 딩될 수 있다. 일부 유형들의 워크플로우들은, 비제한적인 예시로서, 시퀀스, 플로우차트, 유한 상태 머신(Finite State Machine; FSM), 및/또는 전역적 예외 핸들러를 포함할 수 있다. 시퀀스는 선형 프로세스에 특히 적합할 수 있 어서, 워크플로우를 난잡스럽게 하지 않으면서 하나의 액티비티로부터 다른 액티비티로의 플로우를 가능케 한다. 플로우차트는 더 복잡한 비즈니스 로직에 특히 적합할 수 있어서, 여러 분기 로직 연산자들을 통해 보다 다양한 방식으로 의사결정들의 통합과 액티비티의 연결을 가능케 한다. FSM은 대규모 워크플로우들에 특히 적 합할 수 있다. FSM은, 그 실행 시 유한한 수의 상태들을 사용할 수 있으며, 이는 조건(즉, 천이) 또는 액티비 티에 의해 트리거링된다. 전역적 예외 핸들러는 실행 오류가 발생할 때 워크플로우 거동을 결정하고 프로세스 들을 디버깅하는 데 특히 적합할 수 있다. 디자이너 내에서 워크플로우가 개발되면, 비즈니스 프로세스들의 실행은, 디자이너 내에서 개발된 워 크플로우들을 실행하는 하나 이상의 로봇을 오케스트레이션(orchestrate)하는 컨덕터(conductor)에 의해 오케스트레이션된다. 컨덕터의 실시예의 하나의 상용 예는 UiPath Orchestrator™이다. 컨덕터 는 환경 내의 자원들의 생성, 모니터링, 및 배치의 관리를 용이하게 한다. 컨덕터는 또한 제3자 솔 루션 및 애플리케이션과의 통합 지점으로서 기능할 수 있다. 컨덕터는 중앙화된 지점으로부터 로봇들을 연결하고 실행시켜서, 로봇들의 무리(fleet)를 관리 할 수 있다. 관리될 수 있는 로봇의 유형들은, 비제한적인 예시로서, 유인형 로봇, 무인형 로봇 , 개발 로봇(무인형 로봇과 유사하지만 개발 및 테스트 목적으로 사용됨), 및 비생산 로봇(유인형 로 봇과 유사하지만 개발 및 테스트 목적으로 사용됨)을 포함한다. 유인형 로봇은 사용자 이벤트에 의 해 트리거링되고 동일한 컴퓨팅 시스템 상에서 인간과 함께 동작한다. 유인형 로봇은 중앙화된 프로세스 배치 및 로깅 매체를 위해 컨덕터와 함께 사용될 수 있다. 유인형 로봇은 인간 사용자가 다양한 작 업들을 완수하는 것을 도울 수 있고, 사용자 이벤트에 의해 트리거링될 수 있다. 일부 실시예들에서, 프로세스 들은 이러한 유형의 로봇 상에서 컨덕터로부터 시작될 수 없고/없거나 이들은 잠금 화면 하에서 실행될 수 없다. 특정 실시예들에서, 유인형 로봇은 오직 로봇 트레이로부터 또는 명령 프롬프트로부터 작동될 수 있다. 일부 실시예들에서 유인형 로봇은 인간의 감독 하에서 실행되어야 한다.무인형 로봇은 가상 환경에서 무인으로 실행되고 많은 프로세스들을 자동화할 수 있다. 무인형 로봇(13 4)은 원격 실행, 모니터링, 스케줄링, 및 워크 큐(work queue)에 대한 지원 제공을 담당할 수 있다. 모든 로봇 유형들에 대한 디버깅이 일부 실시예들에서 디자이너에서 실행될 수 있다. 유인형 및 무인형 로봇 둘 다 는 비제한적인 예시로서, 메인프레임, 웹 애플리케이션, VM, 엔터프라이즈 애플리케이션(예컨대, SAP®, SalesForce®, Oracle® 등에 의해 생산되는 것들), 및 컴퓨팅 시스템 애플리케이션(예컨대, 데스크톱 및 랩톱 애플리케이션, 모바일 디바이스 애플리케이션, 웨어러블 컴퓨터 애플리케이션 등)을 비롯한 다양한 시스템 및 애플리케이션을 자동화할 수 있다. 컨덕터는 비제한적인 예시로서, 프로비저닝(provisioning), 배치, 구성, 큐잉, 모니터링, 로깅, 및/또는 상호연결성 제공을 비롯한 다양한 능력들을 가질 수 있다. 프로비저닝은 로봇과 컨덕터(예컨대, 웹 애플리케이션) 사이의 연결들의 생성 및 유지보수를 포함할 수 있다. 배치는 실행을 위해 할당된 로봇으 로의 패키지 버전의 올바른 전달을 보장하는 것을 포함할 수 있다. 구성은 로봇 환경 및 프로세스 구성의 유지 보수 및 전달을 포함할 수 있다. 큐잉은 큐 및 큐 항목의 관리를 제공하는 것을 포함할 수 있다. 모니터링은, 로봇 식별 데이터를 지속적으로 추적하고 사용자 권한을 유지보수하는 것을 포함할 수 있다. 로깅은, 로그를 데이터베이스(예컨대, SQL 데이터베이스) 및/또는 다른 저장 메커니즘(예컨대, 대규모 데이터세트를 저장하고 이를 신속하게 질의(query)할 수 있는 능력을 제공하는 ElasticSearch®)에 저장하고 이를 인덱싱하는 것을 포함 할 수 있다. 컨덕터는 제3자 솔루션 및/또는 애플리케이션에 대한 중앙화된 통신 지점으로서의 역할을 함 으로써 상호연결성을 제공할 수 있다. 로봇은 디자이너 내에서 빌드된 워크플로우들을 구동시키는 실행 에이전트이다. 로봇(들)의 일 부 실시예들의 하나의 상용 예는 UiPath Robots™이다. 일부 실시예들에서, 로봇은 Microsoft Windows® Service Control Manager(SCM)-관리 서비스를 디폴트로서 인스톨한다. 결과로서, 그러한 로봇은 로컬 시 스템 계정 하에서 인터랙티브 Windows® 세션들을 열고 Windows® 서비스의 권한을 가질 수 있다. 일부 실시예들에서, 로봇은 사용자 모드로 인스톨될 수 있다. 이러한 로봇의 경우, 이는 주어진 로 봇을 인스톨했던 사용자와 동일한 권한을 로봇이 갖는다는 것을 의미한다. 이 특징은 또한 각 머신의 완 전한 활용을 최대 한도로 보장하는, 고밀도(HD) 로봇에도 이용가능할 수 있다. 일부 실시예들에서, 임의의 유 형의 로봇이 HD 환경에서 구성될 수 있다. 일부 실시예들에서 로봇은 여러 컴포넌트들로 분할되고, 각 컴포넌트는 특정 자동화 작업에 전용된다. 일 부 실시에들에서 로봇 컴포넌트들은, 비제한적인 예시로서, SCM-관리형 로봇 서비스, 사용자 모드 로봇 서비스, 실행기, 에이전트, 및 명령 라인을 포함한다. SCM-관리형 로봇 서비스는 Windows® 세션들을 관리 및 모니터링 하고, 컨덕터와 실행 호스트(즉, 로봇이 실행되는 컴퓨팅 시스템) 사이의 프록시(proxy)로서의 역할 을 한다. 이러한 서비스들은 로봇에 대한 크리덴셜(credential)로 신뢰받고 이를 관리한다. 로컬 시스템 하에서 SCM에 의해 콘솔 애플리케이션이 런칭된다. 일부 실시예들에서 사용자 모드 로봇 서비스들은 Windows® 세션들을 관리 및 모니터링하고, 컨덕터와 실행 호스트 사이의 프록시로서의 역할을 한다. 사용자 모드 로봇 서비스들은 로봇에 대한 크리덴셜로 신뢰받 고 이를 관리할 수 있다. SCM-관리형 로봇 서비스가 인스톨되어 있지 않다면 Windows® 애플리케이션이 자동으 로 런칭될 수 있다. 실행기는 Windows® 세션 하에서 주어진 작업들을 실행할 수 있다(즉, 실행기는 워크플로우들을 실행할 수 있 다). 실행기는 모니터별 DPI(dots per inch) 설정을 인식할 수 있다. 에이전트는 시스템 트레이 창 내에 이용 가능한 작업들을 디스플레이하는 Windows® Presentation Foundation(WPF) 애플리케이션일 수 있다. 에이전트 는 서비스의 클라이언트일 수 있다. 에이전트는 작업을 시작 또는 정지하고 설정을 변경할 것을 요청할 수 있 다. 명령 라인은 서비스의 클라이언트이다. 명령 라인은 작업들을 시작하고 그 출력을 기다릴 것을 요청할 수 있는 콘솔 애플리케이션이다. 위에서 설명된 바와 같이 로봇의 컴포넌트들을 분할시키는 것은 개발자를 돕고, 사용자를 지원하고, 각 컴 포넌트가 실행 중인 것을 컴퓨팅 시스템이 보다 쉽게 실행하고, 식별하고, 추척하게 할 수 있다. 실행기와 서 비스에 대해 상이한 방화벽 규칙들을 설정하는 것과 같이, 컴포넌트별 특수한 거동들이 이러한 식으로 구성될수 있다. 실행기는 일부 실시예들에서 모니터별 DPI 설정을 항상 인식할 수 있다. 결과적으로, 워크플로우들 은 자신들이 생성되었던 컴퓨팅 시스템의 구성에 관계없이 임의의 DPI에서 실행될 수 있다. 디자이너로부 터의 프로젝트는 또한 일부 실시예들에서 브라우저 줌 레벨과 무관할 수 있다. DPI를 인식하지 못하거나 의도 적으로 인식하지 못하는 것으로서 표시된 애플리케이션들의 경우, 일부 실시예들에서 DPI가 디스에이블될 수 있 다. 도 2는 본 발명의 실시예에 따른, 배치된 RPA 시스템을 나타내는 아키텍처 다이어그램이다. 일부 실시예 들에서, RPA 시스템은 도 1의 RPA 시스템일 수 있거나, 또는 그 일부일 수 있다. 클라이언트측, 서 버측, 또는 둘 다는 본 발명의 범위로부터 벗어나지 않으면서 임의의 원하는 수의 컴퓨팅 시스템들을 포함할 수 있다는 점에 유의해야 한다. 클라이언트 측에서, 로봇 애플리케이션은 실행기, 에이전트, 및 디자이너를 포함한다. 그러나, 일부 실시예들에서, 디자이너는 컴퓨팅 시스템 상에서 실행되고 있지 않을 수 있다. 실행기가 프로세스들을 실행하고 있다. 도 2에서 도시된 바와 같이, 여러 비즈니스 프로젝트들이 동시에 실행될 수 있다. 이 실시예에서, 에이전트(예컨대, Windows® 서비스)는 모든 실행기 를 위한 단일 접촉점이다. 이 실시예에서의 모든 메시지들은 데이터베이스 서버, 인덱서 서버, 또는 둘 다를 통해 이 메시지들을 추가로 프로세싱하는 컨덕터에 로깅(log)된다. 도 1과 관련하여 위에서 논의된 바와 같이, 실행기는 로봇 컴포넌트일 수 있다. 일부 실시예들에서, 로봇은 머신 이름과 사용자이름 사이의 연관을 나타낸다. 로봇은 다중 실행기들을 동시에 관리할 수 있다. 동시에 실행되는 다중 인터랙티브 세션들을 지원하는 컴퓨팅 시스템(예컨대, Windows® Server 2012) 상에서, 각각 고유한 사용자이름을 사용하여 별개의 Windows® 세션 내에서, 동시에 실행되는 다중 로봇들 이 있을 수 있다. 이것을 위의 HD 로봇이라고 칭한다. 에이전트는 또한 로봇의 상태를 전송하고(예컨대, 로봇이 여전히 기능하고 있다는 것을 표시하는 \"하트비 트(heartbeat)\" 메시지를 주기적으로 전송), 실행될 패키지의 요구되는 버전을 다운로드하는 것을 담당한다. 일부 실시예들에서 에이전트와 컨덕터 사이의 통신은 항상 에이전트에 의해 개시된다. 통지 시 나리오에서, 에이전트는 명령(예컨대, 시작, 정지 등)을 로봇에 전송하기 위해 컨덕터에 의해 이후에 사용되는 WebSocket 채널을 열 수 있다. 서버 측에서는, 프리젠테이션 계층(웹 애플리케이션, 개방형 데이터 프로토콜(Open Data Protocol; OData) 표현적 상태 전송(Representative State Transfer; REST) 애플리케이션 프로그래밍 인터페이스(Application Programming Interface; API) 엔드포인트, 그리고 통지 및 모니터링), 서비스 계층(API 구현/비즈니 스 로직), 및 영속 계층(데이터베이스 서버 및 인덱서 서버)이 포함된다. 컨덕터는 웹 애 플리케이션, OData REST API 엔드포인트, 통지 및 모니터링, 및 API 구현/비즈니스 로직 을 포함한다. 일부 실시예들에서, 컨덕터의 인터페이스에서(예컨대, 브라우저를 통해) 사용자가 수 행하는 대부분의 액션들은 다양한 API들을 호출함으로써 수행된다. 그러한 액션들은 비제한적인 예시로서, 본 발명의 범위를 벗어나지 않고서, 로봇 상에서의 작업의 시작, 큐 내의 데이터의 추가/제거, 무인 상태로 실행될 작업의 스케줄링 등을 포함할 수 있다. 웹 애플리케이션은 서버 플랫폼의 시각적 계층이다. 이 실시예에 서, 웹 애플리케이션은 HTML(Hypertext Markup Language) 및 JS(JavaScript)를 사용한다. 그러나, 본 발 명의 범위로부터 벗어나지 않으면서 임의의 원하는 마크업 언어, 스크립트 언어, 또는 임의의 다른 포맷들이 사 용될 수 있다. 이 실시예에서 사용자는 컨덕터를 제어하기 위한 다양한 액션들을 수행하기 위해 브라우저 를 통해 웹 애플리케이션으로부터 웹 페이지와 상호작용한다. 예를 들어, 사용자는 로봇 그룹들을 생성하고, 로봇들에 패키지들을 할당하고, 로봇당 및/또는 프로세스당 로그들을 분석하고, 로봇들을 작동 및 정 지시키는 것 등을 할 수 있다. 웹 애플리케이션에 더하여, 컨덕터는 또한 OData REST API 엔드포인트를 노출하는 서비스 계층 을 포함한다. 그러나, 본 발명의 범위를 벗어나지 않고서 다른 엔드포인트들이 포함될 수 있다. REST API는 웹 애플리케이션과 에이전트 둘 다에 의해 소비된다. 이 실시예에서 에이전트는 클라이언트 컴 퓨터 상의 하나 이상의 로봇의 수퍼바이저(supervisor)이다. 이 실시예에서 REST API는 구성, 로깅, 모니터링, 및 큐잉 기능을 커버한다. 일부 실시예들에서 구성 엔드포인 트는 애플리케이션 사용자, 허가, 로봇, 자산, 릴리스, 및 환경을 정의하고 구성하는 데 사용될 수 있다. 로깅 REST 엔드포인트는 예를 들어, 오류, 로봇에 의해 전송된 명시적 메시지, 및 다른 환경 특유적 정보와 같은 상 이한 정보를 로깅하는 데 사용될 수 있다. 배치 REST 엔드포인트는 컨덕터 내에서 작업 시작 명령이 사용된다면 실행되어야 하는 패키지 버전을 질의하기 위해 로봇들에 의해 사용될 수 있다. 큐잉 REST 엔드포인트는 큐에 데이터를 추가하는 것, 큐로부터 트랜잭션을 획득하는 것, 및 트랜잭션의 상태를 설정하는 것 등과 같은, 큐 및 큐 항목 관리를 담당할 수 있다. 모니터링 REST 엔드포인트는 웹 애플리케이션 및 에이전트를 모니터링할 수 있다. 통지 및 모니터링 API는 에이전트를 등록하고, 구성 설정을 에이전트에 전달하고, 서버 및 에이전트로부터의 통지들을 전송/수신하기 위해 사용되는 REST 엔드포인트일 수 있다. 일부 실시예들에서 통지 및 모니터링 API는 또한 WebSocket 통신을 사용할 수 있다. 이 실시예에서 영속 계층은 서버들의 쌍 - 데이터베이스 서버(예컨대, SQL 서버)와 인덱서 서버 - 을 포함한다. 이 실시예에서 데이터베이스 서버는 로봇의 구성, 로봇 그룹, 연관된 프로세스, 사용자, 역할, 스케줄 등을 저장한다. 일부 실시예들에서 이 정보는 웹 애플리케이션을 통해 관리된다. 데이터베이스 서버는 큐 및 큐 항목을 관리할 수 있다. 일부 실시예들에서, 데이터베이스 서버는 (인덱서 서버 에 더하여 또는 이를 대신하여), 로봇들에 의해 로깅된 메시지들을 저장할 수 있다. 인덱서 서버는 로봇들에 의해 로깅된 정보를 저장하고 인덱싱하는데, 이는 일부 실시예들에서 선택적이다. 특정 실시예들에서, 인덱서 서버는 구성 설정을 통해 디스에이블링될 수 있다. 일부 실시예들에서, 인덱 서 서버는 오픈 소스 프로젝트 전체 텍스트 검색 엔진인 ElasticSearch®를 사용한다. (예컨대, 메시지의 로깅 또는 라인의 기록과 같은 액티비티들을 사용하여) 로봇들에 의해 로깅된 메시지들은 로깅 REST 엔드포인트 (들)을 통해 인덱서 서버에 전송될 수 있으며, 이것들은 향후의 이용을 위해 인덱싱된다. 도 3은 본 발명의 실시예에 따른, 디자이너, 액티비티들(320, 330), 및 드라이버들 간의 관계를 나타내는 아키텍처 다이어그램이다. 위의 내용에 따라, 개발자는 디자이너를 사용하여 로봇들에 의해 실 행되는 워크플로우들을 개발한다. 워크플로우들은 사용자 정의 액티비티 및 UI 자동화 액티비티를 포함할 수 있다. 일부 실시예들은 여기에서 컴퓨터 비전(computer vision; CV)이라고 칭하는 이미지에서 비텍 스트 시각적 컴포넌트를 식별할 수 있다. 이러한 컴포넌트와 관련된 일부 CV 액티비티들은, 비제한적인 예시로 서, 클릭, 타이핑, 텍스트 가져오기, 호버링, 엘리먼트 존재, 범위 리프레쉬 범위, 하이라이트 등을 포함할 수 있다. 일부 실시예들에서 클릭은 예를 들어, CV, 광학 문자 인식(optical character recognition; OCR), 퍼지 텍스트 매칭, 다중 앵커 등을 사용하여 엘리먼트를 식별하고, 이를 클릭한다. 타이핑은 상기를 사용하여 엘리 먼트를 식별하고 엘리먼트에 타이핑한다. 텍스트 가져오기는 특정 텍스트의 위치를 식별하고 OCR을 사용하여 이를 스캔할 수 있다. 호버링은 엘리먼트를 식별하고 그 위로 호버링할 수 있다. 엘리먼트 존재는 위에서 설 명한 기술들을 사용하여 스크린 상에 엘리먼트가 존재하는지 체크할 수 있다. 일부 실시예들에서, 디자이너 에서 구현될 수 있는 수백 개 또는 수천 개의 액티비티들이 있을 수 있다. 그러나, 본 발명의 범위를 벗 어나지 않고서 임의의 개수 및/또는 유형의 액티비티들이 이용가능할 수 있다. UI 자동화 액티비티는 하위 레벨 코드로 작성되고 스크린과의 상호작용을 용이하게 하는 특별한 하위 레벨 액티비티(예를 들어, CV 액티비티)의 서브세트이다. UI 자동화 액티비티는 로봇이 원하는 소프트웨어와 상호작용할 수 있게 하는 드라이버를 통해 이러한 상호작용들을 용이하게 한다. 예를 들어, 드라이버 는 OS 드라이버, 브라우저 드라이버, VM 드라이버, 엔터프라이즈 애플리케이션 드라이버 등을 포함할 수 있다. 드라이버는 후크를 찾고, 키를 모니터링하는 등 낮은 레벨에서 OS와 상호작용할 수 있다. 이들은 Chrome®, IE®, Citrix®, SAP® 등과의 통합을 용이하게 할 수 있다. 예를 들어, \"클릭\" 액티비티는 드라이버 를 통해 이러한 서로 다른 애플리케이션들에서 동일한 역할을 수행한다. 도 4는 본 발명의 실시예에 따른, RPA 시스템을 나타내는 아키텍처 다이어그램이다. 일부 실시예들에서, RPA 시스템은 도 1 및/또는 도 2의 RPA 시스템들(100 및/또는 200)일 수 있거나 또는 이를 포함할 수 있다. RPA 시스템은 로봇들을 실행시키는 다중 클라이언트 컴퓨팅 시스템을 포함한다. 컴퓨팅 시스 템은 컨덕터 컴퓨팅 시스템 상에서 구동 중에 있는 웹 애플리케이션을 통해 컨덕터 컴퓨팅 시스템 과 통신할 수 있다. 컨덕터 컴퓨팅 시스템은 이어서, 데이터베이스 서버 및 선택적인 인덱서 서버와 통신할 수 있다. 도 1 및 도 3과 관련하여, 이들 실시예들에서는 웹 애플리케이션이 사용되지만, 본 발명의 범위로부터 벗어나지 않으면서 임의의 적절한 클라이언트/서버 소프트웨어가 사용될 수 있다는 점에 유의해야 한다. 예를 들어, 컨 덕터는 클라이언트 컴퓨팅 시스템 상의 비 웹 기반 클라이언트 소프트웨어 애플리케이션과 통신하는 서버측 애플리케이션을 실행시킬 수 있다. 도 5는 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 잠재적으로 자동으로 생성하도록 구성된 컴퓨팅 시스템을 나타내는 아키텍처 다이어그램이다. 일부 실시 예들에서, 컴퓨팅 시스템은 본 명세서에서 도시되고 및/또는 설명된 컴퓨팅 시스템들 중 하나 이상일 수 있다. 컴퓨팅 시스템은 정보의 통신을 위한 버스 또는 다른 통신 메커니즘, 및 정보의 프로세싱을 위해 버스에 커플링된 프로세서(들)을 포함한다. 프로세서(들)은 CPU(Central Processing Unit), ASIC(Application Specific Integrated Circuit), FPGA(Field Programmable Gate Array), GPU(Graphics Processing Unit), 이들의 다중 인스턴스들, 및/또는 이들의 임의의 조합을 비롯한 임의의 유형의 범용 프로세서 또는 특수 목적 프로세서일 수 있다. 프로세서(들)은 또한 다중 프로세싱 코어들을 가질 수 있으며, 코어들 중 적어도 일부는 특수 기능들을 수행하도록 구성될 수 있다. 일부 실시예들에서 다중 병렬 프로세싱이 사용될 수 있다. 특정 실시예들에서, 프로세서(들) 중 적어도 하나는 생물학적 뉴런을 모방하 는 프로세싱 엘리먼트들을 포함하는 뉴로모픽(neuromorphic) 회로일 수 있다. 일부 실시예들에서, 뉴로모픽 회 로는 폰 노이만 컴퓨팅 아키텍처의 전형적인 컴포넌트들을 필요로 하지 않을 수 있다. 컴퓨팅 시스템은 프로세서(들)에 의해 실행될 명령어 및 정보를 저장하기 위한 메모리를 더 포 함한다. 메모리는 RAM(Random Access Memory), ROM(Read Only Memory), 플래시 메모리, 캐시, 자기 또는 광학 디스크와 같은 정적 저장장치, 또는 임의의 다른 유형의 비일시적 컴퓨터 판독가능 매체 또는 이들의 조합 의 임의의 조합을 포함할 수 있다. 비일시적 컴퓨터 판독가능 매체는 프로세서(들)에 의해 액세싱될 수 있는 임의의 이용가능한 매체일 수 있고, 휘발성 매체, 비휘발성 매체, 또는 둘 다를 포함할 수 있다. 매체는 또한 탈착식, 비탈착식, 또는 둘 다일 수 있다. 추가적으로, 컴퓨팅 시스템은 무선 및/또는 유선 연결을 통해 통신 네트워크에 대한 액세스를 제공하기 위 한 트랜스시버와 같은 통신 디바이스를 포함한다. 일부 실시예들에서, 통신 디바이스는, 본 발명의 범위를 벗어나지 않고서, 주파수 분할 다중 액세스(FDMA), 단일 캐리어 FDMA(SC-FDMA), 시분할 다중 액세스 (TDMA), 코드 분할 다중 액세스(CDMA), 직교 주파수 분할 멀티플렉싱(OFDM), 직교 주파수 분할 다중 액세스 (OFDMA), 모바일용 글로벌 시스템(GSM) 통신, 일반 패킷 무선 서비스(GPRS), 유니버셜 모바일 원격통신 시스템 (UMTS), cdma2000, 광대역 CDMA(W-CDMA), 고속 다운링크 패킷 액세스(HSDPA), 고속 업링크 패킷 액세스 (HSUPA), 고속 패킷 액세스(HSPA), 롱 텀 에볼루션(LTE), LTE 어드밴스드(LTE-A), 802.11x, Wi-Fi, Zigbee, 울 트라 광대역(UWB), 802.16x, 802.15, 홈 노드 B(HnB), 블루투스, 무선 주파수 식별정보(RFID), 적외선 데이터 연관(IrDA), 근거리 통신(NFC), 5세대(5G), 신규 무선(NR), 이들의 임의의 조합, 및/또는 임의의 다른 현존하거 나 또는 미래에 구현되는 통신 표준 및/또는 프로토콜을 사용하도록 구성될 수 있다. 일부 실시예들에서, 통신 디바이스는 본 발명의 범위를 벗어나지 않고서 단일, 어레이, 위상, 스위치드, 빔포밍, 빔스티어링, 이들 의 조합, 및/또는 임의의 다른 안테나 구성인 하나 이상의 안테나를 포함할 수 있다. 프로세서(들)은 또한 버스를 통해 플라즈마 디스플레이, 액정 디스플레이(LCD), 발광 다이오드(LED) 디스플레이, 전계 방출 디스플레이(FED), 유기 발광 다이오드(OLED) 디스플레이, 플렉시블 OLED 디스플레이, 플 렉시블 기판 디스플레이, 프로젝션 디스플레이, 4K 디스플레이, 고화질 디스플레이, Retina® 디스플레이, IPS(In-Plane Switching) 디스플레이, 또는 사용자에게 정보를 디스플레이하기 위한 임의의 다른 적절한 디스플 레이와 같은 디스플레이에 커플링된다. 디스플레이는 저항식, 용량식, SAW(surface-acoustic wave) 용량식, 적외선, 광학 이미징, 분산 신호 기술, 음향 펄스 인식, FTIR(frustrated total internal reflection) 등을 사용하는 터치(햅틱) 디스플레이, 3차원(3D) 터치 디스플레이, 다중 입력 터치 디스플레이, 다중 터치 디 스플레이 등으로서 구성될 수 있다. 본 발명의 범위를 벗어나지 않고서 임의의 적절한 디스플레이 디바이스 및 햅틱 I/O가 사용될 수 있다. 키보드, 및 컴퓨터 마우스, 터치패드 등과 같은 커서 제어 디바이스가 또한 사용자가 컴퓨팅 시스템 과 인터페이싱할 수 있도록 버스에 커플링된다. 그러나, 특정 실시예들에서, 물리적 키보드 및 마우 스가 존재하지 않을 수 있고, 사용자는 디스플레이 및/또는 터치패드(도시되지 않음)만을 통해 디바이스와 상호작용할 수 있다. 임의의 유형 및 조합의 입력 디바이스들이 설계 선택의 사항으로서 사용될 수 있다. 특 정 실시예들에서, 물리적 입력 디바이스 및/또는 디스플레이가 존재하지 않는다. 예를 들어, 사용자는 컴퓨팅 시스템과 통신하는 다른 컴퓨팅 시스템을 통해 컴퓨팅 시스템과 원격으로 상호작용할 수 있거나, 또 는 컴퓨팅 시스템은 자율적으로 동작할 수 있다. 메모리는 프로세서(들)에 의해 실행될 때 기능을 제공하는 소프트웨어 모듈들을 저장한다. 모듈들은 컴퓨팅 시스템을 위한 운영 체제를 포함한다. 모듈들은 여기서 설명된 프로세스들 또는 그 파생물의 전체 또는 일부를 수행하도록 구성된 ROI 개선 모듈을 더 포함한다. 컴퓨팅 시스템은 추가적인 기능 을 포함하는 하나 이상의 추가적인 기능 모듈을 포함할 수 있다. 당업자는 \"시스템\"이 본 발명의 범위로부터 벗어나지 않으면서 서버, 임베디드 컴퓨팅 시스템, 개인용 컴퓨터, 콘솔, PDA(personal digital assistant), 셀 폰, 태블릿 컴퓨팅 디바이스, 양자 컴퓨팅 시스템, 또는 임의의 다른 적절한 컴퓨팅 디바이스, 또는 디바이스들의 조합으로서 실시될 수 있다는 것을 알 것이다. 전술한 기능 들이 \"시스템\"에 의해 수행되는 것으로서 표현한 것은 본 발명의 범위를 어떠한 식으로든지 제한시키려는 의도 는 없으며, 본 발명의 많은 실시예들 중 하나의 예시를 제공하려고 의도된 것이다. 실제로, 본 명세서에서 개 시된 방법, 시스템, 및 장치는 클라우드 컴퓨팅 시스템을 비롯한 컴퓨팅 기술과 일치하는 로컬화되고 분산된 형 태들로 구현될 수 있다. 본 명세서에서 설명된 시스템 특징들 중 일부는 그 구현 독립성을 더 특별히 강조하기 위해, 모듈들로서 표현되 었다는 점에 유의해야 한다. 예컨대, 모듈은 커스텀 VLSI(very large scale integration) 회로 또는 게이트 어레이, 로직 칩과 같은 상용 반도체, 트랜지스터, 또는 다른 개별 컴포넌트를 포함하는 하드웨어 회로로서 구 현될 수 있다. 모듈은 또한 필드 프로그래밍가능 게이트 어레이, 프로그래밍가능 어레이 로직, 프로그래밍가능 로직 디바이스, 그래픽 프로세싱 유닛 등과 같은 프로그래밍가능 하드웨어 디바이스로 구현될 수 있다. 모듈은 또한 다양한 유형들의 프로세서들에 의한 실행을 위해 적어도 부분적으로 소프트웨어로 구현될 수 있다. 예를 들어, 실행가능 코드의 식별되는 단위는 예를 들어, 객체, 프로시저, 또는 함수로서 조직화될 수 있는 컴 퓨터 명령어들의 하나 이상의 물리적 또는 논리적 블록을 포함할 수 있다. 그럼에도 불구하고, 식별되는 모듈 의 실행가능자들은 물리적으로 함께 위치될 필요는 없지만, 논리적으로 함께 결합될 때 해당 모듈을 포함하고 해당 모듈에 대한 서술된 목적을 달성하는, 상이한 위치들에 저장된 별개의 명령어들을 포함할 수 있다. 또한, 모듈들은 본 발명의 범위로부터 벗어나지 않으면서, 예를 들어, 하드 디스크 드라이브, 플래시 디바이스, RAM, 테이프, 및/또는 데이터를 저장하기 위해 사용되는 임의의 다른 그러한 비일시적 컴퓨터 판독가능 매체일 수 있 는 컴퓨터 판독가능 매체 상에 저장될 수 있다. 실제로, 실행가능 코드의 모듈은 단일 명령어 또는 많은 명령어들일 수 있고, 여러 상이한 코드 세그먼트들에 걸쳐서, 상이한 프로그램들 간에, 그리고 여러 메모리 디바이스들에 걸쳐서 분산될 수도 있다. 마찬가지로, 동 작 데이터는 본 명세서에서 모듈들 내에 있는 것으로 식별되고 예시될 수 있으며, 임의의 적절한 형태로 실시되 고 임의의 적절한 유형의 데이터 구조 내에서 조직화될 수 있다. 동작 데이터는 단일 데이터 세트로서 수집될 수 있거나, 상이한 저장 디바이스들에 걸쳐 있는 것을 비롯하여 상이한 위치들에 걸쳐 분산될 수 있고, 적어도 부분적으로 단지 시스템 또는 네트워크 상의 전자 신호로서만 존재할 수 있다. 도 6은 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들의 자동 분석, 우선순위 지정, 및 잠재적으로 자동 생성을 수행하도록 구성된 시스템을 나타내는 아키텍처 다이어그램이다. 시스템은 데스크탑 컴퓨터, 태블릿, 및 스마트폰과 같은 사용자 컴퓨팅 시스템을 포함한다. 그러나, 비 제한적인 예시로서, 본 발명의 범위를 벗어나지 않고서, 스마트 워치, 랩톱 컴퓨터, 사물 인터넷(IoT) 디바이스, 차량 컴퓨팅 시스템 등을 비롯한 임의의 원하는 컴퓨팅 시스템이 사용될 수 있다. 각각의 컴퓨팅 시스템(602, 604, 606) 상에는 리스너가 인스톨되어 있다. 리스너는 본 발명의 범위 를 벗어나지 않고서 RPA 디자이너 애플리케이션, 운영 체제의 일부, 개인용 컴퓨터(PC) 또는 스마트폰을 위한 다운로드가능한 애플리케이션, 또는 임의의 다른 소프트웨어 및/또는 하드웨어를 통해 생성된 로봇일 수 있다. 실제로, 일부 실시예들에서, 하나 이상의 리스너의 로직은 물리적 하드웨어를 통해 부분적으로 또는 완전 히 구현된다. 리스너는 각각의 컴퓨팅 시스템(602, 604, 606)과의 사용자 상호작용들의 로그 및/또는 각각의 컴퓨팅 시 스템 상에서 실행되는 로봇들의 동작들에 관한 로그 데이터를 생성한다. 그런 후, 리스너는 네트워크 (예를 들어, 근거리 통신망(LAN), 이동 통신 네트워크, 위성 통신 네트워크, 인터넷, 이들의 임의의 조합 등)를 통해 서버에 로그 데이터를 전송한다. 로깅되는 데이터에는, 비제한적인 예시로서, 어떤 버튼을 클 릭했는지, 어디에서 마우스를 이동했는지, 필드에 입력한 텍스트, 하나의 창이 최소화되었고 다른 창이 열렸는 지, 창과 연관된 애플리케이션 등이 포함될 수 있다. 일부 실시예들에서, 서버는 컨덕터 애플리케이션을 실행할 수 있고 데이터는 하트비트 메시지의 일부로서 주기적으로 전송될 수 있다. 특정 실시예들에서, 로그 데이터는, 미리 결정된 양의 로그 데이터가 수집되면, 미리 결정된 기간이 경과한 후, 또는 둘 다의 경우에 서 버에 전송될 수 있다. 서버는 리스너로부터 수신된 로그 데이터를 데이터베이스에 저장한다. 서버는, 인간 사용자(예컨대, RPA 엔지니어 또는 데이터 과학자)에 의해 명령될 때, 미리 결정된 양의 로 그 데이터가 수집되었을 때, 최종 분석 이후로 미리 결정된 시간량이 경과되었을 때 등, 데이터베이스로부 터 리스너에 의해 다양한 사용자들로부터 수집된 로그 데이터에 액세스하고, 로그 데이터를 다중 AI 계층 을 통해 실행한다. AI 계층은 로그 데이터를 프로세싱하고 거기에서 ROI 개선을 위한 하나 이상의 잠재적 프로세스를 식별하거나, 기존 프로세스들에 대한 개선을 식별하거나, 둘 다를 식별한다. AI 계층 은 통계적 모델링(예를 들어, 은닉 마르코프 모델(hidden Markov model; HMM))을 수행하고, 딥 러닝 기술들(예 를 들어, 장기 단기 기억(long short term memory; LSTM) 딥 러닝, 이전 은닉 상태들의 인코딩 등)을 활용하고, 프로세스의 원자적 인스턴스를 식별하기 위해 케이스(case) 식별을 수행할 수 있다. 예를 들어, 송 장 프로세싱의 경우, 하나의 송장의 완료가 케이스일 수 있다. 따라서 시스템은 한 케이스가 끝나는 곳과 다음 케이스가 시작되는 곳을 결정한다. 예를 들어, 이메일을 여는 것이 케이스의 시작일 수 있으며, 케이스들의 패 턴들을 분석하여 변동과 공통성을 결정할 수 있다. 일부 실시예들에서, 식별된 프로세스들은 사용자가 정독할 수 있도록 나열될 수 있고, 비제한적인 예시로서, 주 어진 프로세스가 RPA에 대해 얼마나 적절한지를 나타내는 RPA 점수(예컨대, 생성된 수익, 절약된 수익, 절약된 시간 등과 같은 핵심 성과 지표에 대한 인지된 이익, 자동화, 실행 시간과 같은 복잡성에 기초함), 프로세스 이 름, 총 레코딩 시간, 프로세스를 실행한 사용자 수, 프로세스 실행 시간(예컨대, 최소 또는 최대 시간) 등을 비 롯한 다양한 요인들에 의해 소팅(sort)될 수 있다. 사용자가, 단계들, 파라미터들, 및 상호연결들을 비롯하여, 주어진 프로세스를 클릭할 때 프로세스 워크플로우가 디스플레이될 수 있다. 특정 실시예들에서, 클러스터링 관점에서 중요한 것으로 나타나 보이는 프로세스 액티비티들만이 사용될 수 있다. 유사한 프로세스가 이미 존재하는 경우, 서버는 이러한 유사성을 식별하고, 식별된 프로세스가 덜 최적으 로 작동하는 동일하거나 유사한 자동화에 대한 기존 프로세스를 대체해야 한다는 것을 알 수 있다. 예를 들어, 프로세스들 간의 유사성은 공통의 시작과 끝, 그리고 그 사이에서 취해진 단계들에서의 일정량의 통계적 공통성 에 의해 결정될 수 있다. 공통성은 엔트로피, 프로세스 검출 목적 함수의 최소화 등에 의해 결정될 수 있다. 목적 함수 문턱값은 일부 실시예들에서, 자동으로 설정될 수 있으며, 이는 시스템에 의해 유사하지 않은 것으로 서 식별되었던 프로세스들이 사용자에 의해 유사한 것으로서 표시되는 경우에 트레이닝 동안에 수정될 수 있다. 그런 후, 서버는 식별된 프로세스를 포함하는 워크플로우를 자동으로 생성하고, 워크플로우를 구현하는 로 봇(또는 대체 로봇)을 생성하고, 생성된 로봇을 사용자 컴퓨팅 시스템(602, 604, 606)에서 실행되도록 푸시할 수 있다. 대안적으로, 특정 실시예들에서, AI 계층으로부터 제안된 프로세스들이 컴퓨팅 시스템 상의 디자이너 애플리케이션을 통해 RPA 엔지니어에게 제시될 수 있다. 그런 후, RPA 엔지니어는 워크플로우를 검토하고, 임의의 원하는 변경을 행하고, 그런 후, 로봇을 통해 워크플로우를 컴퓨팅 시스템(602, 604, 606)에 배치하거나, 또는 로봇이 배치되도록 할 수 있다. 예를 들어, 배치는 서버 또는 다른 서버 상에서 실행되 는 컨덕터 애플리케이션을 통해 발생할 수 있으며, 이는 프로세스를 구현하는 로봇을 사용자 컴퓨팅 시스템 (602, 604, 606)으로 푸시할 수 있다. 일부 실시예들에서, 이 워크플로우 배치는 디자이너 애플리케이션의 자 동화 관리자 기능을 통해 실현될 수 있고, RPA 엔지니어는 단순히 버튼을 클릭하여 로봇에서 프로세스를 구현할 수 있다. 리스너 컴퓨팅 시스템(602, 604, 606) 상에서 사용자들에 의해 행해지는 액션들과 관련된 데이터를 추출하기 위해, 리 스너가 드라이버 레벨(예컨대, 도 3의 드라이버)에서 클라이언트 측에서 활용되어 화이트리스트 애플 리케이션으로부터 데이터를 추출할 수 있다. 예를 들어, 리스너는 사용자가 스크린 상에서 클릭했던 곳과 어떤 애플리케이션에서 클릭했는지, 키스트로크, 어떤 버튼이 클릭되었는지, 애플리케이션들 간의 사용자 스위 칭의 인스턴스들, 포커스 변경, 이메일이 전송되었는지, 및 이메일이 무엇과 관련된 것인지 등을 레코딩할 수 있다. 추가적으로 또는 대안적으로, 리스너는 컴퓨팅 시스템(602, 604, 606) 상에서 동작하는 로봇들에 관한 데이터를 수집할 수 있다. 일부 실시예들에서, 워크플로우들을 구현하는 다양한 작업들을 수행하는 로봇 은 자신의 동작에 대한 리스너로서 기능할 수 있다. 이러한 데이터는 컴퓨팅 시스템(602, 604, 606) 및/또는 컴퓨팅 시스템 상에서 실행되는 로봇들의 동작(들)과의 사용자의 상호작용들의 고충실도 로그를 생성하는 데 사 용될 수 있다. 프로세스 추출을 위한 로그 데이터의 생성에 추가로 또는 대안적으로, 일부 실시예들은 사용자가 실제로 무엇을 하고 있는지에 대한 통찰력을 제공할 수 있다. 예를 들어, 리스너는 사용자가 실제로 어떤 애플리케이션 을 사용하고 있는지, 사용자가 주어진 애플리케이션을 사용하는 시간의 백분율, 사용자가 사용 중인 애플리케이 션 내의 특징들 및 사용자가 어느 것을 사용하고 있지 않은지 등을 결정할 수 있다. 이 정보는 애플리케이션에 대한 라이선스를 갱신할지 여부, 특징에 대한 라이선스를 갱신하지 않을지 또는 특징이 없는 덜 비싼 버전으로 다운그레이드할지 여부, 다른 직원을 더 생산적이게 해서 사용자가 적절하게 트레이닝될 수 있도록 하려는 경향 이 있는 애플리케이션을 사용자가 사용하고 있지 않은지 여부, 사용자가 업무 외 액티비티(예컨대, 개인 이메일 확인 또는 웹 서핑)를 수행하는 데 많은 양의 시간을 보내는지 또는 자신의 책상에서 떨어져 있는지(예컨대, 컴 퓨팅과 상호작용하지 않음) 등에 관련하여 정보에 입각한 결정을 내릴 수 있도록 관리자에게 제공될 수 있다. 일부 실시예들에서, 검출 업데이트는 리스너들의 드라이버 레벨 사용자 상호작용 및/또는 로봇 동작 검출 및 캡 처 프로세스를 개선하기 위해 리스너들에게 푸시될 수 있다. 특정 실시예들에서, 리스너는 자신들의 검출 에서 AI를 활용할 수 있다. 특정 실시예들에서, 자동화 워크플로우로부터 프로세스들을 구현하는 로봇들은 각 각의 리스너를 통해 컴퓨팅 시스템(602, 604, 606)에 자동으로 푸시될 수 있다. 도 7은 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 자동으로 생성하기 위한 프로세스를 나타내는 흐름도이다. 710에서, 리스너가 사용자 컴퓨팅 시스템에 배 치된다. 720에서, 컴퓨팅 시스템과의 사용자 상호작용, 사용자 컴퓨팅 시스템 상에서의 배치된 로봇들의 성능, 또는 둘 다에 관한 데이터가 리스너로부터 수집된다. 730에서 수집된 데이터는 저장되고, 740에서 AI를 사용하 여 분석되어, 컴퓨팅 시스템과의 사용자 상호작용, 기존 로봇들에 대한 프로세스 개선 또는 둘 다에서, ROI를 개선시키는 프로세스, 프로세스 흐름, 또는 둘 다를 찾는다. 프로세스는 본질적으로 동일한 작업을 달성하는 여러 변형들(즉, 프로세스 흐름들)을 가질 수 있다. 따라서 프로세스를 위한 다양한 프로세스 흐름들 중 어떤 프로세스 흐름(들)이 상대적으로 빈번하게 사용되고 있는지, 어떤 프로세스 흐름(들)이 비교적 덜 빈번하게 사 용되고 있는지 등을 아는 것이 바람직할 수 있다. 따라서, 분석은 일부 실시예들에서 프로세스 흐름의 전체 이 력 전반에 걸친 또는 일정 기간 동안의 프로세스 흐름 사용을 결정하는 것을 포함할 수 있다. 특정 실시예들에 서, 분석은 적합성 체크를 수행하는 것을 포함할 수 있다. 일부 실시예들에서, 분석의 결과는 ROI에 대한 추정된 이익에 기초하여 등급화된다. 특정 실시예들에서, 비제 한적인 예시로서, 평균 프로세스 완료 시간, 프로세싱으로부터의 ROI를 보여주기 위한 송장으로부터 생성된 총 수익, 직원 작업량이 미리 결정된 문턱값을 초과하는지 여부, 직원이 적어도 최소 문턱 시간량 동안 업무 일을 하고 있는지 여부, 비즈니스 특유적 KPI, 또는 이들의 임의의 조합을 포함하는 다양한 메트릭들이 ROI 개선들을 결정하고 우선순위를 지정하는데 사용될 수 있다. 특정 실시예들에서, 리스너는 로봇 및/또는 사용자 동작에 관한 데이터를 포함하는 하트비트를 컨덕터 애플리케이션에 주기적으로 보낸다. 750에서, 데이터가 분석되면, 프로세스, 프로세스 흐름, 또는 둘 다가 각자의 추정된 ROI에 기초하여 우선순위 가 지정된다. 760에서, 식별된 ROI 개선 프로세스 또는 ROI 개선을 위한 프로세스 흐름을 구현하는 워크플로우 가 생성된다. 770에서, 워크플로우를 구현하는 로봇이 생성되고, 780에서, 로봇이 사용자 컴퓨팅 시스템(들)에 배치된다. 일부 실시예들에서, 단계들(760, 770, 및/또는 780)은 자동으로 수행된다. 특정 실시예들에서, 단 계들(760, 770, 및/또는 780)은 RPA 개발자에 의해 수행된다. 도 7에서 수행되는 프로세스 단계들은 본 발명의 실시예들에 따라, 도 7에서 설명된 프로세스(들)의 적어도 일 부를 수행하도록 프로세서(들)에 대한 명령어들을 인코딩한 컴퓨터 프로그램에 의해 수행될 수 있다. 컴퓨터 프로그램은 비일시적 컴퓨터 판독가능 매체 상에 포함될 수 있다. 컴퓨터 판독가능 매체는, 비제한적인 예시로 서, 하드 디스크 드라이브, 플래시 디바이스, RAM, 테이프, 및/또는 데이터를 저장하는 데 사용되는 임의의 다 른 이러한 매체 또는 매체의 조합일 수 있다. 컴퓨터 프로그램은 도 7에서 설명된 프로세스 단계들의 전부 또 는 일부를 구현하기 위해 컴퓨팅 시스템의 프로세서(들)(예를 들어, 도 5의 컴퓨팅 시스템의 프로세서 (들))을 제어하기 위한 인코딩된 명령어들을 포함할 수 있으며, 이는 또한 컴퓨터 판독가능 매체 상에 저 장될 수 있다. 컴퓨터 프로그램은 하드웨어, 소프트웨어, 또는 하이브리드 구현으로 구현될 수 있다. 컴퓨터 프로그램은 서로 동작가능하게 통신하며, 디스플레이할 정보 또는 명령어들을 전달하도록 설계된 모듈들로 구성될 수 있다. 컴 퓨터 프로그램은 범용 컴퓨터, ASIC, 또는 임의의 다른 적절한 디바이스 상에서 동작하도록 구성될 수 있다. 본 도면들에서 일반적으로 설명되고 예시된 바와 같이, 본 발명의 다양한 실시예들의 컴포넌트들은 폭넓게 다양 한 상이한 구성들로 배열되고 설계될 수 있다는 것을 쉽게 이해할 것이다. 따라서, 첨부된 도면들에서 나타낸 바와 같이, 본 발명의 실시예들의 상세한 설명은 청구된 바와 같은 본 발명의 범위를 제한시키는 것이 아니라,단지 본 발명의 선택된 실시예들을 나타내는 것일 뿐이다. 본 명세서 전반에 걸쳐 설명된 본 발명의 특징, 구조, 또는 특성은 하나 이상의 실시예에서 임의의 적절한 방식 으로 결합될 수 있다. 본 명세서 전반에 걸쳐 \"특정 실시예들\", \"일부 실시예들\" 또는 이와 유사한 언어들에 대한 언급은 실시예와 관련하여 설명된 특정 특징, 구조 또는 특성이 본 발명의 적어도 하나의 실시예에 포함된 다는 것을 의미한다. 따라서, 본 명세서 전반에 걸친 \"특정 실시예들에서\", \"일부 실시예들에서\", \"다른 실시 예들에서\" 또는 이와 유사한 언어의 출현은 반드시 모두 동일한 그룹의 실시예들을 지칭하는 것은 아니며, 설명 된 특징, 구조, 또는 특성은 하나 이상의 실시예에서 임의의 적절한 방식으로 결합될 수 있다. 본 명세서 전반에 걸친 특징, 장점, 또는 이와 유사한 언어에 대한 언급은 본 발명으로 실현될 수 있는 모든 특 징들과 장점들이 본 발명의 임의의 단일 구현이어야 하거나 또는 이에 포함되어야 하는 것을 암시하지는 않는다. 오히려, 특징들과 장점들을 언급하는 언어는 실시예와 관련하여 설명된 특정 특징, 장점, 또는 특성이 본 발명의 적어도 하나의 실시예에 포함됨을 의미하는 것으로 이해된다. 따라서, 이 명세서 전반에 걸쳐 특징 들과 장점들, 그리고 이와 유사한 언어의 논의는 동일한 실시예를 지칭할 수 있지만 반드시 그런 것은 아니다. 더 나아가, 본 발명의 설명된 특징들, 장점들, 및 특성들은 하나 이상의 실시예에서 임의의 적절한 방식으로 결 합될 수 있다. 관련 기술 분야의 당업자는 본 발명이 특정 실시예의 특정 특징들 또는 장점들 중 하나 이상없 이 실시될 수 있음을 인식할 것이다. 다른 경우들에서, 본 발명의 모든 실시예들에서 존재하지 않을 수 있는 추가적인 특징들과 장점들이 특정 실시예들에서 인식될 수 있다. 관련 기술 분야의 당업자는 위에서 논의된 바와 같은 본 발명이 상이한 순서의 단계들, 및/또는 개시된 것과는 상이한 구성의 하드웨어 엘리먼트로 실시될 수 있다는 것을 쉽게 이해할 것이다. 따라서, 본 발명이 이러한 바 람직한 실시예들에 기초하여 설명되었지만, 본 발명의 사상과 범위 내에 남아 있으면서 특정 수정, 변형, 및 대 안적인 구성이 명백할 것이라는 것이 관련 기술 분야의 당업자에게 명백할 것이다. 따라서, 본 발명의 경계와 범위를 결정하기 위해서는, 첨부된 청구항들을 참조해야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2022-7010845", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 특정 실시예들의 장점들이 용이하게 이해될 수 있도록 하기 위해, 위에서 약술된 본 발명의 보다 구 체적인 설명을 첨부된 도면에 도시된 특정 실시예들을 참조하여 제공할 것이다. 이들 도면들은 단지 본 발명의 일반적인 실시예들을 도시할 뿐이며, 이에 따라 그 범위를 제한하는 것으로 간주되어서는 안된다는 것이 이해되 어야 하는 한편, 본 발명은 첨부 도면들의 사용을 통해 추가적인 특이성 및 세부사항으로 설명되고 기술될 것이다. 도 1은 본 발명의 실시예에 따른, RPA 시스템을 나타내는 아키텍처 다이어그램이다. 도 2는 본 발명의 실시예에 따른, 배치된 RPA 시스템을 나타내는 아키텍처 다이어그램이다. 도 3은 본 발명의 실시예에 따른, 디자이너, 액티비티들, 및 드라이버들 간의 관계를 나타내는 아키텍처 다이어 그램이다. 도 4는 본 발명의 실시예에 따른, RPA 시스템을 나타내는 아키텍처 다이어그램이다. 도 5는 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 잠재적으로 자동으로 생성하도록 구성된 컴퓨팅 시스템을 나타내는 아키텍처 다이어그램이다. 도 6은 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들의 자동 분석, 우선순위 지정, 및 잠재적으로 자동 생성을 수행하도록 구성된 시스템을 나타내는 아키텍처 다이어그램이다. 도 7은 본 발명의 실시예에 따른, RPA를 위한 프로세스들을 구현하는 로봇들을 분석하고, 우선순위를 지정하고, 자동으로 생성하기 위한 프로세스를 나타내는 흐름도이다."}
