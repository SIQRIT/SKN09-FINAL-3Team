{"patent_id": "10-2012-0114769", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2014-0050124", "출원번호": "10-2012-0114769", "발명의 명칭": "사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템", "출원인": "남서울대학교 산학협력단", "발명자": "송은지"}}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "현재 실행 중인 보드 게임 상황을 소정 단위의 사례 정보로 저장하는 단계와; 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 정보가상기 기 저장된 사례 정보와 중복이 없는 경우 상기 사례 정보를 새로운 사례 정보로 생성하는 단계와;상기 생성된 사례 정보에서 선택적으로 사례 추론 정보를 추출하는 단계와;상기 추출된 사례 추론 정보를 리스트화하는 단계; 및상기 리스트화된 사례 추론 정보에서 진행 중인 상황에 대한 키워드를 사용하여 최적의 수를 검색하는 단계를포함하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 저장되는 소정 단위의 사례 정보는 키 값을 생성하여 저장하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 사례 추론 정보를 추출하는 단계에서 알파 베타 가지치기를 통해 추출하는 것을 특징으로 하는 사례기반추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항에 있어서,상기 최적의 수를 검색하는 단계에서 진행 중인 게임 상황의 키워드를 사용하여 과거 사례 추론 정보에서 승률이 높은 경우를 선택하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1항에 있어서, 상기 저장되는 사례 정보는 턴, 보드 판의 상황, 게임 말을 놓는 위치 및 승률을 포함하는 것을 특징으로 하는사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항에 있어서,상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하여 상기 중복 사례 정보가 있는 경우에는 현 사례 정보의 승패 정보를 저장하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드게임 방법. 공개특허 10-2014-0050124-2-청구항 7 제 1항에 있어서,상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 미니맥스(MINIMAX) 알고리즘을 적용하여 검색하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1항에 있어서,상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 저장된 과거사례 정보를 두 개의 컴퓨터 AI(Artificial Intelligence)의 각 군집으로 생성하여 두 개의 컴퓨터AI(Artificial Intelligence) 가 서로 게임을 진행하게 하여 스스로 새로운 사례 정보를 생성하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8항에 있어서,상기 스스로 사례 정보를 생성하는 과정에서 새로운 사례 정보를 삽입하고 매 게임의 종료 시마다 승률을 재조정하여 저장하는 것을 특징으로 하는 사례기반 추론 알고리즘을 이용한 보드 게임 방법."}
{"patent_id": "10-2012-0114769", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "사례추론 알고리즘을 이용하는 인공지능 게임 클래스로부터 게임 진행 중의 상황을 게임 종료시까지 Ocut의 소정 단위로 각각 저장하는 벡터부와; 상기 벡터부에서 저장된 각 게임의 상황의 승패 여부를 카운트하여 저장하는 제 1 리스트부와; 상기 제 1 리스트부에 저장된 게임에서 승률이 높은 Ocut을 추출하여 트리를 구성하여 저장하는 제 2 리스트부;및 상기 벡터부에서 게임 진행 중에 받은 Ocut으로 키 값을 생성하고, 현재 진행 중의 게임 상황과 동일한 게임 상황이 있는지 검색한 후 결과를 호출하는 AI 클래스를 포함하는 것을 특징으로 하는 사례기반 추론 알고리즘을이용한 보드 게임 시스템. 명 세 서기 술 분 야본 발명은 사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템에 관한 것으로, 특히 사례기반 추론 [0001]을 이용하여 승패를 가르는 보드 게임에 있어서 기 저장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를추론하여 최적의 승률을 제공할 수 있는 사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템에 관한것이다. 배 경 기 술인공지능(AI: Artificial Intelligence)이란 마치 인간처럼 지각,추론,학습, 의사교환, 복잡한 환경에서 행동하 [0002]는 능력을 보유한 컴퓨터 시스템을 개발하는 분야라고 정의할 수 있다. 또한 그와 같은 지능을 만들 수 있는 방법론이나 실현 가능성 등을 연구하는 컴퓨터 공학 및 정보기술과학 분야를 지칭한다. 이러한 인공지능은 로봇,문자나 음성인식 등 그 응용분야가 매우 넓다. 공개특허 10-2014-0050124-3- AI는 로보틱스, 음성인식 등 여러 분야에 응용되고 있는데 특히 게임에 많이 적용하여 사용되고 있다. [0003]인간은 때때로 현 문제를 해결하기 위해서 과거의 경험을 바탕으로 해결방법을 추론한다. 과거의 경험에 근거한 [0004]추론방법은 저장되어 있는 사례들 중 가장 연관되어 있는 사례들을 조회한 후 이를 현재의 문제에 적합하게 변형시켜 결론을 도출하는 방법이라 할 수 있다.최근까지 대부분의 전문가 시스템에서는 규칙기반 추론(RBR: Rule-Based Reasoning)을 주로 사용하였다. RBR에 [0005]서는 문제영역의 규칙을 인간전문가로부터 모두 추출한 다음 그것을 정리하여 규칙베이스(Rule-base)를 구현하며, 이를 추론함으로써 해를 얻는다.그러나 RBR은 잘못 추론한 똑같은 문제를 다시 줄 경우 계속 잘못된 추론을 한다는 치명적인 단점과, 지식의 [0006]적용 영역을 벗어나는 문제에 대해서는 전혀 도움을 줄 수가 없는 문제점이 발생된다. 발명의 내용해결하려는 과제본 발명이 해결하고자 하는 기술적 과제는 사례기반 추론을 이용하여 승패를 가르는 보드 게임에 있어서 기 저 [0007]장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있는 사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템을 제공하는 것이다.본 발명에서 이루고자 하는 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급하지 않은 [0008]또 다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다.과제의 해결 수단상기 기술적 과제를 해결하기 위한 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법은, 현재 [0009]실행 중인 보드 게임 상황을 소정 단위의 사례 정보로 저장하는 단계와; 상기 저장된 각 사례 정보를 기 저장된사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 정보가 상기 기 저장된 사례 정보와 중복이 없는 경우 상기 사례 정보를 새로운 사례 정보로 생성하는 단계와; 상기 생성된 사례 정보에서 선택적으로 사례추론 정보를 추출하는 단계와; 상기 추출된 사례 추론 정보를 리스트화하는 단계; 및 상기 리스트화된 사례 추론 정보에서 진행 중인 상황에 대한 키워드를 사용하여 최적의 수를 검색하는 단계를 포함하는 점에 그 특징이있다. 여기서, 특히 상기 저장되는 소정 단위의 사례 정보는 키 값을 생성하여 저장하는 점에 그 특징이 있다. [0010]여기서, 특히 상기 사례 추론 정보를 추출하는 단계에서 알파 베타 가지치기를 통해 추출하는 점에 그 특징이 [0011]있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 진행 중인 게임 상황의 키워드를 사용하여 과거 사례 추론 [0012]정보에서 승률이 높은 경우를 선택하는 점에 그 특징이 있다. 여기서, 특히 상기 저장되는 사례 정보는 턴, 보드 판의 상황, 게임 말을 놓는 위치 및 승률을 포함하는 점에 [0013]그 특징이 있다. 여기서, 특히 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하여 상기 중복 사 [0014]례 정보가 있는 경우에는 현 사례 정보의 승패 정보를 저장하는 점에 그 특징이 있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 [0015]미니맥스(MINIMAX) 알고리즘을 적용하여 검색하는 점에 그 특징이 있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 [0016]저장된 과거 사례 정보를 두 개의 컴퓨터 AI(Artificial Intelligence)의 각 군집으로 생성하여 두 개의 컴퓨터AI(Artificial Intelligence) 가 서로 게임을 진행하게 하여 스스로 새로운 사례 정보를 생성하는 점에 그 특징이 있다. 여기서, 특히 상기 스스로 사례 정보를 생성하는 과정에서 새로운 사례 정보를 삽입하고 매 게임의 종료 시마다 [0017]공개특허 10-2014-0050124-4-승률을 재조정하여 저장하는 점에 그 특징이 있다. 또한, 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 시스템은, 사례추론 알고리즘을 이용하는 인 [0018]공지능 게임 클래스로부터 게임 진행 중의 상황을 게임 종료시까지 Ocut의 소정 단위로 각각 저장하는벡터부와, 상기 벡터부에서 저장된 각 게임의 상황의 승패 여부를 카운트하여 저장하는 제 1 리스트부와, 상기제 1 리스트부에 저장된 게임에서 승률이 높은 Ocut을 추출하여 트리를 구성하여 저장하는 제 2 리스트부 및 상기 벡터부에서 게임 진행 중에 받은 Ocut으로 키 값을 생성하고, 현재 진행 중의 게임 상황과 동일한 게임 상황이 있는지 검색한 후 결과를 호출하는 AI 클래스를 포함하는 점에 그 특징이 있다. 발명의 효과이상의 본 발명에 따르면, 사례기반 추론을 이용하여 승패를 가르는 보드 게임에 있어서 기 저장된 과거의 사례 [0019]정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있다. 도면의 간단한 설명도 1은 본 발명에 따른 CBR 알고리즘을 이용한 AI 구성도. [0020]도 2는 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법에 대한 순서도.도 3은 본 발명에 따른 사례 정보 수집 과정을 도시한 도면.도 4는 본 발명에 따른 알파베타 가지치기를 통해 추출하는 과정을 도시한 도면.발명을 실시하기 위한 구체적인 내용이하 첨부된 도면을 참조하여 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자가 본 발명을 용이하게 실 [0021]시할 수 있는 바람직한 실시 예를 상세히 설명한다. 다만, 본 발명의 바람직한 실시 예에 대한 동작 원리를 상세하게 설명함에 있어 관련된 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴수 있다고 판단되는 경우에는 그 상세한 설명을 생략한다. 또한, 도면 전체에 걸쳐 유사한 기능 및 작용을 하는 부분에 대해서는 동일한 도면 부호를 사용한다. [0022]덧붙여, 명세서 전체에서, 어떤 부분이 다른 부분과 '연결'되어 있다고 할 때, 이는 '직접적으로 연결'되어 있 [0023]는 경우뿐만 아니라, 그 중간에 다른 소자를 사이에 두고 '간접적으로 연결'되어 있는 경우도 포함한다. 또한어떤 구성 요소를 '포함'한다는 것은, 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라,다른 구성요소를 더 포함할 수 있는 것을 의미한다. 이하 본 발명의 일 실시 예를 첨부된 도면을 참조하여 상세히 설명한다. [0024]도 1은 본 발명에 따른 CBR 알고리즘을 이용한 AI 구성도이다. 도 1에 도시된 바와 같이, CBR 알고리즘을 이용 [0025]한 AI 구성은 게임 클래스(110)로부터 게임 진행 중의 상황을 게임 종료시까지 소정 단위로 각각 저장하는 벡터부(120)와, 상기 벡터부에서 저장된 각 게임의 상황의 승패 여부를 카운트하여 저장하는 제 1 리스트부(120)와,상기 제 1 리스트부(120)에 저장된 게임에서 최고의 승률을 가지고 있는 Ocut을 추출하여 트리를 구성하여 저장하는 제 2 리스트부(130)와, 현재 게임 진행사항으로 받은 Ocut으로 키 값을 생성하여 현재 게임 상황과 똑같은게임 상황이 있는지 검색한 후 결과를 호출하는 AI 클래스(140)를 포함한다. 상기 게임 클래스(110)는 게임 진행에 관련하여 정보 및 게임을 플레이 하기 위한 프로그램을 포함하게 된다. [0026]상기 벡터부(120)는 상기 게임 클래스(110)에서 제공되는 게임에 대해 각 게임 진행 상황을 소정 단위인 Ocut으 [0027]로 분리하여 저장하고, 현재 게임의 진행 수가 승인지 패인지 게임수를 카운트하게 된다.상기 제 1 리스트부(130)는 상기 벡터부(120)에 저장된 각 Ocut의 높은 승률을 가지고 있는 Ocut을 뽑아 트리 [0028](Tree)를 구성한다.상기 제 2 리스트부(130)는 상기 제 1 리스트부(120)에서 구성된 게임 트리에서 게임에 사용할 수 있는 수를 정 [0029]공개특허 10-2014-0050124-5-리하여 트리고 재구성한다. 상기 제 2 리스트부(140)에서 재구성한 트리에 현재 게임 진행 중의 Ocut로 키 값을 생성하여 현재 상황과 동일 [0030]한 게임 진행 상황이 있는지 검색한 후 그 결과를 가져온다. 만약, 저장된 Ocut의 사례 정보가 존재하지 않는경우에 랜덤으로 진행한다.상기 AI 클래스(150)는 상기 게임 클래스와 연동되어 Ocut의 형태로 현재 게임 진행 상황을 전달한 후 그 결과 [0031]를 리턴받아 게임에 적용하게 된다. 또한, 도 2는 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법에 대한 순서도이다. 도 2에 도 [0032]시된 바와 같이, 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법은, 먼저 현재 실행 중인 보드 게임 상황을 소정 단위의 사례 정보로 저장하는 단계가 수행된다(S201).도 3은 본 발명에 따른 사례 정보 수집 과정을 도시한 도면이다. [0033]보다 구체적으로, 도 3에 도시된 바와 같이, 사례 정보를 저장하는 과정은 '컴퓨터 대 사용자' 또는 사용자 대 [0034]사용자'의 게임이 진행될 때 그 게임 과정을 연속된 필름처럼 한 턴 씩 저장을 해준다. 즉, 게임의 과정 화면마다 한 단위(Ocut)로 저장하게 된다. 이렇게 저장된 정보는 게임이 종료될 때 일괄적으로 다음 게임에 사용하기위하여 해당 내용을 과거 사례 정보 데이터 베이스에 저장한다. 이때, 상기 저장되는 사례 정보는 턴, 보드 판의 상황, 게임 말을 놓는 위치 및 승률을 포함한다. [0035]이어서, 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 [0036]정보가 상기 기 저장된 사례 정보와 중복이 없는 경우 상기 사례 정보를 새로운 사례 정보로 생성하는 단계가수행된다(S202). 즉, 새로운 사례 정보를 저장할 때 사례 정보 이용 키 값을 생성하여 추후 검색할 시 용이하게만든다. 한편, 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하여 상기 중복 사례 정보 [0037]가 있는 경우에는 현 사례 정보의 승패 정보만을 저장한다(S203). 그리고, 상기 생성된 사례 정보에서 선택적으로 사례 추론 정보를 추출하는 단계가 수행된다(S204). [0038]도 4는 본 발명에 따른 알파베타 가지치기를 통해 추출하는 과정을 도시한 도면이다. 도 4에 도시된 바와 같이, [0039]상기 사례 추론 정보를 추출하는 단계는 사례 정보의 단순화 작업을 거쳐 수집한 사례에서 추론에 필요한 정보만 추려내어 저장한다. 여기서, 상기 사례 추론 정보의 추출은 알파 베타 가지치기를 통해 추출하게 된다. 이는사례 정보에서 현재 상황에 최적의 수를 찾아낼 때 가중치가 낮은 사례(승률이 낮은)를 미리 정보 리스트에서배제하여 검색시간을 단축시키게 된다. 이때, 사례 추론에 필요한 정보는 승수, 패수가 된다. 따라서, 모든 데이터를 저장하게 될 경우에는 많은 노드가 필요하게 되지만 필요한 정보만을 수집하게 될 경우 [0040]에는 노드를 절약할 수 있다. 여기서, AI의 한 분야인 사례 기반 추론 기법(CBR: Case-Based Reasoning)이란 주어진 새로운 문제에 대해 과거 [0041]유사한 문제의 해답을 채택하거나 과거의 사례를 이용하여 새로운 상황을 설명 및 이해하고 새 해답을 평가하기위해 선례로부터 추정하는 것을 의미한다. 이러한, 사례기반추론은 저장된 사례들 중 가장 연관된 사례들을 조회하여 이를 변형(Adapt)시켜서 결론을 도출 [0042]하는 방법이다. 이러한 사례기반추론은 일반화한 룰에 의해 해결하기 어려운 복잡한 문제를 과거의 경험을 토대로 적용함으로써 보다 현실적으로 문제를 해결할 수 있으며 변화에 유연하게 대처할 수 있는 장점을 갖고있다. 다시 말해, 사례기반추론을 위해서는 과거사례의 표현, 유사한 사례의 검색 및 재활용, 새로운 문제에 대해 논 [0043]리적으로 타당한 해법을 추론하는 기술이 필요하다. 특히 실제 과거사례가 많을 경우 이를 근거로 하여 추론을하는데 많은 자원이 소요되므로 효율적으로 해결하기 위한 연구가 다양한 방면에서 수행되고 있다. 사례기반추론(CBR: Case-based Reasoning)알고리즘은 재료를 구울 때 어떤 배치가 효과적인지, 발생한 오류에 대해 과거에있었던 문제점과 비교하여 같거나 유사한 오류의 해결방법을 사용자에게 제시해줄 때, 각 종류마다 다른 문제점이나 해결방침들을 과거 비슷한 자료들을 제공해줌으로써 효율적으로 문제를 해결할 수 있다. 따라서, 승패수를 결정하는 게임에 사례기반추론을 적용하기 위해 과거의 정보를 저장하고 이를 추출하여 최적 [0044]공개특허 10-2014-0050124-6-의 수를 제공할 수 있게 된다. 이어서, 상기 추출된 사례 추론 정보를 리스트화하는 단계가 수행된다(). 사례 추출과정을 통해 컴퓨터와의 게 [0045]임이 시작될 시 과거에 저장했던 사례들 중 가장 승률이 높았던 사례와 승률이 저조한(예를 들어 10%미만)의 사례를 리스트 화 시켜 게임에 반영한다. 이렇게 미리 과거 사례 정보를 추출하는 이유는 게임 도중에 가장 최적의 수를 추론하는데 소모되는 시간을 줄이기 위해서다. 승률이 저조한 사례도 같이 저장하는 이유는 해당 수를피하기 위해서이다. 그 다음으로, 상기 리스트화 된 사례 추론 정보에서 진행 중인 상황에 대한 키워드를 사용하여 최적의 수를 검 [0046]색하는 단계가 수행된다(). 보다 구체적으로, CBR 알고리즘을 이용할 때 가장 좋은 케이스(case) 즉, 가장 효율적인 사례를 찾는 알고리즘 [0047]으로 코호넨 네트워크의 경쟁학습 개념을 사용한다. 코호넨 네트워크의 경쟁학습이란 각각의 경쟁대상이 있는경쟁층과 입력층의 연결강도벡터와 입력 벡터 값을 비교한 후 가장 가까운 뉴런이 승리하도록 하여 채택하는 방식이다. 코호넨 네트워크의 학습 철학의 가장 큰 특징은 승자독점(winner take all)이다. 따라서, 코호넨 네트워크와 마찬가지로 진행 중인 게임 상황의 키워드를 사용하여 과거 사례 추론 정보의 수많 [0048]은 케이스 중 가장 좋은 케이스를 선택할 때 각각의 케이스 승률을 카운트하여 승률이 가장 높은 경우를 선택한다.한편, 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 미니맥 [0049]스(MINIMAX) 알고리즘을 적용하여 검색한다.여기서, 미니맥스(MINIMAX) 알고리즘은 게임이론상의 하나의 전략선택원리로서, 게임에 임하는 당사자가 선택 [0050]가능한 모든 전략(strategy) 중에서 가상적으로 각각 전략을 선택했을 때 최악의 결과를 기대하고, 그 최악의결과들 중에서 그래도 최선의 결과를 가져오는 전략을 선택하는 원리를 말한다.그리고, 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 저장 [0051]된 과거 사례 정보를 두 개의 컴퓨터 AI(Artificial Intelligence)의 각 군집으로 생성하여 두 개의 컴퓨터AI(Artificial Intelligence) 가 서로 게임을 진행하게 하여 스스로 새로운 사례 정보를 생성하게 된다. 그 다음, 상기 스스로 사례 정보를 생성하는 과정에서 새로운 사례 정보를 삽입하고 매 게임의 종료 시마다 승 [0052]률을 재조정하여 저장하게 된다.따라서, 본 발명은 바둑,체스,장기, 오델로와 같은 보드게임에 CBR 알고리즘을 적용함으로써, 승패가 갈라지는 [0053]게임에서 과거에 패했던 상황을 저장해 놓는다면 그 상황이 다시 한 번 재현될 때 똑같은 우를 범하지 않을 수있게 되어보다 높은 승률을 유지할 수 있게 해줄 것이며, 그와 더불어 개발자가 일일이 AI를 업데이트 할 필요없이 자기 스스로 업데이트 해나갈 수 있다는 것이다. 이상에서 설명한 바와 같이, 본 발명의 상세한 설명에서는 본 발명의 바람직한 실시 예에 관하여 설명하였으나, [0054]본 발명이 속하는 기술분야에서 통상의 지식을 가진 자라면 본 발명의 범주에서 벗어나지 않는 한도 내에서 여러 가지 변형이 가능함은 물론이다. 따라서 본 발명의 권리 범위는 설명된 실시 예에 국한되어 정해져서는 안되며, 후술하는 청구범위뿐만 아니라, 이와 균등한 것들에 의해 정해져야 한다.부호의 설명<도면의 주요부분에 대한 부호의 설명> [0055]110 --- 게임 클래스 120 --- 벡터부130 --- 제 1 리스트부 140 --- 제 2 리스트부150 --- AI 클래스공개특허 10-2014-0050124-7-도면도면1공개특허 10-2014-0050124-8-도면2공개특허 10-2014-0050124-9-도면3도면4공개특허 10-2014-0050124-10-"}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법은, 현재 실행 중인 보드 게임 상황을 소정 단 위의 사례 정보로 저장하는 단계와; 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 정보가 상기 기 저장된 사례 정보와 중복이 없는 경우 상기 사례 정보를 새로운 사 례 정보로 생성하는 단계와; 상기 생성된 사례 정보에서 선택적으로 사례 추론 정보를 추출하는 단계와; 상기 추 출된 사례 추론 정보를 리스트화하는 단계; 및 상기 리스트화된 사례 추론 정보에서 진행 중인 상황에 대한 키워 드를 사용하여 최적의 수를 검색하는 단계를 포함하는 점에 그 특징이 있다. 이상의 본 발명에 따르면, 사례기반 추론을 이용하여 승패를 가르는 보드 게임에 있어서 기 저장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템에 관한 것으로, 특히 사례기반 추론 을 이용하여 승패를 가르는 보드 게임에 있어서 기 저장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있는 사례기반 추론 알고리즘을 이용한 보드 게임 방법 및 그 시스템에 관한 것이다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(AI: Artificial Intelligence)이란 마치 인간처럼 지각,추론,학습, 의사교환, 복잡한 환경에서 행동하 는 능력을 보유한 컴퓨터 시스템을 개발하는 분야라고 정의할 수 있다. 또한 그와 같은 지능을 만들 수 있는 방 법론이나 실현 가능성 등을 연구하는 컴퓨터 공학 및 정보기술과학 분야를 지칭한다. 이러한 인공지능은 로봇, 문자나 음성인식 등 그 응용분야가 매우 넓다. AI는 로보틱스, 음성인식 등 여러 분야에 응용되고 있는데 특히 게임에 많이 적용하여 사용되고 있다. 인간은 때때로 현 문제를 해결하기 위해서 과거의 경험을 바탕으로 해결방법을 추론한다. 과거의 경험에 근거한 추론방법은 저장되어 있는 사례들 중 가장 연관되어 있는 사례들을 조회한 후 이를 현재의 문제에 적합하게 변 형시켜 결론을 도출하는 방법이라 할 수 있다. 최근까지 대부분의 전문가 시스템에서는 규칙기반 추론(RBR: Rule-Based Reasoning)을 주로 사용하였다. RBR에 서는 문제영역의 규칙을 인간전문가로부터 모두 추출한 다음 그것을 정리하여 규칙베이스(Rule-base)를 구현하 며, 이를 추론함으로써 해를 얻는다. 그러나 RBR은 잘못 추론한 똑같은 문제를 다시 줄 경우 계속 잘못된 추론을 한다는 치명적인 단점과, 지식의 적용 영역을 벗어나는 문제에 대해서는 전혀 도움을 줄 수가 없는 문제점이 발생된다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 기술적 과제는 사례기반 추론을 이용하여 승패를 가르는 보드 게임에 있어서 기 저 장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있는 사례기반 추 론 알고리즘을 이용한 보드 게임 방법 및 그 시스템을 제공하는 것이다. 본 발명에서 이루고자 하는 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급하지 않은"}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "또 다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하 게 이해될 수 있을 것이다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 기술적 과제를 해결하기 위한 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법은, 현재 실행 중인 보드 게임 상황을 소정 단위의 사례 정보로 저장하는 단계와; 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 정보가 상기 기 저장된 사례 정보와 중복이 없 는 경우 상기 사례 정보를 새로운 사례 정보로 생성하는 단계와; 상기 생성된 사례 정보에서 선택적으로 사례 추론 정보를 추출하는 단계와; 상기 추출된 사례 추론 정보를 리스트화하는 단계; 및 상기 리스트화된 사례 추 론 정보에서 진행 중인 상황에 대한 키워드를 사용하여 최적의 수를 검색하는 단계를 포함하는 점에 그 특징이 있다. 여기서, 특히 상기 저장되는 소정 단위의 사례 정보는 키 값을 생성하여 저장하는 점에 그 특징이 있다. 여기서, 특히 상기 사례 추론 정보를 추출하는 단계에서 알파 베타 가지치기를 통해 추출하는 점에 그 특징이 있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 진행 중인 게임 상황의 키워드를 사용하여 과거 사례 추론 정보에서 승률이 높은 경우를 선택하는 점에 그 특징이 있다. 여기서, 특히 상기 저장되는 사례 정보는 턴, 보드 판의 상황, 게임 말을 놓는 위치 및 승률을 포함하는 점에 그 특징이 있다. 여기서, 특히 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하여 상기 중복 사 례 정보가 있는 경우에는 현 사례 정보의 승패 정보를 저장하는 점에 그 특징이 있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 미니맥스(MINIMAX) 알고리즘을 적용하여 검색하는 점에 그 특징이 있다. 여기서, 특히 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 저장된 과거 사례 정보를 두 개의 컴퓨터 AI(Artificial Intelligence)의 각 군집으로 생성하여 두 개의 컴퓨터 AI(Artificial Intelligence) 가 서로 게임을 진행하게 하여 스스로 새로운 사례 정보를 생성하는 점에 그 특징 이 있다. 여기서, 특히 상기 스스로 사례 정보를 생성하는 과정에서 새로운 사례 정보를 삽입하고 매 게임의 종료 시마다 승률을 재조정하여 저장하는 점에 그 특징이 있다. 또한, 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 시스템은, 사례추론 알고리즘을 이용하는 인 공지능 게임 클래스로부터 게임 진행 중의 상황을 게임 종료시까지 Ocut의 소정 단위로 각각 저장하는 벡터부와, 상기 벡터부에서 저장된 각 게임의 상황의 승패 여부를 카운트하여 저장하는 제 1 리스트부와, 상기 제 1 리스트부에 저장된 게임에서 승률이 높은 Ocut을 추출하여 트리를 구성하여 저장하는 제 2 리스트부 및 상 기 벡터부에서 게임 진행 중에 받은 Ocut으로 키 값을 생성하고, 현재 진행 중의 게임 상황과 동일한 게임 상황 이 있는지 검색한 후 결과를 호출하는 AI 클래스를 포함하는 점에 그 특징이 있다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상의 본 발명에 따르면, 사례기반 추론을 이용하여 승패를 가르는 보드 게임에 있어서 기 저장된 과거의 사례 정보 중에서 가장 연관성이 높은 사례를 추론하여 최적의 승률을 제공할 수 있다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 첨부된 도면을 참조하여 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자가 본 발명을 용이하게 실 시할 수 있는 바람직한 실시 예를 상세히 설명한다. 다만, 본 발명의 바람직한 실시 예에 대한 동작 원리를 상 세하게 설명함에 있어 관련된 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략한다. 또한, 도면 전체에 걸쳐 유사한 기능 및 작용을 하는 부분에 대해서는 동일한 도면 부호를 사용한다. 덧붙여, 명세서 전체에서, 어떤 부분이 다른 부분과 '연결'되어 있다고 할 때, 이는 '직접적으로 연결'되어 있 는 경우뿐만 아니라, 그 중간에 다른 소자를 사이에 두고 '간접적으로 연결'되어 있는 경우도 포함한다. 또한 어떤 구성 요소를 '포함'한다는 것은, 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라, 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 이하 본 발명의 일 실시 예를 첨부된 도면을 참조하여 상세히 설명한다. 도 1은 본 발명에 따른 CBR 알고리즘을 이용한 AI 구성도이다. 도 1에 도시된 바와 같이, CBR 알고리즘을 이용 한 AI 구성은 게임 클래스로부터 게임 진행 중의 상황을 게임 종료시까지 소정 단위로 각각 저장하는 벡터 부와, 상기 벡터부에서 저장된 각 게임의 상황의 승패 여부를 카운트하여 저장하는 제 1 리스트부와, 상기 제 1 리스트부에 저장된 게임에서 최고의 승률을 가지고 있는 Ocut을 추출하여 트리를 구성하여 저장 하는 제 2 리스트부와, 현재 게임 진행사항으로 받은 Ocut으로 키 값을 생성하여 현재 게임 상황과 똑같은 게임 상황이 있는지 검색한 후 결과를 호출하는 AI 클래스를 포함한다. 상기 게임 클래스는 게임 진행에 관련하여 정보 및 게임을 플레이 하기 위한 프로그램을 포함하게 된다. 상기 벡터부는 상기 게임 클래스에서 제공되는 게임에 대해 각 게임 진행 상황을 소정 단위인 Ocut으 로 분리하여 저장하고, 현재 게임의 진행 수가 승인지 패인지 게임수를 카운트하게 된다. 상기 제 1 리스트부는 상기 벡터부에 저장된 각 Ocut의 높은 승률을 가지고 있는 Ocut을 뽑아 트리 (Tree)를 구성한다. 상기 제 2 리스트부는 상기 제 1 리스트부에서 구성된 게임 트리에서 게임에 사용할 수 있는 수를 정 리하여 트리고 재구성한다. 상기 제 2 리스트부에서 재구성한 트리에 현재 게임 진행 중의 Ocut로 키 값을 생성하여 현재 상황과 동일 한 게임 진행 상황이 있는지 검색한 후 그 결과를 가져온다. 만약, 저장된 Ocut의 사례 정보가 존재하지 않는 경우에 랜덤으로 진행한다. 상기 AI 클래스는 상기 게임 클래스와 연동되어 Ocut의 형태로 현재 게임 진행 상황을 전달한 후 그 결과 를 리턴받아 게임에 적용하게 된다. 또한, 도 2는 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법에 대한 순서도이다. 도 2에 도 시된 바와 같이, 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법은, 먼저 현재 실행 중인 보 드 게임 상황을 소정 단위의 사례 정보로 저장하는 단계가 수행된다(S201). 도 3은 본 발명에 따른 사례 정보 수집 과정을 도시한 도면이다. 보다 구체적으로, 도 3에 도시된 바와 같이, 사례 정보를 저장하는 과정은 '컴퓨터 대 사용자' 또는 사용자 대 사용자'의 게임이 진행될 때 그 게임 과정을 연속된 필름처럼 한 턴 씩 저장을 해준다. 즉, 게임의 과정 화면마 다 한 단위(Ocut)로 저장하게 된다. 이렇게 저장된 정보는 게임이 종료될 때 일괄적으로 다음 게임에 사용하기 위하여 해당 내용을 과거 사례 정보 데이터 베이스에 저장한다. 이때, 상기 저장되는 사례 정보는 턴, 보드 판의 상황, 게임 말을 놓는 위치 및 승률을 포함한다. 이어서, 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하고, 상기 저장된 사례 정보가 상기 기 저장된 사례 정보와 중복이 없는 경우 상기 사례 정보를 새로운 사례 정보로 생성하는 단계가 수행된다(S202). 즉, 새로운 사례 정보를 저장할 때 사례 정보 이용 키 값을 생성하여 추후 검색할 시 용이하게 만든다. 한편, 상기 저장된 각 사례 정보를 기 저장된 사례 정보와 비교하여 중복 여부를 판단하여 상기 중복 사례 정보 가 있는 경우에는 현 사례 정보의 승패 정보만을 저장한다(S203). 그리고, 상기 생성된 사례 정보에서 선택적으로 사례 추론 정보를 추출하는 단계가 수행된다(S204). 도 4는 본 발명에 따른 알파베타 가지치기를 통해 추출하는 과정을 도시한 도면이다. 도 4에 도시된 바와 같이, 상기 사례 추론 정보를 추출하는 단계는 사례 정보의 단순화 작업을 거쳐 수집한 사례에서 추론에 필요한 정보 만 추려내어 저장한다. 여기서, 상기 사례 추론 정보의 추출은 알파 베타 가지치기를 통해 추출하게 된다. 이는 사례 정보에서 현재 상황에 최적의 수를 찾아낼 때 가중치가 낮은 사례(승률이 낮은)를 미리 정보 리스트에서 배제하여 검색시간을 단축시키게 된다. 이때, 사례 추론에 필요한 정보는 승수, 패수가 된다. 따라서, 모든 데이터를 저장하게 될 경우에는 많은 노드가 필요하게 되지만 필요한 정보만을 수집하게 될 경우 에는 노드를 절약할 수 있다. 여기서, AI의 한 분야인 사례 기반 추론 기법(CBR: Case-Based Reasoning)이란 주어진 새로운 문제에 대해 과거 유사한 문제의 해답을 채택하거나 과거의 사례를 이용하여 새로운 상황을 설명 및 이해하고 새 해답을 평가하기 위해 선례로부터 추정하는 것을 의미한다. 이러한, 사례기반추론은 저장된 사례들 중 가장 연관된 사례들을 조회하여 이를 변형(Adapt)시켜서 결론을 도출 하는 방법이다. 이러한 사례기반추론은 일반화한 룰에 의해 해결하기 어려운 복잡한 문제를 과거의 경험을 토대 로 적용함으로써 보다 현실적으로 문제를 해결할 수 있으며 변화에 유연하게 대처할 수 있는 장점을 갖고있다."}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "다시 말해, 사례기반추론을 위해서는 과거사례의 표현, 유사한 사례의 검색 및 재활용, 새로운 문제에 대해 논 리적으로 타당한 해법을 추론하는 기술이 필요하다. 특히 실제 과거사례가 많을 경우 이를 근거로 하여 추론을 하는데 많은 자원이 소요되므로 효율적으로 해결하기 위한 연구가 다양한 방면에서 수행되고 있다. 사례기반추 론(CBR: Case-based Reasoning)알고리즘은 재료를 구울 때 어떤 배치가 효과적인지, 발생한 오류에 대해 과거에 있었던 문제점과 비교하여 같거나 유사한 오류의 해결방법을 사용자에게 제시해줄 때, 각 종류마다 다른 문제점 이나 해결방침들을 과거 비슷한 자료들을 제공해줌으로써 효율적으로 문제를 해결할 수 있다. 따라서, 승패수를 결정하는 게임에 사례기반추론을 적용하기 위해 과거의 정보를 저장하고 이를 추출하여 최적 의 수를 제공할 수 있게 된다. 이어서, 상기 추출된 사례 추론 정보를 리스트화하는 단계가 수행된다(). 사례 추출과정을 통해 컴퓨터와의 게 임이 시작될 시 과거에 저장했던 사례들 중 가장 승률이 높았던 사례와 승률이 저조한(예를 들어 10%미만)의 사 례를 리스트 화 시켜 게임에 반영한다. 이렇게 미리 과거 사례 정보를 추출하는 이유는 게임 도중에 가장 최적 의 수를 추론하는데 소모되는 시간을 줄이기 위해서다. 승률이 저조한 사례도 같이 저장하는 이유는 해당 수를 피하기 위해서이다. 그 다음으로, 상기 리스트화 된 사례 추론 정보에서 진행 중인 상황에 대한 키워드를 사용하여 최적의 수를 검 색하는 단계가 수행된다(). 보다 구체적으로, CBR 알고리즘을 이용할 때 가장 좋은 케이스(case) 즉, 가장 효율적인 사례를 찾는 알고리즘 으로 코호넨 네트워크의 경쟁학습 개념을 사용한다. 코호넨 네트워크의 경쟁학습이란 각각의 경쟁대상이 있는 경쟁층과 입력층의 연결강도벡터와 입력 벡터 값을 비교한 후 가장 가까운 뉴런이 승리하도록 하여 채택하는 방 식이다. 코호넨 네트워크의 학습 철학의 가장 큰 특징은 승자독점(winner take all)이다. 따라서, 코호넨 네트워크와 마찬가지로 진행 중인 게임 상황의 키워드를 사용하여 과거 사례 추론 정보의 수많 은 케이스 중 가장 좋은 케이스를 선택할 때 각각의 케이스 승률을 카운트하여 승률이 가장 높은 경우를 선택한 다. 한편, 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 미니맥 스(MINIMAX) 알고리즘을 적용하여 검색한다. 여기서, 미니맥스(MINIMAX) 알고리즘은 게임이론상의 하나의 전략선택원리로서, 게임에 임하는 당사자가 선택 가능한 모든 전략(strategy) 중에서 가상적으로 각각 전략을 선택했을 때 최악의 결과를 기대하고, 그 최악의 결과들 중에서 그래도 최선의 결과를 가져오는 전략을 선택하는 원리를 말한다. 그리고, 상기 최적의 수를 검색하는 단계에서 현재 진행 중이 게임에 해당하는 과거 사례가 없는 경우에는 저장 된 과거 사례 정보를 두 개의 컴퓨터 AI(Artificial Intelligence)의 각 군집으로 생성하여 두 개의 컴퓨터 AI(Artificial Intelligence) 가 서로 게임을 진행하게 하여 스스로 새로운 사례 정보를 생성하게 된다. 그 다음, 상기 스스로 사례 정보를 생성하는 과정에서 새로운 사례 정보를 삽입하고 매 게임의 종료 시마다 승 률을 재조정하여 저장하게 된다. 따라서, 본 발명은 바둑,체스,장기, 오델로와 같은 보드게임에 CBR 알고리즘을 적용함으로써, 승패가 갈라지는 게임에서 과거에 패했던 상황을 저장해 놓는다면 그 상황이 다시 한 번 재현될 때 똑같은 우를 범하지 않을 수 있게 되어보다 높은 승률을 유지할 수 있게 해줄 것이며, 그와 더불어 개발자가 일일이 AI를 업데이트 할 필요 없이 자기 스스로 업데이트 해나갈 수 있다는 것이다. 이상에서 설명한 바와 같이, 본 발명의 상세한 설명에서는 본 발명의 바람직한 실시 예에 관하여 설명하였으나,"}
{"patent_id": "10-2012-0114769", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "본 발명이 속하는 기술분야에서 통상의 지식을 가진 자라면 본 발명의 범주에서 벗어나지 않는 한도 내에서 여 러 가지 변형이 가능함은 물론이다. 따라서 본 발명의 권리 범위는 설명된 실시 예에 국한되어 정해져서는 안되 며, 후술하는 청구범위뿐만 아니라, 이와 균등한 것들에 의해 정해져야 한다."}
{"patent_id": "10-2012-0114769", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 CBR 알고리즘을 이용한 AI 구성도. 도 2는 본 발명에 따른 사례기반 추론 알고리즘을 이용한 보드 게임 방법에 대한 순서도. 도 3은 본 발명에 따른 사례 정보 수집 과정을 도시한 도면. 도 4는 본 발명에 따른 알파베타 가지치기를 통해 추출하는 과정을 도시한 도면."}
