{"patent_id": "10-2022-0002550", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0106877", "출원번호": "10-2022-0002550", "발명의 명칭": "컴퓨팅 시스템", "출원인": "한국전자통신연구원", "발명자": "정병권"}}
{"patent_id": "10-2022-0002550", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "시스템의 동작을 제어하는 중앙처리장치;상기 중앙처리 장치와 연결되는 CXL 저장장치;상기 중앙처리장치와 CXL 저장장치를 연결하는 Flexible 버스; 및상기 Flex 버스와 CXL 저장장치 사이에 구비되는 TOE를 포함하는 컴퓨팅 장치."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따른 컴퓨팅 장치는 시스템의 동작을 제어하는 중앙처리장치와, 상기 중앙처리 장치와 연결되는 CXL 저장장치와, 상기 중앙처리장치와 CXL 저장장치를 연결하는 Flexible 버스와, 상기 Flex 버스와 CXL 저장장치 사 이에 구비되는 TOE를 포함할 수 있다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨팅 시스템에 관한 것으로, 보다 상세하게는 시스템의 고성능 서버에 적용할 수 있는 컴퓨팅 시스 템에 관한 것이다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 인공지능(AI), 이미지 분류, 음성 인식, 의료 진단 및 자율 주행 등 빅 데이터의 처리를 위해 고성능의 컴 퓨팅 시스템이 요구되고 있다. 이에 따라 이미지, 비디오, 오디오 등 기존에 접근과 활용이 용이했던 멀티미디 어 빅 데이터의 대한 취급뿐만 아니라 검색 엔진, 금융, 통신 분야에서의 빅 데이터에 대한 수집, 저장, 처리 및 분석도 점차 요구되고 있다. 이를 위해 컴퓨팅 시스템도 더 빠른 데이터 처리와 더 크고 효율적인 메모리 접근 방식을 요구하고 있다. 종래 컴퓨팅 시스템은 PCle 프로토콜을 통해 데이터 처리를 수행하였으나, 낮은 대역 폭과, 높은 지연, I/O와 CPU 간의 메모리 공유와 일관성 문제가 있다. 또한, 종래 컴퓨팅 시스템은 빅 데이터 프로그램, 머신 러닝 응용 프로그램 같은 응용 프로그램이 일상회됨에 따라 기존 메모리만으로는 메모리 부족 현상으로 인하여 프로그램의 빠른 실행이 어려운 문제가 있다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 메모리 자원을 대규모로 소모하는 응용 프로그램의 실행 시 메모리 부족 현상 및 처리 지연 현상을 해소할 수 있는 고성능의 컴퓨팅 시스템을 제공하는 것을 그 목적으로 한다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기한 목적을 달성하기 위한 본 발명에 따른 컴퓨팅 장치는 시스템의 동작을 제어하는 중앙처리장치와, 상기 중앙처리 장치와 연결되는 CXL 저장장치와, 상기 중앙처리장치와 CXL 저장장치를 연결하는 Flexible 버스와, 상 기 Flex 버스와 CXL 저장장치 사이에 구비되는 TOE를 포함할 수 있다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 컴퓨팅 시스템을 CXL 인터페이스 규격으로 표준 및 단일화시켜 전체 시스템의 연산 속도 증가 및 시 간을 단축할 수 있는 효과가 있다. 또한, 본 발명은 Flex Bus와 CXL 저장장치 사이에 TOE를 추가하여 데이터 처리 효율을 더욱 높일 수 있는 효과 가 있다. 또한, 본 발명은 CPU를 거치지 않고도 고정밀의 연산이 가능한 효과가 있다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 비록 \"제1\" 또는 \"제2\" 등이 다양한 구성요소를 서술하기 위해서 사용되나, 이러한 구성요소는 상기와 같은 용 어에 의해 제한되지 않는다. 상기와 같은 용어는 단지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사 용될 수 있다. 따라서, 이하에서 언급되는 제1 구성요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있다. 본 명세서에서 사용된 용어는 실시예를 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세 서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 또는 \"포함하는(comprising)\"은 언급된 구성요소 또는 단계가 하나 이상의 다른 구성요소 또는 단 계의 존재 또는 추가를 배제하지 않는다는 의미를 내포한다."}
{"patent_id": "10-2022-0002550", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어는 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 해석될 수 있다. 또한, 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예들을 상세히 설명하기로 하며, 도면을 참조하여 설명할 때 동일 하거나 대응하는 구성 요소는 동일한 도면 부호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 도 1은 본 발명의 실시예에 따른 컴퓨팅 시스템의 전체 구조를 나타낸 블록도이다. 도 1을 참조하면, 실시예에 따른 컴퓨팅 시스템은 중앙처리장치(Central Processing Unit, CPU, 100)와, 메인 메모리와, CPU와 연결되는 내부 구성 요소들인 표준 PCle 슬롯, CXL 저장장치와, 표준 PCle 슬롯과 CXL 저장장치를 선택적으로 연결 시켜주는 Flex 버스(Flexible bus, 300)와, Flex 버스 와 CXL 저장장치 사이에 구비된 TOE를 포함할 수 있다. CPU는 컴퓨팅 시스템을 전반적으로 제어하는 프로세서일 수 있다. 메인 메모리는 휘발성으로, CPU에 의해 처리되는 프로세서를 위한 페이지 테이블 또는 데이터를 임시 저장하는 기능을 수행할 수 있다. 즉, 메인 메모리는 CPU가 부트 로더를 사용하여 부트(boot) 프로세 서를 시작하는 순간 초기화 되고, CPU가 프로그램을 실행하기 위해 하드디스크의 프로그램을 적재하여 프 로세서 상태로 만들며, 프로세서를 위한 페이지 테이블을 적재하는 용도로 사용될 수 있다. Flex 버스는 고대역폭, 오프 패키지 링크를 통해 PCle 프로토콜 또는 CXL 저장장치 중에서 선택할 수 있는 유연한 고속 포트일 수 있다. 즉, Flexible 버스는 스위칭 역할을 수행할 수 있다. 종래에는 PCI 버스를 이용하였으나, 실시예에서는 Flex 버스를 이용하여 CXL 환경을 설계할 수 있게 된다. Flex 버스의 양단에는 물리적 인터페이스가 구성될 수 있다. 도 2는 CPU에 구비된 물리 인터페이스의 구조를 나타낸 블록도이다. 도 2에 도시된 바와 같이, 물리적 인터페이스는 프로토콜 구조에 따라 CPU와 연결하는 역할을 한다. 물리적 인터페이스는 PCle, CXL, PCle PHY를 포함할 수 있다. 물론, 물리적 인터페이스 의 종류는 이에 한정되지 않는다. 도 1로 돌아가서, CXL 저장장치는 HBM, Memory pool, FPGA, I/O 등을 포함할 수 있다. CXL 저장장치(60 0)는 단일 링크로 다중화된 복수의 프로토콜을 포함할 수 있다. 복수의 프로토콜은 CXL.io, CXL.cache, CXL.memory를 포함할 수 있다. CXL.io 프로토콜은 PCle 트래잭션 계층으로, 시스템에서 장치 검색, 인터럽트 관리, 레지스터에 대한 액세스 제 공, 초기화 처리, 신호 오류 처리에 사용될 수 있다. CXL.cache 프로토콜은 가속기가 CPU의 메인 메모리에 액세 스할 때 사용될 수 있다. CXL.memory 프로토콜은 CPU가 가속기의 메모리에 액세스할 때 사용될 수 있다. 도 3은 PCle 슬롯에 연결된 카드의 연결 구조를 나타낸 블록도이다. 도 3에 도시된 바와 같이, PCle 프로토콜에는 적어도 하나 이상의 card가 장착될 수 있으며, card의 종류 로는 CXL card 및 PCle card를 포함할 수 있다. 실시예에 따른 컴퓨팅 시스템은 CXL 인터페이스를 사용하는 저장장치를 시스템 메인 보드에 증설하여 사용함으 로써, 프로그램의 런 타임 시 발생하는 대용량 데이터를 효과적으로 처리할 수 있게 된다. 도 1로 돌아가서, 실시예에 따른 컴퓨팅 시스템은 TOE(TCP/IP Offload Engine, 700) 및 무복사(zero copy)기능 을 사용하여 네트워크 지연 문제를 해결할 수 있다. 즉, TOE 및 무복사 기능은 CPU의 개입 없이 네트 워크를 통해 송수신되는 대용량 데이터의 처리가 가능하도록 하여 네트워크 지연 문제를 해소할 수 있게 된다. TOE는 CPU 대신 TCP/IP 프로토콜 처리(예를 들어, TCP와 IP 계층에서의 체크 섬 계산)를 수행하는 TCP/IP 가속장치로서, 기존에 소프트웨어에 의해 수행되는 TCP/IP 프로토콜 스택을 별도의 전용 하드웨어로 구현한 시 스템과 분리된 하드웨어 프로토콜 스택이다. TOE는 FPGA, ASIC, 또는 기타 전용 칩셋 등을 사용하여 구현될 수 있다. 일반적으로, 데이터의 송수신 시 CXL 저장장치에 데이터 복사 과정을 거치게 된다. CXL 저장장치를 통해 데이터 송신을 위해서는, 우선 애플리케이션 사용자 영역에서 운영체제 커널 영역으로 데이터 복사가 진행 되고, 이후 커널 영역에서 CXL 저장장치의 패킷 버퍼로 다시 복사가 진행된다. 또한, CXL 저장장치를 통해 데이터를 수신하기 위해서는 우선 CXL 저장장치가 수신한 패킷을 CXL 저 장장치의 패킷 버퍼(미도시)에 저장하고, 이후 TCP 버퍼에 복사하였다가, 다시 최종적으로 애플리케이션 영역으로 복사함으로써, 총 세 번의 데이터 복사가 진행된다. 하지만, 실시예에 따른 TOE와 무복사(Zero Copy) 알고리즘을 이용하면 데이터 처리 과정을 줄일 수 있다. 도 4는 일 실시예에 따른 패킷 수신 시 데이터 처리 과정을 나타낸 순서도이다. 도 4에 도시된 바와 같이, TOE를 사용할 경우, CXL 저장장치에 패킷이 수신되면(S100), 수신된 패킷 을 TCP 버퍼에 복사할 수 있다(S110). 이후 최종적으로 애플리케이션 영역에 패킷을 복사할 수 있게 된다 (S120). 도 5는 다른 실시예에 따른 패킷 수신 시 데이터 처리 과정을 나타낸 순서도이다. 도 5에 도시된 바와 같이, TOE와 무복사(Zero Copy) 알고리즘을 사용할 경우, CXL 저장장치에 패킷이 수신되면(S200), 무복사 알고리즘에 의해 한번에 애플리케이션 영역에 패킷을 복사할 수 있게 된다(S210). 여기서, 무복사(Zero Copy) 기술은 CPU의 개입 없이 CXL 저장장치의 데이터를 TOE를 거쳐 CXL 저장장치의 CXL.io 프로토콜로 데이터를 전송할 수 있는 방법이다. 따라서, 실시예에 따른 컴퓨팅 시스템은 데이터 처리 효율을 더욱 높일 수 있는 효과가 있다. 이상에서와 같이 본 발명에 따른 컴퓨팅 시스템은 상기한 바와 같이 설명된 실시예들의 구성과 방법이 한정되게 적용될 수 있는 것이 아니라, 상기 실시예들은 다양한 변형이 이루어질 수 있도록 각 실시예들의 전부 또는 일 부가 선택적으로 조합되어 구성될 수도 있다. 부호의 설명100: CPU 200: 메인 메모리 300: Flexible Bus 400: 물리적 인터페이스 500: PCle Slot 600: CXL 저장장치 700: TOE"}
{"patent_id": "10-2022-0002550", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 컴퓨팅 시스템의 전체 구조를 나타낸 블록도이다. 도 2는 CPU에 구비된 물리 인터페이스의 구조를 나타낸 블록도이다. 도 3은 PCle 슬롯에 연결된 카드의 연결 구조를 나타낸 블록도이다. 도 4는 일 실시예에 따른 패킷 수신 시 데이터 처리 과정을 나타낸 순서도이다. 도 5는 다른 실시예에 따른 패킷 수신 시 데이터 처리 과정을 나타낸 순서도이다."}
