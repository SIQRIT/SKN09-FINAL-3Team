{"patent_id": "10-2023-0090391", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0011742", "출원번호": "10-2023-0090391", "발명의 명칭": "NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법, 서버 및 시스템", "출원인": "주식회사 엘지유플러스", "발명자": "이승한"}}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "NFT 정보를 기반으로 스케줄링 플랜(scheduling plan)을 생성하는 방법에 있어서,사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 수신하는 단계;상기 NFT에 대한 정보를 블록체인 네트워크(blockchain network)에 쿼리하는 단계;쿼리 결과를 기반으로 상기 NFT의 속성값(Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의하는 단계; 및상기 API 서버로부터 질의 결과가 반환됨에 기반하여 상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여상기 사용자 단말에 전송하는 단계를 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 NFT의 속성값은, NFT의 타입을 정의하는 trait_type 및 상기 trait_type에 대한 값인 trait_value를 포함하고,상기 파싱된 정보는, 상기 trait_type 및 상기 trait_value인, NFT 정보를 기반으로 스케줄링 플랜을 생성하는방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 NFT에 대한 정보는, 토큰 아이디, 상기 토큰 아이디에 매핑된 NFT 원본 저장소 위치, NFT 저장소의 레파지토리 주소 및 상기 NFT의 속성값을 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 NFT에 대한 정보는, NFT 발급 규격의 스마트 컨트랙트를 실행하는 스마트 컨트랙트 서버(smart contractserver) 및 상기 스마트 컨트랙트를 기반으로 NFT에 대한 정보를 저장하고 있는 상기 블록체인 네트워크를 통해발급된 것인, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서, 상기 쿼리하는 단계는,상기 블록체인 네트워크의 API를 호출하고, 상기 블록체인 네트워크에 배포된 스마트 컨트랙트를 호출하여 상기NFT의 토큰 아이디에 매핑된 원본 저장소의 위치를 확인하는 단계를 포함하는, NFT 정보를 기반으로 스케줄링플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서, 상기 질의하는 단계는,상기 쿼리 결과를 기반으로 상기 NFT가 기 발급된 토큰임을 식별함에 기반하여 파싱을 수행하는 단계; 및파싱을 수행함에 따라 획득된 trait_type 및 trait_value를 상기 API 서버에 전송하는 단계를 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2025-0011742-3-제 1 항에 있어서, 상기 질의하는 단계는,상기 API 서버의 OpenAPI를 호출함에 기반하여 상기 NFT에 대한 정보를 질의하는 단계를 포함하는, NFT 정보를기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 API 서버는, NFT의 속성값과 연관된 학습데이터를 이용하여 스케줄링 플랜을 출력하도록 학습된 대화형 인공지능을 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 대화형 인공지능은, ChatGPT를 기반으로 하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서, 상기 전송하는 단계는,상기 API 서버에 탑재된 대화형 인공지능으로부터 상기 질의 결과를 획득하는 단계;상기 질의 결과를 가공하여 스케줄링 플랜에 대한 정보를 생성하는 단계; 및상기 스케줄링 플랜에 대한 정보를 상기 사용자 단말에 전송하는 단계를 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,NFT는 여행 및 공연 중 적어도 하나와 연관된 디지털 자산인, NFT 정보를 기반으로 스케줄링 플랜을 생성하는방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 NFT는 여행 관련인 토큰일 때, 여행과 연관된 trait_type 및 trait_value를 속성값으로 포함하고,상기 여행과 연관된 trait_type은 국가, 여행하는 지역, 출국날짜 및 입국날짜 중 적어도 하나를 포함하고,상기 여행과 연관된 trait_value는 국가에 대한 값, 여행하는 지역에 대한 값, 출국날짜에 대한 값 및 입국날짜에 대한 값 중 적어도 하나를 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항에 있어서,상기 스케줄링 플랜은, 상기 NFT가 여행 관련인 토큰일 때, 여행 일정 및 여행 관련 운송 수단에 대한 정보 중적어도 하나에 대한 정보를 포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버에 있어서,사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 수신하는 통신모듈; 및상기 NFT에 대한 정보를 블록체인 네트워크에 쿼리하고, 쿼리 결과를 기반으로 상기 NFT의 속성값(AttributeValue)을 파싱하고, 파싱된 정보를 API 서버에 질의하고, 상기 API 서버로부터 질의 결과가 반환됨에 기반하여상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 프로세서를 포함하는,NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버.공개특허 10-2025-0011742-4-청구항 15 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템에 있어서,NFT(Non Fungible Token)에 대한 정보를 전송하는 사용자 단말; 및상기 NFT에 대한 정보를 블록체인 네트워크에 쿼리하고, 쿼리 결과를 기반으로 상기 NFT의 속성값(AttributeValue)을 파싱하고, 파싱된 정보를 API 서버에 질의하고, 상기 API 서버로부터 질의 결과가 반환됨에 기반하여상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 백엔드 서버를포함하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,NFT 발급 규격의 스마트 컨트랙트를 컴파일링하고, 컴파일된 스마트 컨트랙트를 배포하고, 상기 블록체인 네트워크에 저장된 NFT에 대한 정보를 상기 사용자 단말에 에어드롭하는 스마트 컨트랙트 서버; 및상기 스마트 컨트랙트를 기반으로 NFT에 대한 정보를 저장하는 상기 블록체인 네트워크를 더 포함하는, 스케줄링 플랜을 생성하는 시스템."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15 항에 있어서,상기 사용자 단말은, 사용자로부터 NFT의 속성값을 수신하여 상기 속성값을 특정 포멧의 파일로 변환하고, 상기파일을 IPFS(Inter Planetary File System) 또는 웹서버에 업로드함에 기반하여 상기 IPFS 또는 상기 웹서버의레파지토리(Repository)에 접근 가능한 URL을 획득하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는시스템."}
{"patent_id": "10-2023-0090391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서,상기 사용자 단말은, 상기 URL을 이용하여 발급된 NFT에 대한 발급 성공 여부 및 NFT 저장소의 성공 여부를 판단하는, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법, 서버 및 시스템에 관한 것으로, 사용자 단말로 부터 NFT(Non Fungible Token)에 대한 정보를 수신하는 단계; 상기 NFT에 대한 정보를 블록체인 네트워크 (blockchain network)에 쿼리하는 단계; 쿼리 결과를 기반으로 상기 NFT의 속성값(Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의하는 단계; 및 상기 API 서버로부터 질의 결과가 반환됨에 기반하여 상 기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 단계를 포함한다."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법, 서버 및 시스템에 관한 것으로서, 보다 상세하 게는 NFT 발행 행위로 사용자에게 의미 있는 스케줄링 플랜을 제공하는 방법, 서버 및 시스템에 관한 것이다."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "NFT(Non Fungible Token)의 시장성이 커져가고 있고, NFT 발행에 대한 관심과 서비스는 높아져가지만 NFT 발행 이후의 활용면에서는 아직 활성화가 되지 않고 있다. 현재 NFT를 ERC-721 표준에 따라 발행하면 NFT의 식별값인 토큰아이디(TokenID)로 해당 NFT의 속성값(Attribute Value)을 조회할 수 있는데, 이는 거래소 등에서 해당 NFT 의 특징을 보여주거나, 이미지의 경우 원본 이미지를 가지고 올 수 있는 기능 정도로만 활용하고 있다. 즉, 해 당 속성(attribute)을 연동할 수 있는 기능 및 서비스가 미존재 한다. 한편, ChatGPT와 같은 대화형 인공지능의 검색 방식에도 한계가 존재한다. ChatGPT의 질의에 따라 응답은 다양 하지만, 규격화된 질의 없이 대화형태로 진행되기 때문에 얻어지는 정보의 정확도가 부족하다. 이를 규격화하여 코드화 하면 일정한 수준의 답을 받을 수 있다. 한편, OpenAI API와 블록체인(스마트 컨트랙트) 제공자(Provider)를 연계하는 서버 또한 부재한 실정이다. ChatGPT API와 블록체인을 연결하는 제공자 서버가 부재하기 때문에 상술한 서비스를 활용하기가 어려운 점이 있었다.선행기술문헌 특허문헌 (특허문헌 0001) 한국 공개특허 제10-2022-0149644호"}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상술한 문제점을 해결하기 위한 것으로서, 사용자 단말이 발행한 NFT에 대한 정보를 이용하여 사용자 에게 의미 있는 스케줄링 플랜을 제공하는 방법, 서버 및 시스템을 제공하는데 그 목적이 있다."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 양태에 따르면, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법을 제공한다. 상기 NFT 정보 를 기반으로 스케줄링 플랜을 생성하는 방법은, 사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 수 신하는 단계, 상기 NFT에 대한 정보를 블록체인 네트워크(blockchain network)에 쿼리하는 단계, 쿼리 결과를 기반으로 상기 NFT의 속성값(Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의하는 단계 및 상기 API 서버로부터 질의 결과가 반환됨에 기반하여 상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 단계를 포함한다. 일 측면에서, 상기 NFT의 속성값은, NFT의 타입을 정의하는 trait_type 및 상기 trait_type에 대한 값인 trait_value를 포함하고, 상기 파싱된 정보는, 상기 trait_type 및 상기 trait_value를 포함한다. 다른 측면에서, 상기 NFT에 대한 정보는, 토큰 아이디, 상기 토큰 아이디에 매핑된 NFT 원본 저장소 위치(URL), NFT 저장소의 레파지토리 주소 및 상기 NFT의 속성값을 포함한다. 또 다른 측면에서, 상기 NFT에 대한 정보는, NFT 발급 규격의 스마트 컨트랙트를 실행하는 스마트 컨트랙트 서 버(smart contract server) 및 상기 스마트 컨트랙트를 기반으로 NFT에 대한 정보를 저장하고 있는 상기 블록체 인 네트워크를 통해 발급된다. 또 다른 측면에서, 상기 쿼리하는 단계는, 상기 블록체인 네트워크의 API를 호출하고, 상기 블록체인 네트워크 에 배포된 스마트 컨트랙트를 호출하여 상기 NFT의 토큰 아이디에 매핑된 원본 저장소의 위치를 확인하는 단계 를 포함한다. 또 다른 측면에서, 상기 질의하는 단계는, 상기 쿼리 결과를 기반으로 상기 NFT가 기 발급된 토큰임을 식별함에 기반하여 파싱을 수행하는 단계 및 파싱을 수행함에 따라 획득된 trait_type 및 trait_value를 상기 API 서버에 전송하는 단계를 포함한다. 또 다른 측면에서, 상기 질의하는 단계는, 상기 API 서버의 OpenAPI를 호출함에 기반하여 상기 NFT에 대한 정보 를 질의하는 단계를 포함한다. 또 다른 측면에서, 상기 API 서버는, NFT의 속성값과 연관된 학습데이터를 이용하여 스케줄링 플랜을 출력하도 록 학습된 대화형 인공지능을 포함한다. 또 다른 측면에서, 상기 대화형 인공지능은, ChatGPT를 기반으로 한다. 또 다른 측면에서, 상기 전송하는 단계는, 상기 API 서버에 탑재된 대화형 인공지능으로부터 상기 질의 결과를 획득하는 단계, 상기 질의 결과를 가공하여 스케줄링 플랜에 대한 정보를 생성하는 단계 및 상기 스케줄링 플랜 에 대한 정보를 상기 사용자 단말에 전송하는 단계를 포함한다. 또 다른 측면에서, NFT는 여행 및 공연 중 적어도 하나와 연관된 디지털 자산인 것을 특징으로 한다. 또 다른 측면에서, 상기 NFT는 여행 관련인 토큰일 때, 여행과 연관된 trait_type 및 trait_value를 속성값으로 포함하고, 상기 여행과 연관된 trait_type은 국가, 여행하는 지역, 출국날짜 및 입국날짜 중 적어도 하나를 포 함하고, 상기 여행과 연관된 trait_value는 국가에 대한 값, 여행하는 지역에 대한 값, 출국날짜에 대한 값 및 입국날짜에 대한 값 중 적어도 하나를 포함한다.또 다른 측면에서, 상기 스케줄링 플랜은, 상기 NFT가 여행 관련인 토큰일 때, 여행 일정 및 여행 관련 운송 수 단에 대한 정보 중 적어도 하나에 대한 정보를 포함한다. 본 발명의 다른 양태에 따르면, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버를 제공한다. 상기 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버는, 사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 수신하는 통신모듈 및 상기 NFT에 대한 정보를 블록체인 네트워크에 쿼리하고, 쿼리 결과를 기반으 로 상기 NFT의 속성값(Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의하고, 상기 API 서버로부터 질의 결과가 반환됨에 기반하여 상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 프로세서를 포함한다. 본 발명의 또 다른 양태에 따르면, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템을 제공한다. 상기 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템은, NFT(Non Fungible Token)에 대한 정보를 전송하는 사 용자 단말 및 상기 NFT에 대한 정보를 블록체인 네트워크에 쿼리하고, 쿼리 결과를 기반으로 상기 NFT의 속성값 (Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의하고, 상기 API 서버로부터 질의 결과가 반환됨 에 기반하여 상기 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 상기 사용자 단말에 전송하는 백엔드 서 버를 포함한다. 일 측면에서, NFT 발급 규격의 스마트 컨트랙트를 컴파일링하고, 컴파일된 스마트 컨트랙트를 배포하고, 상기 블록체인 네트워크에 저장된 NFT에 대한 정보를 상기 사용자 단말에 에어드롭하는 스마트 컨트랙트 서버 및 배 포된 상기 스마트 컨트랙트를 기반으로 NFT에 대한 정보를 저장하는 상기 블록체인 네트워크를 더 포함한다. 다른 측면에서, 상기 사용자 단말은, 사용자로부터 NFT의 속성값을 수신하여 상기 속성값을 특정 포멧의 파일로 변환하고, 상기 파일을 IPFS(Inter Planetary File System) 또는 웹서버에 업로드함에 기반하여 상기 IPFS 또 는 상기 웹서버의 레파지토리(Repository)에 접근 가능한 URL을 획득한다. 또 다른 측면에서, 상기 사용자 단말은, 상기 URL을 이용하여 발급된 NFT에 대한 발급 성공 여부 및 NFT 저장소 의 성공 여부를 판단한다."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들은 다음의 장점들을 포함하는 효과를 가질 수 있다. 다만, 본 발명의 실시 예들이 이를 전부 포함하여야 한다는 의미는 아니므로, 본 발명의 권리범위는 이에 의하여 제한되는 것으로 이해되어서는 아니 될 것이다. 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법, 서버 및 시스템은 NFT를 발 행한 후, NFT의 속성값을 이용하여 사용자에게 의미 있는 스케줄링 플랜을 제공하는 효과가 있다. 또한, 기 발행된 NFT에 대한 활용성을 높이는 효과가 있다. 또한, 대화형 인공지능의 응답을 규격화하여 사용자에게 제공되는 정보의 정확도를 높이는 효과가 있다. 또한, 대화형 인공지능의 API 및 블록체인을 연계하는 서버를 구축하여 NFT 기반의 다양한 서비스를 제공하는 효과가 있다."}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들을 도면에 예시하고 상세하게 설명하고자 한다. 그러나, 이는 본 발명을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 발명 의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제 1, 제 2, A, B 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용 어들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로 만 사용된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제 1 구성요소는 제 2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소도 제 1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 기 재된 항목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함한다. 어떤 구성요소가 다른 구성요소에 '연결되어' 있다거나 '접속되어' 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 '직접 연결되어' 있다거나 '직접 접속되어' 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, '포 함하다' 또는 '가지다' 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일 반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미 를 가진 것으로 해석되어야 하며, 본 출원에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의 미로 해석되지 않는다. 도면에 대한 상세한 설명을 하기에 앞서, 본 명세서에서의 구성부들에 대한 구분은 각 구성부가 담당하는 주기 능 별로 구분한 것에 불과함을 명확히 하고자 한다. 즉, 이하에서 설명할 2개 이상의 구성부가 하나의 구성부로 합쳐지거나 또는 하나의 구성부가 보다 세분화된 기능별로 2개 이상으로 분화되어 구비될 수도 있다. 그리고 이하에서 설명할 구성부 각각은 자신이 담당하는 주기능 이외에도 다른 구성부가 담당하는 기능 중 일부 또는 전부의 기능을 추가적으로 수행할 수도 있으며, 구성부 각각이 담당하는 주기능 중 일부 기능이 다른 구성 부에 의해 전담되어 수행될 수도 있다. 따라서, 본 명세서를 통해 설명되는 각 구성부들의 존재 여부는 기능적 으로 해석되어야 할 것이다. 본 명세서에서 \"A 또는 B(A or B)\"는 \"오직 A\", \"오직 B\" 또는 \"A와 B 모두\"를 의미할 수 있다. 달리 표현하면, 본 명세서에서 \"A 또는 B(A or B)\"는 \"A 및/또는 B(A and/or B)\"으로 해석될 수 있다. 예를 들어, 본 명세서에 서 \"A, B 또는 C(A, B or C)\"는 \"오직 A\", \"오직 B\", \"오직 C\", 또는 \"A, B 및 C의 임의의 모든 조합(any combination of A, B and C)\"를 의미할 수 있다. 본 명세서에서 사용되는 슬래쉬(/)나 쉼표(comma)는 \"및/또는(and/or)\"을 의미할 수 있다. 예를 들어, \"A/B\"는 \"A 및/또는 B\"를 의미할 수 있다. 이에 따라 \"A/B\"는 \"오직 A\", \"오직 B\" 또는 \"A와 B 모두\"를 의미할 수 있다. 예를 들어, \"A, B, C\"는 \"A, B 또는 C\"를 의미할 수 있다. 본 명세서에서 \"A 및 B 중 적어도 하나(at least one of A and B)\"는, \"오직 A\", \"오직 B\" 또는 \"A와 B 모두\" 를 의미할 수 있다. 또한, 본 명세서에서 \"적어도 하나의 A 또는 B(at least one of A or B)\"나 \"적어도 하나의 A 및/또는 B(at least one of A and/or B)\"라는 표현은 \"적어도 하나의 A 및 B(at least one of A and B)\"와 동일하게 해석될 수 있다. 또한, 본 명세서에서 \"적어도 하나의 A, B 및 C(at least one of A, B and C)\"는, \"오직 A\", \"오직 B\", \"오직 C\" 또는 \"A, B 및 C의 임의의 모든 조합(any combination of A, B and C)\"를 의미할 수 있다. 또한, \"적어도 하나의 A, B 또는 C(at least one of A, B or C)\"나 \"적어도 하나의 A, B 및/또는 C(at least one of A, B and/or C)\"는 \"적어도 하나의 A, B 및 C(at least one of A, B and C)\"를 의미할 수 있다. 이하, 첨부한 도면들을 참조하여, 본 발명의 바람직한 실시예를 보다 상세하게 설명하고자 한다. 본 발명을 설 명함에 있어 전체적인 이해를 용이하게 하기 위하여 도면상의 동일한 구성요소에 대해서는 동일한 참조부호를 사용하고 동일한 구성요소에 대해서 중복된 설명은 생략한다. 도 1에 대한 설명에 앞서, 본 명세서 상에서 언급하는 용어를 다음과 같이 정의한다. NFT(Non Fungible Token)는 하나의 토큰을 다른 토큰으로 대체하는 것이 불가한 토큰을 말하며, 대부분의 서비 스들은 블록체인 기술을 활용한다. NFT는 디지털 자산 원본의 주소를 포함하고 있으며, 사용자는 자신의 디지털자산에 대한 소유를 증명하는 목적으로 NFT를 발행할 수 있다. 이러한 NFT에는 속성값(attribute value)라는 메 타데이터가 존재하는데, 속성값은 디지털 자산 원본의 주소와는 다른 주소에 저장될 수 있다. 예를 들어, 디지 털 자산 원본은 블록체인 네트워크 내 블록에 저장될 수 있고, 속성값은 IPFS(Inter Planetary File System) 또는 웹서버의 저장소(레파지토리, repository)에 저장될 수 있다. 즉, NFT의 원본인 디지털 자산과 분리되어 저장될 수 있다. ChatGPT는 GPT-3.5와 GPT-4를 기반으로 하는 대화형 인공지능 서비스이다. Spring Framework는 JAVA/Kotlin 기반의 웹 프레임워크로써 POJO, 관점 지향 프로그래밍, 의존성 주입, 제어역 전, 생명주기 관리 등의 특징이 있다. Spring Framework를 기반으로 웹 기반의 백엔드 서버가 구축될 수 있다. REST(Representational State Transfer)는 자원의 이름으로 구분하여 해당 자원의 상태를 주고받는 것을 의미 하며 POST, GET, PUT, DELETE, HEAD등의 오퍼레이션을 가지고 있다. REST의 아키텍쳐를 기반으로 API 서버가 구축될 수 있다. 블록체인은 다수의 거래 트랜잭션을 묶어서 블록을 생성하고, 해시를 이용하여 블록들을 체인처럼 연결한 뒤, 다수의 곳에 분산 저장하는 플랫폼, 혹은 알고리즘이다. ERC 721는 NFT의 기준이 되는 표준으로 이더리움 블록체인에서 대체할 수 없거나 고유한 토큰을 작성하는 표준 이고, 표준으로 발행한 토큰들은 대체 불가능하며, 각자의 가치를 지니고 있다. 스마트 컨트랙트(Smart Contract)는 블록체인 기술을 활용해 제 3의 인증기관 없이 개인 간 계약이 이루어질 수 있도록 하는 기술이다. 스마트 컨트랙트는 이더리움 가상머신(ethereum virtual machine, EVM) 상에서 실행될 수 있다. 이더리움 가상머신은 IPFS(Inter Planetary File System) 또는 웹서버 상에서 실행될 수 있는 가상머 신을 의미한다. 즉, 이더리움 가상머신을 실행하는 노드들 중 하나가 IPFS 또는 웹서버일 수 있다. Solidity는 스마트 컨트랙트를 실행하는 객체 지향, 정적타입, 고급 스크립트 언어로, 스마트 컨트랙트를 처리 (배포, 실행)하기 위한 이더리움 가상 머신(Ethereum Virtual Machine, EVM)에서 실행된다. 즉, 스마트 컨트랙 트 서버는 이더리음 가상머신 상에서 Solidity 언어를 이용하여 스마트 컨트랙트를 처리할 수 있다. 도 1은 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템을 개략적으로 나타 낸 도면이다. 도 1을 참조하면 NFT 정보를 기반으로 스케줄링 플랜(Scheduling plan)을 생성하는 시스템은 NFT에 대한 정보를 이용하여 사용자에게 의미있는 스케줄링 플랜을 제공하는 시스템으로서, NFT 발행(ERC -721,1155 등의 표준에 따른 발행) 후 NFT의 속성값(Attribute Value)을 백엔드 서버를 통해 API 서버의 Chat GPT에서 제공하는 OpenAI API를 호출하고 해당 속성값의 질의 결과를 규격화하여 유의미한 스케줄링 플랜을 얻어와 NFT 홀더(사용 자)에게 제공할 수 있다. 예를 들어, 여행사에서 여행상품을 판매할 때 상품의 국가에 대한 정보와 여행 정보를 포함한 NFT를 발행한다면, 본 발명의 서비스를 통해 해당 NFT를 가지고 있는 사용자에게 유의미한 여행일정을 제시해줄 수 있고, 기차 및 선박 등 운송수단의 NFT의 경우 홀더에 특화한 정보를 제시할 수 있으며 공연 티켓 의 경우 공연에 관련된 정보를 자동으로 서비스할 수 있다. NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시 스템은 사용자 단말, 스마트 컨트랙트 서버, 블록체인 네트워크, API 서버 및 백엔드 서버를 포함할 수 있다. 사용자 단말은 사용자로부터 NFT에 대한 정보를 입력받아 NFT를 발행(발급)하고, 발행된 NFT에 대한 정보 를 백엔드 서버에 전송하는 장치이다. 사용자 단말은 이더리움(Ethereum) 클라이언트와 통신하기 위한 통 신 모듈을 포함할 수 있다. 통신의 형태는 모바일, 웹페이지의 형태가 가능하다. 통신 프로토콜은 HTTS(Hypertext Transfer Protocol)혹은 HTTPS(Hypertext Transfer Protocol Secure)를 사용하며, 이더리움 가 상 머신(EVM)과 연동을 위해 web3.js 라이브러리를 사용할 수 있다. 사용자 단말은 사용자의 휴대전화, 모 바일 단말, 휴대단말, 스마트폰, PC, 노트북, 태블릿 등으로 구현될 수 있다. 이하에 설명되는 사용자 단말 의 실시예들은 스마트폰인 경우의 실시예들이지만, 상술한 다른 종류의 단말들을 적용할 수도 있다. 스마트 컨트랙트 서버는 외부 클라이언트와 블록체인(이더리움) 네트워크를 연동하기 위한 장치이다. 스마 트 컨트랙트 서버는 사용자 단말과 블록체인 네트워크를 연동하기 위해 스마트 컨트랙트를 작성 한다. 스마트 컨트랙트는 Solidity 언어 혹은 파이선으로 개발이 가능하며, 작성한 스마트 컨트랙트 코드(Smart Contract Code)는 컴파일을 통해 배포가능한 byte 코드(Compiled Byte Code) 형태로 생성될 수 있다. 스마트 컨트랙트 서버는 PC, 노트북, 태블릿 등으로 구현될 수 있다. 이하에 설명되는 스마트 컨트랙트 서버의 실시예들은 PC인 경우의 실시예들이지만, 상술한 다른 종류의 장치들을 적용할 수도 있다. 블록체인 네트워크는 클라이언트로부터 발생한 트랜잭션들을 블록에 저장하는 장치이다. 블록체인 네트워 크는 특정 조건을 통해 트랜잭션을 블록에 담고, 블록에 담긴 데이터들의 무결성을 확인한 후 이상이 없을 경우 기존의 블록체인에 연결하여 처리한다. 예를 들어, 사용자 단말로부터 NFT 발행과 연관된 트랜잭션이 발생하면 이를 블록에 저장하고 무결성을 확인할 수 있다. 블록체인 네트워크는 대용량 서버 역할이 가능 한 PC, 노트북, 태블릿 등으로 구현될 수 있다. 이하에 설명되는 블록체인 네트워크의 실시예들은 PC인 경 우의 실시예들이지만, 상술한 다른 종류의 장치들을 적용할 수도 있다. API 서버는 대화형 인공지능(ChatGPT)이 제공하는 OpenAI API를 제공하는 서버이다. API 서버의 API 를 사용하기 위해서는 API 서버로부터 API에 대한 권한을 획득해야 한다. API 서버는 사용자 단말 로부터 획득한 NFT에 대한 정보가 블록체인에 기저장된 NFT에 대한 정보임을 확인하면 백엔드 서버에 API 권한을 부여할 수 있다. API 서버는 웹에서 데이터를 전송 및 처리하기 위해 REST를 OpenAI API로 탑 재할 수 있다. API 서버는 PC, 노트북, 태블릿 등으로 구현될 수 있다. 이하에 설명되는 API 서버의 실시예들은 PC인 경우의 실시예들이지만, 상술한 다른 종류의 장치들을 적용할 수도 있다. 백엔드 서버는 서비스 제공자의 서버로, 사용자 단말과 통신하는 웹서버와 연계된 서버일 수 있다. 백엔드 서버는 블록체인 네트워크와 대화형 인공지능(ChatGPT)의 OpenAPI를 연동하는 기능을 수행할 수 있 다. 백엔드 서버는 블록체인 네트워크의 API를 호출하고, 해당 블록체인에 배포된 스마트 컨트랙트를 호출 하여 토큰 아이디에 매핑된 NFT 원본 저장소의 위치(URL)를 요청한 클라이언트에 반환하거나, 스마트 컨트랙트 를 호출한 후 내부 로직으로 직접 OpenAPI를 호출하여 결과값을 얻을 수 있다. 백엔드 서버는 PC, 노트북, 태블릿 등으로 구현될 수 있다. 이하에 설명되는 백엔드 서버는의 실시예들은 PC인 경우의 실시예들이지만, 상술한 다른 종류의 장치들을 적용할 수도 있다. 한편, 도 1에서 스케줄링 플랜을 제공하는 실질적인 수행 주체는 백엔드 서버일 수 있다. 백엔드 서버 는 사용자 단말로부터 NFT의 발행이 수행된 다음, 사용자 단말의 사용자로부터 NFT에 대한 정보 를 수신하여 스케줄링 플랜에 대한 정보를 제공하는 기능을 수행할 수 있다. 즉, 기 발행된 NFT에 대한 정보를 이용하여 스케줄링 플랜에 대한 정보를 제공할 수 있다. 결론적으로, 발행한 NFT에 대한 활용도를 높이기 위해서 NFT 발행 행위로만 사용자에게 의미 있는 스케줄링 플 랜을 제시하는 것이 백엔드 서버의 기능이다. 이는 대화형 인공지능(ChatGPT)의 Open AI API를 활용하며 발행한 NFT의 속성값을 시드(Seed)값으로 사용하는 기술이다. 발행한 NFT의 속성값과 대화형 인공지능의 인공지능 API를 활용하여 서비스 사용자에게 의미있는 스케줄링 플랜 을 제시하는 기술과 서비스 형태가 개시된 기술의 핵심이다. 예를 들면, 여행사에서 발급한 여행 관련 NFT는 그 자체만으로 기념이 되는 가치가 있는 NFT일 수도 있지만, 여행사의 고객은 해당 NFT를 발급받는 것만으로 의미 있는 여행 스케쥴까지 자동으로 받을 수 있게 된다. 또한 이는 교통티켓, 공연티켓으로 확대 적용할 수 있다. 즉, NFT의 활용성과 NFT 속성값 활용의 부족성 및 제한점, 대화형 인공지능의 검색의 용이성을 증가시킬 수 있 고 블록체인 네트워크에 연동하는 백엔드 서버의 구축 기술을 확보할 수 있다. 도 2는 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법에 대한 순서도이다. 도 2를 참조하면, NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법은 S001 내지 S011 단계를 포함한다. 본 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법은 도 1을 통해 설명한 백엔드 서버에 의한 동작으로 설명된다. 앞서 도 1의 설명 말미에 사용자 단말로부터 NFT의 발행이 수행된 다음에 백엔드 서버의 스케줄링 플 랜에 대한 정보의 제공이 이루어진다 하였으므로, 먼저 사용자 단말, 스마트 컨트랙트 서버 및 블록 체인 네트워크를 통해 NFT를 발행하는 단계에 대해 먼저 설명한 후, 백엔드 서버에서 스케줄링 플랜 에 대한 정보를 제공하는 단계에 대해 설명한다. S001 단계에서 사용자 단말은 사용자로부터 NFT의 속성값을 수신한다. NFT의 속성값은 NFT 타입을 정의하 는 특성 타입(trait_type) 및 특성 타입에 대한 값(trait_value)를 포함한다. 예를 들어, 발급하고자 하는 NFT 가 여행 관련 토큰이라면, 여행과 연관된 trait_type 및 trait_value가 여행 관련 토큰의 속성값으로 포함될 수 있다. 즉, 여행과 연관된 trait_type은 국가, 여행하는 지역, 출국날짜 및 입국날짜 중 적어도 하나를 포함하고, 여행과 연관된 trait_value는 국가에 대한 값, 여행하는 지역에 대한 값, 출국날짜에 대한 값 및 입 국날짜에 대한 값 중 적어도 하나를 포함할 수 있다. 사용자는 사용자 단말의 입력 수단(터치패드,키보드)을 통해 {\"trait_type\": \"국가\", \"여행하는 지역\", \"출국날짜\", \"입국날짜\"}와 같은 형태로 trait_type 을 정의할 수 있다. 그리고 정의된 trait_type에 대한 값으로 {\"trait_value\": \"미국\", \"LA\", \"2023.01.01\", \"2023.01.10\"}와 같은 값들을 각각 입력할 수 있다. 다시 말해, 사용자 단말의 사용자는 속성값을 NFT에 대한 메타데이터로 trait_type 및 trait_value를 입력할 수 있다. 이러한 메타데이터는 NFT를 신규 발행하기 위 해 입력될 수도 있고, 기 발행된 NFT를 갱신하기 위해 입력될 수도 있다. S002 단계에서 사용자 단말은 속성값을 특정 포멧의 파일로 변환하고, 변환한 파일을 IPFS(Inter Planetary File System) 또는 웹서버에 업로드함에 기반하여 IPFS 또는 웹서버의 레파지토리(Repository)에 접 근 가능한 URL을 획득한다. 사용자 단말은 모바일 또는 웹에서 해당 NFT의 속성값을 특정 포멧의 파일로 변환할 수 있다. 예를 들어, 이더리움 네트워크(블록체인 네트워크)와 상호작용할 수 있는 web3.js라는 자바스 크립트 라이브러리를 이용하여 작성한 속성값(trait_type, trait_value)를 json 포멧의 파일로 변환할 수 있다. 사용자 단말은 변환한 파일을 IPFS 혹은 웹서버에 업로드하여 IPFS 또는 웹서버의 저장소에 NFT에 대한 속 성값(메타데이터)을 저장할 수 있다. 이에 따라 사용자 단말은 해당 IPFS 또는 서버의 레파지토리에 접근 가능한 URL을 획득할 수 있다. 즉, 사용자가 속성값을 업로드하는 대상이 IPFS 또는 서버이고, 이러한 IPFS 또 는 서버가 스마트 컨트랙트 서버의 기능을 수행하는 것일 수 있다. 스마트 컨트랙트 서버는 사용자로 부터 업로드된 json 포멧의 파일을 레파지토리에 저장하고, 저장된 json 포멧의 파일에 대한 레파지토리의 주소 (url)을 사용자 단말에 전송할 수 있다. S003 단계에서 스마트 컨트랙트 서버는 NFT를 발급하는 규격의 스마트 컨트랙트를 작성하여 컴파일한다. 스마트 컨트랙트 서버는 Solidity 또는 파이선과 같은 프로그래밍 언어로 스마트 컨트랙트를 작성하고, 작 성된 스마트 컨트랙트를 배포 가능한 바이트 코드 형태로 컴파일할 수 있다. 예를 들어, 스마트 컨트랙트 서버 는 이더리움 가상 머신 상에서 스마트 컨트랙트를 실행하여 사용자 단말로부터 전송된 속성값(json 포멧의 파일)을 컴파일하고, 컴파일된 파일을 블록체인 네트워크에 배포할 수 있다. S004 단계에서 블록체인 네트워크는 컴파일된 스마트 컨트랙트가 배포되면, 서비스 이용자의 주소를 입력 받고, 입력받은 주소에 NFT를 전송한다. 토큰을 전송하는 방식으로 에어드롭 방식을 이용할 수 있다. 블록체인 네트워크에 배포되는 스마트 컨트랙트는 바이트 코드 형태일 수 있다. 스마트 컨트랙트의 배포가 완료되면, 블록체인 네트워크는 입력받은 주소(사용자 단말의 주소)에 NFT를 에어드롭할 수 있다. 여기에 서 입력되는 주소는 스마트 컨트랙트를 작성하기 위해 사용자 단말에서 실행중인 웹페이지의 URL일 수도 있고, 스마트 컨트랙트 작성 후 스케줄링 플랜에 대한 정보를 얻기 위해 사용자 단말에서 실행중인 다른 웹페이지의 URL일 수도 있다. 물론, 사용자 단말 자체를 식별할 수 있는 단말 ID, 단말 어드레스(IP), 단 말 일련번호, 사용자 ID일 수도 있다. S005 단계에서 사용자 단말은 에어드롭된 NFT의 레파지토리의 주소(URL)를 스마트 컨트랙트 서버로부 터 리턴받고, NFT 발급 및 NFT 저장소의 성공 여부를 판단한다. 사용자 단말은 에어드롭된 NFT에 대한 정 보와 리턴된 레파지토리 주소를 통해 NFT의 발행이 정상적으로 이루어졌는지, NFT에 대한 무결성이 보장되는지 확인하여 NFT의 발급 및 저장이 성공적으로 이루어진 것으로 판단할 수 있다. 예를 들어, NFT에 포함된 주소 (url) 및 리턴된 레파지토리 주소 각각에 정상적으로 접근 가능하면 NFT 발급 및 저장에 성공한 것으로 판단할 수 있다. 상술한 S001 내지 S005 단계까지가 사용자 단말이 스마트 컨트랙트 서버 및 블록체인 네트워크 를 통해 NFT를 발행하는 과정이며, 이하의 S006 내지 S011 단계는 백엔드 서버가 스케줄링 플랜을 제공하 기 위해 수행하는 과정이다. S006 단계에서 백엔드 서버는 사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 전송한다. NFT에 대한 정보는, 토큰 아이디, 토큰 아이디에 매핑된 NFT 원본 저장소 위치(예를 들어, 블록체인 네트워크의 URL), NFT 저장소(IPFS 또는 웹서버)의 레파지토리 주소(예를 들어, 레파지토리 내 속성값의 위치에 대한 URL) 및 NFT의 속성값을 포함할 수 있다. NFT에 대한 정보는 NFT 발급 규격의 스마트 컨트랙트를 실행하는 스마트 컨 트랙트 서버 및 스마트 컨트랙트를 기반으로 NFT에 대한 정보를 저장하고 있는 블록체인 네트워크를 통해 발급된 것을 의미한다. 사용자 단말은 발급된 NFT에 대한 정보를 백엔드 서버로 전송할 수 있다. 여 기에서 실제 사용자는 S001 단계에 따라 trait_type 및 trait_value만 입력하는 것일 수 있으며, S006의 단계는 사용자가 직접 입력하는 것이 아닌, 사용자 단말이 자동으로 백엔드 서버에 NFT에 대한 정보를 전송 하는 것일 수 있다. 즉, 프론트엔드 단이 아닌 백엔드 단에서 이루어질 수 있다. S007, S008 단계에서 백엔드 서버는 NFT에 대한 정보를 블록체인 네트워크에 쿼리한다. 예를 들어, 백엔드 서버는 S007 단계에서 블록체인 네트워크의 API를 호출하고, 블록체인에 배포된 스마트 컨트랙트를 호출할 수 있다. 그리고 S008 단계에서 NFT에 대한 정보에 포함된 NFT의 토큰 아이디에 매핑된 원본 저장소의 위치를 확인할 수 있다. 즉, 백엔드 서버는 블록체인 네트워크의 API를 이용하여 사용자 단말로부터 수신된 NFT에 대한 정보가 S001 내지 S005 단계를 통해 사용자가 발행한 NFT가 맞는지 진위를 확인할 수 있다. S008 단 계에서 진품이 아닌 것으로 확인되면 백엔드 서버는 사용자 단말에 NFT에 대한 정보의 재전송을 요청 하거나 NFT의 재발급에 대한 알림을 전송할 수 있다. S009, S010 단계에서 백엔드 서버는 쿼리 결과를 기반으로 NFT의 속성값(Attribute Value)을 파싱하고, 파싱된 정보를 API 서버에 질의한다. 예를 들어, 백엔드 서버는 S009 단계에서 사용자 단말로부터 수 신한 NFT에 대한 정보에 따라, 이 NFT가 기 발급된 토큰임을 식별하면, NFT에 대한 정보에 포함된 속성값을 파 싱할 수 있다. 그리고 S010 단계에서 파싱된 정보를 API 서버에 절의할 수 있다. 여기에서, 백엔드 서버로 부터 파싱된 정보는 NFT의 속성값에 포함된 trait_type 및 trait_value일 수 있다. 즉, NFT에 대한 정보들 중 사용자가 입력한 일부의 정보(trait_type, trait_value)만 추출하는 것일 수 있다. 백엔드 서버는 S010 단계에서 파싱된 정보를 API 서버에 질의한다. 여기에서 API 서버에 질의한다 함은, API 서버의 OpenAPI(REST)를 호출함에 기반하여 파싱된 정보(trait_type, trait_value)를 질의하는 것을 의미 한다. 즉, API 서버의 OpenAPI(REST)를 통해 대화형 인공지능(ChatGPT)을 실행한 후, 파싱을 수행함에 따라 획 득된 trait_type 및 trait_value를 API 서버에 전송하여 API 서버의 대화형 인공지능에 스케줄링 플랜과 연관된 데이터(Trait_type, Trait_value)를 입력하는 것을 의미한다. API 서버에 탑재된 대화형 인공지능은 사전에 속성값과 연관된 학습데이터를 이용하여 스케줄링 플랜을 출력하 도록 학습된 것일 수 있다. 예를 들어, ChatGPT를 기반으로 구축되고, 스케줄링 플랜을 출력할 수 있도록 학습 된 것일 수 있다. 이러한 학습에 따라 대화형 인공지능은 스케줄링 플랜과 연관된 정보를 대화형태로 출력할 수 있다. 대화형 인공지능은 trait_type으로 '국가', '여행하는 지역', '출국날짜', '입국날짜'를 입력받고, trait_value로'미국', 'LA', '2023.01.01', '2023.01.10'를 입력받을 수 있다. 이에 따라 대화형 인공지능은 '2023년 1월 1일 오전10시 A 항공 비행기가 가장 가격이 저렴하니 예약하세요', '2023년 1월 5일 LA B 해변에서 공연이 진행됩니다' 등의 스케줄링 플랜과 연관된 정보를 대화형태로 출력할 수 있다. 다시 말해, 대화형 인공 지능이 스케줄링 플랜과 연관된 텍스트 기반 문장을 출력할 수 있다. S011 단계에서 백엔드 서버는 API 서버로부터 질의 결과가 반환됨에 기반하여 질의 결과를 가공하여 사용 자 단말에 전송한다. 백엔드 서버는 API 서버에 탑재된 대화형 인공지능으로부터 질의 결과를 획득할 수 있다. 백엔드 서버는 대화형태로 출력된 질의 결과를 가공하여 스케줄링 플랜에 대한 정보를 생성할 수 있 다. 예를 들어, 백엔드 서버는, NFT가 여행 관련 토큰일 때, 여행 일정 및 여행 관련 운송(탑승) 수단에 대한 정보 중 적어도 하나에 대한 정보를 포함하는 스케줄링 플랜으로 질의 결과를 가공할 수 있다. 질의 결과 를 가공한다 함은, 대화형태의 텍스트를 규격화된 정보로 가공하는 것을 의미한다. 예를 들어, '2023년 1월 1일 오전10시 A 항공 비행기가 가장 가격이 저렴하니 예약하세요'와 같은 대화형태의 텍스트를 '일시: 2023.01.01 오전10시, 계획 : A 항공 비행기 예약'과 같이 규격화된 텍스트로 간결하게 가공하는 것일 수 있다. 백엔드 서 버는 가공된 스케줄링 플랜에 대한 정보를 사용자 단말에 전송할 수 있다. 이에 따라 사용자 단말 의 사용자는 기발급된 NFT를 이용하여 의미 있는 스케줄링 플랜에 대한 정보를 서비스로 획득할 수 있다. 도 3은 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버에 대한 블록도 이다. 도 3을 참조하면 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버는 통신모듈, 메모리 및 프로세서를 포함한다. NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버는 앞서 도 1을 통해 설명한 백엔드 서버로 구현될 수 있다. 통신모듈은 사용자 단말로부터 NFT(Non Fungible Token)에 대한 정보를 수신한다. 통신모듈은 사용자 단말과 통신 가능한 모뎀 또는 모듈로 구현될 수 있다. 메모리는 수신된 NFT에 대한 정보를 저장한다. 메모리는 HDD, SSD와 같은 스토리지 장치로 구현될 수 있다. 프로세서는 NFT에 대한 정보를 블록체인 네트워크에 쿼리하고, 쿼리 결과를 기반으로 NFT의 속성값 (Attribute Value)을 파싱하고, 파싱된 정보(trait_type, trait_value)를 API 서버에 질의하고, API 서버로부 터 질의 결과가 반환됨에 기반하여 질의 결과를 스케줄링 플랜에 대한 정보로 가공하여 사용자 단말에전송한다. 프로세서는 CPU, GPU 또는 AP로 구현될 수 있다. 한편, 상술한 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 백엔드 서버는 컴퓨터에서 실행될 수 있는 실행 가능한 알고리즘을 포함하는 프로그램(또는 어플리케이션)으로 구현될 수도 있다. 상기 프로그램은 일시적 또는 비일시적 판독 가능 매체(non-transitory computer readable medium)에 저장되어 제공될 수 있다. 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법, 서버 및 시스템은 이해를 돕"}
{"patent_id": "10-2023-0090391", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기 위하여 도면에 도시된 실시예를 참고하여 설명되었지만 이는 예시적인 것에 불과하며, 당해 기술분야에서 통 상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시예가 가능하다는 점을 이해할 것이다. 따라서, 본 발명의 진정한 기술적 보호범위는 첨부된 특허청구범위에 의해 정해져야 할 것이다."}
{"patent_id": "10-2023-0090391", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 시스템을 개략적으로 나타 낸 도면이다. 도 2는 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 방법에 대한 순서도이다. 도 3은 본 발명의 일 실시예에 따른 NFT 정보를 기반으로 스케줄링 플랜을 생성하는 서버에 대한 블록도이다."}
