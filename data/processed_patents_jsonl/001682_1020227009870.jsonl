{"patent_id": "10-2022-7009870", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0052355", "출원번호": "10-2022-7009870", "발명의 명칭": "인공지능 모드를 가진 메모리 시스템의 데이터 복사", "출원인": "마이크론 테크놀로지, 인크", "발명자": "트로이아, 알베르토"}}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "장치에 있어서,컨트롤러(controller); 및상기 컨트롤러에 결합된 복수의 메모리 장치들을 포함하고, 여기서 상기 복수의 메모리 장치들의 각각은 뉴럴네트워크(neural network)의 부분으로서 구성되고 복수의 메모리 어레이(array)들을 포함하고, 여기서 상기 컨트롤러는: 제1 메모리 장치로부터 제2 메모리 장치로 데이터를 복사하고 상기 제2 메모리 장치에 대한 훈련(training) 또는 추론 연산(inference operation)을 실행하기 위한 명령을 전송하도록 구성되며, 상기 명령은 제1 주소 및 제2 주소를 포함하고, 상기 제1 주소는 상기 훈련 또는 추론 연산과 연관된 데이터를 저장하는 상기 제1 메모리장치를 식별하고, 상기 제2 주소는 상기 데이터에 대한 타겟(target)으로서 상기 제2 메모리 장치를 식별하는,장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 명령은 상기 제1 메모리 어레이에 상기 제1 메모리 장치의 메모리 어레이로부터 데이터를판독하고 상기 데이터를 상기 제2 메모리 어레이로 전송하도록 지시하는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 명령은 상기 제2 메모리 어레이에 상기 데이터를 수신하고 상기 데이터를 상기 제2 메모리 어레이의 메모리 어레이에 기록하도록 지시하는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 명령은 상기 복수의 메모리 장치들에 의해 공유되는 버스 상에서 데이터를 전송하기 위해 상기 제1 메모리 장치 및 상기 제2 메모리 장치를 선택하는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 명령은 제2 메모리 장치가 AI 연산을 수행하기 위해 인공지능(AI) 모드로 들어갈 수 있게 하는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 입력 데이터는 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로복사되는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 뉴럴 네트워크 데이터는 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로 복사되는, 장치."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "시스템에 있어서,컨트롤러; 및상기 컨트롤러에 연결된 복수의 메모리 장치들을 포함하고, 여기서 상기 복수의 메모리 장치들의 각각은 뉴럴네트워크의 일부로서 구성되고 복수의 메모리 어레이들을 포함하고, 상기 컨트롤러는:공개특허 10-2022-0052355-3-제1 메모리 장치에 대한 제1 훈련 또는 추론 연산을 실행하기 위해 제1 명령을 전송하고;상기 제1 메모리 장치로부터 제2 메모리 장치로 데이터를 복사하고 상기 제2 메모리 장치에 대해 제2 훈련 또는추론 연산을 실행하기 위해 제2 명령을 전송하도록 구성되며, 상기 명령은 제1 주소 및 제2 주소를 포함하고,상기 제1 주소는 상기 제1 훈련 또는 추론 연산과 연관된 데이터를 저장하는 상기 제1 메모리 장치를 식별하고,상기 제2 주소는 상기 데이터에 대한 타겟으로서 상기 제2 메모리 장치를 식별하는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 컨트롤러는 제1 입력 데이터를 상기 제1 메모리 장치로 전송하고 제2 입력 데이터를 상기제2 메모리 장치로 전송하도록 구성되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서, 뉴럴 네트워크 데이터는 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로 복사되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 뉴럴 네트워크 데이터는 상기 제1 훈련 또는 추론 연산을 수행하기 위해 상기 제1 메모리 장치에 의해 사용되며, 상기 제2 훈련 또는 추론 연산을 수행하기 위해 상기 제2 메모리 장치에 의해 사용되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제8항에 있어서, 상기 컨트롤러는 입력 데이터를 상기 제1 메모리 장치 및 상기 제2 메모리 장치로 전송하도록구성되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제8항에 있어서, 입력 데이터는 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로 복사되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8항에 있어서, 활성 함수 데이터(activation function data)는 상기 제1 메모리 장치로부터 상기 제2 메모리장치로 복사되는, 시스템."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "방법에 있어서,제1 주소 및 제2 주소를 포함하는 명령을 수신하는 단계-상기 제1 주소는 훈련 또는 추론 연산에 대한 데이터를저장하는 제1 메모리 장치를 식별하고, 상기 제2 주소는 상기 데이터에 대한 타겟으로서 제2 메모리 장치를 식별함-;상기 명령에 응답하여 그리고 상기 명령의 상기 제1 주소 및 상기 제2 주소에 적어도 부분적으로 기초하여 데이터를 제1 장치로부터 제2 장치로 전송하는 단계; 및상기 제1 장치로부터의 상기 데이터를 사용하여 상기 제2 메모리 장치에서 상기 훈련 또는 추론 연산을 실행하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로 데이터를 복사하는 단계는 상기 훈련 또는 추론 연산에 대한 뉴럴 네트워크 데이터를 복사하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서, 상기 제1 메모리 장치로부터 상기 제2 메모리 장치로 데이터를 복사하는 단계는 상기 훈련 또는 추론 연산에 대한 입력 데이터를 복사하는 단계를 포함하는, 방법.공개특허 10-2022-0052355-4-청구항 18 제15항 내지 제17항 중 어느 한 항에 있어서, 상기 제1 메모리 장치에 대해 다른 훈련 또는 추론 연산을 수행하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항 내지 제17항 중 어느 한 항에 있어서, 상기 제1 주소 및 제3 주소를 포함하는 다른 명령을 수신하는 것에 응답하여 상기 제1 메모리 장치로부터 메모리 시스템의 제3 메모리 장치로 상기 데이터를 복사하는 단계를더 포함하고, 상기 제1 주소는 상기 훈련 또는 추론 연산에 대한 데이터를 저장하는 상기 제1 메모리 장치를 식별하고 상기 제3 주소는 상기 데이터에 대한 타겟으로서 상기 제2 메모리 장치를 식별하는, 방법."}
{"patent_id": "10-2022-7009870", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 제1 메모리 장치로부터 복사된 상기 데이터를 사용하여 상기 제3 메모리 장치에 대해 다른 훈련 또는 추론 연산을 수행하는 단계를 더 포함하는, 방법."}
{"patent_id": "10-2022-7009870", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 인공지능(AI) 모드를 갖는 메모리 시스템에서 데이터를 복사하는 것과 관련된 장치 및 방법을 포함한 다. 장치는 장치가 인공 지능(AI) 모드에서 동작함을 나타내는 명령, 복수의 레지스터들의 상태를 기초로 AI 액 셀러레이터를 이용하여 AI 연산을 수행하기 위한 명령, 및 AI 연산을 수행하는 메모리 장치들 사이에 데이터를 복사하기 위한 명령을 수신할 수 있다. 메모리 시스템은, 제1 메모리 장치가 제1 AI 연산에서 뉴럴 네트워크 데 이터, 활성 함수 데이터, 바이어스 데이터, 입력 데이터 및/또는 출력 데이터를 사용할 수 있고 제2 메모리 장치 는 제2 AI 연산에서 뉴럴 네트워크 데이터, 활성 함수 데이터, 바이어스 데이터, 입력 데이터, 및/또는 출력 데 이터를 사용할 수 있도록, 뉴럴 네트워크 데이터, 활성 함수 데이터, 바이어스 데이터, 입력 데이터 및/또는 출 력 데이터를 제1 메모리 장치에서 제2 메모리 장치로 복사할 수 있다."}
{"patent_id": "10-2022-7009870", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 일반적으로 메모리 장치에 관한 것으로서, 보다 상세하게는, 인공지능 모드를 가진 메모리 시스템에 서 데이터를 복사하기 위한 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2022-7009870", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "메모리 장치는 컴퓨터 또는 다른 전자 장치의 내부, 반도체, 집적 회로(integrated circuit)에 일반적으로 제공 된다. 휘발성(volatile) 및 비휘발성(non-volatile) 메모리를 포함하는 다양한 유형의 메모리가 있다. 휘발성 메모리는 그 데이터를 유지하기 위해 전력을 요구할 수 있고, RAM(random-access memory), DRAM(dynamic random access memory), 및 SDRAM(synchronous dynamic random access memory) 등을 포함한다. 비휘발성 메모 리는 전력이 공급되지 않을 때 저장된 데이터를 유지하여 영구적인 데이터를 제공할 수 있고 낸드 플래시 메모 리(NAND flash memory), 노어 플래시 메모리(NOR flash memory), ROM(read only memory), EEPROM(Electrically Erasable Programmable ROM), EPROM(Erasable Programmable ROM), 및 PCRAM(phase change random access memory), RRAM(resistive random access memory), 및 MRAM(magnetoresistive random access memory)과 같은 저항 가변 메모리(resistance variable memory)를 포함할 수 있다. 메모리는 또한 광범위한 전자 애플리케이션을 위한 휘발성 및 비휘발성 데이터 저장소로 활용된다. 비휘발성 메 모리는 예를 들어, 개인용 컴퓨터(personal computer), 휴대용 메모리 스틱(portable memory stick), 디지털 카메라(digital camera), 휴대 전화(cellular telephone), MP3 플레이어와 같은 휴대용 음악 플레이어 (portable music player), 영상 플레이어(movie player) 및 기타 전자 장치에 사용될 수 있다. 메모리 셀은 어 레이로 배열될 수 있으며, 어레이는 메모리 장치에서 사용된다."}
{"patent_id": "10-2022-7009870", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시는 인공지능(artificial intelligence, AI) 모드를 가진 메모리 시스템에서 데이터를 복사하는 것에 관 한 장치 및 방법을 포함한다. 예시적인 장치는 장치가 인공지능(AI) 모드에서 동작하도록 나타내는 명령, 복수 의 레지스터의 상태에 기초한 AI 액셀러레이터를 이용하여 AI 연산을 수행하는 명령, 및 AI 연산을 수행하는 메 모리 장치 사이에 데이터를 복사하는 명령을 포함할 수 있다. 메모리 장치 간에 복사되는 데이터는 뉴럴 네트워 크 데이터, 활성화 함수 데이터, 바이어스 데이터, AI 작업과 관련된 입력 데이터 및/또는 출력 데이터일 수 있 다. AI 액셀러레이터는 AI 연산과 연관된 동작(예를 들어, 다른 연산 중, 논리 연산(logic operation))을 수행 하도록 구성된 하드웨어(hardware), 소프트웨어(software) 및/또는 펌웨어(firmware)를 포함할 수 있다. 하드웨 어는 AI 연산에 연관된 논리 연산과 같은 동작을 수행하기 위한 가산기(adder) 및/또는 곱셈기(multiplier)로 구성된 회로를 포함할 수 있다. 메모리 장치는 AI 연산을 수행하기 위해 AI 액셀러레이터에 의해 이용되는 메모리 셀의 에러이에 저장된 데이터 를 포함할 수 있다. 뉴런(neuron) 데이터, 활성 함수(activation function) 데이터, 및/또는 바이어스 값(bias value) 데이터와 같은 뉴럴 네트워크(neural network)를 정의하는 데이터와 함께, 입력 데이터는 메모리 장치에 저장되고, 메모리 장치 사이에 복사되고, AI 연산을 수행하는데 이용될 수 있다. 또한, 메모리 장치는 AI 연산 의 일부 결과를 저장하기 위한 임시 블록 및 AI 연산의 결과를 저장하기 위한 출력 블록을 포함할 수 있다. 호 스트는 출력 블록에 대한 읽기 명령을 발행할 수 있고 출력 블록의 결과는 AI 연산이 수행될 것을 요청하는 명 령의 수행을 완료하기 위해 호스트로 보내질 수 있다. 메모리 시스템의 호스트 및/또는 컨트롤러는 AI 연산을 수행하는 메모리 장치 사이에 입력 및/또는 출력 데이터 를 복사하기 위해 명령을 발행할 수 있다. 예를 들어, 메모리 시스템은 제1 메모리 장치가 제1 AI 연산에서 입 력 데이터를 사용할 수 있고 제2 메모리 장치가 제2 AI 연산에서 입력 데이터를 사용할 수 있도록 제1 메모리 장치에서 제2 메모리 장치로 입력 데이터를 복사할 수 있다. 제1 메모리 장치에서 제2 메모리 장치로 복사된 입 력 데이터는 호스트로부터 수신될 수 있다. 제1 AI 연산을 수행하는 제1 메모리 장치 및 제2 AI 연산을 수행하 는 제2 메모리 장치는 동일하거나 상이한 뉴럴 네트워크 데이터, 활성 함수 데이터, 및/또는 바이어스 데이터를 포함할 수 있다. 제1 및 제2 AI 연산들의 결과는 컨트롤러 및/또는 호스트에 보고되고 서로 비교될 수 있다. 메모리 시스템의 호스트 및/또는 컨트롤러는 AI 연산을 수행하는 메모리 장치들 간에 뉴럴 네트워크 데이터, 활 성 함수 데이터, 바이어스 데이터를 복사하기 위한 명령을 발행할 수 있다. 메모리 시스템은 제1 메모리 장치가 제1 AI 연산에서 뉴럴 네트워크 데이터, 활성 함수 데이터, 및/또는 바이어스 데이터를 사용할 수 있고, 제2 메 모리 장치가 제2 AI 연산에서 뉴럴 네트워크 데이터, 활성 함수 데이터, 및/또는 바이어스 데이터를 사용할 수 있도록 뉴럴 네트워크 데이터, 활성 함수 데이터 및/또는 바이어스 데이터를 제1 메모리 장치에서 제2 메모리 장치로 복사할 수 있다. 제1 및 제2 AI 연산들의 결과들은 메모리 시스템의 호스트 및/또는 컨트롤러에 보고되 어 서로 비교될 수 있다. 메모리 시스템의 각각의 메모리 장치는 AI 액셀러레이터에 입력 데이터 및 뉴런 데이터를 보낼 수 있고 AI 액셀 러레이터는 입력 데이터 및 뉴런 데이터에 대해 AI 연산을 수행할 수 있다. 메모리 장치는 메모리 장치의 임시 블록에 AI 연산의 결과를 저장할 수 있다. 메모리 장치는 AI 액셀러레이터에 바이어스 값 데이터를 적용하고 임 시 블록의 결과를 보낼 수 있다. AI 액셀러레이터는 바이어스 값 데이터를 이용하여 임시 블록의 결과에 대해 AI 연산을 수행할 수 있다. 메모리 장치는 메모리 장치의 임시 블록에 AI 연산의 결과를 저장할 수 있다. 메모 리 장치는 AI 액셀러레이터에 임시 블록의 결과 및 활성 함수 데이터를 전송할 수 있다. AI 액셀러레이터는 임 시 블록의 결과 및/또는 활성 함수 데이터에 대해 AI 연산을 수행할 수 있다. 메모리 장치는 메모리 장치의 출 력 블록에 AI 연산의 결과를 저장할 수 있다. AI 액셀러레이터는 호스트에서 수행되는 AI 연산과 비교할 때 AI 연산에 관한 지연 속도(latency) 및 소비 전력 (power consumption)을 줄일 수 있다. 호스트에서 수행되는 AI 연산은 메모리 장치와 호스트 사이에서 교환되는 데이터를 이용하고, 이는 AI 연산에 대한 지연 속도 및 소비 전력을 추가한다. 본 개시의 실시예에 따라 수행된 AI 연산이 AI 액셀러레이터 및 메모리 어레이를 이용하여 메모리 장치에서 수행될 수 있지만, 여기서 데이터는 AI 연산을 수행하는 동안 메모리 장치로부터 전송되지 않는다.본 개시의 다음의 상세한 설명에서, 본 문서의 일부를 구성하는 첨부 도면을 참조하고, 본 개시의 복수의 실시 예가 어떻게 실시될 수 있는지 도시의 방법에 의해 도시된다. 이러한 실시예는 통상의 기술자가 본 개시의 실시 예를 구현할 수 있도록 충분히 설명되며, 다른 실시예가 활용될 수 있고, 본 개시의 범위를 벗어나지 않고 프로 세스, 전기적 및/또는 구조적 변경이 이루어질 수 있음을 이해해야 한다. 여기에서 사용된 것처럼, 지정자 \"N\" 은 지정된 복수의 특정 특징이 본 개시의 복수의 실시예와 함께 포함될 수 있음을 나타낸다. 여기서 사용된, \"복수\"는 그러한 것들의 하나 이상을 나타낼 수 있다. 예를 들어, 복수의 메모리 장치는 하나 이상의 메모리 장치를 나타낼 수 있다. 추가적으로, 특히 도면의 참조 번호와 관련하여 여기서 사용된 \"N\"과 같 은 지정자는 지정된 복수의 특정 특징이 본 개시의 복수의 실시예와 함께 포함될 수 있음을 나타낸다. 여기의 도면은 첫 번째 숫자가 도면 그림 번호에 대응하고 나머지 숫자가 도면의 요소 또는 구성요소를 식별하 는 번호 지정 규칙을 따른다. 다른 도면 사이의 유사한 구성 또는 구성 요소는 유사한 숫자의 사용에 의해 식별 될 수 있다. 이해되는 바와 같이, 여기의 다양한 실시예에서 도시된 요소는 본 개시의 복수의 추가적인 실시예 를 제공하기 위해 추가, 교환 및/또는 제거될 수 있다. 또한, 도면에서 제공되는 요소의 비율 및 상대적인 크기 는 본 개시의 다양한 실시예를 도시하기 위한 것으로서 한정적인 의미로서 사용되어서는 안 된다. 도 1a는 본 개시의 복수의 실시예에 따른 메모리 장치를 포함하는 컴퓨팅 시스템 형태의 장치의 블록 도이다. 여기서 사용된, 메모리 장치, 메모리 어레이(125-1,..., 125-N), 메모리 컨트롤러 및/또는 AI 액셀러레이터는 또한 별도의 \"장치\"로 간주될 수 있다. 도 1a에 도시된 것처럼, 호스트는 메모리 장치에 결합될 수 있다. 호스트는 랩톱 컴퓨터, 개인 용 컴퓨터, 디지털 카메라, 디지털 기록 및 재생 장치, 모바일 전화기, PDA, 메모리 카드 리더, 인터페이스 허 브, 다른 호스트 시스템일 수 있고, 메모리 액세스 장치, 예를 들어, 프로세서를 포함할 수 있다. 기술 분야의 통상의 기술자는 \"프로세서\"가 병렬 프로세싱 시스템, 복수의 코프로세서(coprocessors) 등과 같은 하나 이상의 프로세서를 의도할 수 있음을 이해할 것이다. 호스트는 메모리 장치와 통신하기 위한 호스트 컨트롤러를 포함한다. 호스트 컨트롤러는 메모리 장치에 명령을 보낼 수 있다. 호스트 컨트롤러는 다른 연산들 중, AI 연산, 데이터 읽기, 데 이터 쓰기 및/또는 데이터 삭제를 수행하기 위해 메모리 장치, 메모리 장치의 메모리 컨트롤러, 및/또는 메모리 장치의 AI 액셀러레이터와 통신할 수 있다. AI 연산은 머신 러닝 또는 뉴럴 네트워크 연산을 포함할 수 있고, 이는 훈련 연산 또는 추론 연산 또는 둘 모두를 포함할 수 있다. 일부 예시에서, 각각 의 메모리 장치는 뉴럴 네트워크 또는 딥 뉴럴 네트워크(예를 들어, 3개 이상의 히든 레이어를 가진 네트 워크) 내에서 레이어를 표현할 수 있다. 또는 각각의 메모리 장치는 뉴럴 네트워크의 노드이거나 포함할 수 있고, 뉴럴 네트워크의 레이어는 다중 메모리 장치 또는 몇몇 메모리 장치의 부분으로 구성될 수 있다. 메모리 장치는 메모리 어레이의 AI 연산에 대한 가중치(또는 모델)을 저장할 수 있다. 물리적 호스트 인터페이스는 물리적 호스트 인터페이스에 대한 호환 가능한 수용기(receptor)를 가진 메모리 장 치 및 호스트 사이에 제어, 주소, 데이터 및 다른 신호를 전달하기 위한 인터페이스를 제공할 수 있 다. 신호는 예를 들어 데이터 버스 및/또는 주소 버스와 같은 복수의 버스에서 호스트 및 메모리 장치 사이에 통신 될 수 있다. 메모리 장치는 컨트롤러, 액셀러레이터 및 메모리 어레이(125-1,...,125-N)를 포함할 수 있다. 메모리 장치는 다른 유형의 장치 중에서, LPDDR5 장치와 같은 저전력 이중 데이터 속도 동적 랜덤 액세스 메모리(low-power double data rate dynamic random access memory), 및/또는 GDDR6 장치와 같은 그래픽 이중 데이터 동적 랜덤 액세스 메모리(graphics double data rate dynamic random access memory)일 수 있다. 메모 리 어레이(125-1,...,125-N)는 휘발성 메모리 셀(예를 들어, 다른 유형의 휘발성 메모리 셀 중에서, DRAM 메모 리 셀) 및/또는 비휘발성 메모리 셀(예를 들어, 다른 유형의 비휘발성 메모리 셀 중에서, RRAM 메모리 셀)과 같 은 복수의 메모리 셀을 포함할 수 있다. 메모리 장치는 메모리 어레이(125-1,...,125-N)에 데이터를 읽기 및/또는 쓰기 할 수 있다. 메모리 어레이(125-1,...,125-N)는 메모리 장치에서 수행되는 AI 연산 중 사용 된 데이터를 저장할 수 있다. 메모리 어레이(125-1,...,125-N)는 메모리 장치에서 AI 연산을 수행하기 위 해 입력, 출력, 뉴럴 네트워크의 가중치 매트릭스 및 바이어스 정보, 및/또는 AI 액셀러레이터에 의해 사용된 활성 함수 정보를 저장할 수 있다. 호스트 컨트롤러, 메모리 컨트롤러, 및/또는 메모리 장치의 AI 액셀러레이터는 예를 들어, 하드웨어, 펌웨어, 및/또는 소프트웨어와 같은 제어 회로를 포함할 수 있다. 하나 이상의 실시예에서, 호스트컨트롤러, 메모리 컨트롤러 및/또는 AI 액셀러레이터는 물리적 인터페이스를 포함하는 인쇄 회 로 기판에 결합된 ASIC(application specific integrated circuit)일 수 있다. 또한, 메모리 장치의 메모 리 컨트롤러는 레지스터를 포함할 수 있다. 레지스터는 AI 연산을 수행하기 위해 AI 액셀러레이 터에 대한 정보를 제공하도록 프로그램 될 수 있다. 레지스터는 임의의 수의 레지스터를 포함할 수 있다. 레지스터는 호스트, 메모리 컨트롤러, 및/또는 AI 액셀러레이터에 의해 쓰기 및/또는 읽기 될 수 있다. 레지스터는 AI 액셀러레이터에 대한 입력, 출력, 뉴럴 네트워크, 및/또는 활성 함수 정 보를 제공할 수 있다. 레지스터는 메모리 장치에 대한 연산 모드를 선택하기 위한 모드 레지스터 를 포함할 수 있다. AI 모드 동작은 예를 들어, 0xAA 및/또는 0x2AA와 같은, 메모리 장치의 일반 연 산(normal operation)에 관한 레지스터에 액세스를 금지하고 AI 연산에 관한 레지스터에 액세스를 허용하는 레 지스터에 단어를 기록함으로써 선택될 수 있다. 또한, AI 모드 동작은 메모리 장치에 저장된 키에 의 해 인증되는 암호화 알고리즘을 이용하는 서명을 사용하여 선택될 수 있다. 레지스터는 메모리 어레이 (125-1,..., 125-N)에 또한 위치되고 컨트롤러에 의해 접근 가능 할 수 있다. AI 액셀러레이터는 AI 연산을 수행하기 위한 하드웨어 및/또는 소프트웨어/펌웨어를 포함할 수 있다. 하드웨어는 AI 연산에 관한 논리 연산을 수행하기 위해 가산기/곱셈기를 포함할 수 있다. 메모 리 컨트롤러 및/또는 액셀러레이터는 AI 연산을 수행하기 위해 호스트로부터 명령을 수신할 수 있다. 메모리 장치는 AI 액셀러레이터, 메모리 어레이(125-1,...,125-N)의 데이터 및 레지스터(13 0)의 정보를 이용하여 호스트의 명령에 요청된 AI 연산을 수행할 수 있다. 메모리 장치는 예를 들어, 결과 및/또는 오류 정보와 같은 AI 연산의 정보를 호스트에 다시 보고할 수 있다. AI 액셀러레이터에 의해 수행된 AI 연산은 외부 처리 리소스를 사용하지 않고 수행될 수 있다. 메모리 어레이(125-1,...,125-N)는 메모리 시스템을 위한 메인 메모리를 제공할 수 있거나 메모리 시스템 전체 에 걸쳐 추가 메모리 또는 저장소로서 사용될 수 있다. 각각의 메모리 어레이(125-1,...,125-N)는 메모리 셀의 복수의 메모리 블록을 포함할 수 있다. 메모리 셀의 블록은 메모리 장치에 의해 수행된 AI 연산 동안 사용 된 데이터를 저장하는데 이용될 수 있다. 메모리 어레이(125-1,...,125-N)는 예를 들어, DRAM 메모리 셀을 포함 할 수 있다. 실시예는 메모리 장치의 특정 유형을 제한하지 않는다. 예를 들어, 메모리 장치는 그 중에서도 RAM, ROM, DRAM, SDRAM, PCRAM, RRAM, 3D XPoint, 및 플래쉬 메모리(flash memory)를 포함할 수 있다. 예를 들어, 메모리 장치는 하나 이상의 추론 단계이거나 이를 포함하는 AI 연산을 수행할 수 있다. 메모리 어레이는 뉴럴 네트워크의 레이어이거나 각각의 개별 노드일 수 있고 메모리 장치는 레이어일 수 있 고; 또는 메모리 장치는 더 큰 네트워크 내의 노드일 수 있다. 추가적으로 또는 대안적으로, 메모리 어레 이는 노드 내에서 이용(예를 들어, 합산)되기 위해 데이터 또는 가중치 또는 두 모두를 저장할 수 있다. 각각의 노드(예를 들어, 메모리 어레이)는 동일한 또는 상이한 메모리 어레이의 셀에서 읽은 데이터 의 입력과 메모리 어레이의 셀에서 읽은 가중치를 결합할 수 있다. 가중치와 데이터의 결합은 예를 들어, 가산기/곱셈기를 이용하여 하드웨어 내에서 또는 메모리 어레이의 주변부 내에서 합산될 수 있 다. 그러한 경우, 합산 결과는 하드웨어 내에서 또는 메모리 어레이의 주변부에서 표현되거나 인스턴 스화되는 활성 함수로 전달될 수 있다. 결과는 또 다른 메모리 장치로 전달되거나 메모리 장치를 포 함하는 네트워크를 훈련하거나 결정을 내리기 위해 AI 액셀러레이터 (예를 들어, 소프트웨어/펌웨어) 내에서 사용될 수 있다. 메모리 장치를 사용하는 네트워크는 지도 또는 비지도 학습이 가능하거나 이를 위해 사용될 수 있다. 이는 다른 학습 또는 훈련 체제와 결합될 수 있다. 일부 케이스에서, 훈련 네트워크 또는 모델은 메모리 장치와 함께 사용되거나 불려 오고, 메모리 장치의 연산은 주로 또는 배타적으로 추론과 연관된다. 도 1a의 실시예는 본 개시의 실시예를 모호하게 하지 않도록 도시되지 않은 추가 회로를 포함할 수 있다. 예를 들어, 메모리 장치는 I/O 회로를 통한 I/O 연결을 통해 제공된 어드레스 신호를 래치(latch)하기 위한 어 드레스 회로를 포함할 수 있다. 어드레스 신호는 메모리 어레이(125-1,...,125-N)에 액세스하기 위해 행 디코더 (row decoder) 또는 열 디코더(column decoder)에 의해 수신되고 디코딩 될 수 있다. 주소 입력 연결의 수가 메 모리 어레이(125-1,...,125-N)의 밀도 및 아키텍처(architecture)에 의존할 수 있음을 통상의 기술자는 이해할 것이다. 도 1b는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치를 가진 메모리 시스템 을 포함하는 컴퓨팅 시스템의 유형의 장치의 블록도이다. 여기서 사용된 바와 같이, 메모리 장치(120-1, 120-2, 120-3, 및 120-X), 컨트롤러 및/또는 메모리 시스템은 또한 \"장치\"로 별도 간주될 수 있다. 도 1b에 도시된 것처럼, 호스트는 메모리 시스템에 결합될 수 있다. 호스트는 다른 호스트 시스 템 중 랩톱 컴퓨터, 개인용 컴퓨터, 디지털 카메라, 디지털 기록 및 재생 장치, 이동 전화, PDA, 메모리 카드 리더, 인터페이스 허브일 수 있고, 예를 들어, 프로세서와 같은 메모리 액세스 장치를 포함할 수 있다. 통상의 기술자는 \"프로세서\"가 병렬 프로세싱 시스템, 복수의 코프로세서 등과 같은 하나 이상의 프로세서를 의도할 수 있음을 이해해야 한다. 호스트는 메모리 시스템과 통신하는 호스트 컨트롤러를 포함한다. 호스트 컨트롤러는 메모 리 시스템에 명령을 보낼 수 있다. 메모리 시스템은 컨트롤러 및 메모리 장치(120-1, 120-2, 120-3, 및 120-X)를 포함할 수 있다. 메모리 장치(120-1, 120-2, 120-3, 및 120-X)는 도 1a에 관하여 상기에서 설명된 메모리 장치일 수 있고 AI 연산을 수행하기 위해 하드웨어, 소프트웨어 및/또는 펌웨어를 가진 AI 액셀러레이터를 포함할 수 있다. 호스트 컨트롤러는 다른 연산 중 AI 연산, 데이터 읽기, 데이터 쓰기, 및 /또는 데이터 삭제를 수행하기 위해 컨트롤러 및/또는 메모리 장치(120-1, 120-2, 120-3, 및 120-X)와 통 신할 수 있다. 물리적 호스트 인터페이스는 물리적 호스트 인터페이스에 대한 호환 가능한 수용기를 가진 메모 리 시스템 및 호스트 사이에 제어, 주소, 데이터 및 다른 신호를 전달하기 위한 인터페이스를 제공할 수 있다. 신호는 예를 들어, 데이터 버스 및/또는 주소 버스와 같은 복수의 버스에서 호스트 및 메모리 시 스템 사이에 통신 될 수 있다. 메모리 시스템은 버스를 통해 메모리 장치(120-1, 120-2, 120-3, 및 120-X)에 결합된 컨트롤러(10 5)를 포함할 수 있다. 버스는 메모리 시스템의 메모리 장치의 일부 또는 전부가 동작할 때 버스의 전 체 대역폭이 소비될 수 있도록 구성될 수 있다. 예를 들어, 도 1b에 도시된 4개의 메모리 장치(120-1, 120-2, 120-3, 및 120-X) 중 2개의 메모리 장치는 버스의 전체 대역폭을 이용하는 동안 동작하도록 구성될 수 있 다. 예를 들어, 컨트롤러는 동일한 시간과 같은 특정 기간 동안 연산을 위해 메모리 장치(120-1 및 120- 3)를 선택할 수 있는 선택 라인에 명령을 보낼 수 있다. 컨트롤러는 동일한 시간과 같은 특정 기간 동안 연산을 위해 메모리 장치(120-2 및 120-X)를 선택할 수 있는 선택 라인에 명령을 보낼 수 있다. 복수 의 실시예에서, 컨트롤러는 메모리 장치(120-1, 120-2, 120-3, 및 120-X)의 임의의 결합을 선택하기 위해 선택 라인(117 및 119)에 명령을 보내도록 구성될 수 있다. 복수의 실시예에서, 선택 라인의 명령은 메모리 장치(120-1 및 120-3)를 선택하기 위해 사용될 수 있고 선 택 라인의 명령은 메모리 장치(120-2 및 120-X)를 선택하기 위해 사용될 수 있다. 선택된 메모리 장치는 AI 연산의 수행 동안 사용될 수 있다. AI 연산에 관한 데이터는 버스에서 선택된 메모리 장치(120-1, 120- 2, 120-3 및 120-X) 사이에 복사 및/또는 전송될 수 있다. 예를 들어, AI 연산의 제1 부분은 메모리 장치(120- 1)에서 수행될 수 있고 AI 연산의 제1 부분의 출력은 버스에서 메모리 장치(120-3)로 복사될 수 있다. AI 연산의 제1 부분의 출력은 AI 연산의 제2 부분의 입력으로서 메모리 장치(120-3)에 의해 사용될 수 있다. 또한, AI 연산에 관한 뉴럴 네트워크 데이터, 활성 함수 데이터 및/또는 바이어스 데이터는 버스의 메모리 장치 (120-1, 120-2, 120-3, 및 120-X) 사이에서 복사될 수 있다. 도 2는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 복수의 레지스터의 블록도이다. 레지스터는 AI 레지스터일 수 있고, AI 액셀러레이터, 컨트롤러, 및/또는 메모리 장치의 메모 리 어레이(예를 들어, 도 1의 AI 액셀러레이터, 메모리 컨트롤러, 및/또는 메모리 어레이(125-1,..., 125-N))에 의한 사용을 위한, 다른 유형 정보 사이의, 입력 정보, 출력 정보, 뉴럴 네트워크 정보, 및/또는 활 성 함수 정보를 포함할 수 있다. 레지스터는 호스트, AI 액셀러레이터 및/또는 컨트롤러(예를 들어, 도 1의 호 스트, AI 액셀러레이터, 메모리 컨트롤러)의 명령에 기초하여 읽기 및/또는 쓰기 될 수 있다. 레지스터(232-0)는 메모리 장치의 AI 모드에 관한 파라미터를 정의할 수 있다. 레지스터(232-0)의 비트는 AI 연 산을 시작하고 AI 연산을 재시작하고, 레지스터의 콘텐츠가 유효함을 표시하고, 레지스터의 내용을 지우고 및/ 또는 AI 모드를 종료할 수 있다. 레지스터(232-1, 232-2, 232-3, 232-4, 및 232-5)는 AI 연산에 사용된 입력의 크기, AI 연산에 사용된 입력의 수, 및 AI 연산에 사용된 입력의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(232-7, 232-8, 232-9, 232-10, 및 232-11)는 AI 연산에 사용된 출력의 크기, AI 연산에 사용된 출력의 수, 및 AI 연산에 사용된 출력 의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(232-12)는 AI 연산 동안 사용된 입력 뱅크, 뉴런 뱅크, 출력 뱅크, 바이어스 뱅크, 활성 함수 및 임시 뱅크의 사용을 가능하게 하는데 사용될 수 있다. 레지스터(232-13, 232-14, 232-15, 232-16, 232-17, 232-18, 232-19, 232-20, 232-21, 232-22, 232-23, 232- 24, 및 232-25)는 AI 연산 동안 사용된 뉴럴 네트워크를 정의하는데 사용될 수 있다. 레지스터(232-13, 232-14, 232-15, 232-16, 232-17, 232-18, 232-19, 232-20, 232-21, 232-22, 232-23, 232-24, 및 232-25)는 AI 연산 동안 사용된 뉴럴 네트워크의 뉴런 및/또는 레이어의 크기, 수, 및 위치를 정의할 수 있다. 레지스터(232-26)는 AI 액셀러레이터의 디버그/홀드(debug/hold) 모드 및 출력이 AI 연산의 레이어에서 관찰될 수 있도록 할 수 있다. 레지스터(232-26)는 활성이 AI 연산 동안 적용될 수 있고 AI 연산이 AI 연산에서 앞으로 나아갈(예를 들어, AI 연산에서 다음 단계를 수행) 수 있음을 나타낼 수 있다. 레지스터(232-26)는 레이어의 출 력이 위치된 임시 블록이 유효함을 나타낼 수 있다. 임시 블록의 데이터는 메모리 장치의 호스트 및/또는 컨트 롤러에 의해 변경될 수 있고, 따라서 변경된 데이터는 AI 연산이 앞으로 나아가면서 AI 연산에 사용될 수 있다. 레지스터(232-27, ,232-28, 및 232-29)는 디버그/홀드 모드가 AI 연산을 중지, 뉴럴 네트워크의 내용을 변경 및 /또는 레이어의 출력을 관찰할 레이어를 정의할 수 있다. 레지스터(232-30, 232-31, 232-32, 및 232-33)는 AI 연산에서 사용된 임시 뱅크의 크기 및 AI 연산에서 사용된 임시 뱅크의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(232-30)는 AI 연산에서 사용된 제1 임시 뱅크 의 시작 주소 및 종료 주소를 정의할 수 있고 레지스터(232-33)는 AI 연산에서 사용된 제1 임시 뱅크의 시작 주 소 및 종료 주소를 정의할 수 있다. 레지스터 (232-31, 및 232-32)는 AI 연산에서 사용된 임시 뱅크의 크기를 정의할 수 있다. 레지스터(232-34, 232-35, 232-36, 232-37, 232-38, 및 232-39)는 AI 연산에 사용된 활성 함수에 관한 것일 수 있다. 레지스터(232-34)는 활성 함수 블록의 사용을 가능하게 하고, 각 뉴런에 대한 활성 함수, 각 레이어에 대 한 활성 함수의 사용을 가능하게 하고, 외부 활성 함수의 사용을 가능하게 할 수 있다. 레지스터(232-35)는 활 성 함수의 위치의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(232-36, 232-37, 232-38 및 232-39)는 활성 함수 및/또는 커스텀 정의된 활성 함수의 입력(예를 들어, x축) 및 출력(예를 들어, y축)의 해상도를 정의 할 수 있다. 레지스터(232-40, 232-41, 232-42, 232-43, 및 232-44)는 AI 연산에서 사용되는 바이어스 값의 크기, AI 연산 에서 사용되어 바이어스 값의 수, 및 AI 연산에서 사용되는 바이어스 값의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(232-45)는 AI 계산에 대한 상태 정보를 제공하고 디버그/홀드 모드에 대한 정보를 제공할 수 있다. 레 지스터(232-45)는 디버그/홀드 모드를 가능하게 하고, AI 액셀러레이터가 AI 연산을 수행하고 있음을 표시하고, AI 액셀러레이터의 전체 능력이 사용될 수 있음을 표시하고, AI 연산의 매트릭 계산만이 이루어질 수 있음을 표 시하고, 및/또는 AI 연산이 다음 뉴런 및/또는 레이어로 진행될 수 있음을 표시할 수 있다. 레지스터(232-46)는 AI 연산에 관한 오류 정보를 제공할 수 있다. 레지스터(232-46)는 AI 연산의 시퀀스에서 오 류가 있었음, AI 연산의 알고리즘에서 오류가 있었음, ECC가 정정할 수 없었던 데이터의 페이지에서 오류가 있 었음, 및/또는 ECC가 정정할 수 있었던 데이터의 페이지에 오류가 있었음을 나타낼 수 있다. 레지스터(232-47)는 AI 연산에 사용하기 위한 활성 함수를 나타낼 수 있다. 레지스터(232-47)는 복수의 기 정의 된 활성 함수 중 하나가 AI 연산에 사용 및/또는 블록에 위치된 커스텀 활성 함수가 AI 연산에 사용될 수 있음 을 나타낼 수 있다. 레지스터(232-48, 232-49 및 232-50)는 AI 연산이 실행되는 뉴런 및/또는 레이어를 나타낼 수 있다. AI 연산 동 안 오류가 발생하는 케이스에서, 레지스터(232-48, 232-49 및 232-50)는 오류가 발생된 뉴런 및/또는 레이어를. 도 3a 및 3b는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 복수의 레지 스터에서의 복수의 비트의 블록도이다. 각 레지스터(332-0,..., 332-50)는 AI 연산을 수행하는 것에 관한 정보 를 나타내기 위해 복수의 비트, 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)를 포함한 다. 레지스터(332-0)는 메모리 장치의 AI 모드에 관한 파라미터를 정의할 수 있다. 레지스터(332-0)의 비트(334- 5)는 읽기/쓰기 비트일 수 있고 1b로 프로그래밍되면 AI 연산의 정교화(elaboration)가 처음부터 재시작할 수 있음을 나타낼 수 있다. 레지스터(332-0)의 비트(334-5)는 AI 연산이 재시작되면 0b로 재설정 될 수 있다. 레지스터(332-0)의 비트(334-4)는 읽기/쓰기 비트일 수 있고 1b로 프로그래밍되면 AI 연산의 정교화 (elaboration)가 시작할 수 있음을 나타낼 수 있다. 레지스터(332-0)의 비트(334-4)는 AI 연산이 시작되면 0b로 재설정될 수 있다. 레지스터(332-0)의 비트(334-3)는 읽기/쓰기 비트일 수 있고 AI 레지스터의 내용이 1b로 프로그래밍되면 유효 하고 0b로 프로그래밍되면 무효임을 나타낼 수 있다. 레지스터(332-0)의 비트(334-2)는 읽기/쓰기 비트일 수 있고 AI 레지스터의 내용이 1b로 프로그래밍되면 삭제되는 것을 나타낼 수 있다. 레지스터(332-0)의 비 트(334-1)는 읽기 전용 비트일 수 있고 AI 액셀러레이터가 1b로 프로그래밍되면 AI 연산을 수행하고 있고 사용 임을 나타낼 수 있다. 레지스터(332-0)의 비트(334-0)는 쓰기 전용 비트일 수 있고 1b로 프로그래밍되면 메모리 장치가 AI 모드를 종료함을 나타낼 수 있다. 레지스터(332-1, 332-2, 332-3, 332-4, 및 332-5)는 AI 연산에 사용된 입력의 크기, AI 연산에 사용된 입력의 수, 및 AI 연산에 사용된 입력의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(332-1 및 332-2)의 비트 (334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 입력의 크기를 정의 할 수 있다. 입력의 크기는 다른 유형 중 부동 소수점, 정수 및/또는 더블(double)과 같은 입력 유형 및/또는 비트의 수의 측면에서 입력의 폭을 나타낼 수 있다. 레지스터(332-3 및 332-4)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 입력의 수를 나타낼 수 있다. 레지스터(332- 5)의 비트(334-4, 334-5, 334-6, 및 334-7)는 AI 연산에서 사용된 입력의 메모리 어레이에서 블록의 시작 주소 를 나타낼 수 있다. 레지스터(332-5)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에서 사용된 입력 의 메모리 어레이에서 블록의 종료 주소를 나타낼 수 있다. 시작 주소 및 종료 주소가 동일한 주소일 경우, 오직 하나의 입력 블록이 AI 연산에 대해 표시된다. 레지스터(332-7, 332-8, 332-9, 332-10, 및 332-11)는 AI 연산의 출력의 크기, AI 연산의 출력의 수, 및 AI 연 산의 출력의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(332-7 및 332-8)의 비트(334-0, 334-1, 334- 2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 출력의 크기를 정의할 수 있다. 출력의 크기는 다른 유형 중 부동 소수점, 정수 및/또는 더블(double)과 같은 출력 유형 및/또는 비트의 수의 측면에서 출력의 폭을 나타낼 수 있다. 레지스터(332-9 및 332-10)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 출력의 수를 나타낼 수 있다. 레지스터(332-11)의 비트(334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 출력의 메모리 어레이에서 블록의 시작 주소를 나타낼 수 있 다. 레지스터(332-11)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에 사용된 출력의 메모리 어레이에서 블록의 종료 주소를 나타낼 수 있다. 시작 주소 및 종료 주소가 동일한 주소일 경우, 오직 하나 의 출력 블록이 AI 연산에 대해 표시된다. 레지스터(332-12)는 AI 연산 동안 사용된 입력 뱅크, 뉴런 뱅크, 출력 뱅크, 바이어스 뱅크, 활성 함수, 및 임 시 뱅크의 사용을 가능하게 하는데 이용될 수 있다. 레지스터(332-12)의 비트(334-0)는 입력 뱅크를 활성 화할 수 있고, 레지스터(332-12)의 비트(334-1)는 뉴럴 네트워크 뱅크를 활성화할 수 있고, 레지스터(332- 12)의 비트(334-2)는 출력 뱅크를 활성화할 수 있고, 레지스터(332-12)의 비트(334-3)는 바이어스 뱅크 를 활성화할 수 있고, 레지스터(332-12)의 비트(334-4)는 활성 함수 뱅크를 활성화할 수 있고, 레지 스터(332-12)의 비트(334-5 및 334-6)는 제1 임시 뱅크 및 제2 임시 뱅크를 활성화할 수 있다. 레지스터(332-13, 332-14, 332-15, 332-16, 332-17, 332-18, 332-19, 332-20, 332-21, 332-22, 332-23, 332- 24, 및 332-25)는 AI 연산 동안 사용된 뉴럴 네트워크를 정의하는데 사용될 수 있다. 레지스터(332-13 및 332- 14)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 매트릭스의 행 (row)의 수를 정의할 수 있다. 레지스터(332-15 및 332-16)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 매트릭스의 열(column)의 수를 정의할 수 있다. 레지스터(332-17 및 332-18)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산 에 사용된 뉴런의 크기을 정의할 수 있다. 뉴런의 크기는 다른 유형 중에서 부동 소수점, 정수 및/또는 더 블(double)과 같은 입력의 유형 및/또는 비트의 수의 측면에서 뉴런의 폭을 나타낼 수 있다. 레지스터(332-19, 332-20, 및 322-21)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 뉴럴 네트워크의 뉴런의 수를 나타낼 수 있다. 레지스터(332-22)의 비트(334-4, 334-5, 334-6, 및 334- 7)는 AI 연산에서 사용된 뉴런의 메모리 어레이에서 블록의 시작 주소를 나타낼 수 있다. 레지스터(332- 5)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에서 사용된 뉴런의 메모리 어레이에서 블록의 종료 주소 을 나타낼 수 있다. 시작 주소 및 종료 주소가 동일한 주소인 경우, 오직 하나의 뉴런 블록이 AI 연산에 대해 표시된다. 레지스터(332-23, 332-24, 및 322-25)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 뉴럴 네트워크의 레이어 수를 나타낼 수 있다. 레지스터(332-26)는 AI 연산의 레이어에서 관찰될 수 있도록 AI 액셀러레이터의 디버그/홀드 모드 및 출력을 가 능하게 할 수 있다. 레지스터(332-26)의 비트(334-0)는 AI 액셀러레이터가 디버그/홀드 모드에 있고 활성 함수 가 AI 연산 중 적용될 수 있음을 나타낼 수 있다. 레지스터(332-26)의 비트(334-1)는 AI 연산에서 앞으로 나갈 수 있음(예를 들어, AI 연산에서 다음 단계를 수행)을 표시할 수 있다. 레지스터(232-26)의 비트 (334-2) 및 비트(334-3)는 레이어의 출력이 위치하는 임시 블록이 유효(388 및 389)임을 나타낼 수 있다. 임시 블록의 데이터는 메모리 장치의 컨트롤러 및/또는 호스트에 의해 변경될 수 있으므로, 변경된 데이터는 AI 연산 이 나아가면서 AI 연산에서 사용될 수 있다. 레지스터(332-27, 332-28, 및 332-29)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334- 7)는 디버그/홀드 모드가 AI 연산을 중지하고 레이어의 출력을 관찰할 레이어를 정의할 수 있다. 레지스터(332-30, 332-31, 332-32, 및 332-33)는 AI 연산에 사용된 임시 뱅크의 크기 및 AI 연산에 사용된 임 시 뱅크의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스터(332-30)의 비트(334-4, 334-5, 334-6, 및 334- 7)는 AI 연산에서 사용된 제1 임시 뱅크의 시작 주소를 정의할 수 있다. 레지스터(332-30)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에 사용된 제1 임시 뱅크의 종료 주소를 정의할 수 있다. 레지스터 (332-31 및 332-32)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 임시 뱅크의 크기를 정의할 수 있다. 임시 뱅크의 크기는 다른 유형 중에서 부동 소수점, 정수 및/또는 더 블(double)과 같은 입력의 유형 및/또는 비트의 수의 측면에서 임시 뱅크의 폭을 나타낼 수 있다. 레지스터 (332-33)의 비트(334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 제2 임시 뱅크의 시작 주소를 정의 할 수 있다. 레지스터(332-34)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에 사용된 제2 임시 뱅크의 종료 주소를 정의할 수 있다. 레지스터(332-34, 332-35, 332-36, 332-37, 332-38, and 332-39)는 AI 연산에 사용된 활성 함수에 연관될 수 있다. 레지스터(332-34)의 비트(334-0)는 활성 함수 블록의 사용을 활성화할 수 있다. 레지스터(332- 34)의 비트(334-1)는 뉴런에 AI를 유지하고 각 뉴런에 대한 활성 함수의 사용을 가능하게 할 수 있다. 레 지스터(332-34)의 비트(334-2)는 레이어에 AI를 유지하고 각 레이어의 활성 함수의 사용을 가능하게 할 수 있다. 레지스터(332-34)의 비트(334-3)는 외부 활성 함수의 사용을 가능하게 할 수 있다. 레지스터(332-35)의 비트(334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 활성 함수 뱅크의 시작 주소 를 정의할 수 있다. 레지스터(332-35)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에 사용된 활성 함수 뱅크의 종료 주소를 정의할 수 있다. 레지스터(332-36 및 332-37)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 활성 함수의 입력(예를 들어 x 축)의 해상도를 정의할 수 있 다. 레지스터(332-38 및 332-39)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 커스 텀 활성 함수의 주어진 x축 값에 대한 활성 함수의 출력(예를 들어, y축) 및/또는 해상도를 정의할 수 있 다. 레지스터(332-40, 332-41, 332-42, 332-43, 및 332-44)는 AI 연산에 사용된 바이어스 값의 크기, AI 연산에 사 용된 바이어스 값의 수, 및 AI 연산에 사용된 바이어스 값의 시작 주소 및 종료 주소를 정의할 수 있다. 레지스 터(332-40 및 332-41)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용 된 바이어스 값의 크기를 정의할 수 있다. 바이어스 값의 크기는 다른 유형 중에서 부동 소수점, 정수 및 /또는 더블(double)과 같은 바이어스 값의 유형 및/또는 비트의 수의 측면에서 바이어스 값의 폭을 나타낼 수 있다. 레지스터(332-42 및 332-43)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 바이어스 값의 수를 나타낼 수 있다. 레지스터(332-44)의 비트(334-4, 334-5, 334-6, 및 334-7)는 AI 연산에 사용된 바이어스 값의 메모리 어레이에서 블록의 시작 주소를 나타낼 수 있다. 레지 스터(332-44)의 비트(334-0, 334-1, 334-2, 및 334-3)는 AI 연산에 사용된 바이어스 값의 메모리 어레이에서 블록의 종료 주소를 나타낼 수 있다. 시작 주소 및 종료 주소가 동일한 주소인 경우, 오직 하나의 바이어스 값 블록이 AI 연산에 대해 표시된다. 레지스터(332-45)는 AI 계산에 대한 상태 정보를 제공하고 디버그/홀드 모드에 대한 정보를 제공할 수 있다. 레 지스터(332-45)의 비트(334-0)는 디버그/홀드 모드를 활성화할 수 있다. 레지스터의 비트(334-1)는 AI 액 셀러레이터가 사용중이고 AI 연산을 수행하고 있음을 나타낼 수 있다. 레지스터(332-45)의 비트(334-2)는 AI 액셀러레이터가 켜짐 및/또는 AI 액셀러레이터의 전체 능력이 사용될 수 있음을 나타낼 수 있다. 레지 스터(332-45)의 비트(334-3)는 AI 연산의 매트릭스 계산이 수행되어야 함을 나타낼 수 있다. 레지스터 (332-45)의 비트(334-4)는 AI 연산이 앞으로 나아갈 수 있음 및 다음 뉴런 및/또는 레이어로 진행할 수있음을 나타낼 수 있다. 레지스터(332-46)는 AI 연산에 관한 오류 정보를 제공할 수 있다. 레지스터(332-46)의 비트(334-3)는 AI 연산의 시퀀스의 오류가 있었음을 나타낼 수 있다. 레지스터(332-46)의 비트(334-2)는 AI 연산의 알고리즘의 오 류가 있었음을 나타낼 수 있다. 레지스터(332-46)의 비트(334-1)는 ECC가 정정할 수 없었던 데이터의 페 이지에 오류가 있었음을 나타낼 수 있다. 레지스터(332-46)의 비트(334-0)는 ECC가 정정할 수 있었던 데 이터의 페이지에 오류가 있었음을 나타낼 수 있다. 레지스터(332-47)는 AI 연산에 사용된 활성 함수를 나타낼 수 있다. 레지스터 (332-47)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 및 334-6)는 복수의 기 정의된 활성 함수 중 하나가 AI 연산에 사용될 수 있음을 나타낼 수 있다. 레지스터(332-47)의 비트(334-7)는 블록에 위치한 커스텀 활성 함수가 AI 연산에 사용될 수 있음을 나타낼 수 있다. 레지스터(332-48, 332-49, 및 332-50)는 AI 연산을 실행 중인 뉴런 및/또는 레이어를 나타낼 수 있다. 레지스터 (332-48, 332-49, 및 332-50)의 비트(334-0, 334-1, 334-2, 334-3, 334-4, 334-5, 334-6, 및 334-7)는 AI 연 산이 실행 중인 뉴런 및/또는 레이어의 주소를 나타낼 수 있다. AI 연산 동안 오류가 발생하는 경우, 레지스터 (332-48, 332-49, 및 332-50)는 오류가 발생한 뉴런 및/또는 레이어를 나타낼 수 있다. 도 4는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 복수의 블록의 블록 도이다. 입력 블록은 입력 데이터가 저장된 메모리 어레이의 블록이다. 입력 블록의 데이터는 AI 연 산의 입력으로서 사용될 수 있다. 입력 블록의 주소는 레지스터 (예를 들어, 도 2의 레지스터(232-5) 및 도 3a의 레지스터(332-5))에 표시될 수 있다. 실시예는 복수의 입력 블록이 있을 수 있으므로 하나의 입력 블록으로 제한되지 않는다. 입력 블록의 데이터는 호스트로부터 메모리 장치에 보내질 수 있다. 데이터는 AI 연산이 데이터를 이용하여 메모리 장치에서 수행될 수 있다는 명령을 동반할 수 있다. 출력 블록은 AI 연산의 출력 데이터가 저장된 메모리 어레이의 블록이다. 출력 블록의 데이터는 AI 연산의 출력을 저장하고 호스트에 보내는데 이용될 수 있다. 출력 블록의 주소는 레지스터(예를 들어, 도 2의 레지스터(232-11) 및 도 3a의 레지스터(332-11))에 표시될 수 있다. 실시예는 복수의 출력 블록이 있을 수 있으므로 하나의 출력 블록으로 제한되지 않는다. 출력 블록의 데이터는 AI 연산의 완료 및/또는 보류 시 호스트로 보내질 수 있다. 임시 블록(444-1 및 444-2)은 AI 연산이 수행되는 동안 데이터가 임시로 저장되는 메모리 어레이의 블록일 수 있다. 데이터는 AI 연 산이 AI 연산을 위해 사용된 뉴럴 네트워크의 뉴런 및 레이어를 통해 반복하는 동안 임시 블록(444-1 및 444- 2)에 저장될 수 있다. 임시 블록의 주소는 레지스터(30 및 33)(예를 들어, 도 2의 레지스터(232-30 및 232-33) 및 도 3b의 레지스터(332-30 및 332-33))에 표시될 수 있다. 실시예는 복수의 임시 블록이 있을 수 있 으므로 2개의 임시 블록으로 제한되지 않는다. 활성 함수 블록은 AI 연산의 활성 함수가 저장된 메모리 어레이의 볼록이다. 활성 함수 블록은 호스 트 및/또는 AI 액셀러레이터에 의해 생성된 커스텀 활성 함수 및/또는 기 정의된 활성 함수를 저장할 수 있다. 활성 함수 블록의 주소의 주소는 레지스터(예를 들어, 도 2의 레지스터(232-35) 및 도 3b의 레지스터 (332-35))에 표시될 수 있다. 실시예는 복수의 활성 함수 블록이 있을 수 있으므로 하나의 활성 함수 블록으로 제한되지 않는다. 바이어스 값 블록은 AI 연산의 바이어스 값이 저장되는 메모리 어레이의 블록이다. 바이어스 값 블록(44 8)의 주소는 레지스터(예를 들어, 도 2의 레지스터(232-44) 및 도 3b의 레지스터(332-44))에 표시될 수 있 다. 실시예는 복수의 바이어스 값 블록이 있을 수 있으므로 하나의 바이어스 값 블록으로 제한되지 않는다. 뉴럴 네트워크 블록(450-1, 450-2, 450-3, 450-4, 450-5, 450-6, 450-7, 450-8, 450-9, 및 450-10)은 AI 연산 의 뉴럴 네트워크가 저장되는 메모리 어레이의 블록이다. 뉴럴 네트워크 블록(450-1, 450-2, 450-3, 450-4, 450-5, 450-6, 450-7, 450-8, 450-9, 및 450-10)은 AI 연산이 사용되는 뉴런 및 레이어의 정보를 저장할 수 있 다. 뉴럴 네트워크 블록(450-1, 450-2, 450-3, 450-4, 450-5, 450-6, 450-7, 450-8, 450-9, 및 450-10)의 주소 는 레지스터(예를 들어, 도 2의 레지스터(232-22) 및 도 3a의 레지스터(332-22))에 표시될 수 있다. 도 5는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 예시적인 인공지능 프로세스를 도시한 흐름도이다. AI 연산을 시작하는 것에 대응하여, AI 액셀러레이터는 입력 및 뉴럴 네트워크 블록에 입력 데이터 및 뉴럴 네트워크 데이터를 각각 기록할 수 있다. AI 액셀러레이터는 입력 데이 터 및 뉴럴 네트워크 데이터를 이용하여 AI 연산을 수행할 수 있다. 결과는 임시 뱅크(544-1 및 544-2)에 저장될 수 있다. 임시 뱅크(544-1 및 544-2)는 AI 연산 중 매트릭스 계산을 수행, 바이어스 데이터를 추가, 및/또는 활성 함수를 적용하는 동안 데이터를 저장하는데 사용될 수 있다. AI 액셀러레이터는 임시 뱅크(544-1 및 544-2)에 저장된 AI 연산의 일부 결과 및 바이어스 값 데이터를 수 신하고 AI 동작의 일부 결과 및 바이어스 값 데이터을 이용하여 AI 연산을 수행할 수 있다. 결과는 임시 뱅크(544-1 및 544-2)에 저장될 수 있다. AI 액셀러레이터는 임시 뱅크(544-1 및 544-2)에 저장된 AI 연산의 일부 결과 및 활성 함수 데이터를 수신 하고 AI 연산의 일부 결과 및 활성 함수 데이터을 이용하여 AI 연산을 수행할 수 있다. 결과는 출력 뱅크 에 저장될 수 있다. 도 6은 본 개시의 복수의 실시예에 따른 데이터를 복사하는 예시적인 방법을 도시한 흐름도이다. 도 6에 설명된 방법은 예를 들어 도 1a 및 1b에 도시된 메모리 장치와 같은 메모리 장치를 포함하는 메모리 시스템에 의 해 수행될 수 있다. 블록에서, 방법은 제1 주소 및 제2 주소를 포함하는 명령을 수신하는 단계를 포함할 수 있고, 제1 주소는 훈련 또는 추론 연산에 대한 데이터를 저장하는 제1 메모리 장치를 식별하고, 제2 주소는 데이터에 대한 타겟으 로서 제2 메모리 장치를 식별한다. 방법은 제1 메모리 장치로부터 메모리 시스템의 제2 메모리 장치로 데이터를 복사하는 단계를 포함할 수 있다. 예를 들어, 제1 메모리 장치는 출력 블록을 제2 메모리 장치의 입력 블록에 복사할 수 있다. 호스트 및/또는 컨트롤러는 제2 메모리 장치에 저장하고 AI 연산에 사용할 데이터를 포맷 (format)할 수 있다. 블록에서, 방법은 명령에 응답하여 그리고 명령의 제1 주소 및 제2 주소에 적어도 부분적으로 기초하여 데이터를 제1 장치로부터 제2 장치로 전송하는 단계를 포함할 수 있다. 방법은 인공지능(AI) 모드에 진입하도록 제2 메모리 장치에 대한 레지스터를 프로그래밍함으로써 제2 메모리 장치가 인공지능(AI) 연산을 수행할 수 있 게 하는 단계를 포함할 수 있다. 블록에서, 방법은 제1 장치로부터의 데이터를 사용하여 제2 메모리 장치에서 훈련 또는 추론 연산을 실행 하는 단계를 포함할 수 있다. 상기 방법은 상기 제1 메모리 장치로부터 복사된 데이터를 이용하여 상기 제2 메 모리 장치에 인공지능(AI) 연산을 수행하는 단계를 포함할 수 있다. 방법은 함께 결합된 메모리 장치들 사이에 서 데이터를 복사하는 단계를 포함할 수 있다. 예를 들어, 뉴럴 네트워크의 밀도가 너무 커서 단일 메모리 장치 에 저장할 수 없는 경우, 입력, 출력, 및/또는 임시 블록은 뉴럴 네트워크의 AI 연산을 실행하기 위해 메모리 장치 사이에 복사될 수 있다."}
{"patent_id": "10-2022-7009870", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "비록 여기에서 특정 실시예가 도시되고 설명되었지만, 기술분야의 통상의 기술자는 동일한 결과를 달성하도록 계산된 배치가 도시된 특정 실시예를 대체할 수 있음을 이해할 것이다. 본 개시는 본 개시의 다양한 실시예의 각색 또는 변형을 다루기 위한 것이다. 상기의 설명은 제한적인 것이 아니라 예시적인 방식으로 이루어진 것으 로 이해해야 한다. 상기 실시예의 조합 및 여기서 구체적으로 설명되지 않은 다른 실시예는 상기 설명을 검토 할 때 기술 분야의 기술자에게 명백할 것이다. 본 개시의 다양한 실시예의 범위는 상기 구조 및 방법이 사용되 는 다른 애플리케이션을 포함한다. 따라서, 본 개시의 다양한 실시예의 범위는 그러한 청구범위가 부여되는 균 등물의 전체 범위와 함께, 첨부된 청구범위를 참조하여 결정되어야 한다. 전술한 상세한 설명에서, 다양한 특징이 개시를 간소화하기 위해 단일의 실시예로 함께 그룹화된다. 이러한 개 시의 방법은 본 개시의 개시된 실시예가 각 청구항에서 명확히 인용된 것 보다 더 많은 특징을 사용해야 한다는 의도를 반영하는 것으로 해석되어서는 안 된다. 오히려, 다음 청구항이 방영하는 바와 같이, 진보성 있는 내용 이 단일의 개시된 실시예의 모든 특징보다 적은 범위에 있다. 따라서, 다음 청구항은 이에 의해 상세한 설명에 통합되며, 각 청구항은 그 자체로 별개의 실시예로 존재한다.도면 도면1a 도면1b 도면2 도면3a 도면3b 도면4 도면5 도면6"}
{"patent_id": "10-2022-7009870", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 본 개시의 복수의 실시예에 따른 인공지능(artificial intelligence, AI) 액셀러레이터를 가진 메모리 장치를 포함하는 컴퓨팅 시스템 유형의 장치의 블록도이다. 도 1b는 본 개시의 복수의 실시예에 따른 AI 액셀러레이터를 가진 메모리 장치를 가진 메모리 시스템을 포함하 는 컴퓨팅 시스템 유형의 장치의 블록도이다. 도 2는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 복수의 레지스터의 블록도이다. 도 3a 및 3b는 본 개시의 복수의 실시예에 따른 AI 액셀러레이터를 가진 메모리 장치의 복수의 레지스터의 복수 의 비트의 블록도이다. 도 4는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치의 복수의 블록의 블록 도이다.도 5는 본 개시의 복수의 실시예에 따른 인공지능(AI) 액셀러레이터를 가진 메모리 장치에서의 예시적인 인공지 능 프로세스를 도시하는 흐름도이다. 도 6은 본 개시의 복수의 실시예에 따른 데이터를 복사하는 예시적인 방법을 도시하는 흐름도이다."}
