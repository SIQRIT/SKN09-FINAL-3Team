{"patent_id": "10-2021-0013311", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0109826", "출원번호": "10-2021-0013311", "발명의 명칭": "인공지능 추론모델을 경량화하는 방법 및 시스템", "출원인": "주식회사 노타", "발명자": "김태호"}}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서를 포함하는 컴퓨터 장치의 경량화 방법에 있어서,상기 적어도 하나의 프로세서에 의해, 경량화를 위한 추론모델을 입력받는 단계;상기 적어도 하나의 프로세서에 의해, 타겟 디바이스 풀에서 타겟 디바이스를 선택하는 단계;상기 적어도 하나의 프로세서에 의해, 압축 메서드 풀에서 압축 메서드의 조합을 선택하는 단계;상기 적어도 하나의 프로세서에 의해, 상기 추론모델을 상기 선택된 압축 메서드의 조합을 이용하여 압축하는단계;상기 적어도 하나의 프로세서에 의해, 상기 선택된 타겟 디바이스를 이용하여 상기 압축된 추론모델의 성능을측정하는 단계; 및상기 적어도 하나의 프로세서에 의해, 상기 측정된 성능에 기반하여 최종 경량화 추론모델을 결정하는 단계를 포함하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 압축하는 단계는,상기 선택된 압축 메서드의 조합이 포함하는 메서드들을 압축 파이프라인을 통해 상기 추론모델에 순차적으로적용하여 상기 추론모델을 압축하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 성능을 측정하는 구성은,상기 압축된 추론모델을 상기 선택된 타겟 디바이스로 전송하는 단계; 및상기 타겟 디바이스로부터 상기 압축된 추론모델의 성능에 대한 테스트 결과를 수신하는 단계를 포함하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 선택된 타겟 디바이스는, 상기 압축된 추론모델에 대한 지연 시간 및 정확도 중 적어도 하나를 포함하는성능을 측정하도록 구현되는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 적어도 하나의 프로세서에 의해, 디바이스, 정확도(accuracy), 모델 크기, 지연 시간(latency), 압축 시간및 에너지 소모량 중 적어도 하나의 항목에 대한 값을 포함하는 제약(constraint)을 설정하는 단계를 더 포함하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2022-0109826-3-제5항에 있어서,상기 적어도 하나의 프로세서에 의해, 상기 설정된 제약의 항목별 우선순위를 설정하는 단계를 더 포함하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 타겟 디바이스를 선택하는 단계는,상기 디바이스의 제약에 따라 상기 타겟 디바이스를 선택하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 최종 경량화 추론모델을 결정하는 단계는,상기 정확도의 제약, 상기 지연 시간의 제약 및 상기 에너지 소모량의 제약 중 적어도 하나와 상기 측정된 성능에 기반하여 상기 최종 경량화 추론모델을 결정하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제5항에 있어서,상기 압축 시간의 제약에 따라 상기 타겟 디바이스에서의 상기 압축된 추론모델의 학습 횟수 및 상기 선택된 압축 메서드의 조합이 포함하는 압축 메서드의 수 중 적어도 하나가 조절되는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 압축 메서드의 조합을 선택하는 단계는,상기 압축 메서드 풀에서 상기 압축 메서드의 복수의 조합을 선택하고,상기 압축하는 단계는,상기 추론모델을 상기 선택된 복수의 조합 각각으로 압축하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 압축 메서드 풀은, 가지치기(Pruning), 양자화(Quantization), 지식 증류(Knowledge Distillation), 모델탐색(Neural Architecture Search), 해상도 변경(Resolution change), 필터 디컴포지션(Filter decomposition)및 필터 분해(Filter Decomposition) 중 적어도 하나에 기반한 둘 이상의 압축 메서드를 포함하는 것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서,상기 압축 메서드의 조합을 선택하는 단계는,상기 압축 메서드의 조합 내에서 양자화(Quantization)에 기반한 압축 메서드가 상기 압축 메서드의 조합의 마지막에 위치해야 하는 제1 규칙 및 활성화 변환(Activation Change)에 기반한 압축 메서드가 양자화에 기반한압축 메서드 이전에 포함되어야 하는 제2 규칙 중 적어도 하나의 규칙에 따라 압축 메서드의 조합을 선택하는것을 특징으로 하는 경량화 방법."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공개특허 10-2022-0109826-4-컴퓨터 장치와 결합되어 제1항 내지 제12항 중 어느 한 항의 방법을 컴퓨터 장치에 실행시키기 위해 컴퓨터 판독 가능한 기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1항 내지 제12항 중 어느 한 항의 방법을 컴퓨터 장치에 실행시키기 위한 프로그램이 기록되어 있는 컴퓨터판독 가능한 기록매체."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "컴퓨터 장치에서 판독 가능한 명령을 실행하도록 구현되는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서에 의해,경량화를 위한 추론모델을 입력받고,타겟 디바이스 풀에서 타겟 디바이스를 선택하고,압축 메서드 풀에서 압축 메서드의 조합을 선택하고,상기 추론모델을 상기 선택된 압축 메서드의 조합을 이용하여 압축하고,상기 선택된 타겟 디바이스를 이용하여 상기 압축된 추론모델의 성능을 측정하고,상기 측정된 성능에 기반하여 최종 경량화 추론모델을 결정하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 추론모델을 압축하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 선택된 압축 메서드의 조합이 포함하는 메서드들을 압축 파이프라인을 통해 상기 추론모델에 순차적으로적용하여 상기 추론모델을 압축하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서,상기 압축된 추론모델의 성능을 측정하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 압축된 추론모델을 상기 선택된 타겟 디바이스로 전송하고,상기 타겟 디바이스로부터 상기 압축된 추론모델의 성능에 대한 테스트 결과를 수신하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서,상기 적어도 하나의 프로세서에 의해,디바이스, 정확도(accuracy), 모델 크기, 지연 시간(latency), 압축 시간 및 에너지 소모량 중 적어도 하나의항목에 대한 값을 포함하는 제약(constraint)을 설정하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0013311", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항에 있어서,공개특허 10-2022-0109826-5-상기 압축 메서드의 조합을 선택하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 압축 메서드 풀에서 상기 압축 메서드의 복수의 조합을 선택하고,상기 추론모델을 압축하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 추론모델을 상기 선택된 복수의 조합 각각으로 압축하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공지능 모델 경량화 방법 및 시스템을 개시한다. 일실시예에 따른 경량화 방법은, 경량화를 위한 추론모델을 입력받는 단계, 타겟 디바이스 풀에서 타겟 디바이스를 선택하는 단계, 압축 메서드 풀에서 압축 메서드의 조합 을 선택하는 단계, 추론모델을 선택된 압축 메서드의 조합을 이용하여 압축하는 단계, 선택된 타겟 디바이스를 이용하여 압축된 추론모델의 성능을 측정하는 단계 및 측정된 성능에 기반하여 최종 경량화 추론모델을 결정하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 인공지능 추론모델을 경량화하는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "딥러닝 모델(또는 인공지능 모델)의 경량화는 주어진 딥러닝 모델을 더 작은 딥러닝 모델로 만드는 함수, 모듈 및/또는 기능을 의미한다. 여기서, '작다'는 딥러닝 모델을 구성하는 가중치(weights/bias)의 수를 줄이거나, 용량을 줄이거나, 추론 속도를 빠르게 하는 것을 의미할 수 있다. 이때, 경량화를 진행하면서 성능을 하락시키 지 않는 것이 매우 중요하다. 경량화 기법에는 다양한 종류가 있다. 큰 분류로는 가지치기(Pruning), 양자화(Quantization), 지식 증류 (Knowledge Distillation), 모델 탐색(Neural Architecture Search), 필터 분해(Filter Decomposition)가 있으 며, 각 분류 내에도 굉장히 다양한 종류의 경량화 기법이 존재한다. 이때, 각 경량화 기법은 단순하게 이용할 수는 없다. 각 경량화 기법을 이용하기 위한 파라미터들이 존재한다. 예를 들어, 가지치기의 경우 각 Layer 별로 얼마나 많은 양의 파라미터를 가지치기할 것인지에 대한 파라미터를 미리 조정해야 하고, 파라미터를 어떻게 설정하느냐에 따라 경량화 성능에 많은 영향을 준다. [선행문헌번호] 한국공개특허 제10-2020-0104201호"}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 경량화 기법을 순차적으로 및/또는 병렬적으로 딥러닝 모델에 적용하여 딥러닝 모델을 압축할 수 있는 경량화 방법 및 시스템을 제공한다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "적어도 하나의 프로세서를 포함하는 컴퓨터 장치의 경량화 방법에 있어서, 상기 적어도 하나의 프로세서에 의해, 경량화를 위한 추론모델을 입력받는 단계; 상기 적어도 하나의 프로세서에 의해, 타겟 디바이스 풀에서 타겟 디바이스를 선택하는 단계; 상기 적어도 하나의 프로세서에 의해, 압축 메서드 풀에서 압축 메서드의 조합 을 선택하는 단계; 상기 적어도 하나의 프로세서에 의해, 상기 추론모델을 상기 선택된 압축 메서드의 조합을 이용하여 압축하는 단계; 상기 적어도 하나의 프로세서에 의해, 상기 선택된 타겟 디바이스를 이용하여 상기 압 축된 추론모델의 성능을 측정하는 단계; 및 상기 적어도 하나의 프로세서에 의해, 상기 측정된 성능에 기반하여 최종 경량화 추론모델을 결정하는 단계를 포함하는 경량화 방법을 제공한다. 일측에 따르면, 상기 압축하는 단계는, 상기 선택된 압축 메서드의 조합이 포함하는 메서드들을 압축 파이프라 인을 통해 상기 추론모델에 순차적으로 적용하여 상기 추론모델을 압축하는 것을 특징으로 할 수 있다. 다른 측면에 따르면, 상기 성능을 측정하는 구성은, 상기 압축된 추론모델을 상기 선택된 타겟 디바이스로 전송 하는 단계; 및 상기 타겟 디바이스로부터 상기 압축된 추론모델의 성능에 대한 테스트 결과를 수신하는 단계를 포함하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 선택된 타겟 디바이스는, 상기 압축된 추론모델에 대한 지연 시간 및 정확도 중 적어도 하나를 포함하는 성능을 측정하도록 구현되는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 경량화 방법은 상기 적어도 하나의 프로세서에 의해, 디바이스, 정확도 (accuracy), 모델 크기, 지연 시간(latency), 압축 시간 및 에너지 소모량 중 적어도 하나의 항목에 대한 값을 포함하는 제약(constraint)을 설정하는 단계를 더 포함할 수 있다. 또 다른 측면에 따르면, 상기 경량화 방법은 상기 적어도 하나의 프로세서에 의해, 상기 설정된 제약의 항목별 우선순위를 설정하는 단계를 더 포함할 수 있다. 또 다른 측면에 따르면, 상기 타겟 디바이스를 선택하는 단계는, 상기 디바이스의 제약에 따라 상기 타겟 디바 이스를 선택하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 최종 경량화 추론모델을 결정하는 단계는, 상기 정확도의 제약, 상기 지연 시간의 제약 및 상기 에너지 소모량의 제약 중 적어도 하나와 상기 측정된 성능에 기반하여 상기 최종 경량화 추론모델 을 결정하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 압축 시간의 제약에 따라 상기 타겟 디바이스에서의 상기 압축된 추론모델의 학습 횟수 및 상기 선택된 압축 메서드의 조합이 포함하는 압축 메서드의 수 중 적어도 하나가 조절되는 것을 특징으 로 할 수 있다. 또 다른 측면에 따르면, 상기 압축 메서드의 조합을 선택하는 단계는, 상기 압축 메서드 풀에서 상기 압축 메서 드의 복수의 조합을 선택하고, 상기 압축하는 단계는, 상기 추론모델을 상기 선택된 복수의 조합 각각으로 압축 하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 압축 메서드 풀은, 가지치기(Pruning), 양자화(Quantization), 지식 증류 (Knowledge Distillation), 모델 탐색(Neural Architecture Search) 및 필터 분해(Filter Decomposition) 중 적어도 하나에 기반한 둘 이상의 압축 메서드를 포함하는 것을 특징으로 할 수 있다. 컴퓨터 장치와 결합되어 상기 방법을 컴퓨터 장치에 실행시키기 위해 컴퓨터 판독 가능한 기록매체에 저장된 컴 퓨터 프로그램을 제공한다. 상기 방법을 컴퓨터 장치에 실행시키기 위한 프로그램이 기록되어 있는 컴퓨터 판독 가능한 기록매체를 제공한 다. 컴퓨터 장치에서 판독 가능한 명령을 실행하도록 구현되는 적어도 하나의 프로세서를 포함하고, 상기 적어도 하 나의 프로세서에 의해, 경량화를 위한 추론모델을 입력받고, 타겟 디바이스 풀에서 타겟 디바이스를 선택하고, 압축 메서드 풀에서 압축 메서드의 조합을 선택하고, 상기 추론모델을 상기 선택된 압축 메서드의 조합을 이용 하여 압축하고, 상기 선택된 타겟 디바이스를 이용하여 상기 압축된 추론모델의 성능을 측정하고, 상기 측정된 성능에 기반하여 최종 경량화 추론모델을 결정하는 것을 특징으로 하는 컴퓨터 장치를 제공한다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 경량화 기법을 순차적으로 및/또는 병렬적으로 딥러닝 모델에 적용하여 딥러닝 모델을 압축할 수 있다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예를 첨부한 도면을 참조하여 상세히 설명한다. 본 발명의 실시예들에 따른 경량화 시스템은 적어도 하나의 컴퓨터 장치에 의해 구현될 수 있다. 이때, 컴퓨터 장치에는 본 발명의 일실시예에 따른 컴퓨터 프로그램이 설치 및 구동될 수 있고, 컴퓨터 장치는 구동된 컴퓨터프로그램의 제어에 따라 본 발명의 실시예들에 따른 경량화 방법을 수행할 수 있다. 상술한 컴퓨터 프로그램은 컴퓨터 장치와 결합되어 경량화 방법을 컴퓨터에 실행시키기 위해 컴퓨터 판독 가능한 기록매체에 저장될 수 있 다. 도 1은 본 발명의 일실시예에 따른 네트워크 환경의 예를 도시한 도면이다. 도 1의 네트워크 환경은 복수의 전 자 기기들(110, 120, 130, 140), 복수의 서버들(150, 160) 및 네트워크를 포함하는 예를 나타내고 있다. 이러한 도 1은 발명의 설명을 위한 일례로 전자 기기의 수나 서버의 수가 도 1과 같이 한정되는 것은 아니다. 또한, 도 1의 네트워크 환경은 본 실시예들에 적용 가능한 환경들 중 하나의 예를 설명하는 것일 뿐, 본 실시예 들에 적용 가능한 환경이 도 1의 네트워크 환경으로 한정되는 것은 아니다. 복수의 전자 기기들(110, 120, 130, 140)은 컴퓨터 장치로 구현되는 고정형 단말이거나 이동형 단말일 수 있다. 복수의 전자 기기들(110, 120, 130, 140)의 예를 들면, 스마트폰(smart phone), 휴대폰, 네비게이션, 컴퓨터, 노트북, 디지털방송용 단말, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC 등이 있다. 일례로 도 1에서는 전자 기기의 예로 스마트폰의 형상을 나타내고 있으나, 본 발명의 실시예 들에서 전자 기기는 실질적으로 무선 또는 유선 통신 방식을 이용하여 네트워크를 통해 다른 전자 기 기들(120, 130, 140) 및/또는 서버(150, 160)와 통신할 수 있는 다양한 물리적인 컴퓨터 장치들 중 하나를 의미 할 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망)을 활용하는 통신 방식뿐만 아니라 기기들간의 근거리 무선 통신 역시 포함될 수 있다. 예를 들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus area network), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네트워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포함하는 네트 워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으나, 이에 제한되지 않는다. 서버(150, 160) 각각은 복수의 전자 기기들(110, 120, 130, 140)과 네트워크를 통해 통신하여 명령, 코드, 파일, 컨텐츠, 서비스 등을 제공하는 컴퓨터 장치 또는 복수의 컴퓨터 장치들로 구현될 수 있다. 예를 들어, 서버는 네트워크를 통해 접속한 복수의 전자 기기들(110, 120, 130, 140)로 서비스(일례로, 인 스턴트 메시징 서비스, 소셜 네트워크 서비스, 결제 서비스, 가상 거래소 서비스, 리스크 모니터링 서비스, 게 임 서비스, 그룹 통화 서비스(또는 음성 컨퍼런스 서비스), 메시징 서비스, 메일 서비스, 지도 서비스, 번역 서 비스, 금융 서비스, 검색 서비스, 컨텐츠 제공 서비스 등)를 제공하는 시스템일 수 있다. 도 2는 본 발명의 일실시예에 따른 컴퓨터 장치의 예를 도시한 블록도이다. 앞서 설명한 복수의 전자 기기들 (110, 120, 130, 140) 각각이나 서버들(150, 160) 각각은 도 2를 통해 도시된 컴퓨터 장치에 의해 구현될 수 있다. 이러한 컴퓨터 장치는 도 2에 도시된 바와 같이, 메모리, 프로세서, 통신 인터페이스 그리 고 입출력 인터페이스를 포함할 수 있다. 메모리는 컴퓨터에서 판독 가능한 기록매체로서, RAM(random access memory), ROM(read only memory) 및 디스크 드라이브와 같은 비소멸성 대용량 기록장치 (permanent mass storage device)를 포함할 수 있다. 여기서 ROM과 디스크 드라이브와 같은 비소멸성 대용량 기록장치는 메모리와는 구분되는 별도의 영구 저장 장치로서 컴퓨터 장치에 포함될 수도 있다. 또한, 메모리에는 운영체제와 적어도 하나의 프로그램 코드가 저장될 수 있다. 이러한 소프트웨어 구성요 소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 메모리로 로딩될 수 있다. 이러 한 별도의 컴퓨터에서 판독 가능한 기록매체는 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 실시예에서 소프트웨어 구성요소들은 컴 퓨터에서 판독 가능한 기록매체가 아닌 통신 인터페이스를 통해 메모리에 로딩될 수도 있다. 예를 들어, 소프트웨어 구성요소들은 네트워크를 통해 수신되는 파일들에 의해 설치되는 컴퓨터 프로그램에 기 반하여 컴퓨터 장치의 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 인터페이스에 의해 프로세서로 제공될 수 있다. 예 를 들어 프로세서는 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행 하도록 구성될 수 있다.통신 인터페이스는 네트워크를 통해 컴퓨터 장치가 다른 장치(일례로, 앞서 설명한 저장 장치들)와 서로 통신하기 위한 기능을 제공할 수 있다. 일례로, 컴퓨터 장치의 프로세서가 메모리 와 같은 기록 장치에 저장된 프로그램 코드에 따라 생성한 요청이나 명령, 데이터, 파일 등이 통신 인터페 이스의 제어에 따라 네트워크를 통해 다른 장치들로 전달될 수 있다. 역으로, 다른 장치로부터의 신 호나 명령, 데이터, 파일 등이 네트워크를 거쳐 컴퓨터 장치의 통신 인터페이스를 통해 컴퓨터 장치로 수신될 수 있다. 통신 인터페이스를 통해 수신된 신호나 명령, 데이터 등은 프로세서나 메모리로 전달될 수 있고, 파일 등은 컴퓨터 장치가 더 포함할 수 있는 저장 매체(상술한 영구 저장 장치)로 저장될 수 있다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 입력 장치는 마이크, 키보드 또는 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피커와 같은 장치를 포함할 수 있 다. 다른 예로 입출력 인터페이스는 터치스크린과 같이 입력과 출력을 위한 기능이 하나로 통합된 장치와 의 인터페이스를 위한 수단일 수도 있다. 입출력 장치 중 적어도 하나는 컴퓨터 장치와 하나의 장치 로 구성될 수도 있다. 예를 들어, 스마트폰과 같이 터치스크린, 마이크, 스피커 등이 컴퓨터 장치에 포함 된 형태로 구현될 수 있다. 또한, 다른 실시예들에서 컴퓨터 장치는 도 2의 구성요소들보다 더 적은 혹은 더 많은 구성요소들을 포함 할 수도 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 예를 들어, 컴퓨 터 장치는 상술한 입출력 장치 중 적어도 일부를 포함하도록 구현되거나 또는 트랜시버 (transceiver), 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수도 있다. 도 3은 본 발명의 일실시예에 따른 경량화 시스템의 예를 도시한 도면이다. 본 실시예에 따른 경량화 시스템 은 하이퍼파라미터 최적화부(이하, HPO(Hyperparameter Optimization)), 타겟 디바이스 풀(Target Device Pool, 320), 압축 메서드 풀(Compression Method Pool, 330) 및 압축 파이프라인(Compression pipeline, 340)을 포함할 수 있다. 경량화 기법은 파라미터에 따라 의존도가 크기 때문에, 다수의 경량화 기법을 이용하는 경우, 각 경량화 기법의 파라미터가 어떻게 세팅되어 있느냐에 따라 크게 성능이 좌우될 수 있다. 이러한 문제를 해결하기 위해, 경량 화 시스템은 HPO 및 타겟 디바이스 풀을 포함할 수 있다. HPO는 주어진 하이퍼파리미터 탐색 공간(Hyperparameter search space)에서 최적의 하이퍼파리미터를 찾는 알고리즘일 수 있으며, 실질적으로는 경량화 시스템을 구현하는 컴퓨터 장치의 프로세서가 컴퓨 터 프로그램의 제어에 따라 동작하는 기능의 기능적 표현일 수 있다. 예를 들어, HPO는 가능한 파라미터 조합 중 파라미터 조합 1, 파라미터 조합 2, 쪋, 파라미터 조합 N에 대해서 각각 학습을 진행한 뒤, 성능이 낮 은 파라미터 조합을 일부 폐기하고, 상위 성능이 좋은 파라미터 조합을 토대로 새로운 파라미터 조합을 탐색할 수 있다. 하이퍼파라미터의 예시로는 배치 사이즈(Batch size), 학습률(Learning Rate), 모멘텀(Momentum) 등 이 있다. 하이퍼파라미터의 범주를 레이어의 수, 뉴런(neuron)의 수, 레이어의 타입으로 설정하는 경우, HPO는 NAS(Neural Architecture Search)를 포함할 수 있다. 본 실시예에 따른 HPO는 색다른 탐색 공간(search space)으로 탐색을 처리할 수 있다. 다수의 경량화 기 법들의 파라미터들이 탐색 공간(search space)이 될 수 있다. 예를 들어 가지치기 비율(pruning ratio), 양자 화 임계값(quantization threshold), 지식 증류 (Knowledge Distillation)에서의 온도(Temperature in KD) 등 이 HPO의 탐색 공간이 될 수 있다. 이러한 HPO는 일례로, 하이퍼밴드(Hyperband), 베이지안 최적화 (Bayesian Optimization)와 같은 알고리즘을 활용할 수 있다. 한편, 타겟 디바이스 풀과 압축 메서드 풀은 일례로, 데이터베이스의 형태로 구현될 수 있다. 타겟 디바이스 풀은 다양한 디바이스들에 대한 정보를 포함할 수 있으며, 압축 메서드 풀은 다양한 압축 메서드들 각각을 위한 코드를 포함할 수 있다. HPO는 압축 메서드 풀에서 압축 메서드를 선택할 수 있으며, 선택된 압축 메서드를 이용하여 추론모델을 경량화할 수 있다. 타겟 디바이스 풀에 포함되는 디 바이스들과 압축 메서드 풀에 포함되는 압축 메서드들은 이미 잘 알려진 디바이스들 및 압축 메서드들이 활용될 수 있다. 이때, HPO는 추론모델을 경량화함에 있어서, 압축 메서드 풀에서 둘 이상의 압축 메서드들을 선택할 수 있으며, 선택된 둘 이상의 압축 메서드들을 압축 파이프라인에 순차적으로 배치할 수 있다. 이후, HPO는 추론모델을 압축 파이프라인에 입력하여 추론모델이 둘 이상의 압축 메서드들에 의해 순차적으로 압축되도록 추론모델에 대한 경량화를 처리할 수 있다. 실시예에 따라 압축 파이프라인은 HPO에 포함되는 형태로 구현될 수 있다. 또한, HPO는 압축 메서드들의 다양한 조합마다 경량화 모델을 생성할 수도 있다. 실시예에 따라, HPO는 다수의 압축 파이프라인들을 운용함으로써, 하나의 추론모델에 서로 다른 조합의 압축 메서드들을 적용하여 다수의 경량화 모델들을 병렬적으로 생성할 수도 있다. 일례로, 다수의 타겟 디바이스들이 존재하는 경우, HPO는 다수의 압축 파이프라인들을 운용하여 다수의 타겟 디바이스들을 위한 다수의 경량화 모델들 을 동시에 생성할 수 있다. 또한, HPO는 타겟 디바이스 풀을 통해 선택된 타겟 디바이스로 경량화된 추론모델을 전달할 수 있다. 타겟 디바이스는 경량화된 추론모델의 코드를 실행하여 지연시간, 정확성 등의 성능을 측정한 뒤, 측정된 성능을 HPO로 반환할 수 있다. HPO는 반환된 성능에 기반하여 파라미터 조합들간의 우열을 가릴 수 있게 되며, 이러한 우열에 따라 타겟 디바이스에 최적화된 파라미터 조합을 찾을 수 있다. 이러한 과정을 위해, HPO는 일례로, 경량화를 위한 추론모델과 데이터셋(데이터 및 라벨을 포함함) 그리고 제약(constraint)을 입력받을 수 있다. 여기서, 제약은 디바이스, 정확도(accuracy), 모델 크기, 지연 시간 (latency), 압축 시간 및 에너지 소모량 중 적어도 하나의 항목에 대한 값을 포함할 수 있다. 디바이스의 제약은 타겟 디바이스의 선정을 위한 정보를 포함할 수 있다. 경량화 시스템은 디바이스 의 제약에 따라 타겟 디바이스 풀에서 타겟 디바이스를 선택할 수 있다. 또한, 정확도의 제약은 경량화된 추론모델이 가져야 할 정확도의 최소 임계값일 수 있다. 다시 말해, HPO(31 0)는 경량화된 추론모델이 적어도 정확도의 제약에 따른 최소 임계값 이상의 정확도를 갖도록 추론모델을 경량 화할 수 있다. 예를 들어, HPO는 타겟 디바이스가 반환하는 성능으로서의 정확도가 정확도의 제약에 따른 최소 임계값 이상인 파라미터 조합을 선택할 수 있다. 모델 크기의 제약은 경량화된 모델의 크기에 대한 제약일 수 있다. 모델 크기의 제약이 설정된 경우, HPO(31 0)는 경량화 추론모델들 중 모델 크기의 제약 이하(또는 미만)의 크기를 갖는 경량화 추론모델들을 사용하여 성 능 테스트를 진행할 수 있다. 지연 시간의 제약은 경량화된 추론모델이 입력값에 대한 출력값을 생성하는데 걸리는 시간에 대한 제약일 수 있 다. 경량화된 추론모델에 대한 지연 시간은 타겟 디바이스가 PHO로 반환하는 성능에 포함될 수 있다. PHO는 반환된 성능에 포함된 지연 시간에 기반하여 지연 시간의 제약을 만족하는 경량화된 추론모델을 선 택함으로써, 파라미터 조합을 선택할 수 있다. 압축 시간의 제약은 경량화된 추론모델을 생성하는데 걸리는 시간의 제약일 수 있다. 일례로, 원하는 입력조건 을 만족하는 추론모델을 생성하는 시간은 추론모델을 압축하는 시스템의 성능 및 리소스에 의존적이며, 하나의 추론모델을 압축하는데 몇 일이 걸릴 수도 있다. 하지만, 사용자가 압축 시간의 제약을 설정하는 경우, HPO는 설정된 압축 시간의 제약에 맞게 최대 학습 횟수(에폭(epoch))를 지정하거나 순차적으로 적용될 압 축 메서드들의 수를 줄여 경량화된 추론모델의 생성 시간이 사용자가 설정한 지연 시간의 제약을 넘지 않도록 조절할 수 있다. 에너지 소모량의 제약은 타겟 디바이스에서 경량화된 추론모델의 성능을 측정함에 있어서, 타겟 디바이스에서의 에너지 소모량에 대한 제약을 포함할 수 있다. 다시 말해, HPO는 타겟 디바이스에서의 에너지 소모량이 사용자에 의해 설정된 에너지 소모량의 제약을 넘지 않는 파라미터 조합을 선택할 수 있다. 이를 위해, 타겟 디바이스에는 에너지 소모 측정 모듈이 포함될 수 있으며, 타겟 디바이스에서 측정되는 에너지 소모량이 경량화 된 추론모델에 대한 성능의 일부로서 HPO로 전달될 수 있다. 한편, 모든 제약을 만족하는 결과물(경량화 추론모델)이 생성될 수도 있지만, 그렇지 않을 수도 있다. 예를 들 어, 경량화 추론모델의 성능에 있어서, 더 낮은 지연 시간을 위해 정확도를 낮춰야 할 수도 있다. 다른 예로, 더 낮은 에너지 소모량을 위해 정확도를 낮춰야 할 수도 있다. 따라서, 제약에는 우선순위가 지정될 수 있으며, HPO는 지정된 우선순위에 따라 우선순위가 높은 제약을 먼저 만족하고 하위 제약들을 만족하는 모 델 최적화를 진행할 수 있다. 도 4는 본 발명의 일실시예에 따른 경량화 방법의 예를 도시한 흐름도이다. 본 실시예에 따른 경량화 방법은 HPO를 구현하는 컴퓨터 장치에 의해 수행될 수 있다. 일례로, 컴퓨터 장치의 프로세서는 메모리가 포함하는 운영체제의 코드나 적어도 하나의 컴퓨터 프로그램의 코드에 따른 제어 명령(instruction)을 실행하도록 구현될 수 있다. 여기서, 프로세서는 컴퓨터 장치에 저장된 코드가 제 공하는 제어 명령에 따라 컴퓨터 장치가 도 4의 방법이 포함하는 단계들(410 내지 470)을 수행하도록 컴퓨 터 장치를 제어할 수 있다. 단계에서 컴퓨터 장치는 경량화를 위한 추론모델을 입력받을 수 있다. 실시예에 따라 추론모델과 함 께 데이터셋과 제약이 함께 입력될 수도 있다. 데이터셋은 데이터와 라벨(데이터에 대한 정답)을 포함할 수 있 으며, 이후 타겟 디바이스로 제공되어 타겟 디바이스가 압축된 추론모델의 성능을 측정하는데 활용될 수 있다. 단계에서 컴퓨터 장치는 디바이스, 정확도, 모델 크기, 지연 시간, 압축 시간 및 에너지 소모량 중 적어도 하나의 항목에 대한 값을 포함하는 제약을 설정할 수 있다. 압축 시간의 제약이 설정된 경우, 설정된 압축 시간의 제약에 따라, 타겟 디바이스에서의 압축된 추론모델의 학습 횟수 및 선택된 압축 메서드의 조합이 포함하는 압축 메서드의 수 중 적어도 하나가 조절될 수 있다. 설정되는 제약은 추론모델과 함께 입력되는 제 약일 수 있으나 이에 한정되지는 않는다. 또한, 실시예에 따라 컴퓨터 장치는 설정된 제약의 항목별 우선 순위를 더 설정할 수 있다. 우선순위에 대해서는 앞서 자세히 설명한 바 있다. 단계에서 컴퓨터 장치는 타겟 디바이스 풀에서 타겟 디바이스를 선택할 수 있다. 여기서 타겟 디바 이스 풀은 앞서 도 3을 통해 설명한 타겟 디바이스 풀에 대응할 수 있다. 이때, 단계에서 디바이스 의 제약이 설정된 경우, 컴퓨터 장치는 디바이스의 제약에 따라 타겟 디바이스 풀에서 타겟 디바이스를 선 택할 수 있다. 단계에서 컴퓨터 장치는 압축 메서드 풀에서 압축 메서드의 조합을 선택할 수 있다. 여기서, 압축 메서드 풀은 앞서 도 3을 통해 설명한 압축 메서드 풀에 대응할 수 있다. 이때, 압축 메서드 풀은, 가지 치기(Pruning), 양자화(Quantization), 지식 증류(Knowledge Distillation), 모델 탐색(Neural Architecture Search), 해상도 변경(Resolution change), 필터 디컴포지션(Filter decomposition) 및 필터 분해(Filter Decomposition) 중 적어도 하나에 기반한 둘 이상의 압축 메서드를 포함할 수 있다. 실시예에 따라 컴퓨터 장 치는 압축 메서드 풀에서 압축 메서드의 복수의 조합을 선택할 수도 있다. 또한, 컴퓨터 장치는 일정한 규칙에 따라 압축 메서드의 조합을 선택할 수도 있다. 예를 들어, 컴퓨터 장 치는 압축 메서드의 조합 내에서 양자화(Quantization)에 기반한 압축 메서드가 조합의 마지막에 위치해야 하는 제1 규칙 및 활성화 변환(Activation Change)에 기반한 압축 메서드가 양자화에 기반한 압축 메서드 이전 에 포함되어야 하는 제2 규칙 중 적어도 하나의 규칙에 따라 압축 메서드의 조합을 선택할 수 있다. 예를 들어, 양자화의 경우에는 컴파일러(Compiler)와 결합되어 구현되어 있는 경우가 많기 때문에, 소프트웨어 레벨 에서 압축에 양자화를 이용하는 경우, 양자화가 압축 파이프라인의 가장 마지막에 배치될 수 있다. 또한, 활성 화 변환은 양자화의 성능을 높이기 위한 목적으로 사용될 수 있기 때문에, 활성화 변환에 기반한 압축 메서드는 양자화에 기반한 압축 메서드보다 조합 내에 먼저 포함될 수 있다. 실시예에 따라 단계 내지 단계의 수행 순서는 변경될 수 있다. 예를 들어, 압축 메서드의 조합을 선 택한 이후에 타겟 디바이스를 선택하거나 또는 추론모델의 입력 이전에 타겟 디바이스를 선택할 수도 있다. 단계에서 컴퓨터 장치는 추론모델을 선택된 압축 메서드의 조합을 이용하여 압축할 수 있다. 일례로, 컴퓨터 장치는 선택된 압축 메서드의 조합이 포함하는 메서드들을 압축 파이프라인을 통해 추론모 델에 순차적으로 적용하여 추론모델을 압축할 수 있다. 압축 파이프라인은 앞서 도 3을 통해 설명한 압축 파이 프라인에 대응할 수 있다. 한편, 단계에서 복수의 조합이 선택된 경우, 컴퓨터 장치는 추론모 델을 선택된 복수의 조합 각각으로 압축할 수 있다. 단계에서 컴퓨터 장치는 선택된 타겟 디바이스를 이용하여 압축된 추론모델의 성능을 측정할 수 있다. 일례로, 컴퓨터 장치는 압축된 추론모델을 선택된 타겟 디바이스로 전송할 수 있으며, 타겟 디바이 스로부터 압축된 추론모델의 성능에 대한 테스트 결과를 수신할 수 있다. 이때, 타겟 디바이스는 압축된 추론 모델에 대한 지연 시간 및 정확도 중 적어도 하나를 포함하는 성능을 측정하도록 구현될 수 있다. 추론모델이 복수의 조합 각각에 대해 압축된 경우, 다수의 압축된 추론모델들 각각에 대한 성능이 측정될 수 있다. 단계에서 컴퓨터 장치는 측정된 성능에 기반하여 최종 경량화 추론모델을 결정할 수 있다. 일례로, 컴퓨터 장치는 정확도의 제약, 지연 시간의 제약 및 에너지 소모량의 제약 중 적어도 하나와 측정된 성능 에 기반하여 최종 경량화 추론모델을 결정할 수 있다. 다른 예로, 컴퓨터 장치는 추론모델에 대해 파라미 터 조합을 바꾸어가면서 다수의 압축된 추론모델을 생성한 경우 또는 압축 메서드의 다수의 조합을 통해 다수의 압축된 추론모델을 생성한 경우, 다수의 압축된 추론모델들 중 성능이 가장 높은 압축된 추론모델을 최종 경량화 추론모델로 결정할 수 있다. 도 5는 본 발명의 일실시예에 있어서, 최적 파라미터 결정 과정의 예를 도시한 도면이다. 도 5는 HPO 및 타겟 디바이스를 나타내고 있다. 도 5의 실시예는 HPO가 타겟 디바이스을 통해 추론모델 을 압축하여 최종 경량화 추론모델을 생성하는 과정의 예를 설명한다. 파라미터 선택 과정에서 HPO는 입력되는 추론모델을 위한 파라미터를 선택할 수 있다. 이미 설 명한 바와 같이 추론모델은 사전 학습된 모델일 수 있으며, 파라미터는 다수의 압축 메서드들의 조합을 위 한 파라미터들의 조합일 수 있다. 모델 압축 과정에서 HPO는 선택된 파라미터를 이용하여 추론모델을 압축할 수 있다. 압축된 추 론모델은 타겟 디바이스로 전달될 수 있다. 이때, 압축된 추론모델과 함께, 추론모델에 대해 입력된 데이터셋(데이터 및 라벨 포함)이 타겟 디바이스로 함께 전달될 수 있다. 모델 수신 과정에서 타겟 디바이스는 HPO에서 전달되는 압축된 추론모델을 수신할 수 있다. 이 미 설명한 바와 같이 타겟 디바이스는 압축된 추론모델과 함께 데이터셋을 수신할 수 있다. 모델 테스트 과정에서 타겟 디바이스는 압축된 추론모델을 테스트할 수 있다. 일례로, 타겟 디바이 스는 데이터셋의 데이터와 정답인 라벨을 이용하여 압축된 추론모델을 테스트하여 압축된 추론모델의 성능 (일례로, 지연 시간, 정확도 등)을 측정할 수 있으며, 측정된 성능을 HPO로 전달할 수 있다. 보다 구체적 인 예로, 타겟 디바이스는 압축된 추론모델에 데이터셋의 데이터를 입력할 수 있으며, 데이터가 입력된 시 각 및 압축된 추론모델이 입력된 데이터에 대한 결과를 출력하는 시각에 기초하여 지연 시간을 측정할 수 있다. 다른 예로, 타겟 디바이스는 출력된 결과와 데이터에 대한 정답인 라벨을 비교하여 압축된 추론모델의 정 확성을 측정할 수 있다. 반복 과정에서 HPO는 타겟 디바이스로부터 전달된 성능에 따라 파라미터 선택 과정 내지 모델 테스트 과정을 반복할 것인지 여부를 결정할 수 있다. 일례로, HPO는 전달된 성능에 기반하여 압축된 추론모델이 제약을 모두 만족하거나 또는 우선순위에 기반한 제약을 일정 기준 이상 만족하는지 여부를 판단할 수 있다. 만족하는 경우, HPO는 파라미터 선택 과정 내지 모델 테스트 과정의 반복 없 이 압축된 추론모델을 최종 경량화 추론모델로서 제공할 수 있다. 반면, 만족하지 않는 경우 HPO는 파라미터 선택 과정 내지 모델 테스트 과정을 반복하여 새로운 파라미터에 따라 압축된 추론모델을 다시 테스트할 수 있다. 실시예에 따라 반복 과정은 단순히 서로 다른 파라미터를 통해 압축된 기설정된 수의 압축된 추론모델들을 테스트하기 위한 과정일 수 있다. 이 경우, HPO는 제약의 기준에서 가장 성능이 좋은 압축된 추론모델을 최종 경량화 추론모델로서 제공할 수 있다. 또 다른 실시예에서 반복 과정은 하나의 압축된 추론모델을 서로 다른 기설정된 수의 타겟 디바이스들에게 테스트하기 위한 과정일 수도 있다. 이처럼, 본 발명의 실시예들에 따르면, 다양한 경량화 기법을 순차적으로 및/또는 병렬적으로 딥러닝 모델에 적 용하여 딥러닝 모델을 압축할 수 있다. 이상에서 설명된 시스템 또는 장치는 하드웨어 구성요소, 또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조 합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설"}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "명된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소 (processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치 는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터 는 하나 이상의 컴퓨터 판독 가능 기록매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등 을 단독으로 또는 조합하여 포함할 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트 워크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같 은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의 해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2021-0013311", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 청구범위와 균등한 것들도 후술하는 청구범위의 범위에 속한다."}
{"patent_id": "10-2021-0013311", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일실시예에 따른 네트워크 환경의 예를 도시한 도면이다. 도 2는 본 발명의 일실시예에 따른 컴퓨터 장치의 예를 도시한 블록도이다. 도 3은 본 발명의 일실시예에 따른 경량화 시스템의 예를 도시한 도면이다. 도 4는 본 발명의 일실시예에 따른 경량화 방법의 예를 도시한 흐름도이다. 도 5는 본 발명의 일실시예에 있어서, 최적 파라미터 결정 과정의 예를 도시한 도면이다."}
