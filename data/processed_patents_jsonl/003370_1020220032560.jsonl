{"patent_id": "10-2022-0032560", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0135285", "출원번호": "10-2022-0032560", "발명의 명칭": "파일 저장 방법 및 이를 수행하는 전자 장치", "출원인": "삼성전자주식회사", "발명자": "우호빈"}}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,휘발성 메모리;스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지;네이티브 파일 시스템에 의해 파일이 관리되는 제2 스토리지; 및상기 스택커블 파일 시스템의 동작과 상기 네이티브 파일 시스템의 동작을 제어하는 프로세서를 포함하고,상기 프로세서는,상기 휘발성 메모리에 저장된 데이터를 상기 제2 스토리지에 저장하는 연속된 동기화 연산들 사이의 시간 동안상기 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기 및 상기 연속된 동기화 연산들 사이의 시간 간격에 기초하여 상기 타겟 파일의 동기 속성을 결정하고,상기 타겟 파일의 동기 속성이 동기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터를 상기 제1 스토리지로 이동시키는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 휘발성 메모리에 저장된 상기 타겟 파일의 제1 데이터에 대해 제1 동기화 연산을 수행하여 상기 제1 데이터를 상기 제2 스토리지에 저장하고,상기 제1 동기화 연산과 제2 동기화 연산 사이에 상기 휘발성 메모리에 누적된 상기 타겟 파일의 제2 데이터에대해 상기 제2 동기화 연산을 수행하여 상기 제2 데이터를 상기 제2 스토리지에 저장하고,상기 제2 데이터의 크기 및 상기 제1 동기화 연산과 상기 제2 동기화 연산 사이 시간 간격에 기초하여 상기 타겟 파일의 동기 속성을 결정하는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는,상기 제2 데이터의 크기가 설정된 값 이하이고, 상기 시간 간격이 설정된 간격 이하인 경우, 상기 타겟 파일의동기 속성을 동기성으로 결정하는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 프로세서는,상기 제2 데이터의 크기가 상기 설정된 값을 초과하거나, 상기 시간 간격이 상기 설정된 간격을 초과하는 경우,상기 타겟 파일의 동기 속성을 비동기성으로 결정하는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2023-0135285-2-제3항에 있어서,상기 프로세서는,상기 타겟 파일의 동기 속성이 동기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터에 대한 상기 제1 스토리지로의 매핑 정보를 생성하는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 프로세서는,상기 매핑 정보가 생성된 타겟 파일의 데이터를 읽는 경우, 상기 제2 스토리지로부터 상기 매핑 정보가 생성된타겟 파일의 데이터를 읽는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 프로세서는,상기 매핑 정보가 생성된 타겟 파일의 데이터를 덮어쓰는 경우, 상기 매핑 정보에 기초하여 덮어쓰는 데이터를상기 제1 스토리지에 저장하고, 상기 매핑 정보에 대응되는 상기 제2 스토리지에 저장된 타겟 파일의 데이터를무효화하는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 프로세서는,상기 타겟 파일의 덮어쓴 데이터를 읽는 경우, 상기 제1 스토리지로부터 상기 타겟 파일의 덮어쓴 데이터를 읽는, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 제1 스토리지는,영구 메모리(persistent memory; PMEM)이고, 상기 제2 스토리지는,상기 제1 스토리지보다 읽기 속도 및 쓰기 속도가 느린 비휘발성 메모리인, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 휘발성 메모리는, DRAM인, 전자 장치."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "파일 저장 방법에 있어서,동기화 연산들을 수행하여 휘발성 메모리에 저장된 타겟 파일의 데이터를 네이티브 파일 시스템에 의해 파일이관리되는 제2 스토리지에 저장하는 동작;연속된 상기 동기화 연산들 사이의 시간 동안 상기 휘발성 메모리에 저장된 상기 타겟 파일의 데이터의 크기 및상기 연속된 동기화 연산들 사이의 시간 간격 에 기초하여 상기 타겟 파일의 동기 속성을 결정하는 동작; 및상기 타겟 파일의 동기 속성이 동기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터를 스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지로 이동시키는 동작공개특허 10-2023-0135285-3-을 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 제2 스토리지에 저장하는 동작은,상기 휘발성 메모리에 저장된 상기 타겟 파일의 제1 데이터에 대해 제1 동기화 연산을 수행하여 상기 제1 데이터를 상기 제2 스토리지에 저장하는 동작; 및상기 제1 동기화 연산과 제2 동기화 연산 사이에 상기 휘발성 메모리에 누적된 상기 타겟 파일의 제2 데이터에대해 상기 제2 동기화 연산을 수행하여 상기 제2 데이터를 상기 제2 스토리지에 저장하는 동작을 포함하고,상기 타겟 파일의 동기 속성을 결정하는 동작은,상기 제2 데이터의 크기 및 상기 제1 동기화 연산과 상기 제2 동기화 연산 사이 시간 간격에 기초하여 상기 타겟 파일의 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작을 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작은,상기 제2 데이터의 크기가 설정된 값 이하이고, 상기 시간 간격이 설정된 간격 이하인 경우, 상기 타겟 파일의동기 속성을 동기성으로 결정하는 동작을 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작은,상기 제2 데이터의 크기가 상기 설정된 값을 초과하거나, 상기 시간 간격이 상기 설정된 간격을 초과하는 경우,상기 타겟 파일의 동기 속성을 비동기성으로 결정하는 동작을 더 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,상기 이동시키는 동작은,상기 타겟 파일의 동기 속성이 동기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터에 대한 상기 제1 스토리지로의 매핑 정보를 생성하는 동작을 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 매핑 정보가 생성된 타겟 파일의 데이터를 읽는 경우, 상기 제2 스토리지로부터 상기 매핑 정보가 생성된타겟 파일의 데이터를 읽는 동작을 더 포함하는, 파일 저장 방법.공개특허 10-2023-0135285-4-청구항 17 제16항에 있어서,상기 이동시키는 동작은,상기 매핑 정보가 생성된 타겟 파일의 데이터를 덮어쓰는 경우, 상기 매핑 정보에 기초하여 덮어쓰는 데이터를상기 제1 스토리지에 저장하는 동작; 및상기 매핑 정보에 대응되는 상기 제2 스토리지에 저장된 타겟 파일의 데이터를 무효화하는 동작을 더 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 타겟 파일의 덮어쓴 데이터를 읽는 경우, 상기 제1 스토리지로부터 상기 타겟 파일의 덮어쓴 데이터를 읽는 동작을 더 포함하는, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제11항에 있어서,상기 제1 스토리지는,영구 메모리(persistent memory; PMEM)이고, 상기 제2 스토리지는,상기 제1 스토리지보다 읽기 속도 및 쓰기 속도가 느린 비휘발성 메모리인, 파일 저장 방법."}
{"patent_id": "10-2022-0032560", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제11항 내지 제19항 중 어느 한 항의 방법을 실행하는 컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 기록매체."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "파일 저장 방법 및 이를 수행하는 전자 장치가 개시된다. 일 실시예에 따른 전자 장치는 휘발성 메모리, 스택커 블 파일 시스템에 의해 파일이 관리되는 제1 스토리지, 네이티브 파일 시스템에 의해 파일이 관리되는 제2 스토 리지, 및 스택커블 파일 시스템의 동작과 네이티브 파일 시스템의 동작을 제어하는 프로세서를 포함하고, 프로세 서는, 휘발성 메모리에 저장된 데이터를 제2 스토리지에 저장하는 연속된 동기화 연산들 사이의 시간 동안 휘발 성 메모리에 저장된 타겟 파일의 데이터의 크기 및 연속된 동기화 연산들 사이의 시간 간격에 기초하여 타겟 파 일의 동기 속성을 결정하고, 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토리지에 저장된 타겟 파일의 데이 터를 제1 스토리지로 이동시킨다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래 실시예들은 파일 저장 기술에 관한 것이다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "파일 시스템은 물리적인 메모리에서 클러스터 단위 데이터를 배치하고 관리하기 위한 체계이다. 전자 장치는 운영 체제(operating system)의 파일 시스템을 통해 스토리지에 파일 데이터를 구성하고, 파일 데이터를 읽고 쓸 수 있다. 전자 장치 파일 시스템을 설계할 때, 목적에 따라 하나 이상의 파일 시스템 계층들을 스택커블 레 이어(stackable layer)로 설계할 수 있다. 전자 장치는 파일 데이터를 조작하기 위한 네이티브(native) 파일 시스템을 메모리에 마운트(mount)하고, 네이티브 파일 시스템에 스택커블 파일 시스템을 마운트할 수 있다. 네 이티브 파일 시스템에 스택커블 파일 시스템을 마운트한 파일 시스템을 계층적 파일 시스템이라고 한다. 스택커블 파일 시스템은 독립적으로 메모리에 마운트(mount) 또는 언마운트(unmount)될 수 있고, 각각의 스택커 블 파일 시스템은 특정 기능 또는 특정 동작을 수행할 수 있다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "성능 차이가 있는 둘 이상의 메모리를 사용하는 경우, 고성능 스토리지에 특화된 단일 파일 시스템을 이용하여 저성능 스토리지까지 관리하는 것은 저성능 스토리지에 대한 파일 시스템을 사용하여 얻을 수 있는 이점을 잃는것이 되어 비효율적일 수 있다. 일 실시예에 따른 파일 저장 방법 및 이를 수행하는 전자 장치는 네이티브 파일 시스템을 이용하여 저성능 스토 리지를 관리하고, 스태커블 파일 시스템을 이용하여 고성능 스토리지를 관리함으로써 메모리를 효율적으로 사용 하기 위한 것이다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 휘발성 메모리, 스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지, 네 이티브 파일 시스템에 의해 파일이 관리되는 제2 스토리지, 및 상기 스택커블 파일 시스템의 동작과 상기 네이 티브 파일 시스템의 동작을 제어하는 프로세서를 포함하고, 상기 프로세서는, 상기 휘발성 메모리에 저장된 데 이터를 상기 제2 스토리지에 저장하는 연속된 동기화 연산들 사이의 시간 동안 상기 휘발성 메모리에 저장된 타 겟 파일의 데이터의 크기 및 상기 연속된 동기화 연산들 사이의 시간 간격에 기초하여 상기 타겟 파일의 동기 속성을 결정하고, 상기 타겟 파일의 동기 속성이 동기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터를 상기 제1 스토리지로 이동시킬 수 있다. 일 실시예에 따른 파일 저장 방법은 동기화 연산들을 수행하여 휘발성 메모리에 저장된 타겟 파일의 데이터를 네이티브 파일 시스템에 의해 파일이 관리되는 제2 스토리지에 저장하는 동작, 연속된 상기 동기화 연산들 사이 의 시간 동안 상기 휘발성 메모리에 저장된 상기 타겟 파일의 데이터의 크기 및 상기 연속된 동기화 연산들 사 이의 시간 간격에 기초하여 상기 타겟 파일의 동기 속성을 결정하는 동작, 및 상기 타겟 파일의 동기 속성이 동 기성인 경우, 상기 제2 스토리지에 저장된 상기 타겟 파일의 데이터를 스택커블 파일 시스템에 의해 파일이 관 리되는 제1 스토리지로 이동시키는 동작을 포함할 수 있다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "일 실시예에 따른 파일 저장 방법 및 이를 수행하는 전자 장치는 네이티브 파일 시스템과 스택커블 파일 시스템 을 이용하여 고성능 스토리지와 저성능 스토리지를 상호 보완적으로 사용할 수 있다."}
{"patent_id": "10-2022-0032560", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네 트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내 에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 일실시예에 따르면, 프로그램은 전자 장치의 하나 이상의 리소스들을 제어하기 위한 운영 체제, 미들웨어, 또는 상기 운영 체제 에서 실행 가능한 어플리케이션을 포함할 수 있다. 운영 체제는, 예를 들면, AndroidTM, iOSTM, WindowsTM, SymbianTM, TizenTM, 또는 BadaTM를 포함할 수 있다. 프로그램 중 적어도 일부 프로그램은, 예를 들면, 제조 시에 전자 장치에 프리로드되거나, 또는 사용자에 의해 사용 시 외부 전자 장치(예: 전자 장치 (102 또는 104), 또는 서버)로부터 다운로드되거나 갱신 될 수 있다. 운영 체제는 전자 장치의 하나 이상의 시스템 리소스들(예: 프로세스, 메모리, 또는 전원)의 관리(예: 할당 또는 회수)를 제어할 수 있다. 운영 체제는, 추가적으로 또는 대체적으로, 전자 장치 의 다른 하드웨어 디바이스, 예를 들면, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 구동하기 위한 하나 이상의 드라이버 프로그램들을 포함할 수 있다. 미들웨어는 전자 장치의 하나 이상의 리소스들로부터 제공되는 기능 또는 정보가 어플리케이션 에 의해 사용될 수 있도록 다양한 기능들을 어플리케이션으로 제공할 수 있다. 미들웨어는, 예를 들 면, 어플리케이션 매니저, 윈도우 매니저, 멀티미디어 매니저, 리소스 매니저, 파워 매니 저, 데이터베이스 매니저, 패키지 매니저, 커넥티비티 매니저, 노티피케이션 매니저, 로케이션 매니저, 그래픽 매니저, 시큐리티 매니저, 통화 매니저, 또는 음성 인식 매니저 를 포함할 수 있다. 어플리케이션 매니저는, 예를 들면, 어플리케이션의 생명 주기를 관리할 수 있다. 윈도우 매니저 는, 예를 들면, 화면에서 사용되는 하나 이상의 GUI 자원들을 관리할 수 있다. 멀티미디어 매니저는, 예를 들면, 미디어 파일들의 재생에 필요한 하나 이상의 포맷들을 파악하고, 그 중 선택된 해당하는 포맷에 맞 는 코덱을 이용하여 상기 미디어 파일들 중 해당하는 미디어 파일의 인코딩 또는 디코딩을 수행할 수 있다. 리 소스 매니저는, 예를 들면, 어플리케이션의 소스 코드 또는 메모리의 메모리의 공간을 관리할 수 있다. 파워 매니저는, 예를 들면, 배터리의 용량, 온도 또는 전원을 관리하고, 이 중 해당 정보를 이용하여 전자 장치의 동작에 필요한 관련 정보를 결정 또는 제공할 수 있다. 일실시예에 따르면, 파워 매 니저는 전자 장치의 바이오스(BIOS: basic input/output system)(미도시)와 연동할 수 있다. 데이터베이스 매니저는, 예를 들면, 어플리케이션에 의해 사용될 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저는, 예를 들면, 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 갱신을 관리할 수 있다. 커넥티비티 매니저는, 예를 들면, 전자 장치와 외부 전자 장치 간의 무선 연 결 또는 직접 연결을 관리할 수 있다. 노티피케이션 매니저는, 예를 들면, 지정된 이벤트(예: 착신 통화, 메시지, 또는 알람)의 발생을 사용자에게 알리기 위한 기능을 제공할 수 있다. 로케이션 매니저는, 예를 들면, 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저는, 예를 들면, 사용자에게 제공될 하 나 이상의 그래픽 효과들 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 시큐리티 매니저는, 예를 들면, 시스템 보안 또는 사용자 인증을 제공할 수 있다. 통화(telephony) 매니저 는, 예를 들면, 전자 장치에 의해 제공되는 음성 통화 기능 또는 영상 통화 기능을 관리할 수 있다. 음성 인식 매니저는, 예를 들면, 사용자의 음성 데이터를 서버로 전송하고, 그 음성 데이터에 적어도 일부 기반하여 전자 장치에서 수행될 기능에 대응하는 명령어(command), 또는 그 음성 데이터에 적어도 일 부 기반하여 변환된 문자 데이터를 서버로부터 수신할 수 있다. 일 실시예에 따르면, 미들웨어는 동 적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. 일 실시예에 따르면, 미들웨 어의 적어도 일부는 운영 체제의 일부로 포함되거나, 또는 운영 체제와는 다른 별도의 소프트웨 어로 구현될 수 있다. 어플리케이션은, 예를 들면, 홈, 다이얼러, SMS/MMS, IM(instant message), 브라우 저, 카메라, 알람, 컨택트, 음성 인식, 이메일, 달력, 미디어 플레이어 , 앨범, 와치, 헬스(예: 운동량 또는 혈당과 같은 생체 정보를 측정), 또는 환경 정보 (예: 기압, 습도, 또는 온도 정보 측정) 어플리케이션을 포함할 수 있다. 일실시예에 따르면, 어플리케이 션은 전자 장치와 외부 전자 장치 사이의 정보 교환을 지원할 수 있는 정보 교환 어플리케이션(미도 시)을 더 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치로 지정된 정보 (예: 통화, 메 시지, 또는 알람)를 전달하도록 설정된 노티피케이션 릴레이 어플리케이션, 또는 외부 전자 장치를 관리하도록 설정된 장치 관리 어플리케이션을 포함할 수 있다. 노티피케이션 릴레이 어플리케이션은, 예를 들면, 전자 장치 의 다른 어플리케이션(예: 이메일 어플리케이션)에서 발생된 지정된 이벤트(예: 메일 수신)에 대응하 는 알림 정보를 외부 전자 장치로 전달할 수 있다. 추가적으로 또는 대체적으로, 노티피케이션 릴레이 어플리케 이션은 외부 전자 장치로부터 알림 정보를 수신하여 전자 장치의 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치 또는 그 일부 구성 요소(예: 외부 전자장치의 디스플레이 모듈 또는 카메라 모듈)의 전원(예: 턴-온 또는 턴-오프) 또는 기능(예: 밝기, 해 상도, 또는 포커스)을 제어할 수 있다. 장치 관리 어플리케이션은, 추가적으로 또는 대체적으로, 외부 전자 장 치에서 동작하는 어플리케이션의 설치, 삭제, 또는 갱신을 지원할 수 있다. 도 3을 참조하면, 프로그램은 개념적으로 가상 메모리(Virtual Memory) 상에서 사용자 주소 공간(User Address Space)에서 동작하는 응용 프로그램과 커널 주소 공간(Kernel Address Space)에서 동작하는 운영 체제로 구분될 수 있다.응용 프로그램은 사용자 주소 공간에서 동작하는 프로그램들, 즉 사용자 프로세스들을 의미할 수 있다. 응용 프로그램은 복수의 프로세스를 포함할 수 있다. 예를 들면, 응용 프로그램은 제1 프로세스 , 제2 프로세스 및 제n 프로세스를 포함할 수 있다. 각 프로세스(321,322,329)는 자신의 독립 된 주소공간을 가질 수 있다. 응용 프로그램은 자신의 주소 공간에 메모리 공간(버퍼)를 생성하여 커널의 파일 시스템으로부터 임의의 파일을 리드해 오거나 파일 시스템에 파일을 라이트 할 수 있다. 응용 프로그램 은 도 2의 어플리케이션 및 미들웨어에 대응될 수 있다. 운영 체제는 도 2의 운영 체제에 대응될 수 있다. 본 발명의 다양한 실시예에 의하면, 운영 체제 는 시스템 콜 인터페이스, 가상 파일 시스템, 제1 스택커블 파일 시스템네이티브 파일 시 스템제2 스택커블 파일 시스템제1 스택커블 파일 시스템, 제2 스택커블 파일 시스템, 네이 티브 파일 시스템, 디바이스 인터페이스을 포함할 수 있다. 또한, 운영 체제는 상술한 파일 시스템 이외의 다른 파일 시스템을 더 포함할 수도 있다. 시스템 콜 인터페이스는 유저 영역의 응용 프로그램이 커널 영역의 운영 체제 기능을 사용할 수 있도록 해주는 인터페이스로, 적어도 하나의 프로세스가 하드웨어에 접근할 수 있는 기능을 제공할 수 있다. 시스템 콜 인터페이스는 파일 시스템 인터페이스를 응용 프로그램에 제공할 수 있다. 예를 들면, 시 스템 콜 인터페이스는 응용 프로그램이 어떤 종류의 파일 시스템에라도 동일한 방법으로 접근하도록 할 수 있다. 그리고 가상 파일 시스템(350, virtual file system)은 실제 파일 시스템 위의 추상 계층을 의미할 수 있다. 제1 스택커블 파일 시스템은 운영 체제의 런-타임에 다른 파일 시스템 위에 마운트 되거나, 언마운트 될 수도 있다. 제1 스택커블 파일 시스템은 적어도 하나의 기능 또는 적어도 하나의 동작을 수행할 수 있 다. 도3의 간략화된 구조에서, 제1 스택커블 파일 시스템은 가상 파일 시스템이 인터페이싱하는 최 상위 계층의 파일 시스템이며, 제2 스택커블 파일 시스템 또는 네이티브 파일 시스템 위에 마운트될 수 있다. 제2 스택커블 파일 시스템은 운영 체제의 런-타임에 다른 파일 시스템 위에 마운트 되거나, 언마운트 될 수도 있다. 제2 스택커블 파일 시스템은 적어도 하나의 기능 또는 적어도 하나의 동작을 수행할 수 있 다. 제2 스택커블 파일 시스템은 제1 스택커블 파일 시스템의 하위 계층의 파일 시스템일 수 있으며, 네이티브 파일 시스템 위에 마운트될 수 있다. 발명의 다양한 실시예에서, 제2 스택커블 파일 시 스템는 생략될 수 있다. 혹은, 제2 스택커블 파일 시스템의 하위 계층에 제3 내지 제4 의 스택커블 파일 시스템을 구성할 수도 있다. 이에 따라 본 발명의 다양한 실시예에서는 계층의 깊이를 특정 깊이로 한정하지 않는다. 일 실시예로, 상기 스택커블 파일 시스템들(360, 370) 각각은 그 목적에 따라 다양한 종류의 스택커블 파일 시 스템일 수 있다. 예컨대, 하나의 스택커블 파일 시스템은 파일 데이터를 압축/해제하는 압축 파일 시스템일 수 있고, 파일 데이터를 암호화/복호화 하는 암호화 파일 시스템일 수 있다. 또한, 스택커블 파일 시스템은 파일 데이터는 수정하지 않고 전자 장치(예: 도 1의 전자 장치)의 목적에 따라 디렉토리 및 파일의 권한 (permission)을 관리하는 권한 관리 파일 시스템일 수 있다. 상술한 스택커블 파일 시스템에 대한 설명은 설명 을 위한 예시로, 상술한 스택커블 파일 시스템 이외의 다른 목적을 가진 스택커블 파일 시스템이 마운트 되거나, 언마운트될 수도 있다. 한편, 상술한 스택커블 파일 시스템은 목적에 따라 파일 데이터의 페이지 캐쉬 를 계층 내에 가질 수도 있고, 가지지 않을 수도 있다. 예를 들면, 제1 스택커블 파일 시스템은 파일의 페이지 캐시를 가질 수 있고, 파일을 조직, 관리할 수 있다. 디렉토리 권한을 관리하는 권한 관리 파일 시스템 은 파일의 페이지 캐시를 관리하지 않을 수 있다. 네이티브(native) 파일 시스템은 디스크(스토리지) 같은 하위 레벨 미디어(lower level media)에 직접 접 근할 수 있다. 예컨대, 네이티브 파일 시스템은 스토리지 디바이스 드라이버에 직접 액세스 하는 파일 시 스템일 수 있다. 윈도우 운영체제의 FAT 이나 리눅스의 Ext 등이 네이티브 파일 시스템으로 사용될 수 있 으나, 본 발명의 다양한 실시예에 따른 네이티브 파일 시스템은 특정한 파일 시스템을 한정하지는 않는다. 네이티브 파일 시스템도 운영 체제의 런-타임에 마운트되어 사용될 수 있으며, 명세서의 나머지 부분 에서 \"최하위 계층의 파일 시스템\"으로 기술될 수 있다. 또한 도면에는 생략되었지만, 네이티브 파일 시스템은 커널 내의 일반 블록 계층(Generic Block Layer)을 통해 디스크와 I/O 하여, 실제 디스크(예: 스토리지)와 I/O 해야 하는 시점이 되면, 블록 디바이스 드라이버에게 I/O를 요청할 수 있다.본 명세서의 설명에서, 상술한 적어도 하나의 스택커블 파일 시스템(360, 370) 및 네이티브 파일 시스템은 각자 상호 간에 마운트 된 관계에 따라, 현재 파일 시스템, 상위(upper) 파일 시스템, 하위(lower) 파일 시스템, 최상위(topmost) 파일 시스템, 최 하위 파일 시스템 등으로 표현될 수 있다. 본 명세서에서, 전자 장치의 메모리 상에 중첩되게 마운트되어 구성되는 복수의 파일 시스템은 \"전체 파일 시스 템\" 혹은 \"복수의 파일 시스템\"으로 표현될 수 있다. 한 실시예에 따르면, \"전체 파일 시스템\"은 하나의 네이 티브 파일 시스템 및 적어도 하나의 스택커블 파일 시스템을 포함하여 구성될 수 있다. 다른 실시 예에 따르면 \"전체 파일 시스템\"은 적어도 하나 이상의 스택커블 파일 시스템들로 구성될 수 있다. 디바이스 인터페이스는 적어도 하나의 디바이스와의 인터페이스를 제공할 수 있다. 예를 들면, 디바이스 인터페이스는 후술할 스토리지와의 인터페이스를 제공할 수 있다. 한 실시예에 따르면, 디바이스 인터페 이스는 스토리지에 대한 디바이스 드라이버를 포함할 수 있다. 도 4는 일 실시예에 따른 스택커블 파일 시스템을 설명하기 위한 도면이다. 도 4를 참조하면, 스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지 및 네이티브 파일 시 스템에 의해 파일이 관리되는 제2 스토리지가 도시되어 있다. 관리한다는 것은 파일 시스템이 스토 리지를 사용하여 파일의 물리적 소재를 관리하는 것을 의미할 수 있다. 일 실시예에서, 제1 스토리지는 제2 스토리지보다 읽기 속도 및 쓰기 속도가 빠른 메모리일 수 있다. 예를 들어, 제1 스토리지는 영구 메모리(persistent memory; PMEM)이고, 제2 스토리지는 하드 디스 크 드라이브(hard disk drive; HDD) 또는 솔리드 스테이트 드라이브(soild state drive; SSD)일 수 있다. 다 만, 이는 일 예일 뿐이며, 제1 스토리지 및 제2 스토리지는 데이터 처리 속도가 차이나는 임의의 메 모리일 수 있다. 영구 메모리는 메모리 버스에 상주하기 때문에 DRAM(dynamic random access memory)과 유사한 성능을 보이며, 바이트 단위 접근이 가능한 비휘발성 메모리이다. 하드 디스크 드라이브(hard disk drive; HDD) 및 솔리드 스테이트 드라이브(soild state drive; SSD)와 같은 비휘발성 메모리는 중앙 처리 장치(central processing unit; CPU)와 데이터 처리 속도의 차이가 크므로 속도 차이를 극복하기 위해 버퍼 I/O(buffered input/output) 방식을 사용할 수 있다. 버퍼 I/O 방식은 메모리 계층 구조에서 데이터 처리 속도가 CPU 보다 느리고 HDD 및 SDD 보다 빠른 DRAM에 데이터를 캐시하여 이용한다. 영구 메모리는 DRAM 수준의 데이터 처리 속도를 가지므로, 영구 메모리의 특성에 따라 구성된 파일 시스템을 통 해 DRAM에 데이터를 캐시하지 않고 영구 메모리에 직접 데이터가 저장될 수 있다. 제1 스토리지 및 제2 스토리지와 같이 성능 차이가 있는 둘 이상의 메모리를 사용하는 경우, 고성능 스토리지에 특화된 단일 파일 시스템을 이용하여 저성능 스토리지까지 관리하는 것은 저성능 스토리지에 대한 파일 시스템을 사용하여 얻을 수 있는 이점을 잃는 것이 되어 비효율적일 수 있다. 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치)는 네이티브 파일 시스템에 의해 관리되는 제1 스 토리지, 네이티브 파일 시스템에 마운트된 스태커블 파일 시스템에 의해 관리되는 제2 스토리지(42 0)를 포함할 수 있다. 전자 장치는 네이티브 파일 시스템을 이용하여 저성능 스토리지(예: 제2 스토리지 )를 관리하고, 네이티브 파일 시스템에 마운트된 스태커블 파일 시스템을 이용하여 고성능 스토리지 (예: 제1 스토리지)를 관리함으로써 메모리를 효율적으로 사용할 수 있다. 일 실시예에 따른 스택커블 파 일 시스템은 하위 파일 시스템(예: 네이티브 파일 시스템)에 데이터를 전달할뿐만 아니라 고성능 스 토리지를 직접 관리할 수 있다. 예를 들어, 일 실시예에 따른 스택커블 파일 시스템은 디바이스 인터페이 스(예: 도 3의 디바이스 인터페이스)를 통해 제1 스토리지에 직접 접근할 수 있다. 스택커블 파일 시스템은 제1 스토리지의 스토리지 디바이스 드라이버에 직접 액세스 하는 파일 시스템일 수 있다. 영구 메모리의 데이터 처리 속도는 DRAM 수준이지만 DRAM 보다는 느리므로 DRAM을 활용할 수 있는 경우 활용하 는 것이 바람직할 수 있다. 일 실시예에 따른 파일 저장 방법 및 이를 수행하는 장치는 DRAM을 우선적으로 활 용하고, 제2 스토리지에 저장된 파일의 동기 속성에 따라 해당 파일을 제1 스토리지에 이동(migrat e)시킴으로써 데이터를 적절한 메모리에 배치할 수 있고, 제2 스토리지에 저장된 파일을 제1 스토리지 로 이동시킬 경우 매핑 정보만 먼저 생성함으로써 읽기 동작 및 쓰기 동작에 대해 중단 없는 파일 시스템 서비스를 제공할 수 있다.이하, 도 5를 참조하여 일 실시예에 따른 파일 저장 방법에 대해 설명한다. 도5는 일 실시예에 따른 파일 저장 방법의 흐름도이다. 일 실시예에서, 전자 장치(예: 도 1의 전자 장치)는 스택커블 파일 시스템(예: 도 4의 스택커블 파일 시스 템)에 의해 파일이 관리되는 제1 스토리지(예: 도 4의 제1 스토리지) 및 네이티브 파일 시스템(예: 도 4의 네이티브 파일 시스템)에 의해 파일이 관리되는 제2 스토리지(예: 도 4의 제2 스토리지)를 포 함할 수 있다. 제1 스토리지 및 제2 스토리지는 데이터 저장 장치로서, 비휘발성 메모리 및 기록 매체에 대응 될 수 있다. 전자 장치는 휘발성 메모리(예: DRAM)를 더 포함할 수 있다. 예를 들어, 제1 스토리지는 PMEM이고, 제2 스토리지는 HDD 또는 SSD일 수 있다. 다만, 이는 일 예일 뿐이며, 제1 스토리지 및 제2 스토리지는 다양한 비휘발성 메모리일 수 있다. 제1 스토리지는 제2 스토리지보다 읽기 속도 및 쓰기 속도가 빠른 스토리지일 수 있다. 전자 장치는 제2 스토리지에 데이터를 저장할 때 버퍼 I/O(buffered input/output) 방식을 사용하여 휘발성 메 모리에 데이터를 저장할 수 있다. 전자 장치는 휘발성 메모리에 저장된 데이터에 대해 동기화 연산을 수행하여 제2 스토리지에 데이터를 저장할 수 있다. 예를 들어, 응용 프로그램이 데이터를 스토리지에 저장하려는 경우, 운영 체제는 해당 데이터를 휘발성 메모리에 복사하고, 이후 동기화 연산을 수행하여 제2 스토리지에 저장할 수 있다. 제1 스토리지에 데이터를 저장하는 경우, 제1 스토리지는 메모리 버스에 상주하여 휘발성 메모리만큼 빠르기 때 문에 휘발성 메모리를 이용하지 않을 수 있고, 동기화 연산이 필요하지 않을 수 있다. 데이터의 쓰기 연산 단위로 데이터의 크기에 따라 데이터를 저장할 타겟 스토리지를 결정하고 해당 데이터를 해 당 타겟 스토리지에 저장할 수 있으나, 이 경우 읽기 속도 및 쓰기 속도가 빠른 휘발성 메모리의 대역폭을 충분 히 활용하지 못할 수 있다. 도 5를 참조하면, 동작에서, 전자 장치는 저장할 타겟 파일의 데이터에 대한 동기화 연산들을 수행하여 타 겟 파일의 데이터를 제2 스토리지에 저장할 수 있다. 예를 들어, 전자 장치는 타겟 파일의 데이터를 휘발성 메 모리에 저장하고, 동기화 연산을 수행하여 해당 데이터를 제2 스토리지에 저장할 수 있다. 전자 장치는, 동작에서, 연속된 동기화 연산들 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데 이터의 크기 및 연속된 동기화 연산들 사이의 시간 간격에 기초하여 타겟 파일의 동기 속성을 결정할 수 있다. 타겟 파일의 동기 속성은 동기성 및 비동기성 중 어느 하나로 결정될 수 있다. 전자 장치는 연속된 동기화 연 산들 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기가 설정된 값 이하이고 연속된 동기 화 연산들 사이의 시간 간격이 설정된 간격 이하인 경우, 타겟 파일의 동기 속성을 동기성으로 결정할 수 있다. 전자 장치는 연속된 동기화 연산들 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기가 설 정된 값을 초과하거나, 또는 연속된 동기화 연산들 사이의 시간 간격이 설정된 간격을 초과하는 경우, 타겟 파 일의 동기 속성을 비동기성으로 결정할 수 있다. 스토리지의 쓰기 연산의 성능은 동기화 연산의 빈도에 반비례하고, 데이터 크기에 비례할 수 있다. 타겟 파일 의 동기 속성이 동기성인 경우, 타겟 파일을 제2 스토리지에 저장하면 많은 동기화 연산이 필요하여 스토리지의 성능이 저하되므로, 타겟 파일은 동기화 연산을 필요로 하지 않는 제1 스토리지에 저장하는 것이 높은 성능을 위해 효과적일 수 있다. 동작에서, 전자 장치는 타겟 파일의 동기 속성이 동기성인지 여부를 결정할 수 있다. 타겟 파일의 동기 속성이 동기성인 경우, 전자 장치는, 동작에서, 제2 스토리지에 저장된 타겟 파일의 데이터를 제1 스토리 지로 이동시킬 수 있다. 동작에 대해서는 도 7을 참조하여 아래에서 설명한다. 일 실시예에서, 전자 장치가 동기화 연산을 수행하여 타겟 파일을 제2 스토리지에 저장한 이후에 타겟 파일의 동기 속성을 결정함으로써 비동기성 파일에 대해 가장 빠른 데이터 처리 속도를 갖는 휘발성 메모리를 활용할 수 있다. 이하, 도 6을 참조하여 스토리지에 타겟 파일을 저장하고 타겟 파일의 동기 속성을 결정하는 과정에 대해 설명 한다. 도 6은 일 실시예에 따른 전자 장치가 타겟 파일의 동기 속성을 결정하는 동작을 설명하기 위한 도면이다. 도 6을 참조하면, 응용 프로그램(예: 도 3의 응용 프로그램)의 요청에 따라 전자 장치(예: 도 1의 전자 장 치)에서 수행되는 타겟 파일의 데이터(A, B, C, C')에 대한 쓰기 연산들(625, 630, 640, 650), 타겟 파일 의 데이터(B, C)에 대한 동기화 연산들(635, 645) 및 해당 연산들이 수행됨에 따라 제1 스토리지(예: 도 4 의 제1 스토리지), 제2 스토리지(예: 도 4의 제2 스토리지) 및 휘발성 메모리에 저장되는 타겟 파일의 데이터(A, B, C, C')가 시간에 따라 도시되어 있다. 예를 들어, 타겟 파일은 제1 데이터(A), 제2 데이터(B) 및 제3 데이터(C)를 포함할 수 있고, 제1 데이터(A) 및 제2 데이터(B)은 두 번의 쓰기 연산(625, 630)에 의해 휘발성 메모리에 저장될 수 있다. 전자 장치는 제1 데이터(A)에 대한 쓰기 연산을 수행할 수 있다. 제1 데이터(A)는 쓰기 연산에 의해 휘발성 메모리 에 저장될 수 있다. 제1 데이터(A)는 휘발성 메모리에 저장된 뒤 어느정도 시간이 경과하면 제2 스 토리지에 저장될 수 있다. 예를 들어, 제1 데이터(A)는 휘발성 메모리에 저장된 뒤 라이트 백(write back)될 수 있다. 전자 장치는 제2 데이터(B)에 대한 쓰기 연산을 수행할 수 있다. 제2 데이터(B)는 쓰기 연산에 의해 휘발성 메모리에 저장될 수 있으며, 동기화 연산에 의해 제2 스토리지에 저장될 수 있다. 도 6의 예에서, 동기화 연산 이전의 동기화 연산은 없으므로, 동기화 연산이 수행되어도 타겟 파일의 동기 속성은 결정되지 않을 수 있다. 전자 장치는 제3데이터(C)에 대한 쓰기 연산을 수행할 수 있다. 제3 데이터(C)는 하나의 쓰기 연산 에 의해 휘발성 메모리에 저장될 수 있다. 동기화 연산와 후속된 동기화 연산 사이에 휘발성 메모리에 누적된 데이터인 제3 데이터(C)는 후속된 동기화 연산에 의해 제2 스토리지에 저장될 수 있다. 일 실시예에서, 전자 장치는 연속된 동기화 연산들(635, 645) 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기가 설정된 값 이하이고 연속된 동기화 연산들(635, 645) 사이의 시간 간격이 설정된 간격 이하인 경우, 타겟 파일의 동기 속성을 동기성으로 결정할 수 있다. 전자 장치는 연속된 동기화 연산들 (635, 645) 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기가 설정된 값을 초과하거 나, 또는 연속된 동기화 연산들(635, 645) 사이의 시간 간격이 설정된 간격을 초과하는 경우, 타겟 파일의 동기 속성을 비동기성으로 결정할 수 있다. 도 6의 예에서, 연속된 동기화 연산들(635, 645) 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터에 대해 설정된 값은 3MB일 수 있고, 연속된 동기화 연산들(635, 645) 사이 휘발성 메모리에 저장된 타겟 파일의 제3 데이터(C)의 크기는 3MB일 수 있다. 연속된 동기화 연산들(635, 645) 사이의 시간 간격에 대 해 설정된 간격은 1초일 수 있고, 연속된 동기화 연산들(635, 645) 사이의 시간 간격은 0.5초일 수 있다. 전자 장치는 연속된 동기화 연산들(635, 645) 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 제3 데이 터(C)의 크기가 설정된 값 3MB이하이고, 연속된 동기화 연산들(635, 645) 사이의 0.5초의 시간 간격이 설정된 1 초의 시간 간격 이하이므로, 타겟 파일의 동기 속성이 동기성인 것으로 결정할 수 있다. 전자 장치는 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토리지에 저장된 타겟 파일의 데이터(A, B, C)를 제1 스토리지로 이동시킬 수 있다. 전자 장치는 제2 스토리지에 저장된 타겟 파일의 데이터(A, B, C)를 제1 스토리지로 이동시키는 경우, 제2 스토리지에 저장된 제1 데이터(A), 제2 데이터(B), 및 제3 데이터(C)에 대한 매핑 정보만을 먼저 생성하고, 이후 타겟 파일의 데이터(A, B, C)를 덮어쓰는 경우 해당 매핑 정보에 기초하여 제1 스토리지에 데이터를 저장할 수 있다. 예를 들어, 전자 장치는 쓰기 연산 을 수행하여 타겟 파일의 제3 데이터(C)를 제4 데이터(C')로 덮어쓸 수 있다. 이 경우 전자 장치는 제4 데이터(C')를 제1 스토리지에 저장하여 데이터를 덮어쓸 수 있다. 이에 관하여는 도 7을 참조하여 아래에 서 설명한다. 도 7은 일 실시예에 따른 전자 장치가 타겟 파일을 이동시키는 동작을 설명하기 위한 도면이다. 도 7을 참조하면, 동기화 연산(예: 도 6의 동기화 연산)에 의해 타겟 파일의 제3 데이터(C)가 제2 스 토리지(예: 도 4의 제2 스토리지)에 저장되고, 동기 속성이 동기성으로 결정된 타겟 파일의 제3 데이 터(C)을 제1 스토리지(예: 도 4의 제1 스토리지)로 이동시키는 과정이 도시되어 있다. 전자 장치(예: 도 1의 전자 장치)는 타겟 파일의 동기 속성이 동기성으로 결정된 경우, 해당 타겟 파일의 데이터를 곧바로 제1 스토리지로 이동시키지 않고, 타겟 파일의 데이터에 대한 제1 스토리지로의 매핑 정보만을 생성할 수 있다. 예를 들어, 도 7의 경우 전자 장치는 제3 데이터(C)에 대한 매핑 정보(73 0)만을 먼저 생성할 수 있다. 매핑 정보만 생성된 경우, 여전히 타겟 파일의 제3 데이터(C)는 제2 스토리지에 저장되어 있으므로, 전자 장치가 타겟 파일의 제3 데이터(C)에 대한 읽기 연산을 수행하는 경우 제1 스토리지가 아닌 제2 스토리지에서 제3 데이터(C)를 읽을 수 있다. 전자 장치는 타겟 파일의 제3 데이터(C)를 제4 데이터(C')으로 덮어쓰는 경우 매핑 정보에 기초하여 제4 데이터(C')를 제1 스토리지에 저장하고, 제2 스토리지에 저장된 제3 데이터(C')를 무효화 (invalidate)할 수 있다. 전자 장치가 타겟 파일의 동기 속성이 동기성인 것으로 결정되었을 때 곧바로 파일의 데이터를 이동시키지 않고 매핑 정보만을 생성하면 상대적으로 적은 시간이 소요되므로 읽기 연산 및 쓰기 연산의 중단이 없는 파일 시스템 서비스를 제공할 수 있다. 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치)는 휘발성 메모리, 스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지, 네이티브 파일 시스템에 의해 파일이 관리되는 제2 스토리지, 및 스택커블 파일 시스템의 동작과 네이티브 파일 시스템의 동작을 제어하는 프로세서(예: 도 1의 프 로세서)를 포함하고, 프로세서는, 휘발성 메모리에 저장된 데이터를 제2 스토리지에 저장하는 연속된 동기화 연산들 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기 및 연속된 동기화 연산들 사이의 시간에 기초하여 타겟 파일의 동기 속성을 결정하고, 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토 리지에 저장된 타겟 파일의 데이터를 제1 스토리지로 이동시킬 수 있다. 프로세서는, 휘발성 메모리에 저장된 타겟 파일의 제1 데이터(예: 도 6의 제2 데이터(B))에 대해 제1 동기화 연 산(예: 도 6의 동기화 연산)을 수행하여 제1 데이터를 제2 스토리지에 저장하고, 제1 동기화 연산과 제2 동기화 연산(예: 도 6의 동기화 연산) 사이에 휘발성 메모리에 누적된 타겟 파일의 제2 데이터(예: 도 6의 제3 데이터(C))에 대해 제2 동기화 연산을 수행하여 제2 데이터를 제2 스토리지에 저장하고, 제2 데이 터의 크기 및 제1 동기화 연산과 제2 동기화 연산 사이 시간 간격에 기초하여 타겟 파일의 동기 속성을 결정할 수 있다. 프로세서는, 제2 데이터의 크기가 설정된 값 이하이고, 시간 간격이 설정된 간격 이하인 경우, 타겟 파일의 동 기 속성을 동기성으로 결정할 수 있다. 프로세서는, 제2 데이터의 크기가 설정된 값을 초과하거나, 시간 간격이 설정된 간격을 초과하는 경우, 타겟 파 일의 동기 속성을 비동기성으로 결정할 수 있다. 프로세서는, 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토리지에 저장된 타겟 파일의 데이터에 대한 제1 스토리지로의 매핑 정보를 생성할 수 있다. 프로세서는, 매핑 정보가 생성된 타겟 파일의 데이터를 읽는 경우, 제2 스토리지로부터 매핑 정보가 생성 된 타겟 파일의 데이터를 읽을 수 있다. 프로세서는, 매핑 정보가 생성된 타겟 파일의 데이터를 덮어쓰는 경우, 매핑 정보에 기초하여 덮어쓰는 데이터 (예: 도 6의 제4 데이터(C'))를 제1 스토리지에 저장하고, 매핑 정보에 대응되는 제2 스토리지에 저 장된 타겟 파일의 데이터를 무효화할 수 있다. 프로세서는, 타겟 파일의 덮어쓴 데이터를 읽는 경우, 제1 스토리지로부터 타겟 파일의 덮어쓴 데이터를 읽을 수 있다. 제1 스토리지는, 영구 메모리(persistent memory, PMEM)이고, 제2 스토리지는, 제1 스토리지보 다 읽기 속도 및 쓰기 속도가 느린 비휘발성 메모리일 수 있다. 휘발성 메모리는, DRAM일 수 있다. 일 실시예에 따른 파일 저장 방법은 동기화 연산들을 수행하여 휘발성 메모리에 저장된 타겟 파일의 데이터를 네이티브 파일 시스템에 의해 파일이 관리되는 제2 스토리지에 저장하는 동작, 연속된 동기화 연산들 사이의 시간 동안 휘발성 메모리에 저장된 타겟 파일의 데이터의 크기 및 연속된 동기화 연산들 사이의 시간 간 격에 기초하여 타겟 파일의 동기 속성을 결정하는 동작, 및 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토 리지에 저장된 타겟 파일의 데이터를 스택커블 파일 시스템에 의해 파일이 관리되는 제1 스토리지로 이동시키는 동작을 포함할 수 있다. 제2 스토리지에 저장하는 동작은, 휘발성 메모리에 저장된 타겟 파일의 제1 데이터(예: 도 6의 제2 데이터 (B))에 대해 제1 동기화 연산(예: 도 6의 동기화 연산)을 수행하여 제1 데이터를 제2 스토리지에 저 장하는 동작, 및 제1 동기화 연산과 제2 동기화 연산(예: 도 6의 동기화 연산) 사이에 휘발성 메모리에 누 적된 타겟 파일의 제2 데이터(예: 도 6의 제3 데이터(C))에 대해 제2 동기화 연산(예: 도 6의 동기화 연산 )을 수행하여 제2 데이터를 제2 스토리지에 저장하는 동작을 포함하고, 타겟 파일의 동기 속성을 결 정하는 동작은, 제2 데이터의 크기 및 제1 동기화 연산과 제2 동기화 연산 사이 시간 간격에 기초하여 타겟 파 일의 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작을 포함할 수 있다. 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작은, 제2 데이터의 크기가 설정된 값 이하이고, 시간 간격이 설정된 간격 이하인 경우, 타겟 파일의 동기 속성을 동기성으로 결정하는 동작을 포함할 수 있다. 동기 속성을 동기성 및 비동기성 중 어느 하나로 결정하는 동작은, 제2 데이터의 크기가 설정된 값을 초과하거 나, 시간 간격이 설정된 간격을 초과하는 경우, 타겟 파일의 동기 속성을 비동기성으로 결정하는 동작을 더 포 함할 수 있다. 이동시키는 동작은, 타겟 파일의 동기 속성이 동기성인 경우, 제2 스토리지에 저장된 타겟 파일의 데이터 에 대한 제1 스토리지로의 매핑 정보를 생성하는 동작을 포함할 수 있다. 일 실시예에 따른 파일 저장 방법은 매핑 정보가 생성된 타겟 파일의 데이터를 읽는 경우, 제2 스토리지로 부터 매핑 정보가 생성된 타겟 파일의 데이터를 읽는 동작을 더 포함할 수 있다. 이동시키는 동작은, 매핑 정보가 생성된 타겟 파일의 데이터를 덮어쓰는 경우, 매핑 정보에 기초하여 덮어쓰는 데이터(예: 도 6의 제4 데이터(C'))를 제1 스토리지에 저장하는 동작, 및 매핑 정보에 대응되는 제2 스토 리지에 저장된 타겟 파일의 데이터를 무효화하는 동작을 더 포함할 수 있다. 일 실시예에 따른 파일 저장 방법은 타겟 파일의 덮어쓴 데이터를 읽는 경우, 제1 스토리지로부터 타겟 파 일의 덮어쓴 데이터를 읽는 동작을 더 포함할 수 있다. 제1 스토리지는, 영구 메모리(persistent memory, PMEM)이고, 제2 스토리지는, 제1 스토리지보 다 읽기 속도 및 쓰기 속도가 느린 비휘발성 메모리일 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2022-0032560", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 도 3은 본 발명의 다양한 실시예에 따른 프로그램의 구성을 나타내는 블록도이다. 도 4는 일 실시예에 따른 스택커블 파일 시스템을 설명하기 위한 도면이다. 도5는 일 실시예에 따른 파일 저장 방법의 흐름도이다. 도 6은 일 실시예에 따른 전자 장치가 타겟 파일의 동기 속성을 결정하는 동작을 설명하기 위한 도면이다. 도 7은 일 실시예에 따른 전자 장치가 타겟 파일을 이동시키는 동작을 설명하기 위한 도면이다."}
