{"patent_id": "10-2020-0066240", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0149336", "출원번호": "10-2020-0066240", "발명의 명칭": "멀티디바이스 기반 화자분할 성능 향상을 위한 방법 및 시스템", "출원인": "네이버 주식회사", "발명자": "허희수"}}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 시스템에서 실행되는 화자분할 방법에 있어서,상기 컴퓨터 시스템은 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 화자분할 방법은,상기 적어도 하나의 프로세서에 의해, 복수의 전자 기기로부터 각 전자 기기에서 녹음된 음성 파일을 수신하는단계;상기 적어도 하나의 프로세서에 의해, 상기 전자 기기 별로 상기 음성 파일에 대해 계산된 임베딩 행렬을 기초로 후보 클러스터 수를 추정하는 단계;상기 적어도 하나의 프로세서에 의해, 상기 전자 기기 별 후보 클러스터 수를 이용하여 최종 클러스터 수를 결정하는 단계; 및상기 적어도 하나의 프로세서에 의해, 상기 최종 클러스터 수를 이용하여 화자분할 클러스터링을 수행하는 단계를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 수신하는 단계는,상기 전자 기기 별로 상기 음성 파일에 대해 EPD(end point detection)를 수행하는 단계; 및상기 전자 기기 별 EPD 결과를 통합하여 EPD 유니온(union)을 생성하는 단계를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 추정하는 단계는,상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추출을 통해 유사도 행렬(affinity matrix)을 계산하는 단계; 및상기 전자 기기 별로 상기 유사도 행렬을 이용하여 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도값을 계산하는 단계를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계는,상기 유사도 행렬에 대해 고유값 분해(eigen decomposition)를 수행하여 고유값(eigenvalue)을 추출하는 단계;및상기 추출된 고유값을 정렬한 후 인접한 고유값 간의 차이를 기초로 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계공개특허 10-2021-0149336-3-를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계는,상기 유사도 행렬에 대해 고유값 분해를 수행하여 고유값을 추출하는 단계;상기 추출된 고유값을 정렬한 후 인접한 고유값 간의 차이를 기준으로 선택된 고유값의 개수를 상기 후보 클러스터 수로 결정하는 단계; 및상기 후보 클러스터 수의 결정 과정에서 선택되지 않고 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계는,상기 남은 고유값 중 가장 큰 고유값을 상기 유사도 행렬에 대한 신뢰도 값으로 결정하는 것을 특징으로 하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계는,상기 남은 고유값의 평균을 계산하여 평균값을 상기 유사도 행렬에 대한 신뢰도 값으로 결정하는 것을 특징으로 하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제3항에 있어서,상기 추정하는 단계는,상기 음성 파일의 EPD 결과에 대해 학습된 가중치를 기초로 상기 유사도 행렬에 대한 가중합(weighted sum)을적용하는 단계를 더 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제3항에 있어서,상기 결정하는 단계는,상기 신뢰도 값이 가장 큰 유사도 행렬에서 추정된 후보 클러스터 수를 상기 최종 클러스터 수로 결정하는 것을 특징으로 하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 수행하는 단계는,상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추출을 통해 유사도 행렬을 계산하는 단계; 및공개특허 10-2021-0149336-4-상기 전자 기기 별 유사도 행렬을 평균하여 평균 유사도 행렬과 상기 최종 클러스터 수를 기초로 상기 화자분할클러스터링을 수행하는 단계를 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항 내지 제10항 중 어느 한 항의 화자분할 방법을 상기 컴퓨터 시스템에 실행시키기 위해 비-일시적인 컴퓨터 판독가능한 기록 매체에 저장되는 컴퓨터 프로그램."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항 내지 제10항 중 어느 한 항의 화자분할 방법을 컴퓨터에 실행시키기 위한 프로그램이 기록되어 있는 비-일시적인 컴퓨터 판독 가능한 기록 매체."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "컴퓨터 시스템에 있어서,메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는,복수의 전자 기기로부터 각 전자 기기에서 녹음된 음성 파일을 수신하는 과정;상기 전자 기기 별로 상기 음성 파일에 대해 계산된 임베딩 행렬을 기초로 후보 클러스터 수를 추정하는 과정;상기 전자 기기 별 후보 클러스터 수를 이용하여 최종 클러스터 수를 결정하는 과정; 및상기 최종 클러스터 수를 이용하여 화자분할 클러스터링을 수행하는 과정을 처리하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 수신하는 과정은,상기 전자 기기 별로 상기 음성 파일에 대해 EPD를 수행하는 과정; 및상기 전자 기기 별 EPD 결과를 통합하여 EPD 유니온을 생성하는 과정을 포함하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,상기 추정하는 과정은,상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추출을 통해 유사도 행렬을 계산하는 과정; 및상기 전자 기기 별로 상기 유사도 행렬을 이용하여 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도값을 계산하는 과정을 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 과정은,상기 유사도 행렬에 대해 고유값 분해를 수행하여 고유값을 추출하는 과정;공개특허 10-2021-0149336-5-상기 추출된 고유값을 정렬한 후 인접한 고유값 간의 차이를 기준으로 선택된 고유값의 개수를 상기 후보 클러스터 수로 결정하는 과정; 및상기 후보 클러스터 수의 결정 과정에서 선택되지 않고 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 과정을 포함하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 과정은,상기 남은 고유값 중 가장 큰 고유값을 상기 유사도 행렬에 대한 신뢰도 값으로 결정하는 것을 특징으로 하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서,상기 추정하는 과정은,상기 음성 파일의 EPD 결과에 대해 학습된 가중치를 기초로 상기 유사도 행렬에 대한 가중합을 적용하는 과정을 더 포함하는 화자분할 방법."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항에 있어서,상기 결정하는 과정은,상기 신뢰도 값이 가장 큰 유사도 행렬에서 추정된 후보 클러스터 수를 상기 최종 클러스터 수로 결정하는 것을 특징으로 하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제13항에 있어서,상기 수행하는 과정은,상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추출을 통해 유사도 행렬을 계산하는 과정; 및상기 전자 기기 별 유사도 행렬을 평균하여 평균 유사도 행렬과 상기 최종 클러스터 수를 기초로 상기 화자분할클러스터링을 수행하는 과정을 포함하는 컴퓨터 시스템."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "멀티디바이스 기반 화자분할 성능 향상을 위한 방법 및 시스템이 개시된다. 화자분할 방법은, 복수의 전자 기기 로부터 각 전자 기기에서 녹음된 음성 파일을 수신하는 단계; 상기 전자 기기 별로 상기 음성 파일에 대해 계산 된 임베딩 행렬을 기초로 후보 클러스터 수를 추정하는 단계; 상기 전자 기기 별 후보 클러스터 수를 이용하여 최종 클러스터 수를 결정하는 단계; 및 상기 최종 클러스터 수를 이용하여 화자분할 클러스터링을 수행하는 단계 를 포함한다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 화자분할(speaker diarization) 기술에 관한 것이다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "화자분할이란 다수의 화자가 발성한 내용을 녹음한 음성 파일로부터 각 화자 별로 발성 구간을 분할하는 기술이 다. 화자분할 기술은 오디오 데이터로부터 화자 경계 구간을 검출하는 것으로, 화자분할 방식은 화자에 대한 선행 지식 사용 여부에 따라 거리기반 방식과 모델기반 방식으로 나뉠 수 있다. 예컨대, 한국등록특허 제10-1833731호(등록일 2018년 02월 23일)에는 화자의 음성을 인식하는 환경의 변화 및 화자의 발화 상태에 영향 없이 화자의 음성을 통해 화자를 구분할 수 있는 화자 인식 모델을 생성하는 기술이 개시되어 있다. 이러한 화자분할 기술은 회의, 인터뷰, 거래, 재판 등 여러 화자가 일정한 순서 없이 발성하는 상황에서 발성 내용을 화자 별로 분할하여 자동 기록하는 제반 기술로 회의록 자동 작성 등에 활용될 수 있다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "멀티디바이스를 기반으로 화자분할 성능을 향상시킬 수 있는 방법 및 시스템을 제공한다. 각 사용자가 보유한 개인 기기를 활용한 멀티디바이스 환경에서 화자분할을 수행할 수 있는 방법 및 시스템을 제공한다. 신뢰도를 기반으로 화자 수(클러스터 수)를 추정할 수 있는 방법 및 시스템을 제공한다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "컴퓨터 시스템에서 실행되는 화자분할 방법에 있어서, 상기 컴퓨터 시스템은 메모리에 포함된 컴퓨터 판독가능 한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 상기 화자분할 방법은, 상기 적어도 하나 의 프로세서에 의해, 복수의 전자 기기로부터 각 전자 기기에서 녹음된 음성 파일을 수신하는 단계; 상기 적어 도 하나의 프로세서에 의해, 상기 전자 기기 별로 상기 음성 파일에 대해 계산된 임베딩 행렬을 기초로 후보 클 러스터 수를 추정하는 단계; 상기 적어도 하나의 프로세서에 의해, 상기 전자 기기 별 후보 클러스터 수를 이용 하여 최종 클러스터 수를 결정하는 단계; 및 상기 적어도 하나의 프로세서에 의해, 상기 최종 클러스터 수를 이 용하여 화자분할 클러스터링을 수행하는 단계를 포함하는 화자분할 방법을 제공한다. 일 측면에 따르면, 상기 수신하는 단계는, 상기 전자 기기 별로 상기 음성 파일에 대해 EPD(end point detection)를 수행하는 단계; 및 상기 전자 기기 별 EPD 결과를 통합하여 EPD 유니온(union)을 생성하는 단계를 포함할 수 있다. 다른 측면에 따르면, 상기 추정하는 단계는, 상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추출 을 통해 유사도 행렬(affinity matrix)을 계산하는 단계; 및 상기 전자 기기 별로 상기 유사도 행렬을 이용하여 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계를 포함할 수 있다. 또 다른 측면에 따르면, 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계는, 상기 유사도 행렬에 대해 고유값 분해(eigen decomposition)를 수행하여 고유값(eigenvalue)을 추출하는 단계; 및 상 기 추출된 고유값을 정렬한 후 인접한 고유값 간의 차이를 기초로 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계를 포함할 수 있다. 또 다른 측면에 따르면, 상기 후보 클러스터 수와 상기 유사도 행렬에 대한 신뢰도 값을 계산하는 단계는, 상기 유사도 행렬에 대해 고유값 분해를 수행하여 고유값을 추출하는 단계; 상기 추출된 고유값을 정렬한 후 인접한 고유값 간의 차이를 기준으로 선택된 고유값의 개수를 상기 후보 클러스터 수로 결정하는 단계; 및 상기 후보 클러스터 수의 결정 과정에서 선택되지 않고 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계를 포함할 수 있다. 또 다른 측면에 따르면, 상기 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계는, 상기 남은 고유값 중 가장 큰 고유값을 상기 유사도 행렬에 대한 신뢰도 값으로 결정할 수 있다. 또 다른 측면에 따르면, 상기 남은 고유값을 이용하여 상기 신뢰도 값을 계산하는 단계는, 상기 남은 고유값의 평균을 계산하여 평균값을 상기 유사도 행렬에 대한 신뢰도 값으로 결정할 수 있다. 또 다른 측면에 따르면, 상기 추정하는 단계는, 상기 음성 파일의 EPD 결과에 대해 학습된 가중치를 기초로 상 기 유사도 행렬에 대한 가중합(weighted sum)을 적용하는 단계를 더 포함할 수 있다. 또 다른 측면에 따르면, 상기 결정하는 단계는, 상기 신뢰도 값이 가장 큰 유사도 행렬에서 추정된 후보 클러스 터 수를 상기 최종 클러스터 수로 결정할 수 있다. 또 다른 측면에 따르면, 상기 수행하는 단계는, 상기 전자 기기 별로 상기 음성 파일의 EPD 결과에서 임베딩 추 출을 통해 유사도 행렬을 계산하는 단계; 및 상기 전자 기기 별 유사도 행렬을 평균하여 평균 유사도 행렬과 상기 최종 클러스터 수를 기초로 상기 화자분할 클러스터링을 수행하는 단계를 포함할 수 있다. 상기 화자분할 방법을 상기 컴퓨터 시스템에 실행시키기 위해 비-일시적인 컴퓨터 판독가능한 기록 매체에 저장 되는 컴퓨터 프로그램을 제공한다. 상기 화자분할 방법을 컴퓨터에 실행시키기 위한 프로그램이 기록되어 있는 비-일시적인 컴퓨터 판독 가능한 기 록 매체를 제공한다. 컴퓨터 시스템에 있어서, 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로 세서를 포함하고, 상기 적어도 하나의 프로세서는, 복수의 전자 기기로부터 각 전자 기기에서 녹음된 음성 파일 을 수신하는 과정; 상기 전자 기기 별로 상기 음성 파일에 대해 계산된 임베딩 행렬을 기초로 후보 클러스터 수 를 추정하는 과정; 상기 전자 기기 별 후보 클러스터 수를 이용하여 최종 클러스터 수를 결정하는 과정; 및 상 기 최종 클러스터 수를 이용하여 화자분할 클러스터링을 수행하는 과정을 처리하는 컴퓨터 시스템을 제공한다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 따르면, 멀티디바이스를 기반으로 화자분할 성능을 향상시킬 수 있다. 본 발명의 실시예들에 따르면, 별도의 추가 장비를 요구하지 않고 각 사용자가 보유한 개인 기기를 활용한 멀티 디바이스 환경에서 화자분할을 수행할 수 있다. 본 발명의 실시예들에 따르면, 신뢰도를 기반으로 화자 수(클러스터 수)를 보다 정확하게 추정할 수 있다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 실시예를 첨부된 도면을 참조하여 상세하게 설명한다. 본 발명의 실시예들은 오디오 데이터로부터 화자 경계 구간을 검출하는 화자분할 기술에 관한 것이다. 본 명세서에서 구체적으로 개시되는 것들을 포함하는 실시예들은 멀티디바이스를 기반으로 화자분할을 수행하여 화자분할 성능을 향상시킬 수 있고 각 사용자가 보유한 개인 기기를 활용하여 시스템 구축 비용을 절감할 수 있 다. 도 1은 본 발명의 일실시예에 따른 네트워크 환경의 예를 도시한 도면이다. 도 1의 네트워크 환경은 복수의 전 자 기기들(110, 120, 130, 140), 서버, 및 네트워크를 포함하는 예를 나타내고 있다. 이러한 도 1 은 발명의 설명을 위한 일례로 전자 기기의 수나 서버의 수가 도 1과 같이 한정되는 것은 아니다. 복수의 전자 기기들(110, 120, 130, 140)은 컴퓨터 시스템으로 구현되는 고정형 단말이거나 이동형 단말일 수 있다. 복수의 전자 기기들(110, 120, 130, 140)의 예를 들면, 스마트폰(smart phone), 휴대폰, 내비게이션, 컴퓨터, 노트북, 디지털방송용 단말, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC, 게임 콘솔(game console), 웨어러블 디바이스(wearable device), IoT(internet of things) 디바이스, VR(virtual reality) 디바이스, AR(augmented reality) 디바이스 등이 있다. 일례로 도 1에서는 전자 기 기의 예로 스마트폰의 형상을 나타내고 있으나, 본 발명의 실시예들에서 전자 기기는 실질적으로 무 선 또는 유선 통신 방식을 이용하여 네트워크를 통해 다른 전자 기기들(120, 130, 140) 및/또는 서버(15 0)와 통신할 수 있는 다양한 물리적인 컴퓨터 시스템들 중 하나를 의미할 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망, 위성망 등)을 활용하는 통신 방식뿐만 아니라 기기들간의 근거리 무선 통신 역시 포함될 수 있 다. 예를 들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus area network), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네 트워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포 함하는 네트워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으나, 이에 제한되지 않는다. 서버는 복수의 전자 기기들(110, 120, 130, 140)과 네트워크를 통해 통신하여 명령, 코드, 파일, 컨 텐츠, 서비스 등을 제공하는 컴퓨터 장치 또는 복수의 컴퓨터 장치들로 구현될 수 있다. 예를 들어, 서버(15 0)는 네트워크를 통해 접속한 복수의 전자 기기들(110, 120, 130, 140)로 목적하는 서비스를 제공하는 시 스템일 수 있다. 보다 구체적인 예로, 서버는 복수의 전자 기기들(110, 120, 130, 140)에 설치되어 구동 되는 컴퓨터 프로그램으로서의 어플리케이션을 통해, 해당 어플리케이션이 목적하는 서비스(일례로, 음성인식 기반 인공지능 회의록 서비스 등)를 복수의 전자 기기들(110, 120, 130, 140)로 제공할 수 있다. 도 2는 본 발명의 일실시예에 따른 컴퓨터 시스템의 예를 도시한 블록도이다. 도 1을 통해 설명한 서버는 도 2와 같이 구성된 컴퓨터 시스템에 의해 구현될 수 있다. 도 2에 도시된 바와 같이 컴퓨터 시스템은 본 발명의 실시예들에 따른 화자분할 방법을 실행하기 위한 구 성요소로서, 메모리, 프로세서, 통신 인터페이스 그리고 입출력 인터페이스를 포함할 수 있다. 메모리는 컴퓨터에서 판독 가능한 기록매체로서, RAM(random access memory), ROM(read only memory) 및 디스크 드라이브와 같은 비소멸성 대용량 기록장치(permanent mass storage device)를 포함할 수 있다. 여기서 ROM과 디스크 드라이브와 같은 비소멸성 대용량 기록장치는 메모리와는 구분되는 별도의 영구 저장 장치로 서 컴퓨터 시스템에 포함될 수도 있다. 또한, 메모리에는 운영체제와 적어도 하나의 프로그램 코드 가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매 체로부터 메모리로 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 실시예에서 소프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신 인터페이스를 통 해 메모리에 로딩될 수도 있다. 예를 들어, 소프트웨어 구성요소들은 네트워크를 통해 수신되는 파 일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 컴퓨터 시스템의 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 인터페이스에 의해 프로세서로 제공될 수 있다. 예 를 들어 프로세서는 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행 하도록 구성될 수 있다. 통신 인터페이스는 네트워크를 통해 컴퓨터 시스템이 다른 장치와 서로 통신하기 위한 기능을 제공할 수 있다. 일례로, 컴퓨터 시스템의 프로세서가 메모리와 같은 기록 장치에 저장된 프로 그램 코드에 따라 생성한 요청이나 명령, 데이터, 파일 등이 통신 인터페이스의 제어에 따라 네트워크 를 통해 다른 장치들로 전달될 수 있다. 역으로, 다른 장치로부터의 신호나 명령, 데이터, 파일 등이 네 트워크를 거쳐 컴퓨터 시스템의 통신 인터페이스를 통해 컴퓨터 시스템으로 수신될 수 있 다. 통신 인터페이스를 통해 수신된 신호나 명령, 데이터 등은 프로세서나 메모리로 전달될 수 있고, 파일 등은 컴퓨터 시스템이 더 포함할 수 있는 저장 매체(상술한 영구 저장 장치)로 저장될 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망)을 활용하는 통신 방식뿐만 아니라 기기들간의 근거리 유선/무선 통신 역시 포함될 수 있다. 예를 들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus areanetwork), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네 트워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포 함하는 네트워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으나, 이에 제한되지 않는다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 입력 장치는 마이크, 키보드, 카메라 또는 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피커와 같은 장치를 포함 할 수 있다. 다른 예로 입출력 인터페이스는 터치스크린과 같이 입력과 출력을 위한 기능이 하나로 통합 된 장치와의 인터페이스를 위한 수단일 수도 있다. 입출력 장치는 컴퓨터 시스템과 하나의 장치로 구성될 수도 있다. 또한, 다른 실시예들에서 컴퓨터 시스템은 도 2의 구성요소들보다 더 적은 혹은 더 많은 구성요소들을 포 함할 수도 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 예를 들어, 컴 퓨터 시스템은 상술한 입출력 장치 중 적어도 일부를 포함하도록 구현되거나 또는 트랜시버 (transceiver), 카메라, 각종 센서, 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수도 있다. 이하에서는 멀티디바이스 기반 화자분할 성능 향상을 위한 방법 및 시스템의 구체적인 실시예를 설명하기로 한 다. 도 3은 본 발명의 일실시예에 따른 서버의 프로세서가 포함할 수 있는 구성요소의 예를 도시한 블록도이고, 도 4는 본 발명의 일실시예에 따른 서버가 수행할 수 있는 방법의 예를 도시한 흐름도이다. 본 실시예에 따른 서버는 회의록 음성파일을 화자분할을 통해 문서로 정리할 수 있는 인공지능 서비스를 제공하는 서비스 플랫폼 역할을 한다. 서버에는 컴퓨터 시스템으로 구현된 화자분할 시스템이 구성될 수 있다. 서버는 클라이언트 (client)인 복수의 전자 기기들(110, 120, 130, 140)을 대상으로 하는 것으로, 전자 기기들(110, 120, 130, 140) 상에 설치된 전용 어플리케이션이나 서버와 관련된 웹/모바일 사이트 접속을 통해 음성인식 기반 인 공지능 회의록 서비스를 제공할 수 있다. 특히, 서버는 각 사용자가 보유한 개인 기기를 이용한 멀티디바이스를 기반으로 화자분할 성능을 향상시킬 수 있다. 서버의 프로세서는 도 4에 따른 화자분할 방법을 수행하기 위한 구성요소로서 도 3에 도시된 바와 같 이, 음성 통합부, 클러스터 결정부, 및 클러스터링 수행부를 포함할 수 있다. 실시예에 따라 프로세서의 구성요소들은 선택적으로 프로세서에 포함되거나 제외될 수도 있다. 또한, 실시예에 따라 프로세서의 구성요소들은 프로세서의 기능의 표현을 위해 분리 또는 병합될 수 도 있다. 이러한 프로세서 및 프로세서의 구성요소들은 도 4의 화자분할 방법이 포함하는 단계들(S410 내지 S430)을 수행하도록 서버를 제어할 수 있다. 예를 들어, 프로세서 및 프로세서의 구성요소들은 메모리가 포함하는 운영체제의 코드와 적어도 하나의 프로그램의 코드에 따른 명령(instruction)을 실행하 도록 구현될 수 있다. 여기서, 프로세서의 구성요소들은 서버에 저장된 프로그램 코드가 제공하는 명령에 따라 프로세서 에 의해 수행되는 서로 다른 기능들(different functions)의 표현들일 수 있다. 예를 들어, 서버가 기기 별로 인식된 음성 영역을 통합하도록 상술한 명령에 따라 서버를 제어하는 프로세서의 기능적 표현으로서 음성 통합부가 이용될 수 있다. 프로세서는 서버의 제어와 관련된 명령이 로딩된 메모리로부터 필요한 명령을 읽어들일 수 있다. 이 경우, 상기 읽어들인 명령은 프로세서가 이후 설명될 단계들(S410 내지 S430)을 실행하도록 제 어하기 위한 명령을 포함할 수 있다. 이후 설명될 단계들(S410 내지 S430)은 도 4에 도시된 순서와 다른 순서로 수행될 수 있으며, 단계들(S410 내지 S430) 중 일부가 생략되거나 추가의 과정이 더 포함될 수 있다. 도 4를 참조하면, 단계(S410)에서 음성 통합부는 복수의 전자 기기들(110, 120, 130, 140)을 대상으로 각 전자 기기로부터 해당 기기에서 녹음된 음성 파일(이하, '개별 음성 파일'이라 칭함)을 수신하여 개별 음성 파일에서 인식된 음성 영역을 통합할 수 있다. 본 실시예들은 멀티디바이스 기반 환경에서 화자분할을 수행하는 것으로, 예를 들어 회의에 참가하는 각 사용자 가 보유한 개인 기기로 이루어진 복수의 전자 기기들(110, 120, 130, 140)을 활용할 수 있다. 서버와 관련된 전용 어플리케이션이나 웹/모바일 사이트에서는 회의 참가 시작을 위한 시작 버튼과 회의 참가 종료를 위한 종료 버튼이 포함될 수 있고, 시작 버튼이 입력됨과 동시에 기기에서 녹음되는 음성을 서버 로 실시간 전달하는 기능이 포함될 수 있다. 본 실시예들은 회의 음성을 녹음하여 서버로 전달하기 위한 장비로 별도의 추가 장비를 대신하여 회의 참 가자가 회의 중 소지하고 있는 스마트폰이나 태블릿 등과 같은 개인 기기를 활용할 수 있다. 특히, 화자분할 성능을 향상시키기 위해 회의 음성을 녹음하여 서버로 전달하기 위한 장비로 단일 장비가 아닌 다수 참가 자의 개인 기기로 이루어진 멀티디바이스를 활용할 수 있다. 음성 통합부는 각 전자 기기(110, 120, 130, 140)로부터 개별 음성 파일을 수신한 후 각각의 개별 음성 파 일에서 추출된 음성 구간을 통합하는 역할을 수행한다. 기기마다 검출되는 음성 영역이 다를 수 있기 때문에 특정 기기에서 검출되지 않은 음성 영역을 추가하는 것으로, 누락되는 구간이 없도록 하기 위해 기기 별 음성 구간을 합치는 것이다. 단계(S420)에서 클러스터 결정부는 각 개별 음성 파일 별로 개별 음성 파일에 대해 계산된 임베딩 행렬(이 하, '개별 임베딩 행렬'이라 칭함)을 기초로 후보 클러스터 수를 추정한 후 개별 임베딩 행렬에 대한 신뢰도를 기반으로 최종 클러스터 수를 결정할 수 있다. 클러스터 결정부는 각각의 개별 음성 파일에 대해 독립적으로 클러스터 수를 추정한 후 추정된 클러스터 수 중에서 최종 클러스터 수를 결정할 수 있다. 특히, 클러스터 결정부는 최종 클러스터 수를 결정하기 위해 개별 음성 파일에 대한 후보 클러스터 수를 추정하는 과정에서 신뢰도를 함께 계산할 수 있으며, 신뢰도가 가장 높은 개별 음성 파일에서 추정된 후보 클러 스터 수를 최종 클러스터 수로 결정할 수 있다. 클러스터 수를 결정하는 구체적인 과정에 대해서는 이후 다시 설명하기로 한다. 단계(S430)에서 클러스터링 수행부는 단계(S410)에서 통합된 음성 영역에 대해 계산된 임베딩 행렬과 단계 (S420)에서 결정된 최종 클러스터 수를 이용하여 화자분할을 위한 클러스터링을 수행할 수 있다. 클러스터링 수행부는 기기 별 음성 파일에 대한 개별 임베딩 행렬을 평균한 평균 임베딩 행렬을 구할 수 있고, 평균 임베딩 행렬과 최종 클러스터 수를 기초로 화자분할 클러스터링을 수행할 수 있다. 따라서, 본 실시예에서는 클러스터 수 추정과 화자분할 클러스터링을 같은 임베딩 행렬이 아닌 별도의 임베딩 행렬을 기초로 수행할 수 있으며, 클러스터 수 추정은 개별 임베딩 행렬을 이용하고 화자분할 클러스터링은 평 균 임베딩 행렬을 이용할 수 있다. 도 5는 본 발명의 일실시예에 있어서 화자분할 전체적인 과정의 일례를 도시한 것이다. 도 5를 참조하면, 화자분할 과정은 각 전자 기기(110, 120, 130, 140)로부터 수신된 개별 음성 파일 별로 독립 적으로 수행되는 독립 과정과 개별 음성 파일을 통합하여 수행되는 통합 과정으로 이루어질 수 있다. 음성 통합부는 회의가 진행되는 동안 회의에 참가하는 다수 참가자의 개인 기기인 전자 기기(110, 120, 130, 140)로부터 회의 참가자의 위치에서 녹음된 음성 파일(개별 음성 파일)을 수신한다(S51). 음성 통합부는 각각의 개별 음성 파일에 대해 독립적으로 EPD(end point detection) 과정을 수행한다 (S52). EPD는 무음 구간에 해당하는 프레임의 음향 특징을 제거하고 각 프레임별 에너지를 측정하여 음성/무음 여부를 구분한 발성의 시작과 끝만 찾는 것이다. 다시 말해, 음성 통합부는 개별 음성 파일에서 음성이 있는 영역을 찾아내는 EPD를 수행한다. 예를 들어, 도 6에 도시한 바와 같이 음성 통합부는 회의 참가자의 각 기기 별 EPD 결과로 검출된 음성 영 역을 획득할 수 있다. 회의에 참가하는 참가자마다 위치가 다르기 때문에 각기 검출되는 음성 영역 또한 다르게 된다. 다시 도 5를 참조하면, 음성 통합부는 회의 참가자의 각 기기 별 EPD 결과를 취합하여 EPD 유니온(union) 을 생성할 수 있다(S53). 도 7에 도시한 바와 같이, 회의 참가자의 각 기기 별로 검출되는 음성 영역이 모두 다르기 때문에 놓치는 구간이 발생하지 않도록 기기 별 EPD 결과를 합쳐 EPD 유니온을 만들 수 있다. 다시 말해, 음성 통합부는 회의 참가자의 각 기기로부터 수신된 개별 음성 파일 별 개별 EPD 결과를 하나 의 EPD 결과로 통합할 수 있다. 다시 도 5를 참조하면, 클러스터 결정부는 기기 별 EPD 결과에 대해 독립적으로 임베딩 추출 과정을 수행 한다(S54). 클러스터 결정부는 기기 별 EPD 결과에서 임베딩 추출을 통해 개별 유사도 행렬(affinity matrix)을 계산 한 후 기기 별 개별 유사도 행렬을 이용하여 클러스터 수를 계산한다(S55). 이때, 클러스터 결정부는 클러스터 수와 함께 개별 유사도 행렬에 대한 신뢰도를 계산할 수 있다. 도 8을 참조하면, 클러스터 결정부는 각 기기의 개별 음성 파일 별로 계산된 개별 유사도 행렬에 대 해 고유값 분해(eigen decomposition)를 수행하여 고유값(eigenvalue)과 고유벡터(eigenvector)를 추출할 수 있다. 이때, 클러스터 결정부는 개별 유사도 행렬에서 추출된 고유값을 고유값 크기에 따라 정렬하여 정렬 된 고유값을 바탕으로 클러스터 수와 신뢰도 값을 결정할 수 있다. 클러스터 결정부는 정렬된 고유값에서 인접한 고유값 간의 차이를 기준으로 유효한 주성분에 해당되는 고 유값의 개수를 클러스터 수로 결정할 수 있다. 고유값이 높다는 것은 개별 유사도 행렬에서 영향력 이 크다는 것을 의미하는 것으로, 즉 개별 음성 파일 내 음성 영역에 대해 개별 유사도 행렬을 구성할 때 발성이 있는 화자 중 발성 비중이 높다는 것을 의미한다. 다시 말해, 클러스터 결정부는 정렬된 고유값 중에서 충분히 큰 값을 가진 고유값을 선택하여 선택된 고유 값의 개수를 화자 수를 나타내는 클러스터 수로 결정할 수 있다. 클러스터 수의 결정 과정에서 선택되지 못한 고유값은 개별 유사도 행렬에 포함된 노이즈로 간주될 수 있기 때문에 선택되지 못한 고유값이 작을수록 개별 유사도 행렬의 계산이 정확한 것으로 판단할 수 있 어 결과적으로 개별 유사도 행렬에 대한 신뢰도가 높다고 볼 수 있다. 클러스터 결정부는 정렬된 고유값 중에서 클러스터 수의 결정 과정에서 선택되지 못하고 노이즈로 남 은 고유값을 이용하여 신뢰도 값을 계산할 수 있다. 일례로, 클러스터 결정부는 클러스터 수의 결정 과정에서 선택되지 못한 고유값 중 가장 큰 고유값을 신뢰도 값으로 활용할 수 있다. 예를 들어, 정렬된 고유값 중에서 고유값이 가장 높은 순으로 4개가 유효 한 주성분의 수, 즉 클러스터 수로 결정된 경우 5번째 고유값을 신뢰도 값으로 활용할 수 있다. 다른 예로, 클러스터 결정부는 클러스터 수의 결정 과정에서 선택되지 못한 고유값 전체에 대한 평균 을 계산하여 평균 고유값을 신뢰도 값으로 활용할 수 있다. 회의 참가자의 각 기기 별로 검출되는 음성 영역이 다르다는 점에서 이로부터 계산된 개별 유사도 행렬 이 모두 다를 수 있고 화자 수를 나타내는 클러스터 수에 대한 결과 또한 다를 수 있다. 기기 1의 개별 음성 파일에서는 4명의 화자가 추정되고 기기 2의 개별 음성 파일에서는 5명의 화자가 추정되는 경우 이처럼 다른 결과를 통합하기 위해 신뢰도를 활용하는 것이다. 클러스터 결정부는 기기 별 개별 유사도 행렬을 평균한 평균 유사도 행렬을 이용하여 클러스터 수 를 결정하는 것 또한 가능하다. 그러나, 평균 유사도 행렬을 이용하는 경우 클러스터 수를 잘못 추 정하는 오류가 발생할 수 있다. 유사도 행렬에서 계산된 고유값 중에서 유효한 주성분의 수를 유추하여 클러스터 수를 추정하기 때문에 유 사도 행렬의 샤프니스(sharpness)가 떨어지면 성능이 하락할 수도 있다. 따라서, 클러스터 수를 결정함에 있어 경우에 따라서는 음성 파일에 대해 스무딩(smoothing)한 결과(평균 유사도 행렬)보다는 샤프니스한 결과(기기 별 개별 유사도 행렬)를 이용하는 것이 보다 정확한 결과를 얻을 가 능성이 있다.실시예에 따라서는 개별 유사도 행렬에 대한 가중합(weighted sum)을 적용할 수 있다. 개별 유사도 행렬의 구간 별로 신뢰도가 다를 수 있다는 점을 고려하여 개별 유사도 행렬의 모든 구 간에 동일한 가중치를 적용하여 고유값 분해를 수행하는 것이 아니라, EPD로 검출하지 못한 영역의 가중치를 낮 추는 방향 등으로 가중치를 학습하여 적용할 수 있다. 일례로, 개별 유사도 행렬의 구간 별로 랜덤한 가중치를 적용하여 행렬을 합친 후 고유값을 계산하여 신뢰 도를 높이는 방향으로 가중치를 학습할 수 있다. 다시 도 5를 참조하면, 클러스터 결정부는 각 기기의 개별 음성 파일 별로 추정된 클러스터 수와 신뢰도 값을 취합한 후 신뢰도 기반의 클러스터 수를 최종 결정할 수 있다(S56). 클러스터 결정부는 각 기기의 개별 음성 파일 별로 계산된 개별 유사도 행렬 중에서 신뢰도 값이 가장 높 은 개별 유사도 행렬에서 계산된 클러스터 수를 최종 클러스터 수로 결정할 수 있다. 클러스터링 수행부는 각 기기 별 EPD 결과를 취합한 결과인 EPD 유니온을 이용하여 독립적으로 각각의 임 베딩 추출을 통해 기기 별 개별 유사도 행렬을 계산할 수 있다(S57). 클러스터링 수행부는 각각 기기에 대해 독립적으로 계산된 개별 유사도 행렬을 평균하여 평균 유사도 행렬 을 계산한 후 평균 유사도 행렬과 함께 단계(S56)에서 신뢰도를 기반으로 결정된 클러스터 수를 이용하여 화자 분할 클러스터링을 수행할 수 있다(S58). 도 9에 도시한 바와 같이, 클러스터링 수행부는 각각 기기에 대해 독립적으로 계산된 개별 유사도 행렬 을 평균하여 평균 유사도 행렬을 계산할 수 있다. 일례로, 클러스터링 수행부는 각 기기 별로 계산된 개별 유사도 행렬에 대해 행렬 산술연산(element- wise)을 수행하여 평균 유사도 행렬을 계산할 수 있다. 이어, 클러스터링 수행부는 평균 유사도 행렬에 대해 고유값 분해를 수행하여 고유값에 따라 정렬된 고유벡터를 기반으로 클러스터링을 수행할 수 있다. 하나의 개별 음성 파일에서 m개의 음성 구간이 추출되는 경우 m×m개의 엘리멘트를 포함하는 행렬이 만들어지고, 이때 각 엘리먼트를 나타내는 vi,j는 i번째 음성 구간과 j번째 음성 구간 간의 거리를 의미한다. 이때, 클러스터링 수행부는 신뢰도를 기반으로 결정된 클러스터 수만큼 고유벡터를 선택하는 방식으로 화 자분할 클러스터링을 수행할 수 있다. 화자분할을 위한 전체 과정은 회의 진행 중 다수의 개인 기기로 동시 녹음된 음성 파일을 수신하여 기기 별 음 성 파일에 대해 EPD를 수행하고 EPD가 수행된 세그먼트(음성 영역) 단위로 임베딩을 추출하여 클러스터 수(화자 수)를 추정한 후 추정된 클러스터 수를 기반으로 클러스터링을 수행하는 것이다. 본 실시예에서 화자분할 성능을 개선하기 위한 과정으로는 기기 별 개별 음성 파일을 이용하여 EPD 유니온을 생 성하는 것과, 기기 별 개별 음성 파일에서 계산된 개별 임베딩 행렬을 이용하여 클러스터 수를 추정한 후 신뢰 도를 기반으로 최종 클러스터 수를 결정하는 것, 그리고 신뢰도 기반 클러스터 수와 평균 유사도 행렬을 이용하 여 화자분할 클러스터링을 수행하는 것이 포함될 수 있다. 이처럼 본 발명의 실시예들에 따르면, 별도의 추가 장비를 요구하지 않고 다수의 회의 참가자가 소지하고 있는 개인 기기를 활용하여 멀티디바이스 기반 화자분할을 수행할 수 있다. 본 발명의 실시예들에 따르면, 각 기기의 음성 파일로부터 클러스터 수를 추정한 후 이들에 대한 신뢰도를 기반 으로 최종 클러스터 수를 결정함으로써 보다 정확히 추정된 클러스터 수를 통해 화자분할 성능을 향상시킬 수 있다. 이와 같이, 본 실시예들에서는 멀티디바이스 기반 화자분할이라는 새로운 태스크를 정의할 수 있으며, 회의 참 가자가 각자 보유한 개인 기기를 활용함으로써 시스템 구축 비용을 절감할 수 있고 회의가 진행되는 보다 넓은 공간을 효과적으로 커버할 수 있다. 새로운 태스크에 맞게 모델을 학습하는 것이 가장 일반적인 접근방식으로, 새로운 모델의 학습을 위해서는 데이 터 수집, 실제 적용 환경, 일반화 성능 등을 고려할 필요가 있다. 반면에, 본 실시예들은 기존 화자분할 모델 을 그대로 사용할 수 있고, 이미 서비스되고 있는 화자분할 시스템의 경우 모델 재학습 없이 멀티디바이스를 통해 회의 음성을 수신하는 기능만 추가하여 화자분할 성능을 향상시킬 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 프로세서, 콘트롤 러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설"}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "명된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소 (processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치 는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 컴퓨 터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분 산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 이때, 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수 개의 하드웨어가 결합된 형태의 다양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트 워크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같 은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 어플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다."}
{"patent_id": "10-2020-0066240", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2020-0066240", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일실시예에 따른 네트워크 환경의 예를 도시한 도면이다. 도 2는 본 발명의 일실시예에 있어서 컴퓨터 시스템의 내부 구성의 일례를 설명하기 위한 블록도이다. 도 3은 본 발명의 일실시예에 따른 컴퓨터 시스템의 프로세서가 포함할 수 있는 구성요소의 예를 도시한 도면이 다. 도 4는 본 발명의 일실시예에 따른 컴퓨터 시스템이 수행할 수 있는 화자분할 방법의 예를 도시한 순서도이다. 도 5는 본 발명의 일실시예에 있어서 화자분할을 위한 전체적인 과정의 일례를 도시한 것이다. 도 6과 도 7은 본 발명의 일실시예에 있어서 개별 음성 파일에서 인식된 음성 영역을 병합하는 과정을 설명하기 위한 예시 도면이다. 도 8은 본 발명의 일실시예에 있어서 클러스터 수를 결정하는 과정을 설명하기 위한 예시 도면이다. 도 9는 본 발명의 일실시예에 있어서 화자분할 클러스터링을 수행하는 과정을 설명하기 위한 예시 도면이다."}
