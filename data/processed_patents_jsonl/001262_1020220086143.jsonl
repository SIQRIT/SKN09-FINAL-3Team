{"patent_id": "10-2022-0086143", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0009078", "출원번호": "10-2022-0086143", "발명의 명칭": "소프트웨어 정의 네트워킹 기반 실시간 컨트롤 장치 및 실시간 컨트롤 방법", "출원인": "아주대학교산학협력단", "발명자": "오상은"}}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 장치에 있어서,복수의 노드로 이루어지는 네트워크 상에서, 상기 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간을 연결하는데 필요한 복수의 임계 링크를 식별하고,상기 복수의 임계 링크에 기초하여 상기 복수의 노드를 복수의 클러스터로 클러스터링하고,상기 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최종 경로를 식별하고,상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수의 노드를 제어하는 프로세서를 포함하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 노드 중 임의의 노드를 선정하여 상기 임의의 노드와 상기 임계 링크로 연결된 적어도 하나의 노드를 포함하도록 상기 각 클러스터를 식별하고,상기 복수의 노드 각각이 어느 하나의 클러스터에 포함될 때까지 클러스터링하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 프로세서는,상기 각 클러스터에서 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름을 식별하고, 상기 복수의 통신 흐름의 통신 요구 사항을 만족하도록 상기 복수의 통신 흐름을 조정하여 상기 적어도 하나의하위 경로를 식별하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는,상기 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응답 시간을 식별하고,상기 복수의 응답 시간에 기초하여 식별한 전체 응답 시간이 상기 데이터의 전송 마감 시간을 초과하지 않는 경우 상기 데이터를 전송하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 프로세서는,복수의 패킷으로 이루어지는 상기 데이터를 분할하여 전송하는 것에 기초하여 상기 복수의 응답 시간을 식별하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2024-0009078-3-제4항에 있어서,상기 데이터는 제1데이터이고,상기 프로세서는,상기 제1데이터를 전송하는 제1통신 흐름을 포함하는 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하고, 상기 임의의 우선 순위에 따라 상기 임의의 통신 흐름의 통신 가능 여부를 식별하고,통신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하고,복수의 통신 흐름에 대해 확정된 우선 순위에 기초하여 상기 제1데이터를 전송하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 프로세서는,상기 임의의 통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하고,상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 프로세서는,상기 복수의 통신 흐름 중 우선 순위를 할당하지 못한 제3통신 흐름이 존재하는 경우, 상기 제3통신 흐름의 통신 경로 상에서 통신 간섭량이 기 정의된 값 이상인 병목 링크를 식별하고,상기 병목 링크를 제거한 후 상기 적어도 하나의 하위 경로를 조합하여 상기 최종 경로를 다시 식별하는 실시간컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "실시간 컨트롤 장치에 의해 수행되는 소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 방법에 있어서,복수의 노드로 이루어지는 네트워크 상에서, 상기 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간을 연결하는데 필요한 복수의 임계 링크를 식별하는 단계;상기 복수의 임계 링크에 기초하여 상기 복수의 노드를 복수의 클러스터로 클러스터링하는 단계;상기 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최종 경로를 식별하는 단계;상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수의 노드를 제어하는 단계를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 클러스터링하는 단계는,상기 복수의 노드 중 임의의 노드를 선정하여 상기 임의의 노드와 상기 임계 링크로 연결된 적어도 하나의 노드를 포함하도록 상기 각 클러스터를 식별하는 단계;상기 복수의 노드 각각이 어느 하나의 클러스터에 포함될 때까지 클러스터링하는 단계를 포함하는 실시간 컨트롤 방법.공개특허 10-2024-0009078-4-청구항 11 제9항에 있어서,상기 최종 경로를 식별하는 단계는,상기 각 클러스터에서 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름을 식별하는 단계;상기 복수의 통신 흐름의 통신 요구 사항을 만족하도록 상기 복수의 통신 흐름을 조정하여 상기 적어도 하나의하위 경로를 식별하는 단계를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 복수의 노드를 제어하는 단계는,상기 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응답 시간을 식별하는 단계;상기 복수의 응답 시간에 기초하여 식별한 전체 응답 시간이 상기 데이터의 전송 마감 시간을 초과하지 않는 경우 상기 데이터를 전송하는 단계를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 복수의 응답 시간을 식별하는 단계는,복수의 패킷으로 이루어지는 상기 데이터를 분할하여 전송하는 것에 기초하여 상기 복수의 응답 시간을 식별하는 단계를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서,상기 데이터는 제1데이터이고,상기 복수의 노드를 제어하는 단계는,상기 제1데이터를 전송하는 제1통신 흐름을 포함하는 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하는 단계;상기 임의의 우선 순위에 따라 상기 임의의 통신 흐름의 통신 가능 여부를 식별하는 단계;통신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하는 단계;복수의 통신 흐름에 대해 확정된 우선 순위에 기초하여 상기 제1데이터를 전송하는 단계;를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 임의의 통신 흐름의 통신 가능 여부를 식별하는 단계는,상기 임의의 통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하는 단계;상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별하는 단계를 포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 복수의 통신 흐름 중 우선 순위를 할당하지 못한 제3통신 흐름이 존재하는 경우, 상기 제3통신 흐름의 통공개특허 10-2024-0009078-5-신 경로 상에서 통신 간섭량이 기 정의된 값 이상인 병목 링크를 식별하는 단계;상기 병목 링크를 제거한 후 상기 적어도 하나의 하위 경로를 조합하여 상기 최종 경로를 다시 식별하는 단계를포함하는 실시간 컨트롤 방법."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 장치에 있어서,복수의 노드로 이루어지는 네트워크 상에서, 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름에대응하는 복수의 최종 경로를 식별하고,상기 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하고, 상기 임의의 우선 순위에 따라 상기 임의의 통신 흐름의 통신 가능 여부를 식별하고,통신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하고,복수의 통신 흐름에 대해 확정된 우선 순위에 기초하여 상기 복수의 최종 경로를 따라 데이터를 전송하도록 상기 복수의 노드를 제어하는 프로세서를 포함하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 프로세서는,상기 임의의 통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하고,상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 프로세서는,상기 적어도 하나의 제2통신 흐름의 최대 응답 시간 및 전체 패킷 전송 시간에 기초하여 상기 통신 간섭량을 식별하는 실시간 컨트롤 장치."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 장치에 있어서, 복수의 노드로 이루어지는 네트워크 상에서, 상기 복수의 노드 중 소스 노드로부터 경로 생성 요 청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간을 연결하는데 필요한 복수의 임계 링크를 식 별하고, 상기 복수의 임계 링크에 기초하여 상기 복수의 노드를 복수의 클러스터로 클러스터링하고, 상기 각 클 러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최종 경로를 식별하고, 상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수 의 노드를 제어하는 프로세서를 포함한다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 소프트웨어 정의 네트워킹 기반 실시간 컨트롤 장치 및 실시간 컨트롤 방법에 관한 것이다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "사물 인터넷 기술의 급속한 성장으로 미션 크리티컬(mission critical)한 요구 사항이 있는 장치는 네트워크 인 프라를 통해 서로 연결된다. 따라서 실시간 통신에 대한 수요는 산업 네트워크(예: 공장 자동화, 자동차 네트워 크)뿐만 아니라 범용 상용 네트워크(예: 기업 네트워크)로 빠르게 확산되고 있다. 예를 들어, 스마트 공장에는 서로 다른 타이밍 요구 사항을 가지고, 실시간 네트워크 흐름을 통해 서로 통신하 는 복수의 장치(예: 센서 및 액추에이터)가 배치될 수 있다. 이때, 네트워크 흐름의 요구 사항이 단기간이라도 어긋나면 기계 제어에 장애가 발생하고, 하나의 제어 미스로 인해 전체 시스템에 장애가 생기는 등 대재앙으로 이어질 수 있다. 따라서, 종단 간 마감을 보장하면서 실시간 통신을 지원하려면 소스와 대상 간의 경로를 먼저 선택해야 하며 시 간에 민감한 요구 사항을 충족할 수 있도록 트래픽 스케줄링을 해야 한다. 그러나, 기존 네트워크는 고정적이고 폐쇄적인 특성으로 인해 우수한 라우팅 및 트래픽 스케줄링을 달성하기가 근본적으로 어렵다. 이를 해결하기 위해, 네트워크 제어와 패킷 전달 기능의 역할을 분리하는 새로운 제어 패러다임으로 소프트웨어 정의 네트워킹(SDN, Software-defined networking)이 제안되었다. SDN은 논리적으로 중앙 집중화된 SDN 컨트롤러를 통해 프로토콜 계층 전반에 걸쳐 네트워크 리소스를 유연하게 (재)구성 및 최적화하는 기능을 제공한다. 지난 몇 년 동안 SDN 아키텍처를 채택하여 실시간 통신을 지원하기 위한 여러 연구가 수행되었으나, 연구들은 라우팅 또는 트래픽 스케줄링 중 하나만 고려하거나, 라우팅과 스케줄링을 모두 고려하기는 하지만 특정 네트워 크 환경(즉, 클록 동기화 네트워크)에만 적용되거나 높은 복잡성으로 인해 확장성이 낮은 등 여전히 제한적이다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 글로벌 관점에서 대역폭이 보장되는 새로운 경로를 찾기 위해 기존 경로를 적응적으로 재구성 하는 확장 가능한 라우팅 체계를 제공하는 것이다. 본 발명의 목적은 보다 빠르고 최적화된 경로 탐색이 가능한 소프트웨어 정의 네트워킹 기반 실시간 컨트롤 장 치 및 실시간 컨트롤 방법을 제공하는 것이다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 장치에 있어서, 복수의 노드로 이루어지는 네트워크 상에서, 상기 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간을 연결하는데 필요한 복수의 임계 링크를 식별하고, 상기 복수의 임계 링크에 기초하여 상기 복수의 노드를 복수의 클러스터로 클러스터링하고, 상기 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최 종 경로를 식별하고, 상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수의 노드를 제어하는 프로세서를 포함한다. 상기 프로세서는, 상기 복수의 노드 중 임의의 노드를 선정하여 상기 임의의 노드와 상기 임계 링크로 연결된 적어도 하나의 노드를 포함하도록 상기 각 클러스터를 식별하고, 상기 복수의 노드 각각이 어느 하나의 클러스 터에 포함될 때까지 클러스터링할 수 있다. 상기 프로세서는, 상기 각 클러스터에서 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름을 식별 하고, 상기 복수의 통신 흐름의 통신 요구 사항을 만족하도록 상기 복수의 통신 흐름을 조정하여 상기 적어도 하나의 하위 경로를 식별할 수 있다. 상기 프로세서는, 상기 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응답 시간을 식별하고, 상기 복수의 응답 시간에 기초하여 식별한 전체 응답 시간이 상기 데이터의 전송 마감 시간을 초과하지 않는 경우 상 기 데이터를 전송할 수 있다. 상기 프로세서는, 복수의 패킷으로 이루어지는 상기 데이터를 분할하여 전송하는 것에 기초하여 상기 복수의 응 답 시간을 식별할 수 있다. 상기 데이터는 제1데이터이고, 상기 프로세서는, 상기 제1데이터를 전송하는 제1통신 흐름을 포함하는 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하고, 상기 임의의 우선 순위에 따라 상기 임의의 통 신 흐름의 통신 가능 여부를 식별하고, 통신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하고, 복수의 통신 흐름에 대해 확정된 우선 순위에 기초하여 상기 제1데이터를 전송할 수 있다. 상기 프로세서는, 상기 임의의 통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하고, 상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별할 수 있다. 상기 프로세서는, 상기 복수의 통신 흐름 중 우선 순위를 할당하지 못한 제3통신 흐름이 존재하는 경우, 상기 제3통신 흐름의 통신 경로 상에서 통신 간섭량이 기 정의된 값 이상인 병목 링크를 식별하고, 상기 병목 링크를제거한 후 상기 적어도 하나의 하위 경로를 조합하여 상기 최종 경로를 다시 식별할 수 있다. 본 발명의 일 실시예에 따르면 실시간 컨트롤 장치에 의해 수행되는 소프트웨어 정의 네트워킹(SDN, Software- Defined Networking) 기반 실시간 컨트롤 방법에 있어서, 복수의 노드로 이루어지는 네트워크 상에서, 상기 복 수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간 을 연결하는데 필요한 복수의 임계 링크를 식별하는 단계; 상기 복수의 임계 링크에 기초하여 상기 복수의 노드 를 복수의 클러스터로 클러스터링하는 단계; 상기 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하 여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최종 경로를 식별하는 단계; 상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수의 노드를 제어하는 단계를 포함한다. 상기 클러스터링하는 단계는, 상기 복수의 노드 중 임의의 노드를 선정하여 상기 임의의 노드와 상기 임계 링크 로 연결된 적어도 하나의 노드를 포함하도록 상기 각 클러스터를 식별하는 단계; 상기 복수의 노드 각각이 어느 하나의 클러스터에 포함될 때까지 클러스터링하는 단계를 포함할 수 있다. 상기 최종 경로를 식별하는 단계는, 상기 각 클러스터에서 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름을 식별하는 단계; 상기 복수의 통신 흐름의 통신 요구 사항을 만족하도록 상기 복수의 통신 흐름을 조정하여 상기 적어도 하나의 하위 경로를 식별하는 단계를 포함할 수 있다. 상기 복수의 노드를 제어하는 단계는, 상기 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응답 시간 을 식별하는 단계; 상기 복수의 응답 시간에 기초하여 식별한 전체 응답 시간이 상기 데이터의 전송 마감 시간 을 초과하지 않는 경우 상기 데이터를 전송하는 단계를 포함할 수 있다. 상기 복수의 응답 시간을 식별하는 단계는, 복수의 패킷으로 이루어지는 상기 데이터를 분할하여 전송하는 것에 기초하여 상기 복수의 응답 시간을 식별하는 단계를 포함할 수 있다. 상기 데이터는 제1데이터이고, 상기 복수의 노드를 제어하는 단계는, 상기 제1데이터를 전송하는 제1통신 흐름 을 포함하는 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하는 단계; 상기 임의의 우선 순 위에 따라 상기 임의의 통신 흐름의 통신 가능 여부를 식별하는 단계; 통신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하는 단계; 복수의 통신 흐름에 대해 확정된 우선 순위 에 기초하여 상기 제1데이터를 전송하는 단계;를 포함할 수 있다. 상기 임의의 통신 흐름의 통신 가능 여부를 식별하는 단계는, 상기 임의의 통신 흐름보다 우선 순위가 높은 적 어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하는 단계; 상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별하는 단계를 포함할 수 있 다. 상기 복수의 통신 흐름 중 우선 순위를 할당하지 못한 제3통신 흐름이 존재하는 경우, 상기 제3통신 흐름의 통 신 경로 상에서 통신 간섭량이 기 정의된 값 이상인 병목 링크를 식별하는 단계; 상기 병목 링크를 제거한 후 상기 적어도 하나의 하위 경로를 조합하여 상기 최종 경로를 다시 식별하는 단계를 포함할 수 있다. 본 발명의 일 실시예에 따른 소프트웨어 정의 네트워킹(SDN, Software-Defined Networking) 기반 실시간 컨트롤 장치에 있어서, 복수의 노드로 이루어지는 네트워크 상에서, 서로 다른 소스 노드 및 대상 노드에 기초한 복수 의 통신 흐름에 대응하는 복수의 최종 경로를 식별하고, 상기 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당하고, 상기 임의의 우선 순위에 따라 상기 임의의 통신 흐름의 통신 가능 여부를 식별하고, 통 신 가능한 것에 기초하여 상기 임의의 통신 흐름에 대해 할당한 상기 임의의 우선 순위를 확정하고, 복수의 통 신 흐름에 대해 확정된 우선 순위에 기초하여 상기 복수의 최종 경로를 따라 데이터를 전송하도록 상기 복수의 노드를 제어하는 프로세서를 포함한다. 상기 프로세서는, 상기 임의의 통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 있는 경우, 상기 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별하고, 상기 통신 간섭량에 기초하여 상기 임의의 통신 흐름의 전체 응답 시간을 식별할 수 있다. 상기 프로세서는, 상기 적어도 하나의 제2통신 흐름의 최대 응답 시간 및 전체 패킷 전송 시간에 기초하여 상기 통신 간섭량을 식별할 수 있다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따르면, 동적 라우팅을 통해 각 클러스터 내에서의 통신 흐름들을 재구성함으로써 대역 폭이 보장되면서도 빠르게 최종 경로를 연산할 수 있어 효율적이다. 본 발명의 일 실시예에 따르면, 전체 응답 시간을 보다 정확하게 식별함으로써 종단 간 마감 보장을 효율적으로 할 수 있으며, 불필요하게 전체 응답 시간을 길게 잡아 전송하지 못하는 상황을 줄일 수 있다. 본 발명의 일 실시예에 따르면, 트래픽 모델 및 패킷 스케줄링을 신중하게 고려하면서 보수적인 대기 시간 분석 을 기반으로 종단 간 마감을 보장할 수 있다. 본 발명의 일 실시예에 따르면, 통신 간섭량을 일정한 수치로 고정함으로써 우선 순위를 할당하는 알고리즘의 적용 범위를 확장할 수 있다."}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명에 따른 바람직한 실시 형태를 첨부된 도면을 참조하여 상세하게 설명한다. 첨부된 도면과 함께 이하에 개시될 상세한 설명은 본 발명의 예시적인 실시형태를 설명하고자 하는 것이며, 본 발명이 실시될 수 있 는 유일한 실시형태를 나타내고자 하는 것이 아니다. 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관 계없는 부분은 생략할 수 있고, 명세서 전체를 통하여 동일 또는 유사한 구성 요소에 대해서는 동일한 참조 부 호를 사용할 수 있다. 도 1은 본 발명의 일 실시예에 따른 SDN 기반 실시간 컨트롤 시스템을 도시한 개략도이다. 도 1에 도시된 바와 같이, SDN 기반 실시간 컨트롤 시스템은 실시간 컨트롤 장치(이하 컨트롤 장치라고 한 다.), 소스 노드, 대상 노드, 스위치를 포함하는 복수의 노드로 구성될 수 있다. 도 1을 참조하면, 복수의 노드들 간은 물리적인 링크(physical link)로 연결되어 있고, 실시간 컨트롤 장치는 복수의 노드들 과 오픈 플로우 연결(open flow conncection)이 되어 있다. 이때, 복수의 노드에는 호스팅 장치나 스위치 이외 에도 라우터 등이 포함될 수 있다. 본 발명의 일 실시예에 따르면, 컨트롤 장치는 SDN 아키텍처를 채택함에 따라 데이터 전송 시 필요한 경로 탐색, 스케줄링 등 전반적인 네트워크 제어를 수행하는 장치로써, SDN 컨트롤러 일 수 있다. 컨트롤 장치 는 서버, 컴퓨터 등으로 구현될 수 있다. 본 발명의 일 실시예에 따르면, 소스 노드는 데이터를 전송하고자 하는 장치이고, 대상 노드는 소스 노 드로부터 데이터를 수신하는 장치이며, 공장 설비, 컴퓨터, 센서 등 다양한 장치로 구현될 수 있다. 이때, 본 도면에서 지시하는 소스 노드와 대상 노드는 고정되는 것이 아니며, 어느 하나의 노드가 데이터를 전송하고자 하는 경우 소스 노드, 그 전송 목적지가 대상 노드로 지칭될 수 있다. 본 발명의 일 실시예에 따르면, 스위치는 소스 노드와 대상 노드 간의 경로를 제어하는 장치로써, 컨트롤 장치로부터 제어 신호를 수신하여 경로를 제어하는 수동적 장치이다. 앞서 서술한 바와 같이 기존 네트워크 상에서는 스위치가 경로 탐색 및 스케줄링 등이 기능을 수행하였다. 다만, 스위치는 고정적인 위치를 가지는 그 특성상 자신의 주변에 위치한 노드들 간의 네트워크 흐름에 대 한 경합 및 경로 탐색을 수행하는 바, 다소 국소적이고 폐쇄적인 기능을 제공할 수 밖에 없었다. 이에 SDN을 이용하게 되면서 컨트롤 장치가 네트워크 토폴로지를 식별하고, 네트워크 토폴로지 상 모든 노 드들로부터 수신하는 네트워크 정보를 이용하여 경로 탐색 및 스케줄링을 실행하는 바 글로벌한 네트워크 제어 가 가능하게 되었다. 본 발명에서는, 글로벌 관점에서 최적화된 경로 탐색과 우선 순위 할당을 통한 스케줄링을 통해 종단 간 마감을 보장하는 SDN 기반 실시간 컨트롤 장치 및 실시간 컨트롤 방법에 대해 설명한다. 이하, 도면들을 참조하여 본 발명의 일 실시예에 따른 컨트롤 장치의 구성 및 동작에 대해 구체적으로 설 명한다. 도 2는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 구성을 도시한 블럭도이다. 본 발명의 일 실시예에 따른 컨트롤 장치는 통신부, 메모리 및 프로세서를 포함한다. 통신부는 소스 노드, 대상 노드, 스위치를 포함하는 복수의 노드와 신호를 송수신하기 위한 구성요소이다. 본 발명의 일 실시예에 따르면, 통신부는 소스 노드로부터 경로 생성 요청 신호를 수신하거나, 탐색된 최종 경로를 따라 데이터를 전송하도록 적어도 하나의 스위치에 제어 신호를 전송할 수 있다. 이 외에도 복 수의 노드와 통신하기 위해 필요한 모든 데이터를 송수신할 수 있다. 메모리는 컨트롤 장치의 동작 프로그램들을 저장한다. 메모리는 전원의 제공 유무와 무관하게 데이터(정보)를 보존할 수 있는 비휘발성 속성의 스토리지(storage)와, 프로세서에 의해 처리되기 위한 데 이터가 로딩되며 전원이 제공되지 않으면 데이터를 보존할 수 없는 휘발성 속성의 메모리(memory)를 포함한다. 메모리는 복수의 노드 등 외부장치로부터 수집한 데이터를 저장할 수 있고, 소스 노드에서 대상 노드 로 데이터를 전송하는 최종 경로를 식별하거나, 복수의 통신 흐름 간의 우선 순위를 할당하는데 필요한 연 산 프로그램 등을 저장할 수 있다. 프로세서는 프로그램 등 소프트웨어를 실행하여 실시간 컨트롤 장치의 적어도 하나의 다른 구성요소 (예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이터 처리 또는 연산을 수행할 수 있다. 프로세서는 복수의 노드로 이루어지는 네트워크 상에서, 상기 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 상기 소스 노드와 대상 노드 간을 연결하는데 필요한 복수의 임계 링크를 식별하고, 상기 복수의 임계 링크에 기초하여 상기 복수의 노드를 복수의 클러스터로 클러스터링하고, 상기 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 상기 소스 노드와 상기 대상 노드 간을 연결하는 최 종 경로를 식별하고, 상기 최종 경로를 따라 상기 소스 노드에서 상기 대상 노드로 데이터를 전송하도록 상기 복수의 노드를 제어한다. 한편, 프로세서는 상기 동작들을 수행하기 위한 데이터 분석, 처리, 및 결과 정보 생성 중 적어도 일부를 규칙 기반 또는 인공지능(Artificial Intelligence) 알고리즘으로서 기계학습, 신경망 네트워크(neural network), 또는 딥러닝 알고리즘 중 적어도 하나를 이용하여 수행할 수 있다. 신경망 네트워크의 예로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network)과 같은 모델 을 포함할 수 있다. 도 3은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 동작 흐름도를 도시한 도면이다. 본 발명의 일 실시예에 따르면, 프로세서는 복수의 노드로 이루어지는 네트워크 상에서, 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신하는 것에 기초하여 소스 노드와 대상 노드 간을 연결하는데 필요 한 복수의 임계 링크를 식별한다(S10). 프로세서는 복수의 노드 중 소스 노드로부터 경로 생성 요청 신호를 수신할 수 있다. 경로 생성 요청 신호 는 소스 노드가 목적지인 대상 노드에 데이터를 전송할 수 있는 경로를 생성하도록 요청하는 신호를 의미한다. 본 발명의 일 실시예에 따르면, 링크는 하나의 노드에서 다른 노드로 이동하는 단일 경로를 의미하고, 임계 링 크는 소스 노드와 대상 노드 간 경로 탐색 시 필요한 중요 링크를 의미한다. 보다 구체적으로, 네트워크 상에서 소스 노드에서 대상 노드로 이동하는 통신 흐름(흐름이라고도 한다.)이 요구 하는 대역폭보다 낮은 링크들을 제거하였을 때 대상 노드로 이동할 수 없는 경우, 프로세서는 제거된 링크 들을 임계 링크로 식별할 수 있다. 본 발명의 일 실시예에 따르면, 프로세서는 복수의 임계 링크에 기초하여 복수의 노드를 복수의 클러스터 로 클러스터링 한다(S20). 본 발명의 일 실시예에 따르면, 프로세서는 통신 흐름의 경로 최적화를 수행하기 위한 하나의 기법으로 MCF(Multi Commodity Flow)를 이용할 수 있다. MCF가 이용하는 알고리즘으로써 MILP(Mixed-Integer Linear Programming)는 네트워크 상에 존재하는 모든 통신 흐름의 대역폭 요구 사항에 따라 총 대역폭 소비가 최소화되 는 방식으로 모든 통신 흐름의 경로를 결정할 수 있다. MILP는 동적 라우팅으로 효과적이나, 네트워크 크기 및/또는 통신 흐름의 수가 커질수록 기하급수적으로 그 처 리 시간이 많이 걸리는 문제점이 존재한다. 또 다른 기법으로, 최단 경로 알고리즘을 실행하여 경로를 탐색하는 CBR(Constraint-Based Routing)이 있다. 그 러나, CBR은 기존 흐름의 경로 변경을 고려하지 않는 정적 라우팅 특성이 있어, 경로 탐색은 빠르지만 통신 품 질이 저하되는 문제점이 존재한다. 따라서, 본 발명에서는 두 알고리즘의 장점을 조합한 클러스터 기반 적응 라우팅(CAR, Cluster-based Adaptive Routing)에 대해 제안한다. 프로세서는 MILP의 연산량 부담을 줄이기 위해 전체 네트워크 그래프를 여러 클러스터(즉, 하위 그래프)로 분할하여 각 클러스터 내에서의 하위 경로를 MILP를 통해 식별할 수 있다. 이때, 클러스터링 방법에 대한 보다 구체적인 내용은 도 4 및 도 5를 참조하여 설명한다. 본 발명의 일 실시예에 따르면, 프로세서는 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 조합하여 소스 노드와 대상 노드 간을 연결하는 최종 경로를 식별한다(S30). MILP의 장점은 최적의 경로를 탐색함에 있어 기존 경로들 혹은 공유하는 다른 경로들을 조정하여 네트워크를 재 구성하는 것이다. 프로세서는 각 클러스터에서 서로 다른 소스 노드 및 대상 노드에 기초한 복수의 통신 흐름을 식별하고, 복수의 통신 흐름의 통신 요구 사항을 만족하도록 복수의 통신 흐름을 조정하여 적어도 하나의 하위 경로를 식 별할 수 있다. 프로세서는 각 클러스터 별로 식별된 적어도 하나의 하위 경로를 CBR을 이용하여 조합할 수 있다. 앞서 서 술한 바와 같이, CBR은 최단 경로만을 탐색하는 점에서 라우팅 속도는 빠르나 통신 경로의 품질이 낮을 수 있다. 그러나, CBR이 최종 경로를 탐색하기 위해 고려하는 경로들은 이미 MILP를 통해 최적화된 하위 경로들로 구성되어 있으므로, 경로 탐색의 시간을 줄이면서도 품질이 우수한 경로를 탐색할 수 있다. 최종 경로를 탐색하 는 보다 구체적인 과정은 도 5를 참조하여 설명한다. 본 발명의 일 실시예에 따르면, 프로세서는 최종 경로를 따라 소스 노드에서 대상 노드로 데이터를 전송하 도록 복수의 노드를 제어한다(S40). 프로세서는 복수의 노드, 보다 구체적으로 최종 경로 상의 복수의 스위치들이 데이터를 전송하도록 제어 신호를 전송할 수 있다. 본 발명의 일 실시예에 따르면, 동적 라우팅을 통해 각 클러스터 내에서의 통신 흐름들을 재구성함으로써 대역 폭이 보장되는 통신 경로를 식별할 수 있으면서도 빠르게 연산할 수 있어 효율적이다. 도 4는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 클러스터링을 수행하는 동작 흐름도를 도시한 도면이 다. 도 4는 도 3의 S20과 관련하여 클러스터링을 수행하는 동작에 대해 구체적으로 설명한다. 프로세서는 먼저 복수의 노드와 임계 링크만을 포함하는 가상의 그래프를 생성하여, 가상의 그래프 상에서 클러스터링을 수행하는 것으로 본다. 이때, 임계 링크 이외의 링크들(일반 링크들이라고도 한다.)을 모두 제거할 수 있다. 본 발명의 일 실시예에 따르면, 프로세서는 복수의 노드 중 임의의 노드를 선정한다(S21). 본 발명의 일 실시예에 따르면, 프로세서는 선정된 임의의 노드와 임계 링크로 연결된 적어도 하나의 노드 를 식별하여 클러스터에 포함한다(S22). 이때, 적어도 하나의 노드를 식별하기 위해 너비 우선 탐색(breadth-first search) 방법을 이용할 수 있다. 본 발명의 일 실시예에 따르면, 프로세서는 클러스터 내 포함된 노드의 수가 기 정의된 값(N) 미만인지 여 부를 식별한다(S23). MILP 알고리즘 동작 시 연산량 부담을 줄이기 위해 클러스터링을 하는 바, 하나의 클러스터에 포함되는 노드의 수가 일정 개수(N)를 넘어가지 않도록 하기 위함이다. 프로세서는 클러스터 내 포함된 노드의 수가 기 정의된 값(N) 미만인 경우(S23의 Yes), 클러스터에 포함된 노드 중 임의의 노드를 선정하고(S24), 다시 S22 단계로 돌아가서 클러스터에 포함될 노드를 추가로 식별한다. 프로세서는 클러스터 내 포함된 노드의 수가 기 정의된 값(N) 보다 큰 경우(23의 No), 하나의 클러스터로 식별한다(S25). 이때, 기 정의된 값 보다 큰 경우는 현재 노드의 수가 기 정의된 값 보다 작으나, S24로 돌아가서 노드가 추가 됨에 따라 기 정의된 값보다 커지는 경우까지 포함할 수 있다. 그리고, 네트워크 상의 모든 노드는 어느 하나의 클러스터에 포함되어야 하므로, 프로세서는 어느 하나의 클러스터에 포함되지 않은 노드가 존재하는 경우(S26의 Yes), S21로 돌아가서 새로운 클러스터를 식별한다. 상기 프로세서는 어느 하나의 클러스터에 포함되지 않은 노드가 존재하지 않는 경우(S26의 Yes), 즉 복수 의 노드 각각이 어느 하나의 클러스터에 포함된 경우, 클러스터링을 종료한다. 프로세서는 클러스터링 된 가상의 그래프에 이전에 제거한 일반 링크들을 다시 포함하여 그래프를 생성할 수 있다. 본 발명의 일 실시예에 따르면, 임계 링크를 기반으로 클러스터를 구축하기 때문에 클러스터 내에 임계 링크를 배치할 가능성이 더 높은 바, 각 클러스터에 대해 MILP를 적용할 때, 임계 링크를 포함하는 최적의 경로를 찾아 낼 가능성이 높아질 수 있다. 도 5는 본 발명의 일 실시예에 따른 클러스터링에 따른 최종 경로를 식별하는 모습을 도시한 도면이다. 도 5의 510에 도시된 바와 같이, 프로세서는 네트워크 G<V,E> 상에서 소스 노드(snew)와 대상 노드(tnew) 간을 연결하는데 필요한 복수의 임계 링크를 식별할 수 있다. 이때, V는 노드 집합을, E는 링크 집합을 의미한 다. 도 5의 520에서는 도 4에서 설명한 바와 같이 프로세서는 복수의 노드들을 복수의 클러스터로 클러스터링 할 수 있다. 이때, 도시되지는 않았으나, 가상 그래프를 생성하여 복수의 노드와 식별한 복수의 임계 링크만을 이용하여 클러스터링 할 수 있다. 본 도면에서는, 12개의 노드가 G1, G2, G3 세개의 클러스터로 클러스터링 되 었다. 도 5의 530에 도시된 바와 같이, 프로세서는 각 클러스터 별로 적어도 하나의 하위 경로를 식별한다. 식별 된 하위 경로들은 가상 링크(virtual link)로 표시될 수 있다. 보다 구체적으로, 개별 클러스터를 구성한 후 MILP 최적화를 통해 최종 경로(Rnew)를 찾기 위한 가상 링크를 설 정하는 것을 목표로 한다. 먼저, 통신 흐름 집합 F를 클러스터 Gn에 속하는 하위 흐름 집합 Fn으로 분할한다. 흐름 fi ∈ F가 링크 l(a, b) ∈ En을 사용하여 Gn을 통과하는 경우 클러스터 Gn 내에서 소스 노드 si,n 및 대상 노드 ti,n을 갖도록 하위 흐름 fi,n을 합성하고(즉, si,n, ti,n ∈ Vn), Fn에 하위 흐름을 추가한다. 여기서, si,n은 si ∈ Vn이면 si로 정의되고, 그렇지 않으면 Gn에서 fnew의 들어오는 경계 노드로 정의된다. 유사하게, ti,n은 ti ∈ Vn이면 ti로 정의되고, 그렇지 않으면 Gn에서 fnew의 나가는 경계 노드로 정의된다. 도 5의 520에서 f1을 두 개의 하위 흐름 f1,1과 f1,2로 나눌 수 있다. 여기서 f1,1은 G1에 속해 링크 l(a, b) 와 l(b, c)를 사용하고, f1,2는 G2에 속해 링크 l(d, e)를 사용한다. 따라서 두 개의 하위 흐름을 각각 F1과 F2 에 추가할 수 있다. 다음으로 각 클러스터에 속할 수 있는 fnew의 하위 흐름을 추가로 합성한다. 여기서 fnew에는 아직 경로가 없으 므로 해당 하위 흐름이 속하는 클러스터가 결정되지 않는다. 따라서 프로세서는 하위 흐름이 각 클러스터 에 속할 수 있는 모든 경우를 고려하여 fnew에서 사용되는 들어오고 나가는 경계 노드의 모든 조합을 탐색한다. fnew의 하위 흐름은 다음과 같은 네 가지 경우로 합성할 수 있다. 1) snew, tnew ∈ Gn이면 snew에서 tnew로 이동하는 하나의 하위 흐름을 만들 수 있다. 2) snew ∈ Gn이지만 tnew Gn이면 snew에서 Gn의 경계 노드로 이동하는 하위 흐름을 만들 수 있다. 3) tnew ∈ Gn이지만 snew Gn이면 Gn의 경계 노드에서 tnew로 이동하는 하위 흐름을 만들 수 있다. 4) snew, tnew Gn이면 Gn 내의 가능한 모든 경계 노드 쌍 사이를 이동하는 하위 흐름을 합성할 수 있다. 예를 들어, 도 5의 520에서 다음 노드 쌍을 소스 노드 및 대상 노드로 사용하는 6개의 하위 흐름을 합성할 수 있다. (snew → b), (snew → c), (g → tnew), (h → tnew ), (d → f) 및 (f →d) 그런 다음 fnew에서 만든 각 하위 흐름에 대해 MILP 최적화를 실행한다. MILP를 통해 snew에서 tnew까지 대역폭 요구 사항을 보장할 수 있는 경로 fnew를 찾으면, fnew의 경로를 단순화 하기 위해 가상 링크 l*(snew, tnew)를 구성하고 이를 용량이 ∞로 설정된 가상 네트워크 G*<V*,E*>에 추가한다. 예를 들어, 도 5의 530에서 가상 링크 l*(g, tnew)는 fnew(g, tnew)에 대한 MILP 최적화 솔루션에서 생성된다. 이는 클러스터 G3 내에서 g에서 tnew로의 실행 가능한 경로가 있음을 의미한다. 도 5의 540에 도시된 바와 같이, 프로세서는 하위 경로들을 조합하여 새로운 경로(Rnew)를 식별할 수 있다. 가상 그래프 G*에서 fnew에 대한 경로 Rnew를 찾기 위해 CBR을 실행한다. 본 발명의 일 실시예에 따른 클러스터 기반 적응적 라우팅 기법의 주요 특징은 MILP 최적화의 문제 공간을 크게 줄이는 것이다. 이 방법은 MILP 최적화를 위한 총 계산량을 실질적으로 줄이는 효과로 이어진다. 도 6은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 우선 순위 할당을 수행하는 동작 흐름도를 도시한 도 면이다. 본 발명의 일 실시예에 따르면, 도 3의 S30에서 식별한 최종 경로의 경우, 하나의 소스 노드로부터 대응되는 대 상 노드로 이동하는 하나의 통신 흐름에 대한 경로이다. 즉, 네트워크 상에는 서로 다른 소스 노드 및 대상 노 드를 가지는 복수의 통신 흐름이 존재할 수 있다. 따라서, 네트워크 상에 복수의 통신 흐름 중 동일한 스위치를 공유하는 흐름은 스위치 내의 동일한 출력 포트로 향하는 경우 경합의 대상이 되는 바, 이들 간의 통신 우선 순위를 할당할 필요가 있다. 본 발명의 일 실시예에 따르면, 프로세서는 복수의 통신 흐름 중 임의의 통신 흐름에 임의의 우선 순위를 할당한다(S41). 이때, 우선 순위가 낮은 것부터 차례로 할당한다. 예를 들어, 10개의 통신 흐름(f1, f2, ..., f10)이 존재하고, 제일 먼저 선택된 임의의 통신 흐름에 최하위 우선 순위를 할당한다. 본 발명의 일 실시예에 따르면, 프로세서는 임의의 우선 순위에 따라 임의의 통신 흐름의 통신 가능 여부 를 식별한다(S42). 통신 가능 여부란 임의의 통신 흐름이 할당된 임의의 우선 순위를 가질 때, 임의의 통신 흐름의 전체 응답 시간 이 임의의 통신 흐름에 대응하는 데이터 전송 마감 시간을 초과하는지 여부를 의미한다. 즉, 임의의 통신 흐름 의 종단 간 마감 보장이 가능한 지 여부를 의미한다. 이때, 통신 흐름에 대응하는 통신 경로는 복수의 링크로 이루어져 있고, 하나의 링크를 통과할 때마다 걸리는 시간을 응답 시간이라고 한다. 그리고, 임의의 통신 흐름의 전체 응답 시간은 데이터가 소스 노드로부터 복수의 링크를 거쳐서 대상 노드에 도 달하기까지의 시간을 의미한다. 프로세서는 임의의 통신 흐름에 대해 식별된 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응 답 시간을 식별하고, 복수의 응답 시간에 기초하여 전체 응답 시간을 식별할 수 있다. 전체 응답 시간을 식별하 는 보다 구체적인 과정은 도 7 및 도 8을 참조하여 설명한다. 이때, 프로세서는 식별한 전체 응답 시간이 데이터의 전송 마감 시간을 초과하지 않는 경우 데이터를 전송 하도록 최종 경로 상의 스위치들을 제어할 수 있다. 프로세서는 할당된 우선 순위에 따라 임의의 통신 흐름의 통신이 가능한 경우(S42의 Yes), 임의의 통신 흐 름의 우선 순위를 확정한다(S43). 프로세서는 할당된 우선 순위에 따라 임의의 통신 흐름의 통신이 가능하지 않은 경우(S42의 No), 선정된 임의의 통신 흐름을 복수의 통신 흐름 세트에 복귀시킨다(S44). 다시 S41로 돌아가서 다른 임의의 통신 흐름에 해당 우선 순위를 부여하여 통신 가능 여부를 확인한다. 프로세서는 복수의 통신 흐름 중 어느 하나의 우선 순위가 할당되지 않은 통신 흐름이 존재하는지 여부를 식별한다(S45). 복수의 통신 흐름 중 어느 하나의 우선 순위가 확정되지 않은 통신 흐름이 존재하는 경우(S45의 Yes), 프로세서 는 S41 내지 S43을 반복하며 모든 통신 흐름에 어느 하나의 우선 순위가 확정되도록 동작한다. 모든 통신 흐름에 우선 순위가 확정된 경우(S45의 No), 프로세서는 우선 순위 할당 프로세스를 종료한다. 본 발명의 일 실시예에 따르면, 네트워크 상에 흐르는 복수의 통신 흐름에 우선 순위를 부여함에 따라 각 통신 흐름에 대한 종단 간 마감을 보장할 수 있다. 도 7은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 통신 흐름의 전체 응답 시간을 식별하는 모습을 도시 한 도면이다. 도 7은 Ni개의 링크를 통해 데이터를 전송하는 과정에서 각 링크별 응답 시간()과 전체 응답 시간() 을 도시한다. 도 6의 S42와 관련하여 임의의 통신 흐름이 통신 가능한지 여부를 식별하기 위해 통신 흐름의 전체 응답 시간을 식별해야 한다. 프로세서는 임의의 통신 흐름에 대해 식별된 최종 경로를 이루는 복수의 링크 각각에 대응하는 복수의 응 답 시간을 식별하고, 복수의 응답 시간에 기초하여 전체 응답 시간을 식별할 수 있다. 기존의 분산 컴퓨팅 모델에서는 이어지는 링크 간 전송에 있어서, 이전 링크로부터 데이터 전송이 완료된 후에 만 다음 링크에서 데이터 전송 실행을 시작해야 하는 엄격한 우선 순위 제약을 받는다. 따라서, 기존 분산 컴퓨 팅 모델을 통해 식별하는 전체 응답 시간은 각 링크별 최대 응답 시간을 모두 합산한 것과 같다. 다만, 실제 데 이터 전송은 데이터 전체를 전송하는 것이 아니라, 데이터를 복수의 패킷으로 분할하여 전송하는 바 파이프라이 닝을 통해 실제 데이터를 전송하는 시간은 각 링크별 최대 응답 시간을 합산하는 것보다 적게 들 수 있다. 본 발명은 패킷 교환 네트워킹 모델을 이용하여 상기와 같은 엄격한 우선 순위의 제약을 완화하고, 보다 정확한 응답 시간을 계산하는 방안을 제안한다. 패킷 교환 네트워킹 모델은 네트워크 관점에서 데이터보다 더 작은 단위인 패킷을 실제 통신 단위로 본다. 즉, 데이터는 복수의 패킷으로 이루어지고, 단일 데이터에 대해 여러 링크를 통한 패킷 전송이 가능하다. 따라서, 마지막 링크를 제외한 모든 링크에서 단일 메시지의 전송 시간을 숨길 수 있는 패킷 파이프라인 효과가 발생한 다. 통신 흐름(fi)가 링크(lk)에서 경험하는 최대 응답 시간(ri,k)은 다음 고정 소수점 반복으로 계산된다. 수학식 1"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "상기 수학식 1의 Bk는 링크를 선점할 수 없는 전송 특성으로 인해 링크에서 우선 순위가 낮은 흐름의 전송으로 생길 수 있는 최대 차단 시간이다. 즉, ,여기서 는 단일 패킷 크기이며, 는 링크의 전송 대역폭이다. 그리고 hp(i, k)는 링크에서 fi보다 우선 순위가 높은 흐름의 집합이고, 는 링크에서 fi에 대한 전체 패킷의 전송 시간, 즉 데이터 전송 시간을 의미한다. 는 우선 순위가 높은 흐름 fj가 링크 lk에 진입하는 시간과 이전 링크에서 전송 완료되는 시간 간의 편차인 지터를 의미한다. 이는 이전 링크에서 fj가 다 른 흐름들로부터 받은 간섭의 양에 따라 달라진다. Tj는 흐름 fj의 전송 주기이다. 그러나 앞에서 언급했듯이 패킷 파이프라인 효과는 마지막 링크를 제외한 모든 링크에서 단일 메시지의 전송 시 간을 숨길 수 있다. 따라서, 모든 링크에 대한 최대 응답 시간을 계산할 필요는 없고, 파이프라인 효과에 따라 실제 응답 시간을 다음 수학식 2와 같이 정의할 수 있다. 수학식 2"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "실제 응답 시간( )은 수학식 1에서 구한 최대 응답 시간()에서 전체 패킷 전송 시간()을 빼고 각 패킷별 전송 시간( )만을 더한 값이다. 수학식 3"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "전체 응답 시간()은 상기 수학식 3과 같이 마지막 링크()를 제외한 각 링크별 응답 시간()의 합과 마지막 링크()의 최대 응답 시간()을 더한 값이 된다. 본 발명의 일 실시예에 따르면, 전체 응답 시간을 보다 정확하게 식별함으로써 종단 간 마감 보장을 효율적으로 할 수 있으며, 불필요하게 전체 응답 시간을 길게 잡아 전송하지 못하는 상황을 줄일 수 있다. 도 8은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 우선 순위 할당을 위한 전체 응답 시간을 식별하는 동작 흐름도를 도시한 도면이다. 도 6에서 설명한 우선 순위 할당 방식은 OPA(Optimal Priority Assignment) 알고리즘이다. 이때 OPA 알고리즘 을 적용하기 위해서는 더 높고 동일한 우선 순위를 가지는 통신 흐름 간의 상대적 순서에 의존하지 않아야 한다.그러나, 수학식 1의 지터()는 이전 하위 작업이 다른 더 높은 우선 순위 작업에서 받는 간섭의 양에 따라 달라지는 바, 우선 순위의 상대적 순서에 의해서도 영향을 받는다. 따라서, OPA 알고리즘을 적용하기 위해서 지터() 값이 우선 순위의 상대적 순서에 의해 영향을 받지 않도록 상한선(upper bound)을 설정하여 상수화하는 것이 필요하다. 수학식 4"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "이때, 새로운 지터()를 계산하기 위해 종단 간 마감 시간()에서 전체 패킷 전송 시간()을 제외하 는 것으로 구하는 경우, 필요 이상으로 지터의 상한선을 높게 잡아 비관적(pessimistic)이다. 따라서, 본 발명에서는 새로운 지터()를 계산하기 위해 종단 간 마감 시간() 대신 최대 응답 시간 ()을 이용한다. 보다 구체적으로, 상기 수학식 4와 같이 임의의 통신 흐름보다 우선 순위가 높은 적어도 하 나의 통신 흐름의 최대 응답 시간()과 전체 패킷 전송 시간() 간의 관계를 이용한다. 여기서 d는 재귀 깊이를 나타내고, 동일한 링크를 공유하는 모든 흐름이 fi보다 높은 우선순위를 갖는다는 가정 하에 fi가 링크 lk에서 경험할 수 있는 새로운 최대 응답 시간( )은 수학식 5와 같다. 수학식 5"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "up(i, k)는 fi와 동일한 링크 lk를 공유하는 흐름 집합을 나타낸다. 수학식 4와 수학식 5는 미리 구성된 재귀 깊이 d에 따라 재귀적으로 계산되며 깊이 d가 클수록 새로운 지터()가 더 타이트하게 구해질 수 있다. 새로운 지터()에 의해 계산되는 새로운 최대 응답 시간( )을 수학식 2 및 수학식 3의 최대 응답 시 간()에 대입하여 보다 정확한 전체 응답 시간()을 계산할 수 있을 것이다. 이를 기초로 각 통신 흐름의 전체 응답 시간을 식별하는 과정을 도 8을 참조하여 살펴본다. 도 6의 S42에서 할당된 우선 순위에 따라 임의의 통신 흐름이 통신 가능한지 여부를 살펴볼 때의 세부 과정으로, 임의의 통신 흐름을 제1통신 흐름이라고 가정한다. 프로세서는 제1통신 흐름보다 우선 순위가 높은 적어도 하나의 통신 흐름(이하 제2통신 흐름이라 한다.)이 존재하는지 여부를 식별한다(S810). 제1통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 존재하는 경우(S810의 Yes), 프로세서 는 적어도 하나의 제2통신 흐름에 대한 통신 간섭량을 식별(S820)한다. 이때, 통신 간섭량은 수학식 4 및 수학식 5를 통해 설정한 지터의 상한선으로 간주할 수 있다. 프로세서는 통신 간섭량에 기초하여 제1통신 흐름의 전체 응답 시간을 식별한다(S830). 프로세서는 수학식 4를 통해 계산되는 새로운 지터() 및 수학식 5를 통해 계산되는 새로운 최대 응답 시간( )을 수학식 2 및 수학식 3의 최대 응답 시간()에 대입하여 제1통신 흐름의 전체 응답 시간 ()을 계산할 수 있다. 반면, 제1통신 흐름보다 우선 순위가 높은 적어도 하나의 제2통신 흐름이 존재하지 않는 경우(S810의 No), 즉 제1통신 흐름이 제일 높은 우선 순위를 가지는 경우, 다른 통신 흐름으로부터 받는 통신 간섭량은 없다. 따라서, 수학식 2 및 수학식 3을 이용하여 제1통신 흐름의 전체 응답 시간을 식별하면 된다(S840). 본 발명의 일 실시예에 따르면, 통신 간섭량을 일정한 수치로 고정함으로써 우선 순위를 할당하는 알고리즘의 적용 범위를 확장할 수 있다. 도 9는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 피드백 동작을 도시한 도면이다. 본 발명의 일 실시예에 따르면, 도 6의 과정을 따라 수행되는 OPA 알고리즘이 모든 통신 흐름에 우선 순위를 할 당하지 못하는 경우가 있을 수 있다. 이때, 한 가지 합리적인 접근 방식은 일정 가능성을 높이기 위해 일부 흐 름의 경로를 재구성하는 것이다. 따라서 라우팅 및 스케줄링 계층 간의 교차 계층 조정을 고려하여 스케줄링 과정에서 얻은 피드백 정보에 따라 조정할 경로를 찾는 피드백 루프 기반의 접근 방식을 제시한다. 경로 Ri의 모든 링크 중 가장 큰 대기열 지연이 발생하는 링크 BLi(BLi ∈ Ri)를 흐름 fi의 병목 링크라고 한다. 수학식 6"}
{"patent_id": "10-2022-0086143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "은 fi가 링크 l에서 겪고 있는 대기 지연을 나타낸다. 프로세서는 OPA 알고리즘 동작 중 흐름 fi에 대한 우선 순위를 할당하는 데 실패하면 병목 링크 BLi에 관 한 정보를 이용하여 새로운 경로 탐색 시 피드백 정보로 활용한다. 프로세서는 병목 링크를 제거한 후 대역폭이 보장되는 새 경로를 선택한다. 이때, 새 경로를 탐색할 때 CBR 방식을 이용하여 탐색하는 것이 보다 효율적이다. 새 경로를 성공적으로 찾으면 프로세서는 이를 포함하여 종단 간 마감을 보장하는 우선 순위를 찾는다. 도 9를 참조하면, 표현의 편의를 위해 하나의 통신 흐름만 제시한다. 그러나 네트워크에는 다른 흐름도 있 다고 가정한다. 프로세서는 복수의 통신 흐름 중 우선 순위를 할당하지 못한 통신 흐름(제3통신 흐름이라 한다.)이 존재하 는 경우, 제3통신 흐름의 통신 경로 상에서 통신 간섭량이 기 정의된 값 이상인 링크를 식별한다. 프로세서는 la, lb, lc 순으로 흐르는 통신 흐름에 대해 기 정의된 값 이상의 통신 간섭량이 발생하 는 lb를 병목 링크(즉, BL1)로 지정한다. 프로세서는 병목 링크를 제거한 후 적어도 하나의 하위 경로를 조합하여 최종 경로를 다시 식별한다. 프로세서는 BL1을 제거하고, la, ld, le, lc 순으로 이동하는 새로운 최종 경로를 식별할 수 있다. 이러한 피드백 루프는 모든 흐름을 예약할 수 있거나 새 경로를 찾을 수 없을 때까지 반복된다. 각 반복 단계에 서 일부 링크를 잘라내기 때문에 이것이 유한한 수의 반복 단계를 수행한다는 것을 쉽게 알 수 있다. 본 발명의 일 실시예에 따르면, 경로 탐색 및 스케줄링 과정에서 발생하는 오류를 피드백을 통해 수정할 수 있 는 바 적용 가능성을 더욱 높일 수 있다."}
{"patent_id": "10-2022-0086143", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 SDN 기반 실시간 컨트롤 시스템을 도시한 개략도이다. 도 2는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 구성을 도시한 블럭도이다. 도 3은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 동작 흐름도를 도시한 도면이다. 도 4는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 클러스터링을 수행하는 동작 흐름도를 도시한 도면이 다. 도 5는 본 발명의 일 실시예에 따른 클러스터링에 따른 최종 경로를 식별하는 모습을 도시한 도면이다. 도 6은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 우선 순위 할당을 수행하는 동작 흐름도를 도시한 도 면이다. 도 7은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 통신 흐름의 전체 응답 시간을 식별하는 모습을 도시 한 도면이다. 도 8은 본 발명의 일 실시예에 따른 실시간 컨트롤 장치가 우선 순위 할당을 위한 전체 응답 시간을 식별하는 동작 흐름도를 도시한 도면이다. 도 9는 본 발명의 일 실시예에 따른 실시간 컨트롤 장치의 피드백 동작을 도시한 도면이다."}
