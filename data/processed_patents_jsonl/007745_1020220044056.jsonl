{"patent_id": "10-2022-0044056", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0130493", "출원번호": "10-2022-0044056", "발명의 명칭": "시스템의 성능 병목 현상을 처리하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "박언상"}}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,프로세서; 및상기 프로세서에 의해 실행 가능한 적어도 하나의 명령어를 포함하는 메모리를 포함하고,상기 적어도 하나의 명령어가 상기 프로세서에서 실행되면, 상기 프로세서는미리 정해진 작업의 시작에 대응하는 시점부터 상기 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단하고,상기 임계 시간이 도래하기 전에 상기 작업이 종료되는 경우에 응답하여, 상기 임계 시간의 도래 여부를 판단하는 것을 중단하고,상기 작업이 종료되기 전에 상기 임계 시간이 도래한 경우에 응답하여, 상기 작업을 수행하기 위한 하나 이상의리소스들을 제어하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 타이머는 상기 작업의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료됨으로써 동작하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 임계 시간이 도래하는지는 상기 작업의 시작에 대응하는 시점부터 상기 기준 시간이 몇 번 만료되었는지에기반하여 판단되는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 타이머는 상기 작업이 수행되는 스레드에 구별되는 소프트웨어 모듈에서 동작하고,상기 작업의 시작에 대응하는 시작 이벤트가 상기 스레드에서 상기 소프트웨어 모듈로 전달되고,상기 소프트웨어 모듈은 상기 시작 이벤트의 수신에 응답해서 상기 임계 시간의 도래 여부를 상기 타이머로 판단하는 것을 시작하는,공개특허 10-2023-0130493-3-전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 작업이 종료되면, 대응하는 종료 이벤트가 상기 스레드에서 상기 소프트웨어 모듈로 전달되고,상기 소프트웨어 모듈은 상기 종료 이벤트의 수신에 응답해서 상기 임계 시간의 도래 여부를 상기 타이머로 판단하는 것을 중단하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 미리 정해진 작업은상기 전자 장치를 사용하는 사용자가 체감할 수 있는 딜레이가 발생 가능한 작업인,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 미리 정해진 작업은다른 스레드와 동일한 락을 사용하는 작업;다른 스레드와 공유하는 변수를 사용하는 작업;다른 스레드와 I/O를 공유하는 작업;다른 스레드와 메모리를 공유하는 작업; 상기 전자 장치의 화면에 출력을 담당하는 작업; 및사용자로부터 입력된 요청에 따른 작업중 하나 이상을 포함하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 임계 시간은 시작하는 작업에 따라 결정되는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는공개특허 10-2023-0130493-4-상기 작업이 종료되기 전에 상기 임계 시간이 도래한 경우에 응답하여, 상기 작업과 관련된상기 전자 장치에 포함된 컴포넌트들의 동작 클럭 제어;가용 메모리 제어; 및BG(background) 프로세서 제어중 하나 이상을 제어하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 프로세서는상기 하나 이상의 리소스들을 제어해서 상기 작업이 종료되면, 상기 작업에 대한 딜레이 시간을 획득하는,전자 장치."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치의 동작 방법에 있어서,미리 정해진 작업의 시작에 대응하는 시점부터 상기 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단하는 동작;상기 임계 시간이 도래하기 전에 상기 작업이 종료되는 경우에 응답하여, 상기 임계 시간의 도래 여부를 판단하는 것을 중단하는 동작; 및상기 작업이 종료되기 전에 상기 임계 시간이 도래한 경우에 응답하여, 상기 작업을 수행하기 위한 하나 이상의리소스들을 제어하는 동작을 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 타이머는 상기 작업의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료됨으로써 동작하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 임계 시간이 도래하는지는 상기 작업의 시작에 대응하는 시점부터 상기 기준 시간이 몇 번 만료되었는지에기반하여 판단되는,전자 장치의 동작 방법.공개특허 10-2023-0130493-5-청구항 14 제11항에 있어서,상기 타이머는 상기 작업이 수행되는 스레드에 구별되는 소프트웨어 모듈에서 동작하고,상기 판단하는 동작은상기 작업의 시작에 대응하는 시작 이벤트가 상기 스레드에서 상기 소프트웨어 모듈로 전달됨에 응답해서 상기임계 시간의 도래 여부를 상기 타이머로 판단하는 것을 시작하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 중단하는 동작은 상기 작업이 종료되면, 대응하는 종료 이벤트가 상기 스레드에서 상기 소프트웨어 모듈로 전달됨에 응답해서 상기 임계 시간의 도래 여부를 상기 타이머로 판단하는 것을 중단하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제11항에 있어서,상기 미리 정해진 작업은상기 전자 장치를 사용하는 사용자가 체감할 수 있는 딜레이가 발생 가능한 작업인,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제11항에 있어서,상기 미리 정해진 작업은다른 스레드와 동일한 락을 사용하는 작업;다른 스레드와 공유하는 변수를 사용하는 작업;다른 스레드와 I/O를 공유하는 작업;다른 스레드와 메모리를 공유하는 작업; 화면에 출력을 담당하는 작업; 및사용자로부터 입력된 요청에 따른 작업중 하나 이상을 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제11항에 있어서,공개특허 10-2023-0130493-6-상기 임계 시간은 시작하는 작업에 따라 결정되는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제11항에 있어서,상기 제어하는 동작은상기 작업이 종료되기 전에 상기 임계 시간이 도래한 경우에 응답하여, 상기 작업과 관련된상기 전자 장치에 포함된 컴포넌트들의 동작 클럭 제어;가용 메모리 제어; 및BG(background) 프로세서 제어중 하나 이상을 제어하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0044056", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제11항 내지 제19항 중에서 어느 하나의 항의 방법을 실행시키기 위한 프로그램이 기록된 컴퓨터 판독 가능한저장 매체."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "시스템의 성능 병목 현상을 처리하는 전자 장치 및 그 동작 방법이 개시된다. 개시된 전자 장치는 프로세서 및 프로세서에 의해 실행 가능한 적어도 하나의 명령어를 포함하는 메모리를 포함하고, 적어도 하나의 명령어가 프 로세서에서 실행되면, 프로세서는 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간 이 도래하는지를 타이머로 판단하고, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응답하여, 임계 시간의 도래 여부를 판단하는 것을 중단하고, 작업이 종료되기 전에 임계 시간이 도래한 경우에 응답하여, 작업을 수행 하기 위한 하나 이상의 리소스들을 제어할 수 있다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 다양한 실시예들은 시스템의 성능 병목 현상을 처리하는 전자 장치 및 그 동작 방법에 관한 것이다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 대용량의 고품질 데이터를 처리하는 고성능 컴퓨팅에 대한 요구가 증가하고 있으며, 듀얼, 쿼드, 옥타 코 어 프로세서와 같은 멀티프로세서 컴퓨터 아키텍처에 대한 여러 연구가 진행되고 있다. 이러한 멀티프로세서 시스템들은 프로그램 코드를 동시에 병렬로 처리할 수 있는 시스템으로 발전되었다. 다시 말해, 여러 프로세서 들이나 스레드들을 동시에 실행할 수 있는 환경이 만들어졌다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "멀티프로세서 컴퓨팅 시스템에서 성능 병목은 시스템 내의 여러 스레드들이 메모리, I/O(input/output) 디바이 스, 네트워크와 같은 제한된 리소스들에 대해 경쟁하면서 특정 스레드에 딜레이가 발생하며, 이로 인해 시스템 의 성능이 저하되는 현상일 수 있다. 특히 딜레이가 발생하는 스레드가 UI(user interface)와 관련된 스레드의 경우에는 시스템을 사용하는 사용자가 체감적으로 느낄 수 있는 성능 이슈를 만들 수 있다. 시스템 성능 병목 의 원인은 리소스 부족, 공유 리소스 경합, 리소스 독점, 리소스의 잘못된 구성 또는 리소스의 잘못된 동작과 같이 다양할 수 있다. 본 문서에 개시되는 다양한 실시예에 따르면, 시스템의 성능 병목 현상이 종료되기 전에 실시간으로 병목 현상 을 감지하고, 동적으로 리소스 제어를 수행하여 병목 현상을 효과적으로 제거하는 기법을 제공할 수 있다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 프로세서 및 프로세서에 의해 실행 가능한 적어도 하나의 명령어를 포함하는 메 모리를 포함하고, 적어도 하나의 명령어가 프로세서에서 실행되면, 프로세서는 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단하고, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응답하여, 임계 시간의 도래 여부를 판단하는 것을 중단하고, 작업이 종료되기 전에 임 계 시간이 도래한 경우에 응답하여, 작업을 수행하기 위한 하나 이상의 리소스들을 제어할 수 있다. 일 실시예에 따른 전자 장치의 동작 방법은 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단하는 동작, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응답하 여, 임계 시간의 도래 여부를 판단하는 것을 중단하는 동작 및 작업이 종료되기 전에 임계 시간이 도래한 경우 에 응답하여, 작업을 수행하기 위한 하나 이상의 리소스들을 제어하는 동작을 포함할 수 있다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, 실제 전자 장치의 동작이 수행되는 하나 이상의 스레드들과 구별되는 소프트웨어 모듈 에서 타이머가 작업의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료되어 동작함 으로써, 성능 병목 현상이 종료되기 전에 실시간으로 병목 구간을 감지하고, 필요한 리소스를 선제적으로 할당 하여 사용자가 체감하는 딜레이를 최소화하고, 전자 장치의 성능을 향상시킬 수 있다. 이를 통해, 성능 병목 현상이 연속해서 발생하는 경우나 순간적으로 발생하는 경우에도 신속하고 효과적으로 성능 병목 현상을 개선할 수 있다. 또한, 다양한 실시예에 따르면, 별도의 타이머를 통해 딜레이가 발생하였는지를 실시간으로 감시함으로써, 온 디바이스에서 병목 상태를 빠르게 파악하여 동적으로 시스템 리소스를 할당할 수 있어, 시스템 병목 상태를 개 선할 수 있다. 또한, 다양한 실시예에 따르면, 복합적인 원인으로 발생하는 시스템 부하 상황에서도 온 디바이스에서 동적으로 병목 현상 발생 여부를 판단하여 즉각적인 조치를 할 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2022-0044056", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도를 나타낸다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치(GPU; graphics processing unit), 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프 로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메 인 프로세서 및 보조 프로세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전 력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개 로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래쉬들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양 한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안 테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배치되고 지 정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안 테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2은 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 일실시예에 따르면, 프로그램은 전자 장치의 하나 이상의 리소스들을 제어하기 위한 운영 체제, 미들웨어, 또는 상기 운영 체제 에서 실행 가능한 어플리케이션을 포함할 수 있다. 운영 체제는, 예를 들면, AndroidTM, iOSTM, WindowsTM, SymbianTM, TizenTM, 또는 BadaTM를 포함할 수 있다. 프로그램 중 적어도 일부 프로그램은, 예를 들면, 제조 시에 전자 장치에 프리로드되거나, 또는 사용자에 의해 사용 시 외부 전자 장치(예: 전자 장치 (102 또는 104), 또는 서버)로부터 다운로드되거나 갱신 될 수 있다. 운영 체제는 전자 장치의 하나 이상의 시스템 리소스들(예: 프로세스, 메모리, 또는 전원)의 관리(예: 할당 또는 회수)를 제어할 수 있다. 운영 체제는, 추가적으로 또는 대체적으로, 전자 장치 의 다른 하드웨어 디바이스, 예를 들면, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 구동하기 위한 하나 이상의 드라이버 프로그램들을 포함할 수 있다. 미들웨어는 전자 장치의 하나 이상의 리소스들로부터 제공되는 기능 또는 정보가 어플리케이션 에 의해 사용될 수 있도록 다양한 기능들을 어플리케이션으로 제공할 수 있다. 미들웨어는, 예를 들 면, 어플리케이션 매니저, 윈도우 매니저, 멀티미디어 매니저, 리소스 매니저, 파워 매니 저, 데이터베이스 매니저, 패키지 매니저, 커넥티비티 매니저, 노티피케이션 매니저, 로케이션 매니저, 그래픽 매니저, 시큐리티 매니저, 통화 매니저, 또는 음성 인식 매니저 를 포함할 수 있다. 어플리케이션 매니저는, 예를 들면, 어플리케이션의 생명 주기를 관리할 수 있다. 윈도우 매니저 는, 예를 들면, 화면에서 사용되는 하나 이상의 GUI 자원들을 관리할 수 있다. 멀티미디어 매니저는, 예를 들면, 미디어 파일들의 재생에 필요한 하나 이상의 포맷들을 파악하고, 그 중 선택된 해당하는 포맷에 맞 는 코덱을 이용하여 상기 미디어 파일들 중 해당하는 미디어 파일의 인코딩 또는 디코딩을 수행할 수 있다. 리 소스 매니저는, 예를 들면, 어플리케이션의 소스 코드 또는 메모리의 메모리의 공간을 관리할 수 있다. 파워 매니저는, 예를 들면, 배터리의 용량, 온도 또는 전원을 관리하고, 이 중 해당 정보를 이용하여 전자 장치의 동작에 필요한 관련 정보를 결정 또는 제공할 수 있다. 일실시예에 따르면, 파워 매 니저는 전자 장치의 바이오스(BIOS: basic input/output system)(미도시)와 연동할 수 있다. 데이터베이스 매니저는, 예를 들면, 어플리케이션에 의해 사용될 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저는, 예를 들면, 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 갱신을 관리할 수 있다. 커넥티비티 매니저는, 예를 들면, 전자 장치와 외부 전자 장치 간의 무선 연 결 또는 직접 연결을 관리할 수 있다. 노티피케이션 매니저는, 예를 들면, 지정된 이벤트(예: 착신 통화, 메시지, 또는 알람)의 발생을 사용자에게 알리기 위한 기능을 제공할 수 있다. 로케이션 매니저는, 예를 들면, 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저는, 예를 들면, 사용자에게 제공될 하 나 이상의 그래픽 효과들 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 시큐리티 매니저는, 예를 들면, 시스템 보안 또는 사용자 인증을 제공할 수 있다. 통화(telephony) 매니저 는, 예를 들면, 전자 장치에 의해 제공되는 음성 통화 기능 또는 영상 통화 기능을 관리할 수 있다. 음성 인식 매니저는, 예를 들면, 사용자의 음성 데이터를 서버로 전송하고, 그 음성 데이터에 적어도 일부 기반하여 전자 장치에서 수행될 기능에 대응하는 명령어(command), 또는 그 음성 데이터에 적어도 일 부 기반하여 변환된 문자 데이터를 서버로부터 수신할 수 있다. 일 실시예에 따르면, 미들웨어는 동 적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. 일 실시예에 따르면, 미들웨 어의 적어도 일부는 운영 체제의 일부로 포함되거나, 또는 운영 체제와는 다른 별도의 소프트웨 어로 구현될 수 있다. 어플리케이션은, 예를 들면, 홈, 다이얼러, SMS/MMS, IM(instant message), 브라우 저, 카메라, 알람, 컨택트, 음성 인식, 이메일, 달력, 미디어 플레이어 , 앨범, 와치, 헬스(예: 운동량 또는 혈당과 같은 생체 정보를 측정), 또는 환경 정보 (예: 기압, 습도, 또는 온도 정보 측정) 어플리케이션을 포함할 수 있다. 일실시예에 따르면, 어플리케이 션은 전자 장치와 외부 전자 장치 사이의 정보 교환을 지원할 수 있는 정보 교환 어플리케이션(미도 시)을 더 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치로 지정된 정보 (예: 통화, 메 시지, 또는 알람)를 전달하도록 설정된 노티피케이션 릴레이 어플리케이션, 또는 외부 전자 장치를 관리하도록 설정된 장치 관리 어플리케이션을 포함할 수 있다. 노티피케이션 릴레이 어플리케이션은, 예를 들면, 전자 장치 의 다른 어플리케이션(예: 이메일 어플리케이션)에서 발생된 지정된 이벤트(예: 메일 수신)에 대응하 는 알림 정보를 외부 전자 장치로 전달할 수 있다. 추가적으로 또는 대체적으로, 노티피케이션 릴레이 어플리케 이션은 외부 전자 장치로부터 알림 정보를 수신하여 전자 장치의 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치 또는 그 일부 구성 요소(예: 외부 전자장치의 디스플레이 모듈 또는 카메라 모듈)의 전원(예: 턴-온 또는 턴-오프) 또는 기능(예: 밝기, 해 상도, 또는 포커스)을 제어할 수 있다. 장치 관리 어플리케이션은, 추가적으로 또는 대체적으로, 외부 전자 장 치에서 동작하는 어플리케이션의 설치, 삭제, 또는 갱신을 지원할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 3은 일 실시예에 따른 딜레이를 판단하는 동작을 설명하기 위한 도면이다. 도 3을 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치) 내 프로세서(예: 도 1의 프로세서 )에서 실행되는 복수의 스레드들(plurality of threads)(310, 320)과 소프트웨어 모듈이 예시적으로 도시된다. 전자 장치는 휴대폰, 스마트 폰, 태블릿, 랩탑, 퍼스널 컴퓨터, 또는 전자북 장치와 같은 다양한 컴퓨팅 장치, 스마트 시계, 스마트 안경, HMD(head-mounted display), 또는 스마트 의류와 같은 다양한 웨어러블 기기, 스마트 스피커, 스마트 TV, 또는 스마트 냉장고와 같은 다양한 가전장치, 스마트 자동차, 스마트 키오스 크, IoT(internet of things) 기기, WAD(walking assist device), 드론, 또는 로봇을 포함할 수 있다. 전자 장치에는 여러 이유로 딜레이가 발생할 수 있는데, 이러한 딜레이 발생 여부를 실시간으로 파악해서 필요 한 리소스를 선제적으로 할당함으로써 성능 병목 현상을 개선할 수 있다. 도 3에서는 복수의 스레드들(310, 320)이 동일한 락(lock)을 사용하는 경우에 발생하는 딜레이를 예시적으로 가정하여, 딜레이 발생 여부를 실시 간으로 판단하는 동작에 대해 자세히 설명한다. 도 3에 예시적으로 도시된 복수의 스레드들(310, 320) 각각에 포함된 크리티컬 섹션(critical section)은 각 스 레드에서 수행되는 작업들 중 딜레이 발생 시 해당 전자 장치를 사용하는 사용자가 체감할 수 있는 작업에 해당 할 수 있다. 예를 들어, 크리티컬 섹션은 다른 스레드와 동일한 락을 사용하는 작업, 다른 스레드와 공유하는 변수를 사용하 는 작업, 다른 스레드와 메모리를 공유하는 작업, 다른 스레드와 I/O를 공유하는 작업, 전자 장치의 화면에 출 력을 담당하는 작업, 사용자로부터 입력된 요청에 따른 작업 중 하나 이상을 포함할 수 있다. 다른 스레드와 동일한 락을 사용하는 작업의 경우, 다른 스레드에서 먼저 락을 사용한다면 해당 스레드에서 필요한 데이터로의 액세스가 거부되므로 더 이상 작업을 수행할 수 없고, 해당 락이 해제될 때까지 동작을 중단해야 하기 때문에 크리티컬 섹션으로 설정될 수 있다. 또한, 다른 스레드와 공유하는 변수를 사용하는 작업의 경우도 마찬가지로, 다른 스레드에서 먼저 해당 변수를 액세스하여 읽거나 수정한다면 해당 스레드에서 해당 변수로의 액세스가 거부되므로 더 이상 작업을 수행할 수 없고, 다른 스레드에서 해당 변수에 대한 액세스가 종료될 때까 지 동작을 중단해야 하기 때문에 크리티컬 섹션으로 설정될 수 있다. 또한, 다른 스레드와 메모리 혹은 I/O를 공유하는 작업의 경우, 다른 스레드에서 해당 메모리 혹은 I/O를 많이 사용한다면 해당 스레드에서 사용 가능한 메모리 혹은 I/O의 크기가 작아져서 동작을 완료하는 데 더 많은 시간이 소요될 수 있으므로, 크리티컬 섹션으 로 설정될 수 있다. 또한, 전자 장치의 화면에 출력을 담당하는 작업의 경우 일정한 시간 간격으로 화면을 갱 신하는 작업을 수행해야 하는데 이때 딜레이가 발생한다면 사용자가 보다 민감하게 반응할 수 있기 때문에 크리 티컬 섹션으로 설정될 수 있다. 또한, 사용자로 입력된 요청에 따른 작업의 경우, 사용자의 요청에 따른 동작 이 수행된 후 그 결과를 사용자에게 제공하는 데, 이때 딜레이가 발생한다면 사용자가 보다 민감하게 딜레이에 반응할 수 있기 때문에 크리티컬 섹션으로 설정될 수 있다. 이러한 작업들에 대한 예시들로는, 사용자로부터 입력된 터치 제스처에 따른 작업, 시스템 서버에서 동작하는 루퍼(looper)의 메시지 큐(message queue) 처리 작 업, 시스템 서버에서 동작하는 락 작업을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 이러한 크리티컬 섹션에 대해서는 아래에서 설명할 타이머 기반 딜레이 발생 여부를 판단하고, 판단 결과에 따라 리소스 제 어를 수행함으로써, 불필요한 딜레이 발생을 효과적으로 억제할 수 있다. 제2 스레드에서, 크리티컬 섹션이 발생하는 것에 응답하여 해당 작업의 시작 이벤트가 소프트웨어 모 듈로 전달되고, 소프트웨어 모듈은 해당 작업의 시작에 대응하는 시점부터 해당 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단할 수 있다. 해당 작업의 시작에 대응하는 시점은, 예를 들 어, 시작 이벤트가 소프트웨어 모듈에 수신된 시점, 해당 작업이 실제 시작한 시점 중 하나에 해당할 수 있으나, 전술한 예에 한정되지는 않는다. 작업마다 딜레이 없는 상태에서 실행되는 시간이 다를 수 있으므로, 임계 시간도 작업에 따라 다르게 설정될 수 있다. 소프트웨어 모듈은 딜레이 발생 여부를 판단하기 위한 타이머를 포함할 수 있다. 타이머는 미 리 정해진 길이의 기준 시간이 반복적으로 만료됨으로써 동작할 수 있다. 예를 들어, 타이머에 설정된 기 준 시간이 100ms이고, 임계 시간이 500ms인 경우, 해당 임계 시간의 도래 여부는 기준 시간의 5번 만료 여부에 기초하여 판단될 수 있다. 타이머는 복수의 스레드들(310, 320)에서 실행되는 작업들의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료됨으로써 동작할 수 있다. 이처럼, 기준 시간이 반 복적으로 만료되는 타이머를 이용하여 몇 번의 기준 시간이 만료되었는지를 기준으로 시간을 측정함으로써, 크리티컬 섹션에 해당하는 작업이 매번 실행되고 종료될 때마다 새로 타이머를 생성하고, 삭제해 서 시스템에 부하를 주는 동작을 회피하면서 효과적으로 시간을 측정할 수 있다. 예를 들어, 해당 작업에 미리 설정된 임계 시간은 500ms일 수 있으며, 이때 소프트웨어 모듈은 타이머 에서 만료되는 기준 시간이 5번 만료되는지 여부를 판단할 수 있다. 임계 시간이 도래하기 전에 제2 스레드에서 크리티컬 섹션이 종료되면, 해당 작업의 종료 이벤트 가 소프트웨어 모듈로 전달되고, 소프트웨어 모듈은 임계 시간의 도래 여부를 판단하는 것을 중단할 수 있다. 이때는 딜레이 발생 없이 작업이 정상적으로 수행된 것으로 판단하고, 별도의 리소스 제어는 수 행되지 않는다. 동일 락을 사용하는 제1 스레드의 크리티컬 섹션과 제2 스레드의 크리티컬 섹션이 발생한 경우를 가정한다. 제1 스레드의 크리티컬 섹션이 제2 스레드의 크리티컬 섹션보다 먼저 시작하여 락을 사용할 경우, 크리티컬 섹션은 해당 락에 의해 필요한 데이터로의 액세스가 거부되어 해당 락이 해제될 때까지 동작을 수행하지 못하고 대기할 수 있다. 이러한 대기 구간을 병목 구간으로 지칭할 수 있다. 제2 스레드의 크리티컬 섹션이 더 이상 수행되지 못하고 대기하고 있더라도 이미 시작되었 으므로, 대응하는 시작 이벤트가 소프트웨어 모듈로 전달되고, 소프트웨어 모듈은 해당 작업의 시작에 대응하는 시점부터 해당 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단할 수 있다. 예를 들어, 해당 작업에 미리 설정된 임계 시간은 500ms일 수 있으며, 이때 소프트웨어 모듈은 타이머 에서 만료되는 기준 시간이 5번 만료되는지 여부를 판단할 수 있다. 병목 구간에 의해 크리티컬 섹션이 종료되기 전에 임계 시간이 도래할 수 있다. 임계 시간이 도래하면, 소프트웨어 모듈이 딜레이가 발생한 것을 감지할 수 있다. 딜레이가 검출되면, 크리티컬 섹션 의 동작을 위해 하나 이상의 리소스들이 제어될 수 있다. 크리티컬 섹션의 동작을 가속할 수 있는 하나 이상의 리소스들이 크리티컬 섹션에 할당될 수 있다. 하나 이상의 리소스들에 대한 제어는 전자 장치에 포함된 컴포넌트들의 동작 클럭 제어, 가용 메모리 제어 및 BG 프로세서 제어 중 하나 이상을 포함할 수 있다. 컴포넌트들의 동작 클럭 제어는 전자 장치에 포함된 프로세 서(예: CPU, GPU), 버스의 동작 클럭에 대한 제어로서, 예를 들어, HyperHAL을 통한 부스트 및 제한해제를 포함 하며, 동작 클럭을 높임으로써 보다 빠른 동작을 유도할 수 있다. 또한, 가용 메모리 제어는 해당 작업에 더 많은 메모리를 할당함으로써 동작 가속을 유도하는 것으로, 예를 들어, 메모리 부족 시 메모리 리클레임(memory reclaim) 동작 혹은 자동으로 작업을 죽이는 lmkd(low memory killer daemon) 기법을 유도하는 것을 통해 가용 메모리가 선제적으로 확보될 수 있다. 또한, BG 프로세서 제어는 사용자 간섭 없이 보이지 않는 백그라운드에 서 실행 중인 컴퓨터 프로세스를 제어하는 기법으로, 예를 들어, 백그라운드에서 실행 중인 프로세서를 제한함 으로써 포그라운드 작업을 가속시킬 수 있다. 다시 말해서 현재 실행 중인 어플리케이션의 실행 속도를 향상시 키기 위해서, 진입하는 어플리케이션(다시 말해, 탑 어플리케이션(top application)) 외의 백그라운드 프로세스 를 정지시켜 리소스 경쟁 조건(resource race condition)을 최대한 줄이는 기법일 수 있다. 해당 기법을 이용하 면, 어플리케이션 진입 외에도 병목 상황을 감지하여 현재 사용자 인터렉션(user interaction)이 있는 어플리케 이션을 탑 어플리케이션으로 정하고, 백그라운드 프로세스와의 리소스 경쟁 조건을 최대한 줄임으로써 어플리케 이션의 동작을 최대한 보장할 수 있다. 크리티컬 섹션이 종료되는 종료 이벤트가 소프트웨어 모듈로 전달되면, 소프트웨어 모듈은 발생한 딜레이 시간에 대한 정보를 취합할 수 있다. 이러한 딜레이 정보는 추후 딜레이를 대비하는 작업에 활 용될 수 있으나, 전술한 예에 한정되지는 않는다. 실제 전자 장치의 동작이 수행되는 복수의 스레드들(310, 320)과 구별되는 소프트웨어 모듈에서 타이머 가 작업의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료되어 동작함으로써, 성능 병목 현상이 종료되기 전에 실시간으로 병목 구간을 감지하고, 필요한 리소스를 선제적으로 할당하여 사용자가 체감하는 딜레이를 최소화하고, 전자 장치의 성능을 향상시킬 수 있다. 이를 통해, 성능 병목 현상이 연속해서 발생하는 경우나 순간적으로 발생하는 경우에도 신속하고 효과적으로 성능 병목 현상을 개선할 수 있 다. 도 3에서는 설명의 편의를 위하여 딜레이 판단 동작의 대상이 제2 스레드인 경우를 기준으로 설명하였으나, 실시예가 이에 한정되지 않으며, 본 명세서에서 설명한 사항들이 제1 스레드나 도 3에 도시 되지 않은 다른 스레드에 대해서도 마찬가지로 적용될 수 있다. 도 4는 일 실시예에 따른 딜레이 판단 동작을 시퀀스 다이어그램으로 나타낸 도면이다. 도 4를 참조하면, 딜레이 판단 동작의 대상이 되는 스레드(예: 도 3의 제2 스레드)에서 크리티컬 섹션(예: 도 3의 크리티컬 섹션들(321, 323))의 시작 이벤트 및 종료 이벤트 발생에 따른 소프트웨어 모듈(예: 도 3의 소 프트웨어 모듈)의 동작이 시퀀스 다이어그램으로 예시적으로 도시된다. 소프트웨어 모듈이 생성될 때 수행되는 초기화(initialize) 동작에서 이벤트 핸들러(EventHandler)가 생성 되고, 타이머 생성(create timer) 동작으로 타이머(예: 도 3의 타이머)가 생성될 수 있다. 생성된 타이머는 크리티컬 섹션의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만 료됨으로써 동작할 수 있다. 크리티컬 섹션의 시작 이벤트가 발생하면, 이벤트 핸들러는 해당 크리티컬 섹션에 대한 아이디가 등록되었 는지를 판단할 수 있다. 아이디가 등록되었는지 여부를 판단하는 것은 현재 해당 크리티컬 섹션에 대응하는 임 계 시간이 도래하는지 여부를 판단하고 있는 것인지를 확인하기 위한 것일 수 있다. 만약 해당 크리티컬 섹션 의 시작 이벤트에 의해 이미 임계 시간이 도래하는지 여부가 판단하고 있는 상황이 아니라면, 아이디가 등록되 지 않은 것(id is not registered)(440-1)으로 판단될 수 있다. 이 경우, 타이머로 아이디 등록 및 임계 시간 설정(register id and set threshold time)(440-2)을 요청할 수 있다. 타이머는 해당 요청에 기초 하여 해당 크리티컬 섹션에 미리 정해진 임계 시간의 도래 여부를 판단하는 것을 시작할 수 있다. 이벤트 핸들러는 해당 크리티컬 섹션의 다음 이벤트(예: 종료 이벤트)가 수신될 때까지 임계 시간(450-1) 동안 기준 시간의 만료(expires)(450-2)와 기준 시간의 설정(set timer)(450-3)을 반복할 수 있다. 크리티컬 섹션의 종료 이벤트가 임계 시간 도래 전에 수신되고, 해당 크리티컬 섹션의 아이디가 등록된 것이라 면(460-1), 현재 타이머에서 대응하는 임계 시간의 도래 여부가 판단되고 있다는 것을 의미할 수 있다. 이벤트 핸들러는 타이머로 해당 아이디를 등록 취소하고, 임계 시간 취소(unregister id and cancel threshold time)(460-2)를 요청할 수 있다. 타이머는 해당 요청에 따라 임계 시간의 도래 여부를 판단하 는 것을 중단할 수 있다. 반대로, 크리티컬 섹션의 종료 이벤트가 임계 시간 도래 전에 수신되지 않으면, 병목 현상에 따른 딜레이가 발 생한 것으로 판단하고, 병목 정보가 리소스 제어 모듈로 전달되어, 크리티컬 경로(critical path) 내 병목 딜레이가 효과적으로 감소될 수 있다. 도 5는 일 실시예에 따른 소프트웨어 모듈로 이벤트가 전달되는 동작을 설명하기 위한 도면이다. 도 5를 참조하면, 이벤트 플러그-인(event plug-in)에서 소프트웨어 모듈(예: 도 3의 소프트웨어 모 듈)로 이벤트가 전달되는 예시가 도시된다. 이벤트 플러그-인은 시스템 프로세스에 클래스(class)와 JNI 라이브러리(Java Native Interface library) 형태로 제공되고, 시스템 프로세스의 상황을 이벤트로 생성해서 소프트웨어 모듈로 전달할 수 있다. 이벤 트 프로세서 내 소프트웨어 모듈은 이벤트 플러그-인으로부터 이벤트를 수신하면, 해당 이벤트에 대 응하는 임계 시간의 도래 여부를 판단할 수 있다. 소프트웨어 모듈은 미리 정해진 개수의 기준 시간이 만 료되어 임계 시간이 도래할 때까지 종료 이벤트가 수신되지 않으면, 병목 현상에 따른 딜레이가 발생한 것으로 판단할 수 있다. 소프트웨어 모듈은 딜레이가 발생한 것으로 판단되면 필요한 시스템 리소스를 활용할 수 있도록 리소스 제어 모듈로 병목 정보(예: 도 4의 병목 정보)를 전달하여 크리티컬 경로 내 병목 딜 레이를 효율적으로 감소시킬 수 있다. 앞서 설명한 것처럼, 별도의 타이머(예: 도 3의 타이머 및 도 4의 타이머)를 통해 딜레이가 발생하였 는지를 실시간으로 감시함으로써, 온 디바이스(on device)에서 병목 상태를 빠르게 파악하여 동적으로 시스템 리소스를 할당할 수 있어, 시스템 병목 상태를 개선할 수 있다. 또한, 복합적인 원인으로 발생하는 시스템 부 하 상황에서도 온 디바이스에서 동적으로 병목 현상 발생 여부를 판단하여 즉각적인 조치를 할 수 있다. 또한, 디바이스의 바쁜(busy) 상태를 실시간으로 동적으로 파악해서, 필요한 리소스를 적시적소에 지원할 수 있어, 한 정된 리소스를 효율적으로 사용해서 성능을 효과적으로 향상시킬 수 있다. 도 6은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다. 이하 실시예에서 각 동작들은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 각 동작들의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수도 있다. 동작 내지 동작은 전자 장치(예: 도 1의 전자 장치)의 적어도 하나의 구성요소(예: 도 1의 프로세서(12 0))에 의해 수행될 수 있다. 동작에서, 전자 장치는 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간이 도 래하는지를 타이머(예: 도 3의 타이머 및 도 4의 타이머)로 판단할 수 있다. 동작에서, 전자 장치는 임계 시간이 도래하기 전에 작업이 종료되는지를 판단할 수 있다. 임계 시간이 도 래하기 전에 작업이 종료되는 것으로 판단된 경우에 응답하여 동작이 이어서 수행될 수 있다. 반대로 작업이 종료되기 전에 임계 시간이 도래한 것으로 판단된 경우에 응답하여 동작이 이어서 수행될 수 있다. 동작에서, 전자 장치는 임계 시간의 도래 여부를 판단하는 것을 중단할 수 있다. 전자 장치는 딜레이가 발생하지 않은 것으로 판단하고, 임계 시간의 도래 여부를 판단하는 동작을 중단할 수 있다. 동작에서, 전자 장치는 작업을 수행하기 위한 하나 이상의 리소스들을 제어할 수 있다. 전자 장치는 딜레 이가 발생한 것으로 판단하고, 병목 현상 해소를 위해 하나 이상의 리소스들을 제어할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법은 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정 된 임계 시간이 도래하는지를 타이머로 판단하는 동작, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응 답하여, 임계 시간의 도래 여부를 판단하는 것을 중단하는 동작 및 작업이 종료되기 전에 임계 시간이 도래한 경우에 응답하여, 작업을 수행하기 위한 하나 이상의 리소스들을 제어하는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 타이머는 작업의 시작이나 종료에 무관하게 미리 정해진 길이 의 기준 시간이 반복적으로 만료됨으로써 동작할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 임계 시간이 도래하는지는 작업의 시작에 대응하는 시점부터 기준 시간이 몇 번 만료되었는지에 기반하여 판단될 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 타이머는 작업이 수행되는 스레드에 구별되는 소프트웨어 모듈 (예: 도 3의 소프트웨어 모듈 및 도 5의 소프트웨어 모듈)에서 동작하고, 판단하는 동작은 작업의 시 작에 대응하는 시작 이벤트가 스레드에서 소프트웨어 모듈로 전달됨에 응답해서 임계 시간의 도래 여부를 타이 머로 판단하는 것을 시작할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 중단하는 동작은 작업이 종료되면, 대응하는 종료 이벤트가 스 레드에서 소프트웨어 모듈로 전달됨에 응답해서 임계 시간의 도래 여부를 타이머로 판단하는 것을 중단할 수 있 다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 미리 정해진 작업은 전자 장치를 사용하는 사용자가 체감할 수 있는 딜레이가 발생 가능한 작업일 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 미리 정해진 작업은 다른 스레드와 동일한 락을 사용하는 작업, 다른 스레드와 공유하는 변수를 사용하는 작업, 다른 스레드와 I/O를 공유하는 작업, 다른 스레드와 메모 리를 공유하는 작업, 상기 전자 장치의 화면에 출력을 담당하는 작업 및 사용자로부터 입력된 요청에 따른 작업 중 하나 이상을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 임계 시간은 시작하는 작업에 따라 결정될 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 제어하는 동작은 작업이 종료되기 전에 임계 시간이 도래한 경 우에 응답하여, 작업과 관련된 전자 장치에 포함된 컴포넌트들의 동작 클럭 제어, 가용 메모리 제어 및 BG(background) 프로세서 제어 중 하나 이상을 제어할 수 있다. 도 7은 일 실시예에 따른 전자 장치를 나타낸 도면이다. 도 7을 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치)는 메모리(예: 도 1의 메 모리) 및 프로세서(예: 도 1의 프로세서)를 포함할 수 있다. 일 실시예에 따른 전자 장치는 사용자 단말로 구현될 수 있다. 예를 들어, 사용자 단말은 휴대폰, 스마트 폰, 태블릿, 랩탑, 퍼스널 컴퓨터, 또는 전자북 장치와 같은 다양한 컴퓨팅 장치, 스마트 시계, 스마트 안경, HMD, 또는 스마트 의류와 같은 다양한 웨어러블 기기, 스마트 스피커, 스마트 TV, 또는 스마트 냉장고와 같은 다양한 가전장치, 스마트 자동차, 스마트 키오스크, IoT 기기, WAD, 드론, 또는 로봇을 포함할 수 있다. 메모리는 컴퓨터에서 읽을 수 있는 명령어를 포함할 수 있다. 프로세서는 메모리에 저장된 명 령어가 프로세서에서 실행됨에 따라 앞서 언급된 동작들을 수행할 수 있다. 메모리는 휘발성 메모리 또는 비휘발성 메모리일 수 있다. 프로세서는 명령어들, 혹은 프로그램들을 실행하거나, 전자 장치 를 제어하는 장치일 수 있다. 프로세서는 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판단하고, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응답하여, 임계 시간의 도래 여부를 판 단하는 것을 중단하고, 작업이 종료되기 전에 임계 시간이 도래한 경우에 응답하여, 작업을 수행하기 위한 하나이상의 리소스들을 제어할 수 있다. 그 밖에, 전자 장치에 관해서는 상술된 동작을 처리할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서 및 프로세서에 의해 실행 가능한 적어도 하나의 명 령어를 포함하는 메모리를 포함하고, 적어도 하나의 명령어가 프로세서에서 실행되면, 프로세서(72 0)는 미리 정해진 작업의 시작에 대응하는 시점부터 작업에 미리 설정된 임계 시간이 도래하는지를 타이머로 판 단하고, 임계 시간이 도래하기 전에 작업이 종료되는 경우에 응답하여, 임계 시간의 도래 여부를 판단하는 것을 중단하고, 작업이 종료되기 전에 임계 시간이 도래한 경우에 응답하여, 작업을 수행하기 위한 하나 이상의 리소 스들을 제어할 수 있다. 일 실시예에 따르면, 전자 장치에서 타이머는 작업의 시작이나 종료에 무관하게 미리 정해진 길이의 기준 시간이 반복적으로 만료됨으로써 동작할 수 있다. 일 실시예에 따르면, 전자 장치에서 임계 시간이 도래하는지는 작업의 시작에 대응하는 시점부터 기준 시 간이 몇 번 만료되었는지에 기반하여 판단될 수 있다. 일 실시예에 따르면, 전자 장치에서 타이머는 작업이 수행되는 스레드에 구별되는 소프트웨어 모듈(예: 도 3의 소프트웨어 모듈 및 도 5의 소프트웨어 모듈)에서 동작하고, 작업의 시작에 대응하는 시작 이벤 트가 스레드에서 소프트웨어 모듈로 전달되고, 소프트웨어 모듈은 시작 이벤트의 수신에 응답해서 임계 시간의 도래 여부를 타이머로 판단하는 것을 시작할 수 있다. 일 실시예에 따르면, 전자 장치에서 작업이 종료되면, 대응하는 종료 이벤트가 스레드에서 소프트웨어 모 듈로 전달되고, 소프트웨어 모듈은 종료 이벤트의 수신에 응답해서 임계 시간의 도래 여부를 타이머로 판단하는 것을 중단할 수 있다. 일 실시예에 따르면, 전자 장치에서 미리 정해진 작업은 전자 장치를 사용하는 사용자가 체감할 수 있는 딜레이가 발생 가능한 작업일 수 있다. 일 실시예에 따르면, 전자 장치에서 미리 정해진 작업은 다른 스레드와 동일한 락을 사용하는 작업, 다른 스레드와 공유하는 변수를 사용하는 작업, 다른 스레드와 I/O를 공유하는 작업, 다른 스레드와 메모리를 공유하는 작업, 상기 전자 장치의 화면에 출력을 담당하는 작업 및 사용자로부터 입력된 요청에 따른 작업 중 하나 이상을 포함할 수 있다. 일 실시예에 따르면, 전자 장치에서 임계 시간은 시작하는 작업에 따라 결정될 수 있다. 일 실시예에 따르면, 전자 장치에서 프로세서는 작업이 종료되기 전에 임계 시간이 도래한 경우에 응 답하여, 작업과 관련된 전자 장치에 포함된 컴포넌트들의 동작 클럭 제어, 가용 메모리 제어 및 BG(background) 프로세서 제어 중 하나 이상을 제어할 수 있다. 그리고 본 명세서와 도면에 개시된 본 발명의 실시예들은 본 발명의 실시예에 따른 기술 내용을 쉽게 설명하고 본 발명의 실시예의 이해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 발명의 실시예의 범위를 한정하고자 하는 것은 아니다. 따라서 본 발명의 다양한 실시예의 범위는 여기에 개시된 실시예들 이외에도 본 발명의 다 양한 실시예의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형된 형태가 본 발명의 다양한 실시예의 범 위에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2022-0044056", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도를 나타낸다. 도 2은 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 도 3은 일 실시예에 따른 딜레이를 판단하는 동작을 설명하기 위한 도면이다. 도 4는 일 실시예에 따른 딜레이 판단 동작을 시퀀스 다이어그램으로 나타낸 도면이다. 도 5는 일 실시예에 따른 소프트웨어 모듈로 이벤트가 전달되는 동작을 설명하기 위한 도면이다. 도 6은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다. 도 7은 일 실시예에 따른 전자 장치를 나타낸 도면이다."}
