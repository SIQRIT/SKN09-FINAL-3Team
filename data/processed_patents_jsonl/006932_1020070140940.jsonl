{"patent_id": "10-2007-0140940", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2009-0072742", "출원번호": "10-2007-0140940", "출원인": "엘지노텔 주식회사", "발명자": "김주훈"}}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "임베디드 운영체제 및 자바 가상 머신(Java Virtual Machine: JVM)을 포함하는 단말기에서 상기 임베디드 운영체제가 상기 자바 가상 머신을 재구동하는 방법으로서,자바 가상 머신 태스크(Task) 및 오류 감시 태스크를 할당하는 단계;상기 자바 가상 머신이 소정의 기간내에 상기 자바 가상 머신 태스크에 진입하지 않는 경우 상기 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 상기 오류 감시 태스크로 전달하는 단계;상기 오류 감시 태스크가 상기 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 상기 자바 가상 머신 태스크의 리소스를 초기화하고 상기 자바 가상 머신 태스크를 재시작하도록 하는 단계; 및상기 오류 감시 태스크가 상기 자바 가상 머신을 재구동하도록 하는 단계를 포함하는 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 자바 가상 머신 오류 이벤트를 상기 오류 감시 태스크로 전달하는 상기 단계는자바 가상 머신 체크 타이머를 할당하고 시작하는 단계 - 상기 자바 가상 머신 체크 타이머는 상기 자바 가상머신이 소정의 기간내에 상기 자바 가상 머신 태스크에 진입하는 경우 리셋됨 -; 및상기 자바 가상 머신 체크 타이머가 만료되는 단계를 더 포함하는 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 임베디드 운영체제는 선점형 임베디드 운영체제인, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 선점형 임베디드 운영체제는 MicroC/OS-II, VxWorks, pSOSystem 중 하나인, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 오류 감시 태스크는 상기 자바 가상 머신 태스크보다 우선 순위가 높은, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제2항에 있어서,상기 선점형 임베디드 운영체제는 상기 자바 가상 머신 체크 타이머가 만료된 경우 상기 자바 가상 머신 태스크에서 상기 오류 감시 태스크로 태스크 전환을 하는, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 자바 가상 머신을 재구동하는 상기 단계는 상기 자바 가상 머신의 오류가 발생한 시점의 자바 애플리케이션을 재구동하는 것을 특징으로 하는, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "- 2 -공개특허 10-2009-0072742제1항에 있어서,상기 소정의 기간은, 상기 자바 가상 머신의 주기적인 동작들 중의 가장 긴 주기와 같거나 그 보다 긴 것을 특징으로 하는, 자바 가상 머신 재구동 방법."}
{"patent_id": "10-2007-0140940", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "자바 가상 머신;자바 가상 머신 태스크 및 오류 감시 태스크를 할당하는 선점형 임베디드 운영체제; 및복수의 자바 애플리케이션을 포함하는 단말기로서,상기 선점형 임베디드 운영체제는, 상기 자바 가상 머신이 소정의 기간 내에 상기 자바 가상 머신 태스크에 진입하지 않는 경우 상기 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 상기 오류감시 태스크로 전달하도록 작동되고,상기 오류 감시 태스크는 상기 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 상기 자바 가상 머신 태스크의 리소스를 초기화하고 상기 자바 가상 머신 태스크를 재시작한 후, 상기 자바 가상 머신을 재구동하도록작동되는, 단말기.명 세 서발명의 상세한 설명 기 술 분 야본 발명은 임베디드 자바 가상 머신(embedded Java Virtual Machine)을 포함하는 단말기에 관한 것으로, 보다 <1>구체적으로는 자바 가상 머신에 오류가 발생한 경우 단말기가 멈추거나 오동작하는 문제를 해결하는 방법에 관한 것이다. 배 경 기 술오늘날 휴대폰, PDA 등과 같은 이동통신 단말기의 하드웨어, 소프트웨어 기술의 발전에 따라 단말기에는 기존의 <2>음성 호처리 및 단문전송 데이터 처리 기능 이외에 게임, 벨소리, 일정관리, 계산기, 주소록 저장, 사전 등 사용자에게 유용한 부가 기능이 탑재되고 있다. 이러한 여러 가지 기능들은 이른바 자바 애플리케이션(JAVAapplication)을 통해 구현되는데, 이 자바 애플리케이션은 이동통신 단말기 내의 임베디드 운영체제 및 자바 가상 머신에 의해 실행될 수 있다.임베디드 운영체제란, 통신 기기, 항공기, 차량, 로봇, 산업기기, 의료기기 등 다양한 산업 분야의 디지털제품 <3>에 내장되어 하드웨어의 제어, 통신, 멀티미디어, 인터넷, 게임, 인공지능, 유비쿼터스 컴퓨팅 등 기본 기능 및다양한 부가 기능을 제공하는 운영체제를 일컫는다. 한편, 자바 가상 머신(JAVA Virtual Machine: JVM)이란 자바 언어로 작성된 프로그램을 해석해서 실행하는 가상적 컴퓨터로서, 마이크로소프트 윈도우즈, 리눅스,유닉스, MacOS X 등과 같은 일반적인 운영체제는 물론, 핸드폰이나 가전기기에도 설치될 수 있다.위에서 언급한 여러 기능을 수행하는 과정을 간단히 설명하면 다음과 같다. 우선, 단말기 내의 임베디드 운영 <4>체제가 자바 가상 머신을 위한 태스크(Task)를 할당한다. 이렇게 할당된 태스크 내에서 자바 가상 머신은 주기적으로 구동할 수 있는데, 이러한 자바 가상 머신의 주기적 구동에 따라 자바 애플리케이션들이 연속적으로 실행되어 여러 기능(예컨대, 게임, 계산기, 사전 등)을 사용자에게 제공할 수 있다.자바 가상 머신이 정상적으로 동작하는 동안에는 단말기는 연속적으로 위에서 언급한 여러 기능을 수행할 수 <5>있지만, 자바 가상 머신 내에서 체크할 수 없는 오류가 발생하거나 무한 루프가 발생하는 경우에는 자바 가상머신이 할당된 태스크에 접근할 수 없기 때문에 할당된 태스크가 중단되게 된다. 이로 인해, 단말기 자체의기능이 멈추거나 오동작하는 문제가 발생하게 된다. 발명의 내용- 3 -공개특허 10-2009-0072742 해결 하고자하는 과제본 발명의 목적은 전술한 종래기술의 문제점을 해결하고자 하는 것으로, 단말기 내의 자바 가상 머신에 오류가 <6>발생한 경우 이 오류 여부를 감지하여 자바 가상 머신을 재구동함으로써 단말기가 정상적으로 동작하도록 하는자바 가상 머신을 재구동하는 방법을 제공하는데 있다. 과제 해결수단본 발명의 일 특징에 따르면, 임베디드 운영체제 및 자바 가상 머신(Java Virtual Machine: JVM)을 포함하는 <7>단말기에서 임베디드 운영체제가 자바 가상 머신을 재구동하는 방법이 제공된다. 임베디드 운영체제는 자바가상 머신 태스크(Task) 및 오류 감시 태스크를 할당한다. 자바 가상 머신이 소정의 기간내에 자바 가상 머신태스크에 진입하지 않는 경우 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 오류감시 태스크로 전달한다. 그 다음, 오류 감시 태스크가 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 자바 가상 머신 태스크의 리소스를 초기화하고 자바 가상 머신 태스크를 재시작하며, 자바 가상 머신을 재구동한다.본 발명의 일 실시예에 따르면, 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달하는 것은 자바 가상 <8>머신 체크 타이머를 할당하고 시작한 후 이 자바 가상 머신 체크 타이머가 만료되는 때에 행해진다.본 발명의 일 실시예에 따르면, 임베디드 운영체제는 선점형 임베디드 운영체제이다. <9>본 발명의 일 실시예에 따르면, 선점형 임베디드 운영체제는 MicroC/OS-II, VxWorks, pSOSystem 중 하나가 된 <10>다.본 발명의 일 실시예에 따르면, 오류 감시 태스크는 자바 가상 머신 태스크보다 우선 순위가 높다. <11>본 발명의 일 실시예에 따르면, 선점형 임베디드 운영체제는 자바 가상 머신 체크 타이머가 만료된 경우 자바 <12>가상 머신 태스크에서 오류 감시 태스크로 태스크 전환을 한다.본 발명의 일 실시예에 따르면, 자바 가상 머신을 재구동하는 경우 자바 가상 머신은 자바 가상 머신의 오류가 <13>발생한 시점의 자바 애플리케이션을 재구동한다.본 발명의 일 실시예에 따르면, 소정의 기간은, 자바 가상 머신의 주기적인 동작들 중의 가장 긴 주기와 같거 <14>나 그 보다 길다.본 발명의 일 특징에 따르면, 자바 가상 머신, 자바 가상 머신 태스크 및 오류 감시 태스크를 할당하는 선점형 <15>임베디드 운영체제, 그리고 복수의 자바 애플리케이션을 포함하는 단말기가 제공된다. 선점형 임베디드 운영체제는, 자바 가상 머신이 소정의 기간 내에 자바 가상 머신 태스크에 진입하지 않는 경우 자바 가상 머신에오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달하도록 작동된다. 오류 감시 태스크는 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 자바 가상 머신 태스크의 리소스를 초기화하고 자바 가상 머신 태스크를 재시작한 후, 자바 가상 머신을 재구동하도록 작동된다. 효 과본 발명의 실시예들에 따르면 다음과 같은 장점을 제공할 수 있다. <16>첫째, 단말기 내의 자바 가상 머신에 오류가 발생한 시점에서 소정의 시간이 지나면 선점형 임베디드 운영체제 <17>가 자바 가상 머신을 재구동하여 단말기가 오동작하거나 멈추는 것을 방지할 수 있다.둘째, 임베디드 운영체제가 자바 가상 머신을 재구동하는 경우 자바 가상 머신은 오류가 발생한 시점의 자바 <18>애플리케이션을 재구동하기 때문에 사용자가 실행하고자 했던 기능을 연속해서 실행할 수 있다. 발명의 실시를 위한 구체적인 내용이하, 첨부 도면을 참조하여 본 발명의 실시예를 상세히 설명한다. 이하에서는 본 발명의 요지를 불필요하게 <19>흐릴 우려가 있다고 판단되는 경우 이미 공지된 기능 및 구성에 관한 구체적인 설명을 생략한다. 또한, 이하에서 설명하는 내용은 본 발명의 일 실시예에 관한 것일 뿐 본 발명이 이로써 제한되는 것은 아님을 알아야 한다.도 1은, 본 발명의 일 실시예에 따른, 단말기 내의 자바 플랫폼 아키텍처(JAVA Platform Architecture, 100)를 <20>- 4 -공개특허 10-2009-0072742개괄적으로 도시한 도면이다.본 발명의 일 실시예에 따르면, 단말기(100)는 다른 기종간의 이식성(porting)을 높이기 위한 HAL(Hardware <21>Adaptaion Layer, 102)을 포함하고, 운영체제로서 선점형 임베디드 운영체제(104)를 포함한다. 선점형 임베디드 운영체제란, 운영체제가 여러 태스크에 대한 제어권을 가지고 있어서(즉, 여러 태스크에 대하여 우선순위를부여하고 있어서) 만약 여러 태스크 중 특정 태스크가 다운되면 강제적으로 실행권을 다른 태스크로 옮겨 다운된 태스크만을 종료시키는 운영체제를 말한다. 이러한 선점형 임베디드 운영체제(104)로는 MicroC/OS-II,VxWorks, pSOSystem 등이 있다. 이 선점형 임베디드 운영체제(104)는 아래 도 2와 관련하여 설명되는 자바 가상 머신 태스크(JVM Task, 106), 오류 감시 태스크(108) 및 자바 가상 머신 체크 타이머(JVM check timer,110)를 할당한다.단말기(100)는 자바 가상 머신(JAVA Virtual Machine: JVM, 112)을 더 포함한다. 본 발명의 일 실시예에 따르 <22>면, 이 자바 가상 머신(112)은 아주 제한된 환경에서 사용되는 디바이스들이 가져야 할 최소한의 요구사항을 정의하는 CLDC(Connected limited device configuration, 114), 이동 전화 등 이동 정보 장치에 J2ME(Java 2Platform, Micro Edition) 수행 환경을 제공하는 자바 응용 프로그램 인터페이스(API)인 MIDP(MobileInformation Device Profile, 116) 및 모바일 장치를 위한 프로파일인 MSP(Mobile Standard Profile, 118)를포함한다. 본 발명의 일 실시예에 따르면, 자바 가상 머신(112)은 선점형 임베디드 운영체제가 할당한 자바 가상 머신 태스크(106) 내에서 주기적으로 동작한다.단말기(100)는 또한 애플리케이션부(120)를 더 포함한다. 본 발명의 일 실시예에 따르면, 애플리케이션부(12 <23>0)는 MMI(multimodal interface, 122), 게임(124), 주소록(126), 벨소리(128), 대기화면(130), 기타 서비스(132) 등의 애플리케이션을 포함하지만, 이에 한정되는 것은 아니다. 각 애플리케이션(122, 124, 126, 128,130, 132)은 독립적인 미들렛 수트(MIDlet suite)로 구성되고 이들은 자바 가상 머신(112)에 의해 각각 실행된다. 예를 들어, 단말기의 사용자로부터 게임을 실행하는 입력을 수신하면, 자바 가상 머신(112)은 선점형 임베디드 운영체제(104)가 할당한 자바 가상 머신 태스크(106)에 접근하여 이 태스크 범위 내에서 게임 애플리케이션(124)을 실행시킨다.도 2는 자바 가상 머신(112)의 오동작을 검출하여 오동작하는 자바 가상 머신을 재구동하는 과정을 도시한 블록 <24>도이다.우선, 자바 가상 머신(112)을 내장하고 있는 단말기(100)의 전원이 켜진다(200). 그 다음 단말기(100) 안의 선 <25>점형 임베디드 운영체제(104)가 자바 가상 머신(112)의 구동을 위한 자바 가상 머신 태스크(106) 및 이 자바 가상 머신 태스크보다 우선 순위가 높은 오류 감시 태스크(108)를 할당한다(202). 이와 같이, 오류 감시 태스크(108)가 자바 가상 머신 태스크(106)보다 우선순위가 높기 때문에 자바 가상 머신에 오류가 발생할 경우 자바가상 머신 태스크(106)에서 오류 감시 태스크(108)로 태스크 전환이 이루어진다.또한, 선점형 임베디드 운영체제(104)는 자바 가상 머신(112)의 주기적인 동작을 체크하기 위한 자바 가상 머신 <26>체크 타이머(110)를 할당한다(204). 본 발명의 일 실시예에 따르면, 자바 가상 머신 체크 타이머는 당업계에널리 알려진 타이머 인터럽트(timer interrupt)를 이용하여 구현되며 이에 대한 자세한 설명은 생략한다. 선점형 임베디드 운영체제가 자바 가상 머신 체크 타이머(110)를 할당 후 이 타이머를 시작(start)시킨다(206).그 다음, 소정의 기간 내에 자바 가상 머신(112)이 자바 가상 머신 태스크(106)로 진입하였는지 여부를 판단한 <27>다(208). 본 발명의 일 실시예에 따르면, 소정의 기간은 자바 가상 머신(112)의 주기적인 동작들 중의 가장 긴주기와 같거나 그보다 긴 유한한 기간이다. 자바 가상 머신(112)이 정상적으로 동작하는 경우에는 자바 가상머신 태스크(106)로 주기적으로 진입하기 때문에, 항상 소정의 기간 내에 자바 가상 머신(112)의 진입이 존재하게 된다. 그러나, 자바 가상 머신(112)에 오류가 발생하거나 자바 가상 머신 내에서 무한 루프가 발생하는 경우에는 자바 가상 머신 태스크(106)로 접근할 수 없기 때문에, 소정의 기간 내에 자바 가상 머신(112)의 진입이존재하지 않게 된다.단계(208)에서 소정의 기간 내에 자바 가상 머신(112)의 진입이 있는 경우(즉, 자바 가상 머신(112)이 정상적으 <28>로 동작하는 경우)에는 이러한 진입이 있는 시점에서 자바 가상 머신 체크 타이머(110)가 리셋(reset)된다(210). 리셋된 후, 단계(206)로 돌아가서 자바 가상 머신 체크 타이머(110)는 다시 시작한다.한편, 단계(208)에서 소정의 기간 내에 자바 가상 머신(112)의 진입이 없는 경우(즉, 자바 가상 머신(112)에 오 <29>류가 발생하거나 무한루프가 발생한 경우)에는 자바 가상 머신 체크 타이머(110)는 소정의 기간이 지난 시점에서 만료(expire)된다(212). 본 발명의 일 실시예에 따르면 선점형 임베디드 운영체제(104)는 자바 가상 머신- 5 -공개특허 10-2009-0072742체크 타이머(110)가 만료됨에 따라 자바 가상 머신 태스크(106)에서 오류 감시 태스크(108)로 태스크 전환을 실행한다. 단계(212)에서 만료된 자바 가상 머신 체크 타이머(110)는 오류 감시 태스크(108)로 자바 가상 머신오류 발생 이벤트를 보낸다(214).자바 가상 머신 오류 발생 이벤트를 수신한 오류 감시 태스크(108)는 오류로 인해 중단 중인 자바 가상 머신 태 <30>스크(106)의 리소스를 초기화하고 자바 가상 머신 태스크(106)를 재시작한다(216). 그런 다음, 자바 가상 머신(112)은 오류가 발생한 시점의 애플리케이션을 재구동한다(218). 결과적으로, 자바 가상 머신(112)에 오류가발생할 때마다 선점형 임베디드 운영체제(104)가 자바 가상 머신을 재구동시킴으로써 단말기의 기능이 멈추거나오동작하는 문제를 미연에 방지할 수 있다.이상과 같이, 본 발명의 이해를 위한 본 발명의 일 실시예에 관하여 기술하였으나, 당업자라면 알 수 있듯이 본 <31>발명은 본 명세서에서 기술된 예시에 한정되는 것이 아니라 본 발명의 범주를 벗어나지 않는 범위 내에서 다양하게 변형, 재구성 및 대체될 수 있다. 따라서, 본 발명의 진정한 사상 및 범주에 속하는 모든 변형 및 변경을특허청구범위에 의해 모두 포괄하고자 한다.도면의 간단한 설명도 1은, 본 발명의 일 실시예에 따른, 단말기 내의 자바 플랫폼 아키텍처를 개괄적으로 도시한 도면이다. <32>도 2는 자바 가상 머신의 오동작을 검출하여 이 자바 가상 머신을 재구동하는 과정을 도시한 블록도이다. <33>도면 도면1- 6 -공개특허 10-2009-0072742 도면2- 7 -공개특허 10-2009-0072742"}
{"patent_id": "10-2007-0140940", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따르면, 임베디드 운영체제 및 자바 가상 머신(Java Virtual Machine: JVM)을 포함하는 단말기에서 임 베디드 운영체제가 자바 가상 머신을 재구동하는 방법이 제공된다. 임베디드 운영체제는 자바 가상 머신 태스크 (Task) 및 오류 감시 태스크를 할당한다. 자바 가상 머신이 소정의 기간내에 자바 가상 머신 태스크에 진입하지 않는 경우 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달 한다. 그 다음, 오류 감시 태스크가 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 자바 가상 머신 태 스크의 리소스를 초기화하고 자바 가상 머신 태스크를 재시작하며, 자바 가상 머신을 재구동한다."}
{"patent_id": "10-2007-0140940", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 임베디드 자바 가상 머신(embedded Java Virtual Machine)을 포함하는 단말기에 관한 것으로, 보다 <1> 구체적으로는 자바 가상 머신에 오류가 발생한 경우 단말기가 멈추거나 오동작하는 문제를 해결하는 방법에 관 한 것이다."}
{"patent_id": "10-2007-0140940", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "오늘날 휴대폰, PDA 등과 같은 이동통신 단말기의 하드웨어, 소프트웨어 기술의 발전에 따라 단말기에는 기존의 <2> 음성 호처리 및 단문전송 데이터 처리 기능 이외에 게임, 벨소리, 일정관리, 계산기, 주소록 저장, 사전 등 사 용자에게 유용한 부가 기능이 탑재되고 있다. 이러한 여러 가지 기능들은 이른바 자바 애플리케이션(JAVA application)을 통해 구현되는데, 이 자바 애플리케이션은 이동통신 단말기 내의 임베디드 운영체제 및 자바 가 상 머신에 의해 실행될 수 있다. 임베디드 운영체제란, 통신 기기, 항공기, 차량, 로봇, 산업기기, 의료기기 등 다양한 산업 분야의 디지털제품 <3> 에 내장되어 하드웨어의 제어, 통신, 멀티미디어, 인터넷, 게임, 인공지능, 유비쿼터스 컴퓨팅 등 기본 기능 및 다양한 부가 기능을 제공하는 운영체제를 일컫는다. 한편, 자바 가상 머신(JAVA Virtual Machine: JVM)이란 자 바 언어로 작성된 프로그램을 해석해서 실행하는 가상적 컴퓨터로서, 마이크로소프트 윈도우즈, 리눅스, 유닉스, MacOS X 등과 같은 일반적인 운영체제는 물론, 핸드폰이나 가전기기에도 설치될 수 있다. 위에서 언급한 여러 기능을 수행하는 과정을 간단히 설명하면 다음과 같다. 우선, 단말기 내의 임베디드 운영 <4> 체제가 자바 가상 머신을 위한 태스크(Task)를 할당한다. 이렇게 할당된 태스크 내에서 자바 가상 머신은 주기 적으로 구동할 수 있는데, 이러한 자바 가상 머신의 주기적 구동에 따라 자바 애플리케이션들이 연속적으로 실 행되어 여러 기능(예컨대, 게임, 계산기, 사전 등)을 사용자에게 제공할 수 있다. 자바 가상 머신이 정상적으로 동작하는 동안에는 단말기는 연속적으로 위에서 언급한 여러 기능을 수행할 수 <5> 있지만, 자바 가상 머신 내에서 체크할 수 없는 오류가 발생하거나 무한 루프가 발생하는 경우에는 자바 가상 머신이 할당된 태스크에 접근할 수 없기 때문에 할당된 태스크가 중단되게 된다. 이로 인해, 단말기 자체의 기능이 멈추거나 오동작하는 문제가 발생하게 된다."}
{"patent_id": "10-2007-0140940", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "발명의 내용 - 3 -공개특허 10-2009-0072742 해결 하고자하는 과제 본 발명의 목적은 전술한 종래기술의 문제점을 해결하고자 하는 것으로, 단말기 내의 자바 가상 머신에 오류가 <6> 발생한 경우 이 오류 여부를 감지하여 자바 가상 머신을 재구동함으로써 단말기가 정상적으로 동작하도록 하는 자바 가상 머신을 재구동하는 방법을 제공하는데 있다. 과제 해결수단 본 발명의 일 특징에 따르면, 임베디드 운영체제 및 자바 가상 머신(Java Virtual Machine: JVM)을 포함하는 <7> 단말기에서 임베디드 운영체제가 자바 가상 머신을 재구동하는 방법이 제공된다. 임베디드 운영체제는 자바 가상 머신 태스크(Task) 및 오류 감시 태스크를 할당한다. 자바 가상 머신이 소정의 기간내에 자바 가상 머신 태스크에 진입하지 않는 경우 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달한다. 그 다음, 오류 감시 태스크가 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하 여 자바 가상 머신 태스크의 리소스를 초기화하고 자바 가상 머신 태스크를 재시작하며, 자바 가상 머신을 재 구동한다. 본 발명의 일 실시예에 따르면, 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달하는 것은 자바 가상 <8> 머신 체크 타이머를 할당하고 시작한 후 이 자바 가상 머신 체크 타이머가 만료되는 때에 행해진다. 본 발명의 일 실시예에 따르면, 임베디드 운영체제는 선점형 임베디드 운영체제이다. <9> 본 발명의 일 실시예에 따르면, 선점형 임베디드 운영체제는 MicroC/OS-II, VxWorks, pSOSystem 중 하나가 된 <10> 다. 본 발명의 일 실시예에 따르면, 오류 감시 태스크는 자바 가상 머신 태스크보다 우선 순위가 높다. <11> 본 발명의 일 실시예에 따르면, 선점형 임베디드 운영체제는 자바 가상 머신 체크 타이머가 만료된 경우 자바 <12> 가상 머신 태스크에서 오류 감시 태스크로 태스크 전환을 한다. 본 발명의 일 실시예에 따르면, 자바 가상 머신을 재구동하는 경우 자바 가상 머신은 자바 가상 머신의 오류가 <13> 발생한 시점의 자바 애플리케이션을 재구동한다. 본 발명의 일 실시예에 따르면, 소정의 기간은, 자바 가상 머신의 주기적인 동작들 중의 가장 긴 주기와 같거 <14> 나 그 보다 길다. 본 발명의 일 특징에 따르면, 자바 가상 머신, 자바 가상 머신 태스크 및 오류 감시 태스크를 할당하는 선점형 <15> 임베디드 운영체제, 그리고 복수의 자바 애플리케이션을 포함하는 단말기가 제공된다. 선점형 임베디드 운영 체제는, 자바 가상 머신이 소정의 기간 내에 자바 가상 머신 태스크에 진입하지 않는 경우 자바 가상 머신에 오류가 발생했음을 알리는 자바 가상 머신 오류 이벤트를 오류 감시 태스크로 전달하도록 작동된다. 오류 감 시 태스크는 자바 가상 머신 오류 이벤트를 수신하는 것에 응답하여 자바 가상 머신 태스크의 리소스를 초기화 하고 자바 가상 머신 태스크를 재시작한 후, 자바 가상 머신을 재구동하도록 작동된다. 효 과 본 발명의 실시예들에 따르면 다음과 같은 장점을 제공할 수 있다. <16> 첫째, 단말기 내의 자바 가상 머신에 오류가 발생한 시점에서 소정의 시간이 지나면 선점형 임베디드 운영체제 <17> 가 자바 가상 머신을 재구동하여 단말기가 오동작하거나 멈추는 것을 방지할 수 있다. 둘째, 임베디드 운영체제가 자바 가상 머신을 재구동하는 경우 자바 가상 머신은 오류가 발생한 시점의 자바 <18> 애플리케이션을 재구동하기 때문에 사용자가 실행하고자 했던 기능을 연속해서 실행할 수 있다. 발명의 실시를 위한 구체적인 내용 이하, 첨부 도면을 참조하여 본 발명의 실시예를 상세히 설명한다. 이하에서는 본 발명의 요지를 불필요하게 <19> 흐릴 우려가 있다고 판단되는 경우 이미 공지된 기능 및 구성에 관한 구체적인 설명을 생략한다. 또한, 이하에 서 설명하는 내용은 본 발명의 일 실시예에 관한 것일 뿐 본 발명이 이로써 제한되는 것은 아님을 알아야 한다. 도 1은, 본 발명의 일 실시예에 따른, 단말기 내의 자바 플랫폼 아키텍처(JAVA Platform Architecture, 100)를 <20> - 4 -공개특허 10-2009-0072742개괄적으로 도시한 도면이다. 본 발명의 일 실시예에 따르면, 단말기는 다른 기종간의 이식성(porting)을 높이기 위한 HAL(Hardware <21> Adaptaion Layer, 102)을 포함하고, 운영체제로서 선점형 임베디드 운영체제를 포함한다. 선점형 임베디 드 운영체제란, 운영체제가 여러 태스크에 대한 제어권을 가지고 있어서(즉, 여러 태스크에 대하여 우선순위를 부여하고 있어서) 만약 여러 태스크 중 특정 태스크가 다운되면 강제적으로 실행권을 다른 태스크로 옮겨 다운 된 태스크만을 종료시키는 운영체제를 말한다. 이러한 선점형 임베디드 운영체제로는 MicroC/OS-II, VxWorks, pSOSystem 등이 있다. 이 선점형 임베디드 운영체제는 아래 도 2와 관련하여 설명되는 자바 가 상 머신 태스크(JVM Task, 106), 오류 감시 태스크 및 자바 가상 머신 체크 타이머(JVM check timer, 110)를 할당한다. 단말기는 자바 가상 머신(JAVA Virtual Machine: JVM, 112)을 더 포함한다. 본 발명의 일 실시예에 따르 <22> 면, 이 자바 가상 머신은 아주 제한된 환경에서 사용되는 디바이스들이 가져야 할 최소한의 요구사항을 정 의하는 CLDC(Connected limited device configuration, 114), 이동 전화 등 이동 정보 장치에 J2ME(Java 2 Platform, Micro Edition) 수행 환경을 제공하는 자바 응용 프로그램 인터페이스(API)인 MIDP(Mobile Information Device Profile, 116) 및 모바일 장치를 위한 프로파일인 MSP(Mobile Standard Profile, 118)를 포함한다. 본 발명의 일 실시예에 따르면, 자바 가상 머신은 선점형 임베디드 운영체제가 할당한 자바 가 상 머신 태스크 내에서 주기적으로 동작한다. 단말기는 또한 애플리케이션부를 더 포함한다. 본 발명의 일 실시예에 따르면, 애플리케이션부(12 <23> 0)는 MMI(multimodal interface, 122), 게임, 주소록, 벨소리, 대기화면, 기타 서비스 등의 애플리케이션을 포함하지만, 이에 한정되는 것은 아니다. 각 애플리케이션(122, 124, 126, 128, 130, 132)은 독립적인 미들렛 수트(MIDlet suite)로 구성되고 이들은 자바 가상 머신에 의해 각각 실행된 다. 예를 들어, 단말기의 사용자로부터 게임을 실행하는 입력을 수신하면, 자바 가상 머신은 선점형 임베 디드 운영체제가 할당한 자바 가상 머신 태스크에 접근하여 이 태스크 범위 내에서 게임 애플리케이 션을 실행시킨다. 도 2는 자바 가상 머신의 오동작을 검출하여 오동작하는 자바 가상 머신을 재구동하는 과정을 도시한 블록 <24> 도이다. 우선, 자바 가상 머신을 내장하고 있는 단말기의 전원이 켜진다. 그 다음 단말기 안의 선 <25> 점형 임베디드 운영체제가 자바 가상 머신의 구동을 위한 자바 가상 머신 태스크 및 이 자바 가 상 머신 태스크보다 우선 순위가 높은 오류 감시 태스크를 할당한다. 이와 같이, 오류 감시 태스크 가 자바 가상 머신 태스크보다 우선순위가 높기 때문에 자바 가상 머신에 오류가 발생할 경우 자바 가상 머신 태스크에서 오류 감시 태스크로 태스크 전환이 이루어진다. 또한, 선점형 임베디드 운영체제는 자바 가상 머신의 주기적인 동작을 체크하기 위한 자바 가상 머신 <26> 체크 타이머를 할당한다. 본 발명의 일 실시예에 따르면, 자바 가상 머신 체크 타이머는 당업계에 널리 알려진 타이머 인터럽트(timer interrupt)를 이용하여 구현되며 이에 대한 자세한 설명은 생략한다. 선점 형 임베디드 운영체제가 자바 가상 머신 체크 타이머를 할당 후 이 타이머를 시작(start)시킨다. 그 다음, 소정의 기간 내에 자바 가상 머신이 자바 가상 머신 태스크로 진입하였는지 여부를 판단한 <27> 다. 본 발명의 일 실시예에 따르면, 소정의 기간은 자바 가상 머신의 주기적인 동작들 중의 가장 긴 주기와 같거나 그보다 긴 유한한 기간이다. 자바 가상 머신이 정상적으로 동작하는 경우에는 자바 가상 머신 태스크로 주기적으로 진입하기 때문에, 항상 소정의 기간 내에 자바 가상 머신의 진입이 존재하 게 된다. 그러나, 자바 가상 머신에 오류가 발생하거나 자바 가상 머신 내에서 무한 루프가 발생하는 경 우에는 자바 가상 머신 태스크로 접근할 수 없기 때문에, 소정의 기간 내에 자바 가상 머신의 진입이 존재하지 않게 된다. 단계에서 소정의 기간 내에 자바 가상 머신의 진입이 있는 경우(즉, 자바 가상 머신이 정상적으 <28> 로 동작하는 경우)에는 이러한 진입이 있는 시점에서 자바 가상 머신 체크 타이머가 리셋(reset)된다 . 리셋된 후, 단계로 돌아가서 자바 가상 머신 체크 타이머는 다시 시작한다. 한편, 단계에서 소정의 기간 내에 자바 가상 머신의 진입이 없는 경우(즉, 자바 가상 머신에 오 <29> 류가 발생하거나 무한루프가 발생한 경우)에는 자바 가상 머신 체크 타이머는 소정의 기간이 지난 시점에 서 만료(expire)된다. 본 발명의 일 실시예에 따르면 선점형 임베디드 운영체제는 자바 가상 머신 - 5 -공개특허 10-2009-0072742체크 타이머가 만료됨에 따라 자바 가상 머신 태스크에서 오류 감시 태스크로 태스크 전환을 실 행한다. 단계에서 만료된 자바 가상 머신 체크 타이머는 오류 감시 태스크로 자바 가상 머신 오류 발생 이벤트를 보낸다. 자바 가상 머신 오류 발생 이벤트를 수신한 오류 감시 태스크는 오류로 인해 중단 중인 자바 가상 머신 태 <30> 스크의 리소스를 초기화하고 자바 가상 머신 태스크를 재시작한다. 그런 다음, 자바 가상 머 신은 오류가 발생한 시점의 애플리케이션을 재구동한다. 결과적으로, 자바 가상 머신에 오류가 발생할 때마다 선점형 임베디드 운영체제가 자바 가상 머신을 재구동시킴으로써 단말기의 기능이 멈추거나 오동작하는 문제를 미연에 방지할 수 있다. 이상과 같이, 본 발명의 이해를 위한 본 발명의 일 실시예에 관하여 기술하였으나, 당업자라면 알 수 있듯이 본 <31> 발명은 본 명세서에서 기술된 예시에 한정되는 것이 아니라 본 발명의 범주를 벗어나지 않는 범위 내에서 다양 하게 변형, 재구성 및 대체될 수 있다. 따라서, 본 발명의 진정한 사상 및 범주에 속하는 모든 변형 및 변경을 특허청구범위에 의해 모두 포괄하고자 한다."}
