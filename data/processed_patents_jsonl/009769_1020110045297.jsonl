{"patent_id": "10-2011-0045297", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2012-0127067", "출원번호": "10-2011-0045297", "발명의 명칭": "호환성을 평가하기 위한 화면 동등성 판별 장치 및 방법", "출원인": "부산대학교 산학협력단", "발명자": "채흥석"}}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "연결된 디바이스에서 주어진 테스트 시나리오를 기반으로 앱을 실행시키는 앱 실행부와, 상기 앱 실행부를 통해 실행되는 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 캡처부와,상기 캡처부에서 캡처한 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 매칭 처리부와, 상기 매칭 처리부에서 제거 또는 수정된 2개의 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가하는 동등성 비교부를 포함하여 구성되는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 디바이스는 스마트 폰, 태블릿과 같은 스마트 기기를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP 기법을 포함하는 것을 특징으로 하는 호환성을 평가하기위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 적어도 하나를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 앱 실행부는 텍스트나 인덱스를 기반으로 메뉴를 선택하여 테스트 시나리오를 수동으로 실행하거나, 시나리오 수행기의 자동 실행을 통해 테스트 시나리오를 자동으로 실행하는 것을 특징으로 하는 호환성을 평가하기위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서, 상기 캡처부는상기 앱 실행부와 메시지를 주고받으면서 캡처가 필요한 시점을 결정하며,상기 캡처 시점은 명령어 입력, 무작위의 타이밍, 인공지능, 신호 또는 버튼 입력, 정의된 시나리오, 테스트 중에 비동시적으로 이벤트의 발생, 일정 시간 단위, 음성 명령 중 어느 하나인 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서, 상기 매칭 처리부는 동일한 색상으로 변경, 알파(alpha) 값 변경, 이미지 자르기, 해상도(크기) 조절,루미넌스, 크로미넌스, 좌표, 인코딩, 색상 정보, 양자화 매칭, 동일한 범위 선택, 화면 구성 객체 단위로공개특허 10-2012-0127067-2-선택, 신호 변경(필터링), 수학적 변환, 시간에 따른 파형으로 변환하여 원하는 영역 선택 중 어느 하나를 통해제거하거나 수정하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서, 상기 동등성 비교부는 시간차 비교 및 선택적 공간 비교를 통해 비교하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 동등성 비교부는 2개의 결과 영상의 차이, 인지, 기하학, 객체, 비전, 렌더링, 동영상, 3차원, 신호,진동, 데이터 중 어느 하나를 비교하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 동등성 비교부는 게임, 동영상, 애니메이션, 인코딩 방법으로 변형된 값으로, 머신 러닝, AI, 유전자, 서치(search) 기반, 수학, 통계의 비교 기술을 비교 대상으로 이용하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,상기 동등성 비교부는 2개의 앱의 실행 결과의 바이너리 파일, CD, MP3, 전자 신호, 화면, 색깔, 프린트, 번쩍임 중 어느 하나를 비교 판단 기준으로 이용하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별장치."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "(A) 이기종의 디바이스 각각에서 동일한 앱을 테스트 시나리오에 따라 실행시켜 각각의 디바이스로부터 앱의 실행 결과를 출력하는 단계와,(B) 상기 각각의 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 단계와,(C) 상기 저장된 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 단계와,(D) 상기 제거 또는 수정된 2개의 앱의 실행 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 비교 평가하는 단계를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 방법."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서, 상기 (B) 단계는상기 테스트 시나리오를 실행시키는 앱 실행부와 지속적으로 통신을 수행하며, 상기 통신을 통해 이루어지는 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 어느 하나를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성판별 방법."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 통신 방법은 파일 기반, 유무선, 명령어, 신호 기반, 버튼, 앱, 소켓, 이벤트, 이진 정보 통신 중 어느 하나를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 방법.공개특허 10-2012-0127067-3-청구항 15 제 12 항에 있어서, 상기 (C) 단계에서의 관심영역 이외의 영역은 캡처되는 시점의 시간 정보, 디바이스의 네트워크 및 각종 상태가표시되어 있는 상태 바(status bar)를 포함하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별방법."}
{"patent_id": "10-2011-0045297", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 12 항에 있어서,상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP기법을 포함하며, 상기 SIMPLE 기법은 산출된 이도비의 값을 이용하여 동등성을 비교하고, VDP기법은 산출된 밝기(luminance) 및 색차(chrominance)의 물리적인 결과값을이용하여 동등성을 비교하는 것을 특징으로 하는 호환성을 평가하기 위한 화면 동등성 판별 방법.명 세 서기 술 분 야본 발명은 호환성을 평가하기 위한 화면 동등성을 판별하는 프레임워크에 관한 것으로, 특히 자동으로 이기종의 [0001]스마트폰, 태블릿과 같은 스마트 기기들에서 동일한 앱(App)을 실행하고 인간의 시각 체계(Human Visual System: HVS)를 기반하는 화면 동등성 판별 알고리즘을 통해 그 앱의 실행 결과를 비교하여 호환성을 평가하기 위한동등성 판별 장치 및 방법에 관한 것이다.배 경 기 술세계 스마트폰 시장은 급속도로 발전하고 있으며, 사용자의 다양한 요구를 신속하게 수용하기 위하여 스마트폰 [0002]제작사 및 플랫폼 업체들은 새로운 제품을 매우 짧은 기간에 출시하고 있다. 이와 같은 신속한 제품의 출시는사용자의 요구를 적시에 충족시키는 것 같지만, 스마트폰 앱 개발자에게는 호환성 문제를 일으킨다. 호환성 문제는 서로 다른 디바이스와 플랫폼에서 동일한 앱을 실행했을 경우에 그 결과가 다른 현상을 말한다. 예를들어, 2.1 버전의 트위터 앱의 동작은 2.2 버전의 플랫폼에서의 동작과 동일해야 한다. 그리고 유투브 앱은 삼성전자의 갤럭시 S뿐만 아니라 HTC의 넥서스원에서도 동일하게 동작해야 한다. 특히 이 문제는 플랫폼이 공개된안드로이드의 경우에 심각하며 “fragmentation\"이라는 용어로도 알려져 있다.이러한 스마트폰의 앱 호환성 문제는 앞으로 더욱 심각해질 것으로 예상되며, 전문 개발회사 조차도 앱의 호환 [0003]성 문제를 해결하기 위해 많은 노력을 기울이고 있다. 따라서 앱을 개발하는 비숙련된 개발자와 조직은 더욱 어려움을 겪을 것으로 예상된다.한편, 앱의 호환성을 점검하기 위하여 GUI 기반의 테스트 기법이 고려될 수 있다. 즉, 동일한 앱을 다양한 스마 [0004]트폰에서 실행을 하고 그 실행 결과 화면이 동등한 지를 확인함으로써 앱이 해당 스마트폰들에서 호환되는 지를판단할 수 있다. 그러나 많은 수의 스마트폰을 대상으로 앱의 실행 결과 화면의 동등성을 판단하기 위해서는 많은 노력이 소요된다. 이는 호환성 테스트 업무가 디바이스의 종류 및 플랫폼의 버전 업에 따라 조각화가 심화되면 될수록 동일한 앱을 실행시켜야 하는 스마트폰의 수가 증가하게 되므로 호환성 테스트를 위한 비용은 기하급수적으로 증가될 것이다.특히 앱의 실행 결과 화면이 두 스마트폰에서 동일한 지를 판별하는 것은 매우 어렵다. 이는 제조사별로 사용되 [0005]는 GPU와 픽셀 포맷이 다르기 때문에 화면 이미지의 왜곡이 발생하고, 동일한 UI 요소가 기능의 동작은 동일함에도 불구하고 플랫폼 별로 서로 다른 이미지로 표시되는 경우가 있을 수 있기 때문이다.발명의 내용해결하려는 과제따라서 본 발명은 상기와 같은 문제점을 해결하기 위해 안출한 것으로서, 이기종의 스마트폰, 태블릿과 같은 스 [0006]마트 기기들에서 동일한 앱을 실행하고 인간의 시각 체계(Human Visual System : HVS)를 기반하는 동등성 판별알고리즘을 통해 그 앱의 실행 결과를 비교하여 호환성을 평가함으로써, 단순하여 구현이 쉽고, 빠른 속도로 호공개특허 10-2012-0127067-4-환성을 평가할 수 있는 화면 동등성 판별 장치 및 방법을 제공하는데 그 목적이 있다.본 발명의 다른 목적은 주어진 임의의 앱을 복수 개의 스마트 폰에서 자동으로 실행하고 그 결과를 캡처하고 인 [0007]간의 시각 체계(Human Visual System : HVS)를 기반하는 화면 동등성 판별 알고리즘으로 SIMPLE 기법 및 VDP기법을 적용하여 디지털 이미지의 왜곡(distortion)에 영향을 덜 받으며, 두 이미지의 미세한 차이에 영향을 덜받으면서 화면 동등성을 판별하여 화면 동등성 평가를 수행하는 장치 및 방법을 제공하는데 있다.과제의 해결 수단상기와 같은 목적을 달성하기 위한 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치의 특징은 연 [0008]결된 디바이스에서 주어진 테스트 시나리오를 기반으로 앱을 실행시키는 앱 실행부와, 상기 앱 실행부를 통해실행되는 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 캡처부와, 상기 캡처부에서 캡처한 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 매칭 처리부와, 상기 매칭 처리부에서 제거 또는 수정된 2개의 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여동등성을 평가하는 동등성 비교부를 포함하여 구성되는데 있다.바람직하게 상기 디바이스는 스마트 폰, 태블릿과 같은 스마트 기기를 포함하는 것을 특징으로 한다. [0009]바람직하게 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP 기법을 포함하는 것을 특징으로 한다. [0010]바람직하게 상기 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메 [0011]모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 적어도 하나를 포함하는 것을 특징으로 한다.바람직하게 상기 캡처부는 상기 앱 실행부와 메시지를 주고받으면서 캡처가 필요한 시점을 결정하며, 상기 캡처 [0012]시점은 명령어 입력, 무작위의 타이밍, 인공지능, 신호 또는 버튼 입력, 정의된 시나리오, 테스트 중에 비동시적으로 이벤트의 발생, 일정 시간 단위, 음성 명령 중 어느 하나인 것을 특징으로 한다.상기와 같은 목적을 달성하기 위한 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 방법의 특징은 [0013](A) 이기종의 디바이스 각각에서 동일한 앱을 테스트 시나리오에 따라 실행시켜 각각의 디바이스로부터 앱의 실행 결과를 출력하는 단계와, (B) 상기 각각의 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 단계와, (C)상기 저장된 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 단계와,(D) 상기 제거 또는 수정된 2개의 앱의 실행 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 비교 평가하는 단계를 포함하는데 있다.바람직하게 상기 (B) 단계는 상기 테스트 시나리오를 실행시키는 앱 실행부와 지속적으로 통신을 수행하며, 상 [0014]기 통신을 통해 이루어지는 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 어느 하나를 포함하는 것을 특징으로 한다.바람직하게 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP기법을 포함하며, 상기 SIMPLE 기법은 산출된 [0015]이도비의 값을 이용하여 동등성을 비교하고, VDP기법은 산출된 밝기(luminance) 및 색차(chrominance)의 물리적인 결과값을 이용하여 동등성을 비교하는 것을 특징으로 한다.발명의 효과이상에서 설명한 바와 같은 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치 및 방법은 인간의 [0016]시각체계(HVS)를 기반으로 사람이 두 이미지 사이의 차이점을 인지하는 정도를 측정함에 따라 디지털 이미지의왜곡(distortion)에 영향을 덜 받을 수 있어 그래픽 하드웨어의 차이에 영향을 덜 받는 이점이 있다. 이처럼 사람이 인지하는 차이를 측정하므로 보다 효과적으로 화면 동등성을 판별할 수 있는 효과가 있다.도면의 간단한 설명[도 1] 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 장치의 구조를 나타 [0017]낸 블록도[도 2] 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 방법을 설명하기 위한 흐름도발명을 실시하기 위한 구체적인 내용공개특허 10-2012-0127067-5-본 발명의 다른 목적, 특성 및 이점들은 첨부한 도면을 참조한 실시예들의 상세한 설명을 통해 명백해질 [0018]것이다.본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치 및 방법의 바람직한 실시예에 대하여 첨부한 도 [0019]면을 참조하여 설명하면 다음과 같다. 그러나 본 발명은 이하에서 개시되는 실시예에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예는 본 발명의 개시가 완전하도록하며 통상의 지식을가진자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이다. 따라서 본 명세서에 기재된 실시예와 도면에 도시된 구성은 본 발명의 가장 바람직한 일 실시예에 불과할 뿐이고 본 발명의 기술적 사상을 모두 대변하는것은 아니므로, 본 출원시점에 있어서 이들을 대체할 수 있는 다양한 균등물과 변형예들이 있을 수 있음을 이해하여야 한다.도 1 은 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 장치의 구조를 나타 [0020]낸 블록도이다.도 1과 같이, 앱 실행부(100)와, 화면 캡처부(200)와, 매칭 처리부(300)와, 동등성 비교부(400)로 구성된다. [0021]상기 앱 실행부(100)는 연결된 디바이스에서 주어진 테스트 시나리오를 이용하여 앱을 실행시킨다. 이는 텍스트 [0022]나 인덱스를 기반으로 메뉴를 선택하여 수동으로 실행할 수 있고, 자동으로 시나리오 수행기를 실행하여 여러개의 테스트 시나리오를 실행할 수 있다. 실예로서, 게임의 경우는 수동으로 실행시키며, UI의 경우는자동으로, 또한 동영상의 경우에는 반자동으로 실행시키게 된다. 이때, 상기 디바이스는 스마트폰, 태블릿과 같은 스마트 기기들을 모두 포함한다.상기 화면 캡처부(200)는 앱 실행부(100)를 통해 실행되는 디바이스의 화면으로부터 앱의 실행 결과를 캡처하여 [0023]저장한다. 이때, 저장되는 앱의 실행 결과는 화면(이미지), 소리, 진동, 센서 동작을 포함한다. 본 명세서에서는 앱의 실행 결과로서 앱의 실행 화면으로 한정하여 설명한다. 그러나 이는 기술적 사상을 구체적으로 기술하기 위한 바람직한 실시예로서 그 설명을 위한 것이며 그 제한을 위한 것이 아님을 주의하여야 한다. 그리고 상기 화면 캡처부(200)는 앱 실행부(100)와 메시지를 주고받으면서 화면의 캡처가 필요한 시점을 정확하 [0024]게 결정한다. 이때, 어느 시점에 앱의 실행 결과를 캡처하여 저장할 지는 다음과 같이 미리 정의되어 실행할 수있으며, 이는 공지된 기술을 통해 이루어지는 것으로 이에 따른 상세한 설명은 생략한다.- 명령어를 입력해서 결과를 수집한다. [0025]- 무작위의 타이밍에 결과를 수집한다. [0026]- 인공지능 방식으로 결과를 수집한다. [0027]- 신호 또는 버튼을 입력하면 결과를 수집한다. [0028]- 시나리오에 따라 결과를 수집한다. [0029]- 테스트 중에 비동시적으로 이벤트가 발생하면 감지해서 결과를 수집한다. [0030]- 일정 시간이 지나면 결과를 수집한다. [0031]- 음성 명령에 따라 결과를 수집한다. [0032]상기 매칭 처리부(300)는 화면 캡처부(200)에서 캡처한 화면에서 실험에 필요 없는 부분(관심영역 이외의 영 [0033]역)은 제거하거나 수정하는 기능을 수행한다. 즉, 화면이 캡처되는 시점의 시간 정보와 디바이스의 네트워크 및각종 상태가 표시되어 있는 상태 바(status bar)를 제거하거나 수정함으로써, 더 정확한 측정 결과를 얻을 수있다. 실험 대상의 모든 디바이스가 동일하게 높이 38픽셀(pixel)의 상태 바를 사용하고 있으므로 동일한 방법으로 상태 바를 제거하거나 수정한다. 이처럼 관심 영역 이외의 영역을 테스트에서 제외시키는 방법을 살펴보면다음과 같다.- 이미지 : 동일한 색상으로 변경한다. [0034]- 이미지 : 알파(alpha) 값을 바꿔서 투명하게 한다. [0035]- 이미지 : 이미지를 자른다. [0036]- 이미지 : 해상도(크기)를 조절한다. [0037]공개특허 10-2012-0127067-6-- 이미지 : 루미넌스, 크로미넌스, 좌표, 인코딩, 색상 정보, 양자화 매칭 [0038]- 대표 장치에서 화면의 범위를 선택하여 모든 장치에서 동일한 범위 선택 [0039]- 대표 장치에서 화면 구성 객체 단위로 선택 [0040]- 신호 변경(필터링) [0041]- 수학적 변환 [0042]- 센서, 소리 : 시간에 따른 파형으로 변환하여 원하는 영역을 선택 [0043]상기 동등성 비교부(400)는 매칭 처리부(300)에서 제거 또는 수정된 2개의 결과 화면을 인간의 시각 체계(HVS) [0044]를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가한다. 이때 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법과 VDP 기법을 포함한다. 상기 SIMPLE 기법은 평가 결과로서 이도비를 출력한다. 이도비는 화면동등성을 정량적으로 측정하기 위해 전체 화면을 구성하는 픽셀 중 서로 다른 픽셀의 비율을 의미한다. 즉, 이도비 값이 높으면 두 이미지의 차이가 큰 것을 의미하고, 이도비가 낮으면 낮을수록 두 이미지는 동등한 것을의미한다. 상기 VDP 기법은 인간의 시각적 반응을 표현하는 기법으로, 원본 이미지와 비교해서 왜곡된 이미지의정확도(fidelity)를 평가하고, 발견 확률(probability of detection)의 위치를 나타내는 이미지를 출력한다.즉, VDP 기법은 이미지 품질에 관한 절대적인 척도가 아닌, 상대적인 척도를 기술함으로서, 평가 결과로서SIMPLE 기법을 통한 이도비와 더불어 상이한 화면의 부분을 출력한다. 이때, 상기 동등성 비교부(400)의 동등성평가를 위한 비교 방법으로는 시간차 비교 방법, 선택적 공간 비교 방법으로 이루어지며, 비교 분야로는 차이,인지, 기하학, 객체, 비전, 렌더링, 동영상, 3차원, 신호, 진동, 데이터를 포함한다. 그리고 비교 대상으로는게임, 동영상, 애니메이션, 인코딩 방법으로 변형된 값으로, 머신 러닝, AI, 유전자, 서치(search) 기반, 수학,통계의 비교 기술을 이용한다. 그리고 두 실행 결과가 다름을 판단하는 출력 방법으로는 바이너리 파일, CD,MP3, 전자 신호, 화면, 색깔, 프린트, 번쩍임 등을 이용한다.이와 같이 구성된 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치의 동작을 첨부한 도면을 참조 [0045]하여 상세히 설명하면 다음과 같다. 도 2 는 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 방법을 설명하기 위 [0046]한 흐름도이다.도 2를 참조하여 설명하면, 먼저 앱 실행부(100)는 참조(reference) 디바이스 및 대상(target) 디바이스인 이기 [0047]종의 디바이스 각각에서 동일한 앱을 테스트 시나리오에 따라 실행시킨다(S10). 이때, 상기 앱은 “ApiDemos”가 리스트 뷰로 구성되어 있으며, 이것을 자동으로 탐색할 수 있는 테스트 시나리오를 “JUnit”로 작성하는 것으로 정의되어 있는 것으로 가정하면, 상기 테스트 시나리오의 구체적인 동작은 “ApiDemos”의 리스트 뷰의 항목을 하나씩 실행하고, 그 실행화면을 화면 캡처부(200)에 저장하도록 제어한다. 따라서 작성된 테스트 시나리오는 위와 같은 방법으로 “ApiDemos”의 모든 리스트 뷰의 항목을 실행한다. 그리고 테스트 시나리오에 따라서수행되는 앱의 실행은 디바이스의 화면으로 출력된다. 이때, 상기 디바이스는 스마트폰, 태블릿과 같은 스마트기기들을 포함한다.이어 상기 시나리오에 따라서 앱의 실행 결과가 화면으로 출력되면, 화면 캡처부(200)가 디바이스의 프레임 버 [0048]퍼에 있는 내용을 읽어서 2 개의 이미지 파일을 저장한다(S20). 이때, 화면 캡처부(200)는 앱의 실행 결과 화면을 정확하게 저장하기 위해 앱 실행부(100)와 지속적으로 통신을 수행하며, 앱의 실행 결과로서 상기 이미지를송수신한다. 상기 앱의 실행 결과로는 이미지뿐만 아니라 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상을 포함하며, 수행되는 통신 방법으로는 파일기반, 유무선, 명령어, 신호 기반, 버튼, 앱, 소켓, 이벤트, 이진 정보 통신을 포함한다. 그러나, 위에서도 기재한 것과 같이 앱의 실행 결과로서 앱의 실행 화면의 이미지로 한정하여 설명하지만 그 제한을 위한 것은 아니다. 그리고 이렇게 저장한 2개의 이미지 파일을 매칭 처리부(300)를 이용하여 실험에 필요 없는 부분(관심영역 이외 [0049]의 영역)은 제거하거나 수정한 후, 동등성 비교부(400)를 사용하여 두 이미지를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가한다. 이때 상기 화면 동등성 판별 알고리즘은SIMPLE 기법과 VDP 기법을 포함하며, 이를 통해 실시예로서 상세히 설명하면 다음과 같다.공개특허 10-2012-0127067-7-SIMPLE 기법을 통해 산출된 이도비의 값과, VDP기법을 통해 산출된 밝기(luminance) 및 색차(chrominance)의 [0050]물리적인 결과값을 이용하여 각각 동등성을 비교한다(S30). 즉, 상기 동등성 비교부(400)에서 두 이미지를SIMPLE 기법과 VDP 기법을 사용하여 각각 동등성을 계산하고, 계산한 결과를 출력하여 결과 중 가장 우수한 결과를 보인 기법을 선별하여 동등성 비교를 통해 스마트폰, 태블릿과 같은 스마트 기기 앱의 호환성을 평가하게된다.이때, 상기 SIMPLE 기법은 두 이미지의 픽셀 값의 차이를 산술적으로 비교하는 방법이다. 즉, 이도비 값이 높으 [0051]면 두 이미지의 차이가 큰 것을 의미하고, 이도비가 낮으면 낮을수록 두 이미지는 동등한 것을 의미한다. 그리고 상기 VDP 기법은 입력 이미지를 조정하는 보정(Calibration) 단계와, 인체 시각화 시스템(Human VisualSystem, 이하 HVS) 모델을 적용하는 단계와, 시각적인 차이점에 관한 HVS 차이를 표시하는 단계로 이루어져 있다. 즉, VDP 기법의 경우 입력은 2개의 이미지와 관찰 조건과 보정(Calibration)에 대한 파라미터인 반면에, 출력은 두 이미지 사이의 시각적인 차이를 보여주는 새로운 이미지이다.상기에서 설명한 본 발명의 기술적 사상은 바람직한 실시예에서 구체적으로 기술되었으나, 상기한 실시예는 그 [0052]설명을 위한 것이며 그 제한을 위한 것이 아님을 주의하여야 한다. 또한, 본 발명의 기술적 분야의 통상의 지식을 가진자라면 본 발명의 기술적 사상의 범위 내에서 다양한 실시예가 가능함을 이해할 수 있을 것이다. 따라서본 발명의 진정한 기술적 보호 범위는 첨부된 특허청구범위의 기술적 사상에 의해 정해져야 할 것이다. 도면도면1공개특허 10-2012-0127067-8-도면2공개특허 10-2012-0127067-9-"}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 이기종의 스마트폰, 태블릿과 같은 스마트 기기들에서 동일한 앱을 실행하고 인간의 시각 체계(Human Visual System : HVS)를 기반하는 동등성 판별 알고리즘을 통해 그 실행 결과를 비교하여 호환성을 평가함으로써, 단순하여 구현이 쉽고, 빠른 속도로 호환성을 평가할 수 있는 화면 동등성 판별 장치 및 방법을 제공하기 위한 것으로서, 연결된 디바이스에서 주어진 테스트 시나리오를 기반으로 앱을 실행시키는 앱 실행부와, 상기 앱 실행부를 통해 실행되는 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 캡처부와, 상기 캡처부에서 캡처한 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 매 칭 처리부와, 상기 매칭 처리부에서 제거 또는 수정된 2개의 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동 등성 판별 알고리즘을 사용하여 동등성을 평가하는 동등성 비교부를 포함하여 구성되는데 있다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 호환성을 평가하기 위한 화면 동등성을 판별하는 프레임워크에 관한 것으로, 특히 자동으로 이기종의 스마트폰, 태블릿과 같은 스마트 기기들에서 동일한 앱(App)을 실행하고 인간의 시각 체계(Human Visual System : HVS)를 기반하는 화면 동등성 판별 알고리즘을 통해 그 앱의 실행 결과를 비교하여 호환성을 평가하기 위한 동등성 판별 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "세계 스마트폰 시장은 급속도로 발전하고 있으며, 사용자의 다양한 요구를 신속하게 수용하기 위하여 스마트폰 제작사 및 플랫폼 업체들은 새로운 제품을 매우 짧은 기간에 출시하고 있다. 이와 같은 신속한 제품의 출시는 사용자의 요구를 적시에 충족시키는 것 같지만, 스마트폰 앱 개발자에게는 호환성 문제를 일으킨다. 호환성 문 제는 서로 다른 디바이스와 플랫폼에서 동일한 앱을 실행했을 경우에 그 결과가 다른 현상을 말한다. 예를 들어, 2.1 버전의 트위터 앱의 동작은 2.2 버전의 플랫폼에서의 동작과 동일해야 한다. 그리고 유투브 앱은 삼 성전자의 갤럭시 S뿐만 아니라 HTC의 넥서스원에서도 동일하게 동작해야 한다. 특히 이 문제는 플랫폼이 공개된 안드로이드의 경우에 심각하며 “fragmentation\"이라는 용어로도 알려져 있다. 이러한 스마트폰의 앱 호환성 문제는 앞으로 더욱 심각해질 것으로 예상되며, 전문 개발회사 조차도 앱의 호환 성 문제를 해결하기 위해 많은 노력을 기울이고 있다. 따라서 앱을 개발하는 비숙련된 개발자와 조직은 더욱 어 려움을 겪을 것으로 예상된다. 한편, 앱의 호환성을 점검하기 위하여 GUI 기반의 테스트 기법이 고려될 수 있다. 즉, 동일한 앱을 다양한 스마 트폰에서 실행을 하고 그 실행 결과 화면이 동등한 지를 확인함으로써 앱이 해당 스마트폰들에서 호환되는 지를 판단할 수 있다. 그러나 많은 수의 스마트폰을 대상으로 앱의 실행 결과 화면의 동등성을 판단하기 위해서는 많 은 노력이 소요된다. 이는 호환성 테스트 업무가 디바이스의 종류 및 플랫폼의 버전 업에 따라 조각화가 심화되 면 될수록 동일한 앱을 실행시켜야 하는 스마트폰의 수가 증가하게 되므로 호환성 테스트를 위한 비용은 기하급 수적으로 증가될 것이다. 특히 앱의 실행 결과 화면이 두 스마트폰에서 동일한 지를 판별하는 것은 매우 어렵다. 이는 제조사별로 사용되 는 GPU와 픽셀 포맷이 다르기 때문에 화면 이미지의 왜곡이 발생하고, 동일한 UI 요소가 기능의 동작은 동일함 에도 불구하고 플랫폼 별로 서로 다른 이미지로 표시되는 경우가 있을 수 있기 때문이다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "따라서 본 발명은 상기와 같은 문제점을 해결하기 위해 안출한 것으로서, 이기종의 스마트폰, 태블릿과 같은 스 마트 기기들에서 동일한 앱을 실행하고 인간의 시각 체계(Human Visual System : HVS)를 기반하는 동등성 판별 알고리즘을 통해 그 앱의 실행 결과를 비교하여 호환성을 평가함으로써, 단순하여 구현이 쉽고, 빠른 속도로 호환성을 평가할 수 있는 화면 동등성 판별 장치 및 방법을 제공하는데 그 목적이 있다. 본 발명의 다른 목적은 주어진 임의의 앱을 복수 개의 스마트 폰에서 자동으로 실행하고 그 결과를 캡처하고 인 간의 시각 체계(Human Visual System : HVS)를 기반하는 화면 동등성 판별 알고리즘으로 SIMPLE 기법 및 VDP 기법을 적용하여 디지털 이미지의 왜곡(distortion)에 영향을 덜 받으며, 두 이미지의 미세한 차이에 영향을 덜 받으면서 화면 동등성을 판별하여 화면 동등성 평가를 수행하는 장치 및 방법을 제공하는데 있다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기와 같은 목적을 달성하기 위한 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치의 특징은 연 결된 디바이스에서 주어진 테스트 시나리오를 기반으로 앱을 실행시키는 앱 실행부와, 상기 앱 실행부를 통해 실행되는 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 캡처부와, 상기 캡처부에서 캡처한 앱의 실행 결 과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 매칭 처리부와, 상기 매칭 처리부 에서 제거 또는 수정된 2개의 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가하는 동등성 비교부를 포함하여 구성되는데 있다. 바람직하게 상기 디바이스는 스마트 폰, 태블릿과 같은 스마트 기기를 포함하는 것을 특징으로 한다. 바람직하게 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP 기법을 포함하는 것을 특징으로 한다. 바람직하게 상기 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메 모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 적어도 하나를 포함하는 것을 특징으로 한다. 바람직하게 상기 캡처부는 상기 앱 실행부와 메시지를 주고받으면서 캡처가 필요한 시점을 결정하며, 상기 캡처 시점은 명령어 입력, 무작위의 타이밍, 인공지능, 신호 또는 버튼 입력, 정의된 시나리오, 테스트 중에 비동시 적으로 이벤트의 발생, 일정 시간 단위, 음성 명령 중 어느 하나인 것을 특징으로 한다. 상기와 같은 목적을 달성하기 위한 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 방법의 특징은 (A) 이기종의 디바이스 각각에서 동일한 앱을 테스트 시나리오에 따라 실행시켜 각각의 디바이스로부터 앱의 실 행 결과를 출력하는 단계와, (B) 상기 각각의 디바이스로부터 앱의 실행 결과를 캡처하여 저장하는 단계와, (C) 상기 저장된 앱의 실행 결과에서 실험에 필요 없는 부분(관심영역 이외의 영역)은 제거하거나 수정하는 단계와, (D) 상기 제거 또는 수정된 2개의 앱의 실행 결과를 인간의 시각 체계(HVS)를 기반하는 화면 동등성 판별 알고 리즘을 사용하여 동등성을 비교 평가하는 단계를 포함하는데 있다. 바람직하게 상기 (B) 단계는 상기 테스트 시나리오를 실행시키는 앱 실행부와 지속적으로 통신을 수행하며, 상 기 통신을 통해 이루어지는 앱의 실행 결과는 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피스), 카메라 출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상 중 어느 하나를 포함하는 것을 특징으로 한다. 바람직하게 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법, VDP기법을 포함하며, 상기 SIMPLE 기법은 산출된 이도비의 값을 이용하여 동등성을 비교하고, VDP기법은 산출된 밝기(luminance) 및 색차(chrominance)의 물리적 인 결과값을 이용하여 동등성을 비교하는 것을 특징으로 한다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상에서 설명한 바와 같은 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치 및 방법은 인간의 시각체계(HVS)를 기반으로 사람이 두 이미지 사이의 차이점을 인지하는 정도를 측정함에 따라 디지털 이미지의 왜곡(distortion)에 영향을 덜 받을 수 있어 그래픽 하드웨어의 차이에 영향을 덜 받는 이점이 있다. 이처럼 사 람이 인지하는 차이를 측정하므로 보다 효과적으로 화면 동등성을 판별할 수 있는 효과가 있다."}
{"patent_id": "10-2011-0045297", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 다른 목적, 특성 및 이점들은 첨부한 도면을 참조한 실시예들의 상세한 설명을 통해 명백해질 것이다. 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치 및 방법의 바람직한 실시예에 대하여 첨부한 도 면을 참조하여 설명하면 다음과 같다. 그러나 본 발명은 이하에서 개시되는 실시예에 한정되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예는 본 발명의 개시가 완전하도록하며 통상의 지식을 가진자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이다. 따라서 본 명세서에 기재된 실시예와 도면 에 도시된 구성은 본 발명의 가장 바람직한 일 실시예에 불과할 뿐이고 본 발명의 기술적 사상을 모두 대변하는 것은 아니므로, 본 출원시점에 있어서 이들을 대체할 수 있는 다양한 균등물과 변형예들이 있을 수 있음을 이해 하여야 한다. 도 1 은 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 장치의 구조를 나타 낸 블록도이다. 도 1과 같이, 앱 실행부와, 화면 캡처부와, 매칭 처리부와, 동등성 비교부로 구성된다. 상기 앱 실행부는 연결된 디바이스에서 주어진 테스트 시나리오를 이용하여 앱을 실행시킨다. 이는 텍스트 나 인덱스를 기반으로 메뉴를 선택하여 수동으로 실행할 수 있고, 자동으로 시나리오 수행기를 실행하여 여러 개의 테스트 시나리오를 실행할 수 있다. 실예로서, 게임의 경우는 수동으로 실행시키며, UI의 경우는 자동으로, 또한 동영상의 경우에는 반자동으로 실행시키게 된다. 이때, 상기 디바이스는 스마트폰, 태블릿과 같 은 스마트 기기들을 모두 포함한다. 상기 화면 캡처부는 앱 실행부를 통해 실행되는 디바이스의 화면으로부터 앱의 실행 결과를 캡처하여 저장한다. 이때, 저장되는 앱의 실행 결과는 화면(이미지), 소리, 진동, 센서 동작을 포함한다. 본 명세서에서 는 앱의 실행 결과로서 앱의 실행 화면으로 한정하여 설명한다. 그러나 이는 기술적 사상을 구체적으로 기술하 기 위한 바람직한 실시예로서 그 설명을 위한 것이며 그 제한을 위한 것이 아님을 주의하여야 한다. 그리고 상기 화면 캡처부는 앱 실행부와 메시지를 주고받으면서 화면의 캡처가 필요한 시점을 정확하 게 결정한다. 이때, 어느 시점에 앱의 실행 결과를 캡처하여 저장할 지는 다음과 같이 미리 정의되어 실행할 수 있으며, 이는 공지된 기술을 통해 이루어지는 것으로 이에 따른 상세한 설명은 생략한다. - 명령어를 입력해서 결과를 수집한다. - 무작위의 타이밍에 결과를 수집한다. - 인공지능 방식으로 결과를 수집한다. - 신호 또는 버튼을 입력하면 결과를 수집한다. - 시나리오에 따라 결과를 수집한다. - 테스트 중에 비동시적으로 이벤트가 발생하면 감지해서 결과를 수집한다. - 일정 시간이 지나면 결과를 수집한다. - 음성 명령에 따라 결과를 수집한다. 상기 매칭 처리부는 화면 캡처부에서 캡처한 화면에서 실험에 필요 없는 부분(관심영역 이외의 영 역)은 제거하거나 수정하는 기능을 수행한다. 즉, 화면이 캡처되는 시점의 시간 정보와 디바이스의 네트워크 및 각종 상태가 표시되어 있는 상태 바(status bar)를 제거하거나 수정함으로써, 더 정확한 측정 결과를 얻을 수 있다. 실험 대상의 모든 디바이스가 동일하게 높이 38픽셀(pixel)의 상태 바를 사용하고 있으므로 동일한 방법 으로 상태 바를 제거하거나 수정한다. 이처럼 관심 영역 이외의 영역을 테스트에서 제외시키는 방법을 살펴보면 다음과 같다. - 이미지 : 동일한 색상으로 변경한다. - 이미지 : 알파(alpha) 값을 바꿔서 투명하게 한다. - 이미지 : 이미지를 자른다. - 이미지 : 해상도(크기)를 조절한다. - 이미지 : 루미넌스, 크로미넌스, 좌표, 인코딩, 색상 정보, 양자화 매칭 - 대표 장치에서 화면의 범위를 선택하여 모든 장치에서 동일한 범위 선택 - 대표 장치에서 화면 구성 객체 단위로 선택 - 신호 변경(필터링) - 수학적 변환 - 센서, 소리 : 시간에 따른 파형으로 변환하여 원하는 영역을 선택 상기 동등성 비교부는 매칭 처리부에서 제거 또는 수정된 2개의 결과 화면을 인간의 시각 체계(HVS) 를 기반하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가한다. 이때 상기 화면 동등성 판별 알고리즘 은 SIMPLE 기법과 VDP 기법을 포함한다. 상기 SIMPLE 기법은 평가 결과로서 이도비를 출력한다. 이도비는 화면 동등성을 정량적으로 측정하기 위해 전체 화면을 구성하는 픽셀 중 서로 다른 픽셀의 비율을 의미한다. 즉, 이 도비 값이 높으면 두 이미지의 차이가 큰 것을 의미하고, 이도비가 낮으면 낮을수록 두 이미지는 동등한 것을 의미한다. 상기 VDP 기법은 인간의 시각적 반응을 표현하는 기법으로, 원본 이미지와 비교해서 왜곡된 이미지의 정확도(fidelity)를 평가하고, 발견 확률(probability of detection)의 위치를 나타내는 이미지를 출력한다. 즉, VDP 기법은 이미지 품질에 관한 절대적인 척도가 아닌, 상대적인 척도를 기술함으로서, 평가 결과로서 SIMPLE 기법을 통한 이도비와 더불어 상이한 화면의 부분을 출력한다. 이때, 상기 동등성 비교부의 동등성 평가를 위한 비교 방법으로는 시간차 비교 방법, 선택적 공간 비교 방법으로 이루어지며, 비교 분야로는 차이, 인지, 기하학, 객체, 비전, 렌더링, 동영상, 3차원, 신호, 진동, 데이터를 포함한다. 그리고 비교 대상으로는 게임, 동영상, 애니메이션, 인코딩 방법으로 변형된 값으로, 머신 러닝, AI, 유전자, 서치(search) 기반, 수학, 통계의 비교 기술을 이용한다. 그리고 두 실행 결과가 다름을 판단하는 출력 방법으로는 바이너리 파일, CD, MP3, 전자 신호, 화면, 색깔, 프린트, 번쩍임 등을 이용한다. 이와 같이 구성된 본 발명에 따른 호환성을 평가하기 위한 화면 동등성 판별 장치의 동작을 첨부한 도면을 참조 하여 상세히 설명하면 다음과 같다. 도 2 는 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 방법을 설명하기 위 한 흐름도이다. 도 2를 참조하여 설명하면, 먼저 앱 실행부는 참조(reference) 디바이스 및 대상(target) 디바이스인 이기 종의 디바이스 각각에서 동일한 앱을 테스트 시나리오에 따라 실행시킨다(S10). 이때, 상기 앱은 “ApiDemos” 가 리스트 뷰로 구성되어 있으며, 이것을 자동으로 탐색할 수 있는 테스트 시나리오를 “JUnit”로 작성하는 것으로 정의되어 있는 것으로 가정하면, 상기 테스트 시나리오의 구체적인 동작은 “ApiDemos”의 리스트 뷰의 항 목을 하나씩 실행하고, 그 실행화면을 화면 캡처부에 저장하도록 제어한다. 따라서 작성된 테스트 시나리 오는 위와 같은 방법으로 “ApiDemos”의 모든 리스트 뷰의 항목을 실행한다. 그리고 테스트 시나리오에 따라서 수행되는 앱의 실행은 디바이스의 화면으로 출력된다. 이때, 상기 디바이스는 스마트폰, 태블릿과 같은 스마트 기기들을 포함한다. 이어 상기 시나리오에 따라서 앱의 실행 결과가 화면으로 출력되면, 화면 캡처부가 디바이스의 프레임 버 퍼에 있는 내용을 읽어서 2 개의 이미지 파일을 저장한다(S20). 이때, 화면 캡처부는 앱의 실행 결과 화면 을 정확하게 저장하기 위해 앱 실행부와 지속적으로 통신을 수행하며, 앱의 실행 결과로서 상기 이미지를 송수신한다. 상기 앱의 실행 결과로는 이미지뿐만 아니라 소리, 진동, 신호, 센서값, 프레임 버퍼, 레이어(서피 스), 카메라 출력, 메모리 값, 명령어 집합, 이미지, 패킷, 동영상을 포함하며, 수행되는 통신 방법으로는 파일 기반, 유무선, 명령어, 신호 기반, 버튼, 앱, 소켓, 이벤트, 이진 정보 통신을 포함한다. 그러나, 위에서도 기 재한 것과 같이 앱의 실행 결과로서 앱의 실행 화면의 이미지로 한정하여 설명하지만 그 제한을 위한 것은 아니 다. 그리고 이렇게 저장한 2개의 이미지 파일을 매칭 처리부를 이용하여 실험에 필요 없는 부분(관심영역 이외 의 영역)은 제거하거나 수정한 후, 동등성 비교부를 사용하여 두 이미지를 인간의 시각 체계(HVS)를 기반 하는 화면 동등성 판별 알고리즘을 사용하여 동등성을 평가한다. 이때 상기 화면 동등성 판별 알고리즘은 SIMPLE 기법과 VDP 기법을 포함하며, 이를 통해 실시예로서 상세히 설명하면 다음과 같다.SIMPLE 기법을 통해 산출된 이도비의 값과, VDP기법을 통해 산출된 밝기(luminance) 및 색차(chrominance)의 물리적인 결과값을 이용하여 각각 동등성을 비교한다(S30). 즉, 상기 동등성 비교부에서 두 이미지를 SIMPLE 기법과 VDP 기법을 사용하여 각각 동등성을 계산하고, 계산한 결과를 출력하여 결과 중 가장 우수한 결 과를 보인 기법을 선별하여 동등성 비교를 통해 스마트폰, 태블릿과 같은 스마트 기기 앱의 호환성을 평가하게 된다. 이때, 상기 SIMPLE 기법은 두 이미지의 픽셀 값의 차이를 산술적으로 비교하는 방법이다. 즉, 이도비 값이 높으 면 두 이미지의 차이가 큰 것을 의미하고, 이도비가 낮으면 낮을수록 두 이미지는 동등한 것을 의미한다. 그리 고 상기 VDP 기법은 입력 이미지를 조정하는 보정(Calibration) 단계와, 인체 시각화 시스템(Human Visual System, 이하 HVS) 모델을 적용하는 단계와, 시각적인 차이점에 관한 HVS 차이를 표시하는 단계로 이루어져 있 다. 즉, VDP 기법의 경우 입력은 2개의 이미지와 관찰 조건과 보정(Calibration)에 대한 파라미터인 반면에, 출 력은 두 이미지 사이의 시각적인 차이를 보여주는 새로운 이미지이다. 상기에서 설명한 본 발명의 기술적 사상은 바람직한 실시예에서 구체적으로 기술되었으나, 상기한 실시예는 그 설명을 위한 것이며 그 제한을 위한 것이 아님을 주의하여야 한다. 또한, 본 발명의 기술적 분야의 통상의 지식 을 가진자라면 본 발명의 기술적 사상의 범위 내에서 다양한 실시예가 가능함을 이해할 수 있을 것이다. 따라서 본 발명의 진정한 기술적 보호 범위는 첨부된 특허청구범위의 기술적 사상에 의해 정해져야 할 것이다."}
{"patent_id": "10-2011-0045297", "section": "도면", "subsection": "도면설명", "item": 1, "content": "[도 1] 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 장치의 구조를 나타 낸 블록도 [도 2] 본 발명의 실시예에 따른 스마트폰 앱의 호환성을 평가하기 위한 화면 동등성 판별 방법을 설명하기 위 한 흐름도"}
