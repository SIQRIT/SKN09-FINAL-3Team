{"patent_id": "10-2021-0153020", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0046913", "출원번호": "10-2021-0153020", "발명의 명칭": "전자 장치에서 이미지의 압축 품질 예측 방법 및 장치", "출원인": "삼성전자주식회사", "발명자": "김규원"}}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서, 디스플레이 모듈;메모리; 및상기 디스플레이 모듈 및 상기 메모리와 작동적으로 연결된 프로세서를 포함하고, 상기 프로세서는,상기 디스플레이 모듈을 통해 이미지를 표시하고,상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하고,상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하고,신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대상인 아웃라이어(outlier)에 대응하는 제1블록과 품질 예측이 가능한 제2 블록을 식별하고,상기 복수 개의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하고, 및상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을분류하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 이미지는,지정된 압축 품질로 압축된 압축 이미지인 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 프로세서는,상기 추출된 복수 개의 블록에 대해, 블록 단위의 신뢰도 추정에 기반하여, 지정된 임계 값 이하의 아웃라이어에 대응하는 적어도 하나의 제1 블록을 추정하고, 상기 적어도 하나의 제1 블록을 압축 품질 분류를 위한 평균 연산에서 제외하고,지정된 임계 값 초과의 적어도 하나의 제2 블록에 기반하여 압축 품질 분류를 위한 평균 연산을 수행하고,평균 연산의 결과를 상기 이미지에 대한 압축 품질로 분류하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 프로세서는,상기 이미지에 대해 분류된 압축 품질에 대응하게 학습된 노이즈 제거 모델을 선택하고,상기 선택된 노이즈 제거 모델에 기반하여 상기 이미지에 대한 화질 개선을 처리하고,개선된 이미지를 지정된 동작에 기반하여 처리하도록 설정된 전자 장치.공개특허 10-2023-0046913-3-청구항 5 제4항에 있어서, 상기 프로세서는,다양한 압축 품질 별로 미리 학습된 복수의 노이즈 제거 모델을 상기 메모리에 저장하고, 상기 복수의 노이즈 제거 모델 중 상기 이미지의 압축 품질의 분류에 대응하게 학습된 노이즈 제거 모델을 선택하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 프로세서는,개선된 이미지를, 상기 디스플레이 모듈을 통한 표시, 상기 메모리에 저장 또는 외부로 전송 중 적어도 하나의지정된 동작으로 처리하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 프로세서는,상기 이미지의 이미지 품질에 관련된 정보를 요청하는 사용자 입력을 수신하고,상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지에 대한 보정 정보를 상기 이미지에 기반하여 표시하도록 상기 디스플레이 모듈(160)을 제어하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 프로세서는,상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 대표 품질에 대응하는 압축 품질을 갖는 적어도 하나의 블록을 식별하고,상기 식별된 블록에 기반하여 지정된 노티 객체와 이미지 보정에 대한 상세 정보를 제공하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 프로세서는,상기 이미지로부터 높은 신뢰도의 블록을 식별하고,식별된 블록에 대한 품질 및 신뢰도를 측정하고, 측정된 품질 및 신뢰도에 따른 블록 별 압축 품질과 상기 이미지의 대표 품질을 비교하고,상기 블록 별 압축 품질 중 상기 대표 품질에 대응하는 압축 품질을 가지면서, 다른 블록과 비교하여 상대적으로 높은 신뢰도를 갖는 블록을 군집화(clustering) 하고,상기 이미지에서 군집화된 블록에 대응하는 부분에 기반하여 상기 지정된 노티 객체를 제공하고,상기 노티 객체와 함께, 상기 이미지 보정에 대한 전체 스코어 및 분류에 대한 설명을 포함하는 상세 정보를 표시하도록 상기 디스플레이 모듈을 제어하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2023-0046913-4-제1항에 있어서, 상기 프로세서는,상기 이미지의 제2 압축 시에, 상기 이미지의 제1 압축 시에 발생된 아티펙트를 제거하고, 이후 제2 압축을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 프로세서는,상기 이미지의 압축을 위한 사용자 입력을 수신하고,상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 제1 압축 시의 제1 압축 품질에 대응하는 노이즈제거 모델에 기반하여, 상기 제1 압축 시 발생한 아티펙트를 제거하고,상기 제1 압축에 관련된 제1 압축 품질에 기반하여 상기 제2 압축을 위한 제2 압축 품질을 결정하고,상기 제2 압축 품질에 기반하여 이미지에 대한 제2 압축을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 프로세서는,상기 제1 압축 품질에 대응하게 상기 제2 압축 품질을 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항에 있어서, 상기 프로세서는,상기 압축 품질 분류를 위한 품질 예측 모듈 및 신뢰도 추정 모듈을 포함하고,상기 품질 예측 모듈을 학습하는 중에, 상기 신뢰도 추정 모듈을 함께 학습하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제2항에 있어서, 상기 프로세서는,인공 지능 알고리즘을 이용하여 학습된 학습 모델을 이용하여, 이미지의 압축 품질을 분류하도록 설정된 전자장치."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "전자 장치의 동작 방법에 있어서, 전자 장치의 디스플레이 모듈을 통해 이미지를 표시하는 동작;상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하는 동작;상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하는 동작;신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대상인 아웃라이어(outlier)에 대응하는 제1블록과 품질 예측이 가능한 제2 블록을 식별하는 동작;상기 복수 개의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하는 동작; 및상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을분류하는 동작을 포함하는 방법.공개특허 10-2023-0046913-5-청구항 16 제15항에 있어서, 상기 압축 품질을 분류하는 동작은,상기 추출된 복수 개의 블록에 대해, 블록 단위의 신뢰도 추정에 기반하여, 지정된 임계 값 이하의 아웃라이어에 대응하는 적어도 하나의 제1 블록을 추정하는 동작, 상기 적어도 하나의 제1 블록을 압축 품질 분류를 위한 평균 연산에서 제외하는 동작,지정된 임계 값 초과의 적어도 하나의 제2 블록에 기반하여 압축 품질 분류를 위한 평균 연산을 수행하는 동작,평균 연산의 결과를 상기 이미지에 대한 압축 품질로 분류하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서, 다양한 압축 품질 별로 미리 학습된 복수의 노이즈 제거 모델을 저장하는 동작,상기 복수의 노이즈 제거 모델 중 상기 이미지에 대해 분류된 압축 품질에 대응하게 학습된 노이즈 제거 모델을선택하는 동작,상기 선택된 노이즈 제거 모델에 기반하여 상기 이미지에 대한 화질 개선을 처리하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서, 상기 이미지의 이미지 품질에 관련된 정보를 요청하는 사용자 입력을 수신하는 동작,상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지에 대한 보정 정보를 상기 이미지에 기반하여 표시하도록 디스플레이 모듈을 제어하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 대표 품질에 대응하는 압축 품질을 갖는 적어도 하나의 블록을 식별하는 동작,상기 이미지에서, 상기 식별된 블록에 대응하는 부분에 기반하여 지정된 노티 객체를 제공하는 동작,상기 노티 객체와 함께, 상기 이미지 보정에 대한 전체 스코어 및 분류에 대한 설명을 포함하는 상세 정보를 표시하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0153020", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제15항에 있어서, 상기 이미지의 압축을 위한 사용자 입력을 수신하는 동작,상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 제1 압축 시 발생된 아티펙트를 제거하는 동작,상기 제1 압축에 관련된 제1 압축 품질에 기반하여 상기 제2 압축을 위한 제2 압축 품질을 결정하는 동작,상기 제2 압축 품질에 기반하여 이미지에 대한 제2 압축을 수행하는 동작을 포함하는 방법.공개특허 10-2023-0046913-6-"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예들은 전자 장치에서 이미지 보정(예: 이미지 화질 개선) 시에 이미지의 압축 품질을 예측하고, 그 에 기반하여 이미지를 처리하는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에 따른 전자 장치는, 디스플 레이 모듈, 메모리, 및 프로세서를 포함하고, 상기 프로세서는, 상기 디스플레이 모듈을 통해 이미지를 표시하고, 상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하고, 상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하고, 신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대상인 아웃 라이어(outlier)에 대응하는 제1 블록과 품질 예측이 가능한 제2 블록을 식별하고, 상기 복수 개의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하고, 및 상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록 을 이용하여, 상기 이미지에 대한 압축 품질을 분류하도록 동작할 수 있다. 다양한 실시예들이 가능하다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 실시예들은 전자 장치에서 이미지 보정(예: 이미지 화질 개선) 시에 이미지의 압축 품질을 예측하고, 그에 기반하여 이미지를 처리하는 방법 및 장치에 관하여 개시한다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "디지털 기술의 발달과 함께 이동통신 단말기, PDA(personal digital assistant), 전자수첩, 스마트 폰(smart phone), 태블릿(tablet) PC(personal computer), 웨어러블 디바이스(wearable device) 및/또는 랩탑(laptop) PC와 같은 다양한 유형의 전자 장치가 널리 사용되고 있다. 이러한, 전자 장치는 기능 지지 및 증대를 위해, 전 자 장치의 하드웨어적인 부분 및/또는 소프트웨어적인 부분이 지속적으로 개발되고 있다. 전자 장치는 기능이 다양화됨에 따라, 예를 들어, 사진이나 동영상의 촬영, 음악이나 동영상 파일의 재생, 게임, 방송 수신, 또는 통화(call) 기능과 같은 복합적인 기능들을 갖춘 멀티미디어 기기(multimedia device) 형태로 구현되고 있다. 이러한 전자 장치는 디스플레이(display)를 구비하며, 디스플레이에 기반하여 기능들에 관련된 화면을 표시할 수 있다. 전자 장치는, 전자 장치에 저장된 이미지 또는 외부 장치(예: 서버 및/또는 다른 전자 장치)로부터 획득된 이미 지를 디스플레이를 통해 표시할 수 있다. 최근에는, 전자 장치는 디스플레이의 해상도 증가 및/또는 물리적인 크기(예: 디스플레이의 화면 크기)의 증가에 따라, 전자 장치에서도 고화질의 이미지가 요구되고 있고, 그에 따 른 이미지의 품질 향상에 대한 필요가 제기되고 있다. 예를 들면, 전자 장치 또는 외부 장치에 의해 제공되는 이미지에 대한 이미지 품질(image quality)의 중요도 증가하고 있다. 한편, 외부 장치에서 제공하는 이미지는 압축되어 전송될 수 있다. 예를 들면, 이미지는 클라우드 환경의 스토 리지를 절약하고 이미지 전송의 지연을 최소화하기 위해서, 일정 압축 품질(또는 압축률)로 압축되어 제공될 수 있다. 이러한 경우, 원본 영상의 압축 방법 정보(예: 해상도 정보) 및 압축 품질 정보(예: 압축 비트레이트 정 보)가 소실되어, 영상 표시 장치에서, 원본 영상의 압축 방법 정보 및 압축 품질 정보와 관련된 영상의 품질 판 단이 어려워져, 원본 영상에 알맞은 화질 세팅을 하는 것이 어려워졌으며, 특히, 영상 표시 장치 내의 화질 알 고리즘의 최대 성능을 구현하는 것이 어려워졌다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "이미지 압축은, 예를 들면, 이미지에 압축 아티팩트(compression artifact)가 발생할 수 있다. 예를 들면, 이미 지 압축에서는 적어도 하나의 아티팩트(예: ringing artifacts(또는 mosquito artifacts), blocking artifacts, blur artifacts, color distortion, 및/또는 texture deviation)가 발생할 수 있다. 일반적으로, 압축 아티팩트는 이미지의 압축 품질(또는 압축률)이 높을수록 보다 많이 발생할 수 있다. 따라서, 외부 장치 (예: 컨텐츠 서버 또는 다른 외부 장치와 같은 서비스 제공자)에서는, 이미지를 전자 장치로 제공할 때, 이미지 크기를 최대한 압축하면서도 사용자 눈에는 아티팩트가 최소한으로 보일 수 있도록 하는 이슈가 제기될 수 있다. 또한, 최근에는 전자 장치가 대화면의 디스플레이를 지원함에 따라, 기존의 작은 화면에 최적화되어 아티 팩트가 숨겨진 이미지가, 큰 화면에서 확대 제공됨에 따라 사용자에 의해 쉽게 노출될 수 있다. 예를 들면, 작 은 화면에서 식별되지 않던 아티팩트가 큰 화면에서 확대되어 사용자에 의해 식별될 수 있고, 사용자에게 이미 지 품질의 저하로 인식될 수 있다. 다양한 실시예들에서는, 전자 장치에서 이미지 화질 개선(예: 이미지 보정) 시에 이미지의 압축 품질을 판단하 는 동작에서, 이미지의 압축 품질을 정확하고 빠르게 예측할 수 있는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 주어진 이미지에 대해 압축 품질 판단 시에 블록 단위의 신뢰도 (confidence) 추정에 기반하여 이미지의 압축 품질을 예측할 수 있는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 주어진 이미지에 대해 블록 단위 신뢰도 추정 시에, 이미지로부터 압축 품질 예측이 어려운 영역(예: 품질 예측 제외 대상 영역)인 아웃라이어(outlier)를 제거하고, 이미지에서 압축 품질 예측을 가능하게 하는 영역에 기반하여 압축 품질을 정확하고 빠르게 예측할 수 있는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 이미지의 화질 개선을 위하여, 주어진 이미지의 압축 품질을 판단하고, 압축 품질에 대응하게 학습된 노이즈 제거 모델에 기반하여 이미지를 보정할 수 있는 방법 및 장치에 관하여 개 시한다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시예에 따른 전자 장치는, 디스플레이 모듈, 메모리, 및 상기 디스플레이 모듈 및 상기 메모리 와 작동적으로 연결된 프로세서를 포함하고, 상기 프로세서는, 상기 디스플레이 모듈을 통해 이미지를 표시하고, 상기 이미지에서 지정된 복수 개의 블록을 지정된 방식(예: 균등 방식 또는 랜덤 방식)으로 추출하고, 상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하고, 신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대상인 아웃라이어(outlier)에 대응하는 제1 블록과 품질 예측이 가능한 제2 블록 을 식별하고, 상기 복수 개의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하고, 및 상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을 분류하도록 동작할 수 있다. 본 개시의 일 실시예에 따른 전자 장치의 동작 방법은, 전자 장치의 디스플레이 모듈을 통해 이미지를 표시하는 동작, 상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하는 동작, 상기 복수 개의 블록에 대하 여 각 블록 별로 신뢰도를 추정하는 동작, 신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측이 불가 능한 아웃라이어(outlier)에 대응하는 제1 블록과 품질 예측이 가능한 제2 블록을 식별하는 동작, 상기 복수 개 의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하는 동작, 및 상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을 분류하는 동작을 포함할 수 있다. 상기와 같은 과제를 해결하기 위하여 본 개시의 다양한 실시예들에서는, 상기 방법을 프로세서에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 판독 가능한 기록 매체를 포함할 수 있다. 본 개시의 적용 가능성의 추가적인 범위는 이하의 상세한 설명으로부터 명백해질 것이다. 그러나 본 개시의 사 상 및 범위 내에서 다양한 변경 및 수정은 당업자에게 명확하게 이해될 수 있으므로, 상세한 설명 및 본 개시의 바람직한 실시예와 같은 특정 실시예는 단지 예시로 주어진 것으로 이해되어야 한다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 따른 전자 장치 및 그의 동작 방법에 따르면, 전자 장치에서 이미지를 분석할 때, 이미지의 전체 영 역이 아닌 일부 영역에 대해, 심층 신경망(DNN, deep neural network)을 이용하여 압축 품질 분석을 수행함에 따라, 이미지의 압축 품질 연산을 정확하고 신속하게 처리할 수 있다. 다양한 실시예들에 따르면, 전자 장치에 서 이미지 화질 개선(예: 이미지 보정)을 위해 이미지의 압축 품질을 판단(또는 분석) 시에, 블록 단위의 신뢰 도(confidence) 추정에 기반하여 이미지의 압축 품질을 정확하고 빠르게 예측하도록 할 수 있다. 다양한 실시예 들에 따르면, 전자 장치에서 주어진 이미지에 대해 블록 단위 신뢰도 추정에 기반하여, 이미지로부터 아웃라이 어(outlier)를 제거하고, 이미지에서 압축 품질 예측을 가능하게 하는 영역에 기반하여 압축 품질을 분석함으로 써, 보다 정확하게 압축 품질을 분석할 수 있다. 다양한 실시예들에 따르면, 전자 장치에서 주어진 이미지에 대해 압축 품질을 정확하게 판단할 수 있고, 판단된 압축 품질에 대응하게 학습된 노이즈 제거 모델에 기반하여 이미지의 압축 아티팩트(또는 압축 노이즈)를 제거 할 수 있다. 이에 따라, 전자 장치는 압축 이미지의 품질을 높여 원본 품질에 가까운 이미지를 사용자에게 제공 할 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일 실시예에 따르면, 전자 장치(10 1)는 서버를 통하여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서 , 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서 는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈 , 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 (CPU, central processing unit) 또는 어플리케이션 프로세서(AP, application processor)) 또는 이와는 독립 적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치(GPU, graphic processing unit), 신 경망 처리 장치(NPU, neural processing unit), 이미지 시그널 프로세서(ISP, image signal processor), 센서 허브 프로세서(sensor hub processor), 또는 커뮤니케이션 프로세서(CP, communication processor))를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서를 포함하는 경우, 보조 프로 세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프 로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(inactive)(예: 슬립(sleep)) 상태에 있는 동 안 메인 프로세서를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동 안 메인 프로세서와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈 , 센서 모듈, 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알 고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경 망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포 함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제(OS, operating system), 미들 웨어(middleware) 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD(secure digital) 카드 인터페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다.전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN(wide area network))와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거 나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식 별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB, enhanced mobile broadband), 단말 전력 최소화와 다수 단말의 접속(mMTC, massive machine type communications), 또는 고신뢰도와 저지연(URLLC, ultra-reliable and low-latency communications)을 지원할 수 있다. 무선 통신 모 듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무 선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거 대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO, full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테 나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테나 들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예들에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC, mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱(heuristic)하게 실행되거 나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는 일 실시예에 따른 전자 장치의 구성을 개략적으로 도시하는 도면이다. 도 2를 참조하면, 일 실시예에 따른 전자 장치는 통신 모듈, 디스플레이 모듈, 메모리 및 프로세서를 포함할 수 있다. 일 실시예에서, 프로세서는 이미지 처리 모듈, 샘플 패치 추출 모 듈, 압축 품질 분류 모듈, 노이즈 제거 모델, 모델 선택 모듈, 및/또는 스코어 산출 모듈 중 적어도 하나를 포함할 수 있다. 통신 모듈은 레거시 네트워크(예: 3G 네트워크 및/또는 4G 네트워크), 5G 네트워크, OOB(out of band) 및 /또는 차세대 통신 기술(예: NR(new radio) 기술)을 지원할 수 있다. 일 실시예에 따르면, 통신 모듈은 도 1에 예시한 바와 같은 무선 통신 모듈에 대응할 수 있다. 일 실시예에 따르면, 전자 장치는 통신 모 듈을 이용하여 네트워크를 통해 외부 장치(예: 도 1의 서버 및/또는 다른 전자 장치(102, 104))와 통 신을 수행할 수 있다. 일 실시예에 따르면, 전자 장치는 통신 모듈을 통해 외부 장치로부터 이미지 및/또는 이미지를 포함하는 컨텐츠(예: 웹 페이지)를 수신할 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 다양한 정보를 시각적으로 제공할 수 있다. 일 실시예에 따라, 디스플레이 모듈은 터치 감지 회로(또는 터치 센서)(미도시), 터치의 세기를 측정할 수 있 는 압력 센서 및/또는 자기장 방식의 스타일러스 펜을 검출하는 터치 패널(예: 디지타이저)을 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치 감지 회로, 압력 센서 및/또는 터치 패널에 기반하여 디스플 레이 모듈의 특정 위치에 대한 신호(예: 전압, 광량, 저항, 전자기 신호 및/또는 전하량)의 변화를 측정함 으로써 터치 입력 및/또는 호버링 입력(또는 근접 입력)을 감지할 수 있다. 일 실시예에 따르면, 디스플레이 모 듈은 액정 표시 장치(LCD, liquid crystal display), OLED(organic light emitted diode), AMOLED(active matrix organic light emitted diode)로 구성될 수 있다. 어떤 실시예에 따르면, 디스플레이 모 듈은 플렉서블 디스플레이(flexible display)로 구성될 수 있다. 디스플레이 모듈은 프로세서의 제어 하에, 이미지 및/또는 이미지를 포함하는 컨텐츠를 시각적으로 제공할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 표시된 적어도 하나의 이미지에 대응하는 이미지 처리(image processing)(예: 이미지 보정)와 관련된 다양한 정보(예: 사용자 인터페이스)를 제공할 수 있다. 메모리는 전자 장치에 의해 사용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 어플리 케이션(예: 도 1의 프로그램), 및 이와 관련된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있 다. 일 실시예에 따라, 메모리는 실행 시에, 프로세서가 동작하도록 하는 인스트럭션들 (instructions)을 저장할 수 있다. 예를 들면, 어플리케이션은 메모리 상에 소프트웨어(예: 도 1의 프로그 램)로서 저장될 수 있고, 프로세서에 의해 실행 가능할 수 있다. 일 실시예에 따라, 어플리케이션은 전자 장치에서 이미지를 제공할 수 있는 다양한 어플리케이션(예: 갤러리 어플리케이션, 이미지 편집 어플 리케이션)일 수 있다. 일 실시예에 따르면, 메모리는 프로세서에 의하여 수행될 수 있는, 블록 단위 신뢰도(confidence) 추 정 기반 압축 품질(compression quality) 예측 및 압축 품질 별 이미지 보정을 처리하는 기능(또는 동작)과 관련된 적어도 하나의 구성 요소(또는 모듈)를 저장할 수 있다. 예를 들면, 메모리는 프로세서의 이미 지 처리 모듈, 샘플 패치 추출 모듈, 압축 품질 분류 모듈, 노이즈 제거 모델, 모델 선택 모듈, 및/또는 스코어 산출 모듈 중 적어도 일부를 소프트웨어 형태(또는 인스트럭션 형태)로 포함할 수 있다. 프로세서는 전자 장치에서 블록 단위 신뢰도 추정(confidence estimation) 기반 압축 품질 예측 (compression quality prediction) 및 압축 품질 별 이미지 보정을 처리하기 위한 관련된 동작을 제어할 수 있 다. 일 실시예에 따르면, 프로세서는 전자 장치의 메모리에 저장된 이미지 및/또는 외부 장치로 부터 수신된 이미지에 관련된 압축 품질을 블록 단위의 신뢰도 추정에 기반하여 판단하고, 판단된 압축 품질에 기반하여 이미지 보정을 처리하는 것과 관련된 동작을 제어할 수 있다. 일 실시예에서, 프로세서는 이미지 화질 개선(예: 이미지 보정)을 위해 이미지의 압축 품질을 판단(또는 분석) 시에, 블록 단위의 신뢰도 추정에 기반하여 이미지의 압축 품질을 예측할 수 있다. 일 실시예에서, 프로 세서는 주어진 이미지에 대해 블록 단위 신뢰도 추정에 기반하여, 이미지로부터 아웃라이어(outlier)를 제 거하고, 이미지에서 압축 품질 예측을 가능하게 하는 영역, 예를 들면, 이미지의 전체 영역이 아닌 일부 영역에 기반하여 압축 품질을 분석함으로써, 압축 품질의 분류 속도를 향상하도록 동작할 수 있다. 여기서, 아웃라이어 는 신뢰도 추정을 제대로 수행할 수 없는(또는 압축 품질 예측이 어려운 또는 불가능한) 특이 블록으로, 예를 들면, 품질 예측에서 제외되는 대상 영역을 나타낼 수 있다. 일 실시예에 따르면, 프로세서는 디스플레이 모듈을 통해 적어도 하나의 이미지를 포함하는 화면을 표시하도록 디스플레이 모듈을 제어할 수 있다. 일 실시예에 따르면, 프로세서는 이미지를 표시할 때, 또는 이미지를 표시하는 동안 주어진 이미지의 압축 품질(예: 압축률)을 예측(또는 분류)할 수 있다. 일 실 시예에 따르면, 프로세서는 메모리에 저장된 다양한 압축 품질 별로 학습된(또는 모델링된) 다양한 노이즈 제거 모델(또는 디노이징 모델(denoising model), 디노이저(denoiser) 또는 아티팩트 제거기 (artifact reducer)) 중, 주어진 이미지에 대해 예측된 압축 품질에 대응하게 학습된 노이즈 제거 모델을 선택할 수 있다. 일 실시예에 따르면, 프로세서는 선택된 노이즈 제거 모델에 기반하여 이미지 보정 을 처리(예: 압축 이미지에서 압축 아티팩트를 제거하여 원본 품질의 이미지로 복구)하고, 보정된 이미지를 지 정된 동작에 따라 처리할 수 있다. 예를 들면, 프로세서는 보정된 이미지를 디스플레이 모듈을 통해 표시하거나, 메모리에 저장하거나, 또는 외부(예: 서버 또는 다른 전자 장치)로 전송하도록 동작할 수 있 다. 일 실시예에 따르면, 프로세서는 블록 단위 신뢰도 추정 기반 압축 품질 예측 및 압축 품질 별 이미지 보 정을 처리하기 적어도 하나의 구성 요소(또는 모듈)를 포함할 수 있다. 예를 들면, 프로세서는 이미지 처 리 모듈, 샘플 패치 추출 모듈, 압축 품질 분류 모듈, 노이즈 제거 모델, 모델 선택 모듈 , 및/또는 스코어 산출 모듈 중 적어도 하나를 포함할 수 있다. 일 실시예에 따라, 이미지 처리 모듈 , 샘플 패치 추출 모듈, 압축 품질 분류 모듈, 노이즈 제거 모델, 모델 선택 모듈, 및/또는 스코어 산출 모듈 중 적어도 일부는 하드웨어 모듈(예: 회로(circuitry))로 프로세서에 포함 되거나, 및/또는 프로세서에 의해 실행될 수 있는 하나 이상의 인스트럭션들을 포함하는 소프트웨어로서 구현될 수 있다. 예를 들면, 프로세서에서 수행하는 동작들은, 메모리에 저장되고, 실행 시에, 프로 세서가 동작하도록 하는 인스트럭션들에 의해 실행될 수 있다. 이미지 처리 모듈은, 이미지 인코더(image encoder) 및 이미지 디코더(image decoder)를 포함할 수 있다. 일 실시예에 따르면, 이미지 처리 모듈은, 이미지 인코더를 통해, 이미지에 대한 인코딩(encoding)을 처리 할 수 있다. 예를 들면, 이미지 처리 모듈은, 이미지 인코더를 이용하여, 이미지 인코딩을 통해 이미지를 지정된 압축률(또는 압축 레벨) 및 지정된 포맷(예: mpeg, jpeg, gif, 및/또는 png)의 파일로 압축할 수 있다. 일 실시예에 따르면, 이미지 처리 모듈은, 이미지 디코더를 통해, 지정된 인코딩으로 압축된 이미지에 대 한 디코딩(decoding)을 처리할 수 있다. 예를 들면, 이미지 처리 모듈은, 이미지 디코더를 이용하여, 인코 딩으로 압축된 이미지 파일의 압축을 해제하여, 이미지를 복구(또는 복원)할 수 있다. 샘플 패치 추출 모듈(예: sample patch extractor)은, 이미지의 압축 품질을 구분하기 위해서 일정 개수 (예: M개)의 패치(예: 16x16 patch)를 추출하는 모듈을 나타낼 수 있다. 일 실시예에 따르면, 샘플 패치 추출 모듈은, 주어진 이미지로부터 M개(예: 약 256개)의 샘플(samples)(예: 약 256개의 16x16 패치)를 지정된 방식으로 추출하고, 프로세서(예: 압축 품질 분류 모듈)가 추출된 256개의 16x16 패치 중 적어도 일 부에 대해서 압축 품질 분류(예: 품질 예측 및 신뢰도 추정) 및 통합을 수행하여 이미지에 대한 최종 품질(Q)을판단하도록 동작할 수 있다. 일 실시예에 따르면, 샘플 패치 추출 모듈은 패치를 추출할 때, 지정된 방식 (예: 균등 방식 또는 랜덤 방식)에 따라 복수 개의 패치를 균등하게 또는 랜덤하게 추출할 수 있다. 예를 들면, 프로세서는 주어진 이미지에서, 전체 영역이 아닌 일부 영역(예: 패치 단위)을 통해 분석을 수행할 수 있 다. 예를 들면, 프로세서는 이미지에서 전체 영역이 아닌 지정된 관심 영역(ROI, region of interest)에 기반하여 분석을 수행할 수 있다. 어떤 실시예에 따르면, 샘플 패치 추출 모듈은, 주어진 이미지로부터, 패치 단위로 복수 개의 영역들을 추 출(예: 균등 추출 또는 랜덤 추출)할 수 있다. 일 실시예에서, 패치는 이미지의 압축 품질을 이해할 수 있는 최 소한의 이미지 단위를 의미할 수 있다. 예를 들어, 이미지를 압축하는 압축 방법이 8x8 블록 단위로 이미지를 분할하여 압축하는 경우, 패치는 8x8 블록뿐만 아니라, 8x8 블록의 주변 관계를 포함할 수 있는 좀 더 큰 영역 의 10x10 블록을 패치로 설정할 수 있다. 일 실시예에 따르면, 패치는 8x8 블록의 주변 블록의 중심까지 포함할 수 있도록 주변 블록의 약 4 픽셀(pixel)을 추가하여 16x16 크기의 영역을 패치의 크기로 정의할 수 있다. 압축 품질 분류 모듈(예: compression quality classifier)은, 일정 단계(예: N 단계)(예: 13 단계, 16 단계, 50 단계, 또는 100 단계)로 압축 품질(compression quality)을 구분하는 모듈을 나타낼 수 있다. 예를 들 면, 압축 품질 분류 모듈은 이미지에 관련된 N개의 압축 품질(또는 압축률 또는 압축 레벨)에 대응하여 N 개의 압축 품질을 분류할 수 있다. 일 실시예에 따르면, 압축 품질 분류 모듈은 서비스 또는 어플리케이션 에 기반하여 다양한 단계(예: 13 단계, 16 단계, 50 단계, 또는 100 단계)로 설정 가능할 수 있다. 예를 들면, 압축 품질 분류 모듈은 제1 어플리케이션(예: 이미지 편집 어플리케이션)은 X 단계(예: 16 단계)로 설정할 수 있고, 제2 어플리케이션(예: 갤러리 어플리케이션)은 Y 단계(예: 100 단계)로 설정할 수 있다. 예를 들면, 압축 품질 분류 모듈은 이미지 인코더의 품질(quality) 옵션을 N개의 클래스로 다양하게 설정하여, N개의 품질의 압축 이미지를 준비할 수 있다. 일 예로, JPEG 포맷의 인코딩이 구현된 라이브러리 어플리케이션은 인코 딩 품질(encoding quality)을, 예를 들면, 1에서 100까지의 100개의 압축 단계를 제공할 수 있고, 이미지 편집 어플리케이션은 인코딩 품질을, 예를 들면, 1에서 13까지의 13개의 압축 단계를 제공할 수 있다. 일 실시예에 따르면, 압축 품질 분류 모듈의 입력은, 예를 들면, 16x16 패치의 크기를 갖는 이미지일 수 있다. 일 실시 예에 따라, 압축 품질 분류 모듈의 압축 품질 분류 동작과 관련하여 후술하는 도면들을 참조하여 설명된다. 일 실시예에 따르면, 압축 품질 분류 모듈은 샘플 패치 추출 모듈에 의해 추출된 패치에 대한 신뢰도 추정에 기반하여 주어진 이미지에 대한 압축 품질을 예측할 수 있다. 예를 들면, 압축 품질 분류 모듈은 주어진 이미지에서 블록 단위(예: 패치 단위)로 신뢰도를 추정하도록 동작 가능한 신뢰도 추정 모듈(예: confidence estimator)과 주어진 이미지에서 압축 품질을 예측하도록 동작 가능한 품질 예측 모듈(예: quality predictor)과 을 포함할 수 있다. 신뢰도 추정 모듈은 입력 패치(예: 샘플 패치 추출 모듈에 의해 추출된 패치)의 신뢰도를 추정할 수 있다. 일 실시예에 따르면, 신뢰도 추정 모듈은 이미지에서 전체 영역이 아닌 특정 관심 영역(ROI)에 기반 하여 신뢰도를 추정할 수 있다. 예를 들면, 신뢰도 추정 모듈은 이미지에서 추정하고자 하는 범위를 지정 하여 신뢰도를 추정할 수 있다. 일 실시예에 따르면, 신뢰도 추정 모듈은 이미지로부터 추출된 복수 개(예: 지정된 M개)의 패치들에 대한 신뢰도 추정을 수행할 수 있다. 일 실시예에서, 신뢰도 추정 모듈은 다양한 신뢰도 추정 방식을 기반으로, 추출된 패치들의 신뢰도를 추정하여, 신뢰도가 지정된 임계 값 이하인 아 웃라이어에 대응하는 적어도 하나의 패치(예: K개의 패치)를 추정할 수 있다. 일 실시예에 따르면, 신뢰도 추정 모듈은 품질 예측 모듈을 학습하는 중에, 동시에 입력 패치에 대한 품질 예측 성능을 계속 측정하여, 품질 예측 모듈이 특정 타입의 입력 패치에 품질 측정 성능이 떨어지는 현상을 통계적으로 파악할 수 있도 록, 품질 예측 모듈과 함께 학습할 수 있다. 품질 예측 모듈은 입력 패치에 대한 품질을 측정할 수 있다. 일 실시예에 따르면, 품질 예측 모듈은 이미지로부터 추출된 복수 개(예: 지정된 M개)의 패치들 중, 신뢰도 추정 모듈에 기반하여 추정된 아웃라 이어에 대응하는 패치(예: K개의 패치)를 품질 예측 대상에서 제외하고, 입력 패치 중 아웃라이어의 패치를 제 외한 나머지 패치(예: 압축 품질 예측을 가능하게 하는 영역)를 이용하여 압축 품질을 판단할 수 있다. 일 실시 예에 따르면, 품질 예측 모듈은 신뢰도가 지정된 임계 값 이하인 아웃라이어에 대응하는 적어도 하나의 패 치(예: K개의 패치)에 대해, 패치 별 압축 품질의 평균 연산에서 제외하고, 신뢰도가 지정된 임계 값 초과인 나 머지 패치(예: (M-K)개의 패치)에 기반하여 압축 품질을 분석(예: 나머지 패치 별 압축 품질의 평균을 연산)하 여, 압축 품질(예: 이미지에 대한 최종 품질(Q))를 분류(또는 결정)할 수 있다. 예를 들면, 품질 예측 모듈은 이미지에서 아웃라이어를 제거하고, 유의미한 압축 품질 예측을 가능하게 하 는 영상 패치에서 획득하는 예측 결과만을 종합하여 이미지의 품질을 보다 정확하고 신속하게 예측할 수 있다. 일 실시예에 따르면, 품질 예측 모듈은 만약 추출된 복수 개(예: 지정된 M개)의 패치가 모두 아웃라이어라 고 판단하는 경우, 다른 영역에서 복수 개(예: 지정된 M개)의 패치를 다시 추출하는 방식으로, 적응적으로 품질 을 예측하도록 동작할 수도 있다. 노이즈 제거 모델은, 디노이징 모델, 디노이저 또는 아티팩트 제거기를 포함할 수 있다. 일 실시예에 따라, 노이즈 제거 모델은, 예를 들면, 이미지 처리 모듈(예: 이미지 디코더)의 후처리(post- processing) 필터(filter)로 사용될 모델을 나타낼 수 있다. 일 실시예에 따르면, 노이즈 제거 모델은, 이 미지에 관련된 다양한 압축 품질(또는 압축률 또는 압축 레벨) 별로 복수 개(예: n개, n은 2 이상의 자연수)를 포함할 수 있다. 일 실시예에 따르면, 노이즈 제거 모델은 전자 장치에서 다양한 압축 품질에 대응하 는 다양한 압축 이미지를 이용하여, 다양한 압축 품질에 각각 대응하는 복수 개의 노이즈 제거 모델이 학 습되어, 메모리에 저장될 수 있다. 모델 선택 모듈은, 적어도 하나의 지정된 조건(criteria)에 기반하여, 주어진 이미지의 이미지 보정(예: 압축 품질에 기반한 압축 아티팩트 제거)에 적용하기 최적의 노이즈 제거 모델을 선택할 수 있다. 일 실시 예에 따르면, 모델 선택 모듈은 노이즈 제거 모델 선택 시에, 신뢰도 추정 기반 압축 품질에 대응하 게 학습된 노이즈 제거 모델을 선택할 수 있다. 어떤 실시예에 따르면, 모델 선택 모듈은 노이즈 제 거 모델 선택 시에, 압축 품질에 더하여, 사용자 의도(또는 선호도 또는 취향), 이미지를 제공하는 서비스 또는 어플리케이션의 종류 및/또는 실제 이미지가 표시될 디스플레이 모듈의 물리적 크기(예: 디스플레이 모듈의 화면 크기) 중 적어도 하나를 고려하여, 다른 보정 강도 적용(또는 설정)을 위한 노이즈 제거 모델 을 선택할 수도 있다. 스코어 산출 모듈은 입력 패치의 추론 결과들을 신뢰도 기반으로 평균(mean) 또는 중간(median) 값을 계산 하여 하나의 출력(예: 숫자)을 생성할 수 있다. 일 실시예에 따르면, 스코어 산출 모듈은 이미지의 압축 품질(예: 최종 품질(Q))에 대한 품질 정보(예: 숫자)를 출력하도록 학습할 수 있다. 일 실시예에 따르면, 스코 어 산출 모듈은 미리 정의된 스코어 산출 기준이나 범위(예: 평균 또는 중간 값)에 기반하여 압축 품질에 대한 품질 정보를 학습할 수 있다. 본 개시에서 설명되는 다양한 실시예들은 소프트웨어(software), 하드웨어(hardware) 또는 이들의 조합된 것을 이용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 하드웨어 적인 구현에 의하면, 다양한 실시예들에서 설명되는 동작들은 ASICs(Application Specific Integrated Circuits), DSPs(digital signal processors), DSPDs(digital signal processing devices), PLDs(programmable logic devices), FPGAs(field programmable gate arrays), 프로세서(processors), 제어기 (controllers), 마이크로 컨트롤러(micro-controllers), 마이크로프로세서(microprocessors), 및/또는 기타 기 능 수행을 위한 전기적인 유닛(unit) 중 적어도 하나를 이용하여 구현될 수 있다. 다양한 실시예들에서, 기록 매체는 디스플레이 모듈을 통해 이미지를 포함하는 화면을 표시하는 동작, 이 미지의 압축 품질을 결정하는 동작, 결정된 압축 품질에 대응하게 학습된 노이즈 제거 모델을 선택하는 동작, 선택된 노이즈 제거 모델에 기반하여 이미지 보정을 처리하는 동작, 및 보정된 이미지를 지정된 동작(예: 표시, 저장 및/또는 전송 동작)에 따라 처리하는 동작을 실행시키기 위한 프로그램을 기록한 컴퓨터로 판독 가능한 기 록 매체를 포함할 수 있다. 본 개시의 일 실시예에 따른 전자 장치는 디스플레이 모듈(예: 도 1 또는 도 2의 디스플레이 모듈), 메모리(예: 도 1 또는 도 2의 메모리), 및 상기 디스플레이 모듈 및 상기 메모리와 작동적으로 연결된 프 로세서(예: 도 1 또는 도 2의 프로세서)를 포함하고, 상기 프로세서는, 상기 디스플레이 모듈을 통해 이미 지를 표시하고, 상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하고, 상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하고, 신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대 상인 아웃라이어(outlier)에 대응하는 제1 블록과 품질 예측이 가능한 제2 블록을 식별하고, 상기 복수 개의 블 록 중 상기 제1 블록을 품질 예측 대상에서 제외하고, 및 상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머 지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을 분류하도록 동작할 수 있다. 일 실시예에 따르면, 상기 이미지는, 지정된 압축 품질로 압축된 압축 이미지일 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 추출된 복수 개의 블록에 대해, 블록 단위의 신뢰도 추정에 기반하 여, 지정된 임계 값 이하의 아웃라이어에 대응하는 적어도 하나의 제1 블록을 추정하고, 상기 적어도 하나의 제 1 블록을 압축 품질 분류를 위한 평균 연산에서 제외하고, 지정된 임계 값 초과의 적어도 하나의 제2 블록에 기 반하여 압축 품질 분류를 위한 평균 연산을 수행하고, 평균 연산의 결과를 상기 이미지에 대한 압축 품질로 분 류하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이미지에 대해 분류된 압축 품질에 대응하게 학습된 노이즈 제거 모델을 선택하고, 상기 선택된 노이즈 제거 모델에 기반하여 상기 이미지에 대한 화질 개선을 처리하고, 개선된 이미지를 지정된 동작에 기반하여 처리하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 다양한 압축 품질 별로 미리 학습된 복수의 노이즈 제거 모델을 상기 메 모리에 저장하고, 상기 복수의 노이즈 제거 모델 중 상기 이미지의 압축 품질의 분류에 대응하게 학습된 노이즈 제거 모델을 선택하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 개선된 이미지를, 상기 디스플레이 모듈을 통한 표시, 상기 메모리에 저 장 또는 외부로 전송 중 적어도 하나의 지정된 동작으로 처리하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이미지의 이미지 품질에 관련된 정보를 요청하는 사용자 입력을 수 신하고, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지에 대한 보정 정보를 상기 이미지에 기반하여 표시하도록 상기 디스플레이 모듈을 제어하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 대표 품질 에 대응하는 압축 품질을 갖는 적어도 하나의 블록을 식별하고, 상기 식별된 블록에 기반하여 지정된 노티 객체 와 이미지 보정에 대한 상세 정보를 제공하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이미지로부터 높은 신뢰도의 블록을 식별하고, 식별된 블록에 대한 품질 및 신뢰도를 측정하고, 측정된 품질 및 신뢰도에 따른 블록 별 압축 품질과 상기 이미지의 대표 품질을 비 교하고, 상기 블록 별 압축 품질 중 상기 대표 품질에 대응하는 압축 품질을 가지면서, 다른 블록과 비교하여 상대적으로 높은 신뢰도를 갖는 블록을 군집화(clustering) 하고, 상기 이미지에서 군집화된 블록에 대응하는 부분에 기반하여 상기 지정된 노티 객체를 제공하고, 상기 노티 객체와 함께, 상기 이미지 보정에 대한 전체 스 코어 및 분류에 대한 설명을 포함하는 상세 정보를 표시하도록 상기 디스플레이 모듈을 제어하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이미지의 제2 압축 시에, 상기 이미지의 제1 압축 시에 발생된 아 티펙트를 제거하고, 이후 제2 압축을 수행하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이미지의 압축을 위한 사용자 입력을 수신하고, 상기 사용자 입력 을 수신하는 것에 기반하여, 상기 이미지의 제1 압축 시의 제1 압축 품질에 대응하는 노이즈 제거 모델에 기반 하여, 상기 제1 압축 시 발생한 아티펙트를 제거하고, 상기 제1 압축에 관련된 제1 압축 품질에 기반하여 상기 제2 압축을 위한 제2 압축 품질을 결정하고, 상기 제2 압축 품질에 기반하여 이미지에 대한 제2 압축을 수행하 도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 제1 압축 품질에 대응하게 상기 제2 압축 품질을 결정하도록 동작 할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 압축 품질 분류를 위한 품질 예측 모듈 및 신뢰도 추정 모듈을 포 함하고, 상기 품질 예측 모듈을 학습하는 중에, 상기 신뢰도 추정 모듈을 함께 학습하도록 동작할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 인공 지능 알고리즘을 이용하여 학습된 학습 모델(learning model 또는 trained model)을 이용하여, 이미지의 압축 품질을 분류하도록 동작할 수 있다. 이하에서는 다양한 실시예들의 전자 장치의 동작 방법에 대해서 상세하게 설명한다. 일 실시예에 따라, 이 하에서 설명하는 전자 장치에서 수행하는 동작들은, 전자 장치의 다양한 프로세싱 회로(various processing circuitry) 및/또는 실행 가능한 프로그램 요소(executable program elements)를 포함하는 프로세 서에 의해 실행될 수 있다. 일 실시예에 따라, 전자 장치에서 수행하는 동작들은, 메모리에 저 장되고, 실행 시에, 프로세서가 동작하도록 하는 인스트럭션들에 의해 실행될 수 있다. 도 3은 일 실시예에 따른 전자 장치에서 이미지 보정을 위한 학습, 분류 및 제거 동작의 예를 도시하는 흐름도 이다.도 3을 참조하면, 동작 301에서, 전자 장치의 프로세서는 복수 개 클래스(class)의 압축 품질로 구성 된 데이터세트(dataset)를 생성할 수 있다. 일 실시예에 따르면, 프로세서는 N개 클래스의 압축 품질로 구 성된 데이터세트를 생성할 수 있다. 예를 들면, 전자 장치에서 머신 러닝(machine learning) 모델을 만들 기 위해서, 이미지의 데이터세트가 필요할 수 있다. 일 실시예에서, 이미지의 데이터세트는, 예를 들면, 도 2의 이미지 처리 모듈(예: 이미지 인코더)을 사용하여 준비할 수 있다. 예를 들면, 프로세서는 이미지 인 코더의 품질(quality) 옵션을 N개의 클래스로 다양하게 설정하여, N개의 품질의 압축 이미지를 준비할 수 있다. 일 예로, JPEG 포맷의 인코딩이 구현된 라이브러리 어플리케이션은 인코딩 품질(encoding quality)을, 예를 들 면, 1에서 100까지의 100개의 압축 단계를 제공할 수 있고, 이미지 편집 어플리케이션은 인코딩 품질을, 예를 들면, 1에서 13까지의 13개의 압축 단계를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 데이터세트에 기반하여, 예를 들면, 도 2의 압축 품질 분류 모듈(예: 신뢰도 추정 모듈 및 품질 예측 모듈)을 학습할 수 있다. 일 실시예에 따르면, 프로세 서는 다양한 품질로 압축된 이미지를 “입력 X”로 하고, 각 압축 이미지를 생성할 때 사용한 품질을 “ Ground Truth 출력 Y”(예: 라벨(label) 또는 표지)로 설정할 수 있다. 일 실시예에 따르면, 프로세서는 품질 예측 모듈을 학습하는 도중에, 동시에 입력 패치에 대한 품질 예측 성능을 계속 측정하여 해당 품질 예측 모듈이 특정 타입의 입력 패치에 품질 측정 성능이 떨어지는 현상을 통계적으로 파악할 수 있는 신뢰 도 추정 모듈도 함께 학습하도록 동작할 수 있다. 예를 들면, 프로세서는 학습 데이터에서 해당 압축 품질을 분류하는 방법을 학습할 뿐만 아니라, 대응하는 신뢰도를 추정하는 방법까지 학습할 수 있다. 이를 기반 으로, 프로세서는 특정 이미지가 주어졌을 때, 해당 압축 품질에 맞는 신뢰도 추정을 적용할 수 있다. 일 실시예에 따르면, 프로세서는, 예를 들면, 도 2의 노이즈 제거 모델(예: artifact reducer)을 학 습할 수 있다. 일 실시예에 따르면, 프로세서는 다양한 품질로 압축된 이미지를 “입력 X”로 하고, 원본 이미지를 “Ground Truth 출력 Y”로 설정할 수 있다. 일 실시예에 따라, 노이즈 제거 모델은 압축 품질 분류 모듈과 다르게 라벨이 정수가 아닌 이미지를 나타낼 수 있다. 동작 303에서, 프로세서는 압축 품질의 클래스를 분류할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질의 클래스를 분류하기 위한 학습(learning)을 수행할 수 있다. 일 실시예에 따라, 프로세서는 압 축 품질의 클래스를 분류하기 위한 방법으로 다양한 머신 러닝 방법을 이용할 수 있으며, 예를 들면, CNN(convolutional neural network)으로 압축 품질 분류 모듈(예: 품질 예측 모듈)을 구현할 수 있 다. 예를 들면, 프로세서는 CNN 모델을 동작 301에서 생성한 데이터세트 상에서 다양한 압축 이미지 품질 을 이미지 처리 모듈(예: 이미지 디코더)로 디코딩한 데이터로 훈련하여, 전자 장치 상에서의 임의의 이미지가 주어졌을 때 해당 이미지의 압축 품질을 예측하도록 할 수 있다. 일 실시예에 따른 머신 러닝 방법은 CNN 모델에 한정하지 않으며, 압축 품질의 분류 및 개선을 위해 이용될 수 있는 다양한 머신 러닝 방법을 이용 할 수 있다. 예를 들면, 머신 러닝 방법으로, 비지도 학습 방법(unsupervised learning)을 기반으로 하는 심층 신뢰 신경망(DBN, deep belief network) 및/또는 심층 오토인코더(deep autoencoder), 이미지와 같은 2차원 데 이터 처리를 위한 합성곱 신경망(CNN), 및/또는 시계열 데이터 처리를 위한 순환 신경망(RNN, recurrent neural network)과 같은 다양한 모신 러닝 방법을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 이미지에 대한 압축 품질을 예측(inference)할 수 있다. 일 실시예에 따 르면, 프로세서는 전자 장치에서 압축 품질의 클래스 분류를 수행할 때, 이미지의 모든 패치(patch) 들을 모두 체크(check)하지 않고, 예를 들면, 도 2의 샘플 패치 추출 모듈을 이용하여, 예를 들면, 약 256 개의 16x16 패치를 추출(예: 균등 추출 또는 랜덤 추출)하고, 추출된 256개 각각에 기반하여 이미지에 대한 압 출 품질(예: 최종 품질(Q))를 예측할 수 있다. 일 실시예에 따르면, 프로세서는 추출된 영역들에 기반한 최종 품질(Q)을 예측할 때, 추출된 영역들의 신뢰도를 추정하여, 신뢰도(또는 점수)가 지정된 임계 값 이하인 아웃라이어(outlier)에 대해, 압축 품질의 평균 연산에서 제외하고 최종 품질(Q)을 예측할 수 있다. 다양한 실 시예들에 따르면, 프로세서는 이미지의 전체가 아닌 일부를 분석함으로써 분류 속도를 급격하게 향상할 수 있다. 일 실시예에 따라, 압축 품질 분류 동작과 관련하여 후술하는 도면들을 참조하여 설명된다. 동작 305에서, 프로세서는 압축 품질에 대응하게 학습된 노이즈 제거 모델 적용에 기반하여 아티팩트 (artifacts)를 제거할 수 있다. 일 실시예에 따르면, 프로세서는 주어진 이미지에 대해, 해당 압축 품질에 대응하게 학습된 개선 강도(denoising strength)를 적용하여 아티팩트를 제거할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질에 대응하는 노이즈 제거 모델을 결정하기 위한 학습을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질의 분류 개수와 같이, 예를 들면, N개의 노이즈 제거 모델을 생성할 수 있다. 어떤 실시예에 따르면, 프로세서는 노이즈 제거 모델의 개수를 줄이기 위해서, 예를 들면, N개보다 적은 개수로 근사화(quantization)하여 노이즈 제거 모델을 생성할 수도 있다. 일 예로, 프로세서 는 약 100개의 압축 품질 중에서, 예를 들면, 약 8개의 품질(예: 압축 품질 20, 30, 40, 50, 60, 70, 80, 및 90)로 근사화할 수 있다. 일 실시예에 따르면, 프로세서는 근사화를 통해 생성된 압축 이미지가 원본 이미지로 8x8 패치 단위로 보정될 수 있도록 학습 모델을 생성할 수 있다. 일 실시예에 따르면, 프로세서 는 입력 크기를 16x16 픽셀(pixel) 크기를 갖는 패치로 설정하여 주위의 블록의 적어도 일부 영역을 같이 고려 하도록 할 수도 있다. 예를 들면, 프로세서는 특정 블록의 주변 블록과 질감 및/또는 색감이 급격하게 변 하는 것을 방지할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질 분류 모듈을 통해서 예측된 품질(예: 최종 품질(Q))에 기 반하여 적절한 노이즈 제거 모델을 결정하고, 결정된 노이즈 제거 모델을 이미지 보정에 적용하여, 이미지의 손실 압축에 따른 압축 아티팩트를 제거할 수 있다. 도 4는 일 실시예에 따른 전자 장치에서 이미지 보정의 예를 도시하는 도면이다. 도 4의 예시에서, 예시 화면 <401>은 압축 품질에 따른 이미지 보정 전의 압축 이미지(예: 주어진 이미 지)가 제공되는 예를 나타낼 수 있다. 도 4의 예시에서, 예시 화면 <403>은 압축 품질에 따른 이미지 보정 후의 보정 이미지(예: 복구 이미지)가 제공되는 예를 나타낼 수 있다. 일 실시예에 따라, 도 4의 예시에서, 예시 화면 <401>은 주어진 이미지(예: 지정된 압축 품질로 압축된 압축 이 미지)의 압축 품질이, 예를 들면, JPEG 품질 레벨(quality level)(예: 약 80)인 것을 예로 나타낼 수 있 다. 일 실시예에 따라, 도 4의 예시에서, 예시 화면 <403>은 전자 장치가 주어진 이미지에서 JPEG 품 질 레벨(예: 약 80)인 것을 분류(classification)(또는 예측)하고, 분류된 압축 품질(예: 품질 레벨: 약 80)에 대응하게 학습된 개선 알고리즘(예: 노이즈 제거 모델)을 적용(예: 이미지 보정)한 예를 나타낼 수 있다. 일 실시예에 따르면, 전자 장치에서 이미지는 대부분 일정 압축 품질(또는 압축률)로 압축되어 제공될 수 있다. 이러한 압축 이미지는, 예시 화면 <401>에 예시한 바와 같이, 압축 품질에 따라 고유한 아티팩트 (artifacts)(예: 예시 화면 <401>에서 엘리먼트 430 부분)가 발생할 수 있다. 예를 들면, 이미지는, 압축 품질 (예: 비트레이트(bit rate))을 낮추기 위해서 다양한 샘플링(예: chroma subsampling), 블록 크기(block size), 및/또는 근사화(예: 이산코사인변환(DCT, discrete cosine transform) 계수 근사화(coefficient quantization))와 같은 다양한 방법들이 사용될 수 있고, 압축 코덱에 따라 추가로 더 다양한 압축 품질 조절 방법(예: 비트레이트 조절 방법)으로 압축될 수 있다. 일 실시예에 따르면, 전자 장치는 다양한 압축 품질로 이루어진 학습 데이터(예: 다양한 압축 품질 별 이 미지들)에서 해당 압축 품질에 나타나는 특유의 아티팩트(또는 노이즈)들의 패턴을 학습(또는 훈련)하고, 이를 제거하는 복수 개의 모델(예: 노이즈 제거 모델)을 심층 신경망(deep neural network)을 통해 학습할 수 있다. 일 실시예에서, 심층 신경망은 입력층(input layer)과 출력층(output layer) 사이에 다중의 은닉층(hidden layer)을 포함하는 인공 신경망(ANN, artificial neural network)을 나타낼 수 있다. 일 실시예에 따르면, 심 층 신경망은 다중의 은닉층을 포함하여 다양한 비선형적 관계를 학습할 수 있으며, 딥 러닝(deep learning)의 핵심 모델로 활용되고 있다. 일 실시예에 따르면, 심층 신경망은 알고리즘에 따라 심층 신뢰 신경망(DBN), 심층 오토인코더, 합성곱 신경망(CNN), 및/또는 순환 신경망(RNN)을 포함할 수 있다. 어떤 실시예에 따르면, 전자 장 치는 아티팩트(또는 노이즈)들의 패턴에 대해 미리 학습(또는 훈련)된 모델(예: 노이즈 제거 모델)을 다른 전자 장치로부터 전달받거나 또는 서버로부터 획득(예: 다운로드)할 수도 있다. 다양한 실시예들에서는, 다양한 압축 품질 별로 최적화된 노이즈 제거 모델을 매칭할 수 있고, 압축 품질에 대 응하는 노이즈 제거 모델을 적용하여 아티팩트(또는 노이즈)(예: 엘리먼트 430)를 제거할 수 있다. 일 실시예에 따르면, 전자 장치는 학습 데이터를 통해서 압축 품질에 따른 아티팩트를 분류할 수 있고, 아티팩트의 패 턴을 자동적으로 분석하여, 해당 압축 품질에 대응하는 특유의 아티팩트까지 제거할 수 있다. 일 실시예에 따르면, 전자 장치는 주어지 이미지(예: 예시 화면 <401>의 압축 이미지)에 대해 압축 품질을 파악하고, 해당 압축 품질의 아티팩트(또는 노이즈)에 맞게 학습된 노이즈 제거 모델을 적용하여, 사용 자에게 아티팩트가 제거된 이미지(예: 예시 화면 <403>의 복구 이미지)를 제공할 수 있다. 도 5는 일 실시예에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 5를 참조하면, 동작 501에서, 전자 장치의 프로세서는 이미지를 포함하는 화면을 표시할 수 있다. 일 실시예에 따르면, 프로세서는 이미지 및/또는 이미지를 포함하는 컨텐츠를 디스플레이 모듈을 통 해 시각적으로 제공할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 입력에 기반하여, 전자 장치의 메모리에 저장된 이미지 및/또는 외부 장치로부터 수신된 이미지를 포함하는 화면을 표시하도록 디스 플레이 모듈을 제어할 수 있다. 일 실시예에 따라, 이미지는 지정된 압축 품질(또는 압축률 또는 압축 레 벨)로 압축된 압축 이미지를 나타낼 수 있다. 동작 503에서, 프로세서는 주어진 이미지에 대한 압축 품질(또는 압축률 또는 압축 레벨)을 판단(또는 분 류)할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질을 판단할 때, 주어진 이미지의 전체 영역이 아 닌 일부 영역, 예를 들면, 패치(예: 8x8 픽셀(pixel), 16x16 픽셀 또는 64x64 픽셀) 단위)로, 지정된 M개(예: 약 256개)의 패치를 지정된 방식으로(예: 균등하게 또는 랜덤하게) 추출하여 패치 별로 압축 품질을 예측할 수 있다. 예를 들면, 이미지 압축은 이미지를 작은 블록(block)으로 나누고 같은 압축 품질 레벨의 압축 메커니즘 (예: chroma subsampling, DCT, Quantization)을 모든 블록에 일괄적으로 적용하는 동작으로 이루어질 수 있다. 예를 들면, 압축 이미지는, 압축 품질(예: 비트레이트(bit rate))를 낮추기 위해서 다양한 샘플링(예: chroma subsampling), 블록 크기(block size), 및/또는 근사화(예: 이산코사인변환(DCT, discrete cosine transform), 계수 근사화(coefficient quantization))와 같은 다양한 압축 메커니즘이 사용될 수 있고, 압축 코덱에 따라 추 가로 더 다양한 압축 품질 조절 방법(예: 비트레이트 조절 방법)으로 압축될 수 있다. 압축 이미지는 이미지 전 체를 목표 압축 품질을 맞추기 위해 모든 블록에 대해 일정 압축 품질(또는 압축률)로 압축(예: 비슷한 수준의 압축 메커니즘 적용)될 수 있다. 따라서, 이미지에서 적어도 일부 블록만 확인하더라도, 이미지에 대해 전체 압 축 품질을 예측할 수 있다. 일 실시예에 따르면, 프로세서는 이미지의 압축 품질 판단 시에, 블록 단위(예: 패치 단위)의 신뢰도 추정 에 기반하여 이미지의 압축 품질을 예측할 수 있다. 예를 들면, 프로세서는 주어진 이미지에 대해 블록 단 위 신뢰도 추정에 기반하여, 이미지로부터 아웃라이어(outlier)를 제거하고, 이미지에서 압축 품질 예측을 가능 하게 하는 영역을 기반으로 압축 품질을 분석할 수 있다. 예를 들면, 프로세서는 입력 패치에서 신뢰도 추 정을 통해 아웃라이어에 대응하는 패치는 품질 예측 대상에서 제외하고, 입력 패치 중 아웃라이어의 패치를 제 외한 나머지 패치(예: 압축 품질 예측을 가능하게 하는 영역)를 이용하여 압축 품질을 판단할 수 있다. 일 실시예에 따르면, 프로세서는 압축 품질을 판단할 때, 주어진 이미지로부터, 복수 개(예: 지정된 M개) 의 패치를 지정된 방식(예: 균등 방식 또는 랜덤 방식)으로 추출하고, 추출된 패치의 신뢰도 추정을 수행할 수 있다. 예를 들면, 프로세서는 다양한 신뢰도 추정 방식에 기반하여, 추출된 패치들의 신뢰도를 추정하여, 신뢰도가 지정된 임계 값 이하인 아웃라이어에 대응하는 적어도 하나의 패치(예: K개의 패치)에 대해, 패치 별 압축 품질의 평균 연산에서 제외하고, 신뢰도가 지정된 임계 값 초과인 나머지 패치(예: (M-K)개의 패치)에 기 반하여 압축 품질을 분석(예: 나머지 패치 별 압축 품질의 평균을 연산)하여, 압축 품질(예: 이미지에 대한 최 종 품질(Q))를 분류(또는 결정)할 수 있다. 예를 들면, 프로세서는 이미지에서 아웃라이어를 제거하고, 유 의미한 압축 품질 예측을 가능하게 하는 영상 패치에서 획득하는 예측 결과만을 종합하여 이미지의 품질을 보다 정확하고 신속하게 예측할 수 있다. 일 실시예에 따르면, 프로세서는 압축 이미지를 패치 단위(예: 8x8 패치 단위, 16x16 패치 단위 또는 64x64 패치 단위)로 분류 학습 및 예측을 통해 압축 품질을 결정할 수 있다. 예를 들면, 이미지의 압축은, 패치 단위로 이루어질 수 있으므로, 8x8 패치 단위, 16x16 패치 단위 또는 최대로 64x64(예: HEVC의 경우) 패치 단위 로 분류가 가능할 수 있다. 이를 통해, 프로세서는 압축이 발생하는 단위인 해당 패치에 집중하여, 전체적 인 이미지 특성에 의한 계산 오류를 방지할 수 있다. 또한, 프로세서는 압축 품질을 결정하기 위한 연산의 입력 이미지(input image)의 크기가 작으므로, 기존의 풀링 레이어(pooling layer)를 사용하여 불필요하게 수용 영역(receptive field)을 넓히고 정확성이 떨어질 수 있는 동작을 회피할 수 있다. 일 실시예에 따르면, 프로세서는 이미지의 특성상 압축률을 명확히 반영하지 못하는 영역(예: 아웃라이 어)(예: 이미지에서 검은색의 영역 및/또는 저주파 성분의 영역과 같이 압축 여부에 관계 없이 비슷한 특성을 가지는 영역)이 발생할 수 있으므로, 이를 고려하여, 압축 품질 판단 시에, 이미지로부터 아웃라이어를 제거할 수 있다. 예를 들면, 프로세서는 추출된 영역들의 각 압축 품질(또는 점수)들의 평균 값을 계산할 때, 추 출된 영역들의 신뢰도를 분석하여, 신뢰도가 지정된 임계 값 이하인 아웃라이어에 대해, 평균 값 계산에서 제외 할 수 있다. 동작 505에서, 프로세서는 압축 품질에 대응하게 학습된 모델(예: 노이즈 제거 모델 또는 디노이징 모델) 을 선택할 수 있다. 예를 들면, 프로세서는 압축 품질을 사전에 예측하고, 전자 장치에서 해당 압축 품질로 학습된 노이즈 제거 모델을 사용할 수 있다.일 실시예에 따르면, 프로세서는 메모리에 다양한 압축 품질 별로 미리 학습된 복수의 노이즈 제거 모델 중, 이미지의 압축 품질에 대응하게 학습된 노이즈 제거 모델을 선택할 수 있다. 일 실시예에 따르면, 프로세서는 주어진 이미지에 대해, 제1 압축 품질로 분류하는 경우 제1 압축 품질의 분류에 대응 하는 제1 노이즈 제거 모델을 선택할 수 있고, 제2 압축 품질로 분류하는 경우 제2 압축 품질의 분류에 대응하 는 제2 노이즈 제거 모델을 선택할 수 있고, 제3 압축 품질로 분류하는 경우 제3 압축 품질의 분류에 대응하는 제3 노이즈 제거 모델을 선택할 수 있다. 어떤 실시예에 따르면, 프로세서는 압축 품질에 대응하게 학습된 노이즈 제거 모델 선택 시, 사용자 의도(또는 선호도 또는 취향), 이미지를 제공하는 서비스 또는 어플리케이션 의 종류 및/또는 실제 이미지가 표시될 디스플레이 모듈의 물리적 크기(예: 디스플레이 모듈의 화면 크기) 중 적어도 하나를 더 고려하여, 노이즈 제거 모델을 선택할 수도 있다. 동작 507에서, 프로세서는 선택된 모델에 기반하여 이미지 처리를 수행할 수 있다. 일 실시예에 따르면, 프로세서는 복수의 노이즈 제거 모델 중, 이미지의 압축 품질에 기반하여 선택된 노이즈 제거 모델을 이용하여 이미지 보정을 처리할 수 있다. 일 실시예에 따르면, 프로세서는 선택된 노이즈 제거 모델에 대 응하는 보정 강도에 따라 주어진 이미지에서 압축 아티팩트(또는 노이즈)를 제거하여 주어진 이미지(예: 압축 이미지)를 압축 이전의 원본 이미지로 복구할 수 있다. 동작 509에서, 프로세서는 지정된 동작을 처리할 수 있다. 일 실시예에 따라, 프로세서는 보정된 이 미지를 표시하도록 디스플레이 모듈을 제어할 수 있다. 일 실시예에 따르면, 프로세서는 주어진 이미 지가 대응하는 노이즈 제거 모델에 기반하여 보정된 상태를 표시하도록 디스플레이 모듈을 제어할 수 있다. 어떤 실시예에 따르면, 동작 509의 지정된 동작은, 보정된 이미지를 외부로 전송하거나, 또는 전자 장치 의 메모리에 저장하는 동작을 포함할 수 있다. 도 6은 일 실시예에 따른 전자 장치에서 학습하는 동작 예를 도시하는 도면이다. 일 실시예에 따라, 도 6에서는 전자 장치에서 수행하는 사전 학습 동작의 예를 나타낼 수 있다. 어떤 실시 예에 따르면, 도 6에 예시한 바와 같은 전자 장치에서 수행하는 사전 학습 동작은, 예를 들면, 다른 환경 (예: 개발자 워크스테이션 및/또는 클라우드 환경)에서 수행되고, 전자 장치에서 다운로드 될 수도 있다. 어떤 실시예에 따르면, 전자 장치의 사전 학습 동작에 따른 모델(예: 분류 모델)에 대해, 다른 전자 장치 또는 서버에 의해 미리 학습(또는 훈련)된 모델을 획득(예: 수신 또는 다운로드)할 수도 있다. 도 6을 참조하면, 블록 610에서, 전자 장치의 프로세서는 N개의 품질로 구성된 데이터세트(dataset) 를 생성할 수 있다. 일 실시예에 따르면, 프로세서는 복수 개(예: N개) 클래스의 압축 품질로 구성된 데이 터세트를 생성하기 위해, 이미지들의 채널을 N 단계로 서브샘플링(subsampling), 변환(transform) 및/또는 계수 근사화(coefficients quantization)를 수행할 수 있다. 블록 620에서, 프로세서는 압축 이미지에 기반하여 모델을 학습할 수 있다. 일 실시예에 따르면, 프로세서 는 압축 이미지에 대해 학습(예: 블록 630)을 수행할 수 있다. 일 실시예에 따라, 본 개시에서 학습은, 블 록 430에 예시한 바와 같이, 대상 노이즈 제거 모델이 변환된 패치의 아티팩트들을 분석하여, 압축 품질 및 그 압축 품질의 신뢰도를 알아낼 수 있도록 하는 학습을 나타낼 수 있다. 블록 640에서, 프로세서는 학습(블록 630)에 따른 1개의 분류 모델을 생성할 수 있다. 일 실시예에 따르면, 프로세서는 학습에 기반하여 생성하는 분류 모델을, 후술하는 도 7의 압축 품질을 예측하는 동작 에 이용할 수 있다. 도 7은 일 실시예에 따른 전자 장치에서 압축 품질을 예측하는 동작 방법을 도시하는 흐름도이다. 일 실시예에 따라, 도 7은 전자 장치에서 수행하는 압축 품질을 분류하는 동작의 예를 나타낼 수 있다. 도 7을 참조하면, 동작 701에서, 전자 장치의 프로세서는 이미지를 입력할 수 있다. 일 실시예에 따 르면, 프로세서는 개선할 압축 품질의 이미지를 학습 대상의 이미지로 입력할 수 있다. 동작 703에서, 프로세서는 이미지에서 균등한 간격으로 약 M개의 패치를 추출할 수 있다. 일 실시예에 따 르면, 프로세서는 입력된 이미지로부터, 예를 들면, 약 256개의 16x16 패치를 균등하게 또는 랜덤하게 추 출할 수 있다. 동작 705에서, 프로세서는 분류 모델로 아티팩트를 분석하여 N 단계(예: 아티팩트의 특성에 따른 품질 정 보(예: 숫자)) 중 하나의 압축 품질로 구분할 수 있다. 일 실시예에 따르면, 프로세서는 도 6에서 학습(예: 블록 430)에 따라 생성된 분류 모델을 기반으로 대응하는 아티팩트를 분석하여, N 단계의 압축 품질중 어느 하나의 압축 품질로 분류할 수 있다 동작 707에서, 프로세서는 신뢰도를 이용하여 약 K개의 아웃라이어를 제거할 수 있다. 일 실시예에 따르면, 프로세서는 패치 단위로 신뢰도를 추정하고, 패치 단위 신뢰도 추정에 기반하여, 이미지로부터 아 웃라이어를 제거할 수 있다. 예를 들면, 프로세서는 신뢰도 추정을 통해, 신뢰도가 지정된 임계 값 이하인 아웃라이어에 대응하는 패치는 품질 예측 대상에서 제외할 수 있다. 이의 예가 도 8에 예시된다. 동작 709에서, 프로세서는 Y(예: Y = M - K)개의 패치의 품질 결과를 종합하여 이미지의 대표 품질(예: 최 종 품질(Q))을 예측할 수 있다. 일 실시예에 따르면, 프로세서는 이미지에서 추출된 패치(예: M개의 패 치)로부터 아웃라이어에 대응하는 적어도 하나의 패치(예: K개의 패치)를 제거하고, 나머지 패치(예: Y개(예: M - K개)의 패치)에서 출력된 결과(예: Y개의 패치 별 압축 품질)를 평균하여 이미지의 대표 품질(또는 최종 품질 (Q))을 예측(또는 도출)할 수 있다. 일 실시예에 따르면, 프로세서는 이미지에 대해 예측된 대표 품질을, 후술하는 압축 아티팩트 제거 및/또는 이미지 보정 동작에서 이미지에 대한 압축 품질의 입력으로 사용할 수 있 다. 도 8은 일 실시예에 따른 전자 장치에서 품질 예측을 위한 추론 동작의 예를 설명하기 위해 도시하는 도면이다. 일 실시예에 따라, 도 8은 전자 장치에서 패치 단위의 신뢰도 기반 압축 품질을 예측하는 동작의 예를 나 타낼 수 있다. 도 8을 참조하면, 전자 장치는 패치 단위의 신뢰도를 추정하기 위한 학습(learning)을 수행할 수 있다. 일 실시예에 따라, 전자 장치는 패치 단위의 신뢰도를 추정하기 위한 방법으로 다양한 머신 러닝 방법을 이용 할 수 있으며, 예를 들면, CNN(convolutional neural network)으로 신뢰도 추정을 구현할 수 있다. 예를 들면, 전자 장치는 임의의 이미지(예: 압축 이미지)가 주어졌을 때, 이미지의 패치 별 신뢰도 인식 CNN을 사용하여, 해당 이미지의 압축 품질 수준을 예측하도록 할 수 있다. 일 실시예 에 따라, 도 8의 예시에서는, 주어진 이미지는 이미지의 전체 영역에서 9개의 입력 패치만 검사 한다고 가정할 수 있다. 일 실시예에 따르면, 각 입력 패치에는 압축 코딩 블록이 포함될 수 있다. 일 실 시예에서, 패치는, 예를 들면, 샘플 패치 추출 모듈을 통해 균일하게 샘플링될 수 있다. 샘플링된 패 치는 일괄적인 예측을 위해 CNN에 입력될 수 있고, CNN을 통해, 예를 들면, 9 쌍(pairs)의 품질 결과 (예: 품질(quality) 및 신뢰도(confidence))를 산출할 수 있다. 일 실시예에 따르면, 전자 장치는 9 쌍의 품질 결과에서 신뢰도가 지정된 임계 값(예: 약 80%) 이하인 아 웃라이어에 대응하는 패치(예: 낮은 신뢰도의 2개의 패치)는 제외할 수 있다. 일 실시예에 따라, 전자 장치 는 9 쌍의 품질 결과에서 신뢰도가 지정된 임계 값(예: 약 80%) 초과의 나머지 패치(예: 아웃라이어에 대 응하는 패치가 제거된 패치로, 예를 들면, 높은 신뢰도의 7개의 패치)의 품질 결과를 평균할 수 있다. 예를 들 면, 도 8의 예시에서, 전자 장치는 7개의 패치에서 출력된 결과를 평균하고, 그 평균 값(예: ‘85’)을 이 미지의 대표 품질(또는 최종 품질(Q))을 예측(또는 도출)할 수 있다. 일 실시예에 따른 머신 러닝 방법은 CNN 모델에 한정하지 않으며, 압축 품질의 분류를 위해 이용될 수 있는 다 양한 머신 러닝 방법을 이용할 수 있다. 예를 들면, 머신 러닝 방법으로, 심층 신뢰 신경망(DBN, deep belief network), 심층 오토인코더(deep autoencoder), 합성곱 신경망(CNN), 및/또는 순환 신경망(RNN, recurrent neural network)과 같은 다양한 머신 러닝 방법을 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 이미지에 대한 압축 품질의 예측(또는 압축 품질의 클래스 분류)을 수행 할 때, 이미지의 모든 패치들을 모두 체크(check)하지 않고, 예를 들면, 샘플 패치 추출 모듈을 이용하여, 예를 들면, 약 256개의 16x16 패치를 추출하고, 추출된 256개에서, 신뢰도 추정을 통해 아웃라이어에 대응하는 패치를 제거하고, 압축 품질의 예측을 가능하게 하는 유의미한 패치를 분류 및 통합하여 이미지에 대한 최종 품 질(Q)을 정확하고 신속하게 예측할 수 있다. 예를 들면, 전자 장치는 추출된 영역들에 기반한 최종 품질 (Q)을 예측할 때, 추출된 영역들의 신뢰도를 추정하여, 신뢰도가 지정된 임계 값 이하인 영역에 대해, 평균 값 계산에서 제외하고 최종 품질(Q)를 예측할 수 있다. 일 실시예에 따라, 본 개시에서는, 도 8에 예시한 바와 같이, CNN의 품질 결과를, 품질(예: 품질 예 측 모듈의 학습에 의한 예측 결과)과 신뢰도(예: 신뢰도 추정 모듈의 학습에 의한 예측 결과)로 구분할 수 있다. 예를 들면, 전자 장치는 각 패치의 품질 예측의 신뢰도를 품질 예측 결과와 Ground Truth 결과의 차이를 기반으로 압축 품질을 예측할 수 있다. 예를 들면, 본 개시에 따르면, 품질 예측 모듈을 학 습하는 중에, 동시에 입력 패치에 대한 품질 예측 성능을 계속 측정하고, 해당 품질 예측 모듈이 특정 타입의 입력 패치에 대해 품질 측정 성능이 떨어지는 현상을 통계적으로 파악할 수 있는 신뢰도 추정 모듈도 함께 학습할 수 있다. 예를 들면, CNN 훈련의 경우 이미지(예: raw 이미지)를 일정 수준으로 압축하여 압축 품질의 Ground Truth 레이블을 제공할 수 있지만, 품질 예측에 대한 실제 신뢰도(또는 점수)는 제공할 수 없다. 이하에서는 본 개시 에 따라 각 후보 패치(예: 입력 패치)에 대해 예측된 품질 레벨의 신뢰도를 실질적으로 추정하여 제공하는 일 예를 설명한다. 예를 들면, 훈련된 CNN 모델 G(·)가 주어진 입력 패치(input patch) x의 압축 품질(예: )을 정확하게 예측할 수 있다고 가정하면, 주어진 입력 패치 xi의 실제 신뢰도 ci는 아래 <수학식 1>과 같이 근사화될 수 있 다. 수학식 1"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "<수학식 1>에서, 는 주어진 i번째 입력 패치 xi의 예측된 품질(predicted quality)을 나타내고, qi는 실제 품질(true quality)을 나타내며, m은 최대 품질 레벨(maximum quality level)을 나타낼 수 있다. 예를 들면, m 은 libjpeg-turbo의 경우 100으로 설정될 수 있고, FFmpeg의 경우 51로 설정될 수 있다. 따라서, CNN 모델 G(·)(예: 품질 예측 모듈)와 <수학식 1>을 이용하여, 또 다른 신뢰도 추정 모듈을 훈련할 수 있다. 수학식 2"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "<수학식 2>에서 는 입력 패치 x에 대해 추정된 신뢰도(estimated confidence)를 나타낼 수 있다. 예를 들면, L1 손실(loss)이 CNN 모델 H(·)(예: 신뢰도 추정 모듈) 훈련에 사용되는 것을 가정하면, H(·)은 각 후보 패치(예: 입력 패치)에 대한 신뢰도 측정 값에서 평균 편차(average deviation)가 가장 작은 중간 값(median number) z를 추정할 수 있다. 수학식 3"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "하지만, G(·)와 H(·)의 2개의 네트워크를 사용하는 종래의 방법은 2개의 학습 단계(two learning stages)와 2 개의 추론(two inferences)이 필요하다는 점에서 비효율적일 수 있다. 따라서, 본 개시에서는 품질 예측과 신뢰 도 추정이라는 2개의 작업(two tasks)이 많은 공통 특징(common features)를 공유할 수 있으므로 아래 <수학식 4>와 같이, 하나의 네트워크에서 품질과 신뢰도를 모두 출력할 수 있도록 네트워크 F(·)를 구현할 수 있다. 수학식 4"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "<수학식 4>에서, F(x)1 및 F(x)2는 각각 F(x)의 첫 번째 및 두 번째 출력 유닛(output units)을 나타낼 수 있다. 결과적으로, 아래 <수학식 5>와 같은 손실 함수(loss function)가 채택될 수 있다. 수학식 5"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "<수학식 5>에서, Fθ는 파라미터 세트(parameter set) θ가 있는 신뢰도 인식(confidence-aware) CNN을 나타낼 수 있다. 본 개시에서, 신뢰도 추정은 입력을 신뢰할 수 있는 패치(예: 이미지에서 아웃라이어 영역)와 신뢰할 수 없는 패치(예: 이미지에서 유의미한 압축 품질 예측이 가능한 영역)의 2가지 카테고리(two categories)로 분 류하는 데 사용될 수 있다. 또한, 품질 예측은 보다 정확한 품질 출력이 요구될 수 있다. 일 실시예에서는, 품 질이 아닌 신뢰도의 상대적 중요성을 반영하는 파라미터 λ를 0.5로 실험적으로 설정하고, 그에 따른 결과는 아 래와 같이 나타낼 수 있다. 다른 실시예에 따르면, 파라미터 λ를 0.25오 같이 0.5 보다 작은 경우에서도 비슷 한 결과가 획득되는 것을 실험적으로 확인할 수 있다. 일 실시예에 따라, <수학식 1> 내지 <수학식 5>는 CNN의 출력 유닛을 품질과 신뢰도로 구분하는 배경과 학습을 하기 위한 손실 함수(loss function)를 설계하는 지에 대한 예시를 나타낼 수 있고, 이러한 예시 는 본 개시의 이해를 돕기 위한 것일 뿐, 본 개시의 실시예를 제한하는 것은 아니다. 일 실시예에 따라, 아래 <표 1> 및 <표 2>는 본 개시에 따른 품질 예측 방법을 이용한 실험 결과의 예를 나타낼 수 있다. 예를 들면, <표 1>은 JPEG 코덱을 사용한 경우의 실험 결과의 일 예를 나타내고, <표 2>는 H.264 코덱 을 사용한 경우의 일 예를 나타낼 수 있다. 본 개시에 따른 품질 예측 방법(예: <표 1> 및 <표 2>의 예시에서 제5 방법)에 따르면, 입력 패치의 신뢰도를 추정하여 압축 품질을 측정하였을 때 기존의 다른 방법(예: 제1 방 법 내지 제4 방법) 보다 비슷하거나 빠른 시간으로 보다 정확한 압축 품질 예측 결과를 획득하는 것을 알 수 있 다. 일 실시예에서, 제1 방법은, MobileNetV2 알고리즘을 나타낼 수 있고, 제2 방법은 EfficientNet 알고리즘을 나타낼 수 있고, 제3 방법은 블록 단위 기반 Naive 알고리즘을 나타낼 수 있고, 제4 방법은 블록 단위 기반 Sobel 알고리즘을 나타낼 수 있고, 제5 방법은 본 개시의 품질 예측 방법(예: ‘Q1Net’이라 명명)의 알고리즘 을 나타낼 수 있다. <표 1> 및 <표 2>는 데이터 세트에 대한 성능 비교를 나타낸 것으로, 각 방법의 평균 절대 오차(MAE, mean absolute error), 오차의 표준 편차(SDE, stand deviation of errors), 레이턴시(latency), 및/또는 모델 크기"}
{"patent_id": "10-2021-0153020", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "(model size)를 비교하여 총 224x224 또는 256x256 입력 픽셀로 주요 실험 결과의 요약을 나타낼 수 있다. 예를 들면, 1에서 100까지의 품질 레벨을 예측하는 작업에서, 제5 방법은 JPEG의 경우 약 10ms의 처리 시간으로 약 0.43의 MAE로 우수한 예측 성능을 달성하고, 약 0.42의 SDE로 높은 신뢰도를 달성하는 것을 나타내고, H.264의 경우 약 18ms의 처리 시간으로 약 0.48dml MAE로 우수한 예측 성능을 달성하고, 약 0.51의 SDE로 높은 신뢰도를 달성하는 것을 나타낼 수 있다. <표 1> 및 <표 2>에 예시한 바와 같이, 제5 방법은, 기존의 제1 방법 내지 제4 방법과 비교하여, 상대적인 우위의 성능을 가지며, 보다 정확하고 빠른 품질 예측 결과를 도출할 수 있다. 표 1 Method 제1 방법 제2 방법 제3 방법 제4 방법 제5 방법 MAE 1.16 2.24 1.28 0.46 0.43 SDE 1.43 2.29 5.79 0.50 0.42 Time (ms) 7 12 9 14 10 #Params 2.32 M 4.13 M 125 K 125 K 125 K 표 2 Method 제1 방법 제2 방법 제3 방법 제4 방법 제5 방법 MAE 0.58 0.56 1.01 0.77 0.48 SDE 0.52 0.6 2.16 0.87 0.51 Time (ms) 7 12 18 21 18 #Params 2.32 M 4.13 M 208 K 208 K 208 K본 개시에 따른 품질 예측 방법에 따르면, CNN의 입력을 압축 코딩 블록의 크기로 줄일 수 있다. 기존 이미지 분류에 사용되던 입력 사이즈는 224x224 정도의 크기이지만, 압축에 사용하는 코딩 블록의 사이즈는 그 보다 훨 씬 작을 수 있다. 예를 들면, JPEG의 경우 8x8이고, H.264의 경우 가장 큰 코딩 블록 사이즈는 16x16일 수 있다. 따라서 본 개시에 의하면 CNN의 입력 크기를 효과적으로 줄일 수 있고 CNN 크기가 줄어들기 때문에 CNN의 파라미터 개수도 줄일 수 있다. 일 실시예에 따라, 머신 러닝 모델의 파라미터 개수가 적을 수록 계산 량도 줄 어들기 때문에, 단일 블록을 기준으로 할 때, 추론(inference) 시 기존의 이미지 분류 네트워크보다 훨씬 낮은 지연 속도(algorithm latency)를 가질 수 있다. 또한, 본 개시에 의하면, 추론하는 블록(또는 패치)의 개수를 가변적으로 받아들여 컴퓨팅 능력이 상대적으로 약한 오래된 전자 장치나 저가 전자 장치에서도 효과적이고도 정확하게 압축 품질 측정이 가능하다. 또한, 본 개시에 의하면, 초해상도(super resolution)와 같은 이미지에서, 이미지의 화질 개선 전에 사용되어 아티펙트(또는 노이즈)가 증폭되는 것을 사전에 방지할 수 있고, 또는 브라우저에 적용되어 외부 서버(예: 인터넷)로부터 수신 받은 고압축 저화질 이미지의 개선 필요 여 부 및 개선 강도를 빠르게 파악할 수 있는 효과가 있다. 일 실시예에 따르면, 압축 이미지의 화질 개선을 위한 아티펙트 제거는 디테일 보존과 ‘트레이드 오프’ 관계 일 수 있다. 예를 들면, 아티펙트 제거를 완벽하게 하는 경우 이미지의 디테일이 사라질 수 있고, 디테일을 유 지하는 경우 아티펙트를 제거하지 못할 수 있다. 따라서, 이미지에서 아티펙트를 제거할수록 디테일이 사라질 수 있고 보다 블러한 이미지를 얻을 수 있게 된다. 이에, 본 개시에 따른 품질 예측 방법에 따라 추론된 화질 값(예: 블록 단위의 신뢰도 추정에 기반하여 예측된 최종 품질(Q))을 이용하여, 아티펙트 제거를 위한 노이즈 제거 모델의 선택하는 성능을 향상(예: 정확한 압축 품질에 대응하는 정확한 노이즈 제거 모델 선택 가능)할 수 있고, 결과적으로 이미지의 전체 품질을 향상할 수 있다. 도 9는 일 실시예에 따른 전자 장치에서 아티팩트를 제거하는 동작 방법을 도시하는 흐름도이다. 일 실시예에 따라, 도 9는 전자 장치에서 분류된 압축 품질에 대응하게 학습된 노이즈 제거 모델에 기반하 여 아티팩트를 제거하는 동작의 예를 나타낼 수 있다. 도 9를 참조하면, 동작 901에서, 전자 장치의 프로세서는 이미지를 입력할 수 있다. 일 실시예에 따 르면, 프로세서는 개선할 압축 품질의 이미지(예: 도 7의 학습 대상의 이미지)를 압축 아티팩트 제거 대상 의 이미지로 입력할 수 있다. 동작 903에서, 프로세서는 예측된 대표 품질을 입력할 수 있다. 일 실시예에 따르면, 프로세서는 도 7에서 예측된 대표 품질을 아티팩트 제거 대상의 이미지의 압축 품질로 입력할 수 있다. 동작 905에서, 프로세서는 대표 품질을 기반으로 N개의 노이즈 제거 모델 중 하나를 선택할 수 있다. 일 실시예에 따르면, 프로세서는 다양한 압축 품질 별로 미리 학습된 N개의 변형 모델 중, 주어진 이미지의 대표 품질에 대응하게 학습된 노이즈 제거 모델(예: translation model i)을 선택할 수 있다. 일 실시예에 따르 면, 프로세서는 주어진 이미지에 대해, 제1 압축 품질로 분류하는 경우 제1 압축 품질의 분류에 대응하는 제1 노이즈 제거 모델을 선택할 수 있고, 제2 압축 품질로 분류하는 경우 제2 압축 품질의 분류에 대응하는 제2 노이즈 제거 모델을 선택할 수 있고, 제3 압축 품질로 분류하는 경우 제3 압축 품질의 분류에 대응하는 제3 노 이즈 제거 모델을 선택할 수 있다 동작 907에서, 프로세서는 선택된 노이즈 제거 모델에 기반하여 이미지 처리를 수행할 수 있다. 일 실시예 에 따르면, 프로세서는 복수의 노이즈 제거 모델 중, 이미지의 압축 품질(예: 대표 품질)에 기반하여 선택 된 노이즈 제거 모델을 이용하여 이미지 보정을 처리할 수 있다. 일 실시예에 따르면, 프로세서는 선택된 노이즈 제거 모델에 대응하는 보정 강도에 따라 주어진 이미지(예: 압축 이미지)에서 압축 아티팩트(또는 노이 즈)를 제거하여 주어진 이미지(예: 압축 이미지)를 압축 이전의 원본 이미지로 복구할 수 있다. 예를 들면, 프 로세서는 압축 이미지를 원본 품질의 이미지(예: 원본 이미지)로 복구할 수 있다. 도 10은 일 실시예에 따른 전자 장치에서 이미지를 압축하는 동작 방법을 도시하는 흐름도이다. 일 실시예에 따라, 도 10은 압축 이미지를 다시 압축(또는 인코딩)(예: 2차 압축)하는 동작의 예를 나타낼 수 있다. 도 10을 참조하면, 동작 1001에서, 전자 장치의 프로세서는 이미지를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 선택에 대응하는 압축 이미지를 표시하거나, 또는 적어도 하나의 압축 이미지를 포함하는 이미지 리스트를 표시할 수 있다. 동작 1003에서, 프로세서는 이미지의 압축을 위한 사용자 입력을 수신할 수 있다. 일 실시예에 따르면, 프 로세서는 제공된 이미지(또는 사용자에 의해 선택된 적어도 하나의 이미지)에 대한 압축을 실행하도록 하 는 사용자 입력을 감지할 수 있다. 일 실시예에서, 사용자 입력은, 이미지의 저장 명령, 메뉴 기반의 압축 명령 및/또는 압축을 위한 지정된 객체 기반의 선택에 기반하여 입력될 수 있다. 예를 들면, 사용자는 지정된 어플리 케이션(예: 갤러리 어플리케이션 또는 이미지 편집 어플리케이션)을 통해 이미지를 편집(예: 자르기(crop), 회 전, 밝기 조정, 해상도 조정, 색감 조정, 선명도 조정, 크기 조정, 포맷 변경 및/또는 효과 설정)할 수 있고, 편집된 이미지를 저장하고자 할 수 있다. 동작 1005에서, 프로세서는 이미지의 제1 압축 시의 아티펙트를 제거할 수 있다. 일 실시예에 따르면, 프 로세서는 이미지의 압축에 관련된 사용자 입력을 수신하고, 사용자 입력에 기반하여 이미지의 이전 압축 (예: 제1 압축)에 관련된 제1 압축 품질을 식별할 수 있다. 일 실시예에 따라, 프로세서는 제1 압축 품질 에 대응하는 노이즈 제거 모델에 기반하여, 제1 압축 시 발생한 아티펙트(예: 이미지에서 고주파 성분 영역의 아티펙트)를 제거할 수 있다. 동작 1007에서, 프로세서는 제1 압축에 관련된 제1 압축 품질에 기반하여 제2 압축 품질을 결정할 수 있다. 일 실시예에 따르면, 프로세서는 품질 예측 모듈을 이용하여 2차 인코딩을 위한 품질 파라미터 를 결정할 수 있다. 예를 들면, 프로세서는 압축 이미지가 편집된 후 다시 인코딩(예: 제2 압축)하는 경우, 이미지의 압출 품질(또는 압축 레벨)을 다시 결정할 수 있다. 예를 들면, 한번 저품질(low quality)로 인 코딩된 이미지는, 다시 고품질(high quality)로 인코딩 하더라도 디그레데이션(degradation)된 디테일은 다시 복원되지 않을 수 있다. 예를 들면, 제2 압축에 관련된 제2 압축 품질을 제1 압축에 관련된 제1 압축 품질 보다 높게 설정하더라도, 제1 압축에 의해서 이미 손실된 정보(예: 고주파 성분 정보)는 복원할 수 없다. 따라서, 프 로세서는 제2 압축 품질의 최대치를 제1 압축 품질과 비슷한 수준의 압축 품질로 설정할 수 있다. 예를 들 면, 이미지의 제1 압축 품질이 약 70으로 제1 압축된 경우, 제2 압축 품질은 약 80 이상으로 설정하지 않을 수 있다. 여기서, 압축 품질의 숫자가 높을수록 더 좋은 화질이 도출될 수 있다. 일 실시예에 따르면, 프로세서는 이미지의 제2 압축 시, 원본(예: 제1 압축 품질)과 비슷한 압축 품질(예: 제1 압축 품질 보다 상대적으로 약간의 높은 압축 품질)로 인코딩함으로써, 이미지의 파일 크기를 줄일 수 있고, 보관 크기를 줄일 수 있다. 동작 1009에서, 프로세서는 제2 압축 품질에 기반하여 이미지에 대한 제2 압축을 수행할 수 있다. 예를 들 면, 이미지는 제1 압축에서 생성된 압축 아티펙트로 인하여 고주파 성분이 발생할 수 있고, 해당 고주파 성분을 압축하는 과정에서 또 다른 아티펙트가 발생할 수 있다. 따라서, 프로세서는 제2 압축 이전에 제1 압축 시 의 압축 아티펙트를 제거한 후, 제2 압축을 수행할 수 있다. 동작 1011에서, 프로세서는 이미지를 저장할 수 있다. 예를 들면, 프로세서는 제2 압축에 따라 생성 되는 이미지를 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 이미지를 저장할 때, 원본 이미지를 대체하여 저장하거나, 원본 이미지와 별도의 이미지로 저장할 수 있다. 도 11은 일 실시예에 따른 전자 장치에서 이미지 보정에 대한 정보를 제공하는 동작 방법을 도시하는 흐름도이 다. 도 12는 일 실시예에 따른 전자 장치에서 이미지 보정에 대한 정보를 제공하는 사용자 인터페이스 및 그 동작 예를 도시하는 도면이다. 일 실시예에 따라, 도 11 및 도 12는 지정된 어플리케이션(예: 갤러리 어플리케이션 또는 이미지 편집 어플리케 이션)에서 제공된 이미지에 대한 보정 정보(예: 압축 품질 스코어(또는 레벨), 보정 영역 노티 객체 및/또는 보 정 상세 정보)를 제공하는 동작의 예를 나타낼 수 있다. 도 11을 참조하면, 동작 1101에서, 전자 장치의 프로세서는 이미지를 포함하는 화면을 표시할 수 있 다. 일 실시예에 따르면, 프로세서는 지정된 어플리케이션을 실행하고, 지정된 어플리케이션에 기반하여 이미지를 디스플레이 모듈을 통해 시각적으로 제공할 수 있다. 예를 들면, 도 12에 예시한 바와 같이, 프 로세서는 갤러리 어플리케이션을 통해 사용자에 의해 선택된 이미지를 포함하는 화면을 표시하도록 디스플레이 모듈을 제어할 수 있다. 일 실시예에 따라, 이미지는 지정된 압축 품질(또는 압축률 또 는 압축 레벨)로 압축된 압축 이미지를 나타낼 수 있다.동작 1103에서, 프로세서는 이미지 품질에 관련된 정보를 요청하는 사용자 입력을 수신할 수 있다. 일 실 시예에 따르면, 프로세서는 제공된 이미지에 대한 보정 정보(예: 압축 품질 스코어(또는 레벨), 보정 영역 노티 객체 및/또는 보정 상세 정보)를 제공하도록 명령하는 사용자 입력을 감지할 수 있다. 일 실시예에서, 사 용자 입력은, 메뉴 기반의 요청 명령 및/또는 보정 정보 제공을 위한 지정된 객체 기반의 선택에 기반하여 입력 될 수 있다. 예를 들면, 도 12에 예시한 바와 같이, 프로세서는 갤러리 어플리케이션에서, 이미지에 대한 보정 정보를 제공하는 기능(예: AI 리마스터 기능)을 실행하도록 지정된 기능 실행 객체를 통해 사용자 입력을 감지할 수 있다. 일 실시예에서, 이미지에 대한 보정 정보를 제공하는 기능(예: AI 리마스터 기능)은 이 미지에 대해 AI로 자동 보정(예: 화질 개선)하고, 자동 보정에 대한 보정 정보를 제공하는 기능을 나타낼 수 있 다. 일 실시예에 따르면, 전자 장치는 이미지가 표시된 화면의 지정된 영역(예: 화면 우측 상단 영역, 화면 좌측 상단 영역, 또는 화면 중앙 하단 영역)을 통해 리마스터 기능 실행을 을 위한 지정된 기능 실행 객체 를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 기능 실행 객체를 이용한 사용자 입력에 기반하여 리마스터 기능을 실행하고 도 12에 예시한 바와 같은 사용자 인터페이스를 제공할 수 있다. 어떤 실시 예에 따르면, 프로세서는 갤러리 어플리케이션에서, 메뉴 진입을 통해 이미지에 대한 보정 정보를 제공하 는 기능을 실행하도록 지정된 옵션을 선택하는 사용자 입력을 감지할 수 있다. 동작 1105에서, 프로세서는 분류 동작에서 높은 신뢰도를 갖는 패치를 식별할 수 있다. 일 실시예에 따르 면, 프로세서는 주어진 이미지에서, 압축 품질을 분류하는 동작(예: 블록 단위의 신뢰도 기반 압축 품질 예측 동작)에서 추출된 패치(예: 패치의 위치 또는 영역)를 식별할 수 있다. 동작 1107에서, 프로세서는 식별된 패치 주변에서 지정된 개수의 샘플을 추가 추출할 수 있다. 일 실시예 에 따르면, 프로세서는 추출된 패치(예: 패치의 위치 또는 영역)의 주변에서, 품질(예: 도 8의 품질(83 0))과 신뢰도(예: 도 8의 신뢰도)를 측정하기 위한 지정된 개수(예: 약 A개)의 샘플을 추가로 추출할 수 있다. 동작 1109에서, 프로세서는 품질 및 신뢰도를 판단할 수 있다. 일 실시예에 따르면, 프로세서는 추출 된 패치 및 추출된 패치의 주변에서 추가로 추출된 샘플에 기반하여 품질 및 신뢰도를 측정할 수 있다. 동작 1111에서, 프로세서는 이미지의 대표 품질(예: 최종 품질(Q))에 대응하는 패치를 군집화(clusterin g)할 수 있다. 일 실시예에 따르면, 프로세서는 동작 1109에서 측정된 품질 및 신뢰도에 따른 압축 품질과 이미지의 대표 품질을 비교하여, 추출된 패치들 중 이미지의 대표 품질에 대응하는 압축 품질을 가지면서, 다른 패치와 비교하여 상대적으로 높은 신뢰도를 갖는 패치를 군집화할 수 있다. 동작 1113에서, 프로세서는 이미지에서 군집화된 부분(또는 영역)에 기반하여 지정된 노티 객체를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 이미지에서 군집화된 부분을 통해 지정된 컬러의 점선 및/또는 오버레이된 마스크를 제공할 수 있다. 예를 들면, 도 12에 예시한 바와 같이, 프로세서는 주어진 이미지 에서, 군집화된 부분에 대하여 노티 객체(예: 노란색 점선 객체)를 제공하여, 이미지 보정 부분에 대한 정보를 사용자에게 제공할 수 있다. 일 실시예에서, 노티 객체는 주어진 이미지에서 군집화된 부분 (예: 보정된 영역)을 사용자에게 직관적으로 노티하기 위한 객체를 나타낼 수 있다. 동작 1115에서, 프로세서는 이미지 보정에 대한 상세 정보(예: 이미지에 대한 압축 품질과 관련된 정보(또 는 화질 알림 정보))를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 이미지에 기반한 노티 객체와 함 께, 이미지 보정에 대한 상세 정보(예: 전체 스코어 및 이미지가 현재 화질로 분류된 이유 설명)를 제공할 수 있다. 예를 들면, 도 12에 예시한 바와 같이, 프로세서는 이미지의 보정 결과에 관한 상세 정보 (예: ‘이 사진의 압축 품질은 50입니다. 노란색 부분을 통해서 정확도 99%로 판단되었습니다. 판단 결과 로 이미지 확대 전에 압축 노이즈를 제거하였습니다.’와 같은 안내 텍스트)를 제공할 수 있다. 예를 들면, 이 미지의 압축 품질에 대한 전체 스코어(예: ‘50’)를 표시하면서 해당 화질로 분류된 이유를 사용자에게 가이드할 수 있다. 일 실시예에 따르면, 프로세서는 지정된 어플리케이션(예: 갤러리 어플리케이션, 이미지 편집 어플리케이 션 또는 웹 페이지 어플리케이션)에서 제공된 이미지에 대한 보정 정보(예: 압축 품질 스코어(또는 레벨), 보정 영역 노티 객체 및/또는 보정 상세 정보)를 제공할 때, 다양한 지정된 조건에 따라 다양하게 제공할 수 있다. 일 실시예에 따르면, 프로세서는 지정된 어플리케이션의 종류 및/또는 메뉴의 뎁스(depth)를 판단하고, 지 정된 어플리케이션의 종류 및/또는 메뉴의 뎁스에 기반하여 보정 대상 정보 및 그에 따른 보정 정보를 다르게제공할 수 있다. 예를 들면, 프로세서는 지정된 어플리케이션의 종류 및/또는 메뉴의 뎁스에 따라, 어떤 대상 정보(예: 해상도, 밝기, 색감, 및/또는 선명도)를 어느 정도 상세하게 제공할 지를 판단하고, 판단 결과에 따라 보정 정보를 다른 방식으로 제공할 수 있다. 일 실시예에 따르면, 프로세서는 제1 어플리케이션(예: 갤러리 어플리케이션)에서 선택 이미지에 대한 리 마스터 기능을 실행하는 경우, 메뉴의 뎁스가 최소의 제1 뎁스(예: 약 1 뎁스)에 해당할 수 있고, 모든 대상 정 보(예: 해상도, 밝기, 색감, 및/또는 선명도)에 대해 보정하고, 보정 결과에 대한 보정 정보(예: 모든 대상 정 보에 기초한 보정 정보)를 제공할 수 있다. 예를 들면, 프로세서는 이미지에서 보정 정보에 대응하는 각각 의 부분에서 해상도, 밝기, 색감, 및/또는 선명도가 어느 정도로 보정되었는지에 대한 보정 정보(예: 예: 압축 품질 스코어, 보정 영역 노티 객체 및/또는 보정 상세 정보)를 제공할 수 있다. 다른 실시예에 따르면, 프로세서는 제2 어플리케이션(예: 이미지 편집 어플리케이션)에서 선택 이미지에 대한 리마스터 기능을 실행하는 경우, 메뉴의 뎁스가 제1 뎁스 보다 많은 제2 뎁스(예: 약 2 내지 약 3 뎁스)에 해당할 수 있고, 모든 대상 정보(예: 해상도, 밝기, 색감, 및/또는 선명도) 중 지정된 일부 대상 정보(예: 밝기, 색감, 선명도)에 대해 보정하고, 보정 결과에 대한 보정 정보(예: 일부 대상 정보에 기초한 보정 정보)를 제공할 수 있다. 예를 들면, 프로세서는 이미지에서 보정 정보에 대응하는 각각의 부분에서 밝기, 색감, 및/또는 선명도가 어느 정도로 보정되었는지에 대한 보정 정보(예: 예: 압축 품질 스코어, 보정 영역 노티 객체 및/또는 보정 상세 정보)를 제공할 수 있다. 다른 실시예에 따르면, 프로세서는 제3 어플리케이션(예: 웹 페이지 어플리케이션)에서 선택 이미지에 대 한 리마스터 기능을 실행하는 경우, 메뉴의 뎁스가 제2 뎁스 보다 많은 제3 뎁스(예: 약 3 내지 약 4 뎁스)에 해당할 수 있고, 모든 대상 정보(예: 해상도, 밝기, 색감, 및/또는 선명도) 중 지정된 최소의 대상 정보(예: 밝 기, 색감)에 대해 보정하고, 보정 결과에 대한 보정 정보(예: 최소의 대상 정보에 기초한 보정 정보)를 제공할 수 있다. 예를 들면, 프로세서는 이미지에서 보정 정보에 대응하는 각각의 부분에서 밝기 및/또는 색감이 어느 정도로 보정되었는지에 대한 보정 정보(예: 예: 압축 품질 스코어, 보정 영역 노티 객체 및/또는 보정 상 세 정보)를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 이미지 보정에 대한 상세 정보를 제공할 때, 도 12에 예시한 바와 같이, 이미지의 표시 위치를 변경하고 화면 분할에 기반하여 별도의 윈도우를 통해 상세 정보를 제 공할 수 있다. 다른 실시예에 따르면, 프로세서는 이미지의 표시 위치를 고정된 상태에서, 이미지 상에 팝업 윈도우 또는 오버레이를 통해 상세 정보를 제공할 수도 있다. 본 개시에 따르면, 전자 장치는 지정된 어플리케이션(예: 갤러리 어플리케이션)을 통해 이미지를 제공할 때, AI가 이미지를 자동 분석하여, 예를 들면, 저화질의 이미지를 고화질의 이미지로 자동 보정하여 제공(예: 리마스터 기능 제공)할 수 있다. 일 실시예에 따르면, 전자 장치는 리마스터 기능을 제공할 때, 이미지가 어떤 이유에 의해서 개선되었는지에 대한 상세 정보(또는 설명)를 제공할 수 있다. 이를 통해, 사용자는 해당 이미지가 어떤 이유로 이미지의 품질 평가(또는 화질 개선)되었는지 보다 상세히 가이드 할 수 있다. 예를 들면, 전자 장치는 해당 이미지의 스코어를 명시적으로 표시하고, 신뢰도가 높은 부분의 스코어를 제공함 으로써, 이미지의 어떤 부분 때문에 주어진 이미지를 특정 디그레데이션(degradation)이 있다고 판단했는지 사 용자에게 제공할 수 있다. 예를 들면, 전자 장치는 이미지 상의 노티 객체 및 이미지의 스코어와 이 미지에서 디그레데이션 판단에 대한 알림 정보를 포함하는 상세 정보를 직관적으로 제공하여, 사용자가 이미지 개선 이유를 보다 자세히 이해할 수 있도록 제공할 수 있다. 본 개시의 일 실시예에 따른 전자 장치에서 수행하는 동작 방법은, 전자 장치의 디스플레이 모듈을 통해 이미지를 표시하는 동작, 상기 이미지에서 지정된 복수 개의 블록을 지정된 방식으로 추출하는 동작, 상기 복수 개의 블록에 대하여 각 블록 별로 신뢰도를 추정하는 동작, 신뢰도 추정에 기반하여, 상기 복수 개의 블록 중 품질 예측 제외 대상인 아웃라이어(outlier)에 대응하는 제1 블록과 품질 예측이 가능한 제2 블록을 식별하는 동작, 상기 복수 개의 블록 중 상기 제1 블록을 품질 예측 대상에서 제외하는 동작, 및 상기 복수 개의 블록 중 상기 제1 블록을 제외한 나머지 제2 블록을 이용하여, 상기 이미지에 대한 압축 품질을 분류하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 압축 품질을 분류하는 동작은, 상기 추출된 복수 개의 블록에 대해, 블록 단위의 신 뢰도 추정에 기반하여, 지정된 임계 값 이하의 아웃라이어에 대응하는 적어도 하나의 제1 블록을 추정하는 동작, 상기 적어도 하나의 제1 블록을 압축 품질 분류를 위한 평균 연산에서 제외하는 동작, 지정된 임계 값 초 과의 적어도 하나의 제2 블록에 기반하여 압축 품질 분류를 위한 평균 연산을 수행하는 동작, 평균 연산의 결과를 상기 이미지에 대한 압축 품질로 분류하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 전자 장치에서 수행하는 동작 방법은, 다양한 압축 품질 별로 미리 학습된 복수의 노 이즈 제거 모델을 저장하는 동작, 상기 복수의 노이즈 제거 모델 중 상기 이미지에 대해 분류된 압축 품질에 대 응하게 학습된 노이즈 제거 모델을 선택하는 동작, 상기 선택된 노이즈 제거 모델에 기반하여 상기 이미지에 대 한 화질 개선을 처리하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 전자 장치에서 수행하는 동작 방법은, 상기 이미지의 이미지 품질에 관련된 정보를 요청하는 사용자 입력을 수신하는 동작, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지에 대한 보정 정보를 상기 이미지에 기반하여 표시하도록 디스플레이 모듈을 제어하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 전자 장치에서 수행하는 동작 방법은, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 대표 품질에 대응하는 압축 품질을 갖는 적어도 하나의 블록을 식별하는 동작, 상기 이미지에서, 상기 식별된 블록에 대응하는 부분에 기반하여 지정된 노티 객체를 제공하는 동작, 상기 노티 객체와 함께, 상 기 이미지 보정에 대한 전체 스코어 및 분류에 대한 설명을 포함하는 상세 정보를 표시하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 전자 장치에서 수행하는 동작 방법은, 상기 이미지의 압축을 위한 사용자 입력을 수 신하는 동작, 상기 사용자 입력을 수신하는 것에 기반하여, 상기 이미지의 제1 압축 시 발생된 아티펙트를 제거 하는 동작, 상기 제1 압축에 관련된 제1 압축 품질에 기반하여 상기 제2 압축을 위한 제2 압축 품질을 결정하는 동작, 상기 제2 압축 품질에 기반하여 이미지에 대한 제2 압축을 수행하는 동작을 포함할 수 있다. 본 명세서와 도면에 개시된 본 개시의 다양한 실시예들은 본 개시의 기술 내용을 쉽게 설명하고 본 개시의 이해 를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 개시의 범위를 한정하고자 하는 것은 아니다. 따라서 본 개시 의 범위는 여기에 개시된 실시예들 이외에도 본 개시의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형 된 형태가 본 개시의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2021-0153020", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면 설명과 관련하여, 동일 또는 유사한 구성 요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있다. 도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 일 실시예에 따른 전자 장치의 구성을 개략적으로 도시하는 도면이다. 도 3은 일 실시예에 따른 전자 장치에서 이미지 보정을 위한 학습, 분류 및 제거 동작의 예를 도시하는 흐름도이다. 도 4는 일 실시예에 따른 전자 장치에서 이미지 보정의 예를 도시하는 도면이다. 도 5는 일 실시예에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 6은 일 실시예에 따른 전자 장치에서 학습하는 동작 예를 도시하는 도면이다. 도 7은 일 실시예에 따른 전자 장치에서 압축 품질을 예측하는 동작 방법을 도시하는 흐름도이다. 도 8은 일 실시예에 따른 전자 장치에서 품질 예측을 위한 추론 동작의 예를 설명하기 위해 도시하는 도면이다. 도 9는 일 실시예에 따른 전자 장치에서 아티팩트를 제거하는 동작 방법을 도시하는 흐름도이다. 도 10은 일 실시예에 따른 전자 장치에서 이미지를 압축하는 동작 방법을 도시하는 흐름도이다. 도 11은 일 실시예에 따른 전자 장치에서 이미지 보정에 대한 정보를 제공하는 동작 방법을 도시하는 흐름도이 다. 도 12는 일 실시예에 따른 전자 장치에서 이미지 보정에 대한 정보를 제공하는 사용자 인터페이스 및 그 동작 예를 도시하는 도면이다."}
