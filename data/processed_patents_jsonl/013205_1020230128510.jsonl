{"patent_id": "10-2023-0128510", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0045348", "출원번호": "10-2023-0128510", "발명의 명칭": "물류 IoT 기기들, 기지국 및 서버 간의 통신 제어 장치 및 방법", "출원인": "엠투클라우드 주식회사", "발명자": "문진수"}}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "물류 IoT 기기들, 기지국 및 서버 간의 통신 제어 장치에 있어서,상기 서버와 통신하는 복수의 통신모듈;게이트웨이를 감지하는 센서모듈; 및상기 센서모듈을 통해 게이트웨이 감지 결과에 기초하여 상기 복수의 통신 모듈 중 하나의 통신 모듈을 활성화하여 상기 물류 IoT 기기와 상기 서버 간 통신을 제어하는 프로세서를 포함하는,통신 제어 장치"}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 복수의 통신 모듈에는,상기 게이트웨이를 이용하는 BLE 통신을 지원하는 제1 통신 모듈과,상기 기지국을 이용하는 LTE 통신을 지원하는 제2 통신 모듈이 포함되는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,상기 프로세서는,상기 센서 모듈을 통해 게이트웨이가 감지되는 경우,상기 제1 통신 모듈이 활성화되도록 제어하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,상기 프로세서는,상기 센서모듈을 통해 게이트웨이가 감지되지 않는 경우, 상기 제2 통신 모듈이 활성화되도록 제어하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 4에 있어서,상기 프로세서는,상기 센서 모듈을 통해 게이트웨이가 감지되지 않는 경우, 상기 복수의 IoT 기기의 식별 정보를 획득하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 5에 있어서,공개특허 10-2025-0045348-3-상기 프로세서는,상기 획득한 복수의 IoT 기기들의 식별 정보에 기초하여, 각 IoT 기기의 상기 기지국과의 통신 시도 시간을 분배하고, 분배된 기지국과의 통신 시도 시간에 관한 정보를 상기 복수의 IoT 기기들로 리턴하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서,상기 프로세서는,상기 리턴된 상기 기지국과의 분배된 통신 시도 시간에 관한 정보와 현재 상기 기지국의 트래픽 정보가 포함된스케줄링 정보를 획득하여, 상기 기지국의 네트워크 부하에 따른 과부하 발생 여부를 예측하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서,상기 프로세서는,상기 예측 결과 상기 기지국에 과부하 발생이 예측되는 경우, 상기 기분배한 각 IoT 기기의 통신 시도 시간 분배 정보를 리셋하여 재분배하되,상기 재분배는 그룹 단위로 통신 시도 시간을 분배 또는 상기 각 IoT 기기에 대해 기설정된 통신 시도 시간을이전과 다르게 분배 설정하는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 5에 있어서,상기 획득하는 IoT 기기의 식별 정보에는 해당 IoT 기기의 시리얼 넘버가 포함되는,통신 제어 장치."}
{"patent_id": "10-2023-0128510", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "장치에 의해 수행되는, 물류 IoT 기기, 기지국 및 서버 간의 통신 제어 방법에 있어서,게이트웨이를 탐색하는 단계;상기 게이트웨이가 탐색되는 경우, 복수의 통신모듈 중 특정 통신 모듈이 활성화되도록 신호를 전송하는 단계;및상기 활성화된 제1 통신 모듈을 통해 각 IoT 기기와 서버가 통신하도록 제어하는 단계를 포함하고,상기 복수의 통신모듈에는 BLE 통신 모듈과 상기 기지국을 이용하는 LTE 통신 모듈이 포함되고,상기 특정 통신 모듈은 BLE 통신 모듈인,통신 제어 방법."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "물류 IoT 기기들, 기지국 및 서버 간의 통신 제어 장치 및 방법이 개시된다. 본 장치는, 상기 서버와 통신하는 복수의 통신모듈; 게이트웨이를 감지하는 센서모듈; 및 상기 센서모듈을 통해 게이트웨이 감지 결과에 기초하여 상기 복수의 통신 모듈 중 하나의 통신 모듈을 활성화하여 상기 물류 IoT 기기와 상기 서버 간 통신을 제어하는 프로세서를 포함할 수 있다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 장치들 간의 통신 제어 기술에 관한 것으로, 보다 상세하게는 물류 IoT 기기, 기지국 및 서버 간에 통신시 통신이 원활하게 이루어지도록 통신을 제어하는 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "사물 인터넷(IoT: Internet of Things) 기술의 발전으로 다양한 분야에 이용되고 있다. 이러한 사물 인터넷 기기는 다양한 목적으로 활용되는데, 이 경우 서버(server) 등과 통신하여 획득한 각종 데 이터를 전송하고, 제어 신호 등을 수신할 수 있다. 이와 같이, 사물 인터넷 기기는 서버와 통신이 빈번하게 이루어질 수 있는데,기지국과 사물인터넷 기기간 트랙 픽 증가와로 인한 과부하와 통신 음영지역과 약전계로 인해 통신 장애가 발생하고 있어, 이에 대한 해결책 마련 이 요구된다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국 공개특허공보 10-2018-0072801호 (2018.06.25.)"}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시에서는 다수의 IoT 기기들이 기지국을 이용하여 서버와 통신하는 경우기기국의 과부하 발생과 LTE 통신 수신감도가 매우 낮은 음영지역으로 인한 통신 장애가 생길 수 있는 바, 상황에 따라 적응적으로 통신 방식을 선택하여, 통신 장애를 방지하거나 통신이 원활하게 이루어질 수 있도록 통신을 제어하는 장치, 방법 및 시스템 을 제공하는 것이다. 본 발명이 해결하고자 하는 과제들은 이상에서 언급된 과제로 제한되지 않으며, 언급되지 않은 또 다른 과제들 은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 다양한 실시예들 중 적어도 하나에 따른 물류 IoT 기기들, 기지국 및 서버 간의 통신 제어 장치는, 상기 서버와 통신하는 복수의 통신모듈; 게이트웨이를 감지하는 센서모듈; 및 상기 센서모듈을 통해 게이트웨이 감지 결과에 기초하여 상기 복수의 통신 모듈 중 하나의 통신 모듈을 활성화하여 상기 물류 IoT 기기와 상기 서 버 간 통신을 제어하는 프로세서를 포함할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 복수의 통신 모듈에는, 상기 게이트웨이를 이용하는 BLE 통신을 지원하는 제1 통신 모듈과, 상기 기지국을 이용하는 LTE 통신을 지원하는 제2 통신 모듈이 포함될 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 센서 모듈을 통해 게이트웨이가 감지되는 경우, 상기 제1 통신 모듈이 활성화되도록 제어할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 센서모듈을 통해 게이트웨이가 감 지되지 않는 경우, 상기 제2 통신 모듈이 활성화되도록 제어할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 센서 모듈을 통해 게이트웨이가 감지되지 않는 경우, 상기 복수의 IoT 기기의 식별 정보를 획득할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 획득한 복수의 IoT 기기들의 식별 정보에 기초하여, 각 IoT 기기의 상기 기지국과의 통신 시도 시간을 분배하고, 분배된 기지국과의 통신 시도 시 간에 관한 정보를 상기 복수의 IoT 기기들로 리턴할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 리턴된 상기 기지국과의 분배된 통신 시도 시간에 관한 정보와 현재 상기 기지국의 트래픽 정보가 포함된 스케줄링 정보를 획득하여, 상기 기지 국의 네트워크 부하에 따른 과부하 발생 여부를 예측할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 프로세서는, 상기 예측 결과 상기 기지국에 과부하 발생이 예측되는 경우, 상기 기분배한 각 IoT 기기의 통신 시도 시간 분배 정보를 리셋하여 재분배하되, 상기 재분배는 그룹 단위로 통신 시도 시간을 분배 또는 상기 각 IoT 기기에 대해 기설정된 통신 시도 시간을 이전과다르게 분배 설정할 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따르면, 상기 획득하는 IoT 기기의 식별 정보에는 해당 IoT 기기 의 시리얼 넘버가 포함될 수 있다. 본 개시의 다양한 실시예들 중 적어도 하나에 따른 전자장치에 의해서, 물류 IoT 기기들, 기지국 및 서버 간의 통신 제어 방법은, 게이트웨이를 탐색하는 단계; 상기 게이트웨이가 탐색되는 경우, 복수의 통신모듈 중 특정 통신 모듈이 활성화되도록 신호를 전송하는 단계; 및 상기 활성화된 제1 통신 모듈을 통해 각 IoT 기기와 서버 가 통신하도록 제어하는 단계를 포함하고, 상기 복수의 통신모듈에는 BLE 통신 모듈과 상기 기지국을 이용하는 LTE 통신 모듈이 포함되고, 상기 특정 통신 모듈은 BLE 통신 모듈일 수 있다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 다양한 실시예들 중 적어도 하나에 따르면, 상황에 따라 적응적으로 통신 방식을 선택하여, IoT 기기 와 서버 사이에 통신이 장애가 발생하지 않고 통신이 원활하게 이루어질 수 있도록 하는 장치 및 방법을 제공할 수 있는 이점이 있다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시 전체에 걸쳐 동일 참조 부호는 동일 구성요소를 지칭한다. 본 개시가 실시예들의 모든 요소들을 설명하"}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "는 것은 아니며, 본 개시가 속하는 기술분야에서 일반적인 내용 또는 실시예들 간에 중복되는 내용은 생략한다. 명세서에서 사용되는 '부, 모듈, 부재, 블록'이라는 용어는 소프트웨어 또는 하드웨어로 구현될 수 있으며, 실 시예들에 따라 복수의 '부, 모듈, 부재, 블록'이 하나의 구성요소로 구현되거나, 하나의 '부, 모듈, 부재, 블록'이 복수의 구성요소들을 포함하는 것도 가능하다. 명세서 전체에서, 어떤 부분이 다른 부분과 \"연결\"되어 있다고 할 때, 이는 직접적으로 연결되어 있는 경우뿐 아니라, 간접적으로 연결되어 있는 경우를 포함하고, 간접적인 연결은 무선 통신망을 통해 연결되는 것을 포함 한다. 또한 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 명세서 전체에서, 어떤 부재가 다른 부재 \"상에\" 위치하고 있다고 할 때, 이는 어떤 부재가 다른 부재에 접해 있는 경우뿐 아니라 두 부재 사이에 또 다른 부재가 존재하는 경우도 포함한다. 제1, 제2 등의 용어는 하나의 구성요소를 다른 구성요소로부터 구별하기 위해 사용되는 것으로, 구성요소가 전 술된 용어들에 의해 제한되는 것은 아니다. 단수의 표현은 문맥상 명백하게 예외가 있지 않는 한, 복수의 표현을 포함한다. 각 단계들에 있어 식별부호는 설명의 편의를 위하여 사용되는 것으로 식별부호는 각 단계들의 순서를 설명하는 것이 아니며, 각 단계들은 문맥상 명백하게 특정 순서를 기재하지 않는 이상 명기된 순서와 다르게 실시될 수 있다. 이하 첨부된 도면들을 참고하여 본 개시의 작용 원리 및 실시예들에 대해 설명한다. 본 명세서에서 '본 개시에 따른 장치'는 연산 처리를 수행하여 사용자에게 결과를 제공할 수 있는 다양한 장치 들이 모두 포함된다. 예를 들어, 본 개시에 따른 장치는, 컴퓨터, 서버 장치 및 휴대용 단말기를 모두 포함하거 나, 또는 어느 하나의 형태가 될 수 있다. 여기에서, 상기 컴퓨터는 예를 들어, 웹 브라우저(WEB Browser)가 탑재된 노트북, 데스크톱(desktop), 랩톱 (laptop), 태블릿 PC, 슬레이트 PC 등을 포함할 수 있다. 상기 서버 장치는 외부 장치와 통신을 수행하여 정보를 처리하는 서버로써, 애플리케이션 서버, 컴퓨팅 서버, 데이터베이스 서버, 파일 서버, 게임 서버, 메일 서버, 프록시 서버, 웹 서버 등을 포함할 수 있다. 상기 휴대용 단말기는 예를 들어, 휴대성과 이동성이 보장되는 무선 통신 장치로서, PCS(Personal Communication System), GSM(Global System for Mobile communications), PDC(Personal Digital Cellular), PHS(Personal Handyphone System), PDA(Personal Digital Assistant), IMT(International Mobile Telecommunication)-2000, CDMA(Code Division Multiple Access)-2000, W-CDMA(W-Code Division Multiple Access), WiBro(Wireless Broadband Internet) 단말, 스마트 폰(Smart Phone) 등과 같은 모든 종류의 핸드헬드 (Handheld) 기반의 무선 통신 장치와 시계, 반지, 팔찌, 발찌, 목걸이, 안경, 콘택트 렌즈, 또는 머리 착용형 장치(HMD: head-mounted device) 등과 같은 웨어러블 장치를 포함할 수 있다. 본 개시에 따른 인공지능과 관련된 기능은 프로세서와 메모리를 통해 동작된다. 프로세서는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU, AP, DSP(Digital Signal Processor) 등 과 같은 범용 프로세서, GPU, VPU(Vision Processing Unit)와 같은 그래픽 전용 프로세서 또는 NPU와 같은 인 공지능 전용 프로세서일 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기 정의된 동작 규칙 또는 인 공지능 모델에 따라, 입력 데이터를 처리하도록 제어한다. 또는, 하나 또는 복수의 프로세서가 인공지능 전용 프로세서인 경우, 인공지능 전용 프로세서는, 특정 인공지능 모델의 처리에 특화된 하드웨어 구조로 설계될 수 있다. 기 정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만 들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로 써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미 한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버 및/ 또는 시스템을 통해 이루어질 수도 있다. 학습 알고리즘의 예로는, 지도형 학습(supervised learning), 비지도 형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)이 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 복수의 신경망 레이어들 각각은 복수의 가중치들 (weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경 망 연산을 수행한다. 복수의 신경망 레이어들이 갖고 있는 복수의 가중치들은 인공지능 모델의 학습 결과에 의 해 최적화될 수 있다. 예를 들어, 학습 과정 동안 인공지능 모델에서 획득한 로스(loss) 값 또는 코스트(cost) 값이 감소 또는 최소화되도록 복수의 가중치들이 갱신될 수 있다. 인공 신경망은 심층 신경망(DNN: Deep Neural Network)를 포함할 수 있으며, 예를 들어, CNN(Convolutional Neural Network), DNN(Deep Neural Network), RNN(Recurrent Neural Network), RBM(Restricted Boltzmann Machine), DBN(Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 또는 심층 Q-네트워크(Deep Q-Networks) 등이 있으나, 전술한 예에 한정되지 않는다. 본 개시의 예시적인 실시예에 따르면, 프로세서는 인공지능을 구현할 수 있다. 인공지능이란 사람의 신경세포 (biological neuron)를 모사하여 기계가 학습하도록 하는 인공신경망(Artificial Neural Network) 기반의 기계 학습법을 의미한다. 인공지능의 방법론에는 학습 방식에 따라 훈련 데이터로서 입력 데이터와 출력 데이터가 같 이 제공됨으로써 문제(입력 데이터)의 해답(출력데이터)이 정해져 있는 지도학습(supervised learning), 및 출 력 데이터 없이 입력데이터만 제공되어 문제(입력 데이터)의 해답(출력 데이터)이 정해지지 않는 비지도학습 (unsupervised learning), 및 현재의 상태(State)에서 어떤 행동(Action)을 취할 때마다 외부 환경에서 보상 (Reward)이 주어지는데, 이러한 보상을 최대화하는 방향으로 학습을 진행하는 강화학습(reinforcement learning)으로 구분될 수 있다. 또한, 인공지능의 방법론은 학습 모델의 구조인 아키텍처에 따라 구분될 수도 있는데, 널리 이용되는 딥러닝 기술의 아키텍처는, 합성곱신경망(CNN; Convolutional Neural Network), 순환신 경망(RNN; Recurrent Neural Network), 트랜스포머(Transformer), 생성적 대립 신경망(GAN; generative adversarial networks) 등으로 구분될 수 있다.본 장치와 시스템은 인공지능 모델을 포함할 수 있다. 인공지능 모델은 하나의 인공지능 모델일 수 있고, 복수 의 인공지능 모델로 구현될 수도 있다. 인공지능 모델은 뉴럴 네트워크(또는 인공 신경망)로 구성될 수 있으며, 기계학습과 인지과학에서 생물학의 신경을 모방한 통계학적 학습 알고리즘을 포함할 수 있다. 뉴럴 네트워크는 시냅스의 결합으로 네트워크를 형성한 인공 뉴런(노드)이 학습을 통해 시냅스의 결합 세기를 변화시켜, 문제 해 결 능력을 가지는 모델 전반을 의미할 수 있다. 뉴럴 네트워크의 뉴런은 가중치 또는 바이어스의 조합을 포함할 수 있다. 뉴럴 네트워크는 하나 이상의 뉴런 또는 노드로 구성된 하나 이상의 레이어(layer)를 포함할 수 있다. 예시적으로, 장치는 input layer, hidden layer, output layer를 포함할 수 있다. 장치를 구성하는 뉴럴 네트 워크는 뉴런의 가중치를 학습을 통해 변화시킴으로써 임의의 입력(input)으로부터 예측하고자 하는 결과 (output)를 추론할 수 있다. 프로세서는 뉴럴 네트워크를 생성하거나, 뉴럴 네트워크를 훈련(train, 또는 학습(learn)하거나, 수신되는 입력 데이터를 기초로 연산을 수행하고, 수행 결과를 기초로 정보 신호(information signal)를 생성하거나, 뉴럴 네 트워크를 재훈련(retrain)할 수 있다. 뉴럴 네트워크의 모델들은 GoogleNet, AlexNet, VGG Network 등과 같은 CNN(Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restrcted Boltzman Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Classification Network 등 다양한 종류의 모델들을 포함할 수 있으나 이에 제한되지는 않는다. 프로세서는 뉴럴 네트워크의 모델들에 따른 연산을 수행하기 위한 하나 이상의 프로세서를 포함할 수 있다. 예를 들어 뉴럴 네트워크는 심층 뉴럴 네트워크 (Deep Neural Network)를 포함할 수 있다. 뉴럴 네트워크는 CNN(Convolutional Neural Network), RNN(Recurrent Neural Network), 퍼셉트론(perceptron), 다층 퍼셉트론(multilayer perceptron), FF(Feed Forward), RBF(Radial Basis Network), DFF(Deep Feed Forward), LSTM(Long Short Term Memory), GRU(Gated Recurrent Unit), AE(Auto Encoder), VAE(Variational Auto Encoder), DAE(Denoising Auto Encoder), SAE(Sparse Auto Encoder), MC(Markov Chain), HN(Hopfield Network), BM(Boltzmann Machine), RBM(Restricted Boltzmann Machine), DBN(Depp Belief Network), DCN(Deep Convolutional Network), DN(Deconvolutional Network), DCIGN(Deep Convolutional Inverse Graphics Network), GAN(Generative Adversarial Network), LSM(Liquid State Machine), ELM(Extreme Learning Machine), ESN(Echo State Network), DRN(Deep Residual Network), DNC(Differentiable Neural Computer), NTM(Neural Turning Machine), CN(Capsule Network), KN(Kohonen Network) 및 AN(Attention Network)를 포함 할 수 있으나 이에 한정되는 것이 아닌 임의의 뉴럴 네트워크를 포함할 수 있음은 통상의 기술자가 이해할 것이다. 본 개시의 예시적인 실시예에 따르면, 프로세서는 GoogleNet, AlexNet, VGG Network 등과 같은 CNN(Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restrcted Boltzman Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Classification Network, Generative Modeling, eXplainable AI, Continual AI, Representation Learning, AI for Material Design, 자 연어 처리를 위한 BERT, SP-BERT, MRC/QA, Text Analysis, Dialog System, GPT-3, GPT-4, 비전 처리를 위한 Visual Analytics, Visual Understanding, Video Synthesis, ResNet 데이터 지능을 위한 Anomaly Detection, Prediction, Time-Series Forecasting, Optimization, Recommendation, Data Creation 등 다양한 인공지능 구 조 및 알고리즘을 이용할 수 있으며, 이에 제한되지 않는다. 이하, 첨부된 도면을 참조하여 본 개시의 실시예를 상세하게 설명한다. 본 개시에서 IoT(Internet of Things) 기기(들), 기지국(base station) 및 서버 사이에 통신 시 통신을 제어하 는 시스템, 장치 및 방법을 개시한다. 이 때, IoT 기기(들)은 물류 시스템(distributing system)에서 이용하는 기기를 나타낼 수 있다. 한편, IoT 기기(들)은 소정 기능을 수행하기 위한 디지털 장치일 수도 있고, 각종 데이 터를 센싱하기 위한 센서 형태일 수도 있다. 본 명세서에서 기본적으로 IoT 기기(들)과 서버는 물류와 관련된 공간에서 데이터를 주고받는 통신을 예로 하여 설명하며, 물류와 관련된 공간은 반드시 물품이 쌓여 있는 창고만에 한정되는 개념은 아닐 수 있다. 한편, IoT 기기(들)과 서버는 다양한 통신 방식으로 데이터 커뮤니케이션을 수행할 수 있는데, 본 개시에서는 상기 다양한 통신 방식 중 설명의 편의상 다음 2개의 통신 방식, 예컨대 BLE(Bluetooth Low Energy)와 LTE(Long Term Evolution)를 예로 하여 설명한다. 한편, 상기 BLE는 지그비(Zigbee)로 대체되거나 함께 사용될 수도 있고, 상기 LTE는 4세대 이동 통신만을 나타내는 것은 아니며, LTE-A(Advanced), 5G(Fifth Generation) 등도 포함하는 의미일 수 있다. 따라서, 상기에서, 기지국은 LTE 통신을 지원하는 기지국을 나타낼 수 있다. 다 만, 본 개시가 이에 한정되는 것이 아님을 미리 밝혀둔다. 이하 본 개시의 다양한 실시예에 대해 첨부된 도면을 참조하여 상세하게 설명한다. 도 1은 본 개시의 일실시예에 따른 물류 시스템의 개략도이다. 도 2는 도 1의 IoT 기기의 구성 블록도이다. 도 3은 도 1의 서버의 구성 블록도이다. 도 1을 참조하면, 본 개시의 다양한 실시예들 중 적어도 하나에 따른 물류 시스템은, n개(여기서, n은 자연 수)의 IoT 기기들, 게이트웨이(gateway), 기지국(base station), 서버 등을 포함하여 구 성될 수 있다. 본 개시에 따르면, 도 1의 구성요소들 중 일부는 실시예에 따라 비활성화(deactivation)될수도 있다. IoT 기기는 물류 및 공급망 분야에서 실시간 모니터링, 데이터 분석 등을 통해 제어를 하기 위한 구성일 수 있다. 이러한 IoT 기기는 전술한 바와 같이, 소정 기능 수행을 위한 디지털 기기, 다양한 데이터(환경 데이터 포함) 수집을 위한 스마트 센서 등 중 어느 하나의 형태일 수 있다. 도 1에서 각 IoT 기기는 서로 동일한 타입의 기기일 필요는 없다. 도 1과 2를 참조하면, IoT 기기는 서버와 통신하여 데이터를 주고받기위해 통신 모듈을 포함할 수 있 다. 이 때, 통신 모듈은 각 IoT 기기에적어도 2개가 구비될 수 있으며, 이 경우 각 통신 모듈은 서로 다른 통신 방식 내지 통신 프로토콜을 지원하는 통신 모듈일 수 있다. 이에 대해서는 후술하는 도 2에서 보다 상세하 게 설명한다. 게이트웨이는 일반적으로 하나의 네트워크에서 중개자 역할을 수행하는 장치로, 서로 다른 네트워크 간에 데이터를 전달하거나 변환할 수 있다. 게이트웨이는 시스템 구성들 간의 통신을 원활하게 하기 위해 데이 터 형식을 변환하거나 프로토콜 간의 호환성을 제공할 수 있다. 도 1을 참조하면, 게이트웨이는 IoT 기기와 서버 사이에 배치되어, 상기 IoT 기기와 서버 사이의 통신을 지원할 수 있다. 게이트웨이는 본 개시에서 제1 통신 방식(또는 프로토콜(예를 들어, BLE)을 지원할 수 있다. 통상 BLE 통 신 방식은 저전력 블루투스 기술로 IoT 기기에서 직접 호스트(Host), 예를 들어 서버와 통신할 수도 있도록 지원할 수도 있고, 경우에 따라서는 IoT 기기가 게이트웨이를 통해 서버와 통신할 수도 있다. 이러한 의미에서, 게이트웨이는 다수의 IoT 기기와 통신하며, 그 데이터를 서버로 전달할 수 있다. 기지국은 게이트웨이와 유사하게 IoT 기기와 서버 사이에 배치되어, 상기 IoT 기기와 서버 사이의 통신을 지원할 수 있다. 기지국은 특히, 본 개시에서 제2 통신 방식(예를 들어, LTE)을 지원할 수 있다. 서버는 원격에 위치할 수 있으며, IoT 기기에 의해 데이터를 획득하여 처리 및 저장하고, 제어 커맨 드를 IoT 기기로 리턴(return)하거나 전송하여 상기 IoT 기기를 제어할 수 있다. 실시예에 따라, 서 버는 AI 엔진(Artificial Intelligence (AI) device)를 포함할 수 있다. 게이트웨이는 경우에 따라, IoT 기기의 데이터를 변환하여, 기지국으로 전달하여 서버로 업로드(upload) 또는 전송할 수도 있다. 한편, IoT 기기를 모니터링, 제어 등을 수행하는 관리자 단말기(미도시)가 물류 시스템의 일 구성일 수 도 있다. 본 개시에서 기지국의 과부하에 따른 통신 장애를 방지하여 통신이 원활하게 이루어질 수 있도록 하기 위 한 컨트롤러의 역할은 서버 또는 IoT 기기에 자체적으로 포함된 제어부가 수행할 수 있다.도 2를 참조하여, IoT 기기의 구성에 대해 설명한다. 도 2를 참조하면, IoT 기기는 메모리와 프로세서(processor)를 포함하여 구성될 수 있다. 여기서, 프 로세서에는 적어도 둘의 통신모듈(즉, 제1 통신 모듈, 제2 통신 모듈), 센서모듈, 데이터처리부 , 제어부 등 중 적어도 하나 이상이 포함될 수 있다. 제1 통신모듈은 무선 통신 인터페이스 환경을 제공하여, IoT 기기가 서버와 데이터를 주고받을 수 있도록 지원할 수 있다. 제1 통신모듈은 BLE 통신 모듈일 수 있으나, 이에 한정되는 것은 아니다. 제2 통신모듈은 무선 통신 인터페이스 환경을 제공하여, IoT 기기가 서버와 데이터를 주고받을 수 있도록 지원할 수 있다. 제2 통신모듈은 LTE, LTE-A, LTE-M, 5G, 와이파이 통신 모듈일 수 있다. 센서모듈은, 적어도 하나 이상의 세서를 포함하여 다양한 데이터를 센싱할 수 있다. 데이터처리부는 센서부를 통해 센싱된 데이터를 서버로 전송하기 위하여 필요한 처리할 수 있다. 제어부는 IoT 기기의 각 구성요소의 동작을 제어할 수 있다. 제어부의 구체적인 동작은 후술한 다. 메모리는 다양한 정보를 미리 내장하거나 내장된 정보를 업데이트할 수 있다. 메모리는 IoT 기기 에서 획득하는 데이터나 서버와 통신하여 획득되는 데이터를 일시 저장할 수 있다. 메모리는 필요에 따라 센서모듈을 통해 센싱된 데이터의 처리나 유효성 판단 등에 관해 필요한 어플 리케이션, 프로그램 등 소프트웨어나 관련 처리 엔진 등에 관한 정보가 저장할 수 있다. 처리 엔진에는 예를 들 어, 인공지능 엔진이 포함될 수 있다. 이러한 엔진은 실시예에 따라 제어부 내에 구현될 수 있다. 도 1 및 3을 참조하면, 서버는 DB(database)와 프로세서를 포함하여 구성될 수 있다. 프로세서는 제1 통신모듈, 제2 통신모듈, 데이터수신부, 데이터처리부, 제어부 등을 포함하여 구성될 수 있다. 제1 통신모듈과 제2 통신모듈에 대한 기본적인 설명은 도 2에서 전술한 내용을 참조할 수 있다. 다만, 서버는 도 2와 달리, IoT 기기에서 제1 통신 방식을 이용하여 데이터를 전송하는 경우에는 제1 통신모듈을 활성화하고, 제2 통신 방식을 이용하여 데이터를 전송하는 경우에는 제2 통신모듈을 활성 활 수 있다. 데이터수신부 역시 기본적인 설명은 도 2에서 기술한 내용과 대동소이하다. 다만, 데이터수신부는 IoT 기기에서 전송하는 각종 데이터를 다양한 기준에 따라 추출, 분류 등을 수행할 수 있다. 데이터처리부는 데이터수신부를 통해 획득되는 IoT 기기의 각종 데이터를 포맷에 맞게 가공하여 처리할 수 있다. 제어부는 서버 또는 프로세서의 각 구성요소의 동작을 제어할 수 있다. 상세 동작 설명은 후술한다. 제어부는 IoT 기기로부터 획득된 데이터의 처리를 위하여 인공지능 엔진(미도시)을 더 포함할 수 있 다. 도 2 내지 3에서, 메모리와 DB는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), SSD 타입(Solid State Disk type), SDD 타입(Silicon Disk Drive type), 멀티미디어 카드 마이크 로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(random access memory; RAM), SRAM(static random access memory), 롬(read-only memory; ROM), EEPROM(electrically erasable programmable read-only memory), PROM(programmable read-only memory), 자기 메모리, 자기 디스크 및 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 도 2 내지 3에서, 메모리나 DB는 편의상 1개만 도시하였으나, 이에 한정되는 것은 아니며, 복수 개일 수 있다. 도 2 내지 3에서, 메모리(160, 260)는 편의상 단말기에 내장된 형태로 도시하고 설명하였으나, 이에 한정 되는 것은 아니다. 예컨대, 도 2 내지 3에서, 메모리(160, 260)는 외부 또는 원격(remote)에 위치한 DB 서버 형 태로 구현될 수도 있다.도 2 내지 도 3에서 메모리와 프로세서는 각각 별개의 칩으로 구현될 수 있다. 또는, 메모리와 프로세서는 단일 칩(single chip)으로 구현될 수도 있다. 도 2 내지 도 3에 도시된 구성 요소들의 성능에 대응하여 적어도 하나의 구성요소가 추가되거나 삭제될 수 있다. 또한, 구성 요소들의 상호 위치는 시스템의 성능 또는 구조에 대응하여 변경될 수 있다는 것은 당해 기술 분야에서 통상의 지식을 가진 자에게 용이하게 이해될 것이다. 한편, 도 2 내지 도 3에서 도시된 각각의 구성요소는 소프트웨어 및/또는 Field Programmable Gate Array (FPGA) 및 주문형 반도체(ASIC, Application Specific Integrated Circuit)와 같은 하드웨어 구성요소를 의미 한다. 도 4 내지 6은 본 개시에 따른 물류 시스템의 통신 제어 방법을 설명하기 위해 도시한 순서도이다. 본 개시의 다양한 실시예들 중 적어도 하나에 따른 IoT 기기 또는 프로세서의 관점에서 통신 제어 방법은, 다음과 같이 처리될 수 있다. 이 때, IoT 기기나 프로세서는, 서버나 프로세서로 대체될 수 있다. S110 단계에서, 프로세서는 게이트웨이를 탐색할 수 있다. 여기서, 프로세서에서 게이트웨이를 탐색하는 것은, 기지국의 과부하에 따른 통신 장애를 방지하기 위하여, 기지국의 이용을 하지 않거나 최소화하기 위함일 수 있다. 다시 말해, 제1 통신 모듈을 통해 BLE 통신 방식으로 IoT 기기의 데이터를 서버로 전송하기 위함이다. S120 단계에서, 프로세서는 게이트웨이가 탐색된 경우에는, 제1 통신 모듈을 활성화할 수 있다. S120 단계와 관련하여, 프로세서는 제1 통신 모듈이 소정 이유로 이미 활성화가 되어 있는 경우에는, 본 단계는 스킵(skip)될 수도 있다. S130 단계에서, 프로세서는 활성화된 제1 통신 모듈을 통해 데이터를 서버로 전송할 수 있다. 프로세서는 원칙적으로 S110 내지 S130 단계를 통해, IoT 기기의 데이터를 서버로 모두 전송할 수 있 다. 그럼에도 불구하고, 프로세서는 네트워크 사정의 변화나 변경 등을 계속하여 모니터링할 수 있다. S140 단계에서, 프로세서는 IoT 기기의 데이터가 서버로 잘 전송되었는지, 즉 데이터 전송 실패 여부 를 모니터링하여 판단할 수 있다. S150 단계에서, 프로세서는 만약, S140 단계에서 판단 결과, IoT 기기의 전송 데이터 중 일부라도 전송에 실패한 것으로 판단된 경우에는, 제2 통신 모듈을 활성화되도록 제어할 수 있다. S160 단계에서, 프로세서는 제2 통신 모듈을 통해 IoT 기기의 데이터를 서버로 전송할 수 있다. S160 단계에서, 제2 통신 모듈을 통해 서버로 전송되는 데이터는, 원래 제1 통신 모듈을 통해 전송한 데이터 전체 또는 데이터 전송 실패의 원인이 된 데이터만 서버로 재전송할 수 있다. 전자의 경우, 데이터 전송 실패로 판단된 경우, 데이터 특성에 따라 해당 부분만 문제가 될 수도 있으나, 원래 함께 전송되었 어야 할 데이터에 대한 신뢰도는 아무래도 이전 대비 낮을 수밖에 없다. 즉, 프로세서는 서버와 통신함에 있어서, 서버는 제2 통신 방식을 통한 서버와 통신할 수 있다. 다음으로, 도 5를 참조하면, S210 단계에서, 프로세서는 기지국이 과부하 상태(또는 과부하에 따른 통신 장애가 발생한 상태)인지 판단할 수 있다. 이 때, 기지국의 과부화는 계속하여 모니터링 및 확인하고, 상황을 메모리에 업데이트할 수 있다. S220 단계에서, 프로세서는 기지국이 과부하 상태로 판단 또는 예측되는 경우에는, 제2 통신 모듈를 통해 서버로 데이터를 전송할 수 있도록, 각 IoT 기기의 통신 시도 시간을 시분할 분배 제어할 수 있다. 여기서, 시분할 분배라 함은, 다양한 정보를 참조하여 미리 약속된 정해진 시간을 대상 IoT 기기의 개수로 구분 하여 분배하고, 분배 순서에 대한 정보는 다시 대상 IoT 기기(일부) 또는 IoT 기기 전체로 전송할 수 있다. S230 단계에서, 프로세서는 분배 순서에 따라 각 IoT 기기의 통신 시도를 제어할 수 있다. 마지막으로, 도 6을 참조하면, S301 단계에서, 프로세서는 제1 통신 모듈을 활성화할 수 있다. S303 단계에서, 프로세서는 게이트웨이가 탐색되는지 판단할 수 있다. 한편, S301 단계와 S303 단계는 서로 순서가 변경될 수 있다. S305 단계에서, 프로세서는 S303 단계에서 판단 결과 만약 게이트웨이가 탐색되지 않는 경우에는, 제2 통 신 모듈을 활성화할 수 있다. S307 단계에서, 프로세서는 제2 통신 모듈이 활성화되었으며, 제1 기지국이 과부하 상태인지 판단할 수 있다. S309 단계에서, 프로세서는 S307 단계 판단 결과, 만약 S307 단계의 제1 기지국이 과부하 상태로 판단되면, 제1 기지국을 대신하여 제2 기지국이 탐색되는지 판단할 수 있다. S311 단계에서, 프로세서는 S309 단계 판단 결과 만약 제2 기지국이 탐색되면, 제2 기지국도 과부하 상태인지 판단할 수 있다. S313 단계에서, 프로세서는 상기 S311 단계 판단 결과 만약 제2 기지죽고 과부하 상태가 아니라면, 제2 기지국 을 통하여 통신 시도하도록 제어할 수 있다. S315 단계에서, 프로세서는 S309 단계에서 제2 기지국이 탐색되지 않았거나 S311 단계에서 탐색된 제2 기지국이 과부하 상태인 경우에는, 각 IoT 기기의 통신 시도를 전술한 바와 같이, 시분할하여 분배할 수 있다. S317 단계에서, 프로세서는 분배 순서에 따라 각 IoT 기기의 통신 시도를 제어할 수 있다. S319 단계에서, 프로세서는 서버와의 통신을 제어할 수 있다. 도 7 내지 10에서는 도 4 내지 6에 따른 방법을 설명하기 위해 도시한 도면이다. 도 7을 참조하면, 전술한 바와 같이, 공간 또는 네트워크에는 복수의 IoT 기기들(1 내지 k, 여기서 k는 자연 수), 게이트웨이 및 기지국이 모두 있는 경우, 상기 복수의 IoT 기기(1 내지 k)는 기지국이 아 닌 게이트웨이를 이용하여 서버와 통신을 수행할 수 있다. 도 8에서는 하나의 공간이라고 하더라도 2개의 그룹으로 나뉠 수 있다. 제1 그룹에는 복수의 IoT 기기들(1 내지 k)와 제1 게이트웨이가 존재하고, 제2 그룹에는 복수의 IoT 기기들(k+1 내지 m, 여기서 m은 자연수)과 제2 게이트웨이가 존재할 수 있다. 이는 동일한 공간 내지 동일 네트워크를 이용하는 경우라고 하더라도, 기본 적으로 BLE 통신에서 허용되는 거리가 상대적으로 짧기 때문에 하나의 게이트웨이에서 담당할 수 있는 IoT 기기 들을 그룹핑한 것일 수 있다. 결국, 도 8에서는 제1 그룹은 제1 게이트웨이를 통해서 서버와 BLE 통신을 수행할 수 있으며, 제2 그 룹은 제2 게이트웨이를 통해서 서버와 BLE 통신을 수행할 수 있다. 다음으로, 도 9에서는 도 8과 유사한 상황에서, 제1 그룹은 전술한 도 8의 제1 그룹과 동일하나, 제2 그룹은 게 이트웨이가 탐색되지 않는 경우로 볼 수 있다. 이 경우, 제2 그룹은 게이트웨이가 탐색되지 않으므로, IoT 기기들(k+1 내지 m)은 BLE 통신이 아닌 기지국을 통해서 LTE 통신 방식으로 서버와 통 신할 수 있다. 제2 그룹의 경우에는 기지국을 이용하기 때문에, 기지국에 과부하 발생 우려가 있으므로, 각 IoT 기기들(k+1 내지 m)의 식별 정보를 이용하여 각 IoT 기기의 기지국과 통신 시도 시간에 대해 서로 중복되지 않도록 시분할하여 통신 시도가 제어될 수 있다. 이 때, 상기에서 서로 중복되지 않는다고 하였으나 이에 한정되는 것은 아니며, 과부하 발생 우려가 높지 않은 경우에는 일부 IoT 기기들을 동시에 접속할 수 있도 록 분배할 수도 있다. 마지막으로, 도 10은 도 9와 유사한 상황이나, 제1 그룹에서 IoT 기기들(1 내지 k)은 전술한 도 8 내지 9의 제1 그룹과 같이 게이트웨이를 서버와 BLE 통신을 수행할 수도 있으나, 게이트웨이는 제2 기지국 를 거처 서버와 통신할 수도 있다. 본 개시에서는 주로 IoT 기기나 서버 단의 프로세서에서 다양한 제어를 하는 것으로 설명하였으나, 관리자 단말기(미도시)에서 상기 프로세서의 기능을 대신할 수도 있다. 이 경우, IoT 기기나 서버 단 의 프로세서는, 관련 데이터를 관리자 단말기로 전송하고, 관리자 단말기에서 IoT 기기나 서버를 제 어할 수도 있다. 예컨대, IoT 기기나 서버 단의 프로세서에서 통신 방식을 결정하는 것이 아니라 관 리자 단말기에서 게이트웨이의 존재 유무와 기지국의 과부하 발생 가능성 예측 등에 대한 데이터를 종합 고려하여, 통신 방식(예컨대, BLE 통신 또는 LTE 통신)을 결정하여 제어할 수도 있다.또한, 본 개시에서 비록 하나의 통신 방식이 결정되었다고 하더라도 이후 계속하여 적용되는 것이 아니라, 네트 워크 사정이나 트래픽 등 다양한 상황을 고려하여, 주기적으로 통신 방식의 전환 여부를 확인하고 확인 결과에 따라 전환 등 처리를 할 수 있다. 이 때, 상기 리턴된 상기 기지국과의 분배된 통신 시도 시간에 관한 정보와 현재 상기 기지국의 트래픽 정보가 포함된 스케줄링 정보를 획득하여, 상기 기지국의 네트워크 부하에 따른 과 부하 발생 여부를 예측하여 이에 기반할 수도 있다. 본 개시에서는 프로세서에 인공지능 엔진 등이 포함되어, 각 IoT 기기나 그룹에서 이전에 결정하여 통신한 통신 방식 등에 대한 이력 정보와 피드백 데이터 등을 고려하여, 별도의 관리자의 개입이 없더라도 자동으로 서버 와 통신이 수행되도록 할 수 있다. 상기의 경우에, 문제가 발생하거나 변동 사항이 있으면, 관리자 단말기 (미도시)로 보고하고 결정에 따를 수 있다. 본 개시에서는 시간, 연결 시도 IoT 기기의 개수 등 다양한 사정을 고려하여, 주기/비주기로 계속하여 별도 또 는 통신 방식 판단 시에, 기지국의 과부하 발생 여부에 대한 예측(또는 확률)을 계산하고, 이를 참고하여 통신 방식에 참고하거나 관리자 단말기로 보고할 수 있다. 또한, 상기 기지국의 과부하 발생 가능성 예측 내지 확률에 대한 피드백 데이터는 추후 인공지능 엔진 등에 업데이트되어 본 개시에 따른 통신 방식 결정에 참 고될 수 있다. 본 개시는 전술한 둘 이상의 실시예들의 조합된 형태로도 투약 안내 가이드를 제공할 수 있다. 한편, 개시된 실시예들은 컴퓨터에 의해 실행 가능한 명령어를 저장하는 기록매체의 형태로 구현될 수 있다. 명 령어는 프로그램 코드의 형태로 저장될 수 있으며, 프로세서에 의해 실행되었을 때, 프로그램 모듈을 생성하여 개시된 실시예들의 동작을 수행할 수 있다. 기록매체는 컴퓨터로 읽을 수 있는 기록매체로 구현될 수 있다. 컴퓨터가 읽을 수 있는 기록매체로는 컴퓨터에 의하여 해독될 수 있는 명령어가 저장된 모든 종류의 기록 매체 를 포함한다. 예를 들어, ROM(Read Only Memory), RAM(Random Access Memory), 자기 테이프, 자기 디스크, 플 래쉬 메모리, 광 데이터 저장장치 등이 있을 수 있다."}
{"patent_id": "10-2023-0128510", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상에서와 같이 첨부된 도면을 참조하여 개시된 실시예들을 설명하였다. 본 개시가 속하는 기술분야에서 통상 의 지식을 가진 자는 본 개시의 기술적 사상이나 필수적인 특징을 변경하지 않고도, 개시된 실시예들과 다른 형 태로 본 개시가 실시될 수 있음을 이해할 것이다. 개시된 실시예들은 예시적인 것이며, 한정적으로 해석되어서 는 안 된다."}
{"patent_id": "10-2023-0128510", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일실시예에 따른 물류 시스템의 개략도이다. 도 2는 도 1의 IoT 기기의 구성 블록도이다. 도 3은 도 1의 서버의 구성 블록도이다. 도 4 내지 6은 본 개시에 따른 물류 시스템의 통신 제어 방법을 설명하기 위해 도시한 순서도이다. 도 7 내지 10은 도 4 내지 6에 따른 방법을 설명하기 위해 도시한 도면이다."}
