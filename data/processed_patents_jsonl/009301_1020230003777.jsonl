{"patent_id": "10-2023-0003777", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0111862", "출원번호": "10-2023-0003777", "발명의 명칭": "Yolov5기반의 반도체REEL x-ray 이미지 탐지 및 그 방법", "출원인": "박진우", "발명자": "박진우"}}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "X-RAY머신 계수기로부터 이미지 정보를 얻어 YOLOV5개선모델을 통해서 딥러닝을 훈련하고 , 그 결과 빠르고 정확하게 X-RAY이미지 내의 반도체 부품 REEL내의 반도체 수량을 파악할 수 있는 알고리즘."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 알고리즘은,상기 YOLOV5모델을 수정한 네트워크 구조로서 이미지의 특징을 찾아내고 검출하는 구조로 기존의 네트워크에1LAY을 BACKBONE, NECK, HEAD에 각각 추가하여 작은 물체를 DETECTION하는 특징으로서 프로그램 ."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 X-RAY이미지,상기 수신한 3072*3072 사이즈로 , 상기 X-RAY이미지를 라벨링하여 이미지를 딥러닝하여 객체를 탐지하고 객체를 역할을 수행하는 특징으로서,상기 X-RAY REEL이미지를 추론하여 REEL내의 반도체 수량 숫자를 나타내는 특징으로 실시간 정보를 제공하는 시스템."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서, 상기 알고리즘은,상기 BACKBONE에서 CONV+ CSP를 갖고;NECK에서 UPSAMPLE, CONCATENATION 및Head에서 앵커박스를 추가로 1개 더 갖는 것을 특징으로 하는 시스템."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 3에 있어서,상기 반도체 숫자는,상기 수신한 이미지의 왼쪽 상단에 표시하고, 붉은색으로 라벨을 부품에 표시하여 제공하는 틀을 웹에서 구현한것에 대한 것을 특징으로 하는 시스템."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "web에서 구현하는 반도체 reel 숫자 추론 방법은 이미지를 해당 사이트에 입력하고 추론하도록 하는 방법으로실시간으로 해당이미지의 숫자를 파악해서 알려주는 것을 특징으로 하는 시스템."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서,상기 추론방법은,공개특허 10-2024-0111862-3-상기 YOLOV5에서 수정된 모델로서 반도체 뿐 아니라 타 모델에도 최적의 BEST.PT값을 얻어 내는 모델로서 사용하며 이 모델이 다양한 부분의 산업의 객체 인식에도 적용되는 범용적인 특징을 가지는 이미지 추출 및 추론 제어 방법."}
{"patent_id": "10-2023-0003777", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 6에 있어서,상기 알고리즘은,상기 추론한 이미지의 숫자를 실시간 표시할 수 있으며, 이미지를 투입하고 추론하고 산출하여 새로운 이미지를얻기 위한 모델링을 하기위한 에이전트 역할을 수행하며,상기 알고리즘은 새로운 개선된 알고리즘의 기초로서 특징을 갖는 역할을 수행하는 프로그램."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 YOLOV5의 모델을 개선하여 이미지 객체의 탐지와 그 숫자를 인식하여 부품의 개수를 표시해주는 알고 리즘에 관한 것으로, 스마트팩토리의 운영 및 일반 자재관리, 출하관리,생산관리,구매관리,경영관리에 매우 효율 적인 정보를 실시간 제공하고 리드타임을 단축하고 재고를 줄이며, 구매계획을 효율적으로 수립할 수 있도록 하 여, SMT및 공장생산 라인의 운영 및 사용자에게 X-RAY머신의 계수를 정확하게 수행할 수 있도록 하는 딥러닝 방 법의 계수정확도를 높인 객체 인식 알고리즘 및 그 방법에 관한 것이다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 YOLOV5기반으로 딥러닝을 실시하여, 반도체 REEL내의 부품을 X-RAY 이미지를 이용하여 탐지하는 그 방법에 관한 것으로, 더욱 상세하게는 반도체가 들어있는 REEL 형태의 포장(PACKAGING) 된 물체를 X-RAY가 사진 을 찍어 이미지를 만들고 이미지를 YOLOV5라는 DEEP LEARNING방법을 이용하여 X-RAY 이미지를 탐지하여 X-RAY 이미지내의 반도체 개수를 셀 수 있도록 하는 정확하고, 효율적으로 재고파악과 자재관리를 할 수 있도록 하는 시스템 및 그 방법에 관한 것이다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "DEEP LEARNING중에 YOLOV5는 최근에 개발된 기술로 미국에서 개발되었으며 일반에게도 공개된 딥러닝 프로그램 이다.YOLOV5의 모델은 딥러닝을 하는 과정에서 사물을 인식하고 위치를 파악하는 학습방법을 채택하고 그 결과 를 추론하여 사물의 명칭을 분류하거나 탐지하여 숫자를 세는 기능을 하는 인공지능프로그램이다. YOLOV5는, 딥러닝 방법 중에서 CONVOLUTION을 이용하는 방법으로 1STAGE방법을 사용하여 매우 빠르고 정확하게 객체인식하여 타 프로그램보다 사용이 용이하면서 효율이 좋다. YOLO(You Only Look Once) 알고리즘은 객체 탐 지를 위한 딥러닝 알고리즘 중 하나이다. 특히 YOLO 알고리즘은 높은 FPS(Frames per second) 성능을 내기 때문 에 실시간성에 적합한 알고리즘이다. 그 중 가장 최근에 제안된 YOLOv5의 아키텍처(Architecture)는 2021년 2월 기준으로 우수함을 나타낸다. 입력 이미지에서 중요한 특징을 추출하는 역할을 하는 모델 백본(Backbone)은 BottleNeck과 CSPNet을 결합하고 활성화 함수로 SiLU 를 사용한 C3 모델을 사용하면서 학습 능력을 향상시켰다. 그러나 YOLOV5, 작은 물체를 찾을 때 특히 반도체와 같이 작은 객체를 구별하거나 인식하는 능력이 낮다. 이는 객체 인식을 하는 프로그램으로서 효율성이 크게 떨어지는 문제점이 있다. 이에 따라 YOLOV5의 모델을 개선하고 작은 물체도 인식할 수 있는 개선된 YOLOV5프로그램을 개발하여 사용되고 있다. 다음으로 본 발명의 기술 분야에 존재하는 선행기술에 대하여 간단 하게 설명하고, 이어서 본 발명이 상기 선행 기술에 비해서 차별적으로 이루고자 하 는 기술적 사항에 대해서 기술하고자 한다. 또한 기존의 YOLOv5s 모델의 구조는 Backbone, Neck 및 Output 모듈로 구성되어 있다. Backbone 모듈은 입력 영상의 특징(feature)을 추출하는 부분으로 3 Х 3 kernel 크기를 갖는 4 개의 콘볼루션 층, 3개의 Bottleneck Cross Stage Partial(CSP) 층 및 1개의 Spatial Pyramid Pooling(SPP) , Object detection 층으로 구성되어 있 다. Bottleneck CSP층은 입력값에 대한 콘볼루션 함수 적용시 잔차연결을 이용하여 입력값의 일부를 출력값으로 반환하는 기능을 하며, SPP층은 크기가 서로 다른kernel을 이용하여 입력값의 다양한 특징을 추출하는 기능을 한다. Neck 모듈은 Backbone 모듈로부터 받은 입력값을 원래 크기로 복원하는 기능을 하며, Backbone 모듈에서 미처 추출하지 못한 입력값의 특징을 추출하는 기능을 한다.그러나 작은 물체 인식에는 한계가 있어 이를 개선 할 필요가 있다. 특히 최근의 딥러닝을 통한 객체인식이 스마트공장 도입으로 MES시스템이 생산현장에서 운용되면서 재고관리 및 자재파악에서 적극 활용이 되고 있다.한편 상기 YOLOV5의 작은 물체의 한계성을 극복하고자 프로그램을 개선하고자 한다. Yolov5의 장점은 CROSS STAGE Partial dense net 을 사용하여 기존 CNN의 정확도는 경량화 후 크게 저하되기 때문에 CNN의 학습 능력을 강화하여 경량화하면서 충분한 정확도를 유지하였으며 이를 통해 불필요한 Densenet의 계산을 줄이고, 계산 병 목현상을 절반으로 줄였으며, 메모리의 비용을 효율적으로 줄여 계산 속도를 높였다. 다음으로, 이어서 본 발명이 상기 선행기술에 비해서 차별적으로 이루고자 하는 기술적 사항에 대해서 기술하고 자 한다. 개발한 모델에서는 Neck 모듈은 Figure 8처럼 6개의 Bottleneck CSP 층, 1 Х 1과3 Х 3 kernel 크기를 갖는 6 개의 콘볼루션 층, 입력값의 크기를 2배 복원하는 3개의 Up-sampling 층, 잔차 연결을 위한 6개의 Concatenate 층으로 구성되어 있다. 그리고 Output 모듈에서는 Neck 모듈의 마지막 4개의 Bottleneck CSP 층으로부터 획득한 데이터를 이용하여 X-ray 반도체 이미지에 대한 경계 박스를 표시한다. X-ray Reel이미지 검출은 반도체 Package의 크기와 모양에 따라 크고 작은 물체 간에 차이가 있다. 이미지가 큰 반도체 Chip의 검출 성능은 어느 정도에 적합한 반면, Small Signal Chip 저항이나 Condensor와 같은 작은 이미지에 대한 감지율은 상대적으로 정확도가 낮다. 제안한 모델은 레이어를 추가하여 객체 감지의 정확성 확률을 높인다. 개발모델의 백본 네트워크는 객체의 공간정보와 위치를 찾으며, Neck부분에서는 Semantic 의미 정보를 찾고 YOLOv5의 특성을 바탕으로 백본에서는 네트워크 9번 CBL 네트워크10번 CSP를 추가, Neck에서는 네트워크14번 CBL, 네트워크15번Upsample 네트워크16번 Concat을 추가하고, 네트워크32번CSP, 네트워크33번 CONCAT, 네트워 크34번 CSP를 추가한다. 기존의 3개 앵커에서 1개를 추가하는 이유는 컨벌루션을 통해 특징 맵을 생성하며 마지 막 업샘플링하여 얻은 정보를 가능한 한 많은 의미체계 정보를 갖기 위해 1개의 앵커를 추가한다.앵커정보는 추 가된 백본에서 동일한 스케일의 Neck 연결되어 네트워크를 도우며 작은 물체의 특성과 공간 정보를 더 찾아 3개 의 앵커에서 1개 추가하여 총4개의 앵커가 되어 유의미한 정보를 얻을 수 있다. 개선된 모델에서는 Head에서는 원래의 바운딩박스 크기에서 1/2 씩 감소한 크기 네트워크 25번 앵커의 크기는 (2x2, 2x4,5x4), 네트워크28번(3x4, 4x8, 9x6) 네트워크 31번(5x7, 8x15, 17x12), 네트워크 34 번(10x13, 16x30, 33x23)으로 설정하였으며, 각각의 이미지는 네트워크25번 (80*80*256), 네트 워크28번(40*40*512), 네 트워크 31번(20*20*1024), 네트워크34번(10*10*2048)로 출력한다. 결과적으로 기존의 네트워크를 구성하는 모듈 들Figure 9.CBL,SPP,SPPF 의 구성에서 Back-bone에 Csp를 추가하고 , Neck에 Upsample과 Concat을 하고 , Head 에 앵커를 하나 더 추가하여 네트워크 1개를 추가 운영함으로써 Small Device Detection을 하는 정확도를 높이 고 mAP 의 성능도 0.3mAP 더 향상된다. HEAD에서의 회귀 학습는 더 작은 앵커 박스를 사용하여 더욱 확장되어 Small Package Semiconductor,저항, 콘덴서와 같은 객체는 작은 앵커 박스를 사용하여 작은 물체를 감지하는 성 능을 높인다. 수정된 YOLOv5의 Structure는 첨부하여 보여진다. 개선된 모델에서는 Backbone에서는 Model depth multiple은 Depth Multiple 값이 클수록 BottleneckCSP 모듈 (레이어)이 더 많이 반복되어, 더 깊은 모델이 된다. Width multiple은 layer channel multiple 로서 Width Multiple 값이 증가할 수록 해당 레이어의 Conv 필터 수가 증가한다.Depth는 0.3 width는 0.5 default로 설정 하였다. 훈련시 Epoch 는 3000회를 기본으로 정했으며 mAP가 100 번이상 동일한 값일때는 자동으로 훈련이 마친 다. WIGHTS값은 YOLOV5S에 X-RAY이미지를 훈련하여 BEST.PT값을 구하였다. COCO128 훈련자료에 CLASS를 CHIP 으로 설정하여 가중치를 Update하였다. Image size는 640으로 진행하고 BATCH SIZE =16으로 , 활성화 함수로는 Leaky ReLU를 사용하여 음수를 일부를 반영하여 안정감을 더하였다. Detect.py 모듈에서는 한 이미지당 1000개 의 이미지로 한정된 내부 default값을 3000으로 설정하여 충분히 이미지내의 객체를 인식하도록 설정하였다. 이에 따라 본 별명에서는 상기 YOLOV5개선된 모델을 제공함으로써, X-RAY이미지내의 REEL안에 들어 있는 반도체 와 같은 작은 물체를 탐지하고 수량을 파악할 수 있어 빠르게 부품의 개수를 파악할 수 있으며, 이를 활용하여 MES시스템에 연계하여 스마트 팩토리를 구현하는 프로세스를 구현할 수 있다. MES시스템에서의 자재파악과 구매 계획을 위한 중요한 데이터를 산출할 수 있으며 이를 통해서 생산 리드타임을 단축시킬 수 있으며, 정확한 자재 를 확보하여 불필요한 재고를 쌓지 않아도 되고, 적절한 시기에 자재를 구매할 수 있는 효율성을 가질 수 있다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 기존 모델에서의 문제점을 해결하기 위해 창작 된 것으로서, 본 발명은 상기와 같은 문 제점을 해결하기 위해 창작 된 것으로서, 반도체의 이미지를 X-RAY로 사진을 찍어 그 결과의 이미지 파일을 만 든 다음 , YOLOV5의 개선된 모델을 이용하여 훈련하고 그 훈련된 최선의 값을 통해서 새로운 이미지의 REEL에 대해 이미지의 객체를 파악하여 이미지내의 객체의 수를 추론하여 객체내의 숫자를 추론 결과된 박스 표시된 이 미지와 함께 제시하는 것을 그 목적으로 한다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 YOLOV5 개선모델은, Head에서는 원래의 바운딩박스 크기에서 1/2 씩 감소한 크기 네트워크 25번 앵커의 크기는 (2x2, 2x4,5x4), 네트워크28번(3x4, 4x8, 9x6 ) 네트워크 31번( 5x7, 8x15, 17x12), 네트워크 34번(10x13, 16x30, 33x23)으로 설정하였으며, 각각의 이미지는 네트워크25번 (80*80*256), 네트워크28번(40*40*512) ,네트워크 31번(20*20*1024), 네트워크34번(10*10*2048)로 출력하도록 레이어를 추가 하였다.이것은 작은 이미지를 얻기 위해서 컨볼류션과 같은 기능을 추가하여 이미지에 대한 데이터를 더 많이 확보하여 추론하기 위한 개선된 모델로서 작은 이미지를 추론할 수 있는 것을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, 추론시 mAP값이 기존모델대비 20%상회하였으며 목표탐지의 정확성면에서나, 속도 면에서 빠르게 결과를 추론할 수 있는 것을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, 상기 수신한 X-RAY의 이미지를 DETECTION하여 바운딩 박스를 구현하여 객체의 위 치를 표현할 수 있으며 그 숫자를 할 수 있다는 특징으로 한다. 또한 상기 YOLOV5개선 모델은, BACKBONE에서 데이터처리 방법중에 CSP구조를 1LAYER 더 가져감에 따라 SPP 1024 와 BOTTLENECKCSP 1024 구조를 가진 것을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, HEAD에서 데이터처리 방법중에 Convolutional 256, Concatenation, BottlenecCSP 구조를 1LAYER 더 가져감에 따라 이미지를 추론하는 앵커박스를 3개 더 가져 기존 모델의 앵커박 스 12개 보다 3개 더 많은15개의 구조를 가진 것을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, NECK에서 데이터처리 방법중에 CSP, CBL,UPSAMPLE, Concatenation구조를 1LAYER, CSP,CONCAT, CBL 네트워크 구조를 더 가져감에 따라 이미지를 추론하는 이미지의 CHANNEL을 늘려 구성 하였으며 이미지를 탐지하고 위치정보를 가져오는데 더 효율적인 구조화를 특징으로 한다. 또한 상기 YOLOV5개선 모델은, 이미지를 처리하기 위해서 X-RAY 이미지를 기존의 640을 이용하였던 부분을 3072*3072 크기의 큰 이미지로 입력함으로써 이미지의 RESOLUTION이 높은 차원으로 구성하였으며 이것은 전체 데이터의 풍부한 정보를 구성하여 높은 정밀도를 추론할 수 있는 장점을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, 기본 모델에 비해 향상된 결과를 획득하기 위해서 작은 물체에 대한 탐지를 높이 위해 CROSS STAGE Partial dense net을 사용하여 기존 CNN의 정확도는 경량화 후 크게 저하되기 때문에 CNN의 학습 능력을 강화하여 경량화하면서 충분한 정확도를 유지하였으며 이를 통해 불필요한 Densenet의 계산을 줄이 고, 계산 병목현상을 절반으로 줄였으며, 메모리의 비용을 효율적으로 줄여 계산 속도를 높이는 것을 특징으로 한다. 또한 상기 YOLOV5개선 모델은, 기존의 3개 앵커에서 1개를 추가하여 컨벌루션을 통해 특징 맵을 생성하며 마지 막 업샘플링하여 얻은 정보를 가능한 한 많은 의미체계 정보를 갖는다. 추가한다.앵커정보는 추가된 백본에서 동일한 스케일의 Neck 연결되어 네트워크를 도우며 작은 물체의 특성과 공간 정보를 더 찾아 3개의 앵커에서 1 개 추가하여 총4개의 앵커가 되어 유의미한 정보를 얻어 추론시 정확한 데이터를 얻는 것을 특징으로 한다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 반도체 부품의 개수를 정확하게 셀 수 있는 목표로서 X-RAY이미지, 인공지능 YOLOV5를 이용한다. YOLOV5의 개선모델은 빠르고 정확하게 이미내의 객체를 탐지하고 숫자로 표현해 낼 수 있다. 이점은 X-RAY 머신 에서 사용하는 기존의 RULEBASED모델의 단점을 극복하고 , YOLOV5의 모델의 단점을 수정하여 만들었으며, 빠르 고 정확하게 객체를 탐지하여 빠른 자재 수량 파악, MES시스템의 연계, 생산현장의 생산성향상을 기해 LEAD타임 단축, 구매의사결정의 신속화, 재고관리 효율성, 재고 낭비를 줄이고, 무엇보다 인력에 의존하여 부정확하였던 자재관리를 정확하게 하는 효과가 있다."}
{"patent_id": "10-2023-0003777", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 바람직한 실시 예를 첨부된 도면을 참조하여 상세 히 설명한다. 각 도면에 제시된 동일한 참조 부호는 동일한 부재를 나타낸다. 도 1은 본 발명의 일 실시예에 따른 재료인 반도체 부품을 포장하는 Reel에 대한 구성을 보여준다. 반도체는 생산후 보관하여 납품한다. 대체로 REEL형태는 SMT(반도체 부품을 PCB에 안착하기 위한 공정)에는 반 드시 반도체 공급하는 방법으로 REEL을 선택한다.REEL은 캐리어 테입과 커버 테입으로 구성되었으며 이 안쪽에 반도체 부품이 들어 있다. 하나의 띠처럼 계속 연속해서 부품을 포장하고 있으며 이 REEL이 SMT라인에서 회전하 면서 부품을 차례로 공급하여 PCB에 부품이 안착하도록 한다. 또한 대체로 이 커버테이프와 캐리어 테이프는 플라스틱으로 구성되어 있어 가볍고 투명하여 보관하고 운반하기 쉽다. X-RAY와 같은 검출 하는 빛에 대해 잘 반응하여 X-RAY의 빛이 통과하면 단면이 사진으로 찍히기에 부품의 개수를 셀 수 있는 조건을 가지고 있다. 이에 따라 REEL은 반도체 제조 업체와 물류업체서는 반도체를 포장하기 위한 매우 편리한 포장단위이며, X- RAY를 쪼였을때 그 피사체가 그대로 드러나서 부품의 수를 파악할 조건을 보유하였으며, 이것은 X-RAY이미지를 얻어 이 이미지를 바탕으로 DEEP LEARNING을 할 수 있는 YOLO기반의 부품 COUNTING을 하기 적합한 구성이며 DL 을 위한 훈련 및 그 방법을 제공하고자 한다. 도 2에 도시한 바와 같이, MICROCHIP을 용기에 넣고 커버테이프를 HEATING 방식으로 밑면과 윗면의 테입을 압착 하여 밀봉하게 된다. HEATING BLADE는 양쪽 가장자리가 아래로 내려온 형태로 구성하여 커버테입과 아래 용기를 열로서 가열할때 균일한 형태를 유지하도록 구성되어 있다. 열을 가할 때는 두개의 압착면에 형상이 찌그러지거 나 달라 붙지 않도록 구성되어야 하며 반도체 부품에 열로 가열할 정도로 뜨거운 온도로는 적합하지 않고 플라 스틱을 접착할 적정 온도에서 제조된다. 이런 구성은 반도체의 이미지를 X-RAY로 투영할 때 적정한 이미지를 확 보하기 위해 필요하며 안정적인 반도체 포장이 필요한 부분에 적합하다. 또한 상기 REEL은, 반도체 부품 이미지를 얻기위한 원재료 이며 이 원재료로 부터 이미지는 3702*3702와 같은 크기로 얻을 수 있다. 이미지는 YOLO와 같은 이미지 DETECTING을 위한 DEEP LEARNING에서는 매우 중요하다. 이미지가 크고 해상도가 높을 수록 좋은 추론의 결과를 얻을 수 있다. 도 3의 디바이스는, X-RAY머신이다. 용도는 REEL을 사진찍기 위한 장치로서 1개 이미지에서 4개 이미지를 동시 에 X-RAY이미지를 찍을 수 있다.여기에서 나온 이미지는 컴퓨터에 저장되고 다양한 종류의 REEL을 통해서 이미 지를 얻을 수 있다. 또한 X-RAY는 전리방사선(Ionized radiation)은 물질을 구성하고 있는 원자의 궤도전자를 밖으로 튀겨내는 현상 인 전리현상을 일으키는 방사선으로 이용된다. 현재에는 회절, 형광, 전반사를 이용하여 물질의 성질 및 구조를 밝히는데 폭넓게 활용되고 있다.파장이10-11 10-9m 사이인 전자기파로서 물질에 대하여 강한 투과력을 가지며, 특히 물질의 밀도에 따라 투과율이 달라져 이 원리를 이용하여 생체 내부를 촬영하는 의료장비와 산업용 비파괴 검사장비 등으로 활용된다.또한 반도체 릴을 이미지로 만들어 계수할 수 있으며 rulebased방식으로 계수하였으 나 정확도면에서 사용자의 수량측정오류로 딥러닝을 이용한 계수 개선을 하고자 한다. 강한 투과력을 이용하 내 부를 관찰하기에 절단하거나 파괴와 같은 전처리 작업이 필요없으며 검사프로세스가 매우 간단하여 잘비 활용이 매우 쉬운 점으로 X-RAY이미지를 활용한다. 또한 X-ray source는 55kV, 110W, 400um Focal Spot Size를 사용하고,Image Detection system은 17Inch FPXD /140um Pixel size를 얻는다. Inspection Area는 Max. 380mm Reel / Min 180mm Reel, 0201 Chip, Power : 220VAC, Dimension은 (W) 900mm (D) 1,579mm (H)1,828mm , 660kg로 구성된 x-ray머신이다. 또한 상기 x-ray는 X-ray tube 는 x-ray의 발생시킨다. table 은 방사선 장치 내에서 검사체의 이동시켜 고정시킨다. Detector는 투과 X-ray 를 받아 가시광선으로 변환시킨다. CCD Camera는 Detector로 부터 얻은 가시광선을 디지털 데이터로 변환시킨다. Controller는 이미지 화상및 검사기 전체 시스템 제어한다. Shied cabinet는 방사선차폐하여 안전을 위한 장치이다. 도 4는 yolov5모델을 도식화 하였다.이미지를 입력하여 백본에서는 이미지를 추출하고 neck에서는 다양한 해상 도의 특징을 모아서 head에서는 객체 해상에에 맞게 최종적으로 추론한다. YOLO 알고리즘은 검출과 관련된 이미지를 SХS 그리드로 나누며, 그 중 각 그리드에는 서로 다른 검출 작업이 있다. 전체 네트워크 구조는 2개의 완전 연결 계층과 24개의 컨볼루션 계층으로 구성된다. 완전 연결 계층 후에 S Х SХ (B Х 5 + C)의 텐서가 출력되며, 여기서 B는 각 그리드에서 예측 된 목표의 수를 나타내고 C는 범주 의 수를 나타낸다. 최종 검출 결과는 검출 상자 위치를 회귀하고 텐서 데이터의 범주 확률을 판단하여 얻을 수 있다. YOLO 알고리즘은 표적을 신속하게 탐지 할 수 있지만 작은 표적을 탐지 할 수 없거나 탐지 효과가 좋지 않다. 구체적인 이유는 상세한 그리드 분할이 없으면 동일한 그리드에 여러 대상이있는 경향이 있다. 따라서 이 러한 단점을 보완하기 위해 도5 를 채택하여 우수한 검출방법과 속도를 빠르게 하는 개선 방법을 가진 YOLOv5 알고리즘을 채택했다. 도 5는 부분적인 밀도를 하나의 블록으로 설정하여 이미지를 빠르게 검출하고 이미지의 손실도를 줄이기 위한 방법으로 csp모듈을 사용한다. 첫이미지에서는 반을 뒷단계로 그대로 보내 이미지를 보존하고 나머지 반은 컨볼 루션을 통해 이미지를 검출하고, 이미 보내진 반의 이미지와 합하게 되는 concat을 한다. 이런 과정을 k만큼 걸 치게 되어 이미지 손실을 줄이면서 빠르게 이미지를 추출하는 방식을 채택하였다.yolo에서 기본으로 처리하는 데이터 처리방식이며 이런 점이 기본 구성기능의 특징이다. 한편 도 6 CSP구성은 컨볼루션과 BOTTLENECK을 통해서 이미지는 작게하고 커널은 더 많은 수로 늘리면서 데이터 를 모으며, 한편으로는 CONV을 통해서 컨볼루션 + 배치노말+ SILU함수를 통해서 처리하게 된다. 콘볼루션 / 합성곱 (Convolution) 두 함수 중 하나를 역전시켜 이동하면서 다른 함수와의 곱을 연이어 적분하여, 새로운 함수를 만들어내는 연산이다. batch normalization은 학습 과정에서 각 배치 단위 별로 데이 터가 다양한 분포를 가지더라도 각 배치별로 평균과 분산을 이용해 정규화하는 것을 말한다.활성화 함수는 각 노드가 이전 노드들로부터 전달받은 정보를 다음 노드에 얼마만큼 전달해 줄 것인가를 결정하는데 x<0일 경우 도함수는 0이고, 잘 작동하고 계산 속도가 빠르다는 장점,출력에 최댓값이 없다는 점이 경사 하강법에 있는 일부 문제를 완화시켜준다. 객체 감지는 이미지 내에서 검증을 위해 객체의 위치를 표시하고 유형 [34]을 자동으로 분류하는 프로세스이다. 객체 검출 알고리즘은 영역 제안과 객체 분류를 별도로 수행하는 2stage 검출기 알고리즘과 이 두 프로세스를 동시에 수행하는 1stage 검출기 알고리즘의 두 가지 유형으로 분류할 수 있다. 전자는 크게 향상된 속도와 낮은 계산 비용으로 후자로 변환 될 수 있다. 속도가 증가하는 순서대로 나열된 2stage 검출기 유형의 가장 대표적인 알고리즘은 영역 기반 컨볼루션 신경망(R CNN), FAST R CNN 및 FASTER R CNN이다. 구체적으로, 2stage 검출기 알고리즘은 검출할 물체가 위치할 수 있는 관심 영역을 제안하고, 물체 특징을 추출하고, 물체의 경계 상자의 마킹 및 분류를 위한 학습을 수행한다. 1stage 검출기는 YOLO(You Only Look Once)와 SSD(Single Shot Multibox detector) 알고리즘으로 분류할 수 있다. 1stage 검출기는 경계상자의 제안 및 분류를 동시에 수행하여 시간을 절약하고 계산 및 추론 비용을 절감한다. 2stage 검출기의 경우 물체 감지 시작 시 계산과 추론이 두 단계로 수행되기 때문에 계산 속도를 높여야 한다. 그러나 1 stage 물체 감지의 개발로 속도가 향상되었지만 상대적으로 낮은 성능은 단점이다. 따라서 연구자들은 성능을 향상시키기 위해 YOLO의 초기 변경 모델인 YOLOv2 알고리즘을 사용하여 작은 물체를 감지하기 위해 수용 필드를 확장하였다. 더 많은 영역 정보를 포함할 수 있는 컨볼루션 계층과 일반 계층을 연결하는 변경된 특성 추출 모델(백본)을 적용하여 이전 모델에 비해 향상된 성능을 향상했다. YOLO 모델을 기반으로 한 1stage 검출 기의 사례 연구에 따르면 2stage 검출기와 동등한 물체 검출 성능을 가지고 있다. 그러나 일부 물체, 특히 작은 물체를 정확하게 감지하는 1stage 감지기의 능력은 여전히 제한적이다. 1stage 검출기 중 가장 빠른 네트워크인 YOLO에 대한 모델 개발 및 연구가 수행중이며 최신 YOLO 모델인 YOLOv5를 수정하고, 성능이 향상된 새로운 모델 인 UCT모델로 개선하였다. YOLO는 다양한 버전이 존재하며, 버전이 높을수록 이전 버전의 단점을 극복한 모델로 알려져 있으나 YOLOv5를 기반으로 개선된 모델을 제안한다. CNN 기반의 물체 검출 알고리즘의 단점은 작은 물체 검출에 있어좋은 성능을 가지지 못한다는 것이다. 이러한 단점을 네트워크를 수정해 작은 물체 검출의 성능을 높인다.YOLO는 앵커박스 (anchor box) 라는 물체 검출 경계박스를 사용해 물체의 크기를 검출한다.크기 변화등 다양한 부품들에 대응하 기 위해 앵커박스의 개수를 조절하고 앵커박스의 크기 역시 수집한 데이터에 맞게 수정해 더 개선한 모델을 제 안한다.첫째, 부품의 다양한 색상과, 약간의 회전 변화에 대해서 강건한 분류특성을 갖도록 영상을 수집 및 처 리한다. 둘째, 분류성능을 높이기 위해 부품 간의 구별되는 특성을 고려하여 물체의 경계영역을 정한다. 세 번 째, 물체의 검출 및 분류를 동시에 수행하는 모델이면서 크기 변화에 의존적인 YOLOv5를선택하여, 부품 모양에 적합한 앵커박스를 만들고 네트워크를 수정하여 개선함으로써 작은 부품도 검출할 수 있도록 시스템의 분류성능 을 높인다. 반도체 Reel 이미지를 이용하여 Reel안의 포장되어 있는 반도체 갯수를 확인하기 위해서 정확도를 향상하고자 한다. 기존의 x-ray머신의 개수 방식은 Rule based의 방법으로 계산하여 부품수를 파악하고 그 결과를 보여주었 으나 , 실제와의 오차가 발생하거나 새로운 반도체 칩이 사내창고에 입고 되었을 때에 이미지를 추출하여 실제 수량을 확인하면 실제 수량보다 작은 숫자를 결과로 보여주었다.이를 개선하기 위해서 X-ray이미지의 원본 이미 지 (3072*3072)를 활용하고 네트워크를 추가한다. 최근 최근 컴퓨터 비전 및 의료 영상 분야에서 객체검출(Object Detection)을 위한 다양한 인공지능 기술이 개 발되고 있다. 대표적으로 딥러닝(Deep learning) 기반 콘볼루션 신경망 (convolutional neuralnetwork; CNN) 알고리즘 [40]은 이미지에서 반도체로 의심되는 부위를 검출하고, 해당 부위를 중심으로경계 박스(bounding box)를 표시하여 진단을 위한 정보를 제공할 수 있다. 하지만 기존 딥러닝 기반CNN 알고리즘은 처리시간이 느리 기 때문에 실시간으로 질병을 검출하는데 한계가 있고, 질병 검출의 정확도가 저하되는 단점이 있다. 이에 반해 최근 개발된 YOLOv5s(you only look once version 5small) 모델은 bottleneck CSP 층 및 잔차 연결 (skip connection) 함수를 사용하여 객체 검출의 속도 및 정확도를 향상시켰다.기존 딥러닝 기반 CNN 알고리즘의 단점 을 해결할 수 있는 YOLOv5s 모델을 이용하여 X-RAY이미지를 이용한 반도체 Reel 검출을 시행하고 그 성능을 평 가 한다. 딥러닝 기반 모델 학습에필요한 초매개변수(hyperparameter) [41]는 학습률(learning rate), 최적화 함수(optimizer function) , 활성화함수(activation function) , 손실 함수(loss function) ,학습 횟수(epoch) 등이 있으며 학습된 모델의 성능을 결정한다. 따라서 초매개변수 변경을 통해학습 모델의 성능을 최적화 할 수 있으며, 검출하고자 하는 객체 또는 부품의 특성에 따라 적절한 초매개변수를 적용해야 한다. YOLOv5s 모델을 이용한 초매개변수를 수정하면서 훈련을 진행하였다. 활성화함수, 최적화함수, 손실함수 및 학습 횟수를 변화시 켜 모델을 학습시키고 학습된 모델의 성능을 평가하기 위해 Precision, mAP를 측정한다.YOLOv5s 모델의 구조는 도 4처럼 Backbone, Neck 및 Output 모듈로 구성되어 있다. Backbone 모듈은 입력 영상 의 특징(feature)을 추출하는 부분으로 3 Х 3 kernel 크기를 갖는 4 개의 콘볼루션 층, 3개의 Bottleneck Cross Stage Partial(CSP) 층 및 1개의 Spatial Pyramid Pooling(SPP) , Object detection 층으로 구성되어 있 다. Bottleneck CSP층은 입력값에 대한 콘볼루션 함수 적용시 잔차연결을 이용하여 입력값의 일부를 출력값으로 반환하는 기능을 하며, SPP층은 크기가 서로 다른kernel을 이용하여 입력값의 다양한 특징을 추출하는 기능을 한다. Neck 모듈은 Backbone 모듈로부터 받은 입력값을 원래 크기로 복원하는 기능을 하며, Backbone 모듈에서 미처 추출하지 못한 입력값의 특징을 추출하는 기능을 한다. 기본 모델에 비해 향상된 결과를 획득하기 위해서 작은 물체에 대한 탐지를 높이 위해 UCT 모델을 제안한다. Yolov5의 장점은 CROSS STAGE Partial dense net [49]을 사용하여 기존 CNN의 정확도는 경량화 후 크게 저하되 기 때문에 CNN의 학습 능력을 강화하여 경량화하면서 충분한 정확도를 유지하였으며 이를 통해 불필요한 Densenet의 계산을 줄이고, 계산 병목현상을 절반으로 줄였으며, 메모리의 비용을 효율적으로 줄여 계산 속도를 높였다. 도 8은 사용한 Neck 모듈은 Figure 8처럼 6개의 Bottleneck CSP 층, 1 Х 1과 3 Х 3 kernel 크기를 갖는 6개 의 콘볼루션 층, 입력값의 크기를 2배 복원하는 3개의 Up-sampling 층, 잔차 연결을 위한 6개의 Concatenate 층 으로 구성되어 있다. 그리고 Output 모듈에서는 Neck 모듈의마지막 4개의 Bottleneck CSP 층으로부터 획득한 데 이터를 이용하여 X-ray 반도체 이미지에 대한 경계 박스를 표시한다. X-ray Reel이미지 검출은 반도체 Package 의 크기와 모양에 따라 크고 작은 물체 간에 차이가 있다. 이미지가 큰 반도체 Chip의 검출 성능은 어느 정도에 적합한 반면, Small Signal Chip 저항이나 Condensor와 같은 작은 이미지에 대한 감지율은 상대적으로 정확도가 낮다. 제안한 UCT 모델은 레이어를 추가하여 객체 감지의 정확성 확률을 높인다. UCT모델의 백본 네트워크는 객체의 공간정보와 위치를 찾으며 , Neck부분에서는 Semantic 의미 정보를 찾고 YOLOv5의 특성을 바탕으로 백본에서는 네트워크 9번 CBL 네트워크10번 CSP를 추가, Neck에서는 네트워크14번 CBL, 네트워크15번Upsample 네트워크16번 Concat을 추가하고, 네트워크32번CSP, 네트워크33번 CONCAT, 네트워 크34번 CSP를 추가한다. 기존의 3개 앵커에서 1개를 추가하는 이유는 컨벌루션을 통해 특징 맵을 생성하며 마지 막 업샘플링하여 얻은 정보를 가능한 한 많은 의미체계 정보를 갖기 위해 1개의 앵커를 추가한다.앵커정보는 추 가된 백본에서 동일한 스케일의 Neck 연결되어 네트워크를 도우며 작은 물체의 특성과 공간 정보를 더 찾아 3개 의 앵커에서 1개 추가하여 총4개의 앵커가 되어 유의미한 정보를 얻을 수 있다. 도 8에서 Head에서는 원래의 바운딩박스 크기에서 1/2 씩 감소한 크기 네트워크 25번 앵커의 크기는 (2x2, 2x4,5x4), 네트워크28번(3x4, 4x8, 9x6 ) 네트워크 31번( 5x7, 8x15, 17x12), 네트워크 34 번(10x13, 16x30, 33x23)으로 설정하였으며, 각각의 이미지는 네트워크25번 (80*80*256), 네트 워크28번(40*40*512) ,네트워크 31번(20*20*1024), 네트워크34번(10*10*2048)로 출력한다. 결과적으로 기존의 네트워크를 구성하는 모듈들 도 9 CBL,SPP,SPPF 의 구성에서 Back-bone에 Csp를 추가하고 , Neck에 Upsample과 Concat을 하고 , Head에 앵커를 하나 더 추가하여 네트워크 1개를 추가 운영함으로써 Small Device Detection을 하는 정확도를 높이고 mAP 의 성능도 0.3mAP 더 향상된다. HEAD에서의 회귀 학습는 더 작은 앵커 박스를 사용하여 더욱 확장되어 Small Package Semiconductor,저항, 콘덴서와 같은 객체는 작은 앵커 박스를 사용하여 작은 물체를 감지하는 성능을 높인다. 수정된 YOLOv5의 Structure는 도 10과 같다. Backbone에서는 Model depth multiple은 Depth Multiple 값이 클수록 BottleneckCSP 모듈(레이어)이 더 많이 반복되어, 더 깊은 모델이 된다. Width multiple은 layer channel multiple 로서 Width Multiple 값이 증가할 수록 해당 레이어의 Conv 필터 수가 증가한다.Depth는 0.3 width는 0.5 default로 설정하였다. 훈련시 Epoch 는 3000회를 기본으로 정했으며 mAP가 100 번이상 동일한 값일때는 자동으로 훈련이 마친다. WIGHTS값은 YOLOV5S에 X-RAY이미지를 훈련하여 BEST.PT값을 구하였다. COCO128 훈련자료에 CLASS를 CHIP 으로 설정하여 가 중치를 Update하였다. Image size는 640으로 진행하고 BATCH SIZE =16으로 , 활성화 함수로는 Leaky ReLU를 사 용하여 음수를 일부를 반영하여 안정감을 더하였다. Detect.py 모듈에서는 한 이미지당 1000개의 이미지로 한정 된 내부 default값을 3000으로 설정하여 충분히 이미지내의 객체를 인식하도록 설정하였다. 우선 YOLOv5s 모델의 학습 및 테스트를 위해 자체 보유중인 X-ray 머신으로 이미지를 촬영하였다.생산현장에서 사용중인 반도체 Reel 이미지를 확보하여 데이터셋을 활용 하였으며 X-ray머신 이미지는 기본적으로 제공하는 3072*3072로 JPG화일로 얻을 수 있다.데이터 셋 중 배열 크기가 3072 Х 3072인 영상을 선택하고 90도 Rotate 등의 특징(Augmentation) 를 통해 학습 및 테스트를 위한 데이터를 증가시켰다. 증가된 데이터 중 반도체 Reel 이미지 경계 박스 정보(가로 및 세로크기)가 YOLOv5s 모델 학습을 위해 사용되었고, 모델 학습에Train3.5K,Validation 468, Test 272 개의 이미지가 YOLOv5s 모델 테스트를 위해 사용되었다. X-ray이미지를 10개 Class로 나눠 Packaging Size별로 구분하였다. Group 을 통해서 Small, Middle, Large로 구분하였으며 , 각각의 Group을 통한 분류체계를 이용하여 Packaging size별 이미지특성과 크기별 데이터의 종 류를 분류한다. PCB에 장착되는 부품은 일반적으로 Resistor, Capacitor, Diode, Transistor,IC 등 크게 10가 지의 부품이 사용되며 이들 중에서 가장 많고, 수집이 용이한 부품을 분류하였다. 부품의 종류와 가로, 세로 길 이를 기준으로 부품의 클래스를 나누어 분류한다. 각 가로 Х 세로 Х 높이로 분류한다. 라벨링(Labeling)은 이진화 한 이미지에서 객체를 각각 분별하기 위해 인접한 픽셀 값들끼리 그룹화하여 번호를 매긴 것이다.즉, 인접한 화소들을 묶어 하나의 객체로 판단하는 방식이며,라벨링을 하면 한 장의 이미지에 있는 검정 영역들을 개별적으로 선택하여 라벨링 할 수 있다. Area의 영역을 부품에 맞게 세심하게 라벨링 하였을때 라벨링은 전체 부품에 좋은 결과를 나타나게 되었다. X-ray계수기에 적용하기 위해서 각 이미지마다 확인하고 수정하는 과정을 거쳐 정확한 라벨링이 되도록 하였다. 이미지가 투입되었을 때 이미지영역을 인식하고 이미지 를 처리해야 한다는 점에서 라벨링이 정확해야 유의미한 값을 얻을 수 있다. 전체 반도체 부품의 크기를 분류하여 CHIP 1쪟 CHIP10까지 구분하였다. 이를 다시 3가지 분류로 나눠 Chip Size 상의 Detection을 할 수 있도록 체계화 하였다.가장 작은 이미지인 Capacitor와 Resister는 Small class, 중간 크기인 Transistor와 Diode는 Middle, IC와 Harness는 Large로 그룹화 하여 분류를 진행한다. X-Ray 이미지는 3072*3072로 확보하였으며 각 크기별 데이터 셋을 이용 한다.부품의 라이브러리화를 위해 데이 터의 종류나 각 데이터들 간의 특징을 분석한다. 사용되는 부품의 종류는 커패시터, 다이오드, 레지스터, 트랜 지스터등 구성되어 있으며, 각 종류에서 부품의 크기에 따라 부품의 종류가 세분화되어 있다. Figure 13은 종류 별 부품의 x-ray이미지의 예시이며, 부품의 종류에 따라서 부품의 모양이나 크기 등이 다양하다. 모양이나 크기, 색상 등의 특징들은 딥러닝 알고리즘을 사용할 때 각 부품들의 종류를 구분할 수 있는 특징들이므로 각 종류별 리드의 개수나 가로*세로*높이의 형태가 1차원으로 나타나며 부품 색상이 흑백으로 나타나기에 이미지의 특징들 위주로 분석을 하여 ROI 영역을 정한다. x-ray이미지는 흑백이미지로서 부품의 문자나 색깔이 나타나지 않고 형태의 크기를 특징으로 잡아 인식하게 된다. 실험모델 평가는 이진 분류에서 가장 많이 사용하는 confusion matrix를 활용해 실험 결과를 확인했 다.Confusion matrix는 다음과 같은 4가지 평가 방법이 있다. True Positive(TP)는 참이 참으로 분류됨을 의미 한다. True Negative(TN)는 true가 false로 분류됨을 의미한다. False Positive(FP)는 false가 true로 분류됨 을 의미한다. 마지막으로 False Negative(FN)은 false가 false 로 분류된다. Precision(정밀도)는 주로 재현율 (Recall)과 같이 사용된다. 예측된 결과가 얼마나 정확한 지를 나타낼 수 있는 지표이다. 즉 검출된 것들 중에 서 정답을 맞춘 것들의 비율이 어느정도 인지를 알 수있기에 검출결과가 얼마나 정확한지를 알 수 있다. 재현율은 GT(Ground Truth) 중에서 얼마나 정답을 맞추었는지를 나타낸다. 즉 검출되어야 할 객체들 중에서 제 대로 검출된 것의 비율을 뜻한다. Average Precision의 계산은 Recall 을 0부터 0.1 단위로 증가시켜서 1까지 (총 11개의 값) 증가 시킬때 필연 적으로 Precision 이 감소하게 되는데 각 단위 마다 Precision 값을 계산하여 평균을 내어 계산한다. 즉 11가지 의 Recall 값에 따른 Precision 값들의 평균을 AP라고 한다. 하나의 클래스 마다 AP 값을 계산 할 수 있으며 전 체 클래스 갯수에 대해 AP를 계산하여 평균을 낸 값이 바로 mAP 이다. UCT모델 성능은 평균 전체 성능이 mAP 는 0.622로 mAP (.5 : .95)는 0.39, 정확도는 0.865로 향상되었다.이는 기존 모델 YOLOV5S보다 0.3이상 향상된 모델입니다.작은 객체의 경우 투입 이미지의 크기가 클 수록 성능이 향 상되었다. 즉 이미지의 해상도가 입력값 640으로 전환시에 유효한 이미지값으로 작용한다고 볼 수 있다. 전처리 에 서는 타일링방법을 사용하였다. 타일링은 이미지를 실시간 제약 조건에 따라 타일로 분할한다. 타일링 접근 방식으로 얻은 정확도 향상은 기존 방법에 비해 4배에 달한다. 실험은 훈련 단계 에서 추론 타일링을 모방하는 것도 유익하다는 것을 보여준다. 유사한 이미지 해상도 분포로 훈련 데이터를 제공하면 네트워크-학습 이미지 공간 표현이 더 좋아진다. 훈련 단계에서 타일을 추가 데이터 증강 방법으로 사용하면 작은 물체 감지 성능도 20% 크게 향상된다. 더 큰 특징맵을 통해 고해상도 영상으로 네트워크를 훈련시키면 계산 및 메모리 요구 사항 이 높아진다. 제안된 타일링 접근 방식은 순차적 타일 처리로 인해 메모리 요구 사항을 고정하면서 계산 시간을 선형적으로 늘린다.따라서 계산 및 메모리를 적절하게 유지하기 위해 타일링을 배치형식으로 공급하여 효율을 높일 수 있다. 타일링은 대상 플랫폼에 따라 네트워크 설계의 매개변수로 사용 된다. 객체중에서 3Pixel이하인 경우가 1200여건에 달하여 작은 이미지의 DETECTION 을 높이고자 HEAD에 네트워크 32 번CBL, 네트워크33번 CONCAT, 네트워크34 번 CSP를 이용하여 추출한 값으로 (2,2 2,4 5,4)앵커박스를 추가하였 으며, HEAD에 네트워크29번CBL, 네트워크30 번 CONCAT, 네트워크31번 CSP를 이용하여 추출한 값으로 (3,4 4,8 9,6)앵커박스를 추가하였으며, HEAD에 네트워크26번CBL ,네트워크27번 CONCAT, 네트워크28번 CSP를 이용하여 추 출한 값으로 (5,7 8,15 17,12)앵커박스를 추가하였으며,네트워크25번 CSP값으로 추출된 앵커는 (10,13 16,30, 33,23) 으로 추가하였다. Middle size 및 Large size 반도체 이미지 객체들은 정확성 감소 없이 유지되거나 경 우에 따라 증가합니다. 작은 물체 감지 전용 감지 레이어 네트워크 34번의 추가가 전반적인 성능을 크게 향상 시켰다. Yolov5의 장점은 컨벌루션을 통하여 계산량을 줄이고 빠른계산을 하여 실행속도가 크게 향상되었다. Backbone에 서 Bottleneckcsp이 구조는 기본적으로 4개의 Convolution layer 생성한다.Conv1,conv4에서 convolution을 하 고 Conv2,conv3 에서 convolution+ batchnorm 을 한다. 뉴럴 네트워크는 깊어지고 넓어질수록 그 효과가 강해진다. 그러나 Architecture(구조)의 확장은 뉴럴 네트워크 의 연산량이 많아지게하고, 훈련시에는 Object Detection같은 작업이 데이터용량이 커져서 훈련하기 곤란하 다.CSPNet의 목적은 점점 많은 Gradient combiantion이 만들어지는 동안 연산량을 줄이는 것으로 Base layer에 서 두개의 파트로 나눈 다음 마지막 Cross-stage 계층에서 합침으로써 실현 가능하다.이를 통해서 학습능력 강 화를 위해 CSPNet을 이용하면 정확도를 유지하면서 경량화가 이루어 진다. ResNet, ResNeXt, DenseNet에서 10~ 20%퍼센트 연산이 줄었다. 연산 Bottleneck 삭제하여 각 계층의 연산량을 균등하게 분배해서 연산 Bottleneck을 사용하지 않고 layer의 연산 활용을 업그레이드 시킬 수 있다.CSPNet을 이용하면 메모리 Cost를 효과적으로 줄 일 수 있으며 Cross-channel Pooling이 feature피라미드 작업을 압축 시킬 수 있다. 반도체 Reel X-RAY이미지와 YOLOv5s 개선모델인 UCT모델을 이용하여 반도체 Chip에 대한 검출을 시행하였고, 모 델 학습 시 Backbone에서 CBL+CSP를 추가하고, NECK에서 CSP+CBL+Upsample+concat을 추가하였으며 Csp와Cbl구 조에서 새로운 Head 를 1개 추가하였다.학습된 UCT 모델은 X-RAY 이미지에서 반도체나 Chip으로 인식된 예측된 부분에 대한 경계 박스를 표시할 수 있으며 정확도와 재현율,mAP0.5 측정값, mAP0.5:0.9 468 을 표기하여 성능 을 비교할 수 있게 되었다. 학습된 UCT 모델의 최대 mAP 0.5와 Precision은 각각 0.622및 0.865로 다른 모델에 비해 우수한 결과로 측정되었다. 이런 과정을 통해 하나의 Backbone에서 CBL,SPP가 추가되어 1024채널을 네트워 크16번에서 Concat하여 자료의 Context를 높였고 다시 네트워크 33번에서 Concat을 통해서 작은 이미지를 Detect 하도록 하였으며 성능이 기본 yolov5s보다 0.273mAP의 높은 성과를 낼 수 있다. 또한 각 그룹별로 분석해보면 Precision과 mAP값을 분석하면 작은 CHIP 부분의 CHIP1,3,4 에서 보다 SIZE가 큰 CHIP 9,10에서 PRECISION, mAP가 높게 나타났다. Small device에서 검출은 3fixel이하의 부분에 대해서 이미지 손실이 더 크다고 볼 수있다.정확도 면에서 87%의 유의미한 수치를 보여주어 UCT모델이 작은 객체를 DETECT하는 데 적정한 모델임을 알 수 있다. 사용된 YOLOv5s 모델을 개선한 UCT 모델의 경우 이미지 크기가 512에서 640, 3072로 커짐에 따라 최상의 칩 검 출 정확도가 증가하였다. 우수한 칩 카운팅 결과를 얻었습니다. 반면 학습 횟수의 증가가 최적에 도달하면 YOLO 의 특성상 100 epoch 동안 변화가 없으면 학습 시간을 멈춘다. 따라서 정확도 검출을 위해 모델을 훈련시킬 때 입력 이미지의 크기가 중요하며 학습을 진행하기 전에 가장 큰 요인으로 판단해야 한다. UCT 모델을 학습할 때 최적의 하이퍼파라미터를 적용함으로써 정확도와 학습 효율을 향상시킬 수 있음을 확인하였다. 사용된 하이퍼파 라미터 뿐만 아니라 학습 데이터의 양, 학습률, 각 모듈의 레이어 수 및 구조 등 학습 변수의 영향도 함께 분석 된다면, 해당 모듈의 성능을 더욱 향상시킬 수 있는 가능성이 있다. 또한 기존 딥러닝 기반 CNN 알고리즘과 객 체 감지 시간 비교를 통해 YOLOv5s에서 개선된 모델의 성능을 시연할 수 있을 것이다. 릴 부품을 분류하기 위한 부품의 특성 등급을 정의한다. 또한 YOLO의 다른 모델보다 상대적으로 정확도가 높은 YOLOv5 모델을 개선하여 크기가 다른 부품을 다른 유형의 부품으로 분류할 수 있도록 개선했다. 기존 모델에 BACKBONE 1계층, NECK 1계층, HEAD 1계층을 추가하여 BACKBONE, NECK, HEAD에서 Small Device Image에 대한 검출 처리 값을 25% 이상 확장하였으며, 본 특허에서는 9개의 경계 상자를 추가하여 REEL당 더 작 은 데이터 이미지 처리를 가능하게 하여 더 작은 부분도 인식할 수 있는 네트워크를 구성하여 성과를 얻었다. 상기에서 사용하는 부품의 클래스는 총 10개로, 크기는 같으나 높이 정보가 필요한 부품은 제외하고 모양과 크 기가 비슷한 클래스를 같은 클래스로 묶는다. 학습의 신뢰도를 위해 데이터가 적은 부분은 제외하고 3개 클래스 의 분류 결과를 나타내었다. 실험은 3,524개의 학습 데이터와 468장의 검증 데이터로 진행되었다. 기존 앵커 박 스의 개수는 27개이지만, 본 논문에서는 크기가 다른 부품의 개수와 다이오드 및 트랜지스터의 특성을 고려하여 앵커 박스의 개수를 36개로 늘렸다. 앵커 박스의 크기도 부품의 실제 크기를 기준으로 변경하였으며, 실험을 통해 앵커 박스를 수정한 경우가 대형 부품에 대해 정확도가 높고 ROI를 보다 정확하게 찾았음을 확인하였다. 또 한 앵커 박스를 수정하면 작은 크기에 비해 오검출이 상대적으로 많다는 단점이 있으나 네트워크를 수정 보완하 여 실험을 통해 성능을 확인하였다. 최종 개발된 YOLO 프로그램은 앵커박스와 네트워크를 수정한 모델로 성능평 가는 총 3,048개를 정확히 찾아낸다. 전체 3,524개의 데이터를 가지고 있으며 86.5%의 정확도로 매우 좋은 성능을 얻었다. X-ray 이미지는 수집이 용 이한 4종의 커패시터, 다이오드, 저항기, 트랜지스터에 대해서만 수행하였다.YOLOvX와 같은 모델은 지속적으로 업데이트되고 있어 연구 방향을 설정하고 모델링을 개선하는 데 관심이 있다. 컨볼루션 함수를 입력값에 적용할 때 연결을 유지하고, SPP 계층은 입력값의 다양한 특성을 개발하기 위해 서로 다른 크기의 커널을 사용합니다. 정확도를 보장하기 위해 추출 기능을 사용했습니다. Neck 모듈은 Backbone 모듈로부터 받은 입력값을 원래 크기 로 복원하는 기능을 갖고, Backbone 모듈에서 추출하지 못한 입력값의 특징을 추출하는 기능을 갖는다. 다양한 반도체 부품들이 다양한 형태의 이미지를 가지고 있기 때문에 연구 과정에서의 시간 부족, 학습 데이터 의 라벨링의 한계, 더 많은 분류, 훈련 시간, 투자할 시스템의 유한성을 고려할 때 한계가 있었습니다. 물체 감 지에 적합한 모델링은 산업 현장에서 더 많은 수요를 창출하므로 모델링에 대한 연구가 지속적으로 필요합니다. YOLOVX와 같은 모델이 지속적으로 업데이트되고 있어 연구 방향을 설정하고 모델링을 개선하는 데 관심이 있습 니다. 상기에서는 본 발명에 따른 바람직한 실시예를 위주로 상술하였으나, 본 발명의 기술적 사상은 이에 한정되는 것은 아니며 본 발명의 각 구성요소는 동일한 목적 및 효과의 달성을 위하여 본 발명의 기술적 범위 내에서 변 경 또는 수정될 수 있을 것이다. 또한, 이상에서는 본 발명의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시 예에 한정되지 아니하며, 청구범위에 서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분 야에서 통 상의 지식을 가진 자에 의해 다양한 변형 실시가 가능한 것은 물론이고, 이러한 변 형 실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어서는 안 될 것이다."}
{"patent_id": "10-2023-0003777", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 YOLOV5의 네트워크 ARCHITECTURE로 전체 알고리즘을 설명하기 위한 개념도이다. 도 2는 본 발명의 일 실시예에 따른 STRUCTURE 메커니즘 을 설명하기 위한 예시도이다. 도 3은 본 발명의 일 실시예에 따른 CBL,SPP,SPPF 블록도이다. 도 5는 본 발명의 일 실시예에 분류 이다. 도 6은 본 발명의 일 실시예에 이미지를 라벨링하는 프로그램 도면이다. 도 7은 본 발명의 일 실시예에 알고리즘을 훈련한 CONFIGURATION이다. 도 8은 본 발명의 일 실시예에 CHIP LABELLING COLLECTION 이다. 도 9은 본 발명의 일 실시예에 Class별 Chip x-ray Images(좌로부터 Class1부터 Class10까지)이다. 도 10은 본 발명의 일 실시예에 평가척도이다. 도 11은 본 발명의 일 실시예에 사전훈련 CHIP DATA이다. 도 12은 본 발명의 일 실시예에 사전훈련 결과표이다. 도 13은 본 발명의 일 실시예에 따른 Performace Comparision of yolov5s.이다. 도 14은 본 발명의 일 실시예에 따른 CHIP CLASS1,3,4 Detect chip counting result이다. 도 15은 본 발명의 일 실시예에 따른 CHIP CLASS 2,5,6,7,8 Detect chip counting result이다. 도 16은 본 발명의 일 실시예에 따른 CHIP 9,10 Detect chip counting result이다. 도 17은 본 발명의 일 실시예에 따른 CHIP 1,3,4 Detect chip counting result이다. 도 18은 본 발명의 일 실시예에 따른 CHIP 2,5,6,7,8 Detect chip counting result이다. 도 19은 본 발명의 일 실시예에 따른 CHIP 9,10 Detect chip counting result이다."}
