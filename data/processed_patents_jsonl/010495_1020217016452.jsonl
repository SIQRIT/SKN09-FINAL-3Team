{"patent_id": "10-2021-7016452", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0099564", "출원번호": "10-2021-7016452", "발명의 명칭": "인공 지능을 이용한 보안 시스템", "출원인": "인텔 코포레이션", "발명자": "포고렐릭, 올렉"}}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "장치로서,회로; 및상기 회로에 결합된 메모리를 포함하고, 상기 메모리는 명령어들을 저장하고, 상기 명령어들은 상기 회로에 의해 실행될 때 상기 회로로 하여금,입력 디바이스로부터 입력 데이터를 수신하고;상기 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고- 상기 출력 데이터는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -;상기 출력 데이터가 상기 은닉 클래스의 표시를 포함하는지를 결정하고; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 상기 생성된 출력을 출력소비자에게 제공하게 하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 메모리는 상기 회로에 의해 실행될 때 상기 회로로 하여금 상기 출력 데이터가 상기 은닉클래스의 표시를 포함한다는 결정에 기초하여 모니터링 시스템에 경보를 전송하게 하는 명령어들을 추가로 저장하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 메모리는 상기 회로에 의해 실행될 때 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력- 상기 난독화된 출력은 상기 가시 클래스의 표시를 포함함 -을 생성하고; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 난독화된 출력을 상기 출력소비자에게 제공하게 하는 명령어들을 추가로 저장하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 메모리는, 상기 회로에 의해 실행될 때 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 수집하며- 상기포렌식 데이터는 상기 입력 데이터 및 상기 입력 디바이스 중 적어도 하나의 표시를 포함함 -, 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 상기 포렌식 데이터를 상기 모니터링 시스템에 제공하게 하는 명령어들을 추가로 저장하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서, 상기 가시 클래스는 복수의 가시 클래스들을 포함하고, 상기 출력 데이터는 상기 은닉 클래스또는 상기 복수의 가시 클래스들 중 하나의 표시를 포함하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제5항 중 어느 한 항에 있어서, 상기 은닉 클래스는 복수의 은닉 클래스를 포함하고, 상기 출력 데이터는 상기 복수의 은닉 클래스 중 하나 또는 상기 복수의 가시 클래스 중 하나의 표시를 포함하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2021-0099564-3-제6항에 있어서, 상기 복수의 은닉 클래스 중 적어도 하나는 블랙리스트 입력들에 대응하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서, 상기 메모리는, 상기 회로에 의해 실행될 때 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 출력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하고; 및상기 복수의 가시 클래스들 중 상기 식별된 하나의 가시 클래스의 표시를 포함하도록 상기 난독화된 출력을 생성하게 하는 명령어들을 추가로 저장하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항 내지 제5항 중 어느 한 항에 있어서, 신뢰할 수 있는 실행 환경(TEE)을 포함하고, 상기 TEE는 상기 회로및 상기 메모리를 포함하는, 장치."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 상기 명령어들은, 회로에 의해 실행될 때, 상기회로로 하여금,입력 디바이스로부터 입력 데이터를 수신하고;상기 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고- 상기 출력 데이터는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -;상기 출력 데이터가 은닉 클래스의 표시를 포함하는지를 결정하고; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 상기 생성된 출력을 출력소비자에게 제공하게 하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 메모리는, 상기 회로에 의해 실행될 때, 상기 회로로 하여금, 상기 출력 데이터가 상기은닉 클래스의 표시를 포함한다는 결정에 기초하여 모니터링 시스템에 경보를 전송하게 하는 명령어들을 추가로저장하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 회로에 의해 실행될 때, 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력- 상기 난독화된 출력은 상기 가시 클래스의 표시를 포함함 -을 생성하고; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 난독화된 출력을 상기 출력소비자에게 제공하게 하는 명령어들을 추가로 저장하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 회로에 의해 실행될 때, 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 수집하며- 상기포렌식 데이터는 상기 입력 데이터 및 상기 입력 디바이스 중 적어도 하나의 표시를 포함함 -, 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 상기 포렌식 데이터를 상기 모니터링 시스템에 제공하게 하는 명령어들을 추가로 저장하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 가시 클래스는 복수의 가시 클래스들을 포함하고, 상기 출력 데이터는 상기 은닉 클래스또는 상기 복수의 가시 클래스들 중 하나의 가시 클래스의 표시를 포함하는, 비일시적 컴퓨터 판독가능 저장 매공개특허 10-2021-0099564-4-체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항 내지 제14항 중 어느 한 항에 있어서, 상기 은닉 클래스는 복수의 은닉 클래스들을 포함하고, 상기 출력데이터는 상기 복수의 은닉 클래스들 중 하나 또는 상기 복수의 가시 클래스들 중 하나의 표시를 포함하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 복수의 은닉 클래스 중 적어도 하나는 블랙리스트 입력들에 대응하는, 비일시적 컴퓨터판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서, 상기 회로에 의해 실행될 때, 상기 회로로 하여금,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 출력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하고; 및상기 복수의 가시 클래스들 중 상기 식별된 하나의 가시 클래스의 표시를 포함하도록 상기 난독화된 출력을 생성하게 하는 명령어들을 추가로 저장하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제10항 내지 제14항 중 어느 한 항에 있어서, 상기 회로는 신뢰할 수 있는 실행 환경(TEE)의 일부인, 비일시적컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "컴퓨터 구현 방법으로서,입력 디바이스로부터 입력 데이터를 수신하는 단계;상기 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하는 단계- 상기 출력데이터는 가시 클래스 또는 은닉 클래스 중 어느 하나에 대한 표시를 포함함 -;상기 출력 데이터가 상기 은닉 클래스의 표시를 포함하는지를 결정하는 단계; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 상기 생성된 출력을 출력소비자에게 제공하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 기초하여 모니터링 시스템에 경보를 전송하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제20항에 있어서,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력- 상기 난독화된 출력은 상기 가시 클래스의 표시를 포함함 -을 생성하는 단계; 및상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 난독화된 출력을 상기 출력소비자에게 제공하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제21항에 있어서,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 수집하는 단계-상기 포렌식 데이터는 상기 입력 데이터 및 상기 입력 디바이스 중 적어도 하나의 표시를 포함함 -; 및공개특허 10-2021-0099564-5-상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 상기 포렌식 데이터를 상기 모니터링 시스템에 제공하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제21항에 있어서, 상기 가시 클래스는 복수의 가시 클래스들을 포함하고, 상기 출력 데이터는 상기 은닉 클래스또는 상기 복수의 가시 클래스들 중 하나의 표시를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제23항에 있어서, 상기 은닉 클래스는 복수의 은닉 클래스를 포함하고, 상기 출력 데이터는 상기 복수의 은닉클래스 중 하나 또는 상기 복수의 가시 클래스 중 하나의 표시를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제24항에 있어서,상기 출력 데이터가 상기 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 상기 출력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하는 단계; 및상기 복수의 가시 클래스들 중 상기 식별된 하나의 가시 클래스의 표시를 포함하도록 상기 난독화된 출력을 생성하는 단계를 포함하는, 컴퓨터 구현 방법."}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 공격들에 대항하여 AI 시스템들을 강화하기 위한 기법들 및 장치들이 제공된다. 상이한 기법들 및 장치 들 중에서, 가시 클래스들 및 은닉 클래스들 모두를 포함하도록 추론 모델에 대한 도메인을 확장하는 기법들 및 장치들이 제공된다. 은닉 클래스들은 모델에 대한 가능한 프로빙 공격들을 검출하는데 사용될 수 있다."}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "관련 출원의 상호 참조 본 출원은 2018년 12월 31일자로 출원된, 발명의 명칭이 \"인공 지능을 이용한 보안 시스템(Securing Systems Employing Artificial Intelligence)\"인 미국 가출원 제62/786,941호에 대한 이익을 주장하며, 이 출원은 그 전체가 참조로 본 명세서에 통합된다."}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "머신 인텔리전스(machine intelligence)라고도 지칭되는 인공 지능(AI)은 그 환경을 인지하고 다양한 목표들을 성공적으로 달성할 기회들을 최대화하기 위한 액션들을 취하는 디바이스들, 시스템들, 또는 프로세스들을 지칭 한다. AI는, 예를 들어, 자동차, 산업, 항공우주, 군사, 제조, 여행, 물류, 인간 상호작용 등과 같은 다수의 분야들에서 이용된다. 또한, AI는, 예를 들어, 수리적 검색 및 최적화, 인공 신경망, 통계, 확률, 경제 등과 같은 다수의 과학 및 학술 분야들에 의존한다. 일반적으로, 그리고 극히 높은 레벨에서, AI 시스템들은 블랙 박스로서 설명될 수 있으며, 입력들이 박스에 제 공되고, 블랙 박스가 입력들에 기초하여 일부 추론을 수행하고, 이후 추론에 대응하는 출력(들)을 제공한다. 출력(들)은 판정들을 내리거나 액션의 일부 과정을 결정하기 위해 사용된다. 일부 응용들에서, AI 시스템은 액 션들 또는 거동을 지시 또는 제어할 수 있다. 예를 들어, AI 시스템들은 디바이스 제어 시스템에 결합될 수 있 고, 여기서 제어들은 AI 시스템으로부터의 출력에 기초하여 작동될 수 있다. 특정 예로서, AI 시스템들은 자동 차 내의 제동 시스템뿐만 아니라 센서들 및/또는 카메라에 결합될 수 있다. 이러한 AI 시스템은 센서들 및/또 는 카메라로부터 수신된 입력들 및 이들 입력들에 기초하여 이루어진 추론들에 기초하여 브레이크들을 작동시킬 수 있다. AI 시스템들의 복잡한 성질 및 다수의 분야들에서의 그들의 증가하는 보급 및 사용으로 인해, 공격들에 대해 AI 시스템들을 보안하거나, AI 시스템들을 강화하는 것이 중요하다."}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 공격들에 대해 AI 시스템들을 강화하기 위한 기법들 및 장치들이 본 명세서에 제공된다. 본 명세서에서 사용될 때, \"강화(harden)\"라는 용어는 AI 시스템들을 공격하기 위한 영역들 또는 AI 시스템들의 공격들에 대한 민감성을 소정의 방식으로 감소시키는데 사용되는 방법들, 시스템들, 장치, 기법들, 또는 접근법들을 암시하는 것을 의도한다. 강화라는 용어는 공격 벡터와 연관된 모든 위험이 감소되거나, 또는 모든 공격들이 중단되거나, 방지되거나, 검출되거나, 또는 다른 방식으로 완화될 것임을 암시하려는 의도는 아니다. 그 대신 에, 본 명세서에서 사용되는 바와 같이, 어떤 공격 또는 공격 벡터에 대해 \"강화된\" 시스템은 시스템이 공격(들)을 완화시키도록 설계된 하드웨어, 소프트웨어, 또는 하드웨어와 소프트웨어의 조합을 포함한다는 것을 의미하지만, 공격(들)이 모든 경우들 또는 상황들에서 완화되는 것을 의미하지는 않는다. 본 출원에서 사용되는 바와 같은 인공 지능(AI) 이라는 용어는 입력들에 기초하여 추론하도록 배열되는 컴퓨터 구현 시스템을 의미하는 것을 의도한다. 용어 AI는 상이한 계통들(예를 들어, 학계, 산업, 소비자 등)에서 상 이한 사물들을 의미할 수 있다는 점을 이해하여야 한다. 본 명세서에서 AI라는 용어의 사용은 제한적인 의도는 아니며, 추론 엔진, 전문가 시스템, 기계 학습 모델, 신경망, 심층 학습 시스템, 퍼지 로직 엔진, 또는 AI로 분 류될 수 있는 다른 이러한 시스템, 모델 및 엔진을 포함하는 것을 의도한다. 종종 AI 산하에 그룹화되는 용어 들(예를 들어, 신경망, 추론 엔진 등)은 본 명세서에서 교환 가능하게 사용된다. 일반적으로, AI는 데이터를 통해 학습 및 발견을 자동화하는데 사용될 수 있다. 종종, AI는 기존 제품들에 \"지 능\"을 부가하는 데 사용된다. 예를 들어, 이미지 인식 및/또는 분류, 패턴 인식, 음성 인식, 예측 분석 등은 대량의 데이터와 조합되어 AI를 통해 다수의 기술들을 개선할 수 있다. AI는 데이터로부터 점진적으로 학습할 수 있다. 달리 말하면, 추론 엔진 또는 \"모델\"은 훈련되고, 훈련 동안 데이터의 구조 및 규칙성을 발견하며, 따라서 모델은 보이지 않는 또는 장래의 데이터로부터 무언가를 추론(예 를 들어, 분류, 예측, 순위화 등)할 수 있다. 이러한 모델들을 훈련시키기 위한 다수의 타입의 모델 및 기법, 예를 들어 피드포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워 크, 베이지안망(Bayesian belief networks), 볼츠만 머신 등이 존재한다. 이러한 추론 모델들 및 그들의 훈련 기법들에 대한 철저한 설명은 편의성 및 명료성을 위해 여기에 제시되지 않는다. 그러나, 본 개시내용은 AI 시 스템의 기초가 되는 모델과 독립적으로, 이러한 AI 시스템들을 강화시키는 디바이스들을 구현하는데 적용될 수 있다. 언급한 바와 같이, AI는 다수의 분야들에서 구현될 수 있다. 예를 들어, 건강 관리 분야에서, AI는 개인화된 진단, X-레이 판독, 암 선별 등을 제공하도록 구현될 수 있다. 다른 예로서, 소매 분야에서, AI는 개인화된 쇼 핑 추천들을 제공하거나 또는 소비자와 구매 옵션들을 논의하도록 구현될 수 있다. 추가 예로서, 제조 분야에 서, AI는 공장에 대한 예상 부하 또는 수요를 예측하고, 픽-앤-플레이스(pick-and-place) 시스템에 대한 부품들 을 분류하는 등을 수행할 수 있다. 이들은 AI가 구현될 수 있는 많은 산업들 중 단지 몇몇일 뿐이다. 위에 소개된 바와 같이, AI 시스템들은 다양한 공격들에 취약할 수 있다. 예를 들어, AI 시스템(예를 들어, 블 랙 박스)이 재생성되거나 복제될 수 있다. AI 시스템들은 프로빙 타입 공격들에 취약하다. AI 시스템들에 대 한 입력들은 항상 제어되지는 않으며, 따라서 적대적이거나 손상될 수 있다. AI 시스템들이 매우 불투명하므로, AI 시스템들의 운영자들 및 사용자들은 AI 시스템이 어떻게 동작하는지, AI 시스템이 어떻게 훈 련되었는지, 훈련 데이터 세트 등에 대한 가시성을 가지지 못하여 위험을 겪을 수 있다. 이들은 AI 시스템들의 공격 벡터들 또는 공격 취약성들의 단지 몇몇 예들일 뿐이다. 본 개시내용은 이러한 공격 벡터들의 일부 또는 전부에 대해 AI 시스템들을 강화시키는 다수의 시스템들 및 방 법들을 제공한다. 본 개시내용이 모든 가능한 AI 공격 벡터들을 논의하려고 시도하지는 않으며, 본 개시내용이 본 명세서에서 설명된 시스템들 및 방법들과 각각의 시스템 또는 기법이 완화시킬 수 있는 AI 공격 벡터들의 포 괄적인 목록 사이의 매핑을 제공하려고 시도하지도 않는다는 점에 유의한다. 그러나, 이러한 공격 벡터들 및"}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이들 공격 벡터들과 연관된 위험을 완화하는 시스템들 및 방법들의 다수의 예들이 본 기술분야의 통상의 기술자 가 이해하기에 적절한 설명을 제시하기 위해 제공된다. 본 개시내용은 섹션들로 대략적으로 정리되며, 이러한 섹션들에서 공격 또는 관련 공격 벡터들의 타입에 대한 AI 시스템 취약성을 완화하기 위한 다수의 시스템들 및 방법들을 논의할 수 있다. 그러나, 하나의 섹션에서 설 명된 개념들은 예들에서 사용된 것과는 상이한 공격 벡터들을 따르는 공격들을 완화시키기 위하여 적용될 수도 있다는 것을 유의하여야 한다. 구체적으로는, 하나의 섹션에서 또는 하나의 타입의 공격과 관련하여 설명된 시 스템들 및 방법들은, 다른 섹션에서 설명된 것과 같은, 다른 타입의 공격들을 완화시키는 데 사용될 수 있다. 본 명세서에서 고려되는 시스템들 및 방법들의 상세한 설명에 앞서, 본 개시내용에 따라 구현될 수 있는, 다양 한 AI 공격 벡터들에 대해 강화되는 시스템의 개요가 제공된다. 본 명세서에서 사용되는 표기법들 및 명명법을 일반적으로 참조하여, 후속하는 상세한 설명의 하나 이상의 부분 들은 컴퓨터 또는 컴퓨터들의 네트워크 상에서 실행되는 프로그램 프로시저들의 견지에서 제시될 수 있다. 이"}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "러한 프로시저 관련 설명들 및 표현들은 본 기술분야의 통상의 기술자들이 그들의 작업의 본질들을 본 기술분야 의 다른 통상의 기술자들에게 가장 효과적으로 전달하기 위해 사용한다. 프로시저는 일반적으로 원하는 결과를 초래하는 동작들의 일관성 있는 시퀀스(self-consistent sequence)인 것으로 고려된다. 이러한 동작들은 물리 량들의 물리적 조작들을 필요로 하는 것들이다. 일반적으로, 반드시 그런 것은 아니지만, 이러한 양들은 저장, 전달, 조합, 비교, 및 다른 방식으로 조작될 수 있는 전기, 자기, 또는 광학 신호들의 형태를 취한다. 주로 일 반적으로 사용되기 때문에, 이러한 신호들을 비트들, 값들, 요소들, 심볼들, 문자들, 항들, 수들 등으로서 지칭 하는 것이 때때로 편리하다. 그러나, 이들 및 유사한 용어들은 적절한 물리량들과 연관지어 고려하여야 하며, 단지 이들 양들에 적용되는 편리한 라벨들일 뿐이라는 점에 유의해야 한다. 또한, 이러한 조작들을 수행하도록 배열된 다양한 시스템들, 컴퓨팅 환경들, 장치들, 특별히 설계된 컴퓨팅 디바이스들, 또는 회로가 설명된다. 이제 도면을 참조하며, 도면에서, 유사한 참조 번호들은 전체에 걸쳐 유사한 요소들을 지칭하도록 사용된다. 이하의 설명에서, 설명의 목적상, 그 철저한 이해를 제공하기 위해 다수의 구체적인 세부사항들이 기재되어 있 다. 그러나, 새로운 실시예들은 이러한 구체적인 세부사항 없이도 실시될 수 있다는 것이 명백할 수 있다. 다 른 경우들에서, 잘 알려진 구조들 및 디바이스들은 그 설명을 용이하게 하기 위해 블록도 형태로 도시된다. 의 도는 청구항들의 범위 내의 모든 수정, 등가물들, 및 대안들을 커버하고자 하는 것이다. 도 1은 본 개시내용에 따라 구현될 수 있는 강화된 시스템을 포함하는 추론 환경을 예시한다. 강화 된 시스템은 서버, 워크스테이션, 랩톱, 가상화된 컴퓨팅 시스템, 에지 컴퓨팅 디바이스 등과 같은 임의의 수 또는 타입의 컴퓨팅 시스템들에 의해 구현될 수 있다. 추가적으로, 강화된 시스템은 심층 학습 가속기 카드, 심층 학습 가속을 갖는 프로세서, 뉴럴 컴퓨트 스틱(neural compute stick) 등과 같은 임베디드 시스템일 수 있다. 일부 구현들에서, 강화된 시스템은 SoC(System on a Chip)를 포함하는 반면, 다른 구현들에서, 강화된 시스템은 2개 이상의 개별 컴포넌트들을 갖는 인쇄 회로 보드 또는 칩 패키지를 포함한다. 게다가, 강화된 시스템은 입력들에 기초하여 어떤 결과, 분류, 또는 특성을 추론하도록 배열된 다양한 타 입의 \"모델들\" 중 임의의 것을 이용할 수 있다. 강화된 시스템은 회로 및 메모리를 포함한다. 메모리는 추론 모델, 입력 데이터 , 출력 데이터 및 명령어들을 저장한다. 동작 동안, 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 명령어들 및/또는 추론 모델을 실행할 수 있다. 때때로, 출력 데이터 는 본 명세서에 설명된 입력 데이터로부터 생성될 수 있다. 예를 들어, 입력 데이터는 훈련 데 이터를 포함할 수 있고, 회로는 입력 데이터에 기초하여 출력 데이터로서 \"훈련된\" 추론 모델 을 생성하기 위해 명령어들을 실행할 수 있다. 예를 들어, 입력 데이터는 고양이들을 포함하거나 고 양이들을 포함하지 않는 것으로서 라벨 표시된 복수의 화상들을 포함할 수 있다. 이러한 예들에서, 복수의 화 상들은 화상이 고양이들을 포함하는지 여부를 추론할 수 있는 추론 모델을 생성하기 위해 사용될 수 있고, 훈련 된 추론 모델이 출력 데이터로서 제공될 수 있다. 많은 이러한 예들에서, 회로는 입력 데이터 를 분류하고 입력 데이터의 분류를 출력 데이터로서 제공하기 위해 명령어들 및 추론 모델(12 2)을 실행할 수 있다. 예를 들어, 입력 데이터는 화상을 포함할 수 있고, 출력 데이터는 화상의 분 류(예를 들어, 고양이, 개 등)의 표시를 포함할 수 있다. 다양한 이러한 예들에서, 입력 데이터는 시험 데이터 세트(예를 들어, 화상들 및 그들의 분류)를 포함할 수 있고, 회로는 시험 데이터 세트로 추론 모델 의 성능을 평가하고 평가의 표시를 출력 데이터로서 제공하기 위해 명령어들을 실행할 수 있다. 입력 데이터로부터 출력 데이터를 생성하기 위해 명령어들 및/또는 추론 모델을 실행하는 이들 및 다양한 다른 양태들은 예컨대 아래의 예들과 관련하여 더 상세히 논의될 것이다. 강화된 시스템은 또한 인터페이스를 포함할 수 있다. 인터페이스는 강화된 시스템 외부의 디바이스들과 같은, 추론 환경 내의 하나 이상의 디바이스들에 결합될 수 있다. 예를 들어, 입력 디바이스, 출력 디바이스, 다른 컴퓨팅 디바이스가 도시되어 있다. 일반적으로, 인터페이스는 강화된 시스템을 다른 디바이스 또는 시스템에 결합시키기 위해 인터커넥트(예를 들어, 유선, 무선 등)에 결합하도록 배열된 하드웨어 인터페이스 또는 제어기를 포함할 수 있다. 예를 들어, 인터페이스는 인터커 넥트를 통해 정보 요소들을 송신 및/또는 수신하고, 인터커넥트에 또한 결합된 다른 디바이스들(예를 들어, 입 력 디바이스, 출력 디바이스, 다른 컴퓨팅 디바이스 등) 사이에서 정보 요소들(예를 들어, 데이 터, 제어 신호들 등을 포함함)을 통신 및/또는 수신하도록 배열된 회로를 포함할 수 있다. 일부 예들에서, 인 터페이스는 다양한 표준들 중 임의의 것을 준수하는 인터페이스에 결합하도록 배열될 수 있다. 일부 예들 에서, 인터페이스는 이더넷 인터커넥트, 셀룰러 인터커넥트, 범용 직렬 버스(USB) 인터커넥트, 주변 컴포 넌트 인터커넥트(PCI) 등에 결합하도록 배열될 수 있다. 일부 예들에서, 추론 시스템은, 예를 들어, 상이 한 인터커넥트들을 통해 상이한 디바이스들에 결합하기 위한 다중 인터페이스를 포함할 수 있다. 일반적으로, 입력 디바이스는 입력들로서 신호들을 강화된 시스템에 제공하도록 배열된 임의의 디바 이스일 수 있다. 일부 예들에서, 입력 디바이스는 임의의 수 및 타입의 디바이스들 또는 센서들일 수 있 다. 동작 동안, 회로는 인터페이스를 통해 이러한 센서들로부터 신호들을 수신하기 위해 명령어들 을 실행할 수 있다. 회로는, 명령어들을 실행할 때, 수신된 신호들을 입력 데이터로서 저 장할 수 있다. 대안적으로, 회로는, 명령어들을 실행함에 있어서, (예를 들어, 인터페이스를 통해 센서들로부터 수신된 원시 신호들에 일부 처리를 적용함으로써) 신호들에 기초하여 입력 데이터를 생 성할 수 있다. 다른 예로서, 회로는 입력 데이터의 표시들을 포함하는 정보 요소들을 다른 컴퓨팅 디바이스로부터 수신하기 위해 명령어들을 실행할 수 있다. 일부 예들에서, 입력 디바이스, 출 력 디바이스 및/또는 다른 컴퓨팅 디바이스 중 임의의 하나 이상은 강화된 시스템과 함께 패키 징될 수 있다. 예들은 이에 관하여 제한되지 않는다. 강화된 시스템은 강화기를 더 포함한다. 일반적으로, 강화기는 강화된 시스템을 목표로 사용될 수 있는 공격 벡터 또는 공격 벡터들에 대한 완화 또는 \"강화\"를 위해 배열된 하드웨어, 소프트웨어, 및 /또는 이들의 조합을 포함할 수 있다. 강화기들의 다수의 예들이 아래의 예들에서 주어진다. 그러나, 여 기서, 강화기가 강화된 시스템의 독립형 하드웨어, 소프트웨어, 및/또는 조합 하드웨어 소프트웨어 요소로서 구현되는 것으로 묘사되어 있다는 것을 유의하여야 한다. 대안적으로, 강화기는 강화된 시스템 또는 추론 환경의 요소들 중 임의의 하나 이상의 요소 내에 구현될 수 있다. 예를 들어, 회로 , 메모리, 인터페이스, 추론 모델, 입력 데이터, 출력 데이터, 및/또는 명령어 들은 강화기를 포함할 수 있다. 다른 예로서, 강화기는 강화된 시스템을 포함할 수 있거 나 강화된 시스템과 별개이고 구별될 수 있다. 예를 들어, 강화기는 인터페이스, 또는 입력 디바이 스와 같은 다른 디바이스의 일부에 결합될 수 있다. 앞서 소개된 바와 같이, 본 개시내용은 추론 모델을 포함하는 시스템과 같은 AI를 이용하는 시스템들 에 대한 공격 벡터들을 완화하거나 감소시키도록 배열된 장치들 및 방법들을 제공한다. 따라서, 강화기는 이러한 공격 벡터들을 완화하거나 감소시키기 위해 추론 환경 내에 배열되고 배치된다. 예를 들어, 강화 기는 모델 도난(model theft)이라고 일반적으로 지칭되는 공격 벡터들을 완화시키도록 배열될 수 있다. 모델 도난은 추론 모델 자체의 도난이다(예를 들어, 추출, 복제, 리버스 엔지니어링, 모델 반전 등). 강 화기는 모델 복제, 추출된 모델의 동작, 모델 반전, 또는 리버스 엔지니어링을 완화시키도록 배열될 수 있 다. 예를 들어, 강화기는 훈련 데이터에 대한 정보를 검색하려고 시도하는 프로빙 공격들을 완화하도록 배열될 수 있다. 다른 예로서, 강화기는 일반적으로 적대적 입력들이라고 지칭되는 공격 벡터들을 완화하 도록 배열될 수 있다. 적대적 입력들은 입력에 기초하여 추론 시스템을 \"기만(fool)하거나\" 특정 추론을 트리 거하도록 설계된 입력들이다. 강화기는 입력 프로빙 공격들, 입력 왜곡, 입력 수정 등을 완화하도록 배열 될 수 있다. 일부 예들에서, 강화기는 (예를 들어, 하나 이상의 입력 디바이스 특성에 기초하여) 입력 데 이터 신뢰성, 유효성, 또는 상관들을 증가시키도록 배열될 수 있다. 강화기는 입력 데이터를 무결화 (sanitize)하거나 입력 디바이스들을 인증하도록 배열될 수 있다. 다른 예로서, 강화기는 프라이버시 누 설 또는 노출을 완화하도록 배열될 수 있다. 예를 들어, 모든 출력들(예를 들어, 정확한 추론, 부정확한 추론, 고확률 추론들, 저확률 추론들, 분류기들의 수 등)은 모델 및/또는 훈련 데이터에 관련한 유용한 정보를 수집하 기 위해 적대자에 의해 사용될 수 있다는 점을 이해하여야 한다. 이러한 공격들뿐만 아니라, 다른 타입들의 공 격들에 대하여 강화된 시스템들의 다수의 예들이 아래에서 상세하게 설명된다. 일반적으로, 회로는 종래의 중앙 처리 유닛(CPU), 주문형 집적 회로(ASIC), 필드 프로그래머블 게이트 어 레이(FPGA), 또는 다른 로직과 같은 하드웨어를 나타낸다. 예를 들어, 회로는 그래픽 처리 유닛(GPU) 또는 가속기 로직을 구현할 수 있다. 특정 예로서, 회로는 Google®의 Tensor processing unit®, 인텔® 의 Nervana NNP®(Neural Network Processor), Movidius의 Myriad 2® 프로세서, Mobileeye®의 EyeQ® 프로세 서일 수 있다. 일부 예들에서, 회로는 코어들 중 하나 이상이 AI 명령어들을 처리하도록 배열되는 다수의 코어들을 갖는 프로세서일 수 있다. 예를 들어, Qualcomm®의 Snapdragon 845® 프로세서 또는 애플®의 A11/A12 Bionic SoC®이다. 이러한 예들은 한정이 아니라 명료성 및 편의를 위해 제공된다. 회로는 명령어 세트(도시되지 않음)를 포함할 수 있거나, 예를 들어, x86 아키텍처 또는 ARM 아키텍처와 같은 임의의 수의 명령어 세트 아키텍처들을 준수할 수 있다. 이러한 명령어 세트는 32 비트 명령어 세트, 64 비트 명령어 세트 등일 수 있다. 추가적으로, 명령어 세트는 반정도(half-precision), bflaot16 부동 소수점 포맷 등과 같은 저정도(low precision) 산술을 사용할 수 있다. 예들은 이에 관하여 제한되지 않는다. 메모리는 매우 다양한 정보 저장 기술들 중 임의의 것에 기초할 수 있다. 예를 들어, 메모리는 중단 없는 전력 제공을 필요로 하는 휘발성 기술들 또는 이를 요구하지 않는 비휘발성 기술들에 기초할 수 있고, 가 능하게는 이동식일 수 있거나 이동식이 아닐 수 있는 머신 판독가능 저장 매체의 사용을 수반하는 기술들을 포 함할 수 있다. 따라서, 이들 저장소들 각각은, ROM(read-only memory), RAM(random-access memory), DRAM(dynamic RAM), DDR-DRAM(Double-Data-Rate DRAM), SDRAM(synchronous DRAM), SRAM(static RAM), PROM(programmable ROM), EPROM(erasable programmable ROM), EEPROM(electrically erasable programmable ROM), 플래시 메모리, 폴리머 메모리(예를 들어, 강유전성 폴리머 메모리), 오보닉 메모리(ovonic memory), 상 변화 또는 강유전성 메모리, SONOS(silicon-oxide-nitride-oxide-silicon) 메모리, 자기 또는 광학 카드, 하나 이상의 개별 강자성 디스크 드라이브, 또는 하나 이상의 어레이로 조직화된 복수의 저장 디바이스(예를 들어, 중복 어레이 독립 디스크(Redundant Array of Independent Disks) 어레이 또는 RAID 어레이로 조직화된 다중 강자성 디스크 드라이브)를 포함하지만 이에 제한되지 않는, 임의의 다양한 타입(또는 타입들의 조합)의 저장 디바이스를 포함할 수 있다. 도 2는 예컨대 앞서 설명한 추론 환경의 강화된 시스템에 의해 추론 환경에서 구현될 수 있는 예시적 기법을 예시한다. 기법은 편의성 및 명료성을 위해 도 1의 추론 환경을 참조하여 설명됨에 유 의한다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 2.1에서 시작할 수 있다. 원 2.1에서, 입력 디바이스 및/또는 다른 컴퓨팅 디바이스(15 6)는 입력 데이터를 강화된 시스템에 전달할 수 있다. 원 2.2에서, 강화된 시스템은 입력 데이 터를 수신할 수 있다. 예를 들어, 입력 데이터는 인터페이스를 통해 전달될 수 있다. 일부 예 들에서, 강화기는 입력 디바이스, 다른 컴퓨팅 디바이스 또는 추론 모델에 결합되고, 공격 벡터들에 대해 추론 모델을 강화하도록 배열될 수 있다. 예를 들어, 강화기는 입력 데이터를 무결화하도록 배열될 수 있다. 다른 예로서, 강화기는 입력 디바이스를 유효성 검사하도록 배열될 수 있다. 다른 예로서, 강화기는 입력 데이터를 변환하도록 배열될 수 있다. 이들 및 다른 예들은 아래에 더 상세히 설명된다. 기법은 원 2.3으로 계속될 수 있다. 원 2.3에서, 추론 모델은 일부 추론을 수행하거나 출력 데이터 를 생성하기 위해 입력 데이터에 대해 실행 또는 동작할 수 있다. 일부 예들에서, 강화기는 추 론 모델에 결합될 수 있다. 예를 들어, 추론 모델은 프로빙 공격들을 식별하도록 배열된 다수의 은 닉 클래스들을 포함할 수 있다. 다른 예로서, 추론 모델은 암호화될 수 있거나 암호화된 데이터에 작용하 도록 배열된 활성화 함수들을 포함할 수 있다. 다른 예로서, 추론 모델은 상이한 컴퓨팅 엔티티들이 추론 모델의 상이한 부분들을 실행할 수 있도록 세그먼트화되거나 파티셔닝될 수 있다. 또한, 다른 예로서, 추 론 모델은 디지털 권한 관리를 위해 모델 신원증명을 제공하거나, 프로빙 공격의 표시를 제공하는 등의 다 수의 은닉 클래스를 갖도록 배열될 수 있다. 이들 및 다른 예들은 아래에 더 상세히 설명된다. 기법은 원 2.4로 계속될 수 있다. 원 2.4에서, 강화된 시스템은 데이터를 출력할 수 있고, 예 를 들어 강화된 시스템은 출력 데이터를 출력 디바이스(및/또는 다른 컴퓨팅 디바이스)에 전달할 수 있다. 일부 예들에서, 출력 데이터는 입력 데이터의 분류와 같은 입력 데이터에 관 련한 추론을 포함할 수 있다. 원 2.5에서, 출력 디바이스는 출력 데이터를 수신할 수 있다. 예를 들어, 출력 데이터는 인터페이스를 통해 전달될 수 있다. 일부 예들에서, 강화기는 공격 벡터 들에 대해 강화하기 위해 강화된 시스템의 출력에 또는 출력 디바이스에 결합될 수 있다. 예를 들어, 강화기는 출력 데이터를 프루닝(prune)하도록 배열될 수 있다. 이러한 그리고 다른 예들은 아 래에 더 상세히 설명된다.도 3은 예컨대, 추론 모델(예를 들어, 추론 모델 등)을 훈련하기 위해 추론 환경의 강화된 시스템 에 의해 추론 환경에서 구현될 수 있는 예시적 훈련/시험 기법을 예시한다. 기법은 편의성 및 명료성을 위해 도 1의 추론 환경을 참조하여 설명됨을 유의한다. 그러나, 이는 제한을 의도하지 않는다. 일반적으로, 추론 모델들은 반복 프로세스에 의해 훈련된다. 추론 모델 훈련의 일부 예들이 본 명세서에 주어 진다. 그러나, 본 명세서에 제공된 다수의 예들은 추론 모델을 훈련하는데 사용되는 알고리즘과는 독립적으로, 공격에 대항하여 추론 환경들을 강화하도록 구현될 수 있다는 것에 유의한다. 기법은 원 3.1에서 시작할 수 있다. 원 3.1에서, 입력 디바이스 및/또는 다른 컴퓨팅 디바이스(15 6)는 훈련 데이터 세트를 강화된 시스템에 전달할 수 있다. 원 3.2에서, 강화된 시스템은 훈련 데이터 세트를 수신할 수 있다. 예를 들어, 훈련 데이터 세트는 인터페이스를 통해 전달될 수 있다. 일부 예들에서, 강화기는 입력 디바이스, 다른 컴퓨팅 디바이스 또는 추론 모델에 결합되고, 공격 벡터들을 강화하도록 배열될 수 있다. 예를 들어, 강화기는 추론 모델이 동작 동안 적대적 공격들을 식별하도록 훈련될 수 있도록 적대적 공격 입력들 및 연관된 출력을 추가하도록 배열될 수 있 다. 이러한 그리고 다른 예들은 아래에 더 상세히 설명된다. 기법은 원 3.3으로 계속될 수 있다. 원 3.3에서, 추론 모델은 일부 추론을 수행하거나 출력 데이터 를 생성하기 위해 훈련 데이터 세트로부터의 입력 데이터를 실행하거나 그에 대해 동작할 수 있다. 원 3.4에서, 추론 모델은 훈련 데이터 세트의 입력 데이터 및 훈련 데이터 세트의 대응하는 원 하는 출력으로부터 원 3.3에서 생성된 출력에 기초하여 조정될 수 있다. 예를 들어, 추론 모델 가중치, 연결, 층 등은 원 3.4에서 조정될 수 있다. 종종, 원 3.3 및 3.4는 추론 모델이 수용 가능한 성공률(종종 최소 에러 조건에 도달하는 것으로 지칭됨)에 수렴할 때까지 상호작용적으로 반복된다. 추론 모델이 수용 가능 한 성공률에 수렴하는지 여부의 결정은 임계값(예를 들어, 임계값 초과, 임계값 이상 등)과의 비교에 기초하여 이루어질 수 있다. 일부 예들에서, 훈련된 추론 모델은 출력 데이터로서 제공될 수 있다. 일부 예들에서, 강화기는 추론 모델에 결합될 수 있다. 예를 들어, 추론 모델은 훈련 데이터 세트 를 감염시키는 악성 입력 데이터에 기초하여 원 3.4에서 이루어진 조정들을 취소하기 위한 롤백 특징을 포 함할 수 있다. 이러한 그리고 다른 예들은 아래에 더 상세히 설명된다. 추론 모델이 훈련되면, 추론 모델이 테스트될 수 있다. 원 3.5에서, 입력 디바이스 및/또는 다 른 컴퓨팅 디바이스는 시험 데이터 세트를 강화된 시스템에 전달할 수 있다. 원 3.6에서, 강화 된 시스템은 시험 데이터 세트를 수신할 수 있다. 예를 들어, 시험 데이터 세트는 인터페이스 를 통해 전달될 수 있다. 원 3.7에서, 추론 모델은 시험 데이터 세트의 입력 데이터를 실행하 거나 그에 대해 동작하여 일부 추론을 수행하거나 출력 데이터를 생성할 수 있다. 원 3.8에서, 강화된 시 스템은 출력 데이터를, 예를 들어, 출력 디바이스(및/또는 다른 컴퓨팅 디바이스)에 전달 할 수 있다. 원 3.9에서, 출력 디바이스는 출력 데이터를 수신할 수 있고 출력 데이터를 시험 데이터 세트로부터의 원하는 출력 데이터와 비교하여 추론 모델이 정확한 출력을 얼마나 잘 추론하거 나 생성하는지를 결정할 수 있다. 일부 예들에서, 시험의 결과들은 출력 데이터로서 제공될 수 있다. 종 종 입력 디바이스 및 출력 디바이스는 추론 모델의 훈련 및 시험 동안 동일할 수 있다는 점에 유의한 다. 일부 예들에서, 강화기는 추론 모델에 결합될 수 있다. 예를 들어, 추론 모델은 나중에 훈련 데이터 세트를 사용한 추론 모델의 훈련을 증명하기 위해 신뢰할 수 있는 방식으로 훈련 데이터 세트와 연관될 수 있다. 이러한 그리고 다른 예들은 아래에 더 상세히 설명된다. 이제, 강화된 추론 시스템들의 다수의 예들 및 이러한 시스템들에 의해 완화될 수 있는 공격 벡터들의 특정 예 들을 제공하는 것에 대한 설명으로 돌아간다. 예들은 관련된 공격 벡터들에 기초하여 섹션들로 대략적으로 정 리되어 있다. 모델 도난(또는 IP 도난)에 관련된 공격 벡터들을 완화시키도록 구현될 수 있는 예들이 섹션 1에 서 함께 그룹화된다. 적대적 입력들과 관련된 공격 벡터들을 완화하도록 구현될 수 있는 예들은 섹션 II에서 함께 그룹화된다. 데이터 신뢰를 제공하도록 구현될 수 있는 예들은 섹션 III에서 함께 그룹화된다. 향상된 추론 모델 훈련을 제공하도록 구현될 수 있는 예들은 섹션 IV에서 함께 그룹화된다. 추론 모델에 대한 향상된 프라이버시 특징들을 제공하도록 구현될 수 있는 예들은 섹션 V에서 함께 그룹화된다. 마지막으로, 섹션 VI는 일반적으로 공격 벡터들을 완화하도록 구현될 수 있는 예들을 제공한다. 그러나, 일 예가 공격 벡터들의 타입 또는 그룹화와 관련된 하나의 섹션에서 논의될 수 있지만, 그 예들은 다른 섹션들에서 설명된 다른 공격 벡터들 을 완화하도록 구현될 수 있다는 점에 유의한다. 또한, 다수의 타입의 공격 벡터들을 완화하기 위한 강화된 시 스템들을 제공하기 위해 다수의 예가 조합될 수 있다. 예들은 이에 관하여 제한되지 않는다.섹션 I - 추론 모델 도난 프로빙을 통한 모델 재생성을 완화하기 위한 출력 트리밍 도 4는 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회 로, 메모리 및 입력 디바이스를 포함한다. 메모리는 추론 모델, 입력 데이터, 출력 데이터, 명령어들, 추론 확률, 임계값, 및 널 출력 데이터를 저장한다. 동작 동안, 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 명령어들 및/또는 추론 모 델을 실행할 수 있다. 추론 시스템들에 대한 공통 공격은 종종 \"프로빙(probing)\"으로 지칭되는 추론 시스템의 반복 질의이다. 프로 빙 동안, 공격자는, 예를 들어, 분류 카테고리들과 같은 시스템 거동을 학습하려는 시도로 시스템에 대해 다수 의 질의들을 실행한다. 특정 예로서, 이미지들을 분류하도록 배열된 추론 시스템은 추론 시스템이 이미지들을 분류하기 위해 훈련되는 카테고리들의 타입들을 식별하기 위해 반복적으로 질의될 수 있다. 본 개시내용은 추 론 확률이 임계 레벨 미만인 경우에 출력을 트리밍하거나 마스킹하도록 배열된 강화된 시스템을 제공한다. 예를 들어, 동작 동안, 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 회로 는 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 회로 는 출력이 임계값 위의 추론 확률을 갖는지를 결정하기 위해 명령어들을 실행할 수 있다. 달리 말하면, 회로는 출력이 정확할 확률이 임계 레벨보다 더 큰지를 결정하기 위해 명령어들 을 실행할 수 있다. 일반적으로, 임계값은 프로빙을 억제하기에 충분히 유의한 임의의 값, 예를 들 어, 80% 정확, 85% 정확, 90% 정확, 95% 정확, 99% 정확 등일 수 있다. 일부 예들에서, 임계값은 (예를 들어, 질의 소스, 공격 확률, 질의 빈도, 동일한 소스 또는 유사한 소스들로부터의 질의 빈도 등에 기초하여) 동적으로 계산될 수 있다. 다른 예들에서, 임계값은 모델 소유자 또는 인가된 관리자에 의한 동작 동안 또는 그 이전에, 예를 들어, 모델 생성 시에 정적으로 설정될 수 있다. 회로는 결정된 추론 확률이 임계값보다 더 큰 경우에 출력 데이터를 제공하고 결정된 추론 확률이 임계값보다 더 큰 경우에 널 출력 데이터를 제공하기 위해 명령어들을 실행할 수 있다. 일부 예에서, 널 출력 데이터는 (예를 들어, 분류 시스템의 경우) \"없음\"일 수 있다. 도 5는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 추 론 시스템으로부터의 출력을 트리밍하여 프로빙을 억제하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 510 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 블록 520 \"추론 모델을 통해, 수신된 입력에 기초하여 출력을 생성\"으로 계속되어, 시스템은 추론 모델 을 통해 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로는 입력 데이 터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 블록 530 \"생성된 출력의 추론 확률을 결정\"으로 계속되어, 시스템은 생성된 출력의 추론 확률을 결정할 수 있다. 예를 들어, 회로 는 출력 데이터의 추론 확률을 결정하기 위해 명령어들을 실행할 수 있다. 판정 블록 540 \"추론 확률이 임계값보다 큰가?\"로 계속되어, 시스템은 블록 530에서 결정된 추론 확률이 임계 레벨보다 더 큰지를 결정할 수 있다. 예를 들어, 회로는 추론 확률이 임계값보다 더 큰지 를 결정하기 위해 명령어들을 실행할 수 있다. 블록 540으로부터, 로직 흐름은 어느 하나의 블록 (550 또는 560)으로 계속될 수 있다. 추론 확률이 임계값보다 더 크다는 결정에 기초하여 로직 흐름 은 블록 540으로부터 블록 550으로 계속될 수 있는 반면, 추론 확률이 임계값보다 더 크지 않다 는 결정에 기초하여 로직 흐름은 블록 540으로부터 블록 560으로 계속될 수 있다. 블록 550 \"생성된 출력을 제공\"에서, 시스템은 블록 520에서 생성된 출력을 제공할 수 있다. 예를 들어, 회로는 출력 데이터를 (예를 들어, 출력 디바이스, 다른 컴퓨팅 디바이스 등에) 제공하기 위해 명령 어들을 실행할 수 있다. 블록 560 \"널 출력을 제공\"에서, 시스템은 널 출력 데이터를 제공할 수 있 다. 예를 들어, 회로는 널 출력 데이터를 (예를 들어, 출력 디바이스에, 다른 컴퓨팅 디바이스에 등) 제공하기 위해 명령어들을 실행할 수 있다. 모델 디지털 권한 관리를 위한 보안 마킹 도 6은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회 로, 메모리, 인터페이스, 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE)을 포함한 다. 메모리는 추론 모델, 입력 데이터, 출력 데이터 및 명령어들을 저장한다. TEE는 마커 및 명령어들을 저장한다. 일반적으로, TEE는 시스템 내의 임의의 신뢰할 수 있는 실행 엔클레이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회로 및 메모리로부터 세그먼 트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 마커의 기 밀성과 함께 (예를 들어, 명령어들의) 격리된 실행과 같은 보안 특징들을 제공할 수 있다. 예를 들어, TEE는 본 명세서에 설명되는 기능들을 구현하는 명령어들을 실행하도록 안전하게 배열되는 회 로 및/또는 저장소를 포함할 수 있다. 본 명세서에서 사용되는 TEE는 임의의 수의 보안 실행 파티션(예를 들어, SGX(Software Guard Extension), IME(Intel® Manageability engine), IE(Innovation Engine), Apple® 에 의한 보안 엔클레이브, TrustZone 등)을 포함할 수 있다. TEE는 메모리(TEE의 일부인 보안 메모리, 또는 다 른 메모리) 내에 저장된 명령어들을 실행할 수 있다는 점에 유의한다. 이러한 명령어들은 TEE로 하여금 본 명 세서에 설명되는 기법들을 수행하게 하도록 TEE의 회로 또는 처리 컴포넌트(들) 상에서 동작하는 컴퓨터 실행 가능 명령어들을 포함할 수 있다. TEE는 더 큰 회로(예를 들어, 프로세서, SoC 등)에 통합되고 본 명세서에 설 명된 디바이스들의 일부로서 제공될 수 있다는 점에 유의하는 것이 중요하다. 훈련된 추론 모델들(예를 들어, 추론 모델)은 매우 가치있는 지적 재산 자산이며, 이는 적대적 제3자에 의 해 도난당해 다른 제품들(예컨대, 경쟁자 제품들)에서 제어불가능한 방식으로 사용될 수 있음을 이해하여야 한 다. 따라서, 추론 모델의 부적절한 사용을 검출하는 능력이 바람직하다. 본 명세서에서 상세히 설명되는 일부 접근법들은 모델 사용의 검출을 지원하기 위해 소위 \"백도어 클래스들\"을 사용할 수 있다. 예를 들어, 추론 모 델들은 은닉 클래스로 훈련되며, 이는 적절한 질의가 시스템에 전송될 때 추론되거나 출력될 수 있다. 이 질의 및 대응하는 은닉 클래스 출력은 인가되지 않은 사용을 검출하기 위해 추론 모델의 소유자에 의해 사용될 수 있 다. 그러나, 이와 같은 은닉 클래스들의 사용은 여전히 본연의 부정확성들에 취약하므로, 일부 경우들에서, 은 닉 클래스는 오분류될 수 있다. 또한, 은닉 클래스들을 추론 시스템에 추가하는 것(예를 들어, 은닉 클래스로 추론 시스템을 훈련하는 것)은 성능 저하뿐만 아니라 훈련 프로세스의 더 높은 비용을 초래할 수 있다. 추가적 으로, 이 방법은 확장가능하지 않은데, 그 이유는 새로운 은닉 클래스를 추가하는 것이 모델 용량을 감소시킬 것이기 때문이다. 본 개시내용은 유입 질의를 매칭시켜 인가되지 않은 사용을 결정하는 데 사용될 수 있는 마커를 갖는 시스 템을 제공한다. 마커는 예를 들어 TEE를 통해 보안 방식으로 암호화되고 저장된다는 점에 유의 한다. 따라서, 마커는 워터마크 또는 디지털 권한 관리 토큰으로서 사용될 수 있다. 동작 동안, TEE는 입력 데이터를 마커와 매칭시키기 위해 명령어들을 실행할 수 있다. 일부 예들에서, TEE 내의 명령어들은 비트 단위 비교기에 의해 구현될 수 있다. 이와 같이, 동작 동안, TEE는 입력 데이터와 마커의 비트 단위 비교를 적용하여 입력 데이터가 마커와 매칭 되는지를 결정할 수 있다. 일부 예들에서, TEE는 입력 데이터의 부분들이 마커와 매칭되는지를 (예를 들어, 비트 단위 비교 등을 통해) 결정하기 위해 명령어를 실행할 수 있다. 특정 예로서, TEE(67 0)는, 명령어들을 실행함에 있어서, 입력 데이터의 선택된 비트들(예를 들어, 비트들 x 내지 y, 여기 서 x 및 y는 정수들이고 x는 1 이상이고 y는 x보다 더 큼)을 마커와 비교할 수 있다. 즉, \"마커\"는 입력 데이터 내의 어디에나 삽입될 수 있다. 따라서, 동작 동안 TEE는 입력 데이터 내의 그 특정 위 치(예를 들어, 비트들의 특정 범위 등)를 조사하고 그 위치가 마커와 매칭되는지를 결정하도록 구성될 수 있다. 입력 데이터와 마커 사이의 매칭이 결정되지 않는 경우, TEE는 명령어들을 실행할 때, 비 인가 추론 모델 사용의 표시를 (예를 들어, 출력 데이터 등을 통해) 출력할 수 있다. 매칭이 발견되 는 경우, 추론 모델은 정상으로서 사용될 수 있다. 시스템은 강건하고 확장가능하다는 점을 유의하 는 것이 중요하다. 또한, 시스템은 (예를 들어, 마커 등을 업데이트함으로써) 장래에 수정될 수 있 다. 일부 예들에서, 마커는 사전 로딩(예를 들어, 제조 등)될 수 있다. 마커는, 예를 들어, TEE에서 e-prom에 저장되거나, 1회용 퓨즈들에 의해 인코딩될 수 있다. 도 7은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실행 되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 추론모델의 인가되지 않은 사용을 검출하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 710 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 블록 720 \"입력 데이터를 마커에 매칭\"으로 계속되어, 시스템은 수신된 입력 데이터를 마커에 매칭시킬 수 있다. 예를 들어, TEE는 입력 데이터를 마커에 매칭시키기 위해 명령어들을 실행할 수 있 다. 판정 블록 730 \"마커가 입력과 매칭되는가?\"로 계속되어, 시스템은 마커가 입력과 매칭되는지를 결정할 수 있다. 예를 들어, 회로는 TEE가 마커 매칭된 입력 데이터를 나타내는지를 결정하기 위해 명령어들을 실행할 수 있다. 블록 730으로부터, 로직 흐름은 어느 하나의 블록(740 또는 750)으로 계속될 수 있다. 마커가 입력 데이터와 매칭되지 않는다는 결정에 기초하여 로직 흐름은 블록 730으로부터 블록 740으로 계속될 수 있는 반면, 마커가 입력 데이터와 매칭된다는 결정에 기초하여 로직 흐름은 블록 730으로부터 블록 750으로 계속될 수 있다. 블록 740 \"추론 모델을 통해, 수신된 입력에 기초하여 출력을 생성\"에서, 시스템은 추론 모델을 통해 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 블록 750 \"인가되지 않은 사용의 표시를 출력\"에서, 시스템은 추론 모델의 인가되지 않은 사용의 표시를 출력할 수 있다. 달리 말하면, 시스 템은 수신된 입력 데이터의 제공자가 추론 모델에 대한 적절한 소유권 권한을 갖는지를 결정할 수 있다. 일부 예들에서, 입력 데이터는 하나 이상의 추론 모델, 또는 추론 모드의 특징에 대한 소유권, 유효한 라이센스, 또는 인가된 사용 권한을 결정하기 위해 다수의 마크와 비교될 수 있다. 도 8은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터 페이스, 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE)을 포함한다. 메모리는 추론 모 델들(822-n), 입력 데이터, 출력 데이터 및 명령어들을 저장한다. TEE는 마커들(872-n) 및 명령어들을 저장한다. 일반적으로, 시스템은 마커들(872-n) 중 하나와 매칭되는 입력 데이터에 기초하여 추론 모델들(822- n) 중 하나를 가능화하도록 배열될 수 있다. 예를 들어, 이 도면은 추론 모델들(822-1, 822-2, 및 822-3)을 포 함하는 메모리를 묘사하고, TEE는 마커들(872-1, 872-2, 및 872-3)을 저장한다. 동작 동안, TEE는 입력 데이터를 마커들(872-1, 872-2, 또는 872-3) 중 하나와 매칭시키기 위해 명령어들 을 실행할 수 있다. 일부 예들에서, TEE 내의 명령어들은 비트 단위 비교기에 의해 구현될 수 있다. 이와 같이, 동작 동안, TEE는 입력 데이터와 마커들(872-1, 872-2, 또는 872-3)의 비트 단위 비교를 적용하여 입력 데이터가 하나 이상의 마커(872-1, 872-2, 또는 872-3)와 매칭되는지를 결정할 수 있다. 입력 데이터와 마커들(872-1, 872-2, 또는 872-3) 중 하나 사이의 매칭이 결정되는 경우, 입력 데이터 제 공자는 대응하는 추론 모델에 대한 권한들(예를 들어, 소유권 권한, 라이센스 권한 등)을 갖는 것으로 가정될 수 있다. 따라서, TEE는, 명령어들을 실행할 때, 입력 데이터가 마커들(872-1, 872-2, 또는 872-3) 중 하나와 매칭된다는 결정에 기초하여 모델들(822-1, 822-2, 또는 822-3) 중 대응하는 하나를 가능화할 수 있다. 일부 예들에서, 입력 데이터는 마커를 위조하려는 시도로 입력 데이터가 제3자에 의해 도난 및/또는 재생성되는 것을 완화하기 위해 암호화될 수 있다. 도 9는 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템(90 1)을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 입력 디바이스 및 신뢰 할 수 있는 실행 환경(TEE)을 포함한다. 메모리는 추론 모델, 암호화된 입력 데이터, 출 력 데이터 및 명령어를 저장한다. TEE는 마커, 명령어들, 복호화된 입력 데이터 , 및 키를 저장한다. 일반적으로, 시스템은 마커와 매칭되는 입력 데이터에 기초하여 추론 모델을 사용하기 위 한 소유권 또는 인가를 검사하도록 시스템과 유사하게 배열될 수 있다. 그러나, 강화된 시스템은, 메모리에 저장된 입력이 암호화되어 입력 데이터가 마커를 재생성하거나 위조하기 위해 적대자에 의 해 사용되는 것을 방지하는 것을 더 포함한다. 동작 동안, TEE는 키를 사용하여 암호화된 입력 데이터를 복호화하고 복호화된 입력 데이터 를 마커와 매칭시키기 위해 명령어들을 실행할 수 있다. 적대적 워터마킹을 통한 도난 모델 검출 언급한 바와 같이, 훈련된 추론 모델은 매우 가치있는 지적 재산 자산이며, 이는 적대적 제3자에 의해 도난당해 다른 제품(경쟁자 제품 등)에서 제어불가능한 방식으로 사용될 수 있다. 따라서, 추론 모델의 부적절한 사용을 검출하는 능력이 바람직하다. 본 개시내용의 일부 예들에서, 비인가 모델 사용을 용이하게 하기 위해 일부 적 대적 입력들을 분류하도록 훈련된 추론 모델이 제공될 수 있다. 적대적 입력들은 정정된 분류에 매우 가깝지만 정확하지는 않은 입력들이라는 것을 이해하여야 한다. 예를 들 어, 칼을 분류하도록 설계된 분류 시스템에 대한 적대적 입력은 펜으로 위장된 칼을 칼이 아니라 펜으로 분류할 수 있다. 본 개시내용은 다수의 적대적 입력들을 분류하도록 훈련되는 추론 모델을 제공한다. 따라서, 추론 모델은 모델이 훈련되는 적대적 입력 세트에 대해 실행되어, 적대적 입력들의 정확한 분류를 도출할 수 있다. 따라서, (예를 들어, 인가되지 않은 사용들을 식별하기 위한) 모델 사용의 결정은 적대적 입력 세트에 의해 용 이해질 수 있다. 적대적 입력 세트를 상이한 모델(예를 들어, 적대적 입력 세트에 대해 훈련되지 않은 모델)에 제공하면 모델들이 상이하다는 것을 표시하는 잘못된 분류들(예를 들어, 칼을 펜으로 분류하는 것 등)을 야기할 것이다. 적대적 입력들의 전이성(transferability)의 특성들로 인해, 모델의 분류에 대한 임의의 무작위 변경 은 적대적 입력들의 수 퍼센트를 초과한 결과들을 변경하지 않으면서 정상 입력 세트에 대한 부인 방지를 생성 하기에 충분해야 한다. 따라서, 모델이 적대자에 의해 수정되더라도, 본 명세서에서 상세히 설명된 적대적 입 력 분류 검출 특징들을 제거하는 것은 어려울 것이다. 따라서, 모델이 복사되었다는 사실을 숨기는 것은 어려 울 것이다. 도 10a는 추론 모델을 훈련하는 예시적 시스템을 예시한다. 시스템은 회로 및 메모리(102 0)를 포함한다. 메모리는 추론 모델, 명령어들, 시험/훈련 데이터 세트 및 출력 데이 터를 저장한다. 시험/훈련 데이터 세트는 시험 데이터 및 훈련 데이터 둘 모두를 포 함한다. 시험 데이터 및 훈련 데이터는 예를 들어 도 3의 기법을 사용하여 추론 모델 을 \"훈련\"하는데 사용될 수 있다. 시험/훈련 데이터 세트의 예가 도 10b에 묘사된다. 이 도면을 간략히 참조하면, 시험/훈련 데이터 세트 는 입력들 및 적대적 입력들을 포함한다. 시험/훈련 데이터 세트는 또한, 각각의 입 력 및 적대적 입력에 대해, 예상 출력을 포함한다. 일반적으로, 입력들은 모델이 훈 련(또는 시험)되어야 하는 정상 입력들일 수 있는 반면, 적대적 입력들은 본 명세서에 설명되는 바와 같은 모델 도난 검출 특징들을 제공하기 위해 모델이 훈련(또는 시험)되어야 하는 적대적 입력들일 수 있다. 입력들 은 입력 값(들)(1061-n)을 포함할 수 있고, 여기서 n은 양의 정수인 반면, 적대적 입력들은 적대적 입력 값(들)(1063-m)을 포함할 수 있고, 여기서 m은 양의 정수이다. 실시 동안, 입력들 및 적대적 입력 들의 수는 상당히 클 수 있다는 점에 유의한다. 그러나, 이 도면은 표현의 명확성을 위해 몇몇 개의 입 력을 묘사하고 있다. 예를 들어, 입력들에 대해 입력 값(들)(1061-1), 입력 값(들)(1061-2), 입력 값(들)(1061-3), 입력 값(들)(1061-4), 입력 값(들)(1061-5) 내지 입력 값(들)(1061-N)이 도시되어 있다. 마 찬가지로, 적대적 입력들에 대해 적대적 입력 값(들)(1063-1), 적대적 입력 값(들)(1063-2), 적대적 입력 값(들)(1063-3) 내지 적대적 입력 값(들)(1063-M)이 도시되어 있다. 각각의 입력 값(1061-n) 및 적대적 입력 값(1063-m)에 대해, 연관된 예상 출력이 도시되어 있다. 각각의 예상 출력은 추론 모델이 입력들을 할당하도록 훈련되는 추론(예를 들어, 분류 등)에 대응할 수 있다. 예를 들어, 예상 출력은 입력이 추론 모델에 의해 분류되는 클래스의 표시를 포함한다. 예 를 들어, 클래스(1067-1), 클래스(1067-2) 및 클래스(1067-3)가 묘사되어 있다. 추론 모델은 입력들을 임의의 수의 클래스들로 분류하도록 훈련될 수 있다는 점에 유의한다. 그러나, 여기에 묘사된 수는 표현의 명확성을 위해 선택된다. 회로는 예를 들어 도 3을 참조하여 설명된 바와 같이 시험/훈련 데이터 세트를 사용하여 추론 모델 을 훈련하기 위해 명령어들을 실행할 수 있다. 따라서, 동작 동안, 훈련된 추론 모델은 적 대적 입력들을 추론 모델에 제공하고 출력들을 대응하는 예상 출력들과 비교함으로써 인가되 지 않은 사용(예를 들어, 모델 도난 등을 표시함)을 결정하기 위해 사용될 수 있다. 적대적 입력들에 대 한 정확한 분류는 추론 모델이 추론 모델과 동일하다는 것을 나타낼 수 있다. 예를 들어, 적대적 입력 (1063-M)의 클래스(1067-2)로의 분류는 적대적 입력(1063-M)이 제공된 추론 모델이 추론 모델과 동일하다 는 것을 나타낼 수 있다.도 11은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리 및 입력 디바이스를 포함한다. 메모리는 추론 모델, 입력 데이터 , 출력 데이터 및 명령어들을 저장한다. 일부 예들에서, 메모리는 또한 분류 임계값 을 포함할 수 있다. 동작 동안, 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 명령어들 및/또는 추론 모델을 실행할 수 있다. 추론 모델은 다수의 적대적 입력들(예 를 들어, 적대적 입력들(1063-m) 등)로 훈련되는 추론 모델과 유사할 수 있다. 따라서, 적대적 입력들 (1063-m)을 추론 모델에 제공하고 출력 데이터를 적대적 입력들(1063-m)에 대한 예상 출력들(106 5)과 비교하는 것은 모델 도난의 신원증명을 용이하게 할 수 있다. 예를 들어, 동작 동안, 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 입력 데이터가 적대적 입력들(1063-m)에 대응하는 경우, 회로는 출력이 적대적 입력들(1063- m)에 대한 예상 출력에 대응하는지를 결정하기 위해 명령어들을 실행할 수 있다. 달리 말하면, 회 로는 추론 모델이 입력 데이터(예를 들어, 적대적 입력(1063-m))를 정확한 클래스로 분류했는지를 결정하기 위해 명령어들을 실행할 수 있다. 추론 모델이 적대적 입력들을 정확하게 분류하는 경우, 모델은 모델이라고 가정될 수 있다. 일부 예들에서, 추론 모델이 적대적 입력들을 분류 임계값을 초과하는 횟수로 정확하게 분류하는 경우에 추론 모델이 불법적으로 사용되고 있다고 가정될 수 있다. 일부 예들에서, 추론 모델이 적 대적 입력들을 분류하는 횟수가 카운팅되고 수시로(rolling basis)(예를 들어, 시간 기반, 제시된 적대적 입력 들의 수, 입력들의 총 수 등) 분류 임계값과 비교될 수 있다. 도 12는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 모델의 인가되지 않은 사용(예를 들어, 모델 도난)을 검출하기 위해 로직 흐름의 동작들을 수행할 수 있 다. 로직 흐름은 블록 1210 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수 신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 일부 경우들에서, 입력 데이터는 도 10a 및 도 10b의 시험/훈련 데이터 세트의 적대적 입력들 (1063-m) 중 임의의 것에 대응할 수 있다. 블록 1220 \"추론 모델을 통해, 수신된 입력에 기초하여 출력을 생성\"으로 계속되어, 시스템은 추론 모델 을 통해 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로는 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 판정 블록 1230 \"입력 데이터가 적대적인가?\"로 계속하여, 시스템은 입력 데이터가 적대적인지(예를 들어, 입력들 이 입력들(1063-m)인지 등)를 결정할 수 있다. 예를 들어, 회로는 입력들이 적대적인지를 결정하 기 위해 명령어들을 실행할 수 있다. 판정 블록 1230으로부터, 로직 흐름은 판정 블록 1240 또는 블록 1250 중 어느 하나로 계속될 수 있다. 입력들이 적대적이지 않다는 결정에 기초하여 로직 흐름은 판정 블록 1230으로부터 블록 1240으로 계속될 수 있는 반면, 입력들이 적대적이라는 결정에 기초하여 로직 흐 름은 판정 블록 1230으로부터 판정 블록 1240으로 계속될 수 있다. 판정 블록 1240 \"입력 데이터가 정확하게 분류되었는가?\"에서, 시스템은 입력들이 정확하게 분류되 는지를 결정할 수 있다. 예를 들어, 회로는 입력 데이터로부터 추론 모델에 의해 생성된 출 력 데이터가 입력 데이터가 대응하는 적대적 입력들을 정확하게 분류하는지를 결정하기 위해 명령 어들을 실행할 수 있다. 특정 예로서, 적대적 입력이 펜으로서 위장된 칼이면, 판정 블록 1240에서, 추 론 모델이 칼을 펜으로서 부정확하게 분류하는 것과는 대조적으로 칼을 칼로서 정확하게 분류했는지에 대 한 결정이 이루어질 수 있다. 판정 블록 1240으로부터, 로직 흐름은 블록 1250 또는 블록 1260 중 어느 하나로 계속될 수 있다. 입력 데이터가 정확하게 분류되지 않았다는 결정에 기초하여 로직 흐름은 판정 블록 1240으로부터 블록 1250으로 계속될 수 있는 반면, 입력 데이터가 정확하게 분류되었다는 결정에 기초하여 로직 흐름은 판정 블록 1240으로부터 블록 1260으로 계속될 수 있다. 블록 1250 \"생성된 출력을 제공\"에서, 시스템은 추론 모델 및 입력 데이터로부터 생성된 출 력을 제공할 수 있다. 예를 들어, 회로는 추론 모델을 실행하여 출력 데이터를 (예를 들어,호스트 시스템, 인터커넥트를 통해 결합된 시스템 등에) 제공할 수 있다. 블록 1260 \"모델 사용이 인가되지 않았다는 표시를 제공\"에서, 시스템은 모델 사용이 인가되지 않았다는 (예를 들어, 모델이 도난되었다는 등) 표시를 제공할 수 있다. 예를 들어, 회로는, 명령어를 실행 하는데 있어서, 모델이 모델과 동일할 수 있다는 표시(예를 들어, 모델이 도난되었다는 표시 등)를 포함하는 정보 요소를 보고 기관(또는 이와 유사한 것)에 전송할 수 있다. 블록 1260으로부터, 로직 흐 름은 블록 1250으로 계속될 수 있다. 일부 예들에서, 분류 임계값이 초과되는 경우 비인가 모델 사용의 표시가 제공될 수 있다. 즉, 블록 1260 자체는 분류 임계값이 초과되었는지를 결정하기 위한 로직 흐름에 대응할 수 있다. 도 13은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작 들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은, 도 12의 블 록 1260에서와 같이, 모델의 인가되지 않은 사용의 표시(예를 들어, 모델 도난)를 출력할지를 결정하기 위해 로 직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 시스템이 카운터를 증분시킬 수 있는 블록 1310 \"카운터 증분\"에서 시작할 수 있다. 판정 블록 1320 \"분류 임계값 초과?\"로 계속하여, 시스템은 (예를 들어, 카운터 등에 의해) 분류 임계값 이 초과되었는지를 결정할 수 있다. 판정 블록 1320으로부터, 로직 흐름은 판정 블록 1330 또는 판정 블록 1340 중 어느 하나로 계속될 수 있다. 분류 임계값이 초과되었다는 결정에 기초하여 로직 흐 름은 판정 블록 1320으로부터 블록 1330으로 계속될 수 있는 반면, 분류 임계값이 초과되지 않았다 는 결정에 기초하여 로직 흐름은 판정 블록 1320으로부터 블록 1340으로 계속될 수 있다. 블록 1330 \"모델 사용이 인가되지 않았다는 표시를 제공\"에서, 시스템은 모델 사용이 인가되지 않았다는 (예를 들어, 모델이 도난되었다는 등) 표시를 제공할 수 있다. 예를 들어, 회로는, 명령어를 실행 하는데 있어서, 모델이 모델과 동일할 수 있다는 표시(예를 들어, 모델이 도난되었다는 표시 등)를 포함하는 정보 요소를 보고 기관(또는 이와 유사한 것)에 전송할 수 있다. 판정 블록 1340 \"카운터 리셋 필요?\"에서 시스템은 (예를 들어, 블록 1310으로부터의) 카운터가 리셋될 필요가 있는지를 결정할 수 있다. 예를 들어, 일부 구현들에서, 카운터는 일정 시간 기간 이후에 리셋될 수 있 다. 다른 예들에서, 카운터는 일정 시간 기간 이후에 감분될 수 있다. 다른 예들에서, 카운터는 다수의 입력 이 처리된 이후에 감분될 수 있다. 판정 블록 1340으로부터, 로직 흐름은 블록 1350으로 계속되거나 종료될 수 있다. 카운터가 리셋될 필요 가 있다는 결정에 기초하여 로직 흐름은 판정 블록 1340으로부터 블록 1350으로 계속될 수 있는 반면, 카 운터가 리셋될 필요가 없다는 결정에 기초하여 로직 흐름은 판정 블록 1340으로부터 종료로 계속될 수 있 다. 블록 1350 \"카운터 리셋\"에서, 시스템은 카운터를 리셋할 수 있다. 예를 들어, 카운터가 감분되거나, 0 으로 리셋되는 등일 수 있다. 모델 도난을 방지하기 위한 하드웨어 종속 입력 변환 도 14는 본 개시내용에 따라 구현될 수 있는 강화된 시스템의 예를 예시한다. 강화된 시스템은 회 로, 메모리, 인터페이스, 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE)을 포함한다. 메모리는 변환된 입력 데이터, 출력 데이터, 플랫폼 구성 , 및 명령어들 을 저장한다. TEE는 추론 모델, 사전 로딩된 플랫폼 구성, 복원된 입력 데이터 , 및 TEE 명령어들을 저장한다. 일반적으로, TEE는 시스템 내의 임의의 신뢰할 수 있는 실행 엔클레이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회로 및 메모리로부터 세 그먼트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 사전 로딩 된 플랫폼 구성의 기밀성과 함께 (예를 들어, 추론 모델의 TEE 명령어들의) 격리된 실행과 같은 보안 특징들을 제공할 수 있다. 언급한 바와 같이, 훈련된 추론 모델(예를 들어, 추론 모델)은 매우 가치있는 지적 재산 자산이며, 이는 적대적 제3자에 의해 도난당해 다른 제품(경쟁자 제품 등)에서 제어불가능한 방식으로 사용될 수 있다. 따라서, 추론 모델의 부적절하거나 인가되지 않은 사용을 검출할 수 있는 능력은 바람직하다.본 개시내용은 컴퓨팅 플랫폼(예를 들어, 입력 데이터가 수집되는 플랫폼, 추론 모델이 실행되는 플랫폼 등)의 특성들에 기초하여 입력 데이터를 변환(예를 들어, 인코딩)하도록 배열된 시스템을 제공한다. 추론 모델 에 입력들을 제공하기 전에, 시스템은 미리 구성된 플랫폼 특성들에 기초하여 입력 데이터를 복원(예를 들어, 디코딩)하도록 배열된다. 입력 복원은 TEE에서 기밀 방식으로 유지되는 사전 로드된 플랫폼 구성 에 기초한다는 점에 유의한다. 이와 같이, 모델이 인가되지 않은 플랫폼에서 실행되는 경우에, 미리 구 성된 플랫폼 특성은 입력 데이터를 정확하게 디코딩하지 않을 것이고, 입력은 추론 모델에 대한 입력으로서 사 용할 수 없을 것이다. 즉, 출력은 의미가 없을 것이다. 따라서, 모델의 인가되지 않은 사용이 억제될 수 있다. 동작 동안, 시스템의 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 예를 들어, 회로는 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 다른 예로 서, 회로는 인터페이스를 통해 다른 컴퓨팅 디바이스로부터 입력 데이터를 수신할 수 있다. 회로는, 명령어들을 실행할 때, 플랫폼 구성을 생성할 수 있다. 일부 예들에서, 플랫폼 구 성은 시스템의 고유 신원증명 특징들일 수 있다. 예를 들어, 플랫폼 구성은 시스템과 연관된 UUID(universally unique identifier)의 표시들을 포함할 수 있다. 다른 예로서, 플랫폼 구성은 회로, 메모리, 인터페이스, 입력 디바이스 등에 대한 고유 식별자의 표시들을 포함할 수 있다. 일부 예들에서, 플랫폼 구성은 식별자들의 조합의 표시들(예를 들어, 회로 및 입력 디바 이스에 대한 UUID 등)을 포함할 수 있다. 회로는, 명령어들을 실행할 때, 입력 데이터 및 플랫폼 구성으로부터 변환된 입력 데 이터를 생성할 수 있다. 예를 들어, 회로는, 명령어를 실행하는데 있어서, 플랫폼 구성 을 사용하여 입력 데이터의 인코딩, 암호화, 난독화 등을 할 수 있다. 간단한 예로서, 회로(141 0)는 플랫폼 구성에 표시된 UUID를 암호화 키로서 사용하여 입력 데이터를 암호화할 수 있다. 다 양한 인코딩 방식들, 암호화 방식들, 특히 무손실 방식들 중 임의의 것이 구현될 수 있다. TEE는, TEE 명령어들을 실행할 때, 변환된 입력 데이터 및 사전 로드된 플랫폼 구성으 로부터 복원된 입력 데이터를 생성할 수 있다. 일부 예들에서, 사전 로드된 플랫폼 구성은 시스템 (예를 들어, 시스템 등)의 고유 신원증명 특징들의 표시들을 포함할 수 있다. TEE는 사전 로드된 플랫폼 구성으로 구성될 수 있다(예를 들어, 1401이 프로비저닝될 때 등). 따라서, 동작 동안, TEE(17 0)는 사전 로드된 플랫폼 구성 및 변환된 입력 데이터로부터 복원된 입력 데이터를 생성할 수 있다. 간단한 예로서, TEE는 사전 로드된 플랫폼 구성을 복호화 키로서 사용하여 변환된 입력 데이터를 복호화할 수 있다. 시스템이 동작하고 있는 플랫폼이 사전 로드된 플랫폼 구성 데이터와 매칭 된다고 가정하면, 이 때, 복원된 입력 데이터는 입력 데이터와 매칭되어야 한다. 달리 말하면, 시 스템이 사전 로드된 플랫폼 구성과 매칭되는 구성 정보(예를 들어, UUID 등)를 갖는 경우, 입력 데 이터의 변환(예를 들어, 암호화) 및 복원(예를 들어, 복호화)은 입력 데이터를 그 원래 상태로 복 귀되게 할 것이다. 명령어들을 실행함에 있어서, TEE는 추론 모델을 실행하여 복원된 출력 데이터로부터 출력 데이터를 생성할 수 있다. 앞서 설명한 바와 같이, 플랫폼 구성이 사전 로드된 플랫폼 구성 과 매칭되지 않는 경우, 복원된 입력 데이터는 입력 데이터에 대응하지 않을 것이고, 출력 데이터는 의미가 없을 것이다. 따라서, 추론 모델의 인가되지 않은 사용이 억제될 것이다. 일부 예들에서, 변환된 입력 데이터는 입력 디바이스로부터 직접 출력될 수 있다. 도 15는 도 14의 시스템 으로부터의 입력 디바이스로서 구현될 수 있는 입력 디바이스를 예시한다. 입력 디바이스 는 입력 캡처 회로, 입력 변환 회로, 및 입력 데이터 버퍼를 포함할 수 있다. 입력 캡처 회로는 입력 데이터를 캡처하도록 배열된 회로일 수 있다. 보다 구체적으로는, 입력 캡처 회 로는, 예를 들어, 마이크로폰, 이미지 센서, 전역적 위치확인 센서, 열 센서 등 같은 입력의 표시를 캡처 할 수 있다. 입력 변환 회로는 입력 캡처 회로에 의해 생성된 캡처된 입력의 표시를 변환하도록 배열된 회로를 포함할 수 있다. 일부 예들에서, 입력 변환 회로는 예를 들어 입력 디바이스와 연 관된 UUID와 같은 입력 디바이스의 특성들에 기초하여 캡처된 입력을 인코딩하도록 배열될 수 있다. 일 부 예들에서, 입력 변환 회로는, 예를 들어, 1회 프로그램가능 퓨즈에 저장된 정보와 같은, 입력 디바이스에 하드 코딩된 데이터의 특성들에 기초하여 캡처된 입력을 인코딩하도록 배열될 수 있다. 입력 데이터 버퍼는 데이터를 저장하도록 배열된 회로를 포함할 수 있다. 예를 들어, 입력 데이터 버퍼는 변환된 입력 데이터를 저장할 수 있다. 도 16은 본 명세서에서 설명되는 바와 같이 입력 데이터의 하드웨어 변환들을 통해 모델을 보호하기 위해 강화 된 시스템(예를 들어, 강화된 시스템 등)에 의해 구현될 수 있는 예시적 기법을 예시한다. 기법 은 편의 및 명확성을 위해 도 14의 강화된 시스템을 참조하여 설명됨에 유의한다. 그러나, 이는 제한을 의도하지 않는다. 변환된 입력 데이터를 신뢰성 있게(예를 들어, TEE 등을 통해) 복원하는 데 사용되는 사전 로드된 플랫폼 구성을 유지함으로써 추론 모델의 도난(예를 들어, 비인가 또는 무허가 플랫폼들 상에서의 실행)으로부터의 보호가 용이해진다. 기법은 원 16.1에서 시작할 수 있다. 원 16.1에서, 강화된 시스템은 입력 데이터를 수신할 수 있다. 예를 들어, 회로는 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 원 16.2 에서, 회로는 입력 데이터 및 플랫폼 구성으로부터 변환된 입력 데이터를 생성할 수 있다. 보다 구체적으로, 입력 데이터는 변환된 입력 데이터를 생성하기 위해 플랫폼 구성에 기초하여 변환될 수 있다. 원 16.3에서, TEE는 사전 로드된 플랫폼 구성에 기초하여 변환된 입력 데이터로부터 입력 데 이터를 복원할 수 있다. 보다 구체적으로, 변환된 입력 데이터는 복원된 입력 데이터를 생성하기 위해 사전 로드된 플랫폼 구성을 사용하여 디코딩될 수 있다. 원 16.4에서, 출력 데이터는 복원된 입력 데이터에 기초하여 추론 모델을 사용하여 생성될 수 있다. 도 17은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 로직 흐름에서 플랫폼의 하드웨어 특성들에 기초하여 입력 데이터를 변환하고 복원함으로써 추론 모델의 인가되지 않은 사용을 억제하기 위한 동작들을 수행할 수 있다. 로직 흐름은 블록 1710 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수 신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터, 인터페이스를 통해, 또는 유사한 것에 의해, 입력 데이터를 수신할 수 있다. 블록 1720 \"플랫폼 구성 결정\"으로 계속하여, 시스템 은 시스템의 하드웨어의 표시들을 포함하는 플랫폼 구성을 결정할 수 있다. 예를 들어, 회 로는, 명령어들을 실행할 때, 시스템의 컴포넌트들(예를 들어, 회로, 메모리, 인터페이스, 입력 디바이스 등)에 대한 UUID를 결정하고 결정된 UUID(들)를 플랫폼 구성으로 서 설정할 수 있다. 블록 1730 \"플랫폼 구성에 기초한 입력 데이터 변환\"으로 계속하여, 시스템은 구성 데이터에 기초 하여 입력 데이터를 변환할 수 있다. 예를 들어, 회로는, 명령어들을 실행할 때, 변환에 대 한 키로서 플랫폼 구성을 사용하여 입력 데이터를 변환(예를 들어, 인코딩, 암호화 등)하는 것에 의해 변환된 입력 데이터를 생성할 수 있다. 블록 1740 \"사전 로드된 플랫폼 구성 및 변환된 입력 데이 터에 기초하여 입력 데이터를 복원\"으로 계속하여, 시스템은 변환된 입력 데이터 및 사전 로드된 플랫폼 구성으로부터 입력 데이터를 복원할 수 있다. 시스템은 입력 데이터를 보안 방식으로 복원할 수 있다는 점에 유의한다. 즉, 사전 로드된 플랫폼 구성은 (예를 들어, TEE 등에) 안전하게 저장될 수 있고, 복원된 입력 데이터는 (예를 들어, TEE 등에서) 보안 처리를 통해 생성될 수 있다. 예를 들어, TEE는, 명령어들을 실행할 때, 복원에 대한 키로서 사전 로드된 플랫 폼 구성을 사용하여 변환된 입력 데이터를 복원(예를 들어, 복호화, 디코딩 등)함으로써 복원된 입 력 데이터를 생성할 수 있다. 블록 1750 \"추론 모델을 통해, 복원된 입력 데이터에 기초하여 출력을 생성\"으로 계속하여, 시스템은 추 론 모델을 통해 복원된 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, TEE는 복원된 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 앞서 설명한 바와 같이, 사전 로드된 플랫폼 구성(예를 들어, 사전 로드된 UUID 등)이 블록 1720 에서 결정된 플랫폼 구성(예를 들어, 시스템의 UUID)과 매칭되는 경우, 이 때, 복원된 입력 데이터(147 4)는 원본 입력 데이터와 매칭될 것이다. 그러나, 사전 로드된 플랫폼 구성(예를 들어, 사전 로드 된 UUID 등)이 블록 1720에서 결정된 플랫폼 구성(예를 들어, 시스템의 UUID)과 매칭되지 않는 경우, 이 때, 복원된 입력 데이터는 원본 입력 데이터와 매칭되지 않을 것이다. 따라서, 출력 데이터(142 6)는 사용 불가능하거나 무의미할 수 있고, 인가되지 않은 방식의 또는 비인가 하드웨어에 의한 추론 모델 의 사용은 억제될 것이다.섹션 II - 적대적 입력 입력 무결화의 클라이언트측 오프로딩 도 18은 서버 및 클라이언트 시스템을 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 서버 및 클라이언트 시스템은 광역 네트워크, 근거리 네트워크 또는 인터넷과 같은 임의의 적절한 인터커넥트를 통해 결합될 수 있다. 서버는 회로(1810-1), 메모리(1820-1) 및 인터페이스(1830-1)를 포 함한다. 메모리(1820-1)는 추론 모델, 출력 데이터, 명령어들(1828-1), 무결화 페이로드 및 무결화된 입력 데이터를 저장한다. 클라이언트 시스템은 회로(1810-3), 메모리(1820-3), 인터 페이스(1830-3) 및 입력 디바이스를 포함한다. 메모리(1820-3)는 원시 입력 데이터, 명령어들 (1828-3), 무결화 페이로드 및 무결화된 입력 데이터를 저장한다. 종종, 추론 시스템은 적대적 입력, 또는 특정 추론을 유발하도록 배열되거나 설계된 입력을 제공함으로써 공격 받을 수 있다. 본 개시내용은 예를 들어, 적대적 입력으로부터의 영향들을 감소시키기 위해 입력들을 무결화하 는 것을 제공한다. 일부 예에서, 입력 무결화가, 추론 서버 상에서 구현되는 것과 달리, 클라이언트 또는 에지 디바이스로 오프로드될 수 있다. 특정 예로서, 클라이언트 디바이스는 추론 모델에 입력하기 위해 서버에 무결 화된 입력들을 송신하기 전에 입력들을 수신하고 입력들을 무결화하도록 배열될 수 있다. 이를 위해, 클라이언트 시스템은 원시 입력 데이터에 대한 입력 무결화 프로세스의 표시들을 포함 하는 무결화 페이로드를 수신할 수 있다. 클라이언트 시스템은 무결화 페이로드 및 원시 입 력 데이터에 기초하여 무결화된 입력 데이터를 생성할 수 있다. 예를 들어, 무결화 페이로드 는 적대적 입력들을 완화시키려고 시도하기 위해 원시 입력 데이터를 무결화하는 데 사용될 수 있 는 디코딩, 필터링, 및 인코딩 방식의 표시들을 포함할 수 있다. 클라이언트 시스템은 추론 모델 과 함께 사용하기 위해 서버에 무결화된 입력 데이터를 제공할 수 있다. 일부 예들에서, 무결화 페이로드는, 디코딩 기법, 필터링 기법, 및 원시 입력 데이터를 무결화하는 인코 딩 기법 같은 무결화 프로토콜의 표시를 포함할 수 있다. 일부 예들에서, 무결화 페이로드는 원시 입력 데이터의 처리 및/또는 무결화된 입력 데이터 및 무결화 페이로드의 취급과 관련하여 구현하 기 위한 신뢰 또는 암호화의 레벨의 표시들을 포함할 수 있다. 특정 예로서, 회로(1810-1)는 무결화 페이로드를 클라이언트 시스템으로 전송하기 위해 명령어 (1828-1)를 실행할 수 있다. 회로(1810-3)는 서버로부터 무결화 페이로드를 수신하기 위해 명령어 들(1828-3)을 실행할 수 있다. 예를 들어, 무결화 페이로드는 인터페이스들(1830-1 및 1830-3)을 통해 통신될 수 있다. 회로(1810-3)는 예를 들어 입력 디바이스로부터 원시 입력 데이터를 수신하기 위해 명령어들(1828- 3)을 실행할 수 있다. 회로(1810-3)는 무결화 페이로드에 기초하여 원시 입력 데이터를 무결화하 기 위해 명령어들(1828-3)을 실행할 수 있다. 예를 들어, 회로(1810-3)는 원시 입력 데이터를 디코딩, 필터링 및 인코딩하여 무결화된 입력 데이터를 생성하는 명령어들(1828-3)을 실행할 수 있다. 다른 예로 서, 회로(1810-3)는 원시 입력 데이터를 트랜스코딩하여 무결화된 입력 데이터를 생성하기 위해(예 를 들어, 다른 포맷으로 디코딩 및 인코딩, 동일한 포맷으로 디코딩 및 재인코딩 등) 명령어들(1828-3)을 실행 할 수 있다. 회로(1810-3)는 무결화된 입력 데이터를 서버에 전송하기 위해 명령어들(1828-3)을 실행할 수 있다. 회로(1810-1)는 무결화된 입력 데이터를 수신하기 위해 명령어들(1828-1)을 실행할 수 있다. 예를 들어, 무결화된 입력 데이터는 인터페이스들(1830-1 및 1830-3)을 통해 통신될 수 있다. 회 로(1810-1)는 추론 모델을 실행하여 무결화된 입력 데이터로부터 출력 데이터를 생성할 수 있다. 일부 예들에서, 클라이언트 시스템은 입력 데이터를 무결화하도록 배열된 신뢰할 수 있는 실행 환경(TE E)을 구비할 수 있다. 예를 들어, 도 19는 서버 및 클라이언트 시스템을 포함하는 예시적 추론 환 경을 예시한다. 클라이언트 시스템은 클라이언트 시스템이 TEE를 포함하는 것을 제외 하고는 도 18의 클라이언트 시스템과 유사하다. 일반적으로, TEE는 클라이언트 시스템 내의 임의의 신뢰할 수 있는 실행 엔클레이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로(1810-3) 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회로(1810-3) 및 메모리(1820-3)로부터 세그먼트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 격리된 실행(예컨대, 무결화된 입력 데이터의 생성)과 같은 보안 특징들을 무결화 페이로드의 기밀성과 함께 제공할 수 있다. 도 20은 서버, 클라이언트 시스템 및 에지 디바이스를 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 에지 디바이스는 서버에 또는 서버에 결합된 네트워크에 엔트리 포 인트를 제공하는 임의의 디바이스일 수 있다. 예를 들어, 에지 디바이스는 라우터, 라우팅 스위치, IAD(integrated access device), 멀티플렉서, 셀 노드, 기지국 등일 수 있다. 추론 환경(1800 및 1900)과 같 이, 추론 환경은 서버로부터 원시 입력의 무결화를 오프로드한다. 그러나, 이 예에서, 에지 디바 이스는 무결화된 입력 데이터를 생성한다. 에지 디바이스는 회로(1810-5), 메모리(1820-5) 및 인터페이스(1830-5)를 포함한다. 메모리(1820-5)는 원시 입력 데이터, 명령어들(1828-5), 무결화 페이로드 및 무결화된 입력 데이터를 저장한다. 동작 동안, 에지 디바이스는 클라이언트 시스템으로부터 원시 입력 데이터를 수 신할 수 있고, 원시 입력 데이터를 무결화할 수 있으며, 무결화된 입력 데이터를 서버에 제 공할 수 있다. 회로(1810-1)는 명령어들(1828-1)을 실행하여 무결화 페이로드를 에지 디바이스로 전송할 수 있다. 회로(1810-5)는 서버로부터 무결화 페이로드를 수신하기 위해 명령어들(1828-3)을 실행할 수 있다. 예를 들어, 무결화 페이로드는 인터페이스들(1830-1 및 1830-3)을 통해 통신될 수 있다. 회로(1810-3)는 예를 들어 입력 디바이스로부터 원시 입력 데이터를 수신하기 위해 명령어들(1828- 3)을 실행할 수 있다. 회로(1810-3)는 에지 디바이스에 원시 입력 데이터를 전송하기 위해 명령어 들(1828-3)을 실행할 수 있다. 회로(1810-5)는 원시 입력 데이터를 수신하기 위해 명령어들(1828-5)을 실행할 수 있다. 예를 들어, 원시 입력 데이터는 인터페이스들(1830-3 및 1830-5)을 통해 통신될 수 있 다. 회로(1810-5)는 무결화 페이로드에 기초하여 원시 입력 데이터를 무결화하기 위해 명령어들(1828- 5)을 실행할 수 있다. 예를 들어, 회로(1810-5)는 원시 입력 데이터를 디코딩, 필터링 및 인코딩하여 무 결화된 입력 데이터를 생성하기 위해 명령어들(1828-5)을 실행할 수 있다. 회로(1810-5)는 무결화된 입 력 데이터를 서버에 전송하기 위해 명령어들(1828-5)을 실행할 수 있다. 회로(1810-1)는 무결화된 입력 데이터를 수신하기 위해 명령어들(1828-1)을 실행할 수 있다. 예를 들어, 무결화된 입력 데이터 는 인터페이스들(1830-1 및 1830-5)을 통해 통신될 수 있다. 회로(1810-1)는 추론 모델을 실행하 여 무결화된 입력 데이터로부터 출력 데이터를 생성할 수 있다. 비록 묘사되어 있지는 않지만, 에지 디바이스가, 예를 들어, 도 19의 에지 디바이스와 유사하게, 무결화된 입력 데이터가 생성될 수 있는 TEE를 포함할 수 있다는 것에 유의하는 것이 중요하다. 도 21은 본 명세서에서 상세히 설명되는 바와 같이 입력들을 무결화하기 위해 추론 환경(예를 들어, 추론 환경 , 추론 환경, 또는 추론 환경 등)에서 구현될 수 있는 예시적 기법을 예시한다. 기법 은 편의성 및 명확성을 위해 도 20의 추론 환경을 참조하여 설명된다는 점에 유의한다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 21.1에서 시작할 수 있다. 원 21.1에서, 강화된 시스템은 원시 입력 데이터를 수 신할 수 있다. 예를 들어, 클라이언트 시스템은 입력 디바이스로부터 원시 입력 데이터를 수신할 수 있다. 원시 입력 데이터의 다수의 상이한 인스턴스들이 본 명세서에 설명된 바와 같이 수신되 고 무결화될 수 있다는 점에 유의한다. 예를 들어, 클라이언트 시스템은 원 21.1에서 원시 입력 데이터 를 반복적으로 수신하고, 본 명세서에 설명된 바와 같이 원시 입력 데이터를 무결화할 수 있다. 원 21.2에서, 서버는 클라이언트 시스템에 질의하여 클라이언트 시스템의 컴퓨팅 능력을 결 정할 수 있다. 원 21.3에서, 클라이언트 시스템은 컴퓨팅 능력의 표시를 서버로 전송할 수 있다. 일반적으로, 서버는 클라이언트 시스템에 질의하여 클라이언트 시스템의 무결화 능력을 결정 할 수 있다. 일부 예들에서, 서버는 클라이언트 시스템에 질의하여 클라이언트 시스템이 무 결화 페이로드의 최소 계산 요건들(예를 들어, 처리, 신뢰 수준, 메모리 등)을 충족시키는지를 결정할 수 있다. 원 21.4에서, 서버 및 클라이언트 시스템은 신뢰할 수 있는 연결을 확립할 수 있다. 예를 들어, 서버와 클라이언트 시스템은 신뢰된 및/또는 암호화된 통신 채널을 확립하기 위해 크리덴셜 (예를 들어, 암호화, 유효성확인 등)을 교환할 수 있다. 원 21.5에서, 서버는 무결화 페이로드를 클라이언트 시스템으로 전송할 수 있다. 일부 예들에서, 무결화 페이로드는, 디코딩 기법, 필터링 기법, 및 원시 입력 데이터를 무결화하는 인코딩 기법 같은 무 결화 프로토콜의 표시를 포함할 수 있다. 원 21.6에서, 클라이언트 시스템은 무결화 페이로드에 기초하여 원시 입력 데이터로부터 무결화된 입력 데이터를 생성할 수 있다. 예를 들어, 클라이언 트 시스템은 원시 입력 데이터를 디코딩, 필터링 및 인코딩할 수 있다. 원 21.7에서, 클라이언트 시스템은 무결화된 입력 데이터를 서버에 전송할 수 있다. 추가적 으로, 원 21.7에서, 서버는 클라이언트 시스템의 상태(예를 들어, 보안 정책, 계산 리소스 등)를 모니터링할 수 있다. 또한, 원 21.7에서, 서버는 클라이언트 시스템으로부터 무결화 페이로드 를 비활성화 및/또는 제거할 수 있다. 적대적 공격을 발견하는 은닉 클래스 도 22는 예시적 추론 모델에 대한 가능한 입력들에 대해 플로팅된 잠재적 출력들을 묘사하는 그래프를 예 시한다. 다양한 클래스들을 포함하는 잠재적 출력들이 묘사되어 있다. 구체적으로는, 잠재적 출력들은 가시 클래스들(2210-1, 2210-2, 2210-3 및 2210-3)은 물론, 은닉 클래스들(2220-1, 2220-2 및 2220-3)을 포함한다. 또한, 잠재적 출력들은 가능한 입력들 [2201, 2203]에 대해 플로팅된다. 가능한 입력들(2201 및 2203)이 표현 의 명확성을 위해 2차원(2D)으로 묘사되어 있다는 점에 유의한다. 그러나, 실제로, 추론 모델의 도메인은 다차 원적일 수 있다. 일반적으로, 본 개시내용은 추론 모델에 대한 도메인이 가시 클래스들(예를 들어, 클래스들) 및 은닉 클 래스들 둘 모두를 포함할 수 있다는 것을 제시한다. 은닉 클래스들은, 아래에 더 상세히 설명되는, 모델 에 대한 가능한 프로빙 공격들을 검출하기 위해 사용된다. 추론 시스템에 대한 한가지 보안 위험은 프로빙이다. 추론 모델은 시스템을 \"기만(fool)\"할 수 있는 입력들을 식별하기 위한 노력으로 입력 섭동들 (input perturbation)로 공격되거나 프로빙될 수 있다. 보다 구체적으로, 공격자는 이미지 입력들에 사용되는 알려진 대상들을 꾸미거나, 노이즈를 주입하거나, 다른 방식으로 추론 모델에 대한 입력을 변환할 수 있다. 이 들 수정된 또는 변환된 입력들은 오분류를 초래하는 입력들을 생성하기 위해 추론 모델을 프로빙하는데 사용될 수 있다. 예를 들어, 총과 수도 꼭지의 이미지를 모핑하는 것은 추론 엔진이 총의 이미지를 수도 꼭지로서 오 분류하게 할 수 있다. 다른 예로서, 프로빙은 적대자가 모델 지원 기능을 인식하지 못하는 경우에 발생할 수 있다. 이러한 경우들에 서, 적대자는 모델의 기능에 대한 이해를 얻으려는 시도로 인위적으로 합성된 입력들 또는 잡음성 입력들을 적 용할 수 있다. 이러한 입력들은 종종 종래의 또는 예상된 입력들에 의해서는 통상적으로 활성화되지 않는 모델 의 영역들을 활성화 또는 여기시킨다. 일부 추론 시스템들은, 예를 들어, 적대적 섭동들을 필터링하기 위해 입력들을 전처리함으로써 입력들을 무결화 하려고 시도한다. 그러나, 이러한 기술들은 항상 신뢰성이 있는 것은 아니다. 또한, 이러한 전처리에 대한 계 산 요건들은 추론 시스템에 대한 필요한 전력 및 컴퓨팅 리소스 요건들을 추가한다. 이와 같이, 전처리는 항상 확장가능하지는 않다. 도 23a는 추론 모델을 훈련하기 위한 예시적 시스템을 예시한다. 시스템은 회로 및 메모리 를 포함한다. 메모리는 추론 모델, 명령어들, 시험/훈련 데이터 세트 및 출력 데이터를 저장한다. 시험/훈련 데이터 세트는 시험 데이터 및 훈련 데이터 양자 모두 를 포함한다. 시험 데이터 및 훈련 데이터는 예를 들어 도 3의 기법을 사용하여 추론 모델 을 \"훈련\"하는데 사용될 수 있다. 시험/훈련 데이터 세트의 예가 도 23b에 도시된다. 이 도면을 간략히 참조하면, 시험/훈련 데이터 세트 는 입력은 물론 예상 출력을 포함한다. 일반적으로, 예상된 입력들은 입력 값(들)(2361- n)을 포함할 수 있고, 여기서 n은 양의 정수이다. 예를 들어, 입력에 대해 도시된 바와 같이, 입력 값 (들)(2361-1), 입력 값(들)(2361-2), 입력 값(들)(2361-3), 입력 값(들)(2361-4), 입력 값(들)(2361-5) 내지 입력 값(들)(2361-N)이 있다. 각각의 입력 값(2361-n)에 대해, 연관된 예상 출력이 도시되어 있다. 예 상 출력들 각각은 가시 클래스 또는 은닉 클래스 중 어느 하나에 대응하며, 이에 대해 추론 모델은 입력을 분류하도록 훈련된다. 일 예로서, 가시 클래스들은, 펜, 칼, 검, 자, 가위, 및 연 필과 같은, 추론 시스템에 의해 분류될 대상들의 카테고리들에 대응할 수 있다. 은닉 클래스들은, 예를 들어, 펜들로서 위장된 칼들, 자들로서 위장된 검들 등과 같은 잠재적 프로빙을 표시할 수 있는 카테고리 들에 대응할 수 있다. 일부 예들에서, 은닉 클래스들은 입력들로서 허용되지 않는 블랙리스트 대상들에대응할 수 있다. 은닉 클래스들과 연관된 입력 값(들)(2361-n)은 추론 모델에 의한 오분류를 트리거하려 고 시도하기 위해 변환된 입력들에 대응할 수 있다. 예를 들어, 총의 이미지를 수도 꼭지의 이미지와 모핑함으 로써 예시적 입력 값(들)(2361-n)이 생성될 수 있다. 동작 동안, 훈련된 추론 모델은 입력들이 은닉 클래스들 중 하나의 카테고리화 또는 추론을 트리거할 때 네트워크에 대한 잠재적 프로빙 공격들을 식별하기 위해 사용될 수 있다. 추론 모델이 구현되는 추론 시 스템은 아래에 더 상세히 설명되는 일부 완화 액션들을 취하도록 배열될 수 있다. 도 24는 강화된 시스템 및 서버를 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 강 화된 시스템 및 서버는, WAN(wide area network), LAN(local area network) 또는 인터넷과 같은, 임의의 적절한 인터커넥트를 통해 결합될 수 있다. 강화된 시스템은 회로(2410-1), 메모리(2420-1), 인 터페이스(2430-1), 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE)을 포함한다. 메모리(2420- 1)는 명령어들(2428-1), 입력 데이터 및 난독화된 출력 데이터를 저장한다. TEE는 신뢰적 회로 및 신뢰적 메모리를 포함한다. 신뢰적 메모리는 TEE 명령어들, 추론 모델 , 출력 데이터, 난독화된 출력 데이터, 포렌식 데이터 및 프로빙 경보를 저장한 다. 서버는 회로(2410-3), 메모리(2420-3) 및 인터페이스(2430-3)를 포함한다. 메모리(2420-3)는 명령어 (2428-3), 포렌식 데이터, 프로빙 경보 및 포렌식 데이터베이스를 저장한다. 일반적으로, 강화된 시스템은 잠재적 프로빙 공격들을 검출하도록 동작한다. 회로(2410-1)는, 예를 들어, 입력 디바이스로부터 입력 데이터를 수신하기 위해 명령어들(2428-1)을 실행할 수 있다. TEE 회로는 입력 데이터(DD324)를 사용하여 추론 모델을 실행함으로써 출력 데이터를 생성하 기 위해 TEE 명령어들을 실행할 수 있다. TEE 회로는 입력 데이터가 잠재적 프로빙 공격일 수 있는지, 또는 다시 말해, 입력 데이터(DD324)가 잠재적 프로빙 공격과 연관되는지를 결정하기 위해 TEE 명령 어들을 실행할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 출력 데이터 가 은닉 클래스들에 대응하는지(예를 들어, 은닉 클래스들 중 하나인지 등)를 결정할 수 있 다. 달리 말하면, 추론 모델이 입력 데이터를 은닉 클래스들 중 하나로서 분류하면, TEE 회 로는 입력 데이터가 프로빙 공격과 연관된다고 결정할 수 있다. 2424가 잠재적 프로빙 공격과 연관된다고 결정한 것에 응답하여, TEE 회로는, TEE 명령어들을 실행 함에 있어서, 잠재적 프로빙 공격에 관련한 정보를 수집하고 수집된 정보를 포렌식 데이터로서 저장할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 입력 디바이스, 입력 디바이스 조작자, 입력 데이터, 추론 모델에 관련한 데이터(예를 들어, 컨텍스트, 이력, 상태들 등) 의 표시를 포함하는 정보를 포렌식 데이터로서 저장할 수 있다. 게다가, TEE 회로는, TEE 명령어 들을 실행할 때, 프로빙 경보를 생성할 수 있고, 프로빙 경보의 표시를(예를 들어, 인터페이스 (2430-1), 등을 통해) 서버에게 전송할 수 있다. 프로빙 경보는 잠재적 프로빙 공격이 시스템 에 대해 개시되었고 포렌식 데이터가 저장되었다는 표시를 포함할 수 있다. 추가적으로, TEE 회로 는, TEE 명령어들을 실행할 때, 포렌식 데이터를 서버에 제공할 수 있다. 일부 구현들에서, 강화된 시스템은 프로빙이 검출되었을 수 있다는 사실을 숨기기 위해 출력 데이터 를 난독화할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 출력 데이터 로부터 난독화된 출력 데이터를 생성할 수 있고, 여기서 난독화된 출력 데이터는 가시 클래 스들을 포함할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 출력 데이터 의 은닉 클래스와 연관된 가시 클래스의 표시를 포함하는 난독화된 출력 데이터를 생 성할 수 있다. 위의 총 및 수도 꼭지 예를 사용하여; 출력 데이터는 총을 수도 꼭지로 기만하거나 오분 류하도록 수정된 총의 이미지인 입력 데이터에 대응하는 은닉된 분류의 표시를 포함할 수 있다. 그러나, 난독화된 출력 데이터는 입력 데이터의 수도 꼭지로서의 분류를 나타낼 수 있다. 예를 들 어, 프로빙이 검출된다는 통지를 공격자에게 제공하지 않기 위해 난독화된 출력 데이터가 생성될 수 있다. 회로(2410-3)는 프로빙 경보를 수신하기 위해 명령어들(2428-3)을 실행할 수 있다. 프로빙 경보를 수신하는 것에 응답하여, 회로(2410-3)는, 명령어(2428-3)를 실행할 때, 강화된 시스템으로부터 포렌식 데이터를 수신할 수 있고 포렌식 데이터베이스에 포렌식 데이터를 추가할 수 있다. 포렌식 데이터베이스는, 예를 들어, 추가 오분류를 방지하는데 사용될 수 있다.도 25는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 은닉 클래스들을 사용하여 잠재적인 프로빙을 검출하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 2510 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수 신할 수 있다. 예를 들어, 회로(2410-1)는, 명령어들(2428-1)을 실행할 때, (예를 들어, 입력 디바이스 등으로부터) 입력 데이터를 수신할 수 있다. 블록 2520 \"추론 모델을 통해, 수신된 입력 데이터에 기초 하여 출력 데이터를 생성\"으로 계속하여, 강화된 시스템은 추론 모델 및 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, TEE 회로는, 명령어들을 실행할 때, 입력 데이 터에 대해 추론 모델을 실행함으로써 출력 데이터를 생성할 수 있다. 판정 블록 2530 \"은닉 클래스와 연관된 출력 데이터인가?\"로 계속하여, 강화된 시스템은 출력 데이터 가 은닉 클래스와 연관되는지, 또는 달리 말하면, 추론 시스템이 입력 데이터를 은닉 클래스로서 분류하는지를 결정할 수 있다. 판정 블록 2530으로부터, 로직 흐름은 블록 2540 또는 블록 2550 중 어느 하나로 계속될 수 있다. 출력 데이터가 은닉 클래스와 연관되지 않는다는 결정 에 기초하여 로직 흐름은 판정 블록 2530으로부터 블록 2540으로 계속될 수 있는 반면, 출력 데이터 가 은닉 클래스와 연관되어 있다는 결정에 기초하여 로직 흐름은 판정 블록 2530으로부터 블 록 2550으로 계속될 수 있다. 블록 2540 \"생성된 출력을 제공\"에서, 강화된 시스템은 출력 데이터를 출력 데이터 소비자(예를 들 어, 출력 디바이스, 다른 컴퓨팅 디바이스 등)에게 제공할 수 있다. 예를 들어, 회로(2410-1)는, 명령어들 (2428-1)을 실행할 때, 출력 데이터를 출력 데이터 소비자에게 제공할 수 있다. 블록 2540으로부터, 로 직 흐름은 종료될 수 있거나, 새로운 입력들을 수신하는 것에 기초하여 반복할 수 있다. 블록 2550 \"잠재적 프로빙에 대해 모니터링 시스템에 경보\"에서, 강화된 시스템은 잠재적 프로빙 공격들 에 대해 모니터링 시스템(예를 들어, 서버)에 경보할 수 있다. 예를 들어, 회로(2410-1)는, 명령어들 (2428-1)을 실행할 때, 프로빙 경보를 서버에 제공할 수 있다. 블록 2560 \"포렌식 데이터 수집\"으 로 계속되어, 강화된 시스템은 잠재적 프로빙 공격과 연관된 포렌식 데이터를 수집할 수 있다. 예를 들 어, TEE 회로는, TEE 명령어들을 실행함에 있어서, 잠재적 프로빙 공격과 연관된 정보를 수집하고 수집된 정보의 표시들을 포렌식 데이터로서 저장할 수 있다. 블록 2570 \"포렌식 데이터를 모니터링 시스 템에 제공\"으로 계속되어, 강화된 시스템은 포렌식 데이터를 모니터링 시스템(예를 들어, 서버 )에 제공할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 포렌식 데이터 를 서버에 제공할 수 있다. 블록 2580 \"출력 데이터를 난독화\"로 계속하여, 강화된 시스템은 출력 데이터를 난독화할 수 있다. 예를 들어, TEE 회로는, TEE 명령어들을 실행할 때, 출력 데이터로부터 난독화된 출력 데이 터를 생성할 수 있다. 블록 2590으로 계속하여, 난독화된 출력 데이터를 출력 데이터 소비자(예를 들어, 출력 디바이스, 다른 컴퓨팅 디바이스 등)에게 제공한다. 예를 들어, 회로(2410-1)는, 명령어들(2428-1)을 실 행할 때, 난독화된 출력 데이터를 출력 데이터 소비자에게 제공할 수 있다. 블록 2590으로부터, 로직 흐 름은 종료될 수 있거나, 새로운 입력을 수신한 것에 기초하여 반복할 수 있다. 적대적 공격으로부터 보호하기 위한 입력 왜곡 언급한 바와 같이, 추론 모델들은 다수의 공격 벡터를 따른 적대적 공격들에 취약하다. 예를 들어, 추론 모델 들의 도난 및/또는 인가되지 않은 사용뿐만 아니라 프로빙에 대한 민감성은 2가지 이러한 공격 벡터들이다. 따 라서, 추론 모델의 부적절하거나 인가되지 않은 사용을 검출하는 것은 물론, 프로빙을 방지하거나 억제시키는 능력이 바람직하다. 일반적으로, 본 개시내용은 난독화된 입력 데이터로 훈련되는 추론 모델을 제공한다. 달리 말하면, 본 개시내 용은 난독화되거나 일부 왜곡들을 포함하는 입력 데이터를 정확하게 분류하도록 훈련된 추론 모델을 제공한다. 난독화 또는 왜곡은 처리(도 26 내지 도 28)를 통해 또는 입력 디바이스의 물리적 속성(도 29 내지 도 30)의 결 과로서 제공될 수 있다. 따라서, 적대적 섭동들에 기초한 공격들은 덜 효과적이거나, 무효할 수 있는데, 그 이 유는 모델이 난독화된 입력 데이터를 정규 입력 데이터와 달리 분류하도록 훈련되기 때문이다. 일부 예들에서, 입력 데이터는 미리 선택된 키 등을 사용하여 입력 데이터를 인코딩하는 것을 통해 난독화될 수 있다(예를 들어, 도 26 및 도 27). 다른 예들에서, 입력 데이터는 필터들, 입력 왜곡 디바이스들 등을 통해 입력 디바이스(예를 들어, 도 28)에서 난독화될 수 있다. 종종, 이미지 캡처 디바이스 및 이미지 난독화의 예들 이 본 명세서에서 사용된다는 점에 유의한다. 그러나, 본 개시내용은 예를 들어, 오디오, 비디오, 다른 데이터 타입들 또는 구조들 등과 같은 임의의 타입의 입력 데이터를 난독화하도록 구현될 수 있다. 도 26은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE) 을 포함한다. 메모리는 추론 모델, 입력 데이터, 난독화된 입력 데이터, 출력 데이터 , 및 명령어들을 저장한다. TEE는 난독화 키 및 TEE 명령어들을 저장한다. 일반적으로, TEE는 시스템 내의 임의의 신뢰할 수 있는 실행 엔클레이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회로 및 메모리로부터 세그먼트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 난독화 키의 기밀성과 함께 (예를 들어, TEE 명령어 들의) 격리된 실행과 같은 보안 특징들을 제공할 수 있다. 일반적으로, 시스템은 난독화된 입력 데이터를 보안 방식으로(예를 들어, TEE 등을 통해) 생성할 수 있다. 이러한 난독화된 입력 데이터는 이 러한 난독화된 입력 데이터를 분류하도록 훈련된 추론 모델(예를 들어, 추론 모델)에 대한 입력 데이터로 서 사용될 수 있다. 따라서, 정확하게 난독화된 입력 데이터가 없으면, 추론 모델은 사용 불가능할 수 있다. 즉, 추론 모델은 난독화된 입력 데이터에 대해 훈련되기 때문에 입력 데이터 자체를 정확하게 분류하지 않을 수 있다. 이는 모델 도난, 모델의 인가되지 않은 사용, 또는 프로빙을 억제할 수 있다. 동작 동안, 시스템의 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 예를 들어, 회로는 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 다른 예로 서, 회로는 인터페이스를 통해 다른 컴퓨팅 디바이스로부터 입력 데이터를 수신할 수 있다. TEE는, 명령어들을 실행할 때, 입력 데이터 및 난독화 키로부터 난독화된 입력 데이터 를 생성할 수 있다. 예를 들어, TEE는, 명령어들을 실행할 때, 난독화 키를 사용하여 입력 데이터를 인코딩, 왜곡, 또는 다른 방식으로 난독화할 수 있다. 회로는, 명령어들을 실행할 때, 난독화된 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 앞서 설명한 바와 같이, 추론 모델은 (예를 들어, 난독화된 입 력 데이터와 같은) 난독화된 입력 데이터에 대해 훈련되고, 따라서, 추론 모델은 본 명세서에 설명 되는 바와 같이 정확하게 난독화된 입력 데이터를 정확하게 분류할 수 있다. 일부 예들에서, 입력 디바이스는 난독화된 입력 데이터를 출력하도록 배열될 수 있다. 도 27은 시스템 및 입력 디바이스를 포함하는 추론 환경을 예시한다. 입력 디바이스는 회로(2710-1), 메모 리(2720-1), 인터페이스(2730-1), 입력 캡처 회로 및 신뢰할 수 있는 실행 환경(TEE)을 포함한다. 메모리(2720-1)는 입력 데이터, 난독화된 입력 데이터, 및 명령어들(2728-1)을 저장한다. TEE는 난독화 키 및 TEE 명령어들을 저장한다. 일반적으로, TEE는 입력 디바이스 내의 임의의 신뢰할 수 있는 실행 엔클레이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로 (2710-1) 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회 로(2710-1) 및 메모리(2720-1)로부터 세그먼트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 난독화 키의 기밀성과 함께 (예를 들어, TEE 명령어들의) 격리된 실행과 같은 보안 특징들을 제공할 수 있다. 입력 디바이스는 입력 데이터를 캡처하고, 입력 데이터를 난독화하고, 난독화된 입력 데이터를 시스템 에 제공하도록 배열될 수 있다. 일반적으로, 입력 디바이스는 난독화된 입력 데이터를 보안 방식 으로(예를 들어, TEE 등을 통해) 생성할 수 있다. 입력 캡처 회로는 입력 데이터를 캡처하 도록 배열된 임의의 하드웨어일 수 있다. 예를 들어, 입력 캡처 회로는 이미지 센서(예를 들어, CMOS 센 서 등), 마이크로폰, GPS 센서, 열 센서, 생체인식 센서 등일 수 있다. 일부 예들에서, 회로(2710-1)는 입력 캡처 회로에 의해 생성된 신호들을 수신하고 이러한 신호들의 표시들을 입력 데이터로서 저장하기 위해 명령어들(2728-1)을 실행할 수 있다. TEE는, 명령어들을 실행할 때, 입력 데이터 및 난독화 키로부터 난독화된 입력 데이터 를 생성할 수 있다. 예를 들어, TEE는, 명령어들을 실행할 때, 난독화 키를 사용하여 입력 데이터를 인코딩, 왜곡, 또는 다른 방식으로 난독화할 수 있다. 회로(2710-1)는 난독화된 입력 데 이터를 시스템에게 전송하기 위해 명령어들(2728-1)을 실행할 수 있다. 예를 들어, 회로(2710-1)는 인터페이스(2730-1)로 하여금 난독화된 입력 데이터의 표시들을 포함하는 정보 요소를 (예를 들어, 인터페이스(2730-2) 등을 통해) 시스템에게 전송하게 하기 위해 제어 신호들을 인터페이스(2730-1)에게 전송할 수 있다. 회로(2710-2)는, 명령어들(2728-2)을 실행할 때, 난독화된 입력 데이터로부터 출력 데이터를 생성 하기 위해 추론 모델을 실행할 수 있다. 앞서 설명한 바와 같이, 추론 모델은 (예를 들어, 난독화 된 입력 데이터와 같은) 난독화된 입력 데이터에 대해 훈련되고, 따라서, 추론 모델은 본 명세서에 설명되는 바와 같이 정확하게 난독화된 입력 데이터를 정확하게 분류할 수 있다. 도 28은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 입력 데이터를 난독화함으로써 적대적 공격을 억제하기 위해 로직 흐름의 동작을 수행할 수 있다. 다른 예로서, 추론 환경 시스템(또는 그 컴포넌트들)은 입력 데이터를 난독화함으로써 적대적 공격들을 억제하 기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 명확성을 위해 강화된 시스템 을 참조하여 설명된다. 그러나, 예들은 이에 관하여 제한되지 않는다. 로직 흐름은 블록 2810 \"입력 데이터 수신\"에서 시작할 수 있고, 시스템은 입력 데이터를 수 신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터, 인터페이스를 통해, 또는 유사한 것에 의해, 입력 데이터를 수신할 수 있다. 블록 2820 \"입력 데이터 난독화\"하는 것으로 계속하 여, 시스템은 난독화 키에 기초하여 입력 데이터를 난독화할 수 있다. 시스템은 보안 방식으로 입력 데이터를 난독화할 수 있다는 점에 유의한다. 즉, 난독화 키는 (예를 들어, TEE 등에) 안전하게 저장될 수 있고, 난독화된 입력 데이터는 보안 처리를 통해 (예를 들어, TEE 등에) 생성될 수 있다. 예를 들어, TEE는, 명령어들을 실행할 때, 난독화된 입력 데이 터를 생성하기 위해 난독화 키를 사용하여 입력 데이터를 난독화할 수 있다. 블록 2830 \"추론 모델을 통해, 난독화된 입력 데이터에 기초하여 출력을 생성\"으로 계속하여, 시스템은, 추론 모델을 통해, 난독화된 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로는 난독화된 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 일부 구현들에서, 입력은 입력 디바이스들의 하드웨어 특징들 또는 물리적 특징들에 의해 난독화될 수 있다. 예를 들어, 카메라는 종종 이미지를 분류하도록 배열된 추론 시스템의 입력 디바이스로서 사용된다. 이러한 예 에서, 카메라는 캡처된 이미지를 왜곡 또는 난독화하고 난독화된 입력 데이터를 제공하기 위한 렌즈를 구비할 수 있다. 도 29는 시스템 및 입력 디바이스를 포함하는 추론 환경을 예시한다. 입력 디바이스 는 회로(2910-1), 메모리(2920-1), 인터페이스(2930-1) 및 입력 캡처 회로를 포함한다. 메모리(2920- 1)는 난독화된 입력 데이터 및 명령어들(2928-1)을 저장한다. 입력 디바이스는 난독화된 입력 데 이터를 캡처하고 난독화된 입력 데이터를 시스템에 제공하도록 배열될 수 있다. 일반적으로, 입력 디바 이스는 입력을 캡처하고, 입력을 캡처하는 것의 일부로서, 캡처된 입력을 난독화할 수 있다. 예를 들어, 입력 디바이스가 카메라인 경우, 카메라에 의해 캡처된 이미지들을 왜곡시키도록 배열된 난독화 렌즈 가 카메라에 제공될 수 있다. 회로(2910-1)는 입력 캡처 회로에 의해 생성된 신호들을 수신하고 이들 신호들의 표시들을 난독화된 입력 데이터로서 저장하기 위해 명령어들(2928-1)을 실행할 수 있다. 또한, 회로(2910-1)는 난독화된 입력 데이터를 시스템에게 전송하기 위해 명령어들(2928-1)을 실행 할 수 있다. 예를 들어, 회로(2910-1)는 인터페이스(2930-1)로 하여금 난독화된 입력 데이터의 표시들을 포함하는 정보 요소를 (예를 들어, 인터페이스(2930-2) 등을 통해) 시스템에게 전송하게 하기 위해 제어 신호들을 인터페이스(2930-1)에게 전송할 수 있다. 회로(2910-2)는, 명령어들(2928-2)을 실행할 때, 난독화된 입력 데이터로부터 출력 데이터를 생성 하기 위해 추론 모델을 실행할 수 있다. 앞서 설명한 바와 같이, 추론 모델은 (예를 들어, 난독화 된 입력 데이터와 같은) 난독화된 입력 데이터에 대해 훈련되고, 따라서 추론 모델은 이미지 캡처 회로 및 난독화 렌즈를 통해 캡처된 입력을 정확하게 분류할 수 있다. 도 30은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 추론 환경 시스템(또는 그 컴포넌트들)은 입력 데이터를 난독화함으로써 적대적 공격들을 억제하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 3010 \"입력 디바이스로부터 난독화된 입력 데이터를 수신\"에서 시작할 수 있고, 난독화 된 입력 데이터가 입력 디바이스로부터 수신될 수 있다. 입력 데이터는 이미지 데이터를 캡처하고 캡처된 이미지 데이터를 캡처 프로세스의 일부로서(예를 들어, 난독화 렌즈 등을 통해) 난독화하도록 배 열될 수 있다. 블록 3020 \"추론 모델을 통해, 난독화된 입력 데이터에 기초하여 출력을 생성\"으로 계속하여, 시스템은, 추론 모델을 통해, 난독화된 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로(2910-2)는 난독화된 입력 데이터로부터 출력 데이터를 생성하기 위해 추론 모델을 실행 할 수 있다. 네트워크 활성화에 기초한 추론 확률 언급한 바와 같이, 추론 시스템들에 대한 잠재적 공격 벡터는 오분류를 야기하려는 이러한 의도로 추론 시스템 에서의 본연의 부정확성들(예를 들어, 손실 함수들, 등)을 이용하고 있다. 이러한 공격의 일반적인 예는 이미 지 내의 선택된 픽셀들을 조작하여 분류 시스템이 이미지를 오분류하게 하는 것이다. 특정 예로서, CIFAR- 10(Canadian Institute for Advanced Research) 분류 시스템에 제공된 단일 픽셀 이미지는 80% 신뢰도로 항공 기로서의 단일 픽셀 이미지의 분류를 야기한다. 본 개시내용은 추론 신뢰성 점수를 생성하기 위해 추론 시스템으로부터 출력을 생성하는 것과 관련된 정보(예를 들어, 네트워크 활성화들 등)를 이용하도록 배열된 강화된 시스템을 제공한다. 신뢰성 점수는 추론 모델 자체 에 의해 생성된 신뢰도 확률을 증대시키거나 수정하기 위해 생성될 수 있다. 달리 말하면, 일부 추론 모델들 (예를 들어, 콘볼루션 신경망들 등)은 신뢰도 확률뿐만 아니라 추론의 표시들을 포함하는 출력을 생성한다. 이 러한 예에서, 신뢰성 점수는 추론 모델에 의해 생성된 신뢰도 확률을 보충하도록 생성될 수 있다. 도 31은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스 및 입력 디바이스를 포함한다. 메모리는 추론 증강 맵, 추론 모델, 입력 영역 영향 맵, 입력 데이터, 신뢰성 점수, 출력 데이터 , 신뢰성 규칙들, 및 명령어들을 저장한다. 일반적으로, 강화된 시스템은 입력 데이터의 어느 부분들 또는 컴포넌트들이 출력 데이터에 영향을 미쳤는지의 표시들에 부분적으로 기초하여 신뢰성 점수를 제공할 수 있다. 동작 동안, 시스템의 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 예를 들어, 회로는 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 다른 예로서, 회로는 인터페이스 를 통해 다른 컴퓨팅 디바이스로부터 입력 데이터를 수신할 수 있다. 회로는, 명령어들을 실행함에 있어서, 입력 데이터로부터 출력 데이터를 생성하고 또 한 추론 증강 맵을 생성하기 위해 추론 모델을 실행할 수 있다. 달리 말하면, 추론 모델은, 입력 데이터에 기초하여, 출력 데이터 및 추론 증강 맵을 출력할 수 있다. 일반적 으로, 추론 증강 맵은 추론 동안 수행되는 산술 연산들의 표시들 또는 정보, 실행 동안(예를 들어, 출력 을 생성할 때) 추론 모델의 상태들 등을 포함할 수 있다. 일부 예들에서, 추론 증강 맵은 출력 데이터의 생성 동안 모델 활성화 맵 또는 네트워크 활성화 히트 맵(예를 들어, 층 활성화들, 뉴런 활성화들 등의 표시들을 포함함)을 포함할 수 있다. 일부 예들에서, 추론 증강 맵은 다수의 층들(예를 들어, 각각의 층은 추론 모델의 각각의 층에 대한 뉴런 활성화들 등에 대응함)을 포함할 수 있다. 회로는 명령어들의 실행시에 입력 영역 영향 맵을 생성할 수 있다. 예를 들어, 회로 는 추론 증강 맵에 기초하여 입력 데이터를 마스킹할 수 있다. 특정 예로서, 회로는 출력 데이터를 생성하기 위해 추론 모델을 활성화하는 것을 주로 담당하지 않았던 입력 데이터의 영역, 부분 또는 컴포넌트를 식별할 수 있다. 특정 예로서, 추론 모델이 이미지 분류기이고 입력 데이터 가 이미지라고 가정한다. 입력 영역 영향 맵은 (추론 증강 맵에 기초하여) 출력 데이터 에 영향을 미치는 영역들을 식별하는 입력 데이터의 사본을 포함할 수 있다. 일부 예들에서, 회로 는 추론 증강 맵 및 신뢰성 규칙들에 기초하여 입력 영역 영향 맵을 생성할 수 있다. 이러한 예에서, 신뢰성 규칙은 뉴런 활성화에 대응하는 임계값 활성화 레벨의 표시를 포함할 수 있다. 예를 들어, 뉴런 활성화 함수가 0과 1 사이의 출력을 야기하는 경우, 신뢰성 규칙들은 출력 데이터(312 6)에 기여하거나 이에 영향을 주기 위해 뉴런 활성화가 0.3보다 더 커야 한다는 표시를 포함할 수 있다. 일부예들에서, 신뢰성 규칙들은 도메인들, 태스크들, 분류 클래스들 등 사이에서 달라질 수 있다. 특정 예로 서, 신뢰성 규칙들은 분류 클래스 \"개들\"에 대한 규칙들 및 분류 클래스 \"고양이들\"에 대한 상이한 규칙 들을 포함할 수 있다. 회로는, 명령어들을 실행할 때, 입력 영역 영향 맵 및 신뢰성 규칙들에 기초하여 신뢰 성 점수를 생성할 수 있다. 앞서 설명된 이미지 분류기 예를 사용하여, 회로는 (예를 들어, 입력 영역 영향 맵 등에 기초하여) 출력 데이터에 기여하는(또는 기여하지 않는) 입력 데이터(예 를 들어, 이미지)의 백분율에 기초하여 신뢰성 점수를 생성할 수 있다. 다른 예로서, 회로는 (예 를 들어, 입력 영역 영향 맵 등에 기초하여) 출력 데이터에 기여하는(또는 기여하지 않는) 이미지 의 부분들에 대한 이미지 데이터의 가변성(예를 들어, 픽셀 컬러, 픽셀 컬러 사이의 분산 등)에 기초하여 신뢰 성 점수를 생성할 수 있다. 일부 예들에서, 회로는 출력 데이터에 기여하지 않는 이미지의 부분들에 대한 이미지 데이터의 가변성에 대한 출력 데이터에 기여하는 이미지의 부분들에 대한 이미지 데이터의 가변성(예를 들어, 픽셀 컬러, 픽셀 컬러 사이의 분산 등)의 비율에 기초하여 신뢰성 점수를 생 성할 수 있다. 일부 예들에서, 회로는 입력 데이터 가변성, 입력 데이터의 출력 데이터 에 대한 기여(또는 기여하지 않음)의 백분율, 및/또는 입력 데이터 가변성의 비율의 조합에 기초하여 신 뢰성 점수를 생성할 수 있다. 일부 예들에서, 회로는 입력 데이터의 어느 부분(들)이 출력 데이터에 기여했는지(또는 기여하지 않았는지)에 기초하여 신뢰성 점수를 생성할 수 있다. 예를 들어, 입력 데이터의 선택된 부분들(예를 들어, 이미지의 코너들 등)이 출력 데이터에 기여한 경우, 신뢰성 점수가 보다 낮을 수 있다. 도 32는 본 명세서에 설명된 바와 같이 추론 신뢰성 점수를 생성하기 위해 강화된 시스템(예를 들어, 강화된 시 스템 등)에 의해 구현될 수 있는 예시적 기법을 예시한다. 기법은 편의성 및 명확성을 위해 도 31의 강화된 시스템을 참조하여 설명된다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 32.1에서 시작할 수 있다. 원 32.1에서, 입력 디바이스는 입력 데이터를 캡처할 수 있다. 원 32.2에서, 추론 모델은 출력 데이터를 생성할 수 있다. 예를 들어, 회로는 추론 모델 을 실행하여 출력 데이터를 생성할 수 있다. 일부 예들에서, 출력 데이터는 추론 및 추론 확률 양 자 모두를 포함할 수 있다. 원 32.3에서, 추론 모델은 추론 증강 맵을 출력할 수 있다. 예를 들 어, 추론 모델은 출력 데이터를 생성하는 것의 일부로서 추론 증강 맵을 생성할 수 있다. 원 32.4에서, 회로는, 명령어들의 실행시, 입력 영역 영향 맵을 생성할 수 있다. 예를 들어, 회로는 (예를 들어, 추론 증강 맵에 기초하여) 추론 모델의 어느 부분들이 입력 데이 터에 의해 활성화되는지를 결정할 수 있다. 원 32.5에서, 회로는, 명령어들을 실행할 때, 입력 영역 영향 맵을 생성할 수 있다. 예를 들어, 회로는 신뢰성 규칙 및 입력 영역 영향 맵 에 부분적으로 기초하여 신뢰성 점수를 생성할 수 있다. 기법은 선택적으로 원 32.6을 포함 할 수 있다. 원 32.6에서, 회로는 출력 데이터의 일부로서 추론 모델에 의해 출력되는 확률 을 업데이트, 수정 또는 다른 방식으로 증대시킬 수 있다. 도 33은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 로직 흐름의 동작들을 수행하여 추론 모델에 의해 생성된 출력의 신뢰성의 표시를 포함하는 신뢰성 점수 를 생성할 수 있다. 로직 흐름은 명확성을 위해 강화된 시스템을 참조하여 설명된다. 그러나, 예 들은 이에 관하여 제한되지 않는다. 로직 흐름은 블록 3310 \"입력 데이터 수신\"에서 시작할 수 있으며, 시스템은 입력 데이터를 수신할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스로부터, 인터페이스를 통해, 또 는 유사한 것에 의해, 입력 데이터를 수신할 수 있다. 블록 3320 \"추론 모델을 통해, 수신된 입력 데이 터에 기초하여 출력 데이터를 생성\" 및 블록 3330 \"추론 모델을 통해 추론 증강 맵을 생성\"으로 계속하여, 시스 템은 추론 모델을 통해 입력 데이터으로부터의 출력 데이터 및 추론 증강 맵을 생성할 수 있다. 예를 들어, 회로는 추론 모델의 실행(또는 추론)과 연관된 입력 데이터 및 추론 증강 맵으로부터 출력 데이터를 생성하기 위해 추론 모델을 실행할 수 있다. 언급된 바와 같이, 추론 증강 맵은 출력 데이터 생성으로부터의 추론 모델 활성화들에 기초한다. 따라서, 추론 증강 맵은 출력 데이터의 생성 동안 추론 모델의 \"활성화들\"에 대응한다. 언급된 바와 같이, 추론 증강 맵은 추론 모델의 활성화들에 대응하는 네트워크 활성화 히트 맵을 포함할 수 있다. 블록 3340 \"입력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성\"으로 계속하여, 시스템은 출력 데이터에 영향을 미치는 (예를 들어, 추론 모델의 활성화에 기여하는) 입력 데이터의 영역들의 표시들을 포함하는 입력 영역 영향 맵을 생성할 수 있다. 예를 들어, 회로는 명령어들 을 실행함에 있어서, 추론 증강 맵에 기초하여 출력 데이터에 기여하는 입력 데이터의 부분들을 식별할 수 있고, 입력 데이터의 이러한 부분들의 표시들을 포함하는 입력 영역 영향 맵을 생성할 수 있다. 블록 3350 \"적어도 입력 영역 영향 맵에 기초하여 신뢰성 점수를 생성\"으로 계속하여, 시스템은 입력 영 역 영향 맵에 기초하여 신뢰성 점수를 생성할 수 있다. 예를 들어, 회로는 명령어들 을 실행함에 있어서 입력 영역 영향 맵에 기초하여 출력 데이터의 신뢰성을 나타내는 점수를 결정 하고, 점수의 표시를 신뢰성 점수로서 저장할 수 있다. 로직 흐름은 블록 3360 \"신뢰성 점수를 추론 모델에 의해 생성된 확률과 융합\"을 선택적으로 포함할 수 있고, 시스템은 출력 데이터의 일부로서 추론 모델에 의해 출력된 확률을 업데이트, 수정 또 는 다른 방식으로 증대시킬 수 있다. 섹션 III - 데이터 신뢰 제3자 추론의 결합에 의한 입력 세트 무결화 도 34는 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 및 입력 디바이스를 포함한다. 메모리는 하나 이상의 추론 모델(3422- 1, 3422-2, 3422-N)(또는 추론 모델), 훈련 데이터 세트, 하나 이상의 분류 데이터(3425-1, 3425- 2, 3425-N)(또는 분류 데이터), 상관되지 않은 출력 데이터, 상관된 출력 데이터 및 명령어 들을 저장한다. 동작 동안, 회로는 명령어들 및/또는 추론 모델들 중 하나 이상을 실 행하여 훈련 데이터 세트를 상관되지 않은 출력 데이터 및/또는 상관된 출력 데이터로 분리 할 수 있다. 추론 시스템들에 대한 공격은 추론 모델의 훈련 동안 백도어들(예를 들어, 은닉 클래스들)의 생성을 포함할 수 있다. 백도어는 악의적 행위자에게 의도하지 않은 액세스를 제공하거나 추론 시스템의 하나 이상의 양태들을 제어할 수 있다. 예를 들어, 악의적 행위자(예를 들어, 범죄자 데이터 과학자 또는 데이터 공급자)는 훈련 세 트에 부적절한 데이터를 주입할 수 있어서, 훈련된 추론 모델에서 숨겨진 취약점들을 야기한다. 이러한 취약점 들은 추론 모델이 입력 데이터를 오분류하게 할 수 있다. 다른 예로서, 훈련 세트에 주입된 부적절한 데이터는 테러리스트들 및 유명인사들 양자 모두를 식별하는 훈련된 추론 모델을 도출할 수 있다. 일반적으로, 훈련 데이터를 준비(예를 들어, 입력에 대한 라벨 표시 등)하는 것은 악의적 행위자에 의한 훈련 데이터의 수정과 같은 공격 벡터들을 노출시키는 인간의 노동이다. 부정확하게 준비된 훈련 데이터를 검토, 검 출 및 정정하는 것도 시간 소모적이고 노동 집약적인 프로세스이다. 본 개시내용은 샘플들 각각이 상관되지 않 은 출력 데이터 또는 상관된 출력 데이터 중 어느 쪽으로 고려될 수 있는지를 결정하기 위해 2개 이상의 추론 모델들을 사용하여 훈련 데이터 세트 내의 각각의 샘플을 분류하도록 배열된 강화된 시스템을 제공한다. 예를 들어, 동작 동안 회로는 (예를 들어, 입력 디바이스로부터의 입력 데이터로서) 훈련 데이터 세트 를 수신하기 위해 명령어들을 실행할 수 있다. 전형적으로, 훈련 데이터 세트는 복수의 샘 플을 포함할 수 있다. 훈련 데이터 세트 내의 각각의 샘플에 대해, 회로는 분류 데이터(3425-1)를 생성하기 위해 추론 모델(3422-1), 분류 데이터(3425-2)를 생성하기 위해 추론 모델(3422-2), 및 분류 데이터 (3425-N)를 생성하기 위해 추론 모델(CA 122-N)를 실행할 수 있다. 때때로, 훈련 데이터 세트 내의 하나 이상의 샘플에 대한 분류 데이터는 제3자 서비스에 의해 생성될 수 있다. 회로는 분류 데이터를 비교하고 훈련 데이터 세트 내의 각각의 샘플이 추론 모델 각각에 의해 동일하게 분류되었는지를 결정하기 위해 명령어를 실행할 수 있다. 또한, 회로는 각각의 추론 모델에 의해 동일하게 분류되지 않은 훈련 데이터 세트 내의 샘플 을 상관되지 않은 출력 데이터에 추가하고 각각의 추론 모델에 의해 동일하게 분류된 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 추가하기 위한 명령어를 실행할 수 있다. 다른 경 우에는, 샘플이 상관되지 않은 출력 데이터 또는 상관된 출력 데이터 중 어느 쪽에 추가되어야 하는지를 결정하기 위해 임계 수의 상이한 분류들이 사용될 수 있다. 다양한 예들에서, 추론 모델들에 대 한 신뢰 파라미터는 동일한 입력 상의 상이한 시스템들에 의해 제공되는 출력들에서의 분류기 분포의 함수에 기 초하여 설정될 수 있다. 상관된 출력 데이터는 백도어들을 포함하지 않는 것으로 신뢰되는 추론 모델을 훈련하는 데 사용될 수 있 다. 달리 말하면, 상관된 출력 데이터는 백도어들을 포함하지 않는 것으로 신뢰되는 추론 모델을 생성하 는 데 사용되는 머신 러닝 알고리즘에 대한 훈련 세트로서 사용될 수 있다. 일부 예들에서, 상관된 출력 데이 터 상관된 출력 데이터에 대해 훈련된 추론 모델은 신뢰적 추론 모델로서 지칭될 수 있다. 추가적으로, 상관되지 않은 출력 데이터는 추가의 제어가능 적대적 또는 복원력 훈련 흐름들에서 사용될 수 있다. 때 때로, 회로는 상관되지 않은 출력 데이터 및/또는 상관된 출력 데이터를 출력 디바이스, 다 른 컴퓨팅 디바이스 등에 제공하기 위해 명령어들을 실행할 수 있다. 하나 이상의 예에서, 상관된 출력 데이터 및/또는 상관되지 않은 출력 데이터를 특징짓는 측정치 세트가 생성될 수 있다. 도 35는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 훈련 데이터 세트를 상관되지 않은 출력 데이터와 상관된 출력 데이터로 분리하기 위해 로직 흐름의 동작 들을 수행할 수 있다. 로직 흐름은 블록 3510 \"복수의 샘플들을 갖는 훈련 데이터 세트 수신\"에서 시작할 수 있고, 강화된 시스 템은 복수의 샘플들을 포함하는 훈련 데이터 세트를 수신할 수 있다. 예를 들어, 강화된 시스템 은 입력 디바이스로부터 훈련 데이터 세트를 수신할 수 있다. 블록 3520 \"훈련 데이터 세트 내의 샘플에 기초하여 2개 이상의 추론 모델에 대한 분류 데이터를 생성\"으로 계속하여, 강화된 시스템은 훈련 데이터 세트에서의 샘플에 기초하여 2개 이상의 추론 모델 각각에 대한 분류 데이터를 생성할 수 있다. 예를 들어, 강화된 시스템은 추론 모델(3422-1)에 기초한 훈련 데이터 세트 내의 샘플에 대한 분류 데이터(3425-1), 또는 그 일부, 추론 모델(3422-2)에 기초한 훈련 데이터 세트 내의 샘 플에 대한 분류 데이터(3425-2), 또는 그 일부, 및 추론 모델(3422-N)에 기초한 훈련 데이터 세트 내의 샘플에 대한 분류 데이터(3425-N), 또는 그 일부를 생성할 수 있다. 판정 블록 3530 \"샘플에 기초하여 각각의 추론 모델에 대해 생성된 분류 데이터가 상관 임계값을 충족하는가?\" 로 진행하여, 강화된 시스템은 훈련 데이터 세트 내의 샘플에 기초하여 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 상관 임계값을 충족시키는지를 결정할 수 있다. 일부 예들에서, 강 화된 시스템은 훈련 데이터 세트 내의 샘플에 2개 이상의 추론 모델들에 의해 최소 신뢰도 수준을 갖는 공통 분류가 할당되는지를 결정할 수 있다. 예를 들어, 강화된 시스템은 샘플에 대응하는 분류 데이터(3425-1)의 부분, 샘플에 대응하는 분류 데이터(3425-2)의 부분, 및 샘플에 대응하는 분류 데이터 (3425-N)의 부분이 상관 임계값(예를 들어, 80%)을 초과하는 또는 상위 'x' 신뢰도 점수들 내에 있는 샘플 분류 를 포함하는지를 결정할 수 있다. 때때로, 어떤 샘플도 상관 임계값을 충족시키지 않을 수 있다. 판정 블록 3530으로부터, 로직 흐름은 블 록 3540 또는 블록 3550 중 어느 하나로 계속될 수 있다. 많은 예들에서, 샘플들은 상관 임계값을 충족시키지 않는다. 샘플에 기초하여 각각의 추론 모델에 대해 생성된 분류 데이터가 매칭된다는 결정에 기초하여 로직 흐 름은 블록 3530에서 블록 3540으로 계속될 수 있는 반면, 샘플에 기초하여 각각의 추론 모델에 대해 생성 된 분류 데이터가 매칭되지 않는다는 결정에 기초하여 로직 흐름은 블록 3530에서 블록 3550으로 계속될 수 있다. 블록 3540 \"상관된 출력 데이터에 훈련 데이터 세트 내의 샘플을 추가\"에서, 강화된 시스템은 훈련 데이 터 세트로부터의 샘플을 상관된 출력 데이터에 추가할 수 있다. 블록 3550 \"상관되지 않은 출력 데이터에 훈련 데이터 세트 내의 샘플을 추가\"에서, 강화된 시스템은 훈련 데이터 세트로부터의 샘 플을 상관되지 않은 출력 데이터에 추가할 수 있다. 판정 블록 3560 \"훈련 데이터 세트 내의 각각의 샘 플이 상관되지 않은 출력 데이터 또는 상관된 출력 데이터 중 어느 하나에 추가되었는가?\"로 계속하여, 강화된 시스템은 훈련 데이터 세트 내의 각각의 샘플이 상관되지 않은 출력 데이터 또는 상관된 출 력 데이터 중 어느 하나에 추가되었는지를 결정할 수 있다. 달리 말하면, 강화된 시스템은 훈련 데이터 세트 내의 모든 샘플들이 상관되지 않은 출력 데이터 또는 상관된 출력 데이터 중 어 느 하나에 추가되었는지를 결정할 수 있다. 판정 블록 3560으로부터, 로직 흐름은 종료되거나 3520으로 복귀하여, 훈련 데이터 세트 내의 다음 샘플에 대해 블록들 3520-3560을 반복할 수 있다.입력 디바이스들에 대한 소스 신뢰 적응 현용의 추론 시스템들에서의 한 가지 문제는 다양한 입력 디바이스들이 해상도, 포맷, 프레임 레이트, 동적 범 위, 신뢰 등과 같은 상이한 특성들을 갖는 입력 데이터를 생성할 수 있다는 것이다. 다양한 입력 디바이스들의 상이한 특성들은 이러한 다양한 입력 디바이스들로부터의 입력 데이터가 추론 모델에 의해 어떻게 훈련 또는 분 류되는지에 영향을 미칠 수 있다. 예를 들어, 고해상도를 가진 입력 디바이스(예를 들어, 비디오 카메라)로부 터의 입력 데이터에 대해 훈련된 추론 모델은 저해상도를 가진 입력 디바이스로부터의 입력 데이터를 분류하는 데 어려움이 있을 수 있다. 다른 예에서, 입력 디바이스들은 다양한 액세스가능성을 갖는 다양한 환경들에 위 치될 수 있다(예를 들어, 개인 빌딩의 위치 대 공원의 위치). 공원과 같은 고도로 액세스가능한 환경들에서, 악의적 행위자들은 본 명세서에서 설명된 바와 같이 백도어를 생성하는 것과 같이, 입력 디바이스에 의해 생성 된 입력 데이터를 조작할 더 나은 기회들을 가질 수 있다. 따라서, 매우 액세스가능한 환경의 입력 디바이스는 액세스하기 어려운 환경의 입력 디바이스보다 더 낮은 신뢰 수준과 연관될 수 있다. 다른 예에서, 입력 디바이스와 강화된 시스템 사이의 데이터 경로의 보안은 입력 디바이스의 신뢰 수준의 인자 일 수 있다(예를 들어, 암호화된 데이터 경로는 암호화되지 않은 데이터 경로보다 더 신뢰할 수 있는 것으로 고 려될 수 있다). 일부 예에서, 신뢰 수준은 입력 디바이스의 하나 이상의 동작 파라미터 및/또는 특성을 지칭할 수 있다. 따라서, 본 개시내용은 입력 디바이스의 특성들에 부분적으로 기초하여 훈련 또는 추론이 이루어지는 추론 시스템 또는 추론 환경을 제공한다. 예를 들어, 본 개시내용은 입력 디바이스로부터의 입력 데이터를 사 용하여 (다수의 추론 모델 중) 어느 추론 모델을 훈련할지를 선택할 때 입력 디바이스 특성을 사용하도록 배열 된 시스템을 제공한다(예를 들어, 도 36 내지 도 37 참조). 다른 예로서, 본 개시내용은 입력 디바이스로부터 의 입력 데이터를 사용하여 추론을 생성하기 위해 (다수의 추론 모델들 중) 어느 추론 모델을 사용할지를 선택 할 때 입력 디바이스 특성들을 사용하도록 배열된 시스템을 제공한다(예를 들어, 도 38 및 도 39 참조). 본 명세서에 제공된 예들 중 다수(예를 들어, 도 36 내지 도 39와 연관된 설명)가 비디오 카메라를 입력 디바이 스로서 사용하지만, 다수의 입력 디바이스가 적절할 수 있다는 점에 유의한다. 예를 들어, 본 개시내용은 스틸 카메라, 마이크로폰, 적외선 검출기, 마이크로파 검출기, 또는 입력을 나타내는 신호들을 방출하도록 배열된 임 의의 다른 디바이스로 구현될 수 있다. 도 36은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 및 입력 디바이스들(3652-1 및 3652-2)을 포함한다. 메모리 는 하나 이상의 훈련되지 않은 추론 모델들(3621-1, 3621-2, 3621-N)(또는 훈련되지 않은 추론 모델들 ), 입력 데이터(3624-1 및 3624-2), 하나 이상의 입력 디바이스 특성들(3625-1 및 3625-2), 및 명령어들 을 저장한다. 많은 예들에서, 입력 데이터는 훈련 데이터 세트(예를 들어, 훈련 데이터 세트 )를 포함할 수 있는 한편, 훈련되지 않은 추론 모델들은 훈련 데이터 세트(예를 들어, 3624)에 기초 하여 추론 모델들을 생성하는 알고리즘들을 참조할 수 있다. 동작 동안, 회로는 각각의 입력 데이터 에 대한 입력 디바이스 특성들에 기초하여 입력 데이터로 훈련할 훈련되지 않은 추론 모델들 중 하나를 선택하기 위해 명령어들을 실행할 수 있다. 예를 들어, 회로는 입력 디바이스들(3652-1 및 3652-2)로부터 입력 데이터(3624-1 및 3624-2)를 각각 수 신하기 위해 명령어들을 실행할 수 있다. 회로는 입력 디바이스들(3652-1 및 3652-2)에 각각 대응 하는 입력 디바이스 특성(들)(3625-1 및 3625-2)을 결정하기 위해 명령어들을 실행할 수 있다. 때때로, 하나 이상의 입력 디바이스 특성(3625-1 및 3625-2)은, 예컨대 부팅 시간에 인터페이스를 통해 각각의 입 력 디바이스(예를 들어, 3652-1, 3652-2 등)에 질의함으로써 결정될 수 있다. 예를 들어, 입력 디바이스(3652- 1)는 애플리케이션 프로그래밍 인터페이스(API)를 가질 수 있으며, 이를 통해 하나 이상의 입력 디바이스 특성 (3625-1)이 결정될 수 있다. 다른 경우에, 각각의 입력 디바이스(예를 들어, 3652-1, 3652-2 등)는 입력 데이 터(3624-1, 3624-2)의 하나 이상의 부분을 메모리에 제공하는 것과 관련하여 하나 이상의 입력 디바이스 특성(3625-1, 3625-2)을 제공할 수 있다. 예를 들어, 입력 디바이스(3652-2)는 입력 데이터(3624-2)를 제공하 는 것과 관련하여 입력 디바이스 특성(3625-2)을 제공할 수 있다. 때때로, 회로는 메모리가 입력 디바이스에 결합되는 인터페이스에 기초하여 또는 인터 페이스가 입력 디바이스와 통신하는 통신 방식에 기초하여 하나 이상의 입력 디바이스 특성(3625- 1)을 식별하기 위해 명령어들을 실행할 수 있다. 예를 들어, 입력 디바이스(3652-1)와 메모리 사 이의 데이터 경로의 보안은 인터페이스에 적어도 부분적으로 기초하여 결정될 수 있다. 이러한 예에서, 데이터 경로의 보안은, 적어도 부분적으로, 입력 디바이스(3652-1) 및 입력 디바이스 특성(3625-1)에 대한 신뢰수준을 결정하는데 사용될 수 있다. 단일 인터페이스가 묘사되어 있다는 점에 유의한다. 그러나, 일부 예에서, 상이한 입력 디바이스들 또는 상이한 특성들(예를 들어, 상이한 보안 요건들 등)을 가지는 입력 디바이스들에 대해 상이한 인터페이스가 제공될 수 있다. 회로는 각각의 입력 디바이스 특성들(3625-1 및 3625-2)에 기초하여 입력 데이터(3624-1 또는 3624-2)로 훈련하기에 가장 적합한 훈련되지 않은 추론 모델들 중 하나를 선택하기 위해 명령어들을 실행할 수 있다. 설명한 바와 같이, 다양한 예들에서, 회로는 복수의 입력 디바이스들(예를 들어, 입력 디바이 스(3652-1 및 3652-2) 등)로부터 입력 데이터 및/또는 입력 디바이스 특성들을 수신하기 위해 명령어들을 실행할 수 있다. 이러한 예들에서, 회로는 원하는 입력 디바이스 특성들을 갖는 하나 이상의 입력 디바 이스로부터의 데이터를 조합함으로써 특정한 훈련되지 않은 추론 모델에 대한 훈련 데이터 세트를 구축하기 위 해 명령어들을 실행할 수 있다. 2개의 입력 디바이스(3652-1 및 3652-2)가 묘사되지만, 실제로는 많은 수(예를 들어, 어레이, 클러스터 등)의 입력 디바이스들이 강화된 시스템에 결합될 수 있고, 훈련 되지 않은 추론 모델들을 훈련하기 위해 사용될 수 있다. 도 37은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 입력 디바이스로부터의 입력 데이터에 대해 훈련할 훈련되지 않은 추론 모델을 식별하기 위해 로직 흐름 의 동작들을 수행할 수 있다. 로직 흐름은 블록 3710 \"입력 디바이스 특성 결정\"에서 시작할 수 있고, 강화된 시스템은 입력 디 바이스(3652-1)의 입력 디바이스 특성들(3625-1), 입력 디바이스(3652-2)의 입력 디바이스 특성들(3625-2) 등을 결정할 수 있다. 예를 들어, 강화된 시스템은 API를 통해 입력 디바이스(3652-1)에 질의하여 입력 디바 이스 특성(3625-1)을 결정할 수 있다. 다른 예로서, 강화된 시스템은 입력 데이터(3624-2)를 수신하는 것과 관련하여 입력 디바이스(3652-2)로부터 입력 디바이스 특성들(3625-2)을 수신할 수 있다. 블록 3720 \"입력 디바이스 특성에 기초하여 훈련되지 않은 추론 모델을 선택\"으로 계속되어, 강화된 시스템 은 입력 디바이스 특성들(3625-1, 3625-2 등)에 기초하여 하나 이상의 훈련되지 않은 추론 모델로 부터 선택할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스 특성들(3625-1)에 기초하여 입력 데이 터(3624-1)로 훈련할 훈련되지 않은 추론 모델(3621-2)을 선택할 수 있다. 다른 예로서, 강화된 시스템 은 입력 디바이스 특성들(3625-2)에 기초하여 입력 데이터(3624-2)로 훈련하기 위해 훈련되지 않은 추론 모델 (3621-1)을 선택할 수 있다. 블록 3730 \"입력 디바이스로부터의 입력 데이터로 입력 디바이스 특성들에 기초하여 선택된 추론 모델을 훈련\" 으로 진행하여, 강화된 시스템은 훈련되지 않은 추론 모델들로부터 선택된 추론 모델을 입력 데이터 (예를 들어, 입력 데이터(3624-1), 입력 데이터(3624-2) 등)로 훈련할 수 있다. 예를 들어, 강화된 시스템 은 입력 디바이스 특성들(3625-1)에 기초하여 훈련되지 않은 추론 모델(3621-2)을 입력 데이터(3624-1)로 훈련할 수 있고, 입력 디바이스 특성들(3625-2)에 기초하여 훈련되지 않은 추론 모델(3621-1)을 입력 데이터 (3624-2)로 훈련할 수 있다. 블록 3730으로부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들을 수신 하는 것에 기초하여 반복될 수 있다. 도 38은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 및 입력 디바이스들(3652-1 및 3652-2)을 포함한다. 메모리 는 하나 이상의 훈련된 추론 모델들(3623-1, 3623-2, 3623-N)(또는 훈련된 추론 모델들), 입력 데 이터(3824-1 및 3824-2), 입력 디바이스 특성들(3625-1 및 3625-2), 및 명령어들을 저장한다. 많은 예 들에서, 입력 데이터(3824-1 및 3824-2)는 훈련된 추론 모델들 중 하나 이상에 의한 분류를 위한 데이터 를 포함할 수 있다. 동작 동안, 회로는 각각 입력 디바이스 특성들(3625-1 및 3625-2)에 기초하여 입력 데이터(3824-1 및 3824-2)를 분류하기 위해 훈련된 추론 모델들 중 하나를 선택하기 위해 명령어들(382 8)을 실행할 수 있다. 예를 들어, 동작 동안, 회로는 입력 디바이스(3652-1)의 하나 이상의 입력 디바이스 특성(3625-1)을 결정 하고 입력 디바이스(3652-2)의 하나 이상의 입력 디바이스 특성(3625-2)을 결정하기 위해 명령어를 실행 할 수 있다. 때때로, 하나 이상의 입력 디바이스 특성은, 예컨대, 부팅 시간에, 인터페이스를 통 해 각각의 입력 디바이스에 질의함으로써 결정될 수 있다. 예를 들어, 입력 디바이스(3652-1)는 API를 가질 수 있으며, 이를 통해 하나 이상의 입력 디바이스 특성(3625-1)이 결정될 수 있다. 다른 경우에, 입력 디 바이스는 입력 데이터의 하나 이상의 부분을 메모리에 제공하는 것과 관련하여 하나 이상의입력 디바이스 특성을 제공할 수 있다. 예를 들어, 입력 디바이스(3652-2)는 입력 데이터(3624-2)를 제 공하는 것과 관련하여 입력 디바이스 특성(3625-2)을 제공할 수 있다. 때때로, 회로는, 메모리가 입력 디바이스에 결합되는 인터페이스에 기초하여 또는 인터 페이스가 입력 디바이스와 통신하는 통신 방식에 기초하여, 하나 이상의 입력 디바이스 특성(362 5)을 식별하기 위해 명령어를 실행할 수 있다. 예를 들어, 입력 디바이스(3652-1)와 메모리 사이 의 데이터 경로의 보안은 인터페이스에 적어도 부분적으로 기초하여 결정될 수 있다. 이러한 예에서, 데 이터 경로의 보안은, 적어도 부분적으로, 입력 디바이스(3652-1) 및 입력 디바이스 특성(3625-1)에 대한 신뢰 수준을 결정하는데 사용될 수 있다. 단일 인터페이스가 묘사되어 있다는 점에 유의한다. 그러나, 일부 예에서, 상이한 입력 디바이스들 또는 상이한 특성들(예를 들어, 상이한 보안 요건들 등)을 가지는 입력 디바이스들에 대해 상이한 인터페이스가 제공될 수 있다. 일부 예들에서, 입력 디바이스 특성들 및/또는 신뢰는 입력 소스 품질 조건을 결정하는데 사용될 수 있거나, 입력 소스 품질 조건에 기초할 수 있다. 많은 예에서, 입력 소스 품질 조건은 식별된 신뢰 및/또는 입력 소스 품질 조건과 함께 동작하도록 조정된 추론 모델과 같은 추론 모델을 선택하는데 있어서의 한 인자일 수 있다. 회로는 입력 디바이스 특성들(3625-1 및 3625-2)에 기초하여 입력 데이터(3824-1 및 3824-2)를 분류하는 데 가장 적합한 훈련된 추론 모델들 중 하나를 선택하기 위해 명령어들을 실행할 수 있다. 설명한 바와 같이, 다양한 예들에서, 회로는 복수의 입력 디바이스들(예를 들어, 입력 디바이스(452-1 및 452-2) 등)로부터 입력 데이터 및/또는 입력 디바이스 특성들을 수신하기 위해 명령어들을 실행할 수 있다. 이 러한 예들에서, 회로는 입력 데이터가 그로부터 수신된 각각의 입력 디바이스에 대한 입력 디바이스 특성들에 기초하여 입력 데이터를 분류하기 위해 사용할 훈련된 추론 모델을 선택 하기 위해 명령어들을 실행할 수 있다. 도 39는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 하나 이상의 입력 디바이스 특성에 기초하여, 입력 디바이스로부터의 입력 데이터를 분류하기 위한 훈련된 추론 모델을 식별하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 3910 \"입력 디바이스 특성 결정\"에서 시작할 수 있으며, 강화된 시스템은 각각 입력 디바이스들(3652-1 및 3652-2)의 입력 디바이스 특성들(3625-1 및 3625-2)을 결정할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스 특성(3625-1)을 결정하기 위해 API를 통해 입력 디바이스(3652-1)에 질의 할 수 있다. 다른 예로서, 강화된 시스템은 입력 데이터(3824-2)를 수신하는 것과 관련하여 입력 디바이 스 특성들(3625-2)을 수신할 수 있다. 일부 예들에서, 입력 디바이스 특성들(3625-1, 3625-2)은 렌즈 특성 및 오디오 증폭기 중 하나 이상을 포함할 수 있다. 블록 3920 \"입력 디바이스 특성들에 기초하여 훈련된 추론 모델을 선택\"으로 계속되어, 강화된 시스템은 입력 디바이스 특성들(예를 들어, 3625-1, 3625-2 등)에 기초하여 하나 이상의 훈련된 추론 모델로 부터 선택할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스 특성들(3625-2)에 기초하여 입력 데이 터(3824-2)를 분류하기 위해 훈련된 추론 모델(3623-1)을 선택할 수 있다. 다른 예로서, 강화된 시스템 은 입력 디바이스 특성들(3625-1)에 기초하여 입력 데이터(3824-1)를 분류하기 위해 훈련된 추론 모델(3623- 2)을 선택할 수 있다. 블록 3930 \"입력 디바이스 특성들에 기초하여 선택된 추론 모델로 입력 디바이스로부터의 입력 데이터를 분류\" 로 진행하면, 강화된 시스템은 훈련된 추론 모델들로부터 선택된 추론 모델로 입력 데이터를 분류할 수 있다. 예를 들어, 강화된 시스템은 입력 디바이스 특성들(3625-2)에 기초하여 훈련된 추론 모 델(3623-1)로 입력 데이터(3824-2)를 분류할 수 있다. 다른 예로서, 강화된 시스템은 입력 디바이스 특 성들(3625-1)에 기초하여 훈련된 추론 모델(3623-2)로 입력 데이터(3824-1)를 분류할 수 있다. 블록 3930으로 부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들을 수신하는 것에 기초하여 반복될 수 있다. 모델과의 훈련 세트의 신뢰적 연관 도 40은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 및 신뢰할 수 있는 실행 환경(TEE)을 포함한다. 메모리는 입력 데이터 , 명령어들, 및 출력 데이터를 저장한다. 몇몇 예들에서, 입력 데이터는 훈련 데이터 세트를 포함할 수 있다. 동작 동안, 회로는 TEE와 연관된 다양한 입력/출력 동작들을 수행하기 위해 명령어들을 실행할 수 있다. TEE는 신뢰적 회로 및 신뢰적 메모리를 포함한다. 신뢰적 메모리는 TEE 명령어들, 트랜스코딩된 입력 데이터, 훈련 데이터 세트 무결성 상태 (TSIS), 훈련되지 않은 추론 모델, 훈련된 추론 모델, 및 추론 모델 무결성 서명 (IMIS)을 저장한다. 많은 예들에서, 트랜스코딩된 입력 데이터는 트랜스코딩된 훈련 데이터 세트 를 포함할 수 있다. 동작 동안, 신뢰적 회로는 추론 모델이 지정된 훈련 데이터 세트에 대해 훈련되었다 는 검증을 가능하게 하기 위해 TEE 명령어들을 실행할 수 있다. 앞서 설명한 바와 같이, 추론 시스템들에 대한 공격은 추론 모델의 훈련 동안 백도어들(예를 들어, 은닉 클래스 들)의 생성을 포함할 수 있다. 때때로, 악의적 행위자(예를 들어, 범죄자 데이터 과학자 또는 데이터 공급자) 는 훈련된 추론 모델에서 숨겨진 취약점들을 야기하려는 의도로 훈련 데이터 세트에 부적절한 데이터를 주입할 수 있다. 따라서, 본 개시내용은 추론 모델이 주장된 훈련 데이터 세트에 의해 훈련되었다는 검증을 가능하게 하도록 배열된 강화된 시스템을 제공한다. 예를 들어, 동작 동안, 회로는 입력 데이터를 TEE에 이용가능하게 만들기 위해 명령어들 을 실행할 수 있다. 전형적으로, 입력 데이터는 복수의 샘플들을 갖는 훈련 데이터 세트를 포함할 수 있다. 신뢰적 회로는 입력 데이터를 트랜스코딩된 입력 데이터로 변환하기 위해 TEE 명 령어들을 실행할 수 있다. 예를 들어, 입력 데이터 내의 각각의 샘플은 수학적 표현으로 변환될 수 있다. 신뢰적 회로는 트랜스코딩된 입력 데이터에 기초하여 TSIS를 생성하기 위해 TEE 명령어들을 실행할 수 있다. 예를 들어, 순서 및 반복에 민감하지 않은 암호화 알고리즘이 트랜스코딩된 입력 데이터 내의 각각의 샘플에 기초하여 TSIS를 생성하는 데 이용될 수 있다. 많은 예들에서, 훈련 데이터 세트의 내용은 TSIS를 갖는 제3자에 의해 (예를 들어, TSIS을 재계산함으로써) 검증될 수 있다. 또한, 신뢰적 회로는 훈련된 추론 모델을 생성하기 위해 트랜스코딩된 입력 데이터에 대해 훈련되지 않은 추론 모델을 훈련하도록 TEE 명령어들을 실행할 수 있다. 예를 들어, 훈련되지 않 은 추론 모델은 트랜스코딩된 입력 데이터에 기초하여 훈련된 추론 모델을 발생시키기 위한 기계 학습 알고리즘을 포함할 수 있다. 일부 예들에서, 훈련되지 않은 추론 모델은 훈련 데이터를 포함 할 수 있다. 다양한 예들에서, 훈련되지 않은 추론 모델은 훈련된 추론 모델이 생성된 이후에 메 모리 내에 보유되지 않을 수 있다. 신뢰적 회로는 TEE 명령어들을 실행하여 추론 모델 무결성 서명(IMIS)을 생성할 수 있다. 예를 들어, IMIS는 훈련된 추론 모델의 암호 해시를 포함할 수 있다. 많은 예에서, 추론 모델의 내용은 제3자에 의해 IMIS로(예를 들어, IMIS를 재계산함으로써) 검증될 수 있다. TSIS, IMIS, 및 훈련된 추론 모델 중 하나 이상이 출력으로서 제공될 수 있다(예를 들어, 출력 데이터 로서 저장됨). 예를 들어, 신뢰적 회로는 TSIS, IMIS, 및 훈련된 추론 모델을 튜플로서 출력하기 위해 TEE 명령어들을 실행할 수 있다. 때때로, 회로는 출력 데이터를 출 력 디바이스, 또 다른 컴퓨팅 디바이스 등에 제공하기 위해 명령어를 실행할 수 있다. 도 41은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 훈련된 추론 모델 및/또는 훈련된 추론 모델에 대응하는 주장된 훈련 세트의 검증을 가능하게 하기 위해 TSIS, IMIS, 및 훈련된 추론 모델 중 하나 이상을 발생시키도록 로직 흐름의 동 작들을 수행할 수 있다. 로직 흐름은 블록 4110 \"입력 데이터 수신\"에서 시작할 수 있고, 강화된 시스템이 입력 데이터 를 수신할 수 있다. 예를 들어, 강화된 시스템은 입력 데이터로서 복수의 샘플들을 갖는 훈 련 데이터 세트를 수신할 수 있다. 블록 4120 \"입력 데이터를 트랜스코딩\"으로 계속되어, 강화된 시스템(400 1)은 입력 데이터를 트랜스코딩하여 트랜스코딩된 입력 데이터를 생성할 수 있다. 예를 들어, 트 랜스코딩된 입력 데이터는 입력 데이터 내의 각각의 샘플의 수치 표현을 포함할 수 있다. 다음으 로, 로직 흐름은 블록 4130 및/또는 블록 4140으로 진행할 수 있다. 달리 말하면, 블록 4130 및 블록 4140은 트랜스코딩된 입력 데이터를 사용하여 병렬로 수행될 수 있다. 블록 4130 \"트랜스코딩된 입력 데이터에 기초하여 TSIS 값을 생성\"에서, 트랜스코딩된 입력 데이터에 기초하여 TSIS 값이 생성될 수 있다. 예를 들어, 강화된 시스템은 암호화 알고리즘을 사용하여 트랜스코딩된 입력 데이터에 기초하여 TSIS 값을 생성할 수 있다. 로직 흐름은 블록 4130으로부터 블록 4160으로 진행할 수 있다. 블록 4140 \"트랜스코딩된 입력 데이터로 추론 모델을 훈련\"을 다시 참조하면, 추론 모델은 트랜스코딩된 입력 데이터에 기초하여 훈련될 수 있다. 예를 들어, 강화된 시스템은 트랜스코딩된 입력 데이터에 기초하여 훈련된 추론 모델을 생성하기 위해 기계 학습 알고리즘을 이용할 수 있다. 블 록 4150 \"추론 모델에 기초하여 IMIS 값을 생성\"으로 계속되어, IMIS 값은 훈련된 추론 모델에 기초하여 생성될 수 있다. 예를 들어, 훈련된 추론 모델에 기초하여 IMIS 값을 생성하기 위해 암호 해시가 사용될 수 있다. 블록 4160으로부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들을 수신하는 것에 기 초하여 반복될 수 있다. 섹션 IV - 향상된 추론 모델 훈련 악성 훈련 후의 추론 모델 복원 본 명세서에서 상세히 설명되는 바와 같이, 추론 모델들은 데이터 세트들(예를 들어, 훈련 및 시험 데이터 세트 들)을 사용하여 훈련된다. 종종, 추론 모델들은 상이한 데이터 세트들을 사용하여 반복적으로 훈련될 수 있다. 예를 들어, 추론 모델은 제1 데이터 세트에 대해 훈련된 다음, 후속하여 제2 데이터 세트에 대해 훈련될 수 있 다. 일부 구현들에서, 훈련 데이터 세트들은 제어되지 않는 소스들(예를 들어, 연구 기관들, 오픈 소스, 온라 인 데이터 세트들 등)로부터 발생한다. 그 결과, 추론 모델은 추론 모델의 성능을 저하시키는 데이터를 포함하 는 데이터 세트들로 훈련될 수 있다. 예를 들어, 추론 모델은 추론 모델의 성능을 저하시키는 오분류된 데이터 (예를 들어, 의도적으로 오분류된, 우발적으로 오분류된 등)를 포함하는 데이터 세트로 훈련될 수 있다. 일부 경우들에서, 악의적인 당사자들은 백도어들, 은닉 클래스들, 또는 추론 모델에 대한 알려진 오분류 취약점들을 도입하려는 의도로 훈련하는데 사용되는 데이터 세트들을 의도적으로 수정할 수 있다. 본 개시내용은 추론 모델의 성능을 저하시키는 훈련 데이터 세트들의 발견에 대응하는 \"와일드카드\" 클래스를 의도적으로 훈련하는 것을 제공한다. 이러한 와일드카드 클래스(들)는 저하된 성능을 복원하고 훈련 데이터 세 트 내의 에러들에 기초한 잠재적인 적대적 공격들을 완화하도록 훈련될 수 있다. 도 42는 추론 모델을 훈련하기 위한 예시적 시스템을 예시한다. 시스템은 회로, 메모리 , 및 인터페이스를 포함한다. 메모리는 추론 모델, 명령어들, 및 시험/훈련 데이터 세트를 저장한다. 메모리는 또한 선택적으로 복원된 추론 모델을 포함할 수 있다. 시험/훈련 데이터 세트는 훈련 데이터는 물론 시험 데이터 양자 모두를 포함한다. 설명한 바와 같이, 훈련은 다수의 상이한 훈련 및/또는 시험 데이터 세트들을 사용하는 스테이지들에서 구현될 수 있다. 예를 들어, 데이터 세트는 훈련 데이터 세트(4262-1), 훈련 데이터 세트(4262-2), 및 훈련 데이터 세트(4262-3)는 물론, 시험 데이터 세트(4264-1) 및 시험 데이터 세트(4264-1)를 포함하는 것으로 묘사되어 있 다. 데이터 세트가 임의의 수의 훈련 데이터 세트들 및 임의의 수의 시험 데이터 세트들을 포함할 수 있다는 점에 유의한다. 여기에 설명된 수들은 한정이 아니라 명확성을 위해 선택된 것이다. 또한, 메모리는 복원 훈련 데이터 세트 및 복원 시험 데이터 세트를 포함하는 복원 시험/훈련 데이 터 세트를 포함할 수 있다. 복원 훈련 데이터 세트 및 복원 시험 데이터 세트는 에러들(예 를 들어, 악의적으로 도입된 에러들, 우발적으로 도입된 에러들 등)을 포함하는 훈련 데이터 세트들 중 하나를 사용하여 추론 모델을 훈련하는 것으로부터 \"복원\"하기 위해 사용될 수 있다. 보다 구체적으로, 복원 훈련 데이터 세트는 훈련 데이터 세트에서의 에러들에 기초한 잠재적인 적대적 공격들을 완화 시키기 위해, 예를 들어, 와일드카드 클래스와 같은, 추가적인 클래스로 추론 모델을 훈련시키는 데 사용 될 수 있다. 도 43은 에러들을 포함하는 데이터 세트로 추론 모델을 훈련하는 것으로부터의 복원을 위해 도 42의 시스템 과 같은 시스템에 의해 구현될 수 있는 예시적 기법을 예시한다. 기법은 편의성 및 명확성 을 위해 도 42의 시스템을 참조하여 설명된다는 점에 유의한다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 43.1에서 시작할 수 있다. 원 43.1에서, 시스템은 훈련 데이터 세트(4262-1)를 사용하 여 추론 모델을 훈련한다. 예를 들어, 회로는 (예를 들어, 도 3의 기법 등에 기초하여) 추론 모델 훈련 알고리즘을 구현하여 훈련 데이터 세트(4262-1)를 사용하여 추론 모델을 훈련하기 위해 명령어 들을 실행할 수 있다. 훈련 데이터 세트(4262-1)를 사용하여 추론 모델을 훈련하는 것은 추론 모 델(4222-1)의 반복을 초래할 수 있다. 원 43.2에서, 시스템은 시험 데이터 세트(예를 들어, 시험 데이터 세트(4264-1) 등)를 사용하여 추론 모델 반복 1(4222-1)을 시험할 수 있다. 예를 들어, 회로는 시험 데 이터 세트(4264-1)를 사용하여 추론 모델 반복 1(4222-1)의 성능을 시험하기 위해 명령어를 실행할 수 있 다.추론 모델은 추가적인 훈련 데이터 세트로 더 훈련될 수 있다. 원 43.3에서, 시스템은 훈련 데이 터 세트(4262-2)를 사용하여 추론 모델을 훈련한다. 예를 들어, 회로는 훈련 데이터 세트(4262- 2)를 사용하여 추론 모델 반복 1(4222-1)을 훈련하기 위해 (예를 들어, 도 3의 기법 등에 기초하여) 추론 모델 훈련 알고리즘을 구현하기 위해 명령어들을 실행할 수 있다. 훈련 데이터 세트(4262-2)를 사용하여 추론 모델 반복 1(4222-1)을 훈련하는 것은 추론 모델의 다른 반복(예를 들어, 추론 모델 반복 2(4222- 2))을 초래할 수 있다. 원 43.4에서, 시스템은 시험 데이터 세트(예를 들어, 시험 데이터 세트(4264-1) 등)를 사용하여 추론 모델 반복 2(4222-2)를 시험할 수 있다. 예를 들어, 회로는 시험 데이터 세트 (4264-1)를 사용하여 추론 모델 반복 2(4222-2)의 성능을 시험하기 위해 명령어를 실행할 수 있다. 추론 모델은 다시 제3 추가적인 훈련 데이터 세트로 더 훈련될 수 있다. 원 43.5에서, 시스템은 훈련 데이터 세트(4262-3)를 사용하여 추론 모델을 훈련한다. 예를 들어, 회로는 훈련 데이터 세 트(4262-2)를 사용하여 추론 모델 반복 2(4222-2)를 훈련하기 위해 (예를 들어, 도 3의 기법 등에 기초하 여) 추론 모델 훈련 알고리즘을 구현하기 위한 명령어들을 실행할 수 있다. 훈련 데이터 세트(4262-2)를 사용하여 추론 모델 반복 2(4222-2)를 훈련하는 것은 추론 모델의 다른 반복(예를 들어, 추론 모델 반복 3(4222-3))을 초래할 수 있다. 원 43.6에서, 시스템은 시험 데이터 세트(예를 들어, 시험 데이터 세트 (4264-2) 등)를 사용하여 추론 모델 반복 3(4222-3)을 시험할 수 있다. 예를 들어, 회로는 시험 데이터 세트(4264-2)를 사용하여 추론 모델 반복 3(4222-3)의 성능을 시험하기 위해 명령어를 실행할 수 있다. 설명한 바와 같이, 일부 실제 사용 사례들에서, 훈련 데이터 세트 내의 에러들의 발견은 훈련 이후에 발생할 수 있다. 원 43.7에서, 훈련 데이터 세트(예를 들어, 훈련 데이터 세트(4262-1), 훈련 데이터 세트(4262-2), 및/ 또는 훈련 데이터 세트(4262-3)) 내의 에러들이 발견될 수 있다. 일부 예들에서, 에러들은 추론 모델의 과거 반복들을 훈련하는데 사용되는 훈련 데이터 세트에서 발견된다. 특정 예로서, 훈련 데이터 세트(4262-2)에서 에러가 발견될 수 있다. 이와 같이, 추론 모델 내의 에러들(또는 취약점들)은 훈련 데이터 세트(4262-2) 내의 에러들로 인해 추론 모델 반복 2(4222-2)에서와 같이 도입되었을 수 있다. 원 43.8에서, 복원 시험/훈련 데이터 세트(복원 훈련 데이터 세트 및 복원 시험 데이터 세트를 포함함)가 수신될 수 있다. 회로는, 명령어들을 실행할 때, 인터페이스 등을 통해 복원 시험/훈련 데이터 세트를 수신할 수 있다. 일부 예들에서, 복원 훈련 데이터 세트는 이전에 사용된 훈련 데이터 세트에서의 에러들에 기초한 적대적 공격들을 완화하는데 사용될 수 있는 추가적인 와일드카드 클래스로 추론 모델 (현재 반복에서 시작함)을 훈련하도록 설계될 수 있다. 원 43.9에서, 시스템은 복원 훈련 데이터 세트를 사용하여 추론 모델을 훈련한다. 예를 들 어, 회로는 복원 훈련 데이터 세트를 사용하여 추론 모델 반복 3(4222-3)을 훈련하기 위해(예를 들 어, 도 3의 기법 등에 기초하여) 추론 모델 훈련 알고리즘을 구현하기 위해 명령어들을 실행할 수 있다. 복원 훈련 데이터 세트를 사용하여 추론 모델 반복 3(4222-3)을 훈련하는 것은 추론 모델 (예를 들어, 복원된 추론 모델 등)의 다른 반복을 초래할 수 있다. 원 43.10에서, 시스템은 복원 시험 데이터 세트를 사용하여 복원된 추론 모델을 시험할 수 있다. 예를 들어, 회로는 복원 시험 데이터 세트를 사용하여 복원된 추론 모델의 성능을 시험하기 위해 명령어들을 실행할 수 있다. 시스템 및 기법은 적대적 공격들의 완화(예를 들어, 경보 트리거 등)가 실현될 수 있다는 점에서 이점을 제공한다. 또한, 시스템 및 기법은 처음부터 또는 캡처된 인스턴스(예를 들어, 반복 등)로 부터 훈련을 재시작할 필요가 없다는 이점을 제공한다. 본 명세서에 설명한 바와 같이, 시험/훈련 데이터는 추론 모델의 성능을 \"훈련\"하고 평가하는데 사용된다. 그 러나, 시험/훈련 데이터 세트들은 에러들을 포함할 수 있다. 예를 들어, 도 44는 추론 모델을 훈련하는 데 사용될 수 있는 예시적 시험/훈련 데이터 세트를 묘사한다. 시험/훈련 데이터 세트는, 도 42의 시스템의 훈련 데이터 세트들 및 시험 데이터 세트들 중 하나에 대응할 수 있는, 훈련 데이 터 세트 및 시험 데이터 세트를 포함한다. 시험/훈련 데이터 세트는 입력은 물론 예 상 출력을 포함한다. 일반적으로, 입력들은 입력 값(들)(4463-n)을 포함할 수 있으며, 여기서 n은 양의 정수이다. 예를 들어, 입력들에 대해 입력 값(들)(4463-1), 입력 값(들)(4463-2), 입력 값 (들)(4463-3), 입력 값(들)(4463-4), 입력 값(들)(4463-5) 내지 입력 값(들)(4463-N)이 도시되어 있다. 각각 의 입력 값(4463-n)에 대해, 연관된 예상 출력이 도시되어 있다. 예상 출력들 각각은 입력들(예를 들어, 입력들)을 분류하도록 추론 모델이 훈련될 클래스(2210, 4467)에 대응한다. 일반적으로, 예 상 출력은 임의의 수의 클래스를 포함할 수 있다. 특정 예로서, 클래스들은 CIFER-10 분류데이터 세트(예를 들어, 비행기들, 자동차들, 새들, 고양이들, 사슴, 개들, 안개들, 말들, 개구리들, 선박들, 및 트럭들)로부터의 카테고리들에 대응할 수 있다. 그러나, 예들은 이에 관하여 제한되지 않는다. 일부 사용 사례들에서, 시험/훈련 데이터 세트(예를 들어, 4460)는 에러들을 포함할 수 있다. 묘사된 바와 같이, 데이터 세트는 다수의 에러들을 포함한다. 특정 예로서, 에러들 중 하나는 클래스(4467- 2)에 대응하는 입력 값(들)(4463-4)을 보여준다. 설명을 위해, 추론 시스템이 이미지들을 클래스들로 분 류하도록 배열된 이미지 분류기라고 가정한다. 이 예에서, 에러는 입력 값들(4463-4)과 연관된 이미지가 잘못된 클래스에 대응하도록 부정확하게 라벨 표시되거나 태깅되는 것일 수 있다(예를 들어, 이미지는 총이지만 헤어브러시 등으로서 태깅됨). 설명한 바와 같이, 이러한 부정확한 라벨 표시는 악의적이거나 부주의일 수 있 다. 그러나, 본 개시내용은 앞서 상세히 설명한 바와 같이 복원 시험/훈련 데이터 세트를 사용하여 시험/훈련 데이터 세트에서의 에러들에도 불구하고 훈련을 계속하는 것을 제공한다. 도 45는 추론 모델을 훈련하는데 사용될 수 있는 예시적 복원 시험/훈련 데이터 세트를 묘사한다. 복원 시험/훈련 데이터 세트는 도 42의 시스템의 복원 훈련 데이터 세트들 및 복원 시험 데 이터 세트들에 대응할 수 있는 훈련 데이터 세트 및 시험 데이터 세트를 포함한다. 복원 시 험/훈련 데이터 세트의 설명은 도 44의 시험/훈련 데이터 세트를 참조하여 이루어진다. 그러나, 예들은 이에 관하여 제한되지 않는다. 복원 시험/훈련 데이터 세트는 입력들뿐만 아니라 예상 출력들을 포함한다. 일반적으로, 입 력들은 입력 값(들)(4573-m)을 포함할 수 있으며, 여기서 m은 양의 정수이다. 게다가, 입력은 에 러와 연관된 임의의 입력 값(들)을 포함할 수 있다. 예를 들어, 시험/훈련 데이터 세트로부터의 에러와 연관된 입력 값(들)(4463-4)이 복원 시험/훈련 데이터 세트의 입력들에 포함된다. 또한, 입력들에 대해 입력 값(들)(4573-1), 입력 값(들)(4573-2), 입력 값(들)(4573-3), 입력 값 (들)(4573-4) 내지 입력 값(들)(4573-M)이 도시되어 있다. 각각의 입력 값(4463 또는 4573)에 대해, 연관된 예상 출력이 도시되어 있다. 앞서 설명한 바와 같이, 복원 시험/훈련 데이터 세트는 이미지들을 특정 와일드카드 클래스로 인식하기 위해 추론 모델 을 훈련하도록 설계되거나 배열된다. 이 와일드카드 클래스는 추론 모델이 분류하도록 훈련 되는 새로운 클래스일 수 있다. 대안으로서, 와일드카드 클래스는 와일드카드 클래스로서 용도 변 경된 클래스들(예를 들어, 도 44의 클래스 등) 중 하나일 수 있다. 예를 들어, 앞서 제공된 가설을 사용 하여, 헤어브러시처럼 보이도록 태깅된 총의 경우, 와일드카드 클래스가 \"헤어브러시처럼 보이는 총\"으로 서 도입될 수 있고, 입력을 이 새로운 와일드카드 클래스로 분류하도록 추론 모델을 훈련하기 위해 입력 값(4573-4)으로서 이미지가 제공된다. 도 46은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 시스템(또는 그 컴포넌트들)은 에러들 을 포함하는 시험/훈련 데이터 세트(예를 들어, 에러들을 포함하는 데이터 세트 등)로 추론 모델을 훈련한 이후에 복원하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 4610 \"시험/훈련 데이터 세트 수신\"에서 시작할 수 있고, 시스템은 시험/훈련 데 이터 세트를 수신할 수 있다. 예를 들어, 회로는, 명령어들을 실행할 때, 훈련 데이터 세트 (4262-1)(및 시험 데이터 세트(4264-1) 등)를 수신할 수 있다. 블록 4620 \"시험/훈련 데이터 세트에 기초하여 추론 모델 훈련\"으로 계속하여, 시스템은 블록 4610에서 수신된 시험/훈련 데이터 세트에 기초하여 추론 모델을 훈련할 수 있다. 예를 들어, 회로는, 명령어를 실행할 때, 블록 4610에서 수신 된 시험/훈련 데이터 세트(예를 들어, 훈련 데이터 세트(4262-1), 시험 데이터 세트(4264-1) 등)를 사용 하여 추론 모델을 훈련하기 위해 추론 모델 훈련 알고리즘(예를 들어, 도 3의 기법 등)을 구현할 수 있다. 판정 블록 4630 \"시험/훈련 데이터 세트에서 에러들이 검출되었는가?\"로 계속하여, 블록 4610에서 수신되고 블 록 4620에서 추론 모델을 훈련하기 위해 사용되는 시험/훈련 데이터 세트(예를 들어, 훈련 데이터 세트(4262-1) 등)에 에러가 존재하는지에 관련한 결정이 이루어질 수 있다. 판정 블록 4630으로부터, 로직 흐 름은 판정 블록 4640 또는 블록 4650 중 어느 하나로 계속될 수 있다. 로직 흐름은 블록 4610에서 수신되고 블록 4620에서 사용되어 추론 모델을 훈련하는 시험/훈련 데이터 세트에 에러가 존재하지 않는다는 결정에 기초하여 판정 블록 4630에서 판정 블록 4640으로 계속될 수 있다. 대안적으로, 로직 흐름 은, 블록 4610에서 수신되고 블록 4620에서 사용되어 추론 모델을 훈련하는 시험/훈련 데이터 세트에 에러가 존재한다는 결정에 기초하여 판정 블록 4630에서 블록 4650으로 계속될 수 있다. 블록 4650 \"복원 시험/훈련 데이터 세트 수신\"에서, 시스템은 복원 시험/훈련 데이터 세트를 수신 할 수 있다. 예를 들어, 회로는, 명령어들을 실행할 때, 복원 훈련 데이터 세트(및 복원 시 험 데이터 세트 등)를 수신할 수 있다. 블록 4660 \"복원 시험/훈련 데이터 세트에 기초한 추론 모델의 훈련\"으로 계속하여, 시스템은, 블록 4650에서 수신된 복원 시험/훈련 데이터 세트에 기초하여 추 론 모델을 훈련할 수 있다. 예를 들어, 회로는, 명령어들을 실행할 때, 블록 4610에서 수신 된 복원 시험/훈련 데이터 세트(예를 들어, 훈련 데이터 세트, 시험 데이터 세트 등)를 사용 하여 추론 모델을 훈련하기 위해 추론 모델 훈련 알고리즘(예를 들어, 도 3의 기법 등)을 구현할 수 있다. 구체적으로는, 입력들을 와일드카드 클래스로 분류하기 위해 블록 4660에서 추론 모델이 훈 련될 수 있다. 블록 4660으로부터, 로직 흐름은 판정 블록 4640으로 계속될 수 있다. 판정 블록 4640 \"추가 시험/훈련 데이터 세트가 수신되었는가?\"에서, 추가적인 시험/훈련 데이터 세트들이 수신되었는지에 대한 결정이 이루어질 수 있 다. 예를 들어, 회로는, 명령어를 실행할 때, 추가적인 시험/훈련 데이터 세트(예를 들어, 훈련 데이터 세트(4262-2), 훈련 데이터 세트(4262-3), 시험 데이터 세트(4274-2) 등)가 수신되었는지를 결정할 수 있다. 판정 블록 4640으로부터, 로직 흐름은 예를 들어 새로 수신된 시험/훈련 데이터 세트들을 사용하여 추론 모델을 더 훈련하기 위해 블록 4620으로 복귀할 수 있거나; 또는 로직 흐름이 종료 될 수 있다. 로직 흐름은 추가적인 시험/훈련 데이터 세트들이 수신되었다는 결정에 기초하여 판 정 블록 4640으로부터 블록 4620으로 복귀할 수 있다. 다른 대안으로서, 로직 흐름은 추가적인 시험/훈 련 데이터 세트가 수신되지 않았다는 결정에 기초하여 종료될 수 있다. 안전한 모델 실행을 위한 적대적 훈련 도 47은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 입력 디바이스 및 신뢰할 수 있는 실행 환경(TEE) 을 포함한다. 메모리는 공개 추론 모델 파티션(4722-PUB), 입력 데이터, 중간 출력 데이터, 출력 데이터, 및 명령어들을 저장한다. TEE는 비공개 추론 모델 파티션(4722-PRIV) 및 TEE 명령어들을 저장한다. 일반적으로, TEE는 시스템 내의 임의의 신뢰할 수 있는 실행 엔클레 이브 또는 파티션일 수 있다. 예를 들어, TEE는 회로 내의 신뢰할 수 있는 실행 파티션일 수 있다. 다른 예로서, TEE는 신뢰할 수 있는 방식으로 회로 및 메모리로부터 세그먼트화된 그 자신의 회로 및 메모리(도시되지 않음)를 포함할 수 있다. 일반적으로, TEE는 (예를 들어, TEE 명령어들 의) 격리된 실행과 같은 보안 특징들을 비공개 추론 모델 파티션(4722-PRIV)의 기밀성과 함께 제공할 수 있다. 일반적으로, 시스템은 추론 모델의 일부(예를 들어, 비공개 추론 모델 파티션 4722-PRIV)를 보안 방식으로(예를 들어, TEE 내에서) 실행할 수 있는 반면, 추론 모델의 나머지(예를 들어, 공개 추론 모델 파티션 4722-PUB)는 비보안 컴퓨팅 리소스들(예를 들어, 회로 및 메모리 등)에서 실행된다. 일부 예들에서, 공개 추론 모델 파티션(4722-PUB)은 적대적 추론 모델로 훈련될 수 있으며, 따라서 공개 추론 모델 파티션(4722-PUB)은 부정확하거나 덜 정확한 국소 최소값(local minimum)으로 해석된다. 달리 말하면, 공 개 추론 모델 파티션(4722-PUB)은, 그 자체로 실행될 때, 부정확하거나 덜 정확한 국소 최소값으로 해석된다. 그러나, 완전한 추론 모델(예를 들어, 공개 추론 모델 파티션(4722-PUB) + 비공개 추론 모델 파티션(4722- PRIV))은 정확한 국소 최소값으로 해석된다. 이는 추론 모델이 보안 방식으로 실행되고 기밀 방식으로 유지되는 모델의 일부로서 보호된다는 점에서 이점을 제공한다. 이는 단순히 보안 환경(TEE)에서 전체 추론 모델을 실행하는 것보다 이점을 제공한다는 점에 유의한 다. 예를 들어, 많은 보안 환경들은 제한된 메모리 및 계산 리소스들을 갖는다. 이와 같이, 많은 현대의 추론 모델들은 완전히 보안 환경 내에서 실행될 수 없다. 일부 예들에서, 비공개 추론 모델 파티션(4722-PRIV)이 TEE 이외의 시스템들 또는 기법들을 사용하여 보호될 수 있다는 것을 유의한다. 예를 들어, 4722-PRIV는 예컨대 호모모픽 암호화, 다자간 계산, 또는 다른 이러한 암호화된 실행 기법들을 사용하여 암호화된 형태로 포 팅될 수 있다. 이러한 예에서, TEE의 제한된 메모리 공간 대신에, 암호화된 모델은 실행하기 위해 더 많 은 계산 리소스를 필요로 하고 암호화되지 않은 실행보다 더 긴 런타임이 소요될 수 있다. 본 명세서에 제공된 예들이 TEE을 사용하지만, 개시된 예들이 TEE 이외의 수단(예를 들어, 암호화된 실행, 다자간 실행 등)을 사용하여 보안된 비공개 추론 모델 파티션들(예를 들어, 4722-PRIV)에 대해 구현될 수 있다는 것을 이해 하여야 한다.본 개시내용은 추론 모델의 일부가 보안 환경에서 유지되는 추론 모델의 보안을 제공하는 시스템들 및 기법들을 제공한다. 게다가, 적대자가 공개 추론 모델 파티션(4722-PUB)을 획득하는 경우에도, 적대자는 부정확하거나 덜 정확한 국소 최소값으로 해석되는 공개 추론 모델 파티션(4722-PUB)으로 인해 추론 모델의 전체 기능 을 재생할 수 없을 것이다. 도 48은 본 개시내용의 예에 따라 (예를 들어, 도 1의 강화된 시스템의 추론 시스템으로서) 구현될 수 있는 파티셔닝된 추론 시스템의 예를 예시한다. 도 49는 추론 모델을 보안 방식으로 실행하기 위해 강화된 시스템(예를 들어, 도 1의 강화된 시스템)에 의해 구현될 수 있는 예시적 기법을 예시한다. 도 1의 강화된 시스템의 동작이 도 48 및 도 49를 참조하여 설명된다. 도 48을 보다 구체적으로 참조하면, 추론 모델(또는 파티셔닝된 추론 모델)이 묘사되어 있다. 추론 모델 은 연결을 통해 연결된 다수의 노드를 포함한다. 추론 모델은 예를 들어 신경망 등과 같은 임의의 다양한 추론 모델일 수 있다. 일반적으로, 노드들은 연결들을 통해 입력(들)을 수신 하고 활성화 함수에 기초하여 출력을 유도한다. 다양한 활성화 함수들(예를 들어, 아이덴티티, 이진 스텝, 탄 젠트, 아크-탄젠트, 시그모이드, 로지스틱 또는 소프트 시그모이드, 가우시안 등) 중 임의의 것이 사용될 수 있 다. 게다가, 종종, 값들은 각각의 연결에서, 가중치라고 지칭되는, 연결 특정 상수에 의해 스케일링된다. 노드들의 그룹들은 층이라고 지칭될 수 있다. 예를 들어, 층(4890-1), 층(4890-2), 층(4890-3), 층(4890-4), 및 층(4890-5)이 묘사되어 있다. 추론 모델은 임의의 수의 노드들, 및 층들 및 층당 노드들의 수 등을 포함할 수 있다는 점에 유의한다. 실제로, 추론 모델은 종종 여기에 묘사된 것보다 더 많은 노드들 및 층 들을 포함할 것이다. 여기에 묘사된 네트워크 아키텍처는 단지 표현의 명확성을 위한 것이고, 제한적이지 않다. 추론 모델은 선택된 층들이 파티션들 중 하나에 포함된 공개 추론 모델 파티션(4822-PUB) 및 비공개 추론 모델 파티션(4822-PRIV)으로 파티셔닝된다. 예를 들어, 공개 추론 모델 파티션(4822-PUB)은 층들(4890-1, 4890-2, 4890-3)을 포함하는 반면, 비공개 추론 모델 파티션(4822-PRIV)은 층들(4890-4, 4890-5)을 포함한다. 비공개 파티션 또는 TEE에서 유지되는 파티션은 묘사된 바와 같은 나중 층들과 달리 추론 모델의 이전 또는 초기 층들을 포함할 수 있다는 점에 유의한다. 예들은 이에 관하여 제한되지 않는다. 도 49를 보다 구체적으로 참조하면, 기법은 원 49.1에서 시작할 수 있다. 원 49.1에서, 강화된 시스템은 입력 데이터를 수신할 수 있다. 예를 들어, 시스템의 회로는 입력 데이터를 수신하기 위해 명령어들을 실행할 수 있다. 예를 들어, 회로는 입력 디바이스로부터 입력 데이터 를 수신할 수 있다. 다른 예로서, 회로는 인터페이스를 통해 다른 컴퓨팅 디바이스로부터 입력 데이터를 수신할 수 있다. 원 49.2로 계속되어, 강화된 시스템은 공개 추론 모델 파티션(4722-PUB)을 실행하여 입력 데이터로 부터 중간 출력 데이터를 생성할 수 있다. 예를 들어, 회로는, 명령어들을 실행할 때, 입력 데이터를 파티션의 제1 층에 대한 입력으로서 사용하여 공개 추론 모델 파티션(4722-PUB)의 층들 과 연관된 계산들에 기초하여 중간 출력 데이터를 유도할 수 있다. 특정 예로서, 중간 출력 데이 터는 층(4890-3), 즉 공개 추론 모델 파티션(4722-PUB)의 마지막 층으로부터의 노드들로부터의 출력들에 대응할 수 있다. 원 BD3.3으로 계속되어, 강화된 시스템의 TEE는 중간 출력 데이터를 수신 하거나 그에 액세스할 수 있다. 예를 들어, TEE는, TEE 명령어들을 실행할 때, (예를 들어, 메모 리 등으로부터의) 중간 출력 데이터에 액세스할 수 있다. 원 49.4로 계속되어, 강화된 시스템은 비공개 추론 모델 파티션(4722-PRIV)을 보안 방식으로 실행하여, 중간 출력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, TEE는, TEE 명령어들 을 실행할 때, 파티션의 제1 층에 대한 입력으로서 중간 입력 데이터를 사용하여 비공개 추 론 모델 파티션(4722-PRIV)의 층들과 연관된 계산들에 기초하여 출력 데이터를 유도할 수 있다. 특정 예로서, 출력 데이터는 층(4890-5), 즉 비공개 추론 모델 파티션(4722-PRIV)의 마지막 층으로부터의 노드로부터의 출력에 대응할 수 있다. 도 50은 파티셔닝된 추론 모델을 훈련하도록 구현될 수 있는 시스템을 예시한다. 도 51은 로직 흐름 의 일 예를 예시한다. 로직 흐름은 파티셔닝된 추론 모델(예를 들어, 추론 모델, 추론 모델 등)을 훈련하기 위해 본 명세서에 설명된 하나 이상의 예에 의해 실행되는 동작들 중 일부 또는 전부를나타낼 수 있다. 예를 들어, 시스템(또는 그 컴포넌트)은 로직 흐름에서 추론 모델에 대한 비공개 및 공개 파티션을 생성하는 동작을 수행할 수 있다. 시스템 및 로직 흐름은 서로 관련하여 그리고 또한 도 48의 파티셔닝된 추론 모델을 참조하여 설명된다. 그러나, 예들은 이에 관하여 제한되지 않는다. 도 50을 보다 구체적으로 참조하면, 시스템은, 회로, 메모리, 및 인터페이스를 포함할 수 있다. 메모리는 비공개 추론 모델 파티션(5022-PRIV) 및 공개 추론 모델 파티션(5022-PUB)을 포함하 는 추론 모델을 저장한다. 메모리는 성능 특성들, 명령어들, 성능 예산 및 적 대적 훈련 모델을 더 포함한다. 도 51을 보다 구체적으로 참조하면, 로직 흐름은 블록 5110에서 시작할 수 있다. 블록 5110 \"성능 예산 수신\"에서, 시스템은 성능 예산을 수신할 수 있다. 예를 들어, 회로는 명령어들을 실 행할 때, 사용자 선택에 기초하여 성능 예산을 수신할 수 있다. 일부 예에서, 성능 예산은 예를 들어 전 체 런타임 저하와 같은 성능 저하의 수용 가능한 수준의 표시를 포함할 수 있다. 특정 예로서, 성능 예산 은 20%까지의 성능 페널티가 수용 가능하다는 표시를 포함할 수 있다. 블록 5120 \"비공개 파티션에 층 Li 추가/공개 파티션으로부터의 제거\"로 계속하여, 시스템은 비공개 모델 파티션(5022-PRIV)에 층 Li를 추가할 수 있다. 일부 예들에서, 층들을 비공개 및 공개 파티션들로 그룹화하는 것은 추론 모델의 마지막(예를 들어, 출력에 가장 가까운) 층에서 시작할 수 있다. 예를 들어, 5개의 층(489 0)을 갖는 추론 모델(예를 들어, 추론 모델 등)의 경우, i는 \"5\"에서 시작할 수 있다. 이 예를 사용하여, 블록 520에서, 회로는 비공개 추론 모델 파티션(5090-5)에 층(5090-5)을 추가하고 공개 추론 모델 파티션(5022-PUB)으로부터 층(5090-5)을 제거하기 위해 명령어들을 실행할 수 있다. 블록 5130 \"비공개 추론 모델 파티션에 대한 성능 비용 평가\"로 계속하여, 시스템은 보안 환경(예를 들어, TEE 등)에서 비공개 추론 모델 파티션(DBV422-PRIV)를 실행하기 위한 성능 비용을 평가할 수 있다. 일부 예들에서, TEE는 TEE의 계산 능력들(예를 들어, 메모리 공간, 동작(들)당 성능 영향, 페이지 크기, 캐시 크기 등)을 노출시키는 API(application programming interface)를 포함할 수 있다. 그에 따라, 일부 예 들에서, 블록 5130에서(또는 블록 5120 이전에), 로직 흐름은 TEE에서 추론 모델을 실행하기 위한 성능 메트릭들을 결정할 수 있다. 일부 예들에서, 블록 5130에서(또는 블록 5120 이전에), 로직 흐름은 또한 회로 및 메모리를 사용하여 추론 모델을 실행하기 위한 성능 메트릭들을 결정할 수 있다. 예 를 들어, 회로는 TEE와 연관된 성능 메트릭들을 결정하기 위해 TEE(예를 들어, TEE)에 질의하는 명 령어들을 실행할 수 있고, 이러한 성능 메트릭들의 표시들을 성능 특성들로서 저장할 수 있다. 블 록 BD530에서, 회로는 추론 모델의 층의 아키텍처 및 성능 특성들에 기초하여 TEE에서 비공개 추론 모델 파티션(5022-PRIV)(또는 비공개 추론 모델 파티션(5022-PIRV)에 추가된 층들)을 실행하는 것 에 대한 성능을 계산하는 비용을 평가하기 위해 명령어들을 실행할 수 있다. 판정 블록 5140 \"성능 예산 초과?\"로 계속하여, 보안 환경에서(예를 들어, TEE에서) 비공개 추론 모델 파 티션(5022-PRIV)을 실행함으로써 성능 예산이 초과되는지에 관련한 결정이 이루어질 수 있다. 예를 들어, 비공개 추론 모델 파티션(5022-PRIV)이 추론 모델의 층(4890-5)을 포함하고 TEE에서 층 (4890-5)을 실행하는 것이 10% 성능 페널티를 도입한다고 가정한다. 또한, 성능 예산이 20% 미만의 수용 가능한 성능 저하를 나타낸다고 가정한다. 이러한 예들을 사용하여, 성능 예산은 층(4890-5)을 포함하는 비공개 추론 모델 파티션(5022-PRIV)에 의해 초과되지 않는다. 일부 예들에서, 명령어들을 실행함에 있 어서 회로는 성능 특성들에 기초하여 비공개 추론 모델 파티션(5022-PRIV)의 추정된 실행 런타임이 성능 예산을 초과하는지를 결정할 수 있다. 판정 블록 5140으로부터, 로직 흐름은 판정 블록 5150 또는 판정 블록 5160 중 어느 하나로 계속될 수 있 다. 로직 흐름은 성능 예산이 초과되지 않는다는 결정에 기초하여 판정 블록 5140으로부터 판정 블록 5150으로 계속될 수 있는 반면, 로직 흐름은 성능 예산이 초과된다는 결정에 기초하여 판정 블록 5140으로부터 판정 블록 5160으로 계속될 수 있다. 판정 블록 5150 \"i가 1보다 더 큰가?\"에서, i가 1보다 더 큰지 여부, 즉 공개 추론 모델 파티션(5022-PUB) 내에 여전히 층이 있는지 여부를 결정한다. 판정 블록 5150으로부터, 로직 흐름은 블록 5170 또는 블록 5190 중 어느 하나로 계속될 수 있다. 로직 흐름은 i가 1보다 더 크다는 결정에 기초하여 판정 블록 5150으로 부터 블록 5170으로 계속될 수 있는 반면, 로직 흐름은 i가 1보다 더 크지 않다는 결정에 기초하여 판정 블록 5150으로부터 블록 5190으로 계속될 수 있다.판정 블록 5160 \"비공개 추론 모델 파티션에 2개 이상의 층이 있는가?\"에서, 비공개 추론 모델 파티션(5022- PRIV)이 2개 이상의 층을 포함하는지에 대한 결정이 이루어진다. 예를 들어, 회로는 비공개 추론 모델 (5022-PRIV)이 1개를 초과하는 층을 포함하는지를 결정하기 위해 명령어들을 실행할 수 있다. 판정 블록 5160으로부터, 로직 흐름은 블록 5180 또는 블록 5190 중 어느 하나로 계속될 수 있다. 로직 흐름(510 0)은, 비공개 추론 모델 파티션이 1개 초과의 층을 포함한다는 결정에 기초하여 판정 블록 5160으로부터 블록 5180으로 계속될 수 있는 반면, 로직 흐름은, 비공개 추론 모델 파티션이 1개 초과의 층을 포함하지 않는 다는 결정에 기초하여 판정 블록 5160으로부터 블록 5190으로 계속될 수 있다. 블록 5170 \"i를 감분\"에서, 시스템은 i를 감분시킬 수 있다. 예를 들어, 명령어들을 실행하는 회 로는 i를 감분시킬 수 있다. 블록 5170으로부터, 로직 흐름은 블록 5120으로 복귀하여 비공개 추 론 모델 파티션에 다른 층을 평가하고 어쩌면 추가할 수 있다. 블록 5180 \"비공개 파티션으로부터 층 Li 제거/ 공개 파티션에 대한 추가\"에서, 시스템은 비공개 모델 파티션(5022-PRIV)으로부터 층 Li를 제거하고 층 Li를 공개 추론 모델 파티션(5022-PUB)에 추가할 수 있다. 블록 5190 \"적대적 모델로 공개 추론 모델 파티션을 훈련\"에서, 시스템은 적대적 모델을 사용하여 공개 추론 모델 파티션(5022-PUB)을 훈련할 수 있다. 일반적으로, 적대적 모델로 공개 추론 모델 파티션 (5022-PUB)을 훈련하는 것은, 비공개 모델 대신에 대체 서브-모델로 실행될 때, 공개 추론 모델 파티션(5022- PUB)을 부정확하거나 덜 정확한 국소 최소값에 도달하도록 안내할 것이다. 즉, 적대적 손실은 비공개 모델이 키로서 기능하도록 비공개 모델 내의 층들에 의해 생성된 중간 표현들을 암호화 또는 스크램블링하도록 전체 모 델을 \"교육\"한다. 도 52는 예시적 추론 모델이 비공개 추론 모델 파티션(5222-PRIV) 및, 적대적 훈련을 위해 적대적 모델들 및 대체 서브-모델들에 결합된, 2개의 공개 추론 모델 파티션들(5222-PUB1 및 5222-PUB2)로 분할 되는 것을 묘사한다. 언급한 바와 같이, 훈련은 대체 서브-모델(5282-1 및 5282-2)로 실행될 때 공개 추론 모 델 파티션(5222-PUB1 및 5222-PUB2)을 부정확하거나 덜 정확한 국소 최소값에 도달하도록 안내하도록 동작한다. 훈련 동안, 추론 모델은 모델 파티션들(예를 들어, 공개 추론 모델 파티션(5222-PUB1), 비공개 추론 모델 파티션(5222-PRIV), 및 공개 추론 모델 파티션(5222-PUB2))에 대한 판독 및 기입 액세스를 갖는다. 또한, 적대 적 모델들은 대응하는 대체 서브-모델들에 대한 판독 및 기입 액세스를 갖는다(예를 들어, 적대적 모델(5280-1)은 대체 서브-모델(5282-1)에 대한 판독 및 기입 액세스를 갖는 반면, 적대적 모델(5280-2)은 대체 서브-모델(5282-2)에 대한 판독 및 기입 액세스를 갖는다). 나머지 연결들(예를 들어, 점선 연결들)은 판독 전 용이다. 일부 예들에서, 메인 모델에는 더 많은 훈련 반복들, 적대적 모델들(528-0-1 및 5280-2)의 가중치들에 대 한 액세스(예를 들어, 판독 액세스)(예를 들어, 훈련 동안 적대자들이 이동하고 있는 \"방향\"을 결정하기 위한 그래디언트들을 결정함), 더 많은 훈련 데이터 등이 제공될 수 있다. 이러한 제공들은 비공개 추론 모델 파티 션(5222-PRIV)에 의해 더 큰 보안 또는 더 큰 암호화를 제공할 수 있다. 섹션 V - 프라이버시 에지 디바이스들에 대한 프라이버시 인식 특징 균형화기 현용의 추론 시스템들에서의 한 가지 문제는, 대상 검출기들(예를 들어, 분류기 모델들)이, 프라이버시 영향들 에 관계없이, 모든 검출된 대상들을 보고하도록 배열된다는 것이다. 예를 들어, 현용의 추론 시스템들은 이미 지 내의 모든 대상들을 분류할 것이고, 모든 분류된 대상들을 보고하여, 시스템의 임의의 프라이버시 영향들 또 는 강화를 환경의 상위 층들에 남길 것이다. 본 개시내용은, 예를 들어, 일부 검출된 대상들의 프라이버시를 보호하기 위해, 정의된 범위 외부의 대상들의 보고를 스크리닝하도록 배열될 수 있는 추론 환경을 제공한다. 이것의 일 예는 카메라에 의해 캡처된 이미지들에서 대상을 검출하도록 배열된 스마트 감시 카메라일 수 있다. 스마트 감시 카메라는 지정된 범위 외부에 있는 검출의 보고를 필터링 또는 스크리닝하도록 구성될 수 있다. 법령 또는 정부 규정에 의해 프라이버시의 관리가 점점 더 요구되고 있음을 이해하여야 한다. 예를 들어, EU(European Union)의 GDPR(General Data Protection Regulation)은 개인의 개인 데이터의 반출 및 사용을 규 제하고 개인들에게 그들의 개인 정보의 사용에 대한 제어 권한을 제공한다. 이와 같이, 본 명세서에서 설명된 바와 같이 검출된 일부 대상들의 프라이버시를 유지하는 것이 일부 법률들 하에서 요구될 수 있다. 도 53은 서버 및 에지 디바이스를 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 에 지 디바이스는 서버 또는 서버에 결합된 네트워크에 엔트리 포인트를 제공하는 임의의 디바이스일 수 있다. 예를 들어, 에지 디바이스는 라우터, 라우팅 스위치, IAD(integrated access device), 멀티플렉서, 셀 노드, 기지국 등일 수 있다. 다른 예로서, 에지 디바이스는, 예를 들어, 카메라, 마이크 로폰 등과 같은, 입력 캡처 디바이스일 수 있다. 일반적으로, 서버 및 에지 디바이스는 광역 네트 워크, 근거리 네트워크 또는 인터넷과 같은 임의의 적절한 인터커넥트를 통해 결합될 수 있다. 서버는 회로(5310-1), 메모리(5320-1) 및 인터페이스(5330-1)를 포함한다. 메모리(5320-1)는 명령어들(5328-1), 스크 리닝 능력들, 프라이버시 수준 사양 및 프라이버시 스크리닝된 출력 데이터를 저장한다. 에지 디바이스는 회로(5310-3), 메모리(5320-3), 인터페이스(5330-3) 및 입력 디바이스를 포함한 다. 메모리(5320-3)는 명령어들(5328-3), 입력 데이터, 추론 모델, 출력 데이터, 스크리닝 능력들, 프라이버시 수준 사양 및 프라이버시 스크린 출력 데이터를 저장한다. 회로(5310-3)는 예를 들어 입력 디바이스로부터 입력 데이터를 수신하기 위해 명령어들(5328-3)을 실행할 수 있다. 추가적으로, 회로(5310-3)는 명령어(5328-3)를 실행하여 추론 모델 및 입력 데이터 로부터 출력 데이터를 생성할 수 있다. 예를 들어, 회로(5310-3)는 입력 데이터에 대해 추 론 모델을 실행하여 출력 데이터를 생성할 수 있다. 일부 예들에서, 입력 디바이스는 이미 지 프레임(예를 들어, 정화상 프레임, 비디오 프레임 등)을 캡처하도록 배열된 이미지 센서일 수 있다. 추론 모델은 입력 데이터를 수신하고 입력 데이터로부터 대상(예를 들어, 이미지 프레임에 표현된 대상 등)을 검출하고 분류하도록 배열될 수 있다. 회로(5310-1)는 에지 디바이스의 스크리닝 능력들을 수집 및/또는 확인하기 위해 에지 디바이스 에 질의하는 명령어(5328-1)를 실행할 수 있다. 일반적으로, 스크리닝 능력들은 추론 모델 에 의해 분류 가능한 대상의 표시를 포함할 수 있다. 예를 들어, 스크리닝 능력들은 입력 데이터 로부터 검출되고 분류될 수 있는 대상, 액션, 장면, 배우 등의 표시를 포함할 수 있다. 게다가, 회로(5310- 1)는 스크리닝 능력들에 부분적으로 기초하여 프라이버시 수준 사양을 생성하기 위해 에지 디바이 스에 질의하는 명령어(5328-1)를 실행할 수 있고, 프라이버시 수준 사양을 에지 디바이스로 통신할 수 있다. 예를 들어, 추론 엔진이 이미지에서 다음과 같은 대상 [총, 칼, 폭탄, 공, 펜, 전화, 키, 바 위, 인간, 개, 고양이]를 검출하고 분류하도록 배열된다고 가정하면 스크리닝 능력들은 추론 엔진 이 검출 및 분류하도록 배열된 대상의 표시를 포함할 수 있다. 스크리닝 능력이 주어지면, 회로(5310-1)는, 명 령어(5328-1)를 실행할 때, 총, 칼 및 폭탄을 제외한 모든 검출된 대상을 스크리닝(또는 필터링)하는 표시를 포 함하는 프라이버시 수준 사양을 생성할 수 있다. 회로(5310-3)는 출력 데이터 및 프라이버시 수준 사양으로부터 스크리닝된 출력 데이터를 생 성하기 위해 명령어들(5328-3)을 실행할 수 있다. 예를 들어, 회로(5310-3)는, 명령어(5328-3)를 실행할 때, 출력 데이터로부터 프라이버시 수준 사양에 표시된 대상들의 리스트 외부의 분류된 대상들을 필터 링할 수 있다. 또한, 회로(5310-3)는 스크리닝된 출력 데이터를 서버에 제공하기 위해 명령어 (5328-3)를 실행할 수 있다. 예를 들어, 회로(5310-3)는 스크리닝된 출력 데이터를 인터페이스(5330- 3)를 통해 서버에 제공할 수 있다. 도 54는 추론 환경에서 프라이버시를 증가시키기 위해 에지에서의 출력을 스크리닝하기 위해 환경과 같은 추론 환경에서 구현될 수 있는 예시적 기법을 예시한다. 기법은 편의 및 명확성을 위해 도 53의 추론 환경을 참조하여 설명됨을 유의한다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 54.1에서 시작할 수 있다. 원 54.1에서, 서버는 에지 디바이스의 스크리닝 능력 을 결정하기 위해 에지 디바이스에 질의할 수 있다. 예를 들어, 서버는 인터페이스(5330-1)를 통 해 에지 디바이스에 스크리닝 능력들을 수신하라는 요청을 전송할 수 있다. 원 54.2에서, 에지 디 바이스는 스크리닝 능력들의 표시를 포함하는 정보 요소를 서버에 전송할 수 있다. 예를 들 어, 원 54.1에서 요청을 수신하는 것에 응답하여, 에지 디바이스는, 인터페이스(5330-3)를 통해, 스크리 닝 능력들을 서버에 전송할 수 있다. 또한, 원 2.2에서, 서버는 인터페이스(5330-1)를 통해 에지 디바이스로부터 스크리닝 능력들을 수신할 수 있다. 원 54.3에서, 서버는 스크리닝 능력들에 부분적으로 기초하여 프라이버시 수준 사양을 생성 할 수 있다. 예를 들어, 에지 디바이스의 스크리닝 능력들이 주어지면, 서버는 프라이버시 침입을 완화하거나 억제하기 위해 필터링할 분류 카테고리들의 리스트를 생성할 수 있다. 원 54.4에서, 서버 는 프라이버시 수준 사양의 표시를 포함하는 정보 요소를 에지 디바이스로 전송할 수 있다. 예를 들어, 서버는, 인터페이스(5330-1)를 통해, 프라이버시 수준 사양을 에지 디바이스로전송할 수 있다. 또한, 원 2.4에서, 에지 디바이스는 인터페이스(5330-3)를 통해 서버로부터 프라 이버시 수준 사양을 수신할 수 있다. 원 54.5에서, 에지 디바이스는 입력 데이터를 수신할 수 있다. 예를 들어, 에지 디바이스는 입력 디바이스로부터 입력 데이터를 수신할 수 있다. 유의할 점은, 입력 데이터의 다수의 상이한 인스턴스들이 본 명세서에 설명되는 바와 같이 수신되고 스크리닝(또는 필터링)될 수 있다는 것이다. 예를 들어, 에지 디바이스는 본 명세서에 설명된 바와 같이 원 54.5에서 입력 데이터를 반복적으로 수신하고 프라이버시 스크리닝된 출력을 생성할 수 있다. 원 54.6에서, 에지 디바이스는 추론 모 델 및 입력 데이터로부터 출력 데이터를 생성할 수 있다. 예를 들어, 에지 디바이스 는 입력 데이터에 대해 추론 모델을 실행하여 출력 데이터를 생성할 수 있다. 원 54.7에서, 에지 디바이스는 출력 데이터 및 프라이버시 수준 사양으로부터 프라이버시 스크리닝된 출력 데이터를 생성할 수 있다. 예를 들어, 에지 디바이스는 보고되지 않을 대상들(예를 들어, 프라이 버시 수준 사양에 열거된 대상들, 프라이버시 수준 사양으로부터 생략된 대상들 등)을 출력 데이터 로부터 스크리닝, 필터링, 또는 다른 방식으로 제거하고 필터링된 출력들을 프라이버시 스크리닝된 출력 데이터에 저장할 수 있다. 원 54.8에서, 에지 디바이스는 프라이버시 스크리닝된 출력 데이터의 표시를 포함하는 정보 요소를 서버에 전송할 수 있다. 예를 들어, 에지 디바이스는, 인터페이스(5330-3)를 통해, 프라이버시 스 크리닝된 출력 데이터를 서버에 전송할 수 있다. 또한, 원 2.8에서, 서버는 인터페이스 (5330-1)를 통해, 에지 디바이스로부터 프라이버시 스크리닝된 출력 데이터를 수신할 수 있다. 일부 예들에서, 추론 모델 자체는 본 명세서에서 설명된 바와 같이 출력들을 스크리닝하도록 수정될 수 있다. 예를 들어, 추론 모델은 특정 출력들을 드롭 아웃하도록 수정될 수 있다. 특정 예로서, 추론 모델 내의 마지막 층을 연결하는 특정 가중치들은 추론 모델이 이러한 가중치들과 연관된 클래스들을 출력하지 않게 하도록 수정 (예를 들어, 0으로 설정 등)될 수 있다. 도 55는 서버 및 에지 디바이스를 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 에지 디바이스는 서버에 또는 서버에 결합된 네트워크 에 엔트리 포인트를 제공하는 임의의 디바이스일 수 있다. 예를 들어, 에지 디바이스는 라우터, 라우팅 스위치, IAD(integrated access device), 멀티플렉서, 셀 노드, 기지국 등일 수 있다. 다른 예로서, 에지 디 바이스는, 예를 들어, 카메라, 마이크로폰 등과 같은, 입력 캡처 디바이스일 수 있다. 일반적으로, 서버 및 에지 디바이스는 광역 네트워크, 근거리 네트워크 또는 인터넷과 같은 임의의 적절한 인터커넥 트를 통해 결합될 수 있다. 서버는 회로(5510-1), 메모리(5520-1) 및 인터페이스(5530-1)를 포함한다. 메모리(5520-1)는 명령어들(5528-1) 및 프라이버시 스크리닝된 출력 데이터를 저장한다. 에지 디바이스는 회로(5510-3), 메모리(5520-3), 인터페이스(5530-3) 및 입력 디바이스를 포함한 다. 메모리(5520-3)는 명령어들(5528-3), 입력 데이터, 프라이버시 스크리닝된 추론 모델, 및 프 라이버시 스크린 출력 데이터를 저장한다. 프라이버시 스크리닝된 추론 모델은 프라이버시 스크리 닝된 출력 데이터를 자동으로 생성하도록 조정된 추론 모델일 수 있다. 예를 들어, 프라이버시 스크리닝 된 추론 모델은 추론 모델이 비-비공개 클래스들(또는 유사한 것)과 연관된 데이터를 출력하게 하기 위해 추론 모델에서 가중치들 또는 연결들을 조정함으로써 생성될 수 있다. 상기 예를 사용하여, 추론 모델은 총, 칼 또는 폭탄의 분류를 출력하는 프라이버시 스크리닝된 추론 모델을 생성하도록 (예를 들어, 연결 등을 조정함으로써) 수정될 수 있다. 회로(5510-3)는 예를 들어 입력 디바이스로부터 입력 데이터를 수신하기 위해 명령어들(5528-3)을 실행할 수 있다. 추가적으로, 회로(5510-3)는 프라이버시 스크리닝된 추론 모델 및 입력 데이터로 부터 프라이버시 스크리닝된 출력 데이터를 생성하기 위해 명령어들(5528-3)을 실행할 수 있다. 예를 들 어, 회로(5510-3)는 프라이버시 스크리닝된 출력 데이터를 생성하기 위해 입력 데이터에 대해 프라 이버시 스크리닝된 추론 모델을 실행할 수 있다. 일부 예들에서, 입력 디바이스는 이미지 프레임 (예를 들어, 정화상 프레임, 비디오 프레임 등)을 캡처하도록 배열된 이미지 센서일 수 있다. 추론 모델(532 2)은 입력 데이터를 수신하고 입력 데이터로부터 대상(예를 들어, 이미지 프레임에 표현된 대상 등)을 검출하고 분류하도록 배열될 수 있다. 프라이버시 인식 다중-위치 모델 실행 본 개시내용은 분산 방식의 추론 모델 실행의 예들을 제공한다. 예를 들어, 추론 모델의 일부는 서버에 결합된 에지 디바이스들 상에서 실행될 수 있다. 다른 예로서, 다수의 서버가 분산 방식으로 추론 모델을 실행하는 데사용될 수 있는데, 즉 각각의 서버는 모델의 일부를 실행한다. 또한, 본 개시내용은 플랫폼들의 보안 능력들을 결정하기 위해 분산 컴퓨팅 플랫폼들(예를 들어, 서버들, 에지 디바이스들 등)에 문의하고, 그 후 추론 모델을 분할하고 결정된 보안 능력들뿐만 아니라 추론 모델의 상이한 부분들의 보안 요건들에 기초하여 부분들(또는 슬 라이스들)을 플랫폼들에 할당하는 것을 제공한다. 따라서, 추론 모델의 분산 실행과 연관된 위험들이 완화될 수 있다. 예를 들어, 추론 모델의 상이한 부분들은 상이한 값들 또는 프라이버시 우려들을 가질 수 있다. 특정 예로서, 신경망 내의 초기 층들(예를 들어, 입력에 더 가까움)은 종종 복원(예를 들어, 재생성)하기 위해 더 많은 훈련 반복들이 소요되는 반면; (예를 들어, 출력 에 더 가까운) 나중의 층들은 종종 추론 모델이 훈련된 데이터에 관련한 정보를 더 쉽게 노출시킨다. 따라서, 추론 모델의 나중 층들은 분산 실행 환경에서 다른 플랫폼들보다 더 높은 보안 능력을 갖는 플랫폼에 분할되고 할당될 수 있다. 도 56은 클라이언트 디바이스 및 서버들(5603 및 5605)을 포함하는 예시적 추론 환경을 예시한다. 일반적으로, 서버들(5603 및 5605)은 분산 방식으로 추론 모델의 일부를 실행하도록 배열된다. 서버들(5603 및 5605)은 클라우드 기반(또는 액세스가능한) 컴퓨팅 리소스들, 에지 디바이스들, 구체적으로 배열된 추론 모델 실행 가속기들 등일 수 있다. 게다가, 2개의 서버(5603 및 5605)가 이 도면에 묘사되어 있지만, 임의의 수(2, 3, 4 또는 그 이상)의 서버가 추론 환경에 제공될 수 있다는 것을 이해하여야 한다. 설명한 바와 같이, 추론 환경의 서버들(5603 및 5605)은 에지 디바이스들일 수 있다. 일부 예들에서, 추론 환경은 클 라이언트 디바이스가 \"에지\"(예를 들어, 에지 디바이스들(5603, 5605) 등)에서 유휴 계산력을 이용하는 멀티-에지 환경일 수 있다. 클라이언트 디바이스 및 서버들(5603 및 5605)은 (예를 들어, 인터넷 등을 포함할 수 있는) 네트워크를 통해 결합될 수 있다. 보다 구체적으로는, 인터페이스들(5630-1, 5630-3 및 5630-5)은 디바이스들 사이의 통신 또는 데이터의 교환을 용이하게 하기 위해 네트워크에 결합될 수 있다. 클라이언트 디바이스는 회로(5610-1), 메모리(5620-1) 및 인터페이스(5630-1)를 포함한다. 메모리 (5620-1)는 추론 모델, 입력 데이터, 출력 데이터, 모델 보안 요건들, 명령어들 , 및 서버 능력들을 저장한다. 일반적으로, 클라이언트 디바이스는 모델 보안 요건들 및 서버 능력들에 기초하여 추론 모델을 모델 슬라이스들로 분할한 다음, 모델 보안 요건들 및 서버 능력들에 기초하여 이들 모델 슬라이스들을 서버들(5603 또는 5605) 중 하나에 할 당하도록 동작한다. 따라서, 추론 모델은 서버들(5603 및 5605)에 의해 분산 방식으로 실행될 수 있는 한편, 서버들의 서버 능력들 및 추론 모델의 보안 요건들에 기초하여 모델의 부분들의 보안 보호를 제공할 수 있다. 서버는 회로(5610-3), 메모리(5620-3) 및 인터페이스(5630-3)를 포함한다. 메모리(5620-3)는 모델 슬라 이스(5622-1) 및 명령어(5628-3)를 저장한다. 마찬가지로, 서버는 회로(5610-5), 메모리(5620-5) 및 인 터페이스(5630-5)를 포함한다. 메모리(5620-5)는 모델 슬라이스(5622-2) 및 명령어들(5628-5)을 저장한다. 일 반적으로, 서버(5603, 5605)는 각각의 서버의 보안 능력(예를 들어, 변조 방지, 보안 실행 제공 등)을 노출시키 는 API(application programming interface)를 제공한다. 또한, 서버들(5603 및 105)은 분산 방식으로 추론 모델의 부분들(예를 들어, 모델 슬라이스)을 실행하도록 배열된다. 회로(5610-1)는 명령어들(5628-1)을 실행하여 서버들(5603 및 5605)에 질의하여 각각의 서버들 각각의 보안 능 력들을 결정할 수 있다. 회로(5610-3 및 5610-5)는, 질의에 응답하여, 각각의 서버(5603 또는 5605)의 보안 능 력을 클라이언트 디바이스로 전송하기 위해, 각각, 명령어들(5628-3 및 5628-5)을 실행할 수 있다. 회로 (5610-1)는 각각의 서버들로부터 수신된 보안 능력들의 표시들을 서버 능력들로서 저장하기 위해 명령어 들(5628-1)을 실행할 수 있다. 회로(5610-1)는 서버 능력들 및 모델 보안 요건들에 기초하여 추론 모델을 모델 슬라이스들 로 분할하기 위해 명령어들(5628-1)을 실행할 수 있다. 일반적으로, 모델 보안 요건들은 추론 모델 의 각각의 층들, 부분들 또는 일부들 대한 보안 요건의 표시를 포함할 수 있다. 회로(5610-1)는 모델 보 안 요건들 및 서버 능력들에 기초하여 어느 서버(5603 또는 5605)가 어느 모델 슬라이스를 실행할지를 결정하기 위해 명령어들(5628-1)을 실행할 수 있다. 또한, 회로(5610-1)는, 할당된 모델 슬라이스 의 표시를 포함하는 정보 요소들을 (예를 들어, 인터페이스(5630-1) 등을 통해) 서버들(5603 및 5605) 각 각에 전송하기 위해 명령어(5628-1)와 모델 슬라이스를 분산 방식으로 실행하기 위해 명령어를 실행할 수 있다.회로(5610-3 및 5610-5)는 수신된 모델 슬라이스를 분산 방식으로 실행하기 위해 명령어들(5628-3 및 5628-5)을 각각 실행할 수 있다. 도 57은 분산 컴퓨팅 플랫폼들의 보안 능력들에 기초하여 분산 방식으로 추론 모델을 실행하기 위해 환경(560 0)과 같은 추론 환경에서 구현될 수 있는 예시적 기법을 예시한다. 기법은 편의성 및 명확성을 위 해 도 56의 추론 환경을 참조하여 설명됨을 유의한다. 그러나, 이는 제한을 의도하지 않는다. 기법은 원 57.1에서 시작할 수 있다. 원 57.1에서, 클라이언트 디바이스는 서버(5603, 5605)의 보안 능력들에 대해 서버(5603, 5605)에 질의할 수 있다. 예를 들어, 클라이언트 디바이스는 인터페이스 (5630-1)를 통해 서버들(5603 및 5605)의 서버 능력들을 수신하기 위한 요청을 에지 디바이스에 전 송할 수 있다. 원 57.2 및 57.3에서, 서버(5603, 5605)는, 각각, 그 각각의 보안 능력들의 표시를 클라이언트 디바이스 로 전송할 수 있다. 예를 들어, 원 57.1에서 요청을 수신하는 것에 응답하여, 서버는, 인터페이스(5630- 3)를 통해, 서버 각각에 대한 서버 능력들을 클라이언트 디바이스에 전송할 수 있다. 마찬 가지로, 원 57.1에서 요청을 수신하는 것에 응답하여, 서버는, 인터페이스(5630-5)를 통해, 서버 각각에 대한 서버 능력들을 클라이언트 디바이스에 전송할 수 있다. 원 57.4에서, 클라이언트 디바이스는 모델 보안 요건들 및 수신된 서버 능력들에 부분적으로 기초하여 추론 모델을 모델 슬라이스들로 분할할 수 있다. 또한, 원 57.4에서, 클라이언트 디바이 스는 서버 능력들 및 모델 보안 요건들에 기초하여 분산 방식으로 실행하기 위해 모델 슬라 이스들을 서버들(5603 또는 5605) 중 하나에 할당할 수 있다. 원 57.5 및 57.6에서, 클라이언트 디바이스는, 서버(5603 및 5605) 각각에, 수신된 모델 슬라이스(562 3)를 분산 방식으로 실행하기 위한 표시와 함께 각각의 서버에 할당된 모델 슬라이스의 표시를 전송할 수 있다. 예를 들어, 원 57.5에서, 클라이언트 디바이스는, 인터페이스(5630-1)를 통해, 서버에 모델 슬라이스(5623-1)를 전송할 수 있다. 마찬가지로, 원 57.6에서, 클라이언트 디바이스는 인터페이스 (5630-1)를 통해 서버에 모델 슬라이스(5623-2)를 전송할 수 있다. 원 57.7 및 57.8에서, 서버(5603 및 5605)는 수신된 모델 슬라이스를 분산 방식으로 실행할 수 있다. 섹션 VI - 일반사항 입력 품질을 보상하기 위한 반복 추론 현용의 추론 시스템의 한 가지 문제는 입력 데이터 품질 및/또는 양이 바람직하지 않을 수 있다는 것이다. 예 를 들어, 데이터 세트 내의 과도한 수의 샘플들이 수용 불가능한 것으로 평가될 수 있다. 이러한 경우에, 추론 모델은 임계 레벨의 신뢰도 없이 수용 불가능한 샘플들을 분류하지 못할 수 있다. 또한, 이들 수용 불가능한 샘플들이 필터링 제거되어, (예를 들어, 훈련 또는 시험 목적을 위한) 입력 데이터의 양을 감소시킬 수 있다. 따라서, 본 개시내용은 입력 데이터 내의 수용 불가능한 샘플들을 수용 가능한 샘플들로 변환하려는 노력으로 수용 불가능한 샘플들을 증강할 수 있는 추론 시스템을 제공한다. 도 58은 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시한다. 강화된 시스템은 회로, 메모리, 인터페이스, 및 입력 디바이스를 포함한다. 메모리는 하나 이상 의 추론 모델들(5822-1, 5822-2, 5822-N)(또는 추론 모델들)의 세트, 입력 데이터, 증강된 입력 데이터, 출력 데이터, 분류 데이터, 증강된 분류 데이터, 및 명령어들을 저장한 다. 많은 예들에서, 입력 데이터는 추론 모델들 중 하나 이상에 의한 분류를 위한 하나 이상의 샘 플의 데이터 세트를 포함할 수 있다. 동작 동안, 회로는 입력 데이터에 기초하여 추론 모델들 중 하나 이상에 의해 생성된 분류 데이터가 수용 불가능한 것으로서 평가되는 것에 응답하여 하나 이상의 증강된 입력 데이터(5825-1, 5825-2, 5825-N)의 세트(또는 증강된 입력 데이터의 세트)를 생성하 기 위해 명령어들을 실행할 수 있다. 또한, 회로는 증강된 입력 데이터를 추론 모델들 중 하나 이상으로 분류하여 증강된 분류 데 이터를 생성하기 위해 명령어들을 실행할 수 있다. 몇몇 예들에서, 이 사이클은 증강된 분류 데이 터가 수용 가능한 것으로 평가될 때까지 반복될 수 있다. 때때로, 회로는 입력 데이터 품질 및/또는 양을 보상하는 것과 같이, 하나 이상의 반복 추론을 수행하기 위해 명령어들을 실행할 수 있다. 많은 예들에서, 분류 데이터를 수용 가능한 것 또는 수용 가능하지 않은 것으로 평가하는 것은 분류 데이터에 포함된 신뢰도 수준에 기초할 수 있다. 예를 들어, 입력 데이터에서의 아티팩트들(예를 들어, 비디오 /이미지 아티팩트들)은 낮은 신뢰도 수준을 초래할 수 있다. 일단 분류 데이터가 수용 가능한 것으로서 평가되 면, 입력 데이터, 분류 데이터, 증강된 입력 데이터, 및 증강된 분류 데이터 중 하나 이상, 또는 그의 표시가 출력 데이터로서 제공될 수 있다. 일부 예들에서, 투표는 분류 또는 추론을 결정하기 위해 추론 모델들의 세트 중에서 발생할 수 있 다. 다양한 예들에서, 흐름 오케스트레이션은 데이터가 추론 모델들의 세트를 통해 어떻게 흐르는 지를 매핑할 수 있다. 하나 이상의 예에서, 경보들이 예컨대 추론 모델들 중 하나 이상에 의한 분 류에 기초하여 생성될 수 있다. 예를 들어, 회로는 추론 모델에 의한 입력 데이터의 분류에서의 신뢰도 수준이 임계값(예를 들어, 75%)을 초과할 때 분류 데이터(예를 들어, 분류 데이터 및/또는 증강된 분류 데이터)를 수용 가능한 것으로서 평가하기 위해 명령어들을 실행할 수 있다. 다양한 예들에서, 수용 불가능한 샘플의 하 나 이상의 양태들을, 증강 이후에 이들이 수용 가능한 것으로 평가되도록, 증강시키는 것에 의해 (예를 들어, 수용 가능한 것으로 평가되는) 데이터 세트 내의 이용가능한 샘플들의 수가 증가될 수 있다. 몇몇 예들에서, 수용 불가능한 샘플의 증강은 감마의 변경, 픽셀 시프트, 노이즈-제거, 에러 정정 등 중 하나 이상을 포함할 수 있다. 때때로, 하나 이상의 증강이 병렬로 수행 및/또는 분류될 수 있다. 또한, 하나 이상의 증강된 버전들의 세트는 예컨대 동작 이상들을 식별하기 위해 비교되고 평가될 수 있다. 종종, 이용가능한 샘플들의 수를 증가 시키는 것은 강화된 시스템들의 정확도를 향상시킬 수 있다. 예를 들어, 추론 모델은 더 큰 샘플 세트에 대해 재훈련될 수 있으며, 일반적으로 개선된 추론 모델을 야기한다. 때때로, 회로는 메모리가 입력 디바이스에 결합되는 인터페이스에 기초하여 또는 인터 페이스가 입력 디바이스와 통신하는 통신 방식에 기초하여 입력 데이터를 식별 및/또는 수신 하기 위해 명령어들을 실행할 수 있다. 많은 예들에서, 입력 디바이스는 환경들 및/또는 상황들에 대한 프리미엄 및/또는 도전적인 액세스를 포함할 수 있다. 예를 들어, 입력 디바이스는 위성, 스파이 카메라, 사물 인터넷(IoT) 디바이스, 또는 희귀한 또는 제한된 이벤트(예를 들어, 쓰나미, 지진, 충돌, 시장 이 상, 제한된 이력 기록 등)를 캡처하는 다른 트랜스듀서를 포함할 수 있다. 단일 인터페이스가 묘사되어 있다는 점에 유의한다. 그러나, 일부 예에서, 상이한 특성(예를 들어, 상이한 보안 요건 등)을 가지는 상이한 입력 디바이스 또는 입력 디바이스에 대해 상이한 인터페이스가 제공될 수 있다. 회로는 입력 데이터에 기초하여 분류 데이터를 생성하기 위해 추론 모델을 이용하도록 명령어를 실행할 수 있다. 분류 데이터는 이어서 (예를 들어, 신뢰도 임계값을 초과함으로써) 입 력 데이터가 수용 가능한지를 결정하기 위해 평가될 수 있다. 입력 데이터가, 예컨대 분류 데이터 등에 기초하여, 수용 불가능한 것으로 생각될 때, 회로는 입력 데이터를 하나 이상의 방식 들로 증강하여 증강된 입력 데이터를 생성시키는 명령어들을 실행할 수 있다. 일부 예들에서, 증 강들은 로컬 속성들을 보존하는 변환들을 포함할 수 있다. 증강된 입력 데이터는 증강된 분류 데이터 를 생성하기 위해 추론 모델에 의해 분류될 수 있다. 증강된 분류는 증강된 분류 데이터 가 출력 데이터로서 제공하도록 수용 가능한지를 결정하기 위해 평가될 수 있다. 다양한 예들에서, 분류 데이터 및 증강된 분류 데이터의 하나 이상의 버전은 예컨대 동작 이상들을 검출하기 위해 비교될 수 있다. 예를 들어, 추론 모델이 상이한 분류들 및/또는 신뢰도 수준들을 생성하 는 증강된 분류 데이터의 하나 이상의 버전들 및 분류 데이터는 강화된 시스템을 기만하기 위한 시도를 나타낼 수 있다. 예를 들어, 증강 이전 및 이후의 동일한 입력들의 2개의 출력들이 모순되는 예측 들(예를 들어, <<Stop>> 대 <<Limit 90>>)을 초래하는 경우, 이는 시스템을 기만하기 위한 시도를 나타낼 수 있 다. 때때로, 경보 또는 로그와 같은, 통지가 입력 데이터의 평가에 기초하여 생성될 수 있다. 추가적으 로 또는 다른 대안으로서, 입력 데이터의 평가에 기초하여 하나 이상의 정정 조치가 구현될 수 있다. 도 59는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명되는 하나 이상의 디바이스들에 의 해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 입력 데이터 품질(예를 들어, 입력 데이터가 추론 모델에 의해 분류되는 정확도 또는 신뢰도)을 개선시키기 위해 입력 데이터를 증강하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 5910 \"입력 데이터 수신\"에서 시작할 수 있고, 강화된 시스템이 입력 데이터 를 수신할 수 있다. 예를 들어, 입력 데이터는 인터페이스를 통해 입력 디바이스로부 터 수신될 수 있다. 일부 예들에서, 입력 데이터는 블록 5912 이전에 전처리될 수 있다. 블록 5912 \"입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성\"으로 진행하여, 입력 데이터는 추론 모델에 기 초하여 분류되어 분류 데이터를 생성할 수 있다. 예를 들어, 추론 모델은 입력 데이터에 기초하여 분류 데이터를 생성할 수 있다. 판정 블록 5914 \"입력 데이터 품질이 수용 가능한가?\"에서, 입력 데이터 는 분류 데이터에 기초하여 수용 가능한 것으로 또는 수용 불가능한 것으로서 평가될 수 있다. 예를 들어, 입 력 데이터는 분류 데이터에 기초하여 수용 가능한 것으로 또는 수용 불가능한 것으로 평가될 수 있 다. 입력 데이터가 수용 불가능한 것으로 평가되면, 로직 흐름은 블록 5916으로 진행할 수 있고, 입력 데이터가 수용 가능한 것으로 평가되면, 로직 흐름은 블록 5918로 진행할 수 있다. 블록 5916 \"입력 데이터 증강\"에서, 입력 데이터가 증강될 수 있다. 예를 들어, 입력 데이터는 증강된 입력 데이터를 생성하도록 수정될 수 있다. 많은 예들에서, 로직 흐름이 블록 5916을 통과할 때마 다 입력 데이터에 상이한 증강이 적용될 수 있다. 로직 흐름은 이어서 블록 5912로 복귀하여 앞서 설명 한 바와 같이 반복될 수 있다. 그러나, 입력 데이터가 수용 가능한 것으로 평가되고 로직 흐름이 블록 5918로 진행하는 경우, 분류 데이터가 출력 데이터로서 제공될 수 있다. 예를 들어, 증강된 분류 데이터(582 9)는 출력 데이터로서 제공될 수 있다. 일부 예들에서, 입력 데이터, 분류 데이터, 및 증강 된 입력 데이터 중 하나 이상이 증강된 분류 데이터에 부가하여, 또는 대안으로 출력 데이터(582 6)로서 제공될 수 있다. 블록 5918로부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들을 수신하는 것 에 기초하여 반복될 수 있다. 도 60은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 입력 데이터를 분할 및/또는 증대시키고 투표를 사용하여 입력 데이터 품질(예를 들어, 입력 데이터가 추론 모 델에 의해 분류되는 정확도 또는 신뢰도)을 개선시키기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 강화된 시스템이 입력 데이터를 수신할 수 있는 블록 6010 \"입력 데이터 수신\" 에서 시작할 수 있다. 예를 들어, 입력 데이터는 인터페이스를 통해 입력 디바이스로부터 수신될 수 있다. 일부 예들에서, 입력 데이터는 블록 6012 이전에 전처리될 수 있다. 블록 6012 \"입력 데이터에 기초하여 증강된 입력 데이터의 세트를 생성- 세트 내의 각각의 증강된 입력 데이터는 상이하게 증강 됨 -\"으로 진행하여, 증강된 입력 데이터의 세트가 생성된다. 일부 예들에서, 증강된 입력 데이터의 세트는 증 강된 데이터(5825-1, 5825-2, 5825-N)를 포함할 수 있다. 예를 들어, 증강된 입력 데이터의 세트는 다양한 증 강들(예를 들어, 감마의 변경, 픽셀 시프트, 노이즈-제거, 에러 정정 등)의 결과들을 포함할 수 있다. 블록 6014 \"세트 내의 각각의 증강된 입력 데이터를 하나 이상의 추론 모델로 분류\"로 진행하여, 다양한 증강들 각각이 하나 이상의 추론 모델로 분류될 수 있다. 예를 들어, 입력 데이터의 각각의 증강된 버전은 추론 모델 들(5822-1, 5822-2, 5822-n) 중 하나 이상에 의해 분류될 수 있다. 판정 블록 6016 \"상이한 증강된 입력 데이 터의 분류에 기초한 투표를 통해 수용 가능한 입력 데이터가 식별되었는가?\"로 계속하여, 입력 데이터(또는 그 의 하나 이상의 증강)가 상이한 증강된 입력 데이터의 분류들에 기초한 투표를 통해 수용 가능한지가 결정될 수 있다. 판정 블록 6016이 예라고 평가하면, 로직 흐름은 블록 6020으로 처리할 수 있고, 판정 블록 6016 이 아니오라고 평가하면, 로직 흐름은 블록 6018로 처리할 수 있다. 블록 6018 \"입력 데이터에 대한 새로운 증강들의 세트를 식별\"에서, 입력 데이터에 대한 새로운 증강들의 세트 가 식별될 수 있다. 예를 들어, 증강된 입력 데이터는 입력 데이터에 대한 새로운 증강 세트로 업 데이트될 수 있다. 블록 6018 이후에, 로직 흐름은 블록 6012로 복귀하여, 앞서 설명한 바와 같이 새로 운 증강 세트로 반복할 수 있다. 블록 6016이 예라고 평가할 때를 다시 참조하면, 로직 흐름은 블록 6020으로 계속될 수 있다. 블록 6020 \"출력 데이터로서 최고 신뢰도 점수를 갖는 분류 데이터 제공\"에서, 최고 신뢰도 점수를 갖는 분류가 출력 데이터로서 제공될 수 있다. 일부 예들에서, 이는 추가적으로 또는 대안적으 로 투표에 기초하여 결정될 수 있다. 블록 6020으로부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들 을 수신하는 것에 기초하여 반복될 수 있다. 도 61은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 입력 데이터를 분할 및/또는 증대시키고 투표를 사용하여 이상들을 검출하며 경보를 생성하고 및/또는 적대자들 을 필터링 제거하기 위해 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 6110 \"입력 데이터 수신\"에서 시작할 수 있고, 강화된 시스템이 입력 데이터 를 수신할 수 있다. 예를 들어, 입력 데이터는 인터페이스를 통해 입력 디바이스로부터 수신될 수 있다. 일부 예들에서, 입력 데이터는 블록 512 이전에 전처리될 수 있다. 블록 6112 \"입 력 데이터에 기초하여 증강된 입력 데이터의 세트를 생성- 세트 내의 각각의 증강된 입력 데이터는 상이하게 증 강됨 -\"으로 진행하여, 증강된 입력 데이터의 세트가 생성된다. 일부 예들에서, 증강된 입력 데이터의 세트는 증강된 데이터(5825-1, 5825-2, 5825-N)를 포함할 수 있다. 예를 들어, 증강된 입력 데이터의 세트는 다양한 증강들(예를 들어, 감마의 변경, 픽셀 시프트, 노이즈-제거, 에러 정정 등)의 결과들을 포함할 수 있다. 블록 6114 \"세트 내의 각각의 증강된 입력 데이터를 하나 이상의 추론 모델로 분류\"로 진행하여, 다양한 증강들 각각이 하나 이상의 추론 모델로 분류될 수 있다. 예를 들어, 입력 데이터의 각각의 증강된 버전은 추론 모델 들(5822-1, 5822-2, 5822-n) 중 하나 이상에 의해 분류될 수 있다. 판정 블록 6116 \"입력 데이터의 상이한 증 강들의 분류들에 기초한 투표를 통해 이상이 검출되었는가?\"로 계속하여, 상이한 증강된 입력 데이터의 분류들 에 기초한 투표를 사용하여 이상들을 검출할 수 있다. 판정 블록 6116이 예라고 평가하면, 로직 흐름은 블록 6120으로 처리할 수 있고, 판정 블록 6116이 아니오라고 평가하면, 로직 흐름은 블록 6118로 처리할 수 있다. 블록 6118 \"출력 데이터로서 최고 신뢰도 점수를 갖는 분류 데이터 제공\"에서, 최고 신뢰도 점수를 갖는 분류가 출력 데이터로서 제공될 수 있다. 일부 예들에서, 이는 추가적으로 또는 대안적으로 투표에 기초하여 결정될 수 있다. 블록 6116이 예라고 평가할 때를 다시 참조하면, 로직 흐름은 블록 6120으로 계속될 수 있다. 블록 6120 \"이상을 필터링 및/또는 경보를 생성\"에서, 경보 및/또는 필터는 이상의 검출들에 응답하여 구현될 수도 있다. 예를 들어, 경보는 예외의 생성을 포함할 수 있다. 블록 6120으로부터, 로직 흐름은 종료될 수 있거나, 새로운 입력들을 수신하는 것에 기초하여 반복될 수 있다. 암호화된 모델에 대한 활성화 함수 현용의 추론 시스템의 한 가지 문제는 AI 네트워크 내의 노드의 활성화가 비효율적일 수 있다는 것이다. 따라 서, 본 개시내용은 추론 시간 동안 입력 데이터에 대해 계산이 행해질 것을 요구하지 않고 효율적인 활성화를 가능하게 하여, 데이터 애그노스틱 시스템으로 이어지는 추론 시스템을 제공한다. 데이터 애그노스틱 시스템은 호모모픽 암호화와 함께 사용될 수 있다. 다양한 예들에서, 호모모픽 암호화는 암호문들에 대한 계산을 허용하 여, 암호화된 결과를 생성하는 암호화의 형태를 포함할 수 있고, 암호화된 결과는, 복호화될 때, 연산들이 평문 에 대해 수행되는 것처럼 동작들의 결과와 매칭된다. 전형적으로, 호모모픽 암호화는 다항식 계산들을 지원한 다. 따라서, 공통 활성화 함수들(예를 들어, ReLU, TanH, Sigmoid, Softmax)은 그대로 사용될 수 없다. 따라 서, 근사치들(예를 들어, 테일러 급수(Taylor series), 체비셰프(Chebyshev))이 호모모픽적으로 암호화된 네트 워크들에서 전형적으로 사용되지만, 이들은 덜 정확하고 런타임 비용이 많이 든다. 많은 예들에서, 본 명세서에 설명된 추론 시스템(예를 들어, 강화된 시스템)은 모델 저장을 위해 무시할 만한 오버헤드를 요구할 수 있는 한편, 일반적인 활성화 함수들에서와 같이 (예를 들어, +/-1% 점수 변화 내에 서) 정확도를 보존한다. 활성화 함수는, 입력 또는 입력들의 세트가 주어지면, 노드 또는 뉴런의 출력을 정의 할 수 있다. 종종, 이 출력은 그 후 다음 노드에 대한 입력으로서 사용되는 등등이고, 솔루션이 발견될 때까지 계속된다. 몇몇 예들에서, 강화된 시스템은 근사화 기반 활성화들보다 몇 자릿수 더 빠르게 실행할 수 있다. 다양한 예들에서, 강화된 시스템은 방법을 이미 훈련된 모델들에 사후 적용할 수 있다. 또한, 방 법은 미세 조정을 요구하지 않을 수 있다. 때때로 효율성을 향상시키기 위해 전용 하드웨어가 포함될 수 있다. 도 62는 본 개시내용에 따라 구현될 수 있는 예시적 강화된 시스템을 예시하고 있다. 강화된 시스템 은 회로, 메모리, 인터페이스, 및 입력 디바이스를 포함한다. 메모리는 입력 데이터, 추론 모델, 출력 특징 맵들, 파라미터들, 활성화 통계, 출력 데 이터, 활성화 행렬들 및 명령어들를 저장한다. 많은 예들에서, 입력 데이터는 훈련 데이터 세트를 포함할 수 있다. 동작 동안, 회로는 새로운 데이터 애그노스틱 활성화에 의존하는 암호화 된 모델들에 대한 전용 활성화 함수를 구현하기 위해 명령어들을 실행할 수 있다. 아래에 더 상세히 설명되는 바와 같이, 회로는 활성화 통계의 수집, 활성화 통계의 분석 및 추론 시간에서의 처리 중 하나 이상을 수행하기 위해 명령어들을 실행할 수 있다. 예를 들어, 먼저, 회 로는 추론 모델(예를 들어, 훈련된 심층 신경망(DNN) 모델) 및 입력 데이터(예를 들어, 샘플 들을 갖는 훈련 데이터 세트)를 취하고 모든 층들에 대한 각각의 출력 특징 맵에 대응하는 빈 활성화 행 렬을 초기화하기 위해 명령어들을 실행할 수 있다. 전형적으로, 입력 데이터 내의 각각의 훈련 샘플은 순방향 전파될 수 있는 반면, 모든 층들에 대한 모든 활성화들은 활성화 맵들을 생성하기 위 해 대응하는 활성화 행렬에 누적된다. 다양한 예에서, 활성화 통계는 완료된 활성화 행렬들및/또는 활성화 맵들을 포함할 수 있다. 그 다음에, 회로는 활성화 통계를 분석하기 위해 명령어를 실행할 수 있다. 일부 예들에서, 통계는 하나 이상의 파라미터에 기초하여 분석될 수 있다. 때때로, 하나 이상의 파라미터는 사용 자에 의해 제공될 수 있다. 종종, 하나 이상의 파라미터는 제1, 제2, 및 제3 파라미터들을 포함할 수 있 다. 제1 파라미터는 해고 활성화들 중 어느 것이 고정되어야 하는지의 퍼센트를 포함할 수 있다. 제2 파라미 터는 해고되어야 하는 뉴런들의 총 퍼센트를 포함할 수 있다. 제3 파라미터는 고정된 제1 파라미터 인덱스들을 취하기 위한 총 상위 활성화들의 백분위수를 포함할 수 있다. 예를 들어, 사용자는 제1 파라미터를 50으로서, 제2 파라미터를 80으로서, 그리고 제3 파라미터를 70으로서 선택할 수 있다. 이러한 예들에서, 이는, 전체적으 로, 뉴런들의 80%가 해고될 것이고; 이들 중 50%가 실행마다 랜덤화된다는 것을 의미한다. 나머지 50%는 미리 고정되고 활성화들의 상위 70%로부터 무작위로 선택된다. 회로는 명령어들을 실행하여 각각의 활 성화 맵을 스캐닝할 수 있고, 상위 활성화 뉴런들로부터 선택된 랜덤 제1 파라미터 퍼센트의 인덱스들의 인덱스들(예를 들어, 가장 활성화된 특징 맵들의 값들)이 저장된다. 런타임에서의 추론을 위해, 회로는 활성화 통계를 분석하기 위해 명령어들을 실행할 수 있다. 추론 시간에서의 실제 활성화 동작은 처리된 층에 대한 대응하는 저장된 위치 맵(예를 들어, 활성화 맵 들)에 있는 모든 뉴런들을 전달하는 것으로 이루어질 수 있다. 나머지(제2 파라미터-제1 파라미터) 활성 화 퍼센트는 요구되는 수의 뉴런을 무작위로 해고함으로써 충족될 수 있다. 이 방법은 효율적인 활성화를 가능 하게 할 수 있지만, 데이터 자체에 대한 추론 시간 동안 계산이 행해지지 않는다(따라서, 데이터 애그노스틱). 또한, 모델 저장을 위해 무시할만한 오버헤드가 필요할 수 있는 반면, 정확도는 보존되며, 근사화 기반 활성화 들보다 수 자릿수 더 빨리 실행될 수 있다. 또한, 이 방법은 이미 훈련된 모델들에 사후 적용될 수 있고 미세 조정을 필요로 하지 않는다. 도 63은 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스들에 의해 실행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 효율적인 추론 시스템에 대한 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 6302에서 시작할 수 있다. 블록 6302 \"추론 모델에서의 각각의 층에 대한 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화\"에서, 추론 모델 내의 각각의 층에 대한 출력 특징 맵에 대응하는 하 나 이상의 행렬이 초기화될 수 있다. 예를 들어, 하나 이상의 출력 특징 맵에 대응하는 하나 이상의 활 성화 행렬이 초기화될 수 있다. 블록 6304 \"데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하여 활성화 통계를 생성\"으로 계속 하여, 데이터 세트 내의 샘플의 활성화가 대응하는 행렬에 누적되어 활성화 통계를 생성할 수 있다. 예를 들어, 각각의 샘플의 각각의 활성화는 활성화 행렬들 내에 누적될 수 있다. 일부 예들에서, 각각의 샘플 은 순방향 전파될 수 있는 반면, 모든 층들에 대한 활성화 맵들 모두가 저장된다. 블록 6306 \"제1, 제2, 및 제3 파라미터들을 결정- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해고되어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라미터는 고정된 활성화들 을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -\"에서, 제1, 제2, 및 제3 파라미터들이 결정될 수 있다. 예를 들어, 파라미터들은 제1, 제2, 및 제3 파라미터들을 포함할 수 있다. 다양한 예들에서, 파 라미터들은 사용자 입력에 기초하여 결정될 수 있다. 블록 6308 \"활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수를 구현\"으 로 계속하여, 활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수가 구현 될 수 있다. 예를 들어, 전용 활성화 함수는 파라미터 및 활성화 통계에 기초하여 구현될 수 있다. 이러한 경우에, 활성화 통계는 활성화 행렬 및/또는 활성화 맵을 포함할 수 있다. 도 64는 로직 흐름을 예시한다. 로직 흐름은 본 명세서에 설명된 하나 이상의 디바이스에 의해 실 행되는 동작들의 일부 또는 전부를 나타낼 수 있다. 예를 들어, 강화된 시스템(또는 그 컴포넌트들)은 효 율적인 추론 시스템에 대한 로직 흐름의 동작들을 수행할 수 있다. 로직 흐름은 블록 6402에서 시작할 수 있다. 블록 6402에서, \"저장된 고정된 활성화들을 로드\"에서, 저 장되어 있는 고정된 활성화들이 로딩될 수 있다. 예를 들어, 활성화 행렬들 및 활성화 맵들 중 하 나 이상 내의 고정된 활성화들이 로딩될 수 있다. 블록 6404 \"구성: 해고할 출력 뉴런들의 고정된 위치 & 퍼센 트\"로 진행하여, 해고할 출력 뉴런의 고정된 위치 및 퍼센트를 포함하는 하나 이상의 구성 파라미터가 결정, 구현 및/또는 구성될 수 있다. 예를 들어, 명령어는, 입력 데이터, 추론 모델, 활성화 통계 , 출력 특징 맵, 파라미터, 출력 데이터, 및 활성화 맵 중 하나 이상에 기초하 여 출력 뉴런의 고정된 위치 및 퍼센트를 결정/구성할 수 있다. 블록 6402를 다시 참조하면, 저장된 고정된 활성화들이 로딩되면, 로직 흐름은 블록 6406으로 진행할 수 있다. 블록 6406 \"고정된 위치들의 뉴런들과 랜덤 퍼센트의 뉴런들을 더하여 해고\"에서, 고정된 위치의 뉴런 그리고 뉴런의 랜덤 퍼센트 또는 랜덤 뉴런의 퍼센트를 해고한다. 예를 들어, 뉴런들의 랜덤 퍼센트는 파라미 터 중 하나 이상에 기초하여 결정될 수 있다. 일부 예들에서, 본 명세서에 설명된 하나 이상의 활성화 함수는 다자간 계산(예를 들어, MPC 방식들 및/또는 호모모픽 암호화 등)으로 암호화된 신경망들에 사용될 수 있다. 모델 보호를 위한 다자간 실행 본 명세서에서 제공되는 바와 같이, 추론 모델들은 예를 들어 클라우드 컴퓨팅 리소스들에 의해, 에지 디바이스 들 등에 의해 분산 환경에서 실행될 수 있다. 이러한 환경들에서의 추론 시스템의 부분들의 실행은 데이터 누 설에 위험들을 도입할 수 있다. 간단한 예로서, 추론 시스템은 개인적 요소(예를 들어, 건강 기록, 금융 정보 등)로 정보를 추론하도록 배열될 수 있다. 적대자들은 분산 환경 내의 플랫폼들 상에서 실행하고 있는 추론 모 델의 하나 이상의 \"슬라이스\"로부터의 입력들 및/또는 출력들이 주어지면 이 개인 정보를 추론할 수 있다. 또 한, 모델의 부분들은 클라우드 및/또는 에지 디바이스들 상에서 실행될 때 추출의 위험이 종종 있다. 본 개시내용은 메인 추론 모델이 적대적 모델들로부터의 피드백에 기초하여 훈련되는, 훈련 동안의 부가 추론 모델들(\"적대적 모델들\" 또는 \"적대자들\"로 언급됨)의 사용을 제공한다. 예를 들어, 각각의 분산 컴퓨팅 플랫 폼(예를 들어, 각각의 모델 슬라이스 등)을 표현하기 위해 적대적 모델이 생성될 수 있다. 적대자들은 다른 적 대자들로부터의 입력들 및 출력들에 액세스할 수 있다. 적대적 모델들은 훈련을 위해 추론 모델의 슬라이스들 에 결합된다. 훈련 동안, 추론 모델은 모델의 각각의 컴포넌트가 결정적인(critical) 것을 보장하기 위해 공동 손실(joint loss)(예를 들어, 분류 손실 등과 같은 일반적인 작업 특정 손실) 및 적대적 손실(adversarial loss)을 적용하여 훈련된다. 즉, 훈련은 모든 모델의 공동 손실에 기초하여 전체 추론 모델(또는 모든 슬라이 스의 조합)을 국소 최소값으로 안내한다. 그러나, 각각의 슬라이스는 적대적 손실을 최소화하도록 훈련된다. 따라서, 슬라이스들은 개별적으로 취해질 때 적대적 손실 훈련으로 인해 덜 정확한 국소 최소값으로 안내된다. 따라서, 일단 훈련되고 나면, 모델 슬라이스들은 데이터 누설 또는 모델 추출의 위험을 감소시키면서 분산 방식 으로 상이한 컴퓨팅 플랫폼들에 의해 실행될 수 있다. 즉, 다자간 적대적 훈련의 결과로서, 모델 슬라이스들 각각은 추론 정확도를 유지하면서 프라이버시 및/또는 보안 특징들을 나타낼 수 있다. 이는 모델 슬라이스들을 실행하는 컴퓨팅 플랫폼들이 서로 I/O 액세스를 갖는 경우에도 사실이다. 달리 말하면, 적대적 훈련은 비밀 공 유자들로서 협력하도록 모델 슬라이스들을 안내하기 위해 사용될 수 있고, 여기서 비밀은 모델 함수(예를 들어, 입력 매핑에 대한 추론 모델 출력)이다. 즉, 비밀은 f(x)→y이고, 여기서 x는 입력 샘플이고 y는 결과(예를 들 어, 분류, 예측, 추론, 생성된 출력 등)이다. 따라서, 각각의 모델 슬라이스는 비밀(예를 들어, f(x)→y)을 확 인하는 데 필수적이다. 그러나, 각각의 모델 슬라이스는 단독으로 사용될 때 비밀(f(x)→y)을 확인하기에는 불 충분하다. 도 65는 클라이언트 디바이스, 및 서버들(6503, 6505 및 6507)을 포함하는 예시적 추론 환경을 예 시한다. 일반적으로, 서버들(6503, 6505, 6507)은 분산 방식으로 추론 모델의 일부를 실행하도록 배열된다. 서버들(6503, 6505 및 6507)은 클라우드 기반(또는 액세스가능한) 컴퓨팅 리소스들, 에지 디바이스들, 구체적으 로 배열된 추론 모델 실행 가속기들 등일 수 있다. 게다가, 3개의 서버(6503, 6505, 6507)가 이 도면에 묘사되 어 있지만, 임의의 수(1, 2, 3, 4, 또는 그 이상)의 서버가 추론 환경에 제공될 수 있다는 것을 이해하여 야 한다. 설명한 바와 같이, 추론 환경의 서버들(6503, 6505 및 6507)은 에지 디바이스들일 수 있다. 일부 예들에서, 추론 환경은 멀티-에지 환경일 수 있고, 여기서 클라이언트 디바이스는 모델 슬라 이스들을 실행하기 위해 \"에지\"(예를 들어, 에지 디바이스들(6503, 6505) 등)에서 유휴 계산력을 이용한다. 클라이언트 디바이스 및 서버들(6503, 6505 및 6507)은 (예를 들어, 인터넷 등을 포함할 수 있는) 네트워 크를 통해 결합될 수 있다. 보다 구체적으로는, 인터페이스들(6530-1, 6530-3, 6530-5 및 6530-7)은 디바이스 들 사이의 통신 또는 데이터의 교환을 용이하게 하기 위해 네트워크에 결합될 수 있다. 클라이언트 디바이스는 회로(6510-1), 메모리(6520-1) 및 인터페이스(6530-1)를 포함한다. 메모리 (6520-1)는 추론 모델, 입력 데이터, 출력 데이터를 저장한다. 추론 모델은 모델 슬라이스들을 포함한다. 일반적으로, 클라이언트 디바이스는 추론 모델의 분산 실행을 조정하 고 제공하도록 동작한다. 서버는 회로(6510-3), 메모리(6520-3) 및 인터페이스(6530-3)를 포함한다. 메모리(6520-3)는 모델 슬라 이스(6522-1) 및 명령어들(6528-3)을 저장한다. 마찬가지로, 서버는 회로(6510-5), 메모리(6520-5) 및 인터페이스(6530-5)를 포함한다. 메모리(6520-5)는 모델 슬라이스(6522-2) 및 명령어들(6528-5)을 저장한다. 추가적으로, 서버는 회로(6510-7), 메모리(6520-7) 및 인터페이스(6530-7)를 포함한다. 메모리(6520- 7)는 모델 슬라이스(6522-3) 및 명령어들(6528-7)을 저장한다. 일반적으로, 서버들(6503, 6505 및 6507)은 추 론 모델의 부분들(예를 들어, 모델 슬라이스들(6523-1, 6523-2, 및 6523-3) 등)에 대한 실행 환경들을 제 공한다. 일반적으로, 서버들(6503, 6505, 6507) 각각은 모델 슬라이스들 중 하나를 분산 방식으로 실행할 수 있다. 예를 들어, 회로(6510-3)는 모델 슬라이스들(6523-1)을 실행하는 명령어들(6528-3)을 실행할 수 있고, 회로(6510-5)는 모델 슬라이스들(6523-2)을 실행하는 명령어들(6528-5)을 실행할 수 있으며, 회로(6510-7)는 모 델 슬라이스들(6523-3)을 실행하는 명령어들(6528-7)을 실행할 수 있다. 앞서 설명한 바와 같이, 본 개시내용은 모델 슬라이스들이, 분산 시스템에서의 각각의 당사자를 대체하는, 적대 적 모델들로 훈련될 수 있다는 것을 제공한다. 도 66은 앞서 설명한 바와 같이 분산 환경에서 보안 실행을 위해 파티셔닝된 추론 모델을 훈련하도록 구현될 수 있는 시스템을 예시한다. 시스템은 회로, 메모리, 및 인터페이스를 포함한다. 메모리는 다수의 부분들, 또는 모델 슬라이스들로 분할된 추론 모델을 저장한다. 예를 들어, 추론 모델은 모델 슬라이스들(6623-1, 6623-2 및 6623-3)을 포함하는 것으로 묘사된다. 일반적으 로, 추론 모델은 분산 컴퓨팅 플랫폼들만큼 많은 부분들(또는 슬라이스들)로 분할될 수 있다. 예를 들어, 도 65의 추론 환경은 모델 부분들, 특히 서버들(6503, 6505, 및 6507)을 실행할 수 있는 세 개의 컴퓨팅 플랫폼들(또는 당사자들)을 묘사한다. 메모리는 또한 각각의 모델 슬라이스에 대한 적대적 모델 을 포함한다. 예를 들어, 이 도면은 적대적 모델(6625-1, 6625-2 및 6625-3)을 묘사하고 있다. 회로는 적대적 훈련 기법을 사용하여 적대적 모델들 및 대체 서브-모델들(도 67 및 도 68 참조)을 사용하 여 모델 슬라이스들을 훈련하기 위해 명령어들을 실행할 수 있다. 도 67은 적대적 훈련을 위해 배열된 적대적 모델들 및 대체 서브-모델들에 결합된, 모델 슬라이스 들(6723-1, 6723-2 및 6723-3)로 분할된 예시적 추론 모델을 예시한다. 일반적으로, 이 도면은 적대적 모델들과 모델 슬라이스들 사이에 1:1 대응이 있는 구현을 묘사한다. 설명한 바와 같이, 훈련은 대응하는 대체 서브-모델로 실행될 때 부정확하거나 덜 정확한 국소 최소값에 개별적으로 도달하도록 모델 슬라이스들 을 안내하도록 동작한다. 훈련 동안, 적대적 모델은 적대적 모델에 대응하지 않는 다른 모 델 슬라이스들에 대한 판독 액세스 및 적대적 모델에 대응하는 대체 서브-모델에 대한 판독 및 기입 액세스를 갖는다. 예를 들어, 적대적 모델(6725-1)은 모델 슬라이스들(6723-2 및 6723-3)에 대한 판독 액세스 및 대체 서브-모델(6725-1)에 대한 판독 및 기입 액세스를 갖는다. 도 68a, 도 68b 및 도 68c는 적대적 훈련을 위해 배열된 적대적 모델들 및 대체 서브-모델들에 결 합된 모델 슬라이스들(6823-1, 6823-2 및 6823-3)로 분할된 예시적 추론 모델을 예시한다. 일반적으로, 이 도면은 적대적 모델들과 모델 슬라이스들 사이에 N:1 대응관계가 있는 구현을 예시한다. 달리 말하면, 이 도면은 적대적 훈련을 위해 단일 모드 슬라이스에 결합된 다수의 적대적 모델을 묘사한다. 도 68a를 더 상세히 살펴보면, 적대적 모델들(6825-11, 6825-12 및 6825-13)과 함께 대응하는 대체 서브-모델들 (6826-11, 6826-12 및 6826-13)이 묘사되어 있다. 적대적 모델들(6825-11, 6825-12 및 6825-13) 뿐만 아니라 대체 서브-모델들(6826-11, 6826-12, 및 6826-13)은 모델 슬라이스(6823-1)에 적대적 훈련을 제공하기 위해 모 델 슬라이스들(6823-2 및 6823-3)에 대한 판독 액세스와 연결된다. 마찬가지로, 도 68b는 적대적 모델들(6825- 21, 6825-22 및 6825-23)을 대응하는 대체 서브-모델들(6826-21, 6826-22 및 6826-23)과 함께 묘사한다. 적대 적 모델들(6825-21, 6825-22 및 6825-23)뿐만 아니라 대체 서브-모델들(6826-21, 6826-22 및 6826-23)은 모델 슬라이스(6823-2)에 적대적 훈련을 제공하기 위해 모델 슬라이스들(6823-1 및 6823-3)에 대한 판독 액세스와 연 결된다. 마지막으로, 도 68c는 적대적 모델들(6825-31, 6825-32, 6825-33)을 대응하는 대체 서브-모델들 (6826-31, 6826-32, 6826-33)과 함께 묘사한다. 적대적 모델들(6825-31, 6825-32 및 6825-33) 뿐만 아니라 대 체 서브-모델들(6826-31, 6826-32, 및 6826-33)은 모델 슬라이스(6823-3)에 적대적 훈련을 제공하기 위해 모델슬라이스들(6823-1 및 6823-2)에 대한 판독 액세스와 연결된다. 예시적 물리적 실시예들 일부 예들은 제조 물품 또는 적어도 하나의 컴퓨터 판독가능 매체를 포함할 수 있다. 컴퓨터 판독가능 매체는 로직을 저장하는 비일시적 저장 매체를 포함할 수 있다. 일부 예들에서, 비일시적 저장 매체는 휘발성 메모리 또는 비휘발성 메모리, 이동식 또는 비이동식 메모리, 소거 가능 또는 소거 불가능 메모리, 기입 가능 또는 재 기입 가능 메모리 등을 포함하는, 전자 데이터를 저장할 수 있는 하나 이상의 타입의 컴퓨터 판독가능 저장 매 체를 포함할 수 있다. 일부 예들에서, 로직은 소프트웨어 컴포넌트들, 프로그램들, 애플리케이션들, 컴퓨터 프 로그램들, 애플리케이션 프로그램들, 시스템 프로그램들, 머신 프로그램들, 운영 체제 소프트웨어, 미들웨어, 펌웨어, 소프트웨어 모듈들, 루틴들, 서브루틴들, 함수들, 메소드들, 프로시저들, 소프트웨어 인터페이스들, API, 명령어 세트들, 컴퓨팅 코드, 컴퓨터 코드, 코드 세그먼트들, 컴퓨터 코드 세그먼트들, 워드들, 값들, 심 볼들, 또는 이들의 임의의 조합과 같은 다양한 소프트웨어 요소들을 포함할 수 있다. 일부 예들에 따르면, 컴퓨터 판독가능 매체는, 기계, 컴퓨팅 디바이스 또는 시스템에 의해 실행될 때, 기계, 컴 퓨팅 디바이스 또는 시스템으로 하여금 설명된 예들에 따른 방법들 및/또는 동작들을 수행하게 하는 명령어들을 저장 또는 유지하는 비일시적 저장 매체를 포함할 수 있다. 명령어들은 소스 코드, 컴파일된 코드, 인터프리트 된 코드, 실행가능 코드, 정적 코드, 동적 코드 등과 같은 임의의 적합한 타입의 코드를 포함할 수 있다. 명령 어들은 기계, 컴퓨팅 디바이스 또는 시스템에 특정 기능을 수행하라고 명령하기 위해, 미리 정의된 컴퓨터 언어, 방식 또는 신택스에 따라 구현될 수 있다. 명령어들은 임의의 적절한 고레벨, 저레벨, 객체 지향, 비주 얼, 컴파일된 및/또는 해석된 프로그래밍 언어를 사용하여 구현될 수 있다. 도 69는 저장 매체를 예시한다. 저장 매체는, 광학, 자기 또는 반도체 저장 매체와 같은, 임의의 비일시적 컴퓨터 판독가능 저장 매체 또는 기계 판독가능 저장 매체를 포함할 수 있다. 다양한 실시예들에서, 저장 매체는 제조 물품을 포함할 수 있다. 일부 실시예들에서, 저장 매체는, 예컨대 200, 300, 500, 700, 1200, 1300, 1600, 1700, 2100, 2500, 2800, 3000, 3200, 3300, 3500, 3700, 3900, 4100, 4300, 4600, 4900, 5100, 5400, 5700, 5900, 6000, 6100, 6300, 또는 6400과 관련하여, 본 명세서에 설명된 기법들, 로직 흐름들 또는 동작들 중 하나 이상을 구현하기 위한 컴퓨터 실행가능 명령어들과 같은 컴퓨터 실행가능 명 령어들을 저장할 수 있다. 추가적으로, 저장 매체는 입력 데이터, 출력 데이터, 추론 모델들, 시험/훈련 데이터 세트들 등을 나타내는 데이터 구조들을 저장할 수 있다. 컴퓨터 판독가능 저장 매체 또는 기계 판독가 능 저장 매체의 예들은 휘발성 메모리 또는 비휘발성 메모리, 이동식 또는 비이동식 메모리, 소거 가능 또는 소 거 불가능 메모리, 기입 가능 또는 재기입 가능 메모리 등을 포함하는, 전자 데이터를 저장할 수 있는 임의의 유형의(tangible) 매체를 포함할 수 있다. 컴퓨터 실행가능 명령어들의 예들은 소스 코드, 컴파일된 코드, 인 터프리트된 코드, 실행가능 코드, 정적 코드, 동적 코드, 객체 지향 코드, 비주얼 코드 등과 같은 임의의 적합 한 타입의 코드를 포함할 수 있다. 실시예들은 이에 관하여 제한되지 않는다. 프로그램 코드를 저장 및/또는 실행하는 데 적절한 강화된 시스템은 시스템 버스를 통해 메모리 요소들에 직접 또는 간접적으로 결합되는 적어도 하나의 프로세서를 포함할 것이다. 메모리 요소들은 프로그램 코드의 실제 실행 동안 이용되는 로컬 메모리, 벌크 스토리지, 및 코드가 실행 동안 벌크 스토리지로부터 검색되어야 하는 횟수를 감소시키기 위해 적어도 일부 프로그램 코드의 일시적 저장을 제공하는 캐시 메모리들을 포함할 수 있다. 용어 \"코드\"는 애플리케이션들, 드라이버들, 프로세스들, 루틴들, 메소드들, 모듈들, 펌웨어, 마이크로 코드, 및 서브프로그램들을 포함하는, 광범위한 소프트웨어 컴포넌트들 및 구성체들을 커버한다. 따라서, \"코 드\"라는 용어는 처리 시스템에 의해 실행될 때 원하는 동작 또는 동작들을 수행하는 명령어들의 임의의 집합을 지칭하는 데 사용될 수 있다. 본 명세서에 설명된 로직 회로, 디바이스들 및 인터페이스들은 하드웨어로 구현되고 하나 이상의 프로세서 상에 서 실행되는 코드로 구현되는 기능들을 수행할 수 있다. 로직 회로는 하나 이상의 로직 기능을 구현하는 하드 웨어 또는 하드웨어 및 코드를 지칭한다. 회로는 하드웨어이며, 하나 이상의 회로를 지칭할 수 있다. 각각의 회로는 특정 기능을 수행할 수 있다. 회로의 회로는 하나 이상의 도체, 집적 회로, 칩 패키지, 칩셋, 메모리 등과 인터커넥트된 개별 전기 컴포넌트들을 포함할 수 있다. 집적 회로들은 실리콘 웨이퍼와 같은 기판 상에 생성된 회로들을 포함하고, 컴포넌트들을 포함할 수 있다. 그리고 집적 회로들, 프로세서 패키지들, 칩 패키지 들, 및 칩셋들은 하나 이상의 프로세서를 포함할 수 있다. 프로세서들은 입력(들)에서 명령어들 및/또는 데이터와 같은 신호들을 수신하고 적어도 하나의 출력을 생성하기 위해 신호들을 처리할 수 있다. 코드를 실행하는 동안, 코드는 프로세서 파이프라인을 구성하는 트랜지스터들의 물리적 상태들 및 특성들을 변경한다. 트랜지스터들의 물리적 상태들은 프로세서 내의 레지스터들에 저장된 1들 및 0들의 로직 비트들로 변환된다. 프로세서는 트랜지스터들의 물리적 상태들을 레지스터들로 전송하고 트 랜지스터들의 물리적 상태들을 다른 저장 매체에 전송할 수 있다. 프로세서는 프로세서의 전체 기능을 수행하도록 구현되는 하나 이상의 하위 기능을 수행하기 위한 회로들을 포 함할 수 있다. 프로세서의 일 예는 적어도 하나의 입력 및 적어도 하나의 출력을 포함하는 상태 기계 또는 주 문형 집적 회로(ASIC) 이다. 상태 기계는 적어도 하나의 입력에 대해 미리 결정된 일련의 직렬 및/또는 병렬 조작들 또는 변환들을 수행함으로써 적어도 하나의 출력을 생성하기 위해 적어도 하나의 입력을 조작할 수 있다. 앞서 설명한 바와 같은 로직은 집적 회로 칩을 위한 설계의 일부일 수 있다. 칩 설계는 그래픽 컴퓨터 프로그 래밍 언어로 생성되고, (디스크, 테이프, 물리적 하드 드라이브, 또는 저장 액세스 네트워크에서와 같은 가상 하드 드라이브와 같은) 컴퓨터 저장 매체 또는 데이터 저장 매체에 저장된다. 설계자가 칩들 또는 칩들을 제조 하는 데 사용되는 포토리소그래픽 마스크들을 제조하지 않는 경우, 설계자는 결과적인 설계를 물리적 수단에 의 해(예를 들어, 설계를 저장하는 저장 매체의 사본을 제공함으로써) 또는 전자적으로(예를 들어, 인터넷을 통해) 이러한 엔티티들로 직접 또는 간접적으로 전송한다. 저장된 설계는 이어서 제조를 위해 적절한 포맷(예를 들어, GDSII)으로 변환된다. 결과적인 집적 회로 칩들은 제조자에 의해 미가공 웨이퍼 형태로(즉, 다수의 패키징되지 않은 칩들을 갖는 단일 웨이퍼로서), 베어 다이로서, 또는 패키징된 형태로 분배될 수 있다. 후자의 경우, 칩은 (마더보드 또는 다른 상위 레벨 캐리어에 부착되는 리드들을 갖는 플라스틱 캐리어와 같은) 단일 칩 패키지 내에 또는 (표면 상호접 속부들 또는 매립 상호접속부들 중 어느 하나 또는 둘 모두를 갖는 세라믹 캐리어와 같은) 멀티칩 패키지 내에 장착된다. 어느 경우든지, 칩은 이어서 (a) 프로세서 보드, 서버 플랫폼, 또는 마더보드와 같은 중간 제품, 또 는 (b) 최종 제품의 일부로서 다른 칩들, 개별 회로 요소들, 및/또는 다른 신호 처리 디바이스들과 통합된다. 도 70은 시스템을 예시한다. 시스템은 분산 컴퓨팅 시스템, 수퍼컴퓨터, 고성능 컴퓨팅 시스템, 컴퓨팅 클러스터, 메인프레임 컴퓨터, 미니컴퓨터, 클라이언트-서버 시스템, 개인용 컴퓨터(PC), 워크스테이션, 서버, 휴대용 컴퓨터, 랩톱 컴퓨터, 태블릿 컴퓨터, PDA(personal digital assistant)와 같은 핸드헬드 디바이 스, 또는 정보를 처리, 디스플레이, 또는 송신하는 다른 디바이스와 같은 다수의 프로세서 코어들을 갖는 컴퓨 터 시스템이다. 유사한 실시예들은, 예를 들어, 휴대용 음악 플레이어 또는 휴대용 비디오 플레이어, 스마트폰 또는 다른 셀룰러 폰, 전화, 디지털 비디오 카메라, 디지털 스틸 카메라, 외부 저장 디바이스 등과 같은 엔터테 인먼트 디바이스들을 포함할 수 있다. 추가 실시예들은 대규모 서버 구성들을 구현한다. 다른 실시예들에서, 시스템은 하나의 코어 또는 하나보다 많은 프로세서를 갖는 단일 프로세서를 가질 수 있다. \"프로세서\" 라는 용어는 단일 코어를 갖는 프로세서 또는 다수의 프로세서 코어를 갖는 프로세서 패키지를 지칭한다는 점에 유의한다. 적어도 하나의 실시예에서, 컴퓨팅 시스템은 본 명세서에 설명된 강화된 시스템, 클라이언트 디바이스들, 서버들, 에지 디바이스들, 또는 다른 컴퓨팅 디바이스들을 나타낸다. 보다 일반적으로, 컴퓨팅 시 스템은 도 1 내지 도 69를 참조하여 본 명세서에 설명되는 모든 로직, 시스템들, 로직 흐름들, 방법들, 장치들, 및 기능을 구현하도록 구성된다. 본 출원에서 사용될 때, 용어 \"시스템\" 및 \"컴포넌트\" 및 \"모듈\"은, 하드웨어, 하드웨어와 소프트웨어의 조합, 소프트웨어, 또는 실행중인 소프트웨어 중 어느 하나인 컴퓨터-관련 엔티티를 지칭하기 위한 것이며, 그 예는 예시적 시스템에 의해 제공된다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 프로세스, 프로세서, 하드 디스크 드라이브, (광 및/또는 자기 저장 매체의) 다수의 저장 드라이브, 객체, 실행 파일, 실행 스레드, 프로그램 및/또는 컴퓨터일 수 있지만, 이에 제한되지 않는다. 예시로서, 서버 상에서 실행되는 애플리케이션 및 서버 양자 모두가 컴포넌트일 수 있다. 하나 이상의 컴포넌트는 프로세스 및/또는 실행 스레드 내에 상주할 수 있고, 컴포넌트는 하나의 컴퓨터 상에 국재화되고/되거나 2개 이상의 컴퓨터 사이에 분산될 수 있다. 또한, 컴포넌트들은 동작들을 조정하기 위해 다양한 타입의 통신 매체에 의해 서로 통신가능하게 결합될 수 있다. 조 정은 정보의 단방향 또는 양방향 교환을 수반할 수 있다. 예를 들어, 컴포넌트들은 통신 매체를 통해 통신되는 신호들의 형태로 정보를 통신할 수 있다. 정보는 다양한 신호 라인들에 할당된 신호들로서 구현될 수 있다. 이러한 할당에서, 각각의 메시지는 신호이다. 그러나, 추가 실시예들은 대안적으로 데이터 메시지들을 이용할 수 있다. 이러한 데이터 메시지들은 다양한 접속들을 통해 전송될 수 있다. 예시적 접속들은 병렬 인터페이스 들, 직렬 인터페이스들, 및 버스 인터페이스들을 포함한다. 이 도면에 도시된 바와 같이, 시스템은 플랫폼 컴포넌트들을 장착하기 위한 마더보드를 포함한다. 마더보드는 UPI(Ultra Path Interconnect), IF(Infinity Fabric) 등과 같은 포인트-투-포인트 인터커넥 트를 통해 결합된 제1 프로세서 및 제2 프로세서를 포함하는 포인트-투-포인트 인터커넥트 플랫폼이다. 다른 실시예들에서, 시스템은 멀티-드롭 버스와 같은 다른 버스 아키텍처일 수 있다. 또한, 프로세서들(7010 및 7030) 각각은 프로세서 코어(들)(7020 및 7040)를 각각 포함하는 다수의 프로세서 코 어들을 갖는 프로세서 패키지들일 수 있다. 시스템은 2-소켓(2S) 플랫폼의 예이지만, 다른 실시예들은 2 개보다 많은 소켓 또는 하나의 소켓을 포함할 수 있다. 예를 들어, 일부 실시예들은 4-소켓(4S) 플랫폼 또는 8-소켓(8S) 플랫폼을 포함할 수 있다. 각각의 소켓은 프로세서를 위한 마운트이고 소켓 식별자를 가질 수 있다. 플랫폼이라는 용어는 프로세서들 및 칩셋과 같은 특정 컴포넌트들이 장착된 마더보드를 지 칭한다는 점에 유의한다. 일부 플랫폼들은 추가적인 컴포넌트들을 포함할 수 있고, 일부 플랫폼들은 프로세서 들 및/또는 칩셋을 탑재하기 위한 소켓들을 포함할 수 있다. 프로세서들(7010, 7020)은 Intel® Celeron®, Core®, Core Duo®, Itanium®, Pentium®, Xeon®, 및 XScale® 프로세서들(이들로 제한되지 않음); AMD® Athlon®, Duron® 및 Opteron® 프로세서들; ARM® 애플 리케이션, 임베디드 및 보안 프로세서들; IBM® 및 Motorola® DragonBall® 및 PowerPC® 프로세서들; IBM 및 Sony® 셀 프로세서들; 및 유사한 프로세서들을 비롯한 다양한 상업적으로 이용가능한 프로세서들 중 임의의 것 일 수 있다. 듀얼 마이크로프로세서들, 멀티-코어 프로세서들, 및 다른 멀티 프로세서 아키텍처들이 또한 프로 세서들(7010, 7020)로서 이용될 수 있다. 일반적으로, 프로세서(7010 및/또는 7020)는, 예를 들어, 도 1 내지 도 68에 관련하여 예시되고 설명된 회로 등의, 여기서 설명된 임의의 회로에 대응할 수 있다. 제1 프로세서는 IMC(integrated memory controller) 및 P-P(point-to-point) 인터페이스들(7018 및 7052)을 포함한다. 유사하게, 제2 프로세서는 IMC 및 P-P 인터페이스들(7038 및 7054)을 포함 한다. IMC들(7014 및 7034)은 프로세서들(7010 및 7030)을, 각각, 각각의 메모리들, 메모리 및 메모리 에 결합시킨다. 일반적으로, 프로세서들(7010 및/또는 7020)은, 예를 들어, 도 1 내지 도 68과 관련하여 예시되고 설명된 메모리와 같은, 본 명세서에서 설명된 메모리들 중 임의의 것에 대응할 수 있다. 메모리들 (7012 및 7032)은 더블 데이터 레이트 타입 3(DDR3) 또는 타입 4(DDR4) 동기식 DRAM(SDRAM)과 같은 플랫폼에 대한 메인 메모리(예를 들어, 동적 랜덤 액세스 메모리(DRAM))의 부분들일 수 있다. 본 실시예에서, 메모리들 (7012 및 7032)은 각각의 프로세서들(7010 및 7030)에 로컬로 부착된다. 다른 실시예들에서, 메인 메모리는 버 스 및 공유 메모리 허브를 통해 프로세서들과 결합될 수 있다. 프로세서들(7010 및 7030)은 프로세서 코어(들)(7020 및 7040) 각각과 각각 결합된 캐시들을 포함한다. 본 실 시예에서, 프로세서의 프로세서 코어(들) 및 프로세서의 프로세서 코어(들)는 앞서 설 명한 회로(예를 들어, 도 1 내지 도 69를 참조하여 설명된 회로 N10)를 포함한다. 즉, 기능성은 또한 프로세서 내의 회로로서 전체적으로 또는 부분적으로 상주할 수 있고, 예를 들어, 프로세서들(7010, 7030) 내의 레지스터들과 같은 레지스터들 또는 버퍼들 내에서, 또는 프로세서들(7010, 7030)의 명령어 파이프라인 내에서 동작들을 수행할 수 있다. 프로세서 코어(들)(7020 및 7040)는 프로세서 내의 회로와, 캐시, 메모리, 버퍼들, 레지스터들, 및/또는 이와 유사한 것과 같은 메모리에 앞서 설명한 회로, 로직, 또는 기법들의 기능의 전부 또는 일부를 저장하는 매 체의 조합을 나타낼 수 있다. 몇몇 실시예들에서, 그 기능성은 칩셋을 통해 프로세서들(7010, 7030)에 부착된 저장 매체와 같은 메모리 내의 코드로서 전체적으로 또는 부분적으로 상주한다. 추가적으로, 기능 성은 메모리(7012 및/또는 7032)(예를 들어, 도 1 내지 도 69를 참조하여 설명된 메모리(N20))와 같은 메모리에 전체적으로 또는 부분적으로 상주할 수도 있다. 설명한 바와 같이, 프로세서들(7010 및 7030) 중 둘 이상은 인터페이스(I/F)를 통해 칩셋과 결합된 하드웨어(예를 들어, 가속기 등)로 설명된 기능성을 포함할 수 있다. I/F는, 예를 들어, PCI- e(Peripheral Component Interconnect-enhanced)일 수 있다. 제1 프로세서는 P-P 인터커넥트들(7052 및 7062)을 통해 칩셋에 결합되고 제2 프로세서는 P-P 인터커넥트들(7054 및 7064)을 통해 칩셋에 결합된다. DMI들(Direct Media Interfaces)(7057 및 7058)은 P-P 인터커넥트들(7052 및 7062) 및 P-P 인터커넥트들(7054 및 7064)을 각각 연결할 수 있다. DMI는 예를 들어 DMI 3.0과 같은 초당 8 기가 전송(GT/s)을 용이하게 하는 고속 인터커넥트일 수 있다. 다른 실시예 들에서, 프로세서들(7010 및 7030)은 버스를 통해 인터커넥트될 수 있다. 칩셋은 플랫폼 제어기 허브(PCH)와 같은 제어기 허브를 포함할 수 있다. 칩셋은 클로킹 기능들을 수행하는 시스템 클록을 포함할 수 있고, 플랫폼 상의 주변 디바이스들의 접속을 용이하게 하기 위해,USB(universal serial bus), PCI(peripheral component interconnect), SPI(serial peripheral interconnect), I2C(integrated interconnect) 등과 같은 I/O 버스를 위한 인터페이스들을 포함할 수 있다. 다른 실시예들에서, 칩셋은 메모리 제어기 허브, 그래픽 제어기 허브, 및 입력/출력(I/O) 제어기 허브를 갖는 칩셋과 같은 하나보다 많은 제어기 허브를 포함할 수 있다. 본 실시예에서, 칩셋은 인터페이스(I/F)를 통해 신뢰 플랫폼 모듈(TPM) 및 UEFI, BIOS, 플 래시 컴포넌트와 결합된다. TPM은 암호 키들을 디바이스들에 통합함으로써 하드웨어를 보안화하도 록 설계된 전용 마이크로컨트롤러이다. UEFI, BIOS, 플래시 컴포넌트는 사전 부팅 코드를 제공할 수 있 다. 또한, 칩셋은 칩셋을 고성능 그래픽 엔진인 그래픽 카드와 결합하는 I/F를 포함한다. 다른 실시예들에서, 시스템은 프로세서들(7010, 7030)과 칩셋 사이에 플렉시블 디스플레이 인터페 이스(FDI)를 포함할 수 있다. FDI는 프로세서 내의 그래픽 프로세서 코어를 칩셋과 인터커넥트한다. 버스를 제2 버스에 결합하는 버스 브리지 및 버스를 칩셋과 접속하는 I/F와 함께, 다양한 I/O 디바이스들이 버스에 결합된다. 일 실시예에서, 제2 버스는 LPC(low pin count) 버스일 수 있다. 예를 들어, 키보드, 마우스, 통신 디바이스들, 및 본 명세서에서 이전에 설명된 바와 같은 컴퓨터 실행가능 코드를 저장할 수 있는 저장 매체를 포함하는 다양 한 디바이스들이 제2 버스에 결합될 수 있다. 또한, 오디오 I/O가 제2 버스에 연결될 수 있 다. I/O 디바이스들, 통신 디바이스들, 및 저장 매체 중 다수는 마더보드 상에 상주 할 수 있는 반면, 키보드 및 마우스는 애드-온 주변기기들일 수 있다. 다른 실시예들에서, I/O 디 바이스들, 통신 디바이스들, 및 저장 매체의 일부 또는 전부는 애드-온 주변기기들이고 마더 보드 상에 상주하지 않는다. 일반적으로, 오디오 디바이스 및/또는 I/O 디바이스는, 예를 들어, 도 1 내지 도 68에 관련하여 예시되고 설명된 입력 디바이스, 출력 디바이스(또는 이와 유사한 것) 등의, 여기서 설명된 입력 및/또는 출력 디바이스들 중 임의의 것에 대응할 수 있다. 도 71은 시스템을 예시한다. 시스템은, 예를 들어, 추론 모델들을 훈련하고, 추론 모델들로부터 출력을 생성하는 것 등과 같은, 본 명세서에 설명된 바와 같은 다양한 작업부하들을 처리하도록 구현될 수 있는 컴퓨터 시스템이다. 이 도면의 처리 리소스들은 앞서 설명한 강화된 시스템들, 추론 환경들 등 중 임의의 것에 의해 사용될 수 있다. 시스템은 에지 디바이스들, 데이터센터 또는 클라우드 서비스들, 노 드들, 및 네트워크를 포함한다. 노드들은 처리 리소스들 및/또는 입력 리소스들을 갖는 시스템의 임의의 컴포넌트 또는 디바이스를 포함할 수 있다. 이들 컴포넌트들은 앞서 설명된 것들(예를 들어, 시스템, 시스템 등)과 유사한 특 징들을 포함할 수 있다. 예를 들어, 노드들은 추론 모델 작업부하들(예를 들어, 데이터 센터 내의 기계 학습 가속기들)을 처리하도록 배열된 처리 리소스들로 구현된 데이터센터들 및/또는 클라우드 서비스들, 처리 리소스들로 구현된 에지 디바이스들(예를 들어, 최종 사용자 디바이스들, 사물 인터넷(IoT) 디바이스들, 게이트웨이들) 등을 포함할 수 있다. 다른 예로서, 노드들은 추론 모델들에 대 한 입력을 생성하도록 배열된 컴포넌트들(예를 들어, 카메라, 센서 등)로 구현된 에지 디바이스들을 포함 할 수 있다. 시스템의 이러한 다양한 컴포넌트들이 아래에 더 설명된다. 에지 디바이스들은 통신 시스템(예를 들어, 시스템, 네트워크 등)의 \"에지\" 근방에 배치되거 나 연결된 임의의 장비 및/또는 디바이스들을 포함할 수 있다. 에지 디바이스는, 네트워크 같은 하나 이상의 네트워크 및/또는 통신 프로토콜을 통해 서로 및/또는 다른 원격 네트워크 및 서비스(예를 들어, 데이터센터 및/또는 클라우드 서비스)와 통신할 수 있다. 일부 실시예들에서, 특정 에지 디바이스들 은 본 개시내용 전반에 걸쳐 설명된 처리 리소스들을 포함할 수 있고, 따라서 노드들로서 사용될 수 있다. 예시된 실시예에서, 에지 디바이스들은, 디바이스들 중에서도 특히, 최종 사용자 디바이스들 (예를 들어, 데스크톱들, 랩톱들, 모바일 디바이스들), IoT 디바이스들, 및 게이트웨이들, 라우터 들, 스위치들, 및/또는 허브들을 포함한다. 최종 사용자 디바이스들은, 예들 중에서도 특히, 예를 들어, 데스크톱 컴퓨터들, 랩톱들, 태블릿들, 모바 일 폰들 및 다른 모바일 디바이스들, 그리고 웨어러블 디바이스들(예를 들어, 스마트 시계들, 스마트 안경들, 헤드셋들)을 비롯한, 컴퓨팅 시스템과의 사용자 상호작용을 가능하게 하거나 용이하게 하는 임의의 디바 이스를 포함할 수 있다.IoT 디바이스들은 IoT 시스템 또는 네트워크와 통신할 수 있고 그리고/또는 그에 참여할 수 있는 임의의 디바이스를 포함할 수 있다. IoT 시스템들은 특정 애플리케이션 또는 사용 사례에 대해 연동하는 다수의 상이 한 디바이스들(예를 들어, IoT 디바이스들)로 이루어진 새로운 또는 개선된 애드혹 시스템들 및 네트워크 들을 지칭할 수 있다. 이러한 애드혹 시스템들은 점점 더 많은 제품들 및 장비가 진화하여 \"스마트\"해짐에 따 라 등장하고 있으며, 이는 이들이 컴퓨터 프로세서들에 의해 제어 또는 모니터링되고, 다른 디바이스들과 통신 할 수 있다는 것을 의미한다. 예를 들어, IoT 디바이스는, 데이터센터 및/또는 클라우드 서비스들 및/또는 다른 에지 디바이스들과 같은, 시스템의 다른 컴포넌트들과의 연동을 가능하게 해주기 위 해 컴퓨터 프로세서 및/또는 통신 인터페이스를 포함할 수 있다. IoT 디바이스들은 근본적으로 IoT 능력 들을 갖고 개발되는 \"그린필드\" 디바이스들, 또는 IoT 능력들을 IoT 능력들 없이 초기에 개발된 기존의 레거시 디바이스들에 통합함으로써 생성되는 \"브라운필드\" 디바이스들일 수 있다. 예를 들어, 일부 경우에, IoT 디바 이스는, 장비, 장난감, 도구, 차량, 생물(예를 들어, 식물, 동물, 인간) 등의 \"사물\"에 통합되거나 부착 된 센서 및 통신 모듈로부터 구축될 수 있다. 대안적으로 또는 추가적으로, 특정 IoT 디바이스들은 시스 템의 다양한 컴포넌트들과 통신하기 위해, 에지 게이트웨이들 또는 라우터들과 같은, 중간 컴포넌 트들에 의존할 수 있다. IoT 디바이스들은 그들의 환경의 특성들과 연관된 센서 데이터 및 신호들을 모니터링, 검출, 측정, 및 생 성하기 위한 다양한 타입들의 센서들을 포함할 수 있다. 예를 들어, 주어진 센서는, 예들 중에서도 특히, 모션, 무게, 물리적 접촉, 온도, 바람, 잡음, 광, 위치, 습도, 방사선, 액체, 특정 화학 화합물, 배터리 수명, 무선 신호, 컴퓨터 통신, 및 대역폭과 같은, 하나 이상의 각각의 특성을 검출하도록 구성될 수 있다. 센서들은 물리적 센서들(예를 들어, 물리적 모니터링 컴포넌트들) 및 가상 센서들(예를 들어, 소프트웨어 기반 모니터링 컴포넌트들)을 포함할 수 있다. IoT 디바이스들은 또한 그 각각의 환경들에서 다양한 액션들을 수행하기 위한 액추에이터들을 포함할 수 있다. 예를 들어, 액추에이터는, 다른 예들 중에서도, 보안 시스템(예를 들어, 알람, 카메라, 자물쇠들) 또는 가정용 기기(예를 들어, 오디오 시스템, 조명, HVAC 기기들, 차고 도어들)의 전 력 또는 동작을 토글링하는 것과 같은 특정 기능성을 선택적으로 활성화시키기 위해 사용될 수 있다. 실제로, 본 개시내용은 IoT 디바이스들 및 연관된 센서들/액추에이터들의 잠재적으로 무한한 유니버스의 사용을 고려한다. IoT 디바이스들은, 예를 들어, 무엇보다도, 운송(예를 들어, 자동차, 항공사), 산업 제조, 에너지(예를 들어, 발전소), 통신(예를 들어, 인터넷, 셀룰러, 및 텔레비전 서비스 제공자), 의료(예를 들어, 헬스케어, 의약품), 식품 처리, 및/또는 소매 산업을 비롯한, 임의의 타입의 시스템 및/또는 산업 과 연관된 임의의 타입의 장비 및/또는 디바이스들을 포함할 수 있다. 운송 산업에서, 예를 들어, IoT 디바이 스들은, 내비게이션 시스템들, 자율 비행 또는 주행 시스템들, 트래픽 센서들 및 제어기들, 및/또는 센서 들(예를 들어, 엔진들)에 의해 모니터링되는 임의의 내부 기계적 또는 전기적 컴포넌트들과 같은, 항공기들, 자 동차들, 또는 선박들과 연관된 장비 및 디바이스들을 포함할 수 있다. IoT 디바이스들은 또한, 예들 중 에서도 특히, 산업 제조 및 생산, 선적(예를 들어, 화물 추적), 통신 네트워크들(예를 들어, 게이트웨이들, 라 우터들, 서버들, 셀룰러 타워들), 서버 팜들, 발전소들, 풍력 발전소들, 오일 및 가스 파이프라인들, 물 처리 및 분배, 폐수 수집 및 처리, 그리고 기상 모니터링(예를 들어, 온도, 바람, 및 습도 센서들)과 연관된 장비, 디바이스들, 및/또는 인프라구조를 포함할 수 있다. IoT 디바이스들은 또한, 예들 중에서도 특히, 예를 들어, 스마트 엔터테인먼트 시스템들(예를 들어, 텔레비전들, 오디오 시스템들, 비디오게임 시스템들), 스마트 가정용 또는 사무실 기기들(예를 들어, HVAC(heat-ventilation-air-conditioning) 기기들, 냉장고들, 세탁기들 및 건조기들, 커피 브루어들), 전력 제어 시스템들(예를 들어, 자동 전기, 조명, 및 HVAC 컨트롤들), 보안 시스 템들(예를 들어, 경보기들, 자물쇠들, 카메라들, 모션 검출기들, 지문 스캐너들, 얼굴 인식 시스템들), 및 다른 홈 오토메이션 시스템들과 같은, 임의의 타입의 \"스마트\" 디바이스 또는 시스템을 포함할 수 있다. IoT 디바이 스들은, 건물, 벽, 바닥, 지면, 가로등 기둥, 표지판, 물 타워, 또는 임의의 다른 고정 또는 정적 구조 상에 장착되는 것과 같이, 정적으로 위치될 수 있다. IoT 디바이스들은 또한, 예들 중에서도 특히, 차량 들 또는 항공기들 내의 디바이스들, 드론들, (예를 들어, 화물을 추적하기 위한) 패키지들, 모바일 디바이스들, 및 웨어러블 디바이스들과 같은, 모바일일 수 있다. 또한, IoT 디바이스는 또한 최종 사용자 디바이스들 및 에지 게이트웨이들 및 라우터들을 포함한, 임의의 타입의 에지 디바이스일 수 있다. 에지 게이트웨이들 및/또는 라우터들은 노드들로서 프로비저닝될 수 있다. 추가적으로, 에지 게이 트웨이들 및/또는 라우터들은 에지 디바이스들로의 그리고 그로부터의 통신을 용이하게 하는 데 사 용될 수 있다. 예를 들어, 게이트웨이들은 임의의 이러한 능력들 없이 초기에 개발된 기존의 레거시 디 바이스들(예를 들어, \"브라운필드\" IoT 디바이스들)에 통신 능력들을 제공할 수 있다. 게이트웨이들은또한, 블루투스 또는 ZigBee 통신 능력들을 갖는 IoT 디바이스들과 같은, 단거리, 독점적, 또는 다른 방 식으로 제한된 통신 능력들을 갖는 에지 디바이스들의 지리적 도달 범위를 확장시키는 데 이용될 수 있다. 예를 들어, 게이트웨이들은, IoT 디바이스들에 그들의 네이티브 통신 능력들(예를 들어, 블 루투스, ZigBee)을 사용하여 프론트홀을 제공하는 것, 및 다른 유선 또는 무선 통신 매체(예를 들어, 이더넷, Wi-Fi, 셀룰러)를 사용하여 다른 네트워크들 및/또는 데이터센터 및/또는 클라우드 서비스들에 백 홀을 제공하는 것에 의해, IoT 디바이스들과 원격 네트워크들 또는 서비스들 사이의 중개자들로서 역할할 수 있다. 일부 실시예들에서, 게이트웨이는 전용 게이트웨이 디바이스에 의해, 또는, 다른 IoT 디바이스 , 최종 사용자 디바이스, 또는 다른 타입의 에지 디바이스와 같은, 범용 디바이스에 의해 구 현될 수 있다. 일부 경우들에서, 게이트웨이들은 또한, 데이터센터 및/또는 클라우드 서비스들 및/또는 다른 에지 디바이스들과 같은, 다른 컴포넌트들과 별개로 또는 그와 함께, 특정 네트워크 관리 및/또는 애플리케이 션 기능(예를 들어, IoT 디바이스들에 대한 IoT 관리 및/또는 IoT 애플리케이션 기능)을 구현할 수 있다. 예를 들어, 일부 실시예들에서, 구성 파라미터들 및/또는 애플리케이션 로직이 게이트웨이 디바이스로 푸 시되거나 그로부터 풀링될 수 있어, 게이트웨이의 범위 또는 근접성 내의 IoT 디바이스들(또는 다 른 에지 디바이스들)이 특정의 IoT 애플리케이션 또는 사용 사례를 위해 구성될 수 있게 한다. 데이터센터 및/또는 클라우드 서비스들은 네트워크를 통해 또는 \"클라우드\"에서 원격으로(예를 들어, 데이터센터, 다수의 데이터센터 등에서) 호스팅되는 서비스들을 포함할 수 있다. 일부 실시예에서, 예를 들어, 데이터센터 및/또는 클라우드 서비스는 데이터센터 내의 서버(예를 들어, 애플리케이션 서버, 데이 터베이스 서버, 가속기를 갖춘 서버 등) 상에서 원격으로 호스팅될 수 있다. 데이터센터 및/또는 클라우드 서 비스들은, 예들 중에서도 특히, 데이터 저장, 계산 서비스들(예를 들어, 데이터 분석, 검색, 진단 및 결 함 관리), 보안 서비스들(예를 들어, 감시, 경보, 사용자 인증), 매핑 및 내비게이션, 지오로케이션 서비스들, 네트워크 또는 인프라구조 관리, IoT 애플리케이션 및 관리 서비스들, 지불 처리, 오디오 및 비디오 스트리밍, 메시징, 소셜 네트워킹, 뉴스, 및 날씨를 포함하지만 이들로 제한되지 않는, 에지 디바이스들에 의해 또 는 에지 디바이스들에 대해 이용될 수 있는 임의의 서비스들을 포함할 수 있다. 일부 실시예들에서, 특 정 데이터센터 및/또는 클라우드 서비스들은 본 개시내용 전반에 걸쳐 설명된 행렬 처리 기능성을 포함할 수 있고, 따라서 노드들로서 사용될 수 있다. 네트워크는 컴퓨팅 시스템의 컴포넌트들 사이의 통신을 용이하게 하는 데 사용될 수 있다. 예를 들어, 최종 사용자 디바이스들 및 IoT 디바이스들과 같은, 에지 디바이스들은 서로 통신하고 그리고/또는 하나 이상의 원격 서비스(예를 들어, 데이터센터 및/또는 클라우드 서비스)에 액세스하기 위 해 네트워크를 사용할 수 있다. 네트워크는, 예를 들어, 근거리 네트워크, 광역 네트워크, 공중 네트워크, 인터넷, 셀룰러 네트워크, Wi-Fi 네트워크, 단거리 네트워크(예를 들어, 블루투스 또는 ZigBee), 및/ 또는 임의의 다른 유선 또는 무선 네트워크 또는 통신 매체를 비롯한 임의의 수 또는 타입의 통신 네트워크를 포함할 수 있다. 시스템의 컴퓨팅 디바이스들 중 임의의 것, 전부, 또는 일부는, 특정 운영 체제의 실행을 가상화하도록 적응된 가상 기계들과 함께, Linux 또는 다른 UNIX 기반 운영 체제들, Microsoft Windows, Windows Server, MacOS, Apple iOS, Google 안드로이드, 또는 임의의 커스터마이즈된 및/또는 독점적 운영 체제를 비롯한, 임의 의 운영 체제를 실행하도록 적응될 수 있다. 도 71이 복수의 요소들을 포함하거나 그와 연관되어 있는 것으로 설명되어 있지만, 도 71의 시스템 내에 도시된 요소들 전부가 본 개시내용의 각각의 대안의 구현에서 이용될 수 있는 것은 아니다. 추가적으로, 도 71 의 예들과 관련하여 설명된 요소들 중 하나 이상이 시스템의 외부에 위치될 수 있는 반면, 다른 경우들에 서, 특정 요소들이 다른 설명된 요소들은 물론, 도시된 구현에서 설명되지 않은 다른 요소들 중 하나 이상 내에 또는 그의 일부로서 포함될 수 있다. 또한, 도 71에 도시된 특정 요소들은 다른 컴포넌트들과 조합될 수 있을 뿐만 아니라, 본 명세서에 설명된 목적들에 더하여 대안적인 또는 추가적인 목적들을 위해 사용될 수 있다. 도 72는 데이터센터 네트워크를 통해 인터커넥트된 노드들을 포함하는 시스템을 예시한다. 예를 들어, 도시된 바와 같이, 다수의 노드(7202, 7204, 7206)가 데이터센터 네트워크를 통해 결합될 수 있다. 이러한 노드들은 인스턴스화되고 추론 모델(예를 들어, 신경망 등)의 다수의 층을 병렬화하는 데 사용될 수 있 다. 일 예에서, 각각의 노드는 서버로서 구현될 수 있고, 적어도 하나의 하드웨어 노드, 또는 회로(예를 들어, FPGA, ASIC, 프로세서 등)를 추가로 포함할 수 있다. 따라서, 노드는 회로를 포함할 수 있고, 노드는 회로를 포함할 수 있고, 노드는 회로를 포함할 수 있다. 회로는 광 전송 층 프로토콜 기반 시스템을 통해 인터커넥트될 수 있다. 일 예에서, 회로의 제1 인스턴 스는 전송 링크를 통해 회로의 제1 인스턴스와 결합될 수 있고 회로의 제1 인스턴스는 전송 링크를 통해 회로의 제2 인스턴스와 추가로 결합될 수 있다. 회로의 제1 인스턴스는 전송 링크를 통해 회로의 제1 인스턴스와 결합될 수 있고 회로의 제1 인스턴스는 전송 링크(724 0)를 통해 회로의 제1 인스턴스와 추가로 결합될 수 있다. 유사하게, 회로의 제2 인스턴스는 전송 링크를 통해 회로의 제1 인스턴스와 결합될 수 있고 회로의 제2 인스턴스는 전송 링크(723 8)를 통해 회로의 제2 인스턴스와 추가로 결합될 수 있다. 광 전송 층 프로토콜은 패킷들 또는 다른 이 러한 데이터를 데이터센터 네트워크를 통해 서로 전송하거나 수신하는 능력을 회로에 제공할 수 있다. 회로는 다른 구성들로도 인터커넥트될 수 있다. 예를 들어, 회로의 몇몇 인스턴스들은 다수의 전송 링크 들을 통해 회로의 몇몇 인스턴스들에 결합될 수 있다. 유사하게, 회로의 몇몇 인스턴스들은 전송 링크들을 통해 회로의 몇몇 인스턴스들에 결합될 수 있다. 도 72는 회로를 포함하는 소정 수 및 배열의 노드들을 예시하지만, 더 많거나 더 적은 수의 노드가 상이하게 배열될 수 있다. 도 73은, 데이터센터(예를 들어, 데이터센터) 내의 서버들(예를 들어, 시스템, 시스템 등)의 랙으로서 구현될 수 있는 분산형 노드들을 포함하는 시스템을 예시한다. 이 도면은 특정 방식으로 배열 된 시스템의 특정 수의 컴포넌트들을 예시하지만, 상이하게 배열된 더 많거나 더 적은 수의 컴포넌트들이 있을 수 있다. 서버들 각각은 TOR(top-of-rack) 스위치에 결합될 수 있다. 다른 랙들은, 예시되지는 않았지만, 유사한 구성을 가질 수 있다. 각각의 서버는 적어도 하나의 노드 또는 다수의 노드를 포함할 수 있다. 각각의 노드는 서버 (예를 들어, 서버, 서버, 또는 서버)를 포함할 수 있고, 각각의 서버는 TOR 스위치(예를 들 어, TOR 스위치)에 결합될 수 있다. 서버는, 로컬 링크를 통해 하드웨어 노드, 예컨대, 회 로에 결합될 수 있는, 프로세서 및 프로세서와 같은, 프로세서들을 포함하는 호스트 컴포넌 트를 포함할 수 있다. 각각의 하드웨어 노드는 또한(예를 들어, 데이터센터에 대한 네트워크 인프라구조에 걸 쳐 통신하기 위해 사용되는) 네트워크 인터페이스 제어기에 의해 결합될 수 있다. 시스템은 노드 들이 TOR 스위치 또는 다른 스위치들로부터 수신되는 (및/또는 이에 전송되는) 추론 작업부하들에 대한 처리를 수행할 수 있게 할 수 있다. 이 예시적 시스템을 사용하여, 개별 노드들은 앞서 설명한 바와 같이 추론 모델들 을 훈련하고 및/또는 추론 모델들로부터 추론을 생성하는데 사용될 수 있다. 예를 들어, 추론 모델 작업부하들 의 처리는 시스템 내의 다양한 처리 리소스들(예를 들어, 프로세서들, 회로 등)에 걸쳐 파티셔닝될 수 있 다. 다수의 노드들에 걸친 층들의 분할 또는 다수의 노드들에 걸친 층 내의 신경 가중치들의 분할에 의한 추론 모델 (예를 들어, 신경망 등)의 병렬화. 예로서, 단일 추론 모델(예를 들어, RNN, LSTM 가중치 행렬들 등)은 다수의 노드에 걸쳐 파티셔닝되고 피닝될(pinned) 수 있다. 이 예의 구현에서, RNN 모델은 다수의 회로 각각의 메모리 들(예를 들어, 온-칩 메모리)에 걸쳐 분산될 수 있다. 일부 예들은 \"일 예에서\" 또는 \"예\"라는 표현을 그들의 파생어들과 함께 사용하여 설명될 수 있다. 이 용어들 은 예와 관련하여 설명된 특정 특징, 구조, 또는 특성이 적어도 하나의 예에 포함된다는 것을 의미한다. 본 명 세서의 여러 곳에서 나오는 \"일 예에서\"라는 문구 모두가 꼭 동일한 예를 말하는 것은 아니다. 일부 예들은 \"결합된\" 및 \"연결된\"이라는 표현을 그들의 파생어들과 함께 사용하여 설명될 수 있다. 이들 용어 들은 반드시 서로 동의어로서 의도된 것은 아니다. 예를 들어, 용어 \"연결된\" 및/또는 \"결합된\"을 사용한 설명 은, 2개 이상의 요소가 서로 직접 물리적으로 또는 전기적으로 접촉한다는 것을 나타낼 수 있다. 그러나, 용어 \"결합된\"은 또한 2개 이상의 요소가 서로 직접 접촉하지 않지만, 여전히 서로 협력하거나 상호작용하는 것을 의 미할 수 있다. 또한, 앞서 설명한 상세한 설명에서, 다양한 특징들은 본 개시내용을 간소화하기 위해 단일 예에서 함께 그룹화 된다. 이러한 개시 방법은 청구된 예들이 각각의 청구항에 명시적으로 기재된 것보다 더 많은 특징들을 필요로 한다는 의도를 반영하는 것으로서 해석되지 않아야 한다. 오히려, 이하의 청구항들이 반영하는 바와 같이, 단 일의 개시된 예의 모든 특징들보다 적은 특징들에 본 발명의 요지가 있다. 따라서, 이하의 청구항들은 이로써 상세한 설명에 포함되며, 각각의 청구항은 개별 예로서 독립적이다. 첨부된 청구항들에서, \"포함하는 (including)\" 및 \"여기서(in which)\"라는 용어들은 각각 \"포함하는(comprising)\" 및 \"여기서(wherein)\"라는 각 각의 용어들의 평이한 영어 등가물들로서 사용된다. 또한, 용어들 \"제1\", \"제2\", \"제3\" 등은 단지 라벨로서 사용되고, 그들의 대상들에 수치적 요건들을 부여하는 것을 의도하지 않는다. 발명 요지가 구조적 특징들 및/또는 방법론적 동작들과 관련하여 설명되어 있지만, 첨부된 청구항들에 정의된 발명 요지가 꼭 앞서 설명한 특정의 특징들 또는 동작들로 제한되는 것은 아니라는 것을 이해하여야 한다. 오 히려, 앞서 설명한 특정 특징들 및 동작들은 청구항들을 구현하는 예시적 형태들로서 개시된다. 일부 실시예들은 \"일 실시예\" 또는 \"실시예\"라는 표현을 그들의 파생어들과 함께 사용하여 설명될 수 있다. 이 러한 용어들은 실시예와 관련하여 설명되는 특정 특징, 구조 또는 특성이 적어도 하나의 실시예에 포함된다는 것을 의미한다. 본 명세서의 여러 곳에서 나오는 \"일 실시예에서\"라는 문구 모두가 꼭 동일한 실시예를 말하는 것은 아니다. 또한, 일부 실시예들은 \"결합된\" 및 \"연결된\"이라는 표현을 그들의 파생어들과 함께 사용하여 설 명될 수 있다. 이들 용어들은 반드시 서로 동의어로서 의도된 것은 아니다. 예를 들어, 일부 실시예들은 2개 이상의 요소들이 서로 직접 물리적으로 또는 전기적으로 접촉하는 것을 나타내기 위해 \"연결된\" 및/또는 \"결합 된\"이라는 용어들을 사용하여 설명될 수 있다. 그러나, 용어 \"결합된\"은 또한 2개 이상의 요소가 서로 직접 접 촉하지는 않지만, 여전히 서로 협력하거나 상호작용하는 것을 의미할 수 있다. 또한, 상이한 실시예들로부터의 양태들 또는 요소들이 조합될 수 있다."}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "본 개시내용의 요약서는 독자가 기술적 개시내용의 본질을 신속하게 확인할 수 있게 하기 위해 제공된다는 점이 강조된다. 이는 청구항들의 범위 또는 의미를 해석하거나 제한하기 위해 사용되지 않을 것이라는 이해 하에 제 출된다. 또한, 앞서 설명한 상세한 설명에서, 본 개시내용을 간소화할 목적으로 다양한 특징들이 단일 실시예 에서 함께 그룹화되는 것을 알 수 있다. 이러한 개시 방법은 청구되는 실시예들이 각각의 청구항에 명시적으로 기재된 것보다 더 많은 특징들을 필요로 한다는 의도를 반영하는 것으로서 해석되지 않아야 한다. 오히려, 이 하의 청구항들이 반영하는 바와 같이, 단일의 개시된 실시예의 모든 특징들보다 적은 특징들에 본 발명의 요지 가 있다. 따라서, 이하의 청구항들은 이로써 상세한 설명에 포함되며, 각각의 청구항은 개별 실시예로서 자립 적이다. 첨부된 청구항들에서, \"포함하는(including)\" 및 \"여기서(in which)\"라는 용어들은 각각 \"포함하는 (comprising)\" 및 \"여기서(wherein)\"라는 각각의 용어들의 평이한 영어 등가물들로서 사용된다. 또한, 용어들 \"제1\", \"제2\", \"제3\" 등은 단지 라벨로서 사용되고, 그들의 대상들에 수치적 요건들을 부여하는 것을 의도하지 않는다. 앞서 설명한 것은 개시된 아키텍처의 예들을 포함한다. 물론, 컴포넌트들 및/또는 방법론의 모든 상상 가능한"}
{"patent_id": "10-2021-7016452", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "조합을 설명하는 것은 가능하지 않지만, 본 기술분야의 통상의 기술자는 많은 추가 조합들 및 치환들이 가능하 다는 것을 인식할 수 있다. 따라서, 새로운 아키텍처는 첨부된 청구항들의 사상 및 범위 내에 속하는 모든 이 러한 변경들, 수정들 및 변형들을 포함하는 것을 의도한다. 상세한 개시내용은 이제 추가 실시예들에 관련한 예들을 제공하는 것으로 돌아간다. 아래에 제공된 예들은 제한을 의도하지는 않는다. 예 1. 장치로서, 회로; 및 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로 에 의해 실행될 때 회로로 하여금, 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하고; 생성된 출력에 대한 추론 확률을 결정하고; 추론 확률이 임계값보다 더 큰지를 결정하고; 추론 확률이 임계값보 다 더 크지 않다는 결정에 기초하여 널 출력을 제공하게 한다. 예 2. 장치로서, 회로; 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금, 입력 데이터를 수신하고; 추론 모델을 통해, 수신된 입력 데이터에 기초하여 출 력을 생성하고; 입력 데이터 및 출력 데이터에 부분적으로 기초하여 추론 모델의 사용이 인가되지 않았다는 표 시를 제공하게 한다. 예 3. 장치로서, 회로; 회로에 결합된 인터페이스- 인터페이스는 네트워크에 결합됨 -; 및 회로에 결합된 메모 리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금, 입력 디바이 스로부터 입력 데이터를 수신하고; 인터페이스를 통해, 네트워크에 결합된 서버로부터 무결화 페이로드를 수신 하고- 무결화 페이로드는 무결화 프로토콜의 표시들을 포함함 -; 입력 데이터에 무결화 프로토콜을 적용하는 것 에 부분적으로 기초하여 무결화된 입력 데이터를 생성하고; 인터페이스 및 네트워크를 통해 서버에 무결화된 입 력 데이터를 전송하게 한다. 예 4. 장치로서, 회로; 및 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로 에 의해 실행될 때 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고- 출력 데이터는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -; 출력 데이터가 은닉 클래스의 표시를 포함하는지를 결정하고; 출력 데이터가 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 생성된 출력을 출력 소비자에게 제공하게 한다. 예 5. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로 로 하여금, 키에 부분적으로 기초하여 입력 데이터를 난독화하고; 난독화된 입력 데이터를 사용하여 출력 데이 터를 생성하기 위해 추론 모델을 실행하게 한다. 예 6. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로 로 하여금, 추론의 표시를 포함하는 출력 데이터 및 추론 증강 맵을 생성하기 위해 입력 데이터를 사용 하여 추론 모델을 실행하고; 입력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하고; 입력 영 역 영향 맵에 적어도 기초하여 신뢰성 점수- 신뢰성 점수는 추론의 신뢰성의 표시를 포함함-를 생성하게 한다. 예 7. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로 로 하여금, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련된 추론 모델을 선택하고; 입력 디바이스 특성들에 기초하여 선택된 추론 모델로 입력 디바이스로부터의 입력 데이 터를 분류하게 한다. 예 8. 장치로서, 회로; 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행 하는 것에 부분적으로 기초하여 출력 데이터를 생성하고; 출력 데이터를 필터링하여 스크리닝된 출력 데이터를 생성하게 한다. 예 9. 장치로서, 회로; 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 제1 서버의 능력들을 결정하기 위해 제1 서버에 질의하고; 제1 서버의 능력들에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분할하고; 복수의 모델 슬라이스 중 하나의 표시 및 복수의 모델 슬라이 스 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하기 위한 명령어를 포함하는 정보 요소를 제1 서버에 전송하게 한다. 예 10. 장치로서, 회로; 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 제1 서버에서, 제1 서버의 능력들을 결정하기 위한 질의를 수신하고; 제1 서버에서, 복수의 모델 슬라 이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실 행하라는 명령어를 포함하는 정보 요소를 수신- 추론 모델은 제1 서버의 능력에 부분적으로 기초하여 복수의 모 델 슬라이스들로 분할됨 -하게 한다. 예 11. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로 로 하여금, 입력 데이터를 수신하고; 입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성하고; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로서 평가하고; 분류 데이터가 수용 불가능한 것으로 평가될 때 증강된 입력 데이터를 생성하기 위해 입력 데이터를 수정하고; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강된 입력 데이터를 분류하고; 증강된 분류 데이터에 기초하여 증강된 입력 데이터를 수용 가능한 것으로서 평가하고; 증강된 분류 데이터를 출력 데이터로서 제공하게 한다. 예 12. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로 로 하여금, 추론 모델 내의 각각의 층에 대한 각각의 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화하고; 활성화 통계를 생성하기 위해 데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하고; 제1, 제2, 및 제3 파라미터들을 결정하고- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해고되 어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -; 활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수를 구현하게 한다. 예 13. 장치로서, 회로; 및 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회 로에 의해 실행될 때 회로로 하여금, 추론 모델을 복수의 모델 슬라이스로 분할하고; 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들을 훈련하게 한다. 예 14. 예 1 내지 예 13 중 어느 하나의 장치는, 회로에 결합된 신뢰할 수 있는 실행 환경(TEE)을 포함하고, TEE는 TEE 회로 및 신뢰적 메모리를 포함한다. 예 15. 장치로서, 회로; 회로에 결합된 메모리- 메모리는 명령어들을 저장하고, 명령어들은 회로에 의해 실행 될 때, 회로로 하여금 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하게 함 -; 및 신뢰할 수 있는 실행 환경(TEE)을 포함하고, 신뢰할 수 있는 실행 환경은 회로; 회로에 결합된 신뢰적 메모리를 포 함하고, 신뢰적 메모리는 워터마크 및 TEE 명령어들을 저장하고, TEE 명령어는, 회로에 의해 실행될 때, 회로로 하여금: 입력이 워터마크와 매칭되는지를 결정하고; 입력이 워터마크와 매칭된다는 결정에 기초하여 출력 데이 터를 생성하지 않기 위한 제1 표시를 회로에 전송하게 한다. 예 16. 장치로서, 회로; 명령어들을 저장하는 메모리- 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 장 치와 연관된 고유 신원증명(UUID)을 결정하고; UUID에 부분적으로 기초하여 입력 데이터를 변환하게 함 -; 및 회로를 포함하는 신뢰할 수 있는 실행 환경(TEE)을 포함하며, TEE의 회로는 사전 로드된 UUID 및 변환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성하며, 복원된 입력 데이터는 추론 모델을 통해 출력을 발생시키기 위해 사용된다. 예 17. 예 2 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성 하고; 생성된 출력에 대한 추론 확률을 결정하고; 추론 확률이 임계값보다 더 큰지를 결정하고; 추론 확률이 임 계값보다 더 크지 않다는 결정에 기초하여 널 출력을 제공하게 한다. 예 18. 예 1 또는 예 3 내지 예 16 중 어느 하나의 예의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 수신하고; 추론 모델을 통해, 수신된 입력 데이터에 기초하여 출력을 생성하고; 입력 데이터 및 출력 데이터에 부분적으로 기초하여 추론 모 델의 사용이 인가되지 않았다는 표시를 제공하게 한다. 예 19. 예 1 내지 2 중 어느 하나 또는 예 4 내지 16 중 어느 하나의 장치에 있어서, 회로에 결합된 인터페이 스- 인터페이스는 네트워크에 결합됨 -를 포함하고; 메모리는 명령어들을 추가로 저장하며, 이 명령어들은 회로 에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수신하고; 인터페이스를 통해, 네트워 크에 결합된 서버로부터 무결화 페이로드를 수신하고- 무결화 페이로드는 무결화 프로토콜의 표시들을 포함함 -; 입력 데이터에 무결화 프로토콜을 적용하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하고; 인 터페이스 및 네트워크를 통해 서버에 무결화된 입력 데이터를 전송하게 한다. 예 20. 예 1 내지 3 중 어느 하나 또는 예 5 내지 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추 가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수 신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고- 출력 데이터 는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -; 출력 데이터가 은닉 클래스의 표시를 포함 하는지를 결정하고; 출력 데이터가 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 생성된 출력을 출 력 소비자에게 제공하게 한다. 예 21. 예 1 내지 예 4 중 어느 하나 또는 예 6 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들 을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 키에 부분적으로 기초하여 입력 데 이터를 난독화하고; 난독화된 입력 데이터를 사용하여 출력 데이터를 생성하기 위해 추론 모델을 실행하게 한다. 예 22. 예 1 내지 예 5 중 어느 하나 또는 예 7 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들 을 추가로 저장하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 추론의 표시를 포함하는 출력 데 이터 및 추론 증강 맵을 생성하기 위해 입력 데이터를 사용하여 추론 모델을 실행하고; 입력 데이터 및 추 론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하고; 입력 영역 영향 맵에 적어도 기초하여 신뢰성 점수- 신 뢰성 점수는 추론의 신뢰성의 표시를 포함함-를 생성하게 한다. 예 23. 예 1 내지 6 중 어느 하나 또는 예 8 내지 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추 가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스에 대한 입력 디바이스 특 성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련된 추론 모델을 선택하고; 입력 디바이스 특성들에 기 초하여 선택된 추론 모델로 입력 디바이스로부터의 입력 데이터를 분류하게 한다. 예 24. 예 1 내지 예 7 중 어느 하나 또는 예 9 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들 을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터 를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고; 출력 데 이터를 필터링하여 스크리닝된 출력 데이터를 생성하게 한다. 예 25. 예 1 내지 예 8 중 어느 하나 또는 예 10 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어 들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금, 제1 서버의 능력들을 결정하기 위 해 제1 서버에 질의하고; 제1 서버의 능력들에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분 할하고; 복수의 모델 슬라이스 중 하나의 표시 및 복수의 모델 슬라이스 중 하나의 모델 슬라이스를 분산 방식 으로 제1 서버에서 실행하기 위한 명령어를 포함하는 정보 요소를 제1 서버에 전송하게 한다. 예 26. 예 1 내지 예 9 중 어느 하나 또는 예 11 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어 들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 제1 서버에서, 제1 서버의 능력 들을 결정하기 위한 질의를 수신하고; 제1 서버에서, 복수의 모델 슬라이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하라는 명령어를 포함하는 정보 요소를 수신- 추론 모델은 제1 서버의 능력에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할됨 -하게 한다. 예 27. 예 1 내지 예 10 중 어느 하나 또는 예 12 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어 들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 수신하고; 입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성하고; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로서 평가하고; 분류 데이터가 수용 불가능한 것으로 평가될 때 증강된 입력 데이터를 생성하기 위해 입력 데이터를 수정하고; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강된 입력 데이터 를 분류하고; 증강된 분류 데이터에 기초하여 증강된 입력 데이터를 수용 가능한 것으로서 평가하고; 증강된 분 류 데이터를 출력 데이터로서 제공하게 한다. 예 28. 예 1 내지 예 11 중 어느 하나 또는 예 13 내지 예 16 중 어느 하나의 장치에 있어서, 메모리는 명령어 들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델 내의 각각의 층에 대 한 각각의 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화하고; 활성화 통계를 생성하기 위해 데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하고; 제1, 제2, 및 제3 파라미터들을 결정하고- 제1 파라미 터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해고되어야 하는 추론 모델 내의 노드들의 총 퍼센 트를 포함하고, 제3 파라미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -; 활성 화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수를 구현하게 한다. 예 29. 예 1 내지 12 중 어느 하나 또는 예 14 내지 16 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 추론 모델을 복수의 모델 슬라이스로 분할하고; 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들을 훈련하게 한다. 예 30. 예 14 또는 예 16의 장치로서, TEE 명령어는, TEE 회로에 의해 실행될 때, TEE 회로로 하여금: 입력이 워터마크와 매칭되는지를 결정하고; 입력이 워터마크와 매칭된다는 결정에 기초하여 출력 데이터를 생성하지 않 기 위한 제1 표시를 회로에 전송하게 한다. 예 31. 예 14 내지 예 15 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들 은 회로에 의해 실행될 때, 회로로 하여금, 장치와 연관된 고유 신원증명(UUID) 및 UUID에 부분적으로 기초한 변환 입력 데이터를 결정하게 하고; TEE 명령어는, TEE 회로에 의해 실행될 때, TEE 회로로 하여금: 사전 로드 된 UUID 및 변환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성하게 하며, 복원된 입력 데이 터는 추론 모델을 통해 출력을 발생시키기 위해 사용된다. 예 32. 예 1 내지 예 31 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 수신하고; 입력 데이터를 수신하는 것에 응답하여 출력 을 생성하게 한다. 예 33. 예 1 내지 예 32 중 어느 하나의 장치에 있어서, 메모리는 회로에 의해 실행될 때, 회로로 하여금 추론 확률이 임계값보다 더 크다는 결정에 기초하여 생성된 출력을 출력 디바이스에 제공하게 하는 명령어들을 추가 로 저장한다. 예 34. 예 1 내지 예 33 중 어느 하나의 장치에 있어서, 메모리는 추론 모델을 저장한다. 예 35. 예 1 내지 예 34 중 어느 하나의 장치에 있어서, 추론 모델은 신경망 또는 패턴 분류기 네트워크이다. 예 36. 예 14 내지 예 35 중 어느 하나의 장치에 있어서, 신뢰적 메모리는 회로에 의해 실행될 때, 회로로 하 여금, 입력이 워터마크와 매칭된다는 결정에 기초하여 추론 모델의 디지털 권한 위반의 표시를 제공하기 위한 제2 표시를 회로에 전송하게 하는 TEE 명령어들을 더 저장한다. 예 37. 예 36의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 제2 표시를 수신한 것에 응답하여 추론 모델의 디지털 권한 위반의 표시를 출력 디바이스에 제 공하고; 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하지 않게 한다. 예 38. 예 14 내지 예 37 중 어느 하나의 장치의 장치로서, 신뢰적 메모리는 TEE 명령어들을 추가로 저장하고, TEE 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 입력 데이터를 워터마크와 비트 단위로 비교하고; 비트 단위 비교에 부분적으로 기초하여 입력 데이터가 워터마크와 매칭되는 것으로 결정하게 한다. 예 39. 예 14 내지 예 38 중 어느 하나의 장치에 있어서, 신뢰적 메모리는, 회로에 의해 실행될 때, 회로로 하 여금, 제3 표시를 수신하는 것에 응답하여 출력 데이터를 생성하기 위한 제3 표시를, 회로에, 전송하게 하는 TEE 명령어들을 추가로 저장한다. 예 40. 예 14 내지 예 39 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하게 하는 명령어들을 추가로 저장한다. 예 41. 예 14 내지 예 40 중 어느 하나의 장치에 있어서, 메모리는 추론 모델을 저장한다. 예 42. 예 14 내지 예 41 중 어느 하나의 장치에 있어서, 추론 모델은 신경망이다. 예 43. 예 14 내지 예 42 중 어느 하나의 장치에 있어서, 출력은 복수의 분류들 중 하나의 분류의 표시를 포함 하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금: 입력 데이터에 기초하여 복수의 분류 중 하나가 정확 한지를 결정하고; 입력 데이터에 기초하여 복수의 분류 중 하나가 정확하다는 결정에 부분적으로 기초하여 추론 모델의 사용이 인가되지 않은 것으로 결정하게 한다. 예 44. 예 14 내지 예 43 중 어느 하나의 장치에 있어서, 명령어들은 회로에 의해 실행될 때 회로로 하여금 추 론 모델의 사용이 인가되지 않았다는 결정에 기초하여 출력을 제공하게 한다. 예 45. 예 14 내지 예 44 중 어느 하나의 장치에 있어서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 복수의 입력 데이터를 수신하고; 추론 모델을 통해, 수신된 복수의 입력 데이터 각각에 기초하여 출력을 생성하 고- 복수의 출력 각각은 복수의 분류 중 하나의 분류의 표시를 포함함 -; 복수의 출력 각각에 대해, 복수의 출 력 중 하나에 대응하는 복수의 입력 데이터 중 하나에 기초하여 복수의 분류 중 하나가 정확한지를 결정하고; 복수의 출력 중 하나에 대응하는 복수의 입력 데이터 중 하나에 기초하여 복수의 분류 중 하나가 정확하다는 결 정에 기초하여 카운터를 증분하고; 카운터가 임계 수를 초과한 것에 부분적으로 기초하여 추론 모델의 사용이 인가되지 않은 것으로 결정하게 한다. 예 46. 예 14 내지 예 45 중 어느 하나의 장치에 있어서, 입력 데이터를 캡처하는 입력 디바이스를 포함한다. 예 47. 예 14 내지 예 46 중 어느 하나의 장치에 있어서, 메모리는 추론 모델을 저장하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금 복원된 입력 데이터에 부분적으로 기초하여 출력 데이터를 생성하기 위해 추론 모델을 실행하게 한다. 예 48. 예 14 내지 예 47의 장치로서, TEE는 추론 모델을 저장하고, TEE 회로는 복원된 입력 데이터에 부분적 으로 기초하여 출력 데이터를 생성하기 위해 추론 모델을 실행하도록 배열된다. 예 49. 예 1 내지 예 48 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 서버로부터, 회로의 컴퓨팅 능력들을 보고하기 위한 표시를 포함하는 질의를 수신하고; 회로의 컴퓨팅 능력들의 표시를 포함하는 보고를 서버에 전송하게 한다. 예 50. 예 1 내지 예 49 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 네 트워크를 통해 서버와의 신뢰할 수 있는 연결을 확립하게 하는 명령어들을 추가로 저장한다. 예 51. 예 1 내지 예 50 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 제1 데이터 포맷으로부터 제2 데이터 포맷으로 변환하는 것에 부분적으로 기초하여 디코딩된 입력 데이터를 생성하고; 디코딩된 입력 데이터에 필터를 적용하는 것에 부 분적으로 기초하여 필터링된 입력 데이터를 생성하고; 필터링된 입력 데이터를 제2 데이터 포맷으로부터 제1 데 이터 포맷으로 변환하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하게 한다. 예 52. 예 1 내지 예 51 중 어느 하나의 장치에 있어서, 무결화 페이로드는 제2 데이터 포맷 및 필터의 표시를 포함한다. 예 53. 예 1 내지 예 52 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 더 저장하고, 명령어들은 회로에 의해 실행될 때, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 기초하여, 회로가 모니터링 시스템에 경보를 전송하게 한다. 예 54. 예 1 내지 예 53 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난 독화된 출력- 난독화된 출력은 가시 클래스의 표시를 포함함 -을 생성하고; 출력 데이터가 은닉 클래스의 표시 를 포함한다는 결정에 응답하여, 난독화된 출력을 출력 소비자에게 제공하게 한다. 예 55. 예 1 내지 예 54 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포 렌식 데이터를 수집하며- 포렌식 데이터는 입력 데이터 및 입력 디바이스 중 적어도 하나의 표시를 포함함 -, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 모니터링 시스템에 제공하 게 한다. 예 56. 예 1 내지 예 55 중 어느 하나의 장치에 있어서, 가시 클래스는 복수의 가시 클래스들을 포함하고, 출 력 데이터는 은닉 클래스 또는 복수의 가시 클래스들 중 하나의 클래스의 표시를 포함한다. 예 57. 예 1 내지 예 56 중 어느 하나의 장치에 있어서, 은닉 클래스는 복수의 은닉 클래스들을 포함하고, 출 력 데이터는 복수의 은닉 클래스들 중 하나 또는 복수의 가시 클래스들 중 하나의 표시를 포함한다. 예 58. 예 1 내지 예 57 중 어느 하나의 장치에 있어서, 복수의 은닉 클래스 중 적어도 하나는 블랙리스트화된 입력들에 대응한다. 예 59. 예 1 내지 예 58 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 출 력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하고; 복 수의 가시 클래스들 중 식별된 하나의 가시 클래스의 표시를 포함하도록 난독화된 출력을 생성하게 한다. 예 60. 예 1 내지 예 59 중 어느 하나의 장치에 있어서, 입력 데이터를 캡처하도록 배열된 입력 디바이스를 포 함하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금 입력 디바이스로부터 입력 데이터를 수신하게 한다. 예 61. 예 1 내지 예 60 중 어느 하나의 장치에 있어서, 입력 디바이스를 포함하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금 입력 디바이스로부터 입력 데이터를 수신하게 한다. 예 62. 예 1 내지 예 61 중 어느 하나의 장치에 있어서, 추론 증강 맵은 모델 활성화 맵이다. 예 63. 예 1 내지 예 62 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하게 한다. 예 64. 예 1 내지 예 63 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로가 입력 디바 이스로부터의 입력 디바이스 특성들을 요청하게 하는 명령어들을 저장한다. 예 65. 예 1 내지 예 64 중 어느 하나의 장치에 있어서, 훈련되지 않은 추론 모델들은 피드포워드 신경망 (FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망(DNN), 베이 지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 66. 예 1 내지 예 65 중 어느 하나의 장치에 있어서, 출력 데이터는 복수의 클래스들 중 적어도 하나의 클 래스의 표시를 포함하고, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은, 회로에 의해 실행될 때, 회로 로 하여금, 복수의 클래스 중 적어도 하나가 복수의 클래스의 서브세트에 포함되는지를 결정하고; 출력 데이터 를 필터링하기 위해 복수의 클래스들의 서브세트에 포함된 복수의 클래스들 중 적어도 하나에 대한 표시를 제거 하게 한다. 예 67. 예 1 내지 예 66 중 어느 하나의 장치에 있어서, 회로에 결합된 인터페이스를 포함하고, 인터페이스는 네트워크에 결합되고, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 인터페이스를 통해, 서버로부터 프라 이버시 수준 사양을 수신하게 하는 명령어들을 추가로 저장하고, 프라이버시 수준 사양은 복수의 클래스들의 서 브세트의 표시를 포함한다. 예 68. 예 67의 장치에서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 인터페이스를 통해, 스크리닝된 출력을 서버에 제공하게 하는 명령어들을 추가로 저장한다.예 69. 예 67 내지 예 68 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 서버로부터 질의를 수신하고- 질의는 회로의 스크리닝 능력들을 보고하 기 위한 표시를 포함함 -; 회로의 스크리닝 능력의 표시를 포함하는 보고를 서버에 전송하게 한다. 예 70. 예 67 내지 예 69 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금: 제2 서버의 능력들을 결정하기 위해 제2 서버에 질의하고; 제1 서버 및 제2 서버의 능력에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분할하고; 복수의 모델 슬라이 스 중 또 다른 하나의 표시, 및 복수의 모델 슬라이스 중 다른 하나를 제2 서버에서 분산 방식으로 실행하기 위 한 명령어를 포함하는 정보 요소를 제2 서버에 전송하게 한다. 예 71. 예 67 내지 예 70 중 어느 하나의 장치에 있어서, 제1 서버 및 제2 서버의 능력들은 각각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 72. 예 67 내지 예 71 중 어느 하나의 장치에 있어서, 메모리는 또한, 회로에 의해 실행될 때, 회로로 하여 금, 복수의 모델 슬라이스들 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트들에 기초하여 복수 의 모델 슬라이스들 중 하나를 제1 서버에 할당하게 하는 명령어들을 저장한다. 예 73. 예 1 내지 예 72 중 어느 하나의 장치에 있어서, 추론 모델은 제1 서버의 능력들 및 제2 서버의 능력들 에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할된다. 예 74. 예 1 내지 예 73 중 어느 하나의 장치에 있어서, 제1 서버 및 제2 서버의 능력들은 각각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 75. 예 1 내지 예 74 중 어느 하나의 장치에서, 복수의 모델 슬라이스 중 하나는 복수의 모델 슬라이스 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트에 기초하여 제1 서버에 할당된다. 예 76. 예 1 내지 예 75 중 어느 하나의 장치에 있어서, 분류 데이터는 입력 데이터의 클래스 및 클래스의 정 확도와 연관된 신뢰도 수준을 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로에 의해 실행될 때 회 로로 하여금 신뢰도 수준이 임계값 아래로 떨어질 때 분류 데이터를 수용 불가능한 것으로 평가하고 신뢰도 수 준이 임계값을 초과할 때 분류 데이터를 수용 가능한 것으로 평가하게 한다. 예 77. 예 1 내지 예 76 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 감 마에서의 변경, 픽셀 시프트, 노이즈-제거 및 에러 정정 중 하나 이상으로 입력 데이터를 수정하게 하는 명령어 들을 저장한다. 예 78. 예 1 내지 예 77 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 동 작 이상들을 검출하기 위해 분류 데이터와 증강된 분류 데이터를 비교하게 하는 명령어들을 저장한다. 예 79. 예 1 내지 예 78 중 어느 하나의 장치에 있어서, 입력 데이터는 추론 모델에 의한 분류를 위한 하나 이 상의 샘플들의 데이터 세트를 포함한다. 예 80. 예 1 내지 예 79 중 어느 하나의 장치에 있어서, 데이터 세트 내의 샘플들의 활성화들은 추론 모델의 각각의 층에 대한 활성화 맵들이 저장되는 동안 각각의 샘플을 순방향 전파함으로써 누적된다. 예 81. 예 1 내지 예 80 중 어느 하나의 장치에 있어서, 전용 활성화 함수의 구현은 처리된 층에 대한 대응하 는 행렬에 있는 모든 노드를 전달하는 것을 포함한다. 예 82. 예 1 내지 예 81 중 어느 하나의 장치에 있어서, 활성화 퍼센트는 추론 모델에서 하나 이상의 노드들을 무작위로 해고함으로써 충족된다. 예 83. 예 1 내지 예 82 중 어느 하나에 있어서, 활성화 퍼센트는 제2 파라미터에서 제1 파라미터를 뺀 것과 동일한, 장치. 예 84. 예 1 내지 예 83 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 사 용자로부터 수신된 입력에 기초하여 제1, 제2, 및 제3 파라미터들을 결정하게 하는 명령어들을 저장한다. 예 85. 예 1 내지 예 84 중 어느 하나의 장치에서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 복수의 대체 서브-모델들 및 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들 각각을 훈련시키게 하는 명령어들을 저장한다.예 86. 예 1 내지 예 85 중 어느 하나의 장치에 있어서, 복수의 대체 서브-모델은 복수의 모델 슬라이스들 각 각에 대한 대체 서브-모델을 포함한다. 예 87. 예 1 내지 예 86 중 어느 하나의 장치에서, 복수의 적대적 모델은 복수의 모델 슬라이스 각각에 대한 적대적 모델을 포함한다. 예 88. 예 1 내지 예 87 중 어느 하나의 장치에 있어서, 추론 모델은 피드포워드 신경망(FFNN), 순환 신경망 (RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망(DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 89. 입력 디바이스로서, 캡처된 입력을 나타내는 신호들을 출력하도록 배열된 입력 캡처 회로; 및 신호들을 수정하고 수정된 신호들을 나타내는 난독화된 입력 데이터를 생성하도록 배열되는 입력 난독화 회로를 포함한다. 예 90. 예 80의 입력 디바이스로서, 입력 캡처 회로는 이미지 캡처 센서를 포함하고, 입력 디바이스는: 이미지 캡처 센서에 결합된 렌즈; 및 렌즈를 통해 투과된 광을 난독화하도록 배열된, 렌즈에 결합된 필터를 포함한다. 예 91. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은 컴퓨팅 디바이스의 회로에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하고; 생성된 출력에 대한 추론 확률을 결정하고; 추론 확률이 임계값보다 더 큰지를 결정하고; 추론 확률 이 임계값보다 더 크지 않다는 결정에 기초하여 널 출력을 제공하게 한다. 예 92. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은 컴퓨팅 디바이스에 의해 실 행될 때, 컴퓨팅 디바이스로 하여금: 입력 디바이스로부터 입력 데이터를 수신하고; 인터페이스를 통해, 네트워 크에 결합된 서버로부터 무결화 페이로드를 수신하고- 무결화 페이로드는 무결화 프로토콜의 표시들을 포함함 -; 입력 데이터에 무결화 프로토콜을 적용하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하고; 무 결화된 입력 데이터를 인터페이스 및 네트워크를 통해 서버에 전송하게 한다. 예 93. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분 적으로 기초하여 출력 데이터를 생성하고- 출력 데이터는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -; 출력 데이터가 은닉 클래스의 표시를 포함하는지를 결정하고; 출력 데이터가 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 생성된 출력을 출력 소비자에게 제공하게 한다. 예 94. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 키에 부분적으로 기초하여 입력 데이터를 난독화하고; 난독화된 입력 데이터를 사용하여 출력 데이터를 생성하기 위해 추론 모델을 실행하게 한다. 예 95. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 추론의 표시를 포함하는 출력 데이터 및 추론 증강 맵을 생성하기 위해 입력 데이터를 사용하여 추론 모델을 실행하고; 입력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하고; 입력 영역 영향 맵에 적어도 기초하여 신뢰성 점수- 신뢰성 점수는 추론의 신뢰성의 표시를 포함함-를 생성하게 한다. 예 96. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈 련된 추론 모델을 선택하고; 입력 디바이스 특성들에 기초하여 선택된 추론 모델로 입력 디바이스로부터의 입력 데이터를 분류하게 한다. 예 97. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분 적으로 기초하여 출력 데이터를 생성하고; 출력 데이터를 필터링하여 스크리닝된 출력 데이터를 생성하게 한다. 예 98. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 제1 서버의 능력들을 결정하기 위해 제1 서버에 질의하고; 제1 서버의 능력들에 부분적으로 기 초하여 추론 모델을 복수의 모델 슬라이스들로 분할하고; 복수의 모델 슬라이스 중 하나의 표시 및 복수의 모델 슬라이스 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하기 위한 명령어를 포함하는 정보 요소를 제1 서버에 전송하게 한다. 예 99. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 제1 서버에서, 제1 서버의 능력들을 결정하기 위한 질의를 수신하고; 제1 서버에서, 복수의 모 델 슬라이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버 에서 실행하라는 명령어를 포함하는 정보 요소를 수신- 추론 모델은 제1 서버의 능력에 부분적으로 기초하여 복 수의 모델 슬라이스들로 분할됨 -하게 한다. 예 100. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 수신하고; 입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성하 고; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로서 평가하고; 분류 데이터가 수용 불가능한 것으로 평가될 때 증강된 입력 데이터를 생성하기 위해 입력 데이터를 수정하고; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강된 입력 데이터를 분류하고; 증강된 분류 데이터에 기초하여 증강된 입력 데이 터를 수용 가능한 것으로서 평가하고; 증강된 분류 데이터를 출력 데이터로서 제공하게 한다. 예 101. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 추론 모델 내의 각각의 층에 대한 각각의 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화 하고; 활성화 통계를 생성하기 위해 데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하고; 제1, 제2, 및 제3 파라미터들을 결정하고- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해 고되어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -; 활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하 여 전용 활성화 함수를 구현하게 한다. 예 102. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 복수의 모델 슬라이스로 분할하고; 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들을 훈련하게 한다. 예 103. 예 91 내지 예 102 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체로서, 회로는 신뢰할 수 있는 실행 환경(TEE)의 일부이다. 예 104. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하 게 하고, 마커를 저장하는 신뢰할 수 있는 실행 환경(TEE)에 의해 실행될 때, TEE로 하여금 입력이 마커와 매칭 되는지를 결정하게 하고; 입력이 마커와 매칭된다는 결정에 기초하여, 출력 데이터를 생성하지 않기 위한 제1 표시를 회로에 전송하게 한다. 예 105. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 장치와 연관된 고유 신원증명(UUID)을 결정하고; UUID에 부분적으로 기 초하여 입력 데이터를 변환하게 하며; 신뢰할 수 있는 실행 환경(TEE)으로 하여금: 사전 로드된 UUID 및 변환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성하게 하며, 복원된 입력 데이터는 추론 모델을 통해 출력을 발생시키기 위해 사용된다. 예 106. 예 92 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 컴퓨팅 디바이스로 하여금: 입력 데이터 및 추론 모델에 부분적으로 기초 하여 출력 데이터를 생성하고; 생성된 출력에 대한 추론 확률을 결정하고; 추론 확률이 임계값보다 더 큰지를 결정하고; 추론 확률이 임계값보다 더 크지 않다는 결정에 기초하여 널 출력을 제공하게 한다. 예 107. 예 91 또는 예 93 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어 들을 추가로 포함하고, 이 명령어들은 실행될 때, 컴퓨팅 디바이스로 하여금: 입력 디바이스로부터 입력 데이터 를 수신하고; 인터페이스를 통해, 네트워크에 결합된 서버로부터 무결화 페이로드를 수신하고- 무결화 페이로드 는 무결화 프로토콜의 표시들을 포함함 -; 입력 데이터에 무결화 프로토콜을 적용하는 것에 부분적으로 기초하 여 무결화된 입력 데이터를 생성하고; 무결화된 입력 데이터를 인터페이스 및 네트워크를 통해 서버에 전송하게 한다. 예 108. 예 91 내지 예 92 중 어느 하나 또는 예 94 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 입력 디바이스로부 터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하고- 출력 데이터는 가시 클래스 또는 은닉 클래스 중 하나에 대한 표시를 포함함 -; 출력 데이터가 은닉 클 래스의 표시를 포함하는지를 결정하고; 출력 데이터가 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하 여 생성된 출력을 출력 소비자에게 제공하게 한다. 예 109. 예 91 내지 예 93 중 어느 하나 또는 예 95 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 키에 부분적으로 기 초하여 입력 데이터를 난독화하고; 난독화된 입력 데이터를 사용하여 출력 데이터를 생성하기 위해 추론 모델을 실행하게 한다. 예 110. 예 91 내지 예 94 중 어느 하나 또는 예 96 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 추론의 표시를 포함하는 출력 데이터 및 추론 증강 맵을 생성하기 위해 입력 데이터를 사용하여 추론 모델을 실행하고; 입 력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하고; 입력 영역 영향 맵에 적어도 기초하여 신뢰성 점수- 신뢰성 점수는 추론의 신뢰성의 표시를 포함함-를 생성하게 한다. 예 111. 예 91 내지 예 95 중 어느 하나 또는 예 97 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 입력 디바이스에 대 한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련된 추론 모델을 선택하고; 입력 디 바이스 특성들에 기초하여 선택된 추론 모델로 입력 디바이스로부터의 입력 데이터를 분류하게 한다. 예 112. 예 91 내지 예 96 중 어느 하나 또는 예 98 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 입력 디바이스로부 터 입력 데이터를 수신하고; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생 성하고; 출력 데이터를 필터링하여 스크리닝된 출력 데이터를 생성하게 한다. 예 113. 예 91 내지 예 97 중 어느 하나 또는 예 99 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저 장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 제1 서버의 능력들 을 결정하기 위해 제1 서버에 질의하고; 제1 서버의 능력들에 부분적으로 기초하여 추론 모델을 복수의 모델 슬 라이스들로 분할하고; 복수의 모델 슬라이스 중 하나의 표시 및 복수의 모델 슬라이스 중 하나의 모델 슬라이스 를 분산 방식으로 제1 서버에서 실행하기 위한 명령어를 포함하는 정보 요소를 제1 서버에 전송하게 한다. 예 114. 예 91 내지 예 98 중 어느 하나 또는 예 100 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 제1 서버에서, 제 1 서버의 능력들을 결정하기 위한 질의를 수신하고; 제1 서버에서, 복수의 모델 슬라이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하라는 명령어를 포함하는 정보 요소를 수신- 추론 모델은 제1 서버의 능력에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할됨 -하 게 한다. 예 115. 예 91 내지 예 99 중 어느 하나 또는 예 101 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 입력 데이터를 수 신하고; 입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성하고; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로서 평가하고; 분류 데이터가 수용 불가능한 것으로 평가될 때 증강된 입력 데이 터를 생성하기 위해 입력 데이터를 수정하고; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강 된 입력 데이터를 분류하고; 증강된 분류 데이터에 기초하여 증강된 입력 데이터를 수용 가능한 것으로서 평가 하고; 증강된 분류 데이터를 출력 데이터로서 제공하게 한다. 예 116. 예 91 내지 예 100 중 어느 하나 또는 예 102 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 추론 모델 내의 각각의 층에 대한 각각의 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화하고; 활성화 통계를 생성하기 위 해 데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하고; 제1, 제2, 및 제3 파라미터들을 결정 하고- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해고되어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수 를 포함함 -; 활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수를 구현 하게 한다. 예 117. 예 91 내지 예 101 중 어느 하나 또는 예 103 내지 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 실행될 때, 회로로 하여금: 추론 모델을 복수 의 모델 슬라이스로 분할하고; 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들을 훈련하 게 한다. 예 118. 예 103 또는 예 105 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가 로 포함하고, 이 명령어들은 실행될 때, 컴퓨팅 디바이스로 하여금 입력 데이터 및 추론 모델에 부분적으로 기 초하여 출력 데이터를 생성하게 하고; 마커를 저장하는 신뢰할 수 있는 실행 환경(TEE)에 의해 실행될 때, TEE 로 하여금 입력이 마커와 매칭되는지를 결정하게 하고; 입력이 마커와 매칭된다는 결정에 기초하여, 출력 데이 터를 생성하지 않기 위한 제1 표시를 회로에 전송하게 한다. 예 119. 예 103 내지 예 104 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가 로 포함하고, 이 명령어들은 실행될 때, 컴퓨팅 디바이스로 하여금: 장치와 연관된 고유 신원증명(UUID)을 결정 하고; UUID에 부분적으로 기초하여 입력 데이터를 변환하게 하며; 신뢰할 수 있는 실행 환경(TEE)으로 하여금: 사전 로드된 UUID 및 변환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성하며, 복원된 입력 데이터는 추론 모델을 통해 출력을 발생시키기 위해 사용된다. 예 120. 예 91 내지 예 119 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 입력 데이터를 수신하 고; 입력 데이터를 수신하는 것에 응답하여 출력을 생성하게 한다. 예 121. 예 91 내지 예 120 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금 추론 확률이 임계값보다 더 크다는 결정에 기초하여 생성된 출력을 출력 디바이스에 제공하게 하는 명령어들을 추가로 포함한다. 예 122. 예 91 내지 예 121 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금 추론 모델을 회로에 결합된 메모리에 저장하게 하는 명령어들을 추 가로 포함한다. 예 123. 예 91 내지 예 122 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 신경 망이다. 예 124. 예 91 내지 예 123 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 패턴 분류기 네트워크이다. 예 125. 예 91 내지 예 124 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 서버로부터, 회로의 컴퓨팅 능력들을 보고하기 위한 표시를 포함하는 질의를 수신하고; 회로의 컴퓨팅 능력들의 표시를 포함하는 보 고를 서버에 전송하게 한다. 예 126. 예 91 내지 예 125 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금 네트워크를 통해 서버와의 신뢰할 수 있는 연결을 확립하게 하는 명 령어들을 추가로 포함한다. 예 127. 예 91 내지 예 126 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 입력 데이터를 제1 데 이터 포맷으로부터 제2 데이터 포맷으로 변환하는 것에 부분적으로 기초하여 디코딩된 입력 데이터를 생성하고; 디코딩된 입력 데이터에 필터를 적용하는 것에 부분적으로 기초하여 필터링된 입력 데이터를 생성하고; 필터링 된 입력 데이터를 제2 데이터 포맷으로부터 제1 데이터 포맷으로 변환하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하게 한다. 예 128. 예 91 내지 예 127 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 무결화 페이로드는 제2 데이터 포맷 및 필터의 표시를 포함한다. 예 129. 예 91 내지 예 128 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 기초하여 회로로 하여금 모니터링 시스템에 경 보를 전송하게 하는 명령어들을 추가로 저장한다. 예 130. 예 91 내지 예 129 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 출력 데이터가 은닉 클래스의 표시를 포함한 다는 결정에 응답하여, 난독화된 출력- 난독화된 출력은 가시 클래스의 표시를 포함함 -을 생성하고; 출력 데이 터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력을 출력 소비자에게 제공하게 한다. 예 131. 예 91 내지 예 130 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 출력 데이터가 은닉 클래스의 표시를 포함한다 는 결정에 응답해서, 포렌식 데이터를 수집하며- 포렌식 데이터는 입력 데이터 및 입력 디바이스 중 적어도 하 나의 표시를 포함함 -, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 모 니터링 시스템에 제공하게 한다. 예 132. 예 91 내지 예 131 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 가시 클래스는 복 수의 가시 클래스들을 포함하고, 출력 데이터는 은닉 클래스 또는 복수의 가시 클래스들 중 하나의 가시 클래스 의 표시를 포함한다. 예 133. 예 91 내지 예 132 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 은닉 클래스는 복 수의 은닉 클래스들을 포함하고, 출력 데이터는 복수의 은닉 클래스들 중 하나 또는 복수의 가시 클래스들 중 하나의 표시를 포함한다. 예 134. 예 91 내지 예 133 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 은닉 클래 스 중 적어도 하나는 블랙리스트화된 입력들에 대응한다. 예 135. 예 91 내지 예 134 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 출력 데이터가 은닉 클래스의 표시를 포함한다 는 결정에 응답하여, 출력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하고; 복수의 가시 클래스들 중 식별된 하나의 가시 클래스의 표시를 포함하도록 난독화된 출력 을 생성하게 한다. 예 136. 예 91 내지 예 135 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 포함하 고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금 입력 디바이스로부터 입력 데이터를 수신하게 한다. 예 137. 예 91 내지 예 136 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 증강 맵은 모 델 활성화 맵이다. 예 138. 예 91 내지 예 137 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하게 하는 명령어들을 저장한다. 예 139. 예 91 내지 예 138 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로가 입력 디바이스로부터 입력 디바이스 특성들을 요청하게 하는 명령어들을 저장한다. 예 140. 예 91 내지 예 139 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 훈련되지 않은 추 론 모델들은 피드포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트 워크, 심층 신경망(DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 141. 예 91 내지 예 140 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 출력 데이터는 복 수의 클래스들 중 적어도 하나의 클래스의 표시를 포함하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여 금, 복수의 클래스 중 적어도 하나가 복수의 클래스의 서브세트에 포함되는지를 결정하고; 출력 데이터를 필터 링하기 위해 복수의 클래스들의 서브세트에 포함된 복수의 클래스들 중 적어도 하나에 대한 표시를 제거하게 한 다. 예 142. 예 91 내지 예 141 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 결합되는 인터페이스- 인터페이스는 네트워크에 결합하기 위한 것임 - 및 명령어들을 포함하고, 명령어들은 회로에 의해 실행될 때 회로로 하여금 인터페이스를 통해, 서버로부터 프라이버시 수준 사양을 수신하게 하고, 프라이버시 수준 사양은 복수의 클래스들의 서브세트의 표시를 포함한다. 예 143. 예 91 내지 예 142 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 인터페이스를 통해, 스크리닝된 출력을 서버에 제공하게 한다. 예 144. 예 91 내지 예 143 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금: 서버로부터 질의를 수신하고- 질의는 회로의 스크리닝 능력들을 보고하기 위한 표시를 포함함 -; 회로의 스크리닝 능력의 표시를 포함하는 보고를 서버에 전송하게 한다. 예 145. 예 91 내지 예 144 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금: 제2 서버의 능력들을 결정하기 위해 제2 서버에 질의하고; 제1 서버 및 제2 서버의 능력에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분할하고; 복수의 모델 슬라이스 중 또 다른 하나의 표시, 및 복수의 모델 슬라이스 중 다른 하나를 제2 서버에서 분산 방식으로 실행하기 위한 명 령어를 포함하는 정보 요소를 제2 서버에 전송하게 한다. 예 146. 예 91 내지 예 145 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 제1 서버 및 제2 서버의 능력들은 각각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 147. 예 91 내지 예 146 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 복수의 모델 슬라이스 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트들에 기초하여 복수의 모델 슬라이스 중 하나를 제1 서버에 할당하게 한다. 예 148. 예 91 내지 예 147 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 제1 서버의 능력들 및 제2 서버의 능력들에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할된다. 예 149. 예 91 내지 예 148 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 제1 서버 및 제2 서버의 능력들은 각각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 150. 예 91 내지 예 149 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 모델 슬라 이스 중 하나는 복수의 모델 슬라이스 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트에 기초하 여 제1 서버에 할당된다. 예 151. 예 91 내지 예 150 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 분류 데이터는 입 력 데이터의 클래스 및 클래스의 정확도와 연관된 신뢰도 수준을 포함하고, 매체는, 회로에 의해 실행될 때, 회 로로 하여금, 신뢰도 수준이 임계값 아래로 떨어질 때 분류 데이터를 수용 불가능한 것으로 평가하고 신뢰도 수 준이 임계값을 초과할 때 분류 데이터를 수용 가능한 것으로 평가하게 하는 명령어들을 저장한다. 예 152. 예 91 내지 예 151 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 감마의 변경, 픽셀 시프트, 노이즈-제거 및 에러 정정 중 하나 이상으로 입 력 데이터를 수정하게 한다. 예 153. 예 91 내지 예 152 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 동작 이상들을 검출하기 위해 분류 데이터와 증강된 분류 데이터를 비교하 게 한다. 예 154. 예 91 내지 예 153 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 피드 포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경 망(DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 155. 예 91 내지 예 154 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 입력 데이터는 추 론 모델에 의한 분류를 위한 하나 이상의 샘플들의 데이터 세트를 포함한다. 예 156. 예 91 내지 예 155 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 데이터 세트 내의 샘플들의 활성화들은 추론 모델의 각각의 층에 대한 활성화 맵들이 저장되는 동안 각각의 샘플을 순방향 전파함 으로써 누적된다. 예 157. 예 91 내지 예 156 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 전용 활성화 함수 의 구현은 처리된 층에 대한 대응하는 행렬에 있는 모든 노드들을 전달하는 것을 포함한다. 예 158. 예 91 내지 예 157 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 활성화 퍼센트는 추론 모델에서 하나 이상의 노드들을 무작위로 해고함으로써 충족된다. 예 159. 예 91 내지 예 158 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 활성화 퍼센트는 제2 파라미터에서 제1 파라미터를 뺀 것과 동일하다. 예 160. 예 91 내지 예 159 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 사용자로부터 수신된 입력에 기초하여 제1, 제2, 및 제3 파라미터들을 결정 하게 한다. 예 161. 예 91 내지 예 160 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 피드 포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경 망(DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 162. 예 91 내지 예 161 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 복수의 대체 서브-모델들 및 복수의 적대적 모델들에 부분적으로 기초하여 복 수의 모델 슬라이스들 각각을 훈련시키게 한다. 예 163. 예 91 내지 예 162 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 대체 서브- 모델은 복수의 모델 슬라이스들 각각에 대한 대체 서브-모델을 포함한다. 예 164. 예 91 내지 예 163 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 적대적 모 델은 복수의 모델 슬라이스 각각에 대한 적대적 모델을 포함한다. 예 165. 예 103 내지 예 164 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, TEE에 의해 실행 될 때, TEE로 하여금, 입력이 마커와 매칭된다는 결정에 기초하여 추론 모델의 디지털 권한 위반의 표시를 제공 하기 위한 제2 표시를 회로에 전송하게 하는 명령어들을 추가로 포함한다. 예 166. 예 103 내지 예 165 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가 로 포함하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 제2 표시를 수신한 것에 응답하여 추론 모 델의 디지털 권한 위반의 표시를 출력 디바이스에 제공하고; 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하지 않게 한다. 예 167. 예 103 내지 예 166 중 어느 하나의 예의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 포함하고, 이 명령어들은 TEE에 의해 실행될 때, TEE로 하여금: 입력 데이터를 마커와 비트 단위로 비교 하고; 비트 단위 비교에 부분적으로 기초하여 입력 데이터가 마커와 매칭되는 것으로 결정하게 한다. 예 168. 예 103 내지 예 167 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, TEE에 의해 실행 될 때, TEE로 하여금 제3 표시를 수신하는 것에 응답하여 출력 데이터를 생성하기 위해 제3 표시를, 회로에, 전 송하게 하는 명령어들을 추가로 포함한다. 예 169. 예 103 내지 예 168 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로로 하여금, 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하게 하는 명령어들을 추가로 포 함한다. 예 170. 예 103 내지 예 169 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델을 추가 로 포함한다. 예 171. 예 103 내지 예 170 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델은 신경 망이다. 예 172. 예 103 내지 예 171 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 컴퓨팅 디바이스 에 의해 실행될 때, 컴퓨팅 디바이스로 하여금 입력 디바이스로부터 입력 데이터를 수신하게 하는 명령어들을 추가로 포함한다. 예 173. 예 103 내지 예 172 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 추론 모델을 추가 로 포함하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금 복원된 입력 데이터에 부분적으로 기초하여 출 력 데이터를 생성하기 위해 추론 모델을 실행하게 한다. 예 174. 예 103 내지 예 173 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, TEE는 추론 모델 을 저장하고, TEE에 의해 실행될 때, TEE로 하여금 복원된 입력 데이터에 부분적으로 기초하여 출력 데이터를 생성하게 하는 명령어들을 추가로 포함한다. 예 175. 컴퓨터 구현 방법으로서, 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하는 단계; 생성된 출력에 대한 추론 확률을 결정하는 단계; 추론 확률이 임계값보다 더 큰지를 결정하는 단계; 및 추론 확률이 임계값보다 더 크지 않다는 결정에 기초하여 널 출력을 제공하는 단계를 포함한다.예 176. 컴퓨터 구현 방법으로서, 입력 데이터를 수신하는 단계; 추론 모델을 통해, 수신된 입력 데이터에 기 초하여 출력을 생성하는 단계; 및 입력 데이터 및 출력 데이터에 부분적으로 기초하여 추론 모델의 사용이 인가 되지 않았다는 표시를 제공하는 단계를 포함한다. 예 177. 컴퓨터 구현 방법으로서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 인터페이스를 통해, 네 트워크에 결합된 서버로부터 무결화 페이로드를 수신하고- 무결화 페이로드는 무결화 프로토콜의 표시들을 포함 함 -; 입력 데이터에 무결화 프로토콜을 적용하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하는 단계; 및 무결화된 입력 데이터를 인터페이스 및 네트워크를 통해 서버에 전송하는 단계를 더 포함한다. 예 178. 컴퓨터 구현 방법으로서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 입력 데이터로 추론 모 델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하는 단계- 출력 데이터는 가시 클래스 또는 은닉 클래스 중 어느 하나에 대한 표시를 포함함 -; 출력 데이터가 은닉 클래스의 표시를 포함하는지를 결정하는 단 계; 및 출력 데이터가 은닉 클래스의 표시를 포함하지 않는다는 결정에 기초하여 생성된 출력을 출력 소비자에 게 제공하는 단계를 포함한다. 예 179. 컴퓨터 구현 방법으로서, 키에 부분적으로 기초하여 입력 데이터를 난독화하는 단계; 및 난독화된 입 력 데이터를 사용하여 출력 데이터를 생성하기 위해 추론 모델을 실행하는 단계를 포함한다. 예 180. 컴퓨터 구현 방법으로서, 입력 데이터를 사용하여 추론 모델을 실행하여 추론의 표시를 포함하는 출력 데이터 및 추론 증강 맵을 생성하는 단계; 입력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하는 단계; 및 적어도 입력 영역 영향 맵에 기초하여 신뢰성 점수를 생성하는 단계- 신뢰성 점수는 추 론의 신뢰성의 표시를 포함함 -를 포함한다. 예 181. 컴퓨터 구현 방법으로서, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하는 단계; 입력 디바이 스 특성들에 기초하여 훈련된 추론 모델을 선택하는 단계; 및 입력 디바이스 특성들에 기초하여 선택된 추론 모 델로 입력 디바이스로부터의 입력 데이터를 분류하는 단계를 포함한다. 예 182. 컴퓨터 구현 방법으로서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 입력 데이터로 추론 모 델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하는 단계; 및 출력 데이터를 필터링하여 스크리닝 된 출력 데이터를 생성하는 단계를 포함한다. 예 183. 컴퓨터 구현 방법으로서, 제1 서버의 능력들을 결정하기 위해 제1 서버에 질의하는 단계; 제1 서버의 능력들에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분할하는 단계; 및 복수의 모델 슬라이스 중 하나의 표시, 및 복수의 모델 슬라이스 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하기 위 한 명령어를 포함하는 정보 요소를 제1 서버에 전송하는 단계를 포함한다. 예 184. 컴퓨터 구현 방법으로서, 제1 서버에서, 제1 서버의 능력들을 결정하기 위한 질의를 수신하는 단계; 및 제1 서버에서, 복수의 모델 슬라이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이 스를 분산 방식으로 제1 서버에서 실행하라는 명령어를 포함하는 정보 요소를 수신하는 단계- 추론 모델은 제1 서버의 능력에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할됨 -를 포함한다. 예 185. 컴퓨터 구현 방법으로서, 입력 데이터를 수신하는 단계; 입력 데이터를 추론 모델에 기초하여 분류하 여 분류 데이터를 생성하는 단계; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로 평가하는 단계; 분류 데이터가 수용 불가능한 것으로 평가될 때 증강된 입력 데이터를 생성하기 위해 입력 데이터를 수정하는 단계; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강된 입력 데이터를 분류하는 단계; 증강된 분류 데이터에 기초하여 증강된 입력 데이터를 수용 가능한 것으로 평가하는 단계; 및 증강된 분류 데이터를 출 력 데이터로서 제공하는 단계를 포함한다. 예 186. 컴퓨터 구현 방법으로서, 추론 모델 내의 각각의 층에 대한 각각의 출력 특징 맵에 대응하는 하나 이 상의 행렬을 초기화하는 단계; 활성화 통계를 생성하기 위해 데이터 세트 내의 샘플들의 활성화들을 하나 이상 의 행렬에 누적하는 단계; 제1, 제2, 및 제3 파라미터들을 결정하는 단계- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터는 해고되어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라 미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -; 및 활성화 통계, 제1 파라미 터, 제2 파라미터 및 제3 파라미터에 기초하여 전용 활성화 함수를 구현하는 단계를 포함한다. 예 187. 컴퓨터 구현 방법으로서, 추론 모델을 복수의 모델 슬라이스로 분할하는 단계; 및 복수의 적대적 모델 에 부분적으로 기초하여 복수의 모델 슬라이스를 훈련하는 단계를 포함한다.예 188. 컴퓨터 구현 방법으로서, 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하는 단계; 마커를 저장하는 신뢰할 수 있는 실행 환경(TEE)을 통해, 입력이 마커와 매칭되는지를 결정하는 단계; 및 입력이 마커와 매칭된다는 결정에 기초하여, 출력 데이터를 생성하지 않기 위한 제1 표시를 TEE로부터 회로로 전송하는 단계를 포함한다. 예 189. 컴퓨터 구현 방법으로서, 장치와 연관된 고유 신원증명(UUID)을 결정하는 단계; UUID에 부분적으로 기 초하여 입력 데이터를 변환하는 단계; 및 신뢰할 수 있는 실행 환경(TEE)으로 하여금: 사전 로드된 UUID 및 변 환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성하게 하는 단계- 복원된 입력 데이터는 추 론 모델을 통해 출력을 발생시키기 위해 사용됨 -를 포함한다. 예 190. 예 176 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터 및 추론 모델에 부분적 으로 기초하여 출력 데이터를 생성하는 단계; 생성된 출력에 대한 추론 확률을 결정하는 단계; 추론 확률이 임 계값보다 더 큰지를 결정하는 단계; 및 추론 확률이 임계값보다 더 크지 않다는 결정에 기초하여 널 출력을 제 공하는 단계를 포함한다. 예 191. 예 175 또는 예 177 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터를 수신하는 단계; 추론 모델을 통해, 수신된 입력 데이터에 기초하여 출력을 생성하는 단계; 및 입력 데이터 및 출력 데이 터에 부분적으로 기초하여 추론 모델의 사용이 인가되지 않았다는 표시를 제공하는 단계를 포함한다. 예 192. 예 175 내지 예 176 중 어느 하나 또는 예 178 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 인터페이스를 통해, 네트워크에 결합된 서버로부터 무 결화 페이로드를 수신하고- 무결화 페이로드는 무결화 프로토콜의 표시들을 포함함 -; 입력 데이터에 무결화 프 로토콜을 적용하는 것에 부분적으로 기초하여 무결화된 입력 데이터를 생성하는 단계; 및 무결화된 입력 데이터 를 인터페이스 및 네트워크를 통해 서버에 전송하는 단계를 더 포함한다. 예 192. 예 175 내지 예 177 중 어느 하나 또는 예 179 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하는 단계- 출력 데이터는 가시 클래스 또는 은닉 클래스 중 어느 하나에 대한 표 시를 포함함 -; 출력 데이터가 은닉 클래스의 표시를 포함하는지를 결정하는 단계; 및 출력 데이터가 은닉 클래 스의 표시를 포함하지 않는다는 결정에 기초하여 생성된 출력을 출력 소비자에게 제공하는 단계를 포함한다. 예 193. 예 175 내지 예 178 중 어느 하나 또는 예 180 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 키에 부분적으로 기초하여 입력 데이터를 난독화하는 단계; 및 난독화된 입력 데이터를 사용하여 출력 데이 터를 생성하기 위해 추론 모델을 실행하는 단계를 포함한다. 예 194. 예 175 내지 예 179 중 어느 하나 또는 예 181 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 데이터를 사용하여 추론 모델을 실행하여 추론의 표시를 포함하는 출력 데이터 및 추론 증강 맵을 생성하는 단계; 입력 데이터 및 추론 증강 맵에 기초하여 입력 영역 영향 맵을 생성하는 단계; 및 적어도 입력 영역 영향 맵에 기초하여 신뢰성 점수를 생성하는 단계- 신뢰성 점수는 추론의 신뢰성의 표시를 포함함 - 를 포함한다. 예 195. 예 175 내지 예 180 중 어느 하나 또는 예 182 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하는 단계; 입력 디바이스 특성들에 기초하여 훈련된 추 론 모델을 선택하는 단계; 및 입력 디바이스 특성들에 기초하여 선택된 추론 모델로 입력 디바이스로부터의 입 력 데이터를 분류하는 단계를 포함한다. 예 196. 예 175 내지 예 181 중 어느 하나 또는 예 183 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 디바이스로부터 입력 데이터를 수신하는 단계; 입력 데이터로 추론 모델을 실행하는 것에 부분적으로 기초하여 출력 데이터를 생성하는 단계; 및 출력 데이터를 필터링하여 스크리닝된 출력 데이터를 생성하는 단계 를 포함한다. 예 197. 예 175 내지 예 182 중 어느 하나 또는 예 184 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 제1 서버의 능력들을 결정하기 위해 제1 서버에 질의하는 단계; 제1 서버의 능력들에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라이스들로 분할하는 단계; 및 복수의 모델 슬라이스 중 하나의 표시, 및 복수의 모 델 슬라이스 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에서 실행하기 위한 명령어를 포함하는 정보 요 소를 제1 서버에 전송하는 단계를 포함한다.예 198. 예 175 내지 예 183 중 어느 하나 또는 예 185 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 제1 서버에서, 제1 서버의 능력들을 결정하기 위한 질의를 수신하는 단계; 및 제1 서버에서, 복수의 모델 슬라이스들 중 하나의 표시, 및 복수의 모델 슬라이스들 중 하나의 모델 슬라이스를 분산 방식으로 제1 서버에 서 실행하라는 명령어를 포함하는 정보 요소를 수신하는 단계- 추론 모델은 제1 서버의 능력에 부분적으로 기초 하여 복수의 모델 슬라이스들로 분할됨 -를 포함한다. 예 199. 예 175 내지 예 184 중 어느 하나 또는 예 186 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 데이터를 수신하는 단계; 입력 데이터를 추론 모델에 기초하여 분류하여 분류 데이터를 생성하는 단계; 분류 데이터에 기초하여 입력 데이터를 수용 불가능한 것으로 평가하는 단계; 분류 데이터가 수용 불가능 한 것으로 평가될 때 증강된 입력 데이터를 생성하기 위해 입력 데이터를 수정하는 단계; 증강된 분류 데이터를 생성하기 위해 추론 모델에 기초하여 증강된 입력 데이터를 분류하는 단계; 증강된 분류 데이터에 기초하여 증 강된 입력 데이터를 수용 가능한 것으로 평가하는 단계; 및 증강된 분류 데이터를 출력 데이터로서 제공하는 단 계를 포함한다. 예 200. 예 175 내지 예 185 중 어느 하나 또는 예 187 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 추론 모델 내의 각각의 층에 대한 각각의 출력 특징 맵에 대응하는 하나 이상의 행렬을 초기화하는 단계; 활성화 통계를 생성하기 위해 데이터 세트 내의 샘플들의 활성화들을 하나 이상의 행렬에 누적하는 단계; 제1, 제2, 및 제3 파라미터들을 결정하는 단계- 제1 파라미터는 고정된 활성화들의 퍼센트를 포함하고, 제2 파라미터 는 해고되어야 하는 추론 모델 내의 노드들의 총 퍼센트를 포함하고, 제3 파라미터는 고정된 활성화들을 취하기 위한 총 상위 활성화들의 백분위수를 포함함 -; 및 활성화 통계, 제1 파라미터, 제2 파라미터 및 제3 파라미터 에 기초하여 전용 활성화 함수를 구현하는 단계를 포함한다. 예 201. 예 175 내지 예 186 중 어느 하나 또는 예 188 내지 예 189 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 추론 모델을 복수의 모델 슬라이스로 분할하는 단계; 및 복수의 적대적 모델에 부분적으로 기초하여 복수의 모델 슬라이스를 훈련하는 단계를 포함한다. 예 202. 예 175 내지 예 187 또는 예 189 중 어느 일 예의 컴퓨터 구현 방법에 있어서, 입력 데이터 및 추론 모델에 부분적으로 기초하여 출력 데이터를 생성하는 단계; 마커를 저장하는 신뢰할 수 있는 실행 환경(TEE)을 통해, 입력이 마커와 매칭되는지를 결정하는 단계; 및 입력이 마커와 매칭된다는 결정에 기초하여, 출력 데이터 를 생성하지 않기 위한 제1 표시를 TEE로부터 회로로 전송하는 단계를 포함한다. 예 203. 예 175 내지 예 188 중 어느 하나의 컴퓨터 구현 방법에 있어서, 장치와 연관된 고유 신원증명(UUID) 을 결정하는 단계; UUID에 부분적으로 기초하여 입력 데이터를 변환하는 단계; 및 신뢰할 수 있는 실행 환경 (TEE)으로 하여금: 사전 로드된 UUID 및 변환된 입력 데이터에 부분적으로 기초하여 복원된 입력 데이터를 생성 하며, 복원된 입력 데이터는 추론 모델을 통해 출력을 발생시키기 위해 사용된다. 예 204. 예 175 내지 예 203 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터를 수신하는 단계; 입력 데이터를 수신하는 것에 응답하여 출력을 생성하게 한다. 예 205. 예 175 내지 예 204 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 확률이 임계값보다 더 크다는 결정에 기초하여 생성된 출력을 출력 디바이스에 제공하는 단계를 포함한다. 예 206. 예 175 내지 예 205 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델을 메모리에 저장하는 단계 를 포함한다. 예 207. 예 175 내지 예 206 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 신경망이다. 예 208. 예 175 내지 예 207 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 패턴 분류기 네트워크이 다. 예 209. 예 175 내지 예 208 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력은 복수의 분류들 중 하나의 분 류의 표시를 포함하고, 방법은, 입력 데이터에 기초하여 복수의 분류 중 하나가 정확한지를 결정하는 단계; 및 입력 데이터에 기초하여 복수의 분류 중 하나가 정확하다는 결정에 부분적으로 기초하여 추론 모델의 사용이 인 가되지 않은 것으로 결정하는 단계를 포함한다. 예 210. 예 175 내지 예 209 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델의 사용이 인가되지 않았다 는 결정에 기초하여 출력을 제공하는 단계를 포함한다.예 211. 예 175 내지 예 210 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 입력 데이터를 수신하는 단계; 추론 모델을 통해, 수신된 복수의 입력 데이터 각각에 기초하여 출력을 생성하는 단계- 복수의 출력 각각 은 복수의 분류 중 하나의 분류의 표시를 포함함 -; 복수의 출력 각각에 대해, 복수의 출력 중 하나에 대응하는 복수의 입력 데이터 중 하나에 기초하여 복수의 분류 중 하나가 정확한지를 결정하는 단계; 복수의 출력 중 하 나에 대응하는 복수의 입력 데이터 중 하나에 기초하여 복수의 분류 중 하나가 정확하다는 결정에 기초하여 카 운터를 증가시키는 단계; 및 카운터가 임계 수를 초과한 것에 부분적으로 기초하여 추론 모델의 사용이 인가되 지 않은 것으로 결정하는 단계를 포함한다. 예 212. 예 175 내지 예 211 중 어느 하나의 컴퓨터 구현 방법에 있어서, 서버로부터, 회로의 컴퓨팅 능력들을 보고하기 위한 표시를 포함하는 질의를 수신하는 단계; 및 회로의 컴퓨팅 능력들의 표시를 포함하는 보고를 서 버에 전송하는 단계를 포함한다. 예 213. 예 175 내지 예 212 중 어느 하나의 컴퓨터 구현 방법에 있어서, 네트워크를 통해 서버와의 신뢰할 수 있는 연결을 확립하는 단계를 포함한다. 예 214. 예 175 내지 예 213 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터를 제1 데이터 포맷으로 부터 제2 데이터 포맷으로 변환하는 것에 부분적으로 기초하여 디코딩된 입력 데이터를 생성하는 단계; 디코딩 된 입력 데이터에 필터를 적용하는 것에 부분적으로 기초하여 필터링된 입력 데이터를 생성하는 단계; 및 필터 링된 입력 데이터를 제2 데이터 포맷으로부터 제1 데이터 포맷으로 변환하는 것에 부분적으로 기초하여 무결화 된 입력 데이터를 생성하는 단계 예 215. 예 175 내지 예 214 중 어느 하나의 컴퓨터 구현 방법에 있어서, 무결화 페이로드는 제2 데이터 포맷 및 필터의 표시를 포함한다. 예 216. 예 175 내지 예 215 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 기초하여 모니터링 시스템에 경보를 전송하는 단계를 포함한다. 예 217. 예 175 내지 예 216 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력- 난독화된 출력은 가시 클래스의 표시를 포함함 -을 생성하는 단계; 및 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 난독화된 출력을 출력 소비자에게 제공하는 단계를 포함한다. 예 218. 예 175 내지 예 217 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌식 데이터를 수집하는 단계- 포렌식 데이터는 입력 데이터 및 입력 디바이스 중 적어도 하나의 표시를 포함함 -; 및 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답해서, 포렌 식 데이터를 모니터링 시스템에 제공하는 단계를 포함한다. 예 219. 예 175 내지 예 218 중 어느 하나의 컴퓨터 구현 방법에 있어서, 가시 클래스는 복수의 가시 클래스들 을 포함하고, 출력 데이터는 은닉 클래스 또는 복수의 가시 클래스들 중 하나의 클래스의 표시를 포함한다. 예 220. 예 175 내지 예 219 중 어느 하나의 컴퓨터 구현 방법에 있어서, 은닉 클래스는 복수의 은닉 클래스들 을 포함하고, 출력 데이터는 복수의 은닉 클래스들 중 하나 또는 복수의 가시 클래스들 중 하나의 표시를 포함 한다. 예 221. 예 175 내지 예 220 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력 데이터가 은닉 클래스의 표시를 포함한다는 결정에 응답하여, 출력 데이터에 의해 표시되는 복수의 은닉 클래스 중 하나와 연관된 복수의 가시 클래스 중 하나를 식별하는 단계; 및 복수의 가시 클래스들 중 식별된 하나의 가시 클래스의 표시를 포함하도록 난독화된 출력을 생성하는 단계 예 222. 예 175 내지 예 221 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 데이터를 수신하는 단계를 포함한다. 예 223. 예 175 내지 예 222 중 어느 하나의 컴퓨터 구현 방법에서, 추론 증강 맵은 모델 활성화 맵이다. 예 224. 예 175 내지 예 223 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하는 단계를 포함한다. 예 225. 예 175 내지 예 224 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 디바이스 특성들을 요청하는 단계를 포함한다. 예 226. 예 175 내지 예 225 중 어느 하나의 컴퓨터 구현 방법에 있어서, 훈련되지 않은 추론 모델들은 피드포 워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망 (DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 227. 예 175 내지 예 226 중 어느 하나의 컴퓨터 구현 방법에 있어서, 출력 데이터는 복수의 클래스 중 적 어도 하나의 클래스의 표시를 포함하고, 방법은, 복수의 클래스 중 적어도 하나가 복수의 클래스의 서브세트에 포함되는지를 결정하는 단계; 및 출력 데이터를 필터링하기 위해 복수의 클래스들의 서브세트에 포함된 복수의 클래스들 중 적어도 하나에 대한 표시를 제거하는 단계를 포함한다. 예 228. 예 175 내지 예 227 중 어느 하나의 컴퓨터 구현 방법에 있어서, 인터페이스를 통해, 서버로부터 프라 이버시 수준 사양을 수신하는 단계를 포함하며, 프라이버시 수준 사양은 복수의 클래스들의 서브세트의 표시를 포함한다. 예 229. 예 175 내지 예 228 중 어느 하나의 컴퓨터 구현 방법에 있어서, 인터페이스를 통해, 스크리닝된 출력 을 서버에 제공하는 단계를 포함한다. 예 230. 예 175 내지 예 229 중 어느 하나의 컴퓨터 구현 방법에 있어서, 서버로부터 질의를 수신하는 단계- 질의는 회로의 스크리닝 능력들을 보고하기 위한 표시를 포함함 -; 및 회로의 스크리닝 능력의 표시를 포함하는 보고를 서버에 전송하는 단계를 포함한다. 예 231. 예 175 내지 예 230 중 어느 하나의 컴퓨터 구현 방법에 있어서, 제2 서버의 능력들을 결정하기 위해 제2 서버에 질의하는 단계; 제1 서버 및 제2 서버의 능력에 부분적으로 기초하여 추론 모델을 복수의 모델 슬라 이스들로 분할하는 단계; 및 복수의 모델 슬라이스 중 다른 하나의 표시, 및 복수의 모델 슬라이스 중 다른 하 나를 제2 서버에서 분산 방식으로 실행하기 위한 명령어를 포함하는 정보 요소를 제2 서버에 전송하는 단계를 포함한다. 예 232. 예 175 내지 예 231 중 어느 하나의 컴퓨터 구현 방법에 있어서, 제1 서버 및 제2 서버의 능력들은 각 각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 233. 예 175 내지 예 232 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 모델 슬라이스들 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트들에 기초하여 복수의 모델 슬라이스들 중 하나를 제1 서버 에 할당하는 단계를 포함한다. 예 234. 예 175 내지 예 233 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 제1 서버의 능력들 및 제2 서버의 능력들에 부분적으로 기초하여 복수의 모델 슬라이스들로 분할된다. 예 235. 예 175 내지 예 234 중 어느 하나의 컴퓨터 구현 방법에 있어서, 제1 서버 및 제2 서버의 능력들은 각 각의 제1 서버 및 제2 서버의 보안 특징 세트의 표시를 포함한다. 예 236. 예 175 내지 예 235 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 모델 슬라이스 중 하나는 복 수의 모델 슬라이스 중 하나의 취약성 레벨과 제1 및 제2 서버들의 보안 특징 세트에 기초하여 제1 서버에 할당 된다. 예 237. 예 175 내지 예 236 중 어느 하나의 컴퓨터 구현 방법에 있어서, 분류 데이터는 입력 데이터의 클래스 및 클래스의 정확도와 연관된 신뢰도 수준을 포함하고, 매체는, 회로에 의해 실행될 때, 회로로 하여금, 신뢰도 수준이 임계값 아래로 떨어질 때 분류 데이터를 수용 불가능한 것으로 평가하고 신뢰도 수준이 임계값을 초과할 때 분류 데이터를 수용 가능한 것으로 평가하게 하는 명령어들을 저장한다. 예 238. 예 175 내지 예 237 중 어느 하나의 컴퓨터 구현 방법에 있어서, 감마의 변경, 픽셀 시프트, 노이즈- 제거, 및 에러 정정 중 하나 이상으로 입력 데이터를 수정하는 단계를 포함한다. 예 239. 예 175 내지 예 238 중 어느 하나의 컴퓨터 구현 방법에 있어서, 동작 이상들을 검출하기 위해 분류 데이터와 증강된 분류 데이터를 비교하는 단계를 포함한다. 예 240. 예 175 내지 예 239 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 피드포워드 신경망 (FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망(DNN), 베이 지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다.예 241. 예 175 내지 예 240 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터는 추론 모델에 의한 분 류를 위한 하나 이상의 샘플들의 데이터 세트를 포함한다. 예 242. 예 175 내지 예 241 중 어느 하나의 컴퓨터 구현 방법에 있어서, 데이터 세트 내의 샘플들의 활성화들 은 추론 모델의 각각의 층에 대한 활성화 맵들이 저장되는 동안 각각의 샘플을 순방향 전파함으로써 누적된다. 예 243. 예 175 내지 예 242 중 어느 하나의 컴퓨터 구현 방법에 있어서, 전용 활성화 함수의 구현은 처리된 층에 대한 대응하는 행렬에 있는 모든 노드들을 전달하는 단계를 포함한다. 예 244. 예 175 내지 예 243 중 어느 하나의 컴퓨터 구현 방법에 있어서, 활성화 퍼센트는 추론 모델에서 하나 이상의 노드들을 무작위로 해고함으로써 충족된다. 예 245. 예 175 내지 예 244 중 어느 하나의 컴퓨터 구현 방법에 있어서, 활성화 퍼센트는 제2 파라미터에서 제1 파라미터를 뺀 것과 동일하다. 예 246. 예 175 내지 예 245 중 어느 하나의 컴퓨터 구현 방법에 있어서, 사용자로부터 수신된 입력에 기초하 여 제1, 제2, 및 제3 파라미터들을 결정하는 단계를 포함한다. 예 247. 예 175 내지 예 246 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 피드포워드 신경망 (FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망(DNN), 베이 지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 248. 예 175 내지 예 247 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 대체 서브-모델들 및 복수의 적대적 모델들에 부분적으로 기초하여 복수의 모델 슬라이스들 각각을 훈련하는 단계를 포함한다. 예 249. 예 175 내지 예 248 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 대체 서브-모델은 복수의 모 델 슬라이스들 각각에 대한 대체 서브-모델을 포함한다. 예 250. 예 175 내지 예 249 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 적대적 모델은 복수의 모델 슬라이스 각각에 대한 적대적 모델을 포함한다. 예 251. 예 188 내지 예 250 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력이 마커와 매칭된다는 결정에 기 초하여 추론 모델의 디지털 권한 위반의 표시를 제공하기 위한 제2 표시를 회로에 전송하는 단계를 포함한다. 예 252. 예 188 내지 예 251 중 어느 하나의 컴퓨터 구현 방법에 있어서, 명령어들을 추가로 포함하고, 이 명 령어들은 회로에 의해 실행될 때, 회로로 하여금, 제2 표시를 수신한 것에 응답하여 추론 모델의 디지털 권한 위반의 표시를 출력 디바이스에 제공하고; 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하지 않게 한 다. 예 253. 예 188 내지 예 252 중 어느 일 예의 컴퓨터 구현 방법에 있어서, 명령어들을 추가로 포함하고, 이 명 령어들은 TEE에 의해 실행될 때, TEE로 하여금: 입력 데이터를 마커와 비트 단위로 비교하고; 비트 단위 비교에 부분적으로 기초하여 입력 데이터가 마커와 매칭되는 것으로 결정하게 한다. 예 254. 예 188 내지 예 253 중 어느 하나의 컴퓨터 구현 방법에 있어서, TEE에 의해 실행될 때, TEE로 하여금, 제3 표시를 수신하는 것에 응답하여 출력 데이터를 생성하기 위해 제3 표시를, 회로에, 전송하게 하는 명령어들을 추가로 포함한다. 예 255. 예 188 내지 예 254 중 어느 하나의 컴퓨터 구현 방법에 있어서, 회로에 의해 실행될 때, 회로가 제1 표시를 수신하는 것에 응답하여 출력 데이터를 생성하게 하는 명령어들을 추가로 포함한다. 예 256. 예 188 내지 예 255 중 어느 하나의 컴퓨터 구현 방법에 있어서, 메모리에 추론 모델을 추가로 포함한 다. 예 257. 예 188 내지 예 256 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델은 신경망이다. 예 258. 예 188 내지 예 257 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 데이터를 수신하는 단계를 포함한다. 예 259. 예 188 내지 예 258 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복원된 입력 데이터에 부분적으로 기 초하여 출력 데이터를 생성하기 위해 추론 모델을 실행하는 단계를 포함한다. 예 260. 예 188 내지 예 259 중 어느 하나의 컴퓨터 구현 방법에 있어서, TEE는 추론 모델을 저장하고, 방법은 TEE로 하여금 복원된 입력 데이터에 부분적으로 기초하여 출력 데이터를 생성하게 하는 단계를 포함한다. 예 261. 장치로서, 회로; 회로에 결합된 메모리를 포함하고, 메모리는 명령어들을 저장하고, 명령어들은 회로 에 의해 실행될 때 회로로 하여금, 추론 모델에 대한 훈련 데이터를 수신하고- 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추론 모델을 훈련하게 한다. 예 262. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회 로로 하여금, 복수의 샘플들을 갖는 훈련 데이터 세트를 수신하고; 훈련 데이터 세트에서의 샘플에 기초하여 2 개 이상의 추론 모델들에 대한 분류 데이터를 생성하고; 2개 이상의 추론 모델들 각각에 대해 생성된 분류 데이 터가 매칭되는지를 결정하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 추가하고; 2개 이상의 추론 모델 각각에 대해 생성된 분 류 데이터가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 추가하게 한다. 예 263. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회 로로 하여금, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련 되지 않은 추론 모델을 선택하고; 입력 디바이스로부터의 입력 데이터를 사용하여 입력 디바이스 특성들에 기초 하여 선택된 훈련되지 않은 추론 모델을 훈련하게 한다. 예 264. 장치로서, 회로; 및 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회 로로 하여금, 입력 데이터를 수신하고; 입력 데이터를 트랜스코딩하고; 트랜스코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무결성 상태(TSIS) 값을 생성하고; 입력 데이터에 기초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위한 출력으로서 TSIS 값을 제공하게 한다. 예 265. 장치로서, 회로; 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 훈련하는데 이용되는 훈련 데이터 세트에서 적어도 하나의 에러를 검출하고; 복원 훈련 데 이터를 수신하고; 복원 훈련 데이터로 추론 모델을 훈련하게 한다. 예 266. 장치로서, 회로; 명령어들을 저장하는 메모리를 포함하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 적어도 공개 모델 파티션 및 비공개 모델 파티션으로 분할하고; 적대적 모델에 부분적으로 기초하여 공개 모델 파티션을 훈련하게 한다. 예 267. 예 262 내지 예 266 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어 들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델에 대한 훈련 데이터를 수신하고- 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추론 모델을 훈련하게 한 다. 예 268. 예 261 또는 예 263 내지 예 266 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하 고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 복수의 샘플들을 갖는 훈련 데이터 세트를 수신하고; 훈련 데이터 세트에서의 샘플에 기초하여 2개 이상의 추론 모델들에 대한 분류 데이터를 생성하고; 2 개 이상의 추론 모델들 각각에 대해 생성된 분류 데이터가 매칭되는지를 결정하고; 2개 이상의 추론 모델 각각 에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 추가하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 추가하게 한다. 예 269. 예 261 내지 예 262 중 어느 하나 또는 예 264 내지 예 266 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 입력 디바이스에 대한 입 력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련되지 않은 추론 모델을 선택하고; 입력 디바이스로부터의 입력 데이터를 사용하여 입력 디바이스 특성들에 기초하여 선택된 훈련되지 않은 추론 모델을 훈련하게 한다. 예 270. 예 261 내지 예 263 중 어느 하나 또는 예 265 내지 예 266 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 입력 데이터를 수신하고; 입 력 데이터를 트랜스코딩하고; 트랜스코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무결성 상태(TSIS) 값을 생성하고; 입력 데이터에 기초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위한 출력으로서 TSIS 값을제공하게 한다. 예 271. 예 261 내지 예 264 또는 예 266 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하 고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 훈련하는데 이용되는 훈련 데이터 세트 에서 적어도 하나의 에러를 검출하고; 복원 훈련 데이터를 수신하고; 복원 훈련 데이터로 추론 모델을 훈련하게 한다. 예 272. 예 261 내지 예 265 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 추가로 저장하고, 이 명령어 들은 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 적어도 공개 모델 파티션 및 비공개 모델 파티션으로 분할하고; 적대적 모델에 부분적으로 기초하여 공개 모델 파티션을 훈련하게 한다. 예 273. 예 261 내지 예 272 중 어느 하나의 장치에 있어서, 복수의 예상 출력 각각은 복수의 클래스 중 하나 에 대응한다. 예 274. 예 261 내지 예 273 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금 신뢰적 추론 모델을 훈련하기 위해 상관된 출력 데이터 세트를 이용하게 하는 명령어들을 저장한다. 예 275. 예 261 내지 예 274 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은 회로 에 의해 실행될 때 회로로 하여금 하나 이상의 훈련 흐름에서 상관되지 않은 출력 데이터를 이용하게 한다. 예 276. 예 261 내지 예 275 중 어느 하나의 장치에 있어서, 하나 이상의 훈련 흐름은 복원력 훈련 흐름 또는 적대적 훈련 흐름을 포함한다. 예 277. 예 261 내지 예 276 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 이 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 상관되지 않은 출력 데이터 또는 상관된 출력 데이터 중 하나에 추가되 지 않은 훈련 데이터 세트 내의 나머지 샘플을 결정하고; 훈련 데이터 세트에서의 나머지 샘플에 기초하여 2개 이상의 추론 모델들에 대한 추가적인 분류 데이터를 생성하고; 2개 이상의 추론 모델들 각각에 대해 생성된 추 가적인 분류 데이터가 매칭되는지 여부를 결정하고; 2개 이상의 추론 모델들 각각에 대해 생성된 추가적인 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트에서의 나머지 샘플을 상관되지 않은 출력 데이터에 추가하고; 2 개 이상의 추론 모델 각각에 대해 생성된 추가적인 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 나머지 샘 플을 상관된 출력 데이터에 추가하게 한다. 예 278. 예 261 내지 예 277 중 어느 하나의 장치에 있어서, 2개 이상의 추론 모델은 FFNN(feed-forward neural network), RNN(recurrent neural network), CNN(convolutional neural network), LSTM(long/short term memory) 네트워크, DNN(deep neural network), 베이지안 신뢰 네트워크(Bayesian belief network), 및 볼 츠만 머신 중 2개 이상을 포함한다. 예 279. 예 261 내지 예 278 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로가 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하게 하는 명령어들을 저장한다. 예 280. 예 261 내지 예 279 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로가 입력 디바이스로부터의 입력 디바이스 특성들을 요청하게 하는 명령어들을 저장한다. 예 281. 예 261 내지 예 280 중 어느 하나의 장치에 있어서, 훈련되지 않은 추론 모델들은 피드포워드 신경망 (FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 282. 예 261 내지 예 281 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 입력 데이터에 기초하여 추론 모델을 훈련하고; 출력에서 추론 모델을 제공 하게 한다. 예 283. 예 261 내지 예 282 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 추론 모델에 기초하여 추론 모델 무결성 상태(IMIS) 값을 생성하고; 출력에 서 IMIS 값을 제공하게 한다. 예 284. 예 261 내지 예 283 중 어느 하나의 장치에 있어서, TSIS 값, IMIS 값, 및 추론 모델은 튜플로서 출력 에 제공된다. 예 285. 예 261 내지 예 284 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은 회로 에 의해 실행될 때 회로로 하여금 입력 데이터를 트랜스코딩하기 위해 입력 데이터를 수학적 표현으로 변환하게 한다. 예 286. 예 261 내지 예 285 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금, 암호 함수를 사용하여 TSIS 값을 생성하게 하는 명령어들을 저장한다. 예 287. 예 261 내지 예 286 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 훈련 데이터 세트를 수신하고; 훈련 데이터 세트로 추론 모드를 훈련하게 한다. 예 288. 예 261 내지 예 287 중 어느 하나의 장치에 있어서, 복원 훈련 데이터는 복수의 입력의 표시들 및 복 수의 입력 각각에 대한 대응하는 출력을 포함한다. 예 289. 예 261 내지 예 288 중 어느 하나의 장치에 있어서, 복수의 출력들은 적어도 하나의 에러와 연관된 입 력들을 적어도 하나의 와일드카드 클래스로 분류하도록 배열된 적어도 하나의 와일드카드 클래스에 대응한다. 예 290. 예 261 내지 예 289 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 추론 모델의 층 L1 및 L2를 비공개 모델 파티션에 추가하고; 공개 모델 파티 션으로부터 추론 모델의 층 L1 및 L2를 제거하게 한다. 예 291. 예 261 내지 예 290 중 어느 하나의 장치에 있어서, 메모리는 명령어들을 저장하고, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 비공개 모델 파티션에 대한 성능 비용을 평가하고- 성능 비용은 신뢰할 수 있는 실행 환경에서 비공개 모델 파티션을 실행하는 것에 부분적으로 기초함 -; 성능 비용에 의해 성능 예산이 초과되는지를 결정하고; 성능 비용에 의해 성능 예산이 초과되지 않는다는 결정에 기초하여 비공개 모델 파티션 에 추론 모델의 층 L3을 추가하고 공개 모델 파티션으로부터 추론 모델의 층 L3을 제거 예 292. 예 261 내지 예 291 중 어느 하나의 장치에 있어서, 메모리는, 회로에 의해 실행될 때, 회로로 하여금 성능 비용에 의해 성능 예산이 초과된다는 결정에 기초하여 추론 모델의 층 L2을 비공개 모델 파티션으로부터 제 거하고 추론 모델의 층 L2를 공개 모델 파티션에 추가하게 하는 명령어들을 저장한다. 예 293. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은 컴퓨팅 디바이스에 의해 실행될 때, 컴퓨팅 디바이스로 하여금: 추론 모델에 대한 훈련 데이터를 수신하고- 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추론 모델을 훈련하게 한다. 예 294. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 복수의 샘플들을 갖는 훈련 데이터 세트를 수신하고; 훈련 데이터 세트에서의 샘플에 기초하여 2개 이상의 추론 모델들에 대한 분류 데이터를 생성하고; 2개 이상의 추론 모델들 각각에 대해 생성된 분류 데 이터가 매칭되는지를 결정하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈 련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 추가하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 추가하게 한다. 예 295. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈 련되지 않은 추론 모델을 선택하고; 입력 디바이스로부터의 입력 데이터를 사용하여 입력 디바이스 특성들에 기 초하여 선택된 훈련되지 않은 추론 모델을 훈련하게 한다. 예 296. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 입력 데이터를 수신하고; 입력 데이터를 트랜스코딩하고; 트랜스코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무결성 상태(TSIS) 값을 생성하고; 입력 데이터에 기초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위한 출력으로서 TSIS 값을 제공하게 한다. 예 297. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 훈련하는데 이용되는 훈련 데이터 세트에서 적어도 하나의 에러를 검출하고; 복원 훈련 데이터를 수신하고; 복원 훈련 데이터로 추론 모델을 훈련하게 한다. 예 298. 명령어들을 포함하는 비일시적 컴퓨터 판독가능 저장 매체로서, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금, 추론 모델을 적어도 공개 모델 파티션 및 비공개 모델 파티션으로 분할하고; 적대적 모델에 부 분적으로 기초하여 공개 모델 파티션을 훈련하게 한다. 예 299. 예 294 내지 예 298 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가 로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 추론 모델에 대한 훈련 데이터를 수신하고 - 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수 의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추 론 모델을 훈련하게 한다. 예 300. 예 295 내지 예 298 중 어느 하나의 예 293의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어 들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 복수의 샘플들을 갖는 훈련 데이 터 세트를 수신하고; 훈련 데이터 세트에서의 샘플에 기초하여 2개 이상의 추론 모델들에 대한 분류 데이터를 생성하고; 2개 이상의 추론 모델들 각각에 대해 생성된 분류 데이터가 매칭되는지를 결정하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 추가하고; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 추가하게 한다. 예 301. 예 293 내지 예 294 중 어느 하나 또는 예 296 내지 예 297 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 입력 디바이스에 대한 입력 디바이스 특성들을 결정하고; 입력 디바이스 특성들에 기초하여 훈련되지 않은 추론 모델 을 선택하고; 입력 디바이스로부터의 입력 데이터를 사용하여 입력 디바이스 특성들에 기초하여 선택된 훈련되 지 않은 추론 모델을 훈련하게 한다. 예 302. 예 293 내지 예 295 중 어느 하나 또는 예 297 내지 예 298 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 입력 데이터를 수신하고; 입력 데이터를 트랜스코딩하고; 트랜스코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무 결성 상태(TSIS) 값을 생성하고; 입력 데이터에 기초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위한 출력으로서 TSIS 값을 제공하게 한다. 예 303. 예 293 내지 예 295 또는 예 298 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령 어들을 추가로 저장하고, 이 명령어들은 회로에 의해 실행될 때 회로로 하여금: 추론 모델을 훈련하는데 이용되 는 훈련 데이터 세트에서 적어도 하나의 에러를 검출하고; 복원 훈련 데이터를 수신하고; 복원 훈련 데이터로 추론 모델을 훈련하게 한다. 예 304. 예 293 내지 예 297 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 추가 로 저장하고, 이 명령어들은 회로에 의해 실행될 때, 회로로 하여금: 추론 모델을 적어도 공개 모델 파티션 및 비공개 모델 파티션으로 분할하고; 적대적 모델에 부분적으로 기초하여 공개 모델 파티션을 훈련하게 한다. 예 305. 예 293 내지 예 304 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 예상 출력 각각은 복수의 클래스 중 하나에 대응한다. 예 306. 예 293 내지 예 305 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로로 하여금 신뢰적 추론 모델을 훈련하기 위해 상관된 출력 데이터 세트를 이용하게 하는 명령어들을 저장한다. 예 307. 예 293 내지 예 306 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로로 하여금 하나 이상의 훈련 흐름에서 상관되지 않은 출력 데이터를 이용하게 하는 명령어들을 저장 한다. 예 308. 예 293 내지 예 307 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 하나 이상의 훈련 흐름은 복원력 훈련 흐름 또는 적대적 훈련 흐름을 포함한다. 예 309. 예 293 내지 예 308 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들을 저장 하고, 명령어들은, 회로에 의해 실행될 때, 회로로 하여금: 상관되지 않은 출력 데이터 또는 상관된 출력 데이 터 중 하나에 추가되지 않은 훈련 데이터 세트 내의 나머지 샘플을 결정하고; 훈련 데이터 세트에서의 나머지 샘플에 기초하여 2개 이상의 추론 모델들에 대한 추가적인 분류 데이터를 생성하고; 2개 이상의 추론 모델들 각 각에 대해 생성된 추가적인 분류 데이터가 매칭되는지 여부를 결정하고; 2개 이상의 추론 모델들 각각에 대해생성된 추가적인 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트에서의 나머지 샘플을 상관되지 않은 출력 데이터에 추가하고; 2개 이상의 추론 모델 각각에 대해 생성된 추가적인 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 나머지 샘플을 상관된 출력 데이터에 추가하게 한다. 예 310. 예 293 내지 예 309 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 2개 이상의 추론 모델은 FFNN(feed-forward neural network), RNN(recurrent neural network), CNN(convolutional neural network), LSTM(long/short term memory) 네트워크, DNN(deep neural network), 베이지안 신뢰 네트워크 (Bayesian belief network), 및 볼츠만 머신 중 2개 이상을 포함하는 비일시적 컴퓨터 판독가능 저장 매체. 예 311. 예 293 내지 예 310 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로로 하여금, 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하게 하는 명령어들을 저장한다. 예 312. 예 293 내지 예 311 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 회로에 의해 실행 될 때, 회로가 입력 디바이스로부터 입력 디바이스 특성들을 요청하게 하는 명령어들을 저장한다. 예 313. 예 293 내지 예 312 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 훈련되지 않은 추 론 모델들은 피드포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트 워크, 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 314. 예 293 내지 예 313 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 입력 데이터에 기초하여 추론 모델을 훈련하고; 출력에서 추론 모델을 제공 하게 한다. 예 315. 예 293 내지 예 314 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 추론 모델에 기초하여 추론 모델 무결성 상태(IMIS) 값을 생성하고; 출력에 서 IMIS 값을 제공하게 한다. 예 316. 예들 293 내지 315 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, TSIS 값, IMIS 값, 및 추론 모델은 출력에서 튜플로서 제공된다. 예 317. 예 293 내지 예 316 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 입력 데이터를 트랜스코딩하기 위해 입력 데이터를 수학적 표현으로 변환하 게 한다. 예 318. 예 293 내지 예 317 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금 암호 함수를 갖는 TSIS 값을 생성하게 한다. 예 319. 예 293 내지 예 318 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 훈련 데이터 세트를 수신하고; 훈련 데이터 세트로 추론 모드를 훈련하게 한다. 예 320. 예 293 내지 예 319 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복원 훈련 데이터 는 복수의 입력들의 표시들 및 복수의 입력들 각각에 대한 대응하는 출력을 포함한다. 예 321. 예 293 내지 예 320 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 복수의 출력들은 적어도 하나의 에러와 연관된 입력들을 적어도 하나의 와일드카드 클래스로 분류하도록 배열된 적어도 하나의 와일드카드 클래스에 대응한다. 예 322. 예 293 내지 예 321 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금: 추론 모델의 층 L1 및 L2를 비공개 모델 파티션에 추가하고; 공개 모델 파티 션으로부터 추론 모델의 층 L1 및 L2를 제거하게 한다. 예 323. 예 293 내지 예 322 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은, 회로 에 의해 실행될 때, 회로로 하여금, 비공개 모델 파티션에 대한 성능 비용을 평가하고- 성능 비용은 신뢰할 수 있는 실행 환경에서 비공개 모델 파티션을 실행하는 것에 부분적으로 기초함 -; 성능 비용에 의해 성능 예산이 초과되는지를 결정하고; 성능 비용에 의해 성능 예산이 초과되지 않는다는 결정에 기초하여 비공개 모델 파티션 에 추론 모델의 층 L3을 추가하고 공개 모델 파티션으로부터 추론 모델의 층 L3을 제거예 324. 예 293 내지 예 323 중 어느 하나의 비일시적 컴퓨터 판독가능 저장 매체에 있어서, 명령어들은 회로 에 의해 실행될 때 회로로 하여금 성능 비용에 의해 성능 예산이 초과된다는 결정에 기초하여 추론 모델의 층 L2 을 비공개 모델 파티션으로부터 제거하고 추론 모델의 층 L2를 공개 모델 파티션에 추가하게 한다. 예 325. 컴퓨터 구현 방법으로서, 추론 모델에 대한 훈련 데이터를 수신하는 단계- 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추론 모델을 훈련하는 단계를 포함한다. 예 326. 컴퓨터 구현 방법으로서, 복수의 샘플들을 갖는 훈련 데이터 세트를 수신하는 단계; 훈련 데이터 세트 에서의 샘플에 기초하여 2개 이상의 추론 모델에 대한 분류 데이터를 생성하는 단계; 2개 이상의 추론 모델 각 각에 대해 생성된 분류 데이터가 매칭되는지 여부를 결정하는 단계; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 부가하는 단계; 및 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 부가하는 단계를 포함한다. 예 327. 컴퓨터 구현 방법으로서, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하는 단계; 입력 디바이 스 특성들에 기초하여 훈련되지 않은 추론 모델을 선택하는 단계; 및 입력 디바이스로부터의 입력 데이터를 이 용하여 입력 디바이스 특성들에 기초하여 선택된 훈련되지 않은 추론 모델을 훈련하는 단계를 포함한다. 예 328. 컴퓨터 구현 방법으로서, 입력 데이터를 수신하는 단계; 입력 데이터를 트랜스코딩하는 단계; 트랜스 코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무결성 상태(TSIS) 값을 생성하는 단계; 및 입력 데이터에 기 초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위해 출력으로서 TSIS 값을 제공하는 단계를 포함한다. 예 329. 컴퓨터 구현 방법으로서, 추론 모델을 훈련하는데 이용되는 훈련 데이터 세트에서 적어도 하나의 에러 를 검출하는 단계; 복원 훈련 데이터를 수신하는 단계; 및 복원 훈련 데이터로 추론 모델을 훈련하는 단계를 포 함한다. 예 330. 컴퓨터 구현 방법으로서, 추론 모델을 적어도 공개 모델 파티션 및 비공개 모델 파티션으로 분할하는 단계; 및 적대적 모델에 부분적으로 기초하여 공개 모델 파티션을 훈련하는 단계를 포함한다. 예 331. 예 326 내지 예 330 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델에 대한 훈련 데이터를 수 신하는 단계- 훈련 데이터는 복수의 입력 및 복수의 적대적 입력의 표시들을 포함하고, 훈련 데이터는 복수의 입력 및 복수의 적대적 입력 각각에 대한 예상 출력의 표시들을 추가로 포함함 -; 및 훈련 데이터에 부분적으로 기초하여 추론 모델을 훈련하는 단계를 포함한다. 예 332. 예 325 또는 예 327 내지 예 330 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 샘플들을 갖는 훈련 데이터 세트를 수신하는 단계; 훈련 데이터 세트에서의 샘플에 기초하여 2개 이상의 추론 모델에 대한 분 류 데이터를 생성하는 단계; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되는지 여부를 결정 하는 단계; 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트 내의 샘플을 상관되지 않은 출력 데이터에 부가하는 단계; 및 2개 이상의 추론 모델 각각에 대해 생성된 분류 데이터 가 매칭될 때 훈련 데이터 세트 내의 샘플을 상관된 출력 데이터에 부가하는 단계를 포함한다. 예 333. 예 325 내지 예 326 중 어느 하나 또는 예 328 내지 예 330 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 디바이스에 대한 입력 디바이스 특성들을 결정하는 단계; 입력 디바이스 특성들에 기초하여 훈련되지 않은 추론 모델을 선택하는 단계; 및 입력 디바이스로부터의 입력 데이터를 이용하여 입력 디바이스 특성들에 기초하여 선택된 훈련되지 않은 추론 모델을 훈련하는 단계를 포함한다. 예 334. 예 325 내지 예 327 중 어느 하나 또는 예 329 내지 예 330 중 어느 하나의 컴퓨터 구현 방법에 있어 서, 입력 데이터를 수신하는 단계; 입력 데이터를 트랜스코딩하는 단계; 트랜스코딩된 입력 데이터에 기초하여 훈련 데이터 세트 무결성 상태(TSIS) 값을 생성하는 단계; 및 입력 데이터에 기초하여 추론 모델이 훈련된다는 검증을 가능하게 하기 위해 출력으로서 TSIS 값을 제공하는 단계를 포함한다. 예 335. 예 325 내지 예 328 또는 예 330 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델을 훈련하는데 이용되는 훈련 데이터 세트에서 적어도 하나의 에러를 검출하는 단계; 복원 훈련 데이터를 수신하는 단계; 및 복원 훈련 데이터로 추론 모델을 훈련하는 단계를 포함한다.예 336. 예 325 내지 예 329 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델을 적어도 공개 모델 파티 션 및 비공개 모델 파티션으로 분할하는 단계; 및 적대적 모델에 부분적으로 기초하여 공개 모델 파티션을 훈련 하는 단계를 포함한다. 예 337. 예 325 내지 예 336 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 예상 출력 각각은 복수의 클 래스 중 하나에 대응한다. 예 338. 예 325 내지 예 337 중 어느 하나의 컴퓨터 구현 방법에 있어서, 신뢰적 추론 모델을 훈련하기 위해 상관된 출력 데이터 세트를 이용하는 단계를 포함한다. 예 339. 예 325 내지 예 338 중 어느 하나의 컴퓨터 구현 방법에 있어서, 하나 이상의 훈련 흐름에서 상관되지 않은 출력 데이터를 이용하는 단계를 포함한다. 예 340. 예 325 내지 예 339 중 어느 하나의 컴퓨터 구현 방법에 있어서, 하나 이상의 훈련 흐름은 복원력 훈 련 흐름 또는 적대적 훈련 흐름을 포함한다. 예 341. 예 325 내지 예 340 중 어느 하나의 컴퓨터 구현 방법에 있어서, 상관되지 않은 출력 데이터 또는 상 관된 출력 데이터 중 하나에 추가되지 않은 훈련 데이터 세트 내의 나머지 샘플을 결정하는 단계; 훈련 데이터 세트에서의 나머지 샘플에 기초하여 2개 이상의 추론 모델들에 대한 추가적인 분류 데이터를 생성하는 단계; 2 개 이상의 추론 모델들 각각에 대해 생성된 추가적인 분류 데이터가 매칭되는지 여부를 결정하는 단계; 2개 이 상의 추론 모델들 각각에 대해 생성된 추가적인 분류 데이터가 매칭되지 않을 때, 훈련 데이터 세트에서의 나머 지 샘플을 상관되지 않은 출력 데이터에 추가하는 단계; 및 2개 이상의 추론 모델 각각에 대해 생성된 추가적인 분류 데이터가 매칭될 때 훈련 데이터 세트 내의 나머지 샘플을 상관된 출력 데이터에 추가하는 단계를 포함한 다. 예 342. 예 325 내지 예 341 중 어느 하나의 컴퓨터 구현 방법에 있어서, 2개 이상의 추론 모델은 피드포워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 심층 신경망(DNN), 베이지안 신뢰 네트워크, 및 볼츠만 머신 중 2개 이상을 포함하는 컴퓨터 구현 방법. 예 343. 예 325 내지 예 342 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 데이터 및 입력 디바이스 특성들을 수신하는 단계를 포함한다. 예 344. 예 325 내지 예 343 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 디바이스로부터 입력 디바이스 특성들을 요청하는 단계를 포함한다. 예 345. 예 325 내지 예 344 중 어느 하나의 컴퓨터 구현 방법에 있어서, 훈련되지 않은 추론 모델들은 피드포 워드 신경망(FFNN), 순환 신경망(RNN), 컨볼루션 신경망(CNN), 장기/단기 메모리(LSTM) 네트워크, 베이지안 신 뢰 네트워크, 및 볼츠만 머신 중 하나 이상을 포함한다. 예 346. 예 325 내지 예 345 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터에 기초하여 추론 모델을 훈련하는 단계; 및 출력에서 추론 모델을 제공하는 단계를 포함한다. 예 347. 예 325 내지 예 346 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델에 기초하여 추론 모델 무 결성 상태(IMIS) 값을 생성하는 단계; 및 IMIS 값을 출력에 제공하는 단계를 포함한다. 예 348. 예들 325 내지 347 중 어느 하나의 컴퓨터 구현 방법에 있어서, TSIS 값, IMIS 값, 및 추론 모델은 출 력에서 튜플로서 제공된다. 예 349. 예 325 내지 예 348 중 어느 하나의 컴퓨터 구현 방법에 있어서, 입력 데이터를 트랜스코딩하기 위해 입력 데이터를 수학적 표현으로 변환하는 단계를 포함한다. 예 350. 예 325 내지 예 349 중 어느 일 예의 컴퓨터 구현 방법에 있어서, 암호 함수로 TSIS 값을 발생시키는 단계를 포함한다. 예 351. 예 325 내지 예 350 중 어느 하나의 컴퓨터 구현 방법에 있어서, 훈련 데이터 세트를 수신하는 단계; 및 훈련 데이터 세트로 추론 모드를 훈련하는 단계를 포함한다. 예 352. 예 325 내지 예 351 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복원 훈련 데이터는 복수의 입력의 표시들 및 복수의 입력 각각에 대한 대응하는 출력을 포함한다.예 353. 예 325 내지 예 352 중 어느 하나의 컴퓨터 구현 방법에 있어서, 복수의 출력들은 적어도 하나의 에러 와 연관된 입력들을 적어도 하나의 와일드카드 클래스로 분류하도록 배열된 적어도 하나의 와일드카드 클래스에 대응한다. 예 354. 예 325 내지 예 353 중 어느 하나의 컴퓨터 구현 방법에 있어서, 추론 모델의 층 L1 및 L2를 비공개 모델 파티션에 추가하는 단계; 및 공개 모델 파티션으로부터 추론 모델의 층 L1 및 L2을 제거하는 단계를 포함한 다. 예 355. 예 325 내지 예 354 중 어느 하나의 컴퓨터 구현 방법에 있어서, 비공개 모델 파티션에 대한 성능 비 용을 평가하고- 성능 비용은 신뢰할 수 있는 실행 환경에서 비공개 모델 파티션을 실행하는 것에 부분적으로 기 초함 -; 성능 비용에 의해 성능 예산이 초과되는지를 결정하는 단계; 및 성능 비용에 의해 성능 예산이 초과되 지 않는다는 결정에 기초하여 비공개 모델 파티션에 추론 모델의 층 L3을 추가하고 공개 모델 파티션으로부터 추 론 모델의 층 L3을 제거하는 단계를 포함한다. 예 356. 예 325 내지 예 355 중 어느 하나의 컴퓨터 구현 방법에 있어서, 성능 비용에 의해 성능 예산이 초과 된다는 결정에 기초하여, 비공개 모델 파티션으로부터 추론 모델의 층 L2을 제거하고 공개 모델 파티션에 추론 모델의 층 L2를 추가하는 단계를 포함한다. 예 357. 예 175 내지 예 260 중 어느 하나 또는 예 325 내지 예 356 중 어느 하나의 기능을 구현하도록 배열된 수단을 포함하는 장치.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10a 도면10b 도면11 도면12 도면13 도면14 도면15 도면16 도면17 도면18 도면19 도면20 도면21 도면22 도면23a 도면23b 도면24 도면25 도면26 도면27 도면28 도면29 도면30 도면31 도면32 도면33 도면34 도면35 도면36 도면37 도면38 도면39 도면40 도면41 도면42 도면43 도면44 도면45 도면46 도면47 도면48 도면49 도면50 도면51 도면52 도면53 도면54 도면55 도면56 도면57 도면58 도면59 도면60 도면61 도면62 도면63 도면64 도면65 도면66 도면67 도면68a 도면68b 도면68c 도면69 도면70 도면71 도면72 도면73"}
{"patent_id": "10-2021-7016452", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 제1 예시적 추론 환경을 예시한다. 도 2는 제1 예시적 기법을 예시한다. 도 3은 제2 예시적 기법을 예시한다.도 4는 강화된 시스템의 제1 예를 예시한다. 도 5는 로직 흐름의 제1 예를 예시한다. 도 6은 강화된 시스템의 제2 예를 예시한다. 도 7은 로직 흐름의 제2 예를 예시한다. 도 8은 강화된 시스템의 제3 예를 예시한다. 도 9는 강화된 시스템의 제4 예를 예시한다. 도 10a는 제5 예시적 강화된 시스템을 예시하는 도면이다. 도 10b는 제1 예시적 훈련/시험 데이터 세트를 예시한다. 도 11은 강화된 시스템의 제6 예를 예시한다. 도 12는 로직 흐름의 제3 예를 예시한다. 도 13은 로직 흐름의 제4 예를 예시한다. 도 14는 강화된 시스템의 제7 예를 예시한다. 도 15는 입력 디바이스를 예시한다. 도 16은 제3 예시적 기법을 예시하는 도면이다. 도 17은 로직 흐름의 제5 예를 예시한다. 도 18은 제1 예시적 추론 환경을 예시한다. 도 19는 제2 예시적 추론 환경을 예시한다. 도 20은 제3 예시적 추론 환경을 예시한다. 도 21은 제4 예시적 기법을 예시하는 도면이다. 도 22는 추론 모델에 대한 예시적 도메인을 묘사하는 그래프를 예시한다. 도 23a는 제4 예시적 추론 환경을 예시한다. 도 23b는 제2 예시적 훈련/시험 데이터 세트를 예시한다. 도 24는 제5 예시적 추론 환경을 예시한다. 도 25는 제6 예시적 로직 흐름을 예시한다. 도 26은 강화된 시스템의 제8 예를 예시한다. 도 27은 제6 예시적 추론 환경을 예시한다. 도 28은 제7 예시적 로직 흐름을 예시한다. 도 29는 제8 예시적 추론 환경을 예시한다. 도 30은 제8 예시적 로직 흐름을 예시한다. 도 31은 강화된 시스템의 제9 예를 예시한다. 도 32는 제9 예시적 로직 흐름을 예시한다. 도 33은 제5 예시적 기법을 예시한다. 도 34는 강화된 시스템의 제10 예를 예시한다. 도 35는 로직 흐름의 제10 예를 예시한다. 도 36은 강화된 시스템의 제11 예를 예시한다. 도 37은 로직 흐름의 제11 예를 예시한다.도 38은 강화된 시스템의 제12 예를 예시한다. 도 39는 로직 흐름의 제12 예를 예시한다. 도 40은 강화된 시스템의 제13 예를 예시한다. 도 41은 로직 흐름의 제13 예를 예시한다. 도 42는 제14 예시적 강화된 시스템을 예시한다. 도 43은 제5 예시적 기법을 예시한다. 도 44는 에러들을 포함하는 제1 예시적 훈련/시험 데이터 세트를 예시한다. 도 45는 제1 예의 복원 훈련/시험 데이터를 예시한다. 도 46은 제14 예시적 로직 흐름을 예시한다. 도 47은 제15 예시적 강화된 시스템을 예시한다. 도 48은 제1 예시적 추론 모델을 예시한다. 도 49는 제6 예시적 기법을 예시한다. 도 50은 강화된 시스템의 제16 예를 예시한다. 도 51은 로직 흐름의 제15 예를 예시한다. 도 52는 제1 예시적 적대적 모델 훈련 연결을 예시한다. 도 53은 제9 예시적 추론 환경을 예시한다. 도 54는 제7 예시적 기법을 예시한다. 도 55는 제10 예시적 추론 환경을 예시한다. 도 56은 제11 예시적 추론 환경을 예시한다. 도 57은 제8 예시적 기법을 예시한다. 도 58은 제17 예시적 강화된 시스템을 예시한다. 도 59는 로직 흐름의 제16 예를 예시한다. 도 60은 로직 흐름의 제17 예를 예시한다. 도 61은 로직 흐름의 제18 예를 예시한다. 도 62는 제18 예시적 강화된 시스템을 예시한다. 도 63은 로직 흐름의 제19 예를 예시한다. 도 64는 로직 흐름의 제20 예를 예시한다. 도 65는 제19 예시적 강화된 시스템을 예시한다. 도 66은 강화된 시스템의 제20 예를 예시한다. 도 67은 로직 흐름의 제21 예를 예시한다. 도 68a는 제2 예시적 적대적 모델 훈련 연결을 예시한다. 도 68b는 제3 예시적 적대적 모델 훈련 연결을 예시한다. 도 68c는 제4 예시적 적대적 모델 훈련 연결을 예시한다. 도 69는 예시적 컴퓨터 판독가능 매체를 예시한다. 도 70은 예시적 컴퓨팅 시스템을 예시한다. 도 71은 제1 예시적 시스템을 예시한다.도 72는 제2 예시적 시스템을 예시한다. 도 73은 제3 예시적 시스템을 예시한다."}
