{"patent_id": "10-2022-0064714", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0164944", "출원번호": "10-2022-0064714", "발명의 명칭": "프로세싱 장치 및 이의 동작 방법과 이를 포함하는 전자 장치", "출원인": "삼성전자주식회사", "발명자": "김호영"}}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세싱 장치에 있어서,연산 규칙을 저장하는 제1 버퍼;곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기;상기 연산기의 피연산자들을 저장하고, 상기 연산 규칙을 기초로 상기 피연산자들을 상기 연산기의 큐(queue)에인큐잉하는 제2 버퍼; 및상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 카운터(counter)를 포함하고,상기 곱셈기들 각각은,상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 제2 경로를 갖는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 곱셈기들 각각은,곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수 미만인 경우 상기 제1 경로를 통해 상기 도출된곱셈 결과를 수신하고, 상기 큐로부터 현재 곱셈 순서에 해당하는 피연산자를 수신하며, 상기 수신된 곱셈 결과와 상기 수신된 피연산자에 곱셈을 수행하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 곱셈기들 각각은, 상기 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수와 동일한 경우, 상기 제2 경로를 통해 상기 도출된 곱셈 결과를 상기 덧셈기로 전달하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 연산기는,상기 피연산자들 중 곱셈이 수행되지 않는 피연산자를 상기 큐로부터 수신하여 저장하는 레지스터공개특허 10-2023-0164944-3-를 더 포함하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 연산기는,상기 레지스터에 저장된 피연산자 및 상기 덧셈기의 출력값을 합산하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 제1 버퍼는,상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 상기 카운터에 전달하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 제2 버퍼는 상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는경우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 연산기는,상기 곱셈기들 각각의 출력을 저장하는 각 버퍼 및 상기 덧셈기의 출력을 저장하는 버퍼를 더 포함하는, 프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "전자 장치에 있어서,호스트; 피연산자들을 저장하는 메모리; 및상기 호스트로부터 명령어를 수신하고, 상기 메모리로부터 상기 피연산자들을 수신하며, 상기 수신된 명령어를기초로 상기 수신된 피연산자들에 연산을 수행하는 프로세서공개특허 10-2023-0164944-4-를 포함하고,상기 프로세서는, 연산 규칙을 저장하는 제1 버퍼;곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기;상기 수신된 피연산자들을 저장하고, 상기 연산 규칙을 기초로 상기 수신된 피연산자들을 상기 연산기의 큐에인큐잉하는 제2 버퍼; 및상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 카운터를 포함하고,상기 곱셈기들 각각은,상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 제2 경로를 갖는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 곱셈기들 각각은,곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수 미만인 경우 상기 제1 경로를 통해 상기 도출된곱셈 결과를 수신하고, 상기 큐로부터 현재 곱셈 순서에 해당하는 피연산자를 수신하며, 상기 수신된 곱셈 결과와 상기 수신된 피연산자에 곱셈을 수행하는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 곱셈기들 각각은, 상기 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수와 동일한 경우, 상기 제2 경로를 통해 상기 도출된 곱셈 결과를 상기 덧셈기로 전달하는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 연산기는,상기 큐에 인큐잉된 피연산자들 중 곱셈이 수행되지 않는 피연산자를 상기 큐로부터 수신하여 저장하는 레지스터를 더 포함하는,전자 장치.공개특허 10-2023-0164944-5-청구항 13 제12항에 있어서,상기 연산기는,상기 레지스터에 저장된 피연산자 및 상기 덧셈기의 출력값을 합산하는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 제1 버퍼는,상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 상기 카운터에 전달하는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제9항에 있어서,상기 제2 버퍼는 상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는경우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉하는,프로세싱 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제9항에 있어서,상기 연산기는,상기 곱셈기들 각각의 출력을 저장하는 각 버퍼 및 상기 덧셈기의 출력을 저장하는 버퍼를 더 포함하는, 전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제9항에 있어서,상기 호스트는,소스 코드를 컴파일하는 동안 상기 연산 규칙을 생성하고, 상기 프로세서는,상기 연산 규칙을 상기 제1 버퍼에 저장하는,전자 장치."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "공개특허 10-2023-0164944-6-프로세싱 장치의 동작 방법에 있어서,제1 버퍼에 연산 규칙을 저장하는 단계;곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기의 피연산자들을 제2 버퍼에 저장하는 단계;상기 연산 규칙을 기초로 상기 피연산자들을 상기 연산기의 큐에 인큐잉하는 단계; 상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 단계; 및상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각의 출력을 제1 경로를통해 상기 곱셈기들 각각에 입력하고, 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할 때상기 곱셈기들 각각의 출력을 제2 경로를 통해 상기 덧셈기로 입력하는 단계를 포함하는, 프로세싱 장치의 동작 방법."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는 경우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉하는 단계를 더 포함하는,프로세싱 장치의 동작 방법."}
{"patent_id": "10-2022-0064714", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제18항에 있어서,상기 곱셈기들 각각은,상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 상기 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와동일할 때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 상기 제2 경로를 갖는,프로세싱 장치의 동작 방법."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "프로세싱 장치가 개시된다. 일 실시 예는 연산 규칙을 저장하는 제1 버퍼, 곱셈을 반복 수행하는 곱셈기들과 덧 셈기를 포함하는 연산기, 상기 연산기의 피연산자들을 저장하고, 상기 연산 규칙을 기초로 상기 피연산자들을 상 기 연산기의 큐에 인큐잉하는 제2 버퍼, 및 상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시 하는 카운터를 포함하고, 상기 곱셈기들 각각은 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만 일 때 상기 곱셈기들 각각의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 상기 곱셈기들 각각 의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할 때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 제2 경로를 갖는다."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 개시는 프로세싱 장치 및 이의 동작 방법과 이를 포함하는 전자 장치에 관한 것이다."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 어플리케이션(또는 딥러닝 어플리케이션)의 활용도가 높아짐에 따라 다양한 가속기가 사용되고 있다. 인공지능 어플리케이션의 많은 부분이 매트릭스 곱셈 연산으로 구성으로 구성되어 있다. 일부 가속기는 매트릭 스 곱셈 연산을 수행하는 텐서 코어(tensor core)를 포함하고 있고 텐서 코어를 통해 인공지능 어플리케이션의 가속을 지원할 수 있다."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기; 상기 연산기의 피연산자들을 저장하고, 상기 연산 규칙을 기초로 상기 피연산자들을 상기 연산기의 큐(queue)에 인큐잉하는 제2 버퍼; 및 상기 연산기에 상기 곱 셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 카운터(counter)를 포함한다. 상기 곱셈기들 각각은 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각 의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할 때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 제2 경로를 갖는다. 상기 곱셈기들 각각은 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수 미만인 경우 상기 제1 경 로를 통해 상기 도출된 곱셈 결과를 수신하고, 상기 큐로부터 현재 곱셈 순서에 해당하는 피연산자를 수신하며, 상기 수신된 곱셈 결과와 상기 수신된 피연산자에 곱셈을 수행할 수 있다. 상기 곱셈기들 각각은 상기 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수와 동일한 경우, 상 기 제2 경로를 통해 상기 도출된 곱셈 결과를 상기 덧셈기로 전달할 수 있다. 상기 연산기는 상기 피연산자들 중 곱셈이 수행되지 않는 피연산자를 상기 큐로부터 수신하여 저장하는 레지스 터를 더 포함할 수 있다. 상기 연산기는 상기 레지스터에 저장된 피연산자 및 상기 덧셈기의 출력값을 합산할 수 있다. 상기 제1 버퍼는 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 상기 카운터에 전달할 수 있다. 상기 제2 버퍼는 상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는 경우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉할 수 있다. 상기 연산기는 상기 곱셈기들 각각의 출력을 저장하는 각 버퍼 및 상기 덧셈기의 출력을 저장하는 버퍼를 더 포 함할 수 있다. 일 측에 따른 전자 장치는 호스트; 피연산자들을 저장하는 메모리; 및 상기 호스트로부터 명령어를 수신하고, 상기 메모리로부터 상기 피연산자들을 수신하며, 상기 수신된 명령어를 기초로 상기 수신된 피연산자들에 연산 을 수행하는 프로세서를 포함한다. 상기 프로세서는 연산 규칙을 저장하는 제1 버퍼; 곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기; 상기 수신된 피연산자들을 저장하고, 상기 연산 규칙을 기초로 상기 수신된 피연산자들을 상기 연산기의 큐에 인큐잉하는 제2 버퍼; 및 상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 카운터를 포 함한다. 상기 곱셈기들 각각은 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각 의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할 때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 제2 경로를 갖는다. 상기 곱셈기들 각각은 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수 미만인 경우 상기 제1 경 로를 통해 상기 도출된 곱셈 결과를 수신하고, 상기 큐로부터 현재 곱셈 순서에 해당하는 피연산자를 수신하며, 상기 수신된 곱셈 결과와 상기 수신된 피연산자에 곱셈을 수행한다. 상기 곱셈기들 각각은 상기 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 상기 지시된 횟수와 동일한 경우, 상 기 제2 경로를 통해 상기 도출된 곱셈 결과를 상기 덧셈기로 전달할 수 있다. 상기 연산기는 상기 큐에 인큐잉된 피연산자들 중 곱셈이 수행되지 않는 피연산자를 상기 큐로부터 수신하여 저 장하는 레지스터를 더 포함할 수 있다. 상기 연산기는 상기 레지스터에 저장된 피연산자 및 상기 덧셈기의 출력값을 합산할 수 있다. 상기 제1 버퍼는 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수를 상기 카운터에 전달할 수 있다. 상기 제2 버퍼는 상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는 경우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉할수 있다. 상기 연산기는 상기 곱셈기들 각각의 출력을 저장하는 각 버퍼 및 상기 덧셈기의 출력을 저장하는 버퍼를 더 포 함할 수 있다. 상기 호스트는 소스 코드를 컴파일하는 동안 상기 연산 규칙을 생성할 수 있고, 상기 프로세서는 상기 연산 규 칙을 상기 제1 버퍼에 저장할 수 있다. 일 측에 따른 프로세싱 장치의 동작 방법은 제1 버퍼에 연산 규칙을 저장하는 단계; 곱셈을 반복 수행하는 곱셈 기들과 덧셈기를 포함하는 연산기의 피연산자들을 제2 버퍼에 저장하는 단계; 상기 연산 규칙을 기초로 상기 피 연산자들을 상기 연산기의 큐에 인큐잉하는 단계; 상기 연산기에 상기 곱셈기들 각각이 수행해야할 곱셈의 횟수 를 지시하는 단계; 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각 의 출력을 제1 경로를 통해 상기 곱셈기들 각각에 입력하고, 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시 된 횟수와 동일할 때 상기 곱셈기들 각각의 출력을 제2 경로를 통해 상기 덧셈기로 입력하는 단계를 포함한다. 상기 동작 방법은 상기 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는 경 우, 상기 주어진 피연산자가 반복하여 곱해지는 횟수를 상기 주어진 피연산자와 맵핑하여 상기 큐에 인큐잉하는 단계를 더 포함할 수 있다. 상기 곱셈기들 각각은 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수 미만일 때 상기 곱셈기들 각각 의 출력이 상기 곱셈기들 각각에 입력되게 하기 위한 상기 제1 경로 및 상기 곱셈기들 각각의 곱셈 수행 횟수가 상기 지시된 횟수와 동일할 때 상기 곱셈기들 각각의 출력이 상기 덧셈기에 입력되게 하기 위한 상기 제2 경로 를 가질 수 있다."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "실시예들에 대한 특정한 구조적 또는 기능적 설명들은 단지 예시를 위한 목적으로 개시된 것으로서, 다양한 형 태로 변경되어 구현될 수 있다. 따라서, 실제 구현되는 형태는 개시된 특정 실시예로만 한정되는 것이 아니며, 본 명세서의 범위는 실시예들로 설명한 기술적 사상에 포함되는 변경, 균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어를 다양한 구성요소들을 설명하는데 사용될 수 있지만, 이런 용어들은 하나의 구성요소 를 다른 구성요소로부터 구별하는 목적으로만 해석되어야 한다. 예를 들어, 제1 구성요소는 제2 구성요소로 명 명될 수 있고, 유사하게 제2 구성요소는 제1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 설명된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 으로 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들 을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 해당 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 일 실시예에 따른 가속기와 호스트를 설명하기 위한 도면이다. 도 1을 참조하면, 호스트는 어플리케이션을 컴파일하여 바이너리 코드(또는 바이너리 파일)를 생성할 수 있고, 생성된 바이너리 코드를 가속기로 전달할 수 있다. 호스트는, 예를 들어, CPU(central processing unit)를 포함할 수 있다. 가속기는 어플리케이션의 연산(calculation)을 수행하거나 가속화하기 위한 하드웨어 가속기일 수 있다. 가속기는 호스트로부터 수신한 바이너리 코드를 실행(execution)할 수 있다. 가속기는, 예를 들어, GPU(graphics processing unit), NPU(neural processing unit)일 수 있으나 이에 제한되지 않는다. 가속기와 호스트는 단일 칩(single chip)으로 구현될 수 있다. 또는, 가속기 는 호스트와 물리적으로 독립된 별개의 칩(chip)으로 구현될 수 있다. 가속기는 딥러닝(deep learning) 어플리케이션의 GEMM(general matrix to matrix multiplication)을 수행 할 수 있다. 또한, 가속기는 GEMM을 사용하지 않은 어플리케이션의 연산(예: MAD(multiply-add), ADP(asymmetric dot product))을 수행할 수 있다. 어떤 수학식은 복수의 항(term)들을 포함할 수 있고, 각 항 의 곱셈 횟수는 동일하지 않을 수 있다. 각 항의 곱셈횟수가 동일하지 않은 연산을 본 명세서에서 \"ADP\"라 지 칭될 수 있다. 일례로, \"x·y·z + a·b\"에서 첫번째 항(x·y·z)의 곱셈 횟수는 2이고, 두번째 항(a·b)의 곱 셈 횟수는 1인데, 각 항의 곱셈 횟수가 서로 동일하지 않다. 이러한 연산을 \"ADP\"라 지칭할 수 있다. 기존의 GPU 내의 텐서 코어는 딥러닝 어플리케이션의 GEMM을 가속화할 수 있도록 구성된다. 일부 어플리케이션 에는 GEMM이 사용되지 않고 이에 따라 기존의 GPU는 GEMM이 사용되지 않는 어플리케이션을 처리할 수 없다. 특 히, 기존의 텐서 코어는 위에서 설명한 ADP를 수행할 수 없다. 일 실시 예에 따른 가속기는 ADP를 위한 명령어를 호스트로부터 수신한 경우 ADP를 수행할 수 있다. 이하, 아래에서 가속기가 ADP를 수행하 는 것에 대해서 설명한다. 도 2는 일 실시 예에 따른 가속기를 설명하기 위한 블록도이다. 도 2를 참조하면, 가속기는 레지스터 파일(register file), 외부 버퍼(outer buffer), 및 복수 의 프로세싱 코어(processing core)들(230-1 내지 230-n)을 포함한다. 가속기는 호스트로부터 하나 이상의 명령어를 수신할 수 있고, 메모리(미도시)(예: DRAM(dynamic random access memory))에 접근하여 메모리에서 피연산자(operand)들을 읽어올 수 있으며, 레지스터 파일(21 0)에 피연산자들을 저장할 수 있다. 피연산자들은 프로세싱 코어들(230-1 내지 230-n)에 입력될 수 있고 프로 세싱 코어들(230-1 내지 230-n)은 피연산자들을 기초로 연산(예: ADP)을 수행할 수 있다. 피연산자들은 프로세 싱 코어들(230-1 내지 230-n)의 입력값들 또는 입력 데이터로 다르게 표현될 수 있다. 가속기는 레지스터 파일에 저장된 피연산자들을 프로세싱 코어들(230-1 내지 230-n) 각각의 피연산자 들로 구분할 수 있고, 프로세싱 코어들(230-1 내지 230-n) 각각의 피연산자들을 outer 버퍼에 저장할 수 있다. 프로세싱 코어들(230-1 내지 230-n) 각각은 자신의 피연산자들을 outer 버퍼로부터 수신할 수 있다. 프로 세싱 코어들(230-1 내지 230-n) 각각은 자신의 피연산자들을 기초로 연산(예: ADP)을 수행할 수 있다. 이하, 프로세싱 코어(230-1)의 동작에 대해 설명한다. 가속기 내의 다른 프로세싱 코어들 각각은 프로세싱 코어 (230-1)와 동일하게 동작할 수 있다. 프로세싱 코어(230-1)에 대한 설명은 가속기 내의 다른 프로세싱 코 어들 각각에 적용될 수 있다. 도 3a 내지 도 6은 일 실시 예에 따른 가속기 내의 프로세싱 코어의 동작의 일례를 설명하기 위한 도면이다. 도 3a를 참조하면, 프로세싱 코어(230-1)는 패턴 테이블, 내부(inner) 피연산자 버퍼, 피연산자 큐들 (330-1 내지 330-m), 카운터(counter), 및 ADPU(asymmetric dot product unit)들(350-1 내지 350-m)을 포 함할 수 있다. ADPU들(350-1 내지 350-m) 각각은 곱셈을 반복 수행하는 곱셈기(multiplier)들과 하나 이상의 덧셈기(adder)를 포함할 수 있다. 아래에서 자세히 설명하겠지만, 곱셈기들 각각은 곱셈기들 각각의 출력이 곱셈기들 각각에 입 력되게 하기 위한 제1 경로 및 곱셈기들 각각의 출력이 덧셈기에 입력되게 하기 위한 제2 경로를 가질 수 있다. 곱셈기들 각각은 자신의 곱셈 수행 횟수가 카운터로부터 지시받은 곱셈 횟수 미만이면 자신의 출력을 제1 경로를 통해 수신할 수 있다. 곱셈기들 각각은 자신의 곱셈 수행 횟수가 카운터로부터 지시받은 곱셈 횟 수와 동일하면 자신의 출력을 제2 경로를 통해 덧셈기로 전달할 수 있다. ADPU들(350-1 내지 350-m) 각각은 연산기(calculator) 또는 연산 회로(calculation circuit)로 달리 표현될 수 있다. 프로세싱 코어(230-1)는 패턴 테이블에 연산 규칙(calculation rule)을 저장할 수 있다. 연산 규칙은 프 로세싱 코어(230-1)가 주어진 피연산자 큐에 피연산자를 인큐잉하는 규칙을 나타낼 수 있다. 일례로, 호스트 는 가속기로 \"명령어 j=a·b·e·f + a·b·g + c·e·f + c·g + i\"를 전달할 수 있다. 도 3b에 도시된 예에서, 호스트는 소스 코드를 컴파일하는 동안 \"피연산자 a는 주어진 피연산자 큐의 제1 컬 럼(column)(360-1)의 첫번째 엔트리와 제2 column(360-2)의 첫번째 엔트리에 인큐잉되고 피연산자 b는 제1 column(360-1)의 두번째 엔트리와 제2 column(360-2)의 두번째 엔트리에 인큐잉되며, 피연산자 c는 제3 column(360-3)의 첫번째 엔트리와 제4 column(360-4)의 첫번째 엔트리에 인큐잉되고 피연산자 e는 제1 column(360-1)의 세번째 엔트리와 제3 column(360-3)의 두번째 엔트리에 인큐잉되고 피연산자 f는 제1 column(360-1)의 네번째 엔트리와 제3 column(360-3)의 세번째 엔트리에 인큐잉되고 피연산자 g는 제4 column(360-4)의 두번째 엔트리에 인큐잉된다\"의 연산 규칙을 파악할 수 있다. 후술하겠지만, 프로세싱 코어 (230-1)는 연산 규칙에 따라 피연산자 큐들(330-1 내지 330-m) 각각에 ADPU들(350-1 내지 350-m) 각각의 피연 산자들을 인큐잉할 수 있다. 패턴 테이블은 버퍼일 수 있다. 호스트는 소스 코드를 컴파일하여 바이너리 코드를 생성할 수 있고 생성된 바이너리 코드를 가속기로 전달할 수 있다. 이 때, 생성된 바이너리 코드에는 앞서 설명한 연산 규칙이 포함될 수 있다. 가속기는 바이너리 코드 내의 연산 규칙을 패턴 테이블에 저장할 수 있다. 도 3a로 돌아와서, 패턴 테이블은 ADPU들(350-1 내지 350-m) 각각에 곱셈기들 각각이 수행해야할 곱셈의 횟수를 카운터에 전달할 수 있다. ADPU들(350-1 내지 350-m) 내의 곱셈기들 각각은 지시된 횟수만큼의 곱 셈을 수행할 수 있다. 프로세싱 코어(230-1)는 outer 버퍼로부터 프로세싱 코어(230-1)의 피연산자들을 수신할 수 있고, 수신된 피연산자들을 inner 피연산자 버퍼에 저장할 수 있다. 프로세싱 코어(230-1)는 inner 피연산자 버퍼(32 0)에 저장된 피연산자들을 패턴 테이블 내의 연산 규칙을 기초로 피연산자 큐들(330-1 내지 330-m)에 인큐 잉할 수 있다. 도 4에 도시된 예에서, 프로세싱 코어(230-1)는 outer 버퍼로부터 프로세싱 코어(230-1)의 피연산자들 (a1~am, b1~bm, c1~cm, e1~em, f1~fm, g1~gm, i1~im)을 수신할 수 있다. 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 outer 버퍼에 저장된 피연산자들을 피연산자 큐(230-1)(또는 ADPU(250-1))의 피 연산자들(a1, b1, c1, e1, f1, g1, i1)(410-1) 내지 피연산자 큐(230-m)(또는 ADPU(250-m))의 피연산자들(am, bm, cm, em, fm, gm, im)(410-m)로 구분(또는 분류)하여 inner 피연산자 버퍼에 저장할 수 있다. 도 4에 도시된 예에서, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 피연산자들(a1, b1, c1, e1, f1, g1, i1)(410-1)을 피연산자 큐(230-1)에 인큐잉(또는 삽입)할 수 있다. 도 4에 도시된 예와 같이, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 참조하여 피연산자 큐(230-1)의 제1 column(450-1)에 피연산자들(a1, b1, e1, f1)을 순서대로 채울 수 있고, 제2 column(450-2)에 피연산자들(a1, b1, g1)을 순서 대로 채울 수 있다. 프로세싱 코어(230-1)는 제3 column(450-3)에 피연산자들(c1, e1, f1)을 순서대로 채워 넣 을 수 있고, 제4 column(450-4)에 피연산자들(c1, g1)을 순서대로 채워 넣을 수 있다. 프로세싱 코어(230-1)는 피연산자 큐(230-1)의 빈(empty) 엔트리들 각각에 \"1\"을 채워 넣을 수 있다. 마찬가지로, 도 4에 도시된 예에서, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 피연산 자들(am, bm, cm, em, fm, gm, im)(410-m)을 피연산자 큐(230-m)에 인큐잉할 수 있고, 피연산자 큐(230-m)의 빈 엔트리들 각각에 \"1\"을 채워 넣을 수 있다. 도 4의 피연산자 큐(230-1)에 i1이 도시되어 있지 않은데, 이는 피연산자 큐(230-1)가 i1을 저장하고 있지 않는 것을 의미하는 것은 아니다. 마찬가지로 도 4의 피연산자 큐(230-m)에 im이 도시되어 있지 않은데, 이는 피연 산자 큐(230-m)가 im을 저장하고 있지 않는 것을 의미하는 것은 아니다. 앞서 설명한 것과 같이, 피연산자 큐 (230-1)는 i1을 저장하고, 피연산자 큐(230-m)는 im을 저장한다. 카운터는 ADPU들(350-1 내지 350-m) 각각에 각 곱셈기가 수행해야할 곱셈의 횟수를 지시할 수 있다. 도 4 에 도시된 예에서, 카운터는 ADPU(350-1)에 곱셈기들(410 내지 440) 각각은 총 3회의 곱셈을 수행해야함을 지시할 수 있다. 다시 말해, 카운터는 제1 곱셈기가 a1·b1·e1·f1를 최종 곱셈 결과로 출력하기 위 해 총 3회의 곱셈을 수행해야함을 ADPU(350-1)에 지시할 수 있다. 카운터는 제2 곱셈기가 a1·b1·g1 ·1을 최종 곱셈 결과로 출력하기 위해 총 3회의 곱셈을 수행해야함을 ADPU(350-1)에 지시할 수 있다. 마찬가 지로, 카운터는 제3 곱셈기 및 제4 곱셈기 각각이 총 3회의 곱셈을 수행해야함을 ADPU(350-1)에 지시할 수 있다. 이와 유사하게, 카운터는 ADPU(350-m)에 곱셈기들 각각은 총 3회의 곱셈을 수행해야함을 지시할 수 있다. ADPU(350-1)는 피연산자 큐(230-1)로부터 첫번째 순서에 해당하는 피연산자들(a1, a1, c1, c1)을 수신할 수 있고, 두번째 순서에 해당하는 피연산자들(b1, b1, e1, g1)을 수신할 수 있다. 곱셈기들(410 내지 440) 각각은 첫번째 순서의 피연산자와 두번째 순서의 피연산자에 곱셈(또는 1st 곱셈)을 수 행할 수 있다. 도 5a에 도시된 예에서, 제1 곱셈기는 피연산자(a1)와 피연산자(b1)에 곱셈을 수행하여 곱 셈 결과(a1·b1)를 도출할 수 있고, 제2 곱셈기는 피연산자(a1)와 피연산자(b1)에 곱셈을 수행하여 곱셈 결 과(a1·b1)를 도출할 수 있다. 제3 곱셈기는 피연산자(c1)와 피연산자(e1)에 곱셈을 수행하여 곱셈 결과(c1 ·e1)를 도출할 수 있고, 제4 곱셈기는 피연산자(c1)와 피연산자(g1)에 곱셈을 수행하여 곱셈 결과(c1·g1) 를 도출할 수 있다. 도 5a에 도시된 예에서, 곱셈 수행 횟수가 현재 1회이고 지시된 횟수(3회) 미만일 수 있다. 이 경우 제1 곱셈 기는 제1 경로(510-1)를 통해 곱셈 결과(a1·b1)를 수신할 수 있다. 마찬가지로, 나머지 곱셈기들(420 내 지 440) 각각은 곱셈 결과를 제1 경로(520-1, 530-1, 540-1)들 각각을 통해 수신할 수 있다. 곱셈기들(410 내지 440)은 피연산자 큐(230-1)로부터 세번째 순서의 피연산자들(e1, g1, f1, 1)을 수신할 수 있 다. 곱셈기들(410 내지 440) 각각은 세번째 순서의 피연산자들 각각과 제1 경로들(510-1, 520-1, 530-1, 540- 1) 각각을 통해 수신한 곱셈 결과에 곱셈(또는 2nd 곱셈)을 수행할 수 있다. 다시 말해, 제1 곱셈기는 세 번째 순서의 피연산자(e1)과 제1 경로(510-1)를 통해 수신한 곱셈 결과(a1·b1)에 곱셈을 수행하여 곱셈 결과(a1 ·b1·e1)를 도출할 수 있고, 제2 곱셈기는 세번째 순서의 피연산자(g1)과 제1 경로(510-2)를 통해 수신한 곱셈 결과(a1·b1)에 곱셈을 수행하여 곱셈 결과(a1·b1·g1)를 도출할 수 있다. 제3 곱셈기는 세번째 순서 의 피연산자(f1)과 제1 경로(510-3)를 통해 수신한 곱셈 결과(c1·e1)에 곱셈을 수행하여 곱셈 결과(c1·e1·f1) 를 도출할 수 있고, 제4 곱셈기는 세번째 순서의 피연산자과 제1 경로(510-4)를 통해 수신한 곱셈 결과 (c1·g1)에 곱셈을 수행하여 곱셈 결과(c1·g1)를 도출할 수 있다. 곱셈 수행 횟수가 현재 2회이고 지시된 횟수(3회) 미만일 수 있다. 이 경우, 제1 곱셈기는 제1 경로(510- 1)를 통해 곱셈 결과(a1·b1·e1)를 수신할 수 있다. 마찬가지로, 나머지 곱셈기들(420 내지 440) 각각은 곱셈결과를 제1 경로(520-1, 530-1, 540-1)들 각각을 통해 수신할 수 있다. 곱셈기들(410 내지 440)은 피연산자 큐(230-1)로부터 네번째 순서의 피연산자들(f1, 1, 1, 1)을 수신할 수 있다. 제1 곱셈기는 네번째 순서의 피연산자(f1)과 제1 경로(510-1)를 통해 수신한 곱셈 결과(a1·b1·e 1)에 곱셈(또는 3rd 곱셈)을 수행하여 곱셈 결과(a1·b1·e1·f1)를 도출할 수 있다. 이와 유사하게, 나머지 곱 셈기들(420 내지 440) 각각은 곱셈을 수행할 수 있다. 곱셈기들(410 내지 440) 각각의 곱셈 수행 횟수가 현재 3회이고 지시된 횟수(3회)와 동일할 수 있다. 이 경우, 제1 곱셈기는 마지막 곱셈 결과(a1·b1·e1·f1)를 덧셈기에 전달할 수 있고 제2 곱셈기는 마지 막 곱셈 결과(a1·b1·g1)를 덧셈기에 전달할 수 있다. 제3 곱셈기는 마지막 곱셈 결과(c1·e1·f1)를 덧셈기에 전달할 수 있고 제4 곱셈기는 마지막 곱셈 결과(c1·g1)를 덧셈기에 전달할 수 있다. 덧셈기는 제1 곱셈기의 마지막 곱셈 결과(a1·b1·e1·f1)와 제2 곱셈기의 마지막 곱셈 결과(a1· b1·g1)를 합산할 수 있고, 합산 결과를 덧셈기로 전달할 수 있다. 덧셈기는 제3 곱셈기의 마지막 곱셈 결과(c1·e1·f1)와 제4 곱셈기의 마지막 곱셈 결과(c1·g 1)를 합산할 수 있고, 합산 결과를 덧셈기로 전달할 수 있다. 덧셈기는 덧셈기의 합산 결과와 덧셈기의 합산 결과를 합산할 수 있고, 덧셈기 자신의 합 산 결과를 덧셈기로 전달할 수 있다. 레지스터는 ADPU(350-1)의 피연산자들 중 곱셈이 수행되지 않는 피연산자(i1)를 피연산자 큐(230-1)로부터 수신하여 저장할 수 있다. 덧셈기는 레지스터로부터 피연산자(i1)를 수신할 수 있고, 피연산자(i1)와 덧셈기의 합산 결과에 합산을 수행할 수 있다. 덧셈기(또는 ADPU(350-1))는 연산 결과(j1)를 도 5b에 도시된 예와 같이 레지스터 파일에 저장할 수 있다. 마찬가지로, ADPU(350-m)는 연산 결과(jm)를 레지스터 파일에 저장할 수 있다. 레지스터 파일 은 ADPU들(350-1 내지 350-m) 각각의 최종 연산 결과(j1 내지 jm)를 저장할 수 있다. 도 6에 ADPU(350-1) 내의 곱셈기 및 곱셈기의 출력단과 연결된 버퍼의 예시가 도시된다. 도 6 에 도시된 예에서, 곱셈기는 제1 입력 경로를 통해 피연산자(a1)을 피연산자 큐(230-1)로부터 수신할 수 있고 제2 입력 경로를 통해 피연산자(b1)을 피연산자 큐(230-1)로부터 수신할 수 있다. 곱셈기는 피연산자(a1)와 피연산자(b1)에 곱셈(1st 곱셈)을 수행하여 곱셈 결과(a1·b1)를 도출할 수 있고, 버퍼에 곱셈 결과(a1·b1)를 저장할 수 있다. 곱셈기는 곱셈 수행 횟수(1회)가 지시된 횟수(3회) 미 만인 경우 버퍼에 저장된 곱셈 결과(a1·b1)를 제1 경로(510-1)를 통해 수신할 수 있고, 제2 입력 경로 를 통해 피연산자 큐(230-1)로부터 피연산자(e1)를 수신할 수 있다. 곱셈기는 곱셈 결과(a1·b1)와 피연산자(e1)에 곱셈(2nd 곱셈)을 수행하여 곱셈 결과(a1·b1·e1)를 도출할 수 있고, 버퍼에 곱셈 결과(a1·b1·e1)를 저장할 수 있다. 곱셈기는 곱셈 수행 횟수(2회)가 지시된 횟수(3회) 미만인 경우 버퍼에 저장된 곱셈 결과(a1·b1·e1)를 제1 경로(510-1)를 통해 수신할 수 있고, 제2 입력 경로를 통해 피연산자 큐(230-1)로부터 피연산자(f1)를 수신할 수 있다. 곱셈기는 곱셈 결과(a1·b1·e1)와 피연산자(f1)에 곱셈(3rd 곱셈)을 수행하여 곱셈 결과(a1·b1·e1·f1)를 도출할 수 있고, 버퍼에 곱셈 결과(a1·b1·e1·f1)를 저장할 수 있다. 곱셈기는 곱셈 수행 횟수(3회)가 지시된 횟수(3회)와 동일한 경우 버퍼에 저장된 곱셈 결과(a1·b1·e1·f1)를 제2 경로(510- 2)를 통해 덧셈기로 전달할 수 있다. 곱셈기와 유사하게, 나머지 곱셈기들(410, 420, 430) 각각의 출력단은 나머지 곱셈기들(410, 420, 430) 각 각의 버퍼와 연결될 수 있다. 도 6을 통해 설명한 곱셈기의 동작은 나머지 곱셈기들(410, 420, 430) 각각 에 적용될 수 있어, 나머지 곱셈기들(410, 420, 430) 각각에 대한 상세한 설명을 생략한다. 도 6에 도시되지 않았으나, 덧셈기들(550, 560, 570, 590) 중 하나 이상 또는 전부의 출력단은 버퍼와 연결될 수 있다. 덧셈기들(550, 560, 570, 590) 각각과 연결된 버퍼에는 덧셈기들(550, 560, 570, 590) 각각의 연산 결과가 저장될 수 있다. 도 7 내지 도 9는 일 실시 예에 따른 가속기 내의 프로세싱 코어의 동작의 다른 일례를 설명하기 위한 도면이다. 도 7 내지 도 8을 통해 가속기가 피연산자의 거듭제곱(power) 연산을 포함하는 ADP를 수행하는 것에 대해 설명한다. 이하, 거듭제곱 연산의 예시로 피연산자의 제곱(square) 연산에 해대 설명한다. 도 7을 참조하면, 호스트는 가속기로 \"명령어 j=a2·e·f + a2·g + c·e·f + c·g + i\"를 수신할 수 있다. 호스트는 소스 코드를 컴파일하는 동안 \"피연산자 a 및 피연산자 a가 반복하여 곱해지는 횟수 (예: 2)가 주어진 피연산자 큐의 제1 column(360-1)의 첫번째 엔트리와 제2 column(360-2)의 첫번째 엔트 리에 인큐잉되고, 피연산자 c 및 피연산자 c가 반복하여 곱해지는 횟수(예: 1)가 제3 column(360-3)의 첫번째 엔트리와 제4 column(360-4)의 첫번째 엔트리에 인큐잉되며, 피연산자 e 및 피연산자 e가 반복하여 곱해지는 횟 수(예: 1)가 제1 column(360-1)의 두번째 엔트리와 제3 column(360-3)의 두번째 엔트리에 인큐잉되고, 피연산자 f 및 피연산자 f가 반복하여 곱해지는 횟수(예: 1)가 제1 column(360-1)의 세번째 엔트리와 제3 column(360- 3)의 세번째 엔트리에 인큐잉되고, 피연산자 g 및 피연산자 g가 반복하여 곱해지는 횟수(예: 1)가 제2 column(360-2)의 두번째 엔트리와 제4 column(360-4)의 두번째 엔트리에 인큐잉된다\"의 연산 규칙을 파악할 수 있다. 가속기는 호스트로부터 연산 규칙을 포함하는 바이너리 코드를 수신할 수 있고, 연산 규칙을 패턴 테 이블에 저장할 수 있다. 패턴 테이블은 ADPU들(350-1 내지 350-m) 각각에 곱셈기들 각각이 수행해야할 곱셈의 횟수를 카운터 에 전달할 수 있다. 프로세싱 코어(230-1)는 outer 버퍼로부터 프로세싱 코어(230-1)의 피연산자들을 수신할 수 있고, 수신된 피연산자들을 inner 피연산자 버퍼에 저장할 수 있다. 프로세싱 코어(230-1)는 inner 피연산자 버퍼(32 0)에 저장된 피연산자들 및 각 피연산자가 반복 곱해지는 횟수를 패턴 테이블 내의 연산 규칙을 기초로 피 연산자 큐들(330-1 내지 330-m)에 인큐잉할 수 있다. 도 8에 도시된 예에서, 프로세싱 코어(230-1)는 outer 버퍼로부터 프로세싱 코어(230-1)의 피연산자들 (a1~am, c1~cm, e1~em, f1~fm, g1~gm, i1~im)을 수신할 수 있다. 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 outer 버퍼에 저장된 피연산자들을 피연산자 큐(230-1)(또는 ADPU(250-1))의 피연산자 들(a1, c1, e1, f1, g1, i1)(810-1) 내지 피연산자 큐(230-m)(또는 ADPU(250-m))의 피연산자들(am, cm, em, fm, gm, im)(810-m)로 구분(또는 분류)하여 inner 피연산자 버퍼에 저장할 수 있다. 도 8에 도시된 예에서, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 피연산자들(a1, c1, e1, f1, g1, i1)(810-1) 및 곱셈이 수행되는 피연산자들(a1, c1, e1, f1, g1) 각각의 반복 곱셈 횟수를 피연산자 큐(230-1)에 인큐잉(또는 삽입)할 수 있다. 도 8에 도시된 예와 같이, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 참조하여, 피연산자 큐(230-1)의 제1 column(820-1)의 첫번째 엔트리에 2와 a1을 채울 수 있고 제1 column(820-1)의 두번째 엔트리에 1과 e1을 채울 수 있으며, 제1 column(820-1)의 세번째 엔트리에 1과 f1을 채울 수 있다. 마찬가지로, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 참조하여, 나머지 column(820-2 내지 820-4)을 채울 수 있다. 프로세싱 코어(230-1)는 피연산자 큐(230-1)의 빈 엔트리 들 각각에 \"1\"을 채워 넣을 수 있다. 마찬가지로, 도 8에 도시된 예에서, 프로세싱 코어(230-1)는 패턴 테이블 내의 연산 규칙을 기초로 피연산 자들(am, cm, em, fm, gm, im)(810-m) 및 곱셈이 수행되는 피연산자들(am, cm, em, fm, gm) 각각의 반복 곱셈 횟수를 피연산자 큐(230-m)에 인큐잉할 수 있다. 또한, 프로세싱 코어(230-1)는 피연산자 큐(230-m)의 빈 엔트리들 각각에 \"1\"을 채워 넣을 수 있다. 카운터는 ADPU들(350-1 내지 350-m) 각각에 각 곱셈기가 수행해야할 곱셈의 횟수를 지시할 수 있다. 도 8 에 도시된 예에서, 카운터는 ADPU(350-1)에 곱셈기들(410 내지 440) 각각은 총 3회의 곱셈을 수행해야함을 지시할 수 있다. 마찬가지로, 카운터는 ADPU(350-m)에 ADPU(350-m)의 곱셈기들 각각은 총 3회의 곱셈을 수행해야함을 지시할 수 있다. ADPU(350-1)는 피연산자 큐(230-1)로부터 피연산자들(a1, a1, c1, c1) 및 피연산자들(a1, a1, c1, c1) 각각의 반 복 곱셈 횟수를 수신할 수 있다. 곱셈기들(410 내지 440) 각각은 피연산자들(a1, a1, c1, c1) 및 피연산자들(a1, a1, c1, c1) 각각의 반복 곱셈 횟 수를 이용하여 피연산자들(a1, a1, c1, c1) 각각의 제곱 연산을 수행할 수 있다. 도 9에 도시된 예에서, 제1 곱 셈기는 피연산자(a1)의 반복 곱셈 횟수가 2회이므로, 피연산자(a1)를 2번 반복 곱셈(또는 피연산자(a1)을 제곱 연산)하여 곱셈 결과((a1)2)를 도출할 수 있고, 제2 곱셈기는 피연산자(a1)의 반복 곱셈 횟수가 2회이 므로, 피연산자(a1)를 2번 반복 곱셈하여 곱셈 결과((a1)2)를 도출할 수 있다. 제3 곱셈기는 피연산자(c 1)의 반복 곱셈 횟수가 1회 이므로, 피연산자(c1)와 \"1\"에 곱셈을 수행할 수 있다. 제4 곱셈기는 피연산자 (c1)의 반복 곱셈 횟수가 1회이므로, 피연산자(c1)와 \"1\"에 곱셈을 수행할 수 있다. 도 9에 도시된 예에서, 곱셈 수행 횟수가 현재 1회이고 지시된 횟수(3회) 미만일 수 있다. 이 경우, 제1 곱셈 기는 제1 경로(510-1)를 통해 곱셈 결과((a1)2)를 수신할 수 있다. 마찬가지로, 나머지 곱셈기들(420 내 지 440) 각각은 곱셈 결과를 제1 경로(520-1, 530-1, 540-1)들 각각을 통해 수신할 수 있다. 곱셈기들(410 내지 440)은 피연산자 큐(230-1)로부터 피연산자들(e1, g1, e1, g1) 및 피연산자들(e1, g1, e1, g1) 각각의 반복 곱셈 횟수를 수신할 수 있다. 제1 곱셈기는 피연산자(c1)의 반복 곱셈 횟수가 1회 이므로, 수신된 피연산자(c1)와 제1 경로(510-1)를 통해 수신한 곱셈 결과((a1)2)에 곱셈을 수행하여 곱셈 결과((a1)2· e1)를 도출할 수 있다. 제2 곱셈기는 피연산자(g1)의 반복 곱셈 횟수가 1회 이므로, 수신된 피연산자(g1) 와 제1 경로(520-1)를 통해 수신한 곱셈 결과((a1)2)에 곱셈을 수행하여 곱셈 결과((a1)2·g1)를 도출할 수 있다. 제3 곱셈기는 수신된 피연산자(e1)와 제1 경로(530-1)를 통해 수신한 곱셈 결과(c1)에 곱셈을 수행하여 곱 셈 결과(c1·e1)를 도출할 수 있고, 제4 곱셈기는 피연산자(g1)와 제1 경로(540-1)를 통해 수신한 곱셈 결 과(c1)에 곱셈을 수행하여 곱셈 결과(c1·g1)를 도출할 수 있다. 곱셈 수행 횟수가 현재 2회이고 지시된 횟수(3회) 미만일 수 있다. 이 경우, 제1 곱셈기는 제1 경로(510- 1)를 통해 곱셈 결과((a1)2·e1)를 수신할 수 있다. 마찬가지로, 나머지 곱셈기들(420 내지 440) 각각은 곱셈 결과를 제1 경로(520-1, 530-1, 540-1)들 각각을 통해 수신할 수 있다. 곱셈기들(410 내지 440)은 피연산자 큐(230-1)로부터 피연산자(f1) 및 피연산자(f1)의 반복 곱셈 횟수를 수신할 수 있다. 제1 곱셈기는 피연산자(f1)의 반복 곱셈 횟수는 1이므로, 피연산자(f1)와 제1 경로(510-1)를 통 해 수신한 곱셈 결과((a1)2·e1)에 곱셈을 수행하여 곱셈 결과((a1)2·e1·f1)를 도출할 수 있다. 이와 유사하게, 나머지 곱셈기들(420 내지 440) 각각은 곱셈을 수행할 수 있다. 곱셈기들(410 내지 440) 각각의 곱셈 수행 횟수가 현재 3회이고 지시된 횟수(3회)와 동일할 수 있다. 이 경우, 제1 곱셈기는 마지막 곱셈 결과((a1)2·e1·f1)를 덧셈기에 전달할 수 있고 제2 곱셈기는 마지막 곱셈 결과((a1)2·g1)를 덧셈기에 전달할 수 있다. 제3 곱셈기는 마지막 곱셈 결과(c1·e1·f1)를 덧 셈기에 전달할 수 있고 제4 곱셈기는 마지막 곱셈 결과(c1·g1)를 덧셈기에 전달할 수 있다.덧셈기는 제1 곱셈기의 마지막 곱셈 결과((a1)2·e1·f1)와 제2 곱셈기의 마지막 곱셈 결과((a1)2 ·g1)를 합산할 수 있고, 합산 결과를 덧셈기로 전달할 수 있다. 덧셈기는 제3 곱셈기의 마지막 곱셈 결과(c1·e1·f1)와 제4 곱셈기의 마지막 곱셈 결과(c1·g 1)를 합산할 수 있고, 합산 결과를 덧셈기로 전달할 수 있다. 덧셈기는 덧셈기의 합산 결과와 덧셈기의 합산 결과를 합산할 수 있고, 덧셈기 자신의 합 산 결과를 덧셈기로 전달할 수 있다. 레지스터는 ADPU(350-1)의 피연산자들 중 곱셈이 수행되지 않는 피연산자(i1)를 저장할 수 있다. 덧셈기는 레지스터로부터 피연산자(i1)를 수신할 수 있고, 피연산자(i1)와 덧셈기의 합산 결과에 합산을 수행할 수 있다. 덧셈기(또는 ADPU(350-1))는 연산 결과(j1)를 레지스터 파일에 저장할 수 있다. 마찬가지로, ADPU(350-m)는 연산 결과(jm)를 레지스터 파일에 저장할 수 있다. 레지스터 파일은 ADPU들(350-1 내 지 350-m) 각각의 최종 연산 결과를 저장할 수 있다. 도 10은 일 실시 예에 따른 프로세싱 장치를 설명하기 위한 블록도이다. 도 10을 참조하면, 프로세싱 장치는 제1 버퍼, 제2 버퍼, 카운터(또는 카운터 회로), 및 연산기를 포함한다. 프로세싱 장치는 위에서 설명한 가속기(또는 프로세싱 코어(230-1))에 해당할 수 있고, 제1 버퍼 는 패턴 테이블에 해당할 수 있으며, 제2 버퍼는 inner 연산자 버퍼에 해당할 수 있고, 카운터는 카운터에 해당할 수 있고, 연산기는 ADPU(350-1)에 해당할 수 있다. 제1 버퍼는 연산 규칙을 저장한다. 제1 버퍼는 연산기 내의 곱셈기들 각각이 수행해야할 곱셈의 횟수를 카운터에 전달할 수 있 다. 카운터는 레지스터를 포함할 수 있고, 제1 버퍼로부터 수신한 횟수를 레지스터에 저장할 수 있다. 제2 버퍼는 연산기의 피연산자들을 저장하고, 연산 규칙을 기초로 연산기의 피연산자들을 연 산기의 큐(예: 피연산자 큐(330-1))에 인큐잉한다. 카운터는 연산기에 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시한다. 연산기는 곱셈을 반복 수행하는 곱셈기들과 하나 이상의 덧셈기를 포함한다. 곱셈기들 각각은 곱셈기들 각각의 곱셈 수행 횟수가 지시된 횟수 미만일 때 곱셈기들 각각의 출력이 곱셈기들 각각에 입력되게 하기 위한 제1 경로 및 곱셈기들 각각의 곱셈 수행 횟수가 지시된 횟수와 동일할 때 곱셈기들 각각의 출력이 덧셈기에 입 력되게 하기 위한 제2 경로를 갖는다. 곱셈기들 각각은 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 지시된 횟수 미만인 경우 도출된 곱셈 결과를 제 1 경로를 통해 수신할 수 있고, 큐로부터 현재 곱셈 순서에 해당하는 피연산자를 수신할 수 있으며, 수신된 곱 셈 결과와 수신된 피연산자에 곱셈을 수행할 수 있다. 곱셈기들 각각은 곱셈 결과를 도출했을 때의 곱셈 수행 횟수가 지시된 횟수와 동일한 경우, 도출된 곱셈 결과를 제2 경로를 통해 덧셈기로 전달할 수 있다. 연산기는 피연산자들 중 곱셈이 수행되지 않는 피연산자(예: i1)를 연산기의 큐로부터 수신하여 저 장하는 레지스터(예: 도 5a의 레지스터)를 더 포함할 수 있다. 연산기는 레지스터(예: 도 5의 레지스터)에 저장된 피연산자 및 덧셈기의 출력값을 합산할 수 있다. 연산기는 곱셈기들 각각의 출력을 저장하는 각 버퍼 및 덧셈기의 출력을 저장하는 버퍼를 더 포함할 수 있다. 제2 버퍼는 곱셈기들 중 적어도 하나의 곱셈기가 주어진 피연산자의 거듭 제곱 연산을 수행하는 경우, 주 어진 피연산자가 반복하여 곱해지는 횟수를 주어진 피연산자와 맵핑하여 연산기의 큐에 인큐잉할 수 있다. 도 1 내지 도 9를 통해 기술된 사항들은 도 10을 통해 기술된 사항들에 적용될 수 있어, 상세한 설명을 생략한 다. 도 11은 일 실시 예에 따른 전자 장치를 설명하기 위한 블록도이다. 도 11을 참조하면, 전자 장치는 호스트, 메모리, 및 프로세서를 포함한다. 전자 장치는 스마트 폰, 테블릿 컴퓨터, 랩톱 컴퓨터, 데스크톱 컴퓨터, 텔레비전, 웨어러블 장치, 보안 시스템, 스마트 홈 시스템, 데이터 센터 등 다양한 컴퓨팅 장치 및/또는 시스템에 탑재될 수 있다. 호스트는 위에서 설명한 호스트에 해당할 수 있고, 프로세서는 위에서 설명한 프로세싱 장치 (또는 가속기)에 해당할 수 있다. 메모리는 프로세서에 의해 연산이 수행되는 피연산자들을 저장한다. 메모리는 휘발성 메모 리(volatile memory)(예: DRAM (dynamic random access memory) 등) 또는 비휘발성 메모리(nonvolatile memory)를 포함할 수 있다. 프로세서는 호스트로부터 명령어를 수신하고, 메모리로부터 피연산자들을 수신하며, 수신된 피연산자들에 수신된 명령어를 기초로 연산을 수행한다. 프로세서는 연산 규칙을 저장하는 제1 버퍼, 곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기, 수신된 피연산자들을 저장하고 수신된 피연산자들을 연산 규칙을 기초로 연산기의 큐에 인 큐잉하는 제2 버퍼, 및 연산기에 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시하는 카운터를 포 함한다. 도 1 내지 도 10을 통해 기술된 사항들은 도 11을 통해 기술된 사항들에 적용될 수 있어 상세한 설명을 생략한 다. 도 12는 일 실시 예에 따른 프로세싱 장치의 동작 방법을 설명하기 위한 흐름도이다. 도 12를 참조하면, 단계 1210에서, 프로세싱 장치는 제1 버퍼에 연산 규칙을 저장한다. 단계 1220에서, 프로세싱 장치는 곱셈을 반복 수행하는 곱셈기들과 덧셈기를 포함하는 연산기의 피 연산자들을 제2 버퍼에 저장한다. 단계 1230에서, 프로세싱 장치는 연산 규칙을 기초로 피연산자들을 연산기의 큐에 인큐잉한다. 단계 1240에서, 프로세싱 장치는 연산기에 곱셈기들 각각이 수행해야할 곱셈의 횟수를 지시한다. 단계 1250에서, 프로세싱 장치는 곱셈기들 각각의 곱셈 수행 횟수가 지시된 횟수 미만일 때 곱셈기들 각 각의 출력을 제1 경로를 통해 곱셈기들 각각에 입력하고, 곱셈기들 각각의 곱셈 수행 횟수가 지시된 횟수와 동 일할 때 곱셈기들 각각의 출력을 제2 경로를 통해 덧셈기로 입력한다. 도 1 내지 도 11을 통해 기술된 사항들은 도 12를 통해 기술된 사항들에 적용될 수 있어 상세한 설명을 생략한 다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하 나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단 독으로 또는 조합하여 저장할 수 있으며 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구 성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 위에서 설명한 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 또는 복수의 소프트웨어 모듈로서 작동하 도록 구성될 수 있으며, 그 역도 마찬가지이다."}
{"patent_id": "10-2022-0064714", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 이를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 청구범위와 균등한 것들도 후술하는 청구범위의 범위에 속한다."}
{"patent_id": "10-2022-0064714", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 가속기와 호스트를 설명하기 위한 도면이다. 도 2는 일 실시 예에 따른 가속기를 설명하기 위한 블록도이다. 도 3a 내지 도 6은 일 실시 예에 따른 가속기 내의 프로세싱 코어의 동작의 일례를 설명하기 위한 도면이다. 도 7 내지 도 9는 일 실시 예에 따른 가속기 내의 프로세싱 코어의 동작의 다른 일례를 설명하기 위한 도면이다. 도 10은 일 실시 예에 따른 프로세싱 장치를 설명하기 위한 블록도이다. 도 11은 일 실시 예에 따른 전자 장치를 설명하기 위한 블록도이다. 도 12는 일 실시 예에 따른 프로세싱 장치의 동작 방법을 설명하기 위한 흐름도이다."}
