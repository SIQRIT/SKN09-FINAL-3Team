{"patent_id": "10-2023-0087888", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0007882", "출원번호": "10-2023-0087888", "발명의 명칭": "서버 비용을 줄이기 위한 전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "김연우"}}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,통신 인터페이스; 및상기 통신 인터페이스와 연결되어 상기 전자 장치를 제어하는 하나 이상의 프로세서;를 포함하며,상기 프로세서는,제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하고,상기 통신 인터페이스를 통해 상기 외부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를구동하여 상기 제1 성능보다 저성능인 제2 성능으로 상기 어플리케이션을 실행하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 상기 제2 인스턴스를 구동하여 상기 제2성능으로 상기 어플리케이션을 실행하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는,제1 서브 프로세서; 및상기 제1 서브 프로세서보다 저성능인 제2 서브 프로세서;를 포함하며,상기 제1 서브 프로세서는,상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하고,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간이 경과하면, 상기 제2 인스턴스를 구동하여 상기어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 상기 어플리케이션의 해상도 중 적어도 하나를 낮추는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 제1 서브 프로세서는,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간보다 큰 제2 시간이 경과하면, 상기 제2 서브 프로세서가 상기 어플리케이션을 실행하도록 제어하는 제1 정보를 상기 제2 서브 프로세서로 제공하고,상기 제2 서브 프로세서는,제3 인스턴스를 구동하여 상기 제2 성능보다 저성능인 제3 성능으로 상기 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하는,공개특허 10-2025-0007882-3-전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 제2 서브 프로세서는,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제2 시간보다 큰 제3 시간이 경과하면, 제4 인스턴스를 구동하여 상기 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면의 스트리밍을 종료하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 제2 서브 프로세서는,상기 통신 인터페이스를 통해 상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제3인스턴스를 구동하여 상기 제3 성능으로 상기 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하고,상기 제1 서브 프로세서가 상기 어플리케이션을 실행하도록 제어하는 제2 정보를 상기 제1 서브 프로세서로 제공하고,상기 제1 서브 프로세서는,상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하고,상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하는,전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제4항에 있어서,상기 제1 정보는,상기 제2 서브 프로세서의 실행 명령 및 상기 어플리케이션의 상태 정보를 포함하고,상기 제1 서브 프로세서는,상기 제1 정보를 상기 제2 서브 프로세서로 제공한 후, 상기 제2 인스턴스의 구동을 종료하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 프로세서는,상기 통신 인터페이스를 통해 상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제1인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는,상기 외부 장치로부터 상기 어플리케이션의 대기 시간에 대한 정보가 수신되면, 상기 대기 시간 동안 상기 제2인스턴스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2025-0007882-4-제1항에 있어서,상기 프로세서는,상기 외부 장치로부터 상기 어플리케이션의 실행 명령이 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하는, 전자 장치."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치의 제어 방법에 있어서,제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하는 단계;상기 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하는 단계; 및상기 외부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를 구동하여 상기 제1 성능보다저성능인 제2 성능으로 상기 어플리케이션을 실행하는 단계;를 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 제2 성능으로 상기 어플리케이션을 실행하는 단계는,상기 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 상기 제2 인스턴스를 구동하여 상기 제2성능으로 상기 어플리케이션을 실행하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 제1 성능으로 어플리케이션을 실행하는 단계는,제1 서브 프로세서가 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하고,상기 제2 성능으로 상기 어플리케이션을 실행하는 단계는,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간이 경과하면, 상기 제1 서브 프로세서보다 저성능인 제2 서브 프로세서가 상기 제2 인스턴스를 구동하여 상기 어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 상기 어플리케이션의 해상도 중 적어도 하나를 낮추는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간보다 큰 제2 시간이 경과하면, 상기 제1 서브 프로세서가 상기 제2 서브 프로세서에 의해 상기 어플리케이션을 실행하도록 제어하는 제1 정보를 상기 제2 서브프로세서로 제공하는 단계; 및상기 제2 서브 프로세서가 제3 인스턴스를 구동하여 상기 제2 성능보다 저성능인 제3 성능으로 상기 어플리케이션을 실행하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제2 시간보다 큰 제3 시간이 경과하면, 상기 제2 서브 프로세서가 제4 인스턴스를 구동하여 상기 어플리케이션을 실행하는 단계; 및상기 어플리케이션 실행에 대응한 화면의 스트리밍을 종료하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,공개특허 10-2025-0007882-5-상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제2 서브 프로세서가 상기 제3 인스턴스를 구동하여 상기 제3 성능으로 상기 어플리케이션을 실행하는 단계;상기 제2 서브 프로세서가 상기 제1 서브 프로세서에 의해 상기 어플리케이션을 실행하도록 제어하는 제2 정보를 상기 제1 서브 프로세서로 제공하는 단계; 및상기 제1 서브 프로세서가 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하는 단계;를 더 포함하는,제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제14항에 있어서,상기 제1 정보는,상기 제2 서브 프로세서의 실행 명령 및 상기 어플리케이션의 상태 정보를 포함하고,상기 제1 서브 프로세서가 상기 제1 정보를 상기 제2 서브 프로세서로 제공한 후, 상기 제2 인스턴스의 구동을종료하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제11항에 있어서,상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1성능으로 상기 어플리케이션을 실행하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제11항에 있어서,상기 외부 장치로부터 상기 어플리케이션의 대기 시간에 대한 정보가 수신되면, 상기 대기 시간 동안 상기 제2인스턴스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제11항에 있어서,상기 제1 성능으로 어플리케이션을 실행하는 단계는,상기 외부 장치로부터 상기 어플리케이션의 실행 명령이 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행하는, 제어 방법."}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 본 전자 장치는 통신 인터페이스 및 통신 인터페이스와 연결되어 전자 장치를 제어하는 하나 이상의 프로세서를 포함하며, 프로세서는 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어하고, 통신 인터페이스 를 통해 외부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를 구동하여 제1 성능보다 저성 능인 제2 성능으로 어플리케이션을 실행할 수 있다."}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 그 제어 방법에 대한 것으로, 더욱 상세하게는 서버 비용을 줄이는 전자 장치 및 그 제 어 방법에 대한 것이다."}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 기술의 발달에 따라 다양한 기능을 제공하는 전자 장치가 개발되고 있다. 특히, 최근에는 클라우드 컴퓨팅 기술을 이용하여 비디오 게임의 스트리밍 원격 플레이가 가능한 시스템이 개발되고 있다. 예를 들어, 도 1a에 도시된 바와 같이, 클라우드 서버는 게임을 렌더링하고, 비디오를 캡쳐하고, 캡쳐한 비디오 를 인코딩하며, 인코딩된 비디오를 RTSP(real time streaming protocol)를 통해 TV와 같은 디스플레이 장치 (client)로 제공할 수 있다. 디스플레이 장치는 인코딩된 비디오를 디코딩하여 재생하며, 사용자 입력이 수신되 면, 사용자 입력을 클라우드 서버로 전송하고, 클라우드 서버는 이를 반영하여 게임을 렌더링할 수 있다. 이 과 정에서 클라우드 서버의 비용이 발생하며, 특히 사용자가 자리를 비운 경우에도 비용이 지속적으로 발생하는 문 제가 있다.또한, 클라우드 서버는 도 1b에 도시된 바와 같이, 사용자마다 서버 인스턴스가 필요하다. 인스턴스는 클라우드 환경에서 실행되는 가상 머신일 수 있다. 예를 들어, 서버 인스턴스는 게임을 클라우드 서버 상에 구동시키고, 디스플레이 장치에 있는 thin client는 사용자 입력을 대응되는 서버 인스턴스로 전송하고, 비디오를 서버 인스 턴스로부터 수신하여 디스플레이할 수 있다. 이러한 서버 인스턴스는 사용자가 게임을 구동하는 경우에만 생성 될 수 있다. 즉, 복수의 사용자에 대한 서버 비용이 발생할 수 있으며, 사용자가 자리를 비울 수록 불필요한 비용이 증가하 는 문제가 있다. 특히, 고성능 서버 인스턴스는 저성능 서버 인스턴스와 비교하여 시간당 비용이 높은 문제도 있다. 이러한 문제를 해결하기 위해, 사용자가 일정 시간 자리를 비운 경우, 사용자가 게임 중인지 확인 후, 이에 대 하여도 일정 시간 사용자의 응답이 없는 경우, 서버 인스턴스를 종료할 수도 있다. 다만, 이 경우 사용자의 의 도와는 무관하게 게임 플레이가 종료되는 문제가 있다. 그에 따라, 이상과 같은 문제를 해결하기 위한 방법이 개발될 필요가 있다."}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "이상과 같은 목적을 달성하기 위한 본 개시의 일 실시 예에 따르면, 전자 장치는 통신 인터페이스 및 상기 통신 인터페이스와 연결되어 상기 전자 장치를 제어하는 하나 이상의 프로세서를 포함하며, 상기 프로세서는 제1 인 스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고, 상기 어플리케이션 실행에 대응한 화면을 외부 장치 로 스트리밍하도록 상기 통신 인터페이스를 제어하고, 상기 통신 인터페이스를 통해 상기 외부 장치로부터 사용 자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를 구동하여 상기 제1 성능보다 성능이 저성능인 제2 성능으 로 상기 어플리케이션을 실행할 수 있다. 또한, 상기 프로세서는 상기 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 상기 제2 인스턴 스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행할 수 있다. 그리고, 상기 프로세서는 제1 서브 프로세서 및 상기 제1 서브 프로세서보다 저성능인 제2 서브 프로세서를 포 함하며, 상기 제1 서브 프로세서는 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행 하고, 상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어 하고, 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간이 경과하면, 상기 제2 인스턴스를 구동하 여 상기 어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 상기 어플리케이션의 해상도 중 적어도 하 나를 낮출 수 있다. 또한, 상기 제1 서브 프로세서는 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간보다 큰 제2 시 간이 경과하면, 상기 제2 서브 프로세서가 상기 어플리케이션을 실행하도록 제어하는 제1 정보를 상기 제2 서브 프로세서로 제공하고, 상기 제2 서브 프로세서는 제3 인스턴스를 구동하여 상기 제2 성능보다 저성능인 제3 성 능으로 상기 어플리케이션을 실행하고, 상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하 도록 상기 통신 인터페이스를 제어할 수 있다. 그리고, 상기 제2 서브 프로세서는 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제2 시간보다 큰 제3 시간이 경과하면, 제4 인스턴스를 구동하여 상기 어플리케이션을 실행하고, 상기 어플리케이션 실행에 대응한 화면의 스트리밍을 종료할 수 있다. 또한, 상기 제2 서브 프로세서는 상기 통신 인터페이스를 통해 상기 외부 장치로부터 상기 사용자 존재에 대응 하는 정보가 수신되면, 상기 제3 인스턴스를 구동하여 상기 제3 성능으로 상기 어플리케이션을 실행하고, 상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제어하고, 상기 제1 서브 프로세서가 상기 어플리케이션을 실행하도록 제어하는 제2 정보를 상기 제1 서브 프로세서로 제공하고, 상기 제1 서브 프로세서는 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실 행하고, 상기 어플리케이션 실행에 대응한 화면을 상기 외부 장치로 스트리밍하도록 상기 통신 인터페이스를 제 어할 수 있다. 그리고, 상기 제1 정보는 상기 제2 서브 프로세서의 실행 명령 및 상기 어플리케이션의 상태 정보를 포함하고, 상기 제1 서브 프로세서는 상기 제1 정보를 상기 제2 서브 프로세서로 제공한 후, 상기 제2 인스턴스의 구동을종료할 수 있다. 또한, 상기 프로세서는 상기 통신 인터페이스를 통해 상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보 가 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행할 수 있다. 그리고, 상기 프로세서는 상기 외부 장치로부터 상기 어플리케이션의 대기 시간에 대한 정보가 수신되면, 상기 대기 시간 동안 상기 제2 인스턴스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행할 수 있다. 또한, 상기 프로세서는 상기 외부 장치로부터 상기 어플리케이션의 실행 명령이 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행할 수 있다. 한편, 본 개시의 일 실시 예에 따르면, 전자 장치의 제어 방법은 제1 인스턴스를 구동하여 제1 성능으로 어플리 케이션을 실행하는 단계, 상기 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하는 단계 및 상기 외 부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를 구동하여 상기 제1 성능보다 저성능인 제2 성능으로 상기 어플리케이션을 실행하는 단계를 포함한다. 또한, 상기 제2 성능으로 상기 어플리케이션을 실행하는 단계는 상기 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 상기 제2 인스턴스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행할 수 있다. 그리고, 상기 제1 성능으로 어플리케이션을 실행하는 단계는 제1 서브 프로세서가 상기 제1 인스턴스를 구동하 여 상기 제1 성능으로 상기 어플리케이션을 실행하고, 상기 제2 성능으로 상기 어플리케이션을 실행하는 단계는 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간이 경과하면, 상기 제1 서브 프로세서보다 저성능 인 제2 서브 프로세서가 상기 제2 인스턴스를 구동하여 상기 어플리케이션 실행에 대응한 화면의 전송 비트 레 이트 또는 상기 어플리케이션의 해상도 중 적어도 하나를 낮출 수 있다. 또한, 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제1 시간보다 큰 제2 시간이 경과하면, 상기 제1 서 브 프로세서가 상기 제2 서브 프로세서에 의해 상기 어플리케이션을 실행하도록 제어하는 제1 정보를 상기 제2 서브 프로세서로 제공하는 단계 및 상기 제2 서브 프로세서가 제3 인스턴스를 구동하여 상기 제2 성능보다 저성 능인 제3 성능으로 상기 어플리케이션을 실행하는 단계를 더 포함할 수 있다. 그리고, 상기 사용자 부재에 대응하는 정보가 수신된 후 상기 제2 시간보다 큰 제3 시간이 경과하면, 상기 제2 서브 프로세서가 제4 인스턴스를 구동하여 상기 어플리케이션을 실행하는 단계 및 상기 어플리케이션 실행에 대 응한 화면의 스트리밍을 종료하는 단계를 더 포함할 수 있다. 또한, 상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제2 서브 프로세서가 상기 제 3 인스턴스를 구동하여 상기 제3 성능으로 상기 어플리케이션을 실행하는 단계, 상기 제2 서브 프로세서가 상기 제1 서브 프로세서에 의해 상기 어플리케이션을 실행하도록 제어하는 제2 정보를 상기 제1 서브 프로세서로 제 공하는 단계 및 상기 제1 서브 프로세서가 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션 을 실행하는 단계를 더 포함할 수 있다. 그리고, 상기 제1 정보는 상기 제2 서브 프로세서의 실행 명령 및 상기 어플리케이션의 상태 정보를 포함하고, 상기 제1 서브 프로세서가 상기 제1 정보를 상기 제2 서브 프로세서로 제공한 후, 상기 제2 인스턴스의 구동을 종료하는 단계를 더 포함할 수 있다. 또한, 상기 외부 장치로부터 상기 사용자 존재에 대응하는 정보가 수신되면, 상기 제1 인스턴스를 구동하여 상 기 제1 성능으로 상기 어플리케이션을 실행하는 단계를 더 포함할 수 있다. 그리고, 상기 외부 장치로부터 상기 어플리케이션의 대기 시간에 대한 정보가 수신되면, 상기 대기 시간 동안 상기 제2 인스턴스를 구동하여 상기 제2 성능으로 상기 어플리케이션을 실행하는 단계를 더 포함할 수 있다. 또한, 상기 제1 성능으로 어플리케이션을 실행하는 단계는 상기 외부 장치로부터 상기 어플리케이션의 실행 명 령이 수신되면, 상기 제1 인스턴스를 구동하여 상기 제1 성능으로 상기 어플리케이션을 실행할 수 있다."}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시의 목적은 사용자가 자리를 비운 경우에 서버 인스턴스의 비용을 줄이기 위한 전자 장치 및 그 제어 방 법을 제공함에 있다. 이하에서는 첨부 도면을 참조하여 본 개시를 상세히 설명한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수 치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. A 또는/및 B 중 적어도 하나라는 표현은 \"A\" 또는 \"B\" 또는 \"A 및 B\" 중 어느 하나를 나타내는 것으로 이해되어 야 한다. 본 명세서에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들 을 한정하지 않는다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것 이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 명세서에서, 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공 지능 전자 장치)를 지칭할 수 있다. 이하 첨부된 도면들을 참조하여 본 개시의 다양한 실시 예를 보다 상세하게 설명한다. 도 2는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 나타내는 블럭도이다. 전자 장치는 인스턴스를 생성하는 장치로서, 서버일 수 있다. 예를 들어, 전자 장치는 외부 장치 로부터 게임의 실행 명령이 수신되면, 인스턴스를 구동하여 게임을 렌더링하고, 비디오를 캡쳐하고, 캡쳐 한 비디오를 인코딩하며, 인코딩된 비디오를 RTSP(real time streaming protocol)를 통해 외부 장치로 전 송할 수 있다. 다만, 이에 한정되는 것은 아니며, 전자 장치는 인스턴스를 생성할 수 있는 장치라면 어떠한 장치라도 무 방하다. 도 2에 따르면, 전자 장치는 통신 인터페이스 및 프로세서를 포함한다. 통신 인터페이스는 다양한 유형의 통신 방식에 따라 다양한 유형의 외부 장치와 통신을 수행하는 구성이다. 예를 들어, 전자 장치는 통신 인터페이스를 통해 외부 장치, 사용자 단말 등과 통신 을 수행할 수 있다. 통신 인터페이스는 와이파이 모듈, 블루투스 모듈, 적외선 통신 모듈 및 무선 통신 모듈 등을 포함할 수 있다. 여기서, 각 통신 모듈은 적어도 하나의 하드웨어 칩 형태로 구현될 수 있다. 와이파이 모듈, 블루투스 모듈은 각각 WiFi 방식, 블루투스 방식으로 통신을 수행한다. 와이파이 모듈이나 블루 투스 모듈을 이용하는 경우에는 SSID 및 세션 키 등과 같은 각종 연결 정보를 먼저 송수신하여, 이를 이용하여 통신 연결한 후 각종 정보들을 송수신할 수 있다. 적외선 통신 모듈은 시 광선과 밀리미터파 사이에 있는 적외 선을 이용하여 근거리에 무선으로 데이터를 전송하는 적외선 통신(IrDA, infrared Data Association)기술에 따 라 통신을 수행한다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation)등과 같은 다양한 무선 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 또는, 통신 인터페이스는 HDMI, DP, 썬더볼트, USB, RGB, D-SUB, DVI 등과 같은 유선 통신 인터페이스를 포함할 수 있다. 그 밖에 통신 인터페이스는 LAN(Local Area Network) 모듈, 이더넷 모듈, 또는 페어 케이블, 동축 케이블 또는 광섬유 케이블 등을 이용하여 통신을 수행하는 유선 통신 모듈 중 적어도 하나를 포함할 수도 있다. 프로세서는 전자 장치의 동작을 전반적으로 제어한다. 구체적으로, 프로세서는 전자 장치 의 각 구성과 연결되어 전자 장치의 동작을 전반적으로 제어할 수 있다. 예를 들어, 프로세서는 통신 인터페이스, 메모리(미도시) 등과 같은 구성과 연결되어 전자 장치의 동작을 제어할 수 있다. 하나 이상의 프로세서는 CPU, GPU(Graphics Processing Unit), APU(Accelerated Processing Unit), MIC(Many Integrated Core), NPU(Neural Processing Unit), 하드웨어 가속기 또는 머신 러닝 가속기 중 하나 이상을 포함할 수 있다. 하나 이상의 프로세서는 전자 장치의 다른 구성 요소 중 하나 또는 임의의 조합을 제어할 수 있으며, 통신에 관한 동작 또는 데이터 처리를 수행할 수 있다. 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 프로그램 또는 명령어(instruction)을 실행할 수 있다. 예를 들어, 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 명령어를 실행함으로써, 본 개시의 일 실시 예에 따른 방법을 수 행할 수 있다. 본 개시의 일 실시 예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 하나의 프로세서에 의해 수 행될 수도 있고, 복수의 프로세서에 의해 수행될 수도 있다. 예를 들어, 일 실시 예에 따른 방법에 의해 제1 동 작, 제2 동작, 제3 동작이 수행될 때, 제1 동작, 제2 동작 및 제3 동작 모두 제1 프로세서에 의해 수행될 수도 있고, 제1 동작 및 제2 동작은 제1 프로세서(예를 들어, 범용 프로세서)에 의해 수행되고 제3 동작은 제2 프로 세서(예를 들어, 인공지능 전용 프로세서)에 의해 수행될 수도 있다. 하나 이상의 프로세서는 하나의 코어를 포함하는 단일 코어 프로세서(single core processor)로 구현될 수 도 있고, 복수의 코어(예를 들어, 동종 멀티 코어 또는 이종 멀티 코어)를 포함하는 하나 이상의 멀티 코어 프 로세서(multicore processor)로 구현될 수도 있다. 하나 이상의 프로세서가 멀티 코어 프로세서로 구현되 는 경우, 멀티 코어 프로세서에 포함된 복수의 코어 각각은 캐시 메모리, 온 칩(On-chip) 메모리와 같은 프로세 서 내부 메모리를 포함할 수 있으며, 복수의 코어에 의해 공유되는 공통 캐시가 멀티 코어 프로세서에 포함될 수 있다. 또한, 멀티 코어 프로세서에 포함된 복수의 코어 각각(또는 복수의 코어 중 일부)은 독립적으로 본 개 시의 일 실시 예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있고, 복수의 코어 전체 (또는 일부)가 연계되어 본 개시의 일 실시 예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있다. 본 개시의 일 실시 예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 멀티 코어 프로세서에 포함 된 복수의 코어 중 하나의 코어에 의해 수행될 수도 있고, 복수의 코어에 의해 수행될 수도 있다. 예를 들어, 일 실시 예에 따른 방법에 의해 제1 동작, 제2 동작 및 제3 동작이 수행될 때, 제1 동작, 제2 동작 및 제3 동작 모두 멀티 코어 프로세서에 포함된 제1 코어에 의해 수행될 수도 있고, 제1 동작 및 제2 동작은 멀티 코어 프로 세서에 포함된 제1 코어에 의해 수행되고 제3 동작은 멀티 코어 프로세서에 포함된 제2 코어에 의해 수행될 수 도 있다. 본 개시의 실시 예들에서, 하나 이상의 프로세서는 하나 이상의 프로세서 및 기타 전자 부품들이 집적된 시스템 온 칩(SoC), 단일 코어 프로세서, 멀티 코어 프로세서, 또는 단일 코어 프로세서 또는 멀티 코어 프로세 서에 포함된 코어를 의미할 수 있으며, 여기서 코어는 CPU, GPU, APU, MIC, NPU, 하드웨어 가속기 또는 기계 학습 가속기 등으로 구현될 수 있으나, 본 개시의 실시 예들이 이에 한정되는 것은 아니다. 다만, 이하에서는 설 명의 편의를 위해, 프로세서라는 표현으로 전자 장치의 동작을 설명한다. 프로세서는 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수 있다. 예를 들어, 프로세서 는 외부 장치로부터 어플리케이션의 실행 명령이 수신되면, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수 있다. 여기서, 어플리케이션은 게임일 수 있다. 다만, 이에 한정되는 것은 아니며, 어플리케이션은 클라우드 서비스와 관련된 어플리케이션이라면 어떠한 어플리케이션이라도 무방하다. 프로세서는 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어할 수 있다. 예를 들어, 프로세서는 어플리케이션 실행에 대응한 화면을 인코딩하고, 인코딩된 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어할 수 있다. 또는, 프로세서는 어플리케이 션 실행에 대응한 화면을 신경망 모델을 통해 다운 스케일링하고, 다운 스케일링된 화면을 인코딩하고, 인코딩 된 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어할 수도 있다. 프로세서는 통신 인터페이스를 통해 외부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제2 인스턴스를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행할 수 있다. 예를 들어, 프 로세서는 외부 장치로부터 외부 장치의 사용자가 부재 중이라는 정보가 수신되면, 제2 인스턴스 를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행할 수 있다. 프로세서는 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행할 수 있다. 예를 들어, 프로세서는 사용자 부재에 대응하는 정보가 수신된 후 1분이 경과하면, 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행할 수 있다. 다만, 프로세서 는 사용자 부재에 대응하는 정보가 수신된 후 제1 시간 내에 외부 장치로부터 사용자 존재에 대응하 는 정보가 수신되거나 어플리케이션에 대한 사용자 명령이 수신되면, 제2 인스턴스를 구동하지 않고, 제1 인스 턴스를 유지할 수도 있다. 프로세서는 통신 인터페이스를 통해 외부 장치로부터 사용자 존재에 대응하는 정보가 수신되면, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수 있다. 예를 들어, 프로세서는 제2 인스 턴스를 구동하여 제2 성능으로 어플리케이션을 실행하는 중, 통신 인터페이스를 통해 외부 장치로부 터 사용자 존재에 대응하는 정보가 수신되면, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수 있다. 다만, 이에 한정되는 것은 아니며, 프로세서는 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션 을 실행하는 중, 통신 인터페이스를 통해 외부 장치로부터 어플리케이션에 대한 사용자 명령이 수신 되면, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수도 있다. 프로세서는 외부 장치로부터 어플리케이션의 대기 시간에 대한 정보가 수신되면, 대기 시간 동안 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행할 수도 있다. 예를 들어, 외부 장치는 타이머 기 능을 제공하여, 사용자로부터 사용자의 부재 시간을 나타내는 대기 시간에 대한 정보를 수신하고, 수신된 정보 를 전자 장치로 전송할 수 있다. 프로세서는 대기 시간에 대한 정보가 수신되면, 대기 시간 동안 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행할 수도 있다. 프로세서는 제1 서브 프로세서 및 제1 서브 프로세서보다 저성능인 제2 서브 프로세서를 포함하며, 제1 서 브 프로세서는 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어하고, 사용자 부재에 대응하는 정보가 수 신된 후 제1 시간이 경과하면, 제2 인스턴스를 구동하여 어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 어플리케이션의 해상도 중 적어도 하나를 낮출 수 있다. 제1 서브 프로세서가 어플리케이션의 구동 성능을 낮춤에 따라 비용 절감이 가능하다. 제1 서브 프로세서는 사용자 부재에 대응하는 정보가 수신된 후 제1 시간보다 큰 제2 시간이 경과하면, 제2 서 브 프로세서가 어플리케이션을 실행하도록 제어하는 제1 정보를 제2 서브 프로세서로 제공하고, 제2 서브 프로 세서는 제3 인스턴스를 구동하여 제2 성능보다 저성능인 제3 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어할 수 있다. 여기서, 제1 정보는 제2 서브 프로세서의 실행 명령 및 어플리케이션의 상태 정보를 포함하고, 제1 서브 프로세서는 제1 정 보를 제2 서브 프로세서로 제공한 후, 제2 인스턴스의 구동을 종료할 수 있다. 또한, 제1 서브 프로세서는 제2 서브 프로세서보다 성능이 높기 때문에 비용이 더 크며, 제1 서브 프로세서 대신 제2 서브 프로세서가 어플리케 이션을 구동하게 되어 비용 절감이 가능하다.제2 서브 프로세서는 사용자 부재에 대응하는 정보가 수신된 후 제2 시간보다 큰 제3 시간이 경과하면, 제4 인 스턴스를 구동하여 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면의 스트리밍을 종료할 수 있다. 즉, 제2 서브 프로세서는 어플리케이션을 실행하되, 어플리케이션 실행에 대응한 화면의 스트리밍과 관련된 동 작을 수행하지 않을 수 있다. 제2 서브 프로세서가 어플리케이션 실행에 대응한 화면을 스트리밍하지 않음에 따 라 비용 절감이 가능하다. 제2 서브 프로세서는 통신 인터페이스를 통해 외부 장치로부터 사용자 존재에 대응하는 정보가 수신 되면, 제3 인스턴스를 구동하여 제3 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외 부 장치로 스트리밍하도록 통신 인터페이스를 제어하고, 제1 서브 프로세서가 어플리케이션을 실행하 도록 제어하는 제2 정보를 제1 서브 프로세서로 제공하고, 제1 서브 프로세서는 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하도록 통신 인터페이스를 제어할 수 있다. 즉, 전자 장치는 제3 성능의 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하고, 이후 제1 서브 프로세서의 제1 인스턴스 구동이 완료되면, 제1 성능의 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍할 수 있다. 제1 성능의 어플리케이션 실행에 대응한 화면이 외부 장치로 스트리밍되면, 제2 서브 프로세서는 제3 인스턴스의 구동을 종료할 수 있다. 이상에서는 제1 인스턴스 내지 제4 인스턴스를 예로 들었으나, 이에 한정되는 것은 아니며, 얼마든지 다양한 방 식으로 인스턴스가 구동될 수도 있다. 예를 들어, 제1 서브 프로세서가 제1 인스턴스로 어플리케이션을 구동하 던 중에 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 제2 서브 프로세서가 제4 인스턴스로 어플리케이션을 구동할 수도 있다. 도 3은 본 개시의 일 실시 예에 따른 외부 장치의 구성을 나타내는 블럭도이다. 외부 장치는 전자 장치로부터 수신된 어플리케이션 실행에 대응한 화면을 디스플레이하는 장치일 수 있다. 예를 들어, 외부 장치는 TV, 데스크탑 PC, 노트북, DVD(digital video disk) 플레이어, 스마트폰, 태블릿 PC, 모니터, 스마트 안경, 스마트 워치 등과 같이 디스플레이를 구비하고, 전자 장치로부터 수신된 어플리케이션 실행에 대응한 화면을 디스플레이하는 장치일 수 있다. 또는, 외부 장치는 스피커, 컴퓨터 본체 등과 같이 디스플레이가 구비되지 않은 장치일 수도 있다. 이 경우, 외부 장치는 전자 장치로부 터 수신된 어플리케이션 실행에 대응한 화면을 디스플레이가 구비된 장치로 전송할 수 있다. 이 과정에서, 외부 장치는 전자 장치로부터 수신된 어플리케이션 실행에 대응한 화면을 디코딩하고, 디코딩된 화면을 디 스플레이가 구비된 장치로 전송할 수도 있다. 도 3에 따르면, 외부 장치는 통신 인터페이스, 센서 및 프로세서를 포함한다. 통신 인터페이스는 다양한 유형의 통신 방식에 따라 다양한 유형의 외부 장치와 통신을 수행하는 구성이다. 예를 들어, 외부 장치는 통신 인터페이스를 통해 전자 장치, 사용자 단말 등과 통신 을 수행할 수 있다. 통신 인터페이스는 와이파이 모듈, 블루투스 모듈, 적외선 통신 모듈 및 무선 통신 모듈 등을 포함할 수 있다. 여기서, 각 통신 모듈은 적어도 하나의 하드웨어 칩 형태로 구현될 수 있다. 와이파이 모듈, 블루투스 모듈은 각각 WiFi 방식, 블루투스 방식으로 통신을 수행한다. 와이파이 모듈이나 블루 투스 모듈을 이용하는 경우에는 SSID 및 세션 키 등과 같은 각종 연결 정보를 먼저 송수신하여, 이를 이용하여 통신 연결한 후 각종 정보들을 송수신할 수 있다. 적외선 통신 모듈은 시 광선과 밀리미터파 사이에 있는 적외 선을 이용하여 근거리에 무선으로 데이터를 전송하는 적외선 통신(IrDA, infrared Data Association)기술에 따 라 통신을 수행한다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation)등과 같은 다양한 무선 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 또는, 통신 인터페이스는 HDMI, DP, 썬더볼트, USB, RGB, D-SUB, DVI 등과 같은 유선 통신 인터페이스를 포함할 수 있다. 그 밖에 통신 인터페이스는 LAN(Local Area Network) 모듈, 이더넷 모듈, 또는 페어 케이블, 동축 케이블 또는 광섬유 케이블 등을 이용하여 통신을 수행하는 유선 통신 모듈 중 적어도 하나를 포함할 수도 있다.센서는 사용자의 존재를 감지하기 위한 구성일 수 있다. 예를 들어, 센서는 카메라, RGB-D 센서 또는 ToF 센서 중 적어도 하나를 포함할 수 있다. 프로세서는 카메라를 통해 정지 영상 또는 동영상을 촬영하고, 촬영 영상으로부터 사용자의 존재를 식별할 수 있다. 또는, 프로세서는 RGB-D 센서를 통해 가시광선 영역에서의 RGB 영상, IR을 통한 뎁스 영 상 및 IR을 통한 열 영상을 획득하고, 그로부터 사용자의 존재를 식별할 수도 있다. 또는, 프로세서는 ToF 센서를 통해 물체로 발사한 빛이 튕겨져 돌아오는 거리를 시간으로 계산하여 사물의 입체감과 공간 정보, 움직임을 인식하여 사용자의 존재를 식별할 수도 있다. 다만, 이에 한정되는 것은 아니며, 센서는 사용자의 존재를 식별하기 위한 구성이라면 어떠한 구성이라도 무방하다. 프로세서는 외부 장치의 동작을 전반적으로 제어한다. 구체적으로, 프로세서는 외부 장치 의 각 구성과 연결되어 전자 장치의 동작을 전반적으로 제어할 수 있다. 예를 들어, 프로세서는 통신 인터페이스, 센서, 메모리(미도시) 등과 같은 구성과 연결되어 외부 장치의 동작을 제어할 수 있다. 하나 이상의 프로세서는 CPU, GPU(Graphics Processing Unit), APU(Accelerated Processing Unit), MIC(Many Integrated Core), NPU(Neural Processing Unit), 하드웨어 가속기 또는 머신 러닝 가속기 중 하나 이상을 포함할 수 있다. 하나 이상의 프로세서는 외부 장치의 다른 구성 요소 중 하나 또는 임의의 조합을 제어할 수 있으며, 통신에 관한 동작 또는 데이터 처리를 수행할 수 있다. 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 프로그램 또는 명령어(instruction)을 실행할 수 있다. 예를 들어, 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 명령어를 실행함으로써, 본 개시의 일 실시 예에 따른 방법을 수 행할 수 있다. 본 개시의 일 실시 예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 하나의 프로세서에 의해 수 행될 수도 있고, 복수의 프로세서에 의해 수행될 수도 있다. 예를 들어, 일 실시 예에 따른 방법에 의해 제1 동 작, 제2 동작, 제3 동작이 수행될 때, 제1 동작, 제2 동작 및 제3 동작 모두 제1 프로세서에 의해 수행될 수도 있고, 제1 동작 및 제2 동작은 제1 프로세서(예를 들어, 범용 프로세서)에 의해 수행되고 제3 동작은 제2 프로 세서(예를 들어, 인공지능 전용 프로세서)에 의해 수행될 수도 있다. 하나 이상의 프로세서는 하나의 코어를 포함하는 단일 코어 프로세서(single core processor)로 구현될 수 도 있고, 복수의 코어(예를 들어, 동종 멀티 코어 또는 이종 멀티 코어)를 포함하는 하나 이상의 멀티 코어 프 로세서(multicore processor)로 구현될 수도 있다. 하나 이상의 프로세서가 멀티 코어 프로세서로 구현되 는 경우, 멀티 코어 프로세서에 포함된 복수의 코어 각각은 캐시 메모리, 온 칩(On-chip) 메모리와 같은 프로세 서 내부 메모리를 포함할 수 있으며, 복수의 코어에 의해 공유되는 공통 캐시가 멀티 코어 프로세서에 포함될 수 있다. 또한, 멀티 코어 프로세서에 포함된 복수의 코어 각각(또는 복수의 코어 중 일부)은 독립적으로 본 개 시의 일 실시 예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있고, 복수의 코어 전체 (또는 일부)가 연계되어 본 개시의 일 실시 예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있다. 본 개시의 일 실시 예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 멀티 코어 프로세서에 포함 된 복수의 코어 중 하나의 코어에 의해 수행될 수도 있고, 복수의 코어에 의해 수행될 수도 있다. 예를 들어, 일 실시 예에 따른 방법에 의해 제1 동작, 제2 동작 및 제3 동작이 수행될 때, 제1 동작, 제2 동작 및 제3 동작 모두 멀티 코어 프로세서에 포함된 제1 코어에 의해 수행될 수도 있고, 제1 동작 및 제2 동작은 멀티 코어 프로 세서에 포함된 제1 코어에 의해 수행되고 제3 동작은 멀티 코어 프로세서에 포함된 제2 코어에 의해 수행될 수 도 있다. 본 개시의 실시 예들에서, 하나 이상의 프로세서는 하나 이상의 프로세서 및 기타 전자 부품들이 집적된 시스템 온 칩(SoC), 단일 코어 프로세서, 멀티 코어 프로세서, 또는 단일 코어 프로세서 또는 멀티 코어 프로세 서에 포함된 코어를 의미할 수 있으며, 여기서 코어는 CPU, GPU, APU, MIC, NPU, 하드웨어 가속기 또는 기계 학 습 가속기 등으로 구현될 수 있으나, 본 개시의 실시 예들이 이에 한정되는 것은 아니다. 다만, 이하에서는 설 명의 편의를 위해, 프로세서라는 표현으로 외부 장치의 동작을 설명한다. 프로세서는 통신 인터페이스를 통해 전자 장치로부터 스트리밍되는 어플리케이션 실행에 대응한 화면을 수신하고, 어플리케이션 실행에 대응한 화면을 사용자에게 제공할 수 있다. 예를 들어, 외부 장치는 디스플레이를 포함하고, 프로세서는 어플리케이션 실행에 대응한 화면을 사용자에게 제공하도록 디스플 레이를 제어할 수 있다. 또는, 프로세서는 어플리케이션 실행에 대응한 화면을 디스플레이를 구비한 장치 로 제공할 수도 있다. 프로세서는 어플리케이션 실행에 대응한 화면을 사용자에게 제공하는 과정에서 사용자의 존재 여부를 센서 를 통해 감지하고, 사용자가 부재하는 것으로 식별되면, 사용자 부재에 대응하는 정보를 전자 장치로 전송하도록 통신 인터페이스를 제어할 수 있다. 이후, 프로세서는 사용자의 존재가 식별되면, 사용자 존재에 대응하는 정보를 전자 장치로 전송하도록 통신 인터페이스를 제어할 수 있다. 프로세서는 외부 장치는 타이머 기능을 제공하여, 사용자로부터 사용자의 부재 시간을 나타내는 대기 시간에 대한 정보를 수신하고, 수신된 정보를 전자 장치로 전송하도록 통신 인터페이스를 제어할 수 있다. 이상과 같이 외부 장치는 전자 장치로부터 수신된 어플리케이션 실행에 대응한 화면을 사용자에게 제 공하고, 사용자의 존재 여부를 전자 장치로 제공할 수 있다. 다만, 이에 한정되는 것은 아니며, 외부 장치는 전자 장치를 제어하기 위한 권한이 있는 장치일 수도 있다. 이하에서는 외부 장치가 전자 장치를 제어하기 위한 권한이 있는 장치인 경우에 대해 설명한다. 프로세서는 사용자로부터 어플리케이션의 실행 명령이 수신되면, 어플리케이션의 실행 명령을 전자 장치 로 전송하도록 통신 인터페이스를 제어할 수 있다. 이 경우, 전자 장치는 제1 인스턴스를 구동 하여 제1 성능으로 어플리케이션을 실행하고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하 고, 프로세서는 어플리케이션 실행에 대응한 화면을 디스플레이할 수 있다. 프로세서는 센서를 통해 사용자의 부재가 감지되면, 전자 장치가 제2 인스턴스를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도 록 통신 인터페이스를 제어할 수 있다. 또는, 프로세서는 센서를 통해 사용자의 부재가 감지된 후 제1 시간이 경과하면, 전자 장치가 제2 인스턴스를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플 리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터페이스를 제어할 수 도 있다. 이후, 프로세서는 센서를 통해 사용자의 존재가 감지되면, 전자 장치가 제1 인스턴스를 구동하 여 제1 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터페이 스를 제어할 수 있다. 프로세서는 사용자에게 타이머 기능을 포함하는 화면을 제공하고, 사용자로부터 어플리케이션의 대기 시간 에 대한 정보를 수신할 수 있다. 프로세서는 어플리케이션의 대기 시간 동안 전자 장치가 제2 인스턴 스를 구동하여 제2 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통 신 인터페이스를 제어할 수 있다. 한편, 전자 장치의 프로세서는 제1 서브 프로세서 및 제1 서브 프로세서보다 저성능인 제2 서브 프로 세서를 포함할 수도 있으며, 외부 장치의 프로세서는 제1 서브 프로세서 또는 제2 서브 프로세서 중 적어도 하나를 제어할 수도 있다. 예를 들어, 프로세서는 사용자로부터 어플리케이션의 실행 명령이 수신되면, 제1 서브 프로세서가 제1 인 스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도 록 통신 인터페이스를 제어할 수 있다. 프로세서는 센서를 통해 사용자의 부재가 감지된 후 제1 시간이 경과하면, 전자 장치가 제2 인 스턴스를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터페이스를 제어할 수도 있다. 제1 인스턴스가 제2 인스턴스로 변경되는 경우, 어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 어플리케이션의 해상도 중 적어도 하나를 낮 아질 수 있으며, 비용 절감이 가능하다. 프로세서는 센서를 통해 사용자의 부재가 감지된 후 제1 시간보다 큰 제2 시간이 경과하면, 제2 서브 프로세서가 제3 인스턴스를 구동하여 제2 성능보다 저성능인 제3 성능으로 어플리케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터페이스를 제어할 수 있다. 이 경우, 제1 서브 프로세서는 어플리케이션의 상태 정보를 제2 서브 프로세서로 제공하고, 제2 인스턴스의 구동을 종료할 수 있다. 제1 서브 프로세서는 제2 서브 프로세서보다 성능이 높기 때문에 비용이 더 크며, 제1 서브 프로세서 대신 제2 서브 프로세서가 어플리케이션을 구동하게 되어 비용 절감이 가능하다. 프로세서는 센서를 통해 사용자의 부재가 감지된 후 제2 시간보다 큰 제3 시간이 경과하면, 제4 인스 턴스를 구동하여 어플리케이션을 실행하고 스트리밍을 종료하도록 제어하는 제어 명령을 전자 장치로 전송 하도록 통신 인터페이스를 제어할 수도 있다. 제2 서브 프로세서가 어플리케이션 실행에 대응한 화면을 스 트리밍하지 않음에 따라 비용 절감이 가능하다. 프로세서는 센서를 통해 사용자의 존재가 감지되면, 제3 인스턴스를 구동하여 제3 성능으로 어플리케 이션을 실행하도록 제어하는 제어 명령 및 제1 서브 프로세서가 제1 인스턴스를 구동하여 제1 성능으로 어플리 케이션을 실행하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터페이스를 제어할 수도 있다. 이 경우, 전자 장치는 제3 성능의 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍하 고, 이후 제1 서브 프로세서의 제1 인스턴스 구동이 완료되면, 제1 성능의 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍할 수 있다. 제1 성능의 어플리케이션 실행에 대응한 화면이 외부 장치로 스트 리밍되면, 제2 서브 프로세서는 제3 인스턴스의 구동을 종료할 수 있다. 이상에서는 제1 인스턴스 내지 제4 인스턴스를 예로 들었으나, 이에 한정되는 것은 아니며, 얼마든지 다양한 방 식으로 인스턴스가 구동될 수도 있다. 예를 들어, 제1 서브 프로세서가 제1 인스턴스로 어플리케이션을 구동하 는 동안, 프로세서는 센서를 통해 사용자의 부재가 감지된 후 제1 시간이 경과하면, 제2 서브 프로세 서가 제4 인스턴스로 어플리케이션을 구동하도록 제어하는 제어 명령을 전자 장치로 전송하도록 통신 인터 페이스를 제어할 수도 있다. 도 4는 본 개시의 일 실시 예에 따른 외부 장치의 세부 구성을 나타내는 블럭도이다. 외부 장치는 통 신 인터페이스, 센서 및 프로세서를 포함할 수 있다. 또한, 도 4에 따르면, 전자 장치는 메모리, 디스플레이, 사용자 인터페이스, 마이크, 스피커를 더 포함할 수도 있다. 도 4에 도시된 구성 요소들 중 도 3에 도시된 구성 요소와 중복되는 부분에 대해서는 자세한 설명을 생략하도록 한 다. 메모리는 프로세서 등이 접근할 수 있도록 데이터 등의 정보를 전기 또는 자기 형태로 저장하는 하드 웨어를 지칭할 수 있다. 이를 위해, 메모리는 비휘발성 메모리, 휘발성 메모리, 플래시 메모리(Flash Memory), 하드디스크 드라이브(HDD) 또는 솔리드 스테이트 드라이브(SSD), RAM, ROM 등 중에서 적어도 하나의 하드웨어로 구현될 수 있다. 메모리에는 외부 장치 또는 프로세서의 동작에 필요한 적어도 하나의 인스트럭션(instruction) 이 저장될 수 있다. 여기서, 인스트럭션은 외부 장치 또는 프로세서의 동작을 지시하는 부호 단위로 서, 컴퓨터가 이해할 수 있는 언어인 기계어로 작성된 것일 수 있다. 또는, 메모리에는 외부 장치 또 는 프로세서의 특정 작업을 수행하는 복수의 인스트럭션이 인스트럭션 집합체(instruction set)로서 저장 될 수도 있다. 메모리에는 문자, 수, 영상 등을 나타낼 수 있는 비트 또는 바이트 단위의 정보인 데이터가 저장될 수 있 다. 예를 들어, 메모리에는 사용자 감지 모듈, 타이머 모듈 등이 저장될 수 있다. 메모리는 프로세서에 의해 액세스되며, 프로세서에 의해 인스트럭션, 인스트럭션 집합체 또는 데이터에 대한 독취/기록/수정/삭제/갱신 등이 수행될 수 있다. 디스플레이는 이미지를 디스플레이하는 구성으로, LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플레이, PDP(Plasma Display Panel) 등과 같은 다양한 형태의 디스플레이로 구현될 수 있다. 디스플레이 내에는 a-si TFT, LTPS(low temperature poly silicon) TFT, OTFT(organic TFT) 등과 같은 형태로 구현될 수 있는 구동 회로, 백라이트 유닛 등도 함께 포함될 수 있다. 한편, 디스플레이는 터 치 센서와 결합된 터치 스크린, 플렉시블 디스플레이(flexible display), 3차원 디스플레이(3D display) 등으로 구현될 수 있다. 프로세서는 전자 장치로부터 수신된 어플리케이션 실행에 대응한 화면을 디스플레이하도록 디스플레 이를 제어할 수 있다. 사용자 인터페이스는 버튼, 터치 패드, 마우스 및 키보드 등으로 구현되거나, 디스플레이 기능 및 조작 입 력 기능도 함께 수행 가능한 터치 스크린으로도 구현될 수 있다. 여기서, 버튼은 외부 장치의 본체 외관의 전면부나 측면부, 배면부 등의 임의의 영역에 형성된 기계적 버튼, 터치 패드, 휠 등과 같은 다양한 유형의 버 튼이 될 수 있다. 마이크는 사운드를 입력받아 오디오 신호로 변환하기 위한 구성이다. 마이크는 프로세서와 전기 적으로 연결되며, 프로세서의 제어에 의해 사운드를 수신할 수 있다. 예를 들어, 마이크는 외부 장치의 상측이나 전면 방향, 측면 방향 등에 일체화된 일체형으로 형성될 수 있다. 또는, 마이크는 외부 장치와는 별도의 리모컨 등에 구비될 수도 있다. 이 경우, 리모컨은 마이크를 통해 사운드를 수신하고, 수신된 사운드를 외부 장치로 제공할 수도 있다. 마이크는 아날로그 형태의 사운드를 수집하는 마이크, 수집된 사운드를 증폭하는 앰프 회로, 증폭된 사운 드를 샘플링하여 디지털 신호로 변환하는 A/D 변환회로, 변환된 디지털 신호로부터 노이즈 성분을 제거하는 필 터 회로 등과 같은 다양한 구성을 포함할 수 있다. 한편, 마이크는 사운드 센서의 형태로 구현될 수도 있으며, 사운드를 수집할 수 있는 구성이라면 어떠한 방식이라도 무방하다. 프로세서는 마이크를 통해 사용자의 존재를 식별할 수도 있다. 스피커는 프로세서에서 처리된 각종 오디오 데이터 뿐만 아니라 각종 알림 음이나 음성 메시지 등을 출력하는 구성요소이다. 이상과 같이 전자 장치는 외부 장치의 사용자의 존재 여부에 기초하여 어플리케이션의 구동 성능을 변경하여 비용을 절감할 수 있다. 이하에서는 도 5 내지 도 10을 통해 전자 장치의 동작을 좀더 구체적으로 설명한다. 도 5 내지 도 10에서 는 설명의 편의를 위해 개별적인 실시 예에 대하여 설명한다. 다만, 도 5 내지 도 10의 개별적인 실시 예는 얼 마든지 조합된 상태로 실시될 수도 있다. 도 5 및 도 6은 본 개시의 일 실시 예에 따른 성능 별 비용을 설명하기 위한 도면들이다. 프로세서는 외부 장치로부터 사용자 부재에 대응하는 정보가 수신되면, 제1 인스턴스를 제2 인스턴스 로 변경하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행할 수 있다. 예를 들어, 프로세서는 도 5에 도시된 바와 같이, 사용자의 존재 여부에 기초하여 고성능 GPU/CPU의 제1 인스턴스 또는 저성능 GPU/CPU의 제2 인스턴스를 이용할 수 있다. 고성능 GPU/CPU의 제1 인스턴스로 어플리케이 션이 실행되는 경우 상대적으로 데이터량이 많으며, 저성능 GPU/CPU의 제2 인스턴스로 어플리케이션이 실행되는 경우 상대적으로 데이터량이 적으며, 사용자가 부재 중인 경우 저성능 GPU/CPU의 제2 인스턴스로 어플리케이션 을 실행하여 비용을 절감할 수 있다. 전자 장치는 복수의 외부 장치(200-1, 200-2, 200-3)에 각각 대응되는 복수의 인스턴스를 구동할 수 있다. 예를 들어, 프로세서는 도 6에 도시된 바와 같이, 사용자가 존재하는 제1 외부 장치(200-1) 및 제3 외부 장치(200-3)에 대해서는 고성능 GPU/CPU의 제1 인스턴스로 어플리케이션을 실행하고, 사용자가 부재 중인 제2 외부 장치(200-2)에 대해서는 저성능 GPU/CPU의 제2 인스턴스로 어플리케이션을 실행할 수 있다. 이상과 같은 동작을 통해, 사용자가 부재 중이더라도 어플리케이션의 실행 상태가 유지될 수 있다. 또한, 사용 자가 부재 중인 경우, 저성능의 인스턴스를 이용함에 따라 비용을 절감할 수 있다. 도 7은 본 개시의 일 실시 예에 따른 대기 시간 설정에 따른 동작을 설명하기 위한 시퀀스도이다. 도 7에서는 설명의 편의를 위해, 전자 장치가 접속 서버(100-1), 고성능 서버(100-2) 및 저성능 서버(100-3)를 포함하 는 것으로 도시하였다. 또한, 어플리케이션이 게임인 것으로 설명한다. 먼저, 외부 장치는 게임을 선택하는 사용자 명령이 수신되면(S705), 접속 서버(100-1)로 게임 서버 연결을 요청할 수 있다(S710). 접속 서버(100-1)는 게임에 필요한 성능을 확인하고(S715), 고성능 서버(100-2)로 서버 인스턴스 준비를 요청할 수 있다(S720). 고성능 서버(100-2)는 서버 인스턴스를 구동하고(S725), 고성능 서버 인스턴스 준비가 완료되었음을 접속 서버 (100-1)로 전송할 수 있다(S730). 접속 서버(100-1)는 외부 장치 및 고성능 서버(100-2)의 통신을 연결하고, 게임 스트리밍을 수행할 수 있 다(S735). 이후, 외부 장치는 대기 시간을 설정하는 사용자 명령이 수신되면(S740), 대기 시간 설정을 요청하는 제어 명령을 접속 서버(100-1)로 전송할 수 있다(S745). 접속 서버(100-1)는 저성능 서버(100-3)로 저성능 서버 인스턴스 준비를 요청할 수 있다(S750). 저성능 서버(100-3)는 서버 인스턴스를 구동하고(S755), 저성능 서버 인스턴스 준비가 완료되었음을 접속 서버 (100-1)로 전송할 수 있다(S760). 접속 서버(100-1)는 고성능 서버(100-2)로 전환을 요청하고(S765), 고성능 서버(100-2)는 게임 플레이 상태를 저성능 서버(100-3)로 전송할 수 있다(S770). 즉, 저성능 서버(100-3)는 고성능 서버(100-2)의 현재 게임 플레 이 상태를 복제할 수 있다. 고성능 서버(100-2)는 게임 플레이 상태를 전송한 후, 서버 인스턴스를 종료하고 (S775), 고성능 서버 인스턴스 종료가 완료되었음을 접속 서버(100-1)로 전송할 수 있다(S780). 접속 서버(100-1)는 외부 장치 및 저성능 서버(100-3)의 통신을 연결하고, 게임 스트리밍을 수행할 수 있 다(S785). 도 8은 본 개시의 일 실시 예에 따른 인스턴스 변경 동작을 설명하기 위한 시퀀스도이다. 도 8에서는 설명의 편 의를 위해, 전자 장치가 고성능 서버 인스턴스(100-1) 또는 저성능 서버 인스턴스(100-2)로 동작하는 것으 로 도시하였다. 여기서, 고성능 서버 인스턴스(100-1)는 저성능 서버 인스턴스(100-2)보다 상대적으로 고성능 GPU/CPU를 포함할 수 있다. 고성능 서버 인스턴스(100-1)는 최대 성능의 제1 인스턴스 모드 또는 저 비트 레이 트/저해상도의 제2 인스턴스 모드로 동작할 수 있다. 저성능 서버 인스턴스(100-2)는 제3 인스턴스 모드 또는 비디오를 전송하지 않는 제4 인스턴스 모드로 동작할 수 있으며, 제3 인스턴스 모드는 제2 인스턴스 모드보다 비트 레이트 및 해상도가 낮을 수 있다. 도 8에서는 각 모드가 데이터를 송수신할 수 있는 것으로 도시하였으나, 이는 각 서버 인스턴스의 현재 모드를 부각시키기 위한 것이고, 실제로는 각 서버 인스턴스의 동 작일 수 있다. 한편, 어플리케이션은 게임인 것으로 설명한다. 먼저, 고성능 서버 인스턴스(100-1)는 외부 장치와 통신이 연결되고, 게임 스트리밍을 수행할 수 있다 (S805). 이후, 외부 장치는 사용자의 부재가 가령 10분동안 확인되면(S810-1), 사용자 부재에 대응하는 정보를 고 성능 서버 인스턴스(100-1)의 제1 인스턴스 모드로 제공할 수 있다(S810-2). 제1 인스턴스 모드는 전송 비트 레이트 및 해상도의 변경 요청을 제2 인스턴스 모드로 제공하고(S815), 제2 인 스턴스 모드는 저 비트 레이트 및 저 해상도로 동작 상태를 변경할 수 있다(S820). 이후, 외부 장치는 사용자의 부재가 가령 12분동안 확인되면, 사용자 부재에 대응하는 정보를 고성능 서버 인스턴스(100-1)의 제2 인스턴스 모드로 제공할 수 있다(S825). 제2 인스턴스 모드는 저성능 서버 인스턴스(100-2)의 제3 인스턴스 모드로 저성능 서버 인스턴스 준비를 요청할 수 있다(S830). 제3 인스턴스 모드는 서버 인스턴스를 구동하고(S835), 저성능 서버 인스턴스 준비가 완료되었음을 제2 인스턴 스 모드로 전송할 수 있다(S840). 제2 인스턴스 모드는 게임 플레이 상태를 제3 인스턴스 모드로 제공하고(S845), 고성능 서버 인스턴스(100-1)는 서버 인스턴스를 종료하고(S850), 고성능 서버 인스턴스 종료가 완료되었음을 외부 장치로 전송할 수 있다 (S855). 저성능 서버 인스턴스(100-2)는 외부 장치와 통신이 연결되고, 게임 스트리밍을 수행할 수 있다(S860). 이후, 외부 장치는 사용자의 부재가 가령 15분동안 확인되면, 사용자 부재에 대응하는 정보를 제3 인스턴 스 모드로 제공할 수 있다(S865). 제3 인스턴스 모드는 제4 인스턴스 모드로 비디오 전송 중지를 요청하고 (S875), 제4 인스턴스 모드는 비디오 전송을 중지할 수 있다(S875). 외부 장치는 사용자의 복귀가 식별되면, 사용자의 복귀에 대한 정보를 제4 인스턴스 모드로 전송하고 (S880), 제4 인스턴스 모드는 환영 메시지를 출력하고(S885), 제3 인스턴스 모드로 비디오 전송 시작을 요청할수 있다(S890). 제3 인스턴스 모드는 비디오 전송을 시작하고(S891), 제1 인스턴스 모드로 고성능 서버 인스턴스 준비를 요청할 수 있다(S892). 제1 인스턴스 모드는 서버 인스턴스를 구동하고(S893), 고성능 서버 인스턴스 준비가 완료되었음을 제3 인스턴 스 모드로 전송할 수 있다(S894). 제3 인스턴스 모드는 게임 플레이 상태를 제2 인스턴스 모드로 제공하고(S895), 저성능 서버 인스턴스(100-2)는 서버 인스턴스를 종료하고(S896), 저성능 서버 인스턴스 종료가 완료되었음을 외부 장치로 전송할 수 있다 (S897). 제1 인스턴스 모드는 외부 장치와 통신이 연결되고, 게임 스트리밍을 수행할 수 있다(S898). 도 9 및 도 10은 본 개시의 일 실시 예에 따른 타이머 기능을 설명하기 위한 도면들이다. 외부 장치의 프로세서는 타이머 기능을 제공할 수 있다. 예를 들어, 프로세서는 사용자의 타이 머 기능 실행 명령 또는 사용자의 부재가 기설정된 시간 이상 식별되면, 도 9에 도시된 바와 같은 타이머 기능 을 나타내는 UI를 디스플레이할 수 있다. 프로세서는 사용자로부터 대기 시간에 대한 명령이 수신되면, 대기 시간에 대한 정보를 전자 장치로 전송하고, 전자 장치는 대기 시간 동안 인스턴스를 저성능으로 변경할 수 있다. 예를 들어, 전자 장치는 도 10에 도시된 바와 같이, 대기 시간 동안 화면을 전송하지 않을 수 있다. 다만, 이에 한정되는 것은 아니며, 전자 장치는 대기 시간 동안 화면의 전송 프레임 레이트를 낮추거나 화 면의 해상도를 낮출 수도 있다. 도 11은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 먼저, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행한다(S1110). 그리고, 어플리케이션 실행에 대응한 화면을 외부 장치로 스트리밍한다(S1120). 그리고, 외부 장치로부터 사용자 부재에 대응하는 정보가 수 신되면, 제2 인스턴스를 구동하여 제1 성능보다 저성능인 제2 성능으로 어플리케이션을 실행한다(S1130). 또한, 제2 성능으로 어플리케이션을 실행하는 단계(S1130)는 사용자 부재에 대응하는 정보가 수신된 후 제1 시 간이 경과하면, 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행할 수 있다. 그리고, 제1 성능으로 어플리케이션을 실행하는 단계(S1110)는 제1 서브 프로세서가 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행하고, 제2 성능으로 어플리케이션을 실행하는 단계(S1130)는 사용자 부재에 대응하는 정보가 수신된 후 제1 시간이 경과하면, 제1 서브 프로세서보다 저성능인 제2 서브 프로세서가 제2 인 스턴스를 구동하여 어플리케이션 실행에 대응한 화면의 전송 비트 레이트 또는 어플리케이션의 해상도 중 적어 도 하나를 낮출 수 있다. 또한, 사용자 부재에 대응하는 정보가 수신된 후 제1 시간보다 큰 제2 시간이 경과하면, 제1 서브 프로세서가 제2 서브 프로세서에 의해 어플리케이션을 실행하도록 제어하는 제1 정보를 제2 서브 프로세서로 제공하는 단계 및 제2 서브 프로세서가 제3 인스턴스를 구동하여 제2 성능보다 저성능인 제3 성능으로 어플리케이션을 실행하 는 단계를 더 포함할 수 있다. 그리고, 사용자 부재에 대응하는 정보가 수신된 후 제2 시간보다 큰 제3 시간이 경과하면, 제2 서브 프로세서가 제4 인스턴스를 구동하여 어플리케이션을 실행하는 단계 및 어플리케이션 실행에 대응한 화면의 스트리밍을 종 료하는 단계를 더 포함할 수 있다. 또한, 외부 장치로부터 사용자 존재에 대응하는 정보가 수신되면, 제2 서브 프로세서가 제3 인스턴스를 구동하 여 제3 성능으로 어플리케이션을 실행하는 단계, 제2 서브 프로세서가 제1 서브 프로세서에 의해 어플리케이션 을 실행하도록 제어하는 제2 정보를 제1 서브 프로세서로 제공하는 단계 및 제1 서브 프로세서가 제1 인스턴스 를 구동하여 제1 성능으로 어플리케이션을 실행하는 단계를 더 포함할 수 있다. 그리고, 제1 정보는 제2 서브 프로세서의 실행 명령 및 어플리케이션의 상태 정보를 포함하고, 제1 서브 프로세 서가 제1 정보를 제2 서브 프로세서로 제공한 후, 제2 인스턴스의 구동을 종료하는 단계를 더 포함할 수 있다. 또한, 외부 장치로부터 사용자 존재에 대응하는 정보가 수신되면, 제1 인스턴스를 구동하여 제1 성능으로 어플 리케이션을 실행하는 단계를 더 포함할 수 있다. 그리고, 외부 장치로부터 어플리케이션의 대기 시간에 대한 정보가 수신되면, 대기 시간 동안 제2 인스턴스를 구동하여 제2 성능으로 어플리케이션을 실행하는 단계를 더 포함할 수 있다. 또한, 제1 성능으로 어플리케이션을 실행하는 단계(S1110)는 외부 장치로부터 어플리케이션의 실행 명령이 수신 되면, 제1 인스턴스를 구동하여 제1 성능으로 어플리케이션을 실행할 수 있다. 이상과 같은 본 개시의 다양한 실시 예에 따르면, 전자 장치는 외부 장치의 사용자의 존재 여부에 기초하여 어 플리케이션의 구동 성능을 변경하여 비용을 절감할 수 있다. 한편, 본 개시의 일시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media)에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실 시 예들에 따른 전자 장치(예: 전자 장치(A))를 포함할 수 있다. 명령이 프로세서에 의해 실행될 경우, 프로세 서가 직접, 또는 프로세서의 제어 하에 다른 구성요소들을 이용하여 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저 장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 신 호(signal)를 포함하지 않으며 실재(tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시 적으로 저장됨을 구분하지 않는다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품 (computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있 다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어 (hardware) 또는 이들의 조합을 이용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 일부 경우에 있어 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있 다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨 어로서 구현될 수도 있다. 소프트웨어 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 동작을 수행할 수 있다. 한편, 상술한 다양한 실시 예들에 따른 기기의 프로세싱 동작을 수행하기 위한 컴퓨터 명령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium)에 저장될 수 있 다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었 을 때 상술한 다양한 실시 예에 따른 기기에서의 처리 동작을 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니라 반영구 적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적 컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등이 있을 수 있다. 또한, 상술한 다양한 실시 예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구 성될 수 있으며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요 소가 다양한 실시 예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로 그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작 들은 순차적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생 략되거나, 또는 다른 동작이 추가될 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2023-0087888", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다.부호의 설명 100 : 전자 장치 110 : 통신 인터페이스 120 : 프로세서 200 : 외부 장치 210 : 통신 인터페이스 220 : 센서 230 : 프로세서 240 : 메모리 250 : 디스플레이 260 : 사용자 인터페이스 270 : 마이크 280 : 스피커"}
{"patent_id": "10-2023-0087888", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a 및 도 1b는 본 개시의 이해를 돕기 위한 서버 인스턴스를 설명하기 위한 도면들이다. 도 2는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 나타내는 블럭도이다. 도 3은 본 개시의 일 실시 예에 따른 외부 장치의 구성을 나타내는 블럭도이다.도 4는 본 개시의 일 실시 예에 따른 외부 장치의 세부 구성을 나타내는 블럭도이다. 도 5 및 도 6은 본 개시의 일 실시 예에 따른 성능 별 비용을 설명하기 위한 도면들이다. 도 7은 본 개시의 일 실시 예에 따른 대기 시간 설정에 따른 동작을 설명하기 위한 시퀀스도이다. 도 8은 본 개시의 일 실시 예에 따른 인스턴스 변경 동작을 설명하기 위한 시퀀스도이다. 도 9 및 도 10은 본 개시의 일 실시 예에 따른 타이머 기능을 설명하기 위한 도면들이다. 도 11은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다."}
