{"patent_id": "10-2023-0132927", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0050209", "출원번호": "10-2023-0132927", "발명의 명칭": "로그정보 기반 클라우드 이상 대응 방법 및 시스템", "출원인": "주식회사 이노그리드", "발명자": "오한수"}}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "클라우드 시스템에서 수행되는 이상 사용에 대한 대응 방법에 있어서,오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 단계;기계학습을 기반으로 상기 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정하는 단계; 및상기 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨 중 적어도 어느 하나를 복구하는 단계를 포함하는, 로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 문자열 유사도 분석은, 텍스트 전처리 단계;전처리된 텍스트를 단어 단위로 미리 등록된 정수로 변환하는 정수화 단계;정수화된 정보를 문장별 벡터변환하는 단계; 및상기 벡터변환된 정보를 기반으로 상기 카테고리를 결정하는 단계를 포함하는, 로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,상기 텍스트 전처리 단계는, 상기 로그 파일에 대해 텍스트 토큰화, 불용어 제거, 표제어 추출, 문장부호 제거 및 토큰 길이 조정을 수행하는, 로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 2에 있어서,미리 등록된 각 단어마다 많이 사용되는 횟수에 따라 낮은 번호로 정수화된 정수화정보를 기반으로 상기 정수화를 수행하는, 로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "에 있어서,임계숫자 이상의 정수를 갖는 단어에 의한 벡터가 과반을 초과하는 경우에만 상기 카테고리를 하향 조정하는,로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,상기 카테고리가 제1 유형인 경우 제1 시점으로 상기 볼륨을 백업하고, 상기 카테고리가 제2 유형인 경우 상기제1 시점보다 늦은 시점인 제2 시점으로 1차 백업 후 다음 로그정보의 분석에 따라 상기 제1 시점으로의 복구여부를 결정하는, 로그정보 기반 클라우드 이상 대응 방법."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "로그정보 기반 클라우드 이상 대응 방법을 수행하도록 하는 컴퓨터-판독 가능 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨터로 하여금 이하의 단계들을 수행하도록 하며, 상기 단계들은,오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 단계;기계학습을 기반으로 상기 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정하는 단계; 및상기 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨 중 적어도 어느 하나를 복구하는 단계를 포함하는, 컴퓨터-판독 가능 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 로그수집부;기계학습을 기반으로 상기 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정하는 인공지능부; 및상기 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨 중 적어도 어느 하나를 복구하는 복구처리부를 포함하는, 로그정보 기반 클라우드 이상 대응 시스템."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서,상기 인공지능부는 상기 로그 파일 내의 텍스트에 대한 전처리를 수행하고, 전처리된 텍스트를 단어 단위로 미리 등록된 정수로 변환하며, 정수화된 정보를 문장별 벡터변환하고, 벡터변환된 정보를 기반으로 상기 카테고리를 결정하는, 로그정보 기반 클라우드 이상 대응 시스템."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 10에 있어서,상기 인공지능부는 정수화되지 않은 단어에 의한 벡터가 임계개수 이상 존재하는 경우, 상기 카테고리를 하향조정하는, 로그정보 기반 클라우드 이상 대응 시스템."}
{"patent_id": "10-2023-0132927", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "공개특허 10-2025-0050209-4-청구항 9에 있어서,상기 복구처리부는 상기 카테고리가 제1 유형인 경우 제1 시점으로 상기 볼륨을 백업하고, 상기 카테고리가 제2유형인 경우 상기 제1 시점보다 늦은 시점인 제2 시점으로 1차 백업 후 다음 로그정보의 분석에 따라 상기 제1시점으로의 복구 여부를 결정하는, 로그정보 기반 클라우드 이상 대응 시스템."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "로그정보 기반 클라우드 이상 대응 방법 및 시스템이 개시된다. 본 발명의 일측면에 따른 클라우드 시스템에서 수행되는 이상 사용에 대한 대응 방법은, 오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 단계; 기계 학습을 기반으로 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정하는 단계; 및 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨 중 적어도 어느 하나를 복구하는 단계를 포함한다."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 로그정보 기반 클라우드 이상 대응 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "클라우드가 주는 유연함과 확장성으로 인해 클라우드로의 서비스 전환은 빨라지고 있다. 클라우드 컴퓨팅은 분 산 처리 기술과 가상화 기술을 이용하여 스토리지, 네트워크, 플랫폼 및 컴퓨터 리소스를 사용자가 손쉽게 대여 할 수 있도록 해주기 때문에 사용자는 인터넷 접속과 연산 기능을 갖춘 단말기만 갖고 있다면 어디서나 전산 작 업이 가능하다. 가장 보편적인 클라우드 서비스 유형은 IaaS(Infrastructure as Service), PaaS(Platform as Service), SaaS(Software as Service)가 있다. 이러한 클라우드 서비스의 급격한 보급은 보안에 대한 안전성과 정상적인 서비스를 위한 안정성에 대한 니즈가 크다. 즉, 클라우드에서 운영되는 가상자원에 대한 이상 사용을 감지할 필요가 있으며, 그로 인한 인스턴스 및 저장정보의 복구처리가 중요한 이슈이다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 공개특허 제10-2022-0020553 멀티 클라우드 환경에서 애플리케이션 성능 모니터링 방 법 및 장치"}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "따라서, 본 발명은 상술한 문제점을 해결하기 위해 안출된 것으로서, 로그정보의 분석에 의해 클라우드의 이상 사용을 감지하고 복구처리하는 로그정보 기반 클라우드 이상 대응 방법 및 시스템을 제공하기 위한 것이다. 또한, 본 발명은 문자열 분석에 의해 로그정보를 신속히 분석하며, 그에 따라 인스턴스와 볼륨 각각에 대한 복 구를 수행하는 로그정보 기반 클라우드 이상 대응 방법 및 시스템을 제공하기 위한 것이다. 본 발명의 다른 목적들은 이하에 서술되는 바람직한 실시예를 통하여 보다 명확해질 것이다."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 측면에 따르면, 클라우드 시스템에서 수행되는 이상 사용에 대한 대응 방법에 있어서, 오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 단계; 기계학습을 기반으로 상기 로그 파일에 대한 문자열 유 사도 분석에 의한 카테고리를 결정하는 단계; 및 상기 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴 스 및 볼륨 중 적어도 어느 하나를 복구하는 단계를 포함하는, 로그정보 기반 클라우드 이상 대응 방법 및 그 방법을 실행하는 컴퓨터 프로그램이 제공된다. 여기서, 상기 문자열 유사도 분석은, 텍스트 전처리 단계; 전처리된 텍스트를 단어 단위로 미리 등록된 정수로 변환하는 정수화 단계; 정수화된 정보를 문장별 벡터변환하는 단계; 및 상기 벡터변환된 정보를 기반으로 상기 카테고리를 결정하는 단계를 포함할 수 있다. 또한, 상기 텍스트 전처리 단계는, 상기 로그 파일에 대해 텍스트 토큰화, 불용어 제거, 표제어 추출, 문장부호 제거 및 토큰 길이 조정을 수행할 수 있다. 또한, 미리 등록된 각 단어마다 많이 사용되는 횟수에 따라 낮은 번호로 정수화된 정수화정보를 기반으로 상기 정수화를 수행할 수 있다. 또한, 정수화되지 않은 단어에 의한 벡터가 임계개수 이상 존재하는 경우, 상기 카테고리를 하향 조정할 수 있 다. 또한, 임계숫자 이상의 정수를 갖는 단어에 의한 벡터가 과반을 초과하는 경우에만 상기 카테고리를 하향 조정 할 수 있다. 또한, 상기 카테고리가 제1 유형인 경우 제1 시점으로 상기 볼륨을 백업하고, 상기 카테고리가 제2 유형인 경우 상기 제1 시점보다 늦은 시점인 제2 시점으로 1차 백업 후 다음 로그정보의 분석에 따라 상기 제1 시점으로의 복구 여부를 결정할 수 있다. 본 발명의 다른 측면에 따르면, 오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하는 로그수집부; 기계학 습을 기반으로 상기 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정하는 인공지능부; 및 상기 카 테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨 중 적어도 어느 하나를 복구하는 복구처리부 를 포함하는, 로그정보 기반 클라우드 이상 대응 시스템이 제공된다. 여기서, 상기 인공지능부는 상기 로그 파일 내의 텍스트에 대한 전처리를 수행하고, 전처리된 텍스트를 단어 단 위로 미리 등록된 정수로 변환하며, 정수화된 정보를 문장별 벡터변환하고, 벡터변환된 정보를 기반으로 상기 카테고리를 결정할 수 있다. 또한, 상기 인공지능부는 정수화되지 않은 단어에 의한 벡터가 임계개수 이상 존재하는 경우, 상기 카테고리를 하향 조정할 수 있다. 또한, 상기 복구처리부는 상기 카테고리가 제1 유형인 경우 제1 시점으로 상기 볼륨을 백업하고, 상기 카테고리 가 제2 유형인 경우 상기 제1 시점보다 늦은 시점인 제2 시점으로 1차 백업 후 다음 로그정보의 분석에 따라 상 기 제1 시점으로의 복구 여부를 결정할 수 있다. 전술한 것 외의 다른 측면, 특징, 이점이 이하의 도면, 특허청구범위 및 발명의 상세한 설명으로부터 명확해질 것이다."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 로그정보의 분석에 의해 클라우드의 이상 사용을 감지하고 자동 복구처리할 수 있다. 또한, 본 발명에 따르면 문자열 분석에 의해 로그정보를 신속히 분석하여 카테고리를 결정하고, 그에 따라 인스 턴스와 볼륨 각각에 대한 복구를 수행할 수 있다."}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 본 발명을 특정한 실시 형태에 대해 한정하려는 것이 아 니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의 해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된 다. 예를 들어, 후술될 제1 임계값, 제2 임계값 등의 용어는 실질적으로는 각각 상이하거나 일부는 동일한 값인 임계값들로 미리 지정될 수 있으나, 임계값이라는 동일한 단어로 표현될 때 혼동의 여지가 있으므로 구분의 편 의상 제1, 제2 등의 용어를 병기하기로 한다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들 을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요 소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 또한, 각 도면을 참조하여 설명하는 실시예의 구성 요소가 해당 실시예에만 제한적으로 적용되는 것은 아니며, 본 발명의 기술적 사상이 유지되는 범위 내에서 다른 실시예에 포함되도록 구현될 수 있으며, 또한 별도의 설명 이 생략될지라도 복수의 실시예가 통합된 하나의 실시예로 다시 구현될 수도 있음은 당연하다. 또한, 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일하거나 관련된 참조 부호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 본 발명을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 도 1은 본 발명의 일 실시예에 따른 로그정보 기반 클라우드 이상 대응 시스템의 구성을 도시한 기능블록도이고, 도 2는 본 발명의 일 실시예에 따른 로그정보 기반 클라우드 이상 대응 과정을 도시한 흐름도 이다. 먼저 도 1을 참조하면, 본 실시예에 따른 클라우드 시스템에서 운영되는 이상 대응 시스템은 로그수집부, 인공지능부, 복구처리부 및 저장부를 포함한다. 로그수집부는 오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집한다. 즉, 로그수집부는 클라우드를 구 성하는 각각의 컴포넌트마다 기록되는 로그 정보를 수집한다. 로그정보는 당업자에게는 자명할 것이므로 더욱 상세한 설명은 생략한다. 인공지능부는 기계학습을 기반으로 로그 파일에 대한 문자열 유사도 분석에 의한 카테고리를 결정한다. 즉, 로그파일에 기록된 텍스트를 분석함으로써, TRACE, DEBUG, INFO, AUDIT, WARNING, ERROR, CRITCAL 등의 카테고 리(또는 레이블이라 칭함)를 결정함으로써, 이상 여부를 판단한다. 예를 들어, 로그파일의 텍스트에 동일한 문자열이 많은 수로 반복되는 경우 이상징후라 판단될 수 있으며, 이러 한 경우 카테고리가 WARNING 또는 ERROR 또는 CRITCAL로 결정될 수 있다. 복구처리부는 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨을 복구처리한다. 예를 들 어, 인스턴스(가상자원)의 경우 HA(high availability)를 이용하여 복구하며, 볼륨(하드와 같은 저장수단)의 경 우 백업데이터를 이용한 백업으로 정보를 복구한다. 복구 방식은 차후 상세히 설명하기로 한다. 저장부에는 인공지능부가 구동하기 위해 필요한 정보가 저장되며, 또한 기계학습을 위한 학습데이터가 저장될 수도 있다. 또한, 상술한 바와 같은 볼륨의 백업을 위한 백업데이터가 저장될 수 있다. 물론, 클라우드 를 운영하면서 발생하는 갖가지 장애 복구를 위해 별도의 백업용 데이터베이스가 구비될 수 있으며, 이 경우 볼 륨의 복구시에는 해당 데이터베이스에 저장된 백업데이터를 이용할 수도 있다. 다만, 차후 설명하겠으나, 복수 의 시점에 따른 백업을 각각 수행할 수도 있으므로, 백업용 데이터베이스로부터 복수개의 시점에 따른 백업데이 터를 취득하여 저장부에 임시 저장하는 형태로 이용할 수 있다. 이상 대응 처리 과정을 개략적으로 도시한 도 2를 참조하면, 이상 대응 시스템은 오픈스택 내 각 컴포넌트마다 발생된 로그 파일을 수집하고(S100), 기계학습을 기반으로 로그 파일에 대한 문자열 유사도 분석에 의한 카테고 리를 결정하며(S200), 카테고리에 따라 복구가 필요하다 판단되는 경우, 인스턴스 및 볼륨을 복구한다(S300). 이하 기계학습에 의한 인공지능을 이용한 이상징후 판단을 위한 로그파일의 카테고리 결정 과정에 대해 상세히 설명하기로 한다. 도 3은 본 발명의 일 실시예에 따른 인공지능에 의한 로그 파일의 텍스트 분석을 이용한 카테고리 결정 과정을 도시한 흐름도이고, 도 4 및 도 5는 본 발명의 일 실시예에 따른 텍스트 전처리 과정을 도시한 예시도들이고, 도 6은 본 발명의 일 실시예에 따른 텍스트의 정수 변환 과정을 도시한 예시도이고, 도 7은 본 발명의 일 실시 예에 따른 정수화된 정보의 벡터변환을 이용한 카테고리 결정 방식을 도시한 예시도이다. 도 3을 참조하면, 먼저 로그파일에 대한 텍스트 전처리를 수행한다(S210). 도 4와 도 5를 함께 참조하면, 텍스트 전처리 과정은 텍스트 토큰화, 불용어 제거, 표제어 추출, 문장부호 제거 및 토큰 길이 조정을 포함할 수 있다. 텍스트 토큰화는 단어 토큰화 방법을 이용하는 것으로, 토큰의 기준을 단어로 함으로써 각 문장마다 단어의 개 수가 토큰의 개수가 된다. 다음으로 접속사 등의 불용어를 제거하고, 단어들을 원형형태로 변경하는 표제어 추 출을 수행한다. 그리고, 문장부호를 제거하고, 토큰 길이를 조정한다. 토큰 길이는 미리 설정된 개수로 제한하 는 형태(예를 들어, 초과개수 이후의 단어들은 제거)로 수행될 수 있으며, 또는 중복되거나 미리 등록된 불필요 한 단어를 제거하는 형태로 수행될 수 있다. 다시 도 3을 참조하면, 전처리된 텍스트에 대해 단어 단위로 정수변환을 수행한다(S220). 도 6을 함께 참조하면, 각 단어마다 미리 정수가 부여된다. 일례로, 빈도수를 기준으로 높은 순서대로 낮은 숫 자부터 정수를 부여한다. 예를 들어, 많은 수의 로그파일에 대한 기계학습 결과 [live]가 가장 많은 빈도수를 가진 경우 정수 1이 부여된다. 이러한 기계 학습을 기반으로 전처리된 텍스트의 각 단어에 대해 정수변환을 수 행한다. 도 6에 도시된 바와 같은 예를 들어, 텍스트 [Live migration completed 2400 sec]는 [1,2,3,4,5]로 정수변환이 수행되며, 텍스트 [Migration operation cancel]는 [2,6,7]로 변환된다. 다시 도 3을 참조하면, 정수화된 정보를 문장별로 벡터 변환하고(S230), 기계학습된 정보를 기반으로 변환된 벡 터정보에 상응하는 카테고리(레이블)를 결정한다(S240). 도 6을 함께 참조하면, 문장마다 토큰수는 다를 수 있으므로 동일한 토큰수를 갖도록 맞추어줄 필요가 있다. 설 명의 편의상 문장의 최대 토큰수가 10이라 가정하면, 모든 문장들의 토큰수를 10으로 변환하고 부족한 공간은"}
{"patent_id": "10-2023-0132927", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "[0]으로 채워준다. 따라서, 텍스트 [Live migration completed 2400 sec]는 [1,2,3,4,5,0,0,0,0,0]으로, 텍스트 [Migration operation cancel]는 [2,6,7,0,0,0,0,0,0,0]으로 정수변환이 완료된다. 그리고, 도 7을 참조하면, 정수화된 정보를 문장별로 원-핫 인코더 방식으로 벡터변환한다. 즉, 표현하고 싶은 단어의 인덱스에 1의 값을 부여하고, 다른 인덱스에는 0의 값을 부여하는 벡터 표현 방식으로 구현한다. 예를 들어, 문장 [Live migration completed 2400 sec]의 정수변환된 정보인 [1,2,3,4,5,0,0,0,0,0]에 대해, [[1,0,0,0,0,0,0,0,~0], [0,1,0,0,0,0,0,0,~0],[0,0,1,0,0,0,0,0,~0],[0,0,0,1,0,0,0,0,~0],[0,0,0,0,1,0,0,0,~0],[0,0,0,0,0,0,0,0,~0],[0,0,0,0,0,0,0,0,~0],[0,0,0,0,0,0,0,0,~0],[0,0,0,0,0,0,0,~0],[0,0,0,0,0,0,0,0,~ 0]]으로 벡터변환한다. 원-핫 인코더 방식에 의하면 벡터의 숫자 개수는 등록된 단어의 개수에 따라 달라질 수 있을 것이다. 그리고, 인공지능에 의해 기계학습된 정보를 참조하여 이러한 벡터정보에 상응하는 카테고리(레이블)를 결정한 다(S240). 도 8은 본 발명의 일 실시예에 따른 정확도 측정을 이용한 카테고리 결정 방식을 도시한 예시도이다. 도 8을 참조하면, 기계학습에 의한 인공지능은 상술한 바와 같은 문자열 비교 분석에 의해 로그파일의 각 문장 에 대한 카테고리 예측 정확도를 산출하고, 가장 높은 정확도를 갖는 어느 하나를 결정한다. 즉, 로그파일의 텍스트를 문장마다 벡터변환하여 카테고리를 결정하는 것이다. 여기서, 일례에 따르면, 정수화되지 않은 단어에 의한 벡터가 임계개수 이상 존재하는 경우, 카테고리를 하향 조정할 수 있다. 예를 들어, 벡터 비교에 의해 INFO로 카테고리가 결정되었는데, 정수화되지 않은 단어(즉, 미 리 등록된 단어가 아닌 경우)에 의한 벡터가 임계개수(예를 들어, 3개) 이상이면 WARNING으로 카테고리를 하향 조정한다. 미리 등록되지 않은 단어들이 많이 나올 수록 이상징후일 확률이 높기 때문이다. 미리 등록되지 않은 단어는 예를 들어, 특정한 정수값으로 변환한다. 이해의 편의를 위한 예를 들면 미리 등록되지 않은 단어는 정 수 10으로 변환되는 것을 가정하면, 변환된 벡터는 [0,0,0,0,0,0,0,0,0,1,0,~0]으로 표현될 수 있다. 또는 등록 된 단어의 개수가 100개이고 벡터가 101개의 0 또는 1로 표현되는 경우라면, 등록되지 않은 단어의 정수화된 값 을 101로 설정함으로써 그 벡터는 [0,0,0,0,0,~,1]이 된다. 또한, 임계숫자 이상의 정수를 갖는 단어에 의한 벡터가 과반을 초과하는 경우에만 카테고리를 하향 조정할 수 있다. 다시 말해 빈번하게 쓰이는 단어로서 낮은 숫자의 정수가 아닌, 자주 쓰이지 않은 단어(즉 임계숫자 보다 높은 정수로 변환됨)가 많은 경우에만 카테고리를 하향 조정하는 것이다. 빈번하게 이용되는 단어가 많다는 것 은 이상징후가 아닌 경우일 확률이 높기 때문이다. 그리고, 로그파일의 각 문장에 대한 결정된 카테고리 중, 복구가 필요하다 판단되는 카테고리가 존재하는 경우 복구를 수행한다. 도 9는 본 발명의 일 실시예에 따른 분석된 카테고리를 이용한 복구 과정을 도시한 흐름도이다. 도 9를 참조하면, 기계학습에 의해 텍스트 비교 분석에 의한 카테고리를 확인하고(S910), 복구가 필요한지 여부 를 판단한다(S920). 복구가 불필요한 경우 프로세스 종료할 수 있으며, 또는 도면과 같이 현재시점으로의 인스턴스 및/또는 볼륨의 백업을 위해 관련정보를 백업데이터로서 저장한다(S930). 복구가 필요하다 판단되면, 카테고리에 따른 복구방식을 결정하고(S940). 인스턴스 복구 및/또는 볼륨 복구를 수행한다(S950) 예를 들어, 카테고리가 INFO 인 경우엔, 사용자, 관리자 설정에 의해 등록된 백업 시점에 따라 인스턴스 백업 또는 볼륨 백업 중 어느 하나를 수행한다. WARNING 인 경우, 사용자, 관리자 설정에 의해 등록된 백업 시점에 따라 인스턴스 백업 및 볼륨 백업을 모두 수행한다. CRITICAL이거나, ERROR인 경우 자체 필요하다 판단되는 시 점으로 자동 백업을 수행한다. 또한, 최초에는 레이블이 CRITICAL이거나 ERROR인 경우 제1 시점을 기준으로 자동 백업을 수행하고, 제 1시점으 로의 백업 이후에도 동일한 에러가 발생하면(즉 다시 로그파일에 대한 문자열 비교에 의한 이상징후를 확인) 그 이전 시점(또는 서비스 시작 시점)으로의 백업자료를 사용한다(시간이 지날수록 에러 누적으로 인해 정상적인 백업이 아닐 가능성이 높음). 그리고, 백업 수행 후 배드섹터 검출 수행 및 백업된 자료 복구 테스트를 진행할 수도 있다. 다시 말해, 카테고리가 제1 유형인 경우 제1 시점으로 볼륨을 백업하고, 카테고리가 제2 유형인 경 우 제1 시점보다 늦은 시점인 제2 시점으로 1차 백업 후 다음 로그정보의 분석에 따라 제1 시점으로의 복구 여 부를 결정할 수 있다. 물론 상술한 예시들은 하나의 일례일 뿐 각 카테고리마다의 복구 여부 및 방식은 달리 설정될 수도 있음은 당연 하다.상술한 본 발명에 따른 로그정보 기반 클라우드 이상 대응 방법을 수행하도록 하는 컴퓨터-판독 가능 매체에 저 장된 컴퓨터 프로그램이 제공될 수 있다. 또한, 상술한 로그정보 기반 클라우드 이상 대응 방법은 컴퓨터로 읽을 수 있는 기록 매체에 컴퓨터가 읽을 수 있는 코드로서 구현되는 것이 가능하다. 컴퓨터가 읽을 수 있는 기록매체로는 컴퓨터 시스템에 의하여 해독될 수 있는 데이터가 저장된 모든 종류의 기록 매체를 포함한다. 예를 들어, ROM(Read Only Memory), RAM(Random Access Memory), 자기 테이프, 자기 디스크, 플래쉬 메모리, 광 데이터 저장장치 등이 있을 수 있다. 또한, 컴 퓨터가 읽을 수 있는 기록매체는 컴퓨터 통신망으로 연결된 컴퓨터 시스템에 분산되어, 분산방식으로 읽을 수 있는 코드로서 저장되고 실행될 수 있다. 또한, 상기에서는 본 발명의 바람직한 실시예를 참조하여 설명하였지만, 해당 기술 분야에서 통상의 지식을 가 진 자라면 하기의 특허 청구의 범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명을 다양하게 수정 및 변경시킬 수 있음을 이해할 수 있을 것이다."}
{"patent_id": "10-2023-0132927", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 로그정보 기반 클라우드 이상 대응 시스템의 구성을 도시한 기능블록도. 도 2는 본 발명의 일 실시예에 따른 로그정보 기반 클라우드 이상 대응 과정을 도시한 흐름도. 도 3은 본 발명의 일 실시예에 따른 인공지능에 의한 로그 파일의 텍스트 분석을 이용한 카테고리 결정 과정을 도시한 흐름도. 도 4 및 도 5는 본 발명의 일 실시예에 따른 텍스트 전처리 과정을 도시한 예시도들.도 6은 본 발명의 일 실시예에 따른 텍스트의 정수 변환 과정을 도시한 예시도. 도 7은 본 발명의 일 실시예에 따른 정수화된 정보의 벡터변환을 이용한 카테고리 결정 방식을 도시한 예시도. 도 8은 본 발명의 일 실시예에 따른 정확도 측정을 이용한 카테고리 결정 방식을 도시한 예시도. 도 9는 본 발명의 일 실시예에 따른 분석된 카테고리를 이용한 복구 과정을 도시한 흐름도."}
