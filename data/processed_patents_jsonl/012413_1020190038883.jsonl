{"patent_id": "10-2019-0038883", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0117158", "출원번호": "10-2019-0038883", "발명의 명칭": "메모리 네트워크 장치 및 이를 이용한 추론 방법", "출원인": "에스케이텔레콤 주식회사", "발명자": "윤상용"}}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "주어진 질문과의 관련성 연산에 사용되는 제1 구성요소를 복수 개 저장하는 입력 데이터부와,상기 질문의 답변 추론에 사용되는 제2 구성요소를 복수 개 저장하는 출력 데이터부와, 상기 제1 구성요소에 대해 상기 질문이 갖는 관련성을 상기 복수 개의 제1 구성요소 각각에 대해 병렬적으로 연산하는 제1 연산, 상기 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환해서 상기 변환된 결과들을 합산하는 제2 연산 및 상기 제2 연산에 따라 변환된 결과들이 도출될 때마다 상기 도출된 변환된결과를 가중치로 해서 상기 복수 개의 제2 구성요소 각각에 대해 가중치 연산을 수행하고 상기 가중치 연산이수행된 결과를 합산하는 제3 연산을 수행하는 주 연산부를 포함하는메모리 네트워크 장치."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 주 연산부는,상기 제1 연산, 상기 제2 연산 및 상기 제3 연산을 병렬적으로 수행하는메모리 네트워크 장치."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 주 연산부는 복수 개의 연산 유닛부를 포함하고,상기 복수 개의 연산 유닛부 각각에서는 상기 제1 연산, 상기 제2 연산 및 상기 제3 연산 중 어느 하나가 병렬적으로 수행되는 메모리 네트워크 장치."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 제2 연산에 따라 합산된 결과와 상기 제3 연산에 따라 합산된 결과를 취합하는 취합부를 더 포함하는메모리 네트워크 장치."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "주어진 질문과의 관련성 연산에 사용되는 제1 구성요소가 복수 개 마련되는 단계와,상기 질문의 답변 추론에 사용되는 제2 구성요소가 복수 개 마련되는 단계와,상기 제1 구성요소에 대해 상기 질문이 갖는 관련성을 상기 복수 개의 제1 구성요소 각각에 대해 병렬적으로 연산하는 단계와,상기 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환해서 상기 변환된 결과들을 합산하는 단계와,상기 변환된 결과들이 도출될 때마다 상기 도출된 변환된 결과를 가중치로 해서 상기 복수 개의 제2 구성요소들각각에 대해 가중치 연산을 수행하고, 상기 가중치 연산이 수행된 결과들을 합산하는 단계를 포함하는공개특허 10-2020-0117158-3-추론 방법."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 따른 추론 방법에 포함된 각 단계를 포함하여 수행하도록 프로그램된 컴퓨터 프로그램을 저장하는 컴퓨터 판독가능한 기록매체."}
{"patent_id": "10-2019-0038883", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5 항에 따른 추론 방법에 포함된 각 단계를 포함하여 수행하도록 프로그램된 컴퓨터 판독가능한 기록매체에저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 따른 메모리 네트워크 장치는 주어진 질문과의 관련성 연산에 사용되는 제1 구성요소를 복수 개 저 장하는 입력 데이터부와, 상기 질문의 답변 추론에 사용되는 제2 구성요소를 복수 개 저장하는 출력 데이터부와, 상기 제1 구성요소에 대해 상기 질문이 갖는 관련성을 상기 복수 개의 제1 구성요소 각각에 대해 병렬적으로 연 산하는 제1 연산, 상기 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환해서 상기 변환된 결과들을 합산하는 제2 연산 및 상기 제2 연산에 따라 변환된 결과들이 도출될 때마다 상기 도출된 변환된 결과 를 가중치로 해서 상기 복수 개의 제2 구성요소 각각에 대해 가중치 연산을 수행하고 상기 가중치 연산이 수행된 결과들을 합산하는 제3 연산을 수행하는 주 연산부를 포함한다."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 메모리 네트워크 장치 및 이를 이용한 추론 방법에 관한 것이다."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 신경망이란 데이터를 통해 문제를 푸는 방법을 스스로 학습하는 머신 러닝 기술을 가리킨다. 인공 신경망 은 이미지 인식이나 사물 추적 등과 같은 영상 분석 등에서 사람과 비견할 만한 정확성을 보여주고 있다. 이러한 인공 신경망 중 하나인 메모리 네트워크는 문맥을 파악하여 결과를 도출할 수 있는, 즉 추론 능력을 갖 는 기술을 지칭한다. 메모리 네트워크는 추천 시스템이나 인공지능 비서 등 다양한 인공지능 기반 시스템의 중 추 역할을 할 것으로 기대받고 있다. 메모리 네트워크의 경우 기존의 인공 신경망과는 달리, 이전에 처리한 연산에 대한 경험을 누적시켜서 활용할 수 있다. 즉, 기존의 인공 신경망은 현재 학습된 지식을 기반으로 작업을 수행할 뿐 과거에 스스로가 처리한 경 험들을 작업에 활용하지 않는다. 반면, 메모리 네트워크는 과거에 처리한 경험을 사용하여서 작업을 사용할 수 있다. 따라서, 메모리 네트워크는 예컨대 영화나 책을 분석하여 주어진 질문에 대해 답을 할 수 있으며 또한 사 용자와 질의응답을 주고 받을 수도 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국등록특허공보, 10-1334196호 (2013.11.22. 등록)"}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 해결하고자 하는 과제는 전술한 메모리 네트워크의 성능 향상에 관한 기술을 제공하는 것이다. 예컨대 메모리 네트워크에서 복수 개의 연산이 순차적으로 수행되게 되면 그 과정에서 중간 데이터가 발생할 수 있는데, 이러한 중간 데이터는 경우에 따라 전체 메모리 시스템에 저장될 필요가 있다. 이에 본 발명에서 해결 하고자 하는 과제는, 이렇게 중간 데이터가 전체 메모리 시스템에 저장되어야 함으로써 발생 가능한 문제를 개 선 내지 해결하는 것을 포함한다. 뿐만 아니라 메모리 네트워크에서는 동일한 메모리 시스템을 서로 상이한 방식으로 사용하는 다양한 종류의 연 산(예컨대 임베딩 과정과 추론 과정)이 수행될 수 있는데, 이로 인해 간섭이 발생할 수 있다. 이에 본 발명에서 해결하고자 하는 과제는, 이러한 간섭을 개선 내지 해결하는 것을 포함한다. 아울러, 본 발명에서 해결하고자 하는 과제는, 메모리 네트워크에서 대용량의 데이터가 효율적으로 처리되도록 하는 것을 포함한다. 다만, 본 발명의 해결하고자 하는 과제는 이상에서 언급한 것으로 제한되지 않으며, 언급되지 않은 또 다른 해 결하고자 하는 과제는 아래의 기재로부터 본 발명이 속하는 통상의 지식을 가진 자에게 명확하게 이해될 수 있 을 것이다."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 메모리 네트워크 장치는 주어진 질문과의 관련성 연산에 사용되는 제1 구성요소를 복수 개 저 장하는 입력 데이터부와, 상기 질문의 답변 추론에 사용되는 제2 구성요소를 복수 개 저장하는 출력 데이터부와, 상기 제1 구성요소에 대해 상기 질문이 갖는 관련성을 상기 복수 개의 제1 구성요소 각각에 대해 병렬적으로 연산하는 제1 연산, 상기 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환해 서 상기 변환된 결과들을 합산하는 제2 연산 및 상기 제2 연산에 따라 변환된 결과들이 도출될 때마다 상기 도 출된 변환된 결과를 가중치로 해서 상기 복수 개의 제2 구성요소 각각에 대해 가중치 연산을 수행하고 상기 가 중치 연산이 수행된 결과를 합산하는 제3 연산을 수행하는 주 연산부를 포함한다. 일 실시예에 따른 추론 방법은 주어진 질문과의 관련성 연산에 사용되는 제1 구성요소가 복수 개 마련되는 단계 와, 상기 질문의 답변 추론에 사용되는 제2 구성요소가 복수 개 마련되는 단계와, 상기 제1 구성요소에 대해 상 기 질문이 갖는 관련성을 상기 복수 개의 제1 구성요소 각각에 대해 병렬적으로 연산하는 단계와, 상기 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환해서 상기 변환된 결과들을 합산하는 단계와, 상기 변환된 결과들이 도출될 때마다 상기 도출된 변환된 결과를 가중치로 해서 상기 복수 개의 제2 구성요소들 각각에 대해 가중치 연산을 수행하고, 상기 가중치 연산이 수행된 결과들을 합산하는 단계를 포함하여 수행된다."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "일 실시예에 따르면 메모리 네트워크의 성능을 향상시키는 기술이 제공될 수 있다. 예컨대 중간 데이터가 전체 메모리 시스템에 저장되어야 함으로써 발생 가능한 문제가 개선 내지 해결될 수 있으며, 동일한 메모리 시스템 을 서로 상이한 방식으로 사용하는 다양한 종류의 연산(예컨대 임베딩 과정과 추론 과정)이 수행될 때 발생 가 능한 간섭이 개선 내지 억제될 수 있다. 뿐만 아니라 대용량의 데이터가 효율적이면서도 신속하게 처리될 수 있 다."}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하"}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명 은 청구항의 범주에 의해 정의될 뿐이다. 본 발명의 실시예들을 설명함에 있어서 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요 하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략할 것이다. 그리고 후술되는 용어들은 본 발명의 실시예에서의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 도 1은 일 실시예에 따른 메모리 네트워크 장치에 대한 개략적인 구성도이다. 도 1을 참조하면, 메모리 네트워크 장치는 입력 메모리부, 출력 메모리부, 주 연산부, 취합부, 인식용 컨버팅 부, 정규화부 및 제어부를 포함한다. 다만, 도 1에 도시된 구성도는 예시적인 것에 불과하므로,메모리 네트워크 장치가 도 1에 도시된 것으로 한정 해석되는 것은 아니다. 예컨대 메모리 네트워크 장치 는 실시예에 따라 도 1에 도시된 구성 중 적어도 하나를 포함하지 않거나 또는 도 1에 도시되지 않은 구 성을 추가로 포함할 수 있다. 먼저, 메모리 네트워크 장치 및 이러한 메모리 네트워크 장치에 포함되어 있는 전술한 구성들 각각 은 프로세서에 의해 실행되는 소프트웨어 모듈이나 하드웨어 모듈 형태로 구현되거나 또는 소프트웨어 모듈과 하드웨어 모듈이 조합된 형태로 구현될 수 있다. 입력 메모리부에는 컨텍스트 정보를 기반으로 생성된 복수 개의 제1 구성요소들이 저장된다. 여기서 컨텍 스트 정보란 적어도 하나의 문장이 갖는 의미나 문맥의 파악에 이용될 수 있는, 다양한 종류의 데이터를 가리킨 다. 예컨대 책이나 영화의 내용, 사람 간의 대화 또는 신문 기사 등이 컨텍스트 정보에 해당될 수 있다. 아울러, 복수 개의 제1 구성요소들이란 소정의 질문이 주어졌을 때 이러한 질문과의 관련성 연산, 즉 이러한 질 문의 문맥 파악에 사용되는 것들을 지칭한다, 이러한 제1 구성요소들은 전술한 컨텍스트 정보가 임베딩 행렬 A (도 1에 도시된 식별자 'A')와 임베딩 유닛을 이용하여서 추론에 필요한 형태로 변환되어서 생성된 것일 수 있 다. 임베딩 행렬 A와 임베딩 유닛 등에 대해서는 후술하기로 한다. 출력 메모리부에는 입력 메모리부에서 언급된 것과 동일한 컨텍스트 정보를 기반으로 생성된 복수 개 의 제2 구성요소들이 저장된다. 여기서, 복수 개의 제2 구성요소들이란 주어진 질문에 대한 답변 추론에 사용되 는 것들을 지칭한다. 이러한 제2 구성요소들은 전술한 컨텍스트 정보가 임베딩 행렬 A와는 동일 또는 상이할 수 있는 임베딩 행렬 C(도 1에 도시된 식별자 'C')와 임베딩 유닛을 이용하여서 추론에 필요한 형태로 변환(임베딩 과정)되어서 생성된 것일 수 있다. 임베딩 행렬 C와 임베딩 유닛 등에 대해서는 후술하기로 한다. 한편, 복수 개의 제1 구성요소들 각각은 복수 개의 제2 구성요소들 중 어느 하나와 일대일로 대응 내지 매핑될 수 있다. 주 연산부는 주어진 질문의 문맥을 파악하고 이를 기초로 해당 질문에 대한 답변을 추론하는 동작을 수행 한다. 이를 위해 주 연산부는 다음과 같은 연산들을 병렬적으로 수행할 수 있다. - 제1 연산 : 복수 개의 제1 구성요소 각각에 대해 소정의 질문이 갖는 관련성을 병렬적으로 연산함. - 제2 연산 : 제1 연산에 의해 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환하고, 이 렇게 변환된 결과들을 합산함 - 제3 연산 : 제2 연산에 따라 변환된 결과가 도출될 때마다 상기 도출된 변환된 결과를 가중치로 해서, 복수 개의 제2 구성요소들 각각에 대해 가중치 연산을 수행하고, 이렇게 가중치 연산이 수행된 결과들을 합산(가중치 합 연산)함 여기서 제1 연산에서는, 질문과 제1 구성요소 간의 내적 연산을 기초로 관련성이 연산될 수 있다. 또한 제2 연 산에서 언급된 '소정의 알고리즘'은 제1 연산에 의해 연산된 관련성에 대한 거듭제곱 연산을 가리킬 수 있다. 또한 제3 연산에서는, 제2 연산에 따라 변환된 결과와 제2 구성요소 간의 곱셈(즉, 제2 연산에 따라 변환된 결 과를 가중치로 하는 곱셈 연산) 및 곱셈된 결과의 합이 연산될 수 있다 여기서, 실시예에 따라 주 연산부는 복수 개의 연산 유닛부를 포함할 수 있는데, 이러한 복수 개의 연산 유닛부 각각에서는 전술한 제1 연산, 제2 연산 및 제3 연산 각각이 병렬적으로 또는 순차적으로 수행 될 수 있다. 취합부는 주 연산부가 제2 연산에 따라 합산한 결과와 제3 연산에 따라 합산한 결과를 취합한다. 취 합하는 과정에서, 취합부는 제3 연산에 따라 합산된 결과를 제2 연산에 따라 합산된 결과로 나눌 수 있다. 취합부가 이와 같이 취합하는 과정은 아래의 수학식 1과 같이 표현될 수 있다.수학식 1"}
{"patent_id": "10-2019-0038883", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, 수학식 1의 ΣPartial_Oi는 전술한 제3 연산에 따라 합산된 결과를 나타내고, ΣPartial_P_sumi는 전술 한 제2 연산에 따라 합산된 결과를 나타낸다. 아울러, 취합부는 이렇게 취합된 결과와 전술한 질문을 더해서 질문을 갱신한다. 또한, 취합부는 추가적인 추론이 필요한지를 판단한다. 판단 결과, 추가적인 추론이 필요한 것으로 판단될 수 있다. 예컨대 질문의 복잡도에 따라 더 깊은 추론이 필요 한 경우가 있을 수 있다. 이 경우 전술한 제1 연산 내지 제3 연산이 갱신된 질문에 대해 다시 수행될 수 있다. 이와 달리 추가적인 추론이 필요하지 않은 것으로 판단될 수 있다. 이 경우 갱신된 질문은 최종 추론 결과가 되 며, 인식용 컨버팅부는 이러한 갱신된 질문을 사람이 인식할 수 있는 형태로 컨버팅한다. 이 때 인식용 컨 버팅부는 컨버팅 행렬 W(도 1에 도시된 식별자 'W')를 갱신된 질문에 곱하여 전술한 컨버팅을 수행할 수 있다. 정규화부는 인식용 컨버팅부가 컨버팅한 결과에 대해 정규화를 수행한다. 정규화의 수행 방법으로는 다양한 것들이 있으며, 예컨대 소프트맥스(softmax)가 이에 포함될 수 있다. 제어부는 메모리 네트워크 장치에 관한 전반적인 동작을 제어한다. 예컨대 제어부는 임베딩 행렬 A,B,C와 컨버팅 행렬 W, 컨텍스트 정보, 질문 등을 외부의 메모리 주소 또는 데이터의 형태로서 주 연산부 , 인식용 컨버팅부, 입력 메모리부 또는 출력 메모리부에 전달할 수 있다. 뿐만 아니라 제 어부는 기존에 임베딩된 컨텍스트 정보가 있을 경우 이를 주 연산부에 전달할 수도 있다. 이러한 제 어부는 도면에는 도시되지 않았지만 외부의 호스트 시스템 또는 가속기 내부의 컨트롤러에 의해 제어될 수 있다. 이하에서는 도 3을 참조하여 이러한 메모리 네트워크 장치에서 수행 가능한 질문에 대한 추론 방법에 대 해 살펴보도록 한다. 도 3은 일 실시예에 따른 메모리 네트워크 장치에서 수행될 수 있는 추론 방법에 대한 순서도이다. 다만 도 3에 도시된 순서도는 예시적인 것에 불과하므로 본 발명의 사상이 도 3에 도시된 것으로 한정 해석되는 것은 아니다. 주 연산부는 다음과 같은 연산들을 병렬적으로 수행할 수 있다. - 제1 연산 : 복수 개의 제1 구성요소 각각에 대해 소정의 질문이 갖는 관련성을 병렬적으로 연산함. - 제2 연산 : 제1 연산에 의해 연산된 관련성 복수 개 각각을 소정의 알고리즘에 따라 병렬적으로 변환하고, 이 렇게 변환된 결과들을 합산함 - 제3 연산 : 상기 제2 연산에 따라 변환된 결과가 도출될 때마다 상기 도출된 변환된 결과를 가중치로 해서, 복수 개의 제2 구성요소들 각각에 대해 가중치 연산을 수행하고, 이렇게 가중치 연산이 수행된 결과들을 합산 (가중치합 연산)함 여기서 제1 연산에서는, 질문과 제1 구성요소 간의 내적 연산을 기초로 관련성이 연산될 수 있다. 또한 제2 연 산에서 언급된 '소정의 알고리즘'은 제1 연산에 의해 연산된 관련성에 대한 거듭제곱 연산을 가리킬 수 있다. 또한 제3 연산에서는, 제2 연산에 따라 변환된 결과와 제2 구성요소 간의 곱셈 및 곱셈된 결과의 합산이 연산될 수 있다 여기서, 실시예에 따라 주 연산부는 복수 개의 연산 유닛부를 포함할 수 있는데, 이러한 복수 개의 연산 유닛부 각각에서는 전술한 제1 연산, 제2 연산 및 제3 연산 각각이 병렬적으로 또는 순차적으로 수행 될 수 있다. 다음으로, 취합부는 주 연산부가 제2 연산에 따라 합산한 결과와 제3 연산에 따라 합산한 결과를 취 합한다. 취합하는 과정에서, 취합부는 제3 연산에 따라 합산된 결과를 제2 연산에 따라 합산된 결과로 나 눌 수 있다. 취합부가 이와 같이 취합하는 과정은 전술한 수학식 1과 같이 표현될 수 있다. 아울러, 도 3에는 도시되지 않았지만 취합부는 이렇게 취합된 결과와 전술한 질문을 더해서 질문을 갱신할 수 있고, 추가적인 추론이 필요한지를 판단할 수 있다. 판단 결과, 추가적인 추론이 필요한 것으로 판단될 수 있다. 이 경우 전술한 제1 연산 내지 제3 연산은 갱신된 질문에 대해 다시 수행될 수 있다. 이와 달리 추가적인 추론이 필요하지 않은 것으로 판단될 수 있다. 이 경우 갱신된 질문은 최종 추론 결과가 되 며, 인식용 컨버팅부는 이러한 갱신된 질문을 사람이 인식할 수 있는 형태로 컨버팅한다(S130). 이 때 인 식용 컨버팅부는 컨버팅 행렬 W를 이용해서 전술한 컨버팅을 수행할 수 있다. 다음으로, 정규화부는 인식용 컨버팅부가 컨버팅한 결과에 대해 정규화를 수행한다(S140). 정규화의 수행 방법으로는 다양한 것들이 있으며, 예컨대 소프트맥스(softmax)가 이에 포함될 수 있다. 이상에서 살펴본 바와 같이, 일 실시예에 따른 메모리 네트워크 장치에 따르면, 주어진 질문의 문맥을 파악하고 이를 기초로 해당 질문에 대한 답변을 추론하는 일련의 과정은 복수 개로 분할되어서 병렬적으로 수행될 수 있 다. 예컨대 전술한 제1 연산 내지 제3 연산은 메모리 네트워크 장치에 마련된 복수 개의 연산 유닛부 각각에서 병렬적으로 수행될 수 있다. 따라서 일 실시예에 따르면 전술한 제1 연산 내지 제3 연산은, 이러한 제1 연산 내 지 제3 연산이 병렬적으로 처리되지 않고 순차적으로 한번에 처리되는 종래의 경우에 비해 효율적이면서도 신속 하게 처리될 수 있다. 아울러 종래의 경우에는 중간 데이터가 전체 메모리 시스템에 저장되어야 함으로써 발생 가능한 문제가 존재하 는 반면, 일 실시예에 따르면 이러한 문제가 개선 내지 해결될 수 있다. 이에 대해서는 이하에서 보다 구체적으 로 살펴보도록 하자. 먼저 종래의 경우에 대해 살펴보도록 한다. 주어진 질문과 입력 메모리부에 저장된 복수 개의 제1 구성요소 각 각 간의 내적 연산이 수행된다. 이 후, 이렇게 내적 연산이 수행된 복수 개의 결과들을 이용해서 소프트맥스 연 산이 수행된다. 이러한 소프트맥스 연산이 수행 완료되기 위해서는, 내적 연산이 수행된 복수 개의 결과들을 지 수로 하는 거듭제곱 연산이 복수 개의 결과들 전부에 대해 수행 완료되어야만 한다. 소프트맥스 연산이 수행 완 료되면, 소프트맥스 연산이 수행된 결과와 출력 메모리부에 저장된 복수 개의 제2 구성요소 각각 간의 가중치합 연산이 수행된다. 즉, 종래의 경우에서는 소프트맥스 연산이 수행 완료되어야만이 비로소 출력 메모리부에 저장된 데이터를 이용 한 가중치합 연산이 수행될 수 있다. 뿐만 아니라 소프트맥스 연산의 수행 과정에서는 중간 연산값이 발생하게 되고 이러한 중간 연산값은 저장되어야 하는데, 이렇게 저장되어야 하는 중간 연산값으로 인해 메모리 네트워크 의 메모리 시스템이 낭비되고 비효율적으로 사용될 수 있다. 반면 일 실시예에 따른 메모리 네트워크 장치에서는 종래의 경우와는 다른 방식으로 소프트맥스 연산이 수행될 수 있으므로, 종래의 경우보다 효율적이면서도 신속하게 전술한 일련의 과정이 수행될 수 있다. 뿐만 아니라 일 실시예에 따른 메모리 네트워크 장치는 임베딩에 사용되는 메모리와 질문의 답변 추론에 사용되 는 메모리가 분리되도록 구성된다. 예컨대 도 1을 참조하면, 임베딩에 사용되는 임베딩 행렬 A,B,C, 컨버팅 행 렬 W, 컨텍스트 정보, 입력 메모리부와 출력 메모리부는 서로 구분되어서 구성된다. 따라서 서로 상이한 방식으 로 메모리를 사용하는 다양한 종류의 연산(예컨대 임베딩 과정과 추론 과정)이 수행된다고 하더라도, 그로 인해 간섭이 발생하지 않을 수 있다. 이하에서는 도 4와 도 5를 도 1 내지 3과 함께 참조하면서, 메모리 네트워크 장치에 대해 보다 살펴보기 로 한다. 도 4는 도 2에 도시된 연산 유닛부에 대한 개략적인 구성도이다. 도 4를 참조하면, 연산 유닛부는 복 수 개의 임베딩 유닛, 제1 선택부, 관련성 연산부, 추론부 및 제2 선택부를포함하고, 이 때 추론부는 거듭 제곱부, 곱셈/누적부 및 누적부를 포함한다. 다만 도 4에 도시된 구성도는 예시적인 것에 불과하므로, 연산 유닛부의 구성이 도 4에 도시된 것으로 한정 해석되는 것은 아니다. 임베딩 유닛은 입력 벡터를 추론에 필요한 형태인 출력 벡터로 변환시키는 구성이다. 연산 유닛부에 는 도시된 것과 같이 이러한 임베딩 유닛이 3개가 포함될 수 있으며, 다만 그 개수는 예시에 불과하다. 이 때 3개의 임베딩 유닛 각각에는 임베딩 행렬 A,B,C 중 어느 1개가 제공될 수 있다. 여기서, 입력 벡터에는 컨텍스트 정보 또는 질문 등이 포함될 수 있다. 도 5는 이러한 임베딩 유닛에 대한 개략적인 구성도이다. 도 5를 참조하면, 임베딩 유닛은 열 선택부 , 가중치 곱셈부 및 덧셈 트리부를 포함하며, 다만 임베딩 유닛의 구성이 도 5에 도시 된 구성도에 한정되는 것은 아니다. 열 선택부에는 제어부에 의해 다양한 종류의 임베딩 행렬(A,B,C), 컨버팅 행렬(W)이 제공될 수 있다. 열 선택부는 임베딩 행렬 또는 컨버팅 행렬을 구성하는 열 중에서 입력 벡터의 각 요소에 대응되는 값을 선택해서 읽어온다. 가중치 곱셈부는 열 선택부가 읽어온 값들에 가중치를 곱해서 출력한다. 이 때 곱해지는 가중치는 입력 벡터가 가리키는 문맥 상의 문장 순서 및 문장 내의 단어 순서에 따라 달라질 수 있다. 덧셈 트리부는 가중치 곱셈부가 출력한 값들에 대해 덧셈 트리를 이용해서 하나의 벡터를 형성한 뒤 출력한다. 이렇게 출력된 벡터가 출력 벡터이다. 다시 도 4를 참조하자. 제1 선택부와 제2 선택부는 멀티플렉서로 구성될 수 있다. 제1 선택부는 입력 메모리부에 저장된 복수 개의 제1 구성요소 중에서 임베딩 유닛에 의해 변환된 컨텍스트 정보에 대응되는 제1 구성요소를 '컨텍스트 정보 A'로서 출력할 수 있다. 제2 선택부는 출력 메모리부에 저장된 복수 개의 제2 구성요소 중에서 임베딩 유닛에 의해 변환 된 컨텍스트 정보에 대응되는 제2 구성요소를 '컨텍스트 정보 B'로서 출력할 수 있다. 관련성 연산부는 컨텍스트 정보 A와 질문 A간의 관련성을 연산한다. 여기서 질문 A란 제어부에 의해 제공된 질문이 임베딩 행렬 B를 이용하는 임베딩 유닛에 의해 변환된 것을 지칭한다. 아울러 관련성 연산 과정에는 컨텍스트 정보 A와 질문 A간의 내적 연산이 포함될 수 있으며 다만 이에 한정되지는 않는다. 추론부는 전술한 바와 같이 거듭 제곱부, 곱셈/누적부 및 누적부를 포함한다. 이 중 거듭 제곱부는 관련성 연산부가 연산한 관련성, 즉 컨텍스트 정보 A와 질문 A간의 내적 연산 결과를 지수로 하는 거듭제곱 연산을 수행할 수 있다. 곱셈/누적부는 컨텍스트 정보 B에 거듭 제곱부(31 4)가 수행한 거듭제곱 연산이 결과를 가중치로 해서 곱하는 가중치 연산을 수행할 수 있다. 누적부는 곱셈 /누적부가 수행한 연산 결과를 누적해서 더할 수 있다. 이 때 곱셈 누적부가 수행한 연산 결과와 누 적부가 수행한 연산 결과가 연산 유닛부가 출력하는 결과물에 포함된다. 여기서 도 4에 도시된 연산 유닛부의 구조는 논리적인 구성으로서, 도 4에는 도시되어 있지는 않지만 복수 개의 연산 유닛부 각각 간의 연산 사이클 차이로 인한 버블, 최적화를 위한 데이터 포워딩 로직 등이 연산 유닛부에 추가될 수 있다. 이하에서는 컨텍스트 정보에 대한 예시 및 이러한 컨텍스트 정보를 기초로 생성된 제1 또는 제2 구성요소의 예 시에 대해 도 6 내지 8을 참조하여서 살펴보기로 한다. 도 6을 참조하면, 컨텍스트 정보에 대한 예시로서 3개의 문장(C1 내지 C3)이 도시되어 있다. 또한 도 6에는 단 어(Word)-인덱스(Index) 정보가 예시적으로 도시되어 있다. 이러한 단어-인덱스 정보는 문장을 벡터의 형태로 변환할 때 이용되는 정보이다. 즉, 이러한 단어-인덱스 정보를 통해, 임의의 문장은 해당 문장에 어 떠한 단어가 포함되어 있는지를 나타내는 벡터의 형태로 변환될 수 있다. 여기서 단어-인덱스 정보는 임의 대로 생성 가능하다. 도 6에는 이러한 단어-인덱스 정보를 이용해서 변환된 문장 C1에 대한 벡터가 도시되어 있고, 또한 이 러한 단어-인덱스 정보를 이용해서 변환된 문장 C1 내지 C3에 대한 행렬이 도시되어 있다. 도 7에는 임의의 임베딩 행렬이 도시되어 있고, 전술한 C1에 대한 벡터를 기초로 이러한 임베딩 행렬 에서 추출된 행렬 및 이렇게 추출된 러한 행렬로부터 연산된 벡터가 도시되어 있다. 구체적으로 살펴보면, 임베딩 행렬 중에서 문장 C1에 포함된 단어와 관련된 벡터, 즉 단어 'Mary', 'went', 'to', 'the' 및 'bathroom' 에 대응되는 열이 추출될 수 있고, 이렇게 추출된 열이 조합됨으로써 행렬이 구 성될 수 있다. 아울러 이렇게 구성된 행렬에서, 동일한 행을 구성하는 엘리먼트들끼리 합산될 경우 벡터가 연산될 수 있다. 여기서 연산된 벡터는 전술한 제1 구성요소에 해당될 수 있다. 도 8에는 도 6과 7에서 설명된 과정을 거쳐서 생성된 문장 C1 내지 C3에 대한 제1 구성요소가 예시적으로 도시 되어 있다. 한편, 도 6 내지 8에 대해 설명된 내용은 제2 구성요소에 대해서도 그대로 적용될 수 있다.이상에서 살펴본 바 와 같이, 일 실시예에 따르면 메모리 네트워크의 성능을 향상시키는 기술이 제공될 수 있다. 예컨대 중간 데이 터가 전체 메모리 시스템에 저장되어야 함으로써 발생 가능한 문제가 개선 내지 해결될 수 있으며, 동일한 메모 리 시스템을 서로 상이한 방식으로 사용하는 다양한 종류의 연산(예컨대 임베딩 과정과 추론 과정)이 수행될 때 발생 가능한 간섭이 개선 내지 억제될 수 있다. 뿐만 아니라 대용량의 데이터가 효율적이면서도 신속하게 처리 될 수 있다. 한편, 일 실시예에 따른 추론 방법은 이러한 방법의 각 단계를 수행하도록 프로그램된 컴퓨터 판독가능한 기록 매체에 저장된 컴퓨터 프로그램의 형태 또는 이러한 방법의 각 단계를 수행하도록 프로그램된 컴퓨터 프로그램 을 저장하는 컴퓨터 판독가능한 기록매체의 형태로 구현 가능하다. 이상의 설명은 본 발명의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 발명이 속하는 기술 분야에 서 통상의 지식을 가진 자라면 본 발명의 본질적인 품질에서 벗어나지 않는 범위에서 다양한 수정 및 변형이 가 능할 것이다. 따라서, 본 발명에 개시된 실시예들은 본 발명의 기술 사상을 한정하기 위한 것이 아니라 설명하 기 위한 것이고, 이러한 실시예에 의하여 본 발명의 기술 사상의 범위가 한정되는 것은 아니다. 본 발명의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 균등한 범위 내에 있는 모든 기술사상은 본 발명의 권 리범위에 포함되는 것으로 해석되어야 할 것이다 산업상 이용가능성 일 실시예에 따르면 메모리 네트워크의 성능을 향상시키는 기술이 제공될 수 있다."}
{"patent_id": "10-2019-0038883", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 메모리 네트워크 장치에 대한 개략적인 구성도이다. 도 2는 도 1에 도시된 주 연산부에 대한 개략적인 구성도이다. 도 3은 일 실시예에 따른 메모리 네트워크 장치에서 수행될 수 있는 추론 방법에 대한 순서도이다. 도 4는 도 2에 도시된 연산 유닛부에 대한 개략적인 구성도이다. 도 5는 도 4에 도시된 임베딩 유닛에 대한 개략적인 구성도이다. 도 6 내지 8은 컨텍스트 정보와 제1 및 제2 구성요소에 대한 예시이다."}
