{"patent_id": "10-2015-0107491", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2017-0014339", "출원번호": "10-2015-0107491", "발명의 명칭": "오류 감소를 위한 디코딩 장치 및 방법", "출원인": "삼성전자주식회사", "발명자": "김대선"}}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "리스트 비터비 디코더(list viterbi decoder)의 동작 방법에 있어서,입력신호 레벨과 PMD(path metric difference) 리미트 값을 이용하여 PMD 임계값을 설정하는 동작과,상기 PMD 임계값을 이용하여 디코딩하는 동작을 포함하며,상기 디코딩하는 동작은,베스트 경로의 PMD를 결정하는 동작과,상기 결정된 PMD와 상기 PMD 임계값을 비교하는 동작과,상기 PMD가 상기 PMD 임계값 보다 크면 디코딩 오류를 선언하고 디코딩을 종료하는 동작을 포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 비교하는 동작에서 상기 PMD가 상기 PMD 임계값 보다 작으면 부호어를 생성하는 동작과,상기 생성된 부호어의 오류를 검사하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2항에 있어서,상기 오류를 검사하는 동작은 오류 발생시 리스트 횟수를 검사하는 동작과,리스트 횟수가 최대 횟수이면 디코딩 오류를 선언하고 디코딩을 종료하는 동작; 및상기 리스트 횟수가 최대 횟수가 아니면 상기 PMD 임계값을 이용하여 디코딩하는 동작으로 재개하는 동작을 더포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 부호어의 오류를 검사하는 동작에서 오류 검사 성공이면 디코딩된 데이터를 소스 디코더에 전송하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 2항에 있어서,상기 오류 검사 성공이면 부호어의 PMD 값을 PMD 임계값과 비교하는 동작과,상기 부호어의 PMD 값이 PMD 임계값보다 크면 디코딩 오류를 선언하고 디코딩을 종료하는 동작을 더 포함하는방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항에 있어서,상기 입력신호 레벨은 입력 신호의 평균 레벨인 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "리스트 비터비 디코더(list Viterbi decoder)의 동작 방법에 있어서,공개특허 10-2017-0014339-3-입력신호 레벨과 PMD(path metric difference) 리미트 값을 이용하여 PMD 임계값을 설정하는 동작과,상기 PMD 임계값을 이용하여 디코딩하는 동작을 포함하며,상기 디코딩하는 동작은, 디코딩(decoding) 결과에 대한 오류 검출 동작과,상기 오류 검출에 따라 누적 경로 메트릭 값(accumulated path metric)의 차이가 임계값을 초과하는지 결정하는동작과,상기 누적 경로 메트릭 값의 차이가 임계값을 초과하지 않은 경우, 디코딩된 부호어(code word) 생성을 위한 경로(path) 결정 동작과,상기 결정된 경로에 대응되는 부호어를 생성하는 동작을 포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서,상기 임계값은 입력 신호 레벨의 평균값과 경로 PMD 리미트 값의 곱인 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8항에 있어서,상기 입력 신호 레벨의 평균값은 하기 수학식에 따라 결정되는 방법.여기서, Iin은 평균 입력 신호의 레벨, an은 입력 신호의 값, m은 코드 워드의 길이를 의미함."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 8항에 있어서,상기 경로 메트릭 차이의 한계값은 2×K이고,상기 K는 데이터 시퀀스에서 발생한 오류의 개수인 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 7항에 있어서,상기 부호어에 대한 오류 검출 동작과,상기 부호어에 오류가 검출된 경우 리스트 횟수를 검출하는 동작을 더 포함하고,상기 리스트 횟수가 최대 횟수이면 디코딩 오류를 선언하고 디코딩을 종료하는 동작과,상기 리스트 횟수가 최대 횟수가 아니면 상기 PMD 임계값을 이용하여 디코딩하는 동작으로 재개하는 동작을 더포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 7항에 있어서,상기 경로 메트릭 값의 차이가 임계값을 초과하는 경우, 디코딩 오류를 선언하고 디코딩을 종료하는 동작을 더포함하는 방법."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공개특허 10-2017-0014339-4-리스트 비터비 디코더 장치에 있어서,리스트 비터비 디코더와,상기 리스트 비터비 디코더에서 디코딩된 부호어(code word)의 오류를 검사하는 오류 검출부를 포함하며,상기 리스트 비터비 디코더는,입력신호 레벨과 PMD(path metric difference) 리미트 값을 이용하여 PMD 임계값을 설정하는 임계값 결정부와, 베스트 경로의 PMD와 상기 PMD 임계값을 비교하여 상기 PMD가 상기 PMD 임계값 보다 크면 디코딩 오류를 선언하고 디코딩을 종료하는 디코더를 포함하는 장치."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13항에 있어서,상기 디코더는,상기 PMD가 PMD 임계값 보다 작은 경우 부호어 생성을 위한 경로를 결정하고, 상기 경로에 대응되는 부호어를생성하는 장치."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 13항에 있어서,상기 PMD 임계값은 입력 신호 레벨의 평균값과 PMD 리미트 값의 곱인 장치."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15항에 있어서,상기 입력 신호 레벨의 평균값은 하기 수학식에 따라 결정되는 장치.여기서, Iin은 평균 입력 신호의 레벨, an은 입력 신호의 값, m은 코드 워드의 길이를 의미함."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15항에 있어서,상기 PMD 리미트 값은 2 × K이고,상기 K는 부호어의 오류의 개수인 장치."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 13항에 있어서,상기 오류 검출부는 디코딩된 부호어의 오류를 검출하는 CRC 검사부인 장치."}
{"patent_id": "10-2015-0107491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 13항에 있어서,상기 디코더는, 상기 디코딩된 부호어에 오류가 검출된 경우 리스트 횟수를 검사하고, 상기 리스트 횟수가 최대 횟수이면 디코딩 오류를 선언하하고 디코딩을 종료하는 장치.공개특허 10-2017-0014339-5-"}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "리스트 비터비 디코더를 사용하는 시스템에서 주어진 리스트 횟수만큼 코드 워드 후보 군을 증가시킴에 따라 false alarm이 증가하는 것을 제어하기 위한 장치 및 방법에 관한 것이다. 본 발명에 따른 리스트 비터비 디코더 장치는, 리스트 비터비 디코더와, 상기 리스트 비터비 디코더에서 디코딩된 부호어(code word)의 오류를 검사하 는 오류 검출부를 포함하며, 상기 리스트 비터비 디코더는 입력신호 레벨과 경로 메트릭 차이(path metric difference, 이하'PMD') 리미트 값을 이용하여 PMD 임계값을 설정하는 임계값 결정부 및 베스트 경로의 PMD와 상 기 PMD 임계값을 비교하여 상기 PMD가 상기 PMD 임계값 보다 크면 디코딩 오류를 선언하고 디코딩을 종료하는 디 코더를 포함한다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 리스트 비터비 디코더(viterbi decoder)의 디코딩 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "리스트 비터비 디코더(List Viterbi decoder)는 부호어의 후보 군의 개수를 정하고 정해진 개수만큼 베스트 경 로(best path)에 가장 가까운 부호어(code word)들을 찾고, 오류검출기를 통해 오류가 없는 부호를 결정하는 알 고리즘을 사용한다. 즉 리스트 비터비 디코더는 리스트 개수만큼 부호어의 후보군이 포함되도록 베스트 경로를 가지는 부호어로부터 거리를 확장시키는 알고리즘을 사용한다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "리스트 비터비 더코더(list Viterbi decoder)는 뒷 단에 순환중복검사기(cyclic redundancy checking, ‘CRC’)와 같이 오류를 검출할 수 있는 오류검출기를 포함할 수 있다. 이때 상기 오류 검출기가 모든 가능한 오류를 다 검출이 가능하다면 오류 경보(false alarm)이 없이 성능 이득을 최대한 높일 수 있다. 그러나 오류 검출하기 위해 CRC가 많이 사용되고 있으며, 사용되는 CRC에 따라 신뢰도가 바뀔 수 있다. 작은 패리티 비트 (parity bit) 길이를 가지는 CRC의 경우 신뢰도가 떨어지게 되어 오류 경보(false alarm)가 증가하게 된다. 또 한, 아무런 신호가 없는 상태에서 디코딩을 시도하거나, 다른 유저의 신호를 디코딩을 시도할 경우 리스트 비터 비 디코더에 의해 오류 경보가 크게 증가 할 수 있다. 본 발명은 리스트 비터비 디코더를 사용할 때 부호어(code word) 후보 군에 속하는 조건을 두어 성능은 유지하 면서 오류 경보가 증가하는 것을 막을 수 있는 장치 및 방법을 제안한다. 본 발명의 다양한 실시예는 리스트 비터비를 사용하는 전자장치 또는 시스템에서 리스트 회수만큼 부호어들의 후보군을 선택할 때 베스트 경로(best path)와 경로 메트릭(path metric) 차이를 제한하여 오류 경보를 줄일 수 있는 장치 및 방법을 제안한다. 본 발명의 다양한 실시예는 리스트 비터비 디코더에서 경로 메트릭 차이에 제한을 두는 설정 값을 입력 신호의 평균으로 이용할 수 있는 장치 및 방법을 제안한다. 본 발명의 다양한 실시예는 리스트 비터비 디코더에서 경로 메트릭의 차이가 설정된 임계값 보다 크면 디코딩 동작을 종료하고 오류로 처리할 수 있는 장치 및 방법을 제안한다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 리스트 비터비 디코더 장치는, 리스트 비터비 디코더와, 상기 리스트 비터비 디코더에서 디코딩된 부호어(code word)의 오류를 검사하는 오류 검출부를 포함하며, 상기 리스트 비터비 디코더는 입력신 호 레벨과 경로 메트릭 차이(path metric difference, 이하'PMD') 리미트 값을 이용하여 PMD 임계값을 설정하는 임계값 결정부 및 베스트 경로의 PMD와 상기 PMD 임계값을 비교하여 상기 PMD가 상기 PMD 임계값보다 크면 디코 딩 오류를 선언하고 디코딩을 종료하는 디코더를 포함한다. 다양한 실시예에 따른 리스트 비터비 디코더의 동작 방법은, 입력신호 레벨과 PMD 리미트 값을 이용하여 PMD 임 계값을 설정하는 동작 및 상기 PMD 임계값을 이용하여 디코딩하는 동작을 포함하며, 상기 디코딩하는 동작은, 베스트 경로의 PMD를 결정하는 동작과 상기 결정된 PMD와 상기 PMD 임계값을 비교하는 동작 및 상기 PMD가 상기 PMD 임계값보다 크면 디코딩 오류를 선언하고 디코딩을 종료하는 동작을 포함한다. 다양한 실시예에 따른 리스트 비터비 디코더의 동작 방법은, 입력신호 레벨과 PMD(path metric difference) 리 미트 값을 이용하여 PMD 임계값을 설정하는 동작 및 상기 PMD 임계값을 이용하여 디코딩하는 동작을 포함하며, 상기 디코딩하는 동작은, 디코딩(decoding) 결과에 대한 오류 검출 동작, 상기 오류 검출에 따라 누적 경로 메 트릭 값(accumulated path metric)의 차이가 임계값을 초과하는지 결정하는 동작, 상기 누적 경로 메트릭 값의 차이가 임계값을 초과하지 않은 경우, 디코딩된 부호어(code word) 생성을 위한 경로(path) 결정 동작, 상기 결 정된 경로에 대응되는 부호어를 생성하는 동작을 포함한다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "리스트 비터비 디코더를 사용하는 시스템에서 주어진 리스트 횟수만큼 부호어(code word)들의 후보군을 증가시 킴에 따라 오류 경보(false alarm)가 증가 할 수 있다. 본 발명은 리스트 비터비 디코더 및 그 동작 방법에 관 한 것으로써, 리스트 횟수가 미리 설정된 최대값에 도달하지 않더라도 APMD(accumulated path metric difference) 값이 임계값을 초과하는 경우 새로운 부호어들의 후보군 생성을 제한함으로써 false alarm이 증가 하는 것을 제어할 수 있다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시예가 첨부된 도면을 참조하여 기재된다. 그러나 이는 본 문서에 기재된 기술을 특 정한 실시 형태에 대해 한정하려는 것이 아니며, 본 문서의 실시예의 다양한 변경(modifications), 균등물 (equivalents), 및/또는 대체물(alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 그리고 본 발명을 설명함에 있어서, 관련된 공지기능 혹은 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단된 경우, 그 상 세한 설명은 생략한다. 본 문서에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 문서에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\"등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 문서에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째\" 등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 예를 들면, 제1 사용자 기기와 제2 사용자 기기는, 순서 또는 중요도와 무관하게, 서로 다른 사용자 기기를 나타낼 수 있다. 예를 들면, 본 문서에 기재된 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소도 제1 구성요소로 바꾸어 명명될 수 있다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성 요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요 소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 문서에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for),\" \"~하는 능력을 가지는(having the capacity to),\" \"~하도록 설계된(designed to),\" \"~하도 록 변경된(adapted to),\" \"~하도록 만들어진(made to),\" 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 설정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\" 것만을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메 모리 장치에 저장된 하나 이상의 소프트웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 본 문서에서 사용된 용어들은 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 다른 실시예의 범위를 한정 하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술 분야에서 통상 의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 문서에 사용된 용어들 중 일반적인 사전에 정의된 용어들은, 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으 며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시예들을 배제하도록 해석될 수 없다. 본 문서의 다양한 실시예들에 따른 전자 장치는, 예를 들면, 스마트폰(smartphone), 태블릿 PC(tablet personal computer), 이동 전화기(mobile phone), 영상 전화기, 전자책 리더기(e-book reader), 데스크탑 PC(desktop personal computer), 랩탑 PC(laptop personal computer), 넷북 컴퓨터(netbook computer), 워크스테이션 (workstation), 서버, PDA(personal digital assistant), PMP(portable multimedia player), MP3 플레이어, 모바일 의료기기, 카메라(camera), 또는 웨어러블 장치(wearable device) 중 적어도 하나를 포함할 수 있다. 다 양한 실시예에 따르면, 웨어러블 장치는 액세서리형(예: 시계, 반지, 팔찌, 발찌, 목걸이, 안경, 콘택트 렌즈, 또는 머리 착용형 장치(head-mounted-device, HMD), 직물 또는 의류 일체형(예: 전자 의복), 신체 부착형(예: 스킨 패드(skin pad) 또는 문신), 또는 생체 이식형(예: implantable circuit) 중 적어도 하나를 포함할 수 있 다. 어떤 실시예들에서, 전자 장치는 가전 제품(home appliance)일 수 있다. 가전제품은, 예를 들면, 텔레비전, DVD(digital video disk) 플레이어, 오디오, 냉장고, 에어컨, 청소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), 홈 오토매이션 컨트롤 패널(home automation control panel), 보안 컨트롤 패널 (security control panel), TV 박스(예: 삼성 HomeSyncTM, 애플TVTM, 또는 구글 TVTM), 게임 콘솔(예: XboxTM, PlayStationTM), 전자 사전, 전자 키, 캠코더(camcorder), 또는 전자 액자 중 적어도 하나를 포함할 수 있다. 다른 실시예에서, 전자 장치는, 각종 의료기기(예: 각종 휴대용 의료측정기기(혈당 측정기, 심박 측정기, 혈압 측정기, 또는 체온 측정기 등), MRA(magnetic resonance angiography), MRI(magnetic resonance imaging), CT(computed tomography), 촬영기, 또는 초음파기 등), 네비게이션(navigation) 장치, 위성 항법 시스템 (GNSS(global navigation satellite system)), EDR(event data recorder), FDR(flight data recorder), 자동 차 인포테인먼트(infotainment) 장치, 선박용 전자 장비(예: 선박용 항법 장치, 자이로 콤파스 등), 항공 전자 기기(avionics), 보안 기기, 차량용 헤드 유닛(head unit), 산업용 또는 가정용 로봇, 금융 기관의 ATM(automatic teller's machine), 상점의 POS(point of sales), 또는 사물 인터넷 장치(internet of things) (예: 전구, 각종 센서, 전기 또는 가스 미터기, 스프링클러 장치, 화재경보기, 온도조절기(thermostat), 가로등, 토스터(toaster), 운동기구, 온수탱크, 히터, 보일러 등) 중 적어도 하나를 포함할 수 있다. 어떤 실시예에 따르면, 전자 장치는 가구(furniture) 또는 건물/구조물의 일부, 전자 보드(electronic board), 전자 사인 수신 장치(electronic signature receiving device), 프로젝터(projector), 또는 각종 계측 기기(예: 수도, 전기, 가스, 또는 전파 계측 기기 등) 중 적어도 하나를 포함할 수 있다. 다양한 실시예에서, 전자 장치는 전술한 다양한 장치들 중 하나 또는 그 이상의 조합일 수 있다. 어떤 실시예에 따른 전자 장치는 플렉서블 전자 장치일 수 있다. 또한, 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되지 않으며,기술 발전에 따른 새로운 전자 장치를 포함할 수 있다. 이하, 첨부 도면을 참조하여, 다양한 실시예에 따른 전자 장치가 설명된다. 본 문서에서, 사용자라는 용어는 전 자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 도 1을 참조하여, 다양한 실시예에서의, 네트워크 환경 100 내의 전자 장치 101이 기재된다. 전자 장치 101은 버스 110, 프로세서 120, 메모리 130, 입출력 인터페이스 150, 디스플레이 160, 및 통신 인터페이스 170을 포함 할 수 있다. 어떤 실시예에서는, 전자 장치 101은, 구성요소들 중 적어도 하나를 생략하거나 다른 구성요소를 추가적으로 구비할 수 있다. 버스 110은, 예를 들면, 구성요소들 110-170을 서로 연결하고, 구성요소들 간의 통신(예: 제어 메시지 및/또는 데이터)을 전달하는 회로를 포함할 수 있다. 프로세서 120은, 중앙처리장치(central processing unit, CPU), 어플리케이션 프로세서(application processor, AP), 또는 커뮤니케이션 프로세서(communication processor, CP) 중 하나 또는 그 이상을 포함할 수 있다. 프로세서 120은, 예를 들면, 전자 장치 101의 적어도 하나의 다른 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 실행할 수 있다. 메모리 130은, 휘발성 및/또는 비휘발성 메모리를 포함할 수 있다. 메모리는, 예를 들면, 전자 장치 101의 적어도 하나의 다른 구성요소에 관계된 명령 또는 데이터를 저장할 수 있다. 한 실시예에 따르면, 메모리 130은 소프트웨어 및/또는 프로그램 140을 저장할 수 있다. 프로그램은, 예를 들면, 커널 141, 미들웨어 143, 어 플리케이션 프로그래밍 인터페이스(application programming interface, API) 145, 및/또는 어플리케이션 프로 그램(또는 \"어플리케이션\") 147 등을 포함할 수 있다. 커널 141, 미들웨어 143, 또는 API 145의 적어도 일부는, 운영 시스템(operating system, OS)으로 지칭될 수 있다. 커널 141은, 예를 들면, 다른 프로그램들(예: 미들웨어 143, API 145, 또는 어플리케이션 프로그램 147)에 구현 된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스 110, 프로세서 120, 또는 메모리 130 등)을 제어 또는 관리할 수 있다. 또한, 커널 141은 미들웨어 143, API 145, 또는 어플리케이션 프로그램 147에 서 전자 장치 101의 개별 구성요소에 접근함으로써, 시스템 리소스들을 제어 또는 관리할 수 있는 인터페이스를 제공할 수 있다. 미들웨어 143은, 예를 들면, API 145 또는 어플리케이션 프로그램 147이 커널 141과 통신하여 데이터를 주고받 을 수 있도록 중개 역할을 수행할 수 있다. 또한, 미들웨어 143은 어플리케이션 프로그램 147로부터 수신된 하나 이상의 작업 요청들을 우선순위에 따라 처 리할 수 있다. 예를 들면, 미들웨어 143은 어플리케이션 프로그램 147 중 적어도 하나에 전자 장치 101의 시스 템 리소스(예: 버스 110, 프로세서 120, 또는 메모리 130 등)를 사용할 수 있는 우선순위를 부여할 수 있다. 예 컨대, 미들웨어 143은 상기 적어도 하나에 부여된 우선순위에 따라 상기 하나 이상의 작업 요청들을 처리함으로 써, 상기 하나 이상의 작업 요청들에 대한 스케쥴링 또는 로드 밸런싱 등을 수행할 수 있다. API 145는, 예를 들면, 어플리케이션 147이 커널 141 또는 미들웨어 143에서 제공되는 기능을 제어하기 위한 인 터페이스로, 예를 들면, 파일 제어, 창 제어, 영상 처리, 또는 문자 제어 등을 위한 적어도 하나의 인터페이스 또는 함수(예: 명령어)를 포함할 수 있다. 입출력 인터페이스 150은, 예를 들면, 사용자 또는 다른 외부 기기로부터 입력된 명령 또는 데이터를 전자 장치 101의 다른 구성요소(들)에 전달할 수 있는 인터페이스의 역할을 할 수 있다. 또한, 입출력 인터페이스 150는 전자 장치 101의 다른 구성요소(들)로부터 수신된 명령 또는 데이터를 사용자 또는 다른 외부 기기로 출력할 수 있다. 디스플레이 160은, 예를 들면, 액정 디스플레이(liquid crystal display, LCD), 발광 다이오드(light-emitting diode, LED) 디스플레이, 유기 발광 다이오드(organic light-emitting diode, OLED) 디스플레이, 또는 마이크 로 전자기계 시스템(microelectromechanical systems, MEMS) 디스플레이, 또는 전자종이(electronic paper) 디 스플레이를 포함할 수 있다. 디스플레이 160은, 예를 들면, 사용자에게 각종 콘텐츠(예: 텍스트, 이미지, 비디 오, 아이콘, 또는 심볼 등)을 표시할 수 있다. 디스플레이 160은, 터치 스크린을 포함할 수 있으며, 예를 들면, 전자 펜 또는 사용자의 신체의 일부를 이용한 터치, 제스쳐, 근접, 또는 호버링 입력을 수신할 수 있다.통신 인터페이스 170은, 예를 들면, 전자 장치 101과 외부 장치(예: 제 1 외부 전자 장치 102, 제2 외부 전자 장치 104, 또는 서버 106) 간의 통신을 설정할 수 있다. 예를 들면, 통신 인터페이스 170은 무선 통신 또는 유 선 통신을 통해서 네트워크 162에 연결되어 외부 장치(예: 제2 외부 전자 장치 104 또는 서버106)과 통신할 수 있다. 무선 통신은, 예를 들면, 셀룰러 통신 프로토콜로서, 예를 들면, LTE(long-term evolution), LTE-A(LTE Advance), CDMA(code division multiple access), WCDMA(wideband CDMA), UMTS(universal mobile telecommunications system), WiBro(Wireless Broadband), 또는 GSM(Global System for Mobile Communications) 등 중 적어도 하나를 사용할 수 있다. 또한, 무선 통신은, 예를 들면, 근거리 통신 164을 포함 할 수 있다. 근거리 통신 164는, 예를 들면, WiFi(wireless fidelity), 블루투스(Bluetooth), NFC(near field communication), 또는 GNSS(global navigation satellite system) 등 중 적어도 하나를 포함할 수 있다. GNSS 는 사용 지역 또는 대역폭 등에 따라, 예를 들면, GPS(Global Positioning System), Glonass(Global Navigation Satellite System), Beidou Navigation Satellite System(Beidou) 또는 Galileo, the European global satellite-based navigation system 중 적어도 하나를 포함할 수 있다. 이하, 본 문서에서는, \"GPS\"는 \"GNSS\"와 혼용되어 사용(interchangeably used)될 수 있다. 유선 통신은, 예를 들면, USB(universal serial bus), HDMI(high definition multimedia interface), RS-232(recommended standard232), 또는 POTS(plain old telephone service) 등 중 적어도 하나를 포함할 수 있다. 네트워크 162는 통신 네트워크(telecommunications network), 예를 들면, 컴퓨터 네트워크(computer network)(예: LAN 또는 WAN), 인터넷, 또는 전화 망 (telephone network) 중 적어도 하나를 포함할 수 있다. 제1 및 제2 외부 전자 장치 102 및 104 각각은 전자 장치 101과 동일한 또는 다른 종류의 장치일 수 있다. 한 실시예에 따르면, 서버 106은 하나 또는 그 이상의 서버들의 그룹을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치 101에서 실행되는 동작들의 전부 또는 일부는 다른 하나 또는 복수의 전자 장치(예: 전자 장치 102 및104, 또는 서버 106에서 실행될 수 있다. 한 실시예에 따르면, 전자 장치 101이 어떤 기능이나 서비스를 자동 으로 또는 요청에 의하여 수행해야 할 경우에, 전자 장치 101은 기능 또는 서비스를 자체적으로 실행시키는 대 신에 또는 추가적으로, 그와 연관된 적어도 일부 기능을 다른 장치(예: 전자 장치 102 및 104, 또는 서버 106) 에게 요청할 수 있다. 다른 전자 장치(예: 전자 장치 102 및 104, 또는 서버 106)는 요청된 기능 또는 추가 기 능을 실행하고, 그 결과를 전자 장치 101로 전달할 수 있다. 전자 장치 101은 수신된 결과를 그대로 또는 추가 적으로 처리하여 요청된 기능이나 서비스를 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 도 2는 다양한 실시예에 따른 전자 장치 201의 블록도이다. 전자 장치 201은, 예를 들면, 도 1에 도시된 전자 장치 101의 전체 또는 일부를 포함할 수 있다. 전자 장치 201는 하나 이상의 프로세서(예: AP(application processor)) 210, 통신 모듈 220, (가입자 식별 모듈 224, 메모리 230, 센서 모듈 240, 입력 장치 250, 디스플 레이 260, 인터페이스 270, 오디오 모듈 280, 카메라 모듈 291, 전력 관리 모듈 295, 배터리 296, 인디케이터 297, 및 모터 298를 포함할 수 있다. 프로세서 210은, 예를 들면, 운영 체제 또는 응용 프로그램을 구동하여 프로세서 210에 연결된 다수의 하드웨어 또는 소프트웨어 구성요소들을 제어할 수 있고, 각종 데이터 처리 및 연산을 수행할 수 있다. 프로세서 210은, 예를 들면, SoC(system on chip) 로 구현될 수 있다. 한 실시예에 따르면, 프로세서 210은 GPU(graphic processing unit) 및/또는 이미지 신호 프로세서(image signal processor)를 더 포함할 수 있다. 프로세서 210 은 도 2에 도시된 구성요소들 중 적어도 일부(예: 셀룰러 모듈 221)를 포함할 수도 있다. 프로세서 210은 다른 구성요소들(예: 비휘발성 메모리) 중 적어도 하나로부터 수신된 명령 또는 데이터를 휘발성 메모리에 로드 (load)하여 처리하고, 다양한 데이터를 비휘발성 메모리에 저장(store)할 수 있다. 통신 모듈 220은, 도 1의 통신 인터페이스 170와 동일 또는 유사한 구성을 가질 수 있다. 통신 모듈 220은, 예 를 들면, 셀룰러 모듈 221, WiFi 모듈 223, 블루투스 모듈 225, GNSS 모듈 227(예: GPS 모듈, Glonass 모듈, Beidou 모듈, 또는 Galileo 모듈), NFC 모듈 228 및 RF(radio frequency) 모듈 229를 포함할 수 있다. 셀룰러 모듈 221은, 예를 들면, 통신망을 통해서 음성 통화, 영상 통화, 문자 서비스, 또는 인터넷 서비스 등을 제공할 수 있다. 한 실시예에 따르면, 셀룰러 모듈 221은 가입자 식별 모듈(예: SIM 카드) 224를 이용하여 통신 네트워크 내에서 전자 장치 201의 구별 및 인증을 수행할 수 있다. 한 실시예에 따르면, 셀룰러 모듈 221은 프 로세서 210이 제공할 수 있는 기능 중 적어도 일부 기능을 수행할 수 있다. 한 실시예에 따르면, 셀룰러 모듈221은 커뮤니케이션 프로세서(CP: communication processor)를 포함할 수 있다. WiFi 모듈 223, 블루투스 모듈 225, GNSS 모듈 227 또는 NFC 모듈 228 각각은, 예를 들면, 해당하는 모듈을 통 해서 송수신되는 데이터를 처리하기 위한 프로세서를 포함할 수 있다. 어떤 실시예에 따르면, 셀룰러 모듈 221, WiFi 모듈 223, 블루투스 모듈 225, GNSS 모듈 227 또는 NFC 모듈 228 중 적어도 일부(예: 두 개 이상)는 하나 의 integrated chip(IC) 또는 IC 패키지 내에 포함될 수 있다. RF 모듈 229은, 예를 들면, 통신 신호(예: RF 신호)를 송수신할 수 있다. RF 모듈 229은, 예를 들면, 트랜시버 (transceiver), PAM(power amp module), 주파수 필터(frequency filter), LNA(low noise amplifier), 또는 안 테나 등을 포함할 수 있다. 다른 실시예에 따르면, 셀룰러 모듈 221, WiFi 모듈 223, 블루투스 모듈 225, GNSS 모듈 227 또는 NFC 모듈 228 중 적어도 하나는 별개의 RF 모듈을 통하여 RF 신호를 송수신할 수 있다. 가입자 식별 모듈 224은, 예를 들면, 가입자 식별 모듈을 포함하는 카드 및/또는 내장 SIM(embedded SIM)을 포 함할 수 있으며, 고유한 식별 정보(예: ICCID(integrated circuit card identifier)) 또는 가입자 정보(예: IMSI(international mobile subscriber identity))를 포함할 수 있다. 메모리 230(예: 메모리 130)는, 예를 들면, 내장 메모리 232 또는 외장 메모리 234를 포함할 수 있다. 내장 메 모리 232는, 예를 들면, 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비휘발성 메모리(non-volatile Memory)(예: OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash 등), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive, SSD)) 중 적어도 하나를 포함할 수 있다. 외장 메모리 234는 플래시 드라이브(flash drive), 예를 들면, CF(compact flash), SD(secure digital), Micro-SD(micro secure digital), Mini-SD(mini secure digital), xD(extreme digital), MMC(multi-media card) 또는 메모리 스틱(memory stick) 등을 더 포함할 수 있다. 외장 메모리 234는 다양한 인터페이스를 통하 여 전자 장치 201와 기능적으로 및/또는 물리적으로 연결될 수 있다. 센서 모듈 240은, 예를 들면, 물리량을 계측하거나 전자 장치 201의 작동 상태를 감지하여, 계측 또는 감지된 정보를 전기 신호로 변환할 수 있다. 센서 모듈 240은, 예를 들면, 제스처 센서 240A, 자이로 센서 240B, 기압 센서 240C, 마그네틱 센서 240D, 가속도 센서 240E, 그립 센서 240F, 근접 센서 240G, 컬러(color) 센서 240H (예: RGB(red, green, blue) 센서), 생체 센서 240I, 온/습도 센서 240J, 조도 센서 240K, 또는 UV(ultra violet) 센서 240M 중의 적어도 하나를 포함할 수 있다. 추가적으로 또는 대체적으로(additionally or alternatively), 센서 모듈 240은, 예를 들면, 후각 센서(E-nose sensor), EMG 센서(electromyography sensor), EEG 센서(electroencephalogram sensor), ECG 센서(electrocardiogram sensor), IR(infrared) 센서, 홍채 센서 및/또는 지문 센서를 포함할 수 있다. 센서 모듈 240은 그 안에 속한 적어도 하나 이상의 센서들을 제어하기 위한 제어 회로를 더 포함할 수 있다. 어떤 실시예에서는, 전자 장치 201은 프로세서 210의 일부로서 또는 별도로, 센서 모듈 240을 제어하도록 구성된 프로세서를 더 포함하여, 프로세서 210이 슬립(sleep) 상태에 있는 동안, 센서 모듈 240을 제어할 수 있다. 입력 장치 250은, 예를 들면, 터치 패널(touch panel) 252, (디지털) 펜 센서(pen sensor) 254, 키(key) 256, 또는 초음파(ultrasonic) 입력 장치 258를 포함할 수 있다. 터치 패널 252는, 예를 들면, 정전식, 감압식, 적외 선 방식, 또는 초음파 방식 중 적어도 하나의 방식을 사용할 수 있다. 또한, 터치 패널 252는 제어 회로를 더 포함할 수도 있다. 터치 패널 252는 택타일 레이어(tactile layer)를 더 포함하여, 사용자에게 촉각 반응을 제 공할 수 있다. (디지털) 펜 센서 254는, 예를 들면, 터치 패널의 일부이거나, 별도의 인식용 쉬트(sheet)를 포함할 수 있다. 키 256은, 예를 들면, 물리적인 버튼, 광학식 키, 또는 키패드를 포함할 수 있다. 초음파 입력 장치 258은 마이 크(예: 마이크 288)를 통해, 입력 도구에서 발생된 초음파를 감지하여, 상기 감지된 초음파에 대응하는 데이터 를 확인할 수 있다. 디스플레이 260(예: 디스플레이 160)는 패널 262, 홀로그램 장치 264, 또는 프로젝터 266을 포함할 수 있다. 패 널 262는, 도 1의 디스플레이 160과 동일 또는 유사한 구성을 포함할 수 있다. 패널 262는, 예를 들면, 유연하 게(flexible), 투명하게(transparent), 또는 착용할 수 있게(wearable) 구현될 수 있다. 패널 262는 터치 패널 252와 하나의 모듈로 구성될 수도 있다. 홀로그램 장치 264는 빛의 간섭을 이용하여 입체 영상을 허공에 보여줄 수 있다. 프로젝터 266은 스크린에 빛을 투사하여 영상을 표시할 수 있다. 스크린은, 예를 들면, 전자 장치 201의 내부 또는 외부에 위치할 수 있다. 한 실시예에 따르면, 디스플레이 260은 패널 262, 홀로그램 장치 264, 또 는 프로젝터 266을 제어하기 위한 제어 회로를 더 포함할 수 있다. 인터페이스 270은, 예를 들면, HDMI(high-definition multimedia interface) 272, USB(universal serial bus) 274, 광 인터페이스(optical interface) 276, 또는 D-sub(D-subminiature) 278를 포함할 수 있다. 인터페이스 270는, 예를 들면, 도 1에 도시된 통신 인터페이스 170에 포함될 수 있다. 추가적으로 또는 대체적으로 (additionally and alternatively), 인터페이스 270은, 예를 들면, MHL(mobile high-definition link) 인터페 이스, SD(secure digital) 카드/MMC(multi-media card) 인터페이스, 또는 IrDA(infrared data association) 규 격 인터페이스를 포함할 수 있다. 오디오 모듈 280은, 예를 들면, 소리(sound)와 전기 신호를 쌍방향으로 변환시킬 수 있다. 오디오 모듈 280의 적어도 일부 구성요소는, 예를 들면, 도 1 에 도시된 입출력 인터페이스 145에 포함될 수 있다. 오디오 모듈 280은, 예를 들면, 스피커 282, 리시버 284, 이어폰 286, 또는 마이크 288 등을 통해 입력 또는 출력되는 소리 정보를 처리할 수 있다. 카메라 모듈 291은, 예를 들면, 정지 영상 및 동영상을 촬영할 수 있는 장치로서, 한 실시예에 따르면, 하나 이 상의 이미지 센서(예: 전면 센서 또는 후면 센서), 렌즈, ISP(image signal processor), 또는 플래시(flash) (예: LED 또는 xenon lamp 등)를 포함할 수 있다. 전력 관리 모듈 295은, 예를 들면, 전자 장치 201의 전력을 관리할 수 있다. 한 실시예에 따르면, 전력 관리 모 듈 295은 PMIC(power management integrated circuit), 충전 IC(charger integrated circuit), 또는 배터리 또는 연료 게이지(battery or fuel gauge)를 포함할 수 있다. PMIC는, 유선 및/또는 무선 충전 방식을 가질 수 있다. 무선 충전 방식은, 예를 들면, 자기공명 방식, 자기유도 방식 또는 전자기파 방식 등을 포함하며, 무선 충전을 위한 부가적인 회로, 예를 들면, 코일 루프, 공진 회로, 또는 정류기 등을 더 포함할 수 있다. 배터리 게이지는, 예를 들면, 배터리 296의 잔량, 충전 중 전압, 전류, 또는 온도를 측정할 수 있다. 배터리 296은, 예 를 들면, 충전식 전지(rechargeable battery) 및/또는 태양 전지(solar battery)를 포함할 수 있다. 인디케이터 297은 전자 장치 201 또는 그 일부(예: 프로세서 210)의 특정 상태, 예를 들면, 부팅 상태, 메시지 상태 또는 충전 상태 등을 표시할 수 있다. 모터 298은 전기적 신호를 기계적 진동으로 변환할 수 있고, 진동 (vibration), 또는 햅틱(haptic) 효과 등을 발생시킬 수 있다. 도시되지는 않았으나, 전자 장치 201은 모바일 TV 지원을 위한 처리 장치(예: GPU)를 포함할 수 있다. 모바일 TV 지원을 위한 처리 장치는, 예를 들면, DMB(digital multimedia broadcasting), DVB(digital video broadcasting), 또는 미디어플로(mediaFloTM) 등의 규격에 따른 미디어 데이터를 처리할 수 있다. 본 문서에서 기술된 구성요소들 각각은 하나 또는 그 이상의 부품(component)으로 구성될 수 있으며, 해당 구성 요소의 명칭은 전자 장치의 종류에 따라서 달라질 수 있다. 다양한 실시예에서, 전자 장치는 본 문서에서 기술 된 구성요소 중 적어도 하나를 포함하여 구성될 수 있으며, 일부 구성요소가 생략되거나 또는 추가적인 다른 구 성요소를 더 포함할 수 있다. 또한, 다양한 실시예에 따른 전자 장치의 구성요소들 중 일부가 결합되어 하나의 개체(entity)로 구성됨으로써, 결합되기 이전의 해당 구성요소들의 기능을 동일하게 수행할 수 있다. 도 3은 다양한 실시예에 따른 프로그램 모듈의 블록도이다. 한 실시예에 따르면, 프로그램 모듈 310 (예: 프로 그램 140)은 전자 장치(예: 전자 장치 101)에 관련된 자원을 제어하는 운영 체제(operating system, OS) 및/또 는 운영 체제 상에서 구동되는 다양한 어플리케이션(예: 어플리케이션 프로그램 147)을 포함할 수 있다. 운영 체제는, 예를 들면, 안드로이드(android), iOS, 윈도우즈(windows), 심비안(symbian), 타이젠(tizen), 또는 바 다(bada) 등이 될 수 있다. 프로그램 모듈 310은 커널 320, 미들웨어 330, 어플리케이션 프로그래밍 인터페이스(application programming interface, API) 360, 및/또는 어플리케이션 370을 포함할 수 있다. 프로그램 모듈 310의 적어도 일부는 전자 장치상에 프리로드(preload) 되거나, 외부 전자 장치(예: 전자 장치 102 및 104, 서버 106 등)로부터 다운로드 (download) 가능하다. 커널 320(예: 커널 141)은, 예를 들면, 시스템 리소스 매니저 321 및/또는 디바이스 드라이버 323을 포함할 수 있다. 시스템 리소스 매니저 321은 시스템 리소스의 제어, 할당, 또는 회수 등을 수행할 수 있다. 한 실시예에 따르면, 시스템 리소스 매니저 321은 프로세스 관리부, 메모리 관리부, 또는 파일 시스템 관리부 등을 포함할수 있다. 디바이스 드라이버 323은, 예를 들면, 디스플레이 드라이버, 카메라 드라이버, 블루투스 드라이버, 공 유 메모리 드라이버, USB 드라이버, 키패드 드라이버, WiFi 드라이버, 오디오 드라이버, 또는 IPC(inter- process communication) 드라이버를 포함할 수 있다. 미들웨어 330은, 예를 들면, 어플리케이션 370이 공통적으로 필요로 하는 기능을 제공하거나, 어플리케이션 370 이 전자 장치 내부의 제한된 시스템 자원을 효율적으로 사용할 수 있도록 API 360을 통해 다양한 기능들을 어플 리케이션 370으로 제공할 수 있다. 한 실시예에 따르면, 미들웨어 330 (예: 미들웨어 143)는 런타임 라이브러리 335, 어플리케이션 매니저(application manager) 341, 윈도우 매니저(window manager) 342, 멀티미디어 매니저 (multimedia manager) 343, 리소스 매니저(resource manager) 344, 파워 매니저(power manager) 345, 데이터베 이스 매니저(database manager) 346, 패키지 매니저(package manager) 347, 연결 매니저(connectivity manager) 348, 통지 매니저(notification manager) 349, 위치 매니저(location manager) 350, 그래픽 매니저 (graphic manager) 351, 또는 보안 매니저(security manager) 352 중 적어도 하나를 포함할 수 있다. 런타임 라이브러리 335는, 예를 들면, 어플리케이션 370이 실행되는 동안에 프로그래밍 언어를 통해 새로운 기 능을 추가하기 위해 컴파일러가 사용하는 라이브러리 모듈을 포함할 수 있다. 런타임 라이브러리 335는 입출력 관리, 메모리 관리, 또는 산술 함수에 대한 기능 등을 수행할 수 있다. 어플리케이션 매니저 341은, 예를 들면, 어플리케이션 370 중 적어도 하나의 어플리케이션의 생명 주기(life cycle)를 관리할 수 있다. 윈도우 매니저 342는 화면에서 사용하는 GUI 자원을 관리할 수 있다. 멀티미디어 매 니저 343은 다양한 미디어 파일들의 재생에 필요한 포맷을 파악하고, 해당 포맷에 맞는 코덱(codec)을 이용하여 미디어 파일의 인코딩(encoding) 또는 디코딩(decoding)을 수행할 수 있다. 리소스 매니저 344는 어플리케이션 370 중 적어도 어느 하나의 어플리케이션의 소스 코드, 메모리 또는 저장 공간 등의 자원을 관리할 수 있다. 파워 매니저 345는, 예를 들면, 바이오스(BIOS: basic input/output system) 등과 함께 동작하여 배터리 (battery) 또는 전원을 관리하고, 전자 장치의 동작에 필요한 전력 정보 등을 제공할 수 있다. 데이터베이스 매 니저 346은 어플리케이션 370 중 적어도 하나의 어플리케이션에서 사용할 데이터베이스를 생성, 검색, 또는 변 경할 수 있다. 패키지 매니저 347은 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 업데이트를 관리 할 수 있다. 연결 매니저 348은, 예를 들면, WiFi 또는 블루투스 등의 무선 연결을 관리할 수 있다. 통지 매니저 349는 도착 메시지, 약속, 근접성 알림 등의 사건(event)을 사용자에게 방해되지 않는 방식으로 표시 또는 통지할 수 있다. 위치 매니저 350은 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저 351은 사용자에게 제공될 그래픽 효과 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 보안 매니저 352는 시스템 보안 또는 사용자 인증 등에 필요한 제반 보안 기능을 제공할 수 있다. 한 실시예에 따르면, 전자 장치(예: 전자 장치 101)가 전화 기 능을 포함한 경우, 미들웨어 330은 전자 장치의 음성 또는 영상 통화 기능을 관리하기 위한 통화 매니저 (telephony manager)를 더 포함할 수 있다. 미들웨어 330은 전술한 구성요소들의 다양한 기능의 조합을 형성하는 미들웨어 모듈을 포함할 수 있다. 미들웨 어 330은 차별화된 기능을 제공하기 위해 운영 체제의 종류 별로 특화된 모듈을 제공할 수 있다. 또한, 미들웨 어 330은 동적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. API 360(예: API 145)은, 예를 들면, API 프로그래밍 함수들의 집합으로, 운영 체제에 따라 다른 구성으로 제공 될 수 있다. 예를 들면, 안드로이드 또는 iOS의 경우, 플랫폼 별로 하나의 API 셋을 제공할 수 있으며, 타이젠 (tizen)의 경우, 플랫폼 별로 두 개 이상의 API 셋을 제공할 수 있다. 어플리케이션 370(예: 어플리케이션 프로그램 147)은, 예를 들면, 홈 371, 다이얼러 372, SMS/MMS 373, IM(instant message) 374, 브라우저 375, 카메라 376, 알람 377, 컨택트 378, 음성 다이얼 379, 이메일 380, 달력 381, 미디어 플레이어 382, 앨범 383, 또는 시계 384, 건강 관리(health care)(예: 운동량 또는 혈당 등 을 측정), 또는 환경 정보 제공(예: 기압, 습도, 또는 온도 정보 등을 제공) 등의 기능을 수행할 수 있는 하나 이상의 어플리케이션을 포함할 수 있다. 한 실시예에 따르면, 어플리케이션 370은 전자 장치(예: 전자 장치 101)와 외부 전자 장치(예: 전자 장치 102 및 104) 사이의 정보 교환을 지원하는 어플리케이션(이하, 설명의 편의상, \"정보 교환 어플리케이션\")을 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치에 특정 정보를 전달하기 위한 알림 전달 (notification relay) 어플리케이션, 또는 외부 전자 장치를 관리하기 위한 장치 관리(device management) 어 플리케이션을 포함할 수 있다. 예를 들면, 알림 전달 어플리케이션은 전자 장치의 다른 어플리케이션(예: SMS/MMS 어플리케이션, 이메일 어플 리케이션, 건강 관리 어플리케이션, 또는 환경 정보 어플리케이션 등)에서 발생된 알림 정보를 외부 전자 장치 (예: 전자 장치 102 및 104)로 전달하는 기능을 포함할 수 있다. 또한, 알림 전달 어플리케이션은, 예를 들면, 외부 전자 장치로부터 알림 정보를 수신하여 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치(예: 전자 장치 102 및 104)의 적 어도 하나의 기능(예: 외부 전자 장치 자체(또는, 일부 구성 부품)의 턴-온/턴-오프 또는 디스플레이의 밝기(또 는, 해상도) 조절), 외부 전자 장치에서 동작하는 어플리케이션 또는 외부 전자 장치에서 제공되는 서비스(예: 통화 서비스 또는 메시지 서비스 등)를 관리(예: 설치, 삭제, 또는 업데이트)할 수 있다. 한 실시예에 따르면, 어플리케이션 370은 외부 전자 장치(예: 전자 장치 102 및 104)의 속성(에 따라 지정된 어 플리케이션(예: 모바일 의료 기기의 건강 관리 어플리케이션 등)을 포함할 수 있다. 한 실시예에 따르면, 어플 리케이션 370은 외부 전자 장치(예: 서버 106 또는 전자 장치102, 104)로부터 수신된 어플리케이션을 포함할 수 있다. 한 실시예에 따르면, 어플리케이션 370은 프리로드 어플리케이션(preloaded application) 또는 서버로부 터 다운로드 가능한 제3자 어플리케이션(third party application)을 포함할 수 있다. 도시된 실시예에 따른 프 로그램 모듈 310의 구성요소들의 명칭은 운영 체제의 종류에 따라서 달라질 수 있다. 다양한 실시예에 따르면, 프로그램 모듈 310의 적어도 일부는 소프트웨어, 펌웨어, 하드웨어, 또는 이들 중 적 어도 둘 이상의 조합으로 구현될 수 있다. 프로그램 모듈 310의 적어도 일부는, 예를 들면, 프로세서(예: 프로 세서 210)에 의해 구현(implement)(예: 실행)될 수 있다. 프로그램 모듈 310의 적어도 일부는 하나 이상의 기능 을 수행하기 위한, 예를 들면, 모듈, 프로그램, 루틴, 명령어 세트(sets of instructions) 또는 프로세스 등을 포함할 수 있다. 본 문서에서 사용된 용어 \"모듈\"은, 예를 들면, 하드웨어, 소프트웨어 또는 펌웨어(firmware) 중 하나 또는 둘 이상의 조합을 포함하는 단위(unit)를 의미할 수 있다. \"모듈\"은, 예를 들면, 유닛(unit), 로직(logic), 논리 블록(logical block), 부품(component), 또는 회로(circuit) 등의 용어와 바꾸어 사용(interchangeably use)될 수 있다. \"모듈\"은, 일체로 구성된 부품의 최소 단위 또는 그 일부가 될 수 있다. \"모듈\"은 하나 또는 그 이상 의 기능을 수행하는 최소 단위 또는 그 일부가 될 수도 있다. \"모듈\"은 기계적으로 또는 전자적으로 구현될 수 있다. 예를 들면, \"모듈\"은, 알려졌거나 앞으로 개발될, 어떤 동작들을 수행하는 ASIC(application-specific integrated circuit) 칩, FPGAs(field-programmable gate arrays) 또는 프로그램 가능 논리 장치 (programmable-logic device) 중 적어도 하나를 포함할 수 있다. 다양한 실시예에 따른 장치(예: 모듈들 또는 그 기능들) 또는 방법(예: 동작들)의 적어도 일부는, 예컨대, 프로 그램 모듈의 형태로 컴퓨터로 읽을 수 있는 저장매체(computer-readable storage media)에 저장된 명령어로 구 현될 수 있다. 상기 명령어가 프로세서(예: 프로세서 120)에 의해 실행될 경우, 상기 하나 이상의 프로세서가 상기 명령어에 해당하는 기능을 수행할 수 있다. 컴퓨터로 읽을 수 있는 저장매체는, 예를 들면, 메모리 130가 될 수 있다. 컴퓨터로 판독 가능한 기록 매체는, 하드디스크, 플로피디스크, 마그네틱 매체(magnetic media)(예: 자기테이프), 광기록 매체(optical media)(예: CD-ROM(compact disc read only memory), DVD(digital versatile disc), 자기-광 매체(magneto-optical media)(예: 플롭티컬 디스크(floptical disk)), 하드웨어 장 치(예: ROM(read only memory), RAM(random access memory), 또는 플래시 메모리 등) 등을 포함할 수 있다. 또 한, 프로그램 명령에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해 서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함할 수 있다. 상술한 하드웨어 장치는 다양한 실시예 의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지다. 다양한 실시예에 따른 모듈 또는 프로그램 모듈은 전술한 구성요소들 중 적어도 하나 이상을 포함하거나, 일부 가 생략되거나, 또는 추가적인 다른 구성요소를 더 포함할 수 있다. 다양한 실시예에 따른 모듈, 프로그램 모듈 또는 다른 구성요소에 의해 수행되는 동작들은 순차적, 병렬적, 반복적 또는 휴리스틱(heuristic)한 방법으로 실행될 수 있다. 또한, 일부 동작은 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다. 그리고 본 문서에 개시된 실시예는 개시된, 기술 내용의 설명 및 이해를 위해 제시된 것이며, 본 문서에서 기재 된 기술의 범위를 한정하는 것은 아니다. 따라서, 본 문서의 범위는, 본 문서의 기술적 사상에 근거한 모든 변 경 또는 다양한 다른 실시예를 포함하는 것으로 해석되어야 한다.도 4는 전자장치의 무선 신호를 전송하는 송신기의 구성을 도시하는 도면이다. 송신기는 도 1의 통신 인터페이 스부 170에 구성될 수 있다. 도 4를 참조하면, 송신기는 소스 코더(source coder) 410, 채널 코더(channel coder) 420, 변조기(modulator) 430, 송신부(RF TX) 440, 안테나 450을 포함할 수 있다. 소스 코더 410은 입력된 원본 데이터를 소스 코딩(source coding)할 수 있다. 소스 코더 410은 저장하기 용이하 고, 통신하기 용이하도록 원본 데이터의 크기를 줄이는 인코딩을 수행할 수 있다. 상기 데이터는 음성, 영상 또 는 데이터들이 될 수 있다. 그리고 상기 소스 코더 410은 데이터의 타입에 따라 각각 대응되는 타입의 코더들이 될 수 있다. 예를 들어 음성 데이터인경우, 소스 코더 410은 QCELP(Qualcomn Code-Excited Linear Prediction), AMR-NB(Adaptive Multi-Rate NarrowBand), AMR-WB(Adpative Multi-Rate WideBand) 방식의 코더 일 수 있다. 채널 코더 420은 통신 환경에서 발생하는 노이즈(noise)나 페이딩(fading)에 대한 에러를 줄이기 위하여 입력된 데이터에 대하여 채널 코딩(channel coding)을 수행할 수 있다. 채널 코더 420은 각각의 채널 별로 채널 코딩을 수행할 수 있다. 여기서 상기 채널은 음성 또는 데이터를 전송하기 위한 트래픽 채널, 제어 데이터를 전송하기 위한 제어 채널 등일 수 있다. 채널 코더 420은 컨벌루션 코더(convolutional coder)가 될 수 있다. 또한, 채널 코더 420은 하나의 전송단위로 채널 코딩을 수행할 수 있다. 상기 전송단위는 통신 시스템에 따라 다르게 지칭 될 수 있다. 채널 코더 420은 코드율(code rate)에 기반하여 입력된 비트에 대응하는 심볼을 출력할 수 있다. 예를 들어, 코드율이 1/3인 경우, 채널 코더 420에서 출력되는 심볼의 수는 입력 비트의 수의 3배일 수 있다. 변조기 430은 통신 시스템에 따른 변조 방식에 기반하여 변조를 수행할 수 있다. 예를 들면, 변조기 430은 코드 분할 방식(Code Division Multiple Access), 광대역 코드 분할 방식(Wideband Code Division Multiple Access), 직교 방식(예를 들면, OFDM: Orthogonal Frequency Division Multiplexing) 또는 비-직교 방식(예를 들면, FBMC: Filter Bank Multi-Carrier) 등의 변조기일 수 있다. 송신부 440은 변조된 송신 신호를 RF 대역으로 상향 변환할 수 있다. 또한, 송신부 440은 신호의 송신 전력을 증폭시킬 수 있다. 안테나 450은 1개 이상의 안테나를 포함할 수 있다. 또한, 안테나 450은 MIMO(Multi Input Multi Output) 기법 에 적합하게 구성될 수도 있다. 도 5는 채널 코더에서 채널 코딩되는 하나의 전송 단위 데이터의 예를 도시하고 있다. 도 5를 참조하면, 송신 데이터 500은 채널 코더 420에서 출력된 데이터일 수 있다. 예를 들면, 컨벌루션 인코더는 k개의 입력에 대해 n 개의 부호어를 생성할 수 있다. 이 경우, 코드율(code rate)은 k/n이 될 수 있다. 이때, 부호어(coded data, symbol)는 k개의 입력뿐 아니라, K라는 구속장(constraint length)에 의해서 결정될 수도 있다. 상기 구속장은 출력에 관여하는 총 입력의 개수를 의미할 수 있다. 또한, 상기 구속장은 영향을 미치는 데이터가 저장된 메모 리의 총 길이를 의미할 수도 있다. 예를 들어, 레지스터(register)의 개수가 m인 경우, 구속장 K는 m+1(즉, K=m+1)일 수 있다. 즉, 구속장 K가 7(즉, K=7)이라는 의미는 6 비트(bit)의 레지스터와 1 비트의 입력 데이터로 컨벌루션(convolution)을 수행한다는 의미일 수 있다. 따라서 코드율 1/M 컨벌루션 인코더는 1 비트 데이터를 입력받아 M 비트의 부호어를 생성할 수 있다. 또한, 이러한 동작은 생성 함수(generating function)을 이용하여 입력 정보 데이터를 time-convolution함으로써 수행될 수 있다. 도 6은 수신기의 구조를 도시한다. 수신기는 도 1의 통신 인터페이스부 170에 구성될 수 있다. 도 6을 참조하면, 수신기 600은 안테나 610, 수신부(RF RX) 620, 복조기(demodulator) 630, 채널 디코더 (channel decoder) 640, 소스 디코더(source decoder) 650을 포함할 수 있다. 안테나 610은 한 개 이상의 안테나를 포함할 수 있다. 또한, 안테나 610은 MIMO(multi input multi output) 기 법에 적합하게 구성될 수도 있다. 또한, 안테나 610은 송신기(예를 들면, 송신기 400)로부터 신호를 수신할 수 있다. 수신부 620은 수신 RF 신호를 저 잡음으로 증폭한 후 기저대역(baseband)으로 하향 변환할 수 있다. 복조기 630은 변조 방식(예를 들면, 코드 분할 방식(code division multiple access), 광대역 코드 분할 방식 (wideband code division multiple access), 직교 방식(예를 들면, OFDM: orthogonal frequency division multiplexing) 또는 비-직교 방식(예를 들면, FBMC: filter bank multi-carrier) 등)에 대응하여 수신 신호를 복조할 수 있다. 채널 디코더 640은 각각의 채널 별로 채널 디코딩(channel decoding)을 수행할 수 있다. 또한, 채널 디코더 640 은 전송 단위에 해당하는 데이터 단위로 채널 디코딩을 수행할 수 있다. 채널 디코더 640은 리스트 비터비 디코 더(list viterbi decoder, LVD)일 수 있다. 소스 디코더 650은 변조된 소스 데이터(source coded data, 채널 디코딩된 수신 데이터)를 디코딩할 수 있다. 상기 소스 디코더 650은 상기 소스코더 410에 대응되는 데이터 타입의 디코더가 될 수 있다. 비터비 디코더 알고리즘은 수신된 신호로부터 트렐리스(trellis) 상에서 누적된 경로 메트릭(accumulated path metric, 이하 'APM')값을 최대를 가지는 베스트 경로(best path)를 찾아 전송된 부호어를 찾는 maximum likelihood 알고리즘이다. 즉 상기 비터비 디코더 알고리즘은 수신 신호와 가장 가까운 거리에 있는 부호어를 찾는 알고리즘이 될 수 있다. 상기 비터비 디코더 알고리즘에서 수신 신호와 부호어들 간의 거리를 계산하는 수 식으로부터 APM이 정리되므로, APM은 수신 신호와 코드워드 간의 거리와 밀접한 관계를 나타내는 값이 될 수 있 다. 상기 비터비 디코더의 후단에 순환중복검사기(cyclic redundancy checking, 이하 'CRC')와 같이 오류를 검출할 수 있는 블록을 추가하면, 리스트 비터비 디코더(list Viterbi decoder)를 이용하여 디코딩 성능을 높일 수 있 다. 상기 리스트 비터비 디코더는 부호어들의 후보군의 개수를 정하고 정해진 개수만큼 가장 베스트 경로에 가 까운 부호어들을 찾고, 오류 검출기를 통해 오류가 없는 부호어를 찾는 알고리즘이다. 즉 리스트 비터비 디코더 는 리스트의 개수만큼 부호어의 후보군이 포함되도록 베스트 경로를 가지는 부호어로부터 거리를 확장시키는 것 과 같다. 본 발명의 다양한 실시예는 리스트 디코더를 사용하는 전자장치 또는 시스템에서 주어진 리스트 회수만큼 부호 어 후보군을 증가시켜 디코딩 오류를 줄일 수 있다. 구체적으로 예를 들면, 베스트 경로와 누적 경로 메트릭 APM값이 가장 비슷한 부호어들을 리스트 후보군으로 관리하고, 베스트 경로와 후보군들의 경로 메트릭 값의 차 이가 가장 작은 후보 군들을 찾을 수 있다. 리스트 비터비 디코더의 경우 초기 리스트 회수에서 대부분의 성능 이득이 발생하며, 리스트 회수가 증가 됨에 따라 성능 이득이 점점 작아지게 되어 수렴하게 된다. 또한, 리스트 회수가 증가하게 되면 베스트 경로와의 경로 메트릭 차이(path metric difference, 이하 'PMD')가 점점 더 커지 게 된다. 즉 베스트 경로를 가지는 부호어와 후보군들의 부호어 간에 거리가 점점 더 커지게 되어 디코딩 오류 (false alarm)가 증가될 수 있다. 본 발명의 다양한 실시예에서는 상기 PMD를 제한함으로 잘못된 부호어로 인한 디코딩 오류를 줄이고, 디코딩 성능도 유지시킬 수 있는 장치 및 방법을 제안한다. 이를 위하여, 리스트 비터비 디코더는 리스트 회수만큼 부호어들의 후보군을 선택 시 베스트 경로와 경로 메트 릭의 차이를 제한하며, 경로 차이에 제한을 두는 설정 값으로 리스트 비터비의 입력 신호의 평균값을 사용할 수 있다. 그리고 리스트 비터비에서 PMD가 설정된 임계값보다 크면 디코딩 동작을 종료하고 디코딩 오류로 처리할 수 있다. 따라서 본 발명의 다양한 실시예는 리스트 비터비 디코더를 사용할 때 리스트 횟수가 미리 결정된 최대값에 도 달하지 않더라도 코드 워드 후보 군에 속하기 위한 제한을 두는 것을 특징으로 한다. 이를 통해 리스트 비터비 디코더의 성능은 유지하면서 false alarm이 증가하는 것을 막을 수 있다. 상기 도 6의 채널 디코더는 리스트 비터비 디코더(list Viterbi decoder) 및 CRC 검사기(checker)를 포함할 수 있으며, 상기 리스트 비터비의 디코딩 결과는 CRC 검사기에 연결될 수 있다. 상기 리스트 디코더는 병렬 리스트 비터비 디코더(parallel list Viterbi decoder), 직렬 리스트 비터비 디코더(serial list Viterbi decoder) 등 의 여러 형태를 가질 수 있다. 실시예의 제한이 아닌 설명을 위한 목적으로 본 발명의 실시예에서는 상기 리스 트 비터비 디코더가 직렬 리스트 비터비 디코더 인 경우를 가정 한다."}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 2, "content": "도 7은 컨벌루션 인코딩 방법 및 그에 대응하는 디코딩 경로 생성 방법을 도시하는 도면이다. 컨벌루션 인코더 는 컨벌루셔널(convolutional) 코딩 시스템을 사용하여 신호를 코딩할 수 있다. 컨벌루셔널 코드는 앞서 입력된 비트들을 부가적으로 사용하여 코딩 프로세스에서 처리되는 특징을 갖는다. 따라서, 코더는 유한 상태 머신(finite state machine)의 한 종류가 될 수 있다. 코더에 사용될 수 있는 한 종류의 컨벌루션 코더의 예시가 도 7(a)에 도시되어 있다. 코더 블록도로부터 알 수 있듯이, 이러한 유닛에서의 코딩은 현재 입력 비트의 상태 Xn 뿐만 아니라, 2개의 래치(D)에서 유지되는 2개의 앞선 입력 비트들의 상태에 따라 좌우된다. 결과적으로, 코더 는 도 7(b)에서 그 상태도로 도시된 4-단계 머신이 될 수 있다. 상기 상태도로부터 도 7(c)에 도시된 코더의 트 렐리스도를 도출할 수 있다. 여기서, 0 입력값에 대응하는 특정 상태에 대한 분기(branch)는 실선 화살표로 표 시되고, 1 입력값에 대응하는 특정 상태에 대한 분기는 점선 화살표로 표시될 수 있다. 도 7(c)의 트렐리스도에 의하여, 당업자에게 코딩 프로세스가 자명할 수 있다. 도 8은 본 발명의 실시 예에 따른 무선 통신 시스템에서 채널 디코더의 구성을 도시한다. 도 8의 격자 경로 생성부 810과 트레이스 백부 830의 구체적인 동작 방법은 다음과 같다. 격자 경로 생성부 810 은 현재 상태로 들어오는 모든 경로에 대해서, 해당 경로의 이전 상태로부터 현재 상태로 이전되는 누적 경로 메트릭을 계산하고, 가장 좋은 누적 경로 메트릭 값을 가지는 경로를 생존 경로로 결정한 후 생존 경로 누적 메 트릭을 저장할 수 있다. 트레이스 백부 830은 이전 상태에서 현재 상태로 천이할 때 경로를 트레이스 백 테이블을 이용해 저장할 수 있 다. 트레이스 백부 830은 격자의 마지막 상태에서 최적 경로 누적 메트릭 값을 갖는 상태로부터 트레이스 백하 여 최대 유사 경로, 즉 베스트 경로(best path)를 결정할 수 있다. 그리고 트레이스 백부 830은 결정된 베스트 경로 경로에 대응하는 코드 워드를 출력할 수 있다. 여기서, 최초 생성된 최대 유사 경로를 제1 베스트 경로라 명명할 수 있다. 또 한, 트레이스 백부 830은 상기 제1 베스트 경로 생성을 위한 트레이스 백 과정에서, 베스트 경로의 각 노드에서의 누적 경로 메트릭 차이(accumulated path metric difference, 이하'APMD')를 계산하고 그 중에서 가장 작은 APMD 값을 갖는 노드와 최소 APMD를 결정할 수 있다. 상기 최소 APMD와 그 값을 갖는 노드 는 오류 검출과정에서 디코딩된 데이터에서 오류가 검출된 경우, 제2 베스트 경로, 제3 베스트 경로 또는 제4 베스트 경로 등 차순위 베스트 경로를 생성하기 위한 기초 자료로 활용될 수 있다. 그리고 트레이스 백부 830은 상기 APMD를 제어부 870에 송신할 수 있다. 트레이스 백부 830은 제1 베스트 경로의 트레이스 백을 통해 제1 코 드 워드(첫 번째 디코딩 결과)를 출력할 수 있다. 상기 디코딩 결과의 오류 판단을 위해, 트레이스 백부 830은 제1 코드 워드를 오류 검출부 850으로 송신할 수 있다. 오류 검출부 850은 디코딩 결과, 즉 디코딩된 코드 워드에 대한 오류 유무 검출을 실행할 수 있다. 예를 들어 오류 검출부 850은 제1 베스트 경로에 대응하는 디코딩 결과를 수신하고, 오류 유무를 결정할 수 있다. 그리고 상기 오류 결정 결과를 제어부 870에 송신할 수 있다. 상기 오류 검출부는 순환중복검사기(cyclic redundancy checking, 'CRC')가 될 수 있다. 일 실시예에 따라 디코딩 결과에 오류가 없다고 판단되는 경우, 상기 디코딩된 제1 코드 워드를 채용하고, 디코딩을 종료할 수 있다. 제어부 870은 오류 검출부 850으로부터 오류 검출 결과를 수신할 수 있다. 제어부 870은 디코딩 결과에서 오류 가 검출된 경우, 차 순위 베스트 경로를 생성이 필요한지 결정할 수 있다. 차 순위 베스트 경로를 생성이 필요한지 여부를 판단을 위해 제어부 870은 리스트 횟수를 판단할 수 있다. 상기 리스트 횟수를 나타내는 변수를 L이라고 하면, L이 1씩 증가할수록 생성되는 베스트 경로 및 그에 대응되는 코 드 워드 리스트(디코딩 결과)가 증가할 수 있다. 일 실시예에 따라 L의 초기값은 0으로 설정될 수 있고, 이는 제1 베스트 경로 및 그에 대응되는 제1 코드 워드에 대응될 수 있다. 또 한 제2 베스트 경로 생성을 위해 L은 1 이 증가하여, L=1의 결과가 되고, 제3 베스트 경로 생성을 위해 L은 1이 더 증가하여 L=2의 결과가 될 수 있다. 제어부 870은 리스트 횟수를 판단하여, 상기 리스트 횟수가 미리 설정된 최대값 LMAX을 초과하였는지 결정할 수 있다. 리스트 횟수가 LMAX를 초과하면, 제어부 870은 더 이상 베스트 경로를 생성하지 않고 디코딩 실패를 선언 할 수 있다. 이는 리스트 비터비 디코더의 경우 초기 리스트 횟수에서 대부분의 성능 이득이 발생할 수 있고, 리스트 횟수가 증가 됨에 따라 성능 이득이 점점 작아지게 되어 수렴할 수 있기 때문이다. 또한 리스트 횟수가 증가하게 되면 최대 유사 경로와의 경로 메트릭 차이가 점점 더 커질 수 있다. 최대 유사 경로, 즉 여기서 제1 베스트 경로를 가지는 코드 워드와 후보 군들의 코드 워드 간에 거리가 점점 더 커지게 되어 false alarm이 증 가할 수 있다. 일 실시예에 따라, LMAX=2인 경우, 제2 베스트 경로는 L=1에 대응되므로, 제어부 870은 리스트 횟 수가 미리 설정된 최대값 2를 초과하지 않았음을 결정할 수 있다. 또 한 차 순위 베스트 경로를 생성이 필요한지 판단을 위해 제어부 870은 APMD<thrAPMD 조건을 만족하는지 결 정할 수 있다. 구체적으로 살펴보면, 제어부 870은 트레이스 백부 830으로부터 수신한 제1 베스트 경로의 각 노 드에서의 APMD값 및 임계값 결정부 890으로부터 수신한 thrAPMD 를 비교할 수 있다. 여기서 임계값 결정부 890은 thrAPMD를 결정할 수 있다. 일 실시예에 따라 상기 thrAPMD는 평균 입력 신호의 레벨과 경로 메트릭 차이의 한계값 (이하 PMDlimit)의 곱으로 결정될 수 있다. 하지만 이는 thrAPMD 를 결정하는 방법에 대한 제한이 아니고 단순한 예로써 제시된 것뿐이다. 구체적으로 살펴보면 임계값 결정부 890은 수신 신호의 평균 입력 신호 레벨 Iin을 결 정할 수 있다. 이는 입력 신호의 레벨에 따라 경로 메트릭이 바뀔 수 있으므로, 임계값 결정부 890이 입력 신호 레벨의 평균 값을 활용하여 thrAPMD 를 결정하기 위함이다. 일 실시예에 따라 평균 입력 신호 레벨 Iin은 수학식 1을 통해 표현될 수 있다. 수학식 1"}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "수학식 1에서, an는 입력 신호의 값을 나타내고, m은 코드 워드의 길이를 나타낼 수 있다. 또한 임계값 결정부 890은 PMDlimit을 결정할 수 있다. 일 실시예에 따라 입력 신호가 모두 a라는 값을 가지고 있으며 오류가 없는 경 우를 가정할 수 있다. 즉 모든 an이 a라는 값을 가진다고 가정한다. 코드 워드의 길이는 m, 코트 레이트(code rate) 1/3이고, 코드 워드 또는 트렐리스 종료 조건인 테일(tail) 부분이 없다고 하면 APM은 3*m*a라는 값을 가 질 수 있다. 다른 실시예에 따라 입력신호에서 한 심볼만 오류가 발생한 경우 APM은 3*a*(m-1)+a=3*a*m-2a가 될 수 있다. 같은 방식을 통해 수학식 2는 k개의 심볼이 오류가 발생 한 경우 APM을 나타낼 수 있다. 수학식 2"}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "따라서 리스트 비터비 디코더에서 제1 베스트 경로에 대응되는 코드 워드에서 k개 만큼 오류가 발생한 경우만 리스트 후보로 고려하려면, PMD값이 2*a*k 이하만 고려하면 된다. 여기서 2*a*k가 PMDlimit이 될 수 있다. 결과적 으로 thrAPMD 는 수학식 3을 통해 표현될 수 있다. 수학식 3"}
{"patent_id": "10-2015-0107491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "예를 들어 제어부 870은 제2 베스트 경로 생성여부 판단을 위해, 제1 베스트 경로의 각 노드 중 APMD 값이 가장 작은 노드의 APMD 값을 제1 APMD 값으로 결정할 수 있다. 그리고 제어부 870은 상기 제1 APMD 값을 thrAPMD 와 비교할 수 있다. 다른 실시 예로, 제3 베스트 경로 생성여부 판단을 위해, 제1 베스트 경로의 각 노드 중 APMD 값이 두 번째로 작은 노드의 APMD 값을 제2 APMD값을 결정하고 이를 thrAPMD 와 비교할 수 있다. 비교결과, APMD>thrAPMD 인 경우, 제어부 870은 추가적인 베스트 경로 생성하지 않고 디코딩 실패를 선언할 수 있다. 이는APM 값이 수신 신호와 코드 워드간의 거리와 밀접한 관계를 나타내는 값이기 때문이다. 따라서 APMD가 커질수록 최대 유사 경로, 즉 제1 베스트 경로에 대응되는 제1 코드 워드와 후보군들의 코드 워드간에 거리가 점점 더 커 지게 되어 false alarm이 증가할 수 있기 때문이다. 따라서 L=Lmax 에 이르지 않더라도, 즉 리스트 횟수가 최대 에 도달하지 않더라도 APMD>thrAPMD 인 경우, 제어부 870은 새로운 디코딩 경로를 생성하지 않고 디코딩 실패를 선언할 수 있다. 반대로 APMD<thrAPMD 인 경우(여기서, L은 Lmax 를 초과하지 않아야 한다) 제어부 870은 상기 노드를 기준으로 디 코딩을 위한 새로운 베스트 경로를 생성을 위한 제어 신호를 격자 경로 생성부 810에 송신할 수 있다. 예를 들 어 제1 APMD<thrAPMD 인 경우, 제어부 870은 제2 베스트 경로를 생성하기 위한 결정을 하고 이를 격자 경로 생성 부 810에 전달할 수 있다. 다른 예로 제2 베스트 경로에 대응하는 디코딩 결과 오류가 검출된 경우, 제2 APMD<thrAPMD 조건을 만족한다면, 제어부 870은 제3 베스트 경로 생성을 위한 결정을 하고 이를 격자 경로 생성 부 810에 전달할 수 있다. 하지만, 상기 예에서 리스트 횟수 L은 미리 설정된 최대값 Lmax 를 초과하지 않아야 한다. 결과적으로 리스트 횟수 L이 Lmax 를 초과하지 않고, APMD<thrAPMD 조건을 만족하는 경우, 제어부 870은 새로 운 경로 생성을 위한 제어 신호를 격자 경로 생성부 810에 송신할 수 있다. 일 실시예에 따라서 리스트 횟수는 미리 설정된 최대값 Lmax 를 초과하지 않고, 제1 APMD<thrAPMD 조건을 만족하는 경우, 제어부 870은 제2 베스트 경 로 생성을 위한 제어 신호를 격자 경로 생성부 810에 송신 할 수 있다. 격자 경로 생성부 810은 제2 베스트 경 로 생성을 위해, 제1 APMD값에 대응하는 제1 베스트 경로의 노드에서 두 가지 경로 중 제1 베스트 경로와 다른 경로를 선택하여 새로운 경로를 생성할 수 있다. 상기 새롭게 생성된 경로가 제2 베스트 경로가 될 수 있다. 그 리고 트레이스 백부 830은 제2 베스트 경로에 대응하는 제2 코드 워드를 디코딩하고, 오류 검출부 850은 제2 코 드 워드에 대해 오류 유무를 검출할 수 있다. 상기 과정을 통한 수신 신호의 디코딩을 통해 false alarm이 증가 하는 것을 제어할 수 있다. 상기 실시예에서는 제2 코드 워드 생성 후 제3 코드 워드 생성 등 직렬적 코드 워드 후보군 리스트 생성 과 정이 설명되었으나, 다른 실시예에 따라서 제2 코드 워드 및 제3 코드 워드 등 코드 워드 후보군 리스트 생성이 병렬적(동시에)으로 생성 될 수 있다. 이 경우, 상기 병렬적으로 생성된 코드 워드 후보군에 대해서 오류 유무 를 검출하고, 오류가 없는 코드 워드 중 APMD 값이 가장 작은 베스트 경로에 대응되는 코드 워드를 결정할 수 있다. 일 실시예에 따라 격자 경로 생성부 810, 트레이스 백부 830 및 제어부 870이 하나의 칩으로 구성되어 디코더가 될 수 있으며, 상기 디코더가 임계값 결정부 890과 결합되어 리스트 비터비 디코더가 될 수 있다. 그리고 상기 리스트 비터비 디코더는 오류 검출부 850과 전기적으로 결합되어 리스트 비터비 디코더 장치가 될수 있다. 상기 도 8과 같은 구성을 가지는 채널 디코더에서, APM은 입력 신호의 레벨(level)에 따라 바뀔 수 있다. 상기 임계값 결정부 890에서 출력되는 평균 입력 신호의 레벨이 커지면 APM값도 커지며, 평균 입력 신호의 레벨이 작 아지면 APM값도 더 작아 지게 된다. 일반적으로 상기 리스트 비터비 디코더에 입력되는 신호는 잡음(noise)이 포함되어 있을 수 있다. 따라서 입력 신호 레벨이 일정하지 않을 수 있으며, 본 발명의 다양한 실시예에서는 임 계값 결정부 890이 대표 적인 값을 구하기 위해 평균 입력 신호 레벨을 측정할 수 있다. 이때 입력 신호 level 의 평균을 구하기 힘든 전자장치 또는 시스템도 있을 수 있다. 이런 경우, 상기 임계값 결정부 890은 일부 신호 에 대한 평균이나 전자장치 또는 시스템에서 동작하는 대표 적인 값 등 다양한 방법을 이용하여 평균 입력신호 를 결정할 수 있다. 또한 리스트 비터비 디코더는 PMDlimit 값을 가질 수 있다. 그리고 상기 비터비 디코더는 상기 임계값 결정부 890 에서 출력되는 평균 입력 신호 레벨(level)과 PMDlimit 값을 이용해 thrAPMD를 계산하여 상기 리스트 비터비의 동 작 범위를 제한할 수 있다. 또한 상기 임계값 결정부 890은 thrAPMD값을 바로 설정하여 사용할 수도 있다. 그리고 상기 리스트 비터비 디코더는 리스트 회수만큼 디코딩 동작을 수행하고, 디코딩 결과에서 상기 thrAPMD값 을 사용하여 후보 군을 제외할 수 있다. 또한 상기 리스트 비터비 디코더를 모두 동작 시킨 후 디코딩 결과에 오류가 없는 것으로(예: CRC good)으로 판정된 경우, 상기 리스트 비터비 디코더는 부호어의 PMD값을 thrAPMD와 비교하여 thrAPMD보다 크면 디코딩 실패(decoding fail)로 선언할 수도 있다.도 9는 본 발명의 실시예에 따른 리스트 비터비 디코더의 트렐리스도 상에서 L-th 베스트 경로를 생성하는 방법 을 도시한다. 하기 실시예는 직렬적으로 코드 워드 후보군 리스트를 추가해 가는 과정이 설명되지만, 이는 실시 예의 제한으로 이해되어서는 안되고, 다른 실시예에 따라 코드 워드 후보군 리스트가 병렬적으로 추가되는 과정 도 고려될 수 있다. 참조 번호 910은 일 실시예에 따른 리스트 비터비 디코더의 최대 유사 경로, 즉 제1 베스트 경로일 수 있다. 리 스트 비터비 디코더 알고리즘을 통해 상기 최대 유사 경로를 결정하는 과정은 공지 기술로써 당업자에게 자명할 것이다. 일 실시예에 따라 제1 베스트 경로에 대응하는 제1 코드 워드, 즉 최초의 디코딩 결과에서 오류가 검출 된 경우 리스트 비터비 디코더는 제2 코드 워드를 생성하기 위한 제2 베스트 경로 생성여부를 결정할 수 있다. 제2 베스트 경로 생성여부 결정을 위해, 본 발명의 실시예에 따라 리스트 비터비 디코더는 리스트 횟수가 최대 값 Lmax를 초과하였는지 여부 및 제1 APMD 값이 thrAPMD보다 작은지 결정할 수 있다. 여기서 제1 APMD 값은 제1 베스트 경로에서 APMD 값이 가장 작은 노드의 APMD 값에 해당한다. 일 실시예에 따라 Lmax를 2이라고 가정한 경 우, 제2 베스트 경로를 생성하기 위한 리스트 횟수는 1이므로 리스트 회수가 Lmax를 초과하지 않았음을 알 수 있 다. 참조 번호 901 내지 907은 제1 베스트 경로 상의 각 노드에서 각각의 APMD 값을 나타낸다. 일 실시예에 따 라 참조번호 901의 APMD 값이 가장 작은 경우, 이 값이 제1 APMD 값이 될 수 있다. 리스트 비터비 디코더는 상 기 제1 APMD 값이 thrAPMD보다 작은지 결정할 수 있다. 일 실시예에 따라 제1 APMD 값이 thrAPMD보다 큰 경우, 리 스트 비터비 디코더는 제2 코드 워드 후보군 생성을 위한 제2 베스트 경로를 생성하지 않고 디코딩 실패를 선언 할 수 있다. 이는 APM이 수신 신호와 코드 워드간의 거리와 밀접한 관계를 나타내는 값이기 때문이다. 따라서 APMD가 커질수록 최대 유사 경로, 즉 제1 베스트 경로에 대응되는 제1 코드 워드와 후보군들의 코드 워드간에 거리가 점점 더 커지게 되어 오류 경보(false alarm)가 증가할 수 있기 때문이다. 따라서 리스트 횟수 L이 Lmax 를 초과하지 않더라도, 즉 리스트 횟수가 최대값을 초과하지 않더라도 제1 APMD>thrAPMD 인 경우 리스트 비터비 디코더는 디코딩 실패를 선언할 수 있다. 그리고 디코딩 동작을 종료할 수 있다. 다른 실시예에 따라 제1 APMD 값이 thrAPMD보다 작은 경우, 리스트 비터비 디코더는 제1 APMD값에 대응되는 노드에서 제2 베스트 경로를 생성 할 수 있다. 리스트 비터비 디코더는 제2 베스트 경로에 대응되는 제2 코드 워드를 생성하고, 디코딩 결과에 오 류 유무를 결정할 수 있다. 일 실시예에 따라 제2 코드 워드에 오류가 검출되지 않은 경우, 디코딩을 종료할 수 있다. 반대로, 제2 코드 워드에 오류가 검출된 경우, 리스트 비터비 디코더는 제3 코드 워드를 생성하기 위한 제3 베스트 경로를 생성여부를 결정 할 수 있다. 제3 베스트 경로 생성여부 결정을 위해, 본 발명의 실시예에 따라 리스트 비터비 디코더는 리스트 횟수가 최대 값 Lmax를 초과하였는지 여부 및 제2 APMD 값이 thrAPMD보다 작은지 결정할 수 있다. 여기서 제2 APMD 값은 제1 베스트 경로에서 APMD 값이 두 번째로 작은 노드의 APMD 값에 해당할 수 있다. 일 실시예에 따라 Lmax를 2이라고 가정한 경우, 제3 베스트 경로를 생성하기 위한 리스트 횟수는 2이므로 리스트 회수가 Lmax를 초과하지 않았음을 알 수 있다. 일 실시예에 따라 참조번호 903의 APMD 값이 두 번째로 작은 경우, 이 값이 제2 APMD 값이 될 수 있다. 리스트 비터비 디코더는 상기 제2 APMD 값이 thrAPMD보다 작은지 결정할 수 있다. 일 실시예에 따라 제2 APMD 값이 thrAPMD보다 큰 경우, 리스트 비터비 디코더는 제3 코드 워드를 생성하기 위한 제3 베스트 경로를 생 성하지 않고 디코딩 실패를 선언할 수 있다. 다른 실시예에 따라 제2 APMD 값이 thrAPMD보다 작은 경우, 리스트 비터비 디코더는 제2 APMD값에 대응되는 노드에서 제3 베스트 경로를 생성할 수 있다. 리스트 비터비 디코더는 제3 베스트 경로에 대응되는 제3 코드 워드 후보군을 생성하고, 디코딩 결과에 오류 유무를 판단할 수 있다. 일 실시예에 따라 제3 코드 워드에 오류가 검출되지 않은 경우, 디코딩을 종료할 수 있다. 반대로, 제3 코드 워드 에 오류가 검출된 경우, 리스트 비터비 디코더는 제4 코드 워드를 생성하기 위한 제4 베스트 경로 생성여부를 결정 할 수 있다. 제4 베스트 경로 생성여부 결정을 위해, 본 발명의 실시예에 따라 리스트 비터비 디코더는 리스트 횟수가 최대 값 Lmax를 초과하였는지 여부 및 제3 APMD 값이 thrAPMD보다 작은지 판단할 수 있다. 여기서 제3 APMD 값은 제1 베스트 경로에서 APMD 값이 세 번째로 작은 노드의 APMD 값에 해당한다. 일 실시예에 따라 Lmax를 2이라고 가정 한 경우, 제4 베스트 경로를 생성하기 위한 리스트 횟수는 3이므로 리스트 회수가 Lmax를 초과하였음을 알 수 있다. 이 경우, 리스트 비터비 디코더는 디코딩 실패를 선언할 수 있다. 이는 리스트 비터비 디코더의 경우 초기 리스트 횟수에서 대부분의 성능 이득이 발생하며, 리스트 횟수가 증가 됨에 따라 성능 이득이 점점 작아지게 되 어 수렴하게 되기 때문이다. 또한, 리스트 횟수가 증가하게 되면 최대 유사 경로, 즉 제1 베스트 경로와의 경로 메트릭 차이가 점점 더 커질 수 있기 때문이다. 즉 최대 유사 경로, 즉 제1 베스트 경로를 가지는 제1 코드 워 드와 후보 군들의 코드 워드 간에 거리가 점점 더 커지게 되어 오류 경보(false alarm)가 증가 하기 때문에 리 스트 횟수를 설정된 임의의 값 Lmax를 초과하지 않도록 제한하는 것이다. 상기 실시예에서, 리스트 횟수가 Lmax 를 초과하였는지 판단 후 APMD값이 thrAPMD보다 작은지 판단하였으나, APMD 값이 thrAPMD보다 작은지 결정 후 리스트 횟수가 Lmax 에 도달하였는지 판단할 수 있다. 또한 Lmax를 2으로 설정한 것은 하나의 실시예에 불과하며, 다른 실시예를 제한하지 않는다. 도 10은 본 발명의 실시예에 따른 APMD 값의 제한에 및 L-th 코드 워드 생성여부 결정을 위한 흐름도이다. 하기 실시예는 직렬적으로 코드 워드 후보군 리스트를 추가해 가는 과정이 설명되지만, 이는 실시예의 제한으로 이해 되어서는 안되고, 다른 실시예에 따라 코드 워드 후보군 리스트가 병렬적(동시에)으로 추가되는 과정도 고려될 수 있다. 리스트 비터비 디코더는 1001 동작에서 베스트 경로를 생성하고, 디코딩 할 수 있다. 구체적으로 리스트 비터비 디코더는 디코딩을 통해 상기 생성된 경로에 대응되는 코드워드 후보군을 생성할 수 있다. 일 실시예에 따라 리 스트 비터비 디코더는 1001 동작에서 제2 베스트 경로를 생성할 수 있고, 디코딩 결과에 따라 제2 베스트 경로 에 대응되는 제2 코드 워드를 생성할 수 있다. 리스트 비터비 디코더는 1003 동작에서 디코딩 결과에 오류가 있는지 검출할 수 있다. 구체적으로 오류 검출부 850은 디코딩된 코드 워드에 오류가 있는지 검출할 수 있다. 일 실시예에 따라 리스트 비터비 디코더는 제2 베 스트 경로에 대응하는 제2 코드 워드에 오류가 있는지 검출할 수 있다. 1003 동작에서 디코딩 결과에 오류가 검출되지 않은 경우, 리스트 비터비 디코더는 1005 동작에서 디코딩 성공 을 선언하고 종료할 수 있다. 일 실시예에 따라 제2 베스트 경로에 대응하는 제2 코드 워드에 오류가 검출되지 않은 경우 리스트 비터비 디코더는 디코딩 성공을 판단하고, 디코딩 동작을 종료 할 수 있다. 반대로, 1003 동작에서 디코딩 결과에 오류가 검출된 경우, 새로운 베스트 경로 생성을 위해 1007 동작에서 APMD 값이 APMD값이 thrAPMD보다 작은지 결정할 수 있다. 일 실시예에 따라 제2 코드 워드에 오류가 검출된 경우, 제3 코드 워드 생성을 위한 제3 베스트 경로 생성 판단의 기초로, 제2 APMD 값이 thrAPMD보다 작은지 결정 할 수 있다. 만약 리스트 비터비 디코더는 제2 APMD 값이 thrAPMD보다 큰 경우, 새로운 베스트 경우(이 경우, 제 3 베스트 경로가 될 것이다)를 생성하지 않고, 1009 동작에서 디코딩 실패를 선언할 수 있다. 그리고 디코딩 동 작을 종료할 수 있다. 이는 APM 값이 수신 신호와 코드 워드간의 거리와 밀접한 관계를 나타내는 값이기 때문이 다. 따라서 APMD 값이 커질수록 최대 유사 경로, 즉 제1 베스트 경로를 가지는 코드 워드와 후보군들의 코드 워 드간에 거리가 점점 더 커지게 되고 그에 따라 오류 경보(false alarm)가 증가할 수 있기 때문이다. 반대로 리스트 비터비 디코더는 APMD 값이 thrAPMD 보다 작은 경우, 1001 동작으로 회기하여 새로운 베스트 경로 의 생성 및 디코딩 동작을 수행할 수 있다. 일 실시예에 따라 제2 APMD 값에 대응되는 제1 베스트 경로 상의 노 드를 기준으로 제3 베스트 경로를 생성할 수 있다. 그리고 제3 베스트 경로에 대응하는 코드 워드를 디코딩 할 수 있다. 상기 디코딩 결과에 대하여 리스트 비터비 디코더는 1003 동작에서 오류가 내재되어 있는지 검출할 수 있다. 상 기 오류 검출은 오류 검출부 850을 통해서 이루어질 수 있다. 일 실시예에 따라 리스트 비터비 디코더는 상기 제3 베스트 경로에 대응되는 제3 코드 워드에 오류가 있는지 검출할 수 있다. 오류 검출 결과, 제3 코드 워드에 오류가 내재되어 있지 않은 경우, 1005 동작에서 디코딩 성공을 선언할 수 있다. 그리고 디코딩 동작을 종료할 수 있다. 반대로, 오류 검출 결과 제3 코드 워드에 오류가 내재되어 있는 경우 리스트 비터비 디코더는 새로운 베스트 경로(여기서는 제4 베스트 경로가 될 것이다)의 생성여부 결정을 위해 1007 동작으로 돌아가서 제3 APMD 값이 thrAPMD 보다 작은지 결정할 수 있다.도 11은 본 발명의 실시예에 따른 APMD 값 및 리스트 횟수의 제한에 따른 L-th 코드 워드 생성여부 결정을 위한 흐름도이다. 하기 실시예는 직렬적으로 코드 워드 후보군 리스트를 추가해 가는 과정이 설명되지만, 이는 실시 예의 제한으로 이해되어서는 안되고, 다른 실시예에 따라 코드 워드 후보군 리스트가 병렬적(동시에)으로 추가 되는 과정도 고려될 수 있다. 리스트 비터비 디코더는 1101 동작에서 베스트 경로를 생성하고, 디코딩 할 수 있다. 구체적으로 리스트 비터비 디코더는 디코딩을 통해 상기 생성된 경로에 대응되는 코드워드 후보군을 생성할 수 있다. 일 실시예에 따라 리 스트 비터비 디코더는 1101 동작에서 제2 베스트 경로를 생성할 수 있고, 디코딩 결과에 따라 제2 베스트 경로 에 대응되는 제2 코드 워드를 생성할 수 있다. 리스트 비터비 디코더는 1103 동작에서 디코딩 결과에 오류가 있는지 검출할 수 있다. 구체적으로 오류 검출부 850은 디코딩된 코드 워드에 오류가 있는지 검출할 수 있다. 일 실시예에 따라 리스트 비터비 디코더는 제2 베 스트 경로에 대응하는 제2 코드 워드에 오류가 있는지 검출할 수 있다. 1103 동작에서 디코딩 결과에 오류가 검출되지 않은 경우, 리스트 비터비 디코더는 1105 동작에서 디코딩 성공 을 선언하고 디코딩 동작을 종료할 수 있다. 일 실시예에 따라 제2 베스트 경로에 대응하는 제2 코드 워드에 오 류가 검출되지 않은 경우 리스트 비터비 디코더는 디코딩 성공을 판단하고, 디코딩 동작을 종료 할 수 있다. 반대로, 1003 동작에서 디코딩 결과에 오류가 검출된 경우,새로운 베스트 경로 생성을 위한 전제로써 리스트 비 터비 디코더는 1107 동작에서 리스트 횟수(L)가 미리 설정된 리스트 최대값 Lmax 를 도달하였는지 결정할 수 있 다. 리스트 횟수가 Lmax 에 도달한 경우, 리스트 비터비 디코더는 디코딩 동작을 종료하고 1113 동작에서 디코딩 실패를 선언할 수 있다. 그리고 디코딩 동작을 종료 할 수 있다. 이는 리스트 비터비 디코더의 경우 초기 리스 트 횟수에서 대부분의 성능 이득이 발생할 수 있기 때문이다. 따라서 리스트 횟수가 증가 됨에 따라 리스티 비 터비 디코더의 성능 이득이 점점 작아지게 되어 수렴할 수 있다. 또한, 리스트 횟수가 증가하게 되면 최대 유사 경로, 즉 제1 베스트 경로와의 경로 메트릭 차이가 점점 더 커질 수 있다. 예를 들어 Lmax 가 3인 경우, 제2 베 스트 경로에 대응하는 리스트 횟수 L=1이므로, 리스트 횟수는 최대값 Lmax 에 아직 도달하지 않았음을 결정 할 수 있다. 리스트 횟수 L이 아직 Lmax에 도달하지 않은 경우, 새로운 베스트 경로 생성을 위한 전제로써 리스트 비터비 디 코더는 1109 단계에서 리스트 횟수를 +1 추가할 수 있다. 예를 들어 1103 동작에서 제1 베스트 경로에 대응되는 제1 코드 워드에 오류가 검출된 경우 리스트 L은 1109 동작에서 1(0+1=1)로 될 수 있다. 또는 1103 동작에서 제 2 베스트 경로에 대응되는 제2 코드 워드에 오류가 검출된 경우 리스트 횟수 L은 2(1+1=2)가 될 수 있다. 그 후, 리스트 비터비 디코더는 디코딩 결과에서 오류가 검출됨에 따라 새로운 베스트 경로 생성을 위해 1111 동작에서 APMD 값이 thrAPMD 보다 작은지 결정할 수 있다. 예를 들어 제2 코드 워드에 오류가 검출됨에 따라 제3 베스트 경로 생성을 위한 판단 기초로, 제2 APMD 값이 thrAPMD보다 작은지 결정할 수 있다. 또는 제3 코드 워드 에 오류가 검출됨에 따라 제4 베스트 경로 생성을 위한 판단 기초로, 제3 APMD 값이 thrAPMD 보다 작은지 결정할 수 있다. 여기서 제2 APMD 값은 최대 유사 경로, 즉 제1 베스트 경로에서 두 번째로 작은 APMD 값을 의미하고, 제3 APMD 값은 제1 베스트 경로에서 세 번째로 작은 APMD 값을 의미한다. 예를 들어 제2 APMD 값이 thrAPMD 보다 큰 경우, 리스트 비터비 디코더는 제3 베스트 경로를 생성하지 않고 1113 동작에서 디코딩 실패를 선언할 수 있 다. 그리고 디코딩 동작을 종료할 수 있다. 이는 APM 값이 수신 신호와 코드 워드간의 거리와 밀접한 관계를 나 타내는 값이기 때문이다. 따라서 APMD 값이 커질수록 최대 유사 경로, 즉 제1 베스트 경로를 가지는 코드 워드 와 후보군들의 코드 워드간에 거리가 점점 더 커지게 되어 오류 경보(false alarm)가 증가할 수 있다. 반대로 APMD 값이 thrAPMD보다 작은 경우 리스트 비터비 디코더는 1101 동작으로 회기하여 새로운 베스트 경로를 생성 및 디코딩 동작을 할 수 있다. 예를 들어 제2 APMD 값이 thrAPMD보다 작은 경우 리스트 비터비 디코더는 1101 동작에서 제3 베스트 경로를 생성할 수 있다. 그리고 리스트 비터비 디코더는 제3 베스트 경로에 대응되는 제3 코드 워드를 생성 할 수 있다. 그 후, 리스트 비터비 디코더는 1103 동작에서 디코딩 결과에 오류가 있는지 검출할 수 있다. 구체적으로 오류 검출은 오류 검출부 850을 통해 이루어 질 수 있다. 일 실시예에 따라 리스트 비터비 디코더는 1103 동작에서 제2 코드 워드에 오류가 있는지 검출할 수 있다. 오류가 검출되지 않은 경우, 리스트 비터버 디코더는 제2 코드워드를 채용하고 1105 동작에서 디코딩 성공을 선언할 수 있다. 그리고 디코딩 동작을 종료 할 수 있다. 상기 도 11에 대한 설명은, 제2 코드 워드에 오류가 검출되어 제3 베스트 경로를 생성하기 위한 판단과정을 통 해 설명되었지만 이는 일 예로써 제시된 것뿐이다. 따라서 다른 실시예에 따라 1103 동작에서 제1 코드 워드, 제2 코드 워드 또는 제3 코드 워드 등에서 오류가 검출되어 제2 베스트 경로, 제3 베스트 경로 또는 제4 베스트 경로 등의 생성여부 판단을 위한 과정을 포함할 수 있다. 도 12는 다양한 실시 예에 따른 무선 통신 칩을 포함하는 IoT(internet of things) 기기의 하드웨어(Hardware) 구조도이다. 도 12를 참조하면, IoT 기기 1200은 외부와 통신하기 위한 통신 인터페이스 1220을 포함할 수 있다. 통신 인터 페이스 1220은 예를 들어, 유선 근거리통신망(LAN: Local Area Network), 블루투스(Bluetooth), Wi- Fi(Wireless Fidelity), Zigbee와 같은 무선 근거리 통신 인터페이스 PLC(Power Line Communication) 또는 3G(3rd Generation), LTE(Long Term Evolution) 등 이동 통신망(mobile cellular network)에 접속 가능한 모뎀 통신 인터페이스일 수 있다. 통신 인터페이스 1220은 송신부(Transceiver) 및/또는 수신부(Receiver)를 포함할 수 있다. IoT 기기 1200은 상기 송신부 및/또는 수신부를 통하여, 액세스 포인트 또는 게이트웨이로부터 정보를 송신 및/또는 수신할 수 있다. 또한, IoT 기기 1200은 사용자 기기 또는 다른 IoT 기기와 통신하여 IoT 기기 1200의 제어 정보 또는 데 이터를 송신 및/또는 수신할 수 있다. IoT 기기 1200은 연산을 수행하는 프로세서 또는 어플리케이션 프로세서(Application Processor: 1210) 등을 더 포함할 수 있다. IoT 기기 1200은 내부 전력 공급을 위하여 배터리를 내장하거나 외부에서 전력을 공급받는 전원 공급부를 더 포함할 수 있다. 또한, IoT 기기 1200은 내부 상태 또는 데이터를 표시하기 위한 디스플레이 1240을 포함할 수 있다. 사용자는 IoT 기기 1200의 디스플레이 1240의 UI(User Interface)를 통하여 IoT 기기 1200을 제어할 수 있다. IoT 기기 1200은 상기 송신부를 통하여 내부 상태 및/또는 데이터를 외부로 전송하며, 상기 수신부를 통하여 외부로부터 제어명령 및/또는 데이터를 수신할 수 있다. 메모리 1230은 IoT 기기 1200을 제어하는 제어 명령어코드, 제어데이터 또는 사용자 데이터를 저장할 수 있다. 메모리 1230은 휘발성 메모리(volatile memory) 또는 불휘발성 메모리(nonvolatile memory) 중 적어도 하나를 포함할 수 있다. 불휘발성 메모리는 ROM (Read Only Memory), PROM (Programmable ROM), EPROM (Electrically Programmable ROM), EEPROM (Electrically Erasable and Programmable ROM), 플래시 메모리, PRAM (Phase- change RAM), MRAM (Magnetic RAM), RRAM (Resistive RAM), FRAM (Ferroelectric RAM) 등을 포함한다. 휘발성 메모리는 DRAM (Dynamic RAM), SRAM (Static RAM), SDRAM (Synchronous DRAM), PRAM (Phase-change RAM), MRAM (Magnetic RAM), RRAM (Resistive RAM), FeRAM (Ferroelectric RAM) 등과 같은 다양한 메모리들 중 적어 도 하나를 포함할 수 있다. IoT 기기 1200은 저장장치를 더 포함할 수 있다. 저장장치는 하드디스크(HDD), 솔리드 스테이트 디스크(SSD, Solid State Disk), eMMC(embedded Multi Media Card), UFS(Universal Flash Storage)와 같은 불휘발성 매체 일 수 있다. 저장장치는 입출력부 1250을 통해 제공된 사용자의 정보 및 센서 1260을 통해 수집된 센싱 정보들 을 저장할 수 있다. IoT 기기 1200은 데이터의 수신 과정에서 디코딩 동작을 수행할 수 있다. 이러한 경우, IoT 기기 1200은 본 개 시의 다양한 실시 예에 따른 디코딩 장치(또는 칩)를 포함할 수 있다. 상기 디코딩 장치는 통신 인터페이스 1220에 포함될 수 있다. 이러한 경우, 상기 디코딩 장치는 통신용 프로세서(CP: Communication Processor)일 수 있다. 이와 달리, 디코딩 장치는 어플리케이션 프로세서 1210에 포함될 수 있다. 이러한 경우, 상기 디코딩 장치는 어 플리케이션 프로세서 1210의 일부 구성 요소가 될 수 있다. 상기 디코딩 장치가 포함된 IoT 기기 1200은 리스트 횟수가 Lmax에 도달하지 않더라고 새로운 베스트 경로 생성 을 위한 노드에서 APMD값이 thrAPMD보다 큰 경우, 디코딩 실패를 선언할 수 있다. 해당 기술을 활용하게 되면 디 코딩의 성능이 유지되면서도 false alarm을 줄 일 수 있다.본 발명의 청구항 또는 명세서에 기재된 실시 예들에 따른 방법들은 하드웨어, 소프트웨어, 또는 하드웨어와 소 프트웨어의 조합의 형태로 구현될(implemented) 수 있다. 소프트웨어로 구현하는 경우, 하나 이상의 프로그램(소프트웨어 모듈)을 저장하는 컴퓨터 판독 가능 저장 매체 가 제공될 수 있다. 컴퓨터 판독 가능 저장 매체에 저장되는 하나 이상의 프로그램은, 전자 장치(device) 내의 하나 이상의 프로세서에 의해 실행 가능하도록 구성된다(configured for execution). 하나 이상의 프로그램은, 전자 장치로 하여금 본 발명의 청구항 또는 명세서에 기재된 실시 예들에 따른 방법들을 실행하게 하는 명령어 (instructions)를 포함한다. 이러한 프로그램(소프트웨어 모듈, 소프트웨어)은 랜덤 액세스 메모리 (random access memory), 플래시(flash) 메모리를 포함하는 불휘발성(non-volatile) 메모리, 롬(ROM: Read Only Memory), 전기적 삭제가능 프로그램가 능 롬(EEPROM: Electrically Erasable Programmable Read Only Memory), 자기 디스크 저장 장치(magnetic disc storage device), 컴팩트 디스크 롬(CD-ROM: Compact Disc-ROM), 디지털 다목적 디스크(DVDs: Digital Versatile Discs) 또는 다른 형태의 광학 저장 장치, 마그네틱 카세트(magnetic cassette)에 저장될 수 있다. 또는, 이들의 일부 또는 전부의 조합으로 구성된 메모리에 저장될 수 있다. 또한, 각각의 구성 메모리는 다수 개 포함될 수도 있다. 또한, 상기 프로그램은 인터넷(Internet), 인트라넷(Intranet), LAN(Local Area Network), WLAN(Wide LAN), 또 는 SAN(Storage Area Network)과 같은 통신 네트워크, 또는 이들의 조합으로 구성된 통신 네트워크를 통하여 접 근(access)할 수 있는 부착 가능한(attachable) 저장 장치(storage device)에 저장될 수 있다. 이러한 저장 장 치는 외부 포트를 통하여 본 발명의 실시 예를 수행하는 장치에 접속할 수 있다. 또한, 통신 네트워크상의 별도 의 저장장치가 본 발명의 실시 예를 수행하는 장치에 접속할 수도 있다. 상술한 본 발명의 구체적인 실시 예들에서, 발명에 포함되는 구성 요소는 제시된 구체적인 실시 예에 따라 단수 또는 복수로 표현되었다. 그러나 단수 또는 복수의 표현은 설명의 편의를 위해 제시한 상황에 적합하게 선택된 것으로서, 본 발명이 단수 또는 복수의 구성 요소에 제한되는 것은 아니며, 복수로 표현된 구성 요소라 하더라 도 단수로 구성되거나, 단수로 표현된 구성 요소라 하더라도 복수로 구성될 수 있다. 한편, 본 발명의 상세한 설명에서는 구체적인 실시 예에 관해 설명하였으나, 본 발명의 범위에서 벗어나지 않는 한도 내에서 여러 가지 변형이 가능함은 물론이다. 그러므로 본 발명의 범위는 설명된 실시 예에 국한되어 정해 져서는 아니 되며 후술하는 특허청구의 범위뿐만 아니라 이 특허청구의 범위와 균등한 것들에 의해 정해져야 한 다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2015-0107491", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시 예에 따른 네트워크 환경 내의 전자 장치를 도시한다. 도 2는 다양한 실시 예에 따른 전자 장치를 도시한다. 도 3은 다양한 실시 예에 따른 프로그램 모듈을 도시한다. 도 4는 전자장치의 무선 신호를 전송하는 송신기의 구성을 도시하는 도면이다. 도 5는 채널코더에서 채널 코딩되는 하나의 전송 단위 데이터의 예를 도시하고 있다. 도 6은 수신기의 구조를 도시한다. 도 7은 컨벌루션 인코딩 방법 및 그에 대응하는 디코딩 경로 생성 방법을 도시하는 도면이다. 도 8는 본 발명의 실시 예에 따른 무선 통신 시스템에서 채널 디코더의 구성을 도시한다. 도 9는 본 발명의 실시예에 따른 리스트 비터비 디코더의 트렐리스도 상에서 L-th 베스트 경로를 생성하는 방법 을 도시한다. 도 10은 본 발명의 실시예에 따른 APMD 값의 제한에 및 L-th 코드 워드 생성여부 결정을 위한 흐름도이다. 도 11은 본 발명의 실시예에 따른 APMD 값의 제한 및 리스트 횟수의 제한에 따른 L-th 코드 워드 생성여부 결정 을 위한 흐름도이다. 도 12는 다양한 실시 예에 따른 무선 통신 칩을 포함하는 IoT 기기의 하드웨어(Hardware) 구조도이다."}
