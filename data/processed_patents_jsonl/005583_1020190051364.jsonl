{"patent_id": "10-2019-0051364", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0097618", "출원번호": "10-2019-0051364", "발명의 명칭": "신경망 학습을 통한 데이터 처리 장치, 신경망 학습을 통한 데이터 처리 방법, 및 동일 방법", "출원인": "한국과학기술원", "발명자": "문재균"}}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "신경망을 통해 처리되는 태스크(task)의 제1 입력값을 상기 신경망을 통해 처리하여 제1 출력값을 획득하는 단계;상기 제1 출력값에 기초하여 투영(projection) 공간을 형성하는 단계;상기 태스크의 입력값 중 제2 입력값을 상기 신경망을 통해 처리하여 제2 출력값을 획득하는 단계;상기 제2 출력값을 상기 투영 공간에 투영하는 단계; 및상기 투영 공간 상에서 상기 제2 출력값의 처리과정을 수행하는 단계;를 포함하는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 투영 공간을 형성하는 과정을 선형 처리(linear processing)를 통해 수행하는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 신경망의 출력값을 상기 투영 공간에 투영하는 과정을 선형 처리를 통해 수행하는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항에 있어서,상기 투영 공간은 상기 신경망의 상기 제1 출력값과 기준 벡터 셋을 기초로 생성되고,상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 상기 신경망과 함께 학습될 수 있는, 신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4항에 있어서,상기 신경망의 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 상기 기준 벡터 셋이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 투영 공간 상에서 상기 처리과정을 수행하는,신경망 학습을 통한 데이터 처리 방법.공개특허 10-2020-0097618-3-청구항 6 제 1항에 있어서,상기 투영 공간이 경사 기반 알고리즘(gradient-descent algorithm)을 사용하지 않고 형성될 수 있는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1항에 있어서,상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)인,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1항에 있어서,상기 제1 입력값은 서포트 셋(support set)이고 상기 제2 입력값은 쿼리 셋(query set)이며,상기 서포트 셋은 상기 태스크의 입력값 중 선택된 일부와 해당 일부 데이터에 대한 라벨(label) 정보를 포함하고, 상기 쿼리 셋은 상기 태스크의 입력값 중 상기 서포트 셋을 제외한 나머지 데이터와 해당 나머지 데이터에대한 라벨 정보를 포함하는, 신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8항에 있어서,상기 처리 과정은 상기 신경망을 통해 상기 서포트 셋을 처리한 후 얻어진 상기 제1 출력값을 이용하여 생성된상기 투영 공간 상에서 상기 신경망을 통해 상기 쿼리 셋을 처리한 후 얻어진 상기 제2 출력값을 기초로 상기쿼리 셋(query set)을 분류하는, 신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9항에 있어서,상기 쿼리 셋을 상기 신경망을 통해 처리하여 얻어진 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된제1 결과값과 기준 벡터 셋 내의 기준 벡터들이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하고,상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 신경망과 함께 학습될 수 있는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10항에 있어서,상기 제1 결과값과 상기 제2 결과값들 사이의 다수의 쌍에 대해서 얻을 수 있는 거리 값들을 이용하여 상기 투공개특허 10-2020-0097618-4-영 공간 상에서 상기 쿼리 셋의 분류를 수행하고,상기 쿼리 셋 내의 모든 데이터에 대해서 획득된 상기 거리 값들에 기반한 결함값(loss)을 이용하여 상기 신경망과 상기 기준 벡터 셋을 업데이트 할 수 있는,신경망 학습을 통한 데이터 분류 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11항에 있어서,상기 투영 공간 상에서 상기 제2 결과값 중에 소정의 제1 결과값과 가장 가까운 거리 값을 갖는 소정의 제2 결과값을 기초로 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 10항에 있어서,상기 투영 공간은 상기 신경망의 출력 공간 상에 포함되는 상기 제1 출력값으로부터 획득된 평균 벡터와 상기평균 벡터에 대응하는 상기 기준 벡터 셋이 서로 가깝게 정렬되기 위한 공간이고,상기 평균 벡터는 상기 서포트 셋을 상기 신경망을 통해 처리한 상기 제1 출력값의 클래스 별 평균값에 해당하는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13항에 있어서,상기 투영 공간은 상기 평균 벡터와 상기 기준 벡터 셋의 차이인 오류 벡터를 이용하여 생성되는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14항에 있어서,상기 오류 벡터가 상기 투영 공간 상에서 모든 클래스에 대해 0(null)이 되도록 상기 투영 공간이 생성되는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 9항에 있어서,상기 투영 공간이 경사 기반 알고리즘(gradient-descent algorithm)을 사용하지 않고 형성될 수 있는,신경망 학습을 통한 데이터 처리 방법."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 9항에 있어서,공개특허 10-2020-0097618-5-상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)인,신경망 학습을 통한 데이터 처리 방법"}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "신경망 학습을 통한 데이터 처리 장치에 있어서,상기 데이터 처리 장치에서 판독 가능한 명령을 실행하도록 구현되는 프로세서를 포함하고,상기 프로세서는,상기 신경망을 통해 처리되는 태스크의 제1 입력값을 상기 신경망을 통해 처리하여 제1 출력값을 획득하고, 상기 제1 출력값에 기초하여 투영 공간을 형성하며, 상기 태스크의 입력값 중 제2 입력값을 상기 신경망을 통해처리하고, 상기 제2 출력값을 상기 투영 공간에 투영하여,상기 투영 공간 상에서 상기 제2 출력값의 처리과정을 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서,상기 투영 공간을 형성하는 과정을 선형 처리(linear processing)를 통해 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 18항에 있어서,상기 프로세서는,상기 신경망의 출력값을 상기 투영 공간에 투영하는 과정을 선형 처리를 통해 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 18항에 있어서,상기 프로세서는,상기 투영 공간을 상기 신경망의 상기 제1 출력값과 기준 벡터 셋을 통해 생성하고,상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 상기 신경망과 함께 학습될 수 있는, 신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 21항에 있어서,상기 프로세서는,공개특허 10-2020-0097618-6-상기 신경망의 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 상기 기준 벡터 셋이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 투영 공간 상에서 상기 처리과정을 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제 18항에 있어서,상기 프로세서는,상기 투영 공간을 경사 기반 알고리즘(gradient-descent algorithm)을 사용하지 않고 형성할 수 있는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제 18항에 있어서,상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)인,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제 18항에 있어서,상기 제1 입력값은 서포트 셋(support set)이고 상기 제2 입력값은 쿼리 셋(query set)이며,상기 서포트 셋은 상기 태스크의 입력값 중 선택된 일부와 해당 일부 데이터에 대한 라벨 정보를 포함하고, 상기 쿼리 셋은 상기 태스크의 입력값 중 상기 서포트 셋을 제외한 나머지 데이터와 해당 나머지 데이터에 대한라벨 정보를 포함하는, 신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제 25항에 있어서, 상기 프로세서는,상기 신경망을 통해 상기 서포트 셋을 처리한 후 얻어진 상기 제1 출력값을 이용하여 생성된 상기 투영 공간 상에서 상기 신경망을 통해 상기 쿼리 셋을 처리한 후 얻어진 상기 제2 출력값을 기초로 상기 쿼리 셋을분류하는, 신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제 26항에 있어서,상기 프로세서는,상기 쿼리 셋을 상기 신경망을 통해 처리하여 얻어진 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된제1 결과값과 기준 벡터 셋 내의 기준 벡터들이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용공개특허 10-2020-0097618-7-하여 상기 쿼리 셋의 상기 투영 공간 상에서의 분류를 수행하고,상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 신경망과 함께 학습될 수 있는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "제 27항에 있어서,상기 프로세서는,상기 제1 결과값과 상기 제2 결과값에 사이의 복수의 쌍에 대해서 얻을 수 있는 거리 값들을 이용하여 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하고,상기 쿼리 셋 내의 모든 데이터에 대해서 획득된 상기 거리 값들에 기반한 결함값(loss)을 이용하여 상기 신경망과 상기 기준 벡터 셋을 업데이트 할 수 있는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "제 28항에 있어서,상기 프로세서는,상기 투영 공간 상에서 상기 제2 결과값 중에 소정의 제1 결과값과 가장 가까운 거리 값을 갖는 소정의 제2 결과값을 기초로 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "제 28항에 있어서,상기 투영 공간은 상기 신경망의 출력 공간 상에 포함되는 상기 제1 출력값으로부터 획득된 평균 벡터와 상기평균 벡터에 대응하는 상기 기준 벡터 셋이 서로 가깝게 정렬되기 위한 공간이고,상기 평균 벡터는 상기 서포트 셋을 상기 신경망을 통해 처리한 상기 제1 출력값의 클래스 별 평균값에 해당하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_31", "content": "제 30항에 있어서,상기 프로세서는,상기 평균 벡터와 상기 기준 벡터 셋의 차이인 오류 벡터를 이용하여 상기 투영 공간을 생성하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_32", "content": "제 31항에 있어서,공개특허 10-2020-0097618-8-상기 프로세서는,상기 오류 벡터가 상기 투영 공간 상에서 모든 클래스에 대해 0(null)이 되도록 상기 투영 공간을 생성하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_33", "content": "제 26항에 있어서,상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)인,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_34", "content": "제 26항에 있어서,상기 투영 공간에 대한 투영을 통해 경사 기반 알고리즘(gradient descent algorithm) 처리 방식을 이용하지 않고 상기 쿼리 셋에 대한 분류를 수행하는,신경망 학습을 통한 데이터 처리 장치."}
{"patent_id": "10-2019-0051364", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_35", "content": "제 1항 내지 제 18항 중 어느 한 항에 따른 방법을 실행하기 위한 컴퓨터 프로그램을 기록하기 위한 컴퓨터 판독 가능한 기록 매체."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 실시예에 따른 신경망 학습을 통한 데이터 처리 방법은, 신경망을 통해 처리되는 태스크(task)의 제1 입력값을 상기 신경망을 통해 처리하여 제1 출력값을 획득하는 단계, 상기 제1 출력값에 기초하여 투영 (projection) 공간을 형성하는 단계, 상기 태스크의 입력값 중 제2 입력값을 상기 신경망을 통해 처리하여 제2 출력값을 획득하는 단계, 상기 제2 출력값을 상기 투영 공간에 투영하는 단계 및 상기 투영 공간 상에서 상기 제 2 출력값의 처리과정을 수행하는 단계를 포함할 수 있다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 신경망 학습을 통한 데이터 처리 장치, 신경망 학습을 통한 데이터 처리 방법, 및 동일 방법을 기록 한 기록 매체에 관한 것으로, 보다 구체적으로 신경망을 통해 처리된 데이터로부터 생성된 소정의 투영 공간을 이용하여 해당 신경망을 통해 아직 처리되지 않은 처리 대상 데이터를 처리함으로서 처리 성능을 향상시키기 위 한, 신경망 학습을 통한 데이터 처리 장치, 신경망 학습을 통한 데이터 처리 방법, 및 동일 방법을 기록한 기록 매체에 관한 것이다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템으로서 기계가 스스로 학습하고 판단하며, 사용 할수록 인식률이 향상되는 시스템이다. 인공지능 기술은 입력 데이터들의 특징을 스스로 분류/학습하는 알고리 즘을 이용하는 기계학습(딥러닝) 기술 및 기계학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 요소 기술들로 구성된다. 요소기술들은, 예로, 인간의 언어/문자를 인식하는 언어적 이해 기술, 사물 을 인간의 시각처럼 인식하는 시각적 이해 기술, 정보를 판단하여 논리적으로 추론하고 예측하는 추론/예측 기 술, 인간의 경험 정보를 지식데이터로 처리하는 지식 표현 기술 및 차량의 자율 주행, 로봇의 움직임을 제어하 는 동작 제어 기술 중 적어도 하나를 포함할 수 있다. 특히, 시각적 이해는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함 한다. 한편, 신경망 학습은 기본적으로 거대한 용량의 입력 데이터에 대해 제한된 상황에서 빠르게 학습 해야 하므로 처리 시스템에 부하가 걸리는 문제가 있다. 이와 더불어, 신경망 상에서 허용된 복잡도에 따라 신경망 연결 웨 이트의 해상도가 제한되며, 이로서 신경망 웨이트는 완전 정밀도(full-precision) 값을 갖지 못하고 양자화된형태로 표현된다는 단점이 있다. 이런 경우, 신경망의 추론이 급격이 저하되는 것이다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 전술한 문제점을 해결하기 위해 도출된 것으로, 태스크의 극히 소량의 데이터만을 가지고도 학습되지 않은 태스크에 대해 빠르고 성공적으로 학습 결과를 획득하는 것을 목적으로 한다. 또한, 본 발명은 전술한 바와 같이 하드웨어 혹은 소프트웨어 문제로 인하여 신경망의 크기 및 신경망의 연결 웨이트의 해상도가 제한 받는 상황에서, 성공적인 추론 결과를 획득하는 것을 목적으로 한다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시예에 따른 신경망 학습을 통한 데이터 처리 방법은, 신경망을 통해 처리되는 태스크(task)의 제1 입력값을 상기 신경망을 통해 처리하여 제1 출력값을 획득하는 단계, 상기 제1 출력값에 기초하여 투영 (projection) 공간을 형성하는 단계, 상기 태스크의 입력값 중 제2 입력값을 상기 신경망을 통해 처리하여 제2 출력값을 획득하는 단계, 상기 제2 출력값을 상기 투영 공간에 투영하는 단계 및 상기 투영 공간 상에서 상기 제2 출력값의 처리과정을 수행하는 단계를 포함할 수 있다. 실시예에 따라, 상기 투영 공간을 형성하는 과정을 선형 처리(linear processing)를 통해 수행할 수 있다. 실시예에 따라, 상기 신경망의 출력값을 상기 투영 공간에 투영하는 과정을 선형 처리를 통해 수행할 수 있다. 실시예에 따라, 상기 투영 공간은 상기 신경망의 상기 제1 출력값과 기준 벡터 셋을 기초로 생성되고, 상기 기 준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 상기 신경망과 함께 학습될 수 있다. 실시예에 따라, 상기 신경망의 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 상기 기 준 벡터 셋이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 투영 공간 상에서 상기 처리과정을 수행할 수 있다. 실시예에 따라, 상기 투영 공간이 경사 기반 알고리즘(gradient-descent algorithm)을 사용하지 않고 형성될 수 있다. 실시예에 따라, 상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)일 수 있다. 실시예에 따라, 상기 제1 입력값은 서포트 셋(support set)이고 상기 제2 입력값은 쿼리 셋(query set)이며, 상 기 서포트 셋은 상기 태스크의 입력값 중 선택된 일부와 해당 일부 데이터에 대한 라벨(label) 정보를 포함하고, 상기 쿼리 셋은 상기 태스크의 입력값 중 상기 서포트 셋을 제외한 나머지 데이터와 해당 나머지 데 이터에 대한 라벨 정보를 포함할 수 있다. 실시예에 따라, 상기 처리 과정은 상기 신경망을 통해 상기 서포트 셋을 처리한 후 얻어진 상기 제1 출력값을 이용하여 생성된 상기 투영 공간 상에서 상기 신경망을 통해 상기 쿼리 셋을 처리한 후 얻어진 상기 제2 출력값 을 기초로 상기 쿼리 셋(query set)을 분류할 수 있다. 실시예에 따라, 상기 쿼리 셋을 상기 신경망을 통해 처리하여 얻어진 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 기준 벡터 셋 내의 기준 벡터들이 상기 투영 공간 상에 투영되어 획득된 제2 결 과값을 함께 이용하여 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하고, 상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 신경망과 함께 학습될 수 있다. 실시예에 따라, 상기 제1 결과값과 상기 제2 결과값들 사이의 다수의 쌍에 대해서 얻을 수 있는 거리 값들을 이 용하여 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하고, 상기 쿼리 셋 내의 모든 데이터에 대해서 획득 된 상기 거리 값들에 기반한 결함값(loss)을 이용하여 상기 신경망과 상기 기준 벡터 셋을 업데이트 할 수 있다. 실시예에 따라, 상기 투영 공간 상에서 상기 제2 결과값 중에 소정의 제1 결과값과 가장 가까운 거리 값을 갖는 소정의 제2 결과값을 기초로 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행할 수 있다. 실시예에 따라, 상기 투영 공간은 상기 신경망의 출력 공간 상에 포함되는 상기 제1 출력값으로부터 획득된 평 균 벡터와 상기 평균 벡터에 대응하는 상기 기준 벡터 셋이 서로 가깝게 정렬되기 위한 공간이고, 상기 평균 벡 터는 상기 서포트 셋을 상기 신경망을 통해 처리한 상기 제1 출력값의 클래스 별 평균값에 해당할 수 있다. 실시예에 따라, 상기 투영 공간은 상기 평균 벡터와 상기 기준 벡터 셋의 차이인 오류 벡터를 이용하여 생성될 수 있다. 실시예에 따라, 상기 오류 벡터가 상기 투영 공간 상에서 모든 클래스에 대해 0(null)이 되도록 상기 투영 공간 이 생성될 수 있다. 실시예에 따라, 상기 투영 공간이 경사 기반 알고리즘(gradient-descent algorithm)을 사용하지 않고 형성될 수 있다. 실시예에 따라, 상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)일 수 있다. 본 발명의 실시예에 따른 신경망 학습을 통한 데이터 처리 장치는, 상기 데이터 처리 장치에서 판독 가능한 명 령을 실행하도록 구현되는 프로세서를 포함하고, 상기 프로세서는, 상기 신경망을 통해 처리되는 태스크의 제1 입력값을 상기 신경망을 통해 처리하여 제1 출력값을 획득하고, 상기 제1 출력값에 기초하여 투영 공간을 형성 하며, 상기 태스크의 입력값 중 제2 입력값을 상기 신경망을 통해 처리하고, 상기 제2 출력값을 상기 투영 공간 에 투영하여, 상기 투영 공간 상에서 상기 제2 출력값의 처리과정을 수행할 수 있다. 실시예에 따라, 상기 투영 공간을 형성하는 과정을 선형 처리(linear processing)를 통해 수행할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 신경망의 출력값을 상기 투영 공간에 투영하는 과정을 선형 처리를 통해 수행할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 투영 공간을 상기 신경망의 상기 제1 출력값과 기준 벡터 셋을 통해 생 성하고, 상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 상기 신경망과 함께 학습될 수 있다. 실시예에 따라, 상기 프로세서는, 상기 신경망의 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 상기 기준 벡터 셋이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 투영 공 간 상에서 상기 처리과정을 수행할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 투영 공간을 경사 기반 알고리즘(gradient-descent algorithm)을 사용하 지 않고 형성할 수 있다. 실시예에 따라, 상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)일 수 있다. 실시예에 따라, 상기 제1 입력값은 서포트 셋(support set)이고 상기 제2 입력값은 쿼리 셋(query set)이며, 상 기 서포트 셋은 상기 태스크의 입력값 중 선택된 일부와 해당 일부 데이터에 대한 라벨 정보를 포함하고, 상기 쿼리 셋은 상기 태스크의 입력값 중 상기 서포트 셋을 제외한 나머지 데이터와 해당 나머지 데이터에 대한 라벨 정보를 포함할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 신경망을 통해 상기 서포트 셋을 처리한 후 얻어진 상기 제1 출력값을 이용하여 생성된 상기 투영 공간 상에서 상기 신경망을 통해 상기 쿼리 셋을 처리한 후 얻어진 상기 제2 출력값 을 기초로 상기 쿼리 셋을 분류할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 쿼리 셋을 상기 신경망을 통해 처리하여 얻어진 상기 제2 출력값이 상기 투영 공간 상에 투영되어 획득된 제1 결과값과 기준 벡터 셋 내의 기준 벡터들이 상기 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 상기 쿼리 셋의 상기 투영 공간 상에서의 분류를 수행하고, 상기 기준 벡터 셋은 하나 혹은 복수의 기준 벡터들로 이루어진 셋으로 신경망과 함께 학습될 수 있다. 실시예에 따라, 상기 프로세서는, 상기 제1 결과값과 상기 제2 결과값에 사이의 복수의 쌍에 대해서 얻을 수 있 는 거리 값들을 이용하여 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행하고, 상기 쿼리 셋 내의 모든 데 이터에 대해서 획득된 상기 거리 값들에 기반한 결함값(loss)을 이용하여 상기 신경망과 상기 기준 벡터 셋을업데이트 할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 투영 공간 상에서 상기 제2 결과값 중에 소정의 제1 결과값과 가장 가까 운 거리 값을 갖는 소정의 제2 결과값을 기초로 상기 투영 공간 상에서 상기 쿼리 셋의 분류를 수행할 수 있다. 실시예에 따라, 상기 투영 공간은 상기 신경망의 출력 공간 상에 포함되는 상기 제1 출력값으로부터 획득된 평 균 벡터와 상기 평균 벡터에 대응하는 상기 기준 벡터 셋이 서로 가깝게 정렬되기 위한 공간이고, 상기 평균 벡 터는 상기 서포트 셋을 상기 신경망을 통해 처리한 상기 제1 출력값의 클래스 별 평균값에 해당할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 평균 벡터와 상기 기준 벡터 셋의 차이인 오류 벡터를 이용하여 상기 투 영 공간을 생성할 수 있다. 실시예에 따라, 상기 프로세서는, 상기 오류 벡터가 상기 투영 공간 상에서 모든 클래스에 대해 0(null)이 되도 록 상기 투영 공간을 생성할 수 있다. 실시예에 따라, 상기 신경망은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)일 수 있다. 실시예에 따라, 상기 투영 공간에 대한 투영을 통해 경사 기반 알고리즘(gradient descent algorithm) 처리 방 식을 이용하지 않고 상기 쿼리 셋에 대한 분류를 수행할 수 있다. 본 발명의 실시예에 따르면, 전술한 방법을 실행하기 위한 컴퓨터 프로그램을 기록하기 위한 컴퓨터 판독 가능 한 기록 매체를 포함할 수 있다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 적은 샘플을 바탕으로, 고속 학습 및 재학습이 매우 어렵다는 신경망의 단점을 신경망-신호 처리 모듈 결합 시스템의 학습 알고리즘을 통해 해결할 수 있다. 본 발명에 따르면, 하드웨어 혹은 소프트웨어 문제로 인하여 신경망의 크기 및 신경망의 연결 웨이트의 해상도 가 제한 받는 상황에서, 성공적인 추론 결과를 획득할 수 있게 된다. 본 발명에 따르면, 인공지능 시스템이 핵심 기술로 자리잡고 있는 마켓에 매우 큰 효과를 가져올 것으로 기대된 다. 글로벌 회사뿐만 아니라 중소기업 및 벤처 회사들 또한 최신 전자제품에 학습 기반의 인공지능 서비스를 탑 재하려 한다. 하지만 대부분의 인공지능 서비스는 사용자자들의 보통 기호 및 취향 그리고 패턴에 맞추어 학습 하여 제공되는 경우가 대부분이며, 많은 부분이 학습이 아닌 미리 정해진 규칙에 따라 솔루션을 제공하는 rule- based method이다. 이 경우, 사용자의 특별한 기호에 맞추어 최적화된 솔루션을 제공하는 것은 매우 어렵다. 구 체적으로는, 보통의 사용자에 대해 학습을 진행할 때와는 다르게, 매우 적은 양의 특정 사용자 데이터만으로 사 용자 맞춤형 서비스를 제공해야하는 상황이다. 이는 차세대 인공지능 서비스의 가장 중요한 과제 중 하나이며, 사용자의 피부에 와 닿는 지능형 서비스를 만들기 위해 해결이 필수적이다. 본 발명은 이러한 '적은 샘플만으로 진행되는 사용자 맞춤형 고속 학습'에 효과적으로 활용되어 사용자 맞춤형 서비스를 제공할 수 있게 된다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "후술하는 본 발명에 대한 상세한 설명은, 본 발명이 실시될 수 있는 특정 실시예를 예시로서 도시하는 첨부 도 면을 참조한다. 이들 실시예는 당업자가 본 발명을 실시할 수 있기에 충분하도록 상세히 설명된다. 본 발명의 다양한 실시예는 서로 다르지만 상호 배타적일 필요는 없음이 이해되어야 한다. 예를 들어, 여기에 기재되어 있는 특정 형상, 구조 및 특성은 일 실시예에 관련하여 본 발명의 정신 및 범위를 벗어나지 않으면서 다른 실시 예로 구현될 수 있다. 또한, 각각의 개시된 실시예 내의 개별 구성요소의 위치 또는 배치는 본 발명의 정신 및 범위를 벗어나지 않으면서 변경될 수 있음이 이해되어야 한다. 따라서, 후술하는 상세한 설명은 한정적인 의미 로서 취하려는 것이 아니며, 본 발명의 범위는, 적절하게 설명된다면, 그 청구항들이 주장하는 것과 균등한 모 든 범위와 더불어 첨부된 청구항에 의해서만 한정된다. 도면에서 유사한 참조부호는 여러 측면에 걸쳐서 동일하 거나 유사한 기능을 지칭한다. 본 발명은 신경망의 추론이 충분치 않은 상황에서, 신경망-신호처리 모듈 결합 구조와 그 학습 알고리즘을 통해 이를 극복할 수 있는 과제에 폭넓게 적용될 수 있다. 해당 과제는 구체적으로 다음과 같은 상황을 포함한다: 1) 학습되지 않은 태스크(task)에 대해, 해당 task의 극히 적은 데이터만 가지고 빠르고 성공적으로 추론을 얻어야 하는 상황, 2) 하드웨어 혹은 소프트웨어 문제로 인하여 신경망의 크기 및 신경망의 연결 웨이트의 해상도가 제 한 받는 상황에서, 성공적인 추론을 얻어야 하는 상황. 위의 1)과 관련하여 본 발명은 메타 학습(meta-learning)과 관련된다. 메타 학습이란 학습을 해야하는 과제 (task)가 고정되어 있지 않을 때, 앞으로 처리해야 할 학습된 적 없는 task를 미리 대비하기 위한 학습 패러다 임으로 정의될 수 있다. 그렇기 때문에 메타 학습은 '학습을 위한 학습'이라는 의미로 'learn-to-learn' 프로세 스이다. 기존의 학습이 고정된 task에 대해서 해당 task에 특화된 전략을 학습한다면, 본 발명에 따른 메타 학 습은 학습된 적 없는 새로운 task에 대해서 성공적인 추론을 얻을 수 있는 전략을 학습해야한다. 다른 말로는, 변하는 task들이 공유하는 공통적인 추론 전략을 학습하는 패러다임이라고 할 수 있다. 전술한 바와 같이, 본 발명의 메타 학습은 학습된 적 없는 새로운 task에 대해서, 해당 task의 굉장히 적은 샘 플만 가지고, 얼마나 해당 task에 빠르게 대응하여 성공적인 추론을 얻어낼 수 있는지를 성능 평가의 기준으로 삼는다. 따라서, 메타학습기(meta-learner)의 핵심 전략은, 변하는 task들이 공유하는 공통 전략을 학습하면서, 주어진 현재 task에 대해서 빠르게 적응하여 성공적인 추론을 얻을 수 있는 알고리즘 설계에 있다. 도 1은 본 발명에 따른 메타학습기를 학습하기 위한 학습 과정을 보여준다. 도 1의 메타학습 알고리즘은 변화하 는 task들에 대해서 공유하는 지식을 신경망의 파라미터( )의 형태로 학습한다. 본 발명에서는 신경망과 결합된 신호처리 모듈이 새로운 task의 적은 샘플만 가지고도 곧바로 최적화될 수 있으며, 이렇게 최적화된 신호처리 모듈이 신경망의 신호를 입력으로 받아 '현재 task에 최 적화된 처리(task-adaptive processing)'를 진행하여 크게 향상된 추론을 얻을 수 있게 된다. 위의 2)와 관련하여 신경망의 크기 및 연결 웨이트 해상도에 대한 이슈 또한 본 발명이 해결할 수 있는 과제이 다. 신경망의 크기와 연결 웨이트의 해상도는 하드웨어 및 소프트웨어 모두의 복잡도에 가장 큰 요소 중 하나이 다. 신경망의 크기가 커질수록 학습해야하는 연결 웨이트가 많아지며, 학습 시 소요되는 연산 및 메모리 복잡도 를 크게 증가시킨다(computational and memory complexity). 신경망의 크기가 작다면 복잡도는 크게 줄어드나, 신경망을 통해 학습할 수 있는 전략이 제한 받게 되고 성능 또한 크게 저하된다. 신경망의 연결 웨이트의 해상 도는 학습이 필요한 웨이트들의 값의 정확도에 대한 이슈이다. 대부분의 신경망 학습 연구는 연결 웨이트에 대 한 복잡도 제한을 두지 않고 진행되며, 이런 경우는 웨이트를 floating point 혹은 full-precision으로 두고 진 행한다. 하지만 이 경우 웨이트 표현을 위해서 많은 메모리 복잡도 요구하며, 이러한 세밀한 웨이트 값을 학습 을 통해 최적화해야 하므로 연산 복잡도 또한 증가한다. 복잡도 제한으로 인하여 웨이트의 해상도를 낮게 사용 해야하는 경우, 신경망의 추론 성능은 크게 저하된다. 본 발명은 이와 같이 저 복잡도 신경망이 요구되는 제한된 상황에서 신경망의 성공적인 추론 성능을 얻기 위해 활용될 수 있다. 구체적으로는, 복잡도 제한으로 인해 신경망의 추론이 정확하지 않을 때, 신경망의 신호를 신호처리 모듈을 통해 처리하여 추론을 향상시키는데 활용될 수 있다. 본 발명은 신경망과 신경망의 신호를 입력으로 받는 신호처리 모듈의 결합 시스템을 다룬다. 구체적으로, 신경 망의 출력층(output layer)의 출력 신호(output signal), 은닉층(hidden layer) 신호 혹은 피처(feature)를 신 호처리 모듈의 입력으로 받아 처리한다. 본 발명의 신호처리 모듈의 추가적인 처리를 통해 부족한 신경망의 추론을 크게 향상시킨다. 본 발명은 신경망 의 구조 및 형태에 제한 받지 않으며 신호처리 모듈의 구체적인 설계 전략을 담고 있다. 이러한 결합 시스템 및 학습 알고리즘을 기반으로, 실제로 신경망의 학습만으로는 대처하기 어려운 학습 상황에서 크게 향상된 추론 성 능을 달성할 수 있게 된다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명을 실시하기 위한 구체적인 내용으로 신경망-신호처리 모듈 결합 시스템에 관한 구체적인 묘사 및 제안 하는 학습 알고리즘의 과정에 대해 설명한다. 본 발명에서 신경망-신호처리 모듈 결합 시스템을 TapNet(Task Adaptive Network, 이하 TapNet으로 약칭한다)이라는 용어로 정의한다. 또한, 본 발명에서 신호처리 모듈은 신 경망 출력 결과를 이용하여 생성된 투영 공간 및 투영 공간을 이용하여 데이터를 분류하기 위한 모듈을 포함하 는 개념으로 정의할 수 있다. 구체적으로, 입력 벡터를 투영 공간 상의 특정 행렬과 곱하는 선형 연산을 수행하 고, 그 후 얻어지는 벡터를 기반으로 거리(distance metric)를 계산하는 형태로 가정한 후 구체적인 설명을 서 술하도록 하겠다. 입력 벡터 신호에 행렬을 곱하는 형태는 입력 벡터를 행렬이 형성하는 투영 공간(projection space)에 투영(projection)하는 과정으로 해석될 수 있다. 하기 설명에서 해당 공간 투영 작업을 '태스크 적응 형 투영(Task-Adaptive Projection)'이라 명명하여 사용할 것이다. 구체적으로는, 새로운 task에 대해서 신경망의 굉장히 많은 연결 웨이트를 새로이 학습할 수는 없기 때문에, 적 은 수의 샘플들에 대해서 신경망의 신호를 바탕으로 신호처리 모듈을 최적화하도록 한다. 신호처리 모듈은 현 task에 성공적인 추론이 가능하도록 최적화하며, 이러한 설계 및 최적화는 수학적 분석을 기반으로 진행된다. 또한 신호처리 모듈의 최적화는 많은 샘플을 바탕으로 진행되는 신경망 최적화와 다르게 즉각적으로 최적 신호 처리 모듈을 얻을 수 있다. 이렇게 즉각적으로 혹은 매우 쉽게 설계가 가능한 신호처리 모듈을 바탕으로, 신경 망의 재학습 없이 새로운 task에 대한 추론을 크게 향상 시킬 수 있다. 본 발명은 새로운 task에 적합한 신호처 리 모듈을 바탕으로 신경망의 추론을 향상시킨다는 점에서 'task-adaptive processing' 이라고 불릴 수 있다. 이하, 도 2를 참조하여 본 발명의 신경망 학습을 통한 데이터 분류 장치의 신경망 학습을 통한 데이터 분류 방법에 대해 기술한다. 본 발명의 신경망 학습을 통한 데이터 분류 장치는 데이터 분류 장치에서 판독 가능한 명령을 실행하도록 구 현되는 프로세서를 포함할 수 있다. 도 2에 도시한 바와 같이, 본 발명에 따른 신경망 학습을 통한 데이터 분류는, 임베딩(embedding) 네트워크 신 경망 , 클래스별 기준 (Reference) 벡터 , 그리고 task 적응형 투영(projection)을 통해 임베딩 네트워크의 피처(feature)들을 새로운 분류 공간으로 맵핑하는 선형 처리 모듈 M을 이용하여 수행될 수 있다. 본 발명에서 임베딩(embedding) 네트워크 신경망 은 Recurrent Neural Network (RNN) 또는 Convolutional Neural Network (CNN)일 수 있으나, 이는 일 실시예에 불과하며 본 발명의 권리범위가 이에 제한되지 않는다. 본 발명에 따른 데이터 분류는 이미지 분류 태스크를 기반으로 예시하였으나, 본 발명의 권리범위는 이에 제한 되지 않는다. 기준 벡터 은 클래스 k의 기준 행 벡터인 를 k번째 행으로 갖는 와 같은 행렬의 형태로 구성된다. M은 투영, 혹은 피처의 매핑을 수행하는 선형 처리 모듈을 뜻하지만, 경우에 따라 투영 공간 그 자 체를 의미할 수도 있다. 도 2는 연속되는 에피소드들의 학습 과정 가운데서 한 에피소드를 학습하는 과정을 도 식화 한 것이다. 하나의 에피소드는 이미지 데이터와 해당 이미지 데이터를 가리키는 라벨(label)의 조합들로 이루어진 서포트 셋(support set ) 및 쿼리 셋 (query set, )을 포함할 수 있다. 예를 들어, 도 2 및 도 3 을 참조하면, 서포트 셋과 쿼리 셋을 와 와 같이 클래스 (class1 내지 class5)당 하나의 이미지 데이터/라벨 쌍으로 구성할 수 있다. 구체적으로, 서포트 셋은 신경망을 통해 처리하는 데이터/라벨 쌍이며, 서포트 셋의 신경망 출력은 투영 공간을 형성하는데 사용된다. 그리고, 쿼리 셋은 에피소드 내에 서포트 셋을 제외한 나머지 데이터/라벨 쌍이며 상기투영 공간에서 분류된다. 단, 본 발명에서는 이미지 데이터를 예시하였으나, 실시예에 따라 텍스트 데이터가 에피소드를 구성하는 것으 로 구현될 수도 있다. 본 발명의 프로세서는 서포트 셋을 이용하여 투영 공간(Projection Space)을 생성하 고, 생성된 투영 공간 상에서 상기 신경망 및 신경망과 함께 학습되는 기준 벡터들을 통해 쿼리 셋을 분류할 수 있다. 결과적으로, 데이터/라벨 쌍이 미리 정의된 서포트 셋의 신경망 출력값을 상기 투영 공간에 대해 투영하 여 상기 태스크 적응형(task-adaptive) 학습이 수행되고, 이로서 경사 기반 알고리즘(gradient descent algorithem) 처리 방식을 이용하지 않고도 기 분류되지 않은 쿼리 셋에 대한 분류를 수행할 수 있게 된다. 참고 로, 경사 기반 알고리즘(gradient descent algorithm) 처리 방식이란, 함수 최적화 기법의 하나로 결함값 (loss) 함수의 기울기를 이용해 결함값이 낮아지는 방향으로 함수의 파라미터를 반복적으로 조정하여 함수를 최 적화하는 방법이다. 또한, 기계학습 분야에서는 신경망의 웨이트(weight) 혹은 학습 대상이 되는 값들을 학습하 는데 이용된다. 경사 기반 알고리즘 학습을 통한 신경망 학습에는 대체로 매우 많은 양의 입력 데이터가 요구된 다. 반면, 본원 발명에서는 상기 경사 기반 알고리즘(gradient descent algorithem) 처리 방식을 이용하지 않고 도 기 분류되지 않은 쿼리 셋에 대한 분류를 수행할 수 있게 되어 연산 복잡도가 감소하게 되는 효과가 있다. 새로운 서포트 셋이 주어졌을 때, 임베딩 네트워크 신경망 와 기준 벡터들인 는 직전까지의 에피소드들을 통 해 학습된 형태로 고정된다. 프로세서는 이 서포트 셋과 임베딩 네트워크 신경망 , 기준 벡터 을 이용하 여, 임베딩 피처 벡터인 들과 해당하는 클래스의 기준 벡터들인 들이 서로 적절하게(adaptively) 배열되 도록 투영 공간 M을 구성할 수 있다. 투영 공간의 구체적인 형성 방법은 아래에서 도 4를 참조하여 자세하게 설 명한다. 그리고, 프로세서는 생성된 투영 공간 상에서 쿼리 셋의 신경망 출력 신호를 투영하여 쿼리 셋의 분류 과정을 수행할 수 있다. 이에 대해서는 도 2 및 도 5를 참조하여 기술한다. 구체적으로, 프로세서는 쿼리 셋의 신경망 출력 신호인 쿼리의 피처 벡터인 이 투영 공간 상에 투영되어 획득된 제1 결과값과 기준 벡터인 이 투영 공간 상에 투영되어 획득된 제2 결과값을 함께 이용하여 쿼리 셋의 투영 공간 상에서의 분류를 수행할 수 있다. 예를 들어, 도 5a에 도시한 바와 같이 쿼리 셋의 클래스 1을 신경망을 통해 출력한 결과값인 이 투영 공 간 상에 투영되고, 이와 함께 이 동일 투영 공간 상에 투영될 수 있다. 그리고, 도 5b에 도시한 바와 같이 쿼리 셋의 클래스 2를 신경망을 통해 출력한 결과값인 이 투영 공간 상에 투영되고, 이와 함께 이 동일 투영 공간 상에 투영될 수 있다. 이러한 과정이 쿼리 셋의 모든 클래스에 대해 반복 수행되면 도 5c와 같은 결과를 출력할 수 있다. 이 때, 임베딩 네트워크 신경망 와 기준 벡터들인 는, 상기 에피소드에 대한 분류를 반복적으로 수행하는 과 정에서 업데이트될 수 있다. 예를 들어, 쿼리의 피처 벡터인 과 기준 벡터인 사이의 거리 차이인 Euclidean 거리 를 이용해 softmax loss를 통해 업데이트 될 수 있다. 즉, 쿼리의 피처 벡터인 및 쿼리의 피처 벡터인 과 가장 가까운(closest) 기준 벡터를 기초로 투영 공간 상에서의 분류가 수행되는 과정에서 신경망과 기준벡터가 업데이트되는 것이다. …… 수학식 1 상기 거리 차이의 softmax 값은 수학식 1에서와 같이 표현될 수 있고, 이를 기반으로 얻을 수 있는 결함값 (loss)를 쿼리 셋 전체에 대해 구하여 평균을 내어 학습에 이용할 수 있다. 위의 수학식 1에서, 는 행 벡터 를 투영 공간 에 투영한 결과를 의미하며, 임베딩 피처 벡터인 를 포함한 모든 벡터는 행 벡터의 형태로 가정한다. 결함값(Loss)를 통해 업데이트된 임베딩 네트워크 신경망 와 기준 벡터들인 는 다시 다음 에피소드 학습 단계로 전달되고, 투영 공간의 형성과 파라미터의 업데이트는 모든 학습 에피소드를 사용할 때까지 반 복된다. 정리하면, 임베딩 네트워크 신경망 와 기준 벡터들 는 다양한 에피소드, 혹은 task를 거치며 느린 속도로 학 습이 이루어 지고, 투영 공간 M은 특정 task에 적합한 형태로 형성되어 빠르게 task에 적합한 조건화 (conditioning)을 제공한다. 이와 같은 서로 다른 속도로 학습되는 요소들의 조합은 새로운 분류 task에 대해 잘 적응할 수 있는 능력을 가지며, 이는 다양한 실험 결과를 통해 검증할 수 있다. 이하, 도 2 및 도 4를 참조하여 본 발명에 따른 투영 공간 생성 방법에 대해 기술한다. 본 발명에서 투영 공간은 신경망 출력 결과인 임베딩 피처 벡터 를 이용하여 생성되는 임베딩 공간과 다른 상기 임베딩 피처 벡터 들의 평균 벡터 와 기준 벡터 를 이용하여 생성된 새로운 공간으로 정의할 수 있 다. 즉, 투영 공간은 신경망 출력 결과를 이용하여 1차적으로 생성된 임베딩 공간과 다른, 상기 임베딩 공간과 상기 신경망 출력 결과를 이용하여 2차적으로 생성된 새로운 공간으로 정의할 수 있다. 또한, 상기 투영 공간은 신경망 출력 결과에 기초하여 형성된 선형 처리 모듈(linear processing module)일 수 있다. 매핑 함수, 혹은 투영 공간 M을 형성하는 과정은 태스크(task)의 임베딩 피처 벡터 들과 기준 벡터 사이 의 정렬 상의 오류(misalignment)를 제거하는 것을 기반으로 한다. 본 발명에서 태스크란 트래이닝 과정 상의 에피소드들의 다른 표현으로 정의된다. 클래스별로 복수의 이미지를 사용하는 일반적인 경우까지 포함하기 위하 여, 서포트 셋에 포함된 클래스 k의 이미지들을 신경망으로 처리한 임베딩 피처 벡터 들의 평균 벡터를 로 나타낼 수 있다. 본 발명에 따른 투영 공간은 도 2에서 전술한 바와 같이 서포트 셋, 임베딩 네트워크 신경망 및 기준 벡터들 인 을 이용하여 생성될 수 있다. 우선, 프로세서는 도 4a 내지 도 4c에 도시한 바와 같이, 서포트 셋 및 임베딩 네트워크 신경망 을 이용 하여 임베딩 피처 벡터 와 임베딩 피처 벡터 들의 평균 벡터 를 클래스마다 추출할 수 있다. 도 4a 와 같이 서포트 셋의 클래스 1에 포함되는 이미지들 각각의 임베딩 네트워크 신경망 을 통한 학습 수행 결과인 들과 함께 이들의 평균 벡터인 c1을 획득할 수 있다. 그리고, 4b와 같이 서포트 셋의 클래스 2에 포함되 는 이미지들 각각의 임베딩 네트워크 신경망 을 통한 학습 수행 결과인 들과 함께 이들의 평균 벡터인 c2를 획득할 수 있다. 이러한 과정을 서포트 셋에 포함된 모든 클래스들에 대하여 반복 수행하면 도 4c와 같은 모든 클래스들(class 1 내지 class 5)에 대응하는 각각의 임베딩 피처 벡터 들과 이들의 평균 벡터들인 (c1 내지 c5)를 획득할 수 있다. 프로세서는 도 4d 내지 도 4f에 도시한 바와 같이, 각각의 평균 벡터 에 대응하는 각각의 기준 벡터 사 이의 차이인 오류 벡터 가 0(null)이 되도록 투영 공간을 구성할 수 있다. 구체적으로, 투영 공간에서 정확 한 분류가 이루어지기 위해서는 평균 벡터 와 기준 벡터 가 서로 가깝게(closely) 정렬된 투영 공간 M을 구 성할 수 있다. 실시예에 따라, 상기 투영 공간에서, 각각의 평균 벡터 와 상기 평균 벡터 에 각각 대응하는 기준 벡터 들이 서로 가깝게 정렬될 수 있다. 이와 동시에, 평균 벡터 와 다른 클래스들에 해당하는 다른 기 준 벡터 들이 투영 공간 상에서 잘 분리되면 더 정확한 분류를 수행할 수 있다. 이러한 투영 공간은 학습이 아닌 간단한 선형 처리를 통하여 효율적으로 구성할 수 있다. 도 4e 및 도 4f를 참조하면, 프로세서는 평균 벡터 와 변형된 기준 벡터 가 정렬되는 투영 공간을 아 래 수학식 2 및 수학식 3을이용하여 구성할 수 있다.… 수학식 2 … 수학식 3 참고로, 수학식 2에서 Nc는 클래스들의 개수를 의미한다. 즉, 수학식 3과 같이 정의된 변형된 기준 벡터"}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "에서 평균 벡터 를 차감하여 추출된 오류 벡터 를 이용하여, 투영된 오류 벡터인 이 모든 클래스 k 각각에 대해 0이 되도록 투영 공간 M을 구성하는 것을 의미한다. 이 때, 투영 공간 M은 각각의 컬럼들이 span 하여 투영 공간을 형성하는 행렬을 의미한다. 이는 곧, 오류 벡터 들을 nulling 함으로써 투영 공간 M을 구성 한다는 것이다. 예를 들어, 행렬 M은 으로 나타낼 수 있고, 이때 D는 M의 열 차원 을 의미한다. 본 발명에서는, 오류 벡터들의 행렬 의 특이값 분해 (singular value decomposition, SVD)를 이용하여, 행렬의 우측 특이 벡터들 (Right singular vectors)로부터 부터 까지의 D개의 벡터들을 선택함으로써 투영 공간을 구성할 수 있다. 오류 벡터의 길이인 L이 클래스의 수 보다 크고, D가 보다 작을 경우, 위와 같이 D 차원을 갖는 투영 공간 M은 항상 존재한다. 이때, 투영 공간의 차원 D는 보다 작게 설정할 수 있고, 이를 통해 투영공간의 차원을 축소할 수 있다. 실 험을 통해, 일부 특정한 경우에서 이러한 차원의 축소가 few-shot 분류의 정확도를 높이는 결과가 관찰된 바 있 다. 연산 복잡도의 측면에서, 인 크기의 행렬의 특이 값 분해의 복잡도는 이다. 따라서, 본 발명의 투영 공간 형성에 필요한 연산 복잡도는 일 수 있으며, 이는 일반적인 모델의 복잡도보다 상대적 으로 작은 값이다. 또한, 신경망의 평균 벡터와 기준 벡터 사이의 조합이 새로운 투영 공간에서 이루어지기 때문에, 기준 벡터"}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "들은 에피소드의 변화에 따라 상이하게 라벨을 붙여 사용할 필요가 없고, 고정된 라벨이 각각의 기준 벡터에 붙 여진 상태로 에피소드 학습이 이루어 지도록 할 수 있다. 이하에서는, 본 발명의 TapNet의 메모리 결합 신경망과의 연관성에 대해 기술한다. 본 발명의 TapNet은 Matching 네트워크나 Prototypical 네트워크와 마찬가지로 거리 기반의 메타학습 알고리즘 이지만, 보다 이전의 외부 메모리(미도시)를 이용해 새로운 태스크(task)에 빠르게 적응하는 메모리 결합 신경 망 알고리즘과 유사성을 갖는다. 메모리 결합 신경망의 외부 메모리 는 컨트롤러에서 얻어진 에피소드에 대한 정보를 저장하는 행렬의 형태를 갖는다. 메모리의 읽기 결과 벡터인 r은 과 같이 외부 메모리의 컬럼의 선형 조합으로 이루어져 있다. 이때, 읽기 가중치인 은 하기 수학식 4와 같이 외부 메모리의 i번째 컬 럼과 컨트롤러 신경망의 출력, 또는 키 벡터인 k 사이의 코사인 유사도에 비례한다."}
{"patent_id": "10-2019-0051364", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "… 수학식 4 이 때, exponential 함수를 선형 함수로 와 같이 근사하고, 클래스와 무관한 상수를 생략하면, 읽기 가중치의 벡터는 와 같이 근사할 수 있고, 읽기 결과 벡터는 로 근사할 수 있다. 최종 분류 과정에서, 메모리 읽기 결과 벡터는 클래스별 가중치의 행렬 와 곱하여 이 값을 분류에 사용하고, 이때의 결과는 와 같이 근사할 수 있다. 메모리 결합 신경망에서는 추론 과정에서 컨트롤러 신경망으로 이용되는 LSTM(Long Short-Term Memory)의 출력 을 함께 사용하지만, 메모리의 정보를 활용하는 메모리 읽기 결과 벡터로부터의 추론 결과에 집중하였을 때, 메 모리 결합 신경망은 가중치 행렬 W와 메모리 읽기 결과 r의 유사도를 바탕으로 추론을 내리는 것을 확인할 수 있다. 본 발명의 TapNet의 경우, 만일 Euclidean 거리 대신 코사인 유사도를 사용한다면, 쿼리 데이터와 기준 가중치 사이의 거리는 와 같이 나타낼 수 있고, 이는 메모리 결합 신경망의 행렬 W와 메모리 읽기 결과 r 사이의 유사도와 같은 형태를 보인다. 이 때, 메모리 결합 신경망의 행렬 W는 TapNet의 행렬 와, 메모 리 결합 신경망의 키 벡터 k는 TapNet의 임베딩 신경망 출력과 같은 역할을 수행한다. 흥미롭게도, 이와 같은 유사성을 통해 메모리 결합 신경망의 외부 메모리 의 역할은 일종의 task에 적합한 투영 공간의 역할을 제공 하는 것이고, 메모리 결합 신경망은 이 투영 공간 위에서의 가중치 W와 쿼리 데이터의 신경망 출력 k 간의 유사 성을 바탕으로 추론을 수행한다는 것을 확인할 수 있다. 이하, 도 8을 참조하여 본 발명에 따른 알고리즘을 기술한다. TapNet의 임베딩 신경망 와 기준(Reference) 벡터 는 에피소드 학습을 통해 학습된다. 구체적인 학습 방 법은 도 8에 표시되어 있다. 각 학습 에피소드는 트레이닝 데이터 셋으로부터 개의 클래스를 임의로 선택하여 구성될 수 있다. 프로세서 는 에피소드 내의 각 클래스에 대해서, 개의 라벨이 붙여진 임의의 샘플들이 서포트 셋 를 구성하고, 개의 샘플들이 쿼리 셋 를 형성한다. 이때, 쿼리 셋과 서포트 셋에 겹치는 샘플들이 없도록 구성한다. 서 포트 셋 로부터, 평균 벡터 를 각 클래스 별로 계산한다 (알고리즘 5번째 줄). 이 클래스 별 평균 출력 벡터 들을 이용해, 각 클래스 별로 오류(error) 벡터를 계산한다 (알고리즘 6번째 줄). 이 때, 기준 벡터들의 재 라 벨링은 이루어지지 않는다. 투영(Projection) 공간 M은 이 오류 벡터들의 널 공간(null-space)로 얻는다. 각각 의 쿼리 데이터는 신경망으로 처리한 후 투영 공간 M 위에 투영하고, 투영 공간 위에서 쿼리 데이터와 기준 벡 터들과의 거리를 Euclidean 거리를 이용해 측정한다. 학습 결합(loss)는 이 쿼리와 기준 벡터 사이의 거리를 이 용해 계산한다. 평균 학습 loss는 개 클래스들의 개 쿼리들로부터 얻어진 loss의 평균으로 계산된다 (알고리 즘 11~14번째 줄). 프로세서는 임베딩 신경망의 파라미터 와 기준 벡터 을 평균 학습 결합(loss)를 이 용해 업데이트 한다. 이 에피소드 학습 과정이 매번 새로운 클래스와 쿼리로 구성된 학습 에피소드 전체를 거쳐 반복된다. 이하, 본 발명의 성능을 입증하는 실험 결과에 대해 기술한다. 1. 실험 데이터 셋의 제1 예: Omniglot Omniglot은 다양한 언어의 문자들을 손으로 쓴 이미지로 구성된 데이터셋이다. 이 데이터셋은 50 종류의 언어에 포함된 1623 종류의 문자들을 담고 있으며, 각 문자당 20개씩의 이미지로 구성되어 있다. 실험에서는 28*28 크 기로 축소한 grayscale 이미지를 사용하며, 선행 연구들과 마찬가지로 90도 단위의 회전을 통해 class 수준의 데이터 증강 기법을 적용하였다. 2. 실험 데이터 셋의 제2 예: miniImageNet miniImageNet은 Vinyal 등의 연구진에 의해 제안된 데이터셋으로, ILSVRC-12 ImageNet의 부분 데이터셋이다. miniImageNet은 ImageNet 데이터셋 중 100개의 클래스와, 클래스당 600개의 이미지로 구성되어 있다. Ravi와 Larochelle이 제안한 방식으로 데이터셋을 구성하였으며, 실험에서는 84*84의 크기로 축소된 컬러 이미지를 사 용하였다. 데이터셋은 64개의 training 클래스, 16개의 validation 클래스, 20개의 test 클래스로 나누어 실험 하였다. 3. 실험 데이터 셋의 제3 예: tieredImageNet tieredImageNet은 Ren 등의 연구진에 의해 제안된 데이터셋으로, miniImageNet보다 큰 ImageNet의 부분 데이터 셋이다. tieredImageNet은 608개의 클래스와 총 779,165개의 이미지로 구성되어 있다. tieredImageNet의 클래 스들은 클래스간 유사성에 따라 34개의 상위 카테고리로 분류되어 있으며, 34개의 카테고리는 각각 20개의 training 카테고리, 6개의 validation 카테고리, 8개의 test 카테고리로 나누어 진다. 그에 따라 데이터셋은 351개의 training 클래스, 97개의 validation 클래스, 160개의 test 클래스로 나누어지며, 서로 다른 카테고리 의 training과 test 데이터를 사용하기 때문에 miniImageNet에 비해 보다 현실적인 분류 상황을 다룬다. 4. 본 발명의 실험 셋팅 본 발명의 모든 실험에서 ResNet-12 구조의 신경망을 사용해 성능을 측정하였다. ResNet-12는 4개의 residual 블록으로 구성되어 있고, 각 블록은 3개의 3x3 컨벌루션 계층과 컨벌루션 shortcut 계층으로 이루어져 있다. 각 컨벌루션 계층의 출력은 배치 표준화 (batch normalization) 과 ReLU activation 함수로 연결된다. 각 블록의 출력은 2x2 max pooling에 의해 축소된다. 모든 Residual 블록으로 처리한 최종 출력 신호는 global average pooling에 의해 다시 한번 압축된다. 신경망의 구조는 모든 실험에 대해 동일하지만, 3가지의 분류 문제에 대해 서 Residual 블록의 채널 개수를 다르게 설정하여 실험하였다. miniImageNet과 tieredImageNet 실험에서는 채 널 개수를 64개로 시작하여, Max pooling을 적용할 때마다 채널의 개수를 2배로 증가시켰다. Omniglot 실험에서 는 다른 실험과 마찬가지로 64개 채널로 시작하여 Max pooling을 적용할 때마다 증가시키지만, 다른 실험에 비 해 적게 증가시켜 상대적으로 작은 크기의 신경망을 사용한다. 신경망 학습을 위해서 최적화된 learning rate와 함께 Adam 최적화를 사용하였다. 모든 실험에서 초기 learning rate는 이다. Omniglot 실험에서는 4만 에피소드마다 learning rate를 절반으로 감소시켜 사용하였고, miniImageNet 실험에서는 1shot에서는 2만, 5shot에서는 4만 에피소드마다 learning rate를 10분의 1로 감소시 켰다. 또한 tieredImageNet 실험에서는 1shot에서는 4만, 5shot에서는 3만 에피소드마다 learning rate를 10분 의 1로 감소시켰다. 신경망의 메타 학습에서, 선행 연구인 Prototypical Network에서 사용된 높은 way의 학습을 적용하였다. 20-way Omniglot 실험에서는 60개 클래스로 구성된 에피소드를, 5-way miniImageNet과 tieredImageNet 실험에서는 20 개 클래스로 구성된 에피소드를 학습에 사용하였다. 학습과 테스트의 클래스 수가 다르기 때문에 테스트 과정에 서 Omniglot 실험에서는 60개중 20개, ImageNet 실험에서는 20개중 5개의 기준(reference) 벡터를 선택해야 하 고, 이 과정에서 각 클래스에 새롭게 label이 붙여진다. 각 클래스별 평균 신경망 출력들에 대해, 가장 가까운 기준 벡터에 해당하는 클래스의 label이 붙여진다. 평균 신경망 출력과 기준 벡터 사이의 거리는 Euclidean 거 리를 이용해 측정된다. 기준 벡터에 다시 label을 붙인 후, Few-shot 학습을 위한 투영 (projection) 공간 M을 새롭게 얻는다. 20way Omniglot 분류 실험에서는 각 클래스당 15개의 쿼리 이미지로 구성된 10만개의 학습 에피소드를 이용해 학습을 진행하였고, 5-way miniImageNet과 5-way tieredImageNet 분류 실험에서는 각 클래스당 8개의 쿼리 이 미지로 구성된 5만개의 학습 에피소드를 이용해 학습을 진행하였다. 모든 실험에서, 메타 학습 진행 과정에서 가장 높은 validation 정확도를 갖는 모델을 저장하여 테스트에 사용하였다. 5. 본 발명의 성능 결과 도 6에 도시한 Table 1과 Table2는 제안한 TapNet 메타 학습 알고리즘의 few-shot 분류 정확도 결과이다. Matching Network, MAML, Prototypical Network, TADAM 등의 선행 기술들과 본 발명의 분류 성능을 Omniglot, miniImageNet, tieredImageNet 데이터셋을 이용하여 비교하였다. Omniglot 실험의 분류 성능은 클래스당 5개의 쿼리로 이루어진 1만개의 테스트 에피소드를 이용해 측정한 평균 정확도로 나타내었고, miniImageNet과 tieredImageNet 실험의 분류 성능은 클래스당 15개의 쿼리 이미지로 이루어진 3만개의 테스트 에피소드를 이용 해 측정한 평균 정확도와 95% 신뢰 구간으로 나타내었다. Table 1의 20-way Omniglot 분류에서, TapNet은 1-shot과 5-shot 분류 모두에서 최고의 성능을 보였다. 5-way miniImageNet 분류 실험에서, TapNet은 1-shot에서 최고의 성능을 보였고, 5-shot에서 TADAM의 최고 성능과 신 뢰 구간이 겹쳐 비슷한 수준의 성능을 보였다. TADAM-α는 task 조건화(conditioning)을 사용하지 않고, Prototypical Network의 방식과 TapNet에서 사용한 것과 동일한 ResNet-12 기반의 구조를 이용한 모델로, TapNet과 비슷한 수준의 학습 복잡도를 사용한 모델이다. TapNet은 TADAM-α 보다 높은 성능을 보이며, TapNet보다 높은 성능을 보이는 TADAM-TC는 task 조건화를 위해 추가적인 fully-connected 계층을 사용한다. Table 2의 tieredImageNet 실험에서, 제안한 TapNet 알고리즘의 분류 성능을 Liu 등의 연구자들이 실험한 선행 기술의 분류 성능과 비교하였다. 비교 결과, TapNet이 1-shot과 5-shot 실험 모두에서 선행 기술과 상당한 차이 로 최고의 성능을 보였다. 6. 본 발명에 대한 t-SNE 분석결과 도 7은 Omniglot 데이터셋으로 학습한 TapNet의 신경망 임베딩 공간과 투영 공간을 t-SNE를 이용해 도식화 한 것이다. 각 클래스 데이터들은 클래스의 문자 이미지로 표현하였고, 기준 벡터는 원 안의 문자 이미지로 표현하 였다. 임베딩 공간에서 클래스 이미지들과 해당하는 기준 벡터는 서로 가깝게 위치해 있지 않지만, 투영 공간에 서는 같은 클래스의 데이터들과 문자 이미지들이 가깝게 위치하는 것을 확인할 수 있다. 또한, 투영된 이미지들 은 단순히 해당하는 기준 벡터와 가깝게 위치하는 것이 아니라, 다른 클래스의 기준 벡터들로부터 먼 곳에 위치 하는 경향을 보인다. 결과적으로, 투영 공간 상의 투영을 통해 동일 클래스의 데이터들은 동일 기준 벡터를 기 준으로 서로 가깝게 위치하며, 다른 클래스의 데이터들과는 서로 멀게 위치하여 분류 성능이 향상된 것을 알 수 있다. 이러한 클래스 데이터간의 분리는 투영 공간 형성 과정에서 원래의 기준 벡터 대신 를 사용하여 null space를 계산해 투영 공간 M을 형성했기 때문인 것이다. 결과적으로, 본 발명에서 신경망의 출력에 task에 최적화된 null 공간 투영을 수행하는 선형 신호처리 모듈을 이용한 메타 학습 알고리즘을 제안하였다. 원래의 feature 공간의 신호들은 실제 분류가 진행되는 다른 공간으 로 선형 투영되어 사용된다. 임베딩 신경망과 클래스별 기준 벡터들은 전체 에피소드를 통틀어 학습되며, 투영 공간은 주어진 에피소드 에 적합하게 형성된다. 신경망과 투영 공간의 결합은 새로운 과제 (task) 에 대해 뛰어 난 적응 능력을 보인다. 다양한 few-shot 분류 데이터셋들에 대해서, 제안하는 메타 학습 알고리즘이 최고 수준 의 성능을 보이는 것을 확인하였다. 또한, 메모리 결합 신경망 등의 다른 거리 기반의 메타 학습 알고리즘들과 제안하는 TapNet사이의 관계도 함께 연구되었다. 이상 설명된 실시 형태는 다양한 컴퓨터 구성요소를 통하여 실행될 수 있는 프로그램 명령어의 형태로 구현되어 컴퓨터로 판독가능한 기록매체에 기록될 수 있다. 상기 컴퓨터로 판독가능한 기록매체는 프로그램 명령어, 데이 터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 컴퓨터로 판독가능한 기록매체에 기 록되는 프로그램 명령어는 본 발명을 위하여 특별히 설계되고 구성된 것들이거나 컴퓨터 소프트웨어 분야의 당 업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터로 판독가능한 기록매체의 예에는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM, DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk) 와 같은 자기-광 매체(magneto-optical media), 및 ROM, RAM, 플래시 메모리 등과 같은 프로그램 명령어를 저 장하고 실행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령어의 예에는, 컴파일러에 의해 만들 어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언 어 코드도 포함된다. 상기 하드웨어 장치는 본 발명에 따른 처리를 실행하기 위해 하나 이상의 소프트웨어 모듈 로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다. 본 명세서의 양상들은 전체적으로 하드웨어, 전체적 으로 소프트웨어 (펌웨어, 상주 소프트웨어, 마이크로 코드 등을 포함 함) 또는 컴퓨터 판독 가능 프로그램 코 드가 구현 된 하나 이상의 컴퓨터 판독 가능 매체에 구현 된 컴퓨터 프로그램 제품의 형태를 취할 수 있다. 이상에서 실시예들에 설명된 특징, 구조, 효과 등은 본 발명의 하나의 실시예에 포함되며, 반드시 하나의 실시 예에만 한정되는 것은 아니다. 나아가, 각 실시예에서 예시된 특징, 구조, 효과 등은 실시예들이 속하는 분야의 통상의 지식을 가지는 자에 의해 다른 실시예들에 대해서도 조합 또는 변형되어 실시 가능하다. 따라서 이러한 조합과 변형에 관계된 내용들은 본 발명의 범위에 포함되는 것으로 해석되어야 할 것이다. 또한, 이상에서 실시예를 중심으로 설명하였으나 이는 단지 예시일 뿐 본 발명을 한정하는 것이 아니며, 본 발 명이 속하는 분야의 통상의 지식을 가진 자라면 본 실시예의 본질적인 특성을 벗어나지 않는 범위에서 이상에 예시되지 않은 여러 가지의 변형과 응용이 가능함을 알 수 있을 것이다. 예를 들어, 실시예에 구체적으로 나타 난 각 구성 요소는 변형하여 실시할 수 있는 것이다. 그리고 이러한 변형과 응용에 관계된 차이점들은 첨부된 청구 범위에서 규정하는 본 발명의 범위에 포함되는 것으로 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4a 도면4b 도면4c 도면4d 도면4e 도면4f 도면5a 도면5b 도면5c 도면6 도면7 도면8"}
{"patent_id": "10-2019-0051364", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 메타학습기를 학습하기 위한 학습 과정을 보여주는 도면이다. 도 2는 본 발명의 신경망 학습을 통한 데이터 분류 장치의 신경망 학습을 통한 데이터 분류 방법를 나타내는 도면이다. 도 3은 본 발명의 서포트 셋과 쿼리 셋을 설명하기 위해 참조되는 도면이다. 도 4a 내지 도 4f는 본 발명에 따른 투영 공간 형성 방법을 설명하기 위해 참조되는 도면이다. 도 5a 내지 도 5c는 본 발명에 따른 투영 공간 상에서 쿼리 셋을 분류하는 과정을 설명하기 위해 참조되는 도면 이다. 도 6은 본 발명에 따른 데이터 분류 정확도 결과와 관련된 실험 데이터이다.도 7은 본 발명에 따른 Omniglot 데이터셋으로 학습한 TapNet의 신경망 임베딩 공간과 투영 공간을 t-SNE를 이 용해 도식화 한 것이다. 도 8은 본 발명에 따른 알고리즘을 도식화한 것이다."}
