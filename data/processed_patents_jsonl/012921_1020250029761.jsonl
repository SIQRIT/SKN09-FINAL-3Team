{"patent_id": "10-2025-0029761", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0041108", "출원번호": "10-2025-0029761", "발명의 명칭": "행렬 곱셈 데이터의 처리 방법, 장치, 전자 기기, 저장 매체 및 컴퓨터 프로그램", "출원인": "쿤룬신 테크놀로지", "발명자": "가오 다헝"}}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세서가 수행하는 행렬 곱셈 데이터의 처리 방법으로서,행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하되, 상기 I개의 행렬 조합 중 각 행렬 조합이 제1 행렬 및 제2 행렬을 포함하며, 상기 제1 행렬은 제1 저장 공간에 대응하며, 상기 제2 행렬은 제2 저장공간에 대응하며, I는 1보다 크거나 같은 정수이고; 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하되, 상기 제1 목표 서브 규모정보는 상기 제1 행렬 및 상기 제2 행렬과 관련되고; 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하되, 상기 제2 목표 서브 규모 정보는 상기 제1 행렬 및 제3 행렬과 관련되며, 상기 제3 행렬은 상기 행렬 곱셈 동작에 대응하고; 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하고; 및 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하되, 상기 목표 행렬 조합에 대응하는 액세스 리소스오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제1 행렬의 규모 정보는 상기 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하며, 상기 제2 행렬의 규모 정보는 상기 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함하며, 상기 제1 목표 서브 규모 정보는 제1 목표 서브 규모 값을 포함하며, 상기 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함하는, 행렬 곱셈데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하는 것은, 상기 제2 저장 공간의 용량과 상기 제2 초기 서브 규모 값 사이의 비율에 따라, 상기 제1 목표 서브 규모 값을결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서, 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하는 것은, 상기 제1 저장 공간의 용량과 상기 제1 목표 서브 규모 값 사이의 비율에 따라, 상기 제2 목표 서브 규모 값을결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2025-0041108-3-제2항에 있어서, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하는 것은, 상기 제1 초기 서브 규모 값과 상기 제2 목표 서브 규모 값 사이의 비율에 따라, 상기 목표 분할 정보를 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장되며, 상기 적어도 2개의 레벨의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것은, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것; 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 대역폭 정보는 상기 계산 유닛과 저장 유닛 사이의 메모리 대역폭 및 멀티 레벨의 캐시 유닛 사이의 적어도 하나의 캐시 대역폭을 포함하고, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하는 것; 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소스 오버헤드를 결정하는 것으로서, 상기 목표 서브 데이터량은 상기 제3 행렬이 목표 캐시 유닛에 저장되는 데이터량이며, 상기 목표 캐시 유닛은 상기 멀티 레벨의 캐시 유닛 중 상기 멀티 레벨의 캐시 유닛 중의 제1 캐시유닛 이외의 캐시 유닛인, 상기 제2 액세스 시간 리소스 오버헤드를 결정하는 것;상기 제1 액세스 시간 리소스 오버헤드 및 상기 제2 액세스 시간 리소스 오버헤드에 따라, 상기 행렬 조합의 액세스 리소스 오버헤드를 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하는 것은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량 및 상기 제3 행렬의 데이터량에 따라, 총 데이터량을 결정하는 것; 공개특허 10-2025-0041108-4-상기 총 데이터량과 상기 메모리 대역폭 사이의 비율에 따라, 상기 제1 액세스 시간 리소스 오버헤드를 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서, 상기 목표 분할 정보는 목표 분할 매개 변수 값을 포함하고, 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소스 오버헤드를 결정하는 것은, 상기 제3 행렬의 목표 서브 데이터량과 상기 캐시 대역폭 사이의 비율에 따라, 서브 액세스 시간 리소스 오버헤드를 결정하는 것;상기 서브 액세스 시간 리소스 오버헤드와 상기 목표 분할 매개 변수 값 사이의 곱에 따라, 상기 제2 액세스 시간 리소스 오버헤드를 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 상기 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 상기 행렬 곱셈 동작을수행하는 것을, 또한 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서, 상기 미리 설정된 액세스 리소스 오버헤드 조건은, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작거나 같은 것; 및 상기 I개의 행렬 조합 중 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것중 적어도 하나를 포함하는, 행렬 곱셈 데이터의 처리 방법."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "행렬 곱셈 데이터의 처리 장치로서,행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하기 위해 사용되는 제1 결정 모듈로서, 상기 I개의 행렬 조합 중 각 행렬 조합이 제1 행렬 및 제2 행렬을 포함하며, 상기 제1 행렬은 제1 저장 공간에 대응하며, 상기 제2 행렬은 제2 저장 공간에 대응하며, I는 1보다 크거나 같은 정수인 제1 결정 모듈; 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하기 위해 사용되는 제2 결정 모듈로서, 상기 제1 목표 서브 규모 정보는 상기 제1 행렬 및 상기 제2 행렬과 관련되는 제2 결정 모듈; 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하기 위해 사용되는 제3 결정 모듈로서, 상기 제2 목표 서브 규모 정보는 상기 제1 행렬 및 제3 행렬과 관련되며, 상기 제3 행렬은 상기 행렬 곱셈 동작에 대응하는 제3 결정 모듈; 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하기 위해 사용되는 제4 결정 모듈; 및상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에공개특허 10-2025-0041108-5-따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용되는 제5 결정 모듈로서, 상기 목표 행렬조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하는 제5 결정 모듈을 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서, 상기 제1 행렬의 규모 정보는 상기 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하며, 상기 제2 행렬의 규모 정보는 상기 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함하며, 상기 제1 목표 서브 규모 정보는 제1 목표 서브 규모 값을 포함하며, 상기 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함하는, 행렬 곱셈데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 제2 결정 모듈은 또한 상기 제2 저장 공간의 용량과 상기 제2 초기 서브 규모 값 사이의 비율에 따라, 상기 제1 목표 서브 규모 값을결정하기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서, 상기 제3 결정 모듈은 또한 상기 제1 저장 공간의 용량과 상기 제1 목표 서브 규모 값 사이의 비율에 따라, 상기 제2 목표 서브 규모 값을결정하기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제14항에 있어서, 상기 제4 결정 모듈은 또한 상기 제1 초기 서브 규모 값과 상기 제2 목표 서브 규모 값 사이의 비율에 따라, 상기 목표 분할 정보를 결정하기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서, 상기 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장되며, 상기 적어도 2개의 레벨의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제13항에 있어서, 상기 제5 결정 모듈은, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하기 위해 사용되는 제1 결정 서브 모듈; 및상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용되는 제2 결정 서브 모듈을, 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 공개특허 10-2025-0041108-6-상기 대역폭 정보는 상기 계산 유닛과 저장 유닛 사이의 메모리 대역폭 및 멀티 레벨의 캐시 유닛 사이의 적어도 하나의 캐시 대역폭을 포함하고, 상기 제1 결정 서브 모듈은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제1 결정 유닛; 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제2 결정 유닛로서, 상기 목표 서브 데이터량은 상기 제3 행렬이 목표캐시 유닛에 저장되는 데이터량이며, 상기 목표 캐시 유닛은 상기 멀티 레벨의 캐시 유닛 중 상기 멀티 레벨의캐시 유닛 중의 제1 캐시 유닛 이외의 캐시 유닛인 제2 결정 유닛; 및 상기 제1 액세스 시간 리소스 오버헤드 및 상기 제2 액세스 시간 리소스 오버헤드에 따라, 상기 행렬 조합의 액세스 리소스 오버헤드를 결정하기 위해 사용되는 제3 결정 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제20항에 있어서, 상기 제1 결정 유닛은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량 및 상기 제3 행렬의 데이터량에 따라, 총 데이터량을 결정하기 위해 사용되는 제1 결정 서브 유닛; 및 상기 총 데이터량과 상기 메모리 대역폭 사이의 비율에 따라, 상기 제1 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제2 결정 서브 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제20항에 있어서, 상기 목표 분할 정보는 목표 분할 매개 변수 값을 포함하고, 상기 제2 결정 유닛은, 상기 제3 행렬의 목표 서브 데이터량과 상기 캐시 대역폭 사이의 비율에 따라, 서브 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제3 결정 서브 유닛; 및 상기 서브 액세스 시간 리소스 오버헤드와 상기 목표 분할 매개 변수 값 사이의 곱에 따라, 상기 제2 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제4 결정 서브 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제13항에 있어서, 상기 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 상기 행렬 곱셈 동작을수행하기 위해 사용되는 수행 모듈을 또한 포함하는, 행렬 곱셈 데이터의 처리 장치."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제13항에 있어서, 상기 미리 설정된 액세스 리소스 오버헤드 조건은, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작거나 같은 것; 및 상기 I개의 행렬 조합 중 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것중 적어도 하나를 포함하는, 행렬 곱셈 데이터의 처리 장치.공개특허 10-2025-0041108-7-청구항 25 제13항 내지 제24항 중 어느 하나의 행렬 곱셈 데이터의 처리 장치를 포함하는 전자 기기."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "적어도 하나의 프로세서; 및상기 적어도 하나의 프로세서와 통신 연결되는 메모리를 포함하고, 상기 메모리는 상기 적어도 하나의 프로세서에 의해 수행 가능한 명령어를 저장하며, 상기 명령어가 상기 적어도 하나의 프로세서에 의해 수행되어, 상기 적어도 하나의 프로세서가 제1항 내지 제12항 중 어느 하나의 행렬곱셈 데이터의 처리 방법을 수행 가능하게 하는 전자 기기."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "상기 컴퓨터로 하여금 제1항 내지 제12항 중 어느 하나의 행렬 곱셈 데이터의 처리 방법을 수행하기 위해 사용되는 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2025-0029761", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "컴퓨터 판독 가능 저장 매체에 저장되어 있는 컴퓨터 프로그램으로서,프로세서에 의해 수행될 때 제1항 내지 제12항 중 어느 하나의 행렬 곱셈 데이터의 처리 방법을 구현하는 컴퓨터 프로그램을 포함하는, 컴퓨터 프로그램."}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 행렬 곱셈 데이터의 처리 방법, 행렬 곱셈 데이터의 처리 장치, 전자 기기, 저장 매체 및 컴퓨터 프로 그램을 제공하고, 인공 지능"}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것으로서, 특히 칩 기술 분야에 관한 것이다. 이 방법은, I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저장 공간의 용량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하고; I개의 행렬 조합 각각의 제1 저장 공간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하고; I 개의 행렬 조합 각각의 제2 목표 서브 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정하고; 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것을 포함한다. 대 표 도 - 도2"}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2025-0041108 CPC특허분류 G06N 3/063 (2013.01) 발명자 펑 첸 중국 베이징 100101 하이디엔 디스트릭트 샹디 10 번가 넘버 10 빌딩 1 4층 씨더블유 섹션리 위펑 중국 베이징 100101 하이디엔 디스트릭트 샹디 10 번가 넘버 10 빌딩 1 4층 씨더블유 섹션명 세 서 청구범위 청구항 1 프로세서가 수행하는 행렬 곱셈 데이터의 처리 방법으로서, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하되, 상기 I개의 행렬 조합 중 각 행렬 조 합이 제1 행렬 및 제2 행렬을 포함하며, 상기 제1 행렬은 제1 저장 공간에 대응하며, 상기 제2 행렬은 제2 저장 공간에 대응하며, I는 1보다 크거나 같은 정수이고; 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간 의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하되, 상기 제1 목표 서브 규모 정보는 상기 제1 행렬 및 상기 제2 행렬과 관련되고; 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하되, 상기 제2 목표 서브 규모 정 보는 상기 제1 행렬 및 제3 행렬과 관련되며, 상기 제3 행렬은 상기 행렬 곱셈 동작에 대응하고; 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보 에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하고; 및 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하되, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방 법. 청구항 2 제1항에 있어서, 상기 제1 행렬의 규모 정보는 상기 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하며, 상기 제2 행렬의 규 모 정보는 상기 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함하며, 상기 제1 목표 서브 규모 정보는 제1 목 표 서브 규모 값을 포함하며, 상기 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 3 제2항에 있어서, 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간 의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하는 것은, 상기 제2 저장 공간의 용량과 상기 제2 초기 서브 규모 값 사이의 비율에 따라, 상기 제1 목표 서브 규모 값을 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 4 제2항에 있어서, 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하는 것은, 상기 제1 저장 공간의 용량과 상기 제1 목표 서브 규모 값 사이의 비율에 따라, 상기 제2 목표 서브 규모 값을 결정하는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 5 제2항에 있어서, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보 에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하는 것은, 상기 제1 초기 서브 규모 값과 상기 제2 목표 서브 규모 값 사이의 비율에 따라, 상기 목표 분할 정보를 결정하 는 것을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 6 제1항에 있어서, 상기 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장되며, 상기 적어도 2개의 레벨 의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 7 제1항에 있어서, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것은, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에 따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것; 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결 정하는 것 을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 8 제7항에 있어서, 상기 대역폭 정보는 상기 계산 유닛과 저장 유닛 사이의 메모리 대역폭 및 멀티 레벨의 캐시 유닛 사이의 적어 도 하나의 캐시 대역폭을 포함하고, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에 따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따 라, 제1 액세스 시간 리소스 오버헤드를 결정하는 것; 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소 스 오버헤드를 결정하는 것으로서, 상기 목표 서브 데이터량은 상기 제3 행렬이 목표 캐시 유닛에 저장되는 데 이터량이며, 상기 목표 캐시 유닛은 상기 멀티 레벨의 캐시 유닛 중 상기 멀티 레벨의 캐시 유닛 중의 제1 캐시 유닛 이외의 캐시 유닛인, 상기 제2 액세스 시간 리소스 오버헤드를 결정하는 것; 상기 제1 액세스 시간 리소스 오버헤드 및 상기 제2 액세스 시간 리소스 오버헤드에 따라, 상기 행렬 조합의 액 세스 리소스 오버헤드를 결정하는 것 을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 9 제8항에 있어서, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따 라, 제1 액세스 시간 리소스 오버헤드를 결정하는 것은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량 및 상기 제3 행렬의 데이터량에 따라, 총 데이터량을 결 정하는 것; 상기 총 데이터량과 상기 메모리 대역폭 사이의 비율에 따라, 상기 제1 액세스 시간 리소스 오버헤드를 결정하 는 것 을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 10 제8항에 있어서, 상기 목표 분할 정보는 목표 분할 매개 변수 값을 포함하고, 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소 스 오버헤드를 결정하는 것은, 상기 제3 행렬의 목표 서브 데이터량과 상기 캐시 대역폭 사이의 비율에 따라, 서브 액세스 시간 리소스 오버헤 드를 결정하는 것; 상기 서브 액세스 시간 리소스 오버헤드와 상기 목표 분할 매개 변수 값 사이의 곱에 따라, 상기 제2 액세스 시 간 리소스 오버헤드를 결정하는 것 을 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 11 제1항에 있어서, 상기 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 상기 행렬 곱셈 동작을 수행하는 것을, 또한 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 12 제1항에 있어서, 상기 미리 설정된 액세스 리소스 오버헤드 조건은, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작 거나 같은 것; 및 상기 I개의 행렬 조합 중 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것 중 적어도 하나를 포함하는, 행렬 곱셈 데이터의 처리 방법. 청구항 13 행렬 곱셈 데이터의 처리 장치로서, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하기 위해 사용되는 제1 결정 모듈로서, 상 기 I개의 행렬 조합 중 각 행렬 조합이 제1 행렬 및 제2 행렬을 포함하며, 상기 제1 행렬은 제1 저장 공간에 대 응하며, 상기 제2 행렬은 제2 저장 공간에 대응하며, I는 1보다 크거나 같은 정수인 제1 결정 모듈; 상기 I개의 행렬 조합 각각의 상기 제2 행렬의 규모 정보 및 상기 I개의 행렬 조합 각각의 상기 제2 저장 공간 의 용량에 따라, 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하기 위해 사용되는 제2 결정 모 듈로서, 상기 제1 목표 서브 규모 정보는 상기 제1 행렬 및 상기 제2 행렬과 관련되는 제2 결정 모듈; 상기 I개의 행렬 조합 각각의 상기 제1 저장 공간의 용량 및 상기 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하기 위해 사용되는 제3 결정 모듈 로서, 상기 제2 목표 서브 규모 정보는 상기 제1 행렬 및 제3 행렬과 관련되며, 상기 제3 행렬은 상기 행렬 곱 셈 동작에 대응하는 제3 결정 모듈; 상기 I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 상기 I개의 행렬 조합 각각의 제1 행렬의 규모 정보 에 따라, 상기 I개의 행렬 조합 각각의 목표 분할 정보를 결정하기 위해 사용되는 제4 결정 모듈; 및 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용되는 제5 결정 모듈로서, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하는 제5 결정 모 듈 을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 14 제13항에 있어서, 상기 제1 행렬의 규모 정보는 상기 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하며, 상기 제2 행렬의 규 모 정보는 상기 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함하며, 상기 제1 목표 서브 규모 정보는 제1 목 표 서브 규모 값을 포함하며, 상기 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 15 제14항에 있어서, 상기 제2 결정 모듈은 또한 상기 제2 저장 공간의 용량과 상기 제2 초기 서브 규모 값 사이의 비율에 따라, 상기 제1 목표 서브 규모 값을 결정하기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치. 청구항 16 제14항에 있어서, 상기 제3 결정 모듈은 또한 상기 제1 저장 공간의 용량과 상기 제1 목표 서브 규모 값 사이의 비율에 따라, 상기 제2 목표 서브 규모 값을 결정하기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치. 청구항 17 제14항에 있어서, 상기 제4 결정 모듈은 또한 상기 제1 초기 서브 규모 값과 상기 제2 목표 서브 규모 값 사이의 비율에 따라, 상기 목표 분할 정보를 결정하 기 위해 사용되는, 행렬 곱셈 데이터의 처리 장치. 청구항 18 제13항에 있어서, 상기 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장되며, 상기 적어도 2개의 레벨 의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 19 제13항에 있어서, 상기 제5 결정 모듈은, 상기 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 상기 I개의 행렬 조합 각각의 목표 분할 정보에 따라, 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하기 위해 사용되는 제1 결정 서브 모듈; 및 상기 I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, 상기 I개의 행렬 조합에서 목표 행렬 조합을 결 정하기 위해 사용되는 제2 결정 서브 모듈을, 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 20 제19항에 있어서, 상기 대역폭 정보는 상기 계산 유닛과 저장 유닛 사이의 메모리 대역폭 및 멀티 레벨의 캐시 유닛 사이의 적어 도 하나의 캐시 대역폭을 포함하고, 상기 제1 결정 서브 모듈은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량, 상기 제3 행렬의 데이터량 및 상기 메모리 대역폭에 따 라, 제1 액세스 시간 리소스 오버헤드를 결정하기 위해 사용되는 제1 결정 유닛; 상기 목표 분할 정보, 상기 제3 행렬의 목표 서브 데이터량 및 상기 캐시 대역폭에 따라, 제2 액세스 시간 리소 스 오버헤드를 결정하기 위해 사용되는 제2 결정 유닛로서, 상기 목표 서브 데이터량은 상기 제3 행렬이 목표 캐시 유닛에 저장되는 데이터량이며, 상기 목표 캐시 유닛은 상기 멀티 레벨의 캐시 유닛 중 상기 멀티 레벨의 캐시 유닛 중의 제1 캐시 유닛 이외의 캐시 유닛인 제2 결정 유닛; 및 상기 제1 액세스 시간 리소스 오버헤드 및 상기 제2 액세스 시간 리소스 오버헤드에 따라, 상기 행렬 조합의 액 세스 리소스 오버헤드를 결정하기 위해 사용되는 제3 결정 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 21 제20항에 있어서, 상기 제1 결정 유닛은, 상기 제1 행렬의 데이터량, 상기 제2 행렬의 데이터량 및 상기 제3 행렬의 데이터량에 따라, 총 데이터량을 결 정하기 위해 사용되는 제1 결정 서브 유닛; 및 상기 총 데이터량과 상기 메모리 대역폭 사이의 비율에 따라, 상기 제1 액세스 시간 리소스 오버헤드를 결정하 기 위해 사용되는 제2 결정 서브 유닛을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 22 제20항에 있어서, 상기 목표 분할 정보는 목표 분할 매개 변수 값을 포함하고, 상기 제2 결정 유닛은, 상기 제3 행렬의 목표 서브 데이터량과 상기 캐시 대역폭 사이의 비율에 따라, 서브 액세스 시간 리소스 오버헤 드를 결정하기 위해 사용되는 제3 결정 서브 유닛; 및 상기 서브 액세스 시간 리소스 오버헤드와 상기 목표 분할 매개 변수 값 사이의 곱에 따라, 상기 제2 액세스 시 간 리소스 오버헤드를 결정하기 위해 사용되는 제4 결정 서브 유닛 을 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 23 제13항에 있어서, 상기 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 상기 행렬 곱셈 동작을 수행하기 위해 사용되는 수행 모듈을 또한 포함하는, 행렬 곱셈 데이터의 처리 장치. 청구항 24 제13항에 있어서, 상기 미리 설정된 액세스 리소스 오버헤드 조건은, 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작 거나 같은 것; 및 상기 I개의 행렬 조합 중 상기 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것 중 적어도 하나를 포함하는, 행렬 곱셈 데이터의 처리 장치.청구항 25 제13항 내지 제24항 중 어느 하나의 행렬 곱셈 데이터의 처리 장치를 포함하는 전자 기기. 청구항 26 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신 연결되는 메모리를 포함하고, 상기 메모리는 상기 적어도 하나의 프로세서에 의해 수행 가능한 명령어를 저장하며, 상기 명령어가 상기 적어 도 하나의 프로세서에 의해 수행되어, 상기 적어도 하나의 프로세서가 제1항 내지 제12항 중 어느 하나의 행렬 곱셈 데이터의 처리 방법을 수행 가능하게 하는 전자 기기. 청구항 27 상기 컴퓨터로 하여금 제1항 내지 제12항 중 어느 하나의 행렬 곱셈 데이터의 처리 방법을 수행하기 위해 사용 되는 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체. 청구항 28 컴퓨터 판독 가능 저장 매체에 저장되어 있는 컴퓨터 프로그램으로서, 프로세서에 의해 수행될 때 제1항 내지 제12항 중 어느 하나의 행렬 곱셈 데이터의 처리 방법을 구현하는 컴퓨 터 프로그램을 포함하는, 컴퓨터 프로그램. 발명의 설명 기 술 분 야 본 개시는 인공 지능 기술 분야에 관한 것으로서, 특히 칩 기술 분야에 관한 것이다. 보다 구체적으로, 본 개시 는 행렬 곱셈 데이터의 처리 방법, 장치, 전자 기기 및 저장 매체를 제공한다."}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능 기술의 발전에 따라, 인공 지능 칩의 하드웨어 리소스에 따라 딥러닝 모델의 연산자를 조정할 수 있 다. 본 개시는 데이터 처리 장치, 방법, 기기 및 저장 매체를 제공한다. 본 개시의 일 측면에 따라, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하되, I개의 행 렬 조합 중 각 행렬 조합이 제1 행렬 및 제2 행렬을 포함하며, 제1 행렬은 제1 저장 공간에 대응하며, 제2 행렬 은 제2 저장 공간에 대응하며, I는 1보다 크거나 같은 정수이고; I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저장 공간의 용량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하되, 제1 목표 서브 규모 정보는 제1 행렬 및 제2 행렬과 관련되고; I개의 행렬 조합 각각의 제1 저장 공 간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하되, 제2 목표 서브 규모 정보는 제1 행렬 및 제3 행렬과 관련되며, 제3 행렬은 행렬 곱셈 동 작에 대응하고; I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 I개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정하고; 및 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하 되, 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하 는 것을, 포함하는 행렬 곱셈 데이터의 처리 방법을 제공한다. 본 개시의 다른 측면에 따라, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하기 위해 사 용되는 제1 결정 모듈로서, I개의 행렬 조합 중 각 행렬 조합이 제1 행렬 및 제2 행렬을 포함하며, 제1 행렬은 제1 저장 공간에 대응하며, 제2 행렬은 제2 저장 공간에 대응하며, I는 1보다 크거나 같은 정수인 제1 결정 모 듈; I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저장 공간의 용량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하기 위해 사용되는 제2 결정 모듈로서, 제1 목표 서브 규모 정보는 제1 행렬 및 제2 행렬과 관련되는 제2 결정 모듈; I개의 행렬 조합 각각의 제1 저장 공간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 를 결정하기 위해 사용되는 제3 결정 모듈로서, 제2 목표 서브 규모 정보는 제1 행렬 및 제3 행렬과 관련되며, 제3 행렬은 행렬 곱셈 동작에 대응하는 제3 결정 모듈; I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 I 개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정하기 위해 사용되는 제4 결정 모듈; 및 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용되는 제5 결정 모듈로서, 목 표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족하는 제5 결정 모듈을 포함하는 행렬 곱셈 데이터의 처리 장치를 제공한다. 본 개시의 다른 측면에 따라, 본 개시에서 제공되는 데이터 처리 장치를 포함하는 전자 기기를 제공한다. 본 개시의 다른 측면에 따라, 적어도 하나의 프로세서; 및 적어도 하나의 프로세서와 통신 연결되는 메모리를 포함하고, 메모리는 적어도 하나의 프로세서에 의해 수행 가능한 명령어를 저장하며, 명령어가 적어도 하나의 프로세서에 의해 수행되어, 적어도 하나의 프로세서가 본 개시에서 제공되는 방법을 수행 가능하게 하는 전자 기기를 제공한다. 본 개시의 다른 측면에 따라, 컴퓨터로 하여금 본 개시에서 제공되는 방법을 수행하기 위해 사용되는 컴퓨터 명 령어가 저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체를 제공한다. 본 개시의 다른 측면에 따라, 프로세서에 의해 수행될 때 본 개시에서 제공되는 방법을 구현하는 컴퓨터 프로그 램을 포함하는 컴퓨터 프로그램 제품을 제공한다. 이 부분에서 설명한 내용은 본 개시의 실시예의 핵심 또는 중요한 특징들을 표시하기 위한 것이 아니며, 본 개 시의 범위를 한정하는 데 사용하지 않는다는 것을 이해해야 한다. 본 개시의 기타 특징은 아래의 명세서를 통해 쉽게 이해할 수 있게 될 것이다."}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 발명의 예시적인 실시예를 상세히 설명하기로 한다. 이해를 돕기 위하여 그 중에는 본 개시의 실시예의 다양한 세부사항이 포함되어 있으며, 이들을 단지 예시적인 것으로 간주해야 한다."}
{"patent_id": "10-2025-0029761", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "따라서, 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자는 본 개시의 범위 및 사상을 벗어나는 것이 없 이 여기서 설명된 실시예에 대해 다양한 변경 및 수정을 진행할 수 있음을 인식해야 한다. 마찬가지로, 명확하 고 간결하기 위하여, 아래 설명 중에는 공지 기능 또는 구성에 대한 설명은 생략하도록 한다. 과학계산, 딥러닝 등의 분야에서, 대량의 선형 필터 동작, 대응하는 연산자로서의 일반 행렬 곱셈(General Matrix Multiplication, GEMM) 연산자를 사용할 수 있다. 딥러닝 모델에 관한 연산에서, 일반 행렬 곱셈 연산자 는 시간이 많이 걸린다. 일반 행렬 곱셈 연산자는 액세스 집약형(Access-intensive) 연산자이다. 액세스 활용률 을 높이면, 일반 행렬 곱셈 연산자의 수행 효율을 높일 수 있고, 관련된 인공 지능 칩의 성능을 제공하기에도 도움이 된다. 일반 행렬 곱셈 연산자는 피승수 행렬(A), 승수 행렬(B) 및 결과 행렬(C)에 관련될 수 있다. 일반 행렬 곱셈 연 산자의 계산 과정은 다음과 같이 실현될 수 있다. (수식 1) 피승수 행렬(A)의 규모(shape)가 m×k일 수 있고, 승수 행렬(B)의 규모가 k×n일 수 있고, 결과 행렬(C)의 규모 가 m×n일 수 있다. 피승수 행렬(A) 및 승수 행렬(B)은 각각 일반 행렬 곱셈 연산자의 2개의 입력 행렬로 할 수 있다. m은 1보다 크거나 같은 정수이고, n은 1보다 크거나 같은 정수이고, k는 1보다 크거나 같은 정수이다. 일부 실시예에서, 레벨 1 캐시 유닛(Level 1 Cache, L1 Cache)의 용량에 기초하여, 2개의 입력 행렬 및 결과 행 렬 중 어느 하나의 행렬 또는 임의의 2개의 행렬을 분해하여, 복수의 서브 행렬을 얻을 수 있다. 예를 들어, 피승수 행렬(A)에 대한 레벨 1 캐시 유닛의 용량에 기초하여, 피승수 행렬(A)을 복수의 서브 행렬로 분해할 수 있다. 각 서브 행렬의 데이터량은 피승수 행렬(A)에 대한 레벨 1 캐시 유닛의 용량과 일치할 수 있다. 이 서브 행렬의 규모는 l_m×l_k일 수 있다. l_m은 1보다 크거나 같고 m보다 작거나 같을 수 있으며, l_k 는 1보다 크거나 같고 k보다 작거나 같을 수 있다. 따라서, 행 차원에서, 피승수 행렬(A)이 분해된 수( )는 다음과 같을 수 있다. (수식 1) 열 차원에서, 피승수 행렬(A)이 분해된 수( )는 다음과 같을 수 있. (수식 2) 아래에서 도 1을 결합하여 자세하게 설명한다. 도 1은 본 개시의 일 실시예에 따른 행렬 곱셈동작에 관한 복수의 행렬의 액세스의 개략도이다. 도 1에 도시된 바와 같이, 피승수 행렬은 4개의 서브 행렬로 분해될 수 있다. 피승수 행렬의 서브 행 렬의 규모는 예를 들어 l_m×l_k일 수 있다. 피승수 행렬은 상술한 피승수 행렬(A)일 수 있다. 승수 행렬은 2개의 서브 행렬로 분해될 수 있다. 승수 행렬의 서브 행렬의 규모는 l_m×n일 수 있다. 행렬 곱셈 동작을 수행할 때, 매번 수행되는 행렬 곱셈 동작의 규모는 [l_m, n, l_k]일 수 있다. 행렬 곱셈 동 작은 * 회 수행된 후, 행렬 곱셈 동작을 완료할 수 있다. 이해할 수 있는 것은, 도 1에 도시된 실시예에서, 승수 행렬의 서브 행렬의 규모를 결정할 때, 서브 행렬을 고려하였지만, 승수 행렬에 대한 레벨 1 캐시 유닛의 용량을 고려하지 않았다. 즉, 서브 행렬 의 데이터량은 승수 행렬의 레벨 1 캐시 유닛의 용량보다 클 수 있다. 따라서, 행렬 곱셈 동작을 수 행하기 위해, 서브 행렬에 대한 반복적인 액세스를 초래한다. 피승수 행렬에 대한 레벨 1 캐시 유닛의 용량에 기초하여 피승수 행렬을 분해할 경우, 도 1에 도시된 바와 같이, 1번째의 LS111에 대한 액세스, 2번째의 LS112에 대한 액세스, 3번째의 LS113에 대한 액세스, 4번째 의 LS114에 대한 액세스까지의 과정에서, 피승수 행렬의 서브 행렬은 반복적으로 액세스되지 않게 할 수 있다. 따라서, 피승수 행렬의 액세스량의 지표 값(LS_A)은 다음과 같을 수 있다. (수식 3) 승수 행렬은 -1회 반복적으로 액세스될 수 있다. 피승수 행렬의 서브 행렬의 행이 변화할 때, 승 수 행렬에 대한 레벨 1 캐시 유닛에서의 데이터는 재사용되어, 액세스량을 줄이도록 할 수 있다. 도 1에 도시된 바와 같이, 1번째의 LS111에 대한 액세스 및 2번째의 LS112에 대한 액세스의 과정에서, 서브 행렬 의 일부 데이터는 재사용될 수 있다. 3번째의 LS113에 대한 액세스 및 4번째의 LS114에 대한 액세스의 과정에서, 서브 행렬의 일부 데이터는 재사용될 수 있다. 따라서, 승수 행렬의 액세스량의 지표 값(LS_B)은 다음과 같을 수 있다. (수식 4) 는 승수 행렬에 대한 레벨 1 캐시 유닛의 용량일 수 있다. 는 최대값을 취하는 함수일 수 있다. 결과 행렬은 -1회 반복적으로 액세스될 수 있다. 피승수 행렬의 서브 행렬의 열이 변화할 때, 결과 행렬에 대한 레벨 1 캐시 유닛에서의 데이터는 재사용되어, 액세스량을 줄이도록 할 수 있다. 도 1에 도시 된 바와 같이, 2번째의 LS132에 대한 액세스 및 3번째의 LS133에 대한 액세스의 과정에서, 서브 행렬에 관 련된 일부 데이터는 재사용될 수 있다. 따라서, 결과 행렬의 액세스량의 지표 값(LS_C)은 다음과 같을 수 있다. (수식 5) 는 결과 행렬에 대한 레벨 1 캐시 유닛의 용량일 수 있다. 이해할 수 있는 것은, 위에서 피승수 행렬(A)의 레벨 1 캐시 유닛의 용량에 기초하여 피승수 행렬(A)을 분해하 고, 피승수 행렬(A)의 서브 행렬에 기초하여 승수 행렬을 분해한다. 하지만 일부 실시예에서, 제1 행렬의 레벨 1 캐시 유닛의 용량을 이용하여 제1 행렬을 분해한 후, 제1 행렬의 서브 행렬을 이용하여 제2 행렬을 분해할 수 있다. 제1 행렬은 피승수 행렬(A), 승수 행렬(B) 및 결과 행렬(C) 중 어느 하나의 행렬일 수 있다. 제2 행렬은 제1 행렬 이외의 어느 하나의 행렬일 수 있다. 상이한 행렬을 제1 행렬 및 제2 행렬로 하여, 복수의 액세스량의 지표 값의 합을 결정할 수 있다. 최소 액세스 량의 지표 값의 합에 대응하는 행렬 분해 방식에 의하여, 액세스 리소스를 절약할 수 있다. 하지만, 상이한 행 렬을 제1 행렬로 하여 제1 행렬의 레벨 1 캐시 유닛의 용량에 따라 행렬을 분해하면, 분해 방식은 행렬 규모의 증가에 따라 많아질 수있어, 대량의 액세스량의 지표 값을 계산할 필요가 있고, 대량의 액세스량의 지표 값의 합을 계산할 필요도 있다. 그럼으로 인해 계산 리소스 오버헤드가 높고, 시간 비용이 높은 것을 초래한다. 이를 바탕으로, 행렬 곱셈 동작의 효율을 더욱 높이기 위해, 본 개시는 행렬 곱셈 데이터의 처리 방법을 제공한 다. 아래에서 설명한다. 도 2는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 처리 방법의 개략적인 흐름도이다. 도 2에 도시된 바와 같이, 방법은 동작 S210에서 동작 S250까지 포함할 수 있다. 동작S210에서, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정한다. 본 개시의 실시예에서, I개의 행렬 조합 중 각 행렬 조합은 제1 행렬 및 제2 행렬을 포함할 수 있다. I는 1보다 크거나 같은 정수일 수 있다. 예를 들어, 복수의 행렬은 3개의 행렬이면, I는 6일 수 있다. 이해할 수 있는 것 은, 행렬의 수량이 3인 것은 예시일 뿐이다. 복수의 행렬은 2개, 4개 또는 그 이상의 행렬일 수도 있다. 다른 예로서, 3개의 행렬은 각각 상술한 피승수 행렬(A), 승수 행렬(B) 및 결과 행렬(C)일 수 있다. 다른 예로서, I 개의 행렬 조합 중 제1 행렬 조합에 대해, 제1 행렬은 상술한 피승수 행렬(A)일 수 있고, 제2 행렬은 상술한 승 수 행렬(B)일 수 있다. 제2 행렬 조합에 대해, 제1 행렬은 상술한 피승수 행렬(A)일 수 있고, 제2 행렬은 상술 한 결과 행렬(C)일 수 있다. 아래에서 제1 행렬 조합과 결합하여 설명한다. 본 개시의 실시예에서, 제1 행렬은 제1 저장 공간에 대응할 수 있고, 제2 행렬은 제2 저장 공간에 대응할 수 있 다. 예를 들어, 제1 행렬은 상술한 피승수 행렬(A)이면, 제1 저장 공간은 상술한 피승수 행렬(A)에 대한 레벨 1 캐시 유닛일 수 있다. 제2 행렬은 상술한 승수 행렬(B)이면, 제2 저장 공간은 상술한 승수 행렬(B)에 대한 레벨 1 캐시 유닛일 수 있다. 동작 S220에서, I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저장 공간의 용 량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정한다. 본 개시의 실시예에서, 제1 목표 서브 규모 정보는 제1 행렬 및 제2 행렬과 관련된다. 예를 들어, 제2 행렬의 규모 정보는 제2 행렬의 규모를 포함할 수 있다. 제1 행렬 조합을 예로 들면, 제1 행렬의 규모는 m×k일 수 있 고, 제2 행렬의 규모는 k×n일 수 있다. 제1 목표 서브 규모 정보은 k와 관련될 수 있다. 제2 행렬 조합을 예로 들면, 제1 행렬의 규모는 m×k일 수 있고, 제2 행렬(상술한 결과 행렬(C))의 규모는m×n일 수 있다. 제1 목표 서브 규모 정보는 m과 관련될 수 있다. 본 개시의 실시예에서, 제1 행렬과 무관한 제2 행렬의 서브 규모 정보에 따라, 제1 목표 서브 규모 정보를 결정 할 수 있다. 예를 들어, 제1 행렬 조합을 예로 들면, 제2 행렬의 서브 규모 정보는 제1 행렬과 무관한 초기 서 브 규모 값 n를 포함한다. 초기 서브 규모 값 n 및 제2 저장 공간의 용량에 따라, 제1 목표 서브 규모 정보를 결정할 수 있다. 본 개시의 실시예에서, 제1 목표 서브 규모 정보에 기초하면, 제2 행렬의 서브 행렬의 데이터량은 제2 저장 공 간의 용량보다 작거나 같을 수 있다. 예를 들어, 각 행렬 조합에 대해, 제2 행렬의 서브 행렬의 데이터량은 제2 저장 공간의 용량과 같을 수 있다. 동작 S230에서, I개의 행렬 조합 각각의 제1 저장 공간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정한다. 본 개시의 실시예에서, 제2 목표 서브 규모 정보는 제1 행렬 및 제3 행렬과 관련되고, 제3 행렬은 행렬 곱셈 동 작에 대응하다. 예를 들어, 제1 행렬 조합을 예로 들면, 제3 행렬은 결과 행렬(C)일 수 있다. 제2 목표 서브 규 모 정보는 m과 관련될 수 있다. 상술한 제1 행렬 조합의 제1 목표 서브 규모 정보 및 제1 저장 공간의 용량에 따라, 제1 행렬 조합의 제2 목표 서브 규모 정보를 결정할 수 있다. 동작 S240에서, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 I개의 행렬 조합 각각의 제1 행렬의 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정한다. 본 개시의 실시예에서, 목표 분할 정보는 제2 행렬과 무관한 차원에서, 제1 행렬이 분할되는 수를 나타낼 수 있 다. 예를 들어, 제1 행렬 조합을 예로 들면, 제1 행렬의 행 차원은 제2 행렬과 무관하고, 제1 행렬 조합의 목표 분할 정보는 제1 행렬이 행 차원에서 분할되는 수를 나타낼 수 있다. 동작 S250에서, 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정 보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정한다. 본 개시의 실시예에서, 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버 헤드 조건을 충족한다. 예를 들어, I개의 행렬 조합 각각의 목표 분할 정보에 따라, 각 행렬 조합에서 2개의 입 력 행렬의 입력 서브 행렬의 데이터량을 결정할 수 있다. 계산 유닛의 대역폭 정보 및 각 행렬 조합의 입력 서 브 행렬의 데이터량에 따라, 각 행렬 조합의 액세스 리소스 오버헤드를 결정할 수 있다. 액세스 리소스 오버헤 드 조건은, 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작거나 같은 것일 수 있 다. 본 개시 실시예를 통해, 제2 저장 공간의 용량에 따라, 제1 행렬의 분할 방식을 결정함으로써, 목표 행렬 조합 을 결정하기에 필요한 계산 리소스를 감소할 수 있고, 액세스량을 효과적으로 감소할 수도 있다. 특히, 제1 행 렬의 서브 행렬 및 제2 행렬의 서브 행렬이 반복적으로 액세스되는 것을 피할 수 있어, 행렬 곱셈 연산자의 수 행 효율을 높이고, 데이터 처리 장치의 효율을 높이기에 도움이 된다. 이해할 수 있는 것은, 위에서 본 개시의 방법을 설명하였다. 아래에서 도 3a 내지 도 3b와 결합하여 본 개시의 방법을 더욱 자세하게 설명한다. 도 3a는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 개략도이다. 도 3a에 도시된 바와 같이, 행렬 곱셈 데이터는 피승수 행렬, 승수 행렬 및 결과 행렬을 포함할 수 있다. 피승수 행렬의 규모는 m×k일 수 있고, 승수 행렬의 규모는 k×n일 수 있고, 결과 행렬 의 규모는 m×n일 수 있다. 일부 실시예에서, 상술한 동작S210의 일부 실시 형태에서, I개의 행렬 조합은 제3 행렬 조합, 제4 행렬 조합, 제5 행렬 조합 및 제6 행렬 조합을 또한 포함할 수 있다. 제3 행렬 조합에 대해서, 제1 행렬은 승수 행렬 일 수 있고, 제2 행렬은 피승수 행렬일 수 있다. 제4 행렬 조합에 대해서, 제1 행렬은 승수 행렬일 수 있고, 제2 행렬은 결과 행렬일 수 있다. 제5 행렬 조합에 대해서, 제1 행렬은 결과 행렬일 수 있 고, 제2 행렬은 피승수 행렬일 수 있다. 제6 행렬 조합에 대해서, 제1 행렬은 결과 행렬일 수 있고,제2 행렬은 승수 행렬일 수 있다. 본 개시의 실시예에서, 제1 행렬의 규모 정보는 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하고, 제2 행 렬의 규모 정보는 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함한다. 예를 들어, 제1 행렬이 피승수 행렬 이고 제2 행렬이 승수 행렬인 것을 예로 들면, 제1 초기 서브 규모 값은 m일 수 있고, 제2 초기 서브 규모 값은 n일 수 있다. 승수 행렬에 대한 반복적인 액세스를 줄이기 위해, 상술한 수식 4를 참조하면, =1 또는 로 설치할 수 있다. 결과 행렬에 대한 반복적인 액세스를 줄이기 위해, 상술 한 수식 5를 참조하면, =1로 설치할 수 있다. 하지만, =1 또는 =1로 설치하면, 피승수 행렬을 효과 적으로 분할할 수 없다. 따라서, 반복적인 액세스를 줄이기 위해, 로 설치할 수 있다. 또한, 결과 행렬에 대한 반복적인 액세스를 가능한 한 줄이기 위해, 의 값은 가능한 한 작아야 한다. 즉(상술 한 수식 2를 참조), l_k는 가능한 한 크게 한다. 따라서, 로 설치할 수 있다. 이를 바탕으로, 일부 실시예에서, 제1 목표 서브 규모 정보는 제1 목표 서브 규모 값을 포함한다. 상술한 동작 S220의 일부 실시 형태에서, I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저 장 공간의 용량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하는 것은, 제2 저장 공간의 용량과 제2 초기 서브 규모 값 사이의 비율에 따라, 제1 목표 서브 규모 값을 결정하는 것을 포함한다. 제1 행 렬이 피승수 행렬이고 제2 행렬이 승수 행렬인 것을 예로 들면, 제1 목표 서브 규모 값(large_k)는 의 경우의 일 수 있다. 다른 예로서, 이하의 수식에 의해 제1 행렬 조합의 제1 목표 서브 규모 값(large_k)을 결정할 수 있다. (수식 6) n은 제2 초기 서브 규모 값일 수 있다. 또한, 일부 실시예에서, 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함할 수 있다. 상술한 동작S230 의 일부 실시 형태에서, I개의 행렬 조합 각각의 제1 저장 공간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서 브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하는 것은, 제1 저장 공간의 용 량과 제1 목표 서브 규모 값 사이의 비율에 따라, 제2 목표 서브 규모 값을 결정하는 것을 포함한다. 예를 들어, 이하의 수식에 의해 제2 목표 서브 규모 값(large_m)을 결정할 수 있다. (수식 7) 는 피승수 행렬에 대한 레벨 1 캐시 유닛의 용량일 수 있다. 이어서, 상술한 동작S240의 일부 실시 형태에서, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 I개의 행 렬 조합 각각의 제1 행렬의 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정하는 것은, 제1 초기 서브 규모 값과 제2 목표 서브 규모 값 사이의 비율에 따라, 목표 분할 정보를 결정하는 것을 포함한다. 목표 분할 정보는 목표 분할 매개 변수 값을 포함할 수 있다. 이하의 수식에 의해 목표 분할 매개 변수 값( ) 을 결정할 수 있다. (수식 8) 이해할 수 있는 것은, 위에서 제1 행렬 및 제2 행렬을 분할하는 일부 방식을 설명하였다. 아래에서 도 3b를 결 합하여 액세스 리소스 오버헤드를 결정하는 일부 방식을 설명한다. 도 3b는 본 개시의 일 실시예에 따른 복수의 서브 행렬의 개략도이다. 도 3b에 도시된 바와 같이, 상술한 제1 행렬 조합을 예로 들면, 상술한 제1 목표 서브 규모 값(large_k) 및 제2 목표 서브 규모 값(large_m)에 기초하여, 피승수 행렬의 서브 행렬을 결정할 수 있다. 피승수 행렬 은 예를 들어 6개의 서브 행렬로 분할될 수 있다. 상술한 제2 초기 서브 규모 값(n) 및 제1 목표 서브 규 모 값(large_k)에 기초하여, 승수 행렬의 서브 행렬을 결정할 수 있다. 승수 행렬은 예를 들어3 개의 서브 행렬을 포함할 수 있다. 따라서, 결과 행렬은 예를 들어 2개 서브 행렬을 포함할 수 있다. 결과 행렬의 서브 행렬의 규모는 large_m×n일 수 있다. 도 3b에 도시된 바와 같이, 피승수 행렬에 대한, 1번째의 LS311에 대한 액세스, 2번째의 LS312에 대한 액 세스, 3번째의 LS313에 대한 액세스, 4번째의 LS314에 대한 액세스, 5번째의 LS315에 대한 액세스 및 6번째의 LS316에 대한 액세스의 과정에서, 피승수 행렬은 반복적으로 액세스되지 않는다. 승수 행렬에 대한, 1번째의 LS321에 대한 액세스, 2번째의 LS323에 대한 액세스 및3번째의 LS325에 대한 액세스의 과정에서, 승수 행렬은 반복적으로 액세스되지 않는다. 또한, 행렬 곱셈 동작을 수행하는 과정에서, 승수 행렬에 대 한 레벨 1 캐시 유닛에서의 데이터는 재사용된다. 예를 들어, 승수 행렬의 서브 행렬은 피승수 행렬 의 서브 행렬 및 서브 행렬 각각과 곱한다. 즉 서브 행렬은 한 회 재사용되었다. 도 3b에 도시된 바와 같이, 결과 행렬은 반복적으로 액세스되어야 한다. 결과 행렬의 서브 행렬(33 1)을 결정하기 위해, 글로벌 저장 유닛(global memory)을 기초로 하여, 1번째의 LS331에 대한 액세스, 4번째의 LS334에 대한 액세스 및 5번째의 LS335에 대한 액세스를 수행할 수 있다. 결과 행렬의 서브 행렬을 결정하기 위해, 글로벌 저장 유닛을 기초로 하여, 2번째의 LS332에 대한 액세스, 3번째의 LS333에 대한 액세스 및 6번째의 LS336에 대한 액세스를 수행할 수 있다. 이해할 수 있는 것은, 상술한 서브 행렬과 서브 행렬 을 곱한 후, 하나의 결과 서브 행렬을 얻을 수 있다. 이어서, 1번째의 LS331에 대한 액세스를 수행하여, 해당 결과 서브 행렬을 결과 행렬에 대한 레벨 1 캐시 유닛에서 글로벌 저장 유닛으로 저장할 수 있다. 이 어서, 액세스하는 리소스 오버헤드를 결정할 수 있다. 일부 실시예에서, 상술한 동작S250의 일부 실시 형태에서, 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것은, 행 렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것을 포함한다. 본 개시의 실시예에서, 대역폭 정보는 계산 유닛과 저장 유닛 사이의 메모리 대역폭을 포함한다. 예를 들어, 저 장 유닛은 글로벌 저장 유닛일 수 있다. 본 개시의 실시예에서, 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하는 것은, 제1 행렬의 데이터량, 제 2 행렬의 데이터량, 제3 행렬의 데이터량 및 메모리 대역폭에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하 며; 목표 분할 정보, 제3 행렬의 초기 서브 데이터량 및 메모리 대역폭에 따라, 초기 액세스 시간 리소스 오버 헤드를 결정하는 것을 포함한다. 초기 서브 데이터량은 제3 행렬이 글로벌 저장 유닛에 저장되는 데이터량일 수 있다. 예를 들어, 제1 행렬의 데이터량, 제2 행렬의 데이터량 및 제3 행렬의 데이터량에 따라, 총 데이터량을 결정할 수 있다. 총 데이터량과 메모리 대역폭 사이의 비율에 따라, 제1 액세스 시간 리소스 오버헤드를 결정한다. 제1 액세스 시간 리소스 오버헤드 및 초기 액세스 시간 리소스 오버헤드에 따라, 행렬 조합의 액세스 리소스 오버헤 드를 결정할 수 있다. 다른 예로서, 이하의 수식에 의해 제1 행렬 조합의 액세스 리소스 오버헤드 ( )를 결정할 수 있다. (수식 9) 는 메모리 대역폭일 수 있다. 는 제1 액세스 시간 리소스 오버헤드일 수 있다. 는 초기 서브 데이터량일 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬 조합을 결합하여, 본 개시에서 액세스 리소스 오버헤드를 결정하는 일부 방식을 설명하였다. 제2 행렬 조합 내지 제6 행렬 조합에 기초하여 액세스 리소스 오버헤드를 결정하는 방식은, 제1 행렬 조합에 기초하여 액세스 리소스 오버헤드를 결정하는 방식과 동일하거나 유사하므르, 본 개시는 여기 에서 더 이상 설명하지 않는다. 본 개시 실시예를 통해, 계산 유닛과 저장 유닛 사이의 메모리 대역폭을 충분히 이용할 수 있고, 제3 행렬에 대 해서만 반복적으로 액세스할 수도 있으며, 액세스 횟수를 줄이고, 액세스 효율을 제공하기에 도움이 된다. 이해할 수 있는 것은, 위에서 반복적인 액세스가 필요한 제3 행렬의 일부 데이터를 글로벌 저장 유닛에 저장한 다. 하지만, 본 개시는 이에 제한되지 않는다. 반복적인 액세스가 필요한 제3 행렬의 일부 데이터를 멀티 레벨 의 캐시 유닛에 저장할 수 있다. 아래에서 설명한다. 일부 실시예에서, 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장한다. 적어도 2개 의 레벨의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함한다. 예를 들어, 제1 행렬 조합을 예로 들면, 제1 캐시 유닛은 결과 행렬(C)에 대한 레벨 1 캐시 유닛일 수 있다. 제2 캐시 유닛은 이 레벨 1 캐시 유닛에 관 련된 레벨 2 캐시 유닛(Level 2 Cache, L2 Cache)일 수 있다. 이해할 수 있는 것은, 제1 캐시 유닛은 레벨 0 캐시 (level 0 cache, L0 cache)일 수도 있다. 제1 캐시 유닛이 레벨 0 캐시인 경우, 제2 캐시 유닛은 레벨 1 캐시 유닛일 수 있다. 다른 예로서, 적어도 2개의 레벨의 캐시 유닛은 또한 제3 캐시 유닛을 포함할 수 있다. 제1 캐시 유닛이 레벨 1 캐시 유닛인 경우, 제3 캐시 유닛은 레벨 3 캐시 유닛(Level 3 Cache, L3 Cache)일 수 있다. 본 개시의 실시예에서, 계산 유닛과 저장 유닛 사이의 대역폭 정보는 또한 멀티 레벨의 캐시 유닛 사이의 적어 도 하나의 캐시 대역폭을 포함할 수 있다. 예를 들어, 제1 캐시 유닛이 레벨 1 캐시 유닛인 것을 예로 들면, 적 어도 하나의 캐시 대역폭은 레벨 2 캐시 유닛과 레벨 1 캐시 유닛 사이의 캐시 대역폭( ) 및 레벨 3 캐시 유닛 과 레벨 2 캐시 유닛 사이의 캐시 대역폭( )을 포함할 수 있다. 이어서, 목표 분할 정보, 제3 행렬의 목표 서브 데이터량 및 캐시 대역폭에 따라, 제2 액세스 시간 리소스 오버 헤드를 결정할 수 있다. 목표 서브 데이터량은 제3 행렬이 목표 캐시 유닛에 저장되는 데이터량일 수 있다. 예 를 들어, 목표 서브 데이터량은 하나 또는 복수일 수 있다. 제3 행렬의 데이터량이 많으면, 제3 행렬의 일부 데 이터를 레벨 3 캐시 유닛에 저장할 수 있다. 본 개시의 실시예에서, 목표 분할 정보, 제3 행렬의 목표 서브 데이터량 및 캐시 대역폭에 따라, 제2 액세스 시 간 리소스 오버헤드를 결정하는 것은, 제3 행렬의 목표 서브 데이터량과 캐시 대역폭 사이의 비율에 따라, 서브 액세스 시간 리소스 오버헤드를 결정하며; 서브 액세스 시간 리소스 오버헤드와 목표 분할 매개 변수 값 사이의 곱에 따라, 제2 액세스 시간 리소스 오버헤드를 결정하는 것을 포함할 수 있다. 이어서, 상술한 제1 액세스 시 간 리소스 오버헤드 및 초기 액세스 시간 리소스 오버헤드에 따라 행렬 조합의 액세스 리소스 오버헤드를 결정 하는 것과 달라, 제1 액세스 시간 리소스 오버헤드 및 제2 액세스 시간 리소스 오버헤드에 따라, 행렬 조합의 액세스 리소스 오버헤드를 결정할 수 있다. 예를 들어, 이하의 수식에 의해 액세스 리소스 오버헤드 ( )를 결정할 수 있다. (수식 10) 는 제3 행렬이 제2 캐시 유닛에 저장되는 목표 서브 데이터량이고, 은 제3 행렬이 제3 캐시 유닛에 저장 되는 목표 서브 데이터량이고, 는 제3 행렬이 레벨 j 저장 유닛에 저장되는 목표 서브 데이터량이다. j는 2 보다 큰 정수일 수 있다. 이해할 수 있는 것은, 은 0일 수 있고, 는 0일 수도 있다. 또한, 이해할 수 있 는 것은, 레벨 j 저장 유닛은 글로벌 저장 유닛일 수 있다. 는 레벨 j 저장 유닛과 레벨 3 저장 유닛 사이의 대역폭일 수 있다. 본 개시 실시예를 통해, 반복적으로 액세스되는 제3 데이터의 일부 데이터는 멀티 레벨의 저장 유닛에 저장될 수 있다. 그럼으로써, 멀티 레벨의 저장 유닛 중 각 레벨 저장 유닛의 대역폭을 충분히 이용하여, 계산 유닛의 효율을 더욱 높일 수 있다. 이해할 수 있는 것은, 위에서 액세스 리소스 오버헤드를 결정하는 일부 방식을 설명하였다. 아래에서 목표 행렬 조합을 결정하는 일부 방식을 설명한다. 일부 실시예에서, 상술한 동작S250의 일부 실시 형태에서, I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것 은, I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하는 것을 포함한다. 본 개시의 실시예에서, I개의 행렬 조합의 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 조건 을 충족하는지를 결정할 수 있다. 미리 설정된 액세스 리소스 오버헤드 조건은, 목표 행렬 조합에 대응하는 액 세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작거나 같은 것; 및 I개의 행렬 조합 중 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것 중 적어도 하나를 포함한다. 예를 들어, 액세스 리소스 오버헤드가 가장 작은 행렬 조합을 목표 행렬 조합으로 할 수 있다. 다른 예로서, 액세스 리소스 오버헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작은 행렬 조합 중 어느 하나를 목표 행렬 조합으 로 할 수도 있다. 이해할 수 있는 것은, 위에서 목표 행렬 조합을 결정하는 일부 방식을 설명하였다. 아래에서 목표 행렬 조합과 결합하여 본 개시의 방법을 더욱 자세하게 설명한다. 일부 실시예에서, 상술한 방법은, 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보 에 따라, 행렬 곱셈 동작을 수행하는 것을 더 포함할 수 있다. 본 개시의 실시예에서, 제3 행렬은 행렬 곱셈 동작의 결과 행렬일 수 있다. 방법은, 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제1 행렬의 복수의 제1 서브 행렬을 결 정하며; 목표 행렬 조합의 제1 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제2 행렬의 복수의 제2 서브 행 렬을 결정하며; 복수의 제1 서브 행렬 및 복수의 제2 서브 행렬에 따라, 행렬 곱셈 동작을 수행하여, 복수의 결 과 서브 행렬을 얻으며; 복수의 결과 서브 행렬에 따라, 제3 행렬을 얻는 것을 더 포함할 수 있다. 예를 들어, 상술한 제1 행렬 조합을 예로 들면, 제1 행렬 조합의 제1 목표 서브 규모 값(large_k) 및 제2 목표 서브 규모 값(large_m)에 따라, 피승수 행렬에서 복수의 제1 서브 행렬을 결정할 수 있다. 제1 서브 행렬의 규모는 large_m×large_k일 수 있다. 제1 목표 서브 규모 값(large_k) 및 제2 초기 서브 규모 값(n)에 따라, 승수 행 렬에서 복수의 제2 서브 행렬을 결정할 수 있다. 제2 서브 행렬의 규모는 large_k×n일 수 있다. 이어서, 제1 서브 행렬과 제2 서브 행렬을 곱하여, 결과 서브 행렬을 얻는다. 복수의 결과 서브 행렬에 대해, 가산, 이어맞 춤 동작을 수행하여, 결과 행렬을 얻을 수 있다. 이해할 수 있는 것은, 제2 행렬 조합에 기초하여 행렬 곱셈 동 작을 수행하는 방식은, 제1 행렬 조합에 기초하여 행렬 곱셈 동작을 수행하는 방식과 동일하거나 유사하여, 본 개시는 여기에서 더 이상 설명하지 않는다. 본 개시의 실시예에서, 제2 행렬은 행렬 곱셈 동작의 결과 행렬일 수 있다. 방법은, 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제1 행렬의 복수의 제1 서브 행렬을 결 정하며; 목표 행렬 조합의 제2 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제3 행렬의 복수의 제3 서브 행 렬을 결정하며; 복수의 제1 서브 행렬 및 복수의 제3 서브 행렬에 따라, 행렬 곱셈 동작을 수행하여, 복수의 결 과 서브 행렬을 얻으며; 복수의 결과 서브 행렬에 따라, 제2 행렬을 얻는 것을 더 포함할 수 있다. 본 개시의 실시예에서, 제1 행렬은 행렬 동작의 결과 행렬일 수 있다. 방법은, 목표 행렬 조합의 제1 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제2 행렬의 복수의 제2 서브 행렬을 결정하며; 목표 행렬 조합의 제2 목표 서브 규모 정보에 따라, 목표 행렬 조합의 제3 행렬의 복수의 제3 서브 행렬을 결정하며; 복수의 제2 서브 행렬 및 복수의 제3 서브 행렬에 따라, 행렬 곱셈 동작을 수행하여, 복수의 결과 서브 행렬을 얻으며; 복수의 결과 서브 행렬에 따라, 제1 행렬을 얻는 것을 더 포함할 수 있다. 이해할 수 있는 것은, 제3 행렬 조합 내지 제6 행렬 조합에 기초하여 행렬 곱셈 동작을 수행하는 방식은, 제1 행렬 조합에 기초하여 행렬 동작을 수행하는 방식과 동일하거나 유사하여, 본 개시는 여기에서 더 이상 설명하 지 않는다. 이해할 수 있는 것은, 위에서 본 개시의 행렬 곱셈 데이터의 처리 방법을 설명하였다. 아래에서 본 개시의 장치 를 설명한다. 도 4는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 처리 장치의 개략도이다. 도 4에 도시된 바와 같이, 장치는 제1 결정 모듈, 제2 결정 모듈, 제3 결정 모듈, 제4 결 정 모듈 및 제5 결정 모듈을 포함할 수 있다. 제1 결정 모듈은, 행렬 곱셈 동작에 대응하는 복수의 행렬에서 I개의 행렬 조합을 결정하기 위해 사용된다. I개의 행렬 조합 중 각 행렬 조합은 제1 행렬 및 제2 행렬을 포함하고, 제1 행렬은 제1 저장 공간에 대응하며, 제2 행렬은 제2 저장 공간에 대응하고, I는 1보다 크거나 같은 정수이다. 제2 결정 모듈은, I개의 행렬 조합 각각의 제2 행렬의 규모 정보 및 I개의 행렬 조합 각각의 제2 저장 공 간의 용량에 따라, I개의 행렬 조합 각각의 제1 목표 서브 규모 정보를 결정하기 위해 사용된다. 제1 목표 서브 규모 정보는 제1 행렬 및 제2 행렬과 관련된다. 제3 결정 모듈은, I개의 행렬 조합 각각의 제1 저장 공간의 용량 및 I개의 행렬 조합 각각의 제1 목표 서 브 규모 정보에 따라, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보를 결정하기 위해 사용된다. 제2 목표 서브 규모 정보는 제1 행렬 및 제3 행렬과 관련되고, 제3 행렬은 행렬 곱셈 동작에 대응하다. 제4 결정 모듈은, I개의 행렬 조합 각각의 제2 목표 서브 규모 정보 및 I개의 행렬 조합 각각의 제1 행렬 의 규모 정보에 따라, I개의 행렬 조합 각각의 목표 분할 정보를 결정하기 위해 사용된다. 제5 결정 모듈은, 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용된다. 목표 행렬 조합에 대응하는 액세스 리소스 오버헤드는 미리 설정된 액세스 리소스 오버헤드 조건을 충족한다. 일부 실시예에서, 제1 행렬의 규모 정보는 제2 행렬과 무관한 제1 초기 서브 규모 값을 포함하고, 제2 행렬의 규모 정보는 제1 행렬과 무관한 제2 초기 서브 규모 값을 포함하고, 제1 목표 서브 규모 정보는 제1 목표 서브 규모 값을 포함하고, 제2 목표 서브 규모 정보는 제2 목표 서브 규모 값을 포함한다. 일부 실시예에서, 제2 결정 모듈은 또한 제2 저장 공간의 용량과 제2 초기 서브 규모 값 사이의 비율에 따라, 제1 목표 서브 규모 값을 결정하기 위해 사용된다. 일부 실시예에서, 제3 결정 모듈은 또한 제1 저장 공간의 용량과 제1 목표 서브 규모 값 사이의 비율에 따라, 제2 목표 서브 규모 값을 결정하기 위해 사용된다. 일부 실시예에서, 제4 결정 모듈은 또한 제1 초기 서브 규모 값과 제2 목표 서브 규모 값 사이의 비율에 따라, 목표 분할 정보를 결정하기 위해 사용된다. 일부 실시예에서, 제3 행렬은 멀티 레벨의 캐시 유닛의 적어도 2개의 레벨의 캐시 유닛에 저장되고, 적어도 2개 의 레벨의 캐시 유닛은 제1 캐시 유닛 및 제2 캐시 유닛을 포함한다. 일부 실시예에서, 제5 결정 모듈은 제1 결정 서브 모듈 및 제2 결정 서브 모듈을 포함한다. 제1 결정 서브 모듈 은 행렬 곱셈 동작을 수행하는 계산 유닛의 대역폭 정보 및 I개의 행렬 조합 각각의 목표 분할 정보에 따라, I 개의 행렬 조합 각각의 액세스 리소스 오버헤드를 결정하기 위해 사용된다. 제2 결정 서브 모듈은 I개의 행렬 조합 각각의 액세스 리소스 오버헤드에 따라, I개의 행렬 조합에서 목표 행렬 조합을 결정하기 위해 사용된다. 일부 실시예에서, 대역폭 정보는, 계산 유닛과 저장 유닛 사이의 메모리 대역폭 및 멀티 레벨의 캐시 유닛 사이 의 적어도 하나의 캐시 대역폭을 포함한다. 제1 결정 서브 모듈은 제1 결정 유닛, 제2 결정 유닛 및 제3 결정 유닛을 포함한다. 제1 결정 유닛은 제1 행렬의 데이터량, 제2 행렬의 데이터량, 제3 행렬의 데이터량 및 메모리 대역폭에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하기 위해 사용된다. 제2 결정 유닛은 목표 분할 정보, 제3 행렬의 목표 서브 데이터량 및 캐시 대역폭에 따라, 제2 액세스 시간 리소스 오버헤드를 결정하기 위해 사 용된다. 목표 서브 데이터량은 제3 행렬이 목표 캐시 유닛에 저장되는 데이터량이고, 목표 캐시 유닛은 멀티 레 벨의 캐시 유닛 중 제1 캐시 유닛 이외의 캐시 유닛이다. 제3 결정 유닛은, 제1 액세스 시간 리소스 오버헤드 및 제2 액세스 시간 리소스 오버헤드에 따라, 행렬 조합의 액세스 리소스 오버헤드를 결정하기 위해 사용된다. 일부 실시예에서, 제1 결정 유닛은 제1 결정 서브 유닛 및 제2 결정 서브 유닛을 포함한다. 제1 결정 서브 유닛 은 제1 행렬의 데이터량, 제2 행렬의 데이터량 및 제3 행렬의 데이터량에 따라, 총 데이터량을 결정하기 위해 사용된다. 제2 결정 서브 유닛은 총 데이터량 및 메모리 대역폭 사이의 비율에 따라, 제1 액세스 시간 리소스 오버헤드를 결정하기 위해 사용된다. 일부 실시예에서, 목표 분할 정보는 목표 분할 매개 변수 값을 포함한다. 제2 결정 유닛은 제3 결정 서브 유닛 및 제4 결정 서브 유닛을 포함한다. 제3 결정 서브 유닛은, 제3 행렬의 목표 서브 데이터량과 캐시 대역폭 사이 의 비율에 따라, 서브 액세스 시간 리소스 오버헤드를 결정하기 위해 사용된다. 제4 결정 서브 유닛은, 서브 액 세스 시간 리소스 오버헤드와 목표 분할 매개 변수 값 사이의 곱에 따라, 제2 액세스 시간 리소스 오버헤드를결정하기 위해 사용된다. 일부 실시예에서, 목표 행렬 조합의 제1 목표 서브 규모 정보 및 제2 목표 서브 규모 정보에 따라, 행렬 곱셈 동작을 수행하기 위해 사용되는 수행 모듈을 또한 포함한다. 일부 실시예에서, 미리 설정된 액세스 리소스 오버헤드 조건은 목표 행렬 조합에 대응하는 액세스 리소스 오버 헤드가 미리 설정된 액세스 리소스 오버헤드 임계값보다 작거나 같은 것, 및 I개의 행렬 조합 중 목표 행렬 조 합에 대응하는 액세스 리소스 오버헤드가 가장 작은 것을 적어도 하나를 포함한다. 이해할 수 있는 것은, 위에서 본 개시의 장치 설명하였다. 아래에서 이 장치를 포함하는 전자 기기를 설명한다. 도 5는 본 개시의 일 실시예에 따른 전자 기기의 개략도이다. 도 5에 도시된 바와 같이, 전자 기기는 본 개시에서 제공되는 행렬 곱셈 데이터의 처리 장치를 포함할 수 있다. 행렬 곱셈 데이터의 처리 장치는 예를 들어 상술한 장치일 수 있다. 본 개시의 기술 방안에서 언급된 사용자 개인 정보의 수집, 저장, 사용, 가공, 전송, 제공 및 공개 등의 처리는 모두 관련 법률과 법규의 규정에 부합되고 공서 양속을 위반하지 않는다. 본 개시의 실시예에 따르면, 본 개시는 또한 전자 기기와 판독 가능 저장 매체와 컴퓨터 프로그램 제품을 제공 한다. 도 6은 본 개시의 실시예를 실현할 수 있는 전자 기기의 블록도를 예시적으로 도시하는 것이다. 전자 기기 는 랩톱 컴퓨터, 데스크톱 컴퓨터, 워크 스테이션, 개인 휴대 정보 단말기, 서버, 블레이드 서버, 메인 프레임 컴퓨터 및 다른 적합한 컴퓨터 등 다양한 형태의 디지털 컴퓨터를 의미한다. 전자 기기는 개인 디지털 프로세서, 셀룰러 전화, 스마트 폰, 웨어러블 디바이스 및 다른 유형의 컴퓨팅 장치 등 다양한 형태의 이동 장 치를 의미할 수도 있다. 본 문장에 개시되는 부품, 이들의 연결과 관계 및 이들의 기능은 오직 예시일 뿐이고, 본 문장에서 설명 및/또는 요구되는 본 개시의 실현을 제한하는 것은 아니다. 도 6에 도시된 바와 같이, 전자 기기에는 리드 온리 메모리(ROM)에 저장된 컴퓨터 프로그램 또는 저 장 유닛으로부터 랜덤 액세스 메모리(RAM)로 로딩되는 컴퓨터 프로그램에 근거하여 여러가지 적합한 동작과 처리를 수행할 수 있는 계산 유닛이 포함된다. RAM에는, 전자 기기의 동작에 필요한 다 양한 프로그램 및 데이터가 더 저장될 수 있다. 계산 유닛, ROM 및 RAM은 버스를 통해 서 로 연결된다. 입력/출력(I/O) 인터페이스도 버스에 연결된다. 전자 기기에서의 복수의 부품은 I/O 인터페이스에 연결되며, 상기 부품에는, 예를 들면 키보드, 마우 스 등과 같은 입력 유닛, 예를 들면 다양한 유형의 디스플레이, 스피커 등과 같은 출력 유닛, 예를 들면 디스크, 광 디스크 등과 같은 저장 유닛; 및 예를 들면 네트워크 카드, 모뎀(modem), 무선통신 송수 신기 등과 같은 통신 유닛이 포함된다. 통신 유닛은 전자 기기가 인터넷과 같은 컴퓨터 네트워 크 및/또는 다양한 텔레콤 네트워크를 통해 기타 기기와 정보/데이터를 교환할 수 있도록 허용한다. 계산 유닛은 처리 능력과 컴퓨팅 능력을 갖는 다양한 범용 및/또는 전용 처리 컴포넌트일 수 있다. 계산 유닛의 일부 예시에는, 중앙 처리 유닛(CPU), 그래픽 처리 유닛(GPU), 다양한 전용 인공지능(AI) 컴퓨팅 칩, 머신 러닝 모델 알고리즘을 수행하는 다양한 계산 유닛, 디지털 신호 프로세서(DSP) 및 임의의 적합한 프로 세서, 컨트롤러, 마이크로 컨트롤러 등이 포함되지만 이에 한정되는 것은 아니다. 계산 유닛은, 데이터 처 리 방법과 같은 위에서 설명된 각 방법과 처리를 수행한다. 예를 들면, 일부 실시예에서, 데이터 처리 방법은 컴퓨터 소프트웨어 프로그램으로 구현되어, 저장 유닛과 같은 기계 판독가능 매체에 유형적으로 포함될 수 있다. 일부 실시예에서, 컴퓨터 프로그램의 일부 또는 전부는 ROM 및/또는 통신 유닛을 거쳐 전자 기 기에 로딩 및/또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로딩되어 계산 유닛에 의해 수행 될 경우, 위에서 설명한 데이터 처리 방법의 하나 이상의 단계를 수행할 수 있다. 선택적으로, 기타 실시예에서, 계산 유닛은 기타 임의의 적합한 방식(예를 들면, 펌웨어를 이용함)을 통해 데이터 처리 방법 을 수행하도록 구성될 수 있다. 본 문에서 상기 설명한 시스템 및 기술의 다양한 실시형태는 디지털 전자 회로 시스템, 집적 회로 시스템, 현장 프로그래밍 가능 게이트 어레이(FPGA), 전용 집적 회로(ASIC), 전용 표준 제품(ASSP), 시스템 온 칩 시스템 (SOC), 복잡 프로그래밍 가능 로직 디바이스(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합 에서 실현될 수 있다. 상기 다양한 실시형태는 다음과 같은 내용을 포함할 수 있다. 하나 이상의 컴퓨터 프로그 램에서 실시되고, 상기 하나 이상의 컴퓨터 프로그램은 적어도 하나의 프로그래밍 가능 프로세서를 포함하는 프로그래밍 가능 시스템에서 수행 및/또는 해석될 수 있다. 상기 프로그래밍 가능 프로세서는 전용 또는 범용 프 로그래밍 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치로부 터 데이터 및 명령어를 수신하며, 또한 상기 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장 치에 데이터 및 명령어를 전송할 수 있다. 본 발명의 방법을 실시하기 위한 프로그램 코드는 하나 이상의 프로그래밍 언어의 임의의 조합을 적용하여 작성 할 수 있다. 프로그램 코드가 프로세서 또는 컨트롤러에 의해 수행될 시 흐름도 및/또는 블록도에서 규정된 기 능/동작이 실시되도록, 이러한 프로그램 코드를 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그래밍 가능 데이터 처리 장치의 프로세서 또는 컨트롤러에 제공할 수 있다. 프로그램 코드는 완전히 기계에서 수행되거나, 부분적 으로 기계에서 수행되거나, 개별적인 소프트웨어 패키지(Software Package)로서 부분적으로 기계에서 수행되며, 부분적으로 원격 기계에서 수행되거나, 완전히 원격 기계 또는 서버에서 수행될 수 있다. 본 발명의 문맥에서, 기계 판독가능 매체는 유형적인 매체일 수 있다. 상기 기계 판독가능 매체에는, 명령어 수 행 시스템, 장치 또는 기기에 사용되거나 또는 명령어 수행 시스템, 장치 또는 기기와 결합하여 사용되도록 제 공되는 프로그램이 포함되거나 저장될 수 있다. 기계 판독가능 매체는 기계 판독가능 신호 매체 또는 기계 판독 가능 저장 매체일 수 있다. 기계 판독가능 매체에는, 전자, 자성, 광학, 전자기, 적외선 또는 반도체 시스템, 장치 또는 기기, 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있지만 이에 한정되는 것은 아니다. 기계 판독가능 저장 매체의 더 구체적인 예시에는 하나 이상의 와이어에 의한 전기적인 연결, 휴대용 컴퓨터 디스크, 하드디스크, 랜덤 액세스 메모리(RAM), 리드 온리 메모리(ROM), 소거 가능 및 프로그램 가능 리드 온리 메모리 (EPROM 또는 플래시 메모리), 광섬유，휴대용 콤팩트 디스크 리드 온리 메모리(CD-ROM), 광학 저장 장치, 자기 저장 장치 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있다. 사용자와의 인터랙션을 제공하기 위해, 여기에서 설명하는 시스템과 기술을 컴퓨터에서 수행할 수 있다. 상기 컴퓨터는 사용자에게 정보를 표시하기 위한 디스플레이 장치(예를 들면, CRT(음극선관) 디스플레이 또는 LCD(액 정 디스플레이)) 및 키보드, 포인팅 장치(예를 들면, 마우스 또는 트랙 볼)를 포함한다. 사용자는 상기 키보드 및 포인팅 장치를 통해 입력을 컴퓨터에 제공한다. 기타 종류의 장치는 사용자와의 인터랙션을 제공하기 위해 사용될 수도 있다. 예를 들면, 사용자에게 제공하는 피드백은 임의의 형태의 센싱 피드백(예를 들면, 시각 피드 백, 청각 피드백 또는 촉각 피드백)일 수 있으며, 또한 사용자로부터의 입력은 임의의 형태(소리 입력, 음성 입 력 또는 촉각 입력을 포함)로 수신될 수 있다. 여기에서 설명하는 시스템 및 기술을 백그라운드 부품을 포함하는 컴퓨팅 시스템(예를 들면, 데이터 서버), 또 는 미들웨어 부품을 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버), 또는 프론트 부품을 포함하는 컴 퓨팅 시스템(예를 들면, 그래픽 유저 인터페이스 또는 웹 브라우저를 구비하는 사용자 컴퓨터, 사용자는 상기 그래픽 유저 인터페이스 또는 웹 브라우저를 통해 여기에서 설명하는 시스템 및 기술의 실시형태와 인터랙션을 진행할 수 있음), 또는 상기 백그라운드 부품, 미들웨어 부품 또는 프론트 부품의 임의의 조합을 포함하는 컴퓨 팅 시스템에서 수행할 수 있다. 임의의 형태 또는 매체의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통 해 시스템의 부품을 서로 연결할 수 있다. 통신 네트워크의 예시는 근거리 통신망(LAN), 광대역 통신망(WAN) 및 인터넷을 포함한다. 컴퓨터 시스템은 클라이언트 및 서버를 포함한다. 클라이언트 및 서버는 일반적으로 서로 멀리 떨어져 있으며, 통신망을 통해 인터랙션을 진행한다. 해당 컴퓨터에서 수행되고, 또한 서로 클라이언트-서버 관계를 갖는 컴퓨 터 프로그램을 통해 클라이언트 및 서버의 관계를 생성한다. 상기의 다양한 형태의 프로세스를 이용하여, 단계를 다시 순서 배열, 추가 또는 삭제할 수 있음을 이해해야 한 다. 예를 들면, 본 발명에 기재된 각 단계는 병행하여 수행할 수 있고, 순서대로 수행할 수도 있으며, 서로 다 른 순서로 수행할 수도 있는데, 본 발명에 의해 개시되는 기술방안이 기대하는 결과를 실현할 수만 있다면, 이 에 대해 제한하지 않는다. 상기 구체적인 실시형태는 본 발명의 보호 범위에 대해 제한하지 않는다. 당업자는 설계 요구와 기타 요인에 따 라 다양한 수정, 조합, 서브 조합 및 대체를 진행할 수 있음을 이해해야 한다. 본 발명의 사상 및 원칙 내에서 진행되는 수정, 균등한 교체 및 개선 등은 모두 본 발명의 보호 범위에 포함되어야 한다. 도면 도면1 도면2 도면3a 도면3b 도면4 도면5 도면6"}
{"patent_id": "10-2025-0029761", "section": "도면", "subsection": "도면설명", "item": 1, "content": "첨부된 도면은 본 해결 수단을 더 잘 이해하기 위한 것이며, 본 개시에 대해 한정하지 않는다. 여기서, 도 1은 본 개시의 일 실시예에 따른 행렬 곱셈 동작에 관한 복수의 행렬의 액세스의 개략도이고; 도 2는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 처리 방법의 개략적인 흐름도이고; 도 3a는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 개략도이고; 도 3b는 본 개시의 일 실시예에 따른 복수의 서브 행렬의 개략도이고; 도 4는 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 처리 장치의 개략적인 블록도이고; 도 5는 본 개시의 일 실시예에 따른 전자 기기의 개략도이고; 도 6은 본 개시의 일 실시예에 따른 행렬 곱셈 데이터의 처리 방법을 적용할 수 있는 전자 기기의 블록도이다."}
