{"patent_id": "10-2022-0154379", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0160518", "출원번호": "10-2022-0154379", "발명의 명칭": "액세스 방법, 장치, 전자 기기 및 컴퓨터 저장 매체", "출원인": "베이징 바이두 넷컴 사이언스 테크놀로지 컴퍼니", "발명자": "마, 얀준"}}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "액세스 방법에 있어서, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 단계; 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 단계; 및상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 단계 - 상기 액세스 기기가 액세스하는상기 타겟 모델의 모델 프레임워크의 인터페이스는, 상기 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 를 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 툴킷 데이터에 따라, 상기 액세스 기기의 유형을 결정하는 단계; 및상기 액세스 기기의 유형에 따라, 상기 모델 프레임워크에서 상기 액세스 기기의 인터페이스를 결정하는 단계;를 더 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 인터페이스는 상기 액세스 기기의 공통성에 따라, 상기 모델 프레임워크에서 상기 액세스 기기에 대응되는구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 단계는, 상기 인터페이스에 따라, 상기 액세스 기기의 액세스 방식을 결정하는 단계; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 단계; 및상기 명령 데이터를 실행하여, 상기 상기 실행에 관련된 동작을 수행하는 단계; 를 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2022-0160518-3-제4항에 있어서, 상기 액세스 방식이 연산자 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산그래프를 포함하고; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 단계는, 상기 제1 계산 그래프를 프레임워크 연산자로 매핑하는 단계; 및상기 프레임워크 연산자 및 상기 액세스 기기의 기기 연산자에 따라, 상기 액세스 기기의 명령 데이터를 생성하는 단계; 를 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 액세스 방식이 계산 그래프 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1계산 그래프 및 상기 액세스 기기의 제2 계산 그래프를 포함하고; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 단계는, 상기 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하는 단계; 및상기 그래프 중간 표현 및 상기 제2 계산 그래프에 따라, 상기 명령 데이터를 생성하는 단계; 를 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 단계는, 상기 액세스 기기의 정보에 따라, 상기 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유닛을 결정하는 단계; 및상기 최적화될 계산 그래프 유닛에 대해 상기 최적화 동작을 수행하는 단계; 를 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 타겟 모델의 모델 부분에 액세스하는 단계; 및상기 모델 부분 및 상기 모델 프레임워크에 따라, 상기 타겟 모델을 생성하는 단계; 를 더 포함하는,것을 특징으로 하는 액세스 방법."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "액세스 장치에 있어서,타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 계산 그래프 결정 모듈; 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 그래프 최적화 모듈; 및상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기공개특허 10-2022-0160518-4-액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 실행 모듈 - 상기 액세스 기기가 액세스하는 상기 타겟 모델의 모델 프레임워크의 인터페이스는, 상기 액세스 기기의 툴킷 데이터에 따라 결정됨 - ;을 포함하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 툴킷 데이터에 따라, 상기 액세스 기기의 유형을 결정하는 유형 결정 모듈; 및상기 액세스 기기의 유형에 따라, 상기 모델 프레임워크에서 상기 액세스 기기의 인터페이스를 결정하는 통용인터페이스 모듈; 을 더 포함하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 인터페이스는 상기 액세스 기기의 공통성에 따라, 상기 모델 프레임워크에서 상기 액세스 기기에 대응되는구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 실행 모듈은, 상기 인터페이스에 따라, 상기 액세스 기기의 액세스 방식을 결정하는 액세스 방식 유닛; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 명령 데이터 유닛; 및 상기 명령 데이터를 실행하여, 상기 상기 실행에 관련된 동작을 수행하는 실행 구현 유닛; 을 포함하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 액세스 방식이 연산자 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산그래프를 포함하고; 상기 명령 데이터 유닛은 또한, 상기 제1 계산 그래프를 프레임워크 연산자로 매핑하고; 상기 프레임워크 연산자 및 상기 액세스 기기의 기기 연산자에 따라, 상기 액세스 기기의 명령 데이터를 생성하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "공개특허 10-2022-0160518-5-제12항에 있어서,상기 액세스 방식이 계산 그래프 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1계산 그래프 및 상기 액세스 기기의 제2 계산 그래프를 포함하고; 상기 명령 데이터 유닛은 또한, 상기 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하고; 상기 그래프 중간 표현 및 상기 제2 계산 그래프에 따라, 상기 명령 데이터를 생성하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제9항에 있어서,상기 그래프 최적화 모듈은, 상기 액세스 기기의 정보에 따라, 상기 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유닛을 결정하는 결정 유닛; 및상기 최적화될 계산 그래프 유닛에 대해 상기 최적화 동작을 수행하는 수행 유닛; 을 포함하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제9항 내지 제15항 중 어느 한 항에 있어서,상기 타겟 모델의 모델 부분에 액세스하는 액세스 모듈; 및 상기 모델 부분 및 상기 모델 프레임워크에 따라, 상기 타겟 모델을 생성하는 모델 생성 모듈; 을 더 포함하는,것을 특징으로 하는 액세스 장치."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "전자 기기에 있어서,적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리; 를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적어도 하나의 프로세서에 의해 실행될 경우, 상기 적어도 하나의 프로세서가 제1항 내지 제8항 중 어느 한 항의방법을 수행하는,것을 특징으로 하는 전자 기기."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 저장 매체에 있어서, 상기 컴퓨터 명령은 컴퓨터가 제1항 내지 제8항 중 어느 한 항의 방법을 수행하도록 하는,것을 특징으로 하는 비일시적 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2022-0154379", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "공개특허 10-2022-0160518-6-비일시적 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서,상기 컴퓨터 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제8항 중 어느 한 항의 방법이 구현되는, 것을 특징으로 하는 컴퓨터 프로그램."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 액세스 방법, 장치, 전자 기기 및 컴퓨터 저장 매체를 제공하는 바, 컴퓨터"}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것으로,"}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "특히 칩, 딥러닝 등 인공지능 기술분야에 관한 것이다. 구체적인 구현 수단은, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 단계; 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최 적화하는 단계; 및 상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그 래프에 따라, 상기 액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 단계를 포함하며, 상기 액세스 기기가 액세스하는 상기 타겟 모델의 모델 프레임워크의 인터페이스는, 상기 액세스 기기의 툴킷 데이터 에 따라 결정된다. 본 발명의 실시예는 상이한 액세스 기기에 대한 모델 프레임워크의 범용성을 향상시킨다. 대 표 도 - 도1"}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 3, "content": "공개특허10-2022-0160518 CPC특허분류 G06F 8/38 (2013.01) G06F 9/449 (2018.02) G06N 3/04 (2013.01) G06N 3/08 (2013.01) 발명자 후, 샤오광 중국 베이징 100085 하이디안 디스트릭트 샹디 10 번가 넘버 10, 바이두 캠퍼스 2층 유, 디안하이 중국 베이징 100085 하이디안 디스트릭트 샹디 10 번가 넘버 10, 바이두 캠퍼스 2층우, 티안 중국 베이징 100085 하이디안 디스트릭트 샹디 10 번가 넘버 10, 바이두 캠퍼스 2층 리, 치 중국 베이징 100085 하이디안 디스트릭트 샹디 10 번가 넘버 10, 바이두 캠퍼스 2층명 세 서 청구범위 청구항 1 액세스 방법에 있어서, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 단계; 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 단계; 및 상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기 액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 단계 - 상기 액세스 기기가 액세스하는 상기 타겟 모델의 모델 프레임워크의 인터페이스는, 상기 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 를 포 함하는, 것을 특징으로 하는 액세스 방법. 청구항 2 제1항에 있어서, 상기 툴킷 데이터에 따라, 상기 액세스 기기의 유형을 결정하는 단계; 및 상기 액세스 기기의 유형에 따라, 상기 모델 프레임워크에서 상기 액세스 기기의 인터페이스를 결정하는 단계; 를 더 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 3 제2항에 있어서, 상기 인터페이스는 상기 액세스 기기의 공통성에 따라, 상기 모델 프레임워크에서 상기 액세스 기기에 대응되는 구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된, 것을 특징으로 하는 액세스 방법. 청구항 4 제1항에 있어서, 상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기 액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 단계는, 상기 인터페이스에 따라, 상기 액세스 기기의 액세스 방식을 결정하는 단계; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 단계; 및 상기 명령 데이터를 실행하여, 상기 상기 실행에 관련된 동작을 수행하는 단계; 를 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 5 제4항에 있어서, 상기 액세스 방식이 연산자 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산 그래프를 포함하고; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터 를 생성하는 단계는, 상기 제1 계산 그래프를 프레임워크 연산자로 매핑하는 단계; 및 상기 프레임워크 연산자 및 상기 액세스 기기의 기기 연산자에 따라, 상기 액세스 기기의 명령 데이터를 생성하 는 단계; 를 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 6 제4항에 있어서, 상기 액세스 방식이 계산 그래프 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산 그래프 및 상기 액세스 기기의 제2 계산 그래프를 포함하고; 상기 액세스 방식 및 상기 계산 그래프에 따 라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 단계는, 상기 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하는 단계; 및 상기 그래프 중간 표현 및 상기 제2 계산 그래프에 따라, 상기 명령 데이터를 생성하는 단계; 를 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 7 제1항에 있어서, 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 단계는, 상기 액세스 기기의 정보에 따라, 상기 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유 닛을 결정하는 단계; 및 상기 최적화될 계산 그래프 유닛에 대해 상기 최적화 동작을 수행하는 단계; 를 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 8 제1항에 있어서, 상기 타겟 모델의 모델 부분에 액세스하는 단계; 및 상기 모델 부분 및 상기 모델 프레임워크에 따라, 상기 타겟 모델을 생성하는 단계; 를 더 포함하는, 것을 특징으로 하는 액세스 방법. 청구항 9 액세스 장치에 있어서, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 계산 그래프 결정 모듈; 상기 액세스 기기의 정보에 따라, 상기 계산 그래프를 최적화하는 그래프 최적화 모듈; 및 상기 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 상기 계산 그래프에 따라, 상기액세스 기기에 대해 상기 타겟 모델의 실행에 관련된 동작을 수행하는 실행 모듈 - 상기 액세스 기기가 액세스 하는 상기 타겟 모델의 모델 프레임워크의 인터페이스는, 상기 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 을 포함하는, 것을 특징으로 하는 액세스 장치. 청구항 10 제9항에 있어서, 상기 툴킷 데이터에 따라, 상기 액세스 기기의 유형을 결정하는 유형 결정 모듈; 및 상기 액세스 기기의 유형에 따라, 상기 모델 프레임워크에서 상기 액세스 기기의 인터페이스를 결정하는 통용 인터페이스 모듈; 을 더 포함하는, 것을 특징으로 하는 액세스 장치. 청구항 11 제10항에 있어서, 상기 인터페이스는 상기 액세스 기기의 공통성에 따라, 상기 모델 프레임워크에서 상기 액세스 기기에 대응되는 구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된, 것을 특징으로 하는 액세스 장치. 청구항 12 제9항에 있어서, 상기 실행 모듈은, 상기 인터페이스에 따라, 상기 액세스 기기의 액세스 방식을 결정하는 액세스 방식 유닛; 상기 액세스 방식 및 상기 계산 그래프에 따라, 상기 액세스 기기를 호출하는 명령 데이터를 생성하는 명령 데 이터 유닛; 및 상기 명령 데이터를 실행하여, 상기 상기 실행에 관련된 동작을 수행하는 실행 구현 유닛; 을 포함하는, 것을 특징으로 하는 액세스 장치. 청구항 13 제12항에 있어서, 상기 액세스 방식이 연산자 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산 그래프를 포함하고; 상기 명령 데이터 유닛은 또한, 상기 제1 계산 그래프를 프레임워크 연산자로 매핑하고; 상기 프레임워크 연산자 및 상기 액세스 기기의 기기 연산자에 따라, 상기 액세스 기기의 명령 데이터를 생성하 는, 것을 특징으로 하는 액세스 장치. 청구항 14 제12항에 있어서, 상기 액세스 방식이 계산 그래프 액세스일 경우, 상기 계산 그래프는 상기 타겟 모델의 모델 프레임워크의 제1 계산 그래프 및 상기 액세스 기기의 제2 계산 그래프를 포함하고; 상기 명령 데이터 유닛은 또한, 상기 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하고; 상기 그래프 중간 표현 및 상기 제2 계산 그래프에 따라, 상기 명령 데이터를 생성하는, 것을 특징으로 하는 액세스 장치. 청구항 15 제9항에 있어서, 상기 그래프 최적화 모듈은, 상기 액세스 기기의 정보에 따라, 상기 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유 닛을 결정하는 결정 유닛; 및 상기 최적화될 계산 그래프 유닛에 대해 상기 최적화 동작을 수행하는 수행 유닛; 을 포함하는, 것을 특징으로 하는 액세스 장치. 청구항 16 제9항 내지 제15항 중 어느 한 항에 있어서, 상기 타겟 모델의 모델 부분에 액세스하는 액세스 모듈; 및 상기 모델 부분 및 상기 모델 프레임워크에 따라, 상기 타겟 모델을 생성하는 모델 생성 모듈; 을 더 포함하는, 것을 특징으로 하는 액세스 장치. 청구항 17 전자 기기에 있어서, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리; 를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적 어도 하나의 프로세서에 의해 실행될 경우, 상기 적어도 하나의 프로세서가 제1항 내지 제8항 중 어느 한 항의 방법을 수행하는, 것을 특징으로 하는 전자 기기. 청구항 18 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 저장 매체에 있어서, 상기 컴퓨터 명령은 컴퓨터가 제1항 내지 제8항 중 어느 한 항의 방법을 수행하도록 하는, 것을 특징으로 하는 비일시적 컴퓨터 판독 가능 저장 매체. 청구항 19 비일시적 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서, 상기 컴퓨터 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제8항 중 어느 한 항의 방법이 구현되는, 것을 특징으로 하는 컴퓨터 프로그램. 발명의 설명 기 술 분 야"}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 4, "content": "본 발명은 컴퓨터 기술 분야에 관한 것으로, 특히 칩, 딥러닝 등 인공지능 기술분야에 관한 것이다."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨터 기술의 발전에 따라, 딥러닝 등 인공지능 기술도 신속히 발전하고 있다. 딥러닝 모델 또는 기계학습 모 델과 같은 인공지능 분야의 모델은, 인공지능 기술에서 핵심적인 위치를 차지하고 있다. 모델의 실행은 일반적으로 하드웨어의 서포트가 필요하지만, 하드웨어 기기의 차이성은 모델의 실행에 일정한 적응 문제를 초래한다."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 액세스 방법, 장치, 전자 기기 및 컴퓨터 저장 매체를 제공한다."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 측면에 따르면, 액세스 방법을 제공하고, 상기 방법은, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 단계; 액세스 기기의 정보에 따라, 계산 그래프를 최적화하는 단계; 및 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하는 단계 - 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워 크의 인터페이스는, 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 를 포함한다. 본 발명의 다른 측면에 따르면, 액세스 장치를 제공하고, 상기 장치는, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 계산 그래프 결정 모듈; 액세스 기기의 정보에 따라, 계산 그래프를 최적화하는 그래프 최적화 모듈; 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하는 실행 모듈 - 액세스 기기가 액세스하는 타겟 모델의 모델 프 레임워크의 인터페이스는, 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 을 포함한다. 본 발명의 다른 측면에 따르면, 전자 기기를 제공하고, 상기 전자 기기는, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리; 를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적 어도 하나의 프로세서에 의해 실행될 경우, 상기 적어도 하나의 프로세서가 본 발명의 임의의 실시예에 따른 방 법을 수행한다. 본 발명의 다른 측면에 따르면, 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 저장 매체를 제공하고, 상기 컴퓨터 명령은 컴퓨터가 본 발명의 임의의 실시예에 따른 방법을 수행하도록 한다. 본 발명의 다른 측면에 따르면, 비일시적 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 제공하고, 상기 컴퓨터 프로그램이 프로세서에 의해 수행될 경우 본 발명의 임의의 실시예에 따른 방법이 구현된다. 본 발명의 기술에 따르면, 타겟 모델의 연산자 표현, 타겟 모델의 액세스 기기의 상황에 따라, 타겟 모듈의 실 행에 관련된 계산 그래프를 최적화시키고, 계산 그래프 최적화 및 인터페이스 액세스를 나누어 수행함으로, 인 터페이스를 액세스할 경우에만 인터페이스에 관한 개량을 하면 되고, 개량 후의 인터페이스가 더 많은 상이한 액세스 기기에 적응되도록 하고, 상이한 액세스 기기에 적응하는 난이도 및 데이터 보정량을 감소한다."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "이해해야 할 것은, 본 발명의 내용 부분에서 설명하는 내용은 본 발명 실시예의 관건 또는 중요한 특징을 식별 하기 위한 것이 아니고, 본 발명의 범위를 한정하기 위한 것도 아니다. 본 발명의 기타 특징은 이하의 명세서를 통해 용이하게 이해된다."}
{"patent_id": "10-2022-0154379", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 도면과 결합하여 본 발명의 예시적인 실시예를 설명한다. 여기에는 이해를 돕기 위해 본 발명의 실시예의 다양한 세부 사항을 포함하고, 실시예들은 단지 예시적인 것으로 간주되어야 한다. 때문에 본 발명에 속하는 기 술 분야의 통상의 기술자는 본 발명의 범위 및 사상을 벗어나지 않고 실시예에 여러가지 변경과 수정을 할 수 있다는 것을 인식해야 한다. 동시에 정확성과 간결성을 위해 하기의 설명에서 공지 기능과 구조에 대한 설명은 생략한다. 본 발명의 실시예에 따르면, 액세스 방법을 제공하고, 도1은 본 발명의 실시예에 따른 액세스 방법의 개략적인 흐름도이고, 당해 방법은 실행 모델의 액세스 기기에 응용될 수 있다. 예를 들면, 당해 장치는 단말 또는 서버 또는 기타 처리기기에 배치되어 실행될 경우, 액세스 기기의 계산 그래프 결정, 계산 그래프 최적화 등 단계를 수행할 수 있다. 여기서, 단말은 사용자 기기(UE, User Equipment), 모바일 기기, 셀룰러폰, 무선 전화기, 개인 정보 단말기(PDA, Personal Digital Assistant), 휴대 기기, 컴퓨팅 기기, 차량 탑재 기기 및 웨어러블 기기 등일 수 있다. 일부 구현 가능한 방식에서, 당해 방법은 프로세서를 통해 메모리에 저장된 컴퓨터 판독 가능 명 령을 호출하는 방식으로 구현될 수도 있다. 도1에 도시된 바와 같이, 액세스 방법은 단계 S11 내지 단계 S13을 포함한다. 단계 S11에서, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정한다. 단계 S12에서, 액세스 기기의 정보에 따라, 계산 그래프를 최적화한다. 단계 S13에서, 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하고, 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스는, 액세스 기기의 툴킷 데이터에 의해 결정된다. 본 실시예에서, 타겟 모델은 딥러닝 모델, 기계학습 모델 등 임의의 액세스 기기에서 실행 가능한 모델일 수 있 고, 데이터 처리 또는 데이터 전송 등 동작을 수행할 수 있다. 본 실시예의 액세스 기기는 단말, 서버 등 임의의 칩을 이용하여 실행 가능한 기기일 수 있다. 액세스 기기는 CUDA(Compute Unified Device Architecture, 컴퓨팅 통합 기기 아키텍처)와 같은 칩일 수도 있다. 예를 들면, 타겟 모델은 이미지 처리 모델, 텍스트 처리 모델, 비디오 데이터 또는 음성 데이터 처리 모델, 기 상 예측 모델, 교통 데이터 예측 모델, 자연 환경 데이터 예측 모델 및 인문행위 데이터 예측 모델 등일 수 있 다. 타겟 모델은 모델 프레임워크 및 모델 부분을 포함할 수 있다. 모델 프레임워크는 딥러닝 프레임워크일 수 있고, 딥러닝 초기 단계에서, 딥러닝 연구자는 모두 대량의 중복 코드를 써야 한다. 작업 효율을 향상시키기 위 해, 일부 연구자는 당해 코드를 1개의 프레임워크로 써서 공개하여, 모든 여구자가 같이 사용하도록 한다. 이어 서, 다양한 상이한 프레임워크가 나타난다. 시간의 흐름에 따라, 사용하기 가장 좋은 몇 개의 프레임워크는 많 은 사람의 사용에 의해 유행되고, 당해 주류 프레임워크를 딥러닝 프레임워크라고 할 수 있다. 딥러닝 프레임워크(Deep Learning Framework)는 인공지능 기술 시스템의 핵심 위치에 있고, 아래로 스마트 칩 (AI Chip) 및 대형 컴퓨터 시스템 자원을 관리하고, 위로 각 종 업무 모델과 업계 응용을 접속한다. 또한 글로 벌 스마트 칩 산업의 발전에 따라, 현재 스마트 칩 제품은 폭발적 성장 단계에 처해 있다. 더 많은 하드웨어에 적응하여 저층 기본 소프트웨어/하드웨어 시설이 일치하지 않음므로 초래된 고액 연구 원가를 차폐하는 것은 딥 러닝 프레임워크에서 해결해야 하는 핵심 문제이다. 딥러닝 프레임워크가 다양한 이성 하드웨어에 적응하는 주요 난점은 명령 세트 IP(IP핵심) 및 칩 아키텍처에서 상이한 스마트 칩 자체의 상이한 설계로 초래된, 상이한 하드웨어 플렛폼에 의해 대외로 제공된 SDK에 일정한 차이가 존재하는 것이다. 통상적으로, 1개의 인공지능 칩의 SDK는, 가장 기본적인 기기 구동 및 런타임 모듈; 딥러닝 태스크와 세트로 된 DNN 연산자 베이스, BLAS 수학 베이스(기초 선형 대수학 서브 프로그램), 통신 베이 스 등 모듈로 나누고; 그래프 컴파일 모듈은 딥러닝 모델의 구축, 최적화 및 수행(일부 하드웨어 서포트는, 통 상적으로는 신경망 컴파일러 또는 하드웨어 플랫폼 자체의 그래프 컴파일 엔진에 따름)을 서포트한다. 딥러닝 프레임워크가 저원가로 복수의 이성 하드웨어에 액세스하는 능력을 구비하도록, 프레임워크는 범용적인 하드웨 어 액세스 설계로 저층 하드웨어SDK(Software Development Kit, 소프트웨어 개발 툴킷)의 불일치로 초래된 고액 의 개발 원가를 차폐해야 한다. 또한 하드웨어에서 딥러닝 프레임워크의 실행 효율이 최적으로 되도록 하기 위 해, 프레임워크도 커스텀 가능한 그래프 최적화 전략을 구비하여 하드웨어 기기가 자체의 특점에 따라 조정하도 록 제공함으로, 프레임워크가 하드웨어 자체의 성능 우세를 충분히 발휘할 수 있도록 할 수 있다. 구체적으로, 딥러닝 프레임워크를 예를 들면 PaddlePaddle(패들패들), Tensorflow, Caffe(Convolutional Architecture for Fast Feature Embedding, 고속 피쳐 임베딩을 하는 컨볼루션 프레임워크), Theano, MXNet, Torch, PyTorch등 딥러닝 프레임워크일 수 있다. 다른 구현 가능한 방식에서, 모델 프레임워크는 기계학습 프레임워크일 수도 있다. 타겟 모델의 연산자 표현은, 타겟 모델의 모델 프레임워크의 연산자 표현일 수 있다. 액세스 기기의 정보는 액세스 기기의 유형, 수행 허락된 최적화 동작 등 정보일수 있다. 최적화 동작은 중복 동 작 합병, 불필요한 동작 삭제, 디폴트 동작 추가, 수정해야 하는 콘텐츠 또는 파라미터의 수정 등일 수 있다. 액세스 기기의 정보에 따라, 계산 그래프를 최적화하는 것은, 액세스 기기의 정보에 따라, 계산 그래프에 대해 수행할 수 있는 최적화 동작을 결정하는 것일 수 있다. 예를 들면, 계산 그래프의 N개의 추가 동작에 대한 합병 이 수행 가능한 최적화 동작인지 여부를 결정한다. 본 실시예에서, 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하는 단계는, 타겟 모델의 모델 프레임워크의 인터 페이스에 따라, 액세스 기기의 수행 데이터를 획득하는 단계, 및 액세스 기기의 수행 데이터 및 타겟 모델을 전 환하여 획득된 계산 그래프에 따라, 액세스 기기에 대해 동작을 수행하여, 액세스 기기에서 타겟 모델의 실행을 구현하는 단계를 포함할 수 있다. 본 실시예에서, 액세스 기기는 다수일 수 있다. 상이한 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크 의 인터페이스는 상이할 수 있고, 액세스 기기의 유형을 통해 모델 프레임워크의 인터페이스를 결정하고, 액세 스 기기의 툴킷 데이터에 따라, 액세스 기기의 유형을 결정할 수 있다. 액세스 기기가 임의의 사용 가능한 하드웨어일 경우, 액세스 기기의 툴킷 데이터는 SDK일 수 있다. 현재 주류의 딥러닝 프레임워크가 이성 하드웨어에 액세스하는 방법은 조기에 범용 CPU 및 엔비디아 GPU(Graphics Processing Unit, 그래프 프로세서)에 향한 하드웨어 적응 수단을 계속 사용하고, 밀착 결합의 액 세스 방식이다. 또한, 딥러닝 프레임워크는 프레임워크 자체의 기술 최적화 및 혁신을 관심하고, 프레임워크 자 체은 단독 모델 번호의 스마트 칩 등 액세스 기기 제품만 유지한다. 기타 이성 액세스 기기에 대한 서포트 및 적응 개발 작업은, 통상적으로 액세스 기기 기업에서 스스로 구현한다. 본 실시예에서, 타겟 모델의 연산자 표현, 타겟 모델의 액세스 기기의 상황에 따라, 타겟 모듈의 실행에 관련된 계산 그래프를 최적화시키고, 계산 그래프 최적화 및 인터페이스 액세스를 나누어 수행할 수 있으므로, 인터페 이스를 액세스할 경우에만 인터페이스에 관한 개량을 하면 되고, 개량 후의 인터페이스가 더 많은 상이한 액세 스 기기에 적응되도록 하고, 상이한 액세스 기기에 적응하는 난이도 및 데이터 보정량을 감소한다. 일 실시 방식에서, 액세스 방법은, 툴킷 데이터에 따라, 액세스 기기의 유형을 결정하는 단계; 및 액세스 기기의 유형에 따라, 모델 프레임워크에서 액세스 기기의 통용 인터페이스를 결정하는 단계; 를 더 포함 한다. 본 실시예에서, 툴킷 데이터에 따라, 액세스 기기의 유형을 결정하는 것은, 액세스 기기의 기업, 모델 번호, 실 행 조건, 최적화 조건, 또는 기타 액세스 기기와 상이한 개성화 정보 등을 결정하는 것일 수 있다. 액세스 기기의 유형에 따라, 모델 프레임워크에서 액세스 기기의 통용 인터페이스를 결정하는 것은, 액세스 기 기에 대응되는 특정 큰 범주의 통용 인터페이스일 수 있다. 예를 들면, 액세스 기기가 칩이고, 일 분류 방법에 따라, 칩을 제1 카테고리, 제2 카테고리 및 제3 카테고리 등으로 나눌 수 있다. 제1 카테고리는 또한 상이한 브 랜드, 모델 번호로 나눌 수 있고, 제1 카테고리의 칩에 대해 제1 통용 인터페이스를 설치하고, 제2 카테고리의 칩에 대해 제2 통용 인터페이스를 설치하고, 제3 카테고리의 칩에 대해 제3 통용 인터페이스를 설치하고, 이대 로 유추할 수 있다. 본 실시예에서, 칩의 카테고리에 대해, 통용 인터페이스를 설치할 수 있으므로, 분류를 하여 인터페이스의 구축 을 수행할 수 있어, 인터페이스 설정 구축의 작업량을 최소화시킬 수 있다. 일 실시 방식에서, 통용 인터페이스는 액세스 기기의 공통성에 따라, 모델 프레임워크에서 액세스 기기에 대응 되는 구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된 것이다. 본 실시예에서, 액세스 기기의 공통성에 따라 추상화 및 캡슐화하여, 통용 인터페이스를 생성하는 것은, 모든 액세스 기기 또는 특정 카테고리의 액세스 기기의 공통성에 따라, 추상화 및 캡슐화하여 통용 인터페이스를 생 성하는 것을 가리킬 수 있다. 액세스 기기의 공통성은, 액세스 기기와 인터페이스가 연결되는데 요구되거나 관련된 정보의 공통 특성일 수 있 다. 본 실시예에서, 구동 및 런타임 인터페이스는 단독 구동 인터페이스 및 단독 런타임 인터페이스를 포함할 수 있 고; 구동 인터페이스와 런타임 인터페이스가 결합된 인터페이스를 포함할 수도 있다. 액세스 기기의 공통성에 따라 인터페이스의 추상화 및 캡슐화를 수행하므로, 인터페이스의 범용성을 향상시킬 수 있다. 일 실시 방식에서, 도2에 도시된 바와 같이, 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페 이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하는 단계는 단계 S21 내지 단계 S23을 포함한다. 단계 S21에서, 인터페이스에 따라, 액세스 기기의 액세스 방식을 결정한다. 단계 S22에서, 액세스 방식 및 계산 그래프에 따라, 액세스 기기를 호출하는 명령 데이터를 생성한다. 단계 S23에서, 명령 데이터를 실행하여, 상기 실행에 관련된 동작을 수행한다. 액세스 기기의 유형을 통해 액세스 기기에 대응되는 인터페이스를 결정할 수 있으므로, 인터페이스에 따라 액세 스 방식을 결정하는 것은, 액세스 기기의 유형에 따라 액세스 기기에 대응되는 액세스 방식을 결정하는 것일 수있다. 액세스 기기의 SDK의 정보에 따라, 액세스 기기에 대응되는 액세스 방식을 결정하는 것일 수도 있다. 본 실시예에서, 상이한 액세스 기기에 대해 상이한 액세스 방식을 사용할 수 있으므로, 타겟 모델이 상이한 종 류, 모델 번호, 브랜드 또는 기업의 액세스 기기에 대한 범용성을 더 향상시킨다. 일 실시 방식에서, 액세스 방식이 연산자 액세스일 경우, 계산 그래프는 타겟 모델의 모델 프레임워크의 제1 계 산 그래프를 포함하고; 액세스 방식 및 계산 그래프에 따라, 액세스 기기를 호출하는 명령 데이터를 생성하는 단계는, 제1 계산 그래프를 프레임워크 연산자로 매핑하는 단계; 및 프레임워크 연산자 및 액세스 기기의 기기 연산자에 따라, 액세스 기기의 명령 데이터를 생성하는 단계; 를 포 함한다. 계산 그래프는 모델 프레임워크의 제1 계산 그래프를 포함할 뿐만 아니라, 모델 부분의 계산 그래프도 포함한다. 제1 계산 그래프를 프레임워크 연산자로 매핑하는 것은, 최적화된 제1 계산 그래프를 프레임워크 연산자로 매핑 하는 것일 수 있다. 계산 그래프의 매핑을 할 경우, 미리 설정된 매핑 테이블을 참조하여 매핑할 수 있다. 프레임워크 연산자 및 액세스 기기의 기기 연산자에 따라, 액세스 기기의 명령 데이터를 생성하는 것은, 프레임 워크 연산자 및 기기 연산자를 융합하고, 융합된 연산자를 액세스 기기를 호출 또는 구동할 수 있는 코드로 전 환하는 것일 수 있다. 본 실시예에서, 계산 그래프를 연산자로 매핑할 수 있고, 연산자에 따라 명령 데이터를 생성함으로, 액세스 기 기를 실행할 수 있어, 타겟 모델이 액세스 기기에서 실행되도록 한다. 또한, 본 실시예는 연산자 액세스의 방식 을 제공하여, 연산자 액세스를 서포트할 수 있는 기기가 액세스하도록 한다. 일 실시 방식에서, 액세스 방식이 계산 그래프 액세스일 경우, 계산 그래프는 타겟 모델의 모델 프레임워크의 제1 계산 그래프 및 액세스 기기의 제2 계산 그래프를 포함하고; 액세스 방식 및 계산 그래프에 따라, 액세스 기기를 호출하는 명령 데이터를 생성하는 단계는, 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하는 단계; 및 그래프 중간 표현 및 제2 계산 그래프에 따라, 명령 데이터를 생성하는 단계; 를 포함한다. 본 실시예에서, 그래프 중간 표현은 이미지 수, 방향성 그래프 데이터 등일 수 있다. 본 실시예는 계산 그래프 액세스의 액세스 방식을 제공할 수 있어, 계산 그래프 만을 통해 액세스하는 액세스 기기도 타겟 모델을 실행할 수 있도록 한다. 본 실시예에서, 계산 그래프의 최적화는, 제1 계산 그래프, 제2 계산 그래프의 최적화 중의 적어도 하나일 수 있다. 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하는 것은, 미리 설정 된 연산자 중간 표현 정의에 따라, 제1 계산 그래프 중의 적어도 하나의 계산 그래프 유닛을 그래프 중간 표현 유닛으로 생성하고, 생성된 그래프 중간 표현 유닛 중의 적어도 하나에 따라, 제1 자율 계산 그래프의 그래프 중간 표현을 생성한다. 구현 가능한 방식에서, 타겟 모델은 액세스 기기의 SDK에 따라, 계산 그래프 액세스 또는 연산자 액세스를 선택 할 수 있다. 구현 가능한 방식에서, 액세스 기기의 정보에 따라, 계산 그래프를 최적화하는 단계는, 액세스 기기의 정보에 따라, 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유닛을 결정하 는 단계; 및 최적화될 계산 그래프 유닛에 대해 최적화 동작을 수행하는 단계; 를 포함한다. 본 실시예에서, 계산 그래프는 복수의 계산 그래프 유닛을 포함할 수 있다. 각 계산 그래프 유닛은 컨볼루션 동 작, 덧셈 동작 및 액티브 동작 등과 같은 컴퓨팅 동작에 대응될 수 있다. 복수의 계산 그래프 유닛은 중복된 계산 그래프 유닛 또는 콘텐츠가 각각 상이한 계산 그래프 유닛을 포함할 수 있다. 최적화될 계산 그래프 유닛은, 콘텐츠가 중복된 계산 그래프 유닛, 합병 수행 또는 서로 상쇄된 계산 그래프 유 닛 등일 수 있다. 예를 들면, 최적화될 계산 그래프 유닛 중의 하나는 덧셈 동작이고, 다른 하나는 감법 동작이 고, 덧셈 동작의 파라미터와 감법 동작의 파라미터가 같을 경우, 양자는 서로 상쇄될 수 있고, 덧셈 계산 그래 프 유닛 및 감법 계산 그래프 유닛을 삭제할 수 있다. 본 실시예에서, 계산 그래프 유닛에 대해 최적화 동작을 수행하므로, 타겟 모델을 실행할 경우, 중복된 실행 단 계를 방지하고, 실행 효율을 향상시킬 수 있다. 일 실시 방식에서, 도3에 도시된 바와 같이, 액세스 방법은 단계 S31 내지 단계 S32를 포함한다. 단계 S31에서, 타겟 모델의 모델 부분에 액세스한다. 단계 S32에서, 모델 부분 및 모델 프레임워크에 따라, 타겟 모델을 생성한다. 본 실시예에서, 타겟 모델의 모델 부분은 비범용 코드로 구성된 부분일 수 있고, 훈련되고, 최적화된 모델일 수 있고, 최적화될 모델일 수도 있다. 모델 부분 및 모델 프레임워크에 따라, 타겟 모델을 생성하는 것은, 모델 부분을 모델 프레임워크로 입력하여, 모델 부분과 모델 프레임워크가 결합되어 타겟 모델을 획득하는 것일 수 있다. 본 실시예에서, 액세스 기기는 타겟 모델의 모델 프레임워크를 통해, 타겟 모델에 액세스될 수 있다. 본 실시예의 타겟 모델은 모델 부분 및 모델 프레임워크를 포함하므로, 액세스 기기와 연결되는 부분은, 모델 프레임워크 부분을 최적화하는 것을 통해, 타겟 모델의 범용성을 향상시킬 수 있다. 우선, 딥러닝 모델은 딥러닝 프레임워크의 API를 통해 딥러닝 프레임워크의 계산 그래프(예를 들면 방향성 그래 프)로 전환되어 표시되고, 딥러닝 프레임워크는 계산 그래프에 대해 수행 및 호출하기 전에 먼저 계산 그래프를 분석 및 최적화한다. 당해 최적화는 범용되고 하드웨어와 무관한 최적화 전략만 가리킨다. 그리고 상이한 유형 의 하드웨어 SDK, 또는 같은 하드웨어 SDK에 상이한 액세스 방식을 제공한다. 구체적으로 단일 연산자 액세스 방법 및 계산 그래프 액세스 방법을 포함한다. 도4A를 참조하면, 준비 단계에서, 모델 부분은 딥러닝 프레임워크를 입력하고, 딥러닝 프레임워크와 융합하고, 딥러닝 프레임워크 인터페이스에서 타겟 모델을 출력하며, 타겟 모델에 대해 액세스 기기의 하드웨어와 무관한 범용 최적화을 수행할 수 있다. 범용 최적화를 수행한 후, 액세스 기기의 연산자 액세스 또는 계산 그래프 액세 스에 대해, 상이한 계층 처리를 한다. 여전히 도4A를 참조하면, 단일 연산자 액세스 방법에 대해, 본 예시는 3 개의 상이한 계층의 액세스 모듈을 설치한다. 기기 관리층은 하드웨어 SDK의 구동 및 런타임 모듈이 액세스되도록 제공하고, 하드웨어는 계산 자원으로서 프 레임워크에 의해 인식될 수 있고, 기기(Device), 저장(Memory), 스트림(Stream), 이벤트(Events) 등 정보를 관 리할 수 있다. 연산자 적응층은 스마트 칩의 딥러닝 관련 모듈이 액세스되도록 제공하고, 관련 모듈은 DNN(Deep Neural Networks, 심층 신경망) 연산자 베이스, BLAS(Basic Linear Algebra Subroutine, 기초 선형 대수학 서브 프로 그램) 수학 베이스, 통신 베이스 등을 포함하여, 프레임워크 연산자가 타겟 하드웨어에서 하드웨어 SDK를 통해 캡슐화되고 수행 가능한 코드로 매핑될 수 있도록 한다. 그래프 최적화층은 자체 정의된 최적화 전략이 이성 하드웨어가 자체의 하드웨어에 따라 커스텀되도록 제공한다. 그래프 최적화층은 프레임워크 연산자 수행 스케줄러를 포함할 수 있으며, 프레임워크에 따라 그래프 최적화 전략을 자체 정의하거나 또는 액세스 기기가 자체의 하드웨어에 대해 전략을 커스텀하여 최적화를 수행 한다. 본 예시에서, 기기 관리층과 연산자 적응층은 주로 하드웨어 적응의 범용성에 힘을 쓰고, 다양한 하드웨어에 대 해 범용성을 구비한 액세스 설계를 제공하며, 특정 하드웨어와 딥커플링되어 기타 이성 하드웨어의 적응 난이도 를 증가하는 경우를 방지한다. 그러나 그래프 최적화층은 주로 차별화에 힘을 쓰고, 하드웨어가 딥러닝 프레임 워크에서 자체의 하드웨어 성능 향상에 유리한 최적화 전략을 액세스하도록 서포트함으로, 딥러닝 프레임워크에 서 하드웨어의 수행 효율을 충분히 발휘한다. 계산 그래프 액세스 방법에 대해, 여전히 도4A를 참조하고, 4개의 상이한 계층의 액세스 모듈을 통해 액세스 기 기의 액세스를 수행할 수 있고, 순차대로 기기 관리층, 연산자 IR(Interim Representation, 중간 표현) 적응층 이 있다. 기기 관리층은 하드웨어 SDK의 구동 및 런타임 모듈의 액세스를 제공하고, 하드웨어는 계산 자원 프레임워크(즉 상기 실시예의 모델 프레임워크)에 의해 인식된다. 계산 그래프 액세스 방식에서, 기기 관리층은 연산자 액세스 방식과 공용될 수 있고, 적어도 하나의 이성 액세스 기기 또는 액세스 기기의 모듈이 액세스할 수 있다. 연산자 IR 적응층은 기기 또는 컴파일러의 연산자 베이스에 따라, 프레임워크 연산자를 IR(중간 표현) 연산자로 매핑하여, 딥러닝 프레임워크의 연산자가 스마트 칩의 기기 그래프 컴파일 엔진(Model Builder)의 IR 연산자 또 는 신경망 컴파일러의 IR 연산자로 매핑되도록 한다. 그래프 컴파일 최적화층은 모델 프레임워크의 계산 그래프를 중간 표현으로 전환할 수 있다. 즉, 딥러닝 프레임 워크의 계산 그래프는 \"연산자 IR 적응층\"의 매핑에 따라, 액세스 기기의 그래프 컴파일러 또는 신경망 그래프 컴파일러를 통해 기기 그래프 컴파일 엔진 또는 신경망 컴파일러의 그래프 중간 표현(신경망 컴파일러)으로 전 환한다. 여기서, 기기 그래프 컴파일 엔진 또는 신경망 컴파일러 자체는 계산 그래프의 중간 표현을 최적화하는 최적화 전략을 구비하고, 최종적으로 하드웨어 기기에서 실행할 수 있는 수행 가능한 코드로 전환된다. 그래프 수행 관리층은 하드웨어 SDK 모델의 스케줄링과 수행 기능의 액세스를 제공하고, 모델 프레임워크의 그 래프 수행 엔진 또는 신경망 액추데이터가 계산 그래프의 라이프 사이클에 대해 관리하고 최종 출력된 출력 결 과를 획득한다. 본 예시에서, 4개 계층의 설계는 모두 하드웨어 액세스의 범용성에 향해 설계된 것이고, 하드웨어에 관련된 최 적화 전략은 주로 기기 그래프 컴파일 엔진 또는 신경망 컴파일러에 의해 스스로 구현되고, 딥러닝 프레임워크 는 하드웨어와 무관한 범용 최적화 전략만 제공한다. 일반적인 딥러닝 프레임워크가 하드웨어에 적응에 대한 설계는 주로 범용 CPU 및 엔비디아 GPU의 SDK로 구현하 고, 비교적 범용적인 액세스 기기의 하드웨어 액세스 방법과 시스템을 형성하여 스마트 칩의 하드웨어 기업이 적응 개발을 하도록 지도하지 못한다. 이성 하드웨어의 기업은 하드웨어 액세스를 위해 CUDA의 API(Application Programming Interface, 응용 프로그램 인터페이스)를 강제로 모방해야 하고, CUDA과 차이가 비교적 큰 기타 이 성 하드웨어의 SDK에 매우 불리하고, 하드웨어와 프레임워크 적응의 복잡도가 높으며 코드량이 크고; 성능 최적 화 전략의 설계에서 딥러닝 프레임워크는, 범용적인 하드웨어와 무관한 최적화 전략 외에, 하드웨어 특성과 비 교적 관련된 최적화 전략도 마찬가지로 범용 CPU 및 엔비디아 GPU에 대해 설계하고, 딥러닝 프레임워크에서 이 성 하드웨어의 수행 효율을 충분히 발휘할 수 없다. 본 예시에서 제공된 두 종류의 상이한 하드웨어 액세스 방식에 대한 다층 설계는, 다층 이성 하드웨어 액세스 기기로 액세스하는 개념을 사용하여, 두 종류의 액세스 방식에서의 다층 설계를 각각 제공하고, 복수의 이성 하 드웨어가 상이한 계층의 인터페이스를 통해 딥러닝 프레임워크에 액세스함을 구현하도록 지도하고; 하드웨어 액 세스 방식은 전동적인 단일 액세스 기기만에 설계된 액세스 방식에 대비해 범용성을 구비하고, 특정 하드웨어와 딥커플링되어 기타 차이가 비교적 큰 하드웨어의 액세스 난이도를 증가하는 것을 방지하고; 하드웨어 최적화 전 략은 전통적인 단일 액세스 기기에만 설계된 전략 설계에 대비해 커스텀 가능한 특성을 구비하고, 복수의 이성 하드웨어가 자체의 특성에 따라 최적화 전략 커스텀을 수행하도록 서포트함으로, 프레임워크에서 하드웨어의 수 행 효율을 보장한다. 본 발명의 일 예시는 액세스 방법을 제공하고, 액세스 모델 프레임워크 또는 타겟 모델의 액세스 기기를 최적화 시킬 수 있고, 액세스 기기는 하드웨어 기기일 수 있다. 본 발명의 다른 예시에서, 도4B를 참조하면, 액세스 방식이 연산자 액세스일 경우, 액세스 방법은 단계 S41 내 지 단계 S45를 포함한다. 단계S41에서, 신경망 모델을 생성한다. 구체적으로 심층 신경망 모델 프레임워크(상기 실시예의 모델 프레임워 크에 해당됨)와 모델 부분을 융합할 수 있다. 신경망 모델은 신경망을 포함하는 임의의 모델일 수 있다. 신경망 모델은 Python(피톤) API 인터페이스를 통해 출력되고, 신경망 모델은 상기 실시예의 타겟 모델에 해당된다. 단계 S42에서, 신경망 모델의 모델 프레임워크의 계산 그래프에 따라, 범용 그래프 최적화 및 커스텀 그래프 최 적화를 각각 수행하여, 프레임워크가 최적화된 계산 그래프를 생성한다. 단계 S43에서, 프레임워크 연산자 스케줄러를 이용하여, 프레임워크 연산자를 생성한다. 단계 S44에서, 연산자 적응을 통해, 기기 연산자를 생성한다. 단계 S45에서, 프레임워크 연산자 및 기기 연산자에 따라, 액세스 기기의 각 수행 모듈을 호출하여 신경망 모델 을 실행한다. 도4C를 참조하면, 액세스 방식이 계산 그래프 액세스일 경우, 액세스 방법은 단계 S46 내지 단계 S49를 포함한 다 단계 S46에서, 신경망 모델을 생성한다. 구체적으로 심층 신경망 모델 프레임워크(상기 실시예의 모델 프레임워 크에 해당됨)와 모델 부분을 융합할 수 있다. 신경망 모델은 신경망을 포함하는 임의의 모델일 수 있다. 신경망 모델은 Python(피톤) API 인터페이스를 통해 출력되고, 신경망 모델은 상기 실시예의 타겟 모델에 해당된다. 단계 S47에서, 신경망 모델의 모델 프레임워크의 계산 그래프에 따라, 범용 그래프 최적화를 수행하여, 프레임 워크가 최적화된 계산 그래프를 생성한다. 단계 S48에서, 프레임워크가 최적화된 계산 그래프와 액세스 기기 계산 그래프를 융합하여, 호출 명령을 생성한 다. 단계 S49에서, 호출 명령에 따라, 액세스 기기의 각 수행 모듈을 호출하고 신경망 모델을 실행한다. 본 발명의 실시예는 액세스 장치를 제공하고, 도5에 도시된 바와 같이, 상기 장치는, 타겟 모델의 연산자 표현에 따라, 액세스 기기를 호출하는 계산 그래프를 결정하는 계산 그래프 결정 모듈; 액세스 기기의 정보에 따라, 계산 그래프를 최적화하는 그래프 최적화 모듈; 및 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스 및 계산 그래프에 따라, 액세스 기기에 대해 타겟 모델의 실행에 관련된 동작을 수행하는 실행 모듈 - 액세스 기기가 액세스하는 타겟 모델의 모델 프레임워크의 인터페이스는, 액세스 기기의 툴킷 데이터에 따라 결정됨 - ; 을 포함한다. 일 실시 방식에서, 도6에 도시된 바와 같이, 액세스 장치는, 툴킷 데이터에 따라, 액세스 기기의 유형을 결정하는 유형 결정 모듈; 및 액세스 기기의 유형에 따라, 모델 프레임워크에서 액세스 기기의 통용 인터페이스를 결정하는 통용 인터페이스 모듈; 을 포함한다. 일 실시 방식에서, 통용 인터페이스는 액세스 기기의 공통성에 따라, 모델 프레임워크에서 액세스 기기에 대응 되는 구동 및 런타임 인터페이스를 추상화 및 캡슐화하여 생성된 것이다. 일 실시 방식에서, 도7에 도시된 바와 같이, 실행 모듈은, 인터페이스에 따라, 액세스 기기의 액세스 방식을 결정하는 액세스 방식 유닛; 액세스 방식 및 계산 그래프에 따라, 액세스 기기를 호출하는 명령 데이터를 생성하는 명령 데이터 유닛; 및 명령 데이터를 실행하여, 상기 실행에 관련된 동작을 수행하는 실행 구현 유닛; 을 포함한다. 일 실시 방식에서, 액세스 방식이 연산자 액세스일 경우, 계산 그래프는 타겟 모델의 모델 프레임워크의 제1 계 산 그래프를 포함하고; 명령 데이터 유닛은 또한, 제1 계산 그래프를 프레임워크 연산자로 매핑하고; 프레임워크 연산자 및 액세스 기기의 기기 연산자에 따라, 액세스 기기의 명령 데이터를 생성하는데 사용된다. 일 실시 방식에서, 액세스 방식이 계산 그래프 액세스일 경우, 계산 그래프는 타겟 모델의 모델 프레임워크의 제1 계산 그래프 및 액세스 기기의 제2 계산 그래프를 포함하고; 명령 데이터 유닛은 또한, 제1 계산 그래프 및 미리 설정된 연산자 중간 표현 정의에 따라, 그래프 중간 표현를 생성하고; 그래프 중간 표현 및 제2 계산 그래프에 따라, 명령 데이터를 생성한다. 일 실시 방식에서, 도8에 도시된 바와 같이, 그래프 최적화 모듈은, 액세스 기기의 정보에 따라, 계산 그래프에 대해 수행하는 최적화 동작 및 최적화될 계산 그래프 유닛을 결정하 는 결정 유닛; 및 최적화될 계산 그래프 유닛에 대해 최적화 동작을 수행하는 수행 유닛; 을 포함한다. 일 실시 방식에서, 도9에 도시된 바와 같이, 액세스 장치는, 타겟 모델의 모델 부분에 액세스하는 액세스 모듈; 및 모델 부분 및 모델 프레임워크에 따라, 타겟 모델을 생성하는 모델 생성 모듈; 을 포함한다. 본 발명의 기술 수단에서, 언급된 사용자 퍼스널 정보의 획득, 저장, 및 응용 등 처리는, 모두 관련 법규의 규 정에 해당되고, 공서양속을 위배하지 않는다. 본 발명의 실시예에 따르면, 본 발명은 전자 기기, 판독 가능 저장 매체 및 컴퓨터 프로그램을 더 제공한다. 도10에 도시된 바와 같이, 도10은 본 발명의 실시예를 구현하는 전자 기기의 개략적인 블록도이다. 전자 기기는 다양한 형식의 디지털 컴퓨터를 표시한다. 예를 들면, 랩톱 컴퓨터, 데스크톱 컴퓨터, 워크스테이션, 퍼 스널 정보 단말(PAD), 서버, 블레이드 서버, 메인 프레임 및 기타 적합한 컴퓨터일 수 있다. 전자 기기는 다양 한 형식의 모바일 장치를 표시한다. 예를 들면 퍼스널 정보 단말(PAD), 셀룰러 폰, 스마트 폰, 웨어러블 기기 및 기타 유사한 컴퓨팅 장치일 수 있다. 본 발명에 개시된 컴포넌트, 이들의 연결과 관계, 및 기능은 단지 예시 적인 것 뿐이며, 본 발명에서 설명 및/또는 요구한 본 발명의 구현을 한정하려는 것은 아니다. 도10에 도시된 바와 같이, 전자 기기는 컴퓨팅 유닛을 포함하고, 읽기 전용 메모리(ROM)에 저장 된 컴퓨터 프로그램 또는 저장 유닛에서 랜덤 액세스 메모리(RAM)에 로딩된 컴퓨터 프로그램에 따 라, 각 적당한 조작 및 처리를 수행한다. RAM에서, 전자 기기의 조작에 수요되는 각 프로그램 및 데 이터를 저장할 수도 있다. 컴퓨팅 유닛, ROM 및 RAM은 버스를 통해 서로 연결된다. 입력/ 출력I/O 인터페이스도 버스에 연결된다. 전자 기기의 복수의 컴포넌트는 I/O인터페이스에 연결되고, 복수의 컴포넌트는, 키보드, 마우스 등과 같은 입력 유닛; 다양한 유형의 모니터, 스피커 등과 같은 출력 유닛; 자기 디스크, 광 디스크 등과 같은 저장 유닛; 및 네트워크 카드, 모뎀 또는 무선 통신 송수신기 등과 같은 통신 유닛을 포함한 다. 통신 유닛은 전자 기기가 인터넷과 같은 컴퓨터 네트워크 및/또는 각 전신 네트워크를 통해 기타 기기와 정보/데이터를 교환할 수 있도록 허용한다. 컴퓨팅 유닛은 각 처리 및 계산 기능을 구비한 범용/전용 처리 컴포넌트일 수 있다. 컴퓨팅 유닛의 일부 예시는 중앙 처리 장치(CPU), 그래프 처리 장치(GPU), 각 전용 인공지능 계산 칩, 각 기계 학습 모델 알고 리즘을 실행하는 컴퓨팅 유닛, 디지털 신호 처리 장치(DSP), 임의의 적합한 프로세서, 제어기 및 마이크로 제어 기 등을 포함하나 이에 한정되지 않는다. 컴퓨팅 유닛은 상기 설명한 각 방법 및 처리를 수행한다. 예를 들면 액세스 방법을 수행한다. 예를 들면, 일 실시예에서, 액세스 방법은 컴퓨터 소프트웨어 프로그램으로 구현 될 수 있고, 유형적으로 저장 유닛과 같은 기계 판독 가능 매체에 포함된다. 일 실시예에서, 컴퓨터 프로 그램의 일부 또는 전부는 ROM 및/또는 통신 유닛에 의해 전자 기기에 로딩 및/또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로딩되고 컴퓨팅 유닛에 의해 수행될 경우, 상기 설명한 액세스 방법 의 하나 또는 복수의 단계를 수행할 수 있다. 대안적으로, 기타 실시예에서, 컴퓨팅 유닛은 기타 임의의 적합한 방식(예를 들면, 펌웨어)으로 본 발명의 실시예에 따른 액세스 방법을 수행할 수 있도록 구성된다. 여기서 설명하는 시스템과 기술의 여러 가지 실시형태는 디지털 전자회로 시스템, 집적회로 시스템, 프로그래밍 가능 게이트 어레이(FPGA), 주문형 직접 회로(ASIC), 전용 표준 제품(ASSP), 칩상 시스템(SOC), 복합 프로그래 머블 논리 소자(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합에서 실현될 수 있다. 이러한 여러 가지 실시형태는 하나 또는 복수의 컴퓨터 프로그램에서 실시되는 것을 포함할 수 있고, 당해 하나 또는 복수의 컴퓨터 프로그램은 적어도 하나의 프로그래밍 가능 프로세서를 포함하는 프로그래밍 가능 시스템에서 실 행 및/또는 해석되며, 당해 프로그래밍 가능 프로세서는 전용 또는 일반 프로그래밍 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치에서 데이터와 명령을 수신할 수 있 고, 데이터와 명령을 당해 저장 시스템, 당해 적어도 하나의 입력 장치 및 당해 적어도 하나의 출력 장치에 전 송할 수 있다.본 발명의 방법을 수행하는 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 조합으로 작성될 수 있다. 당해 프로그램 코드는 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그래밍 가능한 데이터 처리 장치의 프로 세서 또는 제어기에 제공하여, 프로그램 코드가 프로세서 또는 제어기에 의해 수행될 경우 흐름도 및/또는 블록 도에서 규정한 기능/조작을 실시하게 된다. 프로그램 코드는 완전히 또는 부분적으로 기계에서 수행되고, 독립 소프트웨어 패키지로서 부분적으로 기계에서 수행하고 부분적으로 또는 완전히 원거리 기계 또는 서버에서 수행 된다. 본 발명의 콘텍스트에서, 기계 판독 가능 매체는 유형적인 매체일 수 있고, 명령 수행 시스템, 장치 또는 기기 가 사용하거나 명령 수행 시스템, 장치 또는 기기와 결합하여 사용하도록 제공하는 프로그램을 포함 또는 저장 할 수 있다. 기계 판독 가능 매체는 기계 판독 가능 신호 매체 또는 기계 판독 가능 저장 매체일 수 있다. 기계 판독 가능 매체는 전자, 자기, 광학, 전자기, 적외선 또는 반도체 시스템, 장치 및 기기, 또는 상기 내용의 임 의의 적합한 조합을 포함하나 이에 한정되지 않는다. 기계 판독 가능 저장 매체의 더 구체적인 예시는 하나 또 는 복수의 선을 기반으로 하는 전기 연결, 휴대용 컴퓨터 디스크, 하드 디스크, 랜덤 엑세스 메모리(RAM), 읽기 전용 메모리(ROM), 지울 수 있는 프로그래밍 가능한 읽기 전용 메모리(EPROM또는 플래시 메모리), 광섬유, 시디 롬(CD-ROM), 광학 저장 기기, 자기 저장 기기, 또는 상기 내용의 임의의 적합한 조합을 포함할 수 있다. 사용자와의 인터랙션을 제공하기 위해, 여기서 설명된 시스템 및 기술은 컴퓨터에서 구현할 수 있으며, 당해 컴 퓨터는 사용자에게 정보를 디스플레이하는 디스플레이 장치(예를 들면, CRT음극선관) 또는 LCD(액정 디스플레이)모니터); 및 키보드와 지향 장치(예를 들면, 마우스 또는 트랙볼)를 구비하고, 사용자는 당해 키보 드와 당해 지향 장치를 통해 컴퓨터에 입력을 제공할 수 있다. 기타 유형의 장치도 사용자와의 인터랙션에 사용 될 수 있는 바, 예를 들면 사용자에게 제공된 피드백은 임의의 형식의 감각 피드백(예를 들면, 시각적 피드백, 청각적 피드백 또는 촉각적 피드백)일 수 있고, 임의의 형식(음향 입력, 음성 입력 또는 촉각 입력)에 의해 사 용자로부터의 입력을 수신할 수 있다. 여기서 설명한 시스템과 기술을, 백그라운드 컴포넌트를 포함하는 컴퓨팅 시스템(예를 들면 데이터 서버), 또는 미들웨어 컴포넌트를 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버), 또는 프론트 엔드 컴포넌트를 포 함하는 컴퓨팅 시스템(예를 들면, 그래픽 사용자 인터페이스 또는 네트워크 브라우저를 구비한 사용자 컴퓨터에 서 실시될 수 있고, 사용자는 당해 그래픽 사용자 인터페이스 또는 당해 네트워크 브라우저를 통해 여기서 설명 한 시스템과 기술의 실시형태와 인터랙션할 수 있다), 또는 이러한 백그라운드 컴포넌트, 미들웨어 컴포넌트 또 는 프론트 엔드 컴포넌트의 임의의 조합을 포함하는 컴퓨팅 시스템에서 실시될 수 있다. 임의의 형태 또는 매체 의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통해 시스템의 컴포넌트를 서로 연결할 수 있다. 통신 네 트워크의 예시는 근거리 통신망 (LAN), 광역 통신망 (WAN) 및 네트워크를 포함한다. 컴퓨터 시스템은 클라이언트와 서버를 포함할 수 있다. 클라이언트와 서버는 일반적으로 서로 떨어져 있으며, 통신 네트워크를 통해 서로 인터랙션한다. 대응하는 컴퓨터에서 실행되고 서로 클라이언트-서버 관계를 가지는 컴퓨터 프로그램에 의해 클라이언트와 서버의 관계를 생성한다. 서버는 클라우드 서버일 수 있고,분산식 시스템 의 서버 또는 블록 체인을 결합한 서버일 수도 있다. 이해해야 할 것은, 상기 복수 형식의 흐름에 의해, 단계를 재정열, 추가 또는 삭제할 수 있다. 예를 들면, 본 발명에 기재한 각 단계는 병행하여 또는 순차적으로 실행할 수도 있고, 서로 다른 순서로 실행할 수도 있다. 본 발명에서 개시한 기술적 수단이 원하는 결과만 구현할 수 있으면 본 발명에서는 이에 대해 한정하지 않는다. 상기 구체적인 실시 방식은 본 발명의 보호 범위를 한정하지 않는다. 본 발명이 속하는 기술 분야의 통상의 기 술자는 설계 요구 및 기타 요소에 의해 여러가지 수정, 조합, 서브 조합 및 대체가 이루어질 수 있음을 이해해 야 한다. 본 발명의 정신과 원칙 내에서 이루어진 모든 수정, 동등한 대체 및 개선은 모두 본 발명 보호 범위에 포함된다.도면 도면1 도면2 도면3 도면4a 도면4b 도면4c 도면5 도면6 도면7 도면8 도면9 도면10"}
{"patent_id": "10-2022-0154379", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면은 본 기술적 수단을 더 잘 이해하는데 사용되고, 본 발명을 한정하려는 것은 아니다. 도1은 본 발명의 일 실시예에 따른 액세스 방법의 개략도이다. 도2는 본 발명의 다른 실시예에 따른 액세스 방법의 개략도이다. 도3은 본 발명의 또 다른 실시예에 따른 액세스 방법의 개략도이다. 도4A는 본 발명의 일 예시에 따른 액세스 방법의 프레임워크의 개략도이다. 도4B는 본 발명의 일 예시에 따른 연산자 액세스의 액세스 방법의 개략적인 흐름도이다. 도4C는 본 발명의 일 예시에 따른 계산 그래프 액세스의 액세스 방법의 개략적인 흐름도이다. 도5는 본 발명의 일 실시예에 따른 액세스 장치의 개략도이다. 도6은 본 발명의 다른 실시예에 따른 액세스 장치의 개략도이다. 도7은 본 발명의 또 다른 실시예에 따른 액세스 장치의 개략도이다. 도8은 본 발명의 또 다른 실시예에 따른 액세스 장치의 개략도이다. 도9는 본 발명의 또 다른 실시예에 따른 액세스 장치의 개략도이다. 도10은 본 발명의 실시예의 액세스 방법을 구현하는 전자 기기의 블록도이다."}
