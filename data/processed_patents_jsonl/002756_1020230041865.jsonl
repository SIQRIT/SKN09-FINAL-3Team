{"patent_id": "10-2023-0041865", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0146813", "출원번호": "10-2023-0041865", "발명의 명칭": "프롬프트 기반 메타학습 및 추론 방법", "출원인": "한국전자통신연구원", "발명자": "양정민"}}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "태스크를 선정하는 단계;상기 선정된 태스크를 프롬프트 임베딩 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 키를 생성하는 단계;유사도 함수를 이용하여, 상기 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프롬프트 키 간의유사도를 산출하는 단계;상기 유사도 및 상기 프롬프트 키 풀에 포함된 프롬프트 키를 기초로 메모리 네트워크를 이용하여 상기 선정된태스크에 대한 프롬프트 값을 획득하는 단계; 및상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여상기 선정된 태스크에 대한 추론 결과를 생성하는 단계;를 포함하는 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 프롬프트 키 풀은,상기 프롬프트 임베딩 네트워크, 상기 메모리 네트워크 및 상기 MAML 기반 사전학습 모델의 학습에 사용된 태스크에 대한 프롬프트 키의 집합인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 메모리 네트워크는,태스크에 대한 프롬프트 키를 입력으로 하고, 태스크에 대한 프롬프트 값을 레이블로 하여 지도학습 방식으로학습된 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 MAML 기반 사전학습 모델은,태스크 분포에서 무작위로 태스크를 선정한 후, 상기 무작위로 선정된 태스크를 기초로 MAML 학습 방법론에 따라 학습된 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 프롬프트 임베딩 네트워크는,상기 프롬프트 임베딩 네트워크, 학습된 상기 메모리 네트워크 및 학습된 상기 MAML 기반 사전학습 모델을 포함한 프롬프트 기반 메타학습 네트워크의 종단간 학습을 통하여 학습된 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 태스크를 선정하는 단계는,공개특허 10-2024-0146813-3-이산 확률분포 및 연속 확률분포 중 어느 하나에 해당하는 태스크 분포에서 태스크를 선정하는 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 추론 결과를 생성하는 단계는,상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 임베딩 벡터를 생성하고, 상기 임베딩벡터를 상기 MAML 기반 사전학습 모델에 입력하여 상기 추론 결과를 생성하는 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 추론 결과를 생성하는 단계는,상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 결합(concatenation)하여 상기 임베딩 벡터를생성하는 것을 포함하는 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 유사도 함수는, 코사인 유사도 및 어텐션 중 어느 하나를 포함하는 것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 프롬프트 값을 획득하는 단계는,상기 프롬프트 키 풀에 포함된 프롬프트 키 중에서, 상기 선정된 태스크의 프롬프트 키와 가장 높은 유사도를가지는 프롬프트 키를, 상기 메모리 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하는것인 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "컴퓨터에서 판독 가능한 명령들을 저장하는 메모리; 및상기 명령들을 실행하도록 구현되는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는, 상기 명령들을 실행함으로써,설정에 따라 태스크 분포에서 태스크를 선정하고, 상기 선정된 태스크를 프롬프트 임베딩 네트워크에 입력하여상기 선정된 태스크에 대한 프롬프트 키를 생성하며, 유사도 함수를 이용하여, 상기 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프롬프트 키 간의 유사도를 산출하고, 상기 유사도 및 상기 프롬프트 키 풀에 포함된 프롬프트 키를 기초로 메모리 네트워크를 이용하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하며, 상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여 상기 선정된 태스크에 대한 추론 결과를 생성하도록 구성되는 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 프롬프트 키 풀은,상기 프롬프트 임베딩 네트워크, 상기 메모리 네트워크 및 상기 MAML 기반 사전학습 모델의 학습에 사용된 태스공개특허 10-2024-0146813-4-크에 대한 프롬프트 키의 집합인 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서, 상기 적어도 하나의 프로세서는,상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 임베딩 벡터를 생성하고, 상기 임베딩벡터를 상기 MAML 기반 사전학습 모델에 입력하여 상기 추론 결과를 생성하도록 구성되는 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서, 상기 적어도 하나의 프로세서는,상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 결합(concatenation)하여 상기 임베딩 벡터를생성하도록 구성되는 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서, 상기 유사도 함수는, 코사인 유사도 및 어텐션 중 어느 하나를 포함하는 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제11항에 있어서, 상기 적어도 하나의 프로세서는,상기 프롬프트 키 풀에 포함된 프롬프트 키 중에서, 상기 선정된 태스크의 프롬프트 키와 가장 높은 유사도를가지는 프롬프트 키를, 상기 메모리 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하도록구성되는 것인 컴퓨터 시스템."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 프롬프트 기반 메타학습 및 추론 방법에 관한 것이다. 상기 프롬프트 기반 메타학습 방법을 통해 학습 된, 메타학습 네트워크를 이용한 추론 방법은, 태스크를 선정하는 단계와, 프롬프트 임베딩 네트워크를 이용하여, 선정된 태스크에 대한 프롬프트 키를 생성하는 단계와, 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프롬프트 키 간의 유사도를 산출하는 단계와, 메모리 네트워크를 이용하여 선정된 태스크에 대한 프롬프트 값을 획득하는 단계와, MAML 기반 사전학습 모델을 이용하여 선정된 태스크에 대한 추론 결과를 생성하 는 단계를 포함한다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 분야 중에서 메타학습 및 추론 방법에 관한 것이다. 더욱 상세하게는, 일반화 성능을 유지 하는 동시에 새로운 태스크에 적응하는 속도를 높임으로써 해결 가능한 태스크의 범위를 확장할 수 있는 메타학 습 및 추론 방법에 관한 것이다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "1. 메타학습(meta-learning)과 메타 강화학습(meta-reinforcement learning) 메타학습(meta-learning)은 학습 단계에서 접하지 않은 새로운 태스크에 빠르게 적응하여 문제를 해결하는 인간 의 두뇌를 기계학습에 적용하기 위한 연구 분야로서, '학습하는 방법을 학습'하는 기법으로 알려져 있다. 기존 의 딥러닝 네트워크는 지도학습, 비지도학습 및 강화학습의 전 분야에 걸쳐 급속도로 발전했으나, 적용 분야를 불문하고 학습에 사용되지 않은 데이터에 대해서는 일관되게 낮은 성능을 보여왔다. 특히, 강화학습에서 특정 태스크(task)를 해결하기 위해 학습된 네트워크는, 태스크(task)가 약간만 변경되더라도 해당 태스크를 해결하 지 못하고 처음부터 다시 학습을 해야 하는 것이 일반적이었다. 예를 들어, 입구와 출구의 위치가 정해진 미로 의 탈출 방법을 학습한 강화학습 딥러닝 네트워크는, 입구나 출구의 위치가 조금만 바뀌어도 문제를 해결하지 못하거나 성능이 급격히 떨어진다. 메타학습이라는 통칭이 생기기 이전에는, 상술한 딥러닝 네트워크의 문제점(학습 시 접하지 않은 데이터나 태스 크에 대한 낮은 성능)에 대하여 각각의 응용 분야에서 지엽적인 해결책이 고안되었으며, 이와 관련하여 이미지 분류 분야(image classification)에서의 퓨샷(few-shot), 제로샷(zero-shot) 학습 등이 알려져 있다. 참고로, 퓨샷(few-shot) 학습은 학습 단계에서 극도로 제한된 개수의 데이터셋만을 이용해서 이미지 분류 성능을 높이는 분야이며, 제로샷(zero-shot) 학습은 학습 단계에서 접한 적이 없는 이미지를 분류하는 분야로서, 모두 데이터 효율성 및 수렴 속도를 높이는 연구분야이다. 전이학습(transfer learning) 또한 비슷한 문제의식에서 출발한 연구 분야로서, 하나의 태스크에 대해 학습을 마친 네트워크를 다른 태스크에 적용할 때, 미세조정(fine- tuning)하는 과정만을 추가하여 학습 과정의 수렴 시간을 줄이는 기법이다. 메타학습은 학습 단계에서 사용되지 않은 데이터셋이나 태스크에 대한 성능을 개선하는 모든 방법론을 포함한다. 메타학습은 도 1(출처: https://research.samsung.com/blog/Meta-Learning-in-Neural-Networks)과 같이 기존의 딥러닝 네트워크를 보조하는 다른/상위의/메타 알고리즘 혹은 딥러닝 네트워크로 구성된다. 메타학 습은 문제 해결의 접근법에 따라 최적화 기반(optimization-based) 메타학습, 메트릭 기반(metric-based) 메타 학습 및 모델 기반(model-based) 메타학습 등으로 분류된다. 최적화 기반 메타학습 분야에서 유명한 논문 중 하나인 MAML(Chelsea Finn et al., \"Model-Agnostic Meta- Learning for Fast Adaptation of Deep Networks,\" 2017)은 '학습하는 방법을 학습'하는 가장 명쾌한 방법은 곧 딥러닝 네트워크의 최적의 시작점(initial point)을 찾는 것임을 강조하면서, 새로운 태스크의 해결을 위하 여 일반화 성능이 가장 높은(즉, 가장 적은 훈련 스텝을 거쳐 네트워크를 수렴시킬 수 있는) 시작점을 찾는 반 복적 방법론을 제시하였다. MAML은 중첩 루프(nested loop)로 구성되며, 먼저 내부 루프(loop)에서는 각 태스크 의 손실함수(loss function)의 기울기(gradient)를 구하고 태스크별 가중치(weight)를 업데이트하는 일반적인 딥러닝 학습 과정을 수행한다. 외부 루프에서는 태스크별 손실함수의 기울기(gradient) 총합의 기울기 (gradient)를 구하여, 다음 반복(iteration)에서 사용할 네트워크의 시작점을 도출한다. 최적화 기반 메타학습이 학습 시간(또는 수렴 시간)을 줄이는데 집중한다면, 메트릭 기반 메타학습은 학습 단계 에서 보지 못한 데이터를 적절한 차원의 위치와 거리로 표현할 수 있는 메트릭(metric)을 학습하는 것을 목표로 한다. 상술한 퓨샷/제로샷 학습도 메트릭 기반 메타학습으로 해결할 수 있으며, 표현(representation) 학습과도 연관이 있다. 모델 기반 메타학습은 외부 네트워크나 메모리를 이용하여 기존의 네트워크를 빠르게 학습하는 방 법으로, 기존에 학습한 태스크의 정보나 데이터, 하이퍼파라미터(hyperparameter) 등을 저장하는 방식으로 동작 한다. 메타학습은 강화학습에도 적용되어, 학습 때 접하지 않은 태스크에 대한 성능이 하락하는 기존의 강화학습의 단 점을 해결하고 있다. 메타 강화학습(meta-reinforcement learning)에도 상술한 세 접근법(최적화 기반 접근법, 메트릭 기반 접근법, 모델 기반 접근법)이 모두 유효하며, 강화학습의 특징 때문에 모델 기반 방식과 메트릭 기 반 방식이 조합되어 사용된다. 이러한 접근법 중 하나인 맥락 기반 메타 강화학습(context-based meta reinforcement learning)은 이전 태스크와 새로운 태스크 간의 관계를 이용하여 새로운 태스크에서의 수렴 속도 를 높이는 것을 목표로 한다. 이전 태스크(또는 경로(trajectory))를 저장한다는 측면에서 모델 기반 접근법이, 태스크 사이의 상관도를 이로용한다는 측면에서 메트릭 기반 접근법이 사용된다. 메타 강화학습의 일반화 성능 을 높이기 위해 생성모델 또는 여러 태스크 간의 내삽(interpolation)을 이용한 태스크 증강 방법이 사용되기도 한다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "2. 프롬프트 학습 (prompt learning)(= 맥락 내 학습(in-context learning)) 자연어 처리 기술은 지금까지 크게 네 단계로 발전해왔다(출처: Pre-train, Prompt, and Predict: A Systematic Survey of Prompting Methods in Natural Language Processing, Pengfei Liu, et al., 2021). 최 초의 단계는 피쳐 엔지니어링(feature engineering)으로서, 레이블이 있는 데이터를 활용한 확률 모델과 규칙을 기반으로 한다. 이후 반도체 연산 기술의 발전으로 딥러닝 네트워크 기술이 재부상하면서, 딥러닝 네트워크는 도입되었지만 여전히 레이블이 있는 데이터를 활용한 지도학습을 기반으로 하는 아키텍쳐 엔지니어링 (architecture engineering) 시대가 시작되었다. 이 당시에는 자연어 처리에 효과적인 딥러닝 네트워크 구성 방 법 그 자체가 연구의 목표였다. 2017년대 들어서 자연어 처리 기술은 급격한 변곡점을 겪게 되는데, 이는 비지 도학습을 기반으로 한 거대 사전학습 언어 모델(pre-trained language model)과 이를 이용한 미세조정 방식이 대부분의 자연어 처리 태스크에서 고성능을 내기 시작했기 때문이다. 이 시점부터 GPT(Generative Pre-trainedTransformer), BERT(Bidirectional Encoder Representations from Transformers) 등 트랜스포머를 기반으로 한 거대 언어모델들이 속속 발표되었으며, 목표에 따라 거대 사전학습 모델을 미세조정 하여 대부분의 태스크를 해 결하는 패러다임(오브젝티브 엔지니어링, objective engineering)이 정립되었다. 거대 사전학습 언어모델은 웹 등에서 수집 및 정제된 대용량의 문장을 자기 회귀(auto regressive) 방식으로 학 습하며, 학습 비용이 크기 때문에 거대 IT 기업이나 연구 단체 등에서 주도적으로 개발해왔다. 즉, 연구자 개인 이 특정 태스크에 대해 거대 사전학습 모델을 미세조정하는 과정의 비용이 매우 크고 비효율적이다. 이 때문에 GPT-2부터는 프롬프트를 이용한 태스크 해결법이 도입되었는데, 이는 '해결하고자 하는 문제를 미리 정의된 문 장의 형태로 제시'하여 거대 사전학습 모델을 퓨샷/제로샷 학습처럼 활용하는 방식이다. 예를 들어 한국어를 영 어로 번역하는 태스크라면, 기존 오브젝티브 엔지니어링(objective engineering) 방식은 한국어 문장과 영문으 로 번역된 문장의 쌍을 이용한 추가 미세조정을 통해 태스크를 해결한다. 하지만 프롬프트 학습은 '한국어를 영 어로 번역하겠다'는 프롬프트와 몇 가지 예시 문장을 제시하여, 거대 사전학습 언어모델이 현재의 태스크에 국 한된 결과 문장을 내도록 출력 범위를 제한하는 방식으로 문제를 해결한다. 현재 자연어 처리 연구 경향은 거대 사전학습 모델을 블랙박스로 상정하고 태스크에 적합한 프롬프트를 구성하 는 것을 목표로 하며, 이를 프롬프트 엔지니어링(prompt engineering)이라고 한다. 최근에는 프롬프트를 자연어 로 제시하는 불연속 프롬프트 방식 대신 벡터(혹은 임베딩)로 제시하는 연속 프롬프트 방식이 제안되었고, 프롬 프트 자체를 수치적으로 해석할 수 있게 되면서 태스크 간의 유사도에 따른 프롬프트 생성 등 메트릭 기반 접근 법이 가미된 연구 등이 발표되고 있다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "3. 메타학습과 메타 강화학습의 문제점 메타학습과 메타 강화학습은 학습 단계에서 접하지 못한 새로운 태스크에 빠르게 적응하는 것을 목표로 하기 때 문에, 특정 태스크에 과적합(overfitting)되는 것을 최대한 방지하면서 다양한 태스크에 성능적으로 중립적인 학습 지점을 찾는 것을 지향해왔다. 즉 일반화 성능은 최대한 높이면서, 새로운 태스크에는 빠르게 적응해야 하 는 두 가지 문제를 동시에 해결해야한다. 이 두 목표는 일반적으로 서로 상충되기 때문에 현재의 메타학습과 메 타 강화학습은 필연적으로 태스크의 범주가 축소되는 문제점을 안고 있다. 선행기술문헌 비특허문헌 (비특허문헌 0001) C. Finn, P. Abbeel, and S. Levine. \"Model-agnostic metalearning for fast adaptation of deep networks\". In International Conference on Machine Learning, 2017. arXiv:1703.03400. available at https://arxiv.org/abs/1703.03400 (비특허문헌 0002) Pengfei Liu, Weizhe Yuan, Jinlan Fu, Zhengbao Jiang, Hiroaki Hayashi, Graham Neubig. \" Pre-train, Prompt, and Predict: A Systematic Survey of Prompting Methods in Natural Language Processing\". 2021. arXiv:2107.13586. available at https://arxiv.org/abs/2107.13586"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은, 기존 사전학습 모델이 가진 미세조정 패러다임을 대체하고, 사전학습 모델이 해결할 수 있는 태스크 의 범위를 확장하기 위하여, 프롬프트가, 일반화 성능을 유지해야하는 거대 사전학습 모델이 각각의 태스크에 빠르게 적응할 수 있도록 보조하는 역할을 수행하는, 프롬프트 기반 메타학습 방법을 제공하는 것을 그 목적으 로 한다. 본 발명의 목적은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 또 다른 목적들은 아래의 기재로 부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른, 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법은, 태스크를 선정하는 단계; 상기 선정된 태스크를 프롬프트 임베딩 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 키를 생성하는 단계; 유사도 함수를 이용하여, 상기 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프롬프트 키 간의 유사도를 산출하는 단계; 상기 유사도 및 상기 프롬프트 키 풀에 포함된 프롬프트 키를 기초 로 메모리 네트워크를 이용하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하는 단계; 및 상기 선정된 태스 크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여 상기 선정된 태스 크에 대한 추론 결과를 생성하는 단계를 포함한다. 본 발명의 일 실시예에서, 상기 프롬프트 키 풀은, 상기 프롬프트 임베딩 네트워크, 상기 메모리 네트워크 및 상기 MAML 기반 사전학습 모델의 학습에 사용된 태스크에 대한 프롬프트 키의 집합이다. 본 발명의 일 실시예에서, 상기 메모리 네트워크는, 태스크에 대한 프롬프트 키를 입력으로 하고, 태스크에 대 한 프롬프트 값을 레이블로 하여 지도학습 방식으로 학습된 것이다. 본 발명의 일 실시예에서, 상기 MAML 기반 사전학습 모델은, 태스크 분포에서 무작위로 태스크를 선정한 후, 상 기 무작위로 선정된 태스크를 기초로 MAML 학습 방법론에 따라 학습된 것이다. 본 발명의 일 실시예에서, 상기 프롬프트 임베딩 네트워크는, 상기 프롬프트 임베딩 네트워크, 학습된 상기 메 모리 네트워크 및 학습된 상기 MAML 기반 사전학습 모델을 포함한 프롬프트 기반 메타학습 네트워크의 종단간 학습을 통하여 학습된 것이다. 본 발명의 일 실시예에서, 상기 태스크를 선정하는 단계는, 이산 확률분포 및 연속 확률분포 중 어느 하나에 해 당하는 태스크 분포에서 태스크를 선정하는 것일 수 있다. 본 발명의 일 실시예에서, 상기 추론 결과를 생성하는 단계는, 상기 선정된 태스크와 상기 선정된 태스크에 대 한 프롬프트 값을 기초로 임베딩 벡터를 생성하고, 상기 임베딩 벡터를 상기 MAML 기반 사전학습 모델에 입력하 여 상기 추론 결과를 생성하는 것일 수 있다. 본 발명의 일 실시예에서, 상기 추론 결과를 생성하는 단계는, 상기 선정된 태스크와 상기 선정된 태스크에 대 한 프롬프트 값을 결합(concatenation)하여 상기 임베딩 벡터를 생성하는 것을 포함할 수 있다. 본 발명의 일 실시예에서, 상기 유사도 함수는, 코사인 유사도 및 어텐션 중 어느 하나를 포함할 수 있다. 본 발명의 일 실시예에서, 상기 프롬프트 값을 획득하는 단계는, 상기 프롬프트 키 풀에 포함된 프롬프트 키 중 에서, 상기 선정된 태스크의 프롬프트 키와 가장 높은 유사도를 가지는 프롬프트 키를, 상기 메모리 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하는 것일 수 있다. 본 발명의 일 실시예에 따른 컴퓨터 시스템은, 컴퓨터에서 판독 가능한 명령들을 저장하는 메모리 및 상기 명령 들을 실행하도록 구현되는 적어도 하나의 프로세서를 포함한다. 상기 적어도 하나의 프로세서는, 상기 명령들을 실행함으로써, 설정에 따라 태스크 분포에서 태스크를 선정하고, 상기 선정된 태스크를 프롬프트 임베딩 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프트 키 를 생성하며, 유사도 함수를 이용하여, 상기 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프 롬프트 키 간의 유사도를 산출하고, 상기 유사도 및 상기 프롬프트 키 풀에 포함된 프롬프트 키를 기초로 메모 리 네트워크를 이용하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하며, 상기 선정된 태스크와 상기 선정 된 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여 상기 선정된 태스크에 대한 추론 결과를 생성하도록 구성된다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따르면, 태스크의 정보를 담고 있는 프롬프트를 메타학습 또는 메타 강화학습에 적용하 여, 메타학습 또는 메타 강화학습을 통해 새로운 태스크에 적응하는 속도를 높일 수 있으며, 이와 동시에 메타 학습 또는 메타 강화학습이 해결할 수 있는 태스크의 범주를 넓히는 효과가 있다.본 발명에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 메타학습에 프롬프트를 도입한, 프롬프트 기반 메타학습 방법에 관한 것이다. 본 명세서는, 일반화 성능을 유지하는 동시에, 새로운 태스크에 대한 적응 및 수렴 속도를 높이고, 해결 가능한 태스크의 범위를 확 장할 수 있는 프롬프트 기반 메타학습 방법을 제안한다. 본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 한편, 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포 함한다. 명세서에서 사용되는 \"포함한다(comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성소자, 단계, 동작 및/또는 소자는 하나 이상의 다른 구성소자, 단계, 동작 및/또는 소자의 존재 또는 추가를 배제하지 않는다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관 계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 본 발명을 설명함에 있어서, 관련된 공지 기술에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 이하, 본 발명의 실시예를 첨부한 도면들을 참조하여 상세히 설명한다. 본 발명을 설명함에 있어 전체적인 이해 를 용이하게 하기 위하여 도면 번호에 상관없이 동일한 수단에 대해서는 동일한 참조 번호를 사용하기로 한다. 도 2는 본 발명에 따른 프롬프트 기반 메타학습의 구성을 설명하기 위한 도면이다. 본 발명의 일 실시예에 따른, 프롬프트 기반 메타학습 네트워크는 프롬프트 임베딩 네트워크, 메모리 네트워크 및 MAML 기반 사전학습 모델을 포함하여 구성된다. 상기 프롬프트 기반 메타학습 네트워크는, 서포트 셋 (support set)과 쿼리 셋(query set)으로 구성된 태스크가 태스크 분포에서 샘플링되고, 태스크가 프롬프트 임 베딩 네트워크(prompt embedding network)에 입력되면 프롬프트 키가 생성되어 프롬프트 키 풀(prompt key pool)에 추가되고, 프롬프트 키 풀에서 추출된 프롬프트 키가 메모리 네트워크(memory network)에 입력되면 프 롬프트 값이 생성되어 프롬프트 값 풀(prompt value pool)에 추가되고, 태스크와 프롬프트 값이 MAML 기반 사전학습 모델에 입력되어 샘플링된 태스크에 대한 추론 결과가 생성되도록 구성된 네트워크이다. 이하, 본 발명의 일 실시예에 따른 프롬프트 기반 메타학습 네트워크의 추론(inference) 과정에 대하여 설명한 다. 설명의 편의상, 프롬프트 기반 메타학습 네트워크의 추론 과정은, 본 발명의 일 실시예에 따른 프롬프트 기 반 메타학습 방법을 수행하는 컴퓨터 시스템(1000, 이하 '컴퓨터 시스템'으로 약칭)의 프로세서에 의해 수행되는 것으로 전제한다. 프로세서는 태스크 분포(task distribution) T로부터 새로운 태스크(TM+1)를 선정한다. 태스크 분포 T는 이산 확률분포 또는 연속 확률분포 중 어느 하나일 수 있다. 프로세서는 사용자 입력이나 설정에 따라 태 스크 분포 T에서 새로운 태스크(TM+1)를 선정할 수 있다. 이 경우, 새로운 태스크(TM+1)는 무작위로 선정될 수도 있고, 해결하려는 문제(사용자 입력이나 설정에 따라 특정됨)를 기초로 선정될 수도 있다. 태스크 분포 T는 수학식 1과 같이 복수의 태스크를 포함하여 이산적으로 구성될 수 있다. 수학식 1"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "태스크 분포 T에 속한 각 태스크는 서포트 셋(support set)과 쿼리 셋(query set)으로 구성된다. 프로세서는 태스크 분포 T에서 새로운 태스크 TM+1을 선정한다. 태스크 분포 T에 속한 태스크 TM+1은 수학 식 2와 같이 서포트 셋 SM+1과 쿼리 셋 QM+1으로 구성된다. 수학식 2"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "프롬프트 임베딩 네트워크(PEN: Prompt Embedding Network)는 태스크를 입력받아 프롬프트 임베딩('프롬프트 키'로 지칭될 수 있음)을 출력하는 네트워크이다. 프롬프트 임베딩(프롬프트 키)은 벡터로 표현될 수 있다. 프로세서는 프롬프트 임베딩 네트워크(PEN)를 통해 선정된 태스크(TM+1)를 프롬프트 키(xM+1)로 전사한다. 즉, 프로세서는 선정된 태스크(TM+1)를 프롬프트 임베딩 네트워크(PEN)에 입력하여 프롬프트 키(xM+1)를 생 성한다. 따라서 수학식 3과 같이 표현될 수 있다. 수학식 3"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "프롬프트 키 풀(PKP: prompt key pool)에는 태스크에 대한 프롬프트 키가 저장된다. 프롬프트 키 풀에는 이전에 학습한 태스크의 프롬프트 키가 저장된다. 즉, 프롬프트 키 풀(PKP)은, 프롬프트 임베딩 네트워크(PEN), 메모리 네트워크(MN) 및 MAML 기반 사전학습 모델(MPM)을 포함하여 구성된, 프롬프트 기반 메타학습 네트워크의 학습에 사용된 태스크에 대한 프롬프트 키의 집합이다. 프로세서는 프롬프트 임베딩 네트워크의 출력에서 얻은 프롬프트 키를 프롬프트 키 풀에 저장한다. 프롬프트 키 풀(PKP) K는 수학식 4와 같이 표현될 수 있다. 수학식 4의 프롬프트 키 풀(PKP) K는 새로운 태스크 (TM+1)에 대한 프롬프트 키가 추가되기 이전의 프롬프트 키 풀이다. 수학식 4"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "프로세서는 새로운 태스크(TM+1)의 프롬프트 임베딩 네트워크 결과(xM+1)와 프롬프트 키 풀(PKP)에 저장되 어 있는, 이전에 학습한 태스크 프롬프트 키(Km) 간의 유사도를 산출한다. 즉, 프로세서는 유사도 함수를 이용하여 새로운 태스크에 대한 프롬프트 키(xM+1)와 프롬프트 키 풀의 기존 프롬프트 키(Km) 간의 유사도를 산출 한다. 유사도 함수(PKSIM)에는 코사인 유사도(cosine similarity) 및 어텐션(attention) 중 어느 하나가 포함 될 수 있다. 프로세서는 새로운 태스크에 대한 프롬프트 키(xM+1)와 프롬프트 키 풀에 있는 각 프롬프트 키(Km)를 유사 도 함수(PKSIM)에 입력하고, 유사도 함수의 결과를 기초로 소프트맥스(softmax) 연산을 통해 프롬프트 키 풀 (PKP)에 포함된 각 프롬프트 키(Km)의 최종 유사도를 산출한다. 프로세서는 프롬프트 키 풀(PKP)에 포함된 임의의 프롬프트 키(Km)와, 선정된 태스크(TM+1)의 프롬프트 키 (xM+1) 간의 최종 유사도(sm)를 수학식 5와 같이 산출한다. 수학식 5"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "프로세서는 다음 태스크에 활용하기 위해 선정된 태스크(TM+1)에 해당하는 프롬프트 키(xM+1)를 프롬프트 키 풀(PKP)에 추가한다. 따라서 프롬프트 키 풀(PKP)의 새로운 프롬프트 키(KM+1)는 수학식 6과 같이 선정된 태 스크(TM+1)의 프롬프트 키(xM+1)가 된다. 수학식 6 새로운 프롬프트 키(KM+1)가 추가된 프롬프트 키 풀(PKP)은 수학식 7과 같이 표현된다. 수학식 7"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "본 발명에 따른 프롬프트 기반 메타학습 네트워크의 추론 과정은 새로운 태스크에 대한 프롬프트 값을 반영하여 MAML 기반 사전학습 모델을 이용하여 추론이 진행된다. 따라서, 새로운 프롬프트 키와 프롬프트 값 풀(PVP: Prompt Value Pool)을 기초로 메모리 네트워크(MN: memory network)를 이용하여 새로운 태스크에 대한 프롬프 트 값을 획득하는(또는 설정하는) 과정이 필요하다. 이전에 학습한 태스크의 프롬프트 키에 대응하는 프롬프트 값(prompt value)을 저장하고 있는 프롬프트 값 풀 (PVP)은 수학식 8과 같이 표현될 수 있다. 즉, 프롬프트 값 풀(PVP)은 이전에 학습한 태스크에 대한 프롬프트 값의 집합이라고 할 수 있다. 구체적으로, 프롬프트 값 풀(PVP)은, 프롬프트 임베딩 네트워크(PEN), 메모리 네 트워크(MN) 및 MAML 기반 사전학습 모델(MPM)을 포함하여 구성된, 프롬프트 기반 메타학습 네트워크의 학습에 사용된 태스크에 대한 프롬프트 값의 집합이다. 수학식 8"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "한편, 메모리 네트워크(MN: memory network)는 프롬프트 키(prompt key)가 입력되면 해당하는 프롬프트 값 (prompt value)을 출력하는 네트워크이다. 메모리 네트워크를 이용하여 새로운 태스크에 대한 프롬프트 값을 획득하는 방법은 다양하다. 본 발명의 응용 분야에 따라 프롬프트 값을 획득하는 방법은 달라질 수 있다. 일례로, 프로세서는, 기존 프롬프트 키 풀(수학식 8 참조)에 포함된 프롬프트 키 중에서, 선정된 태스크 (TM+1)의 프롬프트 키(KM+1)와 가장 높은 유사도를 가지는 프롬프트 키(prompt key)를, 메모리 네트워크(MN)에 입 력하여 선정된 태스크(TM+1)에 대한 프롬프트 값(VM+1)을 획득할 수 있다. 즉, 메모리 네트워크(MN)는 선정된 태 스크(TM+1)의 프롬프트 키(KM+1)에 대하여 가장 높은 유사도를 가지는 프롬프트 키를 입력받으면 상기 프롬프트 키에 해당하는 프롬프트 값을 프롬프트 값 풀(PVP: Prompt Value Pool) V에서 추출하며, 프로세서는 이 프롬프트 값을 선정된 태스크(TM+1)에 대한 프롬프트 값(VM+1)으로 설정할 수 있다. 상술한 내용을 식으로 표현하 면 수학식 9와 같다. 수학식 9 다른 예로, 프로세서는, 프롬프트 키 풀(PKP)에서, 최종 유사도(sm)가 높은 순서대로 소정 개수의 프롬프 트 키를 선정하거나, 기준값 이상의 최종 유사도(sm)를 가지는 다수의 프롬프트 키를 선정할 수 있다. 이 경우, 프로세서는 최종 유사도를 기초로 각 프롬프트 키에 대한 가중치를 구하고, 각 프롬프트 키를 메모리 네 트워크에 입력하여 복수의 프롬프트 값을 획득한 후, 복수의 프롬프트 값의 가중치 합을 새로운 프롬프트 값 (VM+1)으로 설정할 수 있다. 또 다른 예로, 프로세서는 수학식 10과 같이, 최종 유사도(sm) 자체를 가중치로 삼아, 수학식 8의 프롬프 트 값 풀(PVP) V에 속한 모든 프롬프트 값의 가중치 합을 새로운 프롬프트 값(VM+1)으로 정할 수도 있다. 참고로, 소프트맥스 출력값의 총합은 1이므로, 각 프롬프트 키에 대한 최종 유사도(sm)의 총합은 1이 된다. 수학식 10"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "프롬프트 값 풀(PVP: Prompt Value Pool)에는 이전에 학습한 태스크의 프롬프트 임베딩 키에 대응하는 프롬프트 값(Vm)이 저장되어 있는데, 새로운 프롬프트 값(VM+1)이 추가되어 업데이트된 프롬프트 값 풀(V)은 수학식 11과 같이 표현된다. 수학식 11"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "프로세서는, 다음 태스크에 활용하기 위해, 상술한 과정을 통해 현재 태스크(TM+1)에 해당하는 프롬프트 값(VM+1)을 구한 후, 상기 프롬프트 값(VM+1)을 프롬프트 값 풀(V)에 추가한다. 프로세서는, 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 MAML 기반 사전학습 모델(MPM: MAML- based pre-trained model)에 입력할 임베딩을 생성한다. 예를 들어, 프로세서는, 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 결합(concatenation)하여 MAML 기반 사전 학습 모델에 대한 입력 임베딩을 생성한다. MAML 기반 사전학습 모델(MPM: MAML-based pre-trained model)은 수학식 12와 같이, 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 선정된 태스크(TM+1)에 대한 추론 결과(yM+1)를 도출한다.수학식 12"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "즉, 프로세서는 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 MAML 기반 사전학습 모델을 이용하 여 선정된 태스크(TM+1)에 대한 추론 결과(yM+1)를 생성한다. 구체적으로, 프로세서는 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 입력 임베딩을 생성하고, 입력 임베딩을 MAML 기반 사전학습 모델에 입력하여 추론 결과(yM+1)를 생성한다. 예를 들어, 프로세서는 선정된 태스크 (TM+1)와 그 프롬프트 값(VM+1)을 결합(concatenation)하여 입력 임베딩을 생성하고, 입력 임베딩 을 MAML 기반 사전학습 모델에 입력하여 선정된 태스크(TM+1)에 대한 추론 결과(yM+1)를 생성한다. 기존의 딥러닝 네트워크에서는 특정한 태스크에 대하여 추론하는 과정에서 태스크만을 입력으로 사용하지만, 본 발명은 태스크 정보와 해당 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여 추론하므 로, 과거에 유사한 태스크를 해결한 정보를 활용할 수 있는 장점이 있다. 즉, 본 발명은 기 생성된 프롬프트 값 을 추론에 반영함으로써, MAML 기반 사전학습 모델을 새로운 태스크에 빠른 속도로 적응시키므로, MAML 기반 사 전학습 모델을 미세 조정(fine-tuning)하는 것과 같은 효과를 가져올 수 있다. 본 발명의 일 실시예에 따른 프롬프트 기반 메타학습 네트워크에 포함된 딥러닝 네트워크는 상술한 바와 같이 3 개(프롬프트 임베딩 네트워크, 메모리 네트워크, MAML 기반 사전학습 모델)이다. 이하, 본 발명의 일 실시예에 따른 프롬프트 기반 메타학습 네트워크를 구성하는 3개의 딥러닝 네트워크의 학습 (learning) 과정에 대하여 설 명한다. 우선, MAML 기반 사전학습 모델은 태스크 분포(T)에서 무작위로 다수의 태스크를 선정한 후, 무작위로 선정된 태스크를 기초로 MAML 학습 방법론에 따라 일반화 성능을 최대화하는 방식으로 학습된다. MAML 기반 사전학습 모델은 태스크에 따라 다양한 MLP(multi-layer perceptron) 방식으로 구성될 수 있다. 예를 들어, MAML 기반 사전학습 모델은, 이미지 분별에 관한 태스크의 경우 CNN(Convolutional Neural Network)으로 구성될 수 있고, 강화학습에 관한 태스크에 대하여 액터-크리틱(actor-critic) 모델로 구성될 수 있으며, 자연어 처리에 관한 태 스크에 대하여 RNN 또는 트랜스포머(Transformer) 등으로 구성될 수 있다. MAML 학습 방법론은 공지된 방법론이므로, MAML 기반 사전학습 모델의 학습 과정에 대한 구체적인 설명은 생략 한다. 그리고, 메모리 네트워크(MN)는 어텐션 기반의 네트워크로 구성될 수 있는데, 프롬프트 키-프롬프트 값의 쌍을 이용하여 지도학습 방식으로 학습된다. 즉, 메모리 네트워크(MN)는, 이전에 학습한 태스크의 프롬프트 키 풀 (PKP)과 프롬프트 값 풀(PVP)에서 추출된 각 태스크의 프롬프트 키와 프롬프트 값의 쌍을 이용하여 학습될 수 있다. 이때, 프롬프트 키는 메모리 네트워크(MN)의 입력이 되고, 프롬프트 값은 레이블이 된다. 이렇게 학습된 메모리 네트워크(MN)는, 프롬프트 키가 입력되면 프롬프트 값을 출력하게 된다. 그리고, 프롬프트 임베딩 네트워크는 간단한 MLP로 구성될 수 있다. 프롬프트 임베딩 네트워크의 학습을 위해서 는 손실함수가 설정되어야 한다. 프롬프트 임베딩 네트워크는 학습된 MAML 기반 사전학습 모델 및 학습된 메모 리 네트워크를 이용하여 종단간 학습 방식(end-to-end learning)을 통해 학습된다. 즉, MAML 기반 사전학습 모 델 및 메모리 네트워크가 독립적으로 학습을 마친 후, 도 2와 같이 프롬프트 기반 메타학습 네트워크가 프롬프 트 임베딩 네트워크, 학습된 MAML 기반 사전학습 모델 및 학습된 메모리 네트워크로 구성되면, 종단간 학습을 통하여 프롬프트 임베딩 네트워크가 학습될 수 있다. 프롬프트 임베딩 네트워크의 학습에서, 벡터 공간 상에서 유사도가 높은 태스크의 프롬프트 키는 서로 가까이 배치하고 유사도가 낮은 태스크의 프롬프트 키는 서로 멀리 배치하도록 하는 메트릭(metric) 학습 방법이 사용 될 수 있다.프롬프트 임베딩 네트워크는 태스크 간의 유사도에 따라 프롬프트 키 벡터를 배치하는 것이므로, 그 학습에 있 어서 대조적 학습(contrastive learning)이 적용될 수 있다. 이상, 도 2를 참조하여 본 발명에 따른 프롬프트 기반 메타학습 네트워크의 추론 과정과 학습 과정을 설명하였 다. 본 발명에 따른 메타학습 네트워크의 학습 과정의 일부를 변경하여 메타 강화학습과 추론을 수행할 수 있다. 도 3은 본 발명에 따른 프롬프트 기반 메타 강화학습의 구성을 설명하기 위한 도면이다. 도 3의 프롬프트 기반 메타 강화학습은, 도 2를 참조하여 전술한 프롬프트 기반 메타학습의 응용이라고 할 수 있다. 따라서, 도 3의 프롬프트 기반 메타 강화학습의 추론 과정과 학습 과정은 전술한 프롬프트 기반 메타학습과 동일하다. 다만, 본 발명에 따른 프롬프트 기반 메타 강화학습에서 태스크와 MAML 기반 사전학습 모델의 구성상의 특징에 대하여 하 기에 설명한다. 본 발명에 따른 프롬프트 기반 메타 강화학습의 경우에도 태스크 분포에서 태스크를 샘플링하는데, 태스크 분포 에서 샘플링된 태스크는 트랜지션 튜플(transition tuple, tl)의 집합인 경로(trajectory, Tn)를 의미한다. 여 기서 트랜지션 튜플은 상태(state), 행동(action), 보상(reward) 및 전이 확률(transition probability)을 포 함하여 구성된다. 수학식 13은 경로(Tn)가 트랜지션 튜플의 집합임을 나타내며, 수학식 14는 트랜지션 튜플(tl)이 상태(sl), 행동 (al), 보상(rl) 및 전이 확률(pl)로 구성된 경우를 나타낸다. 수학식 13"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "수학식 14"}
{"patent_id": "10-2023-0041865", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "그리고, 본 발명에 따른 프롬프트 기반 메타 강화학습에 있어서, MAML 기반 사전학습 모델은 강화학습을 위한 액터(actor) 네트워크와 크리틱(critic) 네트워크로 분리된다. 참고로, 액터-크리틱 네트워크(actor-critic network)는 강화학습에서 많이 사용되는 방식으로, 행동을 결정하는 네트워크(actor)와 상태의 가치를 판단하는 네트워크(critic)를 분리하여 구성하는 방식이다. 액터-크리틱 네트워크가 제안되기 전에는 액터만을 이용하거 나, 크리틱만을 이용하였는데, 통합된 네트워크가 제안된 이후 강화학습 성능이 발전하였다. 도 4는, 본 발명의 일 실시예에 따른, 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법을 설명하기 위한 흐름도이다. 설명의 편의상 상기 추론 방법은, 본 발명의 일 실시예에 따른 프롬프트 기반 메타학습 방법을 수 행하는, 컴퓨터 시스템의 프로세서에 의해 수행되는 것으로 전제한다. S110 단계는 태스크 선정 단계이다. 프로세서는 태스크 분포 T에서 새로운 태스크(TM+1)를 선정한다. 태스크 분포 T는 이산 확률분포 또는 연 속 확률분포 중 어느 하나일 수 있다. 프로세서는 사용자 입력이나 설정에 따라 태스크 분포 T에서 새로 운 태스크(TM+1)를 선정할 수 있다. 이 경우, 새로운 태스크(TM+1)는 무작위로 선정될 수도 있고, 해결하려는 문 제(사용자 입력이나 설정에 따라 특정됨)를 기초로 선정될 수도 있다. 태스크 분포 T는 수학식 1과 같이 복수의 태스크를 포함하여 이산적으로 구성될 수 있다(수학식 1 참조). S120 단계는 프롬프트 키 생성 단계이다. 프로세서는 선정된 태스크(TM+1)를 프롬프트 임베딩 네트워크(PEN)에 입력하여 선정된 태스크(TM+1)에 대한 프롬프트 키(xM+1)를 생성한다(수학식 3 참조). S130 단계는 프롬프트 키 간의 유사도 산출 단계이다. 프로세서는, 유사도 함수를 이용하여, 프롬프트 키 풀(PKP)에 포함된 각 프롬프트 키와 선정된 태스크 (TM+1)에 대한 프롬프트 키(xM+1) 간의 유사도를 산출한다. 상기 프롬프트 키 풀(PKP)은 이전에 학습한 태스크에 대한 프롬프트 키(Km)의 집합이다(수학식 4 참조). 그리고 프로세서는 유사도 함수(PKSIM)로서 코사인 유 사도(cosine similarity)나 어텐션(attention) 등을 사용할 수 있다. 프로세서는 선정된 태스크에 대한 프롬프트 키(xM+1)와 프롬프트 키 풀에 있는 각 프롬프트 키(Km)를 유사 도 함수(PKSIM)에 입력하고, 유사도 함수의 결과를 기초로 소프트맥스(softmax) 연산을 통해 프롬프트 키 풀 (PKP)에 포함된 각 프롬프트 키(Km)와 선정된 태스크(TM+1)의 프롬프트 키(xM+1) 간의 유사도를 산출할 수 있다 (수학식 5 참조). 그리고, 프로세서는 선정된 태스크(TM+1)의 프롬프트 키(xM+1)를 프롬프트 키 풀(PKP)에 추가한다. 즉, 선 정된 태스크(TM+1)의 프롬프트 키(xM+1)는 프롬프트 키 풀(PKP)의 새로운 프롬프트 키(KM+1)가 된다(수학식 6과 수 학식 7 참조) S140 단계는 선정된 태스크에 대한 프롬프트 값을 획득하는 단계이다. 프로세서는, S130 단계에서 산출한 유사도와 프롬프트 키 풀(PKP)에 속한 프롬프트 키를 기초로, 메모리 네트워크(MN)를 이용하여 선정된 태스크 (TM+1)에 대한 프롬프트 값(VM+1)을 획득한다. 프로세서가 프롬프트 값(VM+1)을 획득하는 방법은 다양하다. 전술한 대로, 프로세서는, 기존 프롬프 트 키 풀(수학식 8 참조)에 포함된 프롬프트 키 중에서, 선정된 태스크(TM+1)의 프롬프트 키(KM+1)와 가장 높은 유사도를 가지는 프롬프트 키를, 메모리 네트워크(MN)에 입력하여 선정된 태스크(TM+1)에 대한 프롬프트 값(VM+ 1)을 획득할 수 있다(수학식 9 참조). 다른 예로, 프로세서는, 프롬프트 키 풀(PKP)에서, 최종 유사도(sm)가 높은 순서대로 소정 개수의 프롬프 트 키를 선정하거나, 기준값 이상의 최종 유사도(sm)를 가지는 다수의 프롬프트 키를 선정할 수 있다. 이 경우, 프로세서는 최종 유사도를 기초로 각 프롬프트 키에 대한 가중치를 구하고, 각 프롬프트 키를 메모리 네 트워크에 입력하여 복수의 프롬프트 값을 획득한 후, 복수의 프롬프트 값의 가중치 합을 새로운 프롬프트 값 (VM+1)으로 설정할 수 있다. 또 다른 예로, 프로세서는 최종 유사도(sm) 자체를 가중치로 삼아, 수학식 8의 프롬프트 값 풀(PVP) V에 속한 모든 프롬프트 값의 가중치 합을 새로운 프롬프트 값(VM+1)으로 정할 수도 있다(수학식 10 참조). 그리고, 프로세서는 새롭게 획득한 프롬프트 값(VM+1)을 프롬프트 값 풀(PVP) V에 추가한다(수학식 11 참 조).S150 단계는 MAML 기반 사전학습 모델에 입력할 임베딩 벡터를 생성하는 단계이다. 프로세서는, 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 MAML 기반 사전학습 모델(MPM)에 입력 할 임베딩 벡터를 생성한다(수학식 12 참조). 예를 들어, 프로세서는, 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 결합(concatenation)하여 MAML 기반 사전 학습 모델에 입력할 임베딩 벡터를 생성한다. S160 단계는 MAML 기반 사전학습 모델을 이용하여 추론 결과를 도출하는 단계이다. 프로세서는 선정된 태스크(TM+1)와 그 프롬프트 값(VM+1)을 기초로 생성된 임베딩 벡터를 MAML 기반 사전학 습 모델(MPM)에 입력하여 선정된 태스크(TM+1)에 대한 추론 결과(yM+1)를 생성한다. 전술한, 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법은 도면에 제시된 흐름도를 참조로 하여 설명되었 다. 간단히 설명하기 위하여 상기 방법은 일련의 블록들로 도시되고 설명되었으나, 본 발명은 상기 블록들의 순 서에 한정되지 않고, 몇몇 블록들은 다른 블록들과 본 명세서에서 도시되고 기술된 것과 상이한 순서로 또는 동 시에 일어날 수도 있으며, 동일한 또는 유사한 결과를 달성하는 다양한 다른 분기, 흐름 경로, 및 블록의 순서 들이 구현될 수 있다. 또한, 본 명세서에서 기술되는 방법의 구현을 위하여 도시된 모든 블록들이 요구되지 않 을 수도 있다. 한편 도 4를 참조한 설명에서, 각 단계는 본 발명의 구현예에 따라서, 추가적인 단계들로 더 분할되거나, 더 적 은 단계들로 조합될 수 있다. 또한, 일부 단계는 필요에 따라 생략될 수도 있고, 단계 간의 순서가 변경될 수도 있다. 아울러, 기타 생략된 내용이라 하더라도 도 2 내지 도 3의 내용은 도 4의 내용에 적용될 수 있다. 또한, 도 4의 내용은 도 2 내지 도 3의 내용에 적용될 수 있다. 도 5는 본 발명의 실시예에 따른 프롬프트 기반 메타학습 방법 및 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법을 구현하기 위한 컴퓨터 시스템을 나타낸 블록도이다. 도 5의 컴퓨터 시스템은 도 2의 메타학습 구성에 따른 메타학습 방법 및 그 추론 방법은 물론, 도 3의 메타 강 화학습 구성에 따른 메타 강화학습 방법 및 그 추론 방법에도 적용될 수 있다. 또한 도 5의 컴퓨터 시스템은 도 4에 도시된 본 발명의 일 실시예에 따른, 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법을 수행할 수 있 다. 도 5를 참조하면, 컴퓨터 시스템은, 버스를 통해 통신하는 1개 이상의 프로세서, 메모리 , 입력 인터페이스 장치, 출력 인터페이스 장치 및 저장 장치 중 적어도 하나를 포함 할 수 있다. 컴퓨터 시스템은 또한 네트워크에 결합된 통신 장치를 더 포함할 수 있다. 프로세서는 메모리 또는 저장 장치에 저장된 명령을 실행한다. 프로세서는 중앙 처리 장치(central processing unit, CPU)이거나 반도체 장치일 수 있다. 프로세서는 본 발명에 따른 프롬프 트 기반 메타학습 네트워크를 학습시킬 수 있고, 본 발명에 따른 프롬프트 기반 메타학습 네트워크를 이용한 추 론 방법을 수행할 수 있다. 프로세서는 메모리 또는 저장 장치에 저장된 명령을 실행함으로써, 설정에 따라 태스크 분포 에서 태스크를 선정하고, 상기 선정된 태스크를 프롬프트 임베딩 네트워크에 입력하여 상기 선정된 태스크에 대 한 프롬프트 키를 생성하며, 코사인 유사도 및 어텐션 중 어느 하나를 포함하는 유사도 함수를 이용하여, 상기 선정된 태스크에 대한 프롬프트 키와 프롬프트 키 풀에 포함된 프롬프트 키 간의 유사도를 산출하고, 상기 유사 도 및 상기 프롬프트 키 풀에 포함된 프롬프트 키를 기초로 메모리 네트워크를 이용하여 상기 선정된 태스크에 대한 프롬프트 값을 획득하며, 상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 MAML 기반 사전학습 모델을 이용하여 상기 선정된 태스크에 대한 추론 결과를 생성하도록 구성된다. 상기 프롬프트 키 풀은, 상기 프롬프트 임베딩 네트워크, 상기 메모리 네트워크 및 상기 MAML 기반 사전학습 모 델의 학습에 사용된 태스크에 대한 프롬프트 키의 집합이다. 프로세서는 상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 기초로 임베딩 벡터를 생성 하고, 상기 임베딩 벡터를 상기 MAML 기반 사전학습 모델에 입력하여 상기 추론 결과를 생성하도록 구성될 수 있다. 이때, 프로세서는 상기 선정된 태스크와 상기 선정된 태스크에 대한 프롬프트 값을 결합 (concatenation)하여 상기 임베딩 벡터를 생성하도록 구성될 수 있다. 프로세서는 상기 프롬프트 키 풀에 포함된 프롬프트 키 중에서, 상기 선정된 태스크의 프롬프트 키와 가 장 높은 유사도를 가지는 프롬프트 키를, 상기 메모리 네트워크에 입력하여 상기 선정된 태스크에 대한 프롬프 트 값을 획득하도록 구성될 수 있다. 프로세서의 기능에 관한 상세한 내용은 도 2 내지 도 4를 참조한 설명을 참조하여 이해할 수 있다. 즉, 도 2 내지 도 4를 참조하여 설명된 내용이 도 5에 도시된 컴퓨터 시스템에 포함된 프로세서의 기능 에 포함될 수 있다. 메모리 및 저장 장치는 컴퓨터에서 판독 가능한 명령들을 저장한다. 메모리 및 저장 장치 는 다양한 형태의 휘발성 또는 비휘발성 저장 매체를 포함할 수 있다. 예를 들어, 메모리는 ROM(read only memory) 및 RAM(random access memory)를 포함할 수 있다. 본 기재의 실시예에서 메모리는 프로세서의 내 부 또는 외부에 위치할 수 있고, 메모리는 이미 알려진 다양한 수단을 통해 프로세서와 연결될 수 있다. 메모리 는 다양한 형태의 휘발성 또는 비휘발성 저장 매체이며, 예를 들어, 메모리는 읽기 전용 메모리(read-only memory, ROM) 또는 랜덤 액세스 메모리(random access memory, RAM)를 포함할 수 있다. 따라서, 본 발명의 실시예는 컴퓨터에 구현된 방법으로서 구현되거나, 컴퓨터 실행 가능 명령이 저장된 비일시 적 컴퓨터 판독 가능 매체로서 구현될 수 있다. 한 실시예에서, 프로세서에 의해 실행될 때, 컴퓨터 판독 가능 명령은 본 기재의 적어도 하나의 양상에 따른 방법을 수행할 수 있다. 통신 장치는 유선 신호 또는 무선 신호를 송신 또는 수신할 수 있다. 또한, 본 발명의 실시예에 따른 방법은 다양한 컴퓨터 수단을 통해 수행될 수 있는 프로그램 명령 형태로 구현 되어, 컴퓨터 판독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 컴퓨터 판독 가능 매체에 기록되는 프로그램 명령은, 본 발명의 실시예를 위해 특별히 설계되어 구성된 것이거나, 컴퓨터 소프트웨어 분야의 통상의 기술자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체는 프로그램 명령을 저장하고 수행하도록 구성된 하드웨어 장치를 포함할 수 있다. 예를 들 어, 컴퓨터 판독 가능 기록 매체는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광 기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 롬(ROM), 램(RAM), 플래시 메모리 등일 수 있다. 프로그램 명령은 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라, 인터프리터 등을 통해 컴퓨터에 의해 실행될 수 있는 고급 언어 코드를 포함할 수 있다. 상기에서는 본 발명의 바람직한 실시예를 참조하여 설명하였지만, 해당 기술 분야의 숙련된 당업자는 하기의 특 허 청구의 범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명을 다양하게 수정 및 변경시킬 수 있음을 이해할 수 있을 것이다."}
{"patent_id": "10-2023-0041865", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 메타학습의 일반적인 구성을 설명하기 위한 도면이다. 도 2는 본 발명에 따른 프롬프트 기반 메타학습의 구성을 설명하기 위한 도면이다. 도 3은 본 발명에 따른 프롬프트 기반 메타 강화학습의 구성을 설명하기 위한 도면이다. 도 4는, 본 발명의 일 실시예에 따른, 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법을 설명하기 위한 흐름도이다. 도 5는 본 발명의 실시예에 따른 프롬프트 기반 메타학습 방법 및 프롬프트 기반 메타학습 네트워크를 이용한 추론 방법을 구현하기 위한 컴퓨터 시스템을 나타낸 블록도이다."}
