{"patent_id": "10-2023-0118141", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0035751", "출원번호": "10-2023-0118141", "발명의 명칭": "메타버스 기반의 인공지능 심리상담 시스템 및 방법", "출원인": "주식회사 듀코젠", "발명자": "박정호"}}
{"patent_id": "10-2023-0118141", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "네트워크를 통해 접속한 사용자 단말로 메타버스 환경에서 컨텐츠를 제공하는 메타버스 처리 루틴;메타버스 환경에서 상기 사용자 단말로부터 수신한 발화내용을 파라메타로 하여 LLM(Large Language Model)이제공하는 API(Application Programming Interface)를 호출하고, 상기 LLM으로부터 수신한 답변내용을 상기 메타버스 처리 루틴으로 전달하여, 상기 메타버스 환경 내의 NPC(Non Player Character)를 통해 상기 사용자 단말로 전달하는 상담 서비스 루틴;을 포함하되,제1 및 제2 사용자 단말이 동시에 상기 메타버스 환경에 접속하여 상기 NPC와 동시에 대화를 진행하는 경우 상기 상담 서비스 루틴은, 상기 제1 사용자 단말과 상기 LLM의 대화를 위한 제1 세션, 상기 제2 사용자 단말과 상기 LLM의 대화를 위한 제2 세션을 생성하며, 상기 제1 사용자 단말과 상기 LLM의 대화내용을 노드로 저장하는 제1 데이터 구조 및 상기 제2 사용자 단말과상기 LLM의 대화내용을 노드로 저장하는 제2 데이터 구조를 생성하여 각 사용자 단말과 상기 LLM의 대화내용을각각 저장 - 이때, 대화내용은 각 사용자 단말로부터 수신한 발화내용과 상기 LLM의 답변내용을 포함하며, 제1데이터 구조와 제2 데이터 구조는 서로 독립적임 - 하되, 상기 제1 사용자 단말과 상기 LLM의 대화내용 각각에 대해, 제2 사용자 단말에 관한 내용인지, 제2 사용자 단말의 대화 내용을 인용하는 내용인지, 또는 해당사항이 없는지를 판단하여, 판단결과에 따라 플래그를 설정하여저장하며,상기 상담 서비스 루틴은 상기 제1 세션 및 제2 세션의 생성시, 상기 LLM으로 하여금 텍스트 데이터를 수신하여분석하도록 하는 툴/에이전트를 이용하여 심리상담에 관한 컨텐츠를 텍스트 형태로 전달하고, 대화내용의 적어도 일부를 순차적으로 저장하였다가 차회 호출시에 파라메타로 넣어서 API를 호출하는 툴/에이전트를 이용하여 상기 LLM의 API를 호출 - 이때, 상기 툴/에이전트가 저장하는 대화내용은, 상기 제1 데이터구조 및 제2 데이터구조와 구별됨 - 하는 것을 특징으로 하는 메타버스 기반의 인공지능 심리상담 시스템."}
{"patent_id": "10-2023-0118141", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 상담 서비스 루틴은 상기 제1 데이터 구조에 저장되는 노드의 내용 가운데 상기 제2 사용자 단말에 관한대화내용 및/또는 상기 제2 사용자 단말의 대화 내용을 인용하는 대화내용, 상기 제2 데이터 구조에 저장되는노드의 내용 가운데 상기 제1 사용자 단말에 관한 대화내용 및/또는 상기 제1 사용자 단말의 대화 내용을 인용하는 대화내용을 제3 데이터구조로 저장 - 상기 제3 데이터구조는 제1 및 제2 데이터구조와 독립적임 - 하되,상기 제1 사용자 단말로부터 수신한 발화내용이 상기 제2 사용자 단말에 관한 대화내용 또는 상기 제2 사용자단말의 대화 내용을 인용하는 대화내용인 경우, 해당 발화내용과 상기 제3 데이터구조로부터 인출된 대화내용의 전부 또는 최근 일부를 파라메타로 하여, 제3 세션을 통해 상기 LLM의 API를 호출하고,상기 제1 사용자 단말로부터 수신한 발화내용과 상기 LLM으로부터 수신한 답변내용을 제1 및/또는 제3 데이터구조에 저장하는 것을 특징으로 하는 메타버스 기반의 인공지능 심리상담 시스템."}
{"patent_id": "10-2023-0118141", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 상담 서비스 루틴은 제1 사용자 단말로부터 수신한 발화내용이 제2 사용자 단말과 상기 LLM의 대화내용을인용하는 대화인 경우,상기 제2 데이터구조와 상기 수신한 발화 내용을 파라메타로하여 LLM의 API를 호출 - 이때, 상기 LLM의 API 호출은 상기 제1 세션 및 제2 세션을 이용하지 않음. - 하여, 상기 제2 사용자 단말의 대화내용 가운데 인용된 노공개특허 10-2025-0035751-3-드의 내용 또는 해당 노드에 대한 포인터를 결과값으로 반환받는 것을 특징으로 하는 메타버스 기반의 인공지능심리상담 시스템."}
{"patent_id": "10-2023-0118141", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 상담 서비스 루틴은 상기 제3 세션을 통해 상기 LLM의 API를 호출할 때, 상기 제1 사용자 단말로부터 수신한 발화내용 및 상기 LLM의 API의 결과값으로 반환받은 노드의 내용을 포함하는 제1 파라메타, 상기 제3 데이터구조로부터 인출된 대화내용의 전부 또는 최근 일부를 제2 파라메타로 하여 상기 API를 호출하는 것을 특징으로하는 메타버스 기반의 인공지능 심리상담 시스템."}
{"patent_id": "10-2023-0118141", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 상담 서비스 루틴은 상기 제1 사용자 단말로부터 수신한 발화내용 및 상기 LLM의 API의 결과값으로 반환받은 노드의 내용을 파라메타로 하여 LLM의 API를 호출 - 이때, 상기 LLM의 API 호출은 상기 제1 세션, 제2 세션 및 제3 세션을 이용하지않음. - 하여 결과값으로 상기 제1 파라메타를 반환받는 것을 특징으로 하는 메타버스 기반의 인공지능 심리상담 시스템."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "메타버스 기반의 인공지능 심리상담 시스템 및 방법이 개시된다. 본 발명에 의한 메타버스 기반의 인공지능 심리 상담 시스템은 네트워크를 통해 접속한 사용자 단말로 메타버스 환경에서 컨텐츠를 제공하는 메타버스 처리 루틴; 및 메타버스 환경에서 상기 사용자 단말로부터 수신한 발화내용을 파라메타로 하여 LLM(Large Language (뒷면에 계속)"}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 메타버스 환경 내에서 인공지능을 이용한 심리상담 시스템 및 방법에 관한 것으로, 더욱 구체적으로 는 LLM(Large Language Model) 인공지능 기반의 상담사를 구현하여 메타버스 환경 내에서 단독으로 또는 여러 명의 상담 대상자가 동시에 대화 또는 대담하듯 상담을 받을 수 있도록 하는 심리상담 시스템 및 방법에 관한 것이다."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "LLM(Large Language Model)의 등장 이후, 인공지능을 이용하는 수많은 서비스들이 개발되고 있다. 현 시점 기준 으로 가장 진화된 모델로 평가받는 OPEN AI사의 GPT4의 경우 서비스 개발을 위한 API를 지원하는데, 프롬프트 상태에서 주고받는 대화와는 달리 매번 호출시마다 기존의 대화내용을 기억하지 못하기 때문에 적당한 Temperature, Max token 값을 설정한 다음, 기존의 대화내용을 전달해야만 한다. 하지만, 대화가 길어지면 전달 할 수 있는 파라메타의 크기를 초과할 뿐 아니라, 사용 비용이 과도하게 증가하는 문제가 있다. 이에, LangChain과 같은 프레임워크가 개발된 바 있으며, 이를 이용하면 LLM을 활용한 개발 작업이 한편 수월해 진다. LLM 클래스로 다양한 언어모델(GPT4, BARD 등)을 간편하게 활용할 수 있다는 장점 이외에도, RAG 파이프 라인과 에이전트의 구현을 가능케하기 때문에 수많은 질문-답변 쌍을 참조해야 하는 챗봇 형태의 서비스를 간단 하게 구현할 수 있다. 그럼에도 불구하고, LLM 자체의 내재적인 한계도 명확하다. 심지어 LangChain을 이용한다고 하여도 LLM이 대화의 맥락이 단선적으로 이어지지 않는 경우에는 LLM을 이용한 대화의 흐름이 끊어지며, 처음부터 대화를 새로 시작하는 것과 같은 경험을 하게 된다. LangChain을 이용하지 않고 호출한다면 이러한 문제는 더 심각하다. 따라서, LLM(Language Model) 기반으로 개발된 대화형 서비스들은 인공지능이 대화의 맥락을 놓치지 않도록 설 계된다. 다시 말하자면, GPT-4에 LangChain에서 제공하는 각종 에이전트와 툴을 활용하는 것만으로는 둘 이상의 사용자 가 동시에 하나의 인공지능과 대화하는 형태의 서비스는 구현하기 힘든 한계가 있다. 그런데, 심리상담의 경우 상담대상자 혼자의 문제가 아닌, 둘 또는 그 이상의 상담대상자 사이의 관계 속에서 문제점을 파악하고 상담이 이루어져야 하는 경우가 많아, 인공지능을 이용한 상담서비스의 개발에는 뚜렷한 기술적 한계가 존재한다. 선행기술문헌 특허문헌 (특허문헌 0001) 1. 미국등록특허 US11514330 \"Systems and methods for continual updating of response generation by an artificial intelligence chatbot\" (특허문헌 0002) 2. 미국등록특허 US11012381 \"Computing performance scores of conversational artificial intelligence agents\" (특허문헌 0003) 3. 국제특허공개 WO2021195130 \"Cross-context natural language model generation\" 비특허문헌 (비특허문헌 0001) LangChain 홈페이지 https://python.langchain.com/docs/get_started/introduction.html"}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 이러한 종래기술의 문제점을 해소하기 위한 것으로, 메타버스 상에서 둘 이상의 상담 대상자가 인공 지능 상담사와 심리상담을 할 수 있도록 하는 심리상담 시스템 및 방법의 제공을 그 목적으로 한다. 특히, 둘 이상의 상담 대상자가 동시에 상담에 참여하는 경우, LLM이 맥락을 놓치지 않도록 각 상담 대상자를 식별하여 서로 독립적인 상담 세션을 생성하고 관리하는 심리상담 시스템 및 방법의 제공에 그 목적이 있다."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기와 같은 목적을 달성하기 위하여 본 발명에 의한 메타버스 기반의 인공지능 심리상담 시스템은 네트워크를 통해 접속한 사용자 단말로 메타버스 환경에서 컨텐츠를 제공하는 메타버스 처리 루틴; 및 메타버스 환경에서 상기 사용자 단말로부터 수신한 발화내용을 파라메타로 하여 LLM(Large Language Model)이 제공하는 API(Application Programming Interface)를 호출하고, 상기 LLM으로부터 수신한 답변내용을 상기 메 타버스 처리 루틴으로 전달하여, 상기 메타버스 환경 내의 NPC(Non Player Character)를 통해 상기 사용자 단말 로 전달하는 상담 서비스 루틴;을 포함한다. 이때, 제1 및 제2 사용자 단말이 동시에 상기 메타버스 환경에 접속하여 상기 NPC와 동시에 대화를 진행하는 경 우 상기 상담 서비스 루틴은, 상기 제1 사용자 단말과 상기 LLM의 대화를 위한 제1 세션, 상기 제2 사용자 단말 과 상기 LLM의 대화를 위한 제2 세션을 생성하여 대화를 진행한다. 이때, 제1 세션과 제2 세션은 서로 독립적이다. 대화의 진행은 후술하는 바와 같이 제1 사용자 단말과 제2 사용자 단말이 서로 관련없이 독립적인 대화를 하는 경우에 한해 제1 및 제2 세션이 이용되며, 서로 관련이 있는 경우에는 제3 세션이 이용된다. 한편, 제1 세션을 통한 상기 제1 사용자 단말과 상기 LLM의 대화내용을 노드로 하는 제1 데이터 구조를 생성하 여 저장하며, 제2 세션을 통한 상기 제2 사용자 단말과 상기 LLM의 대화내용을 노드로 하는 제2 데이터 구조를 생성하여 저장한다. 제3 세션을 통한 대화내용은 제3 데이터 구조에 저장되는데, 이때 제1 사용자 단말의 발화에 의한 대화인 경우 에는 제1 데이터구조에, 제2 사용자 단말의 발화에 의한 대화인 경우에는 제2 데이터 구조에 저장된다. 이때, 대화내용이란 각 사용자 단말로부터 수신한 발화내용과 상기 LLM의 답변내용을 포함한다. 한편, 상기 제1 사용자 단말과 상기 LLM의 대화내용 각각에 대해, 제2 사용자 단말에 관한 내용인지, 제2 사용 자 단말의 대화 내용을 인용하는 내용인지, 또는 해당사항이 없는지를 판단하여, 판단결과에 해당하는 플래그를설정하여 저장한다. 상기 상담 서비스 루틴은 상기 제1 세션, 제2 세션 및 제 3 세션의 생성시, 상기 LLM으로 하여금 텍스트 데이터 를 수신하여 분석하도록 하는 툴/에이전트를 이용하여 심리상담에 관한 컨텐츠를 텍스트 형태로 전달함으로써 초기화(Initialize)를 수행하며, 상기 제1 세션, 제2 세션 및 제 3 세션을 통한 대화의 진행시, 대화내용의 적어도 일부를 순차적으로 저장하였 다가 차회 호출시에 파라메타로 넣어서 API를 호출하는 툴 또는 에이전트를 이용하여 상기 LLM의 API를 호출한 다. 상기 툴 또는 에이전트는 바람직하게는 Langchain 프레임워크에서 제공되는 것을 사용할 수 있다. 이때, 상기 툴/에이전트가 저장하는 대화내용은 상기 제1 데이터구조 및 제2 데이터구조와는 다른 것이다. 한편, 상기 상담 서비스 루틴은 상기 제1 데이터 구조에 저장되는 노드의 내용 가운데 상기 제2 사용자 단말에 관한 대화내용 및/또는 상기 제2 사용자 단말의 대화 내용을 인용하는 대화내용, 상기 제2 데이터 구조에 저장 되는 노드의 내용 가운데 상기 제1 사용자 단말에 관한 대화내용 및/또는 상기 제1 사용자 단말의 대화 내용을 인용하는 대화내용을 제3 데이터구조로 저장한다. 이때, 상기 제1 사용자 단말로부터 수신한 발화내용이 상기 제2 사용자 단말에 관한 대화내용 또는 상기 제2 사 용자 단말의 대화 내용을 인용하는 대화내용인 경우, 해당 발화내용과 상기 제3 데이터구조로부터 인출된 대화 내용의 전부 또는 최근 일부를 파라메타로 하여, 제3 세션을 통해 상기 LLM의 API를 호출하고, 상기 제1 사용자 단말로부터 수신한 발화내용과 상기 LLM으로부터 수신한 답변내용을 제3 데이터구조에 저장한 다. 이때, 제1 데이터구조에도 저장할 수 있다. 그런데, 상기 상담 서비스 루틴은 제1 사용자 단말로부터 수신한 발화내용이 제2 사용자 단말과 상기 LLM의 대 화내용을 인용하는 대화인 경우에는 추가적인 처리가 필요하다. 우선 상기 제2 데이터구조와 상기 수신한 발화 내용을 파라메타로하여 LLM의 API를 호출하여, 상기 제2 사용자 단말의 대화내용 가운데 인용된 노드의 내용 또는 해당 노드에 대한 포인터를 결과값으로 반환받는다. 이때의 API호출은 제1, 제2, 제3 세션을 이용하지 않으며, token의 사용량을 줄일 수 있도록 일회성으로 호출함 이 바람직하다. API 함수의 결과값을 반환받은 상담 서비스 루틴은 상기 제3 세션을 통해 상기 LLM의 API를 호출할 때, 상기 제 1 사용자 단말로부터 수신한 발화내용 및 상기 LLM의 API의 결과값으로 반환받은 노드의 내용을 포함하는 제1 파라메타, 상기 제3 데이터구조로부터 인출된 대화내용의 전부 또는 최근 일부를 제2 파라메타로 하여 상기 API 를 호출한다. 이때, 제1 파라메타는 상기 제1 사용자 단말로부터 수신한 발화내용과, 그 발화내용이 인용하고 있는 제2 사용 자 단말의 대화 내용 가운데 적어도 일부를 이용하여 텍스트 형태로 재구성된 것으로, API호출은 제1, 제2, 제3 세션을 이용하지 않고 LLM의 API를 일회성으로 호출하여 적당하게 재구성할 수 있다."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이러한 본 발명에 의할 때, 각 상담 대상자와의 대화를 서로 다른 세션을 통해 LLM을 호출하여 각각 서로 독립 적인 상담이 진행되도록 하되, 상담 대상자 둘 사이의 관계성에 대한 대답이 필요한 경우, 관련된 대화 내용을 각각 추출하여 또 다른 LLM 세션에 파라메타로 전달함으로써 맥락의 일관성을 유지할 수 있다."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 본 발명의 바람직한 실시예 및 첨부하는 도면을 참조하여 본 발명을 상세히 설명하되, 도면의 동일 한 참조부호는 동일한 구성요소를 지칭함을 전제하여 설명하기로 한다. 발명의 상세한 설명 또는 특허청구범위에서 어느 하나의 구성요소가 다른 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 당해 구성요소만으로 이루어지는 것으로 한정되어 해석되지 아니하며, 다른 구 성요소들을 더 포함할 수 있는 것으로 이해되어야 한다. 도 1은 본 발명에 의한 인공지능 심리상담 시스템이 LLM과 사용자 단말로 연결되는 관계를 설명하는 망구성도이 다. 본 발명에 의한 인공지능 심리상담 시스템은 하나 또는 그 이상의 서버로 구현될 수 있으며, 기능적으로는 인터넷 망을 통해 접속한 상담 대상자 단말(201, 202)로 메타버스 상에서 컨텐츠를 제공하는 메타버스 처리 루 틴과, 상담 대상자 단말(201, 202)로부터 입력받은 대화내용을 LLM으로 전달하고, LLM로부터 제공받은 답변내용을 메타버스 처리 루틴로 전달함으로써, 상담 대상자 단말(201, 202)을 통해 상담 대상 자가 심리 상담을 받을 수 있도록 하는 상담 서비스 루틴을 포함한다. 이들 상담 서비스 루틴과 메타버스 처리 루틴는 소프트웨어로 구현되어 단일의 서버에서 실행되거 나, 또는 둘 이상의 서버에서 분산처리될 수 있다. 이때, LLM은 인공지능 서비스 서버로, 예컨대, 공지의 OpenAI사의 Gpt-4가 사용될 수 있다. 메타버스는 가상현실 또는 증강현실일 수도 있으며, 또는 조금 더 고전적인 형태로 컴퓨터 모니터 상에서 그래 픽 형태로 표현되는 것일 수도 있다. 따라서, 상담 대상자 단말(201, 202)은 데스크탑 컴퓨터나 랩탑 컴퓨터, 스마트폰, 타블렛과 같은 형태의 하드 웨어일 수도 있으며, 또는 가상현실 HMD, 증강현실 디바이스일 수도 있다. 도 2는 본 발명에 의한 인공지능 심리상담 시스템의 하드웨어 구조를 예시한다. 인공지능 심리상담 시스템은 컴퓨팅 자원을 제공하고 컴퓨터를 제어하는 CPU를 포함한다. CPU는 마이크로프로세서 등으로 구현될 수 있고, 또한 수학적 계산을 위한 그래픽 프로세서 및/또는 부동 소수점 코프 로세서를 포함할 수 있다. 또한, 인공지능 심리상담 시스템은 랜덤 액세스 메모리(RAM) 및 읽기 전용 메모 리(ROM)의 형태일 수 있는 시스템 메모리를 포함할 수 있다. 입력 컨트롤러는 키보드, 마우스 또는 스타일러스와 같은 다양한 입력 장치(들)에 대한 인터페이스를 수행한다. 또한, 스캐너와 통신하는 스캐너 컨트롤러가 있을 수 있다. 인공지능 심리상담 시스템은 하나 이상의 스토리지 디바이스 와 인터페이스하기 위한 스토리지 컨트 롤러를 포함할 수 있으며, 각 스토리지 디바이스 는 본 발명의 다양한 실시예를 구현하는 프로그램의 실시예를 포함할 수 있는 운영 체제, 유틸리티 및 애플리케이션에 대한 명령 프로그램을 기록하는 데 사용될 수 있는 자기 테이프 또는 디스크와 같은 저장 매체 또는 광학 매체를 포함할 수 있다. 또한, 스토리지 디바이스 는 본 발명에 따라 처리된 데이터 또는 처리될 데이터를 저장하는 데 사용될 수 있다. 인공지능 심리상담 시스템은 음극선관(CRT), 박막 트랜지스터(TFT) 디스플레이, 또는 다른 유형의 디스플 레이일 수 있는 디스플레이 장치에 인터페이스를 제공하기 위한 디스플레이 컨트롤러를 포함할 수 있 다. 인공지능 심리상담 시스템은 프린터와 통신하기 위한 프린터 컨트롤러를 포함할 수 있다. 통신 컨트롤러는 하나 이상의 통신 장치와 인터페이싱할 수 있으며, 이는 인공지능 심리상담 시스템 이 인터넷, 이더넷 클라우드, FCoE/DCB 클라우드, LAN(Local Area Network), WAN(Wide Area Network), SAN(Storage Area Network)을 포함하는 임의의 다양한 네트워크를 통해, 또는 적외선 신호를 포함한 적절한 전 자기 캐리어 신호를 통해 원격 장치에 연결할 수 있게 한다. 도 2에 도시된 인공지능 심리상담 시스템에서, 모든 주요 시스템 구성요소는 하나 이상의 물리적 버스를 나타낼 수 있는 버스에 연결할 수 있다. 그러나 다양한 시스템 구성 요소는 물리적으로 서로 근접해 있을 수도 있고 그렇지 않을 수도 있습니다. 예를 들어, 입력 데이터 및/또는 출력 데이터는 한 물리적 위치에서 다 른 물리적 위치로 원격으로 전송될 수 있다. 게다가, 본 발명의 다양한 실시예를 구현하는 프로그램은 네트워크 를 통해 원격 위치(예를 들어, 외부 장치)로부터 액세스될 수 있다. 이러한 데이터 및/또는 프로그램은, 하드디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 홀로그램 장치와 같은 광학 매체, 자기 광 학 매체, 및 ASIC(주문형 집적 회로), PLD(프로그래밍가능 논리 장치), 플래시 메모리 장치, ROM 및 RAM 장치와 같은 프로그램 코드를 저장하거나 저장 및 실행하도록 특별히 구성된 하드웨어 장치를 통해 전달되지만, 이에 제한되지 않는 다양한 기계 판독 가능 매체를 통해 전달될 수 있다. 본 발명의 실시예는 단계가 수행되도록 하는 하나 이상의 프로세서 또는 처리 유닛에 대한 명령으로 하나 이상 의 비일시적 컴퓨터 판독가능 매체에 인코딩될 수 있다. 하나 이상의 비일시적 컴퓨터 판독 가능 매체는 휘발성 및 비휘발성 메모리를 포함해야 한다는 점에 유의해야 한다. 하드웨어 구현 또는 소프트웨어/하드웨어 구현을 포함하는 선택적인 구현이 가능하다는 점에 유의해야 한다. 하드웨어 구현 기능은 ASIC(들), 프로그래밍 가능한 어레이, 디지털 신호 처리 회로 등을 사용하여 실현될 수 있다. 따라서 모든 청구범위에서 사용될 수 있는 “수 단”이라는 용어는 소프트웨어 및 하드웨어 구현을 모두 포함하도록 의도된다. 유사하게, 본 명세서에서 사용될 수 있는 용어인 “컴퓨터 판독 가능 매체 또는 매체”는 그 위에 구현된 명령어 프로그램을 갖는 소프트웨어 및 /또는 하드웨어, 또는 이들의 조합을 포함한다. 이러한 선택적인 구현을 염두에 두고, 도면 및 수반되는 설명은 필요한 처리를 수행하는 프로그램 코드 작성(즉, 소프트웨어) 또는 회로 제조(즉, 하드웨어)를 위해 필요한 기 능적 정보를 당업자에게 제공한다는 것을 이해해야 한다. 또한, 본 발명의 실시예는 다양한 컴퓨터 구현 동작을 수행하기 위한 컴퓨터 코드를 갖는 비일시적 유형의 컴퓨 터 판독 가능 매체를 갖는 컴퓨터 제품에 관한 것일 수 있음을 유의해야 한다. 상기 매체 및 컴퓨터 코드는 본 발명을 위하여 특별히 설계되고 구성된 것들이거나 관련 기술 분야에서 통상의 지식을 가진 자에게 알려져 있거 나 사용 가능한 것일 수도 있다. 유형의 컴퓨터 판독 가능 매체의 예에는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체; CD-ROM 및 홀로그램 장치와 같은 광 매체; 광자기 매체; 및 ASIC(application specific integrated circuit), PLD(programmable logic device), 플래시 메모리 장치, ROM 및 RAM 장치와 같 은 프로그램 코드를 저장, 저장 및 실행하도록 특별히 구성된 하드웨어 장치를 포함하지만, 이에 한정되는 것은 아니다. 컴퓨터 코드의 예로는 컴파일러에 의해 생성된 것과 같은 기계 코드 및 인터프리터를 사용하여 컴퓨터 에 의해 실행되는 상위 수준 코드를 포함하는 파일이 있다. 본 발명의 실시예는 전체적으로 또는 부분적으로 처 리 장치에 의해 실행되는 프로그램 모듈에 있을 수 있는 기계 실행 가능 명령으로 구현될 수 있다. 프로그램 모 듈의 예로는 라이브러리, 프로그램, 루틴, 개체, 구성 요소 및 데이터 구조가 있다. 분산 컴퓨팅 환경에서 프로 그램 모듈은 물리적으로 로컬, 원격 또는 둘 다인 설정에 위치할 수 있다. 당업자는 본 발명의 실행에 중요한 컴퓨팅 시스템 또는 프로그래밍 언어가 없음을 인식할 것이다. 당업자는 또 한 전술한 다수의 요소가 물리적 및/또는 기능적으로 하위 모듈로 분리되거나 함께 결합될 수 있음을 인식할 것 이다. 도 3은 상담 대상자에게 제공되는 메타버스 서비스의 화면예시도이다. 도 3예 예시된 바와 같이 상담 대상자들은 각각 자신의 단말(201, 202)를 이용하여 메타버스에 접속한 다음, 인 공지능 상담서비스를 받을 수 있다. 마치, 현실에서 상담사와 상담을 하듯 말을 하거나 또는 타이핑하여 상담하고자 하는 내용을 입력하면, 메타버 스 상의 상담사 캐릭터로부터 상담 내용에 해당하는 답변을 들을 수 있다. 도 3a는 본 출원인이 제공하는 메타버스 환경에서 상담사 캐릭터와 단독으로 상담을 진행하는 상황을 캡쳐한 이 미지이며, 도 3b는 본 출원인이 제공하는 메타버스 환경에서 상담사 캐릭터와 다수의 상담 대상자가 동시에 상 담을 진행하는 상황을 캡쳐한 이미지이다. 본 발명은 한명 또는 다수의 상담 대상자가 메타버스에 접속하여 상담사 캐릭터와 상담을 진행하는 방식으로 구 현될 수 있으나, 설명의 편의상 이하에서는 두 명의 상담 대상자가 상담을 동시에 진행하는 경우를 예시하여 설 명하기로 한다. 본 발명에 의한 인공지능 심리상담 시스템은 상담 대상자들을 식별하고, 각 상담 대상자의 대화 내에서의 호칭을 저장한다. 상담 대상자의 식별은 사용자 단말(201, 202)과의 통신 세션에 따라 구분되며, 상담 대상자의 대화 내에서의 호칭은 각 상담 대상자가 상담 시작시에 입력한 값을 이용한다. 그리고, 인공지능 심리상담 시스템은 각 상담 대상자 단말(201, 202)로부터의 입력값을 텍스트 형태로 변 환하여 각각 저장한다. 상담 대상자가 마이크를 통해 말을 한 경우라면 공지의 음성인식 기술로 텍스트로 변환한 다음 저장한다. 키보 드로 텍스트 형태로 입력한 경우라면 변환없이 그대로 저장한다. 그리고, 각 상담 대상자(201, 202)의 상담 세션이 시작되면 LLM을 각각 별도의 세션을 통해 호출한다. 그 리고, LLM으로부터 답변을 받으면, 메타버스 상에서 상담사 캐릭터를 통해서 화면상 텍스트 또는 음성으로 재생한다. 도 3은 상담 대상자에게 제공되는 메타버스 서비스의 화면예시도이다. 도 3에 예시된 바와 같이 상담사는 메타 버스 상의 NPC(Non player character)의 형태로 구현될 수 있으며, 바람직하게는 LLM으로부터의 답변을 TTS(Text to speech)기술을 이용하여 음성으로 재생함이 바람직하다. 상담 대상자는 메타버스 상에서 실제 상담사와 상담하듯 대화를 통해 상담을 나눌 수 있다. 한편, 도 5는 두 명의 상담 대상자 사이의 관계성에 대한 답변이 필요한 경우의 처리과정을 개념적으로 설명한 다. 즉, 도 5는, 도 1에 예시된 것처럼 두 명의 상담 대상자(201, 202)가 동시에 접속하여 상담을 진행하는 경우를 가정한다. 다시 말해, 두 명의 상담 대상자가 각각 따로 독립적으로 상담을 하는 것이 아니라 동시에 한명의 상 담사와 대면하여 삼자간 대화를 나누면서 상담을 하는 경우를 구현하는 것이다. 이를 위해 인공지능 심리상담 시스템은 하나의 세션을 열어서 LLM의 API를 호출하되, 각 상담 대상자 단말(201, 202)로부터의 입력값을 LLM에 전달할 때에, 각 상담 대상자의 호칭 또는 식별자를 포함하여 파 라메터로 전달할 수 있다. 예를 들어, A라는 호칭의 상담 대상자가 자신의 단말을 이용하여 \"어제는 이런 기분이 들었어요\"라는 말을 했다면, 인공지능 심리상담 시스템은 LLM의 API 호출시 \"A가 '어제는 이런 기분이 들었어요'라는 말 을 했어. 적당한 대답을 해줘\" 이런 식으로 호출하는 것이다. 즉, 이런 식으로 함으로써 A와 B, 또는 그 이상의 여러 명이 상담에 참여할 때에, LLM이 상담 대상자를 구 분할 수 있도록 할 수 있다. 하지만, 이와 같이 구현하는 경우, LLM이 맥락을 놓치게 되어 기존의 대화 내용과 일관성을 유지하면서 답 변을 생성하는 것이 어려워지는 문제가 있기 때문에, 도 5에 예시된 바와 같이 세션을 구분한다. 다시 말해, 상담 대상자 A와 B가 메타버스 상에서 상담사와 함께 대화를 함에도 불구하고, A와 상담사의 대화, B와 상담사의 대화를 우선 구분하여 각각 별도의 세션으로 관리한다는 의미이다. 세션을 구분하되 A와 B 두 상담 대상자가 서로에 대한 이야기를 할 때에는 또 다른 제3의 세션을 통해서 처리하 는데, 이에 대해 도 5를 참조하여 상세히 설명하기에 앞서, 도 4를 참조하여 LangChain을 이용하여 LLM을 호출 하는 방법을 간략하게 설명한다. Langchain은 파이썬과 자바스크립트 라이브러리를 지원하는데, 도 4에 예시된 슈도코드는 파이썬을 기준으로 작 성된 것이다. 먼저, 아래의 코드에서 Langchain에서 ChatOpenAI, AgentType, ConversationChain을 import한다. 이는 각각 OpenAI에서 제공하는 GPT-4를 LLM으로 사용하기 위한 라이브러리, Langchain이 제공하는 에이전트들을 사용하기 위한 라이브러리, 그리고 대화를 저장하기 위한 라이브러리에 해당한다. from langchain.chat_models import ChatOpenAI from langchain.agenst import AgentType from langchain import ConversationChain 다음 코드에서는 LLM 모델을 gpt-4로 설정하고, 심리 상담사가 알아야 할 지식을 텍스트 형태의 documet 변수에 할당한 다음, Langchain이 제공하는 툴과 에이전트를 설정하는 과정이다. AnalyzeDocumentChain 함수로 document 변수를 인자로 전달함으로써 LLM은 심리상담사로서 알아야 할 내용을 숙지한다. 물론, 과금을 위 한 시크릿 키의 설정 등이 필요함은 당연하다. 보다 정교하게 준비된 서비스의 제공을 위하여 질문과 답변의 쌍을 문서화하여 전달하는 것도 가능하다. model=ChatOpenAI(mode-'gpt-4\") document=BasicOfCounselling_text counsel_chain=AnalyzeDocumentChain(document) tools= load_tools([\"tool1name\",\"tool2name\"], llm=chat) agent = initialize_agent(tools, llm=chat, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True) 이와 같이 준비가 되면, Langchain을 통해 gpt-4를 호출하는데 일관성이 있는 답변을 위해 temperature는 낮은 값으로 설정한다. 0으로 설정하면 확정모델(deterministic model)이 되기 때문에 적절하지 않으나, 1에 가까우 면 일관성이 낮아질 수 있어 0.2 내지 0.3 정도의 값이 적당하다. 한편, 프롬프트 상태에서 LLM과 대화를 하는 경우와는 달리 API로 호출시에는 매번 호출시 새로운 대화가 시작되는 것이기 때문에 기존 대화내용을 파라메타 로 넣어서 전달을 해야 하며, 이러한 기능을 ConversationChain으로 해결한다. 아래와 같이 호출함으로써 심리 상담사로 튜닝된 gpt-4를 호출할 수 있다. chat = ChatOpenAI(temperature=0.2) conversation = ConversationChain(llm=chat, verbose=True) gpt-4 API의 경우, gpt3.5 Turbo, text-davinci 등과는 달리, 파라메타를 보다 상세하게 설정할 수 있으며, 대 화내용을 전달하면 심리상담사로서의 '답변' 만을 소정의 기 설정된 어투로 답변하도록 role을 정해주는 것이 바람직하다. ConversationChain은 대화 내용을 저장하기 위해 사용되는 객체인데, 구체적으로 ConversationBufferMemory 대 화기록 전체를, ConversationBufferWindowMemory 마지막 n개 대화만 기억한다. 다시 도 5로 돌아가서 살펴보자면, 본 발명에 의한 인공지능 심리상담 시스템은 두 명의 상담 대상자와 LLM의 상담을 각각 별도의 세션으로 관리하며, 대화내용을 각각 별도의 데이터(D1, D2)로 저장한다. 즉, 여러 명의 상담 대상자가 동시에 메타버스 상에서 상담사 NPC와 상담을 한다고 하여도 기본적으로는 인공지 능 심리상담 시스템은 각 상담 대상자의 상담을 서로 독립적인 세션으로 관리한다. 그리고, 그것은 각 상 담 대상자의 대화 내용 가운데 다른 상담 대상자에 대한 의견이나 생각, 감정이 포함되지 않는 한 그대로 유지 된다. 다시 말하자면, 어느 하나의 상담 대상자의 대화 내용 가운데 다른 상담 대상자에 대한 내용이 나오는 경우, 예 외처리(Exception handling)이 이루어져야 한다는 것이다. 이를 위한 구체적인 처리과정은 후술하기로 한다. 각 상담 대상자와 LLM을 통한 메타버스 상의 심리상담사 NPC의 상담은 독립적으로 이루어지므로, 인공지능 심리상담 시스템은 각 상담 대상자의 대화내용을 텍스트 형태로 변환하여 LLM가 제공하는 API를 호출 하되, 대화를 서로 구분한다. 각 상담 대상자의 대화는 서로 독립적으로 처리되어야 하므로 각 대화 세션을 구 분할 필요가 있다. 예컨대, 아래와 같이 LLM의 인스턴스와 ConversationChain의 인스턴스를 상담 대상자의 수만큼 나눈다. conversation1 = ConversationChain(llm=chat1, verbose=True) conversation2 = ConversationChain(llm=chat2, verbose=True) 그리고, LLM 으로부터 답변을 받으면 도 3에 예시된 것처럼, 상담 대상자의 단말(201, 202)로 메타버스 상 에서 상담사 NPC가 말을 하는 것처럼 표현한다. 예컨대, 위의 코드에서 두 변수 conversation1과 conversation2는 도 5의 D1, D2로 이해할 수 있다. 위의 예시에서, D1은 상담대상자 A와 LLM이 주고 받은 대화내용이며, D2는 상담대상자 B와 LLM이 주 고받은 대화내용인 것으로 이해할 수 있다.즉, D1, D2는 대화내용이 각각 하나의 노드가 되도록 링크드리스트(Linked List) 등의 데이터구조로 저장되거나, 또는 적어도 어느 하나의 노드를 검색하거나, 특정 노드의 값을 인출할 수 있는 형태의 데이터 구 조로 저장됨이 바람직하다. 한편, A와 LLM의 대화내용인 D1의 각 노드들은 오직 A가 온전하게 자신의 이야기를 하고, LLM또한 A 에 대한 이야기를 하는 것일 수도 있다. 그런데, 일부는 맥락상 A가 대화에 참여중인 B에 대한 자신의 생각이나, 기분, 느낌 등을 말하는 것일수도 있고, LLM 또한 이러한 A의 B에 대한 생각, 기분, 느낌 등의 내용을 참조하여 답변을 할 수도 있다. 또는, 아예 B가 대화 도중 했던 말을 인용해서 A가 말을 할 수도 있다. 예컨대 \"아까, B가 그렇게 이야기했는데, 나는 다르게 생각한다\"라는 식으로 대화 내용 자체를 인용하는 것이다. 이러한 관계는 A와 B 상호간에 동일하게 성립할 수 있다. 정리하자면, D1은 A의 발화, LLM의 답변이 각각 하나의 노드로 순차 저장되는 구조를 가지는데, 그 가운데 에는 B와 상관없이 독립적인 내용도 있다. 도 6에서 D1의 노드 가운데 빗금이나 사선이 표시되어 있지 않은 노드는 B와 상관없는 A의 발화 또는 LLM 의 답변에 해당한다. Q는 질문(question), A는 답변(answer)를 의미한다. 한편, A의 발화 또는 LLM의 답변 가운데 다른 대화참여자이자, 상담 대상자인 B에 대한 내용은 사선으로 표시되어 있다. 그런데, A의 발화 또는 LLM의 답변 가운데 다른 대화참여자이자, 상담 대상자인 B의 대화를 인용하는 경우 는 D1에 십자사선으로 표시되어 있다. (이러한 표시는 설명을 위한 것일 뿐, 실제 구현시에는 플래그를 세팅하 는 것으로 처리할 수 있다.) 한편, 이 경우 사선으로 표시된 B에 대한 대화내용과는 다르게 처리한다. 우선 D2에서 해당하는 노드를 찾는다. 즉, 인용하고자 하는 B의 대화내용을 D2에서 검색하는 것이다. 그리고, 검색된 노드를 가리키는 포인터를 D1의 해당 노드에 저장한다. 플래그의 세팅 및 포인터의 저장이 이루어진다. D2에 대해서도 마찬가지의 처리가 이루어진다. 한편, 인공지능 심리상담 시스템은 도 6에 도시된 것처럼, 사선 또는 십자 사선으로 표시된 노드들을 합쳐 서 별도의 대화 D12를 생성하여 저장한다. 즉, D12는 A와 B가 서로에 대해 이야기하거나, 또는 상대의 대화내용 을 인용하는 대화만을 따로 모은 것이다. 사선으로 표시된 경우 즉, A의 발화가 B에 관한 내용인 경우 인공지능 심리상담 시스템은 도 5에 예시된 것처럼 별도의 제3의 세션을 통해 LLM과의 대화를 진행한다. 제3의 세션은 D12에 해당하는 ConversationChain으로 호출되기 때문에, A와 B의 관계를 인지한 상태로 답변을 한다. 인공지능 심리상담 시스템은 LLM을 호출시에, A와 B의 호칭을 전달할 파라메타에 정확히 넣어서 전달 한다. 예를 들어 A가 \"B가 저번에 나에게 그렇게 말했을때 기분이 좋지 않았어\"라고 발화했다면, 인공지능 심리 상담 시스템은 이를 \"A가 'B가 저번에 그렇게 말했을 때 기분이 좋지 않았어.'라고 말했어. 이때, A에게 답변할 내용을 알려줘\"라는 식으로 전달하는 것이다. 이는 ConversationChain으로 호출하는 것으로 충분하다. 그런데, 십자사선으로 표시된 경우는 조금 취급이 다르다. ConversationChain으로 호출한다고 하여도 LLM 이 맥락을 정확하게 찾는 것은 어려우며, 따라서 인공지능 심리상담 시스템은 LLM을 호출시에, A와 B 의 호칭과, A가 인용하는 B의 대화를 파라메타에 정확히 넣어서 전달한다. 예를 들어, B가 \"지난 월요일에 영화를 보러 갔었는데, 팝콘과 콜라를 마셨어\"라고 대화를 했고, 나중에 A가 \" 아까 B가 극장갔을 때의 이야기를 했는데, 그때 나는 이런 생각이 들었어\"라고 한다면, 단순히 ConverationChain으로 LLM을 호출하는 것으로 충분하지 않으며, D2에서 \"아까 B가 극장갔을 때의 이야기를 했는데,\"에 해당하는 노드를 찾아서, 그 노드 전체를 파라메타로 넣어줘야 한다. 즉, 이 경우, 인공지능 심리상담 시스템은 LLM을 호출시에 전달하는 파라메타는 \"B는 '지난 월요일에 영화를 보러 갔었는데, 팝콘과 콜라를 마셨어'라는 말을 했고, A는 B가 그 말을 했을 때, '그때 나는 이런 생각 이 들었어'라는 말을 했어\"라는 식으로 변경하여 파라메타로 넣어주어야 한다. 이와 같이 함으로써, D12에 해당하는 대화를 하는 LLM은 맥락을 놓치지 않고 오로지 A와 B서로 간의 관계 에 대한 상담을 하게 된다. 물론, API 호출시의 파라메타로 role을 설정할 때에, A와 B 두명의 관계에 대한 상 담을 하는 것으로 설정해두면, D1, D2에 해당하는 상담을 하는 LLM 세션과는 달리, 오직 A와 B서로의 관계 에 대한 답변을 하게 된다. 뿐만 아니라, 대화내용을 인용하는 경우에는 이를 파라메타 가운데 LLM으로 전달할 대화내용 그 자체에 넣 어줌으로써 맥락을 놓치지 않도록 한다. 한편, 위의 설명대로 구현하기 위해서는 추가로 LLM을 활용해야 한다. 첫번째로는, A의 대화내용이 입력되면 그것이 B에 대한 내용인지, 또는 B의 대화내용을 인용하는 것인지, 또는 전혀 독립적인 것인지를 판단하는 것이다. 이를 위해서는 도 5에 예시된 세션과는 별도로, Langchain를 사용할 필요 없이, LLM이 제공하는 API를 직접 호출함이 바람직하다. 기존 대화내용이나 심리상담사로서 숙지해야 하는 지식과는 무관한 단순한 처리이기 때문에 이렇게 함으로써 소모되는 token의 양을 크게 낮출 수 있다. 그 다음으로는, A의 대화내용이 B의 대화내용을 인용하는 것인 경우, D2에서 해당하는 노드를 찾는 것이다. 이 경우에는 D2에 해당하는 Conversationchain을 이용해서 LLM을 호출한다. 단, D2에 해당하는 대화의 진행은 아니며, 단지 D2 전체를 인자로 넘겨서 그 가운데 해당하는 문장을 뽑는 것에 불과하기 때문에 Langchain을 이 용할 필요없이 Conversationchain의 내용을 텍스트 형태로 넣어서 API를 직접 호출함이 바람직하다. 물론, token의 소모를 낮추기 위함이다. 마지막으로는, A의 대화내용이 B에 관한 것이거나, 또는 B의 대화내용을 인용하는 것인 경우, LLM으로 전 달할 파라메타 가운데 대화내용을 생성하는 것이다. 이 경우도 마찬가지로 기존 대화내용과는 관련없는 일회성 의 호출이기 때문에 API를 직접 호출함이 바람직하다. 위와 같이 구현함으로써 둘 또는 그 이상의 상담 대상자가 메타버스 공간 내에서 상담사 NPC와 동시에 상담을 진행하는 경우, 각 상담 대상자에 대한 상담을 독립적으로 진행하되, 둘 또는 그 이상의 상담 대상자 사이의 관 계에 대한 상담은 별도의 대화기록으로, 별도의 세션으로 처리함으로써 LLM으로 하여금 맥락을 놓치지 않고 기 존 대화내용에 근거하여 적당한 답변을 하도록 할 수 있다. 이상 몇 가지의 실시예를 통해 본 발명의 기술적 사상을 살펴보았다."}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명이 속하는 기술분야에서 통상의 지식을 가진 자가 본 발명의 기재사항으로부터 상기 살펴본 실시예를 다 양하게 변형하거나 변경할 수 있음은 자명하다. 또한, 비록 명시적으로 도시되거나 설명되지 아니하였다 하여도"}
{"patent_id": "10-2023-0118141", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "본 발명이 속하는 기술분야에서 통상의 지식을 가진 자가 본 발명의 기재사항으로부터 본 발명에 의한 기술적 사상을 포함하는 다양한 형태의 변형을 할 수 있음은 자명하며, 이는 여전히 본 발명의 권리범위에 속한다. 첨 부하는 도면을 참조하여 설명된 상기의 실시예들은 본 발명을 설명하기 위한 목적으로 기술된 것이며 본 발명의 권리범위는 이러한 실시예에 국한되지 아니한다."}
{"patent_id": "10-2023-0118141", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 의한 인공지능 심리상담 시스템이 LLM과 사용자 단말로 연결되는 관계를 설명하는 망구성도이 며, 도 2는 본 발명에 의한 인공지능 심리상담 시스템의 하드웨어 구성도이며, 도 3은 상담 대상자에게 제공되는 메타버스 서비스의 화면예시도이며, 도 4는 LangChain을 이용하여 LLM을 호출하는 방법을 예시하는 슈도코드(Pseudo-code)이며, 도 5는 두 명의 상담 대상자 사이의 관계성에 대한 답변이 필요한 경우의 처리과정을 설명하는 개념도이다."}
