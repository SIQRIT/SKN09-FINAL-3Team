{"patent_id": "10-2020-0114897", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0032939", "출원번호": "10-2020-0114897", "발명의 명칭": "악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법 및 학습 모델을 이용한 악성 PDF", "출원인": "서울대학교산학협력단", "발명자": "윤성로"}}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "학습장치가 악성의 PDF 데이터를 입력받는 단계;상기 학습장치가 상기 PDF 데이터를 인코더에 입력하여 상기 PDF 데이터의 특징에 대한 잠재 벡터를 생성하는단계;상기 학습장치가 상기 잠재 벡터를 생성기에 입력하여 상기 PDF 데이터에 대응하는 생성 데이터를 생성하는 단계;상기 학습장치가 판별기를 이용하여 상기 생성 데이터가 원본인지 생성된 데이터인지 판단하고, 생성된 데이터라고 판단한 경우 상기 생성기에 제1 피드백 정보를 전달하는 단계;상기 학습장치가 사전에 학습된 분류기를 이용하여 상기 생성 데이터의 라벨값을 분류하고, 분류 결과에 대한제2 피드백 정보를 상기 생성기에 전달하는 단계; 및상기 학습 장치가 상기 제1 피드백 정보 및 상기 제2 피드백 정보를 수신한 후 상기 생성기가 생성하는 데이터를 학습 데이터로 결정하는 단계를 포함하는 악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 생성기는 상기 인코더에서 입력 데이터로부터 추출되는 특징의 변화 정도를 제어하고,상기 1 피드백 정보 및 상기 제2 피드백 정보 중 적어도 하나의 피드백 정보는 상기 생성기가 상기 인코더를 제어하는 정도를 조절하는 악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 잠재 벡터는 잠재 공간에서 표준편차가 기준값 이상인 데이터로 구성되는 악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 학습 장치는 상기 분류기의 비용함수가 적용된 전과 후의 분포 값을 비교하여 상기 PDF 데이터의 비견고특징에 대한 잠재 벡터를 선별하여 상기 생성기에 입력하는 악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "분석장치가 PDF 데이터를 획득하는 단계; 및상기 분석장치가 학습모델에 상기 PDF 데이터를 입력하여 상기 PDF 데이터가 악성인지 여부를 판단하는 단계를포함하되,상기 학습모델은 악성 PDF의 비견고 특징을 기준으로 상기 PDF 데이터가 악성인지 여부를 판단하고, 상기 학습모델은 별도의 학습 데이터 네트워크를 이용하여 마련되는 학습데이터를 이용하여 사전에 학습되는 학습 모델을이용한 악성 PDF 탐지 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2022-0032939-3-제5항에 있어서,상기 분석장치는 PDF 파일을 입력받고, 상기 PDF 파일의 계층적 구조에 따른 특징을 추출하여 상기 PDF 데이터를 생성하는 단계를 더 포함하는 학습 모델을 이용한 악성 PDF 탐지 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 학습 데이터 네트워크는 입력 PDF 데이터에서 잠재 벡터를 추출하는 인코더 및 상기 잠재 벡터로부터 생성PDF 데이터를 생성하는 생성기를 포함하고,상기 잠재 벡터는 잠재 공간에서 표준편차가 기준값 이상인 데이터로 구성되는 학습 모델을 이용한 악성 PDF 탐지 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 학습 데이터 네트워크는상기 생성 PDF 데이터가 원본인지 생성된 데이터인지 판단하고, 생성된 데이터라고 판단한 경우 상기 생성기에제1 피드백 정보를 전달하는 판별기; 및상기 생성 데이터의 라벨값을 분류하고, 분류 결과에 대한 제2 피드백 정보를 상기 생성기에 전달하는, 사전에학습된 분류기를 더 포함하는 학습 모델을 이용한 악성 PDF 탐지 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 생성기는 상기 인코더에서 입력 데이터로부터 추출되는 특징의 변화 정도를 제어하고,상기 1 피드백 정보 및 상기 제2 피드백 정보 중 적어도 하나의 피드백 정보는 상기 생성기가 상기 인코더를 제어하는 정도를 조절하는 학습 모델을 이용한 악성 PDF 탐지 방법."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "PDF 파일을 입력받는 입력장치;PDF 파일이 악성인지 여부를 분류하는 학습모델을 저장하는 저장장치; 및상기 PDF 파일을 전처리하여 입력데이터를 생성하고, 상기 학습모델을 이용하여 상기 입력데이터를 분석하여 입력된 상기 PDF 파일이 악성인지 여부를 판별하는 연산장치를 포함하되,상기 학습모델은 악성 PDF의 비견고 특징을 기준으로 상기 PDF 파일이 악성인지 여부를 판단하고, 상기 학습 모델은 별도의 학습 데이터 네트워크를 이용하여 마련되는 학습데이터를 이용하여 사전에 학습되는 학습 모델을이용하여 악성 PDF를 판별하는 분석장치."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 연산장치는 상기 PDF 파일의 계층적 구조에 따른 특징을 추출하여 상기 입력데이터를 생성하는 학습 모델을 이용하여 악성 PDF를 판별하는 분석장치."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 학습 데이터 네트워크는 입력 PDF 데이터에서 잠재 벡터를 추출하는 인코더 및 상기 잠재 벡터로부터 생성PDF 데이터를 생성하는 생성기를 포함하고,상기 잠재 벡터는 잠재 공간에서 표준편차가 기준값 이상인 데이터로 구성되는 학습 모델을 이용하여 악성 PDF공개특허 10-2022-0032939-4-를 판별하는 분석장치."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 학습 데이터 네트워크는상기 생성 PDF 데이터가 원본인지 생성된 데이터인지 판단하고, 생성된 데이터라고 판단한 경우 상기 생성기에제1 피드백 정보를 전달하는 판별기; 및상기 생성 데이터의 라벨값을 분류하고, 분류 결과에 대한 제2 피드백 정보를 상기 생성기에 전달하는, 사전에학습된 분류기를 더 포함하는 학습 모델을 이용하여 악성 PDF를 판별하는 분석장치."}
{"patent_id": "10-2020-0114897", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 생성기는 상기 인코더에서 입력 데이터로부터 추출되는 특징의 변화 정도를 제어하고,상기 1 피드백 정보 및 상기 제2 피드백 정보 중 적어도 하나의 피드백 정보는 상기 생성기가 상기 인코더를 제어하는 정도를 조절하는 학습 모델을 이용한 악성 PDF 탐지용 분석장치."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "신경망 모델을 이용한 악성 PDF 탐지를 위한 학습 데이터 생성 방법은 학습장치가 PDF 데이터를 입력받는 단계, 상기 학습장치가 상기 PDF 데이터를 인코더에 입력하여 상기 PDF 데이터의 특징에 대한 잠재 벡터를 생성하는 단 계, 상기 학습장치가 상기 잠재 벡터를 생성기에 입력하여 상기 PDF 데이터에 대응하는 생성 데이터를 생성하는 단계, 상기 학습장치가 판별기를 이용하여 상기 생성 데이터가 원본인지 생성된 데이터인지 판단하고, 생성된 데 이터라고 판단한 경우 상기 생성기에 제1 피드백 정보를 전달하는 단계 및 상기 학습장치가 사전에 학습된 분류 기를 이용하여 상기 생성 데이터의 라벨값을 분류하고, 분류 결과에 대한 제2 피드백 정보를 상기 생성기에 전달 하는 단계를 포함한다."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "이하 설명하는 기술은 악성 PDF(Portable Document Format)를 탐지하는 기법에 관한 것이다."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨터 바이러스는 다양한 형태의 파일에 삽입된 코드 형태로 유통된다. 한편, PDF는 실질적인 디지털 표준 문 서 포맷으로 사용되고 있고, PDF에 기반한 악성 소프트웨어도 등장하였다. 선행기술문헌 특허문헌 (특허문헌 0001) 미국등록특허 제10,169,579호"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "PDF의 구조적인 복잡성 때문에, 악성 소프트웨어 검출 프로그램은 악성 PDF 검출에 어려움이 있다. 최근 인공지 능 연구와 더불어 딥러닝 모델을 이용하여 검출 프로그램을 회피하는 모델(EvadeML, EvadeHC, MalGAN 등)도 연 구되었다. 악성 소프트웨어 검출 프로그램을 딥러닝 모델에 기반하여 생성된 악성 PDF 검출이 매우 어려운 것으 로 알려졌다. 이하 설명하는 기술은 신경망 모델을 이용하여 악성 PDF 검출을 위한 학습 데이터를 제공하고자 한다. 이하 설 명하는 기술은 상기 학습 데이터로 학습된 악성 PDF 검출용 학습 모델을 제공하고자 한다."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "악성 PDF 탐지용 학습 모델을 위한 학습 데이터 생성 방법은 학습장치가 악성의 PDF 데이터를 입력받는 단계, 상기 학습장치가 상기 PDF 데이터를 인코더에 입력하여 상기 PDF 데이터의 특징에 대한 잠재 벡터를 생성하는 단계, 상기 학습장치가 상기 잠재 벡터를 생성기에 입력하여 상기 PDF 데이터에 대응하는 생성 데이터를 생성하 는 단계, 상기 학습장치가 판별기를 이용하여 상기 생성 데이터가 원본인지 생성된 데이터인지 판단하고, 생성 된 데이터라고 판단한 경우 상기 생성기에 제1 피드백 정보를 전달하는 단계, 상기 학습장치가 사전에 학습된분류기를 이용하여 상기 생성 데이터의 라벨값을 분류하고, 분류 결과에 대한 제2 피드백 정보를 상기 생성기에 전달하는 단계 및 상기 학습 장치가 상기 제1 피드백 정보 및 상기 제2 피드백 정보를 수신한 후 상기 생성기가 생성하는 데이터를 학습 데이터로 결정하는 단계를 포함한다. 학습 모델을 이용하여 악성 PDF를 판별하는 분석장치는 PDF 파일을 입력받는 입력장치, PDF 파일이 악성인지 여 부를 분류하는 학습모델을 저장하는 저장장치 및 상기 PDF 파일을 전처리하여 입력데이터를 생성하고, 상기 학 습모델을 이용하여 상기 입력데이터를 분석하여 입력된 상기 PDF 파일이 악성인지 여부를 판별하는 연산장치를 포함한다. 상기 학습모델은 악성 PDF의 비견고 특징을 기준으로 상기 PDF 파일이 악성인지 여부를 판단하고, 상 기 학습 모델은 별도의 학습 데이터 네트워크를 이용하여 마련되는 학습데이터를 이용하여 사전에 학습된다."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이하 설명하는 기술은 악성 PDF 검출을 위하여 비견고 특징을 사용하여 전통적인 악성 PDF뿐만 아니라, 딥러닝 모델에 기반한 악성 PDF도 효과적으로 검출한다."}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 설명하는 기술은 다양한 변경을 가할 수 있고 여러 가지 실시례를 가질 수 있는 바, 특정 실시례들을 도면 에 예시하고 상세하게 설명하고자 한다. 그러나, 이는 이하 설명하는 기술을 특정한 실시 형태에 대해 한정하려 는 것이 아니며, 이하 설명하는 기술의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하 는 것으로 이해되어야 한다. 제1, 제2, A, B 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 해당 구성요소들은 상기 용어 들에 의해 한정되지는 않으며, 단지 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예 를 들어, 이하 설명하는 기술의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 기재된 항목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함한다. 본 명세서에서 사용되는 용어에서 단수의 표현은 문맥상 명백하게 다르게 해석되지 않는 한 복수의 표현을 포함 하는 것으로 이해되어야 하고, \"포함한다\" 등의 용어는 설명된 특징, 개수, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함을 의미하는 것이지, 하나 또는 그 이상의 다른 특징들이나 개수, 단계 동작 구성요 소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 배제하지 않는 것으로 이해되어야 한다. 도면에 대한 상세한 설명을 하기에 앞서, 본 명세서에서의 구성부들에 대한 구분은 각 구성부가 담당하는 주기 능 별로 구분한 것에 불과함을 명확히 하고자 한다. 즉, 이하에서 설명할 2개 이상의 구성부가 하나의 구성부로 합쳐지거나 또는 하나의 구성부가 보다 세분화된 기능별로 2개 이상으로 분화되어 구비될 수도 있다. 그리고 이 하에서 설명할 구성부 각각은 자신이 담당하는 주기능 이외에도 다른 구성부가 담당하는 기능 중 일부 또는 전 부의 기능을 추가적으로 수행할 수도 있으며, 구성부 각각이 담당하는 주기능 중 일부 기능이 다른 구성부에 의 해 전담되어 수행될 수도 있음은 물론이다. 또, 방법 또는 동작 방법을 수행함에 있어서, 상기 방법을 이루는 각 과정들은 문맥상 명백하게 특정 순서를 기 재하지 않은 이상 명기된 순서와 다르게 일어날 수 있다. 즉, 각 과정들은 명기된 순서와 동일하게 일어날 수도 있고 실질적으로 동시에 수행될 수도 있으며 반대의 순서대로 수행될 수도 있다. PDF(portable document format)는 아도브(Adobe)가 개발한 디지털 문서 포맷이다. 현재 PDF는 보편적인 디지털 문서 포맷 중 하나로 사용되고 있다. PDF와 같은 문서 타입 악성 소프트웨어(malware)는 다양한 유형을 갖는다. 대표적인 문서 타입인 PDF를 이용한 악성 소프트웨어도 있 다. PDF를 이용한 악성 소프트웨어를 악성 PDF(malicious PDF 또는 PDF malware)라고 명명한다. 예컨대, 악성 PDF는 PDF에 포함되는 자바스크립트(JavaScript)에 삽입된 코드 형태일 수 있다. 이하 설명하는 기술은 악성 PDF를 식별하는 기술이다. 이하 설명하는 기술은 학습 모델을 이용하여 악성 PDF를 식별하는 기술이다. 입력 데이터를 처리하여 악성 PDF를 식별하는 장치를 분석장치라고 명명한다. 분석장치는 데이터 처리 및 연산 이 가능한 컴퓨팅 장치이다. 예컨대, 분석장치는 서버, PC, 스마트기기, 프로그램이 임베디드된 칩 등일 수 있 다. 학습모델은 기계 학습(machine learning) 모델을 의미한다. 학습 모델은 다양한 유형의 모델들을 포함하는 의미 이다. 학습 모델은 크게 지도 학습 모델과 비지도 학습 모델로 구분할 수 있다. 지도 학습 모델은 크게 분류 (classification)와 회귀(regression)를 하는 모델로 구분할 수 있다. 구체적으로 이하 설명하는 기술은 분류기(classifier)를 이용하여 악성 PDF를 식별할 수 있다. 예컨대, 분류기 는 결정 트리, 랜덤 포레스트(random forest), KNN(K-nearest neighbor), 나이브 베이즈(Naive Bayes), SVM(support vector machine), 신경망(neural network) 등과 같은 모델들 중 어느 하나의 모델을 이용할 수 있 다. 악성 PDF를 식별하는 분류기는 다양한 모델 중 어느 하나를 이용할 수 있다. 악성 PDF를 식별하는 분류기를 악성 PDF 분류기라고 명명한다. 악성 PDF 분류기는 학습데이터를 이용하여 사전에 훈련되어야 한다. 이하 설명하는 기술은 신경망 모델을 이용 하여 학습 데이터를 마련한다. 신경망 모델은 인공신경망(artificial neural networks)이라는 복잡한 구성을 갖는 학습 모델이다. 신경망 모델 은 대부분 복잡한 계층 구조를 갖는 딥러닝(deep learning) 모델이 주로 많이 사용된다. 한편, 학습 데이터를 마련하는 신경망 모델을 학습 데이터 네트워크라고 명명한다. 학습 데이터 네트워크는 VAE(Variational AutoEncoder)에 기반한 모델을 이용할 수 있다. VAE에 대하여 간략하게 설명한다. VAE는 진성 분포(true distribution) p(x)를 명시적으로(explicitly) 추정하 기 위한 생성 모델이다. 고차원 공간에서는 데이터의 분포를 추정하기 어렵기 때문에, 잠재 벡터(latent vector)는 입력 데이터의 특징을 암시한다. 이상적 잠재 분포는 찾기 어렵기 때문에, VAE는 가우시안 분포 (Gaussian distribution)와 함께 변분 추론(variational inference)을 사용하여 진성 데이터의 분포를 추정한 다. 도 1은 VAE에 대한 예이다. VAE는 인코더(encoder, 110)와 디코더(decoder, 120)로 구성된다. 인코더는 입력데이터 x에서 평균 벡터 μ 및 표준편차 벡터 σ를 추출하여 가우시안 분포를 생성한다. 인코더는 μ, σ 및 ε를 이용하여 잠재 벡터 z를 생성한다. ε는 역전파(backpropagation)를 받아 파라미터를 조절하는 값에 해당한다. 디코더 는 분포에서 샘플링되는 잠재 벡터 z로부터 입력 데이터 x에 대응되는 를 재구성한다. VAE의 훈련 목적은 아래 수학식 1과 같이 데이터의 한계 로그 우도 (marginal log-likelihood)를 최대화하는 것 이다. 수학식 1 수학식 2"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "log(p(x))는 데이터의 한계 우도 로그를 나타낸다. 는 한계 우도 로그의 ELBO(Evidence Lower Bound)를 나타낸다. 모델은 파라미터 θ로 설정되고, 잠재 분포는 φ = {μ,σ}로 정의된다. pθ(z|x)는 인코더 로부터의 진성 잠재 분포이고, qφ(z|x)는 후에 추정되는 값이다. pθ(z|x)는 다루기 어렵기 때문에, ELBO 를 최대화하여 한계 우도 로그가 최대화된다. p(z)는 앞선 잠재 백터를 나타내고, pθ(z|x)는 디코더의 출 력 분포를 나타낸다. 학습 데이터 네트워크는 전술한 바와 같이 VAE 기반 신경망 모델이다. 학습 데이터 네트워크는 악성 PDF를 분류 하기 위한 비견고 특징(non-robust features)을 생성한다. 악성 PDF를 식별하는 분류기는 학습 데이터 네트워크 를 통해 마련되는 비견고 특징을 이용하여 훈련된다. 이를 통해 악성 PDF를 식별하는 견고한(robust) 분류기가 마련된다. 전술한 바와 같이 생성 모델 내지 적대적 학습 모델을 이용하여 생성된 악성 PDF는 종래 분류 모델로 식별하기 어렵다. 적대적 모델에 대한 종래 연구에서 견고 특징과 비견고 특징이 소개되었다. 견고 특징은 적대적 모델을 통해 변경된(perturbed) 데이터를 참(true) 라벨로 예측하는 특징이고, 비견고 특징은 적대적 모델에서도 쉽게 변경되어 거짓 라벨로 예측되는 특징이라고 할 수 있다. 따라서 비견고 특징으로 학습되는 분류기는 생성 모델 을 이용하여 생성된 악성 PDF도 분류할 수 있다. 물론, 이와 같은 분류기는 일반적인 악성 PDF도 분류할 수 있 다. 이하, 분류기 학습을 위한 비견고 특징의 학습 데이터를 생성하는 학습 데이터 네트워크를 설명한다. 도 2는 학습 데이터 네트워크에 대한 예이다. 학습 데이터 네트워크는 인코더, 생성기 (generator, 220), 판별기(discriminator, 230) 및 분류기(classifier, 240)를 포함한다. 학습 데이터 네트워 크는 종래 VAE에 적대적 모델 구성을 더 포함한다. 인코더 및 생성기는 각각 CVAE(conditional variational auto-encoder)의 인코더 및 디코더에 해당 하는 구성이다. CVAE는 인코더와 디코더단에 각각 라벨값에 대한 정보를 부가하는 구성을 갖는다. 인코더는 잠 재 변수를 생성하는 과정에 라벨값의 정보가 부가되고, 디코더는 출력값 생성 과정에 라벨값의 정보가 부가된다. 인코더는 악성 PDF의 구조 형태 x를 학습된 분포 P(z|x,c)를 이용하여 잠재 벡터로 변환한다. c는 라벨값 이다. 한편, 인코더에 입력되는 입력 데이터는 악성 PDF 파일을 일정하게 전처리한 데이터일 수 있다. 입력 데이터에 대하여 설명한다. PDF 파일은 헤더(header), 바디(body), 크로스 참조 테이블(cross-reference table) 및 트레일러(trailer)로 구성된다. 바디는 오브젝트(object)들과 문서의 모든 데이터를 포함한다. 문서 구조는 트리 계층 구조로 표현될 수 있다. 트리 계층의 문서 구조는 루트에서 리프에 이르는 복수의 경로로 구 분될 수 있다. 복수의 경로는 PDF 문서의 특징(feature)이 될 수 있다. 아래 표 1은 PDF 문서 구조에서 루트에 서 리프에 이르는 경로들에 대한 예이다. 표 1 특징(feature) /Root/Type:/Catalog/Root/OpenAction/JS/Length:281 /Root/{ages/Kids/Type:[/Page,/Page] /Root/{ages/Kids/MediaBox: [0,0,612,792] . . . 각 경로는 키(key)와 값(value)을 갖는 형태로 변환될 수 있다. 분석장치가 각 경로에 대한 키와 값을 결정한다 고 가정한다. 예컨대, 분석장치는 각 경로를 키로 변환할 수 있다. 또한, 분석장치는 각 키에 대한 값을 오브젝 트의 종류에 따라 특정한 값으로 설정할 수 있다. 예컨대, 분석장치는 (i) 스트링(string)은 정수 1로, (ii) 키 와 값의 쌍인 딕셔너리(dictionary)는 해당 값의 정수형으로, (iii) 어레이(array)는 각 어레이 값의 평균값의 정수형으로 값을 설정할 수 있다. 아래 표 2는 상기 표 1의 각 경로를 키와 값으로 변환한 예이다. 즉, 아래 표 2가 PDF 파일을 전처리한 입력 데이터의 예에 해당한다. 입력 데이터는 복수의 키-값의 쌍으로 구성될 수 있다. 표 2 키(key) 값(value) /Root/Type:/Catalog 1.0 /Root/OpenAction/JS/Length:281 281.0 /Root/{ages/Kids/Type:[/Page,/Page] 1.0 /Root/{ages/Kids/MediaBox: [0,0,612,792] . . .306.0 . . . 이와 같이 분석장치는 악성 PDF 파일의 문서 구조를 트리 계층으로 파싱하고, 복수의 경로 각각에 대하여 특정 키와 값으로 변환하여 입력 데이터를 마련할 수 있다. 인코더는 입력 x를 받아서 잠재벡터 분포 P(z|x,c)를 생성한다. 생성기는 학습된 분포 P(z|x,c)로부 터 잠재 벡터 z를 샘플링하여 악성 PDF의 변이 구조 를 생성한다. z의 샘플링은 다음과 같이 할 수 있다. 잠재 벡터 z는 견고 / 비견고 특징들을 담고 있다. 비견고 특징들은 아래 정의 1의 적대적 노이즈에 의해 결정 될 수 있다. 분석장치는 아래 수학식 6에 의한 비용 함수를 이용하여, 수학식 6번의 함수를 적용하기 전의 분포 값과 적용 후의 분포 값 사이의 차이를 이용하여 비견고에 해당하는 잠재 벡터 z를 선별할 수 있다. 생성기는 잠재 벡터 z를 입력받고, 학습된 분포 P(z|x,c)로부터 악성 PDF의 변이 구조 를 생성한다. 생성기와 판별기는 GAN(generative adversarial network) 학습 과정에 따른다. 즉, 판별기는 생성기가 출력한 값이 실제 값(real)인지 또는 생성된 값(fake)인지 구분한다. 판별기가 판별한 결과 는 생성기와 판별기를 최적화하는데 사용된다. 목적 함수의 최적화는 생성기와 판별기 사 이의 최소-최대 게임의 내시 균형(Nash equilibrium)에 해당한다. 분류기는 x가 가 동일한 라벨인지 판단한다. 분류기는 사전에 학습된 구성을 사용한다. 인코더는 아래 수학식 3과 같이 정의되는 손실 함수를 최소화하는 방향으로 훈련된다. 수학식 3"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "생성기는 아래 수학식 4와 같음 목적 함수를 갖는다. 수학식 4"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "d(x,)는 원본 데이터(실제값)와 생성된 데이터 사이의 유클리디언(Euclidena) 거리를 나타낸다. 생성기는 인코더에 역전사 피드백을 주어 특징값 추출 과정을 조절할 수 있다. 즉, 생성기는 인 코더의 특징 변화 정도를 조절할 수 있다. 한편, 분류기는 생성기가 인코더의 특징 변화를 조절하는 정도를 제어할 수 있다. 판별기는 아래 수학식 5로 표현되는 손실 함수(sigmoid cross entropy loss)를 갖는다. 수학식 5"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "사전에 학습된 분류기는 아래 수학식 6과 같은 목적 함수를 갖는다. 수학식 6"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "C(f)는 분류기의 비용 함수(cost function)이다. 생성기는 판별기와 분류기 모두와의 관계에서 최소-최대 게임의 내시 균형을 최적화하게 된다. 최적화된 생성기가 생성하는 가 학습 데이터에 해당한다. 잠재 공간에서 특징별로 z > σ인 가우시안 분포를 이용하여 적대적인 데이터가 생성된다. σ보다 큰 잠재 공간 은 비견고 특징들에 해당한다. 견고 특징과 비견고 특징을 보다 명확하게 구분하기 위하여 σ 경계 이론(σ- bound theorem)을 적용할 수 있다. 정의 1: 적대적 노이즈가 라면(v ∈[0,1]), fn,σ의 견고 분류(robust classification) 에러 의 상한 경계는 최소한 아래 수학식 7과 같은 확률이다. 수학식 7"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "수학식 7의 확률과 함께, 아래 수학식 8과 같은 조건에서 선형 분류기 f는 최대의 견고 분류 에러 β를 갖는다. 수학식 8"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "σ보다 큰 잠재 공간(비견고 특징)의 적대적 데이터로 훈련된 모델이 분류 에러가 최소라는 것을 설명한다. 0 < (μ1,σ1) < (μ2,σ2)라고 가정한다. 이 경우 잠재 공간은 라는 진성 분포를 따른다. 이때 y∈[0,1]이고, 아래의 수학식 9와 같은 관계를 갖는다. 수학식 9"}
{"patent_id": "10-2020-0114897", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "α는 1보다 작은 양의 상수로서 분류 에러에 기여한다. x1은 견고한 잠재 공간으로 참 라벨(true lable)과 강한 상관관계를 갖고, 'x2,... ,xd+1'는 비견고 잠재 공간으로 참 라벨과 약한 상관관계를 갖는다. 학습 과정에서 추가적(optional)으로 수행할 수 있는 과정을 설명한다. 학습 장치는 학습 과정에서 악성 PDF 분류기에 대한 하이퍼 파라미터를 최적화한다. 학습 장치는 AutoML을 이용하여 하이퍼 파라미터를 최적화할 수 있다. 예컨대, 학습 장치는 DARTS(Differentiable ArchitectureSearch)를 이용하여 악성 PDF 분류기에 대한 그레디언트(gradient) 기반의 모델 구조 최적화를 할 수 있다. 대부분의 회피 공격은 결정 경계(decision boundary)를 피하는 방식이다. 결정 경계를 최적화하기 위하여, 불확실성 추정(uncertainty estimation)이 중요하다. 베이즈 추론(Bayesian inference)은 베이즈 규칙으로부터 사후 분포를 이용하여 불확실성을 추정할 수 있다. 학습 장치는 학습 과정의 악성 PDF 분류기에 Vadam과 같은 기법을 적용할 수 있다. 즉, 학습 장치는 그레디언트 연산 과정에서 네트워크 가중치를 섭동하여 변분 추론을 할 수 있다. 악성 PDF 분류기의 학습 과정에 대하여 설명한다. 도 3은 악성 PDF 분류기를 학습하는 과정에 대한 예이다. 학습 과정은 전술한 분석장치 또는 별도의 컴퓨 터 장치를 통해 수행할 수 있다. 학습 과정을 수행하는 장치를 학습 장치라고 명명한다. 학습 장치는 PC, 스마 트 기기, 서버 등과 같은 장치일 수 있다. 샘플 DB는 악성 PDF(샘플 데이터)들을 저장하는 객체이다. 샘플 DB는 네트워크상의 객체이거나, 컴퓨 터 장치에서 사용되는 저장 매체일 수 있다. 제1 학습 장치는 샘플 데이터를 이용하여 전술한 학습 데이터 네트워크를 훈련한다. 학습 데이터 네트워크 의 구조 및 훈련 과정은 도 2에서 설명하였다. 훈련이 종료되면, 학습 데이터 네트워크 중 VAE에 해당하는 구성 (A)만으로 학습 데이터를 마련할 수 있다. 제1 학습 장치는 샘플 DB로부터 악성 PDF를 획득하고, 악 성 PDF x를 학습된 VAE(A)에 입력하여 비견고 특성을 갖는 데이터로부터 생성된 학습 데이터 를 생성한다. 제1 학습 장치는 전술한 바와 같이 학습 데이터 네트워크의 분류기의 비용 함수가 적용된 전과 후의 분포 값 차이를 기준으로 비견고 특징의 잠재 백터 z를 선별할 수 있다. 이와 같이, 제1 학습 장치는 복수의 악 성 PDF들을 기준으로 복수의 학습 데이터들을 생성한다. 학습 DB는 제1 학습 장치가 생성한 학습 데이터들을 저장한다. 학습 DB는 네트워크상의 객체이 거나, 컴퓨터 장치에서 사용되는 저장 매체일 수 있다. 학습 DB는 악성 PDF로부터 생성한 학습 데이터 외 에, 정상 PDF들인 학습 데이터를 저장할 수도 있다. 이 경우, 학습 DB는 PDF와 라벨값을 갖는 학습 데이터 세트를 저장할 수 있다. 제2 학습 장치는 학습 데이터(PDF 파일과 라벨값)를 이용하여 악성 PDF 분류기(B)를 학습한다. 악성 PDF 분류기(B)는 전술한 바와 같이 다양한 학습 모델 중 어느 하나로 구현될 수 있다. 한편, 제1 학습 장치 및 제2 학습 장치는 동일한 장치이거나, 서로 다른 장치일 수 있다. 도 4는 분석장치에 대한 예이다. 분석장치는 사전에 학습된 악성 PDF 분류기를 이용하여 PDF 파일이 악성인지 여부를 식별하는 장치이다. 분석장치는 스마트기기, PC, 네트워크상의 서버 등과 같이 다양한 형 태 중 어느 하나일 수 있다. 분석장치는 저장 장치, 메모리, 연산장치, 인터페이스 장치, 통신 장치 및 출력 장치를 포함할 수 있다. 저장 장치는 학습된 악성 PDF 분류기를 저장한다. 저장 장치는 학습 데이터 생성을 위한 학습 데이터 네트워크를 저장할 수도 있다. 또한, 저장 장치는 입력 데이터 전처리, 학습 모델 제어, 출력 데이터 처리 동작을 제어하는 소스 코드 내지 프로그램을 저장할 수 있다. 저장 장치는 학습 데이터를 저장할 수도 있다. 메모리는 분석장치가 학습 데이터 생성 또는 악성 PDF 판별 과정에서 발생하는 임시 데이터를 저장할 수 있다. 인터페이스 장치는 사용자로부터 일정한 명령을 입력받는 장치이다. 인터페이스 장치는 외부 입력장 치로부터 일정한 명령을 입력받을 수 있다. 인터페이스 장치는 물리적으로 연결된 외부 저장 장치로부터 학습 데이터, 학습 데이터 네트워크, 악성 PDF 분류기, 각 모델에 대한 파라미터, 제어를 위한 프로그램 등을 입력받을 수 있다. 인터페이스 장치는 악성 PDF 파일을 입력받을 수도 있다.통신 장치는 네트워크를 통해 일정한 정보를 수신하고 전송하는 구성을 의미한다. 통신 장치는 외부 객체로부터 학습 데이터, 학습 데이터 네트워크, 악성 PDF 분류기, 각 모델에 대한 파라미터, 제어를 위한 프로 그램 등을 수신할 수 있다. 통신 장치는 분석 대상인 PDF 파일을 수신할 수 있다. 또한, 통신 장치는 분석 대상을 분석한 결과를 외부 객체에 송신할 수 있다. 통신 장치 내지 인터페이스 장치는 외부로부터 일정한 데이터 내지 명령을 전달받는 장치이다. 통신 장치 내지 인터페이스 장치를 입력장치라고 명명할 수도 있다. 연산 장치는 학습 데이터 네트워크를 이용하여 악성 PDF 분류기 학습을 위한 학습 데이터를 생성할 수도 있다. 연산 장치는 학습 데이터를 이용하여 악성 PDF 분류기를 학습할 수도 있다. 연산 장치는 저장장치에 저장된 프로그램 및 학습 모델을 이용하여 입력 파일이 악성인지 여부를 판 별할 수 있다. 연산 장치는 입력되는 PDF 파일을 일정하게 전처리하여, 특징을 추출할 수 있다. 여기서, 특징은 전술한 바와 같이 PDF의 계층적 구조를 파싱하여 각 경로별에 대한 특정값의 집합일 수 있다. 즉, 연산 장치가 입 력 PDF 구조를 분석하여 각 경로를 파악하고, 경로별로 특정 값을 갖도록 변환하여 입력 데이터를 생성할 수 있 다. 연산 장치는 데이터를 처리하고, 일정한 연산을 처리하는 프로세서, AP, 프로그램이 임베디드된 칩과 같은 장치일 수 있다. 출력 장치는 PDF 파일 분석 과정에 필요한 인터페이스 화면을 출력할 수 있다. 또한, 출력 장치는 입 력되는 PDF 파일을 분석한 결과를 출력할 수 있다. 상술한 바와 같은 학습 데이터 네트워크는 컴퓨터에서 실행될 수 있는 실행가능한 알고리즘을 포함하는 프로그 램(또는 어플리케이션)으로 구현될 수 있다. 또한, 상술한 바와 같은 학습 데이터 생성 방법은 컴퓨터에서 실행될 수 있는 실행가능한 알고리즘을 포함하는 프로그램(또는 어플리케이션)으로 구현될 수 있다. 또한, 상술한 바와 같은 악성 PDF 분류기는 컴퓨터에서 실행될 수 있는 실행가능한 알고리즘을 포함하는 프로그 램(또는 어플리케이션)으로 구현될 수 있다. 또한, 상술한 바와 같은 악성 PDF 분류 방법은 컴퓨터에서 실행될 수 있는 실행가능한 알고리즘을 포함하는 프 로그램(또는 어플리케이션)으로 구현될 수 있다. 상기 각 프로그램은 일시적 또는 비일시적 판독 가능 매체(non-transitory computer readable medium)에 저장 되어 제공될 수 있다. 비일시적 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니 라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 구체적으로는, 상 술한 다양한 어플리케이션 또는 프로그램들은 CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM (read-only memory), PROM (programmable read only memory), EPROM(Erasable PROM, EPROM) 또는 EEPROM(Electrically EPROM) 또는 플래시 메모리 등과 같은 비일시적 판독 가능 매체에 저장되어 제공될 수 있 다. 일시적 판독 가능 매체는 스태틱 램(Static RAM，SRAM), 다이내믹 램(Dynamic RAM，DRAM), 싱크로너스 디램 (Synchronous DRAM，SDRAM), 2배속 SDRAM(Double Data Rate SDRAM，DDR SDRAM), 증강형 SDRAM(Enhanced SDRAM ，ESDRAM), 동기화 DRAM(Synclink DRAM，SLDRAM) 및 직접 램버스 램(Direct Rambus RAM，DRRAM) 과 같은 다양 한 RAM을 의미한다. 본 실시례 및 본 명세서에 첨부된 도면은 전술한 기술에 포함되는 기술적 사상의 일부를 명확하게 나타내고 있 는 것에 불과하며, 전술한 기술의 명세서 및 도면에 포함된 기술적 사상의 범위 내에서 당업자가 용이하게 유추 할 수 있는 변형 예와 구체적인 실시례는 모두 전술한 기술의 권리범위에 포함되는 것이 자명하다고 할 것이다.도면 도면1 도면2 도면3 도면4"}
{"patent_id": "10-2020-0114897", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 VAE에 대한 예이다. 도 2는 학습 데이터 네트워크에 대한 예이다. 도 3은 악성 PDF 분류기를 학습하는 과정에 대한 예이다. 도 4는 분석장치에 대한 예이다."}
