{"patent_id": "10-2022-0065255", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0080052", "출원번호": "10-2022-0065255", "발명의 명칭": "비동기 데이터 보고 방법, 장치, 전자 기기 및 저장 매체", "출원인": "아폴로 인텔리전트 커넥티비티", "발명자": "야오, 치엔펑"}}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "비동기 데이터 보고 방법에 있어서,데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하는 단계 - 상기 HTTP요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 - ;쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 단계; 및 상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중지하고, 데이터 보고 프로세스를 종료하는 단계; 를 포함하는,것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 클로징 함수를 호출하는 단계는, 휴면 함수를 호출하고, 상기 휴면 함수에 의해 설정된 기간 동안 휴면하는 단계 - 상기 설정된 기간은 상기 피드백 메시지의 전송 기간보다 작음 - ; 및상기 설정된 기간에 도달한 것에 응답하여, 상기 클로징 함수를 호출하는 단계; 를 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 링크 오픈 함수에 의해 HTTP 요청을 생성하는 단계는,상기 주소 정보를 기반으로, HTTP 요청을 초기화하는 단계; 및상기 주소 정보 및 상기 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, 상기 HTTP 요청을 생성하는 단계,것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하기 전에,상기 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하는 단계; 및상기 데이터 보고 프로세스가 종료된 것에 응답하여, 상기 업무 논리의 현재 수행 위치로 리턴하고, 계속하여상기 업무 논리의 후속 처리 프로세스를 수행하는 단계; 를 더 포함하는,것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2022-0080052-3-제4항에 있어서,상기 데이터 보고 조건이 만족되는 것은,시스템 시각이 타이밍 보고의 타이밍 시각에 도달한 것에 응답할 경우, 상기 데이터 보고 조건이 만족되는 것으로 결정하는 것; 및/또는, 상기 업무 논리가 수행되는 과정에서, 타겟 이벤트를 검출하고, 상기 타겟 이벤트가 검출된 것에 응답할 경우,상기 데이터 보고 조건이 만족되는 것으로 결정하는 것; 을 포함하는,것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 서버의 구성 정보는, 상기 서버가 클라이언트가 중지된 것을 검출하였을 경우 상기 HTTP 요청을 계속 처리하도록 지시하는 구성 항목을 포함하는,것을 특징으로 하는 비동기 데이터 보고 방법."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "비동기 데이터 보고 장치에 있어서,데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하는 생성 모듈- 상기HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 -; 쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 쓰기 모듈; 및상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중지하고, 데이터 보고 프로세스를 종료하는 클로징 모듈; 을 포함하는,것을 특징으로 하는 비동기 데이터 보고 장치."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 클로징 모듈은, 휴면 함수를 호출하고, 상기 휴면 함수에 의해 설정된 기간 동안 휴면하고, 상기 설정된 기간은 상기 피드백 메시지의 전송 기간보다 작고; 상기 설정된 기간에 도달한 것에 응답하여, 상기 클로징 함수를 호출하는,것을 특징으로 하는 비동기 데이터 보고 장치."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서,상기 생성 모듈은,상기 주소 정보를 기반으로, HTTP 요청을 초기화하고; 상기 주소 정보 및 상기 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, 상기 HTTP 요청을 생성하는,것을 특징으로 하는 비동기 데이터 보고 장치."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2022-0080052-4-제7항에 있어서,상기 생성 모듈은,데이터 보고 조건이 만족되는지 여부를 검출하고; 상기 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하고, 상기 데이터 보고 프로세스가 종료된 것에 응답하여, 상기 업무 논리의 현재 수행 위치로 리턴하고, 계속하여 상기 업무 논리의 후속 처리프로세스를 수행하는,것을 특징으로 하는 비동기 데이터 보고 장치."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 기기에 있어서,프로세서 및 메모리를 포함하고; 상기 프로세서는 상기 메모리에 저장된 수행 가능한 프로그램 코드를 판독하고 상기 수행 가능한 프로그램 코드에 대응되는 프로그램을 수행하여, 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고 방법을 수행하는,것을 특징으로 하는 전자 기기."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "컴퓨터 프로그램이 저장되어 있는 컴퓨터 판독 가능 저장 매체에 있어서,당해 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고 방법이구현되는,것을 특징으로 하는 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2022-0065255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서,상기 컴퓨터 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고방법이 구현되는,것을 특징으로 하는 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 출원은 비동기 데이터 보고 방법 및 장치를 제공하고, 컴퓨터"}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것으로, 구체적으로 빅 데이 터, 지능 검색, 정보 흐름 및 클라우드 플랫폼 기술 분야에 관한 것이다. 구체적으로, 데이터 보고 조건이 만족 된 것에 응답하여, 네트워크 자원의 Socket 링크를 오픈하는 링크 오픈 함수를 호출하고, 링크 오픈 함수에 의해 (뒷면에 계속) 대 표 도 - 도1"}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2022-0080052 HTTP 요청을 생성하며, HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함하고; 쓰기 함수를 호출하 고, 쓰기 함수에 의해 HTTP 요청을 링크 오픈 함수에 대응되는 전속 자원에 쓰고, 전속 자원을 통해 HTTP 요청을 서버에 송신하고; 전속 자원에 의한 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 클로징 함수에 의해 전속 자원을 클로징하여, 상기 서버에서 송신된 HTTP 요청의 피드백 메시지를 수신하는 것을 중지하 고, 데이터 보고 프로세스를 종료한다. 본 출원은 데이터 보고의 처리 시간을 단축하고, 보고 효율을 향상시킨다. CPC특허분류 H04L 67/535 (2022.05) H04L 69/162 (2013.01) H04L 69/22 (2022.05)명 세 서 청구범위 청구항 1 비동기 데이터 보고 방법에 있어서, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하는 단계 - 상기 HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 - ; 쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에 쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 단계; 및 상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징 함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중 지하고, 데이터 보고 프로세스를 종료하는 단계; 를 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 2 제1항에 있어서, 상기 클로징 함수를 호출하는 단계는, 휴면 함수를 호출하고, 상기 휴면 함수에 의해 설정된 기간 동안 휴면하는 단계 - 상기 설정된 기간은 상기 피 드백 메시지의 전송 기간보다 작음 - ; 및 상기 설정된 기간에 도달한 것에 응답하여, 상기 클로징 함수를 호출하는 단계; 를 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 3 제1항에 있어서, 상기 링크 오픈 함수에 의해 HTTP 요청을 생성하는 단계는, 상기 주소 정보를 기반으로, HTTP 요청을 초기화하는 단계; 및 상기 주소 정보 및 상기 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, 상기 HTTP 요 청을 생성하는 단계, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 4 제1항에 있어서, 상기 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하기 전에, 상기 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하는 단계; 및 상기 데이터 보고 프로세스가 종료된 것에 응답하여, 상기 업무 논리의 현재 수행 위치로 리턴하고, 계속하여 상기 업무 논리의 후속 처리 프로세스를 수행하는 단계; 를 더 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 5 제4항에 있어서, 상기 데이터 보고 조건이 만족되는 것은, 시스템 시각이 타이밍 보고의 타이밍 시각에 도달한 것에 응답할 경우, 상기 데이터 보고 조건이 만족되는 것으 로 결정하는 것; 및/또는, 상기 업무 논리가 수행되는 과정에서, 타겟 이벤트를 검출하고, 상기 타겟 이벤트가 검출된 것에 응답할 경우, 상기 데이터 보고 조건이 만족되는 것으로 결정하는 것; 을 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 6 제1항에 있어서, 상기 서버의 구성 정보는, 상기 서버가 클라이언트가 중지된 것을 검출하였을 경우 상기 HTTP 요청을 계속 처리 하도록 지시하는 구성 항목을 포함하는, 것을 특징으로 하는 비동기 데이터 보고 방법. 청구항 7 비동기 데이터 보고 장치에 있어서, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하는 생성 모듈- 상기 HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 -; 쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에 쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 쓰기 모듈; 및 상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징 함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중 지하고, 데이터 보고 프로세스를 종료하는 클로징 모듈; 을 포함하는, 것을 특징으로 하는 비동기 데이터 보고 장치. 청구항 8 제7항에 있어서, 상기 클로징 모듈은, 휴면 함수를 호출하고, 상기 휴면 함수에 의해 설정된 기간 동안 휴면하고, 상기 설정된 기간은 상기 피드백 메 시지의 전송 기간보다 작고; 상기 설정된 기간에 도달한 것에 응답하여, 상기 클로징 함수를 호출하는, 것을 특징으로 하는 비동기 데이터 보고 장치. 청구항 9 제7항에 있어서, 상기 생성 모듈은, 상기 주소 정보를 기반으로, HTTP 요청을 초기화하고; 상기 주소 정보 및 상기 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, 상기 HTTP 요 청을 생성하는, 것을 특징으로 하는 비동기 데이터 보고 장치. 청구항 10 제7항에 있어서, 상기 생성 모듈은, 데이터 보고 조건이 만족되는지 여부를 검출하고; 상기 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하고, 상기 데이터 보고 프로세스 가 종료된 것에 응답하여, 상기 업무 논리의 현재 수행 위치로 리턴하고, 계속하여 상기 업무 논리의 후속 처리 프로세스를 수행하는, 것을 특징으로 하는 비동기 데이터 보고 장치. 청구항 11 전자 기기에 있어서, 프로세서 및 메모리를 포함하고; 상기 프로세서는 상기 메모리에 저장된 수행 가능한 프로그램 코드를 판독하고 상기 수행 가능한 프로그램 코드 에 대응되는 프로그램을 수행하여, 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고 방법을 수행하는, 것을 특징으로 하는 전자 기기. 청구항 12 컴퓨터 프로그램이 저장되어 있는 컴퓨터 판독 가능 저장 매체에 있어서, 당해 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고 방법이 구현되는, 것을 특징으로 하는 컴퓨터 판독 가능 저장 매체. 청구항 13 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서, 상기 컴퓨터 프로그램이 프로세서에 의해 수행될 경우 제1항 내지 제6항 중 어느 한 항의 비동기 데이터 보고 방법이 구현되는, 것을 특징으로 하는 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램. 발명의 설명 기 술 분 야 본 발명은 컴퓨터 기술 분야에 관한 것으로, 구체적으로 빅 데이터, 지능 검색, 정보 흐름, 클라우드 플랫폼 기 술 분야에 관한 것이다."}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인터넷 기술의 지속적인 발전에 따라, 인터넷은 사람들이 정보를 획득하고, 소통하고, 오락과 비지니스 등을 하 는 중요한 플랫폼으로 되어가고 있다. 사람들은 인터넷을 사용하는 과정에서, 대량의 정보, 로그 등 데이터가 생성될 수 있고, 당해 데이터는 거대한 상업적 및 사회적 가치를 구비하므로, 보고해야 한다. 데이터 보고는 서버 애플리케이션 또는 클라이언트 애플리케이션에 의해 생성된 사용자 행동 데이터, 애플리케 이션 작동 로그 또는 기타 가치 있는 데이터를 데이터 센터에 집계하는 것을 가리킨다. 인터넷 및 모바일 인터 넷 시대에, 데이터의 가치는 점점 높아지고 있으며, 데이터를 구비하면 모든 것이 가능하기 때문에, 데이터를 어떻게 집계하고 보고하는지가 특히 중요하다. 본 발명은 비동기 데이터 보고 방법, 장치, 전자 기기 및 저장 매체를 제공한다. 본 발명의 일 측면에 따르면, 비동기 데이터 보고 방법을 제공하고, 상기 방법은, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HypertextTransferProtocol, HTTP) 요청을 생성하는 단계 - 상기 HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 - ; 쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에 쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 단계; 및 상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징 함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중 지하고, 데이터 보고 프로세스를 종료하는 단계; 를 포함한다. 본 발명의 다른 측면에 따르면, 비동기 데이터 보고 장치를 제공하고, 상기 장치는, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 상기 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하는 생성 모듈- 상기 HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함함 - ; 쓰기 함수를 호출하고, 상기 쓰기 함수에 의해 상기 HTTP 요청을 상기 링크 오픈 함수에 대응되는 전속 자원에 쓰고, 상기 전속 자원을 통해 상기 HTTP 요청을 상기 서버에 송신하는 쓰기 모듈; 및 상기 전속 자원에 의한 상기 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 상기 클로징 함수에 의해 상기 전속 자원을 클로징하여, 상기 서버에서 송신된 상기 HTTP 요청의 피드백 메시지의 수신을 중 지하고, 데이터 보고 프로세스를 종료하는 클로징 모듈; 을 포함한다. 본 발명의 다른 측면에 따르면, 전자 기기를 제공하고, 상기 전자 기기는, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리; 를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적 어도 하나의 프로세서에 의해 실행될 경우, 상기 적어도 하나의 프로세서가 상기 일 측면의 실시예에 따른 비동 기 데이터 보고 방법을 수행한다. 본 발명의 다른 측면에 따르면, 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 저장 매체를 제공하고, 상기 컴퓨터 명령은 컴퓨터가 상기 일 측면의 실시예에 따른 비동기 데이터 보고 방법을 수행하도록 한다. 본 발명의 다른 측면에 따르면, 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 제공하고, 상기 컴퓨 터 프로그램이 프로세서에 의해 수행될 경우, 상기 일 측면의 실시예에 따른 비동기 데이터 보고 방법이 수행된 다."}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "이해해야 할 것은, 본 발명의 내용 부분에서 설명하는 내용은 본 발명 실시예의 관건 또는 중요한 특징을 식별 하기 위한 것이 아니고, 본 발명의 범위를 한정하기 위한 것도 아니다. 본 발명의 기타 특징은 이하의 명세서를 통해 용이하게 이해된다."}
{"patent_id": "10-2022-0065255", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 도면과 결합하여 본 발명의 예시적인 실시예를 설명한다. 여기에는 이해를 돕기 위해 본 발명의 실시예의 다양한 세부 사항을 포함하고, 실시예들은 단지 예시적인 것으로 간주되어야 한다. 때문에 본 발명에 속하는 기 술 분야의 통상의 기술자는 본 발명의 범위 및 사상을 벗어나지 않고 실시예에 여러가지 변경과 수정을 할 수 있다는 것을 인식해야 한다. 동시에 정확성과 간결성을 위해 하기의 설명에서 공지 기능과 구조에 대한 설명은 생략한다. 아래 도면을 참조하여 본 출원 실시예의 비동기 데이터 보고 방법, 장치, 전자 기기 및 저장 매체를 설명한다. 인터넷 기술은 컴퓨터 기술을 기반으로 개발되고 구축된 정보 기술을 가리킨다. 인터넷 기술은 컴퓨터 네트워크 의 광역 통신망을 통해 부동한 기기가 연결되도록 하고, 정보의 전송 속도를 빠르게 하고 정보의 획득 채널을 넓히고, 각 부동한 소프트웨어 애플리케이션의 개발을 촉진하며, 사람들의 생활 및 학습 방식을 개변한다. 컴퓨터 기술의 내용은 매우 광범하고, 컴퓨터 시스템 기술, 컴퓨터 장치 기술, 컴퓨터 부품 기술 및 컴퓨터 조 립 기술 등 몇 개의 측면으로 크게 나눌 수 있다. 컴퓨터 기술은 연산 방법의 기본원리와 연산기 디자인, 명령 시스템, 중항 처리 장치(CPU) 디자인, 파이프라인 원리 및 CPU 디자인에서의 응용, 저장 시스템, 버스와 입력 및 출력을 포함한다. 빅 데이터(big data)는, IT 업계 용어로, 일정 기간 내에 통상적인 소프트웨어 도구를 사용하여 캐치, 관리 및 처리할 수 없는 데이터 세트를 가리키고, 새로운 처리 모드만으로 더 강한 의사 결정력, 통찰력 및 프로세스 최 적화 능력을 구비할 수 있는 대용량의 고증가율 및 다양화 정보 자산이다. 여기서, 빅토르 마이어 쇤베르거 (Viktor Mayer-Schφnberger)와 커네스 쿠키어(Kenneth Cukier)에 의해 편집된 <빅 데이터 시대>의 빅 데이터 는 무작위 분석(샘플링 검사)과 같은 지름길을 선택하지 않고, 모든 데이터를 사용하여 분석 및 처리하는 것을 가리킨다. 빅 데이터의 5V 특점(IBM 제출)은, Volume(대량), Velocity(고속), Variety(다양), Value(저가치 밀 도), Veracity(진실성)를 포함한다. 정보 흐름은 사람들이 각종 방식을 사용하여 정보 교류를 구현함으로, 대면하는 직접 토크에서 각종 현대화 전 달 매체를 사용하는데는, 정보의 수집, 전달, 처리, 저장, 검색, 분석 등 방법 및 과정을 포함한다. 광의 및 협 의 2종이 있다. 광의적으로는 공간 및 시간에서 같은 방향을 향해 운동하는 과정의 1개 세트의 정보이고, 공통 의 정보원 및 정보 수신자가 있으며, 즉, 1개의 정보원에서 다른 1개의 단위에 전달한 모든 정보의 세트이다. 협의적으로는 정보 전달 운동을 가리키고, 당해 전달 운동은 현대 정보 기술 연구, 발전, 응용의 조건에서, 정 보가 일정한 요구에 따라 일정한 채널을 통해 진행되는 것이다. 클라우드 컴퓨팅 플랫폼은 클라우드 플랫폼이라고도 하고, 하드웨어 자원 및 소프트웨어 자원을 기반으로 하는 서비스이고, 컴퓨팅, 네트워크 및 저장 능력을 제공한다. 클라우드 컴퓨팅 플랫폼은 3류로 분할할 수 있다. 데 이터 저장을 위주로 하는 저장형 클라우드 플랫폼, 데이터 처리를 위주로 하는 컴퓨팅 클라우드 플랫폼 및 컴퓨 팅과 데이터 저장 처리를 모두 고려한 종합적인 클라우드 컴퓨팅 플랫폼으로 분할될 수 있다. 지능 검색은 문헌과 검색어의 관련도를 기반으로, 문헌의 중요성 등 지표를 종합적으로 조사하고, 검색 결과를 정렬하여, 더 높은 검색 효율을 제공한다. 지능 검색의 결과 정렬은 관련성 및 중요성을 동시에 감안하고, 관련 성은 각 필드의 가중 혼합 인덱스를 사용하므로, 관련성 분석이 더 정확하고, 중요성은 문헌 출처에 대한 권위 있는 분석 및 인용 관계에 대한 분석 등을 통해 문헌 품질을 평가하는 것을 가리키고, 이러한 결과 정렬은 더 정확하고, 사용자 소원과 가장 관련된 문헌을 맨 앞으로 더 잘 정렬하고, 검색 효율을 향상시킬 수 있다. 본 출원의 실시예에서 제공된 비동기 데이터 보고 방법은, 전자 기기에 의해 수행될 수 있고, 당해 전자 기기는 PC(Personal Computer, 개인용 컴퓨터), 태블릿 PC 또는 핸드헬드 컴퓨터 등일 수 있고, 여기서 어떠한 한정도 하지 않는다. 본 출원의 실시예에서, 전자 기기에 처리 컴포넌트, 저장 컴포넌트 및 구동 컴포넌트를 설치할 수 있다. 선택적 으로, 당해 구동 컴포넌트와 처리 컴포넌트는 통합하여 설치될 수 있고, 당해 저장 컴포넌트는 동작 시스템, 애 플리케이션 프로그램 또는 기타 프로그램 모듈을 저장할 수 있고, 당해 처리 컴포넌트는 저장 컴포넌트에 저장 된 애플리케이션 프로그램을 수행하여 본 출원의 실시예에서 제공된 비동기 데이터 보고 방법을 구현한다. 도1은 본 출원의 실시예에 따른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 본 출원 실시예의 비동기 데이터 보고 방법은, 본 출원의 실시예에서 제공된 비동기 데이터 보고 장치에 의해 수행될 수 있고, 당해 장치는 전자 기기에 구성될 수 있다. 본 출원의 실시예에서, 응용 또는 서비스 과정에서, 데이터 보고 조건을 검출하고, 데이터 보고 조건이 만족될 경우, 전문적인 함수를 통해 비동기 데이터 보고 프 로세스를 구현하고, 데이터 보고 후 서버에서 송신된 피드백 메시지를 기다리지 않고, 데이터 보고 프로세스를 종료하고, 직접 후속 프로세스에 들어갈 수 있으므로, 전체 프로세스의 처리 시간을 절약하고, 데이터 보고 효 율을 향상시킨다. 일 가능한 상황에서, 본 출원 실시예의 비동기 데이터 보고 방법은 클라이언트 단말에서 수행될 수도 있고, 클 라이언트 단말은 휴대폰 단말일 수 있고, 휴대폰 단말에 의해 당해 비동기 데이터 보고 방법을 수행할 수 있다. 도1에 도시된 바와 같이, 당해 비동기 데이터 보고 방법은 단계101 내지 단계103을 포함한다. 단계101에서, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하고, HTTP 요청 은 적어도 서버의 주소 정보 및 보고할 데이터를 포함한다. 설명해야 할 것은, 당해 실시예의 수행 주체는 클라이언트이다. 즉, 데이터를 보고해야 할 단말 기기이다. 설명해야 할 것은, 본 실시예에서 설명된 서버는 클라이언트에 대응되는 서버일 수 있고, 저장 데이터를 전문적 으로 저장하는 저장 영역 네트워크일 수 도 있고, 여기서 어떠한 한정도 하지 않는다. 설명해야 할 것은, 당해 실시예의 주소 정보는 서버의 URL(Uniform Resource Locator, 유니폼 리소스 로케이 터)일 수 있다. 예를 들면, 사용자가 쇼핑 소프트웨어의 클라이언트를 사용하여 쇼핑할 경우, 데이터 보고의 주 소 정보는 당해 쇼핑 소프트웨어에 대응되는 URL이다. 설명해야 할 것은, 본 실시예에서 설명된 보고할 데이터는 서버 애플리케니션 또는 클라이언트 애플리케이션에 의해 생성된 사용자 행동 데이터, 애플리케이션 작동 로그 또는 기타 가치 있는 데이터일 수 있다. 선택적으로, 하이퍼텍스트 전처리기(PreHypertextPreprocessor, PHP)를 기반으로 개발된 웹 사이트 서버, 애플 리케이션 프로그램 인터페이스(Application Programming Interface, API), 마이크로 서비스 등 장면에서, 네트 워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수는 fsockopen 함수일 수 있다. 설명해야 할 것은, 인터넷 아키텍처는 Web서버, 클라이언트 및 HTTP 프로토콜로 구성되고, 사용자가 인터넷을 사용하여 생성한 정보 로그 등 데이터의 보고 및 Web 서버가 클라이언트에 요청된 내용을 리턴하는 데는 HTTP 프로토콜을 이용하여 인터랙션해야 함으로, 커뮤니케이션 연결을 구현한다. 이로써, 서버에 데이터를 보고하기 위해, 링크 오픈 함수에 의해 HTTP 요청을 생성하여, 서버에 대한 원격 보고를 구현해야 한다. 본 출원의 실시예에서, 데이터 보고 조건은 여러 가지일 수 있고, 아래 하나씩 설명한다. 일 예시로서, 데이터 보고 조건은 미리 설정된 타이밍 시각일 수 있고, 클라이언트가 시스템 시각이 타이밍 보 고의 타이밍 시각에 도달한 것에 응답할 경우, 데이터 보고 조건이 만족되는 것으로 결정한다. 예를 들면, 클라 이언트에 타이머가 설치되어 있고, 당해 타이머가 주기적으로 타이밍을 하고, 타이밍 시각에 도달할 경우, 데이 터 보고 이벤트를 트리거링한다. 다른 예시로서, 클라이언트는 업무 논리가 수행되는 과정에서, 타겟 이벤트를 검출하고, 타겟 이벤트가 검출된 것에 응답할 경우, 데이터 보고 조건이 만족되는 것으로 결정한다. 나아가, 업무 논리 수행 과정에서, 주문, 브라우징 또는 기타 인터랙션 이벤트를 포함하고, 당해 이벤트에 1개 의 트리거링 버튼을 설치할 수 있고, 당해 이벤트가 동작될 경우, 데이터 보고 이벤트를 트리거링한다. 다른 예시로서, 클라이언트는 시스템 시각이 타이밍 보고의 타이밍 시각에 도달한 것에 응답하고 클라이언트는 업무 논리 수행 과정에서, 타겟 이벤트를 검출하고, 타겟 이벤트가 검출된 것에 응답한다. 본 출원의 실시예에서, 데이터 보고 조건은 여러 가지일 수 있고, 시스템 시각이 타이밍 보고의 타이밍 시각에 도달한 것에 응답하는 것일 수 있고, 타겟 이벤트가 검출된 것에 응답하는 것일 수도 있고, 나아가 몇 종 조건 의 그룹일 수도 있고, 여기서 어떠한 한정도 하지 않고, 구체적인 상황에 따라 설정한다. 이로써, 데이터 보고 가 부동한 장면, 부동한 수행 논리에 적응하도록 보장할 수 있고, 더 안정적으로 개발하고 생성 환경에 응용된 다. 단계102에서, 쓰기 함수를 호출하고, 쓰기 함수에 의해 HTTP 요청을 링크 오픈 함수에 대응되는 전속 자원에 쓰 고, 전속 자원을 통해 HTTP 요청을 서버에 송신한다. 설명해야 할 것은, 전속 자원은 단독 채널 또는 스레드일 수 있다. 본 출원의 실시예에서, 클라이언트는 데이터 보고 조건을 트리거링한 후, fsockopen 함수를 통해 전속 자원에 대해 초기화 구성을 수행하고, 쓰기 함수를 호출한다. 예를 들면 fwrite 함수는 HTTP 요청을 매칭되는 전속 자 원에 쓰고, 전속 자원을 통해 해당 URL에 보고한다. 단계103에서, 전속 자원에 의한 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 클로징 함 수에 의해 전속 자원을 클로징하여, 서버에서 송신된 HTTP 요청의 피드백 메시지를 수신하는 것을 중지하고, 데 이터 보고 프로세스를 종료한다. 전속 자원이 HTTP 요청을 송신하는 과정을 모니터링하고, HTTP 요청의 송신이 종료된 것을 모니터링하였을 경우, 클로징 함수 예를 들면 fclose 함수를 호출하고, 당해 클로징 함수에 의해 전속 자원을 클로징하는다. 선 택적으로, HTTP 요청에 1개의 종료 필드가 구비될 수 있고, 종료 필드까지 송신하였을 경우 HTTP 요청의 송신이 종료된 것으로 결정할 수 있다. 전속 자원이 클로징된 후, 전속 자원과 서버 사이의 링크는 차단되고, 전속 자 원은 서버에서 송신된 HTTP 요청의 피드백 메시지를 수신할 수 없다. 즉, 클라이언트는 당해 피드백 메시지를 수신할 때까지 기다려서, 데이터 보고 프로세스를 종료하지 않는다. 즉, 클로징 함수에 의해 전속 자원을 클로 징한 후 클라이언트는 직접 데이터 보고 프로세스를 종료한다. 본 출원의 실시예에서, 클라이언트는 데이터 보고 조건이 만족된 후, 네트워크 자원의 Socket 링크를 오픈하는 링크 오픈 함수를 호출하고, HTTP 요청을 생성하고, 쓰기 함수를 호출하고, HTTP 요청을 전속 자원에 쓰고, 전 속 자원을 통해 URL에 대응되는 서버에 보고하고, 전속 자원에 의한 HTTP 요청의 송신이 종료된 후, 클로징 함 수를 호출하여 직접 전속 자원을 클로징하여, 데이터 보고 프로세스를 종료하므로, 서버의 피드백 메시지를 기 다린 후, 데이터 보고 프로세스를 종료할 필요가 없다. 이로써, 클라이언트가 데이터를 보고할 경우, 서버가 HTTP 요청에 대한 피드백을 기다릴 필요 없이, 직접 후속 프로세스로 들어갈 수 있고, 전체 프로세스의 처리 시 간을 절약하고, 데이터 보고 효율을 향상시킨다. 설명해야 할 것은, 통상적으로 서버는 클라이언트에서 송신된 HTTP 요청을 수신한 후, 클라이언트가 연결 상태 에 있도록 유지해야, HTTP 요청에 대해 지속 처리를 할 수 있고, 클라이언트에 연결이 끊기거나 중단되는 등 이 상 상황이 나타날 경우, 서버는 단말 기기의 연결이 끊기거나 중단된 것을 검출하고, 이때 서버는 HTTP 요청에 후속 처리를 하지 않는다. 본 출원의 실시예에서 제공된 전속 자원이 클로징된 후, 서버가 여전히 HTTP 요청을 처리할 수 있도록, 서버 정보에 서버가 클라이언트가 중지된 것을 검출하였을 경우 HTTP 요청을 계속 처리하도 록 지시하는 구성 항목을 구성해야 한다. 예를 들면, Web 서버(nginx) 구성 항목을 보정하고, nginx가 HTTP 요 청이 클로징된 것을 검출하였을 경우, HTTP 요청에 대한 처리를 중지하지 않는다. 이로써, 서버가 전속 자원이 클로징된 것을 검출하고 HTTP 요청을 처리하지 않는 경우를 방지하여, 데이터 보고 기능이 더 안정적이고, 신뢰 할 수 있다. 상기 실시예를 명확하게 설명하기 위해, 본 출원의 일 실시예에서, 도2에 도시된 바와 같이 단계201 내지 204를 포함한다. 단계201에서, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성한다. 단계202에서, 쓰기 함수를 호출하고, 쓰기 함수에 의해 HTTP 요청을 링크 오픈 함수에 대응되는 전속 자원에 쓰 고, 전속 자원을 통해 HTTP 요청을 서버에 송신한다. 구체적으로 상기 실시예의 관련 내용을 참조할 수 있다. 단계203에서, 휴면 함수를 호출하고, 휴면 함수에 의해 설정된 기간 동안 휴면하고, 설정된 기간은 피드백 메시 지의 전송 기간보다 작다. 본 출원의 실시예에서, 쓰기 함수가 HTTP 요청을 매칭되는 전속 자원에 쓴 후, 휴면 함수 예를 들면 usleep 함 수를 호출하고, 프로그램이 휴면 함수가 설정된 기간 동안 휴면하는 것을 기다리도록 한다. 설명해야 할 것은, 휴면 함수의 설정된 기간은 피드백 메시지의 전송 기간보다 훨씬 작다. 예를 들면, 1개의 HTTP 요청의 피드백 시간은 100밀리 초이고, 휴면 함수의 설정된 기간은 1밀리 초이고, 휴면 함수의 설정된 기 간은 HTTP 요청의 피드백 기간보다 훨씬 작다. 단계204에서, 설정된 기간에 도달한 것에 응답하여, 클로징 함수를 호출한다. 본 출원의 실시예에서, 쓰기 함수가 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 매칭되는 전속 자원에 쓸 경우, 휴면 함수를 호출하고, 휴면 함수에 의해 설정된 기간 동안 휴면하고, 설정된 기간은 피드백 메시지의 전송 기 간보다 작고, 설정된 기간에 도달할 경우, 클라이언트는 클로징 함수를 호출하고, 전속 자원을 클로징하는다. 이로써, 서버가 전속 자원이 휴면 상태에 있으나 클로징되지 않은 것을 검출하고, 비교적 짧은 시간을 유지하고, HTTP 요청이 서버에 순리롭게 송신되도록 보장하여 데이터 보고 기능이 더 안정적이고, 신뢰할 수 있 다. 상기 실시예를 기반으로, 본 출원의 일 실시예에서, 도3에 도시된 바와 같이, 링크 오픈 함수에 의해 HTTP 요청 을 생성하는 단계는 단계301 내지 302를 포함한다. 단계301에서, 주소 정보를 기반으로, HTTP 요청을 초기화한다. 본 출원의 실시예에서, HTTP 요청의 초기화는 클라이언트가 링크 오픈 함수(Fsockopen 함수)를 호출하여 주소 정보를 HTTP 요청에 쓰는 것일 수 있다. 설명해야 할 것은, 상기 설명된 주소 정보는 URL과 매칭된다. 단계302에서, 주소 정보 및 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, HTTP 요청 을 생성한다. 설명해야 할 것은, 당해 실시예에서 설명된 헤드 정보(Header)는 HTTP 요청의 실제 보고 데이터 및 데이터 길이, 네트워크 노드(Host) 등 정보일 수 있다. 본 출원의 실시예에서, 클라이언트는 주소 정보를 기반으로, HTTP 요청을 초기화하고, 초기화된 HTTP 요청의 Header를 구성하여, HTTP 요청을 생성한다. 이로써, HTTP 요청의 주소 정보와 URL이 매칭됨으로, 더 정확하게 데이터를 URL에 보고한다. 상기 실시예를 기반으로, 업무 논리의 접속 수행을 구현하기 위해, 본 출원의 일 실시예에서, 도4에 도시된 바 와 같이, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하기 전에, 단계401 내지 402를 더 포함한다. 단계401에서, 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록한다. 설명해야 할 것은, 업무 논리는 프로그램의 주요 수행 논리이다. 예를 들면 사용자 로그인, 쇼핑 주문, 이벤트 없는 리스트를 획득 하는 등, 후속 데이터 보고는 모두 주요 수행 논리를 기반으로 수행되는 것이다. 본 출원의 실시예에서, 업무 논리를 기록하는 것은 클라이언트 프로그램일 수 있고, 링크 오픈 함수(Fsockopen 함수)에 의해 열린 어느 하나의 소켓(Socket) 링크에 저장될 수도 있다. 여기서 어떠한 한정도 하지 않는다. 단계402에서, 데이터 보고 프로세스가 종료된 것에 응답하여, 업무 논리의 현재 수행 위치로 리턴하고, 계속하 여 업무 논리의 후속 처리 프로세스를 수행한다. 본 출원의 실시예에서, 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하고, 클라이언 트는 데이터 보고 프로세스가 종료된 것에 응답하여, 업무 논리의 현재 수행 위치로 리턴하고, 계속하여 업무 논리의 후속 처리 프로세스를 수행한다. 이로써, 데이터 보고 프로세스가 종료된 후, 주요 수행 논리는 데이터 보고의 결과를 기다릴 필요 없이, 수행 위치에서 계속 수행되고, 주요 수행 논리에 영향을 주지 않고, 주요 수 행 논리의 소요 시간도 증가되지 않는다. 도5는 본 출원의 일 실시예에 따른 비동기 데이터 보고 방법의 개략적인 흐름도이고, 도5에 도시된 바와 같이, 제1 단계에서 클라이언트는 서비스 요청을 수신하고, 서비스 요청을 기반으로 구성 파일을 로딩하고, 구성 파일 은 서비스 요청에 대응되는 서비스의 업무 논리에 대응되는 메인 프로세스 및 데이터 보고 프로세스를 포함한다. 제2 단계에서 구성 파일에 대해 어휘 해석을 하고, 서비스에 대응되는 메인 프로세스를 찾고, 제3 단 계에 들어가 메인 프로세스를 수행하고, 메인 프로세스가 수행되는 과정에서, 데이터 보고를 트리거링하는 조건 이 만족되는지 여부를 검출하고, 데이터 보고 조건이 만족될 경우 메인 프로세스의 현재 수행 위치를 기록하고, 제4 단계의 데이터 보고 프로세스에 들어가고, fsockopen 함수를 통해 HTTP 요청을 초기화하고, 프로그램에서 HTTP의 Header 정보를 스플라이스하고, fwrite 함수를 호출하여 HTTP 요청을 Niginx에 송신하고, fwrite 함수 를 호출하여 HTTP 요청을 송신한 후, fclose 함수를 바로 호출하여, 상기 구축된 HTTP 요청을 클로징하고, 메인 프로세스에 기록된 수행 위치에 돌아오고, 계속하여 메인 프로세스를 수행한다. 상응하게, Niginx는 HTTP 요청 을 획득한 후, 당해 요청에 클라이언트에 의해 업로드된 데이터가 구비되므로, 클라이언트에 의해 업로드된 데 이터를 추출할 수 있고, 데이터에 대해 일부 전처리를 하고, 데이터를 클라우드 데이터 센터에 저장한다. 설명 해야 할 것은, 서버와 클라이언트 사이는 쾌속 공통 게이트웨이 인터페이스 프로토콜(fastCGI프로토콜)을 통해통신한다. 선택적으로, 데이터 보고 프로세스는 1개의 캡슐화 프로그램일 수 있다. 설명해야 할 것은, 당해 예 시에서 먼저 Niginx 구성 정보를 보정하여, 클라이언트가 능동적으로 차단되어도 Nginx는 HTTP 요청에 대한 처 리를 포기하지 않을 수 있다. 도6은 본 출원의 실시예에 따른 비동기 데이터 보고 장치의 구조 개략도이다. 본 출원의 실시예는 비동기 데이터 보고 장치를 제공하고, 당해 장치는 전자 기기에 구성될 수 있다. 본 출원의 실시예에서, 응용 또는 서비스 과정에서, 데이터 보고 조건을 검출하고, 데이터 보고 조건이 만족될 경우, 1개 의 전문적인 함수를 통해 비동기 데이터 보고 프로세스를 구현하고, 데이터 보고 후 서버에서 송신된 피드백 메 시지를 기다리지 않고, 데이터 보고 프로세스를 종료하고, 직접 후속 프로세스에 들어갈 수 있고, 전체 프로세 스의 처리 시간을 절약하고, 데이터 보고 효율을 향상시킨다. 도6에 도시된 바와 같이, 당해 비동기 데이터 보고 장치는, 생성 모듈, 쓰기 모듈 및 클로징 모 듈을 포함한다. 생성 모듈은, 데이터 보고 조건이 만족된 것에 응답하여, 네트워크 자원의 소켓(Socket) 링크를 오픈하는 링크 오픈 함수를 호출하고, 링크 오픈 함수에 의해 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 생성하고, HTTP 요청은 적어도 서버의 주소 정보 및 보고할 데이터를 포함한다. 설명해야 할 것은, 당해 실시예의 수행 주체는 클라이언트이다. 즉, 데이터 보고해야 할 단말 기기이다. 본 출원 일 실시예에서, 생성 모듈이 링크 오픈 함수를 호출하여 HTTP 요청을 생성하는 단계는, 주소 정보를 기반으로, HTTP 요청을 초기화하는 단계; 및 주소 정보 및 보고할 데이터를 기반으로, 초기화된 HTTP 요청의 헤드 정보를 구성하여, HTTP 요청을 생성하는 단계; 를 포함한다. 본 출원의 다른 실시예에서, 생성 모듈은, 데이터 보고 조건이 만족되는지 여부를 검출하고; 상기 데이터 보고 조건이 만족되는 시각의 업무 논리의 현재 수행 위치를 기록하고, 상기 데이터 보고 프로세스 가 종료된 것에 응답하여, 상기 업무 논리의 현재 수행 위치로 리턴하고, 계속하여 상기 업무 논리의 후속 처리 프로세스를 수행한다. 쓰기 모듈은, 쓰기 함수를 호출하고, 쓰기 함수에 의해 HTTP 요청을 링크 오픈 함수에 대응되는 전속 자원 에 쓰고, 전속 자원을 통해 HTTP 요청을 서버에 송신한다. 설명해야 할 것은, 전속 자원은 단독 채널 또는 스레 드일 수 있다. 클로징 모듈은, 전속 자원에 의한 HTTP 요청의 송신이 종료된 것에 응답하여, 클로징 함수를 호출하고, 클 로징 함수에 의해 전속 자원을 클로징하여, 서버에서 송신된 HTTP 요청의 피드백 메시지를 수신하는 것을 중지 하고, 데이터 보고 프로세스를 종료한다. 본 출원의 다른 실시예에서, 클로징 모듈은, 휴면 함수를 호출하고, 휴면 함수에 의해 설정된 기간 동안 휴면하고, 설정된 기간은 피드백 메시지의 전송 기간보다 작고, 설정된 기간에 도달한 것에 응답하여, 클로징 함수를 호출한다. 본 출원의 실시예에서, 클라이언트는 데이터 보고 조건이 만족된 후, 생성 모듈은 네트워크 자원의 Socket 링크를 오픈하는 링크 오픈 함수를 호출하여, HTTP 요청을 생성하고, 쓰기 모듈을 통해 쓰기 함수를 호출 하여, HTTP 요청을 전속 자원에 쓰고, 전속 자원을 통해 URL에 대응되는 서버에 보고하고, 전속 자원에 의한 HTTP 요청의 송신이 종료된 후, 클로징 모듈은 클로징 함수를 호출하여 직접 전속 자원을 클로징하여, 데 이터 보고 프로세스를 종료하므로, 서버의 피드백 메시지를 기다린 후, 데이터 보고 프로세스를 종료할 필요가 없다. 이로써, 클라이언트가 데이터를 보고할 경우, 서버가 HTTP 요청에 대한 피드백을 기다릴 필요 없이, 직접 후속 프로세스로 들어갈 수 있고, 전체 프로세스의 처리 시간을 절약하고, 데이터 보고 효율을 향상시킨다. 본 출원의 실시예에 따르면, 본 출원 실시예는 전자 기기, 판독 가능 저장 매체 및 컴퓨터 프로그램을 더 제공 한다. 도7에 도시된 바와 같이, 도7은 본 출원 실시예를 구현하는데 사용되는 전자 기기의 블록도이다. 전자 기 기는 다양한 형식의 디지털 컴퓨터를 표시한다. 예를 들면, 랩톱 컴퓨터, 데스크톱 컴퓨터, 워크스테이션, 개인정보 단말(PAD), 서버, 블레이드 서버, 메인 프레임 및 기타 적합한 컴퓨터일 수 있다. 전자 기기는 다양한 형 식의 모바일 장치를 표시한다. 예를 들면 개인 정보 단말(PAD), 셀룰러 폰, 스마트 폰, 웨어러블 기기 및 기타 유사한 컴퓨팅 장치일 수 있다. 본 출원에 개시된 컴포넌트, 이들의 연결과 관계, 및 기능은 단지 예시적인 것 뿐이며, 본 출원에서 설명 및/또는 요구한 본 출원의 구현을 한정하려는 것은 아니다. 도7에 도시한 바와 같이, 전자 기기는 계산 유닛을 포함하고, 읽기 전용 메모리(ROM)에 저장된 컴퓨터 프로그램 또는 저장 유닛에서 랜덤 액세스 메모리(RAM)에 로딩된 컴퓨터 프로그램에 따라, 각 적당한 동작 및 처리를 수행한다. RAM에서, 전자 기기 동작에 수요되는 각 프로그램 및 데이터를 저 장할 수도 있다. 계산 유닛, ROM 및 RAM은 버스를 통해 서로 연결된다. 입력/출력(I/O) 인터페이스도 버스에 연결된다. 전자 기기의 복수의 컴포넌트는 I/O인터페이스에 연결되고, 복수의 컴포넌트는, 키보드, 마우스 등과 같은 입력 유닛; 다양한 유형의 모니터, 스피커 등과 같은 출력 유닛; 자기 디스크, 광 디스크 등과 같은 저장 유닛; 및 네트워크 카드, 모뎀 또는 무선 통신 송수신기 등과 같은 통신 유닛을 포함한다. 통신 유닛은 전자 기기가 인터넷과 같은 컴퓨터 네트워크 및/또는 각 전신 네트워크를 통해 기타 기 기와 정보/데이터를 교환할 수 있도록 허용한다. 계산 유닛은 각 처리 및 계산 기능을 구비한 범용/전용 처리 컴포넌트일 수 있다. 계산 유닛의 일부 예시는 중앙 처리 장치(CPU), 그래프 처리 장치(GPU), 각 전용 인공지능 계산 칩, 각 기계 학습 모델 알고리즘 을 운행하는 계산 유닛, 디지털 신호 처리 장치(DSP), 임의의 적합한 프로세서, 제어기 및 마이크로 제어기 등 을 포함하나 이에 한정되지 않는다. 계산 유닛은 상기 설명한 각 방법 및 처리를 수행한다. 예를 들면 비 동기 데이터 보고 방법을 수행한다. 예를 들면, 일 실시예에서, 비동기 데이터 보고 방법은 컴퓨터 소프트웨어 프로그램으로 구현될 수 있고, 유형적으로 저장 유닛과 같은 기계 판독 가능 매체에 포함된다. 일 실시예 에서, 컴퓨터 프로그램의 일부 또는 전부는 ROM 및/또는 통신 유닛에 의해 전자 기기에 로딩 및 /또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로딩되고 계산 유닛에 의해 수행될 경우, 상기 설명 한 비동기 데이터 보고 방법의 하나 또는 복수의 단계를 수행할 수 있다. 대안적으로, 기타 실시예에서, 계산 유닛은 기타 임의의 적합한 방식(예를 들면, 펌웨어)으로 본 출원의 실시예에 따른 비동기 데이터 보고 방 법을 수행할 수 있도록 구성된다. 여기서 설명하는 시스템과 기술의 여러 가지 실시형태는 디지털 전자회로 시스템, 집적회로 시스템, 프로그래밍 가능 게이트 어레이(FPGA), 주문형 직접 회로(ASIC), 전용 표준 제품(ASSP), 칩상 시스템(SOC), 복합 프로그래 머블 논리 소자(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합에서 실현될 수 있다. 이러한 여러 가지 실시형태는 하나 또는 복수의 컴퓨터 프로그램에서 실시되는 것을 포함할 수 있고, 당해 하나 또는 복수의 컴퓨터 프로그램은 적어도 하나의 프로그래밍 가능 프로세서를 포함하는 프로그래밍 가능 시스템에서 실 행 및/또는 해석되며, 당해 프로그래밍 가능 프로세서는 전용 또는 일반 프로그래밍 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치에서 데이터와 명령을 수신할 수 있 고, 데이터와 명령을 당해 저장 시스템, 당해 적어도 하나의 입력 장치 및 당해 적어도 하나의 출력 장치에 전 송할 수 있다. 본 출원의 방법을 수행하는데 사용되는 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 조합으로 작성될 수 있다. 당해 프로그램 코드는 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그래밍 가능한 데이터 처리 장 치의 프로세서 또는 제어기에 제공하여, 프로그램 코드가 프로세서 또는 제어기에 의해 수행될 경우 흐름도 및/ 또는 블록도에서 규정한 기능/동작을 실시하게 된다. 프로그램 코드는 완전히 또는 부분적으로 기계에서 수행되 고, 독립 소프트웨어 패키지로서 부분적으로 기계에서 수행하고 부분적으로 또는 완전히 원거리 기계 또는 서버 에서 수행된다. 본 출원의 콘텍스트에서, 기계 판독 가능 매체는 유형적인 매체일 수 있고, 명령 수행 시스템, 장치 또는 기기 가 사용하거나 명령 수행 시스템, 장치 또는 기기와 결합하여 사용하도록 제공하는 프로그램을 포함 또는 저장 할 수 있다. 기계 판독 가능 매체는 기계 판독 가능 신호 매체 또는 기계 판독 가능 저장 매체일 수 있다. 기계 판독 가능 매체는 전자, 자기, 광학, 전자기, 적외선 또는 반도체 시스템, 장치 및 기기, 또는 상기 내용의 임 의의 적합한 조합을 포함하나 이에 한정되지 않는다. 기계 판독 가능 저장 매체의 더 구체적인 예시는 하나 또 는 복수의 선을 기반으로 하는 전기 연결, 휴대용 컴퓨터 디스크, 하드 디스크, 랜덤 엑세스 메모리(RAM), 읽기 전용 메모리(ROM), 지울 수 있는 프로그래밍 가능한 읽기 전용 메모리(EPROM또는 플래시 메모리), 광섬유, 시디 롬(CD-ROM), 광학 저장 기기, 자기 저장 기기, 또는 상기 내용의 임의의 적합한 조합을 포함할 수 있다.사용자와의 대화를 제공하기 위해, 여기서 설명된 시스템 및 기술은 컴퓨터에서 구현할 수 있으며, 당해 컴퓨터 는 사용자에게 정보를 디스플레이하는 디스플레이 장치(예를 들면, CRT음극선관) 또는 LCD(액정 디스플레이)모 니터); 및 키보드와 지향 장치(예를 들면, 마우스 또는 트랙볼)를 구비하고, 사용자는 당해 키보드와 당해 지향 장치를 통해 컴퓨터에 입력을 제공할 수 있다. 기타 유형의 장치도 사용자와의 대화에 사용될 수 있는 바, 예를 들면 사용자에게 제공된 피드백은 임의의 형식의 감각 피드백(예를 들면, 시각적 피드백, 청각적 피드백 또는 촉각적 피드백)일 수 있고, 임의의 형식(음향 입력, 음성 입력 또는 촉각 입력)에 의해 사용자로부터의 입력을 수신할 수 있다. 여기서 설명한 시스템과 기술을, 백그라운드 컴포넌트를 포함하는 컴퓨팅 시스템(예를 들면 데이터 서버), 또는 미들웨어 컴포넌트를 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버), 또는 프론트 엔드 컴포넌트를 포 함하는 컴퓨팅 시스템(예를 들면, 그래픽 사용자 인터페이스 또는 네트워크 브라우저를 구비한 사용자 컴퓨터에 서 실시될 수 있고, 사용자는 당해 그래픽 사용자 인터페이스 또는 당해 네트워크 브라우저를 통해 여기서 설명 한 시스템과 기술의 실시형태와 대화할 수 있다), 또는 이러한 백그라운드 컴포넌트, 미들웨어 컴포넌트 또는 프론트 엔드 컴포넌트의 임의의 조합을 포함하는 컴퓨팅 시스템에서 실시될 수 있다. 임의의 형태 또는 매체의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통해 시스템의 컴포넌트를 서로 연결할 수 있다. 통신 네트워 크의 예시는 근거리 통신망 (LAN), 광역 통신망 (WAN), 인터넷 및 블록 체인 네트워크를 포함한다. 컴퓨터 시스템은 클라이언트와 서버를 포함할 수 있다. 클라이언트와 서버는 일반적으로 서로 떨어져 있으며, 통신 네트워크를 통해 서로 대화한다. 대응하는 컴퓨터에서 운행되고 서로 클라이언트-서버 관계를 가지는 컴퓨 터 프로그램에 의해 클라이언트와 서버의 관계를 생성한다. 서버는 클라우드 서버일 수 있고, 클라우드 계산 서 버라고도 하고, 클라우드 계산 서비스 시스템의 호스트 제품이고, 전통적인 물리 호스트와 VPS서비스(\"Virtual Private Server\", 또는 \"VPS\")에서, 관리가 어렵고, 업무 확장성이 약한 결함을 해결한다. 서버는 분산식 시스 템의 서버 또는 블록 체인을 결합한 서버일 수도 있다 이해해야 할 것은, 상기 복수 형식의 흐름에 의해, 단계를 재정열, 추가 또는 삭제할 수 있다. 예를 들면, 본 출원에 기재한 각 단계는 병행하여 또는 순차적으로 실행할 수도 있고, 서로 다른 순서로 실행할 수도 있다. 본 출원에서 개시한 기술적 수단이 원하는 결과만 구현할 수 있으면 본 출원에서는 이에 대해 한정하지 않는다. 상기 구체적인 실시 방식은 본 출원의 보호 범위를 한정하지 않는다. 본 출원이 속하는 기술 분야의 통상의 기 술자는 설계 요구 및 기타 요소에 의해 여러가지 수정, 조합, 서브 조합 및 대체가 이루어질 수 있음을 이해해 야 한다. 본 출원의 정신과 원칙 내에서 이루어진 모든 수정, 동등한 대체 및 개선은 모두 본 출원 보호 범위에 포함된다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2022-0065255", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면은 본 기술적 수단을 더 잘 이해하는데 사용되고, 본 발명을 한정하려는 것은 아니다. 도1은 본 출원의 실시예에 따른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 도2는 본 출원의 실시예에 따른 다른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 도3은 본 출원의 실시예에 따른 다른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 도4는 본 출원의 실시예에 따른 다른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 도5는 본 출원의 실시예에 따른 다른 비동기 데이터 보고 방법의 개략적인 흐름도이다. 도6은 본 출원의 실시예에 따른 비동기 데이터 보고 장치의 구조 개략도이다.도7은 본 출원의 실시예에 따른 비동기 데이터 보고 방법을 구현하기 위한 전자 기기의 블록도이다."}
