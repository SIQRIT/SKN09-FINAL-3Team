{"patent_id": "10-2022-0034729", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0125693", "출원번호": "10-2022-0034729", "발명의 명칭": "증강 현실 서비스 성능 최적화 방법 및 장치", "출원인": "삼성전자주식회사", "발명자": "김중섭"}}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서, 통신 모듈; 및 프로세서를 포함하고, 상기 프로세서는 상기 통신 모듈을 통해 AR(augmented reality) 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하고, 상기 기본 성능 프리셋에 기반하여 각 AR 작업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자장치에서 분산 처리하도록 기기 간 로드 밸런싱을 수행하고, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발생되는 경우, 상기 AR 장치에서 처리 중인AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에서 전환하여 처리하도록 재설정하고,상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하도록 설정된 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 AR 작업들은 헤드 추적(head tracking) 작업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업 중 적어도 하나를 포함하는 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 센서 모듈을 더 포함하고, 상기 프로세서는, 상기 증강 현실 서비스를 수행하는 동안, 상기 센서 모듈들 통해 제1 기기 성능 데이터 및 AR 사용 환경 데이터를 수집하고, 상기 AR 장치로부터 제2 기기 성능 데이터를 수신하고, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 상기 AR 작업들 중 적어도 하나에 로드 밸런싱 변경 조건이 변경되는지를 모니터링하도록 설정된 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 제1 기기 성능 데이터는 상기 전자 장치의 GPU 클럭(clock) 및 CPU 로드(load), 상기 전자 장치의 GPU 클럭 및 GPU 로드(load), 네트워크 타입, 상기 전자 장치와 상기AR 장치와의 테더링 네트워크 타입, 테더링 네트워크 신호 세기, 랜더링 FPS(frame per second), 상기 전자 장치의 표면 온도, 상기 전자 장치의 한계 온도, 전자 장치 해상도 중 적어도 하나를 포함하고, 상기 제2 기기 성능 데이터는, 상기 AR 장치의 GPU 클럭(clock) 및 CPU 로드(load), 상기 AR 장치의 GPU 클럭및 GPU 로드(load), 상기 AR 장치의 디스플레이 주파수, 상기 AR 장치의 동작 온도, 상기 AR 장치의 주사율(refresh rate), 상기 AR 장치의 화면 밝기, 상기 AR 장치의 한계 온도, 네트워크 트래픽, 추적 주파수, 추적좌표, 추적 지연속도(tracking latency), 또는 추적 정확도(tracking accuracy), 추적 입력 이미지 품질공개특허 10-2023-0125693-3-(tracking input image quality), 장면 분석 결과, 장면 분석 정확도 중 적어도 하나를 포함하고, 상기 AR 사용 환경 데이터는, 상기 전자 장치의 위치 정보 및 상기 AR 장치의 위치 정보(예: GPS 기반 위치 정보, GEO IP 기반 위치 정보, 증강 현실 서비스 시의 에러 프로세스 정보, AR 앱 사용 시간, 주변 환경 정보 중적어도 하나를 포함하는 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서, 상기 프로세서는, 상기 전자 장치에서 처리 중인 상기 제1 AR 작업에 변경 복귀 조건이 발생되는 경우, 상기 제1 AR작업을 상기AR 장치에서 다시 처리하도록 재설정하는 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서, 상기 프로세서는, 상기 전자 장치, 상기 AR 장치 및 AR 앱의 조합에 기반하여 현재 상황에 대응하는 AR 컨택스트를 추정하고, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 상기 추정된AR 컨택스트에 대응하는 성능 평가를 수행하고, 상기 성능 평가 결과에 기초하여 상기 기본 성능 프리셋의 구성파리미터들의 적어도 일부가 조정된 개인화된 성능 프리셋을 생성하고, 상기 생성된 개인화된 성능 프리셋을 상기 증강 현실 서비스에 적용하도록 설정된 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제3항에 있어서, 상기 통신 모듈은 서버 장치와 연결되고, 상기 프로세서는, 상기 통신 모듈을 통해 상기 서버 장치로 상기 전자 장치의 속성 정보, 상기 AR 장치의 속성 정보 및 AR 앱의속성 정보를 전송하고, 상기 서버 장치로부터 상기 전자 장치 및 상기 AR 장치 및 상기 AR 앱 중 적어도 하나의조합에 맞는 기본 성능 프리셋을 수신하도록 제어하는 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 프로세서는, 상기 서버 장치로 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 전송하고, 상기 서버 장치로부터 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터의조합에 맞는 개인화된 성능 프리셋을 수신하도록 설정된 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제3항에 있어서, 상기 프로세서는, 상기 통신 모듈을 통해 상기 서버 장치와 통신하여, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및상기 AR 사용 환경 데이터들을 성능 평가를 위한 데이터들로 분류하고, AR 성능 평가 요소 별 성능 평가 점수를계산하고, 상기 성능 평가 점수를 기반으로 상기 기본 성능 프리셋에 포함된 구성 파라미터 중 미세 조정이 필요한 적어도 하나의 제1 파라미터를 선택하고, 상기 선택된 적어도 하나의 제1 파라미터를 미세 조정하여 상기개인화된 성능 파라미터를 생성하도록 설정된 전자 장치."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2023-0125693-4-전자 장치의 증강 현실 서비스 최적화 방법에 있어서, AR(augmented reality) 장치와 연결하는 동작; 상기 AR 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하는 동작; 상기 기본 성능 프리셋에 기반하여 각 AR 작업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자장치에서 분산 처리하도록 기기 간 로드 밸런싱을 수행하는 동작; 상기 AR 장치에서 처리 중인AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발생되는 경우, 상기AR 장치에서 처리 중인AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에서 전환하여 처리하도록 재설정하는 동작; 및 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 AR 작업들은 헤드 추적(head tracking) 작업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업 중 적어도 하나를 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 AR 장치에서 처리 중인AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 전자 장치에서 전환하여 처리하도록 재설정하는 동작은 상기 증강 현실 서비스를 수행하는 동안, 전자 장치의 센서 모듈들 통해 제1 기기 성능 데이터 및 AR 사용 환경데이터를 수집하는 동작; 상기 AR 장치로부터 제2 기기 성능 데이터를 수신하는 동작; 및 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 상기 AR 작업들에 로드 밸런싱 변경 조건이 변경되는지를 모니터링하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 제1 기기 성능 데이터는 상기 전자 장치의 GPU 클럭(clock) 및 CPU 로드(load), 상기 전자 장치의 GPU 클럭 및 GPU 로드(load), 네트워크 타입, 상기 전자 장치와 상기AR 장치와의 테더링 네트워크 타입, 테더링 네트워크 신호 세기, 랜더링 FPS(frame per second), 상기 전자 장치의 표면 온도, 상기 전자 장치의 한계 온도, 전자 장치 해상도 중 적어도 하나를 포함하고, 상기 제2 기기 성능 데이터는, 상기 AR 장치의 GPU 클럭(clock) 및 CPU 로드(load), 상기 AR 장치의 GPU 클럭및 GPU 로드(load), 상기 AR 장치의 디스플레이 주파수, 상기 AR 장치의 동작 온도, 상기 AR 장치의 주사율(refresh rate), 상기 AR 장치의 화면 밝기, 상기 AR 장치의 한계 온도, 네트워크 트래픽, 추적 주파수, 추적좌표, 추적 지연속도(tracking latency), 또는 추적 정확도(tracking accuracy), 추적 입력 이미지 품질(tracking input image quality), 장면 분석 결과, 장면 분석 정확도 중 적어도 하나를 포함하고, 상기 AR 사용 환경 데이터는, 상기 전자 장치의 위치 정보 및 상기 AR 장치의 위치 정보(예: GPS 기반 위치 정보, GEO IP 기반 위치 정보, 증강 현실 서비스 시의 에러 프로세스 정보, AR 앱 사용 시간, 주변 환경 정보 중적어도 하나를 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하는 동작 이후에,공개특허 10-2023-0125693-5-상기 전자 장치에서 처리 중인 상기 제1 AR 작업에 변경 복귀 조건이 발생되는 경우, 상기 제1 AR작업을 상기AR 장치에서 다시 처리하도록 재설정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서, 상기 전자 장치, 상기 AR 장치 및 AR 앱의 조합에 기반하여 현재 상황에 대응하는 AR 컨택스트를 추정하는동작; 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 추정된 AR 컨택스트에 따라 상기 기본 성능 프리셋의 구성 파라미터들의 적어도 일부를 조정하여 개인화된 성능 프리셋을 생성하는 동작; 및 상기 생성된 개인화된 성능 프리셋을 상기 증강 현실 서비스에 적용하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 기기 간 로드 밸런싱을 수행하는 동작은, 상기 개인화된 성능 프리셋을 적용하여 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서, 상기 기본 성능 프리셋을 수신하는 동작은, 상기 통신 모듈을 통해 서버 장치로 상기 전자 장치의 속성 정보, 상기 AR 장치의 속성 정보 및 AR 앱의 속성정보를 전송하고, 상기 서버 장치로부터 상기 전자 장치 및 상기 AR 장치 및 상기 AR 앱 중 적어도 하나의 조합에 맞는 기본 성능 프리셋을 수신하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서, 상기 개인화된 성능 프리셋을 생성하는 동작은, 상기 서버 장치로 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 전송하고, 상기 서버 장치로부터 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터의 조합에 맞는 개인화된 성능 프리셋을 수신하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2022-0034729", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서, 상기 개인화된 성능 프리셋을 생성하는 동작은, 상기 서버 장치와 통신하여, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터들을 성능 평가를 위한 데이터들로 분류하는 동작; 상기 분류된 데이터들을 기반으로 AR 성능 평가 요소 별 성능 평가 점수를 계산하는 동작; 상기 성능 평가 점수를 기반으로 상기 기본 성능 프리셋에 포함된 구성 파라미터 중 미세 조정이 필요한 적어도하나의 제1 파라미터를 선택하는 동작을 더 포함하고, 상기 선택된 적어도 하나의 제1 파라미터를 미세 조정하여 상기 개인화된 성능 파라미터를 생성하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는 통신 모듈 및 프로세서를 포함하고, 상기 프로세서는 상기 통신 모듈을 통해 AR(augmented reality) 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기 기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하고, 상기 기본 성능 프리셋에 기반하여 각 AR 작 업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하도록 기기 간 로드 밸 런싱을 수행하고, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발 생되는 경우, 상기 AR 장치에서 처리 중인 AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에서 전환하여 처리하도록 재설정하고, 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하도록 설정될 수 있다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "다양한 실시예들은 증강 현실 서비스 성능 최적화 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 현실 세계(real-world elements)의 이미지나 배경에 가상 이미지를 겹쳐 정보를 제공하는 증강현실(AR: augmented reality) 또는 혼합현실(MR: mixed reality) 서비스를 지원하는 전자 장치에 대한 수요가 급증하고 있다. 증강 현실 서비스를 지원하는 차세대 실감미디어 장치(이하, AR 장치)로서, 신체에 착용될 수 있는 웨어러블 전 자 장치(예: 헤드 마운티드 장치(head-mounted device), 헤드 마운티드 디스플레이(head-mounted display), 또 는 AR 글래스)가 개발되고 있다. AR 장치는 5세대(5G) 통신과 같이 대용량의 데이터 전송이 가능하도록 통신 기 술이 발전됨에 따라 관심이 높아지고 있는 추세이다. 증강 현실 서비스는 실시간 트래킹(tacking) 작업, AR 장치와 전자 장치(예: 주 장치, 컨트롤러 장치) 상의 이 미지 프로세싱(image processing) 및 렌더링(rendering)과 같이 로드가 높은 연산 작업이 요구되고 있다. 이러 한 작업들로 인해, AR 장치는 증강 현실 서비스 시 발열 및 소비 전력 증가로 인한 문제가 발생되고 있다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "증강 현실 서비스 시 발생되는 발열 또는 소비 전력 증가에 대한 문제를 해소하기 위해 AR 장치의 CPU 클럭 수 를 조절하거나 AR 장치의 디스플레이를 오프시키는 방식(이하, AR 장치 제어 방식)이 사용될 수 있다. 그러나, AR 장치 제어 방식은 AR 장치, 전자 장치, AR 앱 및 사용자의 다양한 동적 환경을 동적으로 반영하지 못하고 있다. AR 장치의 한계로 인해 AR 장치의 디스플레이가 오프될 경우, 사용자는 갑작스럽게 증강 현실 서 비스가 중단되는 경험을 겪게 될 수 있다. 또한, AR 장치 제어 방식은 AR 장치와 연결된 전자 장치(예: 주 장치, 컨트롤러 장치)와, 전자 장치에 설치된 AR 앱 성능을 고려하지 못하고 있어 전자 장치와 AR 장치 간 효율적인 자원 분배가 어려울 수 있다. 다양한 실시예들은 AR 장치와 전자 장치의 발열 및 소비 전력 이슈를 해소하고, 장치 자원들의 효율을 극대화시 킬 수 있는 최적화 방안을 제공하고자 한다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는 통신 모듈 및 프로세서를 포함하고, 상기 프로세서는 상기 통신 모듈을 통해 AR(augmented reality) 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기 기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하고, 상기 기본 성능 프리셋에 기반하여 각 AR 작 업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하도록 기기 간 로드 밸 런싱을 수행하고, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발생되는 경우, 상기 AR 장치에서 처리 중인 AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에 서 전환하여 처리하도록 재설정하고, 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하 도록 설정될 수 있다. 다양한 실시예에 따른 전자 장치의 증강 현실 서비스 최적화 방법은 AR(augmented reality) 장치와 연결하는 동 작, 상기 AR 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하는 동작, 상기 기본 성능 프리셋에 기반하여 각 AR 작업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하도록 기기 간 로드 밸런싱 을 수행하는 동작, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발생되는 경우, 상기 AR 장치에서 처리 중인 AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에 서 전환하여 처리하도록 재설정하는 동작, 및 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하 여 처리하는 동작을 포함할 수 있다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, AR 장치의 성능, 전자 장치의 성능, AR 앱 성능 및 사용자 환경에 따른 특성 분석을 통해 최적의 성능 프리셋(또는 개인화된 성능 프리셋)을 구현하고, AR 장치 및 전자 장치 간 로드 밸런싱을 통 해 성능 최적화를 수행하고, 각 장치의 자원 효율성을 증가시킬 수 있다. 다양한 실시예에 따르면, 다양한 환경에서 수집된 데이터들을 기반으로 성능 최적화 정책을 서버 장치와 협업을 통해 생성 및 관리함으로써, 장치 제조사의 제품 성능 관리 및 시장에서 발생하는 이슈에 대한 대응력을 증가시 킬 수 있다."}
{"patent_id": "10-2022-0034729", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워 크)를 통하여 외부 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일 실시예에 따르면, 전자 장치(10 1)는 서버를 통하여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서 , 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서 는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈 , 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 외부 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 외부 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스 는, 예를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드인터페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 외부 전자 장치)와 물리적으로 연결 될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커 넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 외부 전자 장치, 전자 장치, 또는 서버 ) 간의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실 시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트 워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또 는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈 에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테나 들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통 신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통 신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는104) 각각은 전자 장치(10 1)와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전 부 또는 일부는 외부의 전자 장치들(102,104, 또는108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴 퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 다양한 실시예에 따른 전자 장치의 블록도이다. 도2를 참조하면, 다양한 실시예에 따르면, 사용자에게 증강 현실(AR: augmented reality) 서비스와 관련된 영상 을 제공하는 AR 장치는 안경(glass), 고글(goggles), 헬멧 또는 모자 중 적어도 하나의 형태로 구성될 수 있으나, 이에 한정되지 않는다. 예를 들어, AR 장치는 마운티드 장치(head-mounted device, HMD), 헤드 마운티드 디스플레이(head-mounted display, HMD), 또는 AR 글래스일 수 있다. AR 장치는 전자 장치(또는 주 장치(host device), 컨트롤러 장치(controller device)) (예: 도 1의 전자 장치)와 연동하여 증강 현실 서비스를 제공할 수 있다. AR 장치는 사용자의 시야(FoV, field of view)로 판단되는 영역에 적어도 하나의 가상 객체가 겹쳐 보이도 록 출력하는 증강 현실 서비스를 제공할 수 있다. 예를 들어, 사용자의 시야로 판단되는 영역은 사용자가 AR 장 치를 통해 인지할 수 있다고 판단되는 영역으로, AR 장치의 디스플레이 모듈의 전체 또는 적어 도 일부를 포함하는 영역일 수 있다. 일 실시예에 따르면, AR 장치는 전자 장치(예: 도 1의 전자 장치)에 의해 적어도 부분적으로 제어되 며, 전자 장치(예: 도 1의 전자 장치)의 제어 하에, 적어도 하나의 기능이 수행될 수 있다. 일 실시예에 따르면, AR 장치는 통신 모듈, 프로세서, 메모리, 디스플레이 모듈, 오 디오 모듈, 센서 모듈, 카메라 모듈을 포함할 수 있다. 도면에 도시되지 않았으나, AR 장치 는 전력 관리 모듈 및 배터리를 더 포함할 수 있다. 일 실시예에 따르면, 통신 모듈(예: 무선 통신 회로)은 무선 통신 네트워크(예: 도 1의 제 1 네트워크 (예: 근거리 무선 통신 네트워크))를 통하여 전자 장치(예: 도 1의 전자 장치)와 통신을 수행하거나, 또는 원거리 무선 네트워크(예: 도 1의 제 2 네트워크)를 통하여 서버 장치와 무선 통신을 수행할 수 있다. 예를 들어, AR 장치는 전자 장치(예: 도 1의 전자 장치)와 무선 통신을 수행하여 명령어 및/또는 데이터를 서로 교환할 수 있다. 일 실시예에 따르면, 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송 (eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 통신 모듈은 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원 할 수 있다. 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍 (beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출 력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 AR 장치를 착용한 사용자가 카메라 모듈을 통해 획득한 실제 공간과 관련된 영상에 가상 객체가 덧붙여진 것으로 보여지도록 디스플레이 패널의 적어도 일부에 적어도 하나의 가상 객체를 표시할 수 있다. 어떤 실시예에 따르면, 디스플레이 모듈은 사용자의 양안 중 좌안에 대응되는 제 1 디스플레이 모듈 및/또는 우안에 대응되는 제 2 디스플레이 모듈을 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 투명 또는 반투명 디스플레이로 구성될 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 렌즈를 포함할 수 있다. 렌즈는 투명 웨이브 가이드(waveguide)를 포함하는 렌즈를 포함할 수 있다. 렌즈는 디스플레이 패널에서 출력된 광을 사용자의 눈에 전달할 수 있다. 예 를 들어, 디스플레이 패널에서 방출된 광은 렌즈를 통과하고, 렌즈 내에 형성된 웨이브 가이드(예: waveguide) 를 통해 사용자에게 전달될 수 있다. 웨이브 가이드(waveguide)는 적어도 하나의 회절 요소(예: DOE(diffractive optical element), HOE(holographic optical element)) 또는 반사 요소(예: 반사 거울) 중 적 어도 하나를 포함할 수 있다. 웨이브 가이드(waveguide)는 적어도 하나의 회절 요소 또는 반사 요소를 이용하여 광원부로부터 방출된 디스플레이 광을 사용자의 눈으로 유도할 수 있다. 사용자는 디스플레이 모듈을 투과 하여, 디스플레이의 후면의 실제 공간(또는 실제 환경)을 인지할 수 있다. 일 실시예에 따르면, 오디오 모듈은 프로세서의 제어에 기반하여, 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 예를 들어, 오디오 모듈은 스피커 및/또는 마이크로폰을 포 함할 수 있다. 일 실시예에 따르면, 센서 모듈은 AR 장치의 움직임을 감지할 수 있다. 센서 모듈은 AR 장치 의 움직임과 관련된 물리량, 예를 들면, AR 장치의 속도, 가속도, 각속도, 각가속도 또는 지리적 위 치를 감지할 수 있다. 센서 모듈은 다양한 센서를 포함할 수 있다. 예를 들어, 센서 모듈은 근접 센서, 조도 센서 , 및/또는 자이로 센서를 포함할 수 있으나, 이에 한정하는 것은 아니다. 근접 센서는 AR 장치 에 인접하는 객체를 감지할 수 있다. 조도 센서는 AR 장치 주변의 밝기 정도를 측정할 수 있다. 일 실시예에 따르면, 프로세서는 조도 센서를 사용하여 AR 장치 주변의 밝기 정도를 확인하고, 상기 밝기 정도를 기반으로 디스플레이 모듈의 밝기 관련 설정 정보를 변경할 수 있다. 자이로 센서 는 AR 장치의 자세 및 위치를 감지할 수 있다. 자이로 센서는 AR 장치 또는 AR 장치를 착 용한 사용자의 움직임을 감지할 수 있다. 일 실시예에 따르면, 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 일 예를 들어, 카메라 모듈은 제스처 카메라(gesture camera), 시선 추적 카메라(eye tracking camera), 거리 측정 카메라(depth camera), 및/또는 RGB 카메라 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 제스처 카메라는 사용자의 움직임을 감지할 수 있다. 예를 들어, 제스처 카메 라는 AR 장치에 적어도 하나 이상 배치될 수 있고, 기 설정된 거리 내에서 사용자의 손 움직임을 감 지할 수 있다. 제스처 카메라는 AR 장치의 주변 공간과 관련된 정보(예: 위치 및/또는 방향)를 인식 하기 위한 SLAM 카메라(simultaneous localization and mapping camera)를 포함할 수 있다. 시선 추적 카메라 는 사용자의 좌안 및 우안의 움직임을 추적할 수 있다. 일 실시예에 따르면, 프로세서는 시선 추적 카메라를 사용하여, 좌안의 시선 방향 및 우안의 시선 방향을 확인할 수 있다. 거리 측정 카메라는AR 장치의 전면에 위치한 객체와의 거리를 측정할 수 있다. 거리 측정 카메라는 TOF(time of flight) 카메라 및/또는 depth 카메라를 포함할 수 있다. 거리 측정 카메라는 AR 장치의 전면 방향을 촬영할 수 있고, 시선 추적 카메라는 거리 측정 카메라의 촬영 방향과 반대되는 방향을 촬영할 수 있다. RGB(red green blue) 카메라는 객체의 색상 관련 정보 및 객체와의 거리 정보를 감지할 수 있다. 일 실시예에 따르면, 카메라 모듈에 포함된 제스처 카메라, 시선 추적 카메라, 거리 측정 카메 라, 및/또는 RGB 카메라는 각각 AR 장치에 포함되거나 또는 일부는 통합된 형태의 카메라로 구 현될 수도 있다. 예를 들어, 거리 측정 카메라와 RGB 카메라는 하나의 통합된 카메라로 구현될 수 있 다. 일 실시예에 따르면, 프로세서는 메모리에 저장된 프로그램(예: 도 1의 프로그램)을 실행하여, AR 장치의 기능과 관련된 적어도 하나의 다른 구성 요소(예: 통신 모듈, 디스플레이 모듈, 오디 오 모듈, 센서 모듈, 카메라 모듈)을 제어하고, 증강 현실 서비스와 관련된 작업(예: AR 작업들)에 필요한 데이터 처리 또는 연산을 수행할 수 있다. 예를 들어, 프로세서는 계산 처리 유닛 (computation processing unit)을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 카메라 모듈)을 통해 AR 장치를 착용한 사용자의 시야에 대응 하는 실제 공간과 관련된 영상을 촬영하여 영상 정보를 획득할 수 있다. 프로세서는, AR 장치의 카메 라 모듈을 통해 획득한 실제 공간과 관련된 영상 중 사용자의 시야각(FoV)으로 판단되는 영역에 대응하는 정보를 인식할 수 있다. 프로세서는 영상 정보에 기초한 가상 정보를 기반으로 가상 객체를 생성할 수 있 다. 프로세서는 증강 현실 서비스와 관련된 가상 객체를 영상 정보와 함께 디스플레이 모듈을 통해 표시할 수 있다. 일 실시예에 따르면 프로세서는 센서 모듈을 통해 AR 장치의 움직임과 관련된 물리량(예: AR 장 치의 지리적 위치, 속도, 가속도, 각속도 및 각가속도)을 측정할 수 있고, 측정한 물리량 또는 그 조합을 이용 하여 AR 장치의 움직임 정보를 획득할 수 있다. 일 실시예에 따르면 프로세서는 AR 장치의 움직임 정보 및 영상 정보를 실시간으로 분석하여 AR작업 들 예를 들어, 헤드 추적(head tracking) 작업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업 을 처리하도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 카메라 모듈에 포함된 상기 적어도 하나의 카메라(311, 313, 315, 317)를 사용하여 획득한 정보를 기반으로 디스플레이 모듈의 설정을 적어도 부분적으로 변경함으로써, 소 모되는 전력을 관리할 수 있다. 일 실시예에 따르면, 프로세서는 증강 현실 서비스 성능과 관련된 설정 정보(또는 성능 프리셋)을 기반으 로 장치 구성(예: 디스플레이 모듈, 카메라 모듈 또는 배터리(미도시))의 성능을 조정할 수 있다. 예 를 들어, AR 장치는 다른 전자 장치(예: 도 1의 전자 장치)로부터 설정 정보(또는 성능 프리셋)을 수 신할 수 있다. AR 장치는 설정 정보를 기반으로 디스플레이 모듈(또는 카메라 모듈), 배터리(미 도시))의 설정을 적어도 부분적으로 변경(예: 디스플레이 오프(off), 해상도 변경)함으로써, 소모되는 전력을 관리할 수 있다. 도 3은 다양한 실시예에 따른 전자 장치의 증강 현실 서비스의 성능 최적화 방식을 개략적으로 도시한다. 도 3을 참조하면, 다양한 실시예에 따르면, 전자 장치는AR 장치 와 연동하여 증강 현실 서비스 를 제공할 수 있다. 일 실시예에 따르면, 전자 장치는 AR 어플리케이션(application, 이하 AR 앱)이 설치될 수 있다. AR 앱은 증강 현실 서비스를 제공하는 소프트웨어 프로그램일 수 있으나, 이에 한정하지 않는다. AR 앱은, 증강 현 실 이외에, 가상 현실(VR) 또는 혼합 현실(MR) 서비스를 제공하는 프로그램으로 대체될 수도 있다. 예를 들어, AR 앱은 AR 게임, 또는 AR 관광 가이드 앱일 수 있으나, 상술한 종류로 제한되지 않는다. 일 실시예에 따르면, 전자 장치는 AR 장치와 연결될 수 있다. 전자 장치는 AR 장치로부터 증강 현실 서비스와 관련된 정보(예: 오디오, 비디오, 실시간 AR 작업들(jobs)의 결과 정보)를 수신하고, 수신한 정보를 기반으로 AR 장치에서 출력할 가상 객체를 생성할 수 있다. 전자 장치는 가상 객체와 관련된 정보(예: 랜더링된 이미지 정보)를 AR 장치로 전송할 수 있다. AR 장치는 센서 정보 및 실제 환경을 촬영한 영상 정보를 획득하고, 이를 실시간으로 전자 장치로 전 송하거나, 영상 정보를 기반으로 획득한 AR 작업들의 결과 정보를 전자 장치로 전송 할 수 있다. 예를 들 어, AR 장치는 증강 현실 서비스를 제공하기 위한 각종 AR 작업들(예: 헤드 추적(head tracking) 작 업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업)을 수행할 수 있다. AR 장치는 전자 장치로부터 가상 객체와 관련된 정보를 수신하고, 이를 가상 객체를 카메라 영상과 함께 출력할 수 있다. 예를 들어, 전자 장치로부터 전달된 정보(예: 랜더링된 이미지 정보, 가상 객체 정 보)를 카메라 영상에 함께 출력할 수 있다. 전자 장치는 증강 현실 서비스 성능 최적화를 위해, 기기 간 로드 밸런싱(또는 기기 간 부하 분 산)을 제공하고, 상황에 따라 개인화된(또는 맞춤형) 성능 프리셋으로 조정(또는 튜닝)할 수 있다. 일 예를 들어, 전자 장치는 AR 앱 설치 시 또는 실행 시, 증강 현실 서비스와 관련된 AR 작업들의 구 성(configuration) 파라미터들 및 기기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋(performance preset)(또는 초기 성능 프리셋)을 획득할 수 있다. 기본 성능 프리셋은 AR 앱 다운로드 시 포함되어 있거나, AR 앱 서비스를 지원하는 서버 장치(미도시)로부터 수신할 수도 있다. 전자 장치는 기본 성능 프리셋에 포함된 구성(configuration) 파라미터들 및 기기 간 로드 밸런싱 정책을 기반으로 전자 장치의 구성들(예: 프로세서), AR 장치의 구성들(예: 디스플레이 모듈, 카메라 모듈, 배터리), AR작업들을 설정(또는 세팅)할 수 있다. 일 실시예에 따르면, 전자 장치는 AR 장치에서 수행될 작업들과, 전자 장치에서 수행될 작업들 을 구분하여 설정함으로써 기기 간 로드 밸런싱을 수행할 수 있다. 일 실시예에 따르면, 전자 장치는 기기 간 로드 밸런싱의 정책 조건에 기반하여 적응적으로 AR 장치 에서 수행될 AR작업들의 일부를 처리할 수 있다. 전자 장치는 AR 사용 환경에 따라 전자 장치의 로드(load)와, AR 장치의 로드(load)에 대한 균형을 조절하여 성능 최적화를 제공할 수 있다. 일 실시예에 따르면, 전자 장치는 기기 간 로드 밸런싱과 함께 개인화된 성능 프리셋으로 조정(또는 튜닝)하는 기능을 제공할 수 있다. 전자 장치는 연결된 AR 장치를 통해 증강 현실 서비스를 제공하는 동안, 성능 데이터 및 AR사용 환경 데이터를 수집할 수 있다. 전자 장치는 수집된 데이터를 분석하고, 분석 결과를 반영 하여 미리 정의된 (pre-define) 기본 성능 프리셋을 현재 사용자 및 환경에 맞는 개인화된(또는 맞춤형) 성능 프리셋으로 조정(튜 닝)하여 성능 최적화를 제공할 수 있다. 도면에 도시되지 않았으나, 어떤 실시예에 따르면, 전자 장치는 서버 장치와 연동하여 증강 현실 서비스를 지원하거나, 기기 간 로드 밸런싱 및 개인화된 성능 프리셋으로 조정하는 기능을 지원할 수도 있다. 이하, 전자 장치의 기기 간 로드 밸런싱 및 개인화된 성능 프리셋으로 조정하는 기능을 상세하게 설명하기 로 하며, 상술한 기능들은 독립적으로, 개별적으로 또는 병렬적으로 수행될 수 있으며, 서로 상호 작용하도록 구현될 수 있다. \\ 다양한 실시예에 따른 전자 장치는 통신 모듈(예: 도 1의 통신 모듈) 및 프로세서(예: 도 1의 프로세 서)를 포함하고, 상기 프로세서는 상기 통신 모듈을 통해 AR(augmented reality) 장치(예: 도 3의 AR 장치)와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기기 간 로 드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하고, 상기 기본 성능 프리셋에 기반하여 각 AR 작업의 처 리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하도록 기기 간 로드 밸런 싱을 수행하고, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건 이 발생되는 경우, 상기 AR 장치에서 처리 중인 AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전 자 장치에서 전환하여 처리하도록 재설정하고, 상기 AR 장치로부터 상기 제1 AR 작업과 관련된 데이터를 수신하여 처리하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 AR 작업들은 헤드 추적(head tracking) 작업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업 중 적어도 하 나를 포함할 수 있다. 다양한 실시예에 따른 전자 장치는 센서 모듈(예: 도 1의 센서 모듈)을 더 포함하고, 상기 프로세서 는, 상기 증강 현실 서비스를 수행하는 동안, 상기 센서 모듈들 통해 제1 기기 성능 데이터 및 AR 사용 환 경 데이터를 수집하고, 상기 AR 장치로부터 제2 기기 성능 데이터를 수신하고, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 상기 AR 작업들 중 적어도 하나에 로드 밸런싱 변경 조건이 변경되는지를 모니터링하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 제1 기기 성능 데이터는 상기 전자 장치의 GPU 클럭(clock) 및 CPU 로드 (load), 상기 전자 장치의 GPU 클럭 및 GPU 로드(load), 네트워크 타입, 상기 전자 장치와 상기 AR 장치와의 테더링 네트워크 타입, 테더링 네트워크 신호 세기, 랜더링 FPS(frame per second), 상기 전자 장치의 표면 온도, 상기 전자 장치의 한계 온도, 전자 장치 해상도 중 적어도 하나를 포함하고, 상기 제2 기기 성능 데이터는, 상기 AR 장치의 GPU 클럭(clock) 및 CPU 로드(load), 상기 AR 장치의 GPU 클럭 및 GPU 로드(load), 상기 AR 장치의 디스플레이 주파수, 상기 AR 장치의 동작 온도, 상기 AR 장치(20 1)의 주사율(refresh rate), 상기 AR 장치의 화면 밝기, 상기 AR 장치의 한계 온도, 네트워크 트래 픽, 추적 주파수, 추적 좌표, 추적 지연속도(tracking latency), 또는 추적 정확도(tracking accuracy), 추적 입력 이미지 품질(tracking input image quality), 장면 분석 결과, 장면 분석 정확도 중 적어도 하나를 포함하 고, 상기 AR 사용 환경 데이터는, 상기 전자 장치의 위치 정보 및 상기 AR 장치의 위치 정보(예: GPS 기반 위치 정보, GEO IP 기반 위치 정보, 증강 현실 서비스 시의 에러 프로세스 정보, AR 앱 사용 시간, 주변 환경 정보 중 적어도 하나를 포함할 수 있다. 다양한 실시예에 따르면 상기 프로세서는, 상기 전자 장치에서 처리 중인 상기 제1 AR 작업에 변경 복귀 조건이 발생되는 경우, 상기 제1 AR작업을 상기 AR 장치에서 다시 처리하도록 재설정할 수 있다. 다양한 실시예에 따르면 상기 프로세서는 상기 전자 장치, 상기 AR 장치, 및 AR 앱의 조합에 기 반하여 현재 상황에 대응하는 AR 컨택스트를 추정하고, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터를 기반으로 상기 추정된 AR 컨택스트에 대응하는 성능 평가를 수행하고, 상기 성 능 평가 결과에 기초하여 상기 기본 성능 프리셋의 구성 파리미터들의 적어도 일부가 조정된 개인화된 성능 프 리셋을 생성하고, 상기 생성된 개인화된 성능 프리셋을 상기 증강 현실 서비스에 적용하도록 설정될 수 있다. 다양한 실시예에 따르면 전자 장치는 상기 통신 모듈은 서버 장치와 연결되고, 상기 프로세서는, 상기 통신 모듈을 통해 상기 서버 장치로 상기 전자 장치의 속성 정보, 상기 AR 장 치의 속성 정보 및 AR 앱의 속성 정보를 전송하고, 상기 서버 장치로부터 상기 전자 장치 및 상기 AR 장치 및 상기 AR 앱 중 적어도 하나의 조합에 맞는 기본 성능 프리셋을 수신하도록 제어할 수 있다. 다양한 실시예에 따르면 상기 프로세서는 상기 서버 장치로 상기 제1 기기 성능 데이터, 상기 제2 기기 성 능 데이터 및 상기 AR 사용 환경 데이터를 전송하고, 상기 서버 장치로부터 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터의 조합에 맞는 개인화된 성능 프리셋을 수신하도록 설정될 수 있다. 다양한 실시예에 따르면 상기 프로세서는 상기 통신 모듈을 통해 상기 서버 장치와 통신하여, 상기 제1 기기 성능 데이터, 상기 제2 기기 성능 데이터 및 상기 AR 사용 환경 데이터들을 성능 평가를 위한 데이터 들로 분류하고, AR 성능 평가 요소 별 성능 평가 점수를 계산하고, 상기 성능 평가 점수를 기반으로 상기 기본 성능 프리셋에 포함된 구성 파라미터 중 미세 조정이 필요한 적어도 하나의 제1 파라미터를 선택하고, 상기 선 택된 적어도 하나의 제1 파라미터를 미세 조정하여 상기 개인화된 성능 파라미터를 생성하도록 설정될 수 있다. 도 4는 다양한 실시예에 따른 전자 장치의 증강 현실 서비스 성능 최적화 방법을 도시한다. 도 4를 참조하면, 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)의 프로세서(예: 도 1의 프로 세서)는 410 동작에서, AR 장치(예: 도2의 AR 장치)와 연결하여 증강 현실 서비스 시, 증강 현실 서 비스와 관련된 AR 작업들(jobs)의 기본 성능 프리셋(또는 초기 성능 프리셋)(예: pre-defined performance preset)을 획득할 수 있다. 기본 성능 프리셋은 AR 작업들의 구성(configuration) 파라미터들 및 기기 간 로드 밸런싱 정책을 포함할 수 있 다. 예를 들어, 기본 성능 프리셋은, 각 장치 별 CPU 구동 범위(예: 최대값, 최소값), 각 장치 별 GPU 구동 범 위(예: 최대값, 최소값), 각 장치 별 온도 한계 범위, AR 작업들의 처리 주체 정보, 처리 코어 타입, 이미지 품 질 정보, 작업 순위 정보, 작업 빈도 정보 및 작업 처리 주체 전환 조건(switching condition) 정보 중 적어도 하나를 포함할 수 있으나, 상술한 정보에 한정되지 않는다. 일 예를 들어, 기본 성능 프리셋은 증강 현실 서비스를 지원하는 서버 장치로부터 수신할 수 있으나, AR 앱 다 운로드 정보(또는 AR 앱 패키지)에 포함될 수도 있다. 일 실시예에 따르면, 전자 장치의 프로세서는 사용자의 AR 앱 실행 요청(예: AR 앱을 실행하는 입력 이벤트)에 반응하여 AR 앱을 실행하고, AR 장치(예: 도 2의 AR 장치)와 연결을 제어할 수 있다. 예를 들어, 프로세서는 통신 모듈을 통해 AR 장치를 검색하고, 검색된 AR 장치와 통신 세션(또는 무선 통 신 채널)을 형성할 수 있다. 프로세서는 통신 세션을 통해 AR 장치와 데이터를 송수신할 수 있다. 어떤 실시예에 따르면, 전자 장치는 AR 장치가 연결되면, AR 장치의 기기 속성 정보(또는, 메타 데이터)를 수신할 수 있다. 기기 속성 정보는 모델명(예: AR 장치 모델명), 타입, 식별 정보, 제조사와 같은 정보를 포함할 수 있으나, 이 에 한정되는 것은 아니다. 예를 들어, 전자 장치는 전자 장치와 연결된 AR 장치의 기기 속성 정보, 전자 장치의 기기 속성 정보(예: 전자 장치 모델명, 타입, 식별 정보), 전자 장치에 설치된 AR 앱 속성 정보(예: AR 앱 이름, 서비스 타입, 앱 종류(또는 카테고리))를 증강 현실 서비스를 지원하는 서버 장치(미도시)로 전달하고 서버 장치로부터 전자 장치, AR 장치 및 AR 앱 특성에 맞는 기본 성능 프리셋을 수신할 수도 있다. 420 동작에서, 프로세서는 AR 장치와 연동하여 각 AR 작업에 할당된 처리 주체(예: 전자 장치 또는 AR 장치)에서 AR 작업들을 분산 처리(다시 말해, 기기 간 로드 밸런싱)하여 증강 현실 서비스를 수행할 수 있다. 일 실시예에 따르면, 전자 장치 및 AR 장치는 기본 성능 프리셋에 포함된 기기 간 로드 밸런싱 정책 에 기반하여 AR 작업들이 분산 처리하도록 제어할 수 있다. 예를 들어, 작업 주체가 전자 장치(예: phone)로 정 의된 작업들(예: host job 1, host job 2…host job N)은 전자 장치로 할당되고, 작업 주체가 AR 장치 (예:hmd)로 정의된 작업들(예: AR job 1, AR job 2.. AR job N)은 AR 장치로 할당될 수 있다. 이하, 설명을 편의를 위하여 기본 성능 프리셋의 예시를 <표 1> 에 도시하였으며, 이는 예시일 뿐 이에 한정되 는 것은 아니다.표 1 { “smartphone”:” “device_name: “phone01”, “device _max_temperature_limit” 45, “max_cpu_clock”: 2500 “mib_cpu_clock”: 2000 “max_cpu_clock”: 2500 “max_cpu_clock”: 1000 “reserved_ap+core” : [ 1, 2 ] } “hmd”: { “device_name: “hmd01”, “device _max_temperature_limit” 42, “max_cpu_clock”: 1500 “mib_cpu_clock”: 1000 “max_cpu_clock”: 1500 “max_cpu_clock”: 1000 } “ar_app metatata”: { “package_ name”: “good.ar.app.apk” “tracking_latency_importance” :5 } “tracking_config”: { “head” : { “processing_unit”: “hmd01”, “processing_unit_switch_enable”: false, “tracking_freg”: 60 } “head” : { “processing_unit”: “hmd01”, “tracking_freg”: 30 “input_image_quality:” “480p” “processing_unit_switch_enable”: ture, “processing_unit_switch_condition:{ “overheat_rate_exceed”: 0.9, “ remain_battery_less_than: 0.2 } “eye” : { “processing_unit”: “hmd01”, “processing_unit_switch_enable”: false, “tracking_freg”: 0 “input_image_quality:” “240p” “scene” : { “processing_unit”: “phone01”, “processing_unit_switch_enable”: false, “tracking_freg”: 3 “input_image_quality:” “1080p” 예시된 <표 1>을 살펴보면, 증강 현실 서비스와 관련된 추적(tracking) 작업들 중 머리(head), 핸드(hand), 아 이(eye) 추적 작업은 처리 주체가 AR 장치(예: hmd01)이며, 장면 분석(또는 장면 추적)(예: scene understanding) 작업은 처리 주체가 전자 장치(예: phone 01)인 것을 확인할 수 있다. 프로세서는 기본 성능 프리셋에 할당된 처리 주체에서 AR 작업들을 처리하도록 전자 장치 및 AR 장치 를 제어할 수 있다. 430 동작에서, 프로세서는 증강 현실 서비스를 수행하는 동안(또는 AR 앱이 실행되어 AR 장치와 통신 세션 이 연결되는 동안) 기기 성능 데이터 및 AR 사용 환경 데이터를 수집할 수 있다. 일 실시예에 따르면, 기기 성능 데이터는, 제1 기기 성능 데이터 및 제2 기기 성능 데이터를 포함할 수 있다. 제1 기기 성능 데이터는 전자 장치에서 획득하는 성능 데이터로서, 예를 들어, 전자 장치의 GPU 클럭(clock) 및 CPU 로드(load), 전자 장치의 GPU 클럭 및 GPU 로드(load), 네트워크 타입, AR 장치와의 테더링 네트워크 타입, 테더링 네트워크 신호 세기, 랜더링 FPS(frame per second), 표면 온도, 한계 온도, 전자 장치 해상도 중 적어 도 하나를 포함할 수 있으나, 이에 한정되는 것은 아니다. 제2 기기 성능 데이터는 AR 장치에서 획득하는 성능 데이터로서, 예를 들어, AR 장치의 GPU 클럭(clock) 및 CPU 로드(load), AR 장치의 GPU 클럭 및 GPU 로드(load), 디스플레이 주파수, AR 장치 온도, 주사율(refresh rate), 화면 밝기, 한계 온도, 네트워크 트래픽, 추적 주파수, 추적 좌표, 추적 지연속도(tracking latency), 또는 추적 정확도(tracking accuracy), 추적 입력 이미지 품질(tracking input image quality), 장면 분석 결 과, 장면 분석 정확도 중 적어도 하나를 포함할 수 있으나, 이에 한정되는 것은 아니다. 어떤 실시예에 따르면, 제1 기기 성능 데이터 및 제2 기기 성능 데이터는 AR 작업들이 처리되는 주체가 변경됨 에 따라 가변 될 수 있다. AR 사용 환경 데이터는, 전자 장치의 위치 정보 및 AR 장치의 위치 정보(예: GPS 기반 위치 정보, GEO IP 기반 위치 정보, 전자 장치 평균 구동 온도, 증강 현실 서비스 시의 에러 프로세스 정보, AR 앱 사용 시간, 주변 환 경 정보와 같은 정보일 수 있으나, 이에 한정되지 않는다. 440동작에서, 프로세서는, 수집된 데이터를 기반으로 기기 간 로드 밸런싱 변경 조건이 발생되는 지를 확 인할 수 있다. 일 실시예에 따르면, 프로세서는 수집된 데이터를 기반으로 전자 장치와 AR 장치, AR 앱 상황을 모니터링하여 전자 장치 또는 AR 장치 자원들을 로드 상황을 판단할 수 있다. 프로세서는 기본 성능 프리셋에 포함된 작업 처리 주체 전환 조건(switching condition) 정보를 기반으로 로드 밸런싱 변환 조건 이 발생되는지를 확인할 수 있다. 일 예를 들어, <표 1>의 기본 성능 프리셋의 헤드 추적(head tracking)을 보면, 작업 처리 주체 전환 조건 (switching condition)이 설정된 온도 초과(예: “overheat_rate_exceed”: 0.9) 나, 배터리 임계값 이하(예: remain_battery_less_than: 0.2)인 것을 확인할 수 있다. 프로세서는 수집된 데이터들을 모니터링하여 헤 드 추적 작업과 관련된 전환 조건에 맞는 상황 발생 시, 로드 밸런싱 변경 조건이 발생된 것으로 결정할 수 있 다. 450 동작에서, 프로세서는 로드 밸런싱 변경 조건이 발생되는 경우, 현재 환경에 따라 실행 중인 적어도 일부 AR 작업의 처리 주체를 전환(다시 말해, 로드 재밸런싱)할 수 있다. 프로세서는 로드 밸런싱 변경 조건이 발생되지 않으면 420 동작으로 진행할 수 있다 일 실시예에 따르면, 프로세서는, 전자 장치 또는 AR 장치에서 실행 중인 AR 작업들을 현재의 로드 상황에 따라 다른 장치로 전환하도록 제어할 수 있다. 예를 들어, 프로세서는 AR 장치에서 실행중인 작업(예: AR job 1)에 처리 주체 변경 조건이 발생한 경우, AR job 1을 처리하는 코어를 AR 장치의 처리 유닛에서 전자 장치의 코어로 할당하고, AR job 1 과 관련된 주체 전환 명령을 AR 장치로 전송할 수 있다. AR 장치는 AR job 1과 관련된 데이터(예: 센 싱 정보)를 전자 장치로 전송할 수 있다. 프로세서는 할당된 코어를 통해 AR 장치로부터 수신된 AR job 1과 관련된 데이터를 처리할 수 있도록 제어할 수 있다. 일 예를 들어, <표 1>의 AR 장치가 설정된 온도 초과(예: “overheat_rate_exceed”: 0.9) 상황일 경우, 프로세서는 발열 해소를 위해 AR 장치에서 실행 중인 헤드 추적(head tracking) 작업을 전자 장치 에서 처리하도록 작업의 처리 주체를 전환시킬 수 있다. 다른 실시예에 따르면, 프로세서는 로드 밸런싱 변경 조건이 발생되는 경우 전자 장치 또는 AR 장치 에서 실행 중인 AR 작업들을 현재의 로드 상황에 따라 로드 비율을 조절하고, 로드 비율에 따라 분산 처리 (또는 로드 재밸런싱)하도록 제어할 수 있다. 예를 들어, AR 장치에서 실행중인 작업(예: AR job 2)에 로드 밸 런싱 변경 조건이 발생한 경우, 프로세서는 기기 별 로드 상황을 확인하여 AR job 2의 일부 데이터는 AR 장치에서 처리하고, AR job 2의 다른 데이터는 전자 장치에서 분산 처리하도록 제어할 수 있다. 460 동작에서, 프로세서는, 증강 현실 서비스 실행하는 동안(또는 AR 앱이 실행되는 동안), AR 작업들의 복귀 조건이 발생되는지를 확인하고, 복귀 조건이 발생되면 470 동작으로 진행하고, 복귀 조건이 발생되지 않으 면, 460 동작으로 회귀하여 복귀 조건이 발생되는지를 지속적으로 모니터링 할 수 있다. 470 동작에서, 프로세서는 AR 작업들의 복귀 조건이 발생되는 것에 반응하여 기본 성능 프리셋에 할당된 AR 작업의 처리 주체로 복귀할 수 있다. 480 동작에서 프로세서는 증강 현실 서비스 실행하는 동안(또는 AR 앱이 실행되는 동안) 성능 데이터 및 AR 사용 환경 데이터를 기반으로 성능 평가를 수행할 수 있다. 일 실시예에 따르면, 480 동작은 420 동작 내지 470 동작과 독립적으로 또는 개별적으로 수행될 수 있다. 일 실시예에 따르면, 프로세서는 수집된 데이터들을 전처리(pre-processing)하여 성능 측정에 적합한 데이 터들을 선별할 수 있다. 예를 들어, 프로세서는 수집된 데이터들(예: 제1 기기 성능 데이터, 제2 기기 성 능 데이터, AR 사용 환경 데이터)을 AR 앱 성능 평가에 적합 데이터와 부적합 데이터로 분류시킬 수 있다. 예를 들어, 프로세서는 수집된 데이터들을 타임 시리즈(time series) 데이터로 수집하고, 각 시간 대 별로 아이들(idle) 상태와 액티브(active) 상태로 레이블링한 후, 레이블링된 데이터를 지도 학습하여 러닝머신 모델 을 생성할 수 있다. 프로세서는 생성된 머신 러닝 모델을 기반으로 새로운 성능 데이터가 수집됐을 때, 새 로운 성능 데이터가 아이들(idle) 상태인지 액티브(active) 상태인지를 확인하고, 액티브(active) 상태일 때 수 집된 성능 데이터를 적합 데이터로 분류할 수 있다. 프로세서는 적합 데이터로 분류된 데이터들을 기반으 로 현재 상황에(또는 구동 환경) 맞는 AR 컨택스트(AR context)를 추정할 수 있다. AR 컨택스트(AR context)는 전자 장치, AR 장치, AR 앱의 조합에 기반하여 결정될 수 있다. 예를 들어, 스마트폰, AR 글라스 및 날씨 AR 앱의 조합에 기반한 AR 컨택스트는, AR 글라스 시야의 특정 영역에 날씨 정보를 AR 컨텐츠로 제공하는 것으로 결정될 수 있다. 이 경우, 날씨 AR 컨택스트는 추적 기능이 요구되지 않으므로, 전자 장치와 AR 장치에서 날씨 앱의 작업들과 관련된 성능 프리셋은 추적 관련 기능이 “ 최저” 성 능으로 세팅된 상태일 수 있다. 다른 예를 들어, 스마트폰, AR 글라스 및 가구 배치 AR 앱의 조합에 기반한AR 컨택스트는, AR 글라스를 통한 실 내 영상에 가상의 가구 오브젝트를 배치하는 것으로 결정될 수 있다. 가구 배치 AR 앱은 방 구조, 가구 객체에 대한 3차원 좌표 정보를 실시간으로 추적(tracking)하는 것이 중요하므로, 전자 장치와 AR 장치에서 가구 배치 AR 앱의 작업들과 관련된 성능 프리셋은 배터리 절전 성능을 낮추더라도, 추적 관련 기능이 “최대” 성능으로 세팅된 상태일 수 있다. 일 실시예에 따르면, 프로세서는 AR 컨택스트에 따라 성능 평가 요소(factors) 별로 성능 점수(score)를 계산할 수 있다. 성능 평가 요소들은 예를 들어, rendering FPS, rendered image to display latency, head tracking latency, hand tracking latency, eye tracking latency, scene understanding latency, head tracking accuracy, hand tracking accuracy, eye tracking accuracy, scene understanding accuracy, GPU load, CPU load, power consumption, temperature 중 적어도 하나를 포함할 수 있으나, 이에 한정되는 것은 아 니다. 다른 실시예에 따르면, 프로세서는 AR 컨택스트 별로 설정된 가중치(weight)를 더하여 성능 점수를 계산할 수도 있다. 예를 들어, 추적 지연속도(latency)가 중요한 AR 컨택스트로 추정된 경우 프로세서는, 추적 지 연속도와 관련된 성능 평가 요소의 가중치를 높게 설정할 수 있다. 어떤 실시예에 따르면, 가중치는 전자 장치, AR 장치, AR 앱, AR 사용 환경 정보에 따라 다른 가중치값을 가질 수 있다.490 동작에서, 프로세서는 성능 평가 결과를 기반으로, 미리 정의된 기본 성능 프리셋을 개인화된 파라미 터 프리셋으로 조정(또는 튜닝)할 수 있다. 일 실시예에 따르면, 프로세서는 현재 상황에(또는 구동 환경) 대응하는 AR 컨택스트(AR context)에 따른 성능 평가 정수를 기반으로 기본 성능 프리셋에 포함된 구성 파라미터들을 미세 조정하여 개인화된 성능 프리셋 을 생성(또는 설정)하여 적용할 수 있다. 일 예를 들어, 가구 배치 앱의 AR 컨택스트에 대응하는 기본 성능 프리셋 세팅 시, 추적 성능을 “최대” 성능 으로 세팅했을 때, 프로세서는 발열과 관련된 성능 평가 요소가 기준치보다 높아 성능이 저하되는 것으로 예상(또는 성능 점수가 설정된 값보다 낮은 점수로 계산)할 수 있다. 이 경우, 프로세서는 AR 장치에서 작 업하는 추적 기능과 관련된 구성 파라미터들을 미세 조정하여 추적 기능을 “최대” 레벨에서 “ 보통 “ 레벨 로 최적화할 수 있다. 또는 프로세서는, AR 작업에서 작업하는 추적 기능을 “ 보통” 레벨로 조정했음에도 불구하고, 성능 평가 가 낮을 경우, 추적 지연속도의 증가를 감수하더라도 추적 기능을 전자 장치에서 수행하도록 처리 주체를 변경 할 수도 있다. 예를 들어, 프로세서는 증강 현실 서비스 제공 시, 사용 지역의 날씨, 계절을 추정하고, 사용 환경이 일반 적인 온도보다 높을 경우, 미리 정의된 기본 성능 프리셋에 포함된 구성 파라미터들 중 발열 해소와 연관된 파 라미터를 조정하여 개인화된 성능 프리셋을 생성하고, 이를 적용하여 성능 최적화를 진행할 수 있다. 어떤 실시예에 따르면, 미리 정의된 기본 성능 프리셋은 상황에 따라 복수의 성능 프리셋 세트(set)로서 구현될 수 있다. 전자 장치는 복수의 성능 프리셋 세트 중 현재 상황에 맞는 성능 프리셋이 지정된 후, 지정된 성 능 프리셋에 대해 개인화 미세 조정(또는 튜닝)을 수행할 수도 있다. 도 5는 다양한 실시예에 따른 전자 장치 및 AR 장치의 기기 로드 밸런싱 동작을 설명하는 개략도이다. 도 5를 참조하면, 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)와 AR 장치(예: 도2 의 AR 장치 )와 연동하여 증강 현실 서비스 제공 시, AR 작업들에 대한 분산 처리(또는 로드 밸런싱)를 수행할 수 있 다. 전자 장치는 기본 성능 프리셋에 포함된 구성 파라미터들에 따라 전자 장치에 할당된 AR 작업들을 처 리하고, AR 장치는 AR 장치에 할당된 AR 작업들을 처리할 수 있다. 일 실시예에 따르면, <5001>에 도시된 같이, 전자 장치는 작업 주체가 전자 장치(예: phone)로 정의된 작 업들(예: host job1, host job 2… host job N)이 할당되고, AR 장치는 작업 주체가 AR 장치(예:hmd)로 정의된 작업들(예: AR job 1, AR job 2.. AR job N)이 할당될 수 있다. 전자 장치는 증강 현실 서비스 시 수집되는 기기 성능 데이터 및 AR 사용 환경 데이터를 기반으로 로드 밸 런싱 변경 조건이 발생되는 경우, AR 작업 주체들을 전환하여 전자 장치 및 AR 장치의 로드 상황에 맞는 성능 최적화를 수행할 수 있다. 일 실시예에 따르면, <5002> 에 도시된 바와 같이, AR 장치가 AR job 2을 처리하는 중 전자 장치 는, AR job 2의 로드 밸런싱 변경 조건이 발생된 경우, 530 동작과 같이, AR job 2가 전자 장 치에서 처리되도록 전환시킬 수 있다. 예를 들어, AR job 2 작업이 핸드 추적 작업이라고 가정할 경우, AR 장치는 핸드 추적에 사용되는 데 이터/자원들(예: 센싱 정보, 위치정보)을 전자 장치로 전송할 수 있다. 전자 장치는 AR job 2을 처리하기 위해 할당된 코어에서 AR 장치로부터 전달된 자원들을 기반으로 AR job 2을 처리할 수 있다. 이후, 전자 장치는 모니터링 결과, 작업 처리 복귀 조건이 발생되는 경우(예: AR job 2가 AR 장치 에서 처리 가능한 상황으로 변경되는 조건), 전자 장치에서 처리 중인 AR job 2를 535 동작과 같이, 다시 AR 장치에서 처리되도록 처리 주체를 전환시킬 수 있다. 이하, 설명에서는 전자 장치, AR 장치 및 서버 장치를 이용한 증강 현실 서비스를 설명하기로 한다. 도 6은 다양한 실시예에 따른 전자 장치, AR 장치 및 서버의 포함하는 시스템 구성을 설명하는 도면이다. 도 6을 참조하면, 다양한 실시예에 따르면, 전자 장치는 AR 장치 및 서버 장치와 연결하여 증강 현실 서비스를 제공할 수 있다. 일 실시예에 따르면, 전자 장치, AR 장치 및 서버 장치는 무선 네트워크를 통해 연결될 수 있다. 예를 들어, 전자 장치는 AR 장치와 제1 네트워크를 통해 연결되고, 서버 장치와 제2 네트 워크를 통해 연결될 수 있다. 어떤 실시예에 따르면, AR 장치는 서버 장치와 직접 연결될 수도 있다. 예를 들어, 제1 네트워크는 WiFi-P2P, Bluetooth 및 BLE(Bluetooth low energy) 중 적어도 하나의 무선 통신 방식일 수 있으나, 전술된 예에 한정되지 않는다. 일 실시예에 따르면, 전자 장치는 서버 장치로 AR 장치, 전자 장치 및 전자 장치에 설치된 AR 앱의 속성 정보를 제공할 수 있으며, 서버 장치로부터 AR 장치, 전자 장치, AR 앱 중 적어도 하나의 조합에 따른 성능 프리셋(performance preset)(또는, 작업 설정값, 파라미터 프리셋 데이터)(예: 기본 성능 프리셋)을 수신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버 장치로 증강 현실 서비스를 제공하는 동안 수집되는 기기 성 능 데이터(예: 제1 기기 성능 데이터, 제2 기기 성능 데이터) 및 AR 사용 환경 데이터를 전송하고, 서버 장치 로부터 AR 사용 환경에 맞는 개인화된 성능 프리셋을 수신하고 증강 현실 서비스에 적용할 수 있다. 이하, 증강 현실 서비스와 관련하여 AR 사용 환경에 따라 개인화된(personalized) 성능으로 증강 현실 서비스를 제공하기 위한 기능들을 중심으로 설명하기로 한다. 전자 장치는 AR 앱, 성능 최적화 서비스 모듈(예: performance optimization service module), 성능 데이터 수집 모듈(예: performance data collector) 을 포함할 수 있다. AR 장치는 AR 성능 튜 너, 계산 유닛(computation unit)(예: real time computation processing unit) 및 그래픽 프레임워 크(graphic framework) 를 포함할 수 있다. AR 성능 튜너는 전자 장치와 통신 세션(communication session)을 수립하고, 전자 장치로부터 전달된 성능 프리셋(performance preset)(다시 말해, 작업 설정값)(예: 기본 성능 프리셋)을 적용하여 증강 현 실 서비스를 실행할 수 있다. 여기서, 성능 프리셋(performance preset)은 초기 성능 프리셋(initial performance parameter preset) 또는 기본 성능 프리셋일 수 있다. AR 성능 튜너는 통신 세션이 연결된 동안, 증강 현실 서비스와 관련된 성능 데이터를 수집할 수 있다. AR 성능 튜너는 통신 세션이 유지되는 동안(또는 AR 장치에 증강 현실 서비스가 노출되는 동안,)는 FPS(frame per second), 표면 온도, GPU 부하(load), CPU 부하(load), Refresh rate, 화면 밝기, 네트워크 종류, 네트워크 트 래픽, 추적 지연속도(tracking latency), 또는 추적 정확도(tracking accuracy)와 같은 성능 데이터(예: 제2 기기 성능 데이터)를 수집할 수 있다. 일 실시예에 따르면, AR 성능 튜너는 통신 세션이 유지되는 동안 주기적으로 또는 실시간 방식으로 성능 데이터를 전자 장치로 전달할 수 있고, 통신 세션이 종료되는 경우, AR 장치의 메모리에 수집한 성능 데이 터를 기록할 수도 있다. AR 성능 튜너는 전자 장치로부터 AR 장치, 전자 장치, AR 앱 및 사용자 별로 튜닝된 개인화된 성능 프리셋(personalized performance preset)을 수신하고, 개인화된 성능 프리셋으로 적용(또는 재 설정)하여 증강 현실 서비스를 제공할 수 있다. 계산 유닛(예: real time computation processing unit)은 증강 현실 서비스 제공 시, 수행되는 AR 작업 들을 실시간으로 처리할 수 있다. AR 작업들은 예를 들어, 헤드 추적(head tracking) 작업, 핸드 추적 (hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업(미도시)을 포함할 수 있으나, 이에 한정되는 것은 아니다. 그래픽 프레임 워크(graphic framework)는 AR 장치의 카메라를 통해 수신된 영상 및 전자 장치로부터 전달 되는 가상 정보를 기반으로 랜더링된 이미지들을 표시하도록 처리할 수 있다. 일 실시예에 따르면, 전자 장치의 성능 데이터 수집 모듈, 성능 최적화 서비스 모듈은 전자 장 치의 프로세서(예: 도 1의 프로세서)의 일부 구성일 수 있다. 전자 장치의 프로세서))에 의해 성능 데이터 수집 모듈, 성능 최적화 서비스 모듈이 제어될 수 있다. 성능 데이터 수집 모듈은 증강 현실 서비스 실행하는 동안(또는 AR 앱이 실행되어 AR 장치와 통신 세션이 연결되는 동안) 기기 성능 데이터(예: 제1 기기 성능 데이터 및 제2 기기 성능 데이터) 및 AR 사용 환경 데이터를 수집하고, 성능 최적화 서비스 모듈로 전달할 수 있다. 예를 들어, 기기 성능 데이터는, 전자 장치 내에서 증강 현실 서비스와 관련되어 수집된 제1 기기 성능 데이터 및AR 장치 내에서 증강 현실 서 비스와 관련되어 수집된 제2 기기 성능 데이터를 포함할 수 있다. 성능 최적화 서비스 모듈은 전자 장치, AR 장치 및 AR 앱의 속성 정보를 서버 장치로 전달하고, 서버 장치로부터 전자 장치, AR 장치 및 AR 앱 조합에 맞는 성능 프리셋(예: 기 본 성능 프리셋)을 수신할 수 있다. 기본 성능 프리셋은 증강 현실 서비스와 관련된 AR 작업들의 구성 (configuration) 파라미터들 및 기기 간 로드 밸런싱 정책을 포함할 수 있다. 성능 최적화 서비스 모듈은 서버 장치로부터 AR 앱과 관련하여 획득한 기본 성능 프리셋을 기반으로 구성 파라미터들을 설정하고, 증강 현실 서비스 시 로드 밸런싱 정책을 적용할 수 있다. 성능 최적화 서비스 모듈은 AR 사용 환경을 모니터링하고, AR 사용 환경에 따라 로드 밸런싱 변경 조건(예: 실행 중인 적어도 일부 AR 작업의 처리 주체를 변경하는 조건)이 발생되는지를 확인하고, 변경 조건 발생 시 적어도 일부 AR 작업의 처리 주체를 전환하거나 복귀하도록 제어할 수 있다. 성능 최적화 서비스 모듈은 성능 데이터 수집 모듈로부터 전달된 기기 성능 데이터 및 AR 사용 환경 데이터를 서버 장치로 전달하고, 서버 장치로부터 현재 상황에 맞는 개인화된(또는 맞춤형) 성능 프리셋 (personalized performance preset)을 수신할 수 있다. 성능 최적화 서비스 모듈은 개인화된 성능 프리셋 을 기반으로 구성 파라미터들을 조정(또는 튜닝, 재설정)하고 증강 현실 서비스에 적용할 수 있다. 어떤 실시예에 따르면, 성능 최적화 서비스 모듈은 서버 장치()와 연결 없이, 성능 데이터 수집 모듈(63 0)로부터 전달받은 데이터들을 분석하여 성능 평가를 수행하고, 성능 평가 결과를 기반으로 기본 성능 프리셋 (basic performance parameter preset)을 개인화된 성능 프리셋(personalized performance preset)으로 미세 조정(또는 튜닝)할 수도 있다. 일 실시예에 따르면, 서버 장치는, AR 메타 데이터 크롤러(예: AR meta crawler), AR 메타데이터 DB(database), 성능 데이터 DB, 성능 분석기, 최적 파라미터 DB를 포함할 수 있다. AR 메타 데이터 크롤러는 기기들의 속성 정보 및 AR 앱의 속성 정보(또는 메타 데이터)를 수집하고, AR 메 타데이터 DB(database)에 저장할 수 있다. 예를 들어, 기기들의 속성 정보는 장치 종류, 모델명을 포함할 수 있고, AR 앱의 속성 정보는 AR 앱 타입, 이름, 분야(또는 카테고리)를 포함할 수 있으나, 상술한 정보로 한 정되지 않는다. 성능 데이터 DB 는 전자 장치로부터 전달되는 기기 성능 데이터를 저장할 수 있다. 성능 분석기는 분류 생성기 및 최적 파라미터 생성기를 포함할 수 있다. 성능 분석기는 전 자 장치로부터 수집된 데이터를 기반으로 전자 장치, AR 장치, AR 앱 및 사용자 환경 중 적어도 하나의 조 합에 따른 최적 성능 프리셋(또는 개인화된 성능 프리셋)을 생성하고, 이를 최적 파라미터 DB에 저장할 수 있다. 예를 들어, 분류 생성기는 전자 장치로부터 수집된 데이터를 성능 최적화에 적합한 데이터들로 분류 하는 모델링(예: 머신 러닝 모델)을 구현하고, 최적 파라미터 생성기는 전자 장치의 요청 신호에 응 답하여 최적 파라미터 DB에서 전자 장치의 AR 사용 상황에 맞는 성능 프리셋을 선별하여 전달할 수 있다. 도 7은 다양한 실시예에 따른 전자 장치, AR 장치 및 서버의 포함하는 시스템 구성을 설명하는 도면이다. 도7을 참조하면, 일 실시예에 따른 시스템 동작을 살펴보면, 710 동작에서, AR 장치의 AR 성능 튜너 가 주기적으로 기기 성능 데이터(예: 제2 기기 성능 데이터)를 수집하고, 기기 성능 데이터를 전자 장치의 성능 데이터 수집 모듈로 제공할 수 있다. 전자 장치의 성능 데이터 수집 모듈은, AR 장치로부터 전달된 기기 성능 데이터(예: 제2 기기 성능 데이터)를 저장하고, 전자 장치의 기기 성능 데이터(예: 제1 기기 성능 데이터)를 수집할 수 있다. 715 동작에서, 전자 장치의 성능 데이터 수집 모듈은 기기 성능 데이터를 성능 최적화 서비스 모듈 로 전달할 수 있다. 추가적으로, 성능 데이터 수집 모듈은, 증강 현실 서비스 시 AR 사용 환경 데이터를 수집하고, 이를 성능 최적화 서비스 모듈로 전달할 수도 있다. 710 및 715 동작과 독립적으로, 720 동작에서, 서버 장치는 전자 장치에 설치된 AR 앱의 속성 정보를 수집하여 AR 메타 데이터 DB에 저장할 수 있다. 725 동작에서, 서버 장치는, AR 메타 데이터 DB(67 1)에 저장된 데이터들 중 성능 최적화를 위해 전자 장치, AR 장치 및 AR 앱 특성에 맞는 데이터를 전 자 장치의 성능 최적화 서비스 모듈로 제공할 수도 있다. 730 동작에서, 전자 장치의 성능 최적화 서비스 모듈은 증강 현실 서비스 시 획득하는 기기 성능 데 이터(예: 제1 기기 성능 데이터, 제2 기기 성능 데이터) 및 AR 사용 환경 데이터를 서버 장치로 수 있다. 서버 장치는 전자 장치로부터 전달된 데이터들을 성능 데이터 DB에 저장할 수 있다. 735 동작에서, 서버 장치는 전자 장치로부터 전달된 데이터들(예: 성능 데이터 및 AR 사용 환경 데이 터)를 성능 분석기의 분류 생성기로 전달할 수 있다. 분류 생성기는 전자 장치로부터 전달된 데이터들을 학습하고 모델링하여 AR 성능 분석 및 평가에 적 합한 데이터들을 분류하기 위해 적합한 분류기(classifier)를 생성할 수 있다. 745 동작에서, 서버 장치는 생성된 분류기를 최적 파라미터 생성기 으로 제공할 수 있다. 대안적으로, 서버 장치는 740 동작에서, 최적 파라미터 생성기가 성능 분석에 적합한 분류기 (classifier)를 이미 보유하고 있는 경우, 성능 파라미터 생성 모듈이 성능 데이터를 집적 분석하여 최적 성능 파라미터를 생성할 수 있도록 최적 성능 파라미터 생성 모듈로 성능 데이터를 제공할 수도 있다. 서버 장치는 분류기 및 최적 파라미터 생성기를 통해 AR 사용 패턴을 분석하고 최적 성능 측정에 적 합한 데이터들을 분류하고, 전자 장치, AR 장치, AR 앱, 사용자 별 최적 성능 파라미터를 결정할 수 있다. 750 동작에서, 서버 장치는 전자 장치, AR 장치, AR 앱, 사용자 별 최적 성능 파라미터를 최적 파라미터 DB에 저장할 수 있다. 755 동작에서, 서버 장치는 전자 장치의 요청에 반응하여 최적 파라미터 DB 저장된 데이터들을 기반 으로 전자 장치, AR 장치, AR 앱 정보 및 AR 사용 환경 정보 중 적어도 하나의 조합에 따른 최적 성 능 프리셋 또는 개인화된(또는 맞춤형) 성능 프리셋을 전자 장치로 전달할 수 있다. 760 동작에서, 전자 장치는 성능 프리셋을 AR 장치의 성능 튜너로 전달하고, 성능 프리셋을 기반으로 AR 장치와 전자 장치에 적용할 수 있는 정책을 적용하여 증강 현실 서비스를 제공할 수 있다. 도 8a 및 8b는 다양한 실시예에 따른 전자 장치 및 서버 장치의 증강 현실 서비스 최적화 방법을 도시한다. 도 8a 및 8b를 참조하면, 일 실시예에 따르면, 전자 장치는 810 동작에서, AR 어플리케이션(application, 이하 AR 앱)이 설치될 수 있다. 전자 장치는 AR 앱 설치 시, 전자 장치와 연동하는 AR 장치와 연결하고 AR 장치의 속성 정보를 획득할 수 있다. 815 동작에서, 전자 장치의 프로세서(예: 도 1의 프로세서)는 설치된 AR 앱에 맞는 성능 프리셋(예: 기본 성능 프리셋)을 서버 장치로 요청할 수 있다. 예를 들어, 전자 장치의 프로세서는 AR 앱의 속성 정보, 전자 장치의 속성 정보, AR 장치 의 속성 정보를 서버 장치로 전달할 수 있다. 820 동작에서, 서버 장치는 전자 장치의 요청에 따라 요청받은 AR 앱에 대한 성능 프리셋이 존재하는지 여 부를 확인할 수 있다. 예를 들어, 서버 장치는 AR 장치의 종류, 전자 장치의 종류, AR 앱의 특 성을 확인하고, 이들의 조합에 의해 미리 정의된 성능 프리셋들이 존재하는지 확인할 수 있다. 825 동작에서, 서버 장치는 전자 장치, AR 장치 및 AR 앱 조합에 맞는 성능 프리셋이 존재하는 경우, 전자 장치, AR 장치 및 AR 앱 조합에 맞는 성능 프리셋을 전자 장치로 제공할 수 있다. 선택적으로, 827 동작에서, 서버 장치는 전자 장치, AR 장치 및 AR 앱 조합에 맞는 성능 프리셋 이 존재하지 않는 경우, 전자 장치 및 AR 장치의 조합에 맞는 성능 프리셋을 전자 장치로 제공 할 수 있다. 830 동작에서, 전자 장치의 프로세서는, 서버 장치로부터 전달된 성능 프리셋(예: 기본 성능 프 리셋)을 적용하여 AR 앱을 실행하고, 증강 현실 서비스를 제공할 수 있다. 이때, 전자 장치의 프로세서는 성능 프리셋에 구성 파라미터들을 기반으로 전자 장치 및 AR 장치에 설정하고, 로드 밸린싱 정책을 기반으로 기기 간 로드 밸런싱을 적용할 수 있다. 840 동작에서, 전자 장치의 프로세서는 AR 앱이 실행되는 동안, AR 장치에서 획득 가능한 제2 기기 성능 데이터를 AR 장치로부터 수신하고, 845 동작에서, 전자 장치에서 획득 가능한 제1 기기 성능 데이터 를 수집할 수 있다. 850 동작에서, 전자 장치의 프로세서는 AR 앱이 실행되는 동안, AR 사용 환경 데 이터를 수집할 수 있다. 840 동작, 845 동작 및 850 동작은 순서에 제한이 없으며, 병렬적으로 또는 독립적으로 수행할 수도 있다. 860 동작에서, 전자 장치의 프로세서는 수집된 데이터들을 기반으로 성능 평가에 필요한 데이터들로 분류할 수 있다, 일 실시예에 따르면, 전자 장치의 프로세서는 데이터들을 (pre-processing)하여 성능 측정에 적합한 데이터들을 선별할 수 있다 예를 들어, 프로세서는 수집된 데이터들을 적합 데이터와 부적합 데이터로 분 류시킬 수 있다. 예를 들어, 프로세서는 수집된 데이터들을 타임 시리즈(time series) 데이터로 수집하고, 각 시간 대 별로 아이들(idle) 상태와 액티브(active) 상태로 레이블링한 후, 레이블링된 데이터를 지도 학습하 여 러닝머신 모델을 생성할 수 있다. 프로세서는 생성된 러닝머신 모델을 기반으로 새로운 성능 데이터가 수집됐을 때, 새로운 성능 데이터가 아이들(idle) 상태인지 액티브(active) 상태인지를 확인하고, 액티브 (active) 상태일 때 수집된 성능 데이터를 적합 데이터로 분류할 수 있다. 어떤 실시예에 따르면, 전자 장치는 서버 장치로부터 데이터 분류기(classifier)와 관련된 정보를 제 공받거나 서버 장치와 협업하여 수집된 데이터들을 선별할 수 있다. 865 동작에서, 전자 장치의 프로세서는 선별된 데이터(예: 적합 데이터)를 기반으로 AR 앱 성능 평가 를 수행하고, 870 동작에서, 전자 장치의 프로세서는 AR 앱 성능 평가 점수를 획득할 수 있다. 일 예를 들어, 프로세서는 적합 데이터로 분류된 데이터들을 기반으로 현재 상황에 맞는 AR 컨택스트를 추 정할 수 있다. AR 컨택스트(AR context)는 전자 장치, AR 장치, AR 앱의 조합에 기반하여 결정될 수 있다. 프로세서는 AR 컨택스트에 따라 성능 평가 요소(factors) 별로 성능 점수(score)를 계산할 수 있다. 이때, AR 컨택스트 별로 특정 성능 평가 요소에 가중치(weight)가 설정될 수도 있다. 가중치는 전자 장치, AR 장 치, AR 앱, AR 사용 환경 정보에 따라 다른 가중치값을 가질 수 있다. 프로세서는 AR 컨택스트에 맞 게 설정된 가중치(weight)를 입력하여 성능 점수를 계산할 수도 있다. 예를 들어, AR 컨택스트에 맞게 설정된 가중치(weight)는 추적 지연속도(latency)와 관련된 가중치 (예: tracking latency related weights), 동작 속 도와 관련된 가중치(예: operating time related weights), 그래픽과 관련된 가중치(graphic related weight s)로 카테고리화 되고, AR 컨택스트 별로 각 가중치가 독립적인 값을 가질 수 있다. 예를 들어, 프로세서 는, 추적 지연속도가 중요한 AR 컨택스트인 경우, 추적 지연속도(latency)와 관련된 가중치값을 다른 카테고리 의 가중치값보다 높게 설정하여 성능 평가 점수를 계산할 수 있다. 875 동작에서, 전자 장치의 프로세서는 성능 평가 점수를 서버 장치로 전달할 수 있다. 880 동작에서, 서버 장치는 전자 장치로부터 전달된 AR 앱 성능 평가 점수가 임계값보다 높은지를 확 인할 수 있다. 885 동작에서, 서버 장치는 AR 앱 성능 평가 점수가 임계값보다 낮은 경우 전자 장치로 이전에 전달 된 성능 프리셋을 조정(또는 튜닝하여) 개인화된 성능 프리셋을 생성할 수 있다. 일 실시예에 따르면, 서버 장치는 전자 장치로부터 전달된 AR 앱 성능 평가 점수가 임계값보다 낮으면 요 청된 전자 장치의 상황에 대응하여 개인화된 성능 프리셋을 생성하기 위한 과정들을 수행할 수 있다. 개인 화된 성능 프리셋을 생성하기 위한 과정들은 도 9에서 설명하기로 한다. 887 동작에서 서버 장치는 전자 장치로 개인화된 성능 프리셋을 전달할 수 있다. 890 동작에서, 전자 장치의 프로세서는 서버 장치로부터 전달된 개인화된 성능 프리셋을 적용하 여 증강 현실 서비스에 대한 최적화를 진행할 수 있다. 도 9는 다양한 실시예에 따른 개인화된 성능 프리셋 튜닝 방법을 도시한다. 도 9를 참조하면, 일 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치) 또는 서버 장치(예: 도 6의 서버 장치)는 910동작에서, AR 앱 실행 시 기기 성능 데이터(예: 제1 기기 성능 데이터, 제2 기기 성능 데이터)및 AR 사용 환경 데이터를 획득할 수 있다. 920 동작에서, 전자 장치 또는 서버 장치는 전자 장치의 기기 성능 데이터 및 AR 사용 환경 데이터에 대한 벡터화를 수행할 수 있다. 예를 들어, Vp는 사용자 벡터를 의미할 수 있다. 전자 장치 또는 서버 장치는 기기 성능 데이터 및 AR 사용 환경 데이터 중 성능 평가 요소(factors) 를 인덱스화 할 수 있다. 성능 평가 요소들은 예를 들어, rendering FPS, rendered image to display latency, head tracking latency, hand tracking latency, eye tracking latency, scene understanding latency, head tracking accuracy, hand tracking accuracy, eye tracking accuracy, scene understanding accuracy, GPU load, CPU load, power consumption, temperature 중 적어도 하나를 포함할 수 있으나, 이에 한정되는 것은 아 니다. 930 동작에서, 전자 장치 또는 서버 장치는 사전에 미리 구현해놓은 AR 앱에 적합한 미리 정의된 AR 컨택스트들의 벡터(예: V1, V2,…. Vn)을 조회할 수 있다. 예를 들어, 전자 장치 또는 서버 장치는 AR 앱 서비스를 지원하는 서버 장치의 데이터 베이스에서 AR 컨택스트의 벡터들을 조회할 수 있다. 940 동작에서, 전자 장치 또는 서버 장치는 전자 장치에서 수집된 사용자 벡터와 조회된 벡터들을 비 교하여 유사도(similarity)를 계산할 수 있다. 일 예를 들어, 전자 장치 또는 서버 장치는 사용자 벡터와 조된 벡터들의 유사도를 계산하여 비교할 수 있다(예: similarity(Vp, V1), similarity(Vp, V2), …similarity(Vp, Vn)) 950 동작에서, 전자 장치 또는 서버 장치는 비교 결과, 가장 높은 유사도를 가진 AR 컨택스트에 대응 하여 미리 정의된 성능 프리셋(예: 기본 성능 프리셋)을 선택할 수 있다. 960 동작에서, 전자 장치 또는 서버 장치는 선택된 성능 프리셋에 기초하여, AR 사용 환경을 추정하 여 선택된 성능 프리셋의 파라미터들을 미세 조정하여 개인화된 성능 프리셋을 생성할 수 있다. 예를 들어, 전자 장치 또는 서버 장치는 AR 앱 사용 환경(또는 구동 환경)의 주변이 여름이거나 평균 온도보다 높은 온도를 가진 환경인 경우, 발열 관리 파라미터를 미세 조정하거나, AR 앱과 동시에 실행되는 다 른 프로세싱 자원들의 할당과 관련된 파라미터를 미세 조정할 수 있다. 다양한 실시예에 따른 전자 장치의 증강 현실 서비스 최적화 방법은 AR(augmented reality) 장치와 연결하 는 동작, 상기 AR 장치와 연결하여 증강 현실 서비스 제공 시에, AR 작업들과 관련된 구성 파라미터 및 기 기 간 로드 밸런싱 정책을 포함하는 기본 성능 프리셋을 수신하는 동작, 상기 기본 성능 프리셋에 기반하여 각 AR 작업의 처리 주체에 따라 상기 AR 작업들을 상기 AR 장치와 상기 전자 장치에서 분산 처리하도록 기기 간 로드 밸런싱을 수행하는 동작, 상기 AR 장치에서 처리 중인 AR 작업들 중 적어도 하나에 기기 간 로드 밸런싱 변경 조건이 발생되는 경우, 상기 AR 장치에서 처리 중인 AR 작업들 중 변경 조건이 발생된 제1 AR 작업을 상기 전자 장치에서 전환하여 처리하도록 재설정하는 동작, 및 상기 AR 장치로부터 상기 제 1 AR 작업과 관련된 데이터를 수신하여 처리하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 AR 작업들은 헤드 추적(head tracking) 작업, 핸드 추적(hand tracking) 작업, 눈 추적(eye tracking) 작업, 장면 분석(예: scene understanding) 또는 랜더링(rendering) 작업 중 적어도 하 나를 포함할 수 있다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8a 도면8b 도면9"}
{"patent_id": "10-2022-0034729", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시 예들에 따른 네트워크 환경 내의 전자 장치의 블록도를 도시한다. 도 2는 다양한 실시예에 따른 전자 장치의 블록도를 도시한다. 도 3은 다양한 실시예에 따른 전자 장치의 증강 현실 서비스의 성능 최적화 방식을 개략적으로 도시한다. 도 4는 다양한 실시예에 따른 전자 장치의 증강 현실 서비스 성능 최적화 방법을 도시한다. 도 5는 다양한 실시예에 따른 전자 장치 및 AR 장치의 기기 로드 밸런싱 동작을 설명하는 개략도이다. 도 6은 다양한 실시예에 따른 전자 장치, AR 장치 및 서버 장치를 포함하는 시스템 구성을 설명하는 도면이다. 도 7은 도 6에 도시된 전자 장치, AR 장치 및 서버 장치를 포함하는 시스템 동작을 개략적으로 설명하는 도면이 다. 도 8a 및 8b는 다양한 실시예에 따른 전자 장치 및 서버의 증강 현실 서비스 최적화 방법을 도시한다. 도 9는 다양한 실시예에 따른 개인화된 성능 프리셋 튜닝 방법을 도시한다."}
