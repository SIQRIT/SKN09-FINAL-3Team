{"patent_id": "10-2022-0035387", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0137663", "출원번호": "10-2022-0035387", "발명의 명칭": "직접 메모리 제어 통합 프로세싱 시스템 및 방법", "출원인": "한국전자통신연구원", "발명자": "김원종"}}
{"patent_id": "10-2022-0035387", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세서와 메모리가 인터커넥션 네트워크로 연결된 시스템 반도체에서의 메모리 데이터 연산기에 있어서, 일반적인 연산 작업을 수행하고, 직접 메모리 제어를 위한 정보를 제공하는 프로세서; 및 상기 인터커넥션 네트워크에 연결되고, 상기 프로세서로부터 제공된 직접 메모리 제어를 위한 정보가 제공되면,상기 프로세서의 제어를 받지 않는 상태에서 상기 직접 메모리 제어를 위한 정보에 따라 메모리에 저장된 메모리 데이터를 읽어 요구된 연산을 수행한 후 다시 메모리에 저장하는 직접 메모리 제어기 및 연산기;를 포함하는직접 메모리 제어 통합 프로세싱 시스템."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 직접 메모리 제어 통합 프로세싱 시스템에 관한 것이다. 본 발명은 프로세서와 메모리가 인터커넥션 네트워크로 연결된 시스템 반도체에서의 메모리 데이터 연산기에 있 어서, 일반적인 연산 작업을 수행하고, 직접 메모리 제어를 위한 정보를 제공하는 프로세서; 및 인터커넥션 네트 워크에 연결되고, 프로세서로부터 제공된 직접 메모리 제어를 위한 정보가 제공되면, 프로세서의 제어를 받지 않 는 상태에서 직접 메모리 제어를 위한 정보에 따라 메모리에 저장된 메모리 데이터를 읽어 요구된 연산을 수행한 후 다시 메모리에 저장하는 직접 메모리 제어기 및 연산기;를 포함한다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 직접 메모리 제어 통합 프로세싱 시스템에 관한 것으로, 더욱 상세하게는 시스템 반도체에서의 이미 지 처리나 인공지능 비전 분야와 같이 메모리 처리량이 많은 연산 및 인공지능 학습 등을 효율적으로 처리하기 위한 직접 메모리 제어 기능과 연산 기능을 동시에 구현하는 구조 및 그 방법에 관한 것이다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "기존의 시스템 반도체 구조는 대부분의 연산을 프로세서가 직접 수행함으로써 버스 구조에서의 병목 현상으로 효율적인 연산을 수행하지 못하는 문제가 있었다. 이를 개선하기 위하여 최근에 프로세스 인 메모리 (Process in Memory)라는 방법을 많이 연구하고 있으며, 일부 시제품이 개발되고 있다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 종래 문제점을 해결하기 위해 안출된 것으로, 직접 메모리 제어 기능과 연산 기능을 통합한 구조와 그 처리 방법을 개발함으로써 메모리 처리량이 많은 연산 및 인공지능 학습 등을 효율적으로 처리할 수 있는 직 접 메모리 제어 통합 프로세싱 시스템을 제공하는데 목적이 있다. 본 발명은 종래에 관련 분야 종사자가 주어진 연산을 처리하기 위해서 프로세서가 메모리로부터 데이터를 읽어 서 연산을 수행하던 것을 주요 연산에 대해서는 프로세서가 수행하지 않고 연산에 필요한 위치만을 알려주면 직 접 메모리를 액세스하여 데이터를 읽어서 연산을 수행한 후에 그 결과를 메모리에 직접 쓰도록 하는 효율적인 메모리 액세스 및 연산 방법을 제공하는 데 그 목적이 있다. 본 발명의 목적은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 또 다른 목적들은 아래의 기재로 부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른 직접 메모리 제어 통합 프로세싱 시스템은 프로세서와 메모리가 인터커넥션 네트워크로 연결된 시스템 반도체에서의 메모리 데이터 연산기에 있어서, 일반적인 연산 작업을 수행하고, 직접 메모리 제어를 위한 정보를 제공하는 프로세서; 및 상기 인터커넥션 네트워크에 연결되 고, 상기 프로세서로부터 제공된 직접 메모리 제어를 위한 정보가 제공되면, 상기 프로세서의 제어를 받지 않는 상태에서 상기 직접 메모리 제어를 위한 정보에 따라 메모리에 저장된 메모리 데이터를 읽어 요구된 연산을 수 행한 후 다시 메모리에 저장하는 직접 메모리 제어기 및 연산기;를 포함한다. 상기 직접 메모리 제어기 및 연산기는, 연산에 필요한 데이터가 저장된 메모리 정보와 메모리 데이터가 저장된 상기 메모리의 데이터의 시작 주소, 연산 결과를 저장하기 위한 메모리의 시작 주소, 메모리 데이터의 연산의 폭, 메모리 데이터의 연산의 높이 및 메모리 데이터의 연산의 종류를 상기 프로세서로부터 전달받아 저장하는 직접 메모리 제어기 및 연산기 레지스터; 연산에 필요한 제1 메모리 데이터를 메모리로부터 읽어오는 메모리 제 1 읽기 제어기; 연산에 필요한 제2 메모리 데이터를 메모리로부터 읽어오는 메모리 제2 읽기 제어기; 상기 메모 리 제1 읽기 제어기 및 상기 메모리 제2 읽기 제어기를 통해 읽어온 제1 메모리 데이터와 제2 메모리 데이터를 연산하는 연산 장치; 상기 연산 장치를 통해 연산된 결과를 메모리에 쓰는 메모리 쓰기 제어기; 및 상기 직접 메모리 제어기 및 연산기 레지스터를 확인하여 상기 연산 장치 및 제어기들을 제어하는 직접 메모리 제어기 및 연산기 제어기를 포함한다. 본 발명의 일 실시예에 따른 직접 메모리 제어 통합 프로세싱 방법은 블록 단위 연산 처리 시, 프로세서에 의해, 블록 단위 메모리 데이터가 분산되어 저장된 각 메모리의 시작 주소, 연산 폭, 연산 높이 정보를 직접 메 모리 제어기 및 연산기 레지스터에 저장하는 단계; 메모리 제1 읽기 제어기와 메모리 제2 읽기 제어기 각각이 상기 프로세서의 제어와 관계없이 상기 직접 메모리 제어기 및 연산기 레지스터를 확인하고, 각 제어기가 읽어 들일 메모리 데이터를 각각의 메모리에 접속하여 읽는 단계; 메모리 제1 읽기 제어기와 메모리 제2 읽기 제어기 를 통해 각각의 메모리에서 읽은 메모리 데이터를 버퍼 메모리에 저장하고, 연산 장치를 통해 각각의 메모리 데 이터에 대한 연산을 수행하는 단계; 및 메모리 쓰기 제어기에 의해, 연산 장치에 의해 연산이 수행된 후 그 결 과 값을 메모리에 쓰는 단계를 포함한다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따르면, 기존에 프로세서가 연산을 처리하던 것을 블록 형태의 연산에 대하여 프로세서 와 독립적으로 메모리 읽기부터 연산과 메모리 쓰기 과정을 수행함으로써 프로세서의 부하를 크게 감소시킬 수 장점이 있다. 또한 본 발명의 일 실시예에 따르면, DRAM을 주로 사용하는 시스템 반도체 구조에서 블록 영역의 메모리를 효율 적으로 다룰 수 있도록 함으로써 인터커넥션 네트워크에서의 효율도 향상시키는 효과가 있다."}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 한편, 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포 함한다. 명세서에서 사용되는 \"포함한다(comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성소자, 단계, 동작 및/또는 소자는 하나 이상의 다른 구성소자, 단계, 동작 및/또는 소자의 존재 또는 추가를 배제하지 않는다. 도 1은 본 발명에 따른 직접 메모리 제어 통합 프로세싱 시스템을 설명하기 위한 구성블록도이다. 도 1에 도시된 바와 같이, 본 발명의 일 실시예에 따른 직접 메모리 제어 통합 프로세싱 시스템은 프로세서 , 인터커넥션 네트워크, 메모리 및 직접 메모리 제어기 및 연산기를 포함한다. 프로세서는 일반적인 연산 작업을 수행하고, 직접 메모리 제어를 위한 정보를 직접 메모리 제어기 및 연산 기에 제공한다. 인터케넥션 네트워크는 상기 프로세서, 메모리 및 직접 메모리 제어기 및 연산기를 연결한 다. 여기서, 인터케넥션 네트워크는 기존의 버스(Bus) 구조, 버스 매트릭스(Bus Matrix) 및 온 칩 네트워크(On- chip network) 중 하나를 이용할 수 있다. 메모리는 복수개로 이루어지되, 연산 처리를 위한 데이터를 저장하는 메모리와 연산 처리된 결과 데이터를 저장하기 위한 메모리가 분리되어 구비될 수도 있다. 직접 메모리 제어기 및 연산기는 상기 인터커넥션 네트워크에 연결되고, 상기 프로세서로부터 제공된 직접 메모리 제어를 위한 정보가 제공되면, 상기 프로세서의 제어를 받지 않는 상태에서 상기 직접 메모리 제어를 위한 정보에 따라 메모리에 저장된 메모리 데이터를 읽어 요구된 연산을 수행한 후 다시 메 모리에 저장한다. 도 3은 도 1의 직접 메모리 제어기 및 연산기의 세부 구성을 설명하기 위한 구성 블록도이다. 도 3에 도시된 바와 같이, 상기 직접 메모리 제어기 및 연산기는 직접 메모리 제어 연산기 레지스터, 메모리 제1 읽기 제어기, 메모리 제2 읽기 제어기, 연산 장치, 메모리 쓰기 제어기 및 직 접 메모리 제어기를 포함한다. 직접 메모리 제어 연산기 레지스터는 연산에 필요한 데이터가 저장된 메모리 정보와 메모리 데이터가 저장 된 상기 메모리의 데이터의 시작 주소, 연산 결과를 저장하기 위한 메모리의 시작 주소, 메모리 데이 터의 연산의 폭, 메모리 데이터의 연산의 높이 및 메모리 데이터의 연산의 종류를 상기 프로세서로부터 전 달받아 저장한다. 메모리 제1 읽기 제어기는 연산에 필요한 제1 메모리 데이터를 메모리로부터 읽어온다. 메모리 제2 읽기 제어기는 연산에 필요한 제2 메모리 데이터를 메모리로부터 읽어온다. 연산 장치는 상기 메모리 제1 읽기 제어기 및 상기 메모리 제2 읽기 제어기를 통해 읽어온 제1 메모리 데이터와 제2 메모리 데이터를 연산한다. 메모리 쓰기 제어기는 상기 연산 장치를 통해 연산된 결과를 메모리에 쓴다. 직접 메모리 제어기는 상기 직접 메모리 제어 연산기 레지스터를 확인하여 연산 장치 및 제어기 (420, 430, 450)들의 동작을 제어한다. 본 발명의 일 실시예에 따른 블록 단위의 연산 처리 시, 블록 단위로 복수의 메모리에 저장된 메모리 데이터를 연산하는 방법에 대하여 도 x를 참조하여 설명하기로 한다. 먼저, 블록 단위 연산 처리 시, 프로세서에 의해, 블록 단위 메모리 데이터가 분산되어 저장된 각 메모리 의 시작 주소, 연산 폭, 연산 높이 정보를 직접 메모리 제어 연산기 레지스터에 저장한다(S100). 메모리 제1 읽기 제어기와 메모리 제2 읽기 제어기 각각이 상기 프로세서의 제어와 관계없이 상 기 직접 메모리 제어 연산기 레지스터를 확인하고, 각 제어기가 읽어들일 메모리 데이터를 각각의 메모리 에 접속하여 읽는다(S200). 메모리 제1 읽기 제어기와 메모리 제2 읽기 제어기를 통해 각각의 메모리에서 읽은 메모리 데이 터를 버퍼 메모리에 저장하고, 연산 장치를 통해 각각의 메모리 데이터에 대한 연산을 수행한다 (S300). 메모리 쓰기 제어기에 의해, 연산 장치에 의해 연산이 수행된 결과 값을 메모리에 쓴다(S400). 본 발명의 일 실시예에 따르면, 기존에 프로세서가 연산을 처리하던 것을 블록 형태의 연산에 대하여 프로세서 와 독립적으로 메모리 읽기부터 연산과 메모리 쓰기 과정을 수행함으로써, 프로세서의 부하를 크게 감소시킬 수 장점이 있다. 또한 본 발명의 일 실시예에 따르면, DRAM을 주로 사용하는 시스템 반도체 구조에서 블록 영역의 메모리를 효율 적으로 다룰 수 있도록 함으로써 인터커넥션 네트워크에서의 효율도 향상시키는 장점이 있다. 이상, 본 발명의 구성에 대하여 첨부 도면을 참조하여 상세히 설명하였으나, 이는 예시에 불과한 것으로서, 본"}
{"patent_id": "10-2022-0035387", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "발명이 속하는 기술분야에 통상의 지식을 가진자라면 본 발명의 기술적 사상의 범위 내에서 다양한 변형과 변경 이 가능함은 물론이다. 따라서 본 발명의 보호 범위는 전술한 실시예에 국한되어서는 아니되며 이하의 특허청구 범위의 기재에 의하여 정해져야 할 것이다."}
{"patent_id": "10-2022-0035387", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 직접 메모리 제어 통합 프로세싱 시스템을 설명하기 위한 구성 블록도. 도 2는 본 발명의 일 실시예에서 도 3은 도 1의 직접 메모리 제어기 및 연산기의 세부 구성을 설명하기 위한 구성 블록도. 도 4는 도 3의 직접 메모리 제어기 및 연산기 레지스터의 세부 구성을 설명하기 위한 구성 블록도. 도 5는 본 발명의 일 실시예에 따른 직접 메모리 제어 통합 프로세싱 방법을 설명하기 위한 순서도이다."}
