{"patent_id": "10-2024-0106684", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0036674", "출원번호": "10-2024-0106684", "발명의 명칭": "스토리지 장치 및 프로세싱 요소 사이에서 데이터를 이동하는 시스템 및 방법", "출원인": "삼성전자주식회사", "발명자": "존스, 마크 티모시"}}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "스토리지 장치에 있어서,비휘발성 스토리지 매체;컴퓨팅 장치와 통신하기 위한 제1 인터페이스;제1 메모리를 포함하는 프로세싱 요소와 데이터 통신 네트워크를 통해 통신하기 위한 제2 인터페이스; 및상기 제1 인터페이스, 상기 제2 인터페이스, 및 상기 비휘발성 스토리지 매체에 연결된 프로세싱 회로를 포함하되,상기 프로세싱 회로는,상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제1 메모리와 관련된 제1 메모리 주소를 식별하는제1 요청을 수신하고;상기 제1 요청에 기초하여, 상기 비휘발성 스토리지 매체로부터 제1 데이터를 검색하고; 그리고,상기 제1 메모리 주소에 기초하여 상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제2 인터페이스를통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하도록 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치와 통신하도록 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프로세싱 요소와의 포인트-투-포인트(point-to-point) 통신을 위해 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서,상기 데이터 통신 네트워크는 상기 제1 메모리 주소에 기초하여 상기 프로세싱 요소로 상기 제1 데이터를 전송하기 위한 스위치를 포함하는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1 항에 있어서,상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함하는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서,상기 프로세싱 회로는 상기 제1 메모리 주소와 관련된 조건을 식별하는 것에 기초하여 상기 프로세싱 요소에 상기 제1 데이터를 전송하도록 더 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2025-0036674-3-제1 항에 있어서,제2 메모리를 더 포함하고,상기 프로세싱 회로는,상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 제2 요청을 수신하고;처리된 제2 데이터를 생성하기 위한 상기 제2 요청에 기초하여 제2 데이터를 처리하고;상기 처리된 제2 데이터를 상기 제2 메모리에 저장하고;상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제2 메모리와 관련된 제2 메모리 주소를 식별하는제3 요청을 수신하고; 그리고,상기 제2 메모리 주소에 기초하여 상기 제1 메모리에 상기 제2 데이터를 저장하기 위해, 상기 처리된 제2 데이터를 상기 제2 인터페이스를 통해, 상기 프로세싱 요소에 전송하도록 더 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "스토리지 장치에 있어서,비휘발성 스토리지 매체;메모리;컴퓨팅 장치와 통신하기 위한 제1 인터페이스;프로세싱 요소와 데이터 통신 네트워크를 통해 통신하기 위한 제2 인터페이스; 및상기 제1 인터페이스, 상기 제2 인터페이스, 상기 비휘발성 스토리지 매체, 및 상기 메모리에 연결된 프로세싱회로를 포함하되,상기 프로세싱 회로는,상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 메모리와 관련된 메모리 주소를 식별하는 제1 요청을 수신하고;상기 제1 요청에 기초하여, 상기 비휘발성 메모리 스토리지 매체로부터 데이터를 검색하고, 상기 메모리 주소에기초하여 상기 데이터를 상기 메모리에 저장하고;상기 제2 인터페이스를 통해, 상기 데이터를 저장하는 상기 메모리 주소를 식별하는 제2 요청을 수신하고; 그리고,상기 제2 요청에 기초하여, 상기 메모리에서 상기 데이터를 검색하고, 상기 데이터 통신 네트워크를 통해, 상기프로세싱 요소에 상기 데이터를 전송하도록 구성된 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8 항에 있어서,상기 메모리는 상기 제2 인터페이스를 통해, 상기 데이터 통신 네트워크에 노출되는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8 항에 있어서,상기 제1 요청은 제1 읽기 요청이고, 상기 제2 요청은 제2 읽기 요청인 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8 항에 있어서,상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치와 통신하도록 구성되는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "공개특허 10-2025-0036674-4-제8 항에 있어서,상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프로세싱 요소와의 포인트-투-포인트(point-to-point) 통신을 위해 구성되는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12 항에 있어서,상기 데이터 통신 네트워크는 상기 메모리 주소에 기초하여, 상기 프로세싱 요소에 상기 데이터를 전송하기 위한 스위치를 포함하는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8 항에 있어서,상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함하는 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제8 항에 있어서,상기 프로세싱 회로는 상기 컴퓨팅 장치로부터 상기 프로세싱 회로에 의해 수신된 제3 요청에 응답하여, 상기제2 요청을 전송하도록 구성되고,상기 제3 요청은 상기 데이터를 사용하여 연산을 수행하기 위한 것인 스토리지 장치."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "스토리지 장치의 제1 인터페이스를 통해, 컴퓨팅 장치로부터 프로세싱 요소의 제1 메모리와 관련된 제1 메모리주소를 식별하는 제1 요청을 수신하는 단계;상기 제1 요청에 기초하여, 상기 스토리지 장치의 비휘발성 스토리지 매체로부터 제1 데이터를 검색하는 단계;및상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제1 메모리 주소에 기초하여, 상기 스토리지 장치의제2 인터페이스를 통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하는 단계를 포함하는 방법."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16 항에 있어서,상기 제1 인터페이스는 데이터 통신 버스를 통해, 상기 컴퓨팅 장치와 통신하는 방법."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16 항에 있어서,상기 제2 인터페이스는 데이터 통신 버스를 통해, 상기 컴퓨팅 장치와 통신하는 방법."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제16 항에 있어서,상기 제1 메모리 주소와 관련된 조건을 식별하는 것에 기초하여, 상기 프로세싱 요소에 상기 제1 데이터를 전송하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2024-0106684", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제16 항에 있어서,상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 제2 요청을 수신하는 단계;처리된 제2 데이터를 생성하기 위한 상기 제2 요청에 기초하여, 제2 데이터를 처리하는 단계;공개특허 10-2025-0036674-5-상기 처리된 제2 데이터를 상기 스토리지 장치의 제2 메모리에 저장하는 단계;상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제2 메모리와 관련된 제2 메모리 주소를 식별하는제3 요청을 수신하는 단계; 및상기 제2 데이터를 상기 제1 메모리에 저장하기 위해, 상기 제2 메모리 주소에 기초하여, 상기 처리된 제2 데이터를 상기 제2 인터페이스를 통해 상기 프로세싱 요소에 전송하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "스토리지 장치 및 프로세싱 요소 사이에 데이터를 이동하기 위한 시스템 및 방법이 개시된다. 스토리지 장치는: 비휘발성 스토리지 매체; 컴퓨팅 장치와 통신하기 위한 제1 인터페이스; 및 데이터 통신 네트워크를 통해 프로세 싱 요소와 통신하기 위한 제2 인터페이스를 포함할 수 있다. 프로세싱 요소는: 제1 인터페이스를 통해 컴퓨팅 장 치로부터 제1 메모리와 관련된 제1 메모리 주소를 식별하는 제1 요청을 수신하고, 제1 요청에 기초하여 비휘발성 스토리지 매체로부터 제1 데이터를 검색하고; 제1 메모리 주소에 기초하여 제1 데이터를 제1 메모리에 저장하기 위해, 제2 인터페이스를 통해 제1 데이터를 프로세싱 요소로 전송하도록 구성되는 처리 회로를 포함할 수 있다."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명에 따른 실시예들의 하나 또는 그 이상의 양상들은 스토리지 장치에 관련된 것이다. 보다 상세하게는 스 토리지 장치 및 프로세싱 요소 사이에서 데이터를 이동하는 것과 관련된다."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "지난 몇 년 동안 인공지능(AI)의 사용은 급격히 증가했다. 이미지 분류, 음성 인식, 미디어 분석, 건강 관리, 자율 머신, 스마트 비서 등의 분야에서 AI가 일반적으로 사용되고 있다. AI를 사용하려면 대용량 데이터 세트와 고급 알고리즘을 사용해야 하는 경우가 많으며, 마찬가지로 효율적이고 비용 효율적인 데이터 처리 솔루션이 필 요하다. 발명의 배경이 되는 기술 항목에 개시된 이상의 정보는 본 발명의 배경에 대한 이해를 돕기 위한 것일 뿐, 선행 기술을 구성하지 않는 정보를 포함할 수도 있다."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 스토리지 장치 및 프로세싱 요소 사이에서 데이터를 이동하는 시스템 및 방법을 제공하는 데 에 있다."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 하나 또는 이상의 실시예들은 다음을 포함하는 스토리지 장치에 관한 것이다. 스토리지 장치는: 비휘 발성 스토리지 매체; 컴퓨팅 장치와 통신하기 위한 제1 인터페이스; 제1 메모리를 포함하는 프로세싱 요소와 데 이터 통신 네트워크를 통해 통신하기 위한 제2 인터페이스; 및 상기 제1 인터페이스, 상기 제2 인터페이스, 및 상기 비휘발성 스토리지 매체에 연결된 프로세싱 회로를 포함하되, 상기 프로세싱 회로는, 상기 제1 인터페이스 를 통해, 상기 컴퓨팅 장치로부터 상기 제1 메모리와 관련된 제1 메모리 주소를 식별하는 제1 요청을 수신하고; 상기 제1 요청에 기초하여, 상기 비휘발성 스토리지 메체로부터 제1 데이터를 검색하고; 그리고, 상기 제1 메모 리 주소에 기초하여 상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제2 인터페이스를 통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하도록 구성된다. 일부 실시예들에서, 상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치와 통신하도록 구성된다. 일부 실시예들에서, 상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프로세싱 요소와의 포인트 -투-포인트(point-to-point) 통신을 위해 구성된다. 일부 실시예들에서, 상기 데이터 통신 네트워크는 상기 제1 메모리 주소에 기초하여 상기 프로세싱 요소로 상 기 제1 데이터를 전송하기 위한 스위치를 포함한다. 일부 실시예들에서, 상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함한다. 일부 실시예들에서, 상기 프로세싱 회로는 상기 제1 메모리 주소와 관련된 조건을 식별하는 것에 기초하여 상 기 프로세싱 요소에 상기 제1 데이터를 전송하도록 더 구성된다. 일부 실시예들에서, 상기 스토리지 장치는 제2 메모리를 더 포함하고, 상기 프로세싱 회로는, 상기 제1 인터페 이스를 통해, 상기 컴퓨팅 장치로부터 제2 요청을 수신하고; 처리된 제2 데이터를 생성하기 위한 상기 제2 요청 에 기초하여 제2 데이터를 처리하고; 상기 처리된 제2 데이터를 상기 제2 메모리에 저장하고; 상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제2 메모리와 관련된 제2 메모리 주소를 식별하는 제3 요청을 수신 하고; 그리고, 상기 제2 메모리 주소에 기초하여 상기 제1 메모리에 상기 제2데이터를 저장하기 위해, 상기 처 리된 제2 데이터를 상기 제2 인터페이스를 통해, 상기 프로세싱 요소에 전송하도록 더 구성된다. 본 발명의 하나 또는 이상의 실시예들은 다음을 포함하는 스토리지 장치에 관한 것이다. 스토리지 장치는: 비 휘발성 스토리지 매체; 메모리; 컴퓨팅 장치와 통신하기 위한 제1 인터페이스; 프로세싱 요소와 데이터 통신 네 트워크를 통해 통신하기 위한 제2 인터페이스; 및 상기 제1 인터페이스, 상기 제2 인터페이스, 상기 비휘발성 스토리지 매체, 및 상기 메모리에 연결된 프로세싱 회로를 포함하되, 상기 프로세싱 회로는, 상기 제1 인터페이 스를 통해, 상기 컴퓨팅 장치로부터 상기 메모리와 관련된 메모리 주소를 식별하는 제1 요청을 수신하고; 상기 제1 요청에 기초하여, 상기 비휘발성 메모리 장치로부터 데이터를 검색하고, 상기 메모리 주소에 기초하여 상기 데이터를 상기 메모리에 저장하고; 상기 제2 인터페이스를 통해, 상기 데이터를 저장하는 상기 메모리 주소를 식별하는 제2 요청을 수신하고; 그리고, 상기 제2 요청에 기초하여, 상기 메모리에서 상기 데이터를 검색하고, 상기 데이터 통신 네트워크를 통해, 상기 프로세싱 요소에 상기 데이터를 전송하도록 구성된다. 일부 실시예들에서, 상기 메모리는 상기 제2 인터페이스를 통해, 상기 데이터 커뮤니케이션 네트워크에 노출된 다. 일부 실시예들에서, 상기 제1 요청은 제1 읽기 요청이고, 상기 제2 요청은 제2 읽기 요청이다. 일부 실시예들에서, 상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치와 통신하도록 구성된다. 일부 실시예들에서, 상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프로세싱 요소와의 포인트 -투-포인트(point-to-point) 통신을 위해 구성된다. 일부 실시예들에서, 상기 데이터 통신 네트워크는 상기 메모리 주소에 기초하여, 상기 프로세싱 요소에 상기 데이터를 전송하기 위한 스위치를 포함한다. 일부 실시예들에서, 상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함한다. 일부 실시예들에서, 상기 프로세싱 회로는 상기 컴퓨팅 장치로부터 상기 프로세싱 회로에 의해 수신된 제3 요 청에 응답하여, 상기 제2 요청을 전송하도록 구성되고, 상기 제3 요청은 상기 데이터를 사용하여 연산을 수행하 기 위한 것이다. 본 발명의 하나 또는 이상의 실시예들은 다음을 포함하는 방법에 관한 것이다. 방법은: 스토리지 장치의 제1 인 터페이스를 통해, 컴퓨팅 장치로부터 프로세싱 요소의 제1 메모리와 관련된 제1 메모리 주소를 식별하는 제1 요 청을 수신하는 단계; 상기 제1 요청에 기초하여, 상기 스토리지 장치의 비휘발성 스토리지 매체로부터 제1 데이 터를 검색하는 단계; 및 상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제1 메모리 주소에 기초하 여, 상기 스토리지 장치의 제2 인터페이스를 통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하는 단계를 포함한다. 본 발명의 실시예의 이러한 특징, 양상 및 장점은 이하의 상세한 설명, 첨부된 청구범위 및 첨부된 도면과 관련 하여 고려될 때 더욱 완전하게 이해될 것이다. 물론, 본 발명의 실제 범위는 첨부된 청구범위에 의해 정의된다."}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 향상된 성능을 갖는 스토리지 장치 및 프로세싱 요소 사이에서 데이터를 이동하는 시스템 및 방법이 제공된다"}
{"patent_id": "10-2024-0106684", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 실시예들을 보다 상세히 설명할 것이며, 여기서 동일한 참조 번호는 전체적으로 동일한 요소를 지칭한다. 그러나, 본 발명은 다양한 다른 형태로 구현될 수 있으며, 본 명세서에 예시된 실시예 들로만 한정되는 것으로 해석되어서는 안 된다. 오히려, 이러한 실시예들은 본 발명이 철저하고 완전하며 당업 자에게 본 발명의 측면과 특징을 완전히 전달할 수 있도록 예시로서 제공된다. 따라서, 본 발명의 양상 및 특징 을 완전히 이해하기 위해 당업자에게 필요하지 않은 프로세스들, 요소들 및 기술들은 설명되지 않을 수 있다. 별도의 언급이 없는 한, 첨부된 도면 및 작성된 설명 전체에서 참조 부호는 동일한 요소를 나타내며, 따라서 이 에 대한 설명은 반복되지 않을 수 있다. 또한, 도면에서 요소들, 레이어들 및 영역들의 상대적인 크기는 명확성 을 위해 과장 및/또는 단순화될 수 있다. 본 발명의 실시예들은 블록도들 및 흐름도들을 참조하여 아래에 설명된다. 따라서, 블록 다이어그램 및 흐름도 의 각 블록은 컴퓨터 프로그램 제품, 완전한 하드웨어적인 실시예, 하드웨어 및 컴퓨터 프로그램 제품의 조합, 및/또는 실행을 위해 컴퓨터 판독 가능한 스토리지 매체(computer-readable storage medium) 상에서 명령어, 동작, 단계, 및/또는 유사한 단어(예를 들어, 실행 가능한 명령어들, 실행을 위한 명령어들, 프로그램 코드 등)를 상호 교환적으로 사용하는 장치, 시스템, 컴퓨팅 장치, 컴퓨팅 개체 등의 형태로 구현될 수 있음을 이해 해야 한다. 일부 실시예들에서, 검색, 로딩 및/또는 실행은 다수의 명령어가 함께 검색, 로드 및/또는 실행되도 록 병렬로 수행될 수 있다. 따라서, 이러한 실시예들은 블록도들 및 흐름도들에 명시된 단계 또는 동작을 수행 하는 특별히 구성된 기계를 생성할 수 있다. 따라서, 블록도들 및 흐름도들은 지정된 명령들, 동작 또는 단계를 수행하기 위한 실시예의 다양한 조합을 지원한다. 머신 러닝(machine learning; ML) 시스템은 스토리지 장치와 하나 이상의 프로세싱 장치들 간에 대량의 데이터 를 이동할 수 있다. 데이터는 입력 벡터, 가중치 벡터 및/또는 다른 ML 데이터를 포함할 수 있다. 프로세싱 장 치는 예를 들어 GPU 네트워크의 그래픽 처리 장치(graphic processing unit; GPU)일 수 있다. 그러나 호스트 중앙 처리 장치(central processing unit; CPU)를 사용하여 ML 데이터를 GPU로 이동하면 CPU 메모리를 중간 홉 (hop)으로 사용하기 때문에 지연 시간이 발생할 수 있다. 예를 들어, 호스트 CPU는 데이터를 GPU로 전송하기 전 에 스토리지 장치에서 ML 데이터를 검색하여 CPU 메모리에 데이터를 저장해야 할 수 있다. 다른 메커니즘들은 PCIe(Peripheral Component Interconnect Express) 인터페이스를 통해 피어 투 피어(peer- to-peer; P2P) 방식으로 ML 데이터를 GPU 로 전송할 수 있다. 그러나, PCIe를 사용하는 P2P 솔루션은 일부 상황 이나 일부 장치에서는 작동하지 않을 수 있다. 예를 들어, 일부 PCIe 스위치는 P2P 또는 스위치 간 P2P(두 장치 가 동일한 스위치에 연결된 경우)를 지원하지 않을 수 있다. 스위치 간 P2P를 지원하는 PCIe 스위치들도 호스트 의 칩셋(예컨대, 루트 콤플렉스)을 통과하는 데이터의 요구 사항으로 인해 성능이 제한될 수 있다. 일반적으로, 본 발명의 실시예들은 스토리지 장치에 저장된 데이터를 하나 이상의 프로세싱 요소들(예를 들어, 하나 이상의 GPU들)로 효율적으로 이동시키기 위한 시스템 및 방법에 관한 것이다. 다양한 실시예들이 예시적인 프로세싱 요소로서 GPU를 사용하지만, 실시예들은 이에 제한되지 않으며, 예를 들어 텐서 프로세싱 유닛(tensor processing unit), 코=프로세서(co-processor) 등과 같이 프로세싱 작업(task)을 효율적으로 처리할 수 있는 다른 프로세싱 요소로 확장될 수 있다. 일부 실시예들에서, 프로세싱 요소들은, 예를 들어, 엔비디아의 NV링크 메시 네트워크와 같은 데이터 통신 네트 워크를 통해 서로 상호 연결되지만, 실시예들이 이에 제한되지는 않는다. 데이터 통신 네트워크는 프로세싱 요 소들이 하나의 프로세싱 요소가 비계층적 방식으로 다른 프로세싱 요소와 연결될 수 있는 포인트-투-포인트 (point-to-point) 연결을 사용하여 통신할 수 있도록 하여, 프로세싱 요소가 단일 노드를 통해 정보를 라우팅하 는 대신 다른 프로세싱 요소로 정보를 전달할 수 있도록 할 수 있다(예를 들어, 물리적 브리지를 통해). 일부 실시예들에서, 프로세싱 요소들에 제공될 데이터를 저장하는 스토리지 장치는, 스토리지 장치와 네트워크 내의 프로세싱 요소들 사이에서 데이터를 이동하기 위해, 프로세싱 요소들의 네트워크에 대한 네트워크 인터페 이스를 더 포함한다. 또한, 스토리지 장치는 호스트(예를 들어, PCIe를 통해)로부터 직접 메모리 액세스(DMA) 입/출력(I/O) 명령 및 기타 관리 명령을 수신하고 명령에 대한 응답으로 데이터를 제공하기 위한 호스트 컴퓨팅 디바이스에 대한 호스트 인터페이스를 더 포함한다. 일부 실시예들에서, 호스트 컴퓨팅 장치는 호스트 인터페이스를 통해 스토리지 장치에 I/O(예를 들어, 읽기 또 는 쓰기) 커맨드를 전송한다. 읽기 커맨드를 사용하는 예시의 경우, 커맨드는 데이터의 출력이 저장될 프로세싱 요소의 타겟 메모리 주소를 식별할 수 있다. 스토리지 장치는 요청된 데이터를 검색하고 네트워크 인터페이스를 통해 프로세싱 요소로 데이터를 전송할 수 있다. 이와 관련하여, 스토리지 장치는 타겟 메모리 주소를 프로세싱 요소의 네트워크와 관련된 주소로 식별할 수 있다. 따라서, 일반적인 DMA 프로세스에서와 같이 요청된 데이터를 호스트 컴퓨팅 장치로 반환하고, 호스트 컴퓨팅 장치가 데이터를 프로세싱 요소로 전달하는 대신, 스토리지 장 치는 호스트 컴퓨팅 장치를 우회하여 데이터 통신 네트워크를 통해 데이터를 프로세싱 요소로 전송할 수 있다. 일부 실시예들에서, 스토리지 장치는 네트워크 인터페이스를 통해 프로세싱 네트워크에 메모리의 적어도 일부를 노출한다. 이와 관련하여, 호스트 인터페이스로부터의 입출력 커맨드가 처리될 수 있고, 스토리지 장치의 노출 된 메모리는 입출력 커맨드의 결과를 저장하는 데 사용될 수 있다. 프로세싱 요소는 메모리에 액세스하여 저장 된 데이터를 읽고 데이터를 사용하여 연산을 수행할 수 있다. 도 1은 본 발명의 하나 이상의 실시예들에 따른 컴퓨팅 환경의 블록도를 도시한다. 컴퓨팅 환경은 하나 이상의 데이터 통신 링크들(호스트 링크라고 지칭됨)을 통해 스토리지 장치 및 하나 이상의 프로세싱 요소들 (110a, 110b)(통칭하여 110으로 지칭됨)에 연결된 호스트 컴퓨팅 디바이스(\"호스트\")를 포함한다(도 1 참 조). 일부 실시예들에서, 호스트 링크는 호스트와 스토리지 장치 또는 프로세싱 요소들 사 이의 통신을 용이하게 할 수 있다(예를 들어, 커넥터 및 프로토콜을 사용하여). 일부 실시예들에서, 호스트 링 크는 호스트와 스토리지 장치 사이의 스토리지 요청 및 응답의 교환을 용이하게 할 수 있다. 일 부 실시예들에서, 호스트 링크는 호스트와 스토리지 장치 또는 프로세싱 요소들 사이의 구 성 및/또는 관리 커맨드들의 데이터 전송을 용이하게 할 수 있다. 다양한 실시예들에서, 호스트 링크는(예 를 들어, 커넥터 및 그 프로토콜)는 CXL(Compute Express Link), CCIX(Cache Coherent Interconnect for Accelerators), SCSI(Small Computer System Interface), SCSI(Small Computer System Interface), NVMe(Non Volatile Memory Express), PCIe(Peripheral Component Interconnect Express), 이더넷을 통한 RDMA(Remote Direct Memory Access), SATA(Serial Advanced Technology Attachment), 파이버 채널, SAS(Serial Attached SCSI)), NVMe-oF(NVMe over Fabric) 등을 포함하거나 이에 부합할 수 있을 수 있다. 다른 실시예들에서, 호스 트 링크(예컨대, 커넥터 및 그 프로토콜)는 다음을 포함할 수 있다. 다른 실시예들에서, 호스트 링크 (예를 들어, 커넥터 및 그 프로토콜)는 예를 들어 이더넷, USB(Universal Serial Bus) 및/또는 USB(Universal Serial Bus)와 같은 다양한 범용 인터페이스를 포함할 수 있다(또는 따를 수 있다). 호스트는 프로세서 및 메모리를 포함할 수 있다. 프로세서는 예를 들어 호스트의 중 앙 처리 장치(CPU) 코어와 같은 범용 프로세서일 수 있다. 메모리는 예를 들어, RAM(Random Access Memory)(예를 들어, DRAM(Dynamic Random-Access Memory)), ROM(Read-Only Memory) 등)을 포함할 수 있다. 프로세서는 메모리에 저장된 명령어에 기초하여 하나 이상의 애플리케이션들을 실행하도록 구성 될 수 있다. 애플리케이션은 요청(예를 들어, 데이터 액세스 요청, 프로그램 실행 요청 등)을 프로세싱 요 소들 및/또는 스토리지 장치로 전송하도록 구성된 임의의 애플리케이션일 수 있다. 예를 들어, 애플 리케이션은 빅 데이터 분석 애플리케이션, 전자 상거래 애플리케이션, 데이터베이스 애플리케이션, 머신러닝(ML) 애플리케이션 및/또는 이와 같은 애플리케이션일 수 있다. 일부 실시예에서, 애플리케이션은 프로세싱 요소들에 의해 처리되는 것이 바람직한 하나 이상의 동작 들을 포함할 수 있다. 예를 들어, 동작은 스토리지 장치에 저장된 데이터에 기초하여 연산을 수행하는 것 일 수 있다. 연산은 많은 양의 메모리 및/또는 컴퓨팅 리소스를 필요로 할 수 있다. 프로세싱 요소들가 호 스트를 대신하여 연산을 수행하도록 하는 것이 바람직할 수 있는데, 이는 프로세싱 요소들이 호스트 보다 더 효율적으로 연산을 수행하도록 구비될 수 있기 때문이다. 애플리케이션은 프로세싱 요소들 에 의해 수행될 연산을 제어할 수 있다. 선택된 프로세싱 요소들은 요청된 연산을 수행하고, 연산 결 과를 애플리케이션으로 전송할 수 있다. 애플리케이션은 연산 결과를 사용하여 출력을 생성할 수 있 다. 일부 실시예들에서, 프로세싱 요소들은 데이터 통신 네트워크를 통해 서로 연결된다. 일부 실시예들 에서, 데이터 통신 네트워크는 예를 들어, NVIDIA의 NVLink 메시 네트워크와 같은 메시 네트워크를 포함하 지만, 본 발명은 이에 국한되지 않는다. 예를 들어, 데이터 통신 네트워크는 셀룰러 네트워크, WAN(Wide Area Network) 및/또는 LAN(Local Area Network)을 포함하지만 이에 제한되지 않는 하나 이상의 다른 네트워크 들을 포함할 수 있다 일부 실시예들에서, 프로세싱 요소들 중 하나 이상은 GPU를 포함하지만, 실시예는 이에 제한되지 않는다. 예를 들어, 프로세싱 요소들은 하나 이상의 텐서 프로세싱 유닛, 코-프로세서(co-processor), 이들의 조합 등을 포함할 수 있다. 일부 실시예들에서, 프로세싱 요소들은 프로세싱 작업(예를 들어, 연산)과 관련된 데이터를 수신한다. 프로세싱 요소들은 프로세싱 회로 및 프로세싱 요소의 관련된 메모리를 통해 데이터를 처리하고 처리 결과를 호스트, 스토리지 장치 및/또는 다른 프로세싱 요소에 반환할 수 있다. 결과가 다른 프로세싱 요소로 반환되어야 하는 경우(예를 들어, 추가 연산을 수행하기 위해), 데이터 통신 네트워크는 소스 프로세싱 요소로부터 타겟 프로세싱 요소로 결과를 전송할 수 있다(예를 들어, 호스 트 프로세서를 우회하여). 일부 실시예들에서, 스토리지 장치는 예를 들어, SSD와 같은 보조 메모리 디바이스이다. 일부 실시예들에 서, 스토리지 장치는 연산 스토리지 장치(예를 들어, 임베디드 프로세서 또는 FPGA(Field Programmable Gate Array)가 있는 SSD)로 구현된다. 그러나, 본 발명이 이에 한정되는 것은 아니며, 다른 실시예들에서, 스토 리지 장치는 예를 들어, 자기 저장 장치(예를 들어, 하드 디스크 드라이브(HDD) 등), 광 저장 장치(예를 들어, 블루레이 디스크 드라이브, 컴팩트 디스크(CD) 드라이브, 디지털 다목적 디스크(DVD) 드라이브 등), 다른 종류의 플래시 메모리 장치(예를 들어, USB 플래시 드라이브 등) 및/또는 이와 같은 임의의 적합한 스토리지 장 치를 포함할 수 있다(또는 포함될 수 있다). 다양한 실시예에서, 스토리지 장치는 대형 폼 팩터 표준(예컨 대, 3.5인치 하드 드라이브 폼 팩터), 소형 폼 팩터 표준(예컨대, 2.5인치 하드 드라이브 폼 팩터), M.2 폼 팩 터, E1.S 폼 팩터, 및/또는 이와 같은 것을 따를 수 있다. 다른 실시예들에서, 스토리지 장치는 이러한 폼 팩터의 임의의 적합하거나 바람직한 파생물에 따를 수 있다. 일부 실시예들에서, 스토리지 장치는 연산을 수행하기 위해 프로세싱 요소들에 의해 사용되는 데이터 를 저장한다. ML 애플리케이션을 예로 들면, 스토리지 장치는 ML 파라미터, 훈련/검증 데이터 등을 저장할 수 있다. 스토리지 장치는 프로세싱 요소가 데이터를 사용하여 연산을 수행하도록 하기 위해, 호스트 로부터, 스토리지 장치로부터 프로세싱 요소로 데이터를 이동시키는 커맨드를 수신할 수 있다. 호스트의 커맨드은 예를 들어, NVMe 프로토콜을 사용하여 호스트 링크를 통해 수신될 수 있다. 일부 실시예들에서, 호스트 링크는 PCIe 버스를 포함한다. 이와 관련하여, 스토리지 장치는 호스트와 의 통신에서 전통적인 NVMe 드라이브처럼 동작할 수 있다. I/O 데이터를 교환하는 것 외에도, 호스트 링크(10 4)는 스토리지 장치 및 프로세싱 요소들과 관리 및/또는 구성 데이터를 교환하는 데 사용될 수도 있 다. 일부 실시예들에서, 스토리지 장치는 데이터 통신 네트워크를 통해 프로세싱 요소들과 통신하도 록 더 구성된다. 이와 관련하여, 스토리지 장치는 제2 데이터 통신 링크(이하, 네트워크 링크라고 지칭 함)를 통해 데이터 통신 네트워크에 연결된다. 네트워크 링크(116a)는 데이터 통신 네트워크에 액세 스하기 위해 프로세싱 요소들에 의해 사용되는 네트워크 링크들(116b, 116c)과 유사할 수 있으며, 통칭하 여 네트워크 링크로 지칭될 수 있다. 일부 실시예들에서, 스토리지 장치는 네트워크 링크를 사용하여 데이터 통신 네트워크를 통해, 스토리지 장치에 저장된 데이터를 프로세싱 요소로 이동한다. 예를 들어, 스토리지 장치는 하나의 프로세싱 요소(110a)가 데이터 통신 네트워크를 사용하여 다른 프로세싱 요소(110b)로 데이터를 이동하는 것 과 유사한 방식으로 데이터 통신 네트워크를 통해 데이터를 이동시킬 수 있다. 일부 실시예들에서, 네트워 크 링크는 NV링크이다. NV링크는 메모리를 읽고 쓰기 위해 링크를 통해 패킷을 전송할 수 있다는 점에서 PCIe와 유사할 수 있다. 네트워크 링크와 데이터 통신 네트워크를 사용하여 스토리지 장치에서 프로세싱 요소로 데이터를 이동하면, 중간 홉으로 호스트 메모리를 통과할 필요가 없으므로, 전송이 더 빠르고 효율적으로 이루어질 수 있다. 도 2는 하나 이상의 실시예들에 따라 하나 이상의 스위치들 및/또는 라우터들(202a-202b)(통칭하여 스위치 202 로 지칭)을 통해 서로 연결된 다양한 프로세싱 요소들(예컨대, GPU들)(200a-200g, 통칭하여 200으로 지칭)의 블 록도를 나타낸다. 일부 실시예들에서, 스토리지 장치(예컨대, SSD)는 또한 하나 이상의 스위치들를 통해 다양한 프로세싱 요소들에 연결된다. 프로세싱 요소들 및 스토리지 장치는 각각 도 1의 프로세 싱 요소들 및 스토리지 장치와 유사할 수 있다. 일부 실시예들에서, 스위치는 데이터 통신 네트워크의 일부를 형성하여 프로세싱 요소들과의 데 이터의 전송을 용이하게 한다. 예를 들어, 스위치는 소스 프로세싱 요소 또는 스토리지 장치에 의해 전송된 데이터를 수신하고, 데이터의 목적지를 결정하고, 데이터를 목적지(예컨대, 목적지 프로세싱 요소 )에 제공할 수 있다. 일부 실시예들에서, 스위치는 엔비디아의 NV스위치를 포함한다. 일부 실시예들에서, 프로세싱 요소들 및 스토리지 장치는 호스트 스위치에 연결된다. 호스트 스 위치는, 예를 들어, PCIe 스위치, CXL 스위치 및/또는 이와 같은 것일 수 있다. 호스트 스위치는 예 를 들어, 하나 이상의 PCIe 레인을 통해 호스트 CPU(도 1의 프로세서와 유사)와 데이터 프로세싱 요 소들 및 스토리지 장치 사이의 통신을 허용할 수 있다. 호스트 스위치는 도 1의 호스트 링크 를 사용하거나 도 1에 통합될 수 있다. 관리 및 입출력 통신은 호스트 스위치를 통해, 호스트와 데이터 프로세싱 요소들 및 스토리지 장치 간에 전송될 수 있다. 예를 들어, 호스트 CPU는 호스트 스위치를 통해 구성 커맨드들을 프 로세싱 요소들 및 스토리지 장치로 전송할 수 있다. 또한, 호스트 CPU는 호스트 스위치를 사용 하여 프로세싱 커맨드, 예를 들어, 머신 러닝 모델에 의한 입력 데이터의 처리를 개시하는 커맨드들과 같은 프 로세싱 커맨드를 프로세싱 요소로 전송할 수 있다. 호스트 CPU는 호스트 스위치를 통해 스토리 지 장치에 데이터 저장 요청(예컨대, 읽기 및 쓰기 요청)을 추가로 발행할 수 있다. 도 3은 하나 이상의 실시예들에 따른 스토리지 장치의 블록도를 도시한다. 스토리지 장치는 도 1 및 도 2의스토리지 장치(102, 204)와 유사할 수 있다. 일부 실시예들에서, 스토리지 장치는 호스트 링크(및 호스트 스위치)를 통해 호스트와 인 터페이스하고, 비휘발성 메모리(306, NVM)과 인터페이스하기 위한 제1 구성요소 세트(하드웨어 및 관련 프 로토콜을 포함)를 포함한다. 일부 실시예들에서, 스토리지 장치는 또한 네트워크 링크를 통해, 데이 터 통신 네트워크와 인터페이스하기 위한 제2 구성 요소 세트(하드웨어 및 관련 프로토콜 포함)를 포함한 다. 또한, 스토리지 장치에 포함되는 NVM은 데이터를 지속적으로 저장하는 데 사용될 수 있다. NVM은 예를 들어, 낸드 플래시 메모리를 포함할 수 있지만, 본 발명이 이에 한정되는 것은 아니며, NVM은 스토리지 장치의 구현에 따라 데이터를 지속적으로 저장하기 위한 임의의 적절한 종류의 메모 리(예를 들어, 자기 디스크, 테이프, 광 디스크 및/또는 이와 유사한 것)를 포함할 수 있다. 도 3에는 도시되어 있지 않지만, 일부 실시예들에서, 스토리지 장치는 예를 들어, DRAM(Dynamic Random Access Memory), SRAM(Static Random Access Memory) 및/또는 DTCM(Data Tightly Coupled Memory)과 같은 로 컬 메모리를 포함할 수도 있다. 제1 구성 요소 세트는, 호스트 인터페이스, 스토리지 컨트롤러 및 NVM 인터페이스를 포함 할 수 있지만, 본 발명은 이에 제한되지 않는다. 호스트 인터페이스는, 예를 들어, CXL(Compute Express Link), CCIX(Cache Coherent Interconnect for Accelerators), SCSI(Small Computer System Interface), NVMe(Non Volatile Memory Express), PCIe(Peripheral Component Interconnect Express), 이더넷을 통한 RDMA(remote direct memory access), SATA(Serial Advanced Technology Attachment), 파이버 채널, 직렬 연결 SCSI(Serial Attached SAS), NVMe-oF 등과 같이, 호스트와의 통신을 활성화하기 위한 연결 및/또는 관련 프로토콜을 포함할 수 있다. 스토리지 컨트롤러는 호스트와의 통신을 관리하고(예를 들어, 호스트 인터페이스를 통해), 호스 트로부터의 I/O 및 관리 커맨드를 처리하도록 구성될 수 있다. 스토리지 컨트롤러는 예를 들어, NVMe 프로토콜과 같은 스토리지 액세스 및 전송 프로토콜을 준수할 수 있지만, 실시예들이 이에 제한되지는 않는다. 일부 실시예들에서, 스토리지 컨트롤러는 데이터 액세스 명령어에 따라 NVM에 저장된 데이터에 대한 액세스를 제공하기 위해(예를 들어, 펌웨어 및/또는 소프트웨어를 통해) 데이터 액세스 명령어를 실행할 수 있 는 디지털 회로(예를 들어, 마이크로 컨트롤러, 마이크로 프로세서, 디지털 신호 프로세서 또는 논리 장치(예를 들어, FPGA(a field programmable gate array), ASIC(application-specific integrated circuit) 및/또는 이 와 같은) 등의 프로세싱 회로를 통해 구현될 수 있다. NVMe를 예로서 사용하면, 스토리지 컨트롤러는 서브미션(submission) 큐(예컨대, 호스트 메모리에 있 는)에서 I/O 명령(예컨대, 읽기 명령)을 페치(fetch)하고, 요청된 I/O 동작을 수행하기 위해 NVM 인터페이스 와 인터페이스할 수 있다. 프로세싱 요소들을 위한 것이 아닌 데이터에 대한 전통적인 요청의 경우, 스토리지 컨트롤러는 요청을 이행하기 위해 호스트 메모리에 대한 또는 호스트 메모리로부터의 직접 메모리 액세스를 수행한다. 예를 들어, 스토리지 컨트롤러는 I/O 커맨드를 이행하기 위해 (예를 들어, I/O 커맨드의 타겟 주소에 기초하여) 호스트 메모리로부터 PRP 또는 SGL 엔트리들을 페치할 수 있다. PRP 또는 SGL 엔트리들은 읽기 커맨드에 대해, 스토리지 장치로부터 읽은 데이터를 쓰기 위한, 또는 쓰기 커맨드에 대해, 스토리지 장치에 기록될 데이터를 읽기 위한 호스트 메모리의 물리적 메모리 위치를 기술할 수 있다. 스토리지 컨트롤러는 또한 요청된 커맨드가 완료되었음을 나타내기 위해 해당 완료 큐(예를 들어, 호스트 메모리에)에 완료 상태를 배치할 수 있다. 일부 실시예들에서, NVM 인터페이스는 NVM으로부터의 데이터의 읽기 및 쓰기를 관리하도록 구성된다. 일부 실시예들에서, NVM 인터페이스는 데이터 액세스 요청을 수신하고, NVM과 인터페이스하여 NVM으 로부터 데이터를 읽고, NVM에 데이터를 쓰는 플래시 번환 계층(FTL)을 포함한다. 이와 관련하여, FTL은 데 이터 액세스 요청에 포함된 디스크 또는 메모리 주소를 플래시 블록 주소로 변환할 수 있다. 그런 다음, 데이터 를 변환된 플래시 블록 주소에서 읽거나, 변환된 플래시 블록 주소에 데이터가 쓰일 수 있다. 일부 실시예들에 따르면, 제2 구성 요소 세트는 네트워크 인터페이스 및 직접 메모리 액세스(DMA) 엔 진을 포함하지만, 이에 한정되지 않는다. 네트워크 인터페이스는 데이터 통신 네트워크를 통해, 액세스 가능한 프로세싱 요소들의 주소 공간(이하, 네트워크 주소 공간이라 함)으로의 데이터 전송을 가능 하게 하기 위한 연결 및/또는 관련 프로토콜을 포함할 수 있다. 일부 실시예들에서, 네트워크 인터페이스 는 프로세싱 요소들의 직접 메모리 액세스를 지원하는 메모리 전송이다. 예를 들어, 네트워크 인터페이스 는, 예를 들어, NV링크 메시(mesh) 네트워크를 통해 네트워크 주소 공간에 대한 데이터 전송을 수행하기 위해, 데이터 통신 네트워크에 액세스하기 위한 NV링크 포트와 같은 네트워크 포트를 포함할 수 있다. 일부 실시예들에서, DMA 엔진은 호스트로부터의 I/O 요청을 처리하기 위해 스토리지 컨트롤러와 함께 동작하도록 구성된다. 일부 실시예들에서, DMA 엔진(예컨대, 그 기능들)은 스토리지 컨트롤러에 포함될 수 있다. 스토리지 컨트롤러 및 DMA 엔진은 통칭하여 \"컨트롤러\"로 지칭될 수 있다. 일부 실시예들에서, DMA 엔진은, I/O 요청에 대응하여 수행될 직접 메모리 액세스가 네트워크 인터페이스 또는 호스트 인터페이스를 통해 수행될지 여부를 결정하도록 구성된다. 이와 관련하여, DMA 엔진 은 I/O 요청에서 타겟 주소(복수의 주소를 포함하는 PRP 또는 SGL 목록과 연관될 수 있음)를 검사하고, 타 겟 주소가 호스트 메모리의 일부인지 또는 네트워크 주소 공간의 일부인지를 결정할 수 있다. 주소가 호스 트 메모리의 일부인 경우, 호스트 메모리와 관련된 타겟 주소에 기초하여 데이터를 읽거나 쓰기 위해, 호 스트 인터페이스를 통해, 호스트 메모리의 메모리 액세스가 수행된다. 주소가 네트워크 주소 공간의 일부인 경우, 네트워크 주소 공간의 메모리 액세스는 프로세싱 요소 중 하나와 연결된 타겟 주소에 기반하 여 데이터를 읽거나 쓰기 위해 네트워크 인터페이스를 통해 수행된다. 예를 들어, 호스트에서 실행되는 애플리케이션은 NVM에 저장된 데이터의 읽기 요청을 발행 (issue)한다. 읽기 요청은 호스트 인터페이스를 통해 스토리지 장치에 의해 수신될 수 있다. 예를 들 어, 읽기 요청은 애플리케이션에 의해 서브미션 큐에 배치될 수 있고, 요청을 이행하기 위해, 스토리지 컨 트롤러에 의해 검색될 수 있다. 읽기 요청은 읽기 데이터가 저장될 타겟 주소(예컨대, 물리적 영역 페이지 (PRP) 주소 또는 분산 수집 목록(SGL) 주소)를 포함할 수 있다. 읽기 요청은 프로세싱 요소가 연산(예를 들어, ML 연산)을 수행함에 있어 사용할 데이터에 대한 것일 수 있다. 이 경우, 타겟 주소는 호스트 메모리 대신 프로세싱 요소들 중 하나의 주소일 수 있다. DMA 엔진은 읽기 요청을 처리하고 타겟 주소가 네트워크 주소 공간의 일부인 것을 결정할 수 있다. DMA 엔 진은 네트워크 인터페이스를 통해, 네트워크로 쓰기 요청을 전송하여 적절한 프로세싱 요소 의 메모리 주소에 대한 쓰기를 수행할 수 있다. 이와 관련하여, 데이터 통신 네트워크의 네트워크 스 위치는 타겟 주소에 기초하여 쓰기 요청을 적절한 프로세싱 요소로 라우팅할 수 있다. 예를 들어, 네 트워크 스위치는 연결된 프로세싱 요소들에서 타겟 주소가 존재하는 위치에 대한 사전 검색에 기초하 여, 쓰기 요청을 라우팅할 수 있다. 일부 실시예들에서, 호스트 프로세서는 네트워크 주소 공간과 호스트의 주소 공간의 매핑을 유지한다. 매핑은, 예를 들어, 호스트 링크를 통한 시그널링을 통해 호스트의 초기화 시 생성될 수 있다. 이와 관련하여, 부트-타임 동안 호스트 프로세서는 호스트에 연결된 인터페이스들(예를 들어, PCIe 인터페이스들)에 연결된 장치들(예를 들어, 프로세싱 요소들)을 나열할 수 있다. 장치들은 호스트에 직접 연결될 수도 있고, PCIe 스위치를 통해 연결될 수도 있다. 호스트의 운영 시스템(OS)은 부팅 시, 장 치들을 스캔하여 호스트 메모리 공간(예컨대, 메모리)에 매핑할 수 있다. 각 장치는 호스트에게 필요한 주 소 공간이 얼만큼 인지(및 최종적으로 물리적 주소가 무엇인지)를 알려줄 수 있는 BAR(Base Address Register) 를 노출할 수 있다. 운영 체제는 장치 유형을 포함한 다른 정보와 함께 장치의 메모리를 주소 공간(예를 들어, 64비트 주소 공간)에 매핑할 수 있다. 이러한 방식으로, 호스트는 기반 시스템 내의 장치에 대한 주소를 알 수 있다. 예를 들어, 호스트는 장치 #1이 주소 X에서 X+RegionSize 까지의 메모리 블록을 갖는 프로세 싱 요소(110a)이고, 장치 #2가 주소 Y에서 Y+RegionSize 까지의 메모리 블록을 갖는 프로세싱 요소(110b)임을 알 수 있다. 따라서 호스트가 스토리지 장치에 읽기 커맨드 발행할 때, 호스트는 데이터의 목적지가 되는 프로세싱 요소의 주소를 지정할 수 있다. 네트워크 주소 공간에 대한 지식에 기초하여, 애플리케이션은 특정 연산을 수행하기 위한 프로세싱 요소 의 메모리 주소를 식별하고, 식별된 메모리 주소를 메모리 읽기 요청의 결과를 프로세싱 요소로 반환 하기 위한 타겟 메모리 주소로 사용할 수 있다. 이는 메모리 읽기 요청의 결과를 호스트 메모리에 저장하 는 추가 단계를 피하고, 연산을 수행하기 위해 프로세싱 요소에만 결과를 전달하는 데 도움이 될 수 있다. 일부 실시예들에서, 호스트는 메모리 주소와 연관된 조건을 식별함으로써, 입출력 요청의 타겟 주소가 네 트워크 주소 공간 또는 호스트 메모리에 매핑되는 것으로 식별한다. 예를 들어, 메모리 읽기 요청에서 하 나 이상의 미사용 비트(이하, 식별자 비트라고 함)는 타겟 주소가 네트워크 주소 공간에 매핑되는지 또는 타겟 주소가 호스트 메모리에 매핑되는지를 나타내는 데 사용될 수 있다. 예를 들어, 식별자 비트는 타겟 주소 가 네트워크 주소 공간에 매핑되는 경우, 설정될 수 있고, 타겟 주소가 호스트 메모리에 매핑되는 경우(또 는 그 반대의 경우) 설정 해제될 수 있다. DMA 엔진은 식별자 비트의 설정 또는 미설정 여부에 기초하여 네트워크 인터페이스 또는 호스트 인터페이스가 사용될지 여부를 결정할 수 있다. 일부 실시예들에서, 호스트는 네트워크 주소 공간의 일부인 정의된 주소들의 목록 및 크기를 스토리지 장 치에 제공한다. 정의된 주소들의 목록은 예를 들어, 스토리지 장치의 메모리(미도시)에 저장될 수 있 다. DMA 엔진은 I/O 요청을 이행하기 위한 메모리 액세스에 사용될 인터페이스(예를 들어, 네트워크 인터 페이스 또는 호스트 인터페이스)를 결정하기 위해, 수신된 타겟 주소와 메모리 내의 주소 목록의 비 교를 수행할 수 있다. 도 4는 본 발명의 하나 이상의 실시예들에 따른 스토리지 장치의 블록도를 도시한다. 스토리지 장치 는 도 1 및 도 2의 스토리지 장치(102, 204)와 유사할 수 있다. 일부 실시예들에서, 스토리지 장치는 호스트 링크(및 호스트 스위치)를 통해 호스트와 인 터페이스하고, 비휘발성 메모리(NVM)와 인터페이스하기 위한 제1 구성 요소 세트(하드웨어 및 관련 프로토 콜을 포함)를 포함한다. 일부 실시예들에서, 스토리지 장치는 또한, 네트워크 링크를 통해, 데이터 통신 네트워크와 인터페이스하기 위한 제 2 구성 요소 세트(하드웨어 및 관련 프로토콜 포함)를 포함한다. NVM은 또한, 스토리지 장치에 포함되며, 데이터를 영구적으로 저장하는 데 사용될 수 있다. NVM(40 6)은 도 3의 NVM과 유사할 수 있다. 제1 구성 요소 세트는, 호스트 인터페이스, 스토리지 컨트롤러 및 NVM 인터페이스를 포함 할 수 있지만, 이에 제한되지 않는다. 제1 구성 요소 세트는 도 3의 제1 구성 요소 세트와 유사할 수 있다. 일부 실시예들에 따르면, 제2 구성 요소 세트는 네트워크 인터페이스 및 메모리를 포함하지만, 이에 제한되지 않는다. 네트워크 인터페이스는 도 3의 네트워크 인터페이스와 유사할 수 있으며, 데이터 통신 네트워크를 통해 프로세싱 요소들과의 데이터 전송을 가능하게 하는 데 사용될 수 있다. 메모리는, 예를 들어, 스토리지 장치의 로컬 메모리의 일부일 수 있다. 일부 실시예들에서, 메모리 는 DRAM, SRAM, 및/또는 DTCM을 포함할 수 있다. 메모리는 네트워크 인터페이스를 통해 데이터 통신 네트워크에 노출될 수 있다. 스토리지 장치에 의한 메모리의 노출은 GPU가 그 메모리를 NV 스위치에 노출하는 방식과 유사할 수 있다. 스토리지 장치는 프로세싱 요소가 다른 프로세싱 요소로 부터의 메모리 읽기 및 쓰기 요청에 응답할 수 있는 방식과 유사하게, 네트워크로부터의 메모리 읽기 및 쓰기 요청에 응답할 수 있다. 이와 관련하여, 메모리는 프로세싱 요소에 의해 주소가 액세스될 때(예 를 들어, 메모리 읽기 또는 쓰기 커맨드를 통해), 스토리지 장치의 메모리를 참조할 수 있도록 주소 값에 매핑될(연관될) 수 있다. 일부 실시예들에서, 메모리는 호스트 인터페이스를 통해, 호스트 또는 프로세싱 요소에 의 해 채워진다(예를 들어, 읽기 커맨드를 통해). 스토리지 컨트롤러는 커맨드에 대한 응답으로 비휘발성 메 모리로부터 데이터를 검색하고, 메모리에 데이터를 저장할 수 있다. 이와 관련하여, 읽기 커맨드에 포함된 타겟 주소는 스토리지 장치의 메모리에 매핑될 수 있다(예를 들어, 호스트 메모리 대신 에). 일부 실시예들에서, 메모리에 저장된 데이터는 호스트로부터의 프로세싱 커맨드의 수신(예를 들어, 호스트 링크를 통해)에 대응하여, 프로세싱 요소에 의해 액세스된다. 프로세싱 커맨드는 예를 들어, 데이터가 메모리에 저장된 주소를 포함할 수 있다. 프로세싱 요소는 프로세싱 커맨드를 수신하고, 메 모리로부터 데이터를 검색하기 위한 요청(예컨대, 읽기 요청)을 전송할 수 있다. 프로세싱 요소의 요 청은, 예를 들어, 데이터가 메모리에 저장된 주소를 포함할 수 있다. 네트워크 인터페이스는 요청을 수신하고, 데이터를 검색하기 위해 메모리의 주소에 액세스할 수 있다. 검색된 데이터는 데이터 통신 네트 워크를 통해 프로세싱 요소의 메모리로 이동될 수 있다. 프로세싱 요소는 프로세싱 커맨드에 의해 지시된 연산을 수행하기 위해 데이터를 사용할 수 있다. 도 5는 본 발명의 하나 이상의 실시예들에 따른 스토리지 장치의 블록도이다. 스토리지 장치는 도 1 및 도 2의 스토리지 장치(102, 204)와 유사할 수 있다. 일부 실시예들에서, 스토리지 장치는 호스트 링크(및 호스트 스위치)를 통해 호스트와 인 터페이싱하기 위한 호스트 인터페이스를 포함한다. 호스트 인터페이스는 도 3의 호스트 인터페이스 와 유사할 수 있다. 예를 들어, 호스트 인터페이스는 PCIe와 같은 인터페이스 표준을 준수할 수 있다. 일부 실시예들에서, 스토리지 장치는 또한 네트워크 링크를 통해 데이터 통신 네트워크와 인터 페이스하기 위한 네트워크 인터페이스(하드웨어 및 관련 프로토콜 포함함)를 포함한다. 네트워크 인터페이 스는 도 3의 네트워크 인터페이스와 유사할 수 있다. 예를 들어, 네트워크 인터페이스는 데이터 통신 네트워크를 통해 프로세싱 요소들과의 데이터 전송을 가능하게 하는 데 사용될 수 있다. 스토리지 장치는 데이터를 영구적으로 저장하기 위한 비휘발성 메모리(NVM)를 더 포함할 수 있다. NVM은 도 3의 NMV와 유사할 수 있다. NVM에 대한 액세스 및 관리는 NVM 인터페이스에 의 해 이루어질 수 있다. NVM 인터페이스는 도 3의 NVM 인터페이스와 유사할 수 있다. 일부 실시예들에서, 스토리지 장치는 도 3의 스토리지 컨트롤러와 유사할 수 있는 스토리지 컨트롤러 를 포함한다. 스토리지 컨트롤러는 예를 들어, NVMe 프로토콜과 같은 스토리지 액세스 및 전송 프로 토콜을 준수할 수 있지만, 실시예들이 이에 제한되지는 않는다. 일부 실시예들에서, 스토리지 컨트롤러는 호스트로부터의 I/O 및 관리 커맨드들을 처리하기 위해 호 스트와의 통신을 관리하도록 구성된다(예를 들어, 호스트 인터페이스를 통해). 일부 실시예들에서, 스토리지 컨트롤러는 또한 프로세싱 요소들로부터의 I/O 커맨드를 처리하기 위해, 프로세싱 요소들과 의 통신을 관리하도록 구성된다(예를 들어, 데이터 통신 네트워크를 통해). 예를 들어, 프로세싱 요소들 은 호스트와 함께 사용되는 스토리지 액세스 및 전송 프로토콜을 사용하여 I/O 커맨드를 전송하도록 구성될 수 있다. 예를 들어, NVMe 프로토콜을 사용하여, 프로세싱 요소들은 NVM에 대한 액세스 요청 을 위해 호스트에서 사용되는 NVMe 커맨드 세트(예를 들어, 읽기, 쓰기, 소거 등)를 사용하도록 구성될 수 있다. I/O 커맨드들은 호스트 인터페이스를 통해 수신되는 I/O 커맨드들과 유사하게, 네트워크 인터페이스 에 의해 수신되어 처리를 위해 스토리지 컨트롤러로 전달될 수 있다.일부 실시예들에서, 프로세싱 요소들은 I/O 커맨드들을 전송하고 커맨드들의 완료를 감지하도록 구성된 프 로세싱 요소(PE) 컨트롤러(미도시)로 구성된다. 이와 관련하여, PE 컨트롤러는 호스트 메모리의 서브미션 큐, 완료 큐 및/또는 관리 큐와 유사한 서브미션 큐(PE SQ), 완료 큐 및/또는 관리 큐를 포함할 수 있다(예를 들어, 프로세싱 요소의 메모리 내부에). 예를 들어, PE 컨트롤러는 읽기 또는 쓰기 커맨드를 PE SQ 로 전송할 수 있다. 읽기 또는 쓰기 커맨드는 읽기 또는 쓰기 요청을 이행하기 위한 타겟 주소를 포함할 수 있다. 일부 실시예들에서, 스토리지 컨트롤러는 PE SQ로부터 읽기 또는 쓰기 커맨드를 페치하고, 커맨드를 수행하기 위해 (예를 들어, 페치된 명령의 타겟 주소 (들)에 기초하여) PE 메모리로부터 PRP 또는 SGL 엔트리들을 페치할 수 있다. PRP 또는 SGL 엔트리들은 읽기 커 맨드를 위해, NVM으로부터 읽은 데이터를 쓰기 위해, 또는 쓰기 커맨드를 위해 NVM에 기록될 데이터를 읽 기 위해, PE 메모리의 물리적 메모리 위치를 표현할 수 있다. 스토리지 컨트롤러는 요청된 커맨드가 완료 되었음을 나타내기 위해, 해당 PE CQ에 완료 상태를 더 배치할 수 있다. 일부 실시예들에서, PE 컨트롤러는 호스트 프로세서에 구성된 I/O 커맨드 세트의 전부 또는 서브세트만으 로 구성된다. 제한된 I/O 커맨드 세트는 PE 컨트롤러가 스토리지 장치의 I/O 액세스를 개시하고 제어하도 록 허용할 수 있다. 이러한 방식으로, 프로세싱 요소들은 호스트 프로세서에 의한 스토리지 장치 의 액세스의 오케스트레이션(orchestration)을 피할 수 있고, 프로세싱 요소들의 자율성을 허용할 수 있다. 도 6은 본 발명의 하나 이상의 실시예들에 따른 스토리지 장치에 저장된 데이터를 이동하는 프로세스의 흐 름도를 도시한다. 프로세스가 시작되고, 600 단계에서, 스토리지 장치는 호스트 인터페이스를 통해, 호스트로부터 요청(예를 들어, I/O 요청)을 수신한다. 일부 실시예들에서, 호스트가 멀티코어 호스트 인 경우, 다수의 요청들이 다수의 코어들로부터 수신될 수 있다. 스토리지 컨트롤러는 요청을 처리하고(예를 들어, 서브미션 큐로부터 I/O 요청을 검색하고), 요청을 DMA 엔진으로 전달할 수 있다. 602 단계에서, DMA 엔진은 I/O 요청에 기초하여, 데이터를 전송하기 위한 호스트 인터페이스 또는 네 트워크 인터페이스 중 하나를 식별한다. 이와 관련하여, DMA 엔진은 I/O 요청에서 식별된 타겟 주소 를 식별하고, 조건을 식별하여 타겟 주소가 네트워크 주소 공간에 매핑되는지 또는 호스트 메모리에 매핑 되는지를 결정할 수 있다. 예를 들어, DMA 엔진은 I/O 요청의 식별자(identifier) 비트를 검사하여 비트가 설정되어 있는지 또는 설정되지 않았는지를 결정할 수 있다. 예를 들어, 타겟 주소가 네트워크 주소 공간에 매 핑되면 식별자 비트가 설정될 수 있고, 타겟 주소가 호스트 메모리에 매핑되면 식별자 비트가 설정 해제될 수 있다(또는 그 반대의 경우일 수 있음). 일부 실시예들에서, DMA 엔진은 일치하는 것을 식별하기 위해, 타겟 주소를 데이터 통신 네트워크에 매핑된 주소 목록과 비교한다. 이와 관련하여, 호스트는 네트워크 주소 공간의 일부인 정의된 주소 목록 및 크기를 스토리지 장치에 제공한다. 정의된 주소 목록은 예를 들어, 스토리지 장치의 메모리(도시 되지 않음)에 저장될 수 있다. DMA 엔진은 저장된 주소 목록에서 일치하는 것을 발견하면 타겟 주소가 네 트워크 주소 공간의 일부라고 결론을 내릴 수 있다. 604 단계에서, 스토리지 컨트롤러는 I/O 요청을 수행하기 위해, 식별된 인터페이스를 통해, 메모리 액세스 를 수행한다. 예를 들어, I/O 요청이 읽기 요청인 경우, 스토리지 컨트롤러는 NVM으로부터 요청된 데 이터를 검색하기 위해, NVM 인터페이스와 통신할 수 있다. 스토리지 컨트롤러 및/또는 DMA 엔진(31 4)은 요청된 데이터를 타겟 주소로 반환하기 위해, 식별된 인터페이스를 통해, 타겟 주소의 메모리 액세스를 수 행할 수 있다. 예를 들어, 타겟 주소가 호스트 메모리에 매핑된 경우, 요청된 데이터는 호스트 인터페이스 를 통해 호스트로 반환될 수 있다. 반환된 데이터는 하나 이상의 PRP/SGL 항목에 의해 식별된 호스트 의 주소에 저장될 수 있다. 타겟 주소가 네트워크 주소 공간에 매핑되면, 요청된 데이터는 네트워크 인터페이스를 통해 프로세싱 요소 들 중 하나에 반환될 수 있다. 네트워크 인터페이스는 포인트-투-포인트 연결을 사용하여, 프로세싱 요소들 중 하나에 데이터를 제공하기 위한 메시 네트워크에 대한 액세스를 제공할 수 있다. 데이터 통신 네트워크의 네트워크 스위치는 타겟 주소에 기초하여 요청을 적절한 프로세싱 요소로 라우팅할 수 있다. 예를 들어, 네트워크 스위치는 연결된 프로세싱 요소들내에 해당 주소가 존재하는 위치에 대한 사전 발견에 기초하여 쓰기 요청을 라우팅할 수 있다.도 7은 하나 이상의 실시예들에 따라, 스토리지 장치에 저장된 데이터를 직접 메모리 액세스를 통해, 프로 세싱 요소로 이동하기 위한 신호 흐름을 도시한다. 일부 실시예들에서, 호스트는 읽기 커맨드 또는 요청을 스토리지 장치로 전송함으로써 이동을 개시한다. 읽기 커맨드는 읽기 데이터를 반환하기 위해 호스트에서 타겟 메모리 주소를 식별하는 대신, 타겟 메모리 주소가 프로세싱 요소에 있다는 점 에서 \"특수\" 읽기 커맨드로 간주될 수 있다. 스토리지 장치는 호스트 인터페이스를 통해 읽기 커맨드를 수신할 수 있다. 스토리지 컨트롤러 는 읽기 커맨드를 처리하고, NVM 인터페이스를 통해, NVM으로부터 요청된 데이터를 검색할 수 있다. 일부 실시예들에서, 읽기 커맨드(또는 적어도 그 일부)는 DMA 엔진에 의해 추가로 처리된다. 이와 관 련하여, DMA 엔진은 읽기 커맨드에서 타겟 메모리 주소를 검사하고, 그 주소가 네트워크 주소 공간의 일부인지 판단할 수 있다. 예를 들어, 타겟 메모리 주소의 식별자 비트는 해당 주소가 네트워크 주소 공간에 있 는 것으로 식별할 수 있다. 다른 예에서, DMA 엔진은 타겟 주소를 메모리에 저장된 주소 목록과 비교하고, 일치하는 것을 발견하면 타겟 메모리 주소가 네트워크 주소 공간에 있는지를 결정할 수 있다. 검색된 데이터는 데이터 패킷을 통해, 프로세싱 요소로 전송될 수 있다. 데이터 패킷은 예를 들 어, 네트워크 인터페이스에 의해 생성될 수 있다. 데이터 패킷은 무엇보다도 타겟 주소를 타겟 주소 로 식별할 수 있다. 타겟 주소는 네트워크 주소 맵에 기초한 PRP 주소 또는 SGL 주소의 형태를 취할 수 있다. 일부 실시예들에서, 데이터 패킷은 네트워크 인터페이스를 통해, 데이터 통신 네트워크로 전송 된다. 데이터 통신 네트워크는 데이터 패킷에서 식별된 타겟 주소에 기초하여 데이터 패킷을 프로세 싱 요소로 라우팅할 수 있다. 데이터 통신망을 통한 데이터의 전송에 기초하여(예를 들어, 오류 메시지의 표시 없이), 스토리지 장치 는 확인 메시지를 호스트로 전송할 수 있다. 확인 메시지는 예를 들어, 호스트의 완 료 큐에 저장되는 완료 메시지일 수 있다. 완료 메시지는 예를 들어, 호스트 인터페이스를 통해 전송될 수 있다. 완료 메시지는 읽기 커맨드의 완료를 나타낼 수 있다. 확인 메시지는 프로세싱 요소에 의해 데이터의 처리가 수행될 수 있음을 호스트에 알릴 수 있다. 이와 관련하여, 호스트는 데이터의 처리를 시작하기 위해, 프로세싱 메시지를 프로세싱 요소 로 전송할 수 있다. 일부 실시예들에서, 프로세싱 메시지는 처리의 대상이 되는 데이터를 저장하는 프로세싱 요소의 메모리 주소를 포함한다. 프로세싱 요소는 메모리 주소에서 데이터의 로컬 읽기를 수행하고, 데이터를 사용하여 처리(예컨대, 연산)를 수행할 수 있다. 도 8은 본 발명의 하나 이상의 실시예들에 따라, 스토리지 장치의 메모리를 노출시켜, 스토리지 장치 에 저장된 데이터를 프로세싱 요소로 이동시키기 위한 신호 흐름을 도시한 것이다. 일부 실시예에서, 호스트는 읽기 커맨드 또는 요청을 스토리지 장치로 전송함으로써 메모리를 채운다. 읽기 명령은, 읽기 데이터를 반환하기 위해 호스트에서 타겟 메모리 주소를 식별하는 대신, 타겟 메모리 주소가 스토리지 장치의 노출된 메모리에 있다는 점에서, \"특수\" 읽기 커맨드로 간주될 수 있다. 스토리지 장치는 호스트 인터페이스를 통해 읽기 커맨드를 수신할 수 있다. 스토리지 컨트롤러 는 읽기 커맨드를 처리하고, NVM 인터페이스를 통해, NVM으로부터 요청된 데이터를 검색할 수 있다. 검색된 데이터는 신호 흐름을 통해 묘사된 바와 같이, 노출된 메모리의 타겟 메모리 주소에 저장될 수 있다. 읽기 커맨드의 완료에 기초하여, 스토리지 장치는 확인 메시지를 호스트로 전송할 수 있다. 확 인 메시지는 예를 들어, 호스트의 완료 큐에 저장되는 완료 메시지일 수 있다. 완료 메시지는 예를 들어, 호스트 인터페이스를 통해 전송될 수 있다. 완료 메시지는 읽기 커맨드의 완료를 나타낼 수 있다. 확인 메시지는 프로세싱 요소에 의해 데이터의 처리가 수행될 수 있음을 호스트에 알릴 수 있다. 이와 관련하여, 호스트는 데이터의 처리를 시작하기 위해 프로세싱 메시지를 프로세싱 요소 로 전송할 수 있다. 일부 실시예들에서, 프로세싱 메시지는 처리의 대상이 되는 데이터를 저장하는 메모리의 메모리 주소를 포함한다. 일부 실시예에서, 프로세싱 요소는 메모리 주소에서 데이터 읽기 를 수행하고, 데이터를 사용하여 처리(예컨대, 연산)를 수행한다. 도 9는 하나 이상의 실시예에 따라, 컴퓨팅 스토리지 장치(Computational Storage Device; CSD)에 저장된 데이터를 이동하기 위한 신호 흐름을 도시한다. CSD는 도 3의 스토리지 장치와 유사할 수 있으며, 임 베디드 프로세서 또는 FPGA를 포함할 수 있다. 또한, CSD는 예를 들어, 공유 로컬 메모리와 같은 로컬 메 모리를 포함할 수도 있다. 일부 실시예들에서, 연산을 위해 프로세싱 요소에 의해 사용될 데이터는 프로세싱 요소로 데이터를 전송하기 전에 CSD에 의해 처리(예컨대, 전처리)될 수 있다. 예를 들어, 프로세싱 요소에 의해 사용 될 데이터는 프로세싱 요소에 의해 사용되는 포맷과 호환되지 않을 수 있는 하나의 포맷에 기초하여 NVM에 저장될 수 있다. 이 경우, 호스트는 프로세싱 요소가 사용하는 포맷으로 데이터의 포맷을 변경하는 데이터 처리를 위해, CSD를 호출할 수 있다. 일부 실시예들에서, 호스트는 읽기 커맨드 또는 요청을 CSD로 전송함으로써 CSD를 채운다. 읽기 커맨드는 도 3의 호스트 인터페이스와 유사한 호스트 인터페이스를 통해 수신될 수 있다. 읽기 커맨드는 읽기 데이터를 반환하기 위한 타겟 주소로서, CSD의 로컬 메모리 내의 메모리 주소를 식별 할 수 있다. 일부 실시예들에서, 스토리지 컨트롤러(스토리지 컨트롤러와 유사한)는 읽기 커맨드를 처리하고 NVM 인터페이스(NVM 인터페이스와 유사한)를 통해 NVM(NVM과 유사한)으로부터 요청된 데이 터를 검색할 수 있다. 읽기 커맨드의 완료에 따라, CSD는 도 7의 확인 메시지와 유사한 확인 메시지를 호스트 로 전송하여, 읽기 커맨드의 완료를 나타낼 수 있다. 읽기 명령의 완료는 호스트가 CSD 프로세싱 메시지를 CSD로 전송하도록 트리거할 수 있다. CSD 프로세싱 메시지는 CSD로 하여금 로컬 메모리에 저장된 데이터의 요청된 처리를 수행하게 하여, 변환 되거나 처리된 데이터를 생성하게 할 수 있다. 확인 메시지는, 확인 메시지와 유사하게 CSD 처리가 완료되었음을 나타내기 위해 호스트로 전송 될 수 있다. 이제 처리된 데이터는 프로세싱 요소로 전송될 준비가 될 수 있다. 일부 실시예들에서, 호스 트는 쓰기 커맨드 또는 요청을 CSD로 전송한다. 일부 실시예들에서, 쓰기 커맨드의 소스 주소는 처리된 데이터가 저장되는 CSD의 로컬 메모리 내 주소이고, 쓰기 커맨드의 타겟 주소는 프로세싱 요소 의 메모리 주소이다. CSD는 도 3의 호스트 인터페이스와 유사한 호스트 인터페이스를 통해 쓰기 커맨드를 수신할 수 있다. CSD(예를 들어, 도 3의 스토리지 컨트롤러와 유사한 스토리지 컨트롤러)는 쓰기 커맨드을 처리하고, 처리된 데이터를 CSD의 로컬 메모리로부터 검색하여, 예를 들어, 도 3의 네트워크 인터페이스 와 유사한 네트워크 인터페이스에 데이터를 제공할 수 있다. 네트워크 인터페이스는 데이터 패킷을 프로세 싱 요소로 전송하기 위한 데이터 패킷을 준비할 수 있다. 데이터 패킷은, 무엇보다도, 처리된 데이터가 기록될 프로세싱 요소의 메모리 주소를 식별할 수 있다. 데이터 패킷은 네트워크 인터페이 스를 통해 데이터 통신 네트워크로 전송될 수 있다. 데이터 통신 네트워크는 데이터 패킷에서 식별된 메모리 주소에 기초하여 데이터 패킷을 프로세싱 요소로 라우팅할 수 있다. 데이터 통신을 통한 데이터의 전송에 기초하여(예를 들어, 오류 메시지의 표시 없이), CSD는 확인 메 시지를 호스트로 전송할 수 있다. 확인 메시지는 예를 들어, 호스트의 완료 큐에 저장되는 완료 메시지일 수 있다. 완료 메시지는 예를 들어, 도 3의 호스트 인터페이스와 유사한 호스트 인터페이스를 통 해 전송될 수 있다. 완료 메시지는 쓰기 커맨드의 완료를 나타낼 수 있다. 확인 메시지는 프로세싱 요소에 의해 데이터의 처리가 수행될 수 있음을 호스트에 알릴 수 있다. 이와 관련하여, 호스트는 데이터의 처리를 시작하기 위해 프로세싱 메시지를 프로세싱 요소 로 전송할 수 있다. 일부 실시예에서, 프로세싱 메시지는 처리의 대상이 되는 데이터를 저장하는 프 로세싱 요소의 메모리 주소를 포함한다. 프로세싱 요소는 메모리 주소에서 데이터의 로컬 읽기를 수 행하고, 데이터를 사용하여 처리(예컨대, 연산)를 수행할 수 있다. 도 10은 본 발명의 하나 이상의 실시예들에 따른 직접 메모리 액세스를 통해 스토리지 장치에 저장된 데이 터를 프로세싱 요소로 이동시키는 프로세스의 흐름도를 도시한다. 프로세스가 시작되고, 1000 단계에서, 스토리지 장치(300, 예를 들어, 스토리지 컨트롤러)는 호스트 인터페이스(제1 인터페이스라고도 지칭 될 수 있음)를 통해 호스트(컴퓨팅 장치라고도 함)로부터 제1 요청을 수신한다. 예를 들어, 제1 요청은 읽기 커 맨드일 수 있다. 예를 들어, 요청은 호스트 메모리에 유지되는 서브미션 큐로부터 스토리지 컨트롤러(30 9)에 의해 검색될 수 있다. 일부 실시예들에서, 제1 요청은 읽을 데이터(예를 들어, 읽을 데이터의 논리 블록주소(Logical Block Address; LBA)) 및 프로세싱 요소의 메모리와 연관된 타겟 주소(반환 주소 또는 제1 메모리 주소라고 지칭될 수 있음)를 식별한다. 타겟 주소는 프로세싱 요소에서 PRP 또는 SGL 리스트를 식 별할 수 있다. 1002 단계에서, 스토리지 컨트롤러는 제1 요청에 기초하여(예를 들어, 제1 요청에 포함된 LBA에 기초하여) NVM으로부터 제1 데이터를 검색한다. 일부 실시예들에서, 스토리지 컨트롤러는 제1 데이터를 검색하 기 위해 NVM 인터페이스와 상호 작용한다. 이와 관련하여, NVM 인터페이스는 제 1 데이터의 LBA를 대 응하는 NVM 위치(예를 들어, 플래시 주소)로 변환할 수 있다. 1004 단계에서, DMA 엔진은 반환 주소(예컨대, 제1 메모리 주소)와 관련된 조건을 식별할 수 있다. 예를 들어, DMA 엔진은 식별자 비트가 설정되어 있는지 또는 설정되지 않았는지를 결정하기 위해, 제1 요청의 식별자 비트(예를 들어, 제1 메모리 주소의 최하위 비트)를 검사할 수 있다. 예를 들어, 타겟 주소가 네트워크 주소 공간에 매핑되는 경우 식별자 비트는 설정될 수 있고, 타겟 주소가 호스트 메모리에 매핑되는 경우 설정 해제될 수 있다(또는 그 반대일 수 있음). 다른 예들에서, DMA 엔진은 일치 여부를 결정하기 위해 제1 메모리 주소를 저장된 주소의 목록과 비교할 수 있다. 이와 관련하여, 호스트는 네트워크 주소 공간의 일부인 정의된 주소 및 크기의 목록을 스토리지 장치에 제공한다. 정의된 주소 목록은 예를 들어, 스토리지 장치의 메모리(미도시)에 저장될 수 있다. DMA 엔진은 저장된 주소 목록에서 일치하는 것을 발견하면 타겟 주소가 네트워크 주소 공간의 일부 라고 결론을 내릴 수 있다. 1006 단계에서, 조건이 제1 메모리 주소가 호스트 주소 공간에 있는지 또는 네트워크 주소 공간에 있는지를 나 타내는지에 대한 결정이 이루어진다. 예를 들어, 식별자 비트가 설정된 경우, 또는 제1 메모리 주소가 저장된 주소의 목록에 포함된 경우, 제1 메모리 주소는 네트워크 주소 공간에 있는 것으로 간주될 수 있다. 제1 메모리 주소가 호스트 주소 공간에 있는 경우, 단계 1008에서, 제1 데이터는 호스트 인터페이스를 통 해(예를 들어, 호스트 메모리의 직접 메모리 액세스를 통해) 호스트로 반환될 수 있다. 반환된 데이 터는 하나 이상의 PRP/SGL 엔트리에 의해 식별되는 호스트의 주소에 저장될 수 있다. 제 1 메모리 주소가 호스트 주소 공간에 있지 않은 경우, 그 주소는 네트워크 주소 공간에 있는 것으로 간주될 수 있다. 이 경우, 제1 데이터는 데이터 통신 네트워크를 통해, 네트워크 인터페이스를 통해, 프로세 싱 요소로 전송될 수 있다. 네트워크 인터페이스는 포인트-투-포인트 연결을 사용하여 프로세싱 요소 들 중 하나에 데이터를 제공하기 위한 메시 네트워크에 대한 액세스를 제공할 수 있다. 일부 실시예들에서, 네트워크 인터페이스는 프로세싱 요소의 메모리에 데이터를 저장하기 위해 프로세싱 요소의 메모리의 직접 메모리 액세스를 가능하게 하도록 구성된다(예컨대, PRP/SGL 엔트리들에서 식별되는 바와 같이). 도 11은 본 발명의 하나 이상의 실시예들에 따라, 스토리지 장치의 메모리를 노출시켜 스토리지 장치 에 저장된 데이터를 프로세싱 요소로 이동시키는 프로세스의 흐름도를 도시한 도면이다. 프로세스가 시작되고, 1100 단계에서, 스토리지 장치(400, 예를 들어, 스토리지 컨트롤러)는 호스트 인터페이스 (제1 인터페이스라고도 함)를 통해 호스트(100, 컴퓨팅 디바이스라고도 함)로부터 제1 요청을 수신한다. 예를 들어, 제1 요청은 읽기 커맨드일 수 있다. 읽기 커맨드는 호스트에서 실행되는 애플리케이션에 의해 서브 미션 큐에 배치될 수 있으며, 요청을 수행하기 위해, 스토리지 컨트롤러에 의해 검색될 수 있다. 일부 실 시예들에서, 제1 요청은 읽을 데이터(예를 들어, 읽을 데이터의 논리 블록 주소(LBA)) 및 스토리지 장치 내의 메모리와 관련된 타겟 주소(반환 주소 또는 메모리 주소라고도 함)를 식별한다. 1102 단계에서, 스토리지 컨트롤러는 제1 요청에 기초하여(예를 들어, 제1 요청에 포함된 LBA에 기초하여) NVM으로부터 데이터를 검색한다. 일부 실시예들에서, 스토리지 컨트롤러는 데이터를 검색하기 위해 NVM 인터페이스와 상호 작용한다. 이와 관련하여, NVM 인터페이스는 데이터의 LBA를 대응하는 NVM 위 치(예컨대, 플래시 주소)로 변환할 수 있다. 검색된 데이터는 타겟 주소에 기초하여 메모리에 저장될 수 있다. 일부 실시예들에서, 스토리지 컨트롤러는 완료 메시지를 읽기 커맨드가 제출된 서브미션 큐와 연관 된 완료 큐로 전송한다. 1104 단계에서, 스토리지 컨트롤러는 프로세싱 요소로부터 제2 요청을 수신한다. 예를 들어, 프로세 싱 요소는 호스트로부터의 제3 요청에 대한 응답으로 제2 요청을 전송할 수 있다. 제3 요청은 데이터 를 사용하여 연산을 수행하기 위한 요청일 수 있다. 제2 요청은 네트워크 인터페이스를 통해 수신될 수 있다. 제2 요청은 데이터를 저장하는 메모리의 메모리 주소를 식별할 수 있다. 일부 실시예에서, 제2 요청은 데이터 통신 네트워크(예를 들어, NV링크 네트워크)를 통해 하나의 프로세싱 요소(110, 예컨대, GPU)에서 다른 프로세싱 요소로 전송되는 읽기 요청과 유사한 메모리 읽기 요청이다. 1106 단계에서, 네트워크 인터페이스는 메모리로부터 데이터를 검색하고, 검색된 데이터를 데이터 통 신 네트워크를 통해 요청 프로세싱 요소로 전송한다. 본 발명의 하나 이상의 실시예들은 하나 이상의 프로세서들(프로세싱 회로들이라고도 함)에서 구현될 수 있다. 프로세서라는 용어는 하나 이상의 프로세서들 및/또는 하나 이상의 프로세싱 코어들을 지칭할 수 있다. 하나 이 상의 프로세서는 단일 장치에서 호스팅되거나 여러 장치에 분산될 수 있다(예를 들어, 클라우드 시스템을 통 해). 프로세서는 ASIC(application specific integrated circuit), 범용 또는 특수 목적 중앙 처리 장치(CPU), 디지털 신호 프로세서(digital signal processor; DSP), 그래픽 처리 장치(GPU), 필드 프로그래머블 게이트 어 레이(field programmable gate array; FPGA)와 같은 프로그래머블 논리 장치를 포함할 수 있다. 여기서 사용되 는 프로세서에서, 각 기능은 해당 기능을 수행하도록 구성된(즉, 하드 와이어링된) 하드웨어 또는 비일시적 저 장 매체(예를 들어, 메모리)에 저장된 명령을 실행하도록 구성된 CPU와 같은 보다 범용적인 하드웨어에 의해 수 행된다. 프로세서는 단일 인쇄 회로 기판(PCB)에 제작되거나 여러 개의 상호 연결된 PCB에 분산되어 있을 수 있 다. 프로세서는 다른 프로세싱 회로를 포함할 수 있다; 예를 들어, 프로세싱 회로는 PCB 상에 상호 연결된 두 개의 프로세싱 회로, FPGA 및 CPU를 포함할 수 있다. \"제1\", \"제2\", \"제3\" 등의 용어가 다양한 요소들, 구성요소들, 영역들, 층들 및/또는 섹션들을 설명하기 위해 본 명세서에서 사용될 수 있지만, 이러한 요소들, 구성 요소들, 영역들, 층들 및/또는 섹션들은 이러한 용어들 에 의해 제한되어서는 안 된다는 것이 이해될 것이다. 이러한 용어들은 하나의 요소, 구성요소, 영역, 레이어 또는 섹션을 다른 요소, 구성요소, 영역, 레이어 또는 섹션과 구별하기 위해서만 사용된다. 따라서 본 명세서에 서 논의되는 제1 요소, 구성요소, 영역, 레이어 또는 섹션은 본 발명의 정신과 범위를 벗어나지 않는 범위 내에 서 제2 요소, 구성요소, 영역, 레이어 또는 섹션으로 불릴 수 있다. 본 명세서에서 사용된 용어는 특정 실시예를 설명하기 위한 목적으로만 사용되며, 본 발명의 개념을 제한하기 위한 것이 아니다. 또한, 명시적으로 언급되지 않는 한, 본원에 설명된 실시예들은 상호 배타적이지 않다. 본 명세서에 설명된 실시예의 양상은 일부 실시예에서 결합될 수 있다. 본 명세서에서 사용되는 단수형 용어는 문맥에서 달리 명시되지 않는 한 복수형도 포함하는 것으로 의도된다. 본 명세서에서 사용될 때, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는 명시된 특징, 정수, 단계, 연산, 요소 및/또는 구성 요소의 존재를 명시하지만, 하나 이상의 다른 특징, 정수, 단계, 연산, 요소, 구성 요소 및/또는 이들의 그룹의 존재 또는 추가를 배제하지 않는다는 것이 더 이해될 것이다. 여기서 사용되는 \"및/또는\"이라는 용어는 나열된 항목 중 하나 이상의 관련 항목의 모든 조합을 포함한다. 요소 목록 앞에 \"적어도 하나 이상의\" 와 같은 표현은 전체 요소 목록을 수정하며 목록의 개별 요소는 수정하지 않는다. 또한, 본 발명의 개념의 실시 예를 설명할 때 \"할 수 있다\"의 사용은 \"본 발명의 하나 이상의 실시예\"를 의미한다. 또한, \"예시적\"이라는 용 어는 예시 또는 일러스트레이션을 지칭하기 위한 것이다. 본 명세서에서 사용되는 '사용' 및 '이용'이라는 용어 는 '활용'이라는 용어와 동의어로 간주될 수 있다. 스토리지 장치와 프로세싱 요소 사이에서 데이터를 이동하기 위한 시스템 및 방법의 예시적인 실시예들이 본 명 세서에 구체적으로 설명되고 예시되었지만, 통상의 기술자에게는 많은 수정 및 변형이 명백할 것이다. 따라서, 본 발명의 원칙에 따라 구성된 스토리지 장치와 프로세싱 요소 사이에서 데이터를 이동하기 위한 시스템 및 방 법은 본 발명에 구체적으로 설명된 것 이외에 구현될 수 있다는 것을 이해해야 한다. 본 발명은 또한 이하의 청 구범위 및 이에 대응하는 청구범위에 정의될 수 있다. 스토리지 트랜잭션을 처리하기 위한 시스템 및 방법은 이하에 명시된 기능의 하나 이상의 조합을 포함할 수 있 다. 진술 1: 스토리지 장치에 있어서, 비휘발성 스토리지 매체; 컴퓨팅 장치와 통신하기 위한 제1 인터페이스; 제1 메모리를 포함하는 프로세싱 요소와 데이터 통신 네트워크를 통해 통신하기 위한 제2 인터페이스; 및 상기 제1 인터페이스, 상기 제2 인터페이스, 및 상기 비휘발성 스토리지 매체에 연결된 프로세싱 회로를 포함하되, 상기 프로세싱 회로는, 상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제1 메모리와 관련된 제1 메모리 주소를 식별하는 제1 요청을 수신하고; 상기 제1 요청에 기초하여, 상기 비휘발성 스토리지 매체로부터 제1 데 이터를 검색하고; 그리고, 상기 제1 메모리 주소에 기초하여 상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제2 인터페이스를 통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하도록 구성된다. 진술 2: 진술 1의 스토리지 장치에 있어서, 상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치 와 통신하도록 구성된다. 진술 3: 진술 1의 스토리지 장치에 있어서, 상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프 로세싱 요소와의 포인트-투-포인트(point-to-point) 통신을 위해 구성된다. 진술 4: 진술 3의 스토리지 장치에 있어서, 상기 데이터 통신 네트워크는 상기 제1 메모리 주소에 기초하여 상 기 프로세싱 요소로 상기 제1 데이터를 전송하기 위한 스위치를 포함한다. 진술 5: 진술 1의 스토리지 장치에 있어서, 상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함한다. 진술 6: 진술 1의 스토리지 장치에 있어서, 상기 프로세싱 회로는 상기 제1 메모리 주소와 관련된 조건을 식별 하는 것에 기초하여 상기 프로세싱 요소에 상기 제1 데이터를 전송하도록 더 구성된다. 진술 7: 진술 1의 스토리지 장치에 있어서, 제2 메모리를 더 포함하고, 상기 프로세싱 회로는, 상기 제1 인터페 이스를 통해, 상기 컴퓨팅 장치로부터 제2 요청을 수신하고; 처리된 제2 데이터를 생성하기 위한 상기 제2 요청 에 기초하여 제2 데이터를 처리하고; 상기 처리된 제2 데이터를 상기 제2 메모리에 저장하고; 상기 제1 인터페 이스를 통해, 상기 컴퓨팅 장치로부터 상기 제2 메모리와 관련된 제2 메모리 주소를 식별하는 제3 요청을 수신 하고; 그리고, 상기 제2 메모리 주소에 기초하여 상기 제1 메모리에 상기 제2 데이터를 저장하기 위해, 상기 처 리된 제2 데이터를 상기 제2 인터페이스를 통해, 상기 프로세싱 요소에 전송하도록 더 구성된다. 진술 8: 스토리지 장치에 있어서, 비휘발성 스토리지 매체; 메모리; 컴퓨팅 장치와 통신하기 위한 제1 인터페이 스; 프로세싱 요소와 데이터 통신 네트워크를 통해 통신하기 위한 제2 인터페이스; 및 상기 제1 인터페이스, 상 기 제2 인터페이스, 상기 비휘발성 스토리지 매체, 및 상기 메모리에 연결된 프로세싱 회로를 포함하되, 상기 프로세싱 회로는, 상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 메모리와 관련된 메모리 주소를 식별하는 제1 요청을 수신하고; 상기 제1 요청에 기초하여, 상기 비휘발성 메모리 장치로부터 데이터를 검색하 고, 상기 메모리 주소에 기초하여 상기 데이터를 상기 메모리에 저장하고; 상기 제2 인터페이스를 통해, 상기 데이터를 저장하는 상기 메모리 주소를 식별하는 제2 요청을 수신하고; 그리고, 상기 제2 요청에 기초하여, 상 기 메모리에서 상기 데이터를 검색하고, 상기 데이터 통신 네트워크를 통해, 상기 프로세싱 요소에 상기 데이터 를 전송하도록 구성된다. 진술 9: 진술 8의 스토리지 장치에 있어서, 상기 메모리는 상기 제2 인터페이스를 통해, 상기 데이터 통신 네트 워크에 노출된다. 진술 10: 진술 8의 스토리지 장치에 있어서, 상기 제1 요청은 제1 읽기 요청이고, 상기 제2 요청은 제2 읽기 요 청이다. 진술 11: 진술 8의 스토리지 장치에 있어서, 상기 제1 인터페이스는 데이터 통신 버스를 통해 상기 컴퓨팅 장치 와 통신하도록 구성된다. 진술 12: 진술 8의 스토리지 장치에 있어서, 상기 제2 인터페이스는 상기 데이터 통신 네트워크를 통한 상기 프 로세싱 요소와의 포인트-투-포인트(point-to-point) 통신을 위해 구성된다. 진술 13: 진술 12의 스토리지 장치에 있어서, 상기 데이터 통신 네트워크는 상기 메모리 주소에 기초하여, 상기 프로세싱 요소에 상기 데이터를 전송하기 위한 스위치를 포함한다. 진술 14: 진술 8의 스토리지 장치에 있어서, 상기 프로세싱 요소는 그래픽 처리 장치(GPU)를 포함한다. 진술 15: 진술 8의 스토리지 장치에 있어서, 상기 프로세싱 회로는 상기 컴퓨팅 장치로부터 상기 프로세싱 회로 에 의해 수신된 제3 요청에 응답하여, 상기 제2 요청을 전송하도록 구성되고, 상기 제3 요청은 상기 데이터를 사용하여 연산을 수행하기 위한 것이다. 진술 16: 스토리지 장치의 제1 인터페이스를 통해, 컴퓨팅 장치로부터 프로세싱 요소의 제1 메모리와 관련된 제 1 메모리 주소를 식별하는 제1 요청을 수신하는 단계; 상기 제1 요청에 기초하여, 상기 스토리지 장치의 비휘발 성 스토리지 매체로부터 제1 데이터를 검색하는 단계; 및 상기 제1 메모리에 상기 제1 데이터를 저장하기 위해, 상기 제1 메모리 주소에 기초하여, 상기 스토리지 장치의 제2 인터페이스를 통해, 상기 프로세싱 요소에 상기 제1 데이터를 전송하는 단계를 포함하는 방법.진술 17: 진술 16의 방법에 있어서, 상기 제1 인터페이스는 데이터 통신 버스를 통해, 상기 컴퓨팅 장치와 통신 한다. 진술 18: 진술 16의 방법에 있어서, 상기 제2 인터페이스는 데이터 통신 버스를 통해, 상기 컴퓨팅 장치와 통신 한다. 진술 19: 진술 16의 방법에 있어서, 상기 제1 메모리 주소와 관련된 조건을 식별하는 것에 기초하여, 상기 프로 세싱 요소에 상기 제1 데이터를 전송하는 단계를 더 포함한다. 진술 20: 진술 16의 방법에 있어서, 상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 제2 요청을 수신하는 단계; 처리된 제2 데이터를 생성하기 위한 상기 제2 요청에 기초하여, 제2 데이터를 처리하는 단계; 상기 처리 된 제2 데이터를 상기 스토리지 장치의 제2 메모리에 저장하는 단계; 상기 제1 인터페이스를 통해, 상기 컴퓨팅 장치로부터 상기 제2 메모리와 관련된 제2 메모리 주소를 식별하는 제3 요청을 수신하는 단계; 및 상기 제2 데 이터를 상기 제1 메모리에 저장하기 위해, 상기 제2 메모리 주소에 기초하여, 상기 처리된 제2 데이터를 상기 제2 인터페이스를 통해 상기 프로세싱 요소에 전송하는 단계를 더 포함한다."}
{"patent_id": "10-2024-0106684", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 실시예들의 비제한적이고 비배타적인 실시예들은 다음 도면을 참조하여 설명되며, 여기서 같은 참조 부호는 달리 명시되지 않는 한 다양한 도면들 전체에서 같은 부분을 지칭한다. 도 1은 하나 이상의 실시예들에 따른 컴퓨팅 환경의 블록도를 도시한 것이다. 도 2는 하나 이상의 실시예들에 따라 하나 이상의 스위치들 및/또는 라우터들을 통해 서로 연결된 다양한 프로 세싱 요소들의 블록도를 도시한다.도 3은 하나 이상의 실시예들에 따른 스토리지 장치의 블록도를 도시한다. 도 4는 하나 이상의 실시예들에 따른 스토리지 장치의 블록도를 도시한다. 도 5는 하나 이상의 실시예들에 따른 스토리지 장치의 또 다른 블록도를 도시한다. 도 6은 하나 이상의 실시예들에 따른 스토리지 장치에 저장된 데이터를 이동시키는 과정의 흐름도를 도시한다. 도 7은 하나 이상의 실시예들에 따라, 직접 메모리 액세스를 통해 스토리지 장치에 저장된 데이터를 프로세싱 요소로 이동하기 위한 신호 흐름을 도시한다. 도 8은 하나 이상의 실시예들에 따라, 스토리지 장치의 메모리를 노출하여 스토리지 장치에 저장된 데이터를 프 로세싱 요소로 이동하기 위한 신호 흐름을 도시한다. 도 9는 하나 이상의 실시예들에 따른 컴퓨팅 스토리지 장치에 저장된 데이터를 이동하기 위한 신호 흐름을 도시 한다. 도 10은 하나 이상의 실시예들에 따른 직접 메모리 액세스를 통해 스토리지 장치에 저장된 데이터를 프로세싱 요소로 이동시키는 프로세스의 흐름도이다. 도 11은 하나 이상의 실시예들에 따라, 스토리지 장치의 메모리를 노출하여, 스토리지 장치에 저장된 데이터를 프로세싱 요소로 이동하는 프로세스의 흐름도이다."}
