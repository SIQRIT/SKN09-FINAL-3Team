{"patent_id": "10-2022-0013725", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0109042", "출원번호": "10-2022-0013725", "발명의 명칭": "휠체어와 관련된 운동 정보 산출 방법 및 웨어러블 디바이스", "출원인": "삼성전자주식회사", "발명자": "김창훈"}}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "웨어러블 디바이스에 있어서,관성 센서;디스플레이;기준 신호를 저장하는 메모리; 및상기 관성 센서, 상기 디스플레이, 또는 상기 메모리 중 적어도 하나와 작동적으로 연결된 프로세서를포함하고, 상기 프로세서는,상기 관성 센서를 이용하여 가속도 데이터를 측정하고,상기 측정된 가속도 데이터를 상기 메모리의 가속도 버퍼에 저장하고,KLD(Kullback-Leivler divergence) 알고리즘을 통해 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하고, 상기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하고,상기 획득한 KLD 출력값이 상기 KLD 기준값 미만인 경우, 휠체어 밀기 동작으로 인식하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 프로세서는,상기 기준 신호의 크기만큼 상기 가속도 버퍼의 크기를 결정하고,상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장되었는지 판단하고,상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장된 경우, 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 프로세서는,상기 웨어러블 디바이스에 배치된 상기 관성 센서의 위치에 따라 설정된 축에 대응하는 가속도 데이터를 상기가속도 버퍼에 저장하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 프로세서는,상기 획득한 KLD 출력값에 기반하여 KLD 평균값을 산출하고,상기 측정된 가속도 데이터에 기반하여 가속도 분산값을 산출하고,상기 KLD 출력값, 상기 KLD 평균값 또는 상기 가속도 분산값 중 적어도 하나에 기반하여 상기 휠체어 밀기 동작을 인식하도록 설정된 웨어러블 디바이스.공개특허 10-2023-0109042-3-청구항 5 제4항에 있어서, 상기 프로세서는,상기 획득한 KLD 출력값을 KLD 버퍼에 저장하고,상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장되었는지 판단하고,상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장된 경우, 상기 KLD 버퍼에 저장된 KLD 출력값의 평균값을 산출하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 가속도 버퍼를 제1 가속도 버퍼라 하고,상기 프로세서는,상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하고,상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되었는지 판단하고,상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 가속도 분산값을 산출하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 프로세서는,상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 마지막 가속도 데이터를 상기제2 가속도 버퍼에 저장하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제4항에 있어서, 상기 프로세서는,상기 KLD 출력값, 상기 KLD 평균값 또는 상기 가속도 분산값 중 적어도 하나가 설정된 조건에 해당되는 경우,상기 휠체어 밀기 동작으로 인식하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 설정된 조건은 상기 KLD 출력값이 KLD 기준값 미만이고, 상기 KLD 평균값이 KLD 평균 임계치 미만이며, 상기 가속도 분산값이 분산 임계치를 초과하는 것 중 적어도 하나를 포함하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 가속도 버퍼를 제1 가속도 버퍼라 하고,공개특허 10-2023-0109042-4-상기 프로세서는,상기 휠체어 밀기 동작으로 인식되는 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에저장하고,상기 제2 가속도 버퍼에 저장된 가속도 데이터 중 설정된 개수의 가속도 데이터에 윈도우를 설정하고,상기 윈도우 내 가속도 피크(peak)를 검출하고,상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하고,상기 판단 결과에 기반하여 상기 휠체어 밀기 동작의 횟수를 카운트하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 프로세서는, 상기 윈도우 내 가속도 피크가 검출되는 경우, 상기 가속도 피크로 검출된 가속도 데이터를 식별하고,상기 윈도우 내 가속도 피크가 검출되지 않는 경우, 윈도우 인덱스를 추가하여 윈도우를 갱신하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 프로세서는,상기 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출하고,상기 가속도 데이터의 최소값에 기반하여 적응형 임계치를 결정하고,상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 프로세서는,상기 제2 가속도 버퍼에 새로운 가속도 데이터가 저장되거나, 또는 상기 윈도우를 갱신할 때마다 상기 적응형임계치를 변경하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 프로세서는,상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인 경우, 가속도 피크가 검출된 두윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단하고,가속도 피크가 검출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 상기 휠체어 밀기 동작의횟수를 카운트하도록 설정된 웨어러블 디바이스."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "웨어러블 디바이스의 동작 방법에 있어서,상기 웨어러블 디바이스에 포함된 관성 센서를 이용하여 가속도 데이터를 측정하는 동작;공개특허 10-2023-0109042-5-상기 측정된 가속도 데이터를 상기 웨어러블 디바이스에 포함된 메모리의 가속도 버퍼에 저장하는 동작;상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장되었는지 판단하는 동작;상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장된 경우, KLD 알고리즘을 통해 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하는 동작;상기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하는 동작; 및상기 획득한 KLD 출력값이 상기 KLD 기준값 미만인 경우, 휠체어 밀기 동작으로 인식하는 동작을 포함하는방법."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 인식하는 동작은,상기 획득한 KLD 출력값에 기반하여 KLD 평균값을 산출하는 동작;상기 측정된 가속도 데이터에 기반하여 가속도 분산값을 산출하는 동작;상기 KLD 출력값이 KLD 기준값 미만이고, 상기 KLD 평균값이 KLD 평균 임계치 미만이며, 상기 가속도 분산값이분산 임계치를 초과하는 것 중 적어도 하나에 해당되는 경우, 상기 휠체어 밀기 동작으로 인식하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 상기 KLD 평균값을 산출하는 동작은,상기 획득한 KLD 출력값을 KLD 버퍼에 저장하는 동작;상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장되었는지 판단하는 동작; 및상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장된 경우, 상기 KLD 버퍼에 저장된 KLD 출력값의 평균값을 산출하는동작을 포함하는 방법."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서, 상기 가속도 버퍼를 제1 가속도 버퍼라 하고,상기 가속도 분산값을 산출하는 동작은,상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하는 동작;상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되었는지 판단하는 동작; 및상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 가속도 분산값을 산출하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제16항에 있어서, 상기 가속도 버퍼를 제1 가속도 버퍼라 하고,상기 휠체어 밀기 동작으로 인식되는 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에공개특허 10-2023-0109042-6-저장하는 동작;상기 제2 가속도 버퍼에 저장된 가속도 데이터 중 설정된 개수의 가속도 데이터에 윈도우를 설정하는 동작;상기 윈도우 내 가속도 피크(peak)를 검출하는 동작;상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하는 동작; 및상기 판단 결과에 기반하여 상기 휠체어 밀기 동작의 횟수를 카운트하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2022-0013725", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 적응형 임계치 미만인지 판단하는 동작은,상기 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출하는 동작;상기 가속도 데이터의 최소값에 기반하여 상기 적응형 임계치를 결정하는 동작; 및상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 상기 적응형 임계치 미만인지 여부를 판단하는 동작을포함하고,상기 카운트하는 동작은,상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인 경우, 가속도 피크가 검출된 두윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단하는 동작; 및가속도 피크가 검출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 상기 휠체어 밀기 동작의횟수를 카운트하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 다양한 실시 예들은 관성 센서, 디스플레이, 기준 신호를 저장하는 메모리, 및 상기 관성 센서, 상기 디스플레이, 또는 상기 메모리 중 적어도 하나와 작동적으로 연결된 프로세서를 포함하고, 상기 프로세서는, 상 기 관성 센서를 이용하여 가속도 데이터를 측정하고, 상기 측정된 가속도 데이터를 상기 메모리의 가속도 버퍼에 저장하고, KLD(Kullback-Leivler divergence) 알고리즘을 통해 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하고, 상기 획득한 KLD 출력값을 KLD 기준 값 미만인지 여부를 판단하고, 상기 획득한 KLD 출력값이 상기 KLD 기준값 미만인 경우, 휠체어 밀기 동작으로 인식하도록 설정된 방법 및 장치에 관하여 개시한다. 다양한 실시 예들이 가능하다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 다양한 실시예들은 휠체어와 관련된 운동 정보 산출 방법 및 웨어러블 디바이스에 관하여 개시한다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "디지털 기술의 발달과 함께 이동통신 단말기, PDA(personal digital assistant), 전자수첩, 스마트 폰, 태블릿 PC(personal computer), 또는 웨어러블 디바이스(wearable device)와 같은 다양한 유형의 전자 장치가 널리 사 용되고 있다. 이러한, 전자 장치는 기능 지지 및 증대를 위해, 전자 장치의 하드웨어적인 부분 및/또는 소프트 웨어적인 부분이 지속적으로 개량되고 있다. 일례로, 웨어러블 디바이스와 같은 전자 장치는 사용자의 신체에 접촉(또는 착용) 가능한 것으로, 예를 들면 스 마트 워치, 스마트 글래스, 스마트 밴드와 같은 다양한 형태로 제공되고 있다. 웨어러블 디바이스는 사용자에 관한 다양한 정보(예: 생체, 활동)를 수집 및 분석하여 사용자에게 다양한 기능(예: 운동 정보, 건강 정보)를 제공할 수 있다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "종래의 웨어러블 디바이스는 걸음 수에 기반하여 운동 정보를 제공하고 있다. 따라서, 목발을 짚거나, 의족을 끼는 경우, 걸음 수에 기반하여 운동 정보를 제공하기 위해서는 운동 정보를 산출하기 위한 특별한 알고리즘이 필요할 수 있다. 더욱이, 휠체어를 타는 경우, 걸음 수에 기반한 운동 정보를 제공할 수 없으므로, 휠체어를 탄 사용자에게도 휠체어 사용과 관련된 운동 정보를 제공하기 위한 방안이 필요할 수 있다. 다양한 실시예들에서는, 웨어러블 디바이스에 포함된 가속도 센서에서 측정된 가속도 데이터의 확률 분포와 웨 어러블 디바이스에 미리 저장된 기준 신호의 확률 분포를 KLD(Kullback-Leivler divergence) 알고리즘을 통해 비교하여 KLD 출력값을 획득하고, 획득한 KLD 출력값에 기반하여 휠체어 밀기 동작으로 인식하고, 인식된 휠체어 밀기 동작의 횟수를 카운트함으로써, 휠체어와 관련된 운동 정보를 제공하는 방법 및 장치에 관하여 개시할 수 있다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 다양한 실시예들에 따른 웨어러블 디바이스는 관성 센서, 디스플레이, 기준 신호를 저장하는 메모리, 및 상기 관성 센서, 상기 디스플레이, 또는 상기 메모리 중 적어도 하나와 작동적으로 연결된 프로세서를 포함 하고, 상기 프로세서는, 상기 관성 센서를 이용하여 가속도 데이터를 측정하고, 상기 측정된 가속도 데이터를 상기 메모리의 가속도 버퍼에 저장하고, KLD(Kullback-Leivler divergence) 알고리즘을 통해 상기 측정된 가속 도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하고, 상 기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하고, 상기 획득한 KLD 출력값이 상기 KLD 기준값 미 만인 경우, 휠체어 밀기 동작으로 인식하도록 설정될 수 있다. 본 발명의 다양한 실시예들에 따른 웨어러블 디바이스의 동작 방법은 상기 웨어러블 디바이스에 포함된 관성 센 서를 이용하여 가속도 데이터를 측정하는 동작, 상기 측정된 가속도 데이터를 상기 웨어러블 디바이스에 포함된 메모리의 가속도 버퍼에 저장하는 동작, 상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장되었는지 판단 하는 동작, 상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장된 경우, KLD 알고리즘을 통해 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하는 동작, 상기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하는 동작, 및 상기 획득한 KLD 출력값이 상 기 KLD 기준값 미만인 경우, 휠체어 밀기 동작으로 인식하는 동작을 포함할 수 있다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예들에 따르면, KLD 알고리즘을 이용하여 웨어러블 디바이스에서 측정된 가속도 데이터의 확률 분포 와 기준 신호의 확률 분포를 비교함으로써, KLD 출력값에 기반하여 휠체어 밀기 동작으로 인식하고, 인식된 휠 체어 밀기 동작의 횟수를 카운트할 수 있다. 다양한 실시예들에 따르면, 휠체어 밀기 동작을 정형 동작으로 판단하고, 이외의 모든 동작을 비정형 동작으로 판단함으로써, 휠체어 밀기 동작의 검출 정확도를 향상시킬 수 있다. 다양한 실시예들에 따르면, KLD 알고리즘을 통해 획득한 KLD 출력값 뿐만 아니라, KLD 평균값과 가속도 분산값 을 더 이용함으로써, 휠체어 밀기 동작의 검출 정확성을 향상시킬 수 있다. 다양한 실시예들에 따르면, 걸음 수를 카운트하는 것뿐만 아니라, 휠체어 밀기 동작의 횟수를 카운트함으로써, 휠체어를 탄 사용자에 대해서도 휠체어와 관련된 운동 정보(예: 휠체어 밀기 횟수, 휠체어 밀기 시간)를 효율적 으로 제공할 수 있다."}
{"patent_id": "10-2022-0013725", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또 는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위해 사용될 수 있으며, 해 당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥 티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으 로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 도 1은 다양한 실시예들에 따른 웨어러블 디바이스의 블록도이다. 도 1을 참조하면, 웨어러블 디바이스는 메모리, 프로세서, 입력 모듈, 디스플레이 모듈 , 관성 센서, 통신 모듈, 마이크, 스피커, 충전 모듈, 배터리 및/또는 인 터페이스 중 적어도 하나를 포함할 수 있다. 웨어러블 디바이스는 네트워크(예: 근거리 무선 통신 네 트워크, 원거리 무선 통신 네트워크)를 통하여 외부 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 웨 어러블 디바이스는 상기 기재된 구성요소들 중 적어도 하나가 생략되거나, 하나 이상의 다른 구성요소(예: 카메라 모듈)가 추가될 수 있다. 입력 모듈 및 디스플레이 모듈은 하나의 모듈(예: 터치스크린)로 통 합될 수 있다. 메모리는 웨어러블 디바이스의 적어도 하나의 구성요소(예: 프로세서 또는 관성 센서)에 의해 사용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관 련된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비휘발 성 메모리를 포함할 수 있다. 상기 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운 영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 프로세서는 소프트웨어를 실행하여 프로세서에 연결된 웨어러블 디바이스의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서는 다른 구성요소(예:관성 센서 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메 모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따 르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으 로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 프로세서는 관성 센서를 이용하여 가속도 데이터(또는 가속도 값, 가속도 센싱값)를 측정하고, 측정 된 가속도 데이터를 가속도 버퍼(또는 제1 가속도 버퍼)에 저장하고, 상기 가속도 버퍼에 저장된 가속도 데이터 의 확률 분포와 기준 신호의 확률 분포를 비교하고, 상기 비교 결과를 KLD 출력값으로 획득하고, 상기 획득한 KLD 출력값에 기반하여 휠체어 밀기 동작을 인식할 수 있다. 상기 기준 신호는 메모리에 사전에 저장되며, 프로세서는 KLD 알고리즘을 이용하여 상기 측정된 가속도 데이터의 확률 분포와 기준 신호의 확률 분포를 비교할 수 있다. 프로세서는 상기 가속도 버퍼의 크기만큼 가속도 데이터가 저장되었는지 판단하고, 상기 가속도 버퍼의 크기만큼 가속도 데이터가 저장될 때까지 가속도 데이터를 측정하여 측정된 가속도 데이터를 상 기가속도 버퍼에 저장하는 동작을 반복 수행할 수 있다. 프로세서는 상기 KLD 출력값이 KLD 기준값 미만인 경우, 상기 휠체어 밀기 동작으로 인식하고, 상기 KLD 출력값이 상기 KLD 기준값 이상인 경우, 상기 휠체어 밀 기 동작이 아닌 것으로 인식할 수 있다. 다양한 실시예들에 따르면, 상기 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 프로세서는 KLD를 계산하고, KLD 출력값을 KLD 버퍼에 저장할 수 있다. 프로세서는 KLD 버퍼의 크기만큼 KLD 출력값이 저장 될 때까지 상기 가속도 버퍼에 저장된 가속도 데이터에 기반하여 KLD를 계산하고, KLD 출력값을 KLD 버퍼에 저 장하는 동작을 반복 수행할 수 있다. 프로세서는 KLD 버퍼의 크기만큼 KLD 출력값이 저장되면, KLD 버퍼에 저장된 KLD 출력값에 기반하여 KLD 평균값을 산출할 수 있다. 상기 가속도 버퍼의 크기만큼 가속도 데이터가 저 장된 경우, 프로세서는 상기 가속도 버퍼에 저장된 마지막 가속도 데이터를 식별하고, 식별된 가속도 데이 터를 제2 가속도 버퍼에 저장할 수 있다. 프로세서는 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장될 때까지 상기 가속도 버퍼에 저장된 마지막 가속도 데이터(예: 최신 가속도 데이터)를 식별하여 상기 제2 가속도 버퍼에 저장하는 동작을 반복 수행할 수 있다. 프로세서는 상기 제2 가속도 버퍼의 크기만큼 가속 도 데이터가 저장되면, 상기 제2 가속도 버퍼에 저장된 가속도 데이터에 기반하여 가속도 분산값을 산출할 수 있다. 다양한 실시예들에 따르면, 프로세서는 상기 KLD 출력값이 KLD 기준값 미만이고, 상기 산출한 KLD 평균값 이 KLD 평균 임계치 미만이며, 상기 산출한 가속도 분산값이 분산 임계치를 초과하는 경우, 휠체어 밀기 동작으 로 인식할 수 있다. 프로세서는 상기 KLD 출력값이 KLD 기준값 이상이거나, 상기 산출한 KLD 평균값이 KLD 평균 임계치 이상이거나, 또는 상기 산출한 가속도 분산값이 분산 임계치 이하인 것 중 적어도 하나에 해당하는 경우, 상기 휠체어 밀기 동작이 아닌 것으로 판단할 수 있다. 다양한 실시예들에 따르면, 프로세서는 휠체어 밀기 동작으로 인식되면, 상기 제2 가속도 버퍼에 저장된 가속도 데이터 중에서 설정된 개수의 가속도 데이터에 윈도우를 설정할 수 있다. 프로세서는 윈도우 내 가 속도 피크(peak)를 검출하고, 윈도우 내 가속도 피크가 검출되는 경우, 피크로 검출된 가속도 데이터를 반환(또 는 식별)할 수 있다. 프로세서는 윈도우 내 가속도 피크가 검출되지 않는 경우, 윈도우 인덱스를 추가하여 윈도우를 갱신할 수 있다. 프로세서는 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출하고, 상기 가속도 데이터의 최소값에 기반하여 적응형 임계치를 선정(또는 결정)할 수 있다. 다양한 실시예들에 따르면, 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인지 여부를 판단하고, 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인 경우, 가속도 피크로 검출된 두 개의 윈도 우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단할 수 있다. 프로세서는 가속도 피크로 검 출된 두 개의 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 휠체어 밀기 동작의 횟수를 카운트할 수 있다. 프로세서는 상기 반환된 가속도 데이터가 적응형 임계치 이상이거나, 또는 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 차이가 상기 인덱스 임계치 이하인 경우, 휠체어 밀기 동작을 카운트하지 않을 수 있다. 예를 들어, 웨어러블 디바이스가 메인 프로세서 및 보조 프로세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서 와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬 립) 상태에 있는 동안 메인 프로세서를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에있는 동안 메인 프로세서와 함께, 웨어러블 디바이스의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 관성 센서, 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으 로 관련 있는 다른 구성요소(예: 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델 이 수행되는 웨어러블 디바이스 자체에서 수행될 수 있고, 별도의 서버를 통해 수행될 수도 있다. 학습 알 고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경 망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포 함할 수 있다. 입력 모듈은 웨어러블 디바이스의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 웨어러 블 디바이스의 외부(예: 사용자)로부터 수신할 수 있다. 예를 들어, 입력 모듈은 마이크, 마우스, 키 보드, 키(예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 디스플레이 모듈은 웨어러블 디바이스의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 예 를 들어, 디스플레이 모듈은 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제 어 회로를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 관성 센서는 힘을 감지하는 센서로, 가속도(3축)와 Gyro(3축)을 합쳐 6축센서 라고도 할 수 있다. 또는, 관성 센서는 가속도 센서와 자이로 센서를 통합하여 게임 로테이션 벡터 센서(game rotation vector sensor)라 할 수 있다, 가속도 센서(accelerometer)는 물체의 가속도, 진동, 충격과 같은 동적 힘을 측정하는 센서일 수 있다. 상기 가속도 센서는 물체의 운동 상태를 감지할 수 있어, 다양한 용도로 활용될 수 있다. 웨어 러블 디바이스는 관성 센서에서 측정한 가속도 데이터에 기반하여 휠체어 밀기 동작을 인식할 수 있 다. 자이로 센서(gyroscope)는 물체의 각속도를 측정하는 센서일 수 있다. 상기 자이로 센서는 물체의 가속도를 측정하는 가속도 센서와 달리 물체의 각속도를 측정할 수 있다. 상기 각속도는 시간당 회전하는 속도(또는 각도)를 의미하는 것일 수 있다. 상기 자이로 센서는 자이로스코프(gyroscope)라고도 할 수 있다. 통신 모듈은 웨어러블 디바이스와 외부 전자 장치 또는 서버 간의 직접(예: 유선) 통신 채널 또는 무 선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서 (예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하 나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GPS(global positioning system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크 또는 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크를 통하여 외부 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정 보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 근거리 통신 네트워크 또는 원거리 통신 네트워크와 같은 통신 네트워크 내에서 웨어러블 디바이스를 확인 또는 인증할 수 있다. 마이크는 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예에 따 르면, 마이크는 소리(또는 오디오)를 획득하여 전기 신호로 변환시킬 수 있다. 스피커는 오디오(또는 음향) 신호를 웨어러블 디바이스의 외부로 출력할 수 있다. 스피커는 리 시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 충전 모듈은 웨어러블 디바이스에 공급되는 전력을 관리할 수 있다. 충전 모듈은 인터페이스 를 통해 수신되는 전력으로 배터리를 충전시킬 수 있다. 충전 모듈은 PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 웨어러블 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배 터리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 인터페이스는 웨어러블 디바이스가 외부 전자 장치(또는 충전기)와 직접 또는 무선으로 연결되기 위 해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는 HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터페이스, 또 는 오디오 인터페이스를 포함할 수 있다. 인터페이스는 웨어러블 디바이스가 외부 전자 장치와 물리 적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 서버를 통해서 웨어러블 디바이스와 외부 전자 장치 간에 송신 또 는 수신될 수 있다. 외부 전자 장치는 웨어러블 디바이스와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 웨어러블 디바이스에서 실행되는 동작들의 전부 또는 일부는 외부 전자 장치에서 실행될 수 있다. 예를 들면, 웨어러블 디바이스가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치 로부터의 요청에 반응하여 수행해야 할 경우에, 웨어러블 디바이스는 기능 또는 서비스를 자체적으로 실행 시키는 대신에 또는 추가적으로, 하나 이상의 외부 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 웨어러블 디바이 스로 전달할 수 있다. 웨어러블 디바이스는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요 청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또 는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 웨어러블 디바이스는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 웨어러블 디바이스는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스 마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 웨어러블 디바이스) 의해 읽을 수 있는 저장 매체 (storage medium)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어로서 구현될 수 있다. 예를 들면, 웨어 러블 디바이스의 프로세서는 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기 능을 수행하도록 운영되는 것을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또 는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적 (non-transitory) 저장 매체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매 체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 도 2는 다양한 실시예들에 따른 웨어러블 디바이스의 전면 사시도이고, 도 3은 다양한 실시예들에 따른 웨어러 블 디바이스의 후면 사시도를 도시한 도면이다. 도 2 및 3을 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)는 제1 면(또는 전면)(210A), 제2 면(또는 후면)(210B), 및 제1 면(210A) 및 제2 면(210B) 사이의 공간을 둘러싸는 측 면(210C)을 포함하는 하우징과, 하우징의 적어도 일부에 연결되고 웨어러블 디바이스를 사용자 의 신체(예: 손목, 발목 등)에 탈착 가능하게 하는 결착 부재(250, 260)를 포함할 수 있다. 다른 실시예(미도시)에서는, 하우징은, 도 2의 제1 면(210A), 제2 면(210B) 및 측면(210C)들 중 일부를 형성하는 구 조를 지칭할 수도 있다. 일 실시예에 따르면, 제1 면(210A)은 적어도 일부분이 실질적으로 투명한 전면 플레이트(예: 다양한 코팅 레이어들을 포함하는 글라스 플레이트, 또는 폴리머 플레이트)에 의하여 형성될 수 있다. 제2 면(210B)은 실질 적으로 불투명한 후면 플레이트에 의하여 형성될 수 있다. 후면 플레이트는, 예를 들어, 코팅 또는 착색된 유리, 세라믹, 폴리머, 금속(예: 알루미늄, 스테인레스 스틸(STS), 또는 마그네슘), 또는 상기 물질들 중 적어도 둘의 조합에 의하여 형성될 수 있다. 측면(210C)은, 전면 플레이트 및 후면 플레이트와 결 합하며, 금속 및/또는 폴리머를 포함하는 측면 베젤 구조 (또는 \"측면 부재\")에 의하여 형성될 수 있다. 어떤 실시예에서는, 후면 플레이트 및 측면 베젤 구조는 일체로 형성될 수 있고, 동일한 물질(예: 알 루미늄과 같은 금속 물질)을 포함할 수 있다. 결착 부재(250, 260)는 다양한 재질 및 형태로 형성될 수 있다. 직조물, 가죽, 러버, 우레탄, 금속, 세라믹, 또는 상기 물질들 중 적어도 둘의 조합에 의하여 일체형 및 복수의 단위 링크가 서로 유동 가능하도록 형성될 수 있다. 다양한 실시예들에 따르면, 웨어러블 디바이스는 디스플레이(예: 도 1의 디스플레이 모듈), 오 디오 모듈(205, 208), 센서 모듈(예: 도 1의 관성 센서), 키 입력 장치(202, 203, 204)(예: 도 1의 입력 모듈) 및 커넥터 홀 중 적어도 하나를 포함할 수 있다. 어떤 실시예에서는, 웨어러블 디바이스 는, 구성요소들 중 적어도 하나(예: 키 입력 장치(202, 203, 204), 커넥터 홀, 또는 센서 모듈 )를 생략하거나 다른 구성요소를 추가적으로 포함할 수 있다. 디스플레이는, 예를 들어, 전면 플레이트의 상당 부분을 통하여 노출될 수 있다. 디스플레이의 형태는, 전면 플레이트의 형태에 대응하는 형태일 수 있으며, 원형, 타원형, 또는 다각형 등 다양한 형태 일 수 있다. 디스플레이는, 터치 감지 회로, 터치의 세기(압력)를 측정할 수 있는 압력 센서, 및/또는 지 문 센서와 결합되거나 인접하여 배치될 수 있다. 오디오 모듈(205, 208)은, 마이크 홀 및 스피커 홀을 포함할 수 있다. 마이크 홀은 외부의 소리 를 획득하기 위한 마이크가 내부에 배치될 수 있고, 어떤 실시예에서는 소리의 방향을 감지할 수 있도록 복수개 의 마이크가 배치될 수 있다. 스피커 홀은, 외부 스피커 및 통화용 리시버로 사용할 수 있다. 센서 모듈은, 웨어러블 디바이스의 내부의 작동 상태, 또는 외부의 환경 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 센서 모듈은, 예를 들어, 하우징의 제2 면(210B)에 배치된 생체 센서 모듈(예: HRM 센서)을 포함할 수 있다. 웨어러블 디바이스는, 도시되지 않은 센서 모듈, 예를 들어, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서 중 적어도 하나를 더 포함할 수 있다. 키 입력 장치(202, 203, 204)는, 하우징의 제1 면(210A)에 배치되고 적어도 하나의 방향으로 회전 가능한 휠 키, 및/또는 하우징의 측면(210C)에 배치된 사이드 키 버튼(202, 203)을 포함할 수 있다. 휠 키는 전면 플레이트의 형태에 대응하는 형태일 수 있다. 다른 실시예에서는, 웨어러블 디바이스는 키 입력 장치(202, 203, 204)들 중 일부 또는 전부를 포함하지 않을 수 있고 포함되지 않은 키 입력 장치(202, 203, 204)는 디스플레이 상에 소프트 키 등 다른 형태로 구현될 수 있다. 커넥터 홀은, 외부 전자 장치와 전력 및/또는 데이터를 송수신하기 위한 커넥터(예를 들어, USB 커넥터)를 수용할 수 있고 외부 전자 장치와 오 디오 신호를 송수신하기 위한 커넥터를 수용할 수 있는 다른 커넥터 홀(미도시))을 포함할 수 있다. 웨어러블 디바이스는, 예를 들면, 커넥터 홀의 적어도 일부를 덮고, 커넥터 홀에 대한 외부 이물질의 유입을 차단하는 커넥터 커버(미도시)를 더 포함할 수 있다. 결착 부재(250, 260)는 락킹 부재(251, 261)를 이용하여 하우징의 적어도 일부 영역에 탈착 가능하도록 결 착될 수 있다. 결착 부재(250, 260)는 고정 부재, 고정 부재 체결 홀, 밴드 가이드 부재, 밴드 고정 고리 중 하나 또는 그 이상을 포함할 수 있다. 고정 부재는 하우징과 결착 부재(250, 260)를 사용자의 신체 일부(예: 손목, 발목 등)에 고정시키도 록 구성될 수 있다. 고정 부재 체결 홀은 고정 부재에 대응하여 하우징과 결착 부재(250, 260) 를 사용자의 신체 일부에 고정시킬 수 있다. 밴드 가이드 부재는 고정 부재가 고정 부재 체결 홀 과 체결 시 고정 부재의 움직임 범위를 제한하도록 구성됨으로써, 결착 부재(250, 260)가 사용자의 신체 일부에 밀착하여 결착되도록 할 수 있다. 밴드 고정 고리는 고정 부재와 고정 부재 체결 홀 이 체결된 상태에서, 결착 부재(250,260)의 움직임 범위를 제한할 수 있다. 도 4는 다양한 실시예들에 따른 휠체어 밀기 동작과 관련된 가속도 데이터를 나타낸 도면이다. 도 4를 참조하면, 휠체어 밀기 동작은 크게 4가지로 분류될 수 있다. 예를 들어, 휠체어 밀기 동작 분류는 휠체어 밀기 동작에 따른 손의 움직임을 도시한 것으로, 좌측 방향으로 휠체어가 움직이는 상황을 도시한 것일수 있다. 휠체어 밀기 동작은 ① 휠체어 손잡이를 잡는 동작(holding), ② 휠체어 바퀴를 미는 동작(pushing), ③ 휠체어 손잡이에서 손을 떼는 동작(releasing), ④ 손을 회수하는 동작(recovery)을 포함할 수 있다. 발명의 설명을 위해 네가지 동작으로 분류하고 있지만, 구현에 따라 네가지 동작 보다 많거나, 적은 동작으로 분류할 수도 있다. 아래에서는, 사용자가 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)를 착용한 상태에서 휠체어를 탈 때 검출될 수 있는 가속도 특징에 대해 설명할 수 있다. ①손잡이를 잡는 동작은 휠체어를 회전하기 위해 바퀴를 잡는 동작으로써, 사용자의 손이 바퀴에 닿아 정지함에 따라 웨어러블 디바이스는 가속도를 받으며, 손을 회수하는 동작과 이어지는 경우 손의 움직이는 방향이 바뀌며 큰 가속도가 발생할 수 있다. 잡는 동작은 가속도 데이터가 피크 형태로 발생될 수 있다. ② 바퀴를 미는 동작은 휠체어 바퀴를 직접적으로 회전하는 동작으로써, 지속적으로 속도는 증가할 수 있지만 가속도는 크게 발생하지 않아 피크는 생기지 않을 수 있다. 2번 동작의 경우 휠체어의 미는 속도에 따라 바퀴를 미는 동작의 길이가 변화할 수 있다. ③ 손을 떼는 동작은 사용자의 손이 휠체어의 전진 방향에서 반대 방향으로 바뀌게 되는 동작으로, 2번 동작을 수행함에 따라 증가된 속도가 일시에 정지하며 큰 가속도가 발생할 수 있다. 이에 따라 전체 밀기 동작을 수행 하는 가속도 중 가장 큰 피크가 발생할 수 있다. ④ 손을 회수하는 동작은 사용자가 손을 때는 동작 수행 후 휠체어 전진 반대 방향으로 손이 회수되는 동작으로 방향의 변화가 없이 발생하기 때문에 큰 피크 동작은 발생하지 않을 수 있다. 그래프는 휠체어 밀기 동작을 수행했을 때 발생하는 가속도 데이터를 도시한 것이다. 그래프를 보면, 휠체어 밀기 동작 분류에 대응하는 ①②③④에 따라 가속도 특징이 다르게 나타나고, 가속도 특징이 반복 되어 발생하는 것을 확인할 수 있다. 그래프에서, ③ 손을 떼는 동작은 가속도 데이터에서 가장 큰 피크가 발생하는 동작(451, 455)이고, ① 손잡이를 잡는 동작은 가속도 데이터에서 가장 작은 피크가 발생하는 동작 (453, 457)으로 표기된 것일 수 있다. 다양한 실시예들에 따르면, 휠체어 밀기 동작 분류에 따른 가속도 특성은 사용자의 손끝 방향과 일치하는 가속도 센서의 축에서 더욱 뚜렷하게 나타날 수 있다. 사용자의 손끝 방향과 일치하는 가속도 센서의 축은 가속 도 센서(예: 도 1의 관성 센서)가 웨어러블 디바이스에 배치된 위치에 따라 달라질 수 있다. 본 발명 에서는 사용자의 손끝 방향과 일치하는 가속도 센서의 축을 'x축'으로 설정하고, x축의 가속도 데이터에 기반하 여 휠체어 밀기 동작을 인식할 수 있다. 다만, 가속도 센서가 웨어러블 디바이스에 배치된 위치에 따라 휠 체어 밀기 동작에 사용하는 가속도 센서의 축은 y축 또는 z축이 될 수도 있다. 다양한 실시예들에 따르면, 사용자는 웨어러블 디바이스를 왼손 또는 오른손에 착용할 수 있다. 사용자가 웨어러블 디바이스를 왼손 또는 오른손에 착용함에 따라 가속도 센서의 x축은 +방향 또는 -방향으로 구분 될 수 있다. 가속도 센서의 x축에서 측정된 가속도 데이터가 -값을 가지는 경우 x축의 부호 반전을 이용하여 휠 체어 밀기 동작을 인식할 수 있다. 웨어러블 디바이스는 휠체어 밀기 동작에 따라 가속도 센서에서 측정된 가속도 데이터를 KLD(Kullback- Leivler divergence) 알고리즘의 입력으로 사용하여 휠체어 밀기 동작을 인식하고, 휠체어 밀기 동작으로 인식 된 이후 측정된 가속도 데이터에 기반하여 휠체어 밀기 동작의 횟수를 카운트할 수 있다. 본 발명의 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)는 관성 센서(예: 도 1의 관성 센서), 디스플레이(예: 도 1의 디스플레이 모듈), 기준 신호를 저장하는 메모리(예: 도 1의 메모리), 및 상기 관성 센서, 상기 디스플레이, 또는 상기 메모리 중 적어도 하나와 작동적으로 연결된 프 로세서(예: 도 1의 프로세서)를 포함하고, 상기 프로세서는, 상기 관성 센서를 이용하여 가속도 데이터를 측정하고, 상기 측정된 가속도 데이터를 상기 메모리의 가속도 버퍼에 저장하고, KLD(Kullback-Leivler divergence) 알고리즘을 통해 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확 률 분포를 비교하여 KLD 출력값을 획득하고, 상기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하고, 상기 획득한 KLD 출력값이 상기 KLD 기준값 미만인 경우, 휠체어 밀기 동작으로 인식하도록 설정될 수 있다. 상기 프로세서는, 상기 기준 신호의 크기만큼 상기 가속도 버퍼의 크기를 결정하고, 상기 가속도 버퍼의 크기만 큼 상기 가속도 데이터가 저장되었는지 판단하고, 상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장된 경우, 상기 측정된 가속도 데이터의 확률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하도록 설 정될 수 있다.상기 프로세서는, 상기 웨어러블 디바이스에 배치된 상기 관성 센서의 위치에 따라 설정된 축에 대응하는 가속 도 데이터를 상기 가속도 버퍼에 저장하도록 설정될 수 있다. 상기 프로세서는, 상기 획득한 KLD 출력값에 기반하여 KLD 평균값을 산출하고, 상기 측정된 가속도 데이터에 기 반하여 가속도 분산값을 산출하고, 상기 KLD 출력값, 상기 KLD 평균값 또는 상기 가속도 분산값 중 적어도 하나 에 기반하여 상기 휠체어 밀기 동작을 인식하도록 설정될 수 있다. 상기 프로세서는, 상기 획득한 KLD 출력값을 KLD 버퍼에 저장하고, 상기 KLD 버퍼의 크기만큼 KLD 출력값이 저 장되었는지 판단하고, 상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장된 경우, 상기 KLD 버퍼에 저장된 KLD 출력 값의 평균값을 산출하도록 설정될 수 있다. 상기 가속도 버퍼를 제1 가속도 버퍼라 하고, 상기 프로세서는, 상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하고, 상기 제2 가속도 버퍼의 크기만 큼 가속도 데이터가 저장되었는지 판단하고, 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 가속도 분산값을 산출하도록 설정될 수 있다. 상기 프로세서는, 상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 마지막 가속 도 데이터를 상기 제2 가속도 버퍼에 저장하도록 설정될 수 있다. 상기 프로세서는, 상기 KLD 출력값, 상기 KLD 평균값 또는 상기 가속도 분산값 중 적어도 하나가 설정된 조건에 해당되는 경우, 상기 휠체어 밀기 동작으로 인식하도록 설정될 수 있다. 상기 설정된 조건은 상기 KLD 출력값이 KLD 기준값 미만이고, 상기 KLD 평균값이 KLD 평균 임계치 미만이며, 상 기 가속도 분산값이 분산 임계치를 초과하는 것 중 적어도 하나를 포함하도록 설정될 수 있다. 상기 가속도 버퍼를 제1 가속도 버퍼라 하고, 상기 프로세서는, 상기 휠체어 밀기 동작으로 인식되는 경우, 상 기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하고, 상기 제2 가속도 버퍼에 저장된 가 속도 데이터 중 설정된 개수의 가속도 데이터에 윈도우를 설정하고, 상기 윈도우 내 가속도 피크(peak)를 검출 하고, 상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하고, 상기 판단 결과에 기반하여 상기 휠체어 밀기 동작의 횟수를 카운트하도록 설정될 수 있다. 상기 프로세서는, 상기 윈도우 내 가속도 피크가 검출되는 경우, 상기 가속도 피크로 검출된 가속도 데이터를 식별하고, 상기 윈도우 내 가속도 피크가 검출되지 않는 경우, 윈도우 인덱스를 추가하여 윈도우를 갱신하도록 설정될 수 있다. 상기 프로세서는, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출하고, 상기 가속도 데이터의 최소값에 기반하여 적응형 임계치를 결정하고, 상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하도록 설정될 수 있다. 상기 프로세서는, 상기 제2 가속도 버퍼에 새로운 가속도 데이터가 저장되거나, 또는 상기 윈도우를 갱신할 때 마다 상기 적응형 임계치를 변경하도록 설정될 수 있다. 상기 프로세서는, 상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인 경우, 가속도 피크가 검출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단하고, 가속도 피크가 검 출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 상기 휠체어 밀기 동작의 횟수를 카운트하 도록 설정될 수 있다. 도 5는 다양한 실시예들에 따른 웨어러블 디바이스의 동작 방법을 도시한 흐름도이다. 도 5를 참조하면, 동작 501에서, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스 )의 프로세서(예: 도 1의 프로세서)는 가속도 센서(예: 도 1의 관성 센서)를 이용하여 가속도 데이터(또는 가속도 값, 가속도 센싱값)를 측정할 수 있다. 휠체어 밀기 동작에 따른 가속도 특성은 사용자의 손끝 방향과 일치하는 관성 센서의 축에서 더욱 뚜렷하게 나타날 수 있다. 사용자의 손끝 방향과 일치하는 관성 센서의 축은 관성 센서가 웨어러블 디바이스에 배치된 위치에 따라 달라질 수 있다. 프로 세서는 관성 센서에서 측정된 가속도 데이터 중에서 사용자의 손끝 방향과 일치하는 'x축'의 가속도 데이터를 식별(또는 추출)할 수 있다. 관성 센서에서 측정된 가속도 데이터는 x축, y축, z축의 가속도 데 이터를 포함하고, 프로세서는 휠체어 밀기 동작을 인식하기 위해 y축, z축의 가속도 데이터를 사용하지 않 고, x축의 가속도 데이터만을 사용할 수 있다. 관성 센서가 웨어러블 디바이스에 배치된 위치에 따라휠체어 밀기 동작에 사용하는 가속도 센서의 축은 y축 또는 z축이 될 수도 있다. 이하에서는 x축을 이용하는 것으로 설명하지만, 설명에 의해 본 발명이 제한되는 것은 아니다. 동작 503에서, 프로세서는 측정된 가속도 데이터를 가속도 버퍼(또는 제1 가속도 버퍼)에 저장할 수 있다. 상기 제1 가속도 버퍼는 관성 센서에서 실시간으로 측정된 가속도 데이터가 저장될 수 있다. 프로세서 는 측정된 가속도 데이터(예: 로우(raw) 데이터)를 처리(예: 필터링)하여 상기 제1 가속도 버퍼에 저장할 수 있다. 상기 제1 가속도 버퍼의 크기가 120인 경우, 프로세서는 120개의 가속도 데이터를 측정된 순서대 로 상기 제1 가속도 버퍼에 저장할 수 있다. 프로세서는 상기 제1 가속도 버퍼의 크기만큼 가속도 데이터 가 저장될 때까지 동작 501 및 동작 503을 반복 수행할 수 있다. 프로세서는 상기 제1 가속도 버퍼의 크기 만큼 가속도 데이터가 모두 저장된 경우, 동작 505를 수행할 수 있다. 도면에서는 동작 501과 동작 503을 구분 하여 설명하고 있지만, 프로세서는 동작 501 및 동작 503을 하나의 동작으로 수행하여, 가속도 데이터가 측정될 때마다 상기 제1 가속도 버퍼에 측정된 가속도 데이터를 저장할 수 있다. 동작 505에서, 프로세서는 상기 측정된 가속도 데이터의 확률 분포와 기준 신호의 확률 분포를 비교할 수 있다. 프로세서는 상기 측정된 가속도 데이터가 휠체어 밀기 동작에 해당되는지 판단하기 위해 확률 분포 비교 방법, 예를 들어, KLD 알고리즘을 사용할 수 있다. 휠체어 밀기 동작을 수행할 때 발생하는 신호적 특징이 동일하게 발생하는 점을 이용해서, 사전에 휠체어 밀기 동작(예: ①②③④)을 1회 수행할 때 발생하는 가속도 데이터를 기준 신호로 정의할 수 있다. 정의된 기준 신호의 확률 분포를 kernel 함수를 이용해서 계산하고, 계 산된 기준 신호를 웨어러블 디바이스의 메모리(예: 도 1의 메모리)에 미리 저장할 수 있다. 상기 기 준 신호는 상기 측정된 가속도 데이터가 휠체어 밀기 동작에 해당되는지 판단하기 위한 기준 값이 될 수 있다. 다양한 실시예들에 따르면, 확률 분포 비교 방법을 사용하기 위해서, 상기 기준 신호가 저장된 크기만큼 상기 제1 가속도 버퍼의 크기가 설정될 수 있다. 예를 들어, 상기 기준 신호가 120개 저장된 경우, 상기 제1 가속도 버퍼의 크기도 120개의 가속도 데이터가 저장될 수 있도록 설정되고, 상기 기준 신호가 150개 저장된 경우, 상 기 제1 가속도 버퍼의 크기도 150개의 가속도 데이터가 저장될 수 있도록 설정될 수 있다. 동작 507에서, 프로세서는 상기 비교 결과를 KLD 출력값으로 획득할 수 있다. 예를 들어, 프로세서는 KLD 알고리즘을 이용하여 상기 제1 가속도 버퍼에 저장된 120개의 가속도 데이터(예: 첫번째 측정된 가속도 데 이터부터 120번째 측정된 가속도 데이터)의 확률 분포와 120개의 기준 신호의 확률 분포를 비교하여 하나의 KLD 출력값을 획득할 수 있다. KL-divergence는 상기 측정된 가속도 데이터의 확률 분포와 기준 신호의 확률 분포 간의 information entropy 차이로 고려될 수 있다. 계산한 KL-divergence(예: KLD 출력값)가 큰 값을 가지면 information entropy 차이가 크다는 것을 의미하며 이는 상기 측정된 가속도 데이터의 확률 분포와 기준 신호의 확률 분포 간의 유사성이 적다는 것을 의미할 수 있다. 반대로, KL-divergence가 작은 값을 가지면 information entropy 차이가 적다는 것을 의미하며, 이는 상기 측정된 가속도 데이터의 확률 분포와 기준 신호의 확률 분포 가 유사한 확률 분포를 가진다는 것을 의미한다. KLD 알고리즘은 공지 기술에 해당하므로, 자세한 설명을 생략 할 수 있다. 동작 509에서, 프로세서는 상기 획득한 KLD 출력값에 기반하여 휠체어 밀기 동작을 인식할 수 있다. 프로 세서는 상기 획득한 KLD 출력값이 KLD 기준값 미만이면, 상기 측정된 가속도 데이터와 상기 기준 신호의 유사도가 큰 것으로 판단하여 휠체어 밀기 동작으로 인식할 수 있다. 프로세서는 상기 획득한 KLD 출력값 이 KLD 기준값 이상이면, 상기 측정된 가속도 데이터와 상기 기준 신호의 유사도가 작은 것으로 판단하여 휠체 어 밀기 동작으로 인식하지 않을 수 있다. KLD 기준값은 두 확률 분포의 유사도를 KLD로 판단하기 위한 임계치 를 의미할 수 있다. 상기 KLD 기준값은 메모리에 사전에 저장될 수 있다. 본 발명은 휠체어 밀기 동작을 인식하기 위한 것으로, 휠체어 밀기 동작이 아닌 경우(예: 걷기, 달리기 등), 비정형 동작으로 판단할 수 있다. 동작 509에서 휠체어 밀기 동작이 아닌 것으로 판단되는 경우, 프로세서는 상기 비정형 동작에 따른 운동 정보(예: 걸음 수, 걷는 시간, 달리는 시간 등)를 획득하기 위한 알고리즘을 수행할 수 있다. 걸음 수 산출, 걷 는 시간 산출 또는 달리는 시간 산출과 같은 동작은 종래 기술에 해당하므로, 자세한 설명을 생략할 수 있다. 동작 509에서 휠체어 밀기 동작으로 인식되는 경우, 프로세서는 동작 501 내지 동작 509를 반복적으로 수 행하여 새롭게 측정된 가속도 데이터(예: 두번째 측정된 가속도 데이터부터 121번째 측정된 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 휠체어 밀기 동작을 판단할 수 있다. 또한, 프로세서는 휠 체어 밀기 동작으로 인식되는 경우, 도 10의 동작을 수행하여 휠체어 밀기 동작의 횟수를 카운트할 수 있다. 도 6은 다양한 실시예들에 따른 시간에 따라 가속도 버퍼에 가속도 데이터를 저장하는 일례를 도시한 도면이다. 도 6을 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 프로세서 (예: 도 1의 프로세서)는 가속도 센서(예: 도 1의 관성 센서)를 이용하여 가속도 데이터(또는 가속도 값, 가속도 센싱값)를 측정할 수 있다. 제1 도면 부호를 참조하면, 프로세서는 시간 순서(예: 시간 인덱스)에 따라 실시간으로 측정된 가속도 데이터를 가속도 버퍼(또는 제1 가속도 버퍼)에 저장할 수 있다. 예를 들어, 시간 인덱스에서 첫번째 시간에 측정된 첫번째 가속도 데이터를 가속도 버퍼에 저장하고, 두번째 시간에 측정된 두번째 가속도 데이터를 가속도 버퍼에 저장할 수 있다. 프로세서 는 가속도 버퍼의 크기(예: 120)만큼 가속도 데이터가 저장될 때까지 가속도 데이터를 계속 측정하여 가속도 버퍼에 저장하고, 가속도 버퍼의 크기만큼 가속도 데이터가 저장되면, 가속도 버퍼에 저장된 가속도 데이터(예: 첫번째 가속도 데이터부터 120번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 첫번째 KLD 출력값을 획득할 수 있다. 제2 도면 부호를 참조하면, 121번째 새로운 시간 인덱스에 따라 121번째 가속도 데이터가 가속도 버 퍼에 저장되며, 프로세서는 가속도 버퍼에 저장된 가속도 데이터(예: 두번째 가속도 데이터부터 121 번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 두번째 KLD 출력값을 획득할 수 있다. 이후 시간 인덱스가 122번째인 경우, 122번째 가속도 데이터가 가속도 버퍼에 저장되며, 프로세서 는 가속도 버퍼에 저장된 가속도 데이터(예: 세번째 가속도 데이터부터 122번째 가속도 데이터)의 확률 분 포를 기준 신호의 확률 분포와 비교하여 세번째 KLD 출력값을 획득할 수 있다. 프로세서는 관성 센서의 샘플링 시간(sampling time)에 맞추어 가속도 버퍼에 새로운 가속도 데 이터를 저장하고, 가속도 버퍼는 지속적으로 갱신될 수 있다. 예를 들어 100Hz로 가속도 데이터를 샘플링 한다면, 가속도 데이터가 측정될 때마다 가속도 버퍼는 가장 최신의 가속도 데이터를 저장하고, 가장 오래 된 가속도 데이터를 제거하며 갱신을 지속할 수 있다. 도 7은 다양한 실시예들에 따른 웨어러블 디바이스의 휠체어 밀기 동작을 인식하는 방법을 도시한 흐름도 이다. 도 7을 참조하면, 동작 701에서, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스 )의 프로세서(예: 도 1의 프로세서)는 제1 가속도 버퍼(예: 도 6의 가속도 버퍼)의 크기만큼 가 속도 데이터가 저장되었는지 판단할 수 있다. KLD 알고리즘을 이용한 확률 분포 비교 방법을 이용하기 위해서는 기준 신호의 크기만큼 실시간으로 측정된 가속도 데이터가 필요할 수 있다. 프로세서는 기준 신호의 크기 만큼 제1 가속도 버퍼의 크기를 정할 수 있다. 예를 들어, 기준 신호의 크기가 100인 경우, 제1 가속도 버퍼의 크기도 100으로 설정하고, 기준 신호의 크기가 120인 경우, 제1 가속도 버퍼의 크기도 120으로 설정할 수 있다. 상기 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있지 않은 경우, 기준 신호와의 확률 분포 비교가 불가할 수 있다. 프로세서는 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 동작 703을 수행 하고, 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있지 않은 경우, 도 5의 동작 501로 리턴할 수 있 다. 프로세서는 동작 501로 리턴하는 경우, 가속도 데이터를 측정하여 측정된 가속도 데이터를 제1 가속도 버 퍼에 저장하는 동작을 반복 수행할 있다. 프로세서는 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장될 때까지 가속도 데이터를 측정하여 측정된 가속도 데이터를 제1 가속도 버퍼에 저장하는 동작을 반복 수행할 수 있다. 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장된 경우, 동작 703에서, 프로세서는 KLD를 계산하고, 가 속도 데이터를 식별할 수 있다. 프로세서는 KLD 알고리즘을 통해 상기 제1 가속도 버퍼에 저장된 가속도 데이터(예: 첫번째 가속도 데이터부터 120번째 가속도 데이터)의 확률 분포와 메모리(예: 도 1의 메모리) 에 저장된 기준 신호(120개의 기준 신호)의 확률 분포를 비교하여 KLD를 계산할 수 있다. 상기 계산된 비교값이 KLD 출력값일 수 있다. 또한, 프로세서는 상기 제1 가속도 버퍼에 마지막으로 저장된 가속도 데이터를 식 별할 수 있다. 이하, 동작 705 내지 동작 709는 동작 706 내지 710과 동시에 수행될 수 있다. 다양한 실시예들에 따르면, 프로세서는 KLD 출력값을 이용하여 휠체어 밀기 동작을 인식할 수 있지만, 휠 체어 밀기 동작의 정확성을 높이기 위하여, KLD 평균값 또는 가속도 분산값을 더 이용할 수 있다. 이를 위해, 프로세서는 도 7의 동작을 더 수행할 수 있다. 먼저, KLD 평균값을 계산하는 동작부터 설명하기로 한다. 설명에 의해 본 발명이 제한되는 것은 아니다. 동작 705에서, 프로세서는 KLD 출력값을 KLD 버퍼에 저장할 수 있다. 상기 KLD 출력값은 상기 제1 가속도 버퍼가 갱신될 때마다 계산되어 KLD 버퍼에 저장될 수 있다. 상기 KLD 버퍼의 크기는 상기 제1 가속도 버퍼의 크기와 동일하거나, 또는 상이할 수 있다. 예를 들어, 상기 KLD 버퍼의 크기는 상기 제1 가속도 버퍼의 크기보 다 클 수 있다. 상기 제1 가속도 버퍼의 크기가 100인 경우, 상기 KLD 버퍼의 크기는 120일 수 있다. 또는, 상 기 제1 가속도 버퍼의 크기가 120인 경우, 상기 KLD 버퍼의 크기는 150일 수 있다. 동작 707에서, 프로세서는 KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있는지 판단할 수 있다. 상기 제1 가속도 버퍼의 크기가 120이고, 120번째 가속도 데이터가 상기 제1 가속도 버퍼에 저장되면 프로세서는 동 작 703을 수행하여 첫번째 KLD 출력값이 획득될 수 있다. 프로세서는 획득한 첫번째 KLD 출력값을 KLD 버 퍼에 저장하고, KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있는지 판단할 수 있다. 프로세서는 KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있는 경우, 동작 709를 수행하고, KLD 버퍼의 크 기만큼 KLD 출력값이 저장되어 있지 않은 경우, 동작 721을 수행할 수 있다. KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있지 않은 경우, 동작 721에서, 프로세서는 새로운 가속도 데 이터(예: 121번째 가속도 데이터)를 측정하고, 측정된 가속도 데이터를 상기 제1 가속도 버퍼에 저장할 수 있다. 동작 721을 수행하면, 프로세서는 동작 703으로 리턴하여, 상기 제1 가속도 버퍼에 저장된 가속도 데이터(예: 두번째 가속도 데이터부터 121번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하 여 두번째 KLD 출력값을 획득할 수 있다. 프로세서는 703을 수행한 후 동작 705를 수행하여 획득한 두번째 KLD 출려값을 KLD 버퍼에 저장하고, 동작 707을 수행하여 KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있는지 여부를 판단할 수 있다. 프로세서는 KLD 버퍼의 크기만큼 KLD 출력값이 저장될 때까지 동작 703, 705, 707, 721을 반복적으로 수행할 수 있다. KLD 버퍼의 크기만큼 KLD 출력값이 저장되어 있는 경우, 동작 709에서, 프로세서는 KLD 출력값에 기반하여 KLD 평균값을 산출할 수 있다. 상기 KLD 버퍼의 크기가 150인 경우, 프로세서는 150개의 KLD 출력값의 평 균값을 산출할 수 있다. 프로세서는 KLD 평균값을 산출한 후 동작 711을 수행할 수 있다. 가속도 분산값을 계산하는 동작을 설명하기로 한다. 동작 706에서, 프로세서는 식별된 가속도 데이터를 제2 가속도 버퍼에 저장할 수 있다. 상기 제2 가속도 버퍼는 상기 제1 가속도 버퍼와 유사하게 가속도 데이터가 저장될 수 있다. 차이점은, 상기 제2 가속도 버퍼에 는 상기 제1 가속도 버퍼의 크기만큼 저장한 후, 상기 제1 가속도 버퍼에 저장된 마지막 가속도 데이터가 저장 될 수 있다. 상기 제1 가속도 버퍼의 크기(예: 120)만큼 가속도 데이터를 저장한 경우, 120번째 가속도 데이터 가 상기 제1 가속도 버퍼에 저장된 마지막 가속도 데이터일 수 있다. 프로세서는 동작 703에서 상기 제1 가속도 버퍼에 저장된 마지막 가속도 데이터를 식별하여 상기 식별된 가속도 데이터를 상기 제2 가속도 버퍼에 저장할 수 있다. 동작 708에서, 프로세서는 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있는지 판단할 수 있다. 상기 제2 가속도 버퍼의 크기는 상기 제1 가속도 버퍼의 크기 또는 상기 KLD 버퍼의 크기와 동일하거나, 또는 상이할 수 있다. 예를 들어, 상기 제2 가속도 버퍼의 크기는 상기 제1 가속도 버퍼의 크기보다 크고, 상기 KLD 버퍼의 크기와 동일할 수 있다. 상기 제1 가속도 버퍼의 크기가 100인 경우, 상기 제2 가속도 버퍼의 크기 는 120일 수 있다. 또는, 상기 제1 가속도 버퍼의 크기가 120인 경우, 상기 제2 가속도 버퍼의 크기는 150일 수 있다. 프로세서는 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있는 경우, 동작 710을 수행하고, 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있지 않은 경우, 동작 722를 수행할 수 있다. 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있지 않은 경우, 동작 722에서, 프로세서는 새로운 가속도 데이터(예: 121번째 가속도 데이터)를 측정하고, 측정된 가속도 데이터를 상기 제1 가속도 버퍼 에 저장할 수 있다. 동작 722는 동작 721과 동일 또는 유사할 수 있다. 동작 722를 수행하면, 프로세서는 동작 703으로 리턴하여, 상기 제1 가속도 버퍼에 저장된 마지막 가속도 데이터(예: 121번째 가속도 데이터)를 식별할 수 있다. 프로세서는 703을 수행한 후 동작 706을 수행하여 식별된 가속도 데이터를 상기 제2 가속 도 버퍼에 저장하고, 동작 708을 수행하여 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있는지 여부를 판단할 수 있다. 프로세서는 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장될 때까지 동 작 703, 706, 708, 722를 반복적으로 수행할 수 있다. 상기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되어 있는 경우, 동작 710에서, 프로세서는 상기 가속도 데이터에 기반하여 가속도 분산값을 산출할 수 있다. 상기 제2 가속도 버퍼의 크기가 150인 경우, 프로세서는 150개의 가속도 데이터의 분산값을 산출할 수 있다. 프로세서는 상기 가속도 분산값을 산출한 후 동작 711을 수행할 수 있다. 동작 711에서, 프로세서는 설정된 조건에 해당되는지 여부를 판단할 수 있다. 상기 설정된 조건은 KLD 출 력값이 KLD 기준값 미만이고, KLD 평균값이 KLD 평균 임계치 미만이며, 가속도 분산값이 분산 임계치를 초과하 는 것 중 적어도 하나를 포함할 수 있다. 프로세서는 도 5의 동작 507에서 획득한 KLD 출력값이 KLD 기준 값 미만인 경우, 상기 설정된 조건에 해당되는 것으로 판단할 수 있다. 또는, 프로세서는 상기 KLD 출력값 이 KLD 기준값 미만이고, 동작 709에서 산출한 KLD 평균값이 KLD 평균 임계치 미만이며, 동작 710에서 산출한 가속도 분산값이 분산 임계치를 초과하는 경우, 상기 설정된 조건에 해당되는 것으로 판단할 수 있다. 프로세서는 상기 설정된 조건에 해당되는 경우 동작 713을 수행하고, 상기 설정된 조건에 해당되지 않는 경우 동작 715를 수행할 수 있다. 상기 설정된 조건에 해당되는 경우 동작 713에서, 프로세서는 휠체어 밀기 동작으로 인식(또는 판단)할 수 있다. 프로세서는 상기 휠체어 밀기 동작으로 판단된 경우, 프로세서는 동작 701 내지 동작 711을 반 복적으로 수행하여 계속해서 휠체어 밀기 동작이 수행되는지 여부를 판단할 수 있다. 또한, 프로세서는 휠 체어 밀기 동작으로 인식되는 경우, 도 10의 동작을 수행하여 휠체어 밀기 동작의 횟수를 카운트할 수 있다. 상기 설정된 조건에 해당되지 않는 경우 동작 715에서, 프로세서는 상기 휠체어 밀기 동작이 아닌 것으로 판단할 수 있다. 프로세서는 상기 KLD 출력값이 KLD 기준값 이상이거나, 동작 709에서 산출한 KLD 평균값 이 KLD 평균 임계치 이상이거나, 또는 동작 710에서 산출한 가속도 분산값이 분산 임계치 이하인 것 중 적어도 하나에 해당하는 경우, 상기 설정된 조건에 해당되지 않는 것으로 판단할 수 있다. 프로세서는 상기 KLD 출력값, 상기 KLD 평균값 또는 상기 가속도 분산값이 상기 설정된 조건에 하나라도 해당되지 않는 경우, 상기 휠체어 밀기 동작이 아닌 것으로 판단할 수 있다. 프로세서는 상기 휠체어 밀기 동작이 아닌 경우, 걷기, 달리기와 같은 비정형 동작으로 판단할 수 있다. 프로세서는 상기 비정형 동작에 따른 운동 정보(예: 걷는 시간, 걸음 수, 달리는 시간 등)를 획득하기 위한 알고리즘을 수행할 수 있다. 걸음 수 산출, 걷는 시간 산출 또는 달리는 시간 산출과 같은 동작은 종래 기술에 해당하므로, 자세한 설명을 생략할 수 있다. 도 8a 내지 도 8c는 다양한 실시예들에 따른 웨어러블 디바이스에 포함된 버퍼를 활용하는 일례를 도시한 도면 들이다. 도 8a를 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 프로세서 (예: 도 1의 프로세서)는 가속도 센서(예: 도 1의 관성 센서)를 이용하여 가속도 데이터(또는 가속도 값, 가속도 센싱값)를 측정할 수 있다. 프로세서는 시간 순서(예: 시간 인덱스)에 따라 실시간으로 측정된 가속도 데이터를 제1 가속도 버퍼(예: 도 6의 가속도 버퍼)에 저장할 수 있다. 제1 가속도 버퍼 의 크기는 웨어러블 디바이스의 메모리(예: 도 1의 메모리)에 저장된 기준 신호의 크기와 동일 하게 설정될 수 있다. 이하에서는 제1 가속도 버퍼의 크기를 '120'으로 설명하지만, 설명에 의해 본 발명 이 제한되는 것은 아니다. 예를 들어, 시간 인덱스에서 첫번째 시간에 측정된 첫번째 가속도 데이터를 제1 가속도 버퍼에 저장하고, 두번째 시간에 측정된 두번째 가속도 데이터를 제1 가속도 버퍼에 저장할 수 있다. 프로세서는 제1 가속도 버퍼의 크기(예: 120)만큼 가속도 데이터가 저장될 때까지 가속도 데이터를 계속 측정하여 제1 가속도 버퍼에 저장할 수 있다. 프로세서는 제1 가속도 버퍼의 크기만큼 가속도 데이터가 저장되면, 제1 가속도 버퍼에 저장된 가속도 데이터(예: 첫번째 가속도 데이터부터 120번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 첫번째 KLD 출력값을 획득할 수 있다. 프로세서는 첫번째 KLD 출력값에 기반하여 휠체 어 밀기 동작인지 여부를 판단할 수 있다. 또는, 프로세서는 휠체어 밀기 동작인지 여부를 더욱 정확하게 판단하기 위해 KLD 평균값 또는 가속도 분산값을 더 이용할 수도 있다. 이를 위해, 프로세서는 첫번째 KLD 출력값을 획득하면, 첫번째 KLD 출력값을 KLD 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 마지막 가속도 데이터(예: 120번째 가속도 데이터)를 제2 가속도 버퍼에 저장할 수 있다. KLD 버퍼의 크기는 제1 가속도 버퍼 또는 제2 가속도 버퍼의 크기와 동일하거나, 다를 수 있다. 예를 들어, KLD 버퍼의 크기 또는 제2 가속도 버퍼의 크기는 150으로, 서로 동일하고, 제1 가속도 버퍼와 다를 수 있다. 설명에 의해 본 발명이 제한되는 것은 아니다. 이후, 프로세서는 새로이 측정된 가속도 데이터(예: 121번째 가속도 데이터)를 제1 가속도 버퍼에 저 장하고, 제1 가속도 버퍼에 저장된 가속도 데이터(예: 2번째 가속도 데이터부터 121번째 가속도 데이터)의확률 분포를 기준 신호의 확률 분포와 비교하여 두번째 KLD 출력값을 획득할 수 있다. 프로세서는 두번째 KLD 출력값을 획득하면, 두번째 KLD 출력값을 KLD 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 마지 막 가속도 데이터(예: 121번째 가속도 데이터)를 제2 가속도 버퍼에 저장할 수 있다. 도 8b를 참조하면, 프로세서는 시간 인덱스가 269번째인 시간에 측정된 269번째 가속도 데이터를 제1 가속도 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 가속도 데이터(예: 150번째 가속도 데이터부터 269번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 150번째 KLD 출력값을 획득할 수 있다. 프로세서는 150번째 KLD 출력값을 획득하면, 150번째 KLD 출력값을 KLD 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 마지막 가속도 데이터(예: 269번째 가속도 데이터)를 제2 가속도 버 퍼에 저장할 수 있다. 프로세서는 KLD 버퍼의 크기(예: 150)만큼 KLD 출력값이 저장된 경우, KLD 버퍼에 저장된 KLD 출력값에 기반하여 제1 KLD 평균값을 산출할 수 있다. 또한, 프로세서는 제2 가속도 버퍼의 크기(예: 150)만큼 가속도 데이터(예: 120번째 가속도 데이터부터 269번째 가속도 데이 터)가 저장된 경우, 제2 가속도 버퍼에 저장된 가속도 데이터에 기반하여 제1 가속도 분산값을 산출 할 수 있다. 프로세서는 150번째 KLD 출력값, 제1 KLD 평균값, 또는 제1 가속도 분산값 중 적어도 하 나에 기반하여 움직임 분류를 수행할 수 있다. 움직임 분류는 정형 동작 또는 비정형 동작을 판단(또 는 분류)하는 것일 수 있다. 상기 정형 동작은 휠체어 밀기 동작을 포함하고, 상기 비정형 동작은 상기 휠체어 밀기 동작을 제외한 모든 동작(예: 걷기, 걸음 수)을 포함할 수 있다. 예를 들어, 프로세서는 150번째 KLD 출력값이 KLD 기준값 미만에 해당하는 경우, 움직임 분류에서 휠체어 밀기 동작으로 판단할 수 있다. 프로세서는 150번째 KLD 출력값이 KLD 기준값 이상인 경우, 움직임 분류에서 휠체어 밀기 동작 아님으로 판단할 수 있다. 또는, 프로세서는 150번째 KLD 출력값이 KLD 기준값 미만이고, 제1 KLD 평균값이 KLD 평균 임 계치 미만이며, 제1 가속도 분산값이 분산 임계치를 초과하는 경우, 움직임 분류에서 휠체어 밀기 동 작으로 판단할 수 있다. 프로세서는 150번째 KLD 출력값이 KLD 기준값 이상이거나, 제1 KLD 평균값 이 KLD 평균 임계치 이상이거나, 또는 제1 가속도 분산값이 분산 임계치 이하인 것 중 적어도 하나에 해당하는 경우, 움직임 분류에서 휠체어 밀기 동작 아님으로 판단할 수 있다. 도 8c를 참조하면, 프로세서는 시간 인덱스가 270번째인 시간에 측정된 270번째 가속도 데이터를 제1 가속도 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 가속도 데이터(예: 151번째 가속도 데이터부터 270번째 가속도 데이터)의 확률 분포를 기준 신호의 확률 분포와 비교하여 151번째 KLD 출력값을 획득할 수 있다. 프로세서는 151번째 KLD 출력값을 획득하면, 151번째 KLD 출력값을 KLD 버퍼에 저장하고, 제1 가속도 버퍼에 저장된 마지막 가속도 데이터(예: 270번째 가속도 데이터)를 제2 가속도 버 퍼에 저장할 수 있다. 프로세서는 KLD 버퍼의 크기(예: 150)만큼 KLD 출력값이 저장된 경우, KLD 버퍼에 저장된 KLD 출력값에 기반하여 제2 KLD 평균값을 산출할 수 있다. 또한, 프로세서는 제2 가속도 버퍼의 크기(예: 150)만큼 가속도 데이터가 저장된 경우, 제2 가속도 버퍼에 저장된 가속 도 데이터(예: 121번째 가속도 데이터부터 270번째 가속도 데이터)에 기반하여 제2 가속도 분산값을 산출 할 수 있다. 프로세서는 151번째 KLD 출력값, 제2 KLD 평균값, 또는 제2 가속도 분산값 중 적어도 하 나에 기반하여 움직임 분류를 수행할 수 있다. 예를 들어, 프로세서는 151번째 KLD 출력값이 KLD 기준값 미만에 해당하는 경우, 움직임 분류에서 휠체어 밀기 동작으로 판단할 수 있다. 프로세서(12 0)는 151번째 KLD 출력값이 KLD 기준값 이상인 경우, 움직임 분류에서 휠체어 밀기 동작 아님으로 판 단할 수 있다. 또는, 프로세서는 151번째 KLD 출력값이 KLD 기준값 미만이고, 제2 KLD 평균값이 KLD 평균 임 계치 미만이며, 제2 가속도 분산값이 분산 임계치를 초과하는 경우, 움직임 분류에서 휠체어 밀기 동 작으로 판단할 수 있다. 프로세서는 151번째 KLD 출력값이 KLD 기준값 이상이거나, 제2 KLD 평균값 이 KLD 평균 임계치 이상이거나, 또는 제2 가속도 분산값이 분산 임계치 이하인 것 중 적어도 하나에 해당하는 경우, 움직임 분류에서 휠체어 밀기 동작 아님으로 판단할 수 있다. 도 9는 다양한 실시예들에 따른 웨어러블 디바이스에서 가속도 데이터에 기반하여 움직임을 분류하는 일례를 도 시한 도면이다.도 9를 참조하면, 휠체어 밀기 동작 시 측정되는 가속도 데이터의 확률 분포는 일반적이지 않으며 비선형 분포 를 가지기 때문에 확률 밀도 함수의 모델 선정은 쉽지 않을 수 있다. 다양한 실시예들에 다른 웨어러블 디바이 스(예: 도 1의 웨어러블 디바이스)의 프로세서(예: 도 1의 프로세서)는 가속도 데이터를 이용하여 확 률 밀도 함수를 추정하는 방식인 비모수 밀도 추정 방식을 사용할 수 있다. 본 발명에서는 비모수 밀도 추정 방 식 중 가우시안(Gaussian) 함수를 커널(kernel) 함수로 사용한 커널 함수 기반 밀도 추정 방식 기법을 이용할 수 있다. 제1 그래프는 휠체어 밀기 동작일 때 나타나는 가속도 데이터와 휠체어 밀기 동작이 아닐 때(예: 비정형 동작) 나타나는 가속도 데이터를 나타낸 것일 수 있다. 제2 그래프는 휠체어 밀기 동작일 때(예: 정형 동작) 커널 함수 생성 결과를 나타낸 것일 수 있다. 제1 신 호는 기준 신호의 커널 함수 추정 결과를 나타낸 것이고, 제2 신호는 휠체어 밀기 동작일 때 실제로 측정된 가속도 데이터를 의미할 수 있다. 상기 기준 신호는 휠체어 밀기 동작(예: 도 4의 ①②③④)을 1회 수행 할 때 발생하는 가속도 데이터를 의미할 수 있다. 제1 신호와 제2 신호를 비교하면, 유사한 특징을 가지는 것을 알 수 있다. 제3 그래프는 휠체어 밀기 동작이 아닐 때(예: 비정형 동작) 커널 함수 생성 결과를 나타낸 것일 수 있다. 제3 신호는 기준 신호의 커널 함수 추정 결과를 나타낸 것이고, 제4 신호는 휠체어 밀기 동작이 아닐 때 실제로 측정된 가속도 데이터를 의미할 수 있다. 제3 신호와 제4 신호를 비교하면, 유사한 특징을 가지지 않는 것을 알 수 있다. 따라서, 휠체어 밀기 동작일 때는 KLD 알고리즘을 이용하여 사전에 정의된 기준 신호의 확률 분포와 실제 측정 된 가속도 데이터의 확률 분포를 비교함으로써, 두 확률 분포의 유사도에 따라 효율적으로 휠체어 밀기 동작임 을 인식할 수 있다. 도 10은 다양한 실시예들에 따른 웨어러블 디바이스의 휠체어 밀기 동작을 카운트하는 방법을 도시한 흐름도 이다. 도 10은 도 5 또는 도 7에 의해 휠체어 밀기 동작으로 인식된 이후에 수행될 수 있다. 도 10을 참조하면, 동작 1001에서, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스 )의 프로세서(예: 도 1의 프로세서)는 제2 가속도 버퍼(예: 도 8a 내지 도 8c의 제2 가속도 버퍼 )에 새로운 가속도 데이터를 저장할 수 있다. 휠체어 밀기 동작을 인식하기 위해서, 프로세서는 KLD 출력값이 KLD 기준값 미만이고, KLD 평균값이 KLD 평균 임계치 미만이며, 가속도 분산값이 분산 임계치를 초과 하는지 여부를 판단할 수 있다. 상기 가속도 분산값을 산출하기 위해서는 제2 가속도 버퍼의 크기만큼 가 속도 데이터가 저장되어 있을 수 있다. 이후 가속도 센서(예: 도 1의 관성 센서)에 의해 새로운 가속도가 측정되는 경우, 프로세서는 제2 가속도 버퍼에 새로운 가속도 데이터를 저장할 수 있다. 예를 들어, 제2 가속도 버퍼의 크기가 150인 경우, 제2 가속도 버퍼에 270번째 가속도 데이터가 새로운 가속도 데이터로서 저장될 수 있다. 동작 1003에서, 프로세서는 설정된 개수의 가속도 데이터에 윈도우를 설정할 수 있다. 예를 들어, 프로세 서는 5개의 가속도 데이터에 하나의 윈도우를 설정하고, 윈도우 인덱스를 부여(또는 할당)할 수 있다. 이 하에서는, 5개의 가속도 데이터에 윈도우를 설정하는 것으로 설명하고 있지만, 5개보다 많은 가속도 데이터(예: 7개, 9개, 11개)에 윈도우를 설정할 수도 있다. 예시는 발명의 이해를 돕기 위한 것일 뿐, 예시에 의해 본 발명 이 제한되는 것은 아니다. 제2 가속도 버퍼에는 121번째 가속도 데이터부터 270번째 가속도 데이터가 저장 될 수 있다. 프로세서는 121번째 가속도 데이터부터 125번째 가속도 데이터에 제1 윈도우 인덱스를 설정할 수 있다. 윈도우 갱신 시, 프로세서는 122번째 가속도 데이터부터 126번째 가속도 데이터에 제2 윈도우 인 덱스를 설정할 수 있다. 프로세서는 윈도우 슬라이딩 방식으로 제2 가속도 버퍼에 저장된 가속도 데 이터에 대하여 순차적으로 윈도우를 설정할 수 있다. 동작 1005에서, 프로세서는 윈도우 내 가속도 피크(peak)를 검출할 수 있다. 프로세서는 상기 윈도우 내에 포함된 5개의 가속도 데이터를 각각 d, d, d, d, d 라고 정의하고, 아래와 같은 판단식을 통해 가속도 피크를 결정할 수 있다. Condition = {d > d ∧ d > d ∧ d > d ∧ d > d} 프로세서는 Condition 값이 1인 경우, 상기 윈도우 내 가속도 피크가 검출된 것이고, Condition 값이 0인 경우, 상기 윈도우 내 가속도 피크가 검출되지 않은 것으로 판단할 수 있다. 프로세서는 상기 윈도우 내에 서 중간값인 세번째 가속도 데이터(예: d)를 기준으로 가속도 피크를 검출할 수 있다. 상기 판단 방법은 가 속도 데이터의 최소값을 peak로 검출하는 방법으로, 휠체어 밀기 동작(예: 도 4의 ①②③④) 판단 시 이용되는관성 센서의 축을 x축으로 설정하였기 때문일 수 있다. 관성 센서의 x축은 휠체어 밀기 동작이 끝나 고 다시 휠체어 밀기 동작을 위해 돌아오는 동작(예:③)을 수행할 때 사용자 손의 방향이 밀기와는 반대로 바뀌 며 큰 가속도를 만들어 peak를 보다 쉽게 검출이 가능할 수 있다. 다양한 실시예들에 따르면, 사용자의 손끝 방향과 일치하는 관성 센서의 축은 관성 센서가 웨어러블 디바이스에 배치된 위치에 따라 달라질 수 있다. 본 발명에서는 사용자의 손끝 방향과 일치하는 가속도 센 서의 축을 'x축'으로 설정하고, x축의 가속도 데이터에 기반하여 휠체어 밀기 동작을 인식할 수 있다. 다만, 가 속도 센서가 웨어러블 디바이스에 배치된 위치에 따라 휠체어 밀기 동작에 사용하는 가속도 센서의 축은 y 축 또는 z축이 될 수도 있다. 또한, 프로세서는 가속도 데이터의 최대값을 이용하여 가속도 피크를 검출할 수도 있다. 동작 1005에서, 프로세서는 윈도우 내 가속도 피크가 검출되는 경우(Condition 값이 1), 가속도 피크를 검 출한 것으로 판단하고 동작 1007을 수행할 수 있다. 또한, 프로세서는 윈도우 내 가속도 피크가 검출되지 않는 경우(Condition 값이 0), 가속도 피크를 검출하지 않은 것으로 판단하고 동작 1006을 수행할 수 있다. 가속도 피크를 검출하지 않은 것으로 판단되는 경우, 동작 1006에서, 프로세서는 윈도우 인덱스를 추가할 수 있다. 동작 1003을 처음 수행할 때 윈도우 인덱스가 1(예: 제1 윈도우 인덱스)인 경우, 동작 1006을 수행하 면 윈도우 인덱스는 2(예: 제2 윈도우 인덱스)가 될 수 있다. 프로세서는 동작 1006을 수행하고, 동작 1003으로 리턴할 수 있다. 동작 1003으로 리턴하면, 프로세서는 윈도우를 갱신하여 설정된 개수의 가속도 데이터에 상기 추가된 윈도우 인덱스에 해당하는 윈도우를 설정할 수 있다. 예를 들어, 프로세서는 122번 째 가속도 데이터부터 126번째 가속도 데이터에 제2 윈도우 인덱스를 설정할 수 있다. 다양한 실시예들에 따르면, 동작 1003을 두번째 수행할 때 윈도우 인덱스가 2(예: 제2 윈도우 인덱스)인 경우, 동작 1006을 수행하면 윈도우 인덱스는 3(예: 제3 윈도우 인덱스)이 될 수 있다. 프로세서는 동작 1006을 수행하고, 동작 1003으로 리턴할 수 있다. 동작 1003으로 리턴하면, 프로세서는 설정된 개수의 가속도 데 이터에 윈도우를 설정할 수 있다. 예를 들어, 프로세서는 123번째 가속도 데이터부터 127번째 가속도 데이 터에 제3 윈도우 인덱스를 설정할 수 있다. 가속도 피크를 검출한 것으로 판단되는 경우, 동작 1007에서, 프로세서는 피크로 검출된 가속도 데이터를 반환(또는 식별)할 수 있다. 예를 들어, 프로세서는 121번째 가속도 데이터부터 125번째 가속도 데이터 중 에서 최소값을 가지는 가속도 데이터를 반환할 수 있다. 동작 1009에서, 프로세서는 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출할 수 있다. 가 속도 데이터의 최소값을 검출하는 것은, 동작 1005에서 가속도 피크 검출 시 최소값을 가지는 가속도 데이터를 가속도 피크로 검출했기 때문일 수 있다. 가속도 피크 검출 시 최대값을 가지는 가속도 데이터를 가속도 피크로 검출하는 경우, 프로세서는 제2 가속도 버퍼에 저장된 가속도 데이터의 최대값을 검출할 수 있다. 이 하에서는, 발명의 이해를 돕기 위해, 가속도 데이터의 최소값을 검출하는 것으로 설명하고 있지만, 설명에 의해 본 발명이 제한되는 것은 아니다. 휠체어 밀기 동작(예: 도 4의 ①②③④)을 수행하는 동안, 사용자의 손 움직임 형태와 관성 센서의 노이즈 로 인해서 다수의 가속도 피크가 검출될 수 있다. 휠체어 밀기 동작 중 가장 큰 가속도를 받는 상황은 바퀴를 밀고 난 후, 손이 휠체어 손잡이에서 떨어져 다시 휠체어 밀기 동작을 위해 돌아오는 동작(예: ③)을 위해 손의 방향이 변화하는 부분일 수 있다. 가장 큰 peak만을 고려하기 위해서는 임계치(threshold)보다 낮은 peak만 고 려할 수 있다. 이때, 임계치를 상수(constant)로 고정하는 것은 휠체어 밀기 동작의 세기에 따라 가속도 데이터 의 크기가 달라지기 때문에 peak 검출 오차(또는 오류)가 발생할 수 있다. 프로세서는 사용자가 휠체어 밀 기 동작을 수행할 때 발생하는 peak 검출 오차를 줄이기 위해서 적응형 임계치를 사용할 수 있다. 동작 1011에서, 프로세서는 상기 가속도 데이터의 최소값에 기반하여 적응형 임계치를 선정(또는 결정)할 수 있다. 프로세서는 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값의 설정된 기준치(예: 최소값 의 10%에 해당하는 가속도 데이터)를 적응형 임계치로 결정할 수 있다. 프로세서는 상기 가속도 피크 검출 시, 최소값을 가지는 가속도 데이터를 가속도 피크로 검출하기 때문에, 상기 가속도 데이터의 최소값에 기반하 여 적응형 임계치를 설정할 수 있다. 프로세서는 가속도 피크 검출 시 최대값을 가지는 가속도 데이터를 가속도 피크로 검출하는 경우, 제2 가속도 버퍼에 저장된 가속도 데이터의 최대값의 설정된 기준치(예: 최 대값의 90%에 해당하는 가속도 데이터)를 적응형 임계치로 결정할 수 있다. 새로운 가속도 데이터가 측정될 때마다, 제2 가속도 버퍼에는 새로운 가속도 데이터가 저장되므로, 상기 적응형 임계치는 계속 변경될 수 있다. 제2 가속도 버퍼에 저장되는 가속도 데이터가 변경되면, 제2 가속 도 버퍼에 저장된 가속도 데이터를 기준으로 적응형 임계치를 결정하므로, 상기 적응형 임계치는 동적으로 변경될 수 있다. 또는, 프로세서는 새로운 윈도우를 갱신할 때마다 상기 적응형 임계치를 결정할 수 있다. 새로운 윈도우에서 가속도 피크가 검출되는 경우, 동작 1007 내지 동작 1011을 수행하므로, 프로세서는 새 로운 윈도우를 갱신할 때마다 상기 적응형 임계치를 결정할 수 있다. 예를 들어, 동작 1009 및 동작 1011을 첫번째 수행했을 때 결정된 첫번째 적응형 임계치는 동작 1009 및 동작 1011을 두번째 수행했을 때 결정된 두번째 적응형 임계치와 동일하거나, 또는 상이할 수 있다. 동작 1013에서, 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인지 여부를 판단할 수 있다. 동작 1009 및 동작 1011에 의해 상기 적응형 임계치가 가속도 데이터의 \"최소값\"을 기반으로 결정된 것이 므로, 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인지 여부를 판단할 수 있다. 만 약, 상기 적응형 임계치가 가속도 데이터의 \"최대값\"을 기반으로 결정되는 경우, 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치를 초과하는지 여부를 판단할 수 있다. 상기 반환된 가속도 데이터는 1007 에서 획득한 것이고, 상기 적응형 임계치는 동작 1011에서 획득한 것일 수 있다. 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인 경우, 동작 1015를 수행하고, 프로세서는 상기 반환된 가속도 데이터가 상기 적응형 임계치 이상인 경우, 동작 1019를 수행할 수 있다. 상기 반환된 가속도 데이터가 상기 적응형 임계치 미만인 경우, 동작 1015에서, 프로세서는 윈도우 인덱스 간의 차이(또는 간격)가 인덱스 임계치를 초과하는지 여부를 판단할 수 있다. 상기 윈도우 인덱스는 동작 1003 에서 부여된 윈도우 인덱스일 수 있다. 휠체어 밀기 동작(예: 도 4의 ①②③④)을 한번 수행하는 데는 일정한 시간이 소요될 수 있다. 휠체어 밀기 동작을 빠르게 또는 느리게 수행하더라도 한번의 휠체어 밀기 동작을 수행 하는 데는 일정한 시간이 소요될 수 있다. 상기 인덱스 임계치는 휠체어 밀기 동작의 카운트 시에 카운트 오류 를 줄이기 위한 것일 수 있다. 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 간격(또는 차이)이 너무 작으면 한번의 휠체어 밀기 동작을 수행한 것으로 보기 어려울 수 있다. 프로세서는 이전에 휠체어 밀기 동작으로 판단한 윈도우 인덱스와 그 이후 휠체어 밀기 동작으로 판단한 윈도우 인덱스 간의 간격이 인덱스 임계치를 초과하는 경우에 한해서만 휠체 어 밀기 동작을 카운트할 수 있다. 상기 인덱스 임계치는 웨어러블 디바이스의 메모리(예: 도 1의 메모리 )에 사전에 저장될 수 있다. 상기 인덱스 임계치는 가속도 피크가 검출된 두 개의 윈도우 인덱스 간의 간 격이 한번의 휠체어 밀기 동작을 수행한 것으로 판단되도록 설정될 수 있다. 예를 들어, 프로세서는 첫번째 가속도 피크가 검출된 윈도우 인덱스(예: 이전 윈도우 인덱스)가 두번째 가 속도 피크가 검출된 윈도우 인덱스(예: 현재 윈도우 인덱스)와 너무 가까우면, 한번의 휠체어 밀기 동작을 수행 함에 따라 검출된 가속도 피크로 인식하지 않을 수 있다. 프로세서는 첫번째 가속도 피크가 검출된 윈도우 인덱스와 두번째 가속도 피크가 검출된 윈도우 인덱스 간의 차이(또는 간격)가 인덱스 임계치를 초과하는 경우, 한번의 휠체어 밀기 동작을 수행함에 따라 검출된 가속도 피크로 인식할 수 있다. 프로세서는 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 차이가 상기 인덱스 임계치를 초과하는 경 우, 동작 1017을 수행하고, 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 차이가 상기 인덱스 임계치 이하 인 경우, 동작 1019를 수행할 수 있다. 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 차이가 상기 인덱스 임계치를 초과하는 경우, 동작 1017에서, 프로세서는 휠체어 밀기 동작을 카운트할 수 있다. 프로세서는 동작 1001 내지 동작 1017 을 한번 수행할 때마다 휠체어 밀기 동작을 1회 카운트할 수 있다. 프로세서는 카운트된 횟수를 메모리 에 저장하고, 카운트된 횟수를 디스플레이(예: 도 1의 디스플레이 모듈)에 표시할 수 있다. 프로세서 는 휠체어 밀기 동작이 카운트되는 횟수 또는 시간에 기반하여 휠체어 밀기 시간을 산출할 수 있다. 프로 세서는 상기 휠체어 밀기 횟수 또는 상기 휠체어 밀기 시간을 활동 정보(또는 운동 정보)로서 제공할 수 있다. 프로세서는 휠체어 밀기 동작에 기반하여 사용자의 운동 패턴을 분석하여 제공할 수 있다. 다양한 실시예들에 따르면, 프로세서는 걷기 모드, 달리기 모드와 같이 휠체어 모드를 운동 모드로서 제공할 수 있다. 웨어러블 디바이스가 휠체어 모드로 설정되는 경우, 프로세서는 도 5 또는 도 7의 동작을 수행 하여 휠체어 밀기 동작을 인식하고, 휠체어 밀기 동작으로 인식되는 경우, 도 10을 수행하여 휠체어 밀기 동작 의 횟수를 카운트할 수 있다. 다양한 실시예들에 따르면, 프로세서는 휠체어 밀기 동작의 횟수에 기반하여 소모 칼로리를 계산하고, 계 산된 소모 칼로리를 사용자에게 제공할 수 있다. 예를 들어, 프로세서는 휠체어 밀기 동작의 횟수가 카운 트될 때마다 기초 대사량 또는 추가 칼로리를 더하여 하루 동안 소모된 칼로리를 계산할 수 있다. 프로세서 는 상기 휠체어 밀기 동작의 속도에 기반하여 상기 소모 칼로리를 계산할 수 있다. 프로세서는 상기 휠체어 밀기 동작의 속도가 빠른 경우(예: 속도 임계치 초과), 추가 소모 칼로리를 계산하고, 상기 휠체어 밀기 동작의 속도가 느린 경우(예: 속도 임계치 이하), 추가 소모 칼로리를 계산하지 않을 수 있다. 프로세서는 상기 추가 소모 칼로리를 상기 소모 칼로리에 합산할 수 있다. 또는, 프로세서는 상기 휠체어 밀기 동작의 속도가 빠른 경우, 활발한 휠체어 밀기 동작으로 인식하고, 상기 휠체어 밀기 동작의 속도가 느린 경우, 일반 휠체어 밀기 동작을 인식할 수 있다. 다양한 실시예들에 따르면, 프로세서는 설정된 시간 동안(예: 3일, 7일 등) 휠체어 밀기 동작이 인식되지 않는 경우, 운동하라는 안내를 출력할 수 있다. 관성 센서는 24 시간 내내 저전력으로 가속도 데이터를 측 정할 수 있다. 프로세서는 측정된 가속도 데이터에 기반하여 설정된 간격(예: 1일, 3일)으로 휠체어 밀기 동작이 인식되는지 여부를 판단할 수 있다. 상기 안내는 텍스트, 이미지, 비디오 또는 음성 중 적어도 하나를 포함할 수 있다. 상기 안내는 디스플레이 모듈에 사용자 인터페이스를 표시하거나, 스피커(예: 도 1의 스 피커)를 통해 음성을 출력할 수 있다. 프로세서는 휠체어 밀기 횟수의 목표치를 설정하는 사용자 인 터페이스를 제공할 수 있다. 사용자는 상기 사용자 인터페이스를 통해 걸음 수 목표치와 유사하게, 휠체어 밀기 횟수(예: 100회, 200회)를 설정할 수 있다. 프로세서는 동작 1017에 의해 휠체어 밀기 동작을 1회 카운트한 후, 동작 1001로 리턴할 수 있다. 프로세 서는 동작 1001 내지 동작 1017을 반복적으로 수행하여 휠체어 밀기 동작을 카운트할 수 있다. 상기 반환된 가속도 데이터가 적응형 임계치 이상이거나, 또는 가속도 피크로 검출된 두 개의 윈도우 인덱스 간 의 차이가 상기 인덱스 임계치 이하인 경우, 동작 1019에서, 프로세서는 휠체어 밀기 동작을 카운트하지 않을 수 있다. 프로세서는 휠체어 밀기 동작을 카운트하지 않고, 동작 1001로 리턴할 수 있다. 프로세서 는 도 10을 수행하는 동안 도 5 또는 도 7의 동작을 수행하여 휠체어 밀기 동작을 인식할 수 있다. 도 5 또는 도 7의 동작에 의해 휠체어 밀기 동작으로 인식되지 않는 경우, 프로세서는 도 10의 동작을 수행하지 않을 수 있다. 프로세서는 도 5 또는 도 7의 동작에 의해 휠체어 밀기 동작으로 인식되는 경우, 도 10의 동작을 수행할 수 있다. 다양한 실시예들에 따르면, 동작 1019의 동작이 설정된 횟수(예: 10회, 20회) 수행되는 경우, 프로세서는 도 10의 동작을 중지하고, 도 5 또는 도 7의 동작을 수행할 수 있다. 도 11은 다양한 실시예들에 따른 웨어러블 디바이스에서 가속도 데이터에 윈도우를 설정하는 일례를 도시한 도 면이다. 도 11을 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 프로세서 (예: 도 1의 프로세서)는 제2 가속도 버퍼(예: 도 8a 내지 도 8c의 제2 가속도 버퍼)에 저장된 가속 도 데이터에 윈도우를 설정할 수 있다. 윈도우 설정은 윈도우 슬라이딩 방식으로 설정될 수 있다. 제2 가 속도 버퍼의 크기는 150이며, 제2 가속도 버퍼에는 150개의 가속도 데이터가 저장될 수 있다. 윈도우 설정을 참조하면, 프로세서는 제2 가속도 버퍼에 저장된 제1 가속도 데이터부터 제5 가속도 데 이터까지 제1 윈도우 인덱스로 설정하고, 제2 가속도 데이터부터 제6 가속도 데이터까지 제2 윈도우 인덱 스로 설정하고, 제3 가속도 데이터부터 제7 가속도 데이터까지 제3 윈도우 인덱스로 설정하고, 제4 가속도 데이터부터 제8 가속도 데이터까지 제4 윈도우 인덱스로 설정할 수 있다. 프로세서는 제1 윈도우 인덱스를 설정하고, 도 10의 동작 1005를 수행할 수 있다. 동작 1005를 수행 하여 제1 윈도우 인덱스 내에서 가속도 피크가 검출되지 않는 경우, 동작 1006에서, 프로세서는 윈 도우 인덱스를 하나 추가하여 동작 1003에서 제2 윈도우 인덱스를 설정할 수 있다. 또한, 동작 1005를 수 행하여 제2 윈도우 인덱스 내에서 가속도 피크가 검출되지 않는 경우, 동작 1006에서, 프로세서는 윈도우 인덱스를 하나 추가하여 동작 1003에서 제3 윈도우 인덱스를 설정할 수 있다. 그래프를 참조하면, 제1 윈도우 인덱스에는 제1 가속도 데이터, 제2 가속도 데이터, 제3 가속도 데이터, 제4 가속도 데이터, 제5 가속도 데이터가 포함될 수 있다. 프로세서 는 도 10에서 설명한 판단 방법에 따라, 제3 가속도 데이터가 제1 가속도 데이터 미만인지, 제3 가속도 데이터가 제2 가속도 데이터 보다 미만인지, 제3 가속도 데이터가 제4 가속도 데 이터 미만인지, 제3 가속도 데이터가 제5 가속도 데이터 미만인지 여부를 판단할 수 있다. 프로세서는 제3 가속도 데이터가 제1 가속도 데이터와 제2 가속도 데이터, 제4 가속도 데이터와 제5 가속도 데이터 미만인 경우(예: Condition 값이 1), 제1 윈도우 인덱스 내 가속도 피크가 검출된 것으로 판단할 수 있다. 프로세서는 제3 가속도 데이터가 제1 가속도 데이터 또는 제2 가속도 데이터, 제4 가속 도 데이터, 제5 가속도 데이터 이상인 경우(예: Condition 값이 0), 제1 윈도우 인덱스 내 가속도 피크가 검출되지 않은 것으로 판단할 수 있다. 그래프에서는, 제1 윈도우 인덱스 내 가속도 피크가 검출되지 않은 일례를 나타낸 것일 수 있다. 프로세서는 제2 윈도우 인덱스, 제3 윈도우 인덱스 또는 제4 윈도우 인덱스에 대하여 동일한 방법으로 윈도를 설정하고, 윈도우 내 가속도 피크를 검출할 수 있다. 도 12는 다양한 실시예들에 따른 웨어러블 디바이스에서 적응형 임계치를 선정하는 일례를 도시한 도면이다. 도 12를 참조하면, 제1 그래프 및 제2 그래프는 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스 )의 제2 가속도 버퍼(예: 도 8a 내지 도 8c의 제2 가속도 버퍼)에 저장된 가속도 데이터의 최소값에 기반하여 적응형 임계치가 결정되는 일례를 도시한 것일 수 있다. 휠체어 밀기 동작(예: 도 4의 ①②③④)을 수 행하는 동안, 사용자의 손 움직임 형태와 가속도 센서(예: 도 1의 관성 센서)의 노이즈로 인해서 다수의 가속도 피크가 검출될 수 있다. 휠체어 밀기 동작 중 가장 큰 가속도를 받는 상황은 바퀴를 밀고 난 후, 손이 휠체어 손잡이에서 떨어져 다시 휠체어 밀기 동작을 위해 돌아오는 동작(예: ③)을 위해 손의 방향이 변화하는 부분일 수 있다. 가장 큰 peak만을 고려하기 위해서는 임계치보다 작은 peak만 고려할 수 있는데, 임계치를 하 나의 값으로 고정하는 경우, 휠체어 밀기 동작의 세기에 따라 가속도 데이터의 크기가 달라지기 때문에 가속도 피크 검출 오차가 발생할 수 있다. 웨어러블 디바이스의 프로세서(예: 도 1의 프로세서)는 사용자가 휠체어 밀기 동작을 수행할 때 발생하는 peak 검출 오차를 줄이기 위해서 적응형 임계치를 사용할 수 있다. 제1 그래프에서, 제1 신호는 제2 가속도 버퍼에 저장된 가속도 데이터를 의미하고, 제2 신호 는 제2 가속도 버퍼에 저장된 가속도 데이터에 기반하여 결정되는 적응형 임계치를 나타낸 것이다. 제2 그래프는 제1 그래프의 일정 구간을 확대 도시한 것일 수 있다. 제2 그래프에서, 제3 신 호는 제2 가속도 버퍼에 저장된 가속도 데이터를 의미하고, 제4 신호는 제2 가속도 버퍼(80 3)에 저장된 가속도 데이터에 기반하여 결정되는 적응형 임계치를 나타낸 것이다. 제1 그래프 및 제2 그래프의 제2 신호 및 제4 신호를 보면, 적응형 임계치의 피크(예: 상단)가 계속 변경되는 것을 알 수 있다. 새로운 가속도 데이터가 측정될 때마다, 제2 가속도 버퍼에는 새 로운 가속도 데이터가 저장되므로, 상기 적응형 임계치는 계속 변경될 수 있다. 제2 가속도 버퍼에 저장되 는 가속도 데이터가 변경되면, 제2 가속도 버퍼에 저장된 가속도 데이터를 기준으로 적응형 임계치를 결정 하므로, 상기 적응형 임계치는 동적으로 변경될 수 있다. 도 13은 다양한 실시예들에 따른 웨어러블 디바이스에서 휠체어 밀기 동작의 카운트 오류를 방지하기 위한 일례 를 도시한 도면이다. 도 13을 참조하면, 제1 그래프 및 제2 그래프는 가속도 피크로 검출된 두 개의 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부에 기반하여 휠체어 밀기 동작의 카운트 오류를 방지하는 일례를 도시 한 것일 수 있다. 제1 그래프를 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러 블 디바이스)의 프로세서(예: 도 1의 프로세서)는 가속도 피크가 검출된 제1 윈도우 인덱스 이 후에, 가속도 피크가 검출된 제2 윈도우 인덱스가 검출되는 경우, 제1 윈도우 인덱스와 제2 윈도우 인덱스 간의 차이(또는 간격)가 인덱스 임계치를 초과하는지 여부를 판단할 수 있다. 프로세서는 가 속도 피크로 검출된 두 개의 윈도우 인덱스 간의 간격이 너무 작으면 한번의 휠체어 밀기 동작을 수행한 것으로 보기 어려울 수 있다. 상기 인덱스 임계치는 웨어러블 디바이스의 메모리(예: 도 1의 메모리)에 사전에 저장될 수 있다. 상 기 인덱스 임계치는 가속도 피크가 검출된 두 개의 윈도우 인덱스 간의 간격이 한번의 휠체어 밀기 동작을 수행 한 것으로 판단되도록 설정될 수 있다. 예를 들어, 프로세서는 제1 윈도우 인덱스와 제2 윈도우 인 덱스 간의 차이가 인덱스 임계치 이하인 경우, 휠체어 밀기 동작의 검출 오류로 판단하고, 휠체어 밀기 동작의 횟수로 카운트하지 않을 수 있다. 프로세서는 제2 윈도우 인덱스 검출 이후에, 가속도 피크 가 검출된 제3 윈도우 인덱스가 검출되는 경우, 제1 윈도우 인덱스와 제3 윈도우 인덱스 간 의 차이가 인덱스 임계치를 초과하는지 여부를 판단할 수 있다. 프로세서는 제1 윈도우 인덱스와 제 3 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 휠체어 밀기 동작의 횟수를 카운트(예: 휠 체어 밀기 동작 1회 증가)할 수 있다.제2 그래프를 참조하면, 인덱스 임계치를 적용하기 전의 제3 그래프와 인덱스 문턱치를 적용한 후 의 제4 그래프를 포함할 수 있다. 제3 그래프를 보면, 다수의 윈도우 인덱스(예: 제1 윈도우 인덱 스, 제2 윈도우 인덱스, 제3 윈도우 인덱스, 제4 윈도우 인덱스 등 )가 검출될 수 있 다. 시간적으로 연속된 두 개의 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단하면, 제2 윈도우 인덱스 및 제4 윈도우 인덱스가 인덱스 임계치를 초과한 것으로 판단될 수 있다. 프로세서 는 제3 그래프와 같이 인덱스 임계치를 적용하기 전에는 휠체어 밀기 동작을 4회 이상 카운트할 수 있지만, 인덱스 임계치를 적용하는 경우, 휠체어 밀기 동작을 2회 카운트할 수 있다. 도 14는 다양한 실시예들에 따른 웨어러블 디바이스에서 움직임에 따른 가속도 데이터의 차이를 나타낸 도면이 다. 도 14를 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 프로세서 (예: 도 1의 프로세서)는 휠체어 밀기 동작을 인식하고, 휠체어 밀기 동작을 카운트하는 동작을 반복 수행 할 수 있다. 제1 도면 부호에서, 제1 그래프는 휠체어 밀기 동작일 때 가속도 데이터 및 움직임 분 류에 따른 신호를 나타낸 것이다. 제1 신호는 웨어러블 디바이스의 가속도 센서(예: 도 1의 관성 센서 )에서 측정한 가속도 데이터를 나타낼 수 있다. 제2 신호는 움직임 분류에 따른 신호를 나타내는 것으로, 휠체어 밀기 동작으로 인식될 때는 0이 아닌 상수(예: 도 14에서 30), 휠체어 밀기 동작으로 인식되지 않 을 때는 0일 수 있다. 제1 그래프에서 동그라미는 휠체어 밀기 동작으로 카운트된 것을 의미할 수 있다. 제1 도면 부호에서, 제2 그래프는 휠체어 밀기 동작이 아닐 때 가속도 데이터 및 움직임 분 류에 따른 신호를 나타낸 것이다. 제3 신호는 관성 센서에서 측정한 가속도 데이터이고, 제4 신호 는 움직임 분류에 따른 신호를 나타내는 것으로, 휠체어 밀기 동작으로 인식되지 않을 때는 0일 수 있다. 제2 도면 부호에서, 제3 그래프는 휠체어 밀기 동작일 때 가속도 데이터 및 움직임 분류에 따른 신 호를 나타낸 것이다. 제5 신호는 관성 센서에서 측정한 가속도 데이터이고, 제6 신호는 움직 임 분류에 따른 신호를 나타내는 것으로, 휠체어 밀기 동작으로 인식될 때는 0이 아닌 상수, 휠체어 밀기 동작 으로 인식되지 않을 때는 0일 수 있다. 제3 그래프에서 동그라미는 휠체어 밀기 동작으로 카운트된 것을 의미할 수 있다. 제2 도면 부호에서, 제4 그래프는 휠체어 밀기 동작이 아닐 때 가속도 데이 터 및 움직임 분류에 따른 신호를 나타낸 것이다. 제7 신호는 관성 센서에서 측정한 가속도 데이터 이고, 제8 신호는 움직임 분류에 따른 신호를 나타내는 것으로, 휠체어 밀기 동작으로 인식되지 않을 때 는 0일 수 있다. 도 15는 다양한 실시예들에 따른 웨어러블 디바이스에서 휠체어 밀기와 관련된 사용자 인터페이스를 도시한 도 면이다. 도 15를 참조하면, 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 프로세서 (예: 도 1의 프로세서)는 휠체어 밀기 동작을 카운트하고, 카운트된 횟수를 디스플레이(예: 도 1의 디스플 레이 모듈)에 표시할 수 있다. 제1 사용자 인터페이스는 휠체어 밀기 횟수 또는 휠체어 밀기 시간을 활동 정보(또는 운동 정보)로서 제공하는 일례를 나타낸 것일 수 있다. 프로세서는 휠체어 밀기 동작에 기 반하여 사용자의 운동 패턴을 분석하여 제공할 수 있다. 다양한 실시예들에 따르면, 프로세서는 걷기 모드, 달리기 모드와 같이 휠체어 모드를 운동 모드로서 제공할 수 있다. 웨어러블 디바이스가 휠체어 모 드로 설정되는 경우, 프로세서는 도 5 또는 도 7의 동작을 수행하여 휠체어 밀기 동작을 인식하고, 휠체어 밀기 동작으로 인식되는 경우, 도 10을 수행하여 휠체어 밀기 동작의 횟수를 카운트할 수 있다. 다양한 실시예들에 따르면, 프로세서는 휠체어 밀기 동작의 횟수에 기반하여 소모 칼로리를 계산하고, 계 산된 소모 칼로리를 사용자에게 제공할 수 있다. 제2 사용자 인터페이스는 휠체어 밀기 횟수, 휠체어 밀 기 시간 또는 소모 칼로리 중 적어도 하나를 포함할 수 있다. 예를 들어, 프로세서는 휠체어 밀기 동작의 횟수가 카운트될 때마다 기초 대사량 또는 추가 칼로리를 더하여 하루 동안 소모된 칼로리를 계산할 수 있다. 프로세서는 상기 휠체어 밀기 동작의 속도에 기반하여 상기 소모 칼로리를 계산할 수 있다. 다양한 실시예들에 따르면, 프로세서는 설정된 시간 동안(예: 3일, 7일 등) 휠체어 밀기 동작이 인식되지 않는 경우, 운동하라는 안내를 출력할 수 있다. 상기 안내는 텍스트, 이미지, 비디오 또는 음성 중 적어도 하나 를 포함할 수 있다. 상기 안내는 디스플레이 모듈에 사용자 인터페이스를 표시하거나, 스피커(예: 도 1의 스피커)를 통해 음성을 출력할 수 있다. 프로세서는 휠체어 밀기 횟수의 목표치를 설정하는 사용자 인터페이스를 제공할 수 있다. 사용자는 상기 사용자 인터페이스를 통해 걸음 수 목표치와 유사하게, 휠체어 밀기 횟수(예: 100회, 200회)를 설정할 수 있다. 본 발명의 다양한 실시예들에 따른 웨어러블 디바이스(예: 도 1의 웨어러블 디바이스)의 동작 방법은 상기 웨어러블 디바이스에 포함된 관성 센서(예: 도 1의 관성 센서)를 이용하여 가속도 데이터를 측정하는 동작, 상기 측정된 가속도 데이터를 상기 웨어러블 디바이스의 메모리(예: 도 1의 메모리)의 가속도 버퍼 에 저장하는 동작, 상기 가속도 버퍼의 크기만큼 상기 가속도 데이터가 저장되었는지 판단하는 동작, 상기 가속 도 버퍼의 크기만큼 상기 가속도 데이터가 저장된 경우, KLD 알고리즘을 통해 상기 측정된 가속도 데이터의 확 률 분포와 상기 메모리에 저장된 기준 신호의 확률 분포를 비교하여 KLD 출력값을 획득하는 동작, 상기 획득한 KLD 출력값을 KLD 기준값 미만인지 여부를 판단하는 동작, 및 상기 획득한 KLD 출력값이 상기 KLD 기준값 미만 인 경우, 휠체어 밀기 동작으로 인식하는 동작을 포함할 수 있다. 상기 인식하는 동작은, 상기 획득한 KLD 출력값에 기반하여 KLD 평균값을 산출하는 동작, 상기 측정된 가속도 데이터에 기반하여 가속도 분산값을 산출하는 동작, 상기 KLD 출력값이 KLD 기준값 미만이고, 상기 KLD 평균값 이 KLD 평균 임계치 미만이며, 상기 가속도 분산값이 분산 임계치를 초과하는 것 중 적어도 하나에 해당되는 경 우, 상기 휠체어 밀기 동작으로 인식하는 동작을 포함할 수 있다. 상기 KLD 평균값을 산출하는 동작은, 상기 획득한 KLD 출력값을 KLD 버퍼에 저장하는 동작, 상기 KLD 버퍼의 크 기만큼 KLD 출력값이 저장되었는지 판단하는 동작, 및 상기 KLD 버퍼의 크기만큼 KLD 출력값이 저장된 경우, 상 기 KLD 버퍼에 저장된 KLD 출력값의 평균값을 산출하는 동작을 포함할 수 있다. 상기 가속도 버퍼를 제1 가속도 버퍼라 하고, 상기 가속도 분산값을 산출하는 동작은, 상기 제1 가속도 버퍼의 크기만큼 저장된 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하는 동작, 상 기 제2 가속도 버퍼의 크기만큼 가속도 데이터가 저장되었는지 판단하는 동작, 및 상기 제2 가속도 버퍼의 크기 만큼 가속도 데이터가 저장된 경우, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 가속도 분산값을 산출하는 동작을 포함할 수 있다. 상기 방법은 상기 휠체어 밀기 동작으로 인식되는 경우, 상기 제1 가속도 버퍼에 저장된 가속도 데이터를 제2 가속도 버퍼에 저장하는 동작, 상기 제2 가속도 버퍼에 저장된 가속도 데이터 중 설정된 개수의 가속도 데이터 에 윈도우를 설정하는 동작, 상기 윈도우 내 가속도 피크를 검출하는 동작, 상기 윈도우 내 가속도 피크로 검출 된 가속도 데이터가 적응형 임계치 미만인지 여부를 판단하는 동작, 및 상기 판단 결과에 기반하여 상기 휠체어 밀기 동작의 횟수를 카운트하는 동작을 더 포함할 수 있다. 상기 적응형 임계치 미만인지 판단하는 동작은, 상기 제2 가속도 버퍼에 저장된 가속도 데이터의 최소값을 검출 하는 동작, 상기 가속도 데이터의 최소값에 기반하여 상기 적응형 임계치를 결정하는 동작, 및 상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 상기 적응형 임계치 미만인지 여부를 판단하는 동작을 포함할 수 있다. 상기 카운트하는 동작은, 상기 윈도우 내 가속도 피크로 검출된 가속도 데이터가 적응형 임계치 미만인 경우, 가속도 피크가 검출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는지 여부를 판단하는 동작, 및 가 속도 피크가 검출된 두 윈도우 인덱스 간의 차이가 인덱스 임계치를 초과하는 경우, 상기 휠체어 밀기 동작의 횟수를 카운트하는 동작을 포함할 수 있다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱 하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 본 명세서와 도면에 개시된 본 발명의 다양한 실시 예들은 본 발명의 기술 내용을 쉽게 설명하고 본 발명의 이 해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 발명의 범위를 한정하고자 하는 것은 아니다. 따라서 본 발 명의 범위는 여기에 개시된 실시 예들 이외에도 본 발명의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변 형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2022-0013725", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 웨어러블 디바이스의 블록도이다. 도 2는 다양한 실시예들에 따른 웨어러블 디바이스의 전면 사시도를 도시한 도면이다. 도 3은 다양한 실시예들에 따른 웨어러블 디바이스의 후면 사시도를 도시한 도면이다. 도 4는 다양한 실시예들에 따른 휠체어 밀기 동작과 관련된 가속도 데이터를 나타낸 도면이다. 도 5는 다양한 실시예들에 따른 웨어러블 디바이스의 동작 방법을 도시한 흐름도이다. 도 6은 다양한 실시예들에 따른 시간에 따라 가속도 버퍼에 가속도 데이터를 저장하는 일례를 도시한 도면이다. 도 7은 다양한 실시예들에 따른 웨어러블 디바이스의 휠체어 밀기 동작을 인식하는 방법을 도시한 흐름도이다. 도 8a 내지 도 8c는 다양한 실시예들에 따른 웨어러블 디바이스에 포함된 버퍼를 활용하는 일례를 도시한 도면 들이다. 도 9는 다양한 실시예들에 따른 웨어러블 디바이스에서 가속도 데이터에 기반하여 움직임을 분류하는 일례를 도 시한 도면이다. 도 10은 다양한 실시예들에 따른 웨어러블 디바이스의 휠체어 밀기 동작을 카운트하는 방법을 도시한 흐름도이다. 도 11은 다양한 실시예들에 따른 웨어러블 디바이스에서 가속도 데이터에 윈도우를 설정하는 일례를 도시한 도 면이다. 도 12는 다양한 실시예들에 따른 웨어러블 디바이스에서 적응형 임계치를 선정하는 일례를 도시한 도면이다. 도 13은 다양한 실시예들에 따른 웨어러블 디바이스에서 휠체어 밀기 동작의 카운트 오류를 방지하기 위한 일례 를 도시한 도면이다. 도 14는 다양한 실시예들에 따른 웨어러블 디바이스에서 움직임에 따른 가속도 데이터의 차이를 나타낸 도면이 다. 도 15는 다양한 실시예들에 따른 웨어러블 디바이스에서 휠체어 밀기와 관련된 사용자 인터페이스를 도시한 도 면이다."}
