{"patent_id": "10-2024-7024118", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0133719", "출원번호": "10-2024-7024118", "발명의 명칭": "지능형 네트워크 슬라이싱 및 정책-기반 라우팅 엔진", "출원인": "에이텐 시스템즈 엘엘씨", "발명자": "모디 아푸르바 엔"}}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "이종 멀티-벤더 네트워크로서,적어도 2개의 네트워크 엔드포인트들 사이의 무선 통신을 가능하게 하도록 구성된 복수의 노드들로서, 상기 복수의 노드들 각각은 복수의 무선 통신 방식들 중 하나에 따라 동작하도록 구성되는, 상기 복수의 노드들; 및상기 복수의 노드들 중 적어도 하나에서 실행되는 네트워크 슬라이싱 엔진을 포함하며,상기 네트워크 슬라이싱 엔진은,데이터 송신을 위해 상기 이종 멀티-벤더 네트워크에 액세스하기 위한 적어도 하나의 네트워크 엔드포인트로부터의 적어도 하나의 요청을 수신하고;상기 복수의 노드들 간의 복수의 통신 링크들의 동작 상태에 대한 정보를 수신하고;상기 요청에 대한 데이터 송신 루트들의 세트를 결정하고;상기 요청을 서빙하기 위한 네트워크 슬라이스를 할당하고; 상기 데이터 송신 루트들의 세트로부터, 상기 네트워크 슬라이스에 대한 엔드-투-엔드 루트를 결정하며; 그리고 상기 네트워크 슬라이스를 사용하여 그리고 상기 엔드-투-엔드 루트를 통해 상기 요청과 연관된 네트워크 트래픽을 전송하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 네트워크 슬라이싱 엔진은 상기 복수의 노드들의 하나의 각각에서 실행되는 소프트웨어 애플리케이션으로부터 복수의 링크들의 동작 상태에 관한 정보를 수신하도록 구성되고, 상기 소프트웨어 애플리케이션은 상기 복수의 통신 링크들 중 대응하는 하나의 교차-계층 최적화를 수행하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 복수의 무선 통신 방식들은 4G, 5G, 6G, WiFi, 및 레이더 통신 방식들 중 적어도 2개 이상을 포함하는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서, 상기 복수의 노드들의 각각은 상기 네트워크 슬라이싱 엔진을 실행하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서, 상기 적어도 하나의 요청은,상기 요청의 설명, 상기 요청과 연관된 수용가능한 레이턴시, 상기 요청과 연관된 수용가능한 스루풋, 및 상기요청과 연관된 대응하는 경험 품질을 포함하는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,공개특허 10-2024-0133719-3-상기 엔드-투-엔드 루트는 상기 복수의 무선 통신 방식들 중 적어도 2개를 통한 데이터 경로인, 이종 멀티-벤더네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 네트워크 슬라이싱 엔진은 네트워크 슬라이스 재고에서 이용가능한 복수의 네트워크 슬라이스들 중에서 상기 네트워크 슬라이스를 선택하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 네트워크 슬라이싱 엔진은 상기 네트워크 슬라이스 재고로부터 상기 복수의 네트워크 슬라이스들을 수신하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 네트워크 슬라이싱 엔진은 상기 요청과 연관된 하나 이상의 파라미터들에 기초하여 상기 네트워크 슬라이스를 선택하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 네트워크 슬라이싱 엔진은 최적화 문제에 대한 해결책을 결정함으로써 이종 멀티-벤더 네트워크에 걸쳐 상기 엔드-투-엔드 루트를 결정하도록 구성되는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서, 상기 최적화 문제는 상기 데이터 송신 루트들의 세트 및 상기 세트 내의 각각의 송신 루트의 연관된 특성들, 상기 요청과 연관된 하나 이상의 성능 파라미터들, 및 가용 네트워크 슬라이스들에 기초하는, 이종 멀티-벤더 네트워크."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 하나 이상의 양태는, 교차-계층 네트워크 최적화를 제공하고 연관된 QoE(Quality of Experience) 및 QoS(Quality of Service)를 충족시키기 위한 네트워크 리소스들의 이용가능성을 보장하기 위해 이종 멀티-벤더 환경에서 네트워크 노드들 상에서 실행되는 소프트웨어 에이전트들(애플리케이션들)로서 제공되는 네트워크 최적 (뒷면에 계속)"}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "연방정부 지원 연구 또는 개발에 관한 진술 본 출원은 NASA(National Aeronautics and Space Administration)가 중소기업 혁신 연구 프로그램 하에 수여한 계약 번호 80NSSC21C0205 및 80NSSC22CA141에 따른 정부 지원으로 이루어졌다. 미국 정부는 본 발명의 특정 권리를 갖는다. 관련 출원들에 대한 상호 참조 본 출원은 2021년 12월 20일에 출원되고 \"INTELLIGENT NETWORK SLICING AND POLICY-BASED ROUTING ENGINE\"이라 는 명칭의 특허 가출원 제63/291,839호를 우선권 주장하는, 2022년 12월 20일에 출원되고 \"INTELLIGENT NETWORK SLICING AND POLICY-BASED ROUTING ENGINE\"이라는 명칭의 미국 정규 출원 제18/069,157호를 우선권 주 장하며, 그 개시는 모든 목적을 위해 그 전체가 본원에 참조에 의해 통합된다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "기술분야 본 개시의 주제는 일반적으로 무선 네트워크 동작의 분야에 관한 것으로, 보다 구체적으로는 이종 멀티-벤더 네 트워크 아키텍처에서 네트워크 동작의 최적화에 관한 것이다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "무선 광대역은 경제 성장, 일자리 창출 및 글로벌 경쟁력의 중요한 구성 요소를 나타내며, 이는 소비자들이 일 상 생활에 도움이 되는 무선 광대역 서비스를 점점 더 많이 사용하고 있기 때문이다. 무선 광대역 서비스 및 이와 관련된 네트워크 용량에 대한 요구가 급증하고 있으며, 이에 따라 이러한 요구를 충족할 수 있는 다양 한 시스템 및 아키텍처가 개발되고 있으며, 이들은 이종 멀티-벤더 네트워크의 혼합된 토폴로지를 포함하지만 이에 제한되지 않는다. 임의의 이종 멀티-벤더 네트워크에서 네트워크 트래픽을 관리하는 것은 데이터가 통신되는 상이한 환경들 및/또 는 상이한 시스템들(예를 들어, WiFi, 4G, 5G, 레이더 등)의 존재로 인해 매우 복잡한 프로세스이다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 하나 이상의 양태는 교차 계층 네트워크 최적화를 제공하고 연관된 경험 품질(QoE) 및 서비스 품질 (QoS)을 충족시키기 위해 임의의 사용자에 대한 네트워크 리소스의 가용성을 보장하기 위해 이종 멀티-벤더 환 경에서 다양한 네트워크 노드 상에서 실행되는 소프트웨어 에이전트(애플리케이션)로서 제공되는 하나 이상의 네트워크 최적화 솔루션에 관한 것이다. 일 양태에서, 이종 멀티-벤더 네트워크는, 적어도 2개의 네트워크 엔드포인트들 사이의 무선 통신을 가능하게 하도록 구성된 복수의 노드들 - 복수의 노드들 각각은 복수의 무선 통신 방식들 중 하나에 따라 동작하도록 구 성됨 -; 및 복수의 노드들 중 적어도 하나 상에서 실행되는 네트워크 슬라이싱 엔진을 포함한다. 네트워크 슬라이싱 엔진은, 데이터 송신을 위한 이종 멀티-벤더 네트워크에 대한 액세스를 위해 적어도 하나의 네트워크 엔드포인트로부터 적어도 하나의 요청을 수신하고; 복수의 노드들 사이의 복수의 통신 링크들의 동작 상태에 관한 정보를 수신하고; 요청에 대한 데이터 송신 루트들의 세트를 결정하고; 요청을 서빙하기 위한 네트 워크 슬라이스를 할당하고; 데이터 송신 루트들의 세트로부터, 네트워크 슬라이스에 대한 엔드-투-엔드 루트를 결정하고; 그리고 네트워크 슬라이스를 사용하여 그리고 엔드-투-엔드 루트를 통해 요청과 연관된 네트워크 트 래픽을 전송하도록 구성된다. 다른 양태에서, 네트워크 슬라이싱 엔진은 복수의 노드들 각각 중 하나에서 실행되는 소프트웨어 애플리케이션 으로부터 복수의 링크들의 동작 상태에 관한 정보를 수신하도록 구성되고, 소프트웨어 애플리케이션은 복수의 통신 링크들 중 대응하는 하나의 교차-계층 최적화를 수행하도록 구성된다. 다른 양태에서, 복수의 무선 통신 방식들은 4G, 5G, 6G, WiFi, 및 레이더 통신 방식들 중 적어도 2개 이상을 포 함한다. 다른 양태에서, 복수의 노드들 각각은 네트워크 슬라이싱을 실행하도록 구성된다. 다른 양태에서, 적어도 하나의 요청은, 요청의 설명, 요청과 연관된 수용가능한 레이턴시, 요청과 연관된 수용 가능한 스루풋, 및 요청과 연관된 대응하는 경험 품질을 포함한다. 다른 양태에서, 엔드-투-엔드 루트는 복수의 무선 통신 방식들 중 적어도 2개를 통한 데이터 경로이다. 다른 양태에서, 네트워크 슬라이싱 엔진은 네트워크 슬라이스 재고에서 이용가능한 복수의 네트워크 슬라이스들 중에서 네트워크 슬라이스를 선택하도록 구성된다. 다른 양태에서, 네트워크 슬라이싱 엔진은 네트워크 슬라이스 재고로부터 복수의 네트워크 슬라이스들을 수신하 도록 구성된다. 다른 양태에서, 네트워크 슬라이싱 엔진은 요청과 연관된 하나 이상의 파라미터들에 기초하여 네트워크 슬라이 스를 선택하도록 구성된다. 다른 양태에서, 네트워크 슬라이싱 엔진은 최적화 문제에 대한 해결책을 결정함으로써 이종 멀티-벤더 네트워크 에 걸친 엔드-투-엔드 루트를 결정하도록 구성된다. 다른 양태에서, 최적화 문제는 데이터 송신 루트들의 세트 및 세트 내의 각각의 송신 루트의 연관된 특성들, 요 청과 연관된 하나 이상의 성능 파라미터들, 및 가용 네트워크 슬라이스들에 기초한다. 일 양태에서, 하나 이상의 비일시적 컴퓨터 판독가능 매체는 컴퓨터 판독가능 명령들을 포함하고, 컴퓨터 판독 가능 명령들은, 적어도 2개의 네트워크 엔드포인트들 사이의 무선 통신을 가능하게 하도록 구성된 복수의 노드 들을 갖는 이종 멀티-벤더 네트워크에서 하나 이상의 제어기들에 의해 실행될 때 - 복수의 노드들 각각은 복수 의 무선 통신 방식들 중 하나에 따라 동작하도록 구성됨 -, 제어기로 하여금, 데이터 송신을 위해 이종 멀티-벤 더 네트워크에 대한 액세스를 위해 적어도 하나의 네트워크 엔드포인트로부터 적어도 하나의 요청을 수신하게 하고; 복수의 노드들 사이의 복수의 통신 링크들의 동작 상태에 대한 정보를 수신하게 하고; 요청에 대한 데이 터 송신 루트들의 세트를 결정하게 하고; 요청을 서빙하기 위한 네트워크 슬라이스를 할당하게 하고; 데이터 송 신 루트들의 세트로부터, 네트워크 슬라이스에 대한 엔드-투-엔드 루트를 결정하게 하고; 그리고 네트워크 슬라 이스를 사용하여 그리고 엔드-투-엔드 루트를 통해 요청과 연관된 네트워크 트래픽을 전송하게 한다. 일 양태에서, 방법은 적어도 2개의 네트워크 엔드포인트들 사이의 무선, 지상 또는 우주 통신을 가능하게 하도 록 구성된 복수의 노드들 - 복수의 노드들 각각은 복수의 무선 통신 방식들 중 하나에 따라 동작하도록 구성됨 -; 및 복수의 노드들 중 적어도 하나 상에서 실행되는 네트워크 슬라이싱 엔진을 포함하는 이종 멀티-벤더 네트 워크에서 구현될 수 있다. 방법은, 네트워크 슬라이싱 엔진에 의해, 데이터 송신을 위한 이종 멀티-벤더 네 트워크에 대한 액세스를 위해 적어도 하나의 네트워크 엔드포인트로부터 적어도 하나의 요청을 수신하는 단계; 복수의 노드들 사이의 복수의 통신 링크들의 동작 상태에 관한 정보를 수신하는 단계; 요청에 대한 데이터 송신 루트들의 세트를 결정하는 단계; 요청을 서빙하기 위한 네트워크 슬라이스를 할당하는 단계; 데이터 송신 루트 들의 세트로부터, 네트워크 슬라이스에 대한 엔드-투-엔드 루트를 결정하는 단계; 및 네트워크 슬라이스를 사용 하여 그리고 엔드-투-엔드 루트를 통해 요청과 연관된 네트워크 트래픽을 전송하는 단계를 포함한다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시의 다양한 실시형태들은 하기에서 상세하게 논의된다. 특정 구현들이 논의되지만, 이는 예시의 목적 으로만 행해짐을 이해해야 한다. 관련 분야의 당업자는 다른 컴포넌트들 및 구성들이 본 개시의 사상 및 범 위를 벗어남이 없이 사용될 수 있음을 인식할 것이다. 따라서, 다음의 설명 및 도면들은 예시적이고, 제한 적인 것으로 해석되어서는 안 된다. 본 개시의 완전한 이해를 제공하기 위해 다수의 특정 세부 사항이 설명 된다. 그러나, 특정 경우들에서, 설명을 모호하게 하는 것을 피하기 위해 잘 알려진 또는 종래의 세부사항 들은 설명되지 않는다. 본 개시에서의 하나 또는 실시형태에 대한 참조는 동일한 실시형태 또는 임의의 실 시형태에 대한 참조일 수 있으며, 이러한 참조는 실시형태들 중 적어도 하나를 의미한다. \"하나의 실시형태\" 또는 \"실시형태\"에 대한 언급은, 그 실시형태와 관련하여 기술된 특정한 특징, 구조 또는 특 성이 본 개시의 적어도 하나의 실시형태에 포함된다는 것을 의미한다. 본 명세서에서의 다양한 곳들에서의 \"일 실시형태에서\" 문구의 출현이 반드시 모두가 동일한 실시형태를 지칭하는 것은 아니거나 또는 별도의 또는 대안적인 실시형태들이 다른 실시형태들에 대해 상호 배타적인 것은 아니다. 또한, 다른 실시형태들이 아닌 일부 실시형태들에 의해 나타낼 수 있는 다양한 특징들이 설명된다. 본원에서 사용되는 용어들은 본 발명의 문맥 내에서 그리고 각각의 용어가 사용되는 특정 문맥에서 일반적으로 당업계에서 통상적으로 사용되는 의미를 갖는다. 대안적인 언어 및 동의어들은 본원에서 논의된 용어들 중 임의의 하나 이상에 대해 사용될 수 있고, 또한 용어가 본원에서 설명되거나 논의되지 않는지 여부에 대해 특별한 의미가 부여되어서는 안된다. 일부 경우에, 특정 용어에 대한 동의어들이 제공된다. 하나 이상의 동 의어 반복은 다른 동의어의 사용을 배제하지 않는다. 본원에서 논의된 임의의 용어들의 예들을 포함하는, 본 명세서에서 임의의 예들의 사용은 단지 예시적인 것이며, 본 개시 또는 임의의 예시적인 용어의 범위 및 의 미를 추가로 제한하도록 의도되지 않는다. 마찬가지로, 본 개시는 본 명세서에 주어진 다양한 실시형태들로 제한되지 않는다. 본 개시의 범위를 제한하고자 의도함이 없이, 본 개시의 실시형태들에 따른 기기, 장치, 방법 및 이들의 관련 결과의 예들은 아래 주어진다. 제목 또는 부제목은 독자의 편의를 위해 예에서 사용될 수 있으며, 이는 본 발명의 범위를 제한하지 않는다. 달리 정의하지 않으면, 본원에 사용하는 기술 및 과학 용어는 본 개시 내 용이 속하는 분야의 숙련된 자들 중 한명이 통상적으로 이해하는 것으로서 의미를 갖는다. 상충되는 경우, 정의를 포함하는 본 명세서가 우선할 것이다. 본 개시의 추가 특징 및 이점은 하기의 상세한 설명에 기재될 것이고, 일부는 상세한 설명으로부터 명백하거나 본원에 개시된 원칙들에 의해 습득될 수 있다. 본 개시의 특징들 및 이점들은 첨부된 청구 범위에서 특별히 지적된 기기들 및 조합들에 의해 실현되고 획득될 수도 있다. 본 개시의 이들 및 다른 특징들은 이하의 상 세한 설명 및 첨부된 청구 범위로부터 더 완전히 명백해질 것이며, 또는 본 명세서에서 기술된 원리들의 실시에 의해 학습될 수도 있다. 다음은 본 개시 전반에 걸쳐 사용/참조될 수 있는 약어들의 표이다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "위에서 언급된 바와 같이, 상이한 타입들의 무선 서비스 제공자들(예를 들어, WiFi, 4G, 5G, 레이더 등)이 다양 한 연결된 엔드포인트들로의 연결을 제공하기 위해 상이한 환경들에서 상호연결되는 이종 멀티-벤더 환경들에서 네트워크 트래픽을 관리하는 것은 매우 복잡한 문제이다. 전체적인 엔드 투 엔드 연결은 무선, 케이블 및 광섬유를 포함할 수 있는 다양한 전송 메커니즘을 포함할 수 있다. 현대의 통신 시스템들은 일반적으로 간섭 및 네트워크 혼잡을 겪는다. 이러한 장애들은 정보 전달을 위한 서비스 품질(QoS) 및 사용자들을 위한 경험 품질(QoE)에 영향을 미친다. 간섭 또는 혼잡에 대응하기 위해, 문제 및 그 위치를 검출하고 특징화하는 상황 인식을 갖는 것이 유용하고, 완화 전략(예를 들어, 동적 스펙트럼 액세스, 스펙트럼 인식 라우팅, 네트워크 슬라이싱)을 이용하는 것이 또한 유용하다. 본 개시는 우주 통신, 연방 기관들을 위한 통신, 국방 애플리케이션들을 위한 통신뿐만 아니라 지상 4G/5G/6G, Wi-Fi, 위성 통신 (SATCOM), 광섬유 통신 및 이들의 조합을 포함하는 매우 다양한 동종 및 이종 통신 아키텍처를 포함하는 매우 다양한 사용 사례에 관한 것이다. 도 1a 내지 도 1d는 본 개시의 일부 양태들에 따른 우주 통신을 가능하게 하기 위해 배치된 이종 멀티-벤더 아 키텍처의 비제한적 예의 다양한 양태들을 예시한다. 도 1a에는 행성 지구 및 달로 형성된 예시적인 환경이 도시된다. 이러한 환경에서, 디바이 스들(하나 이상의 달 기지들로 지칭될 수 있음)과 같은 달의 표면 상의 하나 이상의 엔드포인트들은 하나 이상의 궤도 커맨드 센터들(궤도 릴레이들)에 통신 가능하게 결합될 수 있으며, 이는 이어서 달 주위를 선회하는 하나 이상의 위성들 및/또는 메인 우주 스테이션에 통신 가능하게 결합된다. 위 성들 및 우주국들 각각은 지상 기반 수신기를 통해 하나 이상의 지구국들에 통신가능하게 결합될 수 있다. 도 1a에 도시되지 않았지만, 디바이스에 통신가능하게 결합될 수 있는 달의 표면 상에 이용되는 사물 인터 넷(IoT) 디바이스들과 같은 하나 이상의 추가 엔드포인트가 있을 수 있다. 유사하게, 지구국 및/또는 수신기에 통신가능하게 결합될 수 있는 지구 상의 스마트폰들, 태블릿들, IoT 디바이스들 등과 같은 하나 이상의 추가적인 엔드포인트들이 존재할 수 있다. 도 1a의 예에서, 달 상의 통신 링크들은 디바이스들로부터 궤도 릴레이들로의 근접 링크들, 궤 도 릴레이들 사이의 릴레이-릴레이 링크들, 궤도 릴레이들과 위성들(110 및/또는 112) 사이의 링크들, 궤도 릴레이들 및/또는 위성들(110/112)로부터 지상국으로의 DTE(direct-to-Earth) 링크들 등을 포함할 수 있다. 통신 링크들은 많은 주파수 대역들에서 동작할 가능성이 높다. 일 예로서, 근접 링크들은 S-대역 및 Ka-대역에서 동작할 수 있다. 릴레이-투-릴레이 링크들은 Ka-대역에서 동작할 수 있거 나, 이들은 광학적일 수 있다. DTE 링크는 X-대역, Ka-대역에서 동작할 수 있고/있거나 광학적일 수 있다. 각각의 대역은 복수의 채널들을 포함할 수도 있다. 이러한 예시적인 통신 링크들은 사용자들이 어드레싱가능하고 라우팅가능한 데이터 유닛들을 사용하여 다른 노 드들로 데이터를 전송할 수 있게 할 수 있는 네트워크 통신(COM)과 같은 임의의 타입의 알려진 또는 개발될 서 비스들을 제공하는 데 사용될 수 있다. 기본 COM 서비스는 실시간 중요 데이터 송신, 저장 및 포워드 모드 에서의 데이터 집성 및 송신, 그리고 메시징이다. 사용자 애플리케이션은 DTN(Delay/Disruption Tolerant Networking), BP(Bundle Protocol) 또는 IP(Internet Protocol)를 사용하여 네트워크 기반일 수 있다. 표 준화된 메시징 서비스들은 서비스 획득, PNT, 및 경고들과 같은 애플리케이션들에 의해 활용될 수 있다. 다른 예시적인 서비스는 달 상의 사용자들뿐만 아니라 근접 링크들에 대한 PNT(Position, Navigation, and Timing) 서비스들을 포함할 수 있다. PNT 서비스는 사용자가 레퍼런스 신호를 사용하여 궤도 또는 달 표면- 기반 자산의 위치 및 속도를 결정할 수 있게 한다. 다른 예시적인 서비스는 사용자에게 경고 및 다른 중요 정보를 제공할 수 있는 검출 및 정보(DET) 서비스를 포 함할 수 있다. 이것은 우주 비행사, 탐사선 및 달 표면의 다른 자산을 포함할 수 있는 사용자의 상황 인식 을 향상시키는 데 사용할 수 있다. DET 서비스는 또한 잠재적으로 위험한 태양 활동을 사용자에게 경고할 수 있다. 이러한 경고는 달 표면에 배치될 수 있는 Wi-Fi™ 및 4G/5G/6G 네트워크를 사용하는 스마트폰을 사용하여 가능하게 될 수 있다. DET 서비스는 달 탐사 및 구조 능력(LunaSAR)도 포함할 수 있다. 다른 예시적인 서비스는 다양한 연구자들이 달 표면에 대한 측정 및 실험을 수행할 수 있게 하는 사이언스(SCI) 서비스를 포함할 수 있다. SCI 서비스의 일부 다른 용도는 달 표면에 있는 전파망원경으로 가능한 전파 천 문학을 포함할 수 있다. 이러한 통신 링크들은 매우 다양한 손상들을 겪을 가능성이 있다. 이러한 손상들은 지구 상의 분산된 간섭 소스들, 동일 채널 간섭을 생성하는 인가된 사용자와 동일한 채널 상에서 통신하려고 시도하는 달 표면 상 의 잘못 구성된 라디오, 달리 사용되는 많은 대역들에서 라디오 주파수(RF) 간섭을 생성하는 태양 플레어, 확인 되지 않은 디바이스로 인한 달 표면 상의 의도하지 않은 또는 의도적인 간섭, 적대자로부터의 의도적인 간섭, 트래픽 과부하로 인한 네트워크 혼잡, 버퍼들이 오버플로우를 야기하는 DDoS(Distributed Denial of Service) 공격 등을 포함할 수 있지만, 이에 제한되지 않는다. 기존 통신 네트워크는 개별 링크를 최적화하고 강건하게 만들 수 있도록 설계되었다. 이 접근법은 피어 투 피어 연결이 요구되는 단순한 미션(예를 들어, 지구에 대한 심우주 탐사선, 지구에 대한 달의 근방)에 대해 작 동하지만, 이는 직접적인 가시선(LoS)이 없는 복잡한 미션에 대해 어려울 수 있으며, 따라서 우주 기반 네트워 크가 생성될 필요가 있다. 이로 인해 궤도 릴레이, 게이트웨이, PNT 및 SCI 서비스를 위한 CubeSat, 그리고 달에서의 표면 활동을 포함하는 복잡한 네트워크가 생성된다. 많은 국가들이 참여할 계획이라는 사실 때문 에 그 미션은 더욱 복잡하다. 각 국가는 자체 페이로드를 가지고 서로 다른 스펙트럼 대역과 자체 버전의 보안 및 암호화 기술을 사용할 가능성이 높다. 미션은 SCI 리턴 데이터 또는 일부 실험을 위한 센서에 대한 액세스를 원하는 대학과 같은 조직을 포함할 수 있다. 이로 인해 엄청난 보안 위험이 발생한다. 동적 스펙트럼 액세스, 스펙트럼 인식 라우팅 및 네트워크 슬라이싱은 위에서 설명된 손상을 완화시키는데 사용될 수 있는 전략 중 일부이다. 네트워크 슬라이싱은 동일한 물리적 네트워크 인프라스트럭처 상에서 가상화되고 독립적인 논리 네트워크들의 멀티플렉싱을 가능하게 하는 네트워크 아키텍처이다. 각 네트워크 슬라이스는 특정 애플리케이션에 의해 요청되는 다양한 요건들을 충족하도록 맞춤화된 격리된 엔드-투-엔드 네트워크이다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "본 개시는 이러한 과제에 대한 해결책을 제시한다. 보다 구체적으로, 자동화된 간섭 및 혼잡 인식 및 완화 를 가능하게 하는 CLAIRE(Cross Layer Cognitive Communications Architecture and Intelligent Routing Engine)과 함께 사용될 수 있는 INSPiRE(Intelligent Network Slicing and Policy-based Routing Engine) 모듈 을 제공하는 해결책이 본 명세서에 개시된다. CLAIRE는 디바이스 상에서 또는 네트워크 내에서 실행할 수 있는 지능형 에이전트 기반 솔루션으로, 네트워크의 관리 및 프로비저닝을 자동화한다. CLAIRE는 간섭 및 혼잡을 완화하고 원하는 QoE를 유지하도록 보장한다. CLAIRE 인지 통신 아키텍처는 상황 인식을 가능하게 하고 간섭 완화 및 네트워크 혼잡을 조정하는 데 도움이 되 는 인지 제어 평면을 사용하여 가능하게 된다. 인지 제어 평면은 네트워크 내의 노드들 간의 하트비트 (HTBT) 메시지를 이용하여 구현된다. 일부 노드들은 광대역 RF 감지 디바이스를 가질 수 있다. CLAIRE 는 RF 감지 모듈, CLS(Cross Layer Sensing), CDE(CLAIRE Decision Engine), PFE(Intelligent Packet Forwarding Engine)를 포함한다. CLS는 RF, 물리 계층(PHY), 매체 액세스 제어(MAC) 계층, 및 네트워크 계층(NET) 통계를 수신하여 네트워크 손 상(예를 들어, 태양 플레어)의 원인을 검출하고 특성화한다. 이러한 통계에 기초하여, RF 감지는 CSP(Cyclostationary Signal Processing)을 포함하는 매우 다양한 기술을 채용하고, CLS는 네트워크 열화의 원 인을 검출하고 특성화하기 위해 ML(Machine Learning)을 채용한다. 그 후에 CDE는 이 정보에 대해 작용하여 완화 전략을 구현한다. CLAIRE 인지 제어 평면은 동적 스펙트럼 액세스(DSA)가 간섭 및스펙트럼 인식 라우 팅을 완화하여 네트워크 혼잡을 완화할 수 있게 한다. RF 감지는 최적의 백업 채널 선택, 스펙트럼 인식 및 문제 해결을 수행할 수 있으며, 혼잡 제어는 스펙트럼 인식 패킷 포워딩/로드 밸런싱을 사용하여 처리된다. 마지막으로 CLAIRE 애플리케이션 사용자 인터페이스는 문제 해결 및 시각화에 도움이 된다. CLAIRE 인지 제어 평면은 애플리케이션 계층(APP)에서 인스턴스화되어 기본 네트워크(들)에 의해 사용되는 임의의 전송 프로 토콜을 이용할 수 있다. 또한, 이 아키텍처는 변경이 쉽게 이루어질 수 있기 때문에 임의의 다른 미래의 군 사, 상업, 지상, 무선 또는 우주 미션에 적용될 수 있다. CLAIRE는 네트워크 최적화에 도움이 될 수 있는 RF 스펙트럼 상황 인식, 교차 계층 감지, 지연 허용 네트워킹 및 동적 스펙트럼 액세스 정보를 전달할 수 있는 확장가능한 프로토콜을 제공한다. 지능형 PFE는 네트워크 혼잡을 완화시키기 위해 스펙트럼 인식 라우팅을 가능하게 한다. PFE는 각각의 링크의 용량 및 차동 버퍼 백로그를 고려하여, 그 후 원하는 QoS에 기초하여 패킷들이 취해야 하는 최적의 링크 및 루트를 선택할 수 있다. CLAIRE 및 그 동작들의 다양한 양태들은 \"SYSTEM AND METHOD FOR INTERFERENCE MITIGATION AND CONGESTION CONTROL THROUGH CROSS LAYER COGNITIVE COMMUNICATIONS AND INTELLIGENT ROUTING\"이라는 명칭의 미국 출원 제 17/933,452호에서 완전히 설명되었으며, 그 전체 내용은 본 명세서에 참조에 의해 통합된다. 아래에서 더 상세히 설명되는 바와 같이, INSPiRE 모듈은 패킷 유형 검사 및 정렬(PTIS) 모듈, 정책 기반 패킷 스케줄러(PPS), 우선순위화된 패킷 버퍼(PPB), INSPiRE 에이전트 및 지연 허용 네트워킹(DTN) 캐시를 포함할 수 있다. INSPiRE 모듈은 INSPiRE 에이전트에 의해 제공되고 네트워크 슬라이스를 오케스트레이션하는 데 도움 이 되는 주어진 정책에 기초하여 패킷 유형을 우선순위화할 수 있다. CLAIRE 및 INSPiRE는 하드웨어에 구애받지 않으며 스위치 또는 라우터와 같은 임의의 라디오 또는 네트워크 요 소에 적용할 수 있다. 즉, CLAIRE 및 INSPiRE는 네트워크 디바이스들, 궤도 릴레이들, 위성들 , 우주국(및 그의 하나 이상의 통신 컴포넌트들), 지구국, 수신기 등과 같은 임의의 네트 워크 노드 상에서 실행될 수 있는 애플리케이션-기반 솔루션들일 수 있다. 일부 예들에서, CLAIRE 는 스펙트럼 인식 패킷 우선순위화를 수행할 수 있는 반면, INSPiRE 는 정책 기반 패킷 우선순위화를 수행할 수 있다. CLAIRE 및 INSPiRE는 서로 협력하여 동작할 때, 이종 멀티-벤더 네트워크 아 키텍처에서 다양한 데이터 통신 서비스 및 작업을 위한 네트워크 및 스펙트럼 리소스를 할당할 수 있다. 아 래에서 더 상세히 설명되는 바와 같이, 통신들의 관리 및 우선순위화는 원하는 성능 (예를 들어, 서비스 품질) 등을 획득하기 위한 다양한 조직들, 미션들, 애플리케이션들, 서비스들의 요구들을 포함하지만 이에 제한되지 않는 다수의 인자들에 기초할 수 있다. 아래에서 더 상세히 설명되는 바와 같이, INSPiRE는 각각의 슬라이스가 정의된 IP 어드레스 범위 및 대응하 는 최대-최소치를 갖는 네트워크 슬라이스들로 데이터 스트림들을 조직화하는 것을 가능하게 한다. 네트워 크 슬라이스들은 무제한 가용성 (상이한 레벨들의 우선순위, 조직들, 미션들 등)을 갖는 논리적 구성들이고, 지상 및/또는 비-지상 네트워크에서 모든 링크의 RF 품질을 결정하는 것을 가능하게 한다. 이것은 이용 가능한 실제 대역폭을 결정하기 위해 CLAIRE와 같은 시스템으로부터 실시간 피드를 얻는 능력을 포함하고; 실제 대역폭을 통합하는 현재 궤도/토폴로지 위치에 기초하여 노드들 사이의 경로들의 최적의 세트(하나 초과) 를 결정하는 것을 가능하게 하고; 네트워크 슬라이스들을 비-지상 네트워크를 통해 이용가능한 경로들 상에 매핑하는 것을 가능하게 한다. -는 이종 멀티-벤더 네트워크 전반에 걸쳐 중요한 네트워크 최적화 기 능을 제공한다. 도 1b의 모델은 INSPiRE 아키텍처에 의해 인에이블되는 예시적인 네트워크 최적화 모델을 도시한다. 네트워크 슬라이스의 예시적인 정의가 또한 도 1b에 제공된다. INSPiRE 모델은 위에서 설명된 변화하는 조건들을 연속적으로 최적화할 수 있다. 그러나, 수학적 가치가 없 는 이벤트들(예를 들어, 태양 플레어와 같은 재난적인 사건들로 인해 네트워크의 전체 재구성이 수학적으로 설 명될 수 없음)을 처리하는 것은 어려울 수 있다. 재난적 또는 복잡한 사건을 처리하기 위해 INSPiRE는 (위 의 -에 추가하여) 5번째 프로세스를 사용한다. 이 프로세스는, 아래에서 더 설명되는 바와 같이, 요 구시 호출될 수 있는 자연어 처리와 함께 AI 간섭 엔진을 사용하는 것에 기초한다. 도 1c의 개략도는 이러한 AI 기반 프로세스의 간단한 예를 예시한다. 도시된 바와 같이, 3개의 예시적 인 조직들(예를 들어, NASA, ESA, JSA)로부터의 트래픽은 2개의 위성(예를 들어, 2개의 릴레이들 및/ 또는 하나 이상의 릴레이들)을 이동하여 수신될 수 있다. INSPiRE 아키텍처는 트래픽을 3개의 예 시적인 네트워크 슬라이스들로 분류할 수 있으며, 이는 이어서 엔드 디바이스들(예를 들어, 달 상의 디바이스들 및 지구 상의 지구국) 사이에서 통신될 수 있다. 일부 예들에서, 수백 개의 애 플리케이션들이 있을 수 있고, 이들은 네트워크 슬라이스들의 세트로서 취급될 수 있다. 다음 INSPiRE는 하나의 위성에 적용된 NASA의 슬라이스 및 제 2 위성에 적용된 파트너 기관을 갖는다. 일부 경우들에서, 제2 위성 중 하나의 장애가 있을 수 있다. 도 1d는 위성들 중 하나가 고장난 예시적 인 시나리오를 예시한다. 라우팅 재구축에 대한 기존의 접근방식은 모든 애플리케이션을 재연결해야 하므로 중요한 데이터가 손실되므로 효율적이지 않다. 대신 INSPIRE는 정책 엔진을 활용하여 그러한 실패를 가장 잘 처리하는 방법을 결정할 수 있다. 도 1d의 예에서, INSPiRE 에이전트는 정책 엔진이 응 답할 수 있는 위성을 손실했다는 것을 정책 엔진과 통신할 수 있고, 라우팅 엔트리를 제거하고 최 소 애플리케이션 값을 유지하면서 나머지 위성을 사용하도록 네트워크 슬라이스를 리라우팅하도록(즉, 수 백 개의 애플리케이션 대신에 단지 2개의 네트워크 슬라이스) INSPiRE 모듈에 지시할 수 있다. 도 2는 본 개시의 일부 양태들에 따른, CLAIRE 애플리케이션 및 INSPiRE 모듈의 내부 작업들의 추상화를 예시한 다. 추상 아키텍처는 2개의 예시적인 CLAIRE 애플리케이션들(204 및 206)(CLAIRE는 위성 상에 설치 되고 실행될 수 있고 CLAIRE는 지구 수신기 상에 설치되고 실행될 수 있음)에 통신가능하게 결합될 수 있는 예시적인 INSPiRE 모듈을 도시한다. 일부 예들에서, 모든 네트워크 노드(예를 들어, 엔드포인트 디바이스, 라우터, 게이트웨이 등)는 CLAIRE의 하나 의 인스턴스 및 그 상에서 실행되는 INSPiRE 모듈의 하나의 인스턴스를 가질 수 있다. 다른 예로, CLAIRE 모듈이 모든 노드에 설치되어 실행될 수 있는 반면, INSPiRE 모듈은 지정된 수의 네트워크 노드에 설치되어 실 행될 수 있다. CLAIRE 애플리케이션(204 및 206)은 특정 통신 링크의 상태(예를 들어, 링크의 RF 상태)에 관한 다양한 정보를 INSPiRE 모듈에 제공할 수 있다. 도 3을 참조하여 아래에서 설명될 바와 같이, INSPiRE 모듈은 네트워크 및 RF 상태 컴포넌트 및 정책 엔진과 같은 서브-컴포넌트들을 가질 수 있다. 도 3을 참 조하여 아래에서 설명될 다른 컴포넌트들 중에서, 컴포넌트, 정책 엔진을 사용하여, INSPiRE 모듈 은 특정 요청된 서비스에 대해 사용되거나 전용될 수 있는 다수의 가용 네트워크 슬라이스들을 포함하는 네트워크 슬라이스 재고에 액세스할 수 있다. 일 예에서, 슬라이스들 A-E 각각은 (예를 들어, 제어 평 면 정보 및 시그널링의 교환, 이미징 애플리케이션들, PNT 유지보수, 초신성, SCI 등을 위한) 특정 타입의 통신 서비스와 연관될 수 있다. 인지 시스템(CLAIRE 및 INSPiRE에 의해 인에이블됨)은 이종 멀티-벤더 통신 인프라스트럭처를 포함하는 통신 인 프라스트럭처를 위한 통신 능력들을 최적화하기 위해 자신의 경험들 및 환경으로부터 감지, 검출, 적응 및 학습 할 수 있다. 본 명세서에 개시된 INSPiRE 모듈은 미션 및 네트워크 동작 부담, 미션 사이언스 데이터 리턴 을 증가시키고, 리소스 효율 및 통신 네트워크를 개선하고, 우주와 같은 예측 불가능한 환경에서 탄력성을 보장 한다. 전술한 바와 같이, CLAIRE는 INSPiRE에 분산 스펙트럼 및 네트워크 상황 인식을 제공하여 링크 계층 선택, 패킷 포워딩 및 최적화를 가능하게 하여 전술한 바와 같이 SCI, NET, DET, PNT 서비스 등과 같은 상이한 프로젝트에 대한 원하는 QoE 요건에 기초하여 데이터 흐름을 최대화할 수 있다. 일부 예들에서, INSPiRE는 특정 시간에 통신 아키텍처(예를 들어, 이종 멀티-벤더 네트워크)에 대한 액세스 및 그의 사용을 요청하는 사용자들의 정책들 및 우선순위들을 알고 있고 또한 글로벌 작전상황도를 갖기 때문에 CLAIRE에 의해 이루어진 결정들을 능가할 수 있다. CLAIRE가 로컬 링크 레벨 최적화에 참여하는 동안 INSPiRE는 네트워크의 글로벌 최적화에 참여하여 다양한 사용자에게 QoE(경험 품질)를 제공한다. CLAIRE 결 정 엔진은 INSPiRE에 RF 및 링크 상황 인식을 제공한다. INSPiRE 에이전트는 CLAIRE에 네트워크 정책들의 흐름을 제공한다. 이 결과로, INSPiRE 에이전트는 네트워크 용량이 저하되는 경우 정책 기반 패킷 스케줄러를 통해 패킷의 네트워크 흐름을 추가로 제한할 수 있다. 또한, 특정 통신 방식을 통해 특정 패킷 들을 송신하도록 패킷 포워딩 엔진에 구체적으로 지시할 수 있다. 일 예로서, 간섭 또는 혼잡 상황들 동안, INSPiRE 에이전트는 Netflix와 같은 비디오 애플리케이션들의 우선순위를 감소시키고 그 패킷들을 Wi-Fi를 통해 흐르게 하는 한편, 텔레컨퍼런스 패킷들의 우선순위를 상승시키고 그 패킷들을 5G 네트워크를 통해 흐르게 할 수 있다. 마찬가지로, CLAIRE는 INSPiRE가 링크 상태를 인식하고 처리할 수 있는 것보다 많은 트래픽을 제 공하지 않도록 보장하고, 그렇지 않으면 혼잡이 발생하기 때문이다. 논리적 관점에서 INSPiRE 아키텍처는 링크 계층 선택, 패킷 포워딩 및 최적화를 제공하기 위해 네트워크 토 폴로지, RF 성능 및 정책 기반 우선순위를 이용할 수 있다. 및 는 CLAIRE에 의해 제공될 수있는 반면, 은 특정 기본 미션 또는 목적을 위한 네트워크 리소스의 사용을 요청하는 임의의 엔티티에 의해 제공될 수 있다. 보다 중요하게는, 실제 경로 최적화가 복잡한 계산이지만, INSPiRE는 경로를 도 2에 도시 된 바와 같이 가상 네트워크 슬라이스로 추상화할 수 있다. 네트워크 슬라이스들은 멀티플렉싱 헤더를 이용 하는 논리적 구성들이다. INSPiRE는 NFV(Network Function Virtualization), 보안, SLA(Service Level Agreement) 및 PBR(Policy-based Routing)의 형태로 5G 네트워크의 흥미로운 측면을 가져올 수 있으며, 이를 통해 네트워크 운영자는 링크 최적화에서 한 단계 더 나아가 각각의 서비스에 대해 안전한 슬라이스를 생성할 수 있다. 5G 네트워크 슬라이싱은 가상화되고 독립적인 멀티플렉싱을 가능하게 하는 네트워크 아키텍처이다. 각 네트워크 슬라이스 (예를 들어, 도 2 에 도시된 예시적인 슬라이스들 A-E) 는 특정 애플리케이션에 의해 요 청되는 다양한 요건들을 충족하도록 맞춤화된 격리된 엔드-투-엔드 네트워크일 수 있다. 이러한 이유로, 이 기술은 매우 상이한 SLR(Service Level Requirement)을 갖는 많은 서비스들을 효율적으로 수용하도록 설계된 5G 모바일 네트워크들을 지원하기 위한 핵심 역할을 가정한다. 네트워크의 이러한 서비스 지향적 관점의 구현 은 공통 네트워크 인프라스트럭처 위에 유연하고 확장가능한 네트워크 슬라이스를 구현할 수 있는 소프트웨어 정의 네트워킹(SDN) 및 NFV의 개념을 활용한다. 일부 예들에서, 각각의 네트워크 슬라이스는 모바일 가상 네트워크 운영자(MVNO)에 의해 관리될 수 있다. 인프라스트럭처 제공자(예를 들어, 전기통신 인프라스트럭처의 소유자)는 기본 물리적 네트워크를 공유하는 MVNO들에 자신의 물리적 리소스들을 임대할 수 있다. 할당된 리소스들의 이용가능성에 따라, MVNO는 그 자 신의 사용자들에게 제공되는 다양한 애플리케이션들에 맞춤화된 다수의 네트워크 슬라이스들을 자율적으로 배치 할 수 있다. 특정 클래스에 국한되고 많은 애플리케이션들을 지원하여 애플리케이션들의 다양한 요구들을 충족할 수 없는 5G 네트워크 슬라이스들과 달리, INSPiRE 네트워크 슬라이스들은 애플리케이션 특정적일 수 있고 임의의 네트워크 노드/위성 콘스텔레이션을 통한 모든 경로들에 걸쳐 실행될 수 있다. 각각의 특정 트래픽이 어느 경로 슬라 이스를 취하는지를 결정하기 위해, INSPiRE 아키텍처는 토폴로지를 결정하고 RF 성능을 측정하기 위해 각각의 시스템 노드 상에 임베딩된 CLAIRE APP를 이용할 수 있다. 수집된 데이터는 루트 최적화가 결정될 수 있는 INSPiRE 관리 시스템에 업로드된다. 그후에, 이러한 최적화들은 정책 결정들을 시행하는 것을 담당하는 (다 양한 네트워크 노드들 상의) 모든 에이전트들에 송신될 수 있다. 각각의 네트워크 슬라이스는 엔드-투-엔드 보안되고 논리적으로 별개의 터널일 수 있고, 따라서 보안성 및 강건성을 제공한다. 도 3은 본 개시의 일부 양태들에 따른, 네트워크 노드 상의 CLAIRE 및 INSPiRE 모듈들의 예시적인 아키텍처를 예시한다. 이 예에서, 노드 j(또는 도 3에 도시된 바와 같은 302(j))는 도 1의 디바이스들, 궤도 릴레 이들, 위성들, 우주국, 지구국, 및/또는 수신기 중 임의의 것 또는 통신 네트워크(예 를 들어, 이종 멀티-벤더 네트워크)에서의 임의의 다른 라우터, 게이트웨이, 및 네트워크 엔드포인트일 수 있다. 이 예에서, 노드(302(j))는, 복수의 데이터 패킷을, 지구국일 수 있는 노드 k(302(k))에 포워딩 하기 위해 요구되는 궤도 릴레이들 중 하나일 수 있다. 반면 도 3은 송신(Tx) 기능 및 수신(Rx) 기능을 갖는 별개의 라디오들을 도시하며, CLAIRE 및 INSPiRE 기 능들은 이에 대해 애그노스틱하다. 이는 단순히 주파수 분할 듀플렉스(FDD) 라디오들을 사용하는 예시 목적들 및 아키텍처들을 위한 것이다. 그러나, 본 개시의 실시형태들은 또한 STAR(Simultaneous Transmit and Receive) 기술을 사용하는 TDD(Time Division Duplex) 또는 FD(Full Duplex) 라디오들에 적용될 수 있다. 이 특정 경우에, 노드(302(j))는 다양한 서비스 타입들 - SCI, NET / COM, DET, PNT 등에 속하는 데이터 패킷 들을 수신할 수 있다. 다양한 트래픽 타입들은 먼저 PTIS(Packet Type Inspection and Sorting) 모듈 을 사용하여 도시된 바와 같이 다양한 입력 버퍼들(입력 버퍼들(308 내지 308(S))로 분리된다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "그 다음, 트래픽 타입들은 네트워크 정책들에 기초하여 정책 기반 패킷 스케줄러(PPS)에 의한 다차원 최적화를 사용하여 우선순위화된다. 정책들은 조직, 미션, 애플리케이션, 및 성능에 기초하여 정의될 수 있다. 도 4는 본 개시의 일부 양태들에 따른, 조직, 미션/애플리케이션, 및 성능 메트릭들에 기초한 정 책들의 비제한적인 예를 예시한다. 도 4의 예는 정책들이 조직 레벨(예를 들어, NASA, 유럽 우주국 등)에서, 그 예들이 도 4에 도시된 미션/애플리케이션 레벨에서, 스루풋, 지터, 레이턴시, 패킷 에러 레이트 등을 포함하지만 이에 제한되지 않는 성능 메트릭 레벨에서 설정될 수 있음을 예시한다. 정책의 일 예는 초신성 이벤트 동안 달 남극으로부터의 SCI 패킷들을 우선순위화하는 것일 수 있다. 정책의 다른 예는 도킹 및 하강 동안 PNT 패킷들을 우선순위화하는 것일 수 있다. 정책 의 제3 예는 태양 플레어 동안 DET 및 제어 패킷들을 우선순위화하는 것일 수 있다. 우선순위화된 패킷들은 그 후 복수의 우선순위화된 패킷 버퍼들(PPB) (우선순위화된 버퍼들 (318 - 318(P)) 로서 도시됨)에 포워딩될 수도 있다. PPS 모듈은 패킷들 1, 3 및 6을 우선순위화할 수 있다. 또한, PPS는 도 3에 도시된 바와 같이 패킷 2를 2A 및 2B로 분해할 수 있다. PPB들은 또한 중간 버퍼들로서 기능할 수 있다. 이 시점에서, 패킷들은 네트워크 정책들에 기초하여 우선순위화된다. 링크 비이용가능성, 링크 열화, 간섭, 또는 네트워크 혼잡의 경우, 덜 중요한 것으로 간주되는 일부 패킷들은, 네트워크 용량이 복원되거나 혼잡이 완화될 때까지, DTN 캐시(예를 들 어, 패킷 2B)에 저장된다. 이러한 표시는 CLAIRE에 의해 INSPiRE에 제공되는데, 그 이유는 CLAIRE가 스펙트럼 및 네트워크의 상황 인식을 갖고 있기 때문이다. INSPiRE 에이전트는 클라우드에 존재할 수 있는 INSPiRE 제어(INSPiRE 제어기)로부터 PPS(31 2)에 정책들을 제공하도록 구성될 수 있다. 이러한 정책들은 원하는 QoE를 다양한 서비스들에 제 공하기 위해 네트워크 슬라이스들이 어떻게 오케스트레이션되어야 하는지를 정의한다. CLAIRE 인지 제어 평면은 다양한 유형들의 하트비트(HTBT) 메시지들을 사용하여 오케스트레이션될 수 있고, DSA가 간섭을 완화할 수 있게 하고, TASCOR(Traffic Spectrum and Congestion Aware Routing)이 네트워 크 혼잡을 완화할 수 있게 할 수 있다. CLAIRE 인지 제어 평면은 애플리케이션 계층(APP)에서 인스턴스화되 므로 네트워크에서 사용되는 모든 전송 프로토콜을 이용할 수 있다. 또한, 이 아키텍처는 변경이 쉽게 이루어질 수 있기 때문에 임의의 다른 미래의 군사, 상업, 지상, 무선 또는 우주 미션에 적용될 수 있다. CLAIRE는 네트워크 최적화에 도움을 줄 수 있는, RF 스펙트럼 상황 인식, 교차-계층 감지, 지연 허용 네트 워킹, 및 DSA 정보의 전달을 허용하는 확장가능 프로토콜을 제공할 수 있다. CLAIRE 모듈은 HTBT 제어 기에 의해 생성되고 수신되는 HTBT를 통해 스펙트럼 및 네트워크 상황 인식을 연속적으로 수신할 수 있다. 예로서, 3개 이상의 상이한 유형의 HTBT들 - HTBT-REGISTRATION, HTBT-NORMAL, 및 HTBT- CRITICAL이 있을 수 있다. HTBT들은 무선 주파수(RF), 물리 계층(PHY), MAC 계층, 및 교차 계층 감지 (CLS) 모듈에 제공될 수 있는 NET 계층 특징들을 포함한다. 교차-계층 특징들은 NF(Noise Floor), SINR(Signal to Interference plus Noise Ratio), RSSI(Receiver Signal Strength Indicator), RSRP(Reference Signal Received Power), PER(Packet Error Rate), BER(Bit Error Rate), RF 감지 모듈 로부터의 간섭 검출 통지 등을 포함할 수 있다. CLAIRE RF 감지는 CSP(Energy Detection and Cyclostationary Signal Processing) 방식을 사용할 수 있다. CLS는 라디오들로부터의 RF 감지 및 교차 계층 특징들을 조합할 수 있고, 선택적으로, 네트워크 손상의 원 인들(예를 들어, 태양 플레어)을 검출하고 특성화하기 위해 기계 학습(ML)을 사용할 수 있다. 그 후, CLAIRE 결정 엔진은 완화 전략을 구현하기 위해 이 정보에 작용한다. RF 감지를 통해 최적의 백업 채 널, 스펙트럼 인식, 포렌식 및 문제 해결을 선택할 수 있다. 일 실시형태에서, RF 감지는 DDTRX(Direct Digital Transceiver) 기술을 사용하여 인에이블될 수 있다. 혼잡 제어는 지능형 패킷 포워딩 엔진(PFE)을 사용하여 인에이블되는 TASCOR을 사용하여 처리될 수 있다. CLS 모듈은 HTBT 메시지들을 통해 노드(302(j))에서 SINR을 수신할 수 있다. 이 정보 및 Hz에서의 채널 대역폭(B)에 기초하여, CLS 모듈은, 예를 들어, Shannon-Hartley 공식: C = B log2(1 + SINR)를 사용하여 그 특정 링크의 용량(C)을 추정할 수 있다. PFE는 유틸리티 함수를 생성하기 위해 각각의 링크의 추정된 용량 및 차등 버퍼 백로그를 고려한다. 그 다음, PFE는 유틸리티를 최대화하기 위해, PPB로부터의 어느 패킷들이 어느 무선 인터페이스를 사용하여(즉, 출력 버퍼들(318 내 지 318(L))로서 도시된 특정 출력 버퍼들에 패킷들을 배치함으로써), 어떤 송신 전력에서, 그리고 어 떤 변조 및 코딩에서 송신될 필요가 있는지에 관한 송신 파라미터들을 선택할 수 있다. 따라서, PFE는 원하는 QoS를 획득하기 위해 이러한 패킷들이 취해야 하는 루트들 및 최적의 링크를 제공할 수 있다. 일부 양태들에서, 패킷 버퍼들 및 우선순위화는 CLAIRE로부터의 실시간 정보에 기초하여 동적으로 변 화한다. 이것은 네트워크가 혼잡 제어 및 로드 밸런싱을 수행하는 것을 돕는다(예를 들어, 태양 플레어가 모든 S-대역 채널을 녹아웃할 때; 이에 응답하여, 모든 트래픽을 K-대역 채널로 라우팅한다). 이 비-제한적 인 예에서, PFE는 패킷들 1 및 2A를 (이들을 최상위 출력 버퍼(358)에 배치함으로써) K-대역 라디오에 포워딩하도록 결정할 수 있다. PFE는 또한 HTBT, 패킷들 4, 8, 9 및 5를 (이들을 중간 출력 버 퍼(358)에 배치함으로써) X-대역 링크를 사용하여 송신하기로 결정할 수 있다. 마지막으로, PFE는 HTBT 및 패킷들(6, 3, 7)을 (이들을 최하부 출력 버퍼(358(L))에 배치함으로써) UHF-대역 라디오에 포워딩하도 록 결정할 수 있다. 각각의 출력 버퍼(318(X))는 특정 라디오에 의해 정의된 각각의 링크 X(링크들 1 - L로 도시됨)와 연관된다. 각각의 링크는, 그 각각의 라디오의 능력들에 따라, 하나 이상의 동작 채널들을 갖는다. 도시된 바와 같이, 각각의 링크 X는 KX 동작 채널들을 갖는다. 예로서, 링크 1을 구현하는 UHF 라디오는 2개의 동작 채널들 상에서 한 번에 송신할 수 있으므로, K1 = 2이다. CLAIRE의 또 다른 기능은 간섭이 존재할 때 DSA를 오케스트레이션하는 것이다. 이것은 HTBT들을 사용 하여 다시 한번 인에이블된다. 지구 상의 노드(302(k))가 간섭을 경험하면, 그 SINR은 (실험들 및/또 는 경험적 연구들에 기초하여 결정될 수 있는) 특정 임계 값 아래로 떨어질 수 있다. 또한, 그의 PER은 (실 험들 및/또는 경험적 연구들에 기초하여 결정될 수 있는) 특정 임계값을 초과하여 증가할 수 있고, RSSI는 특정 임계값 위로 증가할 것이다. 이들 표시에 기초하여, 노드(302(k))는 일련의 중요 HTBT를 노드(302 (j))에 전송하여, DSA를 요청할 수 있다. 노드(302(j))가 N 개의 HTBT들을 수신하고, 이들 HTBT들 중 M 개가 중요하면, 노드(302(j))는 영향을 받는 라디오(예를 들어, X-대역 라디오)의 송신(Tx) 채널을 그것의 현재 동작 채널로부터 백업 채널로 이동시키도록 결정할 수 있다. 한편, 지구상의 수신(Rx) 라디오는 동일하게 수행하고, 링크는 재확립된다. 따라서, CLAIRE 및 INSPiRE는 시스템이 자신의 QoS 및 QoE를 유지하는 것을 보장할 뿐만 아니라, 간 섭 및 혼잡에 대해 강건함을 또한 보장한다. CLAIRE APP 사용자 인터페이스는 문제 해결 및 시각화에 도움 이 된다. CLAIRE 결정 엔진은 INSPiRE에 RF 및 링크 상황 인식을 제공한다. INSPiRE 에이전트 는 CLAIRE에 네트워크 정책들의 흐름을 제공한다. 일 실시형태에서, CLAIRE 및 INSPiRE 모듈 둘 모두는 그래픽 처리 유닛(GPU) 상에 구현될 수 있다. 일부 다른 실시형태에서, CLAIRE 및 INSPiRE는 중앙 처리 유닛(CPU) 상에 구현될 수 있다. 다른 실시형태에서, CLAIRE 및 INSPiRE는 FPGA(Field Programmable Gate Array) 상에서 구현될 수 있다. 다른 실시형태에서, CLAIRE 및 INSPiRE는 주문형 집적 회로 상에서 구현될 수 있다. CLAIRE 및 INSPiRE는 이러한 상이한 프로세서 유형들의 조합 상에서 구현되는 것이 가능하다. 도 5는 본 개시의 일부 양태들에 따른 예시적인 INSPiRE 모듈의 컴포넌트들을 예시한다. INSPiRE 아키텍처 는 주어진 INSPiRE 모듈(예컨대, INSPiRE 에이전트들 1, 2, ...K 중 임의의 하나, 여기서 K는 2 이상의 양의 정수임) 내에 물리적으로 있을 수 있거나, 또는 그에 통신가능하게 결합될 수 있는 다수의 컴포넌트들을 포함할 수 있다. 기존 라우터는 변경되는 애플리케이션이 있는 정적 네트워크를 가정한다. 그러나, 애플리케이션 트래픽을 적절하게 관리하기 위해, 라우터는 네트워크 노드의 3D 위치, 그의 접속 강도, 그의 대역폭 능력 및 우선순위 그리고 액세스를 요청하고 있는 모든 애플리케이션들의 지터/지연 허용 오차를 이해해야 한다. 이것은 예를 들어, 도 1에 도시된 바와 같은 우주 통신의 비제한적인 맥락에서 매우 복잡한 작업이다. 도 5의 INSPiRE 아키텍처는 이러한 다차원 접속 문제를 해결하고 지능형 네트워크 스플라이싱 및 정책 기 반 라우팅 엔진으로서 기능할 수 있다. 도 5에 도시된 바와 같이, INSPiRE 아키텍처는 임의의 INSPiRE 아키텍처에 대해 클라우드 기반이거나 원격으로 위치될 수 있고 그에 통신가능하게 결합될 수 있는 정책 엔진을 포함하는 다수의 컴포넌트들을 포함할 수 있다. 정책 엔진은, 다른 것들 중에서도, 인입 네트워크 트래픽의 우선순위화, 서비스 방법 등과 관련된 이슈들을 해결하기 위해 사용될 수 있는 규칙들 및 정책들의 데이터베이스를 포함할 수 있다. INSPiRE 아키텍처는 INSPiRE 모듈들(514-1, ... 514-K)이 설치되는 네트워크 컴포넌트(예를 들어, 라 우터, 게이트웨이 등) 및/또는 통신 네트워크 내의 다른 네트워크 컴포넌트들의 관련 포지션을 제공할 수 있는 하나 이상의 포지션 추적 컴포넌트를 더 포함할 수 있다. 관련 포지션 정보는 네트워크 컴포넌트(들)의 공간적 위치 및/또는 예측 움직임을 포함할 수 있다. INSPiRE 아키텍처는 슬라이스 서비스 추적기를 더 포함할 수 있다. 일 예에서, 슬라이스 서비스 추적기는 실시간 RF 및 대역폭 측정들, 애플리케이션 우선순위화 및 지터/지연 허용 데이터를 포함하지만 이에 제한되지 않는 정보를 제공할 수 있다. INSPiRE 아키텍처는 슬라이스 재고를 더 포함할 수 있으며, 이는 도 2의 슬라이스 재고와 동일 할 수 있으며, 여기서 주어진 슬라이스는 식별되고 특정 애플리케이션에 대한 특정 사용자를 서비스하기 위해 사용될 수 있다. 슬라이스들은 정책 엔진을 사용하여 활성 슬라이스 재고에 추가되거나 그로부터 제거 될 수 있다. 각각의 슬라이스는 ID, 연관된 조직, 연관된 활동, 및 연관된 애플리케이션을 가질 수 있다. 이들 외에도 슬라이스는 우선 순위, 레이턴시 및 스루풋 요구 사항을 수행해야 하는 방법과 관련된 속성을 가질 수 있다. 어떤 성능 특성이 중요한지를 강조하기 위해 전체 QoE 우선 순위를 각 슬라이스에 대해 설정 할 수 있다. 컴포넌트들(502, 504, 506, 및 508)은 정책 엔진, 포지션 추적 컴포넌트, 슬라이스 서비스 추적기 등에 의해 제공되는 다양한 정보에 기초하여 네트워크 트래픽의 적절한 네트워크 슬라이싱 및 정책-기반 라우팅을 결정하는 네트워크 슬라이싱 엔진에 통신가능하게 결합될 수 있다. 네트워크 슬라이싱 엔진 은 INSPiRE 모듈들(514-1, ..., 514-K)에 대해 원격으로 위치될 수 있다(예를 들어, 네트워크 슬라이싱 엔 진은 지구국에 위치될 수 있다). 일부 예들에서, 네트워크 슬라이싱 엔진은 최상의 가능한 네트워크 구성들(정책-비인식 구성들)에 관한 정보를 사용하고, 이를 슬라이스 재고, 정책 엔진, 포 지션 추적 컴포넌트, 및/또는 슬라이스 추적기로부터 이용가능한 정보와 조합하여, 슬라이스들을 선 택하고 라우팅들에 할당하고 특정 라우팅 명령들을 각각의 노드에 배치한다. 네트워크 슬라이싱 엔진은 하나 이상의 INSPiRE 모듈(514-1, ..., 514-K)과 인터페이싱될 수 있으며, 이들 각각은 도 3의 INSPiRE 모듈과 동일할 수 있고, 예를 들어, 도 1의 네트워크의 임의의 네트워크 노드 상에 설치 및 실행될 수 있다. INSPiRE 아키텍처는 네트워크 슬라이싱 엔진과 통신하고, 커맨드들(예를 들어, 데이터 송신을 위한 네트워크에 대한 액세스를 위한 요청들), 제어 커맨드들, 및/또는 송신을 위한 데이터를 포함하는 다양한 입력들을 수신하도록 구성된 입력 컴포넌트를 더 포함할 수 있다. INSPiRE 모듈(514-1, ..., 514-K)과 같은 INSPiRE 모듈은 CLAIRE 애플리케이션(들)과 협력하여 분산형 컴퓨팅 모델을 통해 실시간으로 그리고 규모대로 다차원 라우팅 문제를 해결한다. INSPiRE 아키텍처는 복잡한 태스크를 2개의 병렬 블록(애플리케이션 및 인프라스트럭처 관리)으로 분할함으로써 이 솔루션을 달성할 수 있 다. 첫째, INSPiRE 아키텍처는 기본 네트워크 인프라스트럭처로부터 애플리케이션 계층을 추상화하기 위해 네트워크 슬라이스의 5G 개념을 확장할 수 있다. 다음 INSPiRE 아키텍처는 라우팅 노드들(예를 들어, 노드(302(j), 302(k) 등))의 변화하는 포지셔닝 및 포지션 추적 컴포넌트, 슬라이스 서비스 추적기 와 같은 컴포넌트들에 의해 제공되는 RF/링크 품질을 반영하는 라우팅 테이블을 갖는다. INSPiRE 아키텍처는 그 후 우선순위 및 성능 엔벨로프에 기초하여 특정 애플리케이션에 대한 최적의 경로 를 구성할 수 있다. 이벤트 및/또는 정책 변경으로 인해 정책을 동적으로 변경하기 위해, INSPiRE 아키텍처 는 AI 추론 엔진을 통합할 수 있다. INSPiRE는 우주 애플리케이션의 맥락에서 제시되지만, 드론들 및 벌룬들을 통해 트래픽을 라우팅하는 것으로부 터 항공기-대-항공기-대-지상 통신들로, 심지어 이용가능한 무엇이든지 발견하고 사용해야 하는 침수된 지역에 서 일하는 응급 의료요원(first responder)들을 보조하는 것까지의 임의의 복잡한 네트워크 문제를 해결하는 것 이 다른 맥락들에서도 동등하게 적용가능할 수 있다. 일부 예들에서 그리고 아래에서 추가로 설명될 바와 같이, INSPiRE 모듈들 및 그들의 기능은, 토폴로지/궤도 역 학의 변경, RF 조건들의 변경, 애플리케이션 요건들의 변경 및 정책들의 변경에 기초하여 최적의 패킷 포워딩 결정들을 동적으로 결정하기 위해 훈련된 뉴럴 네트워크 모델들 및 AI를 사용함으로써 추가로 향상될 수 있다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 5, "content": "도 6은 본 개시의 일부 양태들에 따른 도 5의 INSPiRE 모듈에 의해 결정된 상이한 네트워크 슬라이스들에 대한 물리 계층에서의 리소스 할당의 비제한적인 예를 예시한다. 도 6은 eMBB(enhanced mobile broadband) 슬라이스, uRLLC(Ultra Reliable Low Latency) 슬라이스, mMTC(Massive Machine-type Communications) 슬라이스 등을 오케스트레이션하기 위해 리소스 블록들(60 0)과 같은 직교 주파수 분할 다중 액세스(OFDMA) 리소스 블록들의 상이한 부분들을 할당함으로써 5G가 어떻게 네트워크(NET) 요건들을 물리(PHY) 계층 아래로 흐르게 하는지를 도시한다. 일부 예들에서, INSPiRE는 5G에서와 같이 네트워크 슬라이스들의 단지 3개의 광범위한 클래스들을 생성하기보다 는, 도 4에 도시된 바와 같이 조직, 미션/애플리케이션, 성능 및 서비스를 사용하여 네트워크 슬라이스 온톨로 지를 정의한다. INSPiRE는 네트워크 환경의 변화를 자율적으로 검출하고 인간의 개입 없이 조정할 수 있다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "5G 네트워크 슬라이스는 5G 서비스 제공자가 상이한 특징들을 갖는 상이한 레이트 플랜들을 생성할 목적으로 5G 인프라스트럭처를 추상화할 수 있게 한다 (예를 들어, 최소 품질이 없는 저비용 소비자 대 클라우드 앱들에 접 속하는 프리미엄 엔터프라이즈 클라이언트들). INSPiRE는 5G 네트워크 슬라이스 개념을 확장하여 주어진 미 션에서 발생할 애플리케이션, 조직 및 이벤트까지 표현한다. INSPiRE는 애플리케이션을 네트워크 슬라이스 에 매핑하고, 이 슬라이스는 다시 전용 출력 버퍼에 동적으로 매핑되어 매우 세밀한 패킷 스케줄링을 가능하게 한다. 이것은 INSPiRE가 NET 요구사항들을 PHY 계층에 아래로 전송하고 사용자들이 원하는 QoE를 수신하도 록 보장할 수 있는 방법이다. 도 1의 우주 통신의 예에서, 목표는 네트워크 사용자들의 관점에서 이러한 세부사항들을 오케스트레이션하면서 다양하고 경쟁적인 미션 요구들 및 트래픽 유형들 사이에서 활용된 이종 멀티-벤더 네트워크를 최상으로 사용하 는 것이다. 미션 플래너 및 네트워크 사용자는 자신의 미션을 계획할 때 네트워크의 능력에 대한 지식을 가 지고 있지만, 특정 세부 사항을 계획하고 다른 사용자와의 리소스 공유를 조정함으로써 부담을 갖지 않아야 한 다. 예를 들어, 도 5의 INSPiRE 아키텍처를 통해, 각각의 미션 디렉터가 특정 루트들 상에서의 데이터 전송 들을 스케줄링하는 대신에, 용량, 레이턴시 및 경로-다이버시티 - 현재 이용가능하고 미래에 예측됨 - 와 같은"}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "네트워크 리소스들을 요약할 수 있고, 미션 디렉터는 이용가능한 현재 정책들 및 네트워크 리소스들에 따라 적 절한 시간 동안 활성 슬라이스를 스케줄링할 것이다. 관리자는 다수의 슬라이스와 정책 및 성능에 대해 네 트워크 전체에 대한 뛰어난 시각화 도구를 가지고 있어야 한다. 마지막으로, 슬라이스가 활성일 때, INSPiRE는 슬라이스의 성능을 달성하기 위해 네트워크의 최적의 구성을 결정할 수 있다. 네트워크 구성 과제 - 즉 측정, 최적화, 구성 - 는 결코 간단하지 않다. 측정은 네트워크 내의 모든 자산들 의 재고를 유지하는 것을 포함한다. 또한, 양호한 감지 데이터 및 감지 데이터의 집성(aggregation)이 요구 된다. 최적화는 이력 데이터를 고려하고, 미래에 대한 예측을 수행하며, 잠재적으로 불완전한 정보를 처리 하는 알고리즘을 필요로 한다. 구성을 수행하려면 정책을 구현하는 명령을 각 노드에서 각 라우터에 통신하 는 방법이 필요하다. 리소스를 효율적으로 사용하려면 네트워크 자산을 재고하기 위한 통일된 접근 방식이 필요하다. 이 궤도 추 적 시스템은 네트워크, 특히 도 1을 참조하여 전술한 것과 같은 우주 통신을 위해 배치된 지상-비지상 네트워크 가 적어도 가시선 결정을 확립하는 데 중요하다. 네트워크 리소스의 재고는 포지션과 가시선을 훨씬 넘어선다. 라디오와 위성은 다른 우주 기관에 의해 제어 될 수 있고 호환될 수 있지만 연결하기 위한 조직적 노력이 필요하다. 예를 들어, NASA의 모든 라디오가 반 드시 호환가능한 것은 아니다. PHY 및 LINK 프로토콜 계층에는 호환성이 있어야 한다. 라디오는 동일한 대역에서 동작하고, 동일한 변조 및 코딩을 사용하며, 동일한 MAC 프로토콜을 사용해야 한다. 송신 및 수신 안테나들의 방향성은 또한 노드들을 재구성하는 시간 또는 에너지와 같은 조정 비용들과 함께 실 현가능성에 관련된다. 노드의 스토리지, 컴퓨팅 및 전원 기능도 재고되어야 한다. 우주 네트워크는 지 연 허용 네트워크로서, 데이터 손실을 방지하기 위해 스토리지 용량이 매우 중요하다는 것을 의미한다. 컴 퓨팅 하드웨어가 제한된 노드는 복잡한 라우팅 결정을 수행할 수 없을 것이다. 노드는 심지어 그것을 제어 하는 인지 에이전트를 갖지 않을 수도 있다. 마지막으로, 전원 능력들은 네트워크 간 간섭 및 링크 용량을 제어하는 것과 관련될 뿐만 아니라 컴퓨팅 및 구성 능력들에 대한 다른 제약이 된다다. CLAIRE는 광대역 감지, CLAIRE 인지 에이전트 및 인지 제어 평면 메시지 프로토콜을 사용하여 링크 레벨에서 달 네트워크를 측정, 최적화 및 구성할 수 있다. CLAIRE는 INSPiRE에 데이터를 제공할 뿐만 아니라 INSPiRE가 수행하는 네트워크 레벨 및 정책 기반 결정을 수행하는 인지 에이전트이다. 한 가지 구성 요소는 링크를 최 적화하는 CLAIRE의 광대역 감지 및 DSA 기능이다. 이는 CLAIRE가 INSPiRE에 대한 링크의 용량을 보고할 수 있으며, 이것이 가능한 최상의 용량이라는 것을 확신한다. CLAIRE는 또한 각 네트워크 슬라이스에 대한 버퍼 백로그와 같은 네트워크 통계를 보고할 것이다. 이러한 정보는 INSPiRE가 네트워크 전반의 올바른 결정 을 모듈화하는 데 도움이 될 수 있다. INSPiRE는 잠재적으로 활용되지 않는 최적화를 찾기 위해 인간이 소 비하고 데이터를 마이닝할 수 있는 것보다 훨씬 많은 정보를 취할 수 있는 기능도 갖게 될 것이다. 인터넷 및 셀룰러 백본과 같은 지상 네트워크와는 달리, (우주에 배치된 것과 같은) 이종 네트워크 내의 노드들 사이의 링크들은 오고 갈 수 있다. 링크의 실행가능성은 최소한 노드들 사이의 가시선을 요구한다. 이 것은 궤도 추적 및 기하학(geometry)을 통해 (a) 달의 지평선 위의 각도, (b) 지구의 지평선 위의 각도, 및 (c) 달과 노드들 사이의 경로의 임의의 교차점을 측정함으로써 계산될 수 있다. INSPiRE는 주어진 환경에서 변경을 감지한 다음, 이러한 변경에 작용하여 최적의 네트워크 슬라이스를 결정하고 트래픽 라우팅을 수행할 수 있다. 예를 들어, INSPiRE는 다수의 접속들의 RF 품질에 대한 데이터를 수신한 다음, 스루풋을 최적화하기 위해 어느 링크를 이용할지 또는 인코딩을 동적으로 변경할지를 결정할 수 있다. 그러나 동적 루트 변경의 큰 과제 중 하나는 거짓 양성 및 음성을 탐지하는 것이다. 예측은 최적의 결정을 내리는 데 필수적이다. 예를 들어, 우주 배치 네트워크의 궤도 역학은 시스템이 항상 변하고 있음을 의미한다. 라우팅 핸드오프를 조정하기 위해, 시스템은 노드가 미래에 있을 위치에 대한 인 식을 필요로 한다. 예측은 또한 링크가 실패했는지 또는 일시적인 중단만을 겪고 있는지 여부를 정확하게 결정하는 것을 도울 수 있다. 이러한 종류의 문제는 과거 데이터를 수집하고 네트워크의 장기적 거동에 ML 기술을 적용함으로써 해결될 수 있다. 딥 러닝은 대량의 데이터를 처리하고 복잡하고 통일된 의사 결정 체 계를 만들어낼 가능성이 있다. ML은 선택 횟수가 매우 많을 때 결정을 내리는데 도움을 줄 수 있다. INSPiRE의 아키텍처는 에이전트, 환경 상태, 일련의 행동, 상태를 업데이트하는 방법, 행동에 대한 보상을 포함 하는 전형적인 강화 학습 문제와 유사한 방식으로 구성될 수 있다. 이는 아래에서 추가로 설명될 것이다. 인지 제어 평면은 INSPiRE가 노드들에서 인지 에이전트들을 임의의 새로운 라우팅 명령들로 업데이트할 수 있게 할 것이다. 이것은 정기적인 하트비트 메시지들을 통해 이루어질 수 있다. 그런 다음 이러한 에이전트 는 작업 중인 프레임워크에 따라 라우팅 알고리즘을 실행할 것이다. 이 아키텍처의 하나의 컴포넌트는 각각 의 인지 에이전트가 시스템이 원하는 대로 수행하게 하는 라우팅을 수행하기 위해 전체 시스템 모델의 인식을 가질 필요가 없다는 것이다. 예를 들어, 각각의 라우터는 다수의 파라미터들에 의존하여 고도로 구성가능할 수 있다. 이러한 파라미터는 INSPiRE의 메시지로 업데이트될 것이다. 위에서 언급된 바와 같이, 이종 멀티-벤더 통신 네트워크에서 네트워크 트래픽의 네트워크 슬라이싱 및 정책 기 반 라우팅을 동적으로 수행하기 위해 훈련된 뉴럴 네트워크 및 ML 기술이 있다. 딥 러닝 모델들은 최적의 출력을 보장하기 위해 머신 러닝 계수들을 최적화하도록 배치될 수 있다. 딥 러닝 모델에 공급하기 위한 데 이터를 생성하기 위해, 네트워크 요소들, 궤도 포지션들, 애플리케이션들, 및/또는 RF 환경들 모두의 고해상도 시뮬레이션이 있을 것이다. 이 고해상도 시뮬레이션은 딥 러닝이 최적의 계수 및 솔루션을 개발하는 데 사 용될 수 있는 경계 사례를 생성할 것이다. 도 7은 본 개시의 일부 양태에 따른 이종 멀티-벤더 통신 네트워크에서 네트워크 트래픽의 네트워크 슬라이싱 및 정책 기반 라우팅을 수행하기 위해 INSPiRE 모듈에 의해 이용될 수 있는 예시적인 뉴럴 네트워크을 도시한다. 아키텍처는 렌더링 엔진 모델 (뉴럴 제어기) 에서 예시적인 뉴럴 네트워크 설명 에 의해 정의 된 뉴럴 네트워크 를 포함한다. 뉴럴 네트워크는 도 8의 단계를 참조하여 위에서 설명된 동적 스펙트럼 할당을 위해 사용될 수 있다. 뉴럴 네트워크 설명은 뉴럴 네트워크의 전체 사양을 포함할 수 있다. 예를 들어, 뉴럴 네트워크 설명 은 뉴럴 네트워크 의 아키텍처의 설명 또는 사양 (예를 들어, 계층들, 계층 상호연결들, 각각의 계층에서의 노드들의 수 등); 입력 및 출력이 어떻게 형성 또는 프로세싱되는지를 표시하는 입력 및 출력 설명; 뉴럴 네트워크에서의 활성화 기능들, 뉴럴 네트워크에서의 동작들 또는 필터들 등의 표시; 가중치들, 바이어스들 등과 같은 뉴럴 네트워크 파라미터들 등을 포함할 수 있 다. 이 예에서, 뉴럴 네트워크는 입력 계층을 포함하며, 이는, 위에서 설명된 바와 같이, 네트워크 요소 들, 디바이스들의 궤도 포지션들, 중계기들, 위성들, 라우터들, 네트워크 내의 게이트웨이들, 애플리케이션들, 및/또는 RF 환경들 모두의 식별을 포함하지만 이에 제한되지 않는 입력 데이터를 수신할 수 있다. 추가 입 력은 (현재 또는 과거에) 네트워크를 사용하는 조직, 이벤트들(예를 들어, 태양 플레어), (현재 및/또는 과거에) 송신을 위해 네트워크를 활용하는 애플리케이션들, 네트워크 루트들 및 기능들의 현재 및 과거 성능 등에 대한 정보를 포함할 수 있다. 뉴럴 네트워크 는 은닉 계층들 (704A 내지 704N) (이하, 총칭하여 \"704\") 을 포함한다. 은닉 계층들 은 n 개의 은닉 계층들을 포함하며, 여기서 n 은 1 이상의 정수이다. 은닉 계층들의 수는 원하는 프 로세싱 결과 및/또는 렌더링 의도에 대해 필요한 만큼 많은 계층들을 포함할 수 있다. 뉴럴 네트워크 는 공유 주파수 대역에서 활용하고 공존하는 다양한 시스템들의 하나 이상의(또는 모든) UE들에 의한 공유 주파 수 대역에서 신호들의 예측된 미래의 사용/송신을 출력으로서 제공하는 출력 계층을 더 포함한다. 이 출력은 은닉 계층들에 의해 수행되는 프로세싱에 기초할 수 있다. 네트워크의 출력은 네트워크 리소스들의 이용가능성, 이에 기초한 대응하는 네트워크 슬라이스 선택, 및/또는 정책-기반 라우팅 결정들에 영 향을 미치는 미래 이용 및/또는 이벤트들의 예측일 수 있다. 이 예에서 뉴럴 네트워크 는 상호접속된 노드들의 멀티-계층 뉴럴 네트워크이다. 각 노드는 한 가지 정보를 나타낼 수 있다. 노드들과 연관된 정보는 상이한 계층들 사이에서 공유되고 각각의 계층은 정보가 프로세싱될 때 정보를 보유한다. 일부 경우들에서, 뉴럴 네트워크 는 피드-포워드 뉴럴 네트워크를 포함할 수 있으며, 이 경우 뉴럴 네트워크의 출력들이 그 자체로 피드백되는 피드백 연결들이 없다. 다른 경우들에서, 뉴럴 네트워크 는 재귀 뉴럴 네트워크를 포함할 수 있으며, 이는 입력을 판독하면서 노드들 에 걸쳐 정보가 반송될 수 있도록 하는 루프들을 가질 수 있다. 정보는 다양한 계층들 사이의 노드 대 노드 상호연결들을 통해 노드들 사이에서 교환될 수 있다. 입력 계층 의 노드들은 제 1 은닉 계층 (704A) 의 노드들의 세트를 활성화할 수 있다. 예를 들어, 나타낸 바와 같이, 입력 계층 의 입력 노드들 각각은 제 1 은닉 계층 (704A) 의 노드들 각각에 연결된다. 은닉 계 층 (704A) 의 노드들은 각각의 입력 노드의 정보를, 이들 정보에 활성화 기능들을 적용함으로써 변환할 수 있다. 그 후, 변환으로부터 도출된 정보는 그들 자신의 지정된 기능들을 수행할 수 있는 다음 은닉 계층 (예를 들어, 704B) 의 노드들로 전달될 수 있고 이 노드들을 활성화할 수 있다. 예시적인 기능들은 컨볼루 션, 업-샘플링, 데이터 변환, 풀링, 및/또는 임의의 다른 적절한 기능들을 포함한다. 은닉 계층 (예를 들어, 704B) 의 출력은 다음 은닉 계층 (예를 들어, 704N) 의 노드들 등을 활성화할 수 있다. 최종 은닉 계 층의 출력은 출력 계층 의 하나 이상의 노드들을 활성화할 수 있고, 그 지점에서 출력이 제공된다. 일부 경우들에서, 뉴럴 네트워크 에서의 노드들 (예를 들어, 노드들 (708A, 708B, 708C)) 이 다중 출력 라인들을 갖는 것으로 나타나 있지만, 노드가 단일 출력을 갖고 노드로부터 출력되고 있는 것으로 나타낸 모든 라인들은 동일한 출력 값을 나타낸다. 일부 경우들에서, 각각의 노드 또는 노드들 사이의 상호접속은 뉴럴 네트워크 의 트레이닝으로부터 도출 된 파라미터들의 세트인 가중치를 가질 수 있다. 예를 들어, 노드들 사이의 상호연결은 상호연결된 노드들 에 관하여 학습된 한 가지 정보를 나타낼 수 있다. 상호연결은 (예를 들어, 트레이닝 데이터세트에 기초하 여) 튜닝될 수 있는 수치 가중치를 가질 수 있어서, 뉴럴 네트워크 가 입력들에 적응적이고 점점 더 많은 데이터가 프로세싱됨에 따라 학습할 수 있도록 한다. 뉴럴 네트워크 는 출력 계층 을 통해 출력을 제공하기 위해서 상이한 은닉 계층들 을 사용하 여 입력 계층 에서의 데이터로부터 피처들을 프로세싱하도록 미리 트레이닝될 수 있다. 뉴럴 네트워 크 가 공유 대역의 사용을 예측하기 위해 사용되는 예에서, 뉴럴 네트워크 는 동일한 UE들 또는 유 사한 시스템들 (예를 들어, 레이더 시스템들, RAN 시스템들 등) 의 UE들에 의한 공유 대역에서의 과거 송신들 및 동작을 포함하는 트레이닝 데이터를 사용하여 트레이닝될 수 있다. 예를 들어, 과거 송신 정보는은 뉴럴 네트워크 에 입력될 수 있고, 이는 가중치, 바이어스 등과 같은 뉴럴 네트워크 의 하나 이상의 양 태들을 튜닝하는데 사용될 수 있는 출력들을 생성하기 위해 뉴럴 네트워크 에 의해 프로세싱될 수 있다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "일부 경우들에서, 뉴럴 네트워크 는 역전파 (backpropagation) 로 불리는 트레이닝 프로세스를 사용하여 노드들의 가중치들을 조정할 수 있다. 역전파는 순방향 패스, 손실 함수, 역방향 패스, 및 가중치 업데이트 를 포함할 수 있다. 순방향 패스, 손실 함수, 역방향 패스, 및 파라미터 업데이트는 하나의 훈련 반복을 위 해 수행된다. 프로세스는 계층들의 가중치들이 정확하게 튜닝될 때까지 트레이닝 미디어 데이터의 각각의 세트에 대해 특정 수의 반복들 동안 반복될 수 있다. 뉴럴 네트워크 에 대한 제 1 트레이닝 반복에 대해, 출력은 가중치들이 초기화에서 랜덤으로 선택되는 것으로 인해 임의의 특정 클래스에 대한 선호도를 부여하지 않는 값들을 포함할 수 있다. 예를 들어, 출력이 오브젝트가 상이한 산물(들) 및/또는 사용자들을 포함할 확률들을 갖는 벡터인 경우, 상이한 산물 및/또는 사용자 각각에 대한 확률 값은 동일하거나 적어도 매우 유사할 수도 있다 (예를 들어, 10 개의 가능한 산물또는 사 용자들에 대해, 각각의 클래스는 0.1 의 확률 값을 가질 수도 있다). 초기 가중치들로, 신경망 은 로 우 레벨 피처를 결정할 수 없고, 따라서 객체의 분류가 어떤 것일 수도 있는지의 정확한 결정을 내릴 수 없다. 손실 함수는 출력에서의 에러를 분석하는데 사용될 수 있다. 임의의 적절한 손실 함수 정의가 사용될 수 있다. 실제 값들이 예측된 출력과 상이할 것이기 때문에, 손실 (또는 에러) 은 제 1 트레이닝 데이터세트 (예를 들어, 이미지들) 에 대해 높을 수 있다. 트레이닝의 목표는 예측된 출력이 타겟 또는 이상적인 출력과 합치하도록 손실량을 최소화하는 것이다. 뉴럴 네트워크 는 뉴럴 네트워크 의 손실에 가장 기여한 입력들 (가중치들) 을 결정함으로써 백워드 패스를 수행할 수 있으며, 가중치들을 조정하여 손실이 감소하고 결국 최소 화되게 할 수 있다. 가중치들에 대한 손실의 도함수는 뉴럴 네트워크 의 손실에 가장 기여하는 가중치들을 결정하기 위해 계 산될 수 있다. 도함수가 계산된 후, 가중치 업데이트가 필터들의 가중치들을 업데이트함으로써 수행될 수 있다. 예를 들어, 가중치들은 구배의 반대 방향으로 변화하도록 업데이트될 수 있다. 학습율은 임의의 적절한 값으로 설정될 수 있으며, 높은 학습율은 더 큰 가중치 업데이트들을 포함하고, 낮은 값은 더 작은 가중 치 업데이트들을 표시한다. 뉴럴 네트워크 는 임의의 적절한 뉴럴 또는 딥 러닝 네트워크를 포함할 수 있다. 일 예는 입력 계층 및 출력 계층을 포함하는 컨볼루셔널 뉴럴 네트워크 (CNN) 을 포함하며, 입력 및 출력 계층들 사이에 다수의 은 닉 계층들을 갖는다. CNN 의 은닉 계층들은 일련의 컨볼루션, 비선형, 풀링 (다운샘플링을 위한), 및 완전 히 연결된 계층들을 포함한다. 다른 예들에서, 뉴럴 네트워크 는 오토인코더, DBN들 (deep belief nets), RNN들 (recurrent neural networks) 등과 같은 임의의 다른 뉴럴 또는 딥 러닝 네트워크를 나타낼 수 있다. 다음으로, 슬라이스 선택 및 정책 기반 라우팅의 예시적인 프로세스가 설명된다. 도 8 은 본 개시의 일부 양태들에 따른 네트워크 슬라이스 선택 및 정책 기반 라우팅을 위한 예시적인 프로세스 를 도시한다. 아래에서 설명되는 프로세스는 도 5의 INSPiRE 아키텍처의 네트워크 슬라이싱 엔진(51 0)의 관점에서 이루어질 것이다. 다른 예에서, 프로세스는 INSPiRE 아키텍처의 네트워크 슬라이싱 엔 진의 관점에서 수행될 수 있다. 도 8은 또한 도 1의 비제한적인 예시적인 네트워크와 관련하여 설명될 것이다. 단계에서, 네트워크 슬라이싱 엔진은 네트워크에 대한 네트워크 토폴로지를 구성한다. 이 네트워크 토폴로지는 리소스 재고 및 궤도 추적기(예를 들어, 도 5의 위치 추적)로부터의 입력들에 뒤이어 위치 추적과 같은 가시선 계산들을 수행하는 것에 기초하여 구성될 수 있다. 추가적으로, 궤도 추적기 로부터의 거리에 기초하여, 네트워크 슬라이싱 엔진은 링크 레이턴시를 결정할 수 있다. 이러한 가능 한 링크들의 세트로부터, 네트워크 슬라이싱 엔진은 호환성 제약들, 방향성 제약들, 및 슬라이스 재고 로부터의 다른 가능한 제약들을 취함으로써 더 좁은 세트의 실현가능한 링크들을 식별할 수 있다. 추 가적으로, 네트워크 슬라이싱 엔진은 네트워크에 대한 모든 감지 데이터를 수집하고 융합할 수 있다. 이것은 잠재적인 링크들의 용량들이 결정되는 (CLAIRE 애플리케이션(들)(514-1 ... 514-n)에 의해 제공될 수 있는) RF 장면에 대한 감지 데이터를 포함할 수 있다. 이는 에지 가중치들이 실현가능한 링크들의 용량 및 레이턴시 값들을 포함하는 방향성 가중 그래프를 생성한다. 이러한 네트워크 토폴로지의 AZ 예가 도 9에 도 시된다. 도 9는 본 개시의 일부 양태들에 따른 네트워크 토폴로지 구조의 예를 예시한다. 네트워크 토폴로지들(90 0)은 5개의 궤도 릴레이들(R)(R1 내지 R5, 이는 도 1의 릴레이들과 동일할 수 있음), 달의 먼 쪽에 있는 달 기지(MB)(이는 디바이스들 중 하나와 동일할 수 있음), 및 지구 상의 6개의 지상국들(GS)(GS1 내지 GS6, 이는 지구국과 동일할 수 있음)을 포함한다. 이러한 궤도 패턴들을 사용하여, 네트워크 슬라이싱 엔진은 가시선 계산들을 수행하고 실현가능한 링크들 네트워크 토폴로지를 형성한다. 토폴로지 는 엔드-투-엔드 루트들 (902-1 및 902-2) 과 함께 네트워크 계층화된 구조를 도시한다. 링크들(902-1 및 902-2) 각각은 용량 및 레이턴시 값들(예를 들어, C1, L1, C2, L2)로 태그될 수 있다. 이 표현은 달의 데이 터가 취할 경로를 개념화하는 데 유용하다. 그러나, 이러한 제한된 3계층 구조는 릴레이간 연결을 나타내지 않는다.토폴로지는 릴레이 노드들을 복제하고, 다른 계층을 형성하는 각각의 릴레이(R1 내지 R5)의 \"고스트 노 드\"(예를 들어, R*1 내지 R*5)를 생성함으로써 네트워크에 대한 확장된 계층화된 접근법이다. 이는 중간 계 층을 아코디언처럼 확장하여 릴레이간 연결을 드러내는 것과 같다. 각 릴레이에는 고스트 노드에 대한 연결 이 있으며, 이 연결은 제로 레이턴시이고 무한대 용량의 연결이다. 이러한 접근법으로, 네트워크 슬라이싱 엔진은, 달 기지 대 릴레이 대 지상국 루트들 또는 달 기지 대 릴레이 대 릴레이 대 지상국 루트들인, 또 는 경로들(904-1 및 904-2), 2개의 링크들 또는 3개의 링크들로서 시각적으로 보여지는 바와 같은, 네트워크를 통한 엔드-투-엔드 루트들을 용이하게 추적할 수 있다. 이러한 계층화된 접근법은 이용가능한 네트워크 루 트들의 우수한 시각화를 제공하기 때문에 유리할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 단계에서 결정된 네트워크 토폴로지에 대한 엔드-투-엔드 루트 속성들을 결정할 수 있다. 이러한 속성들은 총 레이턴시 및 링크 용량을 포함할 수 있지만, 이에 제한 되지 않는다. 일 예에서, 네트워크 슬라이싱 엔진은 루트를 튜플(N1, N2, N3, N4)로서 표현함으로써 네트워크 내의 모든 잠재적인 루트들을 열거할 수 있으며, 여기서 각각의 Nn은 계층 n에서의 노드이고, n은 1 이상의 정수이다. 네트워크 슬라이싱 엔진은 모든 가능성들을 통해 반복하고 존재하지 않는 링크들을 갖는 루트들을 폐기할 수 있다. 네트워크 슬라이싱 엔진은 예를 들어, 각각의 링크를 따라 레이천시들을 합산하고 그 루트의 모든 링크들의 최소 용량을 취함으로써 각각의 루트의 속성들을 측정할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 모든 루트들의 엔드-투-엔드 속성들에 기초하여 디스조인트 루 트들의 \"최상의\" 세트를 결정할 수 있다. 이러한 맥락에서, \"최상\"은 루트들의 가장 높은 용량 세트를 의미 할 수 있지만, 낮은 레이턴시 경로와 같은 다른 바람직한 특성들을 포함할 수 있다. 각 릴레이는 하나의 입력과 하나의 출력 링크만 설정할 수 있다고 가정하기 때문에, 경로에 동일한 릴레이(또는 고스트 릴레이)를 포함하지 않으면 2개의 루트들이 디스조인트된 것으로 간주된다. 달 위의 기지들(예를 들 어, 디바이스들) 및/또는 지구국(들)과 같이 이러한 고려로부터 면제되는 전체 네트워크 내의 하나 이상의 노드들이 있을 수 있으며, 이는 가시적인 많은 릴레이들로 송신할 수 있거나, 또는 가시적인 임의의 수 의 릴레이들로부터 수신될 수 있다. 모든 가능한 디스조인트 경로들을 결정할 때, 네트워크 슬라이싱 엔진은 각각의 루트의 용량들을 합산함으 로써 네트워크의 조합된 용량을 계산할 수 있다. 이것은 다른 링크의 용량에 영향을 미치는 하나의 활성 링 크로부터의 간섭이 없다고 가정한다. 하지만 그렇게 가정하면, 이로부터 네트워크의 최대 용량 구성을 선택 할 수 있다. 도 10은 본 개시의 일 양태에 따른 연관된 링크 용량들 및 레이턴시들과 함께 디스조인트 경로들의 예를 예시한 다. 일 예에서, 출력은 단계에서 수행되는 프로세스의 시각적 출력이다. 개시된 디스조인트 경로 접근법은 네트워크의 총 용량을 결정하기 위한 유일한 접근법은 아니다. 다른 접근 법은 최대흐름 문제에 기초할 수 있으며, 이는 소스로서 알려진 하나의 노드(예를 들어, 달 기지) 및 싱크 로서 알려진 다른 노드(예를 들어, 모든 각각의 스테이션에 연결된 새로운 노드)를 갖는 에지-가중 그래프 로 개시된다. 그래프의 에지 상의 가중치는 링크가 허용할 수 있는 최대 흐름(용량)을 나타낸다. 최대 흐름 문제는 싱크에 도달하는 생성된 소스 흐름을 최대화하는 그래프 상의 흐름(그래프의 에지 상의 함수임)을 찾음으로써 해결될 수 있다. 최대 흐름 문제는 Ford-Fulkerson 알고리즘과 같은 공지된 또는 개발될 알고리 즘을 사용하여 해결될 수 있다. 도 8의 예시적인 프로세스는 향후의 네트워크 특성들을 예측함으로써 더 강화될 수 있다. 이러한 지식은 최 적의 라우팅 결정을 내릴 수 있다. 궤도 역학이 잘 정의되기 때문에, 도 7을 참조하여 설명된 예시적인 뉴 럴 네트워크는 실현가능한 링크들이 언제 나타나고 사라질 것인지를 예측하는 데 이용될 수 있다. 이것은 새로운 링크를 기회주의적으로 사용하기 위해 네트워크를 재구성하는 것이 링크의 짧은 수명 특성과 재구성에 따른 비용으로 인해 실제로 유용하지 않을 수 있기 때문에 중요하다. 예측은 또한 라우팅 경로 핸드오프 시나리오를 조정하는 데 중요하며, 이는 관련된 레이턴시들 및 거리들, 및 전자기 송신 또는 수신 안테나로서 우주에서 전송 중인 데이터가 제한된 범위의 모션 피봇팅을 가질 수 있도록 하는 것의 중요성 때문에 중요하다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "INSPiRE의 유리한 양태들 중 하나는 네트워크의 가상화이다. 네트워크 사용자들이 라우팅 및 타이밍의 세부 사항들을 조정하게 하는 대신, INSPiRE는, CLAIRE와 함께, 네트워크의 속성들을 크게 측정 및 요약하고 그 슬라 이스를 사용자에게 할당할 수 있다. 디스조인트 경로 라우팅 접근법을 사용하여, 네트워크 슬라이싱 엔진 은 네트워크의 총 용량을 계산할 수 있다. 이는 네트워크 정책이 의도하는 것을 강조한다: 즉, 네트워 크의 리소스를 세부사항을 인식하지 않고 사용자에게 할당한다. 달 네트워크에서 이를 구현하는데 있어 과 제는 네트워크 리소스가 매우 가변적이고 예측과 측정이 필요하다는 점이다. 달을 통한 궤도 릴레이의 커버 리지를 최적화하는 것이 하나의 중요한 목표이지만, 궤도 설계는 또한 비-로컬 네트워크 효과를 포함해야 한다. 예를 들어, 잘 배치된 궤도 릴레이는 달과의 증가된 직접 가시선 연결이 아니라 더 큰 경로 다이버시티를 통 해 네트워크의 용량을 증가시킬 가능성이 있다. 다시 도 8을 참조하면, 단계에서, 네트워크 슬라이싱 엔진은 결정된 경로들 및 라우팅 결정들을 라우 터들, 중계기들, 및/또는 다른 구현할 다양한 네트워크 컴포넌트들에 대한 명령들로 변환할 수 있다. 일 예 에서, 이는 다음과 같이 실행될 수 있다: 주어진 순간에 크기 N의 벡터 q가 있고, 라우터(예를 들어, 릴레이 또는 지구국에서의 라우터) 내의 각각의 트래픽 유형의 버퍼들을 나타낸다. 짧은 시간 간격 t 동안 라우터는 링크 용량에 따라 각 유형의 데이터얼마나 송신할지 선택해야 한다. 송신할 수 있는 데이터의 양은 t x C 이고, 여기서 C는 링크의 용량 이거나, 또는 C는 라우터가 루트를 따라 어딘가에 버퍼 축적을 피하고자 하는 경우, 전체 루트를 따른 최소 용 량이다. 수학적으로, 네트워크 슬라이싱 엔진은 함수 을 구할 수 있다:"}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "양수 값의 벡터를 다른 양수 값 집합에 매핑한다. 대안적으로 버퍼들에서의 변화들로서 표현되면, 함수는 Dq = fDt(q)이다. 라우터는 링크의 용량보다 큰 결합된 양의 데이터를 송신할 수 없고, 자신의 버퍼들에 있 는 것보다 주어진 유형의 더 많은 데이터를 송신할 수 없으며, 이는 수학적 제약들로 변환된다:"}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "마지막으로, 명령들을 수신하는 라우터는 그의 용량 전부를 사용하고 있다는 점에서 효율적이어야 한다(예를 들 어, 가능한 한 많은 데이터를 송신해야 한다). 이는 다음 식 을 만족해야 함을 의미한다."}
{"patent_id": "10-2024-7024118", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "이종 멀티-벤더 네트워크를 통한 데이터 송신을 위한 가능한 경로를 식별하는 프로세스를 통해, 본 개시는 이제 데이터 송신 요청을 서비스하고 이에 기초하여 라우팅 명령을 제공하기 위한 네트워크 슬라이스를 결정하는 프 로세스를 설명한다. 도 11은 본 개시의 일부 양태들에 따라 네트워크 슬라이스들을 결정하고 라우팅 명령들을 제공하는 예시적인 프 로세스를 도시한다. 도 8의 예시적인 프로세스와 유사하게, 도 11은 도 5의 INSPiRE 아키텍처의 네트 워크 슬라이싱 엔진의 관점에서 설명될 것이다. 다른 예에서, 프로세스는 INSPiRE 아키텍처의 네 트워크 슬라이싱 엔진의 관점에서 수행될 수 있다. 도 8은 또한 도 1의 비제한적인 예시적인 네트워크 와 관련하여 설명될 것이다. 단계에서, 네트워크 슬라이싱 엔진은 네트워크를 사용하여 데이터 송신을 위한 하나 이상의 요 청을 수신할 수 있다. 데이터 송신을 위해 네트워크에 대한 액세스를 요청하는 요청이 사용자/엔티티 로부터 수신될 수 있다(예를 들어, 하나 이상의 위성, 우주국의 유지보수를 위한 우주 유영에 대한 요청; 달에 대한 과학적 연구를 수행하는 연구 기관으로부터의 요청 등). 각각의 요청은 요청이 이루 어지는 활동의 성질(예를 들어, 장비 유지보수, 우주 유영, PNT, SCI 등)을 식별할 수 있다. 요청은 또한 원하는 스루풋, 레이턴시 등을 식별할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 슬라이스 재고로부터 가용 네트워크 슬라이스들에 대한 정보와 함께, 도 8의 프로세스에 따라 이용가능한(디스조인트 루트들)의 세트를 식별할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 단계에서 식별된 네트워크 슬라이스들 중 하나 이상을 디스조인트 루트들에 할당하고, 네트워크 내의 각각의 노드(예를 들어, 디바이스들, 중계기들, 위성들, 우주국, 지구국 등)에 대한 특정 라우팅 명령들을 생성할 수 있다. 도 12 는 본 개시의 일부 양태들에 따른, 슬라이스들이 대응하는 라우팅 명령들과 함께 상이한 요청들에 할당되 는 방법의 예시적인 개략도를 예시한다. 개략도로부터 알 수 있는 바와 같이, 모든 수신된 요청을 나열하는 테이블이 생성된다. 각각의 요청에 대해, 슬라이스가 식별되고, 요청이 수신되는 사용자/엔티티가 식별되고, 각각의 요청과 연관된 활동이 식별되고, 각각의 요청과 연관된 미션/애플리케이션이 식별되고, 각각의 요청과 연관된 우선순위가 식별되고, 각각의 요청에 대한 레이턴시 요건이 식별되고, 각각의 요청에 대한 요청된 스루풋이 식별되고, 각각의 요청과 연관된 QoE 우선순위가 식별된다. 본질적으로, 슬라이스 속성은 슬라이스 사용자의 요구를 설명해야 한다. 예를 들어, 파일 전송과 같은 일부 애플리케이션에서는 중단에 대한 내성이 매우 높다. 그러나, 우주 비행사 음성 또는 화상 통화, 또는 로보 틱스와 같은 다른 애플리케이션은 중단에 훨씬 더 민감하고 최소 스루풋을 필요로 한다. 정책 레벨에서, 슬 라이스는 조직과 미션에 할당되어야 한다. 또한 활성 슬라이스 또는 비활성 슬라이스로 할당되어야 한다. 우선순위는 너무 적은 용량 (최소 스루풋 요건을 충족하지 않음) 또는 초과 용량 (최소 스루풋을 초과하는 슬라이스에 추가 용량을 분배하는 방법) 을 처리하도록 설정할 수 있다. 네트워크의 루트에 슬라이스를 할 당하는 방법은 여러 가지가 있다. 요청들에 하나 이상의 슬라이스들을 할당함에 있어서 다수의 인자들이 고려될 수 있다. 예를 들어, 하나의 인자는 이용가능한 경로의 다양성일 수 있다. 네트워크에 필요한 용량보다 많은 용량이 있더라도, 하나의 루트가 다운될 경우 여러 경로에 슬라이스를 할당하여 엔드-투-엔드 데이터 패킷 전달을 보장하는 것이 양호하 다. 이는 또한 네트워크에서의 로드 밸런싱에 도움이 될 수 있다. 제 2 인자는 슬라이스의 최소 스루풋 요건들일 수 있다. 루트의 최소 스루풋 요구건의 총 합계는 해당 경로의 용량을 초과하지 않아야 한다. 다수의 루트들이 이용가능한 경우, 네트워크 슬라이싱 엔진은 각각의 루트가 최소 스루풋들보다 더 높은 트래픽을 핸들링하기 위해 충분한 초과 용량을 갖도록 루트들에 걸쳐 최소 스루풋 요건들을 로드 밸런싱할 수 있다. 네트워크의 총 용량의 합이 최소 임계 요건들의 총 합을 충족시킬 수 없는 경우, 네트워크 슬라이싱 엔진은 어느 슬라이스들을 드롭할지를 결정할 수 있다(그리고 그에 따라 네트워크의 관리자에게 통지 할 수 있다). 제3 인자는 각각의 슬라이스의 레이턴시 요건들일 수 있다. 예를 들어, 로봇 슬라이스들은 인간-컴퓨터 피 드백 루프를 감소시키기 위해 가능한 가장 낮은 레이턴시를 가져야 한다. 유사하게, 음성 및 오디오 슬라이 스들은 낮은 레이턴시들에서 최상의 경험을 가질 수 있다. 마지막으로, 우선순위와 QoE는 추가적으로 고려 해야 할 인자일 수 있다. 이러한 경쟁 인자들 사이에서 최적화하기 위해, 네트워크 슬라이싱 엔진은 유틸리티 함수를 생성하고 따라 서 개별 최적화 문제를 해결할 수 있다. 이러한 유틸리티 함수는 우선순위 인자를 포함할 수 있다. 그 다음, 슬라이스 할당 문제는 가장 높은 우선순위 티어에 대해 먼저 해결될 수 있다. 그런 다음 남은 리소스 를 모두 가져오고 우선순위 체인을 따라 계속된다. 가장 낮은 우선순위에 대해 (예를 들어, 리소스들이 소 진될 때) 슬라이스들은 드롭되거나 재스케줄링될 수도 있다. 슬라이스 할당의 더 확장된 뷰는 다수의 루트들에 슬라이스들을 할당하는 것을 포함할 수 있다. 슬라이스는 단일 루트에 할당되는 것으로 제한되지 않는다. 탄력성이 필요한 슬라이스는 여러 루트들로 브로드캐스트하 거나 복제할 수 있다. 높은 스루풋이 필요한 슬라이스는 여러 루트에 걸쳐 단편화될 수 있다. 그 일 예 가 하기에서 설명되는 도 13 에 도시된다. 도 13은 본 개시의 일부 양태들에 따라 상이한 요청들에 슬라이스들을 할당하는 3개의 비제한적인 예들을 예시 한다. 개략도는 3개의 출력들(1302, 1304, 및 1306)을 예시하며, 각각은 상이한 요청들에 할당된 네 트워크의 슬라이스들에 대한 상이한 구성을 나타낸다. 출력은 스루풋을 최대화하기 위해 단일 슬라이스로부터의 데이터가 다수의 루트들 상에서 전송되는 데이터 단편화의 예일 수 있다. 예를 들어, 이 것은 초신성을 관측하는 망원경의 과학 데이터일 수 있다. 한편, 출력은 데이터 복제의 예일 수 있으 며, 여기서 데이터는 슬라이스의 탄력성을 증가시키기 위해 복제된다. 예를 들어, 이것은 인간 생명 유지 트래픽일 수 있다. 유틸리티 함수와 이산 최적화 문제는 수학적으로 다음과 같이 기술할 수 있다 (도 12에도 도시됨). S를 슬 라이스의 집합으로 하고 R을 루트들의 집합으로 한다. 루트 R의 집합로부터, 슬라이스들은 루트들에 할당된 다 (예를 들어, 함수 를 구한다). 그러나, 논의된 바와 같이, 이는 현실에서 더 복잡해질 수 있 다. 슬라이스들은 리던던시 또는 데이터 단편화의 관점에서 다수의 루트들에 할당될 수 있다. 이 경우, 함수는 슬라이스들을 R의 모든 서브세트들의 세트인 루트들의 제곱 세트에 매핑할 수 있다. 즉, 이고, 여기서 QoE 엘리먼트는 슬라이스들이 어떻게 할당되는지에 영향을 미칠 수 있다. 맵은 슬라이스의 정책 속성을 고려해야 하며 문제의 유틸리티 함수 공식화에 사용할 수 있다. 슬라이스 할당이 이루어지면 특정 라우팅 명령이 생성되어 각 라우터로 전송되어야 한다. 슬라이스 할당들에 기초하여, 네트 워크 슬라이싱 엔진은 라우팅 위치를 결정할 수 있다. 남아 있는 것은 여러 유형의 트래픽 간에 용량 을 어떻게 공유할 것인지이다. 도 14는 본 개시의 일부 양태들에 따른 상이한 경험 품질 목표들을 갖는 진보된 슬라이스 할당들의 2개의 비제 한적인 예들을 예시한다. 개략도에서, 예시적인 출력들(1402 및 1404)이 도시된다. 출력은 스루풋을 최대화하기 위해 사이언스 슬라이스에 대한 데이터 단편화를 예시한다. 출력은 페일세이프 (failsafe) 통신을 갖기 위해 인간 수명 지원 슬라이스에 대한 데이터 탄력성을 나타낸다. 도 11을 다시 참조하면, 단계에서, 네트워크 슬라이싱 엔진은 테이블 및 식별된 루트들에 기 초하여(도 8의 프로세스에 따라) 각각의 요청과 연관된 데이터 패킷들에 대한 라우팅 명령들을 결정할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 도 12에 도시된 출력으로서, 결정된 하나 이상의 슬 라이스들을 사용하여 각각의 요청과 연관된 데이터 패킷들에 대한 라우팅 명령들의 시각적 출력을 생성할 수 있 다. 이 출력은 네트워크 운영자의 사용자 디바이스의 대시보드 상에 제시될 수 있다. 도 15는 본 개시의 일부 양태들에 따른 라우팅 명령들의 예시적인 표를 제공한다. 라우팅 명령들의 비제한 적인 예가 도 15의 표에 도시된다. 위에서 언급된 바와 같이, 네트워크 슬라이스들을 상이한 요청들에 가장 잘 할당한 다음 적절한 라우팅 명령들 을 제공하는 것과 관련된 가능성들이 높을 수 있다. 예를 들어, 우선순위에 관계없이 모든 슬라이스에 추가 용량을 동일하게 할당할 수 있다. 또는 우선순위들은 이러한 추가 용량이 어떻게 할당되는지에 대한 가중치 들을 결정할 수 있다. 이것은 간단한 과정이 아니다. 많은 슬라이스가 최소 스루풋 요건보다 약간 높은 수준만을 송신하므로 추가 용량을 많이 사용하지 않아도 된다. 위에서 설명된 트레이닝된 뉴럴 네트워크들 및 ML 기술들의 개념은, 예를 들어, 이벤트(예를 들어, 링크의 변동하는 품질이 일시적인지 또는 곧 발생할 실 패를 나타내는지)를 예측하고 다양한 가능한 옵션들로부터 결정하는 것(예를 들어, 슬라이스 할당들 또는 특정 라우팅 결정들을 선택하는 것)을 지원함으로써, 네트워크 슬라이싱 엔진이 그의 슬라이스 및 경로 선택 프 로세스를 향상시키는 것을 돕는 데 이용될 수 있다. 도 16은 본 개시의 양태들에 따른 임베딩된 훈련된 뉴럴 네트워크 컴포넌트를 갖는 INSPiRE 모듈의 예시적인 아 키텍처를 예시한다. 예시적인 아키텍처는 도 5의 INSPiRE 아키텍처의 컴포넌트들의 서브세트를 예시하지만, 아키텍처는 이러한 예시적인 예시로 제한되지 않고, 도 5의 INSPiRE 아키텍처를 참조하 여 설명된 것들과 같은 추가적인 엘리먼트들 및 컴포넌트를 포함할 수 있다. 도시된 바와 같이, 아키텍처는 도 5의 네트워크 슬라이싱 엔진 및 포지션 추적 컴포넌트를 포 함할 수 있다. 또한, 아키텍처는 도 7을 참조하여 위에서 설명된 것과 같은 트레이닝된 뉴럴 네트워 크 컴포넌트를 포함할 수 있다. 아키텍처는 궤도 포지션들(예를 들어, 도 1의 위성들 및/또는 우주국의 현재, 스케줄링된, 및/또는 이력 궤도 포지션)에 대한 정보를 포함할 수 있는 위성 궤도 데이터 베이스를 더 포함할 수 있다. 이러한 데이터베이스는 주어진 INSPiRE 모듈의 일부가 아닐 수 있지만, 위치 추적 컴포넌트에 원격 및 통신 가능하게 결합될 수 있다. 정보 융합 컴포넌트는 도 5의 CLAIRE 애플리케이션들(514-1, ..., 514-n), 슬라이스 재고 등과 같 은 외부 컴포넌트들과 인터페이싱할 수 있다. 트레이닝된 뉴럴 네트워크을 이용하여, 시스템의 상태는 노드들의 포지션 및 CLAIRE 애플리케이션들(514- 1, ..., 514-n)로부터의 관찰들에 의해 정의된다. 동작들은 INSPiRE 모듈에 의해 행해진 라우팅 결정 들이다. 보상은 네트워크의 성능을 어떤 값으로 매핑함으로써 정의될 수 있으며, 이는 또한 정책을 통해 필 터링될 수 있다. 일부 예들에서, 이러한 보상이 정책에 의존한다는 것은 각각의 정책에 대해 시스템을 재트 레이닝시키는 것을 수반할 수 있다. 예측 및 결정 둘 모두는 뉴럴 네트워크의 출력에 통합될 수있다. 도 17은 본 개시의 일부 양태들에 따른 예시적인 네트워크 디바이스를 예시한다. 도 17의 컴퓨팅 시스템 의 예는 도 1의 시스템의 임의의 컴포넌트, INSPiRE 아키텍처 등을 포함하지만 이에 제한되지 않는 도 1 내지 도 16을 참조하여 전술한 예시적인 시스템 및 아키텍처의 하나 이상의 컴포넌트를 구현하는 데 사용될 수 있다. 커넥션은 컴퓨팅 시스템의 다양한 컴포넌트들을 연결하는 커넥션일 수 있다. 예를 들어, 커넥션 은 버스를 통한 물리적 커넥션이거나 칩셋 아키텍처에서와 같이 프로세서 로의 직접 커넥션일 수 있다. 커넥션 은 또한 가상 커넥션, 네트워크 커넥션 또는 논리적 커넥션일 수도 있다. 일부 실시형태들에서, 컴퓨팅 시스템은 본 개시에서 설명된 기능이 데이터 센터, 다중 데이터 센터, 피어 네트워크 등 내에서 분산될 수 있는 분산 시스템이다. 일부 실시예에서, 설명된 시스템 컴포넌트들 중 하나 이상은 컴포넌트가 설명된 기능의 일부 또는 전체를 각각 수행하는 다수의 그러한 컴포넌트들을 나타낸다. 일부 실시형태들에서, 컴포넌트는 물리적 또는 가상 디바이스들일 수 있다. 예시적인 시스템 은 적어도 하나의 프로세싱 유닛 (CPU 또는 프로세서) , 및 판독 전용 메모리 (ROM) 및 랜덤 액세스 메모리 (RAM) 와 같은 시스템 메모리 를 포함하는 다양한 시스템 컴포넌트들을 프로세서 에 커플링시키는 연결 을 포함한다. 컴퓨팅 시스템 은, 프로 세서 와 직접 접속되거나 그에 매우 근접하거나 또는 그의 부분으로서 통합된 고속 메모리의 캐시 를 포함할 수 있다. 프로세서는, 임의의 범용 프로세서, 및 프로세서를 제어하도록 구성된, 저장 디바이스에 저 장된 서비스들(1732, 1734, 1736)과 같은 하드웨어 서비스 또는 소프트웨어 서비스뿐만 아니라, 소프트웨어 명 령들이 실제 프로세서 설계에 통합되는 특수 목적 프로세서를 포함할 수 있다. 프로세서 는 본질적 으로 다중 코어 또는 프로세서, 버스, 메모리 컨트롤러, 캐시 등을 포함하는 완전히 독립형 컴퓨팅 시스템일 수 있다. 다중 코어 프로세서는 대칭 또는 비대칭일 수 있다. 사용자 상호작용을 가능하게 하기 위해, 컴퓨팅 시스템은 음성용 마이크, 제스처 또는 그래픽 입력용 터 치 감지 스크린, 키보드, 마우스, 모션 입력, 음성 등과 같은 임의의 다수의 입력 메커니즘을 나타낼 수 있는 입력 디바이스 를 포함한다. 컴퓨팅 시스템은 또한 당업자에게 알려진 다수의 출력 메커니즘 중 하나 이상일 수 있는 출력 디바이스 를 포함할 수 있다. 일부 경우들에서, 멀티모드 시스템들은 사용자가 컴퓨팅 시스템 과 통신하기 위해 다중 타입들의 입력/출력을 제공하는 것을 가능하게 할 수 있 다. 컴퓨팅 시스템 은 일반적으로 사용자 입력 및 시스템 출력을 지배하고 관리할 수 있는 통신 인 터페이스 를 포함할 수 있다. 임의의 특정한 하드웨어 배열에 대해 동작하는 것에 제한이 없고 따라 서 본 명세서에서의 기본적인 피처들은 개선된 하드웨어 또는 펌웨어 배열들로 그들이 개발됨에 따라 용이하게 대체될 수 있다. 저장 디바이스 는 비휘발성 메모리 디바이스일 수 있고, 하드 디스크 또는 자기 카세트, 플래시 메모리 카드, 고체 상태 메모리 디바이스, 디지털 다기능 디스크, 카트리지, 랜덤 액세스 메모리(RAM)들, 판독 전용 메 모리(ROM) 및/또는 이들 디바이스들의 임의의 조합과 같은, 컴퓨터에 의해 액세스가능한 데이터를 저장할 수 있 는 다른 유형의 컴퓨터 판독가능 매체일 수 있다. 저장 디바이스 는 이러한 소프트웨어를 정의하는 코드가 프로세서 에 의해 실행될 때, 시스템으 로 하여금 기능을 수행하게 하는 소프트웨어 서비스들, 서버들, 서비스들 등을 포함할 수 있다. 일부 실시 형태들에서, 특정 기능을 수행하는 하드웨어 서비스는 기능을 수행하기 위해 프로세서 , 커넥션 , 출력 디바이스 등과 같은, 필요한 하드웨어 컴포넌트들과 관련하여 컴퓨터 판독가능 매체에 저장된 소프 트웨어 컴포넌트를 포함할 수 있다. 도 18은 본 개시의 일부 양태들에 따른 스위칭, 라우팅, 로드 밸런싱, 및 다른 네트워킹 동작들을 수행하기에 적합한 예시적인 네트워크 디바이스를 도시한다. 예시적인 네트워크 디바이스는 스위치들, 라우터들, 노드들, 메타데이터 서버들, 로드 밸런서들, 클라이언트 디바이스들 등으로서 구현될 수 있다. 네트워크 디바이스는 중앙 처리 유닛(CPU), 인터페이스 및 버스(예를 들어, PCI 버스)를 포함한다. 적절한 소프트웨어 또는 펌웨어의 제어 하에서 동작할 때, CPU는 패킷 관리, 에러 검출, 및/또는 라우팅 기능들을 실행하는 것을 담당한다. CPU는 바람직하게는 운영 체제 및 임의의 적절한 애플리케이션 소프트웨어를 포함하는 소프트웨어의 제어 하에서 모든 이들 기능을 달성한다.CPU는 INTEL X86 마이크로프로세서 제품군의 프로세서와 같은 하나 이상의 프로세서를 포함할 수 있다. 일부 경우들에서, 프로세서는 네트워크 디바이스의 동작들을 제어하기 위해 특별히 설계 된 하드웨어일 수 있다. 일부 경우에, 메모리(예를 들어, 비휘발성 RAM, ROM 등)는 또한 CPU의 일부를 형성한다. 그러나, 메모리가 시스템에 결합될 수 있는 많은 상이한 방식들이 있다. 인터페이스들은 전형적으로 모듈식 인터페이스 카드들(때때로 \"라인 카드들\"로 지칭됨)로서 제공된다. 일반적으로, 이들은 네트워크를 통한 데이터 패킷들의 전송 및 수신을 제어하고, 때때로 네트워크 디바이스 와 함께 사용되는 다른 주변기기들을 지원한다. 제공될 수 있는 인터페이스들 중에는 이더넷 인터페 이스들, 프레임 릴레이 인터페이스들, 케이블 인터페이스들, DSL 인터페이스들, 토큰 링 인터페이스들 등이 있 다. 또한, 고속 토큰 링 인터페이스, 무선 인터페이스, 이더넷 인터페이스, 기가비트 이더넷 인터페이스, ATM 인터페이스, HSSI 인터페이스, POS 인터페이스, FDDI 인터페이스, WIFI 인터페이스, 3G/4G/5G 셀룰러 인터 페이스, CAN BUS, LoRA 등과 같은 다양한 초고속 인터페이스가 제공될 수 있다. 일반적으로, 이들 인터페이 스는 적절한 매체와의 통신에 적절한 포트를 포함할 수 있다. 일부 경우에, 이들은 또한 독립적인 프로세서 및 일부 경우에 휘발성 RAM을 포함할 수 있다. 독립적인 프로세서들은 패킷 스위칭, 미디어 제어, 신호 프 로세싱, 암호화 프로세싱, 및 관리와 같은 통신 집약적 태스크들을 제어할 수 있다. 통신 집약적 태스크들 을 위한 별개의 프로세서들을 제공함으로써, 이들 인터페이스들은 마스터 CPU(예를 들어, 1804)가 라우팅 계산 들, 네트워크 진단들, 보안 기능들 등을 효율적으로 수행할 수 있게 한다. 도 18에 도시된 시스템은 본 개시의 하나의 특정 네트워크 디바이스이지만, 본 개시가 구현될 수 있는 유일한 네트워크 디바이스 아키텍처는 결코 아니다. 예를 들어, 통신들뿐만 아니라 라우팅 계산들 등을 처리하는 단일 프로세서를 갖는 아키텍처가 종종 사용된다. 또한, 다른 유형들의 인터페이스들 및 매체들이 또한 네 트워크 디바이스와 함께 사용될 수 있다. 네트워크 디바이스의 구성에 관계없이, 그것은 본 명세서에 설명된 로밍, 루트 최적화 및 라우팅 기능들을 위한 범용 네트워크 동작들 및 메커니즘들을 위한 프로그램 명령들을 저장하도록 구성된 하나 이상의 메모리들 또는 메모리 모듈들(메모리를 포함함)을 이용할 수 있다. 프로그램 명령은 예를 들어 운영 체제 및/또는 하나 이상의 애플리케이션의 동작을 제어할 수 있다. 메모리 또는 메모리들은 또한 이동성 바인딩, 등록, 및 연관 테이블들 등과 같은 테이블들을 저장하도록 구성될 수 있다. 메모리는 또한 다양한 소프트웨 어 컨테이너 및 가상화된 실행 환경 및 데이터를 보유할 수 있다. 네트워크 디바이스는 또한 라우팅 및/또는 스위칭 동작들을 수행하도록 구성될 수 있는 주문형 집적 회로 (ASIC)를 포함할 수 있다. ASIC은 버스를 통해 네트워크 디바이스 내의 다른 컴포넌트들과 통 신하여, 데이터 및 신호들을 교환하고, 예를 들어, 라우팅, 스위칭, 및/또는 데이터 저장 동작들과 같은 네트워 크 디바이스에 의한 다양한 유형들의 동작들을 조정할 수 있다. 시뮬레이션 결과 상이한 수준의 충실도를 갖는 여러 시뮬레이션 접근법이 개발되었다. 가장 높은 충실도 레벨은 PHY 레벨까 지 무선 링크들을 모델링하는 네트워크 시뮬레이션일 것이다. 충실도 수준의 감소는 Azure 클라우드와 같은 플랫폼 또는 소켓을 통해 통신하는 Docker 컨테이너와 같이 VM을 사용하는 것이다. 여기서, 완전한 소프트 웨어 스택 및 하드웨어 인터페이스들이 모델링될 수 있다. 이에 충실도를 더하기 위해, ns-3와 같은 네트워 크 시뮬레이션 라이브러리를 사용할 수 있으며, 이는 또한 개별 패킷을 추적하는 수준에서 모델링한다. 마 지막으로, 우리가 가장 철저하게 개발한 시뮬레이션 접근법은 Python에서 처음부터 작성된 네트워크 흐름 수준 시뮬레이션이었다. VM 또는 Docker 접근법에는 몇 가지 고려 사항이 있다. 컨테이너가 전체 VM보다 무게가 가볍기 때문에 Azure에서 VM 대신 Docker 컨테이너를 사용하는 것이 바람직할 수 있다. Azure VM은 턴 온 하거나 턴 오프 하는 데 시간이 걸리는데, 이는 VM을 턴 온 하거나 턴 오프함으로써 노드들의 도달 가능성을 시뮬레이션하는 것 을 고려했기 때문이다. 또 다른 기술적 고려 사항은 어떤 소켓 라이브러리를 사용할 것인가이다. 하위 수준 표준 라이브러리는 ZeroMQ만큼 작업하기 쉽지 않다. 또한 ZeroMQ는 NASA의 HDTN 프로토콜과 같은 많은 기술 스택에 이미 사용 되고 있다. 이 수준에서, 네트워크의 환경을 시뮬레이션하기 위한 우리의 접근법은 실현가능성, 채널 및 다 른 잠재적인 환경 특징들을 시뮬레이션할 중재자로 알려진 중간 노드를 사용하는 것을 포함할 것이다. 대규 모 네트워크 시뮬레이션을 위해서는 각 개별 노드의 지식 외부에서 제어되는 환경 모델이 필요하다. 또한소켓 연결을 직접 설정 및 해제하는 작업도 매우 복잡하다. 도커형 접근법의 큰 이점은 NASA의 HDTN 프로토 콜과 같은 커스텀 풀 프로토콜 스택을 사용하는 것이 더 쉬울 수 있고, ns-3과 같은 네트워크 시뮬레이션 도구 를 사용하는 것보다 OS, 하드웨어 및 네트워크 인터페이스와 같은 양태를 고려하는 것이다. 우리는 Python 에서 소켓을 사용하여 하위 수준 시뮬레이션을 탐색하는 동안 Python에서 더 수학적이고 상위 수준의 네트워크 흐름 시뮬레이션을 추구하는 데 착수했다. 네트워크 흐름 시뮬레이션은 라우팅 결정이 개별 패킷을 관리하 지 않고 전체 네트워크에 어떻게 영향을 미치는지에 대한 좋은 이해를 제공하기 위한 것이다. 시뮬레이션은 네트워크의 다른 링크의 용량에 영향을 주는 이벤트가 발생할 때 네트워크가 어떻게 동작하는지를 테스트했다. 이것은 개별 패킷 대신 네트워크 수준 통계인 잠재적 강화 알고리즘이 수신할 데이터와 정렬된 다. 객체 지향 접근법은 네트워크의 상이한 컴포넌트들을 표현하기 위해 이 시뮬레이션에서 활용된다. 전체 네트워크는 노드, 링크, 애플리케이션, 루트 및 슬라이스 클래스와 같은 클래스의 개별 컴포넌트로 자체 네트워크 클래스로 표현된다. 네트워크의 각 노드 객체에는 다른 라우팅 접근법으로 구성할 수 있도록 모델 에서 설계된 라우팅 기능이 있다. 각 노드는 또한 각 슬라이스에 대한 큐들의 스택을 추적했다. 링크는 시작 및 종료 노드로 정의되었으며, 현재 전송 중인 데이터를 추적하는 파이프 또는 큐 자식 요소가 있었다. 애플리케이션 객체는 일부 프로그래밍된 속도로 데이터를 생성했다. 루트 객체는 링크 목록으로 정의되었 으며 슬라이스는 다른 슬라이스 속성과 함께 경로와 연관되었다. 초기에는 정책을 고려하지 않은 기본적인 라우팅 기능이 개발되었다. 그리고 나서, 네트워크에서의 정책 및 포지션을 고려한 더 많은 라우팅 기능들로 확장되었다. 예를 들어, 디바이스와 같은 달 기지 라우터는 이상적으로는 가능한 많은 중계기에 송신하기에 충분한 송신기를 가질 것인 반면, 중계기 라우터는 잠재적 으로 더 제한될 것이다. 그런 다음 개발된 이전 궤도 역학 모델의 예시적인 데이터가 시뮬레이션에 대한 입 력으로 사용되었다. 네트워크의 구조와 환경은 JSON 시뮬레이션 구성 파일로 표시하였다. 이 JSON 파일 은 인지 제어 평면을 통해 CLAIRE로부터 수신할 데이터 구조와 같은 것을 나타내기 위한 것이다. 예를 들어, 그들은 링크의 수와 실현가능성, 거리, 레이턴시 및 용량과 같은 특성에 대한 정보를 포함했다. 또한, 슬라이스 재고를 나타내는 JSON 파일이 생성되었다. 도 19는 본 개시의 일부 양태들에 따른 JSON 파일들의 예시적인 표를 예시한다. JSON 파일에서의 링크 정보 및 슬라이스 재고는 표에 도시된다. 각각의 슬라이스는, 또한 위에서 설명된 바와 같이, ID, 이름, 조직, 미션, 우선순위, 최소 스루풋 요건, 레이 턴시 요건, 경험 품질 목표, 및 가중 인자와 같은 다수의 필드들을 갖는다. 우리는 더 많은 가능한 분야에 대한 가능성을 기대한다. 이 데이터 구조는 INSPiRE 아키텍처가 정책 엔진으로부터 수신할 수 있 는 것과 같은 것을 나타기 위한 것이다. 예시적인 시뮬레이션의 구조는 하기와 같다. 먼저, 네트워크 구조 및 환경에 대한 구성 파일을 로드하여 객 체 지향 모델을 구축한다. 그 다음 가능한 최상의 루트와 같은 네트워크 특징들이 계산된다. 그 후 디 스조인트 루트가 식별된다. 다음으로, 슬라이스 재고 구성 파일이 로딩되고 식별된 루트와 함께 사용되어 슬라이스를 라우팅하는 방법에 대한 결정을 내린다. 그 후, 이 슬라이싱 할당은 특정 라우터 명령들로 변환 된다. 마지막으로, 일부 작은 시간 단계 dt에 걸쳐 반복하는 루프가 실행되며, 여기서 업데이트된 네트워크 상태는 모델 규칙들에 따라 증분적으로 업데이트된다. 즉, 이 계산되고 링크(전송 중인 데이터) 및 버퍼(수신된 데이터)가 업데이트된다. 개발된 코드는 네트워크 흐름 접근 방식에 따라 몇 가지 기술적 과제를 처리했다. 예를 들어, 달 네트워크 에서의 거리들이 레이턴시들에 영향을 미칠 만큼 충분히 크다면, 지연들은, 각각의 링크가, 각각의 반복마다 그 안으로 푸시된 데이터 및 그로부터 팝아웃된 데이터를 갖는 파이프 또는 큐인 것으로 고려함으로써 모델링된다. 이 네트워크 흐름 접근법에 특정한 또 다른 과제는 수학적으로 정확한 출력을 생성하기 위해 라우팅 함수들 을 구성하는 것이었다. 예를 들어, 각 슬라이스의 큐들이 음수가 되지 않도록 검사를 수행해야 했다. 또 다른 과제는 큐 크기에 기반한 로컬화된 라우팅 결정이 지구를 향해 진행되었고 일부 무한 라우팅 루프에서 중단되지 않았는지 확인하는 것이었다. 마지막으로 큐들과 네트워크 전송의 이력을 기록, 수집 및 플롯화했다. 평균 레이턴시를 계산하기 위해 전 송된 총 데이터와 수신된 총 데이터의 실행 값이 사용된다. S(t) 가 전송된 총 데이터이고 R(t) 가 수신된 총 데이터이면, Δt 는 레이턴시를 얻기 위해 S(t - Δt) = R(t) 가 되도록 풀이된다. 이는 네트워크에서 데이터가 스턱(stuck)될 때 레이턴시가 증가하는 단점이 있다. 개시된 네트워크 흐름 시뮬레이션 코드는 여러 시나리오를 예시하는 데 사용된다. 우리의 모든 시나리오에 서, 유사한 그래프 그리드가 도 20 내지 도 24에 도시된 바와 같이 생성된다. 도 20 내지 도 24는 본 개시 의 일부 양태들에 따른 슬라이스 선택 및 트래픽 라우팅의 예시적인 출력들을 예시한다. 도 20 내지 도 24의 개략도들(2000, 2100, 2200, 2300, 및 2400) 각각에서, 상부 좌측 그래프는 각각의 슬라이 스의 트래픽이 취하고 있는 네트워크 토폴로지 및 루트들을 도시한다. 아래쪽의 3 개의 그래프는 모두 Mbps 대 시간의 도표이다. 하부 좌측 그래프는 달에서 애플리케이션 데이터가 생성되는 레이트를 보여준다. 하부 중간 그래프는 애플리케이션 데이터가 달 기지로부터 달 네트워크로 송신되는비율을 보여준다. 하부 우측 그래프는 NASA에서 최종적으로 수신하는 트래픽의 양을 보여준다. 네트워크의 총 용량이 처리할 수 없는 경우 생성된 모든 애플리케이션 데이터가 네트워크를 통해 전송되는 것은 아니다. 또한, 네트워크를 통해 전송되는 모든 데이터가 동시에 수신되거나 전혀 수신되지 않는 것으로 가 정될 수 있는 것은 아니다. 상이한 루트들을 취한 데이터는 상이한 이동 시간을 가질 것이다. 또는 데 이터가 네트워크에서 상당히 오랜 시간 동안 버퍼링되거나 최악의 경우 손실된 경우에도 버퍼링될 수 있다. 2 이상의 플롯들이 관련된다. 상부 중간 플롯은 각 트래픽 유형의 평균 레이턴시를 보여준다. 상붕 우 측 플롯은 달 기지에서 사용되는 평균 메모리 양(파란색 곡선)과 모든 중계기에서 사용되는 총 메모리 양(주황 색 곡선)을 보여준다. 데이터 버퍼링되는 곳이 달인지 또는 중계기인지의 차이가 있다면, 이를 고려해야 한 다. 개략도(2000, 2100, 2200, 2300 및 2400)는 네트워크의 관리자 및 정책 관리자가 그들의 디바이스의 대시 보드에서 관찰할 수 있는 것을 나타낸다. 각 슬라이스의 성능 및 패턴에 대한 많은 정보와 함께 네트워크 토폴로지 및 활성 링크의 고수준 시각화가 있어야 한다. 이 결과 형식을 사용하여 몇 가지 시나리오를 설명 했다. 첫 번째 시나리오는 큐들을 인식하는 준 지능형 라우터가 링크에서 혼잡을 처리하는 방법을 보여준다. 두 번째 시나리오는 INSPiRE 정책 기반 라우터가 링크에서 정체를 처리하는 방법을 보여준다. 세 번째 시나리오는 INSPiRE 가 일시적인 혼잡으로부터 지연에 내성이 있는 방식으로 자체 복구되는 방법을 보여준다. 마지막 시나리오는 비일시적인 링크 장애가 발생했을 때 INSPiRE가 트래픽을 재라우팅하는 지능 적 결정을 내리는 방법을 보여준다. 도 20 내지 도 24에 도시된 모든 시나리오에서, 생성되는 동일한 트래픽 패턴이 사용된다. 하부 좌측 플롯 은 일정한 레이트로 생성되는 여러 유형의 애플리케이션 데이터를 보여준다. 일반적으로, 생성된 애플리케 이션 트래픽은 일정한 것으로 가정되어서는 안 된다. 그러나, 이 시나리오에서, 약 1.5 Mbps의 과학 데이터, 500 kbps의 미션 스탯 데이터, 및 <100 kbps의 커맨드-및-제어 데이터는, 총 약 2 Mbps의 데이터에 대 해, 지속적으로 생성되고 있다. 도 20의 개략도에 대응하는 시나리오에서, 준-지능형 큐-인식 라우터는 루트 상의 혼잡을 처리할 것이다. 여기서, 각 유형의 모든 트래픽이 단일 루트에 할당됨을 알 수 있다. 이는 네트워크 토폴로지 그래프에 서 \"상위 경로\"로 표시된다. 트래픽이 달 기지(MB)에서 중계기 5(R5)로 라우팅되고 지상국 6(GS6)으로 라우 팅된다. 루트의 수평 부분은 중계기 5에 남아있는 트래픽을 보여주지만, 이것은 모든 2-홉 및 3-홉 루트들 을 찾는 개념적인 트릭이다. 루트의 중간 링크 부분은 무한한 용량 및 제로 레이턴시를 갖는다. 이 준- 지능형 라우터는 중계기 대 중계기 연결을 고려하지 않는다. 준-지능형 라우팅 접근법은 어느 큐의 데이터가 가장 큰지를 송신함으로써 큐에 주목한다. 이는 지그재그 또는 버스트형(burst-like) 송신 패턴을 초래한다. 생성률이 낮은 트래픽 유형은 큐를 채우는데 시간이 걸 리고, 이는 큐의 크기가 더 높은 데이터 레이트 트래픽의 평균 큐 크기와 비슷해질 때까지 이어진다. 이 시 점에서 라우터는 이들을 비교가능한 라우팅 우선순위로 간주하고 더 낮은 생성률 데이터의 버스트를 송신한다. 처음 4초 동안 네트워크가 생성된 모든 애플리케이션 데이터를 송신하는 것을 참조한다. 시스템이 안 정 정상 상태에 있다. 네트워크의 모든 데이터가 수신되지만, 우측 하단 플롯에서 볼 수 있는 바와 같이, 수신된 데이터 플롯은 네트워크를 통해 전송된 데이터의 시간-천이된 버전이다. 그러나, 시간 t=4s 에서, 루트의 품질은 상당히 저하되고, 그것은 더 이상 생성되는 모든 트래픽을 지원할 수 없다. 달에서 사용되는 메모리는 상당히 증가하고 버퍼 백로그가 증가한다. 데이터가 지구에 도달하지 못해 레이턴시들이 급증하고 있기 때문이다. 그러나 정책 기반 접근 방식을 취하는 대신, 가장 많이 생성되고 있는 트래픽을 우선화하는 정상 라우팅 알고리 즘을 따름으로써 우선순위가 낮은 트래픽을 몰아내게 된다. 즉, 네트워크를 통해 전송되는 미션 스탯과 명령 및 제어 데이터가 없고, 레이턴시가 급증하고 있다. 이는 중대한 장애를 구성할 수 있다. 도 21의 개략도는 INSPiRE 모듈이 위에서 언급된 중대한 장애를 어떻게 해결할 수 있는지를 예시한 다. 첫째, INSPiRE 모듈은 릴레이 대 릴레이 접속을 고려하고 다수의 루트에 걸쳐 트래픽을 다양화한다. 이것은 여러 경로를 통해 송신하기 위해 다수의 송신기들을 포함하는 달 기지에 따라 다르지만 여러 가지 이유 로 적합하다. 그러나 그 가치는 최대 스루풋이 더 높고 경로의 다양성이 더 크기 때문에 한 경로의 장애가 다른 경로의 장애에 영향을 주지 않는다는 것이다. 이 경우, 가능한 최대 스루풋은 더 높지만, 애플리케이 션 수요가 네트워크에 의해 이미 충족되고 있기 때문에, 다양화 외에 추가적인 이점은 없다. 경로 다양화의 효과는 상부 중간 플롯 및 하부 우측 플롯 모두에서 볼 수 있고, 여기서 데이터는 각 경로를 따 라 상이한 이동 시간으로 인해 상이한 시간에 수신된다. 처음 4초 동안 스토리는 도 20을 참조하여 설명된 반-지능형 라우터와 같다. 애플리케이션 데이터 생성 속 도가 동일하며 네트워크가 요구 사항을 충족하고 있다. 그러나, 이전의 예에서 보여지는 지그재그 패턴 대 신에, INSPiRE 모듈이 정책-인식이고 트래픽을 안정화시키기 때문에 송신 패턴은 더 평활하다. 그러나 4초에 혼잡이 발생하면 이전 시나리오와 다른 여러 가지 일이 발생한다. 첫째, 혼잡은 오직 상위 루 트에만 도달하기 때문에 하위 루트의 미션 통계 트래픽은 영향을 받지 않는다. 둘째, 혼잡한 루트에서는 파 일 전송 데이터의 스루풋만이 감소된다. INSPiRE가 정책을 인식하기 때문에 커맨드 및 제어 데이터는 이전 과 동일한 데이터 속도로 유지된다. 네트워크 용량이 감소되었지만, 매우 중요한 트래픽은 여전히 통과되고 있다. 도 22의 개략도에 도시된 제3 시나리오는, INSPiRE 모듈이 혼잡을 일시적인 것으로 인식하고 그의 지연 허용 능력들을 이용하기에 충분히 지능적임으로써 일시적인 혼잡을 어떻게 처리할 것인지를 도시한다. 도 21의 이전 시나리오에서와 동일한 패턴이 사용되며, 혼잡이 4초에 발생하지만 이제 혼잡은 6초에 해소된다. 용량이 제한된 시간 동안, 메모리가 증가하고 있다. 용량이 반환되면 Lunar 네트워크는 버퍼를 언로딩하 고 네트워크의 용량을 완전히 사용하기 시작한다. 이것은 시소 패턴이다. 그러나 다시, INSPiRE 모듈 은 정책 인식이고 링크 열화가 여전히 최소의 C&C 트래픽을 지원할 수 있기 때문에 커맨드 및 제어 트래픽 을 방해하는 것을 회피한다. 마지막으로, 최종 시나리오는 도 23 및 도 24에 도시되며, 혼잡 대신에 실제 링크 장애가 발생한다. INSPiRE 모듈(및/또는 도 16의 INSPiRE 모듈)은 이력 감지 데이터 및 머신 러닝을 사용하여 일시적 링크 열화가 언제 발생하는지 대 실제 링크 장애가 언제 발생하는지를 식별한다. 이 예에서, INSPiRE 모듈 은 그린 미션 통계 슬라이스가 있는 기존 루트로 트래픽을 라우팅하지 않는데, 그 루트가 그 용량의 거의 전부로 그 슬라이스를 지원하기 때문이다. 따라서 슬라이싱 엔진은 다른 루트를 찾아서 해당 경로에서 노란 색 파일 전송 및 빨간색 커맨드 및 제어 슬라이스를 찾아 라우팅한다. 일시적인 혼잡의 경우와 유사한 네트 워크의 시소 (see-saw) 자체 회복 양태가 존재함을 알 수 있다. 그러나, 이 경우, 네트워크는 네트워크를 재구성함으로써 스스로 회복된다. 다음의 논의는 본 명세서에 설명된 바와 같은 INSPiRE 및 관련 기술의 잠재적인 사용의 비-제한적인 예를 제공 한다. 보도에 따르면 2025년까지 글로벌 무선 트래픽이 53엑사바이트에 도달할 것으로 예상되며, 이 중 5G가 25%를 차 지할 것으로 보인다. 이는 4G 및 5G 시스템들뿐만 아니라 WiFi 6 사이에 상당한 스위칭이 있을 것임을 의미 한다. 추가적으로, Starlink, Oneweb 및 Iridium과 같은 새로운 우주-기반 네트워크들이 완전히 배치될 때, 이것은 매우 복잡한 RF 환경을 초래할 것이다. 설명된 바와 같이 CLAIRE와 함께 RAN의 동적 구성을 가능하 게 하는 INSPiRE 지능형 라우팅 엔진. 본 명세서에 개시된 INSPiRE 모듈들은 또한 원격 의료 산업에서의 애 플리케이션들을 가질 수 있다 다양한 연구 및 보고서에 따르면 글로벌 IoT 시장은 2026년까지 815억 달러, CAGR 37.2%로 성장하고 있다. IoT 데이터를 서비스 솔루션으로 활용하는 글로벌 시장은 2026년까지 93억 달러에 달할 것이다. 산업 자동 화에서 민간 무선용 5G 뉴 라디오 시장이 2026년까지 52억 달러에 달할 것이다. IoT를 지원하는 임베디드 AI 소프트웨어 및 시스템이 2026년까지 전 세계적으로 90억 달러를 돌파할 것이다. 에지 컴퓨팅에서의 머신 러닝은 Iot 분석의 완전한 잠재력을 실현하는 데 핵심이 될 것이다. 성공적인 스마트시티는 5G, AI, 엣지 컴퓨팅, IoT의 지능적 통합에 의존하할 것이다. CLAIRE와 함께 본 명세서에 개시된 INSPiRE 모듈은 네트워크에 대한 릴레이 노드의 동적 추가를 허용하고 동적으로 결정된 정책에 따라 네트워크 리소스를 분배할 것이라 는 점에서 스마트 시티 네트워크에 대한 핵심 인에이블러일 수 있다. INSPiRE는 5G 네트워크의 NFV 기능을 활용하고/하거나 레거시 네트워크에 동등한 기능을 제공함으로써 유한한 네트워크 자원을 보다 효율적으로 사용 할 수 있게 할 것이다. 자율 및 인간 차량이 4G/5G/위성을 통해 트래픽 관리 시스템에 연결해야 하는 스마 트 운송 시스템을 고려한다. 트래픽 혼잡은 트래픽 제어 네트워크에 대한 자원의 고정 할당이 압도될 상황 을 만들 수 있지만 최악의 시나리오에 대한 네트워크 엔지니어링은 경제적으로 실행 불가능하다. 그러나, 비-기능 웹캠이나 토스터가 불편할 수 있는 가전제품 상황과 달리, 자율 주행 차량이 연결성을 상실하면 그 결 과가 치명적일 수 있다. INSPiRE는 트래픽 제어 네트워크로 리소스를 전환할 수 있다. 따라서, INSPiRE 능력은 CLAIRE를 사용함으로써 그리고 적절한 대역폭으로 연속적인 연결을 보장하기 위해 필요한 네트워크 리소 스들을 재배치하는 능력에 의해 스마트 차량들의 연결을 크게 개선할 것이다. 스마트 운송 시스템은 자율 주행 차량과 트래픽 관리 시스템 사이의 항상 안정적인 통신에 크게 의존하고 있다. 자율주행 차량이 움직이고 있다는 점에서 지속적인 연결성을 유지하는 문제는 매우 어려운 일이다. 자율 주행 차량 시장이 2026년까지 540억달러에 도달하는 상황에서 연결성이 중요하다. 자율 주행 차량의 RF 연 결성을 개선하기 위해. 스마트 제조는 에너지 관리, 센서 기반 창고 시스템, 로봇 및 생산 라인의 시스템 어레이로 구성된다. 이러 한 시스템들이 건물 내에 있고 날씨로부터 보호되지만, 다수의 송신기들로 인한 RF 간섭은 큰 문제이다. 글 로벌 스마트 제조 시장이 2027년까지 5140억 달러 규모로 성장하면서 무선 시스템 증가로 인한 건물 간섭 해소 가 주요 기회가 될 것으로 보인다. 또한, 많은 스마트 제조 시설들은 자율주행 가이드 차량(AGV)들을 사용 하며, 이는 트래픽 제어 시스템들이 수행하는 동일한 연결성 문제들 및 동적 네트워킹 난제들을 제시한다. 현재 이 계획은 DoD의 5G 테스트 베드 중 하나와 협력하여 센서 연결성을 개선하기 위해 지능형 RF를 프로토타 입화하는 것이다. 디지털 농업(정밀 농업)은 환경 피해를 최소화하면서 작물 채집량을 최적화하는 데 초점을 맞추고 있다. 디 지털 농업의 주요 과제는 자가 구성인데, 물과 작물 센서를 유지하기 위해 사람을 보내는 것이 매우 노동 집약 적이기 때문이다. 네트워킹 센서 외에도 디지털 농업 내에서 가장 흥미로운 성장 기회 중 하나는 로봇이다. 글로벌 스마트농업 시장은 2025년까지 200억 달러 규모로 성장할 것으로 예상된다. 원격 의료는 새로운 5G 및 Wi-Fi 기술을 사용하여 지원될 수 있는 또 다른 애플리케이션이다. CLAIRE 및 INSPiRE와 이들이 제공하는 솔루션은 전술한 모든 예시적인 애플리케이션의 맥락에서 사용될 수 있다. CLAIRE와 INSPiRE는 5G 네트워크 기능(NF)을 통해 작동하는 서비스 기반 의료 아키텍처(SBA)를 제공하며, 이는 AR 텔레멘토링, 멀티미디어 및 비디오와 같은 SBA 서비스를 제공하는 오버-더-톱 애플리케이션과의 원활한 통합 을 용이하게 한다. 우리가 제안한 TURBO-Medic(Telementored Ultra-Reliable Battlefield Outcomes from Medics) 시스템은 5G 아키텍처를 활용하는 유비쿼터스, 진보된, 안전한, 실시간 가상 의료 플랫폼을 생성하며, 현재 전투원(warfighter)이 가지고 있지 않은 도약적인 기능을 제공한다. TURBO-Medic는 전투에 참여한 의 무병과 의무병을 통해 전문가의 도움이 필요한 전장 현장에 제공한다. 군사 미션의 전반에 걸쳐 DoD 의료 범위, 효과 및 효율성을 확대한다. TURBO-Medic는 원격 의료 애플리케이션에 대한 플랫폼 접근법과 고급 5G 기능을 결합하여 수비대, 전방 작전 기지 및 엄격한 위치에 있는 군 의료진을 위한 경제적이고 확장 가능하며 개인화된 고품질 진료를 제공한다. TURBO-Medic는 전투원에게 전 세계 의료 전문가에게 안전하고 실시간으 로 액세스하여 복잡한 사례를 지원하고 수비대와 전장에서 의료 원격 멘토링을 제공할 수 있도록 지원한다. TURBO-Medic는 전투원에게 증강 및 가상 현실(AR/VR), 원격 수술, 블록체인 기반 인증, 머신 러닝 인공 지능 (ML/AI) 기반 무선 리소스 제어, 고급 데이터 분석, 공간 컴퓨팅, 분산 렌더링, 인지 제어 평면, 지능형 네트워 크 슬라이싱, 물리적 및 교차 계층 보안 및 5G 구현을 제공하여 군사 의료가 전달되는 방식을 획기적으로 개선 한다. TURBO-Medic 시스템은 DoD에 지속적인 혁신 플랫폼, 애플리케이션 라이브러리 및 DevSecOps 프로세스 를 제공하여 군사 의료 미션 영역을 지속적으로 개선하고 모든 미국인을 위한 의료 옵션을 개선하는 국가 역량 을 제공할 것이다. CLAIRE 및 INSPiRE는 상업용 네트워크에 적합하다. 도 25 및 도 26 은 본 개시의 일부 양태들에 따른 INSPiRE 및 CLAIRE 의 사용의 예시적인 애플리케이션들을 예시하며, 여기서 CLAIRE 및 INSPiRE 컴포넌트들은 상업용 5G, Wi-Fi, 및 위성 통신 (SATCOM) 아키텍처들에 적용된다. 이러한 네트워크는 5G 및 Wi-Fi를 갖는 에지 네트워크를 포함할 수 있다. 증강 현실(AR)/가상 현실(VR), 원격 수술, 실시간 비디오또는 의료 사물 인터넷(IoMT) 등 매우 다양한 애플리케이션을 지원하고 있을 수 있다. 이러한 애플리케이션 들을 활용하는 사용자들은 클라우드로부터의 데이터에 액세스하기를 원하거나, 다른 애플리케이션들과 대 화하기를 원한다. CLAIRE 및 INSPiRE는 네트워크를 강건하게 하고 다양한 애플리케이션에 필요한 QoS/QoE를 제공할 수 있다. CLAIRE 및 INSPiRE는 데이터 송신의 보안을 향상시킬 뿐만 아니라 정보가 5G, Wi-Fi, 군용 통신 라디오, 위성 통신, 광섬유 통신 등을 사용하여 이종 통신 네트워크를 통해 전달 될 것이라는 보장을 향상시키기 위해 다수의 경로를 갖는 탄력적인 통신을 제공한다. 구현된 시스템은 적절 하고 안전한 네트워크 연결 없이 엄격한, 허용, 및 비허용 환경에서 신뢰할 수 있고 안전한 통신을 제공한다. CLAIRE APP 또는 인지 에이전트 기반 아키텍처는 탄력적인 통신을 통해 여러 경로 및 전송에 걸쳐 고탄력성 슬라이스를 생성하여 간섭을 완화할 수 있다. 이러한 고탄력성 슬라이스들은, 링크 실패들에 대한 완화를 제공하고, 강건한 커맨드 및 제어(C2) 정책 기반 라우팅 엔진을 제공하기 위해 확립된 전기통신 인프라와 독립 적으로 또는 그와 협력하여 디바이스들 사이의 신뢰할 수 있는 5G 통신들을 가능하게 하는, 군용 신뢰 네트워크 들(예를 들어, 전술 라디오들 + 군용 다중 액세스 에지 컴퓨트(MEC) 및 군용 전송) 또는 신뢰할 수 없는 네트워 크들(예를 들어, 신뢰할 수 없는 상용 5g 또는 상용 SATCOM)을 통해 형성될 수 있다. 이러한 기술은 RF 및 교차 계층 (PHY/MAC/NET) 최적화를 함께 제공하는 서비스 지향 아키텍처를 개발했다. 예시된 실시예들 중 하나에서, 도 3, 도 6 및 도 7(및/또는 도 5 및 도 16)에 도시된 바와 같은 CLAIRE 및 INSPiRE 에이전트들은 예를 들어, 셀룰러 폰과 같은 사용자 장비(UE) 상에 상주할 수 있다. INSPiRE 엔진은 다중 액세스 에지 컴퓨팅(MEC) 노드에 상주할 수 있다. INSPiRE 네트워크 슬라이싱 엔진 (네트워크 슬라이싱 엔진(510 또는 1600)과 동일할 수 있음)은 인프라스트럭처 클라우드에 상주할 수 있다. 네트워크 슬라이싱 결정은 대규모 특징 행렬을 형성하는 RF / PHY / MAC 및 NET을 포함하는 네트 워크를 통해 로컬로 수천 가지 측정을 사용하여 이루어진다. 이들은 그 후 DCNN(Deep Convolutional Neural Networks) 및 DRL(Deep Reinforcement Learning)과 같은 기법들에 기초하여 최적화 결정들을 행하는 기 계 학습(ML) 엔진에 전송된다. 요컨대, CLAIRE는 모든 환경의 교차 계층 뷰를 제공하는 반면, INSPiRE는 사이트 사이의 모든 이용가능한 네트워크 연결을 스캔한다. 양자의 기술의 결합은 시스템의 신뢰성을 크게 향상시킬 것이다. CLAIRE 및 INSPiRE는 MEC 노드, 5G 코어, 및 MANO 기능들과 상호작용하여, 어느 채널을 통해 로컬로 그리고 어느 전송 채널을 통해 전역적으로 어느 패킷이 포워딩될 필요가 있는지와 같은 결정들을 하는 다양한 타입들의 네트워크 슬라이스들을 개시 및 종료한다 (예를 들어, 5G FR1 - Sub 6GHz, 5G FR2 - > 6GHz, mmWave, Wi-Fi 등). 또한 시스템이 데이터 스트림을 구 획화하여 알아야 할 필요가 없는 사용자의 손이 닿지 않도록 할 수 있다. 즉, CLAIRE 및 INSPiRE(33 2)는 생산자-소비자 모델을 따르는 5GC 네트워크 기능(NF)을 통해 동작하는 서비스 기반 아키텍처(SBA) 및 서비 스 레벨 협약(SLA)을 제공한다. 생산자-소비자 모델은 SBA 서비스를 제공하는 오버더톱 애플리케이션과의 원활한 통합을 용이하게 한다. eMBB 통신 라디오 세션들은 5G 네트워크와 무선 AR 디바이스들 사이에 멀티 미디어 서비스들(예를 들어, 비디오, AR)을 반송한다. 신뢰할 수 있는 통신의 주요 양태는 비-DoD 상업용 위성 및 심지어 인터넷을 포함하는 모든 이용가능한 링크를 이용하는 것이다. 적절한 보안 레벨을 보장하기 위해, Zero Trust 데이터 보호가 모든 사이트들에서 MEC 노드들에 통합될 수 있다. Zero Trust 모델 은 인증되고 허가된 사용자만이 데이터에 액세스할 수 있도록 보장한다. 도 27은 본 개시의 일부 양태들에 따른 네트워크 슬라이스 선택 및 정책 기반 라우팅의 예시적인 애플리케이션 을 도시한다. 도 27의 예시적인 프로세스는 도 5의 INSPiRE 아키텍처 및 도 8 및/또는 도 11을 참조하여 설명된 프로세스들을 참조하여 설명될 것이다. 단계에서, 네트워크 제어기(예를 들어, 네트워크 슬라이싱 엔진)는 송신을 위한 네트워크 자원들의 사용에 대한 요청을 수신할 수 있다. 예를 들어, 네트워크 제어기는 네트워크가 그 날 지원해야 하는 모든 활동들(데이터 송신들)의 리스트를 포함하는 사용자(예를 들어, NASA 미션 관리자)에 대한 리스트를 주기적으로 (예를 들어, 매 24시간마다) 수신할 수 있다. 예시적인 리스트는 이러한 리스트일 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 도 5의 위치 추적 컴포넌트와 동일할 수 있는 궤도 추적 기에 질의하여, 용량들 및 예상 레이턴시들을 포함하는, 이 시간 지속기간의 과정에 걸쳐 이용가능한 루트들을 매핑할 수 있다. 이러한 질의의 예시적인 출력이 도 27에 엘리먼트로 도시된다. 단계에서, 네트워크 슬라이싱 엔진은 도 5의 슬라이스 재고와 같은 슬라이스 재고 모듈을 업데 이트할 수 있고, 새로운 네트워크 슬라이스들이 네트워크에 의해 지원될 수 있는지를 결정하기 위해 슬라이스 재고에 질의한다.새로운 네트워크 슬라이스(들)가 지원되면(단계에서 예), 네트워크 슬라이싱 엔진은 정책 엔진을 호 출하여 조직, 미션, 및/또는 애플리케이션 등에 기초하여 네트워크 슬라이스를 재우선순위화할 수 있다. 새로운 네트워크 슬라이스(들)가 지원되지 않으면(단계에서 아니오), 단계에서, 정책 엔진은 네트워크 슬라이스들의 리스트를 우선순위화할 수 있다. 단계에서, 네트워크 슬라이싱 엔진은 슬라이스 정의들을 개발하고 이들을 슬라이스 서비스 추적기 와 같은 슬라이스 서비스 추적기로 전송할 수 있다. 네트워크 슬라이스 정의들의 예시적인 출력이 도 27에서 출력으로서 도시된다. 단계에서, 네트워크 슬라이싱 엔진은 도 5에 도시된 바와 같이, 네트워크 슬라이스 정의들을 INSPiRE 모듈들(514-1, 514-2, 514-K 등)과 같은 INSPiRE 모듈들에 전송할 수 있다. 단계에서, 인스파이어 모듈(514-1)은 정책-기반 패킷 스케줄러를 구성하고, 대응하는 CLAIRE 애플 리케이션(예를 들어, INSPiRE 모듈(514-1)과 동일한 네트워크 노드 상에 설치된 CLAIRE 애플리케이션)에 패킷들 이 어떻게 포워딩될 필요가 있는지를 알릴 수 있다. 단계에서, 인스파이어 모듈(514-1)은 네트워크 슬라이싱 엔진에 다양한 상태 정보를 전송하여, 성능 을 추적하고 필요한 경우 구성 변경들을 수행할 수 있다. 도 28은 본 개시의 일부 양태들에 따른, 도 5의 INSPiRE 모듈의 예시적인 소프트웨어 아키텍처를 도시한다. 아키텍처는 INSPiRE 모듈(514-1, 514-2, ..., 514-K) 의 것일 수 있다. 아키텍처에 도시된 INSPiRE 소프트웨어 컴포넌트들은 ZMQ, ICMP 등과 같은 프로세스간 통신 프로토콜들을 사용하여 다양한 주변기기들과 대화하기 위해 모듈식 방식으로 설계된다. 도 29는 본 개시의 일부 양태들에 따른 미션 제어(HQ)에서의 INSPiRE 소프트웨어 아키텍처를 도시한다. 아 키텍처는 네트워크 슬라이싱 엔진의 것일 수 있다. 설명의 명료성을 위해, 일부 사례들에서, 본 기술은 디바이스들, 디바이스 컴포넌트들, 소프트웨어로 구체화된 방법에서의 단계들 또는 루틴들, 또는 하드웨어와 소프트웨어의 조합들을 포함하는 기능적 블록들을 포함하는 개개의 기능적 블록들을 포함하는 것으로서 제시될 수 있다. 본 명세서에 설명된 단계들, 동작들, 기능들, 또는 프로세스들 중 임의의 것은 단독으로 또는 다른 디바이스들 과 조합하여 하드웨어 및 소프트웨어 서비스들 또는 서비스들의 조합에 의해 수행되거나 구현될 수 있다. 일부 실시형태들에서, 서비스는 클라이언트 디바이스의 메모리 및/또는 콘텐츠 관리 시스템의 하나 이상의 서버 에 상주하고 프로세서가 서비스와 연관된 소프트웨어를 실행할 때 하나 이상의 기능을 수행하는 소프트웨어일 수 있다. 일부 실시형태들에서, 서비스는 프로그램, 또는 특정 기능을 수행하는 프로그램들의 집합이다. 일부 실시형태들에서, 서비스는 서버로 간주될 수 있다. 메모리는 비일시적 컴퓨터 판독가능 매체일 수 있다. 일부 실시양태들에서, 컴퓨터 판독가능 저장 디바이스들, 매체들, 및 메모리들은 비트 스트림 등을 포함하는 케 이블 또는 무선 신호를 포함할 수 있다. 그러나, 언급될 때, 비일시적 컴퓨터 판독가능 저장 매체는 에너지, 캐리어 신호들, 전자기 파들, 및 신호 그 자체와 같은 매체들을 명시적으로 배제한다. 상술된 예들에 따른 방법들은 컴퓨터 판독가능 매체들에 저장되거나 그 외에 컴퓨터 판독가능 매체들로부터 이 용가능한 컴퓨터 실행가능 명령들을 이용하여 구현될 수 있다. 이러한 명령들은, 예를 들어, 범용 컴퓨터, 특수 목적 컴퓨터, 또는 특수 용도 프로세싱 디바이스가 소정의 기능 또는 기능들의 그룹을 수행하게 하거나 또 는 그렇지 않으면 수행하도록 구성하는 명령들 및 데이터를 포함할 수 있다. 사용된 컴퓨터 리소스들의 부 분들은 네트워크를 통해 액세스가능할 수 있다. 컴퓨터 실행가능 명령들은, 예를 들어 바이너리들, 중간 포 맷 명령들, 예컨대 어셈블리 언어, 펌웨어, 또는 소스 코드일 수 있다. 설명된 예들에 따른 방법들 동안 명 령들, 사용된 정보, 및/또는 생성된 정보를 저장하기 위해 사용될 수 있는 컴퓨터 판독가능 매체들의 예들은 자 기 또는 광학 디스크들, 솔리드 스테이트 메모리 디바이스들, 플래시 메모리, 비휘발성 메모리가 제공된 USB 디 바이스들, 네트워크화 저장 디바이스들 등을 포함한다. 이들 개시들에 따른 방법들을 구현하는 디바이스들은 하드웨어, 펌웨어 및/또는 소프트웨어를 포함할 수 있고, 임의의 다양한 폼 팩터들을 취할 수 있다. 이러한 폼 팩터들의 통상적인 예들은 서버들, 랩톱들, 스마트 폰 들, 소형 폼 팩터 퍼스널 컴퓨터들, 퍼스널 디지털 어시스턴트들, 등을 포함한다. 본 명세서에서 설명된 기능성은 또한, 주변기기들 또는 애드-인 (add-in) 카드들에서 구현될 수 있다. 그러한 기능성은 또한, 추가 의 예에 의해, 단일 디바이스에서 실행되는 상이한 칩들 또는 상이한 프로세스들 중에서 회로 보드 상에서 구현 될 수 있다. 명령들, 그러한 명령들을 운반하기 위한 매체들, 그들을 실행하기 위한 컴퓨팅 리소스들, 및 그러한 컴퓨팅 리 소스들을 지원하기 위한 다른 구조들은 본 개시에서 설명된 기능들을 제공하기 위한 수단들이다. 다양한 예들 및 다른 정보가 첨부된 청구항들의 범위 내의 양태들을 설명하기 위해 사용되었지만, 청구항들의 제한은 이러한 예들에서의 특정 특징들 또는 배열들에 기초하여 암시되어서는 안 되는데, 이는 통상의 기술자가 광범위한 구현들을 도출하기 위해 이러한 예들을 사용할 수 있을 것이기 때문이다. 또한, 일부 주제가 구조 적 특징들 및/또는 방법 단계들의 예들에 특정한 언어로 기술될 수 있지만, 첨부된 청구항들에서 정의된 주제가 반드시 이러한 설명된 특징들 또는 동작들로 제한되지 않는다는 것이 이해되어야 한다. 예를 들어, 이러한 기능은 상이하게 분산되거나 본 명세서에서 식별된 것 이외의 컴포넌트에서 수행될 수 있다. 오히려, 설명 된 특징들 및 단계들은 첨부된 청구항들의 범위 내의 시스템들 및 방법들의 컴포넌트들의 예들로서 개시된다. \"적어도 하나의\" 를 인용하는 청구항은 세트의 적어도 하나를 지칭하고, 그 세트 중의 하나의 멤버 또는 그 세 트의 다수의 멤버들이 청구항을 만족하는 것을 나타낸다. 예를 들어, \"A 및 B 중 적어도 하나\" 를 인용하는 청구항 언어는 A, B, 또는 A 및 B 를 의미한다.도면 도면1a 도면1b 도면1c 도면1d 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14 도면15 도면16 도면17 도면18 도면19 도면20 도면21 도면22 도면23 도면24 도면25 도면26 도면27 도면28 도면29"}
{"patent_id": "10-2024-7024118", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이 개시에서 설명되는 주제의 하나 이상의 양태들의 상세들이 첨부 도면들 및 하기의 설명에 제시된다. 그 러나, 첨부된 도면들은 본 개시의 일부 전형적인 양태들만을 예시하고, 따라서 그것의 범위를 제한하는 것으로 고려되지 않는다. 다른 특징들, 양태들, 및 이점들은 설명, 도면들, 및 청구항들로부터 명백하게 될 것이다. 본 개시의 앞서 언급된 및 다른 이점들 및 특징들이 획득될 수 있는 방식을 설명하기 위해, 상기 간단히 설명된 원리들의 보다 상세한 설명은 첨부된 도면들에 예시되는 특정 실시형태들을 참조하여 제공될 것이다. 이들 도면들은 본 개시의 예시적인 실시예들만을 도시하고 따라서 그의 범위를 제한하는 것으로 간주되지 않아야 함 을 이해하면, 본 명세서에서의 원리들은 다음의 첨부 도면들의 사용을 통해 추가적인 특수성 및 세부사항으로 기술되고 설명된다: 도 1a 내지 도 1d 는 본 개시의 일부 양태들에 따른 우주 통신을 가능하게 하기 위해 배치된 이종 멀티-벤더 아 키텍처의 비제한적 예의 다양한 양태들을 예시한다. 도 2는 본 개시의 일부 양태들에 따른, CLAIRE 애플리케이션 및 INSPiRE 모듈의 내부 작업들의 추상화를 도시한 다. 도 3은 본 개시의 일부 양태들에 따른, 네트워크 노드 상의 CLAIRE 및 INSPiRE 모듈들의 예시적인 아키텍처를 예시한다. 도 4는 본 개시의 일부 양태들에 따른, 조직, 미션/애플리케이션, 및 성능 메트릭들에 기초한 정책들의 비제한 적인 예를 도시한다. 도 5는 본 개시의 일부 양태들에 따른 예시적인 INSPiRE 모듈의 컴포넌트들을 도시한다; 도 6은 본 개시의 일부 양태들에 따른, 도 5의 INSPiRE 모듈에 의해 결정된 상이한 네트워크 슬라이스들에 대한 물리 계층에서의 리소스 할당의 비제한적인 예를 예시한다. 도 7은 본 개시의 일부 양태에 따른 이종 멀티-벤더 통신 네트워크에서 네트워크 트래픽의 네트워크 슬라이싱 및 정책 기반 라우팅을 수행하기 위해 INSPiRE 모듈에 의해 이용될 수 있는 예시적인 뉴럴 네트워크를 도시한다. 도 8은 본 개시의 일부 양태들에 따른 네트워크 슬라이스 선택 및 정책 기반 라우팅을 위한 예시적인 프로세스 를 도시한다.도 9는 본 개시의 일부 양태들에 따른 네트워크 토폴로지 구조의 예를 예시한다. 도 10은 본 개시의 일 양태에 따른 연관된 링크 용량들 및 레이턴시들과 함께 디스조인트 경로들의 예를 예시한 다. 도 11은 본 개시의 일부 양태들에 따라 네트워크 슬라이스들을 결정하고 라우팅 명령들을 제공하는 예시적인 프 로세스를 도시한다. 도 12는 본 개시의 일부 양태들에 따라 슬라이스들이 대응하는 라우팅 명령들과 함께 상이한 요청들에 할당되는 방법의 예시적인 개략도를 예시한다. 도 13은 본 개시의 일부 양태들에 따라 슬라이스들을 상이한 요청들에 할당하는 3개의 비제한적인 예들을 예시 한다. 도 14는 본 개시의 일부 양태들에 따른 상이한 경험 품질 목표들을 갖는 진보된 슬라이스 할당들의 2개의 비제 한적인 예들을 예시한다. 도 15는 본 개시의 일부 양태들에 따른 라우팅 명령들의 예시적인 표를 제공한다. 도 16은 본 개시의 양태들에 따른 임베딩된 훈련된 뉴럴 네트워크 컴포넌트를 갖는 INSPiRE 모듈의 예시적인 아 키텍처를 예시한다. 도 17은 본 개시의 일부 양태들에 따른 예시적인 네트워크 디바이스를 예시한다. 도 18은 본 개시의 일부 양태들에 따른 스위칭, 라우팅, 로드 밸런싱, 및 다른 네트워킹 동작들을 수행하기에 적합한 예시적인 네트워크 디바이스를 도시한다. 도 19는 본 개시의 일부 양태들에 따른 JSON 파일들의 예시적인 표를 예시한다. 도 20 내지 도 24는 본 개시의 일부 양태들에 따른 슬라이스 선택 및 트래픽 라우팅의 예시적인 출력들을 예시 한다. 도 25 및 도 26은 본 개시의 일부 양태들에 따른 INSPiRE 및 CLAIRE 의 사용의 예시적인 애플리케이션들을 도시 한다. 도 27은 본 개시의 일부 양태들에 따른 네트워크 슬라이스 선택 및 정책 기반 라우팅의 예시적인 애플리케이션 을 도시한다. 도 28은 본 개시의 일부 양태들에 따른, 도 5의 INSPiRE 모듈의 예시적인 소프트웨어 아키텍처를 도시한다. 도 29는 본 개시의 일부 양태들에 따른 미션 제어(HQ)에서의 INSPiRE 소프트웨어 아키텍처를 도시한다."}
