{"patent_id": "10-2021-0033748", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0034561", "출원번호": "10-2021-0033748", "발명의 명칭": "화면 분석 방법", "출원인": "넷마블 주식회사", "발명자": "한유진"}}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 게임 화면 분석 방법을 제공하기 위한 동작들을 수행하도록 하며 상기동작들은,학습 게임 화면에 포함된 하나 이상의 게임 오브젝트에 대해 게임 오브젝트 정보가 라벨링된 학습 데이터를 생성하는 동작; 및상기 학습 데이터를 토대로 게임 화면 분석 모델을 사전 학습시키는 동작;을 포함하고,상기 학습 데이터는:둘 이상의 학습 게임 화면에 고정적으로 존재하는 게임 오브젝트에 대하여 라벨링하여 생성된 학습 데이터; 또는상기 게임 오브젝트 정보가 라벨링된 제 1 게임 오브젝트를 포함하는 제 1 학습 게임 화면을 수신한 경우, 제 2게임 화면에 포함된 제 2 게임 오브젝트와 상기 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링한 학습 데이터;중 적어도 하나를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어,게임 오브젝트가 포함된 게임 화면을 수신하는 동작;상기 게임 화면을 사전 학습된 상기 게임 화면 분석 모델에 입력시키는 동작; 및상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력하는동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 게임 오브젝트는,캐릭터, 게임 내에서 캐릭터와 상호작용할 수 있는 요소, 게임 화면 내 사용자 인터페이스 또는 텍스트 중 적어도 하나를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2021-0034561-3-제 2 항에 있어서,상기 게임 속성은,게임 장르, 게임 상태 또는 게임 오브젝트 정보 중 적어도 하나를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 2 항에 있어서,상기 게임 화면 분석 모델은,입력된 상기 게임 화면을 차원 축소 레이어를 이용하여 연산하여 상기 게임 화면의 특징을 추출하고, 그리고상기 추출된 상기 게임 화면의 특징을 둘 이상의 병렬적인 분류 레이어에 기초하여 연산하여 상기 둘 이상의 병렬적인 분류 레이어 각각에서 상이한 게임 속성을 출력하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 둘 이상의 병렬적인 분류 레이어는, 게임 장르 분류 레이어, 게임 상태 분류 레이어 또는 게임 오브젝트 식별 레이어 중 적어도 하나를 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,클라이언트 단말로부터 게임 검색을 위한 검색 요청을 수신하는 동작;상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결정하는 동작; 및게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를 생성하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 검색 요청이 검색 요청 문장을 포함하는 경우,상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결정하는 동작은,상기 검색 요청 문장 및 상기 게임 속성에 기초한 키워드 각각을 전처리 모델을 이용하여 연산하여 검색 요청벡터 및 게임 속성 벡터를 획득하는 동작; 및상기 검색 요청 벡터 및 상기 게임 속성 벡터의 유사도에 기초하여 상기 검색 게임 속성을 결정하는 동작;을 포함하는,공개특허 10-2021-0034561-4-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서,상기 검색 요청이 이미지를 포함하는 경우,상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결정하는 동작은,상기 검색 요청에 포함된 이미지를 상기 게임 화면 분석 모델을 이용하여 연산하여 상기 검색 요청에 기초한 검색 게임 속성을 획득하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7 항에 있어서,상기 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를생성하는 동작은,상기 게임 화면에 매칭된 하나 이상의 게임 속성 중 상기 검색 게임 속성과의 매칭률에 기초하여, 검색 결과 게임 화면을 결정하는 동작; 및상기 검색 결과 게임 화면에 기초하여 게임 검색 결과를 생성하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,제 1 게임 화면 상태에서 액션을 수행하도록 하는 테스트 시나리오를 생성하는 동작;상기 테스트 시나리오를 클라이언트 단말에 전송하는 동작;상기 클라이언트 단말로부터 상기 테스트 시나리오에 기초하여 액션을 수행한 이후 획득한 제 2 게임 화면을 수신하는 동작;상기 제 2 게임 화면을 상기 게임 화면 분석 모델을 이용하여 연산하여 게임 속성을 출력하는 동작; 및상기 테스트 시나리오에 기초한 예상 게임 속성과 상기 제 2 게임 화면에 기초한 게임 속성을 비교하여 상기 액션의 성공 여부를 결정하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "게임 화면 분석을 제공하기 위한 방법으로서,학습 게임 화면에 포함된 하나 이상의 게임 오브젝트에 대해 게임 오브젝트 정보가 라벨링된 학습 데이터를 생성하는 단계;공개특허 10-2021-0034561-5-상기 학습 데이터를 토대로 게임 화면 분석 모델을 사전 학습시키는 단계;를 포함하고,상기 학습 데이터는:둘 이상의 학습 게임 화면에 고정적으로 존재하는 게임 오브젝트에 대하여 라벨링하여 생성된 학습 데이터; 또는상기 게임 오브젝트 정보가 라벨링된 제 1 게임 오브젝트를 포함하는 제 1 학습 게임 화면을 수신한 경우, 제 2게임 화면에 포함된 제 2 게임 오브젝트와 상기 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링한 학습 데이터;중 적어도 하나를 포함하는,게임 화면 분석을 제공하기 위한 방법."}
{"patent_id": "10-2021-0033748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "게임 화면 분석을 제공하기 위한 서버로서,하나 이상의 코어를 포함하는 프로세서; 및메모리;를 포함하고,상기 프로세서는,학습 게임 화면에 포함된 하나 이상의 게임 오브젝트에 대해 게임 오브젝트 정보가 라벨링된 학습 데이터를 생성하고,상기 학습 데이터를 토대로 게임 화면 분석 모델을 사전 학습시키고,상기 학습 데이터는:둘 이상의 학습 게임 화면에 고정적으로 존재하는 게임 오브젝트에 대하여 라벨링하여 생성된 학습 데이터; 또는상기 게임 오브젝트 정보가 라벨링된 제 1 게임 오브젝트를 포함하는 제 1 학습 게임 화면을 수신한 경우, 제 2게임 화면에 포함된 제 2 게임 오브젝트와 상기 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링한 학습 데이터;중 적어도 하나를 포함하는,게임 화면 분석을 제공하기 위한 서버."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "컴퓨터 판독가능 저장 매체에 저장되는 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하 나 이상의 프로세서에서 실행되는 경우 게임 화면 분석 방법을 제공하기 위한 동작들을 수행하도록 하며 상기 동 작들은, 게임 오브젝트가 포함된 게임 화면을 수신하는 동작; 상기 게임 화면을 사전 학습된 게임 화면 분석 모 델에 입력시키는 동작; 및 상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하 나의 게임 속성을 출력하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 화면 분석 방법에 관한 것으로, 보다 구체적으로 기계 학습을 이용하여 화면을 분석하는 방법에 관한 것이다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 통신 기술의 발달로 게임을 즐기는 사람이 증가하면서 전략 시뮬레이션 게임, 롤플레잉 게임 등 다양한 종 류의 게임이 개발되었다. 이러한 게임들은 온라인 및 오프라인 상황에서도 게임을 진행할 수 있고, 특히 온라인 게임은 시공간의 제약이 없어 수많은 유저들이 쉽게 모여 함께 게임을 즐길 수 있다.게임 개발자들은 수많은 유저들이 게임에서 이탈하지 않고 지속적으로 게임 플레이를 하도록 유도하기 위해, 완 성도 높은 게임을 만들 필요가 있다. 완성도 높은 게임을 만들기 위해서는 다양한 상황에서 게임을 테스트를 할 필요가 있다. 따라서 다양한 상황에서 게임 테스트를 소규모의 비용 및 인력으로 진행하기 위해서는 컴퓨팅 장 치가 게임 화면을 인식하여 필요한 정보를 추출할 필요가 있다. 따라서 게임 화면을 인식하여 필요한 정보를 추 출하기 위한 화면 분석 방법에 관한 당업계의 수요가 존재한다. 대한민국 등록특허 10-17772916 호는 촬영영상과 인공지능 알고리즘 기반의 균열검출 자동화 프로그램을 이용한 터널 라이닝 표면의 균열 검출 방법 및 시스템을 개시한다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 화면 분석 방법을 제공하기 위한 것이다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장되어 컴퓨터로 하여금 이하의 동작들을 수행하도록 하는 명령들을 포함하는 컴퓨터 프로그램이 개시된다. 컴퓨터 프 로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 게임 화면 분석 방법을 제공하기 위한 동작들 을 수행하도록 하며 상기 동작들은, 게임 오브젝트가 포함된 게임 화면을 수신하는 동작; 상기 게임 화면을 사 전 학습된 게임 화면 분석 모델에 입력시키는 동작; 및 상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력하는 동작을 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 오브젝트는, 캐릭터, 게임 내에서 캐릭터와 상호작용할 수 있는 요소, 게임 화면 내 사용자 인터페이스 또는 텍 스트 중 적어도 하나를 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 속성은, 게임 장르, 게임 상태 또는 게임 오브젝트 정보 중 적어도 하나를 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 화면 분석 모델은, 입력된 상기 게임 화면을 차원 축소 레이어를 이용하여 연산하여 상기 게임 화면의 특징을 추출하고, 그리고 상기 추출된 상기 게임 화면의 특징을 둘 이상의 병렬적인 분류 레이어에 기초하여 연산하여 상기 둘 이상의 병렬적인 분류 레이어 각각에서 상이한 게임 속성을 출력할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 둘 이상의 병렬적인 분류 레이어는, 게임 장르 분류 레이어, 게임 상태 분류 레이어 또는 게임 오브젝트 식별 레이 어 중 적어도 하나를 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 둘 이상의 게임 화면에 고정적으로 존재하는 게임 오브젝트를 추출하는 동작; 및 상기 고정적으로 존재하는 게임 오브젝트 에 대하여 라벨링하여 학습 데이터를 생성하는 동작을 더 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 라벨링된 제 1 게임 오브젝트를 포함하는 게임 화면을 수신하는 동작; 상기 게임 화면에 포함된 제 2 게임 오브젝트와 상 기 라벨링된 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링하여 학습 데이터를 생 성하는 동작을 더 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 클라이언 트 단말로부터 게임 검색을 위한 검색 요청을 수신하는 동작; 상기 검색 요청에 기초하여 클라이언트가 검색하 고자 하는 검색 게임 속성을 결정하는 동작; 및 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를 생성하는 동작을 더 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 라벨링된 제 1 게임 오브젝트를 포함하는 게임 화면을 수신하는 동작; 상기 게임 화면에 포함된 제 2 게임 오브젝트와 상 기 라벨링된 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링하여 학습 데이터를 생 성하는 동작을 더 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 클라이언 트 단말로부터 게임 검색을 위한 검색 요청을 수신하는 동작; 상기 검색 요청에 기초하여 클라이언트가 검색하 고자 하는 검색 게임 속성을 결정하는 동작; 및 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를 생성하는 동작을 더 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 검색 요청이 문장을 포함하는 경우, 상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결 정하는 동작은, 상기 검색 요청에 포함된 문장 및 상기 게임 속성에 기초한 키워드 각각을 전처리 모델을 이용 하여 연산하여 검색 요청 벡터 및 게임 속성 벡터를 획득하는 동작; 상기 검색 요청 벡터 및 상기 게임 속성 벡 터의 유사도에 기초하여 상기 검색 게임 속성을 결정하는 동작을 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 검색 요청이 이미지를 포함하는 경우, 상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결정하는 동작은, 상기 검색 요청에 포함된 이미지를 상기 게임 화면 분석 모델을 이용하여 연산하여 상기 검색 요청에 기초한 검색 게임 속성을 획득하는 동작을 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 상기 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를 생성하는 동작은, 상기 게임 화면에 매칭된 하나 이상의 게임 속성 중 상기 검색 게임 속성과의 매칭률에 기초하여, 검색 결과 게임 화면을 결정하는 동작; 및 상기 검색 결과 게임 화면에 기초하여 게임 검색 결과를 생성하는 동작을 포함할 수 있다. 화면 분석을 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에서, 제 1 게임 화면 상태에서 액션을 수행하도록 하는 테스트 시나리오를 생성하는 동작; 상기 테스트 시나리오를 클라이언트 단말에 전송하는 동작; 상기 클라이언트 단말로부터 상기 테스트 시나리오에 기초하여 액션을 수행한 이후 획득 한 제 2 게임 화면을 수신하는 동작; 상기 제 2 게임 화면을 상기 게임 화면 분석 모델을 이용하여 연산하여 게 임 속성을 출력하는 동작; 및 상기 테스트 시나리오에 기초한 예상 게임 속성과 상기 제 2 게임 화면에 기초한 게임 속성을 비교하여 상기 액션의 성공 여부를 결정하는 동작을 더 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 게임 화면 분석을 제공하기 위한 방법이 개시된다. 상기 방법은 게임 오브젝트가 포함된 게임 화면을 수신하는 단계; 상기 게임 화면을 사전 학습된 게 임 화면 분석 모델에 입력시키는 단계; 및 상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 게임 화면 분석을 제공하기 위한 서버가 제공된다. 상기 서버는 하나 이상의 코어를 포함하는 프로세서; 및 메모리를 포함하고, 상기 프로세서는, 게임 오브젝트가 포함된 게임 화면을 수신하고, 상기 게임 화면을 사전 학습된 게임 화면 분석 모델에 입력시키고, 그리고 상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력할 수 있다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 화면 분석 방법을 제공할 수 있다."}
{"patent_id": "10-2021-0033748", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조 합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시의 일 실시예에서 서버는 서버의 서버 환경을 수행하기 위한 다른 구성들이 포함될 수도 있다. 서버는 임의의 형태의 장치는 모두 포함할 수 있다. 서버는 디지털 기기로서, 랩탑 컴퓨터, 노트북 컴퓨터, 데스크톱컴퓨터, 웹 패드, 이동 전화기와 같이 프로세서를 탑재하고 메모리를 구비한 연산 능력을 갖춘 디지털 기기일 수 있다. 서버는 서비스를 처리하는 웹 서버일 수 있다. 전술한 서버의 종류는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 명세서에 걸쳐, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인 지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네트워크는 컨볼루셔널 뉴럴 네트워크 (CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 도 1은 본 개시의 일 실시예에 따라 화면 분석 방법을 제공하기 위한 동작을 수행하는 컴퓨팅 장치의 블록 구성 도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 컴퓨팅 장치는 네트워크부, 프로세서, 메모리를 포함할 수 있다. 네트워크부는 본 개시의 일 실시예에 따른 화면 분석을 수행하기 위한 데이터 등을 다른 컴퓨팅 장치, 서 버 등과 송수신할 수 있다. 네트워크부는 시나리오, 검색 요청 등 본 개시의 실시예에 필요한 데이터들을 다른 컴퓨팅 장치, 서버 등과 송수신할 수 있다. 예를 들어, 네트워크부는 데이터베이스 등에서 학습 게임 화면을 수신할 수 있다. 또한, 네트워크부는 복수의 컴퓨팅 장치 사이의 통신을 가능하게 하여 복수의 컴 퓨팅 장치 각각에서 네트워크 함수의 학습이 분산 수행되도록 할 수 있다. 네트워크부는 복수의 컴퓨팅 장 치 사이의 통신을 가능하게 하여 네트워크 함수를 사용한 게임 화면 분석을 분산 처리할 수 있도록 할 수 있다. 본 개시의 일 실시예에 따른 네트워크부는 공중전화 교환망 (PSTN: Public Switched Telephone Network), xDSL(x Digital Subscriber Line), RADSL(Rate Adaptive DSL), MDSL(Multi Rate DSL), VDSL(Very High Speed DSL), UADSL(Universal Asymmetric DSL), HDSL(High Bit Rate DSL) 및 근거리 통신망(LAN) 등과 같은 다양한 유선 통신 시스템들을 사용할 수 있다. 또한, 본 명세서에서 제시되는 네트워크부는 CDMA(Code Division Multi Access), TDMA(Time Division Multi Access), FDMA(Frequency Division Multi Access), OFDMA(Orthogonal Frequency Division Multi Access), SC-FDMA(Single Carrier-FDMA) 및 다른 시스템들과 같은 다양한 무선 통신 시스템들을 사용할 수 있 다. 본 개시에서 네트워크부는 유선 및 무선 등과 같은 그 통신 양태를 가리지 않고 구성될 수 있으며, 단거리 통신망(PAN: Personal Area Network), 근거리 통신망(WAN: Wide Area Network) 등 다양한 통신망으로 구성될 수 있다. 또한, 상기 네트워크는 공지의 월드와이드웹(WWW: World Wide Web)일 수 있으며, 적외선(IrDA: Infrared Data Association) 또는 블루투스(Bluetooth)와 같이 단거리 통신에 이용되는 무선 전송 기술을 이용 할 수도 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크들에서도 사용될 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치(GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서 는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 게임 화면 분석을 수행 할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세 서는 딥러닝(DN: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오 차 계산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행 할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다.예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 게임 화면 분석을 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워크 함수를 이용한 게임 화면 분석을 처리할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 네트 워크부가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장 치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관 련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 이하에서는 게임 화면 분석 방법에 관하여 설명한다. 프로세서는 네트워크부에 기초하여 게임 오브젝트가 포함된 게임 화면을 수신할 수 있다. 게임 화면은 게임이 진행되는 동안 수집된 스크린샷 및/또는 게임이 진행되는 동안 수집된 영상을 포함할 수 있 다. 본 개시의 일 실시예에 따른 게임은 데스크탑 PC, 콘솔 게임, 휴대 전화 등에서 수행되는 게임일 수 있으나 본 개시는 이에 한정되는 것은 아니다. 본 개시의 일 실시예에 따른 게임은, 모든 종류의 게임을 포함할 수 있으며 예를 들어, 어드벤처 게임, 아케이 드 게임, 스포츠 게임, MMORPG(Massive Multiplayer Online Role Playing Game), RPG(Role Playing Game), 시 뮬레이션 게임, 퍼즐 게임, 슈팅 게임, 액션 게임, 전략 게임, 대전 게임, 리듬 게임 및/또는 MOBA(Multiplayer Online Battle Arena)를 포함할 수 있으나 본 개시는 이에 한정되는 것은 아니다. 게임 화면은 하나 이상의 게임 오브젝트를 포함할 수 있다. 게임 화면은 게임이 진행되는 동안 수집된 스크린샷 및/또는 게임이 진행되는 동안 수집된 영상을 포함할 수 있다. 게임 오브젝트는 캐릭터, 게임 내에서 캐릭터와 상호작용할 수 있는 요소, 게임 화면 내 사용자 인터페이스 또 는 텍스트 중 적어도 하나를 포함할 수 있다. 캐릭터는 플레이어가 조종(control)하는 게임 화면 내 이미지일 수 있다. 게임 내에서 캐릭터와 상호작용할 수 있는 요소는 게임 환경에서 플레이어 캐릭터가 이동 가능한 요소, 게임 환 경에서 플레이어의 캐릭터 이동이 제한되는 요소, 플레이어 캐릭터에 사전 결정된 효과를 발생시키는 요소, 캐 릭터 생성 위치 등을 포함할 수 있다. 플레이어의 캐릭터 이동이 제한되는 요소는 예를 들어, 장애물, 언덕, 강, 호수, 산, 건물, 덤불 등이 포함될 수 있다. 플레이어의 캐릭터에 사전 결정된 효과를 발생시키는 요소는 예를 들어, 캐릭터의 이동 속도를 감소시키거나 증가시키는 바람, 캐릭터의 체력을 감소시키거나 증가시키는 바 람, 비 등이 포함될 수 있다. 캐릭터 생성 위치는 예를 들어, 게임 시작할 때 플레이어의 캐릭터가 생성되는 위 치, 플레이어의 캐릭터가 부활하는 위치, 및 NPC(Non-Player-Character), 몬스터, 절대자의 생성 위치 등을 포 함할 수 있다. 전술한 게임 오브젝트에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 화면 내 사용자 인터페이스(User Interface)는 플레이어와 시스템, 기계 또는 컴퓨터 프로그램 사이에서 의사소통 할 수 있도록 하는 가상적 매개체를 포함할 수 있다. 게임 화면 내 사용자 인터페이스(User Interface)는 예를 들어, 스킬바(skill bar), 플레이어의 캐릭터 상태, 말풍선, 채팅 창, 인벤토리 (inventory), 게임 맵, NPC(Non-player Character)의 상태 정보 창 등을 포함할 수 있다. 전술한 게임 오브젝 트에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 텍스트는 게임 화면에 포함된 임의의 문자열을 포함할 수 있다. 예를 들어, 텍스트는 사용자에게 정보를 전달하 기 위한 문자열일 수 있다. 텍스트는 예를 들어, 일 플레이어가 다른 플레이어에게 전송하는 메시지 또는 채팅, 플레이어의 아이디 등일 수 있다. 전술한 게임 오브젝트에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에제한되지 않는다. 이하에서는 게임 화면 분석 모델을 이용하여 게임 화면을 연산하는 방법에 관하여 설명한다. 프로세서는 상기 게임 화면을 사전 학습된 게임 화면 분석 모델에 입력시킬 수 있다. 프로세서 는 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력할 수 있다. 게임 속성은, 게임 장르, 게임 상태 또는 게임 오브젝트 정보 중 적어도 하나를 포함할 수 있 다. 게임 장르는 게임이 어떤 카테고리의 게임인지에 관한 정보일 수 있다. 게임 상태는 게임 화면에 나타 난 상황에 관한 분류 정보일 수 있다. 게임 오브젝트 정보는 게임 화면에 포함된 게임 오브젝트에 대한 분 류 정보 또는 위치 정보 중 적어도 하나를 포함할 수 있다. 게임 화면 분석 모델에 관하여 도 4를 참조하여 설명한다. 도 4는 본 개시의 일 실시예에 따른 게임 화면 분석 모델을 설명하기 위한 예시도이다. 도 4에 도시된 게임 화면 분석 모델은 컨볼루셔널 뉴럴 네트워크의 일종으로 서, 컨볼루셔널 레이어를 포함하는 신경망을 포함할 수 있다. 컨볼루셔널 뉴럴 네트워크는 최소한의 전처리 (preprocess)를 사용하도록 설계된 다계층 퍼셉트론 (multilayer perceptrons)의 한 종류이다. CNN은 하나 또 는 여러 개의 컨볼루셔널 레이어와 이와 결합된 인공 신경망 계층들로 구성될 수 있다. CNN은 가중치와 풀링 레 이어(pooling layer)들을 추가로 활용할 수 있다. 이러한 구조 덕분에 CNN은 2차원 구조의 입력 데이터를 충분 히 활용할 수 있다. 컨볼루셔널 뉴럴 네트워크는 이미지에서 오브젝트를 인식하기 위하여 사용될 수 있다. 컨볼 루셔널 뉴럴 네트워크는 이미지 데이터를 차원을 가진 행렬로 나타내어 처리할 수 있다. 예를 들어 RGB(red- green-blue)로 인코딩 된 이미지 데이터의 경우, R, G, B 색상별로 각각 2차원(예를 들어, 2 차원 이미지 인 경 우) 행렬로 나타내 질 수 있다. 즉, 이미지 데이터의 각 픽셀의 색상 값이 행렬의 성분이 될 수 있으며 행렬의 크기는 이미지의 크기와 같을 수 있다. 따라서 이미지 데이터는 3개의 2차원 행렬로(3차원의 데이터 어레이)로 나타내질 수 있다 프로세서는 게임 화면 분석 모델을 이용하여 게임 화면의 특징을 추출할 수 있다. 프로세서는 입력된 상기 게임 화면을 차원 축소 레이어를 이용하여 연산하여 상기 게임 화면의 특징을 추출 할 수 있다. 프로세서는 차원 축소 레이어에 기초하여 컨볼루션(convolution) 연산 및 풀링(pooling) 연산을 수행할 수 있다. 게임 화면 분석 모델에 포함된 차원 축소 레이어는 둘 이상의 컨볼루셔널 레이어 및 풀링 레이어를 포함할 수 있다. 컨볼루셔널 뉴럴 네트워크에서 컨볼루셔널 필터를 이동해가며 컨볼루셔널 필터와 이미지의 각 위치에서의 행렬 성분끼리 곱하는 것으로 컨볼루셔널 과정(컨볼루셔널 레이어의 입출력)을 수행할 수 있다. 컨볼루셔널 필터는 n*n 형태의 행렬로 구성될 수 있다. 컨볼루셔널 필터는 일반적으로 이미지의 전체 픽셀의 수보다 작은 고정된 형태의 필터로 구성될 수 있다. 즉, m*m 이미지를 컨볼루셔널 레이어(예를 들어, 컨볼루셔널 필터의 사이즈가 n*n인 컨볼루셔널 레이어)입력시키는 경우, 이미지의 각 픽셀을 포함하는 n*n 픽셀을 나타내는 행렬이 컨볼루셔 널 필터와 성분 곱 (즉, 행렬의 각 성분끼리의 곱) 될 수 있다. 컨볼루셔널 필터와의 곱에 의하여 이 미지에서 컨볼루셔널 필터와 매칭되는 성분이 추출될 수 있다. 예를 들어, 이미지에서 상하 직선 성분을 추출하기 위한 3*3 컨볼루셔널 필터는 [[0,1,0], [0,1,0], [0,1,0]] 와 같이 구성될 수 있다. 이미지에서 상하 직선 성분을 추 출하기 위한 3*3 컨볼루셔널 필터가 입력 이미지에 적용되면 이미지에서 컨볼루셔널 필터와 매칭되는 상하 직선 성분이 추출되어 출력될 수 있다. 컨볼루셔널 레이어는 이미지를 나타낸 각각의 채널에 대한 각각의 행렬(즉, R, G, B 코딩 이미지의 경우, R, G, B 색상)에 컨볼루셔널 필터를 적용할 수 있다. 컨볼루셔널 레이어는 입력 이미지에 컨볼루셔널 필터를 적용하여 입력 이미지에서 컨볼루셔널 필터와 매칭되는 피처를 추출할 수 있다. 컨 볼루셔널 필터의 필터 값(즉, 행렬의 각 성분의 값)은 컨볼루셔널 뉴럴 네트워크의 학습 과정에서 역전파에 의 하여 업데이트 될 수 있다. 컨볼루셔널 레이어의 출력에는 서브샘플링 레이어가 연결되어 컨볼루셔널 레이어의 출력을 단순화하여 메모리 사용량과 연산량을 줄일 수 있다. 예를 들어, 2*2 맥스 풀링 필터를 가지는 풀링 레이어에 컨볼루셔널 레이어의 출력을 입력시키는 경우, 이미지의 각 픽셀에서 2*2 패치마다 각 패치에 포함되는 최대값을 출력하여 이미지를 압축할 수 있다. 전술한 풀링은 패치에서 최소값을 출력하거나, 패치의 평균값을 출력하는 방식일 수도 있으며 임의의 풀링 방식이 본 개시에 포함될 수 있다. 컨볼루셔널 뉴럴 네트워크는 하나 이상의 컨볼루셔널 레이어, 서브 샘플링 레이어를 포함할 수 있다. 컨볼루셔 널 뉴럴 네트워크는 컨볼루셔널 과정과 서브샘플링 과정(예를 들어, 전술한 맥스 풀링 등)을 반복적으로 수행하여 이미지에서 피처를 추출할 수 있다. 반복적인 컨볼루션널 과정과 서브샘플링 과정을 통해 뉴럴 네트워크는 이미지의 글로벌 피처를 추출할 수 있다. 프로세서 차원 축소 레이어를 이용하여 추출된 상기 게임 화면의 특징을 둘 이상의 병렬적인 분 류 레이어에 기초하여 연산할 수 있다. 프로세서는 게임 화면의 특징을 제 1, 2 또는 3 분류 레 이어에 기초하여 연산하여 각각 제 1, 2 또는 3 게임 속성을 출력할 수 있다. 둘 이상의 병렬적인 분류 레이어 는 풀리 커넥티드 레이어(fully connected layer)를 포함할 수 있다. 풀리 커넥티드 레이어는 하나의 레이 어에 있는 모든 뉴런과 이웃한 레이어에 있는 모든 뉴런이 연결되는 레이어이다. 풀리 커넥티드 레이어는 뉴럴 네트워크에서 각 레이어의 모든 노드가 다른 레이어의 모든 노드에 연결된 구조를 의미할 수 있다. 컨볼루셔널 뉴럴 네트워크에 대한 구체적인 구성에 관한 설명은 본 출원에서 전체가 참조로서 통합되는 미국 등록 특허 US9870768에서 보다 구체적으로 논의된다. 프로세서는 둘 이상의 병렬적인 분류 레이어 각각에서 상이한 게임 속성을 출력할 수 있다. 둘 이상의 병 렬적인 분류 레이어는, 게임 장르 분류 레이어, 게임 상태 분류 레이어 또는 게임 오브젝트 식별 레이어 중 적 어도 하나를 포함할 수 있다. 게임 오브젝트 식별 레이어는, 게임 화면에 포함된 하나 이상의 오브젝트를 식별하기 위한 레이어일 수 있 다. 게임 오브젝트 식별 레이어는 게임 화면에 포함된 하나 이상의 오브젝트를 어떤 오브젝트인지 분류할 수 있다. 게임 장르 분류 레이어 또는 게임 상태 분류 레이어는, 게임 화면에 포함된 하나 이상의 오브젝트 식별 결 과에 기초하여 게임 장르를 분류하기 위한 분류 레이어일 수 있다. 본 개시의 일 실시예에 따라 게임 장르 분류 레이어 또는 게임 상태 분류 레이어는, 게임 오브젝트 식별 레이어에 기초한 게임 오브젝트의 식별 결과인 게임 오브젝트 정보에 기초하여 게임 장르 또는 게임 상태를 분류할 수도 있다. 예를 들어, 게임 오브젝트 식별 레이 어에 기초하여 게임 화면에 플레이어 캐릭터, 총, 나무 및 차량에 관한 오브젝트 정보를 획득한 경우, 프 로세서는 게임 화면의 게임 장르를 “FPS”, 게임 상태를 “생존 플레이어의 게임 진행”으로 결정할 수 있다. 전술한 게임 속성 결정에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 게임 화면 분석 모델의 학습 방법에 관하여 설명한다. 본 개시의 일 실시예에 따라 게임 화면 분석 모델을 학습시키기 위하여 프로세서는 학습 데이터 세트를 생 성하거나 또는 다른 컴퓨팅 장치로부터 생성된 학습 데이터 세트를 수신할 수 있다. 학습 데이터 세트는 둘 이 상의 학습 데이터를 포함할 수 있다. 본 개시의 일 실시예에 따라 학습 데이터는 게임 화면을 입력으로 하고, 게임 화면에 포함된 하나 이상의 게임 오브젝트에 대해 게임 오브젝트 정보가 라벨링된 데이터일 수 있다. 또는, 본 개시의 일 실시예에 따라 학습 데 이터는 게임 화면을 입력으로 하고, 게임 화면에 포함된 하나 이상의 게임 오브젝트에 기초한 게임 속성이 라벨 링된 데이터일 수 있다. 학습 데이터에 포함된 게임 화면은 게임이 진행되는 동안 수집된 스크린샷 및/또는 게 임이 진행되는 동안 수집된 영상을 포함할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 클라이언트로 부터 게임 오브젝트 정보를 수신하여 학습 데이터를 생성할 수 있다. 본 개시의 다른 일 실시예에 따라 프로세 서는 게임 엔진을 이용하여 산출된 게임 오브젝트 정보에 기초하여 학습 데이터를 생성할 수 있다. 본 개 시의 다른 일 실시예에 따라 프로세서는 둘 이상의 게임 화면에 고정적으로 존재하는 게임 오브젝트를 추 출하고, 추출된 게임 오브젝트에 기초하여 학습 데이터를 생성할 수 있다. 본 개시의 다른 일 실시예에 따라 프 로세서는 라벨링된 오브젝트에 기초하여 게임 화면에 포함된 다른 오브젝트를 라벨링하여 학습 데이터를 생성할 수 있다. 프로세서가 학습 데이터를 생성하는 방법에 관하여 후술하여 구체적으로 설명한다. 본 개시의 일 실시예에 따라 프로세서는 클라이언트로부터 게임 오브젝트 정보를 수신할 수 있다. 클라이 언트는 원격 디바이스, 로컬 디바이스 및/또는 클라우드를 포함할 수 있다. 원격 디바이스는 사용자 컴퓨터에 다른 네트워크를 이용하여 연결된 디바이스를 포함할 수 있다. 로컬 디바이스는 사용자 컴퓨터에 다른 네트워크 를 이용하지 않고 직접적으로 연결된 디바이스를 포함할 수 있다. 클라우드는 사용자 컴퓨터가 아닌 네트워크를 이용하여 연결된 다른 컴퓨터로 정보를 처리하는 인터넷 기반 컴퓨팅을 포함할 수 있다. 전술한 클라이언트에 관한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다.본 개시의 일 실시예에 따라 프로세서는 게임 엔진을 이용하여 산출된 게임 속성에 기초하여 게임 속성을 라벨링한 학습 데이터를 생성할 수 있다. 프로세서는 클라이언트로부터 수신한 게임 속성을 기초로 게임 오브젝트가 포함된 게임 화면에 게임 오브 젝트 정보를 라벨링할 수 있다. 클라이언트로부터 수신한 게임 속성은 게임 엔진을 이용하여 산출된 정보일 수 있다. 게임 엔진은 그래픽 표시 기능을 갖춘 응용 프로그램을 구현하는 소프트웨어 구성 요소일 수 있다. 게임 엔진은 그래픽 출력, 사운드 출력, 스크립트 작성, 스트리밍, 메모리 관리, 애니매이션, 게임 속성 출력 등과 같은 기능을 포함할 수 있다. 프로세서는 게임 엔진을 이용하여 산출된 정보를 기초로 게임 화면에 게임 속성을 매칭하여 라벨링된 학습 데이터 세트를 생성할 수 있다. 전술한 학습 데이터 라벨링에 관한 구체적인 기 재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따른 게임 속성은, 게임 화면에 기초한 게임 장르, 게임 상태 또는 게임 오브젝트 정보 중 적어도 하나를 포함할 수 있다. 게임 장르는 게임이 어떤 카테고리의 게임인지에 관한 정보일 수 있다. 게임 장르는 게임 화면 전체를 기초로 결정되는 분류 정보일 수 있다. 게임 장르는 예를 들어, 전략 시뮬레이션, RPG(Roll Playing Game), 리듬 게임, 온라인 게임, FPS 게임, 보드 게임, 스포츠 게임, 생존 게임, 레이싱 게임 등을 포함할 수 있다. 전술한 게임 장르에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 상태는 게임 화면에 나타난 상황에 관한 분류 정보일 수 있다. 게임 상태는 게임 화면 전체를 기초로 결정 되는 분류 정보일 수 있다. 게임 상태는 예를 들어, 플레이어가 조종하는 캐릭터가 게임 내에서 위치한 곳에 관 한 정보, 플레이어의 캐릭터가 게임 내에서 수행하고 있는 퀘스트에 관한 정보 등일 수 있다. 예를 들어, 플레 이어가 조종하는 캐릭터가 상점에서 아이템을 구매하고 있는 경우, 게임 상태는 “아이템을 구매하는 장면”일 수 있다. 전술한 게임 상태에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 오브젝트 정보는 게임 화면에 포함된 게임 오브젝트에 대한 분류 정보 또는 위치 정보 중 적어도 하나를 포함할 수 있다. 게임 오브젝트에 대한 분류 정보는 게임 오브젝트를 표현하는 단어 또는 문장일 수 있다. 게임 오브젝트에 대한 분류 정보는 게임 오브젝트의 명칭, 게임 오브젝트의 카테고리 등을 포함할 수 있다. 게임 오브젝트의 명칭은 예를 들어, 캐릭터 이름, 몬스터 이름, 아이템 이름, 건물 이름, 지형물 이름, 사용자 인터페이스 명칭 등을 포함할 수 있다. 캐릭터 이름은 예를 들어, \"녹턴, 니달리, 렝가, 르블랑, 탈론, 케인, 아리, 진, 잭스, 티모, 트위치\" 일 수 있다. 게임 오브젝트의 카테고리는 게임 오브젝트 명칭의 상위 개념일 수 있다. 게임 오브젝트 카테고리는 예를 들어, 캐릭터, 몬스터, 아이템, 건물, 지형물, 사용자 인터페이스 등을 포함할 수 있다. 예를 들어, 캐릭터 이름 \"녹 턴, 니달리, 렝가, 르블랑, 탈론, 케인, 아리, 진, 잭스, 티모, 트위치\"는 \"캐릭터\"라는 게임 오브젝트 카테고 리에 포함될 수 있다. 게임 오브젝트에 대한 위치 정보는 게임 화면 내에서 게임 오브젝트가 배치된 장소의 위치 정보를 포함할 수 있 다. 게임 오브젝트에 대한 위치 정보는 예를 들어, 2차원 게임인 경우 게임 화면을 직교 좌표계를 이용하여 나 타낸 정보일 수 있다. 플레이어가 게임 화면을 보는 방향을 기준으로 게임 화면 중앙을 (0,0)으로 설정한 경우, 게임화면 우측 상단에 위치한 오브젝트의 위치 정보는 (5,5)로 표현될 수 있다. 전술한 게임 오브젝트 정보는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서가 게임 오브젝트를 추출하는 것에 기초하여 게임 오브젝트를 라벨 링한 학습 데이터를 생성할 수 있다. 프로세서는 둘 이상의 게임 화면에 고정적으로 존재하는 게임 오브젝트를 추출할 수 있다. 둘 이상의 게임 화면은 상이한 시간에 수집된 화면일 수 있다. 둘 이상의 게임 화면은 제 1 시간에 수집된 게임 화면 및 제 2 시간에 수집된 게임 화면을 포함할 수 있다. 예를 들어, 둘 이상의 게임 화면은 시계열적인 게임 화면일 수도 있다. 예를 들어, 둘 이상의 게임 화면은 게임 시작 직후 획득된 게임 화면 및 게임 시작 중반에 획득된 게임 화면을 포함할 수 있다. 둘 이상의 게임 화면은 동일한 게임 내에서 획득되거나 또는 적어도 하나 이상의 속성을 공유하는 둘 이상의 게임 내에서 획득된 게임 화면들을 포함할 수 있다. 예를 들어, 둘 이상의게임 화면은 동일한 A 게임 내에서 획득된 게임 화면일 수 있다. 또한, 예를 들어 둘 이상의 게임 화면은 A 게 임 내에서 획득된 화면 및 A 게임과 시리즈 게임인 동일한 캐릭터를 공유하는 B 게임 내에서 획득된 화면일 수 도 있다. 전술한 둘 이상의 게임 화면에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 고정적으로 존재하는 게임 오브젝트는, 둘 이상의 게임 화면에서 동일한 위치에 동일하게 존재하는 오브젝트일 수 있다. 고정적으로 존재하는 게임 오브젝트는, 둘 이상의 게임 화면에서 사전 결정된 범위 이내에 존재하는 오브젝트일 수도 있다. 프로세서는 제 1 게임 화면과 제 2 게임 화면을 비교하여, 제 1 화면 및 제 2 화면 에 고정적으로 존재하는 게임 오브젝트를 추출할 수 있다. 프로세서는 제 1 게임 화면과 제 2 게임 화면에 포함된 픽셀들의 유사도에 기초하여 고정적으로 존재하는 게임 오브젝트를 추출할 수 있다. 픽셀들의 유사도는 예를 들어, 픽셀의 색상, 밝기 값 등의 유사도를 포함할 수 있다. 프로세서는 제 1 게임 화면과 제 2 게임 화면 각각에 대하여 영상처리 알고리즘 기법을 사용하여 고정적으로 존재하는 오브젝트를 추출할 수 있다. 영상 처리 알고리즘은 캐니 엣지 디텍션(canny edge detection), 해리스 코너 디텍션(harris corner detection)등을 포함할 수 있으나, 본 개시는 이에 제한되지 않는다. 캐니 엣지 디텍션을 통해 프로세서는 영상을 블러링 (blurring) 처리하여 노이즈를 제거하고, 마스크 엣지를 이용하여 엣지를 검출하고, Non-Maximum Value를 제거 하고, Double Threshold로 크기를 구분하여 엣지를 연결함으로써 엣지를 추출할 수 있다. 프로세서는 제 1 게임 화면에서 검출된 엣지와 제 2 게임 화면에서 검출된 엣지를 비교하여 유사한 엣지를 검출할 수 있다. 프로 세서는 검출된 유사한 엣지에 기초하여 고정적으로 존재하는 게임 오브젝트를 추출할 수 있다. 예를 들어, 테트리스 게임에서 스테이지 1에 관한 게임 플레이를 수행하는 중 획득된 둘 이상의 화면에서 프로세서는 고정적으로 존재하는 레벨 표시 오브젝트, 다음에 나오는 블록을 표시하기 위한 오브젝트 등을 추출할 수 있다. 또한, 예를 들어 FPS(First-Person Shooter) 게임에서 프로세서는 화면 중앙 하단 부분에 고정적으로 존재 하는 팔 또는 총 오브젝트를 추출할 수 있다. 전술한 게임 화면 및 게임 오브젝트에 관한 구체적인 기재는 예시 일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 고정적으로 존재하는 게임 오브젝트에 대하여 라벨링을 수행 함으로서 라벨링된 학습 데이터를 생성할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 게임 오브젝트에 대한 라벨링을 위하여 고정적으 로 존재하는 오브젝트를 다른 컴퓨팅 장치로 전송하거나 또는 사용자에게 인터페이스부(미도시)를 통해 알림을 전송할 수 있다. 사용자는 다른 컴퓨팅 장치 또는 인터페이스부를 통해 게임 오브젝트에 관한 라벨링을 수행할 수 있다. 프로세서는 다른 컴퓨팅 장치 또는 사용자의 입력에 기초하여 수신한 라벨인 게임 오브젝트 정보 를 상기 고정적으로 존재하는 게임 오브젝트와 매칭하여 저장할 수 있다. 예를 들어, 제 1 게임 화면 및 제 2 게임 화면에 모두 존재하는 NPC(Non-Player Character)가 있을 경우, 프로세서는 해당 게임 오브젝트를 다 른 컴퓨팅 장치로 전송하거나 또는 사용자에게 인터페이스부를 통해 알림을 전송할 수 있다. 프로세서는 사용자 입력에 기초하여 다른 컴퓨팅 장치 또는 사용자 인터페이스부를 통해 상기 게임 오브젝트가 NPC 게임 오 브젝트임(즉, 게임 오브젝트 정보)을 수신할 수 있다. 프로세서는 제 1 게임 화면 및 제 2 게임 화면에 포 함된 고정적으로 존재하는 게임 오브젝트(즉, 본 예시에서 NPC)에 대하여 NPC 게임 오브젝트 라벨을 매칭하여 저장할 수 있다. 전술한 게임 오브젝트 라벨링에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 프로세서는 라벨링된 학습 데이터에 기초하여 다른 게임 화면에 포함된 오브 젝트를 라벨링하여 학습 데이터를 생성할 수 있다. 프로세서는 라벨링된 제 1 게임 오브젝트를 포함하는 게임 화면을 수신할 수 있다. 프로세서는 게임 화면에 포함된 제 2 게임 오브젝트와 상기 라벨링된 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링하여 학습 데이터를 생성할 수 있다. 제 1 게임 오브젝트와 제 2 게임 오브젝트는 동일한 게 임 화면에 포함된 게임 오브젝트일 수도 있고, 또는 상이한 게임 화면에 포함된 게임 오브젝트일 수도 있다. 프 로세서는 제 1 게임 오브젝트와 제 2 게임 오브젝트의 유사도를 연산할 수 있다. 유사도는 제 1 게임 오브 젝트와 제 2 게임 오브젝트의 픽셀 단위 유사도일 수 있다. 예를 들어, 제 1 게임 오브젝트와 제 2 게임 오브젝 트가 사전 결정된 오차 범위 이내의 픽셀 값 차이를 가지거나, 또는 제 1 게임 오브젝트와 제 2 게임 오브젝트 각각에 대하여 엣지 디텍션을 통해 추출한 엣지의 경사 또는 위치가 오차 범위 이내인 경우, 프로세서는 제 1 게임 오브젝트와 제 2 게임 오브젝트를 동일한 게임 오브젝트로 결정할 수 있다. 예를 들어, 프로세서 는 제 1 게임 오브젝트(본 예시에서, 나무)에 대하여 나무 게임 오브젝트 정보가 라벨링된 게임 화면을 수 신할 수 있다. 프로세서는 상기 게임 화면 또는 다른 게임 화면에 포함된 객체들 중 제 1 게임 오브젝트와 유사한 제 2 게임 오브젝트를 추출할 수 있다. 프로세서는 상기 제 2 게임 오브젝트를 포함하는 게임 화면에 대하여 나무 게임 오브젝트 정보를 라벨링하여 학습 데이터를 생성할 수 있다. 전술한 오브젝트 라벨링에 관 한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 프로세서는 학습 데이터 세트에 기초하여 게임 화면 분석 모델을 학습시킬 수 있다. 본 개시의 일 실시예에 따른 게임 화면 분석 모델은 교사 학습(supervised learning), 비 교사 학습 (unsupervised learning) 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있 다. 네트워크 함수의 학습은 출력의 오류를 최소화하기 위한 것이다. 네트워크 함수의 학습에서 반복적으로 학 습 데이터를 네트워크 함수에 입력시킨다. 네트워크 함수의 학습에서 학습 데이터에 대한 네트워크 함수의 출력 과 타겟의 에러를 계산한다. 네트워크 함수의 학습에서 에러를 줄이기 위한 방향으로 네트워크 함수의 에러를 네트워크 함수의 출력 레이어에서부터 입력 레이어 방향으로 역전파하여 네트워크 함수의 각 노드의 가중치를 업데이트 할 수 있다. 프로세서는 둘 이상의 병렬적인 분류 레이어 각각에서 출력된 둘 이상의 게임 속성 및 학습 데이터에 포함된 라벨의 오차를 연산할 수 있다. 프로세서는 제 1 게임 속성 및 제 1 게임 속성에 대응하는 라벨의 오차인 제 1 오차를 연산하고, 제 2 게임 속성 및 제 2 게임 속성에 대응하는 라벨의 오차인 제 2 오차를 연산 하고, 그리고 제 3 게임 속성 및 제 3 게임 속성에 대응하는 라벨의 오차인 제 3 오차를 연산할 수 있다. 프로 세서는 제 1 오차 내지 제 3 오차 각각에 가중치를 부여하여 역전파를 하기 위한 학습의 오차(즉, 에러)를 연산할 수 있다. 프로세서는 제 1 오차, 제 2 오차 및 제 3 오차 각각에 대하여 동일한 가중치를 부여할 수도 있고, 또는 상이한 가중치를 부여할 수도 있다. 프로세서는 예를 들어, 게임 오브젝트 정보에 기초한 제 3 오차의 가중치가, 게임 장르에 기초한 제 1 오차 및 게임 상태에 기초한 제 2 오차의 가중치보다 더 큰 값 을 갖도록 결정할 수도 있다. 전술한 게임 화면 분석 모델에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이 에 제한되지 않는다. 도 2는 본 개시의 일 실시예에 따른 게임 화면을 설명하기 위한 예시도이다. 게임 화면은 플레이어가 조종하는 캐릭터, 몬스터, 아이템, 채팅창, 캐릭터 레벨을 나타내는 UI, 캐릭터 체력을 나타내는 UI, 맵 정보를 표시하는 UI을 포함할 수 있다. 예를 들어, 프로세서는 게임 화면을 이용하여 게임 화면 분석 모델을 이용하여 연산하여 제 1 게임 속성인 캐릭터, 몬스터, 아이템, 채팅창, 캐릭터 레벨을 나타내는 UI, 캐릭터 체력을 나타내는 UI, 맵 정보를 표시하는 UI을 출력할 수 있다. 프로세서는 게임 화면 분석 모델을 이 용하여 게임 화면을 연산하여 제 2 게임 속성인 게임 장르 RPG를 출력할 수 있다. 프로세서는 게임 화면 분석 모델을 이용하여 게임 화면을 연산하여 게임 상태인 몬스터 대전을 출력할 수 있다. 전술한 게 임 화면 분석 모델에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 게임 검색 방법에 관하여 설명한다. 이하에서는 게임 검색 방법에 관하여 도 5를 참조하여 설명한다. 도 5는 본 개시의 일 실시예에 따른 게임 검색 방법을 설명하기 위한 예시도이다. 프로세서는 네트워크부를 이용하여 클라이언트 단말로부터 게임 검색을 위한 검색 요청을 수신할 수 있다. 프로세서는 상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속 성을 결정할 수 있다. 본 개시의 일 실시예에 따라 상기 검색 요청은 검색 요청 문장을 포함할 수 있다. 프로세서는 상기 검색 요청에 포함된 검색 요청 문장 및 상기 게임 속성에 기초한 키워드 각각을 전 처리 모델을 이용하여 연산하여 검색 요청 벡터 및 게임 속성 벡터를 획득할 수 있다. 프로세서는 게임 화 면 분석 모델에 기초하여 게임 화면이 분류될 수 있는 둘 이상의 게임 속성들 각각에 대한 게임 속성 벡터를 획 득할 수 있다. 본 개시의 일 실시예에 따른 전처리 모델은 RNN(Recurrent Neural Network)을 이용하여 자연어 처리를 수행할 수 있다. 여기서 RNN은 하나 이상의 단어를 포함하는 문장의 데이터에 기초하여 패턴을 학습하기 위한 딥 러닝모델을 의미할 수 있다. 즉, 프로세서는 RNN에 기초하여 검색 요청 문장을 입력 데이터, 그리고 상기 검색 요청 문장에 대한 검색 요청 벡터를 출력 데이터로써 반복 학습할 수 있다. 또는, 프로세서는 RNN에 기초 하여 게임 속성을 입력 데이터, 그리고 상기 게임 속성에 대한 게임 속성 벡터를 출력 데이터로써 반복 학습할 수 있다. 이에 따라, 프로세서는 네트워크부를 통해 수신되는 검색 요청 문장이 축적되고, 상기 검색 요청 문장에 대한 검색 요청 벡터 정보가 축적될수록 보다 정확한 검색 요청 문장의 벡터화를 수행할 수 있다. 그리고, 본 개시의 일 실시예에 따른 RNN은 LSTM(Long Short-Term Memory Units) 방식 및 GRU(Gated Recurrent Units) 방식 중 적어도 하나를 통해 연속 학습으로 인한 그라디언트 소실(Vanishing Gradient) 문제를 해결할 수 있다. 보다 구체적으로, 프로세서는 기본적인 RNN 구조에 각각의 가중치를 지니고 있는 입력, 출력 및 망각 게이트를 추가하는 LSTM 방식을 사용하여 그라디언트 소실을 방지할 수 있다. 또한, 다른 일 실시예에서 프로세서는 RNN 구조에 입력 및 망각 게이트만 추가적으로 포함하는 GRU 방식(예컨대, 다이나믹 GRU(Dynamic Gated Recurrent Units) 방식)으로 그라디언트 소실을 방지할 수 있다. 전술한 RNN의 구조에 대한 자세한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 보다 구체적으로, 프로세서는 검색 요청 문장을 하나 이상의 네트워크 함수를 포함하는 전처리 모델을 통 해 연산함으로써 검색 요청 벡터 형태로 환산할 수 있다. 여기서 전처리 모델은 형태소 분석을 통해 검색 요청 문장을 하나 이상의 형태소들의 집합으로 변환하기 위한 함수를 포함할 수 있다. 그리고, 전처리 모델은 하나 이상의 형태소 각각을 사전 설정된 수의 차원(예컨대, 100차원)의 벡터로 환산하기 위한 함수를 포함할 수 있다. 예를 들어, 전처리 모델은 \"Word2Vec\"함수를 포함할 수 있다. 그리고, 전처리 모델은 형태소 단위로 환산 된 벡터 간의 거리를 산출하기 위한 함수를 이용하여 가중치 행렬의 형태로 산출할 수 있다. 그리고, 전처리 모 델은 검색 요청 문장에 대한 가중치에 기초하여 검색 요청 문장 자체의 벡터를 산출하기 위한 함수를 포함할 수 있다. 전술한 전처리 모델에 대한 자세한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 프로세서는 상기 검색 요청 벡터 및 상기 게임 속성 벡터의 유사도에 기초하여 상기 검색 게임 속성 을 결정할 수 있다. 프로세서는 둘 이상의 게임 속성 벡터 중 검색 요청 벡터와 유사도가 높은 게임 속성 벡터를 기초로 검색 게임 속성을 결정할 수 있다. 프로세서는 둘 이상의 게임 속성 벡터 중 검색 요 청 벡터와 유사도가 가장 높은 게임 속성 벡터를 기초로 검색 게임 속성을 결정할 수 있다. 프로세서(12 0)는 둘 이상의 게임 속성 벡터 중 검색 요청 벡터와 유사도가 사전결정된 값 이상인 게임 속성 벡터를 기초로 검색 게임 속성을 결정할 수 있다. 예를 들어, 클라이언트 단말로부터 수신한 검색 요청이 “최신 RPG 게임 찾아줘”일 수 있다. 프로세서는 “최신 RPG 게임 찾아줘”를 전처리 모델을 이용하여 연산하여 검색 요청 벡터를 획득할 수 있다. 프로세서는 게임 속성 “2019 RPG”, “2013 RPG”, “2000 FPS”, “ 퍼즐”, “캐릭터”, “나무”, “상점”, “상점에서 아이템 구매” 각각을 전처리 모델을 이용하여 연산함으 로써 게임 속성 벡터를 획득할 수 있다. 프로세서는 “최신 RPG 게임 찾아줘”에 기초한 검색 요청 벡터와 “2019 RPG”, “2013 RPG”, “2000 FPS”, “퍼즐”, “캐릭터”, “나무”, “상점”, “상점에서 아이템 구 매” 각각에 기초한 게임 속성 벡터의 유사도를 비교할 수 있다. 프로세서는 게임 속성 중 “2019 RPG”에 기초한 게임 속성 벡터의 유사도가 가장 높은 것으로 결정할 수 있다. 프로세서는 “2019 RPG”를 검색 게 임 속성으로 결정할 수 있다. 전술한 검색 방법에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되 지 않는다. 본 개시의 일 실시예에 따라 상기 검색 요청은 이미지를 포함할 수 있다. 프로세서는 상기 검색 요청에 포함된 이미지를 상기 게임 화면 분석 모델을 이용하여 연산하여 상기 검색 요청에 기초한 검색 게임 속성을 획득할 수 있다. 검색 요청에 포함된 이미지는, 게임과 관련된 이미 지일 수 있다. 예를 들어, 검색 요청에 포함된 이미지는 게임 화면일 수도 있고 또는 게임 광고를 촬영한 이미 지일 수도 있다. 프로세서는 검색 요청에 포함된 이미지를 사전 학습된 게임 화면 분석 모델을 이용하여 연산할 수 있다. 프로세서는 게임 화면 분석 모델에서 획득된 게임 속성을 검색 게임 속성으로 결정 할 수 있다. 예를 들어, 지하철의 게임 광고를 촬영한 이미지에 A 캐릭터 오브젝트가 포함되어 있을 수 있다. 프로세서는 이미지를 게임 화면 분석 모델을 이용하여 연산하여 A 캐릭터에 관한 게임 오브젝트 정보를 출 력할 수 있다. 프로세서는 A 캐릭터에 관한 게임 오브젝트 정보를 검색 게임 속성으로 결정할 수 있 다. 전술한 검색 방법에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다.프로세서는 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게임 검색 결과를 생성할 수 있다. 프로세서는 상기 게임 화면에 매칭된 하나 이상의 게임 속성 중 상기 검색 게임 속성과의 매칭률에 기초하여, 검색 결과 게임 화면을 결정할 수 있다. 메모리에 저장된 게임 화면은 둘 이상의 게임 속 성이 매칭되어 있을 수 있다. 프로세서는 메모리에 저장된 둘 이상의 게임 화면 각각에 매칭된 게임 속성과 검색 게임 속성을 비교할 수 있다. 예를 들어, 검색 게임 속성이 “FPS”이고, 메모리에 저장된 제 1 게임 화면에 매칭된 게임 속성이 “FPS”, “캐릭터”, “몬스터”, “초원”이고, 제 2 게임 화면 에 매칭된 게임 속성이 “아케이드”, “블록”, “점수”일 때, 검색 게임 속성과 매칭되는 게임 속성이 가장 많은 제 1 게임 화면을 검색 결과 게임 화면으로 결정할 수 있다. 전술한 검색 방법에 관한 구체적인 기재는 예 시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 검색 게임 속성과 게임 화면에 매칭된 하나 이상의 게임 속성 의 비교 결과에 기초하여 검색 결과 게임 화면을 결정할 수 있다. 프로세서는 검색 게임 속성 각각에 상이한 가중치를 적용하여, 게임 화 면에 매칭된 하나 이상의 게임 속성과 비교할 수 있다. 검색 게임 속성은 예를 들어, 게임 장르, 게임 상태 및 게임 오브젝트 정보를 포함할 수 있다. 프로세서는 검색 게임 속성에 포함된 각각의 항목에 상이한 가중치 를 적용하여, 게임 화면에 매칭된 하나 이상의 게임 속성과 비교할 수 있다. 예를 들어, 프로세서는 게임 장르, 게임 상태 및 게임 오브젝트 정보 각각에 상이한 가중치를 적용하여, 게임 화면에 매칭된 하나 이상의 게 임 속성과 비교할 수 있다. 예를 들어, 프로세서는 게임 장르에 관하여 가장 높은 가중치를 부여하고, 게 임 상태에 관하여 중간 가중치, 그리고 게임 오브젝트 정보에 관하여 가장 적은 가중치를 부여할 수 있다. 가중 치 부여에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 예를 들어, 검색 게임 속성은 “RPG”, “던전에서 몬스터 사냥”, “캐릭터”일 수 있다. 메모리에 저장된 제 1 게임 화면에 매칭된 게 임 속성이 “RPG”, “상점에서 아이템 구매”, “캐릭터”이고, 제 2 게임 화면에 매칭된 게임 속성이 “RPG”, “던전에서 몬스터 사냥”, “동굴”일 수 있다. 검색 게임 속성과 제 1 게임 화면 및 제 2 게임 화면 각각에 매칭된 게임 속성은 각각 2개씩 일치하나, 본 예시에서 게임 상태에 관하여 게임 오브젝트 정보보다 높 은 가중치를 부여하고 있으므로, 프로세서는 제 2 게임 화면에 대한 매칭률이 제 1 게임 화면에 대한 매칭 률보다 높은 것으로 결정할 수 있다. 프로세서는 제 1 게임 화면을 검색 결과 게임 화면으로 결정할 수 있 다. 전술한 검색 방법에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 상기 검색 결과 게임 화면에 기초하여 게임 검색 결과를 생성할 수 있다. 프로세서 는 검색 결과 게임 화면에 대한 게임을 게임 검색 결과로 결정할 수 있다. 프로세서는 게임 검색 결 과를 클라이언트 단말에 전송할 수 있다. 전술한 예시에서 검색 결과 게임 화면인 제 1 게임 화면이 A 게임을 플레이 하는 중 캡쳐(capture)한 화면인 경우, 제 1 게임 화면에 대하여 A 게임 정보가 매칭되어 메모 리에 저장되어 있을 수 있다. 프로세서는 A 게임 정보를 클라이언트 단말에 전송할 수 있다. 전 술한 검색 방법에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 게임 화면에 기초하여 게임 검색을 수행하는 경우, 검색의 정확성을 높일 수 있다. 따라서, 검색 요청에 따른 검색 게임 속성과 게임 화면에 매칭된 게임 속성을 비교함으로써, 사용자가 원하는 검색 결과를 더 정확하게 제 공할 수 있다. 또한, 복수의 게임 속성에 상이한 가중치를 부여함으로써 게임 검색 결과의 정확도를 더욱 높일 수 있다. 이하에서는 게임 테스트 방법에 관하여 설명한다. 게임 테스트 방법에 관하여 도 6을 참조하여 설명한다. 도 6은 본 개시의 일 실시예에 따른 게임 테스트 방법을 설명하기 위한 예시도이다. 프로세서는 제 1 게임 화면 상태에서 액션을 수행하도록 하는 테스트 시나리오를 생성할 수 있다. 테 스트 시나리오는 제 1 게임 화면에 포함된 적어도 하나의 오브젝트에 변경을 가하는 동작에 관한 정보를 포함할 수 있다. 예를 들어, 테스트 시나리오는 제 1 게임 화면의 둘 이상의 캐릭터 선택 사용자 인터페이스 중 하나의 캐릭터 사용자 인터페이스를 선택하는 동작에 관한 정보를 포함할 수 있다. 전술한 테스트 시나리오에 관한 구 체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 네트워크부를 통해 상기 테스트 시나리오를 클라이언트 단말에 전송할 수 있다. 클라이언트 단말의 프로세서는 수신한 테스트 시나리오에 기초하여 제 1 게임 화면 상태에서액션을 수행할 수 있다. 전술한 예시에서 클라이언트 단말의 프로세서는 제 1 게임 화면에 포함된 사 용자 인터페이스에 기초하여 둘 이상의 캐릭터 중 하나의 캐릭터를 선택하는 액션을 수행할 수 있다. 제 1 게임 화면 상태에서 테스트 시나리오에 기초한 액션을 수행함에 따라, 클라이언트 단말의 게임 화면은 제 2 게 임 화면 상태로 변경될 수 있다. 클라이언트 단말의 프로세서는 네트워크부를 통해 제 2 게임 화면을 컴퓨팅 장치에 전송할 수 있다. 전술한 테스트 시나리오에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 상기 클라이언트 단말로부터 상기 테스트 시나리오에 기초하여 액션을 수행한 이후 획득한 제 2 게임 화면을 수신할 수 있다. 제 2 화면에 기초하여 테스트 성공여부를 결정하는 방법에 관하여 도 3을 참조 하여 설명한다. 도 3은 본 개시의 일 실시예에 따른 게임 화면을 설명하기 위한 예시도이다. 프로세서는 상기 제 2 게임 화면을 상기 게임 화면 분석 모델을 이용하여 연산하여 게임 속성을 출력(57 0)할 수 있다. 프로세서는 상기 테스트 시나리오에 기초한 예상 게임 속성과 상기 제 2 게임 화면에 기초 한 게임 속성을 비교하여 상기 액션의 성공 여부를 결정할 수 있다. 예상 게임 화면은, 테스트 시나리오에 기초하여 클라이언트 단말에서 액션을 수행하는 경우 변경될 것으로 예상되는 게임 화면일 수 있다. 예상 게임 속성은, 예상 게임 화면을 게임 화면 분석 모델을 이용하여 연산했을 때 획득되는 게임 속성일 수 있다. 도 3은 참조번호 600번 게임 화면 및 참조번호 601번 게임 화면을 포함하고 있다. 예를 들어, 참조번호 600번 게임 화면은 게임 개발자의 기획 의도가 그대로 반영된 게임 화면일 수 있다. 또한 참조 번호 601번 게임 화면 은 테스트 시나리오에 기초하여 게임이 실행된 제 2 게임 화면일 수 있다. 본 개시의 일 실시예에서, 참조번호 601번 게임 화면은 사용자 인터페이스인 홈 버튼을 포함할 수 있다. 참조번호 600번 게임 화면과 비교한 결과 홈 버튼은 게임 화면의 캐릭터 얼굴을 가리는 좌표에 위치하고 있을 수 있다. 프로세서는 제 2 게임 화면을 게임 화면 분석 모델을 이용하여 연산하여, 홈 버튼이 잘못 배치된 게임 오브젝트임을 검출할 수 잇다. 프로세서는 제 2 게임 화면을 게임 화면 분석 모델을 이 용하여 연산하여, 텍스트를 검출할 수 있다. 프로세서는 게임 시작 버튼의 텍스트가 \"GAME START\"가 아닌 \"GAM ART\"임을 검출할 수 있다. 프로세서는 제 2 게임 화면에 포함된 오타, 잘못 배치된 게임 오브젝 트, NPC의 이상 패턴 행동, 플레이어 캐릭터의 이상 패턴 행동 등과 같이 개발자의 기획 의도와 다르게 출력되 는 요소를 검출할 수 있다. 전술한 게임 테스트 방법에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제 한되지 않는다. 도 7은 본 개시의 일 실시예에 따라 화면 분석 방법을 제공하기 위한 순서도이다. 컴퓨팅 장치는 게임 오브젝트가 포함된 게임 화면을 수신할 수 있다. 게임 오브젝트는, 캐릭터, 게임 내에서 캐릭터와 상호작용할 수 있는 요소, 게임 화면 내 사용자 인터페이스 또는 텍스트 중 적어도 하나를 포 함할 수 있다. 컴퓨팅 장치는 상기 게임 화면을 사전 학습된 게임 화면 분석 모델에 입력시킬 수 있다. 게임 화면은 게임이 진행되는 동안 수집된 스크린샷 및/또는 게임이 진행되는 동안 수집된 영상을 포함할 수 있다. 게임 화면 분석 모델은, 입력된 상기 게임 화면을 차원 축소 레이어를 이용하여 연산하여 상기 게임 화면의 특 징을 추출하고, 그리고 상기 추출된 상기 게임 화면의 특징을 둘 이상의 병렬적인 분류 레이어에 기초하여 연산 하여 상기 둘 이상의 병렬적인 분류 레이어 각각에서 상이한 게임 속성을 출력할 수 있다. 둘 이상의 병렬적인 분류 레이어는, 게임 장르 분류 레이어, 게임 상태 분류 레이어 또는 게임 오브젝트 식별 레이어 중 적어도 하 나를 포함할 수 있다. 컴퓨팅 장치는 상기 게임 화면 분석 모델의 연산 결과에 기초하여 상기 게임 화면에 대한 적어도 하나의 게임 속성을 출력할 수 있다. 게임 속성은, 게임 장르, 게임 상태 또는 게임 오브젝트 정보 중 적어도 하 나를 포함할 수 있다. 게임 장르는 게임이 어떤 카테고리의 게임인지에 관한 정보일 수 있다. 게임 상태는 게임 화면에 나타난 상황에 관한 분류 정보일 수 있다. 게임 오브젝트 정보는 게임 화면에 포함된 게임 오브젝트에 대한 분류 정보 또는 위치 정보 중 적어도 하나를 포함할 수 있다. 컴퓨팅 장치는 둘 이상의 게임 화면에 고정적으로 존재하는 게임 오브젝트를 추출할 수 있다. 컴퓨팅 장치 는 상기 고정적으로 존재하는 게임 오브젝트에 대하여 라벨링하여 학습 데이터를 생성할 수 있다. 컴퓨팅 장치는 라벨링된 제 1 게임 오브젝트를 포함하는 게임 화면을 수신할 수 있다. 컴퓨팅 장치는 게임 화면에 포함된 제 2 게임 오브젝트와 상기 라벨링된 제 1 게임 오브젝트의 유사도에 기초하여 상기 제 2 게임 오브젝트를 라벨링하여 학습 데이터를 생성할 수 있다. 컴퓨팅 장치는 클라이언트 단말로부터 게임 검색을 위한 검색 요청을 수신할 수 있다. 컴퓨팅 장치는 상기 검색 요청에 기초하여 클라이언트가 검색하고자 하는 검색 게임 속성을 결정할 수 있 다. 검색 요청이 검색 요청 문장을 포함하는 경우, 컴퓨팅 장치는 상기 검색 요청 문장 및 상기 게임 속성에 기초한 키워드 각각을 전처리 모델을 이용하여 연산하여 검색 요청 벡터 및 게임 속성 벡터를 획득할 수 있다. 컴퓨팅 장치는 상기 검색 요청 벡터 및 상기 게임 속성 벡터의 유사도에 기초하여 상기 검색 게임 속성을 결정할 수 있다. 상기 검색 요청이 이미지를 포함하는 경우, 컴퓨팅 장치는 상기 검색 요청에 포함된 이미지를 상기 게임 화면 분석 모델을 이용하여 연산하여 상기 검색 요청에 기초한 검색 게임 속성을 획득할 수 있다. 컴퓨팅 장치는 게임 화면에 매칭된 하나 이상의 게임 속성과 상기 검색 게임 속성의 유사도에 기초하여 게 임 검색 결과를 생성할 수 있다. 컴퓨팅 장치는 상기 게임 화면에 매칭된 하나 이상의 게임 속성 중 상기 검색 게임 속성과의 매칭률에 기초하여, 검색 결과 게임 화면을 결정할 수 있다. 컴퓨팅 장치는 상기 검색 결과 게임 화면에 기초하여 게임 검색 결과를 생성할 수 있다. ㄴ 컴퓨팅 장치는 제 1 게임 화면 상태에서 액션을 수행하도록 하는 테스트 시나리오를 생성할 수 있다. 컴퓨 팅 장치는 상기 테스트 시나리오를 클라이언트 단말에 전송할 수 있다. 컴퓨팅 장치는 상기 클라이언 트 단말로부터 상기 테스트 시나리오에 기초하여 액션을 수행한 이후 획득한 제 2 게임 화면을 수신할 수 있다. 컴퓨팅 장치는 상기 제 2 게임 화면을 상기 게임 화면 분석 모델을 이용하여 연산하여 게임 속성을 출력할 수 있다. 컴퓨팅 장치는 상기 테스트 시나리오에 기초한 예상 게임 속성과 상기 제 2 게임 화면에 기초한 게임 속성을 비교하여 상기 액션의 성공 여부를 결정할 수 있다. 도 8은 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술되었 지만, 당업자라면 본 개시가 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구 현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드 헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있다. 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 비일시적 (non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴 퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또 는 기술로 구현되는 휘발성 및 비휘발성 매체, 비-일시적 매체, 이동식 및 비이동식 매체를 포함한다. 컴퓨터 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 기타 전송 메커니즘(transport mechanism)과 같은 피변조 데이터 신호 (modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현 하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호 의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴퓨터 판독가능 전송 매 체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외 선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)-이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음-, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비 휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시 적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화 된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결 을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화 된 환경에서, 컴퓨터에 대해 설명된 프 로그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예 시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a,b,g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네 트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비인 가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 매체는 자기 저장 장치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래 쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2021-0033748", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따라 화면 분석 방법을 제공하기 위한 동작을 수행하는 컴퓨팅 장치의 블록 구성 도이다. 도 2는 본 개시의 일 실시예에 따른 게임 화면을 설명하기 위한 예시도이다.도 3은 본 개시의 일 실시예에 따른 게임 화면을 설명하기 위한 예시도이다. 도 4는 본 개시의 일 실시예에 따른 게임 화면 분석 모델을 설명하기 위한 예시도이다. 도 5는 본 개시의 일 실시예에 따른 게임 검색 방법을 설명하기 위한 예시도이다. 도 6은 본 개시의 일 실시예에 따른 게임 테스트 방법을 설명하기 위한 예시도이다. 도 7은 본 개시의 일 실시예에 따라 화면 분석 방법을 제공하기 위한 순서도이다. 도 8은 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
