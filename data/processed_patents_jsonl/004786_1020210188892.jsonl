{"patent_id": "10-2021-0188892", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0099491", "출원번호": "10-2021-0188892", "발명의 명칭": "MLP를 활용한 AES 비밀키 획득 모델 생성 방법 및 MLP를 활용한 AES 비밀키 획득 방법", "출원인": "동서대학교 산학협력단", "발명자": "강영진"}}
{"patent_id": "10-2021-0188892", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "암호처리장치의 전력신호를 측정하는 정보추출단계;측정된 전력신호 중 암호처리 과정에 따라 측정된 전력신호 행렬(T)을 생성하는 단계;데이터 벡터(d)와 가능한 모든 비밀키 벡터(k)로 추정된 연산 값 행렬(V)를 생성하는 단계;상기 추정된 연산 값 행렬(V)에 해밍 거리 모델 또는 해밍 무게 모델을 적용하여 추정된 전력신호 행렬(H)로 변환하는 단계;상기 측정된 전력신호 행렬(T)과 추정된 전력신호 행렬(H)간의 상관계수를 계산하는 단계;상기 측정된 전력신호에 대한 상관계수를 MLP(Multi-Layered Perceptron)로 학습하여 모델을 생성하되, 하이퍼파라메터를 소정의 범위 내에서 변경하며 다수개의 모델을 생성하는 단계;상기 모델에 측정된 전력신호를 입력하여 추측키를 산출하는 단계; 및상기 다수개의 모델에 대해, 비밀키와 추측키의 테스트 정확도가 가장 높은 모델(이하, \"선정된 모델\"이라 함)을 선정하는 단계;를 포함하는, MLP를 활용한 AES 비밀키 획득 모델 생성 방법"}
{"patent_id": "10-2021-0188892", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1항의 MLP를 활용한 AES 비밀키 획득 모델 생성 방법을 사용하여 생성된 모델을 이용하는 MLP를 활용한AES 비밀키 획득 방법에 있어서,상기 선정된 모델에 AES 비밀키 획득을 위해 측정된 새로운 전력신호를 입력하여 추측키(결과값)를 산출하는 단계;를 포함하는, MLP를 활용한 AES 비밀키 획득 방법"}
{"patent_id": "10-2021-0188892", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1항의 MLP를 활용한 AES 비밀키 획득 모델 생성 방법 또는 청구항 2항의 MLP를 활용한 AES 비밀키 획득방법을 실행시키기 위하여 컴퓨터로 판독가능한 기록매체에 저장된, 컴퓨터로 읽을 수 있는 기록매체에 기록된컴퓨터프로그램"}
{"patent_id": "10-2021-0188892", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1항의 MLP를 활용한 AES 비밀키 획득 모델 생성 방법 또는 청구항 2항의 MLP를 활용한 AES 비밀키 획득방법을 실행시키는, MLP를 활용한 AES 비밀키 획득 장치"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 MLP(Multi-Layered Perceptron)를 활용한 AES(Advanced Encryption Standard) 비밀키 획득방법에 관 한 것으로, 더 상세하게는 다층 퍼셉트론을 이용한 전력분석을 통해 AES의 비밀키를 획득하는 방법, 프로그램 및 장치에 관한 것이다. (뒷면에 계속)"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 MLP(Multi-Layered Perceptron)를 활용한 AES(Advanced Encryption Standard) 비밀키 획득방법에 관 한 것으로, 더 상세하게는 다층 퍼셉트론을 이용한 전력분석을 통해 AES의 비밀키를 획득하는 방법, 프로그램 및 장치에 관한 것이다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대칭키 암호는 송·수신자 모두 동일한 비밀키에 의하여 암호화 및 복호화 과정을 수행하여 구조가 간단하고, 암·복호화 속도가 빠르다. 하지만 다수의 사용자가 자료를 공유할 경우 암호화에 사용하는 비밀키를 모든 사용 자에게 안전하게 공유해야 하는 문제가 있다. 대칭키 암호는 한 번에 암호화 하는 크기에 따라서 블록 암호 (Block Cipher)와 스트림 암호(Stream cipher)로 구분한다. 블록 암호는 라운드 함수를 적용하는 방법에 따라 나눌 수 있으며, 종류는 크게 SPN(Substitution Permutation Network) 방식과 파이스텔(Feistel) 구조로 나뉜다. SPN 구조는 입력을 여러 개의 작은 블록으로 나누어 S-박스 와 P-박스를 통해 전치하는 과정을 반복한다. 블록 암호의 대표적인 암호 알고리즘은 2001년 미국 표준 기술 연구소(NIST)에서 표준 암호로 채택된 AES가 있 다. AES는 데이터 블록을 절반으로 나누어 절반만 수정하고 교환하는 파이스텔 구조를 사용하지 않고 각 라운드에서 대체(substitution)와 치환(permutation)을 사용하여 데이터 전체를 병렬 연산한다. AES 연산은 128비트의 데이 터 블록을 입력받아 바이트 대체(Substitute bytes), 행 이동(Shift rows), 열 섞기(Mix columns), 라운드 키 더하기(Add Round Key) 단계를 반복하여 보안성을 향상시킨다. 암호 알고리즘의 안전성은 수학과 통계를 근거로 증명한다. 지금까지 AES 암호 알고리즘으로 암호화된 암호문을 비밀키 없이 평문으로 변환하기 위해서는 무차별 대입 공격이 유일한 방법이다. 만약 AES 암호 알고리즘을 256 비트 비밀키로 암호화된 암호문을 초당 100경( )번의 무차별 대입 공격이 가능한 슈퍼컴퓨터로 평문으로 해독 하려면 이론적으로 3000극( )년이 필요하다. 따라서 현존하는 컴퓨터 성능으로는 비밀키 없이 암호문을 해 독할 수 없다고 정의한다. AES는 비밀키를 찾는 것이 매우 어렵다. 그러나 암호 알고리즘은 하드웨어를 통해 구현되기에 물리적으로 미세 하게 다른 온도, 연산 시간, 소비 전력, 전자기파, 소리 등의 누설 정보가 발생한다. 즉, 암호 누설 정보를 수 집하고 분석하는 것으로 비밀키를 추측하는 부채널 공격이 가능하다. 부채널 공격은 아래와 같이 분류할 수 있 다. 소요시간 분석(Timing Attack) - 다양한 계산을 하는 데 소요되는 시간을 측정하는 것을 기반으로 하는 공격이 다. 전력분석 공격(Power Analysis) - 연산중에 하드웨어가 소비하고 있는 전력 변화를 측정하는 것을 기반으로 하 는 공격이다. 전자기파 공격(Electromagnetic Attacks) - 하드웨어 외부로 방출하는 전자기파를 해독하여 평문 및 여러 정보 를 얻어낼 수 있는 공격이다. 음성암호 해독(Acoustic Cryptanalysis) - 연산중에 하드웨어가 생성한 음향을 측정하여 이를 악용하는 공격이 다(전력 분석과 비슷하다). 차분오류 분석(Differential Fault Analysis) - 계산 과정에 의도적으로 오류를 끼어 넣어 암호를 발견하는 공 격이다. 잔존 데이터(Data Remanence) - 삭제된 것으로 추정된 민감한 데이터를 읽는 공격이다. 로우 해머 공격(Row Hammer) - 인접한 메모리 영역에 엑세스하는 형태로 접근 금지된 메모리 영역을 수정하는 공격이다. 부채널 공격 중 가장 대표적인 공격 방법은 전력 분석 공격이다. 특히 1998년 Paul Kocher에 의해 DES가 공격을 계기로 현대 암호시스템을 위협하는 가장 강력한 공격 수단으로 연구됐으며 AES, RSA, ECC 등 거의 모든 암호 알고리즘에 취약점 분석으로 활용되고 있다. 전력분석공격은 차분전력분석과 상관전력분석으로 구분된다. 두 공격의 공통점은 암호 알고리즘의 소비전력을 사용하는 것이며, 차이점은 비밀키를 추측하는 방법이 다른 것이다. 전력 분석 공격의 원리는 도 1에서 보는 바 와 같이 알고리즘 진행 중에 수학식 1처럼 임의의 특정시점( )에서 평문( )과 비공개된 비밀키( )을 배타적 논 리합으로 연산하여 암호문( )을 계산한다. 수학식 1"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "만약 공격자가 암호 알고리즘을 가지고 있는 경우 암호학 관점에서 임의로 선택 가능한 는 알 수 있지만, 암호 연산이 진행되는 중간에 발생하는 와 는 알 수 없다. 그러나 공격자는 연산이 발생하는 시점을 알고 있다고 가정하고 있기에 가 계산되는 순간 소비되는 전력량은 오실로스코프를 사용하여 측정된 전력신호( )를 수집할 수 있다. 는 이 연산하는 행위에서 비롯된 흔적이기에 매우 높은 상관도를 가지게 된다. 따라서 전력분석공격은 선정 된 특정시점( )에서 와 의 높은 상관도를 근거로 와 로 치환하여 역산이 가능하다. 국내등록특허 제10-1876498호에는 \"마스킹 대응책을 무력화하는 암호 해독 장치 및 방법, 이를 기록한 기록매체\"가 개시되어 있으며, 상기 특허문헌에 기재된 바와 같이 전력분석공격을 통해 비밀키를 산출하는 것이 공지기술로 공개되어 있다. 다만, 전술한 바와 같은 종래 전력분석공격에 따른 비밀키 산출 방법은, 비밀키 산출을 위해 수많은 데이터를 취득하고, 각각의 데이터들에 대해 피어슨 상관계수를 산출하는 등의 과정으로 인해 시간 소요가 매우 크다는 한계점이 있었다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는, 전술한 바와 같은 종래 전력분석에 따른 비밀키 산출 방법의 한계점을 개선 하기 위하여, 비밀키 산출에 소요되는 시간을 현저하게 절감시킬 수 있도록 다층 퍼셉트론 학습 모델을 활용하 는, MLP를 활용한 AES 비밀키 획득방법을 제공하는 것이다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은 전술한 바와 같은 전력분석에 따른 비밀키 산출 방법의 한계점을 개선하기 위하여, 암호처리장치의 전력신호를 측정하는 정보추출단계; 측정된 전력신호 중 암호처리 과정에 따라 측정된 전력신호 행렬(T)을 생성 하는 단계; 데이터 벡터(d)와 가능한 모든 비밀키 벡터(k)로 추정된 연산 값 행렬(V)를 생성하는 단계; 상기 추 정된 연산 값 행렬(V)에 해밍 거리 모델 또는 해밍 무게 모델을 적용하여 추정된 전력신호 행렬(H)로 변환하는 단계; 상기 측정된 전력신호 행렬(T)과 추정된 전력신호 행렬(H)간의 상관계수를 계산하는 단계; 상기 측정된 전력신호에 대한 상관계수를 MLP(Multi-Layered Perceptron)로 학습하여 모델을 생성하되, 하이퍼파라메터를 소 정의 범위 내에서 변경하며 다수개의 모델을 생성하는 단계; 상기 모델에 측정된 전력신호를 입력하여 추측키를 산출하는 단계; 및 상기 다수개의 모델에 대해, 비밀키와 추측키의 테스트 정확도가 가장 높은 모델(이하, \"선 정된 모델\"이라 함)을 선정하는 단계;를 포함하는, MLP를 활용한 AES 비밀키 획득 모델 생성 방법을 제공한다. 상기 모델을 생성하는 단계는, 별도의 전처리를 진행하지 않고 수행될 수 있다. 또한, 상기 MLP를 활용한 AES 비밀키 획득 모델 생성 방법을 사용하여 생성된 모델을 이용하는 MLP를 활용한 AES 비밀키 획득 방법에 있어서, 상기 선정된 모델에 AES 비밀키 획득을 위해 측정된 새로운 전력신호를 입력하 여 추측키(결과값)를 산출하는 단계;를 포함하는, MLP를 활용한 AES 비밀키 획득 방법을 제공한다. 그리고, 상기 MLP를 활용한 AES 비밀키 획득 모델 생성 방법 또는 상기 MLP를 활용한 AES 비밀키 획득 방법을 실행시키기 위하여 컴퓨터로 판독가능한 기록매체에 저장된, 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터 프로그램을 제공한다. 아울러, 상기 MLP를 활용한 AES 비밀키 획득 모델 생성 방법 또는 상기 MLP를 활용한 AES 비밀키 획득 방법을 실행시키는, MLP를 활용한 AES 비밀키 획득 장치를 제공한다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따르면, 전력분석에 따른 비밀키 산출 방법에 비해 비밀키 산출에 소요되는 시간을 현저하 게 절감시킬 수 있다. 또한, 비밀키 산출에 적합한 최적의 인공지능 모델을 도출할 수 있다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 문서에 기재된 기술을 특 정한 실시 형태에 대해 한정하려는 것이 아니며, 본 문서의 실시예의 다양한 변경(modifications), 균등물 (equivalents), 및/또는 대체물(alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 본 문서에서, \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등 의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 문서에서 사용된 용어들은 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 다른 실시 예의 범위를 한 정하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 문서에 사용된 용어 들 중 일반적인 사전에 정의된 용어들은, 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시 예들을 배제하도록 해석될 수 없다."}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명의 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야에서 통상의 지 식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다. 또한, 본 발명에 따르는 방법은 컴퓨터로 읽을 수 있는 기록 매체에 컴퓨터가 읽을 수 있는 코드(프로그램)로서 구현하는 것이 가능하다. 컴퓨터가 읽을 수 있는 기록 매체는 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록 장치를 포함할 수 있다. 컴퓨터가 읽을 수 있는 기록 매체의 예로는 ROM, RAM, CD- ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있으며, 또한 캐리어 웨이브(예를 들어 인터넷을 통한 전송)의 형태로 구현되는 것도 포함한다. 또한 컴퓨터가 읽을 수 있는 기록 매체는 네트워크로 연결된 분 산 컴퓨터 시스템에 의하여 분산 방식으로 실행될 수 있는 컴퓨터가 읽을 수 있는 코드를 저장할 수 있다. 1. 상관전력분석공격 전력분석공격은 크게 단순전력분석(Simple Power Analysis), 차분전력분석(DPA; Differential Power Analysis) 그리고 상관전력분석(Correlation Power Analysis) 으로 나눌 수 있다.단순전력분석은 하나의 측정된 소비 전력 신호의 패턴을 분석하여 비밀 정보를 알아내는 공격 방법이다. 하지만 각 연산에 대한 노이즈가 없는 파형정보를 얻기도 힘들고, 현재 이 공격방법에 대한 많은 대응기법들이 전자 장 비에 포함이 되므로 실제로 적용하기는 쉽지 않다. 따라서 단순전력분석은 주로 차분전력분석공격을 용이하게 하거나 키의 후보군을 줄여 공격확률을 높이는 역할을 하고 있다. 차분전력분석은 단순전력분석이 단순히 소비 전력을 관찰하는 것에 더하여 데이터 값과 전력소비패턴과의 상호 연관성을 이용하는 통계적인 방법이다. 입력 데이터 값 \"0\"과 \"1\"이 다른 전력 소비 패턴을 가진다는 것에 기초 하여 \"0\"과 \"1\"의 전력소비 패턴의 차이를 통해서 비밀키를 획득하는 것이다. 암호 알고리즘은 암호 연산의 취약성을 이용하는 것으로, 공격자는 암호 알고리즘이 어떤 암호연산을 사용하는 지 알아야 한다. 즉, 알고리즘에서 사용되는 암호 연산의 전력소비패턴이 데이터 값과 상호연관성을 가지는지를 분석함으로써 DPA를 수행할 수 있다. 상관전력분석은 전력 파형에서 각 포인트들이 가지고 있는 상관관계에 주목하며, 공격비트를 추측하여 얻은 중 간 결과 값을 디바이스의 전력 소비 모델에 따라 변환한 후, 이것과 실제 디바이스로부터 얻은 소비 전력과의 상관관계를 계산하는 공격 방법이다. 공격단계는 아래와 같이 나타낼 수 있다. 1) 공격시점의 알고리즘 연산 값 선정 암호장치에서 실행된 알고리즘을 분석하여 공격 시점과 공격 시점의 연산 값 를 선정한다. 여기서 는 공격 시점에 실행되는 암호 알고리즘의 연산이고, 는 알고리즘에서 연산이 실행될 때마다 달 라지는 데이터 값으로 평문·암호문에 해당하고, 는 비밀키이다. 선정된 시점(특정한 시점)에 실행된 연산 값 을 분석하여 공격하게 된다. 2) 알고리즘 실행 중 전력신호 측정 개의 서로 다른 데이터 블록()을 암호·복호화 하는 동안에 보안 장치의 전력신호를 측정한다. 개의 데이터 블록()을 벡터로 표시하면 수학식 2와 같다. 수학식 2"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서 는 번째 암호·복호화 하는 데이터 블록 값이다. 번째 데이터 블록()을 암호·복호화 하는 동안에 측정된 전력신호를 벡터로 표시하면 수학식 3과 같으며, 여기서 는 전력신호의 길이(length)이다. 수학식 3"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 4, "content": "도 2 는 전력신호 행렬()이다. 개의 데이터 블록 각각에 대해서 전력신호를 측정하므로, 측정된 전력신호 행렬()는 의 크기를 갖게 된다. 측정된 전력신호들이 공격 시점에서 일치하도록 시간적으로 정렬되어 야 전력분석공격이 가능하다.전력신호 행렬()의 번째의 열벡터 가 암·복호화 알고리즘에서 동일한 연산을 실행한 시점으로 일치하도 록, 오실로스코프의 트리거 신호를 이용하여 측정하거나, 측정한 후에 전력신호를 시간적으로 정렬한다. 3) 가능한 비밀키에 대한 연산 값 추정 가능한 모든 비밀키()에 대하여 공격 시점의 연산 값을 추정한다. 가능한 비밀키를 벡터로 표시하면 수학식 4 와 같으며, 수학식 4"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서 는 가능한 비밀키()의 개수로, 8비트 비밀키이면 는 256이다. 데이터 벡터 와 가능한 비밀키 벡터 를 이용하여 개의 데이터 블록과 개의 가능한 비밀키에 대한 추정된 연산 값 를 구할 수 있다. 추정된 연산 값 행렬 의 크기는 이고, 행렬 의 요소 는 수학식 5와 같으며, 도 3은 가 능한 비밀키에 의해서 추정된 연산 값 행렬()을 보여준다. 수학식 5"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "4) 추정된 연산 값을 추정 전력신호 값으로 변환 추정 연산 값 행렬()을 추정 전력신호 값 행렬()로 변환한다. 해밍 거리 모델이나 해밍 무게 모델을 이 용하여 행렬 를 행렬 로 변환한다. 해밍 무게 모델은 공격시점에서 암호 알고리즘 연산 후의 값에서 1의 개수를 의 값으로 한다. 도 4는 추정된 전력신호 행렬()이다. 5) 측정된 전력신호와 추정된 전력신호 분석 측정된 전력신호의 행렬()의 번째 열벡터 와 추정된 전력신호 행렬()의 번째 열 벡터 와 상관계 수를 계산한다. 상관계수 행렬 의 크기는 이며, 행렬 의 요소 는 와 의 상관계수 값이다. 도 5 는 측정된 전력신호와 추정된 전력신호 간의 상관관계를 나타낸 것이다. 는 와 의 상관관계가 클 수록 높은 값을 갖는다. 공격 시점에서의 전력신호인 는 보안장치에서 실제로 사용한 비밀키()로 추정한 전력신호 와 매우 높은 상관관계를 가지므로, 가장 큰 값을 가지는 는 와 의 상관관계를 나타내 는 이고, 이때 가 찾고자하는 비밀키이다. 수학식 6을 이용하여 추정된 전력신호와 측정된 전력신호 간의 상관계수를 계산한다.수학식 6"}
{"patent_id": "10-2021-0188892", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "여기서 는 행렬의 번째 열의 요소이고, 는 행렬의 번째 열의 평균값이다. 는 행렬의 번째 열의 요소이고, 는 행렬의 번째 열의 평균값이다. 하나의 예로 만약 AES-128 알고리즘에 상관전력분석을 시도하였을 경우 옳은 키로 계산한 중간값은 실제 전력과 상관관계가 발생할 것이므로 상관계수의 절댓값이 1에 가까워질 것이다. 반면 옳지 못한 키로 계산한 중간값은 실제 전력과 상관관계가 없으므로 상관계수의 절대값이 0에 가까워진다. 이를 참조할 수 있는 것으로 피어슨 상관계수를 예로 들 수 있다. 후술하는 실험에서는 상관계수 값이 0.498604 로 산출되었을 때, 사용한 키를 정확하게 유추하였다. 2. 실험환경 및 구성 다층 퍼셉트론을 활용한 전력분석 실험을 위해서는 기존의 전력분석 실험과 동일하게 소비전력을 측정해 파형을 수집해야한다. 도 6과 표 1는 각각 전력파형 수집을 위한 전체 구성도 및 실험장비 규격이다. 표 1 구분 시스템 사양 운영SW 및 시험도구 내용 컴퓨터 CPU : AMD Ryzen7 1700x 8 코어 프로세서 RAM : 16GB 운영체제 : 윈도우10Matlab 2015, Matlab Toolbox (전력신 호 분석), 아두이노아두이노 프로그래밍을 통해 대상 보드에 알고리즘 탑재 후 Matlab을 이용하여 전력신호 수집 및 분석 대상 보드 Arduino-Uno 보드, ATmega328 IC칩아두이노 컴퓨터와의 연결을 통해 알고 리즘을 탑재하고 데이터를 주 고받을 수 있는 환경을 셋업 오실로스코프제조사 : Tektronix 모델명 : DPO4032 대여폭 : 350MHz 샘플링 : 2.5GS/S 채널 : 2chOpen Choice Desktop, Differential Probes차동 프로브를 대상 보드에 연 결 후 소모전력 수집, Open Choice Desktop을 사용하여 측정한 데이터를 저장 삽입 된 저항33옴 해당 없음 소모 전력을 수집하기 위해서 는 GND에 저항을 삽입해야만 측정을 할 수가 있다. (삽입 된 저항은 대상 보드가 문제없 이 작동하는 범위 내에서 선정 하여 삽입) 전원부 입력전원 : 220v AC전원해당 없음 해당 없음 공격시점은 AES-128 알고리즘의 AddRoundKey 연산이 되는 시점으로 지정하고 총 1,000개의 전력파형을 수집하였 다. 다음으로 딥러닝 네트워크 구현을 위해 TensorFlow \"1.15.0\"과 Keras \"2.3.1\", Python \"3.7.6. final.0\"버전을 이용하였다. 2.1 하이퍼파라미터 최적화 하이퍼파라미터 최적화(Hyperparameter Optimization)는 학습을 수행하기 위해 사전에 설정해야 하는 값인 최적 값을 탐색하는 것을 의미한다. 여기서 최적값이란, 학습이 완료된 딥러닝 모델의 일반화 성능을 최고 수준으로 발휘하도록 하는 것을 의미하며, 대표적인 하이퍼파라미터 예시로는 학습률(Learning Rate), 배치 사이즈(Batch Size), 정규화 (Regularization), 에폭(Epoch), 드롭아웃(Dropout), 활성화 함수(Activation Function), 은닉층의 개수 또는 노드 개수 등이 있다. 본 발명에서는 드롭아웃, 배치정규화, Optimize, 은닉층의 개수 및 에폭 위주로 하이퍼파라미터를 변경하며 실 험하였다. 3. 실험결과 분석 드롭아웃과 배치 정규화는 학습모델 구성에 있어서 중요한 요소이다. 물론 두 가지의 방법을 동시에 사용하는 것은 경우에 따라 효과 등의 차이가 있으므로 실험을 통해 결과를 확인 후 판단할 필요성이 있다. 본 실험에서는 두 기법을 사용하였을 시 상호보완관계가 되는 것을 확인하였기에 두 기법을 같이 사용하여 모델 을 구성하였으며, 각각의 실험에 최적화 된 결과를 기준으로 다음 하이퍼 파라미터를 수정하여 문제를 찾고 분 석하였다. 마지막으로 최적화 된 구성을 통해 옳은 키와 틀린 키의 정확도를 분석하고자 한다. 도 7 은 올바른 키에서의 실험결과를 나타낸 도면이다. 이 경우 학습 정확도는 83%로, 테스트 정확도는 85%로 산출되었다. 즉, 정답이 있는 문제를 83%만큼 잘 학습하였으며, 테스트 셋으로 빼놓은 데이터를 통해 학 습 시켰을 때는 85%의 높은 정확도가 나타났다. 도 8 은 잘못된 키에서의 실험결과를 나타낸 도면이다. 임의의 틀린 키를 입력하여 확인한 결과이며, 학습 정확도는 64%로, 검증 정확도는 약 35%로 산출되었다. 즉, 주어진 정답에 대해 학습이 제대로 이루어지지 않음 을 확인할 수 있고, 테스트 정확도도 33%로 매우 낮은 수치를 기록하고 있다. 도 9 는 잘못된 키에서의 실험결과를 나타낸 도면이다. 학습 정확도는 52%로, 검증 정확도는 2%로 산출되 었다. 테스트 정확도 또한 2%로, 반복된 실험을 통해 만든 학습 모델은 올바른 키와 잘못된 키를 정확하게 구분 하는 것을 알 수 있었다. 하이퍼파라미터 값들을 수정하면서 반복한 실험들의 테스트 정확도와 테스트 손실값을 아래 표 2에 표기하였다. 표 2 구분 테스트 정확도 테스트 손실값 실험 case 10.27083 2.00842 0.52083 1.56983 실험 case 20.64583 0.75173 0.66666 1.13971 0.75 0.58118 실험 case 30.41666 2.29583 0.14563 4.57843 0.66666 0.91227 0.77083 0.66743 0.85416 0.42939 실험결과 0.85745 (올바른 키) 0.41344 0.33333 (잘못된 키 100) 1.49901 0.02083 (잘못된 키 150) 11.172844. 데이터 전처리 실험결과 분석 3절에서 최적화 된 Case3.3을 기준으로 4가지의 전처리 기법을 적용하여 실험 결과를 분석하였다. 3절 부분에서 Case3.3을 어떻게 최적화한 것인지 내용이 없습니다. 상기 '3. 실험결과 분석'에서 최적화 된 실시 예를 기준으로 4가지의 전처리 기법을 적용하여 실험결과를 다시 분석하였다. 그러나, 전처리를 적용하기 전의 실험 결과와 전처리를 적용한 실험결과를 비교한 결과 큰 차이가 없다는 것을 확인할 수 있었다. 상기 '3. 실험결과 분석'에서 최적화 된 실시 예를 기준으로 학습률의 값을 조정하여 실험결과를 다시 분석하였 다. 학습률에 따라서 전역 최적값(global minimum)이나 지역 최적값(local minimum)에 도달하게 되기 때문이다. 학습률을 너무 크게 설정할 경우 최적화 된 값을 지나쳐 학습이 이루어지지 않고 오류가 발생하며, 이를 오버 슈팅(overshooting)이라한다. 반대로, 너무 작게 설정할 경우 학습의 성능이 떨어지거나 지역 최적값에 빠져 최 적화 된 값을 찾기도 전에 학습이 끝날 수 있다. 본 발명의 실시 예에 따른 실험들에서는 하이퍼파라미터들을 수정하면서 오버피팅과 언더피팅이 반복되었지만, 최적화된 실시 예에서는 그나마 최적화 된 결과가 나타났다. 도 10 및 도 11 은 학습률의 값을 기존 0.001에서 각각 0.0001과 0.00001로 조정하며 실험한 실험결과(데이터 전처리를 하지 않은 원시 데이터를 학습시켜 얻은 결과)를 나타낸 도면이다. 학습률이 0.00001인 경우에는 이전의 실험결과와는 다르게 학습의 정확도와 검증의 정확도의 피팅이 아주 잘되 어 있으며, 최적화 된 값을 지나치지도 않고 최적화 된 값을 찾기도 전에 학습이 종료되지도 않으면서 좋은 결 과를 보이는 것을 확인할 수 있다. 이 결과의 학습 정확도는 96%이며, 테스트 정확도 또한 91%로 이전의 실험결 과들과는 확연한 차이를 보이는 것을 확인할 수 있었다. 위의 실험은 올바른 키를 기준으로 진행되었으며, 비교를 위하여 잘못된 키에서도 다시 실험하였다. 이에 따른 실험 결과가 도 12에 도시되어 있다. 잘못된 키에서의 실험결과는 한눈에 봐도 제대로 학습이 되지 않고 과학습이 일어나며 많은 문제가 있는 것을 알 수 있다. 마지막으로 최적화된 실시 예에서 전처리를 적용했을 때의 실험결과를 도 13에 도시하였다. 실험결과에서는 오히려 전처리를 하지 않은 다층 퍼셉트론의 신경망 구성에서의 결과들이 아주 좋은 것을 확인 할 수 있다. 물론 전체적으로 학습의 정확도 부분은 전처리를 진행하여 실험한 결과들에서 더 좋지만, 비밀키 획득에 있어서 학습의 정확도는 크게 중요하지 않다. 다만, 학습 정확도와 비례해서 테스트와 검증의 정확도, 손실값에 기반하여 제대로 학습이 되었는가를 분석해야 하기 때문에, 위의 결과들을 통해 학습의 정확도는 높지만 과학습과 과소적합이 진행되어 제대로 학습이 이루어 지지 않았음을 판단할 수 있다. 이를 통해 다층 퍼셉트론에서 시계열 기반의 전력파형 데이터는 전처리로 인한 보정이 마이너스 요인이 되어 학 습의 결과를 떨어트린다고 할 수 있다. 아래 표 3은 데이터 전처리 종류와 학습률에 따른 실험결과를 나타낸 것이다. 표 3 구분 테스트 정확도 테스트 손실값 MinMaxScaler (학습률 : 0.001)0.54166 1.92891 MinMaxScaler (학습률 : 0.00001)0.72916 0.65489 StandardScaler (학습률 : 0.001)0.79166 1.23552 StandardScaler (학습률 : 0.00001)0.70833 0.82193 RobustScaler (학습률 : 0.001)0.8125 5.14344 RobustScaler (학습률 : 0.00001)0.79166 0.55301 Normalizer (학습률 : 0.001)0.3125 3.86978 Normalizer (학습률 : 0.00001)0.79166 0.80369 전처리 적용 : x (학습률 : 0.00001) 올바른 키0.91666 0.38160 전처리 적용 : x (학습률 : 0.00001) 잘못된 키0.45833 2.25150 4가지의 전처리 기법중 MinMaxScaler, Normalizer는 데이터 정규화를 통해 전처리를 하는 방식으로 (정규화하고 자 하는값 - 데이터 값들 중 최소값) / (데이터 값들 중 최대값 = 데이터 값들 중 최소값)를 통해 정규화를 진 행한다. StandardScaler, RobustScaler는 데이터 표준화를 통해 전처리를 하는 방식으로 (정규화하고자 하는 값 - 데이 터의 평균) / 데이터의 표준편차를 통해 표준화를 진행하게 된다. 데이터 정규화를 통해 전처리를 하고 실험한 결과는 데이터 표준화 방식에 비해 테스트 정확도가 많이 낮게 나 온 것을 알 수 있고, 데이터 정규화를 통해 실험한 결과는 전처리를 적용하지 않고 학습률 값을 조정한 실험의 결과보다는 낮은 수치를 가진다. 다층 퍼셉트론의 특성상 전체 데이터의 특징을 가지고 학습을 진행하기 때문에 전처리를 통해 데이터를 보정하 게 되면 전력파형의 데이터 특징이 평준화되면서 학습을 제대로 수행하지 못하게 되는 것을 알 수 있다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13"}
{"patent_id": "10-2021-0188892", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은 전력분석방법을 이용하여 비밀키를 취득하는 방법을 간단히 나타낸 개요도이다. 도 2 는 전력신호 행렬()을 나타낸 도면이다. 도 3 은 가능한 비밀키에 의해서 추정된 연산 값 행렬()을 나타낸 도면이다. 도 4는 추정된 전력신호 행렬()을 나타낸 도면이다. 도 5 는 측정된 전력신호와 추정된 전력신호 간의 상관관계를 나타낸 도면이다. 도 6 은 본 발명의 실시 예에 따라 전력파형을 수집하기 위한 실험 구성도를 나타낸 사진이다. 도 7 은 올바른 키에서의 실험결과를 나타낸 도면이다. 도 8 및 도 9 는 잘못된 키(각각 100 및 150)에서의 실험결과를 나타낸 도면이다. 도 10 및 도 11 은 학습률의 값을 기존 0.001에서 각각 0.0001과 0.00001로 조정하며 실험한 올바른 키에 서의 실험결과를 나타낸 도면이다. 도 12 는 학습률의 값을 기존 0.001에서 0.00001로 조정하여 실험한 잘못된 키에서의 실험결과를 나타낸 도면이다. 도 13 은 최적화된 실시 예( 및 학습률 0.00001)에서 전처리를 적용했을 때의 실험결과를 나타낸 도면이다."}
