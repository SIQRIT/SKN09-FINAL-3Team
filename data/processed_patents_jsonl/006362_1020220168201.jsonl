{"patent_id": "10-2022-0168201", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0083963", "출원번호": "10-2022-0168201", "발명의 명칭": "어휘 수준 측정 방법 및 시스템", "출원인": "미디어젠", "발명자": "홍연정"}}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "어휘 수준을 측정하는 시스템에 있어서,프로세서;및메모리를 포함하고,상기 프로세서는입력된 텍스트 상에서 사전에 등재된 단어를 의미하는 표제어를 추출하고, 추출된 표제어의 품사를 결정하며,추출된 표제어 및 품사에 기반 하여 상기 메모리 상에 저장된 사전(dictionary) DB 또는 외부 서버 상의 사전DB 상에서 단어에 대한 검색을 수행하고 검색 결과에 기반하여 입력된 텍스트 상의 단어의 의미를 결정하고, 상기 단어의 의미가 적어도 2개 이상임에 기반하여 단어 중의성 해소 모델을 이용하여 입력된 텍스트의 문맥을고려한 단어 의미를 결정하며, 결정된 단어 의미에 기반하여 인공지능 학습모델을 이용하여 사용자에게 표시할 예문 및 단어 수준을 결정하고,결정된 단어 수준을 이용하여 사용자의 종합 단어 수준을 결정하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,결정된 단어 수준은제 1 수준 내지 제 N 수준을 포함하고,상기 프로세서는상기 입력된 텍스트 상에서 상기 제 1 수준 내지 제 N 수준에 대응하는 단어의 수를 각각 결정하고,입력된 텍스트 상에서 추출된 표제어의 수에 기반하여 사전에 설정된 비율에 따른 제 1 값을 결정하고,상기 제 1 수준에 대응하는 단어의 수가 상기 제 1 값을 초과하면 사용자의 종합 단어 수준을 상기 제 1 수준으로 결정하고,상기 제 1 수준에 대응하는 단어의 수가 상기 제 1 값을 초과하지 않을 때 상기 제 1 수준 내지 제 N-1 수준에대응하는 총 단어의 수가 상기 제 1 값 미만이고, 상기 제 1 수준 내지 상기 제 N 수준에 대응하는 총 단어의수가 상기 제 1 값을 초과하면 사용자의 종합 단어 수준을 상기 제 N 수준으로 결정하며,상기 N은 2 이상의 자연수를 의미하는 시스템"}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는상기 제 1 수준에 대응하는 단어의 색 내지 상기 제 N 수준에 대응하는 단어의 색을 각각 다르게 지정하여 표시하고,공개특허 10-2024-0083963-3-상기 제 1 수준 내지 상기 제 N 수준에 대응하는 단어의 수의 비중을 그래프의 형태로 함께 표시하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 프로세서는 사전에 설정된 비율을 다르게 결정하여 사용자의 종합 단어 수준을 다르게 결정할 수 있으며,결정된 사용자의 종합 단어 수준에 기반하여 영어 학습과 관련된 콘텐츠를 추천하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 영어 학습과 관련된 콘텐츠는 추천 도서 또는 오디오북을 포함하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 프로세서는입력된 텍스트 상에서 추출된 표제어의 수에 기반하여 사전에 설정된 비율에 따른 제 2 값을 결정하고,입력된 텍스트 상에서 추출된 표제어의 단어 수준을 결정하고, 가장 하위 수준에 포함되는 단어들부터 시작하여상위 수준에 포함되는 단어들까지 번호를 부여하고, 상기 제 2 값에 대응하는 번호를 가진 단어가 포함되는 단어 수준을 사용자의 종합 단어 수준으로 결정하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 인공지능 학습모델은입력된 텍스트 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 및 하위어(hyponym)의 수에 기반하여 단어 수준을 결정하는 시스템."}
{"patent_id": "10-2022-0168201", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 단어 중의성 해소 모델은파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations fromtransformers) 기반의 WSD(word sense disambiguation)모델을 포함하며,상기 WSD 모델은 입력된 문장 내에서 목표 단어를 결정하고, 입력된 문장의 해석에 기반하여 목표 단어의 정의를 출력하는 시스템.공개특허 10-2024-0083963-4-"}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "어휘 수준을 측정하는 시스템은 프로세서 및 메모리를 포함할 수 있다. 프로세서는 입력된 텍스트 상에서 사전에 등재된 단어를 의미하는 표제어를 추출하고, 추출된 표제어의 품사를 결정하며,추출된 표제어 및 품사에 기반 하 여 메모리 상에 저장된 사전(dictionary) DB 또는 외부 서버 상의 사전 DB 상에서 단어에 대한 검색을 수행하고 검색 결과에 기반하여 입력된 텍스트 상의 단어의 의미를 결정하고, 단어의 의미가 적어도 2개 이상임에 기반하 여 단어 중의성 해소 모델을 이용하여 입력된 텍스트의 문맥을 고려한 단어 의미를 결정하며, 결정된 단어 의미 에 기반하여 인공지능 학습모델을 이용하여 사용자에게 표시할 예문 및 단어 수준을 결정하고, 결정된 단어 수준 을 이용하여 사용자의 종합 단어 수준을 결정할 수 있다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서는 예를 들어 사용자의 어휘(또는 단어) 수준을 측정하는 방법을 수행하는 시스템에 관한 것이다. 본 문 서는 인공지능 학습모델을 이용하여 사용자 입력에 따른 텍스트 상에서 어휘(또는 단어) 수준을 결정하고, 결정 된 어휘(또는 단어) 수준을 표시하는 방법에 관한 것이다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템이며, 기계가 스스로 학습하고 판단하는 시스템 이다. 인공지능 시스템은 사용할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기 존 규칙 기반 스마트 시스템은 점차 딥러닝 기반 인공지능 시스템으로 대체되고 있다. 인공지능 기술은 기계학 습(딥러닝) 및 기계학습을 활용한 요소 기술들로 구성된다. 기계학습은 입력 데이터들의 특징을 스스로 분류/학 습하는 알고리즘 기술이며, 요소기술은 딥러닝 등의 기계학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 기 능을 모사하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성 된다. NMT(Neural machine translation, 인공신경망 기계번역)는 머신러닝 기술이 적용된 엔진을 통해 전체 문장을 파 악한 다음 문장 내에 단어, 순서, 의미, 문맥에서의 의미차이 등을 반영하여 번역결과를 제공할 수 있는 번역기 술이다. 하지만, 기존의 NMT는 자원이 부족한 희귀 언어나 희귀 용어를 오역하거나, 문장 단위로 파악하여 문단 또는 문맥을 고려하지 않은 문장 번역 결과를 제공하는 문제점이 존재하여 번역 성능의 향상이 제한된다. 또한, 단어의 의미가 2개 이상 존재하는 다의어의 경우 기계적 번역의 어려움이 있다. 또한, 사용자의 입력 텍스트 상 에 다의어가 존재하는 경우 기계적으로 사용자의 어휘 수준을 결정하기 어려운 문제가 있다. 이러한 한계를 극복하기 위해 다의어를 포함하는 특정 단어 집단을 사전에 미리 분류해놓은 데이터(예: 구글 데 이터)를 이용할 수 있다. 그러나 이러한 방식을 이용하여도 사전 분류 데이터 상의 단어의 수가 제한적이므로, 해당 데이터 내에 존재하지 않는 단어가 사용자 입력 텍스트 상에 존재하는 경우 인공지능 학습모델을 통해 해 당 단어의 의미 또는 단어 수준을 분류하기 어려운 한계가 있다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 문서에 따른 어휘 수준 측정 방법 및 시스템은 기계 학습을 통해 문맥을 통해 다의어의 의미를 확정하고, 사 용자의 단어(또는 어휘) 수준을 결정하는 방법을 제공하고자 한다. 본 문서에 따른 어휘 수준 측정 방법 및 시스템은 사용자의 입력 텍스트 상에 사전 분류 데이터 상에는 존재하 지 않는 다의어가 포함된 경우에도 다의어의 의미를 확정하고, 사용자의 단어(또는 어휘) 수준을 결정하는 방법 을 제공하고자 한다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "어휘 수준을 측정하는 시스템은 프로세서 및 메모리를 포함할 수 있다. 프로세서는 입력된 텍스트 상에서 사전 에 등재된 단어를 의미하는 표제어를 추출하고, 추출된 표제어의 품사를 결정하며,추출된 표제어 및 품사에 기 반 하여 메모리 상에 저장된 사전(dictionary) DB 또는 외부 서버 상의 사전 DB 상에서 단어에 대한 검색을 수 행하고 검색 결과에 기반하여 입력된 텍스트 상의 단어의 의미를 결정하고, 단어의 의미가 적어도 2개 이상임에 기반하여 단어 중의성 해소 모델을 이용하여 입력된 텍스트의 문맥을 고려한 단어 의미를 결정하며, 결정된 단 어 의미에 기반하여 인공지능 학습모델을 이용하여 사용자에게 표시할 예문 및 단어 수준을 결정하고, 결정된 단어 수준을 이용하여 사용자의 종합 단어 수준을 결정할 수 있다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 문서에 따른 어휘 수준 측정 방법 및 시스템은 기계 학습을 통해 문맥을 통해 다의어의 의미를 확정하고, 사 용자의 단어(또는 어휘) 수준을 결정할 수 있다. 본 문서에 따른 어휘 수준 측정 방법 및 시스템은 사용자의 입력 텍스트 상에 사전 분류 데이터 상에는 존재하 지 않는 다의어가 포함된 경우에도 다의어의 의미를 확정하고, 사용자의 단어(또는 어휘) 수준을 결정할 수 있 다. 본 문서에 따른 어휘 수준 측정 방법 및 시스템은 입력된 텍스트에 존재하는 개별 어휘의 의미와 용례, 수준 및 다의어를 사용자에게 제공할 수 있다. 또한, 시스템은 입력된 텍스트의 종합 어휘 수준의 통계치를 시각화하여 사용자에게 제공할 수 있다."}
{"patent_id": "10-2022-0168201", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "실시예들은 퍼스널 컴퓨터, 랩톱 컴퓨터, 태블릿 컴퓨터, 스마트 폰, 텔레비전, 키오스크, 웨어러블 장치 등 다 양한 형태의 제품으로 구현될 수 있다. 인공지능(Artificial Intelligence, AI) 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템이며, 기존 규칙 (Rule) 기반의 스마트 시스템과 달리 기계가 스스로 학습하고 판단하는 시스템이다. 인공지능 시스템은 사용할 수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 규칙 기반의 스마트 시스템은 점차 심층 학습(Deep Learning) 기반 인공지능 시스템으로 대체되고 있다. 인공지능 기술은 기계 학습 및 기계 학습을 활용한 요소기술들로 구성된다. 기계 학습은 입력 데이터들의 특징 을 스스로 분류/학습하는 알고리즘 기술이며, 요소기술은 심층 학습 등의 기계 학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제 어 등의 기술 분야로 구성된다. 인공지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면이 해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술로 서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간의 경험정보를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주 행),조작 제어(행동 제어) 등을 포함한다.일반적으로 기계 학습 알고리즘을 실생활에 적용하기 위해서는 기계 학습의 기본 방법론의 특성상 Trial and Error 방식으로 학습을 수행하게 된다. 특히, 심층 학습의 경우 수십만 번의 반복 실행을 필요로 한다. 이를 실 제 물리적인 외부 환경에서 실행하기는 불가능하여 대신 실제 물리적인 외부 환경을 컴퓨터상에서 가상으로 구 현하여 시뮬레이션을 통해 학습을 수행한다. 본 발명에서, 인공지능(Artificial Intelligence, AI)은 인간의 학습능력, 추론능력, 지각능력 등을 모방하고, 이를 컴퓨터로 구현하는 기술을 의미하고, 기계 학습, 심볼릭 로직(Symbolic Logic) 등의 개념을 포함할 수 있 다. 기계 학습(Machine Learning, ML)은 입력 데이터들의 특징을 스스로 분류 또는 학습하는 알고리즘 기술이 다. 인공지능의 기술은 기계 학습의 알고리즘으로써 입력 데이터를 분석하고, 그 분석의 결과를 학습하며, 그 학습의 결과에 기초하여 판단이나 예측을 할 수 있다. 또한, 기계 학습의 알고리즘을 활용하여 인간 두뇌의 인 지, 판단 등의 기능을 모사하는 기술들 역시 인공지능의 범주로 이해될 수 있다. 예를 들어, 언어적 이해, 시각 적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야가 포함될 수 있다. 기계 학습은 데이터를 처리한 경험을 이용해 신경망 모델을 훈련시키는 처리를 의미할 수 있다. 기계 학습을 통 해 컴퓨터 소프트웨어는 스스로 데이터 처리 능력을 향상시키는 것을 의미할 수 있다. 신경망 모델은 데이터 사 이의 상관 관계를 모델링하여 구축된 것으로서, 그 상관 관계는 복수의 파라미터에 의해 표현될 수 있다. 신경 망 모델은 주어진 데이터로부터 특징들을 추출하고 분석하여 데이터 간의 상관 관계를 도출하는데, 이러한 과정 을 반복하여 신경망 모델의 파라미터를 최적화해 나가는 것이 기계 학습이라고 할 수 있다. 예를 들어, 신경 망 모델은 입출력 쌍으로 주어지는 데이터에 대하여, 입력과 출력 사이의 매핑(상관 관계)을 학습할 수 있다. 또는, 신경망 모델은 입력 데이터만 주어지는 경우에도 주어진 데이터 사이의 규칙성을 도출하여 그 관계를 학 습할 수도 있다. 인공지능 학습모델 또는 신경망 모델은 인간의 뇌 구조를 컴퓨터 상에서 구현하도록 설계될 수 있으며, 인간의 신경망의 뉴런(neuron)을 모의하며 가중치를 가지는 복수의 네트워크 노드들을 포함할 수 있다. 복수의 네트워 크 노드들은 뉴런이 시냅스(synapse)를 통하여 신호를 주고받는 뉴런의 시냅틱(synaptic) 활동을 모의하여, 서 로 간의 연결 관계를 가질 수 있다. 인공지능 학습모델에서 복수의 네트워크 노드들은 서로 다른 깊이의 레이어 에 위치하면서 컨볼루션(convolution) 연결 관계에 따라 데이터를 주고받을 수 있다. 인공지능 학습모델은, 예 를 들어, 인공 신경망 모델(Artificial Neural Network), 컨볼루션 신경망 모델(Convolution Neural Network: CNN) 등일 수 있다. 일 실시예로서, 인공지능 학습모델은, 지도학습(Supervised Learning), 비지도 학습 (Unsupervised Learning), 강화 학습(Reinforcement Learning) 등의 방식에 따라 기계 학습될 수 있다. 기계 학습을 수행하기 위한 기계 학습 알고리즘에는, 의사결정트리(Decision Tree), 베이지안 망(Bayesian Network), 서포트 벡터 머신(Support Vector Machine), 인공 신경망(Artificial Neural Network), 에이다부스 트(Ada- boost), 퍼셉트론(Perceptron), 유전자 프로그래밍(Genetic Programming), 군집화(Clustering) 등이 사용될 수 있다. 도 1은 일 실시예에 따른 시스템의 블록도이다. 일 실시예에 따른 시스템은 프로세서 및 메모리를 포함할 수 있으며, 도시된 구성 중 일부가 생 략 또는 치환 될 수도 있다. 일 실시예에 따른 시스템은 서버 또는 단말일 수 있다. 일 실시예에 따르면, 프로세서는 시스템의 각 구성 요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성으로써, 하나 이상의 프로세서들로 구성될 수 있다. 메모리는 상술한 방법과 관련된 정보를 저장 하거나 상술한 방법이 구현된 프로그램을 저장할 수 있다. 메모리는 휘발성 메모리 또는 비휘발성 메모리 일 수 있다. 메모리는 다양한 파일 데이터들을 저장할 수 있으며, 프로세서의 동작에 따라 저장된 파 일 데이터들은 업데이트 될 수 있다. 일 실시예에 따르면, 프로세서는 프로그램을 실행하고, 장치를 제어할 수 있다. 프로세서에 의 하여 실행되는 프로그램의 코드는 메모리에 저장될 수 있다. 프로세서의 동작들은 메모리에 저 장된 인스트럭션들을 로딩(loading)함으로써 수행될 수 있다. 시스템은 입출력 장치(도면 미 표시)를 통하 여 외부 장치(예를 들어, 퍼스널 컴퓨터 또는 네트워크)에 연결되고, 데이터를 교환할 수 있다. 일 실시예에 따르면, 프로세서가 시스템상에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한정됨 이 없을 것이나, 이하에서는 사용자 입력에 따른 텍스트 상에서 단어(또는 어휘) 수준을 측정하는 기능에 대해 설명될 것이다.도 2a는 단어를 검색하여 중의성을 해소하고, 단어의 문맥에 맞는 단어 수준을 결정하는 과정을 순서도로 나타 낸 것이다. 프로세서(예: 도 1의 프로세서)는 동작 210에서, 텍스트를 입력 받을 수 있다. 텍스트는 사용자에 의해 입 력된 문장 또는 단어를 의미할 수 있다. 프로세서는 동작 220에서, 입력 받은 텍스트에 대한 표제어를 추 출할 수 있다. 표제어는 사전에 등재된 단어 또는 사전 DB에 등록된 단어를 의미할 수 있다. 표제어는 사전 DB 에 따라 달라질 수 있으며, 인공지능 학습모델은 사전 DB를 입력으로 하여 표제어를 학습할 수 있다. 프로세서 는 사전 DB를 이용하여 인공지능 학습모델을 학습시켜 입력 받은 텍스트에 대한 표제어를 출력할 수 있다. 학습 대상이 되는 사전 DB의 수는 제한이 없기 때문에 학습할 수 있는 표제어의 수도 제한이 없다. 표제어는 품 사(예: 동사 원형, 명사 원형, 형용사 원형, 부사 원형)에 따라 형태가 달라질 수 있다. 품사는 명사(Noun), 동 사(Verb), 대명사(Pronoun), 전치사(Preposition), 부사(Adverb), 접속사(Conjunction), 전치사(Particle), 관 사(Article) 등을 포함할 수 있다. 프로세서는 표제어 추출을 위해 표제어 추출 모델을 이용할 수 있다. 일 실시예에서, 표제어 추출 모델은 오픈 소스 중 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 표제 어 추출 모델은 오픈 소스 기반 라이브러리를 이용하여 표제어를 추출(lemmatize)할 수 있다. 프로세서 는 동작 230에서, 추출된 단어(또는 표제어)의 품사를 찾을 수 있다. 프로세서는 추출된 단어(또는 표제어)의 품사를 찾기 위해 품사 태깅 모델을 이용할 수 있다. 일 실시예에서, 품사 태깅 모델은 오 픈 소스 중 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 품사 태깅 모델은 오픈 소스 기반 라이브러리를 이용하여 BERT 기반의 POS tagging 기능을 제공할 수 있다. POS는 Part Of Speech의 약자로 품사를 의미할 수 있다. 품사 태깅(POS tagging)은 각 단어에 품사를 붙이는 동작을 의미할 수 있다. 영어에 있 어서 품사는 명사(Noun), 동사(Verb), 대명사(Pronoun), 전치사(Preposition), 부사(Adverb), 접속사 (Conjunction), 전치사(Particle), 관사(Article) 등을 포함할 수 있다. 동작 210 내지 230에 대해서는 도 3에 서 상세히 설명될 것이다. 프로세서는 동작 240에서, 단어 및 품사를 이용하여 사전을 검색할 수 있다. 프로세서는 단어 사전 을 이용하여 단어의 검색 기능을 수행할 수 있다. 프로세서는 동작 250에서, 사전 검색 결과가 2개 이상인지 결정할 수 있다. 프로세서는 사전 검색 결과가 1개인 경우, 검색된 단어가 뜻이 여러 개인 다의 어가 아닌 것으로 결정할 수 있다. 프로세서는 사전 검색 결과가 1개인 경우, 동작 254에서 단어의 문맥에 맞는 의미, 예문 및 레벨을 확정시킬 수 있다. 프로세서는 사전 검색 결과가 2개 이상인 경우 동작 252에 서, 단어 중의성 해소 모델(예: WSD(word sense disambiguation) 모델)을 이용하여 단어의 중의성을 해소시킬 수 있다. 중의성 해소 모델(예: WSD 모델)은 사전 훈련 언어 모델(pre-trained language model) 중 하나를 의미할 수 있 다. 사전 훈련 언어 모델은 특정 자연어 처리(natural language processing, NLP)를 수행하기 위해 일정 규모 이상의 데이터 셋을 이용하여 훈련된 딥러닝 모델을 의미할 수 있다. 프로세서는 일정 규모 이상의 텍스트 를 중의성 해소 모델(예: WSD 모델)로 입력하여 특정 단어로부터 다음 순서에 배치될 단어를 예상하도록 사전에 훈련(pre-training)시킬 수 있다. 자연어 처리(NLP) 분야에서 사전 훈련의 주체는 사전 훈련된 워드 임베딩 및 사전 훈련된 언어모델로 구분할 수 있다. 워드 임베딩(Word Embedding)은 단어를 밀집 벡터(dense vector)로 표 현하는 방법을 의미한다. 하나의 단어는 워드 임베딩을 통해서 숫자로 이루어진 벡터로 표현될 수 있으며, 벡터 의 형태로 신경망에 입력될 수 있다. 사전 훈련된 워드 임베딩은 처음부터 데이터를 가지고 학습을 하는 것이 아니라 방대한 학습 데이터를 가지고 임베딩 알고리즘으로 이미 학습되어 있는 임베딩 벡터들을 가져와서 사용 하는 방법을 의미할 수 있다. 다만, 워드 임베딩은 하나의 단어에 대한 벡터값은 하나만 존재하기 때문에 의미 를 여러 개 갖는 다의어가 입력되는 경우 문맥을 고려해서 정확한 의미를 매핑하기 어려운 한계가 있다. 이러한 한계 극복을 위해 사전 훈련된 언어모델이 사용될 수 있다. 언어 모델(Language Model, LM)은 언어라는 현상을 모델링하고자 단어 시퀀스(또는 문장)에 확률을 할당(assign)하는 모델을 의미한다. 언어 모델은 가장 자연스러운 단어 시퀀스를 찾아내는 모델로서 이전 단어들이 주어졌을 때 다음 단어를 예측할 수 있다. 사전 훈 련된 언어모델은 정해진 임베딩 값을 사용하는 대신에 전체 문장을 보고 나서 각 단어의 임베딩을 결정할 수 있 다. 또는 언어 모델은 주어진 양쪽의 단어들로부터 가운데 비어있는 단어를 예측할 수도 있다. 이러한 유형의 사전 훈련 모델은 예를 들어, 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers)를 포함할 수 있다. BERT는 다양한 자연어 처리 분야에서 학습을 포함한 작업을 수행하는데 사용될 수 있다. BERT는 학습을 통해 주어진 양쪽의 단어들을 이용하여 가운데 비어있는 단 어를 예측할 수 있다. BERT 기반의 WSD 모델은 단어가 포함된 문장을 입력 받고, 목표 단어의 문맥에 가장 가까 운 정의를 출력하도록 훈련을 진행할 수 있다. 여기서 BERT 기반의 WSD 모델은 WSD에 알맞게 튜닝(fine-tuning) 된 BERT 모델을 의미한다. BERT 기반의 WSD 모델은 단어가 포함된 문장을 입력 받아, 목표로 하는 단어를 결정 하고, 문장을 해석하여 목표로 하는 단어의 정의를 문장 해석에 맞춰 결정할 수 있다. 프로세서는 단어의 중의성을 해소하고, 동작 254에서 단어의 문맥에 맞는 의미, 예문 및 레벨(또는 단어 수준)을 확정시킬 수 있다. 단어의 중의성을 해소하고, 단어의 의미, 예문 및 수준을 확정하는 과정에 대해서는 도 5 내지 도 7을 통해 설명될 것이다. 단어의 의미를 확정하는 동작은 중의적인 의미를 갖는 단어 상에서 문맥 에 맞춰 하나의 의미를 확정하는 동작을 의미한다. 단어의 예문을 확정하는 동작은 하나의 단어의 복수의 예문 들 중에서 단어의 확정된 의미에 기반하여 단어의 문맥적인 의미에 대응하는 하나의 예문을 확정하는 동작을 의 미한다. 일 실시예에 따르면, 단어의 수준은 텍스트 코퍼스(corpus) 내에서 단어의 빈도 수, 다의어의 수, 상위어 (hypernym)의 수 및 하위어(hyponym)의 수에 의해 결정될 수 있다. 코퍼스(corpus)는 말뭉치를 의미한다. 말뭉 치는 구조를 이루고 있는 텍스트의 집합을 의미한다. 말뭉치는 특정한 언어 영역 내에서 언어 규칙 발생의 검사 와 그 규칙의 정당성 입증에 사용될 수 있다. 상위어(hypernym)는 다의어 중에서 상위 개념을 지칭하는 단어를 의미할 수 있다. 하위어(hyponym)는 다의어 중에서 하위 개념을 지칭하는 단어를 의미할 수 있다. 예를 들어, 포도의 상위어는 과일이 될 수 있다. 반대로 과일의 하위어는 포도가 될 수 있다. 프로세서는 상위어 및 하위어를 이용하여 특정 단어가 가리키는 개념간의 관계를 정의할 수 있다. 단어의 수준은 사전에 설정된 기준 (예: CEFR, common european framework reference)에 따라 측정될 수 있다. CEFR은 유럽 언어에 공통으로 적용 되는 수준 측정 체계를 의미한다. CEFR은 일 예시일 뿐, 본 문서 상에서 단어의 수준을 결정하기 위해 사용되는 기준은 이것으로 한정되는 것은 아니다. 예를 들어, 프로세서는 단어의 수준을 결정하기 위해 ACTFL(american council on the teaching of foreign languages) 과 같은 지수를 이용할 수도 있다. 프로세서는 단어 수준 예측 모델을 사용하여 사전에 기재된 표제어마다 단어 수준을 예측하고 메모리 상에 기록할 수 있다. 예를 들어, CEFR 기준을 사용하는 경우 사용자의 단어 레벨은 6개(A1, A2, B1, B2, C1, C2)로 구성될 수 있다. A1은 가장 초급 수준, C2는 가장 고급 수준을 의미할 수 있다. 이하에서는 단어 수준을 결정하는 기준이 CEFR인 것으로 가정하고 설명하지만 단어 수준을 결정하는 기준은 이것으로 한정되는 것은 아 니다. 프로세서는 사용자로부터 입력된 텍스트 상의 단어로부터 특징을 추출할 수 있다. 단어의 특징은 텍 스트 코퍼스(corpus) 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 또는 하위어(hyponym)의 수 중 적어도 어느 하나를 포함할 수 있다. 프로세서는 단어 별로 추출된 특징을 입력 값으로 하고, CEFR 레 벨을 출력값으로 매핑하여 인공지능 학습모델을 훈련시킬 수 있다. 인공지능 학습모델은 random forest regression 모델을 의미할 수 있다. 출력 값으로 매핑되는 레벨은 단어의 수준을 평가하는 기준(예: CEFR) 따라 달라질 수 있다. CEFR은 일 예시일 뿐, 단어의 수준을 평가하는 기준은 이것으로 제한되는 것은 아니다. random forest regression 모델은 전체 특징(feature) 중 일부 특징들에 기반하여 트리(tree)를 형성하고, 다른 일부 특징들에 기반하여 다른 트리를 형성하며, 이런 방식으로 복수의 트리들을 만드는 방식을 사용할 수 있다. 하나 의 트리(tree)는 하나의 예측값을 내놓을 수 있다. random forest regression 모델은 여러 결정 트리들의 예측 값을 종합(ensemble)하여 가장 많이 등장한 예측값을 최종 예측값으로 결정할 수 있다. 프로세서는 학습의 대상이 되는 단어 목록을 확장하고, random forest regression 모델을 학습시켜 확장된 단어들에 대해 단어 수 준을 예측하고 메모리 상에 기록할 수 있다. 프로세서는 동작 256에서 전체 어휘 수준(또는 단어 수준)의 통계를 획득하고, 동작 258에서, 어휘 수준 (또는 단어 수준)을 시각화하여 사용자에게 제공할 수 있다. 도 2b는 다의어를 검색하여 문맥에 맞는 다의어 수준을 결정하는 과정을 순서도로 나타낸 것이다. 프로세서는 동작 210에서, 텍스트를 입력 받을 수 있다. 텍스트는 사용자에 의해 입력된 문장 또는 단어를 의미할 수 있다. 프로세서는 동작 220에서, 입력 받은 텍스트에 대한 표제어를 추출할 수 있다. 표제어는 사전에 등재된 단어를 의미할 수 있다. 표제어는 예를 들어, 동사 원형, 명사 원형 또는 형용사 원형 중 적어도어느 하나를 포함할 수 있다. 프로세서는 표제어 추출을 위해 표제어 추출 모델을 이용할 수 있다. 표제어 추출 모델은 오픈 소스 중 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 표제 어 추출 모델은 오픈 소스 기반 라이브러리를 이용하여 표제어를 추출(lemmatize)할 수 있다. 프로세서 는 동작 230에서, 추출된 단어(또는 표제어)의 품사를 찾을 수 있다. 프로세서는 추출된 단어(또는 표제어)의 품사를 찾기 위해 품사 태깅 모델을 이용할 수 있다. 품사 태깅 모델은 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반 의 라이브러리를 이용할 수 있다. 영어에 있어서 품사는 예를 들어, 명사(Noun), 동사(Verb), 대명사(Pronoun), 전치사(Preposition), 부사(Adverb), 접속사(Conjunction), 전치사(Particle), 관사(Article) 등을 포함할 수 있다. 동작 210 내지 230에 대해서는 도 3에서 상세히 설명될 것이다. 프로세서는 동작 260에서, 단어 및 품사를 이용하여 다의어 사전을 검색할 수 있다. 다의어는 사전 DB에 따라 달라질 수 있으며, 인공지능 학습모델은 사전 DB를 입력으로 하여 다의어를 학습할 수 있다. 학습 대상이 되는 사전 DB의 수는 제한이 없기 때문에 학습할 수 있는 다의어의 수도 제한이 없다. 프로세서는 다의어 사전을 이용하여 검색 동작을 수행할 수 있다. 다의어 사전은 사전 API(Application Programming Interface)를 이용하여 생성되거나 또는 특정 사전 DB를 크롤링하여 생성될 수 있다. API는 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 의미한 다. 크롤링은 특정 페이지를 그대로 가져와서 데이터를 추출하는 행위를 의미한다. 크롤링의 대상이 되는 웹 페 이지 또는 사전의 종류는 설정에 따라 달라질 수 있다. 프로세서가 다의어 사전을 이용하여 다의어 목록을 추출하는 동작에 대해서는 도 5에서 상세히 설명될 것이다. 프로세서는 동작 270에서, 다의어 사전을 이용하여 검색된 다의어 목록을 출력할 수 있다. 프로세서 는 동작 280에서, 다의어 목록에 기반하여 다의어 별 레벨(또는 단어 수준)을 검색할 수 있다. 프로세서 는 다의어 별 레벨(또는 단어 수준)을 검색하기 위해 단어 사전을 이용할 수 있다. 단어 사전은 도 2a의 단어 사전과 구성 및 역할이 동일할 수 있다. 프로세서는 동작 290에서, 단어의 다의어 및 레벨(또는 단어 수준)을 확정시킬 수 있다. 도 3은 표제어를 추출하고, 단어의 품사를 찾는 과정을 도시한 것이다. 프로세서(예: 도 1의 프로세서)는 동작 210에서, 텍스트를 입력 받을 수 있다. 텍스트는 사용자에 의해 입 력된 문장 또는 단어를 의미할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 입력에 따른 텍스트에 대해 전처리를 수행할 수 있다. 전처리는 단어의 표제어를 추출하는 동작을 의미할 수 있다. 프로세서는 입력 받은 텍스트에 대한 표제어를 추출할 수 있다. 표제어는 사전에 등재된 단어를 의미할 수 있다. 표제어는 예를 들어 동사 원형, 명사 원형 또는 형용 사 원형 중 적어도 어느 하나를 포함할 수 있다. 프로세서는 표제어 추출을 위해 표제어 추출 모델을 이용할 수 있다. 표제어 추출 모델은 오픈 소스 중 파이썬(python)의 자연어 처리 라이브러리에서 제공되 는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 표 제어 추출 모델은 오픈 소스 기반 라이브러리를 이용하여 표제어를 추출(lemmatize)할 수 있다. 프로세서는 단어의 표제어를 추출하고, 단어의 품사를 결정할 수 있다. 프로세서는 추출된 단어(또는 표제어)의 품사를 찾을 수 있다. 프로세서는 추출된 단어(또는 표제어)의 품사를 찾기 위해 품사 태깅 모 델을 이용할 수 있다. 품사는 예를 들어, 명사(Noun), 동사(Verb), 대명사(Pronoun), 전치사 (Preposition), 부사(Adverb), 접속사(Conjunction), 전치사(Particle), 관사(Article) 등을 포함할 수 있다. 품사는 단어를 문법적 기능, 형태 및 의미에 기반하여 분류하는 체계를 의미할 수 있다. 품사 태깅 모델은 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 품사 태깅 모델은 오픈 소스 기반 라이브러리를 이용 하여 BERT 기반의 POS tagging 기능을 제공할 수 있다. 도 4는 단어 사전을 검색하고 단어의 중의성을 해소하는 과정을 도시한 것이다. 프로세서(예: 도 1의 프로세서)는 사전을 이용하여 표제어 및 품사태그에 대해 동작 240에 서 검색을 수행할 수 있다. 품사태그는 품사 태깅 동작에 의해 품사에 붙여진 태그(tag)를 의미할 수있다. 프로세서는 사전 검색을 통해 단어의 의미, 예문 및 단어 수준을 결정할 수 있다. 단어의 의미를 확 정하는 동작은 중의적인 의미를 갖는 단어 상에서 문맥에 맞춰 하나의 의미를 확정하는 동작을 의미한다. 단어 의 예문을 확정하는 동작은 하나의 단어의 복수의 예문들 중에서 단어의 확정된 의미에 기반하여 단어의 문맥적 인 의미에 대응하는 하나의 예문을 확정하는 동작을 의미한다. 일 실시예에 따르면, 단어의 수준은 단어의 특징에 기반하여 결정될 수 있다. 단어의 특징은 텍스트 코퍼스 (corpus) 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 및 하위어(hyponym)의 수를 포함할 수 있다. 이는 앞선 도 2a에서 설명된 바 있다. 단어의 수준은 사전에 설정된 기준(예: CEFR, common european framework reference)에 따라 측정될 수 있다. CEFR은 유럽 언어에 공통으로 적용되는 수준 측정 체계를 의미한 다. CEFR은 일 예시일 뿐, 본 문서 상에서 단어의 수준을 결정하기 위해 사용되는 기준은 이것으로 한정되는 것 은 아니다. 예를 들어, 프로세서는 단어의 수준을 결정하기 위해 ACTFL(american council on the teaching of foreign languages) 과 같은 지수를 이용할 수도 있다. 프로세서는 단어 별로 추출된 특징을 입력 값으로 하고, CEFR 레벨을 출력값으로 매핑하여 인공지능 학습 모델을 훈련시킬 수 있다. 인공지능 학습모델은 random forest regression 모델을 의미할 수 있다. 출력 값으로 매핑되는 레벨은 단어의 수준을 평가하는 기준(예: CEFR) 따라 달라질 수 있다. CEFR은 일 예시일 뿐, 단어의 수준을 평가하는 기준은 이것으로 제한되는 것은 아니다. random forest regression 모델은 전체 특징(feature) 중 일부 특징들에 기반하여 트리(tree)를 형성하고, 다른 일부 특징들에 기반하여 다른 트리를 형성하며, 이런 방식으로 복수의 트리들을 만드는 방식을 사용할 수 있다. 하나의 트리(tree)는 하나의 예측값을 내놓을 수 있 다. random forest regression 모델은 여러 결정 트리들의 예측 값을 종합(ensemble)하여 가장 많이 등장한 예 측값을 최종 예측값으로 결정할 수 있다. 종래 단어 수준 예측 방법은 복수의 유저들이 입력할 만한 단어를 예측한 자료(예: 구글 자료)를 이용하여 단어 의 수준을 예측할 수 있다. 다만, 단어를 예측한 자료 내에 포함된 단어의 수는 한계가 있어서, 예측한 자료 내 에 포함되지 않은 단어에 대해서는 단어의 수준을 예측할 수 없는 한계가 있다. 본 문서에 따른 단어 수준 예측 방법은 예측한 자료 내에 포함되지 않은 단어에 대해서 특징을 추출하고, 추출된 특징에 기반하여 인공지능 학 습모델을 이용하여 단어의 수준을 출력시킬 수 있다. 단어의 특징은 예를 들어, 텍스트 코퍼스(corpus) 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 및 하위어(hyponym)의 수를 포함할 수 있다. 인공지능 학 습모델은 단어의 수준을 예측하기 위해 사전을 이용할 수 있다. 프로세서는 사용자가 입력한 텍스트 에 대한 단어 수준 정보를 표시하여 사용자에게 현재 사용하는 단어의 수준을 제공할 수 있다. 프로세서는 사용자에게 현재 사용하는 단어의 수준을 제공하여 사용자의 학습 수준에 대한 지표를 제공하고, 목적에 따라 더 범용적인 단어를 사용할 것인지, 전문화된 단어를 사용할 것인지 학습 방향을 제시할 수 있다. 프로세서는 특정 단어가 사전 내 동일한 단어와 품사 형태로 2개 이상의 의미를 갖는 경우, 사용자에 의해 입력된 텍스트를 분석하여 문장 속에서 문맥 정보를 추출할 수 있다. 프로세서는 사용자에 의해 입력 된 텍스트 상의 문맥 정보에 기반하여 2개 이상의 의미 중에서 사용된 단어에 대응하는 1개의 의미를 결정할 수 있다. 2개 이상의 의미를 갖는 단어는 다의어로 지칭될 수 있다. 프로세서는 파이썬(python)의 자연어 처 리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 WSD(word sense disambiguation)모델을 이용하여 입력된 텍스트 상에서 다의어가 갖는 의미를 1개로 확정할 수 있다. 프로세서는 WSD모델을 이용하여 단어 의미의 중의성을 해소시킬 수 있다. 프로세서는 단어 의 미의 중의성을 해소시키기 위해 사전과 같은 사전 자료 또는 지식 기반 데이터베이스를 이용할 수 있다. 프로세서는 지식 기반 방법(knowledge-based approach) 또는 지도 학습 방법(supervised approach)을 통 해 인공지능 학습 모델을 학습시키고 특정 단어의 의미를 사전 상에 기재된 의미와 매핑시킬 수 있다. 도 5는 다의어 사전을 검색하고 다의어 목록을 형성하는 과정을 도시한 것이다. 프로세서(예: 도 1의 프로세서)는 다의어 사전, 표제어 및 품사 태그를 이용하여 단어 및 품사를 검색하고, 동작 530에서 다의어 목록을 추출할 수 있다. 프로세서는 다의어 사전을 이용하여 검색 동작을 수행할 수 있다. 다의어 사전은 사전 API(Application Programming Interface)를 이용하여 생성되거나 또는 특정 사전 DB를 크롤링하여 생성될 수 있다. API는 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 의미한다. 크롤링은 특정 페이지 를 그대로 가져와서 데이터를 추출하는 행위를 의미한다. 크롤링의 대상이 되는 웹 페이지 또는 사전의 종류는 설정에 따라 달라질 수 있다.프로세서는 다의어 사전을 이용하여 다의어를 출력하고, 도 4에서 언급된 사전을 이용하여 다의 어의 단어 수준을 결정할 수 있다. 프로세서는 도 2a에서 언급된 단어 수준 예측 모델을 이용하여 다의어 의 단어 수준을 결정할 수 있다. 다의어의 단어 수준을 결정하는 과정은 도 6에서 설명될 것이다. 도 6은 사전을 검색하고 다의어의 수준을 예측하는 과정을 도시한 것이다. 프로세서(예: 도 1의 프로세서)는 도 5에서 출력된 다의어 목록 및 사전을 이용하여 동작 240에 서 단어 검색을 수행할 수 있다. 프로세서는 사전 검색을 통해 동작 620에서 다의어 별 단어 수준을 결정 할 수 있다. 단어 수준은 도 2b 내지 도 4에서 설명된 것과 같다. 단어의 수준은 단어의 특징에 기반하여 결정 될 수 있다. 단어의 특징은 예를 들어, 텍스트 코퍼스(corpus) 내에서 단어의 빈도 수, 다의어의 수, 상위어 (hypernym)의 수 및 하위어(hyponym)의 수를 포함할 수 있다. 프로세서는 단어 별로 추출된 특징을 입력 값으로 하고, CEFR 레벨을 출력값으로 매핑하여 인공지능 학습모델을 훈련시킬 수 있다. 인공지능 학습모델은 random forest regression 모델을 의미할 수 있다. 출력 값으로 매핑되는 레벨은 단어의 수준을 평가하는 기준 (예: CEFR) 따라 달라질 수 있다. CEFR은 일 예시일 뿐, 단어의 수준을 평가하는 기준은 이것으로 제한되는 것 은 아니다. random forest regression 모델은 전체 특징(feature) 중 일부 특징들에 기반하여 트리(tree)를 형 성하고, 다른 일부 특징들에 기반하여 다른 트리를 형성하며, 이런 방식으로 복수의 트리들을 만드는 방식을 사 용할 수 있다. 하나의 트리(tree)는 하나의 예측값을 내놓을 수 있다. random forest regression 모델은 여러 결정 트리들의 예측 값을 종합(ensemble)하여 가장 많이 등장한 예측값을 최종 예측값으로 결정할 수 있다. 본 문서에 따른 단어 수준 예측 방법은 예측한 자료 내에 포함되지 않은 단어에 대해서 특징을 추출하고, 추출된 특징에 기반하여 인공지능 학습모델을 이용하여 단어의 수준을 출력시킬 수 있다. 인공지능 학습모델은 단어의 수준을 예측하기 위해 사전을 이용할 수 있다. 프로세서는 사용자가 입력한 텍스트에 대한 단어 수준 정보를 표시하여 사용자에게 현재 사용하는 단어의 수준을 제공할 수 있다. 프로세서는 사용자에게 현재 사용하는 단어의 수준을 제공하여 사용자의 학습 수준에 대한 지표를 제공하고, 목적에 따라 더 범용적인 단어 를 사용할 것인지, 더 높은 난이도의 단어를 사용할 것인지 학습 방향을 제시할 수 있다. 도 7은 종합 단어 수준을 측정하는 과정을 도시한 것이다. 프로세서(예: 도 1의 프로세서)는 수준 별 단어 개수를 결정할 수 있다. 수준은 예를 들어, CEFR(common european framework reference) 레벨에 따른 등급(예: A1, A2, B1)을 의미할 수 있다. CEFR은 유 럽 언어에 공통으로 적용되는 수준 측정 체계를 의미한다. 등급은 단어 수준을 결정하는 기준(예: CEFR, ACTFL(american council on the teaching of foreign languages))에 따라 다르게 결정될 수 있다. 이하에서는 단어 수준을 결정하는 기준이 CEFR인 것으로 가정하고 설명하지만 단어 수준을 결정하는 기준은 이것으로 한정 되는 것은 아니다. 또한, CEFR은 등급을 6개로 분류하지만 등급의 수는 이것으로 한정되는 것은 아니며 설정에 따라 달라질 수 있다. 일 실시예에 따르면, 결정된 단어 수준은 제 1 수준, 제 2 수준 제 N-1 수준 및 제 N 수준을 포함할 수 있다. 제 1 수준에 포함되는 단어는 상대적으로 가장 쉬운 수준의 단어를 의미할 수 있다. 제 N 수준에 포함되는 단어 는 상대적으로 가장 어려운 수준의 단어를 의미할 수 있다. 제 1 수준에서 제 N 수준으로 이동할수록 단어의 난 이도가 상대적으로 높아질 수 있다. 다만 이러한 분류 체계는 설정에 따른 것일 뿐, 설정에 따라 제 1 수준에서 제 N 수준으로 이동할수록 단어의 난이도가 상대적으로 낮아지도록 제어할 수도 있다. 여기서 N은 2 N ≤ 20 인 자연수일 수 있다. 구체적으로, N은 3 N ≤ 15인 자연수 일 수 있고, 더욱 구체적으로, N은 3 N ≤ 8 일 수 있다. 프로세서는 입력된 텍스트 상에서 제 1 수준에 대응하는 단어의 수 내지 제 N 수준에 대응하 는 단어의 수를 결정하고, 입력된 텍스트 상에서 추출된 표제어의 수에 기반하여 사전에 설정된 비율에 따른 제 1 값을 결정하고, 제 1 수준에 대응하는 단어의 수가 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 1 수준 으로 결정할 수 있다. 예를 들어, 제 1 값이 약 70%이고, 입력된 텍스트 상에서 추출된 표제어의 수가 10개라면, 제 1 값은 7이 될 수 있다. 또는 제 1 값이 약 50%이고, 입력된 텍스트 상에서 추출된 표제어의 수가 20개라면 제 1 값은 10이 될 수 있다. 계산에 따라 제 1 값이 자연수로 나누어 떨어지지 않는 경우, 소수점 첫 째 자리에서 반올림하여 제 1 값을 결정할 수 있다. 반올림하는 자리는 고정된 것은 아니며 설정에 따라 달라질 수 있다.일 실시예에 따르면, 프로세서는 제 1 수준에 대응하는 단어의 수가 제 1 값 미만이고, 제 1 수준에 대응 하는 단어의 수 및 제 2 수준에 대응하는 단어의 수를 합한 값이 제 1 값을 초과하면 사용자의 종합 단어 수준 을 제 2 수준으로 결정할 수 있다. 일 실시예에 따르면, 프로세서는 제 1 수준에 대응하는 단어의 수, 제 2 수준에 대응하는 단어의 수 내지 제 N-1 수준에 대응하는 단어의 수를 합한 값이 제 1 값 미만이고, 제 1 수준에 대응하는 단어의 수, 제 2 수준 에 대응하는 단어의 수 내지 제 N-1 수준에 대응하는 단어의 수, 제 N 수준에 대응하는 단어의 수를 합한 값이 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 N 수준으로 결정할 수 있다. 여기서 N은 2 N ≤ 20인 자 연수일 수 있다. 구체적으로, N은 3 N ≤ 15인 자연수 일 수 있고, 더욱 구체적으로, N은 3 N ≤ 8 일 수 있다. 이하에서는 N의 크기가 3인 경우를 가정하여 설명하지만 이는 일 예시일 뿐 N의 크기가 이것으로 제한되 는 것은 아니다. 예를 들어, N의 크기가 3인 경우, 프로세서는 입력된 텍스트 상에서 제 1 수준에 대응하는 단어의 수, 제 2 수준에 대응하는 단어의 수 및 제 3 수준에 대응하는 단어의 수를 결정하고, 제 1 수준에 대응하는 단어의 수 가 사전에 설정된 제 1 값을 초과하면 사용자의 종합 단어 수준을 상기 제 1 수준으로 결정할 수 있다. 일 실시예에 따르면, 프로세서는 제 1 수준에 대응하는 단어의 수가 사전에 설정된 제 1 값 미만이고, 제 1 수준에 대응하는 단어의 수 및 제 2 수준에 대응하는 단어의 수를 합한 값이 제 1 값을 초과하면 사용자의 종 합 단어 수준을 제 2 수준으로 결정할 수 있다. 일 실시예에 따르면, 프로세서는 제 1 수준에 대응하는 단어의 수 및 제 2 수준에 대응하는 단어의 수를 합한 값이 사전에 설정된 제 1 값 미만이고, 제 1 수준에 대응하는 단어의 수, 제 2 수준에 대응하는 단어의 수 및 제 3 수준에 대응하는 단어의 수를 합한 값이 상기 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 3 수 준으로 결정할 수 있다. 또는 단어 수준을 결정하는 기준이 CEFR인 경우, 레벨은 초보자 단계를 지칭하는 A1부터 A2, B1, B2, C1 및 고 급 단계를 지칭하는 C2까지 총 6개의 등급으로 구분될 수 있다. 프로세서는 학습자의 발화 또는 입력 텍스 트 상에서 복수의 단어(예: 표제어)들을 추출하고 단어들의 특징에 기반하여 단어들의 수준을 개별적으로 결정 할 수 있다. 프로세서는 가장 낮은 수준의 단어는 A1등급으로 분류하고, 단어의 수준에 따라 A2 내지 C2로 분류할 수 있다. 예를 들어, 단어의 빈도 수가 높은 단어는 초보자 수준(예: A1)에 가까운 것으로 등급이 매겨 질 수 있다. 다의어의 수가 많은 단어는 고급 수준(예: C2)에 가까운 것으로 등급이 매겨질 수 있다. 프로세서 는 학습자의 언어 수준이 가장 하위 난이도에 대응하는 A1 등급부터 상위 난이도에 대응하는 C2 등급까지 단어의 개수를 누적시켜 계산할 수 있다. 일 실시예에 따르면, 프로세서는 입력된 텍스트 상에서 추출된 표제어의 수에 기반하여 사전에 설정된 비 율에 따른 제 2 값을 결정하고, 입력된 텍스트 상에서 추출된 표제어의 단어 수준을 결정하고, 가장 하위 수준 에 포함되는 단어들부터 시작하여 상위 수준에 포함되는 단어들까지 번호를 부여하고, 제 2 값에 대응하는 번호 를 가진 단어가 포함되는 단어 수준을 사용자의 종합 단어 수준으로 결정할 수 있다. 예를 들어, 제 2 값이 약 70%이고, 입력된 텍스트 상에서 추출된 표제어의 수가 10개라면, 제 2 값은 7이 될 수 있다. 또는 제 2 값이 약 50%이고, 입력된 텍스트 상에서 추출된 표제어의 수가 20개라면 제 2 값은 10이 될 수 있다. 계산에 따라 제 2 값이 자연수로 나누어 떨어지지 않는 경우, 소수점 첫째 자리에서 반올림하여 제 2 값을 결정할 수 있다. 반올 림하는 자리는 고정된 것은 아니며 설정에 따라 달라질 수 있다. 프로세서는 수준 별 단어 개수 및 종합 수준 채점기에 기반하여 동작 730에서 종합 수준을 출력 할 수 있다. 프로세서는 사용자에 의해 입력된 텍스트 상에서 표제어를 추출하고, 단어의 수준을 결정할 수 있다. 프로세서는 제 1 단어는 A1등급으로 결정하고, 제 2 단어는 C1등급으로 결정할 수 있다. 예를 들 어, 프로세서는 사용자의 텍스트 상에서 10개의 단어를 추출한 상황에서 단어 별로 등급을 매기고 수준 별 단어 개수를 결정할 수 있다. 프로세서는 A1에 대응하는 단어 수가 5개, A2에 대응하는 단어 수가 2 개, B1, B2에 대응하는 단어가 없고, C1에 대응하는 단어 수가 2개, C2에 대응하는 단어 수가 1개인 것으로 결 정할 수 있다. 프로세서는 종합 수준 채점기를 이용하여 종합 수준을 출력할 수 있다. 프로세서(12 0)는 가장 하위 난이도에 대응하는 A1부터 상위 난이도에 대응하는 C2까지 단어들의 수를 누적하여 계산할 수 있다. 프로세서는 누적된 단어의 수가 사전에 지정된 수준(예: 전체 단어 개수의 70%)과 같아질 때의 단어수준을 사용자의 단어 수준인 것으로 결정할 수 있다. 예를 들어, 프로세서는 입력된 텍스트 상에서 단어 (예: 표제어)가 10개인 상황에서, A1에 대응하는 단어 수가 5개, A2에 대응하는 단어 수가 2개이므로 사전에 지 정된 수준(예: 전체 10개의 단어 중 70% 이므로 7개)과 같아질 때의 단어 수준은 A2(초급)인 것으로 결정할 수 있다. 프로세서는 사용자의 단어 수준은 A2(초급)인 것으로 결정할 수 있다 만약 사전에 지정된 수준이 80%라면, A1에 대응하는 단어 수가 5개, A2에 대응하는 단어 수가 2개, C1에 대응하는 단어 수가 2개 이므로 프 로세서는 사전에 지정된 수준(예: 80%)에 도달할 때의 단어 수준은 C1(고급)인 것으로 결정할 수 있다. 사 전에 지정된 수준이 높게 설정될수록 상대적으로 사용자의 종합 수준은 높게 출력될 수 있다. 사전에 지정된 수 준이 낮게 설정될수록 상대적으로 사용자의 종합 수준은 낮게 출력될 수 있다. 여기서는 사용자에 의해 입력된 텍스트 상의 단어의 수가 10개, 사전에 지정된 수준은 70% 또는 80% 인 것으로 가정하여 설명하였으나, 입력된 텍스트 상의 단어의 수는 사용자에 의해 입력된 텍스트에 따라 달라질 수 있다. 또한, 종합 수준을 결정하는 사 전에 지정된 수준 역시 설정에 따라 달라질 수 있다. 일 실시예에 따르면, 프로세서는 결정된 사용자의 종합 단어 수준에 기반하여 영어 학습과 관련된 콘텐츠 를 추천할 수 있다. 영어 학습과 관련된 콘텐츠는 추천 도서 또는 오디오북을 포함할 수 있다. 추천 도서 또는 오디오북은 일 예시일 뿐, 영어 학습과 관련된 콘텐츠는 이것으로 제한되는 것은 아니다. 일 실시예에 따르면, 프로세서는 종합 수준을 표시하면서 사용하는 단어들이 포함된 레벨 수준(예: A1 C2) 별 비중을 그래프로 표시할 수 있다. 프로세서는 레벨 수준(예: A1 C2)에 따라 색이나 크기를 다르게 지정 하여 표시할 수 있다. 예를 들어, 프로세서는 종합 등급이 C1으로 같은 두 명의 사용자에 대해서도 하나의 사용자는 A1 수준의 어휘를 많이 사용하는 경우 A1에 대응하는 인터페이스를 상대적으로 크게 표시하여 사용자 가 사용하는 단어 수준의 분포를 알릴 수 있다. 반면, 다른 사용자는 B2 및 C1 수준의 어휘를 많이 사용하는 경 우 B2 및 C1에 대응하는 인터페이스를 상대적으로 크게 표시하여 사용자가 사용하는 단어 수준의 분포를 알릴 수 있다. 도 8은 일 실시예에 따른 시스템의 어휘 수준 측정 방법을 순서도로 나타낸 것이다. 도 8을 통하여 설명되는 동작들은 컴퓨터 기록 매체 또는 메모리(예: 도 1의 메모리)에 저장될 수 있는 인 스트럭션들을 기반으로 구현될 수 있다. 도시된 방법은 앞서 도 1 내지 도 5를 통해 설명한 시스템(예: 도 1의 시스템)에 의해 실행될 수 있으며, 앞서 설명한 바 있는 기술적 특징은 이하에서 생략하기로 한다. 도 8의 각 동작의 순서가 변경될 수 있으며, 일부 동작이 생략될 수도 있고, 일부 동작들이 동시에 수행될 수도 있다. 동작 810에서, 프로세서(예: 도 1의 프로세서)는 표제어를 추출하고 품사를 결정할 수 있다. 표제어는 사 전에 등재된 단어를 의미할 수 있다. 품사는 예를 들어, 명사(Noun), 동사(Verb), 대명사(Pronoun), 전치사 (Preposition), 부사(Adverb), 접속사(Conjunction), 전치사(Particle), 관사(Article) 등을 포함할 수 있다. 프로세서는 추출된 단어(또는 표제어)의 품사를 찾기 위해 품사 태깅 모델(예: 도 2a의 품사 태깅 모델 )을 이용할 수 있다. 품사 태깅 모델은 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 라이브러리를 이용할 수 있다. 품사 태깅 모델은 오픈 소스 기반 라이브러리를 이용하여 BERT 기반의 POS tagging 기능을 제공할 수 있다. 품 사 태깅(POS tagging)은 각 단어에 품사를 붙이는 동작을 의미할 수 있다. 동작 820에서, 프로세서는 사전 DB 상에서 단어에 대한 검색을 수행하고 검색 결과에 기반하여 단어의 의 미를 결정할 수 있다. 프로세서는 추출된 표제어 및 품사에 기반 하여 메모리 상에 저장된 사전 (dictionary) DB 또는 외부 서버 상의 사전 DB 상에서 단어에 대한 검색을 수행하고 검색 결과에 기반하여 입력 된 텍스트 상의 단어의 의미를 결정할 수 있다. 프로세서는 단어의 의미가 적어도 2개 이상임에 기반하여 단어 중의성 해소 모델을 이용하여 입력된 텍스 트의 문맥을 고려한 단어 의미를 결정할 수 있다. 단어 중의성 해소 모델은 파이썬(python)의 자연어 처리 라이 브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 WSD(word sense disambiguation)모델을 포함할 수 있다. 동작 830에서, 프로세서는 인공지능 학습모델을 이용하여 사용자에게 표시할 예문 및 단어 수준을 결정할 수 있다. 인공지능 학습모델은 입력된 텍스트 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 및 하위어 (hyponym)의 수에 기반하여 단어 수준을 결정할 수 있다. 인공지능 학습모델은 입력된 텍스트 내에서 단어의 빈도 수, 다의어의 수, 상위어(hypernym)의 수 및 하위어 (hyponym)의 수에 기반하여 단어의 특징을 추출하고, 추출된 단어의 특징을 입력값으로 하고, 단어 수준을 출력 값으로 매핑하여 학습을 수행할 수 있다. 인공지능 학습모델은 random forest regression 모델을 의미할 수 있다. 출력 값으로 매핑되는 레벨은 단어의 수준을 평가하는 기준(예: CEFR) 따라 달라질 수 있다. CEFR은 일 예시일 뿐, 단어의 수준을 평가하는 기준은 이것으로 제한되는 것은 아니다. random forest regression 모델은 전체 특징(feature) 중 일부 특징들에 기반 하여 트리(tree)를 형성하고, 다른 일부 특징들에 기반하여 다른 트리를 형성하며, 이런 방식으로 복수의 트리 들을 만드는 방식을 사용할 수 있다. 하나의 트리(tree)는 하나의 예측값을 내놓을 수 있다. random forest regression 모델은 여러 결정 트리들의 예측 값을 종합(ensemble)하여 가장 많이 등장한 예측값을 최종 예측값 으로 결정할 수 있다. 본 문서에 따른 단어 수준 예측 방법은 예측한 자료 내에 포함되지 않은 단어에 대해서 특징을 추출하고, 추출된 특징에 기반하여 인공지능 학습모델을 이용하여 단어의 수준을 출력시킬 수 있다. 인 공지능 학습모델은 단어의 수준을 예측하기 위해 사전을 이용할 수 있다. 프로세서는 사용자가 입력 한 텍스트에 대한 단어 수준 정보를 표시하여 사용자에게 현재 사용하는 단어의 수준을 제공할 수 있다. 프로세 서는 사용자에게 현재 사용하는 단어의 수준을 제공하여 사용자의 학습 수준에 대한 지표를 제공하고, 목 적에 따라 더 범용적인 단어를 사용할 것인지, 더 높은 난이도의 단어를 사용할 것인지 학습 방향을 제시할 수 있다. 동작 840에서, 프로세서는 결정된 단어 수준을 이용하여 사용자의 종합 단어 수준을 결정할 수 있다. 결정 된 단어 수준은 제 1 수준, 제 2 수준 및 제 3 수준 을 포함할 수 있다. 프로세서는 입력된 텍스트 상에서 제 1 수준에 대응하는 단어의 수, 제 2 수준에 대응하는 단어의 수 및 제 3 수준에 대응하는 단어의 수를 결정 할 수 있다. 제 1 수준, 제 2 수준 및 제 3 수준은 일 예시일 뿐, 단어 수준의 수는 이것으로 한정되는 것은 아 니며, 설정에 따라 달라질 수 있다. 프로세서는 제 1 수준에 대응하는 단어의 수가 사전에 설정된 제 1 값을 초과하면 사용자의 종합 단어 수 준을 상기 제 1 수준으로 결정할 수 있다. 프로세서는 제 1 수준에 대응하는 단어의 수가 사전에 설정된 제 1 값 미만이고, 제 1 수준에 대응하는 단어의 수 및 제 2 수준에 대응하는 단어의 수를 합한 값이 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 2 수준으로 결정할 수 있다. 프로세서는 제 1 수준에 대응하는 단 어의 수 및 제 2 수준에 대응하는 단어의 수를 합한 값이 사전에 설정된 제 1 값 미만이고, 제 1 수준에 대응하 는 단어의 수, 상기 제 2 수준에 대응하는 단어의 수 및 상기 제 3 수준에 대응하는 단어의 수를 합한 값이 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 3 수준으로 결정할 수 있다. 프로세서는 제 1 수준에 대응하는 단어, 제 2 수준에 대응하는 단어 및 제 3 수준에 대응하는 단어의 색을 다르게 지정하여 표시하고, 제 1 수준에 대응하는 단어의 수, 제 2 수준에 대응하는 단어의 수 및 제 3 수준에 대응하는 단어의 수의 비중을 그래프의 형태로 함께 표시할 수 있다. 일 실시예에 따르면, 어휘 수준을 측정하는 시스템은 프로세서 및 메모리를 포함할 수 있다. 프로세서는 입력된 텍스트 상에서 사전에 등재된 단어를 의미하는 표제어를 추출하고, 추출된 표제어의 품사를 결정하며,추출된 표 제어 및 품사에 기반 하여 메모리 상에 저장된 사전(dictionary) DB 또는 외부 서버 상의 사전 DB 상에서 단어 에 대한 검색을 수행하고 검색 결과에 기반하여 입력된 텍스트 상의 단어의 의미를 결정하고, 단어의 의미가 적 어도 2개 이상임에 기반하여 단어 중의성 해소 모델을 이용하여 입력된 텍스트의 문맥을 고려한 단어 의미를 결 정하며, 결정된 단어 의미에 기반하여 인공지능 학습모델을 이용하여 사용자에게 표시할 예문 및 단어 수준을 결정하고, 결정된 단어 수준을 이용하여 사용자의 종합 단어 수준을 결정할 수 있다. 일 실시예에 따르면, 결정된 단어 수준은 제 1 수준 내지 제 N 수준을 포함할 수 있다. 프로세서는 입력된 텍스 트 상에서 제 1 수준 내지 제 N 수준에 대응하는 단어의 수를 각각 결정하고, 입력된 텍스트 상에서 추출된 표 제어의 수에 기반하여 사전에 설정된 비율에 따른 제 1 값을 결정하고, 제 1 수준에 대응하는 단어의 수가 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 1 수준으로 결정하고, 제 1 수준에 대응하는 단어의 수가 제 1 값 을 초과하지 않을 때 제 1 수준 내지 제 N-1 수준에 대응하는 총 단어의 수가 제 1 값 미만이고, 제 1 수준 내 지 제 N 수준에 대응하는 총 단어의 수가 제 1 값을 초과하면 사용자의 종합 단어 수준을 제 N 수준으로 결정할 수 있다. 여기서 N은 2 이상의 자연수를 의미한다.일 실시예에 따르면, 프로세서는 제 1 수준에 대응하는 단어의 색 내지 제 N 수준에 대응하는 단어의 색을 각각 다르게 지정하여 표시하고, 제 1 수준 내지 제 N 수준에 대응하는 단어의 수의 비중을 그래프의 형태로 함께 표 시할 수 있다. 일 실시예에 따르면, 프로세서는 사전에 설정된 비율을 다르게 결정하여 사용자의 종합 단어 수준을 다르게 결 정할 수 있으며, 결정된 사용자의 종합 단어 수준에 기반하여 영어 학습과 관련된 콘텐츠를 추천할 수 있다. 영 어 학습과 관련된 콘텐츠는 추천 도서 또는 오디오북을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 입력된 텍스트 상에서 추출된 표제어의 수에 기반하여 사전에 설정된 비율에 따른 제 2 값을 결정하고, 입력된 텍스트 상에서 추출된 표제어의 단어 수준을 결정하고, 가장 하위 수준에 포 함되는 단어들부터 시작하여 상위 수준에 포함되는 단어들까지 번호를 부여하고, 제 2 값에 대응하는 번호를 가 진 단어가 포함되는 단어 수준을 사용자의 종합 단어 수준으로 결정할 수 있다. 일 실시예에 따르면, 인공지능 학습모델은 입력된 텍스트 내에서 단어의 빈도 수, 다의어의 수, 상위어 (hypernym)의 수 및 하위어(hyponym)의 수에 기반하여 단어 수준을 결정할 수 있다. 일 실시예에 따르면, 단어 중의성 해소 모델은 파이썬(python)의 자연어 처리 라이브러리에서 제공되는 BERT(bidirectional encoder representations from transformers) 기반의 WSD(word sense disambiguation)모 델을 포함하며, WSD 모델은 입력된 문장 내에서 목표 단어를 결정하고, 입력된 문장의 해석에 기반하여 목표 단 어의 정의를 출력할 수 있다. 본 명세서와 도면에 개시된 본 문서의 실시예는 본 문서의 실시예에 따른 기술 내용을 쉽게 설명하고 본 문서의 실시예의 이해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 문서의 실시예의 범위를 한정하고자 하는 것은 아니다. 따라서 본 문서의 일 실시예의 범위는 여기에 개시된 실시예 이외에도 본 문서의 일 실시예의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형된 형태가 본 문서의 일 실시예의 범위에 포함되는 것으로 해석 되어야 한다."}
{"patent_id": "10-2022-0168201", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른, 시스템의 블록도이다. 도 2a는 단어를 검색하여 중의성을 해소하고, 단어의 문맥에 맞는 단어 수준을 결정하는 과정을 순서도로 나타 낸 것이다. 도 2b는 다의어를 검색하여 문맥에 맞는 다의어 수준을 결정하는 과정을 순서도로 나타낸 것이다. 도 3은 표제어를 추출하고, 단어의 품사를 찾는 과정을 도시한 것이다. 도 4는 단어 사전을 검색하고 단어의 중의성을 해소하는 과정을 도시한 것이다. 도 5는 다의어 사전을 검색하고 다의어 목록을 형성하는 과정을 도시한 것이다. 도 6은 사전을 검색하고 다의어의 수준을 예측하는 과정을 도시한 것이다. 도 7은 종합 단어 수준을 측정하는 과정을 도시한 것이다. 도 8은 일 실시예에 따른 시스템의 어휘 수준 측정 방법을 순서도로 나타낸 것이다."}
