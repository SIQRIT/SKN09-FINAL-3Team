{"patent_id": "10-2023-0138096", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0054635", "출원번호": "10-2023-0138096", "발명의 명칭": "파티션에 동적으로 리소스를 할당하는 스토리지 장치, 전자 장치, 방법, 및 비-일시적 컴퓨터", "출원인": "삼성전자주식회사", "발명자": "이만종"}}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치(101)에 있어서,프로세서(120); 및복수의 로지컬 파티션들을 지원할 수 있는 메모리 영역(591, 593)을 포함하는 스토리지 장치(205)를 포함하고,인스트럭션들을 저장하는 메모리(130)를 포함하고, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시,상기 전자 장치(101)가: 상기 스토리지 장치(205)에 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션(370)이 설정되고 상기 제1 메모리 영역(591, 593)의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역(591, 593)이 지정된 조건을 만족하는 지 식별하고,상기 지정된 조건이 만족되는 것으로 식별됨에 기반하여, 상기 제1 메모리 영역(591, 593) 중 상기 제1 로지컬파티션(370) 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역(593)이 할당되고,상기 제2 용량에 대응하는 주소 공간(581)을 가지는 제2 로지컬 파티션(380)을 상기 스토리지 장치(205)에 생성하기 위한 요청을 상기 스토리지 장치(205)에 전달하도록 구성되는,전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 제2 로지컬 파티션(380)에 할당된 상기 제2 용량 중 적어도 일부 용량의 해제 요청을 식별하고,상기 해제 요청에 응답하여, 상기 스토리지 장치(205)에게, 상기 제2 메모리 영역(593) 중 해제가 요청된 상기일부 용량에 해당하는 메모리 영역(691)의 해제를 요청하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1 또는 2에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 스토리지 장치(205)로부터, 상기 제2 로지컬 파티션(380)에 대한 해제 결과를 나타내는 응답을 수신하고, 상기 해제 결과에 기반하여, 상기 제2 로지컬 파티션(380)의 전체 주소 공간(581, 583)을 통해 상기 적어도 일부 용량만큼 감소된 상기 제2 용량에 대응하는 상기 제2 메모리 영역(693)에 접근하기 위한 블록 모듈(330)을갱신하고, 상기 해제 결과에 기반하여, 상기 제1 메모리 용량 중 사용 중인 용량이 상기 적어도 일부 용량에 대응하는 용량만큼 감소되도록, 상기 제1 로지컬 파티션(370)의 다른 블록 모듈(320)을 갱신하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2025-0054635-3-청구항 1 내지 3 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 제2 파티션(380)에 대한 쓰기 요청을 식별하고, 상기 쓰기 요청이 식별됨에 응답하여, 상기 스토리지 장치(205)에게, 상기 쓰기 요청을 전달하고, 상기 스토리지 장치(205)로부터, 상기 쓰기 요청에 따른 결과를 획득하고, 상기 결과에 기반하여 상기 쓰기 요청이 전체 주소 공간(581, 583)에서 메모리 영역(593)이 할당되지 않은 주소(583)에 관련됨을 식별하고, 상기 쓰기 요청이 상기 쓰기 요청이 상기 전체 주소 공간(581, 583)에서 메모리 영역(593)이 할당되지 않은 주소(583)에 기반하여, 상기 쓰기 요청에 대한 에러를 반환하도록 구성되는,전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1 내지 4 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 쓰기 요청이 상기 쓰기 요청이 상기 전체 주소 공간(581, 583)에서 메모리 영역(593)이 할당되지 않은 주소(583)에 관련됨에 기반하여, 상기 쓰기 요청을 위한 쓰기 용량을 식별하고,상기 쓰기 용량 및 상기 제1 로지컬 파티션(370)의 상기 가용 용량에 기반하여, 상기 제2 메모리 영역(593)의추가 할당의 가능 여부를 식별하고, 상기 할당이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치(205)에게, 상기 제1 로지컬 파티션(370)의제1 메모리 영역(591) 중 상기 쓰기 용량에 해당하는 메모리 영역(893)을 상기 제2 로지컬 파티션(380)의 상기제2 메모리 영역(593, 893)으로 추가 할당할 것을 요청하고,상기 스토리지 장치(205)로부터, 상기 제2 로지컬 파티션(380)에 대한 추가 할당 결과를 나타내는 응답을 수신하고, 상기 추가 할당 결과에 기반하여, 상기 스토리지 장치(205)에게, 상기 쓰기 요청을 전달하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1 내지 5 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 제2 로지컬 파티션(380)의 다른 쓰기 요청을 식별하고, 상기 다른 쓰기 요청이 상기 전체 주소 공간(581, 583)에서 상기 쓰기 요청에 따른 상기 주소(583)에 관련됨에기반하여, 상기 스토리지 장치(205)로의 상기 다른 쓰기 요청의 전달 없이, 상기 다른 쓰기 요청에 대한 에러를반환하도록 구성되는,전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1 내지 6 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:공개특허 10-2025-0054635-4-상기 제2 로지컬 파티션(380)의 메모리 유형에 관한 변경 요청을 식별하고, 상기 메모리 유형은 상기 제2 메모리 영역(583)의 셀 레벨과 관련되고,상기 변경 요청에 기반하여, 상기 스토리지 장치(205)에게, 상기 제2 로지컬 파티션(380)의 상기 메모리 유형의변경을 요청하고,상기 스토리지 장치(205)로부터, 상기 제2 로지컬 파티션(380)에 대한 상기 메모리 유형의 변경 결과를 나타내는 응답을 수신하고, 상기 변경 결과에 기반하여, 상기 제2 로지컬 파티션(380)의 전체 주소 공간(581, 583)을 통해 상기 메모리 유형이 변경된 상기 제2 로지컬 파티션(380)의 상기 제2 메모리 영역(1093)에 접근하기 위한 블록 모듈(330)을 갱신하고, 상기 변경 결과에 기반하여, 상기 제1 로지컬 파티션(370)의 상기 제1 메모리 용량이 상기 변경 결과에 따라 상기 제2 메모리 용량에서 변경되는 용량만큼 변경되도록, 상기 제1 로지컬 파티션(370)의 다른 블록 모듈(320)을갱신하도록 구성되는,전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1 내지 7 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 변경 요청에 따른 셀 레벨이 상기 제2 로지컬 파티션(380)의 셀 레벨보다 낮음에 응답하여, 상기 제2 로지컬 파티션(380)의 상기 제2 메모리 용량 및 상기 제1 로지컬 파티션(370)의 상기 가용 용량에 기반하여, 상기메모리 유형의 변경의 가능 여부를 식별하고,상기 메모리 유형의 변경이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치(205)에게, 상기 제2 로지컬파티션(380)의 상기 메모리 유형의 변경을 요청하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 1 내지 8 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:제2 로지컬 파티션(380)에 할당이 요청된 요청 용량이 상기 제2 로지컬 파티션(380)의 전체 주소 공간(581,583)보다 큰 것으로 식별됨에 응답하여, 상기 스토리지 장치(205)에게, 상기 요청 용량 중 상기 전체 주소 공간(581, 583)을 초과하는 용량의 메모리 영역을 상기 제2 로지컬 파티션(380)의 오버프로비저닝을 위한 메모리 영역으로 할당할 것을 요청하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 1 내지 9 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 메모리(130) 중 휘발성 메모리 영역에 저장된 데이터에 대한 스왑-아웃을 위한 상기 지정된 조건이 만족되는 지 식별하고, 상기 스왑-아웃을 위한 상기 지정된 조건이 만족되는 것으로 식별됨에, 상기 제2 메모리 영역(593)의 할당을 위공개특허 10-2025-0054635-5-한 상기 요청을 생성하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 1 내지 10 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 전자 장치(101)가 부팅됨에 응답하여, 상기 제2 로지컬 파티션(380)의 생성을, 스토리지 장치(205)에게 요청하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 1 내지 11 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 스토리지 장치(205)가, 상기 제1 메모리 영역(591, 593) 중 상기 데이터가 저장되지 않는 영역 중의 적어도 일부 영역을 상기 제2 메모리 영역(593)으로 상기 제2 로지컬 파티션(380)에 할당하도록, 상기 요청을 스토리지 장치(205)에 전달하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 1 내지 12 중 어느 한 항에 있어서, 상기 인스트럭션들은 상기 프로세서(120)에 의해 실행 시, 상기 전자 장치(101)가:상기 스토리지 장치(205)로부터 상기 제2 메모리 영역(593)의 할당 결과를 나타내는 응답을 수신하고, 상기 제2 메모리 영역(593)의 상기 할당 결과에 따라 상기 제2 로지컬 파티션(380)의 주소 공간(581)에 접근하기 위한 블록 모듈(330)을 생성하도록 구성되는, 전자 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "스토리지 장치(205)에 있어서, 전자 장치(101)와 전기적으로 연결되고, 상기 전자 장치(101)와의 데이터를 송수신하기 위한 인터페이싱 회로(250),메모리 유닛(390)을 포함하는 비휘발성 메모리(290), 및 컨트롤러(270)를 포함하고, 상기 컨트롤러(270)는, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)로부터, 상기 메모리 유닛(390)의 메모리 영역(591,593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션(370) 외에(in addition to)상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역(593)이 할당되고, 상기 제2 용량에 대응하는 주소 공간(581)을 가지는 제2 로지컬 파티션(380)을 상기 스토리지 장치(205)에 생성하기 위한 요청을 획득하고,상기 요청에 응답하여, 상기 요청에서 지정하는 제2 용량에 대응하는 주소 공간(581)을 가지는 상기 제2 로지컬파티션(380)을 생성하고, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)에게, 상기 제2 로지컬 파티션(380)의 요청 결과를 나공개특허 10-2025-0054635-6-타내는 응답을 송신하도록 구성되는, 스토리지 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 14에 있어서, 상기 컨트롤러(270)는, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)로부터, 상기 제2 로지컬 파티션(380)에 할당된 상기제2 용량 중 적어도 일부 용량의 해제 요청을 획득하고,상기 해제 요청에 응답하여, 상기 제2 메모리 영역(593) 중 해제가 요청된 상기 일부 용량에 해당하는 메모리영역(691)을 해제하고, 상기 해제 요청에 응답하여, 상기 제2 메모리 영역(593)에서 해제된 상기 메모리 영역(691)을 상기 제1 파티션(370)에 반환하고, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)에게, 상기 제2 파티션(380)의 해제 결과를 나타내는응답을 송신하도록 구성되는, 스토리지 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 14 또는 15에 있어서, 상기 컨트롤러(270)는, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)로부터, 상기 제2 파티션(380)에 대한 쓰기 요청을 획득하고, 상기 쓰기 요청이 상기 제2 로지컬 파티션(380)의 전체 주소 공간(581, 583)에서 메모리 영역(593)이 할당되지않은 주소(583)에 관련됨을 식별됨에 응답하여, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)에게,가용량 부족을 나타내는 결과를 반환하도록 구성되는, 스토리지 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 14 내지 16 중 어느 한 항에 있어서, 상기 컨트롤러(270)는, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)로부터, 상기 제2 파티션(380)에 대한 읽기 요청을 획득하고, 상기 읽기 요청이 상기 제2 로지컬 파티션(380)의 전체 주소 공간(581, 583)에서 메모리 영역(593)이 할당되지않은 주소(583)에 관련됨을 식별됨에 응답하여, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)에게,지정된 데이터를 반환하도록 구성되는, 스토리지 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 14 내지 17 중 어느 한 항에 있어서, 상기 컨트롤러(270)는, 상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)로부터, 상기 제2 로지컬 파티션(380)의 메모리 유형에관한 변경 요청을 획득하고, 상기 메모리 유형은 상기 제2 메모리 영역(581)의 셀 레벨과 관련되고,상기 변경 요청에 기반하여, 상기 제1 메모리 영역(591, 593)에서 상기 제2 로지컬 파티션(380)의 메모리 용량에 대응하는 메모리 영역을 상기 제2 로지컬 파티션(380)의 새로운 제2 메모리 영역(1093)으로 할당하고, 공개특허 10-2025-0054635-7-기존의 상기 제2 메모리 영역(593)에 저장된 데이터를 상기 새로운 제2 메모리 영역(1093)에 마이그레이션하고, 상기 기존의 제2 메모리 영역(581)을 상기 제1 로지컬 파티션(370)에 반환하고,상기 인터페이싱 회로(250)를 통해, 상기 전자 장치(101)에게, 상기 제2 로지컬 파티션(380)에 대한 상기 메모리 유형의 변경 결과를 나타내는 응답을 송신하도록 구성되는, 스토리지 장치."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "복수의 로지컬 파티션들을 지원할 수 있는 메모리 영역(591, 593)을 포함하는 스토리지 장치(205)를 포함하는전자 장치(101)에서 수행되는 방법에 있어서, 상기 스토리지 장치(205)에 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션(370)이 설정되고 상기 제1 메모리 영역(591, 593)의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역(591, 593)이 지정된 조건을 만족하는 지 식별하는 동작, 및상기 지정된 조건이 만족되는 것으로 식별됨에 기반하여, 상기 제1 메모리 영역(591, 593) 중 상기 제1 로지컬파티션(370) 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역(593)이 할당되고,상기 제2 용량에 대응하는 주소 공간(581)을 가지는 제2 로지컬 파티션(380)을 상기 스토리지 장치(205)에 생성하기 위한 요청을 상기 스토리지 장치(205)에 전달하는 동작을 포함하는 방법."}
{"patent_id": "10-2023-0138096", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 19에 있어서, 상기 제2 로지컬 파티션(380)에 할당된 상기 제2 용량 중 적어도 일부 용량의 해제 요청을 식별하는 동작, 및상기 해제 요청에 응답하여, 상기 스토리지 장치(205)에게, 상기 제2 메모리 영역(593) 중 해제가 요청된 상기일부 용량에 해당하는 메모리 영역(691)의 해제를 요청하는 동작을 포함하는, 방법."}
{"patent_id": "10-2023-0138096", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 상기 전자 장치는, 적어도 하나의 파티션을 포함하는 스토리지 장치를 포함할 수 있다. 상기 전자 장치는, 프로세서를 포함할 수 있다. 상기 전자 장치는, 인스트럭션들을 저장하는 메모리를 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 적어도 하나의 파티션 중 제 (뒷면에 계속)"}
{"patent_id": "10-2023-0138096", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명들은, 파티션에 동적으로 리소스를 할당하는 스토리지 장치, 전자 장치, 방법, 및 비-일시적 컴퓨터 판독 가능 기록 매체에 관한 것이다."}
{"patent_id": "10-2023-0138096", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "UFS(universal flash storage)의 호스트(예를 들어, 스마트 폰)는 스토리지 장치(예: 솔리드 스테이트 드라이브 (solid state drive, SSD))와 미리 정해진 인터페이스를 통해 통신할 수 있다. 호스트는 스토리지 장치에 대하 여 다양한 관리 동작을 수행할 수 있다. 호스트는 스토리지 장치에 대한 관리 동작을 수행하기 위해, 미리 정해 진 인터페이스에 의해 정의된 다양한 커맨드들을 사용할 수 있다."}
{"patent_id": "10-2023-0138096", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전자 장치가 개시된다. 상기 전자 장치는, 프로세서를 포함할 수 있다. 상기 전자 장치는, 복수의 로지컬 파티 션들을 지원할 수 있는 메모리 영역을 포함하는 스토리지 장치를 포함하고, 인스트럭션들을 저장하는 메모리를 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 스토리지 장치에 상기 메모리 영역 중 제1 용량을 갖는 제1 메모리 영역이 할당된 제1 로지컬 파티션이 설정되고 상기 제1 메모리 영역의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역이 지정된 조건을 만족하는 지 식별 하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 지정된 조건이 만족되는 것으로 식별됨에, 상기 제1 메모리 영역 중 상기 제1 로지컬 파티션 외에(in addition to) 상 기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가 지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성하기 위한 요청을 상기 스토리지 장치에 전달하도록 야기 할 수 있다. 방법이 개시된다. 상기 방법은 복수의 로지컬 파티션들을 지원할 수 있는 메모리 영역을 포함하는 스토리지 장 치를 포함하는 전자 장치에서 수행될 수 있다. 상기 방법은, 상기 스토리지 장치에 상기 메모리 영역 중 제1 용 량을 갖는 제1 메모리 영역이 할당된 제1 로지컬 파티션이 설정되고 상기 제1 메모리 영역의 적어도 일부에 데 이터가 저장된 상태에서, 상기 제1 메모리 영역이 지정된 조건을 만족하는 지 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 지정된 조건이 만족되는 것으로 식별됨에 기반하여, 상기 제1 메모리 영역 중 상기 제1 로지 컬 파티션 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성하기 위한 요청을 상 기 스토리지 장치에 전달하는 동작을 포함할 수 있다. 비-일시적 컴퓨터 판독 가능 기록 매체가 개시된다. 상기 비-일시적 컴퓨터 판독 가능 기록 매체는 인스트럭션 들을 포함하는 프로그램을 저장할 수 있다. 상기 인스트럭션들은 복수의 로지컬 파티션들을 지원할 수 있는 메 모리 영역을 포함하는 스토리지 장치를 포함하는 전자 장치의 프로세서에 의해 실행 시, 상기 전자 장치가: 상 기 스토리지 장치에 상기 메모리 영역 중 제1 용량을 갖는 제1 메모리 영역이 할당된 제1 로지컬 파티션이 설정 되고 상기 제1 메모리 영역의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역이 지정된 조건을 만족하는 지 식별하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치 가: 상기 지정된 조건이 만족되는 것으로 식별됨에, 상기 제1 메모리 영역 중 상기 제1 로지컬 파티션 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성하기 위한 요청을 상기 스토리지 장치에 전 달하도록 야기할 수 있다. 스토리지 장치가 개시된다. 상기 스토리지 장치는, 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이 터를 송수신하기 위한 인터페이싱 회로을 포함할 수 있다. 상기 스토리지 장치는, 메모리 유닛을 포함하는 비휘 발성 메모리를 포함할 수 있다. 상기 스토리지 장치는, 컨트롤러를 포함할 수 있다. 상기 컨트롤러는, 상기 인 터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 영역 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지컬 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역에서 상기 제1 로지컬 파티션 외에 상기 제1 용량보다 작은 제2 용량을 갖는 적어도 일부 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 구성될 수 있다. 상기 컨트 롤러는, 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주소 공간을 가지는 상 기 제2 로지컬 파티션을 생성하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전 자 장치에게, 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 방법이 개시된다. 상기 방법은 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신하기 위 한 인터페이싱 회로, 메모리 유닛을 포함하는 비휘발성 메모리를 포함하는 스토리지 장치에 의해 수행될 수 있 다. 상기 방법은, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 영역 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지컬 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역에서 상기 제1 로지컬 파티션 외에 상기 제1 용량보다 작은 제2 용량을 갖는 적어도 일부 메모리 영 역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 구 성될 수 있다. 상기 방법은, 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주 소 공간을 가지는 상기 제2 로지컬 파티션을 생성하도록 구성될 수 있다. 상기 방법은, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 비-일시적 컴퓨터 판독 가능 기록 매체가 개시된다. 상기 비-일시적 컴퓨터 판독 가능 기록 매체는, 인스트럭션 들을 포함하는 프로그램을 저장할 수 있다. 상기 인스트럭션들은 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신하기 위한 인터페이싱 회로, 메모리 유닛을 포함하는 비휘발성 메모리를 포함하는 스 토리지 장치의 프로세서에 의해 실행 시, 상기 스토리지 장치가, 상기 인터페이싱 회로를 통해, 상기 전자 장치 로부터, 상기 메모리 영역 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지컬 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역에서 상기 제1 로지컬 파티션 외에 상기 제1 용량보 다 작은 제2 용량을 갖는 적어도 일부 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 스토리지 장치가: 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주 소 공간을 가지는 상기 제2 로지컬 파티션을 생성하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 스토리지 장치가: 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 로지컬 파 티션의 생성 결과를 나타내는 응답을 송신하도록 야기할 수 있다."}
{"patent_id": "10-2023-0138096", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치 는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서 , 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서 는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈 , 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)과 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO(full dimensional MIMO)), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안 테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전 자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지 원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 664dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 6ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네 트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내 에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 일 실시 예에 따른 전자 장치의 블록도이다. 도 2를 참조하면, 전자 장치는 호스트 장치와 스토리지 장치를 포함할 수 있다. 호스트 장치 와 스토리지 장치는 인터페이스를 통해 서로 전기적으로 연결될 수 있다. 일 실시 예에서, 전자 장치는 JEDEC(joint electron device engineering council)에서 발표하는 UFS(universal flash storage) 표준(standard)을 준수할 수 있다. 일 실시 예에서, 호스트 장치는 도 1의 프로세서에 포함될 수 있다. 일 실시 예에서, 호스트 장치 는 어플리케이션, 스토리지 장치 드라이버, 호스트 장치 컨트롤러, 및 UFS 상호 접속(UFS interconnection, UIC) 레이어를 포함할 수 있다. 이하에서, UFS 상호 접속(UFS interconnection, UIC) 레이어는 UIC 레이어로 지칭될 수 있다. 일 실시 예에서, 어플리케이션은 스토리지 장치의 기능을 이용하기 위해 스토리지 장치와의 통 신을 원하는 프로그램을 의미할 수 있다. 어플리케이션은 스토리지 장치에 대한 입출력을 위해 입출 력 요청(input-output request, IOR)을 스토리지 장치 드라이버로 전송할 수 있다. 입출력 요청(IOR)은 데이터의 읽기(read) 요청, 쓰기(write) 요청 및/또는 디스카드(discard) 요청을 포함할 수 있다. 하지만 이에제한되지 않는다. 일 실시 예에서, 스토리지 장치 드라이버는 UFS-HCI(host controller interface)를 통해 호스트 장치 컨 트롤러를 관리할 수 있다. 스토리지 장치 드라이버는 어플리케이션에 의해 생성된 입출력 요청 을 UFS 표준에 의해 정의된 UFS 명령으로 변환하고, 변환된 UFS 명령을 호스트 장치 컨트롤러로 전달할 수 있다. 하나의 입출력 요청은 복수의 UFS 명령으로 변환될 수 있다. UFS 명령은 기본적으로 SCSI(small computer system interface) 표준에 의해 정의된 명령일 수 있다. UFS 명령은 UFS 표준 전용 명령일 수도 있다. 하지만 이에 제한되지 않는다. 일 실시 예에서, 호스트 장치 컨트롤러는 스토리지 장치 드라이버에 의해 변환된 UFS 명령을 UIC 레 이어와 인터페이스를 통해 스토리지 장치의 UIC 레이어로 전송할 수 있다. 일 실시 예에서, 호스트 장치 측의 UIC 레이어는 MIPI(mobile industry processor interface) M- PHY와 MIPI UniPro(unified protocol, 241)를 포함할 수 있다. 스토리지 장치 측의 UIC 레이어(26 0)는 MIPI M-PHY와 MIPI UniPro을 포함할 수 있다. 일 실시 예에서, 인터페이스는 UFS 표준에 기반한 인터페이스일 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 인터페이스는 DDR(double data rate), DDR2, DDR3, DDR4, DDR5, DDR6, LPDDR(Low power DDR), USB(universal serial bus), MMC(multimedia card), eMMC(embedded MMC), PCI(peripheral component interconnection), PCI-E(PCI-express), ATA(advanced technology attachment), Serial-ATA, Parallel-ATA, SCSI, ESDI(enhanced small disk interface), IDE(integrated drive electronics), 파이어와이어(Firewire), 및/또는 NVMe(nonvolatile memory express)에 기반한 인터페이스일 수 있다. 일 실시 예에서, 인터페이스는 기준 클럭(REF_CLK)을 전송하는 라인, 스토리지 장치에 대한 하드웨어 리셋 신호(RESET_n)를 전송하는 라인, 차동 입력 신호 쌍(DIN_T와 DIN_C)을 전송하는 한 쌍의 라인 및 차동 출 력 신호 쌍(DOUT_T와 DOUT_C)을 전송하는 한 쌍의 라인을 포함할 수 있다. 실시 예에 따라, 인터페이스는 인터페이싱 회로로도 지칭될 수 있다. 일 실시 예에서, 스토리지 장치는 도 1의 메모리(또는, 비휘발성 메모리)에 포함될 수 있다. 일 실시 예에서, 스토리지 장치는 UIC 레이어, 스토리지 장치 컨트롤러, 인터페이스, 및 NVM(non-volatile memory, 290)을 포함할 수 있다. 일 실시 예에서, 스토리지 장치는 호스트 장치(또는, 프로세서)와 물리적으로 분리된 상태로 전 자 장치에 포함될 수 있다. 스토리지 장치는 호스트 장치(또는, 프로세서)와 동일한 패키 지 내에 탑재되어, 전자 장치에 포함될 수 있다. 스토리지 장치는 인터페이스를 통해 전자 장치 의 다른 구성 요소들과 탈부착 가능한, SSD(solid state device) 또는 메모리 카드(memory card)일 수 있 다. 일 실시 예에서, 스토리지 장치는 UFS, eMMC 또는 NVMe에 따른 표준 규약이 적용되는 장치일 수 있다. 하 지만 이에 제한되지 않는다. 일 실시 예에서, 스토리지 장치 컨트롤러와 NVM은 인터페이스를 통해 서로 연결될 수 있다. 일 실시 예에서, 스토리지 장치의 스토리지 장치 컨트롤러는 스토리지 장치의 동작을 전반적으 로 제어할 수 있다. 스토리지 장치 컨트롤러는 논리적인 데이터 저장 단위인 논리 유닛(logical unit, L U)를 통해 NVM를 관리할 수 있다. 일 실시 예에서, 논리 유닛은 파티션으로도 지칭될 수 있다. 스토리지 장치 컨트롤러는 플래시 변환 계층(flash translation layer, FTL)을 포함할 수 있다. 스토리지 장치 컨 트롤러는 FTL의 어드레스 매핑(address mapping) 정보를 이용하여 호스트 장치로부터 전달된 논리적 인 데이터 주소(예: LBA(logical block address))를 물리적인 데이터 주소(예: PBA(physical block address)) 로 변환할 수 있다. 전자 장치에서 사용자 데이터(user data)의 저장을 위한 논리 블록(logical block)은 소정 범위의 크기를 가질 수 있다. 예컨대, 논리 블록의 최소 크기는 4Kbyte로 설정될 수 있다. 일 실시 예에서, 호스트 장치로부터의 명령이 UIC 레이어를 통해 스토리지 장치로 입력되면, 스 토리지 장치 컨트롤러는 입력된 명령에 따른 동작을 수행하고, 상기 동작이 완료되면 완료 응답을 호스트 장치로 전송할 수 있다. 일 실시 예에서, 호스트 장치가 스토리지 장치에 사용자 데이터를 쓰고자 할 경우, 호스트 장치(20 1)는 데이터 쓰기 명령을 스토리지 장치로 전송할 수 있다. 사용자 데이터를 전송받을 준비가 되었다 (ready-to-transfer)는 응답을 스토리지 장치로부터 수신하면, 호스트 장치는 사용자 데이터를 스토 리지 장치로 전송할 수 있다. 스토리지 장치 컨트롤러는 FTL의 어드레스 매핑 정보에 기초하여 전송 받은 사용자 데이터를 NVM의 선택된 위치에 쓸 수 있다. 일 실시 예에서, 호스트 장치가 스토리지 장치에 저장된 사용자 데이터를 읽고자 할 경우, 호스트 장 치는 데이터 읽기 명령을 스토리지 장치로 전송할 수 있다. 명령을 수신한 스토리지 장치 컨트롤러 는 상기 데이터 읽기 명령에 기초하여 NVM로부터 사용자 데이터를 읽고, 읽힌 사용자 데이터를 호스 트 장치로 전송할 수 있다. 일 실시 예에서, NVM은 하나 이상의 메모리 유닛들을 포함할 수 있다. 하나 이상의 메모리 유닛들은 2D(two dimensional) 구조의 NAND 플래시 메모리일 수 있다. 하나 이상의 메모리 유닛들은 3D(three dimensional) 구조의 V(vertical)-NAND 플래시 메모리일 수 있다. 하지만 이에 제한되지 않는다. 일 실시 예에서, 하나 이상의 메모리 유닛들 각각은 메모리 셀 어레이를 포함할 수 있다. 상기 메모리 셀 어레 이는 2차원 메모리 셀 어레이 또는 3차원 메모리 셀 어레이를 포함할 수 있다. 메모리 셀 어레이는 복수의 메모 리 셀들을 포함할 수 있다. 복수의 메모리 셀들 각각은 지정된 개수의 비트의 정보를 저장할 수 있다. 복수의 메모리 셀들 각각은 저장하는 비트의 개수에 따라 SLC(single level cell), MLC(multi level cell), TLC(triple level cell), 또는 QLC(quadruple level cell)로 분류될 수 있다. 도 3은, 일 실시 예에 따른 전자 장치의 블록도이다. 도 3은, 도 1 및 도 2를 참조하여 설명될 수 있다. 도 3을 참조하면, 전자 장치는 호스트 장치 및 스토리지 장치을 포함할 수 있다. 일 실시 예에서, 호스트 장치는 어플리케이션, 파일 시스템, 제1 LU 블록 모듈, 및 스토리 지 장치 드라이버를 포함할 수 있다. 일 실시 예에서, 어플리케이션은, 도 1의 어플리케이션에 대응할 수 있다. 일 실시 예에서, 어플리케 이션은 가상 LU(제1 LU 및/또는 제2 LU)와 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들 면, 어플리케이션은 메모리 유닛에 저장된 데이터의 읽기(read)를 요청할 수 있다. 예를 들면, 어플 리케이션은 메모리 유닛에 데이터의 쓰기(wirte)를 요청할 수 있다. 예를 들면, 어플리케이션은 블록 모듈(예: 제2 LU 블록 모듈)의 생성, 용량 할당, 및/또는 용량 할당 해제를 요청할 수 있다. 하지만 이에 제한되지 않는다. 일 실시 예에서, 어플리케이션은 파일 시스템 및/또는 제1 LU 블록 모듈에서 제공되는 API(application programming interface)를 통해 제1 LU 블록 모듈에서 처리할 수 있는 명령(또는, 요 청)을 생성할 수 있다. 일 실시 예에서, 어플리케이션은, API에 기반하여 생성된 명령(또는, 요청)을 블록 모듈(예: 제1 LU 블록 모듈 및/또는 제2 LU 블록 모듈)에 전송할 수 있다. 예를 들면, 어플리케이션은, API에 기반하 여 생성된 명령(또는, 요청)을 블록 모듈에 직접 전송할 수 있다. 예를 들면, 어플리케이션은, 생성된 명 령(또는, 요청)을 파일 시스템에 전송함으로써 블록 모듈에 간접 전송할 수 있다. 예를 들면, 파일 시스템 은 어플리케이션으로부터의 명령(또는, 요청)을 제1 LU 블록 모듈이 제공하는 API로 변환 및/또 는 생성할 수 있다. 파일 시스템은 API에 기반하여 생성된 명령(또는, 요청)을 제1 LU 블록 모듈에게 전송할 수 있다. 일 실시 예에서, 파일 시스템은, 스토리지 장치에 데이터를 저장하기 위해 사용되는 구조 또는 소프 트웨어일 수 있다. 일 실시 예에서, 파일 시스템은 제2 LU에 대한 용량 할당과 관련된 API를 어플리 케이션에게 제공할 수 있다. 일 실시 예에서, 파일 시스템(310, 또는 primary LU file system, PLUFS)은 제1 LU를 관리할 수 있다. 일 실시 예에서, 파일 시스템은, 제1 LU 및 제2 LU에 할당된 용량의 총합이 메모리 유닛의 용 량을 초과하지 않도록 관리할 수 있다. 일 실시 예에서, 파일 시스템은, 스토리지 장치에서 파일들을 관리할 수 있다. 일 실시 예에서, 파일 시스템은, 블록 모듈(예: 제1 LU 블록 모듈)과 관련되어 마운트될 수 있다. 여기에서, 블록 모듈과관련되어 마운트됨은, 블록 모듈(예: 제1 LU 블록 모듈)을 디렉토리(directory)의 특정 위치(또는, 주소) 에 연결하는 것을 포함할 수 있다. 일 실시 예에서, 파일 시스템은, 블록 모듈(예: 제1 LU 블록 모듈 )의 사용량이 표기 용량을 넘지 않도록 관리할 수 있다. 일 실시 예에서, 파일 시스템은 논리적 주소 공간에서 데이터를 관리할 수 있다. 일 실시 예에서, 파일 시 스템은 어플리케이션으로부터의 명령(또는, 요청)에 응답하여, 데이터가 저장될 논리적 주소를 할당 할 수 있다. 일 실시 예에서, 블록 모듈은 블록 단위로 데이터의 입출력을 위한 드라이버일 수 있다. 예를 들면, 블록 모듈 은 스토리지 장치를 가상화(또는, 추상화)한 드라이버일 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU와의 데이터의 입출력을 위한 블록 모듈일 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 어플리케이션 및/또는 파일 시스템이 호출 가능한 API를 제공 할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU의 용량의 확인, 할당, 및/또는 해제를 가능 하게 하는 API를 제공할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU 디스크립터(descriptor, 321) 및 제1 LU 매니저를 포함 할 수 있다. 일 실시 예에서, 제1 LU 디스크립터는 제1 LU의 속성 및/또는 상태에 관한 정보를 포함할 수 있다. 여기에서, 제1 LU 디스크립터는 아래 표 1과 같은 정보를 포함할 수 있다. 표 1 파라미터 명칭 파라미터 정보 VLU_ID LU의 ID를 나타냄 VLU_type LU가 primary인지 또는, secondary인지를 나타냄 memory_type LU의 메모리 셀이 저장하는 비트의 개수에 따른 메 모리 타입(예:SLC, MLC, TLC) SLU LU에 종속되는 LU를 나타냄 SLU_reserve 종속된 LU에 할당된 용량을 나타냄 실시 예에 따라, 제1 LU 디스크립터는 위 표 1과 같은 정보 이외에 추가적인 정보를 더 포함할 수 있다. 예를 들면, 제1 LU 디스크립터는 제1 LU의 최대 가상 용량에 대한 정보, 및/또는 용량 할당 단위에 대한 정보를 포함할 수 있다. 일 실시 예에서, 제1 LU 매니저는 제2 LU의 생성, 용량 할당, 용량 할당 해제, 및/또는 제거를 관리 할 수 있다. 일 실시 예에서, 호스트 장치는 제2 LU 블록 모듈을 생성할 수 있다. 예를 들면, 어플리케이션 는 제2 LU 블록 모듈의 생성을 요청할 수 있다. 제1 LU 블록 모듈은 어플리케이션으로부터의 요 청에 응답하여, 스토리지 장치에게 제2 LU 블록 모듈의 생성을 요청할 수 있다. 제2 LU 블록 모듈 의 생성은, 도 4를 참조하여 설명될 수 있다. 일 실시 예에서, 호스트 장치는 제2 LU 블록 모듈에 용량을 할당할 수 있다. 예를 들면, 어플리케이 션는 제2 LU 블록 모듈의 용량 할당을 요청할 수 있다. 제1 LU 블록 모듈은 어플리케이션 으로부터의 요청에 응답하여, 스토리지 장치에게 제2 LU 블록 모듈의 용량 할당을 요청할 수 있다. 제2 LU 블록 모듈의 용량 할당은, 도 5a 및 도 5b를 참조하여 설명될 수 있다. 일 실시 예에서, 호스트 장치는 제2 LU 블록 모듈에 할당된 용량을 해제할 수 있다. 예를 들면, 어플 리케이션는 제2 LU 블록 모듈에 할당된 용량의 해제를 요청할 수 있다. 제1 LU 블록 모듈은 어 플리케이션으로부터의 요청에 응답하여, 스토리지 장치에게 제2 LU 블록 모듈에 할당된 용량의 해제를 요청할 수 있다. 제2 LU 블록 모듈에 할당된 용량의 해제는, 도 6a, 도 6b 및 도 6c를 참조하여 설 명될 수 있다. 일 실시 예에서, 호스트 장치는 제2 LU 블록 모듈에 대한 IOR을 생성할 수 있다. 예를 들면, 어플리 케이션는 제2 LU 블록 모듈에 대한 입출력 요청(IOR)을 생성할 수 있다. 제2 LU 블록 모듈는 어 플리케이션으로부터의 입출력 요청(IOR)에 응답하여, 스토리지 장치에게 제2 LU 블록 모듈에 대한 입출력 요청(IOR)을 전달할 수 있다. 제2 LU 블록 모듈에 대한 입출력 요청(IOR)은, 도 7을 참조하여 설명될 수 있다. 일 실시 예에서, 호스트 장치는 제2 LU 블록 모듈의 메모리 유형의 변경을 요청할 수 있다. 예를 들 면, 어플리케이션는 제2 LU 블록 모듈의 메모리 유형의 변경을 요청할 수 있다. 제1 LU 블록 모듈 은 어플리케이션으로부터의 요청에 응답하여, 스토리지 장치에게 제2 LU 블록 모듈의 메모 리 유형의 변경을 요청할 수 있다. 제2 LU 블록 모듈에 대한 메모리 유형의 변경은, 도 10a, 도 10b 및 도 10c를 참조하여 설명될 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU와의 데이터의 입출력을 위한 블록 모듈일 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터, 및 제2 LU 매니저를 포함할 수 있다. 일 실시 예에서, 제2 LU 디스크립터는 아래 표 2와 같은 정보를 포함할 수 있다. 표 2 파라미터 명칭 파라미터 정보 VLU_ID LU의 ID를 나타냄 VLU_type LU가 primary인지 또는, secondary인지를 나타냄 memory_type LU의 메모리 셀이 저장하는 비트의 개수에 따른 메 모리 타입(예:SLC, MLC, TLC) PLU LU가 종속되는 LU를 나타냄 persistence 시스템이 종료되더라도 LU가 유지되는지 여부를 나 타냄 granularity 용량 할당 단위(예: 4MB)를 나타냄 virtual_capacity 최대 가상 용량을 나타냄 allocated_capacity 할당된 용량을 나타냄 실시 예에 따라, 제2 LU 디스크립터는 위 표 2와 같은 정보 이외에 추가적인 정보를 더 포함할 수 있다. 일 실시 예에서, 제2 LU 매니저는 제2 LU에 할당된 용량을 관리할 수 있다. 예를 들면, 제2 LU 매니 저는 제2 LU의 주소 공간에서 메모리 유닛의 용량이 할당된 주소들을 관리할 수 있다. 예를 들 면, 제2 LU의 주소 공간은 최대 가상 용량에 대응할 수 있다. 예를 들면, 주소 공간에서 메모리 유닛(39 0)의 용량이 할당됨은, 제2 LU의 주소가 메모리 유닛의 주소에 맵핑됨을 의미할 수 있다. 예를 들면, 제2 LU에 용량이 할당됨은, 메모리 유닛에서 적어도 일부 메모리 영역이 제2 LU의 메모리 타입 에 따라 제2 LU에 할당됨을 의미할 수 있다. 예를 들면, 제2 LU 매니저는 제2 LU의 주소 공간에서 메모리 유닛에서 용량에 대응하는 메모리 영역이 할당된 주소들에 대한 정보를 캐시할 수 있다. 예를 들면, 제2 LU 매니저는 주소 공간에서 메모리 유닛에서 용량에 대응하는 메모리 영역이 할당되지 않은 주소에 대한 접근 요청을 스토리지 장치로 전달하지 않을 수 있다. 예를 들면, 제2 LU 매니저는 주소 공간에서 메모리 유닛에서 용량에 대응하 는 메모리 영역이 할당되지 않은 주소에 대한 접근 요청에 대한 응답을 생성하고, 어플리케이션로 전달할 수 있다. 예를 들면, 제2 LU 매니저는 주소 공간에서 메모리 유닛에서 용량에 대응하는 메모리 영역 이 할당된 주소에 대한 접근 요청을 스토리지 장치로 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 도 2의 스토리지 장치 드라이버에 대응할 수 있다. 일 실 시 예에서, 스토리지 장치 드라이버는 어플리케이션에 의해 생성된 입출력 요청(IOR, Input Output Request)을 UFS 표준에 의해 정의된 UFS 명령으로 변환할 수 있다. 일 실시 예에서, 스토리지 장치는, LU 관리기, 리소스 분배기, 제1 LU, 및 메모리 유닛 을 포함할 수 있다. 예를 들면, 스토리지 장치는 도 2의 스토리지 장치에 대응할 수 있다. 일 실시 예에서, LU 관리기는 논리 유닛의 생성, 제거, 용량 할당 및/또는 용량 할당 해제를 위한 명령을 처리할 수 있다. 예를 들면, LU 관리기는 제1 LU 블록 모듈로부터의 논리 유닛의 생성, 제거, 용량 할당 및/또는 용량 할당 해제를 위한 명령을 처리할 수 있다. 일 실시 예에서, 리소스 분배기는 메모리 유닛의 용량(또는, 자원(resource))을 LU들 간에 분배할 수 있다. 예를 들면, 리소스 분배기는 메모리 유닛의 메모리 영역을 제1 LU 및 제2 LU 간에분배할 수 있다. 일 실시 예에서, 제1 LU는 메모리 유닛의 메모리 영역의 공간(또는, 파티션)에 대응할 수 있다. 예를 들면, 제1 LU는 메모리 유닛의 전체 메모리 영역이 할당될 수 있다. 일 실시 예에서, 제1 LU는 제1 파티션으로도 지칭될 수 있다. 일 실시 예에서, 제2 LU는 제1 LU로부터 제1 LU에 할당된 메모리 유닛에서 일부 메모리 영 역이 할당될 수 있다. 제2 LU는 제1 LU에 종속된 LU일 수 있다. 일 실시 예에서, 제2 LU는 제2 파티션으로도 지칭될 수 있다. 실시 예에 따라, 종속된 LU를 가지는 LU는 primary LU(또는, PLU)로 지칭될 수 있다. 실시 예에 따라, 다른 LU에 종속된 LU는 secondary LU(또는, SLU)로 지칭될 수 있다. 도 3에서는, 제2 LU가 1개인 것으로 예시되었으나, 이는 예시일 뿐이다. 실시 예에 따라, 둘 이상의 제2 LU들이 포함 될 수 있다. 둘 이상의 제2 LU들이 포함됨은, 제1 LU에 할당된 메모리 유닛에서 서로 다른 일부 메모리 영역이 할당되는 복수의 제2 LU들이 존재함을 의미할 수 있다. 일 실시 예에서, 메모리 유닛은 2D 구조의 NAND 플래시 메모리일 수 있다. 일 실시 예에서, 메모리 유닛 은 하나 이상의 메모리 유닛들은 3D 구조의 V-NAND 플래시 메모리일 수 있다. 하지만 이에 제한되지 않는 다. 일 실시 예에서, 메모리 유닛은 용량을 가질 수 있다. 일 실시 예에서, 메모리 유닛의 용량은 메모리 유닛의 복수의 메모리 셀들 각각이 저장하는 비트의 개수에 따라 달라질 수 있다. 예를 들면, 복수의 메모 리 셀들 각각이 SLC, MLC, 또는 TLC인 경우, 메모리 유닛의 용량은 4GB, 8GB, 12GB일 수 있다. 실시 예에 따라, 전자 장치는 제1 LU과 제2 LU 간의 관계를 나타내는 정보(예: 표 1 및/또는 표 2의 정보)를 디스플레이 모듈을 통해 사용자에게 제공할 수 있다. 도 3에서는, 제1 LU와 제2 LU가 각각 하나인 것으로 예시되었으나, 이는 예시일 뿐이다. 실시 예에 따라, 하나 이상의 메모리 유닛들이 스토리지 장치에 포함될 수 있다. 실시 예에 따라, 하나 이상의 메모리 유닛들 각각에 대한 제1 LU이 존재할 수 있다. 실시 예에 따라, 하나의 제1 LU에 대해 하나 이상의 제2 LU들이 존재할 수 있다. 실시 예에 따라, 전자 장치는 하나 이상의 제1 LU들에 대한 입출력의 우선 순위를 설정할 수 있다. 실시 예에 따라, 전자 장치는 하나의 제1 LU에 대해 하 나 이상의 제2 LU들에 대한 입출력의 우선 순위를 설정할 수 있다. 이하에서, 전자 장치가 제2 LU를 생성하는 동작을 설명한다. 도 4는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 4의 동작들은 전자 장치가 부 팅 중일 때 개시될 수 있다. 도 4의 동작들은 전자 장치가 런타임 중(예: 어플리케이션이 실행 중)일 때 개시될 수 있다. 하지만 이에 제한되지 않는다. 도 4의 동작들은 지정된 조건 충족 시 개시될 수 있다. 예를 들면, 도 4의 동작들은 어플리케이션은 가용 용량의 부족, 사용자의 설정, 사용자의 사용 패턴에 따른 메 모리 최적화 필요 시 개시될 수 있다. 예를 들면, 어플리케이션은 제1 LU의 가용 용량이 지정된 용량 이하인 경우, 도 4의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션은 사용자의 설정에 따른 지정된 환경(예: 사용자가 지정한 동작의 수행 시)에서, 도 4의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션 은 사용자의 사용 패턴에 따라, 추가적인 용량의 확보가 필요한 경우(예: 대용량 파일의 다운로드), 도 4 의 동작들이 개시될 수 있다. 도 4는, 도 1, 도 2, 및 도 3을 참조하여 설명될 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 생성 명령을 생성할 수 있다. 예를 들면, 어플리케이 션은 제2 LU의 생성을 위한 파라미터들을 포함하는 생성 명령을 생성할 수 있다. 일 실시 예에서, 어 플리케이션은 아래 표 3과 같은 제2 LU의 생성을 위한 파라미터들을 설정할 수 있다. 하지만 이에 제 한되지 않는다. 예를 들면, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)은, 전자 장치의 프로그램 내의 다른 구성 요소들(예: 미들웨어, 및/또는 운영 체제)(또는, 커널)에 의해 생성될 수 있다. 표 3 파라미터 명칭 파라미터 값 memory_type SLCPLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB 예를 들면, 어플리케이션은 메모리 유형이 SLC이고, 종속되는 PLU의 ID가 plu0(즉, 제1 LU)이고, 전 자 장치가 종료되더라도 유지되며, 용량 할당 단위는 4MB이고, 최대 가상 용량이 3GB인 제2 LU의 생 성을 위한 파라미터들을 설정할 수 있다. 실시 예에 따라, 제2 LU의 메모리 유형은 제1 LU의 메모리 유형과 동일하거나 다를 수 있다. 예를 들면, 제2 LU는 TLC로 동작하고, 제1 LU는 TLC로 동작할 수 있다. 예를 들면, 제2 LU는 TLC로 동작하고, 제1 LU는 SLC로 동작할 수 있다. 예를 들면, 제2 LU는 SLC로 동작하고, 제1 LU는 MLC로 동작할 수 있다. 하지만 이에 제한되지 않는다. 실시 예에 따라, 어플리케이션은 제2 LU의 속성을 나타내는 파라미터를 더 설정할 수 있다. 예를 들 면, 어플리케이션은 제2 LU의 메모리 할당 유형이 명시적인지 또는 묵시적인지를 설정할 수 있다. 예 를 들면, 메모리 할당 유형이 명시적인 경우, 제2 LU는 명시적인 용량 할당 요청에만 용량이 할당될 수 있 다. 예를 들면, 메모리 할당 유형이 묵시적인 경우, 제2 LU는 명시적인 용량 할당 요청 및/또는 묵시적인 용량 할당 요청에 의해 용량이 할당될 수 있다. 묵시적인 용량 할당 요청은 도 8a 및 도 8b를 참조하여 설명될 수 있다. 예를 들면, 어플리케이션은 제2 LU의 입출력의 우선 순위를 설정할 수 있다. 예를 들면, 입 출력 요청이 발생하는 경우, 논리 유닛들(제1 LU, 및/또는 제2 LU) 중 높은 우선 순위의 논리 유닛에 입출력 요청이 전달될 수 있다. 하지만 이에 제한되지 않는다. 일 실시 예에서, 어플리케이션은, 제2 LU의 생성 명령을 제1 LU 블록 모듈에게 전달할 수 있다. 예를 들면, 동작 411에서, 어플리케이션은, 파일 시스템에게 제2 LU의 생성 명령을 전달하고, 동작 413에서, 파일 시스템은, 제1 LU 블록 모듈에게 제2 LU의 생성 명령을 전달할 수 있다.일 실시 예에 따르면, 어플리케이션은 파일 시스템을 통하지 않고 직접 제1 LUI 블록 모듈에 생성 명령을 전달 할 수 있다. 예를 들면, 동작에서, 어플리케이션은, 제2 LU의 생성 명령을 제1 LU 블록 모듈에게 직접 전달할 수 있다. 일 실시 예에서, 동작 420에서, 제1 LU 블록 모듈은 제2 LU의 생성 명령을 스토리지 장치 드라이버 에게 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 생성을 위한 UFS 명령을 생성할 수 있다. 이하 에서, LU의 생성을 위한 UFS 명령은 생성 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 생성 명령에 포함된 파라미터들에 기반하여, 생 성 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 생성 명령에 포 함된 파라미터들을 포함하는 생성 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 430에서, 스토리지 장치 드라이버는 제2 LU의 생성 UFS 명령을 LU 관리기(35 0)에게 전달할 수 있다. 일 실시 예에서, 동작 440에서, LU 관리기는 제2 LU를 생성할 수 있다. 예를 들면, LU 관리기는 생성 UFS 명령에 기반하여, 제2 LU를 생성할 수 있다. 예를 들면, LU 관리기는 생성 UFS 명령에 포함 된 파라미터들에 기반하여, 제2 LU를 생성할 수 있다. 일 실시 예에서, LU 관리기는 최대 가상 용량에 대응하는 주소 공간(또는, 접근 주소 공간)을 설정할 수 있다. 일 실시 예에서, 동작 450에서, LU 관리기는 스토리지 장치 드라이버에게 생성 UFS 명령에 대한 응답 을 전송할 수 있다. 예를 들면, LU 관리기는, 스토리지 장치 드라이버에게 제2 LU의 생성 결과 를 포함하는 응답을 전송할 수 있다. 일 실시 예에서, 동작 460에서, 스토리지 장치 드라이버는, 제2 LU 블록 모듈을 생성할 수 있다. 예 를 들면, 스토리지 장치 드라이버는, 아래 표 4와 같은 파라미터들이 설정된 제2 LU 디스크립터를 포 함하는 제2 LU 블록 모듈을 생성할 수 있다. 일 실시 예에 따르면, 호스트 장치의 제2 LU 블록 모듈 은 스토리지 장치의 제2 LU를 추상화한 것으로, 제2 LU 블록 모듈은 제2 LU가 생성된 이후에 생성될 수 있다. 표 4 파라미터 명칭 파라미터 값 VLU_type SLU VLU_ID slu0 memory_type SLC PLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB allocated_capacity 0 예를 들면, 제2 LU 디스크립터는 가상 LU(virtual LU, VLU)의 유형이 SLU이고, VLU의 ID가 slu0(즉, 제2 LU)이고, 종속되는 PLU의 ID가 plu0(즉, 제1 LU)이고, 전자 장치가 종료되더라도 유지되며, 용 량 할당 단위는 4MB이고, 최대 가상 용량이 3GB이고, 현재 할당된 용량이 0인 제2 LU의 파라미터들을 설정 할 수 있다. 실시 예에 따라, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 생성 명령에 대한 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 생성 결과를 포함하는 응답 을 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU의 생성 결과에 기반하여, 제1 LU 디 스크립터를 갱신할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제1 LU 디스크립터를 아래 표 5와 같이 갱신할 수 있다. 표 5 파라미터 명칭 파라미터 정보 VLU_type PLU VLU_ID plu0 memory_type TLC SLU slu0 SLU_reserve 0 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU가 생성됨에 따라, 파라미터 SLU의 값이 slu0로 설정되고, 파라미터 SLU_reserve의 값이 0으로 갱신될 수 있다. 이하에서, 전자 장치가 제2 LU에 용량을 할당하는 동작을 설명한다. 도 5a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 5b는, 일 실시 예에 따른 용량 할 당의 일 예를 도시한다. 도 5a 및 도 5b는, 도 1, 도 2, 도 3, 및 도 4를 참조하여 설명될 수 있다. 도 5a 및 도 5b는, 도 4에 따라, 제2 LU 및 제2 LU 블록 모듈이 생성된 이후의 상황을 예시할 수 있 다. 하지만 이에 제한되지 않는다. 도 5의 동작들은 지정된 조건 충족 시 개시될 수 있다. 예를 들면, 도 5의 동작들은 어플리케이션은 용량 확보의 필요, 사용자의 설정, 사용자의 사용 패턴에 따른 메모리 최적화 필 요 시 개시될 수 있다. 예를 들면, 어플리케이션은 추가적인 용량의 확보가 필요한 경우(예: 제1 LU 의 가용 용량이 지정된 가용 용량 이하인 경우), 도 5의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션 은 사용자의 설정에 따른 지정된 환경(예: 사용자가 지정한 동작의 수행 시)에서, 도 5의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션은 사용자의 사용 패턴에 따라, 추가적인 용량의 확보가 필요한 경우(예: 대용량 파일의 다운로드), 도 5의 동작들이 개시될 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 용량 할당 명령을 생성할 수 있다. 예를 들면, 어플 리케이션은 제2 LU의 용량 할당을 위한 파라미터들을 포함하는 용량 할당 명령을 생성할 수 있다. 하 지만 이에 제한되지 않는다. 예를 들면, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)은, 전자 장치의 프로그램 내의 다른 구성 요소들(예: 미들웨어, 및/또는 운영 체제)(또는, 커널)에 의해 생 성될 수 있다. 일 실시 예에서, 어플리케이션(또는, 프로그램 내의 다른 구성 요소들(예: 미들웨어, 및/또는 운영 체제)(또는, 커널))은 지정된 조건 충족 시, 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 가용 용량의 부족, 사용자의 설정, 사용자의 사용 패턴에 따른 메모리 최적화 필요 시 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제1 LU의 가용 용량이 지정된 용량 이하인 경우, 제2 LU 블록 모듈의 용량 할당 명령을 생성할 수 있 다. 예를 들면, 어플리케이션은 사용자의 설정에 따른 지정된 환경(예: 사용자가 지정한 동작의 수행 시) 에서, 제2 LU 블록 모듈의 용량 할당 명령을 생성할 수 있다. 예를 들면, 어플리케이션은 사용자의 사용 패턴에 따라, 추가적인 용량의 확보가 필요한 경우(예: 대용량 파일의 다운로드), 제2 LU 블록 모듈 의 용량 할당 명령을 생성할 수 있다. 일 실시 예에서, 어플리케이션은 아래 표 6과 같은 제2 LU의 용량 할당을 위한 파라미터들을 설정할 수 있다. 표 6 파라미터 명칭 파라미터 값 VLU_ID slu0 size 1GB 예를 들면, 어플리케이션은 VLU의 ID가 slu0(즉, 제2 LU)이고, 할당 요청 용량이 1GB인 제2 LU(38 0)의 용량 할당을 위한 파라미터들을 설정할 수 있다. 예를 들면, SLC로 동작하는 제2 LU에 할당하기 위한 용량 1GB는, TLC로 동작하는 제1 LU의 용량 3GB에 대응할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU의 용량 할당 명령을 제1 LU 블록 모듈에게 전달할 수 있다. 예를 들면, 동작 511에서, 어플리케이션은, 파일 시스템에게 제2 LU의 용량 할당 명령을 전달하고, 동작 513에서, 파일 시스템은, 제1 LU 블록 모듈에게 제2 LU의 용량 할당 명령을 전 달할 수 있다. 일 실시 예에서, 파일 시스템의 용량 할당 명령은 제1 LU에서 이용 가능한 용량(또는, 데이터가 저장되지 않은 메모리 영역의 용량)에 대한 정보를 포함할 수 있다. 하지만 이에 제한되지 않는다. 일 실시 예에서, 동작 521에서, 제1 LU 블록 모듈은 제2 LU 블록 모듈로부터 제2 LU의 용량 할 당 단위(예: 4MB)에 대한 정보를 획득할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU 블록 모듈 에게 용량 할당 단위(예: 4MB)에 대한 정보를 요청하고, 제2 LU 블록 모듈은 요청에 응답하여, 제1 LU 블 록 모듈에게 용량 할당 단위(예: 4MB)에 대한 정보를 전달할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량(또는, 데이터가 저장되지 않은 메 모리 영역의 용량)에 기반하여, 제2 LU에 대한 용량 할당이 가능한지를 판단할 수 있다. 일 실시 예에서, 제1 LU에서 이용 가능한 용량(또는, 데이터가 저장되지 않은 메모리 영역의 용량)에 대한 정보는, 파일 시 스템으로부터 제1 LU에게 전달될 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 할당 요청 용량 이상인 경우, 할당 요청 용량 및 제2 LU에 기 할당 용량을 더한 용량 이상인 경우 또는 환산된 할당 요청 용량 및 제2 LU에 기 할당 용량을 더한 용량 이상인 경우, 제2 LU에 대한 용량 할당이 가능한 것으로 판별할 수 있다. 여기에서, 환산된 할당 요청 용량은 할당 요청 용량이 용량 할당 단위에 기반하여 환산된 용량일 수 있다. 예를 들면, 할당 요청 용량이 용량 할당 단위보다 적은 경우, 환산된 할당 요청 용량은 용량 할당 단위에 대응할 수 있다. 예를 들면, 할당 요청 용량을 용량 할당 단위로 나눌 때 0을 초과하는 나머지가 존재하는 경우, 환산된 할당 요청 용량은 용량 할당 단위 이하의 용량이 추가될 수 있다. 예를 들면, 할당 요청 용량이 5MB이고, 용량 할당 단위가 4MB인 경우, 환산된 할당 요청 용량은 8MB일 수 있다. 일 실시예에 따라, 제2 LU에 대한 메모리 유닛의 용량 할당이 필요한 경우 제1 LU에 할당된 메모리 유닛의 용량을 차용할 수 있다. 일 실시예에서, 파일 시스템(310, 또는 primary LU file system, PLUFS)은 제1 LU를 관 리할 수 있다. 일 실시 예에서, 파일 시스템은, 제1 LU 및 제2 LU에 할당된 용량의 총합이 메모 리 유닛의 용량을 초과하지 않도록 관리할 수 있다. 일 실시 예에서, 파일 시스템은, 어플리케이션 의 용량 할당 요청에 대하여 가용량 계산 시, 파일 시스템의 예약 공간(fs_reserve) 용량에 LU들(예:제1 LU 및/또는 하나 이상의 제2 LU)에 대해 할당된 총 용량(slu_reserve)을 합산한 용량에 기반하여 최종 가용량을 계산할 수 있다. 예를 들어, 최종 가용 용량은 파일 시스템의 가용 용량에서 합산한 용량 (즉, fs_reserve+slu_reserve)을 빼줌으로써 계산될 수 있다. 일 실시예에서, 파일 시스템는 제2 LU에 대한 추가적인 용량 할당없이 제1 LU의 메모리 공간의 일부를 제2 LU에 할당하기 위해, 제2 LU에 할당된 용량의 합이 제1 LU의 총 용량을 초과하지 않도록 관리할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 할당 요청 용량보다 작은 경우, 제2 LU에 대한 용량 할당이 가능하지 않은 것으로 판별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈 은 용량 할당이 가능하지 않은 것으로 판단되면, 어플리케이션에게 용량 할당의 실패를 리턴할 수 있 다. 일 실시 예에서, 동작 525에서, 제1 LU 블록 모듈은 용량 할당 명령을 스토리지 장치 드라이버에게 전달할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 용량 할당이 가능한 것으로 판단되면, 용량 할당 명 령을 스토리지 장치 드라이버에게 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당을 위한 UFS 명령을 생성할 수 있다. 이하에서, LU의 용량 할당을 위한 UFS 명령은 할당 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당 명령에 포함된 파라미터들에 기반하 여, 할당 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할 당 명령에 포함된 파라미터들을 포함하는 할당 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 531에서, 스토리지 장치 드라이버는 제2 LU의 할당 UFS 명령을 리소스 분배기 에게 전달할 수 있다. 도 5b를 참조하면, 리소스 분배기는 메모리 유닛의 전체 메모리 영역(591 및 593) 중 할당 요청 용량 에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 일 실시 예에서, 리소스 분배기는 제1 LU의 전체 가상 메모리 영역(571 및 573) 중 가상 메모리 영역에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 리소스 분배기는 메모리 유닛의 전 체 메모리 영역(591 및 593) 중 할당 요청 용량에 대응하는 메모리 영역을 제2 LU에게 할당할 수 있 다. 예를 들면, 리소스 분배기는 제1 LU에 할당된 메모리 유닛에서 할당 요청 용량에 대응하는 메모리 영역을 제2 LU에게 할당할 수 있다. 일 실시 예에서, 리소스 분배기는 제2 LU의 전 체 가상 메모리 영역(581 및 583) 중 가상 메모리 영역에 메모리 영역을 할당할 수 있다. 도 5b에서, 가상 메모리 영역은 TLC인 제1 LU의 3GB의 용량을 가지고, 가상 메모리 영역은 SLC 인 제2 LU의 1GB의 용량을 가질 수 있다. TLC로 동작하는 메모리 유닛의 메모리 영역은, 제2 LU에 할당됨으로써, SLC로 동작할 수 있다. 일 실시예에 따라, 플래시 저장 장치의 경우, 단위 메모리 셀 마다 저장 가능한 비트의 개수가 다를 수 있다. 예를 들면, 단위 메모리 셀의 전압 레벨을 2개 영역으로 구분하 는 경우, 단위 메모리 셀은 1 개의 비트 정보를 저장하는 것으로 여겨질 수 있다. 예를 들면, 단위 메모리 셀의 전압 레벨을 4개 영역으로 구분하는 경우, 단위 메모리 셀은 2 개의 비트 정보를 저장하는 것으로 여겨질 수 있 다. 예를 들면, 단위 메모리 셀의 전압 레벨을 8개 영역으로 구분하는 경우, 단위 메모리 셀은 3 개의 비트 정 보를 저장하는 것으로 여겨질 수 있다. 단위 메모리 셀에 저장되는 비트의 개수에 따라, 단위 메모리 셀은 SLC, MLC, TLC, 또는 그 이상의 레벨 셀(예: QLC)로 구분될 수 있다. 따라서, 때문에 TLC의 3GB의 용량에 필요한 메 모리 셀들의 개수는, SLC의 1GB의 용량에 필요한 메모리 셀들의 개수와 동일할 수 있다. 이에 따라, SLC로 동작 하는 제2 LU에 1GB를 할당하기 위해서는, TLC로 동작하는 제1 LU에 할당된 3GB의 용량이 요구될 수 있다. 다시 도 5a를 참조하면, 동작 535에서, 리소스 분배기는 스토리지 장치 드라이버에게 할당 UFS 명령 에 대한 응답을 전송할 수 있다. 리소스 분배기는 스토리지 장치 드라이버에게 제2 LU의 할당 결과를 전송할 수 있다. 일 실시 예에서, 동작 540에서, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 할당 결과를 포함 하는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용량 할당 결과를 전송할 수 있다.일 실시 예에서, 제1 LU 블록 모듈은 제1 LU디스크립터(Descriptor)를 갱신할 수 있다. 일 실시 예에 서, 제1 LU 블록 모듈은 용량 할당 결과에 기반하여, 제1 LU 디스크립터를 갱신할 수 있다. 예를 들 면, 제1 LU 블록 모듈은 제1 LU 디스크립터를 아래 표 7과 같이 갱신할 수 있다. 표 7 파라미터 명칭 파라미터 값 VLU_type PLU VLU_ID plu0 memory_type TLC SLU slu0 SLU_reserve 3GB 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU에 1GB(또는, TLC 기준 3GB)가 할당 됨에 따라, 파라미터 SLU_reserve의 값이 3GB로 갱신될 수 있다. 일 실시 예에서, 동작 550에서, 제1 LU 블록 모듈은, 제2 LU 블록 모듈에게 제2 LU 디스크립터(33 1)의 갱신을 요청할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용량 할당 결과를 포함하는 요청을 전송할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 용량 할당 결과에 기반하여, 제2 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제2 LU 블록 모듈은 제2 LU 디스크립터를 아래 표 8과 같이 갱신할 수 있다. 표 8 파라미터 명칭 파라미터 값 VLU_type SLU VLU_ID slu0 memory_type SLC PLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB allocated_capacity 1GB 예를 들면, 제2 LU 디스크립터는 현재 할당된 용량을 0에서 1GB(TLC 기준 3GB)로 갱신할 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 용량 할당 명령에 대한 응답을 파일 시스템으로 전송할 수 있다. 제1 LU 블록 모듈은 파일 시스템에게 제2 LU의 용량 할당 결과를 포함하는 응답을 전송할 수 있다. 일 실시 예에서, 파일 시스템은, 제2 LU에 할당된 메모리 영역에 대응하는 제1 LU의 가상 메모리 영역에 대한 사용이 제2 LU를 통해 이뤄지도록 관리할 수 있다. 예를 들면, 파일 시스템은, 제1 LU 및 제2 LU를 통해 사용되는 전체 용량이 메모리 유닛의 전체 메모 리 영역(591, 593)을 초과하지 않도록 관리할 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 용량 할당 명령에 대한 응답을 어플리케이션으로 전송할 수 있 다. 제1 LU 블록 모듈은 어플리케이션에게 제2 LU의 용량 할당 결과를 포함하는 응답을 전송할 수 있다. 실시 예에 따라, 어플리케이션은, 제2 LU의 최대 가상 용량을 초과하는 용량 할당 명령을 생성할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU의 최대 가상 용량을 초과하는 용량 할당 명령에 기반하여, 제2 LU의 최대 가상 용량을 증가시킬 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU의 최대 가상 용량을 초과하는 용량 할당 명령에 기반하여, 제2 LU의 최대 가상 용량을 초과하는 용량을 제2 LU의 오버 프로비저닝 영역으로 할당할 수 있다. 제2 LU의 오버 프로비저닝은, 도 9a 및 도 9b를 참조하여 설명될 수 있다. 실시 예에 따라, 전자 장치는, 제1 LU 및/또는 제2 LU의 표시를 갱신할 수 있다. 예를 들면, 전 자 장치는, 제1 LU의 사용 중인 용량을 제2 LU에 할당된 용량만큼 증가된 상태를 디스플레이 모 듈에 표시할 수 있다. 이에 따라, 사용자는 제2 LU에 용량을 할당함에도, 제1 LU의 전체 용량이 줄어들지 않는 것으로 인식할 수 있다. 이하에서, 전자 장치가 제2 LU의 용량을 할당 해제하는 동작을 설명한다. 도 6a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 6b는, 일 실시 예에 따른 용량의 할당 해제의 일 예를 도시한다. 도 6c는, 일 실시 예에 따른 용량의 할당 해제의 일 예를 도시한다. 도 6a, 도 6b 및 도 6c는, 도 1, 도 2, 도 3, 도 4, 도 5a, 및 도 5b를 참조하여 설명될 수 있다. 도 6a, 도 6b 및 도 6c는 도 5a, 및 도 5b에 따라, 제2 LU에 용량이 할당된 이후의 상황을 예시할 수 있다. 하지만 이에 제한되지 않는다. 도 6a의 동작들은 지정된 조건 충족 시 개시될 수 있다. 예를 들면, 도 6a 의 동작들은 어플리케이션은 가용 용량의 부족, 사용자의 설정, 사용자의 사용 패턴에 따른 메모리 최적화 필요 시 개시될 수 있다. 예를 들면, 어플리케이션은 제1 LU의 가용 용량이 지정된 용량 이하인 경우, 도 6a의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션은 사용자의 설정에 따른 지정된 환경 (예: 사용자가 지정한 동작의 수행 시)에서, 도 6a의 동작들이 개시될 수 있다. 예를 들면, 어플리케이션 은 사용자의 사용 패턴에 따라, 추가적인 용량의 확보가 필요한 경우(예: 대용량 파일의 다운로드), 도 6a의 동 작들이 개시될 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 용량 할당 해제 명령을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU의 용량 할당 해제를 위한 파라미터들을 포함하는 용량 할당 해제 명령을 생성 할 수 있다. 일 실시 예에서, 어플리케이션은 아래 표 9와 같은 제2 LU의 용량 할당 해제를 위한 파 라미터들을 설정할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 제2 LU 블록 모듈과 관련된 명령 (또는, 요청)은, 전자 장치의 프로그램 내의 다른 구성 요소들(예: 미들웨어, 및/또는 운영 체 제)(또는, 커널)에 의해 생성될 수 있다. 표 9 파라미터 명칭 파라미터 값 VLU_ID slu0 size 500MB 예를 들면, 어플리케이션은 VLU의 ID가 slu0(즉, 제2 LU)이고, 할당 해제 요청 용량이 500MB인 제2 LU의 용량 할당 해제를 위한 파라미터들을 설정할 수 있다. 예를 들면, SLC로 동작하는 제2 LU에 할 당하기 위한 용량 500MB는, TLC로 동작하는 제1 LU의 용량 1.5GB에 대응할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU의 용량 할당 해제 명령을 제1 LU 블록 모듈에게 전달 할 수 있다. 예를 들면, 동작 611에서, 어플리케이션은, 파일 시스템에게 제2 LU의 용량 할당 해제 명령을 전달하고, 동작 613에서, 파일 시스템은, 제1 LU 블록 모듈에게 제2 LU의 용량 할 당 해제 명령을 전달할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 어플리케이션은, 제2 LU 의 용량 할당 해제 명령을 제1 LU 블록 모듈에게 직접 전달할 수 있다. 일 실시 예에서, 동작 621에서, 제1 LU 블록 모듈은 제2 LU 블록 모듈로부터 제2 LU의 용량 할 당 단위(예: 4MB)에 대한 정보를 획득할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU 블록 모듈 에게 용량 할당 단위(예: 4MB)에 대한 정보를 요청하고, 제2 LU 블록 모듈은 요청에 응답하여, 제1 LU 블 록 모듈에게 용량 할당 단위(예: 4MB)에 대한 정보를 전달할 수 있다. 일 실시 예에서, 동작 625에서, 제1 LU 블록 모듈은 용량 할당 해제 명령 또는 환산된 할당 해제 명령을 스토리지 장치 드라이버에게 전달할 수 있다. 여기에서, 환산된 할당 해제 요청 용량은 할당 해제 요청 용 량이 용량 할당 단위에 기반하여 환산된 용량일 수 있다. 예를 들면, 할당 해제 요청 용량이 용량 할당 단위보 다 적은 경우, 환산된 할당 해제 요청 용량은 0일 수 있다. 예를 들면, 할당 해제 요청 용량을 용량 할당 단위 로 나눌 때 0을 초과하는 나머지가 존재하는 경우, 환산된 할당 해제 요청 용량은 용량 할당 단위 이하의 용량 이 감소될 수 있다. 예를 들면, 할당 해제 요청 용량이 6MB이고, 용량 할당 단위가 4MB인 경우, 환산된 할당 해 제 요청 용량은 4MB일 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당 해제를 위한 UFS 명령을 생성할 수 있다. 이하에서, LU의 용량 할당 해제를 위한 UFS 명령은 해제 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당 해제 명령에 포함된 파라미터들에 기 반하여, 해제 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당 해제 명령에 포함된 파라미터들을 포함하는 해제 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 631에서, 스토리지 장치 드라이버는 제2 LU의 해제 UFS 명령을 리소스 분배기 에게 전달할 수 있다. 도 6b를 참조하면, 리소스 분배기는 메모리 유닛의 전체 메모리 영역(591 및 593) 중 할당 해제 요청 용량에 대응하는 메모리 영역을 제2 LU에서 할당 해제(또는, 차감)할 수 있다. 일 실시 예에서, 리소 스 분배기는 제2 LU의 가상 메모리 영역 중 가상 메모리 영역에 대응하는 메모리 영역 을 제2 LU에서 할당 해제(또는, 차감)할 수 있다. 리소스 분배기는 메모리 유닛의 전체 메 모리 영역(591 및 593) 중 할당 해제 요청 용량에 대응하는 메모리 영역을 제1 LU에게 할당할 수 있 다. 예를 들면, 리소스 분배기는 제2 LU에 할당된 메모리 유닛에서 할당 해제 요청 용량에 대응 하는 메모리 영역을 제1 LU에게 할당할 수 있다. 일 실시 예에서, 리소스 분배기는 제1 LU(37 0)의 전체 가상 메모리 영역(571 및 573) 중 가상 메모리 영역에 메모리 영역을 할당할 수 있다. 도 6b에서, 가상 메모리 영역은 TLC인 제1 LU의 1.5GB의 용량을 가지고, 가상 메모리 영역은 SLC인 제2 LU의 500MB의 용량을 가질 수 있다. SLC로 동작하는 메모리 유닛의 메모리 영역은, 제1 LU에 할당됨으로써, TLC로 동작할 수 있다. 도 6c를 참조하면, 할당 해제 결과, 메모리 유닛의 메모리 영역(591 및 691)은 제1 LU의 가상 메모리 영역(571, 671)에 할당되고, 메모리 영역은 제2 LU의 가상 메모리 영역에 할당될 수 있다. 제1 LU의 가상 메모리 영역에 대응하는 메모리 유닛의 메모리 영역은 제2 LU의 가상 메모 리 영역에 할당될 수 있다. 다시 도 6a를 참조하면, 동작 635에서, 리소스 분배기는 스토리지 장치 드라이버에게 해제 UFS 명령 에 대한 응답을 전송할 수 있다. 리소스 분배기는 스토리지 장치 드라이버에게 제2 LU의 할당 해제 결과를 전송할 수 있다. 일 실시 예에서, 동작 640에서, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 할당 해제 결과를 포함하는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용 량 할당 해제 결과를 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 용량 할당 해제 결과에 기반하여, 제1 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제1 LU 디스크립터를 아래 표 10과 같이 갱신할 수 있다. 표 10 파라미터 명칭 파라미터 값 VLU_type PLU VLU_ID plu0 memory_type TLC SLU slu0 SLU_reserve 1.5GB 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU에 500MB(또는, TLC 기준 1.5GB)가 할당 해제됨에 따라, 파라미터 SLU_reserve의 값이 3GB에서 1.5GB로 갱신될 수 있다. 일 실시 예에서, 동작 650에서, 제1 LU 블록 모듈은, 제2 LU 블록 모듈에게 제2 LU 디스크립터(33 1)의 갱신을 요청할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용량 할당 해제 결과를 포함하는 요청을 전송할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 용량 할당 해제 결과에 기반하여, 제2 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제2 LU 블록 모듈은 제2 LU 디스크립터를 아래 표 11과 같이 갱신할 수 있다. 표 11 파라미터 명칭 파라미터 값 VLU_type SLU VLU_ID slu0 memory_type SLC PLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB allocated_capacity 1.5GB 예를 들면, 제2 LU 디스크립터는 현재 할당된 용량을 1GB에서 500MB(TLC 기준 1.5GB)로 갱신할 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 용량 할당 해제 명령에 대한 응답을 파일 시스템으로 전송할 수 있다. 제1 LU 블록 모듈은 파일 시스템에게 제2 LU의 용량 할당 해제 결과를 포함하는 응답을 전송할 수 있다. 일 실시 예에서, 파일 시스템은, 제2 LU에 할당 해제된 메모리 영역에 대응하 는 제1 LU의 가상 메모리 영역에 대한 접근을 허용할 수 있다. 예를 들면, 파일 시스템은, 제1 LU의 가상 메모리 영역에 대한 IOR를 허용할 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 용량 할당 해제 명령에 대한 응답을 어플리케이션으로 전송할 수 있다. 제1 LU 블록 모듈은 어플리케이션에게 제2 LU의 용량 할당 해제 결과를 포함하는 응답 을 전송할 수 있다. 실시 예에 따라, 전자 장치는, 제1 LU 및/또는 제2 LU의 표시를 갱신할 수 있다. 예를 들면, 전 자 장치는, 파일 시스템를 통해 획득되는, 제1 LU 및/또는 제2 LU의 용량 정보에 기반하여, 디스플레이 모듈에 제1 LU 및/또는 제2 LU의 가용량 정보를 표시할 수 있다. 예를 들 면, 전자 장치는, 파일 시스템를 통해 획득되는 용량 정보에 기반하여, 제1 LU의 사용 중인 용 량을 제2 LU에서 할당 해제된 용량만큼 감소된 상태를 디스플레이 모듈에 표시할 수 있다. 실시 예에 따라, 리소스 분배기는 제2 LU의 일부 영역에 대한 디스카드(discard) 명령을 획득할 수 있다. 일 실시 예에서, 리소스 분배기는 디스카드 요청된 제2 LU의 가상 메모리 영역에 대응 하는 메모리 영역을 할당 해제할 수 있다. 일 실시 예에서, 리소스 분배기는 디스카드 요청된 제2 LU의 가상 메모리 영역에 대응하는 메모리 영역에 유효 데이터가 저장되지 않은 경우, 디스카드 요청된 메모리 영역을 할당 해제할 수 있다. 일 실시 예에서, 리소스 분배기는 디스카드 요청된 메모 리 영역을 제1 LU의 가상 메모리 영역에 할당할 수 있다. 이하에서, 전자 장치가 제2 LU에 입출력 요청(IOR)을 처리하는 동작을 설명한다. 도 7은, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 7은, 도 1, 도 2, 도 3, 도 4, 도 5a, 및 도 5b를 참조하여 설명될 수 있다. 도 7은 도 5a, 및 도 5b에 따라, 제2 LU에 용량이 할당된 이후의 상황을 예시할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 입출력 요청(IOR)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈에 대한 읽기 요청을 생성할 수 있다. 예를 들면, 어플 리케이션은 제2 LU에 저장된 데이터에 대한 읽기 요청을 생성할 수 있다. 예를 들면, 읽기 요청은 데 이터가 저장된 제2 LU의 주소에 대한 정보를 포함할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블 록 모듈에 대한 쓰기 요청을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU에 데이터에 대 한 쓰기 요청을 생성할 수 있다. 예를 들면, 쓰기 요청은 데이터가 저장될 제2 LU의 주소에 대한 정보를 포함할 수 있다. 이하에서, 명시적 쓰기 처리를 수행할 수 있는 제2 LU에 대한 포함하는 쓰기 요청은 명시 적 쓰기 요청으로 지칭될 수 있다. 또한, 명시적 쓰기 처리를 수행하지 않는(또는, 묵시적 쓰기 처리를 수행하 는) 제2 LU에 대한 쓰기 요청은 묵시적 쓰기 요청으로 지칭될 수 있다.일 실시 예에서, 어플리케이션은, 제2 LU에 대한 IOR(예: 읽기 요청, 명시적 쓰기 요청, 또는 묵시적 쓰기 요청)을 제2 LU 블록 모듈에게 전달할 수 있다. 예를 들면, 동작 710에서, 어플리케이션은, 제2 LU에 대한 IOR을 제2 LU 블록 모듈에게 전달할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 어플리케이션은, 가상의 파일 시스템에게 제2 LU에 대한 IOR을 전달하고, 가상의 파일 시스템은, 제2 LU 블록 모듈에게 제2 LU에 대한 IOR을 전달할 수 있다. 여기에서, 가상의 파일 시스템은, 파일 시스 템과 구분될 수 있다. 일 실시 예에서, 가상의 파일 시스템은, 제2 LU에 대해 마운트된 파일 시스템 일 수 있다. 일 실시 예에서, 가상의 파일 시스템은, 제2 LU가 가상의 LU임을 나타내는 정보에 기반하여, 제2 LU가 가상의 LU인 것을 인지할 수 있다. 일 실시 예에서, 동작 720에서, 제2 LU 블록 모듈은 IOR을 스토리지 장치 드라이버에게 전달할 수 있 다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU에 대한 입출력을 위한 UFS 명령을 생성할 수 있다. 이하에서, LU에 대한 입출력을 위한 UFS 명령은 IO UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 IOR에 포함된 파라미터들에 기반하여, IO UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 IOR에 포함된 파라미터 들을 포함하는 IO UFS 명령을 생성할 수 있다. 예를 들면, 스토리지 장치 드라이버는 읽기 요청에 포함된 제2 LU의 주소 정보를 포함하는 IO UFS 명령을 생성할 수 있다. 예를 들면, 스토리지 장치 드라이버 는 쓰기 요청에 포함된 데이터 또는 쓰기 요청에 포함된 제2 LU의 주소를 포함하는 IO UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 730에서, 스토리지 장치 드라이버는 제2 LU의 IO UFS 명령을 LU 관리기에 게 전달할 수 있다. 일 실시 예에서, LU 관리기는 IO UFS 명령을 처리할 수 있다. 일 실시 예에서, LU 관리기는 제2 LU 블록 모듈에 대한 IO UFS 명령을 처리할 수 있다. 일 실시 예에서, LU 관리기는 읽기 요청에 기반한 IO UFS 명령에 기반하여, IO UFS 명령에 포함된 제2 LU의 주소의 데이터를 읽을 수 있다. 일 실시 예에서, 동작 740에서, LU 관리기는 IO UFS 명령에 따 라 읽힌 데이터를 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, 제2 LU의 주소에 메 모리 유닛의 영역이 할당되지 않은 경우, LU 관리기는 지정된 데이터(예: 0(또는, 제로 데이터))를 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, 제2 LU의 주소에 메모리 유닛의 영역이 할당되지 않은 경우, LU 관리기는 읽기가 실패함을 나타내는 응답을 스토리지 장치 드라이버 에게 반환할 수 있다. 일 실시 예에서, 제2 LU의 주소에 메모리 유닛의 영역이 할당된 경우, LU 관리 기는 읽힌 데이터를 포함하는 응답을 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, LU 관리기는 쓰기 요청에 기반한 IO UFS 명령에 기반하여, IO UFS 명령에 포함된 제2 LU의 주소에 데이터를 쓸 수 있다. 일 실시 예에서, 동작 740에서, LU 관리기는 IO UFS 명령에 따라 쓰기 결과를 포함하는 응답을 스토리지 장치 드라이버에게 전송할 수 있다. 일 실시 예에서, 제2 LU 의 주소에 메모리 유닛의 영역이 할당되지 않은 경우, LU 관리기는 데이터의 쓰기의 실패를 나타내는 응답(또는, 가용량 부족 에러)을 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, 제2 LU의 주소에 메모리 유닛의 영역이 할당된 경우, LU 관리기는 데이터의 쓰기의 성공을 나타내는 응답을 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, 제2 LU의 주소에 메모리 유닛 의 영역이 할당되고, 실제 해당 주소의 메모리에 데이터의 쓰기가 성공한 경우, LU 관리기는 데이터 의 라이트의 성공을 나타내는 응답을 스토리지 장치 드라이버에게 반환할 수 있다. 일 실시 예에서, 동작 750에서, 스토리지 장치 드라이버는, 제2 LU 블록 모듈에게 IOR의 결과를 나타 내는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제2 LU 블록 모듈에게 읽기 요청의 결과를 나타내는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제2 LU 블록 모듈에게 쓰기 요청의 결과 를 나타내는 응답을 전송할 수 있다. 일 실시 예에서, 동작 760에서, 제2 LU 블록 모듈은, 어플리케이션에게 IOR의 결과를 나타내는 응답 을 전송할 수 있다. 제2 LU 블록 모듈은, 어플리케이션에게 읽기 요청의 결과를 나타내는 응답을 전 송할 수 있다. 제2 LU 블록 모듈은, 어플리케이션에게 쓰기 요청의 결과를 나타내는 응답을 전송할 수 있다.실시 예에 따라, 제2 LU 블록 모듈은 IOR의 결과를 나타내는 응답을 저장할 수 있다. 예를 들면, 제2 LU 블록 모듈은 메모리 유닛의 영역이 할당된 제2 LU의 주소 공간에 대한 정보를 저장할 수 있다. 예를 들면, 제2 LU 블록 모듈은 읽기 및/또는 쓰기가 실패한 주소에 대한 정보를 저장할 수 있다. 예를 들 면, 제2 LU 블록 모듈은 읽기 및/또는 쓰기가 성공한 주소에 대한 정보를 저장할 수 있다. 실시 예에 따라, 어플리케이션은, 제2 LU에 대한 IOR(예: 읽기 요청, 명시적 쓰기 요청, 또는 묵시적 쓰기 요청)을 제2 LU 블록 모듈에게 전달할 수 있다. 제2 LU 블록 모듈은 제2 LU의 주소 공간에 대한 저장된 정보에 기반하여, IOR(예: 읽기 요청, 명시적 쓰기 요청, 또는 묵시적 쓰기 요청)을 처리할 수 있 다. 예를 들면, 제2 LU 블록 모듈은 메모리 유닛의 영역이 할당되지 않은 제2 LU의 주소에 대한 IOR(예: 읽기 요청, 명시적 쓰기 요청, 또는 묵시적 쓰기 요청)의 경우, 입출력이 실패함을 나타내는 응답(또는, 가용량 부족 에러)을 어플리케이션에게 전송할 수 있다. 일 실시예에 따르면, 제2 LU 블록 모 듈은 메모리 유닛의 영역이 할당된 제2 LU의 주소에 대한 IOR(예: 읽기 요청, 명시적 쓰기 요청, 또는 묵시적 쓰기 요청)의 경우, IOR을 스토리지 장치 드라이버에게 전달할 수 있다. 실시 예에 따라, 제2 LU 블록 모듈은 묵시적 쓰기가 실패함을 나타내는 응답을 스토리지 장치 드라이버 로부터 수신함에 응답하여, 제2 LU에 용량을 할당할 수 있다. 묵시적 쓰기가 실패함에 응답하여, 제2 LU에 용량을 명시적 또는 묵시적으로 할당하는 동작은, 도 8a 및 도 8b를 참조하여 설명될 수 있다. 이하에서, 전자 장치가 제2 LU에 추가 용량을 할당하는 동작을 설명한다. 도 8a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 8b는, 일 실시 예에 따른 용량 할 당의 일 예를 도시한다. 도 8a, 및 도 8b는, 도 1, 도 2, 도 3, 도 4, 도 5a, 도 5b, 및 도 7을 참조하여 설명될 수 있다. 도 8a, 및 도 8b는, 도 7의 동작 710에 따라, 제2 LU 블록 모듈이 어플리케이션으로부터 제2 LU에 대한 묵시적 쓰기 요청을 획득한 이후의 상황을 예시할 수 있다. 하지만 이에 제한되지 않는다. 도 8a, 및 도 8b는, 도 7의 동작 750에 따라, 제2 LU 블록 모듈이 스토리지 장치 드라이버로부터 제2 LU에 대한 묵시적 쓰기 요청에 대한 실패를 나타내는 응답을 획득한 이후의 상황을 예시할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 묵시적 쓰기 요청을 위한 추가 할당 요청 용량을 식별할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU의 용량 할당 단위(예: 4MB)에 기반하여, 묵시적 쓰기 요 청한 위해 추가 할당 요청 용량을 식별할 수 있다. 여기에서, 추가 할당 요청 용량은 쓰기를 위한 데이터의 크 기가 용량 할당 단위에 기반하여 환산된 용량일 수 있다. 예를 들면, 쓰기를 위한 데이터의 크기가 용량 할당 단위보다 적은 경우, 추가 할당 요청 용량은 용량 할당 단위에 대응할 수 있다. 예를 들면, 쓰기를 위한 데이터 의 크기를 용량 할당 단위로 나눌 때 0을 초과하는 나머지가 존재하는 경우, 추가 할당 요청 용량은 용량 할당 단위 이하의 용량이 추가될 수 있다. 예를 들면, 쓰기를 위한 데이터의 크기가 5MB이고, 용량 할당 단위가 4MB 인 경우, 추가 할당 요청 용량은 8MB일 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU의 추가 용량 할당 명령을 제1 LU 블록 모듈에게 전 달할 수 있다. 예를 들면, 동작 810에서, 제2 LU 블록 모듈은 제2 LU의 추가 용량 할당 명령을 제1 LU 블록 모듈에게 전달할 수 있다. 일 실시 예에서, 동작 821에서, 제1 LU 블록 모듈은 파일 시스템으로부터 제1 LU에서 이용 가능 한 용량에 대한 정보를 획득할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능 한 용량(또는, 데이터가 저장되지 않은 영역의 용량)에 기반하여, 제2 LU에 대한 추가 용량 할당이 가능한 지를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 추가 할당 요청 용량 이상인 경 우, 제2 LU에 대한 용량 할당이 가능한 것으로 판별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 추가 할당 요청 용량 및 제2 LU에 기 할당 용량을 더한 용량 이상인 경우, 제2 LU에 대한 용량 할당이 가능한 것으로 판별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 추가 할당 요청 용량보다 작은 경우, 제2 LU에 대한 용량 할당이 가능하지 않은 것으로 판별할 수 있다. 일 실시 예에서, 제1 LU 블록 모 듈은 제1 LU에서 이용 가능한 용량이 추가 할당 요청 용량 및 제2 LU에 기 할당 용량을 더한 용 량 보다 작은 경우, 제2 LU에 대한 용량 할당이 가능하지 않은 것으로 판별할 수 있다. 일 실시 예에서,제1 LU 블록 모듈은 추가 용량 할당이 가능하지 않은 것으로 판단되면, 제2 LU 블록 모듈에게 추가 용량 할당의 실패를 리턴할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 용량 할당의 실패를 나타내는 응답을 수신함에 기반하여, 어플리케이션에게 묵시적 쓰기의 실패를 리턴할 수 있다. 일 실시 예에서, 동작 823에서, 제1 LU 블록 모듈은 추가 용량 할당 명령을 스토리지 장치 드라이버 에게 전달할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 추가 용량 할당이 가능한 것으로 판단되면, 추 가 용량 할당 명령을 스토리지 장치 드라이버에게 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 추가 용량 할당을 위한 UFS 명령을 생성할 수 있다. 이하에서, LU의 추가 용량 할당을 위한 UFS 명령은 추가 할당 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 추가 용량 할당 명령에 포함된 파라미터들에 기 반하여, 추가 할당 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 추가 용량 할당 명령에 포함된 파라미터들을 포함하는 추가 할당 UFS 명령을 생성할 수 있다. 예를 들면, 추가 용량 할당 명령에 포함된 파라미터들은 용량이 추가 할당되는 VLU의 ID(즉, slu0), 및 추가 할당 요청 용량(즉, 묵시적 쓰기를 위한 데이터의 크기)을 포함할 수 있다. 일 실시 예에서, 동작 825에서, 스토리지 장치 드라이버는 제2 LU의 추가 할당 UFS 명령을 리소스 분 배기에게 전달할 수 있다. 도 8b를 참조하면, 리소스 분배기는 메모리 유닛의 전체 메모리 영역(591 및 593) 중 추가 할당 요청 용량에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 일 실시 예에서, 리소 스 분배기는 제1 LU의 전체 가상 메모리 영역(571 및 573) 중 가상 메모리 영역에 대응하는 메 모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 리소스 분배기는 메모리 유닛 의 전체 메모리 영역(591 및 593) 중 추가 할당 요청 용량에 대응하는 메모리 영역을 제2 LU에게 할 당할 수 있다. 예를 들면, 리소스 분배기는 제1 LU에 할당된 메모리 유닛에서 추가 할당 요청 용량에 대응하는 메모리 영역을 제2 LU에게 할당할 수 있다. 일 실시 예에서, 리소스 분배기는 제2 LU의 전체 가상 메모리 영역(581 및 583) 중 가상 메모리 영역에 메모리 영역을 할당할 수 있다. 도 8b에서, 추가 용량 할당 결과, 메모리 유닛의 메모리 영역은 제1 LU의 가상 메모리 영역 에 할당되고, 메모리 영역(593 및 893)은 제2 LU의 가상 메모리 영역(581 및 881)에 할당될 수 있다. 제1 LU의 가상 메모리 영역에 대응하는 메모리 유닛의 메모리 영역은 제2 LU의 가상 메모리 영역에 할당될 수 있다. 제2 LU의 가상 메모리 영역은 메모리 유닛의 용량이 할당되지 않을 수 있다. 다시 도 8a를 참조하면, 동작 827에서, 리소스 분배기는 스토리지 장치 드라이버에게 추가 할당 UFS 명령에 대한 응답을 전송할 수 있다. 리소스 분배기는 스토리지 장치 드라이버에게 제2 LU의 추 가 용량 할당 결과를 전송할 수 있다. 일 실시 예에서, 동작 829에서, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 추가 용량 할당 결 과를 포함하는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU(38 0)의 추가 용량 할당 결과를 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 용량 할당 결과에 기반하여, 제1 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU에 추가 용량이 할당됨에 따라, 파라미터 SLU_reserve의 값을 갱신할 수 있다. 일 실시 예에서, 동작 831에서, 제1 LU 블록 모듈은, 제2 LU 블록 모듈에게 추가 용량 할당 결과를 포함하는 요청을 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은, 제2 LU 디스크립터의 갱신을 요청할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 용량 할당 결과에 기반하여, 제2 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제2 LU 디스크립터는 현재 할당된 용량을 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 추가 용량이 할당됨에 응답하여, 제2 LU에 대한 묵시적 쓰기 요 청을 처리할 수 있다. 예를 들면, 제2 LU 블록 모듈은 도 7의 IOR을 처리하는 동작을 수행할 수 있다. 일 실시 예에서, 동작 833에서, 제2 LU 블록 모듈은 묵시적 쓰기 요청을 스토리지 장치 드라이버에게 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU에 대한 묵시적 쓰기를 위한 UFS 명령을 생성할 수 있다. 이하에서, LU에 대한 묵시적 쓰기를 위한 UFS 명령은 묵시적 쓰기 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 묵시적 쓰기 요청에 포함된 파라미터들에 기반 하여, 묵시적 쓰기 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 835에서, 스토리지 장치 드라이버는 제2 LU의 묵시적 쓰기 UFS 명령을 LU 관리 기에게 전달할 수 있다. 일 실시 예에서, LU 관리기는 묵시적 쓰기 UFS 명령을 처리할 수 있다. 일 실시 예에서, LU 관리기는 제2 LU 블록 모듈에 대한 묵시적 쓰기 UFS 명령을 처리할 수 있다. 일 실시 예에서, LU 관리기는 묵시적 쓰기 UFS 명령에 기반하여, 제2 LU에 데이터를 쓸 수 있다. 일 실시 예에서, LU 관리기는 묵시적 쓰기 UFS 명령에 기반하여, 추가 할당 용량에 대응하는 주소에 데이터를 쓸 수 있다. 일 실시 예에서, 동작 837에서, LU 관리기는 묵시적 쓰기 UFS 명령에 따라 쓰기 결과를 포함 하는 응답을 스토리지 장치 드라이버에게 전송할 수 있다. 일 실시 예에서, 동작 839에서, 스토리지 장치 드라이버는, 제2 LU 블록 모듈에게 묵시적 쓰기의 결 과를 나타내는 응답을 전송할 수 있다. 일 실시 예에서, 동작 840에서, 제2 LU 블록 모듈은, 어플리케이션에게 묵시적 쓰기의 결과를 나타내 는 응답을 전송할 수 있다. 이하에서, 전자 장치가 제2 LU에 오버 프로비저닝을 할당하는 동작을 설명한다. 도 9a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 9b는, 일 실시 예에 따른 용량 할 당의 일 예를 도시한다. 도 9a, 및 도 9b는, 도 1, 도 2, 도 3, 도 4, 도 5a, 및 도 5b를 참조하여 설명될 수 있다. 도 9a, 및 도 9b는, 도 5a, 및 도 5b에 따라, 제2 LU에 용량이 할당된 이후의 상황을 예시할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 용량 할당 명령을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 최대 가상 용량을 초과하는 용량 할당 명령을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU의 용량 할당을 위한 파라미터들을 포함하는 용량 할당 명령을 생성할 수 있다. 일 실시 예에서, 어플리케이션은 아래 표 6과 같은 제2 LU의 용량 할당을 위 한 파라미터들을 설정할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)은, 전자 장치의 프로그램 내의 다른 구성 요소들(예: 미들웨어, 및/또는 운영 체제)(또는, 커널)에 의해 생성될 수 있다. 표 12 파라미터 명칭 파라미터 값 VLU_ID slu0 size 3GB OP 0 예를 들면, 어플리케이션은 VLU의 ID가 slu0(즉, 제2 LU)이고, 할당 요청 용량이 3GB인 제2 LU(38 0)이고, 오버 프로비저닝(OP)이 아님을 나타내는 용량 할당을 위한 파라미터들을 설정할 수 있다. 예를 들면, SLC로 동작하는 제2 LU에 할당하기 위한 용량 3GB는, TLC로 동작하는 제1 LU의 용량 9GB에 대응할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU의 용량 할당 명령을 제1 LU 블록 모듈에게 전달할 수 있다. 예를 들면, 동작 911에서, 어플리케이션은, 파일 시스템에게 제2 LU의 용량 할당 명령을 전달하고, 동작 913에서, 파일 시스템은, 제1 LU 블록 모듈에게 제2 LU의 용량 할당 명령을 전 달할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 어플리케이션은, 제2 LU의 용량 할당 명령 을 제1 LU 블록 모듈에게 직접 전달할 수 있다. 일 실시 예에서, 동작 921에서, 제1 LU 블록 모듈은 제2 LU 블록 모듈로부터 제2 LU의 용량 할 당 단위(예: 4MB)에 대한 정보를 획득할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU 블록 모듈 에게 용량 할당 단위(예: 4MB)에 대한 정보를 요청하고, 제2 LU 블록 모듈은 요청에 응답하여, 제1 LU 블 록 모듈에게 용량 할당 단위(예: 4MB)에 대한 정보를 전달할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량(또는, 데이터가 저장되지 않은 영 역의 용량)에 기반하여, 제2 LU에 대한 용량 할당이 가능한지를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 할당 요청 용량이 제2 LU에 대한 최대 가상 용량을 초과하는지 를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU에 대한 용량 할당이 가능한 경우, 할당 요청 용량이 제2 LU에 대한 최대 가상 용량을 초과하는지를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 할당 가능 요청 용량과 제2 LU에 기 할당 용량을 더한 용량이 제2 LU에 대한 최대 가상 용량을 초과하는지를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 할당 가능 요청 용량에 기반하여, 제2 LU의 최대 가상 용량을 초과하는 용량을 식별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 할당 가능 요청 용량과 제2 LU에 기 할당 용량을 더한 용량에서 제2 LU의 최대 가상 용량을 초과하는 용량을 식별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제2 LU에 대한 용량 할당이 가능하지 않은 것으로 판단되는 경우, 할당 가능 요청 용량과 제2 LU에 기 할당 용량을 더한 용량에서 제2 LU의 최대 가상 용량을 초과하는 용량을 식별할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 최대 가상 용량을 초과하는 용량을 제2 LU의 오버 프로비저닝을 위한 용량으로 설정하기 위한 용량 할당 명령을 생성할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 최 대 가상 용량을 초과하지 않는 용량을 제2 LU에 할당하기 위한 용량 할당 명령을 생성할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 최대 가상 용량을 초과하는 용량을 제2 LU의 오버 프로비저닝을 위한 용 량으로 설정하고, 최대 가상 용량을 초과하지 않는 용량을 제2 LU에 할당하기 위한 용량 할당 명령을 생성 할 수 있다. 일 실시 예에서, 동작 925에서, 제1 LU 블록 모듈은 용량 할당 명령을 스토리지 장치 드라이버에게 전달할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당을 위한 UFS 명령을 생성할 수 있다. 이하에서, LU의 용량 할당을 위한 UFS 명령은 할당 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할당 명령에 포함된 파라미터들에 기반하 여, 할당 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 용량 할 당 명령에 포함된 파라미터들을 포함하는 할당 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 931에서, 스토리지 장치 드라이버는 제2 LU의 할당 UFS 명령을 리소스 분배기 에게 전달할 수 있다. 도 9b를 참조하면, 리소스 분배기는 메모리 유닛의 전체 메모리 영역(591 및 593) 중 할당 요청 용량 에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 일 실시 예에서, 리소스 분배기는 제1 LU의 전체 가상 메모리 영역(571 및 573) 중 가상 메모리 영역에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 리소스 분배기는 메모리 유닛의 전 체 메모리 영역(591 및 593) 중 할당 요청 용량에 대응하는 메모리 영역 중 일부 용량을 제2 LU에게 할당할 수 있다. 리소스 분배기는 메모리 유닛의 메모리 영역 중 제2 LU의 전체 가상 메모 리 영역(581, 583)을 초과하는 용량을 제2 LU의 오버 프로비저닝을 위한 메모리 영역으로 설정할 수 있다. 예를 들면, 리소스 분배기는 제1 LU에 할당된 메모리 유닛에서 할당 요청 용량에 대응하는 메모 리 영역을 제2 LU에게 할당 및/또는 제2 LU의 오버 프로비저닝 영역으로 설정할 수 있다. 도 9b에서, 할당 결과, 메모리 유닛의 메모리 영역은 제1 LU의 가상 메모리 영역에 할당되 고, 메모리 영역은 제2 LU의 가상 메모리 영역에 할당될 수 있다. 메모리 유닛의 메모리 영역의 일부 용량은 제2 LU의 가상 메모리 영역에 할당되고, 메모리 영역의 나머지 용량은 제2 LU의 오버 프로비저닝을 위한 메모리 영역로 설정될 수 있다. 도 9b에서, 가상 메모리 영역은 TLC인 제1 LU의 9GB의 용량이고, 가상 메모리 영역은 SLC인 제 2 LU의 2GB의 용량이고, 오버 프로비저닝을 위한 메모리 영역은 SLC인 제2 LU의 1GB의 용량일 수 있다. TLC로 동작하는 메모리 유닛의 메모리 영역은, 제2 LU에 할당됨으로써, SLC로 동작할 수 있다. 다시 도 9a를 참조하면, 동작 935에서, 리소스 분배기는 스토리지 장치 드라이버에게 할당 UFS 명령 에 대한 응답을 전송할 수 있다. 리소스 분배기는 스토리지 장치 드라이버에게 제2 LU의 할당 결과를 전송할 수 있다. 일 실시 예에서, 동작 940에서, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 할당 결과를 포함 하는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용량 할당 결과를 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 용량 할당 결과에 기반하여, 제1 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제1 LU 디스크립터를 아래 표 13과 같이 갱신할 수 있다. 표 13 파라미터 명칭 파라미터 값 VLU_type PLU VLU_ID plu0 memory_type TLC SLU slu0 SLU_reserve 12GB 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU에 3GB(또는, TLC 기준 9GB)가 추가 할당됨에 따라, 파라미터 SLU_reserve의 값이 4GB로 갱신될 수 있다. 일 실시 예에서, 동작 950에서, 제1 LU 블록 모듈은, 제2 LU 블록 모듈에게 제2 LU 디스크립터(33 1)의 갱신을 요청할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 용량 할당 결과를 포함하는 요청을 전송할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 용량 할당 결과에 기반하여, 제2 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제2 LU 블록 모듈은 제2 LU 디스크립터를 아래 표 14와 같이 갱신할 수 있다. 표 14 파라미터 명칭 파라미터 값 VLU_type SLU VLU_ID slu0 memory_type SLC PLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB allocated_capacity 3GB overprovisioning_capacity 1GB 예를 들면, 제2 LU 디스크립터는 현재 할당된 용량을 1에서 3GB(TLC 기준 9GB)로 갱신되고, 오버 프로비저 닝 용량은 1GB(TLC 기준 3GB)가 할당될 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 용량 할당 명령에 대한 응답을 어플리케이션으로 전송할 수 있 다. 제1 LU 블록 모듈은 어플리케이션에게 제2 LU의 용량 할당 결과를 포함하는 응답을 전송할 수 있다. 이하에서, 전자 장치가 제2 LU의 메모리 유형을 변경하는 동작을 설명한다. 도 10a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 10b는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 10c는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 10a, 도 10b 및 도 10c는, 도 1, 도 2, 도 3, 도 4, 도 5a, 및 도 5b를 참조하여 설명될 수 있다. 도 10a, 도 10b 및 도 10c는, 도 5a, 및 도 5b에 따라, 제2 LU에 용량이 할당된 이후의 상황을 예시할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU 블록 모듈과 관련된 명령(또는, 요청)을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU 블록 모듈의 메모리 유형 변경 명령을 생성할 수 있다. 예를 들면, 어플리케이션은 제2 LU의 메모리 유형 변경을 위한 파라미터들을 포함하는 메모리 유형 변경 명령을 생성할 수 있다. 일 실시 예에서, 어플리케이션은 아래 표 15와 같은 제2 LU의 메모리 유형 변경을 위한 파라미터들을 설정할 수 있다. 표 15 파라미터 명칭 파라미터 값 VLU_ID slu0 memory_type TLC 예를 들면, 어플리케이션은 VLU의 ID가 slu0(즉, 제2 LU)이고, 메모리 유형이 TLC인 제2 LU의 메모리 유형 변경을 위한 파라미터들을 설정할 수 있다. 일 실시 예에서, 어플리케이션은, 제2 LU의 메모리 유형 변경 명령을 제1 LU 블록 모듈에게 전 달할 수 있다. 예를 들면, 동작 1011에서, 어플리케이션은, 파일 시스템에게 제2 LU의 메모리 유형 변경 명령을 전달하고, 동작 1113에서, 파일 시스템은, 제1 LU 블록 모듈에게 제2 LU의 메 모리 유형 변경 명령을 전달할 수 있다. 하지만 이에 제한되지 않는다. 예를 들면, 어플리케이션은, 제2 LU의 메모리 유형 변경 명령을 제1 LU 블록 모듈에게 직접 전달할 수 있다. 일 실시 예에서, 동작 1121에서, 제1 LU 블록 모듈은 제2 LU 블록 모듈로부터 제2 LU의 용량 할당 단위(예: 4MB)에 대한 정보를 획득할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU의 메모리 유형이 메모리 셀이 보다 많은 비트를 저장하도록 변경되는 경우, 제2 LU 블록 모듈로부터 제2 LU의 용량 할당 단위(예: 4MB)에 대한 정보를 획득할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU의 메모리 유형이 메모리 셀이 보다 적은 비트를 저장하도록 변경되는 경우, 용량 할당 단위(예: 4MB)에 대한 정보 를 획득하지 않을 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량(또는, 데이터가 저장되지 않은 영 역의 용량)에 기반하여, 제2 LU에 대한 메모리 유형 변경이 가능한지를 판단할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제2 LU의 메모리 유형이 메모리 셀이 보다 많은 비트를 저장하도록 변경되는 경우, 제2 LU에 대한 메모리 유형 변경이 가능한지를 판단할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU에서 이용 가능한 용량이 메모리 유형 변경에 따른 요구 용량 이상인 경우, 제2 LU에 대한 메모리 유형 변경이 가능한 것으로 판별할 수 있다. 여기에서, 요구 용 량은 기 할당 용량이 메모리 셀당 감소되는 비트수를 곱한 값에 대응할 수 있다. 예를 들면, 3GB가 할당되고, TLC로 동작하는 제2 LU의 메모리 유형을 SLC로 변경하기 위해, 3GB * 2(3 비트에서 1 비트를 뺀 값)만큼의 추가 용량이 제2 LU에 할당될 필요가 있다. 일 실시 예에서, 동작 1125에서, 제1 LU 블록 모듈은 메모리 유형 변경 명령을 스토리지 장치 드라이버 에게 전달할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 메모리 유형 변경이 가능한 것으로 판단 되면, 메모리 유형 변경 명령을 스토리지 장치 드라이버에게 전달할 수 있다.일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 메모리 유형 변경을 위한 UFS 명령을 생성할 수 있다. 이하에서, LU의 메모리 유형 변경을 위한 UFS 명령은 변경 UFS 명령으로 지칭될 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 메모리 유형 변경 명령에 포함된 파라미터들에 기반하여, 변경 UFS 명령을 생성할 수 있다. 일 실시 예에서, 스토리지 장치 드라이버는 제2 LU의 메 모리 유형 변경 명령에 포함된 파라미터들을 포함하는 변경 UFS 명령을 생성할 수 있다. 일 실시 예에서, 동작 1131에서, 스토리지 장치 드라이버는 제2 LU의 변경 UFS 명령을 리소스 분배기 에게 전달할 수 있다. 도 10b를 참조하면, 리소스 분배기는 메모리 유닛의 전체 메모리 영역(591 및 593) 중 메모리 유형 변경을 위한 요구 용량에 대응하는 메모리 영역을 제1 LU에서 할당 해제(또는, 차감)할 수 있다. 일 실시 예에서, 동작 1133에서, 리소스 분배기는 LU 관리기에게 데이터의 마이그레이션을 요청할 수 있다. 예를 들면, 리소스 분배기는 LU 관리기에게 제2 LU의 영역에 저장된 데이터를 영역 으로 마이그레이션할 것을 요청할 수 있다. 일 실시 예에서, 리소스 분배기는 LU 관리기에서의 마이그레이션이 완료됨에 응답하여, 제1 LU 와 제2 LU 간의 리소스 분배를 완료할 수 있다. 예를 들면, 리소스 분배기는 제2 LU의 전체 가 상 메모리 영역(581 및 583) 중 가상 메모리 영역에 메모리 유닛의 메모리 영역을 제2 LU에서 할당 해제(또는, 차감)할 수 있다. 예를 들면, 리소스 분배기는 메모리 영역을 제1 LU의 가상 메모리 영역에 할당할 수 있다. 도 10b에서, 가상 메모리 영역은 TLC인 제1 LU의 1GB의 용량이고, 메모리 유형이 변경된 제2 LU의 가상 메모리 영역은 1GB의 용량일 수 있다. SLC로 동작하는 메모리 유닛의 메모리 영역 은, 제1 LU에 다시 할당됨으로써, TLC로 동작할 수 있다. 도 10c를 참조하면, 메모리 유형 변경 결과, 메모리 유닛의 메모리 영역(1091 및 593)은 제1 LU의 가 상 메모리 영역(1071, 573)에 할당되고, 메모리 영역은 제2 LU의 가상 메모리 영역에 할당될 수 있다. 제1 LU의 가상 메모리 영역에 대응하는 메모리 유닛의 메모리 영역은 제2 LU의 가상 메모리 영역에 할당될 수 있다. 다시 도 10a를 참조하면, 동작 1135에서, 리소스 분배기는 스토리지 장치 드라이버에게 변경 UFS 명 령에 대한 응답을 전송할 수 있다. 리소스 분배기는 스토리지 장치 드라이버에게 제2 LU의 할당 결과를 전송할 수 있다. 일 실시 예에서, 동작 1140에서, 스토리지 장치 드라이버는, 제1 LU 블록 모듈에게 할당 결과를 포함 하는 응답을 전송할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 메모리 유형 변경 결과를 전송할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 제1 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제1 LU 블록 모듈은 메모리 유형 변경 결과에 기반하여, 제1 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제1 LU 블록 모듈은 제1 LU 디스크립터를 아래 표 16과 같이 갱신할 수 있다. 표 16 파라미터 명칭 파라미터 값 VLU_type PLU VLU_ID plu0 memory_type TLC SLU slu0 SLU_reserve 1GB 예를 들면, 제1 LU 디스크립터는 제1 LU에 종속되는 제2 LU에 1GB가 할당됨에 따라, 파라미터 SLU_reserve의 값이 3GB에서 1GB로 갱신될 수 있다. 일 실시 예에서, 동작 1150에서, 제1 LU 블록 모듈은, 제2 LU 블록 모듈에게 제2 LU 디스크립터 의 갱신을 요청할 수 있다. 스토리지 장치 드라이버는 제1 LU 블록 모듈에게 제2 LU의 메모리 유형 변경 결과를 포함하는 요청을 전송할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 제2 LU 디스크립터를 갱신할 수 있다. 일 실시 예에서, 제2 LU 블록 모듈은 메모리 유형 변경 결과에 기반하여, 제2 LU 디스크립터를 갱신할 수 있다. 예를 들면, 제2 LU 블록 모듈은 제2 LU 디스크립터를 아래 표 17과 같이 갱신할 수 있다. 표 17 파라미터 명칭 파라미터 값 VLU_type SLU VLU_ID slu0 memory_type TLC PLU plu0 persistence 1 granularity 4MB virtual_capacity 3GB allocated_capacity 1GB 예를 들면, 제2 LU 디스크립터는 메모리 유형을 SLC에서 TLC로 변경할 수 있다. 제2 LU 디스크립터에 따르면, 현재 할당된 용량은 1GB로 동일할 수 있다. 실시 예에 따라, 제1 LU 블록 모듈은 메모리 유형 변경 명령에 대한 응답을 어플리케이션으로 전송할 수 있다. 제1 LU 블록 모듈은 어플리케이션에게 제2 LU의 메모리 유형 변경 결과를 포함하는 응 답을 전송할 수 있다. 도 11은, 일 실시 예에 따른 전자 장치의 동작을 나타내는 흐름도이다. 도 11은 도 1, 도 2, 도 3, 도 4, 도 5a, 도 6a 및 도7을 참조하여 설명될 수 있다. 도 11은 제2 LU의 생 애 주기를 나타낼 수 있다. 도 11을 참조하면, 동작 1110에서, 전자 장치는 VLU(가상 LU, virtual LU)를 생성할 수 있다. 예를 들면, 전자 장치는 가상 LU의 하나로서 제2 LU를 생성할 수 있다. 예를 들면, 전자 장치는 전자 장치 가 부팅됨에 기반하여, 가상 LU(예: 제2 LU)를 생성할 수 있다. 예를 들면, 전자 장치는 런타임 동안(또는, 어플리케이션이 실행되는 동안), 가상 LU(예: 제2 LU)를 생성할 수 있다. 예를 들면, 전 자 장치는 도 4를 통해 예시된 동작들 중 적어도 일부(예: 동작들 420, 430, 440)를 통해 가상 LU(예: 제2 LU)를 생성할 수 있다. 일 실시 예에서, 전자 장치는 가상 LU(예: 제2 LU)에 할당된 메모리 유닛의 메모리 영역을 포맷할 수 있다. 동작 1120에서, 전자 장치는 명령 종류를 판별할 수 있다. 예를 들면, 전자 장치는 어플리케이션 으로부터 생성되는 명령의 종류를 판별할 수 있다. 예를 들면, 전자 장치는 어플리케이션으로부 터 생성되는 스왑 명령의 종류를 판별할 수 있다. 예를 들면, 스왑은 메모리의 휘발성 메모리에 저장 된 데이터를 스토리지 장치로 저장(또는, 스왑 아웃)하거나, 또는 스토리지 장치에 저장된 데이터를 휘발성 메모리에 저장(또는, 스왑 인)하는 동작을 의미할 수 있다. 일 실시예에 따라, 파일 시스템없 이 블록 모듈에 직접 접근하는 프로그램, 및/또는 프로그램의 동작에 추가적인 메모리 공간을 가상으로 생성하 는 스왑 기법이 활용될 수 있다. 일 실시예에 따라, 호스트 장치 내에서 LU(예: 제1 LU)의 리소스를 동적으로 관리할 수 있는 파일 시스템에도 추가적인 메모리 공간을 가상으로 생성하는 스왑 기법이 활용될 수 있다. 일 실시예에 따라 제1 LU를 스왑 장치로 사용하기 위한 스왑을 수행할 수 있다. 예컨데 스왑은 휘발성 메모리 부족시, 휘발성 메모리에 저장된 데이터를 별도의 스왑 장치에 저장하는 메모리 관리 기법일 수 있다. 일 실시예에 따라 호스트 장치는, 부팅 시 스왑 장치로 지정된 LU(예: 제1 LU)를 포맷한 후 활 성화(On)하여 스왑-아웃(또는, 쓰기), 및/또는 스왑-인(또는, 읽기)를 수행할 수 있다. 이후 호스트 장치 는, 종료 시 스왑을 비활성화할 수 있다. 동작 1120에서, 전자 장치는 명령이 쓰기 명령인 경우, 동작 1130을 수행할 수 있다. 동작 1120에서, 전자 장치는 명령이 스왑 아웃 명령인 경우, 동작 1130을 수행할 수 있다. 동작 1120에서, 전자 장치는 명 령이 읽기 명령인 경우, 동작 1150을 수행할 수 있다. 동작 1120에서, 전자 장치는 명령이 스왑 인 명령인경우, 동작 1150을 수행할 수 있다. 동작 1130에서, 전자 장치는 가상 LU에 자원(resource)을 할당할 수 있다. 예를 들면, 전자 장치는 가상 LU(예: 제2 LU)에 메모리 유닛의 메모리 영역에 따른 자원을 할당할 수 있다. 예를 들면, 전자 장치는 도 5a를 통해 예시된 동작들 중 적어도 일부(예: 동작들 525, 531)를 통해 가상 LU(예: 제2 LU)에 메모리 영역에 따른 자원을 할당할 수 있다. 동작 1140에서, 전자 장치는 쓰기를 수행할 수 있다. 예를 들면, 전자 장치는 가상 LU(예: 제2 LU)에 데이터를 쓸 수 있다. 예를 들면, 전자 장치는 도 7을 통해 예시된 동작들 중 적어도 일부(예: 동작들 720, 730)를 통해 가상 LU(예: 제2 LU)에 데이터를 쓸 수 있다. 동작 1150에서, 전자 장치는 읽기를 수행할 수 있다. 예를 들면, 전자 장치는 가상 LU(예: 제2 LU)에 저장된 데이터를 읽을 수 있다. 예를 들면, 전자 장치는 도 7을 통해 예시된 동작들 중 적어도 일부(예: 동작들 720, 730)를 통해 가상 LU(예: 제2 LU)에 저장된 데이터를 읽을 수 있다. 동작 1160에서, 전자 장치는 가상 LU에 할당된 자원을 해제할 수 있다. 예를 들면, 전자 장치는 가상 LU(예: 제2 LU)에 할당된 메모리 유닛의 메모리 영역에 따른 자원을 해제할 수 있다. 예를 들면, 전자 장치는 도 6a를 통해 예시된 동작들 중 적어도 일부(예: 동작들 625, 631)를 통해 가상 LU(예: 제2 LU)에 할당된 메모리 영역에 따른 자원을 해제할 수 있다. 일 실시 예에서, 전자 장치는 가상 LU(예: 제2 LU)에 할당된 메모리 유닛의 메모리 영역 중 유휴 영역에 따른 자원을 해제할 수 있다. 여기에서, 유휴 영역은, 데이터가 기록되지 않은 영역일 수 있다. 동작 1170에서, 전자 장치는 가상 LU의 제거 요청을 판별할 수 있다. 예를 들면, 전자 장치는 어플리 케이션으로부터 생성되는 명령이 제거 요청인지를 판별할 수 있다. 동작 1170에서, 전자 장치는 요청이 제거 요청인 경우, 동작 1180을 수행할 수 있다. 동작 1170에서, 전자 장치는 요청이 가상 LU(예: 제2 LU)의 제거 요청인 경우, 동작 1180을 수행할 수 있다. 동작 1170에 서, 전자 장치는 요청이 제거 요청이 아닌 경우, 동작 1120을 수행할 수 있다. 동작 1180에서, 전자 장치 는 요청이 가상 LU(예: 제2 LU)의 제거 요청이 아닌 경우, 동작 1120을 수행할 수 있다. 도 12는, 일 실시 예에 따른 전자 장치의 동작을 나타내는 흐름도이다. 도 12는 도 1, 도 2, 도 3, 도 4, 도 5a, 도 6a 및 도7을 참조하여 설명될 수 있다. 도 12를 참조하면, 동작 1210에서, 전자 장치는 LU를 식별할 수 있다. 예를 들면, 전자 장치는 부팅 동안, LU를 식별할 수 있다. 예를 들면, 전자 장치는 VLU를 식별할 수 있다. 예를 들면, 전자 장치는 제1 LU 및/또는 제2 LU를 식별할 수 있다. 동작 1220에서, 전자 장치는 가상 LU가 존재하는지를 판별할 수 있다. 예를 들면, 전자 장치는 가상 LU가 식별되는지를 판별할 수 있다. 일 실시 예에서, 전자 장치는 가상 LU가 식별되는 경우, 가상 LU에 대 한 블록 모듈을 구성할 수 있다. 예를 들면, 전자 장치는 식별되는 제1 LU 및/또는 제2 LU에 대 한 블록 모듈을 구성할 수 있다. 동작 1220에서, 가상 LU가 식별되는 경우, 전자 장치는 동작 1230을 수행할 수 있다. 동작 1220에서, 가상 LU가 식별되지 않는 경우, 전자 장치는 동작 1250을 수행할 수 있다. 동작 1230에서, 전자 장치는 제1 LU가 존재하는지를 판별할 수 있다. 예를 들면, 전자 장치는 식별된 가상 LU 중 제1 LU가 존재하는지를 판별할 수 있다. 동작 1230에서, 제1 LU가 존재하는 경우, 전자 장치는 동작 1240을 수행할 수 있다. 동작 1230에서, 제1 LU가 존재하지 않는 경우, 전자 장치는 동작 1250을 수행할 수 있다. 동작 1240에서, 전자 장치는 제2 LU가 구성되는지를 판별할 수 있다. 예를 들면, 전자 장치는 제2 LU에 대한 제2 LU 블록 모듈이 생성되는지를 판별할 수 있다. 동작 1240에서, 제2 LU가 구성되는 경우, 전자 장치는 동작 1250을 수행할 수 있다. 동작 1230에서, 제2 LU가 구성되지 않는 경우, 전자 장치는 동작 1240을 다시 수행할 수 있다. 동작 1250에서, 프로세서는 파일 시스템을 마운트할 수 있다. 프로세서는 블록 모듈(예: 제1 LU 블록 모듈)를 디렉토리(directory)의 특정 위치(또는, 주소)에 연결할 수 있다. 상술한 바와 같은, 전자 장치는, 프로세서를 포함할 수 있다. 상기 전자 장치는, 복수의 로지컬 파티 션들을 지원할 수 있는 메모리 영역(591, 593)을 포함하는 스토리지 장치를 포함하고, 인스트럭션들을 저 장하는 메모리를 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장 치가: 상기 스토리지 장치에 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션이 설정되고 상기 제1 메모리 영역(591, 593)의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역(591, 593)이 지정된 조건을 만족하는 지 식별하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 지정된 조건이 만족되 는 것으로 식별됨에, 상기 제1 메모리 영역(591, 593) 중 상기 제1 로지컬 파티션 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공 간을 가지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성하기 위한 요청을 상기 스토리지 장치에 전달하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 제2 로지컬 파티션에 할당이 요청된 요청 용량이 상기 제2 로지컬 파티션의 전체 주소 공간(581, 583)보다 큰 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 요청 용량 중 상기 전체 주소 공간(581, 583)을 초과하는 용량의 메모리 영역을 상기 제2 로지컬 파티션의 오버프로비저닝을 위한 메모리 영역으로 할당할 것을 요청하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 메모리 중 휘발성 메모리 영역에 저장된 데이터에 대한 스왑-아웃을 위한 상기 지정된 조건이 만족되는 지 식별하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 스왑-아웃을 위 한 상기 지정된 조건이 만족되는 것으로 식별됨에, 상기 제2 메모리 영역의 할당을 위한 상기 요청을 생성 하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 스토리지 장치가, 상기 제1 메모리 영역(591, 593) 중 상기 데이터가 저장되지 않는 영역 중의 적어도 일부 영역을 상기 제2 메모 리 영역으로 상기 제2 로지컬 파티션에 할당하도록, 상기 요청을 스토리지 장치에 전달하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 스토리지 장치로 부터 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응답을 수신하고, 상기 제2 메모리 영역의 할 당 결과에 따라 상기 제2 로지컬 파티션의 주소 공간에 접근하기 위한 블록 모듈을 생성하도록 야기할 수 있다. 상술한 바와 같은, 스토리지 장치는, 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데 이터를 송수신하기 위한 인터페이싱 회로을 포함할 수 있다. 상기 스토리지 장치는, 메모리 유닛 을 포함하는 비휘발성 메모리를 포함할 수 있다. 상기 스토리지 장치는, 컨트롤러를 포함 할 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모 리 영역(591, 593) 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지 컬 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역(591, 593)에서 상기 제1 로지컬 파티션 외에 상기 제1 용량보다 작은 제2 용량을 갖는 적어도 일부 메모리 영역이 할당되고, 상기 제2 용량 에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 구성될 수 있다. 상기 컨트롤러는, 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주소 공간 을 가지는 상기 제2 로지컬 파티션을 생성하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터 페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응 답을 송신하도록 구성될 수 있다. 상술한 바와 같은, 방법은, 복수의 로지컬 파티션들을 지원할 수 있는 메모리 영역(591, 593)을 포함하는 스토 리지 장치를 포함하는 전자 장치에서 수행될 수 있다. 상기 방법은, 상기 스토리지 장치에 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션이 설 정되고 상기 제1 메모리 영역(591, 593)의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역 (591, 593)이 지정된 조건을 만족하는 지 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 지정된 조건이 만족되는 것으로 식별됨에 기반하여, 상기 제1 메모리 영역(591, 593) 중 상기 제1 로지컬 파티션 외에(inaddition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대 응하는 주소 공간을 가지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성하기 위한 요청을 상기 스토리지 장치에 전달하는 동작을 포함할 수 있다. 상술한 바와 같은, 비-일시적 컴퓨터 판독 가능 기록 매체(non-transitory computer readable storage mediu m)는 인스트럭션들을 포함하는 프로그램을 저장할 수 있다. 상기 인스트럭션들은 복수의 로지컬 파티션들을 지 원할 수 있는 메모리 영역(591, 593)을 포함하는 스토리지 장치를 포함하는 전자 장치의 프로세서 에 의해 실행 시, 상기 전자 장치가: 상기 스토리지 장치에 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 제1 메모리 영역(591, 593)이 할당된 제1 로지컬 파티션이 설정되고 상기 제1 메모리 영역 (591, 593)의 적어도 일부에 데이터가 저장된 상태에서, 상기 제1 메모리 영역(591, 593)이 지정된 조건을 만족 하는 지 식별하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치 가: 상기 지정된 조건이 만족되는 것으로 식별됨에, 상기 제1 메모리 영역(591, 593) 중 상기 제1 로지컬 파티션 외에(in addition to) 상기 제1 용량보다 작은 제2 용량을 갖는 제2 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션을 상기 스토리지 장치에 생성 하기 위한 요청을 상기 스토리지 장치에 전달하도록 야기할 수 있다. 상술한 바와 같은, 방법은, 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신 하기 위한 인터페이싱 회로, 메모리 유닛을 포함하는 비휘발성 메모리를 포함하는 스토리지 장 치에 의해 수행될 수 있다. 상기 방법은, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지컬 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역(591, 593)에서 상기 제1 로지컬 파 티션 외에 상기 제1 용량보다 작은 제2 용량을 갖는 적어도 일부 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 구성될 수 있다. 상기 방법은, 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주소 공간을 가지는 상기 제2 로지컬 파티션을 생성하도록 구성될 수 있다. 상기 방법은, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응답을 송신하도록 구성 될 수 있다. 상술한 바와 같은, 비-일시적 컴퓨터 판독 가능 기록 매체(non-transitory computer readable storage mediu m)는 인스트럭션들을 포함하는 프로그램을 저장할 수 있다. 상기 인스트럭션들은 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신하기 위한 인터페이싱 회로, 메모리 유닛을 포함 하는 비휘발성 메모리를 포함하는 스토리지 장치의 프로세서에 의해 실행 시, 상기 스토리지 장치 가, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 영역(591, 593) 중 제1 용량을 갖는 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 로지컬 파티션에 할당된 상 기 메모리 유닛의 제1 메모리 영역(591, 593)에서 상기 제1 로지컬 파티션 외에 상기 제1 용량보다 작은 제2 용량을 갖는 적어도 일부 메모리 영역이 할당되고, 상기 제2 용량에 대응하는 주소 공간을 가지는 제2 로지컬 파티션의 생성 요청을 획득하도록 야기할 수 있다. 상기 인스트럭션들은 상기 프로세서 에 의해 실행 시, 상기 스토리지 장치가: 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제2 용량에 대응하는 주소 공간을 가지는 상기 제2 로지컬 파티션을 생성하도록 야기할 수 있다. 상기 인 스트럭션들은 상기 프로세서에 의해 실행 시, 상기 스토리지 장치가: 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 로지컬 파티션의 생성 결과를 나타내는 응답을 송신하도록 야기할 수 있다. 상술한 바와 같은, 전자 장치는, 적어도 하나의 파티션을 포함하는 스토리지 장치를 포함할 수 있다. 상기 전자 장치는, 프로세서를 포함할 수 있다. 상기 전자 장치는, 인스트럭션들을 저장하는 메 모리를 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 적어도 하나의 파티션 중 제1 파티션에 할당된 제1 메모리 영역(591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션의 생성 요청을 식별하도록 구성될 수 있다. 상기 인스트럭 션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 생성 요청에 응답하여, 상기 스토리지 장치에게, 상기 생성 요청에서 지정하는 제1 용량에 대응하는 주소 공간(581, 583)을 가지는 상기 제2 파 티션의 생성을 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상 기 전자 장치가 상기 스토리지 장치로부터, 상기 제2 파티션의 생성 결과를 나타내는 응답을 수 신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 생성 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간에 접근하기 위한 블록 모듈을 생성하도 록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 제2 파티션에 대 한 제2 메모리 영역의 할당 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서 에 의해 실행 시, 상기 전자 장치가 상기 할당 요청에 응답하여, 상기 제2 파티션에 할당 요청된 요 청 용량 및 상기 제1 파티션의 가용 용량에 기반하여, 상기 제2 파티션에 대한 할당의 가능 여부를 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 할당이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 제1 파티션의 제1 메 모리 영역(591, 5 중 상기 요청 용량에 해당하는 메모리 영역을 상기 제2 파티션의 상기 제2 메모 리 영역으로 할당할 것을 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실 행 시, 상기 전자 장치가 상기 스토리지 장치로부터, 상기 제2 파티션에 대한 할당 결과를 나타 내는 응답을 수신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 할당 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간(581, 583)을 통해 상기 요청 용량에 대응하는 제2 메모리 용량의 상기 제2 메모리 영역에 접근 가능하도록 상기 블록 모듈을 갱신 하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 할당 결과에 기반하여, 상기 제1 메모리 용량 중 사용 중인 용량이 상기 요청 용량에 대응하는 용량만큼 증가되도록, 상기 제1 파티션 의 다른 블록 모듈을 갱신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 제2 파티션에 할 당된 상기 제2 메모리 용량 중 적어도 일부 용량의 해제 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들 은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 해제 요청에 응답하여, 상기 스토리지 장 치에게, 상기 제2 메모리 영역 중 해제가 요청된 상기 일부 용량에 해당하는 메모리 영역의 해 제를 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치 가 상기 스토리지 장치로부터, 상기 제2 파티션에 대한 해제 결과를 나타내는 응답을 수신하도 록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 해 제 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간(581, 583)을 통해 상기 적어도 일부 용량만큼 감 소된 상기 제2 메모리 용량에 대응하는 상기 제2 메모리 영역에 접근 가능하도록 상기 블록 모듈을 갱신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 해제 결과에 기반하여, 상기 제1 메모리 용량 중 사용 중인 용량이 상기 적어도 일부 용량에 대응하는 용 량만큼 감소되도록, 상기 제1 파티션의 상기 다른 블록 모듈을 갱신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 제2 파티션에 대 한 쓰기 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전 자 장치가 상기 쓰기 요청이 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 쓰기 요청을 전달하 도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 스토리지 장치로부터, 상기 쓰기 요청에 따른 결과를 획득하도록 구성될 수 있다. 상기 인스트럭션들은 상 기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 결과에 기반하여 상기 쓰기 요청이 상기 주소 공간(581, 583)에서 메모리 영역이 할당되지 않은 주소에 관련됨을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 쓰기 요청이 상기 쓰기 요청 이 상기 주소 공간(581, 583)에서 메모리 영역이 할당되지 않은 주소에 기반하여, 상기 쓰기 요청에 대한 에러를 반환하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 쓰기 요청이 상기 쓰기 요청이 상기 주소 공간(581, 583)에서 메모리 영역이 할당되지 않은 주소에 관련됨에 기반하여, 상기 쓰기 요청을 위한 쓰기 용량을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실 행 시, 상기 전자 장치가 상기 쓰기 용량 및 상기 제1 파티션의 상기 가용 용량에 기반하여, 상기 제 2 메모리 영역의 추가 할당의 가능 여부를 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세 서에 의해 실행 시, 상기 전자 장치가 상기 할당이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 제1 파티션의 제1 메모리 영역 중 상기 쓰기 용량에 해당하는 메모리 영역(89 3)을 상기 제2 파티션의 상기 제2 메모리 영역(593, 893)으로 추가 할당할 것을 요청하도록 구성될 수 있 다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 스토리지 장치로부터, 상기 제2 파티션에 대한 추가 할당 결과를 나타내는 응답을 수신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 추가 할당 결과에 기반하여, 상기 스토리지 장치에게, 상기 쓰기 요청을 전달하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 제2 파티션의 다 른 쓰기 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전 자 장치가 상기 다른 쓰기 요청이 상기 주소 공간(581, 583)에서 상기 쓰기 요청에 따른 상기 주소에 관련됨에 기반하여, 상기 스토리지 장치로의 상기 다른 쓰기 요청의 전달 없이, 상기 다른 쓰기 요청에 대 한 에러를 반환하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 제2 파티션의 메 모리 유형에 관한 변경 요청을 식별하도록 구성될 수 있다. 상기 메모리 유형은 상기 제2 메모리 영역의 셀 레벨과 관련될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 변경 요청에 기반하여, 상기 스토리지 장치에게, 상기 제2 파티션의 상기 메모리 유형의 변경을 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 스토리지 장치로부터, 상기 제2 파티션에 대한 상기 메모리 유형의 변경 결과를 나타내는 응답 을 수신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치(10 1)가 상기 변경 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간(581, 583)을 통해 상기 메모리 유형 이 변경된 상기 제2 파티션의 상기 제2 메모리 영역에 접근 가능하도록 상기 블록 모듈을 갱신 하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 변경 결과에 기반하여, 상기 제1 파티션의 상기 제1 메모리 용량이 상기 변경 결과에 따라 상기 제2 메모 리 용량에서 변경되는 용량만큼 변경되도록, 상기 제1 파티션의 상기 다른 블록 모듈을 갱신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 변경 요청에 따른 셀 레벨이 상기 제2 파티션의 셀 레벨보다 낮음에 응답하여, 상기 제2 파티션의 상기 제2 메모리 용량 및 상기 제1 파티션의 상기 가용 용량에 기반하여, 상기 메모리 유형의 변경의 가능 여부를 식별하도록 구 성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 메모리 유형의 변경이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 제2 파티션의 상기 메모리 유형의 변경을 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 요청 용량이 상기 제1 용량보다 큰 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 요청 용량 중 상기 제1 용량을 초 과하는 용량의 메모리 영역을 상기 제2 파티션의 오버프로비저닝을 위한 메모리 영역으로 할당할 것을 요 청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 메모리에 저장된 데이 터에 대한 스왑-아웃 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 스왑-아웃 요청에 응답하여, 상기 제2 메모리 영역의 할당 요청을 생성하 도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가: 상기 전자 장치가 부팅 됨에 응답하여, 상기 제2 파티션의 상기 생성 요청을 생성하도록 구성될 수 있다. 상술한 바와 같은, 방법은 적어도 하나의 파티션을 포함하는 스토리지 장치를 포함하는 전자 장치에 서 수행될 수 있다. 상기 방법은, 상기 적어도 하나의 파티션 중 제1 파티션에 할당된 제1 메모리 영역 (591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션의 생성 요청을 식별하는 동작을 포 함할 수 있다. 상기 방법은, 상기 생성 요청에 응답하여, 상기 스토리지 장치에게, 상기 생성 요청에서 지 정하는 제1 용량에 대응하는 주소 공간(581, 583)을 가지는 상기 제2 파티션의 생성을 요청하는 동작을 포 함할 수 있다. 상기 방법은, 상기 스토리지 장치로부터, 상기 제2 파티션의 생성 결과를 나타내는 응 답을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 생성 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간에 접근하기 위한 블록 모듈을 생성하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 파티션에 대한 제2 메모리 영역의 할당 요청을 식별하는 동작을 포함할 수 있 다. 상기 방법은, 상기 할당 요청에 응답하여, 상기 제2 파티션에 할당 요청된 요청 용량 및 상기 제1 파티션의 가용 용량에 기반하여, 상기 제2 파티션에 대한 할당의 가능 여부를 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 할당이 가능한 것으로 식별됨에 응답하여, 상기 스토리지 장치에게, 상기 제1 파티션의 제1 메모리 영역(591, 5 중 상기 요청 용량에 해당하는 메모리 영역을 상기 제2 파티션 의 상기 제2 메모리 영역으로 할당할 것을 요청하는 동작을 포함할 수 있다. 상기 방법은, 상기 스토 리지 장치로부터, 상기 제2 파티션에 대한 할당 결과를 나타내는 응답을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 할당 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간(581, 583)을 통해 상 기 요청 용량에 대응하는 제2 메모리 용량의 상기 제2 메모리 영역에 접근 가능하도록 상기 블록 모듈 을 갱신하는 동작을 포함할 수 있다. 상기 방법은, 상기 할당 결과에 기반하여, 상기 제1 메모리 용량 중 사용 중인 용량이 상기 요청 용량에 대응하는 용량만큼 증가되도록, 상기 제1 파티션의 다른 블록 모듈 을 갱신하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 파티션에 할당된 상기 제2 메모리 용량 중 적어도 일부 용량의 해제 요청을 식별하 는 동작을 포함할 수 있다. 상기 방법은, 상기 해제 요청에 응답하여, 상기 스토리지 장치에게, 상기 제2 메모리 영역 중 해제가 요청된 상기 일부 용량에 해당하는 메모리 영역의 해제를 요청하는 동작을 포 함할 수 있다. 상기 방법은, 상기 스토리지 장치로부터, 상기 제2 파티션에 대한 해제 결과를 나타내 는 응답을 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 해제 결과에 기반하여, 상기 제2 파티션의 상기 주소 공간(581, 583)을 통해 상기 적어도 일부 용량만큼 감소된 상기 제2 메모리 용량에 대응하는 상기 제 2 메모리 영역에 접근 가능하도록 상기 블록 모듈을 갱신하는 동작을 포함할 수 있다. 상기 방법은, 상기 해제 결과에 기반하여, 상기 제1 메모리 용량 중 사용 중인 용량이 상기 적어도 일부 용량에 대응하는 용 량만큼 감소되도록, 상기 제1 파티션의 상기 다른 블록 모듈을 갱신하는 동작을 포함할 수 있다. 상술한 바와 같은, 비-일시적 컴퓨터 판독 가능 기록 매체는 인스트럭션들을 포함하는 프로그램을 저장할 수 있 다. 인스트럭션들은 적어도 하나의 파티션을 포함하는 스토리지 장치를 포함하는 전자 장치의 적어도 하나의 프로세서에 의해 실행될 시, 상기 전자 장치가: 상기 적어도 하나의 파티션 중 제1 파티션 에 할당된 제1 메모리 영역(591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션의 생성 요청을 식별하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 생성 요청에 응답하여, 상기 스토리지 장치에게, 상기 생성 요청에서 지정하는 제1 용량 에 대응하는 주소 공간(581, 583)을 가지는 상기 제2 파티션의 생성을 요청하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 스토리지 장치로부터, 상기 제2 파티션의 생성 결과를 나타내는 응답을 수신하도록 구성될 수 있다. 상기 인스트럭션들은 상기 프로세서에 의해 실행 시, 상기 전자 장치가 상기 생성 결과에 기반하여, 상기 제2 파티션의 상 기 주소 공간에 접근하기 위한 블록 모듈을 생성하도록 구성될 수 있다. 상술한 바와 같은, 스토리지 장치는, 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데 이터를 송수신하기 위한 인터페이싱 회로를 포함할 수 있다. 상기 스토리지 장치는 메모리 유닛(39 0)을 포함하는 비휘발성 메모리를 포함할 수 있다. 상기 스토리지 장치는 컨트롤러를 포함할 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 유 닛에 대한 상기 적어도 하나의 파티션 중 제1 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역(591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션의 생성 요청을 획득하도록 구성 될 수 있다. 상기 컨트롤러는, 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제1 용량에 대응 하는 주소 공간(581, 583)을 가지는 상기 제2 파티션을 생성하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션의 생성 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 제1 파티션 의 제1 메모리 영역(591, 593) 중 요청 용량에 해당하는 메모리 영역을 상기 제2 파티션의 상기 제2 메모리 영역으로의 할당을 위한 할당 요청을 획득하도록 구성될 수 있다. 상기 컨트롤러는, 상기 요 청 용량에 해당하는 상기 메모리 영역을 상기 제2 파티션의 상기 제2 메모리 영역으로 할당하도 록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션의 할당 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 제2 파티션 에 할당된 상기 제2 메모리 용량 중 적어도 일부 용량의 해제 요청을 획득하도록 구성될 수 있다. 상기 컨트롤 러는, 상기 해제 요청에 응답하여, 상기 제2 메모리 영역 중 해제가 요청된 상기 일부 용량에 해당하는 메모리 영역을 해제하도록 구성될 수 있다. 상기 컨트롤러는, 상기 해제 요청에 응답하여, 상기 제2 메모리 영역에서 해제된 상기 메모리 영역을 상기 제1 파티션에 반환하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션 의 해제 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 제2 파티션 에 대한 쓰기 요청을 획득하도록 구성될 수 있다. 상기 컨트롤러는, 상기 쓰기 요청이 상기 주소 공간 (581, 583)에서 메모리 영역이 할당되지 않은 주소에 관련됨을 식별됨에 응답하여, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 가용량 부족을 나타내는 결과를 반환하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 제2 파티션 에 대한 읽기 요청을 획득하도록 구성될 수 있다. 상기 컨트롤러는, 상기 읽기 요청이 상기 주소 공간 (581, 583)에서 메모리 영역이 할당되지 않은 주소에 관련됨을 식별됨에 응답하여, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 지정된 데이터를 반환하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 제2 파티션 의 메모리 유형에 관한 변경 요청을 획득하도록 구성될 수 있다. 상기 메모리 유형은 상기 제2 메모리 영역 의 셀 레벨과 관련될 수 있다. 상기 컨트롤러는, 상기 변경 요청에 기반하여, 상기 제1 메모리 영역 (591, 593)에서 상기 제2 파티션의 메모리 용량에 대응하는 메모리 영역을 상기 제2 파티션의 새로운 제2 메모리 영역으로 할당하도록 구성될 수 있다. 상기 컨트롤러는, 기존의 상기 제2 메모리 영역 에 저장된 데이터를 상기 새로운 제2 메모리 영역에 마이그레이션하도록 구성될 수 있다. 상기 컨트 롤러는, 상기 기존의 제2 메모리 영역을 상기 제1 파티션에 반환하도록 구성될 수 있다. 상기 컨트롤러는, 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션에 대한 상기 메모리 유형의 변경 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 상술한 바와 같은, 방법은 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신하 기 위한 인터페이싱 회로, 및 메모리 유닛을 포함하는 비휘발성 메모리를 포함하는 스토리지 장 치에 의해 수행될 수 있다. 상기 방법은 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 파티션에 할당된 상기 메모리 유닛(39 0)의 제1 메모리 영역(591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션의 생성 요청을 획득하는 동작을 포함할 수 있다. 상기 방법은 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제1 용량에 대응하는 주소 공간(581, 583)을 가지는 상기 제2 파티션을 생성하는 동작을 포함할 수 있다. 상기 방법은 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션의 생성 결과를 나 타내는 응답을 송신하는 동작을 포함할 수 있다. 상술한 바와 같은, 비-일시적 컴퓨터 판독 가능 기록 매체는, 인스트럭션들을 포함하는 프로그램을 저장할 수 있다. 인스트럭션들은 전자 장치와 전기적으로 연결되고, 상기 전자 장치와의 데이터를 송수신하기 위한 인터페이싱 회로, 및 메모리 유닛을 포함하는 비휘발성 메모리를 포함하는 스토리지 장치 의 컨트롤러에 의해 실행될 시, 상기 스토리지 장치가 상기 인터페이싱 회로를 통해, 상기 전자 장치로부터, 상기 메모리 유닛에 대한 상기 적어도 하나의 파티션 중 제1 파티션에 할당된 상기 메모리 유닛의 제1 메모리 영역(591, 593)에서 적어도 일부 메모리 영역이 할당되는 제2 파티션 의 생성 요청을 획득하도록 구성될 수 있다. 인스트럭션들은 컨트롤러에 의해 실행될 시, 상기 스토 리지 장치가 상기 생성 요청에 응답하여, 상기 생성 요청에서 지정하는 제1 용량에 대응하는 주소 공간 (581, 583)을 가지는 상기 제2 파티션을 생성하도록 구성될 수 있다. 인스트럭션들은 컨트롤러에 의 해 실행될 시, 상기 스토리지 장치가 상기 인터페이싱 회로를 통해, 상기 전자 장치에게, 상기 제2 파티션의 생성 결과를 나타내는 응답을 송신하도록 구성될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: CD-ROM(compact disc read only memory))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5a 도면5b 도면6a 도면6b 도면6c 도면7 도면8a 도면8b 도면9a 도면9b 도면10a 도면10b 도면10c 도면11 도면12"}
{"patent_id": "10-2023-0138096", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는, 일 실시 예에 따른 전자 장치의 블록도이다. 도 3은, 일 실시 예에 따른 전자 장치의 블록도이다. 도 4는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 5a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 5b는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 6a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 6b는, 일 실시 예에 따른 용량의 할당 해제의 일 예를 도시한다. 도 6c는, 일 실시 예에 따른 용량의 할당 해제의 일 예를 도시한다. 도 7은, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 8a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 8b는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 9a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 9b는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 10a는, 일 실시 예에 따른 전자 장치의 동작의 일 예를 도시한다. 도 10b는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 10c는, 일 실시 예에 따른 용량 할당의 일 예를 도시한다. 도 11은, 일 실시 예에 따른 전자 장치의 동작을 나타내는 흐름도이다. 도 12는, 일 실시 예에 따른 전자 장치의 동작을 나타내는 흐름도이다."}
