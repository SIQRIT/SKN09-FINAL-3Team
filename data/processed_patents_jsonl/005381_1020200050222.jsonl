{"patent_id": "10-2020-0050222", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0131742", "출원번호": "10-2020-0050222", "발명의 명칭": "인공지능형 분산 스토리지 시스템", "출원인": "주식회사 잼픽", "발명자": "오정석"}}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "다수의 사용자가 각각 제공하고 다수의 컨텐츠 제공자로부터 제공된 다수의 동영상 컨텐츠를 저장하도록 구성되어 시청자가 요청한 동영상 컨텐츠를 상기 동영상의 throttle BPS에 맞춰서 시스템의 환경에 따라 적절한 크기의 블록 단위로 데이터를 실시간 전송하는 방식으로 스트리밍하고, 상호 통신하여 파일을 교환하는 다수의 스토리지 노드;상기 컨텐츠 제공자로부터 동영상 컨텐츠의 저장 요청을 수신받고 상기 시청자로부터의 동영상 컨텐츠의 요청에따라 상기 스토리지 노드로부터 독출한 상기 동영상 컨텐츠를 화면에 노출하는 프론트엔드 서버;상기 시청자가 상기 프론트엔드 서버에 접속하여 상기 요청한 동영상 컨텐츠를 재생하는 동안 코인을 채굴하여보상 규정에 따라 상기 동영상 컨텐츠를 저장하고 상기 시청자에게 스트리밍을 제공한 상기 각 스토리지 노드에보상하는 백엔드 API 서버; 및상기 다수의 스토리지 노드의 연결 상태를 실시간으로 모니터링하고, 상기 다수의 스토리지 노드의 컨텐츠 전송량, 동영상이 배분된 개수를 나타내는 시드 및 용량을 주기적으로 체크하고, 상기 체크된 각 스토리지 노드의시드가 최소 보유 시드를 충족하도록 하기 위하여 상기 다수의 스토리지 노드를 상호 동기화하여 저장된 컨텐츠를 교환하도록 제어하고, 상기 컨텐츠 제공자로부터 동영상 컨텐츠 정보와 함께 동영상 컨텐츠가 업로드 신청되면, 상기 다수의 스토리지노드 중 저장 용량이 최소인 스토리지 노드를 우선 순위로 선택하여 상기 동영상 컨텐츠를 등록함과 동시에 상기 동영상 컨텐츠 정보를 위변조 방지용 해시로 변환하여 DB에 저장하고, 상기 프론트엔드 서버에 의해 수신된 상기 시청자가 요청한 상기 동영상 컨텐츠에 대한 위변조 방지용 해시를상기 DB로부터 추출하여 상기 요청된 동영상 컨텐츠의 인증을 수행하고, 상기 모니터링한 각 스토리지 노드의컨텐츠 전송량을 기초로 하여 상기 다수의 스토리지 노드 중 최소 전송량을 갖는 스토리지 노드로부터 독출하여상기 백엔드 API 서버를 통하여 상기 프론트엔드 서버로 전송하여 상기 시청자로 하여금 상기 동영상 컨텐츠를스트리밍 재생하도록 제어하는 다중으로 구성된 스토리지 제어기를 포함하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서, 상기 스토리지 노드는 스토리지 제공 참여자로 언제든 자신이 가지고 있는 컴퓨팅 자원 중 컨텐츠를 저장하기 위한 공간을 제공할 수 있는 자원으로, YouTube처럼 회사에서 운영하는 스토리지 노드가 아니며 스토리지 신청자가 참여할 수 있는 p2p형태의 스토리지 아키텍처인 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서, 상기 throttle BPS은 상기 동영상의 길이 및 재생 시간에 기초하여 계산하고, 상기 시스템의환경은 전송 속도, 메모리, 및 스토리지를 포함하고, 상기 위변조 방지용 해시는 SHA256 해시를 포함하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1 항에 있어서,상기 컨텐츠 제공자 단말로부터 동영상 컨텐츠가 업로드되면, 상기 스토리지 제어기는 상기 동영상 컨텐츠의 제목, 길이 및 재생 시간을 상기 DB에 기록하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1 항에 있어서,상기 스토리지 제어기는 소켓 및 RestAPI 형태로 상기 다수의 스토리지 노드와 통신하여 상기 다수의 스토리지노드의 연결 상태를 실시간으로 모니터링하고,상기 스토리지 노드가 연결 해지된 상태를 검출하고, 스토리지 노공개특허 10-2021-0131742-3-드가 가지고 있는 컨텐츠 정보를 상기 DB로부터 삭제하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서, 다수의 유저가 스토리지 노드를 통하여 동일한 컨텐츠를 요청한 경우, 상기 스토리지 노드는상기 스토리지 제어기에게 스트리밍 실시간 데이터를 제공하고,상기 스토리지 제어기는 많은 요청의 컨텐츠를 인기 동영상에 등록하고, 상기 스토리지 노드에 스토리지간 시드복제 작업을 요청하고, 상기 스토리지 노드들은 스토리지 노드간 파일을 업로드 복제하고, 상기 스토리지 노드간 파일 업로드가 완료되면, 해당 스토리지 노드는 완료 정보를 상기 스토리지 제어기에게 통보하고,상기 많은 요청의 컨텐츠가 인기 동영상 조건을 만족하지 못하는 경우, 상기 스토리지 제어기는 상기 많은 요청의 컨텐츠를 상기 인기 동영상에서 해제하고, 상기 많은 요청의 컨텐츠가 상기 인기 동영상에서 해제되는 경우이미 늘어난 시드를 삭제하는 알고리즘이 서서히 작동하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 항에 있어서,상기 스토리지 제어기는 상기 스토리지 노드의 저장된 용량을 수집하여 평균용량을 계산하고 평균 용량 이상의스토리지 노드를 검출하고, 상기 평균 용량 이상 스토리지 노드에게 초과된 시드를 삭제하라고 명령하고, 상기스토리지 노드는 상기 삭제 명령에 따라 해당 동영상 컨텐츠를 삭제하고,상기 동영상 컨텐츠가 상기 DB에 저장되어 있지 않거나 삭제된 경우, 또는 해시값이 틀린 경우 상기 스토리지제어기는 상기 스토리지 노드에게 해당 파일을 삭제하도록 명령하고,상기 동영상 컨텐츠가 존재하는 동영상이지만 상기 스토리지 노드에 보유하지 않은 것으로 되어 있는 경우 상기스토리지 제어기는 해당 동영상 컨텐츠를 신규로 등록하고,상기 동영상 컨텐츠가 상기 스토리지 노드에는 보유하지 않은 동영상이지만 상기 DB에는 저장되어 있는 경우 상기 스토리지 제어기는 상기 동영상 컨텐츠를 상기 DB로부터 삭제하는 인공지능형 분산 스토리지 시스템."}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일반 사용자가 스토리지를 제공하고 스토리지 제어기에 의해 다수의 동영상 콘텐츠 제작자의 동영상들이 해당 스 토리지에서 운영되는 형태를 취함으로써 분산 스토리지 구축에 따른 비용을 절감할 수 있도록 하는 인공지능형 분산 스토리지 시스템이 제공된다. 인공지능형 분산 스토리지 시스템은 다수의 사용자가 각각 제공하고 다수의 (뒷면에 계속)"}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 분산 스토리지에 관한 것으로, 보다 상세하게는 인공지능형 분산 스토리지 시스템에 관한 것이다."}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "현재 각종 컨텐츠(예를 들어, 음원 또는 동영상 등의 파일)가 대용량화되면서, 이러한 컨텐츠를 저장하기 위한 테라 바이트급의 스토리지가 사용되고 있다. 그러나, 테라 바이트급 대용량 스토리지의 운용이 비효율적이어, 특정 스토리지로 트래픽이 집중되는 문제가 발생한다. 일반적으로 각 스토리지 운용 사이트에서는 제1스토리지 를 설치하고, 이후 발생하는 컨텐츠를 순차적으로 저장한다. 상기 제1스토리지에 저장 공간이 부족해진 경우, 제2 내지 제N 스토리지를 선택적으로 증설하며, 이후 발생하는 컨텐츠를 상기 제2 내지 제N 스토리지에 저장한 다. 하지만, 이러한 경우, 스토리지들은 스토리지 운영 측에서 마련하여야 하므로, 컨텐츠 저장용 용량이 매우 높으 므로, 설치 비용이 많이 드는 단점이 있다. 선행기술문헌 특허문헌"}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "(특허문헌 0001) 특허 등록번호 제 10-1242458 호{등록일: 2013년 03월 06일} 발명의 내용"}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 일반 사용자가 스토리지를 제공하고 스토리지 제어기에 의해 다수의 동영상 콘텐츠 제작자의 동영상 들이 해당 스토리지에서 운영되는 형태를 취함으로써 분산 스토리지 구축에 따른 비용을 절감할 수 있도록 하는 인공지능형 분산 스토리지 시스템을 제공하는데 그 목적이 있다. 본 발명의 다른 목적은 스토리지에 저장된 동영상 컨텐츠를 재생하는 동안 코인을 채굴하여 보상 규정에 따라 스토리지 제공자, 시청자 및 컨텐츠 제공자에게 할당하여 제공함으로써 서비스 활성화를 촉진할 수 있도록 한 인공지능형 분산 스토리지 시스템을 제공하는데 있다."}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명에 따른 인공지능형 분산 스토리지 시스템은 다수의 사용자가 각각 제공하고 다수의 컨텐츠 제공자로부 터 제공된 다수의 동영상 컨텐츠를 저장하도록 구성되어 시청자가 요청한 동영상 컨텐츠를 상기 동영상의 throttle BPS에 맞춰서 시스템의 환경에 따라 적절한 크기의 블록 단위로 데이터를 실시간 전송하는 방식으로 스트리밍하고, 상호 통신하여 파일을 교환하는 다수의 스토리지 노드; 상기 컨텐츠 제공자로부터 동영상 컨텐츠 의 저장 요청을 수신받고 상기 시청자로부터의 동영상 컨텐츠의 요청에 따라 상기 스토리지 노드로부터 독출한 상기 동영상 컨텐츠를 화면에 노출하는 프론트엔드 서버; 상기 시청자가 상기 프론트엔드 서버에 접속하여 상기 요청한 동영상 컨텐츠를 재생하는 동안 코인을 채굴하여 보상 규정에 따라 상기 동영상 컨텐츠를 저장하고 상기 시청자에게 스트리밍을 제공한 상기 각 스토리지 노드에 보상하는 백엔드 API 서버; 및 상기 다수의 스토리지 노드의 연결 상태를 실시간으로 모니터링하고, 상기 다수의 스토리지 노드의 컨텐츠 전송량, 동영상이 배분된 개수를 나타내는 시드 및 용량을 주기적으로 체크하고, 상기 체크된 각 스토리지 노드의 시드가 최소 보유 시드 를 충족하도록 하기 위하여 상기 다수의 스토리지 노드를 상호 동기화하여 저장된 컨텐츠를 교환하도록 제어하 고, 상기 컨텐츠 제공자로부터 동영상 컨텐츠 정보와 함께 동영상 컨텐츠가 업로드 신청되면, 상기 다수의 스토 리지 노드 중 저장 용량이 최소인 스토리지 노드를 우선 순위로 선택하여 상기 동영상 컨텐츠를 등록함과 동시 에 상기 동영상 컨텐츠 정보를 위변조 방지용 해시로 변환하여 DB에 저장하고, 상기 프론트엔드 서버에 의해 수 신된 상기 시청자가 요청한 상기 동영상 컨텐츠에 대한 위변조 방지용 해시를 상기 DB로부터 추출하여 상기 요 청된 동영상 컨텐츠의 인증을 수행하고, 상기 모니터링한 각 스토리지 노드의 컨텐츠 전송량을 기초로 하여 상 기 다수의 스토리지 노드 중 최소 전송량을 갖는 스토리지 노드로부터 독출하여 상기 백엔드 API 서버를 통하여 상기 프론트엔드 서버로 전송하여 상기 시청자로 하여금 상기 동영상 컨텐츠를 스트리밍 재생하도록 제어하는 다중으로 구성된 스토리지 제어기를 포함하는 것을 특징으로 한다. 상기 스토리지 노드는 스토리지 제공 참여자로 언제든 자신이 가지고 있는 컴퓨팅 자원 중 컨텐츠를 저장하기 위한 공간을 제공할 수 있는 자원으로, YouTube처럼 회사에서 운영하는 스토리지 노드가 아니며 스토리지 신청 자가 참여할 수 있는 p2p형태의 스토리지 아키텍처일 수 있다. 상기 throttle BPS은 상기 동영상의 길이 및 재생 시간에 기초하여 계산하고, 상기 시스템의 환경은 전송 속도, 메모리, 및 스토리지를 포함하고, 상기 위변조 방지용 해시는 SHA256 해시를 포함할 수 있다. 상기 컨텐츠 제공자 단말로부터 동영상 컨텐츠가 업로드되면, 상기 스토리지 제어기는 상기 동영상 컨텐츠의 제 목, 길이 및 재생 시간을 상기 DB에 기록할 수 있다. 상기 스토리지 제어기는 소켓 및 RestAPI 형태로 상기 다수의 스토리지 노드와 통신하여 상기 다수의 스토리지 노드의 연결 상태를 실시간으로 모니터링하고,상기 스토리지 노드가 연결 해지된 상태를 검출하고, 스토리지 노 드가 가지고 있는 컨텐츠 정보를 상기 DB로부터 삭제할 수 있다. 다수의 유저가 스토리지 노드를 통하여 동일한 컨텐츠를 요청한 경우, 상기 스토리지 노드는 상기 스토리지 제 어기에게 스트리밍 실시간 데이터를 제공하고, 상기 스토리지 제어기는 많은 요청의 컨텐츠를 인기 동영상에 등 록하고, 상기 스토리지 노드에 스토리지간 시드 복제 작업을 요청하고, 상기 스토리지 노드들은 스토리지 노드 간 파일을 업로드 복제하고, 상기 스토리지 노드간 파일 업로드가 완료되면, 해당 스토리지 노드는 완료 정보를 상기 스토리지 제어기에게 통보하고, 상기 많은 요청의 컨텐츠가 인기 동영상 조건을 만족하지 못하는 경우, 상 기 스토리지 제어기는 상기 많은 요청의 컨텐츠를 상기 인기 동영상에서 해제하고, 상기 많은 요청의 컨텐츠가 상기 인기 동영상에서 해제되는 경우 이미 늘어난 시드를 삭제하는 알고리즘이 서서히 작동할 수 있다.상기 스토리지 제어기는 상기 스토리지 노드의 저장된 용량을 수집하여 평균용량을 계산하고 평균 용량 이상의 스토리지 노드를 검출하고, 상기 평균 용량 이상 스토리지 노드에게 초과된 시드를 삭제하라고 명령하고, 상기 스토리지 노드는 상기 삭제 명령에 따라 해당 동영상 컨텐츠를 삭제하고, 상기 동영상 컨텐츠가 상기 DB에 저장 되어 있지 않거나 삭제된 경우, 또는 해시값이 틀린 경우 상기 스토리지 제어기는 상기 스토리지 노드에게 해당 파일을 삭제하도록 명령하고, 상기 동영상 컨텐츠가 존재하는 동영상이지만 상기 스토리지 노드에 보유하지 않 은 것으로 되어 있는 경우 상기 스토리지 제어기는 해당 동영상 컨텐츠를 신규로 등록하고, 상기 동영상 컨텐츠 가 상기 스토리지 노드에는 보유하지 않은 동영상이지만 상기 DB에는 저장되어 있는 경우 상기 스토리지 제어기 는 상기 동영상 컨텐츠를 상기 DB로부터 삭제할 수 있다."}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 인공지능형 분산 스토리지 시스템은 일반 사용자가 스토리지를 제공하고 다수의 동영상 콘텐츠 제작자의 동영상들이 해당 스토리지에서 운영되는 형태를 취하고 있다. 제공된 스토리지 내 동영상 콘텐츠를 시청하는 과정에서 코인으로 보상을 받게 되며 스토리지 보상은 상대적인 것으로 타인의 스토리지가 많아지고 용량이 많아지면 자신의 보상은 상대적으로 줄어들게 된다. 스토리지 보상 은 지정된 저장 용량을 확보하였다고 보상되지 않으며 일정한 규칙에 따라서 동영상을 저장하고 시청자에게 스 트리밍이 제공한 경우에 한해서 보상이 발생된다. 스토리지 초기 운영 시에는 저장된 동영상이 없기 때문에 보상이 되지 않지만 일정시간(다른 모든 스토리지의 수, 용량 등에 따라 수일에서 수주이상 걸릴 수 있음)이후 동영상이 늘어나면서 보상이 증가하게 된다. 스토리지 보상은 1일 81,000CFX 코인이 모든 스토리지에 적절하게 분배된다. 절대 1/N이 아니며 위에 기록한 일정한 규칙에 따라서 확률적으로 지급된다. 만약 현재 전체 스토리지 용량이 10TB라고 할 경우 본인이 1TB를 지원하게 되면 위 보상액에 1/10인 8,100CFX코인을 받을 확률을 얻게 된다. 예를들면, 보상(마이닝)은 컨텐츠 제공자가 동영상 컨텐츠를 업로드하여 재생하는 경우, 상기 스토리지 제어기 는 28.8초마다 180개의 코인에 대하여 10% 내지 15%를 스토리지 제공자에게 할당하고, 나머지 85% 내지 90%는 컨텐츠 제공자의 입력에 따라 시청자 또는 컨텐츠 제공자에게 할당하여 제공함으로써, 서비스 활성화를 촉진할 수 있도록 한다. 스토리지 운영을 위해서는 별도의 고정 IP가 있어야 되며 적절한 네트워크 트래픽이 요구됩니다. 트래픽이 원활 하지 않는 경우 스토리지가 운영되지 못하므로 보상을 받지 못하게 됩니다. 고정 IP가 없는 경우 공유기의 포트 포워딩 설정을 통해 스토리지 서비스가 가능하다. 본 발명에 따른 보상(마이닝)은 백엔드 서버에서 28.8초마다 스토리지 제어기에서 스토리지, 동영상, 시청자 선 정을 요청하고 컨트롤러는 선정 정보를 백엔드 서버로 전달한다. 스토리지 제어기를 다중으로 구성할 수 있도록 설계하여 동영상 컨텐츠가 수억 건으로 증가하더라도 서비스의 품질을 유지할 수 있도록 설계하였다."}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 실시예에 따른 인공지능형 분산 스토리지 시스템을 첨부 도면을 참조하여 상세히 설명한다. 도 1은 본 발명의 실시예에 따른 인공지능형 분산 스토리지 시스템의 구성을 나타낸 블럭도이다. 도 1을 참조하면, 본 발명의 실시예에 따른 인공지능형 분산 스토리지 시스템은 다수의 스토리지 노드, 프 론트엔드 서버, 백엔드 API 서버, 및 스토리지 제어기를 포함한다. 도 2는 도 1에 도시된 스토리지 제어기와 스토리지 노드들간의 동작을 설명하는 블럭도이다. 다수의 스토리지 노드는 다수의 사용자가 각각 제공하고 다수의 컨텐츠 제공자(미도시)로부터 제공된 다수 의 동영상 컨텐츠를 저장하도록 구성되어 시청자가 요청한 동영상 컨텐츠를 상기 동영상 컨텐츠의 throttle BPS 에 맞춰서 시스템의 환경에 따라 적절한 크기의 블록 단위로 데이터를 실시간 전송하는 방식으로 스트리밍하고, 도 2를 참조하면, 소켓 및 RestAPI 형태로 통신하여 파일을 상호 교환한다. 상기 throttle BPS은 상기 동영상의 길이 및 재생 시간에 기초하여 계산하고, 상기 시스템의 환경은 전송 속도, 메모리, 및 스토리지를 포함할 수 있다. 상기 스토리지 노드는 스토리지 제공 참여자로 언제든 자신이 가지고 있는 컴퓨팅 자원 중 컨텐츠를 저장 하기 위한 공간을 제공할 수 있는 자원을 말하며, YouTube처럼 회사에서 운영하는 스토리지 노드가 아니며 스토 리지 신청자가 참여할 수 있는 p2p형태의 스토리지 아키텍처이다. 스트리밍 한다고 하여 1 Byte씩 전송하는 것이 아니라 수백~수백만 Byte씩 한꺼번에 전송하고 Throttle BPS에 최대한 맞추려고 일정 시간씩 지연시간을 발생시킨다. Throttle BPS의 5배(대략 6초 마다)의 전송이 발생 될 때 마다 상기 스토리지 노드는 상기 스토리지 제어기에게 현재 시청자의 전송 량을 통보한다. 이때 위 지연 시간 때문에 정확하게 6초마다 전송되지 않는다. 특히 저 용량 동영상의 경우는 지연 시간이 매우 길 수 있으므로 상기 스토리지 제어기에 전송량 통보가 정확하게 되지 않을 수 있다. 프론트엔드 서버는 상기 컨텐츠 제공자로부터 동영상 컨텐츠의 저장 요청을 수신받고 상기 시청자로부터의 동영상 컨텐츠의 요청에 따라 상기 스토리지 노드로부터 독출한 상기 동영상 컨텐츠를 화면에 노출한다. 백엔드 API 서버는 상기 시청자가 상기 프론트엔드 서버에 접속하여 상기 요청한 동영상 컨텐츠를 재 생하는 동안 코인을 채굴하여 보상 규정에 따라 상기 동영상 컨텐츠를 저장하고 상기 시청자에게 스트리밍을 제 공한 상기 각 스토리지 노드에 보상한다. 스토리지 제어기는 다중으로 구성되어 상기 다수의 스토리지 노드의 연결 상태를 실시간으로 모니터 링하고, 상기 다수의 스토리지 노드의 컨텐츠 전송량, 동영상이 배분된 개수를 나타내는 시드 및 용량을 주기적으로 체크하고, 상기 체크된 각 스토리지 노드의 시드가 최소 보유 시드를 충족하도록 하기 위하여 상기 다수의 스토리지 노드를 상호 동기화하여 저장된 컨텐츠를 교환하도록 제어한다. 스토리지 제어기는 상기 컨텐츠 제공자로부터 동영상 컨텐츠 정보와 함께 동영상 컨텐츠가 업로드 신청되 면, 상기 다수의 스토리지 노드 중 저장된 총 컨텐츠의 길이 및 재생 시간이 최소인 스토리지 노드를 우선 순위로 선택하여 상기 동영상 컨텐츠를 등록함과 동시에 상기 동영상 컨텐츠 정보를 위변조 방지용 해시로 변환하여 DB에 저장한다. 도 3은 본 발명의 실시예에 따른 동영상 컨텐츠를 스토리지 노드에 업로드하는 동작을 설명하는 도면이다. 도 3을 참조하면, 스토리지 제어기는 상기 프론트엔드 서버에 의해 수신된 상기 시청자가 요청한 상기 동 영상 컨텐츠에 대한 위변조 방지용 해시를 상기 DB로부터 추출하고,상기 요청된 동영상 컨텐츠의 인증을 수행하 고, 즉 허용된 컨텐츠인 지를 인증하고 상기 모니터링한 각 스토리지 노드의 컨텐츠 전송량을 기초로 하여 상기 다수의 스토리지 노드 중 최소 전송량을 갖는(리소스가 여유로운 가장 한가한 컴퓨팅 자원) 스토리지 노드로부터 독출하여 상기 백엔드 API 서버를 통하여 상기 프론트엔드 서버로 전송하여 상기 시 청자로 하여금 상기 동영상 컨텐츠를 스트리밍 재생하도록 제어한다. 사용한 암호화 함수는 SHA 256입니다. 이러한 암호화 함수의 출력 속도가 빠르다는 장점을 갖고 있다. 단방향성 의 성질을 띄고 있는 암호화 방법으로 복호화가 불가능하다. 속도가 빠르기 때문에 인증서, 블록체인 등 많이 사용되고 있다. 기본적인 것은 전체 파일을 읽지 않고, 파일의 앞에서 부터 32,768 바이트까지 읽는다. 만약 1 기가의 파일이 있을 경우 앞에서 부터 32,767 바이트까지 읽는다. 그 후 마지막에 + 1을 하게 된다. 그럼32,768을 가지고 64비트로 나누면 32,768/64 = 512의 배수가 되어진다. 이것을 블록의 크기라고하고 블록의 크 기가 512이다라고 말하기도 한다. 마지막 블록의 64 바이트를 사용하는 것과 같다. 결과값의 예는 f204250d7fd90ceebca11068ecf17318b554d06808b4615ca3e7347e08947816이다. 스토리지 노드는 다양한 사용자의 장치에 구동되기 때문에 수시로 서비스가 중지되거나 재시작되는 경우, 상기 스토리지 제어기는 저장된 동영상 컨텐츠의 SHA256 해시를 추출한다. 상기 스토리지 제어기는 수집된 스트리밍 정보, 즉 어떤 스토리지 노드에서 어떤 동영상을 어떤 시청자가 봤는지를 DB에 기록한다. 상기 컨텐츠 제공자로부터 동영상 컨텐츠가 업로드되면, 상기 스토리지 제어기는 상기 동영상 컨텐츠의 제 목, 길이 및 재생 시간을 상기 DB에 기록한다. 상기 스토리지 제어기는 다중으로 구성되어 동영상 컨텐츠가 수억 건으로 증가하더라도 서비스의 품질을 유지할 수 있도록 설계하였다. 도 4는 본 발명의 실시예에 따른 스토리지 노드간 동기화 동작을 설명하는 블럭도이다. 본 발명에 따른 동영상을 안전하게 보유하기 위해 최소로 보유해야 할 씨드값을 충족하기 위해 다른 스토리지 노드로 동기화를 한다. 또한 스토리지 노드의 자원을 효율적으로 사용하기 위하여 최대 보유 씨드값을 설정하여 불필요한 자원을 낭비하지 않는다. 해당 동영상을 보유하지 않고 용량의 여유가 충분하며 트래픽이 과다하지 않은 스토리지 노드 중 1개를 랜 덤하게 선정하여 동영상 컨텐츠를 전달한다. 최소 보유 씨드를 충족할 때까지 위 작업을 반복한다. 도 4를 참조하면, 예를 들면, 최소 시드가 2개로 설정 되어있는데 '동영상 3' 이 1 곳만 저장 되어있을 상황에 서 스토리지 제어기는 부족 시드를 설정 시간마다 주기적으로 찾는다. 부족한 시드를 발견되면 해당 시 드를 가지고 있는 스토리지 노드 A에게 복제 명령을 한다. 명령을 받은 스토리지 A는 다른 스토리지 노드 B에게 파일을 전송한다. 스토리지 노드간 파일이 전송이 완료되면 스토리지 제어기에 완료 되었다고 알리며 시드 부족한 부분을 만족시킨다. 도 5는 본 발명의 실시예에 따른 위변조 방지용 해시 추출 및 동영상 컨텐츠의 인증 및 스트리밍 재생 동작을 설명하는 블럭도이다. 도 5를 참조하면, 스토리지 제어기 - 스토리지 연결(Connect) 및 파일 동기화 동작에서, 스토리지 제어기 는 스토리지 시작 시 스토리지 동영상 폴더의 모든 동영상 파일을 읽어 각각 SHA256 해시를 추출한다. 동영상 별로 해시 값의 길이가 64 바이트인 경우, 스토리지 제어기는 첫 32,767 바이트를 읽어 SHA256 해시를 추 출한다. 만약, 64 바이트가 아닌 경우 전체 파일에 대한 MD5 해시를 추출한다. 스토리지 제어기는 동영상 폴더의 모든 동영상 파일을 읽어 해시를 추출하고, DB로부터 추출된 해시 를 스토리지 제어기에 전달하고 DB와 비교하여 컨텐츠를 등록한다. 도 6은 본 발명의 실시예에 따른 스토리지 연결 해지 동작을 설명하는 블럭도이다. 도 6을 참조하면, 스토리지 제어기와 스토리지 노드는 소켓을 사용하여 서로간의 통신을 한다. 그러 나 본 발명에서는 회사에서 운영하는 스토리지가 아니고 다양한 사용자의 장치에 구동되기 때문에 수시로 서비 스가 중지된다. 스토리지 제어기는 특정 시간(**분)이상 연결 해지 상태(Disconnect)가 유지된다면 스토리 지 제어기에 저장되어있는 시드 정보를 삭제하여 스토리지 제어기가 불필요한 자원을 사용하지 않도 록 한다. 상기 스토리지 제어기는 소켓 및 RestAPI 형태로 상기 다수의 스토리지 노드와 통신하여 상 기 다수의 스토리지 노드의 연결 상태를 실시간으로 모니터링하고, 스토리지 노드가 연결 해지된 상태를 검출하고, 스토리지 노드 A가 가지고있는 컨텐츠 정보를 삭제한다. 도 7은 본 발명의 실시예에 따른 인기 동영상 지정시 및 컨텐츠 동영상(시드) 복제 동작을 설명하는 블럭도이다. 도 7을 참조하면, 지정된 시간 동안 지정된 회수만큼 동영상 조회가 발생되면 인기 동영상으로 지정된다. 여기 서 의미하는 인기 동영상은 인공지능형 분산 스토리지 시스템의 홈페이지(미도시)의 인기 동영상과는 무관하며 순수하게 조회 회수로만 계산하여 스토리지 노드를 위해서만 지정한다. 인기 동영상이 지정되면 설정되어있는 최소 시드 설정값과 최대 시드 설정값에 의하여 다른 스토리지 노드에게 더 많은 컨텐츠를 복제하라고 요청하도록 서비스 품질을 더 좋도록 유지한다. 다수의 사용자가 스토리지 노드를 통하여 동일한 컨텐츠를 요청한 경우, 상기 스토리지 노드는 상기 스토리지 제어기에게 스트리밍 실시간 데이터를 제공한다. 상기 스토리지 제어기는 많은 요청의 컨텐 츠를 인기 동영상에 등록하고, 상기 스토리지 노드에 스토리지간 시드 복제 작업을 요청하고, 상기 스토리 지 노드들은 스토리지간 파일을 업로드(복제)하고, 상기 스토리지간 파일 업로드가 완료되면, 해당 스토리 지 노드는 완료 정보를 상기 스토리지 제어기에게 통보한다. 상기 많은 요청의 컨텐츠가 인기 동영상 조건을 만족하지 못하는 경우, 상기 스토리지 제어기는 상기 많은 요청 의 컨텐츠를 상기 인기 동영상에서 해제하고, 상기 많은 요청의 컨텐츠이 상기 인기 동영상에서 해제되는 경우 이미 늘어난 시드를 삭제하는 알고리즘이 서서히 작동한다. 도 8은 본 발명의 실시예에 따른 스토리지 제공 용량 비율 평준화 동작을 설명하는 블럭도이다. 도 8을 참조하면, 특정 스토리지 노드에 동영상이 과다하게 저장되는 것을 방지하기 위해 각 스토리지 노 드의 저장된 용량 비율 평균을 계산하여 평균 이상인 스토리지에서 최소 보유 시드를 초과하는 동영상(인 기 동영상 등)을 주기적으로 삭제하여 전체 평균에 도달하도록 한다. 상기 스토리지 제어기는 상기 스토리지 노드의 저장된 용량을 수집하여 평균 용량을 계산하고 평균 용량 이상의 스토리지를 검출하고, 상기 평균 용량 이상 스토리지 노드에게 초과된 시드를 삭제하라고 명 령하고, 상기 스토리지 노드는 상기 삭제 명령에 따라 해당 동영상 컨텐츠를 삭제한다. 상기 동영상 컨텐츠가 상기 DB에 없거나 삭제된 경우, 또는 해시값이 틀린 경우 상기 스토리지 제어기 는 상기 스토리지 노드에게 해당 파일을 삭제하도록 명령한다. 상기 동영상 컨텐츠가 존재하는 동영상이지만 상기 스토리지 노드에 보유하지 않은 것으로 되어 있는 경우 상기 스토리지 제어기는 해당 동영상 컨텐츠를 신규로 등록한다. 상기 동영상 컨텐츠가 스토리지 노드에는 보유하지 않은 동영상이지만 상기 DB에는 저장되어 있는 경 우 상기 스토리지 제어기는 상기 동영상 컨텐츠를 상기 DB로부터 삭제한다. 한편, 본 발명의 상세한 설명 및 첨부도면에서는 구체적인 실시예에 관해 설명하였으나, 본 발명은 개시된 실시"}
{"patent_id": "10-2020-0050222", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 않고 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 있어 본 발명의 기술적 사상을 벗어나지 않는 범위 내에서 여러 가지 치환, 변형 및 변경이 가능하다. 따라서, 본 발명의 범위는 설명된 실시 예에 국한되어 정해져서는 안되며 후술하는 특허청구범위뿐만 아니라 이 특허청구범위와 균등한 것들을 포함하 는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2020-0050222", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 인공지능형 분산 스토리지 시스템의 구성을 나타낸 블럭도이다. 도 2는 도 1에 도시된 스토리지 제어기와 스토리지 노드들간의 동작을 설명하는 블럭도이다. 도 3은 본 발명의 실시예에 따른 동영상 컨텐츠를 스토리지 노드에 업로드하는 동작을 설명하는 도면이다. 도 4는 본 발명의 실시예에 따른 스토리지 노드간 동기화 동작을 설명하는 블럭도이다. 도 5는 본 발명의 실시예에 따른 위변조 방지용 해시 추출 및 동영상 컨텐츠의 인증 및 스트리밍 재생 동작을 설명하는 블럭도이다. 도 6은 본 발명의 실시예에 따른 스토리지 연결 해지 동작을 설명하는 블럭도이다. 도 7은 본 발명의 실시예에 따른 인기 동영상 지정시 및 컨텐츠 동영상(시드) 복제 동작을 설명하는 블럭도이다. 도 8은 본 발명의 실시예에 따른 스토리지 제공 용량 비율 평준화 동작을 설명하는 블럭도이다."}
