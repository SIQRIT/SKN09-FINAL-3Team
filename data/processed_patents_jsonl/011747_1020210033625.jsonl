{"patent_id": "10-2021-0033625", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0128892", "출원번호": "10-2021-0033625", "발명의 명칭": "전자 장치 및 오타 보정 방법", "출원인": "삼성전자주식회사", "발명자": "김태경"}}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,디스플레이;사용자의 터치 입력을 수신하여 터치 데이터를 생성하는 터치 센서를 포함하는 센서 모듈;메모리; 및상기 디스플레이, 상기 센서 모듈 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고,상기 프로세서는,제1시간 필터값 및 제1크기 필터값을 갖는 제1필터를 생성하고,상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터값보다 큰 제2크기 필터값을 갖는 제2필터를생성하고,상기 터치가 발생한 제1지점 및 상기 터치가 종료된 제2지점을 포함하는 상기 터치 데이터를 획득하고,상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이등분하는 중앙선에 가까워지면 상기 제1필터를적용하고, 중앙선에 멀어지면 상기 제2필터를 적용하고,상기 터치 입력의 지속시간이 필터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하고,상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 프로세서는,상기 키보드 상에서 보정 영역을 설정하고,상기 제1지점이 상기 보정 영역에 속하는지 여부를 판단하고,상기 제1지점이 상기 보정 영역에 속하는 경우 필터를 적용하고, 상기 제1지점이 상기 보정 영역에 속하지 않는경우 필터를 적용하지 않도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 프로세서는,상기 제1지점이 키 캡 외부이고 상기 제2지점이 키 캡 내부인 경우 제1필터를 적용하고,상기 제1지점이 키 캡 내부이고 상기 제2지점이 키 캡 외부인 경우 제2필터를 적용하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2022-0128892-3-제 1항에 있어서,상기 터치 데이터는 터치 지점, 터치 지속 시간 및 터치 영역의 크기에 대한 정보를 포함하는 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1항에 있어서,상기 센서 모듈은 걸음걸이 및 손가락 크기를 포함하는 사용자 특성 정보를 생성하고,상기 프로세서는,상기 센서 모듈로부터 상기 사용자 특성 정보를 획득하고,상기 사용자 특성 정보에 기초하여 오타 보정에 적용할 필터를 더 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항에 있어서,상기 프로세서는,상기 디스플레이의 터치 민감도를 결정하고,상기 터치 민감도에 기초하여 오타 보정에 적용할 필터를 더 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1항에 있어서,상기 프로세서는,상기 획득한 터치 데이터를 딥러닝 알고리즘에 입력하여 학습하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서, 상기 딥러닝 알고리즘은 복수의 인공 신경망 레이어(Artificial Neural Network Layer)를 포함하는 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7항에 있어서,상기 프로세서는,상기 딥러닝 알고리즘을 이용하여, 사용자 별로 개인화 알고리즘을 생성하고,상기 개인화 알고리즘에 기초하여 오타 보정에 적용할 필터를 더 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1항에 있어서,공개특허 10-2022-0128892-4-상기 제1필터는 크기 필터값이 8dp인 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1항에 있어서,상기 제2필터는 크기 필터값이 20dp인 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "전자 장치의 오타 보정 방법에 있어서,제1시간 필터값 및 제1크기 필터값을 갖는 제1필터를 생성하는 동작,상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터값보다 큰 제2크기 필터값을 갖는 제2필터를생성하는 동작,터치가 발생한 제1지점 및 상기 터치가 종료된 제2지점을 포함하는 터치 데이터를 획득하는 동작,상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이등분하는 중앙선에 가까워지면 상기 제1필터를적용하고, 중앙선에 멀어지면 상기 제2필터를 적용하는 동작,상기 터치 입력의 지속시간이 필터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하는 동작, 및상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결정하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,상기 키보드 상에서 하나의 보정 영역을 설정하는 동작,상기 제1지점이 상기 보정 영역에 속하는지 여부를 판단하는 동작, 및상기 제1지점이 상기 보정 영역에 속하는 경우 필터를 적용하고, 상기 제1지점이 상기 보정 영역에 속하지 않는경우 필터를 적용하지 않는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 12항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,상기 제1지점이 키 캡 외부이고 상기 제2지점이 키 캡 내부인 경우 제1필터를 적용하는 동작, 및상기 제1지점이 키 캡 내부이고 상기 제2지점이 키 캡 외부인 경우 제2필터를 적용하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 12항에 있어서,공개특허 10-2022-0128892-5-상기 터치 데이터는 터치 지점, 터치 지속 시간 및 터치 영역의 크기에 대한 정보를 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 12항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,걸음걸이 및 손가락 크기를 포함하는 사용자 특성 정보를 생성하는 동작, 및상기 사용자 특성 정보에 기초하여 오타 보정에 적용할 필터를 더 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 12항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,상기 디스플레이의 터치 민감도를 결정하는 동작, 및상기 터치 민감도에 기초하여 오타 보정에 적용할 필터를 더 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 12항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,상기 획득한 터치 데이터를 딥러닝 알고리즘에 입력하여 학습하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서, 상기 딥러닝 알고리즘은 복수의 인공 신경망 레이어(Artificial Neural Network Layer)를 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 18항에 있어서,상기 제1필터 또는 상기 제2필터를 적용하는 동작은,상기 딥러닝 알고리즘을 이용하여, 사용자 별로 개인화 알고리즘을 생성하는 동작,상기 개인화 알고리즘에 기초하여 오타 보정에 적용할 필터를 더 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 디스플레이, 사용자의 터치 입력을 수신하여 터치 데이터를 생성하는 터치 센서를 포함하는 센서 모듈, 메모리, 및 상기 디스플레이, 상기 센서 모듈 및 상기 메모리와 작동적으로 (operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 제1시간 필터값 및 제1크기 필터값을 갖는 제1 (뒷면에 계속)"}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에 개시된 다양한 실시예는 전자 장치에 관한 것이며, 예를 들어 키보드에서 사용자의 터치가 미끄러짐 에 의해 발생하는 오타를 보정하는 방법에 관한 것이다."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이동통신 기술 및 하드웨어 및/또는 소프트웨어 기술의 발달에 따라 휴대용 전자 장치(이하, 전자 장치)는 종래 의 통화 기능에서 나아가 다양한 기능들을 구현할 수 있게 되었다. 전자 장치는 디스플레이에 표시되는 다양한 UI(user interface)를 이용하여 사용자 편의를 위한 기능을 제공할 수 있다. 예를 들어, 전자 장치는 키보드 UI를 제공하고, UI에 대한 사용자 입력에 기초하여 숫자, 문자 또는 심볼을 포 함하는 텍스트를 입력할 수 있다. 전자 장치가 제공하는 키보드 UI는 하나의 형태로 고정되지 않으며, 제공하는 어플리케이션 및 사용 환경에 따라서 키보드 UI가 자유롭게 달라질 수 있다."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "사용자가 전자 장치의 키보드 UI를 이용하다 보면 미끄러짐으로 인하여 오타가 발생할 수 있고, 전자 장치에는 이를 보정하기 위한 필터가 존재할 수 있다. 종래의 전자 장치는 고정된 시간과 크기를 갖고 있는 필터를 운영 하여 오타와 정타가 동시에 필터링 되어 오타 보정 효과가 크지 않을 수 있다. 예를 들어, 오타를 터치했다가 정타로 미끄러지는 경우에도 고정된 필터 기준을 만족하면 필터링하거나, 정타를 터치했다가 오타로 미끄러지는 경우에도 고정된 필터 기준을 만족하지 않으면 필터링하지 않을 수 있다. 따라서 키보드의 정확도가 떨어질 수 있다. 본 문서의 다양한 실시예들은 상기와 같이 전자 장치가 미끄러짐으로 인한 키보드의 오타를 보정하는 경우, 서 로 다른 필터값을 가진 복수의 필터를 제공하여 유연한 필터링을 수행하고, 비교적 정확도가 높은 오타 보정 방 법을 제공함에 그 목적이 있다."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 디스플레이, 사용자의 터치 입력을 수신하여 터치 데이터를 생성하는 터치 센서를 포함하는 센서 모듈, 메모리, 및 상기 디스플레이, 상기 센서 모듈 및 상기 메모리와 작동적으로 (operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 제1시간 필터값 및 제1크기 필터값을 갖는 제1 필터를 생성하고, 상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터값보다 큰 제2크기 필터값 을 갖는 제2필터를 생성하고, 상기 터치가 발생한 제1지점 및 상기 터치가 종료된 제2지점을 포함하는 상기 터 치 데이터를 획득하고, 상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이등분하는 중앙선에 가까 워지면 상기 제1필터를 적용하고, 중앙선에 멀어지면 상기 제2필터를 적용하고, 상기 터치 입력의 지속시간이 필터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하고, 상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결 정할 수 있다. 다양한 실시예에 따른 전자 장치의 오타 보정 방법은, 제1시간 필터값 및 제1크기 필터값을 갖는 제1필터를 생 성하는 동작, 상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터값보다 큰 제2크기 필터값을 갖 는 제2필터를 생성하는 동작, 터치가 발생한 제1지점 및 상기 터치가 종료된 제2지점을 포함하는 터치 데이터를 획득하는 동작, 상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이등분하는 중앙선에 가까워지면 상기 제1필터를 적용하고, 중앙선에 멀어지면 상기 제2필터를 적용하는 동작, 상기 터치 입력의 지속시간이 필 터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하는 동작, 및 상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거 나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결정하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 서로 다른 필터값을 갖는 복수의 필터를 생성하고, 상황에 따라서 적용할 필터를 변경할 수 있다. 따라서 전자 장치는 오타를 터치하였으나 정타로 미끄러진 경우에는 필터값이 작은 필 터를 이용하여 보정할 수 있고, 정타를 터치하였으나 오타로 미끄러진 경우에는 필터값이 큰 필터를 이용하여 필터링할 수 있다. 그 외에 본 발명의 다양한 실시예들로 인하여 얻을 수 있거나 예측되는 효과에 대해서는 본 발명의 실시예에 대 한 상세한 설명에서 직접적으로 또는 암시적으로 개시하도록 한다. 예컨대, 본 발명의 다양한 실시예들에 따라 예측되는 다양한 효과에 대해서는 후술될 상세한 설명 내에서 개시될 것이다."}
{"patent_id": "10-2021-0033625", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워 크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하 여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서 버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메 모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통 신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장 치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안 테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는 다양한 실시예에 따른 미끄러짐으로 인한 오타 발생을 도시한 것이다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치)는 다양한 어플리케이션을 실행할 수 있다. 전자 장치는 어플리케이션 설정에 따라서 다양한 UI를 구성할 수 있다. 예를 들어, 전자 장치 는 디스플레이의 상단에는 어플리케이션의 기능을 수행할 수 있는 UI 오브젝트를 배치하고, 하단에는 키보드를 포함한 버튼을 배치할 수 있다. 다양한 실시예에 따르면, 전자 장치는 키보드에 대한 사용자 입력에 기초하여 문자 또는 숫자를 디스플레 이(예: 도 1의 디스플레이 모듈)에 표시할 수 있다. 전자 장치는 다양한 형태의 키보드를 표시할 수 있으며, 예를 들어 쿼티(qwerty) 키보드, 쿼티 Sym모드, 한글 키보드, 3 4 키보드, 3 4 Sym모드 및 123모드 중 적어도 하나의 형태를 갖는 키보드를 표시할 수 있다. 전자 장치는 디스플레이 상의 사용자 터치 지점을 확인하고, 터치한 지점이 키 캡(Key Cap) 내부인 경우, 해당하는 키 캡에 대응하는 문자 혹은 숫자를 디스플레 이에 표시할 수 있다. 다양한 실시예에 따르면, 전자 장치는 사용자의 터치 입력이 시작되는 지점(이하, 제1지점) 및 터치 입력이 종료되는 지점(이하, 제2지점)의 위치를 확인할 수 있다. 예를 들어, 사용자의 터치는 제1지점 에서 시작되어 제2지점까지 미끄러질 수 있다. 제1지점과 제2지점이 동일한 경우, 미끄러 짐이 발생하지 않은 것일 수 있다. 전자 장치는 사용자가 키보드 상의 제1지점을 포함하는 제1키 캡 을 터치한 것으로 판단하고, 제1키 캡에 대응하는 문자 또는 숫자를 디스플레이에 표시할 수 있다. 또는, 전자 장치는 사용자가 제2지점을 포함하는 제2키 캡을 터치한 것으로 판단하고, 제2키 캡 에 대응하는 문자 또는 숫자를 디스플레이에 표시할 수도 있다. 따라서 미끄러짐이 발생하는 경우, 전자장치는 사용자의 원래 의도와 다른 키 캡이 터치된 것으로 인식할 수 있다. 아래 표 1은 일정 횟수 이상 타이핑을 진행했을 때 미끄러짐이 발생한 횟수와, 미끄러짐으로 오타가 발생한 횟수 및 미끄러짐으로 오타가 보 정된 횟수를 정리한 것이다. 표 1 횟수 퍼센트 총 타이핑 25,095 미끄러짐으로 키가 변경된 횟수 40 0.16% 미끄러짐으로 오타가 발생한 횟수 18 0.07% 미끄러짐으로 오타가 보정된 횟수 22 0.09% 표 1을 참조하면, 총 25,095번의 터치에서 40번 미끄러짐이 발생하였으며, 그 중 미끄러짐으로 오타가 18번 발 생하고, 미끄러짐으로 오타가 보정된 횟수는 22번이다. 다양한 실시예에 따르면, 전자 장치는 오타를 발생 시키는 미끄러짐은 필터링하고, 오타를 보정하는 미끄러짐은 필터링하지 않을 수 있다. 따라서 위 표 1에서는 18번에 대해서는 미끄러짐을 필터링하여 처음 터치한 지점에 대응하는 자판을 선택한 것으로 판단하고, 22번에 대해서는 미끄러짐을 필터링하지 않아 마지막에 터치한 지점에 대응하는 자판을 선택한 것으로 판단할 수 있다. 아래 표 2는 주어진 문구(예: \"동해물과 백두산이 마르고 닳도록 하느님이 보우하사 우리나라 만세 무궁화 삼천 리 화려강산 대한사람 대한으로 길이 보전하세\")를 반복적으로 입력했을 때 터치 좌표별 미끄러짐이 발생한 패 턴에 대한 표이다. 표 2 1 열2 열3 열4 열5 열6 열7 열8 열9 열10 열 1 행→(60%) ↘(36%) 총 25회↓(41%) ↘(33%) 총 12회↓(39%) ↘(28%) 총 46회↓(35%) ←(30%) 총 62회←(38%) ↙(29%) 총 55회0번→(100%) ↑(0%) 총 1회0번↙(85%) ←(14%) 총 7회←(71%) ↙(28%) 총 7회 2 행→(67%) ↘(23%) 총 76회→(47%) ↘(19%) 총 86회→(47%) ↘(11%) 총 67회←(33%) ↓(12%) 총 63회←(47%) ↙(16%) 총 72회←(58%) ↙(14%) 총 55회→(47%) ↙(19%) 총 21회↙(42%) ↓(23%) 총 21회←(50%) ↙(33%) 총 18회←(50%) ↙(35%) 총 14회 3 행 0번 0번↑(100%) ↗(0%) 총 1회↑(71%) ↗(14%) 총 7회←(70%) ↑(20%) 총 10회0번↑(44%) →(44%) 총 9회↑(50%) →(25%) 총 4회↙(100%) ↑(0%) 총 1회←(50%) ↑(25%) 총 4회 4 행 0번 0번 0번 0번↑(50%) ←(50%) 총 2회↑(30%) ↗(23%) 총 13회↑(54%) →(11%) 총 81회↑(57%) ↖(28%) 총 7회↑(25%) →(25%) 총 4회0번 상기 표 2에 입력된 숫자 및 방향은, 해당 자판에서 발생한 미끄러짐에 대하여 가장 많이 미끄러진 각도, 두 번 째로 많이 미끄러진 각도, 및 발생한 총 미끄러짐 횟수이다. 예를 들어, 1행 1열의 자판(예: 'ㅂ'자판)에서는 총 25회 미끄러짐이 발생하였고, 3시 방향으로의 미끄러짐이 그 중 60%로 가장 많이 발생했으며, 5시 방향으로 의 미끄러짐이 36%로 두 번째로 많이 발생했다. 따라서 키보드의 가장 왼쪽 위에 위치하는 1행 1열의 자판에서 는 대체로 오른쪽과 아래 방향으로의 미끄러짐이 많이 발생한다는 것을 알 수 있다. 전자 장치는 키보드에 서 발생하는 미끄러짐에 대한 데이터를 수집하여 메모리(예: 도 1의 메모리)에 저장할 수 있다. 다양한 실시예에 따르면, 사용자는 키보드의 중앙선을 기준으로 하여 왼쪽에 있는 자판은 왼손으로, 오른쪽에 있는 자판은 오른손으로 터치하는 경향이 있다. 일 실시예에 따르면, 키보드 중앙부에서 발생하는 터치에 대해 서는, 왼손으로 터치하는 경우에는 왼쪽으로 미끄러짐이 발생하고, 오른손으로 터치하는 경우에는 오른쪽으로 미끄러짐이 발생할 확률이 높을 수 있다. 예를 들어, 키보드가 한글 자판 형태인 경우, 'ㄱ'자판과 'ㅅ'자판이 인접하여 위치할 수 있다. 사용자는 'ㅅ' 자판을 누르려는 의도로 'ㅅ'자판 내의 제1지점을 터치하였으나, 미끄러져 'ㄱ'자판 내의 제2지점에 서 터치를 종료하는 경우가 발생할 수 있다. 이러한 경우, 전자 장치는 사용자가 제1지점이 아닌 제2 지점을 터치한 것으로 인식할 수 있다. 다양한 실시예에 따르면, 전자 장치는 미끄러짐으로 인한 오타를 방지하기 위하여 미끄러짐을 필터링할 수 있다. 예를 들어, 제2지점에서 터치가 종료되었더라도 제1지점을 터치한 것으로 결정할 수 있다. 예 를 들어, 위의 예시에서, 전자 장치는 'ㄱ'자판에서 터치가 종료되었더라도 미끄러짐을 필터링하고'ㅅ'자 판이 터치된 것으로 인식할 수 있다. 도 3은 다양한 실시예에 따른 전자 장치의 모듈 구성을 도시한 것이다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치 또는 도 2의 전자 장치)는 다양한 소프트 웨어 모듈로 구성될 수 있다. 도 3을 참조하면, 전자 장치는 키보드 매니저(keyboard manager), 어플리케 이션(application), 윈도우 매니저(window manager), 센서 매니저(sensor manager), 이벤트 허 브(event hub), 서피스 플링거(surface flinger), 센서 드라이버(sensor driver), 및 디스플레 이 컨트롤러(Display Driver IC Controller) 중 적어도 하나를 포함하여 구성될 수 있다. 다양한 실시예에 따르면, 키보드 매니저는 키 캡 내부 및 외부에서, 또는 키보드 중심에서 미끄러짐이 발 생했는지 여부를 판단할 수 있다. 일 실시예에 따르면, 키보드 매니저는 오탈자 방지를 위해 제1필터 및 제2필터 중 어느 것을 적용할지 결정할 수 있다. 다양한 실시예에 따르면, 어플리케이션은, 디스플레이의 해상도에 기반하여 적어도 하나의 레이어를 드로 잉할 수 있다. 예를 들어, 어플리케이션은 뷰를 이용하여, 디스플레이의 해상도에 기반한 적어도 하나의 레이어를 드로잉할 수 있다. 다양한 실시예에 따르면, 윈도우 매니저는, 전자 장치의 상태 변경이 식별되면, 전자 장치의 변경된 상태 에 대응하는 디스플레이의 표시 정보를 어플리케이션에게 전달할 수 있다. 예를 들어, 전자 장치의 상태 변경이 식별되면, 상태 변경에 영향을 받는 어플리케이션에게 전자 장치의 변경된 상태에 대응하는 디스플 레이의 표시 정보를 전달할 수 있다. 다양한 실시예에 따르면, 센서 매니저는, 어플리케이션의 설정에 기반하여 센서를 제어할 수 있다. 예를 들어, 키보드에 대한 사용자의 터치 입력이 발생한 경우, 센서 매니저는 터치 센서를 제어하여 터치 데이터를 생성하도록 지시할 수 있다. 다양한 실시예에 따르면, 이벤트 허브는, 센서 모듈(예: 도 1의 센서 모듈)에서 발생하는 이벤트를 표준화한 인터페이스 모듈일 수 있다. 일 실시예에 따르면, 이벤트 허브는 하드웨어 계층에 포함된 복수의 하드웨어 모듈 및 전자 장치의 소프트웨어 사이의 추상화된 계층(hardware abstraction layer, HAL)에 포함될 수 있다. 다양한 실시예에 따르면, 서피스 플링거는 HAL에 위치할 수 있으며, 복수의 레이어들을 합성할 수 있다. 예를 들면, 서피스 플링거는 합성된 복수의 레이어들을 나타내는 데이터를 디스플레이 컨트롤러에게 제공할 수 있다. 다양한 실시예에 따르면, 센서 드라이버는 커널 계층에서 작동하며, 센서 컨트롤러를 제어하는 인터페이스 모듈일 수 있다. 센서 드라이버는 운영체제와 센서를 연결하며, 센서의 구동 방식, 특성 및/또는 기능에 대한 정보를 포함할 수 있다. 센서 드라이버는 센서와 연결된 센서 컨트롤러를 제어하는 인터페이스 모듈 을 포함할 수 있다. 다양한 실시예에 따르면, 디스플레이 컨트롤러는 서피스 플링거로부터 합성된 복수의 레이어들을 나 타내는 데이터를 수신할 수 있으며, 디스플레이 구동 회로에 대응할 수 있다. 예를 들어, 프로세서(예: 도 1의 프로세서)의 구성들은, 하드웨어적으로 구현되거나, 또는 소프트웨어적으로 구현될 수 있다. 도 4는 다양한 실시예에 따른 전자 장치의 블록도이다. 도 4를 참조 하면, 전자 장치는 디스플레이, 센서 모듈, 프로세서 및/또는 메모리를 포함할 수 있으며, 다양한 실시예에서, 도시된 구성 중 일부가 생략 또는 치환 될 수도 있다. 전자 장치는 도 1의 전자 장치의 구성 및/또는 기능 중 적어도 일부를 더 포함할 수 있다. 도시된(또는 도시되지 않은) 전자 장치의 각 구성 중 적어도 일부는 상호 작동적으로(operatively), 기능적으로(functionally) 및/또는 전기적으로 (electrically) 연결될 수 있다. 다양한 실시예에 따르면, 디스플레이는 프로세서의 제어에 따라 다양한 영상을 표시할 수 있다. 디스 플레이는 액정 디스플레이(liquid crystal display(LCD)), 발광 다이오드(light-emitting diode(LED)) 디 스플레이, 마이크로 LED(micro LED) 디스플레이, QD(quantum dot) 디스플레이 또는 유기 발광 다이오드 (organic light-emitting diode(OLED)) 디스플레이 중 어느 하나로 구현될 수 있으며, 이에 한정되지는 않는다. 디스플레이는 사용자의 신체 일부(예: 손가락) 또는 입력 장치(예: 스타일러스 펜)를 이용한 터치 및/또는 근접 터치(또는 호버링) 입력을 감지하는 터치 스크린으로 형성될 수 있다. 디스플레이는 도 1의 디스플레이 모듈의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 다양한 실시예에 따르면, 디스플레이는 적어도 일부가 플렉서블(flexible) 할 수 있으며, 폴더블 (foldable) 디스플레이, 롤러블(rollable) 디스플레이, 슬라이더블(slidable) 디스플레이 또는 스트레처블 (stretchable) 디스플레이로 구현될 수도 있다. 다양한 실시예에 따르면, 터치 센서는 도 1의 센서 모듈의 구성 및/또는 기능 중 적어도 일부를 포함 할 수 있으며, 디스플레이에 대한 사용자의 입력을 수신할 수 있다. 터치 센서는 전극 센서 (conductivity sensor), 정전식 터치 센서(capacitive touch sensor), 저항막 터치 센서(resistive touch sensor), 표면형 터치 센서(surface touch sensor), 투영형 터치 센서(projected captivated(PCAP) touch sensor), 또는 초음파형 터치 센서(surface acoustic wave touch sensor) 중 어느 하나로 구현될 수 있으며, 이에 한정되지 않는다. 전자 장치의 디스플레이는 하나 이상의 터치 센서로 구성될 수 있다. 다양한 실시예에 따르면, 메모리는 휘발성 메모리(예: 도 1의 휘발성 메모리) 및 비휘발성 메모리(예: 도 1의 비휘발성 메모리)를 포함하여, 다양한 데이터들을 일시적 또는 영구적으로 저장할 수 있다. 메모리는 도 1의 메모리의 구성 및/또는 기능 중 적어도 일부를 포함하고, 도 1의 프로그램 을 저장할 수 있다. 다양한 실시예에 따르면, 메모리는 프로세서에서 수행될 수 있는 다양한 인스트럭션(instruction)들 을 저장할 수 있다. 이와 같은 인스트럭션들은 프로세서에 의해 인식될 수 있는 산술 및 논리 연산, 데이 터 이동, 또는 입출력과 같은 제어 명령을 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 전자 장치의 각 구성요소들(예: 디스플레이, 센서 모듈 , 및 메모리)과 작동적으로(operatively), 기능적으로(functionally), 및/또는 전기적으로 (electrically) 연결되어, 각 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성일 수 있다. 프로세서는 도 1의 프로세서의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서가 전자 장치 상에서 구현할 수 있는 연산 및 데이터 처리 기능에 는 한정됨이 없을 것이나, 이하에서는 전자 장치가 미끄러짐으로 인한 키보드의 오타를 보정하는 경우, 서 로 다른 필터값을 가진 복수의 필터를 제공하여 유연한 필터링을 수행하고, 정확도가 높은 오타 보정 방법을 제 공하기 위한 다양한 실시예에 대해 설명하기로 한다. 후술할 프로세서의 동작들은 메모리에 저장된 인스트럭션들을 로딩(loading)함으로써 수행될 수 있다. 다양한 실시예에 따르면, 프로세서는 디스플레이에 문자 및 숫자 입력을 수행하기 위한 어플리케이션 을 실행할 수 있다. 예를 들어, 프로세서는 타이핑을 위한 단일 어플리케이션을 실행할 수도 있으며, 다양 한 기능을 수행하는 제1어플리케이션을 실행하고, 제1어플리케이션의 포그라운드의 텍스트 입력 필드에서 타이 핑을 위한 제2어플리케이션을 같이 실행할 수도 있다. 예를 들어, 프로세서는 키보드를 디스플레이에 표시하고, 사용자 입력에 기초하여 문자 또는 숫자를 디스플레이에 표시할 수 있고, 다른 어플리케이션의 실행 중 문자 입력 필드에서 키보드를 실행하여 타이핑을 수행할 수도 있다. 다양한 실시예에 따르면, 프로세서는 오타 필터링을 위한 필터를 생성할 수 있다. 일 실시예에 따르면, 프 로세서는 제1시간 필터값(예: 250ms)과 제1크기 필터값(예: 8dp)을 갖는 제1필터, 및 제1시간 필터값보다 큰 제2시간 필터값(예: 300ms)과 제1크기 필터값보다 큰 제2크기 필터값(예: 20dp)을 갖는 제2필터를 생성할 수있다. 예를 들어, 프로세서는 상대적으로 시간 필터값 및 크기 필터값이 작은 제1필터와, 상대적으로 큰 시간 필터값 및 크기 필터값을 가지는 제2필터를 생성할 수 있다. 프로세서는 필터값에 기초하여 제1지점 (예: 도 2의 제1지점)과 제2지점(예: 도 2의 제2지점) 중 사용자가 터치한 지점을 판단하므로, 상황 에 따라서 미끄러짐이 필터링되는 기준이 달라질 수 있다. 제1필터를 적용하는 경우, 프로세서는 제1지점 및 제2지점 사이의 거리가 제1크기 필터값 미만이며, 터치 지속 시간이 제1시간 필터값 미만이면 제1지점을 터 치한 것으로 판단하고, 두 조건 중 어느 하나라도 만족하지 못하는 경우에는 제2지점을 터치한 것으로 판단할 수 있다. 마찬가지로, 제2필터를 적용하면, 프로세서는 제1지점 및 제2지점 사이의 거리가 제2크기 필터값 미만이며, 터치 지속 시간이 제2시간 필터값 미만이면 제1지점을 터치한 것으로 판단하고, 두 조건 중 하나라도 만족하지 못하는 경우에는 제2지점을 터치한 것으로 판단할 수 있다. 이하에서는 프로세서가 제1필터 및 제2필터를 생성하여 오타를 보정하는 것으로 설명하나, 프로세서가 생성할 수 있는 필터의 수가 이에 한정 되는 것은 아니고, 필터값을 더 세분화한 3개 이상의 필터로 미끄러짐을 필터링하여 더욱 정교하게 오타를 보정 할 수 있다. 다양한 실시예에 따르면, 프로세서는 터치 센서로부터 터치 데이터를 획득할 수 있다. 터치 데이터는 디스플레이에 대한 사용자 입력 이벤트가 발생했을 때, 발생한 이벤트에 대한 다양한 정보를 포함할 수 있 다. 예를 들어, 터치 데이터는 사용자의 터치가 시작된 제1지점, 터치가 종료된 제2지점, 터치 지속 시간, 또는 터치 영역의 크기와 같은 정보를 포함할 수 있다. 프로세서는 미끄러짐이 발생한 경우, 터치 데이터에 기 초하여 미끄러짐을 필터링 할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 센서 모듈로부터 사용자 특성 정보를 획득할 수 있다. 사용자 특성 정보는 타이핑 입력의 수행에 영향을 미치는 다양한 요인에 대한 정보를 포함할 수 있다. 예를 들어, 사용 자의 행동 패턴, 걸음걸이, 타점, 오타, 터치 영역, 키 크기 간격, 손가락의 크기 및 모양, 폰 기울기, 파지하 는 손, 및/또는 입력 속도와 같은 요인들에 대한 정보를 포함할 수 있다. 프로세서는 사용자 특성 정보를 더 참고하여 미끄러짐을 필터링할지 여부를 결정할 수 있다. 예를 들어, 사용자가 버스를 타고 일어선 채로 타이핑을 하게 되면 안정적인 자세로 타이핑을 하는 경우에 비하 여 미끄러져 오타가 발생할 가능성이 더 높을 수 있다. 프로세서는 사용자 특성 정보를 이용하여 사용자의 사용 환경에 대한 정보를 획득하고, 오타가 발생할 확률이 높으므로 필터값이 더 큰 제2필터를 사용하기로 결정 할 수 있다. 반대로, 사용자가 정적인 공간에서 타이핑을 하고 있는 경우에는 필터값이 작은 제1필터를 사용하 기로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 터치 데이터에 기초하여 어떤 필터를 적용할지 결정할 수 있다. 프로 세서는 터치 데이터 및 사용자 특성 정보를 분석하여 제1필터 및 제2필터 중 어느 필터를 적용하여 오타를 보정할지 결정할 수 있다. 이하, 프로세서가 오타 보정을 위한 필터를 결정하는 방법에 대하여 설명한다. 다양한 실시예에 따르면, 프로세서는 키보드의 중앙선을 기준으로 하여 오타 보정에 적용할 필터를 결정할 수 있다. 키보드의 중앙선은 키보드를 수직으로 이등분하며, 디스플레이에 표시되지 않는 가상의 선일 수 있다. 프로세서는 키보드의 중앙선을 기준으로, 제1지점에서 제2지점으로의 이동이 중앙선에 가까워지면 제1필터를 적용하고, 중앙선에서 멀어지면 제2필터를 적용할 수 있다. 예를 들어, 제1지점은 'ㄱ'자판의 키 캡 내부에 위치하고 제2지점은 'ㅅ'자판의 키 캡 내부에 위치하는 경우, 프로세서는 사용자의 터치가 중앙선에 가까워지는 방향으로 이동한 것으로 판단할 수 있다. 프로세서(41 0)는 오타 방지를 위하여 제1필터를 적용할 수 있다. 제1필터는 상대적으로 시간 필터값 및 크기 필터값이 작으 므로, 제2필터를 적용한 경우보다 미끄러짐이 더 적게 필터링될 수 있다. 예를 들어, 터치 지속 시간이 제1시간 필터값 이내이고, 제1지점과 제2지점 사이의 거리가 제1크기 필터값 이내인 경우, 프로세서는 사용자 터치 를 미끄러짐이 아닌 키 캡 이동(move)으로 판단할 수 있다. 이 경우 프로세서는 터치가 시작된 제1지점을 포함하는 'ㄱ'자판이 아닌, 터치가 종료된 제2지점을 포함하는 'ㅅ'자판을 터치한 것으로 판단할 수 있다. 마찬 가지로, 터치 지속 시간이 제1시간 필터값 이상이거나 또는 제1지점과 제2지점 사이의 거리가 제1크기 필터값 이상인 경우, 프로세서는 사용자 터치를 미끄러짐으로 판단하여 터치가 시작된 제1지점을 포함하는 'ㄱ'자 판을 터치한 것으로 판단할 수 있다. 반대로, 제1지점이 'ㅅ'자판의 키 캡 내부에 위치하며, 제2지점이 'ㄱ'자판의 키 캡 내부에 위치하는 경우, 프 로세서는 사용자의 터치가 중앙선에서 멀어지는 방향으로 이동한 것으로 판단할 수 있다. 위의 예시와 반 대로 적용되어, 프로세서는 제2필터를 적용하여 오타 필터링을 수행할 수 있다.일 실시예에 따르면, 프로세서는 제1지점의 위치를 기준으로 사용자 터치의 이동 방향을 판단할 수 있다. 예를 들어, 제1지점이 'ㅅ'자판 내부에 위치하고, 제2지점이 'ㅛ'자판 내부에 위치하는 경우, 사용자의 터치는 제1지점에서 중앙선까지 이동할 때는 중앙선에 가까워지는 방향으로 이동하나, 중앙선을 넘어 'ㅛ'자판으로 이 동할 때는 중앙선에서 멀어지는 방향으로 이동할 수 있다. 이러한 경우에 프로세서는 제1지점의 위치를 기 준으로, 사용자의 터치가 제1지점에서 봤을 때 중앙선에 가까워지는 방향으로 이동하므로, 제1필터를 적용할 수 있다. 다양한 실시예에 따르면, 프로세서는 키보드 상에서 보정 영역을 설정하고, 보정 영역 내부에서 미끄러짐 이 발생하는 경우 오타 보정에 필터를 적용할 수 있다. 예를 들어, 프로세서는 보정 영역 외부에서 발생하 는 미끄러짐에 대해서는 별도의 필터링 없이 사용자가 제2지점을 터치한 것으로 판단할 수 있다. 일 실시예에 따르면, 보정 영역은 키보드의 중심부에 위치할 수 있으며, 키보드의 중심점을 기준으로 일정한 반지름(예: 70dp)를 갖는 원 형태일 수 있고, 일정한 크기를 갖는 사각형 형태일 수도 있다. 프로세서는 제1지점이 보 정 영역 내부에 위치하는 경우에만 어떤 필터를 적용할지 여부를 검토하며, 제1지점이 보정 영역 외부에 위치하 는 경우에는, 제2지점이 보정 영역 내부에 위치하더라도 미끄러짐을 필터링하지 않을 수 있다. 보정 영역은 전 자 장치의 제조 시부터 결정될 수도 있고, 프로세서가 결정할 수도 있다. 다양한 실시예에 따르면, 프로세서는 터치 데이터에 기초하여 키 캡 내부의 터치 중심점을 재설정할 수 있다. 예를 들어, 프로세서는 제1키 캡의 정중앙을 터치 중심점으로 설정할 수 있다. 프로세서는 제1키 캡에 대한 터 치 데이터를 획득하고, 터치가 발생하는 빈도에 따라 가중치를 두어 터치 중심점을 계산할 수 있다. 즉, 프로세 서는 제1키 캡 내부에서 터치가 많이 이루어지는 지점에 가까운 터치 중심점을 재설정할 수 있다. 일 실시예에 따르면, 프로세서는 키 인식 영역 학습 알고리즘을 이용하여 터치 중심점을 계산할 수 있다. 다양한 실시예에 따르면, 프로세서는 터치 중심점에 기초하여 보정 영역을 정의할 수 있다. 사용자의 터치 발생 빈도가 높은 곳에서 미끄러짐이 많이 발생할 것이므로, 프로세서는 터치 중심점을 기준으로 하여 일정 영역을 보정 영역으로 설정할 수 있다. 다양한 실시예에 따르면, 프로세서는 획득한 터치 데이터에 기초하여, 키 캡 내부에서 외부로 미끄러졌는 지 또는 키 캡 외부에서 내부로 미끄러졌는지를 판단하고 오타 보정에 적용할 필터를 결정할 수 있다. 일 실시 예에 따르면, 프로세서는 제1지점이 키 캡 외부의 여백에 위치하고, 제2지점이 키 캡 내부에 위치하는 경 우, 제1필터를 적용하여 오타를 보정할 수 있다. 반대로, 제1지점이 키 캡 내부에 위치하고, 제2지점이 키 캡 외부의 여백에 위치하는 경우, 제2필터를 적용할 수 있다. 예를 들어, 사용자의 터치가 'ㅎ'자판과 'ㄹ'자판 사이에서 시작하여 'ㄹ'자판에서 끝나는 경우, 프로세서(41 0)는 보정을 위한 필터를 결정할 수 있다. 키 캡 외부에서 내부로 이동하였으므로, 프로세서는 제1필터를 적용하여 오타를 보정할 수 있다. 즉, 프로세서는 키 캡 외부에서 내부로 이동하는 경우, 오타가 정타로 보정되었을 것이라고 생각하고 제2지점을 포함하는 'ㄹ'자판을 터치한 것으로 판단할 수 있다. 반대로, 사용자 의 터치가 'ㄹ'자판에서 시작하여 'ㅎ'자판과 'ㄹ'자판 사이에서 끝나는 경우, 프로세서는 제2필터를 적용 할 수 있다. 키 캡 내부에서 외부로 이동하는 것은 오타가 발생하는 것으로 판단하여, 제1지점을 포함하는 'ㄹ'자판을 터치한 것으로 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 오타 보정을 위한 필터를 결정할 때 기준들 간의 우선순위를 설정할 수 있다. 예를 들어, 제1지점이 'ㄹ'과 'ㅎ'자판 사이의 여백에 위치하고, 제2지점이 'ㄹ'자판 내부에 위치하는 경우를 생각해볼 수 있다. 중앙선 기준으로 봤을 때, 중앙선에서 멀어지는 방향으로 이동하므로, 프로세서(41 0)는 제2필터를 적용할 수 있다. 그러나 키 캡 기준으로 봤을 때는 키 캡의 외부에서 내부로 이동하므로, 프로 세서는 제1필터를 적용할 수 있다. 이렇게 충돌이 발생하는 경우, 프로세서는 우선순위가 더 높은 기 준에 따라서 판단할 수 있다. 즉, 프로세서는 중앙선 기준의 우선순위를 더 높게 설정할 수 있고, 따라서 상기 예시에서는 제2필터를 적용하기로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 숫자 및 문자 키 캡 외에도 다양한 기능 키에서 발생한 오타도 보정 할 수 있다. 즉, 프로세서는 space 키, backspace 키, shift 키, enter 키, 한영 키, 문장부호 키 및/또 는 특수부호 키와 같은 기능 키에서 발생한 오타도 보정할 수 있다. 예를 들어, 사용자가 space 키를 누르려다 가 미끄러져 'ㅜ'자판을 누르는 경우가 발생할 수 있다. 프로세서는 제1지점에서 제2지점으로의 이동이 아 래쪽 방향이면 제1필터를 적용하고, 위쪽 방향이면 제2필터를 적용할 수 있다. 즉, 제1지점이 space 키 캡 내부 에 위치하고, 제2지점이 'ㅜ'자판 내부에 위치하는 경우 이동 방향이 위쪽이므로 프로세서는 제2필터를 적용할 수 있다. 다양한 실시예에 따르면, 프로세서는 터치 센서의 터치 민감도에 기초하여 오타 보정에 적용할 필터 를 결정할 수 있다. 터치 민감도는 디스플레이에 표시된 UI의 기능을 활성화하기 위해 필요한 터치의 최소 압력일 수 있다. 프로세서는 획득한 터치 데이터에 기초하여 터치 민감도를 측정하고, 측정한 터치 민감도 에 기초하여 오타 보정에 적용할 필터를 결정할 수 있다. 예를 들어, 터치 민감도가 높게 설정된 경우, UI의 기 능을 활성화하기 위한 압력이 상대적으로 적을 수 있다. 프로세서는 터치 민감도가 높은 경우 오타가 발생 할 가능성이 크므로 크기 필터값이 작은 제1필터를 적용하기로 결정할 수 있다. 반대로, 터치 민감도가 낮게 설 정된 경우에는 크기 필터값이 큰 제2필터를 적용하기로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 적용하기로 결정한 필터를 이용하여 오타를 보정할 수 있다. 즉, 프 로세서는 필터의 시간 필터값 및 크기 필터값을 확인하고, 터치 데이터에 기초하여 사용자의 터치가 각 필 터값에 부합하는지 확인하여 오타를 보정할 수 있다. 예를 들어, 프로세서가 제1필터를 적용하기로 결정한 경우, 터치 데이터 상에서 제1지점과 제2지점 사이의 거리가 제1크기 필터값 미만이고 터치 지속 시간이 제1시 간 필터값 미만이면, 프로세서는 미끄러짐을 필터링하여 사용자가 제1지점을 터치한 것으로 결정할 수 있 다. 반대로, 제1지점과 제2지점 사이의 거리가 제1크기 필터값 이상이거나 터치 지속 시간이 제1시간 필터값 이 상이면, 프로세서는 미끄러짐을 필터링하지 않고 사용자가 제2지점을 터치한 것으로 결정할 수 있다. 프로 세서는 별도의 사용자 입력 없이도, 터치 입력을 보정하여 디스플레이에 표시할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자의 개인 터치 데이터 및 사용자 특성 정보를 누적하여 메모리 에 저장할 수 있다. 터치 센서가 생성한 터치 데이터 및 센서 모듈이 생성한 사용자 특성 정보 는 전자 장치의 사용자가 자판을 터치하는 경향성에 대한 정보를 포함할 수 있다. 프로세서는 터치 데이터 및 사용자 특성 정보를 분석하여 추후 오타 보정에 사용하기 위하여 메모리에 저장할 수 있다. 다양한 실시예에 따르면, 프로세서는 저장된 개인별 터치 데이터, 사용자 특성 정보 및/또는 딥러닝 알고 리즘을 이용하여 개인화 알고리즘을 생성할 수 있다. 프로세서는 인공지능 모델을 이용하여 문자 입력 수 행도에 영향을 미치는 요소를 학습할 수 있으며, 이러한 인공지능 모델은 기계 학습(machine learning)을 통해 생성될 수 있다. 일 실시예에 따르면, 이러한 학습은 인공지능 모델이 수행되는 전자 장치 자체에서 수행 될 수도 있고, 별도의 서버를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 및 강화 학습 (reinforcement learning) 중 적어도 하나를 포함할 수 있으며, 전술한 예에 한정되지 않는다. 다양한 실시예에 따르면, 인공지능 모델은 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망, CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워 크(deep Q-networks), 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공 지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 개인화 알고리즘을 이용하여 오타 보정 여부를 결정할 수 있다. 프로 세서는 사용자 고유의 특성을 이용하여 필터의 시간 필터값 및 크기 필터값을 변경하거나, 터치되는 자판 을 다르게 판단할 수 있다. 예를 들어, 사용자가 오른손으로 키보드를 많이 이용하는 경우, 중앙선 왼쪽에 위치 하는 자판은 미끄러짐이 많이 발생할 수 있다. 또는, 사용자가 자판의 중앙에서 오른쪽으로 치우친 위치를 많이 터치하거나 오른쪽으로 미끄러짐이 자주 발생할 수 있다. 프로세서는 이러한 사용자 고유의 특성을 반영한 개인화 알고리즘을 이용하여, 오른쪽으로 미끄러짐이 발생할 때는 크기 필터값을 감소시키고 왼쪽으로 미끄러짐 이 발생할 때는 크기 필터값을 증가시킬 수 있다. 이 때, 오른쪽으로 미끄러짐이 발생하더라도 오타로 판단하여 제1지점을 터치한 것으로 인식하기 쉬워지며, 왼쪽으로 미끄러짐이 발생하는 경우에는 의도된 미끄러짐으로 판 단하여 제2지점을 터치한 것으로 인식할 수 있다. 도 5a, 도 5b, 및 도 5c는 다양한 실시예에 따른 키보드의 중앙선 근처에서 미끄러짐이 발생하는 경우에 오타를 보정하는 실시예를 도시한 것이다. 다양한 실시예에 따르면, 프로세서(예: 도 4의 프로세서)는 키보드의 중앙선을 기준으로 하여 오타 보정에 적용할 필터를 결정할 수 있다. 일 실시예에 따르면, 프로세서는 오타 보정 필터를 적용할 보정 영 역을 키보드 중심부에 설정할 수 있다. 보정 영역의 형태는 키보드의 중앙을 중심으로 하고 일정한반지름을 갖는 원 형태이거나, 일정한 크기를 갖는 사각형 형태일 수 있다. 프로세서는 보정 영역 내 에서 발생한 미끄러짐에 대해서 적용할 필터를 결정할 수 있다. 이하에서는 프로세서가 오타 보정을 위한 필터 결정에 대하여 설명한다. 다양한 실시예에 따르면, 프로세서는 터치 데이터에 기초하여 제1지점(예: 도 2의 제1지점) 및 제2지 점(예: 도 2의 제2지점)의 좌표를 확인할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1지점에서 제2지점으로의 이동 방향이 중앙선에 가까워지는 방향인지 멀어지는 방향인지 판단할 수 있다. 프로세서 는 사용자 터치의 이동 방향에 따라서 오타 보정에 적용할 필터를 결정할 수 있다. 도 5a를 참조하면, 제1지점에서 제2지점으로의 이동 방향이 중앙선에 가까워지는 방향(역방향)인 경우, 프 로세서는 제1필터를 적용하기로 결정할 수 있다. 사용자의 터치가 중앙선에 가까워지는 방향으로 이 동하는 경우, 프로세서는 미끄러짐으로 인한 오타가 발생할 확률보다 미끄러짐으로 인해 오타가 보정되는 경우가 발생할 확률이 많다고 판단할 수 있다. 키보드의 중앙선을 기준으로 하여 왼쪽에 있는 자판은 왼손 으로, 오른쪽에 있는 자판은 오른손으로 터치하는 경향이 있으며, 왼손으로 터치하는 경우에는 왼쪽으로 미끄러 짐이 발생하고, 오른손으로 터치하는 경우에는 오른쪽으로 미끄러짐이 발생할 확률이 높을 수 있다. 따라서 역 방향으로 미끄러짐이 발생하였다면 사용자가 의도를 가지고 터치를 이동한 것일 가능성이 높을 수 있으며, 프로 세서는 역방향 미끄러짐에 대해서는 필터링을 축소하여 사용자가 제2지점을 터치한 것으로 판단할 수 있다. 프로세서는 제1필터의 제1시간 필터값 및 제1크기 필터값을 이용하여 미끄러짐의 필터링 여부를 결 정할 수 있다. 예를 들어, 제1지점이 'ㄱ'자판 내부이고, 제2지점이 'ㅅ'자판 내부인 경우, 프로세서는 제1필터를 적용하 기로 결정할 수 있다. 제1지점에서 제2지점으로의 이동이 제1크기 필터값 미만이며, 터치 지속 시간이 제1시간 필터값 미만인 경우, 프로세서는 미끄러짐을 필터링하고 사용자가 'ㄱ'자판을 터치한 것으로 판단할 수 있 다. 반대로, 제1지점에서 제2지점으로의 이동이 제1크기 필터값 이상이거나 터치 지속 시간이 제1시간 필터값 이상이라면 프로세서는 사용자가 'ㅅ'자판을 터치한 것으로 판단할 수 있다. 제1필터는 상대적으로 시간 필터값 및 크기 필터값이 작으므로, 프로세서는 역방향 미끄러짐에 대해서는 필터링을 축소하여 사용자가 제2지점을 터치한 것으로 판단할 수 있다. 아래 표 3은 제1필터를 적용하여 미끄러짐을 보정한 결과이다. 표 3 을 참조하면, 표 2와 비교하여 필터를 적용하지 않은 경우에 비하여 미끄러짐으로 인한 오타 발생 횟수가 적어 졌다는 것을 알 수 있다. 표 3 1 열2 열3 열4 열5 열 6 열 7 열8 열9 열10 열 1 행 0번 0번↘(50%) ↙(50%) 총 2회↘(33%) ↙(33%) 총 3회←(75%) ↖(25%) 총 4회0번 0번 0번 0번 0번 2 행 0번→(83%) ↗(16%) 총 6회→(66%) ↗(16%) 총 3회0번 0번←(100%) 총 2회0번 0번 0번 0번 3 행 0번 0번 0번 0번↑(100%) 총 1회0번→(100%) 총 1회0번 0번 0번 4 행 0번 0번 0번 0번 0번 0번 0번↑(50%) ↖(50%) 총 2회0번 0번 도 5b를 참조하면, 제1지점에서 제2지점으로의 이동 방향이 중앙선에서 멀어지는 방향(순방향)인 경우, 프 로세서는 제2필터를 적용하기로 결정할 수 있다. 앞서 사용자의 터치가 역방향으로 미끄러지는 경우는 오 타가 발생할 확률이 적어 필터값이 상대적으로 작은 제1필터를 적용하나, 순방향으로 미끄러짐이 발생하는 경우 에는 오타가 발생할 확률이 높으므로 필터값이 상대적으로 큰 제2필터를 적용할 수 있다. 예를 들어, 제1지점이 'ㅛ'자판 내부이고, 제2지점이 'ㅕ'자판 내부인 경우, 프로세서는 터치 데이터에 기 초하여 제2필터를 적용할 수 있다. 제1지점과 제2지점 사이의 거리가 제2크기 필터값 미만이며 터치 지속 시간이 제2시간 필터값 미만이면, 프로세서는 미끄러짐을 필터링하고 사용자가 'ㅛ'자판을 터치한 것으로 판단 할 수 있다. 제1지점과 제2지점 사이의 거리가 제2크기 필터값 이상이거나 터치 지속 시간이 제2시간 필터값 이 상인 경우, 프로세서는 미끄러짐을 필터링하지 않고, 사용자가 'ㅕ'자판을 터치한 것으로 판단할 수 있다. 제2필터는 필터값이 상대적으로 커서, 제1필터를 적용한 경우에 비해 미끄러짐이 필터링될 확률이 더 높을 수 있다. 아래의 표 4는 제2필터를 적용하여 미끄러짐을 보정한 결과이다. 표 4를 참조하면, 표 2와 비교하여 미끄 러짐으로 인한 오타가 발생하는 횟수가 줄어들었음을 확인할 수 있다. 표 4 1 열2 열 3 열 4 열5 열6 열7 열8 열9 열10 열 1 행 0번↘(100%) 총 2회↘(100%) 총 1회←(100%) 총 1회0번 0번 0번 0번↙(100%) 총 1회0번 2 행 0번←(100 %)총 1회→(66%) ↘(33%) 총 3회→(66%) ←(33%) 총 3회↓(33%) ↙(33%) 총 6회0번→(100%) 총 1회0번 0번 0번 3 행 0번 0번 0번 0번 0번 0번 0번→(50%) ←(50%) 총 2회0번 0번 4 행 0번 0번 0번 0번 0번 0번↗(100 %)총 1회0번 0번 0번 도 5c를 참조하면, 프로세서는 터치 데이터에 기초하여, 제1필터를 적용할지 제2필터를 적용할지 판단할 수 있다. 프로세서는 적용할 필터를 결정하고 나서 각 필터의 시간 필터값 및 크기 필터값에 기초하여 미 끄러짐을 필터링할지 여부를 결정할 수 있으며, 최종적으로 사용자가 터치한 자판을 결정하여 디스플레이(예: 도 4의 디스플레이)에 표시할 수 있다. 터치 이벤트(Move event)가 발생한 경우, 프로세서는 우선 보 정 영역 내부에서 발생한 터치 이벤트인지 여부를 확인할 수 있다(isSlipArea). 이후, 오타 보정에 적용할 필터를 결정하고, 미끄러짐을 필터링할지 여부를 결정할 수 있다(isFilteringEvent). 프로세서는 미끄러짐 의 필터링 여부를 결정하여 사용자가 터치한 자판을 결정하여 디스플레이에 표시할 수 있다. 도 6a 및 도 6b는 다양한 실시예에 따른 키 캡 내부와 외부에서 미끄러짐이 발생하는 경우에 오타를 보정하는 실시예를 도시한 것이다. 도 6a를 참조하면, 프로세서(예: 도 4의 프로세서)는 키 캡 내부 및 키 캡 외부에서 발생하는 미끄러짐으로 인한 오타를 보정할 수 있다. 다양한 실시예에 따르면, 제1지점(예: 도 2의 제1지점)이 키 캡 외부에 위치하고 제2지점(예: 도 2의 제2지점)이 키 캡 내부에 위치하는 경우, 프로세서 는 제1필터를 적용할 수 있다. 예를 들어, 제1지점이 'ㅇ'자판과 'ㄹ'자판 사이의 여백 공간에 위치하고, 제2지점이 'ㄹ'자판에 위치하는 경우, 프로세서는 제1필터를 적용하여 미끄러짐을 적극적으로 반영할 수 있다. 사용자가 키 캡 외부의 여백을 터치하는 경우는 의도를 갖고 터치했다고 보기 어려우므로, 프로세서 는 미끄러짐을 반영하여 오타가 정타로 보정되었다고 판단할 수 있다. 마찬가지로, 제1지점이 키 캡 내부에 위치하고 제2지점이 키 캡 외부에 위치하는 경우, 프로세서 는 제2필터를 적용할 수 있다. 예를 들어, 제1지점이 'ㄹ'자판에 위치하고, 제2지점이 'ㅇ'자판과 'ㄹ'자 판 사이의 여백 공간에 위치하는 경우, 프로세서는 제2필터를 적용하여 미끄러짐을 필터링할 수 있다. 여 백 공간으로 미끄러지는 경우 어떤 키도 입력되지 않아 사용자가 의도를 갖고 미끄러졌다고 보기 어려우므로, 프로세서는 미끄러짐을 반영하지 않아 제1지점을 터치한 것으로 판단할 수 있다. 다양한 실시예에 따르면, 프로세서는 적용할 필터를 결정하고 난 뒤, 터치 데이터에 기초하여 미끄러짐을 필터링할지 여부를 결정할 수 있다. 제1필터를 적용한 경우 상대적으로 필터값이 작아 제2지점을 터치한 것으로 판단할 확률이 높고, 제2필터를 적용한 경우 상대적으로 필터값이 커 제1지점을 터치한 것으로 판단할 확률이 높다.도 6b를 참조하면, 프로세서는 키 캡 내부 및 키 캡 외부에서 발생한 미끄러짐을 필터링하기 위 한 필터를 결정한 이후, 해당 필터에 따라서 오타를 보정할 수 있다. 터치 이벤트가 수신된 경우, 프로세서 는 제1지점 및 제2지점이 키 캡의 내부 혹은 외부에 위치하는지 여부를 판단하고, 이에 기반하여 적용할 필터를 결정할 수 있다(isOutsideOfKey). 이후, 프로세서는 미끄러짐을 필터링할지 여부를 결정할 수 있다 (isFilteringEvent). 프로세서는 오타를 보정하여 최종적으로 결정된 키를 디스플레이(예: 도 4의 디스플 레이)에 표시할 수 있다. 도 7은 다양한 실시예에 따른 문자 자판 외의 영역에서 오타가 발생하는 경우에 오타를 보정하는 실시예를 도시 한 것이다. 도 7을 참조하면, 문자 및 숫자 자판 이외의 다른 기능 키에서 미끄러짐이 발생하는 경우에도 오타를 보정할 수 있다. 기능 키는 문자 및 숫자 자판만큼 터치가 많이 발생하지는 않으나, 미끄러짐으로 인해 발생하는 오타를 동일한 방법을 이용하여 보정할 수 있다. 예를 들어, 프로세서(예: 도 4의 프로세서)는 space 키에서 발생한 미끄러짐에 대한 오타를 보정할 수 있 다. 프로세서는 사용자 터치가 space 키 캡 외부에서 내부로 미끄러지는 경우에는 제1필터를 적용하고, 키 캡 내부에서 외부로 미끄러지는 경우에는 제2필터를 적용할 수 있다. 다양한 실시예에 따르면, 프로세서는 오타를 필터링하고자 하는 기능 키의 주변에 보정 영역을 설정 할 수 있다. 예를 들어, space 키에서 발생하는 미끄러짐을 필터링하고자 하는 경우, 프로세서는 space 키 주위에 보정 영역을 설정하여, 해당 보정 영역 내에서 터치가 시작되는 경우 발생한 오타를 보정할 수 있다. 다양한 실시예에 따르면, 프로세서는 space 키에서 'ㅜ'자판이나 'ㅠ'자판으로 미끄러짐이 발생하는 경우, 미끄러짐을 필터링할 수 있다. 예를 들어, 프로세서는 6시 방향으로의 미끄러짐이 발생하는 경우에는 제1 필터를 적용하고, 12시 방향으로의 미끄러짐이 발생하는 경우에는 제2필터를 적용하기로 결정할 수 있다. 6시 방향으로 미끄러짐이 발생하는 경우 'ㅜ'자판에서 space 자판으로 미끄러지므로, 프로세서는 사용자가 space 키를 누를 의도였다고 판단하고 상대적으로 필터값이 작은 제1필터를 적용할 수 있다. 12시 방향으로 미 끄러짐이 발생하는 경우 space 키에서 'ㅜ'자판으로 미끄러지므로, 프로세서는 사용자가 space키를 누를 의도였다고 판단하고 미끄러짐을 필터링하기 위해 상대적으로 필터값이 큰 제2필터를 적용할 수 있다. 다양한 실시예에 따른 전자 장치(예: 도 4의 전자 장치)는, 디스플레이(예: 도 4의 디스플레이), 사 용자의 터치 입력을 수신하여 터치 데이터를 생성하는 터치 센서(예: 도 4의 터치 센서)를 포함하는 센서 모듈(예: 도 4의 센서 모듈), 메모리(예: 도 4의 메모리), 및 상기 디스플레이, 상기 센서 모듈 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 제1시간 필터값 및 제1크기 필터값을 갖는 제1필터를 생성하고, 상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터 값보다 큰 제2크기 필터값을 갖는 제2필터를 생성하고, 상기 터치가 발생한 제1지점 및 상기 터치가 종료된 제2 지점을 포함하는 상기 터치 데이터를 획득하고, 상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이 등분하는 중앙선(예: 도 5a의 중앙선)에 가까워지면 상기 제1필터를 적용하고, 중앙선에 멀어지면 상기 제 2필터를 적용하고, 상기 터치 입력의 지속시간이 필터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하고, 상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 키보드 상에서 보정 영역을 설정하고, 상기 제1지점이 상기 보 정 영역에 속하는지 여부를 판단하고, 상기 제1지점이 상기 보정 영역에 속하는 경우 필터를 적용하고, 상기 제 1지점이 상기 보정 영역에 속하지 않는 경우 필터를 적용하지 않을 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1지점이 키 캡 외부(예: 도 6a의 키 캡 외부)이고 상기 제2지점이 키 캡 내부(예: 도 6a의 키 캡 내부)인 경우 제1필터를 적용하고, 상기 제1지점이 키 캡 내부이 고 상기 제2지점이 키 캡 외부인 경우 제2필터를 적용할 수 있다. 다양한 실시예에 따르면, 상기 터치 데이터는 터치 지점, 터치 지속 시간 및 터치 영역의 크기에 대한 정보를 포함할 수 있다. 다양한 실시예에 따르면, 상기 센서 모듈은 걸음걸이 및 손가락 크기를 포함하는 사용자 특성 정보를 생성하고, 상기 프로세서는, 상기 센서 모듈로부터 상기 사용자 특성 정보를 획득하고, 상기 사용자 특성 정보에 기초하여 오타 보정에 적용할 필터를 더 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 디스플레이의 터치 민감도를 결정하고, 상기 터치 민감도에 기 초하여 오타 보정에 적용할 필터를 더 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 획득한 터치 데이터를 딥러닝 알고리즘에 입력하여 학습할 수 있다. 다양한 실시예에 따르면, 상기 딥러닝 알고리즘은 복수의 인공 신경망 레이어(Artificial Neural Network Layer)를 포함할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 딥러닝 알고리즘을 이용하여, 사용자 별로 개인화 알고리즘을 생성하고, 상기 개인화 알고리즘에 기초하여 오타 보정에 적용할 필터를 더 결정할 수 있다. 다양한 실시예에 따르면, 상기 제1필터는 크기 필터값이 8dp인 것을 특징으로 할 수 있다. 다양한 실시예에 따르면, 상기 제2필터는 크기 필터값이 20dp인 것을 특징으로 할 수 있다. 도 8은 다양한 실시예에 따른 전자 장치의 오타 보정 방법의 흐름도이다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치 또는 도 4의 전자 장치)에서 수행하는 동 작들은, 전자 장치의 적어도 하나의 프로세싱 회로(processing circuitry)를 포함하는 프로세서(예: 도 1의 프 로세서 또는 도 4의 프로세서)에 의해 실행 될 수 있다. 일 실시예에 따르면, 전자 장치에서 수행하 는 동작들은 메모리(예: 도 1의 메모리 또는 도 4의 메모리)에 저장되고, 실행 시에, 프로세서가 동 작하도록 하는 인스트럭션들(instructions)에 의해 실행될 수 있다. 다양한 실시예에 따르면, 동작 802에서, 전자 장치는 제1필터 및 제2필터를 생성할 수 있다. 전자 장치 는 제1시간 필터값(예: 250ms)과 제1크기 필터값(예: 8dp)을 갖는 제1필터, 및 제1시간 필터값보다 큰 제2 시간 필터값(예: 300ms)과 제1크기 필터값보다 큰 제2크기 필터값(예: 20dp)을 갖는 제2필터를 생성할 수 있다. 즉, 전자 장치는 상대적으로 시간 필터값 및 크기 필터값이 작은 제1필터와, 상대적으로 큰 필터값을 가지 는 제2필터를 생성할 수 있다. 전자 장치는 필터값에 기초하여 제1지점(예: 도 2의 제1지점)과 제2지 점(예: 도 2의 제2지점) 중 사용자가 터치한 지점을 판단하므로, 상황에 따라서 미끄러짐이 필터링되는 기 준이 달라질 수 있다. 제1필터를 적용하는 경우, 전자 장치는 제1지점 및 제2지점 사이의 거리가 제1크기 필터값 미만이며, 터치 지속 시간이 제1시간 필터값 미만이면 제1지점을 터치한 것으로 판단하고, 두 조건 중 어느 하나라도 만족하지 못하는 경우에는 제2지점을 터치한 것으로 판단할 수 있다. 마찬가지로, 제2필터를 적 용하면, 전자 장치는 제1지점 및 제2지점 사이의 거리가 제2크기 필터값 미만이며, 터치 지속 시간이 제2 시간 필터값 미만이면 제1지점을 터치한 것으로 판단하고, 두 조건 중 하나라도 만족하지 못하는 경우에는 제2 지점을 터치한 것으로 판단할 수 있다. 이하에서는 전자 장치가 제1필터 및 제2필터를 생성하여 오타를 보 정하는 것으로 설명하나, 전자 장치가 생성할 수 있는 필터의 수가 이에 한정되는 것은 아니고, 3개 이상 의 필터로 미끄러짐을 필터링하여 더욱 정교하게 오타를 보정할 수 있다. 다양한 실시예에 따르면, 동작 804에서, 전자 장치는 터치 센서(예: 도 4의 터치 센서)로부터 터치 데이터를 획득할 수 있다. 터치 데이터는 디스플레이(예: 도 4의 디스플레이)에 대한 사용자 입력 이벤트 가 발생했을 때, 발생한 이벤트에 대한 다양한 정보를 포함할 수 있다. 예를 들어, 터치 데이터는 사용자의 터 치가 시작된 제1지점, 터치가 종료된 제2지점, 터치 지속 시간, 또는 터치 영역의 크기와 같은 정보를 포함할 수 있다. 전자 장치는 미끄러짐이 발생한 경우, 터치 데이터에 기초하여 미끄러짐을 필터링 할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 전자 장치는 센서 모듈(예: 도 4의 센서 모듈)로부터 사용자 특성 정보를 획득할 수 있다. 사용자 특성 정보는 문자 입력의 수행에 영향을 미치는 다양한 요인에 대한 정보를 포함할 수 있다. 예를 들어, 사용자의 행동 패턴, 걸음걸이, 타점, 오타, 터치 영역, 키 크기 간격, 손가락의 크기 및 모 양, 폰 기울기, 파지하는 손, 및/또는 입력 속도와 같은 요인들에 대한 정보를 포함할 수 있다. 전자 장치는 사용자 특성 정보를 더 참고하여 미끄러짐을 필터링할지 여부를 결정할 수 있다. 다양한 실시예에 따르면, 동작 806에서, 전자 장치는 오타 보정에 적용할 필터를 결정할 수 있다. 전자 장 치는 필터를 결정하기 위해 다양한 요인을 고려할 수 있다. 전자 장치는 터치 데이터 및 사용자 특성 정보를 분석하여 제1필터 및 제2필터 중 어느 필터를 적용하여 오타를 보정할지 결정할 수 있다. 다양한 실시예에 따르면, 동작 810에서, 전자 장치는 터치 데이터에 기초하여, 사용자 터치와 필터의 시간 필터값 및 크기 필터값을 비교할 수 있다. 전자 장치는 제1필터를 적용하기로 결정하였다면 제1시간 필터 값 및 제1크기 필터값을 이용하고, 제2필터를 적용하기로 결정하였다면 제2시간 필터값 및 제2크기 필터값을 이 용할 수 있다. 전자 장치는 사용자가 제1지점에서 터치를 시작하여 제2지점에서 터치를 종료하기까지 걸리 는 시간(터치 지속 시간)이 시간 필터값 이하인 경우에만 필터를 적용할 수 있다. 즉, 사용자가 긴 시간 동안 터치를 하는 경우에는 실수로 미끄러진 것이 아니라 의도된 자판 간 이동으로 판단할 수 있다. 전자 장치 는 제1지점과 제2지점 사이의 거리가 크기 필터값 이하인 경우에만 필터를 적용할 수 있다. 예를 들어, 사용자 가 터치를 종료하기 전에 이동한 거리가 길면 전자 장치는 이를 의도된 자판 간 이동으로 판단할 수 있다. 다양한 실시예에 따르면, 전자 장치는 오타 보정을 위한 필터를 결정할 때 기준들 간의 우선순위를 설정할 수 있다. 예를 들어, 제1지점이 'ㄹ'과 'ㅎ'자판 사이의 여백에 위치하고, 제2지점이 'ㄹ'자판 내부에 위치하는 경우를 생각해볼 수 있다. 중앙선(예: 도 5a의 중앙선) 기준으로 봤을 때, 중앙선에서 멀어지는 방향으로 이동하므로, 전자 장치는 제2필터를 적용할 수 있다. 그러나 키 캡 기준으로 봤을 때는 키 캡의 외부에서 내부로 이동하므로, 전자 장치는 제1필터를 적용할 수 있다. 이렇게 충돌이 발생하는 경우, 전자 장치 는 우선순위가 더 높은 기준에 따라서 판단할 수 있다. 즉, 전자 장치는 중앙선 기준의 우선순위를 더 높게 설정할 수 있고, 따라서 상기 예시에서는 제2필터를 적용하기로 결정할 수 있다. 예를 들어, 우선 순위 는 전자 장치의 설정에 의해 결정될 수 있고, 사용자 입력에 의해 변경될 수 있다. 다양한 실시예에 따르면, 전자 장치는 숫자 및 문자 키 캡 외에도 다양한 기능 키에서 발생한 오타도 보정 할 수 있다. 즉, 전자 장치는 space 키, backspace 키, shift 키, enter 키, 한영 키, 문장부호 키 및/또 는 특수부호 키와 같은 기능 키에서 발생한 오타도 보정할 수 있다. 예를 들어, 사용자가 space 키를 누르려다 가 미끄러져 'ㅜ'자판을 누르는 경우가 발생할 수 있다. 전자 장치는 제1지점에서 제2지점으로의 이동이 아래쪽 방향이면 제1필터를 적용하고, 위쪽 방향이면 제2필터를 적용할 수 있다. 즉, 제1지점이 space 키 캡 내 부에 위치하고, 제2지점이 'ㅜ'자판 내부에 위치하는 경우 이동 방향이 위쪽이므로 전자 장치는 제2필터를 적용할 수 있다. 다양한 실시예에 따르면, 전자 장치는 터치 센서의 터치 민감도에 기초하여 오타 보정에 적용할 필터를 결 정할 수 있다. 터치 민감도는 디스플레이에 표시된 UI의 기능을 활성화하기 위해 필요한 터치의 최소 압력일 수 있다. 전자 장치는 획득한 터치 데이터에 기초하여 터치 민감도를 측정하고, 측정한 터치 민감도에 기초하 여 오타 보정에 적용할 필터를 결정할 수 있다. 예를 들어, 터치 민감도가 높게 설정된 경우, UI의 기능을 활성 화하기 위한 압력이 상대적으로 적을 수 있다. 전자 장치는 터치 민감도가 높은 경우 오타가 발생할 가능 성이 크므로 크기 필터값이 작은 제1필터를 적용하기로 결정할 수 있다. 반대로, 전자 장치는 터치 민감도 가 낮게 설정된 경우에는 크기 필터값이 큰 제2필터를 적용하기로 결정할 수 있다. 다양한 실시예에 따르면, 전자 장치는 사용자의 개인 터치 데이터 및 사용자 특성 정보를 누적하여 메모리 (예: 도 4의 메모리)에 저장할 수 있다. 터치 센서가 생성한 터치 데이터 및 센서 모듈이 생성한 사용자 특성 정보는 전자 장치의 사용자가 자판을 터치하는 경향성에 대한 정보를 포함할 수 있다. 전자 장치 는 터치 데이터 및 사용자 특성 정보를 분석하여 추후 오타 보정에 사용하기 위하여 메모리에 저장할 수 있다. 다양한 실시예에 따르면, 전자 장치는 저장된 개인별 터치 데이터, 사용자 특성 정보 및 딥러닝 알고리즘 을 이용하여 개인화 알고리즘을 생성할 수 있다. 전자 장치는 인공지능 모델을 이용하여 문자 입력 수행도 에 영향을 미치는 요소를 학습할 수 있으며, 이러한 인공지능 모델은 기계 학습(machine learning)을 통해 생성 될 수 있다. 일 실시예에 따르면, 이러한 학습은 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수도 있 고, 별도의 서버를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 및 강화 학습 (reinforcement learning) 중 적어도 하나를 포함할 수 있으며, 전술한 예에 한정되지 않는다. 다양한 실시예에 따르면, 인공지능 모델은 복수의 인공 신경망 레이어들을 포함할 수 있으며, 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치는 개인화 알고리즘을 이용하여 오타 보정 여부를 결정할 수 있다. 전 자 장치는 사용자 고유의 특성을 이용하여 필터의 시간 필터값 및 크기 필터값을 변경하거나, 터치되는 자 판을 다르게 판단할 수 있다. 예를 들어, 사용자가 오른손으로 키보드를 많이 이용하는 경우, 중앙선 왼쪽에 위 치하는 자판은 미끄러짐이 많이 발생할 수 있다. 또는, 사용자가 자판의 중앙에서 오른쪽으로 치우친 위치를 많 이 터치하거나 오른쪽으로 미끄러짐이 자주 발생할 수 있다. 전자 장치는 이러한 사용자 고유의 특성을 반 영한 개인화 알고리즘을 이용하여, 오른쪽으로 미끄러짐이 발생할 때는 크기 필터값을 감소시키고 왼쪽으로 미 끄러짐이 발생할 때는 크기 필터값을 증가시킬 수 있다. 이 때, 오른쪽으로 미끄러짐이 발생하더라도 오타로 판 단하여 제1지점을 터치한 것으로 인식하기 쉬워지며, 왼쪽으로 미끄러짐이 발생하는 경우에는 의도된 미끄러짐 으로 판단하여 제2지점을 터치한 것으로 인식할 수 있다. 다양한 실시예에 따르면, 동작 812에서, 제1지점과 제2지점 사이의 거리가 크기 필터값 미만이고, 터치 지속 시 간이 시간 필터값 미만이면, 전자 장치는 제1지점에 대응하는 자판을 터치한 것으로 결정할 수 있다. 다양한 실시예에 따르면, 동작 814에서, 전자 장치는 제1지점과 제2지점 사이의 거리가 크기 필터값 이상 이거나, 터치 지속 시간이 시간 필터값 이상이면, 전자 장치는 제2지점에 대응하는 자판을 터치한 것으로 결정할 수 있다. 도 9는 다양한 실시예에 따른 키보드의 중앙선 근처에서 미끄러짐이 발생하는 경우에 오타를 보정하는 방법의 흐름도이다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치 또는 도 4의 전자 장치)에서 수행하는 동 작들은, 전자 장치의 적어도 하나의 프로세싱 회로(processing circuitry)를 포함하는 프로세서(예: 도 1의 프 로세서 또는 도 4의 프로세서)에 의해 실행 될 수 있다. 일 실시예에 따르면, 전자 장치에서 수행하 는 동작들은 메모리(예: 도 1의 메모리 또는 도 4의 메모리)에 저장되고, 실행 시에, 프로세서가 동 작하도록 하는 인스트럭션들(instructions)에 의해 실행될 수 있다.다양한 실시예에 따르면, 동작 902에서, 전 자 장치는 터치 센서(예: 도 4의 터치 센서)로부터 터치 데이터를 획득할 수 있다. 터치 데이터는 사 용자 터치 입력이 시작한 제1지점(예: 도 2의 제1지점)과 입력이 종료된 제2지점(예: 도 2의 제2지점 ) 및/또는 터치 지속 시간에 대한 정보를 포함할 수 있다. 전자 장치는 센서 모듈(예: 도 4의 센서 모듈)로부터 사용자 특성 정보를 획득할 수 있다. 예를 들어, 사용자 특성 정보는 걸음걸이, 손가락 길이, 및/또는 입력 속도와 같은 개인별 입력 데이터를 포함할 수 있다. 다양한 실시예에 따르면, 동작 910에서, 전자 장치는 사용자 터치의 이동 방향을 판단할 수 있다. 전자 장 치는 획득한 터치 데이터에 기초하여 터치의 이동 방향을 판단할 수 있다. 예를 들어, 제1지점이 'ㄹ'자판 내부에 위치하고 제2지점이 'ㅇ'자판 내부에 위치하면, 전자 장치는 사용자의 터치가 9시 방향으로 이동했 다고 판단할 수 있다. 다양한 실시예에 따르면, 동작 912에서, 전자 장치는 사용자 터치가 키보드의 중앙선(예: 도 5a의 중앙선 )에 가까워지는 방향으로 이동한 경우 제1필터를 적용할 수 있다. 키보드의 중앙선은 키보드를 수직으로 이등분하며, 디스플레이(예: 도 4의 디스플레이)에 표시되지 않는 가상의 선일 수 있다. 전자 장치는 키보드의 중앙선을 기준으로, 제1지점에서 제2지점으로의 이동이 중앙선에 가까워지면 제1필터를 적용하고, 중 앙선에서 멀어지면 제2필터를 적용할 수 있다. 예를 들어, 제1지점은 'ㄱ'자판의 키 캡 내부에 위치하고 제2지점은 'ㅅ'자판의 키 캡 내부에 위치하는 경우, 전자 장치는 사용자의 터치가 중앙선에 가까워지는 방향으로 이동한 것으로 판단할 수 있다. 전자 장치 는 오타 방지를 위하여 제1필터를 적용할 수 있다. 이 경우 전자 장치는 터치가 시작된 제1지점을 포 함하는 'ㄱ'자판이 아닌, 터치가 종료된 제2지점을 포함하는 'ㅅ'자판을 터치한 것으로 판단할 수 있다. 마찬가 지로, 터치 지속 시간이 제1시간 필터값 이상이거나 또는 제1지점과 제2지점 사이의 거리가 제1크기 필터값 이 상인 경우, 전자 장치는 사용자 터치를 미끄러짐으로 판단하여 터치가 시작된 제1지점을 포함하는 'ㄱ'자 판을 터치한 것으로 판단할 수 있다. 다양한 실시예에 따르면, 동작 914에서, 전자 장치는 사용자 터치가 키보드의 중앙선에서 멀어지는 방향으 로 이동한 경우 제2필터를 적용할 수 있다. 예를 들어, 제1지점이 'ㅅ'자판의 키 캡 내부에 위치하며, 제2지점 이 'ㄱ'자판의 키 캡 내부에 위치하는 경우, 전자 장치는 사용자의 터치가 중앙선에서 멀어지는 방향으로이동한 것으로 판단할 수 있다. 위의 예시와 반대로 적용되어, 전자 장치는 제2필터를 적용하여 오타 필터 링을 수행할 수 있다. 다양한 실시예에 따르면, 전자 장치는 제1지점의 위치를 기준으로 사용자 터치의 이동 방향을 판단할 수 있다. 예를 들어, 제1지점이 'ㅅ'자판 내부에 위치하고, 제2지점이 'ㅛ'자판 내부에 위치하는 경우, 사용자의 터치는 제1지점에서 중앙선까지 이동할 때는 중앙선에 가까워지는 방향으로 이동하나, 중앙선을 넘어 'ㅛ'자판 으로 이동할 때는 중앙선에서 멀어지는 방향으로 이동할 수 있다. 이러한 경우에 전자 장치는 제1지점의 위치를 기준으로, 사용자의 터치가 제1지점에서 봤을 때 중앙선에 가까워지는 방향으로 이동하므로, 제1필터를 적용할 수 있다. 다양한 실시예에 따르면, 전자 장치는 키보드 상에서 보정 영역(예: 도 5a의 보정 영역)을 설정하고, 보정 영역 내부에서 미끄러짐이 발생하는 경우 오타 보정에 필터를 적용할 수 있다. 즉, 전자 장치는 보정 영역 외부에서 발생하는 미끄러짐에 대해서는 별도의 필터링 없이 사용자가 제2지점을 터치한 것으로 판단할 수 있다. 일 실시예에 따르면, 보정 영역은 키보드의 중심부에 위치할 수 있으며, 키보드의 중심점을 기준으로 일 정한 반지름(예: 70dp)을 갖는 원 형태일 수 있고, 일정한 크기를 갖는 사각형 형태일 수도 있다. 전자 장치 는 제1지점이 보정 영역 내부에 위치하는 경우에만 어떤 필터를 적용할지 여부를 검토하며, 제1지점이 보 정 영역 외부에 위치하는 경우에는, 제2지점이 보정 영역 내부에 위치하더라도 미끄러짐을 필터링하지 않을 수 있다. 다양한 실시예에 따르면, 동작 920에서, 전자 장치는 결정한 필터를 이용하여 오타를 보정할 수 있다. 전 자 장치는 결정한 필터의 시간 필터값 및 크기 필터값을 확인하고, 이를 터치 데이터와 비교할 수 있다. 제1지점과 제2지점 사이의 거리가 크기 필터값 미만이고, 터치 지속 시간이 시간 필터값 미만이라면 전자 장치 는 미끄러짐을 필터링하여 사용자가 제1지점을 터치한 것으로 판단할 수 있다. 반대로, 제1지점과 제2지점 사이의 거리가 크기 필터값 이상이거나, 터치 지속 시간이 시간 필터값 이상이라면 전자 장치는 미끄러짐 을 반영하여, 사용자가 제2지점을 터치한 것으로 판단할 수 있다. 도 10은 다양한 실시예에 따른 키 캡 내부와 외부에서 미끄러짐이 발생하는 경우에 오타를 보정하는 방법의 흐 름도이다. 다양한 실시예에 따르면, 전자 장치(예: 도 1의 전자 장치 또는 도 4의 전자 장치)에서 수행하는 동 작들은, 전자 장치의 적어도 하나의 프로세싱 회로(processing circuitry)를 포함하는 프로세서(예: 도 1의 프 로세서 또는 도 4의 프로세서)에 의해 실행 될 수 있다. 일 실시예에 따르면, 전자 장치에서 수행하 는 동작들은 메모리(예: 도 1의 메모리 또는 도 4의 메모리)에 저장되고, 실행 시에, 프로세서가 동 작하도록 하는 인스트럭션들(instructions)에 의해 실행될 수 있다. 다양한 실시예에 따르면, 동작 1002에서, 전자 장치는 터치 센서(예: 도 4의 터치 센서)로부터 터치 데이터 및/또는 사용자 특성 정보를 획득할 수 있다. 터치 데이터 및/또는 사용자 특성 정보에 대한 설명은 위 와 같으므로 생략한다. 다양한 실시예에 따르면, 동작 1010에서, 전자 장치는 사용자 터치의 이동 방향을 판단할 수 있다. 전자 장치는 오타 보정에 적용할 필터를 결정하기 위하여, 획득한 터치 데이터에 기초하여, 키 캡 내부에서 외 부로 미끄러졌는지 또는 키 캡 외부에서 내부로 미끄러졌는지를 판단할 수 있다. 다양한 실시예에 따르면, 동작 1012에서, 전자 장치는 사용자 터치가 키 캡 외부에서 내부로 이동한 경우 제1필터를 적용할 수 있다. 예를 들어, 제1지점(예: 도 2의 제1지점)이 'ㄹ'자판과 'ㅎ'자판 사이의 여백 이고, 제2지점(예: 도 2의 제2지점)이 'ㅎ'자판 내부에 위치하는 경우, 전자 장치는 제1필터를 적용 하여 오타를 필터링할 수 있다. 다양한 실시예에 따르면, 동작 1014에서, 전자 장치는 사용자 터치가 키 캡 내부에서 외부로 이동한 경우 제2필터를 적용할 수 있다. 예를 들어, 제1지점이 'ㅎ'자판이고, 제2지점이 'ㄹ'자판과 'ㅎ'자판 사이의 여백인 경우, 전자 장치는 제2필터를 적용하여 오타를 필터링할 수 있다. 다양한 실시예에 따르면, 동작 1020에서, 전자 장치는 결정한 필터를 이용하여 오타를 보정할 수 있다. 전 자 장치는 결정한 필터의 시간 필터값 및 크기 필터값을 확인하고, 이를 터치 데이터와 비교하여 미끄러짐 의 필터링 여부를 결정할 수 있다.다양한 실시예에 따른 전자 장치의 오타 보정 방법은, 제1시간 필터값 및 제1크기 필터값을 갖는 제1필터를 생 성하는 동작, 상기 제1시간 필터값보다 큰 제2시간 필터값 및 상기 제1크기 필터값보다 큰 제2크기 필터값을 갖 는 제2필터를 생성하는 동작, 터치가 발생한 제1지점 및 상기 터치가 종료된 제2지점을 포함하는 터치 데이터를 획득하는 동작, 상기 제1지점에서 상기 제2지점으로의 이동이 키보드를 수직 이등분하는 중앙선에 가까워지면 상기 제1필터를 적용하고, 중앙선에 멀어지면 상기 제2필터를 적용하는 동작, 상기 터치 입력의 지속시간이 필 터의 시간 필터값 미만이고, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 미만인 경우 상기 제1지점에 대응하는 자판을 터치한 것으로 결정하는 동작, 및 상기 터치 입력의 지속시간이 필터의 시간 필터값 이상이거 나, 상기 제1지점과 상기 제2지점의 거리가 크기 필터값 이상인 경우 상기 제2지점에 대응하는 자판을 터치한 것으로 결정하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 상기 키보드 상에서 하나의 보정 영역을 설정하는 동작, 상기 제1지점이 상기 보정 영역에 속하는지 여부를 판단하는 동작, 및 상기 제1지점이 상기 보정 영역에 속하는 경우 필터를 적용하고, 상기 제1지점이 상기 보정 영역에 속하지 않는 경우 필터를 적 용하지 않는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 상기 제1지점이 키 캡 외부이고 상기 제2지점이 키 캡 내부인 경우 제1필터를 적용하는 동작, 및 상기 제1지점이 키 캡 내부이고 상기 제2지점 이 키 캡 외부인 경우 제2필터를 적용하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 터치 데이터는 터치 지점, 터치 지속 시간 및 터치 영역의 크기에 대한 정보를 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 걸음걸이 및 손가락 크기를 포함 하는 사용자 특성 정보를 생성하는 동작, 및 상기 사용자 특성 정보에 기초하여 오타 보정에 적용할 필터를 더 결정하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 상기 디스플레이의 터치 민감도 를 결정하는 동작, 및 상기 터치 민감도에 기초하여 오타 보정에 적용할 필터를 더 결정하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 상기 획득한 터치 데이터를 딥러 닝 알고리즘에 입력하여 학습하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 딥러닝 알고리즘은 복수의 인공 신경망 레이어(Artificial Neural Network Layer)를 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1필터 또는 상기 제2필터를 적용하는 동작은, 상기 딥러닝 알고리즘을 이용하 여, 사용자 별로 개인화 알고리즘을 생성하는 동작, 상기 개인화 알고리즘에 기초하여 오타 보정에 적용할 필터 를 더 결정하는 동작을 더 포함할 수 있다.도면 도면1 도면2 도면3 도면4 도면5a 도면5b 도면5c 도면6a 도면6b 도면7 도면8 도면9 도면10"}
{"patent_id": "10-2021-0033625", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예에 따른 미끄러짐으로 인한 오타 발생을 도시한 것이다. 도 3은 다양한 실시예에 따른 전자 장치의 모듈 구성을 도시한 것이다. 도 4는 다양한 실시예에 따른 전자 장치의 블록도이다. 도 5a, 도 5b, 및 도 5c는 다양한 실시예에 따른 키보드의 중앙선 근처에서 미끄러짐이 발생하는 경우에 오타를 보정하는 실시예를 도시한 것이다. 도 6a 및 도 6b는 다양한 실시예에 따른 키 캡 내부와 외부에서 미끄러짐이 발생하는 경우에 오타를 보정하는 실시예를 도시한 것이다. 도 7은 다양한 실시예에 따른 문자 자판 외의 영역에서 오타가 발생하는 경우에 오타를 보정하는 실시예를 도시 한 것이다. 도 8은 다양한 실시예에 따른 전자 장치의 오타 보정 방법의 흐름도이다. 도 9는 다양한 실시예에 따른 키보드의 중앙선 근처에서 미끄러짐이 발생하는 경우에 오타를 보정하는 방법의 흐름도이다. 도 10은 다양한 실시예에 따른 키 캡 내부와 외부에서 미끄러짐이 발생하는 경우에 오타를 보정하는 방법의 흐 름도이다."}
