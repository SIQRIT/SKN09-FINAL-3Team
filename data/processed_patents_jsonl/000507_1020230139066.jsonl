{"patent_id": "10-2023-0139066", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0055345", "출원번호": "10-2023-0139066", "발명의 명칭": "GPT API를 사용한 네트워크 이상치 탐지 방법", "출원인": "광운대학교 산학협력단", "발명자": "박철수"}}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "네트워크 패킷의 이상(Anomaly) 감지를 위한 장치에 있어서,텍스트를 포함하는 시계열 데이터에 해당하는 네트워크 패킷을 수신하는 통신부; 및소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하고, 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 소정의 학습된LLM(Large Language Model) 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상여부를 감지하며,상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 프로세서를 포함하는 것을 특징으로 하는, 장치."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 프로세서는,시간 윈도우 슬라이딩 방식으로 상기 제1 시간 윈도우와 시간 구간이 일부 중첩되는 제2 시간 윈도우에서 수신된 네트워크 패킷들에 대해 제2 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 상기 소정의 학습된머신러닝 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하고, 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 상기 소정의 학습된 LLM 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하며,상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 것을 특징으로 하는, 장치."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 프로세서는,상기 제1 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제1 시간 윈도우내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 것을 특징으로 하는, 장치."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2항에 있어서,상기 프로세서는,상기 제2 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제2 시간 윈도우내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 것을 특징으로 하는, 장치."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2025-0055345-3-제 1항에 있어서,상기 LLM은 OpenAI의 GPT(Generative Pre-Trained Transformer) 모델을 포함하는 것을 특징으로 하는, 장치."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "네트워크 패킷의 이상(Anomaly) 감지를 위한 방법에 있어서,텍스트를 포함하는 시계열 데이터에 해당하는 네트워크 패킷을 수신하는 단계;소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하는단계;상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 소정의 학습된LLM(Large Language Model) 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상여부를 감지하는 단계; 및상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 단계를 포함하는 것을 특징으로 하는, 방법."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6항에 있어서,시간 윈도우 슬라이딩 방식으로 상기 제1 시간 윈도우와 시간 구간이 일부 중첩되는 제2 시간 윈도우에서 수신된 네트워크 패킷들에 대해 제2 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 상기 소정의 학습된머신러닝 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하는단계; 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 상기 소정의 학습된 LLM 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하는 단계; 및상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 단계를 더 포함하는 것을 특징으로 하는, 방법."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6항에 있어서,상기 제1 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제1 시간 윈도우내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 단계를 더 포함하는 것을 특징으로 하는, 방법."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7항에 있어서,상기 제2 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제2 시간 윈도우내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 단계를 더 포함하는 것을 특징으로 하는, 방법."}
{"patent_id": "10-2023-0139066", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6항 내지 제 9항 중 어느 한 항에 기재된 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터-판독가능한 기록매체."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따른 네트워크 패킷의 이상(Anomaly) 감지를 위한 장치는 텍스트를 포함하는 시계열 데이터에 해당하 는 네트워크 패킷을 수신하는 통신부; 소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷 들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷 들에 대한 이상 여부를 감지하고, 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네 트워크 정보를 소정의 학습된 LLM(Large Language Model) 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하며, 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 프로세서를 포함하는 것을 특징으로 한다."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 GPT API를 사용한 네트워크 이상치 탐지 방법에 관한 것이다."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이상 감지(Anomaly Detection) 방법에는 보안 시스템 침입 탐지, 온라인 사기 탐지, 산업 시스템 이상 탐지 등 이 있다. 보안 시스템 침입 탐지는 컴퓨터 시스템의 시계열 데이터, 악성 코드 데이터, 시스템이 기록한 로그 (log) 데이터에 대해 이상 패턴을 검출하여 악성 코드(Malware) 또는 컴퓨터 시스템 상의 침입을 탐지한다. 온 라인 사기 탐지는 금융 거래 내역에 대한 내용을 표로 정리한 데이터를 이용하여 특이 패턴을 검출하여 보험, 신용 금융과 관련된 불법 행위를 탐지한다. 산업 시스템 이상 탐지는 산업 시스템 내의 센서 및 시스템을 동작 또는 제어하는 엑추에이터 (actuator) 로부터 생성된 데이터에 대한 특이 패턴을 검출하여 시스템 이상을 탐지 한다. 의료 진단 탐지는 생체 데이터에 대한 이상 특이 패턴을 검출하여 심전도 및 뇌파 혈압 등의 데이터가 이 용된다. 특히, 심전도 데이터를 이용하여 부정맥과 같은 신체의 이상을 탐지하는 연구가 활발히 진행되고 있다 기존에 네트워크 데이터 기반 보안 시스템 침입 탐지 혹은 네트워크 패킷 이상치 탐지 알고리즘은 우선 활용할 수 있는 데이터의 종류가 적어서 개발과 연구가 더디고 이루어지지 못하는 문제점이 있었다. 이러한 문제점을 해결하기 위하여 본 발명에서는 네트워크 패킷의 이상치 감지 방법을 제안하고자 한다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국공개특허 10-2023-0097974호"}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명에서 이루고자 하는 기술적 과제는 네트워크 패킷의 이상 감지를 위한 장치를 제공하는 데 있다. 본 발명에서 이루고자 하는 다른 기술적 방법을 네트워크 패킷의 이상 감지를 위한 방법을 제공하는 데 있다. 본 발명에서 이루고자 하는 또 다른 기술적 과제는 네트워크 패킷의 이상 감지를 위한 방법을 컴퓨터에서 실행 시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록매체를 제공하는 데 있다. 본 발명에서 이루고자 하는 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급하지 않은"}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "또 다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하 게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기의 기술적 과제를 달성하기 위한, 본 발명에 따른 네트워크 패킷의 이상(Anomaly) 감지를 위한 장치는, 텍 스트를 포함하는 시계열 데이터에 해당하는 네트워크 패킷을 수신하는 통신부; 및 소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 상기 제 1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하고, 상기 제1 시간 윈도우 내에서 수 신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 소정의 학습된 LLM(Large Language Model) 모델에 적용하여 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하며, 상기 패킷 길이 에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감 지된 경우에 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 프로세서를 포함하는 것을 특징으로 한다. 상기 프로세서는, 시간 윈도우 슬라이딩 방식으로 상기 제1 시간 윈도우와 시간 구간이 일부 중첩되는 제2 시간 윈도우에서 수신된 네트워크 패킷들에 대해 제2 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 상기 소정의 학습된 머신러닝 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여 부를 감지하고, 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 상기 소정의 학습된 LLM 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부 를 감지하며, 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결 과가 모두 이상인 경우로 감지된 경우에 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정한다. 상기 프로세서는, 상기 제1 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감 지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상 기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정한다. 상기 프로세서는, 상기 제2 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감 지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상 기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정한다. 상기 LLM은 OpenAI의 GPT(Generative Pre-Trained Transformer) 모델을 포함할 수 있다. 상기의 다른 기술적 과제를 달성하기 위한, 네트워크 패킷의 이상(Anomaly) 감지를 위한 방법은, 텍스트를 포함 하는 시계열 데이터에 해당하는 네트워크 패킷을 수신하는 단계; 소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 상기 제1 시간 윈도우 내 에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하는 단계; 상기 제1 시간 윈도우 내에서 수신된 네트워 크 패킷들의 텍스트를 포함하는 네트워크 정보를 소정의 학습된 LLM(Large Language Model) 모델에 적용하여 상 기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부를 감지하는 단계; 및 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정하는 단계를 포함할 수 있다. 상기 방법은, 시간 윈도우 슬라이딩 방식으로 상기 제1 시간 윈도우와 시간 구간이 일부 중첩되는 제2 시간 윈 도우에서 수신된 네트워크 패킷들에 대해 제2 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 상기 소 정의 학습된 머신러닝 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여부 를 감지하는 단계; 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정보를 상기 소정의 학습된 LLM 모델에 적용하여 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이상 여 부를 감지하는 단계; 및 상기 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초한 이상 여 부 감지 결과가 모두 이상인 경우로 감지된 경우에 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이 상이 있는 것으로 결정하는 단계를 더 포함할 수 있다. 상기 방법은, 상기 제1 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결 과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제1 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 단계를 더 포함할 수 있다. 상기 방법은, 상기 제2 윈도우 시간에서 수신된 네트워크 패킷들의 상기 패킷 길이에 기초한 이상 여부 감지 결 과와 상기 네트워크 정보에 기초한 이상 여부 감지 결과 중 어느 하나가 이상이 아닌 것으로 감지되면 상기 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 없는 것으로 결정하는 단계를 더 포함할 수 있다."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 네트워크 패킷의 이상 감지 방법은 네트워크 패킷 데이터의 경우 수치 데이터가 거의 없으며 텍 스트(단어) 형태의 데이터가 주로 이루는 데이터의 특성에 활용하여 자연어 처리 기반으로 네트워크 패킷의 이 상을 탐지함으로써 높은 정확도의 네트워크 패킷의 이상 탐지를 가능하게 한다. 또한, 데이터가 끊임없이 이어지는 시계열 데이터의 특성과 방대한 양의 데이터를 한번의 처리할 수 없는 머신 러닝 자체의 한계로 인해 자연어 처리를 활용한 이상치 탐지 알고리즘이 적용되기 어려웠지만, 시계열 데이터의 이상치 탐지 방법에 시간 윈도우 슬라이딩 방법을 사용하여 자연어 처리에 적용함으로써 실시간으로 들어오는 데이터로 실시간(Real-Time) 이상치 탐지도 가능하다는 효과가 있다. 더욱이, 자연어 처리 이상치 탐지 방법으로 추론 시간이 오래 걸리고 학습에 많은 준비가 필요한 자연어 처리 알고리즘이 아닌 ChatGPT의 기능과 성능을 활용할 수 있는 OpenAI의 API를 사용함으로써 실시간으로 높은 성능 을 방법에서 기대할 수 있다. 또한, 해당 시간 윈도우의 데이터를 OpenAI의 API를 통해 전송하고 바로 그 결과를 회신 받음으로써 매 윈도우 의 이상치 탐지 결과를 확인할 수 있으며 이상치가 발생한 시간 윈도우를 특정할 수 있게 되어 이상치 검출의 효율성을 높일 수 있다. 본 발명에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명에 따른 바람직한 실시 형태를 첨부된 도면을 참조하여 상세하게 설명한다. 첨부된 도면과 함께 이하에 개시될 상세한 설명은 본 발명의 예시적인 실시형태를 설명하고자 하는 것이며, 본 발명이 실시될 수 있 는 유일한 실시형태를 나타내고자 하는 것이 아니다. 이하의 상세한 설명은 본 발명의 완전한 이해를 제공하기 위해서 구체적 세부사항을 포함한다. 그러나, 당업자는 본 발명이 이러한 구체적 세부사항 없이도 실시될 수 있 음을 안다. 몇몇 경우, 본 발명의 개념이 모호해지는 것을 피하기 위하여 공지의 구조 및 장치는 생략되거나, 각 구조 및 장치의 핵심기능을 중심으로 한 블록도 형식으로 도시될 수 있다. 또한, 본 명세서 전체에서 동일한 구성요소에 대해서는 동일한 도면 부호를 사용하여 설명한다. 본 발명은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들을 도면에 예시하고 상세하게 설명하고자 한다. 그러나 이는 본 발명을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 발명 의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의 해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된 다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들 을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요 소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 또한, 각 도면을 참조하여 설명하는 실시예의 구성 요소가 해당 실시예에만 제한적으로 적용되는 것은 아니며, 본 발명의 기술적 사상이 유지되는 범위 내에서 다른 실시예에 포함되도록 구현될 수 있으며, 또한 별도의 설명 이 생략될지라도 복수의 실시예가 통합된 하나의 실시예로 다시 구현될 수도 있음은 당연하다. 또한, 명세서에 기재된 \"…부\", \"…유닛\", \"…모듈\", \"…기\" 등의 용어는 적어도 하나의 기능이나 동작을 처리 하는 단위를 의미하며, 이는 하드웨어나 소프트웨어 또는 하드웨어 및 소프트웨어의 결합으로 구현될 수 있다. 본 발명을 설명하기에 앞서 인공 지능(AI), 머신 러닝, 딥 러닝에 대해 설명한다. 이러한 세 가지 개념의 관계 를 가장 쉽게 파악하는 방법은 세 개의 동심원을 가상하면 된다. 인공 지능이 가장 큰 원이고, 그 다음이 머신 러닝이며, 현재의 인공지능 붐을 주도하는 딥 러닝이 가장 작은 원이라 할 수 있다. 인공 지능이라는 개념은 1956년 미국 다트머스 대학에 있던 존 매카시 교수가 개최한 다트머스 회의에서 처음 등장했으며, 최근 몇 년 사이 폭발적으로 성장하고 있는 중이다. 특히 2015년 이후 신속하고 강력한 병렬 처리 성능을 제공하는 GPU의 도입으로 더욱 가속화되고 있죠. 갈수록 폭발적으로 늘어나고 있는 저장 용량과 이미지, 텍스트, 매핑 데이터 등 모든 영역의 데이터가 범람하게 된 빅데이터 시대의 도래도 이러한 성장세에 큰 영향을 미쳤다. 인공 지능 - 인간의 지능을 기계로 구현 1956년 당시 인공 지능의 선구자들이 꿈꾼 것은 최종적으로 인간의 지능과 유사한 특성을 가진 복잡한 컴퓨터를 제작하는 것이었다. 이렇듯 인간의 감각, 사고력을 지닌 채 인간처럼 생각하는 인공 지능을 ‘일반 AI(General AI)’라고 하지만, 현재의 기술 발전 수준에서 만들 수 있는 인공지능은 ‘좁은 AI(Narrow AI)’의 개념에 포함 된다. 좁은 AI는 소셜 미디어의 이미지 분류 서비스나 얼굴 인식 기능 등과 같이 특정 작업을 인간 이상의 능력 으로 해낼 수 있는 것이 특징이다. 머신 러닝 - 인공 지능을 구현하는 구체적 접근 방식 머신 러닝은 메일함의 스팸을 자동으로 걸러주는 역할을 한다. 한편, 머신 러닝은 기본적으로 알고리즘을 이용 해 데이터를 분석하고, 분석을 통해 학습하며, 학습한 내용을 기반으로 판단이나 예측을 수행한다. 따라서 궁극 적으로는 의사 결정 기준에 대한 구체적인 지침을 소프트웨어에 직접 코딩해 넣는 것이 아닌, 대량의 데이터와 알고리즘을 통해 컴퓨터 그 자체를 ‘학습’시켜 작업 수행 방법을 익히는 것을 목표로 한다. 머신 러닝은 초기 인공 지능 연구자들이 직접 제창한 개념에서 나온 것이며, 알고리즘 방식에는 의사 결정 트리 학습, 귀납 논리 프로그래밍, 클러스터링, 강화 학습, 베이즈(Bayesian) 네트워크 등이 포함된다. 그러나 이 중 어느 것도 최종 목표라 할 수 있는 일반 AI를 달성하진 못했으며, 초기의 머신 러닝 접근 방식으로는 좁은 AI조차 완성하기 어 려운 경우도 많았던 것이 사실이다. 현재 머신 러닝은 컴퓨터 비전 등의 분야에서 큰 성과를 이뤄내고 있으나, 구체적인 지침이 아니더라도 인공 지 능을 구현하는 과정 전반에 일정량의 코딩 작업이 수반된다는 한계점에 봉착하였다. 가령 머신 러닝 시스템을 기반으로 정지 표지판의 이미지를 인식할 경우, 개발자는 물체의 시작과 끝 부분을 프로그램으로 식별하는 경계 감지 필터, 물체의 면을 확인하는 형상 감지, ‘S-T-O-P’와 같은 문자를 인식하는 분류기 등을 직접 코딩으로 제작해야 한다. 이처럼 머신 러닝은 ‘코딩’된 분류기로부터 이미지를 인식하고, 알고리즘을 통해 정지 표지판 을 ‘학습’하는 방식으로 작동된다. 머신 러닝의 이미지 인식률은 상용화하기에 충분한 성능을 구현하지만, 안개가 끼거나 나무에 가려서 표지판이 잘 보이지 않는 특정 상황에서는 이미지 인식률이 떨어지기도 한다. 최근까지 컴퓨터 비전과 이미지 인식이 인 간의 수준으로 올라오지 못한 이유는 이 같은 인식률 문제와 잦은 오류 때문이다. 딥 러닝 - 완전한 머신 러닝을 실현하는 기술 초기 머신 러닝 연구자들이 만들어 낸 또 다른 알고리즘인 인공 신경망(artificial neural network)에 영감을 준 것은 인간의 뇌가 지닌 생물학적 특성, 특히 뉴런의 연결 구조였다. 그러나 물리적으로 근접한 어떤 뉴런이든 상호 연결이 가능한 뇌와는 달리, 인공 신경망은 레이어 연결 및 데이터 전파 방향이 일정하다. 예를 들어, 이미지를 수많은 타일(tile)로 잘라 신경망의 첫 번째 레이어에 입력하면, 그 뉴런들은 데이터를 다 음 레이어로 전달하는 과정을 마지막 레이어에서 최종 출력이 생성될 때까지 반복한다. 그리고 각 뉴런에는 수 행하는 작업을 기준으로 입력의 정확도를 나타내는 가중치가 할당되며, 그 후 가중치를 모두 합산해 최종 출력 이 결정된다. 정지 표지판의 경우, 팔각형 모양, 붉은 색상, 표시 문자, 크기, 움직임 여부 등 그 이미지의 특 성이 잘게 잘려 뉴런에서 ‘검사’되며, 신경망의 임무는 이것이 정지 표지판인지 여부를 식별하는 것이다. 여 기서는 충분한 데이터를 바탕으로 가중치에 따라 결과를 예측하는 ‘확률 벡터(probability vector)’가 활용된 다. 딥러닝은 인공신경망에서 발전한 형태의 인공 지능으로, 뇌의 뉴런과 유사한 정보 입출력 계층을 활용해 데이터 를 학습한다. 그러나 기본적인 신경망조차 굉장한 양의 연산을 필요로 하는 탓에 딥러닝의 상용화는 초기부터 난관에 부딪혔다. 그럼에도 불구하고 연구자들의 연구는 지속됐고, 슈퍼컴퓨터를 기반으로 딥러닝 개념을 증명 하는 알고리즘을 병렬화하는데 성공했다. 그리고 병렬 연산에 최적화된 GPU의 등장은 신경망의 연산 속도를 획 기적으로 가속하며 진정한 딥러닝 기반 인공 지능의 등장을 불러왔다. 신경망 네트워크는 ‘학습’ 과정에서 수많은 오답을 낼 가능성이 크다. 정지 표지판의 예로 돌아가서, 기상 상 태, 밤낮의 변화에 관계없이 항상 정답을 낼 수 있을 정도로 정밀하게 뉴런 입력의 가중치를 조정하려면 수백, 수천, 어쩌면 수백만 개의 이미지를 학습해야 할지도 모른다. 이 정도 수준의 정확도에 이르러서야 신경망이 정 지 표지판을 제대로 학습했다고 볼 수 있다. 2012년, 구글과 스탠퍼드대 앤드류 응(Andrew NG) 교수는 1만6,000 개의 컴퓨터로 약 10억 개 이상의 신경망으로 이뤄진 ‘심층신경망(Deep Neural Network)’을 구현했다. 이를 통해 유튜브에서 이미지 1,000만 개를 뽑아 분석한 뒤, 컴퓨터가 사람과 고양이 사진을 분류하도록 하는데 성공 했다. 컴퓨터가 영상에 나온 고양이의 형태와 생김새를 인식하고 판단하는 과정을 스스로 학습하게 한 것이다. 딥러닝으로 훈련된 시스템의 이미지 인식 능력은 이미 인간을 앞서고 있다. 이 밖에도 딥러닝의 영역에는 혈액 의 암세포, MRI 스캔에서의 종양 식별 능력 등이 포함된다. 구글의 알파고는 바둑의 기초를 배우고, 자신과 같 은 AI를 상대로 반복적으로 대국을 벌이는 과정에서 그 신경망을 더욱 강화해 나갔다. 딥러닝의 등장으로 인해 머신 러닝의 실용성은 강화됐고, 인공 지능의 영역은 확장됐다. 딥러닝은 컴퓨터 시스템을 통해 지원 가능한 모 든 방식으로 작업을 세분화한다. 운전자 없는 자동차, 더 나은 예방 의학, 더 정확한 영화 추천 등 딥러닝 기반 의 기술들은 우리 일상에서 이미 사용되고 있거나, 실용화를 앞두고 있다. 딥러닝은 공상 과학에서 등장했던 일 반 AI를 실현할 수 있는 잠재력을 지닌 인공 지능의 현재이자, 미래로 평가받고 있다. 이하 딥러닝에 대해 좀 더 구체적으로 살펴본다. 딥러닝이란 인간의 신경망(Neural Network) 이론을 이용한 인공신경망(Artificial Neural Network, ANN)의 일 종으로, 계층 구조(Layer Structure)로 구성하면서 입력층(Input layer)과 출력층(Output layer) 사이에 하나 이상의 숨겨진 층(Hidden layer)(이하, 중간층이라 지칭함)을 갖고 있는 심층 신경망(Deep Neural Network, DNN)을 지칭하는 기계학습(Machine Learning) 모델 또는 알고리즘의 집합이다. 간단히 말하면, 딥러닝(Deep Learning)은 심층 계층을 가진 인공신경망이라 할 수 있다. 사람의 뇌는 250억 개의 신경세포로 구성되어 있다고 추정된다. 뇌는 신경세포로 이루어지며, 각각의 신경세포 (뉴런, Neuron)는 신경망을 구성하는 신경세포 1개를 지칭한다. 신경세포는 1개의 세포체(cell body)와 세포체 의 돌기인 1개의 축삭(Axon or nurite) 및 보통 여러 개의 수상돌기(dendrite or protoplasmic process)를 포 함하고 있다. 이러한 신경세포들 간의 정보 교환은 시냅스라고 부르는 신경세포 간의 접합부를 통하여 전달된다. 신경세포 하나만 떼어 놓고 보면 매우 단순하지만, 이러한 신경세포들이 모이면 인간의 지능을 지닐 수 있다. 수상돌기에서 다른 신경세포들이 보내는 신호를 전달받는 부분(Input)이고 축색돌기는 세포체로부터 아주 길게 뻗어가는 부분으로 다른 신경세포에 신호를 전달하는 부분(Output)이다. 신경세포들 사이의 신호를 전달해주는 축색돌기와 수상돌기 간을 연결해주는 시냅스라는 연결부가 있는데, 신경세포의 신호를 무조건 전달 하는 것이 아니라, 신호 강도가 일정한 값(임계치, Threshold) 이상이 되어야 신호를 전달하는 것이다. 즉, 각 시냅스마다 연결강도가 다를 뿐만 아니라 신호를 전달할지 말지를 결정하게 되는 것이다. 인공지능의 한 분야인 인공신경망(ANN)은 생물학(통상 인간)의 뇌 구조(신경망)를 모방하여 모델링한 수학적 모 델이다. 즉, 인공신경망은 이러한 생물학적 신경세포의 정보처리 및 전달 과정을 모방하여 구현한 것이다. 인간 의 뇌가 문제를 해결하는 방식과 유사하게 구현한 것으로서 신경망은 각 신경세포가 독립적으로 동작하는 하기 때문에 병렬성이 뛰어나다. 또한 많은 연결선에 정보가 분산되어 있어서 몇몇 신경세포에 문제가 발생해도 전체에 큰 영향을 주지 않으므로 일정 수준의 오류에 강하고 주어진 환경에 대한 학습 능력을 갖고 있다. 심층신경망(Deep neural network)는 인공신경망의 후손이라 볼 수 있으며, 기존의 한계를 뛰어넘어서 과거에 수 많은 인공 지능 기술이 실패를 겪었던 영역에 성공 사례를 거두고 인공신경망의 최신 버전이다. 생물학적 신경 망을 모방하여 인공신경망을 모델링한 내용을 살펴보면 처리 단위(Processing unit) 측면에서는 생물적인 뉴런 (neurons)이 노드(nodes)로, 연결성(Connections)은 시냅스(Synapse)가 가중치(weights)로 다음 표 1과 같이 모델링 되었다. 표 1 생물학적 신경망 인공신경망 세포체 노드(node) 수상돌기 입력(input) 축삭(Axon) 출력(output) 시냅스 가중치(weight) 도 1은 인공신경망의 계층 구조(layer structure)를 예시한 도면이다. 인간의 생물학적 신경세포가 하나가 아닌 다수가 연결되어 의미 있는 작업을 하듯, 인공신경망의 경우도 개별 뉴런들을 서로 시냅스를 통해 서로 연결시켜서 복수개의 계층(layer)이 서로 연결되어 각 층간의 연결 강도는 가중치로 수정(update) 가능하다. 이와 같이 다층 구조와 연결강도로 학습과 인지를 위한 분야에 활용된다. 각 노드들은 가중치가 있는 링크들로 연결되어 있고, 전체 모델은 가중치를 반복적으로 조정하면서 학습을 한다. 가중치는 장기 기억을 위한 기본 수단으로서 각 노드들의 중요도를 표현한다. 간단히 이야기하면, 인공신 경망은 이들 가중치를 초기하고 훈련시킬 데이터 세트로 가중치를 갱신하여 조정하여 전체 모델을 훈련시키는 것이다. 훈련이 완료된 후에 새로운 입력값이 들어오면 적절한 출력값을 추론해 내게 된다. 인공신경망의 학습 원리는 경험의 일반화로부터 지능이 형성되는 과정이라고 보면 되고 bottom-up 방식으로 이루어지게 된다. 도 1 에서 중간층이 2개 이상(즉 5~10개)일 경우를 층이 깊어진다고 보고 심층신경망(Deep Neural Network)이라 하며, 이러한 심층신경망을 통해서 이루어진 학습과 추론 모델을 딥 러닝이라고 지칭할 수 있다. 인공신경망은 입력과 출력을 제외하고 하나의 중간계층(통상적으로 은닉계층, 'hidden layer'라 지칭함)을 가지 고 있어도 어느 정도의 역할을 수행할 수 있지만, 문제의 복잡도가 커지면 노드의 수 또는 계층의 수를 증가시 켜야 한다. 이 중에서 계층의 수를 증가시켜 다층구조 모델을 가져가는 것이 효과적인데, 효율적인 학습이 불가 능하고 네트워크를 학습하기 위한 계산량이 많다는 한계로 인해 활용 범위가 제한적이다. 그러나, 위와 같이 기존의 한계점이 극복됨으로써, 인공신경망은 깊은 구조(Deep Structure)를 가져갈 수 있게 되었다. 이로 인해 복잡하고 표현력 높은 모델을 구축할 수 있게 되어 음성인식, 얼굴인식, 물체인식, 문자인식 등 다양한 분야에서 획기적인 결과들이 발표되고 있다. 도 2는 심층 신경망의 일 예를 도시한 도면이다. 심층 신경망(Deep Neural Network, DNN)은 입력층(input layer)과 출력층(output layer) 사이에 여러 개의 은 닉층(hidden layer)들로 이뤄진 인공신경망(Artificial Neural Network, ANN)이다. 입력층(Input layer)과 출 력층(Output layer) 사이에 하나 이상의 은닉계층(Hidden layer)을 갖고 있는 심층 신경망(Deep Neural Network, DNN)을 지칭하는 머신 러닝(기계학습(Machine Learning)) 모델 또는 알고리즘의 집합이다. 신경망의 연결은 입력층에서 은닉계층으로, 은닉계층에서 출력층으로 이루어진다. 심층 신경망은 일반적인 인공신경망과 마찬가지로 복잡한 비선형 관계(non-linear relationship)들을 모델링할 수 있다. 예를 들어, 물체 식별 모델을 위한 심층 신경망 구조에서는 각 물체가 영상의 기본적 요소들의 계층적 구성으로 표현될 수 있다. 이때, 추가 계층들은 점진적으로 모인 하위 계층들의 특징들을 규합시킬 수 있다. 심 층 신경망의 이러한 특징은, 비슷하게 수행된 인공신경망에 비해 더 적은 수의 유닛(unit, node)들 만으로도 복 잡한 데이터를 모델링할 수 있게 해준다. 이전의 심층 신경망들은 보통 앞먹임 신경망으로 설계되어 왔지만, 최근의 연구들은 심층 학습 구조들을 순환 신경망(Recurrent Neural Network, RNN)에 성공적으로 적용했다. 일례로 언어 모델링(language modeling) 분야 에 심층 신경망 구조를 적용한 사례 등이 있다. 합성곱 신경망(Convolutional Neural Network, CNN)의 경우에 는 컴퓨터 비전(computer vision) 분야에서 잘 적용되었을 뿐만 아니라, 각각의 성공적인 적용 사례에 대한 문서화 또한 잘 되어 있다. 더욱 최근에는 합성곱 신경망이 자동음성인식(Automatic Speech Recognition, ASR)을 위한 음향 모델링(acoustic modeling) 분야에 적용되었으며, 기존의 모델들 보다 더욱 성공적으로 적용되었다는 평가를 받고 있다. 심층 신경망은 표준 오류역전파 알고리즘으로 학습될 수 있다. 이때, 가중치(weight)들은 확 률적 경사 하강법(stochastic gradient descent)을 통하여 갱신될 수 있다. 본 발명에서는 이상 감지 방법에 대한 제안하고자 하며, 이상 감지 유형에 대해 간략히 설명한다. 이상 감지(Anomaly Detection) 이상 감지(혹은 검출)이란 데이터에 존재하는 비정상 패턴(Abnormal Patterns)를 감지 (혹은 검출)하여 이상으 로부터 발생할 수 있는 위협을 모니터링하여 예방하는 것을 의미한다. 이상 감지 모델에서는 Auto Encoder (AE), Long Short Term Memory (LSTM) 및 Generative Adversarial Networks (GAN) 등과 같은 딥러닝(Deep Learning) 기반의 모델이 이용된다. 정상 데이터와 확연하게 차이를 보이는 패턴 신호를 비정상 패턴 신호로 취 급하며, 이러한 데이터는 특정 시스템의 동작에 심각한 영향을 초래한다. 이하에서 이상 감지 유형에 대해 간략 히 설명한다. 다변량 이상 감지(Multivariate Anomaly Detection) 다변량 이상 감지는 데이터의 종류에 따른 이상 감지 방법 중에 하나로서 디바이스 상태를 모니터링 하기 위해 다중 센서(Multiple Sensors)를 이용하여, 전압, 온도, 압력 등과 같은 각종 정보를 수집한다. 디바이스 상태를 안정적으로 유지하고, 디바이스 오작동 발생을 예방하기 위해, 센서로부터 수집된 다중 시계열(Multiple Time- Series) 데이터로부터 디바이스에 대한 작동 과정 또는 이상을 감지하는 방법에 대한 연구가 진행되고 있다. 보안 시스템 침입 탐지(Intrusion Detection) 컴퓨터 시스템의 시계열 데이터, 악성 코드 데이터, 시스템이 기록된 로그(log) 데이터 및 네트워크 패킷 (Network Packet) 데이터에 대해 이상 패턴을 검출하여 악성 코드(Malware) 또는 컴퓨터 시스템 상의 침입을 탐 지한다. 네트워크 패킷(Network Packet) 데이터의 경우 송신 IP, 수신 IP, 프로토콜(Protocol), 통신 정보 (Communication Information), 패킷 크기(Packet Size)을 포함하고 있으며, 주기성을 띄지는 않지만 시간대순 으로 정렬할 수 있는 시계열 데이터이다. 통신 정보, 패킷 크기 등의 급작스러운 변동을 감지하여 이상치를 탐 지하게 된다. 해당 데이터의 경우 통신 정보가 단어의 연결로 구성되어 있어 GPT API를 사용함에 있어 용이하다. 온라인 사기 탐지(Fraud Detection) 금융 거래 내역에 대한 내용을 표로 정리한 데이터 (Tubular)를 데이터를 활용한다. 대부분의 패턴과는 다른 특 이 패턴을 검출하여 이상치를 탐지하는 알고리즘을 사용한다. 주로 보험, 신용 금융과 관련된 불법 행위를 탐지 하는 방법이다. 의료 진단 탐지(Medical Anomaly Detection) 생체 데이터에 대한 이상 특이 패턴을 검출하여 심전도 및 뇌파 혈압 등의 데이터가 이용된다. 신체 내의 다수 의 센서를 부착하여 센서로부터 들어오는 다변량 신호를 통해 이상치를 탐지하는 다변량 이상 감지 중에 하나이 다. 주로 Electrocardiogram (ECG) 심전도 또는 Electroencephalogram (EEG) 뇌파 데이터를 사용하며 특히 심 전도 데이터를 이용하여 부정맥과 같은 신체의 이상을 탐지하는 연구가 활발히 진행되고 있다. 산업 시스템 이상 탐지(Industrial Anomaly Detection) 산업 장치 (수처리 장치, 보일러 장치, 공장 시스템 등) 내의 다수의 센서와 시스템을 동작 시키는 모터 그리고 제어하는 액추에이터 (Actuator)로부터 생성된 다변량 데이터로부터 이상치를 탐지한다. 다변량 신호를 통해 이 상치를 탐지하는 다변량 이상 감지 중에 하나이다. 각종 시스템에 가해지는 압력과 온도의 급격한 변화 또는 액 추에이터에 전해지는 급격한 변화 등으로 이상치를 탐지한다. 대부분의 정상 신호 패턴과는 다른 일시적인 비정 상 신호 패턴을 감지하여 이상치를 탐지한다. 본 발명은 디바이스, 산업 현장, 네트워크 환경에서 상태 이상을 감지하기 위한 이상치 감지 기술의 일환으로, GPT API를 사용하여 Chat GPT의 알고리즘으로서 디바이스에 이상 감지 기술을 적용하여 기기가 오작동을 일으키 기 전에 이상을 탐지하여 사고를 예방하는 방법을 제안하고자 한다. GPT 모델 자연어와 코드를 이해하도록 훈련된 OpenAI의 GPT(Generative Pre-trained Transformer)모델이다. GPT는 입력 에 대한 응답으로 텍스트 출력을 제공하며 GPT에 대한 입력을 프롬프트(Prompt)라고 한다. 프롬프트를 디자인하 는 것은 기본적으로 GPT 모델을 프로그램이 하는 방법이며 일반적으로 작업을 성공적으로 완료하는 방법에 대한"}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "지침이나 몇 가지 예를 제공한다. GPT는 콘텐츠 또는 코드 생성, 요약, 대화, 창의적 글쓰기 등을 포함한 매우 다양한 작업에서 사용할 수 있다. 임베딩 임베딩은 텍스트와 같은 데이터의 벡터 표현이다. 이 표현은 그 데이터의 내용이나 의미의 일부를 보존하는 것 을 목적으로 한다. 어떤 방식으로 유사한 데이터 덩어리는 임베딩에서 더 가까운 위치를 가질 것이며, 관련 없 는 데이터는 더 멀리 떨어져 있을 것이다. OpenAI는 텍스트 문자열을 입력으로 받아 임베딩 벡터를 출력으로 내 놓는 텍스트 임베딩 모델을 제공한다. 임베딩은 검색, 클러스터링, 추천, 이상탐지, 분류 등에 유용하다. OpenAI API Chat GPT를 개발한 OpenAI의 API이다. 거대한 데이터로 학습된 GPT 모델을 사용해서 각종 과제를 수행할 수 있 다. 입력 데이터는 텍스트를 ‘토큰’이라는 단위로 처리하게 되는데, 토큰은 자주 나타나는 문자의 연속을 나 타낸다. 예를 들어, “Tokenization” 문자열은 “Token”과 “ization”으로 분해되며, “the”와 같은 짧고 흔한 단어는 단일 토큰으로 표현된다. 토큰으로 입력된 입력 데이터를 API로 전송하게 되면, 기존에 입력한 명 령어 묶음인 “쿼리”와의 비교를 통해 맞춤 인공지능 모델을 구현하게 된다. 즉, 데이터의 형태나 모델의 형태 에 구애받지 않는 다목적 인공지능 구현 API이다. 본 발명에서는 컴퓨터 시스템의 시계열 데이터, 악성 코드 데이터, 시스템이 기록된(log) 데이터 및 네트워크 패킷 데이터에 대한 이상 패턴을 검출하여 악성 코드(Malware) 또는 시스템 상의 침입을 탐지하는 보안 시스템 침입 탐지를 위한 알고리즘 방법을 제안하고자 한다. 보안 시스템 침입 탐지를 위한 이상치 탐지 알고리즘은 네 트워크에서 송수신 되는 패킷에 대한 정보 데이터를 가지고 학습이 이뤄지게 된다. 이 네트워크 패킷 데이터는 여타 다른 시계열 이상치 탐지 알고리즘과는 다르게 ‘패킷 정보’ 데이터를 활용하게 된다. 이 데이터는 숫자 값을 가지고 있는 수치 데이터나 객체의 종류를 나타내는 범주 데이터가 아닌 해당 네트워크 패킷이 어떤 과정 을 거쳐서 전송되었는가에 대한 단어들의 나열로 구성되어 있다. 그러나, 이는 패킷 종류에 따라 나열 형태가 달라져 일관성 있게 데이터를 추출하기 어렵다는 문제점과 단어 나열의 형태이기에, 기존의 이상치 탐지 알고리 즘, 다시 말해 머신 러닝 모델로 학습하기에는 힘들다는 문제점이 있다. 이러한 문제는 이상치 감지에 있어서 큰 챌런지가 되고, 기존의 대부분의 이상치 감지 알고리즘 모델이 시계열 을 기반으로 알고리즘이 구성되어 있다는 점과 모두 수치 데이터를 기반으로 구현되는 알고리즘 모델들이라는 점 때문이다. 네트워크 패킷 데이터에도 수치 데이터가 있지만, ‘패킷의 길이’와 같은 단순한 수치 데이터 한 가지 밖에 없다는 것이 문제이다. 기존의 네트워크 분야에서 보안 시스템 침입 탐지 알고리즘은 주로 소수의 ‘ 패킷의 길이’와 같은 단순한 수치 데이터로만 가지고 이상치 탐지를 구현해왔다. 그러나, 너무 적은 데이터양 과 단순한 데이터는 좋은 정확도의 이상치 탐지 결과를 추출해내기는 부족했으며, 단순한 데이터 형태로 인해 좋은 성능의 머신러닝 모델 또는 딥러닝 모델을 사용하지 못하는 점도 한계점이었다. 또한 대부분의 네트워크 데이터는 ‘네트워크 정보’ (혹은 패킷 정보라고도 호칭이 가능함)에 저장되어 있지만 사용하지 못하는 점도 상당한 비효율을 야기한다. 이와 같은 문제점으로 인해 네트워크의 보안 시스템 침입 방지 알고리즘에 대한 개 발과 방법에 대한 연구가 매우 저조하다. 이러한 문제점들을 하고자 본 발명에서는 보안 시스템 침입 방지 알고리즘에서 사용하던 ‘패킷 길이’등의 단 순하며 소수의 데이터를 가지고 학습하던 방법에 더해 OpenAI API를 사용해 실시간으로 ‘네트워크 정보’ 혹은 ‘패킷 정보’란의 단어들의 나열을 입력으로 넣어 이상치를 탐지하는 방법을 제안한다. 즉, 기존의 시계열 이 상치 탐지 알고리즘과 자연어 처리 알고리즘의 결합을 통해 새로운 이상치 방법론을 제안하고자 한다. 본 발명 에서 제안하는 자연어 처리 알고리즘 모델은 LLM (Large Language Model)일 수 있다. LLM은 언어모델(LM)을 더 욱 확장한 개념으로 인간의 언어를 이해하고 생성하도록 훈련된 인공지능을 통칭한다. 본 발명에서 사용하는 LLM은 최근 이슈가 되고 있는 Chat GPT의 기능을 활용하여 OpenAI API를 사용해 자연어 처리를 진행한다. 해당 방법으로 인해 기존의 단순한 작업만 가능하던 이상치 탐지에 더불어 방대한 정보를 가지고 있는 ‘네트워크 정 보’ 데이터를 활용할 수 있게 됨으로써 정확도 높은 보안 시스템 침입 방지가 가능해진다. 즉, LLM은 GPT 모델 을 포함할 수 있다. 도 3은 본 발명에 따른 네트워크 패킷의 이상 감지를 위한 장치의 기능을 설명하기 위한 블록도를 예시한 도면이고, 도 4는 네트워크 패킷 데이터를 예시한 도면이고, 도 5는 본 발명에서 네트워크 패킷의 이상 여부를 감지하는데 사용되는 시간 윈도우 슬라이딩 방식을 설명하기 위한 도면이며, 도 6은 네트워크 패킷 데이터를 시 간 윈도우 슬라이딩 방식으로 이상 감지를 위한 방법을 예시한 도면이고, 도 7은 본 발명에 따른 텍스트를 포함 한 시계열 데이터로서 네트워크 패킷 데이터에 대한 이상 여부(이상치)를 감지하는 방법을 설명하기 위한 예시 적인 도면이며, 도 8은 LLM(예, OpenAI API의 GPT 모델)의 이상 여부 탐지의 이분법적 결과를 도시한 도면이다. 도 3을 참조하면, 네트워크 패킷의 이상 감지 장치는 프로세서, 통신부 및 메모리을 포함 할 수 있다. 통신부는 네트워크 패킷 데이터를 수신하는 등 외부로부터 데이터를 송수신하는 기능을 수행 한다. 메모리는 프로세서가 결과를 추론하기 위해 필요한 정보, 추론된 결과에 대한 정보 등 컴퓨팅 을 위해 필요한 다양한 정보를 저장할 수 있다. 프로세서는 네트워크 패킷의 이상 여부를 감지하는 기능을 수행한다. 이하에서 구체적으로 더 설명하도록 한다. 통신부의 시계열 데이터인 네트워크 패킷 (데이터)을 수신한다. 수신하는 네트워크 패킷은 일 예로서 도 4 와 같다. 네트워크 패킷들은 시계열적으로 수신된 데이터이다. 도 4에서 위에서 아래 방향으로(No. 1에서 No. 24로) 시간 순서에 따라 네트워크 패킷들이 수신되고 있음을 알 수 있으며, 각 네트워크 패킷은 시간 정보, 소 스 정보, 목적지 정보, 프로토콜 정보, 패킷 길이(Length) 정보, 네트워크 정보(info)(혹은 패킷 정 보)를 포함하고 있음을 알 수 있다. 여기서, 네트워크 정보 혹은 패킷 정보는 텍스트로 이루어진 정 보임을 알 수 있다. 따라서, 통신부는 네트워크로부터 텍스트를 포함하는 시계열 데이터에 해당하는 네트 워크 패킷을 수신할 수 있다. 도 5 및 도 6을 참조하면, 본 발명에 따른 장치의 프로세서에 구비된 소정의 학습된 머신러닝 모델인 이상 감지 알고리즘 모델은 시간 윈도우 슬라이딩 방식으로 실시간으로 이상치에 대한 탐지를 진행한다. 시간 윈도우 슬라이딩 방식이란 특정 시간길이의 윈도우를 설정하고 전체 시계열 데이터(예, 네트워크 패킷)를 일일이 확인하는 것이 아니라 해당 시간 윈도우 안에 들어와 있는 시계열 데이터만을 가지고 이상 여부를 판단한다. 그리고 해당 시간 윈도우를 소정 시간만큼(예, 네트워크 패킷 1개씩) 시간 진행방향으로 밀어가면서 다음 시간 윈도우들에서 이상 여부를 감지할 수 있다. 한 번에 무한정 길이의 시계열 데이터를 분석할 수 없다 는 점과 실시간으로 들어오는 데이터에 대한 이상 여부 감지를 위해 시간 윈도우를 시간진행 방향으로 밀어가는 방식인 슬라이딩으로 전체 시계열 데이터에 대해 이상 여부에 대해 감지하는 것이다. 윈도우 슬라이딩 방식은 시계열 데이터의 이상치 탐지에서 주로 사용하게 되는데 네트워크 데이터의 시계열 수치 데이터인 ‘패킷 길이 ’에 대한 이상 여부를 감지하여 네트워크 보안 위협을 판단한다. 일 예로서, 특정 구간에서 ‘패킷 길이 ’의 값이 급격하게 증가하거나 급격하게 감소할 경우 비정상적인 네트워크 접근이라고 판단하게 되는 것이다. 도 7을 참조하면, 본 발명에 따른 장치는 시계열 데이터의 패킷 길이에 대한 이상치 탐지 말고도 추 가적인 자연어 처리 방식의 이상치 탐지를 수행한다. 더욱이, 자연어 처리 과정은 특정 알고리즘을 활용하는 것 이 아닌 Chat GPT의 기능을 활용하여 진행하며 ChatGPT의 회사 OpenAI의 API를 활용한다. 그러나, 거대한 양의 네트워크 데이터를 모두 인식하기 위해서는 오랜 시간이 걸리고 그로 인한 효율성도 매우 떨어진다. 텍스트로 이루어진 네트워크 정보 혹은 패킷 정보를 입력 데이터로 LLM 모델에 입력하면, 도 8에 도시한 바와 같이 API에 서 진행되는 것이 해당 신호 중에 ‘비정상 신호’가 있다는 이분법적인 결과만을 나타내준다. 그러나, 이러한 이분법적인 결과만으로는 이상치 탐지를 활용하기에는 많은 어려움이 있다. 그로 인해 자연어 처리를 시간 윈도우 슬라이딩 방식으로 진행하는 방법에 대해서 제안함으로써, ‘비정상 신호’ 가 어느 시간 윈도우에서 감지되었는지에 대한 결과를 도출하고자 한다. 구체적으로, 프로세서는 텍스트를 포함하는 시계열 데이터의 이상치 탐지를 위해 시간 윈도우 슬라이딩 방 식으로 이상 여부를 감지할 때, 동시에 해당 시간 윈도우에 해당하는 ‘네트워크 정보’ 데이터도 GPT 모 델의 API를 통해 전송하고 회신 받는 형태로 진행하게 된다. 프로세서는 이러한 방법에 기초하여 텍스트를 포함하는 시계열 데이터의 이상 여부 감지, 자연어 처리 이상치 탐지를 수행할 수 있다. 더욱이, 프로세서(31 0)는 전체적인 네트워크 패킷 데이터 내에서 비정상 신호가 ‘있다’, ‘없다’ 로 이분법적인 결과만을 내는 API로도 특정 비정상 신호가 어느 시간 윈도우 위치에 존재하는지에 대한 판단과 결과를 도출해 낼 수 있다. 도 7을 참조하면, 프로세서는 소정의 시간 길이에 해당하는 제1 시간 윈도우 내에 수신된 네트워크 패킷들의 패킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 제1 시간 윈도우 내에서 수신된 네트 워크 패킷들에 대한 이상 여부를 감지할 수 있다. 또한, 프로세서는 제1 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정 보를 소정의 학습된 LLM(Large Language Model) 모델에 적용하여 제1 시간 윈도우 내에서 수신된 네 트워크 패킷들에 대한 이상 여부를 감지할 수 있다. 이후, 프로세서는 시간 윈도우 슬라이딩 방식으로 제1 시간 윈도우와 시간 구간이 일부 중첩되는 제2 시간 윈도우에서 수신된 네트워크 패킷들에 대해 제2 시간 윈도우 내에 수신된 네트워크 패킷들의 패 킷 길이를 소정의 학습된 머신러닝 모델에 적용하여 제2 시간 윈도우 내에서 수신된 네트워크 패킷 들에 대한 이상 여부를 감지할 수 있다. 또한, 프로세서는 제2 시간 윈도우 내에서 수신된 네트워크 패킷들의 텍스트를 포함하는 네트워크 정 보를 소정의 학습된 LLM 모델에 적용하여 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 대한 이 상 여부를 감지할 수 있다. 프로세서는 패킷 길이에 기초하여 네트워크 패킷의 이상 여부를 결정하고 네트워크 정보에 기초 하여 네트워크 패킷의 이상 여부를 결정할 수 있는데, 어느 한 방식에 의해 이상인 것으로 판단되면, 해당 시간 윈도우(510 혹은 520)에서 네트워크 패킷에 이상이 있는 것으로 판단할 수 있다. 상기 두가지 이상 여부 감지 방식을 활용함에 있어 논리곱(And)의 형태로 두가지 방법이 동시에 사용될 수 있다. 즉, 프로세서가 패킷 길이를 소정의 머신러닝 모델에 적용하여 시계열 데이터의 이상 여부를 탐지함과 동시에 텍스트를 포함하는 네트워크 정보를 LLM에 적용하여 네트워크 정보에 대한 이상 여 부를 탐지했을 경우 두가지 방식 모두 이상인 것으로 판단되면 전체적으로 이상치라고 판단하게 된다. 이는 기 존 시계열 탐지의 방식의 불안정함을 LLM 모델(OpenAI API)의 이상치 탐지 방식으로 보완하기 위함이다. 기존의 네트워크 데이터에서의 시계열 탐지 방식은 사용할 수 있는 데이터 종류의 한계로 인해 정확한 이상치 탐지 결과 값을 도출하는데 어려움이 있다. 본 발명에의 예시에서는 송수신 데이터의 크기인 패킷 길이만 으로는 정확한 이상치 탐지 결과를 도출하기 어려울 수 있다. 그 이유는 일정 구간에서 패킷 길이가 급격하게 증가했을 때에 외부 침입으로 인해 네트워크 상의 데이터가 증가할 수도 있어 이상치라고 판단하게 되지만, 실 제로 네트워크 사용자가 송수신하는 데이터의 양이 증가할 경우 패킷의 길이가 급격히 상승할 수도 있다. 이렇 듯 패킷 길이와 같은 제한된 데이터 종류만으로 이상치를 탐지하는 기존의 방법은 명백히 한계가 있다. 이 를 해결하기 위해 LLM 모델(OpenAI API)를 사용한 이상치 탐지 방법을 제안하게 된 것이다. 프로세서는 시계열 이상치 탐지에서 패킷 길이의 급격한 증가로 이상치라고 판단하게 된 후 LLM 모델 (OpenAI API)를 사용해 패킷 정보(Packet Info)를 기반으로 실제 네트워크에서 일어나는 일을 기반으로 이상치 를 판단하게 된다면 한정된 정보로 판단하게 되는 오류를 현저히 줄일 수 있을 것이다. 이는 한정된 데이터와 텍스트 데이터를 사용하는 어떠한 데이터의 형태에서도 사용이 가능하다. 이와 같이, 프로세서는 패킷 길이에 기초한 이상 여부 감지 결과와 상기 네트워크 정보에 기초 한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 제1 시간 윈도우 내에서 수신된 네트워크 패킷들 에 이상이 있는 것으로 결정한다. 마찬가지로, 프로세서는 패킷 길이에 기초한 이상 여부 감지 결과 와 네트워크 정보에 기초한 이상 여부 감지 결과가 모두 이상인 경우로 감지된 경우에 제2 시간 윈도우 내에서 수신된 네트워크 패킷들에 이상이 있는 것으로 결정한다. 도 9는 본 발명에 따른 네트워크 패킷의 이상치 탐지 결과를 그래프로 예시한 도면이며, 도 10은 본 발명에 따 른 네트워크 패킷의 이상치 탐지 결과의 정확도를 나타낸 도면이다. 도 9에서 가로축은 시간 축이다. 세로 축으로 빨간색으로 표시된 부분이 비정상을 감지한 부분들임을 알 수 있 다. 시간 윈도우 슬라이딩 방식으로 시간진행 방향으로 시간 윈도우를 밀어가면서 이상치 탐지를 한 결과를 도 시하고 있다. 도 10에 도시된 바와 같이, 도 9와 같은 그래프를 통해 본 결과 실제 45개의 비정상 중에서 44개 의 비정상을 감지함으로써, 특이도(정확도)가 99.3%에 이를 정도로 본 발명에 따른 네트워크 패킷의 이상 감지 방법은 매우 정확도가 높다는 장점을 가지고 있다. 이상에서 설명한 본 발명에 따른 네트워크 패킷의 이상 여부 감지 방법은 활용할 수 있는 데이터의 종류가 적어 개발과 연구가 더딘 머신 러닝 또는 딥러닝 알고리즘을 활용한 네트워크 데이터 기반 보안 시스템 침입 탐지 이 상치 탐지 알고리즘에 대한 새로운 돌파구가 될 수 있으며, 자연어 처리를 활용한 이상치 탐지를 제안하였다. 시계열 데이터의 특성상 끊임없이 이어지는 형태의 데이터로서 자연어 처리에 적합하지 않기 때문이며 시계열 데이터는 주로 수치 데이터를 포함하고 있고 단어 형태의 데이터는 거의 포함하고 있지 않기 때문이다. 그러나,본 발명에 따른 네트워크 패킷의 이상 감지 방법은 네트워크 패킷 데이터의 경우 수치 데이터가 거의 없으며 텍 스트(단어) 형태의 데이터가 주로 이루는 데이터의 특성에 활용하여 자연어 처리 기반으로 네트워크 패킷의 이 상을 탐지함으로써 높은 정확도의 네트워크 패킷의 이상 탐지를 가능하게 한다. 또한, 데이터가 끊임없이 이어지는 시계열 데이터의 특성과 방대한 양의 데이터를 한번의 처리할 수 없는 머신 러닝 자체의 한계로 인해 자연어 처리를 활용한 이상치 탐지 알고리즘이 적용되기 어려웠지만, 시계열 데이터의 이상치 탐지 방법에 시간 윈도우 슬라이딩 방법을 사용하여 자연어 처리에 적용함으로써 실시간으로 들어오는 데이터로 실시간(Real-Time) 이상치 탐지도 가능하다는 효과가 있다. 더욱이, 자연어 처리 이상치 탐지 방법으로 추론 시간이 오래 걸리고 학습에 많은 준비가 필요한 자연어 처리 알고리즘이 아닌 ChatGPT의 기능과 성능을 활용할 수 있는 OpenAI의 API를 사용함으로써 실시간으로 높은 성능 을 방법에서 기대할 수 있다. 또한, 해당 시간 윈도우의 데이터를 OpenAI의 API를 통해 전송하고 바로 그 결과를 회신 받음으로써 매 윈도우 의 이상치 탐지 결과를 확인할 수 있으며 이상치가 발생한 시간 윈도우를 특정할 수 있게 되어 이상치 검출의 효율성을 높일 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로세 서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨 터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0139066", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상장 치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또 는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨팅장치 상에 분산되어서, 분산 된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CDROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto- optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드 뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상기된 하 드웨어 장치는 실시예의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다. 이상에서 설명된 실시예들은 본 발명의 구성요소들과 특징들이 소정 형태로 결합된 것들이다. 각 구성요소 또는 특징은 별도의 명시적 언급이 없는 한 선택적인 것으로 고려되어야 한다. 각 구성요소 또는 특징은 다른 구성요 소나 특징과 결합되지 않은 형태로 실시될 수 있다. 또한, 일부 구성요소들 및/또는 특징들을 결합하여 본 발명 의 실시예를 구성하는 것도 가능하다. 본 발명의 실시예들에서 설명되는 동작들의 순서는 변경될 수 있다. 어느실시예의 일부 구성이나 특징은 다른 실시예에 포함될 수 있고, 또는 다른 실시예의 대응하는 구성 또는 특징과 교체될 수 있다. 특허청구범위에서 명시적인 인용 관계가 있지 않은 청구항들을 결합하여 실시예를 구성하거나 출원 후의 보정에 의해 새로운 청구항으로 포함시킬 수 있음은 자명하다. 본 발명에서 프로세서는 하드웨어(hardware) 또는 펌웨어(firmware), 소프트웨어, 또는 이들의 결합에 의 해 구현될 수 있다. 하드웨어를 이용하여 본 발명의 실시예를 구현하는 경우에는, 본 발명을 수행하도록 구성된 ASICs(application specific integrated circuits) 또는 DSPs(digital signal processors), DSPDs(digital signal processing devices), PLDs(programmable logic devices), FPGAs(field programmable gate arrays) 등 이 프로세서에에 구비될 수 있다. 본 발명은 본 발명의 필수적 특징을 벗어나지 않는 범위에서 다른 특정한 형태로 구체화될 수 있음은 당업자에 게 자명하다. 따라서, 상기의 상세한 설명은 모든 면에서 제한적으로 해석되어서는 아니되고 예시적인 것으로 고려되어야 한다. 본 발명의 범위는 첨부된 청구항의 합리적 해석에 의해 결정되어야 하고, 본 발명의 등가적 범위 내에서의 모든 변경은 본 발명의 범위에 포함된다."}
{"patent_id": "10-2023-0139066", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명에 관한 이해를 돕기 위해 상세한 설명의 일부로 포함되는, 첨부 도면은 본 발명에 대한 실시예를 제공 하고, 상세한 설명과 함께 본 발명의 기술적 사상을 설명한다. 도 1은 인공신경망의 계층 구조(layer structure)를 예시한 도면이다. 도 2는 심층 신경망의 일 예를 도시한 도면이다. 도 3은 본 발명에 따른 네트워크 패킷의 이상 감지를 위한 장치의 기능을 설명하기 위한 블록도를 예시한 도면이다. 도 4는 네트워크 패킷 데이터를 예시한 도면이다. 도 5는 본 발명에서 네트워크 패킷의 이상 여부를 감지하는데 사용되는 시간 윈도우 슬라이딩 방식을 설명하기 위한 도면이다. 도 6은 네트워크 패킷 데이터를 시간 윈도우 슬라이딩 방식으로 이상 감지를 위한 방법을 예시한 도면이다. 도 7은 본 발명에 따른 텍스트를 포함한 시계열 데이터로서 네트워크 패킷 데이터에 대한 이상 여부(이상치)를 감지하는 방법을 설명하기 위한 예시적인 도면이다. 도 8은 LLM(예, OpenAI API의 GPT 모델)의 이상 여부 탐지의 이분법적 결과를 도시한 도면이다. 도 9는 본 발명에 따른 네트워크 패킷의 이상치 탐지 결과를 그래프로 예시한 도면이다. 도 10은 본 발명에 따른 네트워크 패킷의 이상치 탐지 결과의 정확도를 나타낸 도면이다."}
