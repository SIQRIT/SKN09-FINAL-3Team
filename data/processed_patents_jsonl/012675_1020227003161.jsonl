{"patent_id": "10-2022-7003161", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0028038", "출원번호": "10-2022-7003161", "발명의 명칭": "자연어 이해 프레임워크에서 발화에 대한 복수의 의미 표현들의 도출", "출원인": "서비스나우, 인크.", "발명자": "사푸가이, 에드윈"}}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에이전트 자동화 시스템으로서,자연어 이해(natural language understanding)(NLU) 프레임워크를 저장하도록 구성된 메모리 - 상기 NLU 프레임워크는 품사(part-of-speech)(POS) 구성요소, 정정 구성요소, 변동성 필터 구성요소, 파서 구성요소, 및 최종스코어링 및 필터링 구성요소를 포함함 -; 및상기 NLU 프레임워크의 명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성된 프로세서를 포함하며, 상기 액션들은,상기 POS 구성요소를 이용하여, 발화들(utterances)의 세트로부터 잠재적인 POS 태깅들의 세트를 생성하기 위해상기 발화들의 세트의 품사(POS) 태깅을 수행하는 것;상기 변동성 필터 구성요소를 이용하여, 상기 잠재적인 POS 태깅들의 세트 내의 다른 POS 태깅들과 실질적으로유사한 하나 이상의 POS 태깅을 상기 잠재적인 POS 태깅들의 세트로부터 제거하는 것;상기 파서 구성요소를 이용하여, 상기 잠재적인 POS 태깅들의 세트로부터 잠재적인 의미 표현들의 세트를 생성하는 것; 및상기 최종 스코어링 및 필터링 구성요소를 이용하여, 상기 잠재적인 의미 표현들의 세트 내의 각각의 잠재적인의미 표현에 대한 각각의 최종 스코어를 계산하고 그 각각의 최종 스코어에 기반하여 상기 잠재적인 의미 표현들의 세트로부터 잠재적인 의미 표현들을 제거함으로써 의미 표현들의 최종 세트를 생성하는 것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는 상기 NLU 프레임워크의 명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,원래 발화에 기반하여 상기 발화들의 세트를 생성하기 위해 어휘 주입을 수행하는 것을 포함하고, 상기 발화들의 세트는 상기 원래 발화, 및 상이한 어구, 상이한 용어, 또는 이들의 조합을 갖는 상기 원래 발화의 하나 이상의 재표현을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 원래 발화는 사용자 발화이고, 상기 의미 표현들의 최종 세트는 의미 검색을 위한 검색 키를 정의하는 발화 의미 모델의 일부를 형성하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 원래 발화는 상기 메모리에 저장된 의도-엔티티 모델의 샘플 발화이고, 상기 의미 표현들의 최종 세트는의미 검색을 위한 검색 공간을 정의하는 이해 모델의 일부를 형성하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,공개특허 10-2022-0028038-3-상기 POS 구성요소, 상기 정정 구성요소, 상기 변동성 필터 구성요소, 상기 파서 구성요소, 및 상기 최종 스코어링 및 필터링 구성요소는 각각 상기 NLU 프레임워크의 플러그-인들(plug-ins)로서 구현되는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 POS 구성요소, 상기 파서 구성요소, 또는 이들의 조합은 피드-포워드 인공 신경망인 기계 학습(ML) 기반구성요소를 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 잠재적인 의미 표현들의 세트의 각각의 잠재적인 의미 표현은 발화 트리인, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 POS 구성요소를 이용하여 POS 태깅을 수행하기 위해, 상기 프로세서는 상기 NLU 프레임워크의 명령어들을실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,상기 발화들의 세트의 각각의 발화에 대해,상기 발화의 적어도 하나의 잠재적인 POS 태깅을 생성하는 것;상기 적어도 하나의 잠재적인 POS 태깅에 대한 각각의 신뢰도 스코어를 결정하는 것; 및상기 각각의 신뢰도 스코어가 미리 정의된 POS 임계값 이상이라고 결정하는 것에 응답하여 상기 적어도 하나의잠재적인 POS 태깅을 상기 잠재적인 POS 태깅들의 세트에 포함시키는 것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 변동성 필터 구성요소를 이용하여 상기 하나 이상의 POS 태깅을 제거하기 위해, 상기 프로세서는 상기 NLU프레임워크의 명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,상기 잠재적인 POS 태깅들의 세트의 제1 잠재적인 POS 태깅과 제2 잠재적인 POS 태깅 사이의 변동성 스코어를계산하는 것;상기 변동성 스코어가 미리 정의된 변동 임계값보다 작은 것에 응답하여, 상기 잠재적인 POS 태깅들의 세트로부터 상기 제2 잠재적인 POS 태깅을 제거하는 것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 변동성 필터 구성요소를 이용하여 상기 하나 이상의 POS 태깅을 제거하기 위해, 상기 프로세서는 상기 NLU프레임워크의 명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,상기 잠재적인 POS 태깅들의 세트의 각각의 잠재적인 POS 태깅 사이의 태깅 거리를 계산하는 것;상기 태깅 거리 및 미리 정의된 변동 임계값에 기반하여 상기 잠재적인 POS 태깅들의 세트를 잠재적인 POS 태깅들의 그룹들로 클러스터링하는 것;상기 잠재적인 POS 태깅들의 그룹들 각각에 대한 대표적 잠재적인 POS 태깅을 선택하는 것; 및공개특허 10-2022-0028038-4-대표적 잠재적인 POS 태깅들이 아닌 잠재적인 POS 태깅들을 상기 잠재적인 POS 태깅들의 세트로부터 제거하는것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 파서 구성요소를 이용하여 상기 잠재적인 의미 표현들의 세트를 생성하기 위해, 상기 프로세서는 상기 NLU프레임워크의 명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,상기 잠재적인 POS 태깅들의 세트의 각각의 잠재적인 POS 태깅에 대해,상기 잠재적인 POS 태깅의 적어도 하나의 잠재적인 의미 표현을 생성하는 것;상기 적어도 하나의 잠재적인 의미 표현에 대한 각각의 신뢰도 스코어를 결정하는 것; 및상기 각각의 신뢰도 스코어가 미리 정의된 파스 임계값 이상이라고 결정하는 것에 응답하여 상기 적어도 하나의잠재적인 의미 표현을 상기 잠재적인 의미 표현들의 세트에 포함시키는 것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서,상기 최종 스코어링 및 필터링 구성요소를 이용하는데 이용하기 위해, 상기 프로세서는 상기 NLU 프레임워크의명령어들을 실행하여 상기 에이전트 자동화 시스템으로 하여금 액션들을 수행하게 하도록 구성되고, 상기 액션들은,상기 잠재적인 의미 표현들의 세트의 각각의 잠재적인 의미 표현에 대해,상기 잠재적인 의미 표현의 POS 태깅 신뢰도 스코어와 파싱 신뢰도 스코어를 조합하여 상기 잠재적인 의미 표현의 각각의 최종 스코어를 계산하는 것; 및상기 잠재적인 의미 표현의 각각의 최종 스코어가 최종 스코어링 및 필터링 임계값보다 작다고 결정하는 것에응답하여 상기 잠재적인 의미 표현들의 세트로부터 상기 잠재적인 의미 표현들을 제거하는 것을 포함하는, 시스템."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "자연어 이해(NLU) 프레임워크를 동작시키는 방법으로서,원래 발화에 기반하여 발화들의 세트를 생성하기 위해 어휘 주입을 수행하는 단계 - 상기 발화들의 세트는 상기원래 발화, 및 상기 원래 발화의 하나 이상의 재표현을 포함함 -;상기 발화들의 세트에 대한 잠재적인 품사(POS) 태깅들의 세트를 생성하기 위해 상기 발화들의 세트의 POS 태깅을 수행하는 단계;상기 잠재적인 POS 태깅들의 세트 내의 다른 POS 태깅들과 실질적으로 유사한 POS 태깅들을 상기 잠재적인 POS태깅들의 세트로부터 제거하기 위해 변동성 필터링을 수행하는 단계;잠재적인 의미 표현들의 세트를 생성하기 위해 상기 잠재적인 POS 태깅들의 세트를 파싱하는 단계; 및상기 잠재적인 의미 표현들의 세트 내의 각각의 잠재적인 의미 표현에 대한 각각의 최종 스코어를 계산하고, 상기 잠재적인 의미 표현들의 세트 내의 각각의 잠재적인 의미 표현의 각각의 최종 스코어에 기반하여 상기 잠재적인 의미 표현들의 세트로부터 상기 원래 발화에 대한 의미 표현들의 최종 세트를 선택하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "공개특허 10-2022-0028038-5-제13항에 있어서,어휘 주입을 수행하기 전에 상기 원래 발화를 클렌징하는 단계를 포함하고, 클렌징하는 단계는 상기 원래 발화의 하나 이상의 토큰을 교체하거나 제거하는 단계를 포함하는,방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서,어휘 주입을 수행하는 단계는,어휘 모델에 존재하는 상기 원래 발화의 하나 이상의 토큰을 식별하는 단계;상기 하나 이상의 토큰에 대해 상기 어휘 모델로부터 하나 이상의 대안적인 토큰을 선택하는 단계; 및상기 원래 발화의 하나 이상의 토큰을 상기 하나 이상의 대안적인 토큰으로 대체하여 상기 원래 발화의 하나 이상의 재표현을 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제13항에 있어서,품사(POS) 태깅을 수행하는 단계는,상기 발화들의 세트의 각각의 발화에 대해,상기 발화의 적어도 하나의 잠재적인 POS 태깅을 생성하는 단계;상기 적어도 하나의 잠재적인 POS 태깅에 대한 각각의 신뢰도 스코어를 결정하는 단계; 및상기 각각의 신뢰도 스코어가 미리 정의된 POS 임계값 이상이라고 결정하는 것에 응답하여 상기 적어도 하나의잠재적인 POS 태깅을 상기 잠재적인 POS 태깅들의 세트에 포함시키는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서,변동성 필터링을 수행하는 단계는,상기 잠재적인 POS 태깅들의 세트 중 2개의 잠재적인 POS 태깅 사이의 변동성 스코어를 계산하는 단계;상기 변동성 스코어가 미리 정의된 변동 임계값보다 작은 것에 응답하여, 상기 잠재적인 POS 태깅들의 세트로부터 상기 2개의 잠재적인 POS 태깅 중 하나를 제거하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서,각각의 최종 스코어를 계산하고 상기 의미 표현들의 최종 세트를 선택하는 단계는,상기 잠재적인 의미 표현들의 세트의 각각의 잠재적인 의미 표현에 대해,상기 잠재적인 의미 표현의 POS 태깅 신뢰도 스코어와 파싱 신뢰도 스코어를 조합하여 상기 잠재적인 의미 표현에 대한 각각의 최종 스코어를 계산하는 단계; 및상기 최종 스코어가 미리 정의된 최종 스코어링 및 필터링 임계값 이상이라고 결정하는 것에 응답하여 상기 잠재적인 의미 표현들을 상기 의미 표현들의 최종 세트에 포함시키는 단계를 포함하는, 방법.공개특허 10-2022-0028038-6-청구항 19 제13항에 있어서,상기 의미 표현들의 최종 세트를 이용하여 의미 검색을 수행하는 단계를 포함하고, 상기 의미 표현들의 최종 세트는 상기 의미 검색의 검색 키를 정의하는 발화 의미 모델의 일부를형성하거나 상기 의미 검색을 위한 검색 공간을 정의하는 이해 모델의 일부를 형성하는, 방법."}
{"patent_id": "10-2022-7003161", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨팅 시스템의 하나 이상의 프로세서에 의해 실행가능한 자연어 이해(NLU) 프레임워크의 명령어들을 저장하는비일시적 컴퓨터 판독가능한 매체로서, 상기 명령어들은,원래 발화를 수신하고 - 상기 원래 발화는 사용자 발화이고 의도-엔티티 모델의 샘플 발화임 -;상기 원래 발화의 하나 이상의 토큰을 대체하거나 제거함으로써 상기 원래 발화를 클렌징하고;상기 원래 발화로부터 발화들의 세트를 생성하기 위해 어휘 주입을 수행하고 - 상기 발화들의 세트는 상기 원래발화, 및 상기 원래 발화의 하나 이상의 재표현을 포함함 -;상기 발화들의 세트에 대한 잠재적인 품사(POS) 태깅들의 세트를 생성하기 위해 상기 발화들의 세트의 POS 태깅을 수행하고;상기 잠재적인 POS 태깅들의 세트 내의 다른 POS 태깅들과 실질적으로 유사한 POS 태깅들을 상기 잠재적인 POS태깅들의 세트로부터 제거하기 위해 변동성 필터링을 수행하고;잠재적인 의미 표현들의 세트를 생성하기 위해 상기 잠재적인 POS 태깅들의 세트를 파싱하고;상기 잠재적인 의미 표현들의 세트 내의 각각의 잠재적인 의미 표현에 대한 각각의 최종 스코어를 계산하고, 상기 잠재적인 의미 표현들의 세트 내의 각각의 잠재적인 의미 표현의 각각의 최종 스코어에 기반하여 상기 잠재적인 의미 표현들의 세트로부터 상기 원래 발화에 대한 의미 표현들의 최종 세트를 선택하고;상기 의미 표현들의 최종 세트를 이용하여 의미 검색을 수행하기 위한명령어들을 포함하고, 상기 의미 표현들의 최종 세트는 상기 의미 검색의 검색 키를 정의하는 발화 의미 모델의일부를 형성하거나 상기 의미 검색을 위한 검색 공간을 정의하는 이해 모델의 일부를 형성하는, 비일시적 컴퓨터 판독가능한 매체."}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 접근법들은 일반적으로 가상 에이전트(예를 들어, 채팅 에이전트)에 의해 수신된 요청들과 같은 사용자 발화 들로부터 의미를 추출하고, 이러한 사용자 발화들에 적절히 응답할 수 있는 에이전트 자동화 프레임워크에 관련 된다. 특정 양태들에서, 에이전트 자동화 프레임워크는 샘플 발화들과 연관되는 정의된 의도들 및 엔티티들을 갖는 의도-엔티티 모델 및 NLU 프레임워크를 포함한다. NLU 프레임워크는 이해 모델을 구성하기 위해 의도-엔티 티 모델의 샘플 발화들에 대한 의미 표현들을 생성할 뿐만 아니라, 발화 의미 모델을 구성하기 위해 수신된 사용 자 발화에 대한 의미 표현들을 생성하도록 설계된 의미 추출 서브시스템을 포함할 수 있다. 개시된 NLU 프레임 워크는 발화 의미 모델의 의미 표현들에 대한 매치들을 찾기 위해 이해 모델의 의미 표현들을 검색하도록 설계되 는 의미 검색 서브시스템을 포함할 수 있다. 공개특허10-2022-0028038"}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "상호 참조 본 출원은 \"DERIVING MULTIPLE MEANING REPRESENTATIONS FOR AN UTTERANCE IN A NATURAL LANGUAGE UNDERSTANDING (NLU) FRAMEWORK\"라는 명칭으로 2019년 7월 2일자로 출원된 미국 가출원 제62/869,826호의 우선 권 및 그 이익을 주장하며, 이 가출원은 모든 목적들을 위해 그 전체가 본 명세서에 참조로 포함된다."}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "본 개시내용은 일반적으로 자연어 이해(NLU) 및 인공 지능(AI)의 분야들에 관한 것으로, 보다 구체적으로는, NLU에 대한 하이브리드 학습 시스템에 관한 것이다. 이 섹션은 아래에서 설명되고/되거나 청구되는 본 개시내용의 다양한 양태들과 관련될 수 있는 기술의 다양한 양태들에 대해 독자에게 소개하기 위해 의도된다. 이 논의는 본 개시내용의 다양한 양태들의 더 나은 이해를 용이하게 하기 위해 배경 정보를 독자에게 제공하는 데 도움이 되는 것으로 믿어진다. 따라서, 이러한 진술들 은 이러한 관점에서 읽혀져야 하고 종래 기술에 대한 인정들이 아님을 이해해야 한다. 클라우드 컴퓨팅은 일반적으로 인터넷을 통해 액세스되는 컴퓨팅 자원들의 공유에 관한 것이다. 특히, 클라우 드 컴퓨팅 인프라스트럭처는 개인들 및/또는 기업들과 같은 사용자들이 서버들, 저장 디바이스들, 네트워크들, 애플리케이션들 및/또는 다른 컴퓨팅 기반 서비스들과 같은 컴퓨팅 자원들의 공유 풀에 액세스할 수 있도록 한다. 그렇게 함으로써, 사용자들은 원격 위치들에 위치되는 맞춤형 컴퓨팅 자원들에 액세스할 수 있으며, 이들 자원들은 다양한 컴퓨팅 기능들(예를 들어, 대량의 컴퓨팅 데이터의 저장 및/또는 처리)을 수행하는데 이용될 수 있다. 기업 및 다른 조직 사용자들의 경우, 클라우드 컴퓨팅은 고가의 네트워크 장비를 구입하거나 또는 사 설 네트워크 인프라스트럭처를 구축하는데 많은 양의 시간을 투자하는 것과 같은 많은 초기 비용들을 들이지 않 고도 클라우드 컴퓨팅 자원들에 액세스할 수 있는 유연성을 제공한다. 대신, 사용자들은 클라우드 컴퓨팅 자원 들을 활용함으로써, 그 자원들을 그 기업의 핵심 기능들에 집중할 수 있도록 전용시킬 수 있다. 이러한 클라우드 컴퓨팅 서비스는 클라이언트 인스턴스의 사용자로부터의 자연어 요청들에 기반하여 클라이언트 인스턴스에서의 문제들에 자동으로 응답하도록 설계되는 채팅 에이전트와 같은 가상 에이전트를 호스팅할 수 있 다. 예를 들어, 사용자는 패스워드 문제에 대한 지원을 위해 가상 에이전트에 요청을 제공할 수 있으며, 가상 에이전트는 자연어 처리(Natural Language Processing)(NLP) 또는 자연어 이해(Natural Language Understanding)(NLU) 시스템의 일부이다. NLP는 자연어 입력 처리의 일부 형태를 포함하는 컴퓨터 과학 및 AI 의 일반적인 영역이다. NLP에 의해 다루어지는 영역들의 예들은 언어 번역, 음성 생성, 파스(parse) 트리 추출, 품사(part-of-speech) 식별 등을 포함한다. NLU는 구체적으로 사용자 발화(user utterance) 이해에 중 점을 둔 NLP의 하위 영역이다. NLU에 의해 다루어지는 영역들의 예들은 질문-답변(예를 들어, 독해 질문들),"}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "기사 요약 등을 포함한다. 예를 들어, NLU는 다운스트림 가상 에이전트에 의한 소비를 위해 알려진 심볼들의 세트로 인간 언어(예를 들어, 구두(spoken) 또는 서면(written))를 줄이기 위한 알고리즘들을 이용할 수 있다. NLP는 일반적으로 추가 분석을 위해 프리 텍스트(free text)를 해석하는데 이용된다. NLP에 대한 현재 접근법 들은 통상적으로 프로그램의 이해를 향상시키기 위해 데이터의 패턴들을 검사하고 이를 이용하는 AI 유형인 심 층 학습(deep learning)에 기반한다. 특정 NLU 시스템들은 인지 구축 문법(cognitive constructive grammar)의 언어 원리들에 기반한다. 이러한 원 리들 중 하나는 발화의 형상 또는 형태가 발화의 의미와 밀접하게 관련된다는 것이다. 이와 같이, NLU 시스템 들이 NLU 시스템의 동작을 개선하기 위해 발화들을 이해하는 복수의 가능한 방식들을 추출하거나 결정할 수 있 는 것이 중요하다는 것이 현재 인식되고 있다."}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "본 명세서에 개시된 특정 실시예들의 요약이 아래에 제시된다. 이러한 양태들은 단지 독자에게 이러한 특정 실"}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 4, "content": "시예들의 간단한 요약을 제공하기 위해 제시되고, 이러한 양태들은 본 개시내용의 범위를 제한하도록 의도되지 않는다는 점이 이해되어야 한다. 실제로, 본 개시내용은 아래에 제시되지 않을 수 있는 다양한 양태들을 포함 할 수 있다. 본 실시예들은 가상 에이전트(예를 들어, 채팅 에이전트)에 의해 수신된 요청들과 같은 사용자 발화들로부터 의 미를 추출하고, 이러한 사용자 발화들에 적절히 응답할 수 있는 에이전트 자동화 프레임워크에 관한 것이다. 이를 행하기 위해, 에이전트 자동화 프레임워크는 샘플 발화들과 연관되는 정의된 의도들 및 엔티티들을 갖는 의도-엔티티 모델 및 NLU 프레임워크를 포함한다. NLU 프레임워크는 이해 모델을 구성하기 위해 의도-엔티티 모델의 샘플 발화들에 대한 의미 표현들을 생성할 뿐만 아니라, 발화 의미 모델을 구성하기 위해 수신된 사용자 발화에 대한 의미 표현들을 생성하도록 설계되는 의미 추출 서브시스템을 포함한다. 또한, 개시된 NLU 프레임 워크는 (검색 키라고도 지칭되는) 발화 의미 모델의 의미 표현들에 대한 매치들을 찾기 위해 (검색 공간이라고 도 지칭되는) 이해 모델의 의미 표현들을 검색하도록 설계되는 의미 검색 서브시스템을 포함한다. 이와 같이, 본 실시예들은 일반적으로 NLU를 관리가능한 검색 문제로 변환함으로써 NLU에 의해 제기되는 어려운 문제를 해 결한다. 또한, 비교를 위해, 발화 의미 모델에서의 사용자 발화의 복수의 의미 표현뿐만 아니라, 기본 발화의 상이한 이 해 또는 해석을 각각 나타내는, 이해 모델에서의 샘플 발화들의 복수의 의미 표현을 가짐으로써, 의미 검색의 성능이 향상된다는 것을 현재 인식하고 있다. 또한, 특정의 대안적인 의미 표현들은 의미 검색 동안 매치들을 식별할 가능성을 향상시키지만, 의미 검색이 또한 분명히 잘못된 또는 실질적으로 중복적인 의미 표현들을 검색 하는 추가적인 컴퓨팅 자원들을 소비할 수 있다는 것을 또한 현재 인식하고 있다. 따라서, 의미 검색을 향상시 키기 위해 발화의 특정의 높은 가치의 대안적인 의미 표현들(예를 들어, 높은 확률 및/또는 충분히 상이한 의미 표현들)이 추구되어야 하지만, 컴퓨팅 자원 이용을 제한하고 NLU 프레임워크의 효율을 향상시키기 위해 다른 대 안적인 의미 표현들이 폐기되어야 한다는 것을 인식하고 있다. 이러한 내용을 염두에 두고, 본 실시예들은 의도-엔티티 모델 내의 샘플 발화들 및 사용자로부터 수신된 발화들 을 포함하는, 발화들에 대한 복수의 의미 표현들을 생성할 수 있는 의미 추출 서브시스템을 포함하는 NLU 프레임워크에 관한 것이다. 개시된 의미 추출 서브시스템은 향상된 유연성을 위한 플러그-인(plug-in)들로서 구현 될 수 있는 다수의 상이한 구성요소들을 포함한다. 특정 실시예들에서, 이들은 품사(POS) 플러그-인, 정정 플 러그-인, 변동 필터(VF) 플러그-인, 파서 플러그-인, 및 최종 스코어링 및 필터링(FSF) 플러그-인을 포함한다. 예를 들어, POS 플러그-인은 발화 및 POS 임계값을 수신하고, POS 임계값에 기반하여, 발화에 대한 잠재적인 POS 태깅들의 세트를, 이들 POS 태깅들에 대한 대응하는 신뢰도 스코어들과 함께 생성하는 기계 학습(ML) 기반 구성요소를 포함할 수 있다. 정정 플러그-인은 잠재적인 POS 태깅들의 세트를 수신하고 규칙 기반 또는 ML 기 반 기술들을 적용하여 잠재적인 POS 태깅들의 세트 내의 엔트리들을 수정 또는 제거할 수 있다. VF 플러그-인 은 잠재적인 POS 태깅들의 세트 및 변동 임계값을 수신할 수 있고, 변동 임계값에 기반하여 다른 엔트리들과 충 분히 상이하지 않은 특정 엔트리들을 잠재적인 POS 태깅들의 세트로부터 제거할 수 있다. 파서 플러그-인은 (예를 들어, 정정 및/또는 변동성 필터링 후에) 잠재적인 POS 태깅들의 세트를 수신하고, 잠재적인 POS 태깅들 의 세트 내의 각각의 엔트리에 대한 각각의 의미 표현(예를 들어, 발화 트리) 및 대응하는 신뢰도 스코어를 생 성하는 ML 기반 또는 규칙 기반 구성요소를 포함할 수 있다. FSF 플러그-인은 의미 표현들의 세트, POS 태깅 및 파싱으로부터의 신뢰도 스코어들, 및 FSF 임계치를 수신하고, FSF 임계치에 기반하여 발화에 대한 의미 표현 들의 최종 세트를 결정할 수 있다."}
{"patent_id": "10-2022-7003161", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "하나 이상의 특정 실시예가 아래에서 설명될 것이다. 이러한 실시예들의 간결한 설명을 제공하기 위한 노력으 로, 실제 구현의 모든 특징들이 명세서에서 설명되지는 않는다. 임의의 엔지니어링 또는 설계 프로젝트에서와 같이 임의의 이러한 실제 구현을 개발할 때, 구현마다 달라질 수 있는 시스템-관련 및 비지니스-관련 제약들의 준수와 같은 개발자들의 특정 목표들을 달성하기 위해 수많은 구현-특정 결정들이 이루어져야 한다는 것이 이해 되어야 한다. 또한, 이러한 개발 노력은 복잡하고 시간 소모적일 수 있지만, 그럼에도 불구하고 본 개시내용의 이점을 갖는 통상의 기술자를 위한 설계, 제작 및 제조의 일상적인 작업이 될 것이라는 점이 이해되어야 한다. 본 명세서에서 사용되는 바와 같이, 용어 \"컴퓨팅 시스템\" 또는 \"컴퓨팅 디바이스\"는 단일 컴퓨터, 가상 기계, 가상 컨테이너, 호스트, 서버, 랩톱, 및/또는 모바일 디바이스와 같은, 그러나 이에 제한되지 않는 전자 컴퓨팅 디바이스, 또는 컴퓨팅 시스템 상에서 또는 컴퓨팅 시스템에 의해 수행되는 것으로서 설명되는 기능을 수행하기 위해 함께 작동하는 복수의 전자 컴퓨팅 디바이스들을 지칭한다. 본 명세서에서 사용되는 바와 같이, 용어 \"기 계 판독가능한 매체\"는 하나 이상의 명령어 또는 데이터 구조를 저장하는 단일 매체 또는 복수의 매체들(예를 들어, 중앙집중형 또는 분산형 데이터베이스, 및/또는 연관된 캐시들 및 서버들)을 포함할 수 있다. 용어 \"비 일시적 기계 판독가능한 매체\"는 또한 컴퓨팅 시스템에 의해 실행하기 위한 명령어들을 저장, 인코딩, 또는 운 반할 수 있고 컴퓨팅 시스템으로 하여금 본 주제의 방법론들 중 임의의 하나 이상을 수행하게 하거나, 이러한 명령어들에 의해 이용되거나 이러한 명령어들과 연관되는 데이터 구조들을 저장, 인코딩, 또는 운반할 수 있는 임의의 유형적 매체를 포함하는 것으로 고려되어야 한다. 용어 \"비일시적 기계 판독가능한 매체\"는 이에 따라 솔리드 스테이트 메모리들, 및 광학 및 자기 매체를 포함하지만 이에 제한되지 않는 것으로 고려되어야 한다. 비일시적 기계 판독가능한 매체의 특정 예들은, 예로서, 반도체 메모리 디바이스들(예를 들어, 소거가능한 프로 그래머블 판독 전용 메모리(EPROM), 전기적 소거가능한 프로그래머블 판독 전용 메모리(EEPROM), 및 플래시 메 모리 디바이스들), 내부 하드 디스크들 및 이동식 디스크들과 같은 자기 디스크들, 자기-광학 디스크들, 및 CD- ROM 및 DVD-ROM 디스크들을 포함하는 비휘발성 메모리를 포함하지만 이에 제한되지 않는다. 본 명세서에서 사용되는 바와 같이, 용어들 \"애플리케이션\", \"엔진\" 및 \"플러그-인\"은 특정 기능을 제공하기 위 해 컴퓨팅 시스템의 하나 이상의 프로세서에 의해 실행가능한 컴퓨터 소프트웨어 명령어들(예로서, 컴퓨터 프로 그램들 및/또는 스크립트들)의 하나 이상의 세트를 지칭한다. 컴퓨터 소프트웨어 명령어들은 C, C++, C#, 파스 칼, 포트란, 펄(Perl), MATLAB, SAS, SPSS, 자바스크립트, AJAX 및 JAVA와 같은 임의의 적절한 프로그래밍 언 어들로 기입될 수 있다. 이러한 컴퓨터 소프트웨어 명령어들은 데이터 입력 및 데이터 디스플레이 모듈들을 갖 는 독립 애플리케이션을 포함할 수 있다. 대안적으로, 개시되는 컴퓨터 소프트웨어 명령어들은 분산 객체들로 서 인스턴스화되는 클래스들일 수 있다. 개시되는 컴퓨터 소프트웨어 명령어들은 또한 구성요소 소프트웨어, 예를 들어 JAVABEANS 또는 ENTERPRISE JAVABEANS일 수 있다. 추가로, 개시되는 애플리케이션들 또는 엔진들은 컴퓨터 소프트웨어, 컴퓨터 하드웨어 또는 이들의 조합으로 구현될 수 있다. 본 명세서에서 사용되는 바와 같이, \"프레임워크\"라는 용어는 하나 이상의 전체 기능을 수행하기 위해 협력하는 애플리케이션들 및/또는 엔진들의 시스템뿐만 아니라, 임의의 다른 지원 데이터 구조들, 라이브러리들, 모듈들, 및 임의의 다른 지원 기능을 지칭한다. 특히, \"자연어 이해 프레임워크\" 또는 \"NLU 프레임워크\"는 이해 모델에 기반하여 자연어 발화들로부터 의미(예를 들어, 의도들, 엔티티들, 아티팩트들)를 처리하고 도출하도록 설계된 컴퓨터 프로그램들의 집합을 포함한다. 본 명세서에서 사용되는 바와 같이, 추론 에이전트 또는 RA/BE로도 알 려진 \"거동 엔진\" 또는 \"BE\"는 대화 모델에 기반하여 사용자들과 상호작용하도록 설계된 가상 에이전트와 같은 규칙 기반 에이전트를 지칭한다. 예를 들어, \"가상 에이전트\"는 특정 대화 또는 통신 채널에서 자연어 요청들 을 통해 사용자들과 상호작용하도록 설계된 BE의 특정 예를 지칭할 수 있다. 이를 염두에 두고, \"가상 에이전 트\" 및 \"BE\"라는 용어들은 본 명세서에서 상호교환가능하게 사용된다. 특정 예로서, 가상 에이전트는 채팅방 환경에서 자연어 요청들 및 응답들을 통해 사용자들과 상호작용하는 채팅 에이전트일 수 있거나 이를 포함할 수 있다. 가상 에이전트들의 다른 예들은 이메일, 포럼 게시물들, 서비스 티켓들, 전화 호출들 등에 대한 자동 응 답들과 관련하여 사용자들과 상호작용하는 이메일 에이전트, 포럼 에이전트, 티켓팅 에이전트, 전화 호출 에이 전트 등을 포함할 수 있다. 본 명세서에서 사용되는 바와 같이, \"의도\"는 발화와 같은 통신의 기본 목적과 관련될 수 있는 사용자의 욕구 또는 목표를 지칭한다. 본 명세서에서 사용되는 바와 같이, \"엔티티\"는 목적어(object), 주어(subject) 또는 의도의 일부 다른 파라미터화를 지칭한다. 본 실시예들에서, 특정 엔티티들은 대응하는 의도의 파라미터들로서 취급된다는 점에 유의한다. 더 구체적으로, 특정 엔티티들(예로서, 시간 및 위치)은 모든 의도들에 대해 전역적으로 인식되고 추출될 수 있는 반면, 다른 엔티티들은 의도-특정적(예로서, 구매 의도들과 연관된 상품 엔티 티들)이고 일반적으로 이들을 정의하는 의도들 내에서 발견될 때에만 추출된다. 본 명세서에서 사용되는 바와 같이, \"아티팩트\"는 발화의 의도들 및 엔티티들 둘 다를 집합적으로 지칭한다. 본 명세서에서 사용되는 바와 같이, \"이해 모델\"은 자연어 발화들의 의미를 추론하기 위해 NLU 프레임워크에 의해 이용되는 모델들의 집합이 다. 이해 모델은 특정 토큰들(예로서, 단어들 또는 구들)을 특정 단어 벡터들, 의도-엔티티 모델, 엔티티 모델 또는 이들의 조합과 연관시키는 어휘 모델을 포함할 수 있다. 본 명세서에서 사용되는 바와 같이, \"의도-엔티 티 모델\"은 특정 의도들을 특정 샘플 발화들과 연관시키는 모델을 지칭하며, 의도와 연관된 엔티티들은 모델의 샘플 발화들 내에서 의도의 파라미터로서 인코딩될 수 있다. 본 명세서에서 사용되는 바와 같이, \"에이전트 들\"이라는 용어는 대화 채널 내에서 서로 상호작용하는 컴퓨터 생성 페르소나들(예로서, 채팅 에이전트들 또는 다른 가상 에이전트들)을 지칭할 수 있다. 본 명세서에서 사용되는 바와 같이, \"코퍼스\"는 다양한 사용자들과 가상 에이전트들 사이의 상호작용들을 포함하는 소스 데이터의 캡처된 보디를 지칭하며, 그 상호작용들은 하나 이상의 적절한 유형의 미디어(예로서, 전화 상담 서비스(help line), 채팅방 또는 메시지 스트링, 이메일 스트 링) 내의 통신들 또는 대화들을 포함한다. 본 명세서에서 사용되는 바와 같이, \"발화 트리\"는 발화의 의미 표 현을 저장하는 데이터 구조를 지칭한다. 논의되는 바와 같이, 발화 트리는 발화의 구문론적 구조를 나타내는 트리 구조(예로서, 의존성 파스 트리 구조)를 가지며, 트리 구조의 노드들은 발화의 의미론적 의미를 인코딩하 는 벡터들(예로서, 단어 벡터들, 서브트리 벡터들)을 저장한다. 본 명세서에서 사용되는 바와 같이, \"소스 데이터\" 또는 \"대화 로그들\"은 채팅 로그들, 이메일 스트링들, 문서 들, 도움말 문서화, 자주 문의되는 질문들(FAQ들), 포럼 엔트리들, 티켓팅을 지원하는 아이템들, 전화 상담 서 비스 호출들의 기록들 등을 포함하지만 이에 제한되지 않는 다양한 에이전트들 간의 임의의 적절한 캡처된 상호 작용들을 포함할 수 있다. 본 명세서에서 사용되는 바와 같이, \"발화\"는 하나 이상의 의도를 포함할 수 있는 사용자 또는 에이전트에 의해 이루어진 단일 자연어 진술을 지칭한다. 이와 같이, 발화는 소스 데이터의 이전 에 캡처된 코퍼스의 일부일 수 있고, 발화는 또한 가상 에이전트와의 상호작용의 일부로서 사용자로부터 수신된 새로운 진술일 수 있다. 본 명세서에서 사용되는 바와 같이, \"기계 학습\" 또는 \"ML\"은 감독, 무감독, 및 반감 독 학습 기술들을 포함하는 기계 학습 기술들을 이용하여 훈련될 수 있는 인공 지능의 임의의 적절한 통계 형태 를 지칭하는데 사용될 수 있다. 예를 들어, 특정 실시예들에서, ML 기반 기술들은 인공 신경망(ANN)(예를 들어, 심층 신경망(DNN), 순환 신경망(RNN), 재귀적 신경망, 피드포워드 신경망)을 이용하여 구현될 수 있다. 대조적으로, \"규칙 기반\" 방법들 및 기술들은 발화들로부터 의미 표현들을 도출하기 위해 언어 구조 및 의미론 적 이해의 정확한 판단을 가능하게 하는 규칙 세트들 및 온톨로지들(예를 들어, 수동으로 제작된 온톨로지들, 통계적으로 도출된 온톨로지들)의 이용을 지칭한다. 본 명세서에서 사용되는 바와 같이, \"벡터\"(예를 들어, 단 어 벡터, 의도 벡터, 주어 벡터, 서브트리 벡터)는 발화의 일부(예를 들어, 단어 또는 구, 의도, 엔티티, 토 큰)의 의미론적 의미의 수학적 표현을 제공하는 부동 소수점 값들(예를 들어, 1xN 또는 Nx1 행렬)의 순서화된 n 차원 리스트(예를 들어, 300차원 리스트)인 선형 대수 벡터를 지칭한다. 본 명세서에서 사용되는 바와 같이, \"도메인 특정성\"은 시스템이 주어진 도메인 및/또는 대화 채널에서 실제 대화들로 표현되는 의도들 및 엔티티 들을 정확하게 추출하는 것에 대해 어떻게 조율되는지를 지칭한다. 본 명세서에서 사용되는 바와 같이, 발화의 \"이해\"는 NLU 프레임워크에 의한 발화의 해석 또는 구성을 지칭한다. 이와 같이, 발화의 상이한 이해들은 상이 한 구조들(예를 들어, 상이한 노드들, 노드들 사이의 상이한 관계들), 상이한 품사 태깅들 등을 갖는 상이한 의 미 표현들과 연관될 수 있다는 것을 알 수 있다. 언급된 바와 같이, 컴퓨팅 플랫폼은 플랫폼 상에서 기능들을 수행하거나 문제들을 해결하라는 사용자 요청들에 자동으로 응답하도록 설계되는 채팅 에이전트, 또는 다른 유사한 가상 에이전트를 포함할 수 있다. 자연어 발 화로부터 사용자 의도를 도출하려고 시도할 때, 단일 발화가 발화의 토큰들에 대한 상이한 잠재적인 품사(POS) 태깅들을 가질 수 있고, 이러한 상이한 POS 태깅들이 발화의 상이한 형태-도출들을 나타낸다는 것이 현재 인식 되고 있다. 그 결과, 다수의 상이한 의미 표현들(예를 들어, 발화 트리들)이 단일 발화에 대해 생성될 수 있고, 그 각각은 발화의 별개의 형태-도출을 나타낸다. 고려로 인한 발화의 모든 가능한 형태-도출들을 제공하 는 것이 NLU 프레임워크의 의도 추론 능력들을 개선한다는 것이 현재 인식되고 있다. 그러나, 발화의 특정 형 태-도출들이 이미 고려되고 있는 다른 형태들에 대해 잘못되거나 실질적으로 중복될 수 있고, 이는 NLU 프레임 워크의 의도 추론 능력들을 실질적으로 개선하지 않고 처리 및 메모리 자원 소비를 실질적으로 증가시킬 수 있 다는 것이 또한 현재 인식되고 있다. 따라서, 본 실시예들은 자연어 발화에 대한 복수의 의미 표현들을 생성하기 위해 ML 기반 및 규칙 기반 기술들 을 적용하는 의미 추출 서브시스템을 포함하는 NLU 프레임워크에 관한 것이다. 의미 추출 서브시스템은 검색 공간을 확장하기 위해 이해 모델의 샘플 발화들의 복수의 의미 표현들을 생성할 수 있고/있거나 검색 키를 확장하기 위해 수신된 사용자 발화의 복수의 의미 표현들을 생성할 수 있는 구조 서브시스템을 포함한다. 개시된 구조 서브시스템은 발화에 대한 복수의 잠재적인 품사(POS) 태깅들을 생성하기 위해 ML 기반 기술들을 이용하고, 여기서 미리 정의된 임계값보다 큰 대응하는 신뢰도 스코어들을 갖는 잠재적인 POS 태깅들만이 진전 된다. 개시된 구조 서브시스템은 잘못된 잠재적인 POS 태깅들을 수정하거나 제거하기 위해 규칙 기반 및/또는 ML 기반 정정 기술들을 적용할 수 있다. 개시된 구조 서브시스템은 또한 미리 정의된 변동 임계값에 기반하여 서로 충분히 상이하지 않은 잠재적인 POS 태깅들을 제거하기 위해 변동성 필터를 적용할 수 있다. 정정 및/또 는 변동성 필터링 후에, 개시된 구조 서브시스템은 각각의 남아 있는 잠재적인 POS 태깅에 대한 각각의 의미 표 현(예를 들어, 발화 트리)을 생성하기 위해 ML 기반 또는 규칙 기반 기술들을 이용하고, 여기서 미리 정의된 임 계치보다 큰 대응하는 신뢰도 스코어들을 갖는 의미 표현들만이 진전된다. 마지막으로, 개시된 구조 서브시스 템은 진전된 의미 표현들의 신뢰도 스코어들뿐만 아니라 대응하는 POS 태깅들의 기본 신뢰도 스코어들을 고려하 는 최종 스코어링 및 필터링 단계를 적용하여, 최종 스코어를 생성하고, 미리 정의된 임계치 미만의 최종 스코 어들을 갖는 의미 표현들을 제거한다. 이와 같이, 개시된 구조 서브시스템은 의미 검색의 검색 키 및/또는 검 색 공간에 대해 생성되는 형태-도출들의 수를 효과적으로 확장하여, NLU 프레임워크의 의도 추론 능력들을 개선 하면서 잘못된 또는 실질적으로 중복된 형태-도출들을 제거함으로써 자원 소비를 감소시키고 NLU 프레임워크의 효율을 개선한다. 이러한 내용을 염두에 두고, 이하의 도면들은 멀티-인스턴스 프레임워크 내의 조직에 서비스들을 제공하는데 이 용될 수 있고 본 접근법들이 이용될 수 있는 다양한 유형들의 일반화된 시스템 아키텍처들 또는 구성들에 관한 것이다. 이에 대응하여, 이러한 시스템 및 플랫폼 예들은 또한 본 명세서에서 논의되는 기술들이 구현되거나 다른 방식으로 이용될 수 있는 시스템들 및 플랫폼들에 관한 것일 수 있다. 이제 도 1을 참조하면, 본 개시내 용의 실시예들이 동작할 수 있는 클라우드 컴퓨팅 시스템의 실시예의 개략도가 예시되어 있다. 클라우드 컴퓨팅 시스템은 클라이언트 네트워크, 네트워크(예컨대, 인터넷), 및 클라우드 기반 플랫폼을 포함할 수 있다. 일부 구현들에서, 클라우드 기반 플랫폼은 구성 관리 데이터베이스(CMDB) 플랫폼일 수 있 다. 일 실시예에서, 클라이언트 네트워크는 스위치들, 서버들, 및 라우터들을 포함하지만 이들로 제한되지 않는 다양한 네트워크 디바이스들을 갖는 LAN(local area network)과 같은 로컬 사설 네트워크일 수 있다. 다 른 실시예에서, 클라이언트 네트워크는 하나 이상의 LAN, 가상 네트워크, 데이터 센터, 및/또는 다른 원격 네트워크를 포함할 수 있는 기업 네트워크를 나타낸다. 도 1에 도시된 바와 같이, 클라이언트 네트워크 는 클라이언트 디바이스들이 서로 그리고/또는 플랫폼을 호스팅하는 네트워크와 통신할 수 있도록 하나 이상의 클라이언트 디바이스(14A, 14B, 및 14C)에 접속될 수 있다. 클라이언트 디바이스들은, 예를 들어, 웹 브라우저 애플리케이션을 통해 또는 클라이언트 디바이스들과 플랫폼 사이의 게이트웨이로서 작용할 수 있는 에지 디바이스를 통해 클라우드 컴퓨팅 서비스들에 액세스하는 사물 인터넷(IoT) 디바이스들이라고 일반적으로 지칭되는 컴퓨팅 시스템들 및/또는 다른 유형들의 컴퓨팅 디바이스들일 수 있다. 도 1은 또한 클라 이언트 네트워크가 플랫폼, 다른 외부 애플리케이션들, 데이터 소스들 및 서비스들을 호스팅하는 네트 워크와 클라이언트 네트워크 간의 데이터의 통신을 용이하게 하는 MID(management, instrumentation, and discovery) 서버와 같은 관리 또는 운영(administration or managerial) 디바이스, 에이전트 또는 서버를 포함하는 것을 예시한다. 도 1에 구체적으로 예시되지 않았지만, 클라이언트 네트워크는 또한 접속 네트워 크 디바이스(예컨대, 게이트웨이 또는 라우터) 또는 고객 방화벽 또는 침입 방지 시스템을 구현하는 디바이스들 의 조합을 포함할 수 있다. 예시된 실시예에 있어서, 도 1은 클라이언트 네트워크가 네트워크에 결합되는 것을 예시한다. 네트워 크는 클라이언트 디바이스들(14A-C)과 플랫폼을 호스팅하는 네트워크 사이에서 데이터를 전송하기 위해, 다른 LAN들, 광역 네트워크들(WAN), 인터넷, 및/또는 다른 원격 네트워크들과 같은 하나 이상의 컴퓨팅 네트워크를 포함할 수 있다. 네트워크 내의 컴퓨팅 네트워크들 각각은 전기 및/또는 광학 도메인에서 동작 하는 유선 및/또는 무선 프로그래머블 디바이스들을 포함할 수 있다. 예를 들어, 네트워크는 셀룰러 네트 워크들(예를 들어, GSM(Global System for Mobile Communications) 기반 셀룰러 네트워크), IEEE 802.11 네트 워크들, 및/또는 다른 적절한 라디오 기반 네트워크들과 같은 무선 네트워크들을 포함할 수 있다. 네트워크 는 또한 TCP(Transmission Control Protocol) 및 IP(Internet Protocol)와 같은 임의의 수의 네트워크 통 신 프로토콜들을 이용할 수 있다. 도 1에 명시적으로 도시되지는 않았지만, 네트워크는 네트워크를 통 해 데이터를 전송하도록 구성된 서버들, 라우터들, 네트워크 스위치들, 및/또는 다른 네트워크 하드웨어 디바이 스들과 같은 다양한 네트워크 디바이스들을 포함할 수 있다. 도 1에서, 플랫폼을 호스팅하는 네트워크는 클라이언트 네트워크 및 네트워크를 통해 클라이언트 디바이스들과 통신할 수 있는 원격 네트워크(예를 들어, 클라우드 네트워크)일 수 있다. 플랫폼을 호스팅하는 네트워크는 클라이언트 디바이스들 및/또는 클라이언트 네트워크에 추가적인 컴퓨팅 자원들을 제공한다. 예를 들어, 플랫폼을 호스팅하는 네트워크를 이용함으로써, 클라이언트 디바이스들의 사용 자들은 다양한 기업, IT, 및/또는 다른 조직 관련 기능들을 위한 애플리케이션들을 구축하고 실행할 수 있다. 일 실시예에서, 플랫폼을 호스팅하는 네트워크는 하나 이상의 데이터 센터 상에 구현되고, 여기서 각각 의 데이터 센터는 상이한 지리적 위치에 대응할 수 있다. 데이터 센터들 각각은 복수의 가상 서버들 (본 명세서에서 애플리케이션 노드들, 애플리케이션 서버들, 가상 서버 인스턴스들, 애플리케이션 인스턴스들, 또는 애플리케이션 서버 인스턴스들이라고도 지칭됨)을 포함하고, 여기서 각각의 가상 서버는 단일 전자 컴 퓨팅 디바이스(예를 들어, 단일 물리적 하드웨어 서버)와 같은 물리적 컴퓨팅 시스템 상에 또는 복수의 컴퓨팅 디바이스들(예를 들어, 복수의 물리적 하드웨어 서버들)에 걸쳐 구현될 수 있다. 가상 서버들의 예들은 웹 서버(예를 들어, 단일 아파치(Apache) 설치), 애플리케이션 서버(예를 들어, 단일 JAVA 가상 기계), 및/또는 데 이터베이스 서버(예를 들어, 단일 관계형 데이터베이스 관리 시스템(RDBMS) 카탈로그)를 포함하지만, 이에 제한 되지 않는다. 플랫폼 내의 컴퓨팅 자원들을 이용하기 위해, 네트워크 운영자들은 다양한 컴퓨팅 인프라스트럭처들을 이용 하여 데이터 센터들을 구성하도록 선택할 수 있다. 일 실시예에서, 데이터 센터들 중 하나 이상은, 서 버 인스턴스들 중 하나가 복수의 고객으로부터의 요청들을 처리하고 복수의 고객을 서빙하도록 멀티-테넌트 클라우드 아키텍처를 이용하여 구성된다. 멀티-테넌트 클라우드 아키텍처를 갖는 데이터 센터들은 복수의 고객으로부터의 데이터를 혼합 및 저장하고, 복수의 고객 인스턴스가 가상 서버들 중 하나에 할당된다. 멀 티-테넌트 클라우드 아키텍처에서, 특정한 가상 서버는 다양한 고객들의 데이터 및 기타의 정보를 구분하고 분리한다. 예를 들어, 멀티-테넌트 클라우드 아키텍처는 각각의 고객으로부터의 데이터를 식별하고 분리하기 위해 각각의 고객에 대해 특정한 식별자를 할당할 수 있다. 일반적으로, 멀티-테넌트 클라우드 아키텍처를 구 현하는 것은, 서버 인스턴스들 중 특정한 하나의 고장이 특정한 서버 인스턴스에 할당된 모든 고객들에 대 한 장애를 야기하는 등의, 다양한 단점들을 겪을 수 있다. 다른 실시예에서, 데이터 센터들 중 하나 이상은 모든 고객에게 그 자신의 고유 고객 인스턴스 또는 인스턴 스들을 제공하기 위해 멀티-인스턴스 클라우드 아키텍처를 이용하여 구성된다. 예를 들어, 멀티-인스턴스 클라 우드 아키텍처는 각각의 고객 인스턴스에 그 자신의 전용 애플리케이션 서버 및 전용 데이터베이스 서버를 제공 할 수 있다. 다른 예들에서, 멀티-인스턴스 클라우드 아키텍처는 각각의 고객 인스턴스에 대해, 단일 물리적 또는 가상 서버 및/또는 하나 이상의 전용 웹 서버, 하나 이상의 전용 애플리케이션 서버, 및 하나 이상의 데이터베이스 서버와 같은 물리적 및/또는 가상 서버들의 다른 조합들을 배치할 수 있다. 멀티-인스턴스 클라우드 아키텍처에서, 복수의 고객 인스턴스들은 하나 이상의 각각의 하드웨어 서버 상에 설치될 수 있고, 여 기서 각각의 고객 인스턴스는 컴퓨팅 메모리, 저장소, 및 처리 능력과 같은 물리적 서버 자원들의 특정 부분들 을 할당받는다. 그렇게 함으로써, 각각의 고객 인스턴스는 데이터 분리, 고객들이 플랫폼에 액세스하기 위 한 비교적 더 적은 가동 중지 시간, 및 고객 중심의 업그레이드 스케줄들의 이점을 제공하는 그 자신의 고유 소 프트웨어 스택을 갖게 된다. 멀티-인스턴스 클라우드 아키텍처 내에서 고객 인스턴스를 구현하는 예는 도 2를 참조하여 아래에서 더 상세하게 논의될 것이다. 도 2는 본 개시내용의 실시예들이 동작할 수 있는 멀티-인스턴스 클라우드 아키텍처의 실시예의 개략도이다. 도 2는 멀티-인스턴스 클라우드 아키텍처가 서로 지리적으로 분리될 수 있는 2개의(예를 들어, 페어링된) 데이터 센터(22A 및 22B)에 접속하는 클라이언트 네트워크 및 네트워크를 포함하는 것 을 도시한다. 예로서 도 2를 이용하여, 네트워크 환경 및 서비스 제공자 클라우드 인프라스트럭처 클라이언트 인스턴스(본 명세서에서 클라이언트 인스턴스로도 지칭됨)는 전용 가상 서버들(예를 들어, 가상 서버들 (24A, 24B, 24C, 및 24D)) 및 전용 데이터베이스 서버들(예를 들어, 가상 데이터베이스 서버들(44A 및 44B))과 연관된다(예를 들어, 이들에 의해 지원 및 인에이블된다). 달리 말하면, 가상 서버들(24A-24D) 및 가상 데이터 베이스 서버들(44A 및 44B)은 다른 클라이언트 인스턴스들과 공유되지 않고 각각의 클라이언트 인스턴스에 특정적이다. 도시된 예에서, 클라이언트 인스턴스의 가용성을 용이하게 하기 위해, 가상 서버들(24A-24D) 및 가상 데이터베이스 서버들(44A 및 44B)은 2개의 상이한 데이터 센터(22A 및 22B)에 할당되어, 데이터 센터들 중 하나가 백업 데이터 센터로서 역할을 한다. 멀티-인스턴스 클라우드 아키텍처의 다른 실시예들은 웹 서버와 같은 다른 유형들의 전용 가상 서버들을 포함할 수 있다. 예를 들어, 클라이언트 인스턴스는 전 용 가상 서버들(24A-24D), 전용 가상 데이터베이스 서버들(44A 및 44B), 및 추가적인 전용 가상 웹 서버들(도 2 에 도시되지 않음)과 연관될 수 있다(예를 들어, 이들에 의해 지원 및 인에이블될 수 있다). 도 1 및 도 2는 각각 클라우드 컴퓨팅 시스템 및 멀티-인스턴스 클라우드 아키텍처의 특정 실시예들을 도시하지만, 본 개시내용은 도 1 및 도 2에 도시된 특정 실시예들로 제한되지 않는다. 예를 들어, 도 1은 플랫 폼이 데이터 센터들을 이용하여 구현되는 것을 도시하지만, 플랫폼의 다른 실시예들은 데이터 센터들로 제한되지 않고, 다른 유형들의 원격 네트워크 인프라스트럭처들을 이용할 수 있다. 또한, 본 개시내용의 다른 실시예들은 하나 이상의 상이한 가상 서버를 단일 가상 서버로 결합하거나, 역으로, 복수의 가상 서버들을 이용 하여 단일 가상 서버에 기인하는 동작들을 수행할 수 있다. 예를 들어, 도 2를 예로서 이용하여, 가상 서버들 (24A, 24B, 24C, 24D) 및 가상 데이터베이스 서버들(44A, 44B)은 단일 가상 서버로 결합될 수 있다. 또한, 본 접근법들은 멀티-테넌트 아키텍처들, 일반화된 클라이언트/서버 구현들을 포함하지만 이에 제한되지 않는 다른 아키텍처들 또는 구성들로, 그리고/또는 심지어 본 명세서에서 논의된 동작들 중 일부 또는 전부를 수행하도록 구성된 단일 물리적 프로세서 기반 디바이스 상에서도 구현될 수 있다. 유사하게, 가상 서버들 또는 기계들이 구현의 논의를 용이하게 하기 위해 참조될 수 있지만, 물리적 서버들이 적절히 대신 이용될 수 있다. 도 1 및 도 2의 이용 및 논의는 서술 및 설명의 편의를 용이하게 하기 위한 예들일 뿐이고, 본 개시내용을 본 명세서에 도시된 특정 예들로 제한하는 것으로 의도되지 않는다. 이해될 수 있는 바와 같이, 도 1 및 도 2와 관련하여 논의된 각각의 아키텍처들 및 프레임워크들은 전반에 걸쳐 다양한 유형들의 컴퓨팅 시스템들(예를 들어, 서버들, 워크스테이션들, 클라이언트 디바이스들, 랩톱들, 태블릿 컴퓨터들, 셀룰러 전화기들 등)을 포함한다. 완전함을 위해, 이러한 시스템들에서 전형적으로 발견되는 구성요 소들의 간략하고 높은 레벨의 개요가 제공된다. 이해될 수 있는 바와 같이, 이러한 개요는 이러한 컴퓨팅 시스 템들에서 전형적인 구성요소들의 높은 레벨의 일반화된 뷰를 제공하기 위한 것일 뿐이며, 논의되거나 논의에서 생략된 구성요소들의 관점에서 제한적인 것으로 고려되어서는 안 된다. 배경으로서, 본 접근법은 도 3에 도시된 것과 같은 하나 이상의 프로세서 기반 시스템을 이용하여 구현될 수 있 다는 것을 알 수 있다. 마찬가지로, 본 접근법에서 이용되는 애플리케이션들 및/또는 데이터베이스들은 이러한 프로세서 기반 시스템들 상에 저장, 이용 및/또는 유지될 수 있다. 알 수 있는 바와 같이, 도 3에 도시된 것과 같은 이러한 시스템들은 분산 컴퓨팅 환경, 네트워크화된 환경, 또는 다른 멀티-컴퓨터 플랫폼 또는 아키텍처에 존재할 수 있다. 마찬가지로, 도 3에 도시된 것과 같은 시스템들은 본 접근법이 구현될 수 있는 하나 이상의 가상 환경 또는 계산 인스턴스를 지원하거나 이와 통신하는데 이용될 수 있다. 이를 염두에 두고, 예시적인 컴퓨터 시스템은 도 3에 도시된 컴퓨터 구성요소들 중 일부 또는 전부를 포함할 수 있다. 도 3은 일반적으로 컴퓨팅 시스템의 예시적인 구성요소들 및 하나 이상의 버스를 따르는 것과 같은 그 잠재적인 상호접속들 또는 통신 경로들의 블록도를 도시한다. 도시된 바와 같이, 컴퓨팅 시스템은 하나 이상의 프로세서, 하나 이상의 버스, 메모리, 입력 디바이스들, 전원, 네트워크 인터페이 스, 사용자 인터페이스, 및/또는 본 명세서에 설명된 기능들을 수행하는데 유용한 다른 컴퓨터 구성요 소들과 같은, 그러나 이에 제한되지 않는 다양한 하드웨어 구성요소들을 포함할 수 있다. 하나 이상의 프로세서는 메모리에 저장된 명령어들을 수행할 수 있는 하나 이상의 마이크로프로세서를 포함할 수 있다. 추가적으로 또는 대안적으로, 하나 이상의 프로세서는 주문형 집적 회로(ASIC)들, 필드 프로그래머블 게이트 어레이(FPGA)들, 및/또는 메모리로부터 명령어들을 호출하지 않고 본 명세서에서 논의 된 기능들 중 일부 또는 전부를 수행하도록 설계된 다른 디바이스들을 포함할 수 있다. 다른 구성요소들과 관련하여, 하나 이상의 버스는 컴퓨팅 시스템의 다양한 구성요소들 사이에 데이터 및/또는 전력을 제공하기에 적절한 전기 채널들을 포함한다. 메모리는 임의의 유형적, 비일시적, 및 컴퓨 터 판독가능한 저장 매체를 포함할 수 있다. 도 1에서 단일 블록으로 도시되지만, 메모리는 하나 이상의 물리적 위치에서 동일한 또는 상이한 유형들의 복수의 물리적 유닛들을 이용하여 구현될 수 있다. 입력 디바이 스들은 하나 이상의 프로세서에 데이터 및/또는 명령들을 입력하기 위한 구조들에 대응한다. 예를 들 어, 입력 디바이스들은 마우스, 터치패드, 터치스크린, 키보드 등을 포함할 수 있다. 전원은 라인 전 력 및/또는 배터리 소스와 같은, 컴퓨팅 디바이스의 다양한 구성요소들의 전력을 위한 임의의 적절한 소스 일 수 있다. 네트워크 인터페이스는 하나 이상의 네트워크(예를 들어, 통신 채널)를 통해 다른 디바이스들 과 통신할 수 있는 하나 이상의 트랜시버를 포함할 수 있다. 네트워크 인터페이스는 유선 네트워크 인터페 이스 또는 무선 네트워크 인터페이스를 제공할 수 있다. 사용자 인터페이스는 하나 이상의 프로세서로 부터 그것으로 전송되는 텍스트 또는 이미지들을 표시하도록 구성되는 디스플레이를 포함할 수 있다. 디스플레 이에 추가적으로 및/또는 대안적으로, 사용자 인터페이스는 조명들(예를 들어, LED들), 스피커들 등과 같은, 사용자와 인터페이싱하기 위한 다른 디바이스들을 포함할 수 있다. 위에서 논의된 클라우드 기반 플랫폼은 NLU 기술들을 이용할 수 있는 아키텍처의 예를 제공한다는 것이 이 해되어야 한다. 특히, 클라우드 기반 플랫폼은 의도-엔티티 모델을 포함하는, 다수의 출력들의 생성을 용 이하게 하기 위해, 마이닝될 수 있는 소스 데이터의 큰 코퍼스를 포함하거나 이를 저장할 수 있다. 예를 들어, 클라우드 기반 플랫폼은 특정 시스템들의 변경들 또는 수리들에 대한 요청들, 요청자와 서비스 기술자 또는 문제를 해결하려고 시도하는 관리자 사이의 대화, 티켓이 결국 어떻게 해결되었는지에 대한 설명 등을 갖는 티 켓팅 소스 데이터를 포함할 수 있다. 그 후, 생성된 의도-엔티티 모델은 장래의 요청들에서 의도들을 분류하기 위한 기반으로서 역할을 할 수 있고, 사용자들로부터의 자연어 요청들에 기반하여 클라우드 기반 플랫폼 내 의 장래의 문제들을 자동으로 해결할 수 있는 가상 에이전트를 지원하기 위해 대화 모델을 생성 및 개선하는데 이용될 수 있다. 이와 같이, 본 명세서에 설명된 특정 실시예들에서, 개시된 에이전트 자동화 프레임워크는 클 라우드 기반 플랫폼에 통합되는 반면, 다른 실시예들에서, 에이전트 자동화 프레임워크는, 아래에 논의되는 바와 같이, 발화들을 처리하기 위해 클라우드 기반 플랫폼에 통신가능하게 결합되는 적절한 시스템에 의해 (클라우드 기반 플랫폼과는 별도로) 호스팅 및 실행될 수 있다. 이상의 내용을 염두에 두고, 도 4a는 클라이언트 인스턴스와 연관된 에이전트 자동화 프레임워크(본 명세서에서 에이전트 자동화 시스템이라고도 함)를 나타내고 있다. 보다 구체적으로는, 도 4a는 앞서 논 의된 클라우드 기반 플랫폼을 비롯한 서비스 제공자 클라우드 인프라스트럭처의 일부분의 예를 나타내고 있 다. 클라우드 기반 플랫폼은 (예컨대, 클라이언트 디바이스(14D)의 웹 브라우저를 통해) 클라이언트 인스 턴스 내에서 실행 중인 네트워크 애플리케이션들에 대한 사용자 인터페이스를 제공하기 위해 네트워크 를 통해 클라이언트 디바이스(14D)에 접속된다. 클라이언트 인스턴스는 도 2와 관련하여 설명된 것들과 유 사한 가상 서버들에 의해 지원되고, 클라이언트 인스턴스 내에서 본 명세서에서 설명되는 개시된 기능에 대 한 지원을 보여주기 위해 본 명세서에 예시되어 있다. 클라우드 제공자 인프라스트럭처는 일반적으로 클라이언 트 디바이스(14D)와 같은 복수의 최종 사용자 디바이스들을 동시에 지원하도록 구성되어 있고, 여기서 각각의 최종 사용자 디바이스는 단일 클라이언트 인스턴스와 통신하고 있다. 또한, 클라우드 제공자 인프라스트럭 처는 클라이언트 인스턴스와 같은 임의의 수의 클라이언트 인스턴스들을 동시에 지원하도록 구성될 수 있고, 여기서 인스턴스들 각각은 하나 이상의 최종 사용자 디바이스와 통신하고 있다. 앞서 언급된 바와 같이, 최종 사용자는 또한 웹 브라우저 내에서 실행되는 애플리케이션을 이용하여 클라이언트 인스턴스와 인터페 이싱할 수 있다. 도 4a에 도시된 에이전트 자동화 프레임워크의 실시예는 거동 엔진(BE), NLU 프레임워크, 및 데 이터베이스를 포함하고, 이들은 클라이언트 인스턴스 내에서 통신가능하게 결합된다. BE는 자연 어 사용자 요청들(본 명세서에서 사용자 발화들 또는 발화들이라고도 지칭됨) 및 에이전트 응답 들(본 명세서에서 에이전트 발화들이라고도 지칭됨)을 통해 클라이언트 디바이스(14D)의 사용자와 상 호작용하는 임의의 적절한 수의 가상 에이전트들 또는 페르소나들을 호스팅하거나 이들을 포함할 수 있다. 실 제 구현들에서, 에이전트 자동화 프레임워크는 본 개시내용에 따라, 의미 추출 서브시스템, 의미 검색 서 브시스템 등을 포함하는 다수의 다른 적절한 구성요소들을 포함할 수 있다는 점에 유의할 수 있다. 도 4a에 도시된 실시예에 있어서, 데이터베이스는 데이터베이스 서버 인스턴스(예를 들어, 도 2와 관련하 여 논의된 바와 같은 데이터베이스 서버 인스턴스(44A 또는 44B)), 또는 데이터베이스 서버 인스턴스들의 집합 일 수 있다. 도시된 데이터베이스는 의도-엔티티 모델, 대화 모델, 발화들의 코퍼스, 및 규칙들의 집합을 데이터베이스의 하나 이상의 테이블(예를 들어, 관계형 데이터베이스 테이블)에 저 장한다. 의도-엔티티 모델은 특정 샘플 발화들을 통해 특정 의도들과 특정 엔티티들 사이의 연관들 또는 관계들을 저장한다. 특정 실시예들에서, 의도-엔티티 모델은 적절한 저작 툴을 이용하여 설계자에 의해 저작될 수 있다. 다른 실시예들에서, 에이전트 자동화 프레임워크는 데이터베이스의 하나 이상의 테 이블에 저장된 발화들의 코퍼스 및 규칙들의 집합으로부터 의도-엔티티 모델을 생성한다. 의도 -엔티티 모델은 또한 일부 실시예들에서, 저작 및 ML 기술들의 조합에 기반하여 결정될 수 있다. 여하튼, 개시된 의도-엔티티 모델은 의도들 및/또는 엔티티들의 임의의 적절한 조합을 발화들의 코퍼스의 각 각의 것들과 연관시킬 수 있다는 것을 이해해야 한다. 아래에 논의되는 실시예들에 있어서, 의도-엔티티 모델 의 샘플 발화들은 의미 검색을 위한 검색 공간을 정의하기 위해 이해 모델의 의미 표현들을 생성하는데 이 용된다. 도 4a에 도시된 실시예에 있어서, 대화 모델은 의도-엔티티 모델의 의도들과 일반적으로 BE의 거동을 정의하는 특정 응답들 및/또는 액션들 사이의 연관들을 저장한다. 특정 실시예들에서, 대화 모델 내의 연관들의 적어도 일부는 설계자가 BE가 처리된 발화들 내의 특정 식별된 아티팩트들에 어떻게 응답하기를 원하는지에 기반하여 BE의 설계자에 의해 수동으로 생성되거나 미리 정의된다. 상이한 실시예들에서, 데이터베이스는 컴파일 모델 템플릿 데이터(예를 들어, 클래스 호환성 규칙들, 클래스 레벨 스코어링 계수들, 트리 모델 비교 알고리즘들, 트리 하위구조 벡터화 알고리즘들), 의미 표현들 등에 관한 정보를 저장하 는 테이블들과 같은, 의도 분류에 관련된 다른 정보를 저장하는 다른 데이터베이스 테이블들을 포함할 수 있다 는 점에 유의해야 한다. 예시된 실시예에 있어서, NLU 프레임워크는 NLU 엔진 및 어휘 관리자를 포함한다. NLU 프레임 워크는 임의의 적절한 수의 다른 구성요소들을 포함할 수 있다는 것을 알 수 있다. 특정 실시예들에서, NLU 엔진은, 발화들의 단어 또는 구들로부터 단어 벡터들(예를 들어, 의도 벡터들, 주어 또는 엔티티 벡터 들, 서브트리 벡터들)을 생성하는 것은 물론, 이러한 벡터들 사이의 거리들(예를 들어, 유클리드 거리들)을 결 정하는 것을 포함하여, NLU 프레임워크의 다수의 기능들을 수행하도록 설계된다. 예를 들어, NLU 엔진 은 일반적으로 분석된 발화의 각각의 의도에 대한 각각의 의도 벡터를 생성할 수 있다. 이와 같이, 2개의 상이한 발화 사이의 유사도 척도 또는 거리는 2개의 의도에 대해 NLU 엔진에 의해 생성된 각각의 의도 벡 터들을 이용하여 계산될 수 있고, 유사도 척도는 2개의 의도 사이의 의미에서의 유사도의 표시를 제공한다. (아래에 논의되는 어휘 서브시스템의 일부일 수 있는) 어휘 관리자는 어휘 훈련 동안 NLU 프레임워크(10 4)가 마주치지 않았던 어휘 외 단어들 및 심볼들을 다룬다. 예를 들어, 특정 실시예들에서, 어휘 관리자 는 (예를 들어, 규칙들의 집합에 기반하여) 에이전트 자동화 프레임워크에 의해 분석된 발화들 내의 단어들 및 약어들의 동의어들 및 도메인-특정 의미들을 식별하고 대체할 수 있으며, 이는 NLU 프레임워크 의 성능을 개선하여 맥락-특정 발화들 내의 의도들 및 엔티티들을 적절히 식별할 수 있다. 추가로, 기존 단어 들에 대한 새로운 이용들을 채택하는 자연어의 경향을 수용하기 위해, 특정 실시예들에서, 어휘 관리자는 맥락의 변화에 기반하여 다른 의도들 또는 엔티티들과 이전에 연관된 단어들의 재창출을 처리한다. 예를 들어, 어휘 관리자는 특정 클라이언트 인스턴스 및/또는 대화 채널로부터의 발화들의 맥락에서 단어 \"자전거\"가 실제로 자전거가 아닌 오토바이를 지칭하는 상황을 처리할 수 있다. 의도-엔티티 모델 및 대화 모델이 생성되었으면, 에이전트 자동화 프레임워크는 사용자 발화 를 (자연어 요청의 형태로) 수신하고, 그 요청을 다루기 위한 액션을 적절히 취하도록 설계된다. 예를 들 어, 도 4a에 예시된 실시예에 있어서, BE는 네트워크를 통해, 클라이언트 네트워크 상에 배치된 클라이언트 디바이스(14D)에 의해 제출된 발화(예를 들어, 채팅 통신에서의 자연어 요청)를 수신하는 가상 에이전트이다. BE는 발화를 NLU 프레임워크에 제공하고, NLU 엔진은 아래에 논의되는 NLU 프레임워크의 다양한 서브시스템들과 함께, 의도-엔티티 모델에 기반하여 발화를 처리하여, 발화 내 의 아티팩트들(예를 들어, 의도들 및/또는 엔티티들)을 도출한다. NLU 엔진에 의해 도출된 아티팩트들뿐 만 아니라 대화 모델 내의 연관들에 기반하여, BE는 하나 이상의 특정의 미리 정의된 액션을 수행한 다. 예시된 실시예에 있어서, BE는 또한 네트워크를 통해 클라이언트 디바이스(14D)에 응답(예 를 들어, 가상 에이전트 발화 또는 확인)을 제공하며, 이는 예를 들어 수신된 사용자 발화에 응답하 여 BE에 의해 수행되는 액션들을 표시한다. 또한, 특정 실시예들에서, 발화는 NLU 프레임워크 내의 계속적인 학습을 위해 데이터베이스에 저장된 발화들에 추가될 수 있다. 다른 실시예들에서, 에이전트 자동화 프레임워크 및/또는 NLU 프레임워크의 하나 이상의 구성요소가 개선된 성능을 위해 다른 방식으로 배열, 위치, 또는 호스팅될 수 있다는 점이 이해될 수 있다. 예를 들어, 특 정 실시예들에서, NLU 프레임워크의 하나 이상의 부분은 클라이언트 인스턴스와 별개이고 이에 통신가 능하게 결합되는 인스턴스(예를 들어, 공유 인스턴스, 기업 인스턴스)에 의해 호스팅될 수 있다. 이러한 실시 예들은 클라이언트 인스턴스의 크기를 유리하게 감소시킬 수 있어서, 클라우드 기반 플랫폼의 효율을 개선시킬 수 있다는 점이 현재 인식되고 있다. 특히, 특정 실시예들에서, 아래에 논의되는 유사도 스코어링 서 브시스템의 하나 이상의 구성요소는, 발화에 대한 아티팩트 매치들의 식별을 가능하도록 검색 공간 내의 적절한 매칭 의미 표현들에 대한 개선된 의미 검색을 가능하게 하기 위해, 클라이언트 인스턴스뿐만 아니라 다른 클라이언트 인스턴스들에 통신가능하게 결합되는 별개의 인스턴스(예를 들어, 기업 인스턴스)에 의해 호스 팅될 수 있다. 이상의 내용을 염두에 두고, 도 4b는 NLU 프레임워크의 부분들이 클라우드 기반 플랫폼에 의해 호스팅 되는 별개의 공유 인스턴스(예를 들어, 기업 인스턴스)에 의해 대신 실행되는 에이전트 자동화 프레임워크 의 대안적인 실시예를 예시한다. 예시된 기업 인스턴스는 적절한 프로토콜을 통해(예를 들어, 적절 한 REST(Representational State Transfer) 요청들/응답들을 통해) 임의의 적절한 수의 클라이언트 인스턴스들 과 아티팩트 마이닝 및 분류에 관련된 데이터를 교환하도록 통신가능하게 결합된다. 이와 같이, 도 4b에 예시 된 설계에 대해, 복수의 클라이언트 인스턴스들에 액세스가능한 공유 자원으로서 NLU 프레임워크의 일부분을 호스팅함으로써, 클라이언트 인스턴스의 크기가 (예를 들어, 도 4a에 예시된 에이전트 자동화 프레임워 크의 실시예에 비해) 실질적으로 감소될 수 있고, 에이전트 자동화 프레임워크의 전체 효율이 개선될 수 있다. 특히, 도 4b에 도시된 NLU 프레임워크는 NLU 프레임워크 내에서 별개의 프로세스들을 수행하는 3개의 별개의 구성요소로 분할된다. 이러한 구성요소들은 기업 인스턴스에 의해 호스팅되는 공유 NLU 훈련자 , 기업 인스턴스에 의해 호스팅되는 공유 NLU 주석자, 및 클라이언트 인스턴스에 의해 호스 팅되는 NLU 예측자를 포함한다. 도 4a 및 도 4b에 도시된 조직들은 단지 예들이고, 다른 실시예들에서, NLU 프레임워크 및/또는 에이전트 자동화 프레임워크의 다른 조직들이 본 개시내용에 따라 이용될 수 있다는 것을 알 수 있다. 도 4b에 예시된 에이전트 자동화 프레임워크의 실시예에 있어서, 공유 NLU 훈련자는 클라이언트 인스 턴스로부터 발화들의 코퍼스를 수신하고, 의도-엔티티 모델의 생성을 용이하게 하기 위해 의미론 적 마이닝(예를 들어, 의미론적 파싱, 문법 조작(grammar engineering) 등을 포함함)을 수행하도록 설계된다. 의도-엔티티 모델이 생성되었으면, BE가 클라이언트 디바이스(14D)에 의해 제공되는 사용자 발화 를 수신할 때, NLU 예측자는 발화의 파싱 및 주석부기를 위해 발화 및 의도-엔티티 모델 을 공유 NLU 주석자에 전달한다. 공유 NLU 주석자는 의도-엔티티 모델에 기반하여 발화 의 의미론적 파싱, 문법 조작 등을 수행하고, 발화의 의미 표현들을 클라이언트 인스턴스의 NLU 예측자에 반환한다. 그 후, NLU 예측자는 아래에 더 상세히 논의되는 발화의 이러한 주석부기 된 구조들을 이용하여, 의도-엔티티 모델로부터 매칭 의도들을 식별하고, 이에 따라 BE는 식별된 의 도들에 기반하여 하나 이상의 액션을 수행할 수 있다. 아래에 논의되는 바와 같이, 공유 NLU 주석자는 의 미 추출 서브시스템에 대응할 수 있고, NLU 예측자는 NLU 프레임워크의 의미 검색 서브시스템에 대응할 수 있다는 점이 이해될 수 있다. 도 5는 거동 엔진(BE) 및 NLU 프레임워크가 에이전트 자동화 프레임워크의 실시예 내에서 각각 의 역할들을 수행하는 프로세스를 도시하는 흐름도이다. 예시된 실시예에 있어서, NLU 프레임워크는 수신된 사용자 발화를 처리하여 의도-엔티티 모델에 기반하여 아티팩트들(예를 들어, 의도들 및 /또는 엔티티들)을 추출한다. 추출된 아티팩트들은 BE에 의해 소모가능한 형태로 사용자 발화 의 의도들 및 엔티티들을 나타내는 심볼들의 집합으로서 구현될 수 있다. 이와 같이, 이러한 추출된 아티팩트 들은 BE에 제공되고, BE는 대화 모델에 기반하여 수신된 아티팩트들을 처리함으로써, 수신된 사용자 발화에 응답하여 적절한 액션들(예를 들어, 패스워드를 변경하는 것, 기록을 생성하는 것, 아이템을 구매하는 것, 계정을 닫는 것) 및/또는 가상 에이전트 발화들을 결정한다. 화살표에 의해 표시된 바와 같이, 프로세스는 에이전트 자동화 프레임워크가 대화 포맷으로 동일한 사용자 및/ 또는 다른 사용자들로부터 추가적인 사용자 발화들을 수신하고 다룸에 따라 연속적으로 반복될 수 있다. 도 5에 도시된 바와 같이, 특정 상황들에서, 적절한 액션들이 수행되었으면 더 이상의 액션 또는 통신이 발생하지 않을 수 있다는 것을 알 수 있다. 또한, 사용자 발화 및 에이전트 발화가 본 명세서에서 서면 대화 매체 또는 채널(예를 들어, 채팅, 이메일, 티켓팅 시스템, 텍스트 메시지들, 포럼 게시물들)을 이용 하여 전달되는 것으로 논의되지만, 다른 실시예들에서는, 음성 대 텍스트 및/또는 텍스트 대 음성 모듈들 또는 플러그-인들은 본 개시내용에 따라 구두 사용자 발화를 텍스트로 변환하고/하거나 텍스트 기반 에이전트 발화를 음성으로 변환하여 음성 대화형 시스템을 가능하게 하도록 포함될 수 있음에 유의해야 한다. 또한, 특정 실시예들에서, 사용자 발화 및 가상 에이전트 발화 둘 다는 에이전트 자동화 프레임워크 내에서 새로운 구조 및 어휘의 계속된 학습을 가능하게 하기 위해 데이터베이스에(예를 들어, 발화 들의 코퍼스에) 저장될 수 있다. 언급된 바와 같이, NLU 프레임워크는 NLU의 어려운 문제를 관리가능한 검색 문제, 즉, 의미 추출 서브시스 템 및 의미 검색 서브시스템으로 변환하기 위해 협력하는 2개의 주요 서브시스템을 포함한다. 예를 들어, 도 6 은 에이전트 자동화 프레임워크의 실시예 내의 NLU 프레임워크의 의미 추출 서브시스템 및 의미 검색 서브시스템의 역할들을 예시하는 블록도이다. 예시된 실시예에 있어서, 도 6의 우측 부분은 모 델의 다양한 아티팩트들 각각에 대한 샘플 발화들을 포함하는, 의도-엔티티 모델을 수신하는 NLU 프 레임워크의 의미 추출 서브시스템을 예시한다. 의미 추출 서브시스템은 의도-엔티티 모델(10 8)의 샘플 발화들의 의미 표현들(예를 들어, 파스 트리 구조들)을 포함하는 이해 모델을 생성한 다. 다시 말해서, 이해 모델은 아래에 더 상세히 논의되는 바와 같이, 의미 검색 서브시스템에 의한 검색(예를 들어, 비교 및 매칭)을 가능하게 하기 위한 의미 표현들을 포함하는 의도-엔티티 모델의변환된 또는 증강된 버전이다. 이와 같이, 도 6의 우측 부분은 일반적으로, 예를 들어 일상적으로, 스케 줄링 기반으로 또는 의도-엔티티 모델에 대한 업데이트들에 응답하여 사용자 발화를 수신하기 전에 수행된다는 것을 알 수 있다. 도 6에 도시된 실시예의 경우, 좌측 부분은 적어도 하나의 의미 표현을 갖는 발화 의미 모델을 생성하기 위해 사용자 발화를 또한 수신 및 처리하는 의미 추출 서브시스템을 도시한다. 아래에 더 상세히 논의되는 바와 같이, 이러한 의미 표현들(158 및 162)은 발화의 문법적 구문 구조를 캡처하는 형태를 갖 는 데이터 구조들이며, 데이터 구조들의 서브트리들은 발화의 부분들의 의미론적 의미들을 인코딩하는 서브트리 벡터들을 포함한다. 이와 같이, 주어진 발화에 대해, 대응하는 의미 표현은 아래에 더 상세히 설명되는 바와 같이, 의미 검색 서브시스템에 의한 검색, 비교 및 매칭을 가능하게 하는 공통 의미 표현 포맷으로 구문론 적 및 의미론적 의미 둘 다를 캡처한다. 따라서, 발화 의미 모델의 의미 표현들은 일반적으로 검색 키와 같은 것으로 생각될 수 있는 반면, 이해 모델의 의미 표현들은 검색 키가 추구될 수 있는 검색 공간을 정의한다. 따라서, 의미 검색 서브시스템은 이해 모델의 의미 표현들을 검색하여, 아래 에 논의되는 바와 같이 발화 의미 모델의 의미 표현과 매칭되는 하나 이상의 아티팩트를 찾음으로써, 추출된 아티팩트들을 생성한다. 도 6의 의미 추출 서브시스템 자체는 의미 표현들(158 및 162)을 생성하기 위해 협력하는 NLU 프레임워크 의 다수의 서브시스템들을 이용한다. 예를 들어, 도 7은 에이전트 자동화 프레임워크의 NLU 프레임워크 의 의미 추출 서브시스템의 실시예를 예시하는 블록도이다. 의미 추출 서브시스템의 예시된 실 시예는 도 6과 관련하여 전술한 바와 같이, 사용자 발화 또는 의도-엔티티 모델의 샘플 발화들 중 하나일 수 있는 발화에 대한 주석부기된 발화 트리를 생성하기 위해 ML 기반 방법들과 인터리빙된 규칙 기반 방법들을 이용한다. 더 구체적으로, 도 7은 의미 추출 서브시스템의 실시예들이 어떻게 전체 NLU 프레임워크에 플러그-인될 수 있는 규칙 기반 및 ML 기반(예를 들어, 통계) 모델들 및 프로그램들의 조합들을 포함하는 다수의 최상의 모델들을 이용할 수 있는지를 예시한다. 예를 들어, 예시된 의미 추출 서브 시스템의 플러깅가능한 설계 때문에, 어휘 서브시스템은 다양한 단어들 또는 구들에 대한 단어 벡터 들을 정의하는 임의의 적절한 단어 벡터 분포 모델을 포함할 수 있다. 즉, 상이한 단어 분포 모델들이 주어진 대화 채널, 언어, 맥락 등에서 다른 것들에 비해 우수할 수 있는 것으로 인식되기 때문에, 개시된 플러깅가능한 설계는 의미 추출 서브시스템이 특정 환경들 및 애플리케이션들에 맞춤화될 수 있게 한다. 도 7에 예시된 실시예에 있어서, 의미 추출 서브시스템은 NLU 프레임워크의 3개의 플러그-인 지원 서브시스템, 즉 어휘 서브시스템, 구조 서브시스템 및 운율 서브시스템을 이용하고, 이러한 서브시스템들의 다 양한 출력들은 발화로부터 발화 트리를 생성하기 위해 저장된 규칙들에 따라 조합된다. 도 7에 도시된 의미 추출 서브시스템의 실시예의 경우, 어휘 서브시스템은 일반적으로 의미 추출 서 브시스템의 어휘를 처리한다. 이와 같이, 도시된 의미 추출 서브시스템은 발화들의 어휘의 분석 및 추출을 가능하게 하는 다수의 어휘 플러그-인을 포함한다. 예시된 실시예의 경우, 어휘 플러그-인들(17 6)은 학습된 멀티모드 단어 벡터 분포 모델, 학습된 유니모드 단어 벡터 분포 모델, 및 임의의 다른 적절한 단어 벡터 분포 모델을 포함한다. 이러한 맥락에서, \"유니모드\"는 각각의 단어에 대한 단일의 각 각의 벡터를 갖는 단어 벡터 분포 모델들을 지칭하는 반면, \"멀티모드\"는 상이한 맥락들에서 상이한 의미들을 가질 수 있는 특정 단어들(예를 들어, 동음이의어들, 다의어들)에 대한 복수의 벡터를 지원하는 단어 벡터 분포 모델들을 지칭한다(예를 들어, \"뱅크(bank)\"는 돈을 보관하기 위한 장소, 돈 자체, 항공기의 조종, 또는 강 근 처의 위치를 지칭할 수 있다). 모델들(178, 180 및 182)은 언어, 대화 스타일, 대화 채널 등과 같은 적절한 파 라미터들에 기반하여 선택될 수 있는 단어 벡터들의 플러깅가능한 집합들을 제공한다. 예를 들어, 학습된 멀티모드 분포 모델 및 학습된 유니모드 분포 모델은 도 12와 관련하여 아래에 논 의되는 바와 같이, 무감독 학습 또는 다른 일반 클러스터링 알고리즘들을 이용하여 생성되는 단어 분포들(예를 들어, 단어 벡터들의 정의된 벡터 공간들)을 제공할 수 있다. 즉, 발화들 내에서 아주 근접하여 흔히 이용되는 단어들이 종종 관련된 의미들을 갖는다는 것을 인식하면, 학습된 멀티모드 분포 모델 및 학습된 유니모드 분포 모델은 (예를 들어, 발화들의 코퍼스로부터) 발화들의 통계적 분석을 수행한 다음, 단어가 이들 발화들 내의 다른 단어들과 관련하여 흔히 이용되는 방법에 기반하여 단어들에 대한 벡터들을 정의함으로써 생 성될 수 있다. 이와 같이, 이들 어휘 플러그-인들은 어휘 서브시스템이 사용자 발화 및 샘플 발화들을 처리할 때, 동의어들, 오기 단어들, 인코딩된 심볼들(예를 들어, 웹 주소들, 네트워크 경로들, 이모티콘들, 및 이모지들), 어휘 외 용어들 등을 인식하고 다룰 수 있게 한다. 특정 실시예들에서, 어휘 서브 시스템은 아래에 논의되는 바와 같이, 발화 트리의 노드들에 대한 단어 벡터들을 생성하기 위해 저장된 규칙들에 기반하여 다양한 어휘 플러그-인들에 의해 출력되는 단어 벡터들을 조합하거나 이들로부 터 선택할 수 있다. 또한, 단어 벡터 분포 모델들(178, 180, 및/또는 182)은 도 12와 관련하여 아래에 논의되 는 바와 같이, 수신된 사용자 발화들에 대해 수행되는 무감독 학습에 기반하여 계속 업데이트될 수 있다. 도 7에 도시된 실시예에 있어서, 의미 추출 서브시스템의 구조 서브시스템은 규칙 기반 및 ML 기반 구조 파싱 플러그-인들의 조합을 이용하여 발화의 언어학적 형상을 분석한다. 즉, 도시된 구조 플러 그-인들은 발화들(122 및 155)의 구문론적 및 문법적 구조의 분석 및 추출을 가능하게 한다. 예시된 실시 예에 있어서, 구조 플러그-인들은 규칙 기반 파서들, ML 기반 파서들(예로서, DNN 기반 파서들, RNN 기반 파서들 등) 및 다른 적절한 파서 모델들을 포함한다. 예를 들어, 이러한 구조 플러그-인들 중 하나 이상은 발화의 각각의 단어 또는 구에 대한 클래스 주석부기들 또는 태깅을 (예를 들어, 동사, 주어 또 는 엔티티, 직접 목적어, 수식어 등으로서) 가능하게 한다. 특정 실시예들에서, 구조 서브시스템은 후술 하는 바와 같이 발화 트리들의 구조 또는 형상을 정의하는데 이용되는 데이터베이스 내에 저장된 하 나 이상의 규칙에 기반하여 다양한 구조 플러그-인들에 의해 출력되는 파스 구조들을 조합하거나 이 들로부터 선택할 수 있다. 도 7에 도시된 실시예의 경우, 의미 추출 서브시스템의 운율 서브시스템은 규칙 기반 및 ML 기반 운 율 플러그-인들의 조합을 이용하여 발화의 운율을 분석한다. 도시된 운율 플러그-인들은 규칙 기반 운율 시스템들, ML 기반 운율 시스템들 및 다른 적절한 운율 시스템들을 포함한다. 이러 한 플러그-인들을 이용하여, 운율 서브시스템은 예를 들어 의도들 간의 경계들, 상이한 의도들에 대한 긴 급도 또는 상대적 중요도 등을 결정하는데 이용될 수 있는 리듬(예로서, 발화 버스트들, 구두점 또는 일시정지 들에 의해 표시되는 세그먼트화들과 같은 채팅 리듬), 강조(예로서, 대문자 사용, 볼드체 사용, 밑줄, 별표들), 중점 또는 주의(예로서, 특정 용어들 또는 스타일들의 반복) 등과 같은 기입된 운율 큐들을 포함하는 운율적 큐 들에 대해 발화를 분석한다. 이와 같이, 특정 실시예들에서, 운율 서브시스템은 후술하는 바와 같이 발화 트리를 생성하기 위해 데이터베이스에 저장된 규칙들에 기반하여 다양한 운율 플러그-인들 에 의해 출력되는 운율 파싱된 구조들을 조합하거나 이들로부터 선택할 수 있다. 이와 같이, 도 7에 도시된 의미 추출 서브시스템의 실시예에 있어서, NLU 프레임워크의 어휘 서브시 스템, 구조 서브시스템, 및 운율 서브시스템은 하나 이상의 규칙에 기반하여 발화로 부터 발화 트리를 생성하도록 협력한다. 특정 실시예들에서, 하나의 서브시스템(예를 들어, 운율 서브시 스템)의 출력의 일부는 발화로부터 발화 트리를 생성할 때 다른 서브시스템(예를 들어, 구조 서 브시스템)에 대한 입력으로서 제공될 수 있다는 것을 알 수 있다. 의미 추출 서브시스템에 의해 생 성된 결과적인 발화 트리 데이터 구조는 다수의 노드를 포함하고, 각각의 노드는 어휘 서브시스템에 의해 제공된 각각의 단어 벡터와 연관된다. 또한, 이러한 노드들은 저장된 규칙들에 따라 구조 서브시스 템 및 운율 서브시스템의 출력에 기반하여 트리 구조를 형성하도록 함께 배열되고 결합된다. 예를 들어, 도 8은 본 접근법의 실시예에 따른, 발화에 대해 생성된 발화 트리의 예를 나타내는 도면 이다. 언급된 바와 같이, 발화 트리는 발화에 기반하여 의미 추출 서브시스템에 의해 생성되는 데이터 구조이다. 특정 실시예들에서, 발화 의미 모델의 의미 표현들 및 이해 모델의 의미 표 현들이 발화 트리들인(또는 발화 트리들로부터 도출되는) 반면, 다른 실시예들에서는, 다른 파스 구조들이 이용될 수 있다. 도 8에 도시된 예의 경우, 발화 트리는 예시적인 발화, \"나는 오늘 쇼핑몰 옆에 있는 가 게에 가서 파란색 깃이 있는 셔츠와 검은색 바지를 사고 또한 일부 결함이 있는 배터리들을 반품하고 싶다\"에 기반한다. 도시된 발화 트리는 트리 구조로 배열된 노드들의 세트(예를 들어, 노드들(202A, 202B, 202C, 202D, 202E, 202F, 202G, 202H, 202I, 202J, 202K, 202L, 202M, 202N, 및 202P))를 포함하고, 각각의 노드는 발화의 특정 단어 또는 구를 나타낸다. 노드들의 각각이 또한 발화 트리의 특정 서브트 리를 나타내는 것으로 설명될 수 있고, 서브트리가 하나 이상의 노드를 포함할 수 있다는 점에 유의할 수 있다. 언급된 바와 같이, 도 8에 도시된 발화 트리의 형태 또는 형상은 운율 서브시스템 및 구조 서브시스 템에 의해 결정되고, 예시적인 발화의 구문론적인 문법적 의미를 나타낸다. 더 구체적으로, 운율 서브시 스템은 발화를 의도 세그먼트들로 분해하는 반면, 구조 서브시스템은 이러한 의도 세그먼트들로부터 발화 트리를 구성한다. 노드들 각각은 발화의 특정 단어 또는 구의 의미론적 의미를 표시하기 위해 어휘 서브시스템에 의해 결정되는 각각의 단어 벡터를 저장 또는 참조한다. 언급된 바와 같이, 각각의 단 어 벡터는 발화의 일부의 의미론적 의미의 수학적 표현을 제공하는 부동 소수점 값들(예를 들어, 1xN 또는 Nx1행렬)의 순서화된 n차원 리스트(예를 들어, 300차원 리스트)이다. 또한, 노드들 각각은 그 노드에 의해 표현되는 단어 또는 구에 관한 추가적인 정보로 구조 서브시스템 에 의해 주석부기된다. 예를 들어, 도 8에서, 노드들 각각은 클래스 또는 품사(POS) 주석부기를 갖 는다. 특히, 도 8에 도시된 예시적인 발화 트리의 경우, 특정 서브트리들 또는 노드들(예를 들어, 노드들 (202A, 202B, 202C, 및 202D))은 동사 노드들이 되도록 주석부기되고, 특정 서브트리들 또는 노드들(예를 들어, 노드들(202E, 202F, 202G, 202H, 202I, 및 202J))은 주어 또는 목적어 노드들이 되도록 주석부기되고, 특정 서 브트리들 또는 노드들(예를 들어, 노드들(202K, 202L, 202M, 202N, 및 202P))은 구조 서브시스템에 의해 수식어 노드들(예를 들어, 주어 수식어 노드들, 목적어 수식어 노드들, 동사 수식어 노드들)이 되도록 주석부기 된다. 이러한 클래스 주석부기들은 도 8에 도시된 예시적인 발화 트리와 같이 발화 트리들로부터 생성되 는 의미 표현들을 비교할 때 의미 검색 서브시스템에 의해 이용된다. 이와 같이, 의미 표현들이 생성되는 발화 트리는 의도 및/또는 엔티티 추출을 위한 기반(예를 들어, 초기 기반)으로서 역할을 한다는 것을 알 수 있다. 도 6을 간략히 참조하면, 언급된 바와 같이, NLU 프레임워크에 의한 의미 검색의 성능은 NLU 프레임워크가 수신된 사용자 발화들의 복수의 대안적인 형태들을 도출하여 의도-엔티티 모델의 샘플 발화들의 복수의 대안적인 형태들과 비교할 수 있게 함으로써 개선될 수 있다. 예를 들어, 특정 실시예들에서, 의미 검 색 서브시스템에 의해 수행되는 의미 검색 동안, 이해 모델의 의미 표현들, 및 잠재적으로 추가 적인 이해 모델들의 의미 표현들을 포함하는 검색 공간이 정의될 수 있다. 추가적으로, 특정 실시예들에서, 이 검색 공간은 검색 중인 사용자 발화의 CCG 형태에 기반하여 반복적으로 전지될 수 있고, 여기서 CCG 형태 는 발화 의미 모델의 의미 표현들의 구조 내에 캡처된다. 특히, 사용자 발화로부터 도출된 복 수의 대안적인 의미 표현들은 검색 공간 내에 어떤 다른 비교가능한 의미 표현들이 존재하는지를 결정하는 데 이용될 수 있고, 여기서 비-비교가능한 의미 표현들은 검색 레이턴시 및 전체 모든 컴퓨팅 자원 이용을 개선 하기 위해 고려로부터 제거될 수 있다. 이와 같이, 발화 의미 모델에서 상이한 CCG 형태들을 갖는 사용자 발화의 복수의 대안적인 의미 표현들을 갖는 것은 의미 검색 동안 검색 공간의 현저히 상이한 전지를 낳을 수 있어서, 검색 공간의 더 포괄적인 의미 검색을 가능하게 한다. 또한, 의미 검색 서브시스템이 발화 의미 모델의 의미 표현들을 이해 모델의 의미 표현들 과 비교하고 있을 때, 의미 표현들(162 및 158)의 복수의 대안적인 형태들을 갖는 것이 또한 유리할 수 있 다. 예를 들어, 특정 실시예들에서, CCG 형태 클래스 데이터베이스(예를 들어, 데이터베이스의 일부)는 다수의 상이한 CCG 형태들(예를 들어, 동사-주도(verb-led) CCG 형태, 명사-주도(noun-led) CCG 형태)을 저장 할 수 있다. 각각의 CCG 형태는 의미 검색 서브시스템이 CCG 형태를 갖는 발화 의미 모델의 의미 표 현들과 동일한 CCG 형태(또는 상이한, 비교가능한 CCG 형태)를 갖는 이해 모델의 의미 표현들 사이의 유사도 스코어를 계산할 수 있게 하는 수학적 함수들의 집합과 연관된다. 또한, 특정 실시예들에서, 의 미 검색 서브시스템은 이러한 수학적 함수들을 이용하여 2개의 비교가능한 의미 표현의 확장되는 수의 노 드들을 반복적으로 비교할 수 있고, 노드들이 고려되는 순서는 또한 의미 표현들의 형태 또는 형상에 의존한다. 이와 같이, 발화 의미 모델에서 상이한 CCG 형태들을 갖는 복수의 대안적인 의미 표현들을 갖는 것은 상이한 수학적 함수들을 이용하여 이해 모델의 상이한 의미 표현들과의 상이한 비교들을 가능하게 하 고, 이는 또한 더 포괄적인 의미 검색을 가능하게 한다. 이상의 내용을 염두에 두고, 도 9는 NLU 프레임워크의 의미 추출 서브시스템이 원래 발화의 재 표현들을 생성한 후, 이러한 재표현들 및 원래 발화에 기반하여 의미 표현들의 세트를 생성하는 프로 세스의 실시예를 나타내는 흐름도이다. 특정 경우들에서, 원래 발화는 수신된 사용자 발화일 수 있고, 의미 표현들의 결과적인 세트는 발화 의미 모델의 의미 표현들이 될 수 있다는 것을 알 수 있다. 다른 경우들에서, 원래 발화는 의도-엔티티 모델의 샘플 발화들 중 하나일 수 있 다. 도 9에 도시된 실시예에서, 프로세스의 일부는 NLU 프레임워크의 의미 추출 서브시스템의 어휘 서브시스템에 의해 수행되는 반면, 다른 부분은 의미 추출 서브시스템의 구조 서브시스템 에 의해 수행된다. 다른 실시예들에서, 프로세스의 단계들은 NLU 프레임워크의 다른 적절한 구성요 소들에 의해 수행될 수 있다. 또한, 프로세스는 도 3, 도 4a 및 도 4b와 관련하여 전술한 바와 같이, 클 라이언트 인스턴스 또는 기업 인스턴스와 연관된 적절한 프로세서(예를 들어, 프로세서(들))에 의 해 실행되고 적절한 메모리(예를 들어, 메모리)에 저장될 수 있다. 도 9에 도시된 실시예의 경우, 프로세스는 NLU 프레임워크의 어휘 서브시스템이 원래 발화(25 2)를 클렌징하는 것(블록 256)으로 시작한다. 예를 들어, 어휘 서브시스템은 발화의 특정 토큰들(예를 들어, 단어들, 구들, 구두점, 이모지들)을 수정하기 위해 데이터베이스에 저장된 규칙들에 액세스하고 이를 적용할 수 있다. 예를 들어, 특정 실시예들에서, 클렌징은 원래 발화로부터 비-텍스트 요소들(예를 들어, 이모티콘들, 이모지들, 구두점)을 제거하는 규칙을 적용하는 것을 수반할 수 있다. 특정 실시예들에서, 클렌징은 발화에서의 오철자들 또는 오타 에러들을 정정하는 것을 수반할 수 있다. 추가적으로, 특정 실시예들 에서, 클렌징은 특정 토큰들을 다른 토큰들로 대체하는 것을 수반할 수 있다. 예를 들어, 어휘 서브시스템 은 모든 엔티티들이 일반 또는 전역 엔티티(예를 들어, \"TIME\", \"COLOR\")를 갖는 시간 또는 컬러를 참조한 다는 규칙을 적용할 수 있다. 도 9에 도시된 실시예에 있어서, 프로세스는 어휘 서브시스템이 원래 발화에 대해 어휘 주입을 수행하는 것(블록 258)으로 계속된다. 어휘 주입은 일반적으로 원래 발화의 복수의 리렌더링을 도입하는 것을 수반한다. 예를 들어, 어구 및/또는 용어는 이해 모델의 어휘 모델에 의해 지시되는 바와 같이, 더 담화(discourse) 적합 구들 및/또는 용어들로 대체될 수 있다. 특정 실시예들에서, 복수의 구들 및/ 또는 용어들이 대체될 수 있고, 이러한 대체들의 다양한 순열들은 원래 발화에 기반하여 발화들의 세트 를 생성하는데 이용된다. 예를 들어, 특정 실시예들에서, 어휘 서브시스템은 상이한 토큰들을 갖는 발화들의 재표현들을 생성하는데 이용될 수 있는 대안적인 어휘를 식별하기 위해 이해 모델의 어휘 모델 에 액세스할 수 있다. 특정 예로서, 실시예에서, 어휘 서브시스템은 \"개발자\"에 대한 동의어가 \"직 원\"인 것으로 결정할 수 있고, 용어 \"개발자\"가 용어 \"직원\"에 의해 대체되는 새로운 발화를 생성할 수 있다. 도 9에 도시된 실시예의 경우, 클렌징 및 어휘 주입 후에, 발화들의 세트는 POS 태깅 및 파싱을 위해 구조 서브시스템에 제공된다. 발화들의 세트는 원래 발화 또는 원래 발화의 클렌징된 버전을 포함할 수 있고, 블록의 어휘 주입을 통해 생성된 임의의 적절한 수의 대안적인 재표현 발화들을 포함할 수 있다 는 것을 알 수 있다. 특정 상황들에서, 블록의 어휘 주입은 원래 발화의 재표현들을 생성하지 않을 수 있고, 따라서, 발화들의 세트는 원래 발화 또는 그 클렌징된 버전만을 포함할 수 있다는 점에 유 의할 수 있다. 다른 실시예들에서, 원래 발화는 블록의 클렌징 또는 블록의 어휘 주입 없이 구 조 서브시스템에 직접 제공될 수 있다. 발화들의 세트의 수신 시에, 구조 서브시스템은 플러그-인들의 세트를 이용하여, 원래 발화 를 나타내는 하나 이상의 의미 표현의 세트를 생성한다(블록 266). 다른 실시예들에서, 플러그-인들 의 세트는 그 대신에 의미 추출 서브시스템 또는 NLU 프레임워크의 비-플러깅가능한 애플리케이 션들 또는 모듈들로서 구현될 수 있다. 그러나, 도시된 구조 서브시스템의 개시된 플러깅가능한 설계는 NLU 프레임워크가 더 큰 유연성을 갖는 것을 가능하게 한다는 것이 현재 인식되고 있다. 예를 들어, 추가 적인 언어들에 대한 지원은 플러그-인들의 세트를 상이한 언어 또는 상이한 도메인에 대해 설계된(예를 들 어, 프로그래밍되고, 훈련된) 다른 세트로 스위칭함으로써 NLU 프레임워크에 추가될 수 있다. 도 9에 도시된 실시예에 있어서, 구조 서브시스템의 플러그-인들의 세트는 품사(POS) 플러그-인 , 정정 플러그-인들, 변동 필터(VF) 플러그-인, 파서 플러그-인, 및 최종 스코어링 및 필 터링(FSF) 플러그-인을 포함한다. 플러그-인들의 기능들은 도 10과 관련하여 더 상세히 논의된다. 일반적으로, POS 플러그-인은 연관된 품사(예를 들어, 동사, 명사, 형용사, 대명사, 부사)로 발화의 각각 의 토큰의 POS 태깅을 수행하도록 훈련되는 ML 기반 구성요소(예를 들어, 피드포워드 인공 신경망)를 포함한다. POS 플러그-인은 발화의 복수의 잠재적인 POS 태깅들뿐만 아니라 발화의 각각의 잠재적인 POS 태깅에 대한 대응하는 신뢰도 스코어들을 출력하도록 설계된다. 정정 플러그-인(들)은 잘못된 것으로 알려진, POS 플 러그-인에 의해 생성된 잠재적인 POS 태깅들을 수정 또는 제거하기 위해 ML 기반 기술들을 적용하거나 규 칙들(예를 들어, 데이터베이스에 저장됨)을 적용하는 POS 정정 플러그-인을 포함한다. VF 플러그-인(27 2)은 POS 플러그-인에 의해 생성된 잠재적인 POS 태깅들의 수학적 비교를 적용하고, 서로 충분히 상이하지 않은 POS 태깅들을 제거한다. 파서 플러그-인은 남아 있는 후보 POS 태깅들 각각에 대한 각각의 의미 표 현뿐만 아니라 파싱 동작에 대한 대응하는 신뢰도 스코어들을 생성하도록 설계 및/또는 훈련되는 규칙 기반 또 는 ML 기반 구성요소(예를 들어, 피드포워드 인공 신경망)를 포함할 수 있다. 정정 플러그-인(들)은 또한 잘못된 것으로 알려진, 파서 플러그-인에 의해 생성된 잠재적인 의미 표현들을 수정 또는 제거하기 위해 ML 기반 기술들을 적용하거나 규칙들(예를 들어, 데이터베이스에 저장됨)을 적용하는 파서 정정 플러그-인 을 포함한다. FSF 플러그-인은 각각의 생성된 의미 표현에 대한 최종 신뢰도 스코어를 결정하고, 그 후 미리 정의된 임계치보다 큰 대응하는 최종 신뢰도 스코어를 갖는 의미 표현들의 최종 세트를 출력한다. 도 10은 NLU 프레임워크의 구조 서브시스템이 발화에 대한 복수의 대안적인 의미 표현들을 생성할 수 있는 프로세스의 실시예를 나타내는 흐름도이다. 이와 같이, 도 10의 프로세스는 도 9의블록에 대응한다. 도 9를 참조하면, 발화는 수신된 사용자 발화, 의도-엔티티 모델의 샘 플 발화들 중 하나, 클렌징(블록 256)으로부터 생성된 발화, 또는 어휘 주입(블록 258)으로부터 생성된 발 화와 같은 발화들의 세트 중 하나일 수 있는 반면, 결과적인 의미 표현들은 원래 발화의 의미 표현들의 세트의 일부 또는 전부일 수 있다는 것을 알 수 있다. 도 10에 도시된 실시예에 있어서, 프로세 스는 도 3, 도 4a 및 도 4b와 관련하여 전술한 바와 같이 클라이언트 인스턴스 또는 기업 인스턴스 와 연관된 적절한 프로세서(예를 들어, 프로세서(들))에 의해 실행되고 적절한 메모리(예를 들어, 메 모리)에 저장될 수 있다. 도 10에 도시된 실시예의 경우, 프로세스는 2개의 스테이지, 즉 POS 태깅 스테이지 및 파스 스테이지 로 분할된다. POS 태깅 스테이지는 구조 서브시스템이 발화의 POS 태깅을 수행(블록 29 0)하여 잠재적인 POS 태깅들의 세트는 물론, 각각의 잠재적인 POS 태깅에 대한 대응하는 신뢰도 스코어들 을 생성하는 것으로 시작한다. 발화에 더하여, POS 플러그-인은 또한 POS 임계값을 수신한다. 예를 들어, POS 플러그-인은 특정 신뢰도 레벨(예로서, 80%)을 나타내는 POS 임계값을 제공받을 수 있으며, 따라서 잠재적인 POS 태깅들의 세트는 POS 임계값 이상인 대응하는 신뢰도 스코어를 갖는 태 깅들만을 포함할 것이다. 다른 실시예들에서, POS 플러그-인은 추가적으로 또는 대안적으로 POS 태깅 한 계값(예로서, 10)을 수신할 수 있으며, 따라서 POS 플러그-인에 의해 생성되는 잠재적인 POS 태깅들의 수 는 POS 태깅 한계값으로 제한될 것이다. 특정 상황들에서, 잠재적인 POS 태깅들의 세트는 단일 POS 태깅 만을 포함할 수 있다는 점에 유의할 수 있다. 도 10에 도시된 실시예에 있어서, 프로세스는 구조 서브시스템이 정정 플러그-인을 이용하여 잠 재적인 POS 태깅들의 세트의 자동 정정(블록 298)을 수행함으로써 잠재적인 POS 태깅들의 정정된 세트 를 생성하는 것으로 계속된다. 예를 들어, 언급된 바와 같이, POS 플러그-인은 ML 기반 구성요소를 포함할 수 있다. 이와 같이, POS 플러그-인은, 예를 들어, 결함있는 훈련 데이터의 결과로서, 훈련 동안 부정확한 POS 태깅을 부주의하게 학습할 수 있다. 따라서, 정정 플러그-인은 결함있는 POS 태깅들이 프로 세스의 남아 있는 단계들로 이월되는 것을 차단하기 위해 세트로부터의 잠재적인 POS 태깅들을 수정 또는 제거하도록 설계된다. 특정 실시예들에서, 정정 플러그-인은 토큰-외관 형태들(예를 들어, 단어-외 관 형태들)이 그 토큰에 대한 선택된 POS 태그와 매칭하는 것을 보장하기 위해 외부 어휘 데이터베이스(예를 들 어, 데이터베이스에 저장되고, 이해 모델의 일부로서 저장됨)를 참고할 수 있다. 이러한 유형의 정 정은 POS 플러그-인이 보조 단어(sub-word) 학습 모델들(예를 들어, 문자-임베딩 기반 모델들, 형태소 모 델들 등)에 기반하여 훈련될 때 특히 효과적일 수 있다는 것이 이해될 수 있다. 다른 실시예들에서, 정정 플러 그-인은 특정 토큰들을 특정 POS 태그들과 연관시키도록 훈련되는 ML 기반 구성요소(예를 들어, 인공 신경 망)를 포함할 수 있다. 이러한 실시예들에 있어서, 정정 플러그-인은 세트 내의 잠재적인 POS 태깅 의 각각의 태그에 대한 태깅 스코어를 결정하고, (예를 들어, 데이터베이스에 저장된) 미리 결정된 태깅 임계값 미만인 태깅 스코어를 갖는 모든 잠재적인 POS 태깅들을 제거할 수 있다. 예를 들어, 특정 실시예들에서, 정정 플러그-인은 규칙 기반 정정 기술을 구현할 수 있다. 이러한 실시예 들에 있어서, 정정 플러그-인은 잠재적인 POS 태깅들의 세트를 정정하기 위해 개발자에 의해 정의되 고 데이터베이스에 저장된 규칙들에 액세스하여 이들을 적용할 수 있다. 예를 들어, POS 플러그-인 의 ML 기반 구성요소는 훈련 동안 토큰 \"정지\"가 구두점을 나타내고 동사 또는 명사를 나타내지 않는다고 잘못 학습할 수 있다. 이와 같이, 개발자는 이 부정확한 POS 태깅을 포함하는 세트로부터 잠재적인 POS 태깅들을 제거하거나, 또는 잘못된 POS 태깅을 정확한 POS 태깅으로 대체하기 위해 세트로부터의 잠재적인 POS 태깅들을 수정하기 위해 정정 플러그-인에 의해 적용될 하나 이상의 규칙을 정의할 수 있다. 특 정 실시예들에서, 정정 플러그-인은 그 대신에 잠재적인 POS 태깅들의 세트 내의 엔트리들을 제거하 거나 수정하기 위해 이러한 기술들의 조합을 이용할 수 있다. 도 10에 도시된 실시예의 경우, 프로세스의 POS 태깅 스테이지는 구조 서브시스템이 VF 플러그- 인을 이용하여 잠재적인 POS 태깅들의 정정된 세트의 변동성 필터링(블록 302)을 수행함으로써 잠재 적인 POS 태깅들의 최종 후보 세트를 생성하는 것으로 종료된다. 잠재적인 POS 태깅들의 정정된 세트 에 더하여, VF 플러그-인은 또한, 정정된 세트 내의 잠재적인 POS 태깅들이 서로 얼마나 상이해 야 하는지를 정의하는 변동 임계값을 수신한다. 변동성 필터링의 목적은, 정정된 세트 내의 다른 잠 재적인 POS 태깅들과 너무 유사한 것으로 고려되고, 따라서 추구할 컴퓨팅 자원 소모를 정당화할 충분히 뚜렷한 경로를 나타내지 않는 잠재적인 POS 태깅들을 제거함으로써 프로세스의 효율성뿐만 아니라 후속 의미 검색 을 개선하는 것이다.변동성 필터링은 다수의 상이한 방식으로 달성될 수 있다. 일반적으로, 태깅 거리 또는 변동성 함수는, 정정된 세트 내의 상이한 2개의 잠재적인 POS 태깅이 서로 얼마나 상이한지를 결정하는데 이용된다. 변동성 필터 링은 의미 검색이 추가적인 컴퓨팅 자원들을 소비하여 최소한의 그리고/또는 허울뿐인 차이들만이 있는 의미 표 현들로 이어지는 잠재적인 POS 태깅들 사이의 \"피상적인\" 차이들을 탐색하는 것을 차단하거나 방지한다. 예를 들어, 변동성 스코어는 잠재적인 POS 태깅들의 정정된 세트 내의 임의의 2개의 엔트리에 대해 계산될 수 있고, 변동성 스코어가 변동 임계치 미만일 때, 잠재적인 POS 태깅들 중 하나는 충분히 중복적인 것으로 고려되고 잠재적인 POS 태깅들의 최종 후보 세트에 포함되지 않는다. 이와 같이, 잠재적인 POS 태깅들의 수가 비교적 작을 때(예를 들어, 10 이하일 때), 정정된 세트 내의 각각의 잠재적인 POS 태깅은 이러한 방 식으로 비교될 수 있다. 그러나, 더 많은 수의 잠재적인 POS 태깅들이 POS 태깅들의 정정된 세트 내에 존 재하는 실시예들의 경우, 클러스터링 기술들이 적용될 수 있다. 예를 들어, 태깅 거리 함수는 잠재적인 POS 태 깅들이 이들 태깅 거리들에 기반하여 (예를 들어, 클러스터들 사이의 거리를 최대화함으로써, 미리 정의된 수의 클러스터들을 형성함으로써) 그룹들로 클러스터링될 수 있도록 잠재적인 POS 태깅들 사이의 태깅 거리를 결정하 는데 이용될 수 있다. 후속하여, 대표적 잠재적인 POS 태깅이 각각의 그룹(예를 들어, 각각의 클러스터의 중심 의 잠재적인 POS 태깅)으로부터 선택되고 프로세스의 다음 단계로 진행한다. 본 개시내용에 따라, 다른 변동성 필터링 기술들이 이용될 수 있다는 것을 이해할 수 있다. POS 태깅들의 비교적 작은 정정된 세트를 갖는 일 예에서, VF 플러그-인은 다이버시티 기반 포함 기 술을 이용할 수 있다. 이 예에서, 발화는 \"내 패스워드를 변경한다\"일 수 있다. 블록에서, POS 플 러그-인은 발화의 토큰들이 순서대로 동사, 형용사 및 명사의 명령 형태; 또는 동사, 형용사 및 명사; 또는 명사, 형용사 및 명사; 또는 동사, 대명사 및 명사인 것을 나타내는 잠재적인 POS 태깅 들의 세트를 결정할 수 있다. 블록에서의 정정 후에, VF 플러그-인은 잠재적인 POS 태깅들의 정정된 세트를 수신하고, 잠재적인 POS 태깅들이 서로 얼마나 상이한지를 결정하기 위해 변동성 함수를 적 용한다. 이 예에서, VF 플러그-인은 잠재적인 POS 태깅들의 정정된 세트 내의 제1 엔트리를 고려함 으로써 시작한다. VF 플러그-인은 비교를 위한 기준이 없기 때문에, 제1 엔트리가 충분히 상이하고 잠재 적인 POS 태깅들의 최종 후보 세트에 포함되어야 한다고 결정한다. 다음으로, VF 플러그-인은 변동 성 함수를 이용하여 제1 엔트리와 비교함으로써 잠재적인 POS 태깅들의 정정된 세트 내의 제2 엔트리를 고 려할 수 있다. 예시적인 변동성 함수는 가중된 평균일 수 있다. 이 예에서, 제1 및 제2 엔트리들이 비교될 때, 제1 엔트리의 제1 태그(예를 들어, 동사의 명령 형태)와 제2 엔트리의 제1 태그(예를 들어, 동사)가 비교된 다. 상이한 태그 비교들에 대한 차이 값들은 규칙들의 일부로서 데이터베이스에 저장될 수 있다. 예를 들어, 데이터베이스 내에서, 동사-동사 비교, 명사-명사 비교, 형용사-형용사 등에 할당된 차이 값은 0일 수 있고; 명령 형태의 동사-동사 비교에 할당된 차이 값은 0보다 약간 클 수 있고(예를 들어, 0.1); 동사- 명사 비교, 동사-형용사, 명사-형용사 등에 할당된 차이 값은 1일 수 있으며, 다른 것들에 대해서도 그러하다. 특정 실시예들에서, 데이터베이스는, 특정 POS 태그들(예를 들어, 동사들)이 다른 POS 태그들(예를 들어, 명사들, 대명사들)보다 변동성 함수의 출력에 더 크게 기여하도록, 상이한 POS 태그들에 대한 가중 값들을 추가 로 저장할 수 있다. 이 예에서, POS 태그들의 가중치들은 동등하다. 이와 같이, 변동성 함수는 제1 및 제2 엔 트리들 사이의 변동성 스코어를 계산하고(예를 들어, (제1 태그들 사이의 차이에 대한 0.1 + 제2 태그들 사이의 차이에 대한 0 + 제3 태그들 사이의 차이에 대한 0)/(비교된 3개의 태그) = 0.03), 그 후 이 변동성 스코어를 변동 임계값(예를 들어, 0.3)과 비교할 수 있다. 이 변동성 스코어가 변동 임계값 미만이기 때문에, 제2 엔트리는 POS 태깅들의 최종 후보 세트에 포함되지 않는다. 이 프로세스는 잠재적인 POS 태깅들의 정 정된 세트 내의 제3 엔트리가 제1 엔트리와 비교되는 것(예를 들어, (제1 태그들 사이의 차이에 대한 1 + 제2 태그들 사이의 차이에 대한 0 + 제3 태그들 사이의 차이에 대한 0)/(비교된 3개의 태그) = 0.3, 이는 0.3의 변동 임계값에 있음)으로 계속되고, 제3 엔트리는 잠재적인 POS 태깅들의 최종 후보 세트에 포함된다. 후 속하여, 잠재적인 POS 태깅들의 정정된 세트 내의 제4 엔트리는 제1 엔트리와 비교되고(예를 들어, (제1 태그들 사이의 차이에 대한 0.1 + 제2 태그들 사이의 차이에 대한 1 + 제3 태그들 사이의 차이에 대한 0)/(비교 된 3개의 태그) = 0.33, 이는 0.3의 변동 임계값보다 큼), 또한 제3 엔트리와 비교되고(예를 들어, (제1 태그들 사이의 차이에 대한 1 + 제2 태그들 사이의 차이에 대한 1 + 제3 태그들 사이의 차이에 대한 0)/(비교된 3개의 태그) = 0.66, 이는 0.3의 변동 임계값보다 큼), 또한 프로세스에서 이월되는 잠재적인 POS 태깅들의 최종 후보 세트에 포함된다. 도 10에 도시된 실시예의 경우, 파스 스테이지는 구조 서브시스템이 파서 플러그-인을 이용하여 파스 추론을 수행함으로써(블록 308) 잠재적인 POS 태깅들의 최종 후보 세트로부터의 잠재적인 의미 표현 들의 세트뿐만 아니라 그 세트 내의 각각의 잠재적인 의미 표현의 파싱을 위한 대응하는 신뢰도 스코어를 생성하는 것으로 시작한다. 잠재적인 POS 태깅들의 최종 후보 세트에 더하여, POS 플러그-인 은 또한 데이터베이스에 저장될 수 있는 파스 임계값을 수신한다. 예를 들어, 파서 플러그-인 은 특정 신뢰도 레벨(예를 들어, 80%)을 나타내는 파스 임계값을 제공받을 수 있고, 따라서, 잠재적 인 의미 표현들의 세트는 파스 임계값 이상인 대응하는 신뢰도 스코어를 갖는 의미 표현들만을 포함 할 것이다. 특정 경우들에서, 파서 플러그-인은 특정 잠재적인 POS 태깅들에 대한 의미 표현을 생성하지 못할 수 있다는 점에 유의할 수 있다. 특정 실시예들에서, 프로세스는 최종 스코어링 및 필터링이 수행되기 전에 잠재적인 의미 표현들의 세트 내의 엔트리들을 수정하거나 제거하기 위한 제2 자동 정정 단계(블록 315)를 포함할 수 있다는 것을 알 수 있다. 예를 들어, 언급된 바와 같이, 파서 플러그-인은 ML 기반 구성요소를 포함할 수 있다. 이와 같 이, 파서 플러그-인은 예를 들어, 결함있는 훈련 데이터의 결과로서, 훈련 동안 부정확한 파스 트리 구조 생성을 부주의하게 학습할 수 있다. 따라서, 특정 실시예들에서, 구조 서브시스템은 결함있는 의미 표현 들이 프로세스의 남아 있는 단계들로 이월되는 것을 차단하기 위해 세트로부터 잠재적인 의미 표현들 을 수정하거나 제거하도록 설계된 파서 정정 플러그-인을 포함할 수 있다. 특정 실시예들에서, 이 파서 정정 플러그-인은 특정 POS 태깅들을 특정 파스 트리 구조들과 연관시키도록 훈련되는 ML 기반 구성요소(예를 들어, 인공 신경망)를 포함할 수 있다. 다른 실시예들에서, 파서 정정 플러그-인은 정정 플러그-인에 대해 논의 된 바와 같이, 규칙 기반 정정 기술, 또는 규칙 기반 및 ML 기반 기술들의 조합을 구현할 수 있다. 도 10에 도시된 실시예의 경우, 프로세스의 파스 스테이지는 구조 서브시스템이 FSF 플러그-인 을 이용하여 블록에서 파서 플러그-인에 의해 생성된 잠재적인 의미 표현들의 세트의 최종 스코어링 및 필터링(블록 316)을 수행하는 것으로 종료된다. 예를 들어, 도 10에 예시된 바와 같이, 특정 실시 예들에서, FSF 플러그-인은 파서 플러그-인에 의해 생성된 잠재적인 의미 표현들의 세트, 잠재 적인 의미 표현들 각각에 대한 대응하는 신뢰도 스코어들, 및 잠재적인 의미 표현들의 세트를 생성하 는데 이용된 잠재적인 POS 태깅들에 대한 대응하는 신뢰도 스코어들을 수신한다. 또한, FSF 플러그-인 은 또한, 데이터베이스에 저장될 수 있는 FSF 임계값을 수신한다. FSF 플러그-인은 이들 신뢰도 값들에 기반하여 잠재적인 의미 표현들의 세트 내의 각각의 엔트리에 대한 최종(예를 들어, 전체, 누적) 스코어를 계산하는 최종 스코어링 함수를 정의하고, FSF 임계값 이상인 최종 스코어를 갖는 의미 표 현들만을 진행시킨다. 상이한 실시예들에서, FSF 플러그-인의 최종 스코어링 함수는 상이한 방식들로 POS 태깅으로부터의 신뢰도 스코어들 및 파싱으로부터의 신뢰도 스코어를 조합할 수 있다. 예를 들어, 특정 실시예들에서, 최종 스코어링 함수는 신뢰도 스코어와 신뢰도 스코어를 곱셈 및/또는 합산할 수 있다. 특정 실시예들에 서, 이 곱셈 및/또는 합산 프로세스는 최종 스코어들에 대한 POS 태깅으로부터의 신뢰도 스코어들 또는 파 싱으로부터의 신뢰도 스코어들의 영향을 증가시키기 위해 가중될 수 있다. 특정 예로서, 실시예에서, 잠 재적인 의미 표현들의 세트 내의 의미 표현의 대응하는 최종 스코어는 POS 태깅으로부터의 신뢰도 스코어 에 파싱으로부터의 신뢰도 스코어를 더한 것의 5배일 수 있다. 다른 실시예들에서, 신뢰도 스코어들 (294 및 312)은 가중된 평균으로서 조합될 수 있고, 각각의 신뢰도 스코어에 대한 상대 가중치들은 데이터베이 스 내에 미리 정의될 수 있다. 도 11은 원래 발화가 도 9 및 도 10과 관련하여 전술한 바와 같이, 어휘 서브시스템 및 구조 서브시 스템에 의해 최종 후보 POS 태깅들의 세트로 재표현되는 프로세스의 실시예를 예시하는 흐름도 이다. 전술한 바와 같이, 수신된 사용자 발화 또는 의도-엔티티 모델의 샘플 발화들 중 하나일 수 있는 원래 발화는 어휘 주입을 위해 어휘 서브시스템에 제공된다. 특정 실시예들에서, 원래 발화는 먼저 어휘 주입 전에 클렌징 단계를 거칠 수 있다. 어휘 주입의 결과로서, 원래 발화 및 대안적인 어구 및/또는 용어를 갖는 원래 발화의 재표현들인 추가 발화들(예를 들어, 발화(32 4))을 포함하는 발화들의 세트가 생성된다. 도 11에 도시된 실시예를 계속 참조하면, 발화들의 세트의 각각의 발화는 각각의 발화에 대한 잠재적인 POS 태깅들의 세트들을 생성하기 위해 POS 태깅을 위해 POS 플러그-인에 제공된다. 도시된 바 와 같이, POS 플러그-인은 발화들의 세트의 각각의 발화에 대한 0개, 1개 또는 복수의 POS 태깅을 생 성할 수 있다. 후속하여, 잠재적인 POS 태깅들의 세트의 잠재적인 POS 태깅들 각각은 자동 정정을 위해 POS 정정 플러그-인(270A)에 제공된다. 이 예에서, 자동 정정 동안, POS 정정 플러그-인(270A)은 잘 못된 것으로 알려진 특정 잠재적인 POS 태깅들을 잠재적인 POS 태깅들의 세트로부터 제거하여 잠재적인POS 태깅들의 정정된 세트들을 생성한다. 도 11에 도시된 실시예를 계속 참조하면, 자동 정정 후에, 잠재적인 POS 태깅들의 세트들은 변동성 필터링을 위해 VF 플러그-인에 제공된다. 괄호 묶음에 의해 표시된 바와 같이, VF 플러그-인 은 잠재적인 POS 태깅들의 모든 정정된 세트들에 걸쳐 잠재적인 POS 태깅들을 비교한다. 이 설계는 제1 발화(예를 들어, 원래 발화)에 대해 생성된 잠재적인 POS 태깅이 발화들의 세트의 제2 발화(32 4)에 대해 생성된 잠재적인 POS 태깅과 실질적으로 유사할 수 있다는 현재의 인식에 기반한다. 이와 같이, 특 정 실시예들에서, VF 플러그-인은 전술한 바와 같이 변동성 또는 태깅 거리 함수를 적용하여, 잠재적인 POS 태깅들의 모든 정정된 세트들에 걸쳐 잠재적인 POS 태깅들을 제거하고, 최종 후보 POS 태깅들의 세트 를 생성한다는 것을 알 수 있다. 도 12는 도 11의 프로세스에 의해 생성된 최종 후보 POS 태깅들의 세트가 도 10과 관련하여 전술한 바와 같이 구조 서브시스템에 의해 원래 발화의 의미 표현들의 세트로 변환되는 프로세스 의 실시예를 예시하는 흐름도이다. 최종 후보 POS 태깅들의 세트 내의 각각의 엔트리는 파스 추론을 위해 파서 플러그-인에 제공되고, 파서 플러그-인은 세트 내의 각각의 엔트리에 대한 각각의 잠 재적인 의미 표현을 생성한다. 후속하여, 의미 표현들 각각은 자동 정정을 위해 파스 정정 플 러그-인(270B)에 제공된다. 이 예에서, 파스 자동 정정 동안, 파스 정정 플러그-인(270B)은 잘못된 것으 로 알려진 특정 잠재적인 의미 표현들을 수정 또는 제거하여 정정된 잠재적인 의미 표현들을 생성한 다. 예를 들어, 파스 자동 정정 동안, 파스 정정 플러그-인(270B)은 잠재적인 의미 표현들에서 부정 확한 노드-노드 파스 링크들(예를 들어, 주어 노드에 잘못 링크하고 있는 직접 목적어 노드), 부정확한 노드 POS/링크 유형 조합들(예를 들어, 동사인 것으로 POS 태깅되는 노드를 포인팅하는 직접 목적어 링크 유형) 등을 검출하고, 정정된 잠재적인 의미 표현들에 의해 반영되는 바와 같이 이러한 부정확한 구조들을 제거 또는 수정할 수 있다. 논의된 바와 같이, 각각의 잠재적인 의미 표현은, 각각의 잠재적인 의미 표현에 대해, 파스 추론 동안 파서 플러그-인에 의해 결정된 대응하는 신뢰도 스코어들뿐만 아니라, POS 태깅 동안 POS 플러그-인에 의해 결정된 대응하는 신뢰도 스코어들과 함께, FSF 플러그-인에 제공된다. FSF 플러그 -인은 각각의 잠재적인 의미 표현들에 대한 각각의 최종 스코어를 결정하기 위해, 위에서 논의된 바 와 같이, 이들 신뢰도 스코어들을 조합한다. 그 후, FSF 플러그-인은 최종 스코어 필터 동작을 수행 하고, 여기서 FSF 임계치 미만의 최종 스코어를 갖는 각각의 잠재적인 의미 표현은 의미 표현들의 최 종 세트에 포함되지 않는다. 이와 같이, 최종 출력은 원래 발화를 나타내는 의미 표현들의 세트 이다. 위에서 언급된 바와 같이, 원래 발화가 수신된 사용자 발화인지 또는 의도-엔티티 모델 의 샘플 발화인지에 관계없이, 의미 표현들의 최종 세트가 원래 발화의 복수의 재표현들 및 형태들을 포함하기 때문에, 의미 검색(의도 추론) 동안 매치를 찾는 기회들이 개선된다. 또한, 원래 발화 의 잠재적으로 잘못되고 실질적으로 중복된 형태들이 의미 표현들의 최종 세트를 생성할 때 고려로부 터 제거되기 때문에, 이들 형태들은 의미 검색에 통합되지 않아서, 의미 검색의 효율 및 NLU 프레임워크의 동작 을 개선한다. 본 개시내용의 기술적 효과들은, 가상 에이전트(예를 들어, 채팅 에이전트)에 의해 수신된 요청들 등의 사용자 발화들로부터 의미를 추출할 수 있고 이들 사용자 발화들에 적절히 응답할 수 있는 에이전트 자동화 프레임워크 를 제공하는 것을 포함한다. 또한, 본 실시예는 주어진 자연어 발화에 대한 복수의 대안적인 의미 표현(예를 들어, 발화 트리)을 검출할 수 있는 구조 서브시스템을 갖는 NLU 프레임워크를 제공한다. 개시된 구조 서브시 스템은, 발화의 형태 또는 형상의 상이한 패싯들을 검출하는 ML 기반 및 규칙 기반 기술들의 결과들에 대해 일 련의 정밀화를 적용함으로써 이들 복수의 의미 표현을 생성한다. 개시된 구조 서브시스템은, 의미 검색 동안 적절한 고려가 주어져야 하는 복수의 가능한 형태-도출들로서 고려함으로써 자연어 요청들의 개선된 의도 추론 을 가능하게 하면서, 고려로부터 잘못된 또는 사실상 중복된 형태-도출들을 효과적으로 전지한다. 이와 같이, 개시된 구조 서브시스템은 NLU 프레임워크의 성능, 도메인 특정성, 및/또는 효율을 개선한다. 위에서 설명된 특정 실시예들은 예로서 도시되었고, 이러한 실시예들은 다양한 수정들 및 대안적인 형태들이 가 능할 수 있다는 점이 이해되어야 한다. 청구항들은 개시된 특정 형태들로 제한되는 것이 아니라, 오히려 본 개 시내용의 사상 및 범위 내에 드는 모든 수정들, 등가물들, 및 대안들을 포괄하도록 의도된다는 점이 추가로 이 해되어야 한다. 본 명세서에 제시되고 청구되는 기술들은 본 기술 분야를 명백하게 개선하고, 따라서 추상적이거나, 무형적이거 나, 순수하게 이론적이지 않은 실제적인 성질의 물질적 대상들 및 구체적인 예들에 참조되고 적용된다. 또한, 본 명세서의 끝에 첨부되는 임의의 청구항들이 \"...[기능]을 [수행]하기 위한 수단\" 또는 \"...[기능]을 [수행] 하기 위한 단계\"로서 지정되는 하나 이상의 요소를 포함하는 경우, 이러한 요소들은 35 U.S.C. 112(f) 하에서 해석되는 것으로 의도된다. 그러나, 임의의 다른 방식으로 지정되는 요소들을 포함하는 임의의 청구항들에 대 해, 이러한 요소들은 35 U.S.C. 112(f) 하에서 해석되지 않는 것으로 의도된다."}
{"patent_id": "10-2022-7003161", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시내용의 다양한 양태들은 다음의 상세한 설명을 읽고 도면들을 참조함으로써 더 잘 이해될 수 있다. 도 1은 본 기술의 실시예들이 동작할 수 있는 클라우드 컴퓨팅 시스템의 실시예의 블록도이다. 도 2는 본 기술의 실시예들이 동작할 수 있는 멀티-인스턴스 클라우드 아키텍처의 실시예의 블록도이다. 도 3은 본 기술의 양태들에 따른, 도 1 또는 도 2에 존재할 수 있는 컴퓨팅 시스템에서 이용되는 컴퓨팅 디바이 스의 블록도이다. 도 4a는 본 기술의 양태들에 따른, 클라우드 컴퓨팅 시스템에 의해 호스팅되는 클라이언트 인스턴스의 일부인 NLU 프레임워크를 포함하는 에이전트 자동화 프레임워크의 실시예를 예시하는 개략도이다. 도 4b는 본 기술의 양태들에 따른, NLU 프레임워크의 부분들이 클라우드 컴퓨팅 시스템에 의해 호스팅되는 기업 인스턴스의 일부인 에이전트 자동화 프레임워크의 대안적인 실시예를 예시하는 개략도이다. 도 5는 본 기술의 양태들에 따른, NLU 프레임워크 및 거동 엔진 프레임워크를 포함하는 에이전트 자동화 프레임 워크가 사용자 발화로부터 의도들 및/또는 엔티티들을 추출하고 사용자 발화에 응답하는 프로세스의 실시예를 예시하는 흐름도이다. 도 6은 본 기술의 양태들에 따른, 의미 추출 서브시스템 및 의미 검색 서브시스템을 포함하는 NLU 프레임워크의 실시예를 예시하는 블록도이며, 의미 추출 서브시스템은 수신된 사용자 발화로부터 의미 표현들을 생성하여 발 화 의미 모델을 산출하고, 이해 모델의 샘플 발화들로부터 의미 표현들을 생성하여 이해 모델을 산출하고, 의미 검색 서브시스템은 발화 의미 모델의 의미 표현들을 이해 모델의 의미 표현들과 비교하여 수신된 사용자 발화로 부터 아티팩트들(예를 들어, 의도들 및 엔티티들)을 추출한다. 도 7은 본 기술의 양태들에 따른, 발화에 대한 의미 표현을 생성하기 위해, NLU 프레임워크의 어휘 서브시스템, 구조 서브시스템, 및 운율 서브시스템 내의 규칙 기반 방법들 및 기계 학습(ML) 기반 방법들의 조합을 이용하는 의미 추출 서브시스템의 실시예를 예시하는 블록도이다. 도 8은 본 기술의 양태들에 따른, 발화에 대해 생성된 발화 트리의 예를 나타내는 도면이다. 도 9는 본 기술의 양태들에 따른, 어휘 서브시스템 및 구조 서브시스템을 포함하는 NLU 프레임워크의 의미 추출 서브시스템이 발화의 재표현들 및 의미 표현들을 생성하는 프로세스의 실시예를 예시하는 흐름도이다. 도 10은 본 기술의 양태들에 따른, NLU 프레임워크의 구조 서브시스템이 발화에 대한 상이한 의미 표현들을 생 성하는 프로세스의 실시예를 예시하는 흐름도이다. 도 11은 본 기술의 양태들에 따른, 원래 발화가 어휘 서브시스템 및 구조 서브시스템에 의해 최종 후보 (nominee) POS 태깅들의 세트로 재표현되는 프로세스의 실시예를 예시하는 흐름도이다. 도 12는 본 기술의 양태들에 따른, 도 11에서 생성된 최종 후보 POS 태깅들의 세트가 구조 서브시스템에 의해 원래 발화의 의미 표현들의 세트로 변환되는 프로세스의 실시예를 예시하는 흐름도이다."}
