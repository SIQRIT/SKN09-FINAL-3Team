{"patent_id": "10-2022-0176766", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0094468", "출원번호": "10-2022-0176766", "발명의 명칭": "컨볼루션 연산 하드웨어에서 적응적으로 양자화 팩터를 결정하는 방법", "출원인": "한국전자기술연구원", "발명자": "홍윤표"}}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "IFM(Input Feature Map)이 저장되는 IFM 버퍼;WT(Weight)가 저장되는 WT 버퍼;IFM 버퍼에 저장된 IFM과 WT 버퍼에 저장된 WT를 곱해서 Partial Sum들을 계산하는 연산기;Partial Sum들이 각각이 누적되어 저장되는 OFM 버퍼;연산기에서 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 누산기;를 포함하고,누산기는,Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,자료형은,고정 소수점 자료형인 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,누산기는,OFM 버퍼에 저장된 Partial Sum들을 읽어들여, 연산기에서 계산되는 Partial Sum들을 각각 더하여 OFM 버퍼에다시 기록하는 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,누산기는,오버플로우가 발생한 픽셀부터 양자화 팩터를 증가시켜, Partial Sum들을 누적 연산하는 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "에 있어서,양자화 팩터가 증가되면, 고정 소수점 자료형에서 정수부의 비트수가 1개 증가하고, 소수부의 비트수는 1개 감소하는 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 5에 있어서,누산기는,마지막 채널에서 오버플로우가 발생하면, 마지막 채널에 대한 Partial Sum들의 누적 연산이 완료된 후에, 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해 양자화 팩터를 증가시키는 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서,컨볼루션 연산 하드웨어는,CNN(Convolutional Neural Network)의 컨볼루션 연산을 수행하는 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 1에 있어서,연산기는,다수의 PE(Processing Element)들이 Systolic Array로 배열된 구조인 것을 특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "IFM(Input Feature Map)을 저장하는 하는 단계;WT(Weight)를 저장하는 단계;저장된 IFM과 저장된 WT를 곱해서 Partial Sum들을 계산하는 단계;계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 단계;를 포함하고,기록 단계는,Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을특징으로 하는 컨볼루션 연산 방법."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "IFM(Input Feature Map)과 WT(Weight)를 곱해서 Partial Sum들을 계산하는 연산기;Partial Sum들이 각각이 누적되어 저장되는 OFM 버퍼;공개특허 10-2024-0094468-4-연산기에서 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 누산기;를 포함하고,누산기는,Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을특징으로 하는 컨볼루션 연산 하드웨어."}
{"patent_id": "10-2022-0176766", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "IFM(Input Feature Map)과 WT(Weight)를 곱해서 Partial Sum들을 계산하는 단계; 및계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 단계;를 포함하고,기록 단계는,Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을특징으로 하는 컨볼루션 연산 방법."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "컨볼루션 연산 하드웨어에서 적응적으로 양자화 팩터를 결정하는 방법이 제공된다. 본 발명의 실시예에 따른 컨 볼루션 연산 하드웨어는 IFM이 저장되는 IFM 버퍼, WT가 저장되는 WT 버퍼, IFM 버퍼에 저장된 IFM과 WT 버퍼에 저장된 WT를 곱해서 Partial Sum들을 계산하는 연산기, Partial Sum들이 각각이 누적되어 저장되는 OFM 버퍼, 연산기에서 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 누산기를 포함하고, 누산기는 Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면 양자화 팩터를 조정할 수 있다. 이에 의 해, 제한된 저장 공간에 고정 소수점 자료형을 누적 연산하여야 하는 컨볼루션 연산 하드웨어에서 양자화 팩터를 적응적으로 결정함으로써, 양자화로 인한 정보 손실을 최소화할 수 있게 된다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 네트워크를 위한 컨볼루션 연산 하드웨어에 관한 것으로, 더욱 상세하게는 컨볼루션 연산 하드웨어에서 양자화(Quantization)을 효율적으로 하는 방법에 관한 것이다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "실수를 표현하는 자료형으로 부동 소수점(floating point) 자료형과 고정 소수점(fixed point) 자료형이 널리 활용되고 있다. 부동 소수점 자료형은 컴퓨터가 실수를 저장하는 방식으로, C 언어에서 사용되는 float, double 형 등이 이에 해당한다. 도 1에 도시된 바와 같이 부동 소수점 자료형은 부호 비트(signed bit), 지수부(exponent), 가수부 (fraction)로 구성되는데, 이는 다음의 실수를 표현한다. Out = fraction×2exponent 고정 소수점 자료형은 소형 하드웨어에서 실수를 저장할 때 사용하는 방식으로, Integer 타입의 데이터 형태에 소수점의 위치를 미리 정해두는 방식을 말한다. 도 2에 예시한 것은 고정 소수점의 위치를 8로 정해둔 것이다. 고정 소수점의 위치는 정수부와 소수부의 경계이다. 도 2에서 정수부는 7(=00001112)이고, 소수부는 0.625(=101000002 = 0.5 * 1 + 0.25 * 0 + 0.125 * 1)이므로 제시된 고정 소수점 자료형은 7.625를 나타낸다. 고정 소수점 자료형에서 양자화(Quantization)를 하는 것은 고정 소수점의 위치를 변경하는 것으로 이해하면 된 다. 고정 소수점 위치에 의해 해당 자료형이 표현할 수 있는 실수의 범위와 분해능이 결정된다. 도 2에 제시된 자료형의 경우 고정 소수점의 위치가 8이므로, -128 ~ 127.996094 까지 표현 가능하고, 값이 한 단계씩 증가할 때마다 실제 실수 값은 약 0.003906 씩 증가한다. 127.996094 이상의 값을 표현해야 한다면, 고 정 소수점의 위치를 7로 변경시켜, -256 ~ 255.99xx 까지 표현 가능하도록 하여야 한다. 이와 같이 고정 소수점의 위치를 소수부 쪽으로 이동시키면(즉 정수부의 비트수를 증가시키고, 소수부의 비트수 를 감소시키면), 표현할 수 있는 범위는 증가하지만 양자화 스텝 사이즈는 증가하여 분해능이 낮아진다. 반면 고정 소수점의 위치를 정수부 쪽으로 이동시키면(즉 정수부의 비트수를 감소시키고, 소수부의 비트수를 증 가시키면), 표현할 수 있는 범위는 감소하지만 양자화 스텝 사이즈는 감소하여 분해능이 높아진다. 따라서 고정 소수점의 위치를 결정하는 양자화 팩터에 의해 트레이드 오프 관계에 있는 자료형의 표현 범위와 분해능을 효과적으로 결정하는 것이 중요한데, 메모리의 사이즈가 제한되어 있는 소형 하드웨어가 다량의 누적연산을 하는 경우에는 더욱 그러하다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로서, 본 발명의 목적은, 제한된 저장 공간에 고 정 소수점 자료형을 누적 연산하여야 하는 컨볼루션 연산 하드웨어에서 양자화로 인한 정보 손실을 최소화할 수 있는 적응적 양자화 팩터 결정 방법 및 이를 적용한 컨볼루션 연산 하드웨어를 제공함에 있다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른 컨볼루션 연산 하드웨어는 IFM(Input Feature Map)이 저장되는 IFM 버퍼; WT(Weight)가 저장되는 WT 버퍼; IFM 버퍼에 저장된 IFM과 WT 버퍼에 저장된 WT를 곱해서 Partial Sum들을 계산하는 연산기; Partial Sum들이 각각이 누적되어 저장되는 OFM 버퍼; 연산기에서 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 누산기;를 포함하고, 누산기는, Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정할 수 있다. 자료형은, 고정 소수점 자료형일 수 있다. 누산기는, OFM 버퍼에 저장된 Partial Sum들을 읽어들여, 연산기에서 계산되는 Partial Sum들을 각각 더하여 OFM 버퍼에 다시 기록할 수 있다. 누산기는, 오버플로우가 발생한 픽셀부터 양자화 팩터를 증가시켜, Partial Sum들을 누적 연산할 수 있다. 누산기는, 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해서는, 다음 채널에 대한 Partial Sum들의 누적 연산 시에 양자화 팩터를 증가시킬 수 있다. 양자화 팩터가 증가되면, 고정 소수점 자료형에서 정수부의 비트수가 1개 증가하고, 소수부의 비트수는 1개 감 소할 수 있다. 누산기는, 마지막 채널에서 오버플로우가 발생하면, 마지막 채널에 대한 Partial Sum들의 누적 연산이 완료된 후에, 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해 양자화 팩터를 증가시킬 수 있다. 컨볼루션 연산 하드웨어는, CNN(Convolutional Neural Network)의 컨볼루션 연산을 수행할 수 있다. 연산기는, 다수의 PE(Processing Element)들이 Systolic Array로 배열된 구조일 수 있다. 본 발명의 다른 측면에 따르면, IFM(Input Feature Map)을 저장하는 하는 단계; WT(Weight)를 저장하는 단계; 저장된 IFM과 저장된 WT를 곱해서 Partial Sum들을 계산하는 단계; 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 단계;를 포함하고, 기록 단계는, Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을 특징으로 하는 컨볼루션 연산 방법이 제공된다. 본 발명의 또다른 측면에 따르면, IFM(Input Feature Map)과 WT(Weight)를 곱해서 Partial Sum들을 계산하는 연산기; Partial Sum들이 각각이 누적되어 저장되는 OFM 버퍼; 연산기에서 계산되는 Partial Sum들 각각을 누적 하여 OFM 버퍼에 기록하는 누산기;를 포함하고, 누산기는, Partial Sum의 누적 값이 현재 자료형의 범위를 벗어 나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을 특징으로 하는 컨볼루션 연산 하드웨어가 제공된다. 본 발명의 또다른 측면에 따르면, IFM(Input Feature Map)과 WT(Weight)를 곱해서 Partial Sum들을 계산하는 단계; 및 계산되는 Partial Sum들 각각을 누적하여 OFM 버퍼에 기록하는 단계;를 포함하고, 기록 단계는, Partial Sum의 누적 값이 현재 자료형의 범위를 벗어나는 오버플로우가 발생하면, 양자화 팩터를 조정하는 것을 특징으로 하는 컨볼루션 연산 방법이 제공된다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상 설명한 바와 같이, 본 발명의 실시예들에 따르면, 제한된 저장 공간에 고정 소수점 자료형을 누적 연산하 여야 하는 컨볼루션 연산 하드웨어에서 양자화 팩터를 적응적으로 결정함으로써, 양자화로 인한 정보 손실을 최 소화할 수 있게 된다. 또한, 본 발명의 실시예들에 따르면, 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해서는 다음 채널에 대한 누 적 연산에서 양자화 팩터를 조정함으로써, 연산 지연을 발생시키지 않는다는 장점도 있다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 본 발명의 실시예에서는 컨볼루션 연산 하드웨어에서 적응적으로 양자화 팩터를 결정하는 방법을 제시한다. CNN(Convolutional Neural Network)에서 컨볼루션 연산을 위한 하드웨어에서 제한된 저장 공간을 효과적으로 활 용하고자 Partial Sum을 누적하여 저장하는 과정에서의 양자화를 효율적으로 수행하는 기술이다. 일반적인 CNN의 레이어에서 사용되는 IFM(Input Feature Map)과 WT(Weight)의 값은 양수와 음수가 골고루 섞여 있으므로, 본 발명의 실시예에서는 Partial Sum 누적하는 연산에서 Worst Case 만큼의 양자화를 수행하지 않으 며, 최소한의 양자화를 수행하기 위해 Partial Sum 누적 값이 현재 설정된 자료형의 범위를 벗어나는 오버플로 우(Overflow)가 발생하는 경우에만 양자화 팩터를 조정한다. 도 3은 본 발명의 일 실시예에 따른 컨볼루션 연산 하드웨어의 구성을 도시한 도면이다. 본 발명의 실시예에 따 른 컨볼루션 연산 하드웨어는 도시된 바와 같이 IFM 버퍼, WT 버퍼, 연산기, 누산기 및 OFM 버퍼를 포함하여 구성된다. IFM 버퍼는 IFM이 임시 저장되는 버퍼이고, WT 버퍼은 WT가 임시 저장되는 버퍼이며, OFM 버퍼 는 OFM이 임시 저장되는 버퍼이다. 연산기는 다수의 PE(Processing Element)들이 Systolic Array로 배열된 구조로, 채널 단위로 IFM 버퍼 에 저장된 IFM와 WT 버퍼에 저장된 WT를 곱해서 각 픽셀 별로 Partial Sum들을 계산한다. 누산기는 연산기에서 계산되는 Partial Sum들을 픽셀 별로 누적하여 OFM 버퍼에 기록한다. 이에 따라 OFM 버퍼에 저장되는 OFM은 누산기에 의해 연산기에서 계산된 Partial Sum들의 픽셀 별 누적 값들이라 할 수 있다. OFM은 다음의 식으로 나타낼 수 있다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "데이터의 효율적인 재사용을 위해, 연산기에서 채널 단위로 Partial Sum들을 계산할 때마다 누산기는 OFM 버퍼에 픽셀 별로 저장된 Partial Sum들을 읽어들여, 연산기에서 계산된 Partial Sum들을 각각 더하여 OFM 버퍼에 다시 기록함으로써, Partial Sum들을 누적한다. 이 누적 연산 과정에서 특정 픽셀의 Partial Sum 누적 값이 현재 설정된 부동소수점 자료형의 범위를 벗어나는 오버플로우가 발생할 수 있는데, OFM 버퍼의 저장 공간은 제한이 있기 때문에 Partial Sum의 누적 값에 대 해서는 양자화가 필요하다. 이를 위해 Systolic Array 구조의 하드웨어에서 OFM의 업데이트는 아래에 제시한 수식과 같이 채널 단위로 Partial Sum들의 누적이 수행된다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "만약 IFM와 WT의 곱셈 결과의 Bit depth와 OFM 버퍼의 Bit Depth가 같다면 Worst Case로 log2(입력 채널* 가중치의 크기) 만큼의 양자화가 수행되어야 하는데, 이렇게 되면 정보 손실이 커져서 연산의 정확도가 크게 떨 어지는 문제가 있다. 이에 따라 본 발명의 실시예에서는 Partial Sum 누적 값이 현재 설정된 부동소수점 자료형의 범위를 벗어나게 되면, 즉 데이터의 오버플로우가 발생하면, 누산기가 양자화 팩터(Quantization Factor)를 조정하여 부동 소수점 자료형의 고정 소수점 위치를 변경한다. 구체적으로 누산기가 양자화 팩터를 1 증가시켜, 실수부가 1 비트 증가되고 소수부가 1비트 감소되도록 고 정 소수점 위치를 변경한다. 이는 누산기가 오버플로우된 Partial Sum 누적 값을 저장할 수 있도록 한 최 소한의 양자화에 해당한다. 조정된 양자화 팩터는 오버플로우가 발생한 픽셀과 이후 픽셀들에 대한 Partial Sum 누적 연산에 적용된다. 한편 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해서는 다음 채널의 Partial Sum을 누적할 때부터 조정된 양 자화 팩터가 적용되며, 구체적으로는 다음의 수식과 같다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "예를 들어, 5번째 채널의 Partial Sum을 누적 연산하는 과정에서 100개의 픽셀들 중 49번째 픽셀에서 Partial Sum 누적 값이 오버플로우 되었다면, 49번째 픽셀부터 99번째 픽셀에 대해서는 5번째 채널의 Partial Sum을 누 적 연산하는 과정에 조정된 양자화 팩터가 적용되지만, 0번째 픽셀부터 48번째 픽셀에 대해서는 6번째 채널의 Partial Sum을 누적 연산하는 과정에 조정된 양자화 팩터가 적용되는 것이다. 이후 오버플로우가 발생한 픽셀에 대한 다음 채널의 Partial Sum 누적 연산 부터, 위 예에서는 6번째 채널의 49 번째 픽셀에 대한 Partial Sum 누적 연산 부터 OFM 버퍼에 저장된 모든 Partial Sum 누적 값들의 양자화 팩터가 동일하므로 다시 아래와 같은 기존의 수식에 따라 누적 연산을 수행한다."}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "이에 의해 컨볼루션 연산 하드웨어에서 추가 latency 없이 양자화로 인해 발생되는 정보의 손실을 최소화 할 수 있다. 한편 마지막 채널에 대한 누적 연산에서 특정 픽셀에 대해 오버플로우가 발생하는 경우, 누산기는 오버플 로우가 발생한 픽셀의 이후 픽셀들에 대한 Partial Sum 누적에 조정된 양자화 팩터를 적용한 이후, OFM 버퍼 에 저장되어 있는 오버플로우가 발생한 픽셀의 이전 픽셀들의 Partial Sum 누적 값에 대해 조정된 양자화 팩터를 적용할 수 있다. 마지막 채널의 경우 다음 채널에 대한 누적 연산이 없기 때문이다. 지금까지 컨볼루션 연산에서 적응적으로 양자화 팩터를 결정하는 방법 및 이를 적용한 컨볼루션 연산 하드웨어 에 대해 바람직한 실시예를 들어 상세히 설명하였다. 위 실시예에서는 제한된 저장 공간에 고정 소수점 자료형을 누적 연산하여야 하는 컨볼루션 연산 하드웨어에서 양자화 팩터를 적응적으로 결정함으로써, 양자화로 인한 정보 손실을 최소화할 수 있도록 하였다. 또한 마지막 채널이 아니면 오버플로우가 발생한 픽셀의 이전 픽셀들에 대해서는 다음 채널에 대한 누적 연산에 서 양자화 팩터를 조정함으로써, 하드웨어에서 연산 지연이 발생하지 않도록 하였다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2022-0176766", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다.부호의 설명 110 : IFM(Input Feature Map) 버퍼 120 : WT(Weight) 버퍼 130 : 연산기 140 : 누산기 150 : OFM(Output Feature Map) 버퍼"}
{"patent_id": "10-2022-0176766", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 부동 소수점 자료형 예시, 도 2는 고정 소수점 자료형 예시, 도 3은 본 발명의 일 실시예에 따른 컨볼루션 연산 하드웨어의 구성을 도시한 도면이다."}
