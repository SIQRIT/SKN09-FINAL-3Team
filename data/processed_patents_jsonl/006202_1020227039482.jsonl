{"patent_id": "10-2022-7039482", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0073142", "출원번호": "10-2022-7039482", "발명의 명칭": "비동기적으로 큐에 더해진 요청의 오류를 검출하는 시스템 및 방법", "출원인": "쿠팡 주식회사", "발명자": "변평안"}}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "클라이언트 요청을 관리하기 위한 시스템에 있어서,적어도 하나의 프로세서; 및명령어 세트를 포함하는 비-일시적 컴퓨터-판독가능 매체를 포함하고, 상기 명령어 세트는, 상기 적어도 하나의프로세서에 의해 실행 시, 상기 프로세서가:원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하는 동작, 상기 클라이언트 요청은 아이템 식별자를 포함하는 요청 데이터를 포함함;상기 검증에 기초하여, 상기 원격 클라이언트 디바이스에게 응답을 전송하는 동작;상기 요청 데이터에 기초하여, 상기 클라이언트 요청에 대한 큐를 결정하는 동작;상기 큐에 상기 클라이언트 요청을 비동기적으로 더하는 동작-상기 큐는 모델에 따라 상기 클라이언트 요청을분석하도록 구성됨-;상기 모델에 따라 상기 클라이언트 요청을 분석하는 동작-상기 분석하는 동작은, 상기 아이템 식별자를 이용하여 인벤토리 시스템에 질의하는 동작; 상기 인벤토리 시스템으로부터 응답을 수신하는 동작; 및 상기 인벤토리 시스템의 응답에 기초하여 교정 동작을 결정하는 동작에 의해 이루어짐-; 및상기 클라이언트 요청을 분석함에 기초하여, 상기 교정 동작을 수행하는 동작을 포함하는 단계들을 수행하게 하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 단계들은 상기 클라이언트 요청을 분석함에 기초하여, 상기 모델의 성능 지시자를 결정하는 동작;상기 성능 지시자에 기초하여 상기 모델에 대한 수정을 결정하는 동작; 및매니저 디바이스로 상기 결정된 수정에 대한 통지를 전송하는 동작을 더 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서, 상기 단계들은모델에 대한 수정 요청을 수신하는 동작; 및상기 수정 요청에 기초하여 상기 모델을 수정하는 동작을 더 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2023-0073142-3-청구항 1에 있어서, 상기 클라이언트 요청은 첫 번째 클라이언트 요청이고; 및상기 교정 동작은 상기 첫 번째 클라이언트 요청에 기초한 도메인 데이터를 관계형 데이터베이스에 저장하는 동작을 포함하고, 상기 관계형 데이터베이스는 두 번째 클라이언트 요청으로부터의 도메인 데이터를 저장하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 4에 있어서, 상기 교정 동작은 상기 모델의 파라미터를 수정하는 동작을 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 5에 있어서, 상기 파라미터는 상기 첫 번째 클라이언트 요청 및 두 번째 클라이언트 요청으로부터의 상기 도메인 데이터에 기초하여 수정되는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서, 상기 단계들은컴퓨팅 디바이스의 자원 사용을 결정하는 동작; 및상기 결정된 자원 사용에 기초하여 상기 클라이언트 요청을 취급하기 위한 자원의 양을 스케일하는 동작을 더 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서, 상기 자원의 상기 양을 스케일하는 동작은 가상 컴퓨팅 자원을 초기화하는 동작을 포함하는시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 1에 있어서, 상기 클라이언트 요청을 검증하는 동작은:상기 클라이언트 요청으로부터 상기 요청 데이터를 추출하는 동작; 및규칙 엔진을 이용하여 상기 요청 데이터를 분석하는 동작을 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서, 상기 단계들은 상기 원격 클라이언트 디바이스로, 상기 규칙 엔진을 이용하여 상기 클라이언트 요청을 분석하는 동작에 기초한 통지를 전송하는 동작을 더 포함하고, 상기 통지는 상기 검증의 성공 또는실패에 대한 지시를 더 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 1에 있어서, 상기 큐를 결정하는 동작은:공개특허 10-2023-0073142-4-클라이언트 요청 토픽을 결정하기 위해 상기 클라이언트 요청의 헤더를 파싱하는 동작;상기 클라이언트 요청 토픽을 일련의 큐 토픽들과 비교하는 동작; 및상기 클라이언트 요청 토픽이 상기 일련의 큐 토픽들 중 상기 결정된 큐의 토픽에 매치함을 결정하는 동작을 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 1에 있어서, 상기 클라이언트 요청을 분석하는 동작은:상기 큐의 태스크를, 첫 번째로, 시도하는 동작;상기 첫 번째의 상기 시도의 첫 번째 실패를 결정하는 동작;상기 태스크에 대해 지정된 재시도 횟수에 따라 상기 태스크를, 두 번째로, 시도하는 동작;상기 두 번째의 상기 시도의 두 번째 실패를 결정하는 동작;상기 두 번째 실패에 기초하여, 실패 데이터를 실패 정보 디바이스로 전송하는 동작; 및실패 응답을 상기 원격 클라이언트 디바이스로 전송하는 동작을 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 1에 있어서, 상기 모델은 설정 가능한 작업 흐름을 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 1에 있어서, 상기 클라이언트 요청을 분석하는 동작은:상기 큐의 태스크를 시도하는 동작;상기 태스크의 실패를 결정하는 동작; 및상기 결정된 실패에 기초하여 상기 원격 클라이언트 디바이스로 실패 정보를 전송하는 동작을 포함하고, 상기실패 정보는 상기 태스크를 식별하는시스템."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "클라이언트 요청을 관리하기 위한 방법에 있어서,원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하는 동작, 상기 클라이언트 요청은 아이템 식별자를 포함하는 요청 데이터를 포함함;상기 검증에 기초하여, 상기 원격 클라이언트 디바이스에게 응답을 전송하는 동작;상기 요청 데이터에 기초하여, 상기 클라이언트 요청에 대한 큐를 결정하는 동작;상기 큐에 상기 클라이언트 요청을 비동기적으로 더하는 동작-상기 큐는 모델에 따라 상기 클라이언트 요청을분석하도록 구성됨-;상기 모델에 따라 상기 클라이언트 요청을 분석하는 동작-상기 분석하는 동작은, 상기 아이템 식별자를 이용하여 인벤토리 시스템에 질의하는 동작; 공개특허 10-2023-0073142-5- 상기 인벤토리 시스템으로부터 응답을 수신하는 동작; 및 상기 인벤토리 시스템의 응답에 기초하여 교정 동작을 결정하는 동작에 의해 이루어짐-; 및상기 클라이언트 요청을 분석함에 기초하여, 상기 교정 동작을 수행하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 15에 있어서, 상기 클라이언트 요청을 분석함에 기초하여, 상기 모델의 성능 지시자를 결정하는 동작;상기 성능 지시자에 기초하여 상기 모델에 대한 수정을 결정하는 동작; 및매니저 디바이스로 상기 결정된 수정에 대한 통지를 전송하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 16에 있어서, 상기 클라이언트 요청을 분석하는 동작은:상기 큐의 태스크를 시도하는 동작;상기 태스크의 실패를 결정하는 동작; 및상기 결정된 실패에 기초하여 상기 원격 클라이언트 디바이스로 실패 정보를 전송하는 동작을 포함하고, 상기실패 정보는 상기 태스크를 식별하는방법."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 16에 있어서, 상기 모델은 설정 가능한 작업 흐름을 포함하는 방법."}
{"patent_id": "10-2022-7039482", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "클라이언트 요청을 관리하기 위한 시스템에 있어서, 제1 컴퓨팅 디바이스로서, 적어도 하나의 프로세서; 및명령어 세트를 포함하는 비-일시적 컴퓨터-판독가능 매체를 포함하고, 상기 명령어 세트는, 상기 적어도 하나의프로세서에 의해 실행 시, 상기 프로세서가: 원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하는 동작, 상기 클라이언트 요청은 아이템 식별자를 포함하는 요청 데이터를 포함함; 상기 검증에 기초하여, 상기 원격 클라이언트 디바이스에게 응답을 전송하는 동작; 상기 요청 데이터에 기초하여, 연관된 컴퓨팅 디바이스들을 가지는 복수의 큐들 중에서, 상기 클라이언트 요청에 대한 큐를 결정하는 동작; 상기 큐에 상기 클라이언트 요청을 비동기적으로 더하는 동작, 상기 큐는 모델에 따라 상기 클라이언트 요청을분석하도록 구성됨;을 포함하는 단계들을 수행하게 하는, 상기 제1 컴퓨팅 디바이스; 및공개특허 10-2023-0073142-6-제2 컴퓨팅 디바이스로서, 적어도 하나의 프로세서; 및명령어 세트를 포함하는 비-일시적 컴퓨터-판독가능 매체를 포함하고, 상기 명령어 세트는, 상기 적어도 하나의프로세서에 의해 실행 시, 상기 프로세서가: 상기 아이템 식별자를 이용하여 인벤토리 시스템에 질의하는 동작; 상기 인벤토리 시스템으로부터의 응답을 수신하는 동작; 및 상기 인벤토리 시스템 응답에 기초하여 교정 동작을 결정하는 동작에 의해 상기 모델에 따라 상기 클라이언트 요청을 분석하는 동작; 및상기 클라이언트 요청을 분석함에 기초하여, 상기 모델의 성능 지시자를 결정하는 동작;상기 성능 지시자에 기초하여 상기 모델에 대한 수정을 결정하는 동작; 및매니저 디바이스로 상기 결정된 수정에 대한 통지를 전송하는 동작을 포함하는 단계들을 수행하게 하는 상기 제2 컴퓨팅 디바이스를 포함하는 시스템."}
{"patent_id": "10-2022-7039482", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "적어도 하나의 프로세서 및 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어 세트를 포함하는 비-일시적 컴퓨터-판독가능 매체를 포함할 수 있는 클라이언트 요청을 관리하기 위한 시스템이 여기에서 개시된다. 이러한 명령어의 실행은 프로세서가 원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하는 동작, 상기 클 라이언트 요청은 요청 데이터를 포함함; 상기 검증에 기초하여, 상기 원격 클라이언트 디바이스에게 응답을 전송 하는 동작; 상기 요청 데이터에 기초하여, 상기 클라이언트 요청에 대한 큐를 결정하는 동작; 상기 큐에 상기 클 라이언트 요청을 비동기적으로 더하는 동작, 상기 큐는 모델에 따라 상기 클라이언트 요청을 분석하도록 구성됨; 상기 클라이언트 요청을 분석하는 동작; 및 상기 클라이언트 요청을 분석함에 기초하여, 응답 동작을 수행하는 동작을 가지는 단계들을 수행하게 할 수 있다."}
{"patent_id": "10-2022-7039482", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 일반적으로 클라이언트 요청을 관리하기 위한 컴퓨터 시스템 및 방법에 관한 것이다. 특히, 본 개시 의 실시예는 배송 네트워크에 대한 원격 클라이언트 요청을 취급하기 위한 비동기 큐잉(queuing)과 오류 분석에 대한 창의적이고 독특한 시스템에 관한 것이다."}
{"patent_id": "10-2022-7039482", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "제품에 대한 고객 주문을 처리하는 분야에서, 시스템은 개인이 주문한 후에 발생할 수 있는 이슈를 취급하는데 이용된다. 예를 들면, 고객은 처리 또는 배송에 대한 다수의 특정 단계들 중 어디서든 아이템의 반환, 교환, 또 는 취소를 결정할 수 있다. 풀필먼트 서비스(fulfillment services)가 고객의 요구를 극히 빠르게 충족하도록 나아감에 따라, 고객 요청에 대한 빠르고 효율적인 처리는 높은 풀필먼트 쓰루풋(throughput)의 보장, 컴퓨팅 자원에 대한 최소한의 부담, 및 고객 만족의 유지에 중요하다. 고객 요청을 취급하는 현재의 시스템은 융통성 없게 설계되어 오류를 검출하고 반응하기 위한 수준 높은 수단이 결여된다. 전통적인 기술은 종종 클라이언트 디바이스들로부터의 요청들을 동시에 큐에 더하는 것을 포함하며, 이는 클라이언트 디바이스 어플리케이션의 능력의 불필요한 일시적인 손실을 초래할 수 있다. 동시에 일어나는 요청들은 종종 반드시 특정 순서로 일어나야 하는 API 호출들과 응답들의 시퀀스를 필요로 하는데, 어떤 특정 호출 또는 응답의 실패는 전체 프로세스의 실패를 야기하고, 해당 고객 요청은 손실될 수 있다. 또한 그러한 기 술은 클라이언트 요청 오류의 본질을 이해하고, 이러한 오류를 빠르게 완화하고, 클라이언트 디바이스에게 오류 의 상세한 이해를 제공하는데 빈번하게 실패한다. 또한 일부 현재 시스템은, 고객의 걱정을 완화하고 컴퓨팅 자 원에 대한 부담을 한층 더 생성하는 다른 시스템 상의 고객이 제기한 수많은 문의와 컴플레인을 감소시킬 수 있 는, 중간 요청 상태를 결정하지 않고 이를 고객에게 제공하지 않는다. 그러므로, 오류의 동적인 검출 및 응답과 함께 클라이언트 디바이스들에 제공하기 위한 요청 상태 상세정보를 정확히 찾아내면서, 클라이언트 요청을 비동기적으로 처리하기 위한 개선된 방법 및 시스템의 구현이 요구된다. 본 개시의 일 양상은 클라이언트 요청을 관리하기 위한 시스템에 관한 것이다. 일부 실시예에서, 시스템은 적어 도 하나의 프로세서 및 적어도 하나의 프로세서에 의해 실행 가능한 명령어 세트를 포함하는 비-일시적 컴퓨터- 판독가능 매체를 포함할 수 있다. 일부 실시예에서, 명령어는 프로세서가: 원격 클라이언트 디바이스로부터 수 신된 클라이언트 요청을 검증하는 동작, 클라이언트 요청은 요청 데이터를 포함함; 검증에 기초하여, 원격 클라 이언트 디바이스에게 응답을 전송하는 동작; 요청 데이터에 기초하여, 클라이언트 요청에 대한 큐를 결정하는 동작; 큐에 클라이언트 요청을 비동기적으로 더하는 동작, 큐는 모델에 따라 클라이언트 요청을 분석하도록 구성됨; 클라이언트 요청을 분석하는 동작; 및 클라이언트 요청을 분석함에 기초하여, 응답 동작을 수행하는 동작 을 포함하는 단계들을 수행하게 할 수 있다. 일부 실시예에서, 단계들은: 클라이언트 요청을 분석함에 기초하여, 모델의 성능 지시자를 결정하는 동작; 성능 지시자에 기초하여 모델에 대한 수정을 결정하는 동작; 및 결정된 수정에 대한 통지를 매니저 디바이스로 전송 하는 동작을 포함할 수 있다. 일부 실시예에서, 단계들은: 모델에 대한 수정 요청을 수신하는 동작; 및 수정 요청에 기초하여 모델을 수정하 는 동작을 포함할 수 있다. 일부 실시예에서, 클라이언트 요청은 첫 번째 클라이언트 요청일 수 있고 응답 동작은 첫 번째 클라이언트 요청 에 기초한 도메인 데이터를 관계형 데이터베이스에 저장하는 동작을 포함할 수 있고, 관계형 데이터베이스는 두 번째 클라이언트 요청으로부터의 도메인 데이터를 저장한다. 일부 실시예에서, 응답 동작은 모델의 파라미터를 수정하는 동작을 포함한다. 일부 실시예에서, 파라미터는 첫 번째 및 두 번째 클라이언트 요청들로부터의 도메인 데이터에 기초하여 수정될 수 있다. 일부 실시예에서, 단계들은: 컴퓨팅 디바이스의 자원 사용을 결정하는 동작; 및 결정된 자원 사용에 기초하여 클라이언트 요청을 취급하기 위한 자원의 양을 스케일하는 동작을 포함할 수 있다. 일부 실시예에서, 단계들은 가상 컴퓨팅 자원을 초기화하는 동작을 포함하는 자원의 양을 스케일하는 동작을 포 함할 수 있다. 일부 실시예에서, 클라이언트 요청을 검증하는 동작은: 클라이언트 요청으로부터 요청 데이터를 추출하는 동작; 및 규칙 엔진을 이용하여 요청 데이터를 분석하는 동작을 포함할 수 있다. 일부 실시예에서, 단계들은 원격 클라이언트 디바이스로, 규칙 엔진을 이용하여 클라이언트 요청을 분석하는 동 작에 기초한 통지를 전송하는 동작을 더 포함하고, 통지는 검증의 성공 또는 실패에 대한 지시를 포함할 수 있 다. 일부 실시예에서, 큐를 결정하는 동작은 클라이언트 요청 토픽을 결정하기 위해 클라이언트 요청의 헤더를 파싱 하는 동작; 클라이언트 요청 토픽을 일련의 큐 토픽들과 비교하는 동작; 및 클라이언트 요청 토픽이 일련의 큐 토픽들 중 결정된 큐의 토픽에 매치함을 결정하는 동작을 포함할 수 있다. 일부 실시예에서, 클라이언트 요청을 분석하는 동작은: 큐의 태스크를, 첫 번째로, 시도하는 동작; 첫 번째의 시도의 첫 번째 실패를 결정하는 동작; 태스크에 대해 지정된 재시도 횟수에 따라 태스크를, 두 번째로, 시도하 는 동작; 두 번째의 시도의 두 번째 실패를 결정하는 동작; 두 번째 실패에 기초하여, 실패 데이터를 실패 정보 디바이스로 전송하는 동작; 및 실패 응답을 원격 클라이언트 디바이스로 전송하는 동작을 포함할 수 있다. 일부 실시예에서, 모델은 설정 가능한 작업 흐름을 포함할 수 있다. 일부 실시예에서, 클라이언트 요청을 분석하는 동작은: 큐의 태스크를 시도하는 동작; 태스크의 실패를 결정하 는 동작; 및 결정된 실패에 기초하여 원격 클라이언트 디바이스로 실패 정보를 전송하는 동작을 포함할 수 있고, 실패 정보는 태스크를 식별하게 한다. 일부 실시예에서, 요청 데이터는 아이템 식별자를 포함할 수 있고; 및 클라이언트 요청을 분석하는 동작은: 아 이템 식별자를 이용하여 인벤토리 시스템에 질의하는 동작; 인벤토리 시스템으로부터 응답을 수신하는 동작; 및 인벤토리 시스템 응답에 기초하여 교정 동작을 결정하는 동작을 포함할 수 있다. 본 개시의 다른 양상은 원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하는 동작, 클라이언트 요청은 요청 데이터를 포함함; 검증에 기초하여, 원격 클라이언트 디바이스에게 응답을 전송하는 동작; 요청 데 이터에 기초하여, 클라이언트 요청에 대한 큐를 결정하는 동작; 큐에 클라이언트 요청을 비동기적으로 더하는 동작, 큐는 모델에 따라 클라이언트 요청을 분석하도록 구성됨; 클라이언트 요청을 분석하는 동작; 및 클라이언 트 요청을 분석함에 기초하여, 응답 동작을 수행하는 동작을 포함하는 클라이언트 요청을 관리하기 위한 방법에 관한 것이다. 일부 실시예에서, 방법은: 클라이언트 요청을 분석함에 기초하여, 모델의 성능 지시자를 결정하는 동작; 성능 지시자에 기초하여 모델에 대한 수정을 결정하는 동작; 및 매니저 디바이스로 결정된 수정에 대한 통지를 전송하는 동작을 포함할 수 있다. 일부 실시예에서, 클라이언트 요청을 분석하는 동작은: 큐의 태스크를 시도하는 동작; 태스크의 실패를 결정하 는 동작; 및 결정된 실패에 기초하여 원격 클라이언트 디바이스로 실패 정보를 전송하는 동작을 포함할 수 있고, 실패 정보는 태스크를 식별하게 한다. 일부 실시예에서, 모델은 설정 가능한 작업 흐름을 포함할 수 있다. 본 개시의 또 다른 실시 예는 적어도 하나의 프로세서 및 비-일시적 컴퓨터-판독가능 매체를 포함하는 제1 컴퓨 팅 디바이스 및 적어도 하나의 프로세서 및 비-일시적 컴퓨터-판독가능 매체를 포함하는 제2 컴퓨팅 디바이스를 포함할 수 있다. 일부 실시예에서, 제1 컴퓨팅 디바이스의 비-일시적 컴퓨터-판독가능 매체는 제1 컴퓨팅 디바이스의 적어도 하 나의 프로세서에 의해 실행 시, 프로세서가: 원격 클라이언트 디바이스로부터 수신된 클라이언트 요청을 검증하 는 동작, 클라이언트 요청은 요청 데이터를 포함함; 검증에 기초하여, 원격 클라이언트 디바이스에게 응답을 전 송하는 동작; 요청 데이터에 기초하여, 연관된 컴퓨팅 디바이스들을 가지는 복수의 큐들 중에서, 클라이언트 요 청에 대한 큐를 결정하는 동작; 큐는 수정된 모델에 따라 클라이언트 요청을 분석하도록 구성되고, 큐에 클라이 언트 요청을 비동기적으로 더하는 동작을 포함하는 단계들을 수행하게 하는 명령어 세트를 포함할 수 있다. 일부 실시예에서, 제2 컴퓨팅 디바이스의 비-일시적 컴퓨터-판독가능 매체는 제2 컴퓨팅 디바이스의 적어도 하 나의 프로세서에 의해 실행 시, 프로세서가: 아이템 식별자를 이용하여 인벤토리 시스템에 질의하는 동작; 인벤 토리 시스템으로부터의 응답을 수신하는 동작; 및 인벤토리 시스템 응답에 기초하여 교정 동작을 결정하는 동작 에 의해 수정된 모델에 따라 클라이언트 요청을 분석하는 동작; 및 클라이언트 요청을 분석함에 기초하여, 모델 의 성능 지시자를 결정하는 동작; 성능 지시자에 기초하여 모델에 대한 수정을 결정하는 동작; 및 매니저 디바 이스로 결정된 수정에 대한 통지를 전송하는 동작을 포함하는 단계들을 수행하게 하는 명령어 세트를 포함할 수 있다. 또한 다른 시스템, 방법, 및 컴퓨터 판독 가능 매체가 여기서 논의된다."}
{"patent_id": "10-2022-7039482", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하의 상세한 설명은 첨부 도면을 참조한다. 가능하면, 동일한 참조 번호가 도면 및 이하의 설명에서 동일하거 나 또는 유사한 부분을 참조하기 위해 사용된다. 몇몇 예시적인 실시예가 본 명세서에 설명되지만, 변형예, 적 응예 및 다른 구현예가 가능하다. 예를 들면, 도면들에 도시된 구성 요소들 및 스텝들에 대한 대체예, 추가예 또는 변형예가 이루어질 수 있으며, 본 명세서에서 설명된 예시적 방법들은 개시된 방법들에 대해 스텝들을 대 체, 재정렬, 제거 또는 추가함으로써 변형될 수 있다. 따라서 이하의 상세한 설명은 개시된 실시예들 및 예시들 로 제한되지 않는다. 대신에, 본 발명의 적합한 범위는 첨부된 청구 범위에 의해 규정된다. 본 개시의 실시예는 클라이언트 요청을 취급하도록 구성된 시스템 및 방법에 관한 것이다. 도 1a를 참조하면, 배송, 운송 및 물류 운영을 가능하게 하는 통신을 위한 컴퓨터 시스템을 포함하는 시스템의 실시예를 나타낸 개략적인 블록도가 도시되어 있다. 도 1a에 도시된 바와 같이, 시스템은 다양한 시 스템을 포함할 수 있으며, 이들 각각은 하나 이상의 네트워크를 통해 서로 연결될 수 있다. 또한 시스템은 집적 연결을 통해, 예를 들어, 케이블을 이용하여, 서로 연결될 수 있다. 도시된 시스템은 배송 기관 기술(shipment authority technology, SAT) 시스템, 외부 프론트 엔드 시스템(external front end system, 103), 내부 프론트 엔드 시스템, 운송 시스템, 모바일 디바이스(107A, 107B, 107C), 판매자 포털, 배송 및 주문 트래킹(shipment and order tracking, SOT) 시스템, 풀필먼트 최적화(fulfillment optimization, FO) 시스템, 풀필먼트 메시징 게이트웨이(fulfillment messaging gateway, FMG), 공급 체인 관리 (supply chain management, SCM) 시스템, 창고 관리 시스템(warehouse management system, WMS), 모 바일 디바이스(119A, 119B, 119C)(풀필먼트 센터(fulfillment center, FC) 내부에 있는 것으로 도시됨), 제3자 풀필먼트 시스템(121A, 121B, 121C), 풀필먼트 센터 인증 시스템(fulfillment center authorization system, FC Auth), 및 노동 관리 시스템(labor management system, LMS)을 포함한다. 일부 실시예에서, SAT 시스템은 주문 상태와 배달 상태를 모니터링하는 컴퓨터 시스템으로서 구현될 수 있 다. 예를 들면, SAT 시스템은 주문이 약속된 배달 날짜(Promised Delivery Date, PDD)를 지났는지를 결정 할 수 있고, 새로운 주문을 개시시키고, 배달되지 않은 주문의 아이템을 다시 배송하며, 배달되지 않은 주문을 취소하고, 주문 고객과 연락을 시작하는 것 등을 포함하는 적합한 조치를 취할 수 있다. SAT 시스템은 또 한, (특정 기간 동안 배송된 패키지의 개수와 같은) 출력, 및 (배송시 사용하기 위해 수신된 빈 카드보드 박스 의 개수와 같은) 입력을 포함하는 다른 데이터를 감시할 수 있다. 또한 SAT 시스템은 외부 프론트 엔드 시 스템 및 FO 시스템과 같은 디바이스들 간의 (예를 들면, 저장 전달(store-and-forward) 또는 다른 기술을 사용하는) 통신을 가능하게 하는 시스템 내의 상이한 디바이스들 사이의 게이트웨이로서 동작할 수 있다. 일부 실시예에서, 외부 프론트 엔드 시스템은 외부 사용자가 시스템 내의 하나 이상의 시스템과 상호 동작할 수 있게 하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들면, 시스템이 사용자가 아이템에 대한 주문을 할 수 있게 하는 시스템의 프레젠테이션을 가능하게 하는 실시예에서, 외부 프론트 엔드 시스템은 검색 요청을 수신하고, 아이템 페이지를 제시하며, 결제 정보를 요청하는 웹 서버로서 구현될 수 있다. 예를 들 면, 외부 프론트 엔드 시스템은 Apache HTTP 서버, Microsoft Internet Information Services(IIS), NGINX 등과 같은 소프트웨어를 실행하는 컴퓨터 또는 컴퓨터들로서 구현될 수 있다. 다른 실시예에서, 외부 프 론트 엔드 시스템은 외부 디바이스(예를 들면, 모바일 디바이스(102A) 또는 컴퓨터(102B))로부터 요청을 수신 및 처리하고, 이들 요청에 기초하여 데이터베이스 및 다른 데이터 저장 장치로부터 정보를 획득하며, 획득 한 정보에 기초하여 수신된 요청에 대한 응답을 제공하도록 설계된 커스텀 웹 서버 소프트웨어를 실행할 수 있 다. 일부 실시예에서, 외부 프론트 엔드 시스템은 웹 캐싱 시스템, 데이터베이스, 검색 시스템, 또는 결제 시 스템 중 하나 이상을 포함할 수 있다. 일 양상에서, 외부 프론트 엔드 시스템은 이들 시스템 중 하나 이상 을 포함할 수 있는 반면, 다른 양상에서, 외부 프론트 엔드 시스템은 이들 시스템 중 하나 이상에 연결된 인터페이스(예를 들면, 서버 대 서버, 데이터베이스 대 데이터베이스, 또는 다른 네트워크 연결)를 포함할 수 있다. 도 1b, 1c, 1d 및 1e에 의해 나타낸 스텝들의 예시적인 세트는 외부 프론트 엔드 시스템의 일부 동작을 설 명하는 것에 도움이 될 것이다. 외부 프론트 엔드 시스템은 프레젠테이션 및/또는 디스플레이를 위해 시스 템 내의 시스템 또는 디바이스로부터 정보를 수신할 수 있다. 예를 들면, 외부 프론트 엔드 시스템은 검색 결과 페이지(Search Result Page, SRP)(예를 들면, 도 1b), 싱글 디테일 페이지(Single Detail Page, SDP)(예를 들면, 도 1c), 장바구니 페이지(Cart page)(예를 들면, 도 1d), 또는 주문 페이지(예를 들면, 도 1e)를 포함하는 하나 이상의 웹페이지를 호스팅하거나 제공할 수 있다. (예를 들면, 모바일 디바이스(102A) 또 는 컴퓨터(102B)를 사용하는) 사용자 디바이스는 외부 프론트 엔드 시스템으로 이동하고 검색 박스에 정보 를 입력함으로써 검색을 요청할 수 있다. 외부 프론트 엔드 시스템은 시스템 내의 하나 이상의 시스 템으로부터 정보를 요청할 수 있다. 예를 들면, 외부 프론트 엔드 시스템은 FO 시스템으로부터 검색 요청을 만족하는 정보를 요청할 수 있다. 또한 외부 프론트 엔드 시스템은 (FO 시스템으로부터) 검색 결과에 포함된 각 제품에 대한 약속된 배달 날짜(Promised Delivery Date) 또는 \"PDD\"를 요청하고 수신할 수 있 다. 일부 실시예에서, PDD는 특정 기간 이내, 예를 들면, 하루의 끝(PM 11:59)까지 주문되면, 사용자가 원하는 장소에 제품을 포함하는 패키지가 도착할 시점의 추정 또는 사용자가 원하는 장소에 제품이 배달될 것으로 약속 된 날짜를 나타낼 수 있다. (PDD는 FO 시스템과 관련하여 이하에서 더 논의된다.) 외부 프론트 엔드 시스템은 정보에 기초하여 SRP(예를 들면, 도 1b)를 준비할 수 있다. SRP는 검색 요청을 만족하는 정보를 포함할 수 있다. 예를 들면, 이는 검색 요청을 만족하는 제품의 사진을 포함할 수 있다. 또한 SRP는 각 제품에 대한 각각의 가격, 또는 각 제품에 대한 개선된 배달 옵션, PDD, 무게, 크기, 오퍼(offer), 할 인 등에 관한 정보를 포함할 수 있다. 외부 프론트 엔드 시스템은 (예를 들면, 네트워크를 통해) SRP를 요 청 사용자 디바이스로 보낼 수 있다. 이후 사용자 디바이스는 예를 들면, SRP에 나타난 제품을 선택하기 위하여 사용자 인터페이스를 클릭 또는 탭하 거나, 또는 다른 입력 디바이스를 사용함으로써, SRP로부터 제품을 선택할 수 있다. 사용자 디바이스는 선택된 제품에 관한 정보에 대한 요청을 만들고 이를 외부 프론트 엔드 시스템으로 전송할 수 있다. 이에 응답하 여, 외부 프론트 엔드 시스템은 선택된 제품에 관한 정보를 요청할 수 있다. 예를 들면, 정보는 각각의 SRP 상에 제품에 대해 제시된 것 이상의 추가 정보를 포함할 수 있다. 이는, 예를 들면, 유통 기한, 원산지, 무 게, 크기, 패키지 내의 아이템 개수, 취급 지침, 또는 제품에 대한 다른 정보를 포함할 수 있다. 또한 정보는 (예를 들면, 이 제품 및 적어도 하나의 다른 제품을 구입한 고객들의 빅 데이터 및/또는 기계 학습 분석에 기초 한) 유사한 제품에 대한 추천, 자주 묻는 질문에 대한 답변, 고객의 후기, 제조 업체 정보, 사진 등을 포함할 수 있다. 외부 프론트 엔드 시스템은 수신된 제품 정보에 기초하여 SDP(Single Detail Page)(예를 들면, 도 1c)를 준비할 수 있다. SDP는 또한, \"지금 구매(Buy Now)\" 버튼, \"장바구니에 추가(Add to Cart)\" 버튼, 수량 필드, 아이템 사진 등과 같은 다른 상호 동작 요소를 포함할 수 있다. SDP는 제품을 제시하는 판매자의 목록을 더 포 함할 수 있다. 목록은 제품을 가장 낮은 가격에 판매할 것을 제시하는 판매자가 맨 위에 나열될 수 있도록 각 판매자가 제시하는 가격에 기초하여 정렬될 수 있다. 또한 목록은 가장 높게 랭크된 판매자가 맨 위에 나열될 수 있도록 판매자 랭킹에 기초하여 정렬될 수 있다. 판매자 랭킹은, 예를 들면, 제안된 PDD를 만족하는 판매자 과거 추적 이력을 포함하는 다중 인자들에 기초하여 만들어질 수 있다. 외부 프론트 엔드 시스템은 (예를 들면, 네트워크를 통해) SDP를 요청 사용자 디바이스로 전달할 수 있다. 요청 사용자 디바이스는 제품 정보를 나열하는 SDP를 수신할 수 있다. SDP를 수신하면, 사용자 디바이스는 SDP 와 상호 동작할 수 있다. 예를 들면, 요청 사용자 디바이스의 사용자는 SDP의 \"장바구니에 담기(Place in Cart)\" 버튼을 클릭하거나, 이와 상호 동작할 수 있다. 이렇게 하면 사용자와 연계된 쇼핑 장바구니에 제품이 추가된다. 사용자 디바이스는 제품을 쇼핑 장바구니에 추가하기 위해 외부 프론트 엔드 시스템으로 이러한 요청을 전송할 수 있다. 외부 프론트 엔드 시스템은 장바구니 페이지(예를 들면, 도 1d)를 생성할 수 있다. 일부 실시예에서, 장바 구니 페이지는 사용자가 가상의 \"쇼핑 장바구니(shopping cart)\"에 추가한 제품을 나열한다. 사용자 디바이스는 SRP, SDP, 또는 다른 페이지의 아이콘을 클릭하거나, 상호 동작함으로써 장바구니 페이지를 요청할 수 있다. 일 부 실시예에서, 장바구니 페이지는 사용자가 장바구니에 추가한 모든 제품 뿐 아니라 각 제품의 수량, 각 제품 의 품목당 가격, 관련 수량에 기초한 각 제품의 가격, PDD에 관한 정보, 배달 방법, 배송 비용, 쇼핑 장바구니 의 제품을 수정(예를 들면, 수량의 삭제 또는 수정)하기 위한 사용자 인터페이스 요소, 다른 제품의 주문 또는 제품의 정기적인 배달 설정에 대한 옵션, 할부(interest payment) 설정에 대한 옵션, 구매를 진행하기 위한 사 용자 인터페이스 요소 등과 같은 장바구니의 제품에 관한 정보를 나열할 수 있다. 사용자 디바이스의 사용자는 쇼핑 장바구니에 있는 제품의 구매를 시작하기 위해 사용자 인터페이스 요소(예를 들면, \"지금 구매(Buy Now)\"라고 적혀있는 버튼)를 클릭하거나, 이와 상호 동작할 수 있다. 그렇게 하면, 사용자 디바이스는 구매를 시작하 기 위해 이러한 요청을 외부 프론트 엔드 시스템으로 전송할 수 있다. 외부 프론트 엔드 시스템은 구매를 시작하는 요청을 수신하는 것에 응답하여 주문 페이지(예를 들면, 도 1e)를 생성할 수 있다. 일부 실시예에서, 주문 페이지는 쇼핑 장바구니로부터의 아이템을 재나열하고, 결제 및 배송 정보의 입력을 요청한다. 예를 들면, 주문 페이지는 쇼핑 장바구니의 아이템 구매자에 관한 정보(예를 들 면, 이름, 주소, 이메일 주소, 전화번호), 수령인에 관한 정보(예를 들면, 이름, 주소, 전화번호, 배달 정보), 배송 정보(예를 들면, 배달 및/또는 픽업 속도/방법), 결제 정보(예를 들면, 신용 카드, 은행 송금, 수표, 저장 된 크레딧), 현금 영수증을 요청하는 사용자 인터페이스 요소(예를 들면, 세금 목적) 등을 요청하는 섹션을 포 함할 수 있다. 외부 프론트 엔드 시스템은 사용자 디바이스에 주문 페이지를 전송할 수 있다. 사용자 디바이스는 주문 페이지에 정보를 입력하고 외부 프론트 엔드 시스템으로 정보를 전송하는 사용자 인터페이스 요소를 클릭하거나, 상호 동작할 수 있다. 그로부터, 외부 프론트 엔드 시스템은 정보를 시스 템 내의 다른 시스템으로 전송하여 쇼핑 장바구니의 제품으로 새로운 주문을 생성하고 처리할 수 있도록 한다. 일부 실시예에서, 외부 프론트 엔드 시스템은 판매자가 주문과 관련된 정보를 전송 및 수신할 수 있도록 추가로 구성될 수 있다. 일부 실시예에서, 내부 프론트 엔드 시스템은 내부 사용자(예를 들면, 시스템을 소유, 운영 또는 임 대하는 조직의 직원)가 시스템 내의 하나 이상의 시스템과 상호작용할 수 있게 하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들면, 시스템이 사용자가 아이템에 대한 주문을 할 수 있게 하는 시스템의 프레젠테 이션을 가능하게 하는 실시예에서, 내부 프론트 엔드 시스템은 내부 사용자가 주문에 대한 진단 및 통계 정보를 볼 수 있게 하고, 아이템 정보를 수정하며, 또는 주문에 대한 통계를 검토할 수 있게 하는 웹 서버로서 구현될 수 있다. 예를 들면, 내부 프론트 엔드 시스템은 Apache HTTP 서버, Microsoft Internet Information Services(IIS), NGINX 등과 같은 소프트웨어를 실행하는 컴퓨터 또는 컴퓨터들로서 구현될 수 있다. 다른 실시예에서, 내부 프론트 엔드 시스템은 (도시되지 않은 다른 디바이스뿐 아니라) 시스템 내에 나타낸 시스템 또는 디바이스로부터 요청을 수신 및 처리하고, 그러한 요청에 기초하여 데이터베이스 및 다른 데이터 저장 장치로부터 정보를 획득하며, 획득한 정보에 기초하여 수신된 요청에 대한 응답을 제공하도록 설계된 커스텀 웹 서버 소프트웨어를 실행할 수 있다. 일부 실시예에서, 내부 프론트 엔드 시스템은 웹 캐싱 시스템, 데이터베이스, 검색 시스템, 결제 시스템, 분석 시스템, 주문 모니터링 시스템 등 중 하나 이상을 포함할 수 있다. 일 양상에서, 내부 프론트 엔드 시스템 은 이들 시스템 중 하나 이상을 포함할 수 있는 반면, 다른 양상에서는 내부 프론트 엔드 시스템은 이들 시스템 중 하나 이상에 연결된 인터페이스(예를 들면, 서버 대 서버, 데이터베이스 대 데이터베이스, 또는 다른 네트워크 연결)를 포함할 수 있다. 일부 실시예에서, 운송 시스템은 시스템 내의 시스템 또는 디바이스와 모바일 디바이스(107A-107C) 간의 통신을 가능하게 하는 컴퓨터 시스템으로서 구현될 수 있다. 일부 실시예에서, 운송 시스템은 하나 이상의 모바일 디바이스(107A-107C)(예를 들면, 휴대 전화, 스마트폰, PDA 등)로부터 정보를 수신할 수 있다. 예를 들면, 일부 실시예에서, 모바일 디바이스(107A-107C)는 배달원에 의해 동작되는 디바이스를 포함할 수 있 다. 정규직, 임시직 또는 교대 근무자일 수 있는 배달원은 사용자에 의해 주문된 제품을 포함하는 패키지의 배 달을 위해 모바일 디바이스(107A-107C)를 이용할 수 있다. 예를 들면, 패키지를 배달하기 위해, 배달원은 배달 할 패키지와 배달할 위치를 나타내는 모바일 디바이스 상의 알림을 수신할 수 있다. 배달 장소에 도착하면, 배 달원은 (예를 들면, 트럭의 뒤나 패키지들의 크레이트(crate) 내의) 패키지를 찾을 수 있고, 모바일 디바이스를 사용하여 패키지 상의 식별자와 관련된 데이터(예를 들면, 바코드, 이미지, 문자열, RFID 태그 등)를 스캔하거 나 캡처하며, (예를 들면, 현관문에 놓거나, 경비원에게 맡기거나, 수령인에게 전달하는 것 등에 의해) 패키지 를 배달할 수 있다. 일부 실시예에서, 배달원은 모바일 디바이스를 이용하여 패키지의 사진(들)을 찍거나 및/또 는 서명을 받을 수 있다. 모바일 디바이스는, 예를 들면, 시간, 날짜, GPS 위치, 사진(들), 배달원에 관련된 식 별자, 모바일 디바이스에 관련된 식별자 등을 포함하는 배달에 관한 정보를 포함하는 정보를 운송 시스템 에 보낼 수 있다. 운송 시스템은 시스템 내의 다른 시스템에 의한 액세스를 위해 데이터베이스(미도 시)에 이러한 정보를 저장할 수 있다. 일부 실시예에서, 운송 시스템은 다른 시스템에 특정 패키지의 위치 를 나타내는 트래킹 데이터를 준비 및 전송하기 위해 이러한 정보를 사용할 수 있다. 일부 실시예에서, 특정 사용자는, 한 종류의 모바일 디바이스를 사용할 수 있는 반면(예를 들면, 정규 직원은 바코드 스캐너, 스타일러스 및 다른 디바이스와 같은 커스텀 하드웨어를 갖는 전문 PDA를 사용할 수 있음), 다 른 사용자는 다른 종류의 모바일 디바이스를 사용할 수 있다(예를 들면, 임시 또는 교대 근무 직원이 기성 휴대 전화 및/또는 스마트폰을 사용할 수 있음). 일부 실시예에서, 운송 시스템은 사용자를 각각의 디바이스와 연관시킬 수 있다. 예를 들면, 운송 시스템 은 사용자(예를 들면, 사용자 식별자, 직원 식별자, 또는 전화번호에 의해 표현됨)와 모바일 디바이스(예 를 들면, International Mobile Equipment Identity(IMEI), International Mobile Subscription Identifier(IMSI), 전화번호, Universal Unique Identifier(UUID), 또는 Globally Unique Identifier(GUID)에 의해 표현됨) 간의 연관성을 저장할 수 있다. 운송 시스템은, 다른 것들 중에 작업자의 위치, 작업자의 효 율성, 또는 작업자의 속도를 결정하기 위해 데이터베이스에 저장된 데이터를 분석하기 위해 배달시 수신되는 데 이터와 함께 이러한 연관성을 사용할 수 있다. 일부 실시예에서, 판매자 포털은 판매자 또는 다른 외부 엔터티(entity)가 시스템 내의 하나 이상의 시스템과 전기적으로 통신할 수 있게 하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들면, 판매자는 판매자 포털을 이용하여 판매자가 시스템을 통해 판매하고자 하는 제품에 대한 제품 정보, 주문 정보, 연락 처 정보 등을 업로드하거나 제공하기 위하여 컴퓨터 시스템(미도시)을 이용할 수 있다. 일부 실시예에서, 배송 및 주문 트래킹 시스템은 고객(예를 들면, 디바이스(102A-102B)를 사용하는 사용자)에 의해 주문된 제품을 포함하는 패키지의 위치에 관한 정보를 수신, 저장 및 포워딩하는 컴퓨터 시스템 으로서 구현될 수 있다. 일부 실시예에서, 배송 및 주문 트래킹 시스템은 고객에 의해 주문된 제품을 포함 하는 패키지를 배달하는 배송 회사에 의해 운영되는 웹 서버(미도시)로부터 정보를 요청하거나 저장할 수 있다. 일부 실시예에서, 배송 및 주문 트래킹 시스템은 시스템에 나타낸 시스템들로부터 정보를 요청하고 저장할 수 있다. 예를 들면, 배송 및 주문 트래킹 시스템은 운송 시스템으로부터 정보를 요청할 수 있다. 전술한 바와 같이, 운송 시스템은 사용자(예를 들면, 배달원) 또는 차량(예를 들면, 배달 트럭) 중 하나 이상과 연관된 하나 이상의 모바일 디바이스(107A-107C)(예를 들면, 휴대 전화, 스마트폰, PDA 등)로부터 정보를 수신할 수 있다. 일부 실시예에서, 배송 및 주문 트래킹 시스템은 또한, 풀필먼트 센터(예를 들면, 풀필먼트 센터) 내부의 개별 제품의 위치를 결정하기 위해 창고 관리 시스템(WMS)으로부터 정보를 요 청할 수 있다. 배송 및 주문 트래킹 시스템은 운송 시스템 또는 WMS 중 하나 이상으로부터 데이 터를 요청하고, 이를 처리하며, 요청시 디바이스(예를 들면, 사용자 디바이스(102A, 102B))로 이를 제공할 수 있다. 일부 실시예에서, 풀필먼트 최적화(FO) 시스템은 다른 시스템(예를 들면, 외부 프론트 엔드 시스템 및/또는 배송 및 주문 트래킹 시스템)으로부터의 고객 주문에 대한 정보를 저장하는 컴퓨터 시스템으로서 구현될 수 있다. 또한 FO 시스템은 특정 아이템이 유지 또는 저장되는 곳을 나타내는 정보를 저장할 수 있 다. 예를 들면, 특정 아이템은 하나의 풀필먼트 센터에만 저장될 수 있는 반면, 다른 특정 아이템은 다수의 풀 필먼트 센터에 저장될 수 있다. 또 다른 실시예에서, 특정 풀필먼트 센터는 아이템의 특정 세트(예를 들면, 신 선한 농산물 또는 냉동 제품)만을 저장하도록 구성될 수 있다. FO 시스템은 이러한 정보뿐 아니라 관련 정 보(예를 들면, 수량, 크기, 수령 날짜, 유통 기한 등)를 저장한다. 또한 FO 시스템은 각 제품에 대해 대응하는 PDD(약속된 배달 날짜)를 계산할 수 있다. 일부 실시예에서, PDD는 하나 이상의 요소에 기초할 수 있다. 예를 들면, FO 시스템은 제품에 대한 과거 수요(예를 들면, 그 제품이 일정 기간 동안 얼마나 주문되었는지), 제품에 대한 예측된 수요(예를 들면, 얼마나 많은 고객이 다가오 는 기간 동안 제품을 주문할 것으로 예상되는지), 일정 기간 동안 얼마나 많은 제품이 주문되었는지를 나타내는 네트워크 전반의 과거 수요, 다가오는 기간 동안 얼마나 많은 제품이 주문될 것으로 예상되는지를 나타내는 네 트워크 전반의 예측된 수요, 각각의 제품을 저장하는 각 풀필먼트 센터에 저장된 제품의 하나 이상의 개수, 그 제품에 대한 예상 또는 현재 주문 등에 기초하여 제품에 대한 PDD를 계산할 수 있다. 일부 실시예에서, FO 시스템은 주기적으로(예를 들면, 시간별로) 각 제품에 대한 PDD를 결정하고, 검색 또 는 다른 시스템(예를 들면, 외부 프론트 엔드 시스템, SAT 시스템, 배송 및 주문 트래킹 시스템 )으로의 전송을 위해 이를 데이터베이스에 저장할 수 있다. 다른 실시예에서, FO 시스템은 하나 이상 의 시스템(예를 들면, 외부 프론트 엔드 시스템, SAT 시스템, 배송 및 주문 트래킹 시스템)으로 부터 전자 요청을 수신하고 요구에 따라 PDD를 계산할 수 있다. 일부 실시예에서, 풀필먼트 메시징 게이트웨이(FMG)는 FO 시스템과 같은 시스템 내의 하나 이상 의 시스템으로부터 어느 한 포맷 또는 프로토콜로 요청 또는 응답을 수신하고, 이를 다른 포맷 또는 프로토콜로 변환하고, 이를 변환된 포맷 또는 프로토콜로 WMS 또는 제3자 풀필먼트 시스템(121A, 121B, 또는 121C)과 같은 다른 시스템에 포워딩하며, 반대의 경우도 가능한 컴퓨터 시스템으로서 구현될 수 있다. 일부 실시예에서, 공급 체인 관리(SCM) 시스템은 예측 기능을 수행하는 컴퓨터 시스템으로서 구현될 수 있 다. 예를 들면, SCM 시스템은, 예를 들어 제품에 대한 과거 수요, 제품에 대한 예측된 수요, 네트워크 전 반의 과거 수요, 네트워크 전반의 예측된 수요, 각각의 풀필먼트 센터에 저장된 제품 개수, 각 제품에 대 한 예상 또는 현재 주문 등에 기초하여, 특정 제품에 대한 수요의 수준을 예측할 수 있다. 이러한 예측된 수준 과 모든 풀필먼트 센터의 각 제품의 수량에 응답하여, SCM 시스템은 특정 제품에 대한 예측 수요를 만족시 키기 위하여, 하나 이상의 구매 주문을 생성하고 충분한 양을 비축할 수 있다. 일부 실시예에서, 창고 관리 시스템(WMS)은 작업 흐름을 모니터링하는 컴퓨터 시스템으로서 구현될 수 있 다. 예를 들면, WMS는 개개의 디바이스(예를 들면, 디바이스(107A-107C 또는 119A-119C))로부터 개별 이벤 트를 나타내는 이벤트 데이터를 수신할 수 있다. 예를 들면, WMS는 패키지를 스캔하기 위해 이들 디바이스 중 하나를 사용한 것을 나타내는 이벤트 데이터를 수신할 수 있다. 풀필먼트 센터 및 도 2에 관하여 이하 에서 논의되는 바와 같이, 풀필먼트 프로세스 동안, 패키지 식별자(예를 들면, 바코드 또는 RFID 태그 데이터) 는 특정 단계에서 기계(예를 들면, 자동 또는 핸드헬드 바코드 스캐너, RFID 판독기, 고속 카메라, 태블릿 (119A), 모바일 디바이스/PDA(119B), 컴퓨터(119C)와 같은 디바이스 등)에 의해 스캔되거나 판독될 수 있다. WMS는 패키지 식별자, 시간, 날짜, 위치, 사용자 식별자, 또는 다른 정보와 함께 대응하는 데이터베이스 (미도시)에 패키지 식별자의 스캔 또는 판독을 나타내는 각 이벤트를 저장할 수 있고, 이러한 정보를 다른 시스 템(예를 들면, 배송 및 주문 트래킹 시스템)에 제공할 수 있다. 일부 실시예에서, WMS는 하나 이상의 디바이스(예를 들면, 디바이스(107A-107C 또는 119A-119C))와 시스템 에 연관된 하나 이상의 사용자를 연관시키는 정보를 저장할 수 있다. 예를 들면, 몇몇 상황에서, (파트 타 임 또는 풀 타임 직원과 같은) 사용자는 모바일 디바이스(예를 들면, 모바일 디바이스는 스마트폰임)를 소유한 다는 점에서, 모바일 디바이스와 연관될 수 있다. 다른 상황에서, 사용자는 임시로 모바일 디바이스를 보관한다 는 점에서(예를 들면, 하루의 시작에서부터 모바일 디바이스를 대여받은 사용자가, 하루 동안 그것을 사용하고, 하루가 끝날 때 그것을 반납할 것임), 모바일 디바이스와 연관될 수 있다. 일부 실시예에서, WMS는 시스템과 연관된 각각의 사용자에 대한 작업 로그를 유지할 수 있다. 예를 들면, WMS는 임의의 할당된 프로세스(예를 들면, 트럭에서 내리기, 픽업 구역에서 아이템을 픽업하기, 리 빈 월(rebin wall) 작업, 아이템 패킹하기), 사용자 식별자, 위치(예를 들면, 풀필먼트 센터의 플로어 (floor) 또는 구역), 직원에 의해 시스템을 통해 이동된 유닛의 수(예를 들면, 픽업된 아이템의 수, 패킹된 아 이템의 수), 디바이스(예를 들면, 디바이스(119A-119C))와 관련된 식별자 등을 포함하는 각 직원과 관련된 정보 를 저장할 수 있다. 일부 실시예에서, WMS는 디바이스(119A-119C)에서 동작되는 계시(timekeeping) 시스템 과 같은 계시 시스템으로부터 체크-인 및 체크-아웃 정보를 수신할 수 있다. 일부 실시예에서, 제3자 풀필먼트 (3PL) 시스템(121A-121C)은 물류 및 제품의 제3자 제공자와 관련된 컴퓨터 시 스템을 나타낸다. 예를 들면, (도 2와 관련하여 이하에서 후술하는 바와 같이) 일부 제품이 풀필먼트 센터(20 0)에 저장되는 반면, 다른 제품은 오프 사이트(off-site)에 저장될 수 있거나, 수요에 따라 생산될 수 있거나, 달리 풀필먼트 센터에 저장될 수 없을 수 있다. 3PL 시스템(121A-121C)은 FO 시스템으로부터 (예를 들면, FMG를 통해) 주문을 수신하도록 구성될 수 있으며, 고객에게 직접 제품 및/또는 서비스(예를 들면, 배달 또는 설치)를 제공할 수 있다. 일부 실시예에서, 하나 이상의 3PL 시스템(121A-112C)은 시스템의 일 부일 수 있는 반면, 다른 실시예에서, 하나 이상의 3PL 시스템(121A-112C)은 시스템의 외부에 존재할 수 있다(예를 들면, 제3자 제공자에 의해 소유되거나 운영됨). 일부 실시예에서, 풀필먼트 센터 인증 시스템(FC Auth)은 다양한 기능을 갖는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들면, 일부 실시예에서, FC Auth는 시스템 내의 하나 이상의 다른 시스템에 대한 단일 -사인 온(single-sign on, SSO) 서비스로서 작동할 수 있다. 예를 들면, FC Auth는 내부 프론트 엔드 시 스템을 통해 사용자가 로그인할 수 있도록 하고, 사용자가 배송 및 주문 트래킹 시스템에서 리소스에 액세스하기 위해 유사한 권한을 갖고 있다고 결정하며, 두 번째 로그인 프로세스 요구 없이 사용자가 그러한 권 한에 액세스할 수 있게 할 수 있다. 다른 실시예에서, FC Auth는 사용자(예를 들면, 직원)가 자신을 특정 작업과 연관시킬 수 있게 할 수 있다. 예를 들면, 일부 직원은 (디바이스(119A-119C)와 같은) 전자 디바이스를 갖지 않을 수 있으며, 대신 하루 동안 풀필먼트 센터 내에서 작업들 사이 및 구역들 사이에서 이동할 수있다. FC Auth는 이러한 직원들이 상이한 시간 대에 수행 중인 작업과 속해 있는 구역을 표시할 수 있도록 구성될 수 있다. 일부 실시예에서, 노동 관리 시스템(LMS)은 직원(풀-타임 및 파트-타임 직원을 포함함)에 대한 출근 및 초 과 근무 정보를 저장하는 컴퓨터 시스템으로서 구현될 수 있다. 예를 들면, LMS는 FC Auth, WMS, 디바이스(119A-119C), 운송 시스템, 및/또는 디바이스(107A-107C)로부터 정보를 수신할 수 있 다. 도 1a에 나타낸 특정 구성은 단지 예시일 뿐이다. 예를 들면, 도 1a는 FO 시스템에 연결된 FC Auth 시스템 을 나타낸 반면, 모든 실시예가 이러한 특정 구성을 필요로 하는 것은 아니다. 실제로, 일부 실시예에서, 시스템 내의 시스템은 인터넷, 인트라넷, WAN(Wide-Area Network), MAN(Metropolitan-Area Network), IEEE 802.11a/b/g/n 표준을 따르는 무선 네트워크, 임대 회선 등을 포함하는 하나 이상의 공공 또는 사설 네트 워크를 통해 연결될 수 있다. 일부 실시예에서, 시스템 내의 하나 이상의 시스템은 데이터 센터, 서버 팜 (farm) 등에서 구현되는 하나 이상의 가상 서버로서 구현될 수 있다. 도 2는 풀필먼트 센터를 나타낸다. 풀필먼트 센터는 주문시 고객에게 배송하기 위한 아이템을 저장하 는 물리적 장소의 예시이다. 풀필먼트 센터(FC)는 다수의 구역으로 분할될 수 있으며, 각각이 도 2에 도시 된다. 일부 실시예에서, 이러한 \"구역(zones)\"은 아이템을 수령하고, 아이템을 저장하고, 아이템을 검색하고, 아이템을 배송하는 과정의 상이한 스텝 사이의 가상 구분으로 생각될 수 있다. 따라서, \"구역\"이 도 2에 나타나 있으나, 일부 실시예에서, 구역의 다른 구분도 가능하고, 도 2의 구역은 생략, 복제, 또는 수정될 수 있다. 인바운드 구역은 도 1a의 시스템을 사용하여 제품을 판매하고자 하는 판매자로부터 아이템이 수신되 는 FC의 영역을 나타낸다. 예를 들면, 판매자는 트럭을 사용하여 아이템(202A, 202B)을 배달할 수 있 다. 아이템(202A)은 자신의 배송 팔레트(pallet)를 점유하기에 충분히 큰 단일 아이템을 나타낼 수 있는 반면, 아이템(202B)은 공간을 절약하기 위해 동일한 팔레트 상에 함께 적층되는 아이템의 세트를 나타낼 수 있다. 작업자는 인바운드 구역의 아이템을 수령하고, 선택적으로 컴퓨터 시스템(미도시)을 사용하여 아이템이 손 상되었는지 및 정확한지를 체크할 수 있다. 예를 들면, 작업자는 아이템(202A, 202B)의 수량을 아이템의 주문 수량과 비교하기 위해 컴퓨터 시스템을 사용할 수 있다. 수량이 일치하지 않는다면, 해당 작업자는 아이템 (202A, 202B) 중 하나 이상을 거부할 수 있다. 수량이 일치한다면, 작업자는 그 아이템들을 (예를 들면, 짐수레 (dolly), 핸드트럭(handtruck), 포크리프트(forklift), 또는 수작업으로) 버퍼 구역으로 운반할 수 있다. 버퍼 구역은, 예를 들면, 예측된 수요를 충족시키기 위해 픽업 구역에 그 아이템이 충분한 수량만큼 있기 때문에, 픽업 구역에서 현재 필요하지 않은 아이템에 대한 임시 저장 영역일 수 있다. 일부 실시예에서, 포크리 프트는 버퍼 구역 주위와 인바운드 구역 및 드롭 구역 사이에서 아이템을 운반하도록 작동 한다. (예를 들면, 예측된 수요로 인해) 픽업 구역에 아이템(202A, 202B)이 필요하면, 포크리프트는 아이템 (202A, 202B)을 드롭 구역으로 운반할 수 있다. 드롭 구역은 픽업 구역으로 운반되기 전에 아이템을 저장하는 FC의 영역일 수 있다. 픽업 동작 에 할당된 작업자(\"피커(picker)\")는 픽업 구역의 아이템(202A, 202B)에 접근하고, 픽업 구역에 대한 바코드를 스캔하며, 모바일 디바이스(예를 들면, 디바이스(119B))를 사용하여 아이템(202A, 202B)과 관련된 바코드를 스 캔할 수 있다. 그 다음 피커는 (예를 들면, 아이템을 카트에 놓거나 운반함으로써) 픽업 구역에 아이템을 가져갈 수 있다. 픽업 구역은 아이템이 저장 유닛에 저장되는 FC의 영역일 수 있다. 일부 실시예에서, 저장 유닛은 물리적 선반, 책꽂이, 박스, 토트(tote), 냉장고, 냉동고, 저온 저장고 등 중 하나 이상을 포함할 수 있다. 일부 실시예에서, 픽업 구역은 다수의 플로어로 편성될 수 있다. 일부 실시예에서, 작업자 또는 기계는, 예를 들면, 포크리프트, 엘리베이터, 컨베이어 벨트, 카트, 핸드트럭, 짐수레, 자동화된 로봇 또는 디 바이스, 또는 수작업을 포함하는 다양한 방식으로 아이템을 픽업 구역으로 운반할 수 있다. 예를 들면, 피 커는 아이템(202A, 202B)을 드롭 구역의 핸드트럭 또는 카트에 놓을 수 있으며, 아이템(202A, 202B)을 픽 업 구역으로 가져갈 수 있다. 피커는 저장 유닛 상의 특정 공간과 같은 픽업 구역의 특정 스팟에 아이템을 배치(또는 \"적재 (stow)\")하라는 명령을 수신할 수 있다. 예를 들면, 피커는 모바일 디바이스(예를 들면, 디바이스(119B))를 사 용하여 아이템(202A)을 스캔할 수 있다. 디바이스는, 예를 들면, 통로, 선반 및 위치를 나타내는 시스템을 사용 하여, 아이템(202A)을 적재해야 하는 위치를 나타낼 수 있다. 그 다음 디바이스는 그 위치에 아이템(202A)을 적재하기 전에 피커가 그 위치에서 바코드를 스캔하도록 할 수 있다. 디바이스는 도 1a의 WMS와 같은 컴퓨터 시스템에 아이템(202A)이 디바이스(119B)를 사용하는 사용자에 의해 그 위치에 적재되었음을 나타내는 데이터를 (예를 들면, 무선 네트워크를 통해) 전송할 수 있다. 일단 사용자가 주문을 하면, 피커는 저장 유닛으로부터 하나 이상의 아이템을 검색하기 위해 디바이 스(119B)로 명령을 수신할 수 있다. 피커는 아이템을 검색하고, 아이템 상의 바코드를 스캔하며, 운 송 기구 상에 놓을 수 있다. 일부 실시예에서, 운송 기구가 슬라이드로서 표현되지만, 운송 기구는 컨베이어 벨트, 엘리베이터, 카트, 포크리프트, 핸드트럭, 짐수레, 카트 등 중 하나 이상으로서 구현될 수 있다. 그 다음 아이템은 패킹 구역에 도착할 수 있다. 패킹 구역은 아이템이 픽업 구역으로부터 수령되고 고객에게 최종 배송하기 위해 박스 또는 가방에 패킹되는 FC의 영역일 수 있다. 패킹 구역에서, 아이템을 수령하도록 할당된 작업자(\"리빈 작업자 (rebin worker)\")는 픽업 구역으로부터 아이템을 수령하고, 그것이 어느 주문에 대응하는지를 결정할 것이다. 예를 들면, 리빈 작업자는 아이템 상의 바코드를 스캔하기 위해 컴퓨터(119C)와 같은 디바이스를 사용할 수 있다. 컴퓨터(119C)는 아이템이 어느 주문과 관련이 있는지를 시각적으로 나타낼 수 있다. 이는, 예를 들면, 주문에 대응하는 월 상의 공간 또는 \"셀(cell)\"을 포함할 수 있다. (예를 들면, 셀이 주 문의 모든 아이템을 포함하기 때문에) 일단 주문이 완료되면, 리빈 작업자는 패킹 작업자(또는 \"패커(packe r)\")에게 주문이 완료된 것을 알릴 수 있다. 패커는 셀로부터 아이템을 검색하고, 배송을 위해 이들을 박스 또 는 가방에 놓을 수 있다. 그 다음 패커는, 예를 들면, 포크리프트, 카트, 짐수레, 핸드트럭, 컨베이어 벨트, 수 작업 또는 다른 방법을 통해, 박스 또는 가방을 허브 구역으로 보낼 수 있다. 허브 구역은 패킹 구역으로부터 모든 박스 또는 가방(\"패키지(packages)\")을 수신하는 FC의 영 역일 수 있다. 허브 구역의 작업자 및/또는 기계는 패키지를 검색하고, 각 패키지가 배달 영역의 어 느 부분으로 배달되도록 되어 있는지를 결정하며, 패키지를 적합한 캠프 구역으로 보낼 수 있다. 예를 들 면, 배달 영역이 2개의 작은 하위 영역을 갖는다면, 패키지는 2개의 캠프 구역 중 하나로 보내질 것이다. 일부 실시예에서, 작업자 또는 기계는 최종 목적지를 결정하기 위해 (예를 들면, 디바이스(119A-119C) 중 하나 를 사용하여) 패키지를 스캔할 수 있다. 패키지를 캠프 구역으로 보내는 것은, 예를 들면, (예를 들면, 우 편 번호에 기초하여) 패키지가 향하는 지리적 영역의 부분을 결정하고, 지리적 영역의 부분과 관련된 캠프 구역 을 결정하는 것을 포함할 수 있다. 일부 실시예에서, 캠프 구역은 루트(route) 및/또는 서브 루트로 분류하기 위해 허브 구역으로부터 패키지가 수령되는 하나 이상의 빌딩, 하나 이상의 물리적 공간, 또는 하나 이상의 영역을 포함할 수 있다. 일 부 실시예에서, 캠프 구역은 FC로부터 물리적으로 분리되어 있는 반면, 다른 실시예에서는 캠프 구역 은 FC의 일부를 형성할 수 있다. 캠프 구역의 작업자 및/또는 기계는, 예를 들면, 목적지와 기존 루트 및/또는 서브 루트의 비교, 각각의 루트 및/또는 서브 루트에 대한 작업부하의 계산, 하루 중 시각, 배송 방법, 패키지를 배송하기 위한 비용, 패키지의 아이템과 관련된 PDD 등에 기초하여 패키지가 어느 루트 및/또는 서브 루트와 연관되 어야 하는지를 결정할 수 있다. 일부 실시예에서, 작업자 또는 기계는 최종 목적지를 결정하기 위해 (예를 들면, 디바이스(119A-119C) 중 하나를 사용하여) 패키지를 스캔할 수 있다. 일단 패키지가 특정 루트 및/ 또는 서브 루트에 할당되면, 작업자 및/또는 기계는 배송될 패키지를 운반할 수 있다. 예시적인 도 2에서, 캠프 구역은 트럭, 자동차, 및 배달원(224A, 224B)을 포함한다. 일부 실시예에서, 배달원 (224A)이 트럭을 운전할 수 있는데, 배달원(224A)은 FC에 대한 패키지를 배달하는 풀-타임 직원이며, 트럭은 FC를 소유, 임대 또는 운영하는 동일한 회사에 의해 소유, 임대, 또는 운행된다. 일부 실시예에서, 배달원(224B)이 자동차를 운전할 수 있는데, 배달원(224B)은 필요에 따라(예를 들면, 계절에 따라) 배달하 는 \"플렉스(flex)\" 또는 비상시적인 작업자이다. 자동차는 배달원(224B)에 의해 소유, 임대 또는 운행될 수 있다. 도 3a는 인테이크(intake) 서브-시스템의 예시적인 픽토그래픽(pictographic) 표시를 나타낸다. 인테이크 서브-시스템은 소스 어플리케이션 프로그램 인터페이스(application program interface, API)로부터 의 통신의 초기 처리를 위해 지정될 수 있다. 소스 API는 고객, 배달원, 관리자, 및/또는 판매자가 사용하 도록 특별히 구성된 다수의 API 중 임의의 하나일 수 있다. 소스 API는 모바일 디바이스, 데스크톱 컴퓨터, 어댑터, 컨트롤러, 서버, 또는 API 통신을 송신 및/또는 수신할 수 있는 임의의 다른 디바이스와 같은 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구현될 수 있다. 몇몇 실시예들에서,인테이크 서브-시스템 및/또는 인테이크 서브-시스템의 구성은 (예를 들면, 도 3b-3d에 도시된 바와 같은) 다른 서브-시스템에 통신 가능하게 결합될 수 있다. 또한 인테이크 서브-시스템은 소스 API가 통신 가능하게 결합될 수 있는 다수의 엔드포인트 API(30 4)를 포함할 수 있다. 일부 실시예에서, 엔드포인트 API는 유일한 하나의 엔드포인트 API일 수 있다. 엔 드포인트 API는 API 제공자(미도시)에 의해 관리될 수 있는 복수의 컨트롤러, 어댑터, 및/또는 다른 컴퓨 팅 디바이스를 포함할 수 있다. 예를 들면, 엔드포인트 API는 컨트롤러(306a), 컨트롤러(306b), 컨트롤러 (306c), 컨트롤러(306d), 및/또는 컨트롤러(306e)와 같은 컨트롤러의 조합에 의해 구현될 수 있다. 일부 실시예 에서, 컨트롤러는 특정 엔티티(예를 들면, 판매자)에 대한 동작을 취급하기 위해 지정될 수 있다. 컨트롤러는 서로 다른 엔티티 간(예를 들면, 소스 API와 데이터 취합기 간) 데이터흐름을 관리할 수 있는 하드웨 어 디바이스 또는 소프트웨어 프로그램일 수 있다. 예를 들면, 컨트롤러는, 제한 없이, 플래시 컨트롤러, 어플 리케이션 전달 컨트롤러, 주 영역 컨트롤러, 베이스보드 관리 컨트롤러, 및/또는 세션 경계 컨트롤러일 수 있다. 일부 실시예에서, 소스 API로부터의 통신은 통신과 연관된 소스에 기초하여 특정 엔드포인트 API 또는 컨트롤러로 지향될 수 있다. 예를 들면, API 제공자는 소스 API로부터 통신을 수신하고, (예를 들면, 메시지 식별자, 인터넷 프로토콜(internet protocol, IP) 주소, 매체 접근 제어(media access control, MAC) 주소, 통신 포맷, 및/또는 다른 고유 식별자에 기초하여) 통신의 소스 및/또는 유형을 결정할 수 있다. 식별된 통신 소스 및/또는 통신 유형에 기초하여, API 제공자는 특정 소스 및/또는 유형을 가지는 통신을 위해 구성될 수 있는 특정 컨트롤러에게 통신을 향하게 할 수 있다. 추가 예시로, API 제공자는 소스 API로부터의 통신 이 이것의 통신 소스로서 소비자 디바이스를 가지고 이것의 통신 유형으로서 반환 요청을 가지는 것으로 결정할 수 있고, 수신된 통신의 소스 및/또는 유형을 가지는 통신을 취급하도록 구성(예를 들면, 반환 요청 통신을 위 해 구성)될 수 있는 엔드포인트 API(예를 들면, 컨트롤러(306b))에게 통신을 향하게 할 수 있다. 또한 인테이크 서브-시스템은 소스 API로부터의 통신을 검증할 수 있고, 엔드포인트 API에 통신 가능하게 결합될 수 있는 검증기를 포함할 수 있다. 검증기는 엔드포인트 API 내부(예를 들면, 컨트롤러의 일부로서)에 존재할 수 있거나, 또는 엔드포인트 API가 연결될 수 있는 서버와 같은 별개의 구 성으로 존재할 수 있다. 검증기는 검증 프로세스(예를 들면, 소스 API로부터 수신된 통신을 검증하는 프로세스)를 수행하도록 구성된 다양한 구성(예를 들면, 모듈, 디바이스, 프로세서, 등)을 포함할 수 있다. 예 를 들면, 검증기는 검증기 호출부, (예를 들면, 통신으로부터의 데이터를 재포맷하기 위한) 검증 전처리부, (예를 들면, 데이터에 대한 검증 동작을 수행하기 위한) 검증기 프로세서, (예를 들면, 검증된 데이 터를 도 3c의 규칙 엔진과 같은 다른 엔티티에 의해 해석 가능한 포맷으로 재포맷하기 위한) 검증기 후처 리부, 검증 관리부, 및/또는 (다른 서브-시스템으로 메시지를 향하게 할 수 있는) 메시지 퍼블리셔를 포함할 수 있다. 또한 인테이크 서브-시스템은 검증기가 통신 가능하게 결합될 수 있는 예외 핸들러를 포함할 수 있다. 예외 핸들러는 검증기의 일부일 수 있거나, 서버 또는 모바일 디바이스와 같은 별개의 디바이 스 또는 구성일 수 있다. 일부 실시예에서, 검증기는 검증기에 의해 결정되었을 수 있는 통신의 검증 결과에 기초하여 통신을 예외 핸들러로 향하게 할 수 있다. 예를 들면, 통신이 검증기에 의해 구현 된 적어도 하나의 규칙 또는 알고리즘에 따르지 않으면, 검증기는 통신을 예외 핸들러에게 향하게 할 수 있다. 일부 실시예에서, 예외 핸들러는 통신에 의해 부합되지 아니한 적어도 하나의 규칙 또는 알고리즘에 기반하여 통신으로부터의 정보를 재포맷, 분할, 파스(parse), 태그, 및/또는 다른 방법으로 재구성 또는 전송 (예를 들면, 관리자 디바이스에게 경보를 발행함)하도록 구성될 수 있다. 예외 핸들러는 데이터 통합기 및/또는 기록 및 추적 모듈에 통신 가능하게 결합될 수 있다. 또한 인테이크 서브-시스템은 엔드포인트 API, 예외 핸들러, 및/또는 기록 및 추적 모듈과 같은 서로 다른 소스들로부터의 데이터를 취합할 수 있는 데이터 취합기를 포함할 수 있다. 데이터 취합기 는 서브-시스템의 구성과 서브-시스템(도 3b의 325, 도 3c의 355, 및 도 3d의 375)을 포함하는 다른 시스템의 디바이스 및/또는 구성뿐만 아니라, 임의의 디바이스 및/또는 서브-시스템의 구성과 통신 가능하 게 결합될 수 있다. 데이터 취합기는 다른 목적을 가지는 디바이스(예를 들면, 검증기)의 일부일 수 있고, 또는 서버 또는 모바일 디바이스와 같은 별개의 디바이스 또는 구성일 수 있다. 일부 실시예에서, 데이터 취합기는 데이터 취합 프로세스(예를 들면, 소스 API 및/또는 예외 핸들러와 같은 소스로부터의 데이터를 취합 및/또는 분석하는 프로세스)를 수행하도록 구성된 다양한 구성들(예를 들면, 모듈, 디바이스, 프 로세서, 등)을 포함할 수 있다. 예를 들면, 데이터 취합기는 데이터 캐싱 구성, 데이터 취합 구성, 데이터 변환 구성, 데이터 맵핑 구성, 및/또는 서비스 라우터를 포함할 수 있다.또한 인테이크 서브-시스템은 통신(예를 들면, API 소스로부터의 통신)과 연관된 데이터를 기록 및/ 또는 추적할 수 있는 기록 및 추적 모듈을 포함할 수 있다. 기록 및 추적 모듈은 다른 목적을 가지는 디바이스(예를 들면, 데이터 취합기)의 일부일 수 있고, 또는 서버 또는 모바일 디바이스와 같은 별개의 디바이스 또는 구성일 수 있다. 기록 및 추적 모듈은 데이터 취합 프로세스(예를 들면, 소스 API 및/ 또는 예외 핸들러와 같은 소스로부터의 데이터를 추적 및/또는 기록하는 프로세스)를 수행하도록 구성된 다양한 구성들(예를 들면, 모듈, 디바이스, 프로세서, 등)을 포함할 수 있다. 예를 들면, 기록 및 추적 모듈 은 추적기 및/또는 추적 분석기를 포함할 수 있다. 추적기는 API 소스, 검증기 등으로부터의 통신과 연관된 데이터와 같은 데이터를 추적하는 기능 을 수행할 수 있다. 일부 실시예에서, 추적기는 통신과 연관된 데이터에 추적 식별자 및/또는 스팬(span) 식별자를 추가하도록 구성될 수 있다. 일부 실시예에서, 추적기는 추적 및/또는 기록 데이터를 어디로 송 신할지, 추적 및/또는 기록을 보관할 임계 횟수, 데이터 포맷, 전송할 식별자의 특정 조합, 및/또는 추적할 특 정 라이브러리에 대한 정의와 같은 기록 및 추적에 대한 정의(예를 들면, 사용자-정의, 머신-정의, 및/또는 사 용자-정의와 머신-정의의 조합)을 유지할 수 있다. 일부 실시예에서, 추적기는 Spring Cloud Sleuth와 같 은 기능 제공자의 양상을 구현할 수 있다. 추적 분석기는 디바이스(예를 들면, 소스 API를 구현하는 디바이스)로부터의 통신과 연관될 수 있는 추적 데이터 및/또는 기록 데이터와 같은 데이터를 분석하는 기능을 수행할 수 있다. 예를 들면, 추적 분석기 는 타이밍 데이터(예를 들면, 예외가 발생한 시간, 예외의 빈도 등), 태그, 규칙 실패 데이터, 규칙 만족 데이터, 디바이스 식별자, 메시지 식별자, 및/또는 소스 API와 연관된 임의 데이터를 취합할 수 있다. 일 부 실시예에서, 추적 분석기는 추적 및/또는 로그 데이터의 시각적 표현(예를 들면, 필터링 가능한 데이터 의 차트, 선도(line diagram), 통계 및/또는 머신 학습 알고리즘에 의해 생성된 추천 등)을 생성할 수 있다. 일 부 실시예에서, 추적 분석기는 Zipkin과 같은 기능 제공자의 양상을 구현할 수 있다. 도 3b는 출력 서브-시스템의 예시적인 픽토그래픽 표시를 나타낸다. 출력 서브-시스템은 도 3d의 작 업 흐름 서브-시스템의 출력을 처리하기 위해 지정될 수 있다. 출력 서브-시스템은 도 3c의 외부 데 이터 소스로 처리된 출력을 전달하고, 도 3a의 기록 및 추적 모듈 및/또는 하나 이상의 외부 서비스 (339a-e)를 이용하여 기록 및/또는 추적되도록 처리된 출력을 전달할 수 있다. 출력 서브-시스템은 고객, 배달원, 관리자, 및/또는 판매자가 사용하도록 특별히 구성될 수 있다. 출력 서브-시스템은 프로세서, 메 모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구현될 수 있다. 일부 실시예에서, 출력 서브-시스 템 및/또는 출력 서브-시스템의 구성은 (예를 들면, 도 3a-3d에서 도시된 바와 같은) 다른 서브-시스 템에 통신 가능하게 결합될 수 있다. 출력 서브-시스템은 도 3d의 작업 흐름 서브-시스템에 통신 가능하게 결합될 수 있는 다수의 Creturns Domains 모듈을 포함할 수 있다. 일부 실시예에서, Creturns Domains 모듈은 다양한 서비 스(329a-d)를 포함할 수 있다. 도 3b에 나타난 바와 같은 서비스의 예는 취소 서비스(329a), 반환 서비스 (329b), 교환 서비스(329c), 및/또는 양해 서비스(329d)를 포함할 수 있다. 각 서비스(329a-d)는 도 3d의 작업 흐름 서브-시스템의 각각의 작업 흐름 태스크로부터의 출력 처리를 담당할 수 있다. 예를 들면, 도 3d의 취소 프로세스 작업 흐름(383a)은 출력을 취소 서비스(329a)에 전달할 수 있는 반면, 리턴 프로세스 작업 흐름 (383b)은 출력을 반환 서비스(329b)에 전달할 수 있다. Creturns Domains 모듈의 아키텍쳐(architectur e)는 필요한 추가 서비스를 추가하도록 변형될 수 있다. Creturns Domains 모듈은 도 3a의 기록 및 추적 모듈 및/또는 외부 서비스 프록시 모듈을 이용 하여 기록하고 추적하면서, 처리된 정보를 도 3c의 외부 데이터 소스에게 전달할 수 있다. 외부 데이터 소 스에게 전달된 정보는 도 3c를 참조한 부분에서 설명되는 바와 같이 저장된다. 기록 및 추적 모듈로 전달된 정보는 도 3a를 참조한 부분에서 상술된 바와 같이 기록되고 처리된다. 외부 서비스 프록시 모듈은, 출력 서브-시스템의 일부이고, 적절한 외부 서비스(339a-339e)로의 추가 지시를 위해 Creturns Domains 모듈로부터의 처리된 출력을 수신할 수 있다. 출력 서브-시스템은 한 번 이상 서비스 프록시를 초기화하기 위해 요구되는 시간과 컴퓨팅 자원의 소모 없이 동일한 서비스를 반복적으 로 연결하기 위해 외부 서비스 프록시 모듈을 이용할 수 있다. 외부 서비스 프록시 모듈은 Creturns Domains 모듈과 외부 서비스(339a-339e) 간의 소프트웨어 또는 하드웨어 시스템으로 구현될 수 있다. 외부 서비스 프록시 모듈은 출력 서브-시스템과 같은 동일한 머신에 또는 별개의 서버에 존재할 수 있다. 외부 서비스 프록시 모듈은 고객, 관리자, 및/또는 판매자가 사용하도록 특별히 구성될 수 있다. 외부 서비스 프록시 모듈은 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구현될 수 있 다. 또한 외부 서비스 프록시 모듈은 도 3d의 Crenturn 작업 흐름 스타터로부터 직접적으로 데이터를 수 신할 수 있고 도 3d의 작업 흐름 서브-시스템에 통신 가능하게 결합될 수 있는 외부 서비스 작업부를 포함할 수 있다. 외부 서비스 작업부는 외부 서비스 프록시 모듈 내에 존재하거나 외부 서비스 프록 시 모듈이 연결될 수 있는 서버와 같은 별개의 구성으로 존재할 수 있다. 외부 서비스 작업부는 출력 처리를 수행하도록 구성된 다양한 구성(예를 들면, 모듈, 디바이스, 프로세서 등)을 포함할 수 있다. 예를 들면, 외부 서비스 작업부는 Crenturns Domains 모듈에 의해 처리되지 않는 데이터를 처리할 수 있다. 또한 외부 서비스 프록시 모듈은 외부 서비스 프록시 모듈가 통신 가능하게 결합될 수 있는 외부 API 요청부를 포함할 수 있다. 외부 API 요청부는 외부 서비스 프록시 모듈의 일부이거나, 또는 서 버 또는 가상 인스턴스(instance)와 같은 별개의 디바이스 또는 구성일 수 있다. 일부 실시예에서, 외부 서비스 프록시 모듈은 외부 서비스(339a-e) 중 어느 외부 서비스에게 출력의 전달이 요구되는지에 기초하여 외부 API 요청부로의 직접 통신을 가질 수 있으며, 이러한 외부 서비스는 Creturns Domains 모듈 또는 외 부 서비스 작업부에 의해 결정되었던 것일 수 있다. 예를 들어, 외부 서비스가 통신을 위해 API를 요구하 면, 외부 API 요청부는 요구되는 외부 서비스와 연결을 수립하기 위해 적절한 API 정보를 요청할 수 있다. 일부 실시예에서, 외부 API 요청부는 외부 서비스에 의해 이용되는 적어도 하나의 규칙 또는 알고리즘에 기초하여 통신으로부터의 정보를 재포맷, 분할, 파스, 태그, 및/또는 다른 방법으로 재구성 또는 전송할 수 있 다. 또한 외부 서비스 프록시 모듈은 외부 서비스 작업부가 통신 가능하게 결합될 수 있는 생산부를 포함할 수 있다. 생산부는 외부 서비스 프록시 모듈의 일부일 수 있거나, 또는 서버 또는 가상 인스 턴스와 같은 별개의 디바이스 또는 구성일 수 있다. 생산부는 메시지를 토픽에 퍼블리시하는 데 이용될 수 있다. 토픽은 메시지를 포함하는 다수의 파티션으로 나뉠 수 있다. 파티션 내의 각 메시지는 그것의 고유 오프 셋에 의해 할당 및 식별된다. 메시지 그 자체가 어느 토픽과 파티션에 퍼블리시할 지에 대한 정보를 포함하므로 데이터는 동일한 생산부를 이용하여 서로 다른 토픽에 퍼블리시될 수 있다. 일부 실시예에서, 생산부는 Kafka를 이용하여 구현될 수 있다. 외부 서비스 프록시 모듈은 처리된 정보를 도 3a의 기록 및 추적 모듈 및/또는 외부 서비스(339a- e)로 전달할 수 있다. 기록 및 추적 모듈로 전달된 정보는 도 3a를 참조한 부분에서 앞서 설명된 바와 같 이 기록되고 처리된다. 외부 서비스(339a-e)는 요청에 기반하여 활동을 개시한다. 도 3b에 나타낸 바와 같은 서 비스의 예는 주문 서비스(339a), 풀필먼트 서비스(339b), 배송 서비스(339c), 베네핏(benefit) 서비스(339d) 및/또는 티켓 서비스(339e)를 포함할 수 있다. 각 서비스(329a-d)는 특정 동작을 담당할 수 있다. 예를 들어, 이벤트에서, 도 3d의 작업 흐름 서브-시스템은 교환 서비스(329c)가 처리하도록 출력을 전달하여, 다수의 외부 서비스를 개시할 수 있다. 아이템의 교환은 새로운 아이템을 주문(주문 명령어는 공급자로부터 아이템을 구입하고, 피커(picker)에게 아이템을 준비할 것을 알리고, 아이템을 온라인으로 구매하고, 제3자 스토어로 이 동하고 및 그것을 찾아가라는 명령어, 또는 아이템을 획득하는 것으로 지시되는 다른 명령어를 포함할 수 있 다)하기 위한 주문 서비스(339a)로의 출력, 반환 배송표를 생성하기 위한 배송 서비스(339c)로의 출력, 및/또는 반환된 아이템을 처리하기 위한 풀필먼트 서비스(339b)로의 출력을 수반할 수 있다. 출력 서브-시스템의 아키텍쳐는 필요에 따라서 추가 외부 서비스가 추가되도록 수정될 수 있다. 도 3c는 개시된 실시에 따른, 예시적인 제어 서브-시스템, 예시적인 반환 이벤트스토어, 예시적인 규 칙 엔진, 및 예시적인 외부 데이터 소스의 픽토그래픽 표시를 나타낸다. 제어 서브-시스템은 시스템(도 3a의 300, 도 3b의 325, 및 도 3d의 375)의 다양한 구성에 의해 이용되는 데이터를 생성, 갱신, 유지, 및/또는 관리하도록 구성될 수 있다. 예를 들면, 제어 서브-시스템은 고객에 의한 반환을 관리하기 위한 파라미터(예를 들면, 고객에 의한 반환을 승인하고 거절하기 위한 규칙), 반환을 처 리하기 위한 작업 흐름을 관리하기 위한 파라미터, 및/또는 특정 반환 이벤트를 저장하기 위한 파라미터를 생성, 갱신, 및/또는 수정하도록 구성될 수 있다. 도 3c에 나타낸 바와 같이, 제어 서브-시스템은 규칙 관리 모듈, 이벤트 관리 모듈, 및 작업 흐 름 관리 모듈을 포함할 수 있다.규칙 관리 모듈은 고객에 의한 반환을 처리하기 위한 규칙을 관리하도록 구성될 수 있다. 예를 들면, 규칙 관리 모듈은 고객에 의한 반환 요청을 거절하기 위한 규칙을 생성 및/또는 수정하도록 구성될 수 있다. 예 시로, 규칙 관리 모듈은, 예를 들면, 고객의 이전 반환(들)에 대한 데이터, 반환 요청에 관여된 통화량 (monetary amount), 반환될 재화의 유형 등을 포함하는 다양한 파라미터에 기초하여 고객에 의한 반환 요청을 거절하기 위한 규칙을 생성 및/또는 수정하도록 구성될 수 있다. 예를 들면, 고객이 과거에 사전 결정된 일수 (예를 들면, 180일) 이내에 반환을 위해 빈(또는 부분적으로 빈) 박스를 반환한 경우, 이는 고객이 시스템을 속 이려고 시도했음을 나타낼 수 있고, 규칙 관리 모듈은 고객의 반환 요청을 거절하기 위한 규칙을 생성할 수 있다. 일부 실시예에서, 규칙 관리 모듈은 제어 서브-시스템의 사용자에 의한 입력에 기초하여 규칙을 생성 및/또는 수정하도록 구성될 수 있다. 예를 들면, 규칙 관리 모듈은 사용자로부터 반환 요청을 검증하기 위 한 규칙의 하나 이상의 파라미터를 수정하고 그리고 그에 따라 규칙의 파라미터(들)을 수정하기 위한 입력을 수 신할 수 있다. 이벤트 관리 모듈은 반환 이벤트스토어에 저장된 이벤트를 생성, 수정, 및/또는 관리하도록 구성될 수 있다. 예를 들면, 이벤트 관리 모듈은 고객 또는 시스템에 의해 개시된 반환 요청에 대한 일련의 이벤 트를 생성하고 이벤트를 반환 이벤트스토어에 저장할 수 있다. 예로서, 고객이 고객과 연관된 사용자 디바 이스를 통해 주문의 반환을 개시할 수 있다. 이벤트 관리 모듈은 반환 요청을 수신하는 이벤트를 생성하고 이벤트를 반환 이벤트스토어에 저장할 수 있다. 일부 실시예에서, 이벤트는 반환, 고객, 및 반환과 관련된 주문에 대한 정보를 포함할 수 있다. 예를 들면, 이벤트 관리 모듈은 고객에 의해 요청된 반환에 대한 제1 이벤트를 생성할 수 있고, 이는 반환 요청의 정보, 반환 요청을 수신한 타임 스탬프, 고객에 대한 정보, 또는 그 밖의 유사한 것, 또는 이들의 조합을 포함할 수 있다. 이벤트 관리 모듈은 반환 대상인 하나 이상의 아 이템이 고객으로부터 수신될 때, 제2 이벤트를 생성할 수 있고, 이는 아이템(들) 수신에 대한 정보(예를 들면, 수량, 상태, 등), 아이템(들)의 수신 타임 스탬프, 등을 포함할 수 있다. 또한 이벤트 관리 모듈은 제1 및 제2 이벤트를 반환 이벤트스토어에 반환에 대한 일련의 이벤트로 저장할 수 있다. 일부 실시예에서, 반환 이벤트스토어는 예를 들면, Oracle™ 데이터베이스, Sybase™ 데이터베이스, 또는 다른 관계형 데이터베이스 또는 Hadoop™ 시퀀스 파일, HBase™, 또는 Cassandra™와 같은 비-관계형 데이터베 이스를 포함할 수 있다. 반환 이벤트스토어는 HBase, MongoDB™ 또는 Cassandra™와 같은 NoSQL 데이터베 이스를 포함할 수 있다. 선택적으로, 데이터베이스는 Oracle, MySQL 및 Microsoft SQL 서버와 같은 관계형 데이터베이스를 포함할 수 있다. 일부 실시예에서, 반환 이벤트스토어는 서버, 범용 컴퓨터, 메인프레임 컴퓨터, 또는 이들 구성의 임의 조합의 형태를 취할 수 있다. 작업 흐름 관리 모듈은 시스템(도 3a의 300, 도 3b의 325, 도 3d의 375)의 다양한 구성에 의해 이용되는 작업 흐름을 생성, 수정, 및/또는 관리할 수 있다. 예를 들면, 작업 흐름 관리 모듈은 작업 흐름 서브-시 스템(도 3d에 나타냄)에 의해 이용되는 취소 프로세스(383a), 반환 프로세스(383b), 교환 프로세스(383c), 배송 추적(383d), 수집 프로세스(383e), 환불 프로세스(383f), 및 철회(withdraw) 프로세스(383g)를 생성, 수 정, 및/또는 관리하도록 구성될 수 있다. 일부 실시예에서, 제어 서브-시스템은 Creturns Domains 모듈(도 3b에 나타냄)에 의해 이용되는 서비 스를 생성, 수정, 및/또는 관리하도록 구성될 수 있다. 예를 들면, 제어 서브-시스템은 취소 서비스 (329a), 반환 서비스(329b), 교환 서비스(329c), 및/또는 양해 서비스(329d)를 생성, 수정, 및/또는 관리하도록 구성될 수 있다. Creturns Domains 모듈은 제어 서브-시스템으로부터 하나 이상의 서비스를 획득할 수 있다. 규칙 엔진은 제어 서브-시스템으로부터의 반환을 처리하기 위한 규칙을 획득하고, 도 3d의 작업 흐름 서브-시스템의 다른 구성들에 대한 규칙을 저장 및/또는 관리하도록 구성될 수 있다. 예를 들면, 도 3d의 작업 흐름 서브-시스템은 규칙 엔진으로부터의 반환 요청을 검증하기 위한 규칙을 획득하도록 구성될 수 있다. 일부 실시예에서, 규칙 엔진은 반환을 관리 및/또는 처리하는 규칙을 저장하기 위한 규칙 데이터 베이스를 포함할 수 있다. 외부 데이터 소스는 서브시스템(도 3a의 300, 도 3b의 325, 및 도 3d의 375)을 포함하는 시스템의 다양한 구성에 대한 데이터를 저장하도록 구성될 수 있다. 예를 들면, 외부 데이터 소스는, 예를 들어 취소 서비 스(329a), 반환 서비스(329b), 교환 서비스(329c), 및/또는 양해 서비스(329d)를 포함하는 제어 서브-시스템 에 의해 생성 및/또는 갱신되는 다양한 서비스를 저장할 수 있다. Creturns Domains 모듈은 외부 데이터 소스로부터의 하나 이상의 서비스를 획득할 수 있다. 다른 예로서, 외부 데이터 소스는 이벤트(예를 들면, 반환 이벤트)에 대한 데이터를 저장하도록 구성된 이 벤트스토어를 포함할 수 있다. 일부 실시예에서, 이벤트스토어는 쓰기(write) 명령에 응답하여 데이 터를 쓰도록 구성된 쓰기 데이터베이스를 포함할 수 있다. 이벤트스토어는 질의 명령에 응답하여서만 데이 터를 읽도록 구성된 하나 이상의 읽기 데이터베이스(예를 들면, 읽기 데이터베이스(373A), 읽기 데이터베 이스(373B) 등)를 포함할 수 있다. 일부 실시예에서, 읽기 데이터베이스는 쓰기 데이터베이스에 포함 된 데이터와 동일한 데이터를 포함할 수 있다. 예를 들면, 쓰기 데이터베이스에 저장된 데이터가 쓰기 명 령에 응답하여 갱신되면, 쓰기 데이터베이스와 읽기 데이터베이스가 동일한 데이터를 포함하도록 읽 기 데이터베이스의 대응하는 데이터가 그에 맞춰 갱신될 수 있다. 일부 실시예에서, 외부 데이터 소스 는 제어 서브-시스템에 대한 관리(administration) 데이터를 저장하도록 구성된 관리(admin) 데이터 베이스를 포함할 수 있다. 일부 실시예에서, 이벤트스토어 및/또는 관리 데이터베이스는, 예를 들면, Oracle™ 데이터베이스, Sybase™ 데이터베이스, 또는 다른 관계형 데이터베이스 또는 Hadoop™ 시퀀스 파일, HBase™, 또는 Cassandra ™와 같은 비-관계형 데이터베이스를 포함할 수 있다. 이벤트스토어 및/또는 관리 데이터베이스는 HBase, MongoDB™ 또는 Cassandra™와 같은 NoSQL 데이터베이스를 포함할 수 있다. 선택적으로, 데이터베이스 는 Oracle, MySQL 및 Microsoft SQL 서버와 같은 관계형 데이터베이스를 포함할 수 있다. 일부 실시예에서, 이벤트스토어 및/또는 관리 데이터베이스는 서버, 범용 컴퓨터, 메인프레임 컴퓨터, 또 는 이들 구성의 임의 조합의 형태를 취할 수 있다. 도 3d는 작업 흐름 서브-시스템의 예시적인 픽토그래픽 표시를 나타낸다. 작업 흐름 서브-시스템은 인테이크 서브-시스템의 출력을 처리하기 위해 지정될 수 있다. 작업 흐름 서브-시스템은 검증기 출력을 출력 서브-시스템으로 전달할 수 있다. 작업 흐름 서브-시스템은 고객, 배달원, 관리자, 및/또는 판매자가 사용하도록 특별히 구성될 수 있다. 작업 흐름 서브-시스템은 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구현될 수 있다. 일부 실시예에서, 작업 흐름 서브-시스 템 및/또는 작업 흐름 서브-시스템의 구성은 (예를 들면, 도 3a-3d에 나타낸 바와 같은) 다른 서브 시스템에 통신 가능하게 결합될 수 있다. 작업 흐름 서브-시스템은 프레임워크 모듈을 포함할 수 있다. 프레임워크 모듈은 Spring WebFlux 또는 유사한 기술을 활용할 수 있다. 프레임워크 모듈은 적은 수의 쓰레드 및 더 적은 하드웨어 자원의 규모로 동시 실행(concurrency)을 취급하는 비-차단 웹 스택을 제공할 수 있다. 프레임워크 모듈은 다양한 프로그래밍 모듈을 포함할 수 있다. 도 3d에 나타낸 바와 같은 모듈의 예는 반환 모듈(379a), 교환 모듈 (379b), 및 취소 모듈(379c)을 포함할 수 있다. 모듈(379a-c)은 소매, 제3자, 및 티켓 할인(ticket offers)을 위한 처리 로직을 포함할 수 있다. 또한 모듈(379a-c)은 각각의 데이터를 관리하는 서브-시스템과 통신하기 위 한 API를 포함할 수 있다. 또한 작업 흐름 서브-시스템은 프레임워크 모듈에 통신 가능하게 결합될 수 있는 작업 흐름 스타터 (starter)를 포함할 수 있다. 작업 흐름 스타터는 프레임워크 모듈로부터 수신된 입력에 기초하 여 작업 흐름을 개시할 수 있는 프로세스(383a-g)의 목록을 포함할 수 있다. 도 3d에 나타낸 바와 같은 프로세 스의 예는 취소 프로세스(383a)(고객, 공급자, 또는 다른 주문 취급자에 의한 주문의 취소에 의해 개시되는 작 업 흐름을 시작하기 위한 명령어를 포함함), 반환 프로세스(383b)(고객, 공급자, 또는 다른 주문 취급자에 의해 반환된 전부 또는 일부 주문에 의해 개시되는 작업 흐름을 시작하기 위한 명령어를 포함함), 교환 프로세스 (383c)(고객, 공급자, 또는 다른 주문 취급자에 의해 시작된 전부 또는 일부 주문의 교환에 의해 개시되는 작업 흐름을 시작하기 위한 명령어를 포함함), 배송 추적(383d)(고객, 공급자, 또는 다른 주문 취급자에 의한 전부 또는 일부 주문의 배송 상태 추적 요청에 의해 개시되는 작업 흐름을 시작하기 위한 명령어를 포함함), 수집 프 로세스(383e)(고객, 공급자, 또는 다른 주문 취급자에 의한 전부 또는 일부 주문의 정보 추적 요청에 의해 개시 되는 작업 흐름을 시작하기 위한 명령어를 포함함), 환불 프로세스(383f)(고객, 공급자, 또는 다른 주문 취급자 에 의해 시작된 전부 또는 일부 주문에 대한 환불 요청에 의해 개시되는 작업 흐름을 시작하기 위한 명령어를 포함함), 및 철회 프로세스(383g)(고객, 공급자, 또는 다른 주문 취급자에 의해 시작된 전부 또는 일부 주문의 철회에 의해 개시되는 작업 흐름을 시작하기 위한 명령어를 포함함)를 포함할 수 있다. 게다가, 프레임워크 모듈의 각 프로그래밍 모듈(379a-c)은 복수의 프로세스(383a-g)를 개시할 수 있다. 예 를 들면, 취소 모듈(379c)은 취소된 아이템이 배송되었는지 또는 여전히 배달원이 소유하고 있는지를 결정하기위해 배송 추적 프로세스(383d)를 개시할 수 있다. 또한 동일한 취소 모듈(379c)은 고객에게 환불하기 위해 환 불 프로세스(383f)를 개시할 수 있다. 다양한 조합이 프로그램될 수 있고 그리고 고객, 배달원, 관리자, 및/또는 판매자가 사용하도록 특별히 구성될 수 있다. 작업 흐름 스타터는 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구 현될 수 있다. 일부 실시예에서, 작업 흐름 스타터 및/또는 작업 흐름 스타터의 구성은 (예를 들면, 도 3d에 나타낸 바와 같은) 작업 흐름 서브-시스템의 다른 일부에 통신 가능하게 결합될 수 있다. 게다가, 작업 흐름 서브-시스템의 아키텍쳐는 필요에 따라서 추가적인 처리와 프로그램 모듈을 추가하도록 수정된 다. 또한 작업 흐름 서브-시스템은 작업 흐름 스타터와 출력 서브-시스템과 통신 가능하게 결합될 수 있는 작업 흐름 서비스 모듈을 포함할 수 있다. 작업 흐름 서비스 모듈은 작업 흐름 제어 및 설계 를 위해 지정될 수 있다. 작업 흐름 서비스 모듈은 Creturn 작업 흐름 서비스 모듈 및 작업 흐름 오 케스트레이션(orchestration) 모듈을 포함할 수 있다. 작업 흐름 서비스 모듈은 출력 서브-시스템 에 의한 처리를 위해 출력을 제공할 수 있다. Creturn 작업 흐름 서비스 모듈은 작업 흐름 스타터로부터 수신된 입력에 기초하여 작업 흐름을 제어 할 수 있는 다수의 서브-모듈(389a-b)을 포함할 수 있다. 도 3d에 나타낸 바와 같은 처리의 예는 소매 아이템의 반환에 대한 작업 흐름의 설계 및/또는 제어를 허용하는 소매 반환 서브-모듈(389a) 및 제3자 아이템의 반환에 대한 작업 흐름의 설계 및/또는 제어를 허용하는 제3자 반환 서브-모듈(389b)을 포함할 수 있다. Creturn 작업 흐름 서비스 모듈의 아키텍쳐는 필요에 따라서 추가적인 서브- 모듈을 추가하도록 수정된다. Creturn 작업 흐름 서비스 모듈 내의 작업 흐름은 고객, 배달원, 관리자 및/또는 판매자에 의해 제어 및/또는 설계될 수 있다. Creturn 작업 흐름 서비스 모듈은 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바 이스에 구현될 수 있고 그리고 작업 흐름 서브-시스템의 다른 일부에 통신 가능하게 결합될 수 있다. 작업 흐름 오케스트레이션 모듈은 고객, 배달원, 관리자, 및/또는 판매자에 의해 접근될 수 있는 작업 흐 름 제어 세트를 포함할 수 있다. 작업 흐름 오케스트레이션 모듈은 비즈니스 처리 관리(business process management, BPM) 엔진과 지원 프레임워크를 이용하여 구현될 수 있고, 이의 일 예는 Activiti와 Spring Boot/Docker일 수 있다. 작업 흐름 오케스트레이션 모듈 엔진은 사람 태스크와 서비스 호출로 구성된 프로 세스 정의를 내리고 이들을 특정한 순서로 실행하는 것을 핵심 목표로 하며, 정의에 대한 프로세스 인스턴스에 관한 데이터를 시작, 관리 및 질의하기 위한 다양한 API를 공개할 수 있다. 작업 흐름 오케스트레이션 모듈 은 프로세서, 메모리 구성, 및/또는 통신 구성을 가지는 컴퓨팅 디바이스에 구현될 수 있다. 작업 흐름 오 케스트레이션 모듈은 작업 흐름 서브-시스템의 다른 일부에 통신 가능하게 결합될 수 있다. 도 4는 개시된 실시예에 따른, 네트워크 아키텍쳐의 예시적인 픽토그래픽 표시를 나타낸다. 일부 실시예에 서, 네트워크 아키텍쳐는 시스템, 디바이스, 모듈, 또는 도 1-3d와 관련되어 설명된 다른 요소 중 어느 것 을 포함할 수 있다. 또한 네트워크 아키텍쳐는 적어도 하나의 컴퓨팅 디바이스를 포함할 수 있는 시스 템을 포함할 수 있다. 컴퓨팅 디바이스는 서버, 특수 목적 서버, 가상 서버, 컨트롤러, 어댑터, 또는 전자 통신 및/또는 연산할 수 있는 다른 디바이스를 포함할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 특정 프로세스, 서비스(예를 들면, Kafka를 이용하여 구현된 메시징 서비스), 어플리케이션, 및/또는 작업 흐름을 구 현하는 것과 연관될 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 컴퓨팅 디바이스에서 수행되는 동 작과 연관된 데이터를 저장할 수 있는 적어도 하나의 데이터베이스와 연결될 수 있다. 데이터베이스 는 (예를 들면, MySQL 또는 Cassandra를 구현하는) 관계형 데이터베이스, 집중형(centralized) 데이터베이스, 분산형 데이터베이스, 상용(commercial) 데이터베이스, 클라우드 데이터베이스, 객체-지향 데이터베이스, 및/또 는 클라우드 데이터베이스일 수 있다. 일부 실시예에서, 단일 데이터베이스는 다수의 컴퓨팅 디바이스 에 통신 가능하게 결합될 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 컴퓨팅 디바이스의 예 일 수 있다(아래에서 설명됨). 또한 네트워크 아키텍쳐는 시스템에 통신 가능하게 연결될 수 있는 매니저(manager) 디바이스를 포함할 수 있다. 일부 실시예에서, 매니저 디바이스는 시스템에게 설정 정보를 보내도록 구성될 수 있다. 예로서, 매니저 디바이스는 컴퓨팅 디바이스에서 유지되는 컴퓨터 모델을 구성 또는 재구성하 기 위한 명령어를 보낼 수 있다. 일부 실시예에서, 매니저 디바이스는 인증된 후에만 특정 동작(예를 들면, 재설정 정보를 보내는 것)을 수행할 수 있다. 인증은 매니저 디바이스에 입력된 사용자 로그인 정보, 매니저 디바이스에 삽입된 범용 직렬 버스(universal serial bus, USB) 보안 키, 매니저 디바이스의 IP 주소, 매니저 디바이스의 MAC 주소, 매니저 디바이스의 고유 식별자, 매니저 디바이스 또는 다른 디바이스로부터 수신된 투팩터(two-factor) 인증 키, 및/또는 매니저 디바이스 또는 사용 자 또는 매니저 디바이스를 식별하는 임의 정보에 기초할 수 있다. 일부 실시예에서, 매니저 디바이스 는 컴퓨팅 디바이스의 예일 수 있다 (아래에서 설명됨). 또한 네트워크 아키텍쳐는 공용 네트워크 또는 사설 네트워크일 수 있고, 예를 들면, 제한 없이, 지역 네트 워크(local area network, LAN), 광역 네트워크(wide area network, WAN), 메트로폴리탄 영역 네트워크 (metropolitan area network), IEEE 802.11 무선 네트워크(예를 들면, \"Wi-Fi\"), 네트워크들의 네트워크(예를 들면, 인터넷), 유선 전화 네트워크(land-line telephone network) 등을 포함하는 유선 또는 무선 네트워크를 포함할 수 있는 네트워크를 포함할 수 있다. 네트워크는 다양한 시스템 구성을 서로 및/또는 외부 시 스템 또는 디바이스에 연결하도록 다른 네트워크(도 4에 도시되지 않음)에 연결될 수 있다. 일부 실시예에서, 네트워크는 보안 네트워크이고 네트워크에 접근하기 위한 비밀번호를 요구할 수 있다. 일부 실시예에서, 네트워크 아키텍쳐는 시스템과 별개로 동작을 수행하기 위한 컴퓨팅 디바이스(예를 들면, 컴퓨팅 디바이스)를 포함할 수 있는 시스템을 포함할 수 있다. 예를 들면, 시스템은 시스 템이 국부적으로 구현되지 않을 수 있는 서비스(예를 들면, 로그 파일을 분석하는 것)를 지원할 수 있다. 일부 실시예에서, 시스템은 시스템과 연관될 수 있는 풀필먼트 센터 매니저에 대한 제품의 공급자와 연관될 수 있다. 또한 네트워크 아키텍쳐는 클라이언트 요청과 관련된 데이터를 전송 및/또는 수신할 수 있는 클라이언트 디 바이스를 포함할 수 있다. 클라이언트 디바이스는 개인 컴퓨터, 랩톱, 태블릿, 셀폰, 스마트폰, 스마 트워치, 또는 고객에 의해 사용되는 임의 디바이스를 포함할 수 있다. 일부 실시예에서, 클라이언트 디바이스 는 클라이언트 요청과 연관된 정보를 포함하는 데이터를 시스템에게 전송할 수 있다. 또한 클라이언 트 디바이스는 클라이언트 요청과 연관된 정보(예를 들면, 클라이언트 요청의 식별된 오류)를 시스템(40 0)으로부터 수신할 수 있다. 일부 실시예에서, 클라이언트 디바이스는 컴퓨팅 디바이스의 예일 수 있 다(아래에서 설명됨). 도 5는 개시된 실시예에 따른, 컴퓨팅 디바이스의 예시적인 픽토그래픽 표시를 나타낸다. 컴퓨팅 디바이스 는 하나 이상의 전용 프로세싱 유닛, 특수 용도 직접 회로(application-specific integrated circuits, ASICs), 필드 프로그램가능 게이트 어레이(field-programmable gate arrays, FPGAs), 그래픽 프로세싱 유닛, 또는 메모리와 결합된 다양한 다른 유형의 프로세서 또는 프로세싱 유닛을 포함할 수 있는 프로세서 를 포함할 수 있다. 프로세서는 병렬 프로세스를 동시에 실행하는 싱글 코어 또는 멀티 코어 프로세서를 구성할 수 있다. 예를 들면, 프로세서는 가상 프로세싱 기술로 구성된 싱글 코어 프로세서일 수 있다. 일 부 실시예에서, 프로세서는 다수의 프로세스를 동시에 실행하고 제어하기 위해 논리 프로세서들을 이용할 수 있다. 프로세서는 복수의 소프트웨어 프로세스, 어플리케이션, 프로그램 등을 실행, 제어, 구동, 조작, 저장 등을 하기 위한 능력을 제공하는 가상 머신 기술 또는 다른 알려진 기술을 구현할 수 있다. 다른 실시예에 서, 프로세서는 다수의 프로세스의 동시 실행을 가능하게 하는 병렬 처리 기능을 제공하도록 구성된 멀티 코어 프로세서 배치(예를 들면, 듀얼 코어, 쿼드 코어 등)를 포함할 수 있다. 기술 분야에서 일반적인 기술을 가진 사람은 여기에서 개시된 능력을 제공하기 위한 다른 유형의 프로세서 배치가 구현될 수 있음을 알 것이다. 개시된 실시예는 어느 유형의 프로세서에 국한되는 것은 아니다. 프로세서는 아래에서 보다 상세하게 설명 되는 개시된 실시예의 다양한 기능을 수행하기 위해 메모리에 저장된 다양한 명령어를 실행할 수 있다. 프 로세서는 하나 이상의 알려진 프로그램 언어로 쓰인(written) 기능을 실행할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 가속도계, 광 센서, 오디오 센서, 적외선 센서, 모션 센서, 압전 센 서, 레이저 센서, 소나(sonar) 센서, GPS 센서, 전자기 센서 등과 같은 센서를 포함할 수 있다. 센서(50 4)는 컴퓨팅 디바이스에 전송 또는 컴퓨팅 디바이스로부터 수신을 위한 통신을 결정하는데 이용될 수 있는 컴퓨팅 디바이스의 상황(aspects)을 검출할 수 있다(예를 들면, GPS 센서가 컴퓨팅 디바이스의 위치를 검출할 수 있다). 예로서, 시스템은 센서가 클라이언트 디바이스가 이동 중임을 결정함에 기 초하여 클라이언트 디바이스에게 (예를 들면, 클라이언트 요청에 대한) 통지를 전송할 수 있다. 또한 컴퓨팅 디바이스는 디스플레이(예를 들면, 그래픽 디스플레이, 텍스트 디스플레이, 디스플레이 등), LED, 라우터, 터치스크린, 키보드, 마이크로폰, 스피커, 햅틱 디바이스, 카메라, 버튼, 다이얼, 스위치, 놉(knob), 터치 패드, 버튼, 마이크로폰, 위치 센서, 가속도계, 카메라, 지문 스캐너, 망막 스캐너, 생체 입력 디바이스, 초음파 스캐너, 트랜시버, 입력 디바이스, 출력 디바이스, 또는 개시된 실시예의 방법을 수행하기 위한 다른 입력/출력(I/O) 디바이스 중 적어도 하나를 포함할 수 있는 입력/출력 디바이스 (I/O)를 포함할 수 있다. I/O는 인터페이스(예를 들면, 사용자 인터페이스)의 구성을 포함할 수 있다. 또한 I/O는 유선 또는 무선 네트워크 카드/칩 셋 중 적어도 하나를 포함할 수 있는 네트워크 인터페 이스(미도시)를 포함할 수 있다. 또한 컴퓨팅 디바이스는 하나의 메모리 구성, 또는 다수의 메모리 구성일 수 있는 메모리를 포함할 수 있다. 이러한 메모리 구성은 전자 저장 디바이스, 자기 저장 디바이스, 광학 저장 디바이스, 전자기 저장 디 바이스, 반도체 저장 디바이스, 또는 앞서 말한 것의 임의 적절한 조합을 포함할 수 있다. 예를 들면, 메모리 는 임의 개수의 하드 디스크, 랜덤 접근 메모리(random access memories, RAMs), 리드 온리 메모리(read- only memories, ROMs), 이레이저블 프로그래머블 리드 온리 메모리(erasable programmable read-only memories, EPROMs 또는 플래시 메모리) 등을 포함할 수 있다. 메모리는 개시된 실시예에 대한 기능을 수행 하기 위해 프로세서에 의해 이용 가능한 명령어를 저장하도록 구성된 하나 이상의 저장 디바이스를 포함할 수 있다. 또한 메모리는 개시된 실시예에 따른 임의 개수의 프로그램, 어플리케이션, 어플리케이션 프로그램 인터페이스(APIs), 서비스, 프로세스, 모듈, 코드, 스크립트, 기능, 또는 임의 다른 데이터를 포함할 수 있다. 프로그램은 하나 이상의 프로그램 또는 스크립트 언어로 쓰일 수 있다. 또한 메모리는 사용 자 계정, 어플리케이션, 특정 디바이스, 모델, 통신과 연관된 데이터, 또는 클라이언트 요청을 취급하는 것과 연관된 임의 다른 데이터를 포함할 수 있는 데이터를 유지할 수 있다. 데이터는 XML, REST, SOAP, JSON, GraphQL 등을 포함하는 임의 개수의 포맷 또는 프로토콜에 따라 컴퓨팅 디바이스 간(예를 들면, 다수의 컴 퓨팅 디바이스들, 컴퓨팅 디바이스와 클라이언트 디바이스 등)에 교환될 수 있다. 또한 메모리는 개시된 실시예에 따른, 클라이언트 요청을 취급하기 위한 인공지능(artificial intelligence, AI) 모델일 수 있는 모델(미도시)을 포함할 수 있다. 모델은, 제한 없이, 개시된 실시예에 따른, 컴퓨터 소프트웨어 모듈, 알고리즘, 기계 학습 모델, 데이터 모델, 통계 모델, 재귀 신경망(recurrent neural network, RNN) 모델, 장단기 기억(long-short term memory, LSTM) 모델, 다른 신경망 모델 중 어느 하나를 포 함할 수 있다. 일부 실시예에서, 모델은 학습 단계의 모델일 수 있거나 또는 (예를 들면, 개발자, 기계, 또는 양자의 조합에 의해) 어느 정도로 학습 되어있을 수 있다. 일부 실시예에서, 개발자는 (예를 들면, 기계에 의해 제안된) 모델 또는 모델의 파라미터의 제안된 변경의 승인 또는 불승인하기 위해 모델과 상호 동작할 수 있다. 이러한 상호 동작 후, 모델은 사용자 상호 동작 및/또는 기계 입력을 반영하도록 갱신될 수 있다. 일부 실시예 에서, 모델은 사람의 개입 없이 파라미터를 자동으로 추가, 구성, 및/또는 제거하도록 구성될 수 있다. 도 6은 개시된 실시예에 따른 프로세서에 의해 수행될 수 있는 클라이언트 요청을 취급하기 위한 예시적인 프로 세스의 흐름도를 도시한다. 예를 들면, 프로세스는 컴퓨팅 디바이스에 의해(예를 들면, 프로세 서를 이용하여) 전체적으로 또는 부분적으로 수행될 수 있다. 대체적으로 또는 추가적으로, 프로세스(60 0)의 일부 단계는 클라이언트 디바이스에 의해 수행될 수 있고 다른 단계는 시스템의 컴퓨팅 디바이 스와 같은 다른 디바이스에 의해 수행될 수 있다. 프로세스가 컴퓨팅 디바이스와 연관되어 설명되지 만, 숙련자는 도 6에 나타난 단계가 예시적이고 단계가 일부 실시예에서 추가, 병합, 분할, 복제, 반복, 수정, 및/또는 삭제될 수 있음을 알 것이다. 단계 602에서, 컴퓨팅 디바이스는 클라이언트 요청을 수신할 수 있다. 예를 들면, 클라이언트 디바이스 는 컴퓨팅 디바이스에서 수신될 수 있는 클라이언트 요청을 전송할 수 있다. 클라이언트 요청은 클라 이언트 디바이스에 의해 주문된 아이템에 관련될 수 있는 요청 데이터를 포함할 수 있다. 예를 들면, 클라 이언트 요청은 아이템의 반환 요청, 아이템 주문의 취소 요청, 주문된 아이템의 교환 요청, 환불 요청, 주문 수 정 요청, 주문 지연 요청, 주문 촉진(expedition) 요청, 및/또는 양해(concession) 요청을 포함할 수 있다. 요 청 데이터는, 개시된 실시예에 따른, 아이템 식별자, 고객 식별자, 클라이언트 디바이스 식별자(예를 들면, IP 주소), 주문 결제금액(payment amount), 아이템 가격, 할인 가격, 프로모션 식별자, 배송 결제금액, 배송 서비 스, 아이템 서비스(예를 들면, 선물 포장), 주소, 전화번호, 이메일 주소, 요청 사유, 주문 발행 시간, 예측 주 문 처리 시간, 예측 주문 배송 날짜, 예측 주문 전달 날짜, 및/또는 클라이언트 요청을 취급하기 위한 다른 데 이터를 포함할 수 있다. 일부 실시예에서, 요청 데이터는 구조 및 비구조 데이터의 조합을 포함할 수 있다. 단계 604에서, 컴퓨팅 디바이스(예를 들면, 시스템 내의 엔드포인트 컴퓨팅 디바이스)는 클라이언트 요청(예를 들면, 원격 클라이언트 디바이스로부터 수신된 클라이언트 요청)을 검증할 수 있다. 일부 실시예에서, 클라이언트 요청을 검증하는 것은 클라이언트 요청으로부터 요청 데이터를 추출하는 것을 포함할 수 있다. 일부 실시예에서, 요청 데이터는 규칙 엔진을 이용하여 분석될 수 있다. 예를 들면, 컴퓨팅 디바이스 는 클라이언트 요청의 개개의 부분들을 파싱(parsing) 및 검증하기 위해 규칙 엔진을 이용함으로써 클라이언트요청을 검증할 수 있다. 예를 들면, 규칙 엔진은 클라이언트 요청의 부분들이 적절한 포맷을 지키고 및/또는 적 어도 하나의 약정된 규칙(예를 들면, 주문 번호, 아이템 식별자, 사용자 식별자 또는 요청 데이터의 임의 특정 한 조합)을 포함하는지를 확인하기 위해 그들을 분석할 수 있다. 일부 실시예에서, 클라이언트 요청을 검증하는 것은 규칙 엔진을 이용하기 전에 구조 및 비구조 요청 데이터를 분리하는 것을 포함할 수 있다. 일부 실시예에 서, 규칙 엔진은 추론 방법, 계층적 규칙 구조, 또는 클라이언트 요청을 검증하기 위한 다른 기술을 적용할 수 있다. 일부 실시예에서, 규칙 엔진은 요청 데이터에 포함된 기망(fraud)의 지시자(indicator)를 검출하기 위한 규칙을 구현할 수 있다. 예를 들면, 데이터 및/또는 데이터의 부족의 특정 조합은 클라이언트 요청이 잠재적으 로 기망하는 것으로 태그하도록 디바이스를 트리거할 수 있다. 예를 들면, 요청 데이터가 새로운 데이터(예를 들면, 새로운 클라이언트 디바이스 식별자)를 포함하거나/하고 특정 데이터(예를 들면, 주문 번호)를 누락할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 클라이언트 디바이스가 특정 어플리케이션에 로그인되어 있는 동안 클라이언트 요청이 클라이언트 디바이스에 의해 생성되었는지를 판단할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스(예를 들면, 검증기)는 클라이언트 요청이 유효하지 않음을 결정하 고 단계 606으로 진행할 수 있다. 단계 606에서, 컴퓨팅 디바이스는 클라이언트 요청에서 적어도 하나의 유효하지 않은 부분을 결정할 수 있고, 이는 요청 데이터에 기초할 수 있다. 예를 들면, 클라이언트 요청은 유 효하지 않은 주문 식별자, 유효하지 않은 아이템 식별자, 유효하지 않은 클라이언트 디바이스 식별자, 유효하지 않은 주문 날짜 등을 포함할 수 있다. 일부 실시예에서, 유효하지 않은 부분은 규칙 엔진에 따라 결정될 수 있 다. 일부 실시예에서, 컴퓨팅 디바이스는 요청 데이터를 저장된 주문 데이터(예를 들면, 작업자가 아이템 을 스캔할 때 스캐닝 디바이스에 의해 생성되는 데이터, 시스템에 의해 생성되는 데이터, 주문이 클라이언 트 디바이스에 의해 주문될 때 생성되는 데이터 등)와 비교함으로써 클라이언트 요청이 유효하지 않음을 결정할 수 있다. 예를 들면, 클라이언트 요청은 주문 식별자 및/또는 클라이언트 디바이스, 클라이언트 디바이스 와 연관된 클라이언트 계정, 및/또는 특정 클라이언트 계정과 연관된 사용자에 의해 만들어진 주문과 관련 되지 않는 주문 식별자를 포함하면 유효하지 않은 것으로 결정될 수 있다. 단계 608에서, 컴퓨팅 디바이스는 원격 클라이언트 디바이스로 전송될 수 있는 응답을 전송할 수 있 다. 응답은 단계 604에서 수행된 검증에 기초하여 포맷 및/또는 전송될 수 있다. 일부 실시예에서, 컴퓨팅 디바 이스는 클라이언트 요청이 유효한 것으로 결정한 후 응답을 전송할 수 있다. 일부 실시예에서, 컴퓨팅 디 바이스는 클라이언트 요청에서 적어도 하나의 유효하지 않은 부분을 결정한 후 응답을 전송할 수 있다. 일 부 실시예에서, 응답은, 규칙 엔진을 이용하여 클라이언트 요청을 분석한 것에 기초할 수 있고, 검증의 성공 또 는 실패의 지시를 포함할 수 있는 통지를 포함할 수 있다. 일부 실시예에서, 응답은 요청 상태의 지시를 포함할 수 있다. 예를 들면, 응답은 클라이언트 요청이 전적으로 유효했음을 나타낼 수 있고 클라이언트 요청의 적어도 부분이 유효하지 않았음을 나타낼 수 있다. 이 예시에 더하여, 응답은 클라이언트 요청의 특정 부분이 유효하지 않았음(예를 들면, 투-팩터 인증 응답의 누락, 유효하지 않은 아이템 식별자, 유효하지 않은 주문 번호 등)을 나타낼 수 있다. 일부 실시예에서, 응답은 클라이언트 요청이 큐에 존재함을 나타낼 수 있다. 단계 610에서, 컴퓨팅 디바이스는 (예를 들면, 요청 데이터로부터의) 요청 정보를 저장할 수 있다. 예를 들면, 컴퓨팅 디바이스는 요청 정보를 (도 3c의 이벤트스토어와 같은) 데이터베이스에 저장할 수 있다. 일부 실시예에서, 요청 정보를 저장하기 전, 컴퓨팅 디바이스는 데이터를 특정 어플리케이션, 모 델 등에 적합한 포맷으로 재포맷할 수 있다. 일부 실시예에서, 데이터를 재포맷하는 것은 비구조 데이터를 구조 데이터로 변환하는 것을 포함할 수 있다. 단계 612에서, 컴퓨팅 디바이스는 연관된 프로세스(예를 들면, 배달 추적 프로세스(383d)), 서비스, 및/또 는 작업 흐름을 가질 수 있는 토픽을 결정할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 요청 데이터의 부분에 기초하여 토픽을 결정할 수 있다. 예를 들면, 요청 데이터는 연관된 API 및/또는 프로세스를 가질 수 있 는 요청 유형 식별자(예를 들면, 반환 요청, 교환 요청 등)를 포함할 수 있다. 일부 실시예에서, 컴퓨팅 디바이 스는 토픽과 연관된 토픽 프로세스를 결정할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 클라이언 트 요청 및/또는 요청 데이터에 대한 큐(예를 들면, 비동기 큐)를 결정할 수 있다. 일부 실시예에서, 토픽 및/ 또는 토픽 큐를 결정하는 것은 클라이언트 요청 토픽을 결정하기 위한 클라이언트 요청의 헤더를 파싱하는 것, 클라이언트 토픽을 (예를 들면, 도 3d의 프레임워크 모듈 및/또는 작업 흐름 스타터 내에 반영되는) 큐 토픽의 시퀀스와 비교하는 것, 및/또는 클라이언트 요청 토픽이 큐 토픽의 시퀀스 내의 토픽(예를 들면, 결 정된 토픽)에 매칭됨을 결정하는 것을 포함할 수 있다. 단계 614에서, 컴퓨팅 디바이스는 단계 612에서 결정되었을 수 있는 토픽 프로세스를 큐에 더할 수 있다. 일부 실시예에서, 토픽 프로세스를 큐에 더하는 것은 모델에 따라 클라이언트 요청을 분석하도록 구성될 수 있는 큐에 클라이언트 요청을 큐에 (예를 들면, 비동기적으로) 더하는 것(enqueuing)을 포함할 수 있다. 일부 실 시예에서, 클라이언트 요청을 분석하는 것은 단계 614-624의 임의 단계 또는 모두를 포함할 수 있다. 일부 실시 예에서, 토픽 프로세스를 큐에 더하는 것은 클라이언트 요청과 연관된 정보를 라우트할 적어도 하나의 서비스 (예를 들면, 도 3d의 Creturn 작업 흐름 서비스 모듈의 서비스)를 결정하는 것을 포함할 수 있다. 일부 실 시예에서, 토픽 프로세스 및/또는 서비스의 조합은 클라이언트 디바이스에서의 사용자 경험이 영향 받지 않도록 비동기적으로 동작할 수 있다(예를 들면, 클라이언트 디바이스가 연관된 API(예를 들면, 클라이언 트 요청을 개시하기 위한 API)의 기능에 대한 접근을 유지하는 동안 토픽 프로세스가 구현된다). 예를 들면, 클 라이언트 디바이스는 클라이언트 요청의 최초 제출에 이어 추가적인 요청 데이터를 전송할 수 있다. 이러 한 후속 데이터는 서로 다른 토픽 프로세스를 큐에 더하고, 작업 흐름을 대체하고, 모델을 수정하고, 및/또는 프로세스의 시퀀스 및/또는 클라이언트 요청을 취급하기 위한 서비스를 변경하기 위해 컴퓨팅 디바이스에 의해 이용될 수 있다. 단계 616에서, 컴퓨팅 디바이스는 첫 번째로 일어날 수 있고, 단계 614에서 결정된 토픽 프로세서의 일부 일 수 있는 태스크를 시도할 수 있다. 태스크는 프로세스, 동작, 호출(예를 들면, API 호출), 연산, 데이터 전 송, 및/또는 클라이언트 요청을 취급하기 위한 임의 컴퓨터화된 명령어를 포함할 수 있다. 일부 실시예에서, 태 스크는 복수의 태스크를 포함할 수 있는 작업 흐름(예를 들면, 모듈(389a)에 의해 구현되는 작업 흐름)의 일부 일 수 있다. 일부 실시예에서, 태스크는 아이템 식별자(예를 들면, 클라이언트 요청의 일부로서 수신된 아이템 식별자) 또는 다른 데이터를 이용하여 인벤토리 디바이스 또는 시스템에 질의하는 것, 인벤토리 디바이스 또는 시스템으로부터 응답을 수신하는 것, 인벤토리 시스템 응답에 기초하여 교정 동작(corrective action)을 결정하 는 것을 포함할 수 있다. 예로서, 컴퓨팅 디바이스는 아이템 반환에 대한 클라이언트 요청으로 수신된 아 이템 식별자를 전송할 수 있고 인벤토리 시스템은 아이템 식별자가 클라이언트 디바이스와 연관된 구매 이력의 아이템과 다른 문자(character)(예를 들면, 부정확한 글자(letter) 및/또는 숫자를 가지는 잘못된 아이템 식별 자)를 가진다는 것을 결정할 수 있고, 문자를 자동으로 변경하거나/하고 클라이언트 디바이스에게 추가 정 보를 유도(prompt)(예를 들면, 아이템 식별자의 확인)할 수 있다. 다른 교정 동작은 환불금(refund amount)의 통지를 전송하는 것, 원격 디바이스에서 차량 일정(vehicle itinerary)을 대체하는 것, 원격 디바이스(예를 들 면, 풀필먼트 센터에서의 작동과 연관된 디바이스)에서 재고 보충 명령어를 대체하는 것, 원격 디바이스로 환불 을 발행하기 위한 명령어를 전송하는 것 등을 포함할 수 있다. 교정 동작은 자동으로 및/또는 디바이스(예를 들 면, 매니저 디바이스)에서의 사용자 입력에 응답하여 개시될 수 있다. 일부 실시예에서, 교정 동작은 개시 된 실시예에 따라, 모델을 수정하도록, 가능한 다른 정보와 함께, 이용될 수 있다. 일부 실시예에서, 시스템은 서로 독립적으로, 구성, 제거, 스케일 등이 될 수 있도록 복수의 작업 흐름을 유지할 수 있다. 예를 들면, 반환 프로세스에 대한 작업 흐름은 (예를 들면, 모델의 어플리케이션에 기초하여) 대체 또는 스케일될 수 있는 반면, 교환 프로세스에 대한 작업 흐름은 변경되지 않은 채 유지될 수 있다. 일부 실시 예에서, 태스크 또는 복수의 태스크를 시도하기 위한 컴퓨팅 자원의 개수(예를 들면, 가상 서버의 개수와 같은 컴퓨팅 디바이스의 개수, 대역폭의 양, 처리 자원의 양, 네트워크 자원의 양, 전용 큐 공간의 양 등)는 태스크 또는 태스크들의 자원 부하에 따라 스케일될 수 있다. 예를 들면, 디바이스(예를 들면, 매니저 디 바이스)는 컴퓨팅 디바이스의 자원 사용을 결정할 수 있고 결정된 자원 사용에 기초하여 클라이언트 요청을 취급하기 위한 자원의 양을 스케일할 수 있다. 일부 실시예에서, 자원 양을 스케일하는 것은 가상 컴퓨 터 자원(예를 들면, 가상 서버, 컨테이너, 가상 머신, 하이퍼바이저 (hypervisor) 등)을 초기화하는 것을 포함 할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 태스크 시도의 첫 번째 실패를 결정할 수 있고, 실패한 태스크를 두 번째로 재시도하기 위한 시도와 같은 응답 동작을 수행할 수 있는 단계 618로 진행할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 다른 단계(예를 들면, 단계 620))로 진행하기 전 태스크에 대해 지정된 재 시도 횟수에 따라 태스크 재시도를 시도할 수 있다. 일부 실시예에서, 태스크를 재시도 하기 위한 미리 결정된 횟수는 태스크의 유형, 토픽의 유형, 클라이언트 요청의 노화(age), 또는 클라이언트 요청과 연관된 임의 다른 데이터와 연관될 수 있다. 태스크의 재시도가 성공하면, 컴퓨팅 디바이스는 단계 616으로 되돌아가 다른 태스크를 시도할 수 있고, 또는 단계 624를 처리할 수 있다. 태스크의 재시도가 성공하지 않거나, 또는 대체적 으로, 태스크의 초기 시도가 실패하고 재시도가 시도되지 않으면, 컴퓨팅 디바이스는 단계 620으로 진행할 수 있다. 예를 들면, 두 번째 실패(또는 세 번째 실패, 네 번째 실패 등)에 기초하여, 컴퓨팅 디바이스는 단계 620으로 진행할 수 있다. 단계 620에서, 컴퓨팅 디바이스는 컴퓨팅 디바이스에 의해 결정될 수 있는 실패 데이터를 다른 디바 이스에서 유지될 수 있는 실패 큐에 전송할 수 있다. 예를 들면, 실패 데이터는 실패 정보 디바이스(예를 들면, 매니저 디바이스)로 전송될 수 있다. 일부 실시예에서, 실패 데이터는 (예를 들면, 아래에서 설명되는 바 와 같이, 클라이언트 디바이스에게 실패를 알리고, 실패의 원인을 가능한 식별하기 위해) 클라이언트 디바이스 로 전송될 수 있다. 실패 데이터를 전송하는 것은 (예를 들면, 시도된 태스크의 실패에 기초하여 검출된) 검출 된 실패에 응답하여 응답 동작으로서 수행될 수 있다. 실패 데이터는 실패한 태스크의 식별자, 실패한 태스크와 연관된 서비스, 실패한 태스크와 연관된 작업 흐름, 실패한 태스크와 연관된 프로세스, 및/또는 실패한 태스크 와 연관된 요청 데이터를 포함할 수 있다. 실패 데이터 내의 이러한 상세 사항을 식별함으로써, 디바이스(예를 들면, 사용자 디바이스, 관리자 디바이스 등)와 연관된 사용자는 실패의 원인에 대한 보다 명확한 인 상을 받을 수 있다. 게다가, 또한 이러한 상세 사항은 모델이 자동 및/또는 반자동 학습을 통해 개선되도록 허 용할 수 있는 모델의 특정 파라미터에 대응할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 오류 정보를 결정하는 응답 동작을 수행할 수 있다. 예를 들면, 특정 오류 및/또는 오류 유형은 데이터베이스 오작동, 네트 워크 이슈(예를 들면, 낮은 대역폭, 높은 레이턴시, 연결 해제(loss of connection) 등), 로직 오류(예를 들면, 작업 흐름, 프로그램, 서비스 등의 버그), 거절된 API 호출, 잘못 포맷된 API 호출과 같은 실패를 유발하는 것으로 식별될 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 다른 디바이스 및/또는 시스템으로부터 수신된 정보에 기초하여 실패를 결정할 수 있다. 예로서, 컴퓨팅 디바이스는 재고 보관 데이터(stock-keeping data) 및/또는 아이템 배송 데이터와 연관된 디바이스로부터의 정보를 수신할 수 있고, 수신된 정보에 기초하여 수신된 아이템에 대한 대체물로서 고객이 요청한 아이템이 비축되지 않거나, 생산되지 않거나(discontinued), 이월 주문(backordered)된 것 등으로 결정할 수 있고, 그에 따라 대체 아이템과 연관된 특정 태스크가 실패했음 을 결정할 수 있다. 일부 실시예에서, 모델은 실패의 원인 및/또는 응답 동작을 결정하기 위해 실패 데이터에 적용될 수 있다. 이러한 모델은 클라이언트 요청을 취급하도록 구성된 모델과 별개일 수 있다. 일부 실시예에서, 실패 데이터는 매니저 디바이스로부터의 입력과 결합될 수 있고, 이는 클라이언트 요청에 대 한 양상을 학습 및/또는 수정(예를 들면, 서비스, 프로그램, 큐 등을 수정하는 것)하기 위한 모델에 이용될 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 실패 데이터와 연관된 적어도 하나의 모델 파라미터를 수정하 는 것, 학습 데이터셋에 실패 데이터를 추가하는 것, 매니저 디바이스에 통지를 보내는 것, 클라이언트 디바이 스에게 추가 데이터를 요구하는 것, 및/또는 요청 데이터 및/또는 실패 데이터에 기초하여 모델을 학습시키기 위한 임의 다른 동작을 취하는 것으로 이루어진 응답 동작을 수행할 수 있다. 단계 622에서, 컴퓨팅 디바이스는 매니저 디바이스, 클라이언트 디바이스, 또는 네트워크 아키 텍쳐 내의 다른 디바이스로 전송될 수 있는 응답을 전송하는 응답 동작을 수행할 수 있다. 응답은 (예를 들 면, 단계 620과 관련하여 설명된) 실패 정보 또는 실패한 태스크에 대한 다른 정보를 포함할 수 있다. 일부 실 시예에서, 응답은 디바이스로부터의 추가 정보(예를 들면, 초기 클라이언트 요청에서 식별된 아이템이 낮은 재 고량을 가지고, 이월주문되고, 재고가 없고, 회수되는 것 등에 기초하여 클라이언트 디바이스에서 선택될 대안적인 대체 아이템)에 대한 프롬프트(prompt)를 포함할 수 있다. 단계 624에서, 컴퓨팅 디바이스는 프로세스 결과를 전송할 수 있고, 이는 클라이언트 디바이스로 전 송될 수 있다. 프로세스 결과는 토픽 프로세스가 성공적으로 완료되었음(예를 들면, 반환 프로세스가 성공적으 로 완료되었음을 나타냄) 및/또는 토픽 프로세스가 성공적으로 중간 단계에 도달했음(예를 들면, 반환 아이템이 접수되었지만 환불은 아직 발행되지 않음)에 대한 지시를 포함할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스 는 실패 응답(예를 들면, 태스크, 큐, 또는 클라이언트 요청이 실패했음과 연관된 다른 동작을 나타내는 응답)을 원격 클라이언트 디바이스로 전송할 수 있다. 단계 626에서, 컴퓨팅 디바이스는 도메인 데이터를 저장할 수 있다. 도메인 데이터는 취소 요청 데이터, 반환 요청 데이터, 교환 요청 데이터, 반환 ID, 아이템 식별자, 최초 요청의 날짜, 오류 날짜, 태스크 데이터, 또는 클라이언트 요청에 대한 임의의 다른 데이터를 포함할 수 있다. 도메인 데이터는 유사한 요청 및/또는 요 청 결과 간의 연관성이 결정될 수 있도록 관계형 데이터베이스에 저장될 수 있다. 일부 실시예에서, 도메인 데 이터는 후속하여 생성될 수 있는, 초기 클라이언트 요청에 포함되지 않는 데이터를 포함한다는 점에서 요청 데 이터와는 다를 수 있다(예를 들면, 고객은 클라이언트 디바이스에서 요청 데이터를 대체할 수 있고, 환불 의 예상 시간이 변경될 수 있고, 대체 아이템 배달의 예상 날짜가 변경될 수 있고, 고객은 반환, 교환, 취소 등 에 대한 새로운 정보에 응답할 수 있다). 일부 실시예에서, 데이터베이스는 동일한 클라이언트 디바이스 또는 서로 다른 클라이언트 디바이스와 연관될 수 있는 다수의 클라이언트 요청에 대한 도메인 데이터를 저장할 수 있다. 일부 실시예에서, 모델은 프로세스, 서비스, 작업 흐름, 모듈, 디바이스 설정, 또는 클라이언트 요청을 취급하기 위한 다른 시스템 설정에 대한 수정을 결정하기 위해 도메인 데이터에 적용될 수 있다.일부 실시예에서, 컴퓨팅 디바이스는 (예를 들면, 위에서 설명된 임의의 단계에 따라서) 클라이언트 요청 을 분석하는 것에 기초할 수 있는 모델의 성능 지시자를 결정할 수 있다. 성능 지시자는, 한정되지 않고, 직면 한 오류의 횟수, 직면한 오류의 유형, 이벤트의 시퀀스, 클라이언트 요청을 취급하기 위해 이용된 연산 자원의 정도, 클라이언트 디바이스 식별자, 태스크 및/또는 클라이언트 요청과 연관된 응답 시간, 및/또는 아이템 식별 자를 포함하는 클라이언트 요청에 대한 이벤트를 포함할 수 있다. 일부 실시예에서, 성능 지시자는 성능 임계치 에 상대적으로 표현될 수 있다(예를 들면, 하나의 오류만이 검출되었지만, 클라이언트 디바이스로부터의 추가 자료를 통해 정정되고, 이에 따라 모델 학습에 대한 필요성을 나타내는 성능 임계치에 도달하지 않음). 또한 컴 퓨팅 디바이스는 성능 지시자에 기초하여 모델에 대한 수정을 결정할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 다수의 클라이언트 요청(예를 들면, 제1 및 제2 클라이언트 요청)으로부터의 도메인 데이터 및 /또는 다수의 클라이언트 요청에 대한 성능 지시자에 기초하여 모델에 대한 수정을 결정할 수 있다. 일부 실시예에서, 컴퓨팅 디바이스는 매니저 디바이스로 모델의 결정된 수정에 대한 통지를 전송할 수 있다. 후속하여 매니저 디바이스는 수정을 승인, 수정을 대체, 수정을 유예, 모델을 유예, 수정을 거절, 및/ 또는 컴퓨팅 디바이스 또는 네트워크 아키텍쳐 내의 다른 디바이스로 전송될 수 있는 모델에 대한 수 정 요청을 생성할 수 있다. 수정 요청을 수신하는 디바이스는 수정 요청에 기초하여 모델을 수정(예를 들면, 수 정 요청에서 식별된 모델의 파라미터를 수정)할 수 있다. 본 개시는 그 특정 실시예를 참조하여 도시되고 설명되었지만, 본 개시는 다른 환경에서, 변경없이, 실시될 수 있음을 이해할 것이다. 전술한 설명은 예시의 목적으로 제시되었다. 그것은 개시된 정확한 형태나 실시예에 대 해 총망라된 것이 아니며 이것으로 한정되는 것은 아니다. 개시된 실시예의 설명 및 실시를 고려하는 것으로부 터 변경 및 조정이 통상의 기술자에게 명백할 것이다. 추가적으로, 비록 개시된 실시예의 형태가 메모리에 저장 되는 것으로서 설명되었지만, 통상의 기술자는 이들 형태가 2차 저장 디바이스, 예를 들면, 하드디스크나 CD ROM, 또는 다른 형태의 RAM이나 ROM, USB 매체, DVD, 블루레이, 또는 다른 광 드라이브 매체와 같이, 다른 형태 의 컴퓨터 판독 가능한 매체에 저장될 수도 있는 것을 이해할 것이다. 상술한 설명 및 개시된 방법에 기초한 컴퓨터 프로그램은 숙련된 개발자의 기술 내에 있다. 여러 프로그램 혹은 프로그램 모듈은 통상의 기술자에게 알려진 어느 기술을 이용하여 생성되거나, 또는 기존의 소프트웨어와 연결 하여 설계될 수 있다. 예를 들면, 프로그램 섹션 혹은 프로그램 모듈은 닷넷 프레임워크, 닷넷 컴팩트 프레임워 크(및 비주얼 베이식, C 등과 같은, 관련 언어), 자바, C++, 오브젝티브 C, HTML, HTML/AJAX 조합, XML, 또는 자바 애플릿이 포함된 HTML 내에서 혹은 그것들에 의해서 설계될 수 있다. 게다가, 여기에서는 예시적인 실시예가 설명되었지만, 본 개시에 기초하여 통상의 기술자가 이해할 수 있는 바 와 같이, 일부 또는 모든 실시예의 범위는 동등한 요소, 변경, 생략, 조합(예로써, 여러 실시예에 걸치는 형태 의 조합), 조정 및/또는 수정을 가질 수 있다. 청구범위 내의 제한 사항은 그 청구범위 내에 적용된 언어에 기 초하여 폭넓게 이해되도록 하는 것이며, 응용의 수행 동안 혹은 본 명세서 내에 설명된 예시로 한정되는 것은 아니다. 그 예시는 비배타적으로 해석되도록 하기 위한 것이다. 추가로, 개시된 방법의 스텝은 어떤 다른 방법 으로 변경되거나, 스텝을 재배열, 삽입 및/또는 삭제하는 것을 포함할 수 있다. 그러므로, 설명 및 예시는 오직 예시적으로 고려되는 것이며, 진정한 범위 및 기술 사상은 다음의 청구범위 및 그 동등한 전체 범위에 의해 나 타내지는 것으로 의도된다.도면 도면1a 도면1b 도면1c 도면1d 도면1e 도면2 도면3a 도면3b 도면3c 도면3d 도면4 도면5 도면6"}
{"patent_id": "10-2022-7039482", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 개시된 실시예에 따른, 배송, 운송, 및 물류 운영을 가능하게 하는 통신을 위한 컴퓨터 시스템을 포함 하는 네트워크의 예시적인 실시예를 나타낸 개략적인 블록도이다. 도 1b는 개시된 실시예에 따른, 상호 동작 사용자 인터페이스 요소에 따라 검색 요청을 만족시키는 하나 이상의 검색 결과를 포함하는 검색 결과 페이지(SRP; Search Result Page)의 샘플을 나타낸 도면이다. 도 1c는 개시된 실시예에 따른, 상호 동작 사용자 인터페이스 요소에 따라 제품 및 제품에 대한 정보를 포함하 는 싱글 디스플레이 페이지(SDP; Single Display Page)의 샘플을 나타낸 도면이다. 도 1d는 개시된 실시예에 따른, 상호 동작 사용자 인터페이스 요소에 따라 가상의 쇼핑 장바구니에 아이템을 포 함하는 장바구니 페이지의 샘플을 나타낸 도면이다. 도 1e는 개시된 실시예에 따른, 상호 동작 사용자 인터페이스 요소에 따라, 가상의 쇼핑 장바구니와 구매 및 배 송에 관한 정보를 포함하는 주문 페이지의 샘플을 나타낸 도면이다. 도 2는 개시된 실시예에 따른, 개시된 컴퓨터 시스템을 활용하도록 구성된 예시적인 풀필먼트(fulfillment) 센 터의 개략적인 도면이다. 도 3a는 인테이크(intake) 서브-시스템의 예시적인 픽토그래픽(pictographic) 표시를 나타낸다. 도 3b는 출력 서브-시스템의 예시적인 픽토그래픽 표시를 나타낸다. 도 3c는 개시된 실시예에 따른, 예시적인 제어 서브-시스템, 예시적인 반환 이벤트 스토어, 예시적인 규칙 엔진, 및 예시적인 외부 데이터 소스의 픽토그래픽 표시를 나타낸다. 도 3d는 작업 흐름 서브-시스템의 예시적인 픽토그래픽 표시를 나타낸다. 도 4는 네트워크 아키텍쳐의 예시적인 픽토그래픽 표시를 나타낸다. 도 5는 컴퓨팅 디바이스의 예시적인 픽토그래픽 표시를 나타낸다.도 6은 개시된 실시예에 따른, 프로세서에 의해 수행될 수 있는 클라이언트 요청을 취급하기 위한 예시적인 프 로세스의 흐름도를 도시한다."}
