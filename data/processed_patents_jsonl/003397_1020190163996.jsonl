{"patent_id": "10-2019-0163996", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0073310", "출원번호": "10-2019-0163996", "발명의 명칭": "룰 베이스 기반 머신 비전을 위한 관리 방법", "출원인": "성균관대학교산학협력단", "발명자": "정종필"}}
{"patent_id": "10-2019-0163996", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "입력된 이미지를 분석하기 위하여 모듈화된 복수개의 영상처리 기법들을 조합하여 최적의 모듈 조합을 탐색하는단계; 탐색된 최적의 모듈 조합에 대응하는 파라미터 설정 GUI를 제공하는 단계; 설정 GUI에 입력된 설정값을 적용하여 최적 모듈 조합에 따라 이미지를 분석하는 단계; 및이미지 분석 결과를 제공하는 단계를 포함하고, 상기 모듈은 필터링 모듈, 모폴로지 모듈, 색공간 변환 모듈을 포함하는 것을 특징으로 하는 룰 베이스 기반 머신 비전을 위한 관리 방법."}
{"patent_id": "10-2019-0163996", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 분석 결과에 기초하여 이미지에 에러를 발견한 경우, 이미지 분석을 통해 에러의 원인 및이에 대한 대응방안을 제공하는 룰 베이스 기반 머신 비전을 위한 관리 방법."}
{"patent_id": "10-2019-0163996", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 최적의 모듈 조합을 탐색하는 단계는, 중간값필터, 평균필터, 가우시안필터 각각을 사용하여 분석값을 획득하고, 분석값이 가장 높은 필터를 선택하는것을 특징으로 하는 룰 베이스 기반 머신 비전을 위한 관리 방법."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 룰 베이스 기반 머신 비전을 위한 관리 방법은, 입력된 이미지를 분석하기 위하여 모듈화된 복수개의 영상처리 기법들을 조합하여 최적의 모듈 조합을 탐색하는 단계; 탐색된 최적의 모듈 조합에 대응하는 파라미터 설정 GUI를 제공하는 단계; 설정 GUI에 입력된 설정값을 적용하여 최적 모듈 조합에 따라 이 미지를 분석하는 단계; 및 이미지 분석 결과를 제공하는 단계를 포함하고, 상기 모듈은 필터링 모듈, 모폴로지 모듈, 색공간 변환 모듈을 포함한다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 룰 베이스 기반 머신 비전을 위한 관리 방법에 관한 것으로 더 구체적으로는 자동화된 이미지 분석과 최적화된 GUI를 제공하는 머신 비전을 위한 관리 방법에 관한 것이다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "머신 비전을 통한 이미지 분류 솔루션은 공장에서 여러 목적으로 사용되고 있다. 이러한 머신 비전 알고리즘을 설계하기 위해 여러 개발자가 상당 기간을 들여야 했다. 또한, 기존의 머신 비전 프로그램 GUI는 활용 솔루션과 무관하게 구성되어 사용되지 않는 불필요한 기능들이 다수 포함돼 난잡하고 사용자에게 불편함을 주는 GUI를 구 성하고 있다. 따라서, 개발자가 아닌 일반 사용자들은 GUI의 사용에 있어 어려움을 겪는다. 그러나 최근의 동향으로는 관련 알고리즘들이 사용에 용이하도록 모듈화되어 배포되고 있으며, 빠른 컴퓨팅 연 산이 가능해졌다. 따라서, 개발자가 아닌 일반 사용자도 용이하게 사용 가능한 머신 비전 알고리즘이 요구된다. 기존의 머신 비전 솔루션의 활용에서 공장의 조명 상태가 바뀌거나 카메라의 위치가 흔들릴 경우 잘 동작하던 솔루션이 정확한 분류를 수행하지 못하는 경우가 발생한다. 이럴 경우 일반적으로 솔루션 업체의 개발자가 공장 을 방문해 직접 문제를 분석하고 해결해야 한다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "상기의 문제점을 해결하기 위해 본 발명의 일 실시예는 이미지를 입력하면 이를 자동으로 분류해내고, 문제 원 인 추적을 통해 사용자에게 하드웨어적/ 소프트웨어적 개선 방안을 제안하는 룰 베이스 기반 머신 비전을 위한 관리 방법을 제공한다. 또한, 본 발명의 일 실시예에 따르면, 이미지 자동 분류를 위한 세부 조정을 수행할 수 있도록 이미지에 최적화 된 GUI를 제공한다. 또한, 본 발명의 일 실시예에 따르면, 과거의 이미지를 누적해 보관하고 있다가 문제가 발생한 시점부터의 이미 지와 비교, 분석을 통해 <카메라 위치 재조정>, <조명 재조정> 등의 하드웨어적 솔루션을 포함해 <소프트웨어 파라미터 조정> 등의 솔루션을 제안하여 공장의 실무자가 이를 통해 시스템을 직접 유지보수를 가능하게 하는데 그 목적이 있다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 목적을 달성하기 위한 본 발명의 일 실시예에 따른 룰 베이스 기반 머신 비전을 위한 관리 방법은, 입력 된 이미지를 분석하기 위하여 모듈화된 복수개의 영상처리 기법들을 조합하여 최적의 모듈 조합을 탐색하는 단 계; 탐색된 최적의 모듈 조합에 대응하는 파라미터 설정 GUI를 제공하는 단계; 설정 GUI에 입력된 설정값을 적 용하여 최적 모듈 조합에 따라 이미지를 분석하는 단계; 및 이미지 분석 결과를 제공하는 단계를 포함하고, 상 기 모듈은 필터링 모듈, 모폴로지 모듈, 색공간 변환 모듈을 포함한다. 상기 분석 결과에 기초하여 이미지에 에러를 발견한 경우, 이미지 분석을 통해 에러의 원인 및 이에 대한 대응 방안을 제공한다. 상기 최적의 모듈 조합을 탐색하는 단계는, 중간값필터, 평균필터, 가우시안필터 각각을 사용하여 분석값을 획 득하고, 분석값이 가장 높은 필터를 선택한다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 룰 베이스 기반 머신 비전 장치에 따르면, 이미지에 최적화된 GUI를 제공하여 공장 환경에서 관 련 지식이 없는 실무자가 손쉽게 머신 비전을 이용한 운용 및 유지보수가 가능하다. 또한, 자동화된 이미지 분석과 최적화된 GUI를 제공을 통해 문제 원인 및 해결 정보를 사용자에게 자동으로 제 공하여 실무자에게 편의성을 제공하고 신속한 문제 해결을 가능하게 한다."}
{"patent_id": "10-2019-0163996", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는바, 특정 실시예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 본 발명을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 각 도면을 설명하면서 유사한 참조부호를 유사한 구성요소에 대해 사용하였다. 제1, 제2, A, B 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어 들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있 고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 기재된 항 목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함한다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 본 출원에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함 하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조 합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일 반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥 상 가지는 의미와 일치하는 의 미를 가지는 것으로 해석되어야 하며, 본 출원에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적 인 의미로 해석되지 않는다. 기존의 인공지능 솔루션들은 이미지를 입력하면 이를 학습하여 자동으로 이미지를 분류해낸다. 이는 이미지를 통째로 학습하는 머신러닝 기법을 활용한 것인데, 전통적인 룰베이스 머신 비전에 비해 많은 데이터와 긴 학습 시간이 필요하며 분류해내는 동작 속도도 더 느리다. 반면 본 솔루션에서는 이미지를 머신러닝 기법으로 분석하 는 것이 아닌, 탐색 기법을 통해 이미지의 차별점들을 도출해내고, 이를 룰베이스 로직으로 재구축해 분류를 수 행한다. 따라서 머신러닝 기법에 비해 낮은 확장성을 갖지만 훨씬 적은 이미지가 필요하고, 분류해내는 동작 속 도도 더 빠르다. 공장 환경은 매우 정제된 환경으로 확장성에 비해 더 빠른 속도의 연산이 필요하기 때문에 머 신러닝이 아닌 룰베이스 기법의 이점을 더 잘 살릴 수 있다는 장점이 있다. 이하, 본 발명에 따른 바람직한 실시예를 첨부된 도면을 참조하여 상세하게 설명한다. 도 1은 본 발명의 일 실시예에 따른 룰 베이스 기반 머신 비전을 위한 관리 방법을 설명하는 흐름도이고, 도 2 는 본 발명의 일 실시예에 따른 탐색 알고리즘을 설명하는 도면이고, 도 3은 본 발명의 일 실시예에 따른 탐색 알고리즘에 따라 GUI를 제공하는 도면이며, 도 7은 본 발명의 일 실시예에 따른 이미지 라벨 입력을 설명하는 도면이다. 도 1에 도시한 바와 같이, 룰 베이스 기반 머신 비전을 위한 관리 장치의 관리방법은 크게 세팅단계와 구동단계 를 포함한다. 세팅단계는, 이미지 분석단계와, GUI 구성 단계를 포함한다. 이미지 분석단계는 분류할 이미지 정보(이미지, 이미지의 라벨)를 프로그램에 입력한다. 관리장치는 이미지 입력을 위해, 도 2에 도시한 바와 같이 이미지 입력을 위한 UI를 제공할 수 있다. 사용자는 이미지 입력 UI를 통해 컴퓨터 내에 존재하는 이미지와 그에 적합한 라벨 입력한다. 관리장치는 입력된 이미지를 분석하여 영상처리 방법을 도출한다. 도 2에 도시한 바와 같이, 탐색 알고리즘의 결과 모듈화된 영상처리 기법들을 조합해 가장 최적의 분류 결과를 도출해내는 분류 방법/ 전처리 방법/ 이미지별 분류 기준 등을 도출해낸다. 모듈화된 영상 기법은 파이썬, C++ 등을 기반으로 설계할 수 있도록 오폰소스(ex. opencv)로 제공된다. 분류 방법은 컬러기반, 텍스트기반, QR코드 기반, 템플릿 기반 등 기존에 이미지 분류에서 가장 빈번하게 사용 되는 방법 중 선택된다. 전처리 방법은 필터링, 모폴로지, 색공간 변환 등 전처리를 위해 가장 빈번하게 사용되 는 방법 중 선택되며, 파라미터 최적화를 위한 탐색을 추가로 거친다. 이미지별 분류 기준이 마련되어 조건에 따른 분류를 수행할 수 있도록 분류 모델이 완성된다. 보다 구체적으로, 복수개의 필터링 모듈, 색공간 변화 모듈, 경계선 도출 모듈이 각각 하나 이상 준비되어 있는 경우, 각각의 모듈들을 조합하여 분류 정확도가 높은 최적의 조합을 선정한다. 예를 들어, 필터 모듈로서, 가우시안 필터, Median 필터, Mean 필터가 있고, 경계선 도출 모듈로써 sobel mask, canny mask가 포하되어 있는 경우, 가우시안 필터, Median 필터, Mean 필터 중 하나 필터와, 경계선 도출 필터 중 하나의 필터와, 색공간 변화 필터의 조합 가능한 경우의 수를 모두 확인하여, 각각의 분류 정확도를 판단하 고, 가장 분류 정확도가 높은 조합을 최종 알고리즘으로 선정한다. 도 8은 본 발명의 일 실시예에 따른 이미지 분석 결과 UI를 제공하는 도면이다. 도 8과 같이 입력된 이미지에 대한, 분류 분석 결과가 사용자에게 제공될 수 있다. 도 9는 본 발명의 일 실시예에 따른 제1 분류결과를 예시하는 도면이고, 도 10은 본 발명의 일 실시예에 따른 제2 분류결과를 예시하는 도면이다. 분류 결과 제공 화면에는 프로그램을 통해 어떤 분류 조건에서 분류되는지, 처리 속도는 얼마나 나오는지, 분류 결과 어떻게 분류되었는지 등이 시각화되어 표현된다. 사용자가 Run/Stop 조정 선택 가능한 버튼을 제공하고, 사용자에 의해 버튼이 선택되면, 프로그램 Run/Stop 을 수행한다. 도 3에 도시된 바와 같이, 영상처리 방법이 도출되면 즉 선정된 모듈에 따라 미리 저장된 GUI 블록을 불러와 최 종 GUI를 구성한다. 이 때, 사용된 영상처리 방법을 제외한 나머지는 모두 제거시켜 최적화된 GUI를 제공한다. 이로써, 세팅 단계는 끝이나고, 사용자는 GUI 를 통해 정확도가 가장 높은 조합으로 용이하게 관리 장치에 분석 을 실행시킬 수 있다. 다음 관리 방법의 구동 단계에 대하여 설명한다. 구동 단계는 프로그램 실행 단계와 프로그램 점검 단계를 포함할 수 있다. 프로그램 실행 단계에서는 실제 프로그램이 구동되고, 입력되는 이미지를 실시간으로 받아 어느 이미지인지를 분류한다. 프로그램 점검 단계에서는 입력되는 이미지 정보를 임의로 샘플링하여 수집, 분류 결과와 함께 표시한다. 사용자가 이를 보고 프로그램이 제대로 돌아가고 있는지 확인하고, 분류가 제대로 된다면 다시 프로그램을 실 행하고, 그렇지 않다면 문제 원인을 추적하고 원인에 맞는 대응 방안에 따라 동작한다. 도 11은 본 발명의 일 실시예에 따른 프로그램 점검 UI를 제공하는 도면이다. 도 11에 도시한 바와 같이, 프로그램 점검 UI를 통해 사용자는 전체 얻어지고 있는 이미지 중 몇 장을 샘플링할 것인지를 설정하고 Test 버튼을 누르면 관리장치는 사용자 설정에 따라 이미지와 분류된 결과를 도출하여, 제공 한다. 사용자는 결과를 확인하여, 머신 비전이 정상적으로 구동되고 있을 경우 계속해서 <프로그램 실행>을 선택하고, 머신 비전에 오류가 있을 경우 <문제원인 추적>을 실행시킨다. 관리 장치는 문제원인 추적을 위해 과거에 제대로 돌아갔을 때의 이미지와 새로 입력되는 이미지의 차이를 인공 지능으로 분석하고, 하드웨어적/소프트웨어적 문제 원인을 도출하고 개선 방향 제공한다. 도 4는 본 발명의 일 실시예에 따른 제1 문제 추적을 예시하는 도면이고, 도 5는 본 발명의 일 실시예에 따른 제2 문제 추적을 예시하는 도면이며, 도 6은 본 발명의 일 실시예에 따른 제3 문제 추적을 예시하는 도면이다. 도 4는 카메라 흔들림에 의한 에러에 대한 문제 원인 추적 과정을 설명한다. 정상상태일 때의 렌즈 내 이미지와 카메라가 흔들렸을 때의 렌즈 내 이미지를 비교한다. 도 4에 도시된 바와 같이, 카메라 흔들림의 경우 렌즈 내 이미지에서 대상 왜곡이 발생됨을 확인할 수 있고 이러한 왜곡 발생 원인을 이미지 데이터에 기초하여 인공지능 문제 원인을 추적한다. 이러한 추적에 의해, 카메라 흔들림이라는 문제 원인을 파악하고, 카메라 흔들림을 해결하기 위한 미리 저장된 솔루션을 확인하여 출력한다. 예를 들어, 화면에 '카메라 각도를 z방향으로 30도 조정 하시오'라는 등의 솔루션을 디스플레이 할 수 있다. 도 5는 외부 조명 변화에 의한 에러에 대한 문제 원인 추적 과정을 설명한다. 정상상태일 때의 렌즈 내 이미지 와 외부 조명이 발생했을 때의 렌즈 내 이미지를 비교한다. 도 5에 도시한 바와 같이, 외부 조명이 변화된 경우, 렌즈 내 이미지에서 밝기 왜곡이 발생됨을 확인할 수 있고 이러한 왜곡 발생 원인을 이미지 데이터에 기 초하여 인공지능 문제 원인을 추적한다. 이러한 추적에 의해, 외부 조명 변화라는 문제 원인을 파악하고, 외부 조명 변화를 해결하기 위한 미리 저장된 솔루션을 확인하여 출력한다. 예를 들어, 화면에 '좌상향측 외부 조명 을 제거하시오'라는 등의 솔루션을 디스플레이 할 수 있다. 도 6은 먼지로 인한 이미지 내 노이즈 증가에 대한 문제 원인 추적 과정을 설명한다. 정상상태일 때의 렌즈 내 이미지와 외부 먼지가 발생했을 때의 렌즈 내 이미지를 비교한다. 도 5에 도시한 바와 같이, 외부 조명이 변화 된 경우, 렌즈 내 이미지에서 먼지에 의한 노이즈 증가 왜곡이 발생됨을 확인할 수 있고 이러한 왜곡 발생 원인 을 이미지 데이터에 기초하여 인공지능 문제 원인을 추적한다. 이러한 추적에 의해, 먼지에 의한 노이즈 증가라 는 문제 원인을 파악하고, 먼지에 의한 노이즈 증가를 해결하기 위한 미리 저장된 솔루션을 확인하여 출력한다. 예를 들어, 화면에 '프로그램 상에서 노이즈 필터 크기를 조절하시오'라는 등의 솔루션을 디스플레이 할 수 있 다. 도 12는 본 발명의 일 실시예에 따른 프로그램 조정 UI를 제공하는 도면이다. 문제원인 추적에서 도출된 결과에 따라 하드웨어적/ 소프트웨어적 솔루션을 수행한다. 소프트웨어 파라미터를 조정하는 솔루션이 도출될 경우, 앞서 자동으로 설계된 GUI에 포함되는 도 12와 같은 파라미터 조정 GUI를 제공 한다. 파라미터 조정 GUI에 의해 조정된 값에 의해 문제가 해결되면 다시 프로그램 실행 단계로 되돌아간다. 공장에서 활용되는 머신 비전 프로그램은 카메라, 조명 등의 이미지 데이터 습득 환경을 제어할 수 있다. 즉, 자율주행차 등과 같이 갑작스런 환경 변화가 매우 적어 전통적인 룰베이스 머신 비전 프로그램의 활용이 용이하 다. 게다가 룰베이스 머신 비전 방식은 일반적으로 연산에 있어서 머신러닝 기반 방식에 비해 더 적은 데이터를 요구하고, 더 빠른 연산이 가능하다. 그럼에도 불구하고 지금까지는 룰베이스 머신 비전 방식은 전문적인 지식 을 요구했기 때문에 전문가 외에는 활용이 어려웠다. 본 발명은 룰베이스 머신 비전 프로그램을 비전문가도 잘 활용할 수 있도록 자동화된 알고리즘 설계 과정을 더했다. 이를 통해 공장 환경에 최적화된 룰베이스 머신 비전 프로그램의 더 활발한 이용이 가능할 것으로 기대된다. 이상 첨부된 도면을 참조하여 본 발명의 실시 예들을 설명하였지만, 본 발명이 속하는 기술 분야에서 통상의 지 식을 가진 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시 예들은 모든 면에서 예시적인 것이며 한정적이 아닌 것으로 이해해야만 한다. 부호의 설명도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2019-0163996", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 룰 베이스 기반 머신 비전을 위한 관리 방법을 설명하는 흐름도이다. 도 2는 본 발명의 일 실시예에 따른 탐색 알고리즘을 설명하는 도면이다. 도 3은 본 발명의 일 실시예에 따른 탐색 알고리즘에 따라 GUI를 제공하는 도면이다. 도 4는 본 발명의 일 실시예에 따른 제1 문제 추적을 예시하는 도면이다. 도 5는 본 발명의 일 실시예에 따른 제2 문제 추적을 예시하는 도면이다. 도 6은 본 발명의 일 실시예에 따른 제3 문제 추적을 예시하는 도면이다. 도 7은 본 발명의 일 실시예에 따른 이미지 라벨 입력을 설명하는 도면이다. 도 8은 본 발명의 일 실시예에 따른 이미지 분석 결과 UI를 제공하는 도면이다. 도 9는 본 발명의 일 실시예에 따른 제1 분류결과를 예시하는 도면이다. 도 10은 본 발명의 일 실시예에 따른 제2 분류결과를 예시하는 도면이다. 도 11은 본 발명의 일 실시예에 따른 프로그램 점검 UI를 제공하는 도면이다. 도 12는 본 발명의 일 실시예에 따른 프로그램 조정 UI를 제공하는 도면이다."}
