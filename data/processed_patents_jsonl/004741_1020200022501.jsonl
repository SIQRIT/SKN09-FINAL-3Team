{"patent_id": "10-2020-0022501", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0107458", "출원번호": "10-2020-0022501", "발명의 명칭": "모델의 성능 테스트를 위한 컴퓨터 프로그램", "출원인": "주식회사 마키나락스", "발명자": "김기현"}}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서 실행되는 경우, 상기 하나 이상의 프로세서들로 하여금 모델의 성능 테스트를 위한 이하의 동작들을 수행하도록 하며, 상기 동작들은:데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작;상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하는 동작; 및상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작;을 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작은,상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하는 동작;을 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하는 동작은,상기 데이터 세트에서 서로 상이한 복수의 데이터를 선택하는 동작; 및상기 선택된 복수의 데이터 중 하나의 데이터의 값과 다른 데이터의 값을 사전 결정된 정도로 교환하여 상기 복수의 변형된 데이터를 생성하는 동작; 을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작은,상기 데이터 세트를 인공 어노말리(pseudo anomaly) 생성 모델의 입력으로 처리하여 상기 복수의 변형된 데이터를 생성하는 동작;을 포함하는,공개특허 10-2021-0107458-3-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 데이터 세트를 인공 어노말리 생성 모델의 입력으로 처리하여 상기 복수의 변형된 데이터를 생성하는 동작은,제 1 데이터 세트를 이용하여 상기 제 1 데이터 세트에 대한 제 1 확률 분포 및 제 1 표본 통계량을 연산하는동작; 및제 2 데이터 세트에 대한 제 2 확률 분포 및 제 2 표본 통계량을 학습하는 상기 인공 어노말리 생성 모델을 훈련시키는 동작;을 포함하며, 상기 제 1 데이터 세트 및 상기 제 2 데이터 세트는,동종의 데이터에 대한 벡터 또는 스칼라인,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 인공 어노말리 생성 모델을 훈련시키는 동작은, 상기 제 1 확률 분포와 상기 제 2 확률 분포 간의 분포 간 유사도를 연산하는 동작; 및상기 분포 간 유사도에 기초하여, 상기 인공 어노말리 생성 모델의 훈련을 추가적으로 수행할지 여부를 결정하는 동작;을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 복수의 변형된 데이터 각각에 변형 레이블을 부여하는 동작; 및 상기 변형 레이블이 부여된 복수의 변형된 데이터를 포함하는 테스트 데이터 세트를 생성하는 동작; 을 더 포함하고, 그리고상기 변형 레이블은,상기 복수의 변형된 데이터 각각에 대한 설명을 포함하며, 상기 복수의 변형된 데이터 각각의 상태에 관련한 정보, 또는 상기 복수의 변형된 데이터 각각의 변형과 관련한 설명 정보 중 적어도 하나를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,공개특허 10-2021-0107458-4-상기 테스트 데이터 세트는, 하나 이상의 테스트 데이터 서브세트를 포함하며,상기 하나 이상의 테스트 데이터 서브세트 각각은,동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 중 하나 이상의 데이터 및 상기 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 각각에 기초하여 생성된 복수의 변형된 데이터 중 하나 이상의 변형된데이터로 구성되는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 테스트 데이터 세트에 대한 평가를 수행하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 테스트 데이터 세트에 대한 평가를 수행하는 동작은, 테스트 데이터 서브세트에 포함된 데이터 각각을 상기 모델에 입력시켜 해 공간에 매핑시키는 동작; 및상기 테스트 데이터 서브세트에 포함된 데이터 및 상기 모델의 분류 기준에 기초하여 상기 테스트 데이터 세트의 적합도를 연산하는 동작; 을 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은,상기 테스트 데이터 세트에 포함된 상기 복수의 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 상기 모델의 성능을 테스트하는 동작;을 포함하는, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1 항에 있어서,상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은,상기 모델의 학습 중, 상기 모델의 학습 완료 또는 상기 모델의 운용 중 적어도 하나의 시점에 수행되는,공개특허 10-2021-0107458-5-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 1 항에 있어서,상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은,상기 모델의 학습 시점에 대응하여 사전 결정된 에폭 간격으로 제 1 테스트 데이터 세트를 상기 모델을 이용하여 연산함으로써, 상기 모델의 학습 성능을 테스트하는 동작; 상기 모델의 학습 완료 시점에 대응하여 상기 제 1 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기모델의 검출 성능을 테스트하는 동작; 및 상기 모델의 운용 시점에 대응하여 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능 열화(Performance Degradation)에 대한 테스트를 수행하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 제 1 테스트 데이터 세트는, 제 1 시점에 대응하여 획득된 각각 상이한 클래스로 구성되는 제 1 테스트 데이터 서브세트를 포함하며,상기 제 1 테스트 데이터 서브세트는 하나의 클래스의 데이터 및 상기 하나의 클래스의 데이터에 기초하여 생성된 변형된 데이터로 구성되는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 13 항에 있어서,상기 제 2 테스트 데이터 세트는,상기 제 1 시점 이후 시점인 제 2 시점에 대응하여 추가적으로 획득된 데이터 및 상기 데이터에 대한 변형된 데이터로 구성되는 제 2 테스트 데이터 서브세트를 포함하며,상기 제 2 시점은,상기 모델의 운용 시점에 대응하는 시점인,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,상기 모델의 운용 시점에 대응하여 상기 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능 열화에 대한 테스트를 수행하는 동작은,상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 수행되는, 공개특허 10-2021-0107458-6-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16 항에 있어서,상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생한 것으로 판단하는 동작; 또는상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생하지 않은 것으로 판단하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "모델의 성능을 테스트하는 컴퓨팅 장치로서,하나 이상의 코어를 포함하는 프로세서;상기 프로세서에서 실행가능한 프로그램 코드들을 포함하는 메모리; 및다른 컴퓨팅 장치와 데이터를 송수신하는 네트워크부;를 포함하고, 그리고상기 프로세서는,데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하고,상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하고, 그리고 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는,모델의 성능을 테스트하는 컴퓨팅 장치."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "하나 이상의 프로세서를 포함하는 컴퓨팅 장치에서 수행되는 모델의 성능을 테스트하는 방법으로, 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 단계;상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하는 단계; 및 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 단계;를 포함하는,하나 이상의 프로세서를 포함하는 컴퓨팅 장치에서 수행되는 모델의 성능을 테스트하는 방법."}
{"patent_id": "10-2020-0022501", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "학습 과정에서 적어도 일부가 업데이트 되는 신경망의 파라미터에 대응하는 데이터 구조가 저장된 컴퓨터 판독가능한 기록 매체로서, 상기 신경망의 동작은 상기 파라미터에 적어도 부분적으로 기초하고, 상기 학습 과정은,데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 단계;상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하는 단계; 및 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 단계;공개특허 10-2021-0107458-7-를 포함하는,데이터 구조가 저장된 컴퓨터 판독가능한 기록 매체."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전술한 과제를 해결하기 위한 본 개시의 일 실시예에서, 하나 이상의 프로세서들에 의해 실행 가능한 컴퓨턴 판 독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨터 장치의 하나 이상의 프로세 서에서 실행되는 경우 데이터 처리를 위한 이하의 동작들을 수행하도록 하며, 상기 동작들은: 데이터 세트에 포 함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작, 복수의 데이터 및 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하는 동작 및 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 성능을 테스트하는 동작을 포함할 수 있다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 인공지능 기술 분야에 관한 것으로, 보다 구체적으로 인공지능 모델의 성능 테스트를 위한 컴퓨터 프 로그램에 관한 것이다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일시적으로 또는 데이터 베이스에 저장되어 영구적으로 사용할 수 있는 센서 데이터가 축적됨에 따라, 수 많은 산업 장비의 모니터링 데이터의 자동화 처리에 대한 연구가 진행되고 있다. 데이터의 상태 판단 방법을 구현하 기 위해 인공 신경망 네트워크(artificial neural network)를 이용한 인공지능 기술에 대한 연구가 진행되고 있 다. 인공 신경망 네트워크를 활용한 딥러닝(deep learning) 모델은 복잡한 비선형 또는 동적 패널을 효과적으로 학 습할 수 있는 방법을 제공하지만, 학습된 모델에 테스트하기 위한 테스트 데이터 구축 방법에 대한 기술적 과제 가 존재하였다. 대한민국특허 공개 문헌 KR1020180055708은 인공 지능을 활용한 이미지 처리 방법을 개시한다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 인공지능 모델의 성능 테스트를 위한 컴퓨터 프로그램을 제공하기 위한 것이다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 과제를 해결하기 위한 본 개시의 일 실시예 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램 이 개시된다. 상기 컴퓨터 프로그램은 컴퓨터 장치의 하나 이상의 프로세서에서 실행되는 경우, 모델의 성능 테 스트를 위한 이하의 동작들을 수행하도록 하며, 상기 동작들은: 데이터 세트에 포함된 복수의 데이터 각각에 기 초하여 복수의 변형된 데이터를 생성하는 동작, 상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하는 동작 및 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델 의 성능을 테스트하는 동작을 포함할 수 있다. 대안적으로, 상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작 은, 상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하는 동작을 포함할 수 있다. 대안적으로, 상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하는 동작은, 상기 데이터 세트에서 서로 상이한 복수의 데이터를 선택하는 동작 및 상기 선택된 복수의 데이터 중 하나의 데이터 의 값과 다른 데이터의 값을 사전 결정된 정도로 교환하여 상기 복수의 변형된 데이터를 생성하는 동작을 포함 할 수 있다. 대안적으로, 상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하는 동작 은, 상기 데이터 세트를 인공 어노말리(pseudo anomaly) 생성 모델의 입력으로 처리하여 상기 복수의 변형된 데 이터를 생성하는 동작을 포함할 수 있다. 대안적으로, 상기 데이터 세트를 인공 어노말리 생성 모델의 입력으로 처리하여 상기 복수의 변형된 데이터를 생성하는 동작은, 제 1 데이터 세트를 이용하여 상기 제 1 데이터 세트에 대한 제 1 확률 분포 및 제 1 표본 통 계량을 연산하는 동작 및 제 2 데이터 세트에 대한 제 2 확률 분포 및 제 2 표본 통계량을 학습하는 상기 인공 어노말리 생성 모델을 훈련시키는 동작을 포함하며, 상기 제 1 데이터 세트 및 상기 제 2 데이터 세트는, 동종 의 데이터에 대한 벡터 또는 스칼라일 수 있다. 대안적으로, 상기 인공 어노말리 생성 모델을 훈련시키는 동작은, 상기 제 1 확률 분포와 상기 제 2 확률 분포 간의 분포 간 유사도를 연산하는 동작 및 상기 분포 간 유사도에 기초하여, 상기 인공 어노말리 생성 모델의 훈 련을 추가적으로 수행할지 여부를 결정하는 동작을 포함할 수 있다. 대안적으로, 상기 복수의 변형된 데이터 각각에 변형 레이블을 부여하는 동작 및 상기 변형 레이블이 부여된 복 수의 변형된 데이터를 포함하는 테스트 데이터 세트를 생성하는 동작을 더 포함하고, 그리고 상기 변형 레이블 은, 상기 복수의 변형된 데이터 각각에 대한 설명을 포함하며, 상기 복수의 변형된 데이터 각각의 상태에 관련 한 정보, 또는 상기 복수의 변형된 데이터 각각의 변형과 관련한 설명 정보 중 적어도 하나를 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트는, 하나 이상의 테스트 데이터 서브세트를 포함하며, 상기 하나 이상의 테스트 데이터 서브세트 각각은, 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 중 하나 이상의 데 이터 및 상기 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 각각에 기초하여 생성된 복수의 변형된 데이터 중 하나 이상의 변형된 데이터로 구성될 수 있다. 대안적으로, 상기 테스트 데이터 세트에 대한 평가를 수행하는 동작을 더 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트에 대한 평가를 수행하는 동작은, 상기 테스트 데이터 서브세트에 포함된 데이터 각각을 상기 모델에 입력시켜 해 공간에 매핑시키는 동작 및 상기 테스트 데이터 서브세트에 포함된 데 이터 및 상기 모델의 분류 기준에 기초하여 상기 테스트 데이터 세트의 적합도를 연산하는 동작을 포함할 수 있 다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은, 상기 테스트 데이터 세트에 포함된 상기 복수의 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 상기 모델의 성능을 테스트하는 동작을 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은, 상기 모델의 학습 중, 상기 모델의 학습 완료 또는 상기 모델의 운용 중 적어도 하나의 시점에 수행될 수 있다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 동작은, 상기 모델의 학습 시점에 대응하여 사전 결정된 에폭 간격으로 제 1 테스트 데이터 세트를 상기 모델을 이용하여 연산함으로써, 상기 모델의 학습 성능을 테스트하는 동작, 상기 모델의 학습 완료 시점에 대응하여 상 기 제 1 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 검출 성능을 테스트하는 동작 및 상 기 모델의 운용 시점에 대응하여 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능 열화(Performance Degradation)에 대한 테스트를 수행하는 동작을 포함할 수 있다. 대안적으로, 상기 제 1 테스트 데이터 세트는, 제 1 시점에 대응하여 획득된 각각 상이한 클래스로 구성되는 제 1 테스트 데이터 서브세트를 포함하며, 상기 제 1 테스트 데이터 서브세트는 하나의 클래스의 데이터 및 상기 하나의 클래스의 데이터에 기초하여 생성된 변형된 데이터로 구성될 수 있다. 대안적으로, 상기 제 2 테스트 데이터 세트는, 상기 제 1 시점 이후 시점인 제 2 시점에 대응하여 추가적으로 획득된 데이터 및 상기 데이터에 대한 변형된 데이터로 구성되는 제 2 테스트 데이터 서브세트를 포함하며, 상 기 제 2 시점은, 상기 모델의 운용 시점에 대응하는 시점일 수 있다. 대안적으로, 상기 모델의 운용 시점에 대응하여 상기 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능 열화에 대한 테스트를 수행하는 동작은, 상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 수행될 수 있다. 대안적으로, 상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생한 것으로 판단하는 동작 또는 상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생하지 않은 것으로 판단하는 동작을 더 포함할 수 있다. 본 개시의 다른 일 실시예에 따라 모델의 성능을 테스트하는 컴퓨팅 장치가 개시된다. 상기 컴퓨팅 장치는, 하 나 이상의 코어를 포함하는 프로세서, 상기 프로세서에서 실행가능한 프로그램 코드들을 포함하는 메모리 및 다 른 컴퓨팅 장치와 데이터를 송수신하는 네트워크부를 포함하고, 그리고 상기 프로세서는, 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하고, 상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하고, 그리고 상기 테스트 데이터 세트를 모델을 이용하여 연산함 으로써, 상기 모델의 성능을 테스트할 수 있다. 본 개시의 또 다른 일 실시예에 따라 하나 이상의 프로세서 컴퓨팅 장치에서 수행되는 모델의 성능을 테스트하 는 방법이 개시된다. 상기 방법은, 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터 를 생성하는 단계, 상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성하 는 단계 및 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하는 단계를 포함할 수 있다. 본 개시의 또 다른 일 실시예에 따라 학습 과정에서 적어도 일부가 업데이트 되는 신경망의 파라미터에 대응하 는 데이터 구조가 저장된 컴퓨터 판독가능한 기록 매체가 개시된다. 상기 신경망의 동작은 상기 파라미터에 적 어도 부분적으로 기초하여, 상기 학습 과정은, 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변 형된 데이터를 생성하는 단계, 상기 복수의 데이터 및 상기 복수의 변형된 데이터에 기초하여 테스트 데이터 세 트를 생성하는 단계 및 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트 하는 단계를 포함할 수 있다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 인공지능 모델의 성능 테스트를 위한 컴퓨터 프로그램을 제공할 수 있다."}
{"patent_id": "10-2020-0022501", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조 합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서 네트워크 함수와 인공 신경망 및 뉴럴 네트워크(neural network)는 상호 교환 가능하게 사용될 수 있다. 2018년 7월 11일에 출원된 한국 특허 출원 10-2018-0080482, 2019년 4월 30일에 출원된 한국 특허 출원 10- 2019-0050477 및 2019년 6월 7일에 출원된 한국 특허 출원 10-2019-0067175에 포함된 모든 내용은 본 명세서에 서 참조로서 통합된다. 도 1은 본 개시의 일 실시예의 모델의 성능을 테스트를 수행하기 위한 컴퓨팅 장치의 블록 구성도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 프로세서, 메모리, 네트워크부를 포함할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치(GPGPU: general purpose graphics processing unit), 텐서 처리 장치(TPU: tensorprocessing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일실시예에 따른 모델의 학습 방 법을 수행할 수 있다. 본 개시의 일실시예에 따라 프로세서는 뉴럴 네트워크 모델의 학습을 위한 연산을 수행할 수 있다. 프로세서는 딥러닝(DN: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이 터에서의 피처(feature) 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용 한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워 크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 CPU, GPGPU, 및 TPU 중 적어도 하나를 이용하여 네트워크 함수를 분산하여 처리할 수 있다. 또한 본 개시의 일 실시예에서 컴퓨팅 장치는 다른 컴퓨팅 장치와 함께 네트워 크 함수를 분산하여 처리할 수도 있다. 컴퓨팅 장치의 네트워크 함수 분산 처리에 관한 구체적인 내용에 대한 설명은 본 출원에서 전체가 참조로서 통합되는 미국 특허 출원 US15/161080(출원일 2016.05.20) 및 US15/217475(출원일 2016.07.22)에서 구체적으로 논의된다. 프로세서는 학습 대상이 되는 하나 이상의 데이터를 포함하는 데이터 세트를 획득할 수 있다. 본 개시의 일 실시예에서 뉴럴 네트워크 모델을 이용하여 처리되는 데이터는 산업현장에서 획득되는 모든 종류의 데이터를 포함할 수 있다. 예를 들어, 제품의 생산 공정에서 제품의 생산을 위한 디바이스의 동작 파라미터, 디바이스의 동작에 의하여 획득된 센서 데이터 등을 포함할 수 있다. 예를 들어, 특정 공정에서 장비의 온도 설정, 레이저 를 사용하는 공정의 경우 레이저의 파장 등이 본 개시에서 처리되는 데이터의 종류에 포함될 수 있다. 예를 들 어, 처리되는 데이터는 MES(management execution system)으로부터의 로트(lot) 장비 히스토리 데이터, 장비 인터페이스 데이터 소스로부터의 데이터, 프로세싱 툴(tool) 레시피들, 프로세싱 툴 테스트 데이터, 프로브 테 스트 데이터, 전기 테스트 데이터, 결합 측정 데이터, 진단 데이터, 원격 진단 데이터, 후처리 데이터 등을 포 함할 수 있으며 본 개시는 이에 제한되지 않는다. 보다 구체적인 예시로, 반도체 팹(fab)에서 획득되는 로트 별 로 12만여개의 항목을 포함하는 진행중(work-inprogress)정보, 로(raw) 프로세싱 툴 데이터, 장비 인터페이스 정보, 공정 계측정보(process metrology information)(예를 들어, 로트 별로 1000여개의 항목을 포함함), 수율 관련 엔지니어가 접근할 수 있는 결함 정보, 동작 테스트 정보, 소트 정보(datalog 및 bitmap를 포함함) 등을 포함할 수 있으나, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 컴퓨팅 장치는 수집된 데이터에 대한 전처리를 수행할 수 있다. 컴퓨팅 장치 는 수집된 데이터 중 결측 값을 보충할 수 있다. 컴퓨팅 장치는 예를 들어, 결측 값을 중간값 또는 평균값으로 보충하거나, 결측 값이 다수 존재하는 열을 삭제할 수도 있다. 또한, 예를 들어, 컴퓨팅 장치 는 행렬 완성(matrix completion)을 위해 컴퓨팅 장치에 의한 데이터 전처리에 관리자의 전문 분야 기술 (subject matter expertise)이 활용될 수 있다. 예를 들어, 컴퓨팅 장치는 수집된 데이터에서 경계, 한계 를 완전히 벗어난 값들(예를 들어, 센서 등의 오동작으로 추정되는 값 등)을 제거할 수 있다. 또한 컴퓨팅 장치 는 데이터가 특성을 유지하면서 스케일을 유사하게 가지도록 하기 위하여 데이터의 값을 조정할 수도 있다. 컴퓨팅 장치는 예를 들어, 데이터의 열 단위 표준화를 적용할 수도 있다. 컴퓨팅 장치는 데이 터에서 뉴럴 네트워크 모델의 처리와 무관한 열을 제거하여 프로세싱을 간략하게 할 수도 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 분류 모델의 생성을 위한 뉴럴 네트워크 모델의 학습과 능동 학습의 용이성을 위하여 적절한 입력 데이터 전처리 방법을 수행할 수 있다. 입력 데이터의 종류, 예시, 전처리, 변환 등에 관한 구체적인 예시에 대한 설명은 본 출원에서 전체가 참조로서 되는 미국 특허 출원 US10/194920(2002.07.12 출 원)에서 구체적으로 논의된다. 본 개시의 일 실시예의 데이터는 전술한 바와 같이 산업현장에서 획득되는 모든 종류의 데이터를 포함할 수 있 다. 예를 들어, 제품의 생산 공정에서 제품의 생산을 위한 디바이스의 동작 파라미터, 디바이스의 동작에 의하 여 획득된 센서 데이터 등을 포함할 수 있다. 하나의 데이터는 하나의 제조 장비에서 하나의 제조 레시피를 사 용하여 제조물을 제조하는 동안 획득된 데이터를 포함할 수 있다. 제조물을 제조하는 동안 획득되는 데이터는 센서 데이터를 포함할 수 있다. 즉, 복수의 데이터를 포함하는 데이터 세트는 하나 이상의 제조 장비에서 하나 이상의 제조 레시피를 사용하여 제조물을 제조하는 동안 획득된 데이터를 포함할 수 있으나(즉, 여러 제조 장비와 여러 제조 레시피에 대한 데이터가 혼재되어 있을 수 있어, 복수의 정상 상태를 가질 수 있음), 각각의 데이 터는 각각 하나의 제조 장비에서 하나의 제조 레시피에 의한 제조물의 생산에서 획득된 데이터로서 하나의 정상 상태를 가질 수 있다. 본 개시의 일 실시예에서, 제조 장비는 산업 현장에서 제조물을 생산하기 위한 임의의 제조 장비를 포함할 수 있으며 예를 들어, 반도체 제조 장비를 포함할 수 있으나 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서, 제조 레시피는 산업 현장에서 제조물을 생산하기 위한 방법으로 구성될 수 있으며, 보다 구체적으로 제조 장비를 제어하기 위한 데이터를 포함할 수 있다. 본 개시의 일 실시예에서, 제조 레시피 는 예를 들어, 제조 장비에 로드된 반도체 제조 레시피를 포함할 수 있으나 본 개시는 이에 제한되지 않는다. 메모리는 본 개시의 일 실시예에 따른 데이터 처리 방법을 수행하기 위한 컴퓨터 프로그램을 저장할 수 있 으며, 저장된 컴퓨터 프로그램은 프로세서에 의하여 판독되어 구동될 수 있다. 네트워크부는 본 개시의 일 실시예에 따른 모델의 테스트 방법을 수행하기 위한 데이터 등을 다른 컴퓨팅 장치, 제조 장치, 서버 등과 송수신할 수 있다. 네트워크부는 복수의 컴퓨팅 장치 사이의 통신을 가능하게 하여 뉴럴 네트워크 모델을 사용한 데이터 처리를 분산 처리할 수 있도록 할 수 있다. 프로세서는 학습 대상이 되는 하나 이상의 데이터를 포함하는 데이터 세트를 획득할 수 있다. 전술한 바와 같이, 본 개시의 일 실시예에서 데이터는 산업 현장에서 획득되는 임의의 종류의 데이터를 포함할 수 있으며, 프로세서는 다른 컴퓨팅 장치, 제조 장비 등으로부터 데이터를 획득할 수 있다. 획득된 하나 이상의 데이 터는 데이터 세트를 구성할 수 있으며, 데이터 세트는 뉴럴 네트워크 모델의 학습의 1 에폭(epoch)의 연산에 사 용되는 데이터의 집합일 수 있다. 데이터는 각각 복수의 항목으로 구성될 수 있다. 복수의 항목들 각각은 사전 결정된 기준에 따라 피처 그룹으로 분류될 수 있다. 데이터의 복수의 항목을 피처 그룹으로 분류하기 위한 사전결정된 기준은 데이터의 값들을 다 른 값과 구분할 수 있는 임의의 기준일 수 있다. 구체적으로, 피처 그룹은 데이터에 포함된 복수의 항목들 중 연관된 항목들로 구성될 수 있다. 예를 들어, 데이터는 동일한 형태의 값들끼리 그룹화된 복수의 피처 그룹으로 구성될 수 있다. 또한, 데이터는 동일한 센서로부터 획득된 값들끼리 그룹화된 복수의 피처 그룹으로 구성될 수 있다. 또한, 데이터는 동일한 모니터링 모듈로부터 획득된 값들로 그룹화된 복수의 피처 그룹으로 구성될 수 있 다. 구체적인 예를 들어, 데이터는 반도체 생산 공정에서 획득되는 센서 데이터 생산 장비의 동작 파라미터 등에 관 한 복수의 센싱 값들로 구성될 수 있다. 데이터는 온도 센서 데이터, 로봇 팔의 제 1 관절의 각도 센서 데이터, 제 2 관절의 각도 센서 데이터 등으로 구성될 수 있다. 이 경우, 온도 센서 데이터는 예를 들어, 온도 센서가 복수 개 존재하는 경우 복수의 항목을 가질 수 있다. 이 경우, 온도 센서 데이터는 하나의 피처 그룹으로 분류 될 수 있다. 이 경우, 온도 센서 데이터의 값들과 제 1 관절의 각도 센서 데이터의 값들은 다른 형태의 값들(즉, 온도와 각도 등 상이한 단위의 값들)로 구성되므로, 다른 피처 그룹으로 분류될 수 있다. 또한, 제 1 관절의 각도 센서 데이터의 값과 제 2 관절의 각도 센서 데이터의 값은 상이한 센서 또는, 모니터링 모듈로부터 획득되므로, 다른 피처 그룹으로 분류될 수 있다. 즉, 온도 센서 데이터의 값들은 제 1 피처 그룹으로 분류되고, 제 1 관절의 각도 센서 데이터의 값들은 제 2 피처 그룹으로 분류되고, 그리고 제 2 관절의 각도 센 서 데이터의 값들은 제 3 피처 그룹으로 분류될 수 있다. 다시 말해, 값들의 형태가 동일하거나, 동일한 센서 또는 모니터링 모듈을 통해 획득한 값들은 서로 연관성이 있는 데이터이므로 동일한 피처 그룹으로 분류될 수 있다. 전술한, 온도 센서 데이터 및 관절 각도 센서 데이터에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따르면, 프로세서는 데이터 세트에 포함된 복수의 데이터들을 클러스터링하여 상이 한 클래스로 각각 분류되는 복수의 데이터 서브세트를 생성할 수 있다. 또한, 프로세서는 복수의 데이터 중 각각의 데이터의 일부에 대한 변형을 수행하기 위한 데이터를 결정할 수 있다. 구체적으로, 프로세서는 데이터의 변형 이후에도 유효한 데이터로 활용될 수 있는 데이터들을 변형을 수행하기 위한 데이터들로 선택할 수 있다. 또한, 프로세서는 데이터의 변형 이후, 비정상 상태를 포함하는 데이터로 활용될 수 있는 데이터 들을 변형을 수행하기 위한 데이터들로 선택할 수 있다. 도 2를 참조하여 보다 자세히 설명하면, 프로세서는 상이한 클래스로 분류된 복수의 데이터 서브세트 각각 에서 상이한 복수의 데이터를 데이터의 변형을 위한 데이터들로 선택할 수 있다. 프로세서는 제 1 데이터 서브세트에 포함된 데이터들 중 적어도 하나 이상의 데이터를 선택하고, 그리고 제 2 데이터 서브세트에 포함된 데이터들 중 적어도 하나 이상의 데이터를 선택할 수 있다. 이 경우, 제 1 데이터 서브세트 와 제 2 데이터 서브세트 각각은 생산 장비의 설정 변경 이점 및 이후 시점 각각에서 획득된 센서 데 이터에 관한 정보를 포함할 수 있다. 즉, 프로세서는 데이터의 변형 이후에도 학습을 위한 데이터로써 유 효하고, 그리고 변형 이후에 비정상 데이터로 활용가능하도록 제 1 데이터 서브세트에서 제 1 데이터(21 1)를 선택하고, 그리고 제 2 데이터 서브세트에서 제 3 데이터를 선택할 수 있다. 또한, 프로세서는 동일한 클래스로 분류된 데이터 서브세트에서 상이한 복수의 데이터를 데이터의 변형을 위한 데이터들로 선택할 수도 있다. 프로세서는 하나의 클래스인 제 1 데이터 서브세트에 포함된 제 1 데이터 및 제 2 데이터를 데이터의 변형을 위한 데이터들로 선택할 수도 있다. 구체적으로 도 2를 참조하면, 프로세서는 하나 이상의 피처 그룹으로 구성된 복수의 데이터들을 포함하는 데이터 세트에서 상이한 복수의 데이터를 선택할 수 있다. 예를 들어, 프로세서는 상이한 클래스로 분류된 제 1 데이터 서브세트에 포함된 데이터들 중 적어도 하나 이상의 데이터와 제 2 데이터 서브세트 에 포함된 데이터들 중 적어도 하나 이상의 데이터를 선택할 수 있다. 각각 상이한 클래스에 포함된 데이 터들(즉, 각각의 데이터 서브세트에 포함된 데이터들)은 동일한 기준으로 클러스터링된 데이터들일 수 있다. 구체적인 예를 들어, 본 개시의 복수의 데이터를 포함하는 데이터 세트는 반도체 생산 공정에서 획득된 센서 데 이터, 생산 장비의 동작 파라미터 등일 수 있다. 이 경우, 반도체 생산 공정에서 생산 장비의 설정(예를 들어, 특정 공정에서 조사되는 레이저의 파장의 변경 등)이 변경되는 경우(즉, 레시피의 변경이 있는 경우), 설정 변 경 이후에 획득되는 센서 데이터는 설정 변경 이전에 획득되는 센서 데이터와 서로 다른 데이터 서브세트에 포 함될 수 있다. 즉, 제 1 데이터 서브세트에 포함된 복수의 데이터들은 생산 장비의 설정 변경 이전 시점에 획득 한 센서 데이터 또는 생산 장비의 동작 파라미터에 관한 정보들을 포함하는 데이터들일 수 있으며, 제 2 데이터 서브세트에 포함된 복수의 데이터들은 생산 장비의 설정 변경 이후 시점에 획득한 센서 데이터 또는 생산 장비 의 동작 파라미터에 관련한 정보들을 포함하는 데이터들일 수 있다. 전술한 데이터 서브세트 각각이 포함하는 데이터들에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 즉, 프로세서는 상이한 클 래스로 분류된 복수의 데이터 서브세트 각각에서 상이한 복수의 데이터를 선택할 수 있다. 프로세서는 데 이터 세트의 데이터들을 클러스터링하여 복수의 데이터 서브세트를 생성할 수 있다. 복수의 데이터 서브세트는 예를 들어, 트리플랫 로스(triplet loss) 기반 비용 함수를 사용하여 학습된 분류 모델에 의하여 분류될 수 있 다. 다시 말해, 프로세서는 데이터 세트에 포함된 복수의 데이터들을 클러스터링하여 복수의 데이터 서브세트 를 생성할 수 있다. 예를 들어, 프로세서는 학습된 분류 모델을 통해 데이터 세트에 포함된 복수의 데이터 들 중 생산 장비의 설정 변경 이점 시점에 획득한 센서 데이터 또는, 생산 장비의 동작 파라미터에 관련한 데이 터들을 제 1 데이터 서브세트로 분류하고, 생산 장비의 설정 변경 이후 시점에 획득한 센서 데이터 또는, 생산 장비의 동작 파라미터에 관련한 데이터들을 제 2 데이터 서브세트로 분류할 수 있다. 따라서, 프로세서는 데이터 세트에 포함된 복수의 데이터 각각을 상이한 클래스로 분류하여 상이한 정상 패턴을 가지는 데이터들을 변형을 위한 데이터들로 결정할 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성할 수 있다. 복수의 데이터 각각의 일부를 변형하는 것은, 하나의 데이터의 값과 다른 데 이터의 값을 사전결정된 정도로 교환함으로써, 각 데이터의 변형을 수행하는 것을 의미할 수 있다. 각 데이터의 사전 결정된 정도의 교환은, 교환이 수행된 이후에 각 데이터에 대한 유효성이 훼손되지 않는 정도를 의미할 수 있다. 또한, 사전 결정된 정도의 교환은, 배울점이 많도록(즉, 판별이 어렵도록)하는 정도의 데이터 교환을 의 미할 수 있다. 예를 들어, 복수의 데이터는 제 1 데이터 및 제 2 데이터를 포함할 수 있으며, 프로세서는 제 1 데이터의 일부의 값과 제 2 데이터의 일부의 값을 서로 교환하여 변형된 데이터를 생성할 수 있다. 이 경우, 프로세서 는 제 1 데이터의 30%를 제 2 데이터의 30%에 해당하는 데이터로 교환하여 제 1 데이터에 대응하는 변형된 데이터를 생성할 수 있다. 또한, 프로세서는 제 2 데이터의 20%를 제 1 데이터의 20%에 해당하는 데이터로 교환하여 제 2 데이터에 대응하는 변형된 데이터를 생성할 수도 있다. 또한, 프로세서는 제 1 데이터 및 제 2 데이터 각각에 포함된 데이터 중 10%에 해당하는 데이터 각각을 교환하여 제 1 데이터 및 제 2 데이터 각 각에 대응하는 변형된 데이터들을 생성할 수도 있다. 즉, 프로세서는 복수의 데이터 각각의 일 부분을 교환하여 변형된 데이터를 생성하는 과정에서, 각 데이터 의 유효성이 훼손되지 않으며, 판별이 어렵도록 복수의 데이터 각각의 교환 정도를 상이하게 결정하거나 또는, 복수의 데이터 각각의 교환 정도를 동일하게 결정할 수 있다. 또한, 프로세서는 복수의 데이터 중 하나의 데이터의 하나 이상의 피처 그룹 중 하나의 피처 그룹의 값과 다른 데이터의 하나 이상의 피처 그룹 중 하나의 피처 그룹의 값을 교환할 수 있다. 프로세서는 각각의 데 이터의 동일한 피처 그룹에 속하는 데이터의 값을 서로 교환할 수 있다. 프로세서는 제 1 데이터의 제 1 피처 그룹의 값과 제 2 데이터의 제 1 피처 그룹의 값을 서로 교환할 수 있다. 예를 들어, 프로세서는 제 1 데이터의 제 1 관절의 각도 센서 피처 그룹의 값들과 제 2 데이터의 제 1 관절의 각도 센서 피처 그룹의 값들 을 서로 교환할 수 있다. 즉, 서로 연관된 피처 그룹의 값들을 서로 교환함으로써, 각각의 변형된 데이터들은 데이터 자체는 유효하나 비정상 상태를 포함하는 데이터가 될 수 있다. 예를 들어, 둘 이상의 데이터에서 전혀 연관성이 없는 피처 그룹의 값들을 서로 교환하는 경우, 데이터 자체가 유효하지 않을 가능성이 있으며, 그 자 체로서 비정상 데이터로 판단될 수도 있다. 즉, 예를 들어, 제 1 데이터에 포함된 동작 온도와 관련한 피처 그 룹의 값들을 제 2 데이터 포함된 동작 시간과 관련한 피처 그룹의 값들로 교환한 경우, 데이터가 유효하지 않으 므로, 그 자체로 비정상으로 판단될 수 있어, 모델의 학습에 적절치 않을 수 있다. 다시 말하면, 상이한 피처 그룹의 값들이 교환된 데이터는 모델의 분류 성능을 많이 요구하지 않는 데이터 일 수 있다. 그러나, 연관된 피 처 그룹에 포함된 값들끼리 서로 교환함으로써, 데이터 자체는 유효하나, 정상 상태는 아닌 데이터를 생성할 수 있다. 다시 말하면, 연관된 피처 그룹에 포함된 값들을 교환하여 데이터를 생성함으로써, 비정상 데이터이나 모 델의 분류 성능을 많이 요구하는 데이터를 생성할 수 있다. 즉, 모델이 배울 지식이 많은 데이터가 생성될 수 있다. 교환을 위해 서로 다른 클래스에 포함된 데이터에서 선택되는 피처 그룹은 연관된 피처 그룹일 수 있다. 예를 들어, 교환을 위하여 선택되는 피처 그룹은 서로 다른 클래스에 포함된 데이터에서 공통되는 항목일 수 있다. 예를 들어, 두 데이터가 동일한 로봇 팔의 동작에 관련한 데이터 인 경우, 피처 그룹은 로봇 팔의 각각의 관절 에 대응될 수 있다. 이 경우 프로세서는 예를 들어, 같은 관절에 관련한 피처 그룹의 값들을 서로 교환할 수 있다. 또한, 연관된 피처 그룹은 두 데이터에서 각각의 피처 그룹의 값을 교환하였을 때, 유효한 데이터를 생성하도록 선택될 수 있다. 예를 들어, 교환을 위하여 각각의 데이터에서 선택되는 피처 그룹은 해당 피처 그룹에 포함된 값(value)의 형태, 유효성이 대응되는 피처 그룹일 수 있다. 예를 들어, 두 데이터가 동일한 로봇 팔의 동작에 관련한 데이터인 경우, 피처 그룹은 로봇 팔의 각각의 관절일 수 있다. 또한, 다른 예시에서, 연관된 피처 그룹은 두 데이터에서 각각의 피처 그룹의 값을 교환하였을 때 데이터의 상 태가 바뀔 수 있는 피처 그룹으로 선택될 수도 있다. 이 경우, 전술한 바와 같이 교환 전 후에 데이터는 유효하 도록 피처 그룹이 선택될 수도 있다. 예를 들어, 두 데이터가 동일한 로봇 팔의 동작에 관련한 데이터인 경우, 피처 그룹은 로봇 팔의 각각의 관절일 수 있다. 또한, 프로세서는 예를 들어, 상이한 관절에 관련한 피처 그룹의 값들을 교환할 수 있다. 즉, 프로세서는 제 1 데이터에서 제 1 관절에 관련한 피처 그룹의 값과 제 2 데이터의 제 2 관절에 관련한 피처 그룹의 값을 서로 교환할 수도 있다. 이 경우, 제 1 관절에 관련한 피처 그룹의 값들과 제 2 관절에 관련한 피처 그룹의 값들은 모두 관절의 동작 각도에 관련한 값들을 포함할 수 있으 며, 이런 방식으로 피처 그룹의 값을 교환하여 데이터들을 생성하여도 데이터는 유효한 형태를 가질 수 있다. 전술한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 또 다른 예를 들어, 프로세서는 상이한 관절에 관련한 피처 그룹의 값들을 교환할 수 있다. 상이한 관절에 관련한 피처 그룹의 값들을 교환함으로써, 교환 전 데이터가 정상 상태 데이터인 경우, 교환 후의 데이터는 비 정상 상태일 수도 있다. 또한, 각각의 데이터에서 대응되는 피처 그룹의 값을 교환할 수도 있다. 다만 이 경우, 다른 피처 그룹에 포함된 값들에 따라서, 데이터의 상태가 변경되지 않을 수도 있으므로, 프로세서는 학습 을 위하여 해당 피처 그룹을 교환하면 데이터의 상태가 변경되도록 피처 그룹을 선택할 수도 있다. 도 2를 참조하면 보다 자세히 설명하면, 프로세서는 상이한 클래스로 분류된 복수의 데이터 서브세트 각각 에서 상이한 복수의 데이터를 선택할 수 있다. 프로세서는 제 1 데이터 서브세트에 포함된 데이터들 중 적어도 하나 이상의 데이터를 선택하고, 그리고 제 2 데이터 서브세트에 포함된 데이터들 중 적어도 하 나 이상의 데이터를 선택할 수 있다. 이 경우, 제 1 데이터 서브세트와 제 2 데이터 서브세트 각각은 생산 장비의 설정 변경 이점 및 이후 시점 각각에서 획득된 센서 데이터에 관한 정보를 포함할 수 있다. 제 1 데이터 서브세트에서 제 2 데이터가 선택되고, 그리고 제 2 데이터 서브세트에서 제 4 데이터 가 선택된 경우, 프로세서는 제 2 데이터 및 제 4 데이터 각각에 포함된 하나 이상의 피처그룹 중 하나의 피처 그룹의 값을 변경할 수 있다. 프로세서는 제 2 데이터에 포함된 복수의 피처 그 룹 중 제 1 피처 그룹의 값과 제 4 데이터에 포함된 복수의 피처 그룹 중 제 1 피처 그룹의 값을 서로 교 환함으로써, 각 피처 그룹의 값을 변형할 수 있다. 즉, 프로세서는 상이한 클래스를 형성하는 각각의 데이터 서브세트에 포함된 데이터들을 선택하고, 그리고 선택된 각각의 데이터의 동일한 피처 그룹에 속하는 데 이터의 값을 서로 교환함으로써, 선택된 복수의 데이터들 각각의 일부에 대한 변형을 수행할 수 있다. 이 경우, 선택된 데이터들 각각의 변형은, 동일한 피처 그룹에 속하는 데이터의 값을 교환(즉, 연관성을 가지는 데이터 값들의 교환)을 통해 이루어질 수 있다. 또한, 프로세서는 동일한 데이터 서브세트에 포함된 둘 이상의 데이터를 선택하여 이들의 값을 변경할 수 도 있다. 예를 들어, 프로세서는 제 1 데이터 서브세트에 포함된 제 1 데이터, 제 2 데이터 를 선택하여 제 1 데이터의 제 1 피처 그룹과 제 2 데이터의 제 1 피처 그룹의 데이터를 서로 교환하여 새로운 데이터를 생성할 수도 있다. 그리고 이 경우 생성된 데이터는, 다른 피처 그룹에 포함된 값들에 따라 정상일 수도 있고 비정상 일 수도 있다. 전술한 예시에서 제 2 내지 제 3 피처 그룹에 포함된 값들 에 따라서, 제 1 피처 그룹의 값이 제 2 데이터의 제 1 피처 그룹의 값으로 변경된 제 1 데이터는 정 상 데이터 일 수도 있고 비정상 데이터일 수도 있다. 다른 예를 들어, 프로세서는 제 1 데이터 서브세트에 포함된 제 1 데이터, 제 2 데이터를 선택하여 제 1 데이터의 제 1 피처 그룹과 제 2 데이터의 제 2 피처 그룹을 서로 교환하여 새로 운 데이터를 생성할 수 있다. 이 경우, 제 1 데이터의 제 1 피처 그룹은 제 1 관절의 각도 센싱 데이터에 관련한 값들로 구성된 피처 그룹일 수 있으며, 제 2 데이터의 제 2 피처 그룹은 제 2 관절의 각도 센싱 데 이터에 관련한 값들로 구성된 피처 그룹일 수 있다. 제 1 관절과 제 2 관절이 예를 들어, 유사한 스팩을 가져 동작 범위가 대응되는 경우, 유효한 데이터가 생성될 수도 있다. 즉, 완전히 동일한 피처 그룹은 아니나, 연관 성이 있는 피처 그룹(즉, 관절의 각도 센싱 데이터와 관련한 값들로 구성된 피처 그룹) 간의 교환을 통해 데이터를 변형함으로써, 데이터가 유효할 가능성이 높으며, 비정상 상태를 포함하는 데이터로의 변형이 가능해 질 수 있다. 따라서, 프로세서가 복수의 데이터를 선택하고, 각 데이터의 피처 그룹의 값을 상호 교환하는 동작의 수행 결과 각 데이터에 포함된 정상 데이터들이 비정상 데이터로 변형될 수 있다. 또한, 프로세서에 의해 변형 된 데이터는, 전혀 상이한 제조 레시피를 포함하는 정상 데이터들의 교환을 통해 생성되는 것이 아닌, 관련성을 가진 각 정상 데이터들의 동일 피처 그룹의 교환이므로, 신경망 모델의 테스트를 위한 데이터로 활용이 가능할 수 있다. 즉, 프로세서는 복수의 데이터 각각의 변형을 통해 모델의 테스트를 위한 비정상 데이터들을 생 성할 수 있다. 본 개시의 다른 실시예에 따르면, 프로세서는 복수의 데이터를 포함하는 데이터 세트를 인공 어노말리 생 성 모델의 입력으로 처리하여 복수의 변형된 데이터를 생성할 수 있다. 인공 어노말리 생성 모델은, 순환 뉴럴 네트워크(RNN, Recurrent Neural Network)로 구성되어 출력 데이터의 확률 분포를 학습하는 모델일 수 있다. 인 공 어노말리 생성 모델은 데이터를 통해 데이터의 특성을 학습하여, 데이터의 확률 분포를 그 출력으로 도출하 는 모델일 수 있다. 인공 어노말리 생성 모델은 도출된 확률 분포에 기초하여 학습 데이터와 유사한 데이터를 생성할 수 있다. 즉, 인공 어노말리 생성 모델을 통해 생성되는 변형된 데이터는, 입력 데이터에 기초하여 인공 적으로 생성된 비정상 데이터를 의미할 수 있다. 순환 뉴럴 네트워크는 유닛 간의 연결이 순환적 구조를 갖는 특징을 갖고 있다. 이러한 구조는 시변적 동적 특 징을 모델링 할 수 있도록 신경망 내부에 상태를 저장할 수 있게 해준다. 전방 전달 신경망과 달리, 순환 뉴럴 네트워크는 내부의 메모리를 이용해 시퀀스 형태의 입력을 처리할 수 있다. 따라서, 순환 뉴럴 네트워크는 필 기체 인식이나 음성 인식, 시계열적인 센서 데이터와 같이 시변적 특징을 가지는 데이터를 처리할 수 있다. 전 술한 데이터의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시에서, 순환 뉴럴 네트워크에 입 력으로 처리되는 입력 데이터는 시퀀스 데이터일 수 있으며, 순환 뉴럴 네트워크의 출력에 관련한 출력 데 이터는 입력 데이터가 신경망을 거쳐 도출된 결과로서, 확률 분포를 표현하는 데이터일 수 있다. 예를 들어, 출력 데이터는 뉴럴 네트워크에 의해 도출된, 제 1 데이터 세트 또는 테스트 데이터 세트의 분 포의 형태(예를 들면, 정규 분포) 및 모수(예를 들면, 평균)를 포함할 수 있다. 도 3을 참조하면, 입력 데이터가 순환 뉴럴 네트워크에 입력되는 경우, 그 결과로 출력 데이터가 연 산될 수 있다. 도 3에서 도시되는 바와 같이, 신경망이 순환 뉴럴 네트워크 형태를 띌 경우에, 순환 뉴럴 네트워크의 유닛은 다음 유닛의 연산에 영향을 줄 수 있다.예를 들어, 출력 데이터가 특정 시점에서 센서가 감지한 온도에 대한 확률 분포를 나타낸다고 가정하자. 이전 시점의 온도가 입력 데이터로서 순환 뉴럴 네트워크에 입력되면, 출력 데이터는 상기 특정 시점 에서의 온도의 확률 분포를 나타낼 수 있다. 이때 상기 확률 분포는 분포의 종류(예를 들면, 정규분포) 및 그 모수(예를 들면, 분포의 평균 및 표준편차) 데이터를 이용해 표현될 수 있다. 순환 뉴럴 네트워크은 일반적으로 시퀀스/시계열 데이터의 모델링에 적합할 수 있다. 따라서, 입력 데이터 및 출력 데이터는 문자 또는 음성으로 된 문장, 시간에 따른 온도 데이터 등과 관련될 수 있다. 이는 시퀀 스/시계열 데이터의 형태에 관한 일례에 불과하며, 시퀀스/시계열 데이터의 유형은 이에 한정되지 않는다. 즉, 입력 데이터 및 출력 데이터가 이미지 데이터인 경우를 가정하자. 이 경우, 특정한 이미지 데이 터(예를 들면, MNIST 데이터)를 시퀀스 데이터로 변환하는 것이 가능하며, 따라서 입력 데이터 및 출력 데 이터는 이미지 데이터와 관련될 수 있다. 상술한 내용은 입력 데이터 및 출력 데이터의 형태에 관한 예시 에 불과하므로, 입력 데이터 및 출력 데이터는 상술한 예시에 한정되지 않는다. 프로세서는 제 1 데이터 세트에 대한 제 1 확률 분포 및 제 1 확률 분포의 제 1 표본 통계량을 연산할 수 있다. 제 1 확률 분포는 도 3에서의 출력 데이터에 대응될 수 있다. 제 1 확률 분포는 추후 생성될 인공 어노말리 생성 모델에서 도출되는 제 2 확률 분포와의 유사도를 판단하거나, 인공 어노말리 생성 모델이 도출하 는 확률 분포가 통계적으로 유의한지 여부를 판단하는데 이용될 수 있다. 제 1 데이터 세트는 기존의 데이터 세 트로부터 임의적으로 추출된 데이터로 구성될 수 있다. 예를 들어, 제 1 데이터 세트는, 기존의 데이터 세트의 특성을 유지하도록 추출된 데이터로 구성될 수 있다. 보다 자세히 설명하면, 프로세서는 제 1 데이터 세트에 의해 훈련된 순환 뉴럴 네트워크를 통해 제 1 확률 분포를 도출할 수 있다. 즉, 제 1 확률 분포는 제 1 데이터 세트에 관련한 분포일 수 있다. 제 1 확률 분포는 분포의 형태 및 제 1 확률 분포의 제 1 표본 통계량으로 표현될 수 있다. 표본 통계량은 예를 들어, 확률 분포 의 평균, 표준편차, 최빈 값(mode), 중간 값(median) 등을 포함할 수 있다. 이는 표본 통계량에 관한 예시에 불 과하며, 표본 통계량의 형태는 이에 한정되지 않는다. 또한, 프로세서는 제 2 데이터 세트에 대한 제 2 확률 분포 및 제 2 확률 분포에 대한 제 2 표본 통계량을 학습하는 인공 어노말리 생성 모델을 훈련시킬 수 있다. 제 2 데이터 세트는 제 1 데이터 세트와 동종의 데이터 들을 포함할 수 있다. 제 1 데이터 세트 및 제 2 데이터 세트는 동종의 데이터에 대한 벡터 또는 스칼라일 수 있다. 즉, 제 1 데이터 세트가 일정 시간 구간동안 센서가 감지한 온도 데이터들의 집합일 경우, 제 2 데이터 세트도 동일한 시간 구간에 대하여 센서가 감지한 온도 데이터들의 집합일 수 있다. 제 1 데이터 세트와 제 2 데이터 세트는 데이터의 일부 또는 전부를 공유할 수 있고, 그렇지 않을 수도 있다. 제 2 확률 분포는 제 2 데이터 세트를 테스트 데이터 세트로 하여, 인공 어노말리 생성 모델이 학습한 확률 분 포로서, 도 3의 출력 데이터의 일 예시일 수 있다. 즉, 인공 어노말리 생성 모델이 예를 들어, 도 3의 순환 뉴럴 네트워크인 경우에, 출력 데이터는 제 2 확 률 분포일 수 있다. 이 때, 제 2 확률 분포는 분포의 형태 및 제 2 표본 통계량으로 표현될 수 있다. 상술한 바와 같이, 제 2 표본 통계량은 제 2 확률 분포의 평균, 표준편차, 최빈 값, 중간 값 등을 포함할 수 있 다. 다만, 이는 제 2 표본 통계량에 관한 예시에 불과하며, 제 2 표본 통계량의 형태는 이에 한정되지 않는다. 따라서, 예를 들어, 제 2 데이터 세트가 특정 시간 구간 동안 센서가 감지한 기구의 온도 데이터일 경우에, 상 기 인공 어노말리 생성 모델은 시간에 따른 기구의 온도 값의 확률 분포를 학습할 수 있다. 일단 확률 분포를 학습하게 되면, 프로세서는 이에 기초하여 시간에 따른 기구의 온도 값을 생성해낼 수 있다. 본 개시에 따 른 변형된 데이터는, 입력 데이터에 기초하여 인공적으로 생성된 비정상 데이터를 의미할 수 있다. 상술한 바에 의하여, 기존에 수집된 데이터 세트의 확률 분포를 학습한 후, 이에 기초하여 변형된 데이터를 생 성할 수 있다. 따라서, 임의적으로 생성되는 비정상 데이터에 비해 실제 데이터의 패턴과 유사한 변형된 데이터 들이 생성될 수 있다. 다시 말해, 인공 어노말리 생성 모델을 통해 생성된 변형된 데이터들은 정상 데이터에 근접한 변형된 데이터를 다수 포함할 수 있다. 즉, 인공 어노말리 생성 모델은 모델(예컨대, 어노말리 감지 모델)의 분류 성능을 많이 요구하는 데이터(즉. 모델이 배울 지식이 많은 데이터)를 생성할 수 있다. 따라서, 인공 어노말리 생성 모델은 정상 데이터와 비정상 데이터 간의 분류 기준을 더 정확히 훈련할 수 있다. 또한, 프로세서는 제 1 확률 분포와 제 2 확률 분포 간의 분포 간 유사도를 연산할 수 있다. 제 1 데이터에 관하여, 본 개시에 따른 제 1 확률 분포 및 제 1 표본 통계량은 제 1 데이터 세트에 의해 훈련된 순환 뉴럴 네트워크에 의해 도출된 출력 데이 터에 대응될 수 있다. 또한, 본 개시에 따른 제 2 확률 분포는 제 2 데이터 세트로부터 훈련된 인공 어노 말리 생성 모델이 도출한 확률 분포로서, 도 3의 출력 데이터에 대응될 수 있다. 본 개시에 따른 분포 간 유사도는, 두 확률 분포 간의 유사성을 정량화 한 값으로 정의될 수 있다. 분포 간 유 사도의 구체적인 정의는 그 도출 방식에 따라 상이할 수 있다. 예를 들어, 프로세서는 분포 간 유사도를 두 확률 분포의 평균과 표준편차 값의 차이에 기초하여 연산할 수 있다. 또는, 프로세서는 분포 간 유사도를 계산하기 위해 쿨백-라이블러 발산(Kullback-Leibler divergence, KLD)을 이용할 수 있다. 다만, 이는 분포 간 유사도를 계산하는 방법의 일례에 불과하므로, 분포 간 유사도를 연산해내는 방법은 이에 한정되지 않는다. 제 1 확률 분포와 제 2 확률 분포 간 유사도가 높을수록, 인공 어노말리 데이터 세트가 생성하는 테스트 데이터 세트가 제 1 데이터 세트와 유사해질 수 있다. 제 1 확률 분포와 제 2 확률 분포 간 유사도가 낮을수록, 인공 어노말리 데이터 세트가 생성하는 테스트 데이터 세트에 포함된 데이터들이 제 1 데이터 세트에 포함된 데이터 들과 사이의 차이점이 클 수 있다. 프로세서는 상기 유사도가 기 설정된 기준 이상인지를 판단할 수 있다. 상기 유사도가 기 설정된 기준 이 상이 아닌 경우, 프로세서는 인공 어노말리 생성 모델의 훈련을 추가적으로 수행할 수 있다. 본 개시에 따른 인공 어노말리 생성 모델의 목표는 분류 기준에 근접한, 즉 정상 데이터와 유사한 어노말리 데 이터를 잘 생성하는데 그 목표가 있다. 따라서, 프로세서는 인공 어노말리 생성 모델이 도출하는 확률 분 포와 제 1 확률 분포 간의 유사도를 적절한 수준으로 유지할 필요가 있을 수 있다. 따라서, 인공 어노말리 생성 모델을 훈련함에 있어서, 현재의 인공 어노말리 생성 모델이 도출하는 제 2 확률 분포와 제 1 확률 분포 간의 분포 간 유사도가 기 설정된 기준 이상인 경우, 더 이상 훈련을 진행하지 않도록 할 수 있다. 이러한 방식으로, 인공 어노말리 생성 모델이 과잉 훈련되어 제 1 확률 분포와 제 2 확률 분포가 동일해지는 결과를 막을 수 있다. 반대로, 유사도가 기 설정된 기준에 미치지 못하는 경우에는 인공 어노말리 생성 모델의 훈련을 추가적으로 수 행할 필요가 있을 수 있다. 상기 유사도가 기 설정된 기준 이상인 경우, 프로세서는 인공 어노말리 생성 모델의 훈련을 종료할 수 있다. 상술한 기 설정된 기준은 본 개시에 따른 인공 어노말리 생성 모델이 적용되는 분야, 데이터의 형식, 데이터의 유형 등에 따라 상이할 수 있다. 프로세서는 훈련이 종료된 인공 어노말리 생성 모델로부터 도출되는 확률 분포의 표본 통계량을 제 2 표본 통계량으로 결정할 수 있다. 상술한 바와 같이, 제 2 표본 통계량은 제 2 확률 분포의 평균, 표준편차, 최빈 값, 중간 값 등을 포함할 수 있다. 다만, 이는 제 2 표본 통계량에 관한 예시에 불과하며, 제 2 표본 통계량의 형태는 이에 한정되지 않는다. 상술한 바에 의하여, 프로세서는 기 설정된 기준을 만족하는 제 2 표본 통계량을 복수 개 획득할 수 있다. 따라서, 프로세서는 후술할 방법에 의하여, 상기 제 2 표본 통계량 각각에 기초하여 생성된 테스트 데이터 세트를 평가할 수 있다. 상기 평가에 기초하여 가장 적절한 어노말리 데이터를 생성하는 인공 어노말리 생성 모 델로부터 테스트 데이터를 생성함으로써, 모델의 훈련을 보다 효과적으로 수행할 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 복수의 변형된 데이터들을 클러스터링하여 상이한 클래스 각각 으로 분류되는 복수의 변형된 데이터 서브세트를 생성할 수 있다. 구체적으로, 프로세서는 복수의 변형된 데이터 각각의 변형과 연관되는 복수의 데이터에 기초하여 클러스터링함으로써, 복수의 변형된 데이터 서브세트 를 생성할 수 있다. 프로세서는 복수의 변형된 데이터 각각의 변형과 연관되는 복수의 데이터 각각이 어떠 한 데이터 서브세트에 포함되는지 여부 및 해당 복수의 데이터의 어떠한 부분이 변형되었는지 여부에 기초하여 클러스터링하여 복수의 변형된 데이터 서브세트를 생성할 수 있다. 예를 들어, 복수의 변형된 데이터가 제 1 변형된 데이터 및 제 2 변형된 데이터를 포함하며, 각 변형된 데이터 가 제 1 데이터 서브세트에 포함된 제 1 데이터 및 제 2 데이터 서브세트에 포함된 제 2 데이터 각각에 기초하 여 생성된 경우, 프로세서는 변형된 데이터 각각의 변형과 연관되는 데이터들(즉, 제 1 데이터 및 제 2 데 이터) 각각에 기초하여 제 1 변형된 데이터 및 제 2 변형된 데이터 각각을 포함하는 제 1 변형된 데이터 서브세 트 및 제 2 변형된 데이터 서브세트를 생성할 수 있다. 다른 예를 들어, 복수의 변형된 데이터가 제 3 변형된 데이터, 제 4 변형된 데이터 및 제 5 변형된 데이터를 포함하며, 제 3 변형된 데이터의 변형이 제 3 데이터에서의 제 1 피처 그룹에 해당하는 변형이고, 제 4 변형된 데이터의 변형이 제 4 데이터에서의 제 1 피처 그룹에 해 당하는 변형이고, 그리고 제 5 변형된 데이터의 변형이 제 5 데이터에서의 제 2 피처 그룹에 해당하는 변형인 경우, 프로세서는 해당 변형된 데이터들을 클러스터링하여 제 3 변형된 데이터 및 제 4 변형된 데이터를 포함하는 제 3 변형된 데이터 서브세트를 생성하고, 그리고 제 5 변형된 데이터를 포함하는 제 4 변형된 데이터 서브세트를 생성할 수 있다. 즉, 프로세서는 변형된 데이터의 변형과 연관되는 데이터에 기초하여 변형된 데이터들 중 변형된 부분(즉, 특정 피처 그룹)이 동일한 데이터에 대하여, 동일한 변형된 데이터 서브세트에 포 함시킬 수 있으며, 변형된 부분이 상이한 데이터에 대하여 상이한 데이터 서브세트에 포함시킬 수 있다. 전술한 데이터 및 변형된 데이터에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따르면, 프로세서는 복수의 변형된 데이터 각각에 변형 레이블을 부여할 수 있다. 구체적으로, 프로세서는 상이한 클래스를 형성하는 복수의 데이터 서브세트 각각으로부터 복수의 데이터를 선택하고, 선택된 각각의 데이터의 동일한 피처 그룹에 속하는 데이터의 값을 서로 교환하여 선택된 복수의 데 이터들 각각의 일부에 대한 변형을 통해 변형된 데이터들(비정상에 관련한 데이터)을 생성할 수 있다. 또한, 프 로세서는 상이한 클래스를 형성하는 복수의 데이터 서브세트 각각을 인공 어노말리 생성 모델의 입력으로 처리하여 복수의 변형된 데이터를 생성할 수 있다. 프로세서는 생성된 변형된 데이터들 각각에 변형 레이블을 부여할 수 있다. 변형 레이블은 하드(hard)한 레이블일 수도 있고 소프트(soft)한 레이블일 수도 있다. 변형 레이블은 변형된 데이터 각각에 대한 설명을 포함하며, 변형된 데이터의 상태에 관련한 정보, 또는 변형된 데이터의 변형과 관련한 설명 정보 중 적어도 하나를 포함할 수 있다. 변형 레이블은 예를 들어, 해당 데이터가 비정상임을 나타내는 레이블 일 수도 있고, 해당 데이터의 특정 피처 값이 비정상이라는 설명 정보를 포함하는 레이블일 수 있고, 그리고 해당 데이터가 비정상일 확률(예를 들어, 변경된 피처 그룹이 데이터에서 차지하는 비중을 고려하여 구해진 값 등)을 나타낼 수도 있다. 전술한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 예를 들어, 프로세서는 복수의 데이터를 포함하는 데이터 세트에서 제 1 데이터 및 제 2 데이터를 선택하 고, 제 1 데이터 및 제 2 데이터 각각의 특정 피처 그룹을 상호 교환할 수 있다. 이 경우, 제 1 데이터는 제 2 데이터의 특정 피처 그룹의 값을 포함하며, 제 2 데이터는 제 1 데이터의 대응되는 특정 피처 그룹의 값을 포함 하므로, 변형된 각각의 데이터는 비정상 데이터일 수 있다. 프로세서는 이 경우 각각의 데이터에 변형 레 이블을 부여할 수 있다. 전술한 각 데이터를 통해 비정상 데이터를 생성하는 과정에 대한 구체적인 기재는 예시 일 뿐, 본 개시는 이에 제한되지 않는다. 즉, 프로세서는 복수의 데이터 각각에 포함된 특정 피처 그룹의 교환함으로써 변형한 데이터들 각각에(즉, 비정상 데이터 각각에) 변형 레이블을 부여함으로써, 테스트 과정에서 모델이 해당 데이터에 대한 비정상 여부 를 감지하도록 할 수 있다. 일반적으로, 특정 데이터에 기초하여 어노말리 여부를 감지하기 위한 신경망 모델은 정상 데이터와 비정상 데이 터를 포함하는 학습 데이터를 통해 사전 학습될 수 있다. 다시 말해, 신경망 모델이 어노말리 여부를 감지하도 록 사전 학습시키는 과정에서 정상 데이터와 비정상 데이터 모두를 구축하여야 할 수 있다. 다만, 신경망을 학 습시키기 위한 비정상 데이터는 시계열에 관한 정보를 포함하므로 확보(또는, 구축)하기가 어려우며, 해당 비정 상 데이터를 구축하는데 많은 시간이 요구될 수 있다. 본 개시는 정상 데이터들 각각의 동일 피처 그룹을 상호 교환하여 데이터를 변형함으로써 비정상 데이터를 생성할 수 있으므로, 별도의 비정상 데이터를 구축할 필요가 없어, 학습 데이터 구축이 용이해질 수 있다. 또한, 본 개시의 복수의 데이터를 변형함으로써 생성되는 비정상 데이터는 각 데이터들의 일부 영역을 단순히 상이한 값으로 변형(예컨대, 특정 데이터에 일부 노이즈를 부가하 는 등)하는 것이 아닌, 동일한 피처 그룹에 속하는 데이터의 값을 교환(즉, 연관성을 가지는 데이터 값들의 교 환)을 통해 이루어지거나, 또는 기존에 수집된 데이터 세트의 확률 분포를 학습한 후, 이에 기초하여 정상 데이 터에 근접한 변형된 데이터를 생성하는 인공 어노말리 생성 모델의 활용을 통해 이루어지는 것임으로, 신경망 (예를 들어, 어노말리 감지 모델) 학습에 적합한 학습 데이터(즉, 분류 성능을 많이 요구하는 데이터)를 생성할 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 복수의 데이터 및 복수의 변형된 데이터에 기초하여 테스트 데 이터 세트를 생성할 수 있다. 프로세서가 생성하는 테스트 데이터 세트는 각각 상이한 클래스로 구성되는 하나 이상의 테스트 데이터 서브세트를 포함할 수 있다. 이 경우, 하나 이상의 테스트 데이터 서브세트는 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 중 하나 이상의 데이터 및 동일한 클래스의 데이터 서브 세트에 포함된 복수의 데이터 각각에 기초하여 생성된 복수의 변형된 데이터 중 하나 이상의 변형된 데이터 구 성될 수 있다. 자세히 설명하면, 프로세서는 복수의 데이터 및 복수의 변형된 데이터 각각의 클래스에 대한 정보에 기초 하여 복수의 테스트 데이터 서브세트를 포함하는 테스트 데이터 세트를 생성할 수 있다. 예를 들어, 복수의 데 이터가 제 1 클래스로 분류되어 제 1 데이터 서브세트에 포함된 제 1 데이터와 제 2 클래스로 분류되어 제 2 데 이터 서브세트에 포함된 제 2 데이터를 포함하며, 복수의 변형된 데이터가 제 1 클래스로 분류되어 제 2 변형된 데이터 서브세트에 포함된 제 1 변형된 데이터와 제 2 클래스로 분류되어 제 2 데이터 서브세트에 포함된 제 2 변형된 데이터를 포함하는 경우, 프로세서는 각각 동일한 클래스로 분류된 제 1 데이터 및 제 1 변형된 데 이터를 포함하는 제 1 테스트 데이터 서브세트를 생성할 수 있고, 그리고 제 2 데이터 및 제 2 변형된 데이터를 포함하는 제 2 테스트 데이터 서브세트를 생성할 수 있다. 다른 예를 들어, 제 3 클래스로 분류된 제 3 데이터 서브세트에 포함된 복수의 데이터가 제 3 데이터, 제 4 데 이터 및 제 5 데이터를 포함하며, 제 3 클래스로 분류된 제 3 변형된 데이터 서브세트에 포함된 복수의 변형된 데이터가 제 3 변형된 데이터 및 제 4 변형된 데이터를 포함하는 경우, 프로세서는 제 3 데이터, 제 4 데 이터, 제 5 데이터, 제 3 변형된 데이터 및 제 4 변형된 데이터를 포함하는 테스트 데이터 서브세트를 생성할 수 있다. 전술한 데이터 및 변형된 데이터의 클래스에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되 지 않는다. 즉, 프로세서는 동일한 클래스의 데이터 및 변형된 데이터로 각각의 테스트 데이터 서브세트를 구성할 수 있다. 다시 말해, 각 테스트 데이터 서브세트는, 정상 데이터 해당하는 복수의 데이터와 복수의 데이터의 일부 가 변형됨에 따라 생성된 비정상에 관련한 변형된 데이터를 포함할 수 있다. 또한, 프로세서는 사전 설정된 수 이상의 테스트 데이터 서브세트를 포함하는 테스트 데이터 세트를 생성 할 수 있다. 구체적으로, 프로세서는 동일한 클래스의 데이터 및 변형된 데이터를 통해 각각 상이한 클래 스의 테스트 데이터 서브세트를 생성하는 과정에서, 사전 설정된 수 이상의 테스트 데이터 서브세트를 생성할 수 있다. 테스트 데이터 서브세트에 관련한 사전 설정된 수는, 모델의 학습에 관련한 학습 데이터와 동일한 특 징을 나타내는 테스트 데이터 세트를 생성하기 위한 기준을 의미할 수 있다. 예를 들어, 학습에 관련한 데이터 세트의 복수의 데이터의 클래스가 20개로 클러스터링됨에 따라 제 1 데이터 서브세트 내지 제 20 데이터 서브세 트로 분류되며, 해당 학습에 관련한 데이터의 특징을 전체적으로 반영하는 테스트 데이터 서브세트를 생성하기 위한 기준이 되는 사전 설정된 수가 18인 경우, 프로세서는 동일한 클래스의 데이터 및 변형된 데이터를 통해 각각 상이한 클래스인 18개 이상의 테스트 데이터 서브세트를 생성할 수 있다. 따라서, 프로세서는 모델의 학습에 관련한 학습 데이터의 전체적인 특징을 나타내는 테스트 데이터 세트를 생성할 수 있다. 즉, 모 델의 테스트에 적합한 테스트 데이터 세트의 생성이 가능해질 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 테스트 데이터 세트에 대한 평가를 수행할 수 있다. 구체적으 로, 프로세서는, 데이터 서브 세트에 포함된 데이터 각각을 모델에 입력시켜 해공간에 매핑할 수 있다. 본 개시에서 해공간은 입력 데이터에 대한 임의의 처리가 수행된 표현에 데이터가 매핑될 수 있는 공간을 포함할 수 있으며, 예를 들어, 분류 모델에 의하여 처리된 데이터가 매핑될 수 있는 공간 또는 입력 데이터의 차원 감 소 표현 또는 벡터 표현이 매핑될 수 있는 공간을 포함할 수 있다. 본 개시에서 데이터 공간은 입력 데이터가 매핑될 수 있는 공간을 포함할 수 있다. 프로세서는, 매핑된 데이터 각각과 모델의 분류 기준 간 거리에 기초하여, 테스트 데이터 세트의 적합도를 평가할 수 있다. 테스트 데이터 세트의 적합도의 평가는, 데이터 서브 세트에 포함된 데이터 각각과 분류 기준 간 거리에 기초할 수 있다. 예를 들어, 프로세서는 상기 데이터 각각과 분류 기준 간 거리의 평균 값을 연 산하고, 상기 거리의 평균 값이 작을수록 테스트 데이터 세트의 적합도가 낮다고 평가할 수 있다. 다른 예를 들 어, 프로세서는 데이터 각각의 분류 기준 과의 거리 값의 산포도 지표를 연산할 수 있다. 여기서 산포도 지표는 거리 값의 분산 또는 표준 편차 등으로 표현될 수 있다. 프로세서는, 산포도 수치가 낮을수록 테스 트 데이터 세트의 적합도를 높게 평가할 수 있다. 또 다른 예를 들어, 프로세서는 테스트 데이터 세트에 포함된 테스트 데이터들의 밀집도를 연산할 수 있다. 이 경우, 예를 들면, 프로세서는 상기 거리의 평균 값, 상기 산포도, 상기 밀집도의 역수를 적합도 로 연산할 수 있다. 상술한 내용은 테스트 데이터 세트의 적합도를 판단하는 예시에 불과하므로, 테스트 데이터 세트의 적합도를 연산하는 방법은 이에 한정되지 않는다.복수의 테스트 데이터 세트에 대한 평가가 수행된 경우, 프로세서는 적합도가 가장 높은 테스트 데이터 세 트와 연관된 표본 통계량 및 그와 관련된 확률 분포를 생성하는 인공 어노말리 생성 모델을 이용하여, 최종적으 로 테스트 데이터 세트를 생성해낼 수 있다. 분류 기준에 가까운 데이터일수록 뉴럴 네트워크의 분류 기준을 학습시키는 데 도움이 될 수 있다. 따라서, 임 의의 데이터 세트에 포함된 데이터들이 평균적으로 분류 기준과 가깝다면, 그 데이터 세트는 뉴럴 네트워크의 학습에 적합할 수 있다. 또한, 실질적으로 동일한 범위의 평균 거리를 갖는 두 데이터 집합을 비교할 경우, 데 이터들이 밀집한 경우가 분류 기준의 학습에 적합한 경우일 것이다. 데이터들이 넓은 범위에 분산되어 있으면, 분류 기준이 모호하여 학습이 어려울 수 있기 때문이다. 따라서, 테스트 데이터 세트의 적합도를 서브세트에 포함된 데이터들의 분류 기준과의 거리, 거리의 산포도 및 테스트 데이터의 밀집도에 기초하여 판단할 경우, 효과적으로 테스트 데이터 세트의 적합도에 대한 평가가 가능 할 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 성능을 테스트할 수 있다. 본 개시의 일 실시예에서 모델은 어노말리 감지에 사용될 수 있다. 구체적으로, 프로 세서는 테스트 데이터 세트에 포함된 복수의 변형된 데이터를 모델이 비정상으로 판단하는지 여부에 기초 하여 모델의 성능을 테스트할 수 있다. 또한, 프로세서는 모델이 복수의 변형된 데이터 각각에서 비정상으 로 판단한 하나 이상의 피처 그룹 각각이 복수의 변형된 데이터 각각에서 변형과 관련한 하나 이상의 피처 그룹 에 포함되는지 여부에 기초하여 모델의 성능을 테스트할 수 있다. 예를 들어, 프로세서는 제 1 데이터 및 제 2 데이터 각각에 포함된 복수의 피처 그룹 중 일부를 상호 교환 함으로써 제 1 데이터 및 제 2 데이터에 대한 변형을 수행할 수 있다. 또한, 프로세서는 제 1 변형된 데이 터 및 제 2 변형된 데이터(즉, 비정상에 관련한 데이터) 각각을 모델의 입력으로 하여 각 데이터에 대한 어노말 리 여부를 출력할 수 있다. 모델의 출력 결과가 제 1 변형된 데이터에서 어노말리가 감지되었다는 정보를 포함 하며, 제 2 변형된 데이터에서 어노말리가 감지되었다는 정보를 포함하는 경우, 프로세서는 해당 모델의 성능이 적정한 것으로 판별할 수 있다. 예를 들어, 모델이 복수의 변형된 데이터 대한 입력에 대하여 어노말리 가 감지되었다는 출력(즉, 정답률)을 사전 결정된 비율(예컨대 90%) 이상 산출하는 경우, 해당 모델의 성능이 적정한 것으로 판별할 수 있다. 다른 예를 들어, 모델의 출력 결과가 제 1 변형된 데이터 또는, 제 2 변형된 데이터 중 적어도 하나의 데이터에 서 어노말리가 감지되지 않았다는 정보를 포함하는 경우, 프로세서는 해당 모델의 성능이 적정하지 못한 것으로 판별할 수 있다. 또 다른 예를 들어, 프로세서는 제 1 데이터 및 제 2 데이터 각각에 포함된 복수의 피처 그룹 중 제 1 피 처 그룹을 상호 교환함으로써 제 1 데이터 및 제 2 데이터에 대한 변형을 수행할 수 있다. 또한, 프로세서(11 0)는 변형된 제 1 데이터 및 제 2 데이터(즉, 비정상에 관련한 데이터) 각각을 모델의 입력으로 하여 각 데이터 에 대한 어노말리 감지 여부를 출력할 수 있다. 모델의 출력 결과, 변형된 제 1 데이터 및 제 2 데이터 각각이 어노말리가 감지되었다는 정보를 포함하며, 변형된 제 1 데이터에서의 제 1 피처그룹이 어노말리에 관련된다는 정보 및 변형된 제 2 데이터에서의 제 2 피처그룹이 어노말리에 관련된다는 정보를 포함하는 경우, 프로세서 는 제 2 변형된 데이터의 어노말리 관련 부분은 제 1 피처 그룹이므로, 제 2 변형된 데이터의 어노말리 감 지 여부에 대한 판단이 적정하지 못한 것으로 판단하여 해당 모델의 성능이 적정하지 못한 것으로 판별할 수 있 다. 전술한 제 1 데이터 및 제 2 데이터에 기초하여 출력한 어노말리 판단 여부에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 즉, 테스트 데이터 세트가 구축되지 않은 환경에서 학습된 신경망 모델의 성능 테스트가 가능해질 수 있다. 다 시 말해. 학습된 신경망 모델을 테스트하기 위한 별도의 테스트 세트를 구축하지 않아도, 복수의 데이터의 변형 을 통해 비정상 데이터를 생성함으로써, 학습된 신경망 모델에 대한 테스트를 수행할 수 있다. 이에 따라, 별도의 테스트 세트를 구축할 필요가 없어, 신경망의 학습 및 성능 테스트가 간소화되어 어노말리를 감지하는 신경망 모델(즉, 어노말리 감지 모델) 생성의 효율이 향상될 수 있다. 본 개시의 일 실시예에 따르면, 프로세서는 모델의 학습 중, 모델의 학습 완료, 또는 모델의 운용 중 적어 도 하나의 시점에 대응하여 모델의 성능을 테스트할 수 있다. 자세히 설명하면, 프로세서는 모델의 학습 시점에 대응하여 사전 결정된 에폭 간격으로 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 학습 성능을 테스트할 수 있다. 학습에 관한 데이트 세트를 신경망이 1회 학습하는 것은 1 에폭일 수 있다. 예를 들어, 사전 결정된 에폭 간격이 2인 경우, 프로세서는 모델의 학습 과정에서 2 에폭 마다 테스트 데이터 세 트를 모델을 이용하여 연산하도록 하여 모델의 학습 성능을 테스트할 수 있다. 이 경우, 본 개시의 일 실시예에 따라, 모델은 어노말리 감지 모델일 수 있으며, 비지도 학습 방법을 통해 학습되어 어노말리 여부를 감지하기 위한 모델일 수 있다. 해당 모델의 학습에 관한 데이터 세트는 정상 데이터만을 포함할 수 있다. 이에 따라, 모 델의 학습 과정에서 모델에 학습이 잘 이루어지고 있는지 여부에 대한 판별을 하기 위해서 정상 데이터 뿐만 아 니라 비정상 데이터가 포함된 테스트 데이터 세트를 구축할 필요가 있다. 따라서, 프로세서는 전술한 방법 을 통해 데이터 세트의 변형(예컨대, 상이한 복수의 데이터의 일부 값의 교환 또는, 어노말리 생성 모델을 통해 입력 데이터와 유사한 비정상 데이터를 출력하는 등)을 통해 변형된 데이터를 생성하고, 생성된 변형된 데이터 를 포함하는 테스트 데이터를 모델의 학습 시점에 대응하여 입력으로 처리함으로써, 모델의 학습에 대한 적정성 여부를 판별할 수 있다. 또한, 프로세서는 모델의 학습 완료 시점에 대응하여 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 검출 성능을 테스트할 수 있다. 구체적으로, 프로세서는 학습이 완료된 모델에 테스 트 데이터 세트를 입력으로 처리하여 어노말리 감지 여부에 대한 결과를 출력할 수 있으며, 출력된 결과에 기초 하여 검출 성능을 테스트할 수 있다. 프로세서는 정상에 관련한 복수의 데이터를 포함하는 데이터 세트를 통한 모델의 학습이 완료되는 시점에, 복수의 데이터 및 복수의 데이터에 기초하여 변형된 복수의 변형된 데이 터를 포함하는 테스트 데이터 세트를 학습이 완료된 모델에 입력으로 처리하여 테스트 데이터 세트에 포함된 복 수의 테스트 데이터 각각에 대한 어노말리 감지 여부를 출력할 수 있다. 예를 들어, 학습된 모델이 테스트 데이 터 세트에 포함된 데이터들 중 비정상과 관련된 데이터인 변형된 데이터(즉, 변형 레이블이 부여된 데이터)를 입력으로 처리하여 해당 변형된 데이터에 어노말리가 감지되었다는 정보를 출력하는 경우, 프로세서는 해 당 모델의 어노말리 검출 성능이 적정한 것으로 판별할 수 있다. 예를 들어, 모델이 복수의 변형된 데이터 대한 입력에 대하여 어노말리가 감지되었다는 출력(즉, 정답률)을 사전 결정된 비율(예컨대 90%) 이상 산출하는 경우, 해당 모델의 성능이 적정한 것으로 판별할 수 있다. 전술한 모델의 적정성 판단에 대한 구체적인 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 즉, 모델의 학습이 완료되는 시점에 대응하여 정상 데이터 및 정상 데이터에 기초하여 생성된 비정상 데이터를 포함하는 테스트 데이터 세트에 대한 모델의 처리 결과에 따라 해당 모델의 검출 성능이 적정한지 여부를 테스 트할 수 있다. 또한, 프로세서는 모델의 운용 시점에 대응하여 학습 완료 이후에 생성된 데이터에 대한 변형을 수행하여 추가적인 변형된 데이터를 생성할 수 있다. 프로세서는 추가적인 변형된 데이터를 포함하는 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 성능 열화 여부에 대한 테스트를 수행할 수 있다. 자세히 설명하면, 본 개시에서 모델의 학습에 활용되는 데이터는 산업현장에서 획득되는 다양한 종류의 데이터 를 포함할 수 있다. 예를 들어, 제품의 생산 공정에서 제품의 생산을 위한 디바이스의 동작 파라미터, 디바이스 의 동작에 의하여 획득된 센서 데이터 등을 포함할 수 있다. 하나의 데이터는 하나의 제조 장비에서 하나의 제 조 레시피를 사용하여 제조물을 제조하는 동안 획득된 데이터를 포함할 수 있다. 제조물을 제조하는 동안 획득 되는 데이터는 센서 데이터를 포함할 수 있다. 즉, 복수의 데이터를 포함하는 데이터 세트는 하나 이상의 제조 장비에서 하나 이상의 제조 레시피를 사용하여 제조물을 제조하는 동안 획득된 데이터를 포함할 수 있으나(즉, 여러 제조 장비와 여러 제조 레시피에 대한 데이터가 혼재되어 있을 수 있어, 복수의 정상 상태를 가질 수 있음), 각각의 데이터는 각각 하나의 제조 장비에서 하나의 제조 레시피에 의한 제조물의 생산에서 획득된 데이 터로서 하나의 정상 상태를 가질 수 있다. 이 경우, 제조 레시피는 산업 현장에서 제조물을 생산하기 위한 방법 에 대한 정보를 포함할 수 있으며, 구체적으로 제조 장비를 제어하기 위한 데이터를 포함할 수 있다. 다만, 산 업 분야에서의 제조 장비들을 제어하기 위한 데이터들은 생산 공정의 변화에 따라 설정이 변경될 수 있다. 즉, 모델에 대한 학습이 완료된 이후 시점에 제조 장비에 대한 제조 레시피의 설정 변경에 따라 학습에 관련한 복수의 데이터 이외의 추가적인 데이터가 획득될 수 있다. 이 경우, 추가적인 데이터가 없는 시점에 학습된 모 델은 설정 변경 이후의 입력 데이터에 대한 학습이 이뤄지지 않았으므로, 모델의 운용 중에 어노말리 감지에 대 한 적절한 판별이 어려울 수 있다. 즉, 모델의 운용 중에 발생하는 설정 변경에 따라 추가적인 데이터의 생성이 활발해지는 경우, 기존 데이터를 통해 학습된 모델의 성능 저하가 발생할 우려가 있다. 이에 따라, 프로세서 는 모델의 운용 시점에 대응하여 학습 완료 이후에 생성된 데이터에 대한 변형을 수행하여 추가적인 변형 된 데이터를 생성할 수 있다. 또한, 프로세서는 추가적으로 생성된 변형된 데이터를 포함하는 테스트 데이 터 세트를 운용 시점에 대응하는 모델의 입력으로 처리함으로써, 테스트 데이터 세트에 포함된 복수의 테스트 데이터 각각에 대한 어노말리 감지 여부를 출력할 수 있다. 예를 들어, 운용 시점에 대응하는 모델이 테스트 데이터 세트에 포함된 데이터들 중 비정상과 관련된 데이터인 변형된 데이터(즉, 변형 레이블이 부여된 데이터)를 입력으로 처리하여 해당 변형된 데이터에 어노말리가 감지되었다는 정보를 출력하는 경우, 프로세서는 해 당 모델의 어노말리 검출 성능이 적정한 것으로 판별할 수 있다. 즉, 모델의 운용 시점에 대응하여 추가적으로 획득되는 데이터(즉, 정상에 관련한 데이터) 및 해당 데이터에 기 초하여 생성된 변형된 데이터를 포함하는 테스트 데이터 세트에 대한 모델의 처리 결과에 따라 해당 모델의 열 화 성능이 적정한지 여부를 판별할 수 있다. 따라서, 프로세서는 복수의 데이터 및 복수의 데이터에 대응하는 복수의 변형된 데이터를 포함하는 테스트 데이터 세트를 다양한 시점(학습 시점, 학습 완료 시점 및 운용 시점)에 대응하여 모델에 입력으로 처리하고, 출력된 어노말리 감지 결과를 통해 모델의 성능에 대한 테스트를 수행할 수 있다. 도 4은 본 개시의 일 실시예에 관련된 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경 우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하는 링크 에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들을 포함하여 구성될 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노 드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력` 노드로부터 거 리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어 의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의 될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들이 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 와 동일할 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형 태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하 는 형태의 신경망일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사 한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어의 노드의 수 는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 이 경우, 도 3의 예시에서는 차원 감소 레이 어와 차원 복원 레이어가 대칭되는 것으로 도시되어 있으나, 본 개시는 이에 제한되지 않으며, 차원 감소 레이 어와 차원 복원 레이어의 노드는 대칭일 수도 있고 아닐 수도 있다. 오토 인코더는 비선형 차원 감소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 남은 센서들의 수와 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 출력의 오류를 최소 화하기 위한 것이다. 뉴럴 네트워크의 학습에서 반복적으로 학습 데이터를 뉴럴 네트워크에 입력시키고 학습 데 이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 뉴럴 네트워 크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데 이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴 럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류 가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전 파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이 트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학 습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습 률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션(regularization), 학습의 과정에서 네트워크의 노드 일부를 생략하는 드롭아웃(dropout) 등의 방법이 적용될 수 있다. 본 개시의 일 실시예에 따라 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자가 생각하는 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매 체(예를 들어, 하드 디스크)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데 이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함 할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨팅 장치는 컴퓨팅 장치의 자원을 최소한으로 사용하면 서 연산을 수행할 수 있다. 구체적으로 컴퓨팅 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트 (List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다. 비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. (이하에서는 신경망으로 통일하여 기술한다.) 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망 을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망 에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수를 포함할 수 있다. 신경망을 포함한 데 이터 구조는 상기 개시된 구성들 중 임의의 구성 요소들을 포함할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경 망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 트레이닝을 위한 손실 함수 등 전부 또는 이들의 임의 의 조합을 포함하여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발생되는 모든 형태의 데이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습 데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 파라미터에 기초하여 출력 노드 값을 결정할 수 있다. 전술한 데이터 구조 는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및 /또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨팅 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨팅 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨팅 장치 또는 다른 컴퓨팅 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데 이터 구조에서 B-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다. 데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 5는 본 개시의 일 실시예와 관련된 모델의 성능을 테스트하는 방법을 수행하기 위한 순서도를 도시한다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수 의 변형된 데이터를 생성할 수 있다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 복수의 데이터 및 복수의 변형된 데이터에 기초하여 테스트 데이터 세트를 생성할 수 있다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델 의 성능을 테스트할 수 있다. 전술한 도 5의 도시된 단계들은 필요에 의해 순서가 변경될 수 있으며, 적어도 하나 이상의 단계가 생략 또는 추가될 수 있다. 즉, 전술한 단계는 본 개시의 실시예에 불과할 뿐, 본 개시의 권리 범위는 이에 제한되지 않는 다.도 6은 본 개시의 일 실시예와 관련된 모델의 성능을 테스트하는 방법을 구현하기 위한 로직을 도시한다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 다음과 같은 로직에 의해 구현될 수 있다. 본 개시의 일 실시예에 따르면, 컴퓨팅 장치는 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수 의 변형된 데이터를 생성하기 위한 로직, 복수의 데이터 및 복수의 변형된 데이터에 기초하여 테스트 데이 터 세트를 생성하기 위한 로직 및 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 모델의 성능을 테 스트하기 위한 로직을 포함할 수 있다. 대안적으로, 상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하기 위한 로직은, 상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하기 위한 로직을 포함 할 수 있다. 대안적으로, 상기 복수의 데이터 각각의 일부를 변형하여 상기 복수의 변형된 데이터를 생성하기 위한 로직은, 상기 데이터 세트에서 서로 상이한 복수의 데이터를 선택하기 위한 로직 및 상기 선택된 복수의 데이터 중 하나 의 데이터의 값과 다른 데이터의 값을 사전 결정된 정도로 교환하여 상기 복수의 변형된 데이터를 생성하기 위 한 로직을 포함할 수 있다. 대안적으로, 상기 데이터 세트에 포함된 복수의 데이터 각각에 기초하여 복수의 변형된 데이터를 생성하기 위한 로직은, 상기 데이터 세트를 인공 어노말리(pseudo anomaly) 생성 모델의 입력으로 처리하여 상기 복수의 변형 된 데이터를 생성하기 위한 로직을 포함할 수 있다. 대안적으로, 상기 데이터 세트를 인공 어노말리 생성 모델의 입력으로 처리하여 상기 복수의 변형된 데이터를 생성하기 위한 로직은, 제 1 데이터 세트를 이용하여 상기 제 1 데이터 세트에 대한 제 1 확률 분포 및 제 1 표 본 통계량을 연산하기 위한 로직 및 제 2 데이터 세트에 대한 제 2 확률 분포 및 제 2 표본 통계량을 학습하는 상기 인공 어노말리 생성 모델을 훈련시키기 위한 로직을 포함하며, 상기 제 1 데이터 세트 및 상기 제 2 데이 터 세트는, 동종의 데이터에 대한 벡터 또는 스칼라일 수 있다. 대안적으로, 상기 인공 어노말리 생성 모델을 훈련시키기 위한 로직은, 상기 제 1 확률 분포와 상기 제 2 확률 분포 간의 분포 간 유사도를 연산하기 위한 로직 및 상기 분포 간 유사도에 기초하여, 상기 인공 어노말리 생성 모델의 훈련을 추가적으로 수행할지 여부를 결정하기 위한 로직을 포함할 수 있다. 대안적으로, 상기 복수의 변형된 데이터 각각에 변형 레이블을 부여하기 위한 로직 및 상기 변형 레이블이 부여 된 복수의 변형된 데이터를 포함하는 테스트 데이터 세트를 생성하기 위한 로직을 더 포함하고, 그리고 상기 변 형 레이블은, 상기 복수의 변형된 데이터 각각에 대한 설명을 포함하며, 상기 복수의 변형된 데이터 각각의 상 태에 관련한 정보, 또는 상기 복수의 변형된 데이터 각각의 변형과 관련한 설명 정보 중 적어도 하나를 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트는, 하나 이상의 테스트 데이터 서브세트를 포함하며, 상기 하나 이상의 테스트 데이터 서브세트 각각은, 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 중 하나 이상의 데 이터 및 상기 동일한 클래스의 데이터 서브세트에 포함된 복수의 데이터 각각에 기초하여 생성된 복수의 변형된 데이터 중 하나 이상의 변형된 데이터로 구성될 수 있다. 대안적으로, 상기 테스트 데이터 세트에 대한 평가를 수행하기 위한 로직을 더 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트에 대한 평가를 수행하기 위한 로직은, 상기 테스트 데이터 서브세트에 포 함된 데이터 각각을 상기 모델에 입력시켜 해 공간에 매핑시키기 위한 로직 및 상기 테스트 데이터 서브세트에 포함된 데이터 및 상기 모델의 분류 기준에 기초하여 상기 테스트 데이터 세트의 적합도를 연산하기 위한 로직 을 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하기 위한 로직은, 상기 테스트 데이터 세트에 포함된 상기 복수의 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 상기 모델의 성능을 테스트하기 위한 로직을 포함할 수 있다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하기 위한 로직은, 상기 모델의 학습 중, 상기 모델의 학습 완료 또는 상기 모델의 운용 중 적어도 하나의 시점에 수행될 수 있다. 대안적으로, 상기 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능을 테스트하기 위한 로직은, 상기 모델의 학습 시점에 대응하여 사전 결정된 에폭 간격으로 제 1 테스트 데이터 세트를 상기 모델을 이용하여 연산함으로써, 상기 모델의 학습 성능을 테스트하기 위한 로직, 상기 모델의 학습 완료 시점에 대응하 여 상기 제 1 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 검출 성능을 테스트하기 위한 로직 및 상기 모델의 운용 시점에 대응하여 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모 델의 성능 열화(Performance Degradation)에 대한 테스트를 수행하기 위한 로직을 포함할 수 있다. 대안적으로, 상기 제 1 테스트 데이터 세트는, 제 1 시점에 대응하여 획득된 각각 상이한 클래스로 구성되는 제 1 테스트 데이터 서브세트를 포함하며, 상기 제 1 테스트 데이터 서브세트는 하나의 클래스의 데이터 및 상기 하나의 클래스의 데이터에 기초하여 생성된 변형된 데이터로 구성될 수 있다. 대안적으로, 상기 제 2 테스트 데이터 세트는, 상기 제 1 시점 이후 시점인 제 2 시점에 대응하여 추가적으로 획득된 데이터 및 상기 데이터에 대한 변형된 데이터로 구성되는 제 2 테스트 데이터 서브세트를 포함하며, 상 기 제 2 시점은, 상기 모델의 운용 시점에 대응하는 시점일 수 있다. 대안적으로, 상기 모델의 운용 시점에 대응하여 상기 제 2 테스트 데이터 세트를 모델을 이용하여 연산함으로써, 상기 모델의 성능 열화에 대한 테스트를 수행하기 위한 로직은, 상기 제 2 테스트 데이터 서브세 트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는지 여부에 기초하여 수행될 수 있다. 대안적으로, 상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생한 것으로 판단하기 위한 로직 또는 상기 제 2 테스트 데이터 서브세트에 포함된 변형된 데이터를 상기 모델이 비정상으로 판단하는 경우, 상기 모델의 성능 열화가 발생하지 않은 것으 로 판단하기 위한 로직을 더 포함할 수 있다. 본 개시의 일 실시예에 따르면 컴퓨팅 장치를 구현하기 위한 로직은 컴퓨팅 프로그램을 구현하기 위한 수 단, 회로 또는 모듈에 의하여 구현될 수도 있다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있으나, 그러한 구현의 결정들이 본 개시내 용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 도 7은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도 시한다. 본 개시가 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술되었 지만, 당업자라면 본 개시가 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로 구현 될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로시져, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일- 프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 이러한 컴퓨터 판독가능 저장 매체는 휘발성 및 비휘발성 매체, 이동식 및 비-이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 이동식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기 타 메모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보 를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하는 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴 퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트,IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 서버 컴퓨 터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네 트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하 지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망 (LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워 크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 서버에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정하는 기타 수 단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터페이스(114 2)를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로그램 모듈 들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시적인 것이 며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성있으며 고속인 무선 연결을 제공하 기 위해 IEEE 802.11(a,b,g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트 워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비인가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 매체는 자기 저장 장치(예 를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드,및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기 계-판독가능한 매체를 포함한다. 용어 \"기계-판독가능 매체\"는 명령(들) 및/또는 데이터를 저장, 보유, 및/또 는 전달할 수 있는 무선 채널 및 다양한 다른 매체를 포함하지만, 이들로 제한되는 것은 아니다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2020-0022501", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다양한 양상들이 이제 도면들을 참조로 기재되며, 여기서 유사한 참조 번호들은 총괄적으로 유사한 구성요소들 을 지칭하는데 이용된다. 이하의 실시예에서, 설명 목적을 위해, 다수의 특정 세부사항들이 하나 이상의 양상들 의 총체적 이해를 제공하기 위해 제시된다. 그러나, 그러한 양상(들)이 이러한 구체적인 세부사항들 없이 실시 될 수 있음은 명백할 것이다. 도 1은 본 개시의 일 실시예의 모델의 성능을 테스트를 수행하기 위한 컴퓨팅 장치의 블록 구성도이다. 도 2는 본 개시의 일 실시예와 관련된 데이터 세트를 구성하는 복수의 데이터들을 예시적으로 나타낸 예시도이 다. 도 3은 본 개시의 일 실시예와 관련된 순환 뉴럴 네트워크(Recurrent Neural Network)를 예시적으로 나타낸 예 시도이다. 도 4는 본 개시의 일 실시예에 따라 네트워크 함수를 나타낸 개략도이다. 도 5는 본 개시의 일 실시예와 관련된 모델의 성능을 테스트하는 방법을 수행하기 위한 순서도를 도시한다. 도 6은 본 개시의 일 실시예와 관련된 모델의 성능을 테스트하는 방법을 구현하기 위한 로직을 도시한다. 도 7은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도 시한다."}
