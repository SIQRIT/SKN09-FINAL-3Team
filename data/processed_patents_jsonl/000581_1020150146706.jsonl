{"patent_id": "10-2015-0146706", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2017-0046409", "출원번호": "10-2015-0146706", "발명의 명칭": "어플리케이션을 관리하는 방법 및 그 장치", "출원인": "삼성전자주식회사", "발명자": "오명진"}}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에 있어서,통신 모듈을 더 포함하고,상기 프로세서는 상기 통신 모듈을 통해 연결된 외부 장치로부터 상기 제1 식별자에 대응되는 상기 제2 식별자를 갖는 상기 제2 어플리케이션을 다운로드 하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 프로세서는, 상기 제2 어플리케이션에 대응하는 토큰에 적어도 기반하여, 상기 추가 서명 정보를 획득하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 프로세서는 상기 제1 서명 정보와 상기 제2 서명 정보가 일치하면, 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 2에 있어서,상기 토큰은 키 체인(key chain) 정보를 포함하고,상기 프로세서는 상기 키 체인 정보에 의해 상기 제1 서명 정보가 인증 가능하면 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 2에 있어서,상기 토큰은 키 변경 이력 정보를 포함하고,상기 프로세서는 상기 키 변경 이력 정보에 상기 제1 서명 정보가 포함되면 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 2에 있어서,공개특허 10-2017-0046409-3-상기 프로세서는 상기 제1 서명 정보와 상기 제2 서명 정보가 일치하지 않는 경우, 상기 제2 어플리케이션의 상기 토큰에 기초하여 상기 제1 어플리케이션을 삭제하고 상기 제2 어플리케이션을 설치하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,상기 프로세서는 상기 제1 어플리케이션과 상기 제2 어플리케이션이 동일한 리소스를 포함하면, 상기 제1 어플리케이션의 상기 제1 서명 정보를 상기 제2 서명 정보로 대체하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서,상기 제1 식별자는 상기 제1 어플리케이션의 지정된 파일에서 정의된 어플리케이션 이름(application name)에해당하는 것을 특징으로 하는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 2에 있어서,상기 토큰은 인증 값(verification value)을 포함하고,상기 프로세서는 상기 제1 서명 정보를 이용하여 상기 인증 값이 획득되면, 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하도록 설정된, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 2에 있어서,상기 토큰은 복수의 인증 값을 포함하고,상기 프로세서는 상기 제1 서명 정보를 이용하여 상기 복수의 인증 값 중 어느 하나의 인증 값이 획득되면, 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하도록 설정된, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 2에 있어서,상기 토큰은 해시 값(hash value)을 포함하고,상기 프로세서는 상기 해시 값을 이용하여 상기 토큰의 무결성을 판단하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 2에 있어서,상기 토큰은 권한 정보(permission information)를 포함하고,상기 프로세서는 상기 권한 정보에 기초하여 상기 제2 어플리케이션에 허가된 권한을 설정하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 2에 있어서,상기 토큰은 상기 식별 정보로서 어플리케이션 패키지 이름(application package name)을 포함하고,상기 프로세서는 상기 제1 어플리케이션과 상기 제2 어플리케이션의 패키지 이름이 서로 동일하면, 상기 제1 어플리케이션의 어플리케이션 이름을 상기 제2 어플리케이션의 어플리케이션 이름으로 변경하도록 설정되는, 전자장치.공개특허 10-2017-0046409-4-청구항 14"}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 14에 있어서,상기 프로세서는 상기 제1 서명 정보와 상기 제2 서명 정보의 일치 여부에 대한 정보를 상기 외부 장치 또는 원격의 서버로 전송하도록 설정되는, 전자 장치."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "전자 장치의 어플리케이션 관리 방법에 있어서,제1 서명 정보로 서명된 제1 어플리케이션을 메모리에 설치하는 동작,제2 어플리케이션 설치 요청에 반응하여, 상기 제1 어플리케이션에 대응하는 제1 식별자와 상기 제2 어플리케이션에 대응하는 제2 식별자를 비교하는 동작,상기 제1 식별자와 상기 제2 식별자가 일치하는 경우, 상기 제1 어플리케이션에 대응하는 제1 서명 정보와 상기제2 어플리케이션에 대응하는 제2 서명 정보를 비교하는 동작,상기 제1 서명 정보와 상기 제2 서명 정보가 일치하지 않는 경우, 상기 제1 서명 정보와 상기 제2 어플리케이션에 대응하는 추가 서명 정보를 비교하는 동작, 및상기 제1 서명 정보와 상기 추가 서명 정보가 일치하는 경우, 상기 제1 어플리케이션의 적어도 일부를 상기 제2어플리케이션의 적어도 일부를 이용하여 대체하는 동작을 포함하는, 방법."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 16에 있어서,상기 제2 어플리케이션에 대응하는 토큰에 적어도 기반하여, 상기 추가 서명 정보를 획득하는 동작을 더 포함하는, 방법."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 16에 있어서,상기 제1 서명 정보와 상기 제2 서명 정보가 일치하면, 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체하는 동작을 더 포함하는, 방법."}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 17에 있어서,상기 토큰에 포함된 권한 정보를 이용하여 상기 제2 어플리케이션의 권한을 설정하는 동작을 더 포함하는,방법,"}
{"patent_id": "10-2015-0146706", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨터 판독 가능한 명령어들을 포함하는 저장 매체에 있어서, 상기 명령어는 전자 장치에 의해 실행될 때 상기전자 장치로 하여금,제1 서명 정보로 서명된 제1 어플리케이션을 메모리에 설치하는 동작,제2 어플리케이션 설치 요청에 반응하여, 상기 제1 어플리케이션에 대응하는 제1 식별자와 상기 제2 어플리케이공개특허 10-2017-0046409-5-션에 대응하는 제2 식별자를 비교하는 동작,상기 제1 식별자와 상기 제2 식별자가 일치하는 경우, 상기 제1 어플리케이션에 대응하는 제1 서명 정보와 상기제2 어플리케이션에 대응하는 제2 서명 정보를 비교하는 동작,상기 제1 서명 정보와 상기 제2 서명 정보가 일치하지 않는 경우, 상기 제1 서명 정보와 상기 제2 어플리케이션에 대응하는 추가 서명 정보를 비교하는 동작, 및상기 제1 서명 정보와 상기 추가 서명 정보가 일치하는 경우, 상기 제1 어플리케이션의 적어도 일부를 상기 제2어플리케이션의 적어도 일부를 이용하여 대체하는 동작을 수행하도록 하는, 저장 매체."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 상기 전자 장치는 제1 어플리케이션을 저장하기 위한 메모리, 및 프로세서를 포함할 수 있다. 상기 프로세서는 제2 어플리케이션을 설치하기 위한 요청을 획득하고, 상기 요청에 반응하여 상기 제1 어 플리케이션에 대응하는 제1 식별자와 상기 제2 어플리케이션에 대응하는 제2 식별자를 비교하고, 상기 제1 식별 자와 상기 제2 식별자가 일치하는 경우 상기 제1 어플리케이션에 대응하는 제1 서명 정보와 상기 제2 어플리케이 션에 대응하는 제2 서명 정보를 비교하고, 상기 제1 서명 정보와 상기 제2 서명 정보가 일치하지 않는 경우 상기 제1 서명 정보와 상기 제2 어플리케이션에 대응하는 추가 서명 정보를 비교하고, 상기 제1 서명 정보와 상기 추 가 서명 정보가 일치하는 경우 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체할 수 있다. 이 외에도 명세서를 통해 파악되는 다양한 실시 예가 가능하다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에서 개시되는 실시 예들은, 전자 장치에 어플리케이션을 설치 또는 업데이트하는 기술과 관련된다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "스마트폰이나 태블릿과 같은 전자 장치는 다양한 기능이나 서비스를 제공하는 어플리케이션을 포함할 수 있다. 어플리케이션은 전자 장치에 선탑재(pre-load) 형태로 포함될 수도 있고, 어플리케이션 마켓(예: Google Play Store, App Store 등)을 통해 전자 장치에 다운로드 될 수도 있다. 이러한 어플리케이션은 어플리케이션의 악의의 사용자에 의해 변조되거나 다른 어플리케이션으로 대체되는 것을 방지하기 위해 개발자 서명을 포함할 수 있다. 예를 들어, 전자 장치에 설치되는 어플리케이션은 어플리케이션 개발자의 키(예: developer key)로 서명될 수 있다. 전자 장치는 이미 설치된 어플리케이션과 동일한 어플리케 이션이 설치 또는 업데이트 되려고 할 때, 이전 어플리케이션의 서명 정보와 새로운 어플리케이션의 서명 정보 를 비교하고, 서명 정보가 일치하는 경우에만 새로운 어플리케이션의 설치를 허용함으로써, 어플리케이션의 무 결성이나 전자 장치의 보안을 확보할 수 있다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "그러나 어플리케이션의 개발자 키(서명 정보)가 유출되는 경우, 악의의 사용자가 악성 코드를 심은 어플리케이 션을 유출된 서명 정보를 이용하여 서명한 후 배포할 수 있다. 전자 장치에 이와 같은 악성 어플리케이션이 설 치되면 보안에 심각한 문제가 발생할 수 있다. 이 외에도, 어플리케이션의 개발자가 개발자 키를 분실(망각)한 경우, 업데이트된 어플리케이션을 배포하는데 문제가 발생할 수 있다. 위와 같은 문제 상황이 발생한 경우, 기존의 방식에 따르면 새로운 키로 서명된 새로운 이름의 어플리케이션을 배포한 후에, 사용자에게 새로운 어플리케이션을 설치한 후, 기존의 어플리케이션을 일일이 삭제할 것을 요청하 여야 한다. 그러나 이 방식은 매우 번거롭고, 전자 장치의 보안 상태를 보장할 수 없으며, 일부 어플리케이션 (예: 선탑재 어플리케이션)은 삭제가 불가능하다. 본 문서에서 개시되는 실시 예들은, 전술한 문제 및 본 문서에서 제기되는 과제들을 해결하기 위해, 전자 장치 에서 어플리케이션의 서명을 변경하는 기술을 제공할 수 있다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 문서에 개시되는 일 실시 예에 따른 전자 장치는, 제1 어플리케이션을 저장하기 위한 메모리, 및 프로세서를 포함할 수 있다. 상기 프로세서는 제2 어플리케이션을 설치하기 위한 요청을 획득하고, 상기 요청에 반응하여 상기 제1 어플리케이션에 대응하는 제1 식별자와 상기 제2 어플리케이션에 대응하는 제2 식별자를 비교하고, 상 기 제1 식별자와 상기 제2 식별자가 일치하는 경우 상기 제1 어플리케이션에 대응하는 제1 서명 정보와 상기 제 2 어플리케이션에 대응하는 제2 서명 정보를 비교하고, 상기 제1 서명 정보와 상기 제2 서명 정보가 일치하지 않는 경우 상기 제1 서명 정보와 상기 제2 어플리케이션에 대응하는 추가 서명 정보를 비교하고, 상기 제1 서명 정보와 상기 추가 서명 정보가 일치하는 경우 상기 제1 어플리케이션의 적어도 일부를 상기 제2 어플리케이션의 적어도 일부를 이용하여 대체할 수 있다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 문서에 개시되는 실시 예들에 따르면, 어플리케이션의 서명 키가 유출되어 서명 키의 변경이 필요한 경우에, 사용자의 불편을 최소화 하면서 어플리케이션의 서명 키를 변경할 수 있다. 또한, 서명 키의 변경과 함께 어플리케이션의 이름이나 권한 설정에 대한 변경도 함께 제공될 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2015-0146706", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 다양한 실시 예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 발명을 특정한 실시 형 태에 대해 한정하려는 것이 아니며, 본 발명의 실시 예의 다양한 변경(modification), 균등물(equivalent), 및/ 또는 대체물(alternative)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대 해서는 유사한 참조 부호가 사용될 수 있다. 본 문서에서, \"가진다\", \"가질 수 있다\", \"포함한다\", 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 문서에서, \"A 또는 B\", \"A 또는/및 B 중 적어도 하나\", 또는 \"A 또는/및 B 중 하나 또는 그 이상\" 등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B\", \"A 및 B 중 적어도 하나\", 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 문서에서 사용된 \"제1\", \"제2\", \"첫째\", 또는 \"둘째\" 등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 예를 들면, 제1 사용자 기기와 제2 사용자 기기는, 순서 또는 중요도와 무관하게, 서로 다른 사용자 기기를 나타낼 수 있다. 예를 들면, 본 문서에 기재된 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 바꾸어 명명될 수 있다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성 요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요 소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 문서에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for)\", \"~하는 능력을 가지는(having the capacity to)\", \"~하도록 설계된(designed to)\", \"~하도 록 변경된(adapted to)\", \"~하도록 만들어진(made to)\", 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성(또는 설정)된\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\"것만 을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성(또는 설정)된 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메모리 장 치에 저장된 하나 이상의 소프트웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서 (generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 본 문서에서 사용된 용어들은 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 다른 실시 예의 범위를 한 정하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 문서에 사용된 용어 들 중 일반적인 사전에 정의된 용어들은 관련 기술의 문맥 상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시 예들을 배제하도록 해석될 수 없다. 본 문서의 다양한 실시 예들에 따른 전자 장치는, 예를 들면, 스마트폰(smartphone), 태블릿 PC(tablet personal computer), 이동 전화기(mobile phone), 영상 전화기, 전자책 리더기(e-book reader), 데스크탑 PC (desktop PC), 랩탑 PC(laptop PC), 넷북 컴퓨터(netbook computer), 워크스테이션(workstation), 서버, PDA(personal digital assistant), PMP(portable multimedia player), MP3 플레이어, 모바일 의료기기, 카메라, 또는 웨어러블 장치(wearable device) 중 적어도 하나를 포함할 수 있다. 다양한 실시 예에 따르면 웨 어러블 장치는 엑세서리 형(예: 시계, 반지, 팔찌, 발찌, 목걸이, 안경, 콘택트 렌즈, 또는 머리 착용형 장치 (head-mounted-device(HMD)), 직물 또는 의류 일체 형(예: 전자 의복), 신체 부착 형(예: 스킨 패드(skin pad) 또는 문신), 또는 생체 이식 형(예: implantable circuit) 중 적어도 하나를 포함할 수 있다. 어떤 실시 예들에서, 전자 장치는 가전 제품(home appliance)일 수 있다. 가전 제품은, 예를 들면, 텔레비전, DVD 플레이어(Digital Video Disk player), 오디오, 냉장고, 에어컨, 청소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), 홈 오토매이션 컨트롤 패널(home automation control panel), 보안 컨트롤 패널(security control panel), TV 박스(예: 삼성 HomeSync™, 애플TV™, 또는 구글 TV™), 게임 콘솔(예: Xbox™, PlayStation™), 전자 사전, 전자 키, 캠코더, 또는 전자 액자 중 적어도 하나를 포함할 수 있다. 다른 실시 예에서, 전자 장치는, 각종 의료기기(예: 각종 휴대용 의료측정기기(혈당 측정기, 심박 측정기, 혈압 측정기, 또는 체온 측정기 등), MRA(magnetic resonance angiography), MRI(magnetic resonance imaging), CT(computed tomography), 촬영기, 또는 초음파기 등), 네비게이션(navigation) 장치, 위성 항법 시스템 (GNSS(Global Navigation Satellite System)), EDR(event data recorder), FDR(flight data recorder), 자동 차 인포테인먼트(infotainment) 장치, 선박용 전자 장비(예: 선박용 항법 장치, 자이로 콤파스 등), 항공 전자 기기(avionics), 보안 기기, 차량용 헤드 유닛(head unit), 산업용 또는 가정용 로봇, 금융 기관의 ATM(automatic teller's machine), 상점의 POS(point of sales), 또는 사물 인터넷 장치(internet of things) (예: 전구, 각종 센서, 전기 또는 가스 미터기, 스프링클러 장치, 화재경보기, 온도조절기(thermostat), 가로등, 토스터(toaster), 운동기구, 온수탱크, 히터, 보일러 등) 중 적어도 하나를 포함할 수 있다. 어떤 실시 예에 따르면, 전자 장치는 가구(furniture) 또는 건물/구조물의 일부, 전자 보드(electronic board), 전자 사인 수신 장치(electronic signature receiving device), 프로젝터(projector), 또는 각종 계측 기기(예: 수도, 전기, 가스, 또는 전파 계측 기기 등) 중 적어도 하나를 포함할 수 있다. 다양한 실시 예에서, 전자 장치는 전술한 다양한 장치들 중 하나 또는 그 이상의 조합일 수 있다. 어떤 실시 예에 따른 전자 장치는 플렉서블 전자 장치일 수 있다. 또한, 본 문서의 실시 예에 따른 전자 장치는 전술한 기기들에 한정되지 않으며, 기술 발전에 따른 새로운 전자 장치를 포함할 수 있다. 이하, 첨부 도면을 참조하여, 다양한 실시 예에 따른 전자 장치가 설명된다. 본 문서에서, 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치 (예: 인공지능 전자 장치)를 지칭할 수 있다. 도 1은 일 실시 예에 따른 전자 장치 및 전자 장치와 통신 가능한 외부 장치를 나타낸다. 일 실시 예에 따르면, 전자 장치 100은 프로세서 110, 메모리 120, 및 통신 모듈 130을 포함할 수 있다. 전자 장치 100은 통신 모듈 130을 통해 전자 장치 100과 연결된 외부 장치 150으로부터 어플리케이션을 다운로드 할 수 있다. 예를 들어, 전자 장치 100의 메모리 130에는 제1 어플리케이션 121이 설치되어 있고, 전자 장치 100은 제2 어플리케이션 122를 외부 장치 150으로부터 다운로드 하여 메모리 130에 저장 및 설치를 진행할 수 있다. 일 실시 예에 따르면, 외부 장치 150은 전자 장치 100과 무선 네트워크를 통해 연결 가능한, 어플리케이션을 배 포하는 서버일 수 있다. 예를 들어, 외부 장치 150은 전자 장치 100에서 이용 가능한 어플리케이션을 배포하는어플리케이션 마켓 서버(예: Google Play Store, App Store 등)에 해당할 수 있다. 일 실시 예에 따르면, 외부 장치 150은 전자 장치 100과 유선 또는 무선 네트워크를 통해 연결 가능한 사용자 장치(user device)일 수 있다. 예를 들어, 상기 사용자 장치는 데스크탑 또는 노트PC에 해당할 수 있다. 사용자 장치는 전술한 어플리케이션 배포 서버와 유선 또는 무선 네트워크를 통해 연결되고, 상기 서버로부터 어플리케 이션을 획득할 수 있다. 전자 장치 100이 상기 사용자 장치와 연결되면, 전자 장치 100은 사용자 장치가 획득한 어플리케이션을 획득할 수 있다. 일 실시 예에 따르면, 메모리 130에 저장된 제1 어플리케이션 121은 전자 장치 100에 미리 설치되어 있을 수 있 다. 또는, 전자 장치 100은 제1 어플리케이션 121을 메모리 130에 설치할 수 있다. 제2 어플리케이션 122는 설 치를 위해 다운로드한 새로운 어플리케이션에 해당할 수 있다. 전자 장치 100은 외부 장치 150에 연결되면, 전 자 장치 100에 저장된 어플리케이션의 목록 및 각 어플리케이션의 버전 정보와, 외부 장치 150에 등록된(또는 저장된) 대응되는 어플리케이션의 버전 정보를 비교할 수 있다. 비교 결과, 같은 식별 정보(예: 예: Facebook, Chrome, Google Maps와 같은 어플리케이션(패키지)의 이름)를 갖는 어플리케이션에 대하여, 외부 장치 150에 최 신 버전의 어플리케이션이 존재하는 경우, 전자 장치 100은 외부 장치 150으로부터 최신 버전의 어플리케이션을 다운로드 할 수 있다. 본 문서에 개시되는 실시 예에서, 제1 어플리케이션 121은 전자 장치 100에 미리 설치되 어 있는 구 버전의 어플리케이션으로, 제2 어플리케이션 121은 제1 어플리케이션과 동일한 식별 정보를 가지면 서 제1 어플리케이션보다 최신 버전의 어플리케이션으로 이해될 수 있다. 일 실시 예에 따르면, 제1 어플리케이션 121은 제1 서명 키(a first signature key), 또는 단순히 제1 키로 서 명될 수 있다. 예를 들어, 제1 어플리케이션의 개발자는 개인 키로 제1 어플리케이션 121을 암호화될 수 있다. 전자 장치는 개발자의 개인 키에 대응되는 공개 키를 이용하여 제1 어플리케이션을 복호화 할 수 있다. 여기서, 개인 키에 대응되는 공개 키는 제1 키에 해당할 수 있다. 제1 키에 대한 정보는 제1 어플리케이션 121의 설치 패키지에 특정 파일(예: 안드로이드 운영 체제의 어플리케이션 패키지의 경우, CERT.RSA 파일)에 포함될 수 있 다. 제2 어플리케이션 122는 제2 서명 키(a second signature key), 또는 단순히 제2 키로 서명될 수 있다. 프로세 서 110은 제2 어플리케이션 122에 포함된 제2 키에 대한 정보(파일)와 제1 키에 대한 정보(파일)을 비교하여, 제1 키와 제2 키가 일치하는 경우, 제1 어플리케이션 121을 제2 어플리케이션 122로 대체할 수 있다. 예를 들어, 프로세서 110은 제1 어플리케이션 121을 삭제하고 제2 어플리케이션 122를 설치하거나, 제1 어플리케이션 121의 일부 파일을 제2 어플리케이션 122를 이용하여 패치(patch)하거나, 제1 어플리케이션 121에 제2 어플리케 이션 122의 데이터를 추가할 수 있다. 다시 말해서, 프로세서 110은 제1 어플리케이션 121의 적어도 일부를 제2 어플리케이션 122의 적어도 일부를 이용하여 대체할 수 있다. 예를 들어, 프로세서 110은 도 3에 도시된 어플리 케이션 패키지의 구성(파일 및/또는 폴더) 중 일부 또는 전부를 새로운 어플리케이션(제2 어플리케이션 122)의 것으로 대체할 수 있다. 이하에서는 단순히 제1 키 또는 제2 키로 지칭하지만, 본 문서에서 키(key)라 함은 어 플리케이션의 개발자를 인증하기 위한 다양한 종류의 서명 정보를 의미할 수 있다. 일 실시 예에 따르면, 제1 어플리케이션 121의 제1 키와 제2 어플리케이션 122의 제2 키가 서로 일치하지 않는 경우, 프로세서 110은 제2 어플리케이션 122에 포함된 토큰 정보를 이용하여 제1 어플리케이션 121을 제2 어플 리케이션 122로 대체할 수 있다. 예를 들어, 토큰 정보를 이용하여 제1 키가 인증 가능하면, 프로세서 110은 제 2 어플리케이션 122가 제1 어플리케이션의 업데이트 버전이라고 판단하고, 제1 어플리케이션 121을 제2 어플리 케이션 122로 업데이트 할 수 있다. 이와 관련된, 프로세서 110으로 구현 가능한 예시적인 모듈의 구조를 도 2 를 참조하여 설명한다. 또한, 본 문서에서 토큰 또는 토큰 정보라 함은, 새로운 어플리케이션의 설치 패키지에 포함되어, 기존의 어플 리케이션을 식별 또는 인증하고자 하는 모든 종류의 데이터를 의미한다. 본 문서에 개시된 내용 외에, 토큰이라 는 표현이 가지는 일반적이거나 사전적인 의미는 본 문서의 토큰 또는 토큰 정보의 의미를 제한하는 것으로 해 석되지 아니한다. 또한, 토큰은 서명 정보(예: 제1 키, 제2 키 등)가 일치하지 않는 경우에도 어플리케이션의 동일성을 판단하기 위한 추가 서명 정보를 포함하는 것으로 해당할 수 있다. 예를 들어, 제1 어플리케이션의 제 1 서명 정보(예: 제1 키)와 제2 어플리케이션의 제2 서명 정보(예: 제2 키)가 일치하지 않는 경우, 프로세서 110은 제2 어플리케이션의 토큰으로부터 추가 서명 정보를 획득하고, 제1 서명 정보와 상기 추가 서명 정보가 일치하는지 여부를 판단하고, 판단 결과에 따라 어플리케이션의 대체 작업을 수행할 수 있다. 도 1과 관련하여, 다양한 구성 요소가 추가 또는 변형될 수 있다. 예를 들어, 도 6 및 도 7에 도시된 다양한 모 듈, 인터페이스, 센서 등이 도 1의 구성 요소에 추가되거나, 또는 도 1의 구성 요소를 대체할 수 있다. 도 1 및다른 실시 예와 관련하여 설명한 내용이 도 6, 도 7, 또는 도 8에 적용될 수 있고, 마찬가지로 도 6, 도 7, 및 도 8과 관련하여 설명된 내용도 도 1 내지 도 5의 설명에 적용될 수 있다. 도 2는 일 실시 예에 따른 전자 장치의 토큰 관리를 위한 프로그램 모듈을 나타낸다. 일 실시 예에 따르면, 프로그램 모듈 200은 어플리케이션(applications) 210, 어플리케이션 프레임워크 (application framework) 220, 라이브러리(libraries) 230, 및 리눅스 커널(Linux kernel) 240의 레이어 (layers)를 포함할 수 있다. 도 2에 도시된 프로그램 모듈 200은 안드로이드(Android) 운영 체제에 따른 프로그 램 모듈의 개념적인 구조에 해당할 수 있다. 도 2에 도시된 실시 예는, 안드로이드 운영 체제를 이용한 실시 예 를 설명하기 위한 것이며, 본 발명의 범위를 안드로이드 운영 체제로 한정하는 것은 아니다. 도 2의 프로그램 모듈 200과 관련된 동작은 프로세서 110에 의해 수행되는 것으로 이해될 수 있으며, 도 2 또는 본 문서의 다른 도면과 관련하여 설명되는 실시 예들은, 다른 운영체제(예: Tizen, iOS, Windows 등)에서 적용 가능한 형태로 변형될 수 있다. 또한, 도 2와 관련하여, 안드로이드 운영 체제의 구조에 대한 일반적인 설명은 잘 알려져 있으 므로, 본 문서에서는 생략한다. 일 실시 예에 따른 패키지 매니저 222(예: 도 8의 패키지 매니저 847) 및 토큰 모듈 224는 어플리케이션 프레임 워크 220에 구현될 수 있다. 패키지 매니저 222는 어플리케이션 패키지(application package), 또는 단순히 어 플리케이션의 설치를 관리할 수 있다. 예를 들어, 패키지 매니저 222는 설치되어 있는 어플리케이션 패키지의 이름을 확인할 수 있다. 또한, 패키지 매니저 222는 설치하려고 하는 어플리케이션과 동일한 패키지 이름을 갖 는 어플리케이션이 있는지 여부를 확인할 수 있다. 여기서 패키지 이름은 전술한 어플리케이션의 식별 정보에 해당할 수 있다. 토큰 모듈 224는, 토큰 관리 모듈(token management module)로 이해될 수도 있다. 토큰 모듈 224는 프레임워크 레이어에서 패키지 매니저 220과 통신(communication)을 통해 토큰의 인증 및 토큰과 연관된 기능의 제어를 수 행할 수 있다. 일 실시 예에 따르면, 토큰 모듈 224는, 토큰 확인부(token verification unit) 252, 서명 확인부(signature verification unit) 254, 및 설치 허여부(installation approval unit) 256을 포함할 수 있다. 토큰 확인부 252는 제2 어플리케이션 122가 토큰을 포함하고 있는지 여부를 확인할 수 있다. 일 실시 예에서, 토큰은 일련의 문서로서, 파일의 형태로 제2 어플리케이션 122에 포함될 수 있다. 토큰 확인부 252는 어플리케 이션의 설치 파일(패키지) 내의 지정된 위치에 토큰이 위치하고 있는 지 판단할 수 있다. 또한, 토큰 확인부 252는 제2 어플리케이션 122에 포함된 토큰이 유효한 토큰인지 여부를 판단할 수 있다. 이와 관련하여, 예시적 인 어플리케이션 패키지의 구조 및 토큰 정보가 도 3을 참조하여 설명된다. 서명 확인부 254는 토큰에 포함된 식별 값(verification value)을 이용하여 기존 어플리케이션(예: 제1 어플리 케이션 121)의 개발자(소유자)를 인증할 수 있다. 예를 들어, 서명 확인부 254는 제2 어플리케이션 122의 토큰 에 포함된 식별 값에 기초하여 제1 서명 키를 인증하고, 이 인증에 성공하면 제1 어플리케이션 121과 제2 어플 리케이션 122가 동일한 개발자에 의해서 생성된 것을 확인할 수 있다. 예를 들어, 제1 어플리케이션 121로부터 산출되는 값과 제2 어플리케이션의 토큰에 포함된 식별 값이 대응(예: 동일)되는 경우, 서명 확인부 254는, 제1 서명 키와 제2 서명 키가 다름에도 불구하고, 제2 어플리케이션 122는 제1 서명 키의 소유자와 동일한 소유자에 의해 생성된 것으로 판단할 수 있다. 서명 확인부 254에서 제2 어플리케이션 122의 제2 서명 키의 소유자가 제1 서명 키의 소유자와 동일한 것으로 확인되면, 즉 토큰을 이용한 제1 서명 키의 인증이 성공하면, 설치 허여부 256은 제2 서명 키를 갖는 제2 어플 리케이션 122의 설치를 승인할 수 있다. 프로세서 110은, 제1 어플리케이션 121을 삭제한 후 제2 어플리케이션 122를 설치하거나, 제1 어플리케이션 121을 제2 어플리케이션 122로 업데이트 할 수 있다. 어느 경우에 의하더 라도, 제1 어플리케이션 121의 식별 정보에 대응되는 어플리케이션의 서명 키는 제1 서명 키에서 제2 서명 키로 변경될 수 있다. 도 3은 일 실시 예에 따른 토큰을 포함한 어플리케이션 패키지의 구조를 나타낸다. 도 3은 안드로이드 운영 체 제에서 예시적인 어플리케이션 패키지의 구조에 해당할 수 있다. 그러나 운영 체제의 종류나 버전에 따라서, 어 플리케이션 패키지의 구조는 변경될 수 있다. 예를 들어, 어플리케이션 패키지 300에서는 토큰 파일 338이 META-INF 폴더 330 내에 위치하지만, 다른 실시 예에 따른 어플리케이션 패키지에서는 다른 폴더에 위치하거나, 다른 파일의 정보에 포함될 수 있다. 어플리케이션의 설치 및 권한 설정을 위한 데이터(예: asset 폴더 310, res 폴더 340, AndroidMenifest.xml 파일 360 등), 어플리케이션의 인증을 위한 서명 키(또는 서명 정보)(예:CERT.RSA 파일 334, 및 CERT.SF 파일 336), 및 서명 키가 일치하지 않을 때를 위한 토큰 정보(예: 토큰 파일 338)를 포함하는 어플리케이션의 설치 패키지는 본 문서에 개시되는 일 실시 예에 따른 어플리케이션 패키지 300의 예시로 이해될 수 있다. Assets 폴더 310은, 예를 들어 AssetManager를 통해 검색할 수 있는 어플리케이션의 정보가 포함될 수 있다. Lib 폴더 320은, 프로세스와 연계된 소프트웨어 레이어에 대한 정보를 포함할 수 있다. 예를 들어, ARM 기반 프 로세서 전용으로 컴파일(compile)된 코드나, x86 기반 프로세서 전용으로 컴파일된 코드 등이 lib 폴더 320에 포함될 수 있다. META-INF 폴더 330은, MENIFEST.MF 파일 332, CERT.RSA 파일 334, CERT.SF 파일 336, 및 토큰 파일 338을 포함 할 수 있다. 일 실시 예에서, 토큰 파일 338은 토큰 확인부 252에서 확인 가능한 경로에 포함될 수도 있다. 예 를 들어, 토큰 파일 388은 하위 폴더(META-INF 330)가 아닌 assets 310, lib 320, res 340과 같이 apk의 루트 영역에 직접 위치할 수도 있다. CERT.RSA 파일 334는 어플리케이션 패키지 300에 대한 서명 정보를 포함할 수 있다. 예를 들어, CERT.RSA 파일 334는 서명 키에 대응될 수 있다. 프로세서 110은 제2 어플리케이션 122를 설치할 때, 제2 어플리케이션 122의 CERT.RSA 파일과 제1 어플리케이션의 CERT.RSA 파일을 비교하고, 일치하는 경우, 제1 어플리케이션 121을 제2 어플리케이션 122로 대체하고, 일치하지 않는 경우, 토큰 파일 338에 기초하여 상기 대체 여부를 판단할 수 있 다. CERT.SF 파일은 메니페스트 파일을 포함한 리소스에 대응하는 해시(hash) 값을 포함할 수 있다. 예를 들어, SHA-1 또는 SHA256 알고리즘을 통해, MANIFEST.MF 파일 332 및 res 폴더 340에 포함된 파일들에 대한 해시 값 을 포함할 수 있다. 토큰 파일 338은 어플리케이션 패지키 300의 패키지 이름(예: APP_A)과 어플리케이션 패키지 300의 서명 키에 대응하는 정보를 포함할 수 있다. 예를 들어, 서명 키에 대응하는 정보는 해시 값(HASH_VALUE)와 같이, 암호화 된 정보로 제공될 수 있다. 이 외에, 토큰 파일 338은 어플리케이션 패키지 300에서 요청하는 권한에 대한 정보 (예: Permission_a, Permission_b)를 포함할 수 있다. 일 실시 예에 따르면, 토큰 파일 338은 해시 값 및 인증 값(verification value)을 포함할 수 있다. 해시 값은 암호화된 특정 컨텐츠에 기초하여 획득될 수 있다. 특정 컨텐츠는, RSA 알고리즘, 예를 들어 전자 장치 100의 제조사 또는 어플리케이션 배포 서버에서 관리하는 개인 키로 암호화될 수 있다. 또한, 암호화된 컨텐츠에 대하 여 SHA(예: SHA256)과 같은 알고리즘을 이용하여 해시 값이 획득될 수 있다. 해시 알고리즘의 특성 상, 상기 컨 텐츠의 내용이 변경되면 해시 값 자체가 변경되기 때문에, 이 해시 값에 의해 토큰의 무결성이 보장될 수 있다. 또한 토큰 파일 338은 기존 어플리케이션(예: 제1 어플리케이션 121)의 서명 키(예: 제1 키)와 연관된 인증 값 을 포함할 수 있다. 예를 들어, 어플리케이션 패키지를 서명할 때, 제조사 또는 배포 서버의 개인 키로 암호화 하면 대응되는 공개 키로 복호화가 가능하다. 상기 공개 키는 상기 인증 값에 대응될 수 있다. 토큰 파일 338이 기존의 어플리케이션 패키지(예: 제1 어플리케이션 121)의 서명 정보와 연관된 공개 키를 포함하면, 서명 확인 부 254는 토큰 파일 338로부터 기존 어플리케이션 패키지를 인증할 수 있다. 일 실시 예에 따르면, 전술한 정보 외에 추가적인 정보가 토큰 파일 338에 포함될 수 있다. 예를 들어, 토큰 파 일 338은 어플리케이션 패키지 300이 요구하는 권한 정보를 포함할 수 있다. 권한 정보는, 예를 들어 어플리케 이션 패키지 300이 요구하는 권한의 종류(예: 주소록 접근 권한, 위치 정보 사용 권한, 데이터 쓰기 권한, 갤러 리 접근 권한 등), 유효 기간에 대한 정보 등을 포함할 수 있다. 만약 제1 어플리케이션 121과 제2 어플리케이 션 122의 서명 키가 서로 달라서, 제2 어플리케이션의 토큰 정보에 기초하여 제1 어플리케이션 121이 제2 어플 리케이션 122로 대체되는 경우, 프로세서 110은 상기 토큰 정보에 포함된 권한 정보에 기초하여 제2 어플리케이 션에 허가된 권한을 설정할 수 있다. 일 실시 예에 따르면, 토큰 파일 338은 키 변경이 2번 이상 일어난 경우에도 이전 버전의 어플리케이션에서 사 용된 키 값들을 전부 인증하기 위한 서명 키의 변경 이력(history) 정보(예: 키 체인(key chain) 정보, 또는 날 짜나 버전 정보를 포함하는 키 변경 이력 정보 등)를 포함할 수 있다. 예를 들어, 전자 장치 100은 토큰 정보에 포함된 키 체인 정보를 이용하여 제1 서명 키가 인증 가능하거나, 키 변경 이력 정보에 제1 서명 키에 대한 정 보가 포함되어 있으면 기존에 설치되어 있는 어플리케이션을 새로운 어플리케이션으로 대체할 수 있다. 예를 들어, 제1 서명 키를 갖는 제1 어플리케이션 121이 제2 서명 키를 갖는 제2 어플리케이션 122로 대체된 상 태에서, 다시 제2 어플리케이션 122가 제3 서명 키를 갖는 제3 어플리케이션으로 대체될 수 있다. 일 실시 예에따르면 제3 어플리케이션이 제2 서명 키와 연관된 토큰 정보를 포함하는 경우, 제2 어플리케이션 122와 제3 어 플리케이션의 서명 키가 일치하지 않더라도 제2 어플리케이션 122는 제3 어플리케이션으로 대체될 수 있다. 그 러나 제3 어플리케이션이 제1 서명 키와 연관된 토큰 정보를 포함하지 않는 경우에, 제1 어플리케이션 121은 제 3 어플리케이션으로 대체되지 않는다. 따라서, 일 실시 예에 따르면, 사용자가 제1 어플리케이션 121을 삭제하 거나 제2 어플리케이션 122를 구해서 업데이트를 수행한 후에 제3 어플리케이션을 다시 설치해야 하는 불편함을 감소시키기 위해서, 토큰 파일 338은 서명 키의 변경 이력을 포함할 수 있다. 예를 들어, 토큰 파일 338은 어플 리케이션 패키지의 이름, 어플리케이션의 버전 및 버전에 대응되는 인증 값을 포함할 수 있다. 예를 들어, 토큰 파일 338은 제1 어플리케이션 121의 버전 및 제1 서명 키에 대응되는 인증 값, 및 제2 어플리케이션 122의 버전 및 제2 서명 키에 대응되는 인증 값을 포함할 수 있다. 서명 확인부 254는 전자 장치 100에 설치된 어플리케이 션이 제1 어플리케이션 121인 경우 제1 어플리케이션 121의 버전에 대응되는 인증 값으로부터 제1 서명 키를 인 증하고, 설치된 어플리케이션이 제2 어플리케이션 122인 경우, 제2 어플리케이션 122의 버전에 대응되는 인증 값으로부터 제2 서명 키를 인증할 수 있다. 그러나 다른 실시 예에서, 서명 확인부 254는 보유한 인증 값들과 설치된 어플리케이션의 서명 키를 각각 비교하고, 프로세서 110은 인증이 가능한 서명 키가 있으면 어플리케이 션의 대체를 진행할 수 있다. 다시 도 3을 참조하면, 어플리케이션 패키지 300은 res 폴더 350을 포함할 수 있다. res 폴더 350은 이진 XML과 같은 선 컴파일(pre-compiled) 리소스를 포함하는 파일인 resources.arcs를 제외한 다른 리소스 파일을 포함하 는 디렉토리일 수 있다. AndroidManifest.xml 파일 360은 어플리케이션의 이름, 버전, 액세스 권한, 라이브러리 파일 정보 등을 포함할 수 있다. AndroidManifest.xml 파일 360은 MANIFEST.MF 파일 332에대하여 추가적인 매니페스트 파일로 이해될 수 있다. 이 외에, classes.dex 파일 370은 달빅(dalvic) 가상 머신에 의해 선-컴파일된 리소스를 포함할 수 있 다. 이하에서는 도 4 및 도 5를 참조하여, 어플리케이션의 서명 키를 변경하는 방법을 설명한다. 도 4는 일 실시 예에 따른 어플리케이션을 대체하는 프로세스를 나타낸다. 도 4 및 도 5와 관련하여, 전술한 내 용과 중복되거나, 대응 또는 유사한 내용은 그 설명이 생략될 수 있다. 또한, 도 4의 프로세스는 전자 장치 100 에 제1 서명 키로 서명된 제1 어플리케이션 121이 설치된 상태에서, 제1 어플리케이션 121과 동일한 식별 정보 를 갖고 제2 서명 키로 서명된 제2 어플리케이션 122를 설치하는 동작으로 이해될 수 있다. 도 4를 참조하면, 동작 401에서, 프로세서 110은 제1 어플리케이션 121의 제1 서명 키를 확인할 수 있다. 예를 들어, 프로세서 110은 제1 어플리케이션 121에 포함된 서명 정보를 획득할 수 있다. 동작 403에서, 프로세서 110은 설치하고자 하는 제2 어플리케이션 122의 토큰 정보에 기초하여 제1 서명 키를 인증할 수 있다. 예를 들어, 설치된 어플리케이션과 설치하고자 하는 어플리케이션이 같은 식별 정보(예: 패키 지 이름)를 갖지만, 서명 키가 서로 다른 경우, 토큰 확인부 252는 제2 어플리케이션 122에 토큰이 포함되어 있 는지 확인할 수 있다. 제2 어플리케이션 122에 토큰이 포함되어 있는 경우, 서명 확인부 254는 토큰 정보에 기 초하여 제1 서명 키를 인증 시도할 수 있다. 동작 405에서, 전자 장치 100(예: 프로세서 110)은 토큰 정보를 이용한 제1 서명 키의 인증이 성공하였는지 판 단할 수 있다. 예를 들어, 전자 장치 100은 토큰 정보에 제1 서명 키에 대응되는 정보가 포함되어 있는지, 제1 서명 키로부터 토큰 정보에 포함된 특정 인증 값과 동일한 인증 값이 획득될 수 있는지 여부 등을 판단할 수 있 다. 인증 결과, 제1 서명 키의 인증에 성공한 경우, 전자 장치 100은 제1 어플리케이션 121을 제2 어플리케이션 122 로 대체할 수 있다. 예를 들어, 전자 장치 100은 동작 407에서 제1 어플리케이션 121을 삭제하고, 동작 409에서 제2 어플리케이션 122를 설치할 수 있다. 이 과정에서, 전자 장치 100은 제1 어플리케이션 121에 대한 사용자 데이터 및 사용자 설정 정보는 유지할 수 있다. 다른 실시 예에서, 전자 장치 100은 제1 어플리케이션 121의 적 어도 일부 데이터에 대하여 제2 어플리케이션 122를 이용한 업데이트를 수행할 수 있다. 일 실시 예에 따르면, 전자 장치 100은, 토큰을 이용하여 제1 어플리케이션 121을 제2 어플리케이션 122로 대체 하는 경우, 토큰에 포함된 정보를 이용하여 제2 어플리케이션 122를 설정할 수 있다. 예를 들어, 토큰에는 제2 어플리케이션 122에서 요청하는 권한 정보 또는 제2 어플리케이션 122의 새로운 어플리케이션 이름(application name) 등에 대한 정보가 포함될 수 있다. 전자 장치 100은 토큰에 포함된 권한 정보를 이용하여 제2 어플리케이 션의 권한을 설정할 수 있다. 또한 전자 장치 100은 제2 어플리케이션 122의 어플리케이션 이름을 새롭게 변경할 수 있다. 예를 들어, 프로세서 110은 제1 어플리케이션 121과 상기 제2 어플리케이션 122의 패키지 이름이 서로 동일하면, 상기 제1 어플리케이션 121의 어플리케이션 이름을 상기 제2 어플리케이션 122의 어플리케이션 이름으로 변경/대체할 수 있다. 인증 결과, 제1 서명 키의 인증에 실패한 경우, 전자 장치 100은 제2 어플리케이션 122를 설치하지 않고, 제1 어플리케이션 121의 설치 상태를 유지할 수 있다. 도 4의 프로세스에 따르면, 전자 장치 100에 설치된 특정 개발자(예: 전자 장치 100의 제조사, 전자 장치 100이 등록된 통신 사업자 등)에 의한 다수의 어플리케이션의 개발자 키가 유출된 경우, 사용자가 일일이 어플리케이 션을 삭제하고 새로운 어플리케이션을 찾아서 설치해야 하는 불편함을 해소할 수 있다. 예를 들어, 해당 개발자 가 변경된 개발자 키로 동일한 식별 정보의 어플리케이션을 새로 서명해서 배포하면, 전자 장치 100은 일괄 업 데이트를 수행하는 것 만으로 전자 장치 100에 설치된 해당 개발자의 어플리케이션의 서명 키를 일괄적으로 교 체할 수 있다. 또한, 보안 또는 사용자 개인 정보 이슈 등으로 인해 어플리케이션의 권한 설정을 새롭게 해야 하는 경우에도, 토큰에 변경하고자 하는 권한에 대한 정보를 포함시켜서, 어플리케이션의 업데이트와 함께 어플 리케이션의 권한 설정을 변경할 수 있다. 도 5는 일 실시 예에 따른 어플리케이션을 설치하는 프로세스를 나타낸다. 도 5의 프로세스는 전자 장치 100에 제1 서명 키로 서명된 제1 어플리케이션 121이 설치된 상태에서, 새로운 제2 어플리케이션 122가 설치되는 프로 세스에 해당할 수 있다. 도 5를 참조하면, 동작 501에서 전자 장치 100(예: 프로세서 110)은 설치하고자 하는 제2 어플리케이션 122와 동일한 어플리케이션이 존재하는지 여부를 판단할 수 있다. 전자 장치 100(예: 프로세서 110)은 제2 어플리케이 션 122의 어플리케이션 식별 정보(예: 매니페스트 파일에 포함된 어플리케이션 패키지 이름)과 동일한 식별 정 보를 갖는 어플리케이션이 전자 장치 100에 존재하는지 판단할 수 있다. 만약 동일한 어플리케이션이 존재하지 않는 경우, 동작 511에서 전자 장치 100(예: 프로세서 110)은 새로운 제2 어플리케이션 122를 설치할 수 있다. 만약 제1 어플리케이션 121이 제2 어플리케이션 122와 동일한 식별 정보를 갖는 경우, 전자 장치 100(예: 프로 세서 110)은 동작 503에서 제1 어플리케이션 121과 제2 어플리케이션 122가 동일한 식별 정보를 갖는지 여부를 판단할 수 있다. 예를 들어, 전자 장치 100은 제1 서명 키와 제2 서명 키가 동일한지 여부를 판단할 수 있다. 만약 제1 서명 키와 제2 서명 키가 동일한 경우, 전자 장치 100은 동작 509 또는 동작 511로 진행하여 제2 어플 리케이션의 설치 또는 업데이트를 진행할 수 있다. 만약 제1 서명 키와 제2 서명 키가 서로 다른 서명 키를 갖는 경우, 전자 장치 100(예: 프로세서 110)은 동작 505에서 새로 설치하고자 하는 제2 어플리케이션 122에 토큰이 존재하는지 여부를 판단할 수 있다. 만약 제2 어 플리케이션 122이 토큰을 포함하지 않는 경우, 전자 장치 100은 제1 어플리케이션 121의 설치 상태를 유지한 채 로 제2 어플리케이션 122의 설치 프로세스를 종료할 수 있다. 제2 어플리케이션 122에 토큰이 포함된 경우, 동작 507에서 전자 장치 100(예: 프로세서 110)은 토큰을 이용하 여 제1 어플리케이션 121의 제1 서명 키가 인증 가능한지 여부를 판단할 수 있다. 인증 가능한 경우, 전자 장치 100(예: 프로세서 110)동작 509 또는 동작 511에서 제2 어플리케이션 122를 설치하거나, 제1 어플리케이션 121 을 제2 어플리케이션 122로 업데이트 할 수 있다. 만약 인증 불가능한 경우, 전자 장치 100은 제2 어플리케이션 의 설치를 중단할 수 있다. 도 4 내지 도 5에서, 전자 장치 100 또는 프로세서 110에 의해 수행되는 것으로 설명된 동작들은, 적절하게 구 현된 소프트웨어 모듈(예: 토큰 모듈 224)을 통해 수행될 수 있다. 프로세서 110은 적어도 하나의 프로세서를 포함할 수 있고, 상기 적어도 하나의 프로세서는 전자 장치 100에서 접근 가능한 저장 장치(예: 메모리 120)에 저장된 명령어, 또는 프로그램 코드를 이용하여 상기 소프트웨어 모듈을 구현할 수 있다. 도 6은 다양한 실시 예에 따른 네트워크 환경 내의 전자 장치를 나타낸다. 도 6을 참조하면, 다양한 실시 예에서의 전자 장치 601, 602, 604 또는 서버 606이 네트워크 662 또는 근거리 통신 664를 통하여 서로 연결될 수 있다. 전자 장치 601은 버스 610, 프로세서 620, 메모리 630, 입출력 인터페 이스 650, 디스플레이 660, 및 통신 인터페이스 670을 포함할 수 있다. 어떤 실시 예에서는, 전자 장치 601은, 구성요소들 중 적어도 하나를 생략하거나 다른 구성 요소를 추가적으로 구비할 수 있다. 버스 610은, 예를 들면, 구성요소들 610-670을 서로 연결하고, 구성요소들 간의 통신(예: 제어 메시지 및/또는 데이터)을 전달하는 회로를 포함할 수 있다.프로세서 620은, 중앙처리장치(Central Processing Unit (CPU)), 어플리케이션 프로세서(Application Processor (AP)), 또는 커뮤니케이션 프로세서(Communication Processor (CP)) 중 하나 또는 그 이상을 포함할 수 있다. 프로세서 620은, 예를 들면, 전자 장치 601의 적어도 하나의 다른 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 실행할 수 있다. 메모리 630은, 휘발성 및/또는 비휘발성 메모리를 포함할 수 있다. 메모리 630은, 예를 들면, 전자 장치 601의 적어도 하나의 다른 구성요소에 관계된 명령 또는 데이터를 저장할 수 있다. 한 실시 예에 따르면, 메모리 630 은 소프트웨어 및/또는 프로그램 640을 저장할 수 있다. 프로그램 640은, 예를 들면, 커널 641, 미들웨어 643, 어플리케이션 프로그래밍 인터페이스(Application Programming Interface (API)) 645, 및/또는 어플리케이션 프로그램(또는 \"어플리케이션\") 647 등을 포함할 수 있다. 커널 641, 미들웨어 643, 또는 API 645의 적어도 일 부는, 운영 시스템(Operating System (OS))으로 지칭될 수 있다. 커널 641은, 예를 들면, 다른 프로그램들(예: 미들웨어 643, API 645, 또는 어플리케이션 프로그램 647)에 구현 된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스 610, 프로세서 620, 또는 메모리 630 등)을 제어 또는 관리할 수 있다. 또한, 커널 641은 미들웨어 643, API 645, 또는 어플리케이션 프로그램 647에 서 전자 장치 601의 개별 구성요소에 접근함으로써, 시스템 리소스들을 제어 또는 관리할 수 있는 인터페이스를 제공할 수 있다. 미들웨어 643은, 예를 들면, API 645 또는 어플리케이션 프로그램 647이 커널 641과 통신하여 데이터를 주고받 을 수 있도록 중개 역할을 수행할 수 있다. 또한, 미들웨어 643은 어플리케이션 프로그램 647로부터 수신된 하나 이상의 작업 요청들을 우선 순위에 따라 처리할 수 있다. 예를 들면, 미들웨어 643은 어플리케이션 프로그램 647 중 적어도 하나에 전자 장치 601의 시 스템 리소스(예: 버스 610, 프로세서 620, 또는 메모리 630 등)를 사용할 수 있는 우선 순위를 부여할 수 있다. 예컨대, 미들웨어 643은 상기 적어도 하나에 부여된 우선 순위에 따라 상기 하나 이상의 작업 요청들을 처리함 으로써, 상기 하나 이상의 작업 요청들에 대한 스케쥴링 또는 로드 밸런싱 등을 수행할 수 있다. API 645는, 예를 들면, 어플리케이션 647이 커널 641 또는 미들웨어 643에서 제공되는 기능을 제어하기 위한 인 터페이스로, 예를 들면, 파일 제어, 창 제어, 영상 처리, 또는 문자 제어 등을 위한 적어도 하나의 인터페이스 또는 함수(예: 명령어)를 포함할 수 있다. 입출력 인터페이스 650은, 예를 들면, 사용자 또는 다른 외부 기기로부터 입력된 명령 또는 데이터를 전자 장치 601의 다른 구성요소(들)에 전달할 수 있는 인터페이스의 역할을 할 수 있다. 또한, 입출력 인터페이스 650은 전자 장치 601의 다른 구성요소(들)로부터 수신된 명령 또는 데이터를 사용자 또는 다른 외부 기기로 출력할 수 있다. 디스플레이 660은, 예를 들면, 액정 디스플레이(Liquid Crystal Display (LCD)), 발광 다이오드(Light- Emitting Diode (LED)) 디스플레이, 유기 발광 다이오드(Organic LED (OLED)) 디스플레이, 또는 마이크로 전자 기계 시스템(microelectromechanical systems, MEMS) 디스플레이, 또는 전자 종이(electronic paper) 디스플레 이를 포함할 수 있다. 디스플레이 660은, 예를 들면, 사용자에게 각종 컨텐츠(예: 텍스트, 이미지, 비디오, 아 이콘, 또는 심볼 등)을 표시할 수 있다. 디스플레이 660은, 터치 스크린을 포함할 수 있으며, 예를 들면, 전자 펜 또는 사용자의 신체의 일부를 이용한 터치, 제스처, 근접, 또는 호버링(hovering) 입력을 수신할 수 있다. 통신 인터페이스 670은, 예를 들면, 전자 장치 601과 외부 장치(예: 제1 외부 전자 장치 602, 제2 외부 전자 장 치 604, 또는 서버 606) 간의 통신을 설정할 수 있다. 예를 들면, 통신 인터페이스 670은 무선 통신 또는 유선 통신을 통해서 네트워크 662에 연결되어 상기 외부 장치 (예: 제2 외부 전자 장치 604 또는 서버 606)와 통신할 수 있다. 무선 통신은, 예를 들면 셀룰러 통신 프로토콜로서, 예를 들면 LTE(Long-Term Evolution), LTE-A(LTE- Advanced), CDMA(Code Division Multiple Access), WCDMA(Wideband CDMA), UMTS(Universal Mobile Telecommunications System), WiBro(Wireless Broadband), 또는 GSM(Global System for Mobile Communications) 중 적어도 하나를 사용할 수 있다. 또한 무선 통신은, 예를 들면, 근거리 통신 664를 포함할 수 있다. 근거리 통신 664는, 예를 들면, Wi-Fi(Wireless Fidelity), Bluetooth, NFC(Near Field Communication), MST(magnetic stripe transmission), 또는 GNSS 중 적어도 하나를 포함할 수 있다. MST는 전자기 신호를 이용하여 전송 데이터에 따라 펄스를 생성하고, 상기 펄스는 자기장 신호를 발생시킬 수 있다. 전자 장치 601은 상기 자기장 신호를 POS(point of sales)에 전송하고, POS는 MST 리더(MST reader)를 이용하여 상기 자기장 신호는 검출하고, 검출된 자기장 신호를 전기 신호로 변환함으로써 상기 데이터를 복원할 수 있다. GNSS는 사용 지역 또는 대역폭 등에 따라, 예를 들면, GPS(Global Positioning System), Glonass(Global Navigation Satellite System), Beidou Navigation Satellite System(이하 \"Beidou\") 또는 Galileo(the European global satellite-based navigation system) 중 적어도 하나를 포함할 수 있다. 이하, 본 문서에서는, \"GPS\"는 \"GNSS\"와 혼용되어 사용(interchangeably used)될 수 있다. 유선 통신은, 예를 들면, USB(universal serial bus), HDMI(high definition multimedia interface), RS-232(recommended standard 732), 또는 POTS(plain old telephone service) 등 중 적어도 하나를 포함할 수 있다. 네트워크 662는 통신 네 트워크(telecommunications network), 예를 들면, 컴퓨터 네트워크(computer network)(예: LAN 또는 WAN), 인 터넷, 또는 전화 망(telephone network) 중 적어도 하나를 포함할 수 있다. 제1 및 제2 외부 전자 장치 602, 604 각각은 전자 장치 601과 동일한 또는 다른 종류의 장치일 수 있다. 한 실 시 예에 따르면, 서버 606은 하나 또는 그 이상의 서버들의 그룹을 포함할 수 있다. 다양한 실시 예에 따르면, 전자 장치 601에서 실행되는 동작들의 전부 또는 일부는 다른 하나 또는 복수의 전자 장치(예: 전자 장치 602, 604, 또는 서버 606)에서 실행될 수 있다. 한 실시 예에 따르면, 전자 장치 601이 어떤 기능이나 서비스를 자동 으로 또는 요청에 의하여 수행해야 할 경우에, 전자 장치 601은 기능 또는 서비스를 자체적으로 실행시키는 대 신에 또는 추가적으로, 그와 연관된 적어도 일부 기능을 다른 장치(예: 전자 장치 602, 604, 또는 서버 606)에 게 요청할 수 있다. 다른 전자 장치(예: 전자 장치 602, 604, 또는 서버 606)는 요청된 기능 또는 추가 기능을 실행하고, 그 결과를 전자 장치 601로 전달할 수 있다. 전자 장치 601은 수신된 결과를 그대로 또는 추가적으로 처리하여 요청된 기능이나 서비스를 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 도 7는 다양한 실시 예에 따른 전자 장치 701의 블록도 700을 나타낸다. 도 7를 참조하면, 전자 장치 701은, 예를 들면, 도 6에 도시된 전자 장치 601의 전체 또는 일부를 포함할 수 있 다. 전자 장치 701은 하나 이상의 프로세서(예: AP) 710, 통신 모듈 720, 가입자 식별 모듈 724, 메모리 730, 센서 모듈 740, 입력 장치 750, 디스플레이 760, 인터페이스 770, 오디오 모듈 780, 카메라 모듈 791, 전력 관 리 모듈 795, 배터리 796, 인디케이터 797, 및 모터 798을 포함할 수 있다. 프로세서 710은, 예를 들면, 운영 체제 또는 응용 프로그램을 구동하여 프로세서 710에 연결된 다수의 하드웨어 또는 소프트웨어 구성요소들을 제어할 수 있고, 각종 데이터 처리 및 연산을 수행할 수 있다. 프로세서 710은, 예를 들면, SoC(system on chip)로 구현될 수 있다. 한 실시 예에 따르면, 프로세서 710은 GPU(graphic processing unit) 및/또는 이미지 신호 프로세서(image signal processor)를 더 포함할 수 있다. 프로세서 710 은 도 7에 도시된 구성요소들 중 적어도 일부(예: 셀룰러 모듈 721)를 포함할 수도 있다. 프로세서 710은 다른 구성요소들(예: 비휘발성 메모리) 중 적어도 하나로부터 수신된 명령 또는 데이터를 휘발성 메모리에 로드 (load)하여 처리하고, 다양한 데이터를 비휘발성 메모리에 저장(store)할 수 있다. 통신 모듈 720은, 도 6의 통신 인터페이스 670과 동일 또는 유사한 구성을 가질 수 있다. 통신 모듈 720은, 예 를 들면, 셀룰러 모듈 721, Wi-Fi 모듈 722, 블루투스 모듈 723, GNSS 모듈 724(예: GPS 모듈, Glonass 모듈, Beidou 모듈, 또는 Galileo 모듈), NFC 모듈 725, MST 모듈 726, 및 RF(radio frequency) 모듈 727을 포함할 수 있다. 셀룰러 모듈 721은, 예를 들면, 통신망을 통해서 음성 통화, 영상 통화, 문자 서비스, 또는 인터넷 서비스 등을 제공할 수 있다. 한 실시 예에 따르면, 셀룰러 모듈 721은 가입자 식별 모듈(예: SIM 카드) 729를 이용하여 통 신 네트워크 내에서 전자 장치 701의 구별 및 인증을 수행할 수 있다. 한 실시 예에 따르면, 셀룰러 모듈 721은 프로세서 710이 제공할 수 있는 기능 중 적어도 일부 기능을 수행할 수 있다. 한 실시 예에 따르면, 셀룰러 모 듈 721은 커뮤니케이션 프로세서(CP)를 포함할 수 있다. Wi-Fi 모듈 722, 블루투스 모듈 723, GNSS 모듈 724, NFC 모듈 725, 또는 MST 모듈 726 각각은, 예를 들면, 해 당하는 모듈을 통해서 송수신되는 데이터를 처리하기 위한 프로세서를 포함할 수 있다. 어떤 실시 예에 따르면, 셀룰러 모듈 721, Wi-Fi 모듈 722, 블루투스 모듈 723, GNSS 모듈 724, NFC 모듈 725, 또는 MST 모듈 726 중 적어도 일부(예: 두 개 이상)는 하나의 IC(integrated chip) 또는 IC 패키지 내에 포함될 수 있다. RF 모듈 727은, 예를 들면, 통신 신호(예: RF 신호)를 송수신할 수 있다. RF 모듈 727은, 예를 들면, 트랜시버 (transceiver), PAM(power amp module), 주파수 필터(frequency filter), LNA(low noise amplifier), 또는 안 테나 등을 포함할 수 있다. 다른 실시 예에 따르면, 셀룰러 모듈 721, Wi-Fi 모듈 722, 블루투스 모듈 723, GNSS 모듈 724, NFC 모듈 725, MST 모듈 726 중 적어도 하나는 별개의 RF 모듈을 통하여 RF 신호를 송수신할 수 있다. 가입자 식별 모듈 729는, 예를 들면, 가입자 식별 모듈을 포함하는 카드 및/또는 내장 SIM(embedded SIM)을 포 함할 수 있으며, 고유한 식별 정보(예: ICCID (integrated circuit card identifier)) 또는 가입자 정보(예: IMSI (international mobile subscriber identity))를 포함할 수 있다. 메모리 730(예: 메모리 630)는, 예를 들면, 내장 메모리 732 또는 외장 메모리 734를 포함할 수 있다. 내장 메 모리 732는, 예를 들면, 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비-휘발성(non-volatile) 메모리 (예: OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), 마스크(mask) ROM, 플래시(flash) ROM, 플래시 메모리(예: 낸드플래시(NAND flash) 또는 노아플래시(NOR flash) 등), 하드 드라이브, 또는 SSD(solid state drive) 중 적어도 하나를 포함할 수 있다. 외장 메모리 734는 플래시 드라이브(flash drive), 예를 들면, CF(compact flash), SD(secure digital), Micro-SD, Mini-SD, xD(extreme digital), MMC(MultiMediaCard), 또는 메모리 스틱(memory stick) 등을 더 포 함할 수 있다. 외장 메모리 734는 다양한 인터페이스를 통하여 전자 장치 701과 기능적으로 및/또는 물리적으로 연결될 수 있다. 보안 모듈 736은 메모리 730보다 상대적으로 보안 레벨이 높은 저장 공간을 포함하는 모듈로써, 안전한 데이터 저장 및 보호된 실행 환경을 보장해주는 회로일 수 있다. 보안 모듈 736은 별도의 회로로 구현될 수 있으며, 별 도의 프로세서를 포함할 수 있다. 보안 모듈 736은, 예를 들면, 탈착 가능한 스마트 칩, SD(secure digital) 카 드 내에 존재하거나, 또는 전자 장치 701의 고정 칩 내에 내장된 내장형 보안 요소(embedded secure element(eSE))를 포함할 수 있다. 또한, 보안 모듈 736은 전자 장치의 운영 체제(OS)와 다른 운영 체제로 구동될 수 있다. 예를 들면, 보안 모듈 736은 JCOP(java card open platform) 운영 체제를 기반으로 동작할 수 있다. 센서 모듈 740은, 예를 들면, 물리량을 계측하거나 전자 장치 701의 작동 상태를 감지하여, 계측 또는 감지된 정보를 전기 신호로 변환할 수 있다. 센서 모듈 740은, 예를 들면, 제스처 센서 740A, 자이로 센서 740B, 기압 센서 740C, 마그네틱 센서 740D, 가속도 센서 740E, 그립 센서 740F, 근접 센서 740G, 컬러 센서 740H(예: RGB 센서), 생체 센서 740I, 온/습도 센서 740J, 조도 센서 740K, 또는 UV(ultra violet) 센서 740M 중의 적어도 하나를 포함할 수 있다. 추가적으로 또는 대체적으로, 센서 모듈 740은, 예를 들면, 후각 센서(E-nose sensor), EMG(electromyography) 센서, EEG(electroencephalogram) 센서, ECG(electrocardiogram) 센서, IR(infrared) 센서, 홍채 센서 및/또는 지문 센서를 포함할 수 있다. 센서 모듈 740은 그 안에 속한 적어도 하나 이상의 센서 들을 제어하기 위한 제어 회로를 더 포함할 수 있다. 어떤 실시 예에서는, 전자 장치 701은 프로세서 710의 일 부로서 또는 별도로, 센서 모듈 740을 제어하도록 구성된 프로세서를 더 포함하여, 프로세서 710이 슬립(sleep) 상태에 있는 동안, 센서 모듈 740을 제어할 수 있다. 입력 장치 750은, 예를 들면, 터치 패널(touch panel) 752, (디지털) 펜 센서(pen sensor) 754, 키(key) 756, 또는 초음파(ultrasonic) 입력 장치 758을 포함할 수 있다. 터치 패널 752는, 예를 들면, 정전식, 감압식, 적외 선 방식, 또는 초음파 방식 중 적어도 하나의 방식을 사용할 수 있다. 또한, 터치 패널 752는 제어 회로를 더 포함할 수도 있다. 터치 패널 752는 택타일 레이어(tactile layer)를 더 포함하여, 사용자에게 촉각 반응을 제 공할 수 있다. (디지털) 펜 센서 754는, 예를 들면, 터치 패널의 일부이거나, 별도의 인식용 시트(sheet)를 포함할 수 있다. 키 756은, 예를 들면, 물리적인 버튼, 광학식 키, 또는 키패드를 포함할 수 있다. 초음파 입력 장치 758은 마이 크(예: 마이크 788)를 통해, 입력 도구에서 발생된 초음파를 감지하여, 상기 감지된 초음파에 대응하는 데이터 를 확인할 수 있다. 디스플레이 760(예: 디스플레이 660)은 패널 762, 홀로그램 장치 764, 또는 프로젝터 766을 포함할 수 있다. 패 널 762는, 도 6의 디스플레이 660과 동일 또는 유사한 구성을 포함할 수 있다. 패널 762는, 예를 들면, 유연하 게(flexible), 투명하게(transparent), 또는 착용할 수 있게(wearable) 구현될 수 있다. 패널 762는 터치 패널 752와 하나의 모듈로 구성될 수도 있다. 홀로그램 장치 764는 빛의 간섭을 이용하여 입체 영상을 허공에 보여줄수 있다. 프로젝터 766은 스크린에 빛을 투사하여 영상을 표시할 수 있다. 스크린은, 예를 들면, 전자 장치 701 의 내부 또는 외부에 위치할 수 있다. 한 실시 예에 따르면, 디스플레이 760은 상기 패널 762, 상기 홀로그램 장치 764, 또는 프로젝터 766를 제어하기 위한 제어 회로를 더 포함할 수 있다. 인터페이스 770은, 예를 들면, HDMI 772, USB 774, 광 인터페이스(optical interface) 776, 또는 D-sub(D- subminiature) 778을 포함할 수 있다. 인터페이스 770은, 예를 들면, 도 6에 도시된 통신 인터페이스 670에 포 함될 수 있다. 추가적으로 또는 대체적으로, 인터페이스 770은, 예를 들면, MHL(mobile high-definition link) 인터페이스, SD 카드/MMC 인터페이스, 또는 IrDA(infrared data association) 규격 인터페이스를 포함할 수 있 다. 오디오 모듈 780은, 예를 들면, 소리(sound)와 전기 신호를 쌍방향으로 변환시킬 수 있다. 오디오 모듈 780의 적어도 일부 구성요소는, 예를 들면, 도 6에 도시된 입출력 인터페이스 650에 포함될 수 있다. 오디오 모듈 780 은, 예를 들면, 스피커 782, 리시버 784, 이어폰 786, 또는 마이크 788 등을 통해 입력 또는 출력되는 소리 정 보를 처리할 수 있다. 카메라 모듈 791은, 예를 들면, 정지 영상 및 동영상을 촬영할 수 있는 장치로서, 한 실시 예에 따르면, 하나 이상의 이미지 센서(예: 전면 센서 또는 후면 센서), 렌즈, ISP(image signal processor), 또는 플래시 (flash)(예: LED 또는 제논 램프(xenon lamp))를 포함할 수 있다. 전력 관리 모듈 795는, 예를 들면, 전자 장치 701의 전력을 관리할 수 있다. 한 실시 예에 따르면, 전력 관리 모듈 795는 PMIC(power management integrated circuit), 충전 IC(charger integrated circuit), 또는 배터리 또는 연료 게이지(battery or fuel gauge)를 포함할 수 있다. PMIC는, 유선 및/또는 무선 충전 방식을 가질 수 있다. 무선 충전 방식은, 예를 들면, 자기공명 방식, 자기유도 방식 또는 전자기파 방식 등을 포함하며, 무선 충전을 위한 부가적인 회로, 예를 들면, 코일 루프, 공진 회로, 또는 정류기 등을 더 포함할 수 있다. 배터리 게이지는, 예를 들면, 배터리 796의 잔량, 충전 중 전압, 전류, 또는 온도를 측정할 수 있다. 배터리 796은, 예 를 들면, 충전식 전지(rechargeable battery) 및/또는 태양 전지(solar battery)를 포함할 수 있다. 인디케이터 797은 전자 장치 701 혹은 그 일부(예: 프로세서 710)의 특정 상태, 예를 들면, 부팅 상태, 메시지 상태 또는 충전 상태 등을 표시할 수 있다. 모터 798은 전기적 신호를 기계적 진동으로 변환할 수 있고, 진동 (vibration), 또는 햅틱(haptic) 효과 등을 발생시킬 수 있다. 도시되지는 않았으나, 전자 장치 701은 모바일 TV 지원을 위한 처리 장치(예: GPU)를 포함할 수 있다. 모바일 TV 지원을 위한 처리 장치는, 예를 들면, DMB(Digital Multimedia Broadcasting), DVB(Digital Video Broadcasting), 또는 미디어플로(MediaFLOTM) 등 의 규격에 따른 미디어 데이터를 처리할 수 있다. 본 문서에서 기술된 구성요소들 각각은 하나 또는 그 이상의 부품(component)으로 구성될 수 있으며, 해당 구성 요소의 명칭은 전자 장치의 종류에 따라서 달라질 수 있다. 다양한 실시 예에서, 전자 장치는 본 문서에서 기술 된 구성요소 중 적어도 하나를 포함하여 구성될 수 있으며, 일부 구성요소가 생략되거나 또는 추가적인 다른 구 성요소를 더 포함할 수 있다. 또한, 다양한 실시 예에 따른 전자 장치의 구성 요소들 중 일부가 결합되어 하나 의 개체(entity)로 구성됨으로써, 결합되기 이전의 해당 구성 요소들의 기능을 동일하게 수행할 수 있다. 도 8은 다양한 실시 예에 따른 프로그램 모듈의 블록도를 나타낸다. 한 실시 예에 따르면, 프로그램 모듈 810(예: 프로그램 640)은 전자 장치(예: 전자 장치 601)에 관련된 자원을 제어하는 운영 체제(OS) 및/또는 운영 체제 상에서 구동되는 다양한 어플리케이션(예: 어플리케이션 프로그램 647)을 포함할 수 있다. 운영 체제는, 예를 들면, 안드로이드(android), iOS, 윈도우즈(windows), 심비안 (symbian), 타이젠(tizen), 또는 바다(bada) 등이 될 수 있다. 프로그램 모듈 810은 커널 820, 미들웨어 830, API 860, 및/또는 어플리케이션 870을 포함할 수 있다. 프로그램 모듈 810의 적어도 일부는 전자 장치 상에 프리로드(preload) 되거나, 외부 전자 장치(예: 전자 장치 602, 604, 서버 606 등)로부터 다운로드 가능하다. 커널 820(예: 커널 641)은, 예를 들면, 시스템 리소스 매니저 821 또는 디바이스 드라이버 823를 포함할 수 있 다. 시스템 리소스 매니저 821은 시스템 리소스의 제어, 할당, 또는 회수 등을 수행할 수 있다. 한 실시 예에 따르면, 시스템 리소스 매니저 821은 프로세스 관리부, 메모리 관리부, 또는 파일 시스템 관리부 등을 포함할 수 있다. 디바이스 드라이버 823은, 예를 들면, 디스플레이 드라이버, 카메라 드라이버, 블루투스 드라이버, 공 유 메모리 드라이버, USB 드라이버, 키패드 드라이버, Wi-Fi 드라이버, 오디오 드라이버, 또는 IPC(inter-process communication) 드라이버를 포함할 수 있다. 미들웨어 830은, 예를 들면, 어플리케이션 870이 공통적으로 필요로 하는 기능을 제공하거나, 어플리케이션 870 이 전자 장치 내부의 제한된 시스템 자원을 효율적으로 사용할 수 있도록 API 860을 통해 다양한 기능들을 어플 리케이션 870으로 제공할 수 있다. 한 실시 예에 따르면, 미들웨어 830(예: 미들웨어 643)은 런타임 라이브러리 835, 어플리케이션 매니저(application manager) 841, 윈도우 매니저(window manager) 842, 멀티미디어 매니저 (multimedia manager) 843, 리소스 매니저(resource manager) 844, 파워 매니저(power manager) 845, 데이터베 이스 매니저(database manager) 846, 패키지 매니저(package manager) 847, 연결 매니저(connectivity manager) 848, 통지 매니저(notification manager) 849, 위치 매니저(location manager) 850, 그래픽 매니저 (graphic manager) 851, 보안 매니저(security manager) 852, 또는 결제 매니저 854 중 적어도 하나를 포함할 수 있다. 런타임 라이브러리 835는, 예를 들면, 어플리케이션 870이 실행되는 동안에 프로그래밍 언어를 통해 새로운 기 능을 추가하기 위해 컴파일러가 사용하는 라이브러리 모듈을 포함할 수 있다. 런타임 라이브러리 835는 입출력 관리, 메모리 관리, 또는 산술 함수에 대한 기능 등을 수행할 수 있다. 어플리케이션 매니저 841은, 예를 들면, 어플리케이션 870 중 적어도 하나의 어플리케이션의 생명 주기(life cycle)를 관리할 수 있다. 윈도우 매니저 842는 화면에서 사용하는 GUI 자원을 관리할 수 있다. 멀티미디어 매 니저 843은 다양한 미디어 파일들의 재생에 필요한 포맷을 파악하고, 해당 포맷에 맞는 코덱(codec)을 이용하여 미디어 파일의 인코딩(encoding) 또는 디코딩(decoding)을 수행할 수 있다. 리소스 매니저 844는 어플리케이션 870 중 적어도 어느 하나의 어플리케이션의 소스 코드, 메모리 또는 저장 공간 등의 자원을 관리할 수 있다. 파워 매니저 845는, 예를 들면, 바이오스(BIOS: basic input/output system) 등과 함께 동작하여 배터리 또는 전원을 관리하고, 전자 장치의 동작에 필요한 전력 정보 등을 제공할 수 있다. 데이터베이스 매니저 846은 어플 리케이션 870 중 적어도 하나의 어플리케이션에서 사용할 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패 키지 매니저 847은 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 업데이트를 관리할 수 있다. 연결 매니저 848은, 예를 들면, Wi-Fi 또는 블루투스 등의 무선 연결을 관리할 수 있다. 통지 매니저 849는 도 착 메시지, 약속, 근접성 알림 등의 사건(event)을 사용자에게 방해되지 않는 방식으로 표시 또는 통지할 수 있 다. 위치 매니저 850은 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저 851은 사용자에게 제공될 그래 픽 효과 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 보안 매니저 852는 시스템 보안 또는 사용자 인증 등에 필요한 제반 보안 기능을 제공할 수 있다. 한 실시 예에 따르면, 전자 장치(예: 전자 장치 601)가 전 화 기능을 포함한 경우, 미들웨어 830은 전자 장치의 음성 또는 영상 통화 기능을 관리하기 위한 통화 매니저 (telephony manager)를 더 포함할 수 있다. 미들웨어 830은 전술한 구성요소들의 다양한 기능의 조합을 형성하는 미들웨어 모듈을 포함할 수 있다. 미들웨 어 830은 차별화된 기능을 제공하기 위해 운영 체제의 종류 별로 특화된 모듈을 제공할 수 있다. 또한, 미들웨 어 830은 동적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. API 860(예: API 645)은, 예를 들면, API 프로그래밍 함수들의 집합으로, 운영 체제에 따라 다른 구성으로 제공 될 수 있다. 예를 들면, 안드로이드 또는 iOS의 경우, 플랫폼 별로 하나의 API 셋을 제공할 수 있으며, 타이젠 (tizen)의 경우, 플랫폼 별로 두 개 이상의 API 셋을 제공할 수 있다. 어플리케이션 870(예: 어플리케이션 프로그램 647)은, 예를 들면, 홈 871, 다이얼러 872, SMS/MMS 873, IM(instant message) 874, 브라우저 875, 카메라 876, 알람 877, 컨택트 878, 음성 다이얼 879, 이메일 880, 달력 881, 미디어 플레이어 882, 앨범 883, 또는 시계 884, 건강 관리(health care)(예: 운동량 또는 혈당 등 을 측정), 또는 환경 정보 제공(예: 기압, 습도, 또는 온도 정보 등을 제공) 등의 기능을 수행할 수 있는 하나 이상의 어플리케이션을 포함할 수 있다. 한 실시 예에 따르면, 어플리케이션 870은 전자 장치(예: 전자 장치 601)와 외부 전자 장치(예: 전자 장치 602, 604) 사이의 정보 교환을 지원하는 어플리케이션(이하, 설명의 편의상, \"정보 교환 어플리케이션\")을 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치에 특정 정보를 전달하기 위한 알림 전달 (notification relay) 어플리케이션, 또는 외부 전자 장치를 관리하기 위한 장치 관리(device management) 어 플리케이션을 포함할 수 있다. 예를 들면, 알림 전달 어플리케이션은 전자 장치의 다른 어플리케이션(예: SMS/MMS 어플리케이션, 이메일 어플 리케이션, 건강 관리 어플리케이션, 또는 환경 정보 어플리케이션 등)에서 발생된 알림 정보를 외부 전자 장치(예: 전자 장치 602, 604)로 전달하는 기능을 포함할 수 있다. 또한, 알림 전달 어플리케이션은, 예를 들면, 외 부 전자 장치로부터 알림 정보를 수신하여 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치(예: 전자 장치 602, 604)의 적어 도 하나의 기능(예: 외부 전자 장치 자체(또는 일부 구성 부품)의 턴-온/턴-오프 또는 디스플레이의 밝기(또는 해상도) 조절), 외부 전자 장치에서 동작하는 어플리케이션 또는 외부 전자 장치에서 제공되는 서비스(예: 통화 서비스 또는 메시지 서비스 등)를 관리(예: 설치, 삭제, 또는 업데이트)할 수 있다. 한 실시 예에 따르면, 어플리케이션 870은 외부 전자 장치(예: 전자 장치 602, 604)의 속성에 따라 지정된 어플 리케이션(예: 모바일 의료 기기의 건강 관리 어플리케이션)을 포함할 수 있다. 한 실시 예에 따르면, 어플리케 이션 870은 외부 전자 장치(예: 서버 606 또는 전자 장치 602, 604)로부터 수신된 어플리케이션을 포함할 수 있 다. 한 실시 예에 따르면, 어플리케이션 870은 프리로드 어플리케이션(preloaded application) 또는 서버로부터 다운로드 가능한 제3자 어플리케이션(third party application)을 포함할 수 있다. 도시된 실시 예에 따른 프로 그램 모듈 810의 구성요소들의 명칭은 운영 체제의 종류에 따라서 달라질 수 있다. 다양한 실시 예에 따르면, 프로그램 모듈 810의 적어도 일부는 소프트웨어, 펌웨어, 하드웨어, 또는 이들 중 적 어도 둘 이상의 조합으로 구현될 수 있다. 프로그램 모듈 810의 적어도 일부는, 예를 들면, 프로세서(예: 프로 세서 710)에 의해 구현(implement)(예: 실행)될 수 있다. 프로그램 모듈 810의 적어도 일부는 하나 이상의 기능 을 수행하기 위한, 예를 들면, 모듈, 프로그램, 루틴, 명령어 세트(sets of instructions) 또는 프로세스 등을 포함할 수 있다. 본 문서에서 사용된 용어 \"모듈\"은, 예를 들면, 하드웨어, 소프트웨어 또는 펌웨어(firmware) 중 하나 또는 둘 이상의 조합을 포함하는 단위(unit)를 의미할 수 있다. \"모듈\"은, 예를 들면, 유닛(unit), 로직(logic), 논리 블록(logical block), 부품(component), 또는 회로(circuit) 등의 용어와 바꾸어 사용(interchangeably use)될 수 있다. \"모듈\"은, 일체로 구성된 부품의 최소 단위 또는 그 일부가 될 수 있다. \"모듈\"은 하나 또는 그 이상 의 기능을 수행하는 최소 단위 또는 그 일부가 될 수도 있다. \"모듈\"은 기계적으로 또는 전자적으로 구현될 수 있다. 예를 들면, \"모듈\"은, 알려졌거나 앞으로 개발될, 어떤 동작들을 수행하는 ASIC(application-specific integrated circuit) 칩, FPGAs(field-programmable gate arrays) 또는 프로그램 가능 논리 장치 (programmable-logic device) 중 적어도 하나를 포함할 수 있다. 다양한 실시 예에 따른 장치(예: 모듈들 또는 그 기능들) 또는 방법(예: 동작들)의 적어도 일부는, 예컨대, 프 로그램 모듈의 형태로 컴퓨터로 읽을 수 있는 저장매체(computer-readable storage media)에 저장된 명령어로 구현될 수 있다. 상기 명령어가 프로세서(예: 프로세서 620)에 의해 실행될 경우, 상기 하나 이상의 프로세서가 상기 명령어에 해당하는 기능을 수행할 수 있다. 컴퓨터로 읽을 수 있는 저장매체는, 예를 들면, 메모리 630이 될 수 있다. 컴퓨터로 판독 가능한 기록 매체는, 하드디스크, 플로피디스크, 마그네틱 매체(magnetic media)(예: 자기테이프), 광기록 매체(optical media)(예: CD-ROM, DVD(Digital Versatile Disc), 자기-광 매체(magneto- optical media)(예: 플롭티컬 디스크(floptical disk)), 하드웨어 장치(예: ROM, RAM, 또는 플래시 메모리 등) 등을 포함할 수 있다. 또한, 프로그램 명령에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함할 수 있다. 상술한 하드웨어 장치는 다양한 실시 예의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지다. 다양한 실시 예에 따른 모듈 또는 프로그램 모듈은 전술한 구성요소들 중 적어도 하나 이상을 포함하거나, 일부 가 생략되거나, 또는 추가적인 다른 구성요소를 더 포함할 수 있다. 다양한 실시 예에 따른 모듈, 프로그램 모 듈 또는 다른 구성요소에 의해 수행되는 동작들은 순차적, 병렬적, 반복적 또는 휴리스틱(heuristic)한 방법으 로 실행될 수 있다. 또한, 일부 동작은 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다. 그리고 본 문서에 개시된 실시 예는 개시된, 기술 내용의 설명 및 이해를 위해 제시된 것이며, 본 발명의 범위 를 한정하는 것은 아니다. 따라서, 본 문서의 범위는, 본 발명의 기술적 사상에 근거한 모든 변경 또는 다양한 다른 실시 예를 포함하는 것으로 해석되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2015-0146706", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시 예에 따른 전자 장치 및 전자 장치와 통신 가능한 외부 장치를 나타낸다. 도 2는 일 실시 예에 따른 전자 장치의 토큰 관리를 위한 프로그램 모듈을 나타낸다. 도 3은 일 실시 예에 따른 토큰을 포함한 어플리케이션 패키지의 구조를 나타낸다. 도 4는 일 실시 예에 따른 어플리케이션을 대체하는 프로세스를 나타낸다. 도 5는 일 실시 예에 따른 어플리케이션을 설치하는 프로세스를 나타낸다. 도 6은 다양한 실시 예에 따른 네트워크 환경 내의 전자 장치를 나타낸다. 도 7는 다양한 실시 예에 따른 전자 장치 701의 블록도 700을 나타낸다. 도 8은 다양한 실시 예에 따른 프로그램 모듈의 블록도를 나타낸다."}
