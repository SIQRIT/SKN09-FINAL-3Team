{"patent_id": "10-2022-0130806", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0050875", "출원번호": "10-2022-0130806", "발명의 명칭": "장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템 및 방법, 이를 지원하는 운영", "출원인": "주식회사 자이솜", "발명자": "조창희"}}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "설비 현장에 설치 및 운영되며 디바이스 데이터를 전송하는 복수의 설비 디바이스;상기 설비 디바이스로부터 전송되는 디바이스 데이터를 수집 관리하고 딥러닝과 머신러닝 알고리즘 모델의 학습에 필요한 학습 데이터셋과 모의 데이터셋을 관리하는 데이터 수집 서버; 및 설비 현장에 설치되어 작업자에 의해 운영되며 내부에 설치되어 구동되는 장비관리 구동 도구를 통해 알고리즘모델을 생성하고 학습시키며 상기 설비 디바이스의 운영 데이터와 연동시켜 장비 관리 및 예지보전을 수행하는작업 단말기; 를 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서, 딥러닝과 머신러닝 알고리즘 모델의 디자인에 필요한 레이어 및 함수를 상기 작업 단말기로 제공하는 라이브러리 서버; 및 딥러닝과 머신러닝 알고리즘 모델의 현장 어플리케이션을 지원하는 운영 서버; 를 더 포함하는 것을 특징으로하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서, 상기 설비 디바이스가 전송하는 디바이스 데이터에는 설비 디바이스의 상태 및 작업 데이터와 데이터베이스 정보가 포함되는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2항에 있어서, 상기 작업 단말기는 상기 설비 디바이스를 관리하는 현장 작업자에 의해 조작되며, 장비관리 구동 도구를 구동시켜 장비 관리 및 예지보전의 수행을 위한 초기 디자이너 모델을 생성하고, 상기 운영 서버로 디자이너 모델의학습을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 학습 데이터셋과 모의 데이터셋을 수신해 디자이너 모델을 학습시켜 트레인드 모델을 생성하며, 상기 운영 서버로 트레인드 모델의 현장 어플리케이션을 위한데이터를 요청하고 상기 데이터 수집 서버로부터 설비 디바이스에 대한 실시간 디바이스 데이터를 수신해 이 트레인드 모델에 연동시켜 현장 데이터에 따른 장비 관리 및 예지보전을 수행하는 것을 특징으로 하는 장비 운영데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4항에 있어서, 상기 장비관리 구동 도구는, 장비 관리 및 예지보전의 수행을 위한 작업자의 초기 디자이너 모델을 생성하는 디자이너 모듈;상기 디자이너 모듈에서 생성된 작업자의 디자이너 모델을 학습시켜 학습된 트레인드 모델을 생성하는 트레이닝공개특허 10-2024-0050875-3-모듈; 및 상기 트레이닝 모듈에서 생성된 작업자의 트레인드 모델에 실시간 디바이스 데이터를 연동시켜 장비 관리 및 예지보전을 수행하는 어플리케이션 모듈; 을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5항에 있어서, 상기 디자이너 모듈은 작업자가 딥러닝과 머신러닝 알고리즘 모델을 제작 및 설정할 수 있는 디자이너 툴 화면을 제공하며, 상기 디자이너 툴 화면은, 디자이너 툴 화면의 중심 부위에 배치되며, 디자인되고 있는 디자이너 모델을 작업자가 시각적으로 확인할 수있도록 하는 정사각형의 모델 시각화 창;상기 모델 시각화 창의 좌측 상단부에 배치되며, 디자이너 모델의 디자인에 필요한 레이어 및 함수의 개체를 종류별로 모아 각 열에 리스트화하는 개체 선택창;상기 모델 시각화 창의 우측에 배치되며, 중앙의 모델 시각화 창에 알고리즘의 순서에 따라 배치된 각 레이어들의 파라미터를 구성 및 설정할 수 있도록 하는 개체 설정창;상기 모델 시각화 창의 좌측 하부에 배치되며, 디자이너 모델의 디자인 중 발생하는 로깅 정보를 확인할 수 있는 로깅 확인창;상기 로깅 확인창의 하부에 배치되며, 디자인되고 있는 디자이너 모델을 편집할 수 있는 모델 작업창; 및 상기 모델 시각화 창의 하부에 배치되며, 디자인되고 있는 모델 시각화 창을 확대, 축소, 스패닝시킬 수 있는보기 제어창; 을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6항에 있어서, 상기 개체 선택창은 디자이너 모델을 디자인하는데 사용되는 활성화 함수, 컨볼루션 레이어, 코어 레이어, 풀링레이어 및 반복 레이어가 개체 그룹으로서 각 열에 리스트화되며, 작업자의 개체 그룹 선택에 따라 해당 개체그룹에 속한 세부 개체들을 개체 그룹의 하부 열에 리스트화하게 구조화되는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서, 상기 개체 선택창에서 제공하는 레이어는 박스 형태의 레이어 블록으로 구성되며, 상기 레이어 블록의 상부에 배치되며, 해당 레이어의 약어를 표시하는 레이어 이름 영역;상기 레이어 블록의 상측단 중심 부위와 좌측단 중심 부위에 각각 배치되며, 레이어 블록의 내부로 향하는 화살표로 표시되는 인풋 버튼;상기 레이어 블록의 하측단 중심 부위와 우측단 중심 부위에 각각 배치되며, 레이어 블록의 외부로 향하는 화살표로 표시되는 아웃풋 버튼;상기 레이어 블록의 하부에 배치되며, 해당 레이어의 알고리즘 내 레이어 순서를 표시하는 ID 영역; 및 상기 ID 영역의 우측에 배치되며, 작업자가 마우스로 클릭시 현재 레이어를 삭제할 수 있도록 제공되는 삭제 버공개특허 10-2024-0050875-4-튼; 을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8항에 있어서, 디자인되는 디자이너 모델에서 데이터의 흐름 방향을 결정하는 커넥션 라인으로 두 레이어 간의 출력과 입력을연결하며, 작업자는 상기 모델 시각화 창에 배치되는 레이어들에 대해 아웃풋 버튼과 인풋 버튼을 선택해 커넥션 라인으로연결함으로써 디자이너 모델에서 레이어 간 데이터의 흐름 방향을 결정하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6항에 있어서, 상기 개체 설정창은 작업자가 상기 모델 시각화 창에 배치된 레이어 및 함수 중 하나를 선택하면 선택된 레이어나 함수의 파라미터들을 설정할 수 있도록 파라미터별로 수 입력칸 또는 드롭다운 메뉴가 배치되며, 해당 파라미터별 드롭다운 메뉴에는 대표 파라미터 속성이 그대로 노출되며 화살표 버튼을 클릭시 활성화되어아래로 선택 파라미터 속성들이 펼쳐지는 방식으로 파라미터 속성을 선택하도록 하는 것을 특징으로 하는 장비운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 5항에 있어서, 상기 트레이닝 모듈은 작업자가 자신이 설계한 디자이너 모델을 학습시킬 수 있는 트레이닝 툴 화면을제공하며, 상기 트레이닝 툴 화면은, 상기 트레이닝 툴 화면의 중심 부위에 배치되며, 객관적인 함수 학습 알고리즘의 정확도를 그래프로 나타내는그래프 뷰어창;상기 그래프 뷰어창의 좌측에 배치되며, 대상 디자이너 모델의 학습 프로세스에 대한 학습 파라미터를 구성할수 있도록 하는 학습 설정창;상기 트레이닝 툴 화면의 중심에서 상기 그래프 뷰어창의 하부에 배치되며, 학습 프로세스에 대한 로깅 정보가표시되는 로깅 확인창; 및 상기 그래프 뷰어창의 우측에 배치되며, 테스트 데이터에서 학습된 모델의 성능을 표시하는 학습 평가창; 을 포함는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11항에 있어서, 상기 학습 설정창은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오고, 디자이너 모듈에서 설계되어 생성된 작업자의 디자이너 모델 파일을 불러오고, 학습 알고리즘을 선택하고, 학습 진행을 위한 매개 변수를 설정하고, 학습 스크립트를 선택할 수 있도록 구성되며, 상기 학습 설정창의 최상단에 배치되며, 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오는 데이터셋 설정창;공개특허 10-2024-0050875-5-상기 데이터셋 설정창의 하부에 배치되며, 학습할 디자이너 모델을 지정하는 모델 설정창;상기 모델 설정창의 하부에 배치되며, 학습 진행을 위한 파라미터를 설정하는 파라미터 설정창;상기 파라미터 설정창의 하부에 배치되며, 학습 스크립트를 구성하는 조기중지 설정창;상기 조기중지 설정창의 하부에 배치되며, 학습에 필요한 옵션을 설정하는 옵션 설정창;상기 옵션 설정창의 하부에 배치되며, 학습 완료 후 지원될 수 있는 유틸리티를 설정하는 유틸리티 설정창; 및 상기 유틸리티 설정창의 하부이면서 전체 학습 설정창의 최하단에 배치되며, 학습을 실행하는 학습 실행 버튼;을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "장비 운영 데이터를 활용한 현장 장비의 인공지능 관리를 수행하는 로컬의 작업 단말기를 지원하는 운영 서버로서, 정보통신망을 통해 작업 단말기에 접속하기 위한 통신부;작업 단말기 내 장비관리 구동 도구의 모델 관리부와 연동되어 장비관리 구동 도구의 디자이너 모듈의 모델 디자인 작업을 지원하는 모델링 지원부;작업 단말기 내 장비관리 구동 도구의 트레이닝 관리부와 연동되어 장비관리 구동 도구의 트레이닝 모듈의 모델학습 작업을 지원하는 트레이닝 지원부;작업 단말기 내 장비관리 구동 도구의 어플리케이션 관리부와 연동되어 장비관리 구동 도구의 어플리케이션 모듈의 모델 어플리케이션 작업을 지원하는 어플리케이션 지원부; 및 작업 단말기 내 장비관리 구동 도구의 유저 관리부와 연동되어 장비관리 구동 도구의 작업 상황을 확인하는 유저 지원부; 를 포함하며, 작업 단말기로부터 단계별 작업 중간결과물을 전송받고 관리자 파트에서 작업 중간결과물을 변경/수정/삭제/수정한 작업 지원결과물을 작업 단말기로 전달하는 것을 특징으로 하는 운영 서버."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13항에 있어서, 상기 모델링 지원부는 로컬 작업 단말기의 모델 관리부를 통해 현장 작업자가 설계하여 생성한 디자이너 모델을작업 중간결과물로서 수신하고, 관리자가 모델 및 가중치를 변경/수정/삭제/추가한 디자이너 모델을 작업 지원결과물로서 작업 단말기의 모델 관리부로 전달함으로써 기존 디자이너 모델에 반영되도록 하는 것을 특징으로하는 운영 서버."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 13항에 있어서, 상기 트레이닝 지원부는 로컬 작업 단말기의 트레이닝 관리부를 통해 작업 중간결과물로서 디자이너 모델을 수신하고, 작업 중간결과물인 디자이너 모델을 직접 학습시켜 트레인드 모델을 생성해 작업 지원결과물로서 작업단말기의 트레이닝 관리부로 전달함으로써 트레인드 모델에 반영되도록 하는 것을 특징으로 하는 운영 서버."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15항에 있어서, 상기 트레이닝 지원부는 로컬 작업 단말기의 요청에 따라 관리자의 지정된 학습 절차 관리하에 로컬에서 디자이공개특허 10-2024-0050875-6-너 모델이 자동적으로 학습되도록 지원하는 것을 특징으로 하는 운영 서버."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 13항에 있어서, 상기 어플리케이션 지원부는 로컬 작업 단말기의 요청에 따라 지정된 스케줄에 따른 트레인드 모델의 로컬 어플리케이션 과정을 제어하는 것을 특징으로 하는 운영 서버."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "(a) 데이터 수집 서버가 원거리의 설비 디바이스에서 전송되는 디바이스 데이터를 수집하여 관리하는 단계;(b) 작업 단말기가 디자이너 모듈을 실행시켜 장비 관리 및 예지보전의 수행을 위한 초기 디자이너 모델을 생성하는 단계;(c) 상기 작업 단말기가 트레이닝 모듈을 실행시키고 운영 서버로 디자이너 모델의 학습을 위한 데이터를 요청하여 상기 데이터 수집 서버로부터 모의 데이터와 학습 데이터를 수신해 디자이너 모델을 학습시켜 학습된 트레인드 모델을 생성하는 단계; 및 (d) 상기 작업 단말기가 상기 운영 서버로 트레인드 모델의 현장 어플리케이션을 위한 데이터를 요청하고 상기데이터 수집 서버로부터 설비 디바이스에 대한 실시간 디바이스 데이터를 수신해 이 트레인드 모델에 연동시켜현장 데이터에 따른 장비 관리 및 예지보전을 수행하는 단계; 를 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서, 상기 (b) 단계에서 상기 디자이너 모듈은 작업자가 딥러닝과 머신러닝 알고리즘 모델을 제작 및 설정할 수 있는디자이너 툴 화면을 제공하며, 상기 디자이너 툴 화면은, 디자이너 툴 화면의 중심 부위에 배치되며, 디자인되고 있는 디자이너 모델을 작업자가 시각적으로 확인할 수있도록 하는 정사각형의 모델 시각화 창;상기 모델 시각화 창의 좌측 상단부에 배치되며, 디자이너 모델의 디자인에 필요한 레이어 및 함수의 개체를 종류별로 모아 각 열에 리스트화하는 개체 선택창;상기 모델 시각화 창의 우측에 배치되며, 중앙의 모델 시각화 창에 알고리즘의 순서에 따라 배치된 각 레이어들의 파라미터를 구성 및 설정할 수 있도록 하는 개체 설정창;상기 모델 시각화 창의 좌측 하부에 배치되며, 디자이너 모델의 디자인 중 발생하는 로깅 정보를 확인할 수 있는 로깅 확인창;상기 로깅 확인창의 하부에 배치되며, 디자인되고 있는 디자이너 모델을 편집할 수 있는 모델 작업창; 및 상기 모델 시각화 창의 하부에 배치되며, 디자인되고 있는 모델 시각화 창을 확대, 축소, 스패닝시킬 수 있는보기 제어창; 을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19항에 있어서, 상기 개체 선택창은 디자이너 모델을 디자인하는데 사용되는 활성화 함수, 컨볼루션 레이어, 코어 레이어, 풀링공개특허 10-2024-0050875-7-레이어 및 반복 레이어가 개체 그룹으로서 각 열에 리스트화되며, 작업자의 개체 그룹 선택에 따라 해당 개체그룹에 속한 세부 개체들을 개체 그룹의 하부 열에 리스트화하게 구조화되는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 20항에 있어서, 상기 개체 선택창에서 제공하는 레이어는 박스 형태의 레이어 블록으로 구성되며, 상기 레이어 블록의 상부에 배치되며, 해당 레이어의 약어를 표시하는 레이어 이름 영역;상기 레이어 블록의 상측단 중심 부위와 좌측단 중심 부위에 각각 배치되며, 레이어 블록의 내부로 향하는 화살표로 표시되는 인풋 버튼;상기 레이어 블록의 하측단 중심 부위와 우측단 중심 부위에 각각 배치되며, 레이어 블록의 외부로 향하는 화살표로 표시되는 아웃풋 버튼;상기 레이어 블록의 하부에 배치되며, 해당 레이어의 알고리즘 내 레이어 순서를 표시하는 ID 영역; 및 상기 ID 영역의 우측에 배치되며, 작업자가 마우스로 클릭시 현재 레이어를 삭제할 수 있도록 제공되는 삭제 버튼; 을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 21항에 있어서, 디자인되는 디자이너 모델에서 데이터의 흐름 방향을 결정하는 커넥션 라인으로 두 레이어 간의 출력과 입력을연결하며, 작업자는 상기 모델 시각화 창에 배치되는 레이어들에 대해 아웃풋 버튼과 인풋 버튼을 선택해 커넥션 라인으로연결함으로써 디자이너 모델에서 레이어 간 데이터의 흐름 방향을 결정하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제 19항에 있어서, 상기 개체 설정창은 작업자가 상기 모델 시각화 창에 배치된 레이어 및 함수 중 하나를 선택하면 선택된 레이어나 함수의 파라미터들을 설정할 수 있도록 파라미터별로 수 입력칸 또는 드롭다운 메뉴가 배치되며, 해당 파라미터별 드롭다운 메뉴에는 대표 파라미터 속성이 그대로 노출되며 화살표 버튼을 클릭시 활성화되어아래로 선택 파라미터 속성들이 펼쳐지는 방식으로 파라미터 속성을 선택하도록 하는 것을 특징으로 하는 장비운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제 18항에 있어서, 상기 (c) 단계에서 상기 트레이닝 모듈은 작업자가 자신이 설계한 디자이너 모델을 학습시킬 수 있는 트레이닝툴 화면을 제공하며, 상기 트레이닝 툴 화면은, 상기 트레이닝 툴 화면의 중심 부위에 배치되며, 객관적인 함수 학습 알고리즘의 정확도를 그래프로 나타내는그래프 뷰어창;공개특허 10-2024-0050875-8-상기 그래프 뷰어창의 좌측에 배치되며, 대상 디자이너 모델의 학습 프로세스에 대한 학습 파라미터를 구성할수 있도록 하는 학습 설정창;상기 트레이닝 툴 화면의 중심에서 상기 그래프 뷰어창의 하부에 배치되며, 학습 프로세스에 대한 로깅 정보가표시되는 로깅 확인창; 및 상기 그래프 뷰어창의 우측에 배치되며, 테스트 데이터에서 학습된 모델의 성능을 표시하는 학습 평가창; 을 포함는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제 24항에 있어서, 상기 학습 설정창은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오고, 디자이너 모듈에서 설계되어 생성된 작업자의 디자이너 모델 파일을 불러오고, 학습 알고리즘을 선택하고, 학습 진행을 위한 매개 변수를 설정하고, 학습 스크립트를 선택할 수 있도록 구성되며, 상기 학습 설정창의 최상단에 배치되며, 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오는 데이터셋 설정창;상기 데이터셋 설정창의 하부에 배치되며, 학습할 디자이너 모델을 지정하는 모델 설정창;상기 모델 설정창의 하부에 배치되며, 학습 진행을 위한 파라미터를 설정하는 파라미터 설정창;상기 파라미터 설정창의 하부에 배치되며, 학습 스크립트를 구성하는 조기중지 설정창;상기 조기중지 설정창의 하부에 배치되며, 학습에 필요한 옵션을 설정하는 옵션 설정창;상기 옵션 설정창의 하부에 배치되며, 학습 완료 후 지원될 수 있는 유틸리티를 설정하는 유틸리티 설정창; 및 상기 유틸리티 설정창의 하부이면서 전체 학습 설정창의 최하단에 배치되며, 학습을 실행하는 학습 실행 버튼;을 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 딥러닝과 머신러닝 알고리즘 모델을 생 성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있으며, 알고리즘을 설계, 학습, 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 작업을 원격으로 지원해 항시 높은 성능의 모델을 현장에서 (뒷면에 계속)"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템 및 방법, 이를 지원하는 운영 서버에 관한 것으로, 더욱 상세하게는 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 딥러닝과 머신러 닝 알고리즘 모델을 생성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있으며, 알고리즘을 설계, 학습, 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 작업을 원격으로 지원해 항시 높 은 성능의 모델을 현장에서 운용할 수 있게 지원하며, 학습된 모델의 분석 결과에 따라 정확한 현장 장비의 관 리 및 예지보전 결과를 얻을 수 있어 장비의 수명 연장이 가능하고 유지관리 비용을 절감시킬 수 있고 생산품의 품질을 향상시킬 수 있는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템 및 방법, 이를 지원하 는 운영 서버에 관한 것이다."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 안전관제 또는 예지보전(豫知保全, Predictive Maintenance)이란 각각의 설비 상태를 정량적으로 파악하여 설비의 이상 상태나 앞으로 일어날 수 있는 사태를 미리 예상하고 적절하게 유지하고 보수하는 일을 말한다. 일반적으로, 제조업 분야의 생산 설비들은 고온, 진동 및 고전압 등에 노출되거나 반복적인 제조 공정을 수행해 야 함에 따라, 일정한 시기마다 정비를 함으로써 마모되거나 오래된 부품을 교체하고 고장이나 결함의 발생 여 부를 확인하는 유지보수 과정이 필수적으로 요구된다. 특히, 최근의 제조업 분야의 인력 감소와 고령화, 생산력 감소 등의 요인에 의해 자동화된 무인 설비인 자동화 설비의 도입이 증가하고 있는데, 이러한 자동화 설비의 고장이나 결함이 발생하기 전에 정비를 하여 적절한 유 지보수를 함으로써, 자동화 설비의 고장으로 인한 비용 손실을 줄이는 동시에 자동화 설비의 수명을 연장시킬수 있고 생산 라인의 중단으로 인한 손실도 최소화시킬 수 있다. 일반적으로 공장의 자동화 생산라인에서 기계 설 비는 정밀도의 저하와 생산 중단 등이 일어나지 않도록 운전상태를 양호하게 유지해야 한다. 모든 기계설비 및 부품은 사용함에 따라 마모 또는 파손 등으로 성능 저하 및 열화현상이 나타나지만 육안으로 인지하기 전까지는 이를 탐지 및 이상 징후를 감지하기가 어렵다. 한편, 종래에는 자동화 설비에 실제로 결함이나 고장이 발생되었는지의 여부와 무관하게 일정한 시기마다 정비 가 이루어짐에 따라 실제로 결함이 존재하지 않는 자동화 설비도 정비 대상에 포함되어 불필요하게 시간과 인력 이 소모되는 문제점이 있다. 아울러, 자동화 설비의 정비 과정에서 불필요하게 부품의 교체가 이루어지거나, 자동화 설비의 정비 시기 이전 에 그 자동화 설비에 고장이 발생하기도 하므로, 이에 의한 유지비용이 크게 발생하는 문제점이 있다. 최근 들어서는 장비의 운영 데이터를 수집하고 이를 통해 고장을 미리 예측하는 장치들이 개발되고 있다. 특히 기계설비의 고장은 시간과 비용에 있어 상당한 손실을 초래하므로 생산 중단없이 자동화되고 효율적으로 고장상 태를 예지 및 진단할 효율적인 방법이 필요하다. 최근 들어 스마트 공장 시스템에 대한 관심 및 수요가 높아져 공장 설비의 결함을 자동 시스템으로 모니터링하고 예측하는 기술에 딥러닝과 머신러닝 기술을 적용시키려는 시 도가 이루어지고 있다. 종래의 고장 예측 시스템들은 예지보전 솔루션 서비스를 제공하는 업체측의 솔루션 전문가가 설비를 방문해 예 지보전에 필요한 장비 데이터를 자의로 선별하고 이 선별된 데이터를 통해 예지보전 분석을 수행할 수 있는 알 고리즘을 임의로 설정해 솔루션 전문가의 시야에서 바라본 제한된 예지보전 분석 결과(이상 알림, 장애 예측, 품질 등)를 설비측으로 제공하는 방식으로 운영되고 있다. 하지만 이 같은 종래의 고장 예측 시스템들은 설비 현장의 상황에 대한 이해와 경험이 전무한 솔루션 전문가의 입장에서 장비 데이터의 자의적 선별과 알고리즘의 임의 설정이 이루어지기 때문에, 현장 상황과 동떨어진 예측 결과가 나오거나 중요도가 낮은 분석 결과를 제공하는 등의 문제가 있어 그 도입이 활발히 이루어지지 않고 있 는 실정이다. 이는 분석 알고리즘과 솔루션의 운영에 대한 이해도가 낮은 설비 업체와 현장 설비 상황에 대한 이해가 낮고 경 험이 전무한 솔루션 서비스 업체의 양자 관계에서 고장 예측 시스템의 도입이 솔루션 서비스 업체의 일방적인 주도로 이루어지고 있기 때문이며, 현실적으로 설비 업체의 작업자가 분석 알고리즘을 설계하고 현장에 적용하 기에는 큰 어려움이 있다. 또한, 최근에는 생산 장비를 유연화·최적화·효율화·지능화하여 생산비용 절감과 생산성을 향상하는 것을 목 표로 빠르게 제조공정이 자동화되고 있으며, 제조공정에서 생성되는 데이터를 기반으로 의사결정 하는 공장 운 영체계가 갖추어지고 있다. 데이터 기반의 제조공정 운영체계를 갖춤으로써 공정 내 발생하는 정보뿐 아니라 실 시간 데이터 분석으로 불량 예측과 품질 예측을 정확하고 신속하게 처리해야 하는데, 실제 현장에서는 여러 공 정이 복잡하게 작용하고 품질변수에 영향을 끼쳐 공정 변수와 품질 변수 사이의 관계가 비선형적인 경우가 대부 분이어서 현재까지의 품질 예측은 현장 작업자의 노하우와 경험에 크게 의존하고 있다는 문제점도 가지고 있다. 또한, 컴퓨터 비전은 컴퓨터에 시각을 부여해 이미지를 분석함으로써 유용한 정보를 생성하는 기술로써 인공지 능 기술이 접목되면서 각종 산업에서 괄목할만한 성과를 나타내고 있다. 특히, 머신비전은 4차 산업혁명을 견인 할 핵심 키워드로 손꼽히는 핵심기술로써 반도체, 디스플레이, 인쇄회로기판(PCB), 자동차, 배터리, 섬유, 음료, 제과 공장 등에서 검사, 위치, 측정 등을 위하여 반드시 필요한 기술이기도 하다. 하지만 복잡하고 다양 한 장비들로 이루어진 실제 작업 현장에서는 비전 어플리케이션이 단순히 통계적 방법을 통한 이미지 비교분석 에 그치고 있고 이종 장비 간 비전 데이터를 융합해 라인 전체를 관리할 수 없어 그 활용도와 정확도가 떨어진 다는 문제점도 가지고 있다."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로, 그 목적은 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 딥러닝과 머신러닝 알고리즘 모델을 생성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있으며, 알고리즘을 설계, 학습, 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 작업을 원격으로 지원해 항시 높은 성능의 모델을 현장에서 운용할 수 있게 지원하며, 학습된 모델의 분석 결과에 따라 정확한 현장 장비의 관리 및 예지보전 결과를 얻을 수 있어 장비의 수명 연장이 가능하고 유 지관리 비용을 절감시킬 수 있고 생산품의 품질을 향상시킬 수 있는 장비 운영 데이터를 활용한 현장 장비의 인 공지능 관리 시스템 및 방법, 이를 지원하는 운영 서버를 제공하는데 있다."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명에 따르면, 설비 현장에 설치 및 운영되며 디바이스 데이터를 전송하는 복수의 설비 디바이스; 상기 설 비 디바이스로부터 전송되는 디바이스 데이터를 수집 관리하고 딥러닝과 머신러닝 알고리즘 모델의 학습에 필요 한 학습 데이터셋과 모의 데이터셋을 관리하는 데이터 수집 서버; 및 설비 현장에 설치되어 작업자에 의해 운영 되며 내부에 설치되어 구동되는 장비관리 구동 도구를 통해 알고리즘 모델을 생성하고 학습시키며 상기 설비 디 바이스의 운영 데이터와 연동시켜 장비 관리 및 예지보전을 수행하는 작업 단말기; 를 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템을 제공한다. 바람직하게는, 딥러닝과 머신러닝 알고리즘 모델의 디자인에 필요한 레이어 및 함수를 상기 작업 단말기로 제공 하는 라이브러리 서버; 및 딥러닝과 머신러닝 알고리즘 모델의 현장 어플리케이션을 지원하는 운영 서버; 를 더 포함하는 것을 특징으로 한다. 바람직하게는, 상기 설비 디바이스가 전송하는 디바이스 데이터에는 설비 디바이스의 상태 및 작업 데이터와 데 이터베이스 정보가 포함되는 것을 특징으로 한다. 바람직하게는, 상기 작업 단말기는 상기 설비 디바이스를 관리하는 현장 작업자에 의해 조작되며, 장비관리 구 동 도구를 구동시켜 장비 관리 및 예지보전의 수행을 위한 초기 디자이너 모델을 생성하고, 상기 운영 서버로 디자이너 모델의 학습을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 학습 데이터셋과 모의 데이터셋 을 수신해 디자이너 모델을 학습시켜 트레인드 모델을 생성하며, 상기 운영 서버로 트레인드 모델의 현장 어플 리케이션을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 설비 디바이스에 대한 실시간 디바이스 데이 터를 수신해 이 트레인드 모델에 연동시켜 현장 데이터에 따른 장비 관리 및 예지보전을 수행하는 것을 특징으 로 한다. 바람직하게는, 상기 장비관리 구동 도구는, 장비 관리 및 예지보전의 수행을 위한 작업자의 초기 디자이너 모델 을 생성하는 디자이너 모듈; 상기 디자이너 모듈에서 생성된 작업자의 디자이너 모델을 학습시켜 학습된 트레인 드 모델을 생성하는 트레이닝 모듈; 및 상기 트레이닝 모듈에서 생성된 작업자의 트레인드 모델에 실시간 디바 이스 데이터를 연동시켜 장비 관리 및 예지보전을 수행하는 어플리케이션 모듈; 을 포함하는 것을 특징으로 한 다. 바람직하게는, 상기 디자이너 모듈은 작업자가 딥러닝과 머신러닝 알고리즘 모델을 제작 및 설정할 수 있는 디 자이너 툴 화면을 제공하며, 상기 디자이너 툴 화면은, 디자이너 툴 화면의 중심 부위에 배치되며, 디자인되고 있는 디자이너 모델을 작업자가 시각적으로 확인할 수 있도록 하는 정사각형의 모델 시각화 창; 상기 모델 시각 화 창의 좌측 상단부에 배치되며, 디자이너 모델의 디자인에 필요한 레이어 및 함수의 개체를 종류별로 모아 각 열에 리스트화하는 개체 선택창; 상기 모델 시각화 창의 우측에 배치되며, 중앙의 모델 시각화 창에 알고리즘의 순서에 따라 배치된 각 레이어들의 파라미터를 구성 및 설정할 수 있도록 하는 개체 설정창; 상기 모델 시각화 창의 좌측 하부에 배치되며, 디자이너 모델의 디자인 중 발생하는 로깅 정보를 확인할 수 있는 로깅 확인창; 상 기 로깅 확인창의 하부에 배치되며, 디자인되고 있는 디자이너 모델을 편집할 수 있는 모델 작업창; 및 상기 모 델 시각화 창의 하부에 배치되며, 디자인되고 있는 모델 시각화 창을 확대, 축소, 스패닝시킬 수 있는 보기 제 어창; 을 포함하는 것을 특징으로 한다. 바람직하게는, 상기 개체 선택창은 디자이너 모델을 디자인하는데 사용되는 활성화 함수, 컨볼루션 레이어, 코 어 레이어, 풀링 레이어 및 반복 레이어가 개체 그룹으로서 각 열에 리스트화되며, 작업자의 개체 그룹 선택에 따라 해당 개체 그룹에 속한 세부 개체들을 개체 그룹의 하부 열에 리스트화하게 구조화되는 것을 특징으로 한 다. 바람직하게는, 상기 개체 선택창에서 제공하는 레이어는 박스 형태의 레이어 블록으로 구성되며, 상기 레이어 블록의 상부에 배치되며, 해당 레이어의 약어를 표시하는 레이어 이름 영역; 상기 레이어 블록의 상측단 중심 부위와 좌측단 중심 부위에 각각 배치되며, 레이어 블록의 내부로 향하는 화살표로 표시되는 인풋 버튼; 상기 레이어 블록의 하측단 중심 부위와 우측단 중심 부위에 각각 배치되며, 레이어 블록의 외부로 향하는 화살표로표시되는 아웃풋 버튼; 상기 레이어 블록의 하부에 배치되며, 해당 레이어의 알고리즘 내 레이어 순서를 표시하 는 ID 영역; 및 상기 ID 영역의 우측에 배치되며, 작업자가 마우스로 클릭시 현재 레이어를 삭제할 수 있도록 제공되는 삭제 버튼; 을 포함하는 것을 특징으로 한다. 바람직하게는, 디자인되는 디자이너 모델에서 데이터의 흐름 방향을 결정하는 커넥션 라인으로 두 레이어 간의 출력과 입력을 연결하며, 작업자는 상기 모델 시각화 창에 배치되는 레이어들에 대해 아웃풋 버튼과 인풋 버튼 을 선택해 커넥션 라인으로 연결함으로써 디자이너 모델에서 레이어 간 데이터의 흐름 방향을 결정하는 것을 특 징으로 한다. 바람직하게는, 상기 개체 설정창은 작업자가 상기 모델 시각화 창에 배치된 레이어 및 함수 중 하나를 선택하면 선택된 레이어나 함수의 파라미터들을 설정할 수 있도록 파라미터별로 수 입력칸 또는 드롭다운 메뉴가 배치되 며, 해당 파라미터별 드롭다운 메뉴에는 대표 파라미터 속성이 그대로 노출되며 화살표 버튼을 클릭시 활성화되 어 아래로 선택 파라미터 속성들이 펼쳐지는 방식으로 파라미터 속성을 선택하도록 하는 것을 특징으로 한다. 바람직하게는, 상기 트레이닝 모듈은 작업자가 자신이 설계한 디자이너 모델을 학습시킬 수 있는 트레이닝 툴 화면을 제공하며, 상기 트레이닝 툴 화면은, 상기 트레이닝 툴 화면의 중심 부위에 배치되며, 객관적인 함수 학 습 알고리즘의 정확도를 그래프로 나타내는 그래프 뷰어창; 상기 그래프 뷰어창의 좌측에 배치되며, 대상 디자 이너 모델의 학습 프로세스에 대한 학습 파라미터를 구성할 수 있도록 하는 학습 설정창; 상기 트레이닝 툴 화 면의 중심에서 상기 그래프 뷰어창의 하부에 배치되며, 학습 프로세스에 대한 로깅 정보가 표시되는 로깅 확인 창; 및 상기 그래프 뷰어창의 우측에 배치되며, 테스트 데이터에서 학습된 모델의 성능을 표시하는 학습 평가창; 을 포함는 것을 특징으로 한다. 바람직하게는, 상기 학습 설정창은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오고, 디자이너 모듈에 서 설계되어 생성된 작업자의 디자이너 모델 파일을 불러오고, 학습 알고리즘을 선택하고, 학습 진행을 위한 매 개 변수를 설정하고, 학습 스크립트를 선택할 수 있도록 구성되며, 상기 학습 설정창의 최상단에 배치되며, 학 습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오는 데이터셋 설정창; 상기 데이터셋 설정창의 하부에 배치 되며, 학습할 디자이너 모델을 지정하는 모델 설정창; 상기 모델 설정창의 하부에 배치되며, 학습 진행을 위한 파라미터를 설정하는 파라미터 설정창; 상기 파라미터 설정창의 하부에 배치되며, 학습 스크립트를 구성하는 조 기중지 설정창; 상기 조기중지 설정창의 하부에 배치되며, 학습에 필요한 옵션을 설정하는 옵션 설정창; 상기 옵션 설정창의 하부에 배치되며, 학습 완료 후 지원될 수 있는 유틸리티를 설정하는 유틸리티 설정창; 및 상기 유틸리티 설정창의 하부이면서 전체 학습 설정창의 최하단에 배치되며, 학습을 실행하는 학습 실행 버튼; 을 포 함하는 것을 특징으로 한다. 한편 본 발명의 다른 측면에 따르면, 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리를 수행하는 로컬의 작업 단말기를 지원하는 운영 서버로서, 정보통신망을 통해 작업 단말기에 접속하기 위한 통신부; 작업 단말기 내 장비관리 구동 도구의 모델 관리부와 연동되어 장비관리 구동 도구의 디자이너 모듈의 모델 디자인 작업을 지원하는 모델링 지원부; 작업 단말기 내 장비관리 구동 도구의 트레이닝 관리부와 연동되어 장비관리 구동 도 구의 트레이닝 모듈의 모델 학습 작업을 지원하는 트레이닝 지원부; 작업 단말기 내 장비관리 구동 도구의 어플 리케이션 관리부와 연동되어 장비관리 구동 도구의 어플리케이션 모듈의 모델 어플리케이션 작업을 지원하는 어 플리케이션 지원부; 및 작업 단말기 내 장비관리 구동 도구의 유저 관리부와 연동되어 장비관리 구동 도구의 작 업 상황을 확인하는 유저 지원부; 를 포함하며, 작업 단말기로부터 단계별 작업 중간결과물을 전송받고 관리자 파트에서 작업 중간결과물을 변경/수정/삭제/수정한 작업 지원결과물을 작업 단말기로 전달하는 것을 특징으로 하는 운영 서버를 제공한다. 바람직하게는, 상기 모델링 지원부는 로컬 작업 단말기의 모델 관리부를 통해 현장 작업자가 설계하여 생성한 디자이너 모델을 작업 중간결과물로서 수신하고, 관리자가 모델 및 가중치를 변경/수정/삭제/추가한 디자이너 모델을 작업 지원결과물로서 작업 단말기의 모델 관리부로 전달함으로써 기존 디자이너 모델에 반영되도록 하는 것을 특징으로 한다. 바람직하게는, 상기 트레이닝 지원부는 로컬 작업 단말기의 트레이닝 관리부를 통해 작업 중간결과물로서 디자 이너 모델을 수신하고, 작업 중간결과물인 디자이너 모델을 직접 학습시켜 트레인드 모델을 생성해 작업 지원결 과물로서 작업 단말기의 트레이닝 관리부로 전달함으로써 트레인드 모델에 반영되도록 하는 것을 특징으로 한다. 바람직하게는, 상기 트레이닝 지원부는 로컬 작업 단말기의 요청에 따라 관리자의 지정된 학습 절차 관리하에 로컬에서 디자이너 모델이 자동적으로 학습되도록 지원하는 것을 특징으로 한다. 바람직하게는, 상기 어플리케이션 지원부는 로컬 작업 단말기의 요청에 따라 지정된 스케줄에 따른 트레인드 모 델의 로컬 어플리케이션 과정을 제어하는 것을 특징으로 한다. 한편 본 발명의 또 다른 측면에 따르면, (a) 데이터 수집 서버가 원거리의 설비 디바이스에서 전송되는 디바이 스 데이터를 수집하여 관리하는 단계; (b) 작업 단말기가 디자이너 모듈을 실행시켜 장비 관리 및 예지보전의 수행을 위한 초기 디자이너 모델을 생성하는 단계; (c) 상기 작업 단말기가 트레이닝 모듈을 실행시키고 운영 서버로 디자이너 모델의 학습을 위한 데이터를 요청하여 상기 데이터 수집 서버로부터 모의 데이터와 학습 데이 터를 수신해 디자이너 모델을 학습시켜 학습된 트레인드 모델을 생성하는 단계; 및 (d) 상기 작업 단말기가 상 기 운영 서버로 트레인드 모델의 현장 어플리케이션을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 설 비 디바이스에 대한 실시간 디바이스 데이터를 수신해 이 트레인드 모델에 연동시켜 현장 데이터에 따른 장비 관리 및 예지보전을 수행하는 단계; 를 포함하는 것을 특징으로 하는 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법을 제공한다. 바람직하게는, 상기 (b) 단계에서 상기 디자이너 모듈은 작업자가 딥러닝과 머신러닝 알고리즘 모델을 제작 및 설정할 수 있는 디자이너 툴 화면을 제공하며, 상기 디자이너 툴 화면은, 디자이너 툴 화면의 중심 부위에 배치 되며, 디자인되고 있는 디자이너 모델을 작업자가 시각적으로 확인할 수 있도록 하는 정사각형의 모델 시각화 창; 상기 모델 시각화 창의 좌측 상단부에 배치되며, 디자이너 모델의 디자인에 필요한 레이어 및 함수의 개체 를 종류별로 모아 각 열에 리스트화하는 개체 선택창; 상기 모델 시각화 창의 우측에 배치되며, 중앙의 모델 시 각화 창에 알고리즘의 순서에 따라 배치된 각 레이어들의 파라미터를 구성 및 설정할 수 있도록 하는 개체 설정 창; 상기 모델 시각화 창의 좌측 하부에 배치되며, 디자이너 모델의 디자인 중 발생하는 로깅 정보를 확인할 수 있는 로깅 확인창; 상기 로깅 확인창의 하부에 배치되며, 디자인되고 있는 디자이너 모델을 편집할 수 있는 모 델 작업창; 및 상기 모델 시각화 창의 하부에 배치되며, 디자인되고 있는 모델 시각화 창을 확대, 축소, 스패닝 시킬 수 있는 보기 제어창; 을 포함하는 것을 특징으로 한다. 바람직하게는, 상기 개체 선택창은 디자이너 모델을 디자인하는데 사용되는 활성화 함수, 컨볼루션 레이어, 코 어 레이어, 풀링 레이어 및 반복 레이어가 개체 그룹으로서 각 열에 리스트화되며, 작업자의 개체 그룹 선택에 따라 해당 개체 그룹에 속한 세부 개체들을 개체 그룹의 하부 열에 리스트화하게 구조화되는 것을 특징으로 한 다. 바람직하게는, 상기 개체 선택창에서 제공하는 레이어는 박스 형태의 레이어 블록으로 구성되며, 상기 레이어 블록의 상부에 배치되며, 해당 레이어의 약어를 표시하는 레이어 이름 영역; 상기 레이어 블록의 상측단 중심 부위와 좌측단 중심 부위에 각각 배치되며, 레이어 블록의 내부로 향하는 화살표로 표시되는 인풋 버튼; 상기 레이어 블록의 하측단 중심 부위와 우측단 중심 부위에 각각 배치되며, 레이어 블록의 외부로 향하는 화살표로 표시되는 아웃풋 버튼; 상기 레이어 블록의 하부에 배치되며, 해당 레이어의 알고리즘 내 레이어 순서를 표시하 는 ID 영역; 및 상기 ID 영역의 우측에 배치되며, 작업자가 마우스로 클릭시 현재 레이어를 삭제할 수 있도록 제공되는 삭제 버튼; 을 포함하는 것을 특징으로 한다. 바람직하게는, 디자인되는 디자이너 모델에서 데이터의 흐름 방향을 결정하는 커넥션 라인으로 두 레이어 간의 출력과 입력을 연결하며, 작업자는 상기 모델 시각화 창에 배치되는 레이어들에 대해 아웃풋 버튼과 인풋 버튼 을 선택해 커넥션 라인으로 연결함으로써 디자이너 모델에서 레이어 간 데이터의 흐름 방향을 결정하는 것을 특 징으로 한다. 바람직하게는, 상기 개체 설정창은 작업자가 상기 모델 시각화 창에 배치된 레이어 및 함수 중 하나를 선택하면 선택된 레이어나 함수의 파라미터들을 설정할 수 있도록 파라미터별로 수 입력칸 또는 드롭다운 메뉴가 배치되 며, 해당 파라미터별 드롭다운 메뉴에는 대표 파라미터 속성이 그대로 노출되며 화살표 버튼을 클릭시 활성화되 어 아래로 선택 파라미터 속성들이 펼쳐지는 방식으로 파라미터 속성을 선택하도록 하는 것을 특징으로 한다. 바람직하게는, 상기 (c) 단계에서 상기 트레이닝 모듈은 작업자가 자신이 설계한 디자이너 모델을 학습시킬 수 있는 트레이닝 툴 화면을 제공하며, 상기 트레이닝 툴 화면은, 상기 트레이닝 툴 화면의 중심 부위에 배치되며, 객관적인 함수 학습 알고리즘의 정확도를 그래프로 나타내는 그래프 뷰어창; 상기 그래프 뷰어창의 좌측에 배치 되며, 대상 디자이너 모델의 학습 프로세스에 대한 학습 파라미터를 구성할 수 있도록 하는 학습 설정창; 상기 트레이닝 툴 화면의 중심에서 상기 그래프 뷰어창의 하부에 배치되며, 학습 프로세스에 대한 로깅 정보가 표시 되는 로깅 확인창; 및 상기 그래프 뷰어창의 우측에 배치되며, 테스트 데이터에서 학습된 모델의 성능을 표시하는 학습 평가창; 을 포함는 것을 특징으로 한다. 바람직하게는, 상기 학습 설정창은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오고, 디자이너 모듈에 서 설계되어 생성된 작업자의 디자이너 모델 파일을 불러오고, 학습 알고리즘을 선택하고, 학습 진행을 위한 매 개 변수를 설정하고, 학습 스크립트를 선택할 수 있도록 구성되며, 상기 학습 설정창의 최상단에 배치되며, 학 습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오는 데이터셋 설정창; 상기 데이터셋 설정창의 하부에 배치 되며, 학습할 디자이너 모델을 지정하는 모델 설정창; 상기 모델 설정창의 하부에 배치되며, 학습 진행을 위한 파라미터를 설정하는 파라미터 설정창; 상기 파라미터 설정창의 하부에 배치되며, 학습 스크립트를 구성하는 조 기중지 설정창; 상기 조기중지 설정창의 하부에 배치되며, 학습에 필요한 옵션을 설정하는 옵션 설정창; 상기 옵션 설정창의 하부에 배치되며, 학습 완료 후 지원될 수 있는 유틸리티를 설정하는 유틸리티 설정창; 및 상기 유틸리티 설정창의 하부이면서 전체 학습 설정창의 최하단에 배치되며, 학습을 실행하는 학습 실행 버튼; 을 포 함하는 것을 특징으로 한다."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 딥러닝과 머신러닝 알고리즘 모델을 생성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있으며, 알고리즘을 설계, 학습, 어플리케이 션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 작업을 원격으로 지원해 항시 높은 성능의 모델을 현장에서 운용할 수 있게 지원하며, 학습된 모델의 분석 결과에 따라 정확한 현장 장비의 관리 및 예지보전 결 과를 얻을 수 있어 장비의 수명 연장이 가능하고 유지관리 비용을 절감시킬 수 있고 생산품의 품질을 향상시킬 수 있게 되는 효과가 있다."}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나, 이는 본 발명을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어 야 한다. 각 도면을 설명하면서 유사한 참조부호를 유사한 구성요소에 대해 사용하였다. 제1, 제2, A, B 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어 들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있 고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 기재된 항 목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함한다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 본 출원에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조 합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일 반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥 상 가지는 의미와 일치하는 의 미를 가지는 것으로 해석되어야 하며, 본 출원에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적 인 의미로 해석되지 않는다. 이하, 본 발명에 따른 바람직한 실시예를 첨부된 도면을 참조하여 상세하게 설명한다. 도 1은 본 발명의 실시예에 따른 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템을 설명하기 위 한 블럭 구성도이다. 먼저 본 발명에 따른 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템은, 설비 현장에 설치 및 운 영되며 정보통신망과 연결되어 디바이스 데이터를 전송하는 복수의 설비 디바이스, 정보통신망을 통해 상 기 설비 디바이스와 연결되어 설비 디바이스로부터 전송되는 디바이스 데이터를 수집 관리하고 딥러 닝과 머신러닝 알고리즘 모델의 학습에 필요한 학습 데이터셋과 모의 데이터셋을 관리하는 데이터 수집 서버 , 딥러닝과 머신러닝 알고리즘 모델의 디자인에 필요한 각종 레이어 및 함수를 제공하는 라이브러리 서버 , 딥러닝과 머신러닝 알고리즘 모델의 현장 어플리케이션을 지원하는 운영 서버 및 설비 현장에 설치 되어 작업자에 의해 운영되며 내부에 설치되어 구동되는 장비관리 구동 도구를 통해 알고리즘 모델을 생성 하고 학습시키며 상기 설비 디바이스의 운영 데이터와 연동시켜 장비 관리 및 예지보전을 수행하는 작업 단말기를 포함하여 구성될 수 있다. 상기 설비 디바이스는 다양한 설비 현장에 설치되어 있는 수많은 자동화 설비 및 장비(PLC, Controller, IOT 센서 등)이며, 실시간으로 상태 및 작업 데이터와 데이터베이스 정보(이하 디바이스 데이터라 함)를 생성하 여 전송하게 된다. 상기 데이터 수집 서버는 정보통신망을 통해 원거리의 상기 설비 디바이스에서 전송되는 디바이스 데 이터를 수집하여 원하는 형태(DB 저장, CSV 파일 저장, 실시간 서버 연결)로 가공하여 관리하게 된다. 또한 상기 데이터 수집 서버는 정보통신망을 통해 상기 작업 단말기가 생성한 디자이너 모델의 학습 을 위한 학습 데이터셋과 모의 데이터셋을 제공하게 된다. 상기 라이브러리 서버는 딥러닝과 머신러닝 알고리즘 모델의 디자인에 필요한 각종 레이어 및 함수를 제 공하게 된다. 딥러닝은 심층적인 네트워크 기술을 적용하여 문제를 해결하는 과정으로, 라이브러리 서버는 뉴런 네트워크를 구현하기 위해 만들어진 라이브러리이다. 여기에서 레이어는 뉴런 네트워크에서 사용되는 층을 의미한다. 또한 함수는 입력 선형으로 변환되어 적용되는 수학적 함수이다. 선형으로 조합이 이루어진 활성화 기능이 적용되어 수행되고 입력 신호를 출력 신호로 변환한다. 출력 신호는 함수(입력×가중치+바이어스)와 같 은 방정식을 가진다. 상기 가중치와 바이어스는 뉴런 네트워크 모델의 특성을 수행하는 중요한 매개 변수이며, 학습 모델은 최고의 가중치와 바이어스를 찾는 것을 의미한다. 여기에서 가중치는 입력값이 뉴런에 입력되면 곱 해진다. 또한 바이어스는 입력에 가중치를 곱한 결과에 추가되는 또 다른 매개 변수이다. 상기 라이브러리 서버는 뉴런 네트워크 기반의 모델을 개발, 학습 및 평가하기 위한 고급 신경망 API를 제 공한다. 상기 운영 서버는 상기 작업 단말기의 장비 관리 및 예지보전 수행을 위한 전체적인 서비스를 관리하 며, 작업 단말기와 데이터 수집 서버를 연동시켜 초기 디자이너 모델의 학습을 위한 학습 데이터셋과 모의 데이터셋 그리고 학습된 트레인드 모델의 현장 어플리케이션을 위한 실시간 디바이스 데이터가 작업 단말 기로 전달되도록 제어하게 된다. 상기 작업 단말기는 상기 설비 디바이스를 관리하는 현장 작업자에 의해 조작되며, 장비관리 구동 도 구를 구동시켜 장비 관리 및 예지보전의 수행을 위한 초기 디자이너 모델을 생성하고, 상기 운영 서버 로 디자이너 모델의 학습을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 학습 데이터셋과 모의 데이터셋을 수신해 디자이너 모델을 학습시켜 트레인드 모델을 생성하며, 상기 운영 서버로 트레인드 모델의 현장 어플리케이션을 위한 데이터를 요청하고 상기 데이터 수집 서버로부터 설비 디바이스에대한 실시간 디바이스 데이터를 수신해 이 트레인드 모델에 연동시켜 현장 데이터에 따른 장비 관리 및 예지보 전을 수행하게 된다. 도 2는 본 발명의 실시예에 따른 작업 단말기의 세부 구성을 설명하기 위한 블럭 구성도이다. 상기 작업 단말기는 정보통신망을 통해 데이터 수집 서버, 라이브러리 서버 및 운영 서버 와 접속하는 엔드 유저측의 컴퓨터로서, 정보통신망을 통해 데이터를 송, 수신할 수 있는 모든 정보통신 단말, 예컨대 스마트폰(smart phone), 태블릿(tablet) 컴퓨터, 데스크탑(desktop) 컴퓨터, 랩탑(laptop) 컴퓨터, 노트북, 워크스테이션(workstation), PDA (Personal Digital Assistants), 포터블(portable) 컴퓨터, 무선 전화기(wireless phone), 모바일 폰(mobile phone), e-북(e-book), PMP(portable multimedia player), 휴대용 게임기, 네비게이션(navigation) 장치, 블랙박스(black box), 디지털 카메라(digital camera), 텔레비전 (television), 웨어러블 디바이스(wearable device) 중 하나일 수 있으며, 이들에 제한되지 않는다. 또한, 상기 작업 단말기는 통상적인 시스템 구성 요소로서, URL (Uniform Resource Locator)에 근거하여 웹페이지를 불러오고, 이를 HTML(Hyper-Text Markup Language) 코드 해석하여 모니터에 디스플레이하는 웹브라 우저(browser) 프로그램 및 컴퓨터 시스템을 전체적으로 관리, 제어하는 운영 체제(OS : Operating System) 프 로그램을 포함한다. 이 같은 작업 단말기는 정보통신망에 접속하기 위한 통신부, 키보드나 마우스와 같은 입력 장치인 입 력부, 모니터와 같은 디스플레이 장치인 표시부, 디지털 데이터를 저장하는 디스크 드라이브나 메모 리와 같은 저장매체인 저장부, 그리고 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 딥러 닝과 머신러닝 알고리즘 모델을 생성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있으며 학습된 모델 의 분석 결과에 따라 정확한 장비 관리 및 예지보전 결과를 얻을 수 있도록 제공되는 장비관리 구동 도구 및 이들을 제어하기 위한 제어부를 포함하여 구성될 수 있다. 상기 장비관리 구동 도구는 작업 단말기의 저장부에 설치되어 구동될 수 있으나, 정보통신망을 통해 접속된 운영 서버가 웹상에서 제공하도록 구성될 수도 있다. 장비 관리 및 예지보전 구동에 사용되는 데이터나 그 결과물 또한 작업 단말기의 저장부뿐 아니라 운영 서버 측 스토리지에 저장되어 관 리되거나, 그로부터 액세스될 수 있다. 도 3을 참조하여 상기 장비관리 구동 도구에 대해 상세히 설명하기로 한다. 먼저 장비관리 구동 도구는 자사 장비의 상태, 배치, 설정 등을 가장 잘 알고 있는 현장 작업자가 앱을 구 동하여 현장 디바이스의 상태에 맞춰 알고리즘의 설계, 학습 및 어플리케이션까지 모든 과정을 직접 수행할 수 있도록, 장비 관리 및 예지보전의 수행을 위한 작업자의 초기 디자이너 모델을 생성하는 디자이너 모듈, 상기 디자이너 모듈에서 생성된 작업자의 디자이너 모델을 학습시켜 학습된 트레인드 모델을 생성하는 트 레이닝 모듈, 상기 트레이닝 모듈에서 생성된 작업자의 트레인드 모델에 실시간 디바이스 데이터를 연동시켜 장비 관리 및 예지보전을 수행하는 어플리케이션 모듈을 포함하여 구성될 수 있다. 또한 장비관리 구동 도구는 알고리즘을 설계하고 학습시키며 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 앱 작업을 지원할 수 있도록, 현장 작업자가 수행한 단계별 작업 중간결과물을 운영 서버로 전송하고 이에 대응해 운영 서버측의 관리자 파트에서 변경/수정/삭제/수정되는 작업 지원결 과물을 수신해 기존 작업 중간결과물에 반영하는 모델 관리부, 트레이닝 관리부, 어플리케이션 관리 부 및 유저 관리부를 더 포함하여 구성될 수 있다. 상기 모델 관리부는 현장 작업자가 설계하여 생성한 디자이너 모델을 작업 중간결과물로서 운영 서버(40 0)로 전송하고, 운영 서버측에서 전문적인 관리자가 모델 및 가중치를 변경/수정/삭제/추가한 디자이너 모 델을 작업 지원결과물로 수신하고 상기 디자이너 모듈로 전달해 기존 디자이너 모델에 반영하게 된다. 이 에 따라 현장 작업자는 고도의 알고리즘 지식과 프로그래밍 노하우가 없더라도 현장 상황이 반영되면서도 수준 높은 성능의 디자이너 모델을 완성할 수 있게 될 것이다. 상기 트레이닝 관리부는 알고리즘 학습의 절차에 익숙치 않은 현장 작업자가 학습시킬 디자이너 모델의 학 습 과정을 운영 서버로부터 지원받을 수 있게 한다. 상기 트레이닝 관리부는 현장 작업자의 요청에 따라 작업 중간결과물로서 디자이너 모델을 운영 서버로 전송하고, 로컬이 아닌 운영 서버측에서 디 자이너 모델을 학습시켜 전송하는 트레인드 모델을 작업 지원결과물로 수신하고 상기 트레이닝 모듈로 전 달해 트레인드 모델에 반영하게 된다. 이에 따라 현장 작업자는 고도의 알고리즘 학습의 절차를 알지 못하더라도 고도로 학습된 트레인드 모델을 완성할 수 있게 될 것이다. 또한 상기 트레이닝 관리부는 현장 작업자의 요청에 따라 운영 서버의 학습 절차 관리하에 로컬에서 디자이너 모델을 학습시킬 수 있다. 이때 데이터 학습은 운영 서버측의 관리자에 의해 설정된 일정(시간과 주기)에 따라 운영 서버의 제어하에 작업 단말기의 트레이닝 모듈에서 이루어지게 될 것이다. 상기 어플리케이션 관리부는 현장 작업자의 요청에 따른 운영 서버측의 스케줄 지정에 따라 트레인드 모델의 로컬 어플리케이션 과정을 제어받게 된다. 여기서 어플리케이션 관리부는 현장 작업자의 요청에 따 라 작업 중간결과물로서 트레인드 모델 및 현장 스케줄 정보를 운영 서버로 전송하고, 운영 서버측에 서 모델 운영 스케줄, 정확도, 신규 가중치 등을 작업 지원결과물로 수신하고 어플리케이션 모듈로 전달해 어플리케이션에 배포하게 된다. 상기 유저 관리부는 운영 서버측에서 작업자 유저의 추가/제거 등의 과정을 확인하고 유저별 권한을 확인할 수 있도록 정보를 제공하며 어플리케이션의 운용 이력 정보(학습 결과, 시간 및 실행자)를 운영 서버 에서 확인할 수 있도록 제공하게 된다. 먼저 상기 디자이너 모듈은 전문 프로그래밍 지식이 없는 작업자가 쉽고 간편하게 딥러닝과 머신러닝 알고 리즘 모델을 제작 및 설정할 수 있는 디자이너 툴 화면(DT)을 제공하며, 이 디자이너 툴 화면(DT)은 작업자가 드래그 앤 드롭 방식으로 알고리즘 모델을 구성하는 레이어들을 배치해 쉽고 효율적으로 디자이너 모델을 직접 디자인할 수 있도록 한다. 인공지능은 사고나 학습 등 인간이 가진 능력을 컴퓨터를 통해 구현하는 기술이다. 인공지능은 일반 컴퓨터의 처리 방식과는 다르게, 사람이 원하는 결과 데이터를 제공하면 인공지능이 알아서 처리 방법을 만들어 사람에게 처리 결과를 보여주게 된다. 그리고 인공지능은 머신러닝과 딥러닝으로 분류할 수 있으며, 머신러닝과 딥러닝의 가장 큰 차이점은 학습할 데 이터에 있다. 머신러닝은 학습에 필요한 특징(feature)을 사람이 직접 제공해야 하지만, 딥러닝은 스스로 특징 을 추출해서 데이터 학습에 적용할 수 있다. 딥러닝은 머신러닝의 한 분야로, 뇌의 뉴런과 유사한 정보 입력층 계층을 활용해 데이터를 학습하게 된다. 딥러 닝은 굉장한 양의 연산을 필요로 하기 때문에 하드웨어가 발달하지 않은 초기에는 어려웠지만 기술이 발달함에 따라 슈퍼컴퓨터를 기반으로 이러한 문제점을 해결했으며, 병렬 연산에 최적화된 GPU가 개발되면서부터 딥러닝 기술이 비약적으로 발전하게 되었다. 일반적으로 딥러닝은 ANN(Artificial Neural Network)에서 레이어의 숫자를 확장시킨 형태로 볼 수 있다. ANN에 서 인간의 두뇌에서 뉴런들이 작동하는 방식으로 작동한다고 하여 인공신경망(ANN)이라고 부르고 있다. NN(신경 망)은 인간의 두뇌와 같이 구조화되어 있으며, 인공적인 신경들로 구성되어 있다. 이것들은 노드라고 부르며, 이러한 노드들은 아래에서 설명되는 세 개의 레이어에서 서로 쌓여 있다. 입력 레이어(Input layer) : 입력 레이어는 입력 데이터를 수신하기위한 모델의 첫번째 레이어이며 뉴런 네트워 크 레이어의 한 유형이다. 출력 레이어(Output layer) : 이름에서 알 수 있듯이 출력은 뉴런 네트워크모델의 출력을 생성하는 하나의 레이 어이거나 모델의 마지막 레이어에 배치된다. 히든 레이어(Hidden layer) : 입력 레이어 및 외부 레이어를 제외하고 나머지 레이어는 거의 숨겨진 레이어이다. 이 숨겨진 레이어는 들어오는 데이터에 대해 특정 작업을 수행하고 생성된 출력을 다음 레이어로 전달하는 레이어이다. 데이터는 각 노드에 인풋의 형태로 정보를 제공한다. 노드는 인풋을 랜덤 가중치(Weight)와 곱하게 되고, 이렇 게 곱해진 값들에 바이어스(Bias)를 더하게 된다. 이러한 기본 네트워크 구조에서 중간에 있는 히든 레이어 부 분이 확장될 수록 또는 2개 이상의 히든 레이어를 가지게 되면 그것을 딥러닝이라고 부른다. 이 같이 딥러닝을 수행하는 신경망 알고리즘 모델은 C언어, 파이썬, 자바 등과 같은 복잡한 프로그래밍 언어로 작성되기 때문에 전문적인 프로그래머가 아닌 일반인은 신경망 알고리즘 모델을 만들 수 없었다. 실제 본 발명이 적용되는 장비 운영 데이터를 통한 장비 관리 및 예지보전의 필요성과 그 대상이 되는 현장의 설비 디바이스들을 가장 잘 이해하고 있는 사람은 당연 현장 작업자이지만, 현장 작업자는 전문적인 프로그래머 가 아니기 때문에 장비 관리 및 예지보전을 위한 신경망 알고리즘 모델의 작성에 조언자가 될 뿐 주된 프로그래밍 작업은 전문 프로그래머가 주도적으로 실시하게 된다. 이 같이 현장과 동떨어진 프로그래밍 상황은 결국 현 장 장비 관리 및 예지보전 시스템의 효율성과 필요성을 떨어뜨리게 주된 원인이 되고 있다. 본 발명에서는 현장 작업자가 쉽고 간편하게 알고리즘 모델을 제작 및 설정할 수 있는 디자이너 툴 화면(DT)을 상기 디자이너 모듈이 작업자의 디자이너 모델 작업 요청에 따라 제공하며, 이 디자이너 툴 화면(DT)은 작 업자가 드래그 앤 드롭 방식으로 알고리즘 모델을 구성하는 레이어들을 배치해 쉽고 효율적으로 디자이너 모델 을 직접 디자인할 수 있도록 한다는데 그 특징이 있다. 따라서 현장 작업자가 현장 상황에 대한 이해와 경험을 토대로 손쉽게 알고리즘 모델을 생성하고 학습시켜 현장 장비의 운영 데이터와 연동시킬 수 있게 된다. 상기 디자이너 모듈이 제공하는 디자이너 툴 화면(DT)에는 도 4에 도시된 바와 같이 개체 선택창(DT-1), 모델 시각화창(DT-2), 개체 설정창(DT-3), 로깅 확인창(DT-4), 보기 제어창(DT-5), 모델 작업창(DT-6)으로 구성 되며, 작업자가 목적, 현장에 설치되어 있는 장비, 현장 조건 등에 따라 적절한 알고리즘 모델을 만들 수 있도 록 제공된다. 디자이너 툴 화면(DT)은 전체적으로 수평 길이가 긴 직사각형으로 형성된다. 그리고 디자이너 툴 화면(DT)의 중심 부위에는 디자인되고 있는 디자이너 모델을 작업자가 시각적으로 용이하게 확인할 수 있도록 하는 정사각형의 모델 시각화 창(DT-2)이 배치된다. 상기 모델 시각화 창(DT-2)의 좌측 상단부에는 디자이너 모델의 디자인에 필요한 각종 레이어 및 함수의 개체를 종류별로 모아 각 열에 리스트화하는 개체 선택창(DT-1)이 배치된다. 상기 개체 선택창(DT-1)은 디자이너 모델을 디자인하는데 사용되는 활성화 함수(Activation Function), 컨볼루 션 레이어(Convolution Layer), 코어 레이어(Core Layer), 풀링 레이어(Pooling Layer) 및 반복 레이어 (Recurrent Layer)가 개체 그룹으로서 각 열에 리스트화되며, 작업자의 개체 그룹 선택에 따라 해당 개체 그룹 에 속한 세부 개체들을 개체 그룹의 하부 열에 리스트화하게 구조화되어 있다. 이 같은 레이어는 일반적으로 가 중치 입력 데이터를 수신 후 활성화 함수(비선형 함수)로 변환하고 그 값을 다음 레이어의 출력으로 전달하기 위하여 사각형(컨테이너)로 이미지화 된다. 상기 활성화 함수는 뉴런 네트워크 활성화 함수를 구현하며 딥러닝과 머신러닝에서 중요한 역할을 한다. 활성화 함수는 뉴런 네트워트 결과물을 결정하는 수학 방정식이다. 동일한 입력의 경우 다른 활성화 함수가 다른 출력 으로 생성된다. 활성화 함수는 현재 뉴런을 공급하는 입력과 다음 레이어로 가는 출력 사이의 수학적 \"게이트\" 로 설명될 수 있다. 상기 활성화 함수의 개체 그룹에는 'Linear', 'Softmax', 'Elu'(Exponent Linear Unit), 'Selu'(Scaled Exponetial Unit), 'Softplus', 'Soft Sign', 'ReLU'(Rectified Linear Unit), 'Tanh', 'Sigmoid', 'Hard Sigmoid', 'Exponential', 'Leaky ReLU'(Rectified Linear Unit), 'ReLU'(Parametric ReLU), 'Threshold ReLu' 와 같은 함수 레이어의 세부 파라미터 속성들이 포함되며, 이 파라미터 속성은 후술되는 개체 설정창(DT- 3)에서 선택될 수 있다. 상기 컨볼루션 레이어의 개체 그룹에는 'CNN1D Layer', 'CNN2D Layer', 'CNN3D Layer' 와 같은 레이어의 세부 개체들이 포함된다. 이 컨볼루션 레이어는 두 개의 함수 또는 정보 조각을 혼합하는 방법에 대한 규칙을 설명하는 수학적 컨볼루션 작업을 구현한다. 입력 데이터(또는 피처 맵)와 컨볼루션 커널이 함께 혼합(컨볼루션 작업)하여 다른 유형의 피 처 맵(변형된 피처 맵)을 형성한다. 이어서 컨볼루션 커널은 필터로 간주될 수 있으며, 컨볼루션을 계산하는 것 은 특정 종류의 정보(유용한 정보)에 대한 피처 맵을 포함하는 출력 데이터(필터링된 데이터)를 얻기 위해 입력 데이터에 필터를 적용하는 것과 유사하다. 상기 'CNN1D Layer'는 일반적으로 1차원 데이터에서 피처를 추출하는데 사용되는 유형의 레이어이다. 'CNN1D Layer'는 데이터를 부드럽게하거나 노이즈를 줄이는데 사용된다. 상기 'CNN2D Layer'는 일반적으로 이미지와 같은 2차원 데이터에서 피쳐를 추출하는 데 사용되는 레이어이다. 'CNN2D Layer'는 이미지의 특성을 학습하는 데 도움이되는 흐림, 선명함, 모서리 감지, 노이즈 감소 또는 기타 작업에 사용된다. 상기 'CNN3D Layer'는 일반적으로 이미지 시퀀스와 같은 3 차원 데이터에서 피쳐를 추출하는 데 사용되는 레이 어이다. 'CNN1D Layer', 'CNN2D Layer'와 유사하게 'CNN3D Layer'는 기계가 피쳐 맵(컨볼루션 연산의 출력)을통해 표현되는 입력 데이터의 특성을 학습하는데 도움을 준다. 실제로 입력 데이터에서 슬라이딩 방식의 윈도우 (컨볼루션 커널)와 연관되어 있는 컨볼루션 레이어의 이름이다. 입력 데이터의 차원에 영향을 받지 않는 1D, 2D 또는 3D의 그림으로 보여진다. 상기 코어 레이어의 개체 그룹에는 'Batch Normalize Layer', 'Dropout Layer', 'FC(Fully Connected) Layer', 'Flatten Layer', 'Permute Layer', 'Repeat Layer', 'Reshape Layer' 와 같은 레이어의 세부 개체들이 포함된 다. 상기 'Batch Normalize Layer'에서 배치 정규화(Batch Normalize)란 각각의 배치에서 이전 레이어의 활성화를 정규화하는 것을 의미한다. 예를 들어 각 배치를 통해 평균 활성화를 0에 가깝게 유지하고 활성화 표준 편차를 1에 가깝게 유지하는 변환을 적용하는 것이다. 이는 레이어에 대한 입력 분포의 변화를 줄이기 위함이다. 상기 'Dropout Layer'는 작은 데이터 집합에 대해 복잡한 모델을 학습하면 과다한 현상이 발생할 수 있어 학습 된 모델에서 성능이 저하된다. 그리고 'Dropout Layer'는 병렬로 상이한 아키텍처를 가진 많은 수의 뉴런 네트 워크를 학습시키는 것으로 간주되는 정규화 방법을 구현하는 것이다. 상기 'FC Layer'는 분류 또는 회귀를 위한 펜-얼티메이트 뉴런 네트워크 레이어다. \"출력 = 활성화(점(입력, 커 널) + 바이어스) 작업을 구현하는 것이다. 여기서 활성화는 활성화 인수로 전달된 요소별 활성화 함수이고, 커 널은 레이어에 의해 생성된 가중치 행렬이며, 바이어스는 생성된 바이어스 벡터이다. 레이어로 완전히 연결된 레이어의 목적은 회선 또는 풀링 레이어의 결과를 가져와 위와 같은 기능을 사용하여 입력을 레이블로 분류하는 것이다. 상기 'Flatten Layer'는 일반적으로 뉴런 네트워크 기반의 분류기에서 'FC Layer'로 공급될 수 있는 벡터 형식 을 2D 행렬 또는 피쳐 텐서로 전송하기 위해서 사용된다. 상기 'Permute Layer'는 주기 패턴에 따라 입력 치수를 변경하는 레이어이다. 상기 'Repeat Layer'는 지정된 축과 함께 지정된 시간에 입력 데이터를 반복하기위해 사용하는 레이어이다. 상기 'Reshape Layer'는 입력 데이터의 크기를 변경하여 다음 레이어에 공급할 출력에 적합한 크기를 조정하는 레이어이다. 상기 풀링 레이어의 개체 그룹에는 'Average Pooling 1D Layer', 'Average Pooling 2D Layer', 'Average Pooling 3D Layer', 'Max Pooling 1D Layer', 'Max Pooling 2D Layer', 'Max Pooling 3D Layer', 'Min Pooling 1D Layer', 'Min Pooling 2D Layer', 'Min Pooling 3D Layer' 와 같은 레이어의 세부 개체들이 포함된 다. 평균 풀링, 최대 풀링 및 최소 풀링은 3 가지 유형의 풀링 레이어이며 서로 다른 입력(1D, 2D, 3D)을 지원한다. 주목적은 표현의 공간적 크기를 줄임으로 네트워크에서 매개 변수와 계산을 해야하는 양을 줄이는 것이며, 풀링 레이어는 각 기능 맵에서 독립적으로 작동한다. 상기 'Average Pooling Layer(1D/2D/3D)'는 기능맵의 각 패치에 대한 평균값을 계산한 결과이다. 상기 'Max Pooling Layer(1D/2D/3D)'는 기능 맵에서 각 패치의 최대 값을 계산 한 결과이다. 상기 'Min Pooling Layer(1D/2D/3D)'는 기능 맵에서 각 패치의 최소값을 계산한 결과이다. 풀링 레이어는 기능맵을 다운 샘플링 할수 있는 방법을 제공한다. 출력 기능 맵은 입력 데이터의 기능 위치에 매우 민감하기 때문에 풀링 레이어는이 문제를 해결하기 위해 사용된다. 상기 반복 레이어의 개체 그룹에는 'RNN(Recurrent Neural Network) GRU(Gated Recurrent Units) Layer', 'RNN(Recurrent Neural Network) LSTM(Long Short-Term Memory) Layer', 'RNN(Recurrent Neural Network) Vanila Layer' 와 같은 레이어의 세부 개체들이 포함된다. 반복 레이어는 LSTM, GRU 및 RNN 층을 구현하는 것이며, 이러한 레이어는 타임시리즈 데이터, 비디오(이미지 시 퀀스), 사운드, 오디오, 문장 텍스트 와 같은 순차적 데이터의 경우 데이터를 모델링하는데 사용된다. 위 계층 은 RNN Vanila계층, LSTM(Long Short-Term Memory) 계층 및 GRU(Gated Recurrent Units) 계층을 구현하기 위함 이다. 상기 'RNN(Recurrent Neural Network) Vanila Layer'는 피드백 루프가 있는 표준 Recurrent Neural Network 레 이어이다. 이 레이어를 통해 시간이 지남에 따라 메모리에 정보를 유지하는 데 도움이된다. 상기 'RNN(Recurrent Neural Network) LSTM(Long Short-Term Memory) Layer'는 표준 유닛 이외의 특수 유닛을 위해 사용되는 RNN 유형이다. LSTM에는 정보를 오랫동안 메모리에 유지할 수 있는 메모리셀이 있으며, LSTM은 새롭게 추가되는 게이트의 작동으로 발생될 수 있는 문제(없어지거나 사라짐)를 처리하는 데 도움이 된다. 상기 'RNN(Recurrent Neural Network) GRU(Gated Recurrent Units) Layer'는 LSTM과 비슷하지만 단순환 구조에 사용한다. 정보 흐름을 제어하는 게이트 세트가 포함되어 있다. 작업자는 마우스와 같은 입력부를 통해 개체 선택창(DT-1)에서 개체 그룹과 세부 개체를 차례로 클릭하여 선택하고, 선택된 개체를 드래그 앤 드롭(drag & drop) 방식으로 이동시키거나 더블클릭해서 상기 모델 시각화 창(DT-2)에 배치시킴으로써 디자이너 모델의 생성할 수 있게 된다. 특히 작업자는 복잡한 프로그래밍 언어를 깊이 있게 이해하지 못하더라도 좌측 상단부의 개체 선택창(DT-1)에서 디자이너 모델의 구성에 필요한 각종 레이어 및 함수의 개체를 클릭해 선택하고, 선택된 개체를 시야의 중심에 있는 모델 시각화 창(DT-2)에 가져다 놓는 직관적인 동작만으로 알고리즘의 레이어 배치가 가능해 쉽고 간편하 게 알고리즘 모델을 디자인할 수 있게 된다. 여기에서 상기 개체 선택창(DT-1)에서 제공하는 레이어(L)는 도 5에 도시된 바와 같은 직관적인 구조를 가진다. 도 5의 (a)를 참조하면, 이 같은 레이어(L)는 박스 형태의 레이어 블록(L-1) 내에 레이어 이름 영역(L-2), 인풋 버튼(L-3), 아웃풋 버튼(L-4), ID 영역(L-5) 및 삭제 버튼(L-6)을 가진다. 상기 레이어 블록(L-1)은 활성 모듈로 표현되어 내부에 이름, ID, 입력, 출력, 등의 몇 가지 정보를 제공한다. 또한 작업자는 하이라이트와 상호 작용하고 레이어의 전체 이름을 보여주며, 마우스를 사용하여 삭제할 수 있다. 상기 레이어 이름 영역(L-2)은 레이어 블록(L-1)의 상부에 배치되며, 해당 레이어의 약어를 표시하게 된다. 상기 인풋 버튼(L-3)은 레이어 블록(L-1)의 상측단 중심 부위와 좌측단 중심 부위에 각각 배치되며, 이 같은 입 력은 내부로 향하는 화살표로 표시된다. 상기 아웃풋 버튼(L-4)은 레이어 블록(L-1)의 하측단 중심 부위와 우측단 중심 부위에 각각 배치되며, 이 같은 출력은 외부로 향하는 화살표로 표시된다. 상기 ID 영역(L-5)은 레이어 블록(L-1)의 하부에 배치되며, 해당 레이어의 알고리즘 내 레이어 순서를 표시하게 된다. 상기 삭제 버튼(L-6)은 상기 ID 영역(L-5)의 우측에 배치되며, 작업자가 마우스로 클릭시 현재 레이어를 삭제할 수 있도록 제공되며, 트리거 및 전체 층을 삭제할 수 있다. 또한 도 5의 (b)를 참조하면, 커넥션 라인(L-7)으로 두 레이어 간의 출력과 입력을 연결할 수 있다. 이 같은 커 넥션 라인(L-7)은 디자인되는 디자이너 모델에서 데이터의 흐름 방향을 결정하게 된다. 작업자는 상기 모델 시 각화 창(DT-2)에 배치되는 레이어들에 대해 아웃풋 버튼(L-4)과 인풋 버튼(L-3)을 선택해 커넥션 라인(L-7)으로 연결함으로써 디자이너 모델에서 레이어 간 데이터의 흐름 방향을 결정하게 된다. 상기 모델 시각화 창(DT-2)으로 이동된 레이어 블록(L-1)들은 붉은색 화살표 선으로 다른 레이어 블록(L-1)과 연결시킬 수 있으며 이러한 연결은 뉴런 네트워크의 데이터 흐름을 보여준다. 순차적인 알고리즘 모델에서 입력 데이터는 레이어 블록(L-1)에 공급되고 다음 레이어 블록(L-1)으로 전송하도록 변환이 된다. 이 같은 레이어 블 록(L-1) 간 입력과 출력의 연결은 상술한 커넥션 라인(L-7)으로 두 레이어 블록(L-1)의 아웃풋 버튼(L-4)과 인 풋 버튼(L-3)을 선택해 연결함으로써 이루어지게 되며, 연결을 하게 되면 화살표 모양이 커넥션 라인(L-7)에 자 동으로 생성되어 연결 상황을 작업자가 시각적으로 확인할 수 있게 된다. 이 같은 모델 시각화 창(DT-2)은 레이어 블록, 레이어 블록의 순서 및 레이어 블록 간의 연결 방식, 내부 매개 변수의 정렬을 통해 뉴런 네트워크의 아키텍처만을 반영한다 상기 모델 시각화 창(DT-2)의 우측에는 중앙의 모델 시각화 창(DT-2)에 알고리즘의 순서에 따라 배치된 각 레이 어들의 모든 파라미터(Parameter)를 구성 및 설정할 수 있는 개체 설정창(DT-3)이 배치된다. 여기에서 파라미터는 각 뉴런 네트워크 레이어의 매개 변수 또는 레이어 수, 각 레이어의 뉴런 수, 레이어 유형, 커널 크기, 활성화 함수 유형, 초기화 유형, 학습 속도, 에폭(epochs) 수와 같은 학습 알고리즘 매개 변수 등을 의미한다. 작업자가 상기 모델 시각화 창(DT-2)에 배치된 레이어 및 함수 중 하나를 선택하면, 이에 상응하여 상기 개체 설정창(DT-3)에는 모델 시각화 창(DT-2)에서 선택된 레이어나 함수의 파라미터들을 설정할 수 있도록 파라미터 별로 수 입력칸 또는 드롭다운 메뉴가 배치된다. 해당 파라미터별 드롭다운 메뉴에는 대표 파라미터 속성이 그 대로 노출되며 화살표 버튼을 클릭시 활성화되어 아래로 다양한 선택 파라미터 속성들이 펼쳐지는 방식이다. 이 드롭다운 메뉴로 파라미터별로 대표 파라미터 속성을 축약해 보여주고 다른 파라미터 속성을 선택할 수 있도록 함으로써 초기 화면에서 보이는 메뉴의 영역을 좀 더 줄일 수 있고 하나의 레이어나 함수가 많은 수의 파라미터 를 가지더라도 제한된 개체 설정창(DT-3)의 영역 내에서 리스트화할 수 있게 될 것이며, 작업자는 드롭다운 메 뉴를 클릭하고 파라미터 속성을 선택하는 과정에서 직관적으로 파라미터의 의미를 이해할 수 있게 될 것이다. 먼저 도 6을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 활성화 함수가 선택되면, 개체 설정창 (DT-3)에는 드롭다운 메뉴의 대표 파라미터 속성으로 'Linear' 가 표시되고 활성화시 아래로 'Softmax', 'Elu'(Exponent Linear Unit), 'Selu'(Scaled Exponetial Unit), 'Softplus', 'Soft Sign', 'ReLU'(Rectified Linear Unit), 'Tanh', 'Sigmoid', 'Hard Sigmoid', 'Exponential', 'Leaky ReLU'(Rectified Linear Unit), 'ReLU'(Parametric ReLU), 'Threshold ReLu' 와 같은 선택 파라미터 속성들이 펼쳐지게 된다. 활성화 함수는 활성화 계층의 구성이며, 활성화 함수은 입력에 대한 비선형 변환을 수행하기보다 더 복잡한 작 업을 학습하고 수행할 수 있다. 활성화 함수는 인공적인 신경망에서 매우 중요한 특징이고 기본적으로 뉴런의 활성화 여부를 결정한다. 일반 공식은 Y = 활성화 (Sum (weight * input) + bias)이다. 활성화 함수는 입력 데 이터를 처리하는 비선형 변환이고 변환된 출력은 입력의 형태로 다음 뉴런 층으로 전송된다. 먼저 파라미터 속성 'Linear'는 (Sum (weight * input) + bias)의 결과를 유지하고자 할 때 선형 기능을 적용 하는 것으로, 선형 함수는 직선과 유사한 정식을 가지고 있다. 선형 활성화 함수는 한 곳에서 레이어의 출력으 로 사용될 수 있다. 다음으로 파라미터 속성 'Softmax'는 비선형 함수로 시그무이드 함수의 일종이지만 분류 문제를 처리하려고 할 때 편리하다. 일반적으로 여러 클래스를 처리하려고 할 때 사용할 수 있으며, 'softmax' 함수는 0과 1 사이의 각 클래스에 대한 출력을 짜내고 출력의 합으로 나눈다. 'SoftMax' 함수는 분류기의 출력 레이어에서 실제로 각 입력의 클래스를 정의할 확률을 달성하는 데 사용한다. 다음으로 파라미터 속성 'Elu'는 일부 실험 결과는 'Elu'가 다른 비전 데이터 세트에서 다른 활성화 함수보다 현저히 뛰어나다. 'ELu'를 사용하면 가까운 평균 활성화를 얻을 수 있는 지수 함수를 구성할 수 있다. 그 방정 식은 아래의 수학식 1과 같이 나타난다. 수학식 1"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "다음으로 파라미터 속성 'Selu'의 활성화는 'Elu' 기능의 출력과 감마(스케일)를 곱하여 양의 입력에 대해 1보 다 큰 기울기를 보장해 준다. 그 방정식은 아래의 수학식 2와 같이 나타난다. 수학식 2"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다음으로 파라미터 속성 'Softplus'는 전통적으로 사용되고 있는 기존 함수들의 대체로 사용될 수 있으며, 그 방정식은 아래의 수학식 3과 같이 나타난다. 수학식 3"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "다음으로 파라미터 속성 'Soft Sign'은 'Tanh' 활성화 함수보다 매끄러우며 더 빠른 학습의 결과를 도출할 수 있다. 그 방정식은 아래의 수학식 4와 같이 나타난다. 수학식 4"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "다음으로 파라미터 속성 'ReLU'는 비선형 함수로 가장 널리 사용되는 활성화 함수이며 주로 뉴런 네트워크의 숨 겨진 레이어에서 사용된다. 즉 오류를 쉽게 역 전파할 수 있으며 'ReLU' 함수에 의해 활성화되는 여러 뉴런 레 이어가 있다. 'ReLu' 함수는 간단한 수학 연산을 포함하므로 'Tahn' 및 'Sigmoid' 보다 복잡하지 않다. 한 번에 몇 개의 뉴런만 활성화되어 네트워크가 희박해져 계산이 효율적이고 쉬워진다. 그 방정식은 아래의 수학식 5와 같이 나타난다. 수학식 5"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "다음으로 파라미터 속성 'Tanh'은 'sigmoid' 함수보다 더 잘 작동하며 탄젠트 쌍곡선 함수로 알려져 있다. 실제 로 수학적으로 시프트 된 'Sigmoid' 함수 버전으로 둘 다 비슷하며 서로 파생될 수 있다. 일반적으로 값이 -1에 서 1 사이이기 때문에 숨겨진 레이어에 대한 평균이 0 또는 매우 가깝기 때문에 뉴런 네트워크의 숨겨진 레이어 에서 사용이 된다. 이를 통해 평균을 가깝게 하여 데이터를 중심에 두는 데 도움이 된다. 이렇게 할 경우 다음 레이어를 훨씬 쉽게 학습할 수 있다. 그 방정식은 아래의 수학식 6과 같이 나타난다. 수학식 6"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "다음으로 파라미터 속성 'Sigmoid'는 선형 함수가 아니며 'S' 모양으로 플롯 되는 함수이다. x값은 -2에서 2 사 이이며 y값은 매우 가파르다. 즉, x의 작은 변화는 y값에 큰 변화를 가져온다. 일반적으로 결과가 0 또는 1인 이진 분류의 출력 레이어에서 사용된다. 'sigmoid' 함수의 값이 0에서 1 사이이므로 값이 0.5보다 크고 0이면 결과가 1로 쉽게 예측할 수 있다. 이것이 주된 이유이며, 'sigmoid' 함수는 온/오프 스위치(LSTM/GRU) 재발 뉴 런 네트워크로 사용된다. 그 방정식은 아래의 수학식 7과 같이 나타난다. 수학식 7"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "다음으로 파라미터 속성 'Hard Sigmoid'는 인공 지능, 특히 컴퓨터 비전 및 인공 신경 네트워크에서 'Sigmoid' 함수 대신 사용되는 부드러운 함수다. 'Sigmoid' 함수의 기본 모양을 유지하지만 0에서 1로 증가시 더 간단한 함수, 특히 조각 선형 함수 또는 조각 상수 함수를 사용한다. 계산 속도가 정밀도보다 더 중요한 곳에서 선호한 다. 'Hard Sigmoid' 함수가 RNN의 GRU 계층 인 lin LSTM을 사용할 수 있는 이유이다. 다음으로 파라미터 속성 'Exponential'은 지수 활성화 함수로 y = exp (x)와 같은 지수 방정식으로 구성된다. 다음으로 파라미터 속성 'Leaky ReLU'는 음수 입력 시 함수가 0이 아닐 때 작은 음수로 대신 반환된다. 모든 값이 음수이기 때문에 'ReLU' 함수에 의해 활성화되지 않으면 \"dying Relu\"라는 문제에 직면할 수 있다. 즉, 음 의 입력 영역에는 작은 음의 기울기가 있다. 그 방정식은 아래의 수학식 8과 같이 나타난다. 수학식 8"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "다음으로 파라미터 속성 'ReLU'는 다른 매개 변수(무게 및 바이어스와 같은)에 더 잘 적용할 수 있다. 그 방정 식은 아래의 수학식 9와 같이 나타난다. 수학식 9"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "다음으로 파라미터 속성 'Threshold ReLu'는 임계값 'ReLu' 활성화 함수이다. 다음으로 도 7을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 컨볼루션 레이어의 'CNN1D Laye r'가 선택되면, 개체 설정창(DT-3)에는 'Filters', 'Kernel Size', 'Strides', 'Padding', 'Dilation Rate', 'Activation', 'Use Bias', 'Kernel Initizalizer', 'Bias Initializer', 'Kernel Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Bias Constratint'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 'CNN1D Layer'는 시간적 컨볼루션에 사용한다. 이 레이어에는 단일 공간(또는 시간적) 차원에 걸쳐 레이어 입력 으로 컨볼루션 커널이 결합되어 출력 텐서를 생성한다. UseBias가 True이면 바이아스 벡터가 생성되어 출력에 추가된다. 활성화가 없음이 아닌 경우 출력(output)에도 적용된다. Input Shape는 3D 텐서(배치, 채널, 단계)이 고, Output Shape는 3D 텐서(배치, 필터, new_step)이다. 상기 'Filters'는 필터 수 또는 출력 공간의 차원이며 유형은 정수이다. 상기 'Kernel Size'는 컨볼루션 창의 길이이며 유형은 정수이다. 상기 'Strides'는 컨볼루션의 폭이며 유형은 정수이다. 상기 'Padding'는 패딩의 유형으로, 드롭다운 메뉴로 'Valid(패딩이 없음)', 'Same(하프 패딩)', 'Full(최대 패딩)'의 세부 파라미터 속성을 가진다. 상기 'Dilation Rate'는 확장된 회선에 사용되는 팽창률이며, 유형은 정수이다. 상기 'Activation'는 사용할 활성화 함수 유형이며 드롭다운 메뉴로 활성화 함수의 파라미터 속성을 표시한다. 상기 'Use Bias'는 레이어가 바이어스 벡터를 사용하는지 여부이며 유형은 부울이다. 상기 'Kernel Initizalizer'는 커널 가중치 매트릭스의 초기화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Bias Initializer'는 바이아스 벡터의 초기화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Kernel Regularizer'는 커널 가중치 매트릭스에 적용되는 레귤레이터가 드롭다운 메뉴로 활성화된다. 상기 'Bias Regularizer'는 바이아스 벡터에 적용되는 정규화 함수유형이 드롭다운 메뉴로 활성화된다. 상기 'Activity Regularizer'는 레이어의 출력에 적용되는 정규화 함수유형이 드롭다운 메뉴로 활성화된다. 상기 'Kernel Constraint'는 커널 가중치 매트릭스에 적용되는 제한함수가 드롭다운 메뉴로 활성화된다. 상기 'Bias Constratint'는 바이아스 벡터에 적용되는 제한함수가 드롭다운 메뉴로 활성화된다. 다음으로 도 8을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 컨볼루션 레이어의 'CNN2D Laye r'가 선택되면, 개체 설정창(DT-3)에는 'Filters', 'Kernel Size', 'Strides', 'Padding', 'Dilation Rate', 'Activation', 'Use Bias', 'Kernel Initizalizer', 'Bias Initializer', 'Kernel Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Bias Constratint'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 'CNN2D Layer'는 이미지에 대한 공간적 컨볼루션에 사용한다. 이 레이어는 출력 텐서를 생성하기 위해 계층 입 력과 관련이 있는 컨볼루션 커널을 만든다. CNN은 유용한 정보를 얻기 위해 입력을 필터링(연결)하는 계층으로 구성된다. 이 컨볼루션 레이어에는 매개 변수(커널)가 있어 이러한 필터는 함수 선택없이 해당 작업에 가장 유 용한 정보를 추출하기 위해 자동으로 분류된다. CNN은 이미지 처리 작업에 더 적합하다. Input Shape는 4D 텐서 (배치, 채널, 행, 열)이고, Output Shape는 4D 텐서(배치, 필터, 새로운 행, 새로운 열)이다. 'CNN2D Layer'에 대한 개체 설정창(DT-3)의 파라미터 설정은 상술한 'CNN1D Layer'과 유사하므로 구체적인 설명 은 생략한다. 다음으로 도 9를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 컨볼루션 레이어의 'CNN3D Laye r'가 선택되면, 개체 설정창(DT-3)에는 'Filters', 'Kernel Size', 'Strideges', 'Padding', 'Dilation Rate', 'Activation', 'Use Bias', 'Kernel Initizalizer', 'Bias Initializer', 'Kernel Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Bias Constratint'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 'CNN3D Layer'는 볼륨에 대한 공간적 컨볼루션에 사용한다. 이 레이어는 출력 텐서를 생성하기 위해 계층 입력 과 관련이 있는 컨볼루션 커널을 만든다. 'UseBias'가 True이면 바이아스 벡터가 생성되어 출력에 추가된다. 마 지막으로 활성화가 없음이 아닌 경우 출력에도 적용이 된다. Input Shape는 5D 텐서(배치, 채널, dim1, dim2, dim3)이고, Output Shape는 5D 텐서(배치, 채널, new_conv_dim1, new_conv_dim2, new_conv_dim3)이다. 'CNN3D Layer'에 대한 개체 설정창(DT-3)의 파라미터 설정은 상술한 'CNN1D Layer' 및 'CNN2D Layer'과 유사하 므로 구체적인 설명은 생략한다. 다음으로 도 10을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Batch Normalize Layer'가 선택되면, 개체 설정창(DT-3)에는 'Axis', 'Momentum', 'Epsilon', 'Center', 'Scale', 'Beta Initializer', 'Gamma Initializer', 'Moving Mean Initializer', 'Moving Variance Initializer', 'Beta Regularizer', 'Gamma Regularizer', 'Beta Constraint', 'Gamma Constraint'의 파라미터들이 열 방향으로 각 각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미 터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 'Batch Normalize Layer'는 각 배치에서 이전 레이어의 활성화를 정규화한다. 또한 평균 활성화를 0에 가깝게 유지하고 활성화 표준 편차를 1에 가깝게 유지하는 변환을 적용한다. 상기 'Axis'은 정규화 해야하는 축(일반적으로 형상 축)이며 유형은 정수이다. 상기 'Momentum'은 이동하는 평균의 모넨텀이며 유형은 플로트이다. 상기 'Epsilon'은 0으로 나누지 않고 분산된 것이 플로트에 추가된 작은 플로트이다. 상기 'Center'는 정규화 된 텐서에 베타 오프셋을 추가할지에 대한 여부이고 유형은 부울이다. 상기 'Scale'은 감마를 곱할지에 대한 여부고 유형은 부울이다. 상기 'Beta Initializer'는 베타 가중치의 이니셜 라이저가 드롭다운 메뉴로 활성화된다. 상기 'Gamma Initializer'는 감마 비중의 초기화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Moving Mean Initializer'는 이동 평균의 초기화 타입이 드롭다운 메뉴로 활성화된다. 상기 'Moving Variance Initializer'는 이동분산의 초기화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Beta Regularizer'는 베타 가중치의 정규화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Gamma Regularizer' 감마 가중치의 정규화 유형이 드롭다운 메뉴로 활성화된다. 상기 'Beta Constraint'는 베타 가중치의 제한 조건이 드롭다운 메뉴로 활성화된다. 상기 'Gamma Constraint'는 감마 가중치의 제한 조건이 드롭다운 메뉴로 활성화된다. 다음으로 도 11을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Dropout Layer' 가 선택되면, 개체 설정창(DT-3)에는 'Rate'의 파라미터가 표시된다. 이 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시된다. 'Dropout Layer'는 학습시간 동안 업데이트된 입력단위의 비율을 임의로 0으로 설정한다. 이와 같은 설정은 과 적합을 방지하기 위하여 딥러닝과 머신러닝에서 많이사용되고 있다. 학습시간 동안, 드롭아웃은 특정 확률로 임 의의 노드 값을 0으로 설정하며, 추론시간 동안, 드롭아웃은 노드 값을 죽이지 않지만 레이어의 모든 가중치는 영향을 받을 수 있다. 위와 같은 행위를 하는 이유는 추론시간 동안 아핀(affine) 변환 후의 값의 분포가 학습 시간 동안의 값에 가깝게 하기 위함이다. 상기 'Rate'는 드롭아웃 및 유형의 분수비율을 셋팅할 수 있다. 다음으로 도 12를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'FC Layer'가 선 택되면, 개체 설정창(DT-3)에는 'Unit', 'Activation', 'Use Bias', 'Kernel Initizalizer', 'Bias Initizalizer', 'Kernel Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Bias Constraint'의 파라미터들이 열 방향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 'FC Layer'는 규칙적으로 조밀하게 연결된 신경망 계층이다. 상기 'Unit'는 출력물 공간이며 유형은 정수이다. 상기 'Activation'는 활성화 함수 유형이 사용된다. 상기 'Use Bias'는 레이어가 바이어스 벡터를 사용하는지 여부이며 유형은 부울이다. 상기 'Kernel Initizalizer'는 커널 가중치 매트릭스의 초기화 유형이다. 상기 'Bias Initizalizer'는 바이아스 벡터의 초기화 유형이다. 상기 'Kernel Regularizer'는 커널 가중치 매트릭스에 적용되는 레귤레이터이다. 상기 'Bias Regularizer'는 바이아스 벡터에 적용되는 정규화 유형이다. 상기 'Activity Regularizer'는 레이어의 출력에 적용되는 정규화 함수유형이다. 상기 'Kernel Constraint'는 커널 가중치 매트릭스에 적용되는 제한함수이다. 상기 'Bias Constraint'는 바이아스 벡터에 적용되는 제한함수이다. 다음으로 도 13을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Flatten Layer' 가 선택되면, 개체 설정창(DT-3)에는 셋팅 사항에 대한 안내 메시지가 표시된다. 상기 'Flatten Layer'는 일반 적으로 뉴런 네트워크 기반의 분류기에서 'FC Layer'로 공급될 수 있는 벡터 형식을 2D 행렬 또는 피쳐 텐서로 전송하기 위해서 사용된다. 'Flatten Layer'의 사용은 입력을 하는데 있어 단조로운 작업을 진행하기 위함이며, 배치 크기에는 영향을 미치지 않는다. 다음으로 도 14를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Permute Layer' 가 선택되면, 개체 설정창(DT-3)에는 'Dims'의 파라미터가 표시된다. 파라미터의 우측에는 파라미터 속성을 수 로 입력할 수 있는 입력칸이 표시된다. 이 순열배치(Permute) 레이어는 주어진 패턴에 따른 입력차원에 대한 순열배치 연산을 수행하기 위해서 사용된 다. 상기 'Dims'는 쉼표(,)로 구분되는 정수 튜플이다. 다음으로 도 15를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Repeat Layer'가 선택되면, 개체 설정창(DT-3)에는 'Number of time', 'Axis'의 파라미터들이 열 방향으로 각각 표시된다. 각 파 라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 반복(Repeat) 레이어는 지정된 축과 함께 지정된 시간에 입력 데이터를 반복하기 위해서이다. 상기 'Number of time'는 반복 인수이며 유형은 정수이다. 상기 'Axis'는 반복을 위한 축이며 타입은 정수이다. 다음으로 도 16을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 코어 레이어의 'Reshape Layer' 가 선택되면, 개체 설정창(DT-3)에는 'Reshape Type', 'Target Shape'의 파라미터들이 열 방향으로 각각 표시 된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성 을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Reshape Layer는 출력을 특정 모양으로 재구성하는데 사용되며 레이어 간 입력 모양에 적합하다. 상기 'Reshape Type'은 타입은 변경 형태이고, 1D, 2D 또는 3D 모양이 선택가능하다. 상기 'Target Shape'는 1D, 2D 또는 3D 모양을 결정하며, 타입은 정수이다. 다음으로 풀링 레이어는 중요한 기능이나 패턴을 잃지 않고 이미지를 줄이는데 사용되는 레이어이다. 풀링 레이 어는 일반적으로 Convolutional Neural Network(CNN)기반의 모델에서 사용된다. 도 17을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Average Pooling 1D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Average Pooling 1D Layer는 시간 데이터에 적용될 수 있으며, 출력은 기능 맵에서 각 패치의 평균값을 계산 한 결과이다. 상기 'Pooling Size,는 평균 풀링 창의 크기이고 유형은 정수이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/2의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하면 입력과 동일한 크기의 출력이 생성된다. 또한 'Full'은 최대 패딩이며, 크 기가 K인 커널의 경우에 패딩은 k-1과 같다. 다음으로 도 18을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Average Pooling 2D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방 향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Average Pooling 2D Layer는 공간 데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 평균값을 계산한 결과 이다. 상기 'Pooling Size,는 평균 풀링 창의 크기이고 유형은 정수이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/4의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하며 크기가 2차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 'Ful l'은 최대 패딩이며, 크기가 K인 커널(평균 크기)의 경우에 패딩은 k-1과 같다. 다음으로 도 19를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Average Pooling 3D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방 향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세 부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Average Pooling 3D Layer는 3D 데이터에 적용될 수 있으며. 기능 맵에서 각 패치의 평균값을 계산한 결과이 다. 상기 'Pooling Size,는 평균 풀링 창의 크기이고 유형은 정수이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/6의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하며 크기가 3차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 'Ful l'은 최대 패딩이며, 크기가 K인 커널(평균 크기)의 경우에 패딩은 k-1과 같다. 다음으로 도 20을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Max Pooling 1D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Max Pooling 1D Layer는 1D 시간 데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 최대값을 계산한 결과 이다. 상기 'Pooling Size,는 최대 풀링 창의 크기이고 유형은 정수이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/2의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하면 입력과 동일한 크기의 출력이 생성된다. 또한 상기 'Full'은 최대 패딩이 며, 크기가 K인 커널의 경우에 패딩은 k-1과 같다. 다음으로 도 21을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Max Pooling 2D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Max Pooling 2D Layer는 2D 공간데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 최대값을 계산한 결과이 다. 상기 'Pooling Size,는 최대 풀링 창의 크기이고 유형은 정수의 튜플이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/4의 크기)이라고하며, 폭이 1인 컨벌루션을 적용하며 크기가 2차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 상기 'Full'은 최대 패딩이며, 크기가 K인 커널(평균 크기)의 경우에 패딩은 k-1과 같다. 다음으로 도 22를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Max Pooling 3D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Max Pooling 3D Layer는 3D 데이터(공간 또는 시공간)에 적용될 수 있으며, 기능 맵에서 각 패치의 최대값을 계산한 결과이다. 상기 'Pooling Size,는 최대 풀링 창의 크기이고 유형은 3 개의 정수에 대한 튜플이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/6의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하며 크기가 3차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 'Ful l'은 최대 패딩이며, 크기가 K인 커널(평균 크기)의 경우에 패딩은 k-1과 같다. 다음으로 도 23을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Min Pooling 1D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Min Pooling 1D Layer는 1D의 시간 데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 최소값을 계산한 결 과이다. 상기 'Pooling Size,는 최소 풀링 창의 크기이고 유형은 정수이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/2의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하면 입력과 동일한 크기의 출력이 생성된다. 또한 'Full'은 최대 패딩이며, 크 기가 K인 커널의 경우에 패딩은 k-1과 같다. 다음으로 도 24를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Min Pooling 2D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Min Pooling 2D Layer는 2D 데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 최소값을 계산한 결과이다. 상기 'Pooling Size,는 최소 풀링 창의 크기이고 유형은 2 개의 정수에 대한 튜플이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/4의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하며 크기가 2차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 'Ful l'은 최대 패딩이며, 크기가 K인 커널(평균 크기)의 경우에 패딩은 k-1과 같다. 다음으로 도 25를 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'Min Pooling 3D Layer'가 선택되면, 개체 설정창(DT-3)에는 'Pooling Size', 'Strides', 'Padding'의 파라미터들이 열 방향으 로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파 라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 Min Pooling 3D Layer는 3D 데이터에 적용될 수 있으며, 기능 맵에서 각 패치의 최소값을 계산한 결과이다. 상기 'Pooling Size,는 최소 풀링 창의 크기이고 유형은 3 개의 정수에 대한 튜플이다. 상기 'Strides'는 풀링을 작업하는 폭이고 유형은 정수이다. 상기 'Padding'은 패딩의 유형이 드롭다운 메뉴로 활성화된다. 여기에서 'Valid'는 패딩이 없음을 의미하며, 데 이터를 그대로 유지하고 패딩없이 컨볼루션 작업을 수행한다. 또한 'Same'은 하프 패딩(커널/6의 크기)이라고 하며, 폭이 1인 컨벌루션을 적용하며 크기가 2차원인 경우 입력과 동일한 크기의 출력이 생성된다. 또한 'Ful l'은 최대 패딩이며, 크기가 K인 커널의 경우에 패딩은 k-1과 같다. 다음으로 반복 레이어(Recurrent Layer)에서 RNN(Recurrent Neural Network)은 노드 간의 연결이 시간적 순서 에 따라 그래프를 형성하는 인공적인 신경망이며 일시적인 동적 움직음을 나타낸다. 피드 포워드 신경망에서 파 생되어진 RNN은 내부 상태(메모리)를 사용하여 가변 길이의 입력 시퀀스를 처리할 수 있다. RNN을 개발하기 위 해 다음과 같이 RNN 계층을 적용 할 수 있다. 도 26을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'RNN(Recurrent Neural Network) GRU(Gated Recurrent Units) Layer'가 선택되면, 개체 설정창(DT-3)에는 'Units', 'Activation', 'Recurrent Activation', 'Use Bias', 'Kernel Initializer', 'Recurrent Initializer', 'Bias Initializer', 'Kernel Regularizer', 'Recurrent Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Recurrent Constraint', 'Bias Constraint', 'DropOut', 'Recurrent Dropout', 'Implementation', 'Return Sequences', 'Return State', 'GoBackward', 'Stateful', 'UnRoll', 'ResetAfte r'의 파라미터들이 열 방향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 RNN(Recurrent Neural Network) GRU(Gated Recurrent Units) Layer는 게이트 반복 유닛으로 게이트 메커니 즘 기반의 반복 신경망 레이어이며, LSTM(Long Short-Term Memory)과 비슷하지만 간단한 구조를 가지고 있다. 상기 'Units'는 출력 공간의 차원이며 유형은 정수이다. 상기 'Activation'는 활성화 함수 유형을 선택할 수 있다. 상기 'Recurrent Activation'는 반복 단계에 사용되는 활성화 함수 유형을 선택할 수 있다. 상기 'Use Bias'는 레이어가 바이어스 벡터를 사용하는지 여부이며 유형은 부울이다. 상기 'Kernel Initializer'는 커널 가중치 매트릭스의 초기화 유형을 선택할 수 있다. 상기 'Recurrent Initializer'는 반복 커널 가중치 행렬의 초기화 유형을 선택할 수 있다. 반복 상태의 선형 변 환에 사용된다. 상기 'Bias Initializer'는 바이아스 벡터의 초기화 유형을 선택할 수 있다. 상기 'Kernel Regularizer'는 커널 가중치 매트릭스에 적용되는 레귤레이터를 선택할 수 있다. 상기 'Recurrent Regularizer'는 반복 가중치 행렬에 적용되는 반복기 함수 유형을 선택할 수 있다. 반복 상태 의 선형 변환에 사용된다. 상기 'Bias Regularizer'는 바이아스 벡터에 적용되는 정규화 함수 유형을 선택할 수 있다. 상기 'Activity Regularizer'는 레이어의 출력에 적용되는 정규 함수 유형을 선택할 수 있다. 상기 'Kernel Constraint'는 커널 가중치 매트릭스에 적용되는 제한함수 유형를 선택할 수 있다. 상기 'Recurrent Constraint'는 반복 커널 가중치 매트릭스에 적용되는 제한함수가 드롭다운 메뉴로 활성화된다. 여기에서 'MaxNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치가 요구하는 값 이하의 표준을 갖도 록 제한한다. 또한 'MaxNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치가 요구하는 값 이하의 표준을 갖도록 제한한다. 또한 'NonNeg'은 가중치가 마이너스가 아닌 것으로 제한한다. 또한 'UnitNorm'은 각각의 숨겨진 유닛 으로 적용되는 가중치를 제한하여 유닛의 표준을 가진다. 또한 'MinMaxNorm'은 하한과 상한선 사이의 표준을 가 지도록 각각의 숨겨진 유닛에서 발생하는 가중치를 제한한다. 상기 'Bias Constraint'는 바이어스 벡터에 적용되는 제한 함수이다. 상기 'DropOut'는 0과 1 사이의 부동의 소수점이며, 입력의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Recurrent Dropout'는 0과 1 사이의 부동 소수점이며, 반복 상태의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Implementation'는 실행모드이다. 상기 'Return Sequences'는 출력 시퀀스에서 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지를 결정하 며 유형은 부울이다. 상기 'Return State'는 출력 외에 마지막 상태를 반환할지 여부를 결정하며 유형은 부울이다. 상기 'GoBackward'는 True인 경우, 입력 시퀀스를 뒤로 처리하고 반전된 시퀀스를 반환하며 유형은 부울이다. 상기 'Stateful'는 True인 경우 배치에서 인덱스 I의 각 샘플에 대한 마지막 상태는 다음 배치에서 인덱스 I의 샘플에 대한 초기 상태로 사용된다. 상기 'UnRoll'는 True이면 네트워크가 해제되며 그렇지 않으면 기호 루프가 사용된다. 상기 'ResetAfter'는 행렬 곱셈 후 또는 그 이전에 리셋 게이트 적용 여부이다. 다음으로 도 27을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'RNN(Recurrent Neural Network) LSTM(Long Short-Term Memory) Layer'가 선택되면, 개체 설정창(DT-3)에는 'Units', 'Activation', 'Recurrent Activation', 'Use Bias', 'Kernel Initializer', 'Recurrent Initializer', 'Bias Initializer', 'Unit Forget Bias', 'Kernel Regularizer', 'Recurrent Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Recurrent Constraint', 'Bias Constraint', 'DropOut', 'Recurrent Dropout', 'Implementation', 'Return Sequences', 'Return State', 'GoBackward', 'Stateful', 'UnRoll'의 파라미터들이 열 방향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 LSTM(Long Short-Term Memory)는 일종의 RNN(Recurrent Neural Network) 계층이며, 게이트 세트를 사용하여 정보의 흐름을 제어한다. 시퀀스 데이터와 관련된 문제를 해결하기 위해 사용될 수 있는 레이어이다. 상기 'Units'는 출력 공간의 차원이며 유형은 정수이다. 상기 'Activation'는 활성화 함수 유형을 선택할 수 있다. 상기 'Recurrent Activation'는 반복 단계에 사용되는 활성화 함수 유형을 선택할 수 있다. 상기 'Use Bias'는 레이어가 바이어스 벡터를 사용하는지 여부이며 유형은 부울이다. 상기 'Kernel Initializer'는 커널 가중치 매트릭스의 초기화 유형을 선택할 수 있다. 상기 'Recurrent Initializer'는 반복 커널 가중치 행렬의 초기화 유형을 선택할 수 있다. 반복 상태의 선형 변 환에 사용된다. 상기 'Bias Initializer'는 바이아스 벡터의 초기화 유형을 선택할 수 있다. 상기 'Unit Forget Bias'는 True인 경우 초기화시 forget gate의 바이어스에 1을 추가하며 유형은 부울이다. 상기 'Kernel Regularizer'는 커널 가중치 매트릭스에 적용되는 레귤레이터 유형을 선택할 수 있다. 상기 'Recurrent Regularizer'는 반복 가중치 행렬에 적용되는 반복기 함수 유형을 선택할 수 있다. 반복 상태 의 선형 변환에 사용된다. 상기 'Bias Regularizer'는 바이아스 벡터에 적용되는 정규화 함수 유형을 선택할 수 있다. 상기 'Activity Regularizer'는 레이어의 출력에 적용되는 정규 함수 유형을 선택할 수 있다. 상기 'Kernel Constraint'는 커널 가중치 매트릭스에 적용되는 제한함수 유형을 선택할 수 있다. 상기 'Recurrent Constraint'는 반복 커널 가중치 매트릭스에 적용되는 제한함수가 드롭다운 메뉴로 활성화된다. 여기에서 'MaxNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치가 요구하는 값 이하의 표준을 갖도 록 제한한다. 또한 'NonNeg'은 가중치가 마이너스가 아닌 것으로 제한한다. 또한 'UnitNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치를 제한하여 유닛의 표준을 가진다. 또한 'MinMaxNorm'은 하한과 상한선 사이의 표준 을 가지도록 각각의 숨겨진 유닛에서 발생하는 가중치를 제한한다.상기 'Bias Constraint'는 바이어스 벡터에 적용되는 제한 함수 유형을 선택할 수 있다. 상기 'DropOut'는 0과 1 사이의 부동의 소수점이며, 입력의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Recurrent Dropout'는 0과 1 사이의 부동 소수점이며, 반복 상태의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Implementation'는 구현 모드이다. 상기 'Return Sequences'는 출력 시퀀스에서 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지를 결정하 며 유형은 부울이다. 상기 'Return State'는 출력 외에 마지막 상태를 반환할지 여부를 결정하며 유형은 부울이다. 상기 'GoBackward'는 True인 경우, 입력 시퀀스를 뒤로 처리하고 반전된 시퀀스를 반환하며 유형은 부울이다. 상기 'Stateful'은 True인 경우 배치에서 인덱스 I의 각 샘플에 대한 마지막 상태는 다음 배치에서 인덱스 I의 샘플에 대한 초기 상태로 사용된다. 상기 'UnRoll'는 True이면 네트워크가 해제되며 그렇지 않으면 기호 루프가 사용된다. 다음으로 도 28을 참고하면, 상기 모델 시각화 창(DT-2)에 배치된 레이어들 중 풀링 레이어의 'RNN(Recurrent Neural Network) Vanila Layer'가 선택되면, 개체 설정창(DT-3)에는 'Units', 'Activation', 'Use Bias', 'Kernel Initializer', 'Recurrent Initializer', 'Bias Initializer', 'Kernel Regularizer', 'Recurrent Regularizer', 'Bias Regularizer', 'Activity Regularizer', 'Kernel Constraint', 'Recurrent Constraint', 'Bias Constraint', 'DropOut', 'Recurrent Dropout', 'Return Sequences', 'Return State', 'GoBackward', 'Stateful', 'UnRoll'의 파라미터들이 열 방향으로 각각 표시된다. 각 파라미터의 우측에는 파라미터 속성을 수 로 입력할 수 있는 입력칸이 표시되거나 세부 파라미터 속성을 선택할 수 있는 드롭다운 메뉴가 표시된다. 이 RNN(Recurrent Neural Network) Vanila Layer는 Recurrent Neural Network 계층이며, 출력이 입력으로 피드 백되는 완전하게 연결된 반복 뉴럴 네트워크이다. 상기 'Units'는 출력 공간의 차원이며 유형은 정수이다. 상기 'Activation'는 활성화 함수 유형을 선택할 수 있다. 상기 'Use Bias'는 레이어가 바이어스 벡터를 사용하는지 여부이며 유형은 부울이다. 상기 'Kernel Initializer'는 커널 가중치 매트릭스의 초기화 유형을 선택할 수 있다. 상기 'Recurrent Initializer'는 반복 커널 가중치 행렬의 초기화 유형을 선택할 수 있다. 반복 상태의 선형 변 환에 사용된다. 상기 'Bias Initializer'는 바이아스 벡터의 초기화 유형을 선택할 수 있다. 상기 'Kernel Regularizer'는 커널 가중치 매트릭스에 적용되는 레귤레이터 유형을 선택할 수 있다. 상기 'Recurrent Regularizer'는 반복 가중치 행렬에 적용되는 반복기 함수 유형을 선택할 수 있다. 반복 상태 의 선형 변환에 사용된다. 상기 'Bias Regularizer'는 바이아스 벡터에 적용되는 정규화 함수 유형을 선택할 수 있다. 상기 'Activity Regularizer'는 레이어의 출력에 적용되는 정규 함수 유형을 선택할 수 있다. 상기 'Kernel Constraint'는 커널 가중치 매트릭스에 적용되는 제한함수 유형을 선택할 수 있다. 상기 'Recurrent Constraint'는 반복 커널 가중치 매트릭스에 적용되는 제한함수가 드롭다운 메뉴로 활성화된다. 여기에서 'MaxNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치가 요구하는 값 이하의 표준을 갖도 록 제한한다. 또한 'NonNeg'은 가중치가 마이너스가 아닌 것으로 제한한다. 또한 'UnitNorm'은 각각의 숨겨진 유닛으로 적용되는 가중치를 제한하여 유닛의 표준을 가진다. 또한 'MinMaxNorm'은 하한과 상한선 사이의 표준 을 가지도록 각각의 숨겨진 유닛에서 발생하는 가중치를 제한한다. 상기 'Bias Constraint'는 바이어스 벡터에 적용되는 제한 함수 유형을 선택할 수 있다. 상기 'DropOut'는 0과 1 사이의 부동의 소수점이며, 입력의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Recurrent Dropout'는 0과 1 사이의 부동 소수점이며, 반복 상태의 선형 변환을 위해 제거해야할 단위의 비율이다. 상기 'Return Sequences'는 출력 시퀀스에서 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지를 결정하 며 유형은 부울이다. 상기 'GoBackward'는 True인 경우, 입력 시퀀스를 뒤로 처리하고 반전된 시퀀스를 반환하며 유형은 부울이다. 상기 'Stateful'은 True인 경우 배치에서 인덱스 I의 각 샘플에 대한 마지막 상태는 다음 배치에서 인덱스 I의 샘플에 대한 초기 상태로 사용된다. 상기 'UnRoll'는 True이면 네트워크가 해제되며 그렇지 않으면 기호 루프가 사용된다. 한편, 상기 모델 시각화 창(DT-2)의 좌측 하부에는 디자이너 모델의 디자인 중 발생하는 추가, 삭제, 로드, 연 결과 같은 모든 로깅 정보를 확인할 수 있는 로깅 확인창(DT-4)이 배치된다. 도 29를 참조하면, 상기 로깅 확인창(DT-4)은 디자이너 모델의 디자인 중 발생하는 로깅 정보를 편집할 수 있는 로깅 정보 편집창(DT-4-1)과 디자이너 모델의 디자인 중 발생하는 로깅 정보를 조회할 수 있는 로깅 정보 조회 창(DT-4-2)으로 분할되어 구성된다. 상기 로깅 정보 편집창(DT-4-1)은 상기 로깅 확인창(DT-4)의 최상단에 배치되며, 디자이너 모델의 디자인 중 발 생하는 모든 로깅 정보를 삭제할 수 있는 로깅 전체삭제 버튼과 모든 로깅 정보를 JSON 파일로 저장할 수 있는 로깅 전체저장 버튼이 구비된다. 상기 로깅 정보 조회창(DT-4-2)은 로깅 정보 편집창(DT-4-1)의 하부에 배치되며, 디자이너 모델의 디자인 중 발 생하는 추가, 삭제, 연결 등의 모든 로깅 정보와 발생 시간을 조회할 수 있다. 다시 도 4를 참조하면, 상기 로깅 확인창(DT-4)의 하부에는 디자인되고 있는 디자이너 모델을 편집할 수 있는 모델 작업창(DT-6)이 배치된다. 상기 모델 작업창(DT-6)은 디자인되고 있는 현재 디자이너 모델을 JSON 파일로 저장할 수 있는 저장(Save) 버튼, 저장되어 있는 디자이너 모델을 JSON 파일로 불러올 수 있는 로드(Load) 버튼, 현재 모델 시각화 창(DT- 2)의 상태를 그대로 이미지 파일로 저장할 수 있는 이미지 저장(Save Image) 버튼, 현재 모델 시각화 창(DT- 2)에서 디자인되고 있는 디자이너 모델 전체를 삭제할 수 있는 모두 삭제(Clear All) 버튼이 구비된다. 또한 상기 모델 시각화 창(DT-2)의 하부에는 디자인되고 있는 모델 시각화 창(DT-2)을 확대, 축소, 스패닝시킬 수 있는 보기 제어창(DT-5)이 배치된다. 상기 보기 제어창(DT-5)에는 작업자가 디자이너 모델을 다각도로 편리하게 볼 수 있도록 현재 모델 시각화 창 (DT-2)을 축소시킬 수 있는 줌아웃(Zoom Out) 버튼, 현재 모델 시각화 창(DT-2)을 확대할 수 있는 줌인(Zoom In) 버튼, 그리고 스패닝 기능을 사용할 수 있는 스패닝(Spanning) 버튼이 구비된다. 다음으로 상기 트레이닝 모듈은 상기 디자이너 모듈에서 설계되어 생성된 작업자의 디자이너 모델을 학습시키기 위한 시각화 도구이며, 트레인드 모델은 이 트레이닝 모듈의 학습 결과물이다. 작업자가 디자 이너 모듈을 통해 설계한 디자이너 모델을 학습시키기 위한 하이퍼 파라미터를 구성할 수 있다. 상기 트레이닝 모듈은 전문 프로그래밍 지식이 없는 작업자가 쉽고 간편하게 자신이 설계한 디자이너 모델 을 학습시킬 수 있는 트레이닝 툴 화면(TT)을 제공하며, 이 트레이닝 툴 화면(TT)은 작업자가 자신이 설계한 디 자이너 모델을 불러와 학습 진행을 위한 매개 변수를 설정해 학습시키고 시각적으로 학습된 모델의 성능을 직접 확인할 수 있도록 한다. 상기 트레이닝 모듈이 제공하는 트레이닝 툴 화면(TT)에는 도 30에 도시된 바와 같이 학습 설정창(TT-1), 그래프 뷰어창(TT-2), 로깅 확인창(TT-3), 학습 평가창(TT-4)으로 구성되며, 작업자가 쉽고 간편하게 자신이 설 계한 디자이너 모델을 학습시켜 트레인드 모델을 만들 수 있도록 제공된다. 트레이닝 툴 화면(TT)은 전체적으로 수평 길이가 긴 직사각형으로 형성된다. 그리고 트레이닝 툴 화면(TT)의 좌측에는 대상 디자이너 모델의 학습 프로세스에 대한 학습 파라미터를 구성할 수 있도록 하는 직사각형의 학습 설정창(TT-1)이 배치된다. 상기 학습 설정창(TT-1)은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오고, 디자이너 모듈에서 설계되어 생성된 작업자의 디자이너 모델 파일을 불러오고, 학습 알고리즘을 선택하고, 학습 진행을 위한 매개 변수를 설정하고, 학습 스크립트를 선택할 수 있도록 구성된다. 즉 학습 설정창(TT-1)은 학습 데이터셋과 모의 데이터셋에 대한 매개 변수 및 하이퍼파라미터 설정을 포함한 학습 구성, 대상모델 지정, 학습 알고리즘 등을 설정할 수 있다. 도 31을 참조하면, 상기 학습 설정창(TT-1)은 학습에 필요한 학습 데이터셋과 모의 데이터셋을 불러오는 데이터 셋 설정창(TT-1-1)과, 학습할 디자이너 모델을 지정하는 모델 설정창(TT-1-2)과, 학습 진행을 위한 파라미터를 설정하는 파라미터 설정창(TT-1-3)과, 학습 스크립트를 구성하는 조기중지 설정창(TT-1-4)과, 학습에 필요한 옵 션을 설정하는 옵션 설정창(TT-1-5)과, 학습 완료 후 지원될 수 있는 유틸리티를 설정하는 유틸리티 설정창(TT- 1-6)과, 학습을 실행하는 학습 실행 버튼(TT-1-7)으로 분할되어 구성된다. 상기 데이터셋 설정창(TT-1-1)은 상기 학습 설정창(TT-1)의 최상단에 배치되며, 학습에 필요한 학습 데이터셋 (Training file)과 모의 데이터셋(Testing file)을 찾아 불러올 수 있고, 학습 데이터셋과 모의 데이터셋의 매 개 변수(시퀀스 갯수, 함수 갯수, 클래스 갯수 및 합습/유효 셋 비율 등)를 설정할 수 있다. 여기에서, 'Training file' 입력란은 csv 파일 형태의 학습 데이터셋을 불러온다. 'Testing file' 입력란은 csv 파일 형태의 모의 데이터셋을 불러온다. 'Seq' 입력란은 시퀀스의 갯수를 입력할 수 있다. 'Features' 입력 란은 학습 데이터에서의 특징의 갯수를 입력할 수 있다. 'Classes' 입력란은 클래스의 갯수를 입력할 수 있다. 'Training dataset' 입력란은 학습에 사용되는 데이터와 검증에 사용되는 데이터의 비율을 입력할 수 있다. 'Validation dataset' 입력란은 조기중지 옵션으로 학습 진행을 중지하는데 사용되는 유효성 검사 비율을 입력 할 수 있다. 상기 모델 설정창(TT-1-2)은 상기 데이터셋 설정창(TT-1-1)의 하부에 배치되며, 학습할 디자이너 모델을 지정할 수 있다. 여기에서, 'Designer file' 입력란은 JSON 파일 기반의 설계된 디자이너 모델을 불러온다. 상기 파라미터 설정창(TT-1-3)은 상기 모델 설정창(TT-1-2)의 하부에 배치되며, 학습 진행을 위한 하이퍼 파라 미터를 설정할 수 있다. 여기에서, 'Learning Rate' 입력란은 학습의 초기 속도와 각 학습 알고리즘 (SGD, Adam 등)마다 학습 속도를 변 경할 수 있다. 'Batch Size' 입력란은 학습된 모델을 수행하고 업데이트하는 데 사용되는 데이터 샘플 수를 입 력할 수 있다. 'Number of epochs' 입력란은 전체 훈련 데이터 세트가 모델에 의해 학습되는 횟수를 입력할 수 있다. 'UntilLastOne' 옵션의 경우 마지막 진행 시간까지 학습이 진행되거나 'EarlyStopping satify'의 조건이 있을 때 마지막 진행 이전에 중지된다. 'Loss function' 입력란은 최적화 목표로 사용되는 손실 함수 유형을 선 택할 수 있다. 'Optimizer' 입력란은 학습된 모델을 업데이트하는데 사용되는 최적화 알고리즘 유형을 선택할 수 있다. 'Metric' 입력란은 학습된 모델의 성능을 계산하기 위해 메트릭 함수 유형을 선택할 수 있다. 상기 조기중지 설정창(TT-1-4)은 상기 파라미터 설정창(TT-1-3)의 하부에 배치되며, 학습 스크립트를 구성할 수 있다. 과도한 주기를 이용하여 뉴럴 네트워크 모델을 학습할 경우 학습 데이터 세트에 과도한 이슈를 야기시킨 다. 따라서 학습 스크립트의 두번째 옵션으로 조기 중지를 사용할 수 있다. 조기 중지에는 일반적으로 학습 중 평가 콜백에 대한 유효성 검사 데이터 세트가 필요하다. 그러나, 소규모 데이터 세트의 경우 평가는 학습 데이 터 세트에서 이루워질 수 있다. 조기 중지는 학습 세트의 한 부분을 검증 세트로 유지하는 일종의 교차 검증방 식이다. 학습도중에, 검증 세트의 성능이 악화되고 있음을 인지하였을 경우에는 학습을 중단해야 한다. 상기 옵션 설정창(TT-1-5)은 상기 조기중지 설정창(TT-1-4)의 하부에 배치되며, 학습에 필요한 옵션을 설정할 수 있다. 여기에서, 'Backend' 입력란은 텐서 기반 컴퓨팅 라이브러리를 선택할 수 있다. 'Device' 입력란은 기본 (Default), CPU, CUDA 및 OpenCL을 포함하는 옵션을 가져 컴퓨팅을 수행할 옵션을 선택하도록 제공된다. 상기 유틸리티 설정창(TT-1-6)은 상기 옵션 설정창(TT-1-5)의 하부에 배치되며, 훈련 과정이 완료된 후에 지원 될 수 있는 유틸리티를 설정할 수 있다. 여기에서, 'Summary' 설정버튼은 뉴런 네트워크 아케텍처를 볼 수 있다. 'Save graph' 설정버튼은 학습 추적 그 래프를 이미지로 저장한다. 'Save Model' 설정버튼은 학습된 모델을 json 파일로 저장한다. 상기 학습 실행 버튼(TT-1-7)은 상기 유틸리티 설정창(TT-1-6)의 하부이면서 전체 학습 설정창(TT-1)의 최하단 에 배치되며, 학습 설정창(TT-1)을 통해 모든 매개 변수를 구성한 사용자가 선택시 학습을 실행(Run Training) 하게 된다. 그리고 트레이닝 툴 화면(TT)의 중심 부위에는 객관적인 함수 학습 알고리즘의 정확도를 그래프로 나타내는 그 래프 뷰어창(TT-2)이 배치된다. 여기에서, 'Training Loss'는 파란색 선으로 표시된다. 학습 과정이 완벽하면 손실 함수(Training Loss)는 에폭 (Epochs) 단위로 줄어들며, 이는 예측값과 실제 레이블 사이의 오류가 0에 근접 함을 의미한다. 이와 같은 경우, 학습된 모델이 컨버전스되었다고 한다. 학습된 모델이 컨버전스되지 않으면 적용하기에 적합하지 않은 상 태이므로 새로운 모델을 재설계하고 매개 변수를 변경해야 한다. 'Training Metric'은 붉은색 선으로 표시된다. 현재 학습된 모델의 정확도를 나타내며, 이 정확도가 100%에 근 접해야 한다. 정확도 또는 손실 함수 그래프는 몇가지 이유로 인해 학습 진행 중에 변경 될 수 있다. 예를 들어, 학습 속도가 컨버전스 속도에 영향을 줄 경우 그래프 보기에서 마우스를 사용하여 지정된 시기에 손실값 또는 정확도값을 확인해야 한다. 그리고 트레이닝 툴 화면(TT)의 중심에서 상기 그래프 뷰어창(TT-2)의 하부에는 학습 로그창인 로깅 확인창(TT- 3)이 배치된다. 이 창에서는 학습 프로세스 중 모든 시기에 대한 인덱스, 정확도값, 손실값 등에 대한 로깅 정 보가 표시된다. 그래프 뷰어창(TT-2)과 마찬가지로 로깅 확인창(TT-3)을 사용하여 학습 프로세스를 추적할 수 있다. 여기에는 학습 샘플 및 유효성 검사 샘플에 대한 모든 학습 시기의 에폭, 손실값 및 정확도값(지수)에 대한 정보가 포함 되어 있다. 그리고 트레이닝 툴 화면(TT)의 우측에는 테스트 데이터에서 학습된 모델의 성능을 확인하기 위한 학습 평가창 (TT-4)이 배치된다. 평가되어진 모델(Trained Model)은 현재 학습된 모델이다. 테스팅 버튼을 클릭 후 혼동 매 트릭스를 통해 성능이 표시된다. 'Trained Model'에서, 'Model file'은 학습된 모델 파일 경로 이거나 기본값은 현재 학습된 모델이다. 'No classes'는 클래스의 수량이다. 'Performance'에서, 'Testing'은 테스트 데이터 세트에서 학습 프로세스를 실행 후 완료로 표시된다. 'Detail s'는 학습된 모델의 오차 행렬과 성능을 보여준다. 학습 프로세스가 완료된 후 알고리즘의 성능에 대한 세부 정 보 버튼이 활성화되어 세부적인 성능을 확인할 수 있게 된다. 다음으로 상기 어플리케이션 모듈은 상기 트레이닝 모듈에서 생성된 작업자의 트레인드 모델에 실시 간 디바이스 데이터를 연동시켜 장비 관리 및 예지보전을 수행하게 된다. 이 어플리케이션 모듈은 학습된 모델을 프로덕션에 적용할 때 사용할 수 있다. 상기 어플리케이션 모듈은 트레인드 모델을 통한 예측 작업의 데이터량이나 예측 작업의 난이도에 따라 작 업 단말기에서 바로 구동되거나 운영 서버를 통해 외부 클라이언트 서버에 트레인드 모델을 전송하여 구동시킬 수 있다. 이때 어플리케이션 모듈이 제공하는 어플리케이션 서비스 화면에는 도 32에 도시된 바와 같은 그래프 뷰 (Graph View)를 통해 실시간 입력 및 출력 신호가 시계열 상의 그래프 형태로 표시되어 작업자가 실시간 데이터 를 눈으로 확인할 수 있도록 한다. 또한 어플리케이션 모듈이 제공하는 어플리케이션 서비스 화면에는 도 33에 도시된 바와 같은 통계 리포트(Statistical Report)를 통해 분석된 입력 데이터의 결과이며 예측 가능한"}
{"patent_id": "10-2022-0130806", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "모델에 의해 수행될 수 있는 예측의 통계를 요약하여 표출시키게 된다. 작업자는 이 통계 리포트를 활용하여 특 정 레벨 임계값을 경보 또는 경고 알림으로 인지할 수 있게 된다. 도 34는 본 발명의 실시예에 따른 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법을 설명하기 위한 흐름도이다. 도 34를 참조하면, 먼저 상기 데이터 수집 서버는 정보통신망을 통해 원거리의 설비 디바이스에서 전 송되는 디바이스 데이터를 수집하여 관리하게 된다(S100). 여기에서 상기 디바이스 데이터는 설비 현장에 설치되어 있는 수많은 자동화 설비 및 장비인 설비 디바이스 로부터 실시간으로 전달되어 데이터 수집 서버에서 수집되는 디바이스의 상태 및 작업 데이터와 데이터베이스 정보이다. 이후, 상기 작업 단말기는 디자이너 모듈을 실행시켜 장비 관리 및 예지보전의 수행을 위한 초기 디 자이너 모델을 생성한다(S200). 이후, 상기 작업 단말기는 트레이닝 모듈을 실행시키고 상기 운영 서버로 디자이너 모델의 학습 을 위한 데이터를 요청하여 상기 데이터 수집 서버로부터 모의 데이터와 학습 데이터를 수신해 디자이너 모델을 학습시켜 학습된 트레인드 모델을 생성한다(S300). 여기에서 상기 디자이너 모델의 학습 및 학습된 트레인드 모델의 생성은 모델의 학습 부하에 따라 작업 단말기 가 아닌 별도의 학습용 서버를 통해 이루어지도록 할 수 있으며, 상기 운영 서버가 모델 학습 및 트 레인드 모델의 생성 과정만을 담당할 수도 있다. 이후, 상기 작업 단말기는 상기 운영 서버로 트레인드 모델의 현장 어플리케이션을 위한 데이터를 요 청하고 상기 데이터 수집 서버로부터 설비 디바이스에 대한 실시간 디바이스 데이터를 수신해 이 트 레인드 모델에 연동시켜 현장 데이터에 따른 장비 관리 및 예지보전을 수행하게 된다(S400). 도 35는 본 발명의 실시예에 따른 시스템 지원용의 운영 서버의 세부 구성을 설명하기 위한 블럭 구성도이다. 작업 단말기의 장비관리 구동 도구를 구동하는 현장 작업자는 비록 자사 장비의 상태, 배치, 설정 등 을 가장 잘 이해하고 있는 반면, 알고리즘을 설계하고 학습시키며 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 경우가 대부분이다. 이 같은 부조화는 결국 현장을 잘 반영하면서 높은 성능을 내는 모델을 기대하 기 어렵게 하는 요인이 된다. 본 발명에서는 로컬의 작업 단말기를 통해 이루어지는 알고리즘의 설계, 학습 및 어플리케이션까지 모든 과정을 원거리의 운영 서버가 네트워킹을 통해 관리함으로써 고품질의 현장 장비 관리 및 예지보전이 이루 어지도록 지원하게 된다. 이를 위한 상기 운영 서버는 도 35에 도시된 바와 같이 정보통신망에 접속하기 위한 통신부, 로컬에 서 구동되는 장비관리 구동 도구의 모델 관리부와 연동되어 장비관리 구동 도구의 디자이너 모 듈의 모델 디자인 작업을 지원하는 모델링 지원부, 로컬에서 구동되는 장비관리 구동 도구의 트 레이닝 관리부와 연동되어 장비관리 구동 도구의 트레이닝 모듈의 모델 학습 작업을 지원하는 트레이닝 지원부, 로컬에서 구동되는 장비관리 구동 도구의 어플리케이션 관리부와 연동되어 장 비관리 구동 도구의 어플리케이션 모듈의 모델 어플리케이션 작업을 지원하는 어플리케이션 지원부 , 로컬에서 구동되는 장비관리 구동 도구의 유저 관리부와 연동되어 장비관리 구동 도구의 작업 상황을 확인하는 유저 지원부 및 이들을 제어하기 위한 서버 제어부를 포함하여 구성될 수 있다. 상기 운영 서버는 통신부로 로컬에서 구동하는 장비관리 구동 도구와 연결되어 모델링 지원부 , 트레이닝 지원부, 어플리케이션 지원부 및 유저 지원부를 통해 알고리즘을 설계하고 학 습시키며 어플리케이션시키는 등의 프로그래밍 작업이 익숙치 않은 현장 작업자의 앱 작업을 지원하게 된다. 상 기 운영 서버는 현장 작업자가 수행한 단계별 작업 중간결과물을 작업 단말기로부터 전송받고, 관리 자 파트에서 작업 중간결과물을 변경/수정/삭제/추가한 작업 지원결과물을 작업 단말기로 전달한다. 작업 단말기는 전달되는 작업 지원결과물을 기존 작업 중간결과물에 반영함으로써 높은 수준의 모델을 운영할 수 있게 될 것이다. 상기 모델링 지원부는 로컬 작업 단말기의 모델 관리부를 통해 현장 작업자가 설계하여 생성한 디자이너 모델을 작업 중간결과물로서 수신하고, 전문적인 관리자가 모델 및 가중치를 변경/수정/삭제/추가한 디자이너 모델을 작업 지원결과물로서 로컬 작업 단말기의 모델 관리부로 전달하게 된다. 이를 전달 받은 로컬 작업 단말기의 모델 관리부는 디자이너 모듈로 전달해 기존 디자이너 모델에 반영하 게 된다. 이에 따라 현장 작업자는 고도의 알고리즘 지식과 프로그래밍 노하우가 없더라도 현장 상황이 반영되 면서도 수준 높은 성능의 디자이너 모델을 완성할 수 있게 될 것이다. 상기 트레이닝 지원부는 로컬 작업 단말기의 트레이닝 관리부를 통해 작업 중간결과물로서 디자 이너 모델을 수신하고, 운영 서버측에서 작업 중간결과물인 디자이너 모델을 직접 학습시켜 트레인드 모델 을 생성해 작업 지원결과물로서 로컬 작업 단말기의 트레이닝 관리부로 전달하게 된다. 이를 전달받 은 로컬 작업 단말기의 트레이닝 관리부는 트레이닝 모듈로 전달해 트레인드 모델에 반영하게된다. 이에 따라 현장 작업자는 고도의 알고리즘 학습의 절차를 알지 못하더라도 고도로 학습된 트레인드 모델 을 완성할 수 있게 될 것이다. 결국 알고리즘 학습의 절차에 익숙치 않은 현장 작업자는 학습시킬 디자이너 모 델의 학습 과정을 운영 서버로부터 지원받을 수 있게 된다. 또한 상기 트레이닝 지원부는 현장 작업자의 요청에 따라 관리자의 지정된 학습 절차 관리하에 로컬에서 디자이너 모델을 자동적으로 학습시킬 수 있다. 이때 데이터 학습은 운영 서버측의 관리자에 의해 설정된 일정(시간과 주기)에 따라 운영 서버의 제어하에 작업 단말기의 트레이닝 모듈에서 이루어지게 될 것이다. 상기 어플리케이션 지원부는 현장 작업자의 요청에 따라 지정된 스케줄에 따른 트레인드 모델의 로컬 어플 리케이션 과정을 제어하게 된다. 상기 어플리케이션 지원부는 로컬 작업 단말기의 어플리케이션 관리 부를 통해 작업 중간결과물로서 트레인드 모델 및 현장 스케줄 정보를 수신하고, 모델 운영 스케줄, 정확 도, 신규 가중치 등을 작업 지원결과물로서 로컬 작업 단말기의 어플리케이션 관리부로 전달하게 된 다. 이를 전달받은 로컬 작업 단말기의 어플리케이션 관리부는 어플리케이션 모듈로 전달해 어 플리케이션에 배포하게 된다. 상기 유저 지원부는 로컬 작업 단말기에서 이루어지는 작업자 유저의 추가/제거 등의 과정을 작업 단 말기의 유저 관리부로부터 확인하고 유저별 권한 정보와 어플리케이션의 운용 이력 정보(학습 결과, 시간 및 실행자)를 제공받게 된다. 이상과 같이 도면과 명세서에서 최적 실시 예가 개시되었다. 여기서 특정한 용어들이 사용되었으나, 이는 단지 본 발명을 설명하기 위한 목적에서 사용된 것이지 의미 한정이나 특허청구범위에 기재된 본 발명의 범위를 제한 하기 위하여 사용된 것은 아니다. 그러므로 본 기술 분야의 통상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시 예가 가능하다는 점을 이해할 것이다. 따라서 본 발명의 진정한 기술적 보호 범위는 첨부된 특허청구범위의 기술적 사상에 의해 정해져야 할 것이다."}
{"patent_id": "10-2022-0130806", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 시스템을 설명하기 위 한 블럭 구성도이다. 도 2는 본 발명의 실시예에 따른 작업 단말기의 세부 구성을 설명하기 위한 블럭 구성도이다. 도 3은 본 발명의 실시예에 따른 장비관리 구동 도구를 설명하기 위한 블럭 구성도이다. 도 4 내지 도 33은 본 발명의 실시예에 따른 장비관리 구동 도구의 구동 화면들을 설명하기 위한 도면이다. 도 34는 본 발명의 실시예에 따른 장비 운영 데이터를 활용한 현장 장비의 인공지능 관리 방법을 설명하기 위한 흐름도이다. 도 35는 본 발명의 실시예에 따른 시스템 지원용의 운영 서버의 세부 구성을 설명하기 위한 블럭 구성도이다."}
