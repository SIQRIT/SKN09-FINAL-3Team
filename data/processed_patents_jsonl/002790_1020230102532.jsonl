{"patent_id": "10-2023-0102532", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0021252", "출원번호": "10-2023-0102532", "발명의 명칭": "실시간 스트리밍에서의 프레임 알고리즘을 이용한 페이크 감지기술과 방법", "출원인": "김준형", "발명자": "김준형"}}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "(110) 영상 처리 기술을 활용하여 프레임 간의 변화를 정확하게 감지하는 방법, 상기 방법으로 프레임 간의 차이를 계산하는 방법, 그리고 프레임 간의 변화를 감지하는데 사용되는 영상 처리 알고리즘을 포함하는 프레임간의 변화를 정확하게 감지하기 위한 영상 처리 기술."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "(11, 150) 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악하고, 픽셀 값 분석 결과에따라 페이크 여부를 확인하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "(140, 160) 무결성 프레임의 생성과 임계치 설정을 개발하여 페이크 영상과 원본 영상을 구분하는데 필요한 기준과 알고리즘을 제공하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "(250, 190, 270) CCTV 카메라로 스트리밍된 영상 데이터를 수집하고 저장하여 무결성을 확인하는 방법, 저장된영상 데이터와 스트리밍된 영상 데이터를 비교하여 무결성을 검증하는 알고리즘을 적용하는 방법, 그리고 메타데이터와 타임스탬프를 활용하여 영상의 무결성을 검증하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "(230, 210, 1.12, 240, 130) 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술을 개발하는 방법,실시간 스트리밍 영상과 원본 영상의 유사성을 판단하고 빠른 처리를 수행하는 알고리즘을 적용하는 방법, 실시간 스트리밍 영상과 원본 영상의 전처리 기술을 적용하여 속도 및 해상도 차이를 최소화하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "(220, 230, 210) 영상의 유사성을 판단하여 페이크 영상을 식별하는 방법, 실시간 스트리밍 영상과 원본 영상간의 빠른 비교와 매칭 알고리즘을 통해 영상의 유사성을 판단하는 방법, 그리고 영상의 특징점 추출과 효율적인 매칭 알고리즘을 적용하여 영상의 유사성을 판단하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "(110, 11, 140) 영상 처리 기술을 활용하여 프레임 간의 변화를 정확하게 감지하는 방법, 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악하는 방법, 그리고 무결성 프레임의 생성과 임계치 설정을개발하여 페이크 영상과 원본 영상을 구분하는데 필요한 기준과 알고리즘을 제공하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "(250, 190, 12, 230) CCTV 카메라로 스트리밍된 영상 데이터를 수집하고 저장하여 무결성을 확인하는 방법, 저장된 영상 데이터와 스트리밍된 영상 데이터를 비교하여 무결성을 검증하는 알고리즘을 적용하는 방법, 무결성검증 알고리즘을 통해 스트리밍 영상의 원본과의 일치 여부를 판별하는 방법, 그리고 메타데이터와 타임스탬프를 활용하여 영상의 무결성을 검증하는 방법."}
{"patent_id": "10-2023-0102532", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "(11, 150, 14) 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악하고, 픽셀 값 분석 결과에 따라 페이크 여부를 확인하는 방법, 페이크 영상과 원본 영상을 구분하는데 필요한 기준과 알고리즘 개발을 포함하는 방법.공개특허 10-2025-0021252-3-청구항 10 (230, 210, 1.12, 240, 130) 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술을 개발하는 방법,실시간 스트리밍 영상과 원본 영상의 유사성을 판단하고 빠른 처리를 수행하는 알고리즘을 적용하는 방법, 실시간 스트리밍 영상과 원본 영상의 전처리 기술을 적용하여 속도 및 해상도 차이를 최소화하는 방법를 포함하는방법."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "상기 발명은 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술을 개발하고, 영상 처리 기술을 통 해 프레임 간의 변화를 정확하게 감지하여 페이크 영상과 원본 영상을 신속하게 구분하는 방법이다. 이러한 발명 은 영상의 픽셀 값 분석, 특징점 추출, 효율적인 매칭 알고리즘, 그리고 속도 및 해상도 차이 최소화를 통해 페 (뒷면에 계속)"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 실시간 스트리밍에서의 페이크 감지 시스템 및 방법으로, 프레임 알고리즘을 활용하여 구현된다. 주 요 목표는 실시간 스트리밍 영상에서 가장 최근의 프레임 B가 페이크인지를 정확하게 판단하는 것이다. 원본 프 레임(A)은 실제로 녹화된 영상 데이터베이스(DB)인 A를 의미하며, 여기에는 정상적인 상황에서의 영상 데이터가 저장되어 있다. 시스템은 계속해서 실시간으로 생성되는 스트리밍 영상 프레임 B를 저장하며, 이는 CCTV 카메라에 의해 촬영되 고 전송된다. 이러한 프레임들은 원본 프레임 A와 실시간으로 비교되어 페이크 여부를 식별하는 데 사용된다. 이를 위해 시스템은 CCTV의 렌즈를 통해 스트리밍되어 A의 프레임이 저장될 때 고유한 해시 값과 CCTV의 메타데 이터 및 타임스탬프를 기록하여 데이터를 가공한다. 이 가공된 무결성 정보는 새로운 렌즈로 들어온 B와 비교됨 으로써 페이크 여부를 감지하는 데 활용된다. 시간이 흐름에 따라 새로운 프레임이 계속 생성되므로 실시간 감지와 비교가 중요하며, 해시 값과 메타데이터를 활용함으로써 효율적이고 신뢰성 있는 페이크 감지 시스템을 구현하게 된다. 본 발명은 실시간 스트리밍 환경에 서 발생하는 페이크 문제에 대응하기 위한 강력하고 효율적인 솔루션을 제공하며, 영상 컨텐츠의 신뢰성과 진실 성을 향상시키는 데 기여한다. 대표적인 본 발명에서의 영상 특징은 에지(edge), 코너(corner), 키포인트(keypoint) 등 이러한 영상 특징들은 주로 컴퓨터 비전분야에서 사용되며, 객체검출, 객체 추적, 영상매칭 등 다양한 응용에 활용된다. 특히딥러닝과 같은 인공지능기술과 결합하여 영상인식과 분석에 사용되기도한다. 특징 추출을통해 영상의 정보를압축하고 추 상화하여 효율적인처리와 인식이 가능해지므로 중요한기술로 인정받고 있다. 본 발명의 프레임 간의 변화는 영상의 움직임, 객체의 움직임, 색상 변화 등 다양한 정보를 의미할 수 있다. 영 상은 연속적인 이미지들의 시퀀스로이루어져 있으며, 이 프레임들 사이의 변화를분석하면 영상의 동적인특성을 파악할 수있다. 상기 개념과 기반 기술을 통해 영상에서의미 있는 정보를추출하고 객체의 동작이나움직임을 이해하는데 활용한 다. 또한, 이러한 분석 결과를 바탕으로영상의 내용을 인식하고이해하는데 사용한다. 특히, 프레임 간의 변화를 분석하고 실시간 스트리밍에서의 프레임 알고리즘을 이용한 페이크 감지기술과 방법 을 고안했다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "본 발명의 대표적인 영상 특징은 에지(edge), 코너(corner), 키포인트(keypoint) 등 이러한 영상 특징들은 주로 컴퓨터 비전분야에서 사용되며, 객체검출, 객체 추적, 영상매칭 등 다양한 응용에 활용된다. 특히딥러닝과 같은인공지능기술과 결합하여 영상인식과 분석에 사용되기도한다. 특징 추출을통해 영상의 정보를압축하고 추상화하 여 효율적인처리와 인식이 가능해지므로 중요한기술로 인정받고 있다. 본 발명의 프레임 간의 변화는 영상의 움직임, 객체의 움직임, 색상 변화 등 다양한 정보를 의미할 수 있다. 영 상은 연속적인 이미지들의 시퀀스로이루어져 있으며, 이 프레임들 사이의 변화를분석하면 영상의 동적인특성을 파악할 수있다. 상기 개념과 기반 기술을 통해 영상에서의미 있는 정보를추출하고 객체의 동작이나움직임을 이해하는데 활용한 다. 또한, 이러한 분석 결과를 바탕으로영상의 내용을 인식하고이해하는데 사용한다. 특히, 프레임 간의 변화를 분석하고 실시간 스트리밍에서의 프레임 알고리즘을 이용한 페이크 감지기술과 방법 을 고안했다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "위의 발명을 하고자 하는 내용과 기본적으로 제시된 발명의 목표를 바탕으로 해결하고자 하는 구체적이고 세부 적인 과제들은 다음과 같을 수 있다: 1. 프레임 간의 변화를 정확하게 감지하기 위한 영상 처리 기술 개발: 실시간 스트리밍 영상에서 발생하는 다 양한 움직임과 변화를 정확하게 분석하고 처리하는 기술을 개발해야 한다. 이를 통해 프레임 간의 변화를 신속 하고 정확하게 감지할 수 있어야 한다. 2. 페이크 영상과 원본 영상을 구분하는 기준과 알고리즘 개발: 페이크 영상과 원본 영상의 특징을 구분하는 기준과 이를 판별하기 위한 알고리즘을 개발해야 한다. 이를 통해 페이크 여부를 정확하게 판단할 수 있어야 한 다. 3. CCTV 카메라의 렌즈로 스트리밍된 영상의 무결성 검증 기술 개발: CCTV 카메라로부터 스트리밍된 영상의 무결성을 검증하는 기술을 개발해야 한다. 이를 통해 영상 데이터의 변조나 위변조를 감지하여 신뢰성 있는 데 이터를 확보해야 한다. 4. 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술 개발: 실시간 스트리밍 영상과 원본 영상 을 빠르게 비교하고 매칭하는 기술을 개발해야 합니다. 이를 통해 실시간으로 페이크 여부를 판단할 수 있어야 한다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 1. 프레임 간의 변화를 정확하게 감지하기 위한 영상 처리 기술 개발을 해결하기 위하여 일반적으로 기 존의 컴퓨터 비전, 영상 처리, 딥러닝 등의 분야를 포함하며, 여러 알고리즘과 기술이 조합되어야 한다.그러나 이러한 이론적으로 개념적인 방법으로는 많은 시간과 비용을 감수해야 한다. 따라서 상기 '프레임 간의 변화를 정확하게 감지하기 위한 영상처리'에 대한 해결을 위하여 고안한 것은,, 먼저, 프레임 간의 차이를 계산하는 부분에서는 이미지 간의 유사도를 측정하는 방법이다. 예를 들어, 영상의 픽셀 간 차이를 계산하거나, 특징점을 추출하여 매칭하는 방법을 사용한다. 그리고 영상 처리 기술을 적용하는 부분에서는 그레이스케일 변환, 경계선 검출, 객체 추적 등의 기술을 사용한 다. 무결성 프레임의 생성과 임계치 설정은 해당 기술에 따라 다양하게 구현될 수 있으며, 특정한 데이터셋과 상황 에 맞게 조정한다. 상기 2. 페이크 영상과 원본 영상을 구분하는 기준과 알고리즘 개발을 해결하기 위하여, 페이크 영상과 원본 영 상을 구분하는데에는 여러 가지 기준과 알고리즘이 필요하다.먼저, 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악한다. 픽셀 값 분석을 통해 페 이크 영상에서 보이는 이미지 합성이나 수정된 부분들을 식별한다. 무결성 프레임의 생성과 임계치 설정 역시 페이크 영상과 원본 영상을 구분하는데 중요한 요소로서 적절한 임계 치 설정을 통해 페이크 영상과 원본 영상을 확실하게 분류한다. 상기 3. CCTV 카메라의 렌즈로 스트리밍된 영상의 무결성 검증 기술 개발을 해결하기 위해서는 다음과 같이 한 다. 첫째로, CCTV 카메라의 렌즈로 스트리밍된 영상의 데이터를 수집하고 저장하는 과정에서 무결성을 확인한다. 이 를 위해 영상 데이터의 해시 값을 생성하고 저장하여 해당 영상이 변조되지 않았음을 확인한다. 둘째로, 저장된 영상 데이터와 실시간으로 스트리밍되는 영상 데이터 간에 비교를 수행하여 무결성을 검증하는 알고리즘화 한다. 이를 통해 스트리밍된 영상이 원본과 일치하는지 여부를 확인하고 페이크 영상을 식별한다. 셋째로, CCTV 카메라의 메타데이터와 타임스탬프를 활용하여 영상의 무결성을 검증한다. 메타데이터와 타임스탬 프를 분석하여 영상이 적절한 시간에 촬영되었는지와 CCTV 카메라와의 일치 여부를 확인한다. 상기 4. 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술 개발을 해결하기 위해서는 다음과 같 이 한다. 첫째로, 실시간 스트리밍 영상과 원본 영상을 빠르게 비교하는 알고리즘화 한다. 이를 위해 영상의 특징점을 추 출하고, 특징점들 간의 매칭을 수행하여 실시간 스트리밍 영상과 원본 영상 간의 유사성을 판단한다. 이 과정에 서 효율적이고 정확한 매칭 알고리즘을 적용하여 빠른 처리 속도로 처리한다. 둘째로, 실시간 스트리밍 영상과 원본 영상의 해상도, 프레임 속도 등을 맞추는 전처리 기술을 구사한다. 이를 통해 비교 및 매칭하는 과정에서 발생하는 속도 차이나 해상도 차이로 인한 문제를 최소화한다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상기 발명으로 개발된 영상 처리 기술과 무결성 검증 기술은 다양한 산업 분야에 혁신을 가져올 수 있다. 보안 및 감시 시스템: CCTV 카메라를 사용하는 보안 및 감시 시스템에서 페이크 영상 탐지와 영상 무결성 검증 기술은 위조나 변조된 영상을 신속하게 탐지하고 원본 영상의 무결성을 보장할 수 있다. 이를 통해 보안과 감시 의 효율성과 신뢰성이 높아지며, 범죄 예방 및 사고 조사에 큰 도움이 될 수 있다. 디지털 저작권 관리: 영상의 위조나 변조로 인한 디지털 저작권 침해를 방지하기 위해 페이크 영상 탐지 기술이 활용될 수 있다. 원본 영상의 무결성을 보장하고 저작권을 보호함으로써 저작권자의 권리를 보호할 수 있다.미디어 및 광고 산업: 영상의 신뢰성이 중요한 미디어 및 광고 산업에서도 페이크 영상 탐지와 무결성 검증 기 술이 활용될 수 있다. 신뢰성 있는 광고 및 뉴스 영상을 제공함으로써 소비자들의 신뢰를 얻을 수 있고, 광고 주체들의 권리를 보호할 수 있다. 온라인 플랫폼 및 소셜 미디어: 온라인 플랫폼과 소셜 미디어에서 페이크 영상 탐지 기술이 활용되면 사용자들 이 위조된 영상에 속지 않도록 도와줄 수 있다. 또한, 온라인 플랫폼에서 원본 영상의 무결성을 보장함으로써 신뢰성 있는 콘텐츠 제공에 기여할 수 있다. 교육 및 연구 분야: 페이크 영상 탐지와 무결성 검증 기술은 교육 및 연구 분야에서도 활용될 수 있다. 온라인 강의나 연구 결과를 보다 신뢰성 있게 제공하고 보호할 수 있으며, 학술적인 연구에서 위조된 영상을 방지하여 학문적인 진보를 이끌어낼 수 있다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "이러한 발명의 효과를 통해 영상 관련 산업의 혁신과 신뢰성 향상을 기대할 수 있다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "상기 발명을 실시하기 위한 구체적인 내용을 서술하면, 도 1은, 상기 1. 프레임 간의 변화를 정확하게 감지하기 위한 영상 처리 기술 개발을 해결하기 위하여 일반적으로 기존의 컴퓨터 비전, 영상 처리, 딥러닝 등의 분야를 포함하며, 여러 알고리즘과 기술이 조합되어야 한다. 그러나 이러한 이론적으로 개념적인 방법으로는 많 은 시간과 비용을 감수해야 한다. 따라서 상기 '프레임 간의 변화를 정확하게 감지하기 위한 영상처리'에 대한 해결을 위하여 고안한 것은, 먼저, 프레임 간의 차이를 계산하는 부분에서는 이미지 간의 유사도를 측정하는 방법이다. 예를 들어, 영상의 픽셀 간 차이를 계산하거나, 특징점을 추출하여 매칭하는 방법을 사용한다. 그리고 영상 처리 기술을 적용하는 부분에서는 그레이스케일 변환, 경계선 검출, 객체 추적 등의 기술을 사용한다. 무결성 프레임의 생성과 임계치 설정은 해당 기술에 따라 다양하게 구현될 수 있으며, 특정한 데이터셋과 상황 에 맞게 조정한다. 이 발명을 실현하기 위한 실시의 의사코드는 다음과 같다. # 프레임 간의 변화를 정확하게 감지하기 위한 영상 처리 기술 개발 # 이미지 간의 유사도 측정을 위한 함수 def calculate_pixel_difference(image1, image2): # 이미지 크기 확인 if image1.shape != image2.shape: raise ValueError(\"이미지 크기가 동일하지 않습니다.\")"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "# 픽셀 간 차이 계산 diff = abs(image1 - image2) similarity_score = 1.0 - (diff.sum() / (image1.shape[0] * image1.shape[1] * 255.0)) return similarity_score # 그레이스케일 변환 함수 def convert_to_grayscale(image): # 각 픽셀의 RGB 값들을 평균하여 그레이스케일로 변환 gray_image = np.mean(image, axis=2).astype(np.uint8) return gray_image # 경계선 검출 함수 def detect_edges(gray_image): # Canny 알고리즘을 이용하여 경계선 검출 edges_image = cv2.Canny(gray_image, threshold1=100, threshold2=200) return edges_image # 객체 추적 함수 def track_objects(edges_image): # Hough Transform을 이용하여 선분 검출 lines = cv2.HoughLines(edges_image, rho=1, theta=np.pi/180, threshold=100) return lines # 무결성 프레임의 생성과 임계치 설정 def generate_integrity_frame(image): # 그레이스케일 변환 적용 gray_image = convert_to_grayscale(image)"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "# 경계선 검출 적용 edges_image = detect_edges(gray_image)"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "# 객체 추적 적용 tracked_objects = track_objects(edges_image)"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "# 특정 데이터셋과 상황에 맞게 임계치 설정 threshold = 0.9"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "return tracked_objects, threshold 위의 코드는 세부적인 알고리즘과 기능들을 추가하여 프레임 간의 변화를 정확하게 감지하는 기술을 보여준다. 주어진 이미지의 픽셀 간 차이를 계산하여 유사도를 측정하고, 그레이스케일 변환, 경계선 검출, 객체 추적 등 의 영상 처리 기술을 적용하여 프레임 간의 변화를 분석한다. 또한, 무결성 프레임을 생성하고 임계치를 설정하 여 페이크 여부를 판단하는 기능도 구현되어 있다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "상기 발명을 실시하기 위한 구체적인 내용을 서술하면, 도 2는, 상기 2. 페이크 영상과 원본 영상을 구분하는 기준과 알고리즘 개발을 해결하기 위하여, 페이크 영상과 원본 영상을 구분하는데에는 여러 가지 기준과 알고리 즘이 필요하다. 먼저, 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악한다. 픽셀 값 분석을 통해 페이크 영상에서 보이는 이미지 합성이나 수정된 부분들을 식별한다. 무결성 프레임의 생성과 임계치 설정 역시 페이크 영상과 원본 영상을 구분하는데 중요한 요소로서 적절한 임계 치 설정을 통해 페이크 영상과 원본 영상을 확실하게 분류한다. 이 발명을 실현하기 위한 실시의 의사코드는 다음과 같다. function detectFakeVideo(originalFrame, fakeFrame) { // 영상의 픽셀 값 분석을 위한 변수 선언 var threshold = 10; // 픽셀 값 차이 임계치 설정 var diffCount = 0; // 차이가 발생한 픽셀 개수 초기화 // 원본 영상과 페이크 영상의 크기가 동일한지 확인 if (originalFrame.width != fakeFrame.width || originalFrame.height != fakeFrame.height) { return false; // 크기가 다르면 페이크 영상으로 판단하지 않음 } // 원본 영상과 페이크 영상의 각 픽셀 비교 for (var y = 0; y < originalFrame.height; y++) { for (var x = 0; x < originalFrame.width; x++) { // 각 픽셀의 RGB 값을 비교하여 차이가 일정 값(threshold) 이상이면 diffCount 증가 var originalPixel = originalFrame.getPixel(x, y); var fakePixel = fakeFrame.getPixel(x, y); var pixelDiff = calculatePixelDifference(originalPixel, fakePixel); if (pixelDiff > threshold) { diffCount++; } } } // 차이가 발생한 픽셀의 개수가 일정 비율 이상이면 페이크 영상으로 판단 var totalPixels = originalFrame.width * originalFrame.height; var diffRatio = diffCount / totalPixels; var fakeThreshold = 0.01; // 페이크 영상 판단 임계치 설정 if (diffRatio > fakeThreshold) { return true; // 페이크 영상으로 판단 } else { return false; // 원본 영상으로 판단 } } function calculatePixelDifference(pixel1, pixel2) { // 각 픽셀의 RGB 값 차이를 계산하는 함수 var redDiff = Math.abs(pixel1.red - pixel2.red); var greenDiff = Math.abs(pixel1.green - pixel2.green); var blueDiff = Math.abs(pixel1.blue - pixel2.blue); return (redDiff + greenDiff + blueDiff) / 3; // RGB 값의 평균 차이 반환 } 위의 코드에서는 calculatePixelDifference 함수를 새로 추가하여 두 픽셀의 RGB 값을 비교하고 평균 차이를 계 산하는 기능을 분리했다. 또한, detectFakeVideo 함수에서 픽셀 값 분석을 더 세부적으로 처리하도록 수정했다. 이렇게 구체화된 코드는 픽셀 값 비교를 더 정교하게 수행하고 페이크 영상 판단의 정확도를 높일 수 있다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "상기 발명을 실시하기 위한 구체적인 내용을 서술하면, 도 3은, 상기 3. CCTV 카메라의 렌즈로 스트리밍된 영상 의 무결성 검증 기술 개발을 해결하기 위해서는 다음과 같이 한다. 첫째로, CCTV 카메라의 렌즈로 스트리 밍된 영상의 데이터를 수집하고 저장하는 과정에서 무결성을 확인한다. 이를 위해 영상 데이터의 해시 값을 생 성하여 저장하여 해당 영상이 변조되지 않았음을 확인한다. 둘째로, 저장된 영상 데이터와 실시간 으로 스트리밍되는 영상 데이터 간에 비교를 수행하여 무결성을 검증하는 알고리즘화 한다. 이를 통해 스트리밍 된 영상이 원본과 일치하는지 여부를 확인하고 페이크 영상을 식별한다. 셋째로, CCTV 카메라의 메타데이 터와 타임스탬프를 활용하여 영상의 무결성을 검증한다. 메타데이터와 타임스탬프를 분석하여 영상이 적절한 시 간에 촬영되었는지와 CCTV 카메라와의 일치 여부를 확인한다.이 발명을 실현하기 위한 실시의 의사코드는 다음과 같다. # CCTV 카메라로부터 영상 데이터를 수집하고 저장하는 함수 def 영상_수집_및_저장(): 영상_데이터 = CCTV로부터_영상_데이터_수집() # CCTV 렌즈로부터 영상 데이터 수집 해시값 = 해시_계산(영상_데이터) # 영상 데이터의 해시 값 계산 저장된_영상_데이터_저장(해시값, 영상_데이터) # 해시 값을 포함하여 영상 데이터 저장 # 실시간 스트리밍 영상의 무결성을 검증하는 함수 def 실시간_무결성_검증(): 저장된_해시값, 저장된_영상_데이터 = 저장된_영상_데이터_조회() # 이전에 저장된 영상 데이터 조회 현재_영상_데이터 = CCTV로부터_영상_데이터_수집() # 현재 영상 데이터 수집 현재_해시값 = 해시_계산(현재_영상_데이터) # 현재 영상 데이터의 해시 값 계산"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "# 무결성 검증을 위해 해시 값 비교 if 저장된_해시값 == 현재_해시값: return \"영상 무결성 검증 완료\" else: return \"영상 무결성이 손상되었습니다\" # CCTV 카메라의 메타데이터와 타임스탬프를 분석하여 영상의 무결성을 검증하는 함수 def 메타데이터와_타임스탬프_검증(): 저장된_메타데이터, 저장된_타임스탬프 = 메타데이터와_타임스탬프_조회() # 저장된 영상의 메타데이터와 타임스탬프 조회 현재_메타데이터, 현재_타임스탬프 = CCTV로부터_메타데이터와_타임스탬프_수집() # 현재 CCTV로부터 메타 데이터와 타임스탬프 수집"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "# 메타데이터와 타임스탬프 비교를 통해 무결성 검증 if 저장된_메타데이터 == 현재_메타데이터 and abs(저장된_타임스탬프 - 현재_타임스탬프) < 임계치: return \"메타데이터와 타임스탬프 검증 완료\" else: return \"메타데이터 또는 타임스탬프가 일치하지 않습니다\" # 무결성 검증 과정을 실행하는 메인 함수 def 영상_무결성_검증(): 영상_수집_및_저장() # 영상 데이터 수집 및 저장 무결성_결과 = 실시간_무결성_검증() # 실시간 영상 무결성 검증 메타데이터_결과 = 메타데이터와_타임스탬프_검증() # 메타데이터와 타임스탬프 검증 return 무결성_결과, 메타데이터_결과 # 무결성과 메타데이터 검증 결과 반환 위의 코드는 CCTV 카메라의 렌즈로 스트리밍된 영상의 무결성 검증 기술을 개발하는 과정을 더욱 세부적으로 고 도화한 것이다. 코드 내용은 영상 데이터 수집과 저장, 실시간 무결성 검증, 메타데이터와 타임스탬프 검증 등 을 자세히 설명하고 있다."}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "상기 발명을 실시하기 위한 구체적인 내용을 서술하면, 도 4는, 상기 4. 실시간 스트리밍 영상과 원본 영상 간 의 빠른 비교 및 매칭 기술 개발을 해결하기 위해서는 다음과 같이 한다. 첫째로, 실시간 스트리밍 영상 과 원본 영상을 빠르게 비교하는 알고리즘화 한다. 이를 위해 영상의 특징점을 추출하고, 특징점들 간의 매칭을 수행하여 실시간 스트리밍 영상과 원본 영상 간의 유사성을 판단한다. 이 과정에서 효율적이고 정 확한 매칭 알고리즘을 적용하여 빠른 처리 속도로 처리한다. 둘째로, 실시간 스트리밍 영상과 원본 영상 의 해상도, 프레임 속도 등을 맞추는 전처리 기술을 구사한다. 이를 통해 비교 및 매칭하는 과정에서 발생하는 속도 차이나 해상도 차이로 인한 문제를 최소화한다. 이 발명을 실현하기 위한 실시의 의사코드는 다음과 같다. # 특징점 추출 및 매칭 알고리즘 클래스 class 특징점_추출_및_매칭_알고리즘: def __init__(self, 실시간_스트리밍_영상, 원본_영상): self.실시간_스트리밍_영상 = 실시간_스트리밍_영상 self.원본_영상 = 원본_영상"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "def 특징점_추출(self): # 실시간 스트리밍 영상과 원본 영상에서 특징점 추출하는 코드 pass"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "def 매칭(self): # 추출된 특징점들 간의 매칭을 수행하는 코드 pass # 전처리 기술 클래스 class 전처리_기술: def __init__(self, 실시간_스트리밍_영상, 원본_영상): self.실시간_스트리밍_영상 = 실시간_스트리밍_영상 self.원본_영상 = 원본_영상 def 해상도_프레임_맞춤(self): # 실시간 스트리밍 영상과 원본 영상의 해상도, 프레임 속도를 맞추는 코드 pass # 실시간 비교 및 매칭 과정을 실행하는 메인 함수 def 실시간_비교_및_매칭(): 실시간_스트리밍_영상 = CCTV로부터_스트리밍_영상_수집() # 실시간 스트리밍 영상 수집 원본_영상 = 원본_영상_데이터_로드() # 원본 영상 데이터 로드"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "특징점_추출_및_매칭_알고리즘 = 특징점_추출_및_매칭_알고리즘(실시간_스트리밍_영상, 원본_영상) 전처리_기술 = 전처리_기술(실시간_스트리밍_영상, 원본_영상)"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 15, "content": "전처리_결과 = 전처리_기술.해상도_프레임_맞춤() # 전처리 과정 실행 특징점_추출_및_매칭_알고리즘.특징점_추출() # 특징점 추출 매칭_결과 = 특징점_추출_및_매칭_알고리즘.매칭() # 매칭 과정 실행"}
{"patent_id": "10-2023-0102532", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 16, "content": "return 매칭_결과 # 비교 및 매칭 결과 반환 위의 의사코드는 특징점 추출 및 매칭 알고리즘과 전처리 기술을 더 세부적으로 클래스로 구현하였다. 각 클래 스 내에는 실제적인 알고리즘 구현이 들어가야 하며, 주석으로 표시한 부분은 해당 알고리즘을 추가해야 한다. 이렇게 구체적으로 세분화된 의사코드를 통해 발명을 위한 해결과제를 더욱 실제적으로 구현하고 검증할 수 있 다. 산업상 이용가능성 상기 발명을 산업에 적용하면 더욱 신뢰성 있는 영상 데이터와 정보를 제공하고, 보안 및 효율성을 강화하여 다 음과 같이 다양한 산업 분야에서 혁신적인 활용을 할 수 있다. 보안 및 방어 산업: 위조나 변조된 영상을 감지하여 보안 및 방어 시스템에 활용할 수 있다. 특히 CCTV 카메라 나 감시 시스템에서 실시간으로 페이크 영상을 탐지하고 원본 영상과의 무결성을 검증하여 보안 수준을 향상시 킨다. 미디어 및 콘텐츠 산업: 온라인 플랫폼에서의 페이크 영상은 정보의 신뢰성을 저해할 수 있다. 이러한 발명을 활용하여 영상 콘텐츠의 신뢰성을 검증하고 페이크 영상을 필터링하여 온라인 미디어 환경을 더욱 안전하고 신 뢰성 있는 공간으로 개선한다. 교육 및 학습 산업: 발명을 기반으로한 영상 학습 플랫폼에서는 학생들에게 정확하고 신뢰성 있는 영상 학습 경 험을 제공할 수 있게한다. 페이크 영상을 탐지하여 학습 자료의 무결성을 보장하고 학습의 효율성을 높여준다. 의료 산업: 의료 영상에 대한 정확한 진단과 검사가 중요하다. 이러한 발명을 활용하여 의료 영상의 신뢰성을 높이고 변조된 영상을 탐지하여 의료 결과의 정확성을 보장한다. 영상 편집 및 제작 산업: 영상 편집 및 제작 도구에 적용하여 페이크 영상의 제작을 방지하고 원본 영상의 무결 성을 보존하는데 도움을 준다. 이를 통해 영상 편집 및 제작 산업의 신뢰성과 품질을 향상시킬 수 있다. 보험 및 금융 산업: 페이크 영상으로 인한 보험 사기나 금융 사기를 방지하기 위해 발명을 활용하여 영상 데이 터의 무결성을 검증하고 위조된 정보를 탐지할 수 있다. 자율주행 및 인공지능 기술: 자율주행 차량이나 인공지능 시스템에서 영상 데이터의 정확성과 신뢰성이 매우 중 요하다. 위조된 영상 데이터를 탐지하고 무결성을 보장하는데 이러한 발명이 기여할 수 있다."}
{"patent_id": "10-2023-0102532", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은, 프레임 간의 변화를 정확하게 감지하기 위한 영상 처리 기술 개발에 대한 도면을 나타내는 것이다. 해 당 도면은 영상 처리 기술을 활용하여 페이크 영상과 원본 영상을 구분하는 과정을 설명한다. 도면 설명: 시작: 알고리즘의 시작을 나타내는 단계. 이미지 간의 유사도 측정 함수 호출: 이미지 간의 유사도를 측정하는 함수를 호출합니다. 이 함수는 영상 의 픽셀 값 분석 등을 통해 이미지 간의 차이를 측정하고 유사도 점수를 계산한다. 이미지 간의 유사도를 측정하여 유사도 점수 계산: 이미지 간의 유사도 점수를 계산한다. 이 점수는 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이를 나타낸다. 이미지 간의 유사도 점수가 임계치 이상인지 확인: 4.1. 이미지 간의 유사도 점수가 임계치 이상인 경우: - 그레이스케일 변환 함수 호출: 그레이스케일로 영상을 변환하는 함수를 호출한다. - 경계선 검출 함수 호출: 경계선을 검출하는 함수를 호출한다. - 객체 추적 함수 호출: 특정 객체를 추적하는 함수를 호출한다. - 무결성 프레임의 생성과 임계치 설정: 무결성 프레임을 생성하고 적절한 임계치를 설정하여 페이크 영 상과 원본 영상을 구분한다. 이미지 간의 유사도 점수가 임계치 미만인 경우: - \"페이크 영상이 아님\"으로 판단한다. 결과 출력: 결과를 출력하는 단계입니다. 알고리즘의 결과에 따라 페이크 영상과 원본 영상을 구분하여 출력한 다. 끝: 알고리즘의 종료를 나타내는 단계. 도 1은, 이 도면은 영상 처리 기술을 활용하여 페이크 영상과 원본 영상을 정확하게 구분하는 기술 개발을 설명 하고 있다. 픽셀 값 분석, 그레이스케일 변환, 경계선 검출, 객체 추적 등의 기술을 활용하여 무결성 프레임을 생성하고 적절한 임계치를 설정하여 페이크 영상과 원본 영상을 확실하게 분류하는 과정을 보여준다. 이를 통해 페이크 영상으로부터 사회적으로 중요한 문제를 예방하고 영상의 무결성을 유지할 수 있다. 도 2는, 페이크 영상과 원본 영상을 구분하는 기준과 알고리즘 개발을 해결하기 위한 도면을 나타낸다. 해당 도면은 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상을 구분하고, 무결성 프레임의 생성과 적절한 임계치 설정을 통해 페이크 영상과 원본 영상을 확실하게 분류하는 과정을 설명한다. 도면 설명: 시작: 알고리즘의 시작을 나타내는 단계. 영상의 픽셀 값 분석: 영상의 픽셀 값을 분석합니다. 이 단계에서는 픽셀 값 분석을 통해 페이크 영상과 원본 영상 간의 차이점을 파악한다. 픽셀 값 분석 결과에 따라 페이크 여부 확인: 픽셀 값 분석 결과를 바탕으로 페이크 영상과 원본 영상을 구분한다. 이 단계에서는 이미지 합성이나 수정된 부분들을 식별하여 페이크 여부를 확인한다. 페이크 영상과 원본 영상을 구분하는데 필요한 기준과 알고리즘 개발: 페이크 영상과 원본 영상을 구분하 기 위해 필요한 기준과 알고리즘을 개발한다. 이 단계에서는 픽셀 값 분석 결과를 기반으로 페이크 영상과 원본 영상을 구분하는 방법을 정립한다. 무결성 프레임의 생성과 임계치 설정 개발: 무결성 프레임을 생성하고 적절한 임계치를 설정하여 페이크 영상과 원본 영상을 확실하게 분류한다. 이 단계에서는 픽셀 값 분석과 기준에 따라 무결성 프레임을 구성하고 임계치를 설정한다. 적절한 임계치 설정을 통한 페이크 영상과 원본 영상의 분류: 앞선 단계에서 설정한 적절한 임계치를 사 용하여 페이크 영상과 원본 영상을 분류한다. 이 단계에서는 임계치를 기준으로 페이크 영상과 원본 영상을 식 별한다. 끝: 알고리즘의 종료를 나타내는 단계. 도 2는, 이 도면은 영상의 픽셀 값 분석을 통해 페이크 영상과 원본 영상을 구분하고, 무결성 프레임의 생성과 적절한 임계치 설정을 통해 페이크 영상과 원본 영상을 구분하는 기준과 알고리즘 개발 과정을 설명하고 있다. 이를 통해 페이크 영상과 원본 영상을 정확하게 분류하여 영상의 무결성을 유지하는 기술을 개발할 수 있다. 도 3은, CCTV 카메라의 렌즈로 스트리밍된 영상의 무결성 검증 기술 개발을 해결하기 위한 도면을 나타낸다. 해 당 도면은 CCTV 카메라로 스트리밍된 영상 데이터를 수집 및 저장하고, 무결성 확인을 위해 영상 데이터의 해시 값을 생성하여 저장한다. 저장된 영상 데이터와 스트리밍된 영상 데이터를 비교하고, 무결성 검증 알고리즘을 통해 스트리밍 영상이 원본과 일치하는지 여부를 판별한다. 메타데이터와 타임스탬프를 활용하여 무결성을 검증 한다. 도면 설명: 시작: 알고리즘의 시작을 나타내는 단계. CCTV 카메라로 스트리밍된 영상 데이터 수집 및 저장: CCTV 카메라로부터 스트리밍된 영상 데이터를 수집 하고 저장한다. 이 단계에서는 영상 데이터를 무결성 검증을 위해 준비한다. 무결성 확인을 위한 영상 데이터 해시 값 생성: 수집한 영상 데이터의 해시 값을 생성하여 저장한다. 이 단계에서는 영상 데이터의 무결성을 확인할 수 있는 해시 값을 생성한다. 저장된 영상 데이터와 스트리밍된 영상 데이터 비교: 저장된 영상 데이터와 실시간으로 스트리밍되는 영 상 데이터를 비교한다. 이 단계에서는 스트리밍된 영상의 무결성을 검증하기 위해 저장된 데이터와 비교한다. 무결성 검증 알고리즘을 통한 스트리밍 영상의 원본과의 일치 여부 판별: 무결성 검증 알고리즘을 사용하 여 스트리밍 영상이 원본과 일치하는지 여부를 판별한다. 이 단계에서는 스트리밍 영상의 무결성을 확인하고 원 본과의 일치 여부를 결정한다. 메타데이터와 타임스탬프를 활용한 무결성 검증: CCTV 카메라의 메타데이터와 타임스탬프를 활용하여 영 상의 무결성을 검증한다. 이 단계에서는 영상이 적절한 시간에 촬영되었는지와 CCTV 카메라와의 일치 여부를 확 인한다. 끝: 알고리즘의 종료를 나타내는 단계. 도 3은, 이 도면은 CCTV 카메라로 스트리밍된 영상의 무결성 검증 기술 개발을 해결하기 위해 영상 데이터 수집, 해시 값 생성, 데이터 비교, 무결성 검증 알고리즘 적용, 메타데이터 활용 등 다양한 과정을 포함하고 있다. 이를 통해 스트리밍 영상의 무결성을 보장하고 변조 여부를 판별하는 기술을 개발할 수 있다. 도 4는, 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭 기술 개발을 해결하기 위한 도면이다. 도 4 는, 실시간 스트리밍 영상과 원본 영상을 빠르게 비교하는 알고리즘화를 하고, 영상의 특징점을 추출하고 효율 적이고 정확한 매칭 알고리즘을 적용하여 실시간 스트리밍 영상과 원본 영상의 유사성을 판단하고 빠른 처리를 수행한다. 또한, 실시간 스트리밍 영상과 원본 영상의 전처리 기술을 적용하여 속도 및 해상도 차이를 최소화한 다. 도면 설명: 시작: 알고리즘의 시작을 나타내는 단계. 실시간 스트리밍 영상과 원본 영상 비교 알고리즘화: 실시간으로 스트리밍되는 영상과 원본 영상을 비교 하는 알고리즘을 개발합니다. 이 단계에서는 영상 비교를 위한 기본적인 틀을 구축한다. 영상의 특징점 추출 및 효율적이고 정확한 매칭 알고리즘 적용: 영상의 특징점을 추출하고 효율적이고 정 확한 매칭 알고리즘을 적용한다. 이 단계에서는 영상 비교를 위한 기술적인 요소들을 구현한다. 실시간 스트리밍 영상과 원본 영상의 유사성 판단 및 빠른 처리: 특징점 추출과 매칭을 통해 실시간 스트 리밍 영상과 원본 영상의 유사성을 판단하고 빠른 처리를 수행한다. 실시간 스트리밍 영상과 원본 영상의 전처리 기술 적용: 실시간 스트리밍 영상과 원본 영상의 전처리 기 술을 적용한다. 이 단계에서는 비교 및 매칭하는 과정에서 발생하는 속도 차이나 해상도 차이를 최소화한다. 속도 및 해상도 차이 최소화: 전처리를 통해 발생하는 속도 및 해상도 차이를 최소화한다. 끝: 알고리즘의 종료를 나타내는 단계. 도 4는, 이 도면은 실시간 스트리밍 영상과 원본 영상 간의 빠른 비교 및 매칭을 위해 특징점 추출, 매칭 알고 리즘 적용, 전처리 기술을 사용하여 속도와 해상도 차이를 최소화하는 기술을 개발하는 것을 목표로 한다. 이를 통해 실시간으로 영상을 비교하고 처리하는 데 있어 높은 효율성과 정확성을 달성할 수 있다."}
