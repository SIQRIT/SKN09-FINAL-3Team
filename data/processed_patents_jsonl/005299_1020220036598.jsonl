{"patent_id": "10-2022-0036598", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0149418", "출원번호": "10-2022-0036598", "발명의 명칭": "자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하는 방법들 및 장치들", "출원인": "인텔 코포레이션", "발명자": "호우, 민민"}}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 장치로서,자동화된 모델 업데이트 프로세스를 트리거하는 지능적 트리거 회로;모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 자동화된 모델 검색 회로; 및시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 지능적 모델 배치 회로를 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 지능적 트리거 회로는 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능모델을 추가로 포함하고, 상기 자동화된 검색 회로는, 상기 지능적 트리거 회로가 상기 자동화된 모델 업데이트프로세스를 트리거하는 것에 응답하여, 복수의 후보 인공 지능 모델들을 생성하거나 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 후보 인공 지능 모델들을 선택하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수집된 데이터에기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는상기 제1 인공 지능 모델의 모델 아키텍처를 구현하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼파라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 유사한모델 아키텍처를 구현하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제4항에 있어서, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아키텍처를 구현하는,장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제4항에 있어서, 상기 자동화된 모델 검색 회로는 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제4항에 있어서, 상기 지능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하고 상기 지공개특허 10-2022-0149418-3-능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "장치로서,컴퓨터 판독가능 매체;상기 장치에서의 명령어들;로직 회로를 포함하고,상기 로직 회로는 상기 명령어들을 실행하여 적어도:자동화된 모델 업데이트 프로세스를 트리거하고;모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하고;시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 메트릭 베이스라인, 제1 공장생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하게 하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항 또는 제11항에 있어서, 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델을 추가로 포함하고, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 트리거된 자동화된 모델 업데이트 프로세스에 응답하여, 복수의 후보 인공 지능 모델들을 생성하게 하거나 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택하게 하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택하게 하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 방법으로서,자동화된 모델 업데이트 프로세스를 트리거하는 단계;모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 단계; 및시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 방법은 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하는 단계를 추가로 포함하는, 방법."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항 또는 제15항에 있어서, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델이, 트리공개특허 10-2022-0149418-4-거된 자동화된 모델 업데이트 프로세스에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 단계 또는 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택하는 단계를 추가로 포함하는, 방법."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터제1 후보 인공 지능 모델을 선택하는 단계를 추가로 포함하는, 방법."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서, 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하는 단계 및 상기 복수의 후보 인공 지능모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거하는단계를 추가로 포함하는, 방법."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 장치로서,자동화된 모델 업데이트 프로세스를 트리거하는 수단;모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 수단; 및시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 수단을 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 장치는 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하는 수단을 추가로 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제19항 또는 제20항에 있어서, 상기 제1 공장 생산 라인에서 동작하는 제1 인공 지능 모델을 추가로 포함하고,상기 자동화된 모델 업데이트 프로세스를 트리거하는 수단이 상기 자동화된 모델 업데이트 프로세스를 트리거하는 것에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 수단 또는 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택하는 수단을 추가로 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제21항에 있어서, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터제1 후보 인공 지능 모델을 선택하는 수단을 추가로 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제21항에 있어서, 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하는 수단 및 상기 복수의 후보 인공 지능모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거하는수단을 추가로 포함하는, 장치."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "시스템으로서,제1 공장 생산 라인의 공장 조건들에 대응하는 제1 사물 인터넷(IoT) 센서;제2 공장 생산 라인의 공장 조건들에 대응하는 제2 IoT 센서;모델 업데이트 디바이스를 포함하고,공개특허 10-2022-0149418-5-상기 모델 업데이트 디바이스는:상기 제1 IoT 센서 및 상기 제2 IoT 센서로부터 메타데이터를 수신하는 지능적 트리거 회로 - 상기 지능적 트리거 회로는 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 적어도 하나의 인공 지능 모델을 업데이트함 - ;모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 자동화된 모델 검색 회로; 및시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 지능적 모델배치 회로를 포함하는, 시스템."}
{"patent_id": "10-2022-0036598", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제24항에 있어서, 상기 모델 업데이트 디바이스는 상기 제1 IoT 센서 및 상기 제2 IoT 센서로부터 메타데이터를수신하고, 상기 제1 IoT 센서로부터의 메타데이터와 상기 제2 IoT 센서의 메타데이터 사이의 유사도의 임계값에응답하여, 상기 모델 업데이트를 트리거하는, 시스템."}
{"patent_id": "10-2022-0036598", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 방법들, 장치들, 시스템들, 및 제조 물품들이 개시되며, 이 장치는, 자동화된 모델 업데이트 프로세스를 트리거하는 지능적 트리 거 회로, 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 자동화된 모델 검색 회로, 및 시 간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 지능적 모델 배치 회로를 포함한다."}
{"patent_id": "10-2022-0036598", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "관련 출원 본 특허는 2021년 4월 30일자로 출원된 미국 가특허 출원 제63/182,585호의 이익을 주장하며, 그 전체 내용은 본 명세서에 참고로 포함된다. 이로써 미국 특허 출원 제63/182,585호에 대한 우선권이 주장된다. 개시내용의 분야 본 개시내용은 일반적으로 머신 러닝에 관한 것이고, 특히, 자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하는 방법들 및 장치들에 관한 것이다."}
{"patent_id": "10-2022-0036598", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "데이터 수집 및 데이터 분석을 위한 기술은 계속해서 빠른 속도로 발전하고 있다. 예를 들어, 조립 라인들의 사용을 통해 제품들을 제조하는 공장들은 제조 프로세스 전체에 걸쳐 데이터를 수집할 수 있다. 일부 예들에서, 제1 부품은 제1 조립(예를 들어, 생산) 라인에서 생산되고, 제1 부품과 동일한 제2 부품은 제1 조립 라인과 동일한 제2 조립 라인에서 생산될 수 있다. 최근 몇 년간, 이러한 데이터를 모델링하기 위해 머신 러닝 알고리즘들이 사용되어 왔다."}
{"patent_id": "10-2022-0036598", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "머신 러닝(machine learning, ML), 딥 러닝(deep learning, DL), 및/또는 다른 인공 머신 구동형 로직 (artificial machine-driven logic)을 포함하는 인공 지능(AI)은 머신들(예를 들어, 컴퓨터들, 로직 회로들 등)이 모델을 사용하여 입력 데이터를 처리해서 트레이닝 프로세스를 통해 모델에 의해 이전에 학습된 패턴들 및/또는 연관들을 기반으로 출력을 생성할 수 있게 한다. 예를 들어, 모델은 다른 입력(들)이 인식된 패턴들 및/또는 연관들과 일치하는 출력(들)을 초래하도록 입력 데이터를 처리할 때 패턴들 및/또는 연관들을 인식하고 이러한 패턴들 및/또는 연관들을 따르도록 데이터로 트레이닝될 수 있다. 많은 상이한 타입들의 AI 모델들 및/또는 AI 아키텍처들이 존재한다. 일반적으로, 본 명세서에 개시된 예시적 인 접근법들에서 사용하기에 적합한 AI 모델들/아키텍처들은 인공 신경망 모델들(예를 들어, 컨볼루션 신경망들, 순환 신경망들 등) 및 머신 러닝 모델들(예를 들어, 랜덤 포레스트 분류기들, 서포트 벡터 머신들 등)일 것이다. 그러나, 강화 학습 모델들 등과 같은 다른 타입들의 머신 러닝 모델들이 추가적으로 또는 대안 적으로 사용될 수 있다. 일반적으로, ML/AI 시스템을 구현하는 것은 2개의 페이즈인, 러닝/트레이닝 페이즈 및 추론 페이즈를 수반한다. 러닝/트레이닝 페이즈에서, 트레이닝 알고리즘은, 예를 들어, 트레이닝 데이터에 기초하여 패턴들 및/또는 연관 들에 따라 동작하도록 모델을 트레이닝하기 위해 사용된다. 일반적으로, 모델은, 입력 데이터를 출력 데이터로 변환하기 위해 모델 내의 일련의 노드들 및 접속들을 통해서와 같이, 입력 데이터가 어떻게 출력 데이터로 변환 되는지를 안내하는 내부 파라미터들을 포함한다. 추가적으로, 하이퍼파라미터들은 학습이 수행되는 방법을 제 어하기 위한 트레이닝 프로세스의 일부로서 사용된다(예를 들어, 학습률, 머신 러닝 모델에서 사용될 계층들의 수 등). 하이퍼파라미터들은 트레이닝 프로세스를 개시하기 전에 결정되는 트레이닝 파라미터들인 것으로 정의 된다. ML/AI 모델의 타입 및/또는 예상된 출력에 기초하여 상이한 타입들의 트레이닝이 수행될 수 있다. 예를 들어, 감독 트레이닝(supervised training)은 입력들 및 대응하는 예상된(예를 들어, 라벨링된) 출력들을 사용하여 모 델 에러를 감소시키는 ML/AI 모델에 대한 파라미터들을 (예를 들어, 선택 파라미터들의 조합들에 걸쳐 반복함으 로써) 선택한다. 본 명세서에서 사용되는 바와 같이, 라벨링(labelling)은 머신 러닝 모델의 예상된 출력(예를 들어, 분류, 예상된 출력 값 등)을 지칭한다. 대안적으로, 무감독 트레이닝(예를 들어, 딥 러닝, 머신 러닝의 서브세트 등에서 사용됨)은 (예를 들어, 예상된(예를 들어, 라벨링된) 출력들의 이익 없이) ML/AI 모델에 대한 파라미터들을 선택하기 위해 입력들로부터 패턴들을 추론하는 것을 수반한다. 본 명세서에 개시된 예들에서, ML/AI 모델들은 모델 타입 및 아키텍처에 기초하여 트레이닝되고, 예를 들어, 신 경망들은 확률적 경사 하강(stochastic gradient descent)으로 트레이닝될 수 있다. 그러나, 임의의 다른 트레 이닝 알고리즘이 추가적으로 또는 대안적으로 사용될 수 있다. 본 명세서에 개시된 예들에서, 트레이닝은 모델 출력이 수렴될 때까지 수행된다. 본 명세서에 개시된 예들에서, 트레이닝은 원격으로(예를 들어, 중앙 설비에 서) 수행된다. 다른 예들에서, 트레이닝은 국부적으로(예를 들어, 공장의 에지 디바이스에서) 수행된다. 학습 이 수행되는 방법을 제어하는 하이퍼파라미터들(예를 들어, 학습률, 머신 러닝 모델에서 사용될 계층들의 수 등)을 사용하여 트레이닝이 수행된다. 본 명세서에 개시된 예들에서, 모델의 출력을 제어하는 하이퍼파라미터 들은 노드들의 수, 계층들의 수 등을 포함한다. 이러한 하이퍼파라미터들은, 예를 들어, 이전 모델의 업데이트 에 의해 선택되거나, 무작위로 생성되거나, 최적화 알고리즘에 의해 검색된다. 일부 예들에서, 재트레이닝이 수행될 수 있다. 이러한 재트레이닝은 도 5에 설명된 바와 같은 지능적 트리거 회로(intelligent trigger circuitry)에 응답하여 수행될 수 있다. 트레이닝은 트레이닝 데이터를 사용하여 수행된다. 일부 예들에서, 감독 트레이닝이 사용되고, 트레이닝 데이 터가 라벨링된다. 일단 트레이닝이 완료되면, 모델은 입력을 처리하고 모델에 정의된 노드들 및 접속들의 네트워크에 기초하여 출 력을 제공하는 실행가능 구성체(executable construct)로서 사용하기 위해 배치된다. 일부 예들에서, 모델은 로지스틱 회귀 모델(logistic regression model), 랜덤 포레스트 모델(random forest model), 또는 기울기 부 스팅된 트리 모델(gradient boosted tree model) 등이다. 모델은 도 5에 설명된 바와 같이 모델 리포지토리에 저장된다. 그 후 모델은 도 5에 설명된 바와 같이 지능적 배치 회로(intelligent deployment circuitry)에 의 해 실행될 수 있다. 일부 예들에서, 다수의 모델들이 도 5에 설명된 바와 같이 지능적 배치 회로에 의해 배치 되고 평가된다. 일단 트레이닝되면, 배치된 모델은 데이터를 처리하기 위해 추론 페이즈에서 동작될 수 있다. 추론 페이즈에서, 분석될 데이터(예를 들어, 라이브 데이터)가 모델에 입력되고, 모델이 실행되어 출력을 생성한다. 이 추론 페이즈는 (예를 들어, 라이브 데이터에 학습된 패턴들 및/또는 연관들을 적용하기 위해 모델을 실행함으로써) 트레이닝으로부터 학습된 것에 기초하여 출력을 생성하기 위한 AI \"사고(thinking)\"로서 생각될 수 있 다. 일부 예들에서, 입력 데이터는 머신 러닝 모델에 대한 입력으로서 사용되기 전에 전처리를 거친다. 또한, 일부 예들에서, 출력 데이터는 출력을 유용한 결과(예를 들어, 데이터의 디스플레이, 머신에 의해 실행될 명령 어 등)로 변환하기 위해 AI 모델에 의해 생성된 후에 후처리를 거칠 수 있다. 일부 예들에서, 배치된 모델의 출력이 캡처되어 피드백으로서 제공될 수 있다. 피드백을 분석함으로써, 배치된 모델의 정확도가 결정될 수 있다. 피드백이 배치된 모델의 정확도가 임계값 또는 다른 기준보다 작다고 지시하 는 경우, 업데이트된 모델의 트레이닝이 피드백 및 업데이트된 트레이닝 데이터 세트, 하이퍼파라미터 등을 사 용하여 트리거되어, 업데이트된 배치된 모델을 생성할 수 있다. 도 1은 다음의 예들 중 다수에서 \"에지 클라우드\"라고 지칭되는 처리의 계층을 포함하는, 에지 컴퓨팅을 위한 구성의 개요를 보여주는 블록도이다. 도시된 바와 같이, 에지 클라우드는, 액세스 포인트 또는 기지 국, 로컬 처리 허브, 또는 중앙 오피스와 같은 에지 위치에 공동 배치되고, 따라서 다수의 엔티 티, 디바이스, 및 장비 인스턴스를 포함할 수 있다. 에지 클라우드는 클라우드 데이터 센터보다 엔 드포인트(소비자 및 생산자) 데이터 소스들(예를 들어, 자율 차량들, 사용자 장비, 비즈니스 및 산업 장비, 비디오 캡처 디바이스들, 드론들, 스마트 도시들 및 빌딩 디바이스들, 센서들 및 IoT 디바이스들 등)에 훨씬 더 가까이 위치한다. 에지 클라우드 내의 에지들에 제공되는 컴퓨트, 메모리, 및 스토리지 리소스들은 엔드포인트 데이터 소스들에 의해 사용되는 서비스들 및 기능들에 대한 초저 레이턴시 응답 시간들을 제공할 뿐만 아니라 에지 클라우드로부터 클라우드 데이터 센터를 향한 네트워크 백홀 트래픽을 감소시키는 데에 중요하고, 따라서 여러 이점들 중에서도 에너지 소비 및 전체 네트워 크 사용들을 개선한다. 컴퓨트, 메모리, 및 스토리지는 희소 리소스들이고, 일반적으로 에지 위치에 따라 감소한다(예를 들어, 중앙 오 피스에서보다, 기지국에서보다, 소비자 엔드포인트 디바이스에서 이용가능한 처리 리소스들이 더 적다). 그러 나, 에지 위치가 엔드포인트(예를 들어, 사용자 장비(UE))에 더 가까울수록, 공간과 전력이 더 많이 제한되는 경우가 많다. 따라서, 에지 컴퓨팅은 지리적으로 그리고 네트워크 액세스 시간에서 양자 모두 더 가까이 위치 하는 더 많은 리소스들의 분포를 통해, 네트워크 서비스들을 위해 필요한 리소스들의 양을 감소시키려고 시도한 다. 이러한 방식으로, 에지 컴퓨팅은 적절한 경우 컴퓨트 리소스들을 작업 부하 데이터로 가져오거나, 작업 부 하 데이터를 컴퓨트 리소스들로 가져오려고 시도한다. 이하에서는 다수의 잠재적 배치들을 커버하고 일부 네트워크 운영자들 또는 서비스 제공자들이 그들 자신의 인 프라스트럭처들을 가질 수 있는 제한들을 다루는 에지 클라우드 아키텍처의 양태들을 설명한다. 이들은 (예를 들어, 기지국 레벨에서의 에지들이 멀티 테넌트 시나리오(multi-tenant scenario)에서 더 제약된 성능 및 능력 들을 가질 수 있기 때문에) 에지 위치에 기초한 구성들; 에지 위치들, 위치들의 티어들, 또는 위치들의 그룹들 에 이용가능한 컴퓨트, 메모리, 스토리지, 패브릭, 가속, 또는 유사한 리소스들의 타입에 기초한 구성들; 서비 스, 보안, 및 관리 및 오케스트레이션 능력들; 및 최종 서비스들의 유용성 및 성능을 달성하기 위한 관련 목적 들의 변형을 포함한다. 이러한 배치들은, 레이턴시, 거리, 및 타이밍 특성들에 따라, \"근거리 에지(near edge)\", \"가까운 에지(close edge)\", \"로컬 에지(local edge)\", \"중간 에지(middle edge)\", 또는 \"원거리 에지 (far edge)\" 계층들로 간주될 수 있는 네트워크 계층들에서의 처리를 달성할 수 있다. 에지 컴퓨팅은, 네트워크의 \"에지\"에서 또는 네트워크의 \"에지\"에 더 가깝게, 전형적으로 데이터를 생산하고 소 비하는 엔드포인트 디바이스들에 훨씬 더 가까운 기지국들, 게이트웨이들, 네트워크 라우터들, 또는 다른 디바 이스들에서 구현되는 컴퓨트 플랫폼(예를 들어, x86 또는 ARM 컴퓨트 하드웨어 아키텍처)의 사용을 통해 컴퓨팅 이 수행되는 개발 패러다임이다. 예를 들어, 에지 게이트웨이 서버들은 접속된 클라이언트 디바이스들에 대한 낮은 레이턴시 사용 사례들(예를 들어, 자율 주행 또는 비디오 감시)에 대해 실시간으로 계산을 수행하기 위해 메모리 및 스토리지 리소스들의 풀(pool)들을 갖출 수 있다. 또는 일 예로서, 기지국들은 백홀 네트워크들을 통해 데이터를 추가로 통신하지 않고, 접속된 사용자 장비에 대한 서비스 작업 부하들을 직접 처리하기 위해 컴 퓨트 및 가속 리소스들로 증강될 수 있다. 또는 다른 예로서, 중앙 오피스 네트워크 관리 하드웨어는 가상화된 네트워크 기능들을 수행하고 접속된 디바이스들에 대한 서비스들 및 소비자 기능들의 실행을 위한 컴퓨트 리소 스들을 제공하는 표준화된 컴퓨트 하드웨어로 대체될 수 있다. 에지 컴퓨팅 네트워크들 내에는, 컴퓨트 리소스 가 데이터로 \"이동(move)\"되는 서비스들의 시나리오들뿐만 아니라, 데이터가 컴퓨트 리소스로 \"이동\"되는 시나 리오들이 있을 수 있다. 또는 일 예로서, 기지국 컴퓨트, 가속 및 네트워크 리소스들은, 코너 케이스들(corner cases), 긴급 상황들을 관리하기 위해 또는 상당히 더 길게 구현된 수명주기에 걸쳐 배치된 리소스들에 대해 오 랜 수명(longevity)을 제공하기 위해 휴면 중인 용량(가입, 요구에 따른 용량(capacity on demand))을 활성화하는 것에 의해 필요에 따라 작업 부하 요구들에 대해 스케일링하기 위해 서비스들을 제공할 수 있다. 도 2는 엔드포인트들, 에지 클라우드, 및 클라우드 컴퓨팅 환경들 사이의 동작 계층들을 예시한다. 구체적으로, 도 2는 네트워크 컴퓨팅의 다수의 예시적인 계층들 사이에 에지 클라우드를 활용하는 계산 사 용 사례들의 예들을 묘사한다. 계층들은 데이터 생성, 분석, 및 데이터 소비 활동들을 수행하기 위해 에 지 클라우드에 액세스하는 엔드포인트(디바이스들 및 사물들) 계층에서 시작한다. 에지 클라우드 는 물리적으로 근접한 에지 시스템들에 위치한 게이트웨이들, 구내 서버들(on-premise servers), 또는 네 트워크 장비(노드들)를 갖는 에지 디바이스 계층; 기지국들, 라디오 처리 유닛(radio processing unit)들, 네트워크 허브들, 지역 데이터 센터들(DC), 또는 로컬 네트워크 장비(장비)를 포함하는 네트워크 액세스 계층; 및 그 사이에 위치한 임의의 장비, 디바이스들, 또는 노드들(계층에서, 상세히 예시되 지 않음)과 같은 다수의 네트워크 계층들에 걸쳐 있을 수 있다. 에지 클라우드 내의 그리고 다양한 계층 들 사이의 네트워크 통신들은 묘사되지 않은 접속성(connectivity) 아키텍처들 및 기술들을 통해 발생하는 것을 포함하여, 임의의 수의 유선 또는 무선 매체들을 통해 발생할 수 있다. 네트워크 통신 거리 및 처리 시간 제약들에서 기인하는 레이턴시의 예들은, 엔드포인트 계층 중에 있을 때 의 밀리초(ms) 미만으로부터, 에지 디바이스들 계층에서의 5ms 아래, 심지어 네트워크 액세스 계층에 서의 노드들과 통신할 때의 10 내지 40ms까지의 범위일 수 있다. 에지 클라우드 너머에는 코어 네트워크 및 클라우드 데이터 센터 계층들이 있으며, 각각은 증가하는 레이턴시를 갖는다(예를 들어, 코어 네 트워크 계층에서 50-60ms 사이, 클라우드 데이터 센터 계층에서 100ms 이상). 그 결과, 적어도 50 내지 100ms 이상의 레이턴시들을 갖는, 코어 네트워크 데이터 센터 또는 클라우드 데이터 센터에서의 동작 들은 사용 사례들의 많은 시간 임계적 기능들을 달성하지 못할 것이다. 이러한 레이턴시 값들 각각은 예 시 및 대비를 위해 제공되며; 다른 액세스 네트워크 매체들 및 기술들의 사용이 레이턴시들을 추가로 감소시킬 수 있다는 것이 이해될 것이다. 일부 예들에서, 네트워크의 각자의 부분들은, 네트워크 소스 및 목적지에 대해, \"가까운 에지\", \"로컬 에지\", \"근거리 에지\", \"중간 에지\", 또는 \"원거리 에지\" 계층들로서 카테고리화될 수 있다. 예를 들어, 코어 네트워크 데이터 센터 또는 클라우드 데이터 센터의 관점에서, 중앙 오피 스 또는 콘텐츠 데이터 네트워크는 \"근거리 에지\" 계층(클라우드에 \"근거리\", 사용 사례들의 디바이스들 및 엔드포인트들과 통신할 때 높은 레이턴시 값들을 가짐) 내에 위치하는 것으로 간주될 수 있는 반면, 액세스 포인트, 기지국, 구내 서버, 또는 네트워크 게이트웨이는 \"원거리 에지\" 계층(클라우드로부터 \"원거리\", 사용 사례들의 디바이스들 및 엔드포인트들과 통신할 때 낮은 레이턴시 값들을 가짐) 내에 위치하는 것으로 간 주될 수 있다. \"가까운\", \"로컬\", \"근거리\", \"중간\", 또는 \"원거리\" 에지를 구성하는 것으로서의 특정 네트워 크 계층의 다른 카테고리화들은, 네트워크 계층들(200-240) 중 임의의 것에서의 소스로부터 측정되는 바와 같은, 레이턴시, 거리, 네트워크 홉의 수, 또는 다른 측정가능한 특성들에 기초할 수 있다는 것이 이해될 것이다. 다양한 사용 사례들은, 에지 클라우드를 활용하는 다수의 서비스들로 인해, 착신되는 스트림들로부터의 사 용 압박 하에서 리소스들에 액세스할 수 있다. 낮은 레이턴시를 갖는 결과들을 달성하기 위해, 에지 클라우드 내에서 실행되는 서비스들은 다음과 같은 측면에서 다양한 요건들의 균형을 맞춘다: (a) 우선순위(처리량 또는 레이턴시) 및 서비스 품질(QoS)(예를 들어, 자율 주행차에 대한 트래픽은 응답 시간 요건의 측면에서 온도 센서보다 높은 우선순위를 가질 수 있거나; 또는, 애플리케이션에 따라, 컴퓨트/가속기, 메모리, 스토리지, 또 는 네트워크 리소스에 성능 민감도/병목 현상이 존재할 수 있음); (b) 신뢰성 및 복원성(예를 들어, 일부 입력 스트림들은 미션 임계적 신뢰성(mission-critical reliability)으로 작용되고 트래픽이 라우팅될 필요가 있지만, 일부 다른 입력 스트림들은 애플리케이션에 따라 간헐적인 고장을 용인할 수 있음); 및 (c) 물리적 제 약들(예를 들어, 전력, 냉각 및 폼 팩터). 이러한 사용 사례들에 대한 엔드-투-엔드 서비스 뷰는 서비스-흐름의 개념을 수반하고 트랜잭션과 연관된다. 트랜잭션은 리소스들, 작업 부하들, 작업 흐름들, 및 비즈니스 기능 및 비즈니스 레벨 요건들에 대한 연관된 서 비스들뿐만 아니라, 서비스를 소비하는 엔티티에 대한 전체 서비스 요건을 상세히 설명한다. 설명된 \"조건 (terms)\"으로 실행되는 서비스들은 서비스의 수명주기 동안 트랜잭션에 대한 실시간 및 런타임 계약 준수를 보 장하는 방식으로 각각의 계층에서 관리될 수 있다. 트랜잭션 내의 컴포넌트가 SLA에 합의된 것을 놓치고 있을 때, 시스템 전체(트랜잭션 내의 컴포넌트들)는 SLA 위반의 영향을 이해하고, 시스템 내의 다른 컴포넌 트들을 보강하여 전체 트랜잭션 SLA를 재개하고, 교정 단계들을 구현하는 능력을 제공할 수 있다. 따라서, 이러한 변형들 및 서비스 특징들을 염두에 두고서, 에지 클라우드 내의 에지 컴퓨팅은 사용 사례 들의 다수의 애플리케이션(예를 들어, 객체 추적, 비디오 감시, 커넥티드 카(connected car) 등)을 실시간으로 또는 거의 실시간으로 서빙하고 그에 응답하는 능력을 제공하고, 이러한 다수의 애플리케이션에 대한 초저 레이턴시 요건들을 충족시킬 수 있다. 이러한 이점들은, 레이턴시 또는 다른 제한들로 인해 종래의 클라우드 컴퓨팅을 활용할 수 없는, 완전히 새로운 클래스의 애플리케이션들(VNF들(Virtual Network Functions), FaaS(Function as a Service), EaaS(Edge as a Service), 표준 프로세스들 등)을 가능하게 한다. 그러나, 에지 컴퓨팅의 이점들과 함께 다음의 주의사항들(caveats)이 야기된다. 에지에 위치한 디바이스들은 종종 리소스 제약되고 따라서 에지 리소스들의 사용에 대한 압력이 있다. 전형적으로, 이것은 다수의 사용자들 (테넌트들) 및 디바이스들에 의한 사용을 위한 메모리 및 스토리지 리소스들의 풀링(pooling)을 통해 해결된다. 에지는 전력 및 냉각 제약될 수 있고 따라서 전력 사용은 가장 많은 전력을 소비하고 있는 애플리케이션들에 의 해 고려될 필요가 있다. 이들 풀링된 메모리 리소스에는 내재된 전력-성능 트레이드오프들이 있을 수 있는데, 이들 중 다수가 더 많은 전력이 더 큰 메모리 대역폭을 요구하는 신생 메모리 기술들을 사용할 가능성이 있기 때문이다. 마찬가지로, 에지 위치들이 무인(unmanned)일 수 있고 심지어 허가된 액세스를 필요로 할 수도 있기 때문에(예를 들어, 제3자 위치에 하우징될 때), 하드웨어의 개선된 보안과 신뢰 루트의 신뢰되는 기능들(root of trust trusted functions)이 또한 요구된다. 이러한 이슈들은 멀티-테넌트, 멀티-오너, 또는 멀티-액세스 설정에서 에지 클라우드에서 확대되고, 여기서 서비스들 및 애플리케이션들은, 특히 네트워크 사용이 동적 으로 변동하고 다수의 이해관계자들, 사용 사례들, 및 서비스들의 구성(composition)이 변화함에 따라, 많은 사 용자들에 의해 요청된다. 보다 일반적인 레벨에서, 에지 컴퓨팅 시스템은, 클라이언트 및 분산형 컴퓨팅 디바이스들로부터 조정을 제공하 는, 에지 클라우드에서 동작하는 이전에 논의된 계층들(네트워크 계층들(200-240))에서의 임의의 수의 배 치들을 포괄하는 것으로 설명될 수 있다. 하나 이상의 에지 게이트웨이 노드, 하나 이상의 에지 집성 노드 (edge aggregation node), 및 하나 이상의 코어 데이터 센터가 네트워크의 계층들에 걸쳐 분산되어 전기통신 서 비스 제공자(telecommunication service provider)(\"telco\", 또는 \"TSP\"), 사물 인터넷 서비스 제공자, 클라우 드 서비스 제공자(cloud service provider, CSP), 엔터프라이즈 엔티티, 또는 임의의 다른 수의 엔티티들에 의 해 또는 그를 대신하여 에지 컴퓨팅 시스템의 구현을 제공할 수 있다. 에지 컴퓨팅 시스템의 다양한 구현들 및 구성들은, 예컨대 서비스 목적들을 충족시키도록 오케스트레이션될 때, 동적으로 제공될 수 있다. 본 명세서에 제공된 예들과 일관되게, 클라이언트 컴퓨트 노드는 데이터의 생산자 또는 소비자로서 통신이 가능 한 임의의 타입의 엔드포인트 컴포넌트, 디바이스, 어플라이언스, 또는 다른 사물로서 구현될 수 있다. 또한, 에지 컴퓨팅 시스템에서 사용되는 바와 같은 라벨 \"노드\" 또는 \"디바이스\"는 반드시 이러한 노드 또는 디바이스 가 클라이언트 또는 에이전트/미니언/팔로워 역할에서 동작하는 것을 의미하지는 않으며; 오히려, 에지 컴퓨팅 시스템 내의 노드들 또는 디바이스들 중 임의의 것은 에지 클라우드를 용이하게 하거나 사용하기 위해 개 별 또는 접속된 하드웨어 또는 소프트웨어 구성들을 포함하는 개별 엔티티들, 노드들, 또는 서브시스템들을 지 칭한다. 이와 같이, 에지 클라우드는 네트워크 계층들(210-230) 중에서 에지 게이트웨이 노드들, 에지 집성 노드들, 또는 다른 에지 컴퓨트 노드들에 의해 그리고 그 안에서 동작되는 네트워크 컴포넌트들 및 기능 특징들 로 형성된다. 따라서 에지 클라우드는, 본 명세서에서 논의되는, 라디오 액세스 네트워크(radio access network, RAN) 가능 엔드포인트 디바이스들(예를 들어, 모바일 컴퓨팅 디바이스들, IoT 디바이스들, 스마트 디 바이스들 등)에 근접하게 위치하는 에지 컴퓨팅 및/또는 스토리지 리소스들을 제공하는 임의의 타입의 네트워크 로서 구현될 수 있다. 다시 말해서, 에지 클라우드는, 모바일 캐리어 네트워크들(예를 들어, GSM(Global System for Mobile Communications) 네트워크들, LTE(Long-Term Evolution) 네트워크들, 5G/6G 네트워크들 등)을 포함하는 서비스 제공자 코어 네트워크들 내로의 진입 포인트의 역할을 하는 전통적인 네트워크 액세스 포인트들과 엔드포인트 디바이스들을 접속하면서, 또한 스토리지 및/또는 컴퓨트 능력들도 제공하는, \"에지\"로 서 구상될 수 있다. 다른 타입들 및 형식들의 네트워크 액세스(예를 들어, 광학 네트워크들을 포함하는 Wi-Fi, 장거리 무선, 유선 네트워크들)가 또한 이러한 3GPP 캐리어 네트워크들 대신에 또는 이와 조합하여 활용될 수 있다. 에지 클라우드의 네트워크 컴포넌트들은 서버들, 멀티-테넌트 서버들, 어플라이언스 컴퓨팅 디바이스들, 및/또는 임의의 다른 타입의 컴퓨팅 디바이스들일 수 있다. 예를 들어, 에지 클라우드는 하우징, 섀시, 케이스 또는 쉘을 포함하는 자립형 전자 디바이스인 어플라이언스 컴퓨팅 디바이스를 포함할 수 있다. 일부 상 황들에서, 하우징은 인간에 의해 휴대되고/되거나 선적될 수 있도록 휴대성을 위해 치수가 정해질 수 있다. 예 시적인 하우징들은 어플라이언스의 콘텐츠를 부분적으로 또는 완전히 보호하는 하나 이상의 외부 표면을 형성하 는 재료들을 포함할 수 있고, 여기서 보호는 날씨 보호, 위험한 환경 보호(예를 들어, EMI, 진동, 극한 온도들)를 포함할 수 있고/있거나, 수중 사용(submergibility)을 가능하게 할 수 있다. 예시적인 하우징들은 AC 전 력 입력들, DC 전력 입력들, AC/DC 또는 DC/AC 컨버터(들), 전력 조절기들, 변압기들, 충전 회로, 배터리들, 유 선 입력들 및/또는 무선 전력 입력들과 같은 고정식 및/또는 휴대용 구현들을 위한 전력을 제공하는 전력 회로 를 포함할 수 있다. 예시적인 하우징들 및/또는 그것의 표면들은 빌딩들, 전기통신 구조물들(예를 들어, 기둥 들, 안테나 구조물들 등) 및/또는 랙들(예를 들어, 서버 랙들, 블레이드 마운트들 등)과 같은 구조물들에의 부 착을 가능하게 하기 위해 장착 하드웨어를 포함하거나 이에 접속할 수 있다. 예시적인 하우징들 및/또는 그것 의 표면들은 하나 이상의 센서(예를 들어, 온도 센서들, 진동 센서들, 광 센서들, 음향 센서들, 용량성 센서들, 근접 센서들 등)를 지지할 수 있다. 하나 이상의 이러한 센서는 어플라이언스의 표면에 포함되거나, 표면에 의 해 운반되거나, 또는 달리 표면에 내장되고/되거나 어플라이언스의 표면에 장착될 수 있다. 예시적인 하우징들 및/또는 그것의 표면들은 추진 하드웨어(예를 들어, 휠들, 프로펠러들 등) 및/또는 관절 하드웨어(예를 들어, 로봇 암들, 피벗 가능한 부속물들 등)와 같은 머신적 접속성을 지원할 수 있다. 일부 상황들에서, 센서들은 사 용자 인터페이스 하드웨어(예를 들어, 버튼, 스위치, 다이얼, 슬라이더 등)와 같은 임의의 타입의 입력 디바이 스들을 포함할 수 있다. 일부 상황들에서, 예시적인 하우징들은 그 안에 포함되거나, 그에 의해 운반되거나, 그 안에 내장되고/되거나 그에 부착된 출력 디바이스들을 포함한다. 출력 디바이스들은 디스플레이들, 터치스 크린들, 라이트들, LED들, 스피커들, I/O 포트들(예를 들어, USB) 등을 포함할 수 있다. 일부 상황들에서, 에 지 디바이스들은 특정 목적(예를 들어, 교통 신호등)을 위해 네트워크에 제시되는 디바이스들이지만, 다른 목적 들을 위해 활용될 수 있는 처리 및/또는 다른 능력들을 가질 수 있다. 이러한 에지 디바이스들은 다른 네트워 크화된 디바이스들과 독립적일 수 있으며, 주된 목적에 적합한 폼 팩터를 갖는 하우징을 구비할 수 있지만; 그 의 주된 태스크를 방해하지 않는 다른 컴퓨트 태스크들에 대해 여전히 이용가능할 수 있다. 에지 디바이스들은 사물 인터넷 디바이스들을 포함한다. 어플라이언스 컴퓨팅 디바이스는 디바이스 온도, 진동, 리소스 활용, 업 데이트, 전력 이슈, 물리적 및 네트워크 보안 등과 같은 국부적 이슈들을 관리하기 위한 하드웨어 및 소프트웨 어 컴포넌트들을 포함할 수 있다. 어플라이언스 컴퓨팅 디바이스를 구현하기 위한 예시적인 하드웨어가 도 9b 와 관련하여 설명된다. 에지 클라우드는 하나 이상의 서버 및/또는 하나 이상의 멀티-테넌트 서버를 또한 포함할 수 있다. 이러한 서버는 운영 체제를 포함하고 가상 컴퓨팅 환경을 구현할 수 있다. 가상 컴퓨팅 환경 은 하나 이상의 가상 머신, 하나 이상의 컨테이너 등을 관리하는(예를 들어, 생성(spawning), 배치, 파괴하는 등) 하이퍼바이저를 포함할 수 있다. 이러한 가상 컴퓨팅 환경들은 하나 이상의 애플리케이션 및/또는 다른 소 프트웨어, 코드 또는 스크립트가 하나 이상의 다른 애플리케이션, 소프트웨어, 코드 또는 스크립트로부터 격리 되면서 실행될 수 있는 실행 환경을 제공한다. 도 3에서는, 다양한 클라이언트 엔드포인트들(모바일 디바이스들, 컴퓨터들, 자율 차량들, 비즈니스 컴퓨 팅 장비, 산업 처리 장비의 형태)이 엔드포인트 네트워크 집성의 타입에 특정한 요청들 및 응답들을 교환한다. 예를 들어, 클라이언트 엔드포인트들은, 구내 네트워크 시스템을 통해 요청들 및 응답들을 교환 하는 것에 의해, 유선 광대역 네트워크를 통해 네트워크 액세스를 획득할 수 있다. 모바일 컴퓨팅 디바이스들 과 같은 일부 클라이언트 엔드포인트들은, 액세스 포인트(예를 들어, 셀룰러 네트워크 타워)를 통해 요청들 및 응답들을 교환하는 것에 의해, 무선 광대역 네트워크를 통해 네트워크 액세스를 획득할 수 있다. 자율 차량들과 같은 일부 클라이언트 엔드포인트들은 거리-위치형 네트워크 시스템(street-located network system)을 통해 무선 차량 네트워크를 경유하여 요청들 및 응답들에 대한 네트워크 액세스를 획득할 수 있다. 그러나, 네트워크 액세스의 타입에 관계없이, TSP는 트래픽 및 요청들을 집성하기 위해 에지 클라우드 내에 집성 포인트들(342, 344)을 배치할 수 있다. 따라서, 에지 클라우드 내에서, TSP는 요청된 콘텐츠를 제공하기 위해, 예컨대 에지 집성 노드들에서, 다양한 컴퓨트 및 스토리지 리소스들을 배 치할 수 있다. 에지 클라우드의 에지 집성 노드들 및 다른 시스템들은 클라우드 또는 데이터 센터 에 접속되고, 이는 백홀 네트워크를 사용하여 웹사이트들, 애플리케이션들, 데이터베이스 서버들 등 에 대한 클라우드/데이터 센터로부터의 더 높은 레이턴시 요청들을 실현한다. 단일 서버 프레임워크 상에 배치 된 것들을 포함하여, 에지 집성 노드들 및 집성 포인트들(342, 344)의 추가적인 또는 통합된 인스턴스들이 또한 에지 클라우드 또는 TSP 인프라스트럭처의 다른 영역들 내에 존재할 수 있다. 본 명세서에 개시된 예들은, 예를 들어, 공장 환경에서 머신 러닝 모델들의 개발 및/또는 배치를 자동화하는 것 에 관한 것이다. 예를 들어, 머신 러닝 모델들은 도 1 내지 도 3과 관련하여 설명된 에지 인프라스트럭처와 같 은 에지 인프라스트럭처에 배치될 수 있다. 인공 지능 모델들(예를 들어, 머신 러닝 모델들)은 공장들 또는 다 른 데이터 소스들(예를 들어, 산업 데이터 소스들, 상업 데이터 소스들 등)에 의해 생성된 데이터를 사용한다. 예를 들어, 공장들에서의 제조 프로세스들은 환경적 변화를 겪는다. 예를 들어, 기어를 제조하기 위한 제1 세 트의 설정들을 사용하는 아침의 온도 변동은, 제1 세트의 설정들이 여전히 적용되는 경우, 오후에 허용불가능한결과들을 생성할 수 있다. 허용불가능한 결과들은 공장 또는 감독자에 의해 적용되는 바와 같은 표준 또는 임 계값으로부터의 편차로서 결정될 수 있다. 인공 지능 모델들(예를 들어, 머신 러닝 모델들)이 업데이트되지만, 인간이 모델들을 업데이트해야 하는 경우, 업데이트된 모델만큼 효율적이지 않은 모델이 실행되고 있는 기간이 있다. 이 기간은 공장 리소스를 낭비한다. 머신 러닝 모델들의 개발 및/또는 배치를 자동화하기 위한 종래의 기법들은 Google의 Cloud AutoML, Microsoft 의 Azure AutoML, 또는 DataRobot에 의해 구현되는 바와 같은 AutoML 기법들을 포함한다. 그러나, 이러한 3개 의 종래 기법은 인간들이 모델 성능을 모니터링하고 모델을 재트레이닝시키기 위해 프로세스를 트리거할 것을 요구한다. 모델 업데이트 프로세스는 업데이트 프로세스가 인간 감독자에 의존하기 때문에 더 주관적이다. 인 간들은 반응하는데 시간(예를 들어, 머신보다 실질적으로 더 많은 시간)을 이용하므로, 모델 업데이트 프로세스 는 불연속적이고, 인간들이 업데이트 프로세스를 제어하면 차선의 모델들이 더 오랫동안 실행될 것이다. 추가적으로, AutoML은 제한된 범위를 가지며 (예를 들어, 공장 생산 라인과 같은) 산업적 사용 사례들에 적용가 능하지 않을 수 있다. 종래의 AutoML 기법들은 신경망 아키텍처 검색 및 전이 학습을 포함하고, 그러한 신경망 아키텍처 검색을 수행하기 위해, 대량의 라벨링된 트레이닝 데이터가 요구되며, 이는 전형적으로 공장들에 의해 생성되지 않는다. 전이 학습은 주로 컴퓨터 비전 애플리케이션들 및 자연어 처리 애플리케이션들로 제한되며, 여기서 성숙한 신경망 모델들은 산업적 사용 사례들 이외의 소스들로부터의 큰 데이터세트들로 트레이닝되었다. 일부 예들에서, 전이 학습은 비-컴퓨터 비전 애플리케이션들에 적용가능하지만, 애플리케이션은 큰 데이터세트 에 대한 필요성에 의해 제한된다. 도 4는 모델 업데이트 컨트롤러 회로가 자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하도록 동작 하는 예시적인 환경의 블록도이다. 예시적인 환경은 예시적인 모델 업데이트 중앙 설비, 예시 적인 네트워크, 예시적인 모델 업데이트 컨트롤러 회로, 및 다른 예시적인 모델 업데이트 컨트롤러 회로를 포함한다. 예시적인 모델 업데이트 중앙 설비는 예시적인 인공 지능 모델 리포지토리를 포함하고, 예시적인 모 델 업데이트 컨트롤러 회로 및 다른 예시적인 모델 업데이트 컨트롤러 회로로부터 배치된 인공 지능 모델들을 수신하도록 구성된다. 예시적인 모델 업데이트 중앙 설비는 네트워크를 통해 예시적인 모 델 업데이트 컨트롤러 회로 및 다른 예시적인 모델 업데이트 컨트롤러 회로에 접속된다. 도시된 예시적인 네트워크는 인터넷이다. 예시적인 모델 업데이트 컨트롤러 회로는 인터넷에 액세스 한다. 대안적으로, 네트워크는 임의의 다른 타입의 디바이스들일 수 있다. 일부 예들에서, 예시적인 인 공 지능 모델 리포지토리 및/또는 예시적인 모델 업데이트 중앙 설비는 예시적인 네트워크에 존 재한다. 예시적인 모델 업데이트 컨트롤러 회로는 다른 예시적인 모델 업데이트 컨트롤러 회로와 유사하다. 일부 예들에서, 예시적인 모델 업데이트 컨트롤러 회로는 다른 예시적인 모델 업데이트 컨트롤러 회로 와 동일하다. 예시적인 모델 업데이트 컨트롤러 회로는 센서 데이터 또는 환경 메타데이터의 데이터 베이스에 대한 액세스를 포함한다. 다른 예시적인 모델 업데이트 컨트롤러 회로는 센서 데이터 또는 환경 메타데이터의 데이터베이스에 대한 액세스를 포함한다. 다른 예시적인 모델 업데이트 컨트롤러 회로 는 예시적인 네트워크에 통신되고 예시적인 모델 업데이트 컨트롤러 회로에 배포되는 데이터베 이스 내의 인공 지능 모델들의 앙상블(예를 들어, 적어도 하나)을 생성한다. 예시적인 모델 업데이트 컨 트롤러 회로는 예시적인 네트워크에 통신되고 다른 예시적인 모델 업데이트 컨트롤러 회로에 배 포되는 데이터베이스 내의 인공 지능 모델들의 앙상블(예를 들어, 적어도 하나)을 생성한다. 일부 예들에 서, 데이터베이스 내의 모델들은 다른 예시적인 모델 업데이트 컨트롤러 회로에 직접 통신된다. 예 시적인 모델 업데이트 컨트롤러 회로는 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 인공 지능 모델들에 관한 데이터를 저장하거나 다른 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 인공 지능 모델들에 관한 데이터를 저장하거나, 하이퍼파라미터 또는 입력 데이터를 저장하기 위해 예시적인 데이터 리포지토리를 사용할 수 있다. 도 5는 도 4의 모델 업데이트 컨트롤러 회로의 예시적인 구현의 블록도이다. 예시적인 모델 업데이트 컨 트롤러 회로는 예시적인 데이터 인터페이스 회로, 예시적인 환경 데이터 인터페이스 회로, 예시 적인 지능적 트리거 회로, 예시적인 자동화된 모델 검색 회로, 및 예시적인 지능적 배치 회로를 포함한다.예시적인 데이터 인터페이스 회로는, 예를 들어, 하드웨어(예를 들어, 반도체 기반) 프로세서와 같은 로직 회로에 의해 구현된다. 그러나, 예를 들어, 하나 이상의 아날로그 또는 디지털 회로(들), 로직 회로들, 프로그 램가능 프로세서(들), 주문형 집적 회로(들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 필드 프로 그램가능 로직 디바이스(들)(FPLD(들)), 디지털 신호 프로세서(들)(DSP(들)) 등과 같은 임의의 다른 타입의 회 로가 추가적으로 또는 대안적으로 사용될 수 있다. 예시적인 데이터 인터페이스 회로는 예시적인 네트워 크의 사용을 통해 모델 업데이트 중앙 설비와 통신하도록 구성된다. 일부 예들에서, 데이터 인터페 이스 회로는 다른 예시적인 모델 업데이트 컨트롤러 회로의 대응하는 데이터 인터페이스 회로와 통신 한다. 예시적인 데이터 인터페이스 회로는 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 인 공 지능 모델들에 관한 데이터에 액세스(예를 들어, 검색)하기 위해 예시적인 데이터 리포지토리와 통신하거나 다른 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 인공 지능 모델들에 관한 데이터를 저장하거나, 하이퍼파라미터 또는 입력 데이터를 저장한다. 예시적인 환경 데이터 인터페이스 회로는, 예를 들어, 하드웨어(예를 들어, 반도체 기반) 프로세서와 같은 로직 회로에 의해 구현된다. 그러나, 예를 들어, 하나 이상의 아날로그 또는 디지털 회로(들), 로직 회로들, 프로그램가능 프로세서(들), 주문형 집적 회로(들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 필드 프로그램가능 로직 디바이스(들)(FPLD(들)), 디지털 신호 프로세서(들)(DSP(들)) 등과 같은 임의의 다른 타입의 회로가 추가적으로 또는 대안적으로 사용될 수 있다. 예시적인 환경 데이터 인터페이스 회로는 공장에서 동작하는 환경 센서들과 통신하도록 구조화된다. 예를 들어, 환경 센서들은 온도, 광 또는 음영, 습도 등의 변 경들을 검출하도록 구성될 수 있다. 예시적인 환경 데이터 인터페이스 회로는 예시적인 지능적 트리거 회 로와 통신한다. 수신된 환경 데이터에 응답하여, 예시적인 지능적 트리거 회로는 도 7에서 더 설명 되는 자동화된 모델 업데이트 프로세스를 시작할 수 있다. 예시적인 지능적 트리거 회로는, 예를 들어, 하드웨어(예를 들어, 반도체 기반) 프로세서와 같은 로직 회 로에 의해 구현된다. 그러나, 예를 들어, 하나 이상의 아날로그 또는 디지털 회로(들), 로직 회로들, 프로그램 가능 프로세서(들), 주문형 집적 회로(들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 필드 프로그 램가능 로직 디바이스(들)(FPLD(들)), 디지털 신호 프로세서(들)(DSP(들)) 등과 같은 임의의 다른 타입의 회로 가 추가적으로 또는 대안적으로 사용될 수 있다. 예시적인 지능적 트리거 회로는 4개의 정보 소스를 사용 하여 인공 지능 모델 업데이트가 발생해야 하는지를 결정한다. 예시적인 지능적 트리거 회로는 메트릭 베 이스라인 정보, 현재 인공 지능 모델로부터의 출력, 메타데이터, 및/또는 다른 생산 라인들에서 동작하거나 다 른 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 인공 지능 모델들로부터의 출력을 사용한다. 메트릭 베이스라인은 예시적인 지능적 트리거 회로에 의해 학습된다. 예시적인 지능적 트리거 회로 는 일정 기간에 걸쳐 배치된 모델로부터의 출력을 평균화한다. 예를 들어, 불량 검출 사용 사례(fault detection use case)의 양성률(positive rate)의 정상 베이스라인은 특정 양의 시간에 걸쳐 AI 모델에 의해 이 루어진 양성 예측들(positive predictions)의 수의 평균을 기록함으로써 예시적인 지능적 트리거 회로에 의해 학습될 수 있다. 예시적인 지능적 트리거 회로는 현재 인공 지능 모델의 출력을 모니터링하고 학습된 정상 베이스라인과 비 교한다. 예를 들어, 불량 나사 구동 프로세스 결과들을 검출하는 사용 사례에서, 예시적인 지능적 트리거 회로 는 시간 경과에 따라 AI 모델에 의해 얼마나 많은 양성들(불량)이 예측되는지를 모니터링하고 양성률을 산 출한다. 예시적인 지능적 트리거 회로가 양성률이 정상 베이스라인으로부터 벗어나는 것을 검출할 때, 예 시적인 지능적 트리거 회로는 새로운 모델 후보들을 개발하도록 예시적인 자동화된 모델 검색 회로를 트리거한다. 예시적인 지능적 트리거 회로는 메타데이터를 사용할 수 있다. 장비 및/또는 프로세스 구성들 및 환경 센 서 판독치들과 같은 메타데이터가 또한 이 모듈에 공급되어, 모듈은 메트릭의 변경이 프로세스/장비 구성 변경 들과 또는 공장에서의 온도 또는 습도의 변경들과 일치하는지를 안다. 현대의 공장들은 전형적으로 구성들의 변경들이 데이터베이스들에 로그인되는 변경 제어 프로세스를 갖는다. 따라서, 예시적인 지능적 트리거 회로 가 정상 베이스라인으로부터의 편차를 검출하면, 예시적인 지능적 트리거 회로는 메타 데이터가 저장 되는 데이터베이스(예를 들어, 환경 데이터베이스)에 질의들을 전송하고 임의의 업데이트들이 있는지를 조 사한다. 대안적으로, 구성 정보는 산업 장비 및/또는 컨트롤러들 상의 로컬 하드 드라이브에 저장될 수 있고, 예시적인 지능적 트리거 회로는 하드 드라이브로부터 메타 데이터를 판독할 수 있다. 또한, 환경 센서들 로부터의 판독치들은 공장 내의 네트워크들을 통해 예시적인 지능적 트리거 회로에 통신될 수 있다.예시적인 지능적 트리거 회로는 문제의 생산 라인과 동일한 태스크를 수행하는 다른 동일한 생산 라인들에 서 실행되는 AI 모델들로부터의 출력들을 사용할 수 있다. 예를 들어, 하나의 나사 구동 라인에서 예시적인 지 능적 트리거 회로에 의해 양성률의 갑작스런 증가가 검출될 때, 예시적인 지능적 트리거 회로는 그의 펠로 나사 구동 라인들(fellow screw driving lines)이 유사한 증가를 검출했는지를 체크한다. 배치된 AI 모델로부터의 출력들을 모니터링함으로써, 예시적인 지능적 트리거 회로는 베이스라인으로부터 의 편차가 검출될 때 예시적인 자동화된 모델 검색 회로를 활성화할 것이다. 메타 데이터(예를 들어, 환 경 데이터) 및 위에 설명된 다른 배치된 AI 모델들로부터의 정보에 기초하여, 예시적인 지능적 트리거 회로 는 그것이 검출한 메트릭의 변경이 전역적 변경(다른 생산 라인들이 또한 유사한 변경을 경험함)인지 또는 국부적 변경인지, 그리고 변경과 상관되는 것(예컨대 공장에서의 온도 또는 습도의 갑작스런 증가)을 결정할 수 있다. 이 판단은 이어서 모델 배치 모듈의 자기-개선(self-improvement)을 용이하게 하기 위해 예시적인 지능 적 배치 회로에 전달될 것이다. 예시적인 자동화된 모델 검색 회로는, 예를 들어, 하드웨어(예를 들어, 반도체 기반) 프로세서와 같은 로 직 회로에 의해 구현된다. 그러나, 예를 들어, 하나 이상의 아날로그 또는 디지털 회로(들), 로직 회로들, 프 로그램가능 프로세서(들), 주문형 집적 회로(들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 필드 프로그램가능 로직 디바이스(들)(FPLD(들)), 디지털 신호 프로세서(들)(DSP(들)) 등과 같은 임의의 다른 타입의 회로가 추가적으로 또는 대안적으로 사용될 수 있다. 예시적인 자동화된 모델 검색 회로는 예시적인 데이 터 인터페이스 회로의 통신을 통해 새로운 모델들을 생성하거나 인공 지능 모델 리포지토리로부터 모 델들을 검색하도록 구성된다. 일부 예들에서, 자동화된 모델 검색 회로는 적어도 하나의 새로운 모델을 생성한다. 다른 예들에서, 예시적인 자동화된 모델 검색 회로는 모델 생성 기법에 따라 적어도 3가지 모 델 타입으로부터 적어도 하나의 모델을 생성한다. 제1 타입의 모델의 경우, 예시적인 자동화된 모델 검색 회로는 이전의 모델과 동일한 모델 아키텍처를 구 현하는 제1 후보 모델을 생성할 수 있지만, 모델 파라미터들은 생산 라인에서 새로 수집된 데이터로 업데이트된 다. 제2 타입의 모델의 경우, 예시적인 자동화된 모델 검색 회로는 이전 모델의 하이퍼파라미터들을 업데이트 하고/하거나, 모델 아키텍처의 일부 부분적인 변경들을 행하지만 모델 아키텍처의 주요 컴포넌트는 변경되지 않 은 채로 유지하는 제2 후보 모델을 생성할 수 있다. 한 예는, SVM(support vector machine)에서 사용된 커널 함수가 새로운 모델을 구축하기 위해 변경될 수 있다는 것일 수 있다. 다른 예는, 결함 검출 사용 사례(defect detection use case)에서 결함들의 형상 또는 일부 다른 속성이 변경되었을 때, 원래의 결함들을 검출하도록 트 레이닝된 심층 신경망(deep neural network)의 마지막 몇몇 층들이 새로운 결함들에 적응하도록 변경되고 트레 이닝될 수 있다는 것이다. 제3 타입의 모델의 경우, 예시적인 자동화된 모델 검색 회로는 모델 검색 모듈에 의해 생성될 상이한 모델 아키텍처를 구현하는 제3 후보 모델을 생성할 수 있다. 예를 들어, 배치된 원래의 AI 모델이 SVM(support vector machine) 기반 분류자이면, 랜덤 포레스트에 기초하는 새로운 분류자가 구축될 수 있다. 새로운 아키텍 처들을 갖는 하나보다 많은 후보 모델들이 생성될 수 있고, 이러한 새로운 모델들의 수는 미리 구성될 수 있다. 이러한 모델 검색을 위해 각각의 생산 라인에 대해 상이한 랜덤 시드가 사용된다. 예시적인 자동화된 모델 검색 회로는, 산업 설정에서 이상 데이터(anomalous data)를 발견하는 것은 특히 끊임없이 변하는 구성들 및 환경 설정들에 따라 매우 어렵기 때문에 제2 타입의 모델 또는 제3 타입의 모델을 사용할 수 있다. 또한, 특히 모델 배치의 초기 스테이지들에서, 이러한 이상들을 재현하고 이들을 트레이닝을 위해 사용하는 것은 어렵다. 검출된 새로운 타입의 이상 데이터가 있을 때, 기존의 모델(들)은 새로운 결함들 을 고려하도록 업데이트되거나, 새로운 타입의 이상을 검출하기 위해 새로운 모델이 추가된다. 이것은 위의 제 2 타입의 모델 또는 위의 제3 타입의 모델 중 하나를 사용하여 달성되며, 확장가능 자기-학습 시스템(scalable self-learning system)에 해당한다. 대안적으로, 예시적인 자동화된 모델 검색 회로는 예시적인 모델 리포지토리로부터 모델을 선택할 수 있다. 이전에 배치된 각각의 AI 모델은 그것이 배치된 생산 라인, 그 특정 생산 라인의 장비/프로세스 구성, 모델 성능(예를 들어, 예측 정확도), 모델이 실행 중이었을 때의 공장에서의 환경 조건들(예를 들어, 온도 및 습도)과 같은 일부 메타데이터와 함께 예시적인 인공 지능 모델 리포지토리에 저장된다. 예시적인 인공 지능 모델 리포지토리의 모델들과 문제의 업데이트될 AI 모델 사이의 유사도 스코어(similarity score)가 메타 데이터를 사용하여 계산될 수 있다. 예시적인 인공 지능 모델 리포지토리 내의 AI 모델들은 가장 높은 유사도 스코어들을 갖는 것들로 좁혀질 수 있고, 그 후 과거의 그것들의 모델 성능에 기초하여, 예시적인 자 동화된 모델 검색 회로는 예시적인 인공 지능 모델 리포지토리 내의 복수의 모델들 중에서 모델 후보 들을 선택할 수 있다. 예시적인 지능적 배치 회로는, 예를 들어, 하드웨어(예를 들어, 반도체 기반) 프로세서와 같은 로직 회로 에 의해 구현된다. 그러나, 예를 들어, 하나 이상의 아날로그 또는 디지털 회로(들), 로직 회로들, 프로그램가 능 프로세서(들), 주문형 집적 회로(들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 필드 프로그램 가능 로직 디바이스(들)(FPLD(들)), 디지털 신호 프로세서(들)(DSP(들)) 등과 같은 임의의 다른 타입의 회로가 추가적으로 또는 대안적으로 사용될 수 있다. 예시적인 지능적 배치 회로는 인공 지능 모델들을 배치한다. 초기 배치 페이즈에서, 예시적인 지능적 배치 회로는 먼저 모든 모델 후보들을 병렬로 실행하 고 알고리즘을 사용하여 단일 출력을 결정한다. 알고리즘은 각각의 모델에 동일한 가중치를 부여하는 평균의 산출 또는 과반수 투표 메커니즘(majority vote mechanism)으로서 시작한다. 예시적인 지능적 배치 회로 는 모델 후보들로부터 이상치 모델(outlier model)들을 검출함으로써 시간 경과에 따라 그 자신을 개선시킨다. 하나 또는 일부 모델 후보로부터의 예측들이 나머지 다수와 빈번하게 상이하면, 그 이상치 모델들에 대한 가중 치들은 모델 배치 모듈에 의해 점진적으로 감소된다. 모델 업데이트를 트리거한 변경이 전역적 변경(즉, 둘 이상의 생산 라인에서 발생함)이면, 예시적인 지능적 배 치 회로는 다른 동일한 생산 라인들에서 실행되는 예시적인 지능적 배치 회로(예를 들어, 다른 예시 적인 모델 업데이트 컨트롤러 회로에서 실행되는 예시적인 지능적 배치 회로)와 협업함으로써 시간 경과에 따라 그 자신을 개선시킨다. 아이디어는 다수의 동일한 생산 라인들이 모든 라인에서 발생한 전역적 변경 후에 유사한 새로운 베이스라인(예를 들어, 예측된 양성률)에 수렴해야 한다는 것이다. 따라서, 예시적인 지능적 배 치 회로는 그 메트릭의 전역적 베이스라인에 더 가까운 메트릭 값을 생성하는 모델들에 대해 점차적으로 더 많이 가중해야 한다. 수렴의 예가 도 9와 관련하여 도시된다. 일부 예들에서, 장치는 자동화된 모델 업데이트 프로세스를 트리거하는 수단을 포함한다. 예를 들어, 자동화된 모델 업데이트 프로세스를 트리거하는 수단은 지능적 트리거 회로에 의해 구현될 수 있다. 일부 예들에서, 지능적 트리거 회로는 도 11의 예시적인 프로세서 회로, 도 12의 예시적인 프로세서 회로 , 및/또는 도 13의 예시적인 필드 프로그램가능 게이트 어레이(FPGA) 회로에 의해 구현될 수 있는 프로세서 회로에 의해 실행되는 도 7의 적어도 블록들(702, 704)에 의해 구현되는 것과 같은 머신 실행가능 명 령어들에 의해 구현될 수 있다. 다른 예들에서, 지능적 트리거 회로는 다른 하드웨어 로직 회로, 하드웨 어 구현 상태 머신들, 및/또는 하드웨어, 소프트웨어 및/또는 펌웨어의 임의의 다른 조합에 의해 구현된다. 예 를 들어, 지능적 트리거 회로는 소프트웨어 또는 펌웨어를 실행하지 않고 대응하는 동작을 수행하도록 구 조화되는 적어도 하나 이상의 하드웨어 회로(예를 들어, 프로세서 회로, 개별 및/또는 통합 아날로그 및/또는 디지털 회로, FPGA, 주문형 집적 회로(ASIC), 비교기, 연산 증폭기(op-amp), 로직 회로 등)에 의해 구현될 수 있지만, 다른 구조들도 마찬가지로 적절하다. 일부 예들에서, 장치는 복수의 후보 인공 지능 모델들을 생성하는 수단을 포함한다. 예를 들어, 복수의 후보 인공 지능 모델들을 생성하는 수단은 자동화된 모델 검색 회로에 의해 구현될 수 있다. 일부 예들에서, 자동화된 모델 검색 회로는 도 11의 예시적인 프로세서 회로, 도 12의 예시적인 프로세서 회로 , 및/또는 도 13의 예시적인 필드 프로그램가능 게이트 어레이(FPGA) 회로에 의해 구현될 수 있는 프로세서 회로에 의해 실행되는 도 7의 적어도 블록들(708, 710, 714)에 의해 구현되는 것과 같은 머신 실행가 능 명령어들에 의해 구현될 수 있다. 다른 예들에서, 지능적 트리거 회로는 다른 하드웨어 로직 회로, 하 드웨어 구현 상태 머신들, 및/또는 하드웨어, 소프트웨어 및/또는 펌웨어의 임의의 다른 조합에 의해 구현된다. 예를 들어, 지능적 트리거 회로는 소프트웨어 또는 펌웨어를 실행하지 않고 대응하는 동작을 수행하도록 구조화되는 적어도 하나 이상의 하드웨어 회로(예를 들어, 프로세서 회로, 개별 및/또는 통합 아날로그 및/또는 디지털 회로, FPGA, 주문형 집적 회로(ASIC), 비교기, 연산 증폭기, 로직 회로 등)에 의해 구현될 수 있지만, 다른 구조들도 마찬가지로 적절하다. 일부 예들에서, 장치는 시간 경과에 따라 예측 성능을 개선시키는 수단을 포함한다. 예를 들어, 시간 경과에 따라 예측 성능을 개선시키는 수단은 지능적 배치 회로에 의해 구현될 수 있다. 일부 예들에서, 지능적 배치 회로는 도 11의 예시적인 프로세서 회로, 도 12의 예시적인 프로세서 회로, 및/또는 도 13의 예시적인 필드 프로그램가능 게이트 어레이(FPGA) 회로에 의해 구현될 수 있는 프로세서 회로에 의 해 실행되는 도 7의 적어도 블록들(716, 718, 720, 722)에 의해 구현되는 것과 같은 머신 실행가능 명령어들에 의해 구현될 수 있다. 다른 예들에서, 지능적 배치 회로는 다른 하드웨어 로직 회로, 하드웨어 구현 상태머신들, 및/또는 하드웨어, 소프트웨어 및/또는 펌웨어의 임의의 다른 조합에 의해 구현된다. 예를 들어, 지능 적 배치 회로는 소프트웨어 또는 펌웨어를 실행하지 않고 대응하는 동작을 수행하도록 구조화되는 적어도 하나 이상의 하드웨어 회로(예를 들어, 프로세서 회로, 개별 및/또는 통합 아날로그 및/또는 디지털 회로, FPGA, 주문형 집적 회로(ASIC), 비교기, 연산 증폭기, 로직 회로 등)에 의해 구현될 수 있지만, 다른 구조들도 마찬가지로 적절하다. 도 4의 모델 업데이트 컨트롤러 회로를 구현하는 예시적인 방식이 도 5에 도시되어 있지만, 도 5에 도시된 요소들, 프로세스들 및/또는 디바이스들 중 하나 이상은 임의의 다른 방식으로 조합, 분할, 재배열, 생략, 제거, 및/또는 구현될 수 있다. 또한, 예시적인 데이터 인터페이스 회로, 예시적인 환경 데이터 인터페이 스 회로, 예시적인 지능적 트리거 회로, 예시적인 자동화된 모델 검색 회로, 및 예시적인 지능 적 배치 회로 및/또는, 보다 일반적으로, 도 4의 예시적인 모델 업데이트 컨트롤러 회로는 하드웨어, 소프트웨어, 펌웨어, 및/또는 하드웨어, 소프트웨어, 및/또는 펌웨어의 임의의 조합에 의해 구현될 수 있다. 따라서, 예를 들어, 예시적인 데이터 인터페이스 회로, 예시적인 환경 데이터 인터페이스 회로, 예시 적인 지능적 트리거 회로, 예시적인 자동화된 모델 검색 회로, 및 예시적인 지능적 배치 회로 및/또는, 보다 일반적으로, 예시적인 모델 업데이트 컨트롤러 회로 중 임의의 것은 프로세서 회로, 아날로 그 회로(들), 디지털 회로(들), 로직 회로(들), 프로그램가능 프로세서(들), 프로그램가능 마이크로컨트롤러(들), 그래픽 처리 유닛(들)(GPU(들)), 디지털 신호 프로세서(들)(DSP(들)), 주문형 집적 회로 (들)(ASIC(들)), 프로그램가능 로직 디바이스(들)(PLD(들)), 및/또는 필드 프로그램가능 로직 디바이스 (들)(FPLD(들)), 예컨대 필드 프로그램가능 게이트 어레이(FPGA)들에 의해 구현될 수 있다. 순수하게 소프트웨 어 및/또는 펌웨어 구현을 커버하기 위해 본 특허의 장치 또는 시스템 청구항들 중 임의의 것을 읽으면, 예시적 인 데이터 인터페이스 회로, 예시적인 환경 데이터 인터페이스 회로, 예시적인 지능적 트리거 회로 , 예시적인 자동화된 모델 검색 회로, 및/또는 예시적인 지능적 배치 회로 중 적어도 하나는 소 프트웨어 및/또는 펌웨어를 포함하는 메모리, 디지털 다목적 디스크(digital versatile disk, DVD), 콤팩트 디 스크(compact disk, CD), 블루레이 디스크(Blu-ray disk) 등과 같은 비일시적 컴퓨터 판독가능 스토리지 디바이 스 또는 스토리지 디스크를 포함하는 것으로 이로써 명백하게 정의된다. 또한, 도 4의 예시적인 모델 업데이트 컨트롤러 회로는 도 5에 도시된 것들에 추가하여 또는 그 대신에, 하나 이상의 요소, 프로세스들 및/또는 디바이스들을 포함할 수 있고, 그리고/또는 예시된 요소들, 프로세스들 및 디바이스들 중 임의의 것 또는 전부 중 둘 이상을 포함할 수 있다. 도 4의 모델 업데이트 컨트롤러 회로를 구현하기 위한 예시적인 하드웨어 로직 회로, 머신 판독가능 명령 어들, 하드웨어 구현 상태 머신들, 및/또는 이들의 임의의 조합을 나타내는 흐름도가 도 6 및 도 7에 도시되어 있다. 머신 판독가능 명령어들은 도 11과 관련하여 이하에서 논의되는 예시적인 프로세서 플랫폼에 도시 된 프로세서 회로 및/또는 도 12 및/또는 도 13과 관련하여 이하에서 논의되는 예시적인 프로세서 회로와 같은 프로세서 회로에 의한 실행을 위한 하나 이상의 실행가능 프로그램 또는 실행가능 프로그램의 부분(들)일 수 있다. 프로그램은 CD, 플로피 디스크, 하드 디스크 드라이브(HDD), DVD, 블루레이 디스크, 휘발성 메모리 (예를 들어, 임의의 타입의 랜덤 액세스 메모리(RAM) 등), 또는 하나 이상의 하드웨어 디바이스에 위치한 프로 세서 회로와 연관된 비휘발성 메모리(예를 들어, 플래시 메모리, HDD 등)와 같은 하나 이상의 비일시적 컴퓨터 판독가능 저장 매체에 저장된 소프트웨어로 구현될 수 있지만, 전체 프로그램 및/또는 그의 부분들은 대안적으 로 프로세서 회로 이외의 하나 이상의 하드웨어 디바이스에 의해 실행되고/되거나 펌웨어 또는 전용 하드웨어로 구현될 수 있다. 머신 판독가능 명령어들은 다수의 하드웨어 디바이스들에 걸쳐 분산되고/되거나 2개 이상의 하드웨어 디바이스(예를 들어, 서버 및 클라이언트 하드웨어 디바이스)에 의해 실행될 수 있다. 예를 들어, 클 라이언트 하드웨어 디바이스는 엔드포인트 클라이언트 하드웨어 디바이스(예를 들어, 사용자와 연관된 하드웨어 디바이스) 또는 중간 클라이언트 하드웨어 디바이스(예를 들어, 서버와 엔드포인트 클라이언트 하드웨어 디바이 스 사이의 통신을 용이하게 할 수 있는 라디오 액세스 네트워크(RAN) 게이트웨이)에 의해 구현될 수 있다. 유 사하게, 비일시적 컴퓨터 판독가능 저장 매체는 하나 이상의 하드웨어 디바이스에 위치된 하나 이상의 매체를 포함할 수 있다. 또한, 예시적인 프로그램이 도 6 및 도 7에 예시된 흐름도를 참조하여 설명되지만, 예시적인 모델 업데이트 컨트롤러 회로를 구현하는 많은 다른 방법들이 대안적으로 사용될 수 있다. 예를 들어, 블 록들의 실행 순서는 변경될 수 있고/있거나, 설명된 블록들 중 일부는 변경, 제거, 또는 조합될 수 있다. 추가 적으로 또는 대안적으로, 블록들 중 임의의 것 또는 모두는 소프트웨어 또는 펌웨어를 실행하지 않고 대응하는 동작을 수행하도록 구조화되는 하나 이상의 하드웨어 회로(예를 들어, 프로세서 회로, 개별 및/또는 통합 아날 로그 및/또는 디지털 회로, FPGA, ASIC, 비교기, 연산 증폭기, 로직 회로 등)에 의해 구현될 수 있다. 프로세 서 회로는 상이한 네트워크 위치들에 분산되고/되거나 단일 머신 내의 하나 이상의 하드웨어 디바이스(예를 들어, 단일 코어 프로세서(예를 들어, 단일 코어 중앙 프로세서 유닛(CPU)), 멀티 코어 프로세서(예를 들어, 멀티 코어 CPU) 등), 서버 랙의 다수의 서버에 걸쳐 분산된 다수의 프로세서, 하나 이상의 서버 랙에 걸쳐 분산된 다 수의 프로세서, 동일한 패키지(예를 들어, 동일한 집적 회로(IC) 패키지 또는 2개 이상의 별개의 하우징 등)에 위치된 CPU 및/또는 FPGA에 로컬일 수 있다. 본 명세서에 설명된 머신 판독가능 명령어들은 압축된 포맷, 암호화된 포맷, 파편화된 포맷(fragmented format), 컴파일링된 포맷, 실행가능 포맷, 패키징된 포맷 등 중 하나 이상으로 저장될 수 있다. 본 명세서에 설명된 바와 같은 머신 판독가능 명령어들은 머신 실행가능 명령어들을 생성, 제조, 및/또는 생산하기 위해 활 용될 수 있는 데이터 또는 데이터 구조로서(예를 들어, 명령어들의 부분들, 코드, 코드의 표현들 (representations of code) 등으로서) 저장될 수 있다. 예를 들어, 머신 판독가능 명령어들은 파편화되고 네트 워크 또는 네트워크들의 컬렉션의 동일한 또는 상이한 위치들에(예를 들어, 클라우드에, 에지 디바이스들에, 등 등) 위치하는 하나 이상의 스토리지 디바이스 및/또는 컴퓨팅 디바이스(예를 들어, 서버) 상에 저장될 수 있다. 머신 판독가능 명령어들은 그것들을 컴퓨팅 디바이스 및/또는 다른 머신에 의해 직접 판독가능, 해석가능, 및/ 또는 실행가능하게 하기 위해 설치, 수정, 적응, 업데이트, 조합, 보충, 구성, 복호화, 압축해제, 패킹해제 (unpacking), 분배, 재할당, 컴파일 등 중 하나 이상을 필요로 할 수 있다. 예를 들어, 머신 판독가능 명령어 들은 개별적으로 압축, 암호화, 및/또는 별개의 컴퓨팅 디바이스들 상에 저장되는 다수의 부분들로 저장될 수 있고, 이 부분들은 복호화, 압축해제, 및/또는 조합될 때 본 명세서에서 설명된 것과 같은 프로그램을 함께 형 성할 수 있는 하나 이상의 동작을 구현하는 머신 실행가능 명령어들의 세트를 형성한다. 다른 예에서, 머신 판독가능 명령어들은, 프로세서 회로에 의해 판독될 수 있지만, 특정 컴퓨팅 디바이스 또는 다른 디바이스 상에서 머신 판독가능 명령어들을 실행하기 위해 라이브러리(예를 들어, 동적 링크 라이브러리 (dynamic link library, DLL)), 소프트웨어 개발 키트(software development kit, SDK), 애플리케이션 프로그 래밍 인터페이스(application programming interface, API) 등의 추가를 요구하는 상태로 저장될 수 있다. 다 른 예에서, 머신 판독가능 명령어들은 머신 판독가능 명령어들 및/또는 대응하는 프로그램(들)이 전체적으로 또 는 부분적으로 실행될 수 있기 전에 구성(예를 들어, 설정 저장, 데이터 입력, 네트워크 어드레스 기록 등)될 필요가 있을 수 있다. 따라서, 본 명세서에서 사용되는 바와 같이, 머신 판독가능 매체는, 저장되거나 또는 달 리 정지중(at rest) 또는 수송중(in transit)일 때 머신 판독가능 명령어들 및/또는 프로그램(들)의 특정 포맷 또는 상태에 관계없이 머신 판독가능 명령어들 및/또는 프로그램(들)을 포함할 수 있다. 본 명세서에 설명된 머신 판독가능 명령어들은 임의의 과거, 현재, 또는 미래의 명령어 언어, 스크립팅 언어, 프로그래밍 언어 등으로 표현될 수 있다. 예를 들어, 머신 판독가능 명령어들은 다음의 언어들: C, C++, Java, C#, Perl, Python, JavaScript, HTML(HyperText Markup Language), SQL(Structured Query Language), Swift 등 중 임의의 것을 사용하여 표현될 수 있다. 위에서 언급한 바와 같이, 도 6 및 도 7의 예시적인 동작들은, 광학 스토리지 디바이스들, 자기 스토리지 디바 이스들, HDD, 플래시 메모리, 판독 전용 메모리(ROM), CD, DVD, 캐시, 임의의 타입의 RAM, 레지스터, 및/또는 임의의 지속기간 동안(예를 들어, 연장된 기간 동안, 영구적으로, 일시적으로, 일시적으로 버퍼링하는 동안, 및 /또는 정보의 캐싱 동안) 정보가 저장되는 임의의 다른 스토리지 디바이스 또는 스토리지 디스크와 같은 하나 이상의 비일시적 컴퓨터 및/또는 머신 판독가능 매체 상에 저장되는 실행가능 명령어들(예를 들어, 컴퓨터 및/ 또는 머신 판독가능 명령어들)을 사용하여 구현될 수 있다. 본 명세서에서 사용되는 바와 같이, 비일시적 컴퓨 터 판독가능 매체 및 비일시적 컴퓨터 판독가능 저장 매체라는 용어들은 임의의 타입의 컴퓨터 판독가능 스토리 지 디바이스 및/또는 스토리지 디스크를 포함하고 전파 신호들을 배제하고 송신 매체를 배제하는 것으로 명백하 게 정의된다. \"포함하는\" 및 \"포괄하는\"(및 그의 모든 형태 및 시제)은 본 명세서에서 오픈 엔드형 용어(open ended term)인 것으로 사용된다. 따라서, 청구항이 프리앰블로서 또는 임의의 종류의 청구항 기재 내에서 임의의 형태의 \"포 함하다\" 또는 \"포괄하다\"(예를 들어, 포함한다, 포괄한다, 포함하는, 포괄하는, 갖는 등)를 이용할 때마다, 추 가적인 요소들, 용어들 등이 대응하는 청구항 또는 열거의 범위를 벗어나지 않고 존재할 수 있다는 것을 이해해 야 한다. 본 명세서에서 사용되는 바와 같이, \"적어도\"라는 문구가, 예를 들어, 청구항의 프리앰블에서 전환 용어(transition term)로서 사용될 때, 그것은 용어 \"포함하는\" 및 \"포괄하는\"이 오픈 엔드형인 것과 동일한 방 식으로 오픈 엔드형이다. 용어 \"및/또는\"은, 예를 들어, A, B, 및/또는 C와 같은 형태로 사용될 때, A 단 독, B 단독, C 단독, A와 B, A와 C, B와 C, 또는 A와 B와 C 등의 A, B, C의 임의의 조합 또는 서브세트를 지칭한다. 구조들, 컴포넌트들, 아이템들, 객체들 및/또는 사물들을 설명하는 맥락에서 본 명세서에서 사용되는 바와 같이, \"A 및 B 중 적어도 하나\"라는 문구는 적어도 하나의 A, 적어도 하나의 B, 또는 적어도 하나의 A 및 적어도 하나의 B 중 임의의 것을 포함하는 구현들을 지칭하도록 의도된다. 유사하게, 구조들, 컴포넌트들, 아이템들, 객체들 및/또는 사물들을 설명하는 맥락에서 본 명세서에 서 사용되는 바와 같이, \"A 또는 B 중 적어도 하나\"라는 문구는 적어도 하나의 A, 적어도 하나의 B, 또 는 적어도 하나의 A 및 적어도 하나의 B 중 임의의 것을 포함하는 구현들을 지칭하도록 의도된다. 프로세 스들, 명령어들, 액션들, 활동들 및/또는 단계들의 수행 또는 실행을 설명하는 문맥에서 본 명세서에서 사용되 는 바와 같이, \"A 및 B 중 적어도 하나\"라는 문구는 적어도 하나의 A, 적어도 하나의 B, 또는 적어 도 하나의 A 및 적어도 하나의 B 중 임의의 것을 포함하는 구현들을 지칭하도록 의도된다. 유사하게, 프로세스 들, 명령어들, 액션들, 활동들 및/또는 단계들의 수행 또는 실행을 설명하는 문맥에서 본 명세서에서 사용되는 바와 같이, \"A 또는 B 중 적어도 하나\"라는 문구는 적어도 하나의 A, 적어도 하나의 B, 또는 적어 도 하나의 A 및 적어도 하나의 B 중 임의의 것을 포함하는 구현들을 지칭하도록 의도된다. 본 명세서에서 사용되는 바와 같이, 단수 참조들(예를 들어, \"한\", \"하나의\", \"제1\", \"제2\" 등)은 복수를 배제 하지 않는다. 본 명세서에서 사용되는 바와 같이, \"한\" 또는 \"하나의\" 객체라는 용어는 그 객체의 하나 이상을 지칭한다. 용어 \"한\"(또는 \"하나의\"), \"하나 이상\" 및 \"적어도 하나\"는 본 명세서에서 상호교환가능하게 사용 된다. 또한, 개별적으로 열거되어 있지만, 복수의 수단들, 요소들 또는 방법 액션들이 예를 들어 동일한 엔티 티 또는 객체에 의해 구현될 수 있다. 또한, 개별적인 특징들이 상이한 예들 또는 청구항들에 포함될 수 있지 만, 이것들은 가능하게는 조합될 수 있고, 상이한 예들 또는 청구항들에서의 포함이 특징들의 조합이 실현가능 하지 않고 및/또는 유리하지 않다는 것을 암시하지는 않는다. 도 6은 모델 업데이트 프로세스에 기초하여 후보 모델 조합들을 출력하기 위해 프로세서 회로에 의해 실행 및/ 또는 인스턴스화될 수 있는 예시적인 머신 판독가능 명령어들 및/또는 예시적인 동작들을 나타내는 흐름도 이다. 도 6의 머신 판독가능 명령어들 및/또는 동작들은 예시적인 지능적 트리거 회로가 4개의 정보 소스 중 적어도 하나에 기초하여 자동화된 모델 업데이트 프로세스를 트리거하는 블록 602에서 시작한다. 예를 들어, 예시적인 지능적 트리거 회로는 메트릭 베이스라인 데이터, 환경 데이터를 포함하는 메타데이터, 인 공 지능 모델 데이터, 또는 다른 생산 라인들로부터의 인공 지능 모델 데이터에 기초하여 자동화된 모드 업데이 트 프로세스를 트리거할 수 있다. 블록 604에서, 예시적인 자동화된 모델 검색 회로는 복수의 후보 머신 러닝 모델들을 생성한다. 예를 들 어, 예시적인 자동화된 모델 검색 회로는 머신 러닝 모델들의 인공 지능 리포지토리를 검색함으로써 또는 적어도 3가지 타입의 모델들을 생성함으로써 복수의 후보 머신 러닝 모델들을 생성할 수 있다. 일부 예들에서, 예시적인 자동화된 모델 검색 회로는 제1 생산 라인에서 동작하는 제1 인공 지능 모델의 모델 아키텍처를 구현하지만, 새롭게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 포함하는 제1 새로운 인공 지능 모델을 생성할 수 있거나, 또는 제1 생산 라인에서 동작하는 제1 인공 지능 모델의 유사한 모델 아키텍처를 구 현하지만, 하이퍼파라미터 업데이트들을 포함하는 제2 새로운 인공 지능 모델을 생성할 수 있거나, 또는 제1 생 산 라인에서 동작하는 제1 인공 지능 모델에 기초하지 않는 새로운 모델 아키텍처를 구현하는 제3 새로운 인공 지능 모델을 생성할 수 있다. 블록 606에서, 예시적인 지능적 배치 회로는 시간 경과에 따라 예측 성능을 개선시키기 위해 모델 조합들 의 예측을 출력한다. 예를 들어, 지능적 배치 회로는 생성된 복수의 모델들을 모니터링하고, 이상치들을 제거하고, 그리고/또는 품질의 임계값 근처에서 수행하고 있는 모델들을 저장함으로써 시간 경과에 따라 예측 성능을 개선시키기 위해 모델 조합들의 예측을 출력할 수 있다. 예시적인 명령어들은 종료된다. 일부 예 들에서, 예시적인 명령어들은 프로세스가 반복될 때(예를 들어, 항상 발생할 때) 블록 602로 복귀한다. 도 7은 모델 업데이트 프로세스에 기초하여 후보 모델 조합들을 출력하기 위해 프로세서 회로에 의해 실행 및/ 또는 인스턴스화될 수 있는 예시적인 머신 판독가능 명령어들 및/또는 예시적인 동작들을 나타내는 흐름도 이다. 도 7의 머신 판독가능 명령어들 및/또는 동작들은 예시적인 지능적 트리거 회로가 4개의 데이 터 소스 중 적어도 하나를 수신하는 블록 702에서 시작한다. 예를 들어, 예시적인 지능적 트리거 회로는 메트릭 베이스라인, 제1 공장 생산 라인에서 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 또는 제2 공장 생산 라인에서 동작하는 제2 인공 지능 모델로부터의 출력에 액세스함으로써 4개의 데이터 소스 중 적어도 하나를 수신할 수 있다. 제어는 블록 704로 진행한다. 블록 704에서, 지능적 트리거 회로는 업데이트를 트리거하는 것을 결정한다. 예를 들어, 지능적 트리거 회로는 메트릭 베이스라인으로부터의 편차에 응답하여 업데이트를 트리거하는 것을 결정할 수 있다. 예를 들어, 지능적 트리거 회로는 제1 인공 지능 모델의 정확도가 제조 프로세스에서 에러를 예측하는데 있어서부정확하다는 표시와 같은 제1 공장 생산 라인에서 동작하는 제1 인공 지능 모델로부터의 출력에 응답하여 업데 이트를 트리거하는 것을 결정할 수 있다. 예를 들어, 지능적 트리거 회로는 환경 센서 판독치들, 장비 구 성들, 및 프로세스 구성들 중 적어도 하나와 같은 메타데이터에 응답하여 업데이트를 트리거하는 것을 결정할 수 있다. 예를 들어, 지능적 트리거 회로는 제2 인공 지능 모델의 정확도가 제조 프로세스에서 에러를 예 측하는데 있어서 부정확하다는 표시와 같은 제2 공장 생산 라인에서 동작하는 제2 인공 지능 모델로부터의 출력 에 응답하여 업데이트를 트리거하는 것을 결정할 수 있다. 예를 들어, 예시적인 지능적 트리거 회로는 업데이트를 트리거하지 않는 것을 결정할 수 있다(예를 들어, \"아니오\"). 제어는 지능적 트리거 회로가 4개의 데이터 소스 중 적어도 하나를 수신하는 블록 702로 진행 한다. 예를 들어, 예시적인 지능적 트리거 회로는 업데이트를 트리거하는 것을 결정할 수 있다(예를 들어, \"예\"). 제어는 블록 706으로 진행한다. 블록 706에서, 예시적인 데이터 인터페이스 회로는 예시적인 모델 리포지토리로부터 메타데이터를 수 신한다. 예를 들어, 예시적인 데이터 인터페이스 회로는 예시적인 모델 리포지토리 내의 상이한 인 공 지능 모델들에 대응하는 메타데이터에 액세스함으로써 예시적인 모델 리포지토리로부터 메타데이터를 수신할 수 있다. 제어는 블록 708로 진행한다. 블록 708에서, 예시적인 자동화된 모델 검색 회로는 유사한 모델이 모델 리포지토리에 있는지를 결정 한다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 예시적인 모델 리포지토리에 임의의 모델들이 있 는지를 결정함으로써 모델이 모델 리포지토리에 있다고 결정할 수 있다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 모델이 모델 리포지토리에 있다고 결정할 수 있다(예를 들어, \"예\"). 제어는 블록 710으로 진행한다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 모델이 모델 리포지토리에 없다 고 결정할 수 있다(예를 들어, \"아니오\"). 제어는 블록 714로 진행한다. 블록 710에서, 예시적인 자동화된 모델 검색 회로는 모델 리포지토리 내의 모델을 사용하는 것을 결 정한다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 모델 리포지토리 내의 인공 지능 모델들과 공장 생산 라인에서의 조건들 사이의 메타데이터에 대응하는 유사도 스코어에 기초하여 모델 리포지토리 내의 모델을 사용하는 것을 결정할 수 있다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 모델 리포지토리 에 있는 인공 지능 모델을 사용하는 것을 결정할 수 있다(예를 들어, \"예\"). 제어는 블록 712로 진행한다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 모델 리포지토리 내의 인공 지능 모델을 사용하지 않는 것을 결정할 수 있다(예를 들어, \"아니오\"). 제어는 블록 714로 진행한다. 블록 712에서, 예시적인 자동화된 검색 회로는 모델 리포지토리로부터 복수의 모델들을 검색한다. 예를 들어, 예시적인 자동화된 검색 회로는 메타 데이터와 현재 공장 생산 라인 사이의 유사도 스코어에 기초하여 모델 리포지토리로부터 복수의 모델들을 검색할 수 있다. 일부 예들에서, 예시적인 자동화된 검 색 회로는 모델들의 성능 스코어들에 기초하여 모델 리포지토리로부터 복수의 모델들을 검색할 수 있 다. 제어는 블록 716으로 진행한다. 블록 714에서, 예시적인 자동화된 검색 회로는 복수의 모델들을 생성한다. 예를 들어, 예시적인 자동화된 모델 검색 회로는 예시적인 모델 리포지토리 내의 모델들의 결여 또는 예시적인 모델 리포지토리 내의 유사한(예를 들어, 메타데이터에 기초한) 모델들의 결여에 응답하여 복수의 모델들을 생성할 수 있 다. 예를 들어, 공장 라인이 풀가동(full production)된 후 10도의 온도 변동과 같은 특정 환경 조건들에 대해 튜닝되는 모델이 없을 수 있어, 예시적인 자동화된 모델 검색 회로는 복수의 모델들을 생성하고 모델이 생 성된 때의 조건들에 대응하는 특정 메타데이터를 저장할 수 있다. 일부 예들에서, 복수의 모델들은 적어도 2개 이다. 복수의 모델들(예를 들어, 적어도 2개)로부터의 출력 데이터는 평균 불량률(average faulty rate)을 결 정하고 이상치 모델들을 제거하는 데 사용된다. 제어는 블록 716으로 진행한다. 블록 716에서, 예시적인 지능적 배치 회로는 인공 지능 모델들을 지능적으로 배치한다. 예를 들어, 예시 적인 지능적 배치 회로는 후보 모델들을 병렬로 실행(예를 들어, 배치)하고 알고리즘에 기초하여 복수의 모델들로부터의 데이터를 통합하는 단일 출력을 결정함으로써 인공 지능 모델들을 지능적으로 배치할 수 있다. 일부 예들에서, 알고리즘은 후보 모델들에 유사한(예를 들어, 동일한, 똑같은) 가중치를 부여하는 평균 계산 또 는 과반수 투표 메커니즘이다. 제어는 블록 718로 진행한다. 블록 718에서, 예시적인 지능적 배치 회로는 후보 모델들을 모니터링한다. 예를 들어, 예시적인 지능적 배치 회로는 복수의 모델들의 출력을 결정함으로써 후보 모델들을 모니터링할 수 있다. 시간이 경과함에따라, 복수의 모델들(예를 들어, 모델 앙상블)에서의 특정한 후보 모델에 할당된 가중치는 특정한 후보 모델의 출력에 기초하여 증가하거나 감소할 수 있다. 제어는 블록 720으로 진행한다. 블록 720에서, 예시적인 지능적 배치 회로는 이상치 모델들을 제거한다. 예를 들어, 예시적인 지능적 배 치 회로는 모델이 평균 불량률 초과(above average faulty rate) 또는 평균 불량률 미만(below average faulty rate)을 예측하고 있다고 결정함으로써 이상치 모델들을 제거할 수 있다. 예를 들어, 실제 불량률이 5 퍼센트(5%)이면, 평균 불량률 초과인 20 퍼센트(20%)의 불량률을 일관되게 예측하는 모델이 복수의 모델들(예를 들어, 모델들의 앙상블)로부터 제거될 수 있다. 제어는 블록 722로 진행한다. 블록 722에서, 예시적인 지능적 배치 회로는 최적화된 모델들을 모델 리포지토리에 저장한다. 예를 들어, 예시적인 지능적 배치 회로는 최적화된 후보 모델에 의해 모니터링되는 공장 생산 라인에 대응하는 메타데이터와 함께 예시적인 모델 리포지토리에 임계값을 초과하여 수행하는 후보 모델을 저장할 수 있다. 최적화된 후보 모델은 저장되고 나중에 예시적인 자동화된 모델 검색 회로에 의해 선택될 수 있다. 예시 적인 명령어들은 종료된다. 도 8은 모델 프로세스 데이터 흐름도이다. 도 8의 예에서, 예시적인 지능적 트리거 회로, 예시적인 자동 화된 모델 검색 회로, 및 예시적인 지능적 배치 회로는, 예를 들어, 공장 환경에서 머신 러닝 모델들 의 개발 및/또는 배치를 자동화하도록 작동한다. 예를 들어, 머신 러닝 모델들은 도 1 내지 도 3과 관련하여 설명된 에지 인프라스트럭처와 같은 에지 인프라스트럭처에 배치될 수 있다. 인공 지능 모델들(예를 들어, 머 신 러닝 모델들)은 공장들 또는 다른 데이터 소스들(예를 들어, 산업 데이터 소스들, 상업 데이터 소스들 등)에 의해 생성된 데이터를 사용한다. 예를 들어, 공장들에서의 제조 프로세스들은 환경적 변화를 겪는다. 도 8의 예에서, 예시적인 지능적 트리거 회로는 현재 배치 모델, 예시적인 환경 데이터베이스로부터 의 메타데이터, 및 다른 예시적인 모델 업데이트 컨트롤러 회로에 의해 생성된 바와 같은 펠로 동일한 생 산 라인들에서 동작하는 모델들로부터의 출력 데이터에 액세스한다. 4개의 데이터 소스에 응답하여, 예시적인 지능적 트리거 회로는 업데이트 프로세스를 트리거한다. 예시적인 자동화된 모델 검색 회로는 후보 모델들(예를 들어, 후보 모델 1, 예시적인 후보 모델 2, 도시되지 않은 다른 후보 모델들, 및 예시적인 후보 모 델 n)을 생성한다. 예시적인 자동화된 모델 검색 회로는 후보 모델들을 생성하거나 인공 지능 모델 리포 지토리로부터 유사한 후보 모델들을 검색한다. 예시적인 지능적 배치 회로는 예시적인 자동화된 모 델 검색 회로로부터 수신된 모델들의 진화하는 앙상블(evolving ensemble of models)을 배치한다. 예시적 인 지능적 배치 회로는 시간이 경과함에 따라 배치된 모델의 거동 및 정확도를 모니터링하고, (예를 들어, 임계값에 따라) 열악한 성능의 모델들에 응답하여, 이상치 모델들을 제거하고 (예를 들어, 임계값에 따라) 더 나은 성능의 모델들을 저장할 수 있다. 일부 예들에서, 더 나은 성능의 모델들은 장래의 사용을 위해 라벨링되 고 세이브(save)된다. 진화하는 모델 앙상블은 프로세스가 반복될 때 배치 모델로서 사용될 수 있다. 도 9는 예시적인 지능적 배치 회로에 의해 수행되는 모니터링의 확장된 예이다. 본 예에서는, 공장에서 동일한 나사 구동 태스크를 수행하는 3개의 로봇(예를 들어, 로봇 A, 로봇 B, 및 로봇 C)이 있다. 도 9의 예에서, 각 각의 로봇은 나사 구동 프로세스가 불량이 있는지 또는 불량이 없는지를 예측하기 위해 3개의 모델 후보를 얻는 다. 예를 들어, 로봇 A는 모델 후보 A1, 모델 후보 A2, 및 모델 후보 A3을 얻는다. 각각의 로봇 상의 예시적 인 지능적 배치 회로는 모델 후보들로부터의 예측 결과들을 추적한다. 일부 예들에서, 모델 후보들 A1, A2, 및 A3은 장래의 사용을 위해 라벨링되고 세이브된다. 예를 들어, 라벨링된 모델 A1은 다음 후보 모델을 구축하기 위한 템플릿으로서 예시적인 인공 지능 모델 리포지토리(도 4 또는 도 8에 도시됨)에 저장될 수 있다. 3 개의 로봇으로부터의 평균 불량률은 1%이다. 따라서, 과반수 투표 알고리즘에서, 모델 A1은 로봇 A에 의해, 모 델 B3은 로봇 B에 의해, 그리고 모델 C1은 로봇 C에 의해 더 가중될 것이다. 모델 후보들의 진화하는 앙상블(각각의 모델 후보의 가중치는 시간 경과에 따라 변경됨)은 구 AI 모델을 대체하 기 위해 배치된 새로운 AI 모델이다. 앙상블은 하나의 모델로 보고, 나중에 앙상블이 업데이트될 필요가 있다 면, 다수의 세트들 대신에 하나의 새로운 세트의 모델 후보들이 생성될 것이다. 이러한 방식으로, 모델들에 필 요한 메모리 및 스토리지 공간이 감소될 수 있다. 앙상블은 더 약한 모델들을 개선시켜서 더 높은 성능 모델들 을 생성하는 것이며, 더 높은 성능 모델은 정확도와 같은 메트릭에 의해 측정될 수 있다. 예시적인 열은 모델 후보들을 나타내는 필드를 지칭한다. 예시적인 열(904, 906, 908, 910, 및 912)은 시 간 인스턴스에서의 모델 후보의 예측을 나타낸다. 예를 들어, 열은 제1 시간에서의 예측이다. 도 9의 예 에서, 예측은 \"ok\"(예를 들어, 오케이, 만족, 양호 등) 또는 \"nok\"(예를 들어, 오케이 아님, 불만족, 불량)이다. 예시적인 불량률(예를 들어, 열)은 나사 구동 조립 라인이 어떻게 에러를 생성하고 있는지에대한 예측이다. 예를 들어, 3%의 불량률은 제조 공정에서 약 3%의 결함이 있음을 의미한다. 예시적인 행은 모델 후보 A1을 지칭하고, 예시적인 행은 모델 후보 A2를 지칭하며, 예시적인 행(92 0)은 모델 후보 A3을 지칭한다. 로봇 A에 대한 평균 불량률(예를 들어, 과반수 투표 불량률)은 행에 의해 표현된다. 예시적인 행은 로봇 B에 대한 평균 불량률을 지칭하고, 예시적인 행은 로봇 C에 대한 평 균 불량률을 지칭한다. 행 내의 모델 후보 A1에 대한 제1 시간 인스턴스(예를 들어, 열)에서, 예측은 나사 구동 조립 라인에 대한 \"nok\"(예를 들어, 오케이 아님)이다. 그러나, 제2 시간 인스턴스(예를 들어, 열)에서와 같이 더 많 은 시간이 경과함에 따라, 예측은 나사 구동 조립 라인에 대해 \"ok\"(예를 들어, 오케이)이다. 더 많은 시간이 경과함에 따라, 예측은 나사 구동 조립 라인에 대해 .9%의 불량률(예를 들어, 열)로 안정화된다. 행(91 8)의 제2 모델 후보 A2는 나사 구동 조립 라인의 불량률을 3%로서 예측하고, 행의 제3 모델 후보 A3은 나 사 구동 조립 라인의 불량률을 .4%로서 예측한다. 대응하는 나사 구동 조립 라인의 불량률의 평균에 따르면, 진정한(예를 들어, 정확한, 신뢰성 있는, 합의된) 불량률은 약 1%이다. 로봇 B는 행에 도시된 바와 같이 1.2%의 불량률을 예측하고, 로봇 C는 행에 도시된 바와 같이 .8%의 불량률을 예측한다. 로봇 A는 로봇 B 및 로봇 C로부터의 불량률 예측을 사용하여, 나사 구동 조립 라인의 불량률을 .4%로 예측하는 이상치 모델 A3 및 나사 구동 조립 라인의 불량률을 3%로 예측하는 이상치 모델 A2를 제거한다. 모델 A3은 진정한 양성률보다 더 낮은 양성률을 예측하고 있고, 공장은 모델 A3이 예측한 것보다 더 많은 에러를 생성하고 있다. 모델 A2는 진정한 양성률보다 더 높은 양성률을 예측하고 있고, 공장은 모델 A2가 예측한 것보다 더 적은 에러를 생성하고 있다. 각각의 모델(예를 들어, A2 또는 A3)은 비효율적이다. 도 9의 예에서, .9% 불량률을 생성하는 모델 A1 은 도 4의 인공 지능 모델 리포지토리에 저장된다. 동일한 태스크를 수행하는 다수의 상이한 로봇들의 후보 모델들로부터의 예측들의 예. 불량률은 각각의 모델 후보에 대해 특정 기간에 걸쳐 측정된다. 각각의 로봇에 대한 각각의 시간 단계에서의 과반수 투표 결과는 각 각의 로봇에 대한 각각의 시간 단계에서의 예측 결과로서 예시적인 지능적 배치 회로에 의해 사용된다. 3개의 로봇은 다른 로봇들과 통신하고 전역적 변경이 3개의 로봇에 대한 모델 업데이트 프로세스를 트리거한 후에 태 스크에 대한 평균 불량률(이 예에서는 1%)을 결정한다. 이어서, 개별 로봇들 상의 예시적인 지능적 배치 회로 는 새로운 전역적 평균 불량률과 더 잘 매칭되는 모델 후보에 점차 더 많은 가중치를 부여할 것이다. 일부 예들에서, 도 9는 예시적인 관리 콘솔(예를 들어, 시각 디스플레이, 모니터링 스테이션, 계기판, 대시보드 등)이며, 여기서 인간과 같은 생물학적 엔티티가 모델들의 진화하는 앙상블을 추적할 수 있다. 예를 들어, 인 간(엔지니어, 작업자, 감독, 데이터 과학자 등)은 모델들의 성능을 추적하고 인간에 의해 이루어진 결정에 응답 하여 개입(예를 들어, 모델을 조정)할 수 있다. 이러한 예들에서, 모델의 상이한 특성들(예를 들어, 구성들)이 사람에게 디스플레이될 수 있다. 일부 예들에서, 모델의 상이한 특성들(예를 들어, 구성들)이 인간에게 디스플 레이될 수 있다. 일부 예들에서, 머신 러닝 알고리즘은 인간으로부터의 개입 없이 모델들의 성능을 자동으로 추적하는 것이다. 예시적인 관리 콘솔은 국부적으로(예를 들어, 공장에서) 또는 원격으로(예를 들어, 데이터 처리 센터에서) 가시적일 수 있다. 일부 예들에서, 예시적인 관리 콘솔은 도 10a 및 도 10b에 설명된 바와 같 이 IoT 디바이스(예를 들어, 무선 셀폰, 독립형 어플라이언스 등)에 의해 구현될 수 있다. 일부 예들에서, 후보 모델들은 프로파일 구성될 수 있어, 제1 공장이 후보 모델들을 사용하는 한편 상이한 프로 파일을 가질 수 있는 제2 공장이 모델들을 수정(tweak)할 수 있다. 추가의 예들에서, 본 에지 컴퓨팅 시스템들 및 환경을 참조하여 논의된 컴퓨트 노드들 또는 디바이스들 중 임의 의 것이 도 10a 및 도 10b에 묘사된 컴포넌트들에 기초하여 실현될 수 있다. 각자의 에지 컴퓨트 노드들은 다 른 에지, 네트워킹, 또는 엔드포인트 컴포넌트들과 통신이 가능한 타입의 디바이스, 어플라이언스, 컴퓨터, 또 는 다른 \"사물\"로서 구현될 수 있다. 예를 들어, 에지 컴퓨트 디바이스는 설명된 기능들을 수행할 수 있는 개 인용 컴퓨터, 서버, 스마트폰, 모바일 컴퓨트 디바이스, 스마트 어플라이언스, 차량내 컴퓨트 시스템(예를 들어, 내비게이션 시스템), 외부 케이스, 쉘 등을 갖는 자립형 디바이스, 또는 다른 디바이스 또는 시스템으로 서 구현될 수 있다. 도 10a에 묘사된 단순화된 예에서, 에지 컴퓨트 노드는 컴퓨트 엔진(본 명세서에서 \"컴퓨트 회로\"라고도 지칭됨), 입력/출력(I/O) 서브시스템, 데이터 스토리지, 통신 회로 서브시스템, 및, 선택적으로, 하나 이상의 주변 디바이스를 포함한다. 다른 예들에서, 각자의 컴퓨트 디바이스들은 컴퓨 터에서 전형적으로 발견되는 것들(예를 들어, 디스플레이, 주변 디바이스들 등)과 같은 다른 또는 추가적인 컴 포넌트들을 포함할 수 있다. 추가적으로, 일부 예들에서, 예시적인 컴포넌트들 중 하나 이상은 다른 컴포넌트에 통합되거나, 달리 다른 컴포넌트의 일부를 형성할 수 있다. 컴퓨트 노드는 다양한 컴퓨트 기능들을 수행할 수 있는 임의의 타입의 엔진, 디바이스, 또는 디바이스들 의 컬렉션으로서 구현될 수 있다. 일부 예들에서, 컴퓨트 노드는 집적 회로, 내장형 시스템, FPGA(field-programmable gate array), SOC(system-on-a-chip), 또는 다른 통합 시스템 또는 디바이스와 같은 단일 디바이스로서 구현될 수 있다. 예시적인 예에서, 컴퓨트 노드는 프로세서 및 메모리를 포함하거나 프로세서 및 메모리로서 구현된다. 프로세서는 본 명세서에서 설명된 기능들을 수행(예를 들어, 애플리케이션을 실행)할 수 있는 임의의 타입의 프로세서로서 구현될 수 있다. 예를 들어, 프 로세서는 멀티 코어 프로세서(들), 마이크로컨트롤러, 처리 유닛, 특수화된 또는 특수 목적 처리 유닛, 또는 다른 프로세서 또는 처리/제어 회로로서 구현될 수 있다. 일부 예들에서, 프로세서는 FPGA, ASIC(application specific integrated circuit), 재구성가능 하드웨 어 또는 하드웨어 회로, 또는 본 명세서에서 설명된 기능들의 수행을 용이하게 하는 다른 특수화된 하드웨어로 서 구현되거나, 이를 포함하거나, 이에 결합될 수 있다. 또한 일부 예들에서, 프로세서는 데이터 처리 유닛(DPU), 인프라스트럭처 처리 유닛(IPU), 또는 네트워크 처리 유닛(NPU)이라고도 알려진 특수화된 x-처리 유 닛(xPU)으로서 구현될 수 있다. 이러한 xPU는 독립형 회로 또는 회로 패키지로서 구현되거나, SOC 내에 통합되 거나, 네트워킹 회로(예를 들어, SmartNIC, 또는 향상된 SmartNIC 내의), 가속 회로, 스토리지 디바이스들, 또 는 AI 하드웨어(예를 들어, GPU들 또는 프로그래밍된 FPGA들)와 통합될 수 있다. 이러한 xPU는 CPU 또는 범용 처리 하드웨어 외부에서 하나 이상의 데이터 스트림을 처리하고 데이터 스트림들에 대한 특정 태스크들 및 액션 들(예컨대 마이크로서비스들(microservices)을 호스팅하는 것, 서비스 관리 또는 오케스트레이션을 수행하는 것, 서버 또는 데이터 센터 하드웨어를 조직 또는 관리하는 것, 서비스 메시들을 관리하는 것, 또는 원격측정 (telemetry)을 수집 및 배포하는 것)을 수행하기 위한 프로그래밍을 수신하도록 설계될 수 있다. 그러나, 프로 세서의 xPU, SOC, CPU, 및 다른 변형들이 컴퓨트 노드 내에서 그리고 그를 대신하여 많은 타입의 연산들 및 명령어들을 실행하기 위해 서로 협력하여 작업할 수 있다는 것이 이해될 것이다. 메모리는 본 명세서에서 설명된 기능들을 수행할 수 있는 임의의 타입의 휘발성(예를 들어, DRAM(dynamic random access memory) 등) 또는 비휘발성 메모리 또는 데이터 스토리지로서 구현될 수 있다. 휘발성 메모리는 매체에 의해 저장된 데이터의 상태를 유지하기 위해 전력을 요구하는 저장 매체일 수 있다. 휘발성 메모리의 비제한적인 예들은 다양한 타입의 RAM(random access memory), 예컨대 DRAM 또는 SRAM(static random access memory)을 포함할 수 있다. 메모리 모듈에서 사용될 수 있는 하나의 특정 타입의 DRAM은 SDRAM(synchronous dynamic random access memory)이다. 일 예에서, 메모리 디바이스는 NAND 또는 NOR 기술들에 기초한 것들과 같은 블록 어드레싱가능 메모리 디바이스 (block addressable memory device)이다. 메모리 디바이스는 3차원 크로스포인트 메모리 디바이스(예를 들어, Intel® 3D XPoint™ 메모리), 또는 다른 바이트 어드레싱가능 라이트-인-플레이스 비휘발성 메모리 디바이스 (byte addressable write-in-place nonvolatile memory device)들을 또한 포함할 수 있다. 메모리 디바이스는 다이 자체 및/또는 패키징된 메모리 제품을 지칭할 수 있다. 일부 예들에서, 3D 크로스포인트 메모리(예를 들 어, Intel® 3D XPoint™ 메모리)는 메모리 셀들이 워드 라인들과 비트 라인들의 교차점에 놓이고 개별적으로 어드레싱가능하며 비트 저장이 벌크 저항(bulk resistance)의 변화에 기초하는 트랜지스터가 없는 적층가능한 크로스 포인트 아키텍처(transistor-less stackable cross point architecture)를 포함할 수 있다. 일부 예들 에서, 메모리의 전부 또는 일부는 프로세서에 통합될 수 있다. 메모리는 하나 이상의 애플 리케이션, 애플리케이션(들)에 의해 조작되는 데이터, 라이브러리들, 및 드라이버들과 같은 동작 중에 사용되는 다양한 소프트웨어 및 데이터를 저장할 수 있다. 컴퓨트 회로는 컴퓨트 회로와의(예를 들어, 프로세서 및/또는 메인 메모리와의) 입력/ 출력 동작들 및 컴퓨트 회로의 다른 컴포넌트들을 용이하게 하는 회로 및/또는 컴포넌트들로서 구현될 수 있는 I/O 서브시스템을 통해 컴퓨트 노드의 다른 컴포넌트들에 통신가능하게 결합된다. 예를 들어, I/O 서브시스템은 입력/출력 동작들을 용이하게 하기 위한 메모리 컨트롤러 허브들, 입력/출력 제 어 허브들, 통합된 센서 허브들, 펌웨어 디바이스들, 통신 링크들(예를 들어, 포인트-투-포인트 링크들, 버스 링크들, 와이어들, 케이블들, 도광체들(light guides), 인쇄 회로 보드 트레이스들 등) 및/또는 다른 컴포넌트 들 및 서브시스템들로서 구현되거나 그렇지 않으면 이들을 포함할 수 있다. 일부 예들에서, I/O 서브시스템 은 SoC(system-on-a-chip)의 일부를 형성할 수 있고, 컴퓨트 회로의 프로세서, 메모리 , 및 다른 컴포넌트들 중 하나 이상과 함께 컴퓨트 회로에 통합될 수 있다.하나 이상의 예시적인 데이터 스토리지 디바이스는, 예를 들어, 메모리 디바이스들 및 회로들, 메모리 카 드들, 하드 디스크 드라이브들, 고체 상태 드라이브들, 또는 다른 데이터 스토리지 디바이스들과 같은, 데이터 의 단기간 또는 장기간 저장을 위해 구성된 임의의 타입의 디바이스들로서 구현될 수 있다. 개별 데이터 스토 리지 디바이스들은 데이터 스토리지 디바이스에 대한 데이터 및 펌웨어 코드를 저장하는 시스템 파 티션(system partition)을 포함할 수 있다. 개별 데이터 스토리지 디바이스들은 또한, 예를 들어, 컴퓨 트 노드의 타입에 따라 운영 체제들을 위한 데이터 파일들 및 실행파일들을 저장하는 하나 이상의 운영 체제 파티션(operating system partition)을 포함할 수 있다. 통신 회로는 컴퓨트 회로와 다른 컴퓨트 디바이스(예를 들어, 구현 에지 컴퓨팅 시스템의 에지 게 이트웨이) 사이에 네트워크를 통한 통신을 가능하게 할 수 있는 임의의 통신 회로, 디바이스, 또는 이들의 컬렉 션으로서 구현될 수 있다. 통신 회로는 이러한 통신을 달성하기 위해 임의의 하나 이상의 통신 기술(예 를 들어, 유선 또는 무선 통신) 및 연관된 프로토콜들(예를 들어, 3GPP 4G 또는 5G 표준과 같은 셀룰러 네트워 킹 프로토콜, IEEE 802.11/Wi-Fi®와 같은 무선 로컬 영역 네트워크 프로토콜, 무선 광역 네트워크 프로토콜, 이더넷, Bluetooth®, Bluetooth Low Energy, IEEE 802.15.4 또는 ZigBee®와 같은 IoT 프로토콜, LPWAN(low- power wide-area network) 또는 LPWA(low-power wide-area) 프로토콜 등)을 사용하도록 구성될 수 있다. 예시적인 통신 회로는 호스트 패브릭 인터페이스(host fabric interface, HFI)로도 지칭될 수 있는 네트 워크 인터페이스 컨트롤러(network interface controller, NIC)를 포함한다. NIC는 다른 컴퓨트 디바이스(예를 들어, 에지 게이트웨이 노드)와 접속하기 위해 컴퓨트 노드에 의해 사용될 수 있는 하나 이상의 애드-인-보드(add-in-board), 도터 카드(daughter card), 네트워크 인터페이스 카드, 컨트롤러 칩, 칩셋, 또는 다른 디바이스들로서 구현될 수 있다. 일부 예들에서, NIC는 하나 이상의 프로세서를 포함하 는 SoC(system-on-a-chip)의 일부로서 구현되거나, 또는 하나 이상의 프로세서를 또한 포함하는 멀티칩 패키지 상에 포함될 수 있다. 일부 예들에서, NIC는 둘 다 NIC에 대해 로컬인 로컬 프로세서(도시되지 않 음) 및/또는 로컬 메모리(도시되지 않음)를 포함할 수 있다. 이러한 예들에서, NIC의 로컬 프로세서는 본 명세서에 설명된 컴퓨트 회로의 기능들 중 하나 이상을 수행할 수 있다. 추가적으로 또는 대안적으로, 이러한 예들에서, NIC의 로컬 메모리는 보드 레벨, 소켓 레벨, 칩 레벨, 및/또는 다른 레벨 들에서 클라이언트 컴퓨트 노드의 하나 이상의 컴포넌트에 통합될 수 있다. 또한, 일부 예들에서, 각자의 컴퓨트 노드는 하나 이상의 주변 디바이스를 포함할 수 있다. 이러 한 주변 디바이스들은, 컴퓨트 노드의 특정 타입에 따라, 컴퓨트 디바이스 또는 서버에서 발견되는 임의의 타입의 주변 디바이스, 예컨대 오디오 입력 디바이스들, 디스플레이, 다른 입력/출력 디바이스들, 인터 페이스 디바이스들, 및/또는 다른 주변 디바이스들을 포함할 수 있다. 추가 예들에서, 컴퓨트 노드는 에 지 컴퓨팅 시스템 또는 유사한 형태의 어플라이언스들, 컴퓨터들, 서브시스템들, 회로, 또는 다른 컴포넌트들 내의 각자의 에지 컴퓨트 노드(클라이언트이든, 게이트웨이이든, 또는 집성 노드이든)에 의해 구현될 수 있다. 보다 상세한 예에서, 도 10b는 본 명세서에서 설명된 기법들(예를 들어, 동작들, 프로세스들, 방법들, 및 방법 론들)을 구현하기 위해 에지 컴퓨팅 노드에 존재할 수 있는 컴포넌트들의 예의 블록도를 예시한다. 이 에지 컴퓨팅 노드는 컴퓨팅 디바이스로서 또는 그의 일부로서(예를 들어, 모바일 디바이스, 기지국, 서버, 게이트웨이 등으로서) 구현될 때 노드의 각자의 컴포넌트들의 보다 근접한 뷰를 제공한다. 에지 컴퓨팅 노드는 본 명세서에서 언급된 하드웨어 또는 논리 컴포넌트들의 임의의 조합들을 포함할 수 있고, 그것은 에지 통신 네트워크 또는 이러한 네트워크들의 조합과 함께 사용가능한 임의의 디바이스를 포함하거나 이와 결합할 수 있다. 컴포넌트들은 에지 컴퓨팅 노드에 적응된 집적 회로(IC)들, 그의 부분들, 개별 전 자 디바이스들, 또는 다른 모듈들, 명령어 세트들, 프로그램가능 로직 또는 알고리즘들, 하드웨어, 하드웨어 가 속기들, 소프트웨어, 펌웨어, 또는 이들의 조합으로서, 또는 더 큰 시스템의 섀시 내에 달리 통합된 컴포넌트들 로서 구현될 수 있다. 에지 컴퓨팅 디바이스는 마이크로프로세서, 멀티 코어 프로세서, 멀티스레드형 프로세서(multithreaded processor), 초저전압 프로세서, 임베디드 프로세서, xPU/DPU/IPU/NPU, 특수 목적 처리 유닛, 특수화 처리 유닛, 또는 다른 알려진 처리 요소들일 수 있는, 프로세서의 형태의 처리 회로를 포함할 수 있다. 프로 세서는 프로세서 및 다른 컴포넌트들이 단일 집적 회로, 또는 단일 패키지, 예컨대 캘리포니아주 산타 클라라의 Intel Corporation으로부터의 Edison™ 또는 Galileo™ SoC 보드들 내에 형성되는 SoC(system on a chip)의 일부일 수 있다. 예로서, 프로세서는 Quark™, Atom™, i3, i5, i7, i9, 또는 MCU-클래스 프로세서와 같은, Intel® Architecture Core™ 기반 CPU 프로세서, 또는 Intel®로부터 입수가능한 다른 이러 한 프로세서를 포함할 수 있다. 그러나, 캘리포니아주 서니베일의 Advanced Micro Devices, Inc.(AMD®)로부터입수가능한 것, 캘리포니아주 서니베일의 MIPS Technologies, Inc.로부터의 MIPS® 기반 설계, ARM Holdings, Ltd. 또는 그의 고객, 또는 그들의 면허권자들 또는 사용권자들로부터 라이센싱된 ARM® 기반 설계와 같은, 임 의의 수의 다른 프로세서들이 사용될 수 있다. 프로세서들은 Apple® Inc.로부터의 A5-A13 프로세서, Qualcomm ® Technologies, Inc.로부터의 Snapdragon™ 프로세서, 또는 Texas Instruments, Inc.로부터의 OMAP™ 프로세 서와 같은 유닛들을 포함할 수 있다. 프로세서 및 수반되는 회로는 단일 소켓 폼 팩터, 다중 소켓 폼 팩 터, 또는 제한된 하드웨어 구성들 또는 도 10b에 도시된 모든 요소들보다 적은 요소를 포함하는 구성들을 포함 하는 다양한 다른 포맷들로 제공될 수 있다. 프로세서는 인터커넥트(예를 들어, 버스)를 통해 시스템 메모리와 통신할 수 있다. 임의의 수의 메모리 디바이스들이 주어진 양의 시스템 메모리를 제공하기 위해 사용될 수 있다. 예들로서, 메모리 는 DDR 또는 모바일 DDR 표준들(예를 들어, LPDDR, LPDDR2, LPDDR3, 또는 LPDDR4)과 같은 JEDEC(Joint Electron Devices Engineering Council) 설계에 따른 RAM(random access memory)일 수 있다. 특정 예들에서, 메모리 컴포넌트는 JEDEC에 의해 널리 공표된 DRAM 표준, 예컨대 DDR SDRAM에 대한 JESD79F, DDR2 SDRAM에 대 한 JESD79-2F, DDR3 SDRAM에 대한 JESD79-3F, DDR4 SDRAM에 대한 JESD79-4A, LPDDR(Low Power DDR)에 대한 JESD209, LPDDR2에 대한 JESD209-2, LPDDR3에 대한 JESD209-3, 및 LPDDR4에 대한 JESD209-4를 준수할 수 있다. 이러한 표준들(및 유사한 표준들)은 DDR 기반 표준들로 지칭될 수 있고 이러한 표준들을 구현하는 스토리지 디 바이스들의 통신 인터페이스들은 DDR 기반 인터페이스들로 지칭될 수 있다. 다양한 구현들에서, 개별 메모리 디바이스들은 단일 다이 패키지(single die package, SDP), 듀얼 다이 패키지(dual die package, DDP) 또는 쿼 드 다이 패키지(quad die package, Q17P)와 같은 임의의 수의 상이한 패키지 타입들일 수 있다. 이들 디바이스 는, 일부 예들에서, 더 낮은 프로파일 솔루션을 제공하기 위해 마더보드 상에 직접 솔더링될 수 있는 반면, 다 른 예들에서 디바이스들은 주어진 커넥터에 의해 마더보드에 차례로 결합되는 하나 이상의 메모리 모듈로서 구 성된다. 다른 타입들의 메모리 모듈들, 예를 들어, microDIMM들 또는 MiniDIMM들을 포함하지만 이에 제한되지 않는 상이한 종류의 DIMM(dual inline memory module)들과 같은, 임의의 수의 다른 메모리 구현들이 사용될 수 있다. 데이터, 애플리케이션들, 운영 체제들 등과 같은 정보의 지속적 저장을 제공하기 위해, 스토리지는 또한 인터커넥트를 통해 프로세서에 결합될 수 있다. 일 예에서, 스토리지는 고체 상태 디스크 드라이브(solid-state disk drive, SSDD)를 통해 구현될 수 있다. 스토리지에 사용될 수 있는 다른 디 바이스들은 SD(Secure Digital) 카드들, microSD 카드들, XD(eXtreme Digital) 픽처 카드들 등과 같은 플래시 메모리 카드들, 및 USB(Universal Serial Bus) 플래시 드라이브들을 포함한다. 일 예에서, 메모리 디바이스는 칼코게나이드 유리를 사용하는 메모리 디바이스들, 멀티-임계 레벨(multi-threshold level) NAND 플래시 메모리, NOR 플래시 메모리, 단일 또는 멀티-레벨 PCM(Phase Change Memory), 저항성 메모리, 나노와이어 메모 리, FeTRAM(ferroelectric transistor random access memory), 반강유전성 메모리(anti-ferroelectric memory), 멤리스터 기술을 통합하는 MRAM(magnetoresistive random access memory) 메모리, 금속 산화물 베이 스, 산소 공공(oxygen vacancy) 베이스 및 CB-RAM(conductive bridge Random Access Memory)을 포함하는 저항 성 메모리, 또는 스핀 전달 토크(STT)-MRAM, 스핀트로닉 자기 접합 메모리 기반 디바이스, MTJ(magnetic tunneling junction) 기반 디바이스, DW(Domain Wall) 및 SOT(Spin Orbit Transfer) 기반 디바이스, 사이리스 터 기반 메모리 디바이스, 또는 상기한 것들 중 임의의 것의 조합, 또는 다른 메모리일 수 있거나 이를 포함할 수 있다. 저전력 구현들에서, 스토리지는 프로세서와 연관된 온-다이 메모리 또는 레지스터들일 수 있다. 그러나, 일부 예들에서, 스토리지는 마이크로 하드 디스크 드라이브(HDD)를 사용하여 구현될 수 있다. 게다가, 그 중에서도, 저항 변화 메모리들, 상 변화 메모리들, 홀로그래픽 메모리들, 또는 화학적 메모리들과 같은, 임의의 수의 신기술들이 설명된 기술들에 부가하여 또는 그 대신에 스토리지로 사용될 수 있다. 컴포넌트들은 인터커넥트를 통해 통신할 수 있다. 인터커넥트는 ISA(industry standard architecture), EISA(extended ISA), PCI(peripheral component interconnect), PCIx(peripheral component interconnect extended), PCIe(PCI express), 또는 임의의 수의 다른 기술들을 포함한 임의의 수의 기술들을 포함할 수 있다. 인터커넥트는, 예를 들어, SoC 기반 시스템에서 사용되는 독점 버스일 수 있다. 그 중 에서도, I2C(Inter-Integrated Circuit) 인터페이스, SPI(Serial Peripheral Interface) 인터페이스, 포인트 투 포인트 인터페이스들, 및 전력 버스와 같은, 다른 버스 시스템들이 포함될 수 있다. 인터커넥트는 접속된 에지 디바이스들과의 통신을 위해, 프로세서를 송수신기에 결합 할 수 있다. 송수신기는, 그 중에서도, Bluetooth® Special Interest Group에 의해 정의된 바와 같은BLE(Bluetooth® low energy) 표준, 또는 ZigBee® 표준을 사용하여, IEEE 802.15.4 표준 하에서 2.4 기가헤르 츠(GHz) 송신들과 같은 임의의 수의 주파수들 및 프로토콜들을 사용할 수 있다. 특정 무선 통신 프로토콜을 위 해 구성된 임의의 수의 라디오들이 접속된 에지 디바이스들에 대한 접속들을 위해 사용될 수 있다. 예를 들어, WLAN(wireless local area network) 유닛은 IEEE(Institute of Electrical and Electronics Engineers) 802.11 표준에 따라 Wi-Fi® 통신을 구현하는 데 사용될 수 있다. 또한, 예를 들어, 셀룰러 또는 다른 무선 광 역 프로토콜에 따른 무선 광역 통신이 무선 광역 네트워크(WWAN) 유닛을 통해 발생할 수 있다. 무선 네트워크 송수신기(또는 다수의 송수신기들)는 상이한 범위에서의 통신을 위해 다수의 표준들 또는 라디오들을 사용하여 통신할 수 있다. 예를 들어, 에지 컴퓨팅 노드는 전력을 절약하기 위해, BLE(Bluetooth Low Energy)에 기초한 로컬 송수신기, 또는 다른 저전력 라디오를 사용하여, 예를 들어, 약 10 미터 내의 가까운 디바이스들과 통신할 수 있다. 예를 들어, 약 50 미터 내의, 더 멀리 있는 접속된 에지 디바 이스들은 ZigBee® 또는 다른 중간 전력 라디오들을 통해 도달될 수 있다. 두 통신 기법들은 상이한 전 력 레벨들에서 단일 라디오를 통해 발생할 수 있거나, 별개의 송수신기들을 통해, 예를 들어, BLE를 사용하는 로컬 송수신기 및 ZigBee®를 사용하는 별개의 메시 송수신기를 통해 발생할 수 있다. 로컬 또는 광역 네트워크 프로토콜들을 통해 클라우드(예를 들어, 에지 클라우드) 내의 디바이스들 또는 서비스들과 통신하기 위해 무선 네트워크 송수신기(예를 들어, 라디오 송수신기)가 포함될 수 있다. 무 선 네트워크 송수신기는, 그 중에서도, IEEE 802.15.4, 또는 IEEE 802.15.4g 표준들을 따르는 LPWA(low- power wide-area) 송수신기일 수 있다. 에지 컴퓨팅 노드는 Semtech 및 LoRa Alliance에 의해 개발된 LoRaWAN™ (Long Range Wide Area Network)을 사용하여 광역에 걸쳐 통신할 수 있다. 본 명세서에서 설명된 기법들은 이들 기술로 제한되지 않고, Sigfox, 및 다른 기술들과 같은 장거리, 낮은 대역폭 통신들을 구현하는 임의의 수의 다른 클라우드 송수신기들과 함께 사용될 수 있다. 게다가, IEEE 802.15.4e 사양에 설명된, 시간 슬롯 채널 호핑(time-slotted channel hopping)과 같은 다른 통신 기법들이 사용될 수 있다. 본 명세서에서 설명된 바와 같이, 무선 네트워크 송수신기에 대해 언급된 시스템들에 더하여 임의의 수의 다른 라디오 통신들 및 프로토콜들이 사용될 수 있다. 예를 들어, 송수신기는 고속 통신을 구현하기 위 해 확산 스펙트럼(SPA/SAS) 통신을 사용하는 셀룰러 송수신기를 포함할 수 있다. 또한, 네트워크 통신의 제공 및 중속 통신을 위해 Wi-Fi® 네트워크들과 같은 임의의 수의 다른 프로토콜들이 사용될 수 있다. 송수신기 는 본 개시내용의 끝에 추가로 상세하게 논의되는, LTE(Long Term Evolution) 및 5세대(5G) 통신 시스템 들과 같은, 임의의 수의 3GPP(Third Generation Partnership Project) 사양들과 호환가능한 라디오들을 포함할 수 있다. 네트워크 인터페이스 컨트롤러(NIC)는 에지 클라우드의 노드들에 또는 (예를 들어, 메시 에서 동작하는) 접속된 에지 디바이스들과 같은 다른 디바이스들에 유선 통신을 제공하기 위해 포함될 수 있다. 유선 통신은 이더넷 접속을 제공할 수 있거나, 많은 것들 중에서도 특히, CAN(Controller Area Network), LIN(Local Interconnect Network), DeviceNet, ControlNet, Data Highway+, PROFIBUS, 또는 PROFINET와 같은 다른 타입들의 네트워크들에 기초할 수 있다. 추가적인 NIC, 예를 들어, 이더넷을 통해 클라우드에 통신을 제공하는 제1 NIC 및 다른 타입의 네트워크를 통해 다른 디바이스들에 통신을 제공하 는 제2 NIC가 제2 네트워크에 대한 접속을 가능하게 하기 위해 포함될 수 있다. 디바이스로부터 다른 컴포넌트 또는 네트워크로의 다양한 타입의 적용가능한 통신이 주어지면, 디바이스에 의해 사용되는 적용가능한 통신 회로는 컴포넌트들(1064, 1066, 1068, 또는 1070) 중 임의의 하나 이상을 포함하거나 그에 의해 구현될 수 있다. 따라서, 다양한 예들에서, 통신(예를 들어, 수신, 송신 등)을 위한 적용가능한 수 단은 이러한 통신 회로에 의해 구현될 수 있다. 에지 컴퓨팅 노드는 하나 이상의 인공 지능(AI) 가속기, 뉴럴 컴퓨트 스틱(neural compute stick), 뉴로 모픽 하드웨어(neuromorphic hardware), FPGA, GPU들의 배열, xPU들/DPU들/IPU/NPU들의 배열, 하나 이상의 SoC, 하나 이상의 CPU, 하나 이상의 디지털 신호 프로세서, 전용 ASIC, 또는 하나 이상의 특수화 태스크를 달성 하도록 설계된 다른 형태의 특수화 프로세서들 또는 회로에 의해 구현될 수 있는 가속 회로를 포함하거나 이에 결합될 수 있다. 이들 태스크는 AI 처리(머신 러닝, 트레이닝, 추론, 및 분류 동작들을 포함함), 시각 데 이터 처리, 네트워크 데이터 처리, 객체 검출, 규칙 분석 등을 포함할 수 있다. 이들 태스크는 또한 본 문헌의 다른 곳에서 논의된 서비스 관리 및 서비스 동작들을 위한 특정 에지 컴퓨팅 태스크들을 포함할 수 있다. 인터커넥트는 프로세서를 부가적인 디바이스들 또는 서브시스템들을 접속시키는 데 사용되는 센서 허브 또는 외부 인터페이스에 결합시킬 수 있다. 디바이스들은 가속도계들, 레벨 센서들, 흐름 센서들, 광학 광 센서들, 카메라 센서들, 온도 센서들, 글로벌 내비게이션 시스템(예를 들어, GPS) 센서들, 압력센서들, 기압 센서들 등과 같은 센서들을 포함할 수 있다. 허브 또는 인터페이스는 전력 스위치들, 밸브 액추에이터들, 가청 사운드 생성기, 시각적 경고 디바이스 등과 같은 액추에이터들에 에 지 컴퓨팅 노드를 접속하기 위해 추가로 사용될 수 있다. 일부 옵션적 예들에서, 다양한 입력/출력(I/O) 디바이스들이 에지 컴퓨팅 노드 내에 존재하거나 그에 접 속될 수 있다. 예를 들어, 센서 판독치 또는 액추에이터 위치와 같은 정보를 보여주기 위해 디스플레이 또는 다른 출력 디바이스가 포함될 수 있다. 터치 스크린 또는 키패드와 같은 입력 디바이스가 입력을 수용하기 위해 포함될 수 있다. 출력 디바이스는, 이진 상태 지시기들(예를 들어, 발광 다이오드(LED)들) 및 다중 문자 시각적 출력들과 같은 단순한 시각적 출력들, 또는 디스플레이 스크린들(예를 들어, 액정 디스플레이(LCD) 스크린들)과 같은 더 복잡한 출력들을 포함하는 임의의 수의 형태의 오디오 또는 시각적 디스플레이를 포함할 수 있고, 문자들, 그래픽들, 멀티미디어 객체들 등의 출력이 에지 컴퓨팅 노드 의 동작으로부터 발생되거나 생성된다. 디스플레이 또는 콘솔 하드웨어는, 본 시스템의 맥락에서, 에지 컴퓨팅 시스템의 출력을 제공하고 그의 입력을 수신하거나; 에지 컴퓨팅 시스템의 컴포넌트들 또는 서비스들을 관리하거나; 에지 컴퓨팅 컴포넌트 또는 서비스의 상태를 식별하거나; 또는 임의의 다른 수의 관리 또는 운영 기능들 또는 서비스 사용 사례들을 수행하는 데 사용될 수 있다. 배터리는 에지 컴퓨팅 노드에 전력을 공급할 수 있지만, 에지 컴퓨팅 노드가 고정된 위치에 장착되는 예들에서, 배터리는 전기 그리드에 결합된 전원을 가질 수 있거나, 배터리는 백업으로서 또는 임시 능 력들을 위해 사용될 수 있다. 배터리는 리튬 이온 배터리, 또는, 아연-공기 배터리, 알루미늄-공기 배터 리, 리튬-공기 배터리 등과 같은, 금속-공기 배터리일 수 있다. 배터리 모니터/충전기는, 포함된 경우, 배터리의 충전 상태(state of charge, SoCh)를 추적하기 위해 에지 컴퓨팅 노드에 포함될 수 있다. 배터리 모니터/충전기는 배터리의 건강 상태 (state of health, SoH) 및 기능 상태(state of function, SoF)와 같은 고장 예측들을 제공하기 위해 배터리 의 다른 파라미터들을 모니터링하는 데 사용될 수 있다. 배터리 모니터/충전기는 Linear Technologies로부터의 LTC4020 또는 LTC2990, Phoenix Arizona의 ON Semiconductor로부터의 ADT7488A, 또는 텍 사스주 달라스의 Texas Instruments로부터의 UCD90xxx 제품군의 IC와 같은 배터리 모니터링 집적 회로를 포함할 수 있다. 배터리 모니터/충전기는 배터리에 관한 정보를 인터커넥트를 통해 프로세서(105 2)에 통신할 수 있다. 배터리 모니터/충전기는 또한 프로세서가 배터리의 전압 또는 배터리 로부터의 전류 흐름을 직접 모니터링할 수 있게 하는 아날로그-대-디지털(ADC) 컨버터를 포함할 수 있다. 배터리 파라미터들은 송신 주파수, 메시 네트워크 동작, 감지 주파수 등과 같은, 에지 컴퓨팅 노드가 수 행할 수 있는 액션들을 결정하기 위해 사용될 수 있다. 전력 블록, 또는 그리드에 결합된 다른 전원이 배터리를 충전하기 위해 배터리 모니터/충전기 와 결합될 수 있다. 일부 예들에서, 전력 블록은, 예를 들어, 에지 컴퓨팅 노드 내의 루프 안테나를 통해 무선으로 전력을 획득하기 위해 무선 전력 수신기로 대체될 수 있다. 그 중에서도, 캘리포니아 주 밀피타스의 Linear Technologies로부터의 LTC4020 칩과 같은, 무선 배터리 충전 회로가 배터리 모니터/충전 기에 포함될 수 있다. 특정 충전 회로들은 배터리의 크기, 및 따라서 요구되는 전류에 기초하여 선택될 수 있다. 충전은, 그 중에서도, Airfuel Alliance에 의해 공표된 Airfuel 표준, Wireless Power Consortium에 의해 공표된 Qi 무선 충전 표준, 또는 Alliance for Wireless Power에 의해 공표된 Rezence 충전 표준을 사용하여 수행될 수 있다. 스토리지는 본 명세서에 설명된 기법들을 구현하기 위한 소프트웨어, 펌웨어, 또는 하드웨어 커맨드들의 형태의 명령어들을 포함할 수 있다. 이러한 명령어들이 메모리 및 스토리지에 포함되 는 코드 블록들로서 도시되지만, 코드 블록들 중 임의의 것이, 예를 들어, 주문형 집적 회로(ASIC)에 내장되는 고정배선 회로(hardwired circuit)들로 대체될 수 있다는 것이 이해될 수 있다. 일 예에서, 메모리, 스토리지, 또는 프로세서를 통해 제공되는 명령어들은 에지 컴퓨 팅 노드에서 전자 동작들을 수행하라고 프로세서에 지시하는 코드를 포함하는 비일시적 머신 판독 가능 매체로서 구현될 수 있다. 프로세서는 인터커넥트를 통해 비일시적 머신 판독가능 매 체에 액세스할 수 있다. 예를 들어, 비일시적 머신 판독가능 매체는 스토리지에 대해 설명 된 디바이스들에 의해 구현될 수 있거나 광학 디스크들, 플래시 드라이브들, 또는 임의의 수의 다른 하드웨어 디바이스들과 같은 특정 스토리지 유닛들을 포함할 수 있다. 비일시적 머신 판독가능 매체는, 예를 들어, 위에 묘사된 동작들 및 기능성의 흐름도(들) 및 블록도(들)에 관하여 설명된 바와 같이, 액션들의 특정시퀀스 또는 흐름을 수행하도록 프로세서에 지시하는 명령어들을 포함할 수 있다. 본 명세서에서 사용되 는 바와 같이, 용어들 \"머신 판독가능 매체\"와 \"컴퓨터 판독가능 매체\"는 교환가능하다. 또한 특정 예에서, 프로세서 상의 명령어들은 (머신 판독가능 매체의 명령어들과 별도 로, 또는 조합하여) 신뢰된 실행 환경(trusted execution environment, TEE)의 실행 또는 동작을 구성할 수 있다. 일 예에서, TEE는 명령어들의 보안 실행 및 데이터에 대한 보안 액세스를 위해 프로세서(105 2)에 의해 액세스가능한 보호된 영역으로서 동작한다. TEE, 및 프로세서 또는 메모리 내의 수반되는 보안 영역의 다양한 구현들은, 예를 들어, Intel® SGX(Software Guard Extensions) 또는 ARM® TrustZone® 하드웨어 보안 확장들, Intel® ME(Management Engine), 또는 Intel® CSME(Converged Security Manageability Engine)의 사용을 통해 제공될 수 있다. 보안 경화, 하드웨어 신뢰 루트들(hardware roots-of- trust), 및 신뢰된 또는 보호된 동작들의 다른 양태들이 TEE 및 프로세서를 통해 에지 컴퓨팅 디바 이스에서 구현될 수 있다. 도 11은 도 4의 모델 업데이트 컨트롤러 회로를 구현하기 위해 도 6 및 도 7의 머신 판독가능 명령어들 및 /또는 동작들을 실행 및/또는 인스턴스화하도록 구조화되는 예시적인 프로세서 플랫폼의 블록도이다. 프 로세서 플랫폼은, 예를 들어, 서버, 개인용 컴퓨터, 워크스테이션, 셀프-러닝 머신(예를 들어, 신경망), 모바일 디바이스(예를 들어, 셀폰, 스마트폰, iPad™와 같은 태블릿), 개인용 디지털 보조기기(personal digital assistant, PDA), 인터넷 기기, DVD 플레이어, CD 플레이어, 디지털 비디오 레코더, 블루레이 플레이어, 게임 콘솔, 개인용 비디오 레코더, 셋톱 박스, 헤드셋(예를 들어, 증강 현실(AR) 헤드셋, 가상 현실 (VR) 헤드셋 등) 또는 다른 웨어러블 디바이스, 또는 임의의 다른 타입의 컴퓨팅 디바이스일 수 있다. 예시된 예의 프로세서 플랫폼은 프로세서 회로를 포함한다. 예시된 예의 프로세서 회로는 하드웨어이다. 예를 들어, 프로세서 회로는 임의의 원하는 패밀리 또는 제조자로부터의 하나 이상의 집 적 회로, 로직 회로, FPGA, 마이크로프로세서, CPU, GPU, DSP, 및/또는 마이크로컨트롤러에 의해 구현될 수 있 다. 프로세서 회로는 하나 이상의 반도체 기반(예를 들어, 실리콘 기반) 디바이스에 의해 구현될 수 있 다. 이 예에서, 프로세서 회로는 예시적인 데이터 인터페이스 회로, 예시적인 환경 데이터 인터페 이스 회로, 예시적인 지능적 트리거 회로, 예시적인 자동화된 모델 검색 회로, 및 예시적인 지 능적 배치 회로를 구현한다. 예시된 예의 프로세서 회로는 로컬 메모리(예를 들어, 캐시, 레지스터들 등)를 포함한다. 예시된 예의 프로세서 회로는, 버스에 의해, 휘발성 메모리 및 비휘발성 메모리를 포함하는 메인 메모리와 통신한다. 휘발성 메모리는 SDRAM(Synchronous Dynamic Random Access Memory), DRAM(Dynamic Random Access Memory), RDRAM®(RAMBUS® Dynamic Random Access Memory) 및/또는 임의의 다른 타입의 RAM 디바이스에 의해 구현될 수 있다. 비휘발성 메모리는 플래시 메모리 및/또는 임의의 다른 원 하는 타입의 메모리 디바이스에 의해 구현될 수 있다. 예시된 예의 메인 메모리(1114, 1116)에 대한 액세스는 메모리 컨트롤러에 의해 제어된다. 예시된 예의 프로세서 플랫폼은 인터페이스 회로를 또한 포함한다. 인터페이스 회로는 이더 넷 인터페이스, USB(universal serial bus) 인터페이스, Bluetooth® 인터페이스, NFC(near field communication) 인터페이스, PCI 인터페이스, 및/또는 PCIe 인터페이스와 같은 임의의 타입의 인터페이스 표준 에 따라 하드웨어에 의해 구현될 수 있다. 예시된 예에서, 하나 이상의 입력 디바이스가 인터페이스 회로에 접속된다. 입력 디바이스 (들)는 사용자가 프로세서 회로에 데이터 및/또는 커맨드들을 입력할 수 있게 한다. 입력 디바이 스(들)는, 예를 들어, 오디오 센서, 마이크로폰, 카메라(스틸 또는 비디오), 키보드, 버튼, 마우스, 터치 스크린, 트랙-패드, 트랙볼, 이소포인트(isopoint) 디바이스 및/또는 음성 인식 시스템에 의해 구현될 수 있다. 하나 이상의 출력 디바이스가 예시된 예의 인터페이스 회로에 또한 접속된다. 출력 디바이스들 은, 예를 들어, 디스플레이 디바이스들(예를 들어, 발광 다이오드(LED), 유기 발광 다이오드(OLED), 액정 디스플레이(LCD), 음극선관(CRT) 디스플레이, 인-플레이스 스위칭(in-place switching, IPS) 디스플레이, 터치 스크린 등), 촉각 출력 디바이스, 프린터 및/또는 스피커에 의해 구현될 수 있다. 따라서, 예시된 예의 인터페 이스 회로는 통상적으로 그래픽 드라이버 카드, 그래픽 드라이버 칩, 및/또는 GPU와 같은 그래픽 프로세 서 회로를 포함한다. 예시된 예의 인터페이스 회로는 또한 네트워크에 의해 외부 머신들(예를 들어, 임의의 종류의 컴퓨 팅 디바이스들)과의 데이터 교환을 용이하게 하는 송신기, 수신기, 송수신기, 모뎀, 주거용 게이트웨이, 무선 액세스 포인트, 및/또는 네트워크 인터페이스와 같은 통신 디바이스를 포함한다. 통신은, 예를 들어, 이더넷 접속, 디지털 가입자 회선(DSL) 접속, 전화선 접속, 동축 케이블 시스템, 위성 시스템, 라인-오브-사이트 무선 시스템(line-of-site wireless system), 셀룰러 전화 시스템, 광학 접속 등에 의해 이루어질 수 있다. 예시된 예의 프로세서 플랫폼은 또한 소프트웨어 및/또는 데이터를 저장하는 하나 이상의 대용량 스토리 지 디바이스를 포함한다. 이러한 대용량 스토리지 디바이스들의 예들은 자기 스토리지 디바이스들, 광학 스토리지 디바이스들, 플로피 디스크 드라이브들, HDD들, CD들, 블루레이 디스크 드라이브들, RAID(redundant array of independent disks) 시스템들, 플래시 메모리 디바이스들과 같은 고체 상태 스토리지 디바이스들, 및 DVD 드라이브들을 포함한다. 도 6 및 도 7의 머신 판독가능 명령어들에 의해 구현될 수 있는 머신 실행가능 명령어들은 대용량 스토리 지 디바이스에, 휘발성 메모리에, 비휘발성 메모리에, 및/또는 CD 또는 DVD와 같은 이동식 비일시적 컴퓨터 판독가능 저장 매체 상에 저장될 수 있다. 도 12는 도 11의 프로세서 회로의 예시적인 구현의 블록도이다. 이 예에서, 도 11의 프로세서 회로 는 마이크로프로세서에 의해 구현된다. 예를 들어, 마이크로프로세서는 CPU, DSP, GPU, XPU 등과 같은 멀티 코어 하드웨어 회로를 구현할 수 있다. 임의의 수의 예시적인 코어들(예를 들어, 1 개의 코어)을 포함할 수 있지만, 이 예의 마이크로프로세서는 N개의 코어를 포함하는 멀티 코어 반도체 디바이스이다. 마이크로프로세서의 코어들은 독립적으로 동작할 수 있거나 또는 머신 판독가능 명 령어들을 실행하도록 협력할 수 있다. 예를 들어, 펌웨어 프로그램, 임베디드 소프트웨어 프로그램, 또는 소프 트웨어 프로그램에 대응하는 머신 코드는 코어들 중 하나에 의해 실행될 수 있거나 또는 코어들 중 다수의 코어들에 의해 동시에 또는 상이한 시간에 실행될 수 있다. 일부 예들에서, 펌웨어 프로그램, 임베디드 소프트웨어 프로그램, 또는 소프트웨어 프로그램에 대응하는 머신 코드는 스레드들로 분할되고 코어들 중 2개 이상에 의해 병렬로 실행된다. 소프트웨어 프로그램은 도 6 및 도 7의 흐름도에 의해 표현된 머신 판독가 능 명령어들 및/또는 동작들의 일부 또는 전부에 대응할 수 있다. 코어들은 예시적인 제1 버스에 의해 통신할 수 있다. 일부 예들에서, 제1 버스는 코어들 중 하나(들)와 연관된 통신을 실시하기 위해 통신 버스를 구현할 수 있다. 예를 들어, 제1 버스 는 I2C(Inter-Integrated Circuit) 버스, SPI(Serial Peripheral Interface) 버스, PCI 버스, 또는 PCIe 버스 중 적어도 하나를 구현할 수 있다. 추가적으로 또는 대안적으로, 제1 버스는 임의의 다른 타입의 컴퓨팅 또는 전기 버스를 구현할 수 있다. 코어들은 예시적인 인터페이스 회로에 의해 하나 이상의 외부 디바이스로부터 데이터, 명령어들, 및/또는 신호들을 획득할 수 있다. 코어들은 인터페이스 회로 에 의해 하나 이상의 외부 디바이스에 데이터, 명령어들, 및/또는 신호들을 출력할 수 있다. 이 예의 코어들 이 예시적인 로컬 메모리(예를 들어, 레벨 1(L1) 데이터 캐시 및 L1 명령어 캐시로 분할될 수 있는 L1 캐시)를 포함하지만, 마이크로프로세서는 또한 데이터 및/또는 명령어들에의 고속 액세스를 위해 코어 들에 의해 공유될 수 있는 예시적인 공유 메모리(예를 들어, 레벨 2(L2) 캐시)를 포함한다. 데이터 및/ 또는 명령어들은 공유 메모리에 기입하고/하거나 그로부터 판독함으로써 전송(예를 들어, 공유)될 수 있 다. 코어들 각각의 로컬 메모리 및 공유 메모리는 다수의 레벨의 캐시 메모리 및 메인 메모 리(예를 들어, 도 11의 메인 메모리(1114, 1116))를 포함하는 스토리지 디바이스들의 계층구조의 일부일 수 있 다. 전형적으로, 계층구조 내의 더 높은 레벨의 메모리는 더 낮은 액세스 시간을 나타내고 더 낮은 레벨의 메 모리보다 더 작은 저장 용량을 갖는다. 캐시 계층구조의 다양한 레벨들에서의 변경들은 캐시 일관성 정책 (cache coherency policy)에 의해 관리(예를 들어, 조정)된다. 각각의 코어는 CPU, DSP, GPU 등, 또는 임의의 다른 타입의 하드웨어 회로로 지칭될 수 있다. 각각의 코 어는 제어 유닛 회로, 산술 및 논리(arithmetic and logic, AL) 회로(때때로 ALU라고 지칭 됨), 복수의 레지스터들, L1 캐시, 및 예시적인 제2 버스를 포함한다. 다른 구조들이 존재할 수 있다. 예를 들어, 각각의 코어는 벡터 유닛 회로, SIMD(single instruction multiple data) 유닛 회로, LSU(load/store unit) 회로, 분기/점프 유닛 회로, FPU(floating-point unit) 회로 등을 포함할 수 있다. 제어 유닛 회로는 대응하는 코어 내에서의 데이터 이동을 제어(예를 들어, 조정)하도록 구 조화되는 반도체 기반 회로들을 포함한다. AL 회로는 대응하는 코어 내의 데이터에 대한 하나 이 상의 수학 및/또는 논리 연산을 수행하도록 구조화되는 반도체 기반 회로들을 포함한다. 일부 예들의 AL 회로 는 정수 기반 연산들을 수행한다. 다른 예들에서, AL 회로는 또한 부동 소수점 연산들을 수행한다. 또 다른 예들에서, AL 회로는 정수 기반 연산들을 수행하는 제1 AL 회로 및 부동 소수점 연산들을 수행하는 제2 AL 회로를 포함할 수 있다. 일부 예들에서, AL 회로는 ALU(Arithmetic Logic Unit) 라고 지칭될 수 있다. 레지스터들은 대응하는 코어의 AL 회로에 의해 수행되는 연산들 중 하나 이상 연산의 결과들과 같은 데이터 및/또는 명령어들을 저장하는 반도체 기반 구조체들이다. 예를 들어, 레지스터들은 벡터 레지스터(들), SIMD 레지스터(들), 범용 레지스터(들), 플래그 레지스터(들), 세그먼 트 레지스터(들), 머신 특정 레지스터(들), 명령어 포인터 레지스터(들), 제어 레지스터(들), 디버그 레지스터 (들), 메모리 관리 레지스터(들), 머신 체크 레지스터(들) 등을 포함할 수 있다. 레지스터들은 도 12에 도시된 바와 같이 뱅크(bank)로 배열될 수 있다. 대안적으로, 레지스터들은 액세스 시간을 단축하기 위 해 코어 전체에 걸쳐 분산되는 것을 포함하는 임의의 다른 배열, 포맷, 또는 구조로 조직될 수 있다. 제 2 버스는 I2C 버스, SPI 버스, PCI 버스, 또는 PCIe 버스 중 적어도 하나를 구현할 수 있다. 각각의 코어 및/또는, 보다 일반적으로, 마이크로프로세서는 앞서 도시되고 설명된 것들에 대한 부 가적인 및/또는 대안적인 구조체들을 포함할 수 있다. 예를 들어, 하나 이상의 클록 회로, 하나 이상의 전원, 하나 이상의 전력 게이트, 하나 이상의 캐시 홈 에이전트(cache home agent, CHA), 하나 이상의 수렴된/공통 메 시 스톱(converged/common mesh stop, CMS), 하나 이상의 시프터(예를 들어, 배럴 시프터(들)) 및/또는 다른 회로가 존재할 수 있다. 마이크로프로세서는 하나 이상의 패키지에 포함된 하나 이상의 집적 회로(IC)에 전술한 구조체들을 구현하기 위해 상호접속된 많은 트랜지스터를 포함하도록 제조된 반도체 디바이스이다. 프 로세서 회로는 하나 이상의 가속기를 포함하고/하거나 이들과 협력할 수 있다. 일부 예들에서, 가속기들은 범 용 프로세서에 의해 행해질 수 있는 것보다 더 빠르게 및/또는 효율적으로 특정 태스크들을 수행하기 위해 로직 회로에 의해 구현된다. 가속기들의 예들은 본 명세서에서 논의된 것들과 같은 ASIC들 및 FPGA들을 포함한다. GPU 또는 다른 프로그램가능 디바이스는 또한 가속기일 수 있다. 가속기들은 프로세서 회로에 온-보드(on- board)로, 프로세서 회로와 동일한 칩 패키지로 및/또는 프로세서 회로와 별개의 하나 이상의 패키지로 있을 수 있다. 도 13은 도 11의 프로세서 회로의 다른 예시적인 구현의 블록도이다. 이 예에서, 프로세서 회로는 FPGA 회로에 의해 구현된다. FPGA 회로는, 예를 들어, 대응하는 머신 판독가능 명령어들을 실행하 는 도 12의 예시적인 마이크로프로세서에 의해 다른 방식으로 수행될 수 있는 동작들을 수행하는 데 사용 될 수 있다. 그러나, 일단 구성되면, FPGA 회로는 머신 판독가능 명령어들을 하드웨어로 인스턴스화하고, 따라서, 대응하는 소프트웨어를 실행하는 범용 마이크로프로세서에 의해 수행될 수 있는 것보 다 더 빠르게 동작들을 종종 실행할 수 있다. 더 구체적으로, (도 6 및 도 7의 흐름도에 의해 표현된 머신 판독가능 명령어들의 일부 또는 전부를 실행하도록 프로그래밍될 수 있지만 일단 제조되면 상호접속들 및 로직 회로가 고정되는 범용 디바이스인) 전술한 도 12의 마이크로프로세서와 대조적으로, 도 13의 예의 FPGA 회로는, 예를 들어, 도 6 및 도 7의 흐름도에 의해 표현된 머신 판독가능 명령어들의 일부 또는 전부를 인스턴스화하기 위해 제조 후에 상이한 방식들로 구성 및/또는 상호접속될 수 있는 상호접속들 및 로직 회로를 포함한다. 특히, FPGA는 로직 게이트들, 상호접 속들, 및 스위치들의 어레이로서 생각될 수 있다. 스위치들은 (FPGA 회로가 재프로그래밍되지 않는 한 그리고 재프로그래밍될 때까지) 로직 게이트들이 상호접속들에 의해 상호접속되어 하나 이상의 전용 로직 회로 를 효과적으로 형성하는 방법을 변경하도록 프로그래밍될 수 있다. 구성된 로직 회로들은 로직 게이트들이 상 이한 방식들로 협력하여 입력 회로에 의해 수신된 데이터에 대해 상이한 동작들을 수행할 수 있게 한다. 이러 한 동작들은 도 6 및 도 7의 흐름도에 의해 표현된 소프트웨어의 일부 또는 전부에 대응할 수 있다. 이와 같이, FPGA 회로는 ASIC와 유사한 전용 방식으로 이들 소프트웨어 명령어들에 대응하는 동작들을 수행하 기 위해 전용 로직 회로들로서 도 6 및 도 7의 흐름도의 머신 판독가능 명령어들의 일부 또는 전부를 효과적으 로 인스턴스화하도록 구조화될 수 있다. 따라서, FPGA 회로는 범용 마이크로프로세서가 이를 실행할 수 있는 것보다 빨리 도 6 및 도 7의 머신 판독가능 명령어들의 일부 또는 전부에 대응하는 동작들을 수행할 수 있 다. 도 13의 예에서, FPGA 회로는 Verilog와 같은 하드웨어 기술 언어(HDL)에 의해 최종 사용자에 의해 프로 그래밍(및/또는 1회 이상 재프로그래밍)되도록 구조화된다. 도 13의 FPGA 회로는 예시적인 구성 회로 및/또는 외부 하드웨어(예를 들어, 외부 하드웨어 회로)로/로부터 데이터를 획득 및/또는 출력하 는 예시적인 입력/출력(I/O) 회로를 포함한다. 예를 들어, 구성 회로는 FPGA 회로 또는 그 일부(들)를 구성하기 위해 머신 판독가능 명령어들을 획득할 수 있는 인터페이스 회로를 구현할 수 있다. 일부 이러한 예들에서, 구성 회로는 사용자, 머신(예를 들어, 명령어들을 생성하기 위해 인공 지능/머신 러닝 (AI/ML) 모델을 구현할 수 있는 하드웨어 회로(예를 들어, 프로그래밍된 또는 전용 회로)) 등으로부터 머신 판독가능 명령어들을 획득할 수 있다. 일부 예들에서, 외부 하드웨어는 도 13의 마이크로프로세서를 구현할 수 있다. FPGA 회로는 또한 예시적인 로직 게이트 회로, 복수의 예시적인 구성가능한 상호 접속들, 및 예시적인 스토리지 회로의 어레이를 포함한다. 로직 게이트 회로 및 상호접속들 은 도 6 및 도 7의 머신 판독가능 명령어들 중 적어도 일부에 대응할 수 있는 하나 이상의 동작 및/또는 다른 원하는 동작들을 인스턴스화하도록 구성가능하다. 도 13에 도시된 로직 게이트 회로는 그룹들 또는 블록들로 제조된다. 각각의 블록은 로직 회로들로 구성될 수 있는 반도체 기반 전기 구조체들을 포함한다. 일 부 예들에서, 전기 구조체들은 로직 회로들에 대한 기본 빌딩 블록들을 제공하는 로직 게이트들(예를 들어, And 게이트들, Or 게이트들, Nor 게이트들 등)을 포함한다. 전기적으로 제어가능한 스위치들(예를 들어, 트랜지스 터들)이 로직 게이트 회로 각각 내에 존재하여, 전기 구조체들 및/또는 로직 게이트들의 구성이 원하는 동작들을 수행하는 회로들을 형성할 수 있게 한다. 로직 게이트 회로는 룩업 테이블(LUT)들, 레지스터들 (예를 들어, 플립플롭들 또는 래치들), 멀티플렉서들 등과 같은 다른 전기 구조체들을 포함할 수 있다. 예시된 예의 상호접속들은, 원하는 로직 회로들을 프로그래밍하기 위해 로직 게이트 회로 중 하나 이상 사이의 하나 이상의 접속을 활성화 또는 비활성화하도록 (예를 들어, HDL 명령어 언어를 사용하여) 프로그 래밍함으로써 상태가 변경될 수 있는 전기적으로 제어가능한 스위치들(예를 들어, 트랜지스터들)을 포함할 수 있는 전도성 경로들, 트레이스들, 비아들 등이다. 예시된 예의 스토리지 회로는 대응하는 로직 게이트들에 의해 수행되는 연산들 중 하나 이상 연산의 결과 (들)를 저장하도록 구조화된다. 스토리지 회로는 레지스터들 등에 의해 구현될 수 있다. 예시된 예에서, 스토리지 회로는 액세스를 용이하게 하고 실행 속도를 증가시키기 위해 로직 게이트 회로 사이에 분산된다. 도 13의 예시적인 FPGA 회로는 또한 예시적인 전용 연산 회로(Dedicated Operations Circuitry)를 포함한다. 이 예에서, 전용 연산 회로는 필드에서 그 기능들을 프로그래밍할 필요를 피하기 위해 흔히 사용되는 기능들을 구현하도록 호출될 수 있는 특수 목적 회로를 포함한다. 이러한 특수 목적 회로 의 예들은 메모리(예를 들어, DRAM) 컨트롤러 회로, PCIe 컨트롤러 회로, 클록 회로, 송수신기 회로, 메 모리, 및 곱셈기-누산기 회로를 포함한다. 다른 타입들의 특수 목적 회로가 존재할 수 있다. 일부 예들에서, FPGA 회로는 또한 예시적인 CPU 및/또는 예시적인 DSP와 같은 예시적인 범용 프로그램가능 회로를 포함할 수 있다. 다른 동작들을 수행하도록 프로그래밍될 수 있는 GPU, XPU 등과 같은 다른 범용 프로그램가능 회로가 추가적으로 또는 대안적으로 존재할 수 있다. 도 12 및 도 13이 도 11의 프로세서 회로의 2개의 예시적인 구현을 예시하지만, 많은 다른 접근법이 고려 된다. 예를 들어, 위에 언급한 바와 같이, 현대의 FPGA 회로는 도 13의 예시적인 CPU 중 하나 이상과 같 은 온-보드 CPU를 포함할 수 있다. 따라서, 도 11의 프로세서 회로는 도 12의 예시적인 마이크로프로세 서와 도 13의 예시적인 FPGA 회로를 조합함으로써 추가로 구현될 수 있다. 일부 그러한 하이브리 드 예들에서, 도 6 및 도 7의 흐름도에 의해 표현되는 머신 판독가능 명령어들의 제1 부분은 도 12의 코어들 중 하나 이상에 의해 실행될 수 있고, 도 6 및 도 7의 흐름도에 의해 표현되는 머신 판독가능 명령어들 의 제2 부분은 도 13의 FPGA 회로에 의해 실행될 수 있다. 일부 예들에서, 도 11의 프로세서 회로는 하나 이상의 패키지 내에 있을 수 있다. 예를 들어, 도 11의 프로세서 회로 및/또는 도 13의 FPGA 회로는 하나 이상의 패키지 내에 있을 수 있다. 일부 예들에 서, XPU는 하나 이상의 패키지 내에 있을 수 있는 도 11의 프로세서 회로에 의해 구현될 수 있다. 예를 들어, XPU는 하나의 패키지 내의 CPU, 다른 패키지 내의 DSP, 또 다른 패키지 내의 GPU, 및 계속해서 또 다른 패키지 내의 FPGA를 포함할 수 있다. 도 11의 예시적인 머신 판독가능 명령어들과 같은 소프트웨어를 제3자들에 의해 소유 및/또는 운영되는 하드웨어 디바이스들에 배포하는 예시적인 소프트웨어 배포 플랫폼을 예시하는 블록도가 도 11에 예시되 어 있다. 예시적인 소프트웨어 배포 플랫폼은 소프트웨어를 저장하고 다른 컴퓨팅 디바이스들에 송신할 수 있는 임의의 컴퓨터 서버, 데이터 설비, 클라우드 서비스 등에 의해 구현될 수 있다. 제3자들은 소프트웨어 배포 플랫폼을 소유 및/또는 운영하는 엔티티의 고객들일 수 있다. 예를 들어, 소프트웨어 배포 플랫폼 을 소유 및/또는 운영하는 엔티티는 도 11의 예시적인 머신 판독가능 명령어들과 같은 소프트웨어 의 개발자, 판매자, 및/또는 라이센서일 수 있다. 제3자들은 사용 및/또는 재판매 및/또는 서브-라이센싱을 위 해 소프트웨어를 구매 및/또는 라이센싱하는 소비자들, 사용자들, 소매업자들, OEM들 등일 수 있다. 예시된 예 에서, 소프트웨어 배포 플랫폼은 하나 이상의 서버 및 하나 이상의 스토리지 디바이스를 포함한다. 스토리지 디바이스들은, 전술한 바와 같이, 도 6 및 도 7의 예시적인 머신 판독가능 명령어들(600 및 700)에 대응할 수 있는 머신 판독가능 명령어들을 저장한다. 예시적인 소프트웨어 배포 플랫폼의 하나 이상의 서 버는 임의의 하나 이상의 인터넷 및/또는 위에서 설명된 예시적인 네트워크들 중 임의의 것에 대응할 수 있는 네트워크와 통신한다. 일부 예들에서, 하나 이상의 서버는 요청들에 응답하여 상업적 트랜잭션의 일부로서 요청측에 소프트웨어를 송신한다. 소프트웨어의 전달, 판매, 및/또는 라이센스에 대한 지불은 소프트 웨어 배포 플랫폼의 하나 이상의 서버에 의해 그리고/또는 제3자 지불 엔티티에 의해 핸들링될 수 있다. 서버 들은 구매자들 및/또는 라이센서들이 소프트웨어 배포 플랫폼으로부터 머신 판독가능 명령어들을 다운로드할 수 있게 한다. 예를 들어, 도 11의 예시적인 머신 판독가능 명령어들에 대응할 수 있는 소프 트웨어는, 모델 업데이트 컨트롤러 회로를 구현하기 위해 머신 판독가능 명령어들을 실행하는 예시 적인 프로세서 플랫폼에 다운로드될 수 있다. 일부 예들에서, 소프트웨어 배포 플랫폼의 하나 이 상의 서버는 소프트웨어(예를 들어, 도 11의 예시적인 머신 판독가능 명령어들)에 업데이트들을 주기적으 로 제공, 송신, 및/또는 강제(force)하여, 개선들, 패치들, 업데이트들 등이 최종 사용자 디바이스들에서 소프 트웨어에 배포되고 적용되는 것을 보장한다. 전술한 것으로부터, 인간의 감독을 이용하지 않고 자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하 는 예시적인 방법들, 장치들 및 제조 물품들이 개시되었다는 것을 이해할 것이다. 개시된 방법들, 장치들 및 제조 물품들은 공장들에서 제조 프로세스들에 대한 불량률들을 예측하는 차선의 모델들이 실행됨에 따라 낭비되 는 리소스들 및 비효율들을 감소시킴으로써 컴퓨팅 디바이스의 사용 효율을 개선시킨다. 개시된 방법들, 장치 들 및 제조 물품들은 따라서 컴퓨터의 기능에서의 하나 이상의 개선(들)에 관한 것이다. 자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하는 예시적인 방법들, 장치들, 시스템들, 및 제조 물품들이 본 명세서에 개시된다. 추가의 예들 및 이들의 조합들은 다음을 포함한다: 예 1은 제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 장치를 포함하고, 이 장치는 자동화된 모델 업데이트 프로세스를 트리거하는 지능적 트리거 회로, 모델 업데이트에 응 답하여, 복수의 후보 인공 지능 모델들을 생성하는 자동화된 모델 검색 회로, 및 시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 지능적 모델 배치 회로를 포함한다. 예 2는 예 1의 장치를 포함하고, 상기 지능적 트리거 회로는 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데 이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거한다. 예 3은 예 2의 장치를 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 4는 예 1의 장치를 포함하고, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델을 추 가로 포함하고, 상기 자동화된 검색 회로는, 상기 지능적 트리거 회로가 상기 자동화된 모델 업데이트 프로세스 를 트리거하는 것에 응답하여, 복수의 후보 인공 지능 모델들을 생성하거나 트레이닝된 인공 지능 모델들의 리 포지토리로부터 복수의 후보 인공 지능 모델들을 선택한다. 예 5는 예 4의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수 집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 6은 예 4의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼파 라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 유사한 모델 아키텍처를 구현한다. 예 7은 예 4의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아 키텍처를 구현한다. 예 8은 예 4의 장치를 포함하고, 상기 자동화된 모델 검색 회로는 유사도 스코어 및 성능 스코어에 기초하여 트 레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택한다. 예 9는 예 4의 장치를 포함하고, 상기 지능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하고 상기 지능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거한다. 예 10은 장치를 포함하며, 이 장치는 비일시적 컴퓨터 판독가능 매체, 상기 장치에서의 명령어들, 로직 회로를 포함하고, 상기 로직 회로는 상기 명령어들을 실행하여 적어도 자동화된 모델 업데이트 프로세스를 트리거하고, 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하고, 시간 경과에 따라 예측 성능을 개선시키 기 위해 인공 지능 모델 조합의 예측을 출력한다. 예 11은 예 10의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 메트릭 베이스라인, 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어 도 하나에 기초하여 상기 모델 업데이트를 트리거하게 한다. 예 12는 예 11의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구 성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 13은 예 10의 비일시적 컴퓨터 판독가능 매체를 포함하고, 제1 공장 생산 라인의 데이터에 대해 동작하는 제 1 인공 지능 모델을 추가로 포함하고, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 트리거된 자동화된 모델 업데이트 프로세스에 응답하여, 복수의 후보 인공 지능 모델들을 생성하게 하거나 트레이닝된 인 공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택하게 한다. 예 14는 예 13의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 15는 예 13의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼파라미터 업데이트들을 추가로 포함하는, 제1 공장 생산 라인의 데이터에 대해 동작하 는 상기 제1 인공 지능 모델의 유사한 모델 아키텍처를 구현한다. 예 16은 예 13의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아키텍처를 구현한다. 예 17은 예 13의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제 1 후보 인공 지능 모델을 선택하게 한다. 예 18은 예 13의 비일시적 컴퓨터 판독가능 매체를 포함하고, 상기 명령어들은, 실행될 때, 추가로 상기 로직 회로로 하여금, 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하게 하고, 상기 복수의 후보 인공 지능 모델 들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거하게 한 다. 예 19는 장치를 포함하며, 이 장치는 적어도 하나의 메모리, 상기 장치에서의 명령어들, 및 프로세서 회로를 포 함하고, 상기 프로세서 회로는 상기 프로세서 회로 내의 데이터 이동을 제어하는 제어 회로, 상기 데이터에 대 해 하나 이상의 연산을 수행하는 산술 및 논리 회로, 및 하나 이상의 연산의 결과를 저장하는 하나 이상의 레지 스터를 포함하며, 상기 프로세서 회로는 상기 명령어들을 실행하여 자동화된 모델 업데이트 프로세스를 트리거 하고, 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하고, 시간 경과에 따라 예측 성능을 개 선시키기 위해 인공 지능 모델 조합의 예측을 출력한다. 예 20은 예 19의 장치를 포함하고, 상기 프로세서 회로는 추가로 상기 명령어들을 실행하여 메트릭 베이스라인, 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생 산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업 데이트를 트리거한다. 예 21은 예 20의 장치를 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 22는 예 19의 장치를 포함하고, 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델을 추가로 포함하고, 상기 프로세서 회로는, 트리거된 자동화된 모델 업데이트 프로세스에 응답하여, 추가로 명령어들을실행하여 복수의 후보 인공 지능 모델들을 생성하거나 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택한다. 예 23은 예 22의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터 에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 24는 예 22의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼 파라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지 능 모델의 유사한 모델 아키텍처를 구현한다. 예 25는 예 22의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아 키텍처를 구현한다. 예 26은 예 22의 장치를 포함하고, 상기 프로세서 회로는 추가로 상기 명령어들을 실행하여 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택한다. 예 27은 예 22의 장치를 포함하고, 상기 프로세서 회로는 추가로 상기 명령어들을 실행하여 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하고, 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거한다. 예 28은 제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 방법을 포함하고, 이 방법은 자동화된 모델 업데이트 프로세스를 트리거하는 단계, 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 단계, 및 시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조 합의 예측을 출력하는 단계를 포함한다. 예 29는 예 28의 방법을 포함하고, 상기 방법은 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하는 단계를 추가로 포함 한다. 예 30은 예 29의 방법을 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 31은 예 28의 방법을 포함하고, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델이, 트리거된 자동화된 모델 업데이트 프로세스에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 단계 또는 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 인공 지능 모델들을 선택하는 단계를 추가로 포함한다. 예 32는 예 31의 방법을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터 에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 33은 예 31의 방법을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼 파라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지 능 모델의 유사한 모델 아키텍처를 구현한다. 예 34는 예 31의 방법을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아 키텍처를 구현한다. 예 35는 예 31의 방법을 포함하고, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택하는 단계를 추가로 포함한다. 예 36은 예 31의 방법을 포함하고, 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하는 단계 및 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모 델들을 제거하는 단계를 추가로 포함한다.예 37은 제1 공장 생산 라인의 데이터에 대해 동작하는 인공 지능 모델들을 자동으로 업데이트하기 위한 장치를 포함하고, 이 장치는 자동화된 모델 업데이트 프로세스를 트리거하는 수단, 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 수단, 및 시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조 합의 예측을 출력하는 수단을 포함한다. 예 38은 예 37의 장치를 포함하고, 상기 장치는 메트릭 베이스라인, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거하는 수단을 추가로 포함 한다. 예 39는 예 38의 장치를 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 40은 예 37의 장치를 포함하고, 상기 제1 공장 생산 라인에서 동작하는 제1 인공 지능 모델을 추가로 포함하 고, 상기 자동화된 모델 업데이트 프로세스를 트리거하는 수단이 상기 자동화된 모델 업데이트 프로세스를 트리 거하는 것에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 수단 또는 트레이닝된 인공 지능 모델들의 리 포지토리로부터 복수의 인공 지능 모델들을 선택하는 수단을 추가로 포함한다. 예 41은 예 40의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터 에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 42는 예 40의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이퍼 파라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지 능 모델의 유사한 모델 아키텍처를 구현한다. 예 43은 예 40의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아 키텍처를 구현한다. 예 44는 예 40의 장치를 포함하고, 유사도 스코어 및 성능 스코어에 기초하여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택하는 수단을 추가로 포함한다. 예 45는 예 40의 장치를 포함하고, 상기 복수의 후보 인공 지능 모델들을 병렬로 실행하는 수단 및 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모 델들을 제거하는 수단을 추가로 포함한다. 예 46은 시스템을 포함하고, 이 시스템은 제1 공장 생산 라인의 공장 조건들에 대응하는 제1 사물 인터넷(IoT) 센서, 제2 공장 생산 라인의 공장 조건들에 대응하는 제2 IoT 센서, 모델 업데이트 디바이스를 포함하고, 상기 모델 업데이트 디바이스는 상기 제1 IoT 센서 및 상기 제2 IoT 센서로부터 메타데이터를 수신하는 지능적 트리 거 회로 - 상기 지능적 트리거 회로는 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 적어도 하나의 인공 지능 모델을 업데이트함 - , 모델 업데이트에 응답하여, 복수의 후보 인공 지능 모델들을 생성하는 자동화된 모 델 검색 회로, 및 시간 경과에 따라 예측 성능을 개선시키기 위해 인공 지능 모델 조합의 예측을 출력하는 지능 적 모델 배치 회로를 포함한다. 예 47은 예 46의 시스템을 포함하고, 상기 모델 업데이트 디바이스는 상기 제1 IoT 센서 및 상기 제2 IoT 센서 로부터 메타데이터를 수신하고, 상기 제1 IoT 센서로부터의 메타데이터와 상기 제2 IoT 센서의 메타데이터 사이 의 유사도의 임계값에 응답하여, 상기 모델 업데이트를 트리거한다. 예 48은 예 46의 시스템을 포함하고, 상기 지능적 트리거 회로는 메트릭 베이스라인, 상기 제1 공장 생산 라인 의 데이터에 대해 동작하는 제1 인공 지능 모델로부터의 출력, 메타데이터, 및 제2 공장 생산 라인의 데이터에 대해 동작하는 제2 인공 지능 모델로부터의 출력 중 적어도 하나에 기초하여 상기 모델 업데이트를 트리거한다. 예 49는 예 48의 시스템을 포함하고, 상기 메타데이터는 환경 센서 판독치들, 장비 구성들, 및 프로세스 구성들 중 적어도 하나를 포함한다. 예 50은 예 46의 시스템을 포함하고, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 제1 인공 지능 모델을 추가로 포함하고, 상기 자동화된 검색 회로는, 상기 지능적 트리거 회로가 상기 자동화된 모델 업데이트 프로세스를 트리거하는 것에 응답하여, 복수의 후보 인공 지능 모델들을 생성하거나 트레이닝된 인공 지능 모델들의 리포지토리로부터 복수의 후보 인공 지능 모델들을 선택한다. 예 51은 예 50의 시스템을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제1 후보 인공 지능 모델은, 새롭 게 수집된 데이터에 기초하여 업데이트된 모델 파라미터들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이 터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처를 구현한다. 예 52는 예 50의 시스템을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제2 후보 인공 지능 모델은, 하이 퍼파라미터 업데이트들을 추가로 포함하는, 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 유사한 모델 아키텍처를 구현한다. 예 53은 예 50의 시스템을 포함하고, 상기 복수의 후보 인공 지능 모델들 중 제3 후보 인공 지능 모델은 상기 제1 공장 생산 라인의 데이터에 대해 동작하는 상기 제1 인공 지능 모델의 모델 아키텍처에 기초하지 않는 모델 아키텍처를 구현한다. 예 54는 예 50의 시스템을 포함하고, 상기 자동화된 모델 검색 회로는 유사도 스코어 및 성능 스코어에 기초하 여 트레이닝된 인공 지능 모델들의 리포지토리로부터 제1 후보 인공 지능 모델을 선택한다. 예 55는 예 50의 시스템을 포함하고, 상기 지능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들을 병렬 로 실행하고 상기 지능적 모델 배치 회로는 상기 복수의 후보 인공 지능 모델들의 출력에 기초하여 상기 복수의 후보 인공 지능 모델들로부터 이상치 후보 인공 지능 모델들을 제거한다. 특정 예시적인 시스템들, 방법들, 장치들, 및 제조 물품들이 본 명세서에서 개시되었지만, 본 특허의 적용 범위 는 이에 제한되지 않는다. 반대로, 본 특허는 명백히 본 특허의 청구항들의 범위 내에 있는 모든 시스템들, 방 법들, 장치들, 및 제조 물품들을 포함한다. 다음의 청구항들은 이로써 이 참조에 의해 이 상세한 설명에 포함되며, 각각의 청구항은 본 개시내용의 별개의 실시예로서 자립한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10a 도면10b 도면11 도면12 도면13 도면14"}
{"patent_id": "10-2022-0036598", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "임시명세서(첨부)공개특허10-2022-0149418 -52-"}
{"patent_id": "10-2022-0036598", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 에지 컴퓨팅을 위한 에지 클라우드 구성의 개요를 예시한다. 도 2는 엔드포인트들, 에지 클라우드, 및 클라우드 컴퓨팅 환경들 사이의 동작 계층들을 예시한다. 도 3은 에지 컴퓨팅 시스템에서의 네트워킹 및 서비스들을 위한 예시적인 접근법을 예시한다. 도 4는 모델 업데이트 컨트롤러 회로가 자율 공장들에 대한 인공 지능 모델들을 자동으로 업데이트하도록 동작 하는 예시적인 환경의 블록도이다. 도 5는 도 4의 모델 업데이트 컨트롤러 회로의 예시적인 구현의 블록도이다. 도 6은 도 5의 모델 업데이트 컨트롤러 회로를 구현하기 위해 예시적인 프로세서 회로에 의해 실행될 수 있는 예시적인 머신 판독가능 명령어들을 나타내는 흐름도이다. 도 7은 도 5의 모델 업데이트 컨트롤러 회로를 구현하기 위해 예시적인 프로세서 회로에 의해 실행될 수 있는 예시적인 머신 판독가능 명령어들을 나타내는 흐름도이다. 도 8은 도 4의 모델 업데이트 컨트롤러 회로가 동작하는 환경에 의해 실행되는 프로세스의 흐름도이다. 도 9는 도 5의 모델 업데이트 컨트롤러 회로의 배치 회로에 의해 생성되는 데이터 테이블의 예시이다. 도 10a는 에지 컴퓨팅 시스템에서의 컴퓨트 노드에 배치된 컴퓨트를 위한 예시적인 컴포넌트들의 개요를 제공한다. 도 10b는 에지 컴퓨팅 시스템에서의 컴퓨팅 디바이스 내의 예시적인 컴포넌트들의 추가 개요를 제공한다. 도 11은 도 5의 모델 업데이트 컨트롤러 회로를 구현하기 위해 도 6 및 도 7의 예시적인 머신 판독가능 명령어 들을 실행하도록 구조화되는 프로세서 회로를 포함하는 예시적인 처리 플랫폼의 블록도이다. 도 12는 도 11의 프로세서 회로의 예시적인 구현의 블록도이다. 도 13은 도 11의 프로세서 회로의 다른 예시적인 구현의 블록도이다. 도 14는 (예를 들어, 라이센스, 판매, 및/또는 사용을 위해) 최종 사용자들 및/또는 소비자들과 연관된 클라이 언트 디바이스들, (예를 들어, 판매, 재판매, 라이센스, 및/또는 서브-라이센스를 위해) 소매업자들, 및/또는 (예를 들어, 소매업자들 및/또는 직접 구매 고객들과 같은 다른 최종 사용자들에게 배포될 제품들에 포함시키기 위해) OEM(original equipment manufacturer)들에 소프트웨어(예를 들어, 도 6 및 도 7의 예시적인 머신 판독 가능 명령어들에 대응하는 소프트웨어)를 배포하는 예시적인 소프트웨어 배포 플랫폼(예를 들어, 하나 이상의 서버)의 블록도이다. 도면들은 일정 비율로 그려지는 것은 아니다. 대신에, 층들 또는 영역들의 두께는 도면들에서 확대될 수 있다. 본 명세서에서 사용되는 바와 같이, 접속 참조들(예를 들어, 부착, 결합, 접속, 및 접합)은, 달리 지시되지 않 는 한, 접속 참조에 의해 언급되는 요소들 사이의 중간 부재들 및/또는 이러한 요소들 사이의 상대적 이동을 포 함할 수 있다. 이와 같이, 접속 참조들은 2개의 요소가 서로 고정된 관계로 및/또는 직접 접속되는 것을 반드 시 추론하는 것은 아니다. 본 명세서에서 사용되는 바와 같이, 임의의 부분이 다른 부분과 \"접촉\"한다는 기재 는 두 개의 부분 사이에 중간 부분이 없음을 의미하는 것으로 정의된다. 구체적으로 달리 언급되지 않는 한, \"제1\", \"제2\", \"제3\" 등과 같은 서술어들은 어떤 식으로든 우선순위, 물리 적 순서, 리스트 내의 배열, 및/또는 순서화의 임의의 의미를 부여하거나 달리 지시하지 않고 본 명세서에서 사 용되지만, 단지 개시된 예들의 이해의 편의를 위해 요소들을 구별하기 위한 라벨들 및/또는 임의의 명칭들로서 사용된다. 일부 예들에서, 서술어 \"제1\"은 상세한 설명에서의 요소를 지칭하기 위해 사용될 수 있고, 동일한 요소는 청구항에서 \"제2\" 또는 \"제3\"과 같은 상이한 서술어로 지칭될 수 있다. 이러한 경우들에서, 이러한 서 술어들은 그 요소들을 뚜렷하게 식별하기 위해서만 사용된다(예를 들어, 그렇지 않으면 동일한 명칭을 공유할 수 있다)는 점이 이해되어야 한다. 본 명세서에서 사용되는 바와 같이, \"대략\" 및 \"약\"은 제조 공차 및/또는 다른 실세계의 불완전성으로 인해 정확하지 않을 수 있는 치수들을 지칭한다. 본 명세서에서 사용되는 바와 같 이, \"실질적으로 실시간\"은 컴퓨팅 시간, 송신 등에 대한 실세계 지연이 있을 수 있다는 것을 인식하는 거의 순 간적인 방식의 발생(occurrence in a near instantaneous manner)을 지칭한다. 따라서, 달리 명시되지 않는 한, \"실질적으로 실시간\"은 실시간 +/- 1초를 지칭한다. 본 명세서에서 사용되는 바와 같이, 그 변형들을 포함 한 \"통신 중\"이라는 문구는, 하나 이상의 중간 컴포넌트를 통한 직접 통신 및/또는 간접 통신을 포함하고, 직접 물리(예를 들어, 유선) 통신 및/또는 일정한 통신을 요구하지 않고, 오히려 주기적 간격들, 스케줄링된 간격들, 비주기적 간격들, 및/또는 일회성 이벤트들에서의 선택적 통신을 추가적으로 포함한다. 본 명세서에서 사용되 는 바와 같이, \"프로세서 회로\"는 (i) 하나 이상의 반도체 기반 로직 디바이스(예를 들어, 하나 이상의 트랜지 스터에 의해 구현되는 전기 하드웨어)를 포함하고 특정 동작(들)을 수행하도록 구조화된 하나 이상의 특수 목적 전기 회로, 및/또는 (ii) 하나 이상의 반도체 기반 로직 디바이스(예를 들어, 하나 이상의 트랜지스터에 의해 구현되는 전기 하드웨어)를 포함하고 특정 동작들을 수행하기 위한 명령어들로 프로그래밍된 하나 이상의 범용 반도체 기반 전기 회로를 포함하는 것으로 정의된다. 프로세서 회로의 예들은 프로그래밍된 마이크로프로세서 들, 명령어들을 인스턴스화할 수 있는 필드 프로그램가능 게이트 어레이(Field Programmable Gate Array, FPGA)들, 중앙 프로세서 유닛(Central Processor Unit, CPU)들, 그래픽 프로세서 유닛(Graphics Processor Unit, GPU)들, 디지털 신호 프로세서(Digital Signal Processor, DSP)들, XPU들, 또는 마이크로컨트롤러들 및 주문형 집적 회로(Application Specific Integrated Circuit, ASIC)들과 같은 집적 회로들을 포함한다. 예를 들어, XPU는 다수의 타입들의 프로세서 회로(예를 들어, 하나 이상의 FPGA, 하나 이상의 CPU, 하나 이상의 GPU, 하나 이상의 DSP 등, 및/또는 이들의 조합) 및 컴퓨팅 태스크(들)를 실행하기에 가장 적합한 처리 회로의 다수 의 타입들 중 어느 하나(들)에 컴퓨팅 태스크(들)를 할당할 수 있는 애플리케이션 프로그래밍 인터페이스 (들)(API(들))를 포함하는 이종 컴퓨팅 시스템에 의해 구현될 수 있다."}
