{"patent_id": "10-2023-0098229", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0017459", "출원번호": "10-2023-0098229", "발명의 명칭": "컴퓨팅 장치의 데이터를 수집하기 위한 방법 및 장치", "출원인": "포티투닷 주식회사", "발명자": "최성용"}}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치의 데이터를 수집하기 위한 방법으로서,상기 컴퓨팅 장치의 리셋에 대응하여, 상기 리셋이 웜(warm) 리셋에 해당하는지 여부를 결정하는 단계;상기 리셋이 웜 리셋에 해당하는 경우, 오류 덤프(error dump) 데이터를 로드하는 단계;상기 오류 덤프 데이터에 기초하여, 확장된(extended) 오류 덤프 데이터를 생성 및 저장하고, 커널을 로드하는단계; 및상기 오류 덤프 데이터를 초기화하는 단계;를 포함하되,상기 오류 덤프 데이터는, 휘발성 메모리에 기록된 것이고,상기 확장된 오류 덤프 데이터는,비휘발성 메모리에 저장되는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 확장된 오류 덤프 데이터를 저장하는 단계는,부트로더(bootloader)의 로그를 저장하는 단계;를 포함하는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서,상기 리셋이 콜드(cold) 리셋에 해당하는지 여부를 결정하는 단계; 및상기 리셋이 콜드 리셋에 해당하는 경우, 리셋 원인, 리셋 일시 및 온도 정보에 기초하여 상기 오류 덤프 데이터를 생성하는 단계;를 더 포함하는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1 항에 있어서,상기 리셋이 웜 리셋인지 여부는,공개특허 10-2025-0017459-3-상기 휘발성 메모리의 보존 영역(reserved region)의 데이터의 유효성을 검증하여 결정되는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3 항에 있어서,상기 리셋이 콜드 리셋인지 여부는,리셋 원인 레지스터(reset-reason-resiter)에 기초하여 결정되는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서,상기 컴퓨팅 장치의 상태를 획득하기 위한 스냅(snap) 트리거가 발생하는 경우,상기 스냅 트리거를 수신하는 단계;상기 스냅 트리거에 대응하여, 상기 컴퓨팅 장치의 상태에 기초하여 상기 오류 덤프 데이터를 생성 및 기록하는단계; 및상기 오류 덤프 데이터에 기초하여, 상기 확장된 오류 덤프 데이터를 생성 및 저장하는 단계; 를 더 포함하는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 항에 있어서,신규 리셋이 발생하는 경우,상기 신규 리셋이 예정된 리셋인지 여부를 결정하는 단계;상기 신규 리셋이 예정되지 않은 리셋인 경우, 호출 추적(call trace)이 가능한지 여부를 확인하는 단계; 및상기 호출 추적이 가능한 경우, 상기 호출 추적에 기초하여 상기 오류 덤프 데이터를 생성 및 기록하는 단계; 를 더 포함하는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7 항에 있어서,상기 신규 리셋이 예정된 리셋인 경우, 상기 호출 추적 없이 상기 오류 덤프 데이터를 생성 및 기록하는 단계;를 더 포함하는,방법."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "공개특허 10-2025-0017459-4-컴퓨팅 장치의 데이터를 수집하기 위한 장치에 있어서,적어도 하나의 프로그램이 저장된 메모리; 및상기 적어도 하나의 프로그램을 실행함으로써 동작하는 프로세서;를 포함하되,상기 프로세서는,상기 컴퓨팅 장치의 리셋에 대응하여, 상기 리셋이 웜 리셋에 해당하는지 여부를 결정하고,상기 리셋이 웜 리셋에 해당하는 경우, 오류 덤프 데이터를 로드하며,상기 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이터를 생성 및 저장하고, 커널을 로드하며,상기 오류 덤프 데이터를 초기화하되,상기 오류 덤프 데이터는, 휘발성 메모리에 기록된 것이고,상기 확장된 오류 덤프 데이터는,비휘발성 메모리에 저장되는,장치."}
{"patent_id": "10-2023-0098229", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 항에 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록매체."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 컴퓨팅 장치의 데이터를 수집하기 위한 방법 및 장치에 관한 것이다. 본 개시의 일 실시예에 따른 컴 퓨팅 장치의 데이터를 수집하기 위한 방법은 컴퓨팅 장치의 리셋에 대응하여, 리셋이 웜(warm) 리셋에 해당하는 지 여부를 결정하고, 리셋이 웜 리셋에 해당하는 경우, 오류 덤프(error dump) 데이터를 로드하며, 오류 덤프 데 이터에 기초하여, 확장된(extended) 오류 덤프 데이터를 생성 및 저장하고, 커널을 로드하며, 오류 덤프 데이터 를 초기화하되, 오류 덤프 데이터는 휘발성 메모리에 기록된 것이고, 확장된 오류 덤프 데이터는 비휘발성 메모 리에 저장될 수 있다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 컴퓨팅 장치의 데이터를 수집하기 위한 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨팅 장치가 동작하는 중, 여러 이유로 컴퓨팅 장치에 의도된 셧다운 또는 리셋이 실행될 수도 있고, 메모리 침범, 과다한 인터럽트 발생 등 예기치 못한 원인들로 인해 컴퓨팅 장치에 비정상적인 셧다운 또는 리셋이 발생 할 수 있다. 특히, 차량에 탑재된 컴퓨팅 장치의 경우, 차량은 다양한 환경에서 주행되기 때문에, 주변의 온도, 차량에 발생 하는 진동, 전원 상태 등 컴퓨팅 장치가 비정상적으로 셧다운 또는 리셋되는 상황이 많이 발생할 수 있다. 셧다운 또는 리셋이 의도된 것이든 비정상적인 것이든, 셧다운 또는 리셋이 발생하는 경우, 셧다운 또는 리셋 전의 데이터를 복구하고, 셧다운 또는 리셋 전의 동작 상태로 되돌리는 것이 중요할 수 있다. 또한, 셧다운 또는 리셋이 발생하는 경우, 셧다운 또는 리셋의 원인을 분석 및 파악하는 것이 추가적인 셧다운 또는 리셋을 방지하기 위해 중요하고, 셧다운 또는 리셋의 원인을 분석 및 파악하기 위해서도 데이터를 보존하 는 것이 중요할 수 있다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "전술한 배경기술은 발명자가 본 발명의 도출을 위해 보유하고 있었거나, 본 발명의 도출 과정에서 습득한 기술 정보로서, 반드시 본 발명의 출원 전에 일반 공중에게 공개된 공지기술이라 할 수는 없다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시의 목적은 컴퓨팅 장치의 데이터를 수집하기 위한 방법 및 장치를 제공하는 데 있다. 본 개시가 해결하 고자 하는 과제는 이상에서 언급한 과제에 한정되지 않으며, 언급되지 않은 본 개시의 다른 과제 및 장점들은하기의 설명에 의해서 이해될 수 있고, 본 개시의 실시예에 의해 보다 분명하게 이해될 것이다. 또한, 본 개시 가 해결하고자 하는 과제 및 장점들은 특허 청구범위에 나타난 수단 및 그 조합에 의해 실현될 수 있음을 알 수 있을 것이다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 제1 측면은, 컴퓨팅 장치의 데이터를 수집하기 위한 방법으로서, 상기 컴퓨팅 장치의 리셋에 대응하 여, 상기 리셋이 웜(warm) 리셋에 해당하는지 여부를 결정하는 단계; 상기 리셋이 웜 리셋에 해당하는 경우, 오 류 덤프(error dump) 데이터를 로드하는 단계; 상기 오류 덤프 데이터에 기초하여, 확장된(extended) 오류 덤프 데이터를 생성 및 저장하고, 커널을 로드하는 단계; 및 상기 오류 덤프 데이터를 초기화하는 단계;를 포함하되, 상기 오류 덤프 데이터는, 휘발성 메모리에 기록된 것이고, 상기 확장된 오류 덤프 데이터는, 비휘발성 메모리 에 저장되는 방법을 제공할 수 있다. 본 개시의 제2 측면은, 컴퓨팅 장치의 데이터를 수집하기 위한 장치에 있어서, 적어도 하나의 프로그램이 저장 된 메모리; 및 상기 적어도 하나의 프로그램을 실행함으로써 동작하는 프로세서;를 포함하되, 상기 프로세서는, 상기 컴퓨팅 장치의 리셋에 대응하여, 상기 리셋이 웜 리셋에 해당하는지 여부를 결정하고, 상기 리셋이 웜 리 셋에 해당하는 경우, 오류 덤프 데이터를 로드하며, 상기 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이 터를 생성 및 저장하고, 커널을 로드하며, 상기 오류 덤프 데이터를 초기화하되, 상기 오류 덤프 데이터는, 휘 발성 메모리에 기록된 것이고, 상기 확장된 오류 덤프 데이터는, 비휘발성 메모리에 저장되는 장치를 제공할 수 있다. 본 개시의 제3 측면은, 제1 측면에 따른 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록 매체를 제공할 수 있다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시예에 따르면, 특정 상황에 따라 리셋 원인을 분석하기 위한 데이터를 생성하고 저장함으 로써, 리셋에 따른 데이터 유실이 방지될 수 있다. 특히, 데이터가 비휘발성 메모리에 저장되도록 하여, 데이터 유실이 효과적으로 대비될 수 있다. 특히, 본 개시의 다양한 실시예는, 컴퓨팅 장치가 이상적이거나 안정한 환경이 아닌 다양한 주행 환경에서 운영 되는 차량에 탑재되는 경우, 더 효과적일 수 있다. 또한, 확장된 오류 덤프 데이터를 통해, 리셋 원인을 분석하기 위한 데이터에 다양한 정보가 포함될 수 있다. 특히, 커널의 로그 및 부트로더의 로그가 리셋 원인을 분석하기 위한 데이터에 포함될 수 있어, 다각적이고 효 과적인 리셋 원인 분석이 가능할 수 있다."}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 설명되는 실시예들 을 참조하면 명확해질 것이다. 그러나 본 발명은 아래에서 제시되는 실시예들로 한정되는 것이 아니라, 서로 다 른 다양한 형태로 구현될 수 있고, 본 발명의 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 아래에 제시되는 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이"}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "속하는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이다. 본 발명을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 발명의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 본 출원에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함 하다\" 또는 \"가지다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조 합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시의 일부 실시예는 기능적인 블록 구성들 및 다양한 처리 단계들로 나타내어질 수 있다. 이러한 기능 블 록들의 일부 또는 전부는, 특정 기능들을 실행하는 다양한 개수의 하드웨어 및/또는 소프트웨어 구성들로 구현 될 수 있다. 예를 들어, 본 개시의 기능 블록들은 하나 이상의 마이크로프로세서들에 의해 구현되거나, 소정의 기능을 위한 회로 구성들에 의해 구현될 수 있다. 또한, 예를 들어, 본 개시의 기능 블록들은 다양한 프로그래 밍 또는 스크립팅 언어로 구현될 수 있다. 기능 블록들은 하나 이상의 프로세서들에서 실행되는 알고리즘으로 구현될 수 있다. 또한, 본 개시는 전자적인 환경 설정, 신호 처리, 및/또는 데이터 처리 등을 위하여 종래 기 술을 채용할 수 있다. \"매커니즘\", \"요소\", \"수단\" 및 \"구성\"등과 같은 용어는 넓게 사용될 수 있으며, 기계적 이고 물리적인 구성들로서 한정되는 것은 아니다. 또한, 도면에 도시된 구성 요소들 간의 연결 선 또는 연결 부재들은 기능적인 연결 및/또는 물리적 또는 회로적 연결들을 예시적으로 나타낸 것일 뿐이다. 실제 장치에서는 대체 가능하거나 추가된 다양한 기능적인 연결, 물 리적인 연결, 또는 회로 연결들에 의해 구성 요소들 간의 연결이 나타내어질 수 있다. 이하에서, '차량'은 자동차, 버스, 오토바이, 킥보드 또는 트럭과 같이 기관을 가지고 사람이나 물건을 이동시 키기 위해 이용되는 모든 종류의 운송 수단을 의미할 수 있다. 이하 첨부된 도면을 참고하여 본 개시를 상세히 설명하기로 한다. 도 1은 일 실시예에 따른 차량 및 관제 서버를 포함하는 시스템의 일 예시를 나타내는 도면이다. 일 실시예에 따른 시스템은 하나 이상의 차량 및 관제 서버를 포함할 수 있다. 하나 이상의 차량은 네트워크를 통하여 서로 간에 통신하거나, 다른 노드와 통신할 수 있다. 하나 이상의 차량은 하나 이상의 차량 각각에 탑재된 장치로 이해될 수도 있다. 일 실시예에서, 하나 이상의 차량 각각에 탑재된 장치는 자율 주행 장치를 포함할 수 있다. 자율 주행 장 치는 하나 이상의 차량 각각에 장착되어 자율 주행 차량을 구현하도록 구성되는 장치를 지칭할 수 있다. 하나 이상의 차량 각각에 탑재된 장치는 주변의 상황 정보를 수집하기 위한 다양한 센서(카메라를 포함함)들을 포함할 수 있다. 예를 들어, 하나 이상의 차량 각각에 탑재된 장치는 하나 이상의 차량 각각의 전면에 장착된 이미지 센서 및/또는 이벤트 센서를 통해, 전방에서 운행 중인 선행 차량의 움직 임을 감지할 수 있다. 하나 이상의 차량 각각에 탑재된 장치는 하나 이상의 차량 각각의 전면은 물 론, 옆 차로에서 운행 중인 다른 차량과, 하나 이상의 차량 각각의 주변의 보행자 등을 감지하기 위한 센 서들을 더 포함할 수 있다. 하나 이상의 차량 각각에 탑재된 장치는 하나 이상의 차량 각각의 주변 의 정보를 수집하기 위한 다양한 종류의 센서들을 더 포함할 수 있다. 도 2는 일 실시예에 따른 차량에 탑재된 장치를 개략적으로 도시하는 도면이다. 도 2의 차량에 탑재된 장치는 도 1을 참조하여 전술한 하나 이상의 차량 각각에 탑재된 장치일 수 있 다. 도 2를 참조하면, 차량에 탑재된 장치는 센서부, 프로세서 및 메모리 시스템 등을 포함할 수 있다. 차량에 탑재된 장치는 차체 제어 모듈(body control module, BCM)(미도시)을 더 포함할 수 있다. 센서부는 복수의 센서(카메라를 포함함)(42-45)를 포함하며, 복수의 센서들(42-45)은 이미지 센서, 이벤트 센서, 조도 센서, GPS 장치, 가속도 센서 등 차량 자체에 관한 정보 또는 차량 주변 환경에 관한 정보를 수집하 기 위한 센서를 포함할 수 있다. 센서들(42-45)이 수집한 데이터는 프로세서로 전달될 수 있다. 프로세서는 센서들(42-45)이 수집한 데 이터를 메모리 시스템에 저장하고, 센서들(42-45)이 수집한 데이터에 기초하여 차체 제어 모듈을 제어하여 차량의 움직임을 결정할 수 있다. 메모리 시스템은 둘 이상의 메모리 장치들과, 메모리 장치들을 제어하기 위한 시스템 컨트롤러를 포함할 수 있다. 메모리 장치들 각각은 하나의 반도체 칩으로 제공될 수 있다. 메모리 시스템의 시스템 컨트롤러 외에, 메모리 시스템에 포함되는 메모리 장치들 각각은 메모리 컨트 롤러를 포함할 수 있으며, 메모리 컨트롤러는 신경망과 같은 인공지능(AI) 연산 회로를 포함할 수 있다. 메모리 컨트롤러는 센서들(42-45) 또는 프로세서로부터 수신한 데이터에 소정의 가중치를 부여하여 연산 데이터를 생성하고, 연산 데이터를 메모리 칩에 저장할 수 있다. 다시 도 1로 돌아와서, 하나 이상의 차량 각각에 탑재된 장치는 다양한 센서로부터 수집된 데이터를 다른 차량에 탑재된 장치 또는 관제 서버로 전송할 수 있다. 구체적으로, 하나 이상의 차량 각각에 탑재된 장치는 스마트폰, 태블릿 PC, PC, 스마트 TV, 휴대폰, 랩톱 및 기타 모바일 또는 비모바일 컴퓨팅 디바이스일 수 있다. 또한, 하나 이상의 차량 각각에 탑재된 장치 는 통신 기능 및 데이터 프로세싱 기능을 구비한 안경, 헤어 밴드 등의 웨어러블 디바이스일 수 있다. 하나 이 상의 차량 각각에 탑재된 장치는 네트워크를 통해 다른 장치와 통신을 수행할 수 있는 모든 종류의 디바 이스를 포함할 수 있다. 예를 들어, 하나 이상의 차량 각각에 탑재된 장치는 터치 스크린을 구비하여 터치 입력 수단을 포함할 수 있다. 터치 스크린은 사용자의 제스처를 통해 소정의 정보가 입력될 수 있는 화면을 의미하며, 사용자의 제스처 에는 탭(tap), 더블 탭(double tap), 프레스(press: touch&hold), 롱 프레스(long press), 드래그(drag), 패닝 (panning), 플릭(flick), 드래그 앤 드롭(drag&drop), 릴리스(release) 등이 있을 수 있다. 관제 서버는 네트워크를 통해, 통신하여 명령, 코드, 파일, 컨텐츠, 서비스 등을 제공하는 컴퓨터 장치 또는 복수의 컴퓨터 장치들로 구현될 수 있다. 하나 이상의 차량 및 관제 서버는 네트워크를 이용하여 통신을 수행할 수 있다. 관제 서버는 네트워크를 통하여 하나 이상의 차량과 데이터를 송수신하며, 관제 서버의 다양한 관제 기능을 수 행하거나, 하나 이상의 차량의 주행을 돕는 역할을 수행할 수 있다. 하나 이상의 차량에서 수집되어 네트워크를 통해 전송될 수 있는 데이터는, 차량의 연식, 종류 등과 같은 하나 이상의 차량 자체에 관한 데이터, 차량의 주변 환경과 관련하여 수집된 데이터, 온도, 연료량 등과 같은 하나 이상의 차량 내부의 상태를 확인하기 위해 수집된 데이터, 운전자, 동승자 등과 같은 하나 이 상의 차량과 연관된 사람에 관한 데이터 등을 포함할 수 있다. 이하에서, 본 개시의 다양한 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 수행하는 동작들이 설명된다. 본 개시의 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 도 1의 하나 이상의 차량 각각에 탑 재된 장치이거나 또는 하나 이상의 차량 각각에 탑재된 장치와 개별적으로 구비된 장치일 수 있다. 또는, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 하나 이상의 차량 각각에 탑재된 장치에 포함되는 것으로 이해될 수 있다. 한편, 데이터 복구의 대상이 되는 컴퓨팅 장치는 도 1의 하나 이상의 차량 각각에 탑재된 장치이거나, 차 량 각각에 탑재된 장치에 포함된 장치일 수 있다. 이에 따라, 컴퓨팅 장치의 데이터를 수집하기 위한 동 작의 주체가 되는 장치와 객체가 되는 장치는 동일한 장치일 수도 있고, 별개의 장치일 수도 있다. 이하에서, \"리셋\"은 사용자의 조작에 의하거나, 컴퓨팅 장치에서 실행되는 프로그램에 의하거나, 예기치 못한 원인에 의하거나 무관하게, 컴퓨팅 장치의 전원이 오프(Off)되고 다시 온(On)되는 것을 의미할 수 있다. 본 개시의 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 컴퓨팅 장치의 리셋에 대비하여 데이터를 생성 및 기 록할 수 있다. 본 개시의 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 컴퓨팅 장치의 리셋이 발생하는 경우, 발생한 컴퓨팅 장치의 리셋의 유형을 분석할 수 있다. 본 개시의 컴퓨팅 장치의 데이터를 수집하기 위한 장치는리셋의 유형에 기초하여, 적합한 방식으로, 컴퓨팅 장치의 리셋에 대비하여 생성 및 기록된 데이터를 로드하여 다른 메모리에 저장할 수 있다. 전술한 바와 같이, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 컴퓨팅 장치의 리셋에 대비하여 데이터를 생 성 및 기록할 수 있다. 본 개시에서, 오류 덤프 데이터는 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 컴퓨팅 장치의 리셋의 대비하여 생성 및 기록하는 데이터를 의미할 수 있다. 오류 덤프 데이터는 컴퓨팅 장치의 리셋 원인을 분석하기 위한 기본적인 데이터일 수 있다. 일 실시예에서, 오류 덤프 데이터의 구조는 고정 너비(fixed-width) 자료형의 데이터를 포함하도록 형성될 수 있다. 오류 덤프 데이터의 구조의 일 예시는 아래 표 1과 같이 표현될 수 있다. 표 1"}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "표 1의 예시에서, 오류 덤프 데이터의 구조 내에서 사용되는 변수에 대응하는 데이터의 종류는 아래의 표 2와 같이 나타낼 수 있다.표 2"}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "표 2에서, 키(key) 값은 후술할 바와 같이, 데이터의 유효성을 검증하는 기초가 되는 값을 의미할 수 있다. 일 실시예에서, 오류 덤프 데이터는 휘발성 메모리에 기록될 수 있다. 즉, 일 실시예에서, 컴퓨팅 장치의 데이 터를 수집하기 위한 장치는 생성된 오류 덤프 데이터를 휘발성 메모리에 기록할 수 있다. 오류 덤프 데이터는 전술한 오류 덤프 데이터의 구조에 기초하여 휘발성 메모리에 기록될 수 있다. 예를 들어, 휘발성 메모리는 DRAM(dynamic random access memory), SRAM(static random access memory) 등과 같은 RAM(random access memory), 캐시(cache) 메모리, 그래픽 카드 메모리, 동적 RAM 디스크 등을 포함할 수 있다. 본 개시에서, 오류 덤프 데이터와 구분되는 개념으로서, 확장된(extended) 오류 덤프 데이터가 설명된다. 본 개 시에서, 확장된 오류 덤프 데이터는, 컴퓨팅 장치의 리셋 원인을 효과적으로 분석하기 위해, 오류 덤프 데이터 외에, 추가적인 기록을 더 포함할 수 있다. 확장된 오류 덤프 데이터에 포함될 수 있는 추가적인 기록은, 커널 (kernel)의 로그 및 부트로더(bootloader)의 로그를 포함할 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터의 구조는 전술한 오류 덤프 데이터의 구조보다 확장된 구조를 가질 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터의 구조는 전술한 오류 덤프 데이터의 구조에 추가적으로, 가변 너비(variable-width) 자료형의 데이터를 포함하도록 형성될 수 있다. 예를 들어, 확장된 오류 덤프 데이터의 구조는 문자열 데이터를 포함하도록 형성될 수 있다. 예를 들어, 커널의 로그 및 부트로더의 로그는 문자열 데 이터일 수 있다. 확장된 오류 덤프 데이터의 구조의 일 예시는 아래 표 3과 같이 표현될 수 있다. 표 3"}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "본 개시에서, 확장된 오류 덤프 데이터는 비휘발성 메모리에 저장될 수 있다. 즉, 일 실시예에서, 컴퓨팅 장치 의 데이터를 수집하기 위한 장치는 오류 덤프 데이터를 로드하여, 확장된 오류 덤프 데이터를 생성하고, 비휘발 성 메모리에 저장할 수 있다. 확장된 오류 덤프 데이터는 전술한 확장된 오류 덤프 데이터의 구조에 기초하여 비휘발성 메모리에 저장될 수 있다. 예를 들어, 비휘발성 메모리는 HDD(hard disk drive), SSD(solid state drive), 플래시 메모리, eMMC(embedded multimedia card), EEPROM(electrically erasable programmable read-only memory) 등을 포함할 수 있다. 일 실시예에서, 저장된 확장된 오류 덤프 데이터는 사용자에 의해 조회될 수 있다. 예를 들어, 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 사용자는 비휘발성 메모리에 저장된 확장된 오류 덤프 데이터를 조회할 수 있다. 사용자는 확장된 오류 덤프 데이터를 통해, 컴퓨팅 장치에 의해 생성된 리셋 원인을 분석하기 위한 다양 한 정보를 확인할 수 있다. 도 3 및 도 4을 참조한 설명은 컴퓨팅 장치의 리셋이 발생한 후, 부팅이 완료되기까지의 과정에 관한 것이다. 도 3은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 컴퓨팅 장치의 리셋에 대응 하여 커널을 로드하는 과정을 설명하기 위한 순서도이다. 도 3에 도시된 커널을 로드하는 과정은 컴퓨팅 장치의 리셋이 발생한 후에 수행되는 것으로 이해될 수 있다. 도 3을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 컴퓨팅 장치의 리셋에 대응하 여, 리셋이 웜(warm) 리셋에 해당하는지 여부를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 보존된 데이터의 유효성을 검증함으로써, 리셋 이 웜 리셋에 해당하는지 여부를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치 는 보존된 데이터가 유효하다고 결정하는 경우, 리셋이 웜 리셋에 해당하는 것으로 결정할 수 있다. 일 실시예 에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 보존된 데이터가 유효하지 않다고 결정하는 경우, 리셋이 콜드(cold) 리셋에 해당하는 것으로 결정할 수 있다. 일 실시예에서, 보존된 데이터는 휘발성 메모리(예컨대, DRAM)의 보존 영역(reserved region)에 보존된 데이터 일 수 있다. 즉, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 휘발성 메모리의 보존 영역에 보존된 데이터의 유효성을 검증할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 보존된 데이터의 키 (key) 값에 기초하여 데이터의 유효성을 검증할 수 있다. 키 값은 데이터가 유효한 경우 값을 갖는 잉여 (redundant) 데이터의 값으로, 예를 들어, 데이터의 첫번째 값을 의미할 수 있다. 즉, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 보존된 데이터의 첫번째 값이 1인 경우, 보존된 데이터가 유효하다고 결정하고, 보존된 데이터의 첫번째 값이 0인 경우, 보존된 데이터가 유효하지 않다고 결정할 수 있다. 도 3을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 리셋이 웜 리셋에 해당하는 경우, 오류 덤프 데이터를 로드할 수 있다. 일 실시예에서, 오류 덤프 데이터는 휘발성 메모리에 기록되었 던 것일 수 있다. 후술할 바와 같이, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 로드하 는 것은, 이후에 확장된 오류 덤프 데이터를 생성하기 위한 것일 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 로드하는 것은 커널의 로그를 로드하는 것을 포함할 수 있다. 오류 덤프 데이터와 함께 커널(kernel)의 로그가 기록된 경우, 커널의 로그도 함께 로드될 수 있다. 도 3을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 리셋이 웜 리셋에 해당하지 않 는 경우, 오류 덤프 데이터를 로드하는 것을 생략할 수 있다. 리셋이 웜 리셋에 해당하지 않는 경우는, 리 셋이 콜드 리셋에 해당하는 경우에 대응될 수 있다. 도 3을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 확장된 오류 덤프 데이터를 생 성 및 저장할 수 있다. 도 3에 도시된 바와 같이, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 확장된 오류 덤프 데이터를 생성 및 저장하는 것은 리셋이 웜 리셋에 해당하는지 여부와 무관하게 수행될 수 있다. 다만, 리셋이 웜 리셋에 해 당하는 경우, 즉 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 로드한 경우, 확장된 오류 덤프 데이터는 오류 덤프 데이터를 포함할 수 있다. 반면, 리셋이 웜 리셋에 해당하지 않는 경우, 즉 컴퓨 팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 로드하는 것을 생략한 경우, 확장된 오류 덤프 데이터는 오류 덤프 데이터를 포함하지 않을 수 있다. 이 경우, 확장된 오류 덤프 데이터의 구조 내 오류 덤프 데이터에 해당하는 부분은 공백일 수 있다. 전술한 바와 같이, 확장된 오류 덤프 데이터는 부트로더의 로그를 포함할 수 있다. 일 실시예에서, 컴퓨팅 장치 의 데이터를 수집하기 위한 장치가 확장된 오류 덤프 데이터를 생성 및 저장하는 것은 부트로더의 로그를 저장하는 것을 포함할 수 있다. 전술한 커널의 로그가 로드된 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 확장된 오류 덤프 데 이터를 생성 및 저장하는 것은 커널의 로그를 저장하는 것을 포함할 수 있다. 도 3을 참조하면, 일 실시예에서, 확장된 오류 덤프 데이터를 생성 및 저장한 후, 컴퓨팅 장치의 데이터를 수집 하기 위한 장치는 커널을 로드할 수 있다. 커널은 컴퓨터의 운영 체제에서 핵심 부분을 담당하는 소프트웨 어를 지칭할 수 있다. 도 4는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 복구하기 위한 장치가 루트 파일 시스템(root file system)을 로드하는 과정을 설명하기 위한 순서도이다. 도 4에 도시된 루트 파일 시스템을 로드하는 과정은 컴퓨팅 장치의 리셋이 발생한 후에 수행되는 것으로 이해될 수 있다. 도 4를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 커널이 로드된 후, 오류 덤프 데이터를 초기화할 수 있다. 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 새로운 정보에 기초하여 오류 덤프 데이터를 생성하고 기록하기 위해, 오류 덤프 데이터를 초기화할 수 있다. 도 4를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 오류 덤프 데이터를 초기화한 후, 리셋이 콜드 리셋에 해당하는지 여부를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 리셋 원인 레지스터(reset-reason-register)에 기초하여, 리셋이 콜드 리셋에 해당하는지 여부를 결정할 수 있다. 리셋 원인 레지스터는 리셋의 원인이 기록되 는 장소를 지칭할 수 있다.도 4를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 리셋이 콜드 리셋에 해당하는 경우, SoC(system on chip)의 정보에 기초하여 오류 덤프 데이터를 생성할 수 있다. 구체적인 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 리셋이 콜드 리셋에 해당하는 경우, SoC의 리셋 원인과 리셋 일 시 및 SoC의 온도 정보에 기초하여 오류 덤프 데이터를 생성할 수 있다. 일 실시예에서, 생성된 오류 덤프 데이 터는 휘발성 메모리에 기록될 수 있다. 도 4를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 리셋이 콜드 리셋에 해당하지 않는 경우, 오류 덤프 데이터를 생성하는 것을 생략할 수 있다. 리셋이 콜드 리셋에 해당하지 않는 경우는, 리셋이 웜 리셋에 해당하는 경우에 대응될 수 있다. 도 4를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 복구하기 위한 장치는 루트 파일 시스템을 로드(45 0)할 수 있다. 루트 파일 시스템은 파일 시스템의 최상위 계층으로, 시스템의 모든 파일과 디렉토리를 구성하는 데 사용되는 파일 시스템을 의미할 수 있다. 컴퓨팅 장치의 데이터를 복구하기 위한 장치는 루트 파일 시스템을 로드함으로써, 파일 시스템의 모든 리소스에 대한 접근을 준비할 수 있다. 도 4에 도시된 바와 같이, 컴퓨팅 장치의 데이터를 복구하기 위한 장치가 루트 파일 시스템을 로드하는 것 은 리셋이 콜드 리셋에 해당하는지 여부와 무관하게 수행될 수 있다. 한편, 일 실시예에서, 리셋이 콜드 리셋에 해당하는 경우, 컴퓨팅 장치의 데이터를 복구하기 위한 장치가 루트 파일 시스템을 로드한 이후, 오류 덤프 데이터는 비휘발성 메모리에 저장될 수 있다. 구체적으로, 일 실시 예에서, 컴퓨팅 장치의 데이터를 복구하기 위한 장치는 생성된 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이터를 생성 및 저장할 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터는 비휘발성 메모리에 저장될 수 있 다. 도 5 및 도 6을 참조한 설명은 컴퓨팅 장치가 부팅된 후 특정 상황이 발생한 경우 리셋 원인을 분석하기 위해 데이터를 관리(예컨대, 생성, 기록 또는 저장 등)하는 과정에 관한 것이다. 도 5는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가, 스냅 트리거(snap trigge r)가 발생한 경우, 리셋 원인을 분석하기 위한 데이터를 관리하는 과정을 설명하기 위한 순서도이다. 도 5를 참조하면, 일 실시예에서, 스냅 트리거가 발생하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 스냅 트리거를 수신할 수 있다. 본 개시에서, 스냅 트리거는 컴퓨팅 장치의 상태를 획득하기 위한 신호 또는 명령을 지칭할 수 있다. 스냅은 특 정 시점에서의 시스템의 상태, 정보 등을 획득하는 것을 의미할 수 있다. 스냅 트리거는 사전 설정된 조건이 충 족되거나 사용자의 호출에 의해 발생할 수 있다. 도 5를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 스냅 트리거에 대응하여, 컴 퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록할 수 있다. 일 실시예에서, 오류 덤프 데 이터는 휘발성 메모리에 기록될 수 있다. 일 실시예에서, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류는 사전 설정될 수 있다. 예를 들어, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류는 SoC의 리셋 원인, 리셋 일시 및 SoC 의 온도에 관한 정보, 구동되는 응용프로그램의 가상(virtual) 메모리 및 물리(physical) 메모리 할당에 관한 정보, 저장 장치 내 파티션 별 사용율에 관한 정보, 스케줄링된 태스크의 히스토리 및 할당된 코어에 관한 정보, 태스크들의 리소스 점유율에 관한 정보, 인터럽트(interrupt) 별 동작 시간과 횟수에 관한 정보 등을 포 함할 수 있다. 생성 및 기록된 오류 덤프 데이터는 이후, 도 3 및 도 4를 참조하여 전술한 과정의 확장된 오류 덤프 데이터를 생성하고 저장하는 동작 또는 기타 리셋 원인의 분석의 기초가 될 수 있다. 도 5를 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이터를 생성 및 저장할 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터 는 비휘발성 메모리에 저장될 수 있다. 한편, 도 5에 도시된 과정은, 후술할 도 6에 도시된 과정과 달리, 신규 리셋이 발생한 경우에 관한 것이 아니기 때문에, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가, 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이 터를 생성 및 저장한 후, 컴퓨팅 장치는 지속적으로 운영될 수 있다. 도 6은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가, 신규 리셋이 발생한 경우, 리셋 원인을 분석하기 위한 데이터를 관리하는 과정을 설명하기 위한 순서도이다. 도 6을 참조하면, 일 실시예에서, 신규 리셋이 발생하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 신규 리셋이 예정된 리셋인지 여부를 결정할 수 있다. 도 6을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 신규 리셋이 예정된 리셋인 경우, 호출 추적(call trace) 없이 오류 덤프 데이터를 생성 및 기록할 수 있다. 호출 추적에 관한 설명은 후술하겠다. 본 실시예에서, 신규 리셋이 예정된 리셋인 경우, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 호출 추적이라 는 추가적인 과정 없이도 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성할 수 있으므로, 호출 추적은 생략될 수 있다. 본 실시예에서, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류는 사전 설정될 수 있다. 예를 들어, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류는 SoC의 리셋 원인, 리셋 일시 및 SoC 의 온도에 관한 정보, 구동되는 응용프로그램의 가상 메모리 및 물리 메모리 할당에 관한 정보, 저장 장치 내 파티션 별 사용율에 관한 정보, 스케줄링된 태스크의 히스토리 및 할당된 코어에 관한 정보, 태스크들의 리소스 점유율에 관한 정보, 인터럽트 별 동작 시간과 횟수에 관한 정보 등을 포함할 수 있다. 일 실시예에서, 생성된 오류 덤프 데이터는 휘발성 메모리에 기록될 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 휘발성 메모리에 기록하는 것은 커널의 로그를 기록하는 것을 포함할 수 있다. 즉, 일 실시예에서, 오류 덤프 데이터 및 커널의 로그가 휘 발성 메모리에 함께 기록될 수 있다. 도 6을 참조하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 생성 및 기록한 이후, 컴퓨팅 장치는 재부팅될 수 있다. 전술한 일련의 과정은 \"사용자 호출 리셋\" 과정으로 이해될 수 있다. 도 6을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 신규 리셋이 예정되지 않은 리셋인 경우, 호출 추적이 가능한지 여부를 확인할 수 있다. 도 6을 참조하면, 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 호출 추적이 가능한 경우, 호 출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록할 수 있다. 본 개시에서, 호출 추적은 프로그램이 실행되는 과정에서 함수 호출이 기록된 정보를 추적하는 것을 의미할 수 있다. 호출 추적을 통해 어떤 함수에서 오류 등이 발생하였는지 파악될 수 있다. 구체적으로, 호출 추적은 신규 리셋 발생 전 마지막에 프로세서가 수행한 동작을 추적하는 것을 포함할 수 있다. 마지막에 프로세서가 수행한 동작은 프로그램 카운터(program counter)를 통해 추적될 수 있다. 본 실시예에서, 호출 추적을 통해, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류는 사전 설 정될 수 있다. 예를 들어, 호출 추적을 통해, 오류 덤프 데이터 생성의 기초가 되는 컴퓨팅 장치의 상태의 종류 는 SoC의 리셋 원인, 리셋 일시 및 SoC의 온도에 관한 정보, 구동되는 응용프로그램의 가상 메모리 및 물리 메 모리 할당에 관한 정보, 저장 장치 내 파티션 별 사용율에 관한 정보, 스케줄링된 태스크의 히스토리 및 할당된 코어에 관한 정보, 태스크들의 리소스 점유율에 관한 정보, 인터럽트 별 동작 시간과 횟수에 관한 정보 등을 포 함할 수 있다. 일 실시예에서, 생성된 오류 덤프 데이터는 휘발성 메모리에 기록될 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 휘발성 메모리에 기록하는 것은 커널의 로그를 기록하는 것을 포함할 수 있다. 즉, 일 실시예에서, 오류 덤프 데이터 및 커널의 로그가 휘 발성 메모리에 함께 기록될 수 있다. 도 6을 참조하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 오류 덤프 데이터를 생성 및 기록한 이후, 컴퓨팅 장치는 재부팅될 수 있다. 전술한 일련의 과정은 \"예정되지 않은 웜 리셋\" 과정으로 이해될 수 있 다. 예를 들어, 예정되지 않은 리셋 과정은 커널에서 발생하는 예상하지 못한 동작이나 문제에 직면하여, 예외 적인 상황 또는 오류(kernel exception)가 발생하는 경우에 대응될 수 있다. 도 6을 참조하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 호출 추적이 불가능한 경우에는 별도의 과정 없이, 컴퓨팅 장치가 재부팅될 수 있다. 본 과정은 \"콜드 리셋\" 과정으로 이해될 수 있다. 본 개시에서, 도 6에 도시된 과정 이후 재부팅이 개시(start)되면, 도 3 및 도 4에 도시된 과정이 개시되는 것으로 이해될 수 있다. 전술한 바와 같이, 저장된 확장된 오류 덤프 데이터는 사용자에 의해 조회될 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터는 비휘발성 메모리에 저장될 수 있고, 사용자는 비휘발성 메모리를 통해 확장된 오류 덤프 데 이터를 조회할 수 있다. 본 개시에서, 사용자는 확장된 오류 덤프 데이터를 통해 다양한 정보를 확인할 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 SoC의 리셋 원인, 리셋 일시 및 SoC의 온도 정보를 포함할 수 있다. 일 실시예에서, SoC의 리셋 원인, 리셋 일시 및 SoC의 온도 정보는 도 4의 SoC의 정보 에 기초하여 오류 덤프 데이터 생성하는 과정, 도 5의 스냅 트리거에 대응하여 컴퓨팅 장치의 상태에 기초 하여 오류 덤프 데이터를 생성 및 기록하는 과정, 도 6의 호출 추적 없이 오류 덤프 데이터를 생성 및 기 록하는 과정 또는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득 될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 부트로더의 로그 또는 커널의 로그를 포함 할 수 있다. 일 실시예에서, 부트로더의 로그는 도 3의 확장된 오류 덤프 데이터 생성 및 저장하는 과정에 서 획득될 수 있다. 일 실시예에서, 커널의 로그는 도 6의 호출 추적 없이 오류 덤프 데이터를 생성 및 기록 하는 과정 또는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 구동되는 응용프로그램의 가상 메모리 및 물리 메모리 할당에 관한 정보를 포함할 수 있다. 일 실시예에서, 구동되는 응용프로그램의 가상 메모리 및 물 리 메모리 할당에 관한 정보는 도 5의 스냅 트리거에 대응하여, 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이 터를 생성 및 기록하는 과정, 도 6의 호출 추적 없이 오류 덤프 데이터를 생성 및 기록하는 과정 또 는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 저장 장치 내 파티션 별 사용율에 관한 정 보를 포함할 수 있다. 일 실시예에서, 저장 장치 내 파티션 별 사용율에 관한 정보는 도 5의 스냅 트리거에 대 응하여, 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정, 도 6의 호출 추적 없 이 오류 덤프 데이터를 생성 및 기록하는 과정 또는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생 성 및 기록하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 스케줄링된 태스크의 히스토리 및 할당된 코어에 관한 정보를 포함할 수 있다. 일 실시예에서 스케줄링된 태스크의 히스토리 및 할당된 코어에 관한 정보 는 도 5의 스냅 트리거에 대응하여, 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정, 도 6의 호출 추적 없이 오류 덤프 데이터를 생성 및 기록하는 과정 또는 도 6의 호출 추적에 기초하 여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 태스크들의 리소스 점유율에 관한 정보를 포함할 수 있다. 일 실시예에서, 태스크들의 리소스 점유율에 관한 정보는 도 5의 스냅 트리거에 대응하여, 컴 퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정, 도 6의 호출 추적 없이 오류 덤 프 데이터를 생성 및 기록하는 과정 또는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록 하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 인터럽트 별 동작 시간과 횟수에 관한 정보 를 포함할 수 있다. 일 실시예에서, 인터럽트 별 동작 시간과 횟수에 관한 정보는 도 5의 스냅 트리거에 대응하 여, 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정, 도 6의 호출 추적 없이 오류 덤프 데이터를 생성 및 기록하는 과정 또는 도 6의 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득될 수 있다. 예를 들어, 확장된 오류 덤프 데이터를 통해 확인될 수 있는 정보는 커널 재시동을 유발한 시스템 호출 추적에 관한 정보를 포함할 수 있다. 일 실시예에서, 커널 재시동을 유발한 시스템 호출 추적에 관한 정보는 도 6의 호 출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록하는 과정에서 획득될 수 있다. 본 개시에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 확장된 오류 덤프 데이터에 기초하여 분석 인터페 이스를 생성할 수 있다. 분석 인터페이스는 전술한 확장된 오류 덤프 데이터를 통해 확인할 수 있는 다양한 정 보를 표시하도록 구성될 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 생성된 분석 인터페이스를 표시할 수 있다. 도 7은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 방법의 흐름도이다. 도 7에 도시된 동작들은 전술한 컴퓨팅 장치의 데이터를 수집하기 위한 장치에 의하여 실행될 수 있다. 구체적 으로, 도 7에 도시된 동작들은 전술한 컴퓨팅 장치의 데이터를 수집하기 위한 장치에 포함된 프로세서에 의하여 실행될 수 있다. 단계 710에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 컴퓨팅 장치의 리셋에 대응하여, 리셋이 웜 리셋 에 해당하는지 여부를 결정할 수 있다. 단계 720에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 리셋이 웜 리셋에 해당하는 경우, 오류 덤프 데이 터를 로드할 수 있다. 일 실시예에서, 오류 덤프 데이터는 휘발성 메모리에 기록된 것일 수 있다. 일 실시예에서, 리셋이 웜 리셋인지 여부는 휘발성 메모리의 보존 영역의 데이터의 유효성을 검증하여 결정될 수 있다. 단계 730에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이터를 생성 및 저장하고, 커널을 로드할 수 있다. 일 실시예에서, 확장된 오류 덤프 데이터는 비휘발성 메모리에 저장될 수 있다. 일 실시예에서, 단계 730은 부트로더의 로그를 저장하는 것을 포함할 수 있다. 단계 740에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 오류 덤프 데이터를 초기화할 수 있다. 일 실시예에서, 단계 740 이후, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 리셋이 콜드 리셋에 해당하는지 여부를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 리셋이 콜드 리셋에 해당하는 경우, 리셋 원인, 리셋 일시 및 온도 정보에 기초하여 오류 덤프 데이터를 생성할 수 있다. 일 실시예에서, 리셋이 콜드 리셋인지 여부는 리셋 원인 레지스터에 기초하여 결정될 수 있다. 일 실시예에서, 단계 740 이후, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 컴퓨팅 장치의 상태를 획득하기 위한 스냅 트리거가 발생하는 경우, 스냅 트리거를 수신할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 스냅 트리거에 대응하여, 컴퓨팅 장치의 상태에 기초하여 오류 덤프 데이터를 생성 및 기록할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 오류 덤프 데이터에 기초하여, 확장된 오류 덤프 데이터를 생성 및 저장할 수 있다. 일 실시예에서, 단계 740 이후, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는, 신규 리셋이 발생하는 경우, 신 규 리셋이 예정된 리셋인지 여부를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 신규 리셋이 예정되지 않은 리셋인 경우, 호출 추적이 가능한지 여부를 확인할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 호출 추적이 가능한 경우, 호출 추적에 기초하여 오류 덤프 데이터를 생성 및 기록할 수 있다. 일 실시예에서, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 신규 리셋이 예정된 리셋인 경우, 호출 추적 없 이 오류 덤프 데이터를 생성 및 기록할 수 있다. 도 8은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 블록도이다. 도 8을 참조하면, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 통신부, 프로세서 및 DB 를 포함할 수 있다. 도 8의 컴퓨팅 장치의 데이터를 수집하기 위한 장치에는 실시예와 관련된 구성요소들 만이 도시되어 있다. 따라서, 도 8에 도시된 구성요소들 외에 다른 범용적인 구성요소들이 더 포함될 수 있음을"}
{"patent_id": "10-2023-0098229", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "당해 기술분야의 통상의 기술자라면 이해할 수 있다. 통신부는 외부 서버 또는 외부 장치와 유선/무선 통신을 하게 하는 하나 이상의 구성 요소를 포함할 수 있 다. 예를 들어, 통신부는, 근거리 통신부(미도시), 이동 통신부(미도시) 및 방송 수신부(미도시) 중 적어 도 하나를 포함할 수 있다. DB는 컴퓨팅 장치의 데이터를 수집하기 위한 장치 내에서 처리되는 각종 데이터들을 저장하는 하드웨 어로서, 프로세서의 처리 및 제어를 위한 프로그램을 저장할 수 있다. DB는 결제 정보, 사용자 정보 등을 저장할 수 있다. DB는 DRAM(dynamic random access memory), SRAM(static random access memory) 등과 같은 RAM(random access memory), ROM(read-only memory), EEPROM(electrically erasable programmable read-only memory), CD-ROM, 블루레이 또는 다른 광학 디스크 스토리지, HDD(hard disk drive), SSD(solid state drive), 또는 플 래시 메모리를 포함할 수 있다. 프로세서는 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 전반적인 동작을 제어한다. 예를 들어, 프 로세서는 DB에 저장된 프로그램들을 실행함으로써, 입력부(미도시), 디스플레이(미도시), 통신부 , DB 등을 전반적으로 제어할 수 있다. 프로세서는, DB에 저장된 프로그램들을 실행함으로 써, 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 동작을 제어할 수 있다. 프로세서는 도 1 내지 도 7에서 상술한 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 동작 중 적어 도 일부를 제어할 수 있다. 프로세서는 ASICs (application specific integrated circuits), DSPs(digital signal processors), DSPDs(digital signal processing devices), PLDs(programmable logic devices), FPGAs(field programmable gate arrays), 제어기(controllers), 마이크로 컨트롤러(micro-controllers), 마이크로 프로세서 (microprocessors), 기타 기능 수행을 위한 전기적 유닛 중 적어도 하나를 이용하여 구현될 수 있다. 일 실시예로, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 이동성을 가지는 전자 장치일 수 있다. 예를 들어, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 스마트폰, 태블릿 PC, PC, 스마트 TV, PDA(personal digital assistant), 랩톱, 미디어 플레이어, 네비게이션, 카메라가 탑재된 디바이스 및 기타 모바일 전자 장치 로 구현될 수 있다. 또한, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 통신 기능 및 데이터 프로세싱 기능을 구비한 시계, 안경, 헤어 밴드 및 반지 등의 웨어러블 장치로 구현될 수 있다. 다른 실시예로, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 차량 내에 임베디드되는 전자 장치일 수 있 다. 예를 들어, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 생산 과정 이후 튜닝(tuning)을 통해 차량 내에 삽입되는 전자 장치일 수 있다. 또 다른 실시예로, 컴퓨팅 장치의 데이터를 수집하기 위한 장치는 차량 외부에 위치하는 서버일 수 있다. 서버는 네트워크를 통해 통신하여 명령, 코드, 파일, 컨텐츠, 서비스 등을 제공하는 컴퓨터 장치 또는 복수의 컴퓨터 장치들로 구현될 수 있다. 서버는 차량에 탑재된 장치들로부터 차량의 이동 경로를 결정하기 위해 필요 한 데이터를 수신하고, 수신한 데이터에 기초하여 차량의 이동 경로를 결정할 수 있다. 또 다른 실시예로, 컴퓨팅 장치의 데이터를 수집하기 위한 장치에서 수행되는 프로세스는 이동성을 가지는 전자 장치, 차량 내에 임베디드 되는 전자 장치 및 차량 외부에 위치하는 서버 중 적어도 일부에 의해 수행될 수 있다. 본 발명에 따른 실시예는 컴퓨터 상에서 다양한 구성요소를 통하여 실행될 수 있는 컴퓨터 프로그램의 형태로 구현될 수 있으며, 이와 같은 컴퓨터 프로그램은 컴퓨터로 판독 가능한 매체에 기록될 수 있다. 이때, 매체는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등과 같 은, 프로그램 명령어를 저장하고 실행하도록 특별히 구성된 하드웨어 장치를 포함할 수 있다. 한편, 상기 컴퓨터 프로그램은 본 발명을 위하여 특별히 설계되고 구성된 것이거나 컴퓨터 소프트웨어 분야의 당업자에게 공지되어 사용 가능한 것일 수 있다. 컴퓨터 프로그램의 예에는, 컴파일러에 의하여 만들어지는 것 과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용하여 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드도포함될 수 있다. 일 실시예에 따르면, 본 개시의 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 본 발명에 따른 방법을 구성하는 단계들에 대하여 명백하게 순서를 기재하거나 반하는 기재가 없다면, 상기 단 계들은 적당한 순서로 행해질 수 있다. 반드시 상기 단계들의 기재 순서에 따라 본 발명이 한정되는 것은 아니 다. 본 발명에서 모든 예들 또는 예시적인 용어(예들 들어, 등등)의 사용은 단순히 본 발명을 상세히 설명하기 위한 것으로서 특허청구범위에 의해 한정되지 않는 이상 상기 예들 또는 예시적인 용어로 인해 본 발명의 범위 가 한정되는 것은 아니다. 또한, 당업자는 다양한 수정, 조합 및 변경이 부가된 특허청구범위 또는 그 균등물의 범주 내에서 설계 조건 및 팩터에 따라 구성될 수 있음을 알 수 있다. 따라서, 본 발명의 사상은 상기 설명된 실시 예에 국한되어 정해져서는 아니 되며, 후술하는 특허청구범위뿐만 아니라 이 특허청구범위와 균등한 또는 이로부터 등가적으로 변경된 모든 범위는 본 발명의 사상의 범주에 속한 다고 할 것이다."}
{"patent_id": "10-2023-0098229", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 차량 및 관제 서버를 포함하는 시스템의 일 예시를 나타내는 도면이다. 도 2는 일 실시예에 따른 차량에 탑재된 장치를 개략적으로 도시하는 도면이다. 도 3은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가 컴퓨팅 장치의 리셋에 대응 하여 커널을 로드하는 과정을 설명하기 위한 순서도이다. 도 4는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 복구하기 위한 장치가 루트 파일 시스템(root file system)을 로드하는 과정을 설명하기 위한 순서도이다. 도 5는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가, 스냅 트리거(snap trigge r)가 발생한 경우, 리셋 원인을 분석하기 위한 데이터를 관리하는 과정을 설명하기 위한 순서도이다. 도 6은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치가, 신규 리셋이 발생한 경우, 리셋 원인을 분석하기 위한 데이터를 관리하는 과정을 설명하기 위한 순서도이다. 도 7은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 방법의 흐름도이다. 도 8은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 데이터를 수집하기 위한 장치의 블록도이다."}
