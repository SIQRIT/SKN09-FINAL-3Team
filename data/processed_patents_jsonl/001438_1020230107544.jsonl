{"patent_id": "10-2023-0107544", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0026524", "출원번호": "10-2023-0107544", "발명의 명칭": "침입 검출 방법 및 장치", "출원인": "주식회사 에스원", "발명자": "김동영"}}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서에 의해 동작하는 침입 검출 장치의 침입 검출 방법으로서, 수신되는 영상 소스로부터 복수의 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성하는 단계, 상기 복수의 서로 다른 프레임 레이트의 모션 히스토리 이미지를 각각 입력 받는 복수의 딥 그라운드 모델을 이용하여 해당 모션 히스토리 이미지 내 움직이는 객체에 대한 스코어를 계산하는 단계, 그리고 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 조합하여 침입을 검출하는 단계를 포함하는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에서, 상기 모션 히스토리 이미지는 상기 움직이는 객체에 대한 특징값을 포함하고, 상기 복수의 딥 그라운드 모델은상기 움직이는 객체에 대한 특징값에 높은 스코어가 부여되도록 학습되어 있는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에서,상기 특징값은 그라데이션을 포함하는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에서,상기 생성하는 단계는 설정된 프레임 레이트의 프레임 영상에 대해 제1 단계, 제2 단계 및 제3 단계를 반복하는단계를 포함하고, 상기 제1 단계는 직전 프레임 영상과 결합된 현재 프레임 영상에서 배경을 검은색으로 설정하고 전경을 흰색으로 설정하여 상기 전경을 추출하고 단계를 포함하고,상기 제2 단계는 현재 프레임 영상을 설정값만큼 어둡게 설정하는 단계를 포함하며, 상기 제3 단계는 상기 어둡게 설정된 프레임 영상을 다음 프레임 영상과 결합하는 단계를 포함하는 침입 검출방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에서, 학습 영상 소스로부터 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지를 생성하는 단계, 그리고상기 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지와 정답을 통해서 상기 복수의 딥 그라운드 모델의 파라미터를 학습시키는 단계를 더 포함하는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에서, 상기 침입을 검출하는 단계는 공개특허 10-2025-0026524-3-상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하고, 합산한 값이 설정된 임계값보다 클 때 침입이발생한 것으로 결정하는 단계를 포함하는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에서, 상기 침입을 검출하는 단계는 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하는 단계, 상기 합산한 값이 설정된 임계값보다 클 때 객체 인식을 수행하는 단계, 그리고 객체 인식 결과 사람인 것으로 식별되면 침입이 발생한 것으로 결정하는 단계를 포함하는 침입 검출 방법."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "영상 소스로부터 침입을 검출하는 장치로서, 상기 영상 소스로부터 각각 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성하는 복수의 모션 히스토리이미지 생성부, 복수의 딥 그라운드 모델을 포함하고, 상기 복수의 딥 그라운드 모델을 통해 계산된 상기 서로 다른 프레임 레이트의 모션 히스토리 이미지 내 움직이는 객체에 대한 스코어를 출력하는 딥러닝 모델부, 그리고 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 조합하여 침입을 검출하는 침입 판단부를 포함하는 침입 검출 장치."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에서, 상기 모션 히스토리 이미지는 상기 움직이는 객체에 대한 그라데이션을 포함하는 침입 검출 장치."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에서, 상기 복수의 모션 히스토리 이미지 생성부 각각은, 설정된 프레임 레이트의 프레임 영상에 대해, 직전 프레임영상과 결합된 현재 프레임 영상에서 배경을 검은색으로 설정하고 전경을 흰색으로 설정하여 상기 전경을 추출하고, 상기 현재 프레임 영상에서 상기 전경의 색상값을 설정값만큼 어둡게 설정한 후, 다음 프레임 영상과 결합하는 침입 검출 장치."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에서, 상기 복수의 딥 그라운드 모델은 각각 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지와 정답을 통해서 상기 움직이는 객체에 대한 그라데이터션에 높은 스코어가 부여되도록 학습되어 있는 침입 검출장치."}
{"patent_id": "10-2023-0107544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에서,상기 침입 판단부는 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하고, 합산 값을 설정된 임계값보다 큰 경우에 침입이 발생한 것으로 결정하는 침입 검출 장치."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "침입 검출 방법 및 장치가 제공될 수 있다. 침입 검출 방법은 수신되는 영상 소스로부터 복수의 서로 다른 프레 임 레이트의 모션 히스토리 이미지를 생성하는 단계, 상기 복수의 서로 다른 프레임 레이트의 모션 히스토리 이 미지를 각각 입력 받는 복수의 딥 그라운드 모델을 이용하여 해당 모션 히스토리 이미지 내 움직이는 객체에 대 한 스코어를 계산하는 단계, 그리고 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 조합하여 침입을 검출 하는 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 기재는 침입 검출 방법 및 장치에 관한 것으로, 특히 딥러닝을 이용한 침입 검출 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 딥러닝 기술은 컴퓨터 비전 분야에서 탁월한 성과를 보이고 있으며, 그 중에도 객체 검출 분야의 모델이 객체를 탐색하는 방범 기술의 핵심 알고리즘으로 대두되고 있다. YOLO(You Only Look Once)로 대표되는 1-스테이지 객체 검출 딥러닝 모델을 이용한 실시간 객체 검출 기술은 탁 월한 성능과 속도를 바탕으로 영상 인식 분야에 큰 진전을 가져왔다. 하지만 학습된 클래스(사람, 차 등) 이외 의 형태를 검출할 수 없으며, 클래스를 추가하는 방식으로는 모든 경우에 대응할 수 없는 한계가 있다. 따라서, 영상 방범 분야에서는 인공지능 CCTV의 객체 검출을 회피하기 위해 몸을 나뭇가지나 우산, 상자 등을 통한 비정 상적인 침입 행위를 감지할 수 있는 방안이 필요하다. 또한 YOLOv5l과 같이 많은 파라미터를 보유한 객체 검출 딥러닝 모델 사용 시 높은 검출 성능을 가지지만 매우 많은 연산(Model Inference) 비용이 발생될 수 있다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "실시예들 중 적어도 하나의 실시예는 라벨 이외의 침입 형태에 대한 침입을 검출할 수 있는 침입 검출 방법 및 장치를 제공하는 것이다. 또한 실시예들 중 적어도 하나의 실시예는 침입 검출을 위한 모델의 연산 처리 비용을 줄일 수 있는 침입 검출 방법 및 장치를 제공하는 것이다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "한 실시예에 따르면, 적어도 하나의 프로세서에 의해 동작하는 침입 검출 장치의 침입 검출 방법이 제공된다. 침입 검출 방법은 수신되는 영상 소스로부터 복수의 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성하 는 단계, 상기 복수의 서로 다른 프레임 레이트의 모션 히스토리 이미지를 각각 입력 받는 복수의 딥 그라운드 모델을 이용하여 해당 모션 히스토리 이미지 내 움직이는 객체에 대한 스코어를 계산하는 단계, 그리고 상기 복 수의 딥 그라운드 모델로부터 계산된 스코어를 조합하여 침입을 검출하는 단계를 포함한다. 상기 모션 히스토리 이미지는 상기 움직이는 객체에 대한 특징값을 포함할 수 있고, 상기 복수의 딥 그라운드 모델은 상기 움직이는 객체에 대한 특징값에 높은 스코어가 부여되도록 학습되어 있을 수 있다. 상기 특징값은 그라데이션을 포함할 수 있다. 상기 생성하는 단계는 설정된 프레임 레이트의 프레임 영상에 대해 제1 단계, 제2 단계 및 제3 단계를 반복하는 단계를 포함할 수 있다. 상기 제1 단계는 직전 프레임 영상과 결합된 현재 프레임 영상에서 배경을 검은색으로 설정하고 전경을 흰색으로 설정하여 상기 전경을 추출하고 단계를 포함할 수 있고, 상기 제2 단계는 현재 프레 임 영상을 설정값만큼 어둡게 설정하는 단계를 포함할 수 있으며, 상기 제3 단계는 상기 어둡게 설정된 프레임 영상을 다음 프레임 영상과 결합하는 단계를 포함할 수 있다. 상기 침입 검출 방법은 학습 영상 소스로부터 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지 를 생성하는 단계, 그리고 상기 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지와 정답을 통해 서 상기 복수의 딥 그라운드 모델의 파라미터를 학습시키는 단계를 더 포함할 수 있다. 상기 침입을 검출하는 단계는 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하고, 합산한 값이 설 정된 임계값보다 클 때 침입이 발생한 것으로 결정하는 단계를 포함할 수 있다. 상기 침입을 검출하는 단계는 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하는 단계, 상기 합산 한 값이 설정된 임계값보다 클 때 객체 인식을 수행하는 단계, 그리고 객체 인식 결과 사람인 것으로 식별되면 침입이 발생한 것으로 결정하는 단계를 포함할 수 있다. 다른 실시예에 따르면, 영상 소스로부터 침입을 검출하는 장치가 제공된다. 침입 검출 장치는 상기 영상 소스로 부터 각각 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성하는 복수의 모션 히스토리 이미지 생성부, 복수의 딥 그라운드 모델을 포함하고, 상기 복수의 딥 그라운드 모델을 통해 계산된 상기 서로 다른 프레임 레이트의 모션 히스토리 이미지 내 움직이는 객체에 대한 스코어를 출력하는 딥러닝 모델부, 그리고 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 조합하여 침입을 검출하는 침입 판단부를 포함한다. 상기 모션 히스토리 이미지는 상기 움직이는 객체에 대한 그라데이션을 포함할 수 있다. 상기 복수의 모션 히스토리 이미지 생성부 각각은, 설정된 프레임 레이트의 프레임 영상에 대해, 직전 프레임 영상과 결합된 현재 프레임 영상에서 배경을 검은색으로 설정하고 전경을 흰색으로 설정하여 상기 전경을 추출 할 수 있고, 상기 현재 프레임 영상에서 상기 전경의 색상값을 설정값만큼 어둡게 설정한 후, 다음 프레임 영상 과 결합할 수 있다. 상기 복수의 딥 그라운드 모델은 각각 복수의 서로 다른 프레임 레이트의 학습용 모션 히스토리 이미지와 정답 을 통해서 상기 움직이는 객체에 대한 그라데이터션에 높은 스코어가 부여되도록 학습되어 있을 수 있다. 상기 침입 판단부는 상기 복수의 딥 그라운드 모델로부터 계산된 스코어를 합산하고, 합산 값을 설정된 임계값 보다 큰 경우에 침입이 발생한 것으로 결정할 수 있다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "실시예들 중 적어도 하나의 실시예에 따르면, 움직이는 객체에 대해서만 나타나는 그라데이션에 높은 스코어를 부여하도록 학습된 딥 그라운드 모델을 이용함으로써, 기존 YOLO 계열의 객체 검출 딥러닝 모델과 유사한 수준 의 침입 성능을 가지면서 입력 데이터의 크기, 매개변수의 크기 및 연산량을 줄일 수 있다. 이로 인해, 저비용 의 영상 보안 서비스의 제공이 가능해질 수 있다."}
{"patent_id": "10-2023-0107544", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 첨부한 도면을 참고로 하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지 식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현 될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본 발명을 명확하게 설명하기 위 해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도면을 참고하여 설명한 흐름도에서, 동작 순서는 변경될 수 있고, 여러 동작들이 병합되거나, 어느 동 작이 분할될 수 있고, 특정 동작은 수행되지 않을 수 있다. 명세서 및 청구범위 전체에서, 어떤 부분이 어떤 구성 요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재 가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성 요소를 더 포함할 수 있는 것을 의미한다. 또한 단수로 기재된 표현은 \"하나\" 또는 \"단일\" 등의 명시적인 표현을 사용하지 않은 이상, 단수 또는 복수로 해석될 수 있다. 또한 제1, 제2 등과 같이 서수를 포함하는 용어들은 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의해 한정되지는 않는다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 개시의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성 요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 또한 명세서 및 청구범위 전체에서, 구성요소에 대한 접미사 \"모듈\", \"부\" 및/또는 \"기\" 등의 용어는 적어도 하 나의 기능이나 동작을 처리하는 단위를 의미하며, 이는 하드웨어나 소프트웨어 또는 하드웨어 및 소프트웨어의 결합으로 구현될 수 있다. 구성요소에 대한 접미사 \"모듈\", \"부\" 및/또는 \"기\"는 명세서 작성의 용이함만이 고려되어 부여되거나 혼용되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 아래에서는 한 실시 예에 따른 침입 검출 방법 및 장치에 대하여 도면을 참고로 하여 상세하게 설명한다. 도 1은 일 실시예에 따른 침입 검출 방법을 개략적으로 나타낸 도면이다. 도 1을 참고하면, 침입 검출 방법은 학습 단계(S10)와 추론 및 검출 단계(S20)를 포함할 수 있다. 학습 단계(S10)에서, 침입 검출 장치는 학습 영상 소스로부터 학습 데이터인 복수의 서로 다른 프레임 레이트 (Frame rate)의 모션 히스토리 이미지를 생성할 수 있다(S12). 예를 들면, 학습 데이터는 동일한 영상 소스에 대한 1fps, 2.5fps 및 5fps의 모션 히스토리 이미지를 포함할 수 있다. 1fps의 모션 히스토리 이미지는 1초에 하나의 프레임 영상을 처리하며 설정된 개수의 프레임 영상으로부터 생성될 수 있다. 2.5fps의 모션 히스토리 이미지는 1초에 2.5개의 프레임 영상을 처리하며 설정된 개수의 프레임 영상으로부터 생성될 수 있다. 5fps의 모션 히스토리 이미지는 1초에 5개의 프레임 영상을 처리하며 설정된 개수의 프레임 영상으로부터 생성될 수 있 다. 서로 다른 프레임 레이트의 모션 히스토리 이미지는 동일한 개수의 프레임 영상으로부터 생성될 수 있다. 모션 히스토리 이미지는 침입 판단에 있어 의미가 있는 즉, 움직이는 객체에 대해 나타나는 특징값을 포함할 수 있다. 실시예에서, 객체에 대해 나타나는 특징값은 그라데이터션을 포함할 수 있다. 학습 단계(S10)에서, 침입 검출 장치는 생성된 학습 데이터를 입력 데이터로 하는 딥러닝 모델인 딥 그라운드 (deep-ground) 모델을 학습시킬 수 있다(S14). 침입 검출 장치는 생성된 학습 데이터로부터 움직이는 객체에 대 해서 나타나는 그라데이션 형태에 높은 스코어를 부여하도록 학습될 수 있다. 추론 및 검출 단계(S20)는 학습이 완료된 딥 그라운드 모델을 이용하여 수행될 수 있다. 추론 및 검출 단계(S20)에서, 침입 검출 장치는 침입 여부 검출 대상에 해당하는 영상 소스를 수신하면(S22), 영상 소스로부터 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성할 수 있다(S24). 추론 및 검출 단계(S20)에서, 서로 다른 프레임 레이트의 모션 히스토리 이미지는 딥 그라운드 모델로 입력될 수 있다. 딥 그라운드 모델은 서로 다른 프레임 레이트의 모션 히스토리 이미지에 대한 스코어를 계산하고 (S26), 계산된 스코어를 출력할 수 있다. 추론 및 검출 단계(S20)에서, 침입 검출 장치는 서로 다른 프레임 레이트의 모션 히스토리 이미지 각각에 대한 스코어를 이용하여 침입 여부를 검출할 수 있다(S28). 도 2는 한 실시예에 따른 침입 검출 장치를 나타낸 도면이다. 도 2를 참고하면, 침입 검출 장치는 데이터 생성부, 딥러닝 모델부 및 침입 판단부를 포함 할 수 있다. 데이터 생성부는 동일한 영상 소스에 대해 서로 다른 프레임 레이트의 모션 히스토리 이미지를 생성할 수 있다. 데이터 생성부는 복수의 모션 히스토리 이미지 생성부(212, 214, 216)를 생성할 수 있다. 복수의 모 션 히스토리 이미지 생성부(212, 214, 216)는 각각 정해진 프레임 레이트의 모션 히스토리 이미지를 생성할 수 있다. 하나의 예로서, 모션 히스토리 이미지 생성부는 1fps의 모션 히스토리 이미지를 생성할 수 있고, 모 션 히스토리 이미지 생성부는 2fps의 모션 히스토리 이미지를 생성할 수 있으며, 모션 히스토리 이미지 생 성부는 5fps의 모션 히스토리 이미지를 생성할 수 있다. 도 2에서는 편의상 3개의 모션 히스토리 이미지 생성부(212, 214, 216)를 도시하였지만, 이에 한정되지 않는다. 또한 모션 히스토리 이미지 생성부(212, 214, 216)의 프레임 레이트는 1fps, 2.5fps 및 5fps인 것으로 설명하였지만, 이에 한정되지 않는다. 딥러닝 모델부는 복수의 딥 그라운드 모델(222, 224, 226)을 포함할 수 있다. 복수의 딥 그라운드 모델 (222, 224, 226)은 각각 복수의 모션 히스토리 이미지 생성부(212, 214, 216)에 대응될 수 있다. 각 딥 그라운 드 모델(222, 224, 226)의 학습 가중치는 동일할 수 있다. 딥 그라운드 모델(222, 224, 226)은 모션 히스토리 이미지를 이용하여, 시계열 영상 패턴 즉, 움직이는 객체에 대해서만 드러나는 그라데이션의 형태에 높은 스코 어를 부여하도록 학습될 수 있다. 딥 그라운드 모델(222, 224, 226)의 학습 데이터는 다양한 프레임 레이트의 모션 히스토리 이미지를 이용하여 학습될 수 있다. 이와 같이 다양한 프레임 레이트의 모션 히스토리 이미지를 이용하여 딥 그라운드 모델(222, 224, 226)이 학습되면, 객체의 이동속도가 다양한 환경에서도 높은 검출 성능 을 제공할 수 있다. 딥 그라운드 모델(222, 224, 226)은 각각 설정된 프레임 레이트로 생성된 모션 히스토리 이미지들을 직접 설계 한 CNN(Convolutional neural network) 기반 백본 네트워크로 학습하는 영상 분류 딥러닝 모델일 수 있다. 움직이는 객체에 대해 시계열 영상 패턴을 나타내는 모션 히스토리 이미지는 객체 검출을 위한 이미지보다 형태 가 훨씬 단순할 수 있다. 실시예에 따른 모션 히스토리 이미지는 일반적으로 객체 검출을 위해 모델에 입력되는 영상보다 크기가 작을 수 있으며, 모션 히스토리 이미지는 설계된 모델의 성능을 감소시키지 않을 수 있다. 시 계열 영상 패턴을 분류하기 위한 네트워크의 깊이와 이미지 내 객체를 검출하기 위한 네트워크의 깊이는 다를 수 있다. 딥 그라운드 모델(222, 224, 226)은 기존 YOLO 계열의 CNN 기반 모델과 다른 계층으로 설계될 수 있다. 딥 그라 운드 모델(222, 224, 226)은 요구되는 잠재적인 네트워크의 깊이에 맞추어 파라미터 및 연산량을 의도적으로 줄 일 수 있다. 이에 따라, 움직이는 객체에 대해 시계열 영상 패턴을 나타내는 모션 히스토리 이미지로 학습된 딥 그라운드 모델(222, 224, 226)은 기존 YOLO 계열의 객체 검출 딥러닝 모델보다 파라미터의 개수가 적고 연산량 또한 적을 수 있다. 추론 및 침입 검출 시, 딥 그라운드 모델(222, 224, 226)은 각각 복수의 모션 히스토리 이미지 생성부(212, 214, 216)로부터 각 프레임 레이트의 모션 히스토리 이미지를 입력 받는다. 딥 그라운드 모델(222, 224, 226) 은 입력 받은 각 프레임 레이트의 모션 히스토리 이미지에 대한 스코어를 계산하고, 계산된 각 프레임 레이트의 모션 히스토리 이미지에 대한 스코어를 출력할 수 있다. 침입 판단부는 딥 그라운드 모델(222, 224, 226)로부터 출력된 각 프레임 레이트의 모션 히스토리 이미지 에 대한 스코어를 조합하여 침입 판단을 수행할 수 있다. 하나의 예로서, 침입 판단부는 딥 그라운드 모델 (222, 224, 226)로부터 각각 출력된 모션 히스토리 이미지에 대한 스코어를 합산하고, 합산한 값이 설정된 임계 값보다 크면 침입이 발생한 것으로 판단할 수 있다. 침입 판단부는 침입이 발생한 것으로 판단되면, 침입 발생을 발보할 수 있다. 하나의 예로서, 침입 판단부 는 침입이 발생한 것으로 판단되면, 알람을 발생시키고, 관련 기관으로 침입 신호를 출력할 수 있다. 한편, 모션 히스토리 이미지에 대한 스코어로부터 침입 판단은 움직이는 객체에 대하여 수행될 수 있다. 움직이 는 객체가 침입자일 수도 있지만, 동물일 수도 있다. 따라서, 침입 검출 성능을 높이기 위해 움직이는 객체를 보다 정확하게 식별하고자 하는 경우, 침입 판단부는 객체 인식 기능을 수행할 수 있다. 객체 인식 기능은 예를 들면, 각 프레임 레이트의 모션 히스토리 이미지에 대한 스코어의 합산 값이 임계값보다 클 때 수행될 수 있다. 침입 판단부는 객체 인식을 위한 객체 검출 네트워크를 이용할 수 있다. 객체 인식을 위한 객체 검 출 네트워크는 입력 데이터로 영상 소스를 이용할 수도 있고, 각 프레임 레이트의 모션 히스토리 이미지를 이용 할 수도 있다. 침입 판단부는 객체 인식 결과 사람일 경우에 침입이 발생한 것으로 판단하고 침입 발생을 발보할 수 있다. 즉, 침입 검출 장치는 딥 그라운드 모델(222, 224, 226)을 이용하여 움직이는 객체에 대한 침입 가능성을 판단하고, 움직이는 객체에 대해 침입 가능성이 높다고 판단될 때 객체 검출 네트워크를 사용하여 객체 클래스 필터링을 수행할 수 있다. 이렇게 하여도, 입력되는 영상 소스에 대해 객체 검출을 수행하는 시스템 대비 연산 량을 줄일 수 있다. 도 3은 도 2에 도시된 모션 히스토리 이미지 생성부에서 모션 히스토리 이미지를 생성하는 방법을 나타낸 도면 이다. 도 3에서는 편의상 모션 히스토리 이미지 생성부를 기준으로 설명하지만, 나머지 모션 히스토리 이 미지 생성부(214, 216)도 동일한 방법으로 모션 히스토리 이미지를 생성할 수 있다. 도 3을 참고하면, 모션 히스토리 이미지 생성부는 설정된 감지 영역을 촬영하는 CCTV(Closed-circuit Television)나 카메라로부터 영상 소스를 수신한다(S310). 모션 히스토리 이미지 생성부는 모션 히스토리 이미지를 생성할 프레임 레이트를 설정할 수 있다(S320). 하나의 예로서, 모션 히스토리 이미지 생성부는 1fps의 프레임 레이트를 설정할 수 있다. 모션 히스토리 이미지 생성부는 사용자로부터 설정할 프레임 레이트의 정보를 입력 받을 수 있다. 모션 히스토리 이미지 생성부는 입력되는 영상 소스로부터 설정된 프레임 레이트로 프레임 영상을 처리하 여 해당 프레임 레이트의 모션 히스토리 이미지를 생성할 수 있다(S330). 프레임 레이트의 모션 히스토리 이미지를 생성하는 과정을 보다 구체적으로 설명하면, 모션 히스토리 이미지 생 성부는 순차적으로 입력되는 프레임 영상에 대해, 배경 모델링을 통해 현재 프레임 영상에서 배경을 검은 색으로 설정하고 전경을 흰색으로 설정함으로써, 현재 프레임 영상에서 전경 영역을 추출할 수 있다(S332). 검은색은 빨간색(Red), 초록색(Green) 및 파란색(Blue)으로 이루어진 RGB 색상값을 (0,0,0)으로 설정될 수 있다. 흰색은 RGB 색상값을 (255,255,255)로 설정될 수 있다. 다음, 전경 영역이 추출된 현재 프레임 영상을 설정된 값만큼 어둡게 설정하고(S334), 다음에 입력되는 프레임 영상을 결합할 수 있다(S336). 하나의 예로서, 모션 히 스토리 이미지 생성부는 RGB 색상값을 Δ만큼 낮추어 (255-Δ,255-Δ,255-Δ)로 설정함으로써, 프레임 영 상을 어둡게 설정할 수 있다. Δ는 사용자에 의해 임의로 설정될 수 있다. 하나의 예로서, 배경 영역은 검은색 으로 설정되어 있으므로, 모션 히스토리 이미지 생성부는 흰색으로 설정된 전경 영역의 색상값만을 ??만큼 낮출 수 있다. 모션 히스토리 이미지 생성부는 결합된 프레임 영상에 대해 단계(S332~S336)를 반복할 수 있다. 즉, 모션 히스토리 이미지 생성부는 결합된 프레임 영상에서 영상에서 배경을 검은색으로 설정하고 전경을 흰색으로 설정함으로써, 현재 프레임 영상에서 전경 영역을 추출하고(S332), 전경 영역이 추출된 현재 프레임 영상을 설 정된 값만큼 어둡게 설정한 후(S334). 다음에 입력되는 프레임 영상을 결합할 수 있다(S336). 모션 히스토리 이미지 생성부는 이러한 과정을 반복하면서 설정된 프레임 레이트의 모션 히스토리 이미지 를 생성할 수 있다. 설명한 바와 같이, 프레임 영상이 입력될 때마다 직전 프레임 영상에서 전경 영역은 설정된 값만큼 어둡게 처리 된다. 시간적으로 가장 먼저 입력된 프레임 영상에서 전경 영역은 이후에 프레임 영상이 입력될 때마다 설정된 값만큼 계속하여 어둡게 처리되므로, 움직이는 객체는 시간이 지날수록 연해지는 그라데이션 효과가 나타나게 된다. 따라서, 설정된 프레임 레이트의 모션 히스토리 이미지는 움직이는 객체에 대해 나타나는 그라데이션을 포함할 수 있다. 움직이는 객체가 없으면 설정된 프레임 레이트의 모션 히스토리 이미지는 그라이데션 영역이 없을 수 있다. 도 4는 한 실시예에 따른 딥 그라운드 모델의 학습 방법을 나타낸 흐름도이다. 도 3의 과정을 통해 학습 영상 소스에 대해 서로 다른 프레임 레이트의 모션 히스토리 이미지가 생성되면, 서로 다른 프레임 레이트의 모션 히스토리 이미지를 이용하여 딥 그라운드 모델의 학습이 수행될 수 있다. 도 4를 참고하면, 서로 다른 프레임 레이트의 모션 히스토리 이미지는 각각 대응하는 딥러닝 모델부의 딥 그라운드 모델(222, 224, 226)로 입력될 수 있다. 딥 그라운드 모델(222, 224, 226)은 각각 모션 히스토리 이미지를 레이블(label, 정답)과 함께 입력 데이터로 수신할 수 있다(S410). 학습 단계에서는 각 프레임 레이트의 모션 히스토리 이미지는 레이블(label, 정답)과 함 께 딥 그라운드 모델(222, 224, 226)로 입력될 수 있다. 딥 그라운드 모델(222, 224, 226)은 프레임 레이트의 모션 히스토리 이미지와 레이블(정답)을 통해서 모델의 파 라미터를 학습할 수 있다(S420). 실시예에서, 딥 그라운드 모델(222, 224, 226)은 모션 히스토리 이미지에서 움 직이는 객체에 대해 나타나는 그라데이션 형태에 높은 스코어를 부여하여 정답에 가깝도록 모델의 파라미터를 학습할 수 있다. 딥 그라운드 모델(222, 224, 226)의 학습이 완료되면, 딥 그라운드 모델(222, 224, 226)은 모델의 파라미터를 저장할 수 있다(S430). 학습된 딥 그라운드 모델(222, 224, 226)은 침입 판단을 위해 사용될 수 있다. 도 5는 한 실시예에 따른 침입 판단 방법을 나타낸 흐름도이다. 도 5를 참고하면, 복수의 모션 히스토리 이미지 생성부(212, 214, 216)는 침입 여부 검출 대상에 해당하는 영상 소스를 수신할 수 있다(S510). 복수의 모션 히스토리 이미지 생성부(212, 214, 216)는 각각 영상 소스로부터 설정된 프레임 레이트의 모션 히 스토리 이미지를 생성할 수 있고(S520), 설정된 프레임 레이트의 모션 히스토리 이미지를 딥 그라운드 모델 (222, 224, 226)로 출력할 수 있다. 딥 그라운드 모델(222, 224, 226)은 각각 수신된 프레임 레이트의 모션 히스토리 이미지로부터 스코어를 계산하 여 출력할 수 있다(S530). 침입 판단부는 딥 그라운드 모델(222, 224, 226)로부터 출력된 스코어를 합산하 고(S540), 합산된 값을 설정된 임계값과 비교한다(S550). 이때 딥 그라운드 모델(222, 224, 226)의 출력 값은 정규화를 거치지 않고, 침입 판단에 사용될 수 있다. 침입 판단부는 합산된 값이 임계값보다 크면, 침입이 발생한 것으로 결정할 수 있다(S560). 한편, 침입 판단부는 합산된 값이 임계값 이하이면, 침입이 발생하지 않은 것으로 결정할 수 있다(S570). 앞에서 설명한 바와 같이, 딥 그라운드 모델(222, 224, 226)은 움직이는 객체에 대해서 나타나는 그라데이션 형 태에 높은 스코어를 부여하도록 학습되므로, 모션 히스토리 이미지에 그라데이터션이 포함되어 있는 경우, 높은 스코어가 출력될 수 있다. 따라서, 실시예에 따른 침입 검출 장치는 몸을 나뭇가지나 우산, 상자 등을 통 한 비정상적인 침입 행위에도 침입을 검출할 수 있으므로, 침입 검출 성능을 향상시킬 수 있다. 또한 배경과 전경을 분리하고, 침입 검출을 위해 전경에서도 그라데이션 형태만을 검출하므로, 기존 YOLO와 같 은 객체 검출 딥러닝 모델에 비해 매개변수의 크기 및 연산량의 크기를 줄일 수 있으며, 모델의 입력 데이터 또 한 모션 히스토리 이미지를 사용하므로, 입력 데이터의 용량도 줄일 수 있다. 도 6은 다른 실시 예에 따른 침입 검출 장치를 개략적으로 나타낸 도면이다. 도 6을 참고하면, 침입 검출 장치는 앞에서 설명한 학습 기반 물체 검출 방법이 구현된 컴퓨팅 장치를 나 타낼 수 있다. 침입 검출 장치는 프로세서, 메모리, 입력 인터페이스 장치, 출력 인터페이스 장치, 저장 장치 및 네트워크 인터페이스 장치 중 적어도 하나를 포함할 수 있다. 각각의 구성 요소들은 공 통 버스(bus)에 의해 연결되어 서로 통신을 수행할 수 있다. 또한, 각각의 구성 요소들은 공통 버스 가 아니라, 프로세서를 중심으로 개별 인터페이스 또는 개별 버스를 통하여 연결될 수도 있다. 프로세서는 AP(Application Processor), CPU(Central Processing Unit), GPU(Graphic Processing Unit) 등과 같은 다양한 종류들로 구현될 수 있으며, 메모리 또는 저장 장치에 저장된 명령을 실행하 는 임의의 반도체 장치일 수 있다. 프로세서는 메모리 및 저장 장치 중에서 적어도 하나에 저장 된 프로그램 명령(program command)을 실행할 수 있다. 이러한 프로세서는 도 2에서 설명한 데이터 생성부 , 딥러닝 모델부 및 침입 판단부의 적어도 일부 기능을 구현하기 위한 프로그램 명령을 메모리 에 저장하여, 도 1 내지 도 5를 토대로 설명한 동작이 수행되도록 제어할 수 있다. 메모리 및 저장 장치는 다양한 형태의 휘발성 또는 비 휘발성 저장 매체를 포함할 수 있다. 예를 들 어, 메모리는 ROM(read-only memory) 및 RAM(random access memory)를 포함할 수 있다. 메모리 는 프로세서의 내부 또는 외부에 위치할 수 있고, 메모리는 이미 알려진 다양한 수단을 통해 프 로세서와 연결될 수 있다. 입력 인터페이스 장치는 데이터를 프로세서로 제공하도록 구성된다. 출력 인터페이스 장치는 프로세서로부터의 데이터를 출력하도록 구성된다. 네트워크 인터페이스 장치는 유선 네트워크 또는 무선 네트워크를 통해 외부의 장치와 신호를 송신 또는 수신할 수 있다. 본 기재의 실시 예에 따른 침입 검출 방법 중 적어도 일부는 컴퓨팅 장치에서 실행되는 프로그램 또는 소프트웨 어로 구현될 수 있고, 프로그램 또는 소프트웨어는 컴퓨터로 판독 가능한 매체에 저장될 수 있다. 또한 본 기재의 실시 예에 따른 침입 검출 방법 중 적어도 일부는 컴퓨팅 장치와 전기적으로 접속될 수 있는 하 드웨어로 구현될 수도 있다. 이상에서 본 발명의 실시예에 대하여 상세하게 설명하였지만 본 발명의 권리범위는 이에 한정되는 것은 아니고 다음의 청구범위에서 정의하고 있는 본 발명의 기본 개념을 이용한 당업자의 여러 변형 및 개량 형태 또한 본 발명의 권리범위에 속하는 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2023-0107544", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 침입 검출 방법을 개략적으로 나타낸 도면이다. 도 2는 한 실시예에 따른 침입 검출 장치를 나타낸 도면이다. 도 3은 도 2에 도시된 모션 히스토리 이미지 생성부에서 모션 히스토리 이미지를 생성하는 방법을 나타낸 도면 이다. 도 4는 한 실시예에 따른 딥 그라운드 모델의 학습 방법을 나타낸 흐름도이다. 도 5는 한 실시예에 따른 침입 판단 방법을 나타낸 흐름도이다. 도 6은 다른 실시 예에 따른 침입 검출 장치를 개략적으로 나타낸 도면이다."}
