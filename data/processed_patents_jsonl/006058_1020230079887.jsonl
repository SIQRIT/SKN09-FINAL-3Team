{"patent_id": "10-2023-0079887", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0155995", "출원번호": "10-2023-0079887", "발명의 명칭": "인공지능 기술을 사용하여 클러스터 데이터에 대응되는 주조직 적합성 복합체를 결정하기 위", "출원인": "주식회사 네오젠티씨", "발명자": "송성재"}}
{"patent_id": "10-2023-0079887", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에 의해 수행되는 방법으로서,제 1 타입의 주조직 적합 복합체(Major Histocompatibility Complex: MHC)에 대응되는 제 1 클러스터(cluster)데이터를 획득하는 단계;상기 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는 단계; 및상기 제 2 클러스터 데이터에 적어도 부분적으로 기초하여 분류(classification) 모델을 학습시키는 단계;를 포함하는,방법."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "컴퓨팅 장치에 의해 수행되는 방법이 개시된다. 상기 방법은, 제 1 타입의 주조직 적합 복합체(Major Histocompatibility Complex: MHC)에 대응되는 제 1 클러스터(cluster) 데이터를 획득하는 단계, 상기 제 1 클 러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는 단계, 및 상기 제 2 클러스터 데이터 에 적어도 부분적으로 기초하여 분류(classification) 모델을 학습시키는 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시내용은 면역펩티돔(immunopeptidome)을 분석하는 것에 관한 것이며, 보다 구체적으로 펩타이드들의 클러 스터 데이터에 대응되는 주조직 적합성 복합체(MHC)의 타입을 결정하는 것에 관한 것이다."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "주조직 적합성 복합체는 면역계에서 작용하는 'MHC 분자'를 암호화하는 유전자 자리이다. MHC 분자에는 1형 (class I)과 2형(class II)이 존재할 수 있다. 면역펩티돔은 세포의 표면에서 표현되는 펩타이드들의 세트를 의미하며, 예를 들어 면역펩티돔은 MHC와 연관된 펩타이드들의 조합을 의미할 수 있다. 인간 백혈구 항원(Human Leukocyte Antigen; HLA)은 인간의 주조직 적합성 복합체(Major Histocompatibility Complex; MHC) 유전자에 의해 생성되는 당단백 분자이다. HLA는 성숙한 적혈구에는 존재하지 않지만 미성숙 적 아세포(erythroblast)에서는 발현이 되며 백혈구 및/또는 혈소판 등의 혈액세포를 포함한 인체 내 모든 조직세 포의 표면에 발현된다. MHC 유전자는 모든 척추동물에 존재하며 인간의 MHC 유전자를 HLA 유전자, 이로부터 발 현된 산물을 HLA이라고 한다. MHC 유전자들은 자기(self) 및 비자기(non-self)의 인지, 항원 자극에 대한 면역반응, 세포성 면역과 체액성 면 역의 조절 및 질병에 대한 감수성 등에 관여한다. MHC 유전자의 산물인 HLA는 고형 장기이식에서 이식된 장기의 생존에 있어서 ABO 혈액형 다음으로 중요한 항원이다. HLA는 골수이식에 있어서 이식의 성패에 가장 중요한 역 할을 하는 것으로 알려져 있다. 따라서, HLA의 차이를 면역학적으로 인지하는 것이 이식된 조직에 대한 거부반 응(rejection action)의 첫 단계라 볼 수 있다. 또한, 수혈요법에 있어서 HLA와 항체는 혈소판수혈불응증, 발열 성 비용혈성 수혈 부작용, 급성 폐손상, 수혈 후 이식편대숙주병과 같은 여러 가지 부작용의 발생에 중요한 역 할을 한다. HLA는 MHC와 마찬가지로 크게 Class I 및 Class II로 분류될 수 있다. Class I은 HLA-A, HLA-B, HLA-C로 분류 되고 대부분의 유핵세포 및 혈소판에서 발현되며, 세포독성 T 세포가 바이러스에 감염된 세포나 종양세포를 인 지하여 제거할 때 항원 인식(antigen recognition)에 필수적이다. HLA Class II는 HLA-DR, HLA-DQ, HLA-DP로 분류되고 B 세포, 단핵세포, 수지상세포, 활성화된 T 세포에서 발현되며, 헬퍼 T 세포의 항원 수용체(antigen receptor)와 작용하여 세포성 및 체액성 면역반응을 유발하고, 그리고 항원제시세포에 표현된 항원을 인지할 때 필수적인 것으로 알려져 있다. HLA는 인간이 가지고 있는 유전자 중에서 가장 큰 다형성(polymorphism)을 보이 는 유전자이며 인종 및 민족 간에도 빈도 차이가 존재한다. 감염 미생물 유래의 단백질 혹은 암세포 특유의 단백질에서 유래한 펩타이드가 MHC에 결합하여 세포표면에 제시 되면 T 세포가 인식하여 면역반응을 유발함으로써 감염된 세포 혹은 암세포를 제거하게 된다. 이처럼 T 세포는 정상적인 인체에 존재하지 않는 이물질에 대한 특정한 면역반응을 결정하는 핵심 조절자(player)이다. 따라서, MHC에 결합되는 펩타이드에 대한 예측은 감염질환이나 암의 예방을 위한 펩타이드 백신의 개발에 활용될 수 있 다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허 10- 2215286"}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시내용은 전술한 배경기술에 대응하여 안출된 것으로, MHC의 타입 별로 대응되는 펩타이드의 시퀀스를 보 다 정확하게 예측하기 위함이다. 본 개시내용은 인공지능 모델을 사용하여 클러스터 데이터를 MHC 타입별로 클러스터링하기 위함이다. 본 개시내용의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술 적 과제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시내용의 일 실시예에 따른 방법 및 장치는, MHC의 타입 별로 이에 대응되는 펩타이드의 서열을 보다 정확 하게 예측할 수 있다. 본 개시내용의 일 실시예에 따라 컴퓨팅 장치에 의해 수행되는 방법이 개시된다. 상기 방법은: 제 1 타입의 주 조직 적합 복합체(Major Histocompatibility Complex: MHC)에 대응되는 제 1 클러스터(cluster) 데이터를 획득 하는 단계; 상기 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는 단계; 및 상기 제 2 클러스터 데이터에 적어도 부분적으로 기초하여 분류(classification) 모델을 학습시키는 단계를 포 함할 수 있다. 일 실시예에서, 상기 제 1 클러스터 데이터 및 상기 제 2 클러스터 데이터는, 펩타이드 내에서의 사전결정된 위 치에서 아미노산의 종류의 존재 가능성을 나타내는 값를 포함할 수 있다. 일 실시예에서, 상기 제 1 클러스터 데이터 및 상기 제 2 클러스터 데이터는 행렬 형태의 데이터이며, 상기 행 렬의 행과 열 중 어느 하나는 펩타이드에서의 위치를 나타내고 그리고 상기 행렬의 행과 열 중 다른 하나는 아 미노산 식별자를 나타낼 수 있다. 일 실시예에서, 상기 분류 모델은, 입력되는 클러스터 데이터로부터 상기 클러스터 데이터에 대응되는 MHC 타입 을 출력하도록, 상기 제 2 클러스터 데이터에 적어도 부분적으로 기초하여 학습될 수 있다. 일 실시예에서, 상기 제 2 클러스터 데이터에 상기 제 1 MHC 타입이 정답(ground truth)으로 라벨링된 학습 데 이터에 적어도 부분적으로 기초하여, 지도 학습(supervised learning)의 방식으로 상기 분류 모델의 학습이 이 루어질 수 있다. 일 실시예에서, 상기 분류 모델은 클러스터 데이터에 포함되는 위치 점수 행렬(PWM: Position Weight Matrix)을 입력으로 하고 그리고 상기 분류 모델에서 행렬로 표현되는 필터의 엘리먼트들 각각이 상기 위치 점수 행렬의 엘리먼트들의 값을 처리할 수 있다. 일 실시예에서, 상기 제 2 클러스터 데이터는, 상기 제 1 클러스터 데이터에서의 열 또는 행의 엘리먼트들의 배 열 순서 및 상기 제 1 클러스터 데이터에서의 엘리먼트의 값이 변경된 데이터이며, 그리고 상기 제 1 클러스터 데이터에서의 엘리먼트의 값은, 상기 제 1 클러스터 데이터 내에서의 제 1 위치를 결정하기 위한 제 1 랜덤 함 수 및 상기 제 1 위치를 입력으로 하여, 상기 제 1 위치에 대응되는 제 1 값을 변경하는데 사용되는 제 2 값을생성하는 제 2 랜덤 함수에 기초하여 변경될 수 있다. 일 실시예에서, 상기 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는 단계는: 상기 제 1 클러스터 데이터에서의 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계; 및 상기 결정된 배열 순서에 따라 재배열된 아미노산 식별자 들을 포함하는 제 2 클러스터 데이터를 생성하는 단계를 포함할 수 있다. 일 실시예에서, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계는, 아미노산들 간의 치환 가능성에 적어 도 부분적으로 기초하여, 상기 제 2 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계를 포함할 수 있다. 일 실시예에서, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계는, 아미노산 서열들 간의 물리 화학적 유 사성 혹은 치환 가능성 정도를 나타내는 행렬을 Phylogenetic 트리 구조로 변환하는 것에 적어도 부분적으로 기 초하여, 상기 제 2 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도 록, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계를 포함할 수 있다. 일 실시예에서, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계는 Blosum 행렬을 Phylogenetic 트리 구조 로 변환하는 것에 적어도 부분적으로 기초하여, 상기 제 2 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계를 포함할 수 있다. 일 실시예에서, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계는: 상기 제 1 타입의 MHC에 대응되는 상 기 제 1 클러스터 데이터 내의 위치 별 엘리먼트의 값에 기초하여, 상기 제 1 클러스터 데이터의 위치 별 중요 도를 결정하는 단계; 및 상기 위치 별 중요도가 사전결정된 임계 중요도 미만인 위치 또는 상기 위치 별 중요도 의 순위가 사전결정된 임계 순위 미만인 위치에 대응되는 아미노산 식별자를 상기 제 1 클러스터 데이터의 엣지 (edge) 위치에 배열하도록 상기 배열 순서를 결정하는 단계를 포함할 수 있다. 일 실시예에서, 상기 제 1 클러스터 데이터의 위치 별 중요도를 결정하는 단계는, 상기 제 1 타입의 MHC에 대응 되는 복수의 제 1 클러스터 데이터들에서 위치 별 엘리먼트의 값들에 대한 평균 및 표준편차 중 적어도 하나에 기초하여, 상기 제 1 클러스터 데이터의 위치 별 중요도를 결정하는 단계를 포함할 수 있다. 일 실시예에서, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계는: 상기 아미노산 식별자들 간의 거리를 트리 구조로 변환하는 단계; 상기 트리 구조 상에서 서로 인접한 제 1 노드, 제 2 노드, 제 3 노드 및 제 4 노 드에 대해서, 상기 제 1 노드와 상기 제 2 노드 간의 제 1 거리와 상기 제 3 노드와 상기 제 4 노드 간의 제 2 거리 간의 제 1 차이를 결정하는 단계; 상기 트리 구조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환 한 상태에서, 상기 제 1 노드와 상기 제 3 노드 간의 제 3 거리와 상기 제 2 노드와 상기 제 4 노드 간의 제 4 거리 간의 제 2 차이를 결정하는 단계; 상기 제 1 차이와 상기 제 2 차이를 비교한 결과에 기초하여, 상기 트리 구조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할지 여부를 결정하는 단계; 및 상기 교환할지 여 부에 대한 결정에 기초하여, 상기 아미노산 식별자들의 배열 순서를 결정하는 단계를 포함하며, 그리고 상기 트 리 구조 상에서의 노드는 아미노산 식별자와 대응될 수 있다. 일 실시예에서, 상기 아미노산 식별자들 간의 거리는 상기 트리 구조 내에서의 리프(leaf) 노드들 간의 Phylogenetic 거리일 수 있다. 일 실시예에서, 상기 제 1 차이와 상기 제 2 차이를 비교한 결과에 기초하여, 상기 트리 구조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할지 여부를 결정하는 단계는, 상기 제 2 차이가 상기 제 1 차이 보다 작 으면, 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할 것으로 결정하고 그리고 상기 제 2 차이가 상기 제 1 차이 보다 크면, 상기 제 2 노드와 상기 제 3 노드의 위치를 교환하지 않을 것으로 결정하는 단계를 포함할 수 있다. 일 실시예에 따른 컴퓨팅 장치가 개시된다 상기 컴퓨팅 장치는: 적어도 하나의 프로세서; 및 메모리를 포함할 수 있다. 상기 적어도 하나의 프로세서는: 제 1 타입의 MHC에 대응되는 제 1 클러스터 데이터를 획득하고; 상기 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하고; 및 상기 제 2 클러스터 데 이터에 적어도 부분적으로 기초하여 분류 모델을 학습시킬 수 있다. 일 실시예에서, 컴퓨터 판독가능 저장 매체에 저장되는 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은 컴퓨팅 장치의 적어도 하나의 프로세서에 의해 실행되는 경우: 제 1 타입의 MHC에 대응되는 제 1 클러스터 데이터를 획득하는 동작; 상기 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는 동작; 및 상기 제 2 클러스터 데이터에 적어도 부분적으로 기초하여 분류 모델을 학습시키는 동작을 수행할 수 있다."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시내용의 일 실시예에 따른 방법 및 장치는, MHC의 타입 별로 대응되는 펩타이드의 시퀀스를 보다 정확하 게 예측할 수 있다. 본 개시내용의 일 실시예에 따른 방법 및 장치는, 인공지능 기반 모델에서 사용될 학습 데이터셋을 효율적으로 증강시킴으로써, MHC의 타입에 대응되는 펩타이드들을 효율적인 방식으로 그룹화시킬 수 있다."}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시내용의 이해를 제공하기 위해서 제시된다. 본 개시내용의 실시를 위한 구체적인 내용을 설명하기에 앞서, 본 개시내용의 기술적 요지와 직접적 관련이 없는 구성에 대해서는 본 발명의 기술적 요지를 흩뜨리지 않는 범위 내에서 생략하였음에 유의하 여야 할 것이다. 또한, 본 명세서 및 청구범위에 사용된 용어 또는 단어는 발명자가 자신의 발명을 최선의 방법 으로 설명하기 위해 적절한 용어의 개념을 정의할 수 있다는 원칙에 입각하여 본 발명의 기술적 사상에 부합하 는 의미와 개념으로 해석되어야 할 것이다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\", \"부\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭하며, 상호 교환 가능하게 사용될 수 있다. 예를 들어, 컴포넌트는 프로세서상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실 행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을갖는 신호(예를 들면, 로컬 시스템, 분산 시스템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/ 또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, \"A 또는 B 중 적어도 하나\" 또는 “A 및 B 중 적어도 하나” 라는 용어는, \"A만을 포함하는 경우\", \"B 만을 포함하는 경우\", \"A와 B의 구성으로 조합된 경우\"를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 구성요소들, 블록들, 모듈들, 회로들, 수단들, 로직들, 및 알고리즘들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 구성요소들, 블록들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적 으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템 에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플 리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내 용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시내용에서의 제 1, 제 2, 또는 제 3 과 같이 제 N 으로 표현되는 용어들은 적어도 하나의 엔티티들을 구 분하기 위해 사용된다. 예를 들어, 제 1 과 제 2로 표현된 엔티티들은 서로 동일하거나 또는 상이할 수 있다. 본 개시내용에서 사용되는 용어 \"면역펩티돔(immunopeptidome)\"은 MHC 펩티돔 또는 HLA 펩티돔을 포함하도록 사 용될 수 있다. 예를 들어, HLA 펩티돔은 HLA에 결합되어 있는 펩타이드들을 의미할 수 있으며, MHC 펩티돔은 MHC에 결합되어 있는 펩타이드들을 의미할 수 있다. 본 개시내용에서 사용되는 용어, 염기서열 분석은 염기서열을 분석할 수 있는 임의의 형태의 기법들에 의해 수 행될 수 있으며, 예를 들어, 전장 유전체 염기서열 분석(whole genome sequencing), 전체 엑솜 염기서열 분석 (whole exome sequencing) 또는 전체 전사체 염기서열 분석(whole transcriptome sequencing)을 포함할 수 있 으나, 이에 제한되는 것은 아니다. 본 개시내용에서 사용되는 용어, 피검체는 주조직 적합 복합체(Major Histocompatibility Complex: MHC)-펩타 이드 결합체(complex)를 포함하는 생물학적 시료를 획득하기 위한 대상체 또는 개체를 의미할 수 있다. 본 개시내용에서 사용되는 용어, 시료는 MHC 타입을 결정하고자 하는 개체 또는 대상체로부터 획득된 것이라면 제한 없이 사용할 수 있으며, 예를 들어 생검 등으로 얻어진 세포나 조직, 혈액, 전혈, 혈청, 혈장, 타액, 뇌척 수액, 각종 분비물, 소변 및/또는 대변 등일 수 있다. 바람직하게 시료는 혈액, 혈장, 혈청, 타액, 비액, 객담, 복수, 질 분비물 및/또는 소변으로 이루어진 군에서 선택될 수 있으며, 보다 바람직하게는 혈액, 혈장 또는 혈 청일 수 있다. 상기 시료는 검출 또는 진단에 사용하기 전에 전처리할 수 있다. 예를 들어, 전처리 방법은 균질 화(homogenization), 여과, 증류, 추출, 농축, 방해 성분의 불활성화, 및/또는 시약의 첨가 등을 포함할 수 있다. 본 개시내용에서, 생물학적 시료는 조직, 세포, 전혈, 및/또는 혈액인 것일 수 있으나, 이에 제한되는 것은 아 니다. 본 개시내용에서는 설명의 편의를 위하여, MHC에 대한 일례로 인간 백혈구 항원(Human Leukocyte Antigen; HL A)을 예시적으로 사용하기로 한다. 따라서, 이하에서 사용되는 HLA에 대한 설명은 MHC에 대한 설명을 표현하기 위한 일례이며, 본 개시내용의 권리범위는 청구범위에 기재된 내용에 근거하여 결정될 것이며, HLA에 대한 예시 를 통해 그 권리범위가 HLA로 제한 해석되지는 않아야 할 것이다. 이처럼 본 개시내용에서의 HLA와 MHC는 서로 교환 가능하게 사용될 수 있다. 본 개시내용에서 사용되는 용어, “인간 백혈구 항원(Human Leukocyte Antigen; HLA)”은 인간의 MHC 유전자에 의해 생성되는 당단백 분자로, 인간이 가지고 있는 유전자 중에서 가장 큰 다형성(polymorphism)을 보이는 유전 자이다. HLA 타입을 결정하는 HLA 타이핑은 장기이식, 면역치료, 질병관련 연구, 친자감별과 같은 부친시험, 법 의학적 이용, 유전학적 연구 등의 다양한 분야에서 매우 활발하게 이용될 수 있다. 본 개시내용에서의 HLA 타입은 예를 들어, HLA-A 타입, HLA-B 타입 및/또는 HLA-C 타입을 포함할 수 있다. 도 1은 본 개시내용의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도를 개략적으로 도시한다. 본 개시의 일 실시예에 따른 컴퓨팅 장치는 프로세서 및 메모리를 포함할 수 있다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 본 개시내용에서의 컴퓨팅 장치는 본 개시내용의 실시예들을 구현하기 위한 시스템을 구성하는 노드를 의 미할 수 있다. 컴퓨팅 장치는 임의의 형태의 사용자 단말 또는 임의의 형태의 서버를 의미할 수 있다. 전 술한 컴퓨팅 장치의 컴포넌트들은 예시적인 것으로 일부가 제외될 수 있거나 또는 추가 컴포넌트가 포함될 수도 있다. 일례로, 전술한 컴퓨팅 장치가 단말을 포함하는 경우, 출력부(미도시) 및 입력부(미도시)가 그 범위 내에 포함될 수 있다. 본 개시내용에서의 컴퓨팅 장치는 후술될 본 개시내용의 실시예들에 따른 기술적 특징들을 수행할 수 있다. 컴퓨팅 장치는 본 개시내용의 일 실시예에 따라, 클러스터 데이터에 대응되는 MHC 타입을 출력하기 위한 분류 모델을 포함할 수 있다. 예를 들어, 컴퓨팅 장치는 제 1 타입의 MHC에 대응되는 제 1 클러스터 데이터를 획득하고, 제 1 클러스터 데이터에서의 적어도 하나의 값을 변경하기 위한 노이즈 생성 모델을 사용하여 제 1 클러스터 데이터로부터 제 1 타입의 MHC에 대응되는 제 2 클러스터 데이터를 생성하고, 그리고 제 2 클러스터 데이터에 기초하여 분류 모 델을 학습시킬 수 있다. 추가적으로, 컴퓨팅 장치는 제 2 클러스터 데이터에서의 배열 순서를 변경하는 방 식으로 분류 모델에 입력될 학습 데이터 셋을 생성할 수 있다. 다른 예시로, 본 개시내용에서의 컴퓨팅 장치는 제 1 타입의 MHC에 대응되는 제 1 클러스터 데이터를 획득 하고, 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성하고, 그리고 제 2 클러스 터 데이터에 기초하여 분류 모델을 학습시킬 수 있다. 본 개시내용의 일 실시예에서, 컴퓨팅 장치는 염기 서열 분석(예컨대, NGS)를 수행한 결과를 서버 또는 외 부 엔티티 등으로부터 획득할 수 있다. 다른 실시예에서, 컴퓨팅 장치는 피검체 유래의 생물학적 시료로부 터 획득된 유전자 데이터(예컨대, DNA 또는 RNA)에 대한 염기 서열 분석을 수행할 수도 있다. 일 실시예에서, 프로세서는 적어도 하나의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치 (CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장치(TPU: tensor processing unit) 등의 데이터 분석 및/또는 처리를 위한 프로세서를 포함 할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시내용의 일 실시예에 따라, 클러스터 데이터에 대응되는 MHC 타입을 출력하기 위한 분류 모델을 포함할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수도 있다. 프로세서는 딥러닝(DL: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역 전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치들의 프로세서들을 함께 사용하여 네트워크 함수의 학습, 네트워크 함 수를 이용한 데이터 분류를 처리할 수도 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴 퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 추가적으로, 프로세서는 통상적으로 컴퓨팅 장치의 전반적인 동작을 처리할 수 있다. 예를 들어, 프 로세서는 컴퓨팅 장치에 포함된 구성요소들을 통해 입력 또는 출력되는 데이터, 정보, 또는 신호 등 을 처리하거나 저장부에 저장된 응용 프로그램을 구동함으로써, 사용자에게 적절한 정보 또는 기능을 제공 또는 처리할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 컴퓨 팅 장치가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 본 개시의 실시예들에 따른 동작을 수행하도록 하는 컴퓨터 소프트웨어를 저장하는 저장매체 일 수 있다. 따라서, 메모리는 본 개시내용에 실시예들을 수행하는 데 필요한 소프트웨어 코드, 코드의 실 행 대상이 되는 데이터, 코드의 실행 결과를 저장하기 위한 컴퓨터 판독 매체들을 의미할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 임의의 타입의 저장 매체를 의미할 수 있다 예를 들어, 메모리 는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크 로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관련되어 동작할 수도 있다. 전 술한 메모리에 대한 기재는 예시일 뿐, 본 개시내용에서 사용되는 메모리는 전술한 예시들로 제한되지 않 는다. 본 개시내용에서의 통신부(미도시)는 유선 및 무선 등과 같은 그 통신 양태를 가리지 않고 구성될 수 있으며, 단거리 통신망(PAN: Personal Area Network), 근거리 통신망(WAN: Wide Area Network) 등 다양한 통신망으로 구성될 수 있다. 또한, 상기 네트워크부 공지의 월드와이드웹(WWW: World Wide Web) 기반으로 동작할 수 있으며, 적외선(IrDA: Infrared Data Association) 또는 블루투스(Bluetooth)와 같이 단거리 통신에 이용되는 무선 전송 기술을 이용할 수도 있다. 본 개시내용에서의 컴퓨팅 장치는 임의의 형태의 사용자 단말 및/또는 임의의 형태의 서버를 포함할 수 있 다. 따라서, 본 개시내용의 실시예들은 서버 및/또는 사용자 단말에 의해 수행될 수 있다. 사용자 단말은 서버 또는 다른 컴퓨팅 장치와 상호작용 가능한 임의의 형태의 단말을 포함할 수 있다. 사용자 단말은 예를 들어, 휴대폰, 스마트 폰(smart phone), 노트북 컴퓨터(laptop computer), PDA(personal digital assistants), 슬레이트 PC(slate PC), 태블릿 PC(tablet PC) 및 울트라북(ultrabook)을 포함할 수 있다. 서버는 예를 들어, 마이크로프로세서, 메인프레임 컴퓨터, 디지털 프로세서, 휴대용 디바이스 및 디바이스 제어 기 등과 같은 임의의 타입의 컴퓨팅 시스템 또는 컴퓨팅 장치를 포함할 수 있다. 추가적인 실시예에서 서버는 면역펩티돔 정보, 펩타이드 시퀀스의 정보, 염기 서열 정보, 유전자 정보, 및/또는 학습 데이터 셋을 저장 및 관리하는 엔티티를 의미할 수도 있다. 서버는 면역펩티돔 정보, 펩타이드 시퀀스의 정보, 염기 서열 정보, 유전자 정보 및/또는 학습 데이터 셋을 저장하기 위한 저장부(미도시)를 포함할 수 있으 며, 저장부는 서버내에 포함되거나 혹은 서버의 관리 하에 존재할 수 있다. 다른 예시로, 저장부는 서버 외부에 존재하여 서버와 통신가능한 형태로 구현될 수도 있다. 이 경우 서버와는 상이한 다른 외부 서버에 의해 저장부 가 관리 및 제어될 수 있다. 도 2는 본 개시내용의 일 실시예에 따른 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 일 실시예에서, 도 2에서 도시되는 단계들은 컴퓨팅 장치에 의해 수행될 수 있다. 추가적인 실시예에서, 도 2에서 도시되는 단계들 중 일부는 사용자 단말에서 수행되고 다른 일부는 서버에서 수행되는 방식과 같이 도2에서의 단계들은 복수의 엔티티들에 의해 구현될 수도 있다. 도 2에서 도시되는 바와 같이, 컴퓨팅 장치는 제 1 타입의 주조직 적합 복합체(Major Histocompatibility Complex: MHC)에 대응되는 제 1 클러스터 데이터를 획득할 수 있다. 일 실시예에서, 클러스터 데이터는 펩타이드 내에서의 사전 결정된 위치에서 아미노산의 종류의 존재 가능성을 나타내는 값을 포함할 수 있다. 예를 들어, 클러스터 데이터는 행렬 형태의 데이터를 포함할 수 있다. 이러한 예시에서, 클러스터 데이터의 행렬의 행과 열 중 어느 하나는 펩타이드의 위치를 나타내고 행렬의 행과 열 중 다른 하나는 아미노산 식별자를 나타낼 수 있다. 클러스터 데이터에 대한 예시는 도 4a 및 도 4b에서 도시된다. 일 실시예에서, 컴퓨팅 장치는 적어도 하나의 피검체로부터 유래된 MHC-펩타이드 결합체를 포함하는 생물 학적 시료로부터 펩타이드 시퀀스들의 리스트를 획득할 수 있다. 컴퓨팅 장치는 생물학적 시료에 대한 질 량(mass) 기반 시퀀스 분석을 통해 상기 MHC-펩타이드 결합체로부터 펩타이드를 분리하고 그리고 상기 분리된 펩타이드에 대응하는 상기 펩타이드 시퀀스들의 리스트를 획득할 수 있다. 컴퓨팅 장치는 외부 엔티티로부 터 수행된 질량 기반 시퀀스 분석을 수행하고 이러한 질량 기반 시퀀스 분석에 기초하여 펩타이드 시퀀스들의 리스트를 획득할 수도 있다. 제한이 아닌 예시로, 질량 기반 시퀀스 분석은 Mass Spectrometry에 의해 수행될 수 있다. 일례로, 질량 기반 시퀀스 분석은 질량 별 또는 m/z(질량 대 전하 비) 별로 특정한 아미노산에 대한 강도(intensity)를 나타내는 결과를 생성할 수 있다. 이러한 예시에서 컴퓨팅 장치는 클러스터링 모델을 사용하여 펩타이드 시퀀스들의 리스트로부터 클러스터 데이터를 획득할 수 있다. 일례로, 클러스터링 모델은, 비지도 학습(unsupervised learning)에 기반하여 사전학습될 수 있다. 예를 들어, 클러스터링 모델은, 펩타이드 시퀀스들의 리스트를 포함하는 입력 데이터에 기초하여, 펩타이드의 각 위치에서 의 아미노산 종류의 존재 가능성을 정량적으로 나타내는 제 1 출력 데이터, 상기 제 1 출력 데이터를 시각화하 여 나타내는 제 2 출력 데이터, 및 클러스터링된 클러스터들 각각에서의 상기 펩타이드 시퀀스들의 리스트를 포 함하는 제 3 출력 데이터 중 적어도 하나를 생성할 수 있다. 다른 예시로, 클러스터링 모델은 참조 데이터에 정답(ground-truth) MHC 타입이 매핑된 학습 데이터를 사용하여 지도 학습 방식으로 학습되는 인공지능 기반의 모델을 포함할 수 있다. 여기서, 참조 데이터는 MHC와 결합된 펩 타이드 시퀀스들의 리스트 또는 이러한 리스트의 합을 나타낼 수 있다. 일례로, 참조 데이터는 Single-allelic 기반의 테스트에 의해 사전 결정된 MHC 타입 별 펩타이드 시퀀스를 포함할 수 있다. 전술한 바와 같이, 참조 데 이터는 별도의 테스트를 통해 사전 결정된 MHC 타입에 대응되는 펩타이드의 시퀀스를 나타내는 임의의 형태의 데이터를 포함할 수 있다. 제 1 타입의 MHC에 대응되는 제 1 클러스터 데이터를 획득하는 방식에 대해서는 전술한 예시로 제한되지 않으며, 실험 데이터로부터 획득하는 방식 및/또는 공공 데이터로부터 획득하는 방식 등 다양한 방식들이 본 개 시내용의 범위 내에 포함될 수 있다. 본 개시의 일 실시예에서, 클러스터링 모델, 노이즈 생성 모델 및/또는 분류 모델은 인공지능 기반 모델을 의미 할 수도 있다. 이러한 인공지능 기반 모델에 대해서는 도 3에서 후술된다. 컴퓨팅 장치는 제 1 클러스터 데이터에서의 적어도 하나의 값을 변경하기 위한 노이즈 생성 모델을 사용하 여, 상기 제 1 클러스터 데이터로부터 제 1 타입의 MHC에 대응되는 제 2 클러스터 데이터를 생성할 수 있다 . 일 실시예에서, 제 2 클러스터 데이터는 제 1 클러스터 데이터와 상이한 값을 포함할 수 있다. 제 2 클러스터 데이터와 제 1 클러스터 데이터는 동일한 형식의 데이터를 의미할 수 있다. 일 실시예에서, 노이즈 생성 모델은 제 1 클러스터 데이터 내에서의 제 1 위치를 결정하기 위한 제 1 랜덤 함수, 및 상기 제 1 위치를 입력으로 하여, 상기 제 1 위치에 대응되는 제 1 값을 변경하는데 사용되는 제 2 값 을 생성하는 제 2 랜덤 함수에 기초하여 동작될 수 있다. 예를 들어, 컴퓨팅 장치는 제 1 랜덤 함수를 사용하여 제 1 클러스터 데이터 내에서의 제 1 위치를 결정할 수 있다. 여기서 제 1 랜덤 함수는 임의의 입력에 응답하여 행렬 내에서의 특정한 위치를 랜덤하게 출력하는 함 수를 포함할 수 있다. 예를 들어, 노이즈 생성 모델은 제 2 랜덤 함수를 사용하여 제 1 위치로부터 제 1 랜덤값 을 생성할 수 있다. 여기서 제 2 랜덤 함수는 행렬 내에서의 위치값(예컨대, 제 1 값)을 입력으로 하여 제 1 랜 덤값을 출력하는 함수를 포함할 수 있다. 노이즈 생성 모델은 제 1 랜덤 함수를 통해 생성된 제 1 위치에 대응 되는 제 1 값 및 제 2 랜덤 함수를 통해 생성된 제 1 랜덤값에 기초하여, 제 1 위치에 대응되는 제 1 값을 변경또는 업데이트할 수 있다. 노이즈 생성 모델은 업데이트된 제 1 값을 포함하는 제 2 클러스터 데이터를 생성할 수 있다. 이러한 방식으로 노이즈 생성 모델은 적어도 하나의 랜덤 함수를 사용하여 클러스터 데이터에서의 위 치 및 위치에 대응되는 값을 변경하는 방식으로 복수의 클러스터 데이터를 생성할 수 있다. 본 개시내용의 일 실시예에서, 제 1 위치에 대응되는 제 1 값을 변경 또는 업데이트 할 때, 노이즈 생성 모델은 제 1 위치에 대응되는 제 1 값에 상기 제 1 랜덤값을 합산하는 방식을 사용할 수 있다. 여기서의 제 1 랜덤값은 반복재현성 임계 범위에 기초하여 생성될 수 있으며, 이러한 반복재현성 임계 범위는 사전 결정될 수 있다. 일 례로, 반복재현성 임계 범위는 -1.53 내지 1.53의 범위를 가질 수 있다. 본 개시내용의 일 실시예에서, 노이즈 생성 모델은, 제 1 위치에 대응되는 제 1 값을 업데이트할지 여부를 판단 할 때, 제 1 랜덤값과 반복재현성 임계값을 비교하는 방식을 사용할 수 있다. 추가적으로, 노이즈 생성 모델은 제 1 위치에 대응되는 제 1 값을 변경 또는 업데이트하는 방식과 동일한 방식을 사용하여 행렬 내에서의 다른 위치들에 대응되는 값들을 변경 또는 업데이트할 수 있다. 노이즈 생성 모델은 이러한 변경 또는 업데이트된 값 들과 반복재현성 임계값을 비교하여 변경 또는 업데이트를 계속할지 아니면 중지할지 결정할 수 있다. 반복재현 성 임계값이 초과된다고 판단됨에 따라 변경 또는 업데이트가 중지될 것으로 결정된 경우, 노이즈 생성 모델은 변경 또는 업데이트가 반영된 클러스터 데이터를 생성할 수 있다. 일 실시예에서, 노이즈 생성 모델은, 제 1 위치에 대응되는 제 1 값을 제 1 랜덤값으로 변경한 이후에, 제 1 랜 덤 함수를 사용하여 제 1 클러스터 데이터 내에서의 제 2 위치를 결정할 수 있다. 노이즈 생성 모델은, 제 2 랜 덤 함수를 사용하여 상기 제 2 위치로부터 제 2 랜덤값을 생성하고, 그리고 상기 제 1 랜덤값 및 상기 제 2 랜 덤값에 기초한 중간값과 반복재현성 임계값 간의 비교에 기초하여, 상기 제 2 위치에 대응되는 제 2 값을 업데 이트할지 여부를 결정할 수 있다. 일 실시예에서, 중간값에 대한 일례로 평균값이 고려될 수 있다. 노이즈 생성 모델은, 상기 제 2 값을 업데이트한다고 결정한 경우, 상기 제 2 위치에 대응되는 제 2 값 및 상기 제 2 랜덤값 에 기초하여, 상기 제 2 위치에 대응되는 제 2 값을 업데이트할 수 있다. 노이즈 생성 모델은 상기 업데이트된 제 1 값 및 상기 업데이트된 제 2 값을 포함하는 상기 제 2 클러스터 데이터를 생성할 수 있다. 상기 제 2 랜덤값의 생성 범위는, 상기 제 1 랜덤값 및 상기 반복재현성 임계값에 기초하여 결정될 수 있다. 추 가적인 실시예에서, 상기 제 2 랜덤값은, 상기 제 2 랜덤값과 상기 제 1 랜덤값의 합산값이 상기 반복재현성 임 계값 미만이 되도록 생성 범위를 가질 수 있다. 이러한 경우, 새롭게 생성된 클러스터 데이터에 포함되는 값들 이 반복재현성 임계값에 가깝게 설정될 수 있어서, 분류 모델에 학습 효율 및 능력을 증대시킬 수 있는 학습 데 이터가 생성될 수 있다. 일 실시예에서, 컴퓨팅 장치는 제 2 클러스터 데이터에 적어도 부분적으로 기초하여 분류(classification) 모델을 학습시킬 수 있다. 예를 들어, 상기 제 2 클러스터 데이터에 제 1 MHC 타입이 정답(ground truth) 으로 라벨링된 학습 데이터에 적어도 부분적으로 기초하여, 지도 학습(supervised learning)의 방식으로 상기 분류 모델의 학습이 이루어질 수 있다. 일 실시예에서, 분류 모델은 클러스터 데이터에 포함되는 위치 점수 행렬(PWM: Position Weight Matrix)을 입력 으로 하고 그리고 상기 분류 모델에서 행렬로 표현되는 필터의 엘리먼트들 각각이 상기 위치 점수 행렬의 엘리 먼트들의 값을 처리할 수 있다. 일례로, 분류 모델은 CNN(Convolutional Neural Network)을 포함할 수 있다. 본 개시의 추가적인 실시예에서, 컴퓨팅 장치는 제 2 클러스터 데이터 내에서 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가질 수 있도록, 아미노산 식별자들의 배열 순서를 변경할 수 있다. 이에 따라 제 2 클러스터 데이터의 행렬에서의 배열이 변경될 수 있다. 이러한 아미노산 식별자들의 배열 순서는 예를 들어, 아 미노산들 간의 치환 가능성에 기초하여 결정될 수 있다. 아미노산 식별자들의 배열 순서가 변경된 제 2 클러스 터 데이터는 분류 모델의 입력 데이터로 활용될 수 있다. 이에 따라 생성된 학습 데이터는 분류 모델의 학습 성 능 또는 능력을 보다 향상시킬 수 있다. 도 3은 본 개시내용의 일 실시예에 따른 인공지능 기반 모델의 예시적인 구조를 도시한다. 본 명세서에 걸쳐, 인공지능 모델, 인공지능 기반 모델, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크 (neural network)는 동일한 의미로 사용될 수 있다. 일례로, 본 개시내용에서의 분류 모델 및/또는 클러스터링 모델은 인공지능 모델을 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드 들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 본 개시내용의 일 실시예에서, 뉴런들 또는 노드들의 집합은 레이어라는 표현으로 정의될 수 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 단백질 시퀀스 구조, 유전자 시퀀스 구조, 펩타이 드 시퀀스의 구조, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네트워크는 컨볼루션 뉴럴 네트워크 (CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더 (auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크, 적대적 생성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시내용의 분류 모델 및/또는 클러스터링 모델은 입력 레이어, 히든 레이어 및 출력 레이어를 포함하는 전 술한 임의의 구조의 네트워크 구조에 의해 표현될 수 있다. 본 개시내용의 분류 모델 및/또는 클러스터링 모델에서 사용될 수 있는 뉴럴 네트워크는 지도 학습(supervised learning), 비지도 학습(unsupervised learning), 반지도학습(semi supervised learning), 또는 강화학습 (reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크 가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 지도 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비지도 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 지도 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학 습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비지도 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이 어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가 중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하 여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라리제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 본 개시의 일 실시예에 따른 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 전술한 데이터 구조는 본 개시내용에서의 저장부에 저장될 수 있으며, 프로세서에 의해 실행될 수 있으며 그리고 통신부 에 의해 송수신될 수 있다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자 정의 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매체(예를 들어, 영구 저장 장치)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨팅 장치는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산 을 수행할 수 있다. 구체적으로 컴퓨팅 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트(List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다. 비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 인공지능 기반 모델, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 이하에서는 신경망으로 통일하여 기술한다. 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력되는 데이터, 신경망의 가중치, 신경 망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신 경망의 학습을 위한 손실 함수 등을 포함할 수 있다. 신경망을 포함한 데이터 구조는 상기 개시된 구성들 중 임 의의 구성 요소들을 포함할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이 터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등 전부 또는 이들의 임의의 조합을 포함하여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특 성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발 생되는 모든 형태의 데이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭 될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습 데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는 전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 가중치에 기초하여 출력 노드에서 출력되는 데이터 값을 결정할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨팅 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨팅 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨팅 장치 또는 다른 컴퓨팅 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데 이터 구조에서 B-Tree, R-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술 한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 전술한 바와 같이, 본 개시의 일 실시예에 따른 분류 모델은 인공지능 기술에 기반한 클러스터링을 수행하기 때 문에, HLA 타입과 매칭되는 펩타이드 시퀀스를 보다 정확하게 결정할 수 있다. 도 4a는 본 개시내용의 일 실시예에 따른 클러스터 데이터의 데이터 구조(400A)를 예시적으로 나타낸다. 도 4a에서 도시되는 데이터 구조(400A)는 예시적인 목적일 뿐, 데이터 구조(400A)에서의 X축 및 Y축 의 길이 및 형태는 구현 양태에 따라 가변적일 수 있다. 도 4에서 도시되는 바와 같이, 400A로 표현되는 데이터 구조는 하나의 클러스터 데이터를 나타낼 수 있다. 도 4a에서의 참조 번호 420은 펩타이드 시퀀스의 위치를 의미한다. 도 4a에서의 예시에서의 참조 번호 420은 총 9개의 위치(즉, 9-mer)를 표현한다. 도 4a에서의 참조 번호 410은 아미노산의 종류를 나타낸다. 도 4a에서의 예시에서는 A 내지 Y 까지의 총 20개의 아미노산이 예시된다. 클러스터 데이터의 데이터 구조(400A)는 도 4a에서 도시되는 바와 같이 테이블 구조 또는 행렬 구조를 나타낼 수 있다. 클러스터 데이터는 클러스터링 방법에 의해 또는 Single Allelic 테스트에 의해 획득되는 특정한 HLA 타입이 할당된 펩타이드 시퀀스들의 리스트를 의미할 수 있다. 추가적으로 구현 양태에 따라 클러스터 데이터는 공공 DB로부터 획득된 데이터 또한 포함할 수 있다. 데이터 구조(400A)가 클러스터링 결과에 포함되는 하나의 클러스터 데이터를 나타내는 경우, 상기 데이터 구조 (400A)는 펩타이드의 각 위치에서의 아미노산 종류의 존재 가능성을 정량적으로 나타낸다. 도 4a에서 도시되는 바와 같이, 행렬의 엘리먼트들의 값이 펩타이드의 각 위치에서의 아미노산 종류 별 존재 가능성을 나타낼 수 있 다. 일례로 아미노산 종류의 존재 가능성은 퀀텀 값의 형태로 표현될 수 있다. 데이터 구조(400A)에서의 각 엘 리먼트의 값이 클수록 해당 아미노산이 해당 위치에 존재할 가능성이 높다는 것을 의미할 수 있다. 본 개시의 추가적인 실시예에서, 클러스터 데이터가 클러스터링 모델에 의해 생성되는 경우, 데이터 구조(400 A)는 클러스터링 모델의 출력 데이터를 나타낼 수 있다. 본 개시의 일 실시예에서, 분류 모델은 도 4a에서 도시되는 데이터 구조(400A)의 형식의 데이터를 입력 데이터 로 사용하여 해당 클러스터 데이터에 대응되는 HLA 타입이 무엇인지 출력할 수 있다. 도 4b는 본 개시내용의 일 실시예에 따라 HLA 타입 별 클러스터 데이터의 데이터 구조를 예시적으로 나타낸다. 도 4b에서는 예시적으로 총 6개의 HLA 타입들이 도시된다. 도 4b에서 도시되는 데이터 구조(400B)는 각각의 HLA 타입들에 대한 그래프는 도 4a에서의 데이터 구조(400A)를 시각화한 데이터 구조를 의미할 수 있다. 여기서 X축은 펩타이드의 위치를 나타내며 Y축은 Bits를 나타낸다. 특 정 위치 별로 표현되는 알파벳은 아미노산의 종류는 나타내며, 알파벳의 크기가 클수록 해당 아미노산이 해당 위치에 존재할 가능성이 높다는 것을 나타내고, 그리고 알파벳의 크기가 작을수록 해당 아미노산이 해당 위치에 존재할 가능성이 낮다는 것을 나타낸다. 추가적인 실시예에서, 도 4b에서 도시되는 그래프 형태의 데이터 구조(400B)는 클러스터링 모델의 출력 데이터 의 일례일 수 있다. 도 4b에서 도시되는 예시에서, HLA-A03:01 및 HLA-A29:02 각각에 대해서는 하나의 HLA 타입별로 하 나의 클러스터 데이터가 획득될 수 있으며, HLA-B44:02 및 HLA-B44:03은 하나의 클러스터 데이터로 그룹화 될 수 있으며, 그리고 HLA-C12:03 및 HLA-C16:01은 하나의 클러스터 데이터로 그룹화될 수 있다. 위의 예 시에서, HLA-A03:01 및 HLA-A29:02는 펩타이드의 시퀀스를 기준으로 서로 명확하게 구분이 가능한 HLA 타입들에 해당하며, HLA-B44:02 및 HLA-B44:03는 펩타이드의 시퀀스를 기준으로 서로 명확하게 구분짓 기 어려운 HLA 타입들에 해당하며, 그리고 HLA-C12:03 및 HLA-C16:01은 펩타이드의 시퀀스를 기준으로 서 로 명확하게 구분짓기 어려운 HLA 타입들에 해당한다. 따라서, 전술한 바와 같이, 본 개시의 일 실시예에 따르면, 클러스터 데이터는 HLA 타입별로 펩타이드 시퀀스가 얼마나 유사한지 여부를 판단하는데 사용될 수도 있다. 이렇게 펩타이드 시퀀스가 유사한 것으로 판단되는 둘 이상의 HLA 타입들은 하나의 HLA 타입으로 통합되어 관리될 수 있다. 본 개시의 일 실시예에 따른 기법은 분류 모델을 사용하여 도 4b에서 예시되는 클러스터 데이터들 각각에 대한 HLA 타입을 효율적이고 정확하게 결정할 수 있다. 본 개시의 일 실시예에 따른 기법은 도 4b에서 도시되는 바와 같이 복수의 클러스터 데이터들에 대한 분리를 자동화할 수 있다. 도 5는 본 개시내용의 일 실시예에 따른 HLA 타입 별로 대응되는 펩타이드의 서열을 예측하기 위한 분류 모델의 동작을 예시적으로 도시한다. 도 5는 컴퓨팅 장치에 의해 수행될 수 있다. 도 5에서의 참조번호 505는 클러스터링 모델을 사용하여 클러스터 데이터를 획득하는 예시를 도시하며, 구현 양태에 따라 참조번호 505에 따른 실시예는 클러스터 데이터를 획득하는 다른 방식으로 대체될 수도 있다. 일 실시예에서, 컴퓨팅 장치는 생물학적 시료를 질량 기반 시퀀스 분석 모델에 입력하여 펩타이 드 시퀀스들의 리스트를 획득할 수 있다. 시료는 MHC 타입을 결정하고자 하는 개체 또는 대상체로부터 획 득된 것이라면 제한 없이 사용할 수 있으며, 예를 들어 생검 등으로 얻어진 세포나 조직, 혈액, 전혈, 혈청, 혈 장, 타액, 뇌척수액, 각종 분비물, 소변 및/또는 대변 등일 수 있다. 바람직하게 시료는 혈액, 혈장, 혈청, 타 액, 비액, 객담, 복수, 질 분비물 및/또는 소변으로 이루어진 군에서 선택될 수 있으며, 보다 바람직하게는 혈 액, 혈장 또는 혈청일 수 있다 일 실시예에서, 펩타이드 시퀀스들의 리스트는 시료에 포함된 피검체의 펩타이드 시퀀스들의 집합을 의미 할 수 있다. 일 실시예에서, 펩타이드 시퀀스들의 리스트는 클러스터링 모델에 입력되어 복수의 클러스터 데이터 X, Y, Z(550: 550a, 550b, 550c)가 출력될 수 있다. 이러한 클러스터 데이터 X, Y, Z(550: 550a, 550b, 550c) 각각은 분류 모델의 입력 데이터로 사용될 수 있다. 일 예시에서, 분류 모델은 클러스터 데이터 X(550a)에 응답하여 MHC 타입(예컨대, HLA A03:01)을 출 력할 수 있다. 다른 예시로, 분류 모델은 클러스터 데이터 Y(550b)에 응답하여 MHC 타입(예컨대, HLA A29:02)을 출력할 수 있다. 다른 예시로, 분류 모델은 클러스터 데이터 Z(550c)에 응답하여 MHC 타입 (예컨대, HLA C12:03)을 출력할 수 있다. 본 개시의 추가적인 실시예에서, 클러스터링 모델은, 펩타이드 내에서의 복수의 위치들 중 사전결정된 앵 커 위치를 포함하는 제 1 위치에서 존재하는 아미노산의 종류에 제 1 가중치를 부여하고 그리고 상기 복수의 위 치들 중 상기 제 1 위치와 상이한 다른 위치에서 존재하는 아미노산 종류에 제 2 가중치를 부여하는 방식으로 클러스터링을 수행할 수 있다. 이러한 클러스터링의 결과, 클러스터 데이터(550: 550a, 550b 및 550c)가 생성될 수 있다. 여기서 상기 제 1 가중치는 상기 제 2 가중치보다 더 큰 것을 특징으로 한다. 이에 따라, 클러스터링 모델은 앵커 위치에 대응하는 위치에서는 다른 위치에 비해 보다 높은 가중치를 부여할 수 있기 때문에, 펩타이 드 시퀀스에서의 상대적으로 중요한 위치인 앵커 위치에 대한 중요성을 고려하는 방식으로 클러스터 데이터가생성될 수 있다. 본 개시내용에서의 앵커 위치(anchor position)은 k-mer로 이루어진 펩타이드 시퀀스의 복수의 위치들 중에서 다른 위치들에 비해 유사도 판단 시 높은 가중치를 가지는 위치(들)를 의미할 수 있다. 일례로, 앵커 위치는 9- mer인 경우 2번째 및 9번째에 해당하는 위치를 의미할 수 있다. 상기 앵커 위치에 대한 설명은 예시적인 목적으 로 사용된 것으로, 구현 양태에 따라서 k-mer 내에서의 다양한 위치에 앵커 위치(들)가 존재할 수 있다. 본 개 시의 일 실시예에서, 도 4a에서 도시되는 바와 같이, k-mer(예컨대, 9-mer)의 위치들 각각에 대한 아미노산 종 류의 존재 가능성을 나타내는 행렬이 클러스터링 모델에 의해 생성되는 클러스터 데이터를 의미할 수 있다. 도 6a는 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 6a에서는 분류 모델의 학습 과정에서 분류 모델로 입력되는 학습 데이터를 생성하는 예시적 인 방법론이 제시된다. 도 6a에서 도시되는 방법론은 예를 들어, 컴퓨팅 장치에 의해 수행될 수 있다. 노이즈 생성 모델에 입력되는 PWM(Position Weight Matrix)은 제 1 클러스터 데이터와 대응될 수 있 다. 즉, 상기 제 1 클러스터 데이터는 펩타이드 내에서의 사전결정된 위치에서 아미노산의 종류의 존재 가능성 을 나타내는 값을 포함하는 위치 점수 행렬(PWM)과 대응될 수 있다. 노이즈 생성 모델은 제 1 클러스터 데이터를 입력 받아 제 1 클러스터 데이터의 행렬에서의 적어도 하나의 엘리먼트의 값을 변경한 제 2 클러스터 데이터를 생성할 수 있다. 노이즈 생성 모델에 의해 생성된 제 2 클러스터 데이터와 제 1 클러스터 데이터는 분류 모델의 입력으로 사용될 수 있다. 노이즈 생성 모델은 제 1 클러스터 데이터 내에서의 제 1 위치를 결정하기 위한 제 1 랜덤 함수 및 제 1 위치를 입력으로 하여 상기 제 1 위치에 대응되는 제 1 값을 변경하는데 사용되는 제 2 값을 생성하는 제 2 랜 덤 함수를 사용할 수 있다. 일 실시예에서, 노이즈 생성 모델은 제 1 클러스터 데이터를 입력 받아 제 1 클러스터 데이터에 서의 특정한 엘리먼트를 제 1 랜덤 함수를 사용하여 결정할 수 있다. 제 1 랜덤 함수는 제 1 클러스터 데이터 의 행렬에서의 특정한 위치를 랜덤하게 결정하는데 사용될 수 있다. 예를 들어, 2차원 행렬의 제 1 클러스 터 데이터에 대해서, 제 1 랜덤 함수는 임의의 입력값에 응답하여 2차원 좌표를 나타내기 위한 2개의 값들 을 출력할 수 있다. 여기서 출력되는 2개의 값들은 행렬의 크기 범위 내에서 결정될 수 있다. 이처럼 제 1 랜덤 함수는 제 1 클러스터 데이터의 차원의 개수와 대응되는 개수의 출력값들을 출력할 수 있다. 제 1 랜덤 함수에 따라 행렬에서의 위치가 결정되는 경우, 제 2 랜덤 함수가 사용될 수 있다. 제 2 랜덤 함수는 엘리먼트의 값을 변경시키기 위해 사용될 수 있다. 제 2 랜덤 함수는 임의의 입력(예컨대, 위치값)에 응답하여 랜덤값을 출력하는데 사용될 수 있다. 제 2 랜덤 함수에 의해 출력된 랜덤값에 기초하여, 제 1 랜덤 함수에 의 해 출력된 위치에 대응되는 엘리먼트의 값이 변경될 수 있다. 예를 들어, 제 2 랜덤 함수에 의해 출력된 값과 기존의 값이 합산되는 방식으로 제 1 랜덤 함수에 의해 출력된 위치에 대응되는 엘리먼트의 값이 변경될 수 있 다. 일 실시예에서, 제 2 랜덤 함수의 출력값은 사전결정된 임계 범위 내의 값을 가질 수 있다. 예를 들어, 사전결 정된 임계 범위는 반복재현성 임계 범위를 의미할 수 있다. 일례로, 반복재현성 임계 범위란 제 1 클러스터 데 이터의 값들에 대한 변화 가능 범위를 나타낼 수 있다. 다른 예시로, 반복 재현성 임계 범위란 제 1 클러 스터 데이터의 특성을 유지할 수 있는 노이즈의 범위를 나타낼 수 있다. 일례로 노이즈의 값이 0.8733인 경우까지 반복 재현성이 있는 것으로 사전 결정(예컨대, 실험에 따른 결정)될 수 있으며, 이에 따라 제 2 랜덤 함수에 의해 출력되는 값의 범위는 -1.53을 초과하고 1.53 미만일 수 있다. 여기서 제 2 랜덤 함수에 의해 출력 되는 값과 기존의 값의 합산이 상기 반복재현성 임계 범위 내에 있는 경우, 노이즈 생성 모델은 전술한 엘 리먼트의 값에 대한 변경을 추가로 수행할 수 있다. 일 실시예에서, 반복재현성 임계 범위는 2개의 클러스터 데이터들이 서로 유사범위에 해당하는지 판단하기 위한 임계 범위로서 고려될 수도 있다. 이러한 경우, 반복재현성 임계범위는 2개의 클러스터들 각각에 대응되는 행렬 들에 포함된 엘리먼트들 각각의 값들의 차이에 대한 표준 편차 및 공분산 중 적어도 하나에 기초하여 결정될 수 있다. 즉, 비교의 대상이 되는 제 1 행렬 및 제 2 행렬이 있다고 가정한다. 이러한 경우, 제 1 행렬에 포함된 제 1 엘리먼트들 각각의 값과 상기 제 2 행렬에 포함된 제 2 엘리먼트들 각각의 값의 차이들에 대한 표준 편차및 공분산 중 적어도 하나에 기초하여 임계 범위가 결정될 수 있다. 일 실시예에서, 노이즈 생성 모델은 복수회의 변경을 수행하는 과정에서 제 2 랜덤 함수에 의해 출력된 랜 덤값들을 합산하여, 랜덤값들의 합산값이 상기 반복재현성 임계 범위를 초과한다고 결정되는 경우, 노이즈 생성 을 종료하고 제 2 클러스터 데이터를 생성할 수 있다. 일례로, 노이즈 생성 모델은 랜덤값들의 합산값이 상기 반복재현성 임계 범위를 초과한다고 결정되는 경우, 제 2 클러스터 데이터를 생성하는데 있어서 제 2 랜덤 함수의 마지막 출력값을 제외할 수 있다. 전술한 예시에서는 반복재현성 임계범위를 초과하는 실시예를 예로 들어 설명하였으나, 구현 양태에 따라 반복 재현성 임계범위 이상인 실시예 또한 본 개시내용의 권리범위 내에 속할 수 있다는 점은 당업자에게 명백할 것 이다. 수학식 1"}
{"patent_id": "10-2023-0079887", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "수학식 1에서 Xn는 제 2 랜덤 함수에 의해 출력되는 랜덤값을 나타내며, 여기서의 n은 1부터 k까지의 반복 횟수 를 가질 수 있다. θk는 제 2 랜덤 함수에 의해 출력되는 랜덤값들의 합산을 나타낼 수 있다. 일 실시예에서, 제 2 랜덤 함수에 의해 출력되는 랜덤값인 Xn은 -1.53 < X < 1.53을 만족하는 값일 수 있다. 본 개시내용의 일 실시예에서, 노이즈 생성 모델은 θk의 값과 반복재현성 임계 범위 간의 비교에 기초하여, θk의 절대값이 1.53 미만인 경우 제 1 클러스터 데이터에 대한 추가적인 노이즈를 생성하고 그리고 θk의 절대값이 1.53 이상인 경우 노이즈 생성을 종료할 수 있다. 일례로, 노이즈 생성이 종료되는 경우 노이즈 생성 모델은 마지막에 생성된 랜덤값을 제외한 제 2 클러스터 데이터를 생성할 수 있다. 다른 예시로, 구 현 양태에 따라서, 노이즈 생성이 종료되는 경우 노이즈 생성 모델은 마지막에 생성된 랜덤값이 포함된 제 2 클러스터 데이터를 생성할 수도 있다. 추가적인 실시예에서, 제 2 랜덤 함수에 의해 출력되는 랜덤값인 Xn은 |X| < 1.53 - θk 만족하는 값일 수 있다. 이러한 실시예에서는 제 2 랜덤 함수에 의해 출력되는 랜덤값이 반복재현성 임계값인 1.53에 가깝도록 생성될 수 있다. 이에 따라, 분류 모델에서 분류 기준을 명확히 설정할 수 있도록 허용하기 위한 학습 데이터 셋 이 생성될 수 있다. 전술한 바와 같이, 노이즈 생성 모델은 특정 위치를 결정하고 그리고 변경할 엘리먼트에 대한 값을 결정하 는 전술한 방식을 복수회 반복함으로써 제 1 클러스터 데이터에 기초하여 복수의 제 2 클러스터 데이터를 생성 할 수 있다. 이러한 제 2 클러스터 데이터는 제 1 클러스터 데이터에서의 적어도 하나의 엘리먼트가 변경된 클 러스터 데이터를 의미할 수 있다. 일반적으로 하나의 HLA 타입에 대응되는 하나 또는 소량의 클러스터 데이터 (예컨대 PWM)가 존재하기 때문에, 클러스터 데이터의 HLA 타입을 결정하기 위한 인공지능 기반의 분류 모델이 충분히 학습되기 위한 학습 데이터의 양이 부족할 수 있다. 따라서, 본 개시의 일 실시예에 따른 노이즈 생성 모델은 제 1 클러스터 데이터로부터 복수의 제 2 클러스터 데이터를 생성할 수 있기 때문에, 인공지 능 기반 분류 모델에서의 학습 성능을 높이기 위한 충분한 양의 학습 데이터 셋이 확보될 수 있다. 도 6b는 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 6b와 도 6a와의 차이점은 New Matrix이다. 도 6a는 노이즈 생성 모델에 의해 출력된 제 2 클러스 터 데이터 및/또는 노이즈 생성 모델의 입력으로 사용된 제 1 클러스터 데이터를 포함하는 PWM에 기 초하여 분류 모델이 학습되는 과정을 예시적으로 도시한다. 도 6b는 도 6a는 노이즈 생성 모델에 의 해 출력된 제 2 클러스터 데이터 및/또는 노이즈 생성 모델의 입력으로 사용된 제 1 클러스터 데이터에 추 가 알고리즘을 적용하여, 분류 모델의 입력되는 데이터를 추가적으로 전처리하는 방식을 예시적으로 도시 한다. 도 6b에서 도시되는 바와 같이, 컴퓨팅 장치는 노이즈 생성 모델의 출력이 포함된 PWM에서의 아 미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 컴퓨팅 장치는 상기 결정된 배열 순서에 따라 재배열된 아미노산 식별자들을 포함하는 New Matrix를 생성할 수 있다. 도 6b에서 예시되는 실시예는 PWM 내에서의 아미노산 식별자들이 재배열된 New matrix를 사용하여 분류 모델이 학습되는 과정을 예시적으로 도시한다. 본 개시내용에서의 배열 순서가 재배열되는 대상은 행렬 중 행 또는 열 중 적어도 하나일 수 있다. 일례로, 행 렬 중 아미노산 식별자들을 포함하는 행 또는 열에서의 아미노산 식별자들의 배열 순서가 변경될 수 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서를 결정할 때, 아미노산들 간의 치환 가능성 을 고려할 수 있다. 컴퓨팅 장치는 아미노산들 간의 치환 가능성에 적어도 부분적으로 기초하여, 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별 자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서를 결정할 때, 아미노산 서열들 간의 물리 화학적 유사성 혹은 치환 가능성 정도를 나타내는 행렬을 이용할 수 있다. 컴퓨팅 장치는 아미노산 서열들 간의 물리 화학적 유사성 혹은 치환 가능성 정도를 나타내는 행렬을 Phylogenetic 트리 구조로 변환하는 것에 적어도 부분적으로 기초하여, 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치는 Blosum 행렬을 Phylogenetic 트리 구조로 변환하는 것에 적어도 부분적으로 기초하여, 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 전술한 바와 같이, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가질 수 있는 다양 한 방법론들을 사용하여 분류 모델에 최종적으로 입력된 클러스터 데이터(예컨대, PWM)를 생성할 수 있다. 이에 따라, 입력되는 클러스터 데이터(예컨대, PWM)의 행렬 내에서의 인자들 간의 의미론적 관련성이 존재 하기 때문에, 이미지 기반의 분류를 수행하는 분류 모델에서 행렬 데이터에 대한 보다 효율적인 해석 및 처리가 가능해질 수 있다. 일 실시예에서, 인공지능 기반 분류 모델은, 제 2 클러스터 데이터(630 및/또는 640)에 상기 제 1 MHC 타 입이 정답으로 라벨링된 학습 데이터에 적어도 부분적으로 기초하여, 지도 학습의 방식으로 학습될 수 있다. 일 실시예에서, 인공지능 기반 분류 모델은, 클러스터 데이터에 포함되는 위치 점수 행렬(PWM)(630 또는 640)을 입력으로 하고 그리고 분류 모델에서 행렬로 표현되는 필터의 엘리먼트들 각각이 상기 PWM(630 또 는 640)의 엘리먼트들의 값을 처리할 수 있다. 일례로, 분류 모델은 CNN을 포함할 수 있다. 도 7은 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 일 실시예에서, 도 7에서 도시되는 단계들은 컴퓨팅 장치에 의해 수행될 수 있다. 추가적인 실시예에서, 도 7에서 도시되는 단계들 중 일부는 사용자 단말에서 수행되고 다른 일부는 서버에서 수행되는 방식과 같이 도 7에서의 단계들은 복수의 엔티티들에 의해 구현될 수도 있다. 도 7에서 도시되는 바와 같이, 컴퓨팅 장치는 제 1 타입의 주조직 적합 복합체(Major Histocompatibility Complex: MHC)에 대응되는 제 1 클러스터 데이터를 획득할 수 있다. 도 7에서 설명되는 제 1 클러스터 데이터는 배열 순서가 변경된 제 2 클러스터 데이터를 생성하는데 기초가 되 는 임의의 형태의 데이터를 의미할 수 있다. 일례로, 도 7에서의 제 1 클러스터 데이터는 도 2에서 설명되는 제 1 클러스터 데이터와 대응될 수 있다. 이러한 예시에서 제 1 클러스터 데이터는 MHC 타입과 매핑된 행렬 형태의 데이터를 의미할 수 있다. 다른 예시로, 도 7에서의 제 1 클러스터 데이터는 노이즈 생성 모델에 의해 생성된 클러스터 데이터(도 2에서의 제 2 클러스터 데이터)와 대응될 수 있다. 이러한 예시에서, 제 1 클러스터 데이터 는 적어도 하나의 랜덤 함수에 의해 생성된 노이즈가 적용된 엘리먼트를 포함하는 행렬 형태의 데이터를 의미할 수 있다. 도 7에서의 클러스터 데이터에 대한 일 실시예에서, 클러스터 데이터는 펩타이드 내에서의 사전 결정된 위치에 서 아미노산의 종류의 존재 가능성을 나타내는 값을 포함할 수 있다. 예를 들어, 클러스터 데이터는 행렬 형태 의 데이터를 포함할 수 있다. 이러한 예시에서, 클러스터 데이터의 행렬의 행과 열 중 어느 하나는 펩타이드의위치를 나타내고 행렬의 행과 열 중 다른 하나는 아미노산 식별자를 나타낼 수 있다. 클러스터 데이터의 구조 및/또는 형식에 대한 구체적인 예시는 도 2, 도 4a 및 도 4b에서 설명된 내용을 참조하기로 한다. 일 실시예에서, 컴퓨팅 장치는 제 1 클러스터 데이터에서의 배열 순서가 변경된 제 2 클러스터 데이터를 생성할 수 있다. 도 7에서의 제 2 클러스터 데이터는 행렬 내에서의 배열 순서가 의미론적 관련성을 갖도록 변경된 클러스터 데 이터를 의미할 수 있다. 의미론적 관련성이란 가깝게 배치된 엘리먼트들에 대해서는 서로 물리적 및/또는 화학 적으로 유사성 또는 치환가능성이 상대적으로 높고 멀리 배치된 엘리먼트들에 대해서는 서로 물리적 및/또는 화 학적으로 유사성 또는 치환가능성이 상대적으로 낮다는 것을 의미할 수 있다. 일 실시예에서, 컴퓨팅 장치는 행렬 내에서의 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도 록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 컴퓨팅 장치는 상기 결정된 배열 순서에 따라 재배열된 아미노산 식별자들을 포함하는 제 2 클러스터 데이터를 생성할 수 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서를 결정할 때, 아미노산들 간의 치환 가능성 을 고려할 수 있다. 컴퓨팅 장치는 아미노산들 간의 치환 가능성에 적어도 부분적으로 기초하여, 제 2 클 러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식 별자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서를 결정할 때, 아미노산 서열들 간의 물리 화학적 유사성 혹은 치환 가능성 정도를 나타내는 행렬을 이용할 수 있다. 컴퓨팅 장치는 아미노산 서열들 간의 물리 화학적 유사성 혹은 치환 가능성 정도를 나타내는 행렬을 Phylogenetic 트리 구조로 변환하는 것에 적어도 부분적으로 기초하여, 제 2 클러스터 데이터내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치는 Blosum 행렬을 Phylogenetic 트리 구조로 변환하는 것에 적어도 부분적으로 기초하여, 제 2 클러스터 데이터 내에서의 상기 아미노산 식별자들의 배열 순서가 의미론적 관련성을 가지도록, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들의 배열 순서를 결정하는데 있어서, 제 1 클러스터 데이 터의 위치 별 중요도를 고려할 수 있다. 일례로, 컴퓨팅 장치는 제 1 타입의 MHC에 대응되는 상기 제 1 클 러스터 데이터 내의 위치 별 엘리먼트의 값에 기초하여, 상기 제 1 클러스터 데이터의 위치 별 중요도를 결정할 수 있다. 예를 들어, 위치 별 중요도는, 특정 MHC 타입을 결정하는데 있어서 제 1 클러스터 데이터에 포함된 아 미노산 식별자들 각각에 대한 기여도 또는 영향력을 의미할 수 있다. 일 실시예에서, 컴퓨팅 장치는 위치 별 중요도가 사전결정된 임계 중요도 미만인 위치 또는 상기 위치 별 중요도의 순위가 사전결정된 임계 순위 미만인 위치에 대응되는 아미노산 식별자를 클러스터 데이터의 엣지 (edge) 위치에 배열하도록 배열 순서를 결정할 수 있다. 임계 순위 또는 임계 중요도는 구현 양태에 따라 가변 적으로 결정될 수 있다. 임계 순위란 행렬 내에서의 아미노산 식별자들 간의 상대적인 우선순위를 결정하기 위 해 기준이 되는 순위이며, 그리고 임계 중요도는 행렬 내에서의 아미노산 식별자들 중에서 엣지 위치로 배열될 아미노산 식별자들을 결정하기 위한 기준이 되는 정량적인 값을 의미할 수 있다. 일 실시예에서, 열과 행에 따른 엘리먼트들의 값을 갖는 행렬 형태의 데이터를 이미지처럼 학습시키기 위해서는, 행렬 내에서의 서로 인접한 엘리먼트들 간의 관련성이 필요할 수 있다. 따라서, 본 개시의 일 실시예 에 따른 행렬 내 데이터 배열 순서를 정렬하는 기법은, 아미노산 식별자들의 배열 순서를 화학적 또는 물리적 특정을 고려하여 결정하기 때문에, 이미지 기반의 인공지능 네트워크를 사용하였을 때, 행렬의 특징이 보다 정 확하게 추출될 수 있다. 일 실시예에서, 행렬 내에서의 아미노산 식별자들 각각에 대한 중요도에 기초하여 중요도가 상대적으로 낮은 아 미노산 식별자들을 행렬의 엣지 부분에 배치하는 경우, 이러한 이미지 기반의 인공지능 네트워크를 사용하였을 때 행렬의 특징이 보다 더 정확하게 그리고 효율적으로 추출될 수 있다. CNN 등의 이미지 기반의 인공지능 네트 워크를 사용하는 경우, 특징 추출을 위한 필터가 사용될 수 있다. 이러한 필터들을 사용하여 이미지의 특징을 추출하는 과정에서 이미지의 엣지 부분의 특징들의 경우, 제로 패딩(zero padding 등이 수행되더라도) 엣지 이 외의 다른 부분의 특징들에 비해, 특징 추출 또는 특징 학습이 잘되지 않을 수 있다. 이러한 점을 고려하여, 각 각의 MHC 타입 별 클러스터 데이터를 수집하고, MHC 타입 별로 위치별 총합, 평균, 분산 및/또는 표준편차를 구 해서 MHC 타입을 결정하는데 있어서 기여도 또는 영향력이 낮다고 판단되는 아미노산 식별자는 행렬에서의 엣지부분에 배열될 수 있다. 컴퓨팅 장치는 제 1 타입의 MHC에 대응되는 복수의 제 1 클러스터 데이터들에서 위치 별 엘리먼트의 값들에 대한 평균 및 표준편차 중 적어도 하나에 기초하여, 상기 제 1 클러스터 데이터의 위치 별 중요도를 결정할 수 있다. 여기서의 엣지란 행렬에서의 첫번째 행 또는 열, 마지막 행 또는 열, 그리고/또는 이들과 가까운 행 또는 열을 의미할 수 있다. 일례로, 분류 모델에서 사용되는 필터의 크기에 따라 엣지의 크기 또는 범위가 결정될 수 있다. 이러한 예시에서, 필터의 크기가 클수록 엣지의 크기 또는 범위가 크도록 결정될 수 있다. 추가적인 실시예에서, 행렬 내에서의 아미노산 식별자들 각각에 대한 중요도는 Explainable AI 모델을 사용하여 결정될 수도 있다. 이러한 경우, 컴퓨팅 장치는 사전학습된 분류 모델을 사용하여 입력 데이터에서의 일부 값을 변경함에 따른 출력의 변화를 분석하는 방식으로, 입력 데이터에서의 아미노산 식별자들 각각에 대한 기여 도 또는 중요도를 결정할 수 있다. 추가적인 실시예에서, 컴퓨팅 장치는 아미노산 식별자들 간의 관계를 분석하는 적어도 하나의 연구 결과 및/또는 아미노산 식별자들 간의 거리를 나타내는 알고리즘의 출력들 각각에 대한 가중치를 부여하는 방식을 아 미노산 식별자들 간의 배열 순서를 결정할 수도 있다. 일 실시예에서, 컴퓨팅 장치는 아미노산 식별자들 간의 거리 관계를 기초로 행렬 내에서의 배열 순서를 결 정할 수 있다. 예를 들어, 컴퓨팅 장치는 아미노산 식별자들 간의 거리를 트리 구조로 변환할 수 있다. 아 미노산 식별자들 간의 거리는 공개된 연구 자료 및/또는 실험 자료를 통해 결정될 수 있다. 컴퓨팅 장치는 트리 구조 상에서 서로 인접한 제 1 노드, 제 2 노드, 제 3 노드 및 제 4 노드에 대해서, 상기 제 1 노드와 상 기 제 2 노드 간의 제 1 거리와 상기 제 3 노드와 상기 제 4 노드 간의 제 2 거리 간의 제 1 차이를 결정할 수 있다. 여기서의 노드들 각각은 아미노산 식별자와 대응될 수 있다. 컴퓨팅 장치는 트리 구조 상에서의 노 드들의 위치(즉, 아미노산 식별자들의 위치)를 서로 교환한 상태에서 거리 관계에 있어서의 변화 및/또는 차이 를 통해, 노드들에 대한 위치를 교환할지 여부를 결정할 수 있다. 컴퓨팅 장치는 트리 구조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환한 상태에서, 상기 제 1 노드와 상기 제 3 노드 간의 제 3 거리와 상 기 제 2 노드와 상기 제 4 노드 간의 제 4 거리 간의 제 2 차이를 결정하고, 그리고 상기 제 1 차이와 상기 제 2 차이를 비교한 결과에 기초하여, 상기 트리 구조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할지 여부를 결정할 수 있다. 컴퓨팅 장치는 이러한 노드들의 위치를 교환할지 여부에 대한 결정에 기초하여, 상기 아미노산 식별자들의 배열 순서를 결정할 수 있다. 일 실시예에서, 아미노산 식별자들 간의 거리는 상기 트리 구조 내에서의 리프(leaf) 노드들 간의 Phylogenetic 거리를 의미할 수 있다. 일 실시예에서, 컴퓨팅 장치는 상기 제 1 차이와 상기 제 2 차이를 비교한 결과에 기초하여, 상기 트리 구 조 상에서 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할지 여부를 결정할 때, 상기 제 2 차이가 상기 제 1 차이 보다 작으면, 상기 제 2 노드와 상기 제 3 노드의 위치를 교환할 것으로 결정하고 그리고 상기 제 2 차이 가 상기 제 1 차이 보다 크면, 상기 제 2 노드와 상기 제 3 노드의 위치를 교환하지 않을 것으로 결정할 수 있 다. 일 실시예에서, 트리 구조 내에서의 각각의 노드들의 세트에 대해서, 전술한 노드들 간의 위치 관계를 교환 할지 여부를 결정하는 방식으로 아미노산 식별자들의 배열 순서가 결정될 수 있다. 이러한 방식으로, 아미노산 식별자들의 배열 순서가 거리 관계에 기초하여 결정될 수 있으며 나아가 트리 구조 에서의 위치를 변경함으로써 보다 정확한 거리 관계에 따른 아미노산 식별자들의 배열 순서가 결정될 수 있다. 전술한 방식으로, 컴퓨팅 장치는 아미노산 식별자들 간의 배열 순서의 의미론적 관련성이 존재하도록 제 1 클러스터 데이터 내에서의 아미노산 식별자들의 위치 및 배열 순서를 결정함으로써, 분류 모델의 학습 효율을 증대시킬 수 있다. 일 실시예에서, 컴퓨팅 장치는 배열 순서가 변경된 제 2 클러스터 데이터에 기초하여 분류 모델을 학습시 킬 수 있다. 아미노산 식별자들의 배열이 의미론적 관련성을 가질 수 있기 때문에, 노이즈 생성 모델에 의해 생성된 학습 데 이터 셋에 대한 분류 모델의 학습 효율이 높아질 수 있다. 도 8은 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시한 다. 도 8은 아미노산 식별자들 간의 관련성을 나타내는 행렬 및 아미노산들의 거리 관계를 나타내는 트리 구조 를 도시한다. 예를 들어, 트리 구조에 대한 예시로 phylogenetic 트리가 고려될 수 있으며, 아미노산 식별자들 간의 관 련성을 나타내는 행렬에 대한 예시로 Blosum 행렬이 고려될 수 있다. 이러하 예시에서, 본 개시의 따른 기 법은 아미노산들 간의 치환 가능성을 기초로 만들어진 행렬을 아미노산들 간의 거리를 나타내는 트리 구조 로 변환하는 방식을 사용할 수 있다. 이러한 아미노산들 간의 거리를 나타내는 트리 구조의 리프 (leaf) 노드들 각각은 아미노산 식별자와 대응될 수 있다. 트리 구조에 따른 거리 관계에 기초하여, 행렬 내에서의 아미노산 식별자들의 배열 순서 또는 배열 위치가 결정될 수 있다. 컴퓨팅 장치는 아미노산들 간 의 치환가능성을 나타내는 Blosum 행렬로부터 아미노산들 간의 거리를 나타내는 phylogenetic 트리를 생성하고 그리고 생성된 phylogenetic 트리에 기초하여 분류 모델에 입력될 클러스터 데이터 내에서의 아 미노산 식별자들 간의 배열 순서를 조정할 수 있다. 전술한 바와 같이, 본 개시의 일 실시예에 따른 기법은 PWM과 같은 분류 모델의 입력 데이터에 포함된 아미노산 식별자들을 재배열함으로써, 특징이 정확히 잡히지 않아 학습하기가 어려웠던 PWM과 같은 행렬 형태의 입력 데 이터를 이미지 기반의 분류 모델이 양호하게 학습할 수 있도록 효율적인 방식의 전처리가 이루어질 수 있다. 도 9는 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시한 다. 도 9에서는 아미노산 식별자들 간의 거리 관계를 나타내는 다양한 형태의 데이터 구조들(910, 920 및 930)이 예 시된다. 도 9에서 도시되는 바와 같이, 아미노산 식별자들 간의 거리 관계는 도 8에서 예시되는 형태의 트리 구조 이외의 다양한 형태의 트리 구조들(910, 920 및 930)이 고려될 수 있다. 아미노산 식별자들 간의 거리는 트리 구조들(910, 920 및 930) 각각에 대한 특성에 따라 결정될 수 있다. 본 개시의 추가적인 실시예에서, 전술한 트리 구조들(910, 920 및 930) 중 복수의 트리 구조들이 아미노산 식별 자들의 배열 순서를 결정하는데 함께 사용될 수도 있다. 이러한 경우, 각 트리 구조에서의 출력에 사전결정된 가중치가 부여되는 방식으로 아미노산 식별자들 간의 거리 관계가 결정될 수 있다. 결정된 거리 관계에 기초하 여, 분류 모델의 입력될 행렬에서의 엘리먼트들의 배열 순서가 변경될 수 있다. 도 10은 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시 한다. 도 10에서 도시되는 바와 같이, 아미노산 식별자들 간의 거리 관계를 나타내는 데이터 구조의 리프 노드 들 각각(F, W, Y, I, V 및 L)은 아미노산 식별자와 대응된다. 도 10에서는 아미노산 식별자들 간의 거리를 나타내는 예시적인 데이터 구조가 도시되며, 구현 양태에 따 라 다양한 형태의 데이터 구조가 본 개시내용의 범위 내에 포함된다는 점은 당업자에게 명백할 것이다. 도 10에서의 데이터 구조에서의 노드들 각각에 대해 정량적인 값이 할당될 수 있다. 정량적인 값은 다른 노드(예컨대, 인접한 노드 혹은 사전결정된 다른 노드)와의 거리 관계를 나타내는 값으로서, 이러한 정량적인 값의 크기가 클수록 거리가 상대적으로 멀고 그리고 정량적인 값의 크기가 작을수록 거리가 상대적으로 가깝다 는 것을 나타낸다. 도 10에서의 예시에서, 참조 번호 1100으로 표시된 박스 내에서의 노드들 간의 배열 순서가 변경 또는 교환될지 여부를 판단하는 과정이 예시적으로 설명된다. 박스 내에서 총 4개의 노드들(Y, I, V, L)이 도시된다. 여기서 Y와 I 간의 거리는 (0.05 + 0.13) + (0.11 + 0.09 + 0.05) = 0.43의 값을 가질 수 있으며, V와 L 간의 거리는 (0.09 + 0.05) + 0.19 = 0.33의 값을 가질 수 있다. 전술한 바와 같이, 노드들 간의 거리는 각 노드에서 다른 노드로 트리 구조를 따라 이동하면서 거쳐가는 노드들 각각에 할당된 정량값들을 합산함으로써 결정 될 수 있다. 일례로, 노드들 간의 거리는 각 노드에서 다른 노드로 트리 구조를 따라 최단 경로로 이동하 면서 거쳐가는 노드들 각각에 할당된 정량값들을 합산함으로써 결정될 수 있다. Y-I 간의 거리인 0.43과 V와 L 간의 거리인 0.33 간의 제 1 차이는 0.1로 결정될 수 있다. I와 V의 위치를 교환한 것으로 가정하고, 전술한 거리들 간의 차이가 추가적으로 결정될 수 있다. 각 노드들에 할당된 정량값은 그대로 유지되고 리프 노드들 간의 위치만이 서로 변경될 수 있다. 예를 들어, 이진 형태의 트리 구조인 경우, 리프 노드들인 I와 V의 위치 관계가 서로 변경되어도 트리 구조의 형태 및 트리 구조의 특성에 있어서는 영향을 주지 않는다. 다만, I와 V의 위치 관계가 서로 변경되는 경우, I와 인접한 다른 주변 노드와 I 와의 거리 관계 및 V와 인접한 다른 주변 노드와 V와의 거리 관계가 변경될 수 있다. 상위 노드들의 위치는 유지되며 하위 노드들 I와 V 간의 위치가 서로 교환된 상태에서, Y와 V간의 거리는 (0.05 + 0.13) + (0.05 + 0.09 + 0.05) = 0.37로 결정되며, 그리고 I와 L 간의 거리는 (0.11 + 0.09) + (0.19) = 0.39로 결정될 수 있다. Y-V 간의 거리인 0.37과 I와 L 간의 거리인 0.39 간의 제 2 차이는 0.02로 결정될 수 있다. 전술한 바와 같이, I와 V의 위치가 변경되기 이전의 제 1 차이는 0.1이고 I와 V의 위치가 변경된 이후의 제 2 차이는 0.02로, 위치 관계가 변경된 경우 위치들 간의 차이가 더 적다는 것이 확인된다. 이에 따라, 아미노산 식별자들 간의 배치에 있어서 전체적으로 거리 관계가 고르게 분포되는 것이 바람직하므로, 행렬 내에서의 아미 노산 식별자들의 배치 순서를 정할 때, 거리 관계 기반의 트리 구조를 결정한 이후에 트리 구조 내 에서 I와 V의 위치가 변경되는 것으로 추가로 결정될 수 있다. 이러한 방식으로, 본 개시의 일 실시예에 따른 기법은 아미노산 식별자들의 거리 관계가 고르게 분포되고 이에 따라 아미노산 식별자들 간의 배열 순서의 의미 론적 관련성이 발생되도록 입력 데이터에 대한 전처리를 수행할 수 있다. 도 11은 본 개시내용의 일 실시예에 따른 컴퓨팅 환경의 개략도이다. 본 개시내용에서의 컴포넌트, 모듈 또는 부(unit)는 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구 현하는 루틴, 프로시져, 프로그램, 컴포넌트, 데이터 구조 등을 포함한다. 또한, 당업자라면 본 개시내용에서 제시되는 방법들이 단일-프로세서 또는 멀티프로세서 컴퓨팅 장치, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스 널 컴퓨터, 핸드헬드 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각 은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있 다는 것을 충분히 인식할 것이다. 본 개시내용에서 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치 들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원 격 메모리 저장 장치 둘다에 위치할 수 있다. 컴퓨팅 장치는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예 로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 발명의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 본 명세서에서의 컴퓨 터는 컴퓨팅 장치와 상호 교환가능하게 사용될 수 있다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아키텍처도 역시 처리 장치 로서 이용될 수 있다.시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA), 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), SSD 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부 터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이 브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라 이브 구현을 위한 인터페이스는 예를 들어, USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 저장 매체에 대한 설명이 HDD, 이동식 자기 디스 크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 저장 매체도 역시 예시적인 운영 환경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 발명의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 어플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 어플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 발명이 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 서버 컴퓨 터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네 트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하 지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망 (LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워 크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 서버에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 정하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로그램 모듈들 또 는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시적인 것이며 컴 퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시내용의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계 층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 본 개시내용의 방법 청구항들은 샘플 순서로 다양한 단계 들의 엘리먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다."}
{"patent_id": "10-2023-0079887", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시내용의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도를 개략적으로 도시한다. 도 2는 본 개시내용의 일 실시예에 따른 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 3은 본 개시내용의 일 실시예에 따른 인공지능 기반 모델의 예시적인 구조를 도시한다. 도 4a는 본 개시내용의 일 실시예에 따른 HLA 타입 별 클러스터 데이터의 데이터 구조를 예시적으로 나타낸다. 도 4b는 본 개시내용의 일 실시예에 따라 HLA 타입 별 클러스터 데이터의 데이터 구조를 예시적으로 나타낸다. 도 5는 본 개시내용의 일 실시예에 따른 HLA 타입 별로 대응되는 펩타이드의 서열을 예측하기 위한 분류 모델의 동작을 예시적으로 도시한다. 도 6a는 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 6b는 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 7은 본 개시내용의 일 실시예에 따라 분류 모델을 학습시키기 위한 예시적인 방법을 도시한다. 도 8은 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시한 다. 도 9는 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시한 다. 도 10은 본 개시내용의 일 실시예에 따라 분류 모델에 입력되는 데이터에 대한 전처리 과정을 예시적으로 도시 한다. 도 11은 본 개시내용의 일 실시예에 따른 컴퓨팅 환경의 개략도이다."}
