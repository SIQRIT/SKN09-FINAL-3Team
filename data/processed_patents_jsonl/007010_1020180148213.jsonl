{"patent_id": "10-2018-0148213", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0062609", "출원번호": "10-2018-0148213", "발명의 명칭": "ULD에 항공 화물 적재시 최적화 시스템 및 그 방법", "출원인": "소프트온넷", "발명자": "송동호"}}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공지능 검색기술 기반으로 항공화물을 컨테이너(ULD)에 최적으로 적재하기 위한 ULD에 항공 화물 적재시 최적화 시스템으로서, 입력부, 출력부,화물 EDI 정보와 ULD 타입 정보가 저장되는 저장부와,상기 입력부에서 입력된 화물 아이템들과 ULD 타입에 기초하여 화물들과 ULD 타입간의 기하학적 구조에 맞도록최적화 적재하도록 제어하는 ULD 패킹 항공화물 적재 처리부를 포함하고;상기 ULD 패킹 항공화물 적재 처리부는, 상기 입력부를 통해 입력되는 적재할 화물들에 대한 정보로서 화물 EDI 정보와 항공 화물 운송장(Air Waybill)정보 및 ULD 타입 정보를 처리하는 입력 데이터 처리부와, 화물 아이템과 ULD를 기본 객체로 설정하여, 화물들과 ULD의 기하학적 구조를 고려하여, 다중 화물들을 다중ULD내에 적재하는 최적화를 수행함에 있어서 미리 설정된 제약조건들을 만족하도록 처리하여 프로그래밍하는 화물 아이템 패킹 다중제약조건 만족 동시 처리부와, 상기 화물 아이템 패킹 다중제약조건 만족 동시 처리부에서처리한 다양한 제약조건들을 만족시키는 화물 배치 목표점을 검색하기 위해 CSP(Constraint SatisfactionProblem, 제약조건 만족 프로그램) 검색 엔진을 수행하는 CSP 검색 수행부와, 상기 CSP 검색 엔진이 검색 완료한 화물 배치 목표점들에 대한 정보를 처리하여 출력 데이터를 형성하여 상기출력부에 출력하는 출력데이터 처리부를 포함하는 것을 특징으로 하는, ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 화물 아이템 패킹 다중제약조건 만족 동시처리부는, 화물을 직교 좌표에서 x, y, z축 방향으로 매 단위 유닛마다 이동시키면서 ULD내 좌표점 위치를 설정하는 ULD내화물 위치 처리부와,화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회전시켜 ULD내 좌표점 위치를 설정하는 화물 회전 처리부와, 각각의 화물의 꼭지점을 비교하여 화물들이 겹치지 않는 좌표점 위치를 설정하는 화물 비중첩 처리부와,ULD내 각 화물들의 무게의 총 합이 ULD의 무게 제한을 넘지 않도록 처리하는 화물 무게 한계 처리부와, 특정 화물이 적재되었을 때 그 위에 적재되는 다른 화물들의 무게가 상기 특정 화물이 견딜 수 있는 하중보다크지 않도록 처리하는 화물 쌓기 처리부와,화물들을 모두 넣었을 때 ULD의 무게중심이 가능한 화물 바닥면의 중심점과 일치하도록, 화물을 적재할 때 이미적재된 화물과 앞으로 적재될 화물의 무게를 고려하여 처리하는 ULD 무게 중심 처리부와,화물들을 ULD의 한쪽 면이 비행기 동체와 닿는 면을 경사각으로 깎아 놓은 경사면을 고려하여 화물을 ULD내에위치시키는 ULD 경사면 처리부를 포함하는 것을 특징으로 하는 ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,공개특허 10-2020-0062609-3-상기 CSP 검색 수행부는 CSP 검색 엔진 수행부, CSP 검색 엔진을 포함하고,상기 CSP 검색 엔진 수행부는 리눅스 OS 상에서 혹은 윈도즈 OS상에서 수행하기 위해 필요한 다양한 파라미터값들을 입력받아 상기 CSP 검색 엔진을 동작시키고,상기 CSP 검색 엔진은 상기 입력 데이터 처리부에서 입력된 화물 아이템들과 ULD 타입의 인스턴스에 기초하여,상기 화물 패킹 다중제약조건 만족 동시처리부에서 프로그래밍한 다양한 제약조건들을 만족하는 화물 배치 목표점(화물 배치 위치)을 검색하는 것을 특징으로 하는 ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 ULD 경사면 처리부는 헤시안 노멀 폼(Hessian Normal Form)을 이용하여 직교좌표의 기준 원점과 상기 경사면까지의 거리계산을 수행하는 것인, ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중 어느 한 항에 있어서,상기 화물 입력 데이터 처리부는 EDI 형태의 EDI 화물 정보를 처리하고, 상기 EDI 화물 정보는 화물의 기하학적인 크기와 관련된 가로, 세로, 높이 정보와, 무게, 출발지 공항, 도착지공항, 최종 목적지 주소가 포함되어 있는 것인, ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 화물 출력 데이터 처리부는, 화물들에 대한 ULD 패킹 항공화물 적재 최적화 처리 결과를 출력하는 출력데이터를 파일 형태로 저장하는 ULD 패킹 파일 출력부와,화물들에 대한 ULD 패킹 항공화물 적재 최적화 처리 결과를 3차원 그래픽 처리하여 화면상으로 출력하는 ULD 패킹 3D 그래픽 출력부를 포함하는 것을 특징으로 하는 ULD에 항공 화물 적재시 최적화 시스템."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "인공지능 검색기술 기반으로 항공화물을 컨테이너(ULD)에 최적으로 적재하기 위한 ULD에 항공 화물 적재시 최적화 방법으로서, 입력 데이터 처리부가 화물 EDI 정보와 화물 EDI 정보와 항공 화물 운송장(Air Waybill) 정보 및 ULD 타입 정보를 입력받아 처리하는 제1단계와;화물아이템 패킹 다중제약조건 만족 동시 처리부가 입력된 화물 EDI 정보와 ULD 타입 정보에 기초하여 화물들과ULD 타입간의 기하학적 관계를 고려하여 복수의 화물을 ULD내에 최적화 적재하도록 미리 설정된 제약조건들을만족하도록 처리하여 프로그래밍하는 제2단계와; 상기 화물 패킹 다중제약조건 만족 동시처리부가 CSP(Constraint Satisfaction Problem, 제약조건 만족 프로그램) 검색 엔진을 동작시켜, 미리 설정된 다양한 제약조건들을 만족하는 화물 배치 목표점을 찾는 제3단계;상기 CSP 검색 엔진의 검색이 완료되면, 검색된 화물 배치 목표점을 출력하는 제4단계를 포함하는 것을 특징으로 하는, ULD에 항공 화물 적재시 최적화 방법."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 제2단계는, 화물들이 ULD내에 어떤 좌표점에 위치시킬 것인가를 정하기 위해, 화물을 직교좌표에서 x, y, z축 방향으로 단위 유닛마다 이동시키면서 위치를 설정하는 ULD내 위치처리 단계와, 공개특허 10-2020-0062609-4-화물들을 화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회전시키는 회전 처리 단계와, 각각의 화물의 꼭지점을 비교함으로써 화물들이 겹치지 않도록 하는 비중첩 처리 단계와,ULD내 화물들의 무게의 총 합은 ULD의 무게 제한이 넘지 않도록 하는 화물 무게 제한 처리 단계와, 상기 화물 EDI 정보에 기초하여 특정 화물이 적재되었을 때 그 위에 적재되는 다른 화물들의 무게가 상기 특정화물이 견딜 수 있는 하중보다 크지 않도록 하는 화물 쌓기 처리 단계와,화물들을 ULD내에 적재 완료한 상태에서 ULD의 무게중심이 가능한 한 화물 바닥면의 가로 세로 평면의 중심점에일치하게 하는 조건을 만족시키기 위해, 화물을 적재할 때 이미 적재된 화물과 추후 적재될 화물의 무게를 고려하는 ULD 무게 중심 처리 단계, 및ULD의 한쪽 면이 비행기 동체와 닿는 면을 경사각으로 깎아 놓은 경사면에 화물이 닿지 않도록 화물의 위치를처리하는 경사면 처리 단계를 동시에 처리하는 것인, ULD에 항공 화물 적재시 최적화 방법."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 경사면 처리 단계는, 헤시안 노멀 폼(Hessian Normal Form)을 이용하여 직교좌표의 기준 원점과 상기 경사면까지의 거리계산을 수행하는 것인, ULD에 항공 화물 적재시 최적화 방법."}
{"patent_id": "10-2018-0148213", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제7항 내지 제9항 중 어느 한 항에 있어서,상기 화물 입력 데이터 처리부는 EDI 형태의 EDI 화물 정보를 처리하고, 상기 EDI 화물 정보는 화물의 기하학적인 크기와 관련된 가로, 세로, 높이 정보와, 무게, 출발지 공항, 도착지공항, 최종 목적지 주소가 포함되어 있는 것인, ULD에 항공 화물 적재시 최적화 방법."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은, 인공지능 검색기술 기반으로 항공화물을 컨테이너(ULD)에 최적으로 적재하기 위한 ULD에 항공 화물 적재시 최적화 시스템으로서, 입력부, 출력부, 화물 EDI 정보와 ULD 타입 정보가 저장되는 저장부와, 상기 입력 부에서 입력된 화물 아이템들과 ULD 타입에 기초하여 화물들과 ULD 타입간의 기하학적 구조에 맞도록 최적화 적 (뒷면에 계속)"}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 항공 화물 적재 최적화 시스템 및 방법에 관한 것으로서, 보다 상세하게는 항공 화물 컨테이너 (ULD:Unit Load Device)내에 다양한 모양의 화물을 최적으로 적재하는, ULD에 항공 화물 적재시 최적화 시스템 및 방법에 관한 것이다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "항공 화물(Air Cargo)은 항공기에 의해 운송되는 승객의 수화물(Baggage)과 우편물(Mail)을 제외한 항공 운송장 (Air Waybill)에 의해 수송되는 화물을 지칭한다. 항공 화물은 다른 방식에 비해서 수송 기간이 현저하게 짧고, 정시 수송에 따른 화물의 적기 인도가 가능하므로 재고비용과 자본비용을 절감할 수 있으며, 충격에 의한 화물 의 파손 및 장기 수송에 의한 변질 가능성이 적어 화물을 안전하게 상대 하주에게 인도할 수 있는 장점이 있으 나, 운송비용이 다른 방식에 비해서 높다는 단점을 가진다. 그러나 전술한 장점들 때문에 오늘날 국제 무역에 있어서 항공 화물은 가장 중요한 화물 운송 방법 중의 하나로 인식되고 있다. 단위 탑재 용기(Unit Load Device, ULD)는 항공 화물용으로 항공기 형태에 적합하고 취급이 용이하도록 설계된 보관 용기이다. ULD를 사용하면 대량의 항공 화물을 수송함에 있어서 화물을 보호하고, 신속한 작업 및 취급이 가능하다. ULD는 예컨대 컨테이너 형태, 팔레트 형태 또는 이글루(Igloo) 형태가 존재한다. 항공화물용 ULD의 외형 특징 중 하나는, 비행기 동체의 단면이 원형으로서, 여기에 탑재할 ULD도 따라서 동체에 닿는 코너를 사각으로 깍아둔 모양을 하고 있다. 따라서, ULD내에 탑재할 화물들의 위치를 계산할 때에도, 이렇 게 깎인 면을 고려하여 화물을 탑재해야 할 필요가 있다. 또한, 일반적으로 컨테이너에 화물을 적재하는 경우, 컨테이너 내부 공간을 최대한 활용하여 화물을 효율적으로 적재시키는 것이 매우 중요하다. 이때 화물의 종류에 따라 화물의 부피나 형태가 다르고, 하중이 다르므로 일괄적으로 화물을 적재하는 것은 그 한계가 있다. 따라서, 화물을 컨테이너에 적재하기 전에 미리 시뮬레이션을 통하여 컨테이너의 적재 효율을 연산하고, 적재될 화물의 형태나 하중을 확인하는 과정이 반드시 필요하다. 종래의 ULD 패킹 시스템의 경우는 인공지능 컴퓨터 소프트웨어, 특히 CSP 제약조건 만족 프로그래밍을 사용하지 않았기 때문에 다수의 수하물, 화물 등을 ULD에 적재하는데 투입되는 노동력과 시간을 예측하기 어려웠다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기 종래기술의 문제점을 해소하기 위한 것으로서, 다수의 수하물, 화물 등을 ULD에 적재하는데 투 입되는 노동력과 시간을 획기적으로 줄일 수 있고, 또한, ULD 갯수를 최소화 할 수 있는 인공지능 검색기술 기 반 항공화물 컨테이너(ULD)에 항공 화물 적재시 최적화 시스템 및 이것을 이용한 ULD에 항공 화물 적재시 최적 화 방법을 제공하는 것이다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기의 목적을 달성하기 위한 본 발명의 제1양태에 따른 구성은, 인공지능 검색기술 기반으로 항공화물을 컨테 이너(ULD)에 최적으로 적재하기 위한 ULD에 항공 화물 적재시 최적화 시스템으로서, 입력부, 출력부, 화물 EDI 정보와 ULD 타입 정보가 저장되는 저장부와, 상기 입력부에서 입력된 화물 아이템들과 ULD 타입에 기초하여 화 물들과 ULD 타입간의 기하학적 구조에 맞도록 최적화 적재하도록 제어하는 ULD 패킹 항공화물 적재 처리부를 포 함하고; 상기 ULD 패킹 항공화물 적재 처리부는, 상기 입력부를 통해 입력되는 적재할 화물들에 대한 정보로서 화물 EDI 정보, 항공 화물 운송장(Air Waybill) 정보 및, ULD 타입 정보를 처리하는 입력 데이터 처리부와; 화 물 아이템과 ULD를 기본 객체로 설정하여, 화물들과 ULD의 기하학적 구조를 고려하여, 다중 화물들을 다중 ULD 내에 적재하는 최적화를 수행함에 있어서 미리 설정된 제약조건들을 만족하도록 처리하여 프로그래밍하는 화물 아이템 패킹 다중제약조건 만족 동시 처리부와, 상기 화물 아이템 패킹 다중제약조건 만족 동시 처리부에서 처 리한 다양한 제약조건들을 만족시키는 화물 배치 목표점을 검색하기 위해 CSP(Constraint Satisfaction Problem, 제약조건 만족 프로그램) 검색 엔진을 수행하는 CSP 검색 수행부와, 상기 CSP 검색 엔진이 검색 완료 한 목표점들에 대한 정보를 처리하여 출력데이터를 형성하여 상기 출력부에 출력하는 출력데이터 처리부를 포함 한다. 여기서, 상기 화물 아이템 패킹 다중제약조건 만족 동시처리부는, 화물을 직교 좌표에서 x, y, z축 방향으로 매 단위 유닛마다 이동시키면서 ULD내 좌표점 위치를 설정하는 ULD내 화물 위치 처리부와, 화물의 X, Y, Z축 방향 으로 직교 좌표에 맞도록 직각 회전시켜 ULD내 좌표점 위치를 설정하는 화물 회전 처리부와, 각각의 화물의 꼭 지점을 비교하여 화물들이 겹치지 않는 좌표점 위치를 설정하는 화물 비중첩 처리부와, ULD내 각 화물들의 무게 의 총 합이 ULD의 무게 제한을 넘지 않도록 처리하는 화물 무게 한계 처리부와, 특정 화물이 적재되었을 때 그 위에 적재되는 다른 화물들의 무게가 상기 특정 화물이 견딜 수 있는 하중보다 크지 않도록 처리하는 화물 쌓기 처리부와, 화물들을 모두 넣었을 때 ULD의 무게중심이 가능한 화물 바닥면의 중심점과 일치하도록, 화물을 적재 할 때 이미 적재된 화물과 앞으로 적재될 화물의 무게를 고려하여 처리하는 ULD 무게 중심 처리부와, 화물들을 ULD의 한쪽 면이 비행기 동체와 닿는 면을 경사각으로 깎아 놓은 경사면을 고려하여 화물을 ULD내에 위치시키는 ULD 경사면 처리부를 포함하는 것이 바람직하다. 상기 CSP 검색 수행부는 CSP 검색 엔진 수행부, CSP 검색 엔진을 포함하고, 상기 CSP 검색 엔진 수행부는 리눅 스 OS 상에서 혹은 윈도즈 OS상에서 수행하기 위해 필요한 다양한 파라미터값들을 입력받아 상기 CSP 검색 엔진 을 동작시키고, 상기 CSP 검색 엔진은 상기 입력 데이터 처리부에서 입력된 화물 아이템들과 ULD 타입의 인스턴 스에 기초하여, 상기 화물 패킹 다중제약조건 만족 동시처리부에서 프로그래밍한 다양한 제약조건들을 만족하는 화물 배치 목표점(화물 배치 위치)을 검색하는 것이 바람직하다. 상기 ULD 경사면 처리부는 헤시안 노멀 폼(Hessian Normal Form)을 이용하여 직교좌표의 기준 원점과 상기 경사 면까지의 거리계산을 수행하는 것이 효과적이다. 상기 화물 입력 데이터 처리부는 EDI 형태의 EDI 화물 정보를 처리하고, 상기 EDI 화물 정보는 화물의 기하학적 인 크기와 관련된 가로, 세로, 높이 정보와, 무게, 출발지 공항, 도착지 공항, 최종 목적지 주소가 포함되어 있 는 것이 바람직하다.한편, 상기 화물 출력 데이터 처리부는, 화물들에 대한 ULD 패킹 항공화물 적재 최적화 처리 결과를 출력하는 출력데이터를 파일 형태로 저장하는 ULD 패킹 파일 출력부와, 화물들에 대한 ULD 패킹 항공화물 적재 최적화 처 리 결과를 3차원 그래픽 처리하여 화면상으로 출력하는 ULD 패킹 3D 그래픽 출력부를 포함하는 것이 바람직하다. 또한, 상기의 목적을 달성하기 위한 본 발명의 제2양태에 따른 구성은, 인공지능 검색기술 기반으로 항공화물을 컨테이너(ULD)에 최적으로 적재하기 위한 ULD에 항공 화물 적재시 최적화 방법에 관한 것으로, 입력 데이터 처 리부가 화물 EDI 정보와 ULD 타입 정보를 입력받아 처리하는 제1단계와; 화물아이템 패킹 다중제약조건 만족 동 시 처리부가 입력된 화물 EDI 정보와 항공 화물 운송장(Air Waybill) 정보 및 ULD 타입 정보에 기초하여 화물들 과 ULD 타입간의 기하학적 관계를 고려하여 복수의 화물을 ULD내에 최적화 적재하도록 미리 설정된 제약조건들 을 만족하도록 처리하여 프로그래밍하는 제2단계와; 상기 화물 패킹 다중제약조건 만족 동시처리부가 CSP(Constraint Satisfaction Problem, 제약조건 만족 프로그램) 검색 엔진을 동작시켜, 미리 설정된 다양한 제약조건들을 만족하는 화물 배치 목표점을 찾는 제3단계; 상기 CSP 검색 엔진의 검색이 완료되면, 검색된 화물 배치 목표점을 출력하는 제4단계를 포함한다. 여기서, 상기 제2단계는, 화물들이 ULD내에 어떤 좌표점에 위치시킬 것인가를 정하기 위해, 화물을 직교좌표에 서 x, y, z축 방향으로 단위 유닛마다 이동시키면서 위치를 설정하는 ULD내 위치처리 단계와, 화물들을 화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회전시키는 회전 처리 단계와, 각각의 화물의 꼭지점을 비교함으 로써 화물들이 겹치지 않도록 하는 비중첩 처리 단계와, ULD내 화물들의 무게의 총 합은 ULD의 무게 제한이 넘 지 않도록 하는 화물 무게 제한 처리 단계와, 상기 화물 EDI 정보에 기초하여 특정 화물이 적재되었을 때 그 위 에 적재되는 다른 화물들의 무게가 상기 특정 화물이 견딜 수 있는 하중보다 크지 않도록 하는 화물 쌓기 처리 단계와, 화물들을 ULD내에 적재 완료한 상태에서 ULD의 무게중심이 가능한 한 화물 바닥면의 가로 세로 평면의 중심점에 일치하게 하는 조건을 만족시키기 위해, 화물을 적재할 때 이미 적재된 화물과 추후 적재될 화물의 무 게를 고려하는 ULD 무게 중심 처리 단계, 및 ULD의 한쪽 면이 비행기 동체와 닿는 면을 경사각으로 깎아 놓은 경사면에 화물이 닿지 않도록 화물의 위치를 처리하는 경사면 처리 단계를 동시에 처리하는 것이 바람직하다. 상기 경사면 처리 단계는, 헤시안 노멀 폼(Hessian Normal Form)을 이용하여 직교좌표의 기준 원점과 상기 경사 면까지의 거리계산을 수행하는 것이 바람직하다. 한편, 상기 화물 입력 데이터 처리부는 EDI 형태의 EDI 화물 정보를 처리하고, 상기 EDI 화물 정보는 화물의 기 하학적인 크기와 관련된 가로, 세로, 높이 정보와, 무게, 출발지 공항, 도착지 공항, 최종 목적지 주소가 포함 되어 있는 것이 바람직하다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상기의 구성으로 이루어진 본 발명에 따르면, 다수의 수하물, 화물 등을 ULD에 적재하는데 투입되는 노동력과 시간을 획기적으로 줄일 수 있고, 또한, ULD 갯수를 최소화 할 수 있는 인공지능 검색기술 기반 항공화물 컨테 이너(ULD)에 화물 적재 최적화 시스템 및 이것을 이용한 ULD에 항공 화물 적재시 최적화 방법이 제공된다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시예 들을 통해 설명될 것이다. 그러나 본 발명은 여기에서 설명되는 실시예들에 한정되지 않고 다른 형태로 구체화"}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "될 수도 있다. 단지, 본 실시예들은 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 본 발명의 기술적 사상을 용이하게 실시할 수 있을 정도로 상세히 설명하기 위하여 제공되는 것이다. 도면들에 있어서, 본 발명의 실시예들은 도시된 특정 형태로 제한되는 것이 아니며 명확성을 기하기 위하여 과 장된 것이다. 또한, 명세서 전체에 걸쳐서 동일한 참조번호로 표시된 부분들은 동일한 구성요소를 나타낸다. 본 명세서에서 \"및/또는\"이란 표현은 전후에 나열된 구성요소들 중 적어도 하나를 포함하는 의미로 사용된다. 또한, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 또한, 명세서에서 사용되는 \"포함한다\" 또는 \"포함하는\"으로 언급된 구성요소, 단계, 동작 및 소자는 하나 이상의 다른 구성요소, 단계, 동작, 소자 및 장치의 존재 또는 추가를 의미한다. 이하에서, 본 발명의 바람직한 실시 예가 첨부된 도면들을 참조하여 본 발명을 구체적으로 설명한다. 본 발명을 설명함에 있어서 관련된 공지기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있 다고 판단되는 경우에는 그 상세한 설명을 생략한다. 본 발명은, 인공지능 문제풀이 방법 중 하나인 주어진 제약 조건을 만족하는 최적의 답을 찾는 CSP(Constraint Satisfaction Problem) 알고리즘을 이용하여 ULD내 적재 가능한 다양한 모양의 화물을 최대한 많이 채울 수 있 는 조합을 찾아내는 기법을 제공하는 항공화물 적재 최적화 시스템 및 방법을 제공한다. 제약 조건 만족 문제(Constraint satisfaction problem, CSP)는 복수의 제약 조건을 충족하는 상태를 찾아내는 수학 문제를 가리킨다. 문제의 해가 주어진 제약조건을 만족하는 형태로 정의되는 종류의 문제들을 칭하며, 보 통 CSP는 고도의 복잡성을 보이기 때문에 적정한 시간 내에 문제를 풀기 위해서는 전체 서치 공간을 탐색하기 보다는 휴리스틱과 각 문제에 적합한 조합 최적화 기법을 조합할 필요가 있다. 제약 조건 만족 문제를 컴퓨터 프로그래밍으로 처리하는 것을 제약 프로그래밍(Constraint programming)이라고 한다. 이것은 변수들을 어떠한 제약들의 형태로 기술하고 이들 변수들 간의 관계에 대해서 프로그래밍을 하는 체계이다. 제약 프로그래밍은 선언적 프로그래밍 방식을 사용하며, 목표상태에 도달하기 위한 해법을 찾는 특성 만 알려주면 이에 필요한 절차 수행은 내부적으로 알아서 하는 방식이다. 제약 만족 프로그래밍에서 사용하는 제약조건들은 다양하다. 제약 만족 문제(예를 들어, \"A or B is true\")에서 쓰는 방식도 있고, 일차 부등식(linear inequalities)(e.g., \"x <= 5\")과 같은 방식도 있다. 제약 조건 프로그램은 제약 논리 프로그래밍(constraint logic programming)의 형태로 표시되는 경우가 많다. 즉, 어떠한 목표 상태에 도달하기 위해서 주어진 논리적 조건들을 모두 만족하는 도메인(전체 공간)의 주어진 공간을 모두 검색을 하여 목표를 찾아내는 일은 제약 조건 솔버(constraints solver)라는 하부 엔진에 의해서 수행된다. 이하, 본 발명의 바람직한 실시 예에 대하여 첨부 도면을 참조하여 상세하게 설명한다. 도 1은 본 발명에 따른 ULD에 항공 화물 적재시 최적화 시스템의 개략 구성도이다. 도 1에 보인 바와 같이, 본 발명의 일실시예에 따른 ULD에 항공 화물 적재시 최적화 시스템은, 화물 EDI 정보와 ULD 타입 정보를 입력하기 위한 입력부, 출력부, 화물 EDI 정보와 ULD 타입 정보가 저장되는 저장부와, 입력부에서 입력된 화물 아이템들과 ULD 타입에 기초하여 화물들과 ULD 타입간의 기하학적 구조에 맞도록 최적화 적재하도록 제어하는 ULD 패킹 항공화물 적재 처리부를 포함한다. ULD 패킹 항공화물 적재 처리부는, 입력 데이터 처리부, 출력 데이터 처리부, 화물 아이템 패킹 다 중제약조건 만족 동시처리부, CSP 엔진 수행부를 포함한다. 입력 데이터 처리부는 화물 EDI 정보 입력부(21a)와 항공 화물 운송장(Air Waybill) 정보 및 ULD 타입 정보 입력부(21b)를 포함하고, 화물들에 대한 정보를 전자문서형식의 EDI로 입력받고, 적재할 대상인 ULD 타입 정보 를 입력받아 처리한다. 입력데이터 처리부의 화물 EDI 입력부(21a)는 보다 구체적인 일례에 대한 화물들에 대한 정보를 전자 문서 형식의 EDI로 입력받는다. 그리고, 또한, ULD 타입 입력부(21b)는 이 화물 아이템들을 적재할 대상인 ULD 타입 이 어떤 것인가에 대한 정보를 입력받는다. 통상, 이 ULD 타입은 화물 아이템들을 이송할 항공기에 따라 정해지며, 해당 항공사 홈페이지에 표시되어 있다. 즉, 입력데이터 처리부의 화물 EDI 입력부(21a)가 화물 아이템에 대한 인스턴스 정보와, ULD 타입에 대한 인스턴스 정보를 ULD 패킹프로그램이 입력을 받는다. 출력 데이터 처리부는 ULD 패킹 파일 출력부(22a), ULD 패킹 파일 그래픽 출력부(22b)를 포함한다. 출력 데이터 처리부는 CSP 검색 엔진의 검색이 완료되면, 상기 CSP 검색 엔진이 검색한 최종 목표점(화물 배치 위치)들에 대한 정보를 출력한다. CSP 검색 수행부는 CSP 검색 엔진 수행부(24a), CSP 검색 엔진(24b)을 포함하고, 화물 패킹 다중제약조건 만족 동시처리부에서 프로그래밍한 다양한 제약조건들을 만족하는 화물 배치 목표점을 검색하기 위해 CSP(Constraint Satisfaction Problem) 검색 엔진을 수행한다. CSP 검색은, 사람이 수행하는 체계적인 검색(systematic search)을 효과적으로 할 수 있도록 하며 검색 공간을 줄여주는 방법이다. 모든 트리(Tree)를 가지고 검색하는 일반적인 검색보다 제약 조건을 두어 조건을 만족하지 않는 트리(Tree)의 가지를 검사하지 않음으로써 시간적으로 수행 능력이 향상될 수 있다. 그리고, CSP 검색은 어떤 문제에 대해 제약조건을 바꿔주면 문제를 해결할 수 있는 특징을 가진다. CSP 검색 수행부는 입력데이터 처리부에서 입력된 화물 아이템들과 ULD 타입의 인스턴스를 바탕으로 화 물들과 ULD타입간의 기하학적 구조에 맞도록 최적화 적재하기 위하여, 화물 패킹 다중제약조건 만족 동시처리부 에서 프로그래밍한 다양한 제약조건들을 만족하는 화물 배치 화물 배치 목표점(화물 배치 위치)을 검색하기 위하여 CSP 검색 엔진(24b)을 수행한다. 따라서, CSP 검색 엔진 수행부(24a)는 CSP 검색 엔진(24b)을 리눅스 OS 상에서 혹은 윈도우 OS상에서 수행하기 위해 필요한 쉘 명령어와 수행에 필요한 다양한 파라미터값들을 입력하여 수행한다. 본 발명의 화물 아이템 패킹 다중제약조건 만족 동시 처리부는 ULD 패킹 프로그램으로 구현되며, 미리 설정 된 제약조건들을 만족하도록 처리하여 가능한 한 모든 화물을 ULD에 싣도록 처리하도록 프로그래밍한다. 그리고, 미리 설정된 제약조건의 일부인 사용자 요구 제약조건으로서, 화주가 요청한 패킹 규칙(예를 들어,\"어 떤 화물은 다른 화물과 동일한 ULD내에 넣는다\"는 등의 요구사항)을 만족시키도록 처리하는 프로그램이다. 또한, 화물 패킹 다중제약조건 만족 동시 처리부는 화물 아이템과 ULD를 기본 객체로 하고 있으며, 화물들 이 가지는 기하학적 구조와 ULD가 가지는 기하학적 관계를 기본적으로 고려하여, 다중 화물들을 다중 ULD내에 적재하는 최적화를 수행함에 있어서, 다양한 제약조건들을 논리적 수식으로 표현하는 프로그램이다. 즉, 화물 패킹 다중제약조건 만족 동시처리부는 해당 ULD 타입의 기하학적 모양과 화물 아이템들의 기하학 적 모양을 고려하여 위치를 설정하고, 화물을 회전시켜 더욱 최적화 위치를 설정하고, 화물간에 겹치지 않게 위 치를 설정하고, 중량 한계를 고려하고, 화물을 수직으로 쌓을 수 있는지를 고려하고, 모든 화물을 ULD내에 적재 했을 때 ULD의 무게중심을 중앙에 두게 할 수 있도록 하는 다양한 제약조건을 만족시키는 최종 목표점을 찾도록 프로그래밍을 수행한다. 이를 위해, 화물 패킹 다중제약조건 만족 동시처리부는 화물 아이템을 ULD내 위치시 다양한 제약조건들을 처리하기 위해, 화물들이 ULD내에 어떤 좌표점에 위치시킬 것인가를 처리하는 ULD내 화물 위치 처리부(23b), 화 물들을 x, y, z축으로 회전해 가며 화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회전시키는 화물 회전 처리부(23c), 기하학적 구조에서 화물들이 겹치지 않도록, 각각의 화물의 꼭지점을 비교하여 화물들이 겹치지 않게 처리하는 화물 비중첩 처리부(23d), ULD들이 가지는 무게 제약조건들을 만족시키기 위해 ULD내 화물들의 무게의 총 합은 ULD의 무게 제한이 넘지 않게 처리하는 화물 무게 한계 처리부(23e), 화물 EDI 정보에 기초하 여 특정 화물이 적재되었을 때 그 위에 적재되는 다른 화물들의 무게가 특정 화물이 견딜 수 있는 하중보다 크 지 않게 처리하는 화물 쌓기 처리부(23f), 화물을 모두 채운상태에서 ULD의 무게중심 제약조건을 처리하는 ULD 무게 중심 처리부(23g), 화물 경사면 처리부(23h)를 포함한다. 각 처리를 위한 제약 조건을 보다 상세히 설명하면 다음과 같다. 전체 비용 함수 처리부(23a)는 화물들이 ULD내에 넣을 때 전체적으로 적용되는 제약조건으로서 코스트 함수(비 용 함수)관련 제약 조건을 처리한다. 이 비용함수는 화물을 ULD에 싣지 못할 때의 비용(전문용어로서 오프로드(offload) 비용이라고도 함)과, 화주 (Load Master)가 요청한 패킹 규칙이나 요구사항들(전문용어로서 소팅(sorting)정책이라고도 함)을 지키지 못했 을 때의 벌점을 더한 값이 최소가 되도록 하는 제약조건이다. ULD내 화물 위치 처리부(23b)는, 화물(Item I)들을 ULD(U) 속에서 어떤 좌표점에 위치시킬 것인지를 결정하기 위해, 화물을 직교좌표에서 x, y, z축 방향으로 매 단위 유닛마다 이동하면서 위치를 배치하는 처리를수행한다. 3-Dimension 직교 좌표계에 화물과 ULD가 존재하는 경우, 하나의 화물은 ULD내에 들어갈 수 있는 크기보다 작아 야 하며, 화물은 ULD 내부에 존재해야 하고, 그 유효성 판단은 화물의 각 꼭지점의 좌표가 ULD 내부인지 아닌지 로 판별한다. ULD내 화물 위치 처리부(23b)는 화물을 직교좌표에서 x, y, z축 방향으로 매 단위 유닛마다 이동하면서 위치를 설정하게 된다. 단위 유닛 길이는 예를 들어, 1cm, 2cm, 5cm, 10cm 등의 길이로 정의할 수 있다. 이 길이는 최 적화 단계에서 현실에 맞게 연산량과 시간 등을 고려하여 결정하게 된다. 이러한 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 화물의 x,y,z 좌표는 각각 ULD 내부에 위치할 수 있으며 차례대로 탐색하며 화물의 위치를 결정한다.// 「 IntVarArray x_i(*this, numOfItem, 0, uld.lat); branch(*this, x_i); 」 화물 회전 처리부(23c)는, 화물들을 x, y, z축으로 회전해 가며 화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회전시킨다. 화물 회전 처리부(23c)는 화물들을 어떻게 X, Y, Z축으로 회전해 가며 적재할 것인가를 처리한다. 화물은 기본적으로 눕히거나 뒤집는 등의 회전이 가능하다. 화물의 회전 상태에 따라 화물이 차지하는 x,y,z 축 의 범위가 달라진다. 여기서, 화물을 회전시킬 때, 화물의 크기가 제일 큰 것을 먼저 회전시키는 것이 전체적으로 영향력이 가장 크 다. 따라서, 큰 화물부터 회전시켜 보는 방법을 최적화를 위하여 시도하는 것이 바람직하다. 화물의 회전 로테이션을 R이라고 할 때, 본 발명에서는 화물의 X, Y, Z축 방향으로 직교 좌표에 맞도록 직각 회 전만 고려한다. XYZ가 기본 위치라고 가정할 때, R = {XYZ, XZY, YXZ, YZX, ZXY, ZYX} 방향으로 6가지만 가능하게 된다. 예를 들면, XZY는 X축을 중심으로 90도 회전했음을 보여준다. 이 경우, 도 5의 화물의 Y축이 ULD의 Z축과 일치함을 나타내는 것이다. 이러한 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 각 화물은 XYZ, XZY, YXZ, YZX, ZXY, ZYX 총 6가지의 회전상태를 가질 수 있으며 회전상태에 따라 화물의 x,y,z 길이가 결정된다.// 「 items[i].rotation = (items[i].rotation+1) % 6; if (items[i].rotation == XYZ) { items[i].size_x = items[i].lat; items[i].size_y = items[i].lng; items[i].size_z = items[i].height; } 」 화물 비중첩 처리부(23d)는 기하학적 구조에서 화물들이 겹치지 않게 하는 위치를 어떻게 지정할 것인가를 처리 한다. 하나의 ULD 내부에 적재되는 화물들은 서로 겹치지 않게 해야 한다. 각각의 화물의 꼭지점을 비교함으로써 화물 들이 겹치지 않도록 위치를 제약한다. 이러한 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 화물 i와 j가 적재되어 있다면 서로 겹치지 않게 x,y,z 좌표를 제한한다. 화물 I의 x 범위와 화물 j의 x 범 위가 겹치면서 동시에 y, z 좌표 역시 겹치게 되면 화물 I와 j는 겹친 것이다.// 「 rel(*this, ((pack_i[i] == 1) && (pack_i[j] == 1)) >> ((x_i_prime[i] <= x_i[j]) || (x_i_prime[j] <= x_i[i]) || (y_i_prime[i] <= y_i[j]) || (y_i_prime[j] <= y_i[i]) || (z_i_prime[i] <= z_i[j]) || (z_i_prime[j] <= z_i[i]))); 」 예를 들면, 두 개의 화물 i, j가 ULD내에 적재가 되었을 때 이 두개의 화물의 위치는 겹칠 수가 없다. 도 3을 참조하면, 화물 i의 A(앞, 좌측, 아래) 꼭지점 위치를 A(xi, yi, zi)라고 할 때, 이 화물의 B(뒤, 우측, 위) 꼭지점 위치를 B(xi', yi', zi')라 하자. 이 두 화물이 겹치지 않을 조건은 x축에 대해서 i가 j보다 앞에 있거나(xi' less-than xj), 혹은, j가 i보다 뒤에 있을 때이다(xj'less-than xi). 3차원 공간에서 두 화물들은 x, y, z축에 대해서 이러한 조건을 만족하게 되면 겹치지 않는 것이다. 화물 무게 한계 처리부(23e)는 각 ULD들이 가지는 무게 제약조건들을 어떻게 만족할 것인가를 처리한다. 각 ULD 는 그 종류마다 무게 제한이 존재한다. ULD에 화물이 적재될 때 화물들의 무게의 총 합은 ULD의 무게 제한이 넘 지 않도록 제약한다. 이러한 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 각 ULD 마다 적재된 화물의 무게 합이 무게 제한을 넘지 않도록 한다. 「 rel(*this, ulds.[u].maxOfWeight >= sumOfWeight(items)); 」 화물 쌓기 처리부(23f)는 화물들 위에 다른 화물을 올려놓아야 할 경우 쌓기(stacking) 제약조건을 만족하는 해법을 처리한다. 화물은 그 내용물에 따라 화물이 견딜 수 있는 하중이 제한된다. 화물의 내용물이 깨지기 쉬운 물건인지 단단한 물건인지에 따라 화물이 견딜 수 있는 하중이 결정된다. 특정 화물이 적재되었을 때 그 위에 적재되는 다른 화 물들의 무게가 견딜 수 있는 하중보다 크지 않도록 제약한다. 이 견딜 수 있는 하중은 화물의 EDI에 기록된 것을 바탕으로 한다. 하나의 ULD 내에 여러 개의 화물을 적재할 때, 하나의 화물은 다른 화물 위에 쌓게 된다. 특정 화물이 적재되었 을 때 그 위에 적재되는 다른 화물들의 무게가 견딜 수 있는 하중보다 크지 않도록 제약한다. 이러한 제약 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 화물 위에 놓여진 다른 화물의 무게 총합을 계산하고 그 무게가 지지하중 제한보다 작아야 한다. 화물 I와 j 가 있을 때 j의 z축 좌표가 i의 z축 좌표보다 크다면 I위에 j가 있을 수 있다. 이때 화물 I에 미치는 하중을 계 산하여 화물 I가 견딜 수 있는 지지 하중보다 크지 않도록 제약한다.// 「 rel(*this, ((pack_i[i]*pack_i[j]==1) && (z_i_prime[i] == z_i[j])) (o_x[j]== max(0, min(x_i_prime[i],x_i_prime[j])-max(x_i[i],x_i[j])))); rel(*this, o_j[j] == o_x[j]*o_y[j]); rel(*this, w_i[i] == items[i].weight + sumOfOJ); rel(*this, items[i].stack_weight >= w_i[i]); 」 물론, 화물위에 다른 화물을 쌓고, 이 화물들을 또 다른 어떤 화물 위에 쌓는 방식의 여러 계층 화물 쌓기를 고 려해야 한다. 도 4와 같이, ULD내 A, B, C, D, 4개의 화물이 수직으로 쌓여 있다고 하자. 이때, 아래 화물들의 꼭지점들이 받 는 하중을 도 4와 같이 모델링할 수 있다. 즉, A화물의 자중이 100kg이므로, B화물은 자중 200kg을 합하여 총 하중이 300kg이다. 이것이 C와, D에 적용될 때는 길이 비례로 나뉘어져서, 100kg은 C에 부가되고, 200 kg은 D에 부가된다. ULD 무게 중심 처리부(23g)는 화물들을 모두 넣었을 때 ULD의 무게중심이 한쪽 코너로 쏠리지 않고 가능한 한 ULD의 아래 중심점과 일치하게 하는 조건을 처리한다. 화물을 실은 ULD의 무게중심이 어느 한쪽으로 쏠리지 않고 중심점과 일치하도록 하면, ULD를 지게차로 운반하거 나 항공기내 탑재 또는 하역 시에도 안전성을 높일 수 있다. 따라서, 본 발명의 ULD 무게 중심 처리부(23g)는 화물을 적재할 때 그 화물의 무게와 이미 적재된, 앞으로 적재 될 화물의 무게를 고려하여 ULD의 무게중심을 잡을 수 있는 위치에 적재하도록 모델링한다. 직교좌표에서, ULD 의 (앞 좌측 아래)에서, (뒤 우측 아래)에 중심점이 가능한 한 가까이 올 수 있도록 모델링한다. 안전성을 지키기 위해 화물을 실은 ULD의 무게중심이 어느 한쪽으로 쏠리지 않고 중심점과 일치하도록 해야 한 다. 화물을 적재할 때 그 화물의 무게와 이미 적재된, 앞으로 적재될 화물의 무게를 고려하여 ULD의 무게중심을 잡을 수 있는 위치에 적재하도록 제약한다. 이러한 제약 조건을 일예의 프로그램으로 표현하면 다음과 같다. // 각 화물의 무게 위치가 무게 중심이라 가정한다. 모든 화물의 무게를 더하고 무게 중심을 계산해서 그 지점 이 ULD가 허용하는 범위 내에 들어야한다.// 「 rel(*this, weight_u == sumOfWeight(items)); rel(*this, uld.x_cg_start <= sumOfCG(items) / 2*weight_u); rel(*this, uld.x_cg_end >= sumOfCG(items) / 2*weight_u); 」 ULD 경사면 처리부(23h)는 화물들을 ULD의 한쪽 면이 비행기 동체와 닿는 면을 경사각으로 깎아 놓은 에지컷면 (경사면)을 고려하여 화물을 ULD내에 위치시키도록 한다. 이때, 각 화물마다 ULD의 깎인면에서 가장 가까운 점 을 계산하고 그 점이 깎인면을 벗어나지 않도록 제약한다. 이때, 원점에서 ULD의 경사면(깎임면)의 임의의 점까 지의 거리를 알면, 어느 정도의 상자를 넣을 수 있는지 알 수 있게 된다. ULD 경사면 처리부(23h)는 직교좌표에서 원점과 경사면까지의 거리계산시 헤시안 노멀(Hessian Normal Form)을 이용하여 처리한다. 이에 대해 상세히 설명하면 다음과 같다. 도 2 및 도 3을 참조하면, ULD는 정방형의 직육면체에서 비행기 동체 안에 넣었을 때 동체 단면이 둥근 원 형이므로 여기에 닿는 한쪽 면을 경사면으로 깎아 5각형의 모양을 하고 있거나 양쪽면을 깎인 모양을 가지는 것 이 보통이다. 따라서, 이렇게 깎인 경사면 내부에 화물을 넣을 때는 이 깎인 면을 고려하여 화물 적재를 해야 한다. ULD의 깎인 면을 나타내는 수식은, 직교좌표에서 원점(0, 0, 0)으로부터 이 깎인 면의 임의의 점까지의 거리를 계산해야 한다. 이 계산 공식은 헤시안 노멀 폼(Hessian Normal Form)을 통하여 얻을 수 있다(도 5 참조). 따라서, 화물을 ULD의 경사면에 넣을 때 화물의 꼭지점의 위치가 이 경사면보다 안쪽에 위치하도록 하는 제약조 건을 주고 이를 만족하도록 화물의 위치를 지정한다. 직교좌표에서 원점과 경사면까지의 거리계산 헤시안 노멀 폼(Hessian Normal Form) 수식을 설명하면 다음과 같 다. 평면을 나타내는 일반식은 식1과 같고, 단위 노멀 벡터는 식2와 같이 정의한다. (식1) (식2) 평면을 헤시안 노멀 식으로 나타내면 아래 식과 같고, p는 원점에서 평면까지의 거리이다."}
{"patent_id": "10-2018-0148213", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 3, "content": "도 5를 참조하면, 상술한 헤시안 노멀 폼에 의해, 원점에서 경사면(평면 E) 상의 임의의 점 Q까지의 거 리인 벡터 rs 를 계산할 수 있다. 즉, 원점에서 ULD의 경사면(깎임면)의 임의의 점까지의 거리를 계산해서, 어느 정도의 상자를 넣을 수 있는지 판단할 수 있다. 한편, CSP 검색 수행부의 모든 제약조건들에 따라 검색을 수행한 결과 처리가 완료되는 경우, CSP 검색 엔 진(24b)이 검색한 최종 목표점들에 대한 정보가 출력데이터 처리부를 통하여 두 가지로 형태로 출력이 이루 어진다. 첫째, ULD 패킹 파일 출력 처리부(22a)는 ULD 팩킹된 엑셀파일 형태의 출력파일을 형성한다. 둘째, ULD 패킹 파 일 그래픽 출력 처리부(22b)는 이 출력파일을 시각적으로 보다 쉽게 이해하도록, 그래픽 처리한다. 예를 들어, ULD 패킹 파일 그래픽 출력 처리부(22b)가 ULD내에 화물이 장착된 반투명 그래픽을 형성하여 화면상에 출력한다. 또한, ULD 패킹 파일 출력 처리부(22a)는 EDI 문서포맷으로 저장 및 출력하거나, 실시간 육안 확인을 도와주기 위해 그래픽 화면상에 3D 그래픽으로 출력하기도 한다. 특히, 3D 그래픽의 경우에는, ULD의 한쪽을 기준으로 360도 회전을 시키면서 ULD내 포함된 화물들을 육안으로 보면서 확인할 수 있는 편리함을 제공할 수 있다. 다음에, 도 6을 참조하여 상술한 본 발명의 일실시예에 따른 ULD에 항공 화물 적재시 최적화 시스템에서 처리 방법에 대하여 설명한다. 입력부로 화물 EDI 정보와 ULD 타입 문서가 입력된다. 그에 따라, 화물 패킹 다중제약조건 만족 동시처리부 의 화물 EDI 입력 처리부(21a)에 처리해야 할 화물 정보가 입력된다. 또한, ULD 타입 입력 처리부(21b)에는 어떠한 ULD에 적재할 것인가에 대한 정보가 입력된다(S1). 이때, S1 단계에서 CSP 검색 엔진(24b)이 다중제약조건 만족 동시처리부의 프로그램에서 프로그래밍된 수십 개의 제약조건 만족을 만족시키기 위한 검색을 수행하기 위해 준비를 마친다. 이때, 화물 패킹 다중제약조건 만족 동시처리부의 CSP 검색 엔진(24b)은 특정 객체의 인스턴스들이 입력되 어야 이 값들을 이용하여 구체적인 인스턴스 값들을 가지고 검색을 수행한다. 이 인스턴스 값들로서 화물아이템 과 ULD 타입의 2가지가 있다. 먼저, 화물 EDI 입력 처리부(21a)에 처리해야 할 화물 정보가 입력된다. 이 화물 정보는 통상 화주들로부터 EDI형태의 문서로 입력된다. 이 EDI 문서에는 화물에 관한 구체적인 내용들이 들어 있다. 화물의 기하학적인 크기와 관련된 가로, 세로, 높 이 정보와, 무게, 출발지 공항, 도착지 공항, 최종 목적지 주소 등 상세정보가 포함되어 있다. S2 단계에서, 입력 데이터 처리부는 동일 출발지에서 출발하여 도착지까지 함께 혹은 별도로 이송될 화물 아이템들을 1차로 그룹핑한다. 즉, 이 EDI정보로부터 동일 출발지에서 출발하여 도착지까지 함께 혹은 별도로 이송될 화물 아이템들을 1차로 그룹핑(groupping)하고, 이렇게 그룹핑 된 화물들을 동일 ULD 혹은 상이한 ULD에 적재해야 하는 조건들을 적용 하게 된다. S3 단계에서, ULD 타입 입력 처리부(21b)에 어떠한 ULD 타입에 적재할 것인가에 대한 정보가 입력된다. 즉, 항 공사에서 화주가 이송을 요청한 공항까지 항공기를 배정하면, 이 항공기에 탑재 가능한 ULD의 형태(타입)을 정 한다. 이렇게 정해진 ULD타입에 대해서 화주(Load Master)가 당일 어떤 ULD타입을 탑재할 것인가를 지정해 주면 ULD 타입 입력 처리부(21b)는 화물과 ULD타입에 대한 구체적인 인스턴스 값을 확정한다. S4 단계에서, 화주로부터 입력부를 통해 제약 조건을 입력받는다. 이렇게 그룹핑된 화물 아이템들에 대해서 화물 아이템 패킹 다중제약조건 만족 동시처리부 프로그램에서 보 다 구체적인 제약조건들을 적용하여 ULD내에 위치를 설정하는 과정이 수행이 된다. S5 단계에서, 다중제약조건 만족 동시처리부는 아래 열거한 다수의 주요 제약조건들을 동시에 만족하도록 처리하는 개별 서브 프로그램들(T1~T7)을 구성한다. CSP 방식의 프로그램에서는 이들 서브 프로그램들이 순차적으로 수행되는 것이 아니라, 하나의 트리에서 이들 제약조건을 모두 만족하는 목표점(화물 배치 목표점)들이 동시병렬로 처리된다는 것이다. 따라서, 하나의 단계가 수행되고 그 결과를 다음단계에서 처리하는 순차 처리 방식으로 나타내기 어렵다. 따라 서, 다중제약조건 만족 동시처리부라는 대표 단계를 수행하고, 그 내부에 다수의 서브 프로그램 단계 (T1~T7)를 동시 수행하는 것이 바람직하다. CSP 솔버(Constraint satisfaction problem (CSP) solvers)는 이 모든 제약조건을 만족하는 목표 위치를 찾기 위하여 트리 검색을 한다. 서브 프로그램 중 T1에서 전체 비용 함수 처리부(23a)는 화물들이 ULD내에 넣을 때 전체적으로 적용되는 제약조 건으로서의 비용 함수로서, 이 비용 함수는 화주가 요청한 패킹 규칙이나 요구 사항들(sorting 정책이라고도 함)을 지키지 못했을 때의 벌점을 더한 값과, 화물을 ULD에 싣지 못할 때의 비용(전문용어로서 offload 비용이 라고도 함)이 최소가 되도록 하는 비용 제약조건을 처리한다. 즉, 본 발명 기술인 ULD 패킹 프로그램은 모든 화물을 가능한 ULD에 싣도록 노력하고, 또한, 화주가 요청한 패 킹 규칙(예를 들어,\"어떤 화물은 다른 화물과 동일한 ULD내에 넣어라\"등의 요구사항)을 가능한 지켜야하는 제약 조건을 만족하기 위하여 가능한 한 모든 트리검색을 시도한다. 서브 프로그램 중 T2에서는, ULD내 화물 위치 처리부(23b)는, 어떤 화물 아이템이 ULD 내부의 어느 좌표에 위치 시킬 것인가와 어떻게 이 화물을 x, y, z축 방향으로 회전해 가면서 위치시키는 것이 최적인가를 종합적으로 고 려하여 화물 배치 목표점들을 모두 찾아낸다. 예를 들어, 모든 화물의 x, y, z 좌표를 1cm 마다 바꿔가면서 모두 시도해 본다. 화물 좌표를 바꾸며 회전시키 는 프로그램은 공지된 기술이므로 상세한 설명은 생략한다. 서브 프로그램 중 T3는 화물 회전 처리부(23c)가 하나의 화물아이템을 x, y, z축으로 회전시키면서 제약조건들 을 만족하면서 개별 화물들이 차지할 공간 위치를 최적화 찾아내기 위한 처리단계이다. 화물을 x, y, z축을 중 심으로 회전시켜가면서 가능한 모든 조합을 시도해 보는 검색을 한다. 서브 프로그램 중 T4는 화물 비중첩 처리부(23d)가 하나의 아이템 화물과 다른 아이템 화물들이 기하학적 공간 내에서 겹치지 않는다는 제약조건들을 만족하면서 개별 화물들이 차지할 공간 위치를 찾아내기 위한 처리단계이 다. 서브 프로그램 중 T5는 화물 무게 한계 처리부(24e)가 화물 무게 한계 제약 조건으로서, 화물 아이템들이 ULD내 에 적재 될 때 화물 무게의 총합이 ULD 개별 무게 한도를 충족시키기 위한 것과, 항공법상 하나의 ULD내에 포함 될 수 있는 개별 화물들의 최대 무게도 포함한다. 예를 들면, 방사능 물질이나, 드라이아이스 같은 기체들은 포장재를 제외한 순 내용물 무게가 항공법에 명시되 어 있어 이를 준수해야 할 필요도 있다. 서브 프로그램 중 T6은 화물 쌓기 처리부(23f)는 화물 쌓기 제약조건을 준수하는 위치를 검색한다. 화물 쌓기 제약 조건은, 화물들을 ULD내에 여러 층으로 쌓아서 적재시에, 상단 화물의 무게를 하단 화물 및 포 장재가 견딜 수 있도록 하는 것이다. 예를 들어, 화물이 3층으로 쌓여질 적에는 최하단에 탑재되는 화물을 상단 2개 화물의 총량 합을 견딜 수 있는 조건을 만족해야 한다. 또한, 파손주의(Fragile)라고 적힌 화물의 경우는 상단에 여타 물건을 실을 수 없으므로, 이러한 화물은 최상단층에 적재하는 제약조건을 만족하도록 검색이 이루어져야 한다. 서브 프로그램 중 T7은 화물들을 모두 ULD내에 적재 완료된 상태에서 ULD의 무게 중심이 가장자리로 쏠리지 않 고, 가능한 한 바닥면의 가로 세로 평면의 중심점에 위치하도록 하는 제약조건이다. 서브 프로그램 중 T8은 화물을 ULD의 경사면에 넣을 때 화물의 꼭지점의 위치가 이 경사면보다 안쪽에 위치하도 록 하는 제약조건이다. 입력된 화물 아이템들과 ULD타입과 상술한 제약 조건들에 대해서, ULD 패킹 프로그램을 작성한다. S6 단계에서는, 화물 아이템 패킹 다중제약조건 만족 동시처리부에서 프로그래밍한 다수의 주요 제약조건들 을 모두 CSP 검색 엔진(24b)에 입력시키고 검색 전체 공간(도메인)에 대해서 목표 상태를 찾기 위한 트리 검색 을 수행한다. 즉, 입력된 화물들을 입력된 ULD타입에 대해서 모두 적재할 수 있도록, 화물 아이템 패킹 다중제약조건 만족 동 시처리부에서 프로그래밍된 모든 제약조건들의 내용들에 대해 CSP 검색 수행부를 통하여 수행시킨다. CSP 검색 엔진 수행부(24a)의 실행을 위하여 화물 아이템 패킹 다중제약조건 만족 동시처리부의 프로그램과, CSP 검색 엔진 수행을 위한 명령어와 파라미터를 리눅스 혹은 윈도우 OS상에서 수행시키게 된다. S7 단계에서, 다중제약조건 만족 동시처리부에서 프로그래밍한 상술한 다수의 주요 제약조건들을 모두 만족 시킬 수 있는 화물 배치 목표점를 찾았는지 판단한다. 여기에서, 모든 제약조건을 만족시키는 화물 배치 목표점 를 찾았으면 그 결과를 모니터에 3D 그래픽 행태로 나타내고 저장한다. 이 판단 단계에서 모든 제약조건을 만족 시키는 화물 배치 목표점를 찾지 못했을 경우, 트리 검색을 계속하게 된다. 판단결과로서, S8단계에서, ULD내 화물들을 위치시키는 제약조건들을 모두 만족시키는 결과 값을 찾았을 경우, 이를 최종 결과물로 보고 출력을 한다. 다수의 수하물, 화물 등을 ULD에 적재하는데 투입되는 노동력과 시간을 획기적으로 줄일 수 있고, 또한, ULD 개 수를 최소화할 수 있다. 먼저, 항공화물 컨테이너(ULD:Unit Load Device)에 화물 적재 최적화 기술은 시장에서 요구되는 핵심 기능으로 서, 하나의 ULD 내에 가능한 많은 화물을 각 화물들이 필요로 하는 요구조건들을 충족하면서 최대한 많은 수의 화물을 탑재하는 것이다. ULD내에 보다 많은 화물을 탑재할 수 있는 최적화 소프트웨어 시스템의 가치가 더 높 다. 이러한 점에서, 그 만큼 ULD의 깎인 모퉁이의 외형 모양을 고려할 때 정방형이 아닌 ULD의 바닥 면적이 좁고 상 부로 올라갈수록 넓어지는 5각형 구조, 혹은 상부 면적이 좁고, 하부로 내려올수록 넓어지는 5각형 구조 등을 고려하여, 하나의 ULD가 감내할 수 있는 무게 요구조건 범위 내에서 화물들을 이러한 내적에 최적화 되도록 최 대한 많은 화물을 각 화물의 요구조건을 만족하는 상태로 집어넣는 것이 최대의 효과를 얻을 수 있는 것이다. 이러한 핵심 효과를 뒷받침하는 구체적인 하위 효과를 설명하면 다음과 같다. 첫째, 본 발명에서는 입력되는 EDI와 ULD 타입 정보를 바탕으로 패킹에 필요한 노동력 및 자원(지게차 댓수, 인 부 수, 작업 시간)등을 기존 방식보다 사전에 정확히 예측 가능할 수 있다. 둘째, 특정 화물들을 특정 공항으로 송달하기 위해서 입력된 화물 정보 문서 (EDI: Electronic data interchange, 화물의 무게, 가로ㅧ세로ㅧ높이, 출발항, 도착항, 등의 정보 기록지)에 의거하여 이들 화물들을 지정된 항공기에 맞는 ULD 타입들에 대해서 패킹시 필요한 최소한의 ULD 갯수를 결과로서 출력할 수 있는 시뮬 레이션을 통하여 실제 물리적인 작업을 실행해보기 전에 미리 파악할 수 있다. 이는 기존 방식에서 할 수 없었 던 새로운 기능이다. 상술한 본 발명에 따르면, 다음과 같은 효과들이 제공될 수 있다. 첫째, 화물을 싣고 갈 비행기 동체 단면이 원형인 바, 이에 맞추기 위해 ULD 의 형상이 기본적으로 직육면체의 모양이나, ULD와 비행기 동체가 닿는 부분은 코너가 깎여 있는 형태로서, 전체적으로 정방형 구조가 아닌 5각형 구조로서, 탑재되는 화물들을 이 코너에 적재하는 알고리즘을 개발함으로써, ULD 내부 공간을 최대한 활용하여 화물 배치 위치를 최적화할 수가 있다. 둘째, 다수의 수하물, 화물 등을 ULD에 적재하는데 투입되는 노동력과 시간을 획기적으로 줄일 수 있고, 또한, ULD 개수를 최소화할 수 있다. 셋째, ULD내 적재 최대 화물의 무게 조건을 만족하면서, 또한 화물의 무게중심을 ULD의 하부 가운데에 두기 위 하여 화물들을 적재시 무게중심을 잡아가면서 항공화물 컨테이너(ULD)에 화물 배치 위치를 최적화함으로써, 기 존 방식보다 화물을 보다 많이 탑재할 수 있다. 넷째, ULD내 화물을 쌓을 때, 깨지기 쉬운(Fragile) 화물과 가벼운 화물 아래에 무거운 화물을 쌓을 수 있도록 각 화물의 무게를 고려하여 화물 배치 위치를 최적화함으로써, 화물을 보다 안전하게 탑재할 수 있다. 이상과 같이 본 발명의 바람직한 실시예에 대하여 첨부도면을 참조하여 설명하였지만, 본 발명은 이에 한정되지 않으며, 다음의 특허청구범위를 일탈하지 않고도 당 분야의 통상의 기술자에 의해 여러 가지 변경 및 변형이 가 능하다."}
{"patent_id": "10-2018-0148213", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 ULD에 항공 화물 적재시 최적화 시스템의 개략 구성도, 도 2는 항공기에 적재되는 항공 화물 적재용 ULD의 사진, 도 3은 ULD 내에 적재된 화물의 투시도, 도 4는 화물이 쌓였을 때 하중 처리도, 도 5는 직교좌표에서 원점과 경사면까지의 거리계산 모델, 도 6은 본 발명의 실시예에 따른 ULD에 항공 화물 적재시 최적화 시스템의 동작을 나타낸 흐름도이다."}
