{"patent_id": "10-2021-0190876", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0101085", "출원번호": "10-2021-0190876", "발명의 명칭": "메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템", "출원인": "주식회사 이엔타", "발명자": "권오주"}}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "어플리케이션이 화면에서 동작할 UI(User Interface) 패턴, 엔티티, 엔티티의 속성 및 엔티티간의 종속성 여부를 포함하는 화면 구성 항목(a)을 사용자로부터 입력받는 화면 구성 항목 입력부;상기 입력된 화면 구성 항목(a)을 분석하여, 분석된 화면 구성 항목 데이터가 현재의 도메인 모델에 존재하는지파악하고, 도메인 모델에 존재하지 않는 경우 도메인 모델에 추가되어야 하는 메타데이터에 대한 정보를 포함하는 화면 구성 해석 정보(b)를 생성하는 화면 구성 항목 처리부;도메인 모델과 정형/비정형 데이터 구조 정보를 매핑하여 동기화시킨 후 동기화 된 정보를 이용하여 상기 화면구성 해석 정보(b)를 화면 구성 구조 정보(c)로 변환하는 메타 데이터 매퍼;상기 화면 구성 구조 정보(c)에 정의되어 있는 개체별로 프론트엔드(Front-end)와 백엔드(Back-end) 영역에서생성될 코드를 저장하는 코드 문서 개체 모델 정의부;상기 화면 구성 구조 정보(c)를 이용하여 생성할 수 있는 다양한 경우의 수를 고려하여 화면 구성 조합을 생성하고, 각 화면 구성 조합별로 개체들의 화면 표시를 위한 조합을 생성하는 UI 및 기능 조합 패턴 생성부;상기 메타 데이터 매퍼가 변환한 화면 구성 구조 정보(c), 코드 문서 개체 모델 정의부가 저장한 코드, UI 및기능 조합 패턴 생성부가 생성한 조합을 이용하여 복수 개의 자동 생성 코드 세트를 생성하는 소스 코드 세트자동 생성부; 및상기 소스 코드 세트 자동 생성부가 생성한 복수 개의 자동 생성 코드 세트 중 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 저장하고, 저장된 내용을 학습하며, 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 반영하여 도메인 모델을 구성하는 메타데이터의 등록 및 수정 작업을 처리하는 사용자 선택 경험 반영 및 지능형 도메인 모델 생성부;를 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 화면 구성 항목 처리부는,입력된 화면 구성 항목(a)을 분석하여 화면 패턴, 엔티티, 엔티티별 속성 및 엔티티간 종속성으로 데이터화 하는 입력 항목 분석 모듈;상기 입력 항목 분석 모듈이 데이터화 한 화면 구성 항목 데이터가 현재의 도메인 모델에 존재하는지 파악하여도메인 모델의 추가 여부를 결정하는 도메인 모델 해석 모듈; 및 최종적으로 화면에 생성될 화면 패턴, 엔티티 및 엔티티의 속성을 생성하는 화면 구성 해석 정보 생성 모듈;을포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 메타 데이터 매퍼는,도메인 모델과 현재 DB의 정형/비정형 데이터 구조 정보를 매핑하여 도메인 모델의 변경이 발생하거나, DB의 변경이 발생한 경우 도메인 모델과 정형/비정형 데이터 구조 정보의 동기화 작업을 진행하는 매퍼 엔진; 및상기 메퍼 엔진에 의해 동기화 된 도메인 모델과 정형/비정형 데이터 구조 정보를 이용하여 화면 구성 해석 정공개특허 10-2023-0101085-3-보(b)를 화면 구성 구조 정보(c)로 변환하는 화면 구성 구조 정보 생성 모듈;을 포함하는 것을 특징으로 하는메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서,상기 코드 문서 개체 모델 정의부는,상기 화면 구성 구조 정보(c)에 정의된 개체 별로 프론트엔드 영역의 코드를 생성하는 프론트엔드 코드 생성 모듈;상기 화면 구성 구조 정보(c)에 정의된 개체 별로 도메인 모델 내의 어플리케이션 템플릿에 정의된 백엔드 영역의 코드를 생성하는 백엔트 코드 생성 모듈; 및상기 화면 구성 구조 정보(c)에 정의되어 있는 개체 별로 프론트엔드(Front-end) 및 백엔드(Back-end) 영역에서생성될 코드가 저장되는 메타데이터별 생성 코드 DB;를 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서,상기 UI 및 기능 조합 패턴 생성부는,화면 구성 구조 정보(c)를 바탕으로 생성할 수 있는 모든 경우의 수를 고려한 화면 구성 조합을 생성하는 화면구성 조합 엔진; 및모든 경우의 수로 생성된 화면 구성 조합별로 해당 영역의 각 개체들의 표시 조합을 생성하는 화면 구성요소별기능 조합 엔진;를 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 5에 있어서,상기 상기 UI 및 기능 조합 패턴 생성부는,현재 도메인 모델 내에 존재하지 않는 엔티티 기능 및 엔티티 간의 관계 정보를 임시로 생성하여 저장하는 임시메타데이터 생성 모듈;을 더 포함하고,상기 화면 구성요소별 기능 조합 엔진은 도메인 모델 내에 이미 존재하는 엔티티 기능 및 엔티티 간의 관계 정보를 바탕으로 다양한 조합을 생성하고, 상기 임시 메타데이터 생성 모듈에 저장된 도메인 모델 내에 존재하지않는 엔티티 기능 및 엔티티 간의 관계 정보를 바탕으로 다양한 조합을 생성하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,상기 소스 코드 세트 자동 생성부는,화면 구성 구조 정보(c), 코드 문서 개체 모델 정의부가 저장한 코드, UI 및 기능 조합 패턴 생성부가 생성한조합을 이용하여 복수 개의 자동 생성 코드 세트를 생성하는 코드 자동 생성 엔진; 및업데이트 된 가중치 정보를 적용하여 코드 세트별 사용자 적용 점수를 계산하고, 높은 점수 순으로 코드 세트를공개특허 10-2023-0101085-4-정렬하여 사용자에게 제공하는 코드 세트 제공부;를 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서,상기 사용자 선택 경험 반영 및 지능형 도메인 모델 생성부는,상기 소스 코드 세트 자동 생성부가 생성한 복수 개의 자동 생성 코드 세트 중 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 사용자 선택 경험 저장 DB(810)에 저장하는 사용자 선택 코드 세트 선택 경험 정보 저장부; 상기 사용자 선택 경험 저장 DB에 저장된 내용을 학습하고, 학습 결과에 해당하는 가중치 정보를 업데이트하는코드 세트 정보 학습부; 및사용자로부터 입력된 엔티티 및 엔티티의 속성이 상기 화면 구성 항목 처리부에서 도메인 모델에 존재하지 않는것으로 파악된 경우 해당 엔티티 및 엔티티의 속성을 도메인 모델에 등록하고, 상기 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 반영하여 도메인 모델을 구성하는 메타데이터의 등록 및 수정 작업을 처리하는 도메인 모델 처리부;를 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 8에 있어서,상기 코드 세트 정보 학습부는,상기 사용자 선택 코드 세트 선택 경험 정보 저장부에 저장된 내용을 학습하여 UI 패턴 매칭 가중치, 컨트롤 매칭 가중치, 기능 매칭 가중치 및 항목 조합별 가중치를 산출하는 학습엔진;을 포함하는 것을 특징으로 하는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 사용자가 개발을 원하는 화면 구성 항목을 입력하면 사용자가 입력한 화면 구성 항목 문장이 해석되어 도메인 모델을 자동으로 구성하고, 프론트엔드(Front-end)와 백엔드(Back-end) 영역의 코드를 자동으로 생성한 후 다양한 개체 및 기능을 조합하여 여러가지 화면 코드 세트를 자동으로 생성하여 제공하고 사용자가 이 중에서 (뒷면에 계속)"}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템에 관한 것으로, 보다 상세하게 는 사용자가 개발하고자 하는 항목을 입력하면 입력 항목을 분석하여 다양한 항목의 조합에 의한 여러가지 화면 코드 세트를 자동으로 생성하여 제공하고, 사용자는 최종적으로 하나의 코드 세트를 선택할 수 있도록 하는 메 타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템에 관한 것이다."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "4차 산업혁명 바람이 안팎으로 거세다. 인공지능(AI)과 클라우드, 블록체인 등 다양한 4차산업혁명 근간 기술은 소프트웨어다. 각 나라가 소프트웨어 개발자 양성에 두 팔을 걷어부치는 이유다. 4차 산업혁명 시대를 맞이하여 소프트웨어 개발자의 수요가 많아지면서 전문성과 역량을 갖춘 소프트웨어 엔지니어의 몸값도 높아지고 있다. 유튜브 및 각종 온라인 사이트에는 소프트웨어 개발 입문자를 위한 강의 뿐만 아니라 최근 트랜드에 맞는 개발 언어를 가르치는 소프트웨어 관련 강의들이 넘쳐나고 있다. 사용자들의 다양한 요구를 반영하기 위한 어플리케이션 소프트웨어 시장이 급성장하고 있는 가운데, 어플리케이 션 소프트웨어의 기능 뿐만 아니라 사용자 인터페이스의 편의성도 중요해지고 있다. 어플리케이션 소프트웨어를 개발할 때 사용자 인터페이스 설계 뿐만 아니라 데이터베이스 설계 그리고 클라이언 트에서 실행되는 소프트웨어 프로그래밍 및 서버에서 실행되는 소프트웨어 프로그래밍 등 여러가지 다양한 요소 에 신경을 써야 하며, 이러한 다양한 요소를 반영하여 개발하는데는 상당한 시간이 소요된다. 뿐만 아니라 어플리케이션 소프트웨어가 달라질 때마다 설계, 디자인 및 프로그래밍을 처음부터 다시 해야 하기 때문에 많은 시 간과 비용이 소요되는 문제가 있다. 이러한 종래 개발 환경의 구조적인 문제를 개선하여 개발자가 어플리케이션 소프트웨어를 개발하는데 드는 시간 을 획기적으로 줄여줄 뿐만 아니라 다양한 어플리케이션 소프트웨어를 추천하여 개발자가 원하는 타입의 소프트 웨어를 선택할 수 있도록 한다면 고객사 및 개발사 모두가 비용 및 시간의 측면에서 만족할 수 있을 것이다. 선행기술문헌 특허문헌 (특허문헌 0001) 등록특허 10-1917843 (어플리케이션 UI 자동 생성 방법 및 장치)"}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 개선하기 위하여 발명된 것으로, 사용자가 개발을 원하는 화면 구성 항목을 입 력하면 사용자가 입력한 화면 구성 항목 문장이 해석되어 도메인 모델을 자동으로 구성하고, 프론트엔드(Front- end)와 백엔드(Back-end) 영역의 코드를 자동으로 생성한 후 다양한 개체 및 기능을 조합하여 여러가지 화면 코 드 세트를 자동으로 생성하여 제공하고 사용자가 이 중에서 하나를 선택하면 해당하는 어플리케이션 소소 코드 가 자동으로 생성되는 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템을 제공하기 위한 것 이다. 또한, 사용가 여러가지 타입의 화면 코드 세트 중 어느 하나를 선택하면 최종적으로 선택한 코드 세트에 대한 정보를 학습하여 사용자가 선호하는 패턴, 기능, 컨트롤, 항목 등에 대한 가중치를 조정함으로써, 여러가지 화 면 코드 세트를 자동으로 생성하여 제공할 때 사용자의 선호하는 화면 코드 세트 순서로 추천할 수 있는 메타데 이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템을 제공하기 위한 것이다."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기와 같은 목적을 달성하기 위하여, 본 발명은 어플리케이션이 화면에서 동작할 UI(User Interface) 패턴, 엔 티티, 엔티티의 속성 및 엔티티간의 종속성 여부를 포함하는 화면 구성 항목(a)을 사용자로부터 입력받는 화면 구성 항목 입력부, 상기 입력된 화면 구성 항목(a)을 분석하여, 분석된 화면 구성 항목 데이터가 현재의 도메인 모델에 존재하는지 파악하고, 도메인 모델에 존재하지 않는 경우 도메인 모델에 추가되어야 하는 메타데이터에 대한 정보를 포함하는 화면 구성 해석 정보(b)를 생성하는 화면 구성 항목 처리부, 도메인 모델과 정형/비정형 데이터 구조 정보를 매핑하여 동기화시킨 후 동기화 된 정보를 이용하여 상기 화면 구성 해석 정보(b)를 화면 구성 구조 정보(c)로 변환하는 메타 데이터 매퍼, 상기 화면 구성 구조 정보(c)에 정의되어 있는 개체별로 프론 트엔드(Front-end)와 백엔드(Back-end) 영역에서 생성될 코드를 저장하는 코드 문서 개체 모델 정의부, 상기 화 면 구성 구조 정보(c)를 이용하여 생성할 수 있는 다양한 경우의 수를 고려하여 화면 구성 조합을 생성하고, 각 화면 구성 조합별로 개체들의 화면 표시를 위한 조합을 생성하는 UI 및 기능 조합 패턴 생성부, 상기 메타 데이 터 매퍼가 변환한 화면 구성 구조 정보(c), 코드 문서 개체 모델 정의부가 저장한 코드, UI 및 기능 조합 패턴 생성부가 생성한 조합을 이용하여 복수 개의 자동 생성 코드 세트를 생성하는 소스 코드 세트 자동 생성부 및 상기 소스 코드 세트 자동 생성부가 생성한 복수 개의 자동 생성 코드 세트 중 사용자가 최종적으로 선택한 코 드 세트에 대한 정보를 저장하고, 저장된 내용을 학습하며, 사용자가 최종적으로 선택한 코드 세트에 대한 정보 를 반영하여 도메인 모델을 구성하는 메타데이터의 등록 및 수정 작업을 처리하는 사용자 선택 경험 반영 및 지 능형 도메인 모델 생성부를 포함한다."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상기와 같은 구성의 본 발명에 따르면, 다음과 같은 효과를 도모할 수 있다. 사용자는 개발을 원하는 화면 구성 항목을 텍스트 형태로 입력하면 다양한 항목 조합에 의한 여러가지 형태의 화면 코드 세트를 자동으로 생성하여 제공하고, 사용자는 이 중에서 원하는 코드 세트를 선택하면 사용자가 원 하는 어플리케이션 소스 코드 개발이 완료되는 방식으로 사용자의 어플케이션 소스 코드 개발 시간을 획기적으 로 단축시켜주고, 여러가지의 화면 패턴 중 사용자가 원하는 패턴을 선택할 수 있어 사용자가 생각하지 못한 화 면 패턴에 대해서도 선택할 수 있는 기회가 제공된다. 도메인 모델은 소프트웨어 설계 및 프로그래밍에 있어서 기본이 될 뿐만 아니라 가장 중요한 요소인데, 도메인 모델을 구성하는 메타데이터 기반으로 사용자가 입력한 항목을 해석하고, 메타데이터 기반으로 다양한 화면 코 드 세트를 생성하여 사용자에게 제공하며, 사용자가 입력한 항목 내용 및 선택한 화면 코드 세트에 따라 메타데 이터의 등록 및 수정이 자동으로 이루어지도록 함으로써, 메타데이터에 대한 관리가 자동으로 이루어진다. 나아가 사용자가 선택한 화면 코드 세트에 대한 정보를 인공지능으로 학습하고 화면 코드 세트별 높은 점수 순 서로 사용자에게 제공하여 사용자들이 선호하는 화면 코드 세트를 우선하여 제공할 수 있다."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되는 실시 예를 참조하면 명확해질 것이다. 그러나, 본 발명은 이하에서 개시되는 실시 예로 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이다. 본 명세서에서 본 실시 예는 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는 기술 분야에서 통상의 지식 을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이다. 그리고 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 따라서, 몇몇 실시 예에서, 잘 알려진 구성 요소, 잘 알려진 동작 및 잘 알려진 기술들은 본 발명이 모호하게 해석되는 것을 피하기 위하여 구체적으로 설명되지 않는다. 또한, 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭하고, 본 명세서에서 사용된(언급된) 용어들 은 실시 예를 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다.본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함하며, '포함(또는, 구비)한다'로 언 급된 구성 요소 및 동작은 하나 이상의 다른 구성요소 및 동작의 존재 또는 추가를 배제하지 않는다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또 일반적으로 사용되는 사전에 정의되어 있는 용어들은 정의되어 있지 않은 한 이상적으로 또는 과도하게 해석 되지 않는다. 이하, 첨부된 도면을 참고로 본 발명의 바람직한 실시 예에 대하여 설명한다. 본 발명에 표현된 '사용자'는 어플리케이션 소스 코드를 생성하려는 개발자 뿐만 아니라 소프트웨어 개발에 관 한 지식이 없는 비전문가도 포함한다. 도 1을 참고하면, 개발자가 “조회:성적(학생이름, 학년, 반, 과목명, 점수, 등수), 동아리활동(동아리명, 비고)”와 같은 문장을 입력하면, 시스템은 개발자가 입력한 문장을 분석하여 다양한 항목 조합에 의한 여러 패 턴의 '조회' 화면 코드 세트를 자동으로 생성하여 제공하고, 그 중에서 개발자가 특정 자동생성 코드 세트를 선 택하면, 개발자가 선택한 코드 세트가 시스템에서 학습되어 추후 소스 코드 자동 생성 및 추천시 학습된 내용을 반영하여 추천하는 것이다. 개발자가 “차트:성적(학생이름, 학년, 반, 과목명, 점수, 등수), 동아리활동(동아 리명, 비고)”와 같은 문장을 입력하면, 시스템은 개발자가 입력한 문장을 분석하여 다양한 항목 조합에 의한 여러 패턴의 '차트' 화면 코드 세트를 자동으로 생성하여 제공할 것이다. 도 2 내지 도 12를 참고하면, 본 발명에 따른 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시 스템은 화면 구성 항목 입력부, 화면 구성 항목 처리부, 메타 데이터 매퍼, 코드 문서 개체 모 델 정의부, UI 및 기능 조합 패턴 생성부, 소스 코드 세트 자동 생성부 및 사용자 선택 경험 반 영 및 지능형 도메인 모델 생성부를 포함한다. 화면 구성 항목 입력부는 어플리케이션이 화면에서 동작할 UI(User Interface) 패턴, 엔티티, 엔티티의 속 성 및 엔티티간의 종속성 여부를 포함하는 화면 구성 항목(a)을 사용자로부터 입력받는다. 사용자는 '패턴:엔티 티(속성)[엔티티종속성 엔티티(속성)]' 형태로 입력한다. 도 1에서 개발자가 입력한 내용 “조회:성적(학생이름, 학년, 반, 과목명, 점수, 등수), 동아리활동(동아리명, 비고)”에서 조회는 패턴에 해당하고, 성적과 동아리활동은 엔티티에 해당하며, 학생이름, 학년, 반, 과목명, 점수, 등수, 동아리명, 비고는 엔티티의 속성을 나타낸다. 패턴은 조회, 차트, 등록, 수정 등으로 정의될 수 있으며 모델이 동작할 UI 패턴을 의미한다. 패턴 우측에 :(콜 론)을 표시한다. 엔티티(속성)는 도메인 모델에서 엔티티(Entity) 레벨에 해당하는 개체를 의미한다. 괄호() 안에 사용할 엔티티 의 속성을 나열한다. 엔티티종속성은 도메인 모델안에 엔티티간의 관계를 의미한다. 도메인 모델안에서 엔티티간의 관계를 준수하려 면 +, 엔티티간의 관계를 적용하지 않고 독립 엔티티 모델로 적용하려면 ,(콤마)를 기입한다. 예를 들어, 사용자가 “차트:매출+제품”이라고 입력하면 매출과 제품 엔티티의 속성 조합으로 발생할 수 있는 모든 형태의 차트 조회 화면이 자동 생성된다. 사용자는 이 중에서 원하는 형태의 차트 조회 화면을 선택하기만 하면 된다. 도 3을 참고하면, 조회 패턴의 화면 생성 예시를 나타낸다. 화면 구성 항목 처리부는 입력된 화면 구성 항목(a)을 분석하여, 분석된 화면 구성 항목 데이터가 현재의 도메인 모델에 존재하는지 파악하고, 도메인 모델에 존재하지 않는 경우 도메인 모델에 추가되어야 하는 메타데이터에 대한 정보를 포함하는 화면 구성 해석 정보(b)를 생성한다. 도 4를 참고하면, 화면 구성 항목 처리부는 입력 항목 분석 모듈, 도메인 모델 해석 모듈 및 화 면 구성 해석 정보 생성 모듈을 포함한다. 입력 항목 분석 모듈은 입력된 화면 구성 항목(a)을 분석하여 화면 패턴, 엔티티, 엔티티별 속성 및 엔티 티간 종속성으로 데이터화 한다. 규격화된 표현식으로 입력된 화면 구성 항목(a)을 다음 4가지 항목으로 데이터 화한다. 1. 화면 패턴: 조회, 수정, 등록, 차트 2. 엔티티 3. 엔티티 별 속성 4. 엔티티간 종속성 도메인 모델 해석 모듈은 입력 항목 분석 모듈이 데이터화 한 화면 구성 항목 데이터가 현재의 도메 인 모델에 존재하는지 파악하여 도메인 모델의 추가 여부를 결정한다. 분석된 화면 구성 항목 데이터가 현재 도메인 모델에 존재하는지 파악하여 다음 3가지 필요 작업을 판단한다. 1. 엔티티의 추가여부 2. 엔티티 별 속성의 추가 여부 3. 엔티티간 종속성 추가 여부 화면 구성 해석 정보 생성 모듈은 최종적으로 화면에 생성될 화면 패턴, 엔티티 및 엔티티의 속성을 생성 한다. 메타 데이터 매퍼는 도메인 모델과 정형/비정형 데이터 구조 정보를 매핑하여 동기화시킨 후 동기화 된 정보를 이용하여 화면 구성 해석 정보(b)를 화면 구성 구조 정보(c)로 변환한다. 도 5를 참고하면, 메타 데이터 매퍼는 매퍼 엔진과 화면 구성 구조 정보 생성 모듈을 포함한다. 도메인 모델은 엔티티 정의, 엔티티가 가지는 기본 고유 동작(기능), 엔티티별 속성, 엔티티별 속성의 데 이터 형식(데이터 형식은 Primitive Type과 Reference Type으로 구체화 됨), 엔티티의 관계 및 도메인 서비스로 구성된다. 정형/비정형 데이터 구조 정보는 관계형데이터베이스(RDBMS) 또는 비관계형(NoSQL) 데이터베이스의 구조 정보를 역공학(Reverse Engineering)한 정보를 말한다. 매퍼 엔진은 도메인 모델과 현재 DB의 정형/비정형 데이터 구조 정보를 매핑하여 도메인 모델 의 변경이 발생하거나, DB의 변경이 발생한 경우 도메인 모델과 정형/비정형 데이터 구조 정보 의 동기화 작업을 수행하여, 도메인 모델 및 정형/비정형 데이터 구조 정보의 업데이트를 관 리한다. 도메인 모델의 엔티티, 엔티티별 속성, 엔티티별 속성의 데이터 형식은 정형/비정형 데이터 구조 정보와 유기적 으로 결합되어 있다. 도메인 모델의 변경사항이 발생하거나 DB의 변경사항 발생이 필요한 경우 도메인 모델과 정형/비정형 데이터 구조 정보의 무결성 체크 및 동기화 작업이 이루어져야 하는데, 매퍼 엔진이 이 작업 을 수행한다. 화면 구성 구조 정보 생성 모듈은 메퍼 엔진에 의해 동기화 된 도메인 모델과 정형/비정형 데 이터 구조 정보를 이용하여 화면 구성 해석 정보(b)를 화면 구성 구조 정보(c)로 변환한다. 코드 문서 개체 모델 정의부는 화면 구성 구조 정보(c)에 정의되어 있는 개체별로 프론트엔드(Front- end)와 백엔드(Back-end) 영역에서 생성될 코드를 저장한다. 도 6을 참고하면, 코드 문서 개체 모델 정의부는 프론트엔드 코드 생성 모듈, 백엔드 코드 생성 모듈 , DDL 생성기, DML 생성기 및 메타데이터별 생성 코드 DB를 포함한다. 프론트엔드(Front-end)는 소프트웨어 개발 프로세스에서 사용자가 마주보는 인터페이스를 말한다. 백엔드(Back- end)는 서버 측 개발을 말한다. 프론트엔드 코드 생성 모듈이 눈에 직접적으로 보여지는 영역에 관련된 코 드를 생성한다면, 백엔드 코드 생성 모듈은 눈에 보이지 않는 서버에서 동작하는 코드를 생성한다. DDL은 Data Definition Language(데이터 정의어), DML은 Data Manipulation Language(데이터 조작어)를 말한다. 프론트엔드 코드 생성 모듈은 화면 구성 구조 정보(c)에 정의된 개체 별로 프론트엔드 영역의 코드를 생성 한다. 예를 들어, UI Html 또는 XML, Javascript 코드, CSS(Cascading Style Sheets) 코드 등을 생성한다. 백엔드 코드 생성 모듈은 화면 구성 구조 정보(c)에 정의된 개체 별로 도메인 모델 내의 어플리케이 션 템플릿에 정의된 백엔드 영역의 코드를 생성한다. 예를 들어, 어플리케이션 템플릿에 MVC 패턴의 웹 어플리 케이션이 정의되어 있다면, Controller, Service, Implements class 코드가 생성된다. MVC는 Model, View,Controller의 약자로 MVC 패턴은 디자인패턴 중 하나다. DDL 생성기는 데이터베이스에 적용될 개체 생성/수정 Script를 생성한다. DML 생성기는 데이터베이스에서 수행될 쿼리를 생성한다. 메타데이터별 생성 코드 DB는 화면 구성 구조 정보(c)에 정의되어 있는 개체 별로 프론트엔드(Front-end) 및 백엔드(Back-end) 영역에서 생성될 코드가 저장된다. UI 및 기능 조합 패턴 생성부는 화면 구성 구조 정보(c)를 이용하여 생성할 수 있는 다양한 경우의 수를 고려하여 화면 구성 조합을 생성하고, 각 화면 구성 조합별로 개체들의 화면 표시를 위한 조합을 생성한다. 도 7을 참고하면, UI 및 기능 조합 패턴 생성부는 화면 구성 조합 엔진, 화면 구성요소별 기능 조합 엔진 및 임시 메타데이터 생성 모듈을 포함한다. 화면 구성 조합 엔진은 화면 구성 구조 정보(c)를 바탕으로 생성할 수 있는 모든 경우의 수를 고려한 화면 구성 조합을 생성한다. 아래의 4가지를 고려한 화면 구성 조합을 생성한다. 1. 메뉴의 위치 및 스타일 2. 검색 항목의 위치 및 스타일 3. 데이터항목이 표시될 위치 및 스타일 4. 기능 버튼의 위치 및 스타일 화면 구성요소별 기능 조합 엔진은 모든 경우의 수로 생성된 화면 구성 조합별로 해당 영역의 각 개체들의 화면 영역별 컨트롤의 배치 순서, 컨트롤 타입을 나타내는 표시 조합을 생성한다. 임시 메타데이터 생성 모듈은 현재 도메인 모델 내에 존재하지 않는 엔티티 기능 및 엔티티 간의 관 계 정보를 임시(temporary)로 생성하여 저장한다. 화면 구성요소별 기능 조합 엔진은 도메인 모델 내에 이미 존재하는 엔티티 기능(Behavior) 및 엔티 티 간의 관계(Association) 정보를 바탕으로 다양한 조합을 생성하고, 임시 메타데이터 생성 모듈에 저장 된 도메인 모델 내에 존재하지 않는 엔티티 기능(Behavior) 및 엔티티 간의 관계(Association) 정보를 바 탕으로 다양한 조합을 생성한다. UI 및 기능 조합 패턴 생성부에서 다양한 조합 패턴을 만들 때 다음의 동작을 수행한다. 1. 도메인 모델내에 이미 존재하는 엔티티 기능(Behavior), 엔티티 간의 관계(Association) 정보를 바탕 으로 다양한 조합 패턴을 생성한다. 이때 1번의 조합 패턴을 바탕으로 생성된 자동 코드 세트를 사용자가 선택 하면 도메인 모델의 변경사항은 없다. 2. 도메인 모델 내에 존재하지 않는 엔티티 기능(Behavior), 엔티티 간의 관계(Association) 정보를 임시 (temporary) 생성하여 다양한 조합 패턴을 생성한다. 이때 2번의 조합 패턴을 바탕으로 생성된 자동 코드 세트 를 사용자가 선택하면 임시 생성된 엔티티 기능(Behavior) 및 엔티티 간의 관계(Association) 정보가 도메인 모 델에 자동 추가된다. 도메인 모델내에 존재하지 않는 엔티티 기능(Behavior), 엔티티 간의 관계(Association) 정보를 임시 (temporary) 생성하는 메커니즘은 다음과 같다. - 특정 엔티티가 가지는 기능(Behavior)을 모방(or 복제)하여 생성한다. - 도메인 모델 의 “UI 패턴 메타데이터”에 추상적(Abstract)으로 선언된 엔티티 기능(Behavior)을 특정 엔티 티와 결합하여 도메인 모델에는 없는 엔티티 기능(Behavior)을 임시 생성한다. - 특정 엔티티들간에 존재하지 않는 관계를 다른 엔티티간의 관계를 모방하여 생성하거나, 도메인 모델내의 “ UI 패턴 메타데이터”에 추상적(Abstract)으로 선언된 엔티티 관계 정의를 적용하여 신규 엔티티 관계를 임시 생성한다. 소스 코드 세트 자동 생성부는 메타 데이터 매퍼가 변환한 화면 구성 구조 정보(c), 코드 문서 개체 모델 정의부가 저장한 코드, UI 및 기능 조합 패턴 생성부가 생성한 조합을 이용하여 복수 개의 자동 생성 코드 세트를 생성한다.도 8을 참고하면, 소스 코드 세트 자동 생성부는 코드 자동 생성 엔진과 코드 세트 제공부를 포 함한다. 코드 자동 생성 엔진은 화면 구성 구조 정보(c), 코드 문서 개체 모델 정의부가 저장한 코드, UI 및 기능 조합 패턴 생성부가 생성한 조합을 이용하여 복수 개의 자동 생성 코드 세트를 생성한다. 자동 생성 코드 세트는 '데이터 스키마+쿼리+레이어별 소스 코드(Back-end 개체 정의 코드, Back-end 개체 함수 동작 정의 코드, Front-end 개체 정의 코드, Front-end 함수 동작 정의 코드)'로 구성된다. 예를 들어, 자동으로 생성된 코드 세트가 총 75개라면 다음 가중치 정보를 적용하여 코드 세트별 적용 점수를 계산하고 높은 점수 순으로 코드 세트를 정렬하여 사용자에게 표시한다. 코드 자동 생성 엔진이 참고하는 가중치 정보는 다음과 같다. 1. UI 패턴 매칭 가중치 2. 컨트롤 매칭 가중치(UI 패턴 매칭 가중치에 종속) 3. 기능 매칭 가중치(UI 패턴 매칭 가중치에 종속) 4. 항목 조합별 가중치 코드 세트 제공부는 업데이트 된 가중치 정보를 적용하여 코드 세트별 사용자 적용 점수를 계산하고, 높은 점수 순으로 코드 세트를 정렬하여 사용자에게 제공한다. 코드 세트 제공부는 소프트맥스 회귀(Softmax Regressioin) 함수를 이용하여 자동 생성된 코드 세트별 적용 점수를 계산한다. 자동 생성된 코드 세트별 적용 점수 = SUM(uWn + cWn + fWn + iWn) / n uWn : 자동 생성된 코드 세트안의 개체번호(n)에 해당하는 UI 패턴 매칭 가중치 cWn : 자동 생성된 코드 세트안의 개체번호(n)에 해당하는 컨트롤 매칭 가중치 fWn : 자동 생성된 코드 세트안의 개체번호(n)에 해당하는 기능 매칭 가중치 iWn : 자동 생성된 코드 세트안의 개체번호(n)에 해당하는 항목 조합별 가중치 자동 생성된 코드 세트별 적용 점수를 소프트맥스 회귀(Softmax Regressioin) 함수에 적용하여 자동 생성된 코 드 세트별 확률값으로 변환한다. 자동으로 생성된 코드 세트가 총 75개라면, 75개의 자동 생성된 코드 세트별 확률값을 모두 더하면 1이 된다. 코드 세트 제공부는 확률값이 높은 순으로 코드 세트를 정렬하여 사용자 에게 제공한다. 사용자 선택 경험 반영 및 지능형 도메인 모델 생성부는 소스 코드 세트 자동 생성부가 생성한 복수 개의 자동 생성 코드 세트 중 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 저장하고, 저장된 내용을 학습하며, 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 반영하여 도메인 모델을 구성하는 메타 데이터의 등록 및 수정 작업을 처리한다. 도 2를 참고하면, 사용자 선택 경험 반영 및 지능형 도메인 모델 생성부는 사용자 선택 코드 세트 선택 경 험 정보 저장부, 코드 세트 정보 학습부, 도메인 모델 처리부 및 학습 결과/가중치 저장부 를 포함한다. 도 9를 참고하면, 사용자 선택 코드 세트 선택 경험 정보 저장부는 소스 코드 세트 자동 생성부가 생 성한 복수 개의 자동 생성 코드 세트 중 사용자가 최종적으로 선택한 코드 세트에 대한 정보를 사용자 선택 경 험 저장 DB에 저장한다. 예를 들어, 사용자가 화면 구성 항목 입력부에 “조회:성적(학생이름,학년,반,과목명,점수,등수)”를 입력 하고 소스 코드 세트 자동 생성부에 의해 총 75가지의 화면이 생성되어 사용자에게 제시된 상태에서, 사용 자가 35번째 코드 세트를 선택했다면 그 35번째 코드 세트를 구성하는 모든 정보가 사용자 선택 경험 저장 DB에 저장된다. 도 10을 참고하면, 코드 세트 정보 학습부는 사용자 선택 경험 저장 DB에 저장된 내용을 학습하고, 학습 결과에 해당하는 가중치 정보를 업데이트한다. 코드 세트 정보 학습부는 사용자 선택 경험 저장 DB에 저장된 내용을 학습하여 UI 패턴 매칭 가중치, 컨트롤 매칭 가중치(UI 패턴 매칭 가중치에 종속), 기능 매칭 가중치(UI 패턴 매칭 가중치에 종속) 및 항목 조합별 가중치를 산출하는 학습엔진을 포함한다. UI 패턴 매칭 가중치를 산출하기 위해 학습 알고리즘으로 Binominal Regression, Naive Bayes 를 사용할 수 있다. 컨트롤 매칭 가중치를 산출하기 위해 UI 패턴 별로 학습하며, 학습 알고리즘으로 Binominal Regression 을 사용 할 수 있다. 기능 매칭 가중치를 산출하기 위해 UI 패턴 별로 학습하며, 학습 알고리즘으로 Binominal Regression 을 사용할 수 있다. 항목 조합별 가중치를 산출하기 위해 학습 알고리즘으로 어프라이어리(Apriori), 이클렛(Eclat)을 사용할 수 있 다. 도 11을 참고하면, 학습 결과 및 가중치 저장부는 코드 세트 정보 학습부에서 최신 사용자 선택 경 험이 적용된 학습 결과(가중치 정보)를 기존 가중치 정보에 업데이트하는 매칭 가중치 조정 엔진을 포함 한다. 도 12를 참고하면, 도메인 모델 처리부는 사용자로부터 입력된 엔티티 및 엔티티의 속성이 화면 구성 항 목 처리부에서 도메인 모델에 존재하지 않는 것으로 파악된 경우 해당 엔티티 및 엔티티의 속성을 도메인 모델에 등록한다. 또한, 도메인 모델 처리부는 사용자 선택 코드 세트 선택 경험 정보 저장부에 저장된 사용자가 최종 적으로 선택한 코드 세트에 대한 정보를 반영하여 도메인 모델을 구성하는 메타데이터의 등록 및 수정 작 업을 처리한다. 예를 들어, 화면 구성 항목 입력부에서 사용자가 “차트:매출(일자, 수량, 금액)+제품(제품명, 제품코드, 단가)+판매지점(지역코드, 지점명)”으로 입력한 경우를 가정한다. 여기서 판매지점은 엔티티이고 지역코드와 지점명은 판매지점(엔티티)의 속성이다. 1. 이때, 도메인 모델에는 판매지점이라는 엔티티가 존재하지 않다면, 판매지점(엔티티)와 지역코드(판매지점의 속성), 지점명(판매지점의 속성) 이 도메인 모델에 신규 추가된다. 2. 또한, 매출과 판매지점, 제품과 판매지점의 엔티티 관계가 도메인 모델에는 없기 때문에 자동으로 추가된다. 3. 더불어, 판매지점과 관련한 엔티티 기능(Behavior)이 도메인 모델내의 “UI 패턴 메타데이터”에 추상적 (Abstract)으로 선언된 엔티티 기능(Behavior)을 이용하여 엔티티 기능(예를 들어, 판매지점 입력, 수정, 삭 제)이 자동으로 추가된다."}
{"patent_id": "10-2021-0190876", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "지금까지 본 발명을 바람직한 실시 예를 참조하여 상세히 설명하였지만, 본 발명이 속하는 기술분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고서 다른 구체적인 형태로 실시할 수 있으므로, 이상 에서 기술한 실시 예들은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 그리고, 본 발명의 범위는 상기 상세한 설명보다는 후술하는 특허청구범위에 의하여 특정되는 것이며, 특허청구 범위의 의미 및 범위 그리고 그 등가개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포 함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2021-0190876", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템의 개념도, 도 2는 본 발명에 따른 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템의 구성도, 도 3은 본 발명에 따른 메타데이터 아키텍처 기반 어플리케이션 소스 코드 자동 생성 시스템이 자동으로 생성하 여 제공하는 화면 코드 세트의 예시도, 도 4는 화면 구성 항목 처리부의 구성도, 도 5는 메타데이터 매퍼의 구성도, 도 6은 코드 문서 개체 모델 정의부의 구성도, 도 7은 UI 및 기능 조합 패턴 생성부의 구성도, 도 8은 소스 코드 세트 자동 생성부의 구성도, 도 9는 사용자 선택 코드 세트 선택 경험 정보 저장부의 구성도, 도 10은 코드 세트 정보 학습부의 구성도, 도 11은 학습 결과 및 가중치 저장부의 구성도, 도 12는 도메인 모델 처리부의 구성도"}
