{"patent_id": "10-2023-0109421", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0020247", "출원번호": "10-2023-0109421", "발명의 명칭": "펌웨어를 업데이트하기 위한 전자 장치, 방법 및 컴퓨터 판독 가능 저장 매체", "출원인": "삼성전자주식회사", "발명자": "강규남"}}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "내지 청구항 7 중 어느 한 항에 있어서,상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,업데이트된 상기 펌웨어 내에서 상기 제2 소프트웨어 어플리케이션들의 실행을 적어도 일시적으로 삼가하도록구성된,전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 앞서는 경우, 상기 통신 회로를 이용하여 외부 서버를 통해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록,구성된,전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1 및 청구항 2 중 어느 한 항에 있어서,상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하도록 구성된,공개특허 10-2025-0020247-3-전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1 내지 청구항 3 중 어느 한 항에 있어서,디스플레이를 더 포함하고, 및상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 상기 디스플레이 상에, 상기 펌웨어를 업데이트 하기 위한 화면(701)을 표시하고; 및상기 화면 내 상기 어플리케이션 리스트 정보에 대응하는 어플리케이션 리스트(723)를 표시하기 위한 시각적 객체(703)에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 상기 어플리케이션 리스트를상기 디스플레이 상에 표시하도록 구성된,전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1 내지 청구항 4 중 어느 한 항에 있어서,상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,상기 디스플레이 상에 표시된 상기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에응답하여, 상기 제2 영역 내 상기 제1 소프트웨어 어플리케이션을 설치하도록 구성되고, 및상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타내는,전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1 내지 청구항 5 중 어느 한 항에 있어서,상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때,상기 어플리케이션 리스트 정보를 이용하여, 상기 펌웨어의 상기 버전과 호환가능한 상기 제1 소프트웨어 어플리케이션의 상기 버전 및 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전 중 상기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하고, 및상기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하는 것에 기반하여, 상기 다른 입력의 수신과 독립적으로, 상기 버전에 기반한 제1 소프트웨어 어플리케이션을 상기 제2 영역 내에 설치하도록 구성된,전자 장치."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1 내지 청구항 6 중 어느 한 항에 있어서,상기 어플리케이션 리스트에 대응하는 제2 소프트웨어 어플리케이션들(724)은, 상기 펌웨어를 업데이트하는 동안 상기 제1 영역 내에서 제거되도록 설정된,전자 장치.공개특허 10-2025-0020247-4-청구항 8"}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "전자 장치(101)의 방법에 있어서,통신 회로(250)를 통해 상기 전자 장치 내에 설치된 펌웨어(223)의 버전을 변경하기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보(300)를 획득하는 동작;상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 메모리(220)의 제1 영역(221) 내에 설치되고 상기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션(310)을 식별하는 동작; 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전(301-2) 보다 상기 제1영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전(310-1)이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역(222) 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을설치하는 동작; 및상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1소프트웨어 어플리케이션을 설치하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서, 상기 방법은,상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 앞서는 경우, 상기 통신 회로를 이용하여 외부 서버를 통해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 9 및 청구항 10 중 어느 한 항에 있어서, 상기 제1 소프트웨어 어플리케이션을 설치하는 동작은, 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "공개특허 10-2025-0020247-5-청구항 9 내지 청구항 11 중 어느 한 항에 있어서, 상기 방법은, 상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 디스플레이 상에, 상기 펌웨어를 업데이트 하기 위한 화면(701)을 표시하는 동작; 및상기 화면 내 상기 어플리케이션 리스트 정보에 대응하는 어플리케이션 리스트(723)를 표시하기 위한 시각적 객체(703)에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 상기 어플리케이션 리스트를상기 디스플레이 상에 표시하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 9 내지 청구항 12 중 어느 한 항에 있어서, 상기 방법은, 상기 디스플레이 상에 표시된 상기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에응답하여, 상기 제2 영역 내 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함하고; 및상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타내는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 9 내지 청구항 13 중 어느 한 항에 있어서, 상기 방법은,상기 어플리케이션 리스트 정보를 이용하여, 상기 펌웨어의 상기 버전과 호환가능한 상기 제1 소프트웨어 어플리케이션의 상기 버전 및 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전 중 상기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하는 동작, 및상기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하는 것에 기반하여, 상기 다른 입력의 수신과 독립적으로, 상기 버전에 기반한 제1 소프트웨어 어플리케이션을 상기 제2 영역 내에 설치하는 동작을 포함하는,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 9 내지 청구항 14 중 어느 한 항에 있어서,상기 어플리케이션 리스트에 대응하는 제2 소프트웨어 어플리케이션들(724)은, 상기 펌웨어를 업데이트하는 동안 상기 제1 영역 내에서 제거되도록 설정된,방법."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "하나 이상의 인스트럭션들을 저장하기 위한 컴퓨터 판독 가능 저장 매체에 있어서, 상기 하나 이상의 인스트럭션들은 전자 장치(101)의 프로세서(210)에 의해 실행될 때, 상기 전자 장치의 통신 회로(250)를 통해 상기 전자 장치 내에 설치된 펌웨어(223)의 버전을 변경하기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보(300)를 획득하고;상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 상기 전자 장치의 메모리(220)의 제1 영역(221) 내에 설치되고 상기 어플리케이션 리스트정보에 대응하는 제1 소프트웨어 어플리케이션(310)을 식별하고, 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전(301-2) 보다 상기 제1공개특허 10-2025-0020247-6-영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전(310-1)이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역(222) 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을설치하고; 및상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1소프트웨어 어플리케이션을 설치하도록 상기 전자 장치를 야기하도록 구성된,컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 16에 있어서, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때,상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 앞서는 경우, 상기 통신 회로를 이용하여 외부 서버를 통해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록상기 전자 장치를 야기하도록 구성된,컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 16 및 청구항 17 중 어느 한 항에 있어서, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때,상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하도록 구성된, 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 16 내지 청구항 18 중 어느 한 항에 있어서,상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때,상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 상기 디스플레이 상에, 상기 펌웨어를 업데이트 하기 위한 화면(701)을 표시하고; 및상기 화면 내 상기 어플리케이션 리스트 정보에 대응하는 어플리케이션 리스트(723)를 표시하기 위한 시각적 객체(703)에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 상기 어플리케이션 리스트를상기 디스플레이 상에 표시하도록 상기 전자 장치를 야기하도록 구성된,컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0109421", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 16 내지 청구항 19 중 어느 한 항에 있어서,상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 디스플레이 상에 표시된 상기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에 응답하여, 상기 제2 영역내 상기 제1 소프트웨어 어플리케이션을 설치하도록 상기 전자 장치를 야기하도록 구성되고, 및공개특허 10-2025-0020247-7-상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타내는, 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 따른 전자 장치의 적어도 하나의 프로세서는, 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 상기 메모리의 제1 영역 내에 설치되고 상 기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하도록 구성될 수 있다. 상기 적 어도 하나의 프로세서는, 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버 전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전이 앞서는 경우, 펌웨어 업데 이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근 이 허용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록 구 성될 수 있다."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는, 펌웨어를 업데이트하기 위한 전자 장치, 방법 및 컴퓨터 판독 가능 저장 매체에 관한 것이다."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "FOTA(firmware over the air)는 통신 기능의 수행이 가능한 스마트폰, 테블릿 PC(personal computer), 스마트 시계 등과 같이 다양한 형태의 전자 장치 등과 같은 전자 장치의 펌웨어를 무선으로 업데이트(update)하는 솔루 션(solution)을 의미할 수 있다. FOTA는 전자 장치에 내장된 펌웨어의 버그(bug)를 수정하거나 기능을 추가하 는 작업을 무선으로 관리하기 위해 개발된 기술을 나타낼 수 있다. 전자 장치는 FOTA를 이용하여 펌웨어 또는 어플리케이션(application)과 같은 프로그램을 업데이트할 수 있다."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는, 인스트럭션들을 저장하기 위한 메모리, 통신 회로, 적어도 하나의 프로세서를 포함할 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 통신 회로를 통해 상기 전자 장치 내에 설치된 펌웨어의 버전을 변경하기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이 터와 관련된 어플리케이션 리스트 정보를 획득하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플 리케이션들 중 사용자에 의한 접근이 제한되는 상기 메모리의 제1 영역 내에 설치되고 상기 어플리케이션 리스 트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하도록 구성될 수 있다. 상기 적어도 하나의 프로세서 는, 상기 인스트럭션들이 실행될 때, 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플 리케이션의 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전이 앞서는 경 우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상 기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리 케이션을 설치하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션 의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1 소프 트웨어 어플리케이션을 설치하도록 구성될 수 있다. 일 실시예에 따른 전자 장치의 방법은, 통신 회로를 통해 상기 전자 장치 내에 설치된 펌웨어의 버전을 변경하 기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보를 획득하 는 동작을 포함할 수 있다. 상기 방법은 상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소 프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 메모리의 제1 영역 내에 설치되고 상기 어플리케이 션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하는 동작을 포함할 수 있다. 상기 방법은, 상 기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전 보다 상기 제1 영역 내 에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전이 앞서는 경우, 상기 펌웨어 업데이트 데이터를 이용 하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함할 수 있 다. 상기 방법은, 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전 에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함할 수 있다. 일 실시예에 따른 하나 이상의 인스트럭션들을 저장하기 위한 컴퓨터 판독 가능 저장 매체에 있어서, 상기 하나 이상의 인스트럭션들은 전자 장치의 프로세서에 의해 실행될 때, 상기 전자 장치의 통신 회로를 통해 상기 전자 장치 내에 설치된 펌웨어의 버전을 변경하기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보를 획득하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상 의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 어플리케이션 리스트 정보를 획득 하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 상기 전자 장치의 메모리의 제1 영역 내에 설치되고 상기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케 이션의 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 다른 버전이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되 고 상기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록, 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상 기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록 상기 전자 장치를 야기하도록 구성될 수 있다."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 1304) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 1304, 또는 1308) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또 는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청 할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있 다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로 서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는, 일 실시예에 따른 전자 장치의 블록도의 일 예를 도시한다. 도 2를 참고하면, 일 실시예에 따른 전자 장치 및/또는 서버를 포함하는 예시적인 네트워크 환경이 도시된다. 전자 장치 및 서버는, 유선 네트워크 및/또는 무선 네트워크에 기반하여 서로 연결될 수 있다. 상기 유선 네트워크는, 인터넷, LAN(local area network), WAN(wide area network), 이더넷 또는 이들의 조합과 같은 네트워크를 포함 할 수 있다. 상기 무선 네트워크는, LTE(long term evolution), 5g NR(new radio), WiFi(wireless fidelity), Zigbee, NFC(near field communication), Bluetooth, BLE(bluetooth low-energy) 또는 이들의 조합과 같은 네 트워크를 포함할 수 있다. 비록, 전자 장치, 및 서버가 직접적으로 연결된(directly connected) 것으로 도시되었으나, 전자 장치, 및 서버는, 네트워크 내 중간 노드(intermediate node)를 통해 간접 적으로 연결될 수 있다. 도 2의 전자 장치는, 랩톱 및 데스크톱과 같은 개인용 컴퓨터(personal computer, PC), 스마트폰(smartphone), 스마트패드(smartpad), 태블릿 PC, 스마트워치(smartwatch), 및 HMD(head-mounted device)와 같은 스마트 액세서리를 포함할 수 있다. 도 2의 전자 장치는 도 1의 전자 장치를 포함할 수 있다. 도 2를 참고하면, 일 실시예에 따른 전자 장치는 프로세서, 메모리, 통신 회로 또는 디스 플레이 중 적어도 하나를 포함할 수 있다. 프로세서, 메모리, 통신 회로 및 디스플레이 는 통신 버스(a communication bus)와 같은 전자 부품(electronical component)에 의해 서로 전기적 으로 및/또는 작동적으로 연결될 수 있다(electronically and/or operably coupled with each other). 일 실시예에서, 전자 장치의 하드웨어들이 작동적으로 결합된 것은, 하드웨어들 중 제1 하드웨어에 의해 제2 하드웨어가 제어되도록, 하드웨어들 사이의 직접적인 연결, 또는 간접적인 연결이 유선으로, 또는 무 선으로 수립된 것을 의미할 수 있다. 상이한 블록들에 기반하여 도시되었으나, 실시예가 이에 제한되는 것은 아니며, 도 2의 하드웨어들 중 일부분(예, 프로세서, 메모리 및 통신 회로의 적어도 일부분)이 SoC(system on a chip)와 같이 단일 집적 회로(single integrated circuit)에 포함될 수 있다. 전자 장치(10 1)에 포함된 하드웨어의 타입 및/또는 개수는 도 2에 도시된 바에 제한되지 않는다. 예를 들어, 전자 장치 는 도 2에 도시된 하드웨어 컴포넌트 중 일부만 포함할 수 있다. 일 실시예에 따른, 전자 장치의 프로세서는 하나 이상의 인스트럭션들에 기반하여 데이터를 처리하기 위한 하드웨어를 포함할 수 있다. 데이터를 처리하기 위한 하드웨어는, 예를 들어, ALU(arithmetic and logic unit), FPU(floating point unit), FPGA(field programmable gate array), CPU(central processing unit) 및/ 또는 AP(application processor)를 포함할 수 있다. 프로세서의 개수는 하나 이상일 수 있다. 예를 들 어, 프로세서는 듀얼 코어(dual core), 쿼드 코어(quad core) 또는 헥사 코어(hexa core)와 같은 멀티-코 어 프로세서의 구조를 가질 수 있다. 일 실시예에 따른, 전자 장치의 메모리는 프로세서에 입력 및/또는 출력되는 데이터 및/또는 인 스트럭션을 저장하기 위한 하드웨어 컴포넌트를 포함할 수 있다. 메모리는, 예를 들어, RAM(random- access memory)과 같은 휘발성 메모리(volatile memory) 및/또는 ROM(read-only memory)과 같은 비휘발성 메모 리(non-volatile memory)를 포함할 수 있다. 휘발성 메모리는, 예를 들어, DRAM(dynamic RAM), SRAM(static RAM), cache RAM, PSRAM (pseudo SRAM) 중 적어도 하나를 포함할 수 있다. 비휘발성 메모리는, 예를 들어, PROM(programmable ROM), EPROM (erasable PROM), EEPROM (electrically erasable PROM), 플래시 메모리, 하 드디스크, 컴팩트 디스크, SSD(solid state drive), eMMC(embedded multimedia card) 중 적어도 하나를 포함할 수 있다. 일 실시예에 따른 메모리는 하나 이상의 영역들(221, 222)로 구분될 수 있다. 상기 하나 이상의 영역들 (221, 222)은 논리적으로 구분될 수 있다. 예를 들어, 프로세서는 사용자에 의한 변경(또는 수정)이 적어 도 일시적으로 제한되는 프로그램들을 메모리의 제1 영역 내에 할당(또는 설치)할 수 있다. 프로세서 는 메모리의 제2 영역 내에 사용자에 의해 변경가능한 프로그램들이 점유(또는 설치)되도록 설 정할 수 있다. 상기 제2 영역 내에 설치된 프로그램들은 제1 영역은 사용자에 의한 접근이 적어도 일시적으로 제한되는 관점에서 시스템 영역, 리드 영역(read area), 및/또는 커널(kernel) 영역으로 지칭될 수 있다. 제2 영역은 사용자에 의한 접근이 허용되는 관점에서, 사용자 영역, 및/또는 라이트(write) 영역으 로 지칭될 수 있다. 예를 들어, 프로세서는 제1 영역 내에 설치된 복수의 소프트웨어 어플리케이션 들의 삭제를 나타내는 사용자 입력을 바이패스할 수 있다. 프로세서는 제2 영역 내에 설치된 프로그램에 대한 삭제를 나타내는 사용자 입력에 응답하여, 상기 프로그램을 제거할 수 있다. 제1 영역 및 제2 영역은 데이터가 설치(또는 저장)되는 메모리의 영역이라는 관점에서 데이터 영역 내에 포함될 수 있다. 예를 들어, 제1 영역은 펌웨어 및/또는 복수의 소프트웨어 어플리케이션들을 포함할 수 있다. 복수의 소프트웨어 어플리케이션들은 삭제될 수 없도록 설정된 어플리케이션을 포함할 수 있다. 제1 영역 은, 부팅 로더를 더 포함할 수 있다. 프로세서는 운영 체제를 실행하기 이전에(prior to) 부팅 로더를 실 행하는 것에 기반하여, 커널(kernel)을 실행하기 위한 전처리를 수행할 수 있다. 전자 장치는 부팅 로더 를 이용하여 전자 장치 내 하드웨어 자원들을 초기화하기 위한 부팅 시퀀스를 제어할 수 있다. 예를 들어, 전자 장치는 펌웨어를 업데이트 한 이후, 하드웨어 자원들을 초기화하기 위해, 전자 장치(10 1)의 재부팅을 개시할 수 있다. 전자 장치는 부팅한 이후, 하드웨어 자원들을 업데이트된 펌웨어를 이용하여, 변경할 수 있다. 다만 이에 제한되는 것은 아니다. 예를 들어, 메모리(예, ROM(read only memory)) 내에 포함된 펌웨어는, 메모리 내에 설치된 다 른 소프트웨어를 실행을 야기하는 영구적 소프트웨어(permanent software)에 참조될 수 있다. 프로세서는 펌웨어를 통해, 다른 소프트웨어의 실행에 기반하여 하드웨어의 동작을 야기하기 위해, 상기 하드웨어를 구동하기 위한 논리 회로를 제어할 수 있다. 펌웨어는 소프트웨어의 실행에 기반하는 하드웨어의 제어를 관리하는 관점에서 운영 체제(operating system, OS)를 포함할 수 있다. 예를 들어, 프로세서는 외부 서버로부터 소프트웨어 어플리케이션을 다운로드하기 위한 입력에 응답하여, 제2 영역 내에 상기 소프트웨어 어플리케이션(예, 복수의 소프트웨어 어플리케이션들)을 설치할 수 있다. 상기 소프트웨어 어플리케이션은 제1 영역 내에 설치된 복수의 소프트웨어 어플리케이션들들 중 적어도 하나와 동일한 정보를 포함할 수 있다. 일 예로, 복수의 소프트웨어 어플리케이션들 중 동일한 소프 트웨어 어플리케이션이 제1 영역 및 제2 영역 내에 설치될 수 있다. 프로세서는 상기 동일한 소프트웨어 어플리케이션을 실행하는 경우, 제1 영역 내에 설치된 소프트웨어 어플리케이션의 버전 및 제2 영역 내에 설치된 소프트웨어 어플리케이션 다른 버전 중 높은 버전에 기반하는 소프트웨어 어플리케이션 의 실행을 개시할 수 있다. 예를 들어, 높은 버전은 최신 버전을 포함할 수 있다. 일 실시예에 따른 전자 장치는 서버로부터 수신된 펌웨어 업데이트 데이터를, 펌웨어 업데이트 식별 기의 실행에 기반하여 식별할 수 있다. 전자 장치는 펌웨어 업데이트 식별기의 실행에 기반하 여 상기 펌웨어 업데이트 데이터를 식별하는 것에 기반하여, 메모리 내에 저장된 펌웨어를 업데이트 할 지 여부를 결정할 수 있다. 전자 장 치는 서버로부터 수신된 어플리케이션 리스트 정보를 이용하 여, 펌웨어 업데이트 식별기의 실행에 기반하여, 제1 영역 내에 저장된 복수의 소프트웨어 어플리케 이션들 중 적어도 하나를 제2 영역으로 마이그레이션할 지 여부를 결정할 수 있다. 일 실시예에 따 른 전자 장치는, 마이그레이션 식별기의 실행에 기반하여, 제1 영역 내에 저장된 복수의 소프트 웨어 어플리케이션들 중 적어도 하나를 제2 영역으로 마이그레이션할 수 있다. 전자 장치가 상 기 적어도 하나를 마이그레이션 하는 동작은 도 3a 및 도 3b를 참고하여, 후술한다. 일 실시예에서, 전자 장치의 통신 회로는, 전자 장치, 및 외부 전자 장치(예, 서버) 사이 의 전기 신호의 송신 및/또는 수신을 지원하기 위한 하드웨어 부품을 포함할 수 있다. 통신 회로는, 예를 들어, 모뎀(MODEM), 안테나, O/E(optic/electronic) 변환기 중 적어도 하나를 포함할 수 있다. 통신 회로(25 0)는, 이더넷(ethernet), LAN(local area network), WAN(wide area network), WiFi(wireless fidelity), Bluetooth, BLE(bluetooth low energy), ZigBee, LTE(long term evolution), 5G NR(new radio) 및/또는 6G와 같은 다양한 타입의 프로토콜에 기반하여 전기 신호의 송신 및/또는 수신을 지원할 수 있다. 일 실시예에 따른, 전자 장치의 디스플레이는 사용자에게 시각화된 정보를 출력할 수 있다. 예를 들 어, 디스플레이는, GPU(graphic processing unit)와 같은 컨트롤러에 의해 제어되어, 사용자에게 시각화된 정보(visualized information)를 출력할 수 있다. 디스플레이는 LCD(liquid crystal display), PDP(plasma display panel) 및/또는 하나 이상의 LED(light emitting diode)를 포함할 수 있다. 상기 LED는 OLED(organic LED)를 포함할 수 있다. 디스플레이는 전자 종이(electronic paper)를 포함할 수 있다. 디스플레이는, 적어도 부분적으로 휘어진 형태를 가지거나, 및/또는 변형가능한(deformable) 형태를 가질 수 있다. 일 실시예에 따른 전자 장치의 디스플레이는, 디스플레이 상의 외부 객체(예, 사용자의 손가 락)를 탐지하기 위한 센서(예, TSP(touch sensor panel))를 포함할 수 있다. 예를 들어, TSP에 기반하여, 전 자 장치는 디스플레이와 접촉하거나, 또는 디스플레이 상을 부유하는(floating) 외부 객체를 탐 지할 수 있다. 상기 외부 객체를 탐지하는 것에 응답하여, 전자 장치는 디스플레이 내에 표시되고 있는 시각적 객체들 중에서 상기 외부 객체의 디스플레이 상에서의 위치에 대응하는 특정 시각적 객체와 관련된 기능을 실행할 수 있다. 도 2를 참고하면, 일 실시예에서, 서버는, 프로세서(210-1), 메모리(220-1), 또는 통신 회로(250-1) 중 적 어도 하나를 포함할 수 있다. 서버 내에서, 프로세서(210-1), 메모리(220-1), 및 통신 회로(250-1)는 통 신 버스(202-1)를 통해 전기적으로, 및/또는 작동적으로 결합될 수 있다. 서버 내에 포함된, 프로세서 (210-1), 메모리(220-1), 및 통신 회로(250-1)는, 전자 장치의 프로세서, 메모리, 및 통신 회 로에 대응하는 하드웨어 부품, 및/또는 회로를 포함할 수 있다. 이하에서, 반복을 줄이기 위하여, 서버 내에 포함된 프로세서(210-1), 메모리(220-1), 및 통신 회로(250-1)의 설명은, 전자 장치 내 프로 세서, 메모리, 및 통신 회로와 중복되는 범위 내에서 생략될 수 있다. 일 실시예에 따른 서버의 프로세서(210-1)는, 펌웨어 업데이트 생성기의 실행에 기반하여, 전자 장치 에게 송신될 펌웨어 업데이트 데이터를 생성할 수 있다. 펌웨어 업데이트 데이터는 전자 장치 내에 설치된 펌웨어의 버전보다 높은 다른 버전에 기반하는 펌웨어에 대한 데이터를 포함할 수 있다. 예를 들 어, 생성된 펌웨어 업데이트 데이터는 서버와 구분되는 다른 서버에 저장될 수 있다. 상기 다른 서버는 펌웨어 업데이트 데이터를 관리하기 위한 서버의 일 예일 수 있다. 상기 다른 서버는, 전자 장치와 직접 적으로 및/또는 간접적으로 연동되어 상기 펌웨어 업데이트 데이터를 전자 장치에게 제공할 수 있다. 다 만 이에 제한되는 것은 아니다. 상기 다른 버전에 기반하는 펌웨어에 대한 데이터는 전자 장치 내에 설치 된 펌웨어와 관련된 정보, 및/또는 소프트웨어 어플리케이션과의 호환성에 대한 정보를 포함할 수 있다.펌웨어 업데이트 생성기는 펌웨어 업데이트 생성 모듈로 지칭될 수 있다. 일 실시예에 따른 서버의 프로세서(210-1)는 어플리케이션 리스트 생성기의 실행에 기반하여, 펌웨어 업데이트 생성기를 통해 획득된 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플리케이션들의 리스트를 식별할 수 있다. 상기 소프트웨어 어플리케이션들의 리스트는 펌웨어 업데이트 데이터에 포함된 펌웨어 버전과 호환가능한 버전을 가지는 소프트웨어 어플리케이션에 대한 정보를 포함할 수 있다. 상기 소프트웨어 어플리케 이션들의 리스트는 전자 장치의 제1 영역 내에 설치된 복수의 어플리케이션들 중 적어도 하나를 포함할 수 있다. 상기 소프트웨어 어플리케이션들의 리스트는 상기 적어도 하나를 제2 영역으로 이동(또 는 마이그레이션(migration))하기위한 정보를 포함할 수 있다. 어플리케이션 리스트 생성기는 데이터 어 플리케이션 리스트 정책 생성 모듈(data application list policy generation module)로 지칭될 수 있다. 예를 들어, 서버는 펌웨어 업데이트 생성기를 통해 펌웨어 업데이트 데이터를 획득하는 것에 기반하 여, 어플리케이션 리스트 정보와 함께, 전자 장치에게 송신할 수 있다. 전자 장치는 상기 펌웨어 업 데이트 데이터 및 어플리케이션 리스트 정보를 통해, 펌웨어 및/또는 소프트웨어 어플리케이션을 업데이트할 수 있다. 이하, 도 3a 및 도 3b를 참고하여 일 실시예에 따른 전자 장치가 펌웨어 및 소프트웨어 어플리케이 션을 업데이트하는 동작(operation)의 일 예가 후술된다. 상술한 바와 같이 일 실시예에 따른 전자 장치는 서버로부터 펌웨어 업데이트 데이터 및 어플리케이 션 리스트 정보를 수신할 수 있다. 전자 장치는 업데이트될 펌웨어의 버전과 호환가능한 소프트웨어 어플 리케이션들을 식별할 수 있다. 전자 장치는 펌웨어를 업데이트하는 동안 식별한 소프트웨어 어플리케이션 들을 업데이트할 수 있다. 전자 장치는 펌웨어 업데이트와 함께 소프트웨어 어플리케이션들을 업데이트하 는 것에 기반하여, 펌웨어 및 소프트웨어 어플리케이션 사이의 호환성을 보다 쉽게 관리할 수 있다. 도 3a 및 도 3b는, 일 실시예에 따른 메모리의 제1 영역으로부터 제2 영역으로 이동된 소프트웨어 어플리케이션 의 일 예를 도시한다. 도 3a 및 도 3b의 전자 장치는 도 1 내지 도 2의 전자 장치를 포함할 수 있다. 도 3a를 참고하면 상태에서 전자 장치는 서버(예, 도 2의 서버)로부터 펌웨어 업데이트 데이터 및 어플리케이션 리스트 정보를 수신할 수 있다. 전자 장치는 어플리케이션 리스트 정보를 획 득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들(예, 도 2의 복수의 소프트웨어 어플리케이션들) 중 사용자에 의한 접근이 제한되는 상기 메모리의 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션 을 식별할 수 있다. 제1 소프트웨어 어플리케이션은 어플리케이션 리스트 정보에 대응할 수 있 다. 어플리케이션 리스트 정보는 제1 영역으로부터 제2 영역으로 이동될 소프트웨어 어플리케 이션들을 포함할 수 있다. 예를 들어, 어플리케이션 리스트 정보 내에 포함된 제1 소프트웨어 어플리케이 션에 대한 데이터를 획득하는 것에 기반하여 제1 소프트웨어 어플리케이션을 식별할 수 있다. 데이터는 제1 소프트웨어 어플리케이션의 패키지 명, 설치할 수 있는 어플리케이션 스토어, 펌웨어 버전(223-2)과 호환가능한 최소 버전(minor version)(301-2), 및/또는 업데이트의 중요성(또는 강제성) (예, 도 3a의 mandatory)(301-1)에 대한 정보(또는 코드 정보)를 포함할 수 있다. 예를 들어, 제1 소프트웨어 어플리케이션은 제1 영역 내에 저장되고 제1 소프트웨어 어플리케이션 정 보는 제2 영역 내에 저장될 수 있다. 제1 소프트웨어 어플리케이션 정보는 제1 소프트웨어 어 플리케이션을 실행하는 동안 획득되는 사용자 정보를 포함할 수 있다. 예를 들어, 전자 장치는 펌웨어 업데이트 데이터의 수신에 기반하여, 전자 장치 내에 설치된 펌웨어 의 버전(223-1)을 식별할 수 있다. 전자 장치는 펌웨어 업데이트 데이터에 대응하는 버전(223-2)보 다 전자 장치 내에 설치된 펌웨어의 버전(223-1)이 낮은 경우, 펌웨어 업데이트 데이터에 대응하는 버전(223-2)에 기반하는 펌웨어를 펌웨어로 변경(또는 업데이트)할 수 있다. 예를 들어, 전자 장치는 펌웨어의 버전(223-2)과 제1 소프트웨어 어플리케이션의 버전(310-1)이 호환 가능한지 여부를 식별할 수 있다. 전자 장치는 제1 소프트웨어 어플리케이션에 대응하는 데이터 를 이용하여, 제1 소프트웨어 어플리케이션의 업데이트 여부를 결정할 수 있다. 예를 들어, 전자 장 치는 어플리케이션 리스트 정보에 의해 식별된 제1 소프트웨어 어플리케이션의 버전(301-2)과 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션의 버전(310-1)이 동일한 것을 식별할 수 있다. 다만 이에 제한되는 것은 아니다. 예를 들어, 전자 장치는 어플리케이션 리스트 정보에 의해 식별된 제1 소프트웨어 어플리케이션의 버 전(301-2) 보다 높은 버전(또는 이후인(subsequent to) 버전)에 대응하는 제1 영역 내에 설치된 제1 소프 트웨어 어플리케이션의 버전(301-1)을 식별할 수 있다. 일 예로, 전자 장치는 버전(223-2)에 기반하 는 펌웨어를 설치한 상태 내에서, 버전(310-1)에 기반하는 제1 소프트웨어 어플리케이션의 실행 을 적어도 일시적으로 제한할 수 있다. 버전(223-2)에 기반하는 펌웨어를 설치한 상태 내에서 버전 (310-1)에 기반하는 제1 소프트웨어 어플리케이션의 실행하는 경우, 전자 장치 내에서 오류가 발생될 수 있다. 다만 이에 제한되는 것은 아니다. 예를 들어, 전자 장치는 제1 소프트웨어 어플리케이션 의 버전(310-1) 및 버전(223-2) 사이의 호환성을 식별하는 것에 기반하여, 상태로 진입할 수 있다. 일 실시예에 따른 전자 장치는 펌웨어를 업데이트 하기 이전에, 제1 영역의 여유 공간(free space)을 확보하기 위해, 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션을 제2 영역으로 이동시킬 수 있다. 여유 공간은 데이터를 저장할 수 있는 용량을 나타낼 수 있다. 전자 장치는 제1 소프 트웨어 어플리케이션의 업데이트 여부와 독립적으로, 제1 소프트웨어 어플리케이션을 제1 영역 에서 제2 영역으로 마이그레이션 할 수 있다. 제1 소프트웨어 어플리케이션을 업데이트하는 경우, 전자 장치는 어플리케이션 스토어 서버를 이용할 수 있다. 전자 장치가 어플리케이션 스토어 서버를 이용하는 동작은 도 3b에서 후술된다. 일 실시예에 따른 상태에서, 전자 장치는 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이 트하는 동안, 제1 영역과 구분되고 사용자에 의한 접근이 허용되는 메모리의 제2 영역 내 버전 (310-1)에 기반한 제1 소프트웨어 어플리케이션을 설치할 수 있다. 다만 이에 제한되는 것은 아니다. 전자 장 치는 제1 소프트웨어 어플리케이션을 제2 영역 내에 설치한 이후, 펌웨어 업데이트를 수행할 수 있다. 전자 장치가 제2 영역 내에 제1 소프트웨어 어플리케이션을 설치하는 동작은, 펌웨어 업 데이트를 수행하기 위한 전처리 동작에 포함될 수 있다. 예를 들어, 전자 장치는 제1 소프트웨어 어플리케이션의 데이터를 제1 영역으로부터 제2 영역 으로 이동시킬 수 있다. 전자 장치는 제1 소프트웨어 어플리케이션의 데이터를 제2 영역 의 일부분에 할당할 수 있다. 전자 장치는 제1 영역으로부터 제2 영역으로 제1 소프트웨어 어 플리케이션을 마이그레이션할 수 있다. 예를 들어, 전자 장치는 제1 소프트웨어 어플리케이션 을 제1 영역으로부터 제2 영역으로 마이그레이션 하는 것에 기반하여, 제1 영역 내에 설치된 제 1 소프트웨어 어플리케이션을 제거(또는 삭제)할 수 있다. 전자 장치는 제1 소프트웨어 어플리케이 션의 데이터에게 할당된 제1 영역 내 일부분에서, 제1 소프트웨어 어플리케이션의 데이터를 해 제할 수 있다. 다만 이에 제한되지 않는다. 일 실시예에 따른 전자 장치는 상태에서, 제1 소프트웨어 어플리케이션을 제2 영역 내에 설치한 것에 기반하여, 펌웨어를 업데이트할 수 있다. 예를 들어, 업데이트된 펌웨어의 버전(223- 2)은 업데이트 이전에 메모리에 저장된 펌웨어의 버전(223-1) 보다 높은(또는, 최신) 버전일 수 있다. 펌웨어를 펌웨어로 변경(또는 업데이트)하는 것은 버전(223-2)에 기반하는 펌웨어를 설 치하는 것을 포함할 수 있다. 전자 장치는 펌웨어를 업데이트하기 위해, 버전(223-2)에 기반하는 펌 웨어와 호환되는 제1 소프트웨어 어플리케이션의 설치 위치를 제1 영역으로부터 제2 영역 으로 변경할 수 있다. 전자 장치는 제2 영역으로 제1 소프트웨어 어플리케이션의 위치를 변경 하는 것에 기반하여, 제1 영역의 여유 공간(free space)을 증가시킬 수 있다. 도 3b를 참고하면, 일 실시예에 따른 상태에서, 전자 장치는 서버(예, 도 2의 서버)로부터 펌웨 어 업데이트 데이터 및 어플리케이션 리스트 정보(300-1)를 수신할 수 있다. 전자 장치는 어플리케이션 리스트 정보(300-1)를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들(예, 도 2의 복수의 소프트웨 어 어플리케이션들) 중 사용자에 의한 접근이 제한되는 상기 메모리의 제1 영역 내에 설치된 제2 소 프트웨어 어플리케이션을 식별할 수 있다. 제2 소프트웨어 어플리케이션에 대한 정보는 어플리케이 션 리스트 정보(300-1)에 포함될 수 있다. 예를 들어, 어플리케이션 리스트 정보(300-1) 내에 포함된 제2 소프 트웨어 어플리케이션에 대한 데이터를 획득하는 것에 기반하여 제2 소프트웨어 어플리케이션을 식별할 수 있다. 데이터는 제1 소프트웨어 어플리케이션의 패키지 명, 소프트웨어 어플리케이션을 설치할 수 있는 어플리케이션 스토어, 펌웨어 버전(223-2)과 호환가능한 최소 버전(minor version)(302- 2), 및/또는 업데이트의 중요성(예, 도 3a의 optional)(302-1)에 대한 정보(또는 코드 정보)를 포함할 수 있다. 예를 들어, 제2 소프트웨어 어플리케이션은 제1 영역 내에 저장되고 제2 소프트웨어 어플리케이션 정 보는 제2 영역 내에 저장될 수 있다. 제2 소프트웨어 어플리케이션 정보는 제2 소프트웨어 어 플리케이션을 실행하는 동안 획득되는 캐시 데이터를 포함할 수 있다. 예를 들어, 전자 장치는 펌웨어 업데이트 데이터의 수신에 기반하여, 전자 장치 내에 설치된 펌웨어 의 버전(223-1)을 식별할 수 있다. 전자 장치는 펌웨어 업데이트 데이터에 대응하는 버전(223-2)보 다 전자 장치 내에 설치된 펌웨어의 버전(223-1)이 낮은 경우, 펌웨어 업데이트 데이터에 대응하는 버전(223-2)에 기반하는 펌웨어로 펌웨어를 변경(또는 업데이트)할 수 있다. 예를 들어, 전자 장치는 업데이트 될 펌웨어의 버전(223-2)과 제2 소프트웨어 어플리케이션의 버전(320-1)이 호환가능한지 여부를 식별할 수 있다. 전자 장치는 제2 소프트웨어 어플리케이션에 대응하는 데이터를 이용하여, 제2 소프트웨어 어플리케이션의 업데이트 여부를 결정할 수 있다. 예 를 들어, 전자 장치는 어플리케이션 리스트 정보(300-1)에 의해 식별된 제2 소프트웨어 어플리케이션(32 0)의 버전(302-2)보다 앞서는 제2 소프트웨어 어플리케이션(예, 제1 영역 내에 설치된 제2 소프트웨 어 어플리케이션)의 버전(320-1)을 식별할 수 있다. 일 실시예에 따른 상태에서 전자 장치는 어플리케이션 리스트 정보(300-1)에 의해 식별된 제2 소프트 웨어 어플리케이션의 버전(302-2) 보다 제1 영역 내에 설치된 제2 소프트웨어 어플리케이션의 버전(320-1)이 앞서는(prior to)(또는 낮은) 경우, 통신 회로를 통해 어플리케이션 스토어 서버로부터 제2 영역 내 버전(302-2)에 기반한 제2 소프트웨어 어플리케이션을 다운로드할 수 있다. 전자 장치(10 1)는 펌웨어를 업데이트하는 동안, 어플리케이션 스토어 서버를 이용하여 제2 소프트웨어 어플리케이 션을 다운로드할 수 있다. 어플리케이션 스토어 서버는 전자 장치 내에, 소프트웨어 어플리케 이션들을 설치하기 위한 서비스를 제공하는 외부 서버를 포함할 수 있다. 버전(302-2)에 기반한 제2 소프트웨 어 어플리케이션은, 버전(302-2)보다 높은 버전에 기반한 제2 소프트웨어 어플리케이션을 포함할 수 있다. 버전(302-2)은 펌웨어의 버전(223-2)과 호환가능한 최소 버전을 나타낼 수 있다. 다만 이에 제한 되는 것은 아니다. 예를 들어, 전자 장치는 제2 영역 내 버전(302-2)에 기반한 제2 소프트웨어 어플 리케이션을 다운로드 하는 것에 기반하여, 제1 영역 내 설치된 제2 소프트웨어 어플리케이션을 제거할 수 있다. 일 실시예에 따른 전자 장치는 제1 영역 및 제2 영역 내에 제2 소프트웨어 어플리케이션이 설치된 경우, 제2 영역 내에 제2 소프트웨어 어플리케이션의 설치를 바이패스하고 제1 영역 내 에 설치된 제2 소프트웨어 어플리케이션을 삭제할 수 있다. 예를 들어, 제2 영역 내에 설치된 제2 소프트웨어 어플리케이션의 버전이 펌웨어의 버전(223-2)과 호환되지 않는 경우, 전자 장치는 어플리케이션 스토어 서버를 통해 제2 영역 내에 설치된 제2 소프트웨어 어플리케이션을 업데이 트할 수 있다. 상술한 바와 같이, 일 실시예에 따른 전자 장치는 펌웨어 업데이트와 함께, 메모리 내에 설치 된 소프트웨어 어플리케이션을 업데이트할 수 있다. 전자 장치는 제1 영역의 용량을 확보하기 위해, 제1 영역 내에 설치된 상기 소프트웨어 어플리케이션을 제2 영역으로 마이그레이션할 수 있다. 전자 장치는 제2 영역으로 마이그레이션 된 소프트웨어 어플리케이션 및 펌웨어를 업데이트하는 것에 기반하여, 사용자 편의성을 강화할 수 있다. 도 4는, 일 실시예에 따른 서버의 동작을 나타내는 흐름도의 일 예를 도시한다. 도 4의 서버는 도 2의 서버 를 포함할 수 있다. 도 4의 동작들 중 적어도 하나는 도 2의 서버 및/또는 도 2의 프로세서(210-1)에 의해 수행될 수 있다. 도 4의 동작들 각각은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것 은 아니다. 예를 들어, 동작들 각각의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수 있다. 도 4를 참고하면, 일 실시예에 따른 서버는, 동작 410에서, 펌웨어 업데이트 생성기를 통해, 펌웨어 업데이트 데이터를 생성할 수 있다. 서버는 펌웨어 업데이트 생성기의 실행에 기반하여, 펌웨어 업데이트 데이터를 획득 할 수 있다. 펌웨어 업데이트 데이터는 업데이트될 타겟 펌웨어를 포함할 수 있다. 펌웨어 업데이트 데이터는 펌웨어를 업데이트하기 위한 자원들을 포함할 수 있다. 펌웨어 업데이트 데이터는 펌웨어의 버전 정보를 포함 할 수 있다. 펌웨어 업데이트 데이터는 업데이트될 버전에 대응하는 소프트웨어 어플리케이션들의 버전 정보를 포함할 수 있다. 도 4를 참고하면, 일 실시예에 따른 서버는, 동작 420에서, 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플 리케이션을 식별하였는지 확인할 수 있다. 소프트웨어 어플리케이션은, 전자 장치(예, 도 2의 전자 장치(10 1))의 제1 영역 내에 설치된 소프트웨어 어플리케이션을 포함할 수 있다. 소프트웨어 어플리케이션은 상 기 제1 영역으로부터 제2 영역(예, 도 2의 제2 영역)으로 마이그레이션(또는 이동)하도록 설정된 소 프트웨어 어플리케이션의 일 예일 수 있다. 도 4를 참고하면, 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플리케이션을 식별하지 못한 경우(동작 420- 아니오), 동작 440에서, 일 실시예에 따른 서버는, 펌웨어 업데이트 데이터를 전자 장치에게 송신할 수 있다. 전자 장치(예, 도 2의 전자 장치)는 펌웨어 업데이트 데이터를 수신하는 이벤트를 식별한 것에 기반하여, 펌웨어 업데이트 데이터를 이용하여, 전자 장치 내에 설치된 펌웨어(예, 도 2의 펌웨어)를 업데이트 할 수 있다. 도 4를 참고하면, 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플리케이션을 식별한 경우(동작 420-예), 어 플리케이션 리스트 생성기를 통해 어플리케이션 리스트 정보를 획득할 수 있다. 어플리케이션 리스트 정보는, 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플리케이션의 버전 정보를 포함할 수 있다. 펌웨어 업데이트 데이터와 관련된 소프트웨어 어플리케이션의 버전 정보는 펌웨어 버전 정보와 호환가능한 버전을 나타낼 수 있 다. 어플리케이션 리스트 정보는, 소프트웨어 어플리케이션의 정보, 소프트웨어 어플리케이션의 패키지 명, 소 프트웨어 어플리케이션을 설치할 수 있는 어플리케이션 스토어, 펌웨어의 버전과 호환가능한 최소 버전(minor version), 및/또는 업데이트의 강제성에 대한 정보(또는 코드 정보)를 포함할 수 있다. 도 4를 참고하면 일 실시예에 따른 서버는 동작 450에서, 펌웨어 업데이트 데이터 및 어플리케이션 리스트 정보 를 전자 장치에게 송신할 수 있다. 전자 장치는 펌웨어 업데이트 데이터를 수신한 것에 기반하여, 펌웨어를 업 데이트할 수 있다. 전자 장치는 어플리케이션 리스트 정보를 수신한 것에 기반하여 메모리의 제1 영역 내에 설 치된 소프트웨어 어플리케이션을 식별할 수 있다. 어플리케이션 리스트 정보에 대응하는 소프트웨어 어플리케 이션이 없는 경우, 전자 장치는 펌웨어 업데이트를 개시할 수 있다. 어플리케이션 리스트 정보에 대응하는 소프 트웨어 어플리케이션이 있는 경우, 전자 장치는 제1 영역 내에 설치된 소프트웨어 어플리케이션을 제거하고, 제 2 영역 내에 소프트웨어 어플리케이션을 설치할 수 있다. 전자 장치는 외부 서버(예, 소프트웨어 어플리케이션 을 설치할 수 있는 어플리케이션 스토어)를 통해 제2 영역 내에 소프트웨어 어플리케이션을 설치할 수 있다. 전자 장치는 펌웨어 버전에 대한 호환성을 가지는 소프트웨어 어플리케이션을 설치할 수 있다. 도 5는 일 실시예에 따른 전자 장치의 펌웨어의 업데이트 동작을 나타내는 흐름도의 일 예를 도시한다. 도 5의 전자 장치는 도 1 내지 도 3b의 전자 장치를 포함할 수 있다. 도 5의 동작들 중 적어도 하나는 도 2의 전 자 장치에 의해 수행될 수 있다. 도 5의 동작들 중 적어도 하나는 도 2의 프로세서에 의해 제어될 수 있다. 도 5의 동작들 각각은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예 를 들어, 동작들 각각의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수 있다. 도 5를 참고하면 일 실시예에 따른 전자 장치는 동작 510에서, 펌웨어 업데이트 데이터를 획득할 수 있다. 전 자 장치는 서버(예, 도 2의 서버)로부터 펌웨어 업데이트 데이터를 수신할 수 있다. 도 5를 참고하면, 일 실시예에 따른 전자 장치는 동작 520에서, 어플리케이션 리스트 정보를 획득하였는지 여부 를 식별할 수 있다. 도 5를 참고하면, 어플리케이션 리스트 정보를 획득하지 않은 경우(동작 520-아니오), 동 작 550에서, 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이트할 수 있다. 도 5를 참고하면, 어플리케이션 리스트 정보를 획득한 경우(동작 530-예), 동작 530에서, 일 실시예에 따른 전 자 장치는 제1 영역(예, 도 2의 제1 영역) 내에 어플리케이션 리스트 정보(예, 도 3의 어플리케이션 리스 트 정보(300, 301-1))를 이용하여 식별된 소프트웨어 어플리케이션이 설치되었는지 여부를 식별할 수 있다. 상 기 소프트웨어 어플리케이션은 도 2의 복수의 소프트웨어 어플리케이션들를 포함할 수 있다. 도 5를 참고하면, 제1 영역 내에 소프트웨어 어플리케이션이 설치된 경우(동작 530-예), 동작 540에서, 일 실시 예에 따른 전자 장치는 펌웨어와 호환가능한 버전에 기반한 소프트웨어 어플리케이션이 설치되었는지 여부를 식 별할 수 있다. 펌웨어와 호환가능한 버전은, 상기 버전에 기반한 소프트웨어 어플리케이션의 실행에 의해 오류 가 발생되는지 여부로 결정될 수 있다. 다만 이에 제한되는 것은 아니다. 전자 장치는 어플리케이션 리스트 정보를 이용하여 펌웨어와 호환가능한 최소 버전(minor version)을 식별할 수 있다. 도 5를 참고하면, 펌웨어와 호환가능한 버전에 기반한 소프트웨어 어플리케이션이 설치된 경우(동작 540-예), 동작 550에서, 일 실시예에 따른 전자 장치는 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이트할 수 있다. 전자 장치는 동작 540을 수행한 이후 동작 550을 수행하는 경우, 제1 영역 내에 설치된 소프트웨어 어플 리케이션을 제2 영역으로 마이그레이션할 수 있다. 전자 장치는 상기 소프트웨어 어플리케이션을 제2 영역으로 마이그레이션한 것에 기반하여, 제1 영역 내에 설치된 소프트웨어 어플리케이션을 삭제할 수 있다. 도 5를 참고하면, 펌웨어와 호환가능한 버전에 기반한 소프트웨어 어플리케이션이 설치되지 않은 경우(동작 540-예), 동작 570에서, 일 실시예에 따른 전자 장치는 소프트웨어 어플리케이션을 업데이트할 수 있다. 전자 장치는 외부 서버(예, 어플리케이션 스토어를 제공하는 서버)를 통해 소프트웨어 어플리케이션을 업데이트할 수 있다. 업데이트된 소프트웨어 어플리케이션의 버전은 어플리케이션 리스트 정보에 의해 식별된 최소 버전 (minor version)보다 높을 수 있다. 전자 장치는 제1 영역 내에 설치된 소프트웨어 어플리케이션을 삭제하고 제2 영역 내에 소프트웨어 어플리케이션을 설치할 수 있다. 제2 영역 내에 설치된 소프트웨어 어플리케이션은 최신 버전에 기반한 소프트웨어 어플리케이션일 수 있다. 전자 장치는 제2 영역 내에 최신 버전에 기반한 소프트웨어 어플리케이션을 설치한 것에 기반하여, 동작 550에서, 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이트할 수 있다. 예를 들어, 전자 장치는 펌웨어를 업데이트를 하는 것과 동시에 제2 영역 내에 소프트웨 어 어플리케이션을 설치할 수 있다. 다만 이에 제한되지 않는다. 도 5를 참고하면, 제1 영역 내에 소프트웨어 어플리케이션이 설치되지 않은 경우(동작 530-아니오), 동작 560에 서, 일 실시예에 따른 전자 장치는 제2 영역 내에 펌웨어와 호환가능한 버전에 기반한 소프트웨어 어플리케이션 이 설치되었는지 여부를 식별할 수 있다. 전자 장치는 제2 영역 내에 소프트웨어 어플리케이션이 설치되 지 않은 경우(동작 560-아니오), 동작 550을 수행할 수 있다. 도 5를 참고하면, 제2 영역 내에 소프트웨어 어플리케이션이 설치된 경우(동작 560-예), 일 실시예에 따른 전자 장치는 동작 570을 수행할 수 있다. 예를 들어, 전자 장치는 동작 560을 수행한 이후 동작 570을 수행하는 경 우, 제1 영역 내에 소프트웨어 어플리케이션이 설치되지 않았기 때문에, 제1 영역 내에 소프트웨어 어플리케이 션의 제거를 삼가할 수 있다. 전자 장치는 동작 570을 수행한 이후, 동작 550에서, 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이트할 수 있다. 예를 들어, 전자 장치가 업데이트하는 소프트웨어 어플리케이션은 사용자 인터페이스를 통해 업데이트가 허용된 소프트웨어 어플리케이션의 일 예일 수 있다. 전자 장치가 사용자 인터페이스를 통해 소프트웨어 어플리케이션 의 업데이트를 허용하는 동작은 도 7a 및 도 7b를 참고하여 후술한다. 도 6은, 일 실시예에 따른 전자 장치의 소프트웨어 어플리케이션의 업데이트 동작을 나타내는 흐름도의 일 예를 도시한다. 도 6의 전자 장치는 도 1 내지 도 3b의 전자 장치를 포함할 수 있다. 도 6의 동작들 중 적어도 하나는 도 2의 전자 장치에 의해 수행될 수 있다. 도 6의 동작들 중 적어도 하나는 도 2의 프로세서(21 0)에 의해 제어될 수 있다. 도 6의 동작들 각각은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되 는 것은 아니다. 예를 들어, 동작들 각각의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수 있다. 도 6의 동작들 중 적어도 하나는 도 5의 동작들 중 적어도 하나와 관련될 수 있다. 도 6을 참고하면 일 실시예에 따른 전자 장치는 동작 610에서, 소프트웨어 어플리케이션의 업데이트를 나타내는 데이터를 처리할 수 있다. 동작 610은 도 5의 동작 570과 관련될 수 있다. 도 6을 참고하면, 일 실시예에 따른 전자 장치는 동작 620에서, 소프트웨어 어플리케이션이 활성화 되어있는지 여부를 식별할 수 있다. 소프트웨어 어플리케이션이 비활성화 되어있는 경우, 전자 장치는 소프트웨어 어플리 케이션의 실행을 일시적으로 삼가할 수 있다. 소프트웨어 어플리케이션의 비활성화는, 사용자 입력에 기반하여 설정될 수 있다. 예를 들어, 전자 장치는 소프트웨어 어플리케이션이 비활성화 되어있는 경우, 운영 체제 내에 서 상기 소프트웨어 어플리케이션을 나타내는 아이콘의 표시를 삼가할 수 있다. 다만 이에 제한되는 것은 아니 다. 도 6을 참고하면, 일 실시예에 따른 전자 장치는 소프트웨어 어플리케이션이 비활성화 된 경우(동작 620-아니오), 동작 650에서, 소프트웨어 어플리케이션의 업데이트를 적어도 일시적으로 삼가(또는 보류)할 수 있다. 도 6을 참고하면, 일 실시예에 따른 전자 장치는 소프트웨어 어플리케이션이 활성화된 경우(동작 620-예), 동작 630에서 어플리케이션 리스트 정보를 이용하여 소프트웨어 어플리케이션의 업데이트가 필수적인지 여부를 식별 할 수 있다. 업데이트가 필수적인지 여부는 도 3a 및 도 3b의 업데이트의 중요성(301-1, 302-1)을 나타내는 정 보를 통해 결정될 수 있다. 예를 들어, 도 3a의 업데이트의 중요성(301-1)을 나타내는 정보(예, mandatory)를 식별한 경우, 전자 장치는 소프트웨어 어플리케이션의 업데이트가 필수적인 것으로 판단할 수 있다. 예를 들어, 도 3b의 업데이트의 중요성(302-1)에 대한 정보(예, optional)을 식별한 경우, 전자 장치는 소프트웨어 어플리케이션의 업데이트가 필수적이지 않음을 판단할 수 있다. 다만 이에 제한되는 것은 아니다. 도 6을 참고하면, 소프트웨어 어플리케이션의 업데이트가 필수적인 경우(동작 630-예), 일 실시예에 따른 전자 장치는 동작 660에서, 외부 서버(예, 어플리케이션 스토어를 제공하는 서버)를 통해 소프트웨어 어플리케이션을 업데이트할 수 있다. 도 6을 참고하면, 소프트웨어 어플리케이션의 업데이트가 필수적이지 않은 경우(동작 630-아니오), 동작 640에 서, 일 실시예에 따른 전자 장치는 소프트웨어 어플리케이션의 업데이트를 나타내는 사용자 입력을 획득하였는 지 여부를 식별할 수 있다. 상기 사용자 입력은 펌웨어 업데이트와 관련된 사용자 인터페이스를 통해 식별될 수 있다. 전자 장치가 상기 사용자 입력을 획득하는 동작은 도 7a 및 도 7b를 참고하여 후술된다. 도 6을 참고하면, 업데이트를 나타내는 사용자 입력을 획득하지 못한 경우(동작 640-아니오), 일 실시예에 따른 전자 장치는 동작 650에서, 소프트웨어 어플리케이션의 업데이트를 적어도 일시적으로 삼가할 수 있다. 도 6을 참고하면, 업데이트를 나타내는 사용자 입력을 획득한 경우(동작 640-예), 일 실시예에 따른 전자 장치 는 동작 660을 수행할 수 있다. 일 실시예에 따른 전자 장치는 동작 660을 수행하는 동안, 펌웨어를 업데이트 할 수 있다. 다만 이에 제한되는 것은 아니다. 전자 장치는 소프트웨어 어플리케이션을 업데이트한 이후, 펌 웨어를 업데이트할 수 있다. 예를 들어, 전자 장치는 동작 640을 수행한 이후, 동작 630을 수행할 수 있다. 전 자 장치는 소프트웨어 어플리케이션의 업데이트를 나타내는 사용자 입력을 획득한 것에 기반하여, 소프트 웨어 어플리케이션의 업데이트가 필수적인지 여부를 식별할 수 있다. 도 7a 및 도 7b는 일 실시예에 따른 펌웨어 업데이트 화면의 일 예를 도시한다. 도 7a 및 도 7b의 전자 장치 는 도 1 내지 도 6의 전자 장치에 포함될 수 있다. 도 7a를 참고하면 일 실시예에 따른 전자 장치는 상태에서, 펌웨어를 업데이트 하기 위한 화면 을 디스플레이 상에 표시할 수 있다. 전자 장치는 서버(예, 도 2의 서버)로부터 펌웨어 업데이 트 데이터 및/또는 어플리케이션 리스트 정보를 획득한 것에 기반하여 화면을 표시할 수 있다. 화면(70 1)은 FOTA(firmware over the air)에 기반하여 제공될 수 있다. 예를 들어, 화면는 펌웨어 업데이트에 대한 텍스트를 포함할 수 있다. 화면은 업데이트의 개시를 나 타내는 시각적 객체, 업데이트를 개시할 시간을 설정하기 위한 시각적 객체, 및/또는 어플리케이션 리스트를 표시하기 위한 시각적 객체를 포함할 수 있다. 예를 들어, 전자 장치는 화면 내 어플리케이션 리스트 정보에 대응하는 어플리케이션 리스트를 표시 하기 위한 시각적 객체에 대한 입력을 식별할 수 있다. 시각적 객체에 대한 입력에 응답하여, 전자 장치는 도 7b의 상태로 진입할 수 있다. 도 7b를 참고하면, 일 실시예에 따른 전자 장치는 상태에서, 어플리케이션 리스트 정보에 의해 식별 된 어플리케이션 리스트(723, 724)를 포함하는 화면을 디스플레이 상에 표시할 수 있다. 상기 어플 리케이션 리스트 내에 포함된 소프트웨어 어플리케이션들은 도 2a의 복수의 소프트웨어 어플리케이션들 중 적어도 하나를 포함할 수 있다. 예를 들어, 제1 어플리케이션 리스트는 도 3b의 업데이트의 중요성(302- 1)에 대한 정보를 포함하는 소프트웨어 어플리케이션을 포함할 수 있다. 예를 들어, 도 3b의 제2 소프트웨어 어플리케이션을 포함할 수 있다. 예를 들어, 제1 어플리케이션 리스트는, 제1 영역(예, 도 2의 제1 영역) 내에 설치된 하나 이상의 제1 소프트웨어 어플리케이션들을 포함할 수 있다. 제1 어플리케이 션 리스트는, 하나 이상의 제1 소프트웨어 어플리케이션들 및 하나 이상의 제1 소프트웨어 어플리케 이션들의 업데이트를 허용하기 위한 시각적 객체들(728, 729)을 포함할 수 있다. 시각적 객체들(728, 729)은 토글 아이콘, 토글 객체, 및/또는 스위치 객체로 지칭될 수 있다. 예를 들어, 전자 장치는 하나 이상의 소프트웨어 어플리케이션들 전체를 나타내는 텍스트 객체 (예, All apps)에 대응하는 시각적 객체를 이용하여 하나 이상의 소프트웨어 어플리케이션들 전체를업데이트할 지 여부를 식별할 수 있다. 전자 장치는 상기 시각적 객체에 대한 입력에 응답하여, 하 나 이상의 소프트웨어 어플리케이션들 전체를 업데이트할 지 여부를 식별할 수 있다. 전자 장치는 하나 이상의 제1 소프트웨어 어플리케이션들에 대응하는 시각적 객체를 이용하여, 하나 이상의 제1 소프트웨어 어플리케이션들 각각에 대한 업데이트 여부를 식별할 수 있다. 전자 장치는 하나 이상의 제1 소프트웨어 어플리케이션들 중 적어도 하나에 대응하는 시각적 객체에 대한 입력에 응답하여, 상기 적 어도 하나에 대한 업데이트 여부를 결정할 수 있다. 다만 이에 제한되는 것은 아니다. 일 실시예에 따른 화면은, 업데이트가 필수(또는 강제)적인 하나 이상의 제2 소프트웨어 어플리케이션들 을 포함할 수 있다. 하나 이상의 제2 소프트웨어 어플리케이션들은 도 3a의 업데이트의 중요성(301- 1)에 대한 정보를 포함하는 소프트웨어 어플리케이션을 포함할 수 있다. 하나 이상의 제2 소프트웨어 어플리케 이션들은 도 3a의 제1 소프트웨어 어플리케이션을 포함할 수 있다. 예를 들어, 하나 이상의 제2 소 프트웨어 어플리케이션들은 펌웨어를 업데이트하는 동안, 외부 서버를 통해 업데이트될 수 있다. 예를 들어, 하나 이상의 제2 소프트웨어 어플리케이션들은 업데이트여부를 결정하기 위한 사용자 입력과 독립적 으로, 펌웨어를 업데이트하는 동안 전자 장치는 하나 이상의 제2 소프트웨어 어플리케이션들을 업데 이트할 수 있다. 업데이트 된 펌웨어를 실행한 상태 내에서, 업데이트 이전의 하나 이상의 제2 소프트웨어 어 플리케이션들을 실행하는 경우, 전자 장치는 오류를 식별할 수 있다. 전자 장치는 상기 오류를 줄이기 위해, 하나 이상의 제2 소프트웨어 어플리케이션들을 업데이트할 수 있다. 어플리케이션 리스트 내에 포함된 소프트웨어 어플리케이션들은 제2 영역(예, 도 2의 제2 영역) 내에 설치되거나 업데이트될 수 있다. 제2 영역 내에 설치되거나 업데이트된 소프트웨어 어플리케이션들은 제1 영역 내에서 삭제될 수 있다. 일 실시예에 따른 상태에서, 전자 장치는 하나 이상의 제1 소프트웨어 어플리케이션들 및/또는 하나 이상의 제2 소프트웨어 어플리케이션들에 대한 다운로드를 수행할 수 있다. 전자 장치는 제2 영 역 내에 소프트웨어 어플리케이션들을 다운로드할 수 있다. 예를 들어, 상태는, 도 7a의 상태와 대 응할 수 있다. 전자 장치는 펌웨어를 업데이트하기 위한 화면을 표시하는 동안, 시각적 객체를 이용하여, 소프트웨어 어플리케이션의 업데이트 진행률을 나타낼 수 있다. 예를 들어, 상태에서, 전자 장치는 외부 서버(예, 도 3b의 어플리케이션 스토어 서버)를 통해 하나 이상의 제1 소프트웨어 어플리케이션들 및/또는 하나 이상의 제2 소프트웨어 어플리케이션들을 다운로드할 수 있다. 전자 장치는 하나 이상의 제1 소프트웨어 어플리케이션들 중 업데이트가 허용 된 적어도 하나에 대한 다운로드를 수행할 수 있다. 전자 장치는 어플리케이션 리스트 정보를 이용하여, 펌웨어 업데이트 데이터를 통해 식별된 펌웨어의 버전과 호환가능한 소프트웨어 어플리케이션들의 버전에 기반 하여, 상기 소프트웨어 어플리케이션들을 업데이트할 수 있다. 예를 들어, 전자 장치는 상태에서 업 데이트(또는 설치)가 완료된 소프트웨어 어플리케이션에 대한 시각적 객체(예, 시각적 객체)의 표시를 삼 가할 수 있다. 다만 이에 제한되는 것은 아니다. 도 7a를 참고하면, 상태에서, 일 실시예에 따른 전자 장치는 소프트웨어 어플리케이션 업데이트 데이 터의 진행률을 나타내는 프로그레스 바 형태에 기반하는 시각적 객체를 표시할 수 있다. 전자 장치 는 시각적 객체에 대응하는 텍스트 객체를 함께 표시할 수 있다. 상기 텍스트 객체는 시간 및/또는 진행률 을 나타낼 수 있다. 상태는 상태에서 설치 중인 소프트웨어 어플리케이션의 다운로드에 대한 진행률 을 나타내는 시각적 객체를 전자 장치가 표시한 상태를 나타낼 수 있다. 전자 장치는 펌웨어 업데이트 데이터를 다운로드하는 동안, 도 7b의 하나 이상의 제1 소프트웨어 어플리케이션들 및/또는 하나 이상의 제2 소프트웨어 어플리케이션들을 다운로드(또는 업데이트)할 수 있다. 다만 이에 제한되는 것은 아니다. 도 7a를 참고하면, 펌웨어 업데이트 데이터 전체를 다운로드한 경우, 상태에서, 일 실시예에 따른 전자 장 치는 펌웨어 업데이트 데이터를 이용하여, 펌웨어를 업데이트할 수 있다. 전자 장치는 펌웨어 업데 이트의 진행률을 나타내는 프로그레스 바 형태의 시각적 객체를 포함하는 화면을 표시할 수 있다. 예를 들어, 전자 장치는 펌웨어의 버전을 더 높은 다른 버전으로 변경하는 업데이트를 수행할 수 있다. 상술한 바와 같이 일 실시예에 따른 전자 장치는 화면을 통해, 제1 영역(예, 도 2의 제1 영역) 으로부터 제2 영역(예, 도 2의 제2 영역)으로 마이그레이션하기 위한 소프트웨어 어플리케이션 리스트를 표시할 수 있다. 전자 장치는 소프트웨어 어플리케이션 리스트를 표시하는 것에 기반하여 펌웨어를 업데 이트하는 동안, 업데이트 될 펌웨어와 호환되지 않는 버전에 기반하는 소프트웨어 어플리케이션을 업데이트하도 록 사용자에게 가이드할 수 있다. 전자 장치는 화면 및 화면을 이용하여, 펌웨어 업데이트 및소프트웨어 어플리케이션 업데이트를 함께 수행할 수 있는 사용자 인터페이스르 제공할 수 있다. 도 8은 일 실시예에 따른 소프트웨어 어플리케이션 리스트를 나타내는 화면의 일 예를 도시한다. 도 8의 전자 장치는 도 1 내지 도 7b의 전자 장치를 포함할 수 있다. 도 8을 참고하면, 일 실시예에 따른 전자 장치는 화면을 디스플레이 상에 표시할 수 있다. 화면 은 하나 이상의 제2 소프트웨어 어플리케이션들의 리스트를 포함할 수 있다. 하나 이상의 제2 소프트 웨어 어플리케이션들은 도 7b의 하나 이상의 제2 소프트웨어 어플리케이션들에 참조될 수 있다. 전 자 장치는 통신 링크가 연결된 경우, 화면 내 포함된 하나 이상의 제2 소프트웨어 어플리케이션들 을, 자동적으로 또는 사용자 입력에 기반하여, 업데이트할 수 있다. 전자 장치는 하나 이상의 제2 소프트웨어 어플리케이션들 중 비활성화된 소프트웨어 어플리케이션 을 식별할 수 있다. 전자 장치는 비활성화된 소프트웨어 어플리케이션을 업데이트할 지 여부를 나타내는 시각적 객체를 표시할 수 있다. 전자 장치는 시각적 객체를 이용하여, 비활성화된 소 프트웨어 어플리케이션을 활성화할 지 또는 업데이트할 지 여부를 결정할 수 있다. 예를 들어, 전자 장치 는 시각적 객체가 비활성화 위치에 있는 경우, 소프트웨어 어플리케이션의 업데이트를 적어도 일시적으로 삼가할 수 있다. 전자 장치는 시각적 객체가 활성화 위치에 있는 경우, 소프트웨어 어 플리케이션을 비활성화 상태에서 활성 상태로 변경하고 소프트웨어 어플리케이션을 업데이트할 수 있 다. 다만 이에 제한되는 것은 아니다. 도 9는 일 실시예에 따른 전자 장치의 동작을 나타내는 흐름도의 일 예를 도시한다. 도 9의 전자 장치는 도 1 내지 도 8의 전자 장치를 포함할 수 있다. 도 9의 동작들 중 적어도 하나는 도 2의 전자 장치에 의 해 수행될 수 있다. 도 9의 동작들 중 적어도 하나는 도 2의 프로세서에 의해 제어될 수 있다. 도 9의 동작들 각각은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 동작들 각각의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수 있다. 도 9를 참고하면, 동작 910에서, 일 실시예에 따른 전자 장치는 펌웨어 업데이트 데이터 및 펌웨어 업데이트 데 이터와 관련된 어플리케이션 리스트 정보를 획득할 수 있다. 예를 들어, 전자 장치는 펌웨어 업데이트 데이터 를 이용하여, 펌웨어 업데이트를 위한 화면(예, 도 7a의 화면)을 표시할 수 있다. 도 9를 참고하면, 동작 920에서, 일 실시예에 따른 전자 장치는 어플리케이션 리스트 정보를 획득하는 것에 기 반하여, 복수의 소프트웨어 어플리케이션들 중 제1 영역 내에 설치되고 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별할 수 있다. 전자 장치는 펌웨어 업데이트를 위한 화면을 이용하여, 어플 리케이션 리스트 정보를 나타내는 시각적 객체(예, 도 7a의 시각적 객체)에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 어플리케이션 리스트(예, 도 7b의 어플리케이션 리스트)를 표시 할 수 있다. 전자 장치는 제1 소프트웨어 어플리케이션에 대응하는 시각적 객체(또는 토글 버튼)를 이용하여, 제1 소프트웨어 어플리케이션을 업데이트할지 여부를 식별할 수 있다. 도 9를 참고하면, 동작 930에서, 일 실시예에 따른 전자 장치는 어플리케이션 리스트 정보에 의해 식별된 제1 소프트웨어 어플리케이션의 버전 보다 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션의 다른 버전이 앞서 는 지 여부를 식별할 수 있다. 상기 버전보다 앞선 상기 다른 버전은, 상기 버전보다 이전에 업데이트(또는 설 치)된 버전을 포함할 수 있다. 상기 버전보다 앞선 상기 다른 버전은, 상기 버전보다 상대적으로 낮은 버전을 나타낼 수 있다. 다만 이에 제한되는 것은 아니다. 도 9를 참고하면, 어플리케이션 리스트 정보에 의해 식별된 제1 소프트웨어 어플리케이션의 버전 보다 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션의 다른 버전이 앞서는 경우(동작 930-예), 일 실시예에 따른 전자 장 치는 동작 940에서, 펌웨어 업데이트 데이터를 이용하여 펌웨어를 업데이트하는 동안, 제2 영역 내 버전에 기반 한 상기 제1 소프트웨어 어플리케이션을 설치할 수 있다. 예를 들어, 전자 장치는 펌웨어 업데이트 데이터를 통해 식별된 펌웨어의 버전과 호환성을 가지는 제1 소프트웨어 어플리케이션의 다른 버전을 식별할 수 있다. 예를 들어, 전자 장치는 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션의 버전이 상기 다른 버전 보다 낮 은 버전인 경우, 외부 서버(예, 어플리케이션 스토어를 제공하는 서버)를 이용하여, 제2 영역 내에 제1 소프트 웨어 어플리케이션을 설치할 수 있다. 예를 들어, 예를 들어, 전자 장치는 제1 영역 내에 설치된 제1 소프트웨 어 어플리케이션의 버전이 상기 다른 버전 보다 높은 버전인 경우, 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션을 제2 영역으로 마이그레이션할 수 있다. 도 9를 참고하면, 일 실시예에 따른 전자 장치는, 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영 역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인 경우(동작 930-아니오), 동작 950에서, 제2 영역 내에 다른 버전에 기반한 제1 소프트웨어 어플리케이션을 설치할 수 있다. 상기 버전은 업 데이트될 펌웨어와 호환가능한 제1 소프트웨어 어플리케이션의 최소 버전을 나타낼 수 있다. 일 실시예에 따른 전자 장치는 동작 940 또는 동작 950을 수행한 이후, 제1 영역 내에 설치된 제1 소프트웨어 어플리케이션을 제거할 수 있다. 전자 장치는 제2 영역 내에 제1 소프트웨어 어플리케이션을 설치하였기 때문 에, 제1 영역 내에서 제1 소프트웨어 어플리케이션을 삭제하는 것에 기반하여, 제1 영역의 잔여 용량을 증가시 킬 수 있다. 전자 장치는 펌웨어를 업데이트하는 동안 제1 소프트웨어 어플리케이션을 제1 영역으로부터 제2 영역으로 이동할 수 있다. 일 실시예에 따른 전자 장치는 펌웨어를 업데이트하는 동안 메모리 내 시스템 영역의 용량을 확보하기 위해 시 스템 영역에 저장된 소프트웨어 어플리케이션을 유저 영역으로 마이그레이션할 수 있다. 전자 장치는 유저 영 역으로 마이그레이션 하는 것에 기반하여 소프트웨어 어플리케이션의 버전을 업데이트할 수 있다. 전자 장치가 펌웨어 및 소프트웨어 어플리케이션을 동시에 업데이트하기 위한 방안이 요구될 수 있다. 상술한 바와 같은, 일 실시예에 따른 전자 장치는, 인스트럭션들을 저장하기 위한 메모리, 통신 회로 , 적어도 하나의 프로세서를 포함할 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 통신 회로를 통해 상기 전자 장치 내에 설치된 펌웨어의 버전을 변경하기 위한 펌웨어 업 데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보를 획득하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 상기 메모리의 제1 영역 내에 설치되고 상기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 어플리케 이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전(301-2) 보다 상기 제1 영역 내에 설 치된 상기 제1 소프트웨어 어플리케이션의 다른 버전(310-1)이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허 용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하도록 구성될 수 있다. 예를 들어, 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 제1 소프트웨어 어플리케이 션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인 (subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치 하도록 구성될 수 있다. 예를 들어, 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 통신 회로를 이용하여 외부 서버를 통해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록, 구성될 수 있다. 예를 들어, 상기 전자 장치는 디스플레이를 더 포함할 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트 럭션들이 실행될 때, 상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 상기 디스플레이 상에, 상기 펌웨어 를 업데이트 하기 위한 화면을 표시하도록 구성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트 럭션들이 실행될 때, 상기 화면 내 상기 어플리케이션 리스트 정보에 대응하는 어플리케이션 리스트를 표 시하기 위한 시각적 객체에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 상기 어 플리케이션 리스트를 상기 디스플레이 상에 표시하도록 구성될 수 있다. 예를 들어, 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 디스플레이 상에 표시된 상 기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에 응답하여, 상기 제2 영역 내 상기 제1 소프트웨어 어플리케이션을 설치하도록 구성될 수 있다. 상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타낼 수 있다. 예를 들어, 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 어플리케이션 리스트 정보를 이용하여, 상기 펌웨어의 상기 버전과 호환가능한 상기 제1 소프트웨어 어플리케이션의 상기 버전 및 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전 중 상기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하도록 구 성될 수 있다. 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 상기 제1 소프트웨어 어플리케 이션의 상기 버전을 식별하는 것에 기반하여, 상기 다른 입력의 수신과 독립적으로, 상기 버전에 기반한 제1 소 프트웨어 어플리케이션을 상기 제2 영역 내에 설치하도록 구성될 수 있다. 예를 들어, 상기 어플리케이션 리스트에 대응하는 제2 소프트웨어 어플리케이션들은, 상기 펌웨어를 업데 이트하는 동안 상기 제1 영역 내에서 제거되도록 설정될 수 있다. 예를 들어, 상기 적어도 하나의 프로세서는, 상기 인스트럭션들이 실행될 때, 업데이트된 상기 펌웨어 내에서 상기 제2 소프트웨어 어플리케이션들의 실행을 적어도 일시적으로 삼가하도록 구성될 수 있다. 상술한 바와 같은 일 실시예에 따른 전자 장치의 방법은, 통신 회로를 통해 상기 전자 장치 내에 설 치된 펌웨어의 버전을 변경하기 위한 펌웨어 업데이트 데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보를 획득하는 동작을 포함할 수 있다. 상기 방법은 상기 어플리케이션 리스트 정 보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사용자에 의한 접근이 제한되는 메모리 의 제1 영역 내에 설치되고 상기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션 을 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 어플리케이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전(301-2) 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이 션의 다른 버전(310-1)이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데 이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 제1 소프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함할 수 있다. 예를 들어, 상기 제1 소프트웨어 어플리케이션을 설치하는 동작은, 상기 통신 회로를 이용하여 외부 서버를 통 해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 디스플레이 상에, 상기 펌웨어 를 업데이트 하기 위한 화면을 표시하는 동작을 포함할 수 있다. 상기 방법은, 상기 화면 내 상기 어플리 케이션 리스트 정보에 대응하는 어플리케이션 리스트를 표시하기 위한 시각적 객체에 대한 입력에 응 답하여, 상기 제1 소프트웨어 어플리케이션을 포함하는 상기 어플리케이션 리스트를 상기 디스플레이 상에 표시 하는 동작을 포함할 수 있다. 예를 들어, 상기 방법은, 상기 디스플레이 상에 표시된 상기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에 응답하여, 상기 제2 영역 내 상기 제1 소프트웨어 어플리케이션을 설치하는 동작을 포 함할 수 있다. 상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타낼 수 있다. 예를 들어, 상기 방법은, 상기 어플리케이션 리스트 정보를 이용하여, 상기 펌웨어의 상기 버전과 호환가능한 상기 제1 소프트웨어 어플리케이션의 상기 버전 및 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전 중 상 기 제1 소프트웨어 어플리케이션의 상기 버전을 식별하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 소프 트웨어 어플리케이션의 상기 버전을 식별하는 것에 기반하여, 상기 다른 입력의 수신과 독립적으로, 상기 버전 에 기반한 제1 소프트웨어 어플리케이션을 상기 제2 영역 내에 설치하는 동작을 포함할 수 있다. 예를 들어, 상기 어플리케이션 리스트에 대응하는 제2 소프트웨어 어플리케이션들은, 상기 펌웨어를 업데 이트하는 동안 상기 제1 영역 내에서 제거되도록 설정될 수 있다. 상술한 바와 같은 일 실시예에 따른 하나 이상의 인스트럭션들을 저장하기 위한 컴퓨터 판독 가능 저장 매체에 있어서, 상기 하나 이상의 인스트럭션들은 전자 장치의 프로세서에 의해 실행될 때, 상기 전자 장치 의 통신 회로를 통해 상기 전자 장치 내에 설치된 펌웨어의 버전을 변경하기 위한 펌웨어 업데이트데이터 및 상기 펌웨어 업데이트 데이터와 관련된 어플리케이션 리스트 정보를 획득하도록 상기 전자 장치 를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실 행될 때, 상기 어플리케이션 리스트 정보를 획득하는 것에 기반하여, 복수의 소프트웨어 어플리케이션들 중 사 용자에 의한 접근이 제한되는 상기 전자 장치의 메모리의 제1 영역 내에 설치되고 상기 어플리케이션 리스트 정보에 대응하는 제1 소프트웨어 어플리케이션을 식별하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 어플리케 이션 리스트 정보에 의해 식별된 상기 제1 소프트웨어 어플리케이션의 버전(301-2) 보다 상기 제1 영역 내에 설 치된 상기 제1 소프트웨어 어플리케이션의 다른 버전(310-1)이 앞서는(prior to) 경우, 상기 펌웨어 업데이트 데이터를 이용하여 상기 펌웨어를 업데이트하는 동안, 상기 제1 영역과 구분되고 상기 사용자에 의한 접근이 허 용되는 상기 메모리의 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록, 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로 세서에 의해 실행될 때, 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션을 제거하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 예를 들어, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 제1 소 프트웨어 어플리케이션의 상기 버전 보다 상기 제1 영역 내에 설치된 상기 제1 소프트웨어 어플리케이션의 상기 다른 버전이 이후인(subsequent to) 경우, 상기 제2 영역 내에 상기 다른 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설치하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 예를 들어, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 통신 회 로를 이용하여 외부 서버를 통해 상기 제2 영역 내 상기 버전에 기반한 상기 제1 소프트웨어 어플리케이션을 설 치하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 예를 들어, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 펌웨어 업데이트 데이터를 획득한 것에 기반하여 상기 디스플레이 상에, 상기 펌웨어를 업데이트 하기 위한 화면 을 표시하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 하나 이상의 인스트럭션들은 상기 전자 장치 의 상기 프로세서에 의해 실행될 때, 상기 화면 내 상기 어플리케이션 리스트 정보에 대응하는 어플리케이션 리 스트를 표시하기 위한 시각적 객체에 대한 입력에 응답하여, 상기 제1 소프트웨어 어플리케이션을 포 함하는 상기 어플리케이션 리스트를 상기 디스플레이 상에 표시하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 예를 들어, 상기 하나 이상의 인스트럭션들은 상기 전자 장치의 상기 프로세서에 의해 실행될 때, 상기 디스플 레이 상에 표시된 상기 제1 소프트웨어 어플리케이션을 나타내는 텍스트 객체에 대한 다른 입력에 응답하여, 상 기 제2 영역 내 상기 제1 소프트웨어 어플리케이션을 설치하도록 상기 전자 장치를 야기하도록 구성될 수 있다. 상기 다른 입력은 상기 제1 소프트웨어 어플리케이션의 설치를 허용함을 나타낼 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 프로세서, 콘트롤 러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 컴퓨터저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되 어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 이때, 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수 개의 하드웨어가 결합된 형태의 다 양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워 크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 어플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다."}
{"patent_id": "10-2023-0109421", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범 위에 속한다."}
{"patent_id": "10-2023-0109421", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는, 일 실시예에 따른 전자 장치의 블록도의 일 예를 도시한다. 도 3a 및 도 3b는, 일 실시예에 따른 메모리의 제1 영역으로부터 제2 영역으로 이동된 소프트웨어 어플리케이션 의 일 예를 도시한다. 도 4는, 일 실시예에 따른 서버의 동작을 나타내는 흐름도의 일 예를 도시한다. 도 5는 일 실시예에 따른 전자 장치의 펌웨어의 업데이트 동작을 나타내는 흐름도의 일 예를 도시한다. 도 6은, 일 실시예에 따른 전자 장치의 소프트웨어 어플리케이션의 업데이트 동작을 나타내는 흐름도의 일 예를 도시한다. 도 7a 및 도 7b는 일 실시예에 따른 펌웨어 업데이트 화면의 일 예를 도시한다. 도 8은 일 실시예에 따른 소프트웨어 어플리케이션 리스트를 나타내는 화면의 일 예를 도시한다. 도 9는 일 실시예에 따른 전자 장치의 동작을 나타내는 흐름도의 일 예를 도시한다."}
