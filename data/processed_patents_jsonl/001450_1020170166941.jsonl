{"patent_id": "10-2017-0166941", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0066994", "출원번호": "10-2017-0166941", "발명의 명칭": "지능형 IoT 시스템 구성을 위한 통합운용환경 구축방법", "출원인": "전자부품연구원", "발명자": "성낙명"}}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1 애플리케이션 컨테이너가, 데이터 버스 계층에 공유 데이터를 생성하는 단계; 및제2 애플리케이션 컨테이너가, 데이터 버스 계층에 생성된 공유 데이터를 구독하는 단계;를 포함하는 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,공유 데이터는,제1 애플리케이션 컨테이너가, 보유하고 있는 데이터인 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,제1 애플리케이션 컨테이너와 제2 애플리케이션 컨테이너는,단일 디바이스에 설치된 애플리케이션 컨테이너들이고,데이터 버스 계층은,애플리케이션 컨테이너들이 설치된 디바이스의 로컬 데이터 버스 계층인 것을 특징으로 하는 애플리케이션 간상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,애플리케이션 관리자 컨테이너를 통해, 디바이스에 설치된 애플리케이션 목록, 정보 및 상태를 조회하는 단계;를 더 포함하는 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 3에 있어서,애플리케이션 관리자 컨테이너가, 제1 애플리케이션과 제2 애플리케이션의 생애주기를 관리하는 단계;를 더 포함하는 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,제1 애플리케이션 컨테이너와 제2 애플리케이션 컨테이너는,다른 디바이스에 설치된 애플리케이션 컨테이너들이고,공개특허 10-2019-0066994-3-데이터 버스 계층은,클라우드 플랫폼의 글로벌 데이터 버스 계층인 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서,애플리케이션 등록 관리자 컨테이너가, 공유 데이터를 생성하는 제1 애플리케이션을 클라우드 플랫폼에 등록하는 단계;애플리케이션 등록 관리자 컨테이너를 통해, 등록단계에서 등록된 제1 애플리케이션이 생성하는 공유 데이터에대한 정보를 제공하는 단계;를 더 포함하는 것을 특징으로 하는 애플리케이션 간 상호 연동 방법."}
{"patent_id": "10-2017-0166941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "데이터 버스 계층에 공유 데이터를 생성하는 제1 애플리케이션 컨테이너; 및데이터 버스 계층에 생성된 공유 데이터를 구독하는 제2 애플리케이션 컨테이너;를 포함하는 것을 특징으로 하는 디바이스."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "지능형 IoT 시스템 구성을 위한 통합운용환경 구축방법이 제공된다. 본 발명의 실시예에 따른 애플리케이션 간 상호 연동 방법은, 제1 애플리케이션 컨테이너가 데이터 버스 계층에 공유 데이터를 생성하고, 제2 애플리케이션 컨테이너가 데이터 버스 계층에 생성된 공유 데이터를 구독한다. 이에 의해, 지능형 IoT 통합운용환경을 통해 다 양한 산업 영역에 걸쳐 보다 효율적으로 지능형 IoT 시스템을 구성할 수 있게 된다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 통합운용환경 구축기술에 관한 것으로, 더욱 상세하게는 지능형 IoT 시스템 구성을 위한 통합운용환 경 구축방법에 관한 것이다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "현재 제공되고 있는 대다수의 IoT의 서비스는 사물이 인터넷에 연결되어 사용자가 사전에 설정한 조건과 정책에 따라 동작하고, 클라우드 서버를 통해 수집된 데이터를 기반으로 사물을 제어하는 방식으로 작동한다. 하지만, 단순히 연결성(Connectivity)과 사전 설정에 의한 자동화 기능 제공만으로는 안정적인 운용과 지속적인 가치 창출이 어려우며, 이는 오히려 서비스의 사용을 복잡하게 만드는 결과마저 초래한다. 이것이 현재 IoT 산업의 실정이며, 성장율 감소의 원인이 되고 있다. 이러한 이유로 지능형 IoT의 필요성이 제 기되고 있다. 지능형 IoT를 구현하는 방식 중 하나가 클라우드의 인공지능 서비스를 이용하는 것이다. 지능형 클라우드 플랫폼을 활용하여 새로운 산업 영역을 개척하는 시도가 계속될 것으로 예상된다. 이에, 지능 형 IoT 시스템 구성을 위한 통합운용환경 구축방법이 필요한 실정이다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로서, 본 발명의 목적은, 지능형 IoT 시스템 구성 을 위한 통합운용환경 구축하기 위한 방법을 제공함에 있다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른, 애플리케이션 간 상호 연동 방법은, 제1 애플리케이션 컨테이너가, 데이터 버스 계층에 공유 데이터를 생성하는 단계; 및 제2 애플리케이션 컨테이너가, 데이터 버스 계층에 생성된 공유 데이터를 구독하는 단계;를 포함한다. 그리고, 공유 데이터는, 제1 애플리케이션 컨테이너가, 보유하고 있는 데이터일 수 있다. 또한, 제1 애플리케이션 컨테이너와 제2 애플리케이션 컨테이너는, 단일 디바이스에 설치된 애플리케이션 컨테 이너들이고, 데이터 버스 계층은, 애플리케이션 컨테이너들이 설치된 디바이스의 로컬 데이터 버스 계층일 수 있다. 그리고, 본 발명의 실시예에 따른 애플리케이션 간 상호 연동 방법은, 애플리케이션 관리자 컨테이너를 통해, 디바이스에 설치된 애플리케이션 목록, 정보 및 상태를 조회하는 단계;를 더 포함할 수 있다. 또한, 본 발명의 실시예에 따른 애플리케이션 간 상호 연동 방법은, 애플리케이션 관리자 컨테이너가, 제1 애플 리케이션과 제2 애플리케이션의 생애주기를 관리하는 단계;를 더 포함할 수 있다. 그리고, 제1 애플리케이션 컨테이너와 제2 애플리케이션 컨테이너는, 다른 디바이스에 설치된 애플리케이션 컨 테이너들이고, 데이터 버스 계층은, 클라우드 플랫폼의 글로벌 데이터 버스 계층일 수 있다. 또한, 본 발명의 실시예에 따른 애플리케이션 간 상호 연동 방법은, 애플리케이션 등록 관리자 컨테이너가, 공 유 데이터를 생성하는 제1 애플리케이션을 클라우드 플랫폼에 등록하는 단계; 애플리케이션 등록 관리자 컨테이 너를 통해, 등록단계에서 등록된 제1 애플리케이션이 생성하는 공유 데이터에 대한 정보를 제공하는 단계;를 더 포함할 수 있다. 한편, 본 발명의 다른 실시예에 따른, 디바이스는, 데이터 버스 계층에 공유 데이터를 생성하는 제1 애플리케이 션 컨테이너; 및 데이터 버스 계층에 생성된 공유 데이터를 구독하는 제2 애플리케이션 컨테이너;를 포함한다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상 설명한 바와 같이, 본 발명의 실시예들에 따르면, 지능형 IoT 통합운용환경을 통해 다양한 산업 영역에 걸 쳐 보다 효율적으로 지능형 IoT 시스템을 구성할 수 있게 된다."}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 지능형 IoT 시스템 구성을 위한 통합운용환경(이하, '지능형 IoT 통합운용환경'으로 약칭)은 가상화 기술 기반 으로 다양한 애플리케이션들의 상호 연동을 통하여 지능형 서비스를 제공하기 위한 운영환경으로서, 운용 환경 에서 동작하는 개별적인 애플리케이션 간의 상호 메시지 전송을 위한 기반을 제공한다. 상호 연동의 형태는 단일 디바이스에 설치된 애플리케이션 간의 상호 연동 뿐만 아니라, 물리적으로 떨어져 있 는 디바이스에 각각 설치된 애플리케이션 간의 상호 연동을 포함한다. 애플리케이션 간의 상호 연동 메커니즘은 애플리케이션 개발의 복잡도를 감소시키기 위하여, 하위 데이터 전송 레이어를 추상화하는 라이브러리를 통해 이루어진다.도 1은 단일 디바이스에 설치된 애플리케이션 간의 상호 연동 구조를 나타낸 도면이다. 도 1에 도시된 바와 같이, 단일 디바이스 내에서 애플리케이션 간의 상호 연동은 로컬 데이터 버스 계층에서 오 픈 데이터를 매개로 이루어진다. 데이터를 보유하는 애플리케이션이 공유 데이터를 생성하면 해당 데이터를 이 용하는 애플케이션들은 이 데이터에 대한 구독(subscription)을 통해 애플리케이션 상호 연동 기능을 구현할 수 있다. 또한, 모든 애플리케이션은 애플리케이션 관리자(Application Manager)에 의한 생애주기(Lifecycle) 관리를 지 원하기 위해 애플리케이션 관리자가 보유한 애플리케이션 생애 관리 데이터 갱신을 요청할 수 있다. 디바이스에서 실행되는 애플리케이션에 대한 상태 정보는 애플리케이션 관리자에 의해 관리된다. 도 2는 다른 디바이스에 설치된 애플리케이션 간의 상호 연동 구조를 나타낸 도면이다. 물리적으로 분리된 서로 다른 디바이스에 설치된 애플리케이션 간의 상호작용은 글로벌 데이터 버스 계층에서 오픈 데이터를 매개로 이루어진다. 글로벌 데이터 버스는 CIoT 클라우드 플랫폼에서 운영된다. 디바이스에 설치된 애플리케이션들은 클라우드 플랫폼의 오픈 데이터를 매개로 상호 작용할 수 있다. 애플리케이션 개발자는 등록 애플리케이션 정보를 통해 애플리케이션이 제공하는 공유 데이터에 대한 정보를 참 고하여 해당 데이터에 대한 구독(subscription)을 통해 상호작용 기능을 제공할 수 있다. 도 3은 디바이스 플랫폼의 아키텍쳐를 도시한 도면이다. 디바이스 플랫폼은, 도 3에 도시된 바와 같이, 애플리 케이션 관리자 컨테이너(Application Manager Container), 애플리케이션 컨테이너들(120-1 ... 120-n), 도커 및 OS를 포함하여 구축된다. 애플리케이션 관리자 컨테이너는, 애플리케이션 컨테이너들(120-1, ... 120-n)의 실행/중지, 조회, 생애주 기 관리, 애플리케이션 간 상호작용을 관리하는 컨테이너이다. 도커는 호스트 OS를 사용하여 컨테이 너들(110, 120-1, ... 120-n)을 생성하고 관리한다. 애플리케이션 관리자 컨테이너는, 도 3에 도시된 바와 같이, 애플리케이션 관리 API(Application Managing API), 애플리케이션 생애주기 관리자(Application Lifecycle Manager), 오픈 데이터 관리자 (Opendata Manager), 데이터 버스 클라이언트(Databus Client) 및 가상화 유닛(Virtualization Unit)을 포함하여 구축된다. 애플리케이션 관리 API는 디바이스 플랫폼에 설치된 애플리케이션들을 관리하기 위한 외부 API이다. 이를 위해, 애플리케이션 관리 API는 애플리케이션 목록 조회, 애플리케이션 상세 정보 조회, 애플리케이션 상 태 조회, 애플리케이션 실행/중지를 수행한다. 애플리케이션 생애주기 관리자는 디바이스 플랫폼에 설치된 애플리케이션의 생애주기를 관리한다. 이를 위 해, 애플리케이션 생애주기 관리자는 애플리케이션 목록 조회, 애플리케이션 상세 정보 조회, 애플리케이 션 상태 조회, 애플리케이션 실행/중지를 수행한다. 오픈 데이터 관리자는 로컬 데이터 버스를 통해 동일 디바이스에 설치된 애플리케이션 간의 공유 데이터를 관리한다. 이를 위해, 오픈 데이터 관리자는 오픈데이터 목록 조회, 오픈데이터 쓰기/읽기, 오픈데이터 구 조 관리를 수행한다. 데이터 버스 클라이언트는 애플리케이션 간의 상호작용을 위한 데이터버스 호출 클라이언트 라이브러리이 다. 이를 위해, 로컬 오픈데이터 읽기/쓰기, 글로벌 오픈데이터 읽기/쓰기를 수행한다. 가상화 유닛은 애플리케이션 생애주기 관리를 위한 가상화 엔진 제어를 위한 라이브러리이다. 이를 위해, 가상화 유닛은 가상화 애플리케이션 이미지 목록 조회, 가상화 애플리케이션 이미지 실행 제어를 수행한다. 도 4는 클라우드 플랫폼의 아키텍쳐를 도시한 도면이다. 클라우드 플랫폼은, 도 4에 도시된 바와 같이, 애플리 케이션 등록 관리자 컨테이너(Application Registry Manager Container), 도커(Docker), OS 및 DB를 포함한다. 애플리케이션 등록 관리자 컨테이너는 애플리케이션을 등록하고, 등록된 애플리케이션 정보를 제공하며, 다른 디바이스에 설치된 애플리케이션 간 상호작용을 관리하는 컨테이너이다. 도커는 호스트 OS를 사용하여 컨테이너들을 생성하고 관리한다. DB에는 애플리케이션 데이터가 저장된다. 애플리케이션 등록 관리자 컨테이너는, 도 4에 도시된 바와 같이, 애플리케이션 등록 API(Application Register API), 애플리케이션 등록(Application Registry) 모듈, 오픈 데이터 관리자(Opendata Manager), 데이터 버스 클라이언트(Databus Client) 및 애플리케이션 이미지 등록 (AppImageRegistry) 모듈을 포함한다. 애플리케이션 등록 API는 클라우드 플랫폼의 애플리케이션 등록 모듈을 호출하기 위한 API이다. 구체 적으로, 애플리케이션 등록 API는 가상화 애플리케이션 목록 검색/조회, 가상화 애플리케이션 정보 조회 및 가상화 애플리케이션 등록/수정을 수행한다. 애플리케이션 등록 모듈은 클라우드 플랫폼의 애플리케이션을 등록하기 위한 모듈이다. 이를 위해, 애플리 케이션 등록 모듈은 가상화 애플리케이션 목록 검색/조회, 가상화 애플리케이션 정보 조회, 가상화 애플리 케이션 등록/수정을 수행한다. 오픈 데이터 관리자는 데이터 버스를 통해 디바이스에 설치된 애플리케이션 간의 공유 데이터를 관리한다. 이를 위해, 오픈 데이터 관리자는 오픈데이터 목록 조회, 오픈데이터 쓰기/읽기를 수행한다. 데이터 버스 클라이언트는 애플리케이션 간의 상호작용을 위한 데이터버스 호출 클라이언트 라이브러리이 다. 이를 위해, 데이터 버스 클라이언트는 로컬 오픈데이터 읽기/쓰기 및 글로벌 오픈데이터 읽기/쓰기를 수행한다. 애플리케이션 이미지 등록 모듈은 가상화 애플리케이션 이미지가 등록된 저장소를 접근을 위한 모듈이다. 애플리케이션 이미지 등록 모듈은 가상화 애플리케이션 이미지가 등록된 저장소를 호출한다. 도 5는 디바이스의 하드웨어 구조를 도시한 도면이다. 도 5에 도시된 바와 같이, 디바이스는, 통신부, 프 로세서, 저장부 및 기능 블록을 포함한다. 통신부는 클라우드 플랫폼과 통신하기 위한 통신 수단이고, 프로세서는 전술한 디바이스 플랫폼의 기 능을 수행하며, 저장부는 프로세서가 필요로 하는 저장공간을 제공한다. 기능 블록는 디바이스 의 본연의 기능(예를 들어, 센싱, 액츄에이팅)을 수행하기 위한 블록이다. 도 6은 클라우드 시스템의 하드웨어 구조를 도시한 도면이다. 도 6에 도시된 바와 같이, 클라우드 시스템은, 통 신 인터페이스, 프로세서 및 DB를 포함한다. 통신 인터페이스는 디바이스와 통신하기 위한 통신 수단이고, 프로세서는 전술한 클라우드 플랫폼의 기능을 수행하며, DB에는 애플리케이션 데이터가 저장된다. 한편, 본 실시예에 따른 장치와 방법의 기능을 수행하게 하는 컴퓨터 프로그램을 수록한 컴퓨터로 읽을 수 있는 기록매체에도 본 발명의 기술적 사상이 적용될 수 있음은 물론이다. 또한, 본 발명의 다양한 실시예에 따른 기 술적 사상은 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터로 읽을 수 있는 코드 형태로 구현될 수도 있다. 컴퓨터로 읽을 수 있는 기록매체는 컴퓨터에 의해 읽을 수 있고 데이터를 저장할 수 있는 어떤 데이터 저장 장 치이더라도 가능하다. 예를 들어, 컴퓨터로 읽을 수 있는 기록매체는 ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광디스크, 하드 디스크 드라이브, 등이 될 수 있음은 물론이다. 또한, 컴퓨터로 읽을 수 있는 기록매체 에 저장된 컴퓨터로 읽을 수 있는 코드 또는 프로그램은 컴퓨터간에 연결된 네트워크를 통해 전송될 수도 있다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2017-0166941", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2017-0166941", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 단일 디바이스에 설치된 애플리케이션 간의 상호 연동 구조를 나타낸 도면, 도 2는 다른 디바이스에 설치된 애플리케이션 간의 상호 연동 구조를 나타낸 도면, 도 3은 디바이스 플랫폼의 아키텍쳐를 도시한 도면, 도 4는 클라우드 플랫폼의 아키텍쳐를 도시한 도면, 도 5는 디바이스의 하드웨어 구조를 도시한 도면, 그리고, 도 6은 클라우드 시스템의 하드웨어 구조를 도시한 도면이다."}
