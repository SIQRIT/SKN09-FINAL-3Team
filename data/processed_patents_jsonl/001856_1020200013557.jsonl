{"patent_id": "10-2020-0013557", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0099777", "출원번호": "10-2020-0013557", "발명의 명칭": "전자 장치 및 데이터 처리 방법", "출원인": "삼성전자주식회사", "발명자": "서재홍"}}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "데이터 처리 방법에 있어서, 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드(codeword)로 선택하는 단계;상기 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성하는 단계; 및 상기 헬퍼 행렬을 출력하는 단계;를 포함하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 기설정된 크기를 갖는 벡터는, 상기 복수의 원소 중 기설정된 개수의 원소들은 0이 아닌 동일한 값을 갖는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 벡터는 512개의 원소로 구성되며, 상기 512개의 원소 중 16개 원소는 ±1/4 값을 갖는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 헬퍼 행렬은, 구(sphere) 표면의 값을 상기 구 표면 상에서 상대적으로 이동시키는 벡터인 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 헬퍼 행렬을 생성하는 단계는,상기 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬을 선택하는 단계;상기 실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하는 단계; 및상기 실수 데이터, 상기 선택된 랜덤 직교 행렬 및 상기 산출된 회전 행렬을 이용하여 상기 헬퍼 행렬을 산출하는 단계;를 포함하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 회전 행렬을 산출하는 단계는, 상기 선택된 랜덤 직교 행렬에 상기 실수 데이터를 행렬 곱하여 제1 중간 데이터를 연산하는 단계;상기 코드 워드와 상기 제1 중간 데이터에 대한 단위 직교화 처리를 수행하여 제2 중간 데이터를 생성하는단계;상기 코드 워드와 상기 제1 중간 데이터 사이의 회전 각도를 산출하는 단계;상기 산출된 회전 각도, 제1 중간 데이터, 제2 중간 데이터를 이용하여 회전 행렬을 생성하는 단계;를 포함하는공개특허 10-2021-0099777-2-데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 실수 데이터는, 얼굴 정보 데이터, 음성 정보 데이터 또는 위치 정보 데이터 중 적어도 하나인 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "데이터 처리 방법에 있어서, 실수 데이터를 입력받는 단계; 및구(sphere) 표면의 값을 상기 구 표면 상에서 상대적으로 이동시키는 헬퍼 행렬(hepler matrix)에 상기 입력된실수 데이터를 반영하여, 복수의 원소로 구성된 벡터를 산출하는 단계;를 포함하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 산출된 벡터와 상기 헬퍼 행렬에 대응되는 코드 워드의 동일성을 판단하는 단계;를 더 포함하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서, 상기 동일성을 판단하는 단계는, 상기 산출된 벡터와 상기 헬퍼 행렬에 대응되는 코드 워드의 내적 합을 산출하고, 상기 산출된 내적 합의 크기가 기설정된 크기보다 작은지 여부로 동일성을 판단하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8항에 있어서, 상기 산출된 벡터에 대한 에러 보정을 수행하는 단계;를 더 포함하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 에러 보정을 수행하는 단계는, 상기 벡터를 구성하는 복수의 원소 각각의 원소 값을 기설정된 값 또는 0 값으로 근사 처리하는 데이터 처리 방법."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "전자 장치에 있어서, 적어도 하나의 인스트럭션(instruction)을 저장하는 메모리; 및상기 적어도 하나의 인스트럭션을 실행하는 프로세서;를 포함하고,상기 프로세서는, 상기 적어도 하나의 인스트럭션을 실행함으로써,복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드(codeword)로 선택하고, 상기 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성하는 전자 장치. 공개특허 10-2021-0099777-3-청구항 14 제13항에 있어서, 상기 프로세서는, 상기 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬을 선택하고, 상기 실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하고, 상기 실수 데이터, 상기 선택된 랜덤 직교 행렬 및 상기 산출된 회전 행렬을 이용하여 상기 헬퍼 행렬을 생성하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 프로세서는, 상기 선택된 랜덤 직교 행렬에 상기 실수 데이터를 행렬 곱하여 제1 중간 데이터를 연산하고, 상기 코드 워드와 상기 제1 중간 데이터에 대한 단위 직교화 처리를 수행하여 제2 중간 데이터를 생성하고, 상기 코드 워드와 상기 제1 중간 데이터 사이의 회전 각도를 산출하고, 상기 산출된 회전 각도, 제1 중간 데이터, 제2 중간 데이터를 이용하여 상기 회전 행렬을 산출하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제13항에 있어서, 사용자 신체 정보로부터 실수 데이터를 생성하는 센서;를 더 포함하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서, 상기 프로세서는, 신규 실수 데이터가 입력되면, 상기 헬퍼 행렬(hepler matrix)에 상기 신규 실수 데이터를 반영하여, 복수의 원소로 구성된 벡터를 산출하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서, 상기 프로세서는, 상기 산출된 벡터와 상기 코드 워드의 동일성을 판단하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서, 상기 프로세서는, 상기 산출된 벡터와 상기 코드 워드의 내적 합을 산출하고, 상기 산출된 내적 합의 크기가 기설정된 크기보다작은지 여부로 동일성을 판단하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서, 상기 프로세서는, 공개특허 10-2021-0099777-4-상기 산출된 벡터에 대한 에러 보정을 수행하는 전자 장치."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "데이터 처리 방법이 개시된다. 본 데이터 처리 방법은 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하 나를 코드 워드(codeword)로 선택하는 단계, 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성하는 단계, 및 헬퍼 행렬을 출력하는 단계를 포함한다."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 데이터 처리 방법에 관한 것으로, 보다 상세하게는 실수 데이터에 대한 에러 정정을 수 행할 수 있는 전자 장치 및 데이터 처리 방법에 대한 것이다."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근, 사용자 정보 또는 기기 정보에 대한 보안의 필요성이 대두되고 있다. 이러한 필요성에 따라 생체 데이터 를 활용한 인증 기술에 대한 관심이 커지고 있다. 생체 데이터의 예로는 지문, 홍채, 얼굴, 목소리 등이 있으며, 그 밖에 생체와 관련된 다양한 정보가 사용될 수 있다. 최근에는 생체 정보에서 직접 암호화 키를 뽑아 사용하는 퍼지 추출 기법이 이용되어 있으나, 기존의 퍼지 추출 기법은 바이너리 데이터에 대해서만 적용 가능하였을 뿐, 실수 데이터에 대해서는 적용하기 어려움이 있었다."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 필요성에 따라 안출된 것으로, 실수 데이터에 대한 에러 정정을 수행할 수 있는 전자 장치 및 데이터 처리 방법을 제공하는 데 있다."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 목적을 달성하기 위한 본 개시의 일 실시예에 따른 데이터 처리 방법은 복수의 원소로 구성되며 기설정 된 크기를 갖는 벡터 중 하나를 코드 워드(codeword)로 선택하는 단계, 상기 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성하는 단계, 및 상기 헬퍼 행렬을 출력하는 단계를 포함한다. 이 경우, 상기 기설정된 크기를 갖는 벡터는 상기 복수의 원소 중 기설정된 개수의 원소들은 0이 아닌 동일한 값을 가질 수 있다. 이 경우, 상기 벡터는 512개의 원소로 구성되며, 상기 512개의 원소 중 16개 원소는 ±1/4 값을 가질 수 있다. 한편, 상기 헬퍼 행렬은 구(sphere) 표면의 값을 상기 구 표면 상에서 상대적으로 이동시키는 벡터일 수 있다. 한편, 상기 헬퍼 행렬을 생성하는 단계는 상기 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬 을 선택하는 단계, 상기 실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하는 단계, 및 상기 실수 데이터, 상기 선택된 랜덤 직교 행렬 및 상기 산출된 회전 행렬을 이용하여 상기 헬퍼 행렬을 산출하는 단계를 포함할 수 있다. 이 경우, 상기 회전 행렬을 산출하는 단계는 상기 선택된 랜덤 직교 행렬에 상기 실수 데이터를 행렬 곱하여 제 1 중간 데이터를 연산하는 단계, 상기 코드 워드와 상기 제1 중간 데이터에 대한 단위 직교화 처리를 수행하여 제2 중간 데이터를 생성하는 단계, 상기 코드 워드와 상기 제1 중간 데이터 사이의 회전 각도를 산출하는 단계, 상기 산출된 회전 각도, 제1 중간 데이터, 제2 중간 데이터를 이용하여 회전 행렬을 생성하는 단계를 포함할 수 있다. 한편, 상기 실수 데이터는 얼굴 정보 데이터, 음성 정보 데이터 또는 위치 정보 데이터 중 적어도 하나일 수 있 다. 한편, 본 개시의 다른 실시 예에 따른 데이터 처리 방법은 실수 데이터를 입력받는 단계, 및 구(sphere) 표면의 값을 상기 구 표면 상에서 상대적으로 이동시키는 헬퍼 행렬(hepler matrix)에 상기 입력된 실수 데이터를 반영 하여, 복수의 원소로 구성된 벡터를 산출하는 단계를 포함할 수 있다. 이 경우, 본 데이터 처리 방법은 상기 산출된 벡터와 상기 헬퍼 행렬에 대응되는 코드 워드의 동일성을 판단하 는 단계를 더 포함할 수 있다. 이 경우, 상기 동일성을 판단하는 단계는 상기 산출된 벡터와 상기 헬퍼 행렬에 대응되는 코드 워드의 내적 합 을 산출하고, 상기 산출된 내적 합의 크기가 기설정된 크기보다 작은지 여부로 동일성을 판단할 수 있다. 한편, 본 데이터 처리 방법은 상기 산출된 벡터에 대한 에러 보정을 수행하는 단계를 더 포함할 수 있다. 이 경우, 상기 에러 보정을 수행하는 단계는 상기 벡터를 구성하는 복수의 원소 각각의 원소 값을 기설정된 값 또는 0 값으로 근사 처리할 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 적어도 하나의 인스트럭션(instruction)을 저장하는 메모리, 및 상기 적어도 하나의 인스트럭션을 실행하는 프로세서를 포함하고, 상기 프로세서는, 상기 적어도 하나의 인 스트럭션을 실행함으로써, 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드(codeword) 로 선택하고, 상기 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)를 생성한다. 이 경우, 상기 프로세서는 상기 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬을 선택하고, 상기 실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하고, 상기 실수 데이터, 상기 선택된 랜덤 직교 행 렬 및 상기 산출된 회전 행렬을 이용하여 상기 헬퍼 행렬을 생성할 수 있다. 이 경우, 상기 프로세서는 상기 선택된 랜덤 직교 행렬에 상기 실수 데이터를 행렬 곱하여 제1 중간 데이터를 연산하고, 상기 코드 워드와 상기 제1 중간 데이터에 대한 단위 직교화 처리를 수행하여 제2 중간 데이터를 생 성하고, 상기 코드 워드와 상기 제1 중간 데이터 사이의 회전 각도를 산출하고, 상기 산출된 회전 각도, 제1 중 간 데이터, 제2 중간 데이터를 이용하여 상기 회전 행렬을 산출할 수 있다. 한편, 본 전자 장치는 사용자 신체 정보로부터 실수 데이터를 생성하는 센서를 더 포함할 수 있다. 한편, 상기 프로세서는 신규 실수 데이터가 입력되면, 상기 헬퍼 행렬(hepler matrix)에 상기 신규 실수 데이터 를 반영하여, 복수의 원소로 구성된 벡터를 산출할 수 있다. 이 경우, 상기 프로세서는 상기 산출된 벡터와 상기 코드 워드의 동일성을 판단할 수 있다. 이 경우, 상기 프로세서는 상기 산출된 벡터와 상기 코드 워드의 내적 합을 산출하고, 상기 산출된 내적 합의 크기가 기설정된 크기보다 작은지 여부로 동일성을 판단할 수 있다. 한편, 상기 프로세서는 상기 산출된 벡터에 대한 에러 보정을 수행할 수 있다."}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 첨부 도면을 참조하여 본 개시를 상세히 설명한다. 본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 본 개시에 대해 구체적으로 설명하기로 한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시의 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는 바, 특정 실시 예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정 하려는 것이 아니며, 개시된 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 실시 예들을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 요지를 흐릴 수 있다 고 판단되는 경우 그 상세한 설명을 생략한다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또 는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. A 및/또는 B 중 적어도 하나라는 표현은 \"A\" 또는 \"B\" 또는 \"A 및 B\" 중 어느 하나를 나타내는 것으로 이해되어 야 한다. 본 명세서에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들 을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 어떤 구성요소가 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 본 개시에서 \"모듈\" 혹은 \"부\"는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되 거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\" 혹은 복수의 \"부\"는 특정한 하드 웨어로 구현될 필요가 있는 \"모듈\" 혹은 \"부\"를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하나의 프 로세서(미도시)로 구현될 수 있다. 본 명세서에서, 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장 치를 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 아래에서는 첨부한 도면을 참고하여 본 개시의 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식 을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 개시는 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시 예에 한정되지 않는다. 그리고 도면에서 본 개시를 명확하게 설명하기 위해 서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 이하 첨부된 도면들을 참조하여 본 개시의 일 실시 예를 보다 상세하게 설명한다. 도 1은 본 개시의 일 실시 예에 따른 전자 시스템을 나타내는 도면이다. 도 1을 참조하면, 전자 시스템은 전자 장치 및 서버 장치를 포함할 수 있다. 이러한 전자 시스 템은 사용자 생체 정보를 이용하여 사용자 인증 동작을 수행한다는 점에서, 사용자 인증 시스템이라 지칭 될 수도 있다. 전자 장치는 실수 데이터를 생성한다. 예를 들어, 전자 장치는 사용자의 신체로부터 생체 정보를 추 출할 수 있는 센서를 포함하며, 해당 센서를 이용하여 실수 형태를 갖는 생체 정보(또는 실수 데이터)를 생성할 수 있다. 이러한 실수 데이터는, 사용자의 홍채, 망막, 음성 정보 등의 생체 정보일 수 있으며, 전자 장치의 위치를 나타내는 정보(예를 들어, 신호 강도, GPS 정보 등)와 같은 실수 형태의 사용자 정보 또는 기기 정보일 수 있다. 그리고 전자 장치는 생성된 실수 데이터를 이용하여 키를 생성할 수 있다. 예를 들어, 전자 장치는 코드 워드, 헬퍼 행렬, 벡터를 생성할 수 있다. 여기서 코드 워드는 사용자 인증 등에 사용되는 키로, 비밀 키로 지칭될 수 있다. 이러한 코드 워드는 랜덤하게 생성될 수 있다. 구체적으로, 전자 장치는 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 선택할 수 있다. 예를 들어, 코드 워드는 512개의 원소 중 16개의 원소는 1/4 크기(즉, ±1/4 값)를 갖고 나머 지 원소는 0의 값을 가질 수 있다. 이와 같이 16개의 원소만 ±1/4 값을 갖는바, 생성되는 코드 워드의 크기는 1의 값을 가질 수 있다. 그리고 헬퍼 행렬은 구(sphere) 표면의 값을 구 표면 상에서 상대적으로 이동시키는 벡터이다. 이러한 헬퍼 행 렬은 실수 정보를 코드 워드(또는 벡터)로 변환하기 위한 것으로, 공개 키로 지칭될 수 있다. 이러한 헬퍼 행렬 은 하나의 이동 동작으로 구성될 수 있으며, 복수의 이동 동작으로도 구성될 수 있다. 헬퍼 행렬의 구현 예에 대해서는 도 6 또는 도 7을 참조하여 후술한다. 벡터는 헬퍼 행렬에 생성된 실수 데이터를 반영하여 생성된 것으로, 상술한 코드 워드에 대응된다는 점에서, 코 드 워드로 지칭될 수 있다. 다만, 설명을 용이하게 하기 위하여, 이하에서는 최초 키 생성 과정에서 생성된 벡 터를 코드 워드로 지칭하고, 디코딩 과정에서 생성되는 벡터는 디코딩 코드 워드 또는 벡터라 지칭한다. 그리고 전자 장치는 생성한 벡터에 대한 에러 정정 동작을 수행할 수 있다. 구체적으로, 전자 장치는 벡터를 구성하는 원소 각각의 원소 값을 기설정된 값 또는 0 값으로 근사 처리할 수 있다. 예를 들어, 코드 워 드가 512 원소 중 16개만 1/4 크기 값(즉, ±1/4 값)을 갖는 경우, 헬퍼 행렬과 실수 데이터에 의해서 생성된 벡터는 1의 크기를 가지며, 각 원소는 ±1/4 또는 0에 대한 근사값 예를 들어, + 0.25012, - 0.0034 등과 같은 값으로 구성될 수 있다. 이러한 경우, 전자 장치는 0.25에 근사한 값을 갖는 원소에 대해서는 1/4 값으로 근사하고, -0.25에 근사 한 값을 갖는 원소에 대해서는 -1/4 값으로 근사하고, 0에 근사한 값을 갖는 원소에 대해서는 0 값으로 근사하 여 에러 정정 동작을 수행할 수 있다. 이와 같은 에러 정정 동작을 수행하면, 해당 벡터는 코드 워드와 동일하 게 512개 원소 중 16개는 ±1/4 값을 갖게 되고, 나머지는 0의 값을 가질 수 있다. 한편, 전자 장치는 예를 들어, 생체 정보 스캐너, 스마트폰, 태블릿 PC, 이동 전화기, 영상 전화기, 카메 라, IR 센서 장치, 마이크 장치, 데스크탑 PC, 랩탑 PC, 넷북 컴퓨터, 워크스테이션, PDA, PMP(portable multimedia player), MP3 플레이어, 의료기기, 또는 웨어러블 장치 등으로 구현될 수 있으며, 이에 한정되는 것 은 아니다. 서버 장치는 전자 장치로부터 수신된 코드 워드에 기초하여 사용자 인증을 수행할 수 있다. 구체적으 로, 서버 장치는 기존에 데이터 베이스에 저장된 정보와 전자 장치로부터 수신된 암호화된 생체 정보 를 비교하여 사용자 인증을 수행할 수 있다. 예를 들어, 서버 장치는 사용자 A에 대한 코드 워드(C) 값을 저장할 수 있으며, 전자 장치로부터 코 드 워드가 수신되면 수신된 코드 워드와 기저장된 코드 워드를 비교하여 사용자 인증을 수행할 수 있다. 한편, 전자 장치에서 생성한 코드 워드에 대한 에러 정정을 수행하지 않은 경우, 서버 장치는 기저장 된 코드 워드와 수신한 코드 워드 간의 내적 합을 산출하고, 산출된 내적 합이 기설정된 크기보다 작은지 여부 로 동일성을 판단할 수 있다. 한편, 전자 장치가 생성한 코드 워드에 대한 에러 정정을 수행하지 않은 경우, 서버 장치는 기저장된 코드 워드와 수신한 코드 워드 간의 일치 여부(즉, 동일성 여부)로 사용자 인증을 수행할 수 있다. 이상과 같이 본 실시 예에 따른 전자 시스템은 실수 데이터에 대한 에러 정정을 수행함에 있어서 바이너 리 데이터로 변환할 필요가 없는바, 보다 정확한 에러 정정 또는 사용자 인증이 가능하다. 또한, 본 개시에 따 른 전자 시스템은 실수 데이터를 바이너리 데이터로 변화할 필요가 없는바 에러 정정 또는 사용자 인증 처리를 보다 빠르게 수행할 수 있다. 한편, 도 1을 도시하고 설명함에 있어서, 전자 장치가 코드 워드를 생성하고, 서버 장치가 이를 수신 하여 이용하는 것으로 도시하고 설명하였지만, 구현시에는 서버 장치가 코드 워드 또는 헬퍼 행렬을 생성 하고, 전자 장치가 서버 장치로부터 상술한 코드 워드 또는 헬퍼 행렬을 수신하여 이용하는 형태로도 구현될 수 있다. 한편, 도 1을 도시하고 설명함에 있어서, 실수 데이터를 획득하여 코드 워드를 생성하는 장치와 생성된 코드 워 드를 이용하여 사용자 인증을 수행하는 장치가 상이한 것으로 도시하고 설명하였지만, 구현시에는 상술한 동작 은 하나의 장치에서 수행될 수 있다. 예를 들어, 스마트폰과 같은 전자 장치에서는 사용자로부터 생체 정보를직접 추출하고, 추출된 정보에 기초하여 코드 워드를 생성하고, 생성된 코드 워드와 기생성된 코드 워드를 비교 하여 사용자 인증을 수행하는 동작이 한 장치에서 수행될 수 있다. 또한, 전자 장치가 생체 정보도 추출하고, 추출된 정보로 코드 워드를 생성하는 것으로 설명하였지만, 생 체 정보의 추출과 이를 이용하여 코드 워드를 생성하는 동작은 분리된 다른 장치에서 수행될 수도 있다. 또한, 구현시에는 3개의 이상의 장치가 유기적으로 동작하여 사용자 인증을 수행할 수 있다. 예를 들어, 사용자 인증에 필요한 코드 워드는 제1 서버에서 저장하고, 사용자는 제2 서버에서의 서비스가 필요한 경우, 사용자 단 말장치에서 생성한 코드 워드가 제1 서버에 제공할 수 있다. 코드 워드가 제공된 제1 서버는 사용자 인증을 수 행하고, 그 결과를 제2 서버에 제공함으로써, 사용자는 제2 서버에서의 서비스를 이용할 수도 있다. 도 2는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 도시한 블럭도이다. 도 2를 참조하면, 전자 장치는 메모리 및 프로세서를 포함할 수 있다. 메모리에는 전자 장치에 관한 적어도 하나의 인스트럭션(instruction)이 저장될 수 있다. 예를 들어, 메모리에는 본 개시의 다양한 실시 예에 따라 전자 장치가 동작하기 위한 각종 프로그램(또는 소프트 웨어)이 저장될 수 있다. 메모리는 헬퍼 행렬을 저장할 수 있다. 그리고 메모리는 헬퍼 행렬을 이용하여 생성한 벡터를 저장할 수 있다. 그리고 메모리는 헬퍼 행렬을 만들기 위하여 필요한 실수 데이터를 저장할 수 있다. 한편, 메모리는 프로세서와 물리적으로 구분되는 메모리로 구현될 수 있다. 이 경우, 메모리는 데이터 저장 용도에 따라 전자 장치에 임베디드된 메모리 형태로 구현되거나, 전자 장치에 탈부착할 수 있는 메모리 형태로 구현될 수도 있다. 예를 들어, 메모리는 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비휘발성 메모리(non-volatile Memory)(예: OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash 등), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive(SSD)), 메모리 카드(예를 들어, CF(compact flash), SD(secure digital), Micro-SD(micro secure digital), Mini-SD(mini secure digital), xD(extreme digital), MMC(multi-media card) 등), USB 포트에 연결 가능한 외부 메모리(예를 들어, USB 메모리) 등과 같은 형태로 구현될 수 있다. 또한, 메모리는 프로세서에 포함된 롬(ROM)(예를 들어, EEPROM(electrically erasable programmable read-only memory)), 램(RAM) 등의 내부 메모리로 구현될 수도 있다. 프로세서는 전자 장치의 전반적인 동작을 제어한다. 예를 들어, 프로세서는 메모리에 저장 된 적어도 하나의 인스트럭션을 실행함으로써 전자 장치의 동작을 전반적으로 제어할 수 있다. 이러한 프로세서는 CPU(central processing unit), MCU(Micro Controller Unit), MPU(micro processing unit), 컨트롤러(controller), SoC(System on Chip), LSI(large scale integration), ASIC(application- specific integrated circuit), FPGA(Field Programmable gate array), 어플리케이션 프로세서(application processor(AP))과 같은 단일 장치로 구성될 수 있으며, CPU, GPU(Graphics Processing Unit) 등의 복수의 장치 의 조합으로 구성될 수도 있다. 프로세서는 키 생성 동작을 수행할 수 있다. 여기서 키 생성 동작은 코드 워드와 헬퍼 행렬을 생성하는 동 작일 수 있다. 예를 들어, 프로세서는 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드(codeword)로 선택할 수 있다. 코드 워드가 선택되면, 프로세서는 메모리에 코드 워드를 저장하 거나, 서버 장치에 코드 워드를 전송할 수 있다. 한편, 구현시에 코드 워드는 외부 장치(또는 서버 장치)가 선택(또는 생성)하고, 전자 장치는 외부 장치가 선택한 코드 워드를 수신하여 이용할 수도 있다. 그리고 프로세서는 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성할 수 있 다. 예를 들어, 프로세서는 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬을 선택하고,실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하고, 실수 데이터, 선택된 랜덤 직교 행렬 및 산출된 회 전 행렬을 이용하여 헬퍼 행렬을 생성할 수 있다. 헬퍼 행렬 생성하는 구체적인 동작은 도 6 및 7을 참조하여 후술한다. 그리고 사용자 인증이 필요한 경우, 프로세서는 입력된 실수 데이터에 기생성된 헬퍼 행렬을 이용하여 벡 터(즉, 디코딩 코드 워드)를 산출할 수 있다. 예를 들어, 프로세서는 신규 실수 데이터가 입력되면, 헬퍼 행렬(hepler matrix)에 신규 실수 데이터를 행렬 곱하여 복수의 원소로 구성된 벡터를 산출할 수 있다. 그리고 전자 장치 자체적으로 사용자 인증을 수행하는 경우, 프로세서는 기생성된 코드 워드와 앞선 과정에서 산출된 벡터를 비교하여 사용자 인증을 수행할 수 있다. 예를 들어, 프로세서는 기생성된 코드 워드와 산출된 벡터의 내적 합을 산출하고, 산출된 내적 합의 크기가 기설정된 크기보다 작은 경우, 코드 워드 와 벡터가 동일성을 갖는 것으로 판단할 수 있다. 또는 프로세서는 산출된 벡터에 대한 에러 정정을 수행하고, 에러 정정된 벡터(즉, 디코딩 코드 워드)와 기저장된 코드 워드를 비교하여 사용자 인증을 수행할 수 있다. 이상과 같이 본 실시 예에 따른 전자 장치는 실수 데이터에 대한 에러 정정을 수행함에 있어서 바이너리 데이터로 변환할 필요가 없는바, 보다 정확한 에러 정정 또는 사용자 인증이 가능하다. 또한, 본 개시에 따른 전자 장치는 바이너리 데이터로 변화할 필요가 없는바 에러 정정 또는 사용자 인증 처리를 더욱 빠르게 수 행할 수 있다. 도 3은 본 개시의 전자 장치의 세부 구성을 설명하기 위한 블럭도이다. 도 3을 참조하면, 전자 장치는 메모리, 프로세서, 통신 인터페이스, 사용자 입력부 및 센서를 포함할 수 있다. 메모리 및 프로세서의 구성에 대해서는 도 2에서 설명하였는바 중복 설명은 생략한다. 통신 인터페이스는 회로(circuitry)를 포함하며, 외부 장치와 정보를 송수신할 수 있다. 이러한 통신 인터 페이스는 와이파이 모듈(미도시), 블루투스 모듈(미도시), LAN(Local Area Network) 모듈, 무선 통신 모듈 (미도시) 등을 포함할 수 있다. 여기서, 각 통신 모듈은 적어도 하나의 하드웨어 칩 형태로 구현될 수 있다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), 이더넷(Ethernet), USB(Universal Serial Bus), MIPI CSI(Mobile Industry Processor Interface Camera Serial Interface), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation) 등과 같은 다양한 무선 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 다만, 이는 일 실시 예에 불과하며 통신 인터페이스는 다양한 통신 모듈 중 적어도 하나의 통신 모듈을 이용할 수 있다. 프로세서는 메인 CPU 및 GPU를 포함할 수 있다. 메인 CPU는 메모리에 액세스하여, 메모리에 저장된 O/S를 이용하여 부팅을 수행할 수 있다. 그 리고 메모리에 저장된 각종 프로그램, 콘텐츠 데이터 등을 이용하여 다양한 동작을 수행한다. 특히, 일 실 시 예에 따르면, 메인 CPU가 ROM에 저장된 명령어에 따라 메모리에 프로그램을 RAM에 복사하고, RAM 에 액세스하여 해당 프로그램을 실행시킬 수 있다. GPU는 그래픽처리를 위한 고성능의 처리장치에 해당할 수 있으며, 메모리를 빠르게 처리하고 바꾸어 화면 으로 출력할 프레임 버퍼 안의 영상 생성을 가속하도록 설계된, 또는 실수 연산에 전문화된 전자 회로일 수 있 다. 또한, GPU는 VPU(Visual Processing Unit)를 의미할 수 있다. 사용자 입력부는 다양한 사용자 명령 및 정보를 입력받기 위한 구성이다. 프로세서는 사용자 입력부 를 통해 입력된 사용자 명령에 대응되는 기능을 실행하거나, 사용자 입력부를 통해 입력된 정보를 메 모리에 저장할 수도 있다. 센서는 실수 데이터를 생성할 수 있다. 이러한 센서는 얼굴을 촬영하여 카메라이거나, 사용자 음성을 독취하는 마이크(미도시)일 수 있다. 한편, 구현시에는 센서에서 생성한 데이터를 프로세서가 추출/ 편집 등의 동작을 수행하여 실수 데이터를 생성할 수도 있다. 예를 들어, 프로세서는 센서로부터 촬영된 이미지에서, 사용자 얼굴을 추출하고, 추출된 얼굴에서 얼굴 인식에 필요한 실수 데이터만을 추출할 수 있 다. 한편, 도 3을 도시하고 설명함에 있어서, 기본적인 5개의 구성을 도시하고 설명하였지만, 구현시에 전자 장치 는 상술한 구성 이외에 다른 구성이 더 포함될 수 있으며, 상술한 구성 중 일부는 생략된 형태로 구현될 수도 있다. 또한, 도시된 예에서 프로세서가 메인 CPU와 GPU만을 포함하는 것으로 설명하였지만, 구현시엔 프로세서는 상술한 키 생성 동작 또는 벡터 생성 동작을 수행하는 연산 회로를 더 포함할 수도 있다. 도 4는 본 개시의 일 실시 예에 따른 서버 장치의 구성을 도시한 블럭도이다. 서버 장치는 통신 인터페이스, 프로세서 및 메모리를 포함할 수 있다. 통신 인터페이스는 서버 장치와 정보를 송수신할 수 있는 구성이다. 구체적으로, 통신 인터페이스 는 전자 장치로부터 생체 정보 또는 코드 워드 등을 수신할 수 있다. 이후, 통신 인터페이스는 인증 결과를 전자 장치에 전송할 수 있다. 메모리에는 서버 장치에 관한 적어도 하나의 인스트럭션(instruction)이 저장될 수 있다. 예를 들어, 메모리에는 본 개시의 다양한 실시 예에 따라 서버 장치가 동작하기 위한 각종 프로그램(또는 소프트 웨어)이 저장될 수 있다. 메모리는 헬퍼 행렬을 저장할 수 있다. 저장된 헬퍼 행렬은 서버 장치에서 생성된 것일 수 있으며, 통신 인터페이스를 통하여 전자 장치로부터 수신한 것일 수도 있다. 그리고 메모리는 헬퍼 행렬을 이용하여 생성한 벡터를 저장할 수 있다. 그리고 메모리는 헬퍼 행렬을 만들기 위하여 필요한 실수 데이터를 저장할 수 있다. 프로세서는 서버 장치 내의 각 구성을 제어할 수 있다. 구체적으로, 프로세서는 전자 장치(10 0)로부터 생체 정보가 수신되면, 기저장된 헬퍼 행렬을 이용하여 벡터를 산출할 수 있다. 한편, 구현시에는 전 자 장치로부터 산출된 벡터가 수신될 수도 있다. 프로세서는 기저장된 코드 워드와 산출된 벡터를 이용하여 사용자 인증을 수행할 수 있다. 예를 들어, 프 로세서는 기저장된 코드 워드와 산출된 벡터가 동일하거나, 코드 워드와 산출된 벡터의 내적 합이 기설정 된 값 미만인지 여부로 동일한지를 판단할 수 있다. 그리고 프로세서는 사용자 인증 결과가 전송되도록 통신 인터페이스를 제어할 수 있다. 이상과 같이 본 실시 예에 따른 서버 장치는 실수 데이터에 대한 에러 정정을 수행함에 있어서 바이너리 데이터로 변환할 필요가 없는바, 보다 정확한 에러 정정 또는 사용자 인증이 가능하다. 또한, 본 개시에 따른 서버 장치는 바이너리 데이터로 변화할 필요가 없는바 에러 정정 또는 사용자 인증 처리를 보다 빠르게 수 행할 수 있다. 한편, 도 4를 도시하고 설명함에 있어서, 기본적인 3개의 구성만을 도시하고 설명하였지만, 구현시에 서버 장치 는 상술한 구성 이외에 해당 서버 장치 고유의 기능을 수행하기 위한 구성들이 추가로 구비될 수 있 다. 도 5는 본 개시의 일 실시 예에 따른 퍼지 추출(fuzzy Extractor)을 설명하기 위한 개념도이다. 생체 정보를 이용하여 암호화 키를 생성하는 방법에는 다양하며, 여러 방법 중 퍼지 추출 방식은 생체 정보 자 체에서 암호화 키를 뽑아내는 방식이다. 이러한 퍼지 추출 방식은 생체 정보(x)에서 헬퍼 행렬(P)을 만드는데, 만들어진 헬퍼 행렬은 향후 기등록 생체 정보와 유사한 생체 정보가 제시되었을 때, 코드 워드를 복원할 수 있도록 한다. 예를 들어, 도 5에 도시된 바와 같이 최초 등록 시에 제1 실수 데이터를 이용하여 헬퍼 행렬(P)을 생성한 경우, 사용자 인증이 필요한 시점에 최초 등록시와 동일하지 않지만 유사한 제2 실수 데이터가 제시되면, 제2 실수 데이터와 헬퍼 행렬(P)을 이용하여 코드 워드(sk)를 생성할 수 있다. 한편, 지문/홍채와 같은 생체 데이터의 경우 이진 형태의 데이터 구조를 갖기 때문에 해밍 거리 메트릭(Hamming distance metric)과 같은 기술을 이용하여 에러 정정을 수행할 수 있다. 그러나 기존의 해밍 거리 메트릭은 바이너리 데이터에만 적용할 수 있다는 점에서, 얼굴/음성과 같은 실수 형태 의 생체 데이터에는 해밍 거리 메트릭 기술을 바로 적용할 수 없었다. 이러한 한계점을 극복하기 위하여, 실수 형태의 데이터를 바이너리 데이터로 변환하여 이용하는 방법이 있지만, 이러한 변환 과정을 이용하면 정확도가 떨어지고, 속도도 느려지는 문제점이 있었다. 이러한 문제점 해결을 위하여, 본 개시에서는 실수 데이터에 적용 가능한 에러 정정 기술을 새롭게 제안하며, 이하에서는 새로운 에러 정정 기술에 대해서 자세히 설명한다. 본 개시에 따른 실수 데이터에 대한 에러 정정은 아래의 수학식 1을 만족하는 n 차원의 구(sphere)에서 동작할 수 있다. [수학식 1] Sn = {x =(x1, x2, …, xn) l x12+x22+…+xn2=1 } 한편, 이상에서는 n 차원의 구를 Sn로 정의하였지만, 구현시에 n차원의 구를 Sn-1로 정의할 수도 있다. 그리고 이러한 구에서의 두 벡터의 거리는 코사인 함수로 계산될 수 있으며, 구 좌표를 이용하여 두 벡터에 대 한 연산을 수행할 수 있다. 그리고 직교 좌표를 이용하여 가장 가까운 벡터를 찾아 디코딩을 수행할 수 있다. 이러한 경우, 코드 워드는 수학식 2와 같이 정의될 수 있다. [수학식 2]"}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, C는 코드 워드이고, Ci는 이다. 예를 들어, 4차원의 S4에서 C1은 일 수 있다. 그리고 4차원의 S4 에서 C2은 일 수 있다. 이하에서는 설명을 용이하게 하기 위하여, 코드 워드는 S512에서 C16을 갖는 것으로 가정하여 설명한다. 그러나 구현시에 코드 워드의 원소 수, 기설정된 값을 갖는 원소의 개수는 다르게 이용될 수 있다. 그리고 CI에서 두 벡터의 최소 거리는 이고, Ci와 Cj에서의 두 벡터의 최소 거리는 (i<j인 경우)이 다. 따라서, Ci의 각 원소에 대해서 가장 가까운 코드 워드를 찾는 과정을 통하여 디코딩을 수행할 수 있다. 이하에서는 이러한 에러 정정 기술을 이용한 퍼지 추출 동작에 대해서 도 6 및 도 7을 참조하여 설명한다. 도 6은 본 개시의 일 실시 예에 다른 퍼지 추출 동작을 설명하기 위한 도면이다. 도 6을 참조하면, 상술한 ECC 기술을 퍼지 추출 동작에 적용하기 위하여, 먼저 ECC 조건을 만족할 수 있는 코드 워드(c)를 생성할 수 있다. 구체적으로, 복수의 원소(예를 들어, 512개) 중 일부 원소(예를 들어, 16개)가 기설 정된 값(예를 들어, ±1/4)을 갖고, 나머지 원소가 0의 값을 가짐으로써 기설정된 벡터 크기를 갖는 집합 중 하 나를 선택할 수 있다. 이러한 생성된 코드 워드는 해시 함수를 적용하여 출력될 수 있다. 그리고 입력된 실수 데이터를 해당 코드 워드(C)로 이동하도록 하는 헬퍼 행렬(p)을 산출할 수 있다. 이와 같은 구 환경에서 입력된 실수 데이터에 대해서 동일한 회전 처리를 수행하는 경우, 두 번째 실수 데이터 에 대한 값(C')은 첫번째 실수 데이터(W)와 두 번째 실수 데이터(W')의 차이 값이 코드 워드(C)에 더해 지는 것과 같다. 한편, 상술한 코드 워드는 복수의 원소 중 일부만 기설정된 값을 갖는바, 구의 모든 표면이 코드 워드로 이용 가능한 것이 아니어서 위치 가능한 좌표 존재하며, 두 번째 실수 데이터에 대한 벡터 값은 인접한 해당 좌표를 찾아 키 값으로 이용될 수 있다. 이상과 같이 헬퍼 행렬에 의하여 이동된 값은 생체 정보 그 차체는 아닌바, 공개 키로서 활용이 가능하다. 한편, 이상에서는 실수 데이터를 한 번만 이동하여 벡터를 산출하는 것으로 설명하였지만, 구현시에는 복수번 이동하여 벡터를 산출할 수 있다. 이하에서는 도 7을 참조하여 실수 데이터를 복수번 이동하는 동작에 대해서 설명한다. 도 7은 본 개시의 다른 실시 예에 다른 퍼지 추출 동작을 설명하기 위한 도면이다. 도 7을 참조하면, 먼저, 상술한 수학식 1을 만족하는 집합에서 랜덤 코드워드를 선택할 수 있다. 이후에, 를 만족하는 랜덤 직교 행렬을 선택할 수 있다. 여기서, 랜덤 직교 행렬은 실수 데이터 를 랜덤한 방향으로 이동시키기 위한 행렬이다. 그리고 실수 데이터를 회전 이동시키기 위한 회전 행렬을 산출할 수 있다. 구체적으로, 를 만족하는 실 수 데이터(z)가 입력되면, 선택된 랜덤 직교 행렬(Q)에 실수 데이터(z)를 행렬 곱하여 제1 중간 데이터(u = Q z)를 연산할 수 있다. 그리고 코드 워드(c)와 제1 중간 데이터(u)에 대한 단위 직교화 처리(예를 들어, Gram-Schmidt Process)를 수행 하여 제2 중간 데이터(v= c- uTcu)를 생성할 수 있다. 그리고 코드 워드(c)와 제1 중간 데이터(u) 사이의 회전 각도(θ)를 산출할 수 있다. 그리고 산출된 회전 각도(θ), 제1 중간 데이터(u), 제2 중간 데이터(v)를 이용하여 회전 행렬(R = I - uuT - vvT + [u v]Rθ[u v]T)를 산출할 수 있다. 그리고 최종적으로 산출된 회전 행렬과 랜덤 직교 행렬을 이용하여 헬퍼 행렬(H = RQ)을 생성할 수 있다. 도 8은 본 개시의 일 실시 예에 따른 생성 모듈 및 디코딩 모듈의 동작을 설명하기 위한 도면이다. 도 8을 참조하면, 키 생성 모듈과 재생 모듈이 개시된다. 이러한 키 생성 모듈과 재생 모듈 은 프로세서 내의 하드웨어 구성(예를 들어, ASIC 내의 연산 블럭)일 수 있으며, 소프트웨어 모듈일 수 있다. 키 생성 모듈은 코드 워드(key) 또는 헬퍼 행렬(p)을 생성할 수 있다. 구체적으로, 키 생성 모듈은 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드로 선택할 수 있다. 예를 들어, 코드 워드가 512 원소 중 16개의 원소만 기설정된 값을 갖고, 나머지 값은 0의 값을 갖는 경우, 512개 중 기설정된 값을 가질 16개의 원소를 랜덤하게 선택하여 코드 워드를 생성할 수 있다. 그리고 키 생성 모듈은 생성된 코드 워드에 실수 데이터(Wo)를 반영하여 헬퍼 행렬(P)을 생성할 수 있다. 이와 같은 헬퍼 행렬은 실수 데이터를 구 표면 상에서 한 번만 이동하는 형태일 수도 있으며, 복수 번 이동하는 형태로 구성될 수 있다. 예를 들어, 한 번만 이동하는 형태이었으면, 실수 데이터에 생성된 코드 워드를 행렬 곱하여 산출할 수 있다. 한편, 2번 이동하는 경우에는 실수 데이터를 랜덤한 방향으로 이동시키기 위한 랜덤 직교 행렬을 선택하고, 실 수 데이터를 회전 이동시키기 위한 회전 행렬을 산출하고, 실수 데이터, 선택된 랜덤 직교 행렬 및 산출된 회전 행렬을 이용하여 헬퍼 행렬을 생성할 수 있다. 이러한 키 생성 모듈은 상술한 동작을 수행하기 위한 인스트럭션으로 구현될 수 있다. 이 경우, 상술한 GPU를 이용하여 헬퍼 행렬(P)을 생성할 수 있다. 또한, 구현시에 키 생성 모듈은 상술한 연산 동작을 수행할 수 있는 하드웨어(예를 들어, ASIC 등)로 구현될 수도 있다. 재생 모듈은 실수 데이터(W1)가 입력되면 벡터를 생성할 수 있다. 구체적으로, 재생 모듈은 기생성된 헬퍼 행렬에 실수 데이터(w1)를 행렬 곱하여 벡터를 산출할 수 있다. 그리고 재생 모듈은 산출된 벡터 내 의 각 원소가 기설정된 값 또는 0의 값을 갖도록 하여, 헬퍼 행렬 생성시에 이용한 실수 데이터(wo)와 유사한 실수 데이터(W1)가 입력된 경우에 동일한 키(또는 벡터)를 생성할 수 있다. 이러한 재생 모듈은 노이즈를 갖는 실수 데이터가 입력되면, 코드 워드와 입력된 실수 데이터의 각도 차이 가 아래의 수학식 3 범위 내에서 유니크한 코드워드를 디코딩하는 것이 가능하다. [수학식 3]"}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "구현시에, 재생 모듈은 상술한 동작을 수행하기 위한 명령어 집합(즉, 프로그램)으로 구현될 수 있다. 이 경우, 상술한 GPU를 이용하여 벡터를 생성할 수 있다. 또한, 구현시에 재생 모듈은 상술한 연산 동작 을 수행할 수 있는 하드웨어(예를 들어, ASIC 등)으로 구현될 수 있다. 이상과 같이 본 개시에 따른 퍼지 추출은 실수 데이터를 바이너리 데이터로 변환할 필요가 없어, 정확도 저하가 발생하지 않는다. 또한, 본 개시에 따른 퍼지 추출은 별도의 변환 과정이 불필요한바 더욱 빠른 에러 정정 또는 사용자 인증 처리가 가능하다. 이상에서는 본 개시에 따른 실수 데이터에 대한 에러 정정 기술이 퍼지 추출 동작에만 적용되는 것으로 설명하 였지만, 상술한 실수 데이터는 생체 정보에 한정되지 않고 다양한 정보(예를 들어, 안테나 신호에 따른 위치 정 보 등)일 수 있으며, 다양한 분야에 적용될 수 있다. 한편, 도 8을 도시하고 설명함에 있어서, 키 생성 모듈 및 재생 모듈이 전자 장치 내의 구성인 것으로 설명하였지만, 구현시에 상술한 구성 중 적어도 하나는 서버 장치에 구비될 수도 있다. 또한, 도시된 예에서는 하나의 장치가 키 생성 모듈 및 재생 모듈 모두를 포함하는 것으로 도시하였 지만, 구현시에 전자 장치는 키 생성 모듈만을 포함하거나, 재생 모듈만을 포함할 수도 있다. 도 9는 본 개시의 일 실시 예에 따른 데이터 처리 방법을 설명하기 위한 흐름도이다. 도 9를 참조하면, 먼저, 복수의 원소로 구성되며 기설정된 크기를 갖는 벡터 중 하나를 코드 워드(codeword)로 선택한다(S910). 예를 들어, 벡터는 복수의 원소 중 기설정된 개수의 원소들은 0이 아닌 동일한 값을 가질 수 있다. 예를 들어, 512개의 원소로 구성되며, 512개의 원소 중 16개 원소는 ±1/4 값을 가질 수 있다. 그리고 선택된 코드 워드와 실수 데이터를 이용하여 헬퍼 행렬(hepler matrix)을 생성한다(S920). 여기서, 헬퍼 행렬은 구(sphere) 표면의 값을 구 표면 상에서 상대적으로 이동시키는 벡터로, 구 표면 상에서의 한 번의 이동 일 수 있으며, 복수의 이동일 수 있다. 예를 들어, 복수의 이동인 경우, 헬퍼 행렬은 랜덤 직교 행렬과 회전 행 렬을 이용하여 산출될 수 있다. 그리고 헬퍼 행렬을 출력한다(S930). 여기서 헬퍼 행렬은 공개키로 활용될 수 있다. 이상과 같이 본 실시 예에 따른 데이터 처리 방법은 실수 데이터를 구 표면 상에서 이동시키는 헬퍼 행렬을 생 성하는바, 바이너리 데이터로의 변환 없이도 실수 데이터를 직접적인 이용이 가능하다. 도 10은 본 개시의 다른 실시 예에 따른 데이터 처리 방법을 설명하기 위한 흐름도이다. 도 10을 참조하면, 먼저 실수 데이터를 입력받는다(S1010). 그리고 구(sphere) 표면의 값을 구 표면 상에서 상대적으로 이동시키는 헬퍼 행렬(hepler matrix)에 입력된 실 수 데이터를 반영하여, 복수의 원소로 구성된 벡터를 산출한다(S1020). 한편, 산출 이후에, 산출된 벡터와 헬퍼 행렬에 대응되는 코드 워드의 동일성을 판단할 수 있다. 구체적으로, 산출된 벡터와 헬퍼 행렬에 대응되는 코드 워드의 내적 합을 산출하고, 산출된 내적 합의 크기가 기설정된 크기 보다 작은지 여부로 동일성을 판단할 수 있다. 또는 상술한 산출 이후에, 산출된 벡터에 대한 에러 보정을 수행할 수 있다. 구체적으로, 벡터를 구성하는 복수 의 원소 각각의 원소 값을 기설정된 값 또는 0 값으로 근사 처리할 수 있다. 이상과 같이 본 실시 예에 따른 데이터 처리 방법은 실수 데이터를 별도로 바이너리 데이터로 변환하지 않고서 에러 정정을 수행하거나, 기존 데이터와의 동일성 여부를 확인할 수 있는바, 실수 데이터에 대한 보다 정밀한 에러 정정 또는 인증을 수행할 수 있다. 각 단계의 상세 동작에 대해서는 상술한 바 있으므로 자세한 설명은 생략하도록 한다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치에 설치 가능한 어플리케이션 형태 로 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치에 대한 소프트웨어 업그레이드, 또 는 하드웨어 업그레이드만으로도 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들은 전자 장치에 구비된 임베디드 서버, 또는 전자 장치 중 적어도 하 나의 외부 서버를 통해 수행되는 것도 가능하다. 한편, 본 개시의 일시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기 기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시 예들에 따른 전자 장치를 포함할 수 있다. 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 프로세 서의 제어 하에 다른 구성요소들을 이용하여 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인 터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non- transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 신호(signal)를 포함하지 않 으며 실재(tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시적으로 저장됨을 구분하지 않는다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품 (computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있 다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 또한, 본 개시의 일 실시 예에 따르면, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어 (hardware) 또는 이들의 조합을 이용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 일부 경우에 있어 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있 다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨 어 모듈들로 구현될 수 있다. 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 동작을 수행할 수 있다. 한편, 상술한 다양한 실시 예들에 따른 기기의 프로세싱 동작을 수행하기 위한 컴퓨터 명령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium) 에 저장될 수 있 다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었 을 때 상술한 다양한 실시 예에 따른 기기에서의 처리 동작을 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체 가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적 컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등이 있을 수 있다. 또한, 상술한 다양한 실시 예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구 성될 수 있으며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요 소가 다양한 실시 예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로 그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는 유사하게 수행할 수 있다. 다양한 실시 예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동 작들은 순차적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2020-0013557", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2020-0013557", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시 예에 따른 전자 시스템을 나타내는 도면, 도 2는 본 개시의 일 실시 예에 따른 전자 장치의 구성을 도시한 블럭도, 도 3은 본 개시의 전자 장치의 세부 구성을 설명하기 위한 블럭도, 도 4는 본 개시의 일 실시 예에 따른 서버 장치의 구성을 도시한 블럭도, 도 5는 본 개시의 일 실시 예에 따른 퍼지 추출(Fuzzy Extractor)을 설명하기 위한 개념도, 도 6은 본 개시의 일 실시 예에 다른 퍼지 추출 동작을 설명하기 위한 도면, 도 7은 본 개시의 다른 실시 예에 다른 퍼지 추출 동작을 설명하기 위한 도면, 도 8은 본 개시의 일 실시 예에 따른 생성 모듈 및 디코딩 모듈의 동작을 설명하기 위한 도면, 도 9는 본 개시의 일 실시 예에 따른 데이터 처리 방법을 설명하기 위한 흐름도, 그리고, 도 10은 본 개시의 다른 실시 예에 따른 데이터 처리 방법을 설명하기 위한 흐름도이다."}
