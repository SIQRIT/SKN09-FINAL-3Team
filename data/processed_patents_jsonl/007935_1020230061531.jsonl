{"patent_id": "10-2023-0061531", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0164111", "출원번호": "10-2023-0061531", "발명의 명칭": "희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치", "출원인": "한양대학교 산학협력단", "발명자": "최정욱"}}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세서, 입력 버퍼 및 출력 버퍼를 이용하여 컨볼루션 연산을 수행하는 방법에 있어서, 입력 데이터에 포함되어 있는 희소 입력 데이터 및 상기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인덱스 데이터 추출 단계;커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 단계; 및 수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 단계;를 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 희소 입력 데이터 수집 단계는,상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정하는 단계를 포함하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 희소 입력 데이터 수집 단계는,상기 입력 버퍼의 저장 용량에 맞춰 상기 희소 입력 데이터를 수집하여 컨볼루션 연산을 수행하였을 때, 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용량보다 큰 경우, 상기 희소 입력 데이터의 수집 범위를 산정하는 단계를 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 희소 입력 데이터 수집 단계는,다음 단계의 컨볼루션 연산을 수행할 때마다, 상기 희소 입력 데이터의 수집 범위를 새롭게 산정하는 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 컨볼루션 연산 단계의 의해 출력된 출력 데이터의 위치와 다음 단계의 컨볼루션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출된 결과에 기초하여 다음 단계의 컨볼루션 연산을 수행하는 단계;를 더 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법.공개특허 10-2024-0164111-3-청구항 6 제5항에 있어서,상기 다음 단계의 컨볼루션 연산을 수행하는 단계는,상기 비중복 구간에 대한 출력 데이터는 외부 버퍼에 저장하고 상기 중복 구간에 대한 출력 데이터는 제2출력버퍼에 저장하는 단계를 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 다음 단계의 컨볼루션 연산을 수행하는 단계는,상기 제2출력 버퍼에 저장된 출력 데이터에 기초하여 다음 단계의 컨볼루션 연산을 수행하는 단계를 포함하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "입력 데이터에 포함되어 있는 희소 입력 데이터 및 상기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인덱스 데이터 추출 모듈;커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 모듈; 및수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 모듈;을 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8항에 있어서,상기 희소 입력 데이터 수집 모듈은,상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,상기 희소 입력 데이터 수집 모듈은,입력 버퍼의 저장 용량에 맞춰 상기 희소 입력 데이터를 수집하여 컨볼루션 연산을 수행하였을 때, 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용량보다 큰 경우, 상기 희소 입력 데이터의 수집 범위를 산정하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8항에 있어서,상기 컨볼루션 연산 모듈은,현 단계의 컨볼루션 연산의 의해 출력된 출력 데이터의 위치와 다음 단계의 컨볼루션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출된 결과에 기초하여 다음 단계의 컨볼루션 연산을 수행하는,공개특허 10-2024-0164111-4- 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 컨볼루션 연산 모듈은, 상기 비중복 구간에 대한 출력 데이터는 외부 버퍼에 저장하고 상기 중복 구간에 대한 출력 데이터는 제2출력버퍼에 저장하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "입력 데이터에 포함되어 있는 희소 입력 데이터 및 상기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인덱스 데이터 추출 모듈;커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 모듈; 상기 희소 입력 데이터 수집 모듈이 수집한 상기 희소 입력 데이터가 일시적으로 저장되는 입력 버퍼;수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 모듈; 및상기 컨볼루션 연산 모듈에 의해 수행된 상기 희소 입력 데이터에 대한 출력 데이터를 저장하는 제1출력 버퍼;를 포함하는, 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 희소 입력 데이터 수집 모듈은,상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14항에 있어서,상기 컨볼루션 연산 모듈은,현 단계의 컨볼루션 연산의 의해 출력된 출력 데이터의 위치와 다음 단계의 컨볼루션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출된 결과에 기초하여 다음 단계의 컨볼루션 연산을 수행하고, 상기 중복 구간에 대한 출력 데이터가 저장되는 제2출력 버퍼;를 더 포함하는,희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법은 프로세서, 입력 버퍼 및 출력 버 퍼를 이용하여 컨볼루션 연산을 수행하는 방법에 있어서, 입력 데이터에 포함되어 있는 희소 입력 데이터 및 상 기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인덱스 데이터 추출 단계, 커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 단계 및 수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치에 관한 발명으로서, 보다 상세 하게는 인공신경망을 이용하여 컨볼루션 연산을 수행함에 있어서, 희소 입력 데이터의 위치 및 크기 정보를 이 용하여 버퍼의 크기를 적절하게 가변함으로써, 이용하여 컨볼루션 연산을 보다 빠르게 수행하는 기술에 관한 발명이다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능(Artificial Intelligence, AI) 기술은, 인간의 학습능력과 추론능력, 지각능력, 자연언어의 이해 능 력 등을 컴퓨터 프로그램으로 실현한 기술을 의미하며, 종래의 룰(Rule) 기반 스마트 시스템과 달리 기계가 스 스로 학습하고 판단하며 똑똑해지는 시스템을 의미한다. 인공지능 기술은 기계학습(딥 러닝) 및 기계 학습을 활용한 요소 기술들로 구성된다. 기계 학습은 입력 데이터 들의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소 기술은 딥 러닝 등의 기계학습 알고리즘을 활용하 여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공지능 기술은 다양한 분야에 적용되어 활용되는데, 사람의 언어/문자를 인식하고 응용/처리하는 언어 이해 분야, 사물을 인간의 시각처럼 인식하여 객체 추적, 사람 인식, 공간 이해, 장면 이해 등을 처리하는 시각적 이 해 분야, 정보를 판단하여 논리적으로 추론하고 예측하는 추론/예측 분야 등이 존재한다. 인공지능의 기술의 발달에 따라, 자율주행 분야에서도 주행중인 차량 주변에 존재하는 객체를 인식하는 분야에 도 인공지능 기술이 적용되고 있다. 구체적으로, Lidar/RGB-D 센서 기반의 객체 인식 방법이 주를 이루고 있는 데, Lidar/RGB-D 센서 기반의 객체 인식 방법은 점 구름(Point Cloud) 형태의 데이터를 활용해 차량 주변에 존 재하는 객체의 위치와 종류를 분별하며, 점 구름 데이터는 컨볼루션(Convolution, 합성곱) 연산을 여러 레이어 에 걸쳐 대해 반복적으로 수행함으로써, 해당 데이터의 객체를 분류할 수 있는 특징을 추출한다. 그러나, 객체 인식 방법의 특성상, 점 구름 데이터가 공간에 희박하게(Sparse) 존재하기 때문에 컨볼루션 연산 또한 희박하게 존재하는 데이터들에 대해 이루어진다. 따라서, 레이어 별로 추출하는 특징(Feature)이 불규칙적 으로 메모리에 저장되고, 이로 인해 컨볼루션 연산에 사용되는 특징 데이터를 메모리로부터 불러오기 위해 불규 칙적인 접근을 할 수 밖에 없다. 따라서, 종래 기술에 따라 컨볼루션 연산을 수행하는 경우, 전 과정을 마치기 위해 필요한 시간이 크게 증가하는 문제점이 존재한다. 또한, 희소 입력의 데이터에 대한 컨볼루션 연산을 수행하는 경우, 희소 입력 데이터의 분포에 따라서 희소 입 력 대비 생성되는 희소 출력의 개수가 다르기 때문에, 이를 고려하여 내부 버퍼의 크기를 설정해야 하는데, 현 재까지 제안된 기술은 이를 고려하지 못해 컨볼루션 연산의 속도가 감소하는 문제가 존재하는 실정이다. 구체적으로 입력 데이터의 밀집도가 높은 댄스 컨볼루션(밀집 합성곱) 연산의 경우, 특정 입력 타일(tile) 크기 에 대해서 컨볼루션 연산의 결과로 생성되는 출력 타일(tile)의 크기가 정해지기 때문에, 내부 메모리 크기에 적합한 타일의 크기를 지정할 수 있다. 그러나, 입력 데이터의 밀집도가 낮은 스페어 컨볼루션(희소 합성곱)의 경우, 희소 입력 데이터에 대한 타일 크기를 특정 하더라도 매번 생성되는 희소 출력의 개수가 달라지기 된다. 따라서, 생성되는 희소 출력의 개수가 내부의 출력 버퍼의 크기를 넘어가게 되면 해당 희소 입력 타일에 대한 연산을 모두 마치지 못하고 다른 희소 입력 타일을 불러와야 되기 때문에, 컨볼루션 연산의 속도가 많이 늦어지는 문제가 존재한다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허허공보 10-2012828 B1 - 볼륨 렌더링 장치 및 방법(2018.12.26.)"}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치는 상기 설명한 문제점을 설명하기 위한 고안된 발명으로서, 희소 입력 데이터의 특성을 기초하여 컨볼루션 연산을 효율적으로 할 수 있 는 방법 및 장치를 제공하는데 그 목적이 있다. 보다 상세하게는 인공신경망을 이용하여 컨볼루션 연산을 수행함에 있어서, 희소 입력 데이터의 위치 및 크기 정보를 이용하여 버퍼의 크기를 적절하게 가변함으로써, 불필요한 데이터의 수집을 최소화 하는 방법으로 컨볼루션 연산의 전체 속도를 효과적으로 높이는데 목적이 존재한다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법은 프로세서, 입력 버퍼 및 출력 버 퍼를 이용하여 컨볼루션 연산을 수행하는 방법에 있어서, 입력 데이터에 포함되어 있는 희소 입력 데이터 및 상 기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인덱스 데이터 추출 단계, 커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정 된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 단계 및 수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 단계를 포함할 수 있다. 상기 희소 입력 데이터 수집 단계는, 상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정하 는 단계를 포함할 수 있다. 상기 희소 입력 데이터 수집 단계는, 상기 입력 버퍼의 저장 용량에 맞춰 상기 희소 입력 데이터를 수집하여 컨 볼루션 연산을 수행하였을 때, 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용량보다 큰 경우, 상기 희소 입력 데이터의 수집 범위를 산정하는 단계를 포함할 수 있다. 상기 희소 입력 데이터 수집 단계는, 다음 단계의 컨볼루션 연산을 수행할 때마다, 상기 희소 입력 데이터의 수 집 범위를 새롭게 산정 할 수 있다. 상기 컨볼루션 연산을 수행하는 단계는, 상기 컨볼루션 연산 단계의 의해 출력된 출력 데이터의 위치와 다음 단 계의 컨볼루션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출 된 결과에 기초하여 다음 단계의 컨볼루션 연산을 수행하는 단계를 더 포함할 수 있다. 상기 다음 단계의 컨볼루션 연산을 수행하는 단계는, 상기 비중복 구간에 대한 출력 데이터는 외부 버퍼에 저장 하고 상기 중복 구간에 대한 출력 데이터는 제2출력 버퍼에 저장하는 단계를 포함할 수 있다. 상기 다음 단계의 컨볼루션 연산을 수행하는 단계는, 상기 제2출력 버퍼에 저장된 출력 데이터에 기초하여 다음 단계의 컨볼루션 연산을 수행하는 단계를 포함할 수 있다. 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치는 입력 데이터에 포함되어 있는 희소 입력 데이터 및 상기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인 덱스 데이터 추출 모듈, 커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 모듈 및 수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 모듈을 포함할 수 있다. 상기 희소 입력 데이터 수집 모듈은, 상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정할 수 있다. 상기 희소 입력 데이터 수집 모듈은, 입력 버퍼의 저장 용량에 맞춰 상기 희소 입력 데이터를 수집하여 컨볼루 션 연산을 수행하였을 때, 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용량보다 큰 경우, 상기 희소 입력 데이터의 수집 범위를 산정할 수 있다. 상기 컨볼루션 연산 모듈은, 현 단계의 컨볼루션 연산의 의해 출력된 출력 데이터의 위치와 다음 단계의 컨볼루 션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출된 결과에 기 초하여 다음 단계의 컨볼루션 연산을 수행할 수 있다. 상기 컨볼루션 연산 모듈은, 상기 비중복 구간에 대한 출력 데이터는 외부 버퍼에 저장하고 상기 중복 구간에 대한 출력 데이터는 제2출력 버퍼에 저장할 수 있다. 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치는 입력 데이터에 포함되어 있는 희소 입력 데이터 및 상기 희소 입력 데이터에 대응되는 출력 데이터에 대한 인덱스 데이터를 각각 추출하는 인 덱스 데이터 추출 모듈, 커널의 크기 및 출력 버퍼의 저장 용량 크기에 기초하여 상기 희소 입력 데이터의 수집 범위를 산정하고, 산정된 수집 범위에 기초하여 상기 희소 입력 데이터를 수집하는 희소 입력 데이터 수집 모듈, 상기 희소 입력 데이터 수집 모듈이 수집한 상기 희소 입력 데이터가 일시적으로 저장되는 입력 버퍼, 수집된 상기 희소 입력 데이터에 대해 상기 커널을 기초로 컨볼루션 연산을 수행하는 컨볼루션 연산 모듈 및 상기 컨볼루션 연산 모듈에 의해 수행된 상기 희소 입력 데이터에 대한 출력 데이터를 저장하는 제1출력 버퍼를 포함 할 수 있다. 상기 희소 입력 데이터 수집 모듈은, 상기 희소 입력 데이터에 대해 컨볼루션 연산을 수행하여 출력되는 출력 데이터의 크기가 상기 출력 버퍼의 저장 용랑을 초과하지 않도록 상기 희소 입력 데이터의 수집 범위를 산정할 수 있다. 상기 컨볼루션 연산 모듈은, 현 단계의 컨볼루션 연산의 의해 출력된 출력 데이터의 위치와 다음 단계의 컨볼루 션 연산에 따라 출력되는 출력 데이터의 위치를 비교하여 중복 구간과 비중복 구간 산출하고, 산출된 결과에 기 초하여 다음 단계의 컨볼루션 연산을 수행할 수 있다. 상기 컨볼루션 연산 장치는 상기 중복 구간에 대한 출력 데이터가 저장되는 제2출력 버퍼를 더 포함할 수 있다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치는 희소 데이터 기반의 컨볼루션 연산을 수행함에 있어서, 입력 데이터의 위치 및 출력 버퍼의 크기를 고려하여 규칙을 생성하고, 이를 기초로 컨볼루션 연산을 수행하기 때문에, 불필요한 연산을 줄 일 수 있어 종래 기술보다 빠르게 컨볼루션 연산 을 수행할 수 있는 장점이 존재한다. 또한, 컨불루션 연산의 경우 그 특성상 중첩되는 계산 과정이 많은데, 본 발명에 따른 컨볼루션 연산 방법은 종 래에 수집하였던 입력 데이터의 정보를 다음 연산에서 재사용하므로, 컨볼루션 연산 자체의 연산 속도를 빠르게 증가시킬 수 있는 장점이 존재한다. 또한, 이러한 특징으로 인해 3차원 공간에 존재하는 객체 인식의 속도를 증가시킬 수 있는바, 고차원 자율 주행 에 필수적인 고속 전방 장애물 인식을 효율적으로 수행할 수 있고, 빠르고 정확한 로봇 네비게이션을 위한 RGB- D 기반의 위치 추정도 효율적으로 수행할 수 있는 장점이 존재한다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래 의 기재들로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에 기재된 실시 예와 도면에 도시된 구성은 개시된 발명의 바람직한 일 예이며, 본 출원의 출원 시점 에 있어서 본 명세서의 실시 예와 도면을 대체할 수 있는 다양한 변형 예들이 있을 수 있다. 또한, 본 명세서에서 사용한 용어는 실시 예를 설명하기 위해 사용된 것으로, 개시된 발명을 제한 및/또는 한정 하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\", \"구비하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 작동, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들 이나 숫자, 단계, 작동, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않 는다. 또한, 본 명세서에서 사용한 \"제 1\", \"제 2\" 등과 같이 서수를 포함하는 용어는 다양한 구성 요소들을 설명하는 데 사용될 수 있지만, 상기 구성 요소들은 상기 용어들에 의해 한정되지는 않는다. 아래에서는 첨부한 도면을 참고하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그리고 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략한다. 한편, 본 명세서에서 발명의 명칭은 '희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치'로 기재하였으나, 이하 설명의 편의를 위해 '희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장 치'는 각각 '컨볼루션 연산 방법'과 '컨볼루션 연산 장치'로 축약하여 설명하도록 한다. 도 1은 본 발명의 일 실시예에 따라 컨볼루션 연산 장치에 입력되는 입력 데이터의 일 예와 컨볼루션 연산을 수 행하는 커널의 일 예를 도시한 도면이다. 인덱스 데이터 추출 모듈은 입력되는 입력 데이터에 대한 입력 인덱스 정보를 생성할 수 있다. 본 발 명에서의 (index) 정보는 입력 데이터 내에 서 실제 데이터가 존재하는 유효 데이터가 위치하고 있는 포인트에 대한 위치 정보를 의미한다. 일 예로, 도 1의 (a)에 도시된 바와 같은 5 X 5행렬의 데이터가 입력 데이터로 입력이 된다면(행렬에서 빗금친 부분이 데이터가 존재하는 영역이고, 민무늬 부분이 데이터가 존재하지 않는 영역을 의미하며, 데이터가 존재하 는 위치의 데이터를 유효 데이터라 지칭하기로 한다) 인덱스 정보 추출 모듈은 입력 데이터 내에서 유효 데이터가 위치하고 있는 위치 정보를 입력 인덱스 정보로 추출할 수 있다. 인덱스 정보를 표현하는 방법은 행렬 데이터를 표현하는 공지되어 있는 방법이면 그 어느 것이든 차용될 수 있 는데, 대표적으로 CSR(Compressed Spare Row) 포맷이 사용될 수 있다. 이하 설명의 편의를 위해 본 발명에서의 인덱스 정보는 CSR 형식을 기준으로 설명하기로 한다. 구체적으로, CSR 포맷 형식은 순차적으로 각각의 행에 유효 데이터가 몇 개가 존재하는지에 대한 정보인 CSR_row 정보와, 순차적으로 각각의 행에 유효 데이터가 몇 열에 위치하는지에 대한 정보인 CSR_col에 대한 정 보를 포함하고 있으며, CSR 형식 좌표 표현 방식은 일반적으로 행렬 표현 방법과 동일하나, 시작이 1이 아니라 0에서 시작하는 것에 차이점이 존재한다. 따라서, 데이터에서 가장 왼쪽 및 가장 위쪽에 있는 좌표는 (1,1)로 표현하지 않고 (0,0)으로 표현된다. 따라서, 입력 데이터는 0행 0열을 기준으로 행과 열이 시작된다고 볼 수 있으며, 커널 또한 3X3 행렬의 커널인 경우 커널의 오프셋은 행 기준으로 (0,1,2), 열 기준으로 (0,1,2)가 된다. 즉, 입력 데이터와 커널 모두 0행을 기준으로 표현이 된다. 도 1에 표시된 입력 데이터에 대해 인덱스 정보가 생성되는 과정을 순차적으로 설명하면, CSR_row 값은 데이터 와 무관하게 처음은 0으로 시작하며, 2번째 값부터 각 행별로 있는 유효 데이터의 개수 만큼 누적된 값을 나타 낸다. 따라서, 도면에 표시된 바와 같이 CSR_row는 0으로 시작한다. 제0행에서는 유효 데이터가 1개 (I0)존재하므로 제0행까지 고려한 에 CSR_row의 값은 [0,1]로 표현된다. 제1행에서는 유효 데이터가 1개 (I1)존재하므로 제1행까지 고려한 CSR_row 값은 [0,1,2]로 표현이 된다. 제2행에서는 유효 데이터가 2개(I2, I3) 존재하므로 제2행까지 고려한 CSR_row 값은 [0,1,2,4]로 표현이 된다. 제3행에서는 유효 데이터가 1개(I4) 존재하므로 제3행까지 고려한 CSR_row값은 [0,1,2,4,5]로 표현이 된다. 제4행에서는 유효 데이터가 1개(I5) 존재하므로 제4행까지 고려한CSR_row값은 [0,1,2,4,5,6]로 표현이 된다. CSR_col은 순차적으로 각각의 행에서 몇 번째 열(column)에 유효 데이터가 위치하고 있는지에 대한 정보를 알려 주는 정보이다. 따라서, 도 1을 기준으로 제0행에서는 4번째 열의 위치에 데이터가 존재하므로 CSR_col은 [4]가 되고, 제1행에는 1 열에 유효 데이터가 존재하므로 CSR_col은 [4,1]이 된다. 제2행에는 유효 데이터가 2번째 열 과 3번째 열에 존재하므로 CSR_col은 [4,1,2,3]이 되고, 제3행에는 유효 데이터가 3 열에 위치하므로 CSR_col은 [4,1,2,3.3]이 된다. 이러한 방식으로 데이터를 생성하면 최종CSR_col는 [4,1,2,3,3,2] 가 된다. 도 2는 종래 기술에 따라 희소 데이터 기반의 컨볼루션 연산을 수행하는 과정을 설명하기 위한 도면이다. 도 3 내지 도 5은 입력 데이터 내에서 희소 입력 데이터의 위치에 따라 가변하게 출력되는 출력 데이터의 분포를 도 시한 도면으로서, 구체적으로 도 3의 (c)는 도 3의 (b)와 같이 입력 데이터에 도 3의 (a)와 같은 3x3 커널이 스 트라이딩을 하면서 컨볼루션 연산을 하는 경우 생성되는 출력 데이터의 분포를 도시한 도면이며, 도 4의 (c)는 도 4의 (b)와 같이 입력 데이터에 도 4의 (a)와 같은 3x3 커널이 스트라이딩을 하면서 컨볼루션 연산을 하는 경 우 생성되는 출력 데이터의 분포를 도시한 도면이다. 도 5는 출력 데이터의 개수가 출력 버퍼의 저장 용량을 벗 어나는 경우 발생하는 문제점을 설명하기 위한 도면이다. 도 2를 참고하면, LiDAR를 통해 얻는 3차원 공간에 존재해는 객체(object)에 대한 포인트 클라우드(point cloud, 20)는 도면에 도시된 바와 같이 밀도가 희박한(Sparse)한 정보를 가지고 있다. 따라서, 이러한 데이터들 에서는 바로 컨볼루션 연산을 수행하지 않고 입력된 포인트 클라우드 데이터에 대해 희소 유사 이미지(pseudo image)로 변환과정을 거친다. (S10) 즉, S10 과정은 2차원 희소 컨볼루션(spare convolution) 입력 데이터를 생성하는 것이다. 다만, 희소 이미지 데이터에 대해 컨볼루션 연산을 수행하면 연산의 비효율 문제가 발생하게 되므로, 희소 이미 지를 밀집된 형태의 데이터로 변환한 후, 변환된 데이터를 기초로 밀집(dense) 컨볼루션 연산을 수행하게 된다. 그러나, 이러한 과정을 거쳐서 컨볼루션 연산을 수행하더라도 희소 데이터의 희소 정도(sparsity)는 일반적으로 95%를 초과하기 때문에, 밀집 컨볼루션 연산을 위한 치환 연산은 매우 비효율적인 문제를 가지고 있다. 또한, 입력 데이터의 밀집도가 높은 댄스 컨볼루션(밀집 합성곱) 연산의 경우, 특정 입력 타일(tile) 크기에 대 해서 컨볼루션 연산의 결과로 생성되는 출력 타일(tile)의 크기가 정해지기 때문에, 내부 메모리 크기에 적합한 타일의 크기를 지정할 수 있는데, 입력 데이터의 밀집도가 낮은 스페어 컨볼루션(희소 합성곱)의 경우, 희소 입 력 데이터에 대한 타일 크기를 특정하더라도 매번 생성되는 희소 출력의 개수가 달라지기 된다. 따라서, 생성되는 희소 출력의 개수가 내부의 출력 버퍼의 크기를 넘어가게 되면 해당 희소 입력 타일에 대한 연산을 모두 마치지 못하고 다른 희소 입력 타일을 불러와야 되기 때문에, 컨볼루션 연산의 속도가 많이 늦어지 는 문제가 존재하는데, 현재까지 제안된 기술은 이러한 문제점을 해결하지 못해 컨볼루션 연산의 속도가 많이 저해되는 문제점이 존재하는 실정이다. 이를 구체적으로 살펴보면, 도 3과 도 4를 참고하면, 입력 데이터내에서 수집하는 입력 데이터의 타일 (TILE)의 개수가 12개로 동일하더라도, 입력 데이터내에서 존재하는 희소 입력 데이터(도면에서 I0, I1,I2 등을 의미한다)의 위치에 따라 출력되는 출력 데이터 내에서 위치하는 데이터의 개수는 도 3의 경우 71개가 되고, 도 4의 경우 77개 된다. 그리고, 컨볼루션 연산을 수행하는 경우 컨볼루션 연산을 한 번 수행할 때 마다 출력되는 데이터를 출력 버퍼에 저장하게 되는데, 출력 버퍼의 데이터 저장 크기에 따라 컨볼루션 연산이 수행된 데이터를 모두 다 저장할 수 없는 문제가 발생하게 된다. 일 예로, 출력 버퍼가 1회에 저장할 수 있는 데이터의 개수가 70개인 경우 도 3과 도 4의 경우 각각 1개와 7개의 데이터를 저장하지 못하게 된다. 이와 반대로 출력 버퍼가 1회의 저장할 수 있는 데이터의 개수가 71개인 경우, 도 3에서와 같은 경우에는 출력 데이터를 모두 한꺼번에 저장할 수 있지만, 도 4에서와 같은 경우에는 6개의 데이터를 저장하지 못하게 된다. 이와 반대로, 출력 버퍼가 1회 저장할 수 있는 데이터의 개수가 77개 이상인 경우, 도 4 및 도 5 모두 출력 되는 데이터를 저장할 수 있게 된다. 즉, 앞서 언급했던 바와 같이 희소 입력 데이터에 기반한 컨볼루션 연산의 경우, 입력 데이터 내의 희소 입력 데이터에 대한 타일 크기를 정하더라도 매번 생성되는 희소 출력의 개수가 달라지기 때문에, 생성되는 희소 출 력의 개수가 출력 버퍼의 저장 용량을 넘어가게 되면 해당 희소 입력 타일에 대한 연산을 모두 마치지 못하고 다른 희소 입력 타일을 불러오는 문제가 발생하게 되며, 이는 전체 연산 속도가 늦어지는 문제점이 발생하게 된 다. 도 5를 통해 이를 자세히 설명한다. 도 5에서는 입력 버퍼의 크기가 12개의 데이터에 대해 저장이 가능하고, 출 력 버퍼의 크기가 70개의 데이터에 대해 저장이 가능한 경우를 가정하여 설명한다. 도 5의 (a)에 도시된 바와 같이 12개의 희소 입력 데이터에 대해 컨볼루션 연산이 수행되어 71개의 희소 출력 데이터가 생성되는 경우, 도 5의 (b)에 도시된 바와 같이 출력 데이터는 출력 버퍼에 저장될 수 있는 데이터의 크기를 벗어나게 된다. 그리고 도 5의 (b)에 도시된 바와 같이 일반적으로 동일한 입력 인덱스(Input Index)에 대해서 웨이트 인덱스 (weigt index)가 작을수록 생성되는 출력 인덱스(output index)는 큰 값을 가지는 경향이 있음을 알 수 있다. 일반적으로 컨볼루션 연산은 외부 메모리의 접근을 최소화 하기 위해서 내부적으로 컨볼루션 연산에 따른 출력 데이터에 대한 누적 연산(accumulation)을 모두 끝마치면 외부 메모리로 저장을 수행 (output-stationary)하게 된다. 그리고 입력 채널에 대한 타일링도 적용될 수 있기 때문에, 불필요한 데이터를 수집하게 되면, 출력 버퍼 의 크기 제한으로 인해 다시 동일한 희소 입력에 대한 수집을 필요로 하게 되어 컨볼루션 연산의 전체 속도를 감소시키는 문제가 발생한다. 따라서, 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치는 상기 설명한 문제점을 설명하기 위한 고안된 발명으로서, 희소 입력 데이터의 특성을 기초하여 컨볼루션 연산을 효율적으로 할 수 있는 방법 및 장치를 제공하는데 그 목적이 있다. 보다 상세하게는 인공신경망을 이용하여 컨볼루션 연산을 수행함에 있어서, 희소 입력 데이터의 위치 및 크기 정보를 이용하여 타일의 크기를 적절하게 가변함으로써, 불필요한 데이터의 수집을 최소화 하는 방법으로 컨볼 루션 연산의 전체 속도를 효과적으로 높이는데 목적이 존재한다. 또한, 본 발명에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치는 희소 입력에 대한 컨볼루 션 연산을 수행함에 있어서, 입력-출력-커널 맵핑 정보를 바탕으로 특정 희소 입력 인덱스까지 생성되는 희소 출력의 개수를 고려하여 희소 입력을 수집하여 연산을 수행하기 때문에, 종래 기술보다 빠르게 컨볼루션 연산을 수행할 수 있는 장점이 존재하다. 이하 도 6 내지 도 10을 통해 구체적으로 알아보도록 한다. 도 6은 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치 본 발명의 일 실시예에 따른 인공신경망을 이용한 희소 데이터 기반의 컨볼루션 연산 장치의 일부 구성 요소를 도시한 블록도이며, 도 7은 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집하는 경우, 출력 데이터를 모두 출력 버퍼에 저장할 수 있는 경우와 저장할 수 없는 경우를 비교하여 도시한 도면이다. 도 8은 일 실시예에 따른 컨볼루션 연산 방법에 따라 N번째 출력 데이터와 N+1번째 출력 데이터가 생성되는 방법을 설명하기 위한 도면이다. 도 6을 참조하면, 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치는 프로세서 와 메모리 모듈을 포함할 수 있고, 프로세서는 인덱스 데이터 추출 모듈, 희소 입력 데이 터 수집 모듈 및 컨볼루션 연산 모듈을 포함할 수 있으며, 메모리 모듈은 입력 버퍼와 제1 출력 버퍼 및 제2출력 버퍼를 포함할 수 있다. 한편, 본 발명에서 컨볼루션 연산을 수행하기 이동되는 커널은, 도 3의 (a)에 도시된 바와 같은 3X3커널을 기준 으로 하여 설명한다. 그러나, 이는 본 발명의 일 실시예에 불과할 뿐, 본 발명의 원리는 2X2, 4X4, 5X5 등의 크 기를 가지는 커널에 대해서도 적용될 수 있으며, 2차원 커널이 아닌 3차원 커널에서도 본 발명의 원리가 그대로 적용될 수 있다. 또한, 도 6에서는 설명의 편의를 위해 프로세서와 메모리 모듈을 분리하여 설명하였고, 프로세서 내에서도 인덱스 데이터 추출 모듈, 타일 데이터 수집 모듈, 희소 입력 데이터 수집 모듈 및 컨볼루션 연산 모듈을 각각의 별도의 구성 요소로 도시하여 설명하였지만, 이는 설명의 편의를 위해 구분한 것이고 각각의 모듈이 하는 역할을 하나의 프로세서가 수행할 수도 있다. 인덱스 데이터 추출 모듈은 입력 데이터를 분석하여, 입력 데이터 내에 있는 희소 입력 데이터의 인덱스 정보를 수집하며, 희소 입력 데이터 수집 모듈은 입력 데이터 내에 존재하는 희소 입력 데이터를 입력 버퍼의 크기에 맞춰 수집한다. 컨볼루션 연산 모듈은 희소 입력 데이터 수집 모듈이 수집한 데 이터를 기초로 컨볼루션 연산을 수행한다. 입력 버퍼에는 희소 입력 데이터 수집 모듈이 수집한 희소 입력 데이터가 임시적으로 저장되며, 제1 출력 버퍼에는 컨볼루션 연산이 수행됨에 있어서 다음 단계에서 중복 사용되지 않는 데이터가 저장되며, 제2출력 버퍼에는 컨볼루션 연산이 수행됨에 있어서 다음 단계에서 중복 사용되는 데이터가 임시적으로 저 장된다. 구체적으로, 인덱스 데이터 추출 모듈은 컨볼루션 연산 장치에 입력되는 입력 데이터를 분석하여 입 력 데이터에서 데이터가 존재하는 희소 입력 데이터에 대한 위치 정보를 수집한다. 구체적으로 인덱스 데이터 추출 모듈은 앞선 도 2에서 설명하였던 방법을 이용하여 입력 데이터에서 희소 입력 데이터가 존재하는 위치에 대한 정보를 포함하는 인덱스 정보를 추출하고, 추출한 인덱스 정보를 희 소 입력 데이터 수집 모듈로 송신한다. 희소 입력 데이터 수집 모듈은 컨볼루션 연산 장치에 입력되는 입력 데이터에서, 인덱스 데이터 추출 모듈은 추출한 인덱스 정보를 기초로 희소 입력 데이터의 위치 정보를 판단한 후, 입력 버퍼의 데이터 저장 용량에 기초하여 희소 입력 데이터를 수집한다. 일 예로, 입력 버퍼에 저장될 수 있는 데이터의 개수가 총 12개인 경우, 입력 데이터 내에서 희소 입 력 데이터를 순차적으로 12개를 수집하며, 입력 버퍼에 저장될 수 있는 데이터의 개수가 총 20개인 경우, 입력 데이터 내에서 희소 입력 데이터를 순차적으로 20개를 수집한다. 그리고 이렇게 수집된 희소 입력 데 이터는 입력 버퍼로 송신되어, 입력 버퍼에 임시적으로 저장된다. 이를 도 7과 도 8을 통해 구체적으로 살펴보면, 도 7의 (a)에 도시된 바와 같이 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집하였을 때, 생성되는 출력 데이터의 크기(=idxo,a)가 출력 버퍼의 저장 크기(idxo,max)보다 작 기 때문에, 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집하여도 출력 데이터를 모두 출력 버퍼에 저장할 수 있다. 그러나 도 7의 (b) 도시된 바와 같이 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집하였을 때, 생성되는 출 력 데이터의 크기(=idxo,a)가 출력 버퍼의 저장 크기(idxo,max)보다 크기 때문에, 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집한 경우, 출력 데이터를 모두 출력 버퍼에 저장할 수 없다. 따라서, 이러한 경우 수집한 희 소 입력 데이터에 대해서 모두 연산을 수행할 수 없는 문제점이 발생한다. 따라서, 본 발명에 따른 컨볼루션 연산 장치는 도 7의 (a)에 도시된 바와 같이 출력 버퍼의 저장 크기 저 장 크기(idxo,max)에 기초하여 희소 입력 데이터를 수집하기 때문에, 수집된 희소 입력 데이터가 모두 컨볼루션 연산에 사용될 수 있다. 구체적으로, 컨볼루션 연산 장치의 희소 입력 데이터 수집 모듈은 제1출력 버퍼가 데이터를 저 장할 수 있는 크기와 동일하거나 작은 크기의 데이터가 출력 데이터로 출력 될 수 있도록, 희소 입력 데이터의 수집 크기를 결정할 수 있다. 일 예로, 희소 입력 데이터 수집 모듈은 도 7의 (b)에 도시된 바와 같이 입력 버퍼의 최대 저장 크기 (idxi,max)보다 작은 크기(idx'o,a)만큼 희소 입력 데이터를 수집하여, 출력되는 데이터의 크기가 제1출력 버퍼 의 최대 저장 크기(idxo,max)보다 크지 않도록 한다. 도 8의 (a)에 도시된 바와 같이 n 번째 컨볼루션 연산이 끝나면, n+1번째 컨볼루션 연산 또한 앞서 설명했던 방 식이 그대로 적용되어 컨볼루션 연산이 수행된다. 구체적으로, 희소 입력 데이터의 idx'o,a 인덱스까지 수집한 데이터에 대해 모든 컨볼루션 연산이 끝난 경우, 희 소 입력 데이터 수집 모듈은 다음 연산을 위해 idx'i,a +1 인덱스를 시작점으로 하여 인덱스 idx''i,a까지 이전 방식과 동일한 방식으로 출력 버퍼의 저장 용량의 크기를 넘지 않는 범위에서의 희소 입력 데이터를 수집하게 된다. 그리고 이렇게 수집된 희소 입력 데이터에 대해 컨볼루션 연산 모듈은 컨볼루션 연산을 수행하 고, 컨볼루션 연산이 수행된 출력 데이터는 제1출력 버퍼에 저장되게 된다. 다만, 이러한 방식으로 컨볼루션 연산을 수행하는 경우, 도 8의 (a)와 도 8의 (b)에서 빗금친 영역(A)은 N번째 컨볼루션 연산에서 수집된 희소 입력 데이터에 대한 컨볼루션 연산과 N+1번째 컨볼루션 연산에서 수집된 희소 입력 데이터에 대한 컨볼루션 연산에서 중복적으로 연산이 이루어지는 구간에 해당하므로, 이를 재사용하는 경 우 컨볼루션 연산을 효율성을 높일 수 있다. 이하 도면을 통해 알아보도록 한다. 도 9 내지 도 10은 본 발명의 일 실시예에 따라 출력 데이터를 재사용하는 방법을 설명하기 위한 도면이며, 도 11은 본 발명의 일 실시예에 따라 출력 데이터의 재사용 범위를 산정하는 방법을 설명하기 위한 도면이다. 도 9와 도 10을 참고하면, 컨볼루션 연산을 수행함에 있어서 출력 버퍼의 저장 용량을 고려한 타일(TILE)의 크 기가 6인 경우, 희소 입력 데이터 I0~I5에 대한 출력 데이터는 도 9에 빗금 영역으로 표시한 인덱스 O0~O53의 출력 데이터가 되며, 희소 입력 데이터 I6~I11에 대한 출력 데이터는 도 10에 빗금 영역으로 표시한 인덱스 O16~O70의 출력 데이터가 된다. 따라서, 희소 입력 데이터 I0~I5에 대한 출력 데이터 중 O16~O53인덱스에 대응 되는 출력 데이터는 희소 입력 데이터 I6~I11에 대한 출력 데이터를 연산함에 있어서 중복된 영역(O16~O53)으로 발생하게 된다. 따라서, 이를 고려하여 컨볼루션 연산을 수행하면 보다 효과적으로 연산을 수행할 수 있다. 구체적으로, 도면에 표시된 바와 같이 다음 단계 컨볼루션 연산에서 중복 되게 사용되지 않는 영역(X)은 외부 버퍼(본 발명에서는 제1버퍼가 되거나, 또 다른 버퍼가 될 수 있다)로 저장을 하고, 다음 단계 컨볼루션 연산에서 중복 되게 사용되는 영역(Y)은 제2버퍼에 저장한 후, 다음 단계 컨볼루션 연산을 수행할 때, 제2버퍼에 저장되 어 있는 데이터를 사용하면, 컨볼루션 연산이 수행된 데이터를 재사용하게 되므로 복잡한 연산을 다시 수행할 필요가 없어 보다 효과적으로 컨볼루션 연산을 수행할 수 있는 장점이 존재한다. 도 10을 통해 구체적으로 연산 중복 구간을 산출하는 방법에 대해 설명하면, 입력 - 출력 - 커널과의 맵핑정보 를 기반으로 하여, 입력 버퍼로부터 맵핑 정보에 있는 인덱스 값에 대한 데이터 주소 값을 구하기 위해 수집할 때 사용했던 희소 입력 데이터의 시작 인덱스를 오프셋 값으로 활용하면 중복 구간을 산출할 수 있다. 즉, 도 11의 (b)에 도시된 바와 같이 맵핑 정보에 있는 희소 입력 데이터에 대한 인덱스 값에서 오프셋을 빼 준 값을 입력 버퍼의 주소 값으로 사용하면 입력 버퍼 내에 있는 희소 입력의 위치를 바로 구할 수 있게 된다. 이와 동일하게 희소 출력의 저장 위치 또한, 수집된 희소 입력 데이터에 대해서 생성되는 희소 출력의 시작 인 덱스를 오프셋 값으로 활용하면 희소 출력의 위치를 바로 구할 수 있게 되며, 이러한 방법을 효과적으로 진행하 기 위해 희소 입력 데이터를 새롭게 수집할 때마다, idxo,overlap 구간의 희소 출력 데이터를 다른 더블 버퍼(제2 출력 버퍼)의 시작 주소부터 저장하게 할 수 있다. 이러한 방법으로 중복 구간에 대한 인덱스 값을 산정하면, 복잡한 연산 없이 맵핑 정보만을 활용해서 희소 입력 과 희소 출력의 데이터 재사용을 위한 데이터 주소 값을 용이하게 설정할 수 있는 장점이 존재한다. 지금까지 도면을 통해 본 발명의 구성 및 프로세스에 대해 자세히 알아보았다. 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 방법 및 장치는 희소 데이터 기반의 컨볼루션 연산을 수행함에 있어서, 입력 데이터의 위치 및 출력 버퍼의 크기를 고려하여 규칙을 생성하고, 이를 기초로 컨볼루션 연산을 수행하기 때문에, 불필요한 연산을 줄 일 수 있어 종래 기술보다 빠르게 컨볼루션 연산 을 수행할 수 있는 장점이 존재한다. 또한, 컨불루션 연산의 경우 그 특성상 중첩되는 계산 과정이 많은데, 본 발명에 따른 컨볼루션 연산 방법은 종 래에 수집하였던 입력 데이터의 정보를 다음 연산에서 재사용하므로, 컨볼루션 연산 자체의 연산 속도를 빠르게 증가시킬 수 있는 장점이 존재한다. 또한, 이러한 특징으로 인해 3차원 공간에 존재하는 객체 인식의 속도를 증가시킬 수 있는바, 고차원 자율 주행 에 필수적인 고속 전방 장애물 인식을 효율적으로 수행할 수 있고, 빠르고 정확한 로봇 네비게이션을 위한 RGB- D 기반의 위치 추정도 효율적으로 수행할 수 있는 장점이 존재한다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로세 서, 컨트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨 터, FPA(field programmable array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 운영 체제 상에서 수행되는 하나 이상의 소 프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경"}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터 는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD- ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disK)와 같은 자기-광 매체 (magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도 록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2023-0061531", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범 위에 속한다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11"}
{"patent_id": "10-2023-0061531", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 상세한 설명에서 인용되는 도면을 보다 충분히 이해하기 위하여 각 도면의 간단한 설명이 제공된다. 도 1은 종래 기술에 따라 희소 데이터 기반의 컨볼루션 연산을 수행하는 과정을 설명하기 위한 도면이다. 도 2는 본 발명의 일 실시예에 따라 컨볼루션 연산 장치에 입력되는 입력 데이터의 일 예와 컨볼루션 연산을 수 행하는 커널의 일 예를 도시한 도면이다. 도 3의 (c)는 도 3의 (b)와 같이 입력 데이터에 도 3의 (a)와 같은 3x3 커널이 스트라이딩을 하면서 컨볼루션 연산을 하는 경우 생성되는 출력 데이터의 분포를 도시한 도면이다. 도 4의 (c)는 도 4의 (b)와 같이 입력 데이터에 도 4의 (a)와 같은 3x3 커널이 스트라이딩을 하면서 컨볼루션 연산을 하는 경우 생성되는 출력 데이터의 분포를 도시한 도면이다. 도 5는 출력 데이터의 개수가 출력 버퍼의 저장 용량을 벗어나는 경우 발생하는 문제점을 설명하기 위한 도면이 다. 도 6은 일 실시예에 따른 희소 입력 데이터의 위치 정보에 기초한 컨볼루션 연산 장치 본 발명의 일 실시예에 따른 인공신경망을 이용한 희소 데이터 기반의 컨볼루션 연산 장치의 일부 구성 요소를 도시한 블록도이다. 도 7은 입력 버퍼의 용량에 맞춰 희소 입력 데이터를 수집하는 경우, 출력 데이터를 모두 출력 버퍼에 저장할 수 있는 경우와 저장할 수 없는 경우를 비교하여 도시한 도면이다. 도 8은 일 실시예에 따른 컨볼루션 연산 방법에 따라 N번째 출력 데이터와 N+1번째 출력 데이터가 생성되는 방 법을 설명하기 위한 도면이다. 도 9 내지 도 10은 본 발명의 일 실시예에 따라 출력 데이터를 재사용하는 방법을 설명하기 위한 도면이다.도 11은 본 발명의 일 실시예에 따라 출력 데이터의 재사용 범위를 산정하는 방법을 설명하기 위한 도면이다."}
