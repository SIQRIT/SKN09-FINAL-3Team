{"patent_id": "10-2021-0151133", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0065505", "출원번호": "10-2021-0151133", "발명의 명칭": "인공 지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법", "출원인": "주식회사 커먼컴퓨터", "발명자": "김민현"}}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서에 의해 수행되는 인공지능 실습을 위한 인터랙티브(interactive) 컴퓨팅 서비스 제공방법에 있어서,사용자 클라이언트에 의해, 인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하는 단계;상기 사용자 클라이언트에 의해, 상기 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하는 단계; 및상기 사용자 클라이언트에 의해, 상기 실행 요청을 수신하는 것에 응답하여, 상기 하나의 오픈 소스 코드와 연관된 이미지를 이용하여 생성된 상기 오픈 소스 코드의 실행 결과를 출력하는 단계를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 이미지는, 상기 사용자 클라이언트와 연관된 관리자 노드에 의해 상기 복수의 오픈 소스 코드 중 적어도일부에 기초하여 사전에 빌드(build)된 이미지인, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 사용자 클라이언트에 의해, 상기 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하는 단계는,상기 사용자 클라이언트에 의해, 상기 하나의 오픈 소스 코드에 대한 실행 요청 및 상기 하나의 오픈 소스 코드가 실행되는 경로에 대한 선택을 수신하는 단계를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 하나의 오픈 소스 코드가 실행되는 경로는, 상기 복수의 오픈 소스 코드 중 적어도 일부에 기초하여 사전에 빌드된 복수의 이미지와 연관된 공유 스토리지(shared storage) 및 퍼스널 스토리지(personal storage)를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 공유 스토리지는 상기 사용자 클라이언트가 상기 하나의 오픈 소스 코드를 읽을 수 있도록 구성되고, 상기퍼스널 스토리지는 상기 사용자 클라이언트가 상기 하나의 오픈 소스 코드를 읽거나 또는 쓸 수 있도록 구성되는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법.공개특허 10-2023-0065505-3-청구항 6 제1항에 있어서,상기 사용자 클라이언트에 의해, 상기 실행 요청을 수신하는 것에 응답하여, 상기 하나의 오픈 소스 코드와 연관된 이미지를 이용하여 생성된 상기 오픈 소스 코드의 실행 결과를 출력하는 단계는,서비스 플랫폼에 의해, 상기 실행 요청을 수신하는 것에 응답하여, 상기 오픈 소스 코드를 실행하기 위한 컴퓨팅 리소스 정보를 산출하는 단계;상기 서비스 플랫폼에 의해, 상기 산출된 컴퓨팅 리소스 정보를 기초로 결정된 하나 이상의 작업자 노드로부터상기 실행 결과를 수신하는 단계;상기 서비스 플랫폼에 의해, 상기 수신된 실행 결과를 상기 사용자 클라이언트로 전송하는 단계; 및상기 사용자 클라이언트에 의해, 상기 실행 결과를 출력하는 단계를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,서비스 플랫폼에 의해, 상기 산출된 컴퓨팅 리소스 정보를 기초로 결정된 하나 이상의 작업자 노드로부터 상기실행 결과를 수신하는 단계는,관리자 노드에 의해, 상기 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작업자 노드로 상기 이미지의 실행을 위한 작업을 할당하는 단계; 및상기 관리자 노드에 의해, 상기 하나 이상의 작업자 노드로부터 상기 실행 결과를 수신하는 단계를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 관리자 노드와 연관된 복수의 작업자 노드는 상기 하나 이상의 작업자 노드를 포함하고,상기 관리자 노드에 의해, 상기 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작업자 노드로 상기 이미지의 실행을 위한 작업을 할당하는 단계는,상기 관리자 노드에 의해, 상기 복수의 작업자 노드 각각의 통신 지연, 작업 수행 비용 및 신뢰도 중 적어도 하나를 기초로, 상기 복수의 작업자 노드 중 상기 하나 이상의 작업자 노드로 상기 작업을 할당하는 단계를 포함하는, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항 내지 제8항 중 어느 항에 따른 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법을 컴퓨터에서실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0151133", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 시스템에 있어서,공개특허 10-2023-0065505-4-상기 시스템은,사용자 클라이언트를 포함하고,상기 사용자 클라이언트는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는,인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하고,상기 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하고,상기 실행 요청을 수신하는 것에 응답하여, 상기 하나의 오픈 소스 코드와 연관된 컨테이너를 이용하여 생성된상기 오픈 소스 코드의 실행 결과를 출력하도록 구성된, 인터랙티브 컴퓨팅 서비스 제공 시스템."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따르면, 적어도 하나의 프로세서에 의해 수행되는 인공지능 실습을 위한 인터랙티브 컴퓨 팅 서비스 제공 방법은, 사용자 클라이언트에 의해, 인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하는 단 계, 사용자 클라이언트에 의해, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하는 단계 및 사용자 클라이언트에 의해, 실행 요청을 수신하는 것에 응답하여, 하나의 오픈 소스 코드와 연관된 이미 지를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력하는 단계를 포함한다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 인공 지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법에 관한 것으로, 상세하게는, 인공 지능 관련 프로그래밍 실습을 위한 복수의 오픈 소스 코드 중 실행 요청된 하나의 오픈 소스 코드와 연관된 컨테이너 이미지를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력하는 인터랙티브 컴퓨팅 서비스 제공 방법에 관한 것이다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 소스 코드 호스팅 및 공유 기능을 제공하는 서비스(예를 들어, 'GitHub')를 통해 수많은 오픈소스 프로젝트들이 공유되고 있다. 또한, 이러한 서비스를 통해 개발자들은 소스 코드들을 처음부터 서로 개발할 필 요 없이 기존 소스 코드에 기반하여 새로운 가치를 만들어낼 수 있는 개발업무에만 집중할 수 있게 되었다. 그러나, 한 해 수천 만 개 이상의 새로운 오픈소스 저장소가 생성되는 만큼, 각 오픈소스 프로젝트의 소스 코드 가 실행되는데 필요한 운영체제, 프로그래밍 언어, 라이브러리, 프레임웍 등과 같은 런타임 환경이 더욱 다양해 지고 있다. 특히, 인공지능 또는 머신러닝 관련 프로젝트의 경우, 그 소스 코드 런타임 환경과 잘 호환되도록 구성된 CPU, GPU, 메모리, 메인보드, 냉각장치, 전원장치 등의 다양한 조합에 따른 하드웨어 실행환경까지 고려 해야 한다. 이러한 이유들 때문에, 소스 코드 개발자 또는 소스 코드 프로그래밍 학습자가 소스 코드의 개발 또는 프로그래 밍 실습 자체에 들이는 시간과 노력보다 이를 실행할 수 있게 하는 실행환경 구축에 더 많은 시간과 노력을 소 모해야 한다. 또한, 인공지능(AI) 관련 소스 코드 개발자 또는 소스 코드 프로그래밍 학습자가 직접 실행환경 을 마련하여 머신러닝 작업을 실행하는 것은 많은 비용을 필요로 한다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상기와 같은 문제점을 해결하기 위해 인공 지능 관련 프로그래밍 실습을 위한 복수의 오픈 소스 코드 중 실행 요청된 하나의 오픈 소스 코드와 연관된 컨테이너 이미지를 이용하여 생성된 오픈 소스 코드의 실행 결 과를 출력하는 인터랙티브 컴퓨팅서비스 제공 방법 및 시스템을 제공한다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시예에 따르면, 적어도 하나의 프로세서에 의해 수행되는 인공지능 실습을 위한 인터랙티브 컴 퓨팅 서비스 제공 방법은, 사용자 클라이언트에 의해, 인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하는 단계, 사용자 클라이언트에 의해, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하 는 단계, 및 사용자 클라이언트에 의해, 실행 요청을 수신하는 것에 응답하여, 하나의 오픈 소스 코드와 연관된이미지를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력하는 단계를 포함한다. 일 실시예에 따르면, 이미지는 사용자 클라이언트와 연관된 관리자 노드에 의해 복수의 오픈 소스 코드 중 적어 도 일부에 기초하여 사전에 빌드(build)된 이미지를 포함한다. 일 실시예에 따르면, 사용자 클라이언트에 의해, 실행 요청을 수신하는 것에 응답하여, 하나의 오픈 소스 코드 와 연관된 이미지를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력하는 단계는, 서비스 플랫폼에 의해, 실행 요청을 수신하는 것에 응답하여, 오픈 소스 코드를 실행하기 위한 컴퓨팅 리소스 정보를 산출하는 단계, 서비스 플랫폼에 의해, 산출된 컴퓨팅 리소스 정보를 기초로 결정된 하나 이상의 작업자 노드로부터 실행 결과 를 수신하는 단계, 서비스 플랫폼에 의해, 수신된 실행 결과를 사용자 클라이언트로 전송하는 단계 및 사용자 클라이언트에 의해, 실행 결과를 출력하는 단계를 포함한다. 일 실시예에 따르면, 사용자 클라이언트에 의해, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하는 단계는, 사용자 클라이언트에 의해, 하나의 오픈 소스 코드에 대한 실행 요청 및 하나의 오픈 소스 코드가 실행되는 경로에 대한 선택을 수신하는 단계를 포함한다. 일 실시예에 따르면, 하나의 오픈 소스 코드가 실행되는 경로는, 복수의 오픈 소스 코드 중 적어도 일부에 기초 하여 사전에 빌드된 복수의 이미지와 연관된 공유 스토리지(shared storage) 및 퍼스널 스토리지(personal storage)를 포함한다. 일 실시예에 따르면, 공유 스토리지는 사용자 클라이언트가 하나의 오픈 소스 코드를 읽을 수 있도록 구성되고, 퍼스널 스토리지는 사용자 클라이언트가 하나의 오픈 소스 코드를 읽거나 또는 쓸 수 있도록 구성된다. 일 실시예에 따르면, 컴퓨팅 리소스 정보는 이미지의 실행에 필요한 프로세서의 사양, 그래픽 프로세싱의 지원 여부, 저장 용량 중 적어도 하나에 대한 정보를 포함한다. 일 실시예에 따르면, 서비스 플랫폼에 의해, 산출된 컴퓨팅 리소스 정보를 기초로 결정된 하나 이상의 작업자 노드로부터 실행 결과를 수신하는 단계는, 관리자 노드에 의해, 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작 업자 노드로 이미지의 실행을 위한 작업을 할당하는 단계 및 관리자 노드에 의해, 하나 이상의 작업자 노드로부 터 실행 결과를 수신하는 단계를 포함한다. 일 실시예에 따르면, 관리자 노드와 연관된 복수의 작업자 노드는 하나 이상의 작업자 노드를 포함하고, 관리자 노드에 의해, 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작업자 노드로 컨테이너의 실행을 위한 작업을 할당 하는 단계는, 관리자 노드에 의해, 복수의 작업자 노드 각각의 통신 지연, 작업 수행 비용 및 신뢰도 중 적어도 하나를 기초로, 복수의 작업자 노드 중 하나 이상의 작업자 노드로 작업을 할당하는 단계를 포함한다. 본 개시의 다른 실시예에 따르면, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 방법을 컴퓨터에서 실 행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램이 제공된다. 본 개시의 또 다른 실시예에 따르면, 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스 제공 시스템에 있어서, 시스템은, 사용자 클라이언트를 포함하고, 사용자 클라이언트는 적어도 하나의 프로세서를 포함하고, 적어도 하 나의 프로세서는, 인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하고, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하고, 실행 요청을 수신하는 것에 응답하여, 하나의 오픈 소스 코드와 연관된 컨테이너를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력하도록 구성된, 인터랙티브 컴퓨팅 서비 스 제공 시스템이 제공된다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시예에서, 소스 코드의 개발자 또는 프로그래밍 학습자가 직접 소스 코드의 실행환경을 구 성할 필요 없이, 다양한 노드들로부터 제공되는 자원을 활용하여 소스 코드를 실행하거나 그 실행 결과를 획득 할 수 있다. 본 개시의 다양한 실시예에서, 사용자는 인공지능 관련 프로그래밍 학습 또는 실습에 소요되는 비용을 기존 중 앙화된 클라우드 기반 시스템에 대비하여 상당히 절감할 수 있으며, 머신러닝 작업 관련 소스 코드 개발환경의 구축시간도 절감할 수 있다. 본 개시의 다양한 실시예에서, 사용자는 인터랙티브 컴퓨팅 시스템에 코드 저장소의 링크 주소를 입력하는 것만 으로도 해당 코드 저장소에 저장된 소스 코드를 실행 및/또는 배포할 수 있고, 작업 결과를 실행 및/또는 이용 할 수 있다. 본 개시의 다양한 실시예에서, 인터랙티브 컴퓨팅 시스템의 관리자 노드는 클라이언트 또는 서비스 플랫폼으로 부터의 오픈 소스 실행 요청을 처리하기 위한 다양한 요소들을 고려하여 최적의 작업자 노드를 결정할 수 있다. 본 개시의 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급되지 않은 다른 효과들은 청구범위의 기재로부 터 본 개시에 속하는 기술 분야에서 통상의 지식을 가진 자(이하, '통상의 기술자'라 함)에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 개시의 실시를 위한 구체적인 내용을 첨부된 도면을 참조하여 상세히 설명한다. 다만, 이하의 설명에 서는 본 개시의 요지를 불필요하게 흐릴 우려가 있는 경우, 널리 알려진 기능이나 구성에 관한 구체적 설명은 생략하기로 한다. 첨부된 도면에서, 동일하거나 대응하는 구성요소에는 동일한 참조부호가 부여되어 있다. 또한, 이하의 실시예 들의 설명에 있어서, 동일하거나 대응되는 구성요소를 중복하여 기술하는 것이 생략될 수 있다. 그러나, 구성 요소에 관한 기술이 생략되어도, 그러한 구성요소가 어떤 실시예에 포함되지 않는 것으로 의도되지는 않는다. 본 개시에서 사용되는 용어에 대해 간략히 설명하고, 개시된 실시예에 대해 구체적으로 설명하기로 한다. 본 명세서에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 관련 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 발명의 설명 부분에서 상세히 그 의미를 기재할 것이다. 따라서, 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어 가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시에서, 단수의 표현은 문맥상 명백하게 단수인 것으로 특정하지 않는 한, 복수의 표현을 포함한다. 또한, 복수의 표현은 문맥상 명백하게 복수인 것으로 특정하지 않는 한, 단수의 표현을 포함한다. 본 개시에서, 어떤 부분이 어떤 구성요소를 포함한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성 요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있음을 의미한다. 개시된 실시예의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 후술되어 있는 실시예 들을 참조하면 명확해질 것이다. 그러나, 본 개시는 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 개시가 완전하도록 하고, 본 개시가 통상의 기술 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것일 뿐이다. 본 개시에서, '시스템'은 서버 장치와 클라우드 장치 중 적어도 하나의 장치를 포함할 수 있으나, 이에 한정되 는 것은 아니다. 예를 들어, 시스템은 하나 이상의 서버 장치로 구성될 수 있다. 다른 예로서, 시스템은 하나 이상의 클라우드 장치로 구성될 수 있다. 또 다른 예로서, 시스템은 서버 장치와 클라우드 장치가 함께 구성되어 동작될 수 있다. 본 개시에서, '코드 저장소'는 다양한 개발자들이 개발 또는 생성한 하나 이상의 소스 코드 및/또는 파일을 저 장, 업데이트, 공유 또는 관리하도록 구성된 저장소를 포함할 수 있다. 대안적으로, '코드 저장소'는 코드 저 장소에 포함된 하나 이상의 소스 코드 및/또는 파일 자체를 지칭할 수 있다. 본 개시에서, '이미지(image)'는, 소스 코드에 따른 명령어들을 실행할 수 있는 애플리케이션과 이에 연관된 데 이터(예를 들어, 서버 프로그램, 소스코드 및 라이브러리, 컴파일된 실행 파일 등)을 캡슐화하는 바이너리 데이 터(binary data)를 나타낼 수 있다. 이러한 구성을 갖는 이미지는 런타임 환경에서 독립적으로 실행 가능하며, 이미지가 실행된 결과는 '컨테이너(container)'라고 지칭될 수 있다. 컨테이너는 이미지가 실행되기 위한 최소 한의 요소들을 포함하며, 이미지의 독립적인 배포와 실행을 가능하게 하는 가상머신을 포함할 수 있다. 도 1은 본 개시의 일 실시예에 따라 사용자가 인터랙티브 컴퓨팅 서비스를 이용하는 예시를 나타낸다. 도 시된 바와 같이, 사용자는 사용자 클라이언트(또는, 사용자 단말)을 이용하여 인터랙티브 컴퓨팅 서 비스를 이용할 수 있다. 일 실시예에 따르면, 사용자는 서비스 플랫폼이 제공하는 사용자 인터페이스 를 통해 복수의 오픈 소스 코드를 확인하고, 인공 지능 실습을 위한 오픈 소스 코드를 선택할 수 있 다. 일 실시예에 따르면, 사용자는 선택한 오픈 소스 코드에 대한 실행 요청 버튼을 선택하여, 오픈 소스 코드의 실행 결과(또는, 작업 결과)를 제공받을 수 있다. 이 경우, 오픈 소스 코드에 대 한 실행(또는, 작업)은 사용자 클라이언트가 아닌 오픈 소스 코드의 실행을 위한 별도의 컴퓨팅 장치 (미도시)에 의해 수행될 수 있다. 이 경우, 별도의 컴퓨팅 장치는 선택된 오픈 소스 코드를 실행하기 위 한 컴퓨팅 리소스 정보(예를 들어, 프로세서의 사양, 그래픽 프로세싱의 지원 여부, 저장 용량 등)를 만족하는 컴퓨팅 장치를 지칭할 수 있다. 구체적으로, 사용자가 실행 요청 버튼을 선택하면, 인터랙티브 컴퓨팅 서비스를 제공하는 서비스 플 랫폼은 오픈 소스 코드를 실행하기 위한 컴퓨팅 리소스 정보를 산출할 수 있다. 그리고 나서, 산출된 컴 퓨팅 리소스 정보를 만족하는 컴퓨팅 장치(예를 들어, 작업자 노드)를 결정하고, 결정된 컴퓨팅 장치로 오픈 소 스 코드를 실행하는 작업을 할당할 수 있다. 작업이 할당된 컴퓨팅 장치는 오픈 소스 코드를 실행하 고, 실행 결과는 최종적으로 사용자 클라이언트로 전송됨으로써 사용자에게 제공될 수 있다. 이러한 구성에 의해, 소스 코드의 개발자 또는 사용자가 직접 소스 코드의 실행환경을 구성할 필요 없이, 다양한 노드들로부터 제공되는 자원을 활용하여 소스 코드를 실행하거나 그 실행 결과를 획득할 수 있다. 이에 따라, 사용자는 머신러닝 작업과 관련된 실습 또는 프로그래밍에 소요되는 컴퓨팅 자원을 이용하는 비용을 기존 중앙화된 클라우드 대비 상당히 절감할 수 있으며, 머신러닝 작업 관련 소스 코드 개발환경의 구축 시간도 절감할 수 있다. 또한, 사용자는 머신러닝 작업과 관련된 컴퓨팅 자원의 설정과 할당에 대한 전문 지식이 없이도 해당 작업과 관련된 실습과 프로그래밍 학습을 효과적으로 실행할 수 있다. 일 실시예에 따르면, 사용자는 사용자 인터페이스를 통해 오픈 소스 코드가 실행되는 경로를 선 택할 수 있다. 여기서, 오픈 소스 코드가 실행되는 경로는, 공유 스토리지 및 퍼스널 스토리지를 포함할 수 있다. 여기서, 공유 스토리지는 복수의 사용자가 오픈 소스 코드 또는 오프 소스 코드의 실행 결과가 저장 되는 저장소를 의미하며, 공유 스토리지에 저장된 오픈 소스 코드 또는 그 실행 결과에 대해서는 수정 또는 변 경하지 않고 참조만 가능하다. 반면, 퍼스널 스토리지는 특정 사용자에게 할당된 코드 저장소로서, 해당 사용자 가 필요에 따라 퍼스널 스토리지에 저장된 오픈 소스 코드 또는 그 실행 결과를 수정 또는 변경할 수 있다. 따 라서, 사용자가 오픈 소스 코드가 실행되는 경로를 공유 스토리지로 선택하는 경우, 사용자 클라이언 트는 공유 스토리지에 저장된 오픈 소스 코드를 읽을 수 있다. 즉, 사용자는 사용자 클라이언 트를 통해 오픈 소스 코드를 변경할 수 없다. 반면, 사용자가 오픈 소스 코드가 실행되는 경로를 퍼스널 스토리지로 선택하는 경우, 사용자 클라이언트는 오픈 소스 코드를 읽거나 변경할 수 있다. 즉, 사용자는 사용자 클라이언트를 통해 오픈 소스 코드의 일부를 변경하고, 변경된 사 항이 반영된 실행 결과를 제공받을 수 있다. 일 실시예에 따르면, 사용자 인터페이스를 통해 제공되는 복수의 오픈 소스 코드의 이미지(예를 들어, 컨 테이너 이미지 또는 가상화 노드의 이미지)는 사전에 빌드되어 저장될 수 있다. 예를 들어, 인터랙티브 컴퓨팅 서비스를 제공하는 관리자 노드는 서비스 플랫폼을 통해 제공하는 복수의 오픈 소스 코드의 이미지를 별도의 빌 드 서버를 통해 사전에 빌드하고, 빌드된 이미지를 저장할 수 있다. 여기서, 이미지란 소스 코드뿐 아니라, 소스 코드를 실행하기 위해 필요한 모든 파일과 설정값을 포함하는 것으로, 이미지를 실행(run)하는 경우, 소스 코드에 대한 작업 결과인 컨테이너가 생성될 수 있다. 도 2는 본 개시의 일 실시예에 따라 인공지능 실습을 위한 인터랙티브 컴퓨팅 시스템의 예시를 나타낸다. 도시 된 바와 같이, 인터랙티브 컴퓨팅 시스템은 인터랙티브 컴퓨팅 서비스를 제공하기 위하여 서비스 플랫폼, 관리자 노드, 컨테이너 실행 환경 및 노드 풀을 포함할 수 있다. 또한, 네트워크는 서비 스 플랫폼, 관리자 노드, 컨테이너 실행 환경 및/또는 노드 풀 사이의 통신이 가능하도록 구성될 수 있다. 일 실시예에 따르면, 서비스 플랫폼은 코드 저장소의 링크 주소(예를 들면, 사용자 또는 클라이언트로부터 수신한 URL 주소 등)을 기반으로, 코드 저장소에 포함된 인공지능 관련 소스 코드를 배포하기 위해 필요한 시스 템 자원의 사양을 추출하고, 추출된 사양에 맞게 컴퓨팅 시스템의 자원을 할당하여 해당 소스 코드를 배포할 수 있는 MLaaS(Machine Learning as a Service) 플랫폼을 포함할 수 있다. 예를 들어, 서비스 플랫폼은 사 용자 클라이언트에 의해 선택된 코드 저장소에 포함된 소스 코드를 분석하여, 소스 코드와 연관된 작업을 실행 하기 위하여 필요한 컴퓨팅 리소스 정보를 산출하고, 산출된 컴퓨팅 리소스 정보를 관리자 노드로 전송할 수 있다. 여기서, 컴퓨팅 리소스 정보는, 소스 코드와 연관된 작업을 실행하기 위해 필요한 프로세서의 사양, 그래픽 프로세싱의 지원 여부, 저장 용량 등을 포함할 수 있다. 또한, 소스 코드와 연관된 작업은 소스 코드와 연관된 이미지를 실행(run)하여 컨테이너를 생성하는 것을 포함할 수 있다. 이러한 구성에 의해, 사용자는 인 터랙티브 컴퓨팅 시스템에 코드 저장소의 링크 주소를 입력하는 것만으로도 해당 코드 저장소에 저장된 소스 코 드를 실행 및/또는 배포할 수 있고, 작업 결과를 실행 및/또는 이용할 수 있다. 일 실시예에 따르면, 관리자 노드는 서비스 플랫폼의 작업 요청에 따라, 노드 풀에 포함된 하나 이상의 작업자 노드로 소스 코드에 대한 작업을 할당할 수 있다. 예를 들어, 관리자 노드는 서비스 플랫 폼으로부터 수신한 컴퓨팅 리소스 정보를 충족하는 복수의 작업자 노드를 결정하고, 복수의 작업자 노드 각각의 통신 지연, 작업 수행 비용 및 신뢰도 등에 기초하여, 복수의 작업자 노드 중 하나 이상의 작업자 노드 로 소스 코드에 대한 작업을 할당할 수 있다. 다른 예를 들어, 관리자 노드는 서비스 플랫폼으로부 터 수신한 소스 코드에 대한 정보에 기초하여, 소스 코드와 연관된 작업을 실행하기 위하여 필요한 컴퓨팅 리소 스 정보를 산출하고, 산출된 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작업자 노드로 작업을 할당할 수 있다. 또 다른 예를 들어, 관리자 노드는 사용자 클라이언트의 선택에 따라, 복수의 작업자 노드 중 하나 이상의 작업자 노드로 소스 코드에 대한 작업을 할당할 수 있다. 한편, 하나 이상의 작업자 노드가 관리자 노 드로부터 할당된 작업을 수행할 수 없는 경우, 관리자 노드는 복수의 작업자 중 다른 작업자 노드로 해당 작업을 재할당할 수 있다. 일 실시예에 따르면, 노드 풀에 포함된 하나 이상의 작업자 노드는 관리자 노드로부터 할당된 작업을 수행할 수 있다. 예를 들어, 하나 이상의 작업자 노드는 컨테이너 기반의 런타임 실행 환경에서 할당된 작업을 수행할 수 있다. 그리고 나서, 관리자 노드는 하나 이상의 작업자 노드로부터 수행한 작업의 작업 결과에 대한 정보를 수신하고, 수신된 작업 결과에 대한 정보 중 적어도 일부를 서비스 플랫폼으로 전송할 수 있 다. 이 경우, 서비스 플랫폼은 관리자 노드로부터 수신한 작업 결과에 대한 정보 중 적어도 일부를 다시 사용자 클라이언트로 전송하여, 작업 결과를 확인 또는 실행할 수 있는 사용자 인터페이스가 사용자 클라 이언트를 통해 출력되도록 할 수 있다. 일 실시예에 따르면, 관리자 노드는 노드 풀에 포함된 복수의 작업자 노드 각각의 활동 내역에 기초 하여 복수의 작업자 노드 각각의 신뢰도를 결정하거나 업데이트할 수 있다. 예를 들어, 관리자 노드는, 할당된 작업을 수행한 작업자 노드의 신뢰도가 상승하도록 작업자 노드의 신뢰도를 업데이트하는 반면, 할당된 작업을 수행하지 않거나 또는 못한 작업자 노드의 신뢰도가 하락하도록 작업자 노드의 신뢰도를 업데이트 할 수 있다. 다른 예를 들어, 노드 풀에 포함된 복수의 작업자 노드 각각은 정상적으로 동작하고 있음을 알리기 위한 메시지를 주기적으로 관리자 노드로 전송할 수 있다. 이 경우, 관리자 노드는 메시지를 일정 기간 이상 전송하지 않는 작업자 노드의 신뢰도가 하락하도록 작업자 노드의 신뢰도를 업데이트 할 수 있다. 노 드 풀에 포함된 복수의 작업자 노드 각각의 신뢰도는 관리자 노드 및/또는 사용자 클라이언트가 작업 을 할당할 작업자 노드를 선택하는 데 있어서 고려될 수 있다. 예를 들어, 관리자 노드는 복수의 작업자 노드 중 신뢰도가 일정한 기준치보다 높은 하나 이상의 작업자 노드에 작업을 할당할 수 있다. 이러한 구성에 의해, 인터랙티브 컴퓨팅 시스템의 관리자 노드는 클라이언트 또는 서비스 플랫폼으로부터 의 작업 요청을 처리하기 위한 최적의 작업자 노드를 결정하기 위해, 다양한 요소들을 고려할 수 있다. 다양한요소들에 따라 결정된 작업자 노드의 신뢰도는 결국 클라이언트가 자신의 요청을 처리할 노드를 선택함에 있어 서 중요한 요소가 되며, 신뢰도가 낮은 작업자 노드는 작업을 정상적으로 할당받지 못하게 된다. 이에 따라, 시스템 내에서 각 자원 제공자 노드 또는 작업자 노드들은 자신의 신뢰도 향상을 위해 작업을 수행하도록 유도 할 수 있다. 도 2는 인공지능 실습을 위한 인터랙티브 컴퓨팅 서비스를 제공하기 위해, 서비스 플랫폼, 관리자 노드 , 컨테이너 실행 환경 및 노드 풀이 네트워크를 통해 연결된 구성을 도시하고 있으나, 이 에 한정되지 않는다. 예를 들어, 일부 구성 요소가 생략되거나 다른 구성 요소가 더 추가될 수 잇다. 또한, 도 1에서는 3개의 작업자 노드가 노드 풀에 포함된 것으로 도시되어 있으나, 이에 한정되지 않으며, 상이 한 수의 작업자 노드가 노드 풀에 포함될 수 있다. 도 3은 본 개시의 일 실시예에 따라 코드 저장소와 연동하여 인터랙티브 컴퓨팅 서비스를 제공하기 위하여, 인 터랙티브 컴퓨팅 시스템이 복수의 사용자 클라이언트(310_1, 310_2, 310_3)과 통신 가능하도록 연결된 구 성을 나타내는 개요도이다. 인터랙티브 컴퓨팅 시스템은 인터랙티브 컴퓨팅 서비스를 제공할 수 있는 시 스템(들)을 포함할 수 있다. 일 실시예에 따르면, 인터랙티브 컴퓨팅 시스템은 인터랙티브 컴퓨팅 서비스 와 관련된 컴퓨터 실행 가능한 프로그램(예를 들어, 다운로드 가능한 어플리케이션) 및 데이터를 저장, 제공 및 실행할 수 있는 하나 이상의 서버 장치 및/또는 데이터베이스, 또는 클라우드 컴퓨팅 서비스 기반의 하나 이상 의 분산 컴퓨팅 장치 및/또는 분산 데이터베이스를 포함할 수 있다. 예를 들어, 인터랙티브 컴퓨팅 시스템 은 인터랙티브 컴퓨팅 서비스를 제공하기 위한 별도의 시스템(예를 들어, 서버, 컴퓨팅 장치)들을 포함할 수 있다. 다른 예에서, 인터랙티브 컴퓨팅 시스템은, 도 2에 도시된 바와 같은, 네트워크를 통해 연결된 서비스 플랫폼, 관리자 노드, 노드 풀, 컨테이너 허브 등을 포함할 수 있다. 복수의 사용자 클라이언트(310_1, 310_2, 310_3)는, 네트워크를 통해, 관리자 노드(예를 들어, 도 2의 220)와 통신할 수 있다. 사용자는, 사용자 클라이언트(310_1, 310_2, 310_3)를 통해 서비스 플랫폼에 접속한 뒤, 코드 저장소에 저장된 소스 코드를 선택할 수 있다. 사용자가 사용자 클라이언트(310_1, 310_2, 310_3)를 이용해서 소스 코드를 선택하면, 관리자 노드는, 노드 풀(예를 들어, 도 2의 240)에서 사용자가 선택한 소스 코 드를 실행하기 위해서 필요한 조건(예를 들어, 컴퓨팅 리소스 정보)을 만족시키는 작업자 노드를 검색할 수 있 다. 소스 코드를 실행할 수 있는 작업자 노드가 검색되면 해당 노드를 통해 소스 코드의 실행을 진행하고, 사 용자는 사용자 클라이언트(310_1, 310_2, 310_3)를 통해 소스 코드의 실행 결과를 확인할 수 있다. 인터랙티브 컴퓨팅 시스템에 의해 제공되는 인터랙티브 컴퓨팅 서비스는 복수의 사용자 클라이언트(310_1, 310_2, 310_3)의 각각에 설치된 인터랙티브 컴퓨팅 서비스를 위한 어플리케이션 등을 통해 사용자에게 제공될 수 있다. 대안적으로, 사용자 클라이언트(310_1, 310_2, 310_3)는 내부에 저장된 인터랙티브 컴퓨팅 서비스 프 로그램/알고리즘을 이용하여 소스 코드 분석, 컴퓨팅 리소스 정보 산출 등의 작업을 처리할 수 있다. 이 경우, 사용자 클라이언트(310_1, 310_2, 310_3)은 인터랙티브 컴퓨팅 시스템과 통신하지 않고 소스 코드 분석, 컴퓨팅 리소스 정보 산출 등의 작업을 직접 처리할 수 있다. 복수의 사용자 클라이언트(310_1, 310_2, 310_3)는 네트워크를 통해 인터랙티브 컴퓨팅 시스템과 통 신할 수 있다. 네트워크는 복수의 사용자 클라이언트(310_1, 310_2, 310_3)와 인터랙티브 컴퓨팅 시스템 사이의 통신이 가능하도록 구성될 수 있다. 네트워크는 설치 환경에 따라, 예를 들어, 이더넷 (Ethernet), 유선 홈 네트워크(Power Line Communication), 전화선 통신 장치 및 RS-serial 통신 등의 유선 네 트워크, 이동통신망, WLAN(Wireless LAN), Wi-Fi, Bluetooth 및 ZigBee 등과 같은 무선 네트워크 또는 그 조합 으로 구성될 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통 신망, 유선 인터넷, 무선 인터넷, 방송망, 위성망 등)을 활용하는 통신 방식뿐 아니라 사용자 클라이언트 (310_1, 310_2, 310_3) 사이의 근거리 무선 통신 역시 포함될 수 있다. 도 3에서 사용자 클라이언트(310_1, 310_2, 310_3)의 예로서 PC 단말이 도시되었으나, 이에 한정되지 않으며, 사용자 클라이언트(310_1, 310_2, 310_3)는 유선 및/또는 무선 통신이 가능한 임의의 컴퓨팅 장치일 수 있다. 예를 들어, 사용자 클라이언트는, 스마트폰, 휴대폰, 컴퓨터, 노트북, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC 등을 포함할 수 있다. 또한, 도 2에는 3개의 사용자 클라이언트 (310_1, 310_2, 310_3)가 네트워크를 통해 인터랙티브 컴퓨팅 시스템과 통신하는 것으로 도시되어 있 으나, 이에 한정되지 않으며, 상이한 수의 사용자 클라이언트가 네트워크를 통해 인터랙티브 컴퓨팅 시스 템과 통신하도록 구성될 수도 있다. 일 실시예에서, 인터랙티브 컴퓨팅 시스템은 사용자 클라이언트(310_1, 310_2, 310_3)에서 동작하는 인터 랙티브 컴퓨팅 서비스를 위한 어플리케이션 등을 통해 사용자 클라이언트(310_1, 310_2, 310_3)로부터 데이터 (예를 들어, 코드 저장소의 링크 주소, 코드 저장소에 포함된 소스 코드 등)를 수신할 수 있다. 또한, 인터랙 티브 컴퓨팅 시스템은 작업 결과에 대한 정보를 사용자 클라이언트(310_1, 310_2, 310_3)로 전송하여, 사 용자 클라이언트(310_1, 310_2, 310_3)가 작업 결과를 실행할 수 있는 사용자 인터페이스를 출력하도록 할 수 있다. 사용자 클라이언트(310_1, 310_2, 310_3)는 인터랙티브 컴퓨팅 시스템을 이용하여 머신러닝 작업을 운용하거나 인공지능 실습을 실행하는 경우, 운용 또는 실습 비용을 절감할 수 있고, 머신러닝 개발환경 구축시 간을 절감할 수 있다. 도 4는 본 개시의 일 실시예에 따라 관리자 노드가 이미지를 빌드(build)하는 예시를 나타낸다. 도 시된 바와 같이, 관리자 노드는 도커 파일(docker file)을 이용하여 빌드 서버를 통해 이미지 를 빌드할 수 있다. 예를 들어, 관리자 노드는 코드 저장소에 저장된 소스 코드의 도커 파일을 이용하여 빌드 서버를 통해 이미지를 빌드할 수 있다. 여기서, 도커 파일이란, 이미지를 빌드하기 위해 필요한 패키지, 소스 코드, 스크립트 등이 텍스트로 기록된 하나의 파일을 지칭할 수 있다. 예 를 들어, 도커 파일에 인공지능 실습과 연관된 수업 요구사항이 텍스트로 기록될 수 있다. 일 실시예에 따르면, 관리자 노드는 빌드된 이미지를 푸쉬(push)하여 컨테이너 허브에 저장할 수 있다. 여기서, 이미지란 컨테이너를 생성하기 위하여 이용되는 파일을 지칭할 수 있다. 관리자 노드 는 컨테이너 허브에 저장된 복수의 이미지 중 사용자가 서비스 플랫폼(예를 들어, 도 2의 210)을 통해 선 택한 소스 코드의 이미지에 대한 실행(run)을 노드 풀(예를 들어, 도 2의 240)에 포함된 하나 이상의 작업자 노 드에 할당할 수 있다. 도 5는 본 개시의 일 실시예에 따른 노드 풀의 구성을 나타내는 불록도이다. 도시된 바와 같이, 노드 풀 은 실행 서버와 복수의 작업자 노드를 포함할 수 있다. 실행 서버는, 사용자가 서비스 플 랫폼(예를 들어, 도 2의 210)을 통해 선택한 소스 코드에 대한 작업을 수행하기 위하여 소스 코드를 복제할 수 있다. 그리고 나서, 실행 서버는 복수의 작업자 노드 중 선택된 소스 코드에 대한 작업이 할당된 작 업자 노드에서 해당 소스 코드가 실행되도록 노드 풀을 관리할 수 있다. 일 실시예에 따르면, 복수의 작업자 노드 각각은, 중앙 집중식 관리 시스템 대신에, 상호 연결된 각각의 작업자 노드들이 서로 간에 자원을 공유하는 P2P(peer-to-peer) 네트워크 시스템의 구조로 구성될 수 있다. 이 에 따라, 관리자 노드에 의하여 작업이 할당된 작업자 노드들은 서로 연결될 수 있다. 이와 같이, 연결된 작업 자 노드들은 컨테이너화되어 존재하는 소스 코드가 해당 작업자 노드들에 다운로드되어 바로 실행될 수 있는 환 경을 제공하며, 사용자는 작업자 노드들로부터 소스 코드의 실행 결과를 제공받을 수 있다. 도 6은 본 개시의 일 실시예에 따른 컨테이너 실행 환경의 구성을 나타내는 블록도이다. 일 실시예에 따 르면, 컨테이너 실행 환경은 코드 저장소에 저장된 소스 코드를 기초로 빌드된 이미지(예를 들어, 도 4의 440)가 저장된 컨테이너 허브를 포함할 수 있다. 또한, 컨테이너 실행 환경은 스토리지 (storage)(610, 620)와 연결될 수 있다. 여기서, 스토리지(610, 620)란 서비스 플랫폼(예를 들어, 도 2의 210)을 통해 사용자에게 제공되는 복수의 인공지능 실습 각각과 관련하여 필요한 데이터 셋(예를 들어, 이미지 를 실행(run)하여 생성된 컨테이너)이 저장되는 영역을 지칭할 수 있다. 구체적으로, 사용자가 서비스 플랫폼(예를 들어, 도 2의 210)에 로그인하여 인공지능 실습에 참여하게 되면, 예 를 들어, 쿠버네티스(kubernetes) 컨테이너로 구현되어 있는 가상 머신(virtual machine)이 생성되고, 사용자는 해당 가상 머신에 접근하여 인공지능 실습을 수행할 수 있다. 이 때, 공유 스토리지 또는 개별 스토리지 는 생성된 가상 머신에 마운트 되어, 사용자는 공유 스토리지 또는 개별 스토리지 각각에 저장 된 데이터 셋을 이용하여 인공지능 실습을 수행할 수 있다. 예를 들어, 공유 스토리지는 읽기 전용으로 가상 머신에 마운트 될 수 있다. 이 경우, 사용자는 공유 스토리지에 저장된 데이터 셋을 참조할 수 있을 뿐이고, 해당 데이터 셋을 변경할 수 없다. 다른 예를 들어, 개별 스토리지는 읽기/쓰기 모두가 가능하도 록 가상 머신에 마운트 될 수 있다. 이 경우, 사용자는 개별 스토리지에 데이터를 추가하거나, 이미 저장 된 데이터 셋을 변경할 수 있고, 이와 같이 추가된 데이터 또는 변경된 데이터 셋은 사용자가 서비스 플랫폼에 서 로그아웃하여 쿠버네티스 컨테이너가 소멸되더라도, 개별 스토리지에 영속적으로 남아있게 된다. 일 실시예에 따르면, 사용자는 서비스 플랫폼을 통해 소스 코드에 관련된 작업 실행을 요청할 때(즉, 해당 소스 코드와 연관된 이미지를 실행(run)하여 컨테이너를 생성할 때), 스토리지의 경로를 설정할 수 있다. 예를 들어, 사용자는 소스 코드에 관련된 작업 실행을 요청할 때, 생성되는 컨테이너가 저장되는 스토리지의 경로를 공유 스토리지 또는 개별 스토리지로 설정할 수 있다.도 7은 본 개시의 일 실시예에 따른 인터랙티브 컴퓨팅 서비스 제공 방법을 나타내는 흐름도이다. 사용자 클라이언트는 코드 저장소에 대한 정보를 서비스 플랫폼에 제공할 수 있다(S712). 여기서, 코드 저장소에 대한 정보는, 사용자에 의해 선택된 코드 저장소의 링크 주소(예를 들면, URL 주소), 코드 저장소에 포함된 파일 및/ 또는 소스 코드 또는 그 링크 주소를 포함할 수 있다. 서비스 플랫폼은 코드 저장소에 포함된 파일 및/또는 소 스 코드를 분석하여, 소스 코드와 연관된 작업을 실행하기 위해 필요한 컴퓨팅 리소스 정보를 산출하고(S714), 산출한 컴퓨팅 리소스 정보를 관리자 노드로 전송할 수 있다(S716). 관리자 노드는 노드 풀에 포함된 복수의 작업자 노드 중 수신한 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작 업자 노드를 결정할 수 있다(S718). 관리자 노드는 단계(S718)에서 결정한 하나 이상의 작업자 노드에 작업을 할당할 수 있다(S722). 노드 풀에 포함된 복수의 작업자 노드 중 작업이 할당된 하나 이상의 작업자 노드는 할 당된 작업을 수행하고(S724), 작업 결과에 대한 정보를 관리자 노드에 제공할 수 있다(S726). 관리자 노드는 작업자 노드로부터 수신한 작업 결과에 대한 정보를 서비스 플랫폼에 제공하고(S728), 서비스 플랫폼은 사용자 클라이언트에 작업 결과를 출력하기 위한 사용자 인터페이스(예를 들어, 작업 결과의 '실행' 버튼)을 생성하도 록 명령할 수 있다(S732). 즉, 사용자가 사용자 클라이언트를 통해 코드 저장소에 포함된 하나의 소스 코드를 선택하면, 사용자는 방법에 따라 생성된 소스 코드의 실행 결과를 확인할 수 있는 사용자 인터페이스를 제 공받을 수 있다. 이와 같이 제공받은 사용자 인터페이스 상에서 사용자가 실행 버튼을 선택하는 경우, 사용자 가 선택한 소스 코드가 실행된 결과가 곧바로 출력된다. 도 8은 본 개시의 다른 실시예에 따른 인터랙티브 컴퓨팅 서비스 제공 방법을 나타내는 흐름도이다. 방법 은 사용자 클라이언트(또는, 사용자 단말)의 적어도 하나의 프로세서에 의해 수행될 수 있다. 도시된 바 와 같이, 방법은 사용자 클라이언트에 의해, 인공지능 실습을 위한 복수의 오픈 소스 코드를 출력하는 단 계(S810)로 개시될 수 있다. 그리고 나서, 사용자 클라이언트에 의해, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하고(S820), 실행 요청을 수신하는 것에 응답하여, 하나의 오픈 소스 코드와 연관된 이미지를 이용하여 생성된 오픈 소스 코드의 실행 결과를 출력할 수 있다(S830). 여기서, 사용자 클라 이언트에 의해, 복수의 오픈 소스 코드 중 하나의 오픈 소스 코드에 대한 실행 요청을 수신하는 것(S820)은, 사 용자 클라이언트로부터 코드 저장소에 대한 정보를 수신 받는 것(예를 들어, 도 7의 S712)과 대응될 수 있다. 또한, 이미지는 사용자 클라이언트와 연관된 관리자 노드에 의해 복수의 오픈 소스 코드 중 적어도 일부에 기초 하여 사전에 빌드(build)된 이미지를 포함할 수 있다. 일 실시예에 따르면, 서비스 플랫폼에 의해, 실행 요청을 수신하는 것에 응답하여, 오픈 소스 코드를 실행하기 위한 컴퓨팅 리소스 정보를 산출할 수 있다. 그리고 나서, 서비스 플랫폼에 의해, 산출된 컴퓨팅 리소스 정보 를 기초로 결정된 하나 이상의 작업자 노드로부터 실행 결과를 수신하고, 수신된 실행 결과를 사용자 클라이언 트로 전송하고, 사용자 클라이언트는 수신한 실행 결과를 출력할 수 있다. 여기서, 컴퓨팅 리소스 정보는 이미 지의 실행에 필요한 프로세서의 사양, 그래픽 프로세싱의 지원 여부, 저장 용량 중 적어도 하나에 대한 정보를 포함할 수 있다. 일 실시예에 따르면, 사용자 클라이언트에 의해, 하나의 오픈 소스 코드에 대한 실행 요청 및 하나의 오픈 소스 코드가 실행되는 경로에 대한 선택을 수신할 수 있다. 여기서, 하나의 오픈 소스 코드가 실행되는 경로는, 복 수의 오픈 소스 코드 중 적어도 일부에 기초하여 사전에 빌드된 복수의 이미지와 연관된 공유 스토리지(shared storage) 및 퍼스널 스토리지(personal storage)를 포함할 수 있다. 또한, 공유 스토리지는 사용자 클라이언트 가 하나의 오픈 소스 코드를 읽을 수 있도록 구성되고, 퍼스널 스토리지는 사용자 클라이언트가 하나의 오픈 소 스 코드를 읽거나 또는 쓸 수 있도록 구성될 수 있다. 일 실시예에 따르면, 관리자 노드에 의해, 컴퓨팅 리소스 정보를 충족하는 하나 이상의 작업자 노드로 이미지의 실행을 위한 작업을 할당할 수 있다. 그리고 나서, 관리자 노드에 의해, 하나 이상의 작업자 노드로부터 실행 결과를 수신할 수 있다. 추가적으로, 관리자 노드와 연관된 복수의 작업자 노드는 하나 이상의 작업자 노드를 포함하고, 관리자 노드에 의해, 복수의 작업자 노드 각각의 통신 지연, 작업 수행 비용 및 신뢰도 중 적어도 하 나를 기초로, 복수의 작업자 노드 중 하나 이상의 작업자 노드로 작업을 할당할 수 있다. 상술한 인터랙티브 컴퓨팅 서비스 제공 방법은 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장 된 컴퓨터 프로그램으로 제공될 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또 는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트 워크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD 와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 본 개시의 방법, 동작 또는 기법들은 다양한 수단에 의해 구현될 수도 있다. 예를 들어, 이러한 기법들은 하드 웨어, 펌웨어, 소프트웨어, 또는 이들의 조합으로 구현될 수도 있다. 본원의 개시와 연계하여 설명된 다양한 예시적인 논리적 블록들, 모듈들, 회로들, 및 알고리즘 단계들은 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양자 의 조합들로 구현될 수도 있음을 통상의 기술자들은 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 대 체를 명확하게 설명하기 위해, 다양한 예시적인 구성요소들, 블록들, 모듈들, 회로들, 및 단계들이 그들의 기능 적 관점에서 일반적으로 위에서 설명되었다. 그러한 기능이 하드웨어로서 구현되는지 또는 소프트웨어로서 구 현되는지의 여부는, 특정 애플리케이션 및 전체 시스템에 부과되는 설계 요구사항들에 따라 달라진다. 통상의 기술자들은 각각의 특정 애플리케이션을 위해 다양한 방식들로 설명된 기능을 구현할 수도 있으나, 그러한 구현 들은 본 개시의 범위로부터 벗어나게 하는 것으로 해석되어서는 안된다. 하드웨어 구현에서, 기법들을 수행하는 데 이용되는 프로세싱 유닛들은, 하나 이상의 ASIC들, DSP들, 디지털 신 호 프로세싱 디바이스들(digital signal processing devices; DSPD들), 프로그램가능 논리 디바이스들 (programmable logic devices; PLD들), 필드 프로그램가능 게이트 어레이들(field programmable gate arrays; FPGA들), 프로세서들, 제어기들, 마이크로제어기들, 마이크로프로세서들, 전자 디바이스들, 본 개시에 설명된 기능들을 수행하도록 설계된 다른 전자 유닛들, 컴퓨터, 또는 이들의 조합 내에서 구현될 수도 있다. 따라서, 본 개시와 연계하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, DSP, ASIC, FPGA나 다른 프로그램 가능 논리 디바이스, 이산 게이트나 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본원에 설명된 기능들을 수행하도록 설계된 것들의 임의의 조합으로 구현되거나 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수도 있지만, 대안으로, 프로세서는 임의의 종래의 프로세서, 제어기, 마이크로 제어기, 또는 상태 머신일 수도 있다. 프로세서는 또한, 컴퓨팅 디바이스들의 조합, 예를 들면, DSP와 마이크 로프로세서, 복수의 마이크로프로세서들, DSP 코어와 연계한 하나 이상의 마이크로프로세서들, 또는 임의의 다 른 구성의 조합으로서 구현될 수도 있다. 펌웨어 및/또는 소프트웨어 구현에 있어서, 기법들은 랜덤 액세스 메모리(random access memory; RAM), 판독 전 용 메모리(read-only memory; ROM), 비휘발성 RAM(non-volatile random access memory; NVRAM), PROM(programmable read-only memory), EPROM(erasable programmable read-only memory), EEPROM(electrically erasable PROM), 플래시 메모리, 컴팩트 디스크(compact disc; CD), 자기 또는 광학 데이 터 스토리지 디바이스 등과 같은 컴퓨터 판독가능 매체 상에 저장된 명령들로서 구현될 수도 있다. 명령들은 하나 이상의 프로세서들에 의해 실행 가능할 수도 있고, 프로세서(들)로 하여금 본 개시에 설명된 기능의 특정 양태들을 수행하게 할 수도 있다. 본 개시의 앞선 설명은 통상의 기술자들이 본 개시를 행하거나 이용하는 것을 가능하게 하기 위해 제공된다. 본 개시의 다양한 수정예들이 통상의 기술자들에게 쉽게 자명할 것이고, 본원에 정의된 일반적인 원리들은 본 개시의 취지 또는 범위를 벗어나지 않으면서 다양한 변형예들에 적용될 수도 있다. 따라서, 본 개시는 본원에 설명된 예들에 제한되도록 의도된 것이 아니고, 본원에 개시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위가 부여되도록 의도된다. 비록 예시적인 구현예들이 하나 이상의 독립형 컴퓨터 시스템의 맥락에서 현재 개시된 주제의 양태들을 활용하 는 것을 언급할 수도 있으나, 본 주제는 그렇게 제한되지 않고, 오히려 네트워크나 분산 컴퓨팅 환경과 같은 임 의의 컴퓨팅 환경과 연계하여 구현될 수도 있다. 또 나아가, 현재 개시된 주제의 양상들은 복수의 프로세싱 칩 들이나 디바이스들에서 또는 그들에 걸쳐 구현될 수도 있고, 스토리지는 복수의 디바이스들에 걸쳐 유사하게 영 향을 받게 될 수도 있다. 이러한 디바이스들은 PC들, 네트워크 서버들, 및 핸드헬드 디바이스들을 포함할 수도 있다."}
{"patent_id": "10-2021-0151133", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 명세서에서는 본 개시가 일부 실시예들과 관련하여 설명되었지만, 본 발명이 속하는 기술분야의 통상의 기술 자가 이해할 수 있는 본 개시의 범위를 벗어나지 않는 범위에서 다양한 변형 및 변경이 이루어질 수 있다는 점 을 알아야 할 것이다. 또한, 그러한 변형 및 변경은 본 명세서에서 첨부된 특허청구의 범위 내에 속하는 것으 로 생각되어야 한다.부호의 설명 110: 사용자 120: 사용자 클라이언트 130: 사용자 인터페이스"}
{"patent_id": "10-2021-0151133", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따라 사용자가 인터랙티브 컴퓨팅 서비스를 이용하는 예시를 나타낸다. 도 2는 본 개시의 일 실시예에 따라 인공지능 실습을 위한 인터랙티브 컴퓨팅 시스템의 예시를 나타낸다. 도 3은 본 개시의 일 실시예에 따라 코드 저장소와 연동하여 인터랙티브 컴퓨팅 서비스를 제공하기 위하여, 서 비스 플랫폼이 복수의 사용자 클라이언트과 통신 가능하도록 연결된 구성을 나타내는 개요도이다. 도 4는 본 개시의 일 실시예에 따라 관리자 노드가 이미지를 빌드(build)하는 예시를 나타낸다. 도 5는 본 개시의 일 실시예에 따른 노드 풀의 구성을 나타내는 불록도이다. 도 6은 본 개시의 일 실시예에 따른 컨테이너 실행 환경의 구성을 나타내는 블록도이다. 도 7은 본 개시의 일 실시예에 따른 인터랙티브 컴퓨팅 서비스 제공 방법을 나타내는 흐름도이다. 도 8은 본 개시의 다른 실시예에 따른 인터랙티브 컴퓨팅 서비스 제공 방법을 나타내는 흐름도이다."}
