{"patent_id": "10-2023-0151491", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0069625", "출원번호": "10-2023-0151491", "발명의 명칭": "디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법 및 장치", "출원인": "주식회사 테이아", "발명자": "김서진"}}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에 의해 수행되는, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법으로서,클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 단계;상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 단계; 및상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록상기 클라이언트 장치로 제안하는 단계;를 포함하는, 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 작업 비효율성 요인은, 상기 디자인 작업을 수행하기 위한 작업 시간이, 사전 설정된 제1 임계 시간 이상이 소요되거나, 상기 제1 임계시간보다 작은 사전 설정된 제2 임계 시간 미만이 소요되도록 하는 요인인, 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 수신된 작업 요청 데이터는,정형 데이터 및 비정형 데이터를 포함하고, 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하는지를 결정하는 단계는,상기 비정형 데이터가 상기 작업 비효율성 요인을 포함하는지를 결정하는 단계인, 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 비정형 데이터가 상기 작업 비효율성 요인을 포함하는지 결정하는 단계는, 상기 수신된 입력 데이터로부터 상기 비정형 데이터를 추출하는 단계;과거에 수행된 복수의 과거 디자인 작업들 중 사전 설정된 작업 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 단계;상기 결정된 적어도 하나의 과거 디자인 작업에 대한 과거 작업 요청 데이터에서 과거 비정형 데이터를 추출하는 단계; 및상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사한지를 결정하는 단계; 를 포함하는, 공개특허 10-2024-0069625-3-디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 사전 설정된 작업 비효율 조건은,상기 디자인 작업을 수행하는데 소요된 시간이 상기 제1 임계 시간 이상 또는 상기 제2 임계 시간 미만인 조건이고, 상기 사전 설정된 작업 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 단계는,상기 복수의 과거 디자인 작업들 각각에 대하여 소요된 작업 시간이 상기 제1 임계 시간 이상 또는 상기 제2 임계 시간 미만인 적어도 하나의 과거 디자인 작업을 결정하는 단계인, 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사한지를 결정하는 단계는,유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 간의 유사도를추정하는 단계; 상기 추정된 유사도가, 사전 설정된 제1 임계 값 이상이면 상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사하다고 결정하는 단계; 및상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사하다고 결정되면 상기 추출된 비정형데이터가 상기 작업 비효율성 요인을 포함한다고 결정하는 단계;를 포함하는, 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 유사도 추정 모델은,상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 각각을 입력으로 하여 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 간의 유사도를 추정하도록 학습된 모델인,디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형데이터 간의 유사도를 추정하는 단계는, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터를 상기 유사도 추정 모델에 입력시키는 단계;상기 유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 간의 유사도를 추정하는 단계; 및상기 추정된 유사도를 나타내는 결과 데이터를 출력하는 단계;를 포함하는, 공개특허 10-2024-0069625-4-디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계는, 상기 클라이언트 장치로 상기 디자인 작업 요청에 관련하여 추가 작업 요청 데이터를 획득하도록 제안하는 단계인 디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 작업 요청 데이터는, 복수의 작업 요청 항목들 각각에 대한 요청 내용을 포함하고,상기 복수의 작업 요청 항목들은,상기 디자인 작업을 위한 적어도 하나의 업무 슬롯의 개수를 포함하고 - 상기 적어도 하나의 업무 슬롯은 상기디자인 작업에 대한 업무로드, 난이도 또는 작업 시간 중 적어도 하나를 기반으로 하는 상기 디자인 작업의 업무 단위임 -, 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계는, 상기 클라이언트 장치로 상기 적어도 하나의 업무 슬롯의 개수를 조정하도록 제안하는 단계인,디자인 작업 요청 지원 방법."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "컴퓨터 판독가능 저장 매체 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서실행되는 경우, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 이하의 동작들을 수행하도록하며, 상기 동작들은:클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 동작;상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 동작; 및상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록상기 클라이언트 장치로 제안하는 동작;을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 저장 매체로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치에 의해 실행시, 상기 컴퓨팅 장치로 하여금 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법을 수행하도록 하며, 상기 방법은:클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 단계;상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 단계; 및상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록공개특허 10-2024-0069625-5-상기 클라이언트 장치로 제안하는 단계;를 포함하는,컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2023-0151491", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 컴퓨팅 장치로서,적어도 하나의 프로세서; 및메모리를 포함하며,상기 적어도 하나의 프로세서는:클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하고,상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하고,상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록상기 클라이언트 장치로 제안하도록 구성되는,컴퓨팅 장치."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 실시예에 따라, 컴퓨팅 장치에 의해 수행되는, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하 는 방법은, 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 단계, 상기 수신 된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 단계 및 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 디자인 작업 플랫폼에 관한 것으로, 보다 구체적으로 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 디자인 업체에서는 디자인 작업 요청을 위해 클라이언트가 복수의 요청 항목들을 포함하는 디자인 작업 요청서를 작성하도록 한다. 디자인 작업 요청서의 복수의 요청 항목들은 요청자, 요청일, 완료 희망일, 디 자인 품목, 작업 기간, 추가 요청 사항 등을 포함할 수 있다. 클라이언트는 이러한 디자인 작업 요청서의 복수의 요청 항목들 각각에 대한 요청 내용을 작성하고, 작성된 디 자인 작업 요청서를 디자인 업체로 제공함으로써, 디자인 작업 요청을 할 수 있다. 다만, 작업자가 디자인 작업 요청서에 기반하여 디자인 작업을 수행하는데 있어 작업 기간 보다 과도하게 늦게 디자인 작업을 수행하거나, 작업 기간 보다 과도하게 일찍 디자인 작업을 완료하는 경우가 발생될 수 있다. 따라서, 디자인 작업 요청서가, 과도하게 많은 작업 시간이 소요되거나, 과도하게 작은 작업 시간이 소요되도록 하는 작업 비효율성 요인을 포함하는지에 따라 클라이언트가 디자인 작업 요청서를 재작성하도록 디자인 작업 요청을 지원하기 위한 방법 및 장치가 요구된다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국 등록특허 제10-2458694호"}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법 및 장치를 제공하고자 한다. 본 개시의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과 제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 해결하기 위한 본 개시의 실시예에 따라, 컴퓨팅 장치에 의해 수행되는, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하는 방법 은, 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작 업 요청 데이터를 수신하는 단계, 상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하 는 단계 및 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하면 상기 작업 요청 데이터를 재 획득하도록 상기 클라이언트 장치로 제안하는 단계를 포함할 수 있다. 대안적으로, 상기 작업 비효율성 요인은, 상기 디자인 작업을 수행하기 위한 작업 시간이, 사전 설정된 제1 임 계 시간 이상이 소요되거나, 상기 제1 임계 시간보다 작은 사전 설정된 제2 임계 시간 미만이 소요되도록 하는 요인일 수 있다. 대안적으로, 상기 수신된 작업 요청 데이터는, 정형 데이터 및 비정형 데이터를 포함할 수 있다. 대안적으로, 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하는지를 결정하는 단계는, 상기 비정형 데이터가 상기 작업 비효율성 요인을 포함하는지를 결정하는 단계일 수 있다. 대안적으로, 상기 비정형 데이터가 상기 작업 비효율성 요인을 포함하는지 결정하는 단계는, 상기 수신된 입력 데이터로부터 상기 비정형 데이터를 추출하는 단계, 과거에 수행된 복수의 과거 디자인 작업들 중 사전 설정된 작업 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 단계, 상기 결정된 적어도 하나의 과 거 디자인 작업에 대한 과거 작업 요청 데이터에서 과거 비정형 데이터를 추출하는 단계 및 상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사한지를 결정하는 단계를 포함할 수 있다. 대안적으로, 상기 사전 설정된 작업 비효율 조건은, 상기 디자인 작업을 수행하는데 소요된 시간이 상기 제1 임 계 시간 이상 또는 상기 제2 임계 시간 미만인 조건일 수 있다. 대안적으로, 상기 작업 비효율성 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 단계는, 상기 복 수의 과거 디자인 작업들 각각에 대하여 소요된 작업 시간이 상기 제1 임계 시간 이상 또는 상기 제2 임계 시간 미만인 적어도 하나의 과거 디자인 작업을 결정하는 단계일 수 있다. 대안적으로, 상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사한지를 결정하는 단계는, 유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 간의 유 사도를 추정하는 단계, 상기 추정된 유사도가, 사전 설정된 제1 임계 값 이상이면 상기 추출된 비정형 데이터가 상기 추출된 과거 비정형 데이터와 서로 유사하다고 결정하는 단계 및 상기 추출된 비정형 데이터가 상기 추출 된 과거 비정형 데이터와 서로 유사하다고 결정되면 상기 추출된 비정형 데이터가 상기 작업 비효율성 요인을 포함한다고 결정하는 단계를 포함할 수 있다. 대안적으로, 상기 유사도 추정 모델은, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 각각을 입력으로 하여 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터 간의 유사도를 추정하도록 학습 된 모델일 수 있다. 대안적으로, 상기 유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이 터 간의 유사도를 추정하는 단계는, 상기 추출된 비정형 데이터 및 상기 추출된 과거 비정형 데이터를 상기 유 사도 추정 모델에 입력시키는 단계, 상기 유사도 추정 모델을 이용하여, 상기 추출된 비정형 데이터 및 상기 추 출된 과거 비정형 데이터 간의 유사도를 추정하는 단계 및 상기 추정된 유사도를 나타내는 결과 데이터를 출력 하는 단계를 포함할 수 있다. 대안적으로, 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계는, 상기 클라이언트 장치로 상기 디자인 작업 요청에 관련하여 추가 작업 요청 데이터를 획득하도록 제안하는 단계일 수 있다. 대안적으로, 상기 작업 요청 데이터는, 복수의 작업 요청 항목들 각각에 대한 요청 내용을 포함할 수 있다. 대안적으로, 상기 복수의 작업 요청 항목들은, 상기 디자인 작업을 위한 적어도 하나의 업무 슬롯의 개수를 포 함할 수 있다 - 상기 적어도 하나의 업무 슬롯은 상기 디자인 작업에 대한 업무로드, 난이도 또는 작업 시간 중적어도 하나를 기반으로 하는 상기 디자인 작업의 업무 단위임 -. 대안적으로, 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계는, 상기 클라이언트 장치로 상기 적어도 하나의 업무 슬롯의 개수를 조정하도록 제안하는 단계일 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 실시예에 따라, 컴퓨터 판독가능 저장 매체 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서 실행되는 경우, 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 이하의 동작들을 수행하도록 하며, 상기 동작들은, 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 동작, 상기 수신된 작업 요청 데이터가 작업 비효율 성 요인을 포함하는지를 결정하는 동작 및 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하 면 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 동작을 포함할 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 실시예에 따라, 컴퓨터 프로그램을 저장하는 컴퓨터 판독가 능 저장 매체로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치에 의해 실행 시, 상기 컴퓨팅 장치로 하여금 디자인 작 업 플랫폼에서의 디자인 작업 요청을 지원하는 방법을 수행하도록 하며, 상기 방법은, 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하는 단계, 상기 수신된 작업 요청 데이터가 작업 비효율 성 요인을 포함하는지를 결정하는 단계 및 상기 수신된 작업 요청 데이터가 상기 작업 비효율성 요인을 포함하 면 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 해결하기 위한 본 개시의 실시예에 따라, 디자인 작업 플랫폼에서의 디자인 작업 요청 을 지원하기 위한 컴퓨팅 장치로서, 적어도 하나의 프로세서 및 메모리를 포함하며, 상기 적어도 하나의 프로세 서는, 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터를 수신하고, 상기 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하고, 상기 수신된 작업 요청 데이터가 상기 작업 비효 율성 요인을 포함하면 상기 작업 요청 데이터를 재획득하도록 상기 클라이언트 장치로 제안하도록 구성될 수 있 다. 본 개시에서 얻을 수 있는 기술적 해결 수단은 이상에서 언급한 해결 수단들로 제한되지 않으며, 언급하지 않은"}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "또 다른 해결 수단들은 아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 몇몇 실시예에 따르면, 본 개시에서는 클라이언트가 작성한 디자인 작업 요청서가 과도하게 많거나 적은 작업 시간을 유발시키는 작업 비효율성 요인을 포함하는지에 따라 클라이언트로 하여금 디자인 작업 요청 서를 재작성하도록 함으로써, 디자인 작업에 대한 신뢰성을 보정할 수 있고, 클라이언트와 디자인 작업자 간의 커뮤니케이션 레벨을 향상시킬 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0151491", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, \"A 또는 B 중 적어도 하나\"이라는 용어는, \"A만을 포함하는 경우\", \"B 만을 포함하는 경우\", \"A와 B의 구성으로 조합된 경우\"를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개 시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서 네트워크 함수와 인공 신경망 및 뉴럴 네트워크(neural network)는 상호교환가능하게 사용될 수 있 다. 도 1은 본 개시의 실시예에 따른 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 예시적인 시스템 의 구성도이다. 도 1을 참조하면, 해당 시스템은 디자인 작업을 요청하는 클라이언트 장치, 디자인 작업 요청에 따른 디자 인 작업 플랫폼 서비스를 제공하는 서버, 디자인 작업을 수행하는 작업자의 작업자 장치 및 디자인 작 업 관리를 수행하는 관리자의 관리자 장치를 포함할 수 있다. 도 1에서 도시되는 컴포넌트들은 예시적인 것 이며, 추가적인 컴포넌트들이 존재하거나 또는 컴포넌트들의 일부가 생략될 수 있다. 본 개시내용에서의 디자인 작업 플랫폼은, 예를 들어 슬롯 기반 디자인 작업 플랫폼을 포함할 수 있다. 여기서, 슬롯(또는 작업 슬롯)은 디자인 작업을 수행하기 위해 작업자에게 할당될 수 있는, 디자인 작업에 대한 업무로 드, 난이도 또는 작업 시간 중 적어도 하나를 기반으로 하는 디자인 작업의 기본(또는 최소) 단위일 수 있다. 본 개시의 몇몇 실시예에 따르면, 클라이언트 장치, 서버, 작업자 장치 및 관리자 장치는 무 선 통신 네트워크를 통해, 본 개시의 몇몇 실시예들에 따른 디자인 작업 플랫폼에서의 디자인 작업 요청을 위한 데이터를 상호 송수신할 수 있다. 클라이언트 장치는 디자인 업무를 요청하기 위한 장치로서, 예를 들어 PC, 노트북, 모바일 단말기, 스마트 폰, 태블릿 PC 등과 같이 유/무선 네트워크에 접속할 수 있는 모든 종류의 전자 디바이스를 포함할 수 있다. 예 를 들어, 클라이언트 장치는 디자인 작업 플랫폼 서비스를 위한 웹 페이지, 프로그램, 또는 애플리케이션 등을 통해 디자인 작업을 요청하고, 요청에 따른 결과 데이터를 수신할 수 있다. 또한, 클라이언트 장치는 애플리케이션 소스 및/또는 클라이언트 애플리케이션을 포함할 수 있다. 서버가 웹 서버로 동작하는 경우 클라이언트 장치는 웹 브라우저와 같은 응용 프로그램을 통해 서버에서 호스팅하는 디자인 작업 플랫 폼 서비스에 관련된 웹 사이트에 접근하여 해당 웹 사이트에 대한 웹 페이지(즉, 인터페이스 화면)을 표시할 수 있다. 여기서, 디자인 작업 플랫폼 서비스에 관련된 웹 사이트는 디자인 작업 요청을 위한 웹 사이트를 포함할 수 있다. 구체적으로, 클라이언트 장치는 디자인 작업을 요청하기 위해 복수의 작업 요청 내용을 획득하고, 획득된 복수의 작업 요청 내용들을 포함하는 작업 요청 데이터를 서버로 전달할 수 있다. 여기서, 복수의 작업 요 청 내용들은 요청자, 요청일, 완료 희망일, 디자인 품목, 디자인 작업을 수행할 작업자에게 할당되는 작업 슬롯 의 개수 또는 추가 요청 사항 등에 대한 정보를 포함할 수 있으나, 이에 한정되지 않는다. 예를 들어, 작업 요 청 데이터는 클라이언트에 의해서 상술한 인터페이스 화면을 통해서 작성된 디자인 작업 요청서를 의미할 수 있 다. 복수의 작업 요청 항목들 각각에 대한 요청 내용을 획득하기 위해 클라이언트 장치는, 예를 들어 디자인 작 업 요청을 위한 웹 사이트에 접근하여 해당 웹 사이트에 대한 인터페이스 화면을 표시할 수 있다. 해당 인터페 이스 화면은 복수의 작업 요청 내용들을 획득할 수 있는 인터페이스를 포함할 수 있다. 본 개시의 몇몇 실시예에 따르면, 클라이언트 장치는 제어부, 저장부(메모리 및 영구저장매체) 및 송수신부 를 포함하여, 임의의 데이터를 처리, 저장, 송수신 및 출력할 수 있는 임의의 엔티티일 수 있다. 본 개시 내용에서의 제어부는 하나 이상의 코어로 구성될 수 있으며, 클라이언트 장치의 중앙 처리 장치 (CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장치(TPU: tensor processing unit), 및/또는 신경망 처리 장치(NPU: Neural Processing Unit) 등과 같이 메모리 상에 저장된 명령어들을 실행시킴으로써 디자인 작업을 요청하기 위한 임의의 형태의 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 디자인 작업을 요청할 수 있다. 본 개시 내용에서의 저장부는 제어부의 동작을 위한 프로그램을 저장할 수 있고, 입/출력되는 데이터들을 임시 또는 영구 저장할 수도 있다. 저장부는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disktype), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적 어도 하나의 타입의 저장매체를 포함할 수 있다. 이러한 저장부는 제어부에 제어에 의하여 동작될 수 있다. 또한, 본 개시 내용에서 메모리 및 저장부는 서로 상호 교환 가능하게 사용될 수 있다. 본 개시 내용에서의 통신부는 클라이언트 장치가 다양한 장치와 통신 가능하도록 연결할 수 있다. 구체적으 로, 통신부는 서버와 연결되어 디자인 작업 플랫폼 서비스에 관한 데이터를 주고받을 수 있다. 본 개시 내용에서의 표시부는 각종 컨텐츠(예: 텍스트, 이미지, 비디오, 아이콘, 배너 또는 심볼 등)를 표시할 수 있다. 다양한 실시예에서 표시부는 터치스크린을 포함할 수 있으나, 이에 한정되지 않는다. 또한, 본 개시 내용에서 표시부 및 디스플레이는 서로 상호 교환 가능하게 사용될 수 있다. 서버는 디자인 작업 플랫폼 서비스를 제공하기 위한 장치로서, 예를 들어 범용 컴퓨터, 랩탑, 웹 서버, 및 /또는 데이터 서버 등일 수 있으며, 예를 들어 서버가 웹 서버(또는 웹 애플리케이션 서버)로써 동작하는 경우 서버는 디자인 작업 플랫폼 서비스에 관한 웹 사이트를 호스팅할 수 있다. 구체적으로, 서버는 클라이언트 장치로부터 작업 요청 데이터를 수신하고, 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정할 수 있다. 여기서, 작업 비효율성 요인은, 디자인 작업을 수행하기 위한 작업 시간이, 사전 설정된 제1 임계 시간 이상이 소요되거나, 제1 임계 시간보다 작은 사전 설정된 제2 임계 시 간 미만이 소요되도록 하는 요인을 의미할 수 있다. 다시 말해서, 작업 비효율성 요인은, 디자인 작업을 수행하 기 위한 작업 시간이, 디자인 작업을 위해 할당된 업무 슬롯에 대응하는 시간 기간보다 과도하게 많거나, 과도 하게 작은 작업 시간이 소요되도록 하는 요인을 의미할 수 있다. 이어서, 작업 요청 데이터가 작업 비효율성 요인을 포함하면 서버는 작업 요청 데이터를 재획득하도록 클 라이언트 장치로 제안할 수 있다. 본 개시의 몇몇 실시예에 따르면, 서버는 프로세서, 저장부(메모리 및 영구저장매체) 및 통신부를 포함하 여, 임의의 데이터를 처리, 저장 및 송수신할 수 있는 임의의 엔티티일 수 있다. 본 개시 내용에서의 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU), 범 용 그래픽 처리 장치 (GPGPU), 텐서 처리 장치(TPU), 그래픽 처리 장치(GPU) 등과 같이 메모리 상에 저장된 명 령어들을 실행시킴으로써 디자인 작업에 관한 전반적인 서비스를 제공하기 위한 임의의 형태의 프로세서를 포함 할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 실시예에 따른 디자인 작업 플 랫폼에서의 디자인 작업 요청을 지원하기 위한 동작을 수행할 수 있다. 본 개시 내용에서의 메모리는 프로세서의 동작을 위한 프로그램을 저장할 수 있고, 입/출력되는 데이터들을 임 시 또는 영구 저장할 수도 있다. 메모리는 플래시 메모리 타입, 하드디스크 타입, 멀티미디어 카드 마이크로 타 입, 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM), SRAM, 롬(ROM), EEPROM, PROM, 자기 메모 리, 자기 디스크, 광디스크 중 적 어도 하나의 타입의 저장매체를 포함할 수 있다. 이러한 메모리는 프로세서에 제어에 의하여 동작될 수 있다. 또한, 본 개시 내용에서 메모리 및 저장부는 서로 상호 교환 가능하게 사용될 수 있다. 본 개시 내용에서의 통신부는 서버가 다양한 장치와 통신 가능하도록 연결할 수 있다. 구체적으로 통신부 는 클라이언트 장치, 작업자 장치 및 관리자 장치와 디자인 작업 플랫폼에서의 디자인 작업 요청 지원에 관한 데이터를 주고받을 수 있다. 작업자 장치는 디자인 작업을 수행하기 위한 장치로서, 예를 들어 PC, 노트북, 모바일 단말기, 스마트 폰, 태블릿 PC 등과 같이 유/무선 네트워크에 접속할 수 있는 모든 종류의 전자 디바이스를 포함할 수 있다. 예를 들어, 작업자 장치는 디자인 작업 플랫폼 서비스를 위한 웹 페이지, 프로그램, 또는 애플리케이션 등을 통 해 적어도 하나의 작업 슬롯을 할당받고, 디자인 작업에 관한 다양한 업무들을 수행할 수 있다. 구체적으로, 작업자 장치는 작업자에 의해 디자인 작업에 관한 다양한 디자인 업무들을 수행할 수 있다. 예 를 들어, 디자인 업무들은 디자인 구상(planning) 업무, 초안(drafting) 업무, 수정(modifying) 업무, 및/또는 저장 업무 등을 포함할 수 있다. 예를 들어, 이러한 디자인 업무들은 디자인 작업 플랫폼과 연동되는 적어도 하 나의 디자인 작업 툴에 의해서 이루어질 수 있다. 나아가, 작업자 장치는 디자인 초안(즉, 파일)을 서버를 통해 관리자 장치로 전달하여 관리자 장치로부터 관리자의 피드백 또는 수정된 디자인 초안을 수신할 수 있다. 본 개시의 몇몇 실시예에 따르면, 작업자 장치는 제어부, 저장부(메모리 및 영구저장매체), 통신부 및 표시 부를 포함하여, 임의의 데이터를 처리, 저장, 송수신 및 출력할 수 있는 임의의 엔티티일 수 있다. 본 개시 내용에서의 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU), 범 용 그래픽 처리 장치 (GPGPU), 텐서 처리 장치(TPU) 등과 같이 메모리 상에 저장된 명령어들을 실행시킴으로써, 디자인 작업 업무를 수행하기 위한 임의의 형태의 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴 퓨터 프로그램을 판독하여 본 개시의 실시예에 따른 디자인 작업 업무들을 수행할 수 있다. 본 개시 내용에서의 메모리는 프로세서의 동작을 위한 프로그램을 저장할 수 있고, 입/출력되는 데이터들을 임 시 또는 영구 저장할 수도 있다. 메모리는 플래시 메모리 타입, 하드디스크 타입, 멀티미디어 카드 마이크로 타 입, 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM), SRAM, 롬(ROM), EEPROM, PROM, 자기 메모 리, 자기 디스크, 광디스크 중 적 어도 하나의 타입의 저장매체를 포함할 수 있다. 이러한 메모리는 프로세서에 제어에 의하여 동작될 수 있다. 또한, 본 개시 내용에서 메모리 및 저장부는 서로 상호 교환 가능하게 사용될 수 있다. 본 개시 내용에서의 통신부는 서버가 다양한 장치와 통신 가능하도록 연결할 수 있다. 구체적으로 통신부 는 서버 또는 관리자 장치와 연결되어 디자인 작업 플랫폼 서비스에 관한 데이터를 주고받을 수 있다. 본 개시 내용에서의 표시부는 각종 컨텐츠를 표시할 수 있다. 다양한 실시예에서 표시부는 터치스크린을 포함할 수 있으나, 이에 한정되지 않는다. 또한, 본 개시 내용에서 표시부 및 디스플레이는 서로 상호 교환 가능하게 사용될 수 있다. 관리자 장치는 디자인 작업을 관리하기 위한 장치로서, 예를 들어 PC, 노트북, 모바일 단말기, 스마트 폰, 태블릿 PC 등과 같이 유/무선 네트워크에 접속할 수 있는 모든 종류의 전자 디바이스를 포함할 수 있다. 예를 들어, 관리자 장치는 디자인 작업 플랫폼 서비스를 위한 웹 페이지, 프로그램, 또는 애플리케이션 등을 통 해 작업자의 디자인 작업을 관리하거나, 작업자에 의해서 생성된 디자인 초안 또는 수정된 디자인 초안에 대한 피드백 또는 수정 등과 같은 다양한 디자인 업무들을 수행할 수 있다. 구체적으로, 관리자 장치는 디자인 작업 요청에 따라 적어도 하나의 작업 슬롯이 할당된 작업자 장치로 부터 디자인 초안을 수신하고, 수신된 디자인 초안에 대한 피드백을 서버를 통해 작업자 장치로 전달 하거나, 수신된 디자인 초안을 수정한 후 수정된 디자인 초안 및 디자인 초안에 대한 피드백을 서버를 통 해 작업자 장치로 전달할 수 있다. 나아가, 관리자 장치는 작업 완료된 디자인 초안(즉, 작업 완료된 디자인 작업의 결과 데이터)를 서버를 통해 클라이언트 장치로 전달할 수 있다. 다양한 실시예에서 관리자 장치는 적어도 하나의 디자인 작업 및 각 디자인 작업을 수행하는 작업자를 관리 하거나, 또는 해당 디자인 작업을 수행하기 위한 작업자를 선택하고, 선택된 작업자에게 적어도 하나의 업무 슬 롯을 할당하는 등과 같은 관리 업무를 수행할 수도 있다. 본 개시의 몇몇 실시예에 따르면, 관리자 장치는 제어부, 저장부(메모리 및 영구저장매체), 통신부 및 표시 부를 포함하여, 임의의 데이터를 처리, 저장, 송수신 및 출력할 수 있는 임의의 엔티티일 수 있다. 본 개시 내용에서의 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU), 범 용 그래픽 처리 장치 (GPGPU), 텐서 처리 장치(TPU) 및/또는 신경망 처리 장치(NPU) 등과 같이 메모리 상에 저 장된 명령어들을 실행시킴으로써 디자인 작업 업무를 수행하기 위한 임의의 형태의 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 실시예에 따른 디자인 작업 업무들을 수행 할 수 있다. 본 개시 내용에서의 메모리는 프로세서의 동작을 위한 프로그램을 저장할 수 있고, 입/출력되는 데이터들을 임 시 또는 영구 저장할 수도 있다. 메모리는 플래시 메모리 타입, 하드디스크 타입, 멀티미디어 카드 마이크로 타 입, 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM), SRAM, 롬(ROM), EEPROM, PROM, 자기 메모 리, 자기 디스크, 광디스크 중 적 어도 하나의 타입의 저장매체를 포함할 수 있다. 이러한 메모리는 프로세서에 제어에 의하여 동작될 수 있다. 또한, 본 개시 내용에서 메모리 및 저장부는 서로 상호 교환 가능하게 사용될 수 있다. 본 개시 내용에서의 통신부는 관리자 장치가 다양한 장치와 통신 가능하도록 연결할 수 있다. 구체적으로 통신부는 서버 또는 작업자 장치와 연결되어 디자인 작업 플랫폼 서비스에 관한 데이터를 주고받을 수 있다. 본 개시 내용에서의 표시부는 각종 컨텐츠를 표시할 수 있다. 다양한 실시예에서 표시부는 터치스크린을 포함할 수 있으나, 이에 한정되지 않는다. 또한, 본 개시 내용에서 표시부 및 디스플레이는 서로 상호 교환 가능하게 사용될 수 있다. 도 2는 본 개시의 실시예에 따른 서버의 블록 구성도이다. 도 2에 도시된 서버의 구성은 간략화하여 나타 낸 예시일 뿐이다. 본 개시의 실시예에서 서버는 서버의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 서버를 구성할 수도 있다. 서버는 통신부, 저장부 및 프로세서를 포함할 수 있다. 다만, 상술한 구성 요소들은 서버 를 구현하는데 있어서 필수적인 것은 아니어서, 서버는 위에서 열거된 구성요소들보다 많거나, 또는 적은 구성요소들을 가질 수 있다. 여기서, 각각의 구성 요소들은 별개의 칩이나 모듈이나 장치로 구성될 수 있 고, 하나의 장치 내에 포함될 수도 있다. 본 개시의 실시예에 따른 통신부는 네트워크 접속을 위한 임의의 형태의 유/무선 인터넷 모듈을 포함할 수 있다. 제시된 실시예에서 통신부는 다양한 형태의 공지된 유선 네트워크 및 무선 네트워크를 사용할 수 있 다. 본 개시의 몇몇 실시예에 따르면, 통신부는 서버가 외부 장치와 통신이 가능하도록 연결한다. 통신부 는 유/무선 통신을 이용하여 클라이언트 장치, 작업자 장치 및 관리자 장치와 디자인 작업 플 랫폼에서의 디자인 작업 요청을 지원하기 위해 사용되는 다양한 데이터를 송수신할 수 있다. 본 개시의 실시예에 따르면, 저장부는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 통신부 가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 몇몇 실시예에 따르면, 저장부는 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 다양한 데이터를 저장할 수 있다. 저장부는 메모리 및/또는 영구저장매체를 포함할 수 있다. 저장부는 플래시 메모리 타입, 하드디스크 타입, 멀티미디어 카드 마이크로 타입, 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM), SRAM, 롬(ROM), EEPROM, PROM, 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 서버는 인터넷(internet) 상에서 상기 저장부의 저장 기능을 수행하는 웹 스토리지(web storage)와 관련되어 동작할 수도 있다. 전술한 저장부에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않 는다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU), 범용 그래픽 처리 장치(GPGPU), 텐서 처리 장치(TPU) 및/또는 신경망 처리 장치(NPU) 등의 데이터 분석 및 처리를 위한 프로세서 를 포함할 수 있다. 프로세서는 저장부에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 실시예에 따른 디자인 작업 플랫 폼에서의 디자인 작업 요청을 지원하기 위한 다양한 동작들을 수행할 수 있다. 구체적으로, 프로세서는 클라이언트 장치로부터, 디자인 작업을 요청하기 위해 획득된 복수의 작업 요 청 내용들을 포함하는 작업 요청 데이터를 수신할 수 있다. 여기서, 복수의 작업 요청 내용들은, 상술한 바와 같이 요청자, 요청일, 완료 희망일, 디자인 품목, 디자인 작업을 수행할 작업자에게 할당되는 작업 슬롯의 개수 또는 추가 요청 사항 등을 포함할 수 있으나, 이에 한정되지 않는다. 다음으로, 프로세서는 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정할 수 있다. 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하기 위해 프로세서는 과거에 수행했 던 과거 디자인 작업에 대하여 획득된 과거 작업 요청 데이터 및 과거 디자인 작업에 대응하여 수집된 로그 데 이터를 이용할 수 있다. 구체적으로, 프로세서는 과거 작업 요청 데이터 및 이에 대응하는 로그 데이터를 이용하여 사전 설정된 작업 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정할 수 있다. 여기서, 작업 비효율 조건은 디자인 작업을 위해 소요된 작업 시간이 제1 임계 시간 이상이거나, 제2 임계 시간 미만인 조건일 수 있다. 예를 들어, 프로세서는 과거 디자인 작업에 대응하여 수집된 로그 데이터에 기반하여 과거 디자인 작업을 위해 소요된 과거 작업 시간이 제1 임계 시간 이상이거나, 제2 임계 시간 미만인 적어도 하나의 과거 디자인 작업을, 업무 비효율성 조건을 만족하는 디자인 작업으로 결정할 수 있다. 이어서, 프로세서는 업무 비효율성 조건을 만족하는 적어도 하나의 과거 디자인 작업에 대하여 획득된 과 거 작업 요청 데이터와, 수신된 작업 요청 데이터가 서로 유사한지를 결정하여 서로 유사하면 수신된 작업 요청 데이터가 업무 비효율성 요인을 포함한다고 결정할 수 있다. 업무 비효율성 조건을 만족하는 적어도 하나의 과거 디자인 작업의 과거 작업 요청 데이터와 수신된 작업 요청 데이터 간의 유사도를 결정하기 위해 프로세서는 두 데이터 간의 유사도를 추정하기 위한 인공지능 기반 유사도 추정 모델을 이용하거나, 두 데이터 간의 패턴 유사도를 추정하기 위한 패턴 유사도 추정 모델을 이용할 수 있으나, 이에 한정되지 않는다. 예를 들어, 유사도 추정 모델은 유클리디언 거리(Euclidean distance) 또는 코사인 유사도(Cosine Similarity)를 기반으로 하는 자연어 처리 알고리즘으로 이루어질 수 있으나, 이에 한정 되지 않는다. 또한, 패턴 유사도 추정 모델은 토픽 모델링(Topic Modeling)을 기반으로 하는 자연어 처리 알고 리즘으로 이루어질 수 있으나, 이에 한정되지 않는다. 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함한다고 결정되면 프로세서는 작업 요청 데이터를 재 획득하도록 클라이언트 장치로 제안할 수 있다. 구체적으로, 프로세서는 클라이언트 장치로 추가 작업 요청 내용을 획득하도록 제안하거나, 클라이언트가 디자인 작업 요청을 위해 선택한 적어도 하나의 업무 슬롯에 대한 개수를 조정하도록 제안할 수 있다. 본 개시의 다양한 실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세서(13 0)는 딥러닝(DL: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계 산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, TPU 및 NPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예 를 들어, CPU, GPGPU, TPU 및 NPU 중 적어도 하나가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이 터 분류를 처리할 수 있다. 또한, 본 개시의 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트 워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 실시예에 따른 컴 퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU, TPU 또는 NPU 실행가능 프로그램일 수 있다. 도 3은 본 개시의 실시예에 따른 클라이언트 장치의 블록 구성도이다. 도 3에 도시된 클라이언트 장치의 구 성은 간략화하여 나타낸 예시일 뿐이다. 본 개시의 실시예에서 클라이언트 장치는 클라이언트 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 클라이언트 장치 를 구성할 수도 있다. 클라이언트 장치는 통신부, 표시부, 저장부 및 프로세서를 포함할 수 있다. 다만, 상술한 구성 요소들은 클라이언트 장치를 구현하는데 있어서 필수적인 것은 아니어서, 클라이언트 장치는 위에 서 열거된 구성요소들보다 많거나, 또는 적은 구성요소들을 가질 수 있다. 여기서, 각각의 구성 요소들은 별개 의 칩이나 모듈이나 장치로 구성될 수 있고, 하나의 장치 내에 포함될 수도 있다. 본 개시의 실시예에 따른 통신부는 네트워크 접속을 위한 임의의 형태의 유/무선 인터넷 모듈을 포함할 수 있다. 제시된 실시예에서 통신부는 다양한 형태의 공지된 유선 네트워크 및 무선 네트워크를 사용할 수 있 다. 본 개시의 몇몇 실시예에 따르면, 통신부는 클라이언트 장치가 외부 장치와 통신이 가능하도록 연결한 다. 통신부는 유/무선 통신을 이용하여 서버와 디자인 작업 플랫폼 서비스를 위해 사용되는 다양한 데 이터를 송수신할 수 있다. 본 개시의 실시예에 따른 표시부는 각종 컨텐츠를 표시할 수 있다. 다양한 실시예에서 표시부는 터치스크린 을 포함할 수 있으나, 이에 한정되지 않는다. 본 개시의 몇몇 실시예에 따르면, 표시부는 디자인 작업 플랫폼 서비스에 관한 다양한 인터페이스 화면을 표시할 수 있다. 본 개시의 실시예에 따르면, 저장부는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 통신부 가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 몇몇 실시예에 따르면, 저장부는 디자인 작업 플랫폼 서비스에 관한 다양한 데이터를 저장할 수 있다. 저장부는 메모리 및/또는 영구저장매체를 포함할 수 있다. 저장부는 플래시 메모리 타입, 하드디스크 타입, 멀티미디어 카드 마이크로 타입, 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM), SRAM,롬(ROM), EEPROM, PROM, 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 클라이언트 장치는 인터넷 상에서 상기 저장부의 저장 기능을 수행하는 웹 스토리지와 관련되어 동작할 수도 있다. 전술한 저장부에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치, 범용 그래픽 처리 장치, 텐서 처리 장치 등의 데이터 분석 및 처리를 위한 프로세서를 포함할 수 있다. 프로세서는 저장부에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 실시예에 따른 디자인 작업 플랫 폼 서비스에 관한 다양한 동작들을 수행할 수 있다. 구체적으로, 프로세서는 디자인 작업을 요청하기 위해 복수의 작업 요청 내용들을 획득하고, 획득된 복수의 작업 요청 내용들을 포함하는 작업 요청 데이터를 서버로 전달할 수 있다. 프로세서는 서버로부터 작업 요청 데이터를 재획득하기 위한 제안을 수신할 수 있다. 예를 들어, 프로 세서는 수신된 제안에 따라 디자인 작업 요청에 관한 인터페이스 화면에 추가 작업 요청 사항을 획득하기 위한 인터페이스를 추가하거나, 클라이언트에 의해서 선택된 적어도 하나의 작업 슬롯의 개수를 재선택하도록 안내 문구 등과 같은 그래픽 객체를 더 표시할 수도 있다. 도 4는 본 개시의 실시예에 따라 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 인공지능 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일 한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 일 실시예에서, 본 명세서에서의 검출 모델 및/또는 추출 모델은 전술한 신경망을 포함할 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크, 적대적 생성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더(autoencoder)를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히 든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어 의 노드의 수는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이 어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 오토 인코더는 비선형 차원 감 소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 차원과 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 지도 학습(supervised learning), 비지도 학습(unsupervised learning), 반지도학습(semi supervised learning), 또는 강화학습(reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정 일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 지도 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비지도 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 지도 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학 습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비지도 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이 어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가 중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라리제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 이하에서는 도 5를 참조하여 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 방법의 일례를 구체 적으로 설명하도록 한다. 제시된 실시예에서 도 5의 동작들은 서버의 프로세서에 의해서 수행될 수 있다. 도 5는 본 개시의 실시예에 따른 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 방법의 일례를 설명하기 위한 흐름도이다. 도 5를 참조하면, 프로세서는 클라이언트 장치로부터, 디자인 작업을 요청하기 위한 작업 요청 데이터 를 수신한다(S500). 여기서, 작업 요청 데이터는 상술한 바와 같이 클라이언트에 의해서 디자인 작업 요청에 관 한 인터페이스 화면을 통해 획득된 복수의 작업 요청 내용들을 포함할 수 있다. 이러한 복수의 작업 요청 내용 들은 복수의 작업 요청 항목들 각각에 대응하는 정형 데이터 및 비정형 데이터를 포함할 수 있다. 정형 데이터 는 사전에 정의된 규칙에 따라 규격화된 데이터로서, 구조화된 텍스트를 포함할 수 있다. 예를 들어, 정형 데이 터는 복수의 선택지들 중에서 선택된 어느 하나의 선택지에 해당하는 텍스트를 포함할 수 있다. 비정형 데이터 는 사전에 정의된 규칙으로 규격화되지 않은 데이터로서, 구조화되지 않은 텍스트를 포함할 수 있다. 예를 들어, 비정형 데이터는 클라이언트에 의해서 작성된 서술형 텍스트일 수 있다. 프로세서는 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정한다(S510). 작업 요청 데 이터가 작업 비효율성 요인을 포함하는지를 결정하기 위해 도 6을 참조하여 보다 구체적으로 설명하도록 한다. 도 6은 본 개시의 실시예에 따른 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 방법의 일례 를 설명하기 위한 흐름도이다. 도 6을 참조하면, 프로세서는 수신된 작업 요청 데이터에서 비정형 데이터를 추출한다(S600). 앞서 설명한 바와 같이 비정형 데이터는 클라이언트에 의해서 작성된 서술형 텍스트를 포함하며, 서술형 텍스트는 사전에 정 의되지 않은 다양한 업무 요청 사항을 포함할 수 있다. 예를 들어, 클라이언트에 의해서 작성된 디자인 작업 요 청서의 디자인 품목에는 '제1 품목'이 선택되었으나, 추가 요청 사항에는'제2 품목'에 대한 디자인을 추가로 요 청하는 서술형 텍스트가 더 포함될 수 있다. 이러한 경우 작업자는 제1 품목에 대한 디자인 작업뿐만 아니라 제 2 품목에 대한 디자인 작업도 추가로 수행해야 하므로, 디자인 작업 요청에 대하여 예상된 디자인 작업 시간보 다 더 많은 작업 시간이 소요될 수 있다. 이처럼, 디자인 작업 요청서는 요청된 디자인 작업을 예상보다 지연시 키거나, 예상보다 빠르게 수행되도록 하는 서술형 텍스트가 포함될 수 있으므로, 작업자가 디자인 작업을 수행 하는데 있어 예상치 못한 변수가 발생되어 작업자의 디자인 작업 효율이 저하될 수 있다. 따라서, 본 개시에서는 작업 요청 데이터가 디자인 작업 효율을 저하시키는 작업 비효율성 요인을 포함하는지를 결정하기 위해 작업 요청 데이터에 포함된 비정형 데이터를 이용함으로써, 좀 더 빠르고 정확하게 작업 비효율 성 요인의 포함 여부를 확인할 수 있다. 다음으로, 프로세서는 과거에 수행된 복수의 과거 디자인 작업들 중 사전 설정된 작업 비효율 조건을 만족 하는 적어도 하나의 과거 디자인 작업을 결정한다(S610). 예를 들어, 작업 비효율 조건은 디자인 작업을 수행하 는데 소요된 시간이 제1 임계 시간 이상 또는 제2 임계 시간 미만인 조건을 포함할 수 있으나, 이에 한정되지 않는다. 다양한 실시예에서 작업 비효율 조건은 정해진 작업 슬롯에 해당하는 시간 기간보다 특정 임계 시간 이 상 또는 특정 임계 시간 미만의 작업 시간이 소요된 조건을 의미할 수 있다. 작업 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 방법에 대해서 도 7을 참조하여 보다 상세하게 설명하도록 한다.도 7은 본 개시의 실시예에 따른 업무 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 방 법의 일례를 설명하기 위한 흐름도이다. 도 7을 참조하면, 프로세서는 복수의 과거 디자인 작업들 각각에 대한 로그 데이터에 기반하여 각각의 과 거 디자인 작업을 위해 소요된 작업 시간을 결정한다(S700). 작업 시간을 결정하기 위해 프로세서는 디자인 작업 요청에 따라 디자인 작업을 수행하는 작업자 장치 및 관리자 장치 각각으로부터 로그 데이터를 수집할 수 있다. 예를 들어, 작업자 장치의 로그 데이터는 작업자가 디자인 작업을 수행하는 동안 이용한 적어도 하나의 디자인 작업 툴의 적어도 하나의 작업 기능, 적어 도 하나의 디자인 작업 툴의 각 작업 기능을 수행한 시간, 관리자와 주고받은 디자인 작업 관련 데이터, 및/또 는 디자인 작업 관련 데이터를 주고받은 시간을 포함할 수 있다. 또한, 관리자 장치의 로그 데이터는, 작업 자의 디자인 초안에 대한 피드백을 위해 이용한 적어도 하나의 피드백 관련 툴의 적어도 하나의 작업 기능, 적 어도 하나의 피드백 관련 툴의 각 작업 기능을 수행한 시간, 작업자와 주고받은 디자인 작업 관련 데이터, 및/ 또는 디자인 작업 관련 데이터를 주고받은 시간을 포함할 수 있다. 프로세서는 이와 같이 수집된 로그 데이터에 기반하여 각 디자인 작업을 수행하는데 소요된 작업 시간을 결정할 수 있다. 구체적으로, 프로세서는 디자인 작업 요청에 따라 할당된 적어도 하나의 작업 슬롯에 대 응하는 시간 대비 소요된 작업 시간을 결정할 수 있다. 이어서, 프로세서는 작업 시간이 과도하게 많거나, 적은 시간이 소요된 디자인 작업을 결정하기 위해 결정 된 작업 시간이 사전 설정된 제1 임계 시간 이상인지를 결정하여(S710) 결정된 작업 시간이 제1 임계 시간 이상 이면 과거 디자인 작업이 작업 비효율 조건을 만족한다고 결정한다(S720). 다시 말해서, 프로세서는 결정 된 작업 시간이 디자인 작업 요청에 따라 할당된 적어도 하나의 작업 슬롯에 대응하는 시간 대비 과도하게 많게 소요되었다고 결정할 수 있다. 결정된 작업 시간이 제1 임계 시간 미만이면 프로세서는 결정된 작업 시간이 사전 설정된 제2 임계 시간 미만인지를 결정하여(S730) 결정된 작업 시간이 제2 임계 시간 미만이면 과거 디자인 작업이 작업 비효율 조건 을 만족한다고 결정한다(S740). 다시 말해서, 프로세서는 결정된 작업 시간이 디자인 작업 요청에 따라 할 당된 적어도 하나의 작업 슬롯에 대응하는 시간 대비 과도하게 적게 소요되었다고 결정할 수 있다. 결정된 작업 시간이 제1 임계 시간 미만이면서 제2 임계 시간 이상이면 프로세서는 과거 디자인 작업이 작 업 비효율 조건을 만족하지 않는다고 결정한다(S750). 이처럼, 업무 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업이 결정되면 다시 도 6을 참조하여 프로 세서는 결정된 적어도 하나의 과거 디자인 작업에 대한 과거 작업 요청 데이터에서 과거 비정형 데이터를 추출한다(S620). 이를 위해 프로세서는 디자인 작업에 관한 로그 데이터 수집 시 해당 디자인 작업을 요청 하기 위해 수신된 작업 요청 데이터를 수집할 수 있다. 프로세서는 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사한지 결정하여(S630) 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사하면 비정형 데이터가 작업 비효율성 요인을 포함한다 고 결정한다(S640). 구체적으로, 적어도 하나의 과거 디자인 작업이 업무 비효율 조건을 만족하는 경우 프로세서는 업무 비효 율 조건을 만족하는 적어도 하나의 과거 디자인 작업에 대해서 수집된 과거 작업 요청 데이터 중 과거 비정형 데이터가 작업 비효율성 요인을 포함한다고 결정할 수 있다. 이를 통해, 프로세서는 추출된 비정형 데이터 가, 작업 비효율성 요인을 포함한다고 결정된 과거 비정형 데이터와 유사하다면 추출된 비정형 데이터 또한 작 업 비효율성 요인을 포함한다고 결정할 수 있다. 본 개시의 일 실시예에 따르면, 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사한지 결정하기 위해 프로세서는 추출된 비정형 데이터 및 추출된 과거 비정형 데이터 간의 유사도를 추정하도록 학습된 인공지능 기반 유사도 추정 모델을 이용할 수 있다. 여기서, 유사도 추정 모델은 비정형 데이터 및 과거 비정형 데이터를 벡터화하기 위한 단어 및/또는 문서 임베딩(embedding)(예를 들어, word2vec 및/또는 doc2vec)을 기반 으로 하는 제1 서브 모델, 벡터화된 데이터를 분석하기 위한 CNN, LSTM(Long Short-Term Memory models) 등과 같은 RNN(Recurrent Neural Network)을 기반으로 하는 제2 서브 모델 및/또는 분석 결과 벡터 간의 유사도를 계 산하기 위한 코사인 유사도(Cosine Similarity) 등을 기반으로 하는 제3 서브 모델을 포함할 수 있으나, 이에 한정되지 않는다. 다양한 실시예에서 제3 서브 모델은, 유클리디언 거리, 민코프스키거리(Minkowski distance),맨하탄 거리(Manhattan distance) 등과 같은 유사도 추정 알고리즘을 이용할 수도 있으나, 이에 한정되지 않는 다. 구체적으로, 프로세서는 비정형 데이터 및 과거 비정형 데이터 각각을 유사도 추정 모델에 입력시키고, 유 사도 추정 모델을 이용하여 비정형 데이터 및 과거 비정형 데이터 각각을 벡터화하고, 벡터화된 비정형 데이터 및 과거 비정형 데이터에 대한 유사도를 추정한 후 추정된 유사도를 나타내는 결과 데이터를 출력할 수 있다. 예를 들어, 결과 데이터는 -1 ~ 1 사이의 값을 포함할 수 있으며, '1'에 가까울수록 두 데이터가 매우 유사한 관계를 가지고, '-1'에 가까울수록 두 데이터가 반대 관계를 가지며, '0'인 경우 두 데이터가 관계없음을 의미 할 수 있다. 프로세서는 결과 데이터가 사전 설정된 제1 임계 값 이상인 경우 비정형 데이터 및 과거 비정형 데이터가 서로 유사하다고 결정할 수 있고, 결과 데이터가 사전 설정된 제2 임계 값 미만인 경우 비정형 데이터 및 과거 비정형 데이터가 유사하지 않다고 결정할 수 있다. 본 개시내용에서의 유사도 추정 모델은, 사전에 저장된 다수의 과거 디자인 작업들의 작업 요청 데이터에 포함 된 과거 비정형 데이터를 학습 데이터로서 이용하여 사전 학습된 모델일 수 있다. 일례로, 유사도 추정 모델을 구성하는 제1 서브 모델, 제2 서브 모델 및 제3 서브 모델은 학습 데이터가 업데이트될 때마다 사전 설정된 기 간 혹은 주기적으로 학습될 수 있다. 예를 들어, 다수의 과거 디자인 작업들의 과거 비정형 데이터가 학습 데이 터로서 유사도 추정 모델의 제1 서브 모델에 입력되고, 제1 서브 모델에서 입력된 데이터가 벡터화되어 과거 비 정형 데이터의 벡터가 출력될 수 있다. 이러한 벡터들은 유사도 추정 모델의 제2 서브 모델에 입력되고, 제2 서 브 모델에서는 입력된 각 과거 비정형 데이터의 벡터를 분석하여 결과 벡터를 출력할 수 있다. 제2 서브 모델을 통해서 출력된 결과 벡터는 유사도 추정을 위한 유사도 추정 모델의 제3 서브 모델에 입력되고, 제3 서브 모델 에서는 입력된 벡터들 간의 유사도를 계산하고, 계산된 유사도 값을 출력하도록 학습될 수 있다. 이와 같이 출 력된 유사도 값은 유사도 추정 모델의 학습에 반영될 수 있다. 예를 들어, 출력된 유사도 값은 유사도 추정 모 델의 파라미터 등을 업데이트하기 위해 이용될 수 있으나, 이에 한정되지 않는다. 본 개시의 몇몇 실시예에 따르면, 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사한지 결정하 기 위해 프로세서는 추출된 비정형 데이터 및 추출된 과거 비정형 데이터를 군집화(clustering)하기 위한 인공지능 기반 군집화 모델을 이용할 수 있다. 여기서, 군집화 모델은 입력 데이터를 벡터화하기 위해 TF- IDF(Term Frequency - Inverse Document Frequency)를 기반으로 하는 제1 서브 모델 및 벡터화된 데이터를 군 집화하기 위해 K-means 알고리즘을 기반으로 하는 제2 서브 모델을 포함할 수 있으나, 이에 한정되지 않는다. 다양한 실시예에서 입력 데이터는 특수 문자 등과 같은 불필요한 문자의 제거, 토큰화(tokenization) 및/또는 정수 인코딩(integer encoding) 등과 같은 전처리가 수행될 수 있으나, 이에 한정되지 않는다. 구체적으로, 프로세서는 비정형 데이터 및 과거 비정형 데이터 각각을 군집화 모델에 입력시키고, 군집화 모델을 이용하여 비정형 데이터 및 과거 비정형 데이터 각각을 벡터화한 후 벡터화된 비정형 데이터 및 과거 비 정형 데이터 각각을 군집화한 결과 데이터를 출력할 수 있다. 프로세서는 이러한 결과 데이터에 기반하여 비정형 데이터 및 과거 비정형 데이터가 동일 클러스터에 존재하는지를 결정할 수 있다. 비정형 데이터 및 과거 비정형 데이터가 동일 클러스터에 존재하면 프로세서는 비정형 데이터 및 과거 비정형 데이터가 서로 유사 하다고 결정할 수 있다. 비정형 데이터 및 과거 비정형 데이터가 서로 다른 클러스터에 존재하면 프로세서(13 0)는 비정형 데이터 및 과거 비정형 데이터가 유사하지 않다고 결정할 수 있다. 본 개시내용에서의 군집화 모델은, 사전에 저장된 다수의 과거 디자인 작업들의 작업 요청 데이터에 포함된 과 거 비정형 데이터를 학습 데이터로서 이용하여 사전 학습된 모델일 수 있다. 일례로, 군집화 모델을 구성하는 제1 서브 모델 및 제2 서브 모델은 학습 데이터가 업데이트될 때마다 사전 설정된 기간 혹은 주기적으로 학습될 수 있다. 예를 들어, 다수의 과거 디자인 작업들의 과거 비정형 데이터에 대한 전처리가 수행되고, 전처리된 데 이터가 학습 데이터로서 군집화 모델의 제1 서브 모델에 입력될 수 있다. 제1 서브 모델에서는 입력된 데이터를 벡터화하여 과거 비정형 데이터의 벡터가 출력될 수 있다. 출력된 벡터들은 군집화 모델의 제2 서브 모델에 입 력되고, 제2 서브 모델에서는 입력된 벡터들을 사전 설정된 군집 개수로 군집화하여 군집화 수행 결과를 출력하 도록 학습될 수 있다. 이와 같이 출력된 군집화 수행 결과는 군집화 모델의 학습에 반영될 수 있다. 예를 들어, 출력된 군집화 수행 결과는 군집화 모델의 파라미터 등을 업데이트하기 위해 이용될 수 있으나, 이에 한정되지 않는다. 본 개시의 몇몇 실시예에 따르면, 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사한지 결정하 기 위해 프로세서는 추출된 비정형 데이터 및 추출된 과거 비정형 데이터 각각의 주제를 추정하도록 학습된 토픽 유사도 추정 모델을 이용할 수 있다. 예를 들어, 토픽 유사도 추정 모델은 각 문서의 토픽 분포 및 각 토픽 내의 단어 분포를 추정하여 입력된 문서의 토픽을 추정하기 위한 LDA(Latent Dirichlet Allocation) 또는 HDP(Hierarchical Dirichlet Process) 등과 같은 토픽 모델링 알고리즘을 기반으로 하는 제1 서브 모델 및 추 정된 주제 간의 유사도를 추정하기 위한 코사인 유사도 또는 유클리디언 거리(Euclidean distance) 등과 같은 유사도 알고리즘을 기반으로 하는 제2 서브 모델을 포함할 수 있으나, 이에 한정되지 않는다. 구체적으로, 프로세서는 비정형 데이터 및 과거 비정형 데이터를 토픽 유사도 추정 모델에 입력시키고, 비 정형 데이터 및 과거 비정형 데이터 각각에 대한 토픽을 추정한 후 각각의 추정된 토픽 간의 유사도를 분석하여 비정형 데이터 및 과거 비정형 데이터 간의 유사 여부를 결정할 수 있다. 예를 들어, 추정된 토픽 간의 유사도 가 사전 설정된 제1 임계 값 이상이면 프로세서는 추정된 토픽들이 유사하다고 결정하여, 정형 데이터 및 과거 비정형 데이터가 서로 유사하다고 결정할 수 있다. 추정된 토픽 간의 유사도가 사전 설정된 제2 임계 값 미만이면 프로세서는 추정된 토픽들이 유사하지 않다고 결정하여, 정형 데이터 및 과거 비정형 데이터가 유사하지 않다고 결정할 수 있다. 본 개시내용에서의 토픽 유사도 추정 모델은, 사전에 저장된 다수의 과거 디자인 작업들의 작업 요청 데이터에 포함된 과거 비정형 데이터를 학습 데이터로서 이용하여 사전 학습된 모델일 수 있다. 일례로, 토픽 유사도 추 정 모델을 구성하는 제1 서브 모델 및 제2 서브 모델은 학습 데이터가 업데이트될 때마다 사전 설정된 기간 혹 은 주기적으로 학습될 수 있다. 예를 들어, 다수의 과거 디자인 작업들의 과거 비정형 데이터에 대한 전처리가 수행되고, 전처리된 데이터가 토픽 유사도 추정 모델의 제1 서브 모델에 입력될 수 있다. 제1 서브 모델에서는 입력된 데이터로부터 토픽을 추정하고, 추정된 토픽을 출력하도록 학습될 수 있다. 제1 서브 모델을 통해서 출 력된 각 과거 비정형 데이터에 대하여 추정된 토픽들은 토픽 유사도 추정 모델의 제2 서브 모델에 입력될 수 있 다. 제2 서브 모델에서는 입력된 토픽들 간의 유사도를 계산하고, 계산된 유사도 값을 출력하도록 학습될 수 있 다. 이와 같이 출력된 유사도 값은 토픽 유사도 추정 모델의 학습에 반영될 수 있다. 예를 들어, 출력된 유사도 값은 토픽 유사도 추정 모델의 파라미터 등을 업데이트하기 위해 이용될 수 있으나, 이에 한정되지 않는다. 한편, 추출된 비정형 데이터가 추출된 과거 비정형 데이터와 서로 유사하지 않으면 프로세서는 비정형 데 이터가 작업 비효율성 요인을 포함하지 않는다고 결정한다(S650). 다시 도 5를 참조하면, 프로세서는 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하면 작업 요청 데이터를 재획득하도록 클라이언트 장치로 제안한다(S520). 구체적으로, 프로세서는 디자인 작업 요청 을 위한 작업 요청 데이터를 보강하기 위해 추가 작업 요청 항목에 대한 요청 내용을 획득하거나, 디자인 작업 을 위해 할당된 적어도 하나의 작업 슬롯의 개수를 조절하도록 제안할 수 있다. 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하지 않는다면 프로세서는 디자인 작업 요청 지원 동작을 종료할 수 있다. 작업 요청 데이터를 재획득하도록 제안하는 방법에 대해서 도 8을 참조하여 구체적으로 설명하도록 한다. 도 8은 본 개시의 실시예에 따른 작업 요청 데이터를 재획득하도록 제안하는 방법의 일례를 설명하기 위한 흐름 도이다. 제시된 실시예에서는 할당된 적어도 하나의 작업 슬롯의 개수를 조절하는 방법을 설명하도록 한다. 도 8을 참조하면, 프로세서는 추출된 비정형 데이터가, 제1 임계 시간 이상의 작업 시간이 소요된 과거 디 자인 작업의 과거 비정형 데이터와 유사한지를 결정한다(S800). 다시 말해서, 프로세서는 추출된 비정형 데이터가, 과거 디자인 작업을 위해 할당된 적어도 하나의 작업 슬롯에 해당하는 시간보다 과도하게 많은 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사한지를 결정할 수 있다. 추출된 비정형 데이터가, 제1 임계 시간 이상의 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사하면 프로세서는 디자인 작업을 위해 할당된 적어도 하나의 작업 슬롯의 개수를 사전 설정된 개수로 증가시키도록 클라이언트 장치로 제안한다(S810). 구체적으로, 프로세서는 제1 임계 시간 이상의 작업 시간이 소요된 과거 디자인 작업의 실제 작업 시간에 기반하여 할당하고자 하는 적어도 하나의 작업 슬롯의 개 수를 결정할 수 있다. 예를 들어, 프로세서는 제1 임계 시간 이상의 작업 시간이 소요된 과거 디자인 작업 의 실제 작업 시간을 이용하여 제1 평균 작업 시간을 결정하고, 결정된 제1 평균 작업 시간에 대응하는 작업 슬 롯의 개수를 결정할 수 있다. 프로세서는 디자인 작업 요청을 위해 할당된 적어도 하나의 작업 슬롯의 개 수를, 결정된 개수로 증가시키기 위한 제안을 클라이언트 장치로 전달할 수 있다. 한편, 제1 임계 시간 이상의 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사하지 않으면 프 로세서는 추출된 비정형 데이터가, 제2 임계 시간 미만의 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사한지를 결정한다(S820). 다시 말해서, 프로세서는 추출된 비정형 데이터가, 과거 디자 인 작업을 위해 할당된 적어도 하나의 작업 슬롯에 해당하는 시간보다 과도하게 작은 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사한지를 결정할 수 있다. 추출된 비정형 데이터가, 제2 임계 시간 미만의 작업 시간이 소요된 과거 디자인 작업의 과거 비정형 데이터와 유사하면 프로세서는 디자인 작업을 위해 할당된 적어도 하나의 작업 슬롯의 개수를 사전 설정된 개수로 감소시키도록 클라이언트 장치로 제안한다(S810). 구체적으로, 프로세서는 제2 임계 시간 미만의 작업 시간이 소요된 과거 디자인 작업의 실제 작업 시간에 기반하여 할당하고자 하는 적어도 하나의 작업 슬롯의 개 수를 결정할 수 있다. 예를 들어, 프로세서는 제2 임계 시간 미만의 작업 시간이 소요된 과거 디자인 작업 의 실제 작업 시간을 이용하여 제2 평균 작업 시간을 결정하고, 결정된 제2 평균 작업 시간에 대응하는 작업 슬 롯의 개수를 결정할 수 있다. 프로세서는 디자인 작업 요청을 위해 할당된 적어도 하나의 작업 슬롯의 개 수를, 결정된 개수로 감소시키기 위한 제안을 클라이언트 장치로 전달할 수 있다. 이하에서는 클라이언트 장치에서 서버의 제안에 따라 관련 인터페이스 화면들을 제공하는 방법을 도 9, 도 10, 도 11a 및 도 11b를 참조하여 설명하도록 한다. 도 9, 도 10, 도 11a, 도 11b 및 도 11c는 본 개시의 실시예에 따른 클라이언트 장치에서 서버로부터 수신된 제 안에 따라 관련 인터페이스 화면들을 제공하는 방법을 설명하기 위한 예시도들이다. 제시된 실시예에서 인터페 이스 화면들은 클라이언트 장치의 표시부를 통해서 제공될 수 있다. 또한 제시된 실시예에서 하기의 동 작들은 클라이언트 장치의 프로세서에 의해서 수행될 수 있다. 도 9를 참조하면, 클라이언트의 디자인 작업 요청을 위한 인터페이스 화면이 도시된다. 여기서, 인터페이 스 화면은 적어도 하나의 클라이언트가 요청한 적어도 하나의 디자인 작업에 대한 상세 정보를 나타내는 제1 그래픽 화면 및 디자인 작업을 요청하거나, 디자인 작업 결과를 제공받기 위한 제2 그래픽 화면 을 포함할 수 있다. 본 개시의 실시예에서 제1 그래픽 화면은 적어도 하나의 클라이언트가 작성한 디자인 작업 요청서를 기반 으로 하는, 작업 요청되거나, 현재 진행중이거나, 진행 완료된 디자인 작업 목록을 나타낼 수 있다. 예를 들어, 디자인 작업 요청 목록은, 디자인 작업을 요청한 클라이언트의 디자인 작업 요청일(즉, 서비스 신청일), 부여된 작업 번호, 작업명, 디자인 작업을 위해 결정된 작업자(즉, 담당자), 해당 작업자의 디자인 작업에 대한 예상 완료일 및 디자인 작업 진행 여부에 해당하는 현재 상태를 포함할 수 있다. 다양한 실시예에서 클라이언트에 의 해서 새로운 디자인 작업이 요청되면 프로세서는 새로운 디자인 작업에 관한 정보를 디자인 작업 목록에 추 가할 수 있다. 다양한 실시예에서 제1 그래픽 화면은 디자인 작업 목록 중 특정 디자인 작업을 검색하기 위한 인터페이스를 포함할 수도 있다. 본 개시의 실시예에서 제2 그래픽 화면은 디자인 업무를 요청하기 위한 제1 그래픽 객체 및 완료된 디자인 작업에 대한 결과 데이터를 제공받기 위한 제2 그래픽 객체를 포함할 수 있다. 제1 그래픽 객체가 선택되면 프로세서는 도 10과 같이 디자인 작업을 요청하기 위한 제3 그래픽 화면 을 표시할 수 있다. 예를 들어, 제3 그래픽 화면은 온라인 디자인 작업 요청서를 작성하기 위한 그 래픽 화면일 수 있다. 도 10을 참조하면, 제3 그래픽 화면은 요청하고자 하는 디자인 작업에 관한 상세 정보를 입력할 수 있는 복수의 입력 영역들을 포함할 수 있다. 예를 들어, 제3 그래픽 화면은 디자인 작업을 요청하는 요청자, 디자인 작업을 요청하는 날짜를 나타내는 요청일, 디자인 작업에 대한 완료 희망일, 디자인 작업의 품목, 디자 인 작업을 위해 할당하고자 하는 업무 슬롯 및 추가 요청 사항을 입력(또는 선택)할 수 있는 입력 영역들을 포 함할 수 있다. 본 개시의 몇몇 실시예에 따르면, 제3 그래픽 화면은 디자인 작업을 요청하기 위한 제5 그래픽 객체 및 취소를 위한 제6 그래픽 객체를 더 포함할 수 있다. 클라이언트에 의해서 각 입력 영역에 대한 입력이 완료되고, 제5 그래픽 객체가 선택되면 프로세서는 각 입력 영역에 대한 입력 내용(즉, 요청 내용)을 포함하는 작업 요청 데이터를 서버로 전달할 수 있다. 예를 들어, 프로세서는 요청자 항목에 대응하여 입력된 '클라이언트01', 요청일 항목에 대응하여 입력된 '2023-02-03', 완료 희망일 항목에 대응하여 입력된 '2023-02-15' 디자인 품목 항목에 대응하여 입력된 '포스터', 업무 슬롯 항목에 대응하여 입력된 '2 slot'및 추가 요청 사항 항목에 대응하여 입력된 '포스터뿐만 아니라 북디자인으로도 활용할 예정이므로, 각각에 맞는 2가지 이상의 디자인으로 제공 부탁드립니다.'를 포함하는 작업 요청 데이터를 서버로 전달할 수 있다. 서버는 클라이언트 장치로부터 수신된 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하 여 작업 요청 데이터가 작업 비효율성 요인을 포함한다고 결정되면 클라이언트 장치로 작업 요청 데이터를 재획득하도록 제안할 수 있다. 구체적으로, 서버는 수신된 작업 요청 데이터에서 비정형 데이터를 추출할 수 있다. 예를 들어, 비정형 데 이터는 도 10의 추가 요청 사항 항목에 대응하여 입력된 서술형 텍스트를 포함할 수 있다. 이어서, 서버는 과거에 수행된 복수의 과거 디자인 작업들 중 업무 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하고, 결정된 적어도 하나의 과거 디자인 작업의 사전에 수집된 과거 작업 요청 데이터 에서 과거 비정형 데이터를 추출할 수 있다. 서버는 추출된 비정형 데이터 및 추출된 과거 비정형 데이터가 서로 유사한지 결정할 수 있다. 추출된 비 정형 데이터 및 추출된 과거 비정형 데이터 간의 유사 여부를 결정하기 위해 서버는 상술한 유사도 추정 모델, 군집화 모델 및/또는 토픽 유사도 추정 모델을 이용할 수 있다. 추출된 비정형 데이터 및 추출된 과거 비정형 데이터가 서로 유사하다고 결정되면 서버는 추출된 비정형 데이터가 작업 비효율성 요인을 포함한다고 결정할 수 있다. 이러한 경우 서버는 디자인 작업 요청서를 재 작성하거나, 디자인 작업 요청을 위해 할당된 적어도 하나의 작업 슬롯의 개수를 재선택하도록 클라이언트 장치 로 제안할 수 있다. 다양한 실시예에서 서버는 추출된 비정형 데이터와 유사한 과거 비정형 데이터에 대응하는 적어도 하나의 과거 디자인 작업의 실제 작업 시간을 이용하여 평균 작업 시간을 산출하고, 산출된 평균 작업 시간에 대한 정 보를 클라이언트 장치로 전달할 수 있다. 이러한 정보는 클라이언트가 작업 슬롯을 재선택하기 위한 참고 정보로서 이용될 수 있다. 서버로부터 제안을 수신한 클라이언트 장치의 프로세서는 디자인 작업 요청을 위한 디자인 작업 요청서를 재작성 또는 추가 작성하도록 도 11a와 같이 안내 문구를 포함하는 그래픽 객체를 표시할 수 있 다. 몇몇 실시예에 따라, 프로세서는 디자인 작업 요청을 위해 선택한 적어도 하나의 작업 슬롯의 개수를 재선 택하도록 도 11b와 같이 안내 문구를 포함하는 그래픽 객체를 표시할 수 있다. 다양한 실시예에서 프로세서는 도 11c와 같이 적어도 하나의 작업 슬롯의 개수를 재선택하기 위한 제4 그래 픽 화면을 표시할 수 있다. 예를 들어, 제4 그래픽 화면은 업무 슬롯의 개수를 선택하기 위한 그래 픽 객체, 선택된 개수의 업무 슬롯에 대응하는 시간을 나타내는 그래픽 객체, 선택된 개수의 업무 슬롯을 구매하기 위한 그래픽 객체 및 취소를 위한 그래픽 객체를 포함할 수 있다. 본 개시내용에서 프로세서는 서버로부터 제안뿐만 아니라, 비정형 데이터와 유사한 과거 비정형 데이 터에 대응하는 과거 디자인 작업의 실제 작업 시간에 기반하여 산출된 평균 작업 시간에 대한 정보를 수신할 수 있다. 이러한 경우 프로세서는 평균 작업 시간에 대한 정보를 기반으로 하는 안내 문구를 더 표시할 수 있다. 다시 말해서, 프로세서는 과거에 수행된 업무 비효율 조건을 만족하는 과거 디자인 작업들의 실제 작업 시간을 고려하여 현재 요청된 디자인 작업에 대한 작업 슬롯을 조정하도록 안내 문구를 더 표시할 수 있다. 이를 통해, 본 개시에서는 클라이언트가 작성한 디자인 작업 요청서가 과도하게 많거나 적은 작업 시간을 유발 시키는 작업 비효율성 요인을 포함하는지에 따라 디자인 작업 요청서를 재획득하도록 함으로써, 디자인 작업에 대한 신뢰성을 보정할 수 있고, 클라이언트와 디자인 작업자 간의 커뮤니케이션 레벨을 향상시킬 수 있다. 도 12는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드(handheld)컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA) -이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음-, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2023-0151491", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다양한 양상들이 이제 도면들을 참조로 기재되며, 여기서 유사한 참조 번호들은 총괄적으로 유사한 구성요소들 을 지칭하는데 이용된다. 이하의 실시예에서, 설명 목적을 위해, 다수의 특정 세부사항들이 하나 이상의 양상들 의 총체적 이해를 제공하기 위해 제시된다. 그러나, 그러한 양상(들)이 이러한 구체적인 세부사항들 없이 실시 될 수 있음은 명백할 것이다. 도 1은 본 개시의 실시예에 따른 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 예시적인 시스템 의 구성도이다. 도 2는 본 개시의 실시예에 따른 서버의 블록 구성도이다. 도 3은 본 개시의 실시예에 따른 클라이언트 장치의 블록 구성도이다. 도 4는 본 개시의 실시예에 따라 네트워크 함수를 나타낸 개략도이다. 도 5는 본 개시의 실시예에 따른 디자인 작업 플랫폼에서의 디자인 작업 요청을 지원하기 위한 방법의 일례를설명하기 위한 흐름도이다. 도 6은 본 개시의 실시예에 따른 작업 요청 데이터가 작업 비효율성 요인을 포함하는지를 결정하는 방법의 일례 를 설명하기 위한 흐름도이다. 도 7은 본 개시의 실시예에 따른 업무 비효율 조건을 만족하는 적어도 하나의 과거 디자인 작업을 결정하는 방 법의 일례를 설명하기 위한 흐름도이다. 도 8은 본 개시의 실시예에 따른 작업 요청 데이터를 재획득하도록 제안하는 방법의 일례를 설명하기 위한 흐름 도이다. 도 9, 도 10, 도 11a, 도 11b 및 도 11c는 본 개시의 실시예에 따른 클라이언트 장치에서 서버로부터 수신된 제 안에 따라 관련 인터페이스 화면들을 제공하는 방법을 설명하기 위한 예시도들이다. 도 12는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
