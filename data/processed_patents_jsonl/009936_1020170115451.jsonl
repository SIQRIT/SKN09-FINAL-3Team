{"patent_id": "10-2017-0115451", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0028235", "출원번호": "10-2017-0115451", "발명의 명칭": "클래스 인식을 위한 뉴럴 네트워크 학습 방법 및 디바이스", "출원인": "삼성전자주식회사", "발명자": "김준모"}}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여,상기 적어도 하나의 클래스와 다른 클래스에 포함된 쿼리(query) 이미지의 특성 정보를 획득하는 단계;제 2 학습 네트워크 모델을 이용하여, 상기 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득하는 단계;상기 제 1 학습 네트워크 모델을 이용하여, 상기 획득된 생성 이미지의 특성 정보를 획득하는 단계; 및상기 쿼리 이미지의 특성 정보와 상기 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 상기 생성 이미지 간의 차이에 기초하여, 상기 제 1 학습 네트워크 모델 및 상기 제 2 학습 네트워크 모델 각각에 포함된 레이어의 가중치를 업데이트 하는 단계를 포함하는, 클래스 인식을 위한 뉴럴 네트워크 학습 방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,타겟 클래스에 관한 정보를 획득하는 단계를 더 포함하고, 상기 생성 이미지를 획득하는 단계는,상기 쿼리 이미지의 특성 정보 및 상기 타겟 클래스에 관한 정보를 기초로 상기 제 2 학습 네트워크 모델을 이용하여, 상기 타겟 클래스에 포함되는 생성 이미지를 획득하는, 클래스 인식을 위한 뉴럴 네트워크 학습 방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 업데이트 하는 단계는, 상기 쿼리 이미지의 특성 정보와 상기 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 상기 생성 이미지 간의 차이가 각각에 대해 기 설정된 임계값 미만으로 획득될 때까지 반복적으로 수행되는, 클래스 인식을위한 뉴럴 네트워크 학습 방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서, 반복적으로 업데이트를 수행한 결과 획득된 제 2 학습 네트워크 모델을 이용하여 생성된 생성 이미지를 클래스인식을 위한 인식 모델의 학습 이미지로 결정하는 단계를 더 포함하는, 클래스 인식을 위한 뉴럴 네트워크 학습방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서, 상기 생성 이미지의 특성 정보를 획득하는 단계는,상기 제 2 학습 네트워크 모델을 이용하여, 상기 쿼리 이미지의 특성 정보로부터 생성된 복수의 생성 이미지 중상기 쿼리 이미지 간의 차이가 가장 작은 생성 이미지의 특성 정보를 획득하는, 클래스 인식을 위한 뉴럴 네트워크 학습 방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서, 상기 이미지의 특성 정보를 획득하는 단계는,서버에 저장된 상기 제 1 학습 네트워크 모델을 이용하여 획득된 상기 쿼리 이미지의 특성 정보를 상기 서버로부터 수신하는 단계를 포함하고, 상기 뉴럴 네트워크의 학습 방법은, 상기 제 2 학습 네트워크 모델을 이용하여 획득된 상기 생성 이미지를 상기 서버에 전송하는 단계를 더 포함하공개특허 10-2019-0028235-3-는, 클래스 인식을 위한 뉴럴 네트워크 학습 방법."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "하나 이상의 인스트럭션을 저장하는 메모리; 및상기 메모리에 저장된 상기 하나 이상의 인스트럭션을 실행하는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는, 적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여,상기 적어도 하나의 클래스와 다른 클래스에 포함된 쿼리 이미지의 특성 정보를 획득하고,제 2 학습 네트워크 모델을 이용하여, 상기 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득하며,상기 제 1 학습 네트워크 모델을 이용하여, 상기 획득된 생성 이미지의 특성 정보를 획득하고,상기 쿼리 이미지의 특성 정보와 상기 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 상기 생성 이미지 간의 차이에 기초하여, 상기 제 1 학습 네트워크 모델 및 상기 제 2 학습 네트워크 모델 각각에 포함된 레이어의 가중치를 업데이트 하는, 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서, 상기 적어도 하나의 프로세서는,타겟 클래스에 관한 정보를 획득하고, 상기 쿼리 이미지의 특성 정보 및 상기 타겟 클래스에 관한 정보를 기초로 상기 제 2 학습 네트워크 모델을 이용하여, 상기 타겟 클래스에 포함되는 생성 이미지를 획득하는, 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서, 상기 업데이트 하는 단계는, 상기 쿼리 이미지의 특성 정보와 상기 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 상기 생성 이미지 간의 차이가 각각에 대해 기 설정된 임계값 미만으로 획득될 때까지 반복적으로 수행되는, 클래스 인식을위한 뉴럴 네트워크 학습 디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서, 반복적으로 업데이트를 수행한 결과 획득된 제 2 학습 네트워크 모델을 이용하여 생성된 생성 이미지를 클래스인식을 위한 인식 모델의 학습 이미지로 결정하는 단계를 더 포함하는, 클래스 인식을 위한 뉴럴 네트워크 학습디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 7 항에 있어서, 상기 적어도 하나의 프로세서는,상기 제 2 학습 네트워크 모델을 이용하여, 상기 쿼리 이미지의 특성 정보로부터 생성된 복수의 생성 이미지 중상기 쿼리 이미지 간의 차이가 가장 작은 생성 이미지의 특성 정보를 획득하는, 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 7 항에 있어서, 통신부를 더 포함하고, 상기 적어도 하나의 프로세서는, 서버에 저장된 상기 제 1 학습 네트워크 모델을 이용하여 획득된 상기 쿼리 이미지의 특성 정보를 상기 서버로공개특허 10-2019-0028235-4-부터 수신하고, 상기 디바이스에 저장된 제 2 학습 네트워크 모델을 이용하여 생성된 상기 생성 이미지를 상기서버에 전송하도록 상기 통신부를 제어하는, 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스."}
{"patent_id": "10-2017-0115451", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 1항 내지 제 6항 중 어느 하나의 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수있는 기록 매체."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 딥러닝 등의 기계 학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 인공지능 (AI) 시스템 및 그 응용에 관련된 것이다. 특히, 본 개시는 인공지능 시스템 및 그 응용에 따라 이미지에 포함된 객체의 클래스 인식을 위한 뉴럴 네트워크 학습 방법으로, 적어도 하나의 클래스 각각에 포함된 소스 학습 이미 (뒷면에 계속)"}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "개시된 실시예는 클래스 인식을 위한 뉴럴 네트워크 학습 방법, 클래스 인식을 위한 뉴럴 네트워크 학습 디바이 스 및 클래스 인식을 위한 뉴럴 네트워크 학습 방법을 수행하는 프로그램이 기록된 기록매체에 관한 것이다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence, AI) 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템이며, 기존 Rule 기반 스마트 시스템과 달리 기계가 스스로 학습하고 판단하며 똑똑해지는 시스템이다. 인공지능 시스템은 사용 할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 Rule 기반 스마트 시스템은 점차 딥러닝 기반 인공지능 시스템으로 대체되고 있다. 인공지능 기술은 기계학습(딥러닝) 및 기계학습을 활용한 요소 기술들로 구성된다. 기계학습은 입력 데이터들의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소기술은 딥러닝 등의 기계학 습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술 로서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간의 경험정보 를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함 한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주행), 조 작 제어(행동 제어) 등을 포함한다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "개시된 실시예는 적어도 하나의 학습 네트워크 모델을 이용하여, 기존에 학습되지 않은 새로운 클래스의 쿼리 이미지로부터 추가 학습 데이터를 생성하고, 추가 학습 데이터를 이용하여, 점진적으로 학습 네트워크 모델을 학습시킴으로써 를 새로운 클래스의 이미지를 인식하는 경우 발생될 수 있는 파괴적 망각(catastrophic forgetting) 문제를 해결하기 위한 뉴럴 네트워크 학승 방법 및 디바이스를 제공할 수 있다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법은, 적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여, 적어도 하나의 클래스와 다른 클래스에 포 함된 쿼리 이미지의 특성 정보를 획득하는 단계; 제 2 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정 보로부터 생성 이미지를 획득하는 단계; 제 1 학습 네트워크 모델을 이용하여, 생성 이미지의 특성 정보를 획득 하는 단계; 및 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 상기 생 성 이미지 간의 차이에 기초하여, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델 각각에 포함된 레이어 의 가중치를 업데이트 하는 단계를 포함할 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법은, 타겟 클래스에 관한 정보를 획득하는 단계를 더 포함하고, 생성 이미지를 획득하는 단계는, 쿼리 이미지의 특성 정보 및 타겟 클래스에 관한 정보를 기초로제 2 학습 네트워크 모델을 이용하여, 타겟 클래스에 포함되는 생성 이미지를 획득할 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법에 있어서, 업데이트 하는 단계는, 쿼리 이미지 의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이가 각각에 대해 기 설정된 임계값 미만으로 획득될 때까지 반복적으로 수행될 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법에 있어서, 반복적으로 업데이트를 수행한 결과 획득된 제 2 학습 네트워크 모델을 이용하여 획득된 생성 이미지를 클래스 인식을 위한 인식 모델의 학습 이미지로 결정하는 단계를 더 포함할 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법에 있어서, 생성 이미지의 특성 정보를 획득하는 단계는, 제 2 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 생성된 복수의 생성 이미지 중 쿼리 이미지 간의 차이가 가장 작은 생성 이미지의 특성 정보를 획득할 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 방법에 있어서, 이미지의 특성 정보를 획득하는 단계 는, 서버에 저장된 제 1 학습 네트워크 모델을 이용하여 획득된 쿼리 이미지의 특성 정보를 서버로부터 수신하 는 단계를 포함하고, 뉴럴 네트워크의 학습 방법은, 제 2 학습 네트워크 모델을 이용하여 획득된 생성 이미지를 서버에 전송하는 단계를 더 포함할 수 있다. 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스는, 하나 이상의 인스트럭션을 저장하는 메 모리; 및 메모리에 저장된 하나 이상의 인스트럭션을 실행하는 적어도 하나의 프로세서를 포함하고, 적어도 하 나의 프로세서는, 적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여, 적어도 하나의 클래스와 다른 클래스에 포함된 쿼리 이미지의 특성 정보를 획득하고, 제 2 학 습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득하며, 제 1 학습 네트워크 모델을 이용하여, 획득된 생성 이미지의 특성 정보를 획득하고, 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 상기 쿼리 이미지와 생성 이미지 간의 차이에 기초하여, 제 1 학습 네트 워크 모델 및 제 2 학습 네트워크 모델 각각에 포함된 레이어의 가중치를 업데이트 할 수 있다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 본 발명에 대해 구체적으로 설명하기로 한다. 본 발명에서 사용되는 용어는 본 발명에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있 다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 발명의 설명 부분에서 상 세히 그 의미를 기재할 것이다. 따라서 본 발명에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 발명의 전반에 걸친 내용을 토대로 정의되어야 한다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 구성 요소들 은 용어들에 의해 한정되지는 않는다. 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있 고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 항목들의 조합 또는 복수의 관련된 항목들 중의 어느 하나의 항목을 포함한다. 명세서 전체에서 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있음을 의미한다. 또한, 명세서에서 사용되는 \"부\"라는 용어는 소프트웨어, FPGA 또는 ASIC과 같은 하드웨어 구성요소를 의미하며, \"부\"는 어떤 역할들을 수 행한다. 그렇지만 \"부\"는 소프트웨어 또는 하드웨어에 한정되는 의미는 아니다. \"부\"는 어드레싱할 수 있는 저 장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서 \"부\"는 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태 스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 특성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌웨어, 마이크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레 이들 및 변수들을 포함한다. 구성요소들과 \"부\"들 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 \"부\"들 로 결합되거나 추가적인 구성요소들과 \"부\"들로 더 분리될 수 있다. 아래에서는 첨부한 도면을 참고하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였 다. 도 1은 일 실시예에 따른 뉴럴 네트워크 학습 방법을 설명하기 위한 개념도이다. 도 1을 참조하면, 뉴럴 네트워크 학습 디바이스(이하, 디바이스)는 클래스 인식을 위한 뉴럴 네트워크 기반의 인식 모델을 학습시키기 위한 학습 이미지를 생성할 수 있다. 본 명세서에서는, 설명의 편의를 위해, 인식 모델 을 구성하는 적어도 하나의 학습 네트워크 모델의 이용된 기존의 학습 이미지를 소스 학습 이미지로 설명하고, 추가적으로 입력되는 새로운 클래스의 학습 이미지를 생성 이미지로 설명하도록 한다. 한편, 클래스란 이미지에 포함된 객체의 종류를 나타내는 것으로서, 범주에 따라 다양한 클래스가 존재할 수 있 다. 예를 들어, 0, 1, 2, 3, 4, 5 등의 숫자의 종류가 각각 클래스가 될 수도 있고, 강아지, 고양이 등 동물의 종이 클래스가 될 수도 있다. 또한, 다른 예에 따라, 한국어, 영어, 일본어 등 언어의 종류가 클래스가 될 수도 있다. 일 실시예에 따른 디바이스는 다양한 클래스의 이미지를 하나의 모델에 순차적으로 학습시켜, 최종적으로 모든 클래스의 이미지의 인식이 가능한 모델을 학습시키는 것을 목표로 할 수 있다. 다만, 새로운 클래스의 이미지를 학습시키는 경우, 기 생성된 학습 네트워크 모델에 대해 계속해서 학습을 진행하면 이전에 학습한 레이어의 가 중치 등의 학습 내용을 망각하게 되는 문제가 발생할 수 있다. 이러한 문제는, 파괴적 망각(catastrophic forgetting)이라고도 표현될 수 있다. 일 실시예에 따른 디바이스는 파괴적 망각 문제에 따라, 기 생성된 학습 네트워크 모델의 학습 내용이 새로운 클래스의 쿼리 이미지로 인해 오버-피팅되는 문제를 최소화하기 위해, 새로운 클래스의 쿼리 이미지가 입력되는 경우, 쿼리 이미지의 특성을 유지하면서도, 학습 네트워크 모델에서 기존에 학습된 클래스를 반영 한 생성 이미지를 획득할 수 있다. 구체적으로, 디바이스는 쿼리 이미지로부터 생성 이미지를 획득하기 위한, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델을 저장할 수 있다. 여기에서, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델은 일 예일 뿐, 디바이스는 생성 이미지 획득을 위해 2개 이상의 학습 네트워크 모 델을 저장할 수도 있다. 또한, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델은 각각 인코더 (encoder) 및 디코더(decoder)로 설명될 수도 있다. 디바이스는 제 1 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보를 추출할 수 있다. 여 기에서, 특성 정보는, 예를 들어, 쿼리 이미지를 구성하는 색상, 엣지(edge), 폴리건(polygon), 채도 (saturation), 명도(brightness), 색온도, 블러(blur), 선명도(sharpness) 및 명도비(contrast) 등을 포함할수 있으나, 특성 정보가 이에 한정되는 것은 아니다. 또한, 디바이스는 제 2 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 생성 이 미지를 획득할 수 있다. 여기에서, 생성 이미지는 쿼리 이미지의 특성 정보에 기반함에 따라, 쿼리 이미지와 대응되는 특성을 가지면서도, 기존에 학습에 이용된 소스 학습 이미지의 클래스를 가질 수 있다. 일 실시예에 따른 제 2 학습 네트워크 모델은 생성 모델(Generative model)일 수 있다. 생성 모델은 클래 스 인식을 위해, 입력과 특성이 동일한 새로운 입력을 생성하기 위한 모델로서, 예를 들어, 특정 클래스의 이미 지를 학습한 모델에서, 다시 그 특정 클래스의 이미지와 같은 스타일의 이미지를 생성시킬 수 있다. 디바이스는 생성 이미지를 제 1 학습 네트워크 모델에 입력으로 적용함으로써, 생성 이미지의 특 성 정보를 획득할 수 있다. 디바이스는 쿼리 이미지와 생성 이미지 간의 차이에 관한 정보인 대립 손실(adversarial loss) 및 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이에 관한 정보인 L2 손실(L2 loss)를 획득할 수 있다. 디바이스는 대립 손실과 L2 손실이 줄어들 수 있도록 전술한 일련의 과정을 반복적으로 수행하여, 제 1 학습 네트워크 모델과 제 2 학습 네트워크 모델 각각에 포함된 레이어의 파라미터를 업데이트 함으 로써, 제 1 학습 네트워크 모델과 제 2 학습 네트워크 모델을 학습시킬 수 있다. 즉, 디바이스는 생성 모델인 제 2 학습 네트워크 모델을 이용하여 점진적으로 클래스를 학습시킬 수 있다. 여기에서, 점진적인 클래스 학습이란 하나 이상의 개념 가설을 형성한 후에, 점차적으로 추가 예제들을 이용하 여 가설을 개선하는 방법으로, 현재 주어진 예와 반례로부터 지식을 생성하고, 계속 새로운 예와 반례가 생길 때마다 점진적으로 현재의 지식을 수정하는 방향으로 진행되는 학습 방법이다. 또한, 디바이스는 인식기(classifier)를 이용하여, 대립 손실과 L2 손실을 기초로, 획득된 생성 이미지 중에서 소스 학습 이미지와 가장 근접한 생성 이미지를 선택하여, 제 1 학습 네트워크 모델 및 제 2 학습 네트워 크 모델의 학습에 이용할 수 있다. 예를 들어, 디바이스는 조건부 GAN(Generative Adversarial Network) 알고리즘을 이용하는 경우, 구별망(discriminator)의 조건 별 출력 데이터를 인식기의 결과와 일치하도록 하는 컨스트레인트(constraint)를 추가하여, 생성 모델인 제 2 학습 네트워크 모델을 학습시킬 수 있다. 여기에 서, 인식기는 입력 이미지에 포함된 객체의 클래스를 인식할 수 있도록 학습된 뉴럴 네트워크로 구성될 수 있다. 전술한 실시예에 따라 디바이스는 기존의 클래스가 반영되면서도, 쿼리 이미지의 다양한 특성 정보를 갖는 생성 이미지를 획득하여, 인식 모델을 학습시킴으로써, 클래스 인식에 대한 정확도를 높일 수 있다. 또한, 디바 이스는 획득된 생성 이미지와 새로운 클래스의 쿼리 이미지를 함께 활용하여 새로운 클래스의 인식이 가능하도 록 인식기를 학습시킬 수 있다. 도 2는 일 실시예에 따른 디바이스가 클래스 인식을 위해 뉴럴 네트워크를 학습시키는 방법을 설명하기 위한 흐 름도이다. 단계 S210에서, 디바이스는 적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여, 적어도 하나의 클래스와는 다른 클래스에 포함된 쿼리 이미지의 특성 정보를 획득할 수 있다. 일 실시예에 따른 제 1 학습 네트워크 모델은 입력되는 이미지로부터 특성 정보를 추출하기 위한 적어도 하나의 레이어로 구성될 수 있다. 또한, 제 1 학습 네트워크 모델에서 적어도 하나의 레이어의 가중치는 기존에 입력된 소스 학습 이미지를 기초로 미리 학습된 것으로 가정한다. 한편, 디바이스는 기존에 학습에 이용된 소스 학습 이미지의 클래스와는 다른 클래스를 갖는 쿼리 이미지를 획 득할 수 있다. 디바이스는 제 1 학습 네트워크 모델에 쿼리 이미지를 입력하여, 출력 데이터로 쿼리 이미지의 특성 정보를 획득할 수 있다. 단계 S220에서, 디바이스는 제 2 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 생성 이미지 를 획득할 수 있다. 일 실시예에 따른 생성 이미지는 기존의 소스 학습 이미지를 기초로 학습된 제 2 학습 네트워크 모델을 기반으 로 획득됨에 따라, 기존의 소스 학습 이미지의 클래스와 대응되는 클래스의 이미지일 수 있다. 다만, 이는 일실시예일 뿐 생성 이미지의 클래스는 소스 학습 이미지의 클래스와 상이할 수 있다. 또한, 생성 이미지는 쿼리 이미지의 특성 정보와 대응되는 특성 정보를 가질 수 있다. 단계 S230에서, 디바이스는 제 1 학습 네트워크 모델을 이용하여 획득된 생성 이미지의 특성 정보를 획득할 수 있다. 디바이스는 제 2 학습 네트워크 모델을 이용하여 획득된 생성 이미지를 다시 제 1 학습 네트워크 모델에 입력할 수 있다. 디바이스는 제 1 학습 네트워크 모델에 포함된 복수의 레이어를 이용하여, 생성 이미지의 특성 정보를 획득할 수 있다. 단계 S240에서, 디바이스는 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이에 기초하여 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델 각각에 포함된 레이어 의 가중치를 업데이트 할 수 있다. 여기에서, 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이는 L2 손실로서 나타낼 수 있다. 또한, 쿼리 이미지와 생성 이미지 간의 차이는 대립(adversarial) 손실로 나타낼 수 있다. 다만, 이는 일 예일 뿐, 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이에 관한 정보가 L2 손실 또는 대립 손실에 한정되는 것은 아니다. 디바이스는 L2 손실과 대립 손실 각각이 기 설정된 임계값 미만이 되는 시점까지 단계 S210 내지 단계 S240을 반복적으로 수행함으로써, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델을 학습시킬 수 있다. 일 실시예에 따른 디바이스는 단순히 기존의 학습 내용을 기억해 내는 것이 아닌, 새로운 클래스의 쿼리 이미지 로부터 특징을 추출하여, 추출된 특징을 갖는 다른 학습 이미지를 학습에 추가적으로 이용으로써, 학습 네트워 크 모델의 성능을 향상시킬 수 있다. 도 3은 일 실시예에 따른 디바이스가 숫자 클래스 인식을 위한 생성 이미지를 획득하는 방법을 설명하기 위한 도면이다. 도 3을 참조하면, 디바이스는 숫자 0 내지 5에 대한 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워 크 모델 및 제 2 학습 네트워크 모델을 저장할 수 있다. 또한, 본 실시예에서 클래스는 숫자의 종류 를 의미할 수 있다. 예를 들어, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델 각각은 0, 1, 2, 3, 4, 5의 클래스를 갖는 소스 학습 이미지를 기초로 학습됨에 따라 각각의 학습 네트워크 모델을 구성하는 레이어의 가중치가 숫자 0, 1, 2, 3, 4, 5를 인식할 수 있도록 설정될 수 있다. 한편, 디바이스는 새로운 클래스인 숫자 6의 쿼리 이미지를 획득할 수 있다. 디바이스는 제 1 학습 네트워 크 모델을 이용하여, 숫자 6의 쿼리 이미지의 특성 정보를 획득할 수 있다. 디바이스는 제 2 학 습 네트워크 모델을 이용하여, 숫자 6의 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득할 수 있다. 여기에서, 생성 이미지는 0 내지 5에 대한 소스 학습 이미지 중 어느 하나에 대응되는 클래 스를 가질 수 있다. 다른 실시예에 따라, 디바이스는 제 2 학습 네트워크 모델에 타겟 클래스에 관한 정보를 입력할 수도 있다. 여기에서, 타겟 클래스는 사용자 등의 의도에 따른 생성 이미지의 클래스를 나타내는 것으로서, 제 2 학 습 네트워크 모델이 기존에 학습하였던 클래스 중 어느 하나로서 선택될 수 있다. 또한, 디바이스는 타겟 클래스에 관한 정보 및 숫자 6의 쿼리 이미지의 특성 정보를 기초로 제 2 학습 네 트워크 모델을 이용하여 생성 이미지를 획득할 수 있다. 타겟 클래스가 5인 경우, 제 2 학습 네트워 크 모델을 통해 생성되는 생성 이미지는 숫자 6의 특성 정보에 대응되는 특성을 가지면서, 클래스가 5인 이미지일 수 있다. 일 실시예에 따른, 디바이스는 제 1 학습 네트워크 모델에 생성된 생성 이미지를 입력함으로써, 생성 이미지의 특성 정보를 획득할 수 있다. 또한, 디바이스는 쿼리 이미지와 생성 이미지 간의 차이에 해당하는 대립 손실 및 쿼리 이미지의 특 성 정보와 생성 이미지의 특성 정보 간의 차이에 해당하는 L2 손실에 기초하여, 제 1 학습 네트 워크 모델 및 제 2 학습 네트워크 모델 각각을 구성하는 레이어의 가중치를 업데이트 할 수 있다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 2, "content": "도 4는 일 실시예에 따른 디바이스 및 서버의 클래스 인식을 위한 뉴럴 네트워크 학습 방법을 설명하기 위한 흐 름도이다. 단계 S410에서, 디바이스는 서버에 쿼리 이미지를 전송할 수 있다. 디바이스는 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델의 학습에 기초가 된 소스 학습 이미지와 다른 클래스에 해당하는 쿼리 이미지를 획득할 수 있다. 디바이스는 쿼리 이미지가 획득됨에 따라, 이를 서버에 전송할 수 있다. 단계 S420에서, 서버는 제 1 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보를 획득할 수 있다. 서버에는 입력된 이미지로부터 특성 정보를 추출하기 위한 제 1 학습 네트워크 모델이 저장될 수 있다. 서버는 디바이스로부터 쿼리 이미지가 수신됨에 따라, 제 1 학습 네트워크 모델을 이용하여 쿼리 이미지로부터 특성 정 보를 획득할 수 있다. 단계 S430에서, 서버는 디바이스의 쿼리 이미지의 특성 정보를 전송할 수 있다. 단계 S440에서, 디바이스는 제 2 학습 네트워크 모델을 이용하여 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득할 수 있다. 일 실시예에 따른 디바이스는 쿼리 이미지의 특성과 대응되는 특성을 가지면서도, 기존의 소스 학습 이미지의 클래스를 반영한 생성 이미지를 획득할 수 있다. 단계 S450에서, 디바이스는 생성 이미지를 서버에 전송할 수 있다. 단계 S460에서, 서버는 쿼리 이미지와 생성 이미지 간의 차이 및 각각의 특성 정보간의 차이에 기초하여, 제 1 학습 네트워크 모델의 가중치를 업데이트 할 수 있다. 서버는 쿼리 이미지와 생성 이미지 간의 차이 및 각각의 특성 정보간의 차이가 줄어드는 방향으로, 제 1 학습 네트워크 모델의 가중치를 업데이트 할 수 있다. 단계 S470에서, 서버는 쿼리 이미지와 생성 이미지 간의 차이 및 각각의 특성 정보 간의 차이에 관한 정보를 디 바이스에 전송할 수 있다. 단계 S480에서, 디바이스는 쿼리 이미지와 생성 이미지 간의 차이 및 각각의 특성 정보 간의 차이에 기초하여 제 2 학습 네트워크 모델의 가중치를 업데이트 할 수 있다. 디바이스는 쿼리 이미지와 생성 이미지 간의 차이 및 각각의 특성 정보간의 차이가 줄어드는 방향으로, 제 2 학 습 네트워크 모델의 가중치를 업데이트 할 수 있다. 도 5 및 도 6은 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스의 블록도이다. 도 5를 참조하면, 뉴럴 네트워크 학습 디바이스(500, 이하, 디바이스)는 프로세서 및 메모리를 포함 할 수 있다. 다만, 이는 일 실시예일 뿐, 디바이스는 프로세서 및 메모리 보다 더 적거나 더 많 은 구성 요소를 포함할 수 있다. 예를 들어, 도 6을 참조하면, 다른 실시예에 따른 디바이스는 프로세서 및 메모리 이외에 통신부 및 출력부를 더 포함할 수 있다. 또한, 다른 예에 따라, 디바이 스는 복수의 프로세서들을 포함할 수도 있다. 프로세서는 하나 이상의 코어(core, 미도시) 및 그래픽 처리부(미도시) 및/또는 다른 구성 요소와 신호를 송수신하는 연결 통로(예를 들어, 버스(bus) 등)를 포함할 수 있다. 프로세서는 하나 이상의 코어(core, 미도시) 및 그래픽 처리부(미도시) 및/또는 다른 구성 요소와 신호를 송수신하는 연결 통로(예를 들어, 버스(bus) 등)를 포함할 수 있다. 일 실시예에 따라 프로세서는 도 1 내지 도 4을 참고하여 전술한 디바이스의 동작을 수행할 수 있다. 예를 들어, 프로세서는 적어도 하나의 클래스 각각에 포함된 소스 학습 이미지를 기초로 학습된 제 1 학습 네트워크 모델을 이용하여, 적어도 하나의 클래스와 다른 클래스에 포함된 쿼리 이미지의 특성 정보를 획득할 수 있다. 프로세서는 제 2 학습 네트워크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 생성 이미지를 획득할 수 있다. 프로세서는 제 1 학습 네트워크 모델을 이용하여, 획득된 생성 이미지의 특성 정보를 획 득할 수 있다. 또한, 프로세서는 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이에 관한 정보를 획득할 수 있다. 프로세서는 획득된 차이에 관한 정보에 기초하여, 제 1 학습 네트워크 모델 및 제 2 학습 네트워크 모델 각각에 포함된 적어도 하나의 레이어의 파라미터를 업데이트할 수 있다. 일 실시예에 따른 프로세서는 타겟 클래스에 관한 정보를 획득할 수 있다. 또한, 프로세서는 쿼리 이 미지의 특성 정보 및 타겟 클래스에 관한 정보를 기초로 제 2 학습 네트워크 모델을 이용하여, 타겟 클래스에 포함되는 생성 이미지를 획득할 수 있다. 프로세서는 쿼리 이미지의 특성 정보와 생성 이미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이가 각각에 대해 기 설정된 임계값 미만으로 획득될 까지 전술한 업데이트 동작을 반복적으로 수행할 수 있다. 한편, 프로세서는 프로세서 내부에서 처리되는 신호(또는, 데이터)를 일시적 및/또는 영구적으로 저 장하는 램(RAM: Random Access Memory, 미도시) 및 롬(ROM: Read-Only Memory, 미도시)을 더 포함할 수 있다. 또한, 프로세서는 그래픽 처리부, 램 및 롬 중 적어도 하나를 포함하는 시스템온칩(SoC: system on chip) 형태로 구현될 수 있다. 메모리는 프로세서의 처리 및 제어를 위한 프로그램들(하나 이상의 인스트럭션들)을 저장할 수 있다. 메모리에 저장된 프로그램들은 기능에 따라 복수 개의 모듈들로 구분될 수 있다. 일 실시예에 따라 메모리 는 도 7을 참고하여 후술할 데이터 학습부 및 데이터 인식부가 소프트웨어 모듈로 구성될 수 있다. 또한, 데이터 학습부 및 데이터 인식부는 각각 독립적으로 학습 네트워크 모델을 포함하거나, 하나의 학습 네트워크 모델을 공유할 수 있다. 통신부는 외부 서버(예를 들어, 도 4의 서버 등) 및 기타 외부 장치와 통신을 하게 하는 하나 이상의 구성 요소를 포함할 수 있다. 통신부는 서버에 저장된 제 1 학습 네트워크 모델을 이용하여 획득된 쿼리 이미지 의 특성 정보를 서버로부터 수신할 수 있다. 또한, 통신부는 특성 정보를 기초로 제 2 학습 네트워크 모델 을 이용하여 획득된 생성 이미지를 서버에 전송할 수 있다. 출력부는 획득된 생성 이미지를 출력할 수 있다. 또한, 출력부는 쿼리 이미지의 특성 정보와 생성 이 미지의 특성 정보 간의 차이 및 쿼리 이미지와 생성 이미지 간의 차이에 관한 정보를 출력할 수 있다. 한편, 디바이스는 예를 들어, PC, 랩톱, 휴대폰, 마이크로 서버, GPS(global positioning system) 장치, 스마트 폰, 웨어러블 단말기, 전자책 단말기, 가전기기, 자동차 내의 전자 장치 및 기타 모바일 또는 비모바일 컴퓨팅 장치일 수 있다. 그러나, 이에 제한되지 않으며, 디바이스는 데이터 프로세싱 기능을 구비한 모든 종류의 기기를 포함할 수 있다. 도 7은 일 실시예에 따른 프로세서를 설명하기 위한 도면이다. 도 7을 참조하면, 일 실시예에 따른 프로세서는 데이터 학습부 및 데이터 인식부를 포함할 수 있다. 데이터 학습부는 이미지로부터 특성 정보를 획득하기 위한 기준을 학습할 수 있다. 예를 들어, 데이터 학 습부는 소스 학습 이미지, 쿼리 학습 이미지 및 생성 이미지 중 적어도 하나로부터 특성 정보를 획득하기 위한 기준을 학습할 수 있다. 여기에서, 학습된 기준에 따라, 데이터 학습부에 포함된 적어도 하나의 레이 어의 가중치가 결정될 수 있다. 데이터 인식부는 데이터 학습부를 통해 학습된 기준에 기초하여, 복수의 이미지 각각의 특성 정보를 추출하거나, 복수의 이미지 각각에 포함된 객체의 클래스를 인식할 수 있다. 데이터 학습부 및 데이터 인식부 중 적어도 하나는, 적어도 하나의 하드웨어 칩 형태로 제작되어 뉴 럴 네트워크 학습 디바이스에 탑재될 수 있다. 예를 들어, 데이터 학습부 및 데이터 인식부 중 적어 도 하나는 인공 지능(AI; artificial intelligence)을 위한 전용 하드웨어 칩 형태로 제작될 수도 있고, 또는 기존의 범용 프로세서(예: CPU 또는 application processor) 또는 그래픽 전용 프로세서(예: GPU)의 일부로 제 작되어 전술한 각종 뉴럴 네트워크 학습 디바이스에 탑재될 수도 있다. 이 경우, 데이터 학습부 및 데이터 인식부는 하나의 뉴럴 네트워크 학습 디바이스에 탑재될 수도 있 으며, 또는 별개의 뉴럴 네트워크 학습 디바이스에 각각 탑재될 수도 있다. 예를 들어, 데이터 학습부 및 데이터 인식부 중 하나는 디바이스에 포함되고, 나머지 하나는 서버에 포함될 수 있다. 또한, 데이터 학습 부 및 데이터 인식부는 유선 또는 무선으로 통하여, 데이터 학습부가 구축한 모델 정보를 데이 터 인식부로 제공할 수도 있고, 데이터 인식부로 입력된 데이터가 추가 학습 데이터로서 데이터 학습부로 제공될 수도 있다. 한편, 데이터 학습부 및 데이터 인식부 중 적어도 하나는 소프트웨어 모듈로 구현될 수 있다. 데이터 학습부 및 데이터 인식부 중 적어도 하나가 소프트웨어 모듈(또는, 인스트럭션(instruction) 포함하 는 프로그램 모듈)로 구현되는 경우, 소프트웨어 모듈은 컴퓨터로 읽을 수 있는 판독 가능한 비일시적 판독 가 능 기록매체(non-transitory computer readable media)에 저장될 수 있다. 또한, 이 경우, 적어도 하나의 소프 트웨어 모듈은 OS(Operating System)에 의해 제공되거나, 소정의 어플리케이션에 의해 제공될 수 있다. 또는, 적어도 하나의 소프트웨어 모듈 중 일부는 OS(Operating System)에 의해 제공되고, 나머지 일부는 소정의 어플 리케이션에 의해 제공될 수 있다. 도 8은 일 실시예에 따른 데이터 학습부의 블록도이다. 도 8을 참조하면, 일부 실시예에 따른 데이터 학습부는 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부를 포함할 수 있다. 다만, 이는 일 실시예일 뿐, 전술한 구 성 들 보다 적은 구성 요소로 데이터 학습부가 구성되거나, 전술한 구성들 이외에 다른 구성 요소가 추가 적으로 데이터 학습부에 포함될 수 있다. 데이터 획득부는 소스 학습 이미지 및 쿼리 이미지 중 적어도 하나를 학습 이미지로 획득할 수 있다. 일 예로, 데이터 획득부는 데이터 학습부를 포함하는 뉴럴 네트워크 학습 디바이스 또는 데이터 학습부 를 포함하는 뉴럴 네트워크 학습 디바이스와 통신 가능한 외부의 디바이스 또는 서버로부터 적어도 하나의 이미지를 획득할 수 있다. 또한, 데이터 획득부는 도 1 내지 도 4를 참고하여 전술한 제 1 학습 네트워크 모델 및 제 2 학습 네트워 크 모델을 이용하여, 쿼리 이미지의 특성 정보로부터 획득한 생성 이미지를 획득할 수도 있다. 한편, 일 실시예에 따른 데이터 획득부에서 획득하는 적어도 하나의 이미지는 클래스에 따라 분류된 이미 지 중 하나일 수 있다. 예를 들어, 데이터 획득부는 종 별로 분류된 이미지를 기초로 학습을 수행할 수 있 다. 전처리부는 이미지의 특성 정보 추출 또는 이미지 내의 객체의 클래스 인식을 위한 학습에 획득된 이미지 가 이용될 수 있도록, 획득된 이미지를 전처리할 수 있다. 전처리부는 후술할 모델 학습부가 학습을 위하여 획득된 적어도 하나의 이미지를 이용할 수 있도록, 획득된 적어도 하나의 이미지를 기 설정된 포맷으로 가공할 수 있다. 학습 데이터 선택부는 전처리된 데이터 중에서 학습에 필요한 이미지를 선택할 수 있다. 선택된 이미지는 모델 학습부에 제공될 수 있다. 학습 데이터 선택부는 설정된 기준에 따라, 전처리된 이미지 중에서 학습에 필요한 이미지를 선택할 수 있다. 모델 학습부는 학습 네트워크 모델 내의 복수의 레이어에서 이미지로부터 어떠한 정보를 이용하여, 특성 정보를 획득하거나, 이미지 내의 객체를 인식하는지에 대한 기준을 학습할 수 있다. 예를 들어, 모델 학습부 는 소스 학습 이미지에 근접한 생성 이미지 획득을 위하여, 쿼리 이미지로부터 어떠한 특성 정보를 추출해 야 하는지 또는 추출된 특성 정보로부터 어떠한 기준에 따라 생성 이미지를 획득할 지에 대한 기준을 학습할 수 있다. 다양한 실시예에 따르면, 모델 학습부는 미리 구축된 데이터 인식 모델이 복수 개가 존재하는 경우, 입력 된 학습 데이터와 기본 학습 데이터의 관련성이 큰 데이터 인식 모델을 학습할 데이터 인식 모델로 결정할 수 있다. 이 경우, 기본 학습 데이터는 데이터의 타입 별로 기 분류되어 있을 수 있으며, 데이터 인식 모델은 데이 터의 타입 별로 미리 구축되어 있을 수 있다. 예를 들어, 기본 학습 데이터는 학습 데이터가 생성된 지역, 학습 데이터가 생성된 시간, 학습 데이터의 크기, 학습 데이터의 장르, 학습 데이터의 생성자, 학습 데이터 내의 객 체의 종류 등과 같은 다양한 기준으로 기 분류되어 있을 수 있다. 또한, 모델 학습부는, 예를 들어, 학습에 따라 인식된 클래스가 올바른 지에 대한 피드백을 이용하는 강화 학습(reinforcement learning)을 통하여, 데이터 생성 모델을 학습시킬 수 있다. 또한, 데이터 생성 모델이 학습되면, 모델 학습부는 학습된 데이터 생성 모델을 저장할 수 있다. 이 경우, 모델 학습부는 학습된 데이터 생성 모델을 데이터 획득부를 포함하는 뉴럴 네트워크 학습 디바이스의 메모리에 저장할 수 있다. 또는, 모델 학습부는 학습된 데이터 생성 모델을 뉴럴 네트워크 학습 디바이스와 유선 또는 무선 네트워크로 연결되는 서버의 메모리에 저장할 수도 있다. 이 경우, 학습된 데이터 생성 모델이 저장되는 메모리는, 예를 들면, 뉴럴 네트워크 학습 디바이스의 적어도 하 나의 다른 구성요소에 관계된 명령 또는 데이터를 함께 저장할 수도 있다. 또한, 메모리는 소프트웨어 및/또는 프로그램을 저장할 수도 있다. 프로그램은, 예를 들면, 커널, 미들웨어, 애플리케이션 프로그래밍 인터페이스 (API) 및/또는 애플리케이션 프로그램(또는 \"애플리케이션\") 등을 포함할 수 있다. 모델 평가부는 데이터 생성 모델에 평가 데이터를 입력하고, 평가 데이터로부터 출력되는 추가 학습 데이 터의 생성 결과, 소정 기준을 만족하지 못하는 경우, 모델 학습부로 하여금 다시 학습하도록 할 수 있다. 이 경우, 평가 데이터는 데이터 생성 모델을 평가하기 위한 기 설정된 데이터일 수 있다. 여기에서, 평가 데이 터는 학습 네트워크 모델을 기반으로 생성된 생성 이미지와 쿼리 이미지 간의 차이 및 생성 이미지의 특성 정보 와 쿼리 이미지의 특성 정보 간의 차이 등을 포함할 수 있다. 한편, 학습 네트워크 모델이 복수 개 존재하는 경우, 모델 평가부는 각각의 학습 네트워크 모델에 대하여 소정 기준을 만족하는지를 평가하고, 소정 기준을 만족하는 모델을 최종 학습 네트워크 모델로서 결정할 수 있 다. 한편, 데이터 학습부 내의 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부 중 적어도 하나는, 적어도 하나의 하드웨어 칩 형태로 제작되어 뉴럴 네트워크 학습 디바이스에 탑재될 수 있다. 예를 들어, 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부 중 적어도 하나는 인공 지능(AI; artificial intelligence)을 위한 전용 하 드웨어 칩 형태로 제작될 수도 있고, 또는 기존의 범용 프로세서(예: CPU 또는 application processor) 또는 그 래픽 전용 프로세서(예: GPU)의 일부로 제작되어 전술한 각종 뉴럴 네트워크 학습 디바이스 에 탑재될 수도 있 다. 또한, 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부는 하나의 뉴럴 네트워크 학습 디바이스에 탑재될 수도 있으며, 또는 별개의 뉴럴 네트워크 학습 디바이스들에 각 각 탑재될 수도 있다. 예를 들어, 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부 중 일부는 뉴럴 네트워크 학습 디바이스에 포함되고, 나머지 일부는 서버에 포함될 수 있다. 또한, 데이터 획득부, 전처리부, 학습 데이터 선택부, 모델 학습부 및 모델 평가부 중 적어도 하나는 소프트웨어 모듈로 구현될 수 있다. 데이터 획득부, 전처리부, 학습 데이터 선택부 , 모델 학습부 및 모델 평가부 중 적어도 하나가 소프트웨어 모듈(또는, 인스트럭션 (instruction) 포함하는 프로그램 모듈)로 구현되는 경우, 소프트웨어 모듈은 컴퓨터로 읽을 수 있는 판독 가능 한 비일시적 판독 가능 기록매체(non-transitory computer readable media)에 저장될 수 있다. 또한, 이 경우, 적어도 하나의 소프트웨어 모듈은 OS(Operating System)에 의해 제공되거나, 소정의 애플리케이션에 의해 제공 될 수 있다. 또는, 적어도 하나의 소프트웨어 모듈 중 일부는 OS(Operating System)에 의해 제공되고, 나머지 일부는 소정의 애플리케이션에 의해 제공될 수 있다. 도 9는 일 실시예에 따른 데이터 인식부의 블록도이다. 도 9를 참조하면, 일부 실시예에 따른 데이터 인식부는 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공부 및 모델 갱신부를 포함할 수 있다. 데이터 획득부는 이미지의 특성 정보 추출 또는 이미지 내의 객체 인식에 필요한 적어도 하나의 이미지를 획득할 수 있으며, 전처리부는 이미지의 특성 정보 추출 또는 이미지 내의 객체의 클래스 인식을 위해 획 득된 적어도 하나의 이미지가 이용될 수 있도록, 획득된 이미지를 전처리할 수 있다. 전처리부는 후술할 인식 결과 제공부가 이미지의 특성 정보 추출 또는 이미지 내의 객체의 클래스 인식을 위하여 획득된 이미 지를 이용할 수 있도록, 획득된 이미지를 기 설정된 포맷으로 가공할 수 있다. 인식 데이터 선택부는 전처 리된 데이터 중에서 특성 추출 또는 클래스 인식에 필요한 이미지를 선택할 수 있다. 선택된 데이터는 인식 결 과 제공부에게 제공될 수 있다. 인식 결과 제공부는 선택된 이미지를 일 실시예에 따른 학습 네트워크 모델에 적용하여 이미지의 특성 정 보를 추출하거나, 이미지 내의 객체를 인식할 수 있다. 학습 네트워크 모델에 적어도 하나의 이미지를 입력하여 특성 정보를 추출하거나 객체를 인식하는 방법은 도 1 내지 4을 참고하여 전술한 방법과 대응될 수 있다. 인식 결과 제공부는 적어도 하나의 이미지 내에 포함된 객체의 클래스를 인식한 결과를 제공할 수 있다. 모델 갱신부는 인식 결과 제공부에 의해 제공되는 이미지 내의 객체의 클래스 인식 결과에 대한 평가 에 기초하여, 학습 네트워크 모델에 포함된 종분류 네트워크 또는 적어도 하나의 특성 추출 레이어의 파라미터 등이 갱신되도록 평가에 대한 정보를 도 8을 참고하여 전술한 모델 학습부에게 제공할 수 있다. 한편, 데이터 인식부 내의 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공 부 및 모델 갱신부 중 적어도 하나는, 적어도 하나의 하드웨어 칩 형태로 제작되어 뉴럴 네트워크 학 습 디바이스에 탑재될 수 있다. 예를 들어, 데이터 획득부, 전처리부, 인식 데이터 선택부, 인 식 결과 제공부 및 모델 갱신부 중 적어도 하나는 인공 지능을 위한 전용 하드웨어 칩 형태로 제작될 수도 있고, 또는 기존의 범용 프로세서(예: CPU 또는 application processor) 또는 그래픽 전용 프로세서(예: GPU)의 일부로 제작되어 전술한 각종 뉴럴 네트워크 학습 디바이스에 탑재될 수도 있다. 또한, 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공부 및 모델 갱신부 는 하나의 뉴럴 네트워크 학습 디바이스에 탑재될 수도 있으며, 또는 별개의 뉴럴 네트워크 학습 디바이스 들에 각각 탑재될 수도 있다. 예를 들어, 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공부 및 모델 갱신부 중 일부는 뉴럴 네트워크 학습 디바이스에 포함되고, 나머지 일부는 서 버에 포함될 수 있다. 또한, 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공부 및 모델 갱신부 중 적어도 하나는 소프트웨어 모듈로 구현될 수 있다. 데이터 획득부, 전처리부, 인식 데이터 선택부, 인식 결과 제공부 및 모델 갱신부 중 적어도 하나가 소프트웨어 모듈(또는, 인스트럭션 (instruction) 포함하는 프로그램 모듈)로 구현되는 경우, 소프트웨어 모듈은 컴퓨터로 읽을 수 있는 판독 가능 한 비일시적 판독 가능 기록매체(non-transitory computer readable media)에 저장될 수 있다. 또한, 이 경우, 적어도 하나의 소프트웨어 모듈은 OS(Operating System)에 의해 제공되거나, 소정의 어플리케이션에 의해 제공 될 수 있다. 또는, 적어도 하나의 소프트웨어 모듈 중 일부는 OS(Operating System)에 의해 제공되고, 나머지 일부는 소정의 어플리케이션에 의해 제공될 수 있다. 도 10은 일 실시예에 따른 서버에서 복수의 디바이스(1022, 1024)로부터 생성된 제 2 학습 네트워크 모델 을 통합하는 방법을 설명하기 위한 도면이다. 도 10을 참조하면, 뉴럴 네트워크 학습 시스템은 복수의 디바이스(1022, 1024) 및 서버를 포함할 수 있다. 다만, 이는 일 예일 뿐, 뉴럴 네트워크 학습 시스템의 구성 요소가 전술한 예에 한정되는 것은 아니다. 예를 들어, 뉴럴 네트워크 학습 시스템은 복수의 서버 및 복수의 디바이스로 구성될 수도 있다. 제 1 디바이스 및 제 2 디바이스는 도 4를 참조하여 전술한 바와 같이 각각 제 2 학습 네트워크 모 델을 저장할 수 있다. 제 1 디바이스는 서버에 쿼리 이미지를 제공하고, 서버로부터 제 1 학 습 네트워크 모델을 이용하여 획득된 쿼리 이미지의 특성 정보를 수신할 수 있다. 제 1 디바이스는 쿼리 이미지의 특성 정보를 기초로 제 2 학습 네트워크 모델을 이용하여 생성 이미지를 획득할 수 있다. 또한, 제 2 디바이스 역시, 전술한 제 1 디바이스의 동작에 대응되는 동작을 수행함으로써, 생성 이미지를 획득할 수 있다. 한편, 일 실시예에 따른 제 1 디바이스 및 제 2 디바이스는 획득된 생성 이미지 및 생성 이미지 획 득에 따라 업데이트 된 제 2 학습 네트워크 모델을 서버에 제공할 수 있다. 일 실시예에 따른 서버는 복수의 디바이스(1022, 1024) 각각에서 생성된 추가 학습 데이터 및 제 2 학습 네트워크 모델을 기반으로, 다양한 클래스를 인식할 수 있는 새로운 학습 네트워크 모델을 구축할 수 있다. 한편, 상술한 본 발명의 실시예들은 컴퓨터에서 실행될 수 있는 프로그램으로 작성가능하고, 컴퓨터로 읽을 수 있는 기록매체를 이용하여 상기 프로그램을 동작시키는 범용 디지털 컴퓨터에서 구현될 수 있다. 상기 컴퓨터로 읽을 수 있는 기록매체는 마그네틱 저장매체(예를 들면, 롬, 플로피 디스크, 하드디스크 등), 광 학적 판독 매체(예를 들면, 시디롬, 디브이디 등) 및 캐리어 웨이브(예를 들면, 인터넷을 통한 전송)와 같은 저 장매체를 포함한다."}
{"patent_id": "10-2017-0115451", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 첨부된 도면을 참조하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야에서 통상의 지식 을 가진 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수있다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정 적이 아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2017-0115451", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 뉴럴 네트워크 학습 방법을 설명하기 위한 개념도이다. 도 2는 일 실시예에 따른 디바이스가 클래스 인식을 위해 뉴럴 네트워크를 학습시키는 방법을 설명하기 위한 흐 름도이다. 도 3은 일 실시예에 따른 디바이스가 숫자 클래스 인식을 위한 생성 이미지를 획득하는 방법을 설명하기 위한 도면이다. 도 4는 일 실시예에 따른 디바이스 및 서버의 클래스 인식을 위한 뉴럴 네트워크 학습 방법을 설명하기 위한 흐 름도이다. 도 5 및 도 6은 일 실시예에 따른 클래스 인식을 위한 뉴럴 네트워크 학습 디바이스의 블록도이다. 도 7은 일 실시예에 따른 프로세서를 설명하기 위한 도면이다. 도 8은 일 실시예에 따른 데이터 학습부의 블록도이다. 도 9는 일 실시예에 따른 데이터 인식부의 블록도이다. 도 10은 일 실시예에 따른 서버에서 복수의 디바이스로부터 생성된 제 2 학습 네트워크 모델을 통합하는 방법을 설명하기 위한 도면이다."}
