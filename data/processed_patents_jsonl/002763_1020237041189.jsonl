{"patent_id": "10-2023-7041189", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0015642", "출원번호": "10-2023-7041189", "발명의 명칭": "검증 가능 클레임을 위한 신뢰성 있는 관리 연속성", "출원인": "마이크로소프트 테크놀로지 라이센싱, 엘엘씨", "발명자": "머독 브랜든 브라이언"}}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "분산 원장에 의해 뒷받침되는 탈중앙화 식별자(Decentralized Identifier, DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성(chain of custody)을 기록하기 위한 컴퓨팅 시스템으로서,하나 이상의 프로세서와,컴퓨터 실행 가능 명령어를 갖는 하나 이상의 컴퓨터 판독 가능 저장 매체를 포함하며,상기 하나 이상의 컴퓨터 판독 가능 저장 매체는 상기 하나 이상의 프로세서에 의해 실행될 때 상기 컴퓨팅 시스템으로 하여금,제 2 엔티티에서, 제 1 엔티티로부터 제 1 관리 연속성 검증 가능 클레임(chain of custody verifiable claim)을 수신하게 하고 - 상기 제 1 관리 연속성 검증 가능 클레임은 상기 제 1 엔티티에 의해 서명되고 상기 제 1관리 연속성 검증 가능 클레임이 수신되는 시점에 객체가 상기 제 1 엔티티의 관리 중에 있었음을 명시함 - ,분산 원장에 액세스하여 상기 제 1 관리 연속성 검증 가능 클레임을 검증하게 하고,제 2 관리 연속성 검증 가능 클레임을 생성하게 하고 - 상기 제 2 관리 연속성 검증 가능 클레임은 상기 제 1관리 연속성 검증 가능 클레임을 포함하고 제 2 엔티티에 의해 서명됨 - ,상기 분산 원장에 상기 제 2 관리 연속성 검증 가능 클레임의 적어도 일부를 기록하게 하고,상기 제 2 관리 연속성 검증 가능 클레임을 제 3 엔티티에 제공하게 하는 - 상기 제 2 관리 연속성 검증 가능클레임은 상기 제 2 관리 연속성 검증 가능 클레임이 상기 제 3 엔티티에 제공되는 시점에 상기 객체가 상기 제2 엔티티의 관리 중에 있었음을 상기 제 3 엔티티에 명시하도록 구성됨 - , 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 제 1 엔티티는 상기 관리 연속성을 생성하는 엔티티인 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 제 1 엔티티는 상기 객체를 생성하는 엔티티인 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 제 2 관리 연속성 검증 가능 클레임은 상기 객체에 대한 수리 또는 변경을 명시하는 클레임을 포함하는 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 제 2 관리 연속성 검증 가능 클레임은 신뢰성 있는 엔티티(trusted entity)에 의해 만들어진 클레임을 포함하는 공개특허 10-2024-0015642-2-컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 객체는 디지털 객체이고, 상기 제 1 관리 연속성 검증 가능 클레임이 상기 디지털 객체의 메타데이터에 포함되는 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 제 1 관리 연속성 검증 가능 클레임은 상기 제 1 관리 연속성 검증 가능 클레임의 메타데이터에 상기 객체의 디지털 사진을 포함시키는 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "분산 원장에 의해 뒷받침되는 탈중앙화 식별자(Decentralized Identifier, DID)를 구현하는 탈중앙화 네트워크에 관리 연속성(chain of custody)을 기록하는 방법으로서,제 2 엔티티에서, 제 1 엔티티로부터 제 1 관리 연속성 검증 가능 클레임(chain of custody verifiable claim)을 수신하는 단계 - 상기 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 서명되며 상기 제 1 관리연속성 검증 가능 클레임이 수신되는 시점에 객체가 상기 제 1 엔티티의 관리 중에 있었음을 명시함 - 와,분산 원장에 액세스하여 상기 제 1 관리 연속성 검증 가능 클레임을 검증하는 단계와,제 2 관리 연속성 검증 가능 클레임을 생성하는 단계 - 상기 제 2 관리 연속성 검증 가능 클레임은 상기 제 1관리 연속성 검증 가능 클레임을 포함하고 상기 제 2 엔티티에 의해 서명됨 - 와,상기 분산 원장에 상기 제 2 관리 연속성 검증 가능 클레임의 적어도 일부를 기록하는 단계와,상기 제 2 관리 연속성 검증 가능 클레임을 제 3 엔티티에 제공하는 단계 - 상기 제 2 관리 연속성 검증 가능클레임은 상기 제 2 관리 연속성 검증 가능 클레임이 상기 제 3 엔티티에 제공되는 시점에 상기 객체가 상기 제2 엔티티의 관리 중에 있었음을 상기 제 3 엔티티에 명시하도록 구성됨 - 를 포함하는 방법."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "분산 원장에 의해 뒷받침되는 탈중앙화 식별자(Decentralized Identifier, DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성(chain of custody)을 검증하기 위한 컴퓨팅 시스템으로서,하나 이상의 프로세서와,컴퓨터 실행 가능 명령어를 갖는 하나 이상의 컴퓨터 판독 가능 저장 매체를 포함하며,상기 하나 이상의 컴퓨터 판독 가능 저장 매체는 상기 하나 이상의 프로세서에 의해 실행될 때 상기 컴퓨팅 시스템으로 하여금,제 3 엔티티에서, 제 1 엔티티로부터 객체와 관련된 제 1 관리 연속성 검증 가능 클레임을 수신하게 하고 - 상기 제 1 관리 연속성 검증 가능 클레임은 상기 제 1 엔티티에 의해 생성된 제 1 서명을 포함하고 상기 제 1 엔티티에 의해 상기 제 2 엔티티로부터 수신된 상기 객체와 관련된 제 2 관리 연속성 검증 가능 클레임을 내장하고 있으며, 상기 제 2 관리 연속성 검증 가능 클레임은 상기 제 2 엔티티에 의해 생성된 제 2 서명을 포함함 -,분산 원장에 액세스하여 상기 제 1 관리 연속성 검증 가능 클레임을 검증하게 하고 - 상기 제 1 관리 연속성 검증 가능 클레임의 검증은 상기 제 1 관리 연속성 검증 가능 클레임이 상기 제 3 엔티티에 의해 수신된 시점에상기 제 1 엔티티가 상기 객체의 적절한 관리를 담당하고 있음을 나타냄 - ,공개특허 10-2024-0015642-3-상기 제 1 관리 연속성 검증 가능 클레임의 성공적인 검증 시, 상기 분산 원장에 액세스하여, 상기 제 2 관리연속성 검증 가능 클레임을 검증하게 하도록 - 상기 제 2 관리 연속성 검증 가능 클레임의 검증은 상기 제 2 관리 연속성 검증 가능 클레임이 상기 제 1 엔티티에 의해 수신된 시점에 상기 제 2 엔티티가 상기 객체의 적절한관리를 담당하고 있음을 나타냄 - 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 객체는 디지털 객체이고, 상기 제 1 관리 연속성 검증 가능 클레임은 상기 디지털 객체의 메타데이터에 포함되는 컴퓨팅 시스템."}
{"patent_id": "10-2023-7041189", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "제 1 관리 연속성 검증 가능 클레임이 제 2 엔티티에 의해 제 1 엔티티로부터 수신된다. 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 서명되며, 객체가 제 1 엔티티의 관리 중에 있었음을 명시한다. 분산 원장이 액세스되어 제 1 관리 연속성 검증 가능 클레임을 검증한다. 제 1 관리 연속성 검증 가능 클레임이 내장된 제 2 관리 연속성 검증 가능 클레임이 생성되고 제 2 엔티티에 의해 서명된다. 제 2 관리 연속성 검증 가능 클레임은 분산 원장에 기록된다. 제 2 관리 연속성 검증 가능 클레임은 제 3 엔티티에게 제공된다. 제 2 관리 연속성 검 증 가능 클레임은 객체가 제 2 엔티티의 관리 중에 있었음을 제 3 엔티티에게 명시하도록 구성된다."}
{"patent_id": "10-2023-7041189", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "디지털 아이덴티티(digital identity)는 다양한 디지털 맥락에서 엔티티를 추적하는 메커니즘이다. 아이덴티티 가 결정되면 그 아이덴티티를 가진 엔티티와 관련하여 적절한 조치를 취할 수 있다. 한 예로서, 인가, 특권, 사용자 맞춤 및 액세스가 엔티티에 제공될 수 있다. 따라서 디지털 아이덴티티는 인가와 특권의 적절한 억제를 통해 정보가 적절한 신뢰 경계로 제한되도록 하는 중요한 메커니즘이다. 디지털 아이덴티티는 또한 데이터 및 사용자 맞춤에 액세스할 때 긍정적이고 일관된 사용자 경험을 보장하는 중요한 메커니즘이다. 아이덴티티를 증명하는 현재 사용되는 대부분의 문서나 기록은 정부, 기업, 학교, 고용주 또는 기타 서비스 센 터나 규제 조직과 같은 중앙 집중 조직에 의해 발급된다. 이러한 조직은 중앙 집중 아이덴티티 관리 시스템에 서 모든 구성원의 아이덴티티를 관리하는 경우가 많다. 중앙 집중 아이덴티티 관리 시스템은 조직에서 발급된 아이덴티티, 인증, 인가, 역할 및 특권을 관리하는 데 사용되는 중앙 집중 정보 시스템이다. 중앙 집중 아이덴 티티 관리 시스템은 이들 시스템이 종종 전문적으로 관리되는 하드웨어와 소프트웨어를 사용하기 때문에 안전한 것으로 간주되어 왔다. 전형적으로, 아이덴티티 발급 조직은 조직에 사람을 등록하기 위한 조건과 요구 사항을 설정한다. 한 당사자가 다른 당사자의 아이덴티티를 검증해야 할 때, 검증하는 당사자는 종종 상대방의 아이덴 티티를 검증 및/또는 인증하는 정보를 획득하기 위해 중앙 집중 아이덴티티 관리 시스템을 거쳐야 한다. 탈중앙화 식별자(Decentralized Identifier, DID)는 보다 최신의 식별자 유형이다. 탈중앙화 식별자는 임의의 중앙 집중 레지스트리, 아이덴티티 공급자 또는 인증 기관으로부터 독립적이다. (블록체인과 같은) 분산 원장 기술은 완전히 탈중앙화 식별자를 사용하는 기회를 제공한다. 분산 원장 기술은 분산 원장을 사용하여 둘 이상 의 당사자 간의 거래를 검증 가능 방식으로 기록한다. 일단 거래가 기록되면, 원장의 섹터의 데이터는 원장의 모든 후속 섹션을 변경하지 않고는 소급하여 변경될 수 없다. 이것은 분산 원장에 기록된 데이터를 변조하기 어렵거나 불가능한 상당히 안전한 플랫폼을 제공한다. DID는 일반적으로 중앙 집중 관리 시스템에 의해 제어되 지 않고 DID의 소유자에 의해 소유되기 때문에, 때때로 DID는 권한 없는 아이덴티티라고 지칭된다. 본 명세서에 청구된 주제는 임의의 단점을 해결하거나 위에서 설명한 바와 같은 환경에서만 동작하는 실시예로 제한되지 않는다. 오히려, 이러한 배경은 본 명세서에 설명된 일부 실시예가 실행될 수 있는 하나의 예시적인 기술 영역을 설명하기 위해 제공될 뿐이다."}
{"patent_id": "10-2023-7041189", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "이 요약은 아래의 상세한 설명에 추가로 설명되는 일부 개념을 단순화된 형태로 소개하기 위해 제공된다. 이"}
{"patent_id": "10-2023-7041189", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "요약은 청구된 주제의 주요 특징이나 필수적인 특징을 식별하려는 것이 아니며, 청구된 주제의 범위를 결정하는 데 있어서 도움으로 사용되게 하려는 것도 아니다. 컴퓨팅 기술은 \"검증 가능 클레임(verifiable claim) 또는 자격 증명(credential)\"이라는 데이터 구조를 제공한 다. 이러한 기술에서, 클레임 발급자는 주제에 관해 하나 이상의 클레임을 만들고 검증 가능 클레임을 생성한 다. 검증 가능 클레임에는 그 클레임(들)뿐만 아니라 클레임(들)이 변조되지 않았고 클레임 발급자에 의해 실 제로 발행되었음을 증명하기 위한 증거 지침이 포함된다. 검증 가능 클레임에는 종종 검증 가능 클레임이 사용 에 유효한 기간을 정의하거나 검증 가능 클레임이 사용을 위해 권한을 부여 받은 특정 횟수를 정의하는 기간 정 보 메타데이터가 또한 포함된다. 탈중앙화 환경에서, 검증 가능 클레임은 또한 클레임 발급자의 DID를 포함한 다. 그런 다음 클레임 발급자는 검증 가능 클레임의 진실성에 의존하는 임의의 신뢰 당사자에게 제시하기 위해, 클레임 보유자에게 이러한 검증 가능 클레임을 제공한다. 한 예로서, 클레임 발급자는 운전 면허증 발급을 담당하는 정부 기관과 연관된 컴퓨팅 시스템일 수 있다. 정부 기관 컴퓨팅 시스템은 생년월일, 거주지 주소, 체중, 눈 색깔, 머리 색깔, 운전 허가, 운전 허가 제한 등과 같 은 시민에 대한 클레임이 있는 검증 가능 클레임을 생성할 수 있다. 정부 기관 컴퓨팅 시스템은 시민에게 검증 가능 클레임을 발급한다. 시민이 법 집행 기관에 의해 제지되는 경우, 시민의 컴퓨팅 시스템은 검증 가능 클레 임을 제시할 수 있으며, 법 집행 기관과 연관된 컴퓨팅 시스템은 증거 지침을 사용하여 클레임이 정부 기관에 의해 발급되었고 발급 이래로 실제로 변조되지 않았는지를 검증할 수 있다. 다른 예로, 예방접종 컴퓨팅 시스 템을 제공하는 조직은 아동의 부모에게 아동이 특정 예방접종을 받았다고 주장하는 클레임을 발급할 수 있다. 그러면 부모의 컴퓨팅 시스템은 이러한 접종 클레임을 자녀가 다닐 학교에 제출할 수 있다. 위의 예에서 신뢰 당사자는 법 집행 기관 및 자녀가 다니는 학교 또는 보다 구체적으로 법 집행 기관 및 학교의 컴퓨팅 시스템이 다. 일부 검증 가능 클레임은 가치가 있는 것으로 간주되고 다양한 엔티티에 의해 사고 팔 수 있는 특정 객체에 대 한 것이다. 예를 들어, 이러한 객체는 디지털 또는 실제 예술 작품이거나 가구 또는 자동차와 같은 골동품일 수 있다. 따라서 제 1 엔티티는 객체를 생성할 수 있다. 대안적으로, 제 1 엔티티는 그 객체가 진품인지 확인 할 수 있는 미술품 중개인과 같은 엔티티일 수 있다. 그런 다음 제 1 엔티티는 제 2 엔티티에게 객체를 판매할 수 있다. 제 2 엔티티는 제작자 또는 미술품 중개인과 같은 엔티티로부터 객체를 받았기 때문에, 제 2 엔티티 는 전형적으로 그 객체가 진품이라는 높은 신뢰를 가질 것이다. 그러나 나중에 제 2 엔티티는 제 3 엔티티에게 객체를 판매할 수 있으며, 제 3 엔티티는 차례로 제 4 엔티티에게 객체를 판매하는 등의 방식으로 객체를 판매 할 수 있다. 제 1 엔티티로부터의 관리 연속성(chain of custody)이 길어 질수록, 구매하는 엔티티가 그 객체가 진품인지를 알기가 어려워질 수 있다. 예를 들어, 어느 시점에 한 엔티티가 위조된 버전의 객체를 판매하려고 시도할 수 있다. 대안적으로, 객체의 소유권을 갖고 있지 않은 엔티티가 자신이 소유권을 갖고 있다고 주장하고 이를 이 용해 사기 판매를 시도할 수도 있다. 구매하는 엔티티는 종종 그 객체가 진품인지 그리고 판매하는 엔티티가 자신들의 소유물에 그 객체를 갖고 있는지를 확인할 방법이 없다. 본 명세서에 제시된 실시예는 위에서 논의한 문제에 대한 새로운 솔루션을 제공한다. 본 명세서에 제시된 실시 예는 분산 원장에 객체의 관리 연속성이 기록될 수 있도록 한다. 그런 다음 이 관리 연속성은 각각의 후속 구 매자에 의해 액세스되고 검증되어 그들이 구매하는 객체가 진품인지를 보장하는데 도움이 될 수 있다. 예를 들 어, 제 1 엔티티는 제 1 관리 연속성 검증 가능 클레임(chain of custody verifiable claim)을 생성한 다음 이 것을 (또는 적어도 검증 가능 클레임의 표현을) 블록 체인에 기록할 수 있다. 제 2 엔티티가 객체를 구매하기 를 원할 때, 분산 원장이 액세스될 수 있고, 제 1 관리 연속성 검증 가능 클레임이 검증될 수 있다. 일단 제 1 관리 연속성 검증 가능 클레임이 검증되면, 제 2 엔티티는 이것을 구매하기 전에 그 객체가 진품이라는 확신을 가질 수 있다. 그런 다음 제 2 엔티티는 제 1 관리 연속성 검증 가능 클레임을 내장한 제 2 관리 연속성 검증 가능 클레임을 생성한 다음 이를 분산 원장에 기록할 수 있다. 제 3 엔티티가 객체를 구매하기를 원할 때, 분산 원장이 액세 스될 수 있고, 제 2 관리 연속성 검증 가능 클레임과 내장된 제 1 관리 연속성 검증 가능 클레임이 둘 모두 검 증될 수 있다. 일단 제 1 및 제 2 관리 연속성 검증 가능 클레임이 검증되면, 제 3 엔티티는 객체를 구매하기 전에 그 객체가 진품이라는 확신을 가질 수 있다. 추가적인 관리 연속성 검증 가능 클레임을 생성 및 내장하고 이를 분산 원장에 기록하는 프로세스는 객체가 소유권을 변경할 때마다 발생할 수 있고 이에 따라 모든 후속 구 매자에게 신뢰를 조성할 수 있다. 일 실시예에서, 제 1 관리 연속성 검증 가능 클레임이 제 2 엔티티에 의해 제 1 엔티티로부터 수신된다. 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 서명되며 제 1 관리 연속성 검증 가능 클레임이 수신된 시 점에 객체가 제 1 엔티티의 관리 중에 있었음을 명시한다. 분산 원장이 액세스되어 제 1 관리 연속성 검증 가능 클레임을 검증한다. 제 2 관리 연속성 검증 가능 클레임이 생성된다. 제 2 관리 연속성 검증 가능 클레임 은 제 1 관리 연속성 검증 가능 클레임을 내장하고 있으며 제 2 엔티티에 의해 서명된다. 제 2 관리 연속성 검 증 가능 클레임의 적어도 일부가 분산 원장에 기록된다. 제 2 관리 연속성 검증 가능 클레임은 제 3 엔티티에 게 제공된다. 제 2 관리 연속성 검증 가능 클레임은 제 2 관리 연속성 검증 가능 클레임이 제 3 엔티티에게 제 공될 시점에 객체가 제 2 엔티티의 관리 중에 있었음을 제 3 엔티티에게 명시하도록 구성된다. 일 실시예에서, 객체와 관련된 제 1 관리 연속성 검증 가능 클레임은 제 3 엔티티에 의해 제 1 엔티티로부터 수 신된다. 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 생성된 제 1 서명을 포함하며, 제 1 엔티티 에 의해 제 2 엔티티로부터 수신된 객체와 관련된 제 2 관리 연속성 검증 가능 클레임을 내장하고 있다. 제 2 관리 연속성 검증 가능 클레임에는 제 2 엔티티에 의해 생성된 제 2 서명이 내장된다. 분산 원장이 액세스되어 제 1 관리 연속성 검증 가능 클레임을 검증한다. 제 1 관리 연속성 검증 가능 클레임의 검증은 제 1 관리 연속 성 검증 가능 클레임이 제 3 엔티티에 의해 수신된 시점에 제 1 엔티티가 객체의 적절한 관리를 담당하고 있었 음을 표시한다. 제 1 관리 연속성 검증 가능 클레임이 성공적으로 검증되면, 분산 원장이 액세스되어 제 2 관 리 연속성 검증 가능 클레임을 검증한다. 제 2 관리 연속성 검증 가능 클레임의 검증은 제 2 관리 연속성 검증 가능 클레임이 제 1 엔티티에 의해 수신된 시점에 제 2 엔티티가 객체의 적절한 관리를 담당하고 있었음을 표시 한다. 추가적인 특징 및 장점은 다음의 설명에서 제시될 것이며, 부분적으로는 명세서에 의해 명백하거나 또는 본 명 세서에서 교시를 실시함으로써 알 수 있을 것이다. 본 발명의 특징 및 장점은 첨부된 청구범위에 특별히 지적 된 기구 및 조합에 의해 실현되고 획득될 수 있다. 본 발명의 특징은 다음의 명세서 및 첨부된 청구범위에 의 해 더욱 완전하게 명백해지거나, 이하에 기재된 본 발명의 실시를 통해 알 수 있다."}
{"patent_id": "10-2023-7041189", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "일 실시예에서, 제 1 관리 연속성 검증 가능 클레임은 제 2 엔티티에 의해 제 1 엔티티로부터 수신된다. 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 서명되며 제 1 관리 연속성 검증 가능 클레임이 수신된 시 점에 객체가 제 1 엔티티의 관리 중에 있었음을 명시한다. 분산 원장이 액세스되어 제 1 관리 연속성 검증 가 능 클레임을 검증한다. 제 2 관리 연속성 검증 가능 클레임이 생성된다. 제 2 관리 연속성 검증 가능 클레임 은 제 1 관리 연속성 검증 가능 클레임을 내장하고 있으며 제 2 엔티티에 의해 서명된다. 제 2 관리 연속성 검 증 가능 클레임의 적어도 일부가 분산 원장에 기록된다. 제 2 관리 연속성 검증 가능 클레임은 제 3 엔티티에 제공된다. 제 2 관리 연속성 검증 가능 클레임은 제 2 관리 연속성 검증 가능 클레임이 제 3 엔티티에 제공될 시점에 객체 가 제 2 엔티티의 관리 중에 있었음을 제 3 엔티티에 명시하도록 구성된다. 일 실시예에서, 객체와 관련된 제 1 관리 연속성 검증 가능 클레임은 제 3 엔티티에 의해 제 1 엔티티로부터 수 신된다. 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 생성된 제 1 서명을 포함하며 제 1 엔티티 에 의해 제 2 엔티티로부터 수신된 객체와 관련된 제 2 관리 연속성 검증 가능 클레임을 내장하고 있다. 제 2 관리 연속성 검증 가능 클레임은 제 2 엔티티에 의해 생성된 제 2 서명을 포함한다. 분산 원장이 액세스되어 제 1 관리 연속성 검증 가능 클레임을 검증한다. 제 1 관리 연속성 검증 가능 클레임의 검증은 제 3 엔티티에 의해 제 1 관리 연속성 검증 가능 클레임이 수신된 시점에 제 1 엔티티가 객체의 적절한 관리를 담당하고 있었 음을 표시한다. 제 1 관리 연속성 검증 가능 클레임이 성공적으로 검증되면, 분산 원장이 액세스되어 제 2 관 리 연속성 검증 가능 클레임을 검증한다. 제 2 관리 연속성 검증 가능 클레임의 검증은 제 1 엔티티에 의해 제 2 관리 연속성 검증 가능 클레임이 수신된 시점에 제 2 엔티티가 객체의 적절한 관리를 담당하고 있었음을 표시 한다. 본 명세서에 설명된 원리는 컴퓨팅 시스템의 맥락에서 수행되기 때문에, 컴퓨팅 시스템에 대한 일부 도입부의 논의는 도 1과 관련하여 설명될 것이다. 그런 다음, 이 설명은 나머지 도면과 관련하여 본 명세서에 개시된 실 시예의 원리로 돌아갈 것이다. 컴퓨팅 시스템은 이제 점점 더 다양한 형태를 취하고 있다. 예를 들어, 컴퓨팅 시스템은 휴대용 디바이스, 가 전 제품, 랩톱 컴퓨터, 데스크톱 컴퓨터, 메인프레임, 분산 컴퓨팅 시스템, 데이터 센터 또는 웨어러블(예를 들 어, 안경)과 같이 관례적으로 컴퓨팅 시스템으로 간주되지 않았던 디바이스일 수 있다. 본 명세서 및 청구범위 에서 \"컴퓨팅 시스템\"이라는 용어는 적어도 하나의 물리적이고 유형의 프로세서를 포함하는 임의의 디바이스 또 는 시스템(또는 이들의 조합)과 프로세서에 의해 실행되는 컴퓨터 실행 명령어를 저장할 수 있는 물리적이고 유 형의 메모리를 포함하는 것으로 광범위하게 정의된다. 메모리는 임의의 형태를 취할 수 있으며 컴퓨팅 시스템 의 특성과 형태에 따라 다르다. 컴퓨팅 시스템은 네트워크 환경에 걸쳐 분산되어 있으며 다수의 구성 컴퓨팅 시스템을 포함한다. 도 1에 도시된 바와 같이, 가장 기본적인 구성에서, 컴퓨팅 시스템은 전형적으로 적어도 하나의 하드웨어 프로세싱 유닛 및 메모리를 포함한다. 하드웨어 프로세싱 유닛은 범용 프로세서를 포함하며, 또한 필드 프로그래머블 게이트 어레이(field-programmable gate array, FPGA), 주문형 집적 회로 (application-specific integrated circuit, ASIC) 또는 임의의 다른 특화된 회로를 포함한다. 메모리는 휘발성, 비휘발성 또는 이 둘의 일부 조합인 물리적 시스템 메모리이다. 본 명세서에서 \"메모리\"라는 용어는 또한 물리적 저장 매체와 같은 비휘발성 대용량 스토리지를 지칭하기 위해 사용된다. 컴퓨팅 시스템은 분산되어 있으면, 프로세싱, 메모리 및/또는 스토리지 능력도 분산된다. 컴퓨팅 시스템은 또한 종종 \"실행 가능 컴포넌트\"로 지칭되는 다수의 구조를 가지고 있다. 예를 들어, 컴 퓨팅 시스템의 메모리는 실행 가능 컴포넌트를 포함하는 것으로 도시되어 있다. \"실행 가능 컴 포넌트\"라는 용어는 컴퓨팅 분야의 통상의 기술자가 소프트웨어, 하드웨어 또는 이들의 조합일 수 있는 구조인 것으로 잘 이해하는 구조의 명칭이다. 예를 들어, 소프트웨어로 구현될 때, 관련 기술 분야의 통상의 기술자는 이러한 실행 가능 컴포넌트가 한 더미의 컴퓨팅 시스템에 존재하든 또는 실행 가능 컴포넌트가 컴퓨터 판독 가 능 저장 매체에 존재하든, 실행 가능 컴포넌트의 구조가 컴퓨팅 시스템에서 실행되는 소프트웨어 객체, 루틴, 방법 등을 포함하는 것이라고 이해할 수 있다. 이러한 경우, 관련 기술 분야의 통상의 기술자는 실행 가능 컴포넌트의 구조가 컴퓨팅 시스템의 하나 이상의 프 로세서에 의해 (예를 들면, 프로세서 스레드에 의해) 해석될 때 컴퓨팅 시스템이 기능을 수행하게 하는 컴퓨터 판독 가능 매체에 존재한다는 것을 인식할 것이다. 이러한 구조는 (실행 가능 컴포넌트가 바이너리인 경우와 마찬가지로) 프로세서가 직접 컴퓨터에서 판독 가능하다. 대안적으로, 구조는 프로세서에 의해 (단일 단계이든 또는 다중 단계이든) 직접 해석 가능할 수 있는 바이너리를 생성하기 위해 해석 및/또는 컴파일될 수 있도록 구 조화된다. 실행 가능 컴포넌트의 구조에 대한 이러한 이해는 \"실행 가능 컴포넌트\"라는 용어를 사용할 때 컴퓨 팅 기술 분야의 통상의 기술자가 이해하는 범위 내에 있다. \"실행 가능 컴포넌트\"라는 용어는 또한 통상의 기술자에게, 이를테면 필드 프로그래머블 게이트 어레이(FPGA), 주문형 집적 회로(ASIC) 또는 임의의 다른 특화된 회로 내에서 독점적으로 또는 거의 독점적으로 하드웨어로 구 현되는 하드코딩된 또는 하드와이어드 로직 게이트와 같은 구조를 포함하는 것으로도 잘 이해된다. 따라서, \" 실행 가능 컴포넌트\"라는 용어는 소프트웨어, 하드웨어 또는 이들의 조합으로 구현되는 관계없이, 컴퓨팅 기술 분야에서 통상의 기술자에게 잘 이해되는 구조에 대한 용어이다. 이러한 설명에서, \"컴포넌트\", \"에이전트\", \"관리자\", \"서비스\", \"엔진\", \"모듈\", \"가상 머신\" 등의 용어도 사용된다. 이러한 설명 및 이 경우에 사용되 는 바와 같이, (수식 절의 유무에 관계없이) 이러한 용어는 \"실행 가능 컴포넌트\"라는 용어와 동의어로 의도된 것이며, 이에 따라 또한 컴퓨팅 기술 분야에서 통상의 기술자에게 잘 이해되는 구조를 갖는다. 다음의 설명에서, 실시예는 하나 이상의 컴퓨팅 시스템에 의해 수행되는 행위를 참조하여 설명된다. 그러한 행 위가 소프트웨어로 구현되는 경우, (동작을 수행하는 관련 컴퓨팅 시스템의) 하나 이상의 프로세서는 실행 가능 컴포넌트를 구성하는 컴퓨터 실행 가능 명령어를 실행한 것에 대한 응답으로 컴퓨팅 시스템의 동작을 지시한다. 예를 들어, 이러한 컴퓨터 실행 가능 명령어는 컴퓨터 프로그램 제품을 형성하는 하나 이상의 컴퓨터 판독 가능 매체에 구현된다. 이러한 동작의 예는 데이터의 조작을 수반한다. 이러한 행위가 FPGA 또는 ASIC 내에서와 같 이 하드웨어에서 독점적으로 또는 거의 독점적으로 구현되면, 컴퓨터 실행 가능 명령어는 하드코딩된 또는 하드 와이어드 로직 게이트이다. 컴퓨터 실행 가능 명령어 (및 조작된 데이터)는 컴퓨팅 시스템의 메모리(10 4)에 저장된다. 컴퓨팅 시스템은 또한 컴퓨팅 시스템이, 예를 들어, 네트워크를 통해 다른 컴 퓨팅 시스템과 통신할 수 있도록 하는 통신 채널을 포함한다. 모든 컴퓨팅 시스템이 사용자 인터페이스를 필요로 하는 것은 아니지만, 일부 실시예에서, 컴퓨팅 시스템 은 사용자와의 인터페이스에 사용하기 위한 사용자 인터페이스 시스템을 포함한다. 사용자 인터페이스 시 스템은 출력 메커니즘(112A)과 입력 메커니즘(112B)을 포함한다. 본 명세서에 설명된 원리는 바로 그 출 력 메커니즘(112A) 또는 입력 메커니즘(112B)으로 제한되지 않으며 이처럼 디바이스의 특성에 따라 달라질 것이다. 그러나, 출력 메커니즘(112A)은, 예를 들어, 스피커, 디스플레이, 촉각 출력, 홀로그램 등을 포함할 수 있 다. 입력 메커니즘(112B)의 예는, 예를 들어, 마이크로폰, 터치 스크린, 홀로그램, 카메라, 키보드, 마우스 또 는 다른 포인터 입력, 임의의 유형의 센서 등을 포함할 수 있다. 본 명세서에 설명된 실시예는, 예를 들어, 아 래에서 더 상세히 논의되는 바와 같이, 하나 이상의 프로세서 및 시스템 메모리와 같은 컴퓨터 하드웨어를 포함 하는 특수 목적 또는 범용 컴퓨팅 시스템을 포함하거나 이용한다. 본 명세서에 설명된 실시예는 또한 컴퓨터 실행 가능 명령 및/또는 데이터 구조를 전달하거나 저장하기 위한 물리적 및 다른 컴퓨터 판독 가능 매체를 포 함한다. 이러한 컴퓨터 판독 가능 매체는 범용 또는 특수 목적 컴퓨팅 시스템에 의해 액세스될 수 있는 임의의 가용 매체일 수 있다. 컴퓨터 실행 가능 명령어를 저장하는 컴퓨터 판독 가능 매체는 물리적 저장 매체이다. 컴퓨터 실행 가능 명령어를 전달하는 컴퓨터 판독 가능 매체는 전송 매체이다. 따라서, 예로서, 본 발명의 실 시예는 이것으로 제한되는 것은 아니지만, 적어도 두 개의 뚜렷하게 상이한 종류의 컴퓨터 판독 가능 매체, 즉, 저장 매체 및 전송 매체를 포함할 수 있다. 컴퓨터 판독 가능 저장 매체는 RAM, ROM, EEPROM, CD-ROM 또는 다른 광학 디스크 스토리지, 자기 디스크 스토리 지 또는 다른 자기 저장 디바이스, 또는 컴퓨터 실행 가능 명령어 또는 데이터 구조의 형태로 원하는 프로그램 코드 수단을 저장하는 데 사용할 수 있고 범용 또는 특수 목적 컴퓨팅 시스템에 의해 액세스될 수 있는 임의의 다른 물리적 및 유형의 저장 매체를 포함한다. \"네트워크\"는 컴퓨팅 시스템 및/또는 모듈 및/또는 다른 전자 디바이스 간에 전자 데이터의 전송을 가능하게 하 는 하나 이상의 데이터 링크로 정의된다. 네트워크 또는 다른 통신 연결(유선, 무선 또는 유선과 무선의 조 합)을 통해 컴퓨팅 시스템으로 정보가 전송되거나 제공될 때, 컴퓨팅 시스템은 연결을 적절히 전송 매체로 간주 한다. 전송 매체는 컴퓨터 실행 가능 명령어 또는 데이터 구조의 형태로 원하는 프로그램 코드 수단을 전달하 는 데 사용할 수 있고 범용 또는 특수 목적 컴퓨팅 시스템에 의해 액세스될 수 있는 네트워크 및/또는 데이터 링크를 포함할 수 있다. 위의 조합도 또한 컴퓨터 판독 가능 매체의 범위에 포함되어야 한다. 또한, 다양한 컴퓨팅 시스템 컴포넌트에 도달하면, 컴퓨터 실행 가능 명령어 또는 데이터 구조 형태의 프로그램 코드 수단이 전송 매체로부터 저장 매체로 (또는 그 반대로) 자동으로 전송될 수 있다. 예를 들어, 네트워크 또는 데이터 링크를 통해 수신된 컴퓨터 실행 가능 명령어 또는 데이터 구조는 네트워크 인터페이스 모듈 (network interface module)(예를 들어, \"NIC\") 내의 RAM에 버퍼링된 다음 궁극적으로 컴퓨팅 시스템에서 컴퓨 팅 시스템 RAM 및/또는 휘발성이 적은 저장 매체로 전송될 수 있다. 따라서, 저장 매체는 전송 매체를 또한 (또는 심지어 주로) 활용하는 컴퓨팅 시스템 컴포넌트에 포함될 수 있음을 이해해야 한다. 컴퓨터 실행 가능 명령어는, 예를 들어, 프로세서에서 실행될 때 범용 컴퓨팅 시스템, 특수 목적 컴퓨팅 시스템 또는 특수 목적 처리 디바이스로 하여금 특정 기능 또는 기능 그룹을 수행하게 하는 명령어 및 데이터를 포함한 다. 대안적으로 또는 추가적으로, 컴퓨터 실행 가능 명령어는 컴퓨팅 시스템을 구성하여 특정 기능 또는 기능 그룹을 수행한다. 컴퓨터 실행 가능 명령어는, 예를 들어, 어셈블리 언어와 같은 중간 포맷 명령어 또는 심지 어 소스 코드와 같이 프로세서에 의해 직접 실행되기 전에 (컴파일과 같은) 일부 변환을 거치는 바이너리 또는 심지어 명령어이다. 주제가 구조적 특징 및/또는 방법론적 행위에 특정된 언어로 설명되었지만, 첨부된 청구범위에 정의된 주제는 반드시 위에서 설명된 특징 또는 행위로 제한되는 것은 아니라는 점을 이해해야 한다. 오히려, 설명된 특징 및 행위는 청구범위를 구현하는 예시적인 형태로서 개시된다. 관련 기술 분야의 기술자는 본 발명이 퍼스널 컴퓨터, 데스크톱 컴퓨터, 랩톱 컴퓨터, 메시지 프로세서, 휴대용 디바이스, 멀티 프로세서 시스템, 마이크로프로세서 기반 또는 프로그래밍 가능한 소비자 가전, 네트워크 PC, 미니 컴퓨터, 메인프레임 컴퓨터, 이동 전화, PDA, 호출기, 라우터, 스위치, 데이터 센터, 웨어러블(이를 테면 안경) 등을 비롯한 다양한 유형의 컴퓨팅 시스템 구성을 갖는 네트워크 컴퓨팅 환경에서 실시된다는 것을 인식 할 것이다. 일부 경우에, 본 발명은 또한 네트워크를 통해 (유선 데이터 링크, 무선 데이터 링크 또는 유선과 무선 데이터 링크의 조합에 의해) 링크된 로컬 및 원격 컴퓨팅 시스템 둘 모두가 작업을 수행하는 분산 시스템 환경에서도 실시된다. 분산 시스템 환경에서, 프로그램 모듈은 로컬 및 원격 메모리 스토리지 디바이스 둘 모 두에 위치한다. 관련 기술 분야에서 통상의 기술자는 또한 본 발명이 클라우드 컴퓨팅 환경에서 실시된다는 것을 인식할 것이다. 클라우드 컴퓨팅 환경은 분산되어 있지만, 이것이 필수는 아니다. 분산되어 있을 때, 클라우드 컴퓨 팅 환경은 조직 내에서 국제적으로 분산되고/되거나 다수의 조직을 가로질러 보유되는 컴포넌트를 갖는다. 이 러한 설명과 다음의 청구범위에서, \"클라우드 컴퓨팅\"은 구성 가능한 컴퓨팅 리소스(예를 들어, 네트워크, 서버, 스토리지, 애플리케이션 및 서비스)의 공유 풀에 대한 주문형(on-demand) 네트워크 액세스를 가능하게 하 는 모델로 정의된다. \"클라우드 컴퓨팅\"의 정의는 이러한 모델이 적절하게 배치될 때 그로부터 획득될 수 있는 다른 많은 장점으로 제한되지 않는다. 나머지 도면은 앞서 설명한 컴퓨팅 시스템에 대응하는 다양한 컴퓨팅 시스템을 설명한다. 나머지 도면의 컴퓨팅 시스템은 설명되는 바와 같이 본 명세서에 개시된 다양한 실시예를 구현하는 다양한 컴포넌트 또는 기능 블록을 포함한다. 다양한 컴포넌트 또는 기능 블록은 로컬 컴퓨팅 시스템 상에서 구현되거나, 클라우드에 상주 하는 요소를 포함하거나 클라우드 컴퓨팅의 양태를 구현하는 분산 컴퓨팅 시스템 상에서 구현된다. 다양한 컴 포넌트 또는 기능 블록은 소프트웨어, 하드웨어 또는 소프트웨어와 하드웨어의 조합으로 구현된다. 나머지 도 면의 컴퓨팅 시스템은 도면에 도시된 컴포넌트보다 많거나 적은 컴포넌트를 포함하며, 상황에 따라 일부 컴포넌 트는 결합된다. 반드시 도시되지는 않았지만, 컴퓨팅 시스템의 다양한 컴포넌트는 다양한 기능을 수행하기 위 해 필요에 따라 처리 유닛 및 메모리와 같은 프로세서 및 메모리에 액세스 및/또는 이를 활용한다.이제 탈중앙화 네트워크를 도시하는 도 2와 관련하여, 탈중앙화 식별(decentralized identification, DID) 및 이것이 생성되고 상주하는 환경에 대한 일부 도입부 논의가 제공될 것이다. 도 2에 도시된 바와 같이, DID 소유자는 DID 소유자의 아이덴티티를 나타내는 DID를 소유하거나 제어한다. DID 소유자 는 생성 및 등록 서비스를 이용하여 DID를 등록하며, 이에 대해서는 이하에서 보다 상세히 설명될 것이다. DID 소유자는 DID로부터 혜택을 받을 수 있는 임의의 엔티티이다. 예를 들어, DID 소유자는 인간 또 는 인간들의 조직이다. 이러한 조직은 회사, 부서, 정부, 기관 또는 다른 조직 또는 조직 그룹을 포함할 수 있 다. 각각의 개인은 DID를 가질 수 있는 한편, 각각의 개인이 속한 조직도 마찬가지로 DID를 가질 수 있다. DID 소유자는 대안적으로 머신, 시스템, 또는 디바이스, 또는 머신(들), 디바이스(들) 및/또는 시스템 (들)의 집합일 수 있다. 또 다른 실시예에서, DID 소유자는 머신, 시스템 또는 디바이스의 하위 부분이다. 예를 들어, 디바이스는 인쇄 회로 기판일 수 있으며, 여기서 회로 기판의 하위 부분은 회로 기판의 개별 컴포넌트이다. 이러한 실시예에서, 머신 또는 디바이스는 DID를 가지며, 각각의 하위 부분 또한 DID를 갖 는다. DID 소유자는 또한 도 1과 관련하여 위에서 설명한 실행 가능 컴포넌트와 같은 소프트웨어 컴포넌 트일 수 있다. 복잡한 실행 가능 컴포넌트의 예는 인공지능일 수 있다. 인공지능 또한 DID를 소유한다. 따라서, DID 소유자는 DID를 생성할 수 있거나 또는 적어도 자신들을 위해 생성되고 자신들과 연관된 DID를 갖는 인간 또는 비인간인 임의의 합리적인 엔티티이다. DID 소유자가 하나의 DID를 갖는 것으로 도시되지만, 이것은 상황에 따라 DID 소유자와 연관된 임의의 수의 DID가 있을 수 있으므로, 반드 시 그런 경우일 필요는 없다. 언급한 바와 같이, DID 소유자는 DID를 생성하고 등록한다. DID는 DID 소유자와 연관된 임의의 식별자이다. 바람직하게는, 그 식별자는 적어도 DID가 사용될 것으로 예상되는 범위 내에서, 그 DID 소 유자에게 고유하다. 한 예로서, ID는 국부적으로 고유한 식별자이며, 아마도 더 바람직하게는 전세계적으 로 동작하리라 예상되는 아이덴티티 시스템에 대한 전세계적으로 고유한 식별자이다. 일부 실시예에서, DID는 유니폼 리소스 식별자(Uniform Resource Identifier, URL)(이를 테면, 유니폼 리소스 로케이터 (Uniform Resource Locator, URL)) 이거나 또는 DID 소유자를 DID 소유자와 신뢰할 수 있는 상호 작 용에 참여시키는 메커니즘과 관련되는 다른 포인터이다. DID는 생성, 관리 또는 사용을 위해 중앙 집중 제 3 자 관리 시스템을 필요로 하지 않기 때문에 \"탈중앙화 (decentralized)\"된다. 따라서, DID는 DID 소유자의 제어 하에 남는다. 이것은 중앙 집중 기관에 대한 신뢰를 기초로 하고 기업 디렉토리 서비스, 인증 기관, 도메인 네임 레지스트리 또는 다른 중앙 집중 기관 (본 명세서에서 일괄하여 \"중앙 집중 기관\"이라 함)의 제어 하에 있는 통상의 중앙 집중 ID와는 상이하다. 따 라서, DID는 DID 소유자의 제어 하에 있고 임의의 중앙 집중 기관과 독립적인 임의의 식별자이다. 일부 실시예에서, DID의 구조는 사용자명 또는 다른 사람이 이해할 수 있는 용어처럼 간단하다. 그러나, 다른 실시예에서, DID는 보안을 높이기 위해 바람직하게 숫자 및 문자의 무작위 문자열이다. 일 실시예에 서, DID는 128개의 문자 및 숫자의 문자열이다. 따라서, 본 명세서에 개시된 실시예는 DID의 임의의 특정 구현에 의존하지 않는다. 매우 간단한 예에서, DID는 \"123 ABC\"로 보여진다. 또한 도 2에 도시된 바와 같이, DID 소유자는 DID와 연관된 개인 키 및 공개 키 쌍을 제어 한다. DID는 임의의 중앙 집중 기관과 독립적이기 때문에, 개인 키는 항상 완전히 DID 소유자 의 제어 중에 있어야 한다. 즉, 개인 키 및 공개 키는 DID 소유자의 제어 하에 남아 있도록 보장하는 탈 중앙화 방식으로 생성되어야 한다. 아래에서 보다 상세히 설명되는 바와 같이, 개인 키와 공개 키 쌍은 DID 소유자에 의해 제어되 는 디바이스에서 생성된다. 개인 키와 공개 키 쌍은 임의의 중앙 집중 기관에 의해 제어되는 서버에 서 생성되어서는 안 되는데, 이것은 개인 키와 공개 키 쌍이 항상 DID 소유자의 완전한 제어 하 에 있지 않도록 하기 때문이다. 도 2 및 이 설명에서, 개인 키와 공개 키 쌍을 설명하였지만, 상황에 따라 다 른 유형의 합리적인 암호화 정보 및/또는 메커니즘이 또한 사용된다는 것이 주목될 것이다. 도 2는 또한 DID와 연관된 DID 문서를 도시한다. 아래에 보다 상세히 설명되는 바와 같이, DID 문서 는 DID가 생성되는 시점에 생성된다. 가장 간단한 형태로, DID 문서는 DID의 사용 방법을 서술한다. 따라서, DID 문서는 DID 문서에 의해 서술되는 DID인 DID에 대한 참조를 포함한다. 일부 실시예에서, DID 문서는, 아래에서 보다 상세히 설명되는 바와 같이, DID의 표현을 저장하는 데 사용될 분산 원장에 의해 명시된 방법에 따라 구현된다. 따라서, DID 문서는 특정 분산 원장에 따라상이한 방법을 갖는다. DID 문서는 또한 DID 소유자에 의해 생성된 공개 키 또는 몇몇 다른 동등한 암호화 정보를 포함 한다. 공개 키는 DID 소유자에 의해 소유된 정보 및 데이터에 액세스하기 위해 DID 소유자에 의해 허가를 부여 받은 제 3 자 엔티티에 의해 사용된다. 공개 키는 또한 DID 소유자가 실제로 DID를 소유하거나 제어하고 있음을 검증함으로써 사용된다. DID 문서는 또한 인증 정보를 포함한다. 인증 정보는 DID 소유자가 DID를 소유하고 있음을 DID 소유자가 증명할 수 있는 하나 이상의 메커니즘을 명시한다. 바꾸어 말하면, 인증 정보 의 메커니즘은 DID(및 이에 따라 그 DID 소유자)와 DID 문서 사이의 결속(binding)에 대한 증 거를 보여준다. 일 실시예에서, 인증 정보는 공개 키가 DID의 소유권을 증명하기 위한 서명 동 작에 사용될 것을 명시한다. 대안적으로 또는 추가적으로, 인증 정보는 공개 키가 생체인식 동작에 서 DID의 소유권을 증명하기 위해 사용될 것을 명시한다. 따라서, 인증 정보는 DID 소유자가 DID를 소유하고 있음을 DID 소유자가 증명할 수 있는 임의의 수의 메커니즘을 포함한다. DID 문서는 또한 인가 정보를 포함한다. 인가 정보는 DID 소유자가 제 3 자에게 DID의 소유권을 증명할 권한을 부여하지 않고도 제 3 자 엔티티에게 DID 문서 또는 문서의 일부분을 수정할 권한을 부여할 수 있도록 한다. 예를 들어, 인가 정보는 제 3 자가 임의의 지정된 업데이트 메커 니즘을 사용하여 DID 문서에서 임의의 지정된 하나 이상의 필드 세트를 업데이트할 수 있도록 한다. 대안 적으로, 인가 정보는 제 3 자가 명시된 기간 동안 DID 소유자에 의한 DID의 사용을 제한할 수 있도록 한다. 이것은 DID 소유자가 미성년 자녀이고 제 3 자가 자녀의 부모 또는 보호자일 때 유용하다. 인가 정보는 자녀가 더 이상 미성년자가 아닐 때까지 부모 또는 보호자가 DID의 사용을 제한할 수 있도록 한다. 인가 정보는 또한 제 3 자가 DID 문서를 수정할 권한이 있음을 증명하기 위해 이들이 따라야 하는 하 나 이상의 메커니즘을 명시한다. 일부 실시예에서, 이러한 메커니즘은 인증 정보와 관련하여 앞서 논의된 것과 유사하다. DID 문서는 또한 하나 이상의 서비스 엔드포인트를 포함한다. 서비스 엔드포인트는 서비스가 DID 소 유자를 대신하여 동작하는 네트워크 어드레스를 포함한다. 특정 서비스의 예는 검색 서비스, 소셜 네트워 크, 아이덴티티 서버 또는 허브와 같은 파일 저장 서비스 및 검증 가능 클레임 저장 서비스를 포함한다. 따라 서, 서비스 엔드포인트는 DID 소유자를 대신하여 동작하는 서비스에 대한 포인터로서 동작한다. 이 러한 포인터는 DID 소유자에 의해 또는 제 3 자 엔티티에 의해 DID 소유자를 대신하여 동작하는 서비 스에 액세스하기 위해 사용된다. 서비스 엔드포인트의 구체적인 예는 아래에서 보다 상세하게 설명될 것 이다. DID 문서는 식별 정보를 더 포함한다. 식별 정보는 DID 소유자의 이름, 주소, 직업, 가족 구성원, 나이, 취미, 관심사 등과 같은 개인적으로 식별 가능한 정보를 포함한다. 따라서, DID 문서에 열 거된 식별 정보는 상이한 목적 별로 DID 소유자의 상이한 페르소나(persona)를 나타낸다. 예를 들어, 페르소나는 의사 익명(pseudo-anonymous)으로, 예를 들어, DID 소유자는 블로그에 기사를 게시하는 작가로서 자신을 식별할 때 DID 문서에 필명을 포함시킨다; 페르소나는 완전 익명으로, 예를 들어, DID 소유자 는 자신의 직책 또는 다른 배경 데이터(예를 들어, 학교 교사, FBI 요원, 21세 이상의 성인 등)만 공개하 되 DID 문서에 자신의 이름을 공개하기를 원하지 않는다; 그리고 페르소나는 DID 소유자가 개인으로서 누 구인지를 특정하는 것으로, 예를 들어, DID 소유자는 특정 자선 단체의 자원 봉사자, 특정 기업의 직원, 특별한 상의 수상자 등으로서 자신을 식별하는 정보를 포함시킨다. DID 문서는 또한 본 명세서에서 증명이라고도 지칭될 수 있는 자격 증명 정보(credential information)를 포함한다. 자격 증명 정보(검증 가능 클레임이라고도 함)는 DID 소유자의 배경 과 연관된 임의의 정보이다. 예를 들어, 자격 증명 정보는 (이것으로 제한되는 것은 아니지만) 자격, 업 적, 정부 ID, 여권 또는 운전 면허증과 같은 정부 권한, 디지털 자산 제공자 또는 은행 계좌, 대학 학위 또는 다른 교육 이력, 고용 상태 및 이력, 또는 DID 소유자의 배경에 관한 임의의 다른 정보이다. DID 문서는 또한 다양한 다른 정보를 포함한다. 일부 실시예에서, 다른 정보는 DID 문서 가 생성된 때 및/또는 마지막으로 수정된 때를 명시하는 메타데이터를 포함한다. 다른 실시예에서, 다른 정보 는 DID 문서의 무결성에 대한 암호화 증명을 포함한다. 또 다른 실시예에서, 다른 정보는 DID문서를 구현하는 특정 방법에 의해 명시되거나 또는 DID 소유자에 의해 원하는 추가 정보를 포함한다. 도 2는 또한 분산 원장 또는 블록체인을 도시한다. 분산 원장은 서로 통신하는 다양한 컴퓨팅 시스 템을 포함하는 임의의 탈중앙화 분산 네트워크이다. 예를 들어, 분산 원장은 제 1 분산 컴퓨팅 시스템 , 제 2 분산 컴퓨팅 시스템, 제 3 분산 컴퓨팅 시스템 및 생략 부호로 예시된 바와 같이 임의의 수의 추가적인 분산 컴퓨팅 시스템을 포함한다. 분산 원장 또는 블록체인은 분산 원장에 대해 임 의의 공지된 표준 또는 방법에 따라 동작한다. 분산 원장 또는 블록체인에 대응하는 종래의 분산 원장의 예는 이것으로 제한되는 것은 아니지만, 비트코인[BTC], 이더리움 및 라이트코인을 포함한다. DID의 맥락에서, 분산 원장 또는 블록체인은 DID 문서를 가리키는 DID의 표현을 저장하는 데 사용된다. 일부 실시예에서, DID 문서는 실제로 분산 원장에 저장된다. 대안적으로, 다른 실시예에서, DID 문서는 분산 원장 또는 블록체인과 연관된 데이터 스토리지(도시되지 않음)에 저장 된다. 언급한 바와 같이, DID의 표현은 분산 원장 또는 블록체인의 각각의 분산 컴퓨팅 시스템에 저장된다. 예를 들어, 도 2에서, 이것은 동일한 DID의 이상적으로 동일한 사본인 DID 해시, DID 해시 및 DID 해 시로 도시된다. DID 해시, DID 해시 및 DID 해시는 DID 문서의 위치를 가리킨다. 분산 원장 또는 블록체인은 또한 도면 부호(232, 233, 234, 242, 243, 244, 252, 253 및 254)로 도시된 바와 같이 다른 DID의 수많은 다른 표현을 저장한다. 일 실시예에서, DID 소유자가 DID 및 관련 DID 문서를 생성할 때, DID 해시, DID 해시 및 DID 해시는 분산 원장 또는 블록체인에 기록된다. 분산 원장 또는 블록체인은 따라서 DID가 현재 존재한다는 것을 기록한다. 분산 원장 또는 블록체인은 탈중앙화되어 있기 때문에, DID는 DID 소유자 외부의 어떤 엔티티의 제어 하에 있지 않다. DID 해시, DID 해시 및 DID 해시는 DID 문서를 가리키는 포인터 이외에, DID가 생성된 시점을 명시하는 레코드 또는 타 임스탬프를 포함한다. 나중에 DID 문서에 대한 수정이 이루어지면, 이 또한 DID 해시, DID 해시 및 DID 해시에 기록된다. DID 해시, DID 해시 및 DID 해시는 공개 키의 사본 을 더 포함하므로, DID는 DID 문서에 암호방식으로 결속된다. 도 2를 참조하여 DID와 그 동작 방식에 대해 전반적으로 설명하였으며, 이제는 DID 환경의 구체적인 실시예가 설명될 것이다. 도 3으로 넘어가면, 이제 다양한 DID 관리 동작 및 서비스를 수행하기 위해 사용되는 컴퓨팅 시스템 환경이 설명될 것이다. 도 3의 환경은 설명의 편의를 위해 필요에 따라 도 2의 요소를 참조하는 것이 인식될 것이다. 도 3에 도시된 바와 같이, 컴퓨팅 시스템 환경은 DID 소유자가 소유하거나 그와 달리 DID 소유자 의 제어 하에 있는 다양한 디바이스 및 컴퓨팅 시스템을 포함한다. 여기에는 사용자 디바이스가 포 함된다. 사용자 디바이스는 이것으로 제한되는 것은 아니지만, 스마트폰과 같은 이동 디바이스, 랩톱 컴 퓨터와 같은 컴퓨팅 디바이스, 또는 컴퓨팅 능력을 포함하는 자동차 또는 가전 제품과 같은 임의의 디바이스이 다. 사용자 디바이스는 디바이스에서 동작하는 웹 브라우저 및 디바이스를 동작시키는 운영 체제 를 포함한다. 보다 광범위하게 말하면, 파선은 이러한 모든 디바이스가 DID 소유자의 소유이거 나 이와 달리 DID 소유자의 제어 하에 있음을 나타낸다. 컴퓨팅 시스템 환경은 또한 DID 관리 모듈을 포함한다. 동작 시, DID 관리 모듈은 각각의 라인 (301a, 302a 및 303a)에 의해 예시된 바와 같이 사용자 디바이스, 웹 브라우저 및 운영 체제 중 하나 이상에 상주하여 이들에 의해 실행된다는 것이 주목될 것이다. 따라서, DID 관리 모듈은 설명의 편의를 위해 분리되어 있는 것으로 도시된다. 일부 실시예에서, DID 관리 모듈은 \"디지털 지갑(digital wallet)\" 또는 \"사용자 에이전트(user agent)\"로 지칭된다. 그러나, 관련 기술 분야에서 통상의 기술자는 디지 털 지갑 또는 사용자 에이전트가 다른 실시예에서 DID 관리 모듈 이외의 컴퓨팅 시스템에서 구현될 수 있 다는 것을 인식할 것이다. 도 3에 도시된 바와 같이, DID 관리 모듈은 DID 생성 모듈을 포함한다. DID 생성 모듈은 DID 소유자에 의해 DID 또는 DID와 같은 임의의 수의 추가 DID를 생성하는 데 사용된다. 일 실시예 에서, DID 생성 모듈은 DID를 생성할 때 DID 소유자를 안내하는 사용자 인터페이스(User Interface, UI) 요소를 포함하거나, 그렇지 않으면 이에 액세스한다. DID 생성 모듈은 분산 원장과 같은 특정 분산 원장과 함께 동작하도록 구성된 하나 이상의 드라이버를 갖고 있어, DID가 그 분산 원장의 기본방법을 준수하도록 한다. 이제 구체적인 실시예가 설명될 것이다. 예를 들어, UI는 사용자가 사용자명 또는 몇몇 다른 사람이 인식 할 수 있는 이름을 입력하라고 프롬프트한다. 이러한 이름은 생성될 DID의 디스플레이 이름으로서 사용된 다. 앞서 설명한 바와 같이, DID는 난수와 문자의 긴 문자열이고 그래서 디스플레이 이름에 대해 사람이 인식할 수 있는 이름을 갖는 것이 유리하다. 그런 다음 DID 생성 모듈은 DID를 생성한다. UI 를 갖는 실시예에서, DID는 아이덴티티의 목록에 나와 있고 사람이 인식할 수 있는 이름과 연관된다. DID 생성 모듈은 또한 키 생성 모듈을 포함한다. 키 생성 모듈은 앞서 설명한 개인 키와 공개 키 쌍을 생성한다. DID 생성 모듈은 DID와 개인 키 및 공개 키 쌍을 사용하여 DID 문서 를 생성한다. 동작 시, DID 생성 모듈은 DID와 관련된 트랜잭션을 기록할 특정 분산 원장에 구성되는 레지스트라 (registrar)에 액세스한다. DID 생성 모듈은 레지스트라를 이용하여 앞서 설명한 방식으로 분 산 원장에 DID 해시, DID 해시 및 DID 해시를 기록하고, 앞서 설명한 방식으로 DID 문서 를 저장한다. 이 프로세스는 해시 생성에 공개 키를 사용한다. 일부 실시예에서, DID 관리 모듈은 소유권 모듈을 포함한다. 소유권 모듈은 DID 소유자가 DID를 단독으로 제어할 수 있도록 보장하는 메커니즘을 제공한다. 이러한 방식으로, DID 관리 모듈 의 제공자는 제공자가 DID를 제어하지 않고 관리 서비스만 제공하는 것을 보장할 수 있다. 앞서 논의한 바와 같이, 키 생성 모듈은 개인 키와 공개 키 쌍을 생성하고, 그 다음에 공개 키 는 DID 문서에 기록된다. 따라서, 공개 키는 DID 소유자와 연관된 모든 디바이스 및 DID 소유자에게 서비스를 제공하고자 하는 모든 제 3 자에 의해 사용 가능하다. 따라서, DID 소유자가 새로운 디바이스를 DID와 연관시키고자 할 때, DID 소유자는 새로운 디바이스에서 DID 생성 모듈 을 실행한다. 그러면 DID 생성 모듈은 레지스트라를 사용하여 새로운 디바이스가 이제 DID와 연관되어 있다는 것을 반영하도록 DID 문서를 업데이트하며, 이러한 업데이트는 앞서 설명한 바와 같이 분산 원장 상의 트랜잭션에 반영된다. 그러나, 일부 실시예에서, DID 소유자에 의해 소유 된 사용자 디바이스 당 하나의 공개 키를 갖는 것이 유리한데, 이것은 DID 소유자가 일반 공개 키에 액세스하지 않고도 디바이스 특정 공개 키로 서명할 수 있게 하기 때문이다. 바꾸어 말하면, DID 소유자 는 상이한 시간에 상이한 디바이스를 사용할 것이기 때문에(예를 들어, 어떤 경우에는 이동 전화를 사용하고 다 른 경우에는 랩톱 컴퓨터를 사용함), 키를 사용하는 서명의 효율성을 제공하기 위해 각각의 디바이스와 연관된 키를 갖는 것이 유리하다. 따라서, 그러한 실시예에서, 키 생성 모듈은 추가 디바이스가 DID 생성 모듈 을 실행할 때 추가 공개 키(208, 209)를 생성한다. 이러한 추가 공개 키는 개인 키와 연관되거나, 일부 경우에 새로운 개인 키와 쌍을 이룬다. 추가 공개 키(208 및 209)가 상이한 디바이스와 연관되는 실시예에서, 추가 공개 키(208 및 209)는 이들 디바이 스와 연관되는 것으로 DID 문서에 기록된다. 이것은 도 3에 도시되어 있다. DID 문서는 종종 도 3 에 도시된 정보(정보(208, 209 및 365)) 이외에 도 2와 관련하여 이전에 설명한 정보(정보(205, 207 및 211 내 지 216))를 포함한다는 것이 인식될 것이다. 디바이스 특정 공개 키가 생성되기 전에 DID 문서가 존재했 다면, DID 문서는 레지스트라를 통해 DID 생성 모듈에 의해 업데이트될 것이고, 이것은 분산 원 장 상의 업데이트된 트랜잭션에 반영될 것이다. 일부 실시예에서, DID 소유자는 종종 공개 키와 디바이스의 연관성 또는 DID와 디바이스의 연관성을 비밀로 유지하고자 한다. 따라서, DID 생성 모듈은 그러한 데이터가 DID 문서에 남이 모르게 보이게 한다. 지금까지 설명한 바와 같이, DID는 디바이스가 자신의 공개 키를 가질 때라도 DID 소유자의 제어 하 에 있는 모든 디바이스와 연관되어 있다. 그러나, 일부 실시예에서, DID 소유자의 제어 하에 있는 각각의 디바이스 또는 디바이스의 일부 서브세트는 각각 자신의 DID를 갖는 것이 유용할 수 있다. 따라서, 일부 실시 예에서, DID 생성 모듈은 각각의 디바이스에 대해 추가 DID, 예를 들어 DID를 생성한다. 그런 다음 DID 생성 모듈은 앞서 설명한 방식으로 디바이스 각각에 대한 개인 키와 공개 키 쌍 및 DID 문서를 생성하 고 이를 분산 원장에 기록한다. 이러한 실시예는, DID 문서의 새로운 소유자 인가 권한을 부여하고 이전 소유자로부터 그러한 권한을 취소함으로써 디바이스의 새로운 소유자에게 디바이스 특정 DID를 연관시키는 것이 가능하므로, 소유권을 변경하는 디바이스에 유리하다.언급한 바와 같이, 개인 키가 전적으로 DID 소유자의 제어 중에 있도록 보장하기 위해, 개인 키(20 6)는 DID 관리 모듈을 실행한 DID 소유자에 의해 소유되거나 제어되는 사용자 디바이스, 웹 브 라우저 또는 운영 체제에서 생성된다. 이러한 방식으로, 제 3 자(및 가장 결과적으로는, DID 관리 모듈의 제공자)가 개인 키의 제어권을 얻을 가능성은 거의 없다. 그러나, 개인 키를 저장하는 디바이스가 DID 소유자에 의해 분실될 가능성이 있으며, 이로 인해 DID 소유자는 DID에 대한 액세스를 상실하게 된다. 따라서, 일부 실시예에서, UI는 DID 소유자 가 개인 키를 DID 소유자의 제어 하에 있는 오프 디바이스 보안 데이터베이스(off device secured database)로 내보낼 수 있도록 하는 옵션을 포함한다. 한 예로서, 데이터베이스는 도 4와 관련하여 아래에서 설명되는 아이덴티티 허브 중 하나이다. 저장 모듈은 (DID 소유자에 의해 또는 그에 관해 만들어진 개인 키 또는 자격 증명 정보와 같은) 오프 디바이스 데이터를 아래에서 보 다 상세히 설명될 데이터베이스 또는 아이덴티티 허브에 저장하도록 구성된다. 물론, 일부 실시예에 서, 저장 모듈은 디바이스에 충분한 저장 리소스가 있으면, 적어도 일부 데이터를 디바이스에 저장한다. 일부 실시예에서, 개인 키는 DID 소유자에 의해 스캔되는 QR 코드로서 저장된다. 다른 실시예에서, DID 관리 모듈은 손실된 개인 키를 복구하는 데 사용되는 복구 모듈을 포함한 다. 동작 시, 복구 모듈은 DID 소유자가 나중에 손실된 개인 키를 복구하는 데 사용되는 하나 이상 의 복구 메커니즘을 DID가 생성되는 시점에 선택할 수 있게 한다. UI를 갖는 실시예에서, UI는 DID 소유자가 복구 동안 하나 이상의 복구 메커니즘에 의해 사용될 정보를 제공할 수 있도 록 한다. 복구 모듈은 DID와 연관된 임의의 디바이스에서 실행된다. 또한, DID 관리 모듈은 DID로부터 디바이스를 해지 또는 단절하는 데 사용되는 해지 모듈을 포 함한다. 동작 시, 해지 모듈은 DID 소유자가 디바이스를 DID와 연관되지 않도록 제거하고자 하는 바 램을 표시할 수 있게 하는 UI를 사용한다. 일 실시예에서, 해지 모듈은 DID 문서에 액세스하고, 디바이스에 대한 모든 참조가 DID 문서로부터 제거되게 한다. 대안적으로, 디바이스에 대한 공개 키가 제거된다. DID 문서의 이러한 변경은 앞서 설명한 바와 같이 분산 원장에 업데이트된 트 랜잭션으로서 반영된다. 도 4는 DID와 같은 DID가 활용되는 컴퓨팅 시스템 환경의 실시예를 도시한다. 구체적으로, 컴퓨팅 시스템 환경은 DID 소유자에 속하거나 그와 관련된 데이터를 저장하기 위해 각각 DID 소유자의 제어 하에 있는 하나 이상의 탈중앙화 저장소 또는 아이덴티티 허브와 관련하여 DID의 사용을 설명하 는 데 사용된다. 예를 들어, 데이터는 도 3의 저장 모듈을 사용하여 아이덴티티 허브 내에 저장된다. 도 4는 도 2 또는 도 3과 관련하여 처음 논의된 요소들에 대한 참조를 포함하고 이에 따라 설명의 편의를 위해 동 일한 참조 번호를 사용한다는 점이 주목될 것이다. 일 실시예에서, 아이덴티티 허브는 동일한 아이덴티티 허브의 복수의 인스턴스(instance)이다. 이것은 라 인(410A)에 의해 표현된다. 따라서, 다양한 아이덴티티 허브는 적어도 일부의 동일한 데이터 및 서비스를 포함한다. 따라서, 아이덴티티 허브 중 하나의 허브에 있는 데이터 중 적어도 몇몇 데이터의 일부(및 잠 재적으로 임의의 데이터의 임의의 일부)에 변경이 이루어지면, 그 변경은 나머지 아이덴티티 허브 중 하나 이상 (및 아마도 모두)에 반영된다. 아이덴티티 허브는 DID 소유자의 배타적 제어 하에 있는 임의의 데이터 저장소일 수 있다. 단지 한 예로서, 제 1 아이덴티티 허브 및 제 2 아이덴티티 허브는 클라우드 스토리지(아마도 동일한 클라우 드 내, 또는 심지어는 다른 클라우드 제공자에 의해 관리되는 다른 클라우드 상에서)에 구현되며 이에 따라 대 량의 데이터를 보유할 수 있다. 따라서, 데이터의 전체 세트가 이들 아이덴티티 허브에 저장된다. 그러나, 아이덴티티 허브(413 및 414)는 더 적은 메모리 공간을 가질 수 있다. 따라서, 이들 아이덴티티 허브 에는 제 1 및 제 2 아이덴티티 허브에 저장된 데이터의 설명자(descriptor)가 포함된다. 대안적으로, 다른 아 이덴티티 허브의 데이터에 대해 만들어진 변경의 기록이 포함된다. 따라서, 아이덴티티 허브 중 하나의 허브에서의 변경 사항은 다른 아이덴티티 허브에서 완전히 복제되거나 적어도 그 데이터의 기록 또는 설명자가 다른 아이덴티티 허브에 기록된다. 아이덴티티 허브는 동일한 아이덴티티 허브의 다수의 인스턴스이기 때문에, 이 설명이 아이덴티티 허브(412 내 지 414)에도 적용되므로, 제 1 아이덴티티 허브에 대한 전체 설명만 제공될 것이다. 도시된 바와 같이, 아이덴티티 허브는 데이터 스토리지를 포함한다. 데이터 스토리지는 DID 소유자와 연관된임의의 유형의 데이터를 저장하는 데 사용된다. 일 실시예에서, 데이터는 특정 프로토콜에 대응하는 특정 유형 의 데이터의 모음이다. 예를 들어, 이 모음은 의료 데이터에 특유한 프로토콜에 대응하는 의료 기록 데이터일 수 있다. 이 모음은 또한 DID 소유자에 의해 또는 그에 대해 생성된 자격 증명 정보 와 같은 다른 유형의 데이터를 포함한다. 일 실시예에서, 저장된 데이터는 저장된 데이터와 연관된 상이한 인증 및 프라이버시 설정을 갖는다. 예 를 들어, 데이터의 제 1 서브세트는 데이터를 공개적으로 노출될 수 있도록 하는 설정을 갖지만, DID 소유 자에 대한 임의의 인증을 포함하지 않는다. 이러한 유형의 데이터는 전형적으로 색 배합(color scheme) 등과 같이 상대적으로 중요하지 않은 데이터에 대한 것이다. 데이터의 제 2 서브세트는 데이터가 공개적으로 노출될 수 있도록 하고, DID 소유자에 대한 인증을 포함하는 설정을 갖는다. 데이터의 제 3 서브세 트는 데이터의 서브세트를 DID 소유자와 연관된 개인 키와 공개 키 쌍(또는 다른 키 쌍)으로 암 호화하는 설정을 갖는다. 이러한 유형의 데이터는 데이터를 해독하기 위해 당사자가 공개 키(또는 다른 연관된 공개 키)에 액세스할 것을 요구할 것이다. 이러한 프로세스는 또한 DID 소유자에 대한 인증 을 포함한다. 데이터의 제 4 서브세트는 이 데이터를 제 3 자의 서브세트로 제한하는 설정을 갖는다. 이 것은 제 3 자 서브세트와 연관된 공개 키가 사용되어 데이터를 해독할 것을 요구한다. 예를 들어, DID 소유자 는 DID 소유자의 친구와 연관된 공개 키만 이 데이터를 해독할 수 있는 설정이 명시되게 한다. 저장 모듈에 의해 저장된 데이터와 관련하여, 이러한 설정은 적어도 부분적으로 도 3의 저장 모듈에 의해 구성된다. 일부 실시예에서, 아이덴티티 허브는 제 3 자(401 및 402)와 같은 제 3 자가 아이덴티티 허브에 액세스할 수 있도록 DID 소유자가 특정 인가 또는 허가를 설정할 수 있도록 하는 허가 모듈을 구비한다. 예를 들어, DID 소유자는 데이터 저장소에 저장된 모든 데이터에 대한 액세스 허가를 자신의 배우자에게 제공한다. 대안적으로, DID 소유자는 자신의 의사에게 임의의 의료 기록에 대한 액세스를 허용한다. DID 소유자는 임의의 수의 제 3 자에게 허가를 주어 데이터 저장소에 저장된 데이터의 서브세트에 액세스 하도록 할 수 있다는 것이 인식될 것이다. 이것은 아래에서 보다 상세하게 설명될 것이다. 저장 모듈에 의해 저장된 데이터와 관련하여, 이러한 액세스 허가는 적어도 부분적으로 도 3의 저장 모듈에 의해 구성된다. 아이덴티티 허브는 또한 메시징 모듈을 포함한다. 동작 시, 메시징 모듈은 아이덴티티 허브가 제 3 자(401 및 402)와 같은 당사자로부터 아이덴티티 허브의 데이터 및 서비스에 액세스하려는 요청과 같은 메시지 를 수신할 수 있도록 한다. 또한, 메시징 모듈은 아이덴티티 허브가 제 3 자로부터의 메시지에 응답 하고, 또한 DID 리졸버(resolver)와 통신할 수 있도록 한다. 이것은 아래에서 보다 상세하게 설명될 것이다. 생략 부호는 아이덴티티 허브가 상황에 따라 추가 서비스를 가질 수 있음을 나타낸다. 일 실시 예에서, DID 소유자는 이전에 설명된 방식으로 이미 DID와 연관되어 있는 아이덴티티 허브로 새 로운 사용자 디바이스를 인증하고자 한다. 따라서, DID 소유자는 새로운 사용자 디바이스와 연 관된 DID 관리 모듈을 이용하여 새로운 사용자 디바이스가 DID 소유자의 DID와 연관되어 있음을 주장하는 메시지를 아이덴티티 허브로 전송한다. 그러나, 아이덴티티 허브는 초기에 새로운 디바이스를 DID 소유자에 의해 소유된 것으로 인식할 수 없다. 따라서, 아이덴티티 허브는 메시징 모듈을 사용하여 DID 리졸버(resolver)에 접촉한다. DID 리졸버로 보내는 메시지는 DID를 포함한다. DID 리졸버는 동작 시 분산 원장에서 DID와 연관된 DID 문서를 검색하도록 구성되는 서비스, 애플리 케이션, 또는 모듈이다. 따라서, 실시예에서, DID 리졸버는 DID를 사용하여 분산 원장을 검색 하며, 이는 DID 리졸버가 DID 문서를 찾아야 하는 결과를 초래할 것이다. 그 다음에 DID 문서 는 아이덴티티 허브에 제공된다. 앞서 논의된 바와 같이, DID 문서는 새로운 사용자 디바이스와 연관된 공개 키(208 또는 209)를 포함 한다. 새로운 사용자 디바이스가 DID 소유자에 의해 소유되는지를 검증하기 위해, 아이덴티티 허브 는 메시징 모듈을 사용하여 새로운 사용자 디바이스에 암호화 챌린지(cryptographic challenge)를 제 공한다. 이 암호화 챌린지는 개인 키에 액세스할 수 있는 디바이스만 챌린지에 성공적으로 응답할 수 있 도록 구조화된다. 이 실시예에서, 새로운 사용자 디바이스는 DID 소유자에 의해 소유되어 있고 이에 따라 개인 키에 액 세스할 수 있으므로, 챌린지는 성공적으로 응답된다. 그런 다음 아이덴티티 허브는 새로운 사용자 디바이스가 아이덴티티 허브 및 나머지 아이덴티티 허브의 데이터 및 서비스에 액세스할 수 있다는 것 을 허가에 기록한다. 새로운 사용자 디바이스를 인증하는 이러한 프로세스는, 아이덴티티 허브가 액세스될 수 있기 전에, DID 소유자가 아이덴티티 허브의 제공자(즉, 제 1 클라우드 스토리지 제공자)에게 어떤 사용자명, 비 밀번호 등도 제공할 필요 없이 수행되었음이 주목될 것이다. 오히려, 액세스는 DID, DID 문서 및 연 관된 공개 키 및 개인 키에 기초하여 분산 방식으로 결정되었다. 이들은 항상 DID 소유자의 제어 중에 있 었기 때문에, 아이덴티티 허브의 제공자는 관여되지 않았고 이에 따라 DID 소유자의 거래 또는 임의 의 개인 정보를 전혀 모른다. 다른 예시적인 실시예에서, DID 소유자는 제 3 자에게 DID를 제공하여, 제 3 자가 아이덴티티 허브에 저장된 데이터 또는 서비스에 액세스할 수 있도록 한다. 예를 들어, DID 소유자는 과학 회의 에 참석 중인 사람으로서, 역시 사람인 제 3 자가 자신의 연구 데이터에 액세스할 수 있도록 하고자 한다. 따라서, DID 소유자는 제 3 자에게 DID를 제공한다. 일단 제 3 자가 DID에 액세스하면, 제 3 자는 DID 리졸버에 액세스하여 DID 문서에 액세 스한다. 앞서 논의한 바와 같이, DID 문서는 분산 아이덴티티와 연관된 서비스에 대한 어드레스 또는 포 인터인 서비스 엔드 포인트(service end point)를 포함한다. 연구 데이터 예를 완료하면, 제 3 자는 연구 데이터에 액세스할 수 있는 허가를 요청하는 메시지를 메시징 모듈로 전송한다. 메시징 모듈은 제 3 자가 연구 데이터에 대한 액세스 권한을 주어야 하는지를 묻는 메시지를 DID 소유자에게 전송한 다. DID 소유자는 이 데이터에 대한 액세스를 제공하고자 하기 때문에, DID 소유자는 제 3 자에 대 한 허가를 허용하며 이 허가는 허가에 기록된다. 그런 다음 메시징 모듈은 제 3 자에게 제 3 자가 연구 데이터에 액세스할 수 있음을 제 3 자에게 알리는 메시지를 전송한다. 아이덴티티 허브와 제 3 자는 제 3 자가 데이터에 액세스할 수 있도록 직접 통신한다. 많은 경우에, 실제로 아이덴티티 허브(41 1)와 통신하는 것은 제 3 자와 관련된 아이덴티티 허브일 것이다. 그러나, 통신을 행하는 것은 제 3 자 의 디바이스일 수 있다. 유리하게, 위에서 설명한 프로세스는 제 3 자가 통상의 방식으로 아이덴티티 허 브에 액세스하지 않고 아이덴티티 허브와 제 3 자가 통신하고 데이터를 공유할 수 있도록 한다. 오히려, 통신은 DID 및 DID 문서를 사용하여 탈중앙화 방식으로 제공된다. 이것은 유리하게도 DID 소유자가 프로세스를 완전히 제어하고 있도록 한다. 도 4에 도시된 바와 같이, 제 3 자는 또한 DID 및 DID 문서를 사용하여 아이덴티티 허브에 대한 액세스를 위한 허가를 요청한다. 따라서, 본 명세서에 개시된 실시예는 임의의 수의 제 3 자가 아이덴티 티 허브에 액세스할 수 있도록 한다. 위에서 간략히 논의한 바와 같이, 아이덴티티 허브는 클라우드 서비스에서 호스팅된다. 서비스 제공자는 각각의 사용자의 아이덴티티 허브에 저장된 데이터에 액세스한다. 뿐만 아니라, 서비스 제공자는 또한 DID 소유자의 특정 활동에도 액세스한다. 예를 들어, DID 소유자가 자신의 데이터를 공유했던 엔티티는 아이덴 티티 허브에 저장된다. 다른 예로서, 사용자는 복수의 DID를 갖고 있고 복수의 DID들 사이에 데이터를 공 유했고, 대안적으로 사용자는 동일한 데이터에 액세스하기 위해 상이한 DID 관리 모듈을 사용했다. 데이터 공 유 활동에 기초하여, 아이덴티티 허브의 서비스 제공자는 상이한 DID의 관계를 상관시키고, 두 DID가 서로 연관되어 있거나 동일한 소유자에 의해 소유되어 있음을 알아낸다. 따라서 사용자의 프라이버시가 손상된다. 본 명세서에 설명된 원리는 아이덴티티 허브에 저장된 개인 데이터를 암호화함으로써 DID 소유자의 이러한 잠재적인 프라이버시 우려를 해결할 것이다. 암호화/해독 키는 아이덴티티 허브에 저장되거나 액세스 가 능하지 않으므로, DID 소유자는 다른 DID 소유자 또는 사용자로부터 자신의 데이터에 대한 강력한 제어권을 가 지고 있을 뿐만 아니라 서비스 제공자로부터 자신의 프라이버시가 보호받게 한다. 아이덴티티 허브에는 저장된 많은 상이한 객체가 있다. 데이터 객체는 파일, 폴더 또는 아이덴티티 허브 에 저장된 데이터의 임의의 부분이다. 전체 아이덴티티 허브는 하나의 객체로서 하나의 암호화/해독 키로 암호화된다. 대안적으로, 아이덴티티 허브에 저장된 데이터의 상이한 부분이 다른 암호화/해독 키로 암호화될 수 있다. 다른 예시적인 실시예에서, 검증 가능 클레임(예를 들면, 자격 증명 정보)이 발급되고 아이덴티티 허브 에 저장된다. 예를 들어, DID 소유자와 연관된 검증 가능 클레임은 클레임 발급 엔티티에 의해 발행 되고, 발행된 검증 가능 클레임은 DID 소유자와 연관된 아이덴티티 허브에 저장된다. 다른 엔티티가 DID 소유자의 자격 증명을 검증해야 할 때 DID 소유자는 검증 가능한 클레임을 다른 엔티티로 전송한다.예를 들어, DID 소유자는 운전 면허증을 보유하고 있는 사람이고, 클레임 발급 엔티티는 DID 소유자의 운 전 면허증을 발급한 DMV이다. DMV는 DID 소유자가 유효한 운전 면허증을 보유하고 있음을 검증하는 검증 가능 클레임을 발급한다. DID 소유자는 검증 가능 클레임을 아이덴티티 허브에 저장한다. 또 다른 엔티티는 렌터카 회사로서, 이 회사는 DID 소유자가 유효한 운전 면허증을 보유하고 있음을 보여줄 것을 요구한다. 그러면 DID 소유자는 아이덴티티 허브에 저장된 검증 가능 클레임을 렌터카 회사로 전송한다. 도 2 내지 도 4를 참조하여 DID와 그 동작 방법이 전반적으로 설명되었으며, 이제 탈중앙화 식별의 구체적인 실 시예가 설명한다. 도 5로 넘어가면, 이제 DID 소유자가 자신을 식별하면서 서비스에 액세스하고 다른 DID 소유 자와 거래를 수행할 수 있도록 하는 탈중앙화 환경이 설명될 것이다. 도 5는 설명의 편의를 위해 필요에 따라 도 2 내지 도 4의 요소를 참조하는 것이 인식될 것이다. 도 5에 도시된 바와 같이, 탈중앙화 환경은 서비스 제공자와 연관된 디바이스, 사용자(520 및 530) (예를 들어, DID 소유자)의 지갑 앱(521 및 522)을 포함한다. 생략 부호는 탈중앙화 환경에서 임의 의 수의 서비스 제공자 및/또는 사용자와 연관된 임의의 수의 디바이스가 있을 수 있음을 나타낸다. 서비스 제 공자(들) 및 사용자(520 및 530)의 각각은 도 2의 DID 소유자에 대응한다. 지갑 앱(521 또는 531)은 도 3의 DID 관리 모듈에 대응한다. ID 허브 또는 ID 허브는 도 4의 ID 허브에 대응한다. 사용자는 지갑 앱을 사용하여 자신의 DID를 관리하고, 사용자는 지갑 앱을 사용하여 자신 의 DID를 관리한다. 지갑 앱(521또는 531)은 각각의 ID 허브(522 또는 531)에 연결된다. 서비스 제공자의 디 바이스 및 지갑 앱(521, 531) 각각은 컴퓨터 네트워크를 통해 분산 원장에 액세스한다. 일부 실시예 에서, 지갑 앱(521 또는 531)은 ID 허브(522 또는 532)를 통해 분산 원장에 간접 액세스한다. 일부 실시예에서, 지갑 앱(521 또는 531)은 분산 원장의 완전한 사본을 저장하도록 구성되거나 컴퓨터 네트워크(55 0)를 통해 분산 원장에 직접 액세스한다. 서비스 제공자의 디바이스와 각각의 지갑 앱(521, 531) 및/또는 ID 허브(522, 532)는 이것으로 제한되는 것은 아니지만, 근거리 네트워크, 광역 네트워크, BLE 비콘 신호(beacon signal) 및/또는 근거리 네트워크(near field communication, NFC)를 비롯한 다양한 통신 채널을 통해 서로 통신할 수 있다. 통신은 또한 하나의 지갑 앱에 의해 바코드 또는 QR 코드를 생성하고, 다른 지갑 앱 또는 서비스 제공자의 디바이스에 의 해 바코드 또는 QR 코드를 스캔하는 것을 통해 수행될 수 있다. 바코드 또는 QR 코드는 사용자와 관련된 식별 정보, 이를테면 사용자와 연관된 DID를 포함한다. 일부 실시예에서, 서비스 제공자는 발급자 또는 신뢰 당사자로서 역할을 할 수 있다. 본 명세서에서 사용되는 바와 같이, \"발급자(issuer)\"는 주제에 관 해 적어도 하나의 주장을 하는 엔티티이다. 그 주장은 본 명세서에서 \"클레임\"이라고도 불린다. \"자격 증명\" 은 하나 이상의 클레임의 집합이다. 발급자의 예는 기업, 조직, 협회, 정부, 기관, 개인 또는 다른 사람에 의 해 신뢰될 수 있는 주장을 할 수 있는 임의의 다른 엔티티를 포함한다. 따라서, 서비스는 그러한 인스턴 스가 \"보유자(holder)\"로서 역할을 하는 사용자 또는 사용자에 대한 하나 이상의 검증 가능 클레임 또는 자격 증명을 제공할 수 있다. 사용자(520 및 530)는 검증 가능 클레임을 각각 ID 허브 및 ID 허브 에 저장할 수 있다. 본 명세서에서 사용되는 바와 같이, \"신뢰 당사자(relying party)\"는 검증 가능 클레 임 또는 자격 증명에 의존하여 보유자에 대한 정보를 확인한 다음 보유자에게 서비스를 제공하는 당사자이다. 예를 들어, 서비스가 차량 관리부(Department of Motor Vehicles, DMV)라고 가정한다. 서비스는 \" 발급자\" 역할을 하면서, 사용자가 DMV가 발급한 유효한 운전 면허증을 보유하고 있음을 주장하는 사용자 에게 검증 가능 클레임을 발행한다. \"보유자\"인 사용자는 그러면 이 정보를 필요로 하는 중계 당사 자에게 운전 면허증과 관련된 검증 가능 클레임을 제공할 수 있다. 중계 당사자(이 실시예에서는 도시되지 않 지만, 위에서 언급한 바와 같이, 서비스는 일부 실시예에서 중계 당사자일 수 있음)가 자동자 대여 업체라 고 가정한다. 사용자는 사용자가 자동차를 대여하기를 원할 때 운전 면허증과 관련된 검증 가능 클레임을 자동차 대여 업체에 제시하고, 자동차 대여 업체는 운전 면허증과 관련된 검증 가능한 클레임을 사용하여 사용 자가 자동차를 대여하는 데 사용될 수 있는 유효한 운전 면허증을 가지고 있음을 확인할 수 있다. 도 6a는 클레임을 나타내는 예시적인 데이터 구조를 도시한다. 클레임은 주제, 속성 및 값을 포함한다. 예를 들어, 주제는 DID의 소유자(예를 들어, DID 소유자)에 대응하고, DID에 대응하는 DID(611A)가 주제의 일부로서 기록된다. 속성은 이름, 전화번호, 이메일 주소 등과 같은 DID(611A) 소유자의 임의의 속성일 수 있다. 값은 대응하는 속성의 값이다. 예를 들어, 속성이 \"이름\"인 경우, 값은 DID 소유자의 이름, 예를 들어 John Doe이고; 속성이 \"전화 번호\"인 경우 값은 DID 소유자의 전화 번호, 예를 들어 1-800-123-4567일 수 있다.도 6b는 검증 가능 클레임 또는 자격 증명(600B)의 예시적인 데이터 구조를 도시한다. 일부 실시예에서, 검증 가능 클레임 또는 자격 증명의 데이터 구조는 휴대용 아이덴티티 카드(Portable Identity Card, PIC)로 지칭되 며, 발급자(예를 들면, 서비스)가 사용자(예를 들면, 사용자(520, 530))에 의해 쉽게 이해될 수 있는 방식 으로 검증 가능 클레임 또는 자격 증명을 구성하기 위한 방법이다. 검증 가능 클레임 또는 자격 증명(600B)은 도 6a의 클레임에 대응하고 DID(611A)를 포함하는 클레임을 포함한다. 검증 가능 클레임 또는 자격 증명(600B)은 또한 발급자의 개인 키에 의해 검증 가능 클레임 또는 자격 증명(600B)에 서명함으로써 생성되는 서명을 포함한다. 서명은 전형적으로 검증 가능 클레임 또는 자격 증명(600B)이 발행된 시점 이래로 검증 가능 클레임 또는 자격 증명(600B)이 변조되었는지를 검출하는 데 사용되는 (디지털 서명과 같은) 암호화 메커니즘이며, 검증 가능 클레임 또는 자격 증명(600B)의 발급자의 아이덴티티를 검증하는 데 사용될 수 있다. 일단 검증 가능 클레임 또는 자격 증명(600B)이 생성되면, 검증 가능 클레임 또는 자격 증명(600B)과 관련된 데 이터의 적어도 일부가 분산 원장(예를 들면, 220, 560)으로 전파되어, 신뢰 엔티티가 분산 원장에 전파된 데이 터의 일부를 사용하여 검증 가능 클레임 또는 자격 증명(600B)을 검증할 수 있다. 일부 실시예에서, 발급자의 개인 키에 대응하는 공개 키는 분산 원장으로 전파된다. 일부 실시예에서, 공개 키의 해시 또는 검증 가능 클 레임 또는 자격 증명(600B)의 해시는 분산 원장으로 전파된다. 일부 실시예에서, 검증 가능 클레임 또는 자격 증명(600B)은 또한 검증 가능 클레임 또는 자격 증명(600B)과 관 련된 다양한 메타데이터를 포함한다. 예를 들어, 메타데이터는 이것으로 제한되는 것은 아니지만, 대 응하는 검증된 클레임 또는 자격 증명을 식별하는 고유 식별자, 검증 가능 클레임 또는 자격 증명 (600B)에 액세스하기 위한 하나 이상의 조건, 또는 발급자가 검증 가능 클레임 또는 자격 증명(600B) 이 유효하거나 사용 가능하기를 원하는 시간의 지속 기간과 관련된 지속 기간 정보 메타데이터를 포함한다. 검증 가능 클레임 또는 자격 증명(600B)에 액세스하기 위한 하나 이상의 조건 메타데이터는 이것으로 제한 되는 것은 아니지만, 신뢰 엔티티가 미리 결정된 금액의 암호 화폐 또는 통화 유형을 지불하도록 요구하는 것, 신뢰 엔티티가 식별 정보를 제공하도록 요구하는 것, 신뢰 엔티티가 하나 이상의 검증 가능 클레임 을 제공하도록 요구하는 것, 신뢰 엔티티가 데이터의 일부에 액세스하기 위한 허가를 부여하도록 요구하는 것, 및/또는 신뢰 엔티티가 특정 서비스를 제공하도록 요구하는 것을 포함한다. 지속 기간 정보 메타데이터는 이것으로 제한되는 것은 아니지만, 대응하는 검증 가능 클레임 또는 자 격 증명(600B)의 만료 시간, 대응하는 검증 가능 클레임 또는 자격 증명(600B)이 액세스되거나 사용될 수 있는 미리 결정된 횟수, 발급자로부터의 지시에 응답하여 검증 가능 클레임 또는 자격 증명(600B)을 자동으 로 만료시키는 메커니즘, 또는 사용자가 수동으로 검증 가능 클레임 또는 자격 증명(600B)을 만료시킬 수 있도록 하는 메커니즘을 포함한다. 도 7a는 탈중앙화 네트워크에서 관리 연속성을 기록하고 관리 연속성을 검증하기 위한 컴퓨팅 시스템 환경(70 0)의 실시예를 도시한다. 도시된 바와 같이, 환경은 객체와 연관된 원조 엔티티(originating entity)를 포함한다. 예를 들어, 일부 실시예에서, 객체는 이것으로 제한되는 것은 아니지만, 그림, 초상화, 조각, 음악 작품 또는 임의의 다른 유형의 예술 작품과 같은 예술 작품이다. 일부 실시예에서, 예술 작품은 디지털 초상화 또는 디지털 음악 작품과 같은 디지털 객체 버전이다. 다른 실시예에서, 예술 작품은 물 리적 초상화 또는 음악 작품과 같은 물리적 객체 버전이다. 일부 실시예에서, 객체는 테이블, 책상, 다른 가구, 악기, 또는 차량과 같은 물리적 객체이다. 본 명세서에 개시된 실시예가 객체의 유형으로 제한되지 는 않지만, 객체는 전형적으로 가치가 있는 것으로 간주되고 하나의 엔티티에서 다른 엔티티로 매매되거나 그와 달리 이전될 수 있는 객체일 것이다. 본 명세서에 개시된 일부 실시예에서, 원조 엔티티는 객체를 생성하거나 발생시키는 엔티티이다. 예 를 들어, 그러한 실시예에서, 원조 엔티티는 디지털 또는 물리적 예술 작품인 객체를 생성하거나 발 생시키는 아티스트일 수 있다. 다른 실시예에서, 원조 엔티티는 다른 엔티티에 판매하기 위해 객체 를 획득하는 엔티티이다. 예를 들어, 그러한 실시예에서, 원조 엔티티는 골동품 가구 또는 차량을 판매하 는 골동품 딜러일 수 있다. 따라서, 본 명세서에 개시된 실시예는 원조 엔티티의 유형에 의해 제한되지 않는다. 객체는 전형적으로 가치가 있는 것으로 간주되고 매매될 수 있는 객체이기 때문에, 객체가 매매될 때 그 객체가 진본임을 보장하는 것이 중요하다. 이것은 특정 엔티티가 사기성 객체를 판매하려고 시도하지 않도록 하는 데 도움이 된다. 따라서, 본 명세서에 개시된 실시예는 원조 엔티티 또는 후속 판매 엔티티가 객체의 관리 연속성과 관련된 검증 가능 클레임 또는 자격 증명을 분산 원장에 기록할 수 있도록 한다. 그 런 다음 구매 엔티티는 분산 원장에 액세스하여 객체와 관련된 검증 가능 클레임 또는 자격 증명을 검증할 수 있다. 객체의 관리 연속성과 관련된 검증 가능 클레임 또는 자격 증명이 검증되면, 구매 엔티티는 객 체가 진품이라는 높은 확신을 가질 수 있다. 일부 실시예에서, 원조 엔티티는 앞서 설명한 방식으로 객체에 대한 DID(712A)를 획득한다. 객체에 대한 DID를 획득하는 것은 분산 시스템에서 객체를 식별하는 데 더욱 도움이 되며, 분산 원장에 검증 가능 클레임 또는 자격 증명을 기록하고 검증하는 데 도움이 될 수 있다. 따라서, 도 7a에서 로 도시된 바와 같이, 원조 엔티티의 컴퓨팅 시스템은 원조 엔티티로부터 객 체를 구매하는 엔티티인 엔티티의 컴퓨팅 시스템에 원조 관리 연속성 검증 가능 클레임 또는 자격 증 명을 제공한다. 원조 엔티티의 컴퓨팅 시스템은 엔티티가 구매 프로세스를 개시하는 시점에 원 조 관리 연속성 검증 가능 클레임 또는 자격 증명을 생성할 수 있다. 도 7b는 원조 엔티티에 의해 이루어지는 관리 연속성 클레임을 나타내는 예시적인 데이터 구조를 도 시한다. 관리 연속성 클레임은 클레임의 대상으로서 객체, 객체가 판매되었음을 명시하는 속성 및 객체가 판매되는 엔티티의 이름 및 그 엔티티의 연관된 DID를 나열하는 값을 포함한다. 예 시된 실시예에서, 객체가 판매되고 있는 엔티티는 엔티티이고 그래서 엔티티와 연관된 DID(737A)가 포함된다. 또한, 객체는 이전에 논의된 DID에 대응할 수 있는 그의 DID(712A)와 연관된 것으 로 도시된다. 일부 실시예에서, 관리 연속성 클레임 이외에, 원조 엔티티는 객체에 관한 진위성 클레임 을 또한 만든다. 도 7b는 원조 엔티티에 의해 생성되는 진위성 클레임을 나타내는 예시적인 데이터 구조를 도시한다. 진위성 클레임은 클레임의 대상으로서 객체 및 객체의 연관된 DID(712A), 객체 가 진본임을 명시하는 속성 및 객체가 진본이므로 \"참(True)\"을 보여주는 값을 포함한다. 도 7c는 원조 검증 가능 클레임 또는 자격 증명의 예시적인 데이터 구조를 도시한다. 원조 관리 연속성 검 증 가능 클레임 또는 자격 증명은 관리 클레임을 포함하며, 객체의 DID(712A) 및 엔티티의 DID(737A)를 포함한다. 일부 실시예에서, 객체의 DID(712A)를 포함하는 진위성 클레임이 또한 포함 된다. 원조 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 원조 엔티티의 DID(717A)와 연관 되고 서명에 포함된 공개 키(717B)와의 키 쌍의 일부인 원조 엔티티의 개인 키에 의해 원조 관리 연 속성 검증 가능 클레임 또는 자격 증명에 서명함으로써 생성되는 서명을 포함한다. 서명은 전 형적으로, 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 발행된 시점 이래로 변조되었는지를 검출하는 데 사용되는 (디지털 서명과 같은) 암호화 메커 니즘이며, 원조 엔티티의 아이덴티티를 검증하는 데 사용될 수 있다. 일부 실시예에서, 원조 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 원조 검증 가능 클레임 또는 자격 증명과 관련된 클레임 메 타데이터를 포함한다. 클레임 메타데이터는 앞서 논의된 메타데이터에 대응한다. 일단 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 생성되면, 도 7a의 에 도시된 바와 같이 원조 관리 연속성 검증 가능 클레임 또는 자격 증명과 관련된 적어도 데이터의 일부가 원조 엔티티의 컴퓨팅 시스템에 의해 (분산 원장(220, 560)에 대응하는) 분산 원장으로 전파되어, 신뢰 엔티티는 분산 원 장으로 전파된 데이터의 일부를 사용하여 원조 검증 가능 클레임 또는 자격 증명을 검증할 수 있다. 예를 들어, 일부 실시예에서, DID(717A) 또는 공개 키(717B)는 원조 검증 가능 클레임 또는 자격 증명을 검증하 는 데 사용하기 위해 분산 원장으로 전파된다. 다른 실시예에서, 공개 키(717B)의 해시 또는 원조 관리 연속성 검증 가능 클레임 또는 자격 증명의 해시는 분산 원장으로 전파된다. 도 7a에 도시된 바와 같이, 에서, 엔티티의 컴퓨팅 시스템은 일단 객체의 판매가 완료되면 원조 엔티티로부터 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 예시의 편의를 도시 되지 않았지만, 일단 객체의 판매가 완료되면 엔티티가 이제 객체를 소유하고 있기 때문에, 엔 티티는 원조 엔티티로부터 실제 객체도 수령할 것이라는 것이 인식될 것이다. 원조 검증 가능 클레임 또는 자격 증명을 수신하면, 엔티티의 컴퓨팅 시스템은 에 도시된 바와 같이 분산 원장에 액세스하여 DID(717A) 및/또는 공개 키(717B)를 사용하여 서명을 검증할 수 있다. 바꾸어 말하면, 엔티티의 컴퓨팅 시스템은 DID(717A) 및/또는 공개 키(717B)를 사용하여 분산 원장 상의 다수의 엔트리가 서명(또는 적어도 서명의 표현)이 적절하게 기록되고 변조되지 않았다고 표시 하는 것을 확인할 것이다. 서명의 성공적인 검증은 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 엔티티에 의해 수신된 시점에 원조 엔티티가 객체의 적절한 관리를 담당하고 있음을 검 증할 것이다. 객체의 관리권을 획득한 후에, 엔티티는 객체를 엔티티에 판매하기를 원할 수 있다. 따라 서, 도 7a의 단계에 도시된 바와 같이, 엔티티의 컴퓨팅 시스템은 엔티티의 컴퓨팅 시스템에 관 리 연속성 검증 가능 클레임 또는 자격 증명 을 제공하여 적절한 관리 연속성을 엔티티에게 보여준다. 엔티티의 컴퓨팅 시스템은 엔티티가 구매 프로세스를 개시하는 시점에 관리 연속성 검증 가능 클레임 또는 자격 증명 을 생성할 수 있다. 엔티티가 엔티티에 관리 연속성 검증 가능 클 레임 또는 자격 증명을 \"제시\"하기 때문에, 관리 연속성 검증 가능 클레임 또는 자격 증명 은 검증 가능 제시(verifiable presentation)라고도 지칭될 수 있다. 도 7d는 엔티티에 의해 생성되는 관리 연속성 클레임을 나타내는 예시적인 데이터 구조를 도시한다. 관리 연속성 클레임은 클레임의 주제로서 객체 및 그의 연관된 DID(712A), 객체가 판매되었음을 명시하는 속성, 객체가 판매되고 있는 엔티티의 이름 및 그 엔티티의 연관된 DID를 나열하는 값(73 3)을 포함한다. 예시된 실시예에서, 객체가 판매되고 있는 엔티티는 엔티티이고 그래서 엔티티(74 0)와 연관된 DID(747A)가 포함된다. 도 7e는 관리 연속성 검증 가능 클레임 또는 자격 증명의 예시적인 데이터 구조를 도시한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 관리 연속성 클레임을 포함하며 객체의 DID(712A) 및 엔티 티의 DID(747A)를 포함한다. 일부 실시예에서, 관리 연속성 검증 가능 클레임 또는 자격 증명은 또 한 관리 연속성 검증 가능 클레임 또는 자격 증명과 관련되고 앞서 논의된 메타데이터에 대응할 수 있는 다양한 메타데이터를 포함한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 원조 검 증 가능 클레임 또는 자격 증명을 포함하거나 그 안에 내장한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 엔티티의 DID(737A)와 연관된 엔티티의 개인 키로, 관리 연속성 검증 가능 클레임 또는 자격 증명을 서명함으로써 생성되는 서명을 포함한다. 서명은 전형적으로 관리 연속성 검증 가능 클레임 또는 자격 증명이 발행된 시점 이래로 관리 연속성 검증 가능 클레임 또는 자격 증명이 변조되었는지를 검출하는 데 사용되는 (디지털 서명과 같 은) 암호화 메커니즘이며, 엔티티의 ID를 검증하는 데 사용될 수 있다. 일단 관리 연속성 검증 가능 클레임 또는 자격 증명이 생성되면, 관리 연속성 검증 가능 클레임 또는 자격 증명과 관련된 데이터의 적어도 일부는 도 7a의 에 도시된 바와 같이 엔티티의 컴퓨팅 시스템에 의해 분산 원장으로 전파되므로, 신뢰 엔티티는 분산 원장으로 전파된 데이터의 일부를 사용하여 관리 연 속성 검증 가능 클레임 또는 자격 증명을 검증할 수 있다. 예를 들어, 일부 실시예에서, DID(737A) 또는 공개 키(737B)는 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하는 데 사용하기 위해 분산 원장 으로 전파된다. 다른 실시예에서, 공개 키(737B)의 해시 또는 관리 연속성 검증 가능 클레임 또는 자격 증명의 해시는 분산 원장으로 전파된다. 도 7a의 에 도시된 바와 같이, 엔티티의 컴퓨팅 시스템은 일단 객체의 판매가 완료되면 엔티티 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 예시의 편의를 위해 도시되지 않았지만, 엔티티는 이제 엔티티가 객체를 소유하고 있기 때문에, 일단 객체의 판매가 완 료되면 엔티티로부터 실제 객체를 수령할 것이라는 것이 인식될 것이다. 엔티티의 컴퓨팅 시스템은, 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신하면, 에 도시 된 바와 같이 분산 원장에 액세스하여 DID(737A) 및/또는 공개 키(737B)를 사용하여 서명을 검증할 수 있다. 바꾸어 말하면, 엔티티의 컴퓨팅 시스템은 DID(737A) 및/또는 공개 키(737B)를 사용하여 분산 원장의 다수의 엔트리가 서명(또는 적어도 서명의 표현)이 적절하게 기록되었고 변조 또는 취소 되지 않았음을 표시하는지 확인할 것이다. 그러나, 서명 자체의 유효성을 검증하는 것은 반드시 엔티티가 객체의 적절한 관리를 담당하고 있다는 것을 검증하는 것이 아닐 수 있다. 예를 들어, 엔티티가 객체의 위조 버전을 판매하려고 시 도하고 있고 이에 따라 엔티티를 속이기 위해 관리 연속성 검증 가능 클레임 또는 자격 증명을 부정 하게 생성했을 수 있다. 따라서, 엔티티의 컴퓨팅 시스템은 또한 에 도시된 바와 같이 분산 원장에 액세스하여, DID(717A) 및/또는 공개 키(717B)를 사용하여, 관리 연속성 검증 가능 클레임 또는 자격 증명(73 5)에 내장된 원조 관리 연속성 검증 가능 클레임 또는 자격 증명의 서명을 검증할 수 있다. 앞서 논의한 바와 같이, 서명을 검증하는 것은, 그러한 변조는 서명의 검증을 실패하게 할 수 있기 때문에, 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 변조되지 않았음을 보여준다. 또한, 서명을 검증하 는 것은, 그러한 취소가 분산 원장에 기록될 가능성이 높기 때문에, 보증 원조 관리 연속성 검증 가능 클 레임 또는 자격 증명이 취소되지 않았음을 보여준다. 따라서, 서명(717 및 737)의 성공적인 검증은, 엔티 티에 의해 관리 연속성 검증 가능 클레임 또는 자격 증명이 수신된 시점에 엔티티가 객체 의 적절한 관리를 담당하고 있었음을 검증할 것이다. 객체의 관리권을 획득한 후에, 엔티티는 객체를 엔티티에 판매하기를 원할 수 있다. 따라 서, 도 7a의 에 도시된 바와 같이, 엔티티의 컴퓨팅 시스템은 검증 가능 클레임 또는 자격 증명(74 5)을 엔티티의 컴퓨팅 시스템에 제공한다. 엔티티의 컴퓨팅 시스템은 엔티티가 구매 프로세스 를 개시하는 시점에 검증 가능 클레임 또는 자격 증명을 생성할 수 있다. 엔티티가 엔티티에게 관리 연속성 검증 가능 클레임 또는 자격 증명을 \"제시\"하기 때문에, 관리 연속성 검증 가능 클레임 또는 자격 증명은 검증 가능 제시라고도 지칭될 수 있다. 도 7f는 엔티티에 의해 생성되는 관리 연속성 클레임을 나타내는 예시적인 데이터 구조를 도시한다. 관리 연속성 클레임은 클레임의 대상으로서 객체 및 그의 연관된 DID(712A), 객체가 판매되었음 을 명시하는 속성, 객체가 판매되고 있는 엔티티의 이름 및 그 엔티티의 연관된 DID를 나열하는 값 을 포함한다. 예시된 실시예에서, 객체가 판매되고 있는 엔티티는 엔티티이고, 따라서 엔티티 와 연관된 DID(750A)가 포함된다. 도 7g는 관리 연속성 검증 가능 클레임 또는 자격 증명의 예시적인 데이터 구조를 도시한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 관리 연속성 클레임을 포함하며, 객체의 DID(712A) 및 엔티 티의 DID(750A)를 포함한다. 일부 실시예에서, 관리 연속성 검증 가능 클레임 또는 자격 증명은 또 한 관리 연속성 검증 가능 클레임 또는 자격 증명과 관련되고 앞서 논의된 메타데이터에 대응할 수 있는 다양한 메타데이터를 포함한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 관리 연 속성 검증 가능 클레임 또는 자격 증명을 포함하거나, 그 안에 내장한다. 앞서 논의한 바와 같이, 관리 연속성 검증 가능 클레임 또는 자격 증명은 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 포 함하거나 그 안에 내장한다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 또한 관리 연속성 검증 가능 클레임 또는 자격 증명(74 5)을 엔티티의 DID(747A)와 연관된 엔티티의 개인 키로 서명함으로써 생성되는 서명을 포함한다. 서명은 전형적으로 관리 연속성 검증 가능 클레임 또는 자격 증명이 발행된 시점 이래로 관리 연속성 검증 가능 클레임 또는 자격 증명이 변조되었는지를 검출하는 데 사용되는 (디지털 서명과 같 은) 암호화 메커니즘이며, 엔티티의 아이덴티티를 검증하는 데 사용될 수 있다. 일단 관리 연속성 검증 가능 클레임 또는 자격 증명이 생성되면, 관리 연속성 검증 가능 클레임 또는 자격 증명과 관련된 데이터의 적어도 일부는 도 7a의 에 도시된 바와 같이 엔티티의 컴퓨팅 시스템에 의해 분산 원장으로 전파되므로, 신뢰 엔티티는 분산 원장으로 전파된 데이터의 일부를 사용하여 관리 연 속성 검증 가능 클레임 또는 자격 증명을 검증할 수 있다. 예를 들어, 일부 실시예에서, DID(747A) 또는 공개 키(747B)는 분산 원장으로 전파되어 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하는 데 사용된다. 다른 실시예에서, 공개 키(747B)의 해시 또는 관리 연속성 검증 가능 클레임 또는 자격 증명 의 해시는 분산 원장으로 전파된다. 도 7a의 에 도시된 바와 같이, 엔티티의 컴퓨팅 시스템은 일단 객체의 판매가 완료되면 엔티티 로부터 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 설명의 편의를 위해 도시되지 않 았지만, 엔티티는 이제 엔티티가 객체를 소유하고 있기 때문에, 일단 객체의 판매가 완료 되면 엔티티로부터 실제 객체도 수령할 것이라는 것이 인식될 것이다. 엔티티의 컴퓨팅 시스템은, 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신하면, 에 도시 된 바와 같이 분산 원장에 액세스하여, DID(747A) 및/또는 공개 키(747B)를 사용하여 서명을 검증하 여, 분산 원장 상의 다수의 엔트리가 서명(또는 적어도 서명의 표현)이 적절하게 기록되었고 변 조되거나 취소되지 않았음을 표시하는 것을 확인할 수 있다. 서명 그 자체를 검증하는 것은, 사기성 관리 연속성 클레임이 이전의 관리 연속성 검증 가능 클레임 또는 자격 증명에 추가되었을 수 있기 때문에, 엔티티 또는 엔티티가 객체의 적절한 관리를 담당하고있었다는 것을 반드시 검증하는 것은 아니다. 따라서, 엔티티의 컴퓨팅 시스템은 또한 에 도시된 바 와 같이 분산 원장에 액세스하여, DID(737A) 및/또는 공개 키(737B)를 사용하여 관리 연속성 검증 가능 클레임 또는 자격 증명에 내장된 관리 연속성 검증 가능 클레임 또는 자격 증명의 서명을 검증할 수 있 다. 또한, 엔티티의 컴퓨팅 시스템은 에 도시된 바와 같이 분산 원장에 액세스하여, DID(717A) 및/ 또는 공개 키(717B)를 사용하여, 관리 연속성 검증 가능 클레임 또는 자격 증명에 내장된 원조 관리 연속 성 검증 가능 클레임 또는 자격 증명의 서명을 검증할 수 있다. 서명(717, 737 및 747)의 성공적인 검증은, 관리 연속성 검증 가능 클레임 또는 자격 증명이 엔티티에 의해 수신된 시점에 엔티티 가 객체의 적절한 관리를 담당하고 있었음을 검증할 것이다. 도 8은 엔티티가 다양한 검증 가능 클레임 또는 자격 증명(715, 735 및 745)을 검증 또는 확인하기 위한 프로세스 흐름의 보다 상세한 예시를 도시한다. 앞서 논의된 바와 같이, 엔티티의 컴퓨팅 시스템은 엔티 티로부터 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 에 도시된 바와 같이, 엔 티티의 컴퓨팅 시스템은 분산 원장에 액세스하여, 앞서 설명한 방식으로 관리 연속성 검증 가능 클레 임 또는 자격 증명을 검증 또는 확인한다. 에 도시된 바와 같이, 관리 연속성 검증 가능 클레임 또 는 자격 증명을 성공적으로 검증 또는 확인하면, 엔티티의 컴퓨팅 시스템은 분산 원장에 액세스 하여, 앞서 에서 도시된 방식으로 관리 연속성 검증 가능 클레임 또는 자격 증명에 포함된 관리 연속 성 검증 가능 클레임 또는 자격 증명을 검증 또는 확인한다. 에 도시된 바와 같이, 관리 연속성 검 증 가능 클레임 또는 자격 증명을 성공적으로 검증 또는 확인하면, 엔티티의 컴퓨팅 시스템은 분산 원장에 액세스하여, 앞서 에 도시된 바와 같이 관리 연속성 검증 가능 클레임 또는 자격 증명에 내장된 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증 또는 확인한다. 이러한 방식으로, 엔 티티는 특정 시점에 객체의 적절한 관리를 담당하고 있음을 주장한 엔티티 각각이 실제로 관리를 담 당하고 있었다는 것을 검증할 수 있다. 이것은 엔티티가 객체의 진위성에 대한 확신을 가질 수 있도 록 한다. 일부 실시예에서, 객체의 관리를 담당하고 있는 엔티티 중 하나는 객체에 대한 수리 또는 다른 변경 을 수행하기를 원할 수 있다. 예를 들어, 객체가 골동품 가구 또는 골동품 자동차인 경우, 그 가치를 증 가시키기 위해 수리 또는 복원될 필요가 있을 수 있다. 따라서, 도 7h는 수리 엔티티(repair entity)를 포함하는 환경의 다른 실시예를 도시한다. 실시예에서, 수리 엔티티의 컴퓨팅 시스템은 수리 검증 가능 클레임 또는 자격 증명을 생성할 수 있다. 도시되지는 않았지만, 수리 검증 가능 클레임 또는 자격 증명은 주제, 속성 및 값을 갖는 클레임을 포함하며, 객체에 수행된 수리 또는 변경을 명시하는 클레 임 메타데이터를 포함할 수 있다. 에 도시된 바와 같이, 수리 검증 가능 클레임 또는 자격 증명을 분산 원장에 기록하는 데 사용되는 연관된 DID 및 공개 키와 함께 서명이 또한 포함될 수 있다. 수리 검증 가능 클레임 또는 자격 증명은 수리 또는 변경을 개시한 엔티티에 제공된다. 예시된 실시예에 서, 이 엔티티는 엔티티이고, 수리 검증 가능 클레임 또는 자격 증명은 에 도시된 바와 같이 엔 티티에 제공된다. 그런 다음 수리 검증 가능 클레임 또는 자격 증명은 도 7j에 도시된 바와 같이 관 리 연속성 검증 가능 클레임 또는 자격 증명에 내장될 수 있다. 이러한 방식으로, 객체에 대한 임의 의 수리 또는 변경을 검증 가능 클레임 또는 자격 증명에 포함시키는 것이 가능하다. 예시된 실시예는 엔티티 가 수리 또는 변경을 개시하는 것으로 도시되어 있지만, 이것은 엔티티 중 임의의 엔티티에 의해 수행될 수 있다. 또한, 일부 실시예에서, 수리 엔티티는 엔티티 또는 환경의 일부 다른 엔티티일 수 있다. 도 7i는 보증 엔티티(endorsement entity)를 포함하는 환경의 다른 대안적인 실시예를 도시한다. 보 증 엔티티는 전형적으로 잘 알려진 엔티티로서, 전문성 때문에 다른 엔티티에 의해 신뢰될 수 있는 특정 분야의 전문가이다. 예를 들어, 보증 엔티티는 골동품 객체에 대한 클레임을 생성하는 것으로 잘 알려진 골동품 상점일 수 있다. 실시예에서, 보증 엔티티의 컴퓨팅 시스템은 보증 클레임 또는 자격 증명을 생성할 수 있다. 도시되 지는 않았지만, 보증 클레임 또는 자격 증명은 주제, 속성 및 가치를 갖는 클레임을 포함하며, 보증 엔티 티가 객체의 진위성을 입증했음을 명시하는 클레임 메타데이터를 포함할 수 있다. (709A)에 도시된 바와 같이, 분산 원장에 보증 클레임 또는 자격 증명을 기록하는 데 사용되는 연관된 DID 및 공개 키와 함 께 서명이 또한 포함될 수 있다. 보증 클레임 또는 자격 증명은 보증을 요청한 엔티티에 대한 제공이다. 예시된 실시예에서, 이 엔티티는 엔티티이고, 보증 클레임 또는 자격 증명은 (708A)에 도시된 바와 같이 엔티티에 제공된다. 그 런 다음 보증 클레임 또는 자격 증명은 도 7k에 도시된 바와 같이 관리 연속성 검증 가능 클레임 또는 자 격 증명에 내장될 수 있다. 엔티티(또는 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신하는 임의의 후속 엔티티)는 분산 원장을 사용하여 앞서 설명한 방식으로 보증 클레임 또는 자격 증명을 검증할 수 있다. 보증 클레임 또는 자격 증명이 검증되거나 유효성이 확인되면, 엔티티는 객체(71 2)가 진본임을 신뢰할 수 있다. 엔티티는 보증 엔티티에 의해 이루어진 보증을 신뢰할 수 있기 때문 에, 엔티티(또는 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신하는 임의의 후속 엔티티)는 다른 관리 연속성 클레임 또는 자격 증명을 추가로 검증 또는 확인할 필요가 없을 수 있다. 예시된 실시예는 엔티티 가 보증 클레임 또는 자격 증명을 요청하는 것으로 도시되어 있지만, 이것은 엔티티 중 임의의 엔티 티에 의해 수행될 수 있다. 또한, 일부 실시예에서, 보증 엔티티는 엔티티 또는 환경의 일부 다른 엔티티일 수 있다. 도 9는 객체가 디지털 예술 작품인 실시예를 도시한다. 디지털 예술 작품은 전형적으로 디지털 예술 작품에 대한 정보를 포함하는 메타데이터를 포함할 것이다. 따라서, 일부 실시예에서, 원조 엔티티 는 디지털 예술 작품을 엔티티에게 판매할 때 메타데이터의 일부로서 원조 관리 연속성 검 증 가능 클레임 또는 자격 증명을 포함시킨다. 도시되지는 않았지만, 엔티티는 메타데이터에 관리 연속성 검증 가능 클레임 또는 자격 증명을 포함시킬 수 있다. 그런 다음, 이 프로세스는 엔티티 에 의해 관리 연속성 검증 가능 클레임 또는 자격 증명에 대해 반복될 수 있다. 다른 실시예에서, 디지털 예술 작품은 원조 검증 가능 클레임 또는 자격 증명의 클레임 메타데이터에 포함될 수 있다. 도 9는 또한 원조 검증 가능 클레임 또는 자격 증명의 대안적인 실시예를 도시한다. 이 실시예에서, 원조 엔티티는 클레임 메타데이터에 객체의 디지털 사진을 포함시킨다. 이것은 객체가 골 동품 가구 또는 실제 예술 작품과 같은 물리적 객체인 실시예에 유용할 수 있다. 클레임 메타데이터에 디 지털 사진을 포함시킴으로써, 원조 관리 연속성 검증 가능 클레임 또는 자격 증명의 생성 이후에 객 체를 획득하는 엔티티는 물리적 객체를 디지털 사진과 비교할 수 있다. 일치하는 것은 객체 가 진품이며 관리 연속성이 적절하게 유지되었음을 표시할 가능성이 높다. 다음 논의에서는 수행될 수 있는 다수의 방법과 방법 행위를 언급한다. 방법 행위는 특정 순서로 논의되거나 흐름도에서 특정 순서로 발생하는 것으로 설명될 수 있지만, 특별히 명시되지 않는 한 특정 순서가 필요하지 않 거나 행위가 수행되기 전에 완료되는 다른 행위에 의존하기 때문에 필요한 경우가 아니면 특정 순서는 필요하지 않다. 도 10은 분산 원장에 의해 뒷받침되는 탈중앙화 식별자(DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성을 기록하는 예시적인 방법의 흐름도를 도시한다. 방법은 앞서 논의한 도 2 내지 도 9 중 하나 이상 과 관련하여 설명될 것이다. 방법은, 제 2 엔티티에서, 제 1 엔티티로부터 제 1 관리 연속성 검증 가능 클레임을 수신하고 - 제 1 관 리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 서명됨 - 제 1 관리 연속성 검증 가능 클레임이 수신되는 시 점에 객체가 제 1 엔티티의 관리 중에 있었음을 명시하는 단계를 포함한다. 예를 들어, 앞서 설명한 바 와 같이, 엔티티는 원조 엔티티로부터 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 수 신할 수 있다. 원조 관리 연속성 검증 가능 클레임 또는 자격 증명은 원조 엔티티의 서명을 포 함하고, 원조 관리 연속성 검증 가능 클레임 또는 자격 증명이 엔티티에 의해 수신되는 시점에 객체 가 원조 엔티티의 관리 중에 있었음을 명시하는 관리 연속성 클레임을 포함한다. 대안적으로, 엔티티는 엔티티로부터 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신할 수 있다. 관리 연속성 검증 가능 클레임 또는 자격 증명은 엔티티의 서명을 포함하고, 관리 연속 성 검증 가능 클레임 또는 자격 증명이 엔티티에 의해 수신되는 시점에 객체가 엔티티의 관리 중에 있었음을 명시하는 관리 연속성 클레임을 포함한다. 방법은 분산 원장에 액세스하여 제 1 관리 연속성 검증 가능 클레임을 검증하는 단계를 포함한다. 예를 들어, 앞서 설명한 바와 같이, 엔티티는 분산 원장에 액세스하여 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증한다. 대안적으로, 엔티티는 분산 원장에 액세스하여 관리 연속 성 검증 가능 클레임 또는 자격 증명을 검증한다.방법은 제 2 관리 연속성 검증 가능 클레임을 생성하는 단계를 포함하며, 제 2 관리 연속성 검증 가능 클레임은 그 안에 제 1 관리 연속성 검증 가능 클레임을 내장하며 제 2 엔티티에 의해 서명된다. 예를 들 어, 앞서 설명한 바와 같이, 엔티티는 서명 및 내장된 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 포함하는 관리 연속성 검증 가능 클레임 또는 자격 증명을 생성한다. 대안적으로, 엔티티 는 서명 및 내장된 관리 연속성 검증 가능 클레임 또는 자격 증명을 포함하는 관리 연속성 검증 가능 클레임 또는 자격 증명을 생성한다. 방법은 분산 원장에 제 2 관리 연속성 검증 가능 클레임의 적어도 일부를 기록하는 단계를 포함한 다. 예를 들어, 앞서 설명한 바와 같이, 엔티티는 분산 원장에 관리 연속성 검증 가능 클레임 또는 자격 증명의 적어도 일부를 기록한다. 대안적으로, 엔티티는 분산 원장에 관리 연속성 검증 가 능 클레임 또는 자격 증명의 적어도 일부를 기록한다. 방법은 제 2 관리 연속성 검증 가능 클레임을 제 3 엔티티에 제공하는 단계를 포함하며, 제 2 관리 연속성 검증 가능 클레임은 제 2 관리 연속성 검증 가능 클레임이 제 3 엔티티에 제공되는 시점에 객체가 제 2 엔티티의 관리 중에 있었음을 제 3 엔티티에 명시하도록 구성된다. 예를 들어, 앞서 설명한 바와 같이, 엔티티 는 객체에 대한 적절한 관리 연속성을 입증하기 위해 엔티티에 관리 연속성 검증 가능 클레임 또는 자격 증명을 제공한다. 대안적으로, 엔티티는 객체에 대한 적절한 관리 연속성을 입증하 기 위해 엔티티에 관리 연속성 검증 가능 클레임 또는 자격 증명을 제공한다. 도 11은 분산 원장에 의해 뒷받침되는 탈중앙화 식별자(DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성을 검증하는 예시적인 방법의 흐름도를 도시한다. 방법은 앞서 논의된 도 2 내지 도 9 중 하나 이상과 관련하여 설명될 것이다. 방법은, 제 3 엔티티에서, 제 1 엔티티로부터 객체와 관련된 제 1 관리 연속성 검증 가능 클레임을 수신 하는 단계를 포함하며, 제 1 관리 연속성 검증 가능 클레임은 제 1 엔티티에 의해 생성된 제 1 서명을 포 함하고 제 1 엔티티가 제 2 엔티티로부터 수신한 객체와 관련된 제 2 관리 연속성 검증 가능 클레임을 그 안에 내장하며, 제 2 관리 연속성 검증 가능 클레임은 제 2 엔티티에 의해 생성된 제 2 서명을 포함한다. 예를 들어, 앞서 설명한 바와 같이, 엔티티는 엔티티로부터 서명, 객체에 대한 관리 연속성 클 레임, 및 원조 엔티티의 서명을 포함하는 내장된 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 포함하는 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 대안적으로, 엔티티 는 엔티티로부터 서명, 객체에 대한 관리 연속성 클레임, 및 엔티티의 서명 과 원조 엔티티의 서명을 각각 포함하는 내장된 관리 연속성 검증 가능 클레임 또는 자격 증명 및 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 포함하는 관리 연속성 검증 가능 클레임 또는 자격 증명을 수신한다. 방법은 분산 원장에 액세스하여 제 1 관리 연속성 검증 가능 클레임을 검증하는 단계를 포함하며, 제 1 관리 연속성 검증 가능 클레임의 검증은 제 1 관리 연속성 검증 가능 클레임이 제 3 엔티티에 의해 수신된 시점에 제 1 엔티티가 객체의 적절한 관리를 담당하고 있음을 나타낸다. 예를 들어, 앞서 설명한 바와 같이, 엔티티는 분산 원장에 액세스하여 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하여, 엔티티가 객체에 대한 적절한 관리 연속성을 갖고 있음을 입증할 수 있다. 대안적으로, 엔티티(75 0)는 분산 원장에 액세스하여 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하여, 엔티티 가 객체에 대한 적절한 관리 연속성을 가지고 있음을 입증할 수 있다. 방법은 제 1 관리 연속성 검증 가능 클레임의 성공적인 검증 시에, 분산 원장에 액세스하여 제 2 관리 연 속성 검증 가능 클레임을 검증하는 단계를 포함하며, 제 2 관리 연속성 검증 가능 클레임의 검증은 제 2 관리 연속성 검증 가능 클레임이 제 1 엔티티에 의해 수신된 시점에 제 2 엔티티가 객체의 적절한 관리를 담당 하고 있음을 나타낸다. 예를 들어, 앞서 설명한 바와 같이, 엔티티는 분산 원장에 액세스하여 원조 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하여 원조 엔티티가 객체에 대한 적절한 관리 연속성을 갖고 있음을 입증할 수 있다. 대안적으로, 엔티티는 분산 원장에 액세스하여, 관리 연속성 검증 가능 클레임 또는 자격 증명을 검증하고 원조 관리 연속성 검증 가능 클레임 또는 자격 증명 을 검증하여, 엔티티 및 원조 엔티티가 객체에 대해 적절한 관리 연속성을 갖고 있음을 입 증할 수 있다. 본 명세서에 개시된 프로세스 및 방법의 경우, 프로세스 및 방법에서 수행되는 동작은 상이한 순서로 구현될 수 있다. 또한, 개략적으로 설명된 동작은 예로서만 제공되며, 일부 동작은 개시된 실시예의 본질을 훼손하지 않으면서 선택적이거나, 더 적은 수의 단계 및 동작으로 결합되거나, 추가 동작으로 보완되거나, 또는 추가 동작 으로 확장될 수 있다. 본 발명은 그 정신 또는 특성을 벗어나지 않고 다른 구체적인 형태로 구현될 수 있다. 설명된 실시예는 모든 측면에서 단지 제한이 아니라 예시로서 고려되어야 한다. 그러므로 본 발명의 범위는 전술한 설명이 아닌 첨부 된 청구범위로 표시된다. 청구범위의 의미와 동등성의 범위 내에 있는 모든 변경 사항은 청구범위의 범위 내에 포용되어야 한다."}
{"patent_id": "10-2023-7041189", "section": "도면", "subsection": "도면설명", "item": 1, "content": "위에서 언급한 장점 및 특징 그리고 다른 장점 및 특징이 획득될 수 있는 방식을 설명하기 위해, 첨부 도면에 예시된 특정 실시예를 참조하여 위에서 간략하게 설명한 주제에 대한 보다 구체적인 설명이 이루어질 것이다. 이들 도면은 전형적인 실시예만을 도시한 것이므로 그 범위가 제한되는 것으로 간주되어서는 안 된다는 점을 이 해하면, 실시예는 첨부 도면을 사용하여 더욱 구체적이고 상세하게 기술되고 설명될 것이다: 도 1은 본 명세서에 설명된 원리가 적용될 수 있는 예시적인 컴퓨팅 시스템을 도시한다. 도 2는 예시적인 탈중앙화 식별 또는 식별자(DID)를 생성하기 위한 예시적인 환경을 도시한다. 도 3은 다양한 DID 관리 동작 및 서비스를 위한 예시적인 환경을 도시한다. 도 4는 예시적인 탈중앙화 개인 스토리지 또는 아이덴티티 허브를 도시한다. 도 5는 본 명세서에 설명된 원칙이 구현된 예시적인 환경을 도시한다. 도 6a는 예시적인 클레임을 도시한다. 도 6b는 예시적인 검증 가능 클레임을 도시한다. 도 7a는 탈중앙화 네트워크에서 관리 연속성을 기록하고 검증하는 데 사용할 수 있는 예시적인 환경을 도시한다. 도 7b는 예시적인 진위 여부 및 관리 연속성 클레임을 도시한다. 도 7c는 예시적인 원조 관리 연속성 검증 가능 클레임을 도시한다. 도 7d는 다른 예시적인 관리 연속성 클레임을 도시한다. 도 7e는 원조 관리 연속성 검증 가능 클레임이 내장된 예시적인 관리 연속성 검증 가능 클레임을 도시한다. 도 7f는 다른 예시적인 관리 연속성 클레임을 도시한다. 도 7g는 원조 관리 연속성 검증 가능 클레임과 다른 관리 연속성 검증 가능 클레임이 내장된 예시적인 관리 연 속성 검증 가능 클레임을 도시한다. 도 7h는 도 7a의 환경의 대안적인 실시예를 도시한다. 도 7i는 도 7a의 환경의 대안적인 실시예를 도시한다.도 7j는 수리 검증 가능 클레임을 포함하는 예시적인 관리 연속성 검증 가능 클레임을 도시한다. 도 7k는 보증 검증 가능 클레임을 포함하는 예시적인 관리 연속성 검증 가능 클레임을 도시한다. 도 8은 다수의 관리 연속성 검증 가능 클레임을 검증하는 예시적인 흐름을 도시한다. 도 9는 원시 관리 연속성 검증 가능 클레임의 대안적인 실시예를 도시한다. 도 10은 분산 원장에 의해 뒷받침되는 탈중앙화 식별자(DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성을 기록하기 위한 예시적인 방법의 흐름도를 도시한다. 도 11은 분산 원장에 의해 뒷받침되는 탈중앙화 식별자(DID)를 구현하는 탈중앙화 네트워크에서 관리 연속성을 검증하는 예시적인 방법의 흐름도를 도시한다."}
