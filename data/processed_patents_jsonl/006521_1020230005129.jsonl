{"patent_id": "10-2023-0005129", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0113064", "출원번호": "10-2023-0005129", "발명의 명칭": "기계 학습에 기반한 스캔 체인 진단방법 및 진단장치", "출원인": "연세대학교 산학협력단", "발명자": "강성호"}}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서, 및 상기 적어도 하나의 프로세서에 의해 실행되는 기계 학습기반의 스캔 체인 진단방법에 있어서,적어도 하나의 스캔 체인(scan chain)에 적어도 하나의 테스트패턴(test pattern)을 입력하고 결과값에 기초하여 고장로그(fail log)로 구성된 적어도 하나의 고장벡터(failure vector)를 생성하는 단계; 상기 적어도 하나의 고장벡터를 합산하여 통합고장벡터(integer failure vector)를 포함하는 학습데이터를 생성하고, 상기 적어도 하나의 스캔 체인의 천이지연고장(transition delay fault)의 종류에 따른 인공지능 모델을기계 학습하는 단계; 및 검사대상 스캔 체인의 상기 천이지연고장의 종류를 판별하고, 상기 적어도 하나의 테스트패턴을 입력하여 획득한 상기 통합고장벡터를 상기 천이지연고장의 종류에 따른 상기 인공지능 모델에 입력하여 상기 검사대상 스캔체인을 구성하는 적어도 하나의 스캔 셀 중 고장인 스캔 셀을 진단하는 단계를 포함하는,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 천이지연고장의 종류는 슬로우 투 라이스(slow-to-rise) 타입의 천이지연고장, 슬로우 투 폴(slow-to-fall) 타입의 천이지연고장, 패스트 투 라이스(fast-to-rise) 타입의 천이지연고장, 및 패스트 투 폴(fast-to-fall) 타입의 천이지연고장 중 어느 하나인,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서,상기 적어도 하나의 고장벡터(failure vector)를 생성하는 단계는, 상기 적어도 하나의 스캔 체인을 구성하는 적어도 하나의 스캔 셀 전부에 고장이 없는 경우를 가정하여 적어도하나의 제1 테스트패턴을 입력하고 제1 결과값을 획득하는 단계; 상기 적어도 하나의 스캔 셀에 상기 천이지연고장 중 어느 하나의 타입의 천이지연고장이 있는 경우를 가정하여상기 천이지연고장에 대응하는 적어도 하나의 제2 테스트패턴을 입력하고 제2 결과값을 획득하는 단계; 상기 제1 결과값과 제2 결과값을 비교하여 상기 적어도 하나의 스캔 셀 각각에 대한 상기 고장로그를 획득하는단계; 및상기 스캔 셀의 순서에 따라 상기 고장로그를 성분으로 가지는 상기 적어도 하나의 고장벡터를 생성하는 단계를포함하는,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서,상기 적어도 하나의 스캔 셀 각각에 대한 상기 고장로그를 생성하는 단계는, 상기 제1 결과값과 상기 제2 결과값이 동일한 스캔 셀에는 0을 상기 고장로그로 부여하는 단계; 및상기 제1 결과값과 상기 제2 결과값이 동일하지 않은 스캔 셀에는 1을 상기 고장로그로 부여하는 단계를 포함하공개특허 10-2024-0113064-3-는, 기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1 항에 있어서, 상기 학습데이터를 생성하는 단계는,상기 적어도 하나의 스캔 체인 중 상기 천이지연고장 중 어느 하나의 타입의 천이지연고장이 있는 어느 하나의제1 타겟 스캔 체인을 구성하는 적어도 하나의 스캔 셀을 미리 설정된 갯수에 따라 그룹핑하는 단계; 상기 제1 타겟 스캔 체인을 제외한 나머지 스캔 체인을 구성하는 적어도 하나의 스캔 셀 중 상기 그룹핑된 적어도 하나의 스캔 셀과 팬 아웃(Fan-out) 관계로 연결된 적어도 하나의 스캔 셀의 상기 통합고장벡터의 성분을 합산하여 고장발생빈도수를 획득하는 단계; 및상기 그룹핑된 적어도 하나의 스캔 셀의 상기 통합고장벡터의 성분과 상기 고장발생빈도수를 성분으로 가지는상기 학습데이터를 생성하는 단계를 포함하는,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5 항에 있어서,상기 인공지능 모델을 기계 학습하는 단계는, 상기 학습데이터를 이용하여 상기 인공지능 모델에 대한 지도학습(supervised learning)에 기반한 기계 학습을수행하는,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 항에 있어서,상기 검사대상 스캔 체인의 천이지연고장의 종류를 판별하는 단계는, 상기 검사대상 스캔 체인에 플러시 테스트(flush test)를 수행하여 상기 천이지연고장의 종류와 고장인 스캔 셀을 포함하는 제2 타겟 스캔 체인을 판별하는 단계; 및상기 천이지연고장의 종류에 따라 상기 학습된 인공지능 모델 중 어느 하나를 선택하는 단계를 포함하는,기계 학습에 기반한 스캔 체인 진단방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7 항에 있어서,상기 검사대상 스캔 체인의 천이지연고장의 종류를 판별하는 단계는,상기 검사대상 스캔 체인에 상기 적어도 하나의 테스트패턴을 입력하고 결과값에 기초하여 상기 고장로그로 구성된 적어도 하나의 고장벡터를 생성하는 단계; 상기 적어도 하나의 고장벡터를 합산하여 통합고장벡터를 생성하는 단계; 및상기 선택된 어느 하나의 인공지능 모델에 상기 통합고장벡터를 입력데이터로 입력하여 상기 제2 타겟 스캔 체인 중 상기 고장인 스캔 셀을 진단하는 단계를 포함하는,기계 학습에 기반한 스캔 체인 진단 방법."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "기계 학습에 기반한 스캔 체인 진단방법을 수행하는 스캔 체인 진단장치에 있어서, 공개특허 10-2024-0113064-4-상기 스캔 체인 진단장치는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는,적어도 하나의 스캔 체인(scan chain)에 적어도 하나의 테스트패턴을 입력하고 결과값에 기초하여 고장로그(fail log)로 구성된 적어도 하나의 고장벡터(failure vector)를 생성하고,상기 적어도 하나의 고장벡터를 합산하여 통합고장벡터(integer failure vector)로 구성된 학습데이터를 생성하고, 상기 적어도 하나의 스캔 체인의 천이지연고장(transition delay fault)의 종류에 따른 인공지능 모델을 기계학습하고, 검사대상 스캔 체인의 상기 천이지연고장의 종류를 판별하고, 상기 적어도 하나의 테스트패턴을 입력하여 획득한 상기 통합고장벡터를 상기 천이지연고장의 종류에 따른 상기 인공지능 모델에 입력하여 상기 검사대상 스캔체인을 구성하는 적어도 하나의 스캔 셀 중 고장인 스캔 셀을 진단하는,기계 학습에 기반한 스캔 체인 진단장치."}
{"patent_id": "10-2023-0005129", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 항 내지 제8 항 중 어느 한 항의 기계 학습에 기반한 스캔 체인 진단방법을 실행시키는 프로그램이 기록된컴퓨터로 판독가능한 기록매체."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명인 기계 학습에 기반한 스캔 체인 진단방법은, 프로세서에 의해 스캔 체인(scan chain)에 테스트패턴 (test pattern)을 입력하고 결과값에 기초하여 고장로그(fail log)로 구성된 고장벡터(failure vector)를 생성 하는 단계, 통합고장벡터(integer failure vector)를 포함하는 학습데이터를 생성하고, 천이지연고장 (transition delay fault)의 종류에 따른 인공지능 모델을 기계 학습하는 단계 및 검사대상 스캔 체인의 천이지 연고장의 종류를 판별하고, 획득한 통합고장벡터를 천이지연고장의 종류에 따른 인공지능 모델에 입력하여 고장 인 스캔 셀을 진단하는 단계를 포함한다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 기계 학습에 기반한 스캔 체인 진단방법 및 진단장치에 관한 것이다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "반도체 공정 기술이 발달함에 따라 회로의 집적도가 올라가면서 스캔구조를 이용한 테스트 방법이 사용되고 있 다. 스캔구조는 회로에서 플립플롭 구조를 변경하여 외부에서 테스트 패턴을 넣어 테스트하는 것을 말한다. 한편, 스캔구조에서 고장이 발생할 경우 회로에 발생한 고장을 제대로 찾을 수 없다는 문제가 있다. 이를 해결 하기 위한 방법으로 소프트웨어 기반 진단, 하드웨어 기반 진단, 특정 테스트 기기를 사용하는 진단 방법 등이 있다. 특히, 소프트웨어 기반 진단은 스캔 구조를 수정하지 않고 시뮬레이션을 이용해 테스트 결과를 출력하고 분석을 한다. 기존 회로와 스캔 구조를 통해 시뮬레이션을 수행하므로 회로의 특성에 큰 영향을 받으며 진단의 정확도 가 영향을 받을 수 밖에 없다. 또한, 기존 테스트 패턴들에서 나온 fail log을 이용하여 스캔 체인 고장을 진단하고 충분한 성능이 나오지 않 을 경우 패턴을 추가로 생성하여 회로에 재인가 하는 것을 통해 진단의 성능을 높이는데 이는 많은 시간을 필요 로 한다. 이에, 상술한 소프트웨어 기반 진단의 문제점을 해결하고 스캔구조의 고장여부를 정확하게 테스트하기 위한 기 술이 필요한 실정이다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 기술적 과제는, 머신러닝(또는, 기계 학습)을 활용하여 천이지연고장(transition delay fault)이 어떤 스캔 체인의 어떤 스캔 셀에 존재하는지 진단하기 위함이다. 또한, 본 발명이 해결하고자 하는 기술적 과제는, 천이지연고장(transition delay fault)의 종류에 따라 스캔 셀의 고장을 진단하기 위한 인공지능 모델을 생성하기 위함이다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 한 실시예에 따른 적어도 하나의 프로세서, 및 적어도 하나의 프로세서에 의해 실행되는 기계 학습기 반의 스캔 체인 진단방법에 있어서, 적어도 하나의 스캔 체인(scan chain)에 적어도 하나의 테스트패턴(test pattern)을 입력하고 결과값에 기초하여 고장로그(fail log)로 구성된 적어도 하나의 고장벡터(failure vecto r)를 생성하는 단계, 적어도 하나의 고장벡터를 합산하여 통합고장벡터(integer failure vector)를 포함하는 학 습데이터를 생성하고, 적어도 하나의 스캔 체인의 천이지연고장(transition delay fault)의 종류에 따른 인공지 능 모델을 기계 학습하는 단계 및 검사대상 스캔 체인의 천이지연고장의 종류를 판별하고, 적어도 하나의 테스 트패턴을 입력하여 획득한 통합고장벡터를 천이지연고장의 종류에 따른 인공지능 모델에 입력하여 검사대상 스 캔 체인을 구성하는 적어도 하나의 스캔 셀 중 고장인 스캔 셀을 진단하는 단계를 포함한다. 또한, 본 발명의 한 실시예에 따른 천이지연고장의 종류는 슬로우 투 라이스(slow-to-rise) 타입의 천이지연고 장, 슬로우 투 폴(slow-to-fall) 타입의 천이지연고장, 패스트 투 라이스(fast-to-rise) 타입의 천이지연고장, 및 패스트 투 폴(fast-to-fall) 타입의 천이지연고장 중 어느 하나이다. 또한, 본 발명의 한 실시예에 따른 적어도 하나의 고장벡터(failure vector)를 생성하는 단계는, 적어도 하나의 스캔 체인을 구성하는 적어도 하나의 스캔 셀 전부에 고장이 없는 경우를 가정하여 적어도 하나의 제1 테스트패 턴을 입력하고 제1 결과값을 획득하는 단계, 적어도 하나의 스캔 셀에 천이지연고장 중 어느 하나의 타입의 천 이지연고장이 있는 경우를 가정하여 천이지연고장에 대응하는 적어도 하나의 제2 테스트패턴을 입력하고 제2 결 과값을 획득하는 단계, 제1 결과값과 제2 결과값을 비교하여 적어도 하나의 스캔 셀 각각에 대한 고장로그를 획 득하는 단계 및 스캔 셀의 순서에 따라 고장로그를 성분으로 가지는 적어도 하나의 고장벡터를 생성하는 단계를 포함한다. 또한, 본 발명의 한 실시예에 따른 적어도 하나의 스캔 셀 각각에 대한 고장로그를 생성하는 단계는, 제1 결과 값과 제2 결과값이 동일한 스캔 셀에는 0을 고장로그로 부여하는 단계 및 제1 결과값과 제2 결과값이 동일하지 않은 스캔 셀에는 1을 고장로그로 부여하는 단계를 포함한다. 또한, 본 발명의 한 실시예에 따른 학습데이터를 생성하는 단계는, 적어도 하나의 스캔 체인 중 천이지연고장 중 어느 하나의 타입의 천이지연고장이 있는 어느 하나의 제1 타겟 스캔 체인을 구성하는 적어도 하나의 스캔 셀을 미리 설정된 갯수에 따라 그룹핑하는 단계, 제1 타겟 스캔 체인을 제외한 나머지 스캔 체인을 구성하는 적 어도 하나의 스캔 셀 중 그룹핑된 적어도 하나의 스캔 셀과 팬 아웃(Fan-out) 관계로 연결된 적어도 하나의 스 캔 셀의 통합고장벡터의 성분을 합산하여 고장발생빈도수를 획득하는 단계 및 그룹핑된 적어도 하나의 스캔 셀 의 통합고장벡터의 성분과 고장발생빈도수를 성분으로 가지는 학습데이터를 생성하는 단계를 포함한다. 또한, 본 발명의 한 실시예에 따른 인공지능 모델을 기계 학습하는 단계는, 학습데이터를 이용하여 인공지능 모 델에 대한 지도학습(supervised learning)에 기반한 기계 학습을 수행한다. 또한, 본 발명의 한 실시예에 따른 검사대상 스캔 체인의 천이지연고장의 종류를 판별하는 단계는, 검사대상 스 캔 체인에 플러시 테스트(flush test)를 수행하여 천이지연고장의 종류와 고장인 스캔 셀을 포함하는 제2 타겟 스캔 체인을 판별하는 단계 및 천이지연고장의 종류에 따라 학습된 인공지능 모델 중 어느 하나를 선택하는 단 계를 포함한다. 또한, 본 발명의 한 실시예에 따른 검사대상 스캔 체인의 천이지연고장의 종류를 판별하는 단계는, 검사대상 스 캔 체인에 적어도 하나의 테스트패턴을 입력하고 결과값에 기초하여 고장로그로 구성된 적어도 하나의 고장벡터 를 생성하는 단계, 적어도 하나의 고장벡터를 합산하여 통합고장벡터를 생성하는 단계 및 선택된 어느 하나의 인공지능 모델에 통합고장벡터를 입력데이터로 입력하여 제2 타겟 스캔 체인 중 고장인 스캔 셀을 진단하는 단 계를 포함한다. 또한, 본 발명의 한 실시예에 따른 기계 학습에 기반한 스캔 체인 진단방법을 수행하는 스캔 체인 진단장치에 있어서, 스캔 체인 진단장치는 적어도 하나의 프로세서를 포함하고, 적어도 하나의 프로세서는, 적어도 하나의 스캔 체인(scan chain)에 적어도 하나의 테스트패턴을 입력하고 결과값에 기초하여 고장로그(fail log)로 구성 된 적어도 하나의 고장벡터(failure vector)를 생성하고, 적어도 하나의 고장벡터를 합산하여 통합고장벡터 (integer failure vector)로 구성된 학습데이터를 생성하고, 적어도 하나의 스캔 체인의 천이지연고장 (transition delay fault)의 종류에 따른 인공지능 모델을 기계 학습하고, 검사대상 스캔 체인의 천이지연고장 의 종류를 판별하고, 적어도 하나의 테스트패턴을 입력하여 획득한 통합고장벡터를 천이지연고장의 종류에 따른 인공지능 모델에 입력하여 검사대상 스캔 체인을 구성하는 적어도 하나의 스캔 셀 중 고장인 스캔 셀을 진단한 다.또한, 본 발명의 한 실시예에 따른 기계 학습에 기반한 스캔 체인 진단방법을 실행시키는 프로그램이 기록된 컴 퓨터로 판독가능한 기록매체를 포함한다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 기계 학습에 기반한 스캔 체인 진단방법 및 장치는, 머신러닝(또는, 기계 학습)을 활용하여 천 이지연고장(transition delay fault)이 어떤 스캔 체인의 어떤 스캔 셀에 존재하는지 진단할 수 있다. 또한, 본 발명에 따른 기계 학습에 기반한 스캔 체인 진단방법 및 장치는 천이지연고장(transition delay fault)의 종류에 따라 스캔 셀의 고장을 진단하기 위한 인공지능 모델을 생성할 수 있다. 또한, 본 발명에 따른 기계 학습에 기반한 스캔 체인 진단방법 및 장치는 상기 인공지능 모델을 이용하여 다양 한 고장 종류에 대응할 수 있을 뿐만 아니라, 하나의 테스트 패턴에 대해 비연속적으로 고장이 발생하는 천이지 연고장(transition delay fault)의 특성을 살리고, 기존의 회로와 스캔 구조를 유지하면서 기존보다 정확도를 높일 수 있다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부한 도면을 참고로 하여 본 발명의 여러 실시 예들에 대하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 본 발명은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시 예들에 한정되지 않는다. 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 동일 또는 유사한 구성요소에 대해서는 동일한 참조 부호를 붙이도록 한다. 따라서 앞서 설명한 참조 부호는 다른 도면에 서도 사용할 수 있다. 또한, 도면에서 나타난 각 구성의 크기 및 두께는 설명의 편의를 위해 임의로 나타내었으므로, 본 발명이 반드 시 도시된 바에 한정되지 않는다. 도면에서 여러 층 및 영역을 명확하게 표현하기 위하여 두께를 과장되게 나 타낼 수 있다. 또한, 설명에서 \"동일하다\"라고 표현한 것은, \"실질적으로 동일하다\"는 의미일 수 있다. 즉, 통상의 지식을 가 진 자가 동일하다고 납득할 수 있을 정도의 동일함일 수 있다. 그 외의 표현들도 \"실질적으로\"가 생략된 표현들 일 수 있다. 또한, 설명에서 어떤 부분이 어떤 구성요소를 '포함'한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 본 명세서에서 사용되는 '~부'는 적어도 하나의 기능이나 동작을 처리하는 단위로서, 예를 들어 소프트웨어, FPGA 또는 하드웨어 구성요 소를 의미할 수 있다. '~부'에서 제공하는 기능은 복수의 구성요소에 의해 분리되어 수행되거나, 다른 추가적인 구성요소와 통합될 수도 있다. 본 명세서의 '~부'는 반드시 소프트웨어 또는 하드웨어에 한정되지 않으며, 어드 레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고, 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 이하에서는 도면을 참조하여 본 발명의 실시예에 대해서 구체적으로 설명하기로 한다. 도 1은 본 발명의 한 실시예에 따른 고장벡터(failure vector)를 획득하는 과정에 관한 도면이다. 도 1은 5개의 스캔 셀(scan cell)로 구성된 스캔 체인(scan chain)에 대해 고장벡터(failure vector)를 획득하 는 과정에 관한 일 예이다. 본 발명인 기계 학습에 기반한 스캔 체인 진단장치는 적어도 하나의 프로세서를 포함할 수 있으며, 적어도 하나 의 프로세서에 의해 기계 학습에 기반한 스캔 체인 진단방법이 실행될 수 있다. 도 1을 참고하면 스캔 셀을 사각형으로 표현되며, 사각형의 연결로 스캔 체인이 표현된다. 각 스캔 셀 내에 기 입된 숫자는 각 스캔 셀의 번호를 의미하는 것으로 가정한다. 또한, 천이지연고장(transition delay fault)의 종류는 슬로우 투 라이스(slow-to-rise) 타입의 천이지연고장, 슬로우 투 폴(slow-to-fall) 타입의 천이지연고장, 패스트 투 라이스(fast-to-rise) 타입의 천이지연고장, 및 패스트 투 폴(fast-to-fall) 타입의 천이지연고장 중 어느 하나일 수 있으며, 도 1의 2번 스캔 셀에 슬로우 투 라이스(slow-to-rise) 타입의 천이지연고장이 존재하는 것으로 가정하기로 한다. 적어도 하나의 프로세서는 적어도 하나의 스캔 체인에 적어도 하나의 테스트패턴(test pattern)을 입력하고 결 과값에 기초하여 고장로그(fail log)로 구성된 적어도 하나의 고장벡터(failure vector)를 생성할 수 있다. 예를 들어, 적어도 하나의 프로세서는 도 1에 도시된 스캔 체인을 구성하는 5개의 스캔 셀 전부에 고장이 없는 경우를 가정하여 적어도 하나의 테스트패턴(이하, 제1 테스트패턴이라 명명함, 예를 들어, 도 1의 기존 테스트 패턴인 (1, 0, 1, 0, 0))을 scan in으로 입력하고 scan out을 통해 결과값(이하, 제1 결과값이라 명명함, 예를 들어, 도 1의 고장 없을 때 최종 결과값인 (0, 0, 1, 1, 0))을 획득할 수 있다. 또한, 적어도 하나의 프로세서는 도 1에 도시된 2번 스캔 셀에 슬로우 투 라이스(slow-to-rise, STR) 타입의 천 이지연고장이 존재하는 것으로 가정하여 적어도 하나의 테스트패턴(이하, 제2 테스트패턴이라 명명함, 예를 들 어, 도 1의 고장을 가정한 테스트 패턴인 (1, 0, 0, 0, 0))을 scan in으로 입력하고 scan out을 통해 결과값 (이하, 제2 결과값이라 명명함, 예를 들어, 도 2의 고장이 있을 때 최종 결과값인 (0, 0, 0, 0, 0))을 획득할 수 있다. 적어도 하나의 프로세서는 제1 결과값과 제2 결과값을 비교하여 1번 내지 5번 스캔 셀 각각에 대한 고장로그 (fail log)를 획득하고 이를 이용하여 고장벡터(failure vector)를 생성할 수 있다. 구체적으로, 적어도 하나의 프로세서는 제1 결과값과 제2 결과값이 동일한 스캔 셀에는 '0'을 고장로그로 부여 할 수 있다. 적어도 하나의 프로세서는 제1 결과값과 제2 결과값이 동일하지 않은 스캔 셀에는 '1'을 고장로그 로 부여할 수 있다. 도 1을 참고하면, 4번 스캔 셀의 제1 결과값은 '0'이고 제2 결과값은 '0'이다. 따라서 적어도 하나의 프로세서 는 4번 스캔 셀에 '0'을 고장로그를 부여할 수 있다. 3번 스캔 셀의 제1 결과값은 '0'이고 제2 결과값은 '0'이 다. 따라서 적어도 하나의 프로세서는 3번 스캔 셀에 '0'을 고장로그를 부여할 수 있다. 2번 스캔 셀의 제1 결과값은 '1'이고 제2 결과값은 '1'이다. 따라서 적어도 하나의 프로세서는 1번 스캔 셀에 1 을 고장로그를 부여할 수 있다. 1번 스캔 셀의 제1 결과값은 '1'이고 제2 결과값은 '0'이다. 따라서 적어도 하 나의 프로세서는 1번 스캔 셀에 '1'을 고장로그를 부여할 수 있다. 0번 스캔 셀의 제1 결과값은 '0'이고 제2 결과값은 '0'이다. 따라서 적어도 하나의 프로세서는 0번 스캔 셀에 '0'을 고장로그를 부여할 수 있다. 적어도 하나의 프로세서는 상기 고장로그를 성분으로 하는 (0, 0, 1, 1, 0)을 도 1의 스캔 체인에 대한 고장벡 터(failure vector)로 설정할 수 있다. 적어도 하나의 프로세서는 상술한 방법과 동일한 방법으로 천이지연고장(transition delay fault)의 종류에 대 해 다양한 적어도 하나의 제1 및 제2 테스트패턴을 인가할 수 있으며 적어도 하나의 고장벡터를 생성할 수 있다. 적어도 하나의 프로세서는 상기 적어도 하나의 고장벡터를 합산하여 도 2에 도시된 통합고장벡터(integer failure vector)를 생성할 수 있다. 도 2는 본 발명의 한 실시예에 따른 스캔 셀을 그룹핑하고 고장발생빈도수를 획득하는 과정에 관한 도면이다. 도 2는 4개의 스캔 체인 각각이 9개의 스캔 셀로 구성된 것으로 가정한다. 도 2에 각각의 스캔 셀에 기입된 숫자는 도 1에서 상술한 방법으로 획득한 통합고장벡터(integer failure vector)의 성분을 나타낸다. 또한, 화살표는 스캔 셀과 다른 스캔 셀이 팬 아웃(Fan-out) 관계로 연결된 것을 나타낸다. 적어도 하나의 프로세서는 적어도 하나의 스캔 체인 중 천이지연고장 중 어느 하나의 타입의 천이지연고장이 있 는 어느 하나의 스캔 체인(이하, 제1 타겟 스캔 체인이라 명명함)을 구성하는 적어도 하나의 스캔 셀을 미리 설 정된 개수에 따라 그룹핑할 수 있다. 이때, 상기 개수는 다양하게 설정될 수 있음은 물론이다. 도 2를 참고하면, 적어도 하나의 프로세서는 2번째 줄에 있는 스캔 체인을 천이지연고장이 있는 제1 타겟 스캔 체인으로 설정하고, 제1 타겟 스캔 체인을 구성하는 스캔 셀을 3개에 따라 그룹핑할 수 있다. 이는, 이를 회색 으로 도색하여 표시하였다. 적어도 하나의 프로세서는 제1 타겟 스캔 체인을 제외한 나머지 스캔 체인을 구성하는 적어도 하나의 스캔 셀 중 그룹핑된 적어도 하나의 스캔 셀과 팬 아웃 관계로 연결된 적어도 하나의 스캔 셀의 통합고장벡터의 성분을 합산하여 고장발생빈도수를 획득할 수 있다. 도 2를 참고하면, 제1 타겟 스캔 체인의 왼쪽 첫번째 스캔 셀은 1번째 줄의 스캔 체인의 1번째 스캔 셀, 3번째 줄의 스캔 체인의 2번째 스캔 셀, 및 4번째 스캔 셀과 팬 아웃 관계로 연결된다. 적어도 하나의 프로세서는 1번째 줄의 스캔 체인의 1번째 스캔 셀의 통합고장벡터 성분인 '1'과 3번째 줄의 스 캔 체인의 2번째 스캔 셀의 통합고장벡터 성분인 '0'과 4번째 스캔 셀의 통합고장벡터성분인 '1'을 합산한 2를 고장발생빈도수로 설정할 수 있다. 제1 타겟 스캔 체인의 왼쪽 2번째 스캔 셀은 1번째 줄의 스캔 체인의 1번째 스캔 셀과 팬 아웃 관계로 연결된다. 적어도 하나의 프로세서는 1번째 줄의 스캔 체인의 1번째 스캔 셀의 통합고장벡터 성분인 '1'을 고장발생빈도수 로 설정할 수 있다. 제1 타겟 스캔 체인의 왼쪽 3번째 스캔 셀은 1번째 줄의 스캔 체인의 3번째 스캔 셀, 제1 타겟 스캔 체인의 4번 째 스캔 셀, 4번째 줄의 스캔 체인의 4번째 스캔 셀과 팬 아웃 관계로 연결된다. 적어도 하나의 프로세서는 1번째 줄의 스캔 체인의 3번째 스캔 셀의 통합고장벡터 성분인 '0'과 제1 타겟 스캔 체인의 4번째 스캔 셀의 통합고장벡터 성분인 '2'와 4번째 줄의 스캔 체인의 4번째 스캔 셀의 통합고장벡터성분 인 '1'을 합산한 3을 고장발생빈도수로 설정할 수 있다. 적어도 하나의 프로세서는 상기 2, 1, 3을 모두 합산하여 고장발생빈도수인 6을 획득할 수 있다. 도 3은 본 발명의 한 실시예에 따른 학습데이터를 생성하는 과정에 관한 도면이다. 도 3은 도 2의 4개의 스캔 체인 중 제1 타겟 스캔 체인을 구성하는 9개의 스캔 셀 전부에 대해 3개씩 그룹핑하 여 고장발생빈도수를 획득하는 과정을 도시한다. 도 2에서 상술한 방법과 동일한 방법으로 제1 타겟 스캔 체인을 구성하는 9개의 스캔 셀 전부에 대해 3개씩 그 룹핑하여 고장발생빈도수를 산출하면, 제1 타겟 스캔 체인의 1번째 스캔 셀, 2번째 스캔 셀, 및 3번째 스캔 셀 전부의 고장발생빈도수는 '6'이다. 또한, 제1 타겟 스캔 체인의 그룹핑된 4번째 스캔 셀, 5번째 스캔 셀, 및 6번째 스캔 셀 전부의 고장발생빈도수 는 '3'이다. 제1 타겟 스캔 체인의 그룹핑된 7번째 스캔 셀, 8번째 스캔 셀, 및 9번째 스캔 셀의 고장발생빈도 수는 '5'이다. 적어도 하나의 프로세서는 그룹핑된 적어도 하나의 스캔 셀의 통합고장벡터의 성분과 고장발생빈도수를 성분으 로 하여 인공지능 모델을 학습하기 위한 학습데이터를 생성할 수 있다. 구체적으로 도 3을 참고하면, 적어도 하나의 프로세서는 제1 타겟 스캔 체인의 9개의 스캔 셀의 통합고장벡터의 성분인 (0, 1, 0, 2, 2, 1, 0, 2, 2)와 고장발생빈도수인 (6, 3, 5)를 성분으로 가지는 (0, 1, 0, 2, 2 , 1, 0, 2, 2, 6, 3, 5)를 학습데이터로 설정할 수 있다. 적어도 하나의 프로세서는 학습데이터를 이용하여 인공지능 모델에 대한 지도학습(supervised learning)을 수행 할 수 있다. 구체적으로, 적어도 하나의 프로세서는 천이지연고장(transition delay fault)의 종류에 따라 다양한 스캔 체인 및 스캔 셀을 디자인하고 도 1 내지 도 3에서 상술한 방법에 따라 학습데이터를 생성할 수 있다. 또한, 적어도 하나의 프로세서는 상기 학습데이터를 입력값으로 하고 천이지연고장(transition delay fault)이 있는 스캔 체인 및 스캔 셀에 대한 데이터를 결과값으로 하여 지도학습(supervised learning)에 기반한 기계 학 습을 반복하여 수행할 수 있다. 도 4는 본 발명의 한 실시예에 따른 팬 아웃(Fan-out) 관계를 설명하기 위한 도면이다. 어떤 스캔 셀의 아웃풋에 이어진 다른 스캔 셀은 서로 팬 아웃(Fan-out) 관계에 있다. 구체적으로, 도 4를 참고하면 스캔 체인 2(chain 2)의 4번 스캔 셀의 아웃풋을 따라가면 스캔 체인 1(chain 1) 의 3번 스캔 셀 및 2번 스캔 셀과 연결된 것을 확인할 수 있다. 이때, 스캔 체인 1(chain 1)의 2번 스캔 셀 및 3번 스캔 셀은 스캔 체인 2(chain 2)의 4번 스캔 셀과 서로 팬 아웃(Fan-out) 관계에 있다. 도 5는 본 발명의 한 실시예에 따른 천이지연고장(transition delay fault)의 종류에 따른 인공지능 모델을 기 계 학습하고 고장인 스캔 셀을 진단하는 과정에 관한 도면이다. 도 5(a)를 참고하면, 도 1 내지 도 3에서 상술한 바와 같이 적어도 하나의 프로세서는 천이지연고장(transition delay fault)의 종류(슬로우 투 라이스(slow-to-rise) 타입의 천이지연고장, 슬로우 투 폴(slow-to-fall) 타입 의 천이지연고장, 패스트 투 라이스(fast-to-rise) 타입의 천이지연고장, 및 패스트 투 폴(fast-to-fall) 타입 의 천이지연고장)에 따라 학습데이터를 생성하고 서로 다른 인공지능 모델을 생성할 수 있다. 도 5(b)를 참고하면, 도 5(a)에서 생성된 인공지능 모델을 이용하여 검사대상 스캔 체인을 구성하는 스캔 셀 중 고장인 스캔 셀을 진단할 수 있다. 구체적으로, 적어도 하나의 프로세서는 검사대상 스캔 체인에 플러시 테스트(flush test)를 수행하여 천이지연 고장의 종류와 고장인 스캔 셀을 포함하는 타겟 스캔 체인(이하, 제2 타겟 스캔 체인이라 명명함)을 판별할 수 있다. 적어도 하나의 프로세서는 판별된 천이지연고장의 종류에 따라 도 5(a)에서 생성된 인공지능 모델 중 어느 하나 를 선택할 수 있다. 적어도 하나의 프로세서는 도 1 내지 도 3에서 상술한 방법과 동일한 방식으로 검사대상 스캔 체인에 적어도 하 나의 테스트패턴을 입력하고 결과값에 기초하여 고장로그로 구성된 적어도 하나의 고장벡터를 생성할 수 있다. 적어도 하나의 프로세서는 적어도 하나의 고장벡터를 합산하여 통합고장벡터를 생성할 수 있다. 적어도 하나의 프로세서는 상기 선택된 인공지능 모델 중 어느 하나에 통합고장벡터의 성분을 입력데이터(또는, 추론데이터)로 입력하여 결과(또는, 추론결과데이터)를 출력할 수 있으며, 이를 이용하여 제2 타겟 스캔 체인 중 고장인 스캔 셀을 진단할 수 있다. 상술한 바와 같이 본 발명인 기계 학습에 기반한 스캔 체인 진단 방법 및 그 장치는 스캔 체인의 천이지연고장 (transition delay fault)의 종류에 따라 스캔 셀의 고장을 진단할 수 있는 서로 다른 인공지능 모델을 생성할 수 있다. 이를 통해, 검사대상 스캔 체인의 천이지연고장(transition delay fault)의 종류에 적합한 인공지능 모델을 적 용할 수 있으며 스캔 셀의 고장진단의 정확도를 향상시킬 수 있다. 또한, 스캔 체인의 적어도 하나의 스캔 셀에는 일반적으로 천이지연고장(transition delay fault)이 비연속적으 로 발생될 수 있다. 본 발명은 적어도 하나의 스캔 셀을 미리 설정된 개수에 따라 그룹핑하여 학습데이터를 생 성하므로, 상기 비연속적으로 발생되는 특성을 반영하여 정확도를 향상시킬 수 있을 뿐만 아니라 시간을 감소시 킬 수 있다. 도 6은 본 발명의 한 실시예에 따른 기계 학습에 기반한 스캔 체인 진단방법을 이용하여 인공지능 모델을 학습 하고 고장인 스캔 셀을 진단하는 과정에 관한 흐름도이다. 단계(S1)에서 적어도 하나의 프로세서는 미리 저장된 회로 디자인 및 넷리스트(netlist) 프로그램을 합성하여 gate-level netlist를 생성할 수 있다. 적어도 하나의 프로세서는 APTG(Automatic test pattern generation)을 이용하여 적어도 하나의 테스트패턴(Test pattern)을 생성할 수 있다. 단계(S2)에서 스캔 체인에 적어도 하나의 테스트패턴을 입력하고 통합고장벡터와 스캔 셀을 그룹핑하기 위한 개 수를 미리 설정할 수 있다. 구체적으로, 적어도 하나의 프로세서는 스캔 체인을 구성하는 스캔 셀 전부에 고장이 없는 경우를 가정하여 적 어도 하나의 제1 테스트패턴을 입력하고 제1 결과값을 출력할 수 있다. 적어도 하나의 프로세서는 스캔 체인을 구성하는 스캔 셀에 천이지연고장의 종류 중 어느 하나의 고장이 있는 것을 가정하여 적어도 하나의 제2 테스트패턴을 입력하고 제2 결과값을 출력할 수 있다. 적어도 하나의 프로세서는 제1 결과값과 제2 결과값을 비교하여 스캔 셀 각각에 대한 고장로그(fail log)를 획 득하고 이를 이용하여 고장벡터(failure vector)를 생성할 수 있다. 적어도 하나의 프로세서는 상기 적어도 하나의 고장벡터를 합산하여 통합고장벡터(integer failure vector)를 생성할 수 있다. 적어도 하나의 프로세서는 적어도 하나의 스캔 체인 중 천이지연고장 중 어느 하나의 타입의 천이지연고장이 있 는 제1 타겟 스캔 체인을 구성하는 적어도 하나의 스캔 셀을 미리 설정된 개수에 따라 그룹핑할 수 있다. 단계(S3)에서 통합고장벡터(integer failure vector)를 이용하여 고장발생빈도수를 획득할 수 있다. 구체적으로, 적어도 하나의 프로세서는 제1 타겟 스캔 체인을 제외한 나머지 스캔 체인을 구성하는 적어도 하나 의 스캔 셀 중 그룹핑된 적어도 하나의 스캔 셀과 팬 아웃 관계로 연결된 적어도 하나의 스캔 셀의 통합고장벡 터의 성분을 합산하여 고장발생빈도수를 획득할 수 있다. 단계(S4)에서 학습데이터를 생성할 수 있다. 구체적으로, 적어도 하나의 프로세서는 그룹핑된 적어도 하나의 스캔 셀의 통합고장벡터의 성분과 고장발생빈도 수를 성분으로 하여 인공지능 모델을 학습하기 위한 학습데이터를 생성할 수 있다. 단계(S5)에서 지도학습에 기반하여 인공지능 모델을 학습할 수 있다. 구체적으로, 적어도 하나의 프로세서는 상기 학습데이터와 천이지연고장이 발생된 스캔 체인 및 스캔 셀에 대한 데이터를 지도학습에 기반한 기계 학습을 수행하고 인공공지능모델을 생성할 수 있다. 단계(S6)에서 천이지연고장(transition delay fault)의 종류에 따라 상기 단계(S1)에서 단계(S5)의 과정을 반복 할 수 있다. 구체적으로, 적어도 하나의 프로세서는 천이지연고장(transition delay fault)의 종류(슬로우 투 라이스(slow- to-rise) 타입의 천이지연고장, 슬로우 투 폴(slow-to-fall) 타입의 천이지연고장, 패스트 투 라이스(fast-to- rise) 타입의 천이지연고장, 및 패스트 투 폴(fast-to-fall) 타입의 천이지연고장)에 따라 상술한 단계(S1) 내 지 단계(S5)의 과정을 반복할 수 있으며, 이를 통해 천이지연고장(transition delay fault)의 종류에 따라 고장 인 스캔 셀을 진단하기 위한 인공지능 모델을 생성할 수 있다. 단계(S7)에서 상기 천이지연고장(transition delay fault)의 종류에 따라 생성된 인공지능 모델을 본 발명인 기 계 학습에 기반한 스캔 체인 진단장치의 내부에 마련된 데이터베이스 등에 저장할 수 있다. 단계(S8)에서 상기 천이지연고장(transition delay fault)의 종류에 따라 데이터베이스 등에 저장된 인공지능 모델을 초기 테스트를 수행할 수 있다. 단계(S9)에서 검사대상 스캔 체인의 천이지연고장의 종류와 고장인 스캔 셀을 포함하는 제2 타겟 스캔 체인을 판별할 수 있다. 구체적으로, 적어도 하나의 프로세서는 검사대상 스캔 체인에 플러시 테스트(flush test)를 수행하여 천이지연 고장의 종류와 고장인 스캔 셀을 포함하는 제2 타겟 스캔 체인을 판별할 수 있다. 단계(S10)에서 상술한 단계(S2)와 동일한 방식으로 적어도 하나의 프로세서는 검사대상 스캔 체인을 구성하는 적어도 하나의 스캔 셀의 고장로그(fail log)를 획득하고 이를 이용하여 고장벡터(failure vector)를 생성할 수 있다. 또한, 적어도 하나의 프로세서는 상기 적어도 하나의 고장벡터를 합산하여 통합고장벡터(integer failure vector)를 생성할 수 있다. 또한, 적어도 하나의 프로세서는 상술한 단계(S3)와 마찬가지로 제2 타겟 스캔 체인을 제외한 나머지 스캔 체인 을 구성하는 적어도 하나의 스캔 셀 중 그룹핑된 적어도 하나의 스캔 셀과 팬 아웃 관계로 연결된 적어도 하나 의 스캔 셀의 통합고장벡터의 성분을 합산하여 고장발생빈도수를 획득할 수 있다, 단계(S11)에서 적어도 하나의 프로세서는 그룹핑된 적어도 하나의 스캔 셀의 통합고장벡터의 성분과 고장발생빈 도수를 성분으로 하여 인공지능 모델을 입력하기 위한 입력데이터(또는, 추론데이터)를 생성할 수 있다. 단계(S12)에서 적어도 하나의 프로세서는 인공지능 모델의 출력데이터(또는, 추론결과데이터)를 이용하여 검사 대상 스캔 체인을 구성하는 적어도 하나의 스캔 셀 중 고장인 스캔 셀을 진단할 수 있다. 단계(S13)에서 적어도 하나의 프로세서는 단계(S12)에서 진단된 스캔 셀에 대한 데이터를 출력하도록 제어할 수 있다. 지금까지 참조한 도면과 기재된 발명의 상세한 설명은 단지 본 발명의 예시적인 것으로서, 이는 단지 본 발명을 설명하기 위한 목적에서 사용된 것이지 의미 한정이나 특허청구범위에 기재된 본 발명의 범위를 제한하기 위하 여 사용된 것은 아니다. 그러므로 본 기술 분야의 통상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시 예가 가능하다는 점을 이해할 것이다. 따라서, 본 발명의 진정한 기술적 보호 범위는 첨부된 특허청구 범위의 기술적 사상에 의해 정해져야 할 것이다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(Arithmetic Logic Unit), 디지털 신호 프로세서(Digital Signal Processor), 마 이크로컴퓨터, FPGA(Field Programmable Gate Array), PLU(Programmable Logic Unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제 및 상기 운영 체제 상에서 수행되는 하나 이상의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있 다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만, 해당 기술 분야에서 통 상의 지식을 가진 자는 처리 장치가 복수 개의 처리 요소(Processing Element) 및/또는 복수 유형의 처리요소를 포함할 수 있음을 이해할 것이다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(Parallel Processor) 와 같은, 다른 처리 구성(Processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(Computer Program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하 여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody) 될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분 산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체 에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독 으로 또는 조합하여 포함할 수 있다. 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CDROM, DVD와 같은 광기록 매체(optical media) 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로 그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러 에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상기된 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 이상의 소프트 웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다."}
{"patent_id": "10-2023-0005129", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 청구범위와 균등한 것들도 후술하는 청구범위의 범위에 속 한다."}
{"patent_id": "10-2023-0005129", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 한 실시예에 따른 고장벡터(failure vector)를 획득하는 과정에 관한 도면이다. 도 2는 본 발명의 한 실시예에 따른 스캔 셀을 그룹핑하고 고장발생빈도수를 획득하는 과정에 관한 도면이다. 도 3은 본 발명의 한 실시예에 따른 학습데이터를 생성하는 과정에 관한 도면이다. 도 4는 본 발명의 한 실시예에 따른 팬 아웃(Fan-out) 관계를 설명하기 위한 도면이다. 도 5는 본 발명의 한 실시예에 따른 천이지연고장(transition delay fault)의 종류에 따른 인공지능 모델을 기 계 학습하고 고장인 스캔 셀을 진단하는 과정에 관한 도면이다. 도 6은 본 발명의 한 실시예에 따른 기계 학습에 기반한 스캔 체인 진단방법을 이용하여 인공지능 모델을 학습 하고 고장인 스캔 셀을 진단하는 과정에 관한 흐름도이다."}
