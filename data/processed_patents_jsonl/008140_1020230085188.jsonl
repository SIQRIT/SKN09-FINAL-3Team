{"patent_id": "10-2023-0085188", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0003147", "출원번호": "10-2023-0085188", "발명의 명칭": "추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 방법", "출원인": "디어젠 주식회사", "발명자": "이대석"}}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "단백질 간 상호작용과 관련된 정보를 예측하기 위해 컴퓨팅 장치에서 수행되는 방법으로서,제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하는 단계;추가 입력 정보를 수신하는 단계; 및사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는단계;를 포함하고,상기 추가 입력 정보는,상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기(residue)에 대한, 상기 상호작용과 관련된 정보를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보는,상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스(interface)에 대한 정보;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서,상기 추가 입력 정보는,상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 사용자의 선택 입력 정보;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 추가 입력 정보는,상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스에 포함됨을나타내는 제1 타입(type) 정보;공개특허 10-2025-0003147-3-상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스에 포함되지않음을 나타내는 제2 타입 정보;상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스와 가까운 위치에 있음을 나타내는 제3 타입 정보; 또는상기 제1 단백질의 적어도 하나의 아미노산 잔기 및 상기 제2 단백질의 적어도 하나의 아미노산 잔기로 구성된쌍(pair)이 단백질 간 상호작용 인터페이스에 포함됨을 나타내는 제4 타입 정보; 중 적어도 하나를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 추가 입력 정보가 제1 타입 정보, 제2 타입 정보 또는 제3 타입 정보인 경우, 상기 예측 정보를 생성하는단계는:상기 제1 단백질에 대한 변형된 단일 표현(single representation)인 제1 은닉 표현을 생성하는 단계;상기 제2 단백질에 대한 변형된 단일 표현인 제2 은닉 표현을 생성하는 단계;상기 제1 은닉 표현 및 제2 은닉 표현을 기초로 상기 제1 단백질 및 제2 단백질의 쌍 표현(pairrepresentation)을 생성하는 단계; 및상기 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계; 를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 제1 은닉 표현을 생성하는 단계는,상기 제1 단백질의 구조 정보를 기초로 상기 제1 단백질의 단일 표현을 생성하는 단계; 및상기 추가 입력 정보 중 제1 단백질에 포함된 아미노산 잔기와 관련된 정보 및 상기 제1 단백질의 단일 표현을기초로, 제1 은닉 표현을 생성하는 단계;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 제2 은닉 표현을 생성하는 단계는,상기 제2 단백질의 구조 정보를 기초로 상기 제2 단백질의 단일 표현을 생성하는 단계; 및상기 추가 입력 정보 중 제2 단백질에 포함된 아미노산 잔기와 관련된 정보 및 상기 제2 단백질의 단일 표현을기초로, 제2 은닉 표현을 생성하는 단계;공개특허 10-2025-0003147-4-를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 4 항에 있어서,상기 추가 입력 정보가 제4 타입 정보인 경우, 상기 예측 정보를 생성하는 단계는:상기 제1 단백질 및 제2 단백질의 변형된 쌍 표현을 생성하는 단계; 및상기 제1 단백질 및 제2 단백질의 변형된 쌍 표현을 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 변형된 쌍 표현을 생성하는 단계는:상기 제1 단백질의 구조 정보를 기초로 상기 제1 단백질의 단일 표현을 생성하는 단계;상기 제2 단백질의 구조 정보를 기초로 상기 제2 단백질의 단일 표현을 생성하는 단계;상기 제1 단백질 및 제2 단백질의 쌍 표현을 생성하는 단계; 및상기 추가 입력 정보 및 상기 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 상기 변형된 쌍 표현을 생성하는단계;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 인공 신경망 모델은,단백질 간 상호작용과 관련된 입력 정보를 시뮬레이션하는 학습 데이터 세트를 생성하는 단계; 및상기 학습 데이터 세트를 기초로 상기 인공 신경망 모델을 학습시키는 단계;를 기초로 학습된 인공 신경망 모델인,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계는:상기 추가 입력 정보가 상기 예측 정보에 더 반영되도록, 상기 인공 신경망 모델의 추가적인 연산을 수행하는단계;공개특허 10-2025-0003147-5-를 더 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 추가 입력 정보가 상기 예측 정보에 더 반영되도록, 상기 인공 신경망 모델의 추가적인 연산을 수행하는단계는:사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 초기 예측 정보를 생성하는 단계;추가적인 목적 함수(object function)을 활용하여, 상기 초기 예측 정보를 기초로 변형된 입력 정보를 결정하는단계; 및상기 변형된 입력 정보를 기초로 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 최종 예측 정보를생성하는 단계;를 포함하는,방법."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "컴퓨팅 장치로 하여금 단백질 간 상호작용과 관련된 정보를 예측하기 위한 동작들을 포함하는 컴퓨터 판독가능저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 동작들은:제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하는 동작;추가 입력 정보를 수신하는 동작; 및사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 정보를 예측하는동작;을 포함하고,상기 추가 입력 정보는,상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 정보를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0085188", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "컴퓨팅 장치로서,하나 이상의 프로세서; 및메모리;를 포함하고,상기 프로세서는,제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하고,공개특허 10-2025-0003147-6-추가 입력 정보를 수신하고, 그리고사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하도록 구성되고,상기 추가 입력 정보는,상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 정보를 포함하는,컴퓨팅 장치."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라 단백질 간 상호작용과 관련된 정보를 예측하기 위한 방법이 개시된다. 구체적으로, 본 개시에 따르면, 컴퓨팅 장치가, 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하고, 추가 입력 정보를 수신하고, 사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 이 때 추가 입력 정보는, 상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아 미노산 잔기(residue)에 대한, 상기 상호작용과 관련된 정보를 포함할 수 있다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 방법에 관한 것으로, 구체적 으로 인공 신경망 모델을 활용하여 사용자의 추가적인 입력을 반영하여 단백질 간 상호작용 인터페이스 (interface)를 예측하는 방법에 관한 것이다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "단백질 간 상호작용 인터페이스(Protein-Protein Interaction Interface)는 단백질 두 개가 결합하는 경우 결 합 시 서로 가까이 위치하는 아미노산 잔기들에 대한 정보를 의미한다. 생물학적 기전을 연구하기 위해 단백질 간 상호작용 인터페이스가 분석되어야 할 필요가 있는 바, 근래에는 딥 러닝 등 인공지능 기술의 발달로 방대한 단백질 및 아미노산의 정보를 포함하고 있는 데이터베이스와 인공 신경 망 모델을 활용하여 단백질 간 상호작용과 관련된 정보를 예측하는 방법에 대한 연구가 많이 수행되었다. 그러나 이와 같이 온전히 인공 신경망에만 의존하는 방법은 정확도가 낮고, 연구자가 이미 알고 있는 정보(예를 들어, 상호작용하는 잔기 쌍에 대한 정보)를 인공 신경망의 추론 과정에서 더 비중 있게 반영하는 것과 같은 조 작이 어려운 문제가 존재한다. 따라서, 연구자가 미리 알고 있는 상호작용 정보 등을 추가적으로 반영하여 인공 신경망 모델을 활용한 단백질 간 상호작용과 관련된 정보를 예측하는 방법에 대한 당업계의 수요가 존재한다. 대한민국 공개특허 10-2020-30031420호는 커리큘럼 기반의 능동적 학습 방법에 대해 개시한다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경 기술에 대응하여 안출된 것으로, 인공 신경망 모델을 활용하여 사용자의 추가적인 입력 을 반영하여 단백질 간 상호작용과 관련된 정보, 구체적으로 단백질 간 상호작용 인터페이스를 예측하는 것을 목적으로 한다. 한편, 본 개시가 이루고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 이하에서 설명 할 내용으로부터 통상의 기술자에게 자명한 범위 내에서 다양한 기술적 과제가 포함될 수 있다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 실시예에 따라, 컴퓨팅 장치에 의해 추가 입력 정보를 기초 로 단백질 간 상호작용과 관련된 정보를 예측하는 방법이 개시된다. 상기 방법은, 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하는 단계; 추가 입력 정보를 수신하는 단계; 및 사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계를 포함하고, 상기 추가 입력 정보는, 상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기(residue)에 대한, 상기 상호작용과 관련된 정보를 포함할 수 있다. 일 실시예에서, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보는, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스(interface)에 대한 정보를 포함할 수 있다. 일 실시예에서, 상기 추가 입력 정보는, 상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔 기에 대한, 상기 상호작용과 관련된 사용자의 선택 입력 정보를 포함할 수 있다. 일 실시예에서, 상기 추가 입력 정보는, 상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단 백질 간 상호작용 인터페이스에 포함됨을 나타내는 제1 타입(type) 정보; 상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스에 포함되지 않음을 나타내는 제2 타입 정보; 상기 적어도 하나의 아미노산 잔기가 상기 제1 단백질 및 상기 제2 단백질 간 상호작용 인터페이스와 가까운 위치에 있음을 나타내는 제3 타입 정보 또는 상기 제1 단백질의 적어도 하나의 아미노산 잔기 및 상기 제2 단백질의 적 어도 하나의 아미노산 잔기로 구성된 쌍(pair)이 단백질 간 상호작용 인터페이스에 포함됨을 나타내는 제4 타입 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에서, 상기 추가 입력 정보가 제1 타입 정보, 제2 타입 정보 또는 제3 타입 정보인 경우, 상기 예측 정보를 생성하는 단계는: 상기 제1 단백질에 대한 변형된 단일 표현(single representation)인 제1 은닉 표현을 생성하는 단계; 상기 제2 단백질에 대한 변형된 단일 표현인 제2 은닉 표현을 생성하는 단계; 상기 제1 은닉 표 현 및 제2 은닉 표현을 기초로 상기 제1 단백질 및 제2 단백질의 쌍 표현(pair representation)을 생성하는 단 계 및 상기 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계를 포함할 수 있다. 일 실시예에서, 상기 제1 은닉 표현을 생성하는 단계는, 상기 제1 단백질의 구조 정보를 기초로 상기 제1 단백 질의 단일 표현을 생성하는 단계 및 상기 추가 입력 정보 중 제1 단백질에 포함된 아미노산 잔기와 관련된 정보 및 상기 제1 단백질의 단일 표현을 기초로, 제1 은닉 표현을 생성하는 단계를 포함할 수 있다. 일 실시예에서, 상기 제2 은닉 표현을 생성하는 단계는, 상기 제2 단백질의 구조 정보를 기초로 상기 제2 단백 질의 단일 표현을 생성하는 단계 및 상기 추가 입력 정보 중 제2 단백질에 포함된 아미노산 잔기와 관련된 정보 및 상기 제2 단백질의 단일 표현을 기초로, 제2 은닉 표현을 생성하는 단계를 포함할 수 있다. 일 실시예에서, 상기 추가 입력 정보가 제4 타입 정보인 경우, 상기 예측 정보를 생성하는 단계는: 상기 제1 단 백질 및 제2 단백질의 변형된 쌍 표현을 생성하는 단계 및 상기 제1 단백질 및 제2 단백질의 변형된 쌍 표현을 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계를 포함할 수 있 다. 일 실시예에서, 상기 변형된 쌍 표현을 생성하는 단계는: 상기 제1 단백질의 구조 정보를 기초로 상기 제1 단백 질의 단일 표현을 생성하는 단계; 상기 제2 단백질의 구조 정보를 기초로 상기 제2 단백질의 단일 표현을 생성 하는 단계; 상기 제1 단백질 및 제2 단백질의 쌍 표현을 생성하는 단계 및 상기 추가 입력 정보 및 상기 제1 단 백질 및 제2 단백질의 쌍 표현을 기초로, 상기 변형된 쌍 표현을 생성하는 단계를 포함할 수 있다. 일 실시예에서, 상기 인공 신경망 모델은, 단백질 간 상호작용과 관련된 입력 정보를 시뮬레이션(simulation)하 는 학습 데이터 세트를 생성하는 단계 및 상기 학습 데이터 세트를 기초로 상기 인공 신경망 모델을 학습시키는 단계를 기초로 학습된 인공 신경망 모델일 수 있다. 일 실시예에서, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계는: 상기 추가 입력 정보가 상기 예측 정보에 더 반영되도록, 상기 인공 신경망 모델의 추가적인 연산을 수행하는 단계를 더 포함할 수 있다. 일 실시예에서, 상기 추가 입력 정보가 상기 예측 정보에 더 반영되도록, 상기 인공 신경망 모델의 추가적인 연 산을 수행하는 단계는: 사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단 백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련 된 초기 예측 정보를 생성하는 단계; 추가적인 목적 함수(object function)을 활용하여, 상기 초기 예측 정보를 기초로 변형된 입력 정보를 결정하는 단계 및 상기 변형된 입력 정보를 기초로 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 최종 예측 정보를 생성하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 실시예에 따라, 컴퓨팅 장치로 하여금 추가 입력 정보를 기 초로 단백질 간 상호작용과 관련된 정보를 예측하기 위한 동작들을 수행하도록 하는 컴퓨터 판독가능 저장 매체 에 저장된 컴퓨터 프로그램이 개시된다. 상기 동작들은, 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하는 동작; 추가 입력 정보를 수신하는 동작 및 사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백 질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관련된 정보를 예측하는 동작을 포함하고, 상기 추가 입력 정보는, 상기 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 정보를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 실시예에 따라, 추가 입력 정보를 기초로 단백질 간 상호작 용과 관련된 정보를 예측하기 위한 컴퓨팅 장치가 개시된다. 상기 컴퓨팅 장치는 하나 이상의 프로세서 및 메모 리를 포함하고, 상기 프로세서는, 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하고, 추가 입력 정보를 수신하고, 그리고 사전 학습된 인공 신경망 모델을 활용하여, 상기 제1 단백질의 구조 정보, 상기 제2 단백질의 구조 정보 및 상기 추가 입력 정보를 기초로, 상기 제1 단백질 및 상기 제2 단백질 간 상호작용과 관 련된 예측 정보를 생성하도록 구성되고, 상기 추가 입력 정보는, 상기 제1 단백질 또는 제2 단백질에 포함된 적 어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 정보를 포함할 수 있다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 의해 인공 신경망 모델에 의한 단백질 간 상호작용 예측이 더 정확하게 수행되는 효과가 발생한다. 특히, 본 개시의 인공 신경망 모델이 추론 과정에서 사용자의 추가 입력 정보를 반영하므로, 이미 알려진 상호 작용 정보를 토대로 단백질 간 상호작용 인터페이스가 더 정확하게 예측되는 효과가 발생한다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시는 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 방법 및 추가 입력 정보가 예측 정보에 더 반영되도록, 인공 신경망 모델의 추론 단계에서 추가적인 연산을 수행하는 방법에 대해 개시한 다.다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 본 개시에서 하나 이상의 컴포넌트는 2개 이상의 컴퓨터들, 즉 실행 환경 사이에 분배될 수 있다. 또한, 이러한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴 퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호 (예를 들면, 로컬 시스템, 분산 시스템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/ 또는 신호를 통해 다른 시스템과 인터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, “A 또는 B 중 적어도 하나”이라는 용어는, “A만을 포함하는 경우”, “B만을 포함하는 경우”, “A 와 B의 구성으로 조합된 경우”를 의미하는 것으로 해석되어야 한다. 통상의 기술자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성 들, 모듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모 두의 조합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위 해, 다양한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각 각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정 들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안 된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 개시는 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서, '단백질 간 상호작용과 관련된 정보'는 단백질 간 상호작용 인터페이스(protein-protein interaction interface)를 포함할 수 있다. 단백질 간 상호작용 인터페이스는 주로 단백질의 표면적 특성에 관 한 것으로, 단백질이 다른 단백질과 상호작용하는 지점 또는 표면을 의미한다. 단백질은 다른 단백질과 상호작 용하여 세포 내에서 여러 생물학적 기능을 수행하는 바, 단백질 간 상호작용 인터페이스는 단백질의 고유한 구 조에 의해 결정될 수 있다. 일반적으로 어떤 단백질에 포함된 아미노산 잔기가 상호작용하는 단백질의 적어도 하나의 잔기와 미리 결정된 거리 이내에 존재하는 경우, 해당 아미노산 잔기는 단백질 간 상호작용 인터페이스에 포함된다고 결정될 수 있 다. 본 개시에서 단백질 간 상호작용 인터페이스에 포함된다고 결정될 수 있는 미리 결정된 거리는8A(옹스트롬), 6A(옹스트롬), 4A(옹스트롬)과 같은 값으로 결정될 수 있고, 상호작용 인터페이스를 예측할 단백 질의 종류에 따라 다르게 결정될 수 있으며, 상호작용 인터페이스를 예측하는 구체적인 목적에 따라 적절한 값 으로 결정될 수 있다. 본 개시에서, '추가 입력 정보'는 상호작용하는 단백질의 구조 등을 관찰하여, 단백질에 포함된 어떤 아미노산 잔기가 단백질 간 상호작용 인터페이스에 포함되는지 여부를 판단한 후 그와 관련된 정보를 모델에 추가로 입력 하는 사용자의 선택 입력 정보를 의미할 수 있다. 예를 들어 단백질 A와 단백질 B가 상호작용하는 경우 단백질 A에 포함된 아미노산 잔기 x가 단백질 A와 단백질 B의 상호작용 인터페이스에 포함된다고 판단되면(즉, 단백질 B에 포함된 아미노산 잔기 중 적어도 하나와 x사이 의 거리가 미리 결정된 거리 이내라고 판단되면), 사용자가 아미노산 잔기 x를 '포함됨'으로 지정하는 입력이 추가 입력 정보에 해당할 수 있다. 또 다른 예시로, 단백질 A에 포함된 아미노산 잔기 y가 단백질 A와 단백질 B 의 상호작용 인터페이스에 포함되지 않는다고 판단되면(즉, 단백질 B에 포함된 모든 아미노산 잔기와 y사이의 거리가 미리 결정된 거리보다 멀다고 판단되면), 사용자가 아미노산 잔기 y를 '포함되지 않음'으로 지정하는 입 력이 추가 입력 정보에 해당할 수 있다. 본 개시에서, 단백질의 단일 표현(single representation)은 단백질의 구조와 특성을 효과적으로 설명하기 위해 사용되는 표현 방법을 의미할 수 있다. 단백질의 단일 표현은 단백질의 1차, 2차, 3차 또는 4차 구조와 관련된 정보를 하나의 표현으로 압축하여 단백질의 특성을 나타낼 수 있다. 일반적으로 단백질의 단일 표현은 벡터 또 는 행렬의 형태로 수학적으로 표현될 수 있다. 본 개시에서 단백질의 쌍 표현(pair representation)은 단백질 간의 상호작용을 효과적으로 설명하기 위해 사용 되는 표현 방법을 의미할 수 있다. 단백질의 쌍 표현은 단백질 간 상호작용 인터페이스에 포함된 아미노산 잔기 와 관련된 정보, 상호작용 유형과 관련된 정보, 상호작용의 에너지 수준이나 결합 강도에 대한 정보를 포함할 수 있다. 일반적으로 단백질의 쌍 표현은 다차원 행렬의 형태로 수학적으로 표현될 수 있다. 도 1은 본 개시의 일 실시예에 따른 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하기 위 한 컴퓨팅 장치의 블록 구성도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 컴퓨팅 장치는 프로세서, 메모리, 네트워크부를 포함할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서 는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 기계 학습을 위한 데이 터 처리를 수행할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세서는 딥러닝(DL: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위 한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프 로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에서, 프로세서는 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신할 수 있 다. 이 경우 제1 단백질 및 제2 단백질은 서로 다른 종류의 단백질일 수 있고, 동일한 단백질일 수 있다. 다른 실시예에서, 프로세서는 제1 단백질 및 제2 단백질의 구조와 관련된 정보를 더 수신할 수 있다. 단백질의 구조 와 관련된 정보는 단백질을 구성하는 아미노산의 서열과 관련된 정보, 단백질의 알파 나선, 베타 시트에 대한 정보, 단백질의 3차 구조 및 4차 구조에 대한 정보를 포함할 수 있다.본 개시의 일 실시예에서, 프로세서는 추가 입력 정보를 수신할 수 있다. 본 개시에서, 추가 입력 정보는 제1 단백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 사용자의 선택 입력 정보를 포함할 수 있다. 예를 들어, 본 개시의 추가 입력 정보는 단일 단백질을 구성하는 아미노산의 서열 정보를 참조하여 단백질 간 상호작용 인터페이스에 포함되는 아미노산 잔기를 선택하는, 입력부(미도시)를 통해 전달된 사용자의 선택 입력일 수 있다. 또한 본 개시의 추가 입력 정보는 컴퓨팅 장치의 출력부(미도시)에 표시된 단백질의 구조를 참조하여, 단 백질 간 상호작용 인터페이스에 포함되는 잔기를 선택하는, 입력부(미도시)를 통해 전달된 사용자의 선택 입력 일 수 있다. 또한 본 개시의 추가 입력 정보는 별도의 컴퓨터 프로그램 및 인공지능의 예측 결과를 참조하여 단백질 간 상호 작용 인터페이스에 포함되는 아미노산 잔기를 선택하는, 입력부(미도시)를 통해 전달된 사용자의 선택 입력일 수 있다. 또한 본 개시의 추가 입력 정보는 실제 실험 결과를 참조하여 단백질 간 상호작용 인터페이스에 포함되는 아미 노산 잔기를 선택하는, 입력부(미도시)를 통해 전달된 사용자의 선택 입력일 수 있다. 본 개시에서, 추가 입력 정보의 유형은 제1 타입(type) 정보, 제2 타입 정보, 제3 타입 정보, 제4 타입 정보로 구분될 수 있다. 이 때, 제1 타입 정보는 제1 단백질 및 제2 단백질에 포함된 아미노산 잔기 중 적어도 하나의 아미노산 잔기가 단백질 간 상호작용 인터페이스에 포함됨을 나타내는 입력 정보일 수 있다. 또한, 제2 타입 정 보는 제1 단백질 및 제2 단백질에 포함된 아미노산 잔기 중 적어도 하나의 아미노산 잔기가 단백질 간 상호작용 인터페이스에 포함되지 않음을 나타내는 입력 정보일 수 있다. 또한, 제3 타입 정보는 제1 단백질 및 제2 단백 질에 포함된 아미노산 잔기 중 적어도 하나의 아미노산 잔기가 단백질 간 상호작용 인터페이스에 포함되지는 않 으나, 단백질 간 상호작용 인터페이스와 가까운 위치에 있음을 나타내는 입력 정보일 수 있다. 또한, 제4 타입 정보는 제1 단백질의 적어도 하나의 아미노산 잔기 및 제2 단백질의 적어도 하나의 아미노산 잔기로 구성된 쌍 (pair)이 단백질 간 상호작용 인터페이스에 포함됨을 나타내는 입력 정보일 수 있다. 각 유형의 추가 입력 정보 에 대한 구체적인 설명은 도 4a 내지 4d를 참조하여 후술한다. 본 개시의 일 실시예에서, 프로세서는 추가 입력 정보를 인코딩할 수 있다. 구체적으로, 프로세서는 추가 입력 정보를 벡터의 형태로 표현할 수 있다. 예를 들어 추가 입력 정보가 n개의 아미노산 잔기로 구성된 단백질에 포함된 아미노산 잔기를 선택하는 사용자 의 선택 입력인 경우, 프로세서는 추가 입력 정보를 n차원 벡터의 형태로 표현할 수 있다. 이 때, 프로세 서는 단백질의 a번째 아미노산 잔기가 선택된 아미노산 잔기인 경우 n차원 벡터의 a번째 값을 1, a번째 아 미노산 잔기가 선택되지 않은 아미노산 잔기인 경우 n차원 벡터의 a번째 값을 0으로 결정할 수 있다. 또 다른 예시로, 프로세서는 단백질의 a번째 아미노산 잔기가 선택된 아미노산 잔기인 경우 n차원 벡터의 a번째 값을 0, a번째 아미노산 잔기가 선택되지 않은 아미노산 잔기인 경우 n차원 벡터의 a번째 값을 '선택된 아미노산 잔기들 중 a번째 아미노산 잔기와 가장 가까이 있는 것과 a번째 아미노산 잔기의 거리' 로 결정할 수 있다. 또 다른 예시로, 프로세서는 단백질의 a번째 아미노산 잔기가 선택된 아미노산 잔기인 경우 n차원 벡터의 a번째 값을 1, a번째 아미노산 잔기가 선택된 아미노산 잔기 중 하나와 특정 거리 이내에 있는 경우 n차원 벡터 의 a번째 값을 0.5, 나머지 경우 n차원 벡터의 a번째 값을 0으로 결정할 수 있다 본 개시의 일 실시예에서, 프로세서는 추가 입력 정보를 2차원 행렬의 형태로 표현할 수 있다.예를 들어 추가 입력 정보가 n개의 아미노산 잔기로 구성된 제1 단백질에 포함된 아미노산 중 하나와 m개의 아미노산 잔기 로 구성된 제2 단백질에 포함된 아미노산 중 하나로 구성된 아미노산 잔기 쌍을 선택하는 사용자의 선택 입력인 경우, 프로세서는 추가 입력 정보를 N*M크기의 행렬로 표현할 수 있다. 구체적으로, 프로세서는 선택된 아미노산 잔기 쌍이 (제1 단백질의 a번째 아미노산 잔기, 제2 단백질의 b 번째 아미노산 잔기)인 경우 행렬의 (a, b)위치의 성분(element)의 값을 1로 결정하고, 나머지 경우 행렬의 각 성분의 값을 0으로 결정할 수 있다. 또 다른 예시로, 프로세서는 선택된 아미노산 잔기 쌍이 (제1 단백질의 a번째 아미노산 잔기, 제2 단백질 의 b번째 아미노산 잔기)인 경우 행렬의 (a, b)위치의 성분의 값을 1로 결정하고, 선택된 아미노산 잔기 쌍에 속하는 아미노산 잔기 중 어느 하나가 (제1 단백질의 a번째 아미노산 잔기, 제2 단백질의 b번째 아미노산 잔기)에 포함되는 경우 행렬의 (a, b)위치의 성분의 값을 0.5로 결정하고, 나머지 경우 행렬의 각 성분의 값을 0 으로 결정할 수 있다. 또 다른 예시로, 프로세서는 행렬의 (a, b)위치의 성분(element)의 값을 (제1 단백질의 a번째 아미노산 잔 기, 제2 단백질의 b번째 아미노산 잔기)쌍과 가장 가까이 있는 선택된 잔기 쌍과의 거리로 결정할 수 있다. 그러나 본 개시에서 추가 입력 정보를 인코딩하는 방법은 위의 예시에 제한되지 않으며, 추가 입력 정보의 특성 을 반영하기 위해 적절한 표현 방법이 제한 없이 사용될 수 있다. 본 개시의 일 실시예에서, 프로세서는 인공 신경망 모델을 활용하여 제1 단백질의 구조 정보, 제2 단백질의 구조 정보 및 추가 입력 정보를 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 정보를 예측할 수 있다. 구체적으로, 프로세서는 인공 신 경망 모델을 활용하여 제1 단백질 및 제2 단백질 간 상호작용 인터페이스를 예측할 수 있다. 본 개시의 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 예측 정보를 생성하는 인공 신경망 모델은 추 가 입력 정보, 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 입력 받고 제1 단백질 및 제2 단백질의 상 호작용 인터페이스를 출력하는 인공 신경망 모델일 수 있다. 예를 들어, 단백질 A와 단백질 B가 상호작용하는 경우, 본 개시의 인공 신경망 모델은 '단백질 A에 포함된 아미 노산 잔기 중 x1는 상호작용 인터페이스에 포함되고, y1, z1는 상호작용 인터페이스에 포함되지 않음'과 같은 부분적인 정보와 '단백질 B에 포함된 아미노산 잔기 중 w1, x2는 상호작용 인터페이스에 포함되고, y1은 상호작 용 인터페이스와 일정 거리 이내에 있으며, z2는 상호작용 인터페이스에 포함되지 않음'과 같은 부분적인 정보 를 추가 입력 정보로 취급하여, 추가 입력 정보, 단백질 A의 구조 정보 및 단백질 B의 구조 정보를 입력 받아 단백질 A와 단백질 B사이의 전체 상호작용 인터페이스를 출력하는 인공 신경망 모델일 수 있다. 위 예시 이외에도 아미노산 잔기와 관련된 다양한 유형의 입력이 추가 입력 정보로 취급될 수 있으며, 본 개시 에서 인공 신경망 모델이 단백질 간 상호작용과 관련된 예측 정보를 생성하는 구체적인 방법은 도 5 내지 도8을 참조하여 후술한다. 한편, 본 개시의 일 실시예에서, 단백질 간 상호작용과 관련된 예측 정보를 생성하는 인공 신경망 모델은, 단백 질 간 상호작용과 관련된 입력 정보를 시뮬레이션(simulation)하는 학습 데이터 세트를 기초로 학습된 인공 신 경망 모델일 수 있다. 본 개시에서 사용자가 단백질에 포함된 아미노산 잔기를 선택하는 과정을 시뮬레이션하여 학습 데이터로 활용하 기 위해, 아래와 같은 과정이 수행될 수 있다. 제1 타입 정보의 경우, 미리 상호작용 인터페이스를 알고 있는 두 단백질에 대하여 상호작용 인터페이스에 포함 된 잔기들 중에서 샘플링하거나, 상호작용 인터페이스에 있는 아미노산 잔기 중 중요한 아미노산 잔기, 예를 들 어 비교적 자주 결합하는 아미노산 잔기 타입 중에서 랜덤으로 샘플링하여 '이 아미노산 잔기는 단백질 간 상호 작용 인터페이스에 포함됨'을 나타내는 가상의 추가 입력 정보를 구현할 수 있다. 이 때 중요한 아미노산 잔기 는 인공 신경망 모델을 포함하는 예측 모델에 의해 중요도가 높을 것으로 추정되는 아미노산 잔기를 예측하는 방법을 통해 결정될 수도 있다. 제2 타입 정보의 경우, 미리 상호작용 인터페이스를 알고 있는 두 단백질에 대하여 상호작용 인터페이스에 있지 않은 아미노산 잔기 중 상호작용 인터페이스와 특정 거리 이내에 있는 아미노산 잔기들 중에서 샘플링하거나, 상호작용 인터페이스에 있지 않은 아미노산 잔기 중 상호작용 인터페이스와 특정 거리 이상 떨어진 아미노산 잔 기들 중에서 샘플링하여 '이 아미노산 잔기는 단백질 간 상호작용 인터페이스에 포함되지 않음'을 나타내는 가 상의 추가 입력 정보를 구현할 수 있다. 제3 타입 정보의 경우, 미리 상호작용 인터페이스를 알고 있는 두 단백질에 대하여 상호작용 인터페이스에 포함 되거나 상호작용 인터페이스와 특정 거리 이내에 있는 아미노산 잔기들 중에서 샘플링하여 '이 아미노산 잔기는 단백질 간 상호작용 인터페이스와 가까운 위치에 있음'을 나타내는 가상의 추가 입력 정보를 구현할 수 있다. 제4 타입 정보의 경우, 미리 상호작용 인터페이스를 알고 있는 두 단백질에 대하여 서로 미리 결정된 거리 이내 에 있는 아미노산 잔기 쌍 중에서 샘플링하여 '이 아미노산 잔기 쌍은 단백질 간 상호작용 인터페이스에 포함됨'을 나타내는 가상의 추가 입력 정보를 구현할 수 있다.단백질 간 상호작용과 관련된 예측 정보를 생성하는 인공 신경망 모델에 있어서, '단백질 A에 포함된 아미노산 잔기 중 x1은 상호작용 인터페이스에 포함되고, y1은 포함되지 않는다'라는 추가 입력 정보를 인공 신경망 모델 에 입력하여도, 인공 신경망 모델이 예측한 단백질 간 상호작용 인터페이스가 반드시 x1을 포함하고 y1을 포함 하지 않을 것이라고 보장할 수는 없다. 따라서, 추가 입력 정보가 예측 정보에 더 반영되도록 인공 신경망 모델 의 추가적인 연산을 수행함으로써 추론 결과를 개선(refine)할 필요가 있다. 본 개시의 일 실시예에서 프로세서는 추가 입력 정보가 예측 정보에 더 반영되도록, 인공 신경망 모델의 추론(inference) 과정에서 추가적인 연산을 수행할 수 있다. 구체적으로, 프로세서는 인공 신경망 모델을 활용하여 제1 단백질의 구조 정보, 제2 단백질의 구조 정보 및 추가 입력 정보를 기초로 초기 예측 정보를 생성한 후, 추가적인 목적 함수(object function)를 통해 변형된 입력 정보를 결정하고, 변형된 입력 정보를 기초로 최종 예측 정보를 생성할 수 있다. 예를 들어 본 개시에서 추가 입력 정보가 제4 타입 정보인 경우, 추가 입력 정보는 [수학식 1]과 같은 형태로 표현될 수 있다. 수학식 1"}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이 때 은 제1 단백질에서 선택된 n개의 아미노산 잔기를 의미하고, 은 제2 단백질에서 선택 된 n개의 아미노산 잔기를 의미할 수 있다. 이 경우, 추가적인 목적 함수 는 [수학식 2]와 같은 형태로 표현될 수 있다. 수학식 2"}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이 때, 는 제1 단백질과 관련된 정보를 나타내는 x 및 제2 단백질과 관련된 정보를 나타내는 y를 입력하 였을 경우 인공 신경망 모델이 생성한 단백질 간 상호작용과 관련된 예측 정보를 의미할 수 있다. 특히 는 제1 단백질의 u번째 아미노산 잔기와 제2 단백질의 v번째 아미노산 잔기 간 거리와 관련하여 인공 신경망 모델이 생성한 예측 정보를 의미할 수 있고, 는 입력값의 변화량을 의미할 수 있다. 는 하이퍼 파라미터(hyperparameter)를 의미할 수 있다. [수학식 2]와 같이 표현되는 목적 함수를 최적화하는 경우 프로세서는 를 연산하고, 원래의 입력 정보인 대신 를 변형된 입력 정보로 결정할 수 있다. 그 후, 프로세서는 인공 신경망 을 활용하여 최초 예측 정보였던 대신 를 최종 예측 정보로써 생성할 수 있다. 이러한 목적 함수 최적화 후 변형된 입력 정보를 결정하는 과정은, 인공 신경망 모델의 역전파(back-propagation) 및 재예측을 수행하는 과정으로 이해될 수 있다. 이와 같이 인공 신경망 모델의 추론 과정에서 추가적인 연산을 수행하는 경우, 최종 예측 정보는 인공 신경망에 입력된 추가 입력 정보가 더 잘 반영된 결과일 수 있다. 예를 들어, 최종 예측 정보는 최초 예측 정보와 비교하 여 사용자의 아미노산 잔기에 대한 선택 입력이 더 반영된 결과일 수 있다. 본 개시에서 인공 신경망 모델이 단백질 간 상호작용과 관련된 정보, 구체적으로 단백질 간 상호작용 인터페이 스를 예측하는 데 있어, 각 단백질의 구조 정보 이외에도 사용자가 미리 알고 있는 부분적인 정보, 예를 들어 단백질에 포함된 일부 아미노산 잔기가 단백질 간 상호작용 인터페이스에 포함되는지 여부와 같은 정보가 추가로 입력되어 인공 신경망 모델의 예측 과정에서 고려된다. 따라서 인공 신경망 모델이 추가적인 정보를 반영하 여 예측값을 출력하고, 결과적으로 인공 신경망 모델의 성능이 향상되는 효과가 발생한다. 또한, 인공 신경망 모델의 추론 과정에서 추가적인 연산이 수행되었으므로, 본 개시의 인공 신경망 모델이 생성 한 예측 정보에 추가 입력 정보가 더 확실하게 반영될 수 있다. 즉 인공 신경망 모델이 예측한 단백질 간 상호 작용 인터페이스에 사용자가 선택한 '상호작용 인터페이스에 포함되는 아미노산 잔기'가 존재할 확률 및 사용자 가 선택한 '상호작용 인터페이스에 포함되지 않는 아미노산 잔기'가 존재하지 않은 확률이 높아질 수 있다. 결 과적으로 본 개시의 추가적인 연산을 통해 인공 신경망 모델의 성능이 향상되는 효과가 발생한다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장 치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관 련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따른 네트워크부는 공중전화 교환망(PSTN: Public Switched Telephone Network), xDSL(x Digital Subscriber Line), RADSL(Rate Adaptive DSL), MDSL(Multi Rate DSL), VDSL(Very High Speed DSL), UADSL(Universal Asymmetric DSL), HDSL(High Bit Rate DSL) 및 근거리 통신망(LAN) 등과 같은 다양한 유선 통신 시스템들을 사용할 수 있다. 또한, 본 명세서에서 제시되는 네트워크부는 CDMA(Code Division Multi Access), TDMA(Time Division Multi Access), FDMA(Frequency Division Multi Access), OFDMA(Orthogonal Frequency Division Multi Access), SC-FDMA(Single Carrier-FDMA) 및 다른 시스템들과 같은 다양한 무선 통신 시스템들을 사용할 수 있 다. 본 개시에서 네트워크부는 임의의 형태의 유무선 통신 시스템을 사용할 수 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크들에서도 사용될 수 있다. 도 2는 본 개시의 일 실시예에 따른 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 상호 교환 가능한 의 미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하 여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크, 적대적 생성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더(autoencoder)를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히 든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어 의 노드의 수는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이 어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 오토 인코더는 비선형 차원 감 소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 차원과 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 반교사학습(semi supervised learning), 또는 강화학습(reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정 일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고,에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링 되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교 사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 라벨링된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로 써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량 이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴 럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신 러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다 양한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤러라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 도 3은 본 개시의 일 실시예에 따른 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 과 정을 나타낸 순서도이다. 도 3에 따르면, 본 개시에서 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 과정은 제 1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신하는 단계(S310), 추가 입력 정보를 수신하는 단계 (S320) 및 사전 학습된 인공 신경망 모델을 활용하여, 제1 단백질의 구조 정보, 제2 단백질의 구조 정보 및 추 가 입력 정보를 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성하는 단계(S330)를 포함할 수 있다. S310단계에서, 프로세서는 제1 단백질의 구조 정보 및 제2 단백질의 구조 정보를 수신할 수 있다. 이 때, 각 구조 정보는 각 단백질을 구성하는 아미노산의 서열 또는 단백질의 구조와 관련된 정보를 값으로 표현한 벡 터 또는 행렬일 수 있다. S320단계에서, 프로세서는 추가 입력 정보를 수신할 수 있다. 본 개시에서 추가 입력 정보는 상기 제1 단 백질 또는 제2 단백질에 포함된 적어도 하나의 아미노산 잔기에 대한, 상기 상호작용과 관련된 사용자의 선택 입력 정보를 포함할 수 있으며, 벡터 또는 2차원 행렬의 형태로 표현할 수 있음은 도 1을 참조하여 전술하였다. S330단계에서, 프로세서는 사전 학습된 인공 신경망 모델을 활용하여, 제1 단백질의 구조 정보, 제2 단백 질의 구조 정보 및 추가 입력 정보를 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 정보를 예측할 수 있다. 추가 입력 정보가 제1 타입 정보 내지 제3 타입 정보인 경우, 프로세서는 제1 단백질 및 제2 단백질 간 상 호작용과 관련된 정보를 예측하기 위해 제1 단백질 및 제2 단백질의 단일 표현(single representation)을 생성 할 수 있다. 그 후, 프로세서는 추가 입력 정보 중 제1 단백질에 포함된 아미노산 잔기와 관련된 정보 및 제1 단백질의 단일 표현을 기초로, 제1 은닉 표현을 생성할 수 있다. 또한, 프로세서는 추가 입력 정보 중 제2 단백질에 포함된 아미노산 잔기와 관련된 정보 및 제2 단백질의 단일 표현을 기초로, 제2 은닉 표현을 생성 할 수 있다. 그 후, 프로세서는 인공 신경망 모델을 활용하여 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질 간 상호작용 인터페이스를 예측할 수 있다.한편, 추가 입력 정보가 제4 타입 정보인 경우, 프로세서는 제1 단백질 및 제2 단백질의 쌍 표현을 생성할 수 있다. 그 후, 프로세서는 추가 입력 정보 및 상기 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 변형 된 쌍 표현을 생성할 수 있다. 그 후, 프로세서는 인공 신경망 모델을 활용하여 변형된 쌍 표현을 기초로 제1 단백질 및 제2 단백질 간 상호작용 인터페이스를 예측할 수 있다. 각각의 추가 입력 정보의 유형에 따른 단백질 간 상호작용 인터페이스 예측에 대한 구체적인 설명은 도 5 내지 도 8을 참조하여 후술한다. 이하, 도 4a 내지 4d를 참조하여 본 개시의 '추가 입력 정보'의 유형이 구체적으로 설명된다."}
{"patent_id": "10-2023-0085188", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 4, "content": "도 4a는 본 개시의 추가 입력 정보 중 제1 타입 정보를 나타낸 개념도이다. 제1 단백질과 제2 단백질이 상호작용하는 경우, 두 단백질의 결합 부위에 가까이 위치한 아미노산 잔 기들은 두 단백질의 상호작용 인터페이스(430 및 440)에 포함됨을 알 수 있다. 이 때, 제1 타입 정보는 제1 단 백질에 포함된 아미노산 잔기 중 제2 단백질에 포함된 아미노산 잔기 중 적어도 하나와 미리 결정된 거리(예를 들어, 6A)이내에 있다고 사용자가 판단한 아미노산 잔기에 대한 정보 또는 제2 단백질에 포함된 아미노산 잔기 중 제1 단백질에 포함된 아미노산 잔기 중 적어도 하나와 미리 결정된 거리(예를 들 어, 6A)이내에 있다고 사용자가 판단한 아미노산 잔기에 대한 정보를 포함할 수 있다. 도 4b는 본 개시의 추가 입력 정보 중 제2 타입 정보를 나타낸 개념도이다. 제1 단백질과 제2 단백질이 상호작용하는 경우, 두 단백질의 결합 부위와 멀리 떨어진 아미노산 잔기 들은 두 단백질의 상호작용 인터페이스(430 및 440)에 포함되지 않음을 알 수 있다. 이 때, 제2 타입 정보는 제 1 단백질에 포함된 아미노산 잔기 중 제2 단백질과 멀리 떨어져 있다고 사용자가 판단한 아미노산 잔 기에 대한 정보 또는 제2 단백질에 포함된 아미노산 잔기 중 제1 단백질과 멀리 떨어져 있다고 사용자가 판단한 아미노산 잔기에 대한 정보를 포함할 수 있다. 도 4c는 본 개시의 추가 입력 정보 중 제3 타입 정보를 나타낸 개념도이다. 제1 단백질과 제2 단백질이 상호작용하는 경우, 다른 단백질과 비교적 가까이 위치한 잔기는 단백질 의 상호작용 인터페이스(430 및 440)와 가까이 위치해 있음을 알 수 있다. 이 때, 제3 타입 정보는 제1 단백질 에 포함된 아미노산 잔기 중 제2 단백질과 가까이 있다고 사용자가 판단한 아미노산 잔기(4131 및 4132)에 대한 정보 또는 제2 단백질에 포함된 아미노산 잔기 중 제1 단백질과 가까이 있다고 사용자 가 판단한 아미노산 잔기에 대한 정보를 포함할 수 있다. 도 4d는 본 개시의 추가 입력 정보 중 제4 타입 정보를 나타낸 개념도이다. 제1 단백질과 제2 단백질이 상호작용하는 경우, 각각의 단백질에 포함된 아미노산 잔기 중 서로 가까 이 위치한 아미노산 잔기의 쌍은 서로 상호작용하여 단백질 간 상호작용 인터페이스(430 및 440)에 포함됨을 알 수 있다. 이 때, 제4 타입 정보는 '미리 결정된 거리 이내에 있는, 제1 단백질에 포함된 아미노산 잔기 와 제2 단백질에 포함된 아미노산 잔기의 쌍에 대한 정보' 또는 '미리 결정된 거리 이내에 있 는, 제1 단백질에 포함된 아미노산 잔기와 제2 단백질에 포함된 아미노산 잔기의 쌍에 대한 정보'를 포함할 수 있다. 종래 단백질 간 상호작용 인터페이스를 예측하기 위해 인공 신경망 모델을 사용하는 경우, 인공 신경망 모델은 각각의 단백질의 특성을 반영하여 예측 정보를 도출할 수는 있었으나, 사용자가 단백질의 상호작용에 대해 알고 있는 부분적인 정보들(예를 들어, 제1 단백질에 포함된 u번째 아미노산 잔기는 상호작용 인터페이스에 포함되지 않고, v번째 아미노산 잔기는 상호작용 인터페이스에 포함된다는 정보)을 반영할 수 없었다. 따라서 종래의 방 법으로는 단백질 간 상호작용 인터페이스를 정확히 예측할 수 없는 문제가 있었다.도 5는 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제3 타입인 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 본 개시에서, 프로세서는 먼저 제1 단백질의 구조 정보를 기초로 제1 단백질의 단일 표현을 생성한 후, 제1 단백질의 단일 표현에 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터를 연접 (concatenation)하여 새로운 행렬을 생성할 수 있다. 한편, 제2 단백질에 대해서 제2 단백질의 구조 정보를 기 초로 제2 단백질의 단일 표현을 생성한 후, 제2 단백질의 단일 표현에 제2 단백질과 관련된 추가 입 력 정보가 표현된 벡터를 연접하여 새로운 행렬을 생성할 수 있다. 추가 입력 정보가 제1 타입 정보 내지 제3 타입 정보인 경우, 추가 입력 정보는 각 단백질에 포함된 아미노산 잔기에 대한 선택 입력일 수 있고, 벡터 또는 행렬의 형태로 표현될 수 있음은 전술하였다. 그 후, 프로세서는 제1 단백질의 단일 표현에 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터가 연접된 행렬로부터, 제1 은닉 표현을 생성할 수 있 다. 마찬가지로, 프로세서는 제2 단백질의 단일 표현에 제2 단백질과 관련된 추가 입력 정보가 표현 된 벡터가 연접된 행렬로부터, 제2 은닉 표현을 생성할 수 있다. 이렇게 생성된 제1 은닉 표현 및 제2 은닉 표현은 각각의 단백질의 구조 정보뿐만 아니라 각각의 단백질에 포함된 아미노산 잔기에 대한, 상호작용과 관련된 추가적인 정보를 포함할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질의 쌍 표현을 생성할 수 있다. 마지막으로, 프로세서는 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 예를 들어, 프로세 서는 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용 인터페 이스를 예측할 수 있다. 또 다른 실시예로, 제1 단백질과 관련된 추가 입력 정보만이 존재하는 경우 프로세서는 제1 단백질의 단일 표현 및 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터를 기초로 제1 은닉 표현을 생성할 수 있다. 한편 프로세서는 제2 단백질의 단일 표현만을 기초로 제2 은닉 표현을 생성할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질 의 쌍 표현을 생성하고, 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 또 다른 실시예로, 제2 단백질과 관련된 추가 입력 정보만이 존재하는 경우 프로세서는 제2 단백질의 단일 표현 및 제2 단백질과 관련된 추가 입력 정보가 표현된 벡터를 기초로 제2 은닉 표현을 생성할 수 있다. 한편 프로세서는 제1 단백질의 단일 표현을 기초로 제1 은닉 표현을 생성할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질의 쌍 표현을 생성하고, 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호 작용과 관련된 예측 정보를 생성할 수 있다. 제1 단백질과 관련된 추가 입력 정보 및 제2 단백질과 관련된 추가 입력 정보가 복수의 타입의 정보를 포함하는 경우, 프로세서 행렬의 각 열이 각각 서로 다른 타입의 정보가 표현된 벡터에 대응되도록, 2차원 행렬의 형태로 추가 입력 정보를 표현할 수 있다. 추가 입력 정보가 복수의 타입의 정보를 포함하는 경우 인공 신경망 모델의 추론 과정에 대한 구체적인 설명은 도 6을 참조하여 후술한다. 위와 같이 프로세서가 인공 신경망 모델을 활용하여 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성함에 있어 각각의 단백질의 구조 정보 뿐만 아니라 각각의 단백질에 포함된 아미노산 잔기에 대한, 상호작용과 관련된 추가적인 정보가 고려됨으로써, 더 정확한 예측을 수행할 수 있다. 도 6은 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제3 타입 정보 중 복수의 타입의 정보를 포함하는 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 본 개시에서, 프로세서는 추가 입력 정보가 복수의 타입의 정보를 포함하는 경우에도, 인공 신경망 모델을 활용하여 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 예를 들어, 프로세서는 먼저 제1 단백질의 단일 표현 및 제2 단백질의 단일 표현을 생성할 수 있다. 프로세서는 제1 단백질과 관련된 제1 타입의 추가 입력 정보가 표현된 벡터, 제1 단백질과 관련된 제2 타입의 추가 입력 정보가 표현된 벡터 및 제1 단백질과 관련된 제3 타입의 추가 입력 정보가 표 현된 벡터를 연접하여 제1 단백질과 관련된 추가 입력 정보를 나타내는 2차원 행렬을 생성할 수 있다. 그 후, 프로세서는 생성된 행렬을 제1 단백질의 단일 표현과 연접하여 새로운 행렬을 생성할 수 있다. 그 후, 프로세서는 제1 단백질의 단일 표현 및 제1 단백질과 관련된 추가 입력 정보를 나타내는 2차원 행렬을 연 접한 행렬로부터 제1 은닉 표현을 생성할 수 있다. 제2 단백질에 대하여, 프로세서는 제2 단백질과 관련된 제1 타입의 추가 입력 정보가 표현된 벡터, 제2 단백질과 관련된 제2 타입의 추가 입력 정보가 표현된 벡터 및 제2 단백질과 관련된 제3 타입의 추가 입력 정보가 표현된 벡터를 연접하여 제2 단백질과 관련된 추가 입력 정보를 나타내는 2차원 행렬을 생성 할 수 있다. 그 후, 프로세서는 생성된 행렬을 제2 단백질의 단일 표현과 연접하여 새로운 행렬을 생성할 수 있다. 그 후, 프로세서는 제2 단백질의 단일 표현 및 제2 단백질과 관련된 추가 입력 정보를 나타내는 2차원 행렬이 연접된 행렬로부터 제2 은닉 표현을 생성할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질의 쌍 표현을 생성하고, 제1 단백질 및 제2 단백질의 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호 작용과 관련된 예측 정보를 생성할 수 있다. 추가 입력 정보가 복수의 타입의 정보를 포함하는 위 실시예에서, 하나 이상의 타입의 정보가 추가 입력 정보에 포함되지 않은 경우, 프로세서는 포함되지 않은 추가 입력 정보를 영벡터로 표현하여 인공 신경망 모델의 추론을 수행할 수 있다. 예를 들어, 추가 입력 정보에 제3 타입 정보가 포함되지 않는 경우 프로세서는 제1 단백질과 관련된 제3 타입의 추가 입력 정보가 표현된 벡터 및 제2 단백질과 관련된 제3 타입의 추가 입력 정보가 표현된 벡터 를 영벡터로 표현할 수 있다. 그 후 프로세서는 제1 단백질과 관련된 제1 타입의 추가 입력 정보가 표현된 벡터, 제1 단백질과 관련된 제2 타입의 추가 입력 정보가 표현된 벡터와 영벡터를 연접하여 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터를 생성할 수 있다. 마찬가지로, 프로세서는 제2 단백 질과 관련된 제1 타입의 추가 입력 정보가 표현된 벡터, 제2 단백질과 관련된 제2 타입의 추가 입력 정보 가 표현된 벡터와 영벡터를 연접하여 제2 단백질과 관련된 추가 입력 정보가 표현된 벡터를 생성할 수 있 다. 도 7은 본 개시의 일 실시예에 따른 추가 입력 정보가 제4 타입인 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 본 개시에서, 프로세서는 제1 단백질의 구조 정보를 기초로 제1 단백질의 단일 표현 및 제2 단백질의 구조 정보를 기초로 제2 단백질의 단일 표현을 생성할 수 있다. 그 후, 프로세서는 제1 단백질의 단 일 표현으로부터 제1 단백질의 특성이 포함된 제1 은닉 표현을 생성하고, 제2 단백질의 단일 표현 으로부터 제2 단백질의 특성이 포함된 제2 은닉 표현을 생성할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질의 쌍 표현을 생성할 수 있다. 프로세서는 제1 단백질 및 제2 단백질의 쌍 표현에 추가 입력 정보가 표현된 행렬을 연접함으로써, 변형된 쌍 표현을 생성할 수 있다. 추가 입력 정보가 제4 타입 정보인 경우, 추가 입력 정보는 제1 단백질의 적어도 하나의 아미노산 잔기 및 상기 제2 단백질의 적어도 하나의 아미노산 잔 기로 구성된 쌍에 대한 정보일 수 있고, 벡터 또는 행렬의 형태로 표현될 수 있음은 전술하였다. 마지막으로, 프로세서는 변형된 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 예를 들어, 프로세서는 변형된 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용 인터페이스를 예측할 수 있다. 위와 같이 프로세서가 인공 신경망 모델을 활용하여 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성함에 있어 각각의 단백질의 구조 정보뿐만 아니라 제1 단백질 및 제2 단백질 간 상호작용 인터 페이스에 포함된, 아미노산 잔기 쌍과 관련된 추가적인 정보가 고려됨으로써, 더 정확한 예측을 수행할 수 있다. 도 8은 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제4 타입의 정보 중 복수의 타입의 정보 를 포함하는 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 추가 입력 정보가 복수의 타입의 정보를 포함하는 경우, 예를 들어 제1 타입 정보와 제4 타입 정보를 포함하는 경우, 본 개시의 인공 신경망 모델은 복수의 타입의 정보를 모두 활용하여 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 이 때 인공 신경망 모델의 추론 과정은 도 5 내지 도 7에 도시된 단계들이 혼합된 과정 일 수 있다. 구체적으로, 프로세서는 제1 단백질에 대해서 제1 단백질의 구조 정보를 기초로 제1 단백질의 단일 표현 을 생성한 후, 제1 단백질의 단일 표현에 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터를 연접(concatenation)하여 새로운 행렬을 생성할 수 있다. 한편, 프로세서는 제2 단백질에 대해서 제2 단백 질의 구조 정보를 기초로 제2 단백질의 단일 표현을 생성한 후, 제2 단백질의 단일 표현에 제2 단백 질과 관련된 추가 입력 정보가 표현된 벡터를 연접하여 새로운 행렬을 생성할 수 있다. 도 6을 참조하여 전술하였듯, 추가 입력 정보가 복수의 타입의 정보를 포함하는 경우 제1 단백질과 관련된 추가 입력 정보 및 제 2 단백질과 관련된 추가 정보는 각 타입의 입력 정보를 나타내는 벡터를 연접한 2차원 형태의 행렬일 수 있다. 다음으로, 프로세서는 제1 단백질의 단일 표현에 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터 가 연접된 행렬로부터, 제1 은닉 표현을 생성할 수 있다. 마찬가지로, 프로세서는 제2 단백질의 단일 표현에 제1 단백질과 관련된 추가 입력 정보가 표현된 벡터가 연접된 행렬로부터, 제2 은닉 표 현을 생성할 수 있다. 그 후, 프로세서는 제1 은닉 표현 및 제2 은닉 표현을 기초로 제1 단백질 및 제2 단백질의 쌍 표현을 생성할 수 있다. 프로세서는 제1 단백질 및 제2 단백질의 쌍 표현에 제4 타입 정보의 추 가 입력 정보가 표현된 행렬을 연접함으로써, 변형된 쌍 표현을 생성할 수 있다. 마지막으로, 프로세서는 변형된 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용과 관련된 예측 정보를 생성할 수 있다. 예를 들어, 프로세서는 변형된 쌍 표현을 기초로, 제1 단백질 및 제2 단백질 간 상호작용 인터페이스를 예측할 수 있다. 한편, 본 개시의 실시예에 따라 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자 정의 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매체(예를 들어, 영구 저장 장치)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨팅 장치는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산 을 수행할 수 있다. 구체적으로 컴퓨팅 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트 (List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다. 비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 이하에서는 신경망으로 통일하여 기술한다. 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등을 포함할 수 있다. 신경망을 포함한 데이터 구조는 상기 개시된 구성들 중 임의의 구성 요소들을 포함 할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 의한 처리를 위하여 전처리된 데이터, 신경망에 입력 되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수 등 전부 또는 이들의 임의의 조합을 포함하 여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발생되는 모든 형태의 데 이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망 은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습 데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는 전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 가중치에 기초하여 출력 노드에서 출력되는 데이터 값을 결정할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및 /또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨팅 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨팅 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨팅 장치 또는 다른 컴퓨팅 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데 이터 구조에서 B-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 9는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드(handheld) 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다.컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4a 도면4b 도면4c 도면4d 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2023-0085188", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하기 위 한 컴퓨팅 장치의 블록 구성도이다. 도 2는 본 개시의 일 실시예에 따른 네트워크 함수를 나타낸 개략도이다. 도 3은 본 개시의 일 실시예에 따른 추가 입력 정보를 기초로 단백질 간 상호작용과 관련된 정보를 예측하는 과 정을 나타낸 순서도이다. 도 4a 내지 4d는 본 개시의 일 실시예에 따른 단백질 간 상호작용과 관련된 정보를 예측하는 과정에서 추가 입 력 정보의 유형을 나타낸 개념도이다. 도 5는 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제3타입인 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 도 6은 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제3 타입의 정보 중 복수의 타입의 정보를 포함하는 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 도 7은 본 개시의 일 실시예에 따른 추가 입력 정보가 제4 타입인 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 도 8은 본 개시의 일 실시예에 따른 추가 입력 정보가 제1 타입 내지 제4 타입의 정보 중 복수의 타입의 정보를 포함하는 경우 인공 신경망 모델의 추론 과정을 나타낸 개념도이다. 도 9는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
