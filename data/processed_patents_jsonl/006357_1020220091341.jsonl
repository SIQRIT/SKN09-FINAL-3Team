{"patent_id": "10-2022-0091341", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0147498", "출원번호": "10-2022-0091341", "발명의 명칭": "타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법", "출원인": "한국교통대학교산학협력단", "발명자": "곽정환"}}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인스트럭션을 저장하는 메모리; 및컨볼루션을 수행하는 복수의 레이어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성하도록 하되, 각상기 피쳐맵이 이전 레이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결(Concatenation) 연산을 수행하고, 상기 피쳐맵에 대해 각 채널 간 상호의존성을 모델링하며, 마지막 레이어의 출력값 및 이에 대응하는레이블을 기반으로 손실값을 산출하여, 상기 손실값에 기초하여 백프로파게이션을 수행하는 프로세서를 포함하는, 타겟 병변 검출을 위한 학습을 수행하는 장치."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 프로세서는,C개 채널의 2차원의 상기 피쳐맵들을 1×1 사이즈의 피쳐맵으로 변환시켜 각 상기 채널을 하나의 숫자로 표현하는 스퀴즈(Squeeze)를 수행한 이후, 두 개의 FC(Fully-connected)층을 더하여 각 채널의 상대적 중요도를 산출하는 활성화(Excitation)를 수행함으로써, 상기 각 채널 간 상호의존성을 모델링하는, 타겟 병변 검출을 위한학습을 수행하는 장치."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 프로세서는,상기 컨볼루션을 통해 생성된 각 상기 피쳐맵을 채널당 상기 산출된 중요도를 고려하여 재보정(recalibration)하는, 타겟 병변 검출을 위한 학습을 수행하는 장치."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 프로세서는,상기 연결 연산 시 상기 이전 레이어의 피쳐맵과 상기 다음 레이어의 피쳐맵의 크기를 동일하게 하기 위해, 네트워크를 여러 개의 블록(block)으로 나누고, 각 상기 블록 사이에 트랜지션 레이어(transition layer)를 구비하여, 상기 트랜지션 레이어를 통해 컨볼루션 연산 및 풀링(pooling)을 수행하는, 타겟 병변 검출을 위한 학습을 수행하는 장치."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 프로세서는,클래스 간 유사성 효과를 최소화하기 위해 교차 엔트로피의 손실 함수에 라벨 스무딩(label smoothing)을 사용하는, 타겟 병변 검출을 위한 학습을 수행하는 장치."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "컨볼루션을 수행하는 복수의 레이어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성하도록 하는단계;각 상기 피쳐맵이 이전 레이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결 연산을 수행하는 단계; 공개특허 10-2023-0147498-3-상기 피쳐맵에 대해 각 채널 간 상호의존성을 모델링하는 단계;마지막 레이어의 출력값 및 이에 대응하는 레이블을 기반으로 손실값을 산출하는 단계; 및상기 손실값에 기초하여 백프로파게이션을 수행하는 단계를 포함하는, 타겟 병변 검출을 위한 학습을 수행하는방법."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 각 채널 간 상호의존성을 모델링하는 단계는,C개 채널의 2차원(H×X)의 상기 피쳐맵들을 1×1 사이즈의 피쳐맵으로 변환시켜 각 상기 채널을 하나의 숫자로표현하는 스퀴즈(Squeeze)를 수행하는 단계; 및상기 스퀴즈 수행 이후 두 개의 FC(Fully-connected)층을 더하여 각 채널의 상대적 중요도를 산출하는 활성화(Excitation)를 수행하는 단계를 포함하는, 타겟 병변 검출을 위한 학습을 수행하는 방법."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 상호의존성을 모델링하는 단계는,상기 컨볼루션을 통해 생성된 각 상기 피쳐맵을 채널당 상기 산출된 중요도를 고려하여 재보정(recalibration)하는 단계를 더 포함하는, 타겟 병변 검출을 위한 학습을 수행하는, 타겟 병변 검출을 위한 학습을 수행하는 방법."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 6 항에 있어서,상기 연결 연산을 수행하는 단계는, 상기 연결 연산 시 상기 이전 레이어의 피쳐맵과 상기 다음 레이어의 피쳐맵의 크기를 동일하게 하기 위해, 네트워크를 여러 개의 블록(block)으로 나누고, 각 상기 블록 사이에 구비된 트랜지션 레이어(transition layer)를 통해 컨볼루션 연산 및 풀링(pooling)을 수행하는 단계를 포함하는, 타겟 병변 검출을 위한 학습을 수행하는방법."}
{"patent_id": "10-2022-0091341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 6 항에 있어서,상기 손실값을 산출하는 단계는,클래스 간 유사성 효과를 최소화하기 위해 교차 엔트로피의 손실 함수에 라벨 스무딩(label smoothing)을 사용하는, 타겟 병변 검출을 위한 학습을 수행하는 방법."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법에 관한 것으로서, 더욱 상세하게는 복합 병변 중에서 타겟 병변을 검출하는 성능을 개선하기 위해 레이어 간 정보흐름을 최대화하면서 채널간 상대적 중요도에 따라 피쳐맵을 재보정하는 타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법에 관한 것으로서, 더욱 상세하게는 복합 병변 중에서 타겟 병변을 검출하는 성능을 개선하기 위해 레이어 간 정보흐름을 최대화하면서 채널간 상대적 중요도 에 따라 피쳐맵을 재보정하는 타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "COVID-19과 같은 전염병의 확산을 방지하기 위해서는 질병의 조기 진단을 위한 정확한 검사가 필요하다. COVID- 19 진단 수단으로서, 저렴한 비용, 낮은 방사선 및 빠른 이미징 속도로 인하여 흉부 X선(CXR)이 광범위하게 이 용되고 있다.CXR을 이용한 진단은 PCR 키트를 사용하거나 코 또는 인후에 면봉을 사용하는 방법보다 비용과 시간 면에서 효 율적이고, CT-스캔 영상 기술이 특히 임산부나 어린이에게 고용량의 방사선 영향을 미치는 데에 비하여 낮은 영 향을 끼친다. 그러나, CXR을 사용한 수동 진단은 시간이 오래 걸리고, 인적 오류가 발생하기 쉬우며, COVID-19와 같은 대유행 상황에서 너무 많은 방사선 전문의를 필요로 하는 단점이 있다. 따라서, COVID-19를 정확하게 진단하기 위해서는 자동화된 방법론이 필요하며, 최근에는 이러한 목표를 달성하 기 위해 수많은 딥 러닝(DL) 기반 접근 방식이 제시되었다. 최근 제안된 COVID-19 진단을 위한 DL 기반 기술은 세분화 기반 방법과 분류 기반 방법의 두 가지 클래스로 분 류된다. 대부분의 연구는 DenseNet19, ResNet20 및 VGGNet(Visual Geometry Group Network)21과 같은 CNN(Convolutional Neural Networks) 아키텍처를 사용하여 기능 표현을 학습한다. 그러나 CNN 기하학적 구조와 샘플링 위치는 병변의 합성 모양에 따라 수정할 수 없다. 복잡한 병변 또는 복합 병변에서 COVID-19 식별을 위해서는 방사선학적 특징에 대한 강력한 학습이 필요하다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는, 전술한 문제를 해결하기 위하여, 복합 병변 중에서 타겟 병변을 검출하는 성능을 개선하기 위해 레이어 간 정보흐름을 최대화하면서 채널간 상대적 중요도에 따라 피쳐맵을 재보정하며, 손실 함수에 라벨 스무딩(label smoothing)을 사용하는 타겟 병변 검출을 위한 학습을 수행하는 장치 및 방법을 제공하는 것이다. 다만, 본 발명이 해결하고자 하는 과제는 이상에서 언급한 것으로 제한되지 않으며, 언급되지 않은 또 다른 해 결하고자 하는 과제는 아래의 기재로부터 본 발명이 속하는 통상의 지식을 가진 자에게 명확하게 이해될 수 있 을 것이다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시 예에 따른 타겟 병변 검출을 위한 학습을 수행하는 장치는 인스트럭션을 저장하는 메모리; 및 컨볼루션을 수행하는 복수의 레이어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성하도록 하되, 각 상기 피쳐맵이 이전 레이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결(Concatenation) 연산을 수행하고, 상기 피쳐맵에 대해 각 채널 간 상호의존성을 모델링하며, 마지막 레이어의 출력값 및 이에 대응하는 레이블을 기반으로 손실값을 산출하여, 상기 손실값에 기초하여 백프로파게이션을 수행하는 프로세서를 포함한 다. 본 발명의 다른 실시예에 따른 타겟 병변 검출을 위한 학습을 수행하는 방법은 컨볼루션을 수행하는 복수의 레 이어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성하도록 하는 단계와, 각 상기 피쳐맵이 이전 레 이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결 연산을 수행하는 단계와, 상기 피쳐맵에 대해 각 채널 간 상호의존성을 모델링하는 단계와, 마지막 레이어의 출력값 및 이에 대응하는 레이블을 기반으로 손실값 을 산출하는 단계 및 상기 손실값에 기초하여 백프로파게이션을 수행하는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 의하면, 레이어 간 정보흐름을 최대화하면서 채널간 상대적 중요도에 따라 피쳐맵을 재보 정하며, 손실 함수에 라벨 스무딩(label smoothing)을 사용함으로써, 복합 병변 또는 복잡한 병변 중에서 타겟 병변을 검출하는 성능을 개선할 수 있다."}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시 예들에 한정되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시 예들은 본 발명의 개시가 완전하도록 하고, 본 발명이"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "속하는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 본 발명의 실시 예들을 설명함에 있어서 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요 하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략할 것이다. 그리고 후술되는 용어들은 본 발명의 실시 예에서의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 도 1은 본 발명의 일 실시예에 따른 DAM-Net(Densely Attention Mechanism-Based Network)기반으로 타겟 병변 검출을 위한 학습을 수행하는 컴퓨팅 장치의 구성을 도시하는 블록도이다. 도 1을 참조하면, 컴퓨팅 장치는 DAM-Net을 포함할 수 있다. DAM-Net에 의한 다양한 데이터의 입력 및 출력과 각종 데이터 연산 과정은 각각 통신부 및 프로세서에 의해 실행될 수 있다. 또한, 컴 퓨팅 장치는 다음 프로세스를 수행하기 위한 컴퓨터 판독 가능한 명령어를 저장할 수 있는 메모리부 를 더 포함할 수 있다. 메모리부는 각종 인스트럭션들을 저장할 수 있다. 프로세서는 컨볼루션을 수행하는 복수의 레이어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성 하도록 하되, 각 상기 피쳐맵이 이전 레이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결 (Concatenation) 연산을 수행하고, 상기 피쳐맵에 대해 각 채널 간 상호의존성을 모델링하며, 마지막 레이어의 출력값 및 이에 대응하는 레이블을 기반으로 손실값을 산출하여, 상기 손실값에 기초하여 백프로파게이션을 수 행할 수 있다. 이와 같은 프로세서의 수행에 대해 하기에서 상세히 설명하기로 한다. 도 2는 본 발명의 일 실시예에 따른 DAM-Net의 구성 및 학습 과정을 개략적으로 도시하는 개념도이고, 도 3은 좀 더 구체적인 DAM-Net의 구성 및 학습 과정을 도시하는 흐름도이다. 도 2 및 도 3을 참조하면, DAM-Net은 컨볼루션 레이어, N개의 Dense 블록(221~220+N), 출력 레이어 및 로스 레이어를 포함할 수 있다. 먼저, 컨볼루션 레이어는 입력 이미지(Input data)에 하나 이상의 컨볼루션 연산을 적용하여 피쳐맵을 생 성하기 위한 프로세서를 수행할 수 있다. N개의 Dense 블록(221~220+N)은 각각 채널 어텐션 레이어, Dense 블록 레이어, 채널 어텐션 레이어 및 트랜지션 레이어를 순서대로 포함할 수 있다. 프로세서는 컨볼루션 레이어를 실행시킨 이후, N개의 Dense 블록을 순차적으로 실행시킬 수 있다. 프로세서는 DenseNet을 응용하여 다양한 규모의 공간적 특징을 포착하는데, 여기서 다양한 스케일의 피쳐 가 추가로 교차 연결될 수 있다. 즉, 프로세서는 컨볼루션 레이어에서 출력된 각 피쳐맵이 복수의 레이어들을 거치는 동안, 이전 레이 어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결(Concatenation) 연산을 수행한다. 이와 같이 연결 연산을 수행하는 DenseNet은 CXR에서 서로 다른 질병의 복잡한 의미 관계를 나타내는데 있어서, 기존의 CNN보다 높은 성능을 달성하게 한다. 또한, 네트워크에서 레이어를 거치는 동안 피쳐를 재사용할 수 있 기 때문에, 그라디언트 소실 문제를 해결할 수 있으며, 각 레이어에서 모든 후속 레이어로 직접 연결되기 때문 에, 공간적 특징을 학습할 수 있다. Dense Block layer는 네트워크 계층 간의 원활한 정보 흐름을 유지하게 한다. 이를 테면, 하기의 수학식 1로 표현되는 l번째 레이어 K1는 모든 이전 레이어의 피쳐맵을 입력으로 수신한 다음 해당 피쳐맵을 각 다음 레이어로 진행한다. [수학식 1]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, Ml,G는 배치 정규화, ReLU, 풀링 및 컨볼루션 레이어를 포함하는 복합 함수를 나타내고, 는 레이어 의 통합 기능 맵을 나타낸다. G는 출력 피쳐 맵의 수를 나타내는 성장률 이다. 복합 기능과 피쳐맵 연결의 여러 레이어를 계단식으로 연결하여 L레이어와 G의 성장율을 갖는 DenseBlock(L, G)을 형성한다. 부연하자면, Dense Block layer는 k개의 피쳐맵을 생성하고, 이 k는 성장율이라 부르는 하이퍼파라미터가 된다. 이 성장률은 각 레이어가 전체에 어느 정도 기여할지 결정한다. 수학식 1에서 Dense Block의 연결에서 Dense Block의 레이어 수가 증가함에 따라 입력 수가 증가된다. 각 Dense Block 실행 후에 트랜지션 레이어(transition layer)가 다운샘플링(downsampling)에 사용된다. 트랜지션 레이어는 1×1의 컨볼루션 레이어와 2×2의 평균 풀링 레이어(average pooling layer)로 구성된다. 본 발명의 일 실시예에서는 다운샘플링을 따라 트랜지션 레이어가 있는 4 개의 Dense Block으로 구성된 DenseNet을 사용하여 복잡한 공간 피쳐를 추출하고, 이에 의해 오퍼피팅 문제를 효율적으로 방지할 수 있다. 전술한 바와 같이 본 발명의 일 실시예에서 조밀하게 연결된 패턴(densely connected pattern)이 사용되며, 이 에 따라 기존 CNN에 비해 제한된 매개변수(limited parameters)가 필요하게 된다. 따라서, 불필요한 세부 사항 을 학습할 필요가 없고, 네트워크 레이어에서 요구하는 피쳐맵도 줄어들게 된다. 이에 의해, 매개변수 효율성이 크게 향상될 수 있다. 반면에, 다양한 레이어를 연속적으로 연결하려면 모든 레이어가 입력 및 손실 함수의 기울기에 접근해야 한다. DenseNet에 의한 빠른 액세스로 인해 레이어 간의 정보 흐름이 향상되고, 그래디언트 소실 문제도 줄어들게 된 다. 입력 및 출력에 인접한 레이어 간의 이러한 결합의 주요 이점은, 이전 피쳐가 피쳐 표현의 재고를 위해 역방향 으로 진행할 수 있다는 점이다. 이러한 네트워크 구조를 활용하여 보다 의미있는 피쳐를 추출할 수 있게 된다. 즉, 모든 레이어에서 추출된 피쳐는 더 유익한 정보를 얻기 위해 융합되도록 재처리될 수 있고, 그 후에 개선된 결과를 달성하기 위해 다양한 애플리케이션에 사용될 수 있다. 이 방법은 수많은 피쳐맵을 연결하는데, 모든 피쳐맵을 통합하는 대신 마지막 레이어를 다음 레이어의 입력으로 관리한다. 각 레이어가 다른 모든 레이어에 연결되기에 L(L+1)/2개의 연결을 가질 수 있다. 이전 레이어를 기반으로 X0, …… , Xl-1를 포함하여 l번째 레이어 피쳐맵을 계산할 수 있다. 프로세서는 연결(Concatenation) 연산 시 이전 레이어의 피쳐맵과 다음 레이어의 피쳐맵의 크기를 동일하 게 하기 위해, 네트워크를 여러 개의 블록(block: 본 발명의 실시예에서는 DenseBlock 기준으로 나누고, 각 블 록 사이에 트랜지션 레이어(transition layer)를 구비하여, 트랜지션 레이어를 통해 컨볼루션 연산 및 풀링 (pooling)을 수행한다. 다음으로, 프로세서는 DAM-Net에서 중요한 피쳐를 적응적으로 선택하도록 어텐션 기반 SE 어레이를 피쳐 채널 도메인에 활용한다. 이를 위해, 프로세서는 채널 도메인에서 피쳐맵들의 가중치를 조정한다. 다시 말하면, 프로세서는 컨볼루션을 통해 생성된 피쳐맵을 채널당 산출된 중요도를 고려하여 재보정 (recalibration)한다. 설명에 앞서, SE 기반 어텐션 레이어는 중복을 제거하기 위해 각 채널에 가중치를 부여하고자, 모든 컨볼루션 레이어와 쌍으로 활용될 수 있는 것으로 한다. 이 SE 기반 어텐션 레이어는 채널 영역에서 다양한 크기의 피쳐 맵의 가중치를 재정렬함으로써, 본질적 피쳐를 포착할 수 있다. 채널 어텐션 레이어에서는 트랜지션 레이어와 dense block만 결합한다. 트랜지션 레이어는 1×1의 컨볼루션 레이어와 스트라이드(stride) 2를 사용한 평균 풀링(average pooling)으로 구성되어 피쳐맵을 최소화시킨다. 적응적 다운샘플은 어텐션 레이어와 트랜지션 레이어의 조합이다. 피쳐 채널 프로세싱은 도 3의 오른쪽과 같이 두 단계 즉, 스퀴즈와 활성화로 분류된다. 이하, 도 4를 참조하여 스퀴즈(Squeeze)와 활성화(Excitation)에 대해 살피기로 한다. 프로세서는 Channel Attention layer를 통해 C개 채널의 2차원의 상기 피쳐맵들을 1×1 사이즈의 피쳐맵으 로 변환시켜 각 상기 채널을 하나의 숫자로 표현하는 스퀴즈(Squeeze)를 수행시킨 이후, 두 개의 FC(Fully- connected)층을 더하여 각 채널의 상대적 중요도를 산출하는 활성화(Excitation)를 수행함으로써, 상기 각 채널 간 상호의존성을 모델링할 수 있다. 도 4에서 X는 피쳐맵이고, U는 X에 컨볼루션(Ftr)이 수행된 피쳐맵이다. U에 스퀴즈를 실행 즉, C개 채널의 2차 원(H×X)의 상기 피쳐맵들을 1×1 사이즈의 피쳐맵으로 변환시킨다. 간단히 global average pooling을 통해 각 2차원의 특성맵을 평균내어 하나의 값을 얻는 것이다. 이로 인해, 각 채널을 하나의 숫자로 표현할 수 있게 된 다. 총 C개 채널의 특성맵이 있으므로 1×1×C 의 피쳐맵으로 스퀴즈된다. 피쳐맵을 글로벌하게 표현한 것이다. 컨볼루션이 로컬 정보를 다룬다면, 스퀴즈는 글로벌 정보를 다룬다고 할 수 있다. 하기의 수학식 2는 스퀴즈를 통해 C채널의 1차원 벡터를 구하는 연산식을 의미한다. [수학식 2]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, U는 피쳐맵, H는 피쳐맵의 Height, W는 피쳐맵의 Width, C는 채널 수를 의미한다. 스퀴즈 후에는, 두 개의 Fully-connected(FC)층을 더하여 각 채널의 상대적 중요도를 산출함으로써, 활성화 (excitation) 작업을 수행한다. 두 개의 비선형 FC 레이어의 게이트 접근 방식을 사용하여 채널 간의 종속성을 추출할 수 있다. 이 두 레이어의 차원은 C/16 및 C로, 모델의 복잡성을 억제한다. 활성화 모듈은 단일 은닉층으로 구성된 다층 퍼셉트론(MLP)이 다. 활성화의 출력은 SC로 표시되고 하기의 수학식 3과 같이 계산된다. [수학식 3]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서, δ와 σ는 각각 ReLU 및 시그모이드 함수를 의미하고, C와 C/16 레이어는 각각 W1 및 W2로 표시된다. 이 후, 각 피쳐 채널에 해당 가중치를 부여한다. 이는 하기의 수학식 4를 통해 수행될 수 있다. [수학식 4]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "여기서, UC 및 SC는 각각 원래 피쳐맵과 가중치 벡터를 나타낸다. 출력 피쳐맵은 채널별 곱셈을 통해 산출된 다. 채널 어텐션 레이어는 피쳐 채널을 압축 및 확장하고 다양한 피쳐에 적응형 가중치를 할당한다. 채널 어텐션 레이어는 제한된 매개변수를 사용하여 오버피팅(overfitting) 문제를 크게 줄인다. SE(Squeeze and Excitation) 기반 어텐션은 계산 부담이 적기 때문에 훈련 시간에 거의 악영향을 미치지 않는다. 각 상기 채널을 하나의 숫자로 표현하는 스퀴즈(Squeeze)를 수행시킨 이후, 두 개의 FC(Fully-connected)층을 더하여 각 채널의 상대적 중요도를 산출하는 활성화(Excitation)를 수행함으로써, 상기 각 채널 간 상호의존성 을 모델링할 수 있다. 다음으로, 프로세서는 Dense Block layer 4의 출력을 평균 풀링하여 Fully connected layer를 통해 출력 값을 얻는다. 그리고 나서, 프로세서는 출력값에 대해 손실 함수를 통해 실제 정답과의 오차를 계산하여 가중치를 차례로 업데이트하는 역전파(back propagation)를 수행한다. 이때, 클래스간 유사성 효과를 최소화하기 위해 크로스 엔트로피 손실을 레이블 스무딩과 결합한다. 일 실시예로, COVID-19 분류를 위해 최종 레이어에 ReLU(Rectified Linear Unit) 활성화 함수를 추가하여 확률 을 계산한다. 그리고, 크로스 엔트로피 함수에 대한 입력으로 최대 확률을 제공하여 손실값을 계산한다. 일반적으로, 원-핫 벡터에서 n-길이 배열에 대해 하나의 요소가 1이고 나머지 요소가 0인 클래스 벡터가 변환된 다. 본 발명에서는 원래 크로스 엔트로피의 손실함수를 향상시키기 위해 레이블 스무딩을 채용한다. 네트워크 출력 과 타겟 사이의 크로스 엔트로피 예측 값은 역전파를 사용하여 하기의 수학식 5와 같이 계 산된다. *[수학식 5]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "여기서, 의 레이블은 트루 범주(true category)는 1이고, 나머지 범주는 0이다. 특히, 레이블 스무딩 손실은 바른 레이블 위치 손실을 검사한다. 잘못된 레이블 위치 손실을 무시하면, 모델이 잘못된 레이블 예측 가능성을 최소화하기 보다는 올바른 레이블 예측 가능성을 개선하기 위해 과도한 감시를 제공해야 한다. 훈련 샘플에서 레이블 스무딩을 사용하여 다음과 수학식 6과 같이 올바르지 않은 레이블 위치 손실을 모두 조사 하였다. [수학식 6]"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "여기서, 는 레이블 스무딩 작업 후에 얻은 샘플을 나타내고, 클래스 I에 대해, 는 균일한 분포를 따른 다. 따라서, 크로스 엔트로피 손실은 바른 클래스와 다른 클래스의 손실 모두에 어텐션을 제공한다. 이와 같은 본 발명의 실시 예에 의하면, 레이어 간 정보흐름을 최대화하면서 채널간 상대적 중요도에 따라 피쳐 맵을 재보정하며, 손실 함수에 라벨 스무딩(label smoothing)을 사용함으로써, 복합 병변 또는 복잡한 병변 중 에서 타겟 병변을 검출하는 성능을 개선할 수 있다. 지금까지는 타겟 병변 검출을 위한 학습을 수행하는 장치의 각 구성에 대하여 설명하였다. 이하에서는 타 겟 병변 검출을 위한 학습을 수행하는 장치의 동작에 대해 설명하기로 한다. 본 발명의 일 실시예에 따른 타겟 병변 검출을 위한 학습을 수행하는 방법은, 도 1의 장치와 실질적으로 동일한 구성에서 진행될 수 있다. 따라서, 도 1의 장치와 동일한 구성요소는 동일한 도면부호를 부여하고, 반복되는 설명은 생략한다. 도 5는 본 발명의 일 실시예에 따른 타겟 병변 검출을 위한 학습을 수행하는 방법의 순서도이다. 본 발명의 일 실시예에 따른 타겟 병변 검출을 위한 학습을 수행하는 방법은 컨볼루션을 수행하는 복수의 레이 어를 통해 트레이닝용 병변 이미지에 대응하는 피쳐맵을 생성하도록 하는 단계(S110), 각 상기 피쳐맵이 이전 레이어의 피쳐맵과 결합하여 다음 레이어로 전달되게 하는 연결 연산을 수행하는 단계(S120), 상기 피쳐맵에 대 해 각 채널 간 상호의존성을 모델링하는 단계(S130), 마지막 레이어의 출력값 및 이에 대응하는 레이블을 기반 으로 손실값을 산출하는 단계(S140) 및 상기 손실값에 기초하여 백프로파게이션을 수행하는 단계(S150)를 포함 한다. 한편, 전술한 타겟 병변 검출을 위한 학습을 수행하는 장치는, 프로세서, 메모리, 사용자 입력장치, 프레젠테이 션 장치 중 적어도 일부를 포함하는 컴퓨팅 장치에 의해 구현될 수 있다. 메모리는, 프로세서에 의해 실행되면 특정 태스크를 수행할 수 있도록 코딩되어 있는 컴퓨터-판독가능 소프트웨어, 애플리케이션, 프로그램 모듈, 루 틴, 인스트럭션(instructions), 및/또는 데이터 등을 저장하는 매체이다. 프로세서는 메모리에 저장되어 있는 컴퓨터-판독가능 소프트웨어, 애플리케이션, 프로그램 모듈, 루틴, 인스트럭션, 및/또는 데이터 등을 판독하여 실행할 수 있다. 사용자 입력장치는 사용자로 하여금 프로세서에게 특정 태스크를 실행하도록 하는 명령을 입력하거나 특정 태스 크의 실행에 필요한 데이터를 입력하도록 하는 수단일 수 있다. 사용자 입력장치는 물리적인 또는 가상적인 키 보드나 키패드, 키버튼, 마우스, 조이스틱, 트랙볼, 터치-민감형 입력수단, 또는 마이크로폰 등을 포함할 수 있 다. 프레젠테이션 장치는 디스플레이, 프린터, 스피커, 또는 진동장치 등을 포함할 수 있다. 컴퓨팅 장치는 스마트폰, 태블릿, 랩탑, 데스크탑, 서버, 클라이언트 등의 다양한 장치를 포함할 수 있다. 컴퓨 팅 장치는 하나의 단일한 스탠드-얼론 장치일 수도 있고, 통신망을 통해 서로 협력하는 다수의 컴퓨팅 장치들로 이루어진 분산형 환경에서 동작하는 다수의 컴퓨팅 장치를 포함할 수 있다. 또한 전술한 타겟 병변 검출을 위한 학습을 수행하는 방법은, 프로세서를 구비하고, 또한 프로세서에 의해 실행 되면 인공지능 모델을 활용한 타겟 병변 검출을 위한 학습을 수행할 수 있도록 코딩된 컴퓨터 판독가능 소프트 웨어, 애플리케이션, 프로그램 모듈, 루틴, 인스트럭션, 및/또는 데이터 구조 등을 저장한 메모리를 구비하는 컴퓨팅 장치에 의해 실행될 수 있다. 상술한 본 실시예들은 다양한 수단을 통해 구현될 수 있다. 예를 들어, 본 실시예들은 하드웨어, 펌웨어 (firmware), 소프트웨어 또는 그것들의 결합 등에 의해 구현될 수 있다. 하드웨어에 의한 구현의 경우, 본 실시예들에 따른 인공지능 모델을 활용한 타겟 병변 검출을 위한 학습은 하나 또는 그 이상의 ASICs(Application Specific Integrated Circuits), DSPs(Digital Signal Processors), DSPDs(Digital Signal Processing Devices), PLDs(Programmable Logic Devices), FPGAs(Field Programmable Gate Arrays), 프로세서, 컨트롤러, 마이크로 컨트롤러 또는 마이크로 프로세서 등에 의해 구현될 수 있다. 예를 들어, 실시예들에 따른 타겟 병변 검출을 위한 학습은 심층 신경망의 뉴런(neuron)과 시냅스(synapse)가 반도체 소자들로 구현된 인공지능 반도체 장치를 이용하여 구현될 수 있다. 이때 반도체 소자는 현재 사용하는 반도체 소자들, 예를 들어 SRAM이나 DRAM, NAND 등일 수도 있고, 차세대 반도체 소자들, RRAM이나 STT MRAM, PRAM 등일 수도 있고, 이들의 조합일 수도 있다. 실시예들에 따른 타겟 병변 검출을 위한 학습을 인공지능 반도체 장치를 이용하여 구현할 때, 모델을 소프트웨 어로 학습한 결과(가중치)를 어레이로 배치된 시냅스 모방소자에 전사하거나 인공지능 반도체 장치에서 학습을 진행할 수도 있다. 펌웨어나 소프트웨어에 의한 구현의 경우, 본 실시예들에 따른 타겟 병변 검출을 위한 학습은 이상에서 설명된 기능 또는 동작들을 수행하는 장치, 절차 또는 함수 등의 형태로 구현될 수 있다. 소프트웨어 코드는 메모리 유 닛에 저장되어 프로세서에 의해 구동될 수 있다. 메모리 유닛은 상기 프로세서 내부 또는 외부에 위치하여, 이 미 공지된 다양한 수단에 의해 프로세서와 데이터를 주고 받을 수 있다. 또한, 위에서 설명한 \"시스템\", \"프로세서\", \"컨트롤러\", \"컴포넌트\", \"모듈\", \"인터페이스\", \"모델\", 또는 \"유 닛\" 등의 용어는 일반적으로 컴퓨터 관련 엔티티 하드웨어, 하드웨어와 소프트웨어의 조합, 소프트웨어 또는 실행 중인 소프트웨어를 의미할 수 있다. 예를 들어, 전술한 구성요소는 프로세서에 의해서 구동되는 프로세스, 프로세서, 컨트롤러, 제어 프로세서, 개체, 실행 스레드, 프로그램 및/또는 컴퓨터일 수 있지만 이에 국한되지 않는다. 예를 들어, 컨트롤러 또는 프로세서에서 실행 중인 애플리케이션과 컨트롤러 또는 프로세서가 모두 구 성 요소가 될 수 있다. 하나 이상의 구성 요소가 프로세스 및/또는 실행 스레드 내에 있을 수 있으며, 구성 요 소들은 하나의 장치(예: 시스템, 컴퓨팅 디바이스 등)에 위치하거나 둘 이상의 장치에 분산되어 위치할 수 있다. 한편, 또 다른 실시예는 전술한 타겟 병변 검출을 위한 학습을 수행하는, 컴퓨터 기록매체에 저장되는 컴퓨터 프로그램을 제공한다. 또한 또 다른 실시예는 전술한 타겟 병변 검출을 위한 학습을 실현시키기 위한 프로그램 을 기록한 컴퓨터로 읽을 수 있는 기록매체를 제공한다. 기록매체에 기록된 프로그램은 컴퓨터에서 읽히어 설치되고 실행됨으로써 전술한 단계들을 실행할 수 있다. 이 와 같이, 컴퓨터가 기록매체에 기록된 프로그램을 읽어 들여 프로그램으로 구현된 기능들을 실행시키기 위하여, 전술한 프로그램은 컴퓨터의 프로세서(CPU)가 컴퓨터의 장치 인터페이스(Interface)를 통해 읽힐 수 있는 C, C++, JAVA, 기계어 등의 컴퓨터 언어로 코드화된 코드(Code)를 포함할 수 있다. 이러한 코드는 전술한 기능들을 정의한 함수 등과 관련된 기능적인 코드를 포함할 수 있고, 전술한 기능들을 컴 퓨터의 프로세서가 소정의 절차대로 실행시키는데 필요한 실행 절차 관련 제어 코드를 포함할 수도 있다. 또한, 이러한 코드는 전술한 기능들을 컴퓨터의 프로세서가 실행시키는데 필요한 추가 정보나 미디어가 컴퓨터 의 내부 또는 외부 메모리의 어느 위치(주소 번지)에서 참조 되어야 하는지에 대한 메모리 참조 관련 코드를 더 포함할 수 있다. 또한, 컴퓨터의 프로세서가 전술한 기능들을 실행시키기 위하여 원격(Remote)에 있는 어떠한 다른 컴퓨터나 서 버 등과 통신이 필요한 경우, 코드는 컴퓨터의 프로세서가 컴퓨터의 통신 모듈을 이용하여 원격(Remote)에 있는 어떠한 다른 컴퓨터나 서버 등과 어떻게 통신해야만 하는지, 통신 시 어떠한 정보나 미디어를 송수신해야 하는 지 등에 대한 통신 관련 코드를 더 포함할 수도 있다. 이상에서 전술한 바와 같은 프로그램을 기록한 컴퓨터로 읽힐 수 있는 기록매체는, 일 예로, ROM, RAM, CD-ROM, 자기 테이프, 플로피디스크, 광 미디어 저장장치 등이 있다. 또한 컴퓨터가 읽을 수 있는 기록매체는 네트워크로 연결된 컴퓨터 시스템에 분산되어, 분산방식으로 컴퓨터가 읽을 수 있는 코드가 저장되고 실행될 수 있다. 그리고, 본 발명을 구현하기 위한 기능적인(Functional) 프로그램과 이와 관련된 코드 및 코드 세그먼트 등은,"}
{"patent_id": "10-2022-0091341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "기록매체를 읽어서 프로그램을 실행시키는 컴퓨터의 시스템 환경 등을 고려하여, 본 발명이 속하는 기술분야의 프로그래머들에 의해 용이하게 추론되거나 변경될 수도 있다. 전술한 타겟 병변 검출을 위한 학습은, 컴퓨터에 의해 실행되는 애플리케이션이나 프로그램 모듈과 같은 컴퓨터 에 의해 실행 가능한 명령어를 포함하는 기록 매체의 형태로도 구현될 수 있다. 컴퓨터 판독 가능 매체는 컴퓨 터에 의해 액세스될 수 있는 임의의 가용 매체일 수 있고, 휘발성 및 비휘발성 매체, 분리형 및 비분리형 매체 를 모두 포함한다. 또한, 컴퓨터 판독가능 매체는 컴퓨터 저장 매체를 모두 포함할 수 있다. 컴퓨터 저장 매체 는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보의 저장을 위한 임의의 방법 또는 기술로 구현된 휘발성 및 비휘발성, 분리형 및 비분리형 매체를 모두 포함한다. 전술한 타겟 병변 검출을 위한 학습은, 단말기에 기본적으로 설치된 애플리케이션(이는 단말기에 기본적으로 탑 재된 플랫폼이나 운영체제 등에 포함된 프로그램을 포함할 수 있다)에 의해 실행될 수 있고, 사용자가 애플리케 이션 스토어 서버, 애플리케이션 또는 해당 서비스와 관련된 웹 서버 등의 애플리케이션 제공 서버를 통해 마스 터 단말기에 직접 설치한 애플리케이션(즉, 프로그램)에 의해 실행될 수도 있다. 이러한 의미에서, 전술한 타겟 병변 검출을 위한 학습은 단말기에 기본적으로 설치되거나 사용자에 의해 직접 설치된 애플리케이션(즉, 프로그 램)으로 구현되고 단말기에 등의 컴퓨터로 읽을 수 있는 기록매체에 기록될 수 있다. 이상의 설명은 본 발명의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 발명이 속하는 기술 분야에 서 통상의 지식을 가진 자라면 본 발명의 본질적인 품질에서 벗어나지 않는 범위에서 다양한 수정 및 변형이 가 능할 것이다. 따라서, 본 발명에 개시된 실시예들은 본 발명의 기술 사상을 한정하기 위한 것이 아니라 설명하 기 위한 것이고, 이러한 실시예에 의하여 본 발명의 기술 사상의 범위가 한정되는 것은 아니다. 본 발명의 보호범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 균등한 범위 내에 있는 모든 기술사상은 본 발명의 권 리범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2022-0091341", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 DAM-Net 기반으로 타겟 병변 검출을 위한 학습을 수행하는 컴퓨팅 장치의 구성을 도시하는 블록도이다. 도 2는 본 발명의 일 실시예에 따른 DAM-NET의 구성 및 학습 과정을 개략적으로 도시하는 개념도이다.도 3은 좀 더 구체적인 DAM-NET의 구성 및 학습 과정을 도시하는 흐름도이다. 도 4는 스퀴즈 및 활성화를 설명하기 위한 개념도이다. 도 5는 본 발명의 일 실시예에 따른 타겟 병변 검출을 위한 학습을 수행하는 방법의 순서도이다."}
