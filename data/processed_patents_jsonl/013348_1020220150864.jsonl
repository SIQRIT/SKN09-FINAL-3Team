{"patent_id": "10-2022-0150864", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0069399", "출원번호": "10-2022-0150864", "발명의 명칭": "객체 관계 특징을 고려하는 유사 이미지 검색 방법 및 장치", "출원인": "국립한국교통대학교산학협력단", "발명자": "송석일"}}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "유사 이미지 검색 장치가 이미지 특징과 객체 관계 특징을 고려하여 객체 관계 특징을 고려하는 유사 이미지를검색하는 방법에 있어서,질의 이미지로부터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 단계;데이터베이스에 저장된 각 원본 이미지의 전체 특징과 상기 질의 이미지의 전체 특징 간의 제1 유사도를 산출하는 단계;상기 데이터베이스에 저장된 각 원본 이미지의 객체 클래스 목록과 상기 질의 이미지의 객체 클래스 목록 간의제2 유사도를 산출하는 단계;상기 데이터베이스에 저장된 각 원본 이미지의 객체 관계 특징과 상기 질의 이미지의 객체 관계 특징 간의 제3유사도를 산출하는 단계; 및상기 제1 내지 제3 유사도를 기반으로 상기 객체 관계 특징을 고려하는 유사 이미지를 결정하는 단계를 포함하는,객체 관계 특징을 고려하는 유사 이미지 검색 방법."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 유사 이미지를 결정하는 단계는,상기 제1 유사도 내지 제3 유사도 각각에 가중치를 부여하고 합산하여 상기 각 원본 이미지와 상기 질의 이미지간의 최종 유사도를 산출하는 단계; 및상기 원본 이미지들 중 최종 유사도가 높은 순으로 상기 유사 이미지를 결정하는 단계를 포함하는,객체 관계 특징을 고려하는 유사 이미지 검색 방법."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 제1 유사도와 상기 제3 유사도는 RBF(Radial Basis Function) 유사도 척도를 기반으로 산출되고, 상기 제2유사도는 Jaccard를 기반으로 산출되는,객체 관계 특징을 고려하는 유사 이미지 검색 방법."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 질의 이미지로부터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 단계는,VGGNet의 완전 연결 계층에서 특징 벡터를 추출하여 상기 이미지 전체 특징으로 설정하는 단계;YOLO v4의 밀집 예측(Dense Prediction) 부분에서 객체의 클래스 값을 추출하여 상기 객체 클래스 목록으로 설정하는 단계; 및상기 질의 이미지로부터 객체 클래스 목록을 추출하고, 상기 객체 클래스 목록을 이용하여 객체 이미지를 생성한 후, VGGNet을 기반으로 상기 객체 이미지의 객체 관계 특징을 추출하는 단계를 포함하는,객체 관계 특징을 고려하는 유사 이미지 검색 방법.공개특허 10-2024-0069399-3-청구항 5 제 4 항에 있어서,상기 객체 이미지를 생성하는 단계는,객체의 바운딩 박스, 객체의 클래스 및 객체의 신뢰도 점수 값에 기초하여 상기 객체 이미지를 생성하는,객체 관계 특징을 고려하는 유사 이미지 검색 방법."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 객체 이미지를 생성하는 단계는,상기 객체의 바운딩 박스 안에 포함된 모든 픽셀 값을 객체의 클래스 값으로 채우고 배경은 0값으로 채우며, 원본 이미지와 동일한 크기의 이미지로 생성하고,두 가지 이상의 객체 영역이 겹칠 경우, 신뢰도 점수가 더 높은 객체의 클래스 값을 우선으로 사용하는,객체 관계 특징을 고려하는 유사 이미지 검색 방법."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "기 학습된 인공지능 모델에 대한 정보를 저장하는 메모리부;복수의 원본 이미지, 상기 복수의 원본 이미지의 각 전체 특징, 각 객체 클래스 목록 및 각 객체 관계 특징을저장하는 데이터베이스;질의 이미지와 상기 복수의 원본 이미지 간의 전체 특징을 대비하는 제1 유사도, 객체 클래스 목록을 대비하는제2 유사도 및 객체 관계 특징을 대비하는 제3 유사도를 산출하여, 상기 제1 내지 제3 유사도를 기반으로 상기객체 관계 특징을 고려하는 유사 이미지를 결정하는 프로세서를 포함하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 프로세서는,상기 제1 유사도 내지 제3 유사도 각각에 가중치를 부여하고 합산하여 상기 각 원본 이미지와 상기 질의 이미지간의 최종 유사도를 산출하는 동작, 및 상기 원본 이미지들 중 최종 유사도가 높은 순으로 상기 유사 이미지를결정하는 동작을 실행하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서,상기 프로세서는,상기 제1 유사도와 상기 제3 유사도는 RBF(Radial Basis Function) 유사도 척도를 기반으로 산출하고, 상기 제2유사도는 Jaccard를 기반으로 산출하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7 항에 있어서,상기 프로세서는,VGGNet의 완전 연결 계층에서 특징 벡터를 추출하여 상기 이미지 전체 특징으로 설정하는 동작, YOLO v4의 밀집공개특허 10-2024-0069399-4-예측(Dense Prediction) 부분에서 객체의 클래스 값을 추출하여 상기 객체 클래스 목록으로 설정하는 동작, 및상기 질의 이미지로부터 객체 클래스 목록을 추출하고, 상기 객체 클래스 목록을 이용하여 객체 이미지를 생성한 후, VGGNet을 기반으로 상기 객체 이미지의 객체 관계 특징을 추출하는 동작을 실행하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,상기 프로세서는,객체의 바운딩 박스, 객체의 클래스, 및 객체의 신뢰도 점수 값에 기초하여 상기 객체 이미지를 생성하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 프로세서는,상기 객체의 바운딩 박스 안에 포함된 모든 픽셀 값을 객체의 클래스 값으로 채우고 배경은 0값으로 채우며, 원본 이미지와 동일한 크기의 이미지로 상기 객체 이미지를 생성하고, 두 가지 이상의 객체 영역이 겹칠 경우, 신뢰도 점수가 더 높은 객체의 클래스 값을 우선으로 사용하는,객체 관계 특징을 고려하는 유사 이미지 검색 장치."}
{"patent_id": "10-2022-0150864", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "컴퓨터 프로그램을 저장하고 있는 컴퓨터 판독 가능 기록매체로서,상기 컴퓨터 프로그램은, 프로세서에 의해 실행되면,질의 이미지로부터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 단계;데이터베이스에 저장된 각 원본 이미지의 전체 특징과 상기 질의 이미지의 전체 특징 간의 제1 유사도를 산출하는 단계;상기 데이터베이스에 저장된 각 원본 이미지의 객체 클래스 목록과 상기 질의 이미지의 객체 클래스 목록 간의제2 유사도를 산출하는 단계;상기 데이터베이스에 저장된 각 원본 이미지의 객체 관계 특징과 상기 질의 이미지의 객체 관계 특징 간의 제3유사도를 산출하는 단계; 및상기 제1 내지 제3 유사도를 기반으로 상기 객체 관계 특징을 고려하는 유사 이미지를 결정하는 단계를 포함하는 방법을 상기 프로세서가 수행하도록 하기 위한 명령어를 포함하는, 컴퓨터 판독 가능한 기록매체."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 객체 관계 특징을 고려하는 유사 이미지 검색 방법 및 장치에 관한 것으로, 더욱 상세하게는 이미지 전체 특징은 물론 이미지 내의 객체 및 객체 간의 관계를 더 고려하여 유사 이미지 검색의 정확도를 높이는 객체 관계 특징을 고려하는 유사 이미지 검색 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 객체 관계 특징을 고려하는 유사 이미지 검색 방법 및 장치에 관한 것으로, 더욱 상세하게는 이미지 전체 특징은 물론 이미지 내의 객체 및 객체 간의 관계를 더 고려하여 유사 이미지 검색의 정확도를 높이는 객 체 관계 특징을 고려하는 유사 이미지 검색 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "유사 이미지 검색(Contents Based Image Retrieval, CBIR) 기술은 데이터베이스에서 질의 이미지와 가장 유사 한 이미지를 검색하는 기술이다. 유사 이미지 검색의 정확도는 질의 및 데이터베이스 이미지 특징 추출 방법과 이와 관련된 유사도 측정 방법에 의해 결정된다.기본의 유사 이미지 특징 추출 방법은 수작업 기반의 특징 추출 방법과 DCNN(Deep Convolutional Neural Network) 기반 특징 추출 방법으로 분류될 수 있다. 수작업 기반의 특징 추출 방법에는 SIFT(Scale-Invariant Feature Transform)와 같은 방법이 존재한다. SIFT는 이미지의 크기 및 회전에 독립적인 특징을 추출한다. 또한, 특징을 추출하기 위한 알고리즘을 수작업으로 설계하였다. 원본 이미지의 크기를 다양하게 조정한 후에 조정된 이미지들 전부를 점진적으로 블러링(Blurring)하여, 조정된 이미지 하나 당 여러 개의 이미지를 얻는다. 이렇게 만들어진 이미지들을 통해 키 포인트(key point)를 생성하고 키 포인트의 지문(finger-print)을 특징값 으로 사용한다. DCNN 기반의 특징 추출 방법으로서, DCNN 모델의 특정 계층의 출력을 이미지의 특징 벡터로 사용하기도 한다. 그러나 종래의 DCNN 기반의 이미지 특징 추출 방법들은 이미지 전체의 특징 및 객체의 형태, 객체의 클래스를 고려하고 있으나, 객체 간의 관계나 객체의 위치, 크기 등을 고려하지 못하는 한계가 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 공개특허 제10-2012-0102616호(2012.09.18)"}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "따라서, 본 발명은 상술한 바와 같은 문제를 개선하기 위하여 제안된 것으로, 이미지 전체 특징뿐만 아니라 이 미지 내의 객체 및 객체 간의 관계를 더 고려하여 유사 이미지 검색의 정확도를 높이는 객체 관계 특징을 고려 하는 유사 이미지 검색 방법 및 장치를 제공하는데 목적이 있다. 본 발명의 목적은 이상에서 언급한 것으로 제한되지 않으며, 언급되지 않은 또 다른 목적들은 아래의 기재로부 터 본 발명이 속하는 기술 분야의 통상의 지식을 가진 자에게 명확히 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기와 같은 목적을 달성하기 위한 본 발명의 실시예에 따른 유사 이미지 검색 장치가 이미지 특징과 객체 관계 특징을 고려하여 객체 관계 특징을 고려하는 유사 이미지를 검색하는 방법은, 질의 이미지로부터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 단계와, 데이터베이스에 저장된 각 원본 이미지의 전체 특징과 상기 질의 이미지의 전체 특징 간의 제1 유사도를 산출하는 단계와, 상기 데이터베이스에 저장된 각 원 본 이미지의 객체 클래스 목록과 상기 질의 이미지의 객체 클래스 목록 간의 제2 유사도를 산출하는 단계와, 상 기 데이터베이스에 저장된 각 원본 이미지의 객체 관계 특징과 상기 질의 이미지의 객체 관계 특징 간의 제3 유 사도를 산출하는 단계, 및 상기 제1 내지 제3 유사도를 기반으로 상기 객체 관계 특징을 고려하는 유사 이미지 를 결정하는 단계를 포함할 수 있다. 다른 일 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 장치는, 기 학습된 인공지능 모델에 대한 정보를 저장하는 메모리부와, 복수의 원본 이미지, 상기 복수의 원본 이미지의 각 전체 특징, 각 객체 클래스 목록 및 각 객체 관계 특징을 저장하는 데이터베이스와, 질의 이미지와 상기 복수의 원본 이미지 간의 전체 특 징을 대비하는 제1 유사도, 객체 클래스 목록을 대비하는 제2 유사도 및 객체 관계 특징을 대비하는 제3 유사도 를 산출하여, 상기 제1 내지 제3 유사도를 기반으로 상기 객체 관계 특징을 고려하는 유사 이미지를 결정하는 프로세서를 포함할 수 있다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법에 따르면, 이미지 전체 특징은 물 론 이미지 내의 객체 및 객체 간의 관계를 더 고려함으로써, 유사 이미지 검색의 정확도를 높일 수 있다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과는 이상에서 언급한 것으로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로부 터 본 발명이 속하는 기술 분야의 통상의 지식을 가진 자에게 명확히 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 목적 및 효과, 그리고 그것들을 달성하기 위한 기술적 구성들은 첨부되는 도면과 함께 상세하게 뒤에 설명이 되는 실시 예들을 참조하면 명확해질 것이다. 본 발명을 설명함에 있어서 공지 기능 또는 구성에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명을 생략할 것 이다. 그리고 뒤에 설명되는 용어들은 본 발명에서의 구조, 역할 및 기능 등을 고려하여 정의된 용어들로서 이 는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러나 본 발명은 이하에서 개시되는 실시 예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있"}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "다. 단지 본 실시 예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술분야에서 통상의 지식을 가 진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 오로지 특허청구범위에 기재된 청구항의 범주에 의하여 정의될 뿐이다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 명세서 전체에서, 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다 른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 이하에서는 첨부한 도면을 참조하며, 본 발명의 바람직한 실시예들을 보다 상세하게 설명하기로 한다. 이하 첨부된 도면을 참고하여 본 발명을 상세히 설명하기로 한다. 도 1은 본 발명의 일 실시예에 따른 유사 이미지 검색 장치의 구성을 도시하는 블록도이다. 유사 이미지 검색 장치는 학습 데이터를 이용하여 기계 학습을 수행할 수 있는 장치로서, 인공 신경망으로 구성된 모델을 이용하여 학습하는 장치를 포함할 수 있다. 즉, 유사 이미지 검색 장치는 데이터 마이닝, 데이터 분석, 지능형 의사 결정 및 기계 학습 알고리즘을 위 해 이용될 정보를 수신, 분류, 저장 및 출력하도록 구성될 수 있다. 여기서, 기계 학습 알고리즘은 딥 러닝 알 고리즘을 포함할 수 있다. 즉, 유사 이미지 검색 장치는 적어도 하나의 외부 장치(미도시) 또는 단말기(미도시)와 통신할 수 있고, 외부 장치를 대신하여 혹은 도와 데이터를 분석하거나 학습하여 결과를 도출할 수 있다. 여기서, 다른 장치를 도운다는 의미는 분산 처리를 통한 연산력의 분배를 의미할 수 있다. 유사 이미지 검색 장치는 인공 신경망을 학습하기 위한 다양한 장치로서, 통상적으로 서버를 의미할 수 있 고, 신경망 학습 장치 또는 신경망 학습 서버 등으로 지칭할 수 있다. 특히, 유사 이미지 검색 장치는 단일한 서버뿐만 아니라 복수의 서버 세트, 클라우드 서버 또는 이들의 조 합으로 구현될 수 있다. 즉, 유사 이미지 검색 장치는 복수로 구성되어 신경망 학습 장치 세트(혹은 클라우드 서버)를 구성할 수 있고, 신경망 학습 장치 세트에 포함된 적어도 하나 이상의 유사 이미지 검색 장치는 분산 처리를 통하여 데이터 분석 또는 학습하여 결과를 도출할 수 있다. 유사 이미지 검색 장치는 주기적으로 혹은 요청에 의하여 외부 장치(미도시)에 기계 학습 또는 딥 러닝에 의하여 학습한 모델을 전송할 수 있다. 도 1을 참조하면, 유사 이미지 검색 장치는 통신부, 입력부, 메모리, 러닝 프로세서, 전원 공급부 및 프로세서 등을 포함할 수 있다. 통신부는 무선 통신부(미도시) 및 인터페이스부(미도시)를 포함하는 구성을 의미할 수 있다. 즉, 통신부 는 유무선 통신이나 인터페이스를 통하여 다른 장치와 데이터를 송수신할 수 있다. 입력부는 모델 학습을 위한 훈련 데이터 또는 학습된 모델을 이용하여 출력을 획득하기 위한 입력 데이터 등을 획득할 수 있다. 입력부는 가공되지 않은 입력 데이터를 획득할 수도 있으며, 이 경우 러닝 프로세서 또는 프로세서 는 획득한 데이터를 전처리하여 모델 학습에 입력이 가능한 훈련 데이터 또는 전처리된 입력 데이터를 생 성할 수 있다. 이때, 입력부는 가공되지 않은 입력 데이터를 획득할 수도 있으며, 이 경우 러닝 프로세서 또는 프로 세서는 획득한 데이터를 전처리하여 모델 학습에 입력이 가능한 훈련 데이터 또는 전처리된 입력 데이터를 생성할 수 있다. 이때, 입력부에서 수행하는 입력 데이터에 대한 전처리는, 입력 데이터로부터 입력 특징점(input featur e)을 추출하는 것을 의미할 수 있다. 또한, 입력부는 통신부를 통하여 데이터를 수신함으로써 데이터를 획득할 수도 있다. 메모리는 러닝 프로세서 또는 유사 이미지 검색 장치에서 학습된 모델을 저장할 수 있다. 이때, 메모리는 필요에 따라 학습된 모델을 학습 시점 또는 학습 진척도 등에 따라 복수의 버전으로 구분 하여 저장할 수 있다. 이때, 메모리는 입력부에서 획득한 입력 데이터, 모델 학습을 위하여 이용되는 학습 데이터(또는 훈 련 데이터), 모델의 학습 히스토리 등을 저장할 수 있다. 이때, 메모리에 저장된 입력 데이터는 모델 학습에 적합하게 가공된 데이터뿐만 아니라, 가공되지 않은 입 력 데이터 그 자체일 수 있다. 메모리는 모델 저장부 및 데이터베이스 등을 포함할 수 있다. 모델 저장부는 러닝 프로세스을 통하여 학습 중인 또는 학습된 신경망 모델(또는 인공 신경망, 131 a)을 저장하며, 학습을 통하여 모델이 업데이트되면 업데이트된 모델을 저장한다. 이때, 모델 저장부는 필 요에 따라 학습된 모델을 학습 시점 또는 학습 진척도 등에 따라 복수의 버전으로 구분하여 저장할 수 있다. 도 1에 도시된 인공 신경망(131a)은 복수의 은닉층을 포함하는 인공 신경망의 하나의 예시일 뿐이며, 본 발명의 인공 신경망이 이에 한정되는 것은 아니다. 인공 신경망(131a)은 하드웨어, 소프트웨어 또는 하드웨어와 소프트웨어의 조합으로 구현될 수 있다. 인공 신경 망(131a)의 일부 또는 전부가 소프트웨어로 구현되는 경우, 인공 신경망(131a)을 구성하는 하나 이상의 명령어 는 메모리에 저장될 수 있다. 데이터베이스는 입력부에서 획득한 입력 데이터, 모델 학습을 위하여 이용되는 학습 데이터(또는 훈 련 데이터), 모델의 학습 히스토리 등을 저장할 수 있다. 데이터베이스에 저장된 입력 데이터는 모델 학습에 적합하게 가공된 데이터뿐만 아니라, 가공되지 않은 입 력 데이터 그 자체일 수 있다. 일 실시예로, 데이터베이스는 이미지로부터 이미지 전체 특징을 추출하는 모델, 이미지로부터 객체 클래스 목록을 추출하는 모델 및 이미지로부터 객체 관계 특징을 추출하는 모델을 저장할 수 있다. 러닝 프로세서는 훈련 데이터 또는 트레이닝 셋을 이용하여 인공 신경망(131a)을 훈련시킬 수 있다. 러닝 프로세서는 프로세서가 입력부를 통해 획득한 입력 데이터를 전처리한 데이터를 바로 획득 하여 인공 신경망(131a)을 학습하거나, 데이터베이스에 저장된 전처리된 입력 데이터를 획득하여 인공 신 경망(131a)을 학습할 수 있다. 구체적으로, 러닝 프로세서는 앞서 설명한 다양한 학습 기법을 이용하여 인공 신경망(131a)을 반복적으로 학습시킴으로써, 인공신경망(131a)의 최적화된 모델 파라미터들을 결정할 수 있다. 본 명세서에서는 학습 데이터를 이용하여 학습됨으로써 파라미터가 결정된 인공 신경망을 학습 모델 또는 학습 된 모델이라 칭할 수 있다. 이때, 학습 모델은 인공 신경망의 학습 장치에 탑재된 상태에서 결과 값을 추론할 수도 있으며, 통신부 를 통해 단말기 또는 외부 장치와 같은 다른 장치에 전송되어 탑재될 수도 있다. 또한, 학습 모델이 업데이트되는 경우, 업데이트된 학습 모델은 통신부를 통해 단말기 또는 외부 장치와 같은 다른 장치에 전송되어 탑재될 수 있다. 또한, 학습 모델은 학습 데이터가 아닌 새로운 입력 데이터에 대하여 결과 값을 추론해 내는데 사용될 수 있다. 러닝 프로세서는 데이터 마이닝, 데이터 분석, 지능형 의사 결정, 및 기계 학습 알고리즘 및 기술을 위해 이용될 정보를 수신, 분류, 저장 및 출력하도록 구성될 수 있다. 러닝 프로세서는 유사 이미지 검색 장치에 통합되거나 구현된 메모리를 포함할 수 있다. 일부 실시 예에서, 러닝 프로세서는 메모리를 사용하여 구현될 수 있다. 선택적으로 또는 부가적으로, 러닝 프로세서는 클라우드 컴퓨팅 환경에서 유지되는 메모리, 또는 네트워크 와 같은 통신 방식을 통해 단말기에 의해 액세스 가능한 다른 원격 메모리 위치를 이용하여 구현될 수 있다. 러닝 프로세서는 일반적으로 감독 또는 감독되지 않은 학습, 데이터 마이닝, 예측 분석 또는 다른 머신에 서 사용하기 위해 데이터를 식별, 색인화, 카테고리화, 조작, 저장, 검색 및 출력하기 위해 데이터를 하나 이상 의 데이터베이스에 저장하도록 구성될 수 있다. 여기서, 데이터베이스는 메모리, 클라우드 컴퓨팅 환경에 서 유지되는 메모리, 또는 네트워크와 같은 통신 방식을 통해 단말기에 의해 액세스 가능한 다른 원격 메모리 위치를 이용하여 구현될 수 있다. 러닝 프로세서에 저장된 정보는 다양한 상이한 유형의 데이터 분석 알고리즘 및 기계 학습 알고리즘 중 임 의의 것을 사용하여 프로세서에 의해 이용될 수 있다. 이러한, 알고리즘의 예로는, k-최근 인접 시스템, 퍼지 논리, 신경회로망, 볼츠만 기계, 벡터 양자화, 펄스 신 경망, 지원 벡터 기계, 최대 마진 분류기, 힐 클라이밍, 유도 논리 시스템 베이지안 네트워크, 페리트넷(예: 유 한 상태 머신, 밀리 머신, 무어 유한 상태 머신), 분류기 트리(예: 퍼셉트론 트리, 지원 벡터 트리, 마코프 트 리, 의사 결정 트리 포리스트, 임의의 포리스트), 판독 모델 및 시스템, 인공 융합, 센서 융합, 이미지 융합, 보강 학습, 증강 현실, 패턴 인식, 자동화된 계획 등을 포함한다. 프로세서는 데이터 분석 및 기계 학습 알고리즘을 사용하여 결정되거나, 생성된 정보에 기초하여 유사 이 미지 검색 장치의 적어도 하나의 실행 가능한 동작을 결정 또는 예측할 수 있다. 이를 위해, 프로세서 는 러닝 프로세서의 데이터를 요청, 검색, 수신 또는 활용할 수 있고, 상기 적어도 하나의 실행 가능 한 동작 중 예측되는 동작이나, 바람직한 것으로 판단되는 동작을 실행하도록 유사 이미지 검색 장치를 제 어할 수 있다. 프로세서는 지능적 에뮬레이션(즉, 지식 기반 시스템, 추론 시스템 및 지식 획득 시스템)을 구현하는 다양 한 기능을 수행할 수 있다. 이는 적응 시스템, 기계 학습 시스템, 인공신경망 등을 포함하는, 다양한 유형의 시 스템(예컨대, 퍼지 논리 시스템)에 적용될 수 있다. 프로세서는 또한 I/O 처리 모듈, 환경 조건 모듈, 음성-텍스트(STT)처리 모듈, 자연어 처리 모듈, 작업 흐 름 처리 모듈 및 서비스 처리 모듈과 같이, 음성 및 자연 언어 음성 처리를 수반하는 연산을 가능하게 하는 서 브 모듈을 포함할 수 있다. 이들 서브 모듈들 각각은, 단말기에서의 하나 이상의 시스템 또는 데이터 및 모델, 또는 이들의 서브셋 또는 수 퍼 셋에 대한 액세스를 가질 수 있다. 또한, 이들 서브 모듈들 각각은, 어휘 색인, 사용자 데이터, 작업 흐름 모델, 서비스 모델 및 자동 음성 인식(ASR) 시스템을 비롯한 다양한 기능을 제공할 수 있다.다른 실시예에서, 프로세서 또는 유사 이미지 검색 장치의 다른 양태는 서브 모듈, 시스템, 또는 데 이터 및 모델로 구현될 수 있다. 일부 예에서, 러닝 프로세서의 데이터에 기초하여, 프로세서는 사용자 입력 또는 자연 언어 입력으로 표현된 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항을 검출하고 감지하도록 구성될 수 있다. 프로세서는 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항을 완전히 결정하는데 필요한 정보를 능동 적으로 이끌어 내고, 획득할 수 있다. 예를 들어, 프로세서는 역사적 입력 및 출력, 패턴 매칭, 모호하지 않은 단어, 입력 의도 등을 포함하는 과거 데이터를 분석함으로써 요구 사항을 결정하는데 필요한 정보를 능동 적으로 이끌어 낼 수 있다. 프로세서는 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항에 응답하는 기능을 실행하기 위한 태스크 흐름을 결정할 수 있다. 프로세서는 러닝 프로세서에서 프로세싱 및 저장을 위한 정보를 수집하기 위해, 단말기에서 하나 이 상의 감지 컴포넌트를 통해 분석 및 기계 학습 작업에 사용되는 신호 또는 데이터를 수집, 감지, 추출, 검출 및 /또는 수신하도록 구성될 수 있다. 정보 수집은 센서를 통해 정보를 감지하는 것, 메모리에 저장된 정보를 추출하는 것 또는 통신 수단을 통 해 외부 단말기, 엔티티 또는 외부 저장 장치로부터 정보를 수신하는 것을 포함할 수 있다. 프로세서는 유사 이미지 검색 장치에서 사용 히스토리 정보를 수집하여 메모리에 저장할 수 있 다. 프로세서는 저장된 사용 히스토리 정보 및 예측 모델링을 사용하여 특정 기능을 실행하기 위한 최상의 매 치를 결정할 수 있다. 프로세서는 입력부로부터 이미지 정보(또는 해당 신호), 오디오 정보(또는 해당 신호), 데이터 또는 사용 자 입력 정보를 수신할 수 있다. 프로세서는 정보를 실시간으로 수집하고, 정보(예를 들어, 지식 그래프, 명령 정책, 개인화 데이터베이스, 대화 엔진 등)를 처리 또는 분류하고, 처리된 정보를 메모리 또는 러닝 프로세서에 저장할 수 있다. 유사 이미지 검색 장치의 동작이 데이터 분석 및 기계 학습 알고리즘 및 기술에 기초하여 결정될 때, 프로 세서는 결정된 동작을 실행하기 위해 유사 이미지 검색 장치의 구성 요소를 제어할 수 있다. 그리고, 프로세서는 제어 명령에 따라 유사 이미지 검색 장치를 제어하여 결정된 동작을 수행할 수 있다. 프로세서는 특정 동작이 수행되는 경우, 데이터 분석 및 기계 학습 알고리즘 및 기법을 통해 특정 동작의 실행을 나타내는 이력 정보를 분석하고, 분석된 정보에 기초하여 이전에 학습한 정보의 업데이트를 수행할 수 있다. 따라서, 프로세서는 러닝 프로세서와 함께, 업데이트 된 정보에 기초하여 데이터 분석 및 기계 학습 알고리즘 및 기법의 미래 성능의 정확성을 향상시킬 수 있다. 전원 공급부는 프로세서의 제어 하에서, 외부의 전원, 내부의 전원을 인가받아 유사 이미지 검색 장 치에 포함된 각 구성요소들에 전원을 공급하기 위한 장치를 포함한다. 또한, 이러한 전원공급부는 배터리를 포함하며, 상기 배터리는 내장형 배터리 또는 교체 가능한 형태의 배 터리가 될 수 있다. 구체적으로, 러닝 프로세서에 의해 학습되는 객체 관계 특징을 고려하여 유사 이미지를 검색하는 방법에 대하여 살펴보기로 한다. 도 2는 본 발명의 일 실시예에 따른 유사 이미지 검색 장치가 유사 이미지를 검색하는 플로우를 도시한다. 도 2를 참조하면, 본 발명의 일 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법은 크게 두 가 지로서 특징 데이터베이스 생성 과정(A)과 질의 이미지에 대한 유사 이미지 검색 과정(B)을 포함할 수 있다.먼저, 특징 데이터베이스 구축 과정(A)에 대해 설명하기로 한다. 이를 위해, 프로세서는 원본 이미지로부터 이미지 전체 특징을 추출하고, 이미지의 객체 정보를 추출하며, 원본 이미지에 포함된 객체 관계 특징을 추출할 수 있다. 일 실시예로, 프로세서는 원본 이미지를 미리 훈련된 이미지 분류 모델에 입력시켜, 완전 연결 계층에서 특징 벡터를 추출함으로써, 이미지 전체 특징을 추출할 수 있다. 여기서, 이미지 분류 모델로서 공지의 VGGNet을 이용할 수 있고, VGGNet은 DCNN(Deep Convolution Neural Network) 모델을 이용할 수 있으며, 이에 한정하지 않고 이미지를 분류할 수 있는 모델이라면 어떠한 모델로도 대체하여 채용할 수 있다. 사전 훈련된 VGGNet의 중간 계층에서는 원본 이미지를 설명하는 축약된 특징 벡터를 추출할 수 있다. 일 실시예로, 프로세서는 원본 이미지를 사전 훈련된 객체 탐지 모델에 입력시켜, 객체 정보를 추출할 수 있다. 여기서, 객체 탐지 모델은 사전 훈련된 DCNN 모델로서 도 3에 도시된 YOLO v4를 채용할 수 있으며, 이에 한정하 지 않고 이 외에도 객체 정보를 추출할 수 있는 모델이라면 어떠한 모델로도 대체하여 사용 가능하다. YOLO v4에서는 객체의 클래스, 영역, 신뢰도 점수를 포함하는 세 가지 객체 정보를 원본 이미지로부터 추출할 수 있다. YOLO v4의 밀집 예측(Dense Prediction) 부분에서 객체의 클래스, 영역, 신뢰도 점수 이 세 가지 값을 추출할 수 있다. 여기서, 객체의 클래스 값들은 객체 클래스 목록으로 활용될 수 있다. YOLO v4에서 추출된 객체의 클래스 값은 이미지에 포함된 객체의 종류를 의미한다. 단일 값으로 표현되며, 1~80 범위 안의 값을 가질 수 있다. 추후, 각 이미지에 포함된 객체의 클래스 집합을 가지고 두 이미지 간에서 동일한 클래스 비율을 계산하여 유사도 값의 일부로서 사용할 수 있다. YOLO v4에서 추출된 객체의 바운딩 박스는 객체가 이미지 상에서 위치한 영역을 표현하는 방법이다. 객체 탐지 모델에 따라서 바운딩 박스는 다르게 표현될 수 있다. YOLO v4의 경우에는 4가지 값으로 바운딩 박스를 표현할 수 있다. 4가지 값은 각각 바운딩 박스의 가로 중심 값, 세로 중심 값, 넓이, 높이를 의미한다. 신뢰도 점수는 YOLO v4 모델이 예측한 객체가 실제로 존재할 신뢰도를 의미한다. 신뢰도 점수는 단일 값으로 표 현되며, 0~1 사이의 값을 갖는다. 1에 가까울수록 신뢰도가 높음을 의미한다. 앞서 기술한 바운딩 박스와 신뢰도 점수 및 클래스 값은 모두 프로세서가 객체 이미지를 생성하기 위해 사 용된다. 객체가 N개 존재할 경우, 객체의 클래스는 (N, 1)의 크기를 가지며, 객체의 영역은 (N, 4) 크기, 마지막으로 신 뢰도 점수는 (N, 1)의 크기를 갖는다. 그리고, 프로세서는 전술한 세 가지 객체 정보(객체의 클래스, 영역 및 신뢰도 점수)를 사용하여 객체 이 미지 생성 모듈을 통해 객체 이미지를 생성할 수 있다. 생성된 객체 이미지는 VGGNet에 입력시켜, 객체 관계 특 징을 추출하기 위해 사용될 수 있다. 구체적으로, 프로세서는 객체 이미지를 생성하기 위해, 객체의 바운딩 박스 안에 포함된 모든 픽셀 값을 객체의 클래스 값으로 채우고 배경은 0값으로 채우되, 크기를 원본 이미지와 동일하게 생성할 수 있다. 이때, 두 가지 이상의 객체 영역이 겹칠 경우, 신뢰도 점수가 높은 객체의 클래스 값을 우선으로 사용하기로 한다. 신뢰도 점수가 제일 높은 것을 우선으로 사용하는 이유는 VGGNet을 통해 특징을 추출하기 위해 이미지 형식으로 입력을 만들어야 하기 때문이다. 객체 이미지 생성 및 객체 관계 특징 추출 과정은 도 4에서 확인할 수 있다. 단, 객체 이미지에서 사람과 같은 객체는 클래스 값이 0과 가까워 사람의 눈으로 확인하기 어려운 점이 있어, 도 5에서 개시된 객체 이미지는 임의로 클래스 값에 100을 더한 값을 사용하여 만들어진 객체 이미지 샘플에 해 당한다. 이와 같이 생성된 객체 이미지를 VGGNet에 입력하여 객체 관계 특징(Object relation feature)을 추출할 수 있 다. 프로세서는 이와 같이 획득한 세 가지 특징 즉, 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징에 기초하여 특징 데이터베이스(Feature DB)를 구축할 수 있다. 일 실시예로, 프로세서는 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 연결(concatenate)하 여 결합할 수 있다. 일 실시예로, 프로세서는 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 연 결하여 크기가 8292인 1차원 벡터를 만들 수 있다. 그리고 이렇게 연결된 특징 벡터를 이미지의 특징으로 사용 할 수 있다. 다음으로, 도 2 및 도 5를 참조하여 프로세서가 이와 같이 구축된 특징 데이터베이스(feature DB) 및 이미 지 데이터베이스(Image DB)를 기반으로 객체 관계 특징을 고려하는 유사 이미지를 검색하는 과정(B)에 대해 설 명하기로 한다. 도 2에 도시된 바와 같이, 프로세서는 질의 이미지에 대해서도 마찬가지로 이미지 전체 특징을 추출하고, 객체 클래스 목록을 추출하며, 객체 이미지를 생성하여 객체 이미지로부터 객체 관계 특징을 추출한다. 각 추출 방법은 원본 이미지에 관해 전술한 방법과 동일하므로 상세한 설명은 생략하기로 한다. 그리고, 프로세서는 질의 이미지의 이미지 전체 특징, 객체 클래스 목록, 및 객체 관계 특징을 연결 (concatenate)하여 결합함으로써, 쿼리 피쳐(query feature vec.)를 생성한다 다음으로, 프로세서는 특징 데이터베이스와 쿼리 피쳐를 기반으로 두 이미지의 유사도를 산출한다. 즉, 특 징 데이터베이스에 저장된 각 원본 이미지와 질의 이미지 간의 유사도를 모두 산출한다. 구체적으로, 프로세서는 데이터베이스에 저장된 각 원본 이미지의 전체 특징과 질의 이미지의 이미지 전체 특징 간의 제1 유사도를 산출한다. 그리고, 특징 데이터베이스에 저장된 각 원본 이미지의 객체 클래스 목록과 질의 이미지의 객체 클래스 목록 간의 제2 유사도를 산출한다. 그리고, 특징 데이터베이스에 저장된 각 원본 이 미지의 객체 관계 특징과 질의 이미지의 객체 관계 특징 간의 제3 유사도를 산출한다. 여기서, 각 원본 이미지의 전체 특징과 질의 이미지의 이미지 전체 특징에 대해서는 RBF(Radial Basis Function) 유사도 척도를 적용하여 제1 유사도를 산출할 수 있다. 그리고, 각 원본 이미지의 객체 관계 특징과 질의 이미지의 객체 관계 특징에 대해서도 RBF 유사도 척도를 적용 하여 제3 유사도를 산출할 수 있다. 그리고, 특징 데이터베이스에 저장된 각 원본 이미지의 객체 클래스 목록과 질의 이미지의 객체 클래스 목록에 대해서는 Jaccard를 적용하여 제2 유사도를 산출할 수 있다. 이어, 프로세서는 제1 유사도 내지 제3 유사도를 기반으로 객체 관계 특징을 고려하는 유사 이미지를 결정 한다. 이때, 프로세서는 두 이미지를 비교함에 있어서 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징에 대해 부여하고자 하는 중요도에 따라 가중치를 설정할 수 있다. 이에, 프로세서는 제1 유사도 내지 제3 유사도 각각에 가중치를 부여하고, 가중치가 부여된 제1 유사도 내 지 제3 유사도를 합산하여 최종 유사도를 산출한다. 이어, 프로세서는 원본 이미지들 중 최종 유사도가 높은 순으로 유사 이미지를 결정할 수 있다. 일 예로, 도 5에 도시된 바와 같이, 유사도가 제일 높은 순으로부터 K번째까지 나열된 원본 이미지들을 유사 이미지로 결 정할 수 있다. 이 방법에서는 두 이미지의 객체 클래스 목록이 주어졌을 때, 두 객체 클래스 목록의 모든 요소 대비 동일한 객 체 클래스 비율이 얼마나 되는지 측정하기 위해서 사용한다. 각 특징에 대한 유사도 점수는 0~1 사이의 단일 값으로 표현되며, 0에 가까울수록 서로 다름을 뜻하며 1에 가까 울수록 두 특징이 비슷함을 의미한다. 마지막으로 계산된 유사도 값들 각각에 가중치를 곱하고 합산하여 두 이미지 간의 총 유사도를 계산한다. 이때 세 가지의 가중치 합은 1이다. 총 유사도 점수는 0~1 단일 값으로 표현 되며, 1에 가까울수록 두 이미지가 유사함을 의미한다. 동일한 이미지끼리 비교하였을 때, 총 유사도 값은 1이 된다. 가중치를 설정하는 것에 따라서 두 이미지의 유사도 비교 시 세 가지 특징 중 어떤 특징을 더 중요하게 여길지 결정할 수 있다. 도 6 및 도 7은 본 발명의 일 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법을 설명하기 위 한 순서도이다. 먼저 도 6을 참조하여 본 발명의 일 실시예에 따른 특징 데이터베이스 구축 방법을 설명하기로 한다. 도 6을 참조하면, 원본 이미지로부터 이미지 전체 특징을 추출하고(S110), 원본 이미지로부터 이미지의 객체 정 보를 추출하며(S120), 원본 이미지에 포함된 객체 관계 특징을 추출할 수 있다(S130). 일 실시예로, 원본 이미지를 미리 훈련된 이미지 분류 모델에 입력시켜, 완전 연결 계층에서 특징 벡터를 추출 함으로써, 이미지 전체 특징을 추출할 수 있다. 여기서, 이미지 분류 모델로서 공지의 VGGNet을 이용할 수 있고, VGGNet은 DCNN(Deep Convolution Neural Network) 모델을 이용할 수 있으며, 이에 한정하지 않고 이미지를 분류할 수 있는 모델이라면 어떠한 모델로도 대체하여 채용할 수 있다. 사전 훈련된 VGGNet의 중간 계층에서는 원본 이미지를 설명하는 축약된 특징 벡터를 추출할 수 있다. 일 실시예로, 원본 이미지를 사전 훈련된 객체 탐지 모델에 입력시켜, 객체 정보를 추출할 수 있다. 여기서, 객 체 탐지 모델은 사전 훈련된 DCNN 모델로서 도 3에 도시된 YOLO v4를 채용할 수 있으며, 이에 한정하지 않고 이 외에도 객체 정보를 추출할 수 있는 모델이라면 어떠한 모델로도 대체하여 사용 가능하다. YOLO v4에서는 객체의 클래스, 영역, 신뢰도 점수를 포함하는 세 가지 객체 정보를 원본 이미지로부터 추출할 수 있다. YOLO v4의 밀집 예측(Dense Prediction) 부분에서 객체의 클래스, 영역, 신뢰도 점수 이 세 가지 값을 추출할 수 있다. 여기서, 객체의 클래스 값들은 객체 클래스 목록으로 활용될 수 있다. YOLO v4에서 추출된 객체의 클래스 값은 이미지에 포함된 객체의 종류를 의미한다. 단일 값으로 표현되며, 1~80 범위 안의 값을 가질 수 있다. 추후, 각 이미지에 포함된 객체의 클래스 집합을 가지고 두 이미지 간에서 동일한 클래스 비율을 계산하여 유사도 값의 일부로서 사용할 수 있다. YOLO v4에서 추출된 객체의 바운딩 박스는 객체가 이미지 상에서 위치한 영역을 표현하는 방법이다. 객체 탐지 모델에 따라서 바운딩 박스는 다르게 표현될 수 있다. YOLO v4의 경우에는 4가지 값으로 바운딩 박스를 표현할 수 있다. 4가지 값은 각각 바운딩 박스의 가로 중심 값, 세로 중심 값, 넓이, 높이를 의미한다. 신뢰도 점수는 YOLO v4 모델이 예측한 객체가 실제로 존재할 신뢰도를 의미한다. 신뢰도 점수는 단일 값으로 표 현되며, 0~1 사이의 값을 갖는다. 1에 가까울수록 신뢰도가 높음을 의미한다. 앞서 기술한 바운딩 박스와 신뢰도 점수 및 클래스 값은 모두 유사 이미지 검색 장치가 객체 이미지를 생성하기 위해 사용된다. 객체가 N개 존재할 경우, 객체의 클래스는 (N, 1)의 크기를 가지며, 객체의 영역은 (N, 4) 크기, 마지막으로 신 뢰도 점수는 (N, 1)의 크기를 갖는다. 다음으로, 객체의 클래스, 객체 영역 및 객체의 신뢰도 점수를 사용하여 객체 이미지 생성 모듈을 통해 객체 이 미지를 생성할 수 있다(S140). 여기서 생성된 객체 이미지는 VGGNet에 입력시켜, 객체 관계 특징을 추출하기 위해 사용될 수 있다. 구체적으로, 유사 이미지 검색 장치는 객체 이미지를 생성하기 위해, 객체의 바운딩 박스 안에 포함된 모든 픽 셀 값을 객체의 클래스 값으로 채우고 배경은 0값으로 채우되, 크기를 원본 이미지와 동일하게 생성할 수 있다. 이때, 두 가지 이상의 객체 영역이 겹칠 경우, 신뢰도 점수가 높은 객체의 클래스 값을 우선으로 사용하기로 한 다. 신뢰도 점수가 제일 높은 것을 우선으로 사용하는 이유는 VGGNet을 통해 특징을 추출하기 위해 이미지 형식으로 입력을 만들어야 하기 때문이다. 객체 이미지 생성 및 객체 관계 특징 추출 과정은 도 4에서 확인할 수 있다. 단, 객체 이미지에서 사람과 같은 객체는 클래스 값이 0과 가까워 사람의 눈으로 확인하기 어려운 점이 있어, 도 5에서 개시된 객체 이미지는 임의로 클래스 값에 100을 더한 값을 사용하여 만들어진 객체 이미지 샘플에 해 당한다. 다음으로, 객체 이미지를 VGGNet에 입력하여 객체 관계 특징(Object relation feature)을 추출할 수 있다 (S150). 유사 이미지 검색 장치는 이와 같이 획득한 세 가지 특징 즉, 이미지 전체 특징, 객체 클래스 목록 및 객체 관 계 특징에 기초하여 특징 데이터베이스(Feature DB)를 구축할 수 있다(S160). 일 실시예로, 유사 이미지 검색 장치는 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 연결 (concatenate)하여 결합할 수 있다. 일 실시예로, 유사 이미지 검색 장치는 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징 을 연결하여 크기가 8292인 1차원 벡터를 만들 수 있다. 그리고 이렇게 연결된 특징 벡터를 이미지의 특 징으로 사용할 수 있다. 다음, 도 7을 참조하여 본 발명의 일 실시예에 따른 특징 데이터베이스(feature DB) 및 이미지 데이터베이스 (Image DB)를 기반으로 객체 관계 특징을 고려하는 유사 이미지를 검색하는 방법을 설명하기로 한다. 먼저, 유사 이미지 검색 장치는 질의 이미지에 대해서도 마찬가지로 이미지 전체 특징을 추출하고(S210), 객체 클래스 목록을 추출하며(S220), 객체 이미지를 생성하여 객체 이미지로부터 객체 관계 특징을 추출한다(S230). 질의 이미지로부터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 방법은 원본 이미지로부 터 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징을 추출하는 전술한 방법과 동일하다 자세하게는, 유사 이미지 검색 장치가 질의 이미지를 미리 훈련된 이미지 분류 모델에 입력시켜, 완전 연결 계 층에서 특징 벡터를 추출함으로써, 질의 이미지의 이미지 전체 특징을 추출할 수 있다. 여기서, 이미지 분류 모델로서 공지의 VGGNet을 이용할 수 있고, VGGNet은 DCNN(Deep Convolution Neural Network) 모델을 이용할 수 있으며, 이에 한정하지 않고 이미지를 분류할 수 있는 모델이라면 어떠한 모델로도 대체하여 채용할 수 있다. 사전 훈련된 VGGNet의 중간 계층에서는 원본 이미지를 설명하는 축약된 특징 벡터를 추출할 수 있다. 그리고, 유사 이미지 검색 장치가 질의 이미지를 사전 훈련된 객체 탐지 모델에 입력시켜, 객체 정보를 추출할 수 있다. 여기서, 객체 탐지 모델은 사전 훈련된 DCNN 모델로서 도 3에 도시된 YOLO v4를 채용할 수 있으며, 이에 한정하 지 않고 이 외에도 객체 정보를 추출할 수 있는 모델이라면 어떠한 모델로도 대체하여 사용 가능하다. YOLO v4에서는 객체의 클래스, 영역, 신뢰도 점수를 포함하는 세 가지 객체 정보를 원본 이미지로부터 추출할 수 있다. YOLO v4의 밀집 예측(Dense Prediction) 부분에서 객체의 클래스, 영역, 신뢰도 점수 이 세 가지 값을 추출할 수 있다. 여기서, 객체의 클래스 값들은 객체 클래스 목록으로 활용될 수 있다. YOLO v4에서 추출된 객체의 클래스 값은 이미지에 포함된 객체의 종류를 의미한다. 단일 값으로 표현되며, 1~80 범위 안의 값을 가질 수 있다. 추후, 각 이미지에 포함된 객체의 클래스 집합을 가지고 두 이미지 간에서 동일한 클래스 비율을 계산하여 유사도 값의 일부로서 사용할 수 있다. YOLO v4에서 추출된 객체의 바운딩 박스는 객체가 이미지 상에서 위치한 영역을 표현하는 방법이다. 객체 탐지 모델에 따라서 바운딩 박스는 다르게 표현될 수 있다. YOLO v4의 경우에는 4가지 값으로 바운딩 박스를 표현할 수 있다. 4가지 값은 각각 바운딩 박스의 가로 중심 값, 세로 중심 값, 넓이, 높이를 의미한다. 신뢰도 점수는 YOLO v4 모델이 예측한 객체가 실제로 존재할 신뢰도를 의미한다. 신뢰도 점수는 단일 값으로 표 현되며, 0~1 사이의 값을 갖는다. 1에 가까울수록 신뢰도가 높음을 의미한다. 앞서 기술한 바운딩 박스와 신뢰도 점수 및 클래스 값은 모두 유사 이미지 검색 장치가 객체 이미지를 생성하기 위해 사용된다. 객체가 N개 존재할 경우, 객체의 클래스는 (N, 1)의 크기를 가지며, 객체의 영역은 (N, 4) 크기, 마지막으로 신 뢰도 점수는 (N, 1)의 크기를 갖는다. 그리고, 유사 이미지 검색 장치가 전술한 세 가지 객체 정보(객체의 클래스, 영역 및 신뢰도 점수)를 사용하여 객체 이미지 생성 모듈을 통해 객체 이미지를 생성할 수 있다. 생성된 객체 이미지는 VGGNet에 입력시켜, 객체 관계 특징을 추출하기 위해 사용될 수 있다. 구체적으로, 유사 이미지 검색 장치는 객체 이미지를 생성하기 위해, 객체의 바운딩 박스 안에 포함된 모든 픽 셀 값을 객체의 클래스 값으로 채우고 배경은 0값으로 채우되, 크기를 원본 이미지와 동일하게 생성할 수 있다. 이때, 두 가지 이상의 객체 영역이 겹칠 경우, 신뢰도 점수가 높은 객체의 클래스 값을 우선으로 사용하기로 한 다. 신뢰도 점수가 제일 높은 것을 우선으로 사용하는 이유는 VGGNet을 통해 특징을 추출하기 위해 이미지 형식으로 입력을 만들어야 하기 때문이다. 객체 이미지 생성 및 객체 관계 특징 추출 과정은 도 4에서 확인할 수 있다. 단, 객체 이미지에서 사람과 같은 객체는 클래스 값이 0과 가까워 사람의 눈으로 확인하기 어려운 점이 있어, 도 5에서 개시된 객체 이미지는 임의로 클래스 값에 100을 더한 값을 사용하여 만들어진 객체 이미지 샘플에 해 당한다. 이와 같이 생성된 객체 이미지를 VGGNet에 입력하여 객체 관계 특징(Object relation feature)을 추출할 수 있 다. 다음으로, 유사 이미지 검색 장치는 질의 이미지의 이미지 전체 특징, 객체 클래스 목록, 및 객체 관계 특징을 연결(concatenate)하여 결합함으로써, 쿼리 피쳐(query feature vec.)를 생성한다(S240) 다음으로, 유사 이미지 검색 장치는 특징 데이터베이스와 쿼리 피쳐를 기반으로 두 이미지의 유사도를 산출한다 (S250). 즉, 특징 데이터베이스에 저장된 각 원본 이미지와 질의 이미지 간의 유사도를 모두 산출한다. 구체적으로, 유사 이미지 검색 장치는 데이터베이스에 저장된 각 원본 이미지의 전체 특징과 질의 이미지의 이 미지 전체 특징 간의 제1 유사도를 산출한다. 그리고, 특징 데이터베이스에 저장된 각 원본 이미지의 객체 클래 스 목록과 질의 이미지의 객체 클래스 목록 간의 제2 유사도를 산출한다. 그리고, 특징 데이터베이스에 저장된 각 원본 이미지의 객체 관계 특징과 질의 이미지의 객체 관계 특징 간의 제3 유사도를 산출한다. 여기서, 각 원본 이미지의 전체 특징과 질의 이미지의 이미지 전체 특징에 대해서는 RBF(Radial Basis Function) 유사도 척도를 적용하여 제1 유사도를 산출할 수 있다. 그리고, 각 원본 이미지의 객체 관계 특징과 질의 이미지의 객체 관계 특징에 대해서도 RBF 유사도 척도를 적용 하여 제3 유사도를 산출할 수 있다. 그리고, 특징 데이터베이스에 저장된 각 원본 이미지의 객체 클래스 목록과 질의 이미지의 객체 클래스 목록에 대해서는 Jaccard를 적용하여 제2 유사도를 산출할 수 있다. 다음으로, 유사 이미지 검색 장치는 제1 유사도 내지 제3 유사도를 기반으로 객체 관계 특징을 고려하는 유사 이미지를 결정한다(S260). 이때, 유사 이미지 검색장치는 두 이미지를 비교함에 있어서 이미지 전체 특징, 객체 클래스 목록 및 객체 관계 특징에 대해 부여하고자 하는 중요도에 따라 가중치를 설정할 수 있다. 이에, 유사 이미지 검색장치는 제1 유사도 내지 제3 유사도 각각에 가중치를 부여하고, 가중치가 부여된 제1 유 사도 내지 제3 유사도를 합산하여 최종 유사도를 산출한다.이어, 유사 이미지 검색장치는 원본 이미지들 중 최종 유사도가 높은 순으로 유사 이미지를 결정할 수 있다. 일 예로, 도 5에 도시된 바와 같이, 유사도가 제일 높은 순으로부터 K번째까지 나열된 원본 이미지들을 유사 이미 지로 결정할 수 있다. 본 발명의 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법에 따르면, 이미지 전체 특징은 물 론 이미지 내의 객체 및 객체 간의 관계를 더 고려함으로써, 유사 이미지 검색의 정확도를 높일 수 있다. 이하에서는 도 8 내지 도 12를 참조하여, 본 발명의 일 실시예의 성능 평가 결과를 개시한다. 일 실시예로, MS COCO 데이터 집합의 일부를 이용해서 이미지 검색 실험 및 성능 평가를 수행한 결과를 개시한 다. MS COCO 데이터 집합의 객체 클래스 수는 80개이며, 2017년 MS COCO 데이터 집합 기준으로 학습 데이터 118k 장, 검증 5k 장, 테스트 41k 장으로 구성되어있다. 실험에서는 학습 데이터 이미지 집합에서 약 59k 장, 테스트 이미지 데이터 집합에서 약 41k 장, 총합 100k 장을 사용하였다. 표 1 Division Content HardwareIntel(R) Core(TM) i7-7700 CPU @ 3.60GHz, GPU Titan XP, Memory DDR4 64GB SoftwareCUDA 10.1, CUDNN 7.6.4, Python 3.6.9, Tensorflow 2.3.4 Data setCOCO 2017 train & test dataset, 10K images 실험은 이미지 전체 특징과 객제 클래스 목록을 사용했을 때와 세 가지 특징 모두를 사용하였을 때로 나누어 총 2가지 실험을 수행하여 제안하는 방법이 정확도가 더 높음을 보이기 위한다. 표 1은 본 발명의 실험 환경을 보 여준다. 실험은 다음과 같이 진행되었다. 총 100k 장의 이미지 데이터 중에서 200장의 이미지를 임의로 선정하였다. 그 리고 선정된 이미지 중에서 되도록 서로 다른 클래스의 객체들로 구성되는 이미지 50장을 질의 이미지로 선정하 였다. 성능 평가를 위해 선정된 50장에 대해 5, 10, 20-NN(Nearest Neighbor) 질의를 수행한다. 20-NN 질의는 질의 이미지와 유사도가 높은 순으로 순위가 매겨진 상위 20장의 이미지를 찾는 것을 의미한다. 정확도는 상위 20장 의 이미지를 직접 육안으로 확인하여 질의 이미지 별로 유사도를 판단한다. 그리고 질의 이미지별 정확도들을 평균 내어 평균 정확도를 계산한다. 정확도는 상위 K개의 검색 결과에 질의 이미지와 유사한 이미지가 몇 개가 포함되었는지 계산한다. 정확한 정확 도 계산을 위해서는 질의 이미지와 유사한 실측(Ground Truth) 이미지들을 사전에 알고 있어야 하나, 10만 개의 데이터에서 이들을 정확하게 분류해 내는 것이 어려워 배제하였다. 실험에서는 이미지의 전체 특징과 객체 집합 특징만을 이용한 기존 방법과 객체 관계 특징까지 더해 세 가지 특 징을 활용하는 방법의 정확도를 비교하였다. 실험결과, 세 가지 특징을 전부 사용하였을 때의 정확도는 이미지 전체 특징만을 사용했을 때보다 Top 5 기준 6.4%, Top 10 기준 7.6%, Top 20 기준 4.9% 정확도 향상이 있음을 확인하였다. 표 2 Average Accuracy 기존 방법 기반 질의 정확도제안하는 방법 기반 질의 정확도 Top 5 57.6 % 64.0 %Top 10 53.4 % 61.0 % Top 20 54.1 % 59.0 % 본 발명의 실시예에서는 WA(이미지 전체 특징에 대한 유사도 가중치), WB(객체 집합에 대한 유사도 가중치), WC(객체 관계 특징에 대한 유사도 가중치)를 각각 순서대로 0.2, 0.2, 0.6으로 설정하여 실험하였다. 여러 번의 실험을 거쳐, 제안하는 방법에서는 유사한 이미지를 찾을 때 객체의 클래스가 가장 중요하다고 판단 하였다. 상위 20개의 특징의 유사도 값을 고려하여서 객체의 클래스 유사도 값이 다른 특징의 유사도 값보다 우 선으로 고려될 수 있으면서도 가능한 작은 WB 값을 직접 설정하여 주었다. 또한 이미지 전체 특징에 대한 유사 도 값보다 객체 관계 특징에 대한 유사도 값의 비중을 더 높이는 것이 높은 성능을 가지는 것을 확인하였다. 질의를 통해 얻은 이미지 20장은 질의 이미지마다 100k 장 각각이 유사한 이미지인지 판단하지 않아, 실제로 유 사 이미지가 없어 검색되지 않은 것인지 유사한 이미지가 존재하는데도 검색되지 않은 것인지 정확하게 알 수 없다. 때문에 Top-5, Top-10, Top-20 순으로 정확도가 점점 내려가는 이유는 질의 이미지마다 유사한 이미지 개 수 편차가 있음과 동시에 평균적으로 유사한 이미지의 수가 적은 것으로 유추하고 있다. 도 8 내지 도 12을 참조하면, 기존방법에 비해 제안하는 본 발명의 실시예의 우수함을 확인할 수 있다. 올바른 결과 이미지의 경우 숫자의 바탕을 파란색('○')으로 틀린 결과 이미지의 경우 숫자의 바탕을 빨간색('×')으로 표현하였다. 그리고 각 번호는 유사 이미지 검색 시 부여된 순위와 동일하다. 즉, 1~20번의 번호는 유사도 순위 를 의미한다. 1번 질의 이미지의 검색 결과에서, 기존방법의 결과 이미지는 전부 코끼리를 잘 찾아냈다. 하지만 코끼리 무리 가 아닌 한 마리 혹은 이미지에서 코끼리가 찾아내는 비중이 적은 이미지들을 반 이상 검색한 것을 알 수 있다. 본 발명의 실시예에서는 이미지에서 차지하는 코끼리의 비중을 잘 고려하였으나, 한 마리의 코끼리만 존재하는 이미지를 결과로 가진 것이 일부 보인다. 2번 질의 이미지의 검색 결과에서, 기존방법은 이미지에서 차지하는 소파의 영역을 고려하지 못함이 보인다. 제 안하는 방법은 옳은 이미지들을 검색하였다. 3번 질의 이미지의 검색 결과에서, 기존방법은 객체 간 관계를 고려하지 못한 이미지를 하나(20번)를 검색하였 다. 본 발명의 실시예는 모두 옳은 이미지를 검색하였다. 4번 질의 이미지의 검색 결과의 경우, 기존방법과 제안하는 방법 모두 틀린 결과를 가진 사례이다. 사용된 MS COCO 데이터 집합에서 전자레인지와 키보드가 이미지에서 동시에 나타나는 이미지가 해당 질의 이미지에 없어 나타난 결과로 보인다. 1~3번 결과에서 제안하는 방법과 기존의 방법은 질의 이미지에 포함된 객체 클래스를 고려하여 유사 이미지를 검색하는 것을 확인할 수 있다. 그러나 기존의 방법은 객체의 위치와 관계 특징을 고려하지 못해 유사 이미지 검색의 성능이 제안하는 방법보다 낮았다. 전술한 객체 관계 특징을 고려하는 유사 이미지 검색 장치는, 프로세서, 메모리, 사용자 입력장치, 프레젠테이 션 장치 중 적어도 일부를 포함하는 컴퓨팅 장치에 의해 구현될 수 있다. 메모리는, 프로세서에 의해 실행되면 특정 태스크를 수행할 수 있도록 코딩되어 있는 컴퓨터-판독가능 소프트웨어, 애플리케이션, 프로그램 모듈, 루 틴, 인스트럭션(instructions), 및/또는 데이터 등을 저장하는 매체이다. 프로세서는 메모리에 저장되어 있는 컴퓨터-판독가능 소프트웨어, 애플리케이션, 프로그램 모듈, 루틴, 인스트럭션, 및/또는 데이터 등을 판독하여 실행할 수 있다. 사용자 입력장치는 사용자로 하여금 프로세서에게 특정 태스크를 실행하도록 하는 명령을 입력하거나 특정 태스 크의 실행에 필요한 데이터를 입력하도록 하는 수단일 수 있다. 사용자 입력장치는 물리적인 또는 가상적인 키 보드나 키패드, 키버튼, 마우스, 조이스틱, 트랙볼, 터치-민감형 입력수단, 또는 마이크로폰 등을 포함할 수 있 다. 프레젠테이션 장치는 디스플레이, 프린터, 스피커, 또는 진동장치 등을 포함할 수 있다. 컴퓨팅 장치는 스마트폰, 태블릿, 랩탑, 데스크탑, 서버, 클라이언트 등의 다양한 장치를 포함할 수 있다. 컴퓨 팅 장치는 하나의 단일한 스탠드-얼론 장치일 수도 있고, 통신망을 통해 서로 협력하는 다수의 컴퓨팅 장치들로이루어진 분산형 환경에서 동작하는 다수의 컴퓨팅 장치를 포함할 수 있다. 또한 전술한 객체 관계 특징을 고려하는 유사 이미지 검색 방법은, 프로세서를 구비하고, 또한 프로세서에 의해 실행되면 인공지능 모델을 활용한 객체 관계 특징을 고려하는 유사 이미지 검색 방법을 수행할 수 있도록 코딩 된 컴퓨터 판독가능 소프트웨어, 애플리케이션, 프로그램 모듈, 루틴, 인스트럭션, 및/또는 데이터 구조 등을 저장한 메모리를 구비하는 컴퓨팅 장치에 의해 실행될 수 있다. 상술한 본 실시예들은 다양한 수단을 통해 구현될 수 있다. 예를 들어, 본 실시예들은 하드웨어, 펌웨어 (firmware), 소프트웨어 또는 그것들의 결합 등에 의해 구현될 수 있다. 하드웨어에 의한 구현의 경우, 본 실시예들에 따른 인공지능 모델을 활용한 영상 진단 방법은 하나 또는 그 이 상의 ASICs(Application Specific Integrated Circuits), DSPs(Digital Signal Processors), DSPDs(Digital Signal Processing Devices), PLDs(Programmable Logic Devices), FPGAs(Field Programmable Gate Arrays), 프로세서, 컨트롤러, 마이크로 컨트롤러 또는 마이크로 프로세서 등에 의해 구현될 수 있다. 예를 들어, 실시예들에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법은 심층 신경망의 뉴런(neuron) 과 시냅스(synapse)가 반도체 소자들로 구현된 인공지능 반도체 장치를 이용하여 구현될 수 있다. 이때 반도체 소자는 현재 사용하는 반도체 소자들, 예를 들어 SRAM이나 DRAM, NAND 등일 수도 있고, 차세대 반도체 소자들, RRAM이나 STT MRAM, PRAM 등일 수도 있고, 이들의 조합일 수도 있다. 실시예들에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방법을 인공지능 반도체 장치를 이용하여 구현할 때, 인공지능 모델을 소프트웨어로 학습한 결과(가중치)를 어레이로 배치된 시냅스 모방소자에 전사하거나 인공 지능 반도체 장치에서 학습을 진행할 수도 있다. 펌웨어나 소프트웨어에 의한 구현의 경우, 본 실시예들에 따른 객체 관계 특징을 고려하는 유사 이미지 검색 방 법은 이상에서 설명된 기능 또는 동작들을 수행하는 장치, 절차 또는 함수 등의 형태로 구현될 수 있다. 소프트 웨어 코드는 메모리 유닛에 저장되어 프로세서에 의해 구동될 수 있다. 메모리 유닛은 상기 프로세서 내부 또는 외부에 위치하여, 이미 공지된 다양한 수단에 의해 프로세서와 데이터를 주고 받을 수 있다. 또한, 위에서 설명한 \"시스템\", \"프로세서\", \"컨트롤러\", \"컴포넌트\", \"모듈\", \"인터페이스\", \"모델\", 또는 \"유 닛\" 등의 용어는 일반적으로 컴퓨터 관련 엔티티 하드웨어, 하드웨어와 소프트웨어의 조합, 소프트웨어 또는 실 행 중인 소프트웨어를 의미할 수 있다. 예를 들어, 전술한 구성요소는 프로세서에 의해서 구동되는 프로세스, 프로세서, 컨트롤러, 제어 프로세서, 개체, 실행 스레드, 프로그램 및/또는 컴퓨터일 수 있지만 이에 국한되지 않는다. 예를 들어, 컨트롤러 또는 프로세서에서 실행 중인 애플리케이션과 컨트롤러 또는 프로세서가 모두 구 성 요소가 될 수 있다. 하나 이상의 구성 요소가 프로세스 및/또는 실행 스레드 내에 있을 수 있으며, 구성 요 소들은 하나의 장치(예: 시스템, 컴퓨팅 디바이스 등)에 위치하거나 둘 이상의 장치에 분산되어 위치할 수 있다. 한편, 또 다른 실시예는 전술한 객체 관계 특징을 고려하는 유사 이미지 검색 방법을 수행하는, 컴퓨터 기록매 체에 저장되는 컴퓨터 프로그램을 제공한다. 또한 또 다른 실시예는 전술한 방법을 실현시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록매체를 제공한다. 기록매체에 기록된 프로그램은 컴퓨터에서 읽히어 설치되고 실행됨으로써 전술한 단계들을 실행할 수 있다. 이 와 같이, 컴퓨터가 기록매체에 기록된 프로그램을 읽어 들여 프로그램으로 구현된 기능들을 실행시키기 위하여, 전술한 프로그램은 컴퓨터의 프로세서(CPU)가 컴퓨터의 장치 인터페이스(Interface)를 통해 읽힐 수 있는 C, C++, JAVA, 기계어 등의 컴퓨터 언어로 코드화된 코드(Code)를 포함할 수 있다. 이러한 코드는 전술한 기능들을 정의한 함수 등과 관련된 기능적인 코드를 포함할 수 있고, 전술한 기능들을 컴 퓨터의 프로세서가 소정의 절차대로 실행시키는데 필요한 실행 절차 관련 제어 코드를 포함할 수도 있다. 또한, 이러한 코드는 전술한 기능들을 컴퓨터의 프로세서가 실행시키는데 필요한 추가 정보나 미디어가 컴퓨터 의 내부 또는 외부 메모리의 어느 위치(주소 번지)에서 참조 되어야 하는지에 대한 메모리 참조 관련 코드를 더 포함할 수 있다. 또한, 컴퓨터의 프로세서가 전술한 기능들을 실행시키기 위하여 원격(Remote)에 있는 어떠한 다른 컴퓨터나 서 버 등과 통신이 필요한 경우, 코드는 컴퓨터의 프로세서가 컴퓨터의 통신 모듈을 이용하여 원격(Remote)에 있는 어떠한 다른 컴퓨터나 서버 등과 어떻게 통신해야만 하는지, 통신 시 어떠한 정보나 미디어를 송수신해야 하는지 등에 대한 통신 관련 코드를 더 포함할 수도 있다. 이상에서 전술한 바와 같은 프로그램을 기록한 컴퓨터로 읽힐 수 있는 기록매체는, 일 예로, ROM, RAM, CD-ROM, 자기 테이프, 플로피디스크, 광 미디어 저장장치 등이 있다. 또한 컴퓨터가 읽을 수 있는 기록매체는 네트워크로 연결된 컴퓨터 시스템에 분산되어, 분산방식으로 컴퓨터가 읽을 수 있는 코드가 저장되고 실행될 수 있다. 그리고, 본 발명을 구현하기 위한 기능적인(Functional) 프로그램과 이와 관련된 코드 및 코드 세그먼트 등은,"}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "기록매체를 읽어서 프로그램을 실행시키는 컴퓨터의 시스템 환경 등을 고려하여, 본 발명이 속하는 기술분야의 프로그래머들에 의해 용이하게 추론되거나 변경될 수도 있다. 객체 관계 특징을 고려하는 유사 이미지 검색 방법은, 컴퓨터에 의해 실행되는 애플리케이션이나 프로그램 모듈 과 같은 컴퓨터에 의해 실행 가능한 명령어를 포함하는 기록 매체의 형태로도 구현될 수 있다. 컴퓨터 판독 가 능 매체는 컴퓨터에 의해 액세스될 수 있는 임의의 가용 매체일 수 있고, 휘발성 및 비휘발성 매체, 분리형 및 비분리형 매체를 모두 포함한다. 또한, 컴퓨터 판독가능 매체는 컴퓨터 저장 매체를 모두 포함할 수 있다. 컴퓨 터 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보의 저장을 위한 임의의 방법 또는 기술로 구현된 휘발성 및 비휘발성, 분리형 및 비분리형 매체를 모두 포함한다. 전술한 객체 관계 특징을 고려하는 유사 이미지 검색 방법은, 단말기에 기본적으로 설치된 애플리케이션(이는 단말기에 기본적으로 탑재된 플랫폼이나 운영체제 등에 포함된 프로그램을 포함할 수 있다)에 의해 실행될 수 있고, 사용자가 애플리케이션 스토어 서버, 애플리케이션 또는 해당 서비스와 관련된 웹 서버 등의 애플리케이 션 제공 서버를 통해 마스터 단말기에 직접 설치한 애플리케이션(즉, 프로그램)에 의해 실행될 수도 있다. 이러 한 의미에서, 전술한 객체 관계 특징을 고려하는 유사 이미지 검색 방법은 단말기에 기본적으로 설치되거나 사 용자에 의해 직접 설치된 애플리케이션(즉, 프로그램)으로 구현되고 단말기에 등의 컴퓨터로 읽을 수 있는 기록 매체에 기록될 수 있다. 이상, 본 발명의 특정 실시예에 대하여 상술하였다. 그러나, 본 발명의 사상 및 범위는 이러한 특정 실시예에 한정되는 것이 아니라, 본 발명의 요지를 변경하지 않는 범위 내에서 다양하게 수정 및 변형이 가능하다는 것을 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자라면 이해할 것이다."}
{"patent_id": "10-2022-0150864", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "따라서, 이상에서 기술한 실시예들은 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이므로, 모든 면에서 예시적인 것이며 한정적이 아닌 것으로 이해해야만 하 며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2022-0150864", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 유사 이미지 검색 장치의 구성을 도시하는 블록도이다. 도 2는 본 발명의 일 실시예에 따른 유사 이미지 검색 장치가 유사 이미지를 검색하는 플로우를 도시한다. 도 3은 YOLO v4 모델의 개념을 도시하는 개념도이다. 도 4는 객체 이미지 생성 및 객체 관계 특징 추출 과정을 설명하기 위한 개념도이다. 도 5는 본 발명의 일 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지를 검색하는 방법을 설명하기 위한 개념도이다. 도 6은 본 발명의 일 실시예에 따른 특징 데이터베이스 구축 방법을 설명하기 위한 순서도이다. 도 7은 본 발명의 일 실시예에 따른 객체 관계 특징을 고려하는 유사 이미지를 검색하는 방법을 설명하기 위한 순서도이다."}
