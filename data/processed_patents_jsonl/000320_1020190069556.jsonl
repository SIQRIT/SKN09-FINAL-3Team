{"patent_id": "10-2019-0069556", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0142374", "출원번호": "10-2019-0069556", "발명의 명칭": "입력 데이터에 근거한 AI 모델 선택 방법 및 그에 따른 방법을 수행하는 디스플레이 장치", "출원인": "삼성전자주식회사", "발명자": "바이잘아난트"}}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하는 단계; 추가 AI 모델에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 단계;상기 학습된 추가 AI 모델로 제1 데이터가 입력되면, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출력하는 단계; 및 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 선택하는 단계는 상기 복수개의 AI 모델들 중, 상기 오분류 확률들 중 가장 작은 값을 가지는 오분류 확률에 대응되는 모델을 선택하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 학습하는 단계는 상기 오분류 데이터를 입력받은 추가 AI 모델에서, 상기 오분류 데이터가 상기 복수개의 AI 모델들 중 어느 모델에서 분류된 데이터인지를 학습하는 단계; 및 상기 학습된 추가 AI 모델을 획득하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 학습하는 단계는 상기 오분류 데이터를 입력받은 상기 추가 AI 모델이, 상기 복수개의 AI 모델들 각각에 의해서 학습되지 못하는데이터의 특성 및 데이터의 분포(distribution)를 학습하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 선택된 AI 모델에서, 제1 데이터를 입력받아 상기 적어도 하나의 부류로 분류한 결과를 출력하는 단계를더 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 추가 AI 모델은상기 복수개의 AI 모델들과 다른 AI 모델인, AI 모델을 이용한 데이터 처리 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 오분류 확률은 상기 복수개의 AI 모델들 각각이 입력받은 데이터를 올바르지 못하게 분류할 확률을 나타내는, 입력 데이터에근거한 AI 모델 선택 방법. 공개특허 10-2020-0142374-3-청구항 8 제1항에 있어서, 상기 오분류 데이터를 획득하는 단계는상기 복수개의 AI 모델들 각각에서 상기 학습 데이터 셋을 입력받고, 상기 학습 데이터 셋을 상기 적어도 하나의 부류로 분류하여 상기 결과를 출력하는 단계; 및 상기 학습 데이터 셋 중, 상기 결과가 잘못된 값을 가지는 데이터인 상기 오분류 데이터를 획득하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 복수개의 AI 모델은 하이퍼 파라미터(hyper-parameter), 모델의 구조(architecture), 학습 기법(training technique), 및 트레이닝을 위하여 입력되는 데이터 셋 중 적어도 하나가 서로 다르게 형성되는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들이 결합되어 형성되는 앙상블(ensemble) AI 모델에서상기 복수개의 AI 모델들 각각에 적용되는 복수개의 가중치 값들을 조절하는 단계를 더 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 복수개의 가중치 값들을 조절하는 단계는 오분류 확률(misclassification probability)이 높으면 적용되는 가중치 값이 작아지도록, 상기 복수개의 AI 모델들 각각에 적용되는 복수개의 가중치 값들을 조절하는 단계를 포함하는, 입력 데이터에 근거한 AI 모델 선택방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 제1 데이터를 상기 앙상블 AI 모델로 입력하고, 상기 제1 데이터에 대응되는 최종 분류 결과를 출력하는단계를 더 포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항에 있어서, 상기 복수개의 AI 모델들은 복수개의 AI가 결합되어 형성되는 앙상블(ensemble) AI 모델을 포함하는, 입력 데이터에 근거한 AI 모델 선택방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1항에 있어서, 상기 복수개의 AI 모델들은 적어도 하나의 온 디바이스(On-device) AI 모델 및 적어도 하나의 서버 기반(Server based) AI 모델을포함하는, 입력 데이터에 근거한 AI 모델 선택 방법."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "디스플레이; 및 적어도 하나의 인스트럭션을 실행하여, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분공개특허 10-2020-0142374-4-류 데이터를 획득하고, 추가 AI 모델을 상기 오분류 데이터로 학습시켜, 학습된 추가 AI 모델을 획득하며, 상기학습된 추가 AI 모델로 제1 데이터가 입력되면, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들이 출력되도록 제어하며, 상기 오분류 확률들에 근거하여, 상기 복수개의 AI모델들 중 어느 하나를 선택하는 프로세서를 포함하는 디스플레이 장치."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 프로세서는 상기 복수개의 AI 모델들 중, 상기 오분류 확률들 중 가장 작은 값을 가지는 오분류 확률에 대응되는 모델을 선택하는, 디스플레이 장치."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서, 상기 프로세서는 상기 오분류 데이터를 입력받은 추가 AI 모델에서, 상기 오분류 데이터가 상기 복수개의 AI 모델들 중 어느 모델에서 분류된 데이터인지 학습하도록 제어하는, 디스플레이 장치."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서, 상기 프로세서는 상기 복수개의 AI 모델들 각각으로 상기 학습 데이터 셋을 입력하여, 상기 학습 데이터 셋을 상기 적어도 하나의 부류로 분류한 상기 결과가 출력되도록 제어하는, 디스플레이 장치."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항에 있어서, 서버와 통신하는 통신부를 더 포함하며, 상기 프로세서는 상기 통신부를 통하여 상기 서버로부터 상기 오분류 데이터가 수신되도록 제어하는, 디스플레이 장치."}
{"patent_id": "10-2019-0069556", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨터로 읽을 수 있는 기록 매체에 있어서, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하는 동작; 추가 AI 모델에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 동작;상기 학습된 추가 AI 모델로 제1 데이터를 입력하고, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출력하는 동작; 및 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택하는 동작을 수행하도록 하는 프로그램이 저장된 기록 매체."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "개시된 실시예는, 복수개의 AI 모델들 중, 테스트 대상이 되는 데이터에 대응되는 결과, 예를 들어, 적어도 하나 의 부류 중 어느 하나로의 분류 결과를 정확하게 획득할 수 있도록 하는 AI 모델을 자동으로 선택하는, 입력 데 이터에 근거한 AI 모델 선택 방법 및 그에 따른 방법을 수행하는 디스플레이 장치가 개시된다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "개시된 실시예는 입력 데이터에 근거한 AI 모델 선택 방법 및 그에 따른 방법을 수행하는 디스플레이 장치에 대 한 것이다. 구체적으로, 개시된 실시예는 입력 데이터에 대응되는 결과를 출력하는 입력 데이터에 근거한 AI 모델 선택 방 법 및 그에 따른 방법을 수행하는 디스플레이 장치에 대한 것이다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence, 이하, AI) 시스템은 기계가 스스로 학습(training)하고 판단하며 목적하는 결과를 도출하거나 목적하는 동작을 수행하는 시스템이다. AI 기술은 딥러닝과 같은 기계 학습 및 기계학습을 활용한 요소 기술들로 구성된다. AI 기술은, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야 등에서 널리 이용되고 있다. 예를 들어, AI 기술은 시각적 이해 및 추론/예측의 기술 분야의 기술에서 이용될 수 있다. 구체적으로, AI 기술 을 이용하여 입력된 데이터를 분석하여 분류하기 위한 기술을 구현할 수 있다. 즉, 입력된 데이터를 분석 및/또 는 분류하여, 목적하는 결과를 획득할 수 있는 방법 및 장치를 구현할 수 있다. 이하에서는, 다양한 AI 기술들 중에서, 입력된 데이터를 분석하여 입력된 데이터(예를 들어, 이미지)에 포함되 는 객체를 인식하고 인식된 객체를 적어도 하나의 부류(class)로 분류하여 출력하는 AI 기술을 예로 들어 설명 한다. 이러한 AI 기술은 알고리즘을 활용하여 구현될 수 있다. 여기서, AI 기술을 구현하기 위한 알고리즘 또는 알고 리즘의 집합을 신경망(Neural Network)이라 한다. 여기서, 신경망은 입력 데이터를 입력받고, 전술한 분석 및 분류를 위한 연산을 수행하여, 결과 데이터를 출력할 수 있다. 이렇게, 신경망이 입력 데이터에 대응되는 결과 데이터를 정확하게 출력하기 위해서는, 신경망을 트레이닝 시킬 필요가 있다. 여기서, '트레이닝(training)'은 신경망으로 다양한 데이터들을 입력시키고, 입력된 데이터들을 분석하는 방법, 입력된 데이터들을 분류하는 방 법, 및/또는 입력된 데이터들에서 결과 데이터 생성에 필요한 특징을 추출하는 방법 등을 신경망이 스스로 발견 또는 터득할 수 있도록 신경망을 훈련시키는 것을 의미할 수 있다. 여기서, '트레이닝(training)'은 국문으로 '학습' 또는 '훈련'으로 표현될 수 있다. 또한, 전술한 신경망을 통하여 입력 데이터에 대응되는 출력 데이터를 출력하도록 하는 알고리즘의 집합, 알고 리즘의 집합을 실행하는 소프트웨어 및/또는 알고리집의 집합을 실행하는 하드웨어를 'AI 모델'(또는, '인공지 능 모델')이라 칭할 수 있을 것이다. AI 모델은 매우 다양한 형태로 존재할 수 있다. 구체적으로, 이미지를 입력받고, 입력된 이미지를 분석하여 이 미지에 포함되는 객체를 적어도 하나의 부류로 분류하는 동작을 수행하는 복수개의 AI 모델들이 존재할 수 있다. 여기서, 복수개의 AI 모델들 각각이 입력 데이터에 대응되는 출력 데이터를 생성하는데 있어서, 출력 데이터의 정확도가 복수개의 AI 모델에서 서로 달라질 수 있다. 또한, 입력 데이터에 따라서 복수개의 AI 모델에서의 출 력 결과들이 달라질 수 있다. 즉, 동일한 입력 데이터를 입력하였을 때, 제1 AI 모델에서는 결과 데이터가 참 값을 가지나, 제2 AI 모델에서는 결과 데이터가 틀린 값을 가질 수 있다. 이렇게 다양하게 존재하는 AI 모델들 중, 어느 모델을 이용하여 데이터를 입력 및 결과를 획득할지 여부를 결정 할 필요가 있다. 나아가, 다양한 형태로 존재하는 AI 모델들 중 입력 데이터의 처리 정확도를 높일 수 있는 AI 모델을 선택할 수 있는 방법 및 장치를 제공할 필요가 있다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "개시된 실시예는, 복수개의 AI 모델 중 자동으로 하나의 AI 모델을 선택할 수 있도록 하는, 입력 데이터에 근거 한 AI 모델 선택 방법 및 그에 따른 방법을 수행하는 디스플레이 장치의 제공을 목적으로 한다. 구체적으로, 개시된 실시예는 복수개의 AI 모델들 중에서 처리 대상이 되는 입력 데이터를 처리하기 최적화된 AI 모델을 선택할 수 있도록 하는, 입력 데이터에 근거한 AI 모델 선택 방법 및 그에 따른 방법을 수행하는 디 스플레이 장치의 제공을 목적으로 한다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 복수개의 AI(Artificial Intelligence) 모델 들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 상기 학습 데 이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하는 단계; 추가 AI 모델에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 단계; 상기 학습된 추가 AI 모델로 제1 데이터를 입력하고, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출 력하는 단계; 및 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택한다. 또한, 상기 선택하는 단계는 상기 복수개의 AI 모델들 중, 상기 오분류 확률들 중 가장 작은 값을 가지는 오분 류 확률에 대응되는 모델을 선택하는 단계를 포함할 수 있다. 또한, 상기 학습하는 단계는 상기 오분류 데이터를 입력받은 추가 AI 모델에서, 상기 오분류 데이터가 상기 복 수개의 AI 모델들 중 어느 모델에서 분류된 데이터인지를 학습하는 단계; 및 상기 학습된 추가 AI 모델을 획득 하는 단계를 포함할 수 있다. 또한, 상기 학습하는 단계는 상기 오분류 데이터를 입력받은 상기 추가 AI 모델이, 상기 복수개의 AI 모델들 각 각에 의해서 학습되지 못하는 데이터의 특성 및 데이터의 분포(distribution)를 학습하는 단계를 포함할 수 있 다. 또한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 상기 선택된 AI 모델에서, 제1 데이터 를 입력받아 상기 적어도 하나의 부류로 분류한 결과를 출력하는 단계를 더 포함할 수 있다. 또한, 상기 추가 AI 모델은 상기 복수개의 AI 모델들과 다른 AI 모델이 될 수 있다. 또한, 상기 오분류 확률은 상기 복수개의 AI 모델들 각각이 입력받은 데이터를 올바르지 못하게 분류할 확률을 나타낼 수 있다. 또한, 상기 오분류 데이터를 획득하는 단계는 상기 복수개의 AI 모델들 각각에서 상기 학습 데이터 셋을 입력받 고, 상기 학습 데이터 셋을 상기 적어도 하나의 부류로 분류하여 상기 결과를 출력하는 단계; 및 상기 학습 데 이터 셋 중, 상기 결과가 잘못된 값을 가지는 데이터인 상기 오분류 데이터를 획득하는 단계를 포함할 수 있다. 또한, 상기 복수개의 AI 모델은 하이퍼 파라미터(hyper-parameter), 모델의 구조(architecture), 학습 기법 (training technique), 및 트레이닝을 위하여 입력되는 데이터 셋 중 적어도 하나가 서로 다르게 형성될 수 있 다. 또한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들이 결합되어 형성되는 앙상블(ensemble) AI 모델에서 상기 복수개의 AI 모델들 각각에 적용 되는 복수개의 가중치 값들을 조절하는 단계를 더 포함할 수 있다. 또한, 상기 복수개의 가중치 값들을 조절하는 단계는 오분류 확률(misclassification probability)이 높으면 적 용되는 가중치 값이 작아지도록, 상기 복수개의 AI 모델들 각각에 적용되는 복수개의 가중치 값들을 조절하는 단계를 포함할 수 있다. 또한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 상기 제1 데이터를 상기 앙상블 AI 모 델로 입력하고, 상기 제1 데이터에 대응되는 최종 분류 결과를 출력하는 단계를 더 포함할 수 있다. 또한, 상기 복수개의 AI 모델들은 복수개의 AI가 결합되어 형성되는 앙상블(ensemble) AI 모델을 포함할 수 있 다. 또한, 상기 복수개의 AI 모델들은 적어도 하나의 온 디바이스(On-device) AI 모델 및 적어도 하나의 서버 기반 (Server based) AI 모델을 포함할 수 있다. 개시된 실시예에 따른 디스플레이 장치는 디스플레이; 및 적어도 하나의 인스트럭션을 실행하여, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터 를 획득하고, 추가 AI 모델을 상기 오분류 데이터로 학습시켜, 학습된 추가 AI 모델을 획득하며, 상기 학습된 추가 AI 모델로 제1 데이터를 입력하여, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들이 출력되도록 제어하며, 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하 나를 선택하는 프로세서를 포함한다. 개시된 실시예에 따른 컴퓨터 프로그램 제품은, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데 이터 셋을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류 된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하는 동작; 추가 AI 모델에서 상기 오분류데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 동작; 상기 학습된 추가 AI 모델로 제1 데이터를 입력하고, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출력하는 동 작; 및 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택하는 동작을 수행하도록 하는 프로그램이 저장된 기록 매체를 포함한다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법, 그에 따른 방법을 수행하는 디스플레이 장치, 및 그에 따른 방법을 수행하기 위한 프로그램 제품은, 복수개의 AI 모델들 중에서 처리 대상이 되는 입력 데이 터를 처리하기 최적화된 AI 모델을 자동으로 선택할 수 있다. 그에 따라서, AI 모델에서 수행된 연산의 결과 출력되는 출력 결과의 정확도를 높일 수 있다."}
{"patent_id": "10-2019-0069556", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 첨부한 도면을 참조하여 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 본 발명의 실시예를 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관 계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 명세서 전체에서, 어떤 부분이 다른 부분과 \"연결\"되어 있다고 할 때, 이는 \"직접적으로 연결\"되어 있는 경우뿐 아니라, 그 중간에 다른 소자를 사이에 두고 \"전기적으로 연결\"되어 있는 경우도 포함한다. 또한 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아 니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 본 명세서에서 다양한 곳에 등장하는 \"일부 실시예에서\" 또는 \"일 실시예에서\" 등의 어구는 반드시 모두 동일한 실시예를 가리키는 것은 아니다. 일부 실시예는 기능적인 블록 구성들 및 다양한 처리 단계들로 나타내어질 수 있다. 이러한 기능 블록들의 일 부 또는 전부는, 특정 기능들을 실행하는 다양한 개수의 하드웨어 및/또는 소프트웨어 구성들로 구현될 수 있다. 예를 들어, 본 개시의 기능 블록들은 하나 이상의 프로세서 또는 마이크로프로세서들에 의해 구현되거나, 의도하는 기능을 수행하기 위한 회로 구성들에 의해 구현될 수 있다. 또한, 예를 들어, 본 개시의 기능 블록들은 다양한 프로그래밍 또는 스크립팅 언어로 구현될 수 있다. 기능 블록들은 하나 이상의 프로세서 들에서 실행되는 알고리즘으로 구현될 수 있다. 또한, 본 개시는 전자적인 환경 설정, 신호 처리, 및/또는 데 이터 처리 등을 위하여 종래 기술을 채용할 수 있다. 모듈 및 구성등과 같은 용어는 넓게 사용될 수 있으며, 기 계적이고 물리적인 구성들로서 한정되는 것은 아니다. 또한, 도면에 도시된 구성 요소들 간의 연결 선 또는 연결 부재들은 기능적인 연결 및/또는 물리적 또는 회로적 연결들을 예시적으로 나타낸 것일 뿐이다. 실제 장치에서는 대체 가능하거나 추가된 다양한 기능적인 연결, 물 리적인 연결, 또는 회로 연결들에 의해 구성 요소들 간의 연결이 나타내어질 수 있다. 또한, 'A와 B 중 적어도 하나'라는 기재는 'A 또는 B' 또는 'A 및 B'를 의미한다. 개시된 실시예에서, AI 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 각 레이어는 복수의 가중치(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치의 연산을 통해 레이어의 연산을 수행한다. 그리고, AI 모델을 구성하는 신경망은, 인공지능(AI: Artificial Intelligence) 기술에 기초하여 신경망에 입력 된 이미지로부터 객체를 인식하는 방법을 학습하는 알고리즘의 집합일 수 있다. 예를 들어, 신경망은, (i) 이미지를 입력 값으로 하는 지도 학습(supervised learning), 및/또는 (ii) 별다른 지도 없이 이미지로부터 객체를 인식하기 위해 필요한 데이터의 종류를 스스로 학습함으로써, 이미지로부터 객 체를 인식하기 위한 패턴 또는 방법을 발견하는 비지도 학습(unsupervised learning)에 기초하여, 이미지로부터 객체를 인식하는 방법을 학습할 수 있다. 또 다른 예로, 신경망은, 학습에 따라 객체를 인식한 결과가 올바른 지에 대한 피드백을 이용하는 강화 학습(reinforcement learning)을 이용하여, 이미지로부터 객체를 인식하는 방법을 학습할 수 있다. 또 다른 예로, 신경망은 준지도형 학습(semi-supervised learning)을 이용하여, 이미지 로부터 객체를 인식하는 방법을 학습할 수 있다. 또한, 신경망(Neural Network)은 인공 지능(AI) 기술에 따른 연산을 수행하며, 인공 신경망(Artificial Neural Network)으로 호칭될 수도 있다. 또한, 신경망은 복수의 은닉 레이어(hidden layer)들을 통한 연산을 수행하는 심층 신경망(DNN: Deep Neural Network)가 될 수 있다. 구체적으로, 신경망은 연산을 수행하는 내부의 레이어(layer)인 은닉 레이어(hidden layer)의 개수가 복수일 경 우, 즉 연산을 수행하는 신경망의 심도(depth)가 증가하는 경우, 심층 신경망으로 분류될 수 있다. 신경망의 예 로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 및 심층 Q-네트워크 (Deep Q-Networks) 등이 있으며, 본 발명에서의 신경망은 명시한 경우를 제외하고 전술한 예에 한정되지 않는다. 또한, CNN 신경망은 DCNN(Deep Convolution Neural Network) 또는 캡 스넷(Capsnet) 신경망(미도시) 등으로 세분화 될 수 있다. 전술한 바와 같이, 'AI 모델'은 입력 데이터를 수신하고 목적하는 결과를 출력하도록 동작하는 적어도 하나의 레이어를 포함하는 신경망을 의미할 수 있다. 또한, 'AI 모델'은 신경망을 통한 연산을 수행하여 목적하는 결과를 출력하는 알고리즘 또는 복수의 알고리즘의 집합, 이러한 알고리즘 또는 그의 집합을 실행하기 위한 프로세 서(processor), 이러한 알고리즘 또는 그의 집합을 실행하기 위한 소프트웨어, 또는 이러한 알고리즘 또는 그의 집합을 실행하기 위한 하드웨어를 의미할 수 있다. 개시된 실시예에서, AI 모델은 신경망을 통한 연산을 수행하여, 입력 데이터에 대응되는 결과를 출력한다. 개시 된 실시예에서 이용되는 AI 모델은, 입력 데이터를 분석하여 입력 데이터에 포함되는 객체를 인식 및 분류하기 위한 신경망으로 형성될 수 있다. 또한, 개시된 실시예에서 이용되는 AI 모델은, 입력 데이터를 분석하여, 소정의 기준에 따라서 분류한 분류 결 과를 출력하기 위한 신경망으로 형성될 수 있다. 개시된 실시예에서 이용되는 AI 모델은, 이하에서 도 1a 및 도 1b를 참조하여 설명하도록 한다. 도 1a은 신경망을 이용하여 입력 데이터에 대응되는 출력 데이터를 생성하는 AI 기술을 설명하기 위한 도면이다. 도 1a에는, 숨은 레이어이 3개의 레이어로 형성되는 심층 신경망(DNN)이 예시된다. 구체적으로, 도 1a은 이미지를 입력으로 수신하고, 수신된 이미지를 심층 신경망에서 객체 인식 및 객체 분류하 여, 그에 대응되는 결과를 출력하는 AI 모델을 도시하며, AI 모델이 심층 신경망으로 형성된 경우를 예로 들어 도시한다. 도 1a을 참조하면, 심층 신경망은 학습 데이터(training data)를 입력받아 트레이닝(training)될 수 있다. 그리고, 학습된 심층 신경망은 객체 인식을 위한 연산을 수행할 수 있다. 여기서, 심층 신경망은 모 델의 구현 방식(예를 들어, CNN(Convolution Neural Network) 등), 결과의 정확도, 결과의 신뢰도, 프로세서의 연산 처리 속도 및 용량 등에 따라 매우 다양하게 설계될 수 있다. 심층 신경망은 입력 레이어, 숨은 레이어(hidden layer) 및 출력 레이어을 포함 하여, 객 체 인식을 위한 연산을 수행할 수 있다. 또한, 심층 신경망을 형성하는 복수개의 레이어들 각각은 하나 이상의 노드를 포함할 수 있다. 예를 들어, 입력 레이어은 데이터를 수신하는 하나 이상의 노드(node)(예를 들어, 110)들을 포함할 수 있다. 도 1a에 서는 입력 레이어이 복수개의 노드들을 포함하는 경우를 예로 들어 도시하였다. 그리고, 입력된 이미지 를 스케일링(scaling)하여 획득한 복수개의 이미지들 각각을 복수개의 노드들로 입력할 수 있다. 구 체적으로, 이미지를 주파수 대역 별로 스케일링하여 획득한 복수개의 이미지들을 복수개의 노드로 입 력할 수 있다. 여기서, 인접한 두 개의 레이어들은 도시된 바와 같이 복수개의 엣지(edge)들(예를 들어, 112)로 연결된다. 각 각의 노드들은 대응되는 가중치값을 가지고 있어서, 심층 신경망은 입력된 신호와 가중치 값을 연산, 예를 들어, 곱하기 연산한 값에 근거하여, 출력 데이터를 획득할 수 있다. 도 1a에서는 일 레이어에 포함되는 노드들 이 인접한 다른 레이어에 포함되는 노드들과 전체적으로 연결되는 'full -connected'방식으로 연결되어 있는 경 우가 예시되었다. 그러나, 일 레이어에 포함되는 노드들이 인접한 다른 레이어에 포함되는 노드들과 일부만 연 결되어 있을 수도 있다. 이 경우, 일 레이어에 포함되는 적어도 하나의 노드는 인접한 다른 레이어에 포함되는 적어도 하나의 노드와 연결되어 있지 않을 수 있다. 심층 신경망은 복수의 학습 이미지에 근거하여 학습되어, 이미지 내에 포함되는 객체를 인식하는 객체 인 식 모델로서 구축할 수 있다. 구체적으로, 심층 신경망를 통하여 출력되는 결과의 정확도를 높이기 위해서, 복수의 학습 이미지에 근거하여 출력 레이어에서 입력 레이어 방향으로 트레이닝(training) 을 반복적으로 수행하며 출력 결과의 정확도가 높아지도록 가중치값들을 수정할 수 있다. 그리고, 최종적으로 수정된 가중치값들을 가지는 심층 신경망은 객체 인식 모델로 이용될 수 있다. 심층 신경망이 이미지를 입력받고 이미지에 포함되는 객체를 인식하도록 트레이닝된 경우, 심층 신경망이 이미지를 입력받으면, 심층 신경망은 이미지을 분석하여 이미지 내에 포함되는 객체가 '판다'라 는 결과를 출력할 수 있다. 도 1b는 신경망을 이용하여 입력 데이터에 대응되는 출력 데이터를 생성하는 AI 기술을 설명하기 위한 다른 도 면이다. 도 1b 에 있어서, 도 1a에서와 동일한 구성은 동일한 도면 기호를 이용하여 도시하였다. 도 1b를 참조하면, 개시된 실시예에서 이용되는 AI 모델은, 입력 데이터를 분석하여, 소정의 기준에 따라서 분 류한 분류 결과를 출력하기 위한 신경망으로 형성될 수 있다. 구체적으로, 개시된 실시예에서 이용되는 AI 모델은 입력된 데이터를 분석하여 입력된 데이터의 유형, 또는 종류를 분류하도록 트레이닝된 심층 신경망으로 형성될 수 있다. 심층 신경망로 입력되는 입력 데이터는 다양한 형태의 데이터가 될 수 있다. 구체적으로, 입력 데이터는 도 1a 에서 예시된 바와 같이 이미지 데이터가 될 수 있으며, 그 밖에도 사운드 데이터(sound data), 텍스트 데 이터 등이 될 수 있다. 도 1b에서는 심층 신경망이 사운드 데이터를 입력받고, 입력된 사운드 데이터를 분 석하여, 적어도 하나의 부류(class)로 분류한 분류 결과를 출력하는 경우를 예로 들어 설명한다. 도 1b 를 참조하면, 심층 신경망은 사운드 데이터(Sound data)를 입력받고, 심층 신경망에 포함되는 숨은 레이어를 통하여 입력된 사운드 데이터를 분석할 수 있다. 그리고, 심층 신경망은 입력된 사운 드 데이터를 적어도 하나의 부류 또는 종류, 예를 들어, 발화(Speech), 음악(music), 잡음(noise) 등으로 분류 한 결과를 출력할 수 있다. 예를 들어, 입력된 사운드 데이터(Sound data)가 사용자가 발화한 음성 데이터이면, 심층 신경망은 'Speech' 라는 분류 결과를 출력할 수 있다. 또한, 결과는 상세 분류 결과를 포함할 수 도 있을 것이다. 예를 들어, 입력된 사운드 데이터(Sound dat a)가 음악(music)에 대응되면, 음악의 세부 부류, 예를 들어, 클래식, 재즈, 팝, 랩, 전통음악 등으로 분류된 경과를 출력할 수도 있을 것이다. 도 1a 및 도 1b에 있어서, 심층 신경망에서 출력되는 결과는 잘못된 값을 가질 수 있다. 예를 들어, 도시 된 심층 신경망에서 출력되는 결과의 정확도는 90% 가 될 수 있을 것이다. 이 경우, 출력되는 결과가 틀릴 확률은 10%가 될 수 있다. 입력을 수신하고 목적하는 결과를 출력하는 AI 모델은 다양한 형태로 존재할 수 있다. 구체적으로, AI 모델은, 포함되는 신경망의 구조(architecture), 적용되는 하이퍼 파라미터(hyper-parameter)의 설정, 신경망을 학습시 키기 위해서 이용되는 학습 데이터들, 학습 기술(training technique) 등에 따라서, 다양한 형태로 존재할 수 있다. 동일한 이미지를 입력받는 경우, 신경망의 구조(architecture), 적용되는 하이퍼 파라미터(hyper-parameter)의 설정, 신경망을 학습시키기 위해서 이용되는 학습 데이터들, 학습 기술(training technique) 중 적어도 하나가 다르게 형성되는 복수개의 AI 모델들은, 서로 다른 결과 정확도를 가질 수 있다. 도 1a 에 도시된 예에 있어서, 객체 인식 및 인식된 객체의 분류 동작을 수행하는, 신경망의 구조가 서로 다른 형태를 갖는 제1 AI 모델, 제2 AI 모델, 및 제3 AI 모델이 존재한다고 하자. 그리고, 제1 AI 모델의 결과 정확 도는 60%, 제2 AI 모델의 결과 정확도는 70%, 및 제3 AI 모델의 결과 정확도는 90%라고 하자. 여기서, 결과 정 확도는 해당 AI 모델이 결과 출력을 하였던 복수의 입력들에 대한 결과 정확도를 평균하여 산출한 값이라 할 수 있다. 이 경우, 제1 AI 모델, 제2 AI 모델, 및 제3 AI 모델 각각으로 판다가 그려진 동일한 이미지(예를 들어, 130)가 입력된 경우, 제1 AI 모델은 '판다'라는 결과를 출력하고, 제2 AI 모델은 '개'라는 결과를 출력하고, 제3 AI 모 델은 '사람'이라는 결과를 출력할 수 있다. 전술한 예에서, 제1 AI 모델, 제2 AI 모델, 및 제3 AI 모델 중 결과 정확도가 가장 높은 모델은 제3 AI 모델이 된다. 그러나, 결과의 정확도가 가장 높은 제3 AI 모델에서 잘못된 분류 결과인 '사람'을 출력하였으며, 결과의 정확도가 가장 낮은 제1 AI 모델에서는 올바른 분류 결과인 '판다'를 출력하였다. 예시에서와 같이, 결과 정확도가 가장 높은 모델이라 하더라도, 입력된 이미지의 특성에 따라서 어떤 이미지에 대하여는 객체 인식을 정확하게 수행하지 못하여 잘못된 결과가 출력되는 경우가 존재할 수 있다. 전술한 바와 같이, 복수개의 AI 모델들 중 어느 모델로 입력 데이터에 대응되는 결과 데이터를 획득하냐에 따라 서, 결과의 정확도가 달라질 수 있다. 따라서, 복수개의 AI 모델들 중, 사용자가 결과 도출을 위하여 테스트하 고자 하는 데이터에 대하여, 높은 정확도를 갖는 AI 모델을 자동적으로 선택할 수 있도록 하는 방법 및 장치를 제공할 필요가 있다. 이하에서는 첨부된 도면들을 참조하여, 사용자가 테스트하고자 하는 입력하는 데이터에 대하여, 정확한 결과를 출력할 수 있는 AI 모델을 선택하기 위한 실시예들을 설명하도록 한다. 개시된 실시예에 따른 방법은 테스트를 위하여 입력되는 입력 데이터에 최적화된 AI 모델을 선택하기 위한, 입 력 데이터에 근거한 AI 모델 선택 방법이다. 개시된 실시예에 따른 방법(예를 들어, 도 2a에 도시된 입력 데이터에 근거한 AI 모델 선택 방법 등)은 적 어도 하나의 인스트럭션을 실행하는 적어도 하나의 프로세서(processor)(또는, 적어도 하나의 프로세서를 포함 하는 전자 장치)에 의해서 수행될 수 있다. 여기서, 프로세서는 하나 이상의 명령어 중 적어도 하나를 실행시킴 으로써, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법에 포함되는 동작들을 실행할 수 있다. 또한, 프로세서는 하드웨어 또는 소프트웨어적으로 구현될 수 있다. 구체적으로, 비디오에 대응되는 그래픽 처 리를 위한 그래픽 프로세서(Graphic Processing Unit, 미도시)를 포함할 수 있다. 프로세서(미도시)는 코어 (core, 미도시)와 GPU(미도시)를 통합한 SoC(System On Chip)로 구현될 수 있다. 프로세서(미도시)는 싱글 코어, 듀얼 코어, 트리플 코어, 쿼드 코어 및 그 배수의 코어를 포함할 수 있다. 또한, 전술한 프로세서는 전자 장치(미도시) 및 서버(미도시) 중 적어도 하나에 탑재될 수 있다. 따라서, 개시 된 실시예에 따른 방법(예를 들어, 도 2a에 도시된 입력 데이터에 근거한 AI 모델 선택 방법 등)은 전술한 프로세서를 탑재한 전자 장치(미도시) 및 서버(미도시) 중 적어도 하나를 통하여 수행될 수 있다. 여기서, 전자 장치는 디스플레이를 포함하는 전자 장치가 될 수 있다. 구체적으로, 디스플레이를 포함하는 전자 장치는 휴대폰, 태블릿 PC, 디지털 카메라, 캠코더, 노트북 컴퓨터(laptop computer), 태블릿 PC, 데스크탑, 전 자책 단말기, 디지털 방송용 단말기, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 네비게이션, MP3 플레이어, 착용형 기기(wearable device) 등과 같은 다양한 형태로 구현될 수 있다. 또한, 전 자 장치는 고정된 위치에 배치되는 고정형 전자 장치 또는 휴대 가능한 형태를 갖는 이동형 전자 장치일 수 있 으며, 디지털 방송 수신이 가능한 디지털 방송 수신기일 수 있다. 이하에서는 디스플레이를 포함하는 전자 장치 를 '디스플레이 장치'라 하겠다. 그리고, 서버는 통신 네트워크를 통하여 전자 장치와 데이터를 송수신하며 데이터를 처리하는 서버, 서버 시스 템, 서버 기반의 장치 등을 포함할 수 있다. 이하에서는 설명의 편의 상, 서버, 서버 시스템, 서버 기반의 장치 등을 모두 '서버'로 칭하도록 한다. 이하에서는, 개시된 실시예에 따른 방법을 도 2a 내지 도 11을 참조하여 상세히 설명한다. 그리고, 개시된 실시 예에 따른 방법을 수행할 수 있는 장치 구성은 이하의 도 12 내지 도 19를 참조하여 상세히 설명한다. 도 2a는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 나타내는 일 흐름도이다. 개시된 실 시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋(training dataset)을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하는 단 계(S210), 추가 AI 모델에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 단계(S220), 상 기 학습된 추가 AI 모델로 제1 데이터를 입력하고, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률 (misclassification probability)들을 출력하는 단계(S230), 및 상기 오분류 확률들에 근거하여, 상기 복수개 의 AI 모델들 중 어느 하나를 선택하는 단계(S240)을 포함한다. 이하에서는, 도 2a 내지 도 8을 참조하여, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법(20 0)을 상세히 설명하도록 하겠다. 도 2a를 참조하면, 입력 데이터에 근거한 AI 모델 선택 방법은 복수개의 AI(Artificial Intelligence) 모 델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득한다(S210). 여기서, 복수개의 AI 모델들은 사용자가 의도하는 결과 도출 동작을 수행하는 서로 다른 AI 모델들이 될 수 있 다. 또는, 복수의 AI 모델들은, 테스트를 위하여 이용 가능한 서로 다른 AI 모델들이 될 수 있다. 또는, 복수의 AI 모델들은, 입력 데이터에 근거한 AI 모델 선택 방법을 수행하는 서버 또는 장치, 또는 서버 및 장치가 결합된 시스템에서, 제공 또는 이용 가능한 복수의 AI 모델이 될 수 있다. 예를 들어, 복수개의 AI 모델들은 객체 인식 및 분류 동작을 수행하는 서로 다른 AI 모델들이 될 수 있다. 예를 들어, 사용자가 입력되는 이미지에 포함되는 객체를 분석하여 개 또는 고양이로 분류하길 원하는 경우, 복수개 의 AI 모델은 객체 인식 및 객체(예를 들어, 개 또는 고양이)의 분류 동작을 수행하여 분류된 결과를 출력할 수 있다. 그리고, 학습 데이터 셋(training data set)은 복수개의 AI 모델들 각각을 훈련(training)시키기 위해서 입력되 는 데이터들의 집합을 의미한다. AI 모델이 입력된 데이터를 분석하여 목적하는 출력을 생성하기 위해서는, 복 수의 데이터들을 입력받고 입력된 복수의 데이터들에 대한 분석을 통하여 목적하는 출력을 획득 또는 추출하기 위한 방법을 스스로 발견 또는 터득하도록 하는 트레이닝(training)을 거쳐야 한다. 이 때, AI 모델의 트레이닝 을 위하여 입력되는 데이터들의 집합을 '학습 데이터 셋'이라 할 수 있다. 즉, 학습 데이터 셋은 AI 모델을 트 레이닝 시키고자 할 때, 해당 AI 모델로 입력되는 데이터들의 집합이 될 수 있다. 학습 데이터 셋 및 복수개의 AI 모델들은 이하에서 도 3 내지 도 6을 참조하여 상세히 설명한다. 도 3 내지 도 8에 있어서, 동일한 구성은 동일한 도면 기호를 이용하여 도시하였다. 도 3은 개시된 실시예에서 이용되는 학습 데이터 셋(training data set)을 나타내는 도면이다. 도 3을 참조하면, 학습 데이터 셋은 복수개의 AI 모델들 각각으로 입력되는 복수개의 이미지들의 집합을 나타낼 수 있다. 도 3에서는 학습 데이터 셋이 개와 고양이 중 어느 하나를 객체로 포함하는 이미지들(301, 305, 311, 31 5)의 집합인 경우를 예로 들어 도시하였다. 이하에서는, 학습 데이터 셋이 개 또는 고양이 중 어느 하나의 객체를 포함하는 100 장의 이미지를 포함하는 경우를 예로 들어 설명한다. 또한, 학습 데이터 셋에 포함되 는 이미지의 개수는 예시일 뿐, 실제 AI 모델을 트레이닝 시키기 위해서는 훨씬 더 많은 이미지들이 이용될 수 있을 것이다. 그리고, S210에서 언급된 복수개의 AI 모델들 각각은 학습 데이터 셋을 이용하여 이미지 내에 포함되는 객 체를 인식 및 분류하는 분류기(classifier)로 동작할 수 있는 AI 모델인 경우를 예로 들어서 설명하겠다. 예를 들어, 복수의 AI 모델들 각각은 입력 데이터를 수신한 후, 입력 데이터에 대응되는 적어도 하나의 부류에 대한 분류 결과를 출력할 수 있다. 예를 들어, 입력 데이터 내에 포함되는 객체에 따라서 분류 및 출력하는 AI 모델 인 경우, AI 모델은 입력 데이터를 수신하고 대응되는 분류 결과를 출력할 수 있을 것이다. 도 4는 개시된 실시예에서 수행되는 분류 동작을 설명하기 위한 도면이다. 도 4에서는, AI 모델이 입력된 이미 지에 포함되는 객체를 인식하고 인식된 객체의 종류를 개 또는 고양이로 분류하여 출력하는 AI 모델인 경우를 예로 들어 설명한다. 도 4를 참조하면, 복수개의 AI 모델들 각각은 트레이닝을 위하여 학습 데이터 셋에 포함되는 이미지들을 입력받고, 입력된 이미지들 각각에 포함되는 객체를 인식 및 분류할 수 있다. 그리고, 복수개의 AI 모델들 각각 이 출력하는 분류 결과는 적어도 하나의 부류(class) 중 어느 하나가 될 수 있다. 도 4에 있어서, AI 모델은 복수개의 AI 모델들 중 어느 하나가 될 수 있다. 복수의 AI 모델들 각각, 예를 들어, AI 모델이 학습 데이터 셋를 학습하는데 있어서, 동일한 객체가 이미징된 이미지들 구분하여 학습할 수 있다. 구체적으로, AI 모델은 학습 데이터 셋에 있어서 개가 이미징된 이미지들(305, 315 등)을 순차적으로 학습한 후, 고양이가 이미징된 이미지들(301, 311 등)을 순차적 으로 학습할 수 있다. AI 모델은 입력된 데이터에 대응되는 분류 결과를 출력할 수 있다. 도 4를 참조하면, AI 모델은 입력 데이터(예를 들어, 이미지)를 입력받고, 이미지에 포함되는 객체를 인식하여 제1 부류(C1: class 1) 또는 제2 부류(C2: class 2) 중 어느 하나인 결과를 출력할 수 있다. 도 4에서는, 제1 부류(C1: class 1)가 개 이고, 제2 부류(C2: class 2)가 고양이인 경우를 예로 들어 도시하였다. AI 모델이 개를 객체로 포함하는 이미지를 입력받는다고 하자. 이때, AI 모델이 입력된 이미지 에 포함되는 객체를 올바르게 인식 및 분류한 경우, '개'라는 분류 결과를 출력할 것이며, AI 모델이 입력 된 이미지에 포함되는 객체를 올바르게 인식 및 분류하지 못하는 경우, '고양이'라는 분류 결과를 출력할 것이다. 이하에서는, AI 모델이 잘못된 결과를 출력하는 경우, 입력된 데이터를 '오분류 데이터(misclassified data)'라 하겠다. 예를 들어, AI 모델이 이미지를 입력받고 분류 결과를 '고양이'라고 출력한 경우, 이미지는 '오분류 데이터(misclassified data)'에 포함될 수 있다. 도 5는 개시된 실시예에서 획득되는 오분류 데이터를 설명하기 위한 도면이다. 그리고, 도 5 내지 도 8에서는 S210 단계에서 언급되는 복수개의 AI 모델이 3개의 AI 모델을 포함하는 경우를 예로 들어 설명한다. 도 5를 참조하면, 학습 데이터 셋을 이용하여 트레이닝되는 복수개의 AI 모델들은 제1 AI 모델(M1), 제2 AI 모델(M2), 및 제3 AI 모델(M3)이 포함될 수 있다. 도 5를 참조하면, 제1 AI 모델(M1)은 학습 데이터 셋을 입력받고, 학습 데이터 셋에 포함되는 복수의 이미지들 각각을 학습하여, 객체 인식 및 분류 동작을 수행할 수 있다. 제1 AI 모델(M1)의 경우, 분류 결과가 바르게 된 경우가 82% 이고, 분류 결과가 바르지 못한 경우(오분류 되는 경우)가 18%가 될 수 있다. 그에 따라서, 학습 데이터 셋이 100 장의 이미지를 포함할 때, 제1 AI 모델(M1)에서 수집된 오분류 데이터 는 학습 데이터 셋 중 18장의 이미지들이 될 것이다. 제2 AI 모델(M2)은 학습 데이터 셋을 입력받고, 학습 데이터 셋에 포함되는 복수의 이미지들 각각을 학습하여, 객체 인식 및 분류 동작을 수행할 수 있다. 제2 AI 모델(M2)의 경우, 분류 결과가 바르게 된 경우가 75%이고, 분류 결과가 바르지 못한 경우(오분류 되는 경우)가 22%가 될 수 있다. 그에 따라서, 학습 데이터 셋이 100 장의 이미지를 포함할 때, 제2 AI 모델(M2)에서 수집된 오분류 데이터는 학습 데이터 셋 중 25장의 이미지들이 될 것이다. 제3 AI 모델(M3)은 학습 데이터 셋을 입력받고, 학습 데이터 셋에 포함되는 복수의 이미지들 각각을 학습하여, 객체 인식 및 분류 동작을 수행할 수 있다. 제3 AI 모델(M3)의 경우, 분류 결과가 바르게 된 경우가 80% 이고, 분류 결과가 바르지 못한 경우(오분류 되는 경우)가 20%가 될 수 있다. 여기서, 분류 결과 가 바르게 된 경우의 확률을 분류 정확도로 표현할 수 있다. 그에 따라서, 학습 데이터 셋이 100 장의 이 미지를 포함할 때, 제3 AI 모델(M3)에서 수집된 오분류 데이터는 학습 데이터 셋 중 20장의 이미지들이 될 것이다. 도 5를 참조하면, 제1 AI 모델(M1)에서 수집된 오분류 데이터는 학습 데이터 셋 중 오분류 확률(18%)에 해 당하는 데이터들이 될 수 있다. 그리고, 제2 AI 모델(M2)에서 수집된 오분류 데이터는 학습 데이터 셋 중 오분류 확률(25%)에 해당하는 데이터들이 될 수 있다. 또한, 제3 AI 모델(M3)에서 수집된 오분류 데이터는 학습 데이터 셋 중 오분류 확률(20%)에 해당하는 데이터들이 될 수 있다. 도 4 및 도 5에서 예시된 바와 같이, 복수개의 AI 모델들 각각은 서로 다른 분류 정확도 및/ 또는 분류 결과를 가질 수 있다. 복수개의 AI 모델들 각각은 동일한 학습 데이터 셋을 입력받더라도, 서로 다른 분류 정확도를 가질 수 있다. 또 한, 복수개의 AI 모델들 각각은 동일한 학습 데이터 셋을 입력받더라도, 서로 다른 분류 결과를 출력할 수 있다. 도 6은 개시된 실시예에서 이용되는 복수개의 AI 모델들을 설명하기 위한 도면이다. 개시된 실시예에서, 복수개의 AI 모델들은 신경망의 구조(architecture), 적용되는 하이퍼 파라미터(hyper- parameter)의 설정, 신경망을 학습시키기 위해서 이용되는 학습 데이터들, 학습 기술(training technique) 중 적어도 하나가 서로 다르게 형성될 수 있다. 도 6을 참조하면, 복수개의 AI 모델들은 블록에서 표현된 바와 같이, 신경망의 구조(architecture), 적용 되는 하이퍼 파라미터(hyper-parameter)의 설정, 신경망을 학습시키기 위해서 이용되는 학습 데이터들, 학습 기 술(training technique) 중 적어도 하나가 서로 다르게 형성될 수 있다. 예를 들어, 제1 AI 모델(M1)은 제1 학습 데이터 셋(Dataset 1)에 의해서 트레이닝된 모델이 될 수 있고, 제2 AI 모델(M2)은 제2 학습 데이터 셋(Dataset 2)에 의해서 트레이닝된 모델이 될 수 있고, 제3 AI 모델 (M3)은 제3 학습 데이터 셋(Dataset 3)에 의해서 트레이닝된 모델이 될 수 있다. 여기서, 제1 학습 데이터 셋(Dataset 1), 제2 학습 데이터 셋(Dataset 2), 및 제3 학습 데이터 셋(Dataset 3)은 서로 다른 이미지들의 집합을 나타낸다. 또 다른 예로, 제1 AI 모델(M1)은 제1 하이퍼 파라미터(예를 들어, hyper-parameter vector 1)를 갖는 모델 이 될 수 있고, 제2 AI 모델(M2)은 제2 하이퍼 파라미터(예를 들어, hyper-parameter vector 2)를 갖는 모델이 될 수 있고, 제3 AI 모델(M3)은 제3 하이퍼 파라미터(예를 들어, hyper-parameter vector 3)을 갖 는 모델이 될 수 있다. 또한, 제1 하이퍼 파라미터(예를 들어, hyper-parameter vector 1), 제2 하이퍼 파라미터(예를 들어, hyper-parameter vector 2), 제3 하이퍼 파라미터(예를 들어, hyper-parameter vector 3)는 서로 다른 값으로 설정된다. 여기서, 하이퍼 파라미터는 AI 모델을 형성하는 신경망에서의 숨은 레이어(hidden layer)의 개수, learning rate, batch size, loss function, weight decay rate 등과 같은 파라미터들을 포함할 수 있다. 또 다른 예로, 제1 AI 모델(M1)은 제1 구조(Deep-architecture 1)를 갖는 모델이 될 수 있고, 제2 AI 모 델(M2)은 제2 구조(Deep-architecture 2)를 갖는 모델이 될 수 있고, 제3 AI 모델(M3)은 제3 구조(Deep- architecture 3)를 갖는 모델이 될 수 있다. 여기서, 구조는 AI 모델의 구조를 나타내며, 제1 구조(Deep- architecture 1), 제2 구조(Deep-architecture 2) 및 제3 구조(Deep-architecture 3)는 서로 다르다. 또 다른 예로, 제1 AI 모델(M1)은 제1 학습 기법(예를 들어, domain adaptation 기법)에 의해서 형성된 모델 이 될 수 있고, 제2 AI 모델(M2)은 제2 학습 기법(예를 들어, Multi-tasking learning 기법)를 갖는 모델 이 될 수 있고, 제3 AI 모델(M3)은 제3 학습 기법(예를 들어, methodology XYZ 기법)을 갖는 모델이 될 수 있다. 즉, 제1 AI 모델(M1), 제2 AI 모델(M2), 및 제3 AI 모델(M3)은 서로 다른 학습 기술(training technique)에 의해서 형성될 수 있다. 전술한 바와 같이, 신경망의 구조(architecture), 적용되는 하이퍼 파라미터(hyper-parameter)의 설정, 신경망 을 학습시키기 위해서 이용되는 학습 데이터들, 학습 기술(training technique) 중 적어도 하나가 서로 다르게 형성되는 복수개의 AI 모델들이 존재하는 경우, 복수개의 AI 모델들 각각으로 동일한 입력 데이터가 입력되어도, 복수개의 AI 모델들에서의 인식 정확도가 서로 다른 경우가 발생할 수 있다. 또한, AI 모델은 매우 다양하게 설계할 수 있으므로, 동일한 동작을 수행하는 다양한 AI 모델들이 존재할 수 있다. 예를 들어, 특정 입력 데이터에 대하여, 제1 AI 모델(M1)은 정확하게 인식 및 분류되나, 제2 AI 모델(M2)는 인 식하지 못하는 경우가 발생하게 된다. 개시된 실시예에서는, 따라서, 서로 다른 다양한 AI 모델들 중, 사용자가 테스트하고자 하는 대상이 되는 입력 데이터에 대하여 최적화된 AI 모델을 선택하는 방법 및 장치가 개시된다. 다시 도 2a를 참조하면, 입력 데이터에 근거한 AI 모델 선택 방법은 S210 단계에 후속하여, 추가 AI 모델 에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득한다(S220). 구체적으로, S220 단계는 오분류 데이터를 입력받은 추가 AI 모델에서, 오분류 데이터가 복수개의 AI 모델들 중 어느 모델에서 분류된 데이터인 지를 학습하는 단계(단계 미도시) 및 학습의 결과, 학습된 추가 AI 모델을 획득하는 단계(단계 미도시)를 포함 할 수 있다. 여기서, 추가 AI 모델은, S210 단계에서 언급된 복수개의 AI 모델들 다른 AI 모델이다. 또한, 추가 AI 모델은, 오분류 데이터에 의해서 트레이닝될 AI 모델을 의미할 수 있다. 추가 AI 모델의 트레이닝 동작은 이하에서 도 7 을 참조하여 상세히 설명한다. 도 7은 개시된 실시예에서 수행되는 추가 모델의 학습 동작을 설명하기 위한 도면이다. 도 7를 참조하면, 추가 AI 모델(M0)을 트레이닝시킬 오분류 데이터(misclassified dataset)는 복수개의 AI 모델들 각각에서 오분류된 데이터들인 오분류 데이터(misclassified data)의 집합을 의미한다. 도 5에서 설명한 바와 같이, 학습 데이터 셋이 100 장의 이미지를 포함할 때를 예로 들자. 그러면, 오분류 데이터(misclassified dataset)는 제1 AI 모델(M1)에서 수집된 18장의 이미지, 제2 AI 모델(M2)에서 수집 된 25장의 이미지, 및 제3 AI 모델(M3)에서 수집된 20장의 이미지의 집합이 될 수 잇다. 예를 들어, 추가 AI 모델(M0)은 복수개의 모델들 각각에서 수집된 오분류 데이터를 순차적으로 트레이닝할 수 있다. 구체적으로, 추가 AI 모델(M0)은 제1 AI 모델(M1)에서 오분류된 18장의 이미지들을 학습(training)하고, 후속하 여 제2 AI 모델(M2)에서 오분류된 25장의 이미지를 학습(training)하며, 후속하여 제3 AI 모델(M3)에서 오분류 된 20장의 이미지를 학습(training)할 수 있다. 구체적으로, 추가 AI 모델(M0)은 오분류 데이터를 학습함으로써, 입력된 데이터가 복수개의 AI 모델들(예 를 들어, M1, M2, 및 M3) 중 어느 모델에서 분류된 데이터인지를 스스로 터득할 수 있다. 즉, 추가 AI 모델(M 0)은 오분류 데이터를 이용하여, 입력된 데이터가 복수개의 AI 모델들(예를 들어, M1, M2, 및 M3) 중 어느 모델에서 분류된 데이터인지를 트레이닝할 수 있다. 구체적으로, 추가 AI 모델(M0)은 오분류 데이터를 입력받고 이를 학습함으로써, 복수개의 AI 모델들(예를 들어, M1, M2, 및 M3) 각각에 의해서 학습되지 못하는 데이터의 특성 및 데이터의 분포(distribution)를 학습할 수 있다. 예를 들어, 추가 AI 모델(M0)은 제1 AI 모델(M1)에서 오분류된 18장의 이미지들을 학습(training)함으로써, 제1 AI 모델(M1)이 어떠한 이미지 특성을 갖는 이미지에 대하여 인식 및/또는 분류하지 못하는지를, 제1 AI 모델 (M1)이 인식 및/또는 분류하지 못하는 이미지는 어떠한 이미지 특성을 갖는지를 스스로 터득할 수 있다. 여기서, 이미지 특성은 이미지의 해상도, 객체의 표현 방법, 화소 값, 이미지 내에 포함되는 엣지의 특성, 이미 지의 색상 등과 같이 객체를 표현하는 특징들을 의미할 수 있다. 그리고, 추가 AI 모델(M0)은 제2 AI 모델(M2)에서 오분류된 25장의 이미지들을 학습(training)함으로써, 제2 AI 모델(M2)이 어떠한 이미지 특성을 갖는 이미지에 대하여 인식 및/또는 분류하지 못하는지를, 제2 AI 모델(M2)이 인식 및/또는 분류하지 못하는 이미지는 어떠한 이미지 특성을 갖는지를 스스로 터득할 수 있다. 계속하여, 추 가 AI 모델(M0)은 제3 AI 모델(M3)에서 오분류된 20장의 이미지들을 학습(training)함으로써, 제3 AI 모델(M 3)이 어떠한 이미지 특성을 갖는 이미지에 대하여 인식 및/또는 분류하지 못하는지를, 제3 AI 모델(M3)이 인식 및/또는 분류하지 못하는 이미지는 어떠한 이미지 특성을 갖는지를 스스로 터득할 수 있다. 다시 도 2a를 참조하면, 입력 데이터에 근거한 AI 모델 선택 방법은 S210 단계에 후속하여, S220 단계에서 학습된 추가 AI 모델(M0)로 제1 데이터가 입력되면, 복수개의 AI 모델들 각각에 대한 오분류 확률 (misclassification probability)들을 출력한다(S230). 여기서, 제1 데이터는 학습된 추가 AI 모델(MO)로 입력되는 데이터이다. 구체적으로, 제1 데이터는 학습된 추가 AI 모델(MO)을 통하여 결과를 출력하고자 하는 대상이 될 수 있다. 예를 들어, 사용자가 AI 모델을 이용하여 어떠한 이미지에 포함되는 객체가 무엇인지 테스트하고자 하는 경우, 테스트 대상이 되는 이미지가 제1 데이터가 될 수 있다. 즉, 제1 데이터는 테스트 데이터가 될 수 있다. S230 단계의 동작은 이하에서 도 8을 참조하여 상세히 설명한다. 도 8은 학습된 추가 모델에서 출력되는 오분류 확률들을 설명하기 위한 도면이다. 도 8을 참조하면, 학습된 추가 AI 모델(M0)은 제1 데이터를 입력받고, 제1 데이터가 복수개의 AI 모 델들 각각에서 오분류될 확률인 '오분류 확률(misclassification probability)'을 출력할 수 있다. 여기서, 복 수개의 AI 모델들 각각에 대응되는 오분류 확률의 총 합은 1 또는 100%가 될 수 있다. 전술한 바와 같이, S220 단계에서 추가 AI 모델(M0)는 복수개의 AI 모델들(예를 들어, M1, M2, M2)에서 수집된 오분류 데이터를 입력받고 이를 학습하였다. 따라서, 학습된 추가 AI 모델(M0)은 복수개의 AI 모델들(예를 들어, M1, M2, 및 M3) 각각에 의해서 학습되지 못하는 데이터의 특성 및 데이터의 분포(distribution)를 알고 있다. 그러므로, 학습된 추가 AI 모델(M0)은 제1 데이터를 입력받으면, 제1 데이터의 데이터 특성 및 데이 터 분포를 분석하고, 분석된 데이터 특성 및 데이터 분포를 갖는 제1 데이터가 복수개의 AI 모델들(예를 들어, M1, M2, 및 M3) 각각에서 오분류될 확률을 산출할 수 있다. 도 8을 참조하면, 복수개의 AI 모델들이 제1 AI 모델(M1), 제2 AI 모델(M2), 및 제3 AI 모델(M3)을 포함하는 경 우, 제1 데이터가 제1 AI 모델(M1)에서 오분류될 확률은 0.7(또는, 70%), 제1 데이터가 제2 AI 모델(M2)에서 오분류될 확률은 0.2(또는, 20%), 그리고, 제1 데이터가 제3 AI 모델(M3)에서 오분류될 확률은 0.1(또는, 10%)이 될 수 있다. 즉, 학습된 추가 AI 모델(M0)이 분류하는 부류(class)는 복수개의 AI 모델들, (예를 들어, M1, M2 및 M3) 및 복 수개의 AI 모델들 각각에 대응되는 오분류 확률값이 될 수 있다. 예를 들어, 학습된 추가 AI 모델(M0)이 분류하 는 부류(class)에 있어서, 제1 부류(C1: class 1)는 제1 AI 모델(M1)에서의 오분류 확률이 되며, 제 2 부류(C2: class 2)는 제2 AI 모델(M2)에서의 오분류 확률이 되며, 제3 부류(C3: class 3)는 제3 AI 모델(M3)에서의 오분류 확률이 될 수 있을 것이다. 다시 도 2a를 참조하면, 입력 데이터에 근거한 AI 모델 선택 방법은 S230 단계에서 획득된 오분류 확률들 에 근거하여, S210 단계에서 언급된 복수개의 AI 모델들 중 어느 하나를 선택한다(S240). 구체적으로, 입력 데이터에 근거한 AI 모델 선택 방법은 S230 단계에서 획득된 오분류 확률들 중 가장 작 은 값을 가지는 오분류 확률에 대응되는 AI 모델(복수개의 AI 모델들 중 어느 하나)를 선택할 수 있다. 도 8을 참조하면, 학습된 추가 AI 모델(M0)이 출력하는 오분류 확률들은, 0.7, 0.2 및 0.1으로, 이들 중 가장 작은 값은 0.1이 된다. 그에 따라서, 입력 데이터에 근거한 AI 모델 선택 방 법은 복수개의 AI 모델들(M1, M2, M3) 중 가장 작은 확률 값인 0.1에 대응되는 AI 모델인 제3 AI 모델(M3)을 선택할 수 있다. 구체적으로, 학습된 추가 AI 모델(M0)이 출력하는 오분류 확률들 중 가장 작은 값을 가지는 확률에 대응되는 AI 모델은, 제1 데이터를 오분류 할 가능성이 가장 낮은 AI 모델을 의미한다. 또한, 제1 데이터에 가장 최적화된 AI 모델은, 제1 데이터를 오분류 할 가능성이 가장 낮은 AI 모델 이라 할 수 있다. 따라서, 개시된 실시예에서는, 복수개의 AI 모델들에서 오분류될 확률에 근거하여 복수개의 AI 모델 중 어느 하나를 선택함으로써, 학습된 복수개의 AI 모델들 중, 테스트 대상이 되는 데이터(구체적으로, 제1 데이터)를 오분류 할 가능성이 가장 낮은 AI 모델을 자동으로 선택할 수 있다. 도 2b는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 나타내는 다른 흐름도이다. 도 2b에 있어서, 도 2a에서와 동일 대응되는 구성은 동일한 도면 기호를 이용하여 도시하였다. 그러므로, 도 2b에 도시 된 입력 데이터에 근거한 AI 모델 선택 방법을 설명하는데 있어서, 도 2a에서와 중복되는 설명은 생략한다. 도 2b를 참조하면, AI 모델 선택 방법은 도 2a에 도시된 단계들에 추가하여, S250 단계를 더 포함할 수 있 다. 도 2b를 참조하면, 개시된 실시예에 따른 AI 모델 선택 방법은 제1 데이터가 갱신될 때마다, S230 동작 및 S240 동작을 반복적으로 수행할 수 있다. 구체적으로, AI 모델 선택 방법은 새로운 또는 추가적인 제1 데이터가 존재하는 여부를 판단하고(S250), S250 단계의 판단 결과에 따라서, S230 동작 및 S240 동작을 반복적으로 수행할 수 있다. 또한, 도 2b의 S250 단계에서 기재된 '새로운 제1 데이터'은 이전에 테스트를 위하여 입력된 제1 데이터와 다른 데이터로, 테스트를 위하여 추가 AI 모델로 입력되는 모든 데이터를 의미할 수 있다. 즉, AI 모델 선택 방법은 제1 데이터가 새롭게 입력되면 새롭게 입력된 제1 데이터에 최적화된 AI 모델이 새롭게 선택될 수 있도록, 새로운 제1 데이터에 근거하여 S230 동작 및 S240 동작을 반복적으로 수행할 수 있다. 또한, 개시된 실시예에 따른 AI 모델 선택 방법은 테스트 하고자 하는 대상인 제1 데이터가 복수개 존재하 는 경우, 테스트 대상이 되는 복수개의 데이터들 각각에 대하여 S230 동작 및 S240 동작을 반복적으로 수행할 수 있다. 예를 들어, 사용자가 테스트하고자 하는 데이터가 하나의 데이터가 아닌 복수의 데이터 집합인 '셋 (set)'으로 존재할 수 있다. 이 경우, 테스트 데이터 셋에 포함되는 모든 데이터가 '제1 데이터'로써 이용될 수 있다. 예를 들어, 테스트 데이터 셋에 제1 테스트 데이터 내지 제10 테스트 데이터가 존재하는 경우, AI 모델 선택 방 법은 추가 AI 모델로 제1 테스트 데이터를 입력하여 S230 및 S240 동작을 수행할 수 있다. 그러면, 제1 테 스트 데이터에 대응되는 소정 AI 모델이 선택될 수 있다. 계속하여, AI 모델 선택 방법은 추가 AI 모델로 제2 테스트 데이터를 입력하여 S230 및 S240 동작을 수행할 수 있다. 그러면, 제2 테스트 데이터에 대응되는 소 정 AI 모델이 선택될 수 있다. 이러한 방식으로 후속되는 제3 테스트 데이터 내지 제10 테스트 데이터 각각에 대하여, S230 및 S240 동작을 반복적으로 수행할 수 있다. 그에 따라서, 제1 테스트 데이터 내지 제10 테스트 데이터 각각에 대하여, 최적화된 AI 모델을 선택할 수 있을 것이다. 전술한 바와 같이, 개시된 실시예에서는, 사용자의 수동 조작 없이, 매우 다양한 형태로 존재하는 복수개의 AI 모델들 중, 테스트 대상이 되는 데이터(구체적으로, 제1 데이터)에 대응되는 결과(예를 들어, 적어도 하나 의 부류 중 어느 하나로의 분류 결과)를 가장 정확하게 획득할 수 있도록 하는 AI 모델을 자동으로 선택 또는 검출할 수 있도록 있다. 그에 따라서, 테스트 대상이 되는 데이터에 대한 AI 모델의 연산 정확도(결과 정확도) 증가시킬 수 있다. 도 9는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 일 플로우차트이다. 개시된 실시예에서, S210 단계에서 설명한 학습 데이터 셋을 입력받아 트레이닝되는 복수개의 AI 모델들은, 적 어도 하나의 온 디바이스(On-device) AI 모델 및 적어도 하나의 서버 기반(Server based) AI 모델을 포함할 수 있다. 여기서, 온 디바이스 AI 모델은 서버가 아닌 전자 장치(미도시) 내에 AI 모델이 탑재되는 경우, 전자 장치 내에 탑재된 AI 모델을 지칭한다. 그리고, 서버 기반 AI 모델은, 서버(미도시) 내에 AI 모델이 탑재되는 경우, 서버 내에 탑재된 AI 모델을 지칭한다. 메모리 및 프로세서의 크기 및 성능 등을 고려할 때, 일반적으로 온 디바이스 AI 모델의 경우 메모리 사용량, 데이터 처리 용량 등이 서버 기반 AI 모델이 비하여 작게 형성된다. 따라서, 서버 기반 온 디바이스 AI 모델을 이용하는 경우에 비하여, 온 디바이스 AI 모델을 이용하면 빠른 속도로 데이터를 처리할 수 있을 것이다. 또한, 테스트하고자 하는 입력 데이터에 따라서, 온 디바이스 AI 모델에서의 출력 정확도가 서버 기반 AI 모델 의 출력 정확도보다 높은 값을 가질 수 있다. 그러므로, 개시된 실시예에서는, S230 단계에서 설명한 오분류 확 률들에 근거하여, 온 디바이스 AI 모델 및 서버 기반 AI 모델 중 어느 하나를 선택 및 이용할 수 있다. 도 9를 참조하면, S905 단계 및 S920 단계는 각각 S230 단계 및 S240 단계에 대응될 수 있다. 구체적으로, S910 단계에서 도시된 '추가 AI 모델'은, 적어도 하나의 온 디바이스(On-device) AI 모델 및 적어 도 하나의 서버 기반(Server based) AI 모델을 포함하는 복수개의 AI 모델들에서 수집된 오분류 데이터를 이용 하여 트레이닝된 추가 AI 모델로, S220 단계에서 획득된 추가 AI 모델에 대응될 수 있다. 도 9를 참조하면, 학습된 추가 AI 모델(M0)로 제1 데이터를 입력하고, 복수개의 AI 모델들(구체적으로, 적어도 하나의 온 디바이스(On-device) AI 모델 및 적어도 하나의 서버 기반(Server based) AI 모델) 각각에 대한 오분 류 확률(misclassification probability)들을 출력한다(S915). 도 9에 도시된 예시에 있어서, 복수개의 AI 모 델은, 제1 온 디바이스 AI 모델(On-Device Model 1), 제2 온 디바이스 AI 모델(On-Device Model 2), 제1 서버 기반 AI 모델(Server1 (Model 1)), 및 제2 서버 기반 AI 모델(Server2 (Model 2))을 포함할 수 있다. S915 단계에서 획득된 오분류 확률들에 근거하여, 온 디바이스 AI 모델에 대한 오분류 확률이 서버 기반 AI 모 델에 대한 오분류 확률에 비하여 작으면, S930 단계로 진행한다. 계속하여, 온 디바이스 AI 모델들 각각에 대한 오분류 확률들을 고려하여(S935), 제1 온 디바이스 AI 모델(On- Device Model 1)에 대한 오분류 확률이 가장 작은 값을 가지면, 제1 온 디바이스 AI 모델(On-Device Model 1) 이 선택된다(S937). 그리고, 제2 온 디바이스 AI 모델(On-Device Model 2)에 대한 오분류 확률이 가장 작은 값 을 가지면, 제2 온 디바이스 AI 모델(On-Device Model 1)이 선택된다(S939). S915 단계에서 획득된 오분류 확률들에 근거하여, 서버 기반 AI 모델에 대한 오분류 확률이 온 디바이스 AI 모 델에 대한 오분류 확률에 비하여 작으면, S950 단계로 진행한다. 계속하여, 서버 기반 AI 모델들 각각에 대한 오분류 확률들을 고려하여(S955), 제1 서버 기반 AI 모델(Server1 (Model 1))에 대한 오분류 확률이 가장 작은 값을 가지면, 제1 서버 기반 AI 모델(Server1 (Model 1))이 선택 된다(S957). 그리고, 제2 서버 기반 AI 모델(Server 2 (Model 2))에 대한 오분류 확률이 가장 작은 값을 가지면, 제2 서버 기반 AI 모델(Server 2 (Model 2))이 선택된다(S959). 전술한 바와 같이, 테스트하고자 하는 입력 데이터에 따라서, 온 디바이스 AI 모델에서의 출력 정확도가 서버 기반 AI 모델의 출력 정확도보다 높은 값을 가질 수 있다. 그러므로, 개시된 실시예에서는, 온 디바이스 AI 모 델이 서버 기반 AI 모델에 비하여 오분류 확률이 작은 값을 가지는 경우, 온 디바이스 AI 모델을 선태기 및 이 용하여, 입력 데이터에 대응되는 출력 데이터를 획득할 수 있다. 그러면, 비교적 적은 메모리를 사용하여 동작 하는 온 디바이스 AI 모델을 이용하여 빠르고 정확하게 AI 연산을 수행하여 출력 데이터를 획득할 수 있다. 도 10은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 다른 플로우차트 이다. 도 10에 있어서, 도 2a에서와 동일 대응되는 구성은 동일한 도면 기호를 이용하여 도시하였다. 그러므로, 도 10에 도시된 입력 데이터에 근거한 AI 모델 선택 방법을 설명하는데 있어서, 도 1 내지 도 9에서와 중 복되는 설명은 생략한다. 도 10을 참조하면, 입력 데이터에 근거한 AI 모델 선택 방법은 S210 단계 이전에, 학습 데이터 셋을 이용 하여 복수개의 AI 모델들 각각을 학습하는 단계(S1005)를 더 포함할 수 있다. 그리고, S1005 단계의 수행 결과, 복수개의 AI 모델들 각각에서 오분류 데이터를 획득한다(S210). 그리고, 입력 데이터에 근거한 AI 모델 선택 방법은 S240 단계 이후에, 선택된 AI 모델을 이용하여, 제1 데이터에 대응되는 결과를 출력하는 단계(S1050)를 더 포함할 수 있다. 즉, 선택된 AI 모델에서 제1 데이터를 입력받고, 대응되는 분류 결과를 출력할 수 있다. 여기서, S1050 단계에서 출력하는 분류 결과에 포함되는 적어 도 부류(class)는, S210 단계에서 언급한 복수개의 AI 모델들 각각에서 출력되는 분류 결과와 동일한 부류(class)를 포함한다. 구체적으로, S210 단계에서 언급한 복수개의 AI 모델들 각각이 입력된 이미지의 객체를 인 식 및 분류하여 제1 부류(C1: class 1) 또는 제2 부류(C2: class 2)인지를 나타내는 결과를 출력하면, S1050 단계에서도 제1 부류(C1: class 1) 또는 제2 부류(C2: class 2)인지를 나타내는 결과를 출력할 수 있을 것이다. 구체적으로, 선택된 AI 모델로 제1 데이터를 입력하면, 선택된 AI 모델은 제1 데이터를 분석하여 대응되는 분류 결과를 출력하기 위한 신경망 연산을 수행할 수 있다. 예를 들어, 선택된 AI 모델이 도 4에 도시된 분류 연산을 수행하는 AI 모델인 경우, 선택된 AI 모델은 입력된 제1 데이터에 포함되는 객체를 인식 및 분류하여, 분류 결 과(예를 들어, 개인지 또는 고양이 인지)를 출력할 수 있을 것이다. 전술한 바와 같이, 개시된 실시예는 테스트 대상이 되는 데이터(상기 '제1 데이터')를 오분류할 확률이 가장 작 은 AI 모델을 선택 및 이용하여, 출력 결과를 생성함으로써, 출력 결과의 정확도를 증가시킬 수 있다. 도 11은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 다른 플로우차트 이다. 도 11에 있어서, 도 2a에서와 동일 대응되는 구성은 동일한 도면 기호를 이용하여 도시하였다. 그러므로, 도 11에 도시된 입력 데이터에 근거한 AI 모델 선택 방법을 설명하는데 있어서, 도 1 내지 도 9에서와 중 복되는 설명은 생략한다. S240 단계에 후속하여, 입력 데이터에 근거한 AI 모델 선택 방법은 오분류 확률들에 근거하여, 상기 복수 개의 AI 모델들이 결합되어 형성되는 앙상블(ensemble) AI 모델에서 상기 복수개의 AI 모델들 각각에 적용되는 복수개의 가중치 값들을 조절하는 단계(S1150)를 더 포함할 수 있다. 여기서, 앙상블 AI 모델은 복수개의 AI 모델들이 결합되어 형성되는 AI 모델을 의미한다. 복수개의 AI 모델들은 직렬 또는 병렬, 또는 직렬 및 병렬 형태의 결합을 통하여 앙상블 AI 모델을 구성할 수 있다. 구체적으로, S1150 단계는 오분류 확률(misclassification probability)이 높으면 적용되는 가중치 값이 작아 지도록, 상기 복수개의 AI 모델들 각각에 적용되는 복수개의 가중치 값들을 조절할 수 있다. 구체적으로, 복수 개의 AI 모델들 중 오분류 확률이 가장 높은 AI 모델은 가장 작은 가중치 값을 적용함으로써, 앙상블 AI 모델 내에서 오분류 확률이 가장 높은 AI 모델이 출력 데이터 형성에 기여하는 정도가 낮아지도록 할 수 있다. 그에 따라서, 앙상블 AI 모델의 출력 정확도가 높아질 수 있다. 예를 들어, S1150 단계는 복수개의 AI 모델들 각각에 대응되는 오분류 확률(misclassification probability)과 복수개의 AI 모델들 각각에 적용되는 가중치 값이 반비례하도록, 상기 복수개의 AI 모델들 각각에 적용되는 복 수개의 가중치 값들을 조절할 수 있다. 또 다른 예로, S1150 단계는 복수개의 AI 모델들 각각에 대응되는 오분류 확률(misclassification probability)들 중, 일정 한계값 이상이 되는 오분류 확률을 추출하고, 추출된 오분류 확률에 대응되는 AI 모델 의 가중치를 0 으로 설정할 수 있을 것이다. 여기서, 가중치 0 값이 적용된 AI 모델은 앙상블 AI 모델 내에서 출력 데이터 형성에 기여하지 못하게 된다. 즉, 오분류 확률이 일정 한계값 이상이 되면, 해당 AI 모델은 결과 데이터를 생성하기 위한 AI 연산을 정확하게 수행하지 못하는 것으로 판단할 수 있따. 따라서, 이러한 경우에는 해당 AI 모델이 출력 데이터 형성에 기여하 지 못하도록 가중치 값을 0 으로 설정할 수 있을 것이다. 조절된 가중치 값들을 복수개의 AI 모델들에 적용하고, 적용된 AI 모델들로 앙상블 AI 모델을 구성할 경우, 입 력 데이터에 대한 오분류 확률을 낮출 수 있으며 그에 따라서 결과의 정확도를 높일 수 있다. S1150 단계에 후속하여, 입력 데이터에 근거한 AI 모델 선택 방법은 상기 제1 데이터를 조절된 가중치 값 을 갖는 상기 앙상블 AI 모델로 입력하고, 상기 제1 데이터에 대응되는 최종 분류 결과를 출력하는 단계(S116 0)을 더 포함할 수 있다. 도 1a 내지 도 11을 참조하여 설명한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법(구체적으 로, 200, 1000 또는 1100)은 도 12 내지 도 19를 참조하여 설명할 디스플레이 장치 및 서버 중 적어도 하나를 통하여 수행될 수 있다. 도 12 내지 도 19에 있어서, 동일한 구성은 동일한 도면 기호를 이용하여 도시하였다. 구체적으로, 도 1a 내지 도 11을 참조하여 설명한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법(구체적으로, 200, 1000 또는 1100)은 디스플레이 장치를 통하여 수행될 수 있다. 디스플레이 장치는 휴대폰, 태블릿 PC, 디지털 카메라, 캠코더, 노트북 컴퓨터(laptop computer), 태블릿 PC, 데스크탑, 전자책 단말기, 디지털 방송용 단말기, PDA(Personal Digital Assistants), PMP(PortableMultimedia Player), 네비게이션, MP3 플레이어, 착용형 기기(wearable device) 등과 같은 다양한 형태로 구현 될 수 있다. 또한, 디스플레이 장치는 고정된 위치에 배치되는 고정형 디스플레이 장치 또는 휴대 가능한 형태 를 갖는 이동형 디스플레이 장치일 수 있으며, 디지털 방송 수신이 가능한 디지털 방송 수신기일 수 있다. 도 12는 개시된 실시예에 따른 디스플레이 장치를 나타내는 일 블록도이다. 도 12를 참조하면, 디스플레이 장치는 프로세서 및 디스플레이을 포함한다. 프로세서는 적어도 하나의 인스트럭션을 실행하여, 이하의 동작들이 수행되도록 제어한다. 구체적으로, 프로세서(12100는 적어도 하나의 인스트럭션을 실행하여, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부류(class)로 분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데이터인 오분류 데이터를 획득하고, 추가 AI 모델을 상기 오분류 데 이터로 학습시켜, 학습된 추가 AI 모델을 획득하며, 상기 학습된 추가 AI 모델로 제1 데이터를 입력하여, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들이 출력되도록 제어하며, 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택하도록 동작한다. 프로세서는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU, AP 등과 같은 범용 프로세서, GPU와 같은 그래픽 전용 프로세서 또는 NPU와 같은 인공지능 전용 프로세서일 수 있 다. 구체적으로, 프로세서는, 메모리(미도시)에 저장된 기정의된 동작 규칙 또는 인공지능 모델에 따라, 입력 데이터를 처리하도록 제어할 수 있다. 기정의된 동작 규칙 또는 AI 모델은 학습(training)을 통해 만들어진 것 을 특징으로 한다. 여기서, 학습을 통해 만들어진다는 것 또는 트레이닝 된다는 것은, 다수의 학습 데이터들에 학습 알고리즘을 적 용함으로써, 원하는 특성의 인공지능 모델이 만들어짐을 의미한다. 이러한 학습은 본 발명에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버/시스템을 통해 이루어 질 수도 있다. 여기서, 학습 알고리즘은, 다수의 학습 데이터들을 이용하여 소정의 대상 기기(예컨데, 로봇)을 훈련시켜 소정 의 대상 기기 스스로 결정을 내리거나 예측을 할 수 있도록 하는 방법이다. 학습 알고리즘의 예로는, 지도형 학 습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)이 있으며, 본 발명에서의 학습 알고리즘은 명시한 경우를 제외하고 전 술한 예에 한정되지 않는다. 구체적으로, 프로세서는 도 1a을 참조하여 설명한 신경망을 통한 연산을 수행하는 AI 모델을 통하여 입력 데이터에 대응되는 출력 데이터를 생성할 수 있다. 구체적으로, 프로세서는 전술한 복수개의 AI 모델, 추 가 AI 모델 및 앙상블 AI 모델 중 적어도 하나를 통한 연산을 수행할 수 있다. 또한, 프로세서는 디스플레이 장치에서 수행되는 동작들을 제어할 수 있으며 소정 동작이 수행되도 록 디스플레이 장치 내에 포함되는 다른 구성들을 제어할 수 있다. 디스플레이는 이미지를 출력한다. 구체적으로, 디스플레이는 비디오 데이터를 사용자가 시각적으로 인식할 수 있도록, 내부적으로 포함되는 디스플레이 패널(미도시)을 통하여, 비디오 데이터에 대응되는 이미지 를 출력할 수 있다. 개시된 실시예에서, 디스플레이는 프로세서에서 AI 모델을 통하여 생성한 출력 데이터를 포함하는 사용자 인터페이스 화면을 출력할 수 있다. 도 13은 개시된 실시예에 따른 디스플레이 장치를 구체적으로 나타내는 일 블록도이다. 도 13을 참조하면, 디스플레이 장치는 디스플레이 장치에 비하여 통신부를 더 포함할 수 있 다. 통신부는 프로세서의 제어에 따라서, 적어도 하나의 외부 장치와 통신 네트워크를 통하여 데이터를 송수신할 수 있다. 여기서, 외부 장치는 서버(미도시), 모바일 기기(미도시) 또는 물리적으로 구분되는 전자 장 치(미도시)가 될 수 있다. 구체적으로, 통신부는 소정의 유선 또는 무선 통신 규격에 따라서 외부 장치와 유선 통신 또는 무선 통신 을 수행하는 적어도 하나의 통신 모듈(미도시)을 포함할 수 있다. 구체적으로, 통신부는 블루투스 통신 모듈, 무선 랜, 및 유선 이더넷 등과 같은 통신 규격에 따라서 무선 통신을 수행하는 통신 모듈을 포함할 수 있 다. 여기서, 무선 랜 통신 모듈(미도시)는 와이파이 통신 규격에 따라서 무선 통신을 수행하는 와이파이 통신모듈(미도시) 등을 포함할 수 있을 것이다. 이하에서는, 디스플레이 장치와 통신을 수행하는 외부 장치가 서버인 경우를 예로 들어 설명한다. 도 14는 개시된 실시예에 따른 디스플레이 장치를 구체적으로 나타내는 다른 블록도이다. 도 14를 참조하면, 디스플레이 장치는 디스플레이 장치에 비하여 메모리 및 사용자 인터페이 스 중 적어도 하나를 더 포함할 수 있다. 메모리는 적어도 하나의 인스트럭션을 저장할 수 있다. 또한, 메모리는 프로세서가 실행하는 적어도 하나의 프로그램을 저장하고 있을 수 있다. 또한, 메모리는 전술한 AI 모델을 적어도 하나 저장하 고 있을 수 있다. 구체적으로, 메모리는 전술한 복수개의 AI 모델, 추가 AI 모델 및 앙상블 AI 모델 중 적어도 하나를 저장할 수 있다. 또한, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램 (RAM, Random Access Memory) SRAM(Static Random Access Memory), 롬(ROM, Read-Only Memory), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 사용자 인터페이스는 디스플레이 장치를 제어하기 위한 사용자 입력을 수신할 수 있다. 사용자 인 터페이스는 사용자의 터치를 감지하는 터치 패널, 사용자의 푸시 조작을 수신하는 버튼, 사용자의 회전 조작을 수신하는 휠, 키보드(key board), 및 돔 스위치 (dome switch) 등을 포함하는 사용자 입력 디바이스를 포함할 수 있으나 이에 제한되지 않는다. 또한, 사용자 인터페이스는 음성 인식을 위한 음성 인식 장치(미도시)를 포함할 수 있다. 예를 들어, 음 성 인식 장치는 마이크가 될 수 있으며, 음성 인식 장치는 사용자의 음성 명령 또는 음성 요청을 수신할 수 있 다. 그에 따라서, 프로세서는 음성 명령 또는 음성 요청에 대응되는 동작이 수행되도록 제어할 수 있다. 또한, 사용자 인터페이스는 모션 감지 센서(미도시)를 포함할 수도 있다. 예를 들어, 모션 감지 센서(미 도시)는 디스플레이 장치의 움직임을 감지하고, 감지된 움직임을 사용자 입력으로 수신할 수 있다. 또한, 전술한 음성 인식 장치(미도시) 및 모션 감지 센서(미도시)는 사용자 인터페이스 내에 포함되는 형태가 아니라, 사용자 인터페이스와는 독립적인 모듈로 디스플레이 장치 내에 포함될 수 있을 것이다. 도 15는 개시된 실시예에 따른 디스플레이 장치를 나타내는 다른 블록도이다. 디스플레이 장치는 도 12 내지 도 14를 참조하여 설명한 개시의 실시예에 따른 디스플레이 장치(1200, 1300 또는 1400)에 동일 대응될 수 있다. 또한, 디스플레이 장치는 도 1a 내지 도 11을 참조하여 설명한 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 도 15에 도시된 디스플레이 장치를 통 하여 수행될 수 있다. 그러므로, 디스플레이 장치를 설명하는데 있어서, 도 1a 내지 도 14에서와 중복되 는 설명은 생략한다. 도 15를 참조하면, 디스플레이 장치는 비디오 처리부, 디스플레이 부, 오디오 처리부, 오디오 출력부, 전원부, 튜너부, 통신부, 감지부(미도시), 입/출력부, 제어부 , 메모리를 포함한다. 여기서, 제어부는 도 12에 도시된 프로세서에 대응될 수 있다. 디스플레이 장치의 통신부 , 디스플레이 부, 및 메모리는 각각 도 14에 도시된 통신부, 디스플레이, 및 메모리에 대응될 수 있다. 따라서, 도 15에 도시된 디스플레이 장치를 설명하는데 있어서, 전술한 디스플레이 장치(1200, 1300, 또는 1400)의 설명과 중복되는 설명은 생략한다. 비디오 처리부는, 디스플레이 장치가 수신한 비디오 데이터에 대한 처리를 수행한다. 비디오 처리 부에서는 비디오 데이터에 대한 디코딩, 스케일링, 노이즈 필터링, 프레임 레이트 변환, 해상도 변환 등 과 같은 다양한 이미지 처리를 수행할 수 있다. 제어부는 비디오 처리부에서 처리된 비디오 데이터에 대한 기록 요청을 수신하고, 비디오 데이터를 암호화하여 제어부 또는 메모리에 포함되는 메모리 장치(미도시), 예를 들어, RAM(미도시)에 기록 되도록 제어할 수 있을 것이다. 개시된 실시예에서, 제어부에 포함되는 적어도 하나의 프로세서(미도시)는 적어도 하나의 인스트럭션을 실행하여, 복수개의 AI(Artificial Intelligence) 모델들 각각이 학습 데이터 셋을 입력받아 적어도 하나의 부 류(class)로 분류하여 결과를 출력할 때, 상기 학습 데이터 셋 중 오분류된(misclassified) 결과에 대응되는 데 이터인 오분류 데이터를 획득하는 단계(S210), 추가 AI 모델에서 상기 오분류 데이터를 학습하여, 학습된 추가 AI 모델을 획득하는 단계(S220), 상기 학습된 추가 AI 모델로 제1 데이터를 입력하고, 상기 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출력하는 단계(S230), 및 상기 오분류 확률들에 근거하여, 상기 복수개의 AI 모델들 중 어느 하나를 선택하는 단계(S240)에 대응되는 동작들의 실행을 제어할 수 있다. 디스플레이 부는 제어부의 제어에 의해 튜너부를 통해 수신된 방송 신호에 포함된 비디오를 화면에 표시한다. 또한, 디스플레이 부는 통신부 또는 입/출력부를 통해 입력되는 컨텐츠(예 를 들어, 동영상)를 표시할 수 있다. 또한, 디스플레이 부는 제어부의 제어에 의해 메모리에 저장된 영상을 출력할 수 있다. 또한, 디스플레이 부는 음성 인식에 대응되는 음성 인식 태스크를 수행하기 위한 음성 UI(User Interface: 예를 들어, 음성 명령어 가이드를 포함하는) 또는 모션 인식에 대응되는 모션 인식 태스크를 수행하 기 위한 모션 UI(예를 들어, 모션 인식을 위한 사용자 모션 가이드를 포함)를 표시할 수 있다. 오디오 처리부는 오디오 데이터에 대한 처리를 수행한다. 오디오 처리부에서는 오디오 데이터에 대 한 디코딩이나 증폭, 노이즈 필터링 등과 같은 다양한 처리가 수행될 수 있다. 한편, 오디오 처리부는 복 수의 컨텐츠에 대응되는 오디오를 처리하기 위해 복수의 오디오 처리 모듈을 구비할 수 있다. 오디오 출력부는 제어부의 제어에 의해 튜너부를 통해 수신된 방송 신호에 포함된 오디오를 출력한다. 오디오 출력부는 통신부 또는 입/출력부를 통해 입력되는 오디오(예를 들어, 음성, 사운드)를 출력할 수 있다. 또한, 오디오 출력부는 제어부의 제어에 의해 메모리에 저 장된 오디오를 출력할 수 있다. 오디오 출력부는 스피커, 헤드폰 출력 단자 또는 S/PDIF(Sony/Philips Digital Interface: 출력 단자 중 적어도 하나를 포함할 수 있다. 오디오 출력부 는 스피커, 헤드폰 출력 단자 및 S/PDIF 출력 단자의 조합을 포함할 수 있다. 전원부는 제어부의 제어에 의해 디스플레이 장치 내부의 구성 요소들(1510 내지 1590)로 외 부의 전원 소스에서부터 입력되는 전원을 공급한다. 또한, 전원부는 제어부의 제어에 의해 디스플 레이 장치 내부에 위치하는 하나 또는 둘 이상의 배터리(미도시)에서부터 출력되는 전원을 내부의 구성 요소들(1510 내지 1590)에게 공급할 수 있다. 튜너부은 유선 또는 무선으로 수신되는 방송 신호를 증폭(amplification), 혼합(mixing), 공진 (resonance)등을 통하여 많은 전파 성분 중에서 디스플레이 장치에서 수신하고자 하는 채널의 주파수만을 튜닝(tuning)시켜 선택할 수 있다. 방송 신호는 오디오(audio), 비디오(video) 및 부가 정보(예를 들어, EPG(Electronic Program Guide))를 포함한다. 튜너부는 사용자 입력(예를 들어, 외부의 제어 장치(미도시), 예를 들어, 원격 제어기(remote controller)로부터 수신되는 제어 신호, 예컨대, 채널 번호 입력, 채널의 업다운(up-down) 입력 및 EPG 화면에 서 채널 입력)에 따라 채널 번호(예를 들어, 케이블 방송 506번)에 대응되는 주파수 대역에서 방송 신호를 수신 할 수 있다. 튜너부은 지상파 방송, 케이블 방송, 위성 방송, 인터넷 방송 등과 같이 다양한 소스로부터 방송 신호를 수신할 수 있다. 튜너부는 아날로그 방송 또는 디지털 방송 등과 같은 소스로부터 방송 신호를 수신할 수 도 있다. 튜너부를 통해 수신된 방송 신호는 디코딩(decoding, 예를 들어, 오디오 디코딩, 비디오 디코딩 또는 부가 정보 디코딩)되어 오디오, 비디오 및/또는 부가 정보로 분리된다. 분리된 오디오, 비디오 및/또는 부 가 정보는 제어부의 제어에 의해 메모리에 저장될 수 있다. 디스플레이 장치의 튜너부는 하나이거나 복수일 수 있다. 일 실시예에 따라서 튜너부가 복수 개로 이루어지는 경우, 디스플레이 부에 제공되는 멀티윈도우 화면을 이루는 복수개의 윈도우에 복수개의 방송 신호를 출력할 수 있을 것이다. 튜너부는 디스플레이 장치와 일체형(all-in-one)으로 구현되거나 또는 디스플레이 장치와 전 기적으로 연결되는 튜너부를 가지는 별개의 장치(예를 들어, 셋탑박스(set-top box, 미도시), 입/출력부에 연결되는 튜너부(미도시))로 구현될 수 있다. 통신부는 제어부의 제어에 의해 디스플레이 장치를 외부 기기(예를 들어, 오디오 장치 등)와 연결할 수 있다. 제어부는 통신부를 통해 연결된 외부 기기로 컨텐츠를 송/수신, 외부 기기에서부 터 어플리케이션(application)을 다운로드 하거나 또는 웹 브라우징을 할 수 있다. 구체적으로, 통신부는 네트워크에 접속하여 외부 기기(미도시)에서 컨텐츠를 수신할 수 있다. 전술한 바와 같이 통신부는 근거리 통신 모듈(미도시), 유선 통신 모듈(미도시), 및 이동 통신 모듈(미도 시) 중 적어도 하나를 포함할 수 있다. 도 15에서는 통신부가 무선 랜, 블루투스 통신부, 및 유선 이더넷(Ethernet, 1553) 중 하나 를 포함하는 경우를 예로 들어 도시하였다. 또한, 통신부은 무선랜, 블루투스 통신부, 및 유선 이더넷(Ethernet, 1553) 중 어느 하나 이상을 포함하는 모듈 조합을 포함할 수 있다. 또한, 통신부는 제어부의 제어에 의해 제어 장치(미 도시)의 제어 신호를 수신할 수 있다. 제어 신호는 블루투스 타입, RF 신호 타입 또는 와이파이 타입으로 구현 될 수 있다. 통신부는 블루투스 외에 다른 근거리 통신(예를 들어, NFC(near field communication, 미도시), 별도의 BLE 모듈(bluetooth low energy, 미도시)을 더 포함할 수 있다. 감지부(미도시)는 사용자의 음성, 사용자의 영상 또는 사용자의 인터랙션을 감지한다. 마이크는 사용자의 발화(utterance)된 음성을 수신한다. 마이크는 수신된 음성을 전기 신호로 변환 하여 제어부로 출력할 수 있다. 사용자 음성은 예를 들어, 디스플레이 장치의 메뉴 또는 기능에 대 응되는 음성을 포함할 수 있다. 예를 들어, 마이크의 인식 범위는 마이크에서부터 사용자 위치까지 4 m 이내를 권장하며, 마이크의 인식 범위는 사용자 목소리의 크기와 주변 환경(예를 들어, 스피커 소리, 주변 소음)에 대응하여 달라질 수 있다. 마이크는 디스플레이 장치와 일체형 또는 분리형으로 구현될 수 있다. 분리된 마이크는 통신 부 또는 입/출력부를 통해 디스플레이 장치와 전기적으로 연결될 수 있다. 디스플레이 장치의 성능 및 구조에 따라 마이크가 제외될 수 있다는 것은 당해 기술 분야에서 통상 의 지식을 가진 자에게 용이하게 이해될 것이다. 카메라부는 카메라 인식 범위에서 제스처를 포함하는 사용자의 모션에 대응되는 영상(예를 들어, 연속되 는 프레임)을 수신한다. 예를 들어, 카메라부의 인식 범위는 카메라부에서부터 사용자까지 0.1 ~ 5 m 이내 거리가 될 수 있다. 사용자 모션은 예를 들어, 사용자의 얼굴, 표정, 손, 주먹, 손가락과 같은 사용자의 신체 일부분 또는 사용자 일부분의 모션 등을 포함할 수 있다. 카메라부는 제어부의 제어에 따라 수신된 영상을 전기 신호로 변환하여 제어부로 출력할 수 있다. 제어부는 수신된 모션의 인식 결과를 이용하여 디스플레이 장치에 표시되는 메뉴를 선택하거나 모 션 인식 결과에 대응되는 제어를 할 수 있다. 예를 들어, 채널 조정, 볼륨 조정, 지시자 이동을 포함할 수 있다. 카메라부는 렌즈(미도시) 및 이미지 센서(미도시)로 구성될 수 있다. 카메라부는 복수의 렌즈와 이 미지 프로세싱을 이용하여 광학 줌(optical zoom) 또는 디지털 줌(digital zoom)을 지원할 수 있다. 카메라부 의 인식 범위는 카메라의 각도 및 주변 환경 조건에 따라 다양하게 설정될 수 있다. 카메라부가 복 수개의 카메라로 구성되는 경우, 복수의 카메라를 이용하여 3차원 정지 이미지 또는 3차원 모션을 수신할 수 있 다. 카메라부는 디스플레이 장치와 일체형 또는 분리형으로 구현될 수 있다. 분리된 카메라부를 포함하는 별도의 장치(미도시)는 통신부 또는 입/출력부를 통해 디스플레이 장치와 전기적으 로 연결될 수 있다. 디스플레이 장치의 성능 및 구조에 따라 카메라부가 제외될 수 있다는 것은 당해 기술 분야에서 통 상의 지식을 가진 자에게 용이하게 이해될 것이다. 광 수신부는 외부의 제어 장치(미도시)에서부터 수신되는 광 신호(제어 신호를 포함)를 디스플레이 부 의 베젤의 광창(미도시) 등을 통해 수신한다. 광 수신부는 제어 장치(미도시)로부터 사용자 입력 (예를 들어, 터치, 눌림, 터치 제스처, 음성, 또는 모션)에 대응되는 광 신호를 수신할 수 있다. 수신된 광 신 호로부터 제어부의 제어에 의해 제어 신호가 추출될 수 있다. 예를 들어, 광 수신부는 제어 장치(미도시)의 포인팅 위치에 대응하는 신호를 수신하고 이를 제어부 로 전송할 수 있다. 예를 들어, 디스플레이 부를 통하여 사용자로부터 데이터 또는 명령을 입력받 기 위한 사용자 인터페이스 화면이 출력되었으며, 제어 장치(미도시)를 통하여 사용자가 데이터 또는 명령을 디 스플레이 장치로 입력하고자 하는 경우, 광 수신부는 사용자가 제어 장치(미도시)에 마련된 터치 패드(미도시)에 손가락을 접촉한 상태에서 제어 장치(미도시)를 움직이면 이 제어 장치(미도시)의 움직임에 대 응하는 신호를 수신하고 이를 제어부로 전송할 수 있다. 또한, 광 수신부는 제어 장치(미도시)에 마련된 특정한 버튼이 눌려졌음을 나타내는 신호를 수신하고 이를 제어부로 전송할 수 있다. 예를 들어 광수신부는 사용자가 제어 장치(미도시)에 버튼식으로 마련된 터치 패드(미도시)를 손가락으로 누르면, 이러한 버튼식 터치 패드(미도시)이 눌려졌다는 신호를 수신하고 이를 제어부로 전송할 수 있다. 예를 들어, 버튼식 터치 패드(미도시)가 눌려졌다는 신호는 아이템들 중의 하나를 선택하기 위한 신호로 이용할 수 있다. 입/출력부는 제어부의 제어에 의해 디스플레이 장치의 외부에서부터 비디오(예를 들어, 동영 상 등), 오디오(예를 들어, 음성, 음악 등) 및 부가 정보(예를 들어, EPG 등) 등을 수신한다. 입/출력부 는 HDMI 포트(High-Definition Multimedia Interface port, 1571), 컴포넌트 잭(component jack, 1572), PC 포트(PC port, 1573), 및 USB 포트(USB port, 1574) 중 하나를 포함할 수 있다. 입/출력부는 HDMI 포트 , 컴포넌트 잭, PC 포트, 및 USB 포트의 조합을 포함할 수 있다. 입/출력부의 구성 및 동작은 본 발명의 실시예에 따라 다양하게 구현될 수 있다는 것은 당해 기술 분야의 통상의 지식을 가진 자에게 용이하게 이해될 것이다. 제어부는 디스플레이 장치의 전반적인 동작 및 디스플레이 장치의 내부 구성요소들(미도시) 사이의 신호 흐름을 제어하고, 데이터를 처리하는 기능을 수행한다. 제어부는 사용자의 입력이 있거나 기 설정되어 저장된 조건을 만족하는 경우, 제어부는 메모리에 저장된 OS(Operation System) 및 다양 한 애플리케이션을 실행할 수 있다. 제어부는 디스플레이 장치의 외부에서부터 입력되는 신호 또는 데이터를 저장하거나, 디스플레이 장치에서 수행되는 다양한 작업에 대응되는 저장 영역으로 사용되는 RAM(미도시), 디스플레이 장치(150 0)의 제어를 위한 제어 프로그램이 저장된 ROM(미도시) 및 프로세서(Processor)(미도시)를 포함할 수 있다. 프로세서(미도시)는 비디오에 대응되는 그래픽 처리를 위한 그래픽 프로세서(Graphic Processing Unit, 미도 시)를 포함할 수 있다. 프로세서(미도시)는 코어(core, 미도시)와 GPU(미도시)를 통합한 SoC(System On Chip)로 구현될 수 있다. 프로세서(미도시)는 싱글 코어, 듀얼 코어, 트리플 코어, 쿼드 코어 및 그 배수의 코어를 포함 할 수 있다. 또한, 프로세서(미도시)는 복수의 프로세서를 포함할 수 있다. 예를 들어, 프로세서(미도시)는 메인 프로세서 (main processor, 미도시) 및 슬립 모드(sleep mode)에서 동작하는 서브 프로세서(sub processor, 미도시)로 구현될 수 있다. 그래픽 처리부(미도시)는 연산부(미도시) 및 렌더링부(미도시)를 이용하여 아이콘, 이미지, 텍스트 등과 같은 다양한 객체를 포함하는 화면을 생성한다. 연산부는 감지부(미도시)를 통해 감지된 사용자 인터랙션을 이용하여 화면의 레이아웃에 따라 각 객체들이 표시될 좌표값, 형태, 크기, 컬러 등과 같은 속성값을 연산한다. 렌더링부 는 연산부에서 연산한 속성값에 기초하여 객체를 포함하는 다양한 레이아웃의 화면을 생성한다. 렌더링부에서 생성된 화면은 디스플레이 부의 디스플레이 영역 내에 표시된다. 도 16은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 수행하기 위한 서버 및 디스플레이 장치를 나타내는 도면이다. 도 16을 참조하면, 도 1a 내지 도 11을 참조하여 설명한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 디스플레이 장치 및 서버를 통하여 수행될 수 있다. 여기서, 디스플레이 장치는 도 12 내지 도 15를 참조하여 설명한 개시된 실시예에 따른 디스플레이 장치 (1200, 1300, 1400 또는 1500)에 동일 대응될 수 있다. 또한, 디스플레이 장치 및 서버는 통신 네트워크를 통하여 연결될 수 있으며, 디스플레이 장치는 내부적으로 구비하는 통신부(미도시)(도 13 및 도 14에서 도시된 통신부를 통하여, 통신 네트워크에 접속할 수 있다. 서버는 신경망에 따른 연산을 수행할 수 있다. 그리고, 디스플레이 장치 및 서버는, 신경망 에 따른 연산을 수행한 결과, 신경망을 훈련시켜 획득한 AI 모델, AI 모델을 훈련시키기 위해서 필요한 데이터, AI 모델이 결과를 출력하기 위해서 필요한 데이터 등을 송수신할 수 있다. 도 16에 도시된 디스플레이 장치 내에 탑재된 AI 모델은 도 9에서 설명한 온 디바이스 AI 모델이 될 수 있으며, 서버 내에 탑재된 AI 모델은 서버 기반 AI 모델이 될 수 있다. 디스플레이 장치 및 서버에서 수행되는 동작들은 이하에서 도 17 내지 도 19를 참조하여 상세히 설 명한다. 도 17 내지 도 19에 있어서, 도 16에서와 동일한 구성은 동일한 도면 기호를 이용하여 도시하였다. 도 17은 도 16에 도시된 서버를 구체적으로 나타내는 블록도이다. 도 17을 참조하면, 일 실시예에 따른 서버는, DB, 통신부, 및 프로세서를 포함할 수 있다. 서버는 개시된 실시예에 따른 디스플레이 장치와 연동하여 동작할 수 있으며, 신경망에 따른 연산 을 수행하여 입력 데이터 분석, 객체 인식, 객체 분류, 및 결과 데이터 출력 중 어도 하나의 동작을 수행할 수 있다. DB(database)는 메모리(미도시)를 포함할 수 있으며, 메모리(미도시) 내에 서버가 소정 동작을 수 행하기 위해서 필요한 적어도 하나의 인스트럭션, 프로그램, 데이터 중 적어도 하나를 저장할 수 있다. 또한, DB(database)는 서버가 신경망에 따른 연산을 수행하기 위해서 필요한 데이터들을 저장할 수 있다. 구체적으로, DB(database)는 AI 모델을 트레이닝 시키기 위해서 필요한 학습 데이터 셋(예를 들어, 도 3의 300)을 저장할 수 있다. 또한, DB는 복수개의 AI 모델들을 저장할 수 있다. 또한, DB는 S210 단계에서 획득된 오분류 데이터를 저장할 수 있다. 또한, DB는 추가 AI 모델을 저장할 수 있으며, 오분류 데이터에 추가 AI 모델을 훈련시켜, 훈련된 추가 AI 모델을 저장할 수 있다. 통신부는 디스플레이 장치와 통신을 하게 하는 하나 이상의 구성요소를 포함할 수 있다. 통신부 의 구체적인 구성은, 도 13에서 설명한 통신부의 구성과 동일 대응되므로, 상세한 설명은 생략한다. 프로세서는 서버의 전반적인 동작을 제어한다. 예를 들어, 프로세서는, 서버의 DB에 저장된 프로그램들을 실행함으로써, DB 및 통신부 등을 전반적으로 제어할 수 있다. 프 로세서는 DB에 저장된 프로그램들을 실행함으로써, 도 1a 내지 도 12에서의 영상 표시 장치의 동작의 일부를 수행할 수 있다. 프로세서는, AI 모델의 트레이닝, AI 모델의 결과 출력, AI 모델에서 출력되는 결과를 디스플레이 장치 로 전송하기 위해 필요한 동작, 또는 디스플레이 장치와의 데이터 송수신을 위해서 필요한 동작을 수행할 수 있다. 이하에서는, 서버 및 디스플레이 장치 내에서 수행되는 동작을, 도 18 및 도 19를 참조하여 상세히 설명한다. 또한, 도 18 및 도 19에 있어서, 도 16 내지 도 17에서와 동일한 구성은 동일한 도면 기호를 이용하 여 도시하였다. 도 18은 서버와 통신하는 디스플레이 장치를 나타내는 블록도이다. 도 19는 도 16에 도시된 서버 및 디스플레이 장치에서 수행되는 동작들을 설명하기 위한 도면이다. 구체적으로, 도 19에서는 서버 내에서 수행되는 동작들과 디스플레이 장치 내에서 수행되는 동작들을 흐름도를 이용하여 도시하였다. 도 18에 있어서, 설명의 편의상 디스플레이 장치 내에 포함되는 프로세서를 '제1 프로세서'로 도시 하고, 서버 내에 포함되는 프로세서를 '제2 프로세서'로 도시하였다. 도 18 및 도 19을 참조하면, 도 1a 내지 도 11을 참조하여 설명한 일 또는 다른 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법(200, 1000, 또는 1100)은 디스플레이 장치 및 서버를 통하여 수행될 수 있다. 구체적으로, DB는 학습 데이터 셋(예를 들어, 도 3에서 도시된, 학습 데이터 셋) 및 복수개의 AI 모 델들을 저장하고 있을 수 있다. 도 18 및 도 19을 참조하면, 제2 프로세서은 적어도 하나의 인스트럭션을 실행하여, DB에 저장된 학습 데이터 셋(예를 들어, 300)를 이용하여 복수개의 AI 모델들 각각을 트레이닝한다(S1911). 여기서, S1911 단계의 동작은 도 10에서 설명한 S1005 단계에 동일 대응되므로, 상세한 설명은 생략한다. 그리고, S1911단계의 수행 결과, 제2 프로세서는 오분류 데이터를 획득할 수 있다(S1912). 여기서, S1912 단계의 동작은 도 2a 에서 설명한 S210 단계에 동일 대응되므로, 상세한 설명은 생략한다. 그리고, 획득된 오분류 데이터는 제2 프 로세서의 제어에 따라서 DB에 저장될 수 있다. 또한, DB는 추가 AI 모델을 저장하고 있을 수 있다. 여기서, DB는 트레이닝이 수행되기 이전의 추 가 AI 모델 및 트레이닝이 수행된 이후의 추가 AI 모델을 모두 저장하고 있을 수 있다. 계속하여, 제2 프로세서은 적어도 하나의 인스트럭션을 실행하여, DB에 저장된 오분류 데이터를 이 용하여 복수개의 AI 모델들 각각을 트레이닝한다(S1913). 여기서, S1913 단계의 동작은 도 2a에서 설명한 S220 단계에 동일 대응되므로, 상세한 설명은 생략한다. 일반적으로, 복수개의 AI 모델들은 매우 다양한 형태로 존재할 수 있으며, 학습 데이터 셋은 트레이닝을 위해서 많은 데이터들의 집합으로 형성되어야 한다. 따라서, 복수개의 AI 모델 및 학습 데이터 셋은 저장 용량이 큰 서 버에서 저장 및 처리되는 것이 바람직하다. 따라서, 복수개의 AI 모델들을 트레이닝 시키는 동작은 디스 플레이 장치와 통신 네트워크를 통하여 연결되는 서버 내에서 수행될 수 있다. 디스플레이 장치는 트레이닝이 완료된 추가 AI 모델을 서버로부터 수신할 수 있다. 구체적으로, 제 1 프로세서의 제어에 따라서, 통신부는 서버의 통신부를 통하여 S1913 단계에서 트레 이닝이 완료된 추가 AI 모델을 수신할 수 있다. 그리고, 제1 프로세서(12100는 수신받은 추가 AI 모델을 메모리 에 저장시킬 수 있다. 제1 프로세서는 추가 AI 모델로 제1 데이터를 입력하여(S1951), 복수개의 AI 모델들 각각에 대한 오분류 확률(misclassification probability)들을 출력한다(S1952). 여기서, S1952 단계의 동작은 도 2a에서 설명한 S230 단계에 동일 대응되므로, 상세한 설명은 생략한다. 그리고, 제1 프로세서는 S1952 단계에서 획득된 오분류 확률들에 근거하여, S1911 단계에서 언급된 복수 개의 AI 모델들 중 어느 하나를 선택한다(S1953). 여기서, S1953 단계의 동작은 도 2a에서 설명한 S240 단계에 동일 대응되므로, 상세한 설명은 생략한다. 계속하여, 제1 프로세서는 S1953 단계에서 선택된 AI 모델을 이용하여, 제1 데이터에 대응되는 결과를 출 력할 수 있다(S1954). 여기서, S1954 단계의 동작은 도 10에서 설명한 S1050 단계에 동일 대응되므로, 상세한 설명은 생략한다. 즉, 도 19에서는, S1911 에서 학습 데이터 셋에 의해서 트레이닝되는 복수개의 AI 모델은 서버 기반 AI 모델이 될 수 있다. 그리고, S1913 단계의 추가 AI 모델 또한, 서버 기반 AI 모델이 될 수 있다. 그리고, S1913 단계에 서 트레이닝되어 디스플레이 장치로 전송되는 추가 AI 모델은, 디스플레이 장치에서 수신 및 저장 된 이후에 온 디바이스 AI 모델로 동작할 수 있다. 일반적으로, 디스플레이 장치는 메모리 저장 용량, 연산의 처리 속도, 학습 데이터 셋의 수집 능력 등이 서버에 비하여 제한적일 수 있다. 따라서, 대용량 데이터의 저장 및 대용량의 연산량이 필요한 동작은 서 버에서 수행한 후, 통신 네트워크를 통하여 필요한 데이터 및 AI 모델을 디스플레이 장치에 전송할 수 있다. 그러면, 디스플레이 장치는 대용량의 메모리 및 빠른 연산 능력을 갖는 프로세서 없이도, 서버 를 통하여 필요한 데이터 및 AI 모델을 수신하여 이용함으로써, 빠르고 용이하게 필요한 동작을 수행할 수 있다. 또한, 도 19에서는, 서버에서 복수개의 AI 모델들의 트레이닝 동작(S1911), 오분류 데이터 획득 동작 (S1912), 추가 AI 모델의 트레이닝 동작(S1913)이 수행되는 경우를 예로 들어 도시하였으나, 서버는 이에 추가하여 오분류 확률들을 출력하는 동작(S1952), AI 모델을 선택하는 동작(S1953), 및 결과 출력 동작(S1954) 중 적어도 하나를 직접 수행할 수 있다. 그리고, 수행될 결과에 대응되는 데이터를 디스플레이 장치로 전 송할 수 있을 것이다. 또한, 디스플레이 장치는 오분류 확률들을 출력하는 동작(S1952), AI 모델을 선택하는 동작(S1953), 및 결과 출력 동작(S1954)을 수행하는 경우를 예로 들어 도시하였으나, 디스플레이 장치는 복수개의 AI 모델들의 트레이닝 동작(S1911), 오분류 데이터 획득 동작(S1912), 및 추가 AI 모델의 트레이닝 동작(S1913) 중 적 어도 하나를 직접 수행할 수 있다. 디스플레이 장치 및 서버의 설계 사양, 데이터 처리 용량, 메모리 용량, 데이터 처리 속도 등에 따 라서, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법에 포함되는 동작들이, 디스플레이 장치 및 서버 중 어느 장치에서 수행될 지 여부가 결정될 수 있을 것이다. 예를 들어, 대용량 데이터를 이용하며 빠른 데이터 처리가 요구되는 동작은 서버에서 수행될 수 있으며, 비교적 간단한 연산 동작이나 보안이 요구되는 동작 등은 디스플레이 장치에서 수행될 수 있을 것이다. 본 개시의 일 또는 다른 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 다양한 컴퓨터 수단을 통하 여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판독 가능 매체에 기록될 수 있다. 또한, 본 개시의 실시예는, 입력 데이터에 근거한 AI 모델 선택 방법을 실행하는 명령어들을 포함하는 하나 이상의 프로그램이 기록된 컴퓨터로 읽을 수 있는 기록매체로 형성될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 본 발명을 위하여 특별히 설계되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스 크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체 (optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬 (ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치 가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리 터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 또한, 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법은 다중언어로 구성된 문장을 획득하는 동 작; 및 다중언어 번역 모델을 이용하여, 상기 다중언어로 구성된 문장에 포함되는 단어들 각각에 대응하는 벡터 값들을 획득하고, 상기 획득한 벡터 값들을 목표 언어에 대응하는 벡터 값들로 변환하며, 상기 변환된 벡터 값 들에 기초하여, 상기 목표 언어로 구성된 문장을 획득하는 동작을 수행하도록 하는 프로그램이 저장된 기록매체 를 포함하는 컴퓨터 프로그램 제품으로 구현될 수 있다. 이상에서 실시예들에 대하여 상세하게 설명하였지만 본 발명의 권리범위는 이에 한정되는 것은 아니고 다음의 청구범위에서 정의하고 있는 본 발명의 기본 개념을 이용한 당업자의 여러 변형 및 개량 형태 또한 본 발명의 권리범위에 속한다."}
{"patent_id": "10-2019-0069556", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a은 신경망을 이용하여 입력 데이터에 대응되는 출력 데이터를 생성하는 AI 기술을 설명하기 위한 도면이다. 도 1b는 신경망을 이용하여 입력 데이터에 대응되는 출력 데이터를 생성하는 AI 기술을 설명하기 위한 다른 도 면이다. 도 2a는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 나타내는 일 흐름도이다. 도 2b는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 나타내는 다른 흐름도이다. 도 3은 개시된 실시예에서 이용되는 학습 데이터 셋(training data set)을 나타내는 도면이다. 도 4는 개시된 실시예에서 수행되는 분류 동작을 설명하기 위한 도면이다. 도 5는 개시된 실시예에서 획득되는 오분류 데이터를 설명하기 위한 도면이다. 도 6은 개시된 실시예에서 이용되는 복수개의 AI 모델들을 설명하기 위한 도면이다. 도 7은 개시된 실시예에서 수행되는 추가 모델의 학습 동작을 설명하기 위한 도면이다. 도 8은 학습된 추가 모델에서 출력되는 오분류 확률들을 설명하기 위한 도면이다. 도 9는 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 일 플로우차트이다. 도 10은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 다른 플로우차트 이다. 도 11은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 상세하게 나타내는 다른 플로우차트 이다. 도 12는 개시된 실시예에 따른 디스플레이 장치를 나타내는 일 블록도이다. 도 13은 개시된 실시예에 따른 디스플레이 장치를 구체적으로 나타내는 일 블록도이다. 도 14는 개시된 실시예에 따른 디스플레이 장치를 구체적으로 나타내는 다른 블록도이다. 도 15는 개시된 실시예에 따른 디스플레이 장치를 나타내는 다른 블록도이다. 도 16은 개시된 실시예에 따른 입력 데이터에 근거한 AI 모델 선택 방법을 수행하기 위한 서버 및 디스플레이 장치를 나타내는 도면이다. 도 17은 도 16에 도시된 서버를 구체적으로 나타내는 블록도이다. 도 18은 서버와 통신하는 디스플레이 장치를 나타내는 블록도이다. 도 19는 도 16에 도시된 서버 및 디스플레이 장치에서 수행되는 동작들을 설명하기 위한 도면이다."}
