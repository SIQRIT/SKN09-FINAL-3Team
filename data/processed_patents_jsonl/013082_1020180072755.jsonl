{"patent_id": "10-2018-0072755", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0010629", "출원번호": "10-2018-0072755", "발명의 명칭": "데이터의 어노말리 감지 방법", "출원인": "주식회사 수아랩", "발명자": "송기영"}}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "이미지 데이터의 어노말리 판단 방법으로서,사전 학습된 네트워크 함수가 이미지 데이터를 수신하는 단계;상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 단계;상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을획득하는 단계; 및상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는,상기 클래스 별 스코어링 값 각각의 크기를 비교하는 단계; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는,상기 스코어링 값의 분산을 구하는 단계; 및 상기 분산에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는,상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하는 단계; 및상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정된 수 이하인 경우 상기 이미지 데이터에어노말리가 존재하지 않는 것으로 판단하는 단계;공개특허 10-2020-0010629-3-를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는,상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하는 단계; 및상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정된 수 이상인 경우 상기 이미지 데이터에어노말리가 존재하는 것으로 판단하는 단계;를 포함하고,상기 제 2 임계 값은 제 1 임계 값 이하인,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하는 단계;를 더 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 단계는,상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하는 단계는,상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그먼트화 하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "공개특허 10-2020-0010629-4-제 1 항에 있어서,상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을획득하는 단계는,상기 이미지 데이터의 각각의 픽셀에 대하여 각각의 클래스 별 스코어링 값을 획득하는 단계;를 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 이미지 데이터는,각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함하는,이미지 데이터의 어노말리 판단 방법."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "데이터의 어노말리 판단을 위한 컴퓨팅 장치로서, 하나 이상의 프로세서; 및 상기 프로세서에서 실행가능한 명령들을 저장하는 메모리;를 포함하고, 상기 프로세서는, 사전 학습된 네트워크 함수에 이미지 데이터를 입력하고,상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하고, 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을획득하고, 그리고 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는, 데이터의 어노말리 판단을 위한 컴퓨팅 장치."}
{"patent_id": "10-2018-0072755", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "이미지 데이터의 어노말리 판단 장치의 하나 이상의 프로세서에 의해 실행되는 복수의 명령들을 포함하는, 컴퓨터 판독가능 저장 매체(computer readable storing medium)에 저장된 컴퓨터 프로그램으로서,상기 컴퓨터 프로그램은:사전 학습된 네트워크 함수가 이미지 데이터를 수신하는 명령;상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 명령;상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을획득하는 명령; 및상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 명령;을 포함하는,공개특허 10-2020-0010629-5-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법이 개시된다. 상기 방법은 사전 학습된 네트워 크 함수가 이미지 데이터를 수신하는 단계; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 단계; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하는 단계; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존 재하는지 여부를 판단하는 단계를 포함한다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 데이터 처리에 관한 것으로, 보다 구체적으로 인공 신경망을 이용하여 이미지 데이터의 어 노말리 존재 여부를 판단하는 방법에 관한 것이다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "공정에서 검사 목표인 타겟 들이 이미지화 되어 결함 여부가 검사된다. 반면, 이미지 데이터를 사람이 검측 하 고 분석하는 것에는 한계가 있다. 정확도가 높은 이미지 데이터의 상태 판단 방법이 당업계에서 요구된다. 정확 도가 높은 이미지 데이터의 상태 판단 방법을 구현하기 위해 신경망 네트워크(neural network)가 이용될 수 있 다. 인공 신경망을 통한 어노말리 감지 방법 및 장치가 산업계에 도입되었다. 정상 데이터의 확보는 용이하나 어노 말리를 포함하는, 비정상 데이터의 확보는 용이하지 않은 것이 일반적이다. 인공 신경망의 학습을 위한 어노말 리를 포함하는, 비정상 데이터의 요구량을 감소시키기 위한 솔루션에 대한 수요가 당업계에 존재한다. 대한민국 등록 특허 KR1847874B1은 신경망을 이용한 이미지 인식 방법을 개시한다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술 한 배경기술에 대응하여 안출 된 것으로, 이미지 데이터의 어노말리 판단 방법을 제공하는 것을 목적으로 한다. 본 개시는 이미지 데이터의 어노말리 판단 방법을 통해 이미지 데이터의 어노말리의 존재 여부에 대한 정보를 제공하는 것을 목적으로 한다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법이 개 시된다. 상기 이미지 데이터의 어노말리 판단 방법은, 사전 학습된 네트워크 함수가 이미지 데이터를 수신하는 단계; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 단계; 상기 사전 학습된 네 트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하는 단계; 및 상 기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계를 포 함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는, 상기 클래스 별 스코어링 값 각각의 크기를 비 교하는 단계; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단 계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는, 상기 스코어링 값의 분산을 구하는 단계; 및 상 기 분산에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는, 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하는 단계; 및 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정된 수 이하 인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단하는 단계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하는 단계는, 상기 스코어링 값이 제 2 임계 값 이상인 클래 스의 수를 판단하는 단계; 및 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정된 수 이상 인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단하는 단계를 포함할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하는 단계를 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 단계는, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하는 단계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하는 단계는, 상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그 먼트화 하는 단계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수에서 출력되는 상 기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하는 단계는, 상기 이미지 데이터의 각각의 픽 셀에 대하여 각각의 클래스 별 스코어링 값을 획득하는 단계를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 데이터의 어노말리 판단을 위한 컴퓨팅 장 치가 개시된다. 상기 컴퓨팅 장치는, 하나 이상의 프로세서; 및 상기 프로세서에서 실행가능한 명령들을 저장하 는 메모리; 를 포함하고, 상기 프로세서는, 사전 학습된 네트워크 함수에 이미지 데이터를 입력하고, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하고, 상기 사전 학습된 네트워크 함수에서 출력되 는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하고, 그리고 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 장치의 하 나 이상의 프로세서에 의해 실행되는 복수의 명령들을 포함하는, 컴퓨터 판독가능 저장 매체(computer readable storing medium)에 저장된 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은: 사전 학습된 네트워크 함수가 이미지 데이터를 수신하는 명령; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하는 명령; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하는 명령; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하는 명령을 포함할 수 있다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 이미지 데이터의 어노말리를 판단하는 방법을 제공할 수 있다."}
{"patent_id": "10-2018-0072755", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의 미하는 것으로 의도된다. 즉, 달리 특정되 지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하 는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X 는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이 라는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이 해되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지 식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 도 1은 본 개시의 일 실시예에 따른 이미지 데이터의 어노말리를 판단하는 방법을 수행하는 컴퓨팅 장치의 블록 구성도를 도시한 도면이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있다. 컴퓨팅 장치는 프로세서, 메모리, 통신 모듈, 카메라 모듈을 포함할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장 치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세서 는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 이미지 데이터의 어노 말리 판단 방법을 수행할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서는 딥러닝(DN: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이 터에서의 피쳐(feature) 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중 치 업데이트 등의 신경망의 학습을 위한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용 한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용 하여 네트워크 함수의 학습, 네트워크 함수를 이용한 데이 터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시 예에 따른 컴퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 CPU, GPGPU, 및 TPU 중 적어도 하나를 이용하여 네트워크 함수를 분산하여 처리할 수 있다. 또한 본 개시의 일 실시예에서 컴퓨팅 장치는 다른 컴퓨팅 장치와 함께 네트워 크 함수를 분산하여 처리할 수 있다. 본 개시의 일 실시예에서 네트워크 함수를 이용하여 처리되는 이미지는 컴퓨팅 장치의 저장 매체에 저장된 이미지, 컴퓨팅 장치의 카메라 모듈에 의하여 촬영된 이미지 및/또는 통신 모듈에 의하여 이미 지 데이터 베이스 등 다른 컴퓨팅 장치로부터 전송된 이미지 일 수 있다. 또한 본 개시의 일 실시예에서 네트워 크 함수를 이용하여 처리되는 이미지는 컴퓨터 판독가능 저장 매체(예를 들어, 플래시 메모리 등을 포함할 수 있으나 본 개시는 이에 제한되지 않음)에 저장된 이미지일 수 있다. 컴퓨팅 장치는 입출력 인터페이스(미 도시)를 통해 컴퓨터 판독가능 저장 매체에 저장된 이미지 파일을 입력 받을 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 이미지 데이터를 수신하고, 사전 학습된 네트워크 함수를 이용하 여 이미지 데이터를 분류할 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 사전 학습된 네트워크를 함 수에서 출력되는 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값에 기초하여 이미지 데이터에 어노말리 가 존재하는지 여부를 판단할 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 상기 클래스 별 스코어링 값에 기초하여 해당 이미지를 어느 하나의 분 류로 판별할 수 있는 경우 해당 이미지를 정상데이터로 판단할 수 있다. 컴퓨팅 장치는 상기 클래스 별 스코어 링 값에 기초하여 해당 이미지를 어느 하나의 분류로 판별할 수 없는 경우 해당 이미지를 어노말리가 존재하는 비정상 데이터로 판단할 수 있다. 컴퓨팅 장치는 상기 클래스 별 스코어링 값에 기초하여 해당 픽셀을 어느 하 나의 분류로 판별할 수 있는 경우 정상데이터로 판단할 수 있다. 컴퓨팅 장치는 상기 클래스 별 스코어링 값에 기초하여 해당 픽셀을 어느 하나의 분류로 판별할 수 없는 경우 어노말리가 존재하는 비정상 데이터로 판단할수 있다. 즉, 본 개시의 일 실시예에서 컴퓨팅 장치는 정상 데이터를 훈련 데이터로 하여 이미지 세그먼테이션 훈련을 수행하였으므로, 컴퓨팅 장치가 입력 데이터를 스코어링 값에 기초하여 분류할 수 있는 경우, 해당 입력 데이터는 정상 데이터일 수 있다. 그러나, 컴퓨팅 장치가 입력 데이터를 스코어링 값에 기초하여 분류할 수 없 는 경우, 해당 입력 데이터는 컴퓨팅 장치가 학습하지 않은 새로운 패턴을 포함할 가능성이 있으며, 컴퓨팅 장 치가 학습하지 않은 새로운 패턴은 어노말리에 해당할 가능성이 있다. 그러므로, 컴퓨팅 장치는 학습된 모델을 통하여 분류할 수 없는 입력 데이터는 어노말리를 포함하는 비정상 데이터로 분류할 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 상기 클래스 별 스코어링 값에 기초하여 해당 픽셀을 두개 이상의 분류 로 판별할 수 있는 경우 해당 픽셀은 두개 이상의 컴포넌트가 존재하는 엣지를 포함하는 정상데이터로 판단할 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 상기 클래스 별 스코어링 값 각각에 기초하여 상기 이미지 데이터에 어 노말리가 존재하는지 여부를 판단함으로써 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노 말리가 존재하는지 여부를 판단할 수 있다. 상기 스코어링 값은 해당 부분이 특정 클래스에 속할 확률에 대응하 는 값을 나타내는 값이다. 상기 스코어링 값의 대상이 되는 부분은 컴퓨팅 장치가 수신한 이미지 전체, 컴퓨팅 장치가 수신한 이미지의 픽셀 각각 등을 포함할 수 있다. 확률에 대응하는 값으로 표시된 클래스 별 스코어링 값 각각의 확률에 대응하는 크기 값을 비교하여 어노말리가 존재하는지 여부를 판단할 수 있다. 클래스 별 확률 에 대응하는 크기 값 중 사전결정된 일정 임계 값 보다 큰 값이 한 개만 존재하는 경우에 어노말리가 존재하지 않는 정상 패턴을 가지는 정상 이미지 데이터를 수신한 것으로 판단할 수 있다. 클래스 별 확률에 대응하는 크 기 값 중 사전결정된 일정 임계 값 보다 큰 값이 한 개 이상 존재하는 경우에 어노말리가 존재하는 정상 패턴을 벗어난 비정상 이미지 데이터를 수신한 것으로 판단할 수 있다. 본 개시의 다른 실시예에서 컴퓨팅 장치는 클래스 별 스코어링 값 들의 분산을 구하고, 그리고 상기 분산 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단함으로써 상기 클래스 별 스코어링 값에 기 초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단할 수 있다. 확률에 대응하는 값으로 표시된 클래스 별 스코어링 값들의 분산을 구할 수 있다. X의 분산은 의 기댓값에서 의 기댓값의 제곱을 뺀 것 이다. 즉, 의 분산 는 이다. 스코어링 값들의 분산이 크면 클래스별 스코어링 값들 이 고르지 않게 분포되어 있다는 것을 의미한다. 스코어링 값들의 분산이 크다는 것은, 특정 클래스에 대한 스 코어링 값이 다른 클래스들의 스코어링 값보다 압도적으로 높다는 것을 의미한다. 하나의 클래스의 스코어링 값 이 압도적으로 큰 값을 가지면 컴퓨팅 장치가 사전 학습된 네트워크를 통해 이미지 데이터를 어느 하나의 분류 로 분류할 수 있다. 하나의 클래스의 스코어링 값이 압도적으로 큰 값을 가지면 해당 데이터는 어노말리가 존재 하지 않는 정상 데이터로 판단될 수 있다. 스코어링 값들의 분산이 작으면 클래스별 스코어링 값들이 고르게 분 포되어 있다는 것을 의미한다. 스코어링 값들의 분산이 작으면 하나의 클래스의 스코어링 값이 다른 어느 클래 스의 스코어링 값보다 압도적으로 크지 않다는 것을 의미한다. 압도적인 스코어링 값을 가지는 클래스가 없으면 컴퓨팅 장치가 사전 학습된 네트워크를 통해 이미지 데이터를 어느 하나의 분류로 분류할 수 없어, 해당 데이터 는 어노말리가 존재하는 비정상 데이터로 판단될 수 있다. 컴퓨팅 장치는 상기 스코어링 분포에 기초하여 구한 분산 값이 사전결정된 임계 값 이상이면 어노말리가 존재하지 않는 정상 이미지 데이터로 판단할 수 있다. 컴퓨 팅 장치는 상기 스코어링 분포에 기초하여 구한 분산 값이 사전결정된 임계 값 이하이면 어노말리가 존재하는 비정상 이미지 데이터로 판단할 수 있다. 본 개시의 다른 실시예에서 컴퓨팅 장치는 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하고, 그리고 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정된 수 이하인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단함으로써 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단할 수 있다. 이에 대한 자세한 설명은 도 7a를 참조하여 후술한다. 본 개시의 다른 실시예에서 컴퓨팅 장치는 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하고, 그리고 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정된 수 이상인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단함으로써 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이 터에 어노말리가 존재하는지 여부를 판단할 수 있다. 이에 대한 자세한 설명은 도 7b를 참조하여 후술한다. 본 개시의 다른 실시예에서 컴퓨팅 장치는 다른 사전 학습된 다른 네트워크 함수(제 2 네트워크 함수)를 이용하 여 입력 데이터에 어노말리가 존재하는지 여부를 판단할 수 있다. 다른 네트워크 함수는 사전 학습된 네트워크 함수의 출력인 클래스 별 스코어링 값을 입력으로 하는 네트워크 함수일 수 있다. 다른 네트워크 함수는 사전네트워크 함수와 직렬로 연결된 네트워크 함수일 수 있다. 여기서 직렬은 사전 네트워크 함수의 출력의 적어도 일부가 다른 네트워크 함수의 입력이 되거나, 사전 네트워크 함수의 일부가 다른 네트워크 함수와 중첩될 수 있 음을 의미할 수 있다. 다른 네트워크 함수는 본 개시의 사전 학습된 네트워크 함수의 출력인 클래스 별 스코어 링 값을 입력으로 하여 훈련된 네트워크 함수로서, 정상 데이터의 클래스 별 스코어링 값 및 비정상 데이터의 클래스 별 스코어링 값의 패턴을 학습한 네트워크 함수일 수 있다. 즉, 다른 네트워크 함수는 비정상 데이터와 정상 데이터에 대한 스코어링 값 모두를 학습 데이터로 사용하여 지도 학습 방법으로 학습된 네트워크 함수일 수 있다. 컴퓨팅 장치는 제 1 네트워크 함수(즉, 본 개시의 일 실시예의 이미지 세그먼테이션을 수행하기 위한 네트워크 함수)에서 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득할 수 있다. 컴퓨팅 장치의 제 2 네트워크 함수(즉, 본 개시의 다른 일 실시예의 데이터의 어노말리 여부를 판단하기 위한 네트워크 함수) 는 제 1 네트워크 함수로부터 클래스 별 스코어링 값을 입력 받아 어노말리가 존재하는지 여부를 판단할 수 있 다. 제 1 네트워크 함수의 출력 노드의 개수는 클래스의 개수보다 크거나 같을 수 있다. 제 2 네트워크 함수의 입력 노드의 개수는 제 1 네트워크 함수의 출력 노드의 개수보다 크거나 같을 수 있다. 제 2 네트워크 함수의 입력 노드의 개수 중 제 1 네트워크 함수의 출력 노드와 매칭되지 않는 나머지 노드는 널(NULL)값으로 설정 할 수 있다. 제 2 네트워크 함수는 클래스 별 스코어링 값에 기초하여 입력 데이터에 어노말리가 존재하는지 여부 를 판단하기 위한 종류의 네트워크 함수를 포함할 수 있으며 예를 들어, 컨벌루셔널 뉴럴 네트워크(CNN: convolutional neural network), 다층 퍼셉트론(MLP: multi layer perceptrons), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있으나, 본 개시는 이에 제한되지 않는다. 제 1 네트워크 함수와 제 2 네트워크 함수가 직렬 연결된 경우, 둘 이상의 직렬 연결된 네트워크 함수 들이 하나의 네트워크 함수를 구성할 수 있다. 컴퓨팅 장치는 어노말리가 존재하는지 여부에 대해 판단을 한 후, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시할 수 있다. 상기 이미지 데이터에 어노말리를 표시하는 부분은 이미지 데이터의 전체 일 수 있고, 이미지 데이터의 픽셀 단위의 일 부분일 수 있다. 메모리는 본 개시의 일 실시예에 따른 이미지 데이터의 어노말리 판단 방법을 수행하기 위한 컴퓨터 프로 그램을 저장할 수 있으며, 저장된 컴퓨터 프로그램은 프로세서에 의하여 판독되어 구동될 수 있다. 통신 모듈은 본 개시의 일 실시예에 따른 이미지 데이터의 어노말리 판단 방법을 수행하기 위한 데이터 등 을 다른 컴퓨팅 장치, 서버 등과 송수신할 수 있다. 통신 모듈은 이미지 데이터 등 본 개시의 실시예에 필 요한 데이터들을 다른 컴퓨팅 장치, 서버 등과 송수신 할 수 있다. 예를 들어, 통신 모듈은 학습 이미지 데이터베이스 등에서 학습 이미지 데이터를 수신할 수 있다. 또한, 통신 모듈은 복수의 컴퓨팅 장치 사이 의 통신을 가능하게 하여 복수의 컴퓨팅 장치 각각에서 네트워크 함수의 학습이 분산 수행되도록 할 수 있다. 통신 모듈은 복수의 컴퓨팅 장치 사이의 통신을 가능하게 하여 네트워크 함수를 사용한 데이터 분류를 분 산 처리할 수 있도록 할 수 있다. 카메라 모듈은 본 개시의 일 실시예에 따른 이미지 데이터의 어노말리 판단 방법을 수행하기 위하여 검사 대상물을 촬영하여 이미지 데이터를 생성하도록 할 수 있다. 본 개시의 일 실시예에서 컴퓨팅 장치는 하나 이상의 카메라 모듈을 포함할 수 있다. 도 2는 본 개시의 일 실시예에 따라 컨벌루셔널 뉴럴 네트워크(convolutional neural network)를 나타낸 개략도 이다. 본 명세서에 걸쳐, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크 (CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 도2에 도시된 컨벌루셔널 뉴럴 네트워크는 딥 뉴럴 네트워크의 일종으로서, 컨벌루셔널 레이어를 포함하는 신경 망을 포함한다. 컨벌루셔널 뉴럴 네트워크는 최소한의 전처리(preprocess)를 사용하도록 설계된 다계층 퍼셉트론(multilayer perceptorns)의 한 종류이다. CNN은 하나 또는 여러 개의 컨벌루셔널 레이어와 이와 결합된 인공 신경망 계층들로 구성될 수 있다. CNN은 가중치와 풀링 레이어(pooling layer)들을 추가로 활용할 수 있다. 이 러한 구조 덕분에 CNN은 2 차원 구조의 입력 데이터를 충분히 활용할 수 있다. 컨벌루셔널 뉴럴 네트워크는 이 미지에서 오브젝트를 인식하기 위하여 사용될 수 있다. 컨벌루셔널 뉴럴 네트워크는 이미지 데이터를 차원을 가 진 행렬로 나타내어 처리할 수 있다. 예를 들어 RGB(red-green-blue)로 인코딩 된 이미지 데이터의 경우, R, G, B 색상별로 각각 2차원(예를 들어, 2 차원 이미지 인 경우) 행렬로 나타내 질 수 있다. 즉, 이미지 데이터의 각 픽셀의 색상 값이 행렬의 성분이 될 수 있으며 행렬의 크기는 이미지의 크기와 같을 수 있다. 따라서 이미지 데 이터는 3개의 2차원 행렬로(3차원의 데이터 어레이)로 나타내질 수 있다. 컨벌루셔널 뉴럴 네트워크에서 컨벌루셔널 필터를 이동해가며 컨벌루셔널 필터와 이미지의 각 위치에서의 행렬 성분끼리 곱하는 것으로 컨벌루셔널 과정(컨벌루셔널 레이어의 입출력)을 수행할 수 있다. 컨벌루셔널 필터는 n*n 형태의 행렬로 구성될 수 있다. 컨벌루셔널 필터는 일반적으로 이미지의 전체 픽셀의 수보다 작은 고정된 형태의 필터로 구성될 수 있다. 즉, m*m 이미지를 컨벌루셔널 레이어(예를 들어, 컨벌루셔널 필터의 사이즈가 n*n인 컨벌루셔널 레이어)입력시키는 경우, 이미지의 각 픽셀을 포함하는 n*n 픽셀을 나타내는 행렬이 컨벌루셔 널 필터와 성분 곱 (즉, 행렬의 각 성분끼리의 곱) 될 수 있다. 컨벌루셔널 필터와의 곱에 의하여 이 미지에서 컨벌루셔널 필터와 매칭되는 성분이 추출될 수 있다. 예를 들어, 이미지에서 상하 직선 성분을 추출하기 위한 3*3 컨벌루셔널 필터는 [[0,1,0], [0,1,0], [0,1,0]] 와 같이 구성될 수 있다. 이미지에서 상하 직선 성분을 추 출하기 위한 3*3 컨벌루셔널 필터가 입력 이미지에 적용되면 이미지에서 컨벌루셔널 필터와 매칭되는 상하 직선 성분이 추출되어 출력될 수 있다. 컨벌루셔널 레이어는 이미지를 나타낸 각각의 채널에 대한 각각의 행렬(즉, R, G, B 코딩 이미지의 경우, R, G, B 색상)에 컨벌루셔널 필터를 적용할 수 있다. 컨벌루셔널 레이어는 입력 이미지에 컨벌루셔널 필터를 적용하여 입력 이미지에서 컨벌루셔널 필터와 매칭되는 피쳐를 추출할 수 있다. 컨 벌루셔널 필터의 필터 값(즉, 행렬의 각 성분의 값)은 컨벌루셔널 뉴럴 네트워크의 학습 과정에서 역전파에 의 하여 업데이트 될 수 있다. 컨벌루셔널 레이어의 출력에는 서브샘플링 레이어가 연결되어 컨벌루셔널 레이어의 출력을 단순화하여 메모리 사용량과 연산량을 줄일 수 있다. 예를 들어, 2*2 맥스 풀링 필터를 가지는 풀링 레이어에 컨벌루셔널 레이어의 출력을 입력시키는 경우, 이미지의 각 픽셀에서 2*2 패치마다 각 패치에 포함되는 최대값을 출력하여 이미지를 압축할 수 있다. 전술한 풀링은 패치에서 최소값을 출력하거나, 패치의 평균값을 출력하는 방식일 수도 있으며 임의의 풀링 방식이 본 개시에 포함될 수 있다. 컨벌루셔널 뉴럴 네트워크는 하나 이상의 컨벌루셔널 레이어, 서브 샘플링 레이어를 포함할 수 있다. 컨벌루셔 널 뉴럴 네트워크는 컨벌루셔널 과정과 서브샘플링 과정(예를 들어, 전술한 맥스 풀링 등)을 반복적으로 수행하 여 이미지에서 피쳐를 추출할 수 있다. 반복적인 컨벌루션널 과정과 서브샘플링 과정을 통해 뉴럴 네트워크는 이미지의 글로벌 피쳐를 추출할 수 있다. 컨벌루셔널 레이어 또는 서브샘플링 레이어의 출력은 풀 커넥티드 레이어(fully connected layer)에 입력될 수 있다. 풀 커넥티드 레이어는 하나의 레이어에 있는 모든 뉴런과 이웃한 레이어에 있는 모든 뉴런이 연결되는 레 이어이다. 풀 커넥티드 레이어는 뉴럴 네트워크에서 각 레이어의 모든 노드가 다른 레이어의 모든 노드에 연결 된 구조를 의미할 수 있다. 본 개시의 일 실시예에서 이미지 데이터의 세그먼테이션(segmentation)을 수행하기 위하여 뉴럴 네트워크는 디 컨벌루셔널 뉴럴 네트워크(DCNN: deconvolutional neural network)를 포함할 수 있다. 디컨벌루셔널 뉴럴 네트 워크는 컨벌루셔널 뉴럴 네트워크를 역방향으로 계산 시킨 것과 유사한 동작을 수행한다. 디컨벌루셔널 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크에서 추출된 피쳐를 원본 데이터와 관련된 피쳐맵으로 출력할 수 있다. 컨벌 루셔널 뉴럴 네트워크에 대한 구체적인 구성에 관한 설명은 본 출원에서 전체가 참조로서 통합되는 미국 등록 특허 US9870768에서 보다 구체적으로 논의된다. 도 3은 본 개시의 일 실시예에 따라 네트워크 함수를 통해 이미지 데이터를 분류하고, 이미지 데이터를 분류하 기 위한 클래스 별로 스코어링 값을 획득하는 것을 개략적으로 도시한 도면이다. 본 개시의 사전 학습된 네트워크 함수는 교사 학습(supervised learning), 비 교사 학습(unsupervised learning) 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 네트워크 함 수의 학습은 출력의 오류를 최소화하기 위한 것이다. 네트워크 함수의 학습에서 반복적으로 학습 데이터를 네트 워크 함수에 입력시킨다. 네트워크 함수의 학습에서 학습 데이터에 대한 네트워크 함수의 출력과 타겟의 에러를 계산한다. 네트워크 함수의 학습에서 에러를 줄이기 위한 방향으로 네트워크 함수의 에러를 네트워크 함수의 출력 레이어에서부터 입력 레이어 방향으로 역전파하여 네트워크 함수의 각 노드의 가중치를 업데이트 할 수 있다. 구체적으로 본 개시의 사전 학습된 네트워크 함수는 라벨링 된(labeled) 정상 데이터만을 학습 데이터로 사용하여 교사 학습된 네트워크 함수일 수 있다. 라벨링 된 학습 데이터는 사용자가 직접 정상 데이터의 컴포넌 트에 라벨링 한 것일 수 있다. 본 개시의 일 실시예에 따라 사용자가 직접 정상 데이터의 컴포넌트에 라벨링 함 에 있어 영상처리 알고리즘 기법을 사용할 수 있다. 영상처리 알고리즘은 캐니 엣지 디텍션(canny edge detection), 해리스 코너 디텍션(harris corner detection)등을 포함할 수 있으나, 본개시는 이에 제한되지 않 는다. 캐니 엣지 디텍션을 통해 컴퓨팅 장치는 영상을 블러링(blurring) 처리하여 노이즈를 제거하고, 마스크 엣지를 이용하여 엣지를 검출하고, Non-Maximum Value를 제거하고, Double Threshold로 크기를 구분하여 엣지를 연결함으로써 엣지를 추출할 수 있다. 영상처리 알고리즘 기법을 사용하여 일정한 픽셀 두께의 엣지를 정상 데 이터에서 추출할 수 있다. 라벨링은 정상 데이터에서 추출한 일정한 픽셀 두께의 엣지를 기초로 사용자가 영역 을 선택하는 방식일 수 있다. 예를 들어, 캐니 엣지 디텍션을 통해 영상의 엣지가 추출됨으로써 여러 부분으로 영상이 분리될 수 있다. 분리된 영상의 일 부분은 나무, 도보, 하늘 등으로 라벨링 될 수 있다. 라벨링 된 학습 데이터는 정상 데이터의 컴포넌트에 라벨링이 된 것일 수도 있다. 라벨링 된 학습 데이터는 다른 인공 신경망을 이용하여 정상 데이터의 컴포넌트에 라벨링 한 것일 수도 있다. 학습 데이터는 이미지의 전 영역이 라벨링 된 것일 수 있다. 라벨링 된 학습 데이터를 네트워크 함수에 입력하고, 네트워크 함수의 출력인 분류와 학습 데이 터의 라벨을 비교하여 오차를 계산할 수 있다. 계산된 오차는 네트워크 함수에서 역방향인 출력 레이어에서 입 력 레이어 방향으로 역전파 될 수 있다. 출력 레이어에서 입력 레이어 방향으로 역전파 된 역전파에 따라 각 레 이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률 (learing rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 네트워크 함수의 계산과 에러의 역전파는 학습 사이클을 구성할 수 있다. 학습률은 네트워크 함수의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 네트워크 함수의 학습 초기에는 높은 학습률을 사용하여 네트워크 함수가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높일 수 있다. 예를 들어, 네트워크 함수의 학습 후기에는 낮은 학습률을 사 용하여 정확도를 높일 수 있다. 이미지 세그먼테이션은 예를 들어, 이미지에서 추출된 픽셀, 엣지, 색상 등에 기초하여 이미지의 일부를 다른 일부와 구분되도록 분리하는 이미지 프로세싱을 포함할 수 있다. 네트워크 함수 의 출력인 분류는 픽셀 바이 픽셀 이미지 세그멘테이션 일 수 있다. 이미지의 픽셀 단위로 스코어링 값을 획득 하고, 각 픽셀 스코어링 값에 기초하여 이미지 세그멘테이션을 하여 이미지 데이터를 분류할 수 있다. 이미지 세그멘테이션은 이미지의 일부를 다른 일부와 구분되도록 분리하는 이미지 프로세싱을 의미할 수 있다. 본 개시의 이미지 데이터의 어노말리를 판단하는 방법은 컴퓨팅 장치의 하나 이상의 프로세서에 의하 여 수행될 수 있다. 본 개시의 컴퓨팅 장치의 하나 이상의 프로세서는 본 개시의 네트워크 함수(32 0)의 연산 프로세스를 수행할 수 있다. 본 개시의 이미지 데이터의 어노말리 판단 방법의 모든 연산 프로세스 (즉, 네트워크 함수의 사전 학습, 클래스 별 스코어링 획득, 이미지 데이터 분류 등)은 컴퓨팅 장치의 프 로세서에 의하여 수행될 수 있다. 즉, 네트워크 함수에서 데이터를 처리한다는 표현은 컴퓨팅 장치의 프로세서가 네트워크 함수를 실행하여 데이터를 처리하는 과정을 의미할 수 있다. 본 개시의 이미지 데이터의 어노말리 판단 방법에서 컴퓨팅 장치는 네트워크 함수에 이미지 데이터를 입력할 수 있다. 본 개시의 이미지 데이터의 어노말리 판단 방법에서 컴퓨팅 장치는 네트워크 함수에 서 계산한 이미지 데이터의 어노말리 계산 결과에 기초하여 결과를 출력할 수 있다. 본 개시의 네트워크 함수는 데이터의 분류를 위해 사용될 수 있다. 예를 들어, 본 개시의 네트워크 함수는 어노말리 디텍션(Anomaly Detection)에 사용될 수 있다. 어노말리 데이터는 데이터의 정상 패턴에서 벗어나는 비정상 데이터를 의미할 수 있다. 데이터는 비정형 패턴을 가질 수 있다. 어노말리 데이터는 이러한 비정형 패턴에서 벗어나는 데이터를 의미할 수 있다. 예를 들어, 생산 공정에서 생산 제품의 이미지에 관한 데이터는 정상 제품이라는 비정형 패턴을 가질 수 있다. 어노말리 데이터 는 비정형 패턴에서 벗어난 데이터(즉, 예를 들어 불량 제품의 이미지 등)일 수 있다. 본 개시의 정상 데이터, 비정형 패턴, 어노말리 데이터에 관한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 사전 학습된 네트워크 함수가 수신한 이미지 데이터는 어노말리(anomaly)의 판단의 대상이 되는 이미 지이다. 본 개시에서 어노말리 데이터는 데이터의 정상 패턴에서 벗어나는 비정상 데이터 일 수 있다. 사전 학 습된 네트워크 함수가 수신한 이미지 데이터는 정상 패턴을 가지는 정상 데이터일 수도 있다. 사전 학습된 네트워크 함수가 수신한 이미지 데이터는 정상 패턴에서 벗어나는 비정상 데이터일 수도있다. 사전 학습된 네트워크 함수가 수신한 이미지 데이터는 검사 대상이 되는 제품의 이미지 일 수 있다. 사전 학습된 네트워크 함수가 수신한 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트를 포함할 수 있다. 네트워크 함수에 입력되는 이미지 데이터는 검사 대상이 되는 제품의 이미지 일 수 있다. 네트워크 함수에 입력되는 이미지 데이터는 각각의 클래스로 분류될 수 있는 피씨비(PCB)기판, 홀(hole), 구리, 도선 등의 복수의 컴포넌트를 포함하는 이미지 일 수 있다. 전술한 클래스 및 검사 대상이 되는 제품의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 사전 학습된 네트워크 함수는 수신된 이미지 데이터를 네트워크 함수로 연산하여 픽셀 별로 클래스 별 스 코어링 값을 출력한다. 상기 클래스는 수신된 이미지 데이터의 각각의 컴포넌트를 의미할 수 있다. 출력 값은 픽셀 별로 피씨비 기판, 홀, 구리, 도선 등 클래스에 해당하는 스코어링 값을 나타낼 수 있다. 전술한 클 래스는 예시일 뿐 본 개시는 이에 제한되지 않는다. 사전 학습된 네트워크 함수는 픽셀 별로 클래스의 스코어링 값에 기초하여 이미지 데이터의 분류를 수행할 수 있다. 클래스의 스코어링 값은 각 픽셀이 어떤 컴포넌트에 해당하는지 분류하는 것일 수 있다. 해당 픽셀의 클래스 중 스코어링 값이 압도적으로 높은 클래스가 있으면, 해당 픽셀은 압도적으로 높은 스코어링 값을 가지 는 클래스로 분류할 수 있다. 각각의 픽셀이 클래스 별로 분류된 결과 값을 기초로 이미지를 세그멘테이션 할 수 있다. 같은 분류에 해당하는 픽셀을 합치면 이미지의 다른 픽셀 부분과 구분되도록 분리할 수 있다. 이미지 세그먼트화는 이미지 데이터에서 다른 일부와 구분된 이미지 데이터의 일부를 시각화 하여 표시하는 과정 또한 포함될 수 있다. 픽셀의 클래스 중 구리에 해당하는 클래스의 스코어링 값이 다른 클래스인 피씨비, 홀, 도선의 스코어링 값 보다 압도적으로 큰 값이 출력되면 해당 픽셀은 구리로 분류할 수 있다. 구리로 분류되는 픽셀들을 합치는 이미지 세그멘테이션 과정을 거치면 이미지의 다른 부분인 피씨비, 홀, 도선 등의 부분과 분리할 수 있 다. 분리한 부분인 이미지 데이터의 구리 부분을 시각화 하여 나타낼 수 있다. 사전 학습된 네트워크 함수는 클래스 별 스코어링 값을 획득한 후 이에 기초하여 어노말리를 판단할 수 있 다. 클래스 별 스코어링 값이 특정 클래스로 분류하기에 적절한지 여부에 따라 어노말리를 판단할 수 있다. 클 래스 별 스코어링 값의 분포에 따라 특정 클래스로 분류하기에 적절한지 여부가 판단된다. 특정 클래스로 분류 하기에 적절한지 여부에 기초하여 어노말리를 판단할 수 있다. 클래스 별 스코어링 값의 분포에 따라 특정 클래 스로 분류하기에 불명확한 경우는 어노말리로 판단할 수 있다. 클래스 별 스코어링 값의 분포에 따라 특정 클래 스로 분류하기에 명확한 경우는 노말로 판단할 수 있다. 사전 학습된 네트워크 함수는 라벨링 된 정상 데이터만 으로 학습되었기 때문에 정상 데이터는 명확하게 분류를 할 수 있다. 그러나 비정상 데이터는 정상 데이터와는 다른 차이점이 존재한다. 정상 데이터와는 다른 차이점에 기초하여 클래스 별 스코어링 값이 정상 데이터의 스 코어링 값과 다른 값이 나오게 된다. 정상 데이터의 스코어링 값은 하나의 클래스의 스코어링 값이 다른 클래스 의 스코어링 값과 비교했을 때 압도적으로 큰 값이 나오거나 비슷한 스코어링 값을 가지는 클래스가 존재하지 않는다. 비정상 데이터는 사전 학습된 네트워크 함수의 학습 데이터와 달리 하나의 클래스의 스코어링 값이 다 른 클래스의 스코어링 값과 비교하여 압도적인 값을 가지고 있지 않을 수 있다. 비정상 데이터는 사전 학습된 네트워크 함수의 학습 데이터와 달리 복수의 클래스의 스코어링 값이 비슷한 값을 가질 수 있다. 비정상데이터 는 사전 학습된 네트워크 함수의 학습 데이터와 달리 클래스들의 분산 값이 작게 나올 수 있다. 컴퓨팅 장치는 클래스의 스코어링 값에 기초하여 어노말리를 판단할 수 있다. 컴퓨팅 장치는 이미지 세그멘테이션을 통해 어노 말리 부분의 위치 정보를 추출할 수 있다. 컴퓨팅 장치는 이미지의 다른 부분으로부터 어노말리 데이터의 위치 를 식별하는 과정을 거칠 수 있다. 이미지 세그멘테이션을 통해 어노말리 데이터의 위치를 식별하고 다른 일부 와 구분된 이미지의 일부를 시각화하여 표시하는 과정 또한 포함할 수 있다. 도 4는 본 개시의 일 실시예에 따라 정상 이미지 데이터의 예시를 나타낸 도면이다. 본 개시의 일 실시예의 사전 네트워크 함수의 학습 데이터는 라벨링 된 정상데이터 일 수 있다. 상기와 같은 라 벨링은 사용자가 직접 정상 데이터의 컴포넌트에 라벨링 한 것일 수 있다. 상기와 같은 라벨링은 다른 인공 신 경망을 이용하여 정상 데이터의 컴포넌트에 라벨링 한 것일 수 있다. 학습 데이터는 각각의 컴포넌트에 피씨비 판, 홀, 구리선, 소자 등으로 라벨링 한 것일 수 있다. 컴포넌트는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라 정상 이미지 데이터를 사전 학습된 네트워크 함수가 수신하여 픽셀별로 클래스의 스코어링 값을 출력하면 도 7a와 같은 스코어링 값이 나온다. 정상 이미지 데이터에 대하여 클래스의 스코어링 값을 출력하면 하나의 클래스의 스코어링 값이 다른 클래스의 스코어링 값보다 압도적으로 높은 값이 나오게 된다. 홀에 해당하는 부분의 픽셀에 대한 클래스 별 스코어링 값을 출력하게 되면, 도 7a와 같은 스코어링 값이 추출될 수 있다. 제 1 임계 값보다 큰 스코어링 값을 가지는 클래스가 홀에 해당할 수 있다. 제 1 임계 값보다 작은 스코어링 값을 가지는 클래스가 판, 구리선, 소자 일 수 있다. 홀 에 해당하는 부분의 픽셀 값의 스코어링 값은 하나의 클래스가 다른 클래스와 비교하였을 때 압도적으로 높은 값을 가지므로 사전 학습된 네트워크 함수가 정상 이미지 데이터로 판단할 수 있다. 도 5는 본 개시의 일 실시예에 따라 어노말리가 존재하는 이미지 데이터의 예시를 나타낸 도면이다. 본 개시의 일 실시예에 따라 어노말리가 존재하는 이미지 데이터를 사전 학습된 네트워크 함수가 수신하여 픽셀 별로 클래스의 스코어링 값을 출력하면 도 7b와 같은 스코어링 값이 나온다. 어노말리가 존재하는 이미지 데이 터에 대하여 클래스의 스코어링 값을 출력하면 하나의 클래스의 스코어링 값이 다른 클래스의 스코어링 값보다 압도적으로 큰 값을 가지지 않거나 복수의 클래스의 스코어링 값이 비슷한 값을 가지게 된다. 홀에 해당하 는 부분의 픽셀에 대한 클래스 별 스코어링 값을 출력하게 되면, 도 7b와 같은 스코어링 값이 추출될 수 있다. 제 2 임계 값보다 큰 스코어링 값을 가지는 클래스가 복수 개 일 수 있다. 복수의 클래스가 비슷한 값을 가지는 스코어링 값이 출력될 수 있다. 사전 학습된 네트워크 함수는 하나의 압도적인 스코어링 값을 가지는 클 래스가 없어 어노말리를 포함하는 이미지 데이터로 판단할 수 있다. 도 6은 본 개시의 일 실시예에 따라 어노말리가 존재하는 이미지 데이터의 어노말리 부분을 표시한 도면이다. 사전 학습된 네트워크 함수는 스코어링 값에 기초하여 네트워크 함수가 수신한 이미지 데이터에 어노말리가 존 재하는지 여부를 판단할 수 있다. 어노말리가 존재하는 픽셀에 대하여 이미지 세그먼트화를 하여 이미지의 다른 일부와 구분되도록 분리하여 출력되는 이미지 결과값에 어노말리를 표시할 수 있다. 도 7a는 본 개시의 일 실시예에 따라 이미지 데이터에 어노말리가 존재하지 않는 경우 클래스 별 스코어링 값을 개략적으로 도시한 도면이다. 도 7b는 본 개시의 일 실시예에 따라 이미지 데이터에 어노말리가 존재하는 경우 클래스 별 스코어링 값을 개략 적으로 도시한 도면이다. 본 개시의 또 다른 일 실시예에서 컴퓨팅 장치는 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단 하고, 그리고 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정된 수 이하인 경우 상기 이 미지 데이터에 어노말리가 존재하지 않는 것으로 판단함으로써 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단할 수 있다. 네트워크 함수에 입력된 이미지 데이터가 정상 이미지 데이터인 경우 클래스 별 스코어링 분포가 도 7a와 같은 분포로 나타날 수 있다. 도 4의 홀 부분의 픽셀에 대해 클래스 별 스코어링 분포를 네트워크 함수가 출력하면 도 7a의 분포가 나타날 수 있다. 가장 큰 확 률에 대응하는 값을 가지는 스코어링 값이 홀, 다른 작은 확률에 대응하는 값을 가지는 스코어링 값이 피 씨비 판, 구리선 소자가 될 수 있다. 제 1 사전결정된 수가 1일 때, 도 7a에서 제 1 임계 값 보다 큰 스코어링 값이 한 개일 수 있다. 따라서, 네트워크 함수는 제 1 사전결정된 수가 1 일 때, 네트워 크 함수가 수신한 이미지 데이터를 정상 패턴을 가지는 이미지 데이터로 판단할 수 있다. 네트워크 함수는 제 1 사전결정된 수가 1 일 때, 네트워크 함수가 수신한 이미지 데이터를 어노말리를 포함하지 않는 정상 이미지 데 이터로 판단할 수 있다. 도 4의 픽셀 별 세그멘테이션의 결과 한 픽셀 내에 엣지가 포함될 수 있다. 예를 들어, 세그멘테이션의 결과 한 픽셀 내에 엣지가 포함되어 있어, 홀과 피씨비 판이 모두 포함될 수 있다. 제 1 사전결정된 수가 2일 때, 한 픽셀 내에 엣지가 포함되어 있다면, 도 7a에서 제 1 임계 값보다 큰 스 코어링 값이 홀과 피씨비 판 2개일 수 있다. 제 1 임계 값 보다 큰 스코어링 값의 개수가 2개이면, 제 1 사전결 정된 수인 2 이하이므로, 네트워크 함수가 수신한 이미지 데이터는 정상 패턴을 가지는 어노말리를 포함하지 않 는 정상 이미지 데이터로 네트워크 함수가 판단할 수 있다. 본 개시의 또 다른 일 실시예에서 컴퓨팅 장치는 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단 하고, 그리고 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정된 수 이상인 경우 상기 이 미지 데이터에 어노말리가 존재하는 것으로 판단함으로써 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 네트워크 함수에 입력된 이미지 데이터가 어노말리를 포함하는 비정상 이미지 데이터인 경우 클래스 별 스코어 링 분포가 도 7b와 같은 분포로 나타날 수 있다. 도 5의 홀 부분의 픽셀에 대해 클래스 별 스코어링 분포 를 네트워크 함수가 출력하면 도 7b의 분포가 나타날 수 있다. 해당 픽셀에 대한 클래스 별 스코어링 값의 크기 의 편차가 작게 나올 수 있다. 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 제 2 사전결정된 수는2 이상일 수 있다. 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정된 수인 2이상에 해당하므로 네트워 크 함수가 수신한 이미지 데이터는 비정상 패턴을 가지는 어노말리를 포함하지 않는 비정상 이미지 데이터로 네 트워크 함수가 판단 할 수 있다. 도 8은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 수단을 도시한 블록 구성도이다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법은 다음과 같은 수단에 의해 구현될 수 있다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법은, 사전 학습된 네트워크 함수가 이미지 데이 터를 수신하기 위한 수단; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위 한 수단; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 수단; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어 노말리가 존재하는지 여부를 판단하기 위한 수단에 의하여 구현될 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 수단은, 상기 클래스 별 스코어링 값 각각의 크기 를 비교하기 위한 수단; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판 단하기 위한 수단을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 수단은, 상기 스코어링 값의 분산을 구하기 위한 수단; 및 상기 분산 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 수단을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 수단은, 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하기 위한 수단; 및 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정 된 수 이하인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단하기 위한 수단을 포함할 수 있 다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 수단은, 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하기 위한 수단; 및 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정 된 수 이상인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단하기 위한 수단을 포함할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하기 위한 수단을 더 포함 할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 수단은, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그 먼트화 하기 위한 수단을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하기 위한 수단은, 상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그먼트화 하기 위한 수단을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수에서 출력되는 상 기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 수단은, 상기 이미지 데이터의 각각 의 픽셀에 대하여 각각의 클래스 별 스코어링 값을 획득하기 위한 수단을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함할 수 있다. 도 9는 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 모듈을 도시한 블록 구성도이다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법은 다음과 같은 모듈에 의해 구현될 수 있다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법은, 사전 학습된 네트워크 함수가 이미지 데이 터를 수신하기 위한 모듈; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위 한 모듈; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 모듈; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어 노말리가 존재하는지 여부를 판단하기 위한 모듈에 의하여 구현될 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 모듈은, 상기 클래스 별 스코어링 값 각각의 크기 를 비교하기 위한 모듈; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판 단하기 위한 모듈을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 모듈은, 상기 스코어링 값의 분산을 구하기 위한 모듈; 및 상기 분산 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 모듈을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 모듈은, 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하기 위한 모듈; 및 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정 된 수 이하인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단하기 위한 모듈을 포함할 수 있 다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 모듈은, 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하기 위한 모듈; 및 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정 된 수 이상인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단하기 위한 모듈을 포함할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하기 위한 모듈을 더 포함 할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 모듈은, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그 먼트화 하기 위한 모듈을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하기 위한 모듈은, 상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그먼트화 하기 위한 모듈을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수에서 출력되는 상 기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 모듈은, 상기 이미지 데이터의 각각 의 픽셀에 대하여 각각의 클래스 별 스코어링 값을 획득하기 위한 모듈을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함할 수 있다. 도 10은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 로직을 도시 한 블록 구성도이다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법은 다음과 같은 로직에 의해 구현될 수 있다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법은, 사전 학습된 네트워크 함수가 이미지 데이 터를 수신하기 위한 로직; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 로직; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 로직; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직에 의하여 구현될 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직은, 상기 클래스 별 스코어링 값 각각의 크기 를 비교하기 위한 로직; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판 단하기 위한 로직을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직은, 상기 스코어링 값의 분산을 구하기 위한 로직; 및 상기 분산 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직은, 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하기 위한 로직; 및 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정 된 수 이하인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단하기 위한 로직을 포함할 수 있 다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 로직은, 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하기 위한 로직; 및 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정 된 수 이상인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단하기 위한 로직을 포함할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하기 위한 로직을 더 포함 할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 로직은, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그 먼트화 하기 위한 로직을 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하기 위한 로직은, 상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그먼트화 하기 위한 로직을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수에서 출력되는 상 기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 로직은, 상기 이미지 데이터의 각각 의 픽셀에 대하여 각각의 클래스 별 스코어링 값을 획득하기 위한 로직을 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함할 수 있다. 도 11은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 회로를 도시 한 블록 구성도이다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법은 다음과 같은 회로에 의해 구현될 수 있다. 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리 판단 방법은, 사전 학습된 네트워크 함수가 이미지 데이 터를 수신하기 위한 회로; 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 회로; 상기 사전 학습된 네트워크 함수에서 출력되는 상기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 회로; 및 상기 클래스 별 스코어링 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로에 의하여 구현될 수 있다.이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로는, 상기 클래스 별 스코어링 값 각각의 크기 를 비교하기 위한 회로; 및 상기 비교 결과에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판 단하기 위한 회로를 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로는, 상기 스코어링 값의 분산을 구하기 위한 회로; 및 상기 분산 값에 기초하여 상기 이미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로는, 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수를 판단하기 위한 회로; 및 상기 스코어링 값이 제 1 임계 값 이상인 클래스의 수가 제 1 사전결정 된 수 이하인 경우 상기 이미지 데이터에 어노말리가 존재하지 않는 것으로 판단하기 위한 회로를 포함할 수 있 다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 클래스 별 스코어링 값에 기초하여 상기 이 미지 데이터에 어노말리가 존재하는지 여부를 판단하기 위한 회로는, 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수를 판단하기 위한 회로; 및 상기 스코어링 값이 제 2 임계 값 이상인 클래스의 수가 제 2 사전결정 된 수 이상인 경우 상기 이미지 데이터에 어노말리가 존재하는 것으로 판단하기 위한 회로를 포함할 수 있고, 상기 제 2 임계 값은 제 1 임계 값 이하일 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터에 어노말리가 존재하는 경우, 상기 이미지 데이터에서 상기 어노말리가 존재하는 부분을 상기 이미지 데이터에 표시하기 위한 회로를 더 포함 할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수를 이용하여 상기 이미지 데이터를 분류하기 위한 회로는, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그 먼트화 하기 위한 회로를 더 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터의 각 부분을 분류하여 상기 이미지 데이터를 세그먼트화 하기 위한 회로는, 상기 이미지 데이터를 각 픽셀 별로 각각의 클래스로 분류하여 세그먼트화 하기 위한 회로를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 사전 학습된 네트워크 함수에서 출력되는 상 기 이미지 데이터를 분류하기 위한 클래스 별 스코어링 값을 획득하기 위한 회로는, 상기 이미지 데이터의 각각 의 픽셀에 대하여 각각의 클래스 별 스코어링 값을 획득하기 위한 회로를 포함할 수 있다. 이미지 데이터의 어노말리 판단 방법의 대안적인 실시예에서, 상기 이미지 데이터는, 각각의 클래스로 분류되는 하나 이상의 컴포넌트들을 포함할 수 있다. 도 12는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도(block diagram)이다. 도 12는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도시 한다. 본 개시가 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술되었 지만, 당업자라면 본 개시가 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로서 구 현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있다. 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시적 (transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동식 및 비이동식 매체를 포함한다. 컴퓨터 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메모리 기술, CD- ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정 보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유 선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것 의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)-이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음-, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작 하거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 매체는 자기 저장 장치(예 를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계 -판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2018-0072755", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 수행하는 컴퓨팅 장치의 블록 구성도를 도시한 도면이다. 도 2는 본 개시의 일 실시예에 따라 컨벌루셔널 뉴럴 네트워크(convolutional neural network)를 나타낸 개략도 이다.도 3은 본 개시의 일 실시예에 따라 네트워크 함수를 통해 이미지 데이터를 분류하고, 이미지 데이터를 분류하 기 위한 클래스 별로 스코어링 값을 획득하는 것을 개략적으로 도시한 도면이다. 도 4는 본 개시의 일 실시예에 따라 정상 이미지 데이터의 예시를 나타낸 도면이다. 도 5는 본 개시의 일 실시예에 따라 어노말리가 존재하는 이미지 데이터의 예시를 나타낸 도면이다. 도 6은 본 개시의 일 실시예에 따라 어노말리가 존재하는 이미지 데이터의 어노말리 부분을 표시한 도면이다. 도 7a는 본 개시의 일 실시예에 따라 이미지 데이터에 어노말리가 존재하지 않는 경우 클래스 별 스코어링 값을 개략적으로 도시한 도면이다. 도 7b는 본 개시의 일 실시예에 따라 이미지 데이터에 어노말리가 존재하는 경우 클래스 별 스코어링 값을 개략 적으로 도시한 도면이다. 도 8는 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 수단을 도시한 블록 구성도이다. 도 9은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 모듈을 도시한 블록 구성도이다. 도 10은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 로직을 도시 한 블록 구성도이다. 도 11은 본 개시의 일 실시예에 따라 이미지 데이터의 어노말리를 판단하는 방법을 구현하기 위한 회로를 도시 한 블록 구성도이다. 도 12는 본 개시의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도(block diagram)이다."}
