{"patent_id": "10-2022-0168002", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0083656", "출원번호": "10-2022-0168002", "발명의 명칭": "이기종 시스템의 가상 메모리 관리 장치 및 방법", "출원인": "성균관대학교산학협력단", "발명자": "김정래"}}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션(migration)을 수행하는 이기종 시스템의 가상 메모리 관리 방법에 있어서,상기 이기종 시스템으로 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계;검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블(inverted page table)을 기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버(frame number)를생성하는 단계; 및상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 프레임 넘버를 생성하는 단계는,목적지 후보 큐(destination candidate que)의 가용 공간이 기 설정된 비율 이상이면 상기 가용 공간의 채움 프로세스를 진행하는 단계; 및상기 채움 프로세스를 기초로 마이그레이션에 필요한 상기 프레임 넘버를 상기 역 페이지 테이블 내에서 선택하여 상기 목적지 후보 큐에 저장하는 단계;를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 목적지 후보 큐에 저장하는 단계는,프레임 영역에 프리(free) 프레임이 존재하는지를 판단하는 단계;상기 프리 프레임이 존재하면 상기 역 페이지 테이블에 액세스하여 상기 프리 프레임의 프레임 넘버에 대응하는제1 프레임 넘버를 선택하는 단계; 및상기 제1 프레임 넘버를 상기 목적지 후보 큐에 채우는 단계;를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 프리 프레임이 존재하는지를 판단하는 단계는,상기 프레임 영역의 가용 비트맵에서 상기 프리 프레임이 존재하는 2MB(mega-byte) 단위의 프레임 영역을 검색공개특허 10-2024-0083656-3-하는 단계를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 3 항에 있어서,상기 목적지 후보 큐에 채우는 단계는,상기 목적지 후보 큐의 플래그를 0으로 할당하는 단계를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 3 항에 있어서,상기 목적지 후보 큐에 저장하는 단계는,상기 프리 프레임이 존재하지 않으면 상기 역 페이지 테이블에 액세스하여 랜덤한 의사 프레임 넘버에 대응하는제2 프레임 넘버를 선택하는 단계; 및상기 제2 프레임 넘버를 상기 목적지 후보 큐에 채우는 단계;를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 제2 프레임 넘버를 선택하는 단계는,상기 프리 프레임이 존재하지 않으면 의사 랜덤 넘버 생성기로부터 상기 랜덤한 의사 프레임 넘버를 제공받는단계를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6 항에 있어서,상기 목적지 후보 큐에 채우는 단계는,상기 목적지 후보 큐의 플래그를 1로 할당하는 단계를 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 디바이스 메모리에서 검색하는 단계는,상기 페이지의 주소에 대응하는 페이지 테이블 엔트리(page table entry)를 상기 디바이스 메모리의 페이지 테이블 내에서 검색하는 단계; 및검색되는 페이지 테이블 엔트리를 기초로 상기 페이지의 물리적 주소를 검색하는 단계;를 포함하는공개특허 10-2024-0083656-4-가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 페이지 마이그레이션의 실행이 종료되면 상기 페이지 테이블 엔트리를 갱신하는 단계; 및상기 갱신된 페이지 테이블 엔트리를 상기 페이지 액세스를 요청한 스트리밍 멀티프로세서로 반환하는 단계;를더 포함하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,상기 역 페이지 테이블은 상기 디바이스 메모리의 프레임과 페이지를 매핑하여 저장하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1 항에 있어서,상기 페이지 마이그레이션은 페이지 단위 또는 페이지 그룹 단위로 실행되고,상기 이기종 시스템은 페이지 또는 페이지 그룹 단위, 프레임 또는 프레임 그룹 단위로 메모리 관리를 수행하는가상 메모리 관리 방법."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시스템의 가상 메모리 관리 장치에 있어서,페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 페이지 테이블 워커;상기 페이지 테이블 워커를 통해 검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블을 기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 목적지 할당부; 및상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 페이지 마이그레이션부;를 포함하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 목적지 할당부는,마이그레이션에 필요한 프레임 넘버를 상기 역 페이지 테이블 내에서 선택하여 목적지 후보 큐에 저장하는 가용프레임 매니저;공개특허 10-2024-0083656-5-상기 가용 프레임 매니저를 통해 선택된 프레임 넘버를 저장하는 목적지 후보 큐; 및프레임 영역 내에 프리한 프리 프레임이 존재하지 않을 경우에 랜덤한 의사 프레임 넘버를 생성하여 상기 가용프레임 매니저로 제공하는 의사 랜덤 넘버 생성기;를 포함하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 가용 프레임 매니저는,상기 목적지 후보 큐의 가용 공간이 기 설정된 비율 이상이면 상기 마이그레이션에 필요한 프레임 넘버를 상기역 페이지 테이블 내에서 선택하여 목적지 후보 큐에 저장하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항에 있어서,상기 가용 프레임 매니저는,상기 프레임 영역에 상기 프리 프레임이 존재하면 상기 역 페이지 테이블에 액세스하여 상기 프리 프레임의 프레임 넘버에 대응하는 제1 프레임 넘버를 선택하고, 상기 제1 프레임 넘버를 상기 목적지 후보 큐에 채우는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16 항에 있어서,상기 가용 프레임 매니저는,상기 프레임 영역의 가용 비트맵에서 상기 프리 프레임이 존재하는 2MB 단위의 프레임 영역을 검색하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 16 항에 있어서,상기 가용 프레임 매니저는,상기 목적지 후보 큐의 플래그를 0으로 할당하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 17 항에 있어서,상기 가용 프레임 매니저는,상기 프레임 영역에 상기 프리 프레임이 존재하지 않으면 상기 역 페이지 테이블에 액세스하여 랜덤한 의사 프레임 넘버에 대응하는 제2 프레임 넘버를 선택하고, 상기 제2 프레임 넘버를 상기 목적지 후보 큐에 채우는공개특허 10-2024-0083656-6-가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서,상기 가용 프레임 매니저는,상기 프리 프레임이 존재하지 않으면 상기 의사 랜덤 넘버 생성기로부터 상기 랜덤한 의사 프레임 넘버를 제공받는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 19 항에 있어서,상기 가용 프레임 매니저는,상기 목적지 후보 큐의 플래그를 1로 할당하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 13 항에 있어서,상기 페이지 테이블 워커는,상기 페이지의 주소에 대응하는 페이지 테이블 엔트리를 상기 디바이스 메모리의 페이지 테이블 내에서 검색하고, 검색되는 페이지 테이블 엔트리를 기초로 상기 페이지의 물리적 주소를 검색하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제 22 항에 있어서,상기 이기종 시스템은,상기 페이지 마이그레이션의 실행이 종료되면 상기 페이지 테이블 엔트리를 갱신하고, 상기 갱신된 페이지 테이블 엔트리를 상기 스트리밍 멀티프로세서로 반환하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제 13 항에 있어서,상기 역 페이지 테이블은 상기 디바이스 메모리의 프레임과 페이지를 매핑하여 저장하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "공개특허 10-2024-0083656-7-제 13 항에 있어서,상기 페이지 마이그레이션은 페이지 또는 페이지 그룹 단위로 실행되고,상기 이기종 시스템은 페이지 또는 페이지 그룹 단위, 프레임 또는 프레임 그룹 단위로 메모리 관리를 수행하는가상 메모리 관리 장치."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "컴퓨터 프로그램을 저장하고 있는 컴퓨터 판독 가능 기록매체로서,상기 컴퓨터 프로그램은,시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시스템의 가상 메모리 관리 방법을 프로세서가 수행하도록 하기 위한 명령어를 포함하고,상기 방법은,상기 이기종 시스템으로 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계;검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블을기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 단계; 및상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함하는컴퓨터 판독 가능한 기록매체."}
{"patent_id": "10-2022-0168002", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "컴퓨터 판독 가능 기록매체에 저장된 컴퓨터 프로그램으로서,상기 컴퓨터 프로그램은,시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시스템의 가상 메모리 관리 방법을 프로세서가 수행하도록 하기 위한 명령어를 포함하고,상기 방법은,상기 이기종 시스템으로 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계;검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블을기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 단계; 및상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함하는기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 시스템 메모리와 디바이스 메모리, 예를 들어 GPU(graphic processor unit) 메모리 간의 데이터 마이 그레이션(migration)을 수행하는 이기종 시스템의 가상 메모리 관리에 관한 것으로, 상기 이기종 시스템으로 페 이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계; 검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이 블(inverted page table)을 기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버(frame number) 를 생성하는 단계; 및 상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레 이션을 실행하는 단계;를 포함할 수 있다."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 마이크로프로세서(microprocessors)의 컴퓨팅 분야와 관련되며, 특히 메모리 가상화 (virtualization), 데이터 마이그레이션(migration) 등과 관련이 있다."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "컴퓨팅 시스템 환경에서 서로 상이한 이기종 세트들, 예컨대 CPU와 GPU 메모리 간의 데이터 마이그레이션을 자 동화하고 메모리 초과 사용을 지원하기 위해 통합 메모리(unified memory) 기술이 도입된 바 있다. 통합 메모리 기술은 소프트웨어 프로그래밍을 쉽게 만들어주지만 소프트웨어 기반 마이그레이션으로 인해 오버헤드 (overhead)가 과도하게 발생할 수 있다. 따라서, 데이터 마이그레이션시 통합 메모리의 오버헤드를 최소화하기 위한 기술이 필요한 실정이다. 선행기술문헌 특허문헌 (특허문헌 0001) 미국등록특허 US 10,303,616 (2019년05월28일)"}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예에서는, 로컬 메모리에 대한 액세스를 감지하고, 소프트웨어의 개입 없이 페이지를 마이그레이 션하는 이기종 시스템의 가상 메모리 관리 기술을 제안하고자 한다. 본 발명의 실시예에서는, 페이지 폴트(fault)와 소프트웨어 처리를 하드웨어에 오프로딩함으로써 페이지 마이그 레이션에 소요되는 시간을 줄이고 성능을 향상시킬 수 있는 이기종 시스템의 가상 메모리 관리 기술을 제안하고 자 한다. 본 발명이 해결하고자 하는 과제는 상기에서 언급한 것으로 제한되지 않으며, 언급되지 않은 또 다른 해결하고 자 하는 과제는 아래의 기재들로부터 본 발명이 속하는 통상의 지식을 가진 자에 의해 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시예에 따르면, 시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시 스템의 가상 메모리 관리 방법에 있어서, 상기 이기종 시스템으로 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계; 검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블(inverted page table)을 기초로 상기 디 바이스 메모리의 마이그레이션 목적지의 프레임 넘버(frame number)를 생성하는 단계; 및 상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함하는 가상 메 모리 관리 방법을 제공할 수 있다. 여기서, 상기 프레임 넘버를 생성하는 단계는, 목적지 후보 큐(destination candidate que)의 가용 공간이 기 설정된 비율 이상이면 상기 가용 공간의 채움 프로세스를 진행하는 단계; 및 상기 채움 프로세스를 기초로 마이 그레이션에 필요한 상기 프레임 넘버를 상기 역 페이지 테이블 내에서 선택하여 상기 목적지 후보 큐에 저장하 는 단계;를 포함할 수 있다. 또한, 상기 기 설정된 비율은 50%일 수 있다. 또한, 상기 목적지 후보 큐에 저장하는 단계는, 프레임 영역에 프리(free) 프레임이 존재하는지를 판단하는 단 계; 상기 프리 프레임이 존재하면 상기 역 페이지 테이블에 액세스하여 상기 프리 프레임의 프레임 넘버에 대응 하는 제1 프레임 넘버를 선택하는 단계; 및 상기 제1 프레임 넘버를 상기 목적지 후보 큐에 채우는 단계;를 포 함할 수 있다.또한, 상기 프리 프레임이 존재하는지를 판단하는 단계는, 상기 프레임 영역의 가용 비트맵에서 상기 프리 프레 임이 존재하는 2MB(mega-byte) 단위의 프레임 영역을 검색하는 단계를 포함할 수 있다. 또한, 상기 목적지 후보 큐에 채우는 단계는, 상기 목적지 후보 큐의 플래그를 0으로 할당하는 단계를 포함할 수 있다. 또한, 상기 목적지 후보 큐에 저장하는 단계는, 상기 프리 프레임이 존재하지 않으면 상기 역 페이지 테이블에 액세스하여 랜덤한 의사 프레임 넘버에 대응하는 제2 프레임 넘버를 선택하는 단계; 및 상기 제2 프레임 넘버를 상기 목적지 후보 큐에 채우는 단계;를 포함할 수 있다. 또한, 상기 제2 프레임 넘버를 선택하는 단계는, 상기 프리 프레임이 존재하지 않으면 의사 랜덤 넘버 생성기로 부터 상기 랜덤한 의사 프레임 그룹 넘버를 제공받는 단계를 포함할 수 있다. 또한, 상기 목적지 후보 큐에 채우는 단계는, 상기 목적지 후보 큐의 플래그를 1로 할당하는 단계를 포함할 수 있다. 또한, 상기 페이지 마이그레이션을 실행하는 단계는, 상기 시스템 메모리에 대한 축출(eviction)이 요구되는 경 우에 상기 페이지를 희생(victim) 페이지와 스왑(swap)하는 단계를 포함할 수 있다. 또한, 상기 디바이스 메모리에서 검색하는 단계는, 상기 페이지의 주소에 대응하는 페이지 테이블 엔트리(page table entry)를 상기 디바이스 메모리의 페이지 테이블 내에서 검색하는 단계; 및 검색되는 페이지 테이블 엔트 리를 기초로 상기 페이지의 물리적 주소를 검색하는 단계;를 포함할 수 있다. 또한, 상기 가상 메모리 관리 방법은, 상기 페이지 마이그레이션의 실행이 종료되면 상기 페이지 테이블 엔트리 를 갱신하는 단계; 및 상기 갱신된 페이지 테이블 엔트리를 상기 페이지 액세스를 요청한 스트리밍 멀티프로세 서로 반환하는 단계;를 더 포함할 수 있다. 또한, 상기 역 페이지 테이블은 상기 디바이스 메모리의 프레임과 페이지를 매핑하여 저장할 수 있다. 또한, 상기 페이지 마이그레이션은 페이지 단위 또는 페이지 그룹 단위로 실행될 수 있다. 또한, 상기 이기종 시스템은 페이지 또는 페이지 그룹 단위, 프레임 또는 프레임 그룹 단위로 메모리 관리를 수 행할 수 있다. 본 발명의 실시예에 따르면, 시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시 스템의 가상 메모리 관리 장치에 있어서, 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응한 물리적 주 소를 상기 디바이스 메모리에서 검색하는 페이지 테이블 워커; 상기 페이지 테이블 워커를 통해 검색되는 물리 적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블을 기초로 상기 디 바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 목적지 할당부; 및 상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 페이지 마이그레이션부;를 포함 하는 가상 메모리 관리 장치를 제공할 수 있다. 여기서, 상기 목적지 할당부는, 마이그레이션에 필요한 프레임 넘버를 상기 역 페이지 테이블 내에서 선택하여 목적지 후보 큐에 저장하는 가용 프레임 매니저; 상기 가용 프레임 매니저를 통해 선택된 프레임 넘버를 저장하 는 목적지 후보 큐; 및 프레임 영역 내에 프리한 프리 프레임 그룹이 존재하지 않을 경우에 랜덤한 의사 프레임 넘버를 생성하여 상기 가용 프레임 매니저로 제공하는 의사 랜덤 넘버 생성기;를 포함할 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 목적지 후보 큐의 가용 공간이 기 설정된 비율 이상이면 상기 마이그레 이션에 필요한 프레임 넘버를 상기 역 페이지 테이블 내에서 선택하여 목적지 후보 큐에 저장할 수 있다. 또한, 상기 기 설정된 비율은 50%일 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 프레임 영역에 상기 프리 프레임이 존재하면 상기 역 페이지 테이블에 액세스하여 상기 프리 프레임의 프레임 넘버에 대응하는 제1 프레임 넘버를 선택하고, 상기 제1 프레임 넘버를 상기 목적지 후보 큐에 채울 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 프레임 영역의 가용 비트맵에서 상기 프리 프레임이 존재하는 2MB 단위 의 프레임 영역을 검색할 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 목적지 후보 큐의 플래그를 0으로 할당할 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 프레임 영역에 상기 프리 프레임이 존재하지 않으면 상기 역 페이지 테 이블에 액세스하여 랜덤한 의사 프레임 넘버에 대응하는 제2 프레임 넘버를 선택하고, 상기 제2 프레임 넘버를 상기 목적지 후보 큐에 채울 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 프리 프레임이 존재하지 않으면 상기 의사 랜덤 넘버 생성기로부터 상 기 랜덤한 의사 프레임 넘버를 제공받을 수 있다. 또한, 상기 가용 프레임 매니저는, 상기 목적지 후보 큐의 플래그를 1로 할당할 수 있다. 또한, 상기 페이지 테이블 워커는, 상기 페이지의 주소에 대응하는 페이지 테이블 엔트리를 상기 디바이스 메모 리의 페이지 테이블 내에서 검색하고, 검색되는 페이지 테이블 엔트리를 기초로 상기 페이지의 물리적 주소를 검색할 수 있다. 또한, 상기 이기종 시스템은, 상기 페이지 마이그레이션의 실행이 종료되면 상기 페이지 테이블 엔트리를 갱신 하고, 상기 갱신된 페이지 테이블 엔트리를 상기 스트리밍 멀티프로세서로 반환할 수 있다. 또한, 상기 역 페이지 테이블은 상기 디바이스 메모리의 프레임과 페이지을 매핑하여 저장할 수 있다. 또한, 상기 페이지 마이그레이션은 페이지 또는 페이지 그룹 단위로 실행될 수 있다. 또한, 상기 이기종 시스템은 페이지 또는 페이지 그룹 단위, 프레임 또는 프레임 그룹 단위로 메모리 관리를 수 행할 수 있다. 본 발명의 실시예에 따르면, 컴퓨터 프로그램을 저장하고 있는 컴퓨터 판독 가능 기록매체로서, 상기 컴퓨터 프 로그램은, 시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시스템의 가상 메모 리 관리 방법을 프로세서가 수행하도록 하기 위한 명령어를 포함하고, 상기 방법은, 상기 이기종 시스템으로 페 이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계; 검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이 블을 기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 단계; 및 상기 프레임 넘 버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함할 수 있다. 본 발명의 실시예에 따르면, 컴퓨터 판독 가능 기록매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그 램은, 시스템 메모리와 디바이스 메모리 간의 데이터 마이그레이션을 수행하는 이기종 시스템의 가상 메모리 관 리 방법을 프로세서가 수행하도록 하기 위한 명령어를 포함하고, 상기 방법은, 상기 이기종 시스템으로 페이지 액세스가 요청되면, 요청된 페이지의 주소에 대응하는 물리적 주소를 상기 디바이스 메모리에서 검색하는 단계; 검색되는 물리적 주소가 상기 시스템 메모리에 할당된 주소이면, 상기 디바이스 메모리의 역 페이지 테이블을 기초로 상기 디바이스 메모리의 마이그레이션 목적지의 프레임 넘버를 생성하는 단계; 및 상기 프레임 넘버와 상기 물리적 주소를 기초로 상기 시스템 메모리로의 페이지 마이그레이션을 실행하는 단계;를 포함할 수 있다."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예에 의하면, 로컬 메모리에 대한 액세스를 감지하고, 소프트웨어의 개입 없이 페이지를 마이그 레이션할 수 있으며, 페이지 폴트와 소프트웨어 처리를 하드웨어에 오프로딩함으로써 페이지 마이그레이션에 소 요되는 시간을 줄이고 성능을 향상시킬 수 있다. 본 발명은 메모리 초과 사용 시에도 전체 실행 시간이 급격하 게 증가하지 않기 때문에, 한정된 크기의 메모리 내에서 보다 많은 데이터들을 사용하여 인공지능 학습 등 다양 한 분야에서 효과적인 활용이 가능하다."}
{"patent_id": "10-2022-0168002", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 다 양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명의 범주 는 청구항에 의해 정의될 뿐이다. 본 발명의 실시예들을 설명함에 있어서 공지 기능 또는 구성에 대한 구체적인 설명은 본 발명의 실시예들을 설 명함에 있어 실제로 필요한 경우 외에는 생략될 것이다. 그리고 후술되는 용어들은 본 발명의 실시예에서의 기 능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 본 발명의 실시예에서는, 로컬 메모리에 대한 액세스를 감지하고, 소프트웨어의 개입 없이 페이지를 마이그레이 션할 수 있으며, 페이지 폴트(page fault)와 소프트웨어 처리를 하드웨어에 오프로딩하여 페이지 폴트를 발생시 키지 않고 페이지 마이그레이션의 모든 과정을 하드웨어만으로 빠르게 처리함으로써, 페이지 마이그레이션에 소 요되는 시간을 줄이고 성능을 향상시킬 수 있는 가상 메모리 관리 기술을 제안하고자 한다. 구체적으로 본 발명의 실시예에서는, 하드웨어로 모든 과정을 처리하기 위해서 GPU 메모리의 페이지 테이블의 페이지 테이블 엔트리(page table entry, PTE)를 통해 페이지가 시스템 메모리에 할당되어 있을 경우에 시스템 메모리의 PFN(physical frame number)을 저장할 수 있다. 또한, 역 페이지 그룹 테이블(inverted page-group table)을 추가로 둬서 페이지 마이그레이션 시 GPU 메모리의 목적지 프레임 주소를 미리 파악할 수 있다. 또한, 기본 마이그레이션 단위는 64KB로 4KB 페이지 16개를 한번에 마이그레이션할 수 있다. 이를 통해 본 발명 의 실시예는 프리페칭(prefetching)의 효과를 가져올 수 있다. 본 발명에서는 이 단위를 페이지 그룹(page group)이라고 명명한다. 마찬가지로 4KB 메모리 프레임 16개를 프레임 그룹(frame-group)이라고 명명한다. 또한, 본 발명의 실시예에서 이기종 시스템은, 예를 들어 컴퓨팅 환경에서의 CPU와 GPU를 포함할 수 있으며, 가 상 메모리 관리를 위한 시스템 메모리와 디바이스 메모리는 CPU 메모리와 GPU 메모리를 포함할 수 있다. 아래에 서 명시하는 CPU, GPU, CPU 메모리, GPU 메모리 등은 발명의 이해를 돕기 위한 예시일 뿐, 이기종 시스템에 또 다른 구성들이 포함될 수도 있음을 주지할 필요가 있다. 이는 후술하는 청구범위로부터 명확해 질 것이다. 또한, 아래의 실시예의 설명에서 페이지 그룹, 프레임 그룹, 그룹 테이블, 그룹 넘버 등은 발명의 이해를 돕기 위한 예시일 뿐이며, 반드시 그룹 단위로 메모리 관리를 수행하는 것을 한정하지는 않는다. 다만, 보다 빠른 메 모리 관리를 위해 페이지와 메모리 프레임을 그룹 등의 큰 단위로 관리할 수도 있음을 주지할 필요가 있다. 이 는 후술하는 청구범위로부터 명확해 질 것이다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예에 대해 상세히 설명하기로 한다. 도 1은 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 장치에 대한 블록도로서, 본 발명의 실시예에 따 른 GPU의 가상 메모리 관리 장치는 시스템 메모리와 GPU 메모리 간의 데이터 마이그레이션을 수 행할 수 있다. 도 1에 도시한 바와 같이, GPU의 가상 메모리 관리 장치는 스트리밍 멀티프로세서(streaming multiprocessor(SM), 10), 페이지 테이블 워커, 목적지 할당부 및 페이지 마이그레이션부를 포함 할 수 있다.이러한 GPU의 가상 메모리 관리 장치는 GPU 메모리와 시스템 메모리가 연결될 수 있다. GPU 메모리는 페이지 테이블, 역 페이지 그룹 테이블 및 로컬 메모리 영역을 포함할 수 있으 며, 시스템 메모리는 원격 메모리 영역을 포함할 수 있다. GPU 메모리 내의 페이지 테이블은 시스템 메모리의 물리적 주소인 PFN과 페이지의 현재 위치를 나타내 는 A 플래그 등을 포함한다. PFN, A 플래그 등의 1열이 페이지 테이블 엔트리로 명명될 수 있다. GPU 메모리 내의 역 페이지 그룹 테이블은 역 페이지 테이블 형식으로 GPU 메모리의 프레임 그 룹과 페이지 그룹을 매핑하여 저장한다. 역 페이지 그룹 테이블의 각 테이블 엔트리에는 프리(free) 플래그, P 플래그, CID(context ID), 가상 페 이지 그룹 넘버(VPgN)가 저장된다. 프리 플래그는 프레임 그룹에 할당된 페이지 그룹이 있는지 여부를 나타낸다. P 플래그는 프레임 그룹이 “보호된(protected)” 상태여서 마이그레이션에 사용될 수 없는지 여부를 나타낸다. CID는 GPU의 콘텍스트 ID를 의미하는 것으로, 여러 가상주소 공간을 구분하는데 사용된다. 가상 페이 지 그룹 넘버(VPgN)는 프레임 그룹에 할당된 페이지 그룹 넘버를 의미한다. GPU 내의 스트리밍 멀티프로세서는 GPU로의 페이지 액세스 요청에 의거하여 페이지에 액세스할 수 있다. 페이지 테이블 워커는 스트리밍 멀티프로세서가 페이지에 액세스했을 때 해당 페이지의 주소에 대응하 는 물리적 주소를 GPU 메모리에서 검색할 수 있다. 구체적으로, 페이지 테이블 워커는, 스트리밍 멀티 프로세서가 액세스한 페이지의 주소에 대응하는 페이지 테이블 엔트리를 GPU 메모리의 페이지 테이블 내에서 검색하고, 검색되는 페이지 테이블 엔트리를 기초로 스트리밍 멀티프로세서가 액세스한 페이지 의 물리적 주소를 검색할 수 있다. 목적지 할당부는 페이지 테이블 워커를 통해 검색되는 물리적 주소가 시스템 메모리에 할당된 주 소이면, GPU 메모리의 역 페이지 그룹 테이블을 기초로 GPU 메모리의 마이그레이션 목적지의 프 레임 그룹 넘버를 생성할 수 있다. 페이지 마이그레이션부는 프레임 그룹 넘버와 물리적 주소를 기초로 시스템 메모리로의 페이지 마이그 레이션을 실행할 수 있다. 이때의 페이지 마이그레이션은 페이지 그룹 단위로 실행될 수 있다. 한편, GPU는 페이지 마이그레이션의 실행이 종료되면 페이지 테이블 엔트리를 갱신하고, 갱신된 페이지 테 이블 엔트리를 스트리밍 멀티프로세서로 반환할 수 있다. 도 2는 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 장치에서 목적지 할당부에 대한 세부 블록 도이다. 본 발명의 실시예에 따른 목적지 할당부는 목적지 후보 큐, 가용 프레임 매니저, 프레임 영역 가용 비트맵 및 의사 랜덤 넘버 생성기를 포함할 수 있다. 목적지 후보 큐는 후술하는 가용 프레임 매니저를 통해 선택된 프레임 그룹 넘버를 저장할 수 있다. 구체적으로, 목적지 후보 큐는 목적지 할당부의 내부 구성요소로서, 가용 프레임 매니저가 선택 한 프레임 그룹 넘버들을 저장하는 큐이다. 총 64개의 엔트리로 이루어져있고 각 엔트리는 프레임 그룹 넘버와 스왑(swap) 플래그(S)를 가지고 있다. 스왑 플래그는 프레임 그룹에 이미 다른 페이지 그룹이 할당되어 있어서 새로운 페이지 그룹과 스왑이 필요한지 여부를 나타낸다. 가용 프레임 매니저는 마이그레이션에 필요한 프레임 그룹 넘버를 역 페이지 그룹 테이블 내에서 선 택하여 목적지 후보 큐에 저장하는 역할을 할 수 있다. 가용 프레임 매니저는 목적지 후보 큐의 가용 공간이 기 설정된 비율, 예를 들어 50% 이상이면 마이 그레이션에 필요한 프레임 그룹 넘버를 역 페이지 그룹 테이블 내에서 선택하여 목적지 후보 큐에 저 장할 수 있다. 가용 프레임 매니저는 프레임 영역에 프리 프레임 그룹이 존재하면 역 페이지 그룹 테이블에 액세스 하여 프리 프레임 그룹의 프레임 그룹 넘버에 대응하는 제1 프레임 그룹 넘버를 선택하고, 제1 프레임 그룹 넘버를 목적지 후보 큐에 채울 수 있으며, 목적지 후보 큐의 플래그를 0으로 할당할 수 있다. 가용 프레임 매니저는 프레임 영역의 가용 비트맵에서 프리 프레임 그룹이 존재하는 일정 크기 단위, 예를 들어 2MB 단위의 프레임 영역을 검색할 수 있다. 즉, 프레임 영역 가용 비트맵은 SRAM 비트맵 구조로 2MB 단위의 프레임 영역마다 프리 프레임 그룹이 하나라도 존재하는지 여부를 나타낸다. 또한, 가용 프레임 매니저는 프레임 영역에 프리 프레임 그룹이 존재하지 않으면 역 페이지 그룹 테이블에 액세스하여 랜덤한 의사 프레임 그룹 넘버에 대응하는 제2 프레임 그룹 넘버를 선택하고, 제2 프레임 그룹 넘버 를 목적지 후보 큐에 채울 수 있으며, 목적지 후보 큐의 플래그를 1로 할당할 수 있다. 가용 프레임 매니저는 프리 프레임 그룹이 존재하지 않으면 의사 랜덤 넘버 생성기로부터 랜덤한 의 사 프레임 그룹 넘버를 제공받을 수 있다. 의사 랜덤 넘버 생성기는 프레임 영역 내에 프리한 프리 프레임 그룹이 존재하지 않을 경우에 랜덤한 의사 프레임 그룹 넘버를 생성하여 가용 프레임 매니저로 제공할 수 있다. 도 3은 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 방법을 예시적으로 설명하는 흐름도이다. 도 3에 도시한 바와 같이, GPU의 스트리밍 멀티프로세서가 페이지에 액세스했을 때 TLB(translation lookaside buffer) 미스(miss)가 발생하면(S100, S102), 스트리밍 멀티프로세서는 페이지 테이블 워커(1 2)로 페이지 주소 변환 이벤트를 발생할 수 있다(S104). 페이지 주소 변환 이벤트에서 페이지 테이블 워커는 GPU 메모리를 통해 페이지 테이블 엔트리를 검색 할 수 있다(S106). 즉, 페이지 테이블 워커는 요청된 페이지의 주소에 대응하는 페이지 테이블 엔트리를 GPU 메모리의 페이지 테이블 내에서 검색할 수 있다. 이후, 페이지 테이블 워커는 검색된 페이지 테이블 엔트리를 기초로 페이지의 물리적 주소를 검색할 수 있 다(S108). 검색된 물리적 주소가 시스템 메모리에 할당된 주소이면, 페이지 테이블 워커는 GPU 메모리의 마이그 레이션 목적지의 프레임 그룹 넘버를 목적지 할당부에 요청할 수 있다(S110). 단계(S110)의 판단은, 예를 들어 GPU 메모리에 페이지 데이터가 존재하지 않을 경우, 즉 페이지 테이블 엔트리의 플래그 정보가 1인 경우가 해당될 수 있다. 목적지 할당부는 GPU 메모리 내의 역 페이지 그룹 테이블을 기초로 프레임 그룹 넘버를 생성할 수 있다(S200). 프레임 그룹 넘버 생성 과정은 도 4에서 보다 자세히 다루기로 한다. 프레임 그룹 넘버가 생성되면, 목적지 할당부는 프레임 그룹 넘버와 페이지의 물리적 주소에 기초하여 페 이지 마이그레이션부로 페이지 마이그레이션을 요청할 수 있으며, 페이지 마이그레이션부는 페이지 그 룹 단위로 시스템 메모리의 페이지 마이그레이션을 실행시킬 수 있다(S112). 페이지 마이그레이션부는, 예를 들어 PCI-e(peripheral component interconnect-express)를 통해서 페이지들을 전 송할 수 있다. 이후, GPU는 페이지 마이그레이션이 종료되는지를 판단하고(S114), 페이지 마이그레이션이 종료되면 GPU는 페이지 테이블 엔트리를 새로운 물리적 주소로 갱신할 수 있다. 이때, 갱신된 페이지 테이블 엔트리 는 스트리밍 멀티프로세서로 반환될 수 있다(S116). 한편, 페이지 마이그레이션을 실행하는 단계에서, 시스템 메모리에 대한 축출(eviction)이 요구되는 경우 에는, 요청된 페이지를 희생(victim) 페이지와 스왑하는 단계를 포함할 수 있다. 도 4는 도 3의 프레임 그룹 넘버를 생성하는 단계(S200)의 세부 흐름도로서, 본 발명의 실시예에 따른 GPU(10 0)의 가상 메모리 관리 장치의 목적지 할당부의 프로세싱 과정을 예시적으로 설명하는 흐름도이다. 목적지 할당부의 내부 구성요소들은 마이그레이션에 필요한 목적지 페이지 그룹 넘버를 미리 준비해서 추 가적인 딜레이 없이 마이그레이션이 바로 시작될 수 있도록 한다. 목적지 후보 큐에 저장된 PFgN들이 32개 미만이 되면 가용 프레임 매니저가 동작하여 목적지로 사용될 PFgN들을 목적지 후보 큐)에 저장한다.먼저, 가용 프레임 매니저는 프레임 영역 가용 비트맵를 탐색하여서 프리 프레임 그룹이 존재하는지 확인한다. 만약, 프리 프레임 그룹이 없으면 의사 랜덤 넘버 생성기에 접근하여 랜덤 프레임 그룹 넘버를 생성하고, 이를 목적지 후보 큐에 저장한다. 이 프레임 그룹은 이미 페이지 그룹이 할당되어 있기 때문에 S 플래그를 1로 세팅해서 마이그레이션 시작 시 스왑이 이루어지도록 한다. 프레임 영역 가용 비트맵을 탐색하여 프리 프레임 그룹이 있는 2MB 프레임 영역을 발견하면 2MB 프레임 영 역 중 'free and not protected' 프레임 그룹 넘버들을 모두 목적지 후보 큐에 저장한다. 'protected' 되 지 않은 프레임 그룹이 없는 경우에는 상술한 과정들을 반복 수행한다. 이를 구체적으로 살펴보면, 도 4에 도시한 바와 같이, 목적지 할당부가 GPU 메모리 내의 역 페이지 그룹 테이블을 기초로 프레임 그룹 넘버를 생성하게 되면, 목적지 후보 큐 채움 프로세스를 진행할 수 있 다(S202). 목적지 후보 큐 채움 프로세스는 목적지 후보 큐의 가용 공간이 기 설정된 비율 이상이면 진행될 수 있으 며, 이러한 채움 프로세스를 기초로 마이그레이션에 필요한 프레임 그룹 넘버를 역 페이지 그룹 테이블 내 에서 선택하여 목적지 후보 큐에 저장할 수 있다. 구체적으로, 목적지 후보 큐에 저장하는 단계는, 프레임 영역에 프리 프레임 그룹이 존재하는지를 판단하는 단 계(S204), 프리 프레임 그룹이 존재하면 GPU 메모리의 역 페이지 그룹 테이블에 액세스하여 프리 프 레임 그룹의 프레임 그룹 넘버에 대응하는 제1 프레임 그룹 넘버를 선택하는 단계(S206), 제1 프레임 그룹 넘버 를 목적지 후보 큐에 채우는 단계(S208) 및 목적지 후보 큐의 S 플래그를 0으로 할당하는 단계(S210)를 포 함할 수 있다. 또한, 프레임 영역에 프리 프레임 그룹이 존재하는지를 판단하는 단계(S204), 프리 프레임 그룹이 존재하지 않 으면 의사 랜덤 넘버 생성기로부터 랜덤한 의사 프레임 그룹 넘버를 제공받는 단계(S212), GPU 메모리 의 역 페이지 그룹 테이블에 액세스하여 랜덤한 의사 프레임 그룹 넘버에 대응하는 제2 프레임 그룹 넘버를 선택하는 단계(S214), 제2 프레임 그룹 넘버를 목적지 후보 큐에 채우는 단계(S216) 및 목적지 후 보 큐의 S 플래그를 1로 할당하는 단계(S218)를 포함할 수 있다. 다른 한편, 도 5 내지 도 7은 종래의 가상 메모리 관리 방법과 본 발명의 실시예에 따른 가상 메모리 관리 방법 을 시뮬레이션 한 비교 그래프이다. 본 발명의 성능 검증을 위한 실험은 대표적인 GPU 시뮬레이터인 GPGPU- sim을 통합 메모리를 지원하도록 확장한 UVMSmart 시뮬레이터를 사용하여 실험하였다. 실험에는 NVIDIA의 기본 UM을 베이스라인(baseline)으로 하였고 종래 기술들이 추가된 UVMSmart를 비교 군으로 사용하였다. 대표적으로 종래 기술들은 아래 3가지 기술들이 포함된다. 1) 이기종 컴퓨팅 환경에서의 통합 메모리 관리 기술 2) CPU-GPU 간 통합 가상 메모리 관리 기술 3) 적응적인 페이지 마이그레이션 기술 먼저, 도 5는 메모리를 초과 사용하지 않는 경우의 성능을 비교한 그래프이다. 본 발명이 베이스라인과 종래 기술(UVMSmart)에 비해 평균 64.1%의 성능 향상을 보인다. 이는 페이지 폴트(page fault)를 발생시키지 않고 페이지 마이그레이션을 하기 때문에 페이지 폴트에 의한 큰 오버헤드가 없기 때문이 다. 도 6 및 도 7은 메모리를 초과 사용한 경우의 성능을 비교한 그래프로서, 도 6은 메모리 초과 사용 비율이 125% 인 경우이고, 도 7은 메모리 초과 사용 비율이 150%인 경이다. 도 6 및 도 7에 나타난 바와 같이, 메모리를 초과 사용하는 경우에 본 발명의 성능 향상이 더욱 극대화되는 것 을 확인할 수 있다. 도 6과 같이 메모리 초과 사용 비율이 125%인 경우, 베이스라인에 비해 2.75배, 종래 기술(UVMSmart)에 비해 2.21배 성능 향상이 나타난다. 또한, 도 7과 같이 메모리 초과 사용 비율이 150%인 경우, 베이스라인에 비해 3.31배, 종래 기술(UVMSmart)에 비해 2.41배 성능 향상을 이루었다. 종래 기술들은 메모리 초과 사용이 되면 축 출(eviction)에 의한 페이지 폴트가 많이 발생하게 되어 성능이 많이 악화되지만, 본 발명은 하드웨어만을 사용하기에 마이그레이션이 많이 발생하더라도 성능이 크게 악화되지 않는다. 즉, 본 발명을 사용하면 종래기술들에 비해 메모리 초과 사용으로 인한 비용이 크지 않다. 따라서, 통합 메모리 의 장점인 메모리 초과 사용을 더 큰 비율까지 가능하고 작은 GPU 메모리로도 더 큰 어플리케이션들을 실행할 수 있다. 이상 설명한 바와 같은 본 발명의 실시예에 의하면, 로컬 메모리에 대한 액세스를 감지하고, 소프트웨어의 개입 없이 페이지를 마이그레이션할 수 있으며, 페이지 폴트와 소프트웨어 처리를 하드웨어에 오프로딩함으로써 페이 지 마이그레이션에 소요되는 시간을 줄이고 성능을 향상시키도록 구현하였다. 본 발명은 메모리 초과 사용 시에 도 전체 실행 시간이 급격하게 증가하지 않기 때문에, 한정된 크기의 메모리 내에서 보다 많은 데이터들을 사용 하여 인공지능 학습 등 다양한 분야에서 효과적인 활용이 가능할 것으로 기대된다. 한편, 첨부된 블록도의 각 블록과 흐름도의 각 단계의 조합들은 컴퓨터 프로그램 인스트럭션들에 의해 수행될 수도 있다. 이들 컴퓨터 프로그램 인스트럭션들은 범용 컴퓨터, 특수용 컴퓨터 또는 기타 프로그램 가능한 데이 터 프로세싱 장비의 프로세서에 탑재될 수 있으므로, 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 의 프로세서를 통해 수행되는 그 인스트럭션들이 블록도의 각 블록에서 설명된 기능들을 수행하는 수단을 생성 하게 된다. 이들 컴퓨터 프로그램 인스트럭션들은 특정 방식으로 기능을 구현하기 위해 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 지향할 수 있는 컴퓨터 이용 가능 또는 컴퓨터 판독 가능 기록매체(또는 메모리) 등에 저장되는 것도 가능하므로, 그 컴퓨터 이용 가능 또는 컴퓨터 판독 가능 기록매체(또는 메모리)에 저장된 인스 트럭션들은 블록도의 각 블록에서 설명된 기능을 수행하는 인스트럭션 수단을 내포하는 제조 품목을 생산하는 것도 가능하다. 그리고, 컴퓨터 프로그램 인스트럭션들은 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에 탑재되 는 것도 가능하므로, 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에서 일련의 동작 단계들이 수 행되어 컴퓨터로 실행되는 프로세스를 생성해서 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 수 행하는 인스트럭션들은 블록도의 각 블록에서 설명된 기능들을 실행하기 위한 단계들을 제공하는 것도 가능하다. 또한, 각 블록은 특정된 논리적 기능(들)을 실행하기 위한 적어도 하나 이상의 실행 가능한 인스트럭션들을 포 함하는 모듈, 세그먼트 또는 코드의 일부를 나타낼 수 있다. 또, 몇 가지 대체 실시 예들에서는 블록들에서 언 급된 기능들이 순서를 벗어나서 발생하는 것도 가능함을 주목해야 한다. 예컨대, 잇달아 도시되어 있는 두 개의 블록들은 사실 실질적으로 동시에 수행되는 것도 가능하고 또는 그 블록들이 때때로 해당하는 기능에 따라 역순 으로 수행되는 것도 가능하다."}
{"patent_id": "10-2022-0168002", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 장치에 대한 블록도이다. 도 2는 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 장치에서 목적지 할당부에 대한 세부 블록도이다.도 3은 본 발명의 실시예에 따른 GPU의 가상 메모리 관리 방법을 예시적으로 설명하는 흐름도이다. 도 4는 도 3의 프레임 넘버를 생성하는 단계(S200)의 세부 흐름도로서, 본 발명의 실시예에 따른 GPU의 가상 메 모리 관리 장치의 목적지 할당부의 프로세싱 과정을 예시적으로 설명하는 흐름도이다. 도 5 내지 도 7은 종래의 가상 메모리 관리 방법과 본 발명의 실시예에 따른 가상 메모리 관리 방법을 시뮬레이 션 한 비교 그래프이다."}
