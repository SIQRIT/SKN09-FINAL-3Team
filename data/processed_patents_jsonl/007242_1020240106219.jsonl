{"patent_id": "10-2024-0106219", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0032943", "출원번호": "10-2024-0106219", "발명의 명칭": "차량의 ECU 소프트웨어를 업데이트하기 위한 방법 및 장치", "출원인": "현대자동차주식회사", "발명자": "정창훈"}}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "차량에 포함된 하나 이상의 ECU에 탑재된 하나 이상의 소프트웨어의 업데이트를 관리하는 게이트웨이에 의해 수행되는 방법으로서,업데이트 서버로부터 암호화된 업데이트 모듈을 수신하는 과정;상기 업데이트 모듈을 복호화하여, 하나 이상의 업데이트 파일을 획득하는 과정;상기 하나 이상의 ECU 각각에 상기 하나 이상의 업데이트 파일을 전달하고 소프트웨어 업데이트를 요청하는 과정; 및상기 요청에 대한 응답으로, 상기 하나 이상의 ECU로부터 업데이트 결과 리포트를 수신하는 과정을 포함하는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 업데이트 모듈은, 비대칭키 암호화 방식을 이용하여 공유되는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서,상기 업데이트 모듈을 수신하는 과정은,상기 게이트웨이의 공개키를 이용하여 암호화된 업데이트 모듈을 수신하는 과정인, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 업데이트 서버로부터 제1 메시지 인증코드를 수신하는 과정;상기 업데이트 모듈에 기초하여 제2 메시지 인증코드를 생성하는 과정; 및상기 제1 메시지 인증코드와 상기 제2 메시지 인증코드를 비교한 결과에 기초하여 상기 소프트웨어 업데이트를요청할 지 여부를 결정하는 과정을 더 포함하는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 제1 메시지 인증코드는, 상기 업데이트 모듈에 결합되어 전달되는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2025-0032943-3-제1항에 있어서,상기 게이트웨이는 TLS에 기초한 보안채널을 활용하여 상기 업데이트 서버와 통신적으로 연결되는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "차량 내 시스템에 탑재된 적어도 하나의 소프트웨어를 관리하는 ECU에 의해 수행되는 방법으로서,게이트웨이로부터 업데이트 요청 및 업데이트 파일을 수신하는 과정;상기 업데이트 파일을 이용하여 소프트웨어 업데이트를 수행하는 과정; 및상기 게이트웨이에 업데이트 성공 여부 메시지가 포함된 업데이트 결과 보고서를 전달하는 과정을 포함하는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,기존 소프트웨어를 임시로 저장하는 과정; 및상기 소프트웨어 업데이트를 실패한 경우, 임시로 저장된 상기 기존 소프트웨어를 복원하는 과정을 더 포함하는, 방법."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "차량에 포함된 하나 이상의 ECU에 탑재된 하나 이상의 소프트웨어의 업데이트를 관리하는 게이트웨이로서,명령어들을 저장하는 적어도 하나의 메모리; 및적어도 하나의 프로세서를 포함하되,상기 적어도 하나의 프로세서는 상기 명령어들을 실행함으로써,업데이트 서버로부터 암호화된 업데이트 모듈을 수신하고,상기 업데이트 모듈을 복호화하여, 하나 이상의 업데이트 파일을 획득하고,상기 하나 이상의 ECU 각각에 상기 하나 이상의 업데이트 파일을 전달하며 소프트웨어 업데이트를 요청하고,상기 요청에 대한 응답으로, 상기 하나 이상의 ECU로부터 업데이트 결과 리포트를 수신하는, 게이트웨이."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,비대칭키 암호화 방식을 이용하여 상기 업데이트 모듈을 상기 업데이트 서버와 공유하는, 게이트웨이."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항 또는 제10항에 있어서,상기 업데이트 모듈은 상기 게이트웨이의 공개키를 이용하여 암호화된 업데이트 모듈인, 게이트웨이.공개특허 10-2025-0032943-4-청구항 12 제9항에 있어서,상기 소프트웨어 업데이트를 요청할 지 여부를 결정하기 위하여,상기 업데이트 서버로부터 제1 메시지 인증코드를 수신하고,상기 업데이트 모듈에 기초하여 제2 메시지 인증코드를 생성하고,상기 제1 메시지 인증코드와 상기 제2 메시지 인증코드를 비교하는, 게이트웨이."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 제1 메시지 인증코드는, 상기 업데이트 모듈에 결합되어 전송되는, 게이트웨이."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 게이트웨에는 TLS에 기초한 보안채널을 활용하여 상기 업데이트 서버와 통신적으로 연결되는, 게이트웨이."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "차량 내 시스템에 탑재된 적어도 하나의 소프트웨어를 관리하는 ECU로서,명령어들을 저장하는 적어도 하나의 메모리; 및적어도 하나의 프로세서를 포함하되,상기 적어도 하나의 프로세서는 상기 명령어들을 실행함으로써,게이트웨이로부터 업데이트 요청 및 업데이트 파일을 수신하고,상기 업데이트 파일을 이용하여 소프트웨어 업데이트를 수행하고,상기 게이트웨이에 업데이트 성공 여부 메시지가 포함된 업데이트 결과 보고서를 전달하는, ECU."}
{"patent_id": "10-2024-0106219", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 소프트웨어 업데이트를 수행하기 전에 기존 소프트웨어를 임시로 저장하고,상기 소프트웨어 업데이트를 실패한 경우, 상기 기존 소프트웨어를 복원하는, ECU."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "차량의 ECU 소프트웨어를 업데이트하기 위한 방법 및 장치를 개시한다. 본 개시의 일 측면에 의하면, 차량에 포함된 하나 이상의 ECU에 탑재된 하나 이상의 소프트웨어의 업데이트를 관 리하는 게이트웨이에 의해 수행되는 방법으로서, 업데이트 서버로부터 암호화된 업데이트 모듈을 수신하는 과정; 상기 업데이트 모듈을 복호화하여, 하나 이상의 업데이트 파일을 획득하는 과정; 상기 하나 이상의 ECU 각각에 상기 하나 이상의 업데이트 파일을 전달하고 소프트웨어 업데이트를 요청하는 과정; 및 상기 요청에 대한 응답으 로, 상기 하나 이상의 ECU로부터 업데이트 결과 리포트를 수신하는 과정을 포함하는, 방법을 제공한다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 차량의 ECU 소프트웨어를 업데이트하기 위한 방법 및 장치에 관한 것이다. 더욱 상세하게는, 본 개시 는, 차량이 서버로부터 업데이트 모듈 또는 업데이트 파일을 전달받는 과정에서, 암호화 및 인증코드의 생성주 체와 생성시점 및 암호키의 종류를 명확히 지정함으로써, 차량 내 ECU 소프트웨어를 업데이트 상황에서 발생 가 능한 보안문제를 예방하기 위한 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이하에 기술되는 내용은 단순히 본 실시예와 관련되는 배경 정보만을 제공할 뿐 종래기술을 구성하는 것이 아니 다. 주행안전, 운전자보조, 자율주행 등 다양한 자율주행 기능을 수행하기 위해, 제어기(ECU; Electronic Control Unit)에 의해 구동되는 전자장치 또는 전장부품 등이 차량에 다수 탑재되고 있다. 제어기는 차량에 탑재된 소프트웨어에 기초하여 차량 내 전장부품들을 구동시킨다. 차량의 시스템은 전장부품들 을 보다 효율적으로 구동시키기 위해 차량에 탑재된 소프트웨어를 업데이트한다. OTA(Over The Air)는 원격으로 차량 내부 소프트웨어를 업데이트하는 기능이다. OTA는 무선 네트워크와 클라우 드에 연계되므로 다양한 보안이슈가 발생할 수 있다. 외부 공격에 의해 차량 내부 소프트웨어가 오작동하면 차 량 및 탑승자에게 치명적인 결과가 초래될 수 있다. 따라서, 원격으로 차량 내부 소프트웨어를 업데이트하는 상 황에서 외부의 공격으로부터 차량 운영 소프트웨어 등을 안전하게 보호하기 위한 방법이 필요하다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는, 네트워크에 연결되는 차량을 외부 공격으로부터 보호하기 위한 방법 및 장치를 제공하는 데 주된 목 적이 있다. 본 개시는, 네트워크로부터 차량으로 전달되는 소프트웨어의 기밀성(confidentiality) 및 무결성(integrity)을 보장하기 위한 방법 및 장치를 제공하는 데 주된 목적이 있다. 본 개시는, 차량부품 공급업체(automotive component supplier), 차량 모바일 게이트웨이(vehicle mobile gateway) 및 ECU(Electronic Control Unit) 순으로 이어지는 업데이트 과정에서 발생가능한 보안문제(security issue)를 예방하기 위한 방법 및 장치를 제공하는 데 주된 목적이 있다. 본 발명이 해결하고자 하는 과제들은 이상에서 언급한 과제들로 제한되지 않으며, 언급되지 않은 또 다른 과제 들은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 측면에 의하면, 차량에 포함된 하나 이상의 ECU에 탑재된 하나 이상의 소프트웨어의 업데이트를 관리하는 게이트웨이에 의해 수행되는 방법으로서, 업데이트 서버로부터 암호화된 업데이트 모듈을 수신하는 과 정; 상기 업데이트 모듈을 복호화하여, 하나 이상의 업데이트 파일을 획득하는 과정; 상기 하나 이상의 ECU 각 각에 상기 하나 이상의 업데이트 파일을 전달하고 소프트웨어 업데이트를 요청하는 과정; 및 상기 요청에 대한 응답으로, 상기 하나 이상의 ECU로부터 업데이트 결과 리포트를 수신하는 과정을 포함하는, 방법을 제공한다. 본 개시의 다른 측면에 의하면, 차량 내 시스템에 탑재된 적어도 하나의 소프트웨어를 관리하는 ECU에 의해 수 행되는 방법으로서, 게이트웨이로부터 업데이트 요청 및 업데이트 파일을 수신하는 과정; 상기 업데이트 파일을 이용하여 소프트웨어 업데이트를 수행하는 과정; 및 상기 게이트웨이에 업데이트 성공 여부 메시지가 포함된 업 데이트 결과 보고서를 전달하는 과정을 포함하는, 방법을 제공한다. 본 개시의 다른 측면에 의하면, 차량에 포함된 하나 이상의 ECU에 탑재된 하나 이상의 소프트웨어의 업데이트를 관리하는 게이트웨이로서, 명령어들을 저장하는 적어도 하나의 메모리; 및 적어도 하나의 프로세서를 포함하되, 상기 적어도 하나의 프로세서는 상기 명령어들을 실행함으로써, 업데이트 서버로부터 암호화된 업데이트 모듈을 수신하고, 상기 업데이트 모듈을 복호화하여, 하나 이상의 업데이트 파일을 획득하고, 상기 하나 이상의 ECU 각 각에 상기 하나 이상의 업데이트 파일을 전달하며 소프트웨어 업데이트를 요청하고, 상기 요청에 대한 응답으로, 상기 하나 이상의 ECU로부터 업데이트 결과 리포트를 수신하는, 게이트웨이를 제공한다. 본 개시의 다른 측면에 의하면, 차량 내 시스템에 탑재된 적어도 하나의 소프트웨어를 관리하는 ECU로서, 명령 어들을 저장하는 적어도 하나의 메모리; 및 적어도 하나의 프로세서를 포함하되, 상기 적어도 하나의 프로세서 는 상기 명령어들을 실행함으로써, 게이트웨이로부터 업데이트 요청 및 업데이트 파일을 수신하고, 상기 업데이트 파일을 이용하여 소프트웨어 업데이트를 수행하고, 상기 게이트웨이에 업데이트 성공 여부 메시지가 포함된 업데이트 결과 보고서를 전달하는, ECU를 제공한다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 일 실시예에 의하면, 외부의 공격으로부터 차량을 방어하여 보안을 유지할 수 있는 효과가 있다. 본 개시의 일 실시예에 의하면, 외부의 공격으로부터 차량으로 전달되는 소프트웨어를 방어하여 보안을 유지할 수 있는 효과가 있다. 본 개시의 일 실시예에 의하면, 차량으로 전달되는 소프트웨어의 기밀성 및 무결성을 보장할 수 있는 효과가 있 다. 본 개시의 일 실시예에 의하면, 차량의 공개키(public key)를 이용하여 암호화된 소프트웨어가 차량으로 전달되 고, 차량의 개인키(private key)를 이용하여 암호화된 소프트웨어를 복호화함으로써, 암호화된 소프트웨어의 전 달 외에 추가적인 데이터 교환 또는 절차 없이 소프트웨어를 업데이트할 수 있는 효과가 있다. 본 개시의 효과들은 이상에서 언급한 효과들로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재 로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 개시의 일부 실시예들을 예시적인 도면을 이용해 상세하게 설명한다. 각 도면의 구성 요소들에 참조 부호를 부가함에 있어서, 동일한 구성 요소들에 대해서는 비록 다른 도면 상에 표시되더라도 가능한 한 동일한 부호를 가지도록 하고 있음에 유의해야 한다. 또한, 본 개시를 설명함에 있어, 관련된 공지 구성 또는 기능에 대한 구체적인 설명이 본 개시의 요지를 흐릴 수 있다고 판단되는 경우에는 그 상세한 설명은 생략한다. 본 개시에 따른 실시예의 구성요소를 설명하는 데 있어서, 제1, 제2, i), ii), a), b) 등의 부호를 사용할 수 있다. 이러한 부호는 그 구성요소를 다른 구성 요소와 구별하기 위한 것일 뿐, 그 부호에 의해 해당 구성요소의 본질 또는 차례나 순서 등이 한정되지 않는다. 명세서에서 어떤 부분이 어떤 구성요소를 '포함' 또는 '구비'한 다고 할 때, 이는 명시적으로 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 첨부된 도면과 함께 이하에 개시될 상세한 설명은 본 개시의 예시적인 실시형태를 설명하고자 하는 것이며, 본 개시가 실시될 수 있는 유일한 실시형태를 나타내고자 하는 것이 아니다. 도 1은 네트워크를 활용한 차량과 서버 간 연결을 개념적으로 도시한 도면이다. 차량은 LTE, 5G, Wi-Fi 등의 이동 네트워크 또는 무선 네트워크를 활용하여 서버에 연결될 수 있다. 서버는 차량 과 관련된 기능 또는 서비스를 제공할 수 있다.도 2는 외부 네트워크에 연결되는 차량을 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 차량 은 게이트웨이(110, GW) 및 서브시스템(subsystem)들을 포함할 수 있다. 게이트웨이 즉, 차량 모바일 게이트웨이(VMG; Vehicle Mobile Gateway)는 외부 네트워크 및 내부 네트워크 에 연결된다. 서브시스템(subsystem)들은 차량의 내부 네트워크에 연결된다. 서브시스템(subsystem)은 파 워트레인(powertrain) 서브시스템, 바디(body) 서브시스템, 새시(chassis) 서브시스템, 인포테인먼트 (infotainment) 서브시스템 등을 포함할 수 있다. 서브시스템은 비슷한 기능을 하는 부품들을 같은 종류의 내부 버스로 연결한 것으로서, 하나 이상의 전장부품 (electric component)을 포함한다. 각각의 전장부품은 각각의 ECU(150, Electronic Control Unit)에 의해 제어 및 구동될 수 있다. 파워트레인 서브시스템은, 차량의 구동력을 발생시키는 부품들의 집합으로, 엔진, 모터, 변속기, 배터리, 발전 기 등의 부품을 포함할 수 있다. 바디 서브시스템은, 탑승자의 편의와 안전을 높이기 위한 부품들의 집합으로, 시트, 난방/환기/에어컨(HVAC; Heating, Ventilating and Air Conditioning), 조명, 도어, 창문, 실내외 조명 등의 부품을 포함할 수 있다. 새시 서브시스템은, 바디를 제외한 자동차 주행에 필요한 나머지 부품들의 집합으 로, 조향, 브레이크, 현가, 타이어 압력 측정 등과 관련된 부품을 포함할 수 있다. 인포테인먼트 서브시스템은 주행안내 또는 멀티미디어와 관련된 부품들의 집합으로, 내비게이션, 멀티미디어 시스템, 헤드업 디스플레이 등 의 부품을 포함할 수 있다. 게이트웨이와 서브시스템들을 구성하는 전장부품들을 연결하는 내부 네트워크는 LIN(Local Interconnect Network), CAN(Control Area Network), CAN-FD, FlexRay, MOST(Media Oriented Systems Transport), Ethernet 등의 통신 프로토콜을 이용할 수 있다. 다른 통신 프로토콜을 사용하는 다른 서브시스템의 전장부품들은 게이트 웨이를 활용하여 서로 데이터를 주고 받을 수 있다. 도 3은 게이트웨이를 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 게이트웨이는 중앙제 어부(111, CCU), 저장부(113, storage), 외부통신부(115, COM1) 및 내부통신부(117, COM2)를 포함할 수 있다. 중앙제어부(111, CCU; Central Control Unit)는 차량의 전반적인 동작을 제어할 수 있다. 저장부(113, storage)는 외부 네트워크와 내부 네트워크로부터 수신되는 데이터나 차량의 동작과 관련된 데이터나 정보를 저 장할 수 있다. 외부통신부(115, COM1)는 외부 네트워크를 활용하여 서버와 게이트웨이를 연결할 수 있다. 내부통신부(117, COM2)는 내부 네트워크를 활용하여 서브시스템의 전장부품들(ECU)과 게이트웨이를 연결할 수 있다. 중앙제어부, 내부통신부 및 별도의 저장부가 게이트웨이와 분리되어 별도의 장치로 구성될 수도 있다. 도 4는 중앙제어부가 수행하는 기능을 나타내는 도면이다. 중앙제어부는, 탑승자의 요청, 주행 상황에 의한 필요 등에 따라 적어도 하나의 서브시스템에 포함된 적어 도 하나의 전장부품의 ECU를 제어하여 차량의 여러 동작을 제어할 수 있다. 중앙제어부가 수행하는 기능, 특히 외부 네트워크 및/또는 내부 네트워크를 활용하여 전달되는 데이터에 기초하여 수행하는 기능에는, 주행/주차 관리, 원격 진단/제어, 구독서비스 관리, 소프트웨어 갱신, 보안 관리 등이 포함될 수 있다. 원격 진단/제어는, 차량 운행 시 수집한 상태정보를 서버로 전송하여 차량을 실시간으로 진단하도록 하고, 서버로부터 수신되는 진단결과에 기초하여 차량의 제어조건을 변경하거나 긴급상황 시 원격제어를 지원하 는 기능이다. 구독서비스(FOD; Feature On Demand) 관리는, 새로운 기능을 서버나 고객의 단말을 통해 다운 받아 활성화 시키거나 이미 탑재되어 있지만 비활성화된 기능을 활성화하여 사용하도록 하는 등 일종의 구독서비스를 관리하 는 기능이다. 중앙제어부는 구독서비스의 설정이나 해제 동작을 수행한다. 중앙제어부는 고객이 요청한 서비스가 고객이 구독을 선택하여 활성화시킨 서비스인지 여부 또는 구독서비스의 활성화가 부정한 방법에 의한 것인지 여부를 확인하고, 확인결과에 기초하여 해당 서비스를 수행하거나 수행하지 않을 수 있다. 소프트웨어 갱신(S/W update)은, OTA가 적용되는 차량에서 소프트웨어 갱신 조건이 만족될 때 중앙제어부 가 자동으로 수행하는 서비스이다. 소프트웨어 갱신은 차량 전반의 동작을 관리하는 소프트웨어(중앙제어부 의 동작시스템)의 갱신뿐만 아니라 각 전장부품의 ECU에 설치된 펌웨어(firmware)의 갱신을 포함할 수 있다. 보안관리(security management)는, 차량의 보안이나 차량에 접속하는 외부 장치의 인증과 관련된 기능 또는 서 비스를 포함할 수 있다. 차량과 관련된 보안위협(security threat)에는 펌웨어 변조(firmware tampering), 차량 원격제어 해킹, CAN의 위변조, 차량 불법 조작, 서비스 거부 등이 포함될 수 있다. 또한, 외부 네트워크 통신과 관련된 보안위협에는 통신 도청(communication interception), 메시지 위변조(message tampering) 등이 포함될 수 있다. 보안관리는, 예를 들어 외부 네트워크를 통한 차량 내부 네트워크로의 침입을 탐지하여 대응하는 기능(IDS; Intrusion Detection System), 보안이벤트와 관련된 데이터(보안사고 직전 데이터)의 기록 서비스(EDR; Event Data Recorder) 등을 수행할 수 있다. 도 5는 서버를 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 서버는 관리부(210, manager), 데이터베이스(220, database), 저장부(230, storage) 및 통신부(240, COM)를 포함할 수 있다. 관리부(210, manager)는 차량의 요청에 따른 동작, 예를 들어 소프트웨어 업데이트, FOD와 관련된 데이터 전송, 차량 보안/인증 등의 동작을 관리할 수 있다. 데이터베이스(220, database)는 각 차량과 관련된 정보, 예를 들 어 각 차량에 설치된 소프트웨어 버전, 활성화된 구독서비스, 인증 관련 정보 등을 관리할 수 있다. 저장부 (230, storage)는 다양한 버전의 소프트웨어, 복수 차량의 주행과 관련된 데이터 등을 저장할 수 있다. 통신부 (240, COM)는 외부 네트워크를 활용하여 차량과 연결하여 데이터를 주고 받을 수 있다. 서버는 차량의 중앙제어부가 수행하는 기능이나 서비스에 따라 구분되어 서로 다른 복수 개로 구성될 수도 있다. 데이터베이스는 서버와 분리되어 설치될 수도 있다. 도 6a 및 도 6b는 본 개시에 따라 ECU 소프트웨어의 원격 업데이트가 이루어지는 과정을 설명하기 위한 도면이 다. 서버와 게이트웨이 간 통신은 TLS(Transport Layer Security)에 기초한 보안채널을 활용할 수 있다. 서버는 소프트웨어 업데이트가 필요한 차량 및 ECU를 확인하기 위하여 관련 소프트웨어가 탑재된 ECU 및 차량을 식별할 수 있다(S605). 서버는 ECU 제조 당시 부여된 시리얼 넘버(S/N; Serial Number)를 이용하 여 관련 소프트웨어가 탑재된 ECU를 식별할 수 있다. 서버는 차량식별번호(VIN; Vehicle Identification Number)를 이용하여 관련 소프트웨어가 탑재된 차량을 식별할 수 있다. 서버는 관련 소프트웨어가 탑재된 차량의 게이트웨이에게 차량의 소프트웨어 정보를 요청 할 수 있다(S610). 소프트웨어 정보는 각각의 ECU에 설치된 소프트웨어의 버전(version)에 관한 정보를 포함할 수 있다. 게이트웨이는 각각의 ECU에 설치된 소프트웨어 목록 및 각각의 소프트웨어의 업데이트 이력, 특히 소프트 웨어의 버전이 포함된 데이터를 서버에 전달할 수 있다(S615). 서버는 게이트웨이로부터 수신한 데이터에 기초하여 차량에 설치된 각각의 소프트웨어의 업데이 트 이력(update history)을 확인하고, 업데이트가 필요한 구버전 소프트웨어를 결정할 수 있다(S620). 업데이트 가 필요한 소프트웨어가 없는 경우(S620-NO), 서버는 업데이트 과정을 종료한다. 업데이트가 필요한 소프트웨어가 있는 경우(S620-NO), 서버는 대칭키 및 업데이트 모듈을 이용하여 메시지 인증코드(MAC; Message Authentication Code)을 생성할 수 있다(S625). 대칭키는 서버와 게이트웨이(11 0)가 이미 공유하고 있는 키이다. 업데이트 모듈은 업데이트 파일을 포함한다. 서버는 업데이트 모듈에 MAC을 추가(append)할 수 있다. 서버는 게이트웨이의 공개키를 이용하여 MAC이 추가된 업데이트 모듈의 바이너리(binary) 파일을 암 호화할 수 있다(S630). 서버는 게이트웨이에게 암호화된 업데이트 모듈을 전달할 수 있다(S635). 게이트웨이는, 게이트웨이의 개인키를 이용하여, 암호화된 업데이트 모듈을 복호화할 수 있다(S640). 게이트웨이는, 하드웨어 보안모듈(HSM; Hardware Security Module) 및 게이트웨이의 개인키를 이용 하여, 암호화된 업데이트 모듈을 복호화할 수 있다.업데이트 모듈 복호화에 실패한 경우(S645-NO), 게이트웨이는 서버에게 업데이트 실패 메시지가 포함 된 업데이트 결과 보고서를 전달할 수 있다(S680). 업데이트 모듈 복호화에 성공한 경우(S645-YES), 게이트웨이 는 복호화된 데이터로부터 서버가 업데이트 모듈에 추가한 MAC인, MACA를 획득할 수 있다(S650). 게이트웨이는 복호화된 데이터로부터 원본 업데이트 모듈을 획득하고, 원본 업데이트 모듈 및 대칭키를 이 용하여 MACB를 생성할 수 있다(S655). 대칭키는 서버와 게이트웨이가 이미 공유하고 있는 키로서, 서 버가 MAC을 생성할 때 사용한 키이다. 게이트웨이는 MACA와 MACB를 비교할 수 있다(S660). MACA와 MACB가 다른 경우(S660-NO), 게이트웨이는 업데이트 서버에게 업데이트 실패 메시지가 포함된 업데이트 결과 보고서를 전달할 수 있다(S680). MACA와 MACB가 같은 경우(S660-YES), 게이트웨이는, 업데이트가 필요한 ECU 각각에게 업데이트 적용 요청 및 업데이트 파일을 전달한 후, ECU로부터 업데이트 적용 결과 보고서를 수신할 수 있다(S665). 업데이트 적용을 실패한 경우(S670-NO), 게이트웨이는 업데이트 서버에게 업데이트 실패 메시지가 포 함된 업데이트 결과 보고서를 전달할 수 있다(S680). 업데이트 적용을 성공한 경우(S670-YES), 게이트웨이(11 0)는 업데이트 서버에게 업데이트 성공 메시지가 포함된 업데이트 결과 보고서를 전달할 수 있다(S675). 서버는 게이트웨이로부터 업데이트 결과 보고서를 수신하고, 업데이트 과정을 종료할 수 있다(S685). 도 7은 게이트웨이가 각각의 ECU에게 업데이트 적용 요청 및 업데이트 파일을 전달하고, ECU로 부터 업데이트 적용 결과 보고서를 수신하는 과정(S665)을 상세히 설명하기 위한 도면이다. 게이트웨이는 소프트웨어 업데이트를 수행해야 하는 ECU를 식별할 수 있다(S710). 게이트웨이는 업데이트가 필요한 ECU 각각에게 소프트웨어 업데이트 요청과 함께 복호화된 업데이트 파일을 전달할 수 있다(S720). 소프트웨어 업데이트 요청을 수신한 ECU는 롤백(rollback) 용도로 기존에 설치된 소프트웨어를 내부 저장 소 또는 외부 저장소에 저장할 수 있다(S730). ECU는 롤백(rollback) 용도로 기존의 소프트웨어 이미지를 내부 저장소 또는 외부 저장소에 임시로 저장할 수 있다. 소프트웨어 이미지(software image)란, 애플리케이션 의 실행에 필요한 파일들로 구성된 하나의 객체이다. ECU는 업데이트 파일을 이용하여 소프트웨어 업데이트를 수행할 수 있다(S740). ECU는 업데이트 성공 여부를 판단할 수 있다(S750). 업데이트가 실패한 경우(S750-NO), ECU는 저장소에 저장된 소프트웨어 이미 지를 이용하여 기존 소프트웨어를 복원할 수 있다(S760). ECU는 게이트웨이에게 업데이트 실패 메시 지가 포함된 업데이트 결과 보고서를 전달할 수 있다(S790). 업데이트가 성공한 경우(S750-YES), ECU는 게 이트웨이에게 업데이트 성공 메시지가 포함된 업데이트 결과 보고서를 전달할 수 있다(S780). 도 8은 본 개시에 따른 방법 또는 장치를 구현하기 위해 사용될 수 있는 예시적인 컴퓨팅 장치를 개략적으로 나 타낸 블록구성도이다. 컴퓨팅 장치는 메모리, 프로세서, 스토리지, 입출력 인터페이스 및 통신 인터페이스 중 일부 또는 전부를 포함할 수 있다. 컴퓨팅 장치는 본 개시에 따른 장치의 적어도 일부를 구조적 및/또는 기능적으로 포함할 수 있다. 컴퓨팅 장치는 데스크탑 컴퓨터, 서버 등과 같은 고정형(stationary) 컴퓨팅 장치뿐만 아니라, 랩탑 컴퓨터, 스마트 폰, 차량용 전장 등과 같은 휴대용(mobile) 컴퓨팅 장치일 수도 있다. 컴퓨팅 장치는 인공지능 모델에 대한 연산들을 효율적인 방식으로 처리하는 것이 가능한 임의의 특 수화된 하드웨어 가속기(accelerator)로 구현될 수도 있다. 예컨대, 컴퓨팅 장치는 그래픽 처리 장치 (graphic processing unit, GPU), 텐서 처리 장치(Tensor Processing Unit, TPU) 또는 신경망 처리 장치 (neural processing unit, NPU)를 포함할 수 있다. 메모리는 프로세서로 하여금 본 개시의 다양한 실시예에 따른 방법 또는 동작을 수행하도록 하는 프 로그램을 저장할 수 있다. 예를 들면, 프로그램은 프로세서에 의해서 실행 가능한(executable) 복수의 명 령어들을 포함할 수 있고, 복수의 명령어들이 프로세서에 의해서 실행됨으로써 전술한 방법 또는 동작들이 수행될 수 있다. 메모리는 단일 메모리 또는 복수의 메모리들일 수 있다. 이 경우, 본 개시의 다양한 실시 예에 따른 방법 또는 동작을 수행하기 위해 필요한 정보는 단일 메모리에 저장되거나 복수의 메모리들에 나뉘어 저장될 수 있다. 메모리가 복수의 메모리들로 구성된 경우, 복수의 메모리들은 물리적으로 분리될 수 있다. 메모리는 휘발성 메모리 및 비휘발성 메모리 중 적어도 하나를 포함할 수 있다. 휘발성 메모리는SRAM(Static Random Access Memory) 또는 DRAM(Dynamic Random Access Memory) 등을 포함하고, 비휘발성 메모 리는 플래시 메모리(flash memory) 등을 포함한다. 프로세서는 적어도 하나의 명령어들을 실행할 수 있는 적어도 하나의 코어를 포함할 수 있다. 프로세서 는 메모리에 저장된 명령어들을 실행할 수 있다. 프로세서는 단일 프로세서 또는 복수의 프로세 서들일 수 있다. 스토리지는 컴퓨팅 장치에 공급되는 전력이 차단되더라도 저장된 데이터를 유지한다. 예를 들면, 스 토리지는 비휘발성 메모리를 포함할 수도 있고, 자기 테이프, 광학 디스크, 자기 디스크와 같은 저장 매체 를 포함할 수도 있다. 스토리지에 저장된 프로그램은 프로세서에 의해서 실행되기 이전에 메모리 로 로딩될 수 있다. 스토리지는 프로그램 언어로 작성된 파일을 저장할 수 있고, 파일로부터 컴파일 러 등에 의해서 생성된 프로그램은 메모리로 로딩될 수 있다. 스토리지는 프로세서에 의해서 처 리될 데이터 및/또는 프로세서에 의해서 처리된 데이터를 저장할 수 있다. 입출력 인터페이스는 키보드, 마우스 등과 같은 입력 장치 및/또는 디스플레이 장치, 프린터 등과 같은 출 력 장치와의 인터페이스를 제공할 수 있다. 사용자는 입력 장치를 통해 프로세서에 의한 프로그램의 실행 을 트리거하고/거나 출력 장치를 통해 프로세서의 처리 결과를 확인할 수 있다. 통신 인터페이스는 외부 네트워크에 대한 액세스를 제공할 수 있다. 컴퓨팅 장치는 통신 인터페이스 를 통해 다른 장치들과 통신할 수 있다. 본 개시의 예시적인 실시예들에 기술된 적어도 일부의 구성요소들은 DSP(Digital Signal Processor), 프로세서, 컨트롤러, ASIC(Application-Specific IC), 프로그래머블 로직소자(FPGA 등), 기타 전자소자 중의 적어도 하나 또는 이들의 조합이 포함되는 하드웨어 요소로써 구현될 수 있다. 또한, 예시적인 실시예들에서 기술된 적어도 일부의 기능(function)들 또는 처리과정(process)들은 소프트웨어로 구현될 수 있으며, 소프트웨어는 기록매체 에 저장될 수 있다. 본 개시의 예시적인 실시예들에 기술된 적어도 일부의 구성요소들, 기능들, 그리고 처리과 정들은 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 본 개시의 예시적인 실시예들에 따른 방법은 컴퓨터에서 실행될 수 있는 프로그램으로 작성될 수 있고, 마그네 틱 저장매체, 광학적 판독매체, 디지털 저장매체 등 다양한 기록 매체로도 구현될 수 있다. 본 명세서에 설명된 각종 기술들의 구현들은 디지털 전자 회로조직으로, 또는 컴퓨터 하드웨어, 펌웨어, 소프트 웨어로, 또는 그들의 조합들로 구현될 수 있다. 구현들은 데이터 처리 장치, 예를 들어 프로그램가능 프로세서, 컴퓨터, 또는 다수의 컴퓨터들의 동작에 의한 처리를 위해, 또는 이 동작을 제어하기 위해, 컴퓨터 프로그램 제 품, 즉 정보 캐리어, 예를 들어 기계 판독가능 저장 장치(컴퓨터 판독가능 매체) 또는 전파 신호에서 유형적으 로 구체화된 컴퓨터 프로그램으로서 구현될 수 있다. 상술한 컴퓨터 프로그램(들)과 같은 컴퓨터 프로그램은 컴 파일된 또는 인터프리트된 언어들을 포함하는 임의의 형태의 프로그래밍 언어로 기록될 수 있고, 독립형 프로그 램으로서 또는 모듈, 구성요소, 서브루틴, 또는 컴퓨팅 환경에서의 사용에 적절한 다른 유닛으로서 포함하는 임 의의 형태로 전개될 수 있다. 컴퓨터 프로그램은 하나의 사이트에서 하나의 컴퓨터 또는 다수의 컴퓨터들 상에 서 처리되도록 또는 다수의 사이트들에 걸쳐 분배되고 통신 네트워크에 의해 상호 연결되도록 전개될 수 있다. 컴퓨터 프로그램의 처리에 적절한 프로세서들은 예로서, 범용 및 특수 목적 마이크로프로세서들 둘 다, 및 임의 의 종류의 디지털 컴퓨터의 임의의 하나 이상의 프로세서들을 포함한다. 일반적으로, 프로세서는 판독 전용 메 모리 또는 랜덤 액세스 메모리 또는 둘 다로부터 명령어들 및 데이터를 수신할 것이다. 컴퓨터의 요소들은 명령 어들을 실행하는 적어도 하나의 프로세서 및 명령어들 및 데이터를 저장하는 하나 이상의 메모리 장치들을 포함 할 수 있다. 일반적으로, 컴퓨터는 데이터를 저장하는 하나 이상의 대량 저장 장치들, 예를 들어 자기, 자기-광 디스크들, 또는 광 디스크들을 포함할 수 있거나, 이것들로부터 데이터를 수신하거나 이것들에 데이터를 송신하 거나 또는 양쪽으로 되도록 결합될 수도 있다. 컴퓨터 프로그램 명령어들 및 데이터를 구체화하는데 적절한 정 보 캐리어들은 예로서 반도체 메모리 장치들, 예를 들어, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(Magnetic Media), CD-ROM(Compact Disk Read Only Memory), DVD(Digital Video Disk)와 같은 광 기 록 매체(Optical Media), 플롭티컬 디스크(Floptical Disk)와 같은 자기-광 매체(Magneto-Optical Media), 롬 (ROM, Read Only Memory), 램(RAM, Random Access Memory), 플래시 메모리, EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM) 등을 포함한다. 프로세서 및 메모리는 특수 목적 논리 회로조직에 의해 보충되거나, 이에 포함될 수 있다. 프로세서는 운영 체제(Operating System) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리케이션을 수행 할 수 있다. 또한, 프로세서 디바이스는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 프로세서 디바이스는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 프로세서 디바이스가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 프로세서 디바이스는 복수 개의 프 로세서 또는 하나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processo r)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 또한, 비-일시적 컴퓨터 판독가능 매체(non-transitory computer-readable media)는 컴퓨터에 의해 액세스될 수 있는 임의의 가용매체일 수 있고, 컴퓨터 저장매체 및 전송매체를 모두 포함할 수 있다. 본 명세서는 다수의 특정한 구현물의 세부사항들을 포함하지만, 이들은 어떠한 발명이나 청구 가능한 것의 범위 에 대해서도 제한적인 것으로서 이해되어서는 안되며, 오히려 특정한 발명의 특정한 실시형태에 특유할 수 있는 특징들에 대한 설명으로서 이해되어야 한다. 개별적인 실시형태의 문맥에서 본 명세서에 기술된 특정한 특징들 은 단일 실시형태에서 조합하여 구현될 수도 있다. 반대로, 단일 실시형태의 문맥에서 기술한 다양한 특징들 역 시 개별적으로 혹은 어떠한 적절한 하위 조합으로도 복수의 실시형태에서 구현 가능하다. 나아가, 특징들이 특 정한 조합으로 동작하고 초기에 그와 같이 청구된 바와 같이 묘사될 수 있지만, 청구된 조합으로부터의 하나 이 상의 특징들은 일부 경우에 그 조합으로부터 배제될 수 있으며, 그 청구된 조합은 하위 조합이나 하위 조합의 변형물로 변경될 수 있다. 마찬가지로, 특정한 순서로 도면에서 동작들을 묘사하고 있지만, 이는 바람직한 결과를 얻기 위하여 도시된 그 특정한 순서나 순차적인 순서대로 그러한 동작들을 수행하여야 한다거나 모든 도시된 동작들이 수행되어야 하는 것으로 이해되어서는 안 된다. 특정한 경우, 멀티태스킹과 병렬 프로세싱이 유리할 수 있다. 또한, 상술한 실시 형태의 다양한 장치 컴포넌트의 분리는 그러한 분리를 모든 실시형태에서 요구하는 것으로 이해되어서는 안되며, 설명한 프로그램 컴포넌트와 장치들은 일반적으로 단일의 소프트웨어 제품으로 함께 통합되거나 다중 소프트웨어 제품에 패키징 될 수 있다는 점을 이해하여야 한다. 한편, 본 명세서와 도면에 개시된 본 발명의 실시 예들은 이해를 돕기 위해 특정 예를 제시한 것에 지나지 않으 며, 본 발명의 범위를 한정하고자 하는 것은 아니다. 여기에 개시된 실시 예들 이외에도 본 발명의 기술적 사상"}
{"patent_id": "10-2024-0106219", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "에 바탕을 둔 다른 변형 예들이 실시 가능하다는 것은, 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자 에게 자명한 것이다. 본 실시예의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기술 사상은 본 실시예의 권리범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2024-0106219", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 네트워크를 활용한 차량과 서버 간 연결을 개념적으로 도시한 도면이다. 도 2는 외부 네트워크에 연결되는 차량을 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 도 3은 게이트웨이를 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 도 4는 중앙제어부가 수행하는 기능을 나타내는 도면이다. 도 5는 서버를 구성하는 기능블록을 개략적으로 나타낸 블록구성도이다. 도 6a 및 도 6b는 본 개시에 따라 ECU 소프트웨어의 원격 업데이트가 이루어지는 과정을 설명하기 위한 도면이 다. 도 7은 게이트웨이가 각각의 ECU에게 업데이트 적용 요청 및 업데이트 파일을 전달하고, ECU로부터 업데이트 적 용 결과 보고서를 수신하는 과정을 상세히 설명하기 위한 도면이다. 도 8은 본 개시에 따른 방법 또는 장치를 구현하기 위해 사용될 수 있는 예시적인 컴퓨팅 장치를 개략적으로 나 타낸 블록구성도이다."}
