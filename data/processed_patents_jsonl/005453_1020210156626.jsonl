{"patent_id": "10-2021-0156626", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0070741", "출원번호": "10-2021-0156626", "발명의 명칭": "하드웨어 가속을 위한 하이브리드 압축 기법을 이용하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "양세현"}}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,상기 전자 장치에서 실행되는 어플리케이션의 연산들을 수행하는 복수의 코어들을 포함하는 하나 이상의 프로세서들을 포함하고,상기 어플리케이션의 동작 단계들(operation phases) 중 코어들 간 통신이 발생하는 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법이 미리 결정되고,상기 하나 이상의 프로세서들은상기 어플리케이션을 실행할 때 상기 통신이 발생하는 하나 이상의 단계들 각각에 미리 결정된 압축 기법을 적용하는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법은 상기 어플리케이션의 실행 전 상기 어플리케이션에 대한 분석 과정에서 해당 단계의 지배적 데이터 패턴(dominant datapattern)에 기초하여 미리 결정되는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 다른 코어는 상기 데이터를 압축해서 전송하는 기준 코어와 동일한 프로세서 내에 위치하거나, 상기 기준코어와 다른 프로세서 내에 위치하거나, 또는 상기 기준 코어와 다른 전자 장치에 포함된 프로세서 내에 위치하는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 어플리케이션은 분자동역학(MD; molecular dynamics) 시뮬레이션, 인공지능(artificial intelligence)의학습 및/또는 추론, 슈퍼컴퓨터 기반 처리, 멀티-노드 작업 중 하나 이상을 포함하는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2023-0070741-3-제1항에 있어서,상기 어플리케이션이 분자동역학 시뮬레이션인 경우,다른 코어로 이동되는 원자의 좌표 데이터의 압축 기법은 블록 부동 소수점(block floating point) 기반 압축으로 미리 결정되고,다른 코어로 이동되는 원자의 힘 데이터(force data)의 압축 기법은 제로-값-인식(zero-value-aware) 기반 압축으로 미리 결정되는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 하나 이상의 프로세서들은중앙 처리 장치(CPU; central processing unit), 그래픽 처리 장치(GPU; graphics processing unit), 신경망처리 장치(NPU: neural processing unit) 중 하나 또는 둘 이상의 조합을 포함하는,전자 장치."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "전자 장치의 동작 방법에 있어서,상기 전자 장치에서 실행하고자 하는 어플리케이션의 동작 단계들 중 코어들 간 통신이 발생하는 하나 이상의단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터에 대해 미리 결정된 압축 기법을 확인하는동작; 및상기 어플리케이션을 실행할 때 상기 통신이 발생하는 하나 이상의 단계들 각각에 미리 결정된 압축 기법을 적용하는 동작을 포함하고,상기 전자 장치는 상기 어플리케이션의 연산들을 수행하는 복수의 코어들을 포함하는 하나 이상의 프로세서들을포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법은 상기 어플리케이션의 실행 전 상기 어플리케이션에 대한 분석 과정에서 해당 단계의 지배적 데이터 패턴에 기초하여 미리결정되는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서,상기 다른 코어는 상기 데이터를 압축해서 전송하는 기준 코어와 동일한 프로세서 내에 위치하거나, 상기 기준코어와 다른 프로세서 내에 위치하거나, 또는 상기 기준 코어와 다른 전자 장치에 포함된 프로세서 내에 위치하공개특허 10-2023-0070741-4-는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제7항에 있어서,상기 어플리케이션은 분자동역학 시뮬레이션, 인공지능의 학습 및/또는 추론, 슈퍼컴퓨터 기반 처리 중 하나 이상을 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제7항에 있어서,상기 어플리케이션이 분자동역학 시뮬레이션인 경우,다른 코어로 이동되는 원자의 좌표 데이터의 압축 기법은 블록 부동 소수점 기반 압축으로 미리 결정되고,다른 코어로 이동되는 원자의 힘 데이터의 압축 기법은 제로-값-인식 기반 압축으로 미리 결정되는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제7항에 있어서,상기 하나 이상의 프로세서들은중앙 처리 장치, 그래픽 처리 장치, 신경망 처리 장치 중 하나 또는 둘 이상의 조합을 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2021-0156626", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제7항 내지 제12항 중에서 어느 한 항의 방법을 실행하는 컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 기록매체."}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "하드웨어 가속을 위한 하이브리드 압축 기법을 이용하는 전자 장치 및 그 동작 방법이 개시된다. 전자 장치는 상기 전자 장치에서 실행되는 어플리케이션의 연산들을 수행하는 복수의 코어들을 포함하는 하나 이상의 프로세 서들을 포함한다. 상기 어플리케이션의 동작 단계들(operation phases) 중 코어들 간 통신이 발생하는 하나 이 상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법이 미리 결정된다. 하나 이 상의 프로세서들은 상기 어플리케이션을 실행할 때 상기 통신이 발생하는 하나 이상의 단계들 각각에 미리 결정 된 압축 기법을 적용한다."}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 개시는 하드웨어 가속을 위한 하이브리드 압축 기법을 이용하는 전자 장치 및 그 동작 방법에 관한 것이다."}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대규모 연산이 수반되는 어플리케이션을 빠르게 실행하기 위해, 많은 프로세서들에 기반한 병렬 연산이 수행될 수 있다. 프로세서들 개수가 많아질수록 통신으로 이동되는 전체 데이터량이 크게 증가할 수 있다. 대규모 병"}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "렬 연산 작업에서 크게 증가하는 데이터 통신량이 큰 부담으로 작용할 수 있다.발명의 내용"}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 상기 전자 장치에서 실행되는 어플리케이션의 연산들을 수행하는 복수의 코어들 을 포함하는 하나 이상의 프로세서들을 포함하고, 상기 어플리케이션의 동작 단계들(operation phases) 중 코어 들 간 통신이 발생하는 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법이 미리 결정되고, 상기 하나 이상의 프로세서들은 상기 어플리케이션을 실행할 때 상기 통신이 발생하는 하나 이상의 단계들 각각에 미리 결정된 압축 기법을 적용한다. 상기 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법은 상기 어플 리케이션의 실행 전 상기 어플리케이션에 대한 분석 과정에서 해당 단계의 지배적 데이터 패턴(dominant data pattern)에 기초하여 미리 결정될 수 있다. 상기 다른 코어는 상기 데이터를 압축해서 전송하는 기준 코어와 동일한 프로세서 내에 위치하거나, 상기 기준 코어와 다른 프로세서 내에 위치하거나, 또는 상기 기준 코어와 다른 전자 장치에 포함된 프로세서 내에 위치할 수 있다. 상기 어플리케이션은 분자동역학(MD; molecular dynamics) 시뮬레이션, 인공지능(artificial intelligence)의 학습 및/또는 추론, 슈퍼컴퓨터 기반 처리, 멀티-노드 작업 중 하나 이상을 포함할 수 있다. 상기 어플리케이션이 분자동역학 시뮬레이션인 경우, 다른 코어로 이동되는 원자의 좌표 데이터의 압축 기법은 블록 부동 소수점(block floating point) 기반 압축으로 미리 결정되고, 다른 코어로 이동되는 원자의 힘 데이 터(force data)의 압축 기법은 제로-값-인식(zero-value-aware) 기반 압축으로 미리 결정될 수 있다. 상기 하나 이상의 프로세서들은 중앙 처리 장치(CPU; central processing unit), 그래픽 처리 장치(GPU; graphics processing unit), 신경망 처리 장치(NPU: neural processing unit) 중 하나 또는 둘 이상의 조합을 포함할 수 있다. 일 실시예에 따른 전자 장치의 동작 방법은 상기 전자 장치에서 실행하고자 하는 어플리케이션의 동작 단계들 중 코어들 간 통신이 발생하는 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터 에 대해 미리 결정된 압축 기법을 확인하는 동작; 및 상기 어플리케이션을 실행할 때 상기 통신이 발생하는 하 나 이상의 단계들 각각에 미리 결정된 압축 기법을 적용하는 동작을 포함하고, 상기 전자 장치는 상기 어플리케 이션의 연산들을 수행하는 복수의 코어들을 포함하는 하나 이상의 프로세서들을 포함한다. 상기 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법은 상기 어플 리케이션의 실행 전 상기 어플리케이션에 대한 분석 과정에서 해당 단계의 지배적 데이터 패턴에 기초하여 미리 결정될 수 있다. 상기 다른 코어는 상기 데이터를 압축해서 전송하는 기준 코어와 동일한 프로세서 내에 위치하거나, 상기 기준 코어와 다른 프로세서 내에 위치하거나, 또는 상기 기준 코어와 다른 전자 장치에 포함된 프로세서 내에 위치할 수 있다. 상기 어플리케이션은 분자동역학 시뮬레이션, 인공지능의 학습 및/또는 추론, 슈퍼컴퓨터 기반 처리 중 하나 이 상을 포함할 수 있다. 상기 어플리케이션이 분자동역학 시뮬레이션인 경우, 다른 코어로 이동되는 원자의 좌표 데이터의 압축 기법은 블록 부동 소수점 기반 압축으로 미리 결정되고, 다른 코어로 이동되는 원자의 힘 데이터의 압축 기법은 제로- 값-인식 기반 압축으로 미리 결정될 수 있다. 상기 하나 이상의 프로세서들은 중앙 처리 장치, 그래픽 처리 장치, 신경망 처리 장치 중 하나 또는 둘 이상의 조합을 포함할 수 있다."}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "실시예들에 대한 특정한 구조적 또는 기능적 설명들은 단지 예시를 위한 목적으로 개시된 것으로서, 다양한 형 태로 변경되어 구현될 수 있다. 따라서, 실제 구현되는 형태는 개시된 특정 실시예로만 한정되는 것이 아니며, 본 명세서의 범위는 실시예들로 설명한 기술적 사상에 포함되는 변경, 균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어를 다양한 구성요소들을 설명하는데 사용될 수 있지만, 이런 용어들은 하나의 구성요소 를 다른 구성요소로부터 구별하는 목적으로만 해석되어야 한다. 예를 들어, 제1 구성요소는 제2 구성요소로 명 명될 수 있고, 유사하게 제2 구성요소는 제1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 설명된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 으로 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들 을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 해당 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되 는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 일 실시예에 따라 어플리케이션을 실행하는 전자 장치를 설명하기 위한 도면이다. 도 1을 참조하면, 전자 장치는 하나 이상의 프로세서들을 포함하고, 각 프로세서는 하나 이상의 코어들을 포함할 수 있다. 전자 장치는 대규모 병렬 연산 작업을 수행하는 장치의 예시로 도시되며, 실시예에 따라 서는 대규모 병렬 연산 작업이 전자 장치와 전자 장치에 의해 수행될 수도 있다. 도 1에서는 설명의 편의를 위해 대규모 병렬 연산 작업을 수행하는 전자 장치의 개수, 전자 장치에 포함되는 프로세서의 개수 및 프로세서에 포함되는 코어의 개수가 예시적으로 도시된 것으로, 도 1에 도시된 예로 한정되지 않는다. 대규모 병렬 연산 작업에서 많은 시간이 소요되는 부분은 주로 연산 단계(computation phase)와 통신 단계 (communication phase)일 수 있다. 대규모 병렬 연산 작업을 빠르게 수행하기 위해 많은 코어들, 프로세서들, 전자 장치들이 이용될수록 연산 단계의 소요 시간은 줄어드는 반면, 통신 단계에서 이동하는 데이터량이 증가할 수 있다. 대규모 병렬 연산 작업을 수행하는 과정에서 코어들 간 통신에 의해 이동하는 데이터를 압축함으로써, 이동하는 데이터량을 줄이고 통신 소요 시간을 감소시킬 수 있다. 압축 기법은 이동하는 데이터 의 패턴에 기반하여 결정될 수 있으나, 작업을 수행하는 런타임에서 실시간으로 데이터 패턴을 분석하고 압축 기법을 결정하는 것은 상당히 비효율적일 수 있다. 런타임 이전 분석 과정에서, 코어들 간 이동하는 데이터의 패턴에 기초하여 각 데이터 패턴에 적절한 압축 기법이 미리 결정되고, 런타임에서는 미리 결정된 압축 기법을 대응하는 데이터에 정적으로 적용시킴으로써, 작업 시간을 단축시키고 전체적인 성능을 효율적으로 향상시킬 수 있다. 여기서, 미리 결정된 압축 기법을 대응하는 데이터에 정적으로 적용된다는 것은 데이터에 대해 미리 결정된 압축 기법에 대한 변경 없이 런타임에서 해당 압축 기법이 그대로 적용되는 것을 나타낼 수 있다. 데이터가 다른 코어로 이동하는 경우는 다음과 같이 3가지로 나누어질 수 있다. 먼저, 동일 프로세서에 포함된 코어들 간(예: 코어에서 코어로) 데이터 이동이 발생할 수 있다. 다음으로는, 동일 전자 장 치 내에서 상이한 프로세서들(120, 130)에 포함된 코어들 간(예: 코어에서 코어로) 데이터 이동이 발 생할 수 있다. 마지막으로는, 다른 전자 장치들(110, 140)에 포함된 코어들 간(예: 코어에서 코어로) 데이터 이동이 발생할 수 있다. 코어는 전자 장치의 프로세서에 속할 수 있다. 본 명세서에서 설명하는 코어들 간 데이터 이동이나 이동되는 데이터의 압축에 대한 사항들은 앞서 설명한 3가 지 경우에 모두 제한 없이 적용될 수 있다. 프로세서는 다양한 데이터 처리 및/또는 연산을 수행하는 장치로서, 예를 들어, 중앙 처리 장치(CPU; central processing unit), 그래픽 처리 장치(GPU; graphics processing unit), 신경망 처리 장치(NPU: neural processing unit)를 포함할 수 있다. 전자 장치는 휴대폰, 스마트 폰, 태블릿, 전자북 장치, 랩탑, 퍼스널 컴퓨터, 또는 서버와 같은 다양한 컴퓨팅 장치, 스마트 시계, 스마트 안경, HMD(Head-Mounted Display), 또는 스마트 의류와 같은 다양한 웨어러블 기기, 스마트 스피커, 스마트 TV, 또는 스마트 냉장고와 같은 다양한 가전장치, 스마트 자동차, 스마트 키오스크, IoT(Internet of Things) 기기, WAD(Walking Assist Device), 드론, 또는 로봇을 포함할 수 있다. 대규모 병렬 연산 작업은 분자동역학(MD; molecular dynamics) 시뮬레이션, 인공지능(artificial intelligence)의 학습 및/또는 추론, 슈퍼컴퓨터 기반 처리, 멀티-노드 작업 중 하나 이상을 포함하는 어플리케 이션일 수 있다. 아래에서는, 대규모 병렬 연산 작업을 수행하는 과정에서 코어들 간 통신에 의해 다른 코어로 이동하는 데이터 량을 감소시키는 하이브리드 데이터 압축 기법에 대해 상세히 설명한다. 도 2는 일 실시예에 따라 분석 과정과 런타임 과정을 설명하기 위한 도면이다. 도 2를 참조하면, 어플리케이션 실행 전 어플리케이션의 동작 단계들에 대한 분석 과정과 어플리케이션이 실제 실행되는 런타임 과정이 도시된다. 분석 과정의 동작에서, 전자 장치는 어플리케이션의 동작 단계들 중 코어들 간 통신이 발생하는 하나 이상의 단계들마다 해당 단계에서 이동하는 데이터의 패턴을 분석할 수 있다. 전자 장치는 각 단계의 지배적 데이터 패턴을 분석할 수 있다. 예를 들어, 코어들 간 이동하는 데이터들에 공통되는 값이 포함되는지 여부 또 는 데이터들에 '0'이 많이 포함되는지 여부가 분석될 수 있다. 동작에서, 전자 장치는 단계마다 데이터 패턴에 기반하여 최적의 압축 기법을 결정할 수 있다. 예를 들어, 다수의 데이터들에 공통되는 값이 포함되는 단계에 대해서는, 전자 장치는 공통되는 값을 하나로 묶어 블 록 형태로 표현하는 블록 부동 소수점 기반 압축 기법을 결정할 수 있다. 또한, 데이터들에 '0'이 많이 포함되 는 단계에서는, 전자 장치는 '0' 값을 압축하는 제로-값-인식 기반 압축 기법을 결정할 수 있다. 다만, 압축 기법을 앞선 예시들로 한정하는 것은 아니고, 각 단계에서 지배적 데이터 패턴에 적절한 다양한 압축 기법이 결 정될 수 있다. 동작에서, 전자 장치는 데이터 패턴 분석 및 압축 기법 결정이 수행되지 않은 단계가 남았는지 여부를 판 단하고, 만약 남았다면 해당 단계에 대해 앞선 동작들(211, 213)을 수행할 수 있다. 반대로, 모든 단계에 대한 데이터 패턴 분석 및 압축 기법 결정이 결정되었다면, 분석 과정이 종료될 수 있다. 런타임 과정의 동작에서, 전자 장치는 어플리케이션의 동작 단계들 중 코어들 간 통신이 발생하는 하 나 이상의 단계들 각각에 미리 결정된 압축 기법을 적용할 수 있다. 예를 들어, 전자 장치는 다수의 데이터들 에 공통되는 값이 포함되는 단계에 블록 부동 소수점 기반 압축 기법을 적용하고, 데이터들에 '0'이 많이 포함 되는 단계에 제로-값-인식 기반 압축 기법을 적용할 수 있다. 동작에서, 전자 장치는 어플리케이션의 동작 단계들이 모두 수행되었는지 여부를 판단하고, 만약 수행되지 않은 단계가 있다면 해당 단계에 대해 앞선 동작을 수행할 수 있다. 반대로, 어플리케이션의 모든 동작이 모두 수행되었다면, 동작이 이어서 수행될 수 있다. 동작에서, 전자 장치는 실시예에 따라 어플리케이션을 1번 이상 수행할 수 있다. 만약 어플리케이션의 추 가 실행이 필요하다면, 앞선 동작들(221, 223)이 수행될 수 있다. 어플리케이션의 실행이 모두 완료되었다면, 런타임 과정이 종료될 수 있다. 이처럼, 런타임 과정에서는 온-더-플라이(On-the-fly) 형식으로 압축 기법을 정하지 않고, 분석 과정(21 0)에서 미리 결정된 압축 기법이 변경 없이 각 단계에 정적으로 연산 시작 전에 미리 할당됨으로써, 통신 데이 터량을 효과적으로 감소시키면서도 복잡한 온-더-플라이 압축 기법의 탐색이 불필요할 수 있다. 도 3 내지 도 6은 일 실시예에 따라 분자동역학 시뮬레이션을 실행할 때의 압축 기법들을 설명하기 위한 도면이 다. 이하, 어플리케이션의 일례에 해당하는 분자동역학 시뮬레이션의 경우에 런타임 이전에 압축 기법들이 미리 결 정되고, 런타임에서는 미리 결정된 압축 기법이 정적으로 적용되는 과정을 예시적으로 설명한다. 분자동역학 시뮬레이션은 물리계의 원자들 사이의 퍼텐셜 또는 힘이 주어졌을 때 이를 이용해서 뉴턴의 운동 방 정식을 수치적으로 풀어냄으로써 원자들의 동역학을 계산하는 시뮬레이션으로, 일반적으로 1) 포워드/리버스 통 신(forward/reverse communication), 2) 연산(computation), 3) 조정(modify)의 3 단계를 포함할 수 있다. 분 자동역학 시뮬레이션의 동작들 중 하드웨어 코어를 이용한 연산은 연산 단계가 대부분을 차지하며, 코어들(또는, 프로세서들, 전자 장치들) 간 데이터 통신은 포워드/리버스 통신 단계에서 주로 발생할 수 있다. 포워드/리버스 통신 단계에서는 분자의 좌표 데이터 및 힘 데이터가 코어들 간에 이동할 수 있다. 도 3을 참조하면, 분자동역학 시뮬레이션을 복수의 도메인들로 나누어 수행하는 예시가 도시된다. 분자동역학 시뮬레이션은 공간-분해 알고리즘(spatial-decomposition algorithm)에 기반하여 원자들을 복수의 도메인들로 나누어서 수행될 수 있다. 예를 들어, 분자동역학 시뮬레이션은 연산량이 상당하여 단일 코어나 프로세서로 수 행하기 어려울 수 있으며, 복수의 코어들, 복수의 프로세서들 또는 심지어 복수의 전자 장치들에 기반하여 수행 될 수 있다. 도메인은 하나의 워크(work) 또는 잡(job)을 여러 코어들, 프로세서들 또는 전자 장치들에서 나누 어서 수행할 때 나누어지는 단위일 수 있다. 도 3에 예시적으로 도시된 4개의 도메인들 각각은 4개의 코어들, 프로세서들 또는 전자 장치들에 의해 처리될 수 있다. 도 3에 도시된 4개의 도메인들은 설명의 편의를 위한 일 례로서, 실시예가 이로 한정되지 않는다. 각 도메인에 포함된 원자들은 로컬 원자로 지칭되고, 각 도메인에서 다른 도메인에 인접한 영역은 인터페이스로 지칭될 수 있다. 도 3에 도시된 도메인 0을 기준으로 설명하면, 도메인 0에 포함된 원자들의 동역학이 계산될 수 있다. 분자동역학 시뮬레이션을 위해서는 원자들 사이의 상호작용이 계산되어야 하며, 이를 위해 인접한 도메 인의 인터페이스에 위치한 원자가 고려될 수 있으며, 이러한 원자를 고스트 원자라고 지칭할 수 있다. 도 3에 도시된 예시에서 고스트 원자들은 각각 도메인 1, 2에 속한 원자이나, 해당 원자들이 도메인 0에 속한 로 컬 원자들에 영향을 미칠 수 있으므로, 도메인 0에 대한 분자동역학 시뮬레이션에 고려되어야 할 수 있다. 원자들 간 페어 연산을 위해 고스트 원자에 대한 데이터가 이웃한 도메인들로부터 도메인 0에 대한 분자동 역학 시뮬레이션을 수행하는 코어, 프로세서 또는 전자 장치로 전달될 수 있다. 도메인이 많을수록, 원자들이 많을수록 이처럼 다른 도메인으로 전달되는 데이터량이 증가할 수 있으며, 통신 소요 시간이 증가할 수 있으나, 이후에서 설명하는 것처럼 코스트 원자들에 대한 데이터를 압축한 후 전송함으로써, 이동하는 데이터량을 효과 적으로 감소시키고, 통신 소요 시간도 효율적으로 억제시킬 수 있다. 예를 들어, 포워드 통신 단계(forward communication phase)에서 고스트 원자들의 좌표 데이터는 미리 정해진 압축 기법에 의해 압축된 후 전송됨으로써 통신 데이터량이 효과적으로 감소될 수 있다. 또한, 리버스 통신 단 계(reverse communication phase)에서 고스트 원자들의 힘 데이터도 미리 정해진 압축 기법에 의해 압축된 후 전송됨으로써, 통신 데이터량이 효과적으로 감소될 수 있다. 도 4를 참조하면, 분자동역학 시뮬레이션에서 원자의 좌표 데이터의 압축 기법이 결정되는 동작을 설명하기 위 한 예시가 도시된다. 도 4에 예시적으로 도시된 도메인 0의 인터페이스에 속한 원자들은 도메인 2의 고스트 원 자에 해당되기 때문에, 고스트 원자들에 대한 좌표 데이터가 도메인 2에 대해 분자동역학 시뮬레이션을 수행하 는 코어, 프로세서 또는 전자 장치로 전달될 수 있다. 서로 인접한 원자들의 좌표 값은 매우 유사할 수 있으며, 이때 부호 및 지수 값이 동일하다면 하나의 값으로 묶 어 블록 형태로 표현될 수 있다. 도 4의 예시에서, 좌표 값 293.9, 292.5, 288.3, 277.6의 부호는 0이고, 지 수는 10000000111인 블록 형태로 표현될 수 있다. 또는, 서로 인접한 원자들의 유사한 좌표 값이 동일한 지수 값을 가진다면, 지수 값을 하나로 묶어 블록 형태로도 표현될 수 있다. 또한, 원자들의 좌표 값이 더 낮은 비 트로 양자화된다면, 압축으로 인한 데이터량 감소와 통신 소요 시간 감소의 효과가 더 클 수 있다. 런타임 이전 분석 과정에서, 원자들의 좌표 데이터를 전송하는 단계에서는 서로 인접한 원자들이 부호와 지수 값 또는 지수 값이 동일한 특성에 기반하여 압축 기법이 블록 부동 소수점 기반 압축으로 미리 결정될 수 있다. 도 5를 참조하면, 분자동역학 시뮬레이션에서 원자의 힘 데이터의 압축 기법이 결정되는 예시가 도시된다. 도 4에는 이웃 도메인에 대해 분자동역학 시뮬레이션을 수행하는 코어, 프로세서 또는 전자 장치로 전달되는 고스 트 원자들의 힘 데이터가 예시적으로 도시된다. 일 실시예에 따르면, 많은 원자들의 경우 다른 원자들 간 상호작용하는 힘이 서로 상쇄되어 힘 값이 매우 작게 나타나며, 예를 들어, '0' 값을 가질 수 있다. 여러 원자들이 가지는 '0' 값을 압축하면 통신 데이터량이 크게 감소될 수 있다. 도 4의 예시에서, 1, 2, 3, 5번째 원자가 가지는 힘 값 '0'이 압축되어 데이터량이 감소될 수 있다. 런타임 이전 분석 과정에서, 원자들의 힘 데이터를 전송하는 단계에서는 '0'의 힘 값을 가지는 원자들이 많다는 특성에 기반하여 압축 기법이 제로-값-인식 기반 압축으로 미리 결정될 수 있다. 도 6을 참조하면, 분자동역학 시뮬레이션의 런타임에 적용되는 하이브리드 압축 기법의 예시가 도시된다. 도 6 에서는, 도메인 0에서 도메인 1로 전송되는 데이터에 하이브리드 압축 기법(hybrid compression scheme)이 적용되는 예시가 도시된다. 다른 도메인으로 데이터를 전송하기 전에 미리 결정된 압축 기법이 적용될 수 있다. 압축 기법은 런타임 중 온 -더-플라이 형식으로 결정되지 않고, 런타임 전 분석 과정에서 미리 결정될 수 있다. 예를 들어, 원자들의 좌 표 데이터가 전송되는 단계에서는 블록 부동 소수점 기반 압축이 적용되고, 원자들의 힘 데이터가 전송되 는 단계에서는 제로-값-인식 기반 압축이 적용되는 것으로, 미리 결정될 수 있다. 다른 도메인으로 전송 되는 데이터에 적용할 압축 기법이 정해지지 않았다면, 압축 없이 그대로 전송될 수 있다. 멀티플렉서 는 하이브리드 압축 기법이 적용된 데이터를 다른 도메인(예: 도메인 1)로 전송할 수 있다. 도 6에 도시된 하이브리드 압축 기법을 적용시키기 위한 하드웨어들은 프로세서 대비 매우 작은 면적을 가지는 간단한 하드웨어로 손쉽게 구현될 수 있다. 런타임 이전 분석 과정에서 단계마다 적용할 압축 기법이 미리 정 해지므로, 런타임 중 온-더-플라이 형식으로 압축 방법 탐색이 불필요하다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다. 이하 실시예에서 각 동작들은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 각 동작들의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수도 있다. 동작 내지 동작은 전자 장치의 적어도 하나의 구성요소에 의해 수행될 수 있다. 동작에서, 전자 장치는 전자 장치에서 실행하고자 하는 어플리케이션의 동작 단계들 중 코어들 간 통신이 발생하는 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터에 대해 미리 결정된 압축 기법을 확인한다. 하나 이상의 단계들마다 해당 단계의 통신을 통해 다른 코어로 이동하는 데이터의 압축 기법은 어플리케이션의 실행 전 어플리케이션에 대한 분석 과정에서 해당 단계의 지배적 데이터 패턴에 기초하 여 미리 결정될 수 있다. 다른 코어는 데이터를 압축해서 전송하는 기준 코어와 동일한 프로세서 내에 위치하 거나, 기준 코어와 다른 프로세서 내에 위치하거나, 또는 기준 코어와 다른 전자 장치에 포함된 프로세서 내에 위치할 수 있다. 어플리케이션은 분자동역학 시뮬레이션, 인공지능의 학습 및/또는 추론, 슈퍼컴퓨터 기반 처리 중 하나 이상을 포함할 수 있다. 어플리케이션이 분자동역학 시뮬레이션인 경우, 다른 코어로 이동되는 원자의 좌표 데이터의 압축 기법은 블록 부동 소수점(block floating point) 기반 압축으로 미리 결정되고, 다른 코어로 이동되 는 원자의 힘 데이터의 압축 기법은 제로-값-인식(zero-value-aware) 기반 압축으로 미리 결정될 수 있다.동작에서, 전자 장치는 어플리케이션을 실행할 때 통신이 발생하는 하나 이상의 단계들 각각에 미리 결정 된 압축 기법을 적용한다. 전자 장치는 어플리케이션을 실행할 때 다른 코어로 이동하는 데이터의 압축 기법에 대한 변경 없이 미리 결정된 압축 기법을 정적으로 적용할 수 있다. 전자 장치는 어플리케이션의 연산들을 수행하는 복수의 코어들을 포함하는 하나 이상의 프로세서들을 포함한다. 하나 이상의 프로세서들은 중앙 처리 장치, 그래픽 처리 장치, 신경망 처리 장치 중 하나 또는 둘 이상의 조합 을 포함할 수 있다. 도 7에 도시된 각 동작들에는 도 1 내지 도 6을 통하여 전술한 사항들이 그대로 적용되므로, 보다 상세한 설명 은 생략한다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처 리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하 나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단 독으로 또는 조합하여 저장할 수 있으며 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구 성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 위에서 설명한 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 또는 복수의 소프트웨어 모듈로서 작동하 도록 구성될 수 있으며, 그 역도 마찬가지이다."}
{"patent_id": "10-2021-0156626", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 이를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2021-0156626", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따라 어플리케이션을 실행하는 전자 장치를 설명하기 위한 도면이다. 도 2는 일 실시예에 따라 분석 과정과 런타임 과정을 설명하기 위한 도면이다. 도 3 내지 도 6은 일 실시예에 따라 분자동역학 시뮬레이션을 실행할 때의 압축 기법들을 설명하기 위한 도면이 다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다."}
