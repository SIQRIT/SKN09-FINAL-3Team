{"patent_id": "10-2018-0167585", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0078047", "출원번호": "10-2018-0167585", "발명의 명칭": "메모리 시스템 및 메모리 시스템의 동작방법", "출원인": "에스케이하이닉스 주식회사", "발명자": "곽창민"}}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 메모리 유닛을 포함하는 메모리 풀; 및상기 복수의 메모리 유닛을 제어하는 컨트롤러를 포함하되,상기 컨트롤러는호스트로부터 액세스 커맨드와 함께 수신되는 시스템 어드레스를 상기 메모리 풀 내부의 로컬 어드레스로 변환하는 어드레스 변환부;상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 기준치 결정부;상기 데이터 속성 기준치 및 상기 변환된 로컬 어드레스의 액세스 횟수에 기초하여 상기 변환된 로컬 어드레스와 연관된 데이터의 속성을 판단하는 데이터 속성 판단부; 및상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록 상기 새로운 로컬 어드레스와 연관된 메모리 유닛을 제어하는 데이터 입출력부를 포함하는 메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 복수의 메모리 유닛 각각은 제1 또는 제2 메모리 유닛 중 어느 하나이고,상기 데이터 입출력부는상기 변환된 로컬 어드레스의 액세스 횟수가 상기 데이터 속성 기준치 이상인지 여부에 따라 상기 데이터를 제1메모리 유닛 또는 제2 메모리 유닛 중 어느 하나에 저장함으로써 상기 데이터를 구분하여 저장하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 컨트롤러는상기 시스템 어드레스를 상기 새로운 로컬 어드레스에 매핑하는 어드레스 매핑부를 더 포함하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 기준치 결정부는공개특허 10-2020-0078047-3-소정 시간 주기로 상기 메모리 풀 내부 데이터의 로컬 어드레스별 액세스 횟수들의 최댓값 및 최솟값을 추출하고, 상기 최댓값 및 최솟값의 평균값을 산출하고, 상기 산출된 평균값을 상기 기준치로 결정함으로써 상기 데이터 속성 기준치를 동적으로 변경하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2항에 있어서,상기 기준치 결정부는소정 시간 주기로 상기 메모리 풀 내부 데이터의 로컬 어드레스별 액세스 횟수들의 최댓값 및 최솟값을 추출하고, 상기 최댓값 및 최솟값의 평균값을 산출하고, 상기 산출된 평균값 및 상기 기준치의 상한 중 작은 값을 상기 기준치로 결정함으로써 데이터 속성 기준치를 동적으로 변경하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제2항에 있어서,상기 데이터 입출력부는상기 액세스 커맨드가 리드 커맨드인 경우 상기 데이터 속성이 변경되면 상기 변환된 로컬 어드레스에 대응하는메모리 영역으로부터 독출된 리드 데이터를 상기 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록상기 새로운 로컬 어드레스와 연관된 메모리 유닛을 제어하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제2항에 있어서,상기 데이터 입출력부는상기 액세스 커맨드가 라이트 커맨드인 경우 상기 데이터 속성이 변경되면 상기 호스트로부터 수신한 라이트 데이터를 상기 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록 상기 새로운 로컬 어드레스와 연관된메모리 유닛을 제어하는메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제2항에 있어서,상기 데이터 속성 판단부는주기적으로 상기 메모리 풀 내부의 모든 데이터의 속성을 로컬 어드레스별로 판단하고,상기 데이터 입출력부는상기 메모리 풀 내부의 모든 데이터 중 데이터 속성이 변경된 데이터를 로컬 어드레스에 대응하는 메모리 영역으로부터 획득하고, 상기 획득된 데이터를 각각 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록 상기 새로운 로컬 어드레스와 연관된 메모리 유닛을 제어하는공개특허 10-2020-0078047-4-메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제2항에 있어서,상기 제1 메모리 유닛은 DRAM 유닛이고,상기 제2 메모리 유닛은 NAND 플래시 메모리 유닛인메모리 시스템."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "메모리 풀을 포함하는 메모리 시스템의 동작 방법에 있어서,호스트로부터 액세스 커맨드와 함께 수신되는 시스템 어드레스를 상기 메모리 풀 내부의 로컬 어드레스로 변환하는 단계;상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 단계;상기 데이터 속성 기준치 및 상기 변환된 로컬 어드레스의 액세스 횟수에 기초하여 상기 변환된 로컬 어드레스와 연관된 데이터의 속성을 판단하는 단계; 및상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계를 포함하는 동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 메모리 풀은 하나 이상의 제1 및 제2 메모리 유닛을 포함하고,상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계는상기 변환된 로컬 어드레스의 액세스 횟수가 상기 데이터 속성 기준치 이상인지 여부에 따라 상기 데이터를 제1메모리 유닛 또는 제2 메모리 유닛 중 어느 하나에 저장함으로써 상기 데이터를 구분하여 저장하는 단계를 포함하는동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 시스템 어드레스를 상기 새로운 로컬 어드레스에 매핑하는 단계를 더 포함하는 동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,공개특허 10-2020-0078047-5-상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 단계는소정 시간 주기로 상기 메모리 풀 내부 데이터의 로컬 어드레스별 액세스 횟수들의 최댓값 및 최솟값을 추출하는 단계; 상기 최댓값 및 최솟값의 평균값을 산출하는 단계;상기 산출된 평균값을 상기 기준치로 결정하는 단계를 포함하는동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서,상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 단계는소정 시간 주기로 상기 메모리 풀 내부 데이터의 로컬 어드레스별 액세스 횟수들의 최댓값 및 최솟값을 추출하는 단계;상기 최댓값 및 최솟값의 평균값을 산출하는 단계; 및상기 산출된 평균값 및 상기 기준치의 상한 중 작은 값을 상기 기준치로 결정하는 단계를 포함하는동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서,상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계는상기 액세스 커맨드가 리드 커맨드인 경우 상기 데이터 속성이 변경되면 상기 변환된 로컬 어드레스에 대응하는메모리 영역으로부터 독출된 리드 데이터를 상기 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계를 포함하는동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서,상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계는상기 액세스 커맨드가 리드 커맨드인 경우 상기 데이터 속성이 변경되면 상기 변환된 로컬 어드레스에 대응하는메모리 영역으로부터 독출된 리드 데이터를 상기 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계를 포함하는동작 방법."}
{"patent_id": "10-2018-0167585", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,공개특허 10-2020-0078047-6-주기적으로 상기 메모리 풀 내부의 모든 데이터의 속성을 로컬 어드레스별로 판단하는 단계;상기 메모리 풀 내부의 모든 데이터 중 데이터 속성이 변경된 데이터를 로컬 어드레스에 대응하는 메모리 영역으로부터 획득하는 단계; 및상기 획득된 데이터를 각각 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계를 더 포함하는 동작 방법."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "메모리 시스템은, 복수의 메모리 유닛을 포함하는 메모리 풀; 및 상기 복수의 메모리 유닛을 제어하는 컨트롤러 를 포함하되, 상기 컨트롤러는 호스트로부터 액세스 커맨드와 함께 수신되는 시스템 어드레스를 상기 메모리 풀 내부의 로컬 어드레스로 변환하는 어드레스 변환부; 상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어 드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 기준치 결정부; 상기 데이터 속성 기 준치 및 상기 변환된 로컬 어드레스의 액세스 횟수에 기초하여 상기 변환된 로컬 어드레스와 연관된 데이터의 속 성을 판단하는 데이터 속성 판단부; 및 상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상 기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록 상기 새로운 로컬 어드레스와 연관된 메모리 유닛을 제어하는 데이터 입출력부를 포함한다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 메모리 시스템에 관한 것으로, 메모리 풀을 포함하는 메모리 시스템 및 그것의 동작방법에 관한 것이다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "데이터는 4차 산업혁명 시대 기업들의 비즈니스에 가장 중요한 자산이 되고 있으며, 이에 대규모 데이터를 빠르 게 전송 및 분석하도록 지원하는 최신 기술에 대한 수요가 점차 증가하고 있다. 예를 들어, 인공지능, 자율주행, 로봇, 헬스케어, 가상현실(virtual reality, VR)/증강현실(augmented reality, AR), 스마트홈 등이 확대됨에 따라 서버나 데이터 센터에 대한 수요의 증가가 예상되고 있다. 레거시(legacy) 데이터 센터는 자원들(예; 컴퓨팅, 네트워킹, 스토리지)을 하나의 장비 내에 포함시키는 구조였 다. 그러나 미래의 대용량 데이터 센터는 자원 들을 각각 별개로 구성하고, 논리적으로 자원들을 재구성하는 구 조를 가질 수 있다. 예를 들어, 대용량 데이터 센터는 자원들을 각각 랙(rack) 수준에서 모듈화하고, 용도에 따 라 자원들을 재구성하여 공급할 수 있는 구조를 가질 수 있다. 따라서 미래의 대용량 데이터 센터에 사용하기 적합한 통합형 스토리지 또는 메모리 디바이스가 요구되고 있다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "시간적으로 가변하는 로컬 어드레스별 액세스 횟수를 반영하여 데이터 속성을 결정하고, 서로 다른 속성의 데이 터를 메모리 풀에 구분하여 저장하는 메모리 시스템 및 그의 동작 방법을 제공하고자 한다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 메모리 시스템은, 복수의 메모리 유닛을 포함하는 메모리 풀; 및 상기 복수의 메모 리 유닛을 제어하는 컨트롤러를 포함하되, 상기 컨트롤러는 호스트로부터 액세스 커맨드와 함께 수신되는 시스 템 어드레스를 상기 메모리 풀 내부의 로컬 어드레스로 변환하는 어드레스 변환부; 상기 메모리 풀 내부 데이터 의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 기 준치 결정부; 상기 데이터 속성 기준치 및 상기 변환된 로컬 어드레스의 액세스 횟수에 기초하여 상기 변환된 로컬 어드레스와 연관된 데이터의 속성을 판단하는 데이터 속성 판단부; 및 상기 판단된 속성에 기초하여 상기 데이터를 구분하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하도록 상기 새로운 로컬 어드레스와 연관된 메모리 유닛을 제어하는 데이터 입출력부를 포함한다. 본 발명의 일 실시예에 따르면, 메모리 풀을 포함하는 메모리 시스템의 동작 방법은, 호스트로부터 액세스 커맨 드와 함께 수신되는 시스템 어드레스를 상기 메모리 풀 내부의 로컬 어드레스로 변환하는 단계; 상기 메모리 풀 내부 데이터의 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동적으로 변경하는 단계; 상기 데이터 속성 기준치 및 상기 변환된 로컬 어드레스의 액세스 횟수에 기초하여 상기 변환된로컬 어드레스와 연관된 데이터의 속성을 판단하는 단계; 및 상기 판단된 속성에 기초하여 상기 데이터를 구분 하여 저장하기 위해 상기 데이터를 새로운 로컬 어드레스에 대응하는 메모리 영역에 저장하는 단계를 포함한다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "시간적으로 가변하는 로컬 어드레스별 액세스 횟수를 반영하여 데이터 속성을 결정하고, 서로 다른 속성의 데이 터를 메모리 풀에 구분하여 저장하는 메모리 시스템 및 그의 동작 방법을 제공할 수 있다."}
{"patent_id": "10-2018-0167585", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명에 따른 바람직한 실시 예를 첨부한 도면을 참조하여 상세히 설명한다. 하기의 설명에서는 본 발 명에 따른 동작을 이해하는데 필요한 부분만이 설명되며 그 이외 부분의 설명은 본 발명의 요지를 흩뜨리지 않 도록 생략될 것이라는 것을 유의하여야 한다. 이하, 도면들을 참조하여 본 발명의 실시 예들에 대해서 보다 구체적으로 설명하기로 한다. 도 1은 본 발명의 실시 예에 따른 메모리 시스템을 포함하는 데이터 처리 시스템의 구조를 나타내는 도면이다. 도 1을 참조하면, 데이터 처리 시스템은 메모리 시스템 및 호스트를 포함할 수 있다. 미래의 데이터 센터와 같은 서버 시스템 또는 데이터 처리 시스템은 연산 보드들, 메모리 보드들 등과 같은 다 수의 보드들이 단위 랙 내에서 구별되어 장착되는 구조를 가질 수 있다. 메모리 시스템은 상기 메모리 보 드와 대응할 수 있다. 호스트는 상기 연산 보드와 대응할 수 있다. 도 1을 참조하면, 메모리 시스템은 메모리 풀 및 컨트롤러를 포함할 수 있다. 메모리 풀은 복수의 메모리 유닛을 포함할 수 있다. 상기 메모리 유닛들은 컨트롤러의 제어에 따라 데이터를 저장(또는 라이트)하고, 저장된 데이터를 출력(또는 리드)할 수 있다. 메모리 풀은 다양한 사용자 워크로드(user workload)를 충족시키기 위하여 서로 다른 특성을 가지는 다수 의 메모리 유닛들을 포함할 수 있다. 즉, 하나의 메모리 풀은 DRAM, PCRAM, MRAM, STT-RAM, 플래시 메모 리와 같은 다수의 메모리들이 통합된 형태를 가지는 통합 메모리 디바이스(convergence memory device)일 수 있 다. 이러한 통합 메모리 디바이스는 각 메모리들이 서로 다른 특성을 가지기 때문에 다양한 사용 모델(usage model)에 활용될 수 있다. 메모리 풀은 제1 메모리 그룹(1st memory group) 및 제2 메모리 그룹(2nd memory group)을 포함할 수 있 다. 제1 메모리 그룹 및 제2 메모리 그룹은 각각 하나 이상의 메모리 유닛을 포함할 수 있다. 메모리 유닛들은 외부의 커맨드에 응하여 내부에 데이터를 저장할 수 있다. 일 실시예에서, 제1 메모리 그룹에 포함된 제1 메모리 유닛(1st memory unit)들 및 제2 메모리 그룹에 포함된 제2 메모리 유닛(2nd memory unit)들은 서로 다른 특성을 가질 수 있다. 일 예로, 제1 메모리 유닛들은 제2 메 모리 유닛들에 비해 액세스 속도가 빠른 메모리 장치를 포함할 수 있다. 일 예로, 제1 메모리 유닛들은 휘발성 메모리 유닛이고, 제2 메모리 유닛들은 비휘발성 메모리 유닛일 수 있다. 휘발성 메모리 유닛의 예로 DIMM과 같 은 DRAM 유닛이 있다. 비휘발성 메모리 유닛의 예로 UFS(Universal Flash Stroage), eMMC와 같은 NAND 플래시 메모리 유닛이 있다. 제1 메모리 유닛과 제2 메모리 유닛은 서로 다른 장점을 가질 수 있다. 제1 메모리 유닛이 DRAM 유닛이고 제2 메모리 유닛이 NAND 플래시 메모리 유닛인 경우를 예로 들어 상기 제1 및 제2 메모리 유닛의 서로 다른 장점을 설명한다. 제1 메모리 유닛은 제2 메모리 유닛에 비해 액세스 속도가 빠르며, 제2 메모리 유닛보다 수명이 길 수 있다. 제2 메모리 유닛은 비휘발성 메모리로서, 내부에 저장된 데이터를 유지하기 위해 리프레시 동작을 수 행할 필요가 없으므로 저전력으로 동작할 수 있다. 한편, 상기 제2 메모리 유닛이 제1 메모리 유닛에 비해 액세스 속도가 느릴 수 있다. 일 실시예에서, 제2 메모 리 그룹은 느린 액세스 속도를 개선하기 위해 캐시 메모리 유닛(미도시)을 더 포함할 수 있다. 상기 캐시 메모 리 유닛은 DRAM 유닛일 수 있다. 실시예에 따라, 상기 캐시 메모리 유닛은 라이트 스루(Write through)방식으로 동작하거나, 라이트 백(Write back)방식으로 동작할 수 있다. 컨트롤러는 호스트와 메모리 풀 내부의 메모리 유닛 사이에서 데이터 송수신을 제어할 수 있다. 컨트롤러는 호스트 인터페이스, 데이터 컨트롤 유닛 및 메모리 인터페이스를 포함할 수 있 다. 데이터 컨트롤 유닛은 메모리 시스템의 전반적인 동작을 제어할 수 있다. 예를 들어, 데이터 컨트롤 유닛은 라이트 요청에 응하여 호스트로부터 수신한 라이트 데이터를 메모리 유닛에 저장하는 라이트 동작을 제어할 수 있다. 다른 예로, 데이터 컨트롤 유닛은 리드 요청에 응하여 메모리 유닛에 저장된 데이 터를 리드하고, 리드 데이터를 호스트로 출력하는 리드 동작을 제어할 수 있다. 호스트 인터페이스는 호스트와 데이터 컨트롤 유닛 사이에서의 인터페이싱을 지원한다. 일 실시 예에서, 호스트 인터페이스는 데이터 컨트롤 유닛과 호스트 사이에서의, 상호접속 보드를 통한 인터페이싱을 지원할 수 있다. 상기 상호접속 보드는 도 11에서 구체적으로 설명된다. 호스트 인터페이스는 하나 이상의 유선 또는 무선 통신 기술들과 관련된 프로토콜들을 사용하여, 데이터 컨트롤 유닛으로부터 수신되는 데이터를 호스트로 제공하고, 호스트로부터 수신되는 데이터를 데이터 컨트롤 유닛으로 제공할 수 있다. 예를 들어, 호스트 인터페이스는 PCIe(Peripheral Component Interconnect Express), QPI(QuickPath Interconnect), 이더넷(Ethernet) 등과 같은 프로토콜들에 따라 호스트와 데이터 컨트롤 유닛 사이의 통신을 지원할 수 있다. 뿐만 아니라, 호스트 인터페이스 는 CCIX(Cache Coherent Interconnect for accelerators) 및 GEN-Z와 같은 인터페이스 규격에 따라 호스 트와 데이터 컨트롤 유닛 사이의 통신을 지원할 수 있다. 메모리 인터페이스는 데이터 컨트롤 유닛과 메모리 풀의 메모리 유닛 사이의 인터페이싱을 지원 한다. 메모리 인터페이스는 트래픽 중재기(Traffic Arbitrator) 및 제1 메모리 컨트롤 유닛(1st MCU) 및 제2 메모리 컨트롤 유닛(2nd MCU)을 포함할 수 있다. 제1 메모리 컨트롤 유닛은 제1 메모리 그룹에 포함된 제1 메모리 유닛들을 제어할 수 있다. 즉, 상기 제1 메모 리 컨트롤 유닛은 컨트롤러와 제1 메모리 유닛들 사이에서 데이터 송수신을 지원할 수 있다. 제2 메모리 컨트롤 유닛은 제2 메모리 그룹에 포함된 제2 메모리 유닛들을 제어할 수 있다. 즉, 상기 제2 메모 리 컨트롤 유닛은 컨트롤러와 제2 메모리 유닛들 사이에서 데이터 송수신을 지원할 수 있다. 트래픽 중재기는 데이터 컨트롤 유닛과 상기 제1 및 제2 메모리 컨트롤 유닛 간 신호 송수신을 중재할 수 있다. 구체적으로, 상기 트래픽 중재기는 데이터 컨트롤 유닛으로부터 수신한 리드 또는 라이트 커맨드를 메모리 풀의 로컬 어드레스와 연관된 메모리 컨트롤 유닛으로 제공할 수 있다. 한편, 컨트롤러는 상기 제1 메모리 유닛과 제2 메모리 유닛의 서로 다른 장점을 모두 취하기 위해 상기 제 1 메모리 유닛과 제2 메모리 유닛이 서로 다른 속성의 데이터를 저장하도록 제어할 수 있다. 예를 들어, 컨트롤 러는 자주 액세스되는 핫 데이터는 액세스 속도가 빠른 제1 메모리 유닛에 저장되고, 드물게 액세스되는콜드 데이터는 저전력으로 동작할 수 있는 제2 메모리 유닛에 저장되도록 제어할 수 있다. 도 2는 데이터 속성에 따라 제1 및 제2 메모리 유닛에 데이터를 구분하여 저장하기 위한 어드레스 매핑을 설명 하기 위한 도면이다. 도 2는 호스트의 시스템 어드레스, 메모리 풀의 로컬 어드레스 및 상기 시스템 어드레스와 로컬 어드 레스의 어드레스 매핑을 예시한다. 상기 시스템 어드레스는 호스트에서 메모리 시스템으로 액세스하기 위한 어드레스이다. 상기 시스템 어드레스의 일 예는 LBA(Logical Block Address)이다. 상기 로컬 어드레스는 상기 시스템 어드레스를 수신한 컨트롤러가 메모리 풀 내부의 메모리 유닛으로 액세스하기 위한 어드레스이다. 상기 로컬 어드레스들 각각은 소정의 메모리 유닛에 연관된다. 메모리 유닛의 종류에 따라서, 상기 로컬 어드레스는 물리 어드레스일 수도 있고 논리 어드레스일 수도 있다. 예를 들어 메모 리 유닛이 NAND 플래시 메모리 유닛인 경우, 상기 로컬 어드레스는 논리 어드레스로서, 연관된 메모리 유닛 내 부에서 물리 어드레스로 변환될 수 있다. 상기 로컬 어드레스들 각각이 어느 메모리 유닛과 연관되는지에 따라 상기 로컬 어드레스들을 제1 로컬 어드레 스 그룹(1st local address group) 및 제2 로컬 어드레스 그룹(2nd local address group)으로 나눌 수 있다. 제1 로컬 어드레스 그룹에 속하는 로컬 어드레스들은 제1 메모리 유닛들과 연관되고, 제2 로컬 어드레스 그룹에 속하는 로컬 어드레스들은 제2 메모리 유닛들과 연관될 수 있다. 즉, 제1 로컬 어드레스 그룹에 속하는 로컬 어 드레스들은 핫 데이터와 연관되고, 제2 로컬 어드레스 그룹에 속하는 로컬 어드레스들은 콜드 데이터와 연관될 수 있다. 도 2는 시스템 어드레스 '1'이 로컬 어드레스 'A'에 매핑된 것을 예시하고 있다. 로컬 어드레스 'A'는 제1 로컬 어드레스 그룹에 속하므로, 로컬 어드레스 'A'에 연관된 데이터는 핫 데이터일 수 있다. 마찬가지로, 시스템 어 드레스 '2'는 로컬 어드레스 'a'에 매핑되는 경우, 로컬 어드레스 'a'에 연관된 데이터는 콜드 데이터일 수 있 다. 본 발명의 일 실시예에 따르면, 컨트롤러는 호스트로부터 액세스 커맨드와 함께 수신되는 시스템 어 드레스를 상기 메모리 풀의 로컬 어드레스로 변환할 수 있다. 그리고 컨트롤러는 메모리 풀의 로컬 어드레스별로 상기 액세스 커맨드 수신 횟수, 즉 액세스 횟수를 카운트할 수 있다. 상기 액세스 커맨드는 리드 커맨드 및 라이트 커맨드를 포함할 수 있다. 컨트롤러는 시간적으로 가변하는 상기 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속성 기준치를 동 적으로 변경할 수 있다. 상기 데이터 속성 기준치는 상기 변환된 로컬 어드레스와 연관된 데이터의 속성을 판단 하기 위한 액세스 횟수의 기준치이다. 컨트롤러는 상기 데이터 속성 기준치 및 상기 로컬 어드레스별 액세스 횟수에 기초하여 로컬 어드레스와 연관된 데이터의 속성을 판단하며, 상기 판단된 속성에 따라 상기 데이터를 메모리 풀에 구분하여 저장할 수 있다. 또한, 컨트롤러는 로컬 어드레스의 액세스 횟수 및 상기 데이터 속성 기준치가 동적으로 변경됨 에 따라 상기 로컬 어드레스와 연관된 데이터의 속성이 변경되면, 상기 변경된 속성에 따라 상기 데이터를 메모 리 풀 내에서 옮겨 저장할 수 있다. 본 발명의 일 실시예에 따르면, 컨트롤러는 시간적으로 가변하는 상기 로컬 어드레스별 액세스 횟수 및 데 이터 속성 기준치를 반영하여 메모리 풀에 핫 데이터와 콜드 데이터를 구분하여 저장할 수 있다. 따라서, 메모리 시스템 내부의 제1 메모리 유닛과 제2 메모리 유닛의 장점이 최대한 발휘될 수 있다. 도 3은 본 발명의 일 실시예에 따른 데이터 컨트롤 유닛의 구조를 개략적으로 나타내는 도면이다. 데이터 컨트롤 유닛은 맵 테이블, 어드레스 변환부, 액세스 카운터, 기준치 결정부, 데이터 속성 판단부, 어드레스 매핑 변경부 및 데이터 입출력부를 포함할 수 있다. 맵 테이블은 시스템 어드레스 및 로컬 어드레스 사이의 어드레스 매핑 정보를 저장할 수 있다. 어드레스 변환부는 맵 테이블을 참조하여 호스트로부터 리드 커맨드 또는 라이트 커맨드와 함께 수신되는 시스템 어드레스를 로컬 어드레스로 변환할 수 있다. 상기 수신된 시스템 어드레스에 매핑된 로컬 어 드레스가 저장되어있지 않은 경우 어드레스 변환부는 상기 수신된 시스템 어드레스를 새로운 로컬 어드레 스에 매핑할 수 있다.액세스 카운터는 로컬 어드레스별 액세스 횟수를 카운트할 수 있다. 구체적으로, 액세스 카운터는 컨 트롤러 내부의 메모리(미도시)에 저장된 로컬 어드레스별 액세스 횟수 값들 중 상기 리드 또는 라이트 커 맨드에 응하여 변환된 로컬 어드레스의 액세스 횟수를 변경할 수 있다. 일 실시예에서, 액세스 카운터는 최근의 액세스 경향을 반영하기 위해 소정 주기로 모든 로컬 어드레스별 액세스 횟수 값을 초기화하고 상기 액 세스 횟수 카운트를 재개할 수 있다. 기준치 결정부는 시간적으로 가변하는 로컬 어드레스별 액세스 횟수 값들에 기초하여 데이터 속성 기준치 를 동적으로 변경할 수 있다. 기준치 결정부가 데이터 속성 기준치를 동적으로 변경하는 동작의 예는 도 6 을 참조하여 설명된다. 데이터 속성 판단부는 상기 동적으로 결정된 데이터 속성 기준치에 기초하여 각 로컬 어드레스에 연관된 데이터의 속성을 판단할 수 있다. 일 실시예에서, 데이터 속성 판단부는 로컬 어드레스가 액세스될 때마다 해당 로컬 어드레스에 연관된 데이터의 속성을 판단할 수 있다. 일 실시예에서, 데이터 속성 판단부는 소 정 주기로 메모리 풀에 저장된 모든 데이터의 속성을 로컬 어드레스별로 판단할 수 있다. 데이터 속성 판 단부가 소정 주기로 상기 모든 데이터의 속성을 로컬 어드레스별로 판단하는 동작의 예는 도 8을 참조하여 설명 된다. 어드레스 매핑 변경부는 소정 조건에 따라 어드레스 매핑을 변경할 수 있다. 일 실시예에서, 상기 소정 조 건은 상기 판단된 데이터의 속성이 변경되었는지 여부를 포함할 수 있다. 어드레스 매핑 변경부는 데이터 속성 판단부에 의해 판단된 데이터의 속성에 기초하여 해당 데이터의 속성이 변경되었는지 여부를 판단할 수 있다. 해당 데이터의 속성이 변경된 경우 어드레스 매핑 변경부는 해당 데이터의 어드레스 매핑을 변경 할 수 있다. 어드레스 매핑 변경부는 해당 데이터가 메모리 풀의 다른 메모리 유닛에 저장되도록 해당 데이터에 연관된 시스템 어드레스를 새로운 로컬 어드레스에 매핑함으로써 상기 어드레스 매핑을 변경할 수 있다. 도 4는 시스템 어드레스를 새로운 로컬 어드레스에 매핑하는 동작을 설명하기 위한 도면이다. 도 4는 도 2와 유사하게 시스템 어드레스, 로컬 어드레스 및 상기 시스템 어드레스와 로컬 어드레스의 어드레스 매핑을 예시하고 있다. 다시 도 2를 참조하면, 시스템 어드레스 '2'가 로컬 어드레스 'a'에 매핑되는 경우, 시스템 어드레스 '2'에 연 관된 데이터는 콜드 데이터일 수 있다. 호스트로부터 상기 시스템 어드레스 '2'에 대한 리드 또는 라이트 커맨드를 수신하여 로컬 어드레스 'a'의 액세스 카운트가 증가하면 상기 데이터의 속성이 핫 데이터로 판단될 수 있다. 어드레스 매핑 변경부는 제2 로컬 어드레스 그룹에 포함된 로컬 어드레스 'a'에 연관된 데이터가 핫 데이터로 판단되었으므로, 상기 데이터의 속성이 변경된 것으로 판단할 수 있다. 도 4를 참조하면, 어드레스 매핑 변경부는 상기 데이터가 제1 메모리 유닛에 저장되도록 상기 시스템 어드 레스 '2'를 제1 로컬 어드레스 그룹에 속하는 새로운 로컬 어드레스 'D'에 매핑할 수 있다. 어드레스 매핑 변경 부는 상기 시스템 어드레스와 새로운 로컬 어드레스 사이의 어드레스 매핑 정보를 맵 테이블에 반영 할 수 있다. 일 실시예에서, 상기 소정 조건은 상기 판단된 데이터의 속성이 변경되었는지 여부뿐만 아니라 액세스 카운터 가 상기 액세스 횟수 카운트를 개시한지 소정 시간이 지났는지 여부를 더 포함할 수 있다. 액세스 카운터 가 상기 액세스 횟수 카운트를 개시한 초기에는 각 로컬 어드레스별 액세스 횟수 값이 메모리 풀에 저장된 데이터의 속성을 결정하기에 충분히 수집되지 않았을 수 있기 때문이다. 다시 도 3을 참조하면, 데이터 입출력부는 메모리 인터페이스로 커맨드를 제공함으로써 메모리 유닛 의 데이터 입출력을 제어할 수 있다. 일 실시예에서, 데이터 입출력부는 변경되기 전의 이전 로컬 어드레 스(Old Local Address)의 대응 메모리 영역에 저장된 데이터를 리드하여 새로운 로컬 어드레스(New Local Address)의 대응 메모리 영역에 상기 리드된 데이터를 라이트할 수 있다. 이하 도 5 내지 도 8을 참조하여, 본 발명의 실시예에 따른 메모리 시스템의 라이트 동작, 리드 동작 및 데이터 속성 업데이트 동작을 설명한다. 도 5 내지 도 6은 본 발명의 일 실시예에 따른 메모리 시스템의 라이트 동작을 나타내는 흐름도이다. 도 5를 참조하면, 단계 S502에서 호스트 인터페이스는 호스트로부터 라이트 커맨드, 라이트 데이터 및 라이트 동작을 수행할 제1 시스템 어드레스를 수신할 수 있다. 호스트 인터페이스는 상기 제1 시스템 어드레스를 어드레스 변환부로 제공할 수 있다. 호스트 인터페이스는 상기 라이트 커맨드를 데이터 컨트롤 유닛 내부의 커맨드 큐(미도시)에 큐잉하고, 라이트 데이터 및 제1 시스템 어드레스를 데이터 컨트 롤 유닛 내부의 버퍼(미도시)에 버퍼링할 수 있다. 단계 S504에서, 어드레스 변환부는 맵 테이블을 참조하여 호스트 인터페이스로부터 수신한 상기 제1 시스템 어드레스를 제1 로컬 어드레스로 변환할 수 있다. 한편, 메모리 풀이 상기 제1 시스템 어드레스와 연관된 데이터를 처음 저장하는 경우 상기 제1 시스템 어 드레스의 매핑 정보가 맵 테이블에 저장되어있지 않을 수 있다. 일 실시예에서, 어드레스 변환부는 상기 제1 시스템 어드레스의 매핑 정보가 맵 테이블에 저장되어있지 않은 경우 상기 제1 시스템 어드레스 를 새로운 로컬 어드레스에 매핑하고, 후술되는 단계 S506에서 상기 새로운 로컬 어드레스의 액세스 카운트를 시작할 수 있다. 한편 처음 저장되는 데이터의 액세스 카운트는 '0'이므로, 어드레스 변환부는 상기 데이 터를 콜드 데이터로 간주하고 상기 제1 시스템 어드레스를 제2 로컬 어드레스 그룹에 포함된 새로운 로컬 어드 레스에 매핑할 수 있다. 메모리 풀이 상기 제1 시스템 어드레스와 연관된 데이터를 처음 저장하는 경우, 상기 제1 로컬 어드레스는 상기 새로운 로컬 어드레스에 해당할 수 있다. 어드레스 변환부는 액세스 카운터로 상기 제1 로컬 어드레스를 제공할 수 있다. 단계 S506에서, 액세스 카운터는 상기 제1 로컬 어드레스의 액세스 횟수를 변경할 수 있다. 액세스 카운터는 메모리 풀에 저장된 모든 데이터의 로컬 어드레스별 액세스 횟수 값들을 기준치 결 정부로 제공할 수 있다. 그리고, 액세스 카운터는 상기 제1 로컬 어드레스 및 이의 액세스 횟수 값을 데이터 속성 판단부로 제공할 수 있다. 단계 S508에서, 기준치 결정부는 시간적으로 가변하는 로컬 어드레스별 액세스 횟수 값들에 기초하여 데이 터 속성 기준치를 동적으로 결정할 수 있다. 도 6는 단계 S508의 세부 동작을 나타낸 흐름도이다. 일 실시예에서, 단계 S508은 단계 S602 내지 단계 S606를 포함할 수 있다. 단계 S602에서, 기준치 결정부는 액세스 카운터로부터 수신한 최근 소정 시간의 로컬 어드레스별 액 세스 횟수 값들의 최댓값과 최솟값을 추출할 수 있다. 단계 S604에서, 기준치 결정부는 상기 최댓값과 최솟값의 평균값을 산출할 수 있다. 단계 S606에서, 기준치 결정부는 상기 산출된 평균값을 상기 데이터 속성 기준치로 결정할 수 있다. 한편, 단계 S604에서 기준치 결정부가 반드시 평균값을 산출해야 하는 것은 아니다. 일 실시예에서, 기준 치 결정부는 소정 기준에 따라 최댓값과 최솟값 사이에 있는 다른 값을 산출하여, 단계 S606에서 상기 산 출된 값을 상기 데이터 속성 기준치로 결정할 수 있다. 또한, 단계 S602에서 기준치 결정부가 반드시 최댓 값 및 최솟값만을 추출해야 하는 것은 아니다. 기준치 결정부는 소정 기준에 따라 로컬 어드레스별 액세스 횟수 값들 중 이들을 대표할 수 있는 복수의 값들을 추출할 수 있다. 일 실시예에서, 상기 데이터 속성 기준치의 상한이 사전에 결정될 수 있다. 메모리 유닛들 내부의 메모리 장치 는 액세스 횟수에 따라 수명이 제한될 수 있다. 예를 들어 멀티 레벨 셀 NAND 플래시 메모리 장치의 EW 사이클 은 약 1만 회 정도로 제한되어 있다. 제2 메모리 유닛이 수명이 제한된 메모리 유닛인 경우, 내부의 메모리 장치에 소정 빈도 이상 액세스되는 데이 터가 저장되면 상기 내부의 메모리 장치가 빠르게 노후화될 수 있다. 따라서 수명이 제한된 메모리 유닛에 소정 빈도 이상 액세스되는 데이터가 저장되지 않도록 상기 데이터 속성 기준치의 상한이 사전에 결정될 수 있다. 일 실시예에서, 상기 데이터 속성 기준치의 상한은 상기 EW 사이클에 기초하여 결정될 수 있다. 기준치 결정부 는 단계 S604에서 로컬 어드레스별 액세스 횟수 값들에 기초하여 산출된 값과 상기 데이터 속성 기준치의 상한 중 작은 값을 데이터 속성 기준치로 결정할 수 있다. 다시 도 5를 참조하면, 단계 S510에서 데이터 속성 판단부는 상기 데이터 속성 기준치에 기초하여 라이트 데이터의 속성을 판단할 수 있다. 구체적으로, 데이터 속성 판단부는 상기 제1 로컬 어드레스 및 그의 액세스 횟수 값을 액세스 카운터(30 6)로부터 수신하고, 상기 데이터 속성 기준치를 기준치 결정부로부터 수신할 수 있다. 데이터 속성 판단부는 비교기(미도시)를 포함할 수 있다. 상기 비교기는 상기 제1 로컬 어드레스의 액세스 횟수 값이 상기 데이터 속성 기준치 이상인지 여부에 따라 상기 제1 로컬 어드레스와 연관된 상기 라이트 데이 터의 속성을 판단할 수 있다. 예를 들어, 상기 제1 로컬 어드레스의 액세스 횟수 값이 상기 데이터 속성 기준치 이상이면 상기 라이트 데이터는 핫 데이터로 판단될 수 있다. 반면에 상기 제1 로컬 어드레스의 액세스 횟수 값 이 상기 데이터 속성 기준치 미만이면 상기 라이트 데이터는 콜드 데이터로 판단될 수 있다. 단계 S512에서, 데이터 속성 판단부는 어드레스 매핑을 변경하기 위한 소정 조건이 만족되는지 판단할 수 있다. 도 3을 참조하여 설명된 것과 같이, 상기 소정 조건은 상기 판단된 라이트 데이터의 속성이 변경되었는지 여부를 포함하고, 액세스 카운터가 액세스 횟수 카운트를 개시한지 소정 시간이 지났는지 여부를 더 포함 할 수 있다. 상기 소정 조건이 만족되는 경우(단계 S512에서, \"Yes\"), 데이터 속성 판단부는 상기 제1 로컬 어드레스 및 이와 연관된 데이터의 속성을 어드레스 매핑 변경부로 제공할 수 있다. 데이터 컨트롤 유닛은 후 술되는 단계 S514 내지 단계 S516의 동작을 수행할 수 있다. 상기 소정 조건이 만족되지 않은 경우(단계 S512에서, \"No\"), 데이터 속성 판단부는 상기 제1 로컬 어드레 스를 데이터 입출력부로 제공할 수 있다. 데이터 컨트롤 유닛은 후술되는 단계 S518의 동작을 수행할 수 있다. 단계 S514에서, 어드레스 매핑 변경부는 제1 시스템 어드레스를 새로운 제1 로컬 어드레스에 매핑할 수 있 다. 어드레스 매핑 변경부는 상기 새로운 제1 로컬 어드레스를 데이터 입출력부로 제공할 수 있다. 어드 레스 매핑 변경부는 상기 제1 시스템 어드레스와 상기 새로운 제1 로컬 어드레스의 어드레스 매핑 정보를 맵 테이블에 업데이트할 수 있다. 그리고 어드레스 매핑 변경부는 액세스 카운터가 새로운 제1 로컬 어드레스의 액세스 횟수 값을 이전 제1 로컬 어드레스의 액세스 횟수 값으로 변경하고, 상기 이전 제1 로 컬 어드레스의 액세스 횟수 값을 초기화하도록 액세스 카운터를 제어할 수 있다. 단계 S516에서, 데이터 입출력부는 메모리 인터페이스로 상기 새로운 제1 로컬 어드레스, 라이트 커 맨드 및 라이트 데이터를 제공할 수 있다. 여기서, 상기 라이트 커맨드는 단계 S502에서 커맨드 큐(미도시)에 큐잉된 라이트 커맨드이고, 상기 라이트 데이터는 단계 S502에서 버퍼(미도시)에 버퍼링된 라이트 데이터일 수 있다. 메모리 인터페이스는 데이터 입출력부로부터 수신한 라이트 커맨드에 응하여 상기 새로운 제1 로컬 어드레스와 연관된 메모리 유닛이 라이트 동작을 수행하도록 상기 메모리 유닛을 제어할 수 있다. 한편, 상기 제1 시스템 어드레스와 상기 이전 제1 로컬 어드레스의 매핑이 해제되므로 호스트로부터 액세 스 커맨드와 함께 상기 제1 시스템 어드레스가 다시 수신되면 상기 이전 제1 로컬 어드레스로는 액세스되지 않 을 것이다. 상기 이전 제1 로컬 어드레스는 향후 어드레스 변환부 또는 어드레스 매핑 변경부에 의해 다른 시스템 어드레스에 매핑될 수 있다. 단계 S518에서, 데이터 입출력부는 기존 제1 로컬 어드레스에 호스트로부터 수신한 라이트 데이터를 라이트하도록 메모리 인터페이스로 라이트 커맨드를 제공할 수 있다. 여기서, 상기 라이트 커맨드는 단계 S502에서 커맨드 큐(미도시)에 큐잉된 라이트 커맨드이고, 상기 라이트 데이터는 단계 S502에서 버퍼(미도시)에 버퍼링된 라이트 데이터일 수 있다. 메모리 인터페이스는 데이터 입출력부로부터 수신한 라이트 커맨 드에 응하여 상기 기존 제1 로컬 어드레스와 연관된 메모리 유닛이 라이트 동작을 수행하도록 상기 메모리 유닛 을 제어할 수 있다. 도 5 내지 도 6에서 설명된 메모리 시스템의 라이트 동작에 의하면, 시간적으로 가변하는 로컬 어드레스별 액세스 카운트 및 동적으로 변경되는 데이터 속성 기준치에 기초하여 판단된 라이트 데이터의 속성에 따라 상기 라이트 데이터를 메모리 풀에 구분하여 저장할 수 있다. 도 7은 본 발명의 일 실시예에 따른 메모리 시스템의 리드 동작을 나타내는 흐름도이다. 단계 S702에서, 호스트 인터페이스는 호스트로부터 리드 커맨드 및 리드 동작을 수행할 제1 시스템 어드레스를 수신할 수 있다. 호스트 인터페이스는 상기 리드 커맨드를 데이터 컨트롤 유닛 내부의 커 맨드 큐(미도시)에 큐잉하고, 제1 시스템 어드레스를 데이터 컨트롤 유닛 내부의 버퍼(미도시)에 버퍼링할수 있다. 단계 S704에서, 어드레스 변환부는 맵 테이블을 참조하여 호스트 인터페이스로부터 수신한 제1 시스템 어드레스를 제1 로컬 어드레스로 변환할 수 있다. 어드레스 변환부는 액세스 카운터로 상기 제1 로컬 어드레스를 제공할 수 있다. 단계 S706에서, 액세스 카운터는 상기 제1 로컬 어드레스의 액세스 횟수를 카운트할 수 있다. 단계 S706의 구체적인 동작은 단계 S506에서 설명된 것과 같다. 단계 S708에서, 기준치 결정부는 시간적으로 가변하는 로컬 어드레스별 액세스 횟수에 기초하여 데이터 속 성 기준치를 변경할 수 있다. 단계 S708의 구체적인 동작은 단계 S508에서 설명된 것과 같다. 단계 S710에서, 데이터 속성 판단부는 상기 데이터 속성 기준치에 기초하여 리드 데이터의 속성을 판단할 수 있다. 단계 S710의 구체적인 동작은 단계 S510에서 설명된 것과 같다. 단계 S712에서, 데이터 입출력부는 상기 제1 로컬 어드레스와 연관된 메모리 유닛이 리드 동작을 수행하도 록 메모리 인터페이스로 리드 커맨드를 제공할 수 있다. 여기서, 상기 리드 커맨드는 단계 S702에서 커맨 드 큐(미도시)에 큐잉된 리드 커맨드일 수 있다. 메모리 인터페이스는 상기 메모리 유닛으로부터 독출된 리드 데이터를 상기 버퍼(미도시)에 버퍼링할 수 있다. 데이터 입출력부는 상기 버퍼링된 리드 데이터를 호스트 인터페이스를 통해 호스트로 제공할 수 있다. 한편, 본 발명의 실시예에 따르면 로컬 어드레스별 액세스 횟수 및 데이터 속성 기준치는 시간에 따라 가변한다. 따라서, 메모리 풀 내부에 저장된 데이터의 속성은 시간에 따라 변경될 수 있다. 예를 들어, 어 떤 데이터가 콜드 데이터로 판단되어 제2 메모리 유닛에 저장되었는데, 해당 데이터를 리드할 때는 해당 데이터 가 핫 데이터로 판단될 수 있다. 후술하는 단계 S714 내지 S718에서, 어드레스 매핑 변경부는 리드 데이터 의 데이터 속성이 변경된 경우 해당 데이터가 다른 메모리 유닛에 저장되도록 어드레스 매핑을 변경할 수 있다. 단계 S714에서, 데이터 속성 판단부는 어드레스 매핑을 변경하기 위한 소정 조건이 만족되었는지 판단할 수 있다. 도 3을 참조하여 설명된 것과 같이, 상기 소정 조건은 상기 판단된 리드 데이터의 속성이 변경되었는 지 여부를 포함하고, 액세스 카운터가 액세스 횟수 카운트를 개시한지 소정 시간이 지났는지 여부를 더 포 함할 수 있다. 상기 소정 조건이 만족되는 경우(단계 S714에서, \"Yes\"), 데이터 속성 판단부는 상기 제1 로컬 어드레스 및 이와 연관된 데이터의 속성을 어드레스 매핑 변경부로 제공할 수 있다. 데이터 컨트롤 유닛은 후 술되는 단계 S716 내지 단계 S718의 동작을 수행할 수 있다. 상기 소정 조건이 만족되지 않은 경우(단계 S714에서, \"No\"), 데이터 컨트롤 유닛은 동작을 종료할 수 있 다. 단계 S716에서, 어드레스 매핑 변경부는 제1 시스템 어드레스를 새로운 제1 로컬 어드레스에 매핑할 수 있 다. 단계 S716의 구체적인 동작은 단계 S514에서 설명된 것과 같다. 단계 S718에서, 데이터 입출력부는 메모리 인터페이스로 새로운 제1 로컬 어드레스, 라이트 커맨드 및 리드 데이터를 제공할 수 있다. 여기서, 상기 라이트 커맨드는 상기 제1 시스템 어드레스에 연관된 데이터를 상기 새로운 제1 로컬 어드레스에 옮겨 저장하기 위한 커맨드이다. 상기 리드 데이터는 단계 S712에서 독출되어 버퍼(미도시)에 버퍼링된 데이터이다. 메모리 인터페이스는 데이터 입출력부로부터 수신한 라이트 커 맨드에 응하여 상기 새로운 제1 로컬 어드레스와 연관된 메모리 유닛이 라이트 동작을 수행하도록 상기 메모리 유닛을 제어할 수 있다. 도 7을 참조하여 설명된 메모리 시스템의 리드 동작에 의하면, 시간적으로 가변하는 로컬 어드레스별 액세 스 카운트 및 동적으로 변경되는 데이터 속성 기준치에 기초하여 판단된 리드 데이터의 속성에 따라 상기 리드 데이터를 메모리 풀에 구분하여 저장할 수 있다. 한편, 전술한 대로 메모리 풀 내부에 저장된 데이터의 속성은 시간에 따라 변경될 수 있다. 본 발명의 일 실시예에 따르면, 데이터 컨트롤 유닛은 주기적으로 메모리 풀에 저장된 모든 데이터 속성을 로컬 어 드레스별로 갱신하고, 상기 갱신된 속성에 따라 상기 데이터를 구분하여 저장하도록 메모리 풀 내부의 메 모리 유닛들을 제어하는, 데이터 속성 업데이트 동작을 수행할 수 있다. 도 8은 본 발명의 일 실시예에 따른 메모리 시스템의 데이터 속성 업데이트 동작을 나타내는 흐름도이다. 후술되는 단계 S802 내지 단계 S808의 데이터 속성 업데이트 동작은 소정 주기로 수행될 수 있다. 도 3을 참조하여 설명된 바에 따르면, 액세스 카운터는 소정 주기로 모든 로컬 어드레스별 액세스 횟수 값 을 초기화하고 상기 액세스 횟수 카운트를 재개할 수 있다. 일 실시예에서, 상기 데이터 속성 업데이트 동작은 상기 로컬 어드레스별 액세스 횟수 값을 초기화하는 동작과 같은 주기로 수행될 수 있다. 예컨대 상기 데이터 속성 업데이트 동작은 상기 로컬 어드레스별 액세스 횟수 값을 초기화하기 직전에 수행될 수 있다. 단계 S802에서, 데이터 속성 판단부는 데이터 속성 기준치에 기초하여 메모리 시스템에 저장된 모든 데이터의 속성을 로컬 어드레스별로 판단할 수 있다. 구체적으로, 데이터 속성 판단부 내부의 비교기(미도 시)는 동적으로 변경되는 데이터 속성 기준치와 메모리 풀에 저장된 모든 데이터의 로컬 어드레스별 액세 스 횟수 값을 비교하여 상기 모든 데이터의 속성을 로컬 어드레스별로 판단할 수 있다. 데이터 속성 판단부 는 상기 판단 결과에 기초하여 메모리 풀에 저장된 데이터의 속성이 변경되었는지 여부를 로컬 어드 레스별로 판단할 수 있다. 데이터 속성 판단부는 속성이 변경된 데이터와 연관된 로컬 어드레스들을 어드 레스 매핑 변경부로 제공할 수 있다. 단계 S804에서, 어드레스 매핑 변경부는 상기 속성이 변경된 데이터가 메모리 풀의 다른 메모리 유닛 에 옮겨 저장되도록 어드레스 매핑을 변경할 수 있다. 구체적으로, 어드레스 매핑 변경부는 데이터 속성 판단부로부터 수신한 로컬 어드레스들 및 맵 테이 블을 참조하여 상기 속성이 변경된 데이터와 연관된 시스템 어드레스들을 새로운 로컬 어드레스들에 매핑 할 수 있다. 어드레스 매핑 변경부는 상기 시스템 어드레스와 새로운 로컬 어드레스들의 어드레스 매핑 정 보를 맵 테이블에 반영할 수 있다. 그리고 어드레스 매핑 변경부는 액세스 카운터가 새로운 로 컬 어드레스들의 액세스 횟수 값을 이전 로컬 어드레스의 액세스 횟수 값들로 각각 변경하도록 액세스 카운터 를 제어할 수 있다. 어드레스 매핑 변경부는 데이터 속성 판단부로부터 수신한 로컬 어드레스, 즉 이전 로컬 어드레스들 과 상기 새로운 로컬 어드레스들을 데이터 입출력부로 제공할 수 있다. 단계 S806에서, 데이터 입출력부는 메모리 인터페이스로 상기 이전 로컬 어드레스들을 제공할 수 있 다. 메모리 인터페이스는 상기 리드 커맨드에 응하여 상기 이전 로컬 어드레스들과 연관된 메모리 유닛들 의 리드 동작을 각각 제어하고, 상기 리드 동작에 의해 독출된 리드 데이터를 메모리 컨트롤 유닛 내부의 버퍼(미도시)에 버퍼링할 수 있다. 단계 S808에서, 데이터 입출력부는 메모리 인터페이스로 라이트 커맨드, 상기 새로운 로컬 어드레스 들 및 상기 버퍼링된 리드 데이터를 제공할 수 있다. 메모리 인터페이스는 상기 라이트 커맨드에 응하여 상기 새로운 로컬 어드레스들과 연관된 메모리 유닛 각각의 라이트 동작을 제어할 수 있다. 도 8에서 설명된 메모리 시스템의 데이터 속성 업데이트 동작에 따르면, 시간적으로 가변하는 로컬 어드레 스별 액세스 카운트 및 동적으로 변경되는 데이터 속성 기준치에 기초하여 판단된 메모리 풀 내부에 저장 된 데이터의 속성에 따라 메모리 풀 내부에 저장된 데이터를 구분하여 저장할 수 있다. 특히, 메모리 컨트 롤러는 과거에 핫 데이터로 판단되어 제1 메모리 유닛에 저장되었다가 오랫동안 액세스되지 않은 채로 제1 메모리 유닛에 저장되어 있는 데이터를 제2 메모리 유닛으로 옮겨 저장할 수 있다. 도 1 내지 도 8에서 설명된 메모리 시스템은 메모리 보드 형태로 랙(rack) 내에 장착되어 데이터 센터와 같은 서버 시스템 또는 데이터 처리 시스템을 구성할 수 있다. 본 발명의 일 실시예에 따른 메모리 시스템(11 0)을 포함하는 데이터 처리 시스템이 도 9 내지 도 12에서 설명된다. 도 9는 데이터 처리 시스템을 도시하는 도면이다. 도 9를 참조하면, 데이터 처리 시스템은 다수의 컴퓨팅 랙들(computing racks, 20)과 관리 인터페이스 (management interface, 30), 그리고 이들 사이의 통신이 가능하도록 하는 네트워크(network, 40)을 포함할 수 있다. 이러한 랙스케일 구조(rack-scale architecture)를 가지는 데이터 처리 시스템은 대용량 데이터 처리 를 위한 데이터 센터 등에 사용될 수 있다. 다수의 컴퓨팅 랙들 각각은 다른 컴퓨팅 랙들과의 조합으로 하나의 컴퓨팅 시스템을 구현할 수 있다. 이러한 컴퓨팅 랙들의 구체적인 구성 및 동작에 대한 설명은 후술될 것이다. 관리 인터페이스는 사용자가 데이터 처리 시스템을 조정, 운영 또는 관리할 수 있도록 하는 인터액티브 인터페이스(interactive interface)를 제공할 수 있다. 관리 인터페이스는 컴퓨터, 멀티프로세서 시스템, 서버, 랙마운트(rack-mount) 서버, 보드(board) 서버, 랩탑(lap-top) 컴퓨터, 노트북 컴퓨터, 태블릿 컴퓨터, 웨어러블 컴퓨팅 시스템, 네트워크 기기, 웹 기기, 분산 컴퓨팅 시스템, 프로세서 기반 시스템, 및/또는 소비자 전자 기기를 포함하는, 임의 유형의 연산 디바이스로서 구현될 수 있다. 일부 실시 예들에서, 관리 인터페이스는 컴퓨팅 랙들에 의해 수행될 수 있는 연산 기능들이나, 관리 인 터페이스에 의해 수행될 수 있는 사용자 인터페이스 기능들을 가지는 분산 시스템에 의해 구현될 수 있다. 다른 일부 실시 예들에서, 관리 인터페이스는 네트워크를 통하여 분산된 다중 컴퓨팅 시스템들에 의해 구성되고 클라우드(cloud)로서 동작하는 가상 서버(virtual server)에 의해 구현될 수 있다. 관리 인터페이스 는 프로세서, 입력/출력 서브시스템, 메모리, 데이터 스토리지 디바이스 및 통신 회로를 포함할 수 있다. 네트워크는 컴퓨팅 랙들과 관리 인터페이스 사이 및/또는 컴퓨팅 랙들 사이에서의 데이터를 송수신할 수 있다. 네트워크는 적절한 수의 다양한 유선 및/또는 유선 네트워크들에 의해 구현될 수 있다. 예를 들어, 네트워크는 유선 또는 무선 LAN(local area network), WAN(wide area network) 셀룰라 네트워크, 및 /또는 인터넷과 같이 공개적으로 억세스 가능한 글로벌 네트워크(publicly-accessible, global network)에 의 해 구현되거나 이를 포함할 수 있다. 추가적으로, 네트워크는 보조적인 컴퓨터들, 라우터(router)들 및 스 위치들과 같은 적절한 수의 보조적인 네트워크 디바이스들을 포함할 수 있다. 또한, 네트워크는 CCIX(Cache Coherent Interconnect for accelerators) 및 GEN-Z와 같은 인터페이스 규격에 의해서 연결될 수 있다. 도 10은 본 발명의 실시 예에 따른 컴퓨팅 랙 구조를 개략적으로 도시하는 도면이다. 도 10을 참조하면, 컴퓨팅 랙은 구성요소들의 구조, 형태 및 호칭 등에 제한되는 것은 아니지만, 다양한 형 태의 구성요소들을 포함할 수 있다. 예를 들어, 컴퓨팅 랙 은 다수의 드로워(drawer)들(21 내지 29)를 포함 할 수 있다. 다수의 드로워들 (21 내지 29) 각각은 다수의 보드(board)들을 포함할 수 있다. 다양한 실시 예들에 있어서, 컴퓨팅 랙은 적절한 수의 연산 보드(compute board), 메모리 보드(memory board) 및/또는 상호접속 보드(interconnect board)의 조합에 의해 구현될 수 있다. 여기서는 컴퓨팅 랙이 다수의 보드들의 조합에 의해 구현되는 것으로 정의되고 있지만, 이를 대신하여, 드로워들, 모듈들, 트레이들, 보드들, 샷시들 또는 유닛들 등의 다양한 이름으로 구현되는 것으로 정의될 수 있음에 유의하여야 한다. 이러 한 컴퓨팅 랙의 구성요소들은 구현의 편의상 기능별로 분류 및 구별되는 구조를 가질 수 있다. 제한되는 것은 아니지만, 컴퓨팅 랙은 상단부터 상호접속 보드, 연산 보드, 메모리 보드의 순서로 분류된 구조를 가 질 수 있다. 이러한 컴퓨팅 랙 및 이에 의해 구현되는 컴퓨팅 시스템은 \"랙-스케일 시스템(rack-scale system)\" 또는\"분류 시스템(disaggregated system)\"으로 명명될 수 있다. 다양한 실시 예들에 있어서, 컴퓨팅 시스템은 하나의 컴퓨팅 랙에 의해 구현될 수 있다. 이를 대신하여, 컴 퓨팅 시스템은 2개 이상의 컴퓨팅 랙들에 포함되는 모든 구성요소들에 의해 구현되거나, 2개 이상의 컴퓨팅 랙 들에 포함되는 일부 구성요소들의 조합에 의해 구현되거나, 하나의 컴퓨팅 랙에 포함되는 일부 구성요소들 에 의해 구현될 수 있다. 다양한 실시 예들에 있어서, 컴퓨팅 시스템은 컴퓨팅 랙에 포함되는 적절한 수의 연산 보드, 메모리 보드 및 상호접속 보드(interconnect board)의 조합에 의해 구현될 수 있다. 예를 들어, 컴퓨팅 시스템(20A)는 2개의 연산 보드들, 3개의 메모리 보드들 및 1개의 상호접속 보드에 의해 구현될 수 있다. 다른 예로, 컴퓨팅 시스템 (20B)는 3개의 연산 보드들, 2개의 메모리 보드들 및 1개의 상호접속 보드에 의해 구현될 수 있다. 또 다른 예 로, 컴퓨팅 시스템(20C)는 1개의 연산 보드들, 4개의 메모리 보드들 및 1개의 상호접속 보드에 의해 구현될 수 있다. 비록 도 10에서는 컴퓨팅 랙이 적절한 수의 연산 보드, 메모리 보드 및/또는 상호접속 보드의 조합에 의해 구현되는 경우를 도시하고 있지만, 컴퓨팅 랙은 통상의 서버 등에서 확인될 수 있는, 파워 시스템, 냉각 시 스템, 입력/출력 디바이스들과 같은 추가적인 구성요소들을 포함할 수 있다. 도 11은 본 발명의 실시 예에 따른 컴퓨팅 랙의 블록 구성을 도시하는 도면이다. 도 11을 참조하면, 컴퓨팅 랙은 다수의 연산 보드들(compute boards, 200), 다수의 메모리 보드들(memory boards, 400) 및 상호접속 보드(interconnect board, 300)를 포함할 수 있다. 다수의 연산 보드들은 풀 드 연산 보드(pooled compute boards), 풀드 연산 시스템 등으로 불리울 수 있다. 유사하게, 다수의 메모리 보 드들은 풀드 메모리 보드(pooled memory board), 풀드 메모리 시스템 등으로 불리울 수 있다. 여기서는 컴퓨팅시스템이 다수의 보드들의 조합에 의해 구현되는 것으로 정의되고 있지만, 이를 대신하여 드로워들, 모듈들, 트 레이들, 보드들, 샷시들 또는 유닛들 등의 다양한 이름으로 구현되는 것으로 정의될 수 있음에 유의하여야 한다. 다수의 연산 보드들 각각은 하나 또는 그 이상의 프로세서, 프로세싱/컨트롤 회로, 또는 중앙처리장치 (central processing unit, CPU)와 같은 프로세싱 요소를 포함할 수 있다. 도 1에서 설명된 호스트는 연 산 보드에 대응할 수 있다. 다수의 메모리 보드들 각각은 다수의 휘발성 메모리(volatile memory)들 및/또는 비휘발성 메모리 (nonvolatile memory)들과 같은 다양한 형태의 메모리들을 포함할 수 있다. 예를 들어, 다수의 메모리 보드들 각각은 다수의 DRAM(Dynamic Random Access Memory)들, 플래시 메모리(flash memory)들, 메모리 카드들, 하드 디스크 드라이브(hard disk drive, HDD)들, 솔리드 스테이트 드라이브(solid state drive, SSD)들, 및/또 는 이들의 조합들을 포함할 수 있다. 도 1 내지 도 8에서 설명된 메모리 시스템은 각각의 메모리 보드에 대응할 수 있다. 각각의 메모리 보드는 시간적으로 가변하는 로컬 어드레스별 커맨드 수신 횟수에 기초하여 데이터 속성 기준치를 동적으 로 변경하고, 상기 데이터 속성 기준치에 기초하여 판단된 데이터의 속성에 따라 상기 데이터가 구분하여 저장 되도록 어드레스 매핑을 수행하는 컨트롤러를 포함할 수 있다. 다수의 메모리 보드들 각각은 연산 보드들 각각에 포함되는 하나 이상의 프로세싱 요소에 의해 분할 되거나, 할당되거나, 또는 지정되어 사용될 수 있다. 또한 다수의 메모리 보드들 각각은 연산 보드들(20 0)에 의해 초기화 및/또는 수행될 수 있는 하나 이상의 오퍼레이팅 시스템(operating system, OS)들을 저장할 수 있다. 상호접속 보드는 연산 보드들 각각에 포함되는 하나 이상의 프로세싱 요소에 의해 분할, 할당 또는 지정되어 사용될 수 있는, 임의의 통신 회로, 디바이스, 또는 이들의 결합에 의해 구현될 수 있다. 예를 들어, 상호접속 보드은 임의 개수의 네트워크 인터페이스 포트들, 카드들, 또는 스위치들로서 구현될 수 있다. 상호접속 보드는 통신을 실행시키기 위한, 하나 이상의 유선 또는 유선 통신 기술들과 관련된 프로토콜들 을 사용할 수 있다. 예를 들어, 상호접속 보드은 PCIe(Peripheral Component Interconnect Express), QPI(QuickPath Interconnect), 이더넷(Ethernet) 등과 같은 프로토콜들에 따라 연산 보드들과 메모리 보 드들 사이의 통신을 지원할 수 있다. 뿐만 아니라, 상호접속 보드는 CCIX(Cache Coherent Interconnect for accelerators) 및 GEN-Z와 같은 인터페이스 규격에 의해서 연산 보드들과 연결될 수 있 다. 도 12는 본 발명의 실시 예에 따른 연산 보드의 구성을 도시하는 도면이다. 도 12를 참조하면, 연산 보드는 하나 이상의 중앙처리장치(central processing unit, CPU, 210), 하나 이 상의 로컬 메모리(local memory, 220) 및 입출력(input/output, I/O) 인터페이스(interface, 230)를 포함할 수 있다. CPU은 도 10에 도시된 다수의 메모리 보드들 중에서 사용하기 위한 적어도 하나의 메모리 보드를 분 할, 할당 또는 지정할 수 있다. 또한 CPU은 분할, 할당 또는 지정된 적어도 하나의 메모리 보드를 초기화 하고, 이들을 통해 데이터의 리드 동작, 라이트(또는 프로그램) 동작 등을 수행할 수 있다. 로컬 메모리는 CPU의 동작 수행 중에 필요한 데이터를 저장할 수 있다. 다양한 실시 예들에 있어서, 하나의 로컬 메모리는 하나의 CPU에 일대일 대응하는 구조를 가질 수 있다. I/O 인터페이스는 도 11의 상호접속 보드를 통한 CPU과 메모리 보드들 사이에서의 인터페 이싱을 지원할 수 있다. I/O 인터페이스 은 하나 이상의 유선 또는 유선 통신 기술들과 관련된 프로토콜들 을 사용하여, CPU으로부터 상호접속 보드으로의 송신 데이터를 출력하고, 상호접속 보드으로부 터 CPU으로의 수신 데이터를 입력할 수 있다. 예를 들어, I/O 인터페이스는 PCIe(Peripheral Component Interconnect Express), QPI(QuickPath Interconnect), 이더넷(Ethernet) 등과 같은 프로토콜들에 따라 CPU 과 상호접속 보드 사이의 통신을 지원할 수 있다. 뿐만 아니라, I/O 인터페이스는 CCIX(Cache Coherent Interconnect for accelerators) 및 GEN-Z와 같은 인터페이스 규격에 따라 CPU와 상 호접속 보드 사이의 통신을 지원할 수 있다. 한편, 본 발명의 상세한 설명에서는 구체적인 실시 예에 관해 설명하였으나, 본 발명의 범위에서 벗어나지 않는 한도 내에서 여러 가지 변형이 가능함은 물론이다. 그러므로, 본 발명의 범위는 설명된 실시 예에 국한되어 정 해져서는 안되며 후술하는 특허청구의 범위뿐만 아니라 이 특허청구의 범위와 균등한 것들에 의해 정해져야 한 다."}
{"patent_id": "10-2018-0167585", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시 예에 따른 메모리 시스템을 포함하는 데이터 처리 시스템의 구조를 나타내는 도면이다. 도 2는 데이터 속성에 따라 제1 및 제2 메모리 유닛에 데이터를 구분하여 저장하기 위한 어드레스 매핑을 설명 하기 위한 도면이다. 도 3은 본 발명의 일 실시예에 따른 데이터 컨트롤 유닛의 구조를 개략적으로 나타내는 도면이다. 도 4는 시스템 어드레스를 새로운 로컬 어드레스에 매핑하는 동작을 설명하기 위한 도면이다. 도 5 내지 도 6은 본 발명의 일 실시예에 따른 메모리 시스템의 라이트 동작을 나타내는 흐름도이다. 도 7은 본 발명의 일 실시예에 따른 메모리 시스템의 리드 동작을 나타내는 흐름도이다. 도 8은 본 발명의 일 실시예에 따른 메모리 시스템의 데이터 속성 업데이트 동작을 나타내는 흐름도이다. 도 9 내지 도 12는 본 발명의 일 실시예에 따른 메모리 시스템을 포함하는 데이터 처리 시스템의 구조를 나타내 는 도면이다."}
