{"patent_id": "10-2024-0042059", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0048509", "출원번호": "10-2024-0042059", "발명의 명칭": "데이터 처리 장치, 방법, 전자 기기, 저장 매체 및 컴퓨터 프로그램", "출원인": "쿤룬신 테크놀로지", "발명자": "샨 량"}}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "데이터 처리 장치로서,복수의 저장 공간을 포함하는 캐시 유닛; 및 프로세서를 포함하되, 상기 프로세서는,상기 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하며, - 여기서, 상기 I개의 저장 공간 그룹 중의 각저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함함 -;상기 각 저장 공간 그룹에 대해, 상기 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 상기 제1 저장 공간의 용량에 따라, 복수의 제1 초기규모 정보를 결정하며,상기 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 상기 제2 저장 공간에 대응하는 행렬인제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며,복수의 상기 제2 규모 정보와 복수의 상기 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를결정하는 동작을 실행하여 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻으며; 상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하도록 구성되며,I는 1보다 크거나 같은 정수인, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는 또한 상기 각 저장 공간 그룹에 대해,복수의 상기 제2 규모 정보와 적어도 하나의 제1 목표 규모 정보에 대응하는 복수의 상기 제1 초기 규모 정보에따라, 복수의 제1 목표 규모 정보를 결정하며,복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서, 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성되는, 데이터 처리장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는 또한 상기 각 저장 공간 그룹에 대해,복수의 상기 제2 규모 정보와 복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에서 제3 저장공간에 대응하는 행렬인 제3 행렬과 관련된 복수의 제3 규모 정보를 결정하며,복수의 상기 제1 목표 규모 정보와 복수의 상기 제3 규모 정보에 따라, 상기 복수의 제1 초기 메모리 접근 코스트에서 상기 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성되는, 데이터 처리장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2024-0048509-3-제3항에 있어서,상기 프로세서는 또한, 상기 I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 상기 목표 메모리접근 코스트를 결정하도록 구성되는, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 프로세서는 또한,상기 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 상기 제2 규모 정보 및 상기 제3 규모 정보에따라 행렬의 곱셈 동작을 실행하도록 구성되는, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 복수의 행렬은 승수 행렬, 피승수 행렬 및 결과 행렬을 포함하며, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 행렬, 상기 제2 행렬 및 상기 제3 행렬은 각각 제1 목표 행렬, 제2 목표 행렬 및 제3 목표 행렬인,데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 프로세서는 또한,상기 제3 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라 상기 제1 목표 행렬의 제1 부분 행렬을 상기 제1 저장 공간에 로드하며,상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라 상기 제2 목표 행렬의 제2 부분 행렬을상기 제2 저장 공간에 로드하며,상기 제1 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제3 목표 행렬의 제3 부분행렬을 얻으며,상기 제3 부분 행렬을 상기 제3 저장 공간에 써넣도록 구성되는, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 프로세서는 또한,상기 제1 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라 상기 제3 목표 행렬의 제3 부분 행렬을상기 제3 저장 공간에 로드하며,상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라 상기 제2 목표 행렬의 제2 부분 행렬을상기 제2 저장 공간에 로드하며,상기 제3 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제1 목표 행렬의 제1 부분행렬을 얻으며,상기 제1 부분 행렬을 상기 제1 저장 공간에 써넣도록 구성되는, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제6항에 있어서,상기 프로세서는 또한,공개특허 10-2024-0048509-4-상기 제2 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라 상기 제1 목표 행렬의 제1 부분 행렬을 상기 제1 저장 공간에 로드하며,상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라 상기 제3 목표 행렬의 제3 부분 행렬을상기 제3 저장 공간에 로드하며,상기 제1 부분 행렬과 상기 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제2 목표 행렬의 제2 부분행렬을 얻으며,상기 제2 부분 행렬을 상기 제2 저장 공간에 써넣도록 구성되는, 데이터 처리 장치."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제9항 중의 어느 하나의 데이터 처리 장치를 포함하는 전자 기기."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "데이터 처리 방법으로서,캐시 유닛의 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하는 것 - 여기서, 상기 I개의 저장 공간 그룹중의 각 저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함함 -;상기 각 저장 공간 그룹에 대해,상기 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 상기 제1 저장 공간의 용량에 따라 복수의 제1 초기규모 정보를 결정하며,상기 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 상기 제2 저장 공간에 대응하는 행렬인제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며,복수의 상기 제2 규모 정보와 복수의 상기 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를결정하는 동작을 실행하여, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻는 것;상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는 것을 포함하되, I는 1보다 크거나 같은 정수인, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 각 저장 공간 그룹에 대해, 또한복수의 상기 제2 규모 정보와 적어도 하나의 상기 제1 목표 규모 정보에 대응하는 복수의 상기 제1 초기 규모정보에 따라, 복수의 제1 목표 규모 정보를 결정하며,복수의 상기 제1 목표 규모 정보에 따라 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하는 것을 더 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리접근 코스트를 결정하는 것은,복수의 상기 제2 규모 정보와 복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에서 제3 저장공간에 대응하는 행렬인 제3 행렬과 관련된 복수의 제3 규모 정보를 결정하며,복수의 상기 제1 목표 규모 정보와 복수의 상기 제3 규모 정보에 따라, 상기 복수의 제1 초기 메모리 접근 코스공개특허 10-2024-0048509-5-트에서 상기 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 것을 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는것은,상기 I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 상기 목표 메모리 접근 코스트를 결정하는것을 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보, 상기 제2 규모 정보 및 상기 제3 규모 정보에 따라, 행렬의 곱셈 동작을 실행하는 것을 더 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 복수의 행렬은 승수 행렬, 피승수 행렬 및 결과 행렬을 포함하며, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 행렬, 상기 제2 행렬 및 상기 제3 행렬은 각각 제1 목표 행렬, 제2 목표 행렬 및 제3 목표 행렬인,데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 행렬 곱셈 동작을 실행하는 것은,상기 제3 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라, 상기 제1 목표 행렬의 제1 부분 행렬을 상기 제1 저장 공간에 로드하는 것;상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라, 상기 제2 목표 행렬의 제2 부분 행렬을상기 제2 저장 공간에 로드하는 것;상기 제1 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제3 목표 행렬의 제3 부분행렬을 얻는 것;상기 제3 부분 행렬을 상기 제3 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서,상기 행렬 곱셈 동작을 실행하는 것은,상기 제1 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라, 상기 제3 목표 행렬의 제3 부분 행렬을상기 제3 저장 공간에 로드하는 것;상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라, 상기 제2 목표 행렬의 제2 부분 행렬을상기 제2 저장 공간에 로드하는 것;상기 제3 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제1 목표 행렬의 제1 부분행렬을 얻는 것;상기 제1 부분 행렬을 상기 제1 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법.공개특허 10-2024-0048509-6-청구항 19 제16항에 있어서,상기 행렬 곱셈 동작을 실행하는 것은,상기 제2 목표 행렬이 상기 결과 행렬인 경우,상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라, 상기 제1 목표 행렬의 제1 부분 행렬을 상기 제1 저장 공간에 로드하는 것;상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라, 상기 제3 목표 행렬의 제3 부분 행렬을상기 제3 저장 공간에 로드하는 것;상기 제1 부분 행렬과 상기 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제2 목표 행렬의 제2 부분행렬을 얻는 것;상기 제2 부분 행렬을 상기 제2 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "전자 기기로서,적어도 하나의 프로세서; 및상기 적어도 하나의 프로세서와 통신 연결된 메모리를 포함하되, 상기 메모리에는 적어도 하나의 프로세서에 의해 실행 가능한 명령어를 저장되어 있고, 상기 명령어는 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서로 하여금 제11항 내지 제19항 중어느 하나의 데이터 처리 방법을 실행할 수 있게 하는 전자 기기."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "컴퓨터로 하여금 제11항 내지 제19항 중 어느 하나의 데이터 처리 방법을 실행하게 하기 위한 컴퓨터 명령어가저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2024-0042059", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "저장매체에 저장되어 있는 컴퓨터 프로그램으로서,프로세서에 의해 실행될 시에 제11항 내지 제19항 중 어느 하나의 데이터 처리 방법을 구현하는 컴퓨터 프로그램."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 데이터 처리 장치를 제공하며, 인공 지능"}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것으로, 특히 칩 기술 분야에 관한 것이다. 해당 장치는, 복수의 저장 공간을 포함하는 캐시 유닛; 및 프로세서를 포함하며, 상기 프로세서는, 복수 의 저장 공간에서 I개의 저장 공간 그룹을 결정하며; 각 저장 공간 그룹에 대해, 제1 행렬의 규모와 제1 저장 공 (뒷면에 계속) 대 표 도 - 도1"}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2024-0048509 간의 용량에 따라 복수의 제1 초기 규모 정보를 결정하며, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정 보에 따라, 제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며, 복수의 제2 규모 정보와 복수의 제1 초 기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를 결정하는 동작을 실행하여 각 저장 공간에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻으며; I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하도록 구성된다. 본 개시는 또한 데이터 처리 방법, 전자 기기, 저장 매체 및 컴퓨터 프로그램을 제공한다. CPC특허분류 G06F 16/24552 (2019.01) G06F 3/0604 (2013.01)명 세 서 청구범위 청구항 1 데이터 처리 장치로서, 복수의 저장 공간을 포함하는 캐시 유닛; 및 프로세서 를 포함하되, 상기 프로세서는, 상기 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하며, - 여기서, 상기 I개의 저장 공간 그룹 중의 각 저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함함 -; 상기 각 저장 공간 그룹에 대해, 상기 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 상기 제1 저장 공간의 용량에 따라, 복수의 제1 초기 규모 정보를 결정하며, 상기 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 상기 제2 저장 공간에 대응하는 행렬인 제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며, 복수의 상기 제2 규모 정보와 복수의 상기 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를 결정하는 동작을 실행하여 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻으며; 상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하도록 구 성되며, I는 1보다 크거나 같은 정수인, 데이터 처리 장치. 청구항 2 제1항에 있어서, 상기 프로세서는 또한 상기 각 저장 공간 그룹에 대해, 복수의 상기 제2 규모 정보와 적어도 하나의 제1 목표 규모 정보에 대응하는 복수의 상기 제1 초기 규모 정보에 따라, 복수의 제1 목표 규모 정보를 결정하며, 복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코 스트에서, 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성되는, 데이터 처리 장치. 청구항 3 제2항에 있어서, 상기 프로세서는 또한 상기 각 저장 공간 그룹에 대해, 복수의 상기 제2 규모 정보와 복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에서 제3 저장 공간에 대응하는 행렬인 제3 행렬과 관련된 복수의 제3 규모 정보를 결정하며, 복수의 상기 제1 목표 규모 정보와 복수의 상기 제3 규모 정보에 따라, 상기 복수의 제1 초기 메모리 접근 코스 트에서 상기 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성되는, 데이터 처리 장치. 청구항 4 제3항에 있어서, 상기 프로세서는 또한, 상기 I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 상기 목표 메모리 접근 코스트를 결정하도록 구성되는, 데이터 처리 장치. 청구항 5 제4항에 있어서, 상기 프로세서는 또한, 상기 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 상기 제2 규모 정보 및 상기 제3 규모 정보에 따라 행렬의 곱셈 동작을 실행하도록 구성되는, 데이터 처리 장치. 청구항 6 제5항에 있어서, 상기 복수의 행렬은 승수 행렬, 피승수 행렬 및 결과 행렬을 포함하며, 상기 목표 메모리 접근 코스트에 대응하 는 상기 제1 행렬, 상기 제2 행렬 및 상기 제3 행렬은 각각 제1 목표 행렬, 제2 목표 행렬 및 제3 목표 행렬인, 데이터 처리 장치. 청구항 7 제6항에 있어서, 상기 프로세서는 또한, 상기 제3 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라 상기 제1 목표 행렬의 제1 부분 행 렬을 상기 제1 저장 공간에 로드하며, 상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라 상기 제2 목표 행렬의 제2 부분 행렬을 상기 제2 저장 공간에 로드하며, 상기 제1 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제3 목표 행렬의 제3 부분 행렬을 얻으며, 상기 제3 부분 행렬을 상기 제3 저장 공간에 써넣도록 구성되는, 데이터 처리 장치. 청구항 8 제6항에 있어서, 상기 프로세서는 또한, 상기 제1 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라 상기 제3 목표 행렬의 제3 부분 행렬을 상기 제3 저장 공간에 로드하며, 상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라 상기 제2 목표 행렬의 제2 부분 행렬을 상기 제2 저장 공간에 로드하며, 상기 제3 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제1 목표 행렬의 제1 부분 행렬을 얻으며, 상기 제1 부분 행렬을 상기 제1 저장 공간에 써넣도록 구성되는, 데이터 처리 장치. 청구항 9 제6항에 있어서, 상기 프로세서는 또한,상기 제2 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라 상기 제1 목표 행렬의 제1 부분 행 렬을 상기 제1 저장 공간에 로드하며, 상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라 상기 제3 목표 행렬의 제3 부분 행렬을 상기 제3 저장 공간에 로드하며, 상기 제1 부분 행렬과 상기 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제2 목표 행렬의 제2 부분 행렬을 얻으며, 상기 제2 부분 행렬을 상기 제2 저장 공간에 써넣도록 구성되는, 데이터 처리 장치. 청구항 10 제1항 내지 제9항 중의 어느 하나의 데이터 처리 장치를 포함하는 전자 기기. 청구항 11 데이터 처리 방법으로서, 캐시 유닛의 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하는 것 - 여기서, 상기 I개의 저장 공간 그룹 중의 각 저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함함 -; 상기 각 저장 공간 그룹에 대해, 상기 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 상기 제1 저장 공간의 용량에 따라 복수의 제1 초기 규모 정보를 결정하며, 상기 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 상기 제2 저장 공간에 대응하는 행렬인 제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며, 복수의 상기 제2 규모 정보와 복수의 상기 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를 결정하는 동작을 실행하여, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻는 것; 상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는 것 을 포함하되, I는 1보다 크거나 같은 정수인, 데이터 처리 방법. 청구항 12 제11항에 있어서, 상기 각 저장 공간 그룹에 대해, 또한 복수의 상기 제2 규모 정보와 적어도 하나의 상기 제1 목표 규모 정보에 대응하는 복수의 상기 제1 초기 규모 정보에 따라, 복수의 제1 목표 규모 정보를 결정하며, 복수의 상기 제1 목표 규모 정보에 따라 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스 트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하는 것을 더 포함하는, 데이터 처 리 방법. 청구항 13 제12항에 있어서, 상기 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 것은, 복수의 상기 제2 규모 정보와 복수의 상기 제1 목표 규모 정보에 따라, 상기 각 저장 공간 그룹에서 제3 저장 공간에 대응하는 행렬인 제3 행렬과 관련된 복수의 제3 규모 정보를 결정하며, 복수의 상기 제1 목표 규모 정보와 복수의 상기 제3 규모 정보에 따라, 상기 복수의 제1 초기 메모리 접근 코스트에서 상기 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 것을 포함하는, 데이터 처리 방법. 청구항 14 제13항에 있어서, 상기 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는 것은, 상기 I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 상기 목표 메모리 접근 코스트를 결정하는 것을 포함하는, 데이터 처리 방법. 청구항 15 제14항에 있어서, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보, 상기 제2 규모 정보 및 상기 제3 규모 정 보에 따라, 행렬의 곱셈 동작을 실행하는 것을 더 포함하는, 데이터 처리 방법. 청구항 16 제15항에 있어서, 상기 복수의 행렬은 승수 행렬, 피승수 행렬 및 결과 행렬을 포함하며, 상기 목표 메모리 접근 코스트에 대응하 는 상기 제1 행렬, 상기 제2 행렬 및 상기 제3 행렬은 각각 제1 목표 행렬, 제2 목표 행렬 및 제3 목표 행렬인, 데이터 처리 방법. 청구항 17 제16항에 있어서, 상기 행렬 곱셈 동작을 실행하는 것은, 상기 제3 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라, 상기 제1 목표 행렬의 제1 부분 행 렬을 상기 제1 저장 공간에 로드하는 것; 상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라, 상기 제2 목표 행렬의 제2 부분 행렬을 상기 제2 저장 공간에 로드하는 것; 상기 제1 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제3 목표 행렬의 제3 부분 행렬을 얻는 것; 상기 제3 부분 행렬을 상기 제3 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법. 청구항 18 제16항에 있어서, 상기 행렬 곱셈 동작을 실행하는 것은, 상기 제1 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라, 상기 제3 목표 행렬의 제3 부분 행렬을 상기 제3 저장 공간에 로드하는 것; 상기 목표 메모리 접근 코스트에 대응하는 상기 제2 규모 정보에 따라, 상기 제2 목표 행렬의 제2 부분 행렬을 상기 제2 저장 공간에 로드하는 것; 상기 제3 부분 행렬과 상기 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제1 목표 행렬의 제1 부분 행렬을 얻는 것; 상기 제1 부분 행렬을 상기 제1 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법.청구항 19 제16항에 있어서, 상기 행렬 곱셈 동작을 실행하는 것은, 상기 제2 목표 행렬이 상기 결과 행렬인 경우, 상기 목표 메모리 접근 코스트에 대응하는 상기 제1 목표 규모 정보에 따라, 상기 제1 목표 행렬의 제1 부분 행 렬을 상기 제1 저장 공간에 로드하는 것; 상기 목표 메모리 접근 코스트에 대응하는 상기 제3 규모 정보에 따라, 상기 제3 목표 행렬의 제3 부분 행렬을 상기 제3 저장 공간에 로드하는 것; 상기 제1 부분 행렬과 상기 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 상기 제2 목표 행렬의 제2 부분 행렬을 얻는 것; 상기 제2 부분 행렬을 상기 제2 저장 공간에 써넣는 것을 포함하는, 데이터 처리 방법. 청구항 20 전자 기기로서, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신 연결된 메모리 를 포함하되, 상기 메모리에는 적어도 하나의 프로세서에 의해 실행 가능한 명령어를 저장되어 있고, 상기 명령 어는 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서로 하여금 제11항 내지 제19항 중 어느 하나의 데이터 처리 방법을 실행할 수 있게 하는 전자 기기. 청구항 21 컴퓨터로 하여금 제11항 내지 제19항 중 어느 하나의 데이터 처리 방법을 실행하게 하기 위한 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체. 청구항 22 저장매체에 저장되어 있는 컴퓨터 프로그램으로서, 프로세서에 의해 실행될 시에 제11항 내지 제19항 중 어느 하나의 데이터 처리 방법을 구현하는 컴퓨터 프로그 램. 발명의 설명 기 술 분 야 본 개시는 인공 지능 기술 분야에 관한 것으로, 특히 칩 기술 분야에 관한 것이다. 보다 구체적으로는, 본 개시 는 데이터 처리 장치, 방법, 전자 기기, 저장 매체 및 컴퓨터 프로그램을 제공한다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능 기술의 발전에 따라，인공 지능 칩의 하드웨어 자원에 따라 딥러닝 모델의 연산자를 조정할 수 있다. 본 개시는 데이터 처리 장치, 방법, 전자 기기, 저장 매체 및컴퓨터 프로그램을 제공한다. 본 개시의 일 측면에 따르면, 데이터 처리 장치를 제공하며, 해당 장치는, 복수의 저장 공간을 포함하는 캐시 유닛; 및 프로세서를 포함하며, 상기 프로세서는, 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하며 - 여 기서, I개의 저장 공간 그룹 중의 각 저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함함 -; 각 저장 공 간 그룹에 대해, 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 제1 저장 공간의 용량에 따라 복수의 제1 초기 규모 정보를 결정하며, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 제2 저장 공간에대응하는 행렬인 제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트(memory access cost, MAC)을 결정하는 동작을 실행하여 각 저장 공간에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻으며; I개의 저장 공간 그룹의 전 부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하도록 구성되며, 여기서, I 는 1보다 크 거나 같은 정수인 프로세서를 포함한다. 본 개시의 다른 측면에 따르면, 전자 기기를 제공하며, 본 개시가 제공하는 데이터 처리 장치를 포함한다. 본 개시의 일 측면에 따르면, 데이터 처리 방법을 제공하며, 해당 방법은, 캐시 유닛의 복수의 저장 공간에서 I 개의 저장 공간 그룹을 결정하는 것 - 여기서, I개의 저장 공간 그룹 중의 각 저장 공간 그룹은 제1 저장 공간 과 제2 저장 공간을 포함함 -; 각 저장 공간 그룹에 대해, 제1 저장 공간에 대응하는 행렬인 제1 행렬의 규모와 제1 저장 공간의 용량에 따라 복수의 제1 초기 규모 정보를 결정하며, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 제2 저장 공간에 대응하는 행렬인 제2 행렬과 관련된 적어도 하나의 제2 규모 정보를 결정하며, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따라, 복수의 제1 초기 메모리 접근 코스트를 결정하는 동작을 실행하여, 각 저장 공간에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻는 것; I개의 저 장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는 것을 포함하며, I 는 1보다 크거나 같은 정수이다. 본 개시의 다른 측면에 따르면, 적어도 하나의 프로세서; 및 적어도 하나의 프로세서와 통신 연결된 메모리를 포함하는 전자 기기를 제공한다. 여기서, 메모리에는 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저 장되어 있고, 명령어는 적어도 하나의 프로세서에 의해 실행되어, 적어도 하나의 프로세서로 하여금 본 개시에 따라 제공된 방법을 실행할 수 있게 한다. 본 개시의 다른 측면에 따르면, 컴퓨터로 하여금 본 개시가 제공한 방법을 실행하게 하기 위한 컴퓨터 명령어가 저장되어 있는 비휘발성 컴퓨터 판독 가능 저장 매체를 제공한다. 본 개시의 다른 측면에 따르면, 저장매체에 저장되어 있는 컴퓨터 프로그램을 제공하여, 이 컴퓨터 프로그램은, 프로세서에 의해 실행시에 본 개시가 제공한 방법을 구현한다. 이 부분에서 설명한 내용은 본 개시의 실시예의 핵심 또는 중요한 특징들을 표시하기 위한 것이 아니며, 본 개 시의 범위를 한정하는 데 사용하지 않는다는 것을 이해해야 한다. 본 개시의 기타 특징은 아래의 명세서를 통해 쉽게 이해할 수 있게 될 것이다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 발명의 예시적인 실시예를 상세히 설명하기로 한다. 이해를 돕기 위하여 그 중에는 본 개시의 실시예의 다양한 세부사항이 포함되어 있으며, 이들을 단지 예시적인 것으로 간주해야 한다. 따라서, 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자는, 본 개시의 범위 및 사상을 벗어나는 것이 없이 여기서 설명된 실시예에 대해 다양한 변경 및 수정을 진행할 수 있음을 인식해야 한다. 마찬가지로, 명확 하고 간결하게 하기 위하여, 아래 설명 중에는 공지 기능 또는 구성에 대한 설명은 생략하도록 한다. 딥러닝 모델의 일부 연산자는 액세스 집약적 연산자일 수 있다. 액세스 집약적 연산자는 예를 들면 일반 행렬 곱셈（General Matrix Multiplication，GEMM）연산자를 포함할 수 있다. 일반 행렬 곱셈 연산자는 피승수 행렬 A, 승수 행렬 B 및 결과 행렬 C와 관련될 수 있다. 일반 행렬 곱셈 연산 자의 계산 과정은 다음과 같이 구현될 수 있다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "(수식 1) 피승수 행렬 A의 규모(shape)는 m×k일 수 있고, 승수 행렬 B의 규모는 k×n일 수 있고, 결과 행렬 C의 규모는 m×n일 수 있다. 피승수 행렬 A와 승수 행렬 B는 각각 일반 행렬 곱셈 연산자의 두 개의 입력 행렬로 사용할 수 있다. 일부 실시예에서, 두 개의 입력 행렬 중 하나의 입력 행렬을 분해하여 해당 입력 행렬의 복수의 부분 행렬을 얻 을 수 있다. 예를 들면, 피승수 행렬 A를 복수의 부분 행렬로 분해할 수 있다. 레벨1 캐시 유닛(Level 1 Cache，L1 Cache)에 서 복수의 저장 공간을 결정하여, 피승수 행렬 A의 부분 행렬, 승수 행렬 B 및 결과 행렬 C를 저장하는데 각각 사용한다. 따라서, 레벨1 캐시 유닛의 이용률을 향상시켜, 외부 저장 유닛(예를 들면 비디오 메모리) 중의 원래 행렬에 대한 액세스를 줄일 수 있다. 피승수 행렬 A의 부분 행렬의 규모는 예를 들면 l_m×k일 수 있다. 피승수 행렬 A의 부분 행렬은 레벨1 캐시 유 닛의 하나의 저장 공간에 저장할 수 있다. 복수의 부분 행렬을 각각 승수 행렬 B에 곱하고, 메모리 접근 코스트 매개변수 값 LS_A는 다음과 같을 수 있다. (수식 2) 행렬의 각 요소의 데이터량이 결정되면, 메모리 접근 코스트 매개변수 값과 해당 데이터량의 곱이 메모리 접근 코스트일 수 있음을 이해할 수 있다. 각 요소의 데이터량은 예를 들면 32비트(bit)일 수 있다. 예를 들면, 승수 행렬 B를 복수의 부분 행렬로 분해할 수 있다. 레벨1 캐시 유닛에서 복수의 저장 공간을 결정 하여, 피승수 행렬 A, 승수 행렬 B의 부분 행렬 및 결과 행렬 C를 저장하는 데 각각 사용한다. 이렇게 함으로써, 마찬가지로 레벨1 캐시 유닛의 이용률을 향상시켜, 외부 저장 유닛(예를 들면 비디오 메모리)의 원래 행렬에 대한 액세스를 줄일 수 있다. 승수 행렬 B의 부분 행렬의 규모는 예를 들면 k×l_n일 수 있다. 승수 행렬 B의 부분 행렬은 레벨1 캐시 유닛의 하나의 저장 공간에 저장할 수 있다. 복수의 부분 행렬을 각각 피승수 행렬 A에 곱하고, 메모리 접근 코스트 매 개변수 값 LS_B는 다음과 같을 수 있다. (수식 3) 따라서, 하나의 입력 행렬을 분해할 경우, 최소 메모리 접근 코스트 매개변수 값 LS_AorB는 다음과 같을 수 있 다. (수식 4) 그러나, 하나의 입력 행렬만 분해하는 경우, 분해되지 않은 행렬은 레벨1 캐시 유닛에 저장하기가 어려울 수 있 으며, 외부 저장 유닛으로부터 해당 분해되지 않은 행렬에 여러 번 반복적으로 액세스해야 할 수 있으므로, 메 모리 접근 코스트가 증가할 수 있다. 또한, 결과 행렬에 대응하는 저장 공간이 충분히 이용되지 않아, 저장 공 간이 충분히 이용되지 않는다. 도 1은 본 개시의 일 실시예에 따른 데이터 처리 장치의 개략 블록도이다. 도 1에 도시된 바와 같이, 장치는 캐시 유닛 및 프로세서를 포함할 수 있다. 캐시 유닛은 복수의 저장 공간을 포함할 수 있다. 본 개시의 실시예에서, 복수의 저장 공간은 각각 복수의 행렬에 대응할 수 있다. 예를 들면, 복수의 저장 공간에는 저장 공간 L1A, 저장 공간 L1B 및 저장 공간 L1C가 포함될 수 있으며, 각각 상술한 피승수 행렬 A, 승수 행렬 B 및 결과 행렬 C에 대응할 수 있다.프로세서는 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정하도록 구성될 수 있다. 본 개시의 실시예 에서, I개의 저장 공간 그룹 중의 각 저장 공간은 제1 저장 공간과 제2 저장 공간을 포함할 수 있다. I는 1보다 크거나 같은 정수일 수 있다. 예를 들면, 복수의 행렬이 3개의 행렬일 때, I는 6일 수 있다. 행렬의 수가 3인 것은 예시일 뿐임을 이해할 수 있다. 복수의 행렬은 2개, 4개 또는 더 많은 행렬일 수도 있다. 프로세서는 각 저장 공간 그룹에 대해, 제1 행렬의 규모와 제1 저장 공간의 용량에 따라, 복수의 제1 초기 규모 정보를 결정하며, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라 적어도 하나의 제2 규모 정보를 결정하며, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코 스트를 결정하는 동작을 실행하여, 각 저장 공간에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻도록 구 성될 수 있다. 본 개시의 실시예에서, 제1 행렬은 제1 저장 공간에 대응하는 행렬이다. 제1 저장 공간에 대응하는 행렬이 피승 수 행렬 A인 것을 예로 들면, 제1 저장 공간은 저장 공간 L1A일 수 있다. 피승수 행렬 A의 규모와 저장 공간 L1A의 용량에 따라 복수의 제1 초기 규모 정보를 결정할 수 있다. 제1 초기 규모 정보에 대응하는 부분 행렬의 데이터량은 제1 저장 공간의 용량보다 작거나 같다. 제1 초기 규모 정보는 제1 초기 행 수와 제1 초기 열 수를 포함할 수 있다. 예를 들면, 피승수 행렬 A의 경우, 행 수 m=20이고 열 수 k=20일 때, 적어도 두 개의 제1 초기 규모 정보를 결정할 수 있다. 제1 초기 규모 정보large_A1은 제1 초기 행 수 large_am1과 제1 초기 열 수 large_ak1을 포함할 수 있다. 제1 초기 행 수 large_am1은 4일 수 있고, 제1 초기 열 수 large_ak1은 5일 수 있다. 제1 초기 규모 정보 large_A2는 제1 초기 행 수 large_am2와 제1 초기 열 수 large_ak2를 포함할 수 있 다. 제1 초기 행 수 large_am2는 2일 수 있고, 제1 초기 열 수 large_ak2는 10일 수 있다. 본 개시의 실시예에서, 제2 규모 정보는 제2 행렬과 관련되며, 제2 행렬은 제2 저장 공간에 대응하는 행렬이다. 제2 저장 공간에 대응하는 행렬이 승수 행렬 B인 것을 예로 들면, 제2 저장 공간은 저장 공간 L1B일 수 있다. 승수 행렬 B의 규모와 저장 공간 L1B의 용량에 따라 복수의 제2 규모 정보를 결정할 수 있다. 제2 규모 정보에 대응하는 부분 행렬의 데이터량은 제2 저장 공간의 용량보다 작거나 같다. 제2 규모 정보는 제2 행 수와 제2 열 수를 포함할 수 있다. 예를 들면, 승수 행렬 B의 경우, 행 수 k=20이고 열 수 n=20일 때, 제1 초기 규모 정보 large_A2에 따라 적어도 두 개의 제2 규모 정보를 결정할 수 있다. 제2 규모 정보 little_B1는 제2 행 수 little_bk1와 제2 열 수 little_bn1를 포함할 수 있다. 제2 행 수 little_bk1은 2일 수 있고, 제2 열 수 little_bn1은 5일 수 있다. 제2 규모 정보 little_B2는 제2 행 수little_bk2와 제2 열 수 little_bn2를 포함할 수 있다. 제2 행 수 little_bk2는 5일 수 있고, 제2 열 수 little_bn2는 4일 수 있다. 본 개시의 실시예에서, 제1 행렬의 규모, 제2 행렬의 규모, 제3 행렬의 규모, 제1 초기 규모 정보 및 제2 규모 정보에 따라, 제1 초기 메모리 접근 코스트를 얻는다. 예를 들면, 제1 행렬이 상술한 피승수 행렬 A이고 제2 행 렬이 상술한 승수 행렬 B인 경우, 제3 행렬은 상술한 결과 행렬 C일 수 있다. 3 개의 행렬의 각자의 규모, 제1 초기 규모 정보 large_A2 및 제2 규모 정보 little_B1에 따라, 하나의 메모리 접근 코스트 매개변수 값 LS_A2B1 을 결정할 수 있다. 해당 메모리 접근 코스트 매개변수 값에 따라 메모리 접근 코스트를 결정할 수 있다. 프로세서는는 또한 I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스 트를 결정하도록 구성될 수 있다. 예를 들면, I=6일 때, 서로 다른 저장 공간 그룹에 대해 결정한 메모리 접근 코스트의 수는 다를 수 있다. 최소 메모리 접근 코스트를 목표 메모리 접근 코스트으로 할 수 있다. 본 개시의 실시예를 통해, 행렬 곱셈 연산자와 관련된 복수의 행렬 중의 적어도 2 개의 행렬을 분할함으로써, 메모리 접근 코스트를 효과적으로 감소시킬 수 있고, 행렬 곱셈 연산자의 실행 효율을 향상하는 데 도움이 될 수 있으며, 나아가 데이터 처리 장치의 효율을 향상시킬 수 있다. 위에서 본 개시의 데이터 처리 장치에 대해 설명하였음을 이해할 수 있으며, 다음은 도 2a 내지 도 2c와 결합하 여 본 개시의 프로세서에 대해 추가로 설명한다. 도 2a는 본 개시의 일 실시예에 따른 제1 초기 규모 정보의 개략도이다. 도 2a에 도시된 바와 같이, 피승수 행렬 A의 규모는 m×k일 수 있고, 승수 행렬 B의 규모는 k×n일 수 있고, 결과 행렬 C의 규모는 m×n일 수 있다. 예를 들면, m=10, n=10, k=10이다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해， 제1 행렬의 규모와 제1 저장 공간의 용량에 따 라 복수의 제1 초기 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 제1 행렬이 피승수 행렬 A 인 것을 예로 들면, 제1 초기 규모 정보 large_A3은 제1 초기 행 수 large_am3과 제1 초기 열 수 large_ak3을포함할 수 있다. 제1 초기 행 수 large_am3은 예를 들면 2일 수 있고, 제1 초기 열 수 large_ak3은 예를 들면 5 일 수 있다. 제1 초기 규모 정보 large_A3에 대응하는 제1 초기 부분 행렬과 제1 초기 부분 행렬은 도 2a에 도시된 바와 같다. 제1 초기 부분 행렬의 데이터량은 예를 들면 저장 공간 L1A와 일치할 수 있으며, 원 래 행렬을 위해 설치한 캐시 공간을 충분히 이용할 수 있다. 본 개시의 실시예를 통해, 제1 행렬을 위해 설치한 캐시 공간을 충분히 이용할 수 있으며, 캐시 공간의 이용률을 향상시키는 데 도움이 된다. 도 2a에 도시된 바와 같이, 제1 초기 규모 정보 large_A3에 기반하여 승수 행렬 B의 제2 초기 부분 행렬의 제2 행 수는 최대로 large_ak3일 수 있고, 제2 열 수는 최대로 n일 수 있다. 해당 제2 초기 부분 행렬의 데이터 량은 제2 저장 공간의 용량보다 클 수 있으며, 캐시 유닛의 저장 자원을 더욱 효율적으로 이용하기 위해 제2 행 렬과 관련된 제2 규모 정보를 확인할 수 있다. 다음은 도 2b와 결합하여 설명한다. 도 2b는 본 개시의 일 실시예에 따른 제2 규모 정보의 개략도이다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해, 각 제1 초기 규모 정보에 따라 적어도 하나의 제 2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 각 제1 초기 규모 정보와 제2 저장 공 간의 용량에 따라 적어도 하나의 제2 규모 정보를 결정할 수 있다. 제2 행렬이 승수 행렬 B인 것을 예로 들면, 제1 초기 규모 정보 large_A3의 제1 초기 열 수 large_ak3과 제2 저장 공간의 용량에 따라 제2 규모 정보 little_B3를 결정할 수 있다. 제2 규모 정보 little_B3은 제2 행 수little_bk3과 제2 열 수 little_bn3을 포함 할 수 있다. 제2 행 수 little_bk3은 5일 수 있고, 제2 열 수 little_bn3은 2일 수 있다. 제2 초기 규모 정보 little_B3에 대응하는 제2 부분 행렬은 도 2b에 도시된 바와 같다. 이어서, 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초 기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제1 행렬이 피승수 행렬 A인 경우, 제1 초기 규모 정보 large_A3에 따라 제1 부분 행렬을 각각 여러 번 로드하면, 제1 행렬의 총 메모리 접근 코스트는 변하지 않으며, 메모리 접근 코스트 매개변수 값 Load_A는 다음과 같다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "(수식 5) 상술한 바와 같이, m=k=10, 메모리 접근 코스트 매개변수 값 Load_A는 100일 수 있다. 제2 행렬이 승수 행렬 B인 경우, 제2 규모 정보 little_B3에 따라 제2 부분 행렬을 로드하면, 행렬 곱셈 규칙에 따라 제1 초기 부분 행렬은 제2 부분 행렬과 곱할 수 있고, 제2 초기 부분 행렬도 제2 부분 행렬과 곱할 수 있다. 이렇게 함으로써, 제2 부분 행렬은 재사용될 수 있다. 이 경우, 메모리 접근 코스트 매개변수 값 Load_B는 다음과 같을 수 있다. (수식 6) little_k가 제2 행 수 little_bk3, little_n이 제2 열 수 little_bn3, large_m가 제1 초기 행 수 large_am3이 고, large_k가 제1 초기 열 수 large_ak3인 것을 예로 들면, m=k=n=10, little_bk3=5, little_bn3=2, large_am3=2 그리고 large_ak3=5이면, 메모리 접근 코스트 매개변수 값 Load_B는420일 수 있다. 제3 행렬이 결과 행렬 C이고 제3 저장 공간의 용량이 충분한 경우, 제3 행렬의 총 메모리 접근 코스트는 변하지 않으며, 메모리 접근 코스트 매개변수 값 Store_C는 다음과 같을 수 있다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "(수식 7) 상술한 바와 같이, m=n=10, 메모리 접근 코스트 매개변수 값 Store_C는 100일 수 있다. 제1 행렬 A, 제2 행렬 B 및 제3 행렬 C의 경우, 총 메모리 접근 코스트 매개변수 값 LS_ABC는 다음과 같을 수 있다."}
{"patent_id": "10-2024-0042059", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "(수식 8) Load_A=100, Load_B=420 및 Store_C=100의 경우, 총 메모리 접근 코스트 매개변수 값 LS_ABC는 620일 수 있다. 총 메모리 접근 코스트 매개변수 값과 행렬의 각 요소의 데이터량에 따라, 초기 메모리 접근 코스트를 결정할수 있다. 또 예를 들면, 피승수 행렬 A만을 분해하면, 상술한 식 2에 따라, m=k=n=10, l_m=2의 경우, 총 메모리 접근 코 스트 매개변수 값 LS_A가 700인 것을 결정할 수 있다. 따라서, 적어도 두 개의 행렬을 분해하면 메모리 접근 코 스트를 효과적으로 줄이고 액세스 효율을 향상시킬 수 있다. 위에서 제1 초기 규모 정보 large_A3과 제2 규모 정보 little_B3에 기반하여 제1 초기 메모리 접근 코스트를 결 정하였음을 이해할 수 있다. 본 개시의 실시예에서, 복수의 제1 초기 규모 정보와 복수의 제2 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트를 결정할 수 있다. 행렬 곱셈의 실행 효율을 더욱 향상시키기 위해 제1 초기 부분 행렬을 추가로 분할하여 행렬 곱셈 동작을 병렬 로 실행할 수 있다. 다음은 도 2c와 결합하여 추가로 설명한다. 도 2c는 본 개시의 일 실시예에 따른 제3 규모 정보의 개략도이다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따라, 복수의 제1 목표 규모 정보를 결정하는 동작을 실행하도록 구성된다. 예를 들면, 제1 초기 규모 정보는 적어도 하나의 제1 목표 규모 정보에 대응한다. 제1 초기 규모 정보에 대응하는 제2 규모 정보와 해당 제1 초기 규모 정보에 따라, 해당 제1 초기 규모 정보에 대응하는 제1 목표 규모 정보를 결정할 수 있다. 도 2c에 도시된 바와 같이, 제2 규모 정보 little_B3의 제2 행 수 little_bk3이 5인 경우, 제1 초기 규모 정보 large_A3의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예 를 들면 제1 목표 규모 정보 little_A31과 제1 목표 규모 정보 little_A32를 포함할 수 있다. 제1 목표 규모 정 보 little_A31은 제1 목표 행 수 little_am31(예를 들면 1)과 제1 목표 열 수 little_ak31(예를 들면 5)을 포 함할 수 있다. 제1 목표 규모 정보 little_A32는 제1 목표 행 수 little_am32(예를 들면 2)와 제1 목표 열 수 little_ak32(예를 들면 5)를 포함할 수 있다. 제1 목표 규모 정보 little_A31에 대응하는 제1 목표 부분 행렬 은 도 2c에 도시된 바와 같다. 본 개시의 실시예를 통해, 제1 부분 행렬을 추가로 분할할 수 있으며, 로 드-컴퓨팅-저장(load_compute_store) 병렬 기술에 기반하여 행렬 곱셈 동작의 병렬을 구현할 수 있어, 데이터 처리 장치의 실행 효율을 향상시키는 데 도움이 된다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제1 목표 규모 정보에 따라, 각 저 장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트 를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라, 복수의 제3 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 복수의 제3 규모 정보는 제3 행렬 과 관련되며, 제3 행렬은 각 저장 공간 그룹에서 제3 저장 공간에 대응하는 행렬이다. 제3 행렬이 결과 행렬 C인 경우, 제2 규모 정보 little_B3과 제1 목표 규모 정보 little_A32에 따라, 제3 규모 정보 little_C32 를 결정할 수 있다. 제3 목표 규모 정보 little_C32에 대응하는 제3 부분 행렬은 도 2c에 도시된 바와 같 다. 예를 들면, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제1 목표 규모 정보와 복수의 제3 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하도록 구성될 수 있다. 저장 유닛의 매개변수, 제1 목표 규모 정보 및 복수의 제3 규모 정보에 기반하여, 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하여, 저장 정렬 제한을 충족시키고, 저장 특성에 부합되며 저장 채널 충돌을 피할 수 있다. 저장 유닛은 예를 들면 비디오 메모 리일 수 있다. 본 개시의 실시예를 통해, 제2 메모리 접근 코스트에 대응하는 행렬의 규모를 저장 유닛과 일치 시켜, 데이터 처리 장치의 안정성을 향상시키는 데 도움이 될 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬이 피승수 행렬 A이고 제2 행렬이 승수 행렬 B인 것을 예시로 본 개시에 대하여 설명하였으나 본 개시는 이에 한정되지 않으며, 제1 행렬이 피승수 행렬 A인 경우, 제2 행렬은 결과 행 렬 C일 수도 있으며, 아래에서 추가로 설명한다. 본 개시의 실시예에서, 예를 들면 상술한 제1 초기 규모 정보 large_A3을 결정한 후, 프로세서는 각 저장 공간 그룹에 대해, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라 적어도 하나의 제2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제2 행렬이 결과 행렬 C인 경우, 제1 초기 규모 정보 large_A3의 제1 초기 행 수 large_am3에 따라, 결과 행렬 C의 제2 부분 행렬의 제2 행 수는 최대로 large_am3 일 수 있으며, 제2 열 수는 최대로 n일 수 있다. 제1 초기 규모 정보 large_A3의 제1 초기 행 수 large_ak3과제2 저장 공간의 용량에 따라, 제2 규모 정보 little_C3을 결정할 수 있다. 제2 규모 정보 little_C3은 제2 행 수little_cm3과 제2 열 수 little_cn3을 포함할 수 있다. 제2 행 수 little_cm3은 제1 초기 행 수 large_am3보 다 작거나 같을 수 있다. 제2 열 수 little_cn3은 n보다 작을 수 있다. 제1 초기 규모 정보 large_A3과 제2 규모 정보 little_C3에 따라 제1 초기 메모리 접근 코스트를 결정할 수 있 다. 이어서, 행렬 곱셈 동작을 병렬로 실행하기 위해 제1 초기 부분 행렬을 추가로 분할할 수 있다. 본 개시의 실시 예에서, 프로세서는 또한 각 저장 공간 그룹에 대해， 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따 라 복수의 제1 목표 규모 정보를 결정하는 동작을 실행하도록 구성된다. 예를 들면, 제2 규모 정보 little_C3의 제2 행 수 little_cm3에 따라 제1 초기 규모 정보 large_A3의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예를 들면 제1 목표 규모 정보 little_A33과 제1 목표 규모 정 보 little_A34를 포함할 수 있다. 제1 목표 규모 정보 little_A33은 제1 목표 행 수 little_am33과 제1 목표 열 수 little_ak33을 포함할 수 있다. 제1 목표 규모 정보 little_A34는 제1 목표 행 수 little_am34와 제1 목 표 열 수 little_ak34를 포함할 수 있다. 제1 목표 행 수는 제2 행 수보다 작거나 같을 수 있다. 제1 목표 열 수는 제1 초기 열 수보다 작을 수 있다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라 복수의 제3 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제3 행렬이 승수 행렬 B인 경우, 제2 규모 정보 little_C3과 제1 목표 규모 정보 little_A34에 따라 제3 규모 정보 little_B34를 결정할 수 있다. 제3 규모 정보 little_B34의 제3 행 수 little_bk34는 예를 들면 제1 목표 규모 정보 little_A34의 제1 목표 열 수 little_ak34와 일치할 수 있다. 제3 규모 정보 little_B34의 제3 열 수 little_bn34는 예를 들면 제2 규모 정보 little_C3의 제2 열 수 little_cn3과 일치할 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬이 피승수 행렬 A인 것을 예시로 본 개시에 대하여 설명하였으나, 본 개 시는 이에 한정되지 않으며, 제1 행렬은 승수 행렬 B 또는 결과 행렬 C일 수도 있다. 다음은 제1 행렬이 승수 행렬 B인 것을 예시로 본 개시를 추가로 설명한다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해， 제1 행렬의 규모와 제1 저장 공간의 용량에 따 라 복수의 제1 초기 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 제1 행렬이 승수 행렬 B인 경우, 제1 초기 규모 정보 large_B4는 제1 초기 행 수 large_bk4와 제1 초기 열 수 large_bn4를 포함할 수 있다. 제1 초기 규모 정보 large_B4에 대응하는 제1 초기 부분 행렬의 데이터량은 예를 들면 저장 공간 L1B와 일치할 수 있으며, 원래 행렬을 위해 설치한 캐시 공간을 충분히 이용할 수 있다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해, 각 제1 초기 규모 정보에 따라 적어도 하나의 제 2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 각 제1 초기 규모 정보와 제2 저장 공 간의 용량에 따라 적어도 하나의 제2 규모 정보를 결정할 수 있다. 제2 행렬이 피승수 행렬 A인 것을 예로 들면, 제1 초기 규모 정보 large_B4에 기반하면, 피승수 행렬 A의 제2 부분 행렬의 제2 행 수는 최대로 m일 수 있으며, 제2 열 수는 최대로 large_bk4일 수 있다. 제1 초기 규모 정보 large_B4의 제1 초기 행 수 large_bk4 와 제2 저장 공간의 용량에 따라 제2 규모 정보 little_A4를 결정할 수 있다. 제2 규모 정보 little_A4는 제2 행 수 little_am4와 제2 열 수 little_ak4를 포함할 수 있다. 제2 열 수 little_ak4는 제1 초기 행 수 large_bk4보다 작거나 같을 수 있다. 제2 행 수 little_am3은 m보다 작을 수 있다. 이어서, 행렬 곱셈 동작을 병렬로 실행하기 위해 제1 초기 부분 행렬을 추가로 분할할 수 있다. 본 개시의 실시 예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따 라 복수의 제1 목표 규모 정보를 결정하는 동작을 실행하도록 구성된다. 예를 들면, 제2 규모 정보 little_A4의 제2 열 수 little_ak4에 따라, 제1 초기 규모 정보 large_B4의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예를 들면 제1 목표 규모 정보 little_B41과 제1 목표 규모 정 보 little_B42를 포함할 수 있다. 제1 목표 규모 정보 little_B41은 제1 목표 행 수 little_bk41과 제1 목표 열 수 little_bn41을 포함할 수 있다. 제1 목표 규모 정보 little_B42는 제1 목표 행 수 little_bk42와 제1 목 표 열 수 little_bn42를 포함할 수 있다. 제1 목표 열 수는 제1 초기 열 수보다 작을 수 있다. 제1 목표 행 수 는 제2 열 수보다 작거나 같을 수 있다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라, 복수의 제3 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제3 행렬이 결과 행렬 C인 경우, 제2 규모 정보 little_A4와 제1 목표 규모 정보 little_B41에 따라 제3 규모 정보 little_C41을 결정할 수 있다. 제3 규모 정보 little_C41의 제3 열 수 little_cn41는 예를 들면 제1 목표 규모 정보 little_B41의 제1 목표 열 수 little_bn41과 일치할 수 있다. 제3 규모 정보 little_C41의 제3 행 수 little_cm41은 예를 들면 제2 규모 정보 little_A4의 제2 열 수 little_am4와 일치할 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬이 승수 행렬 B이고 제2 행렬이 피승수 행렬 A인 것을 예시로 본 개시에 대하여 추가로 설명하였으나, 본 개시는 이에 한정되지 않으며, 제1 행렬이 승수 행렬 B인 경우, 제2 행렬은 결 과 행렬 C일 수도 있으며, 아래에서 추가로 설명한다. 본 개시의 실시예에서, 예를 들면 상술한 제1 초기 규모 정보 large_B4를 결정한 후, 프로세서는 각 저장 공간 그룹에 대해, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라, 적어도 하나의 제2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제2 행렬이 결과 행렬 C인 경우, 제1 초기 규모 정보 large_B4의 제1 초기 열 수 large_bn4에 따라, 결과 행렬 C의 제2 부분 행렬의 제2 행 수는 최대로 m일 수 있으 며, 제2 열 수는 최대로 large_bn4일 수 있다. 제1 초기 규모 정보 large_B4의 제1 초기 열 수 large_bn4와 제 2 저장 공간의 용량에 따라 제2 규모 정보 little_C4를 결정할 수 있다. 제2 규모 정보 little_C4는 제2 행 수 little_cm4와 제2 열 수 little_cn4를 포함할 수 있다. 제2 행 수 little_cm3은 m보다 작을 수 있다. 제2 열 수 little_cn3은 제2 열 수 little_cn4보다 작거나 같을 수 있다. 제1 초기 규모 정보 large_B4와 제2 규모 정보 little_C4에 따라 제1 초기 메모리 접근 코스트를 결정할 수 있 다. 이어서, 행렬 곱셈 동작을 병렬로 실행하기 위해 제1 초기 부분 행렬을 추가로 분할할 수 있다. 본 개시의 실시 예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따 라 복수의 제1 목표 규모 정보를 결정하는 동작을 실행하도록 구성된다. 예를 들면, 제2 규모 정보 little_C4의 제2 열 수 little_cn4에 따라 제1 초기 규모 정보 large_B4의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예를 들면 제1 목표 규모 정보 little_B43과 제1 목표 규모 정 보 little_B44를 포함할 수 있다. 제1 목표 규모 정보 little_B43은 제1 목표 행 수 little_bk43과 제1 목표 열 수 little_bn43을 포함할 수 있다. 제1 목표 규모 정보 little_B44는 제1 목표 행 수 little_bk44와 제1 목 표 열 수 little_bn44를 포함할 수 있다. 제1 목표 열 수는 제2 열 수보다 작거나 같을 수 있다. 제1 목표 행 수는 제1 초기 행 수보다 작을 수 있다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라, 복수의 제3 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제3 행렬 이 피승수 행렬 A인 경우, 제2 규모 정보 little_C4와 제1 목표 규모 정보 little_B44에 따라 제3 규모 정보 little_A44를 결정할 수 있다. 제3 규모 정보 little_A44의 제3 행 수 little_am44는 예를 들면 제2 규모 정보 little_C4의 제2 행 수 little_cm4와 일치할 수 있다. 제3 규모 정보 little_A44의 제3 열 수 little_ak44는 예를 들면 제1 목표 규모 정보 little_B44의 제1 목표 행 수 little_bk44와 일치할 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬이 피승수 행렬 A 또는 승수 행렬 B인 것을 예시로 본 개시에 대하여 설 명하였으나, 본 개시는 이에 한정되지 않으며, 제1 행렬은 결과 행렬 C일 수도 있으며, 아래에서 추가로 설명한 다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해, 제1 행렬의 규모와 제1 저장 공간의 용량에 따라 복수의 제1 초기 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 제1 행렬이 결과 행렬 C인 경우, 제 1 초기 규모 정보 large_C5는 제1 초기 행 수 large_cm5와 제1 초기 열 수 large_cn5를 포함할 수 있다. 결과 행렬 C의 제1 초기 부분 행렬의 데이터량은 예를 들면 저장 공간 L1C와 일치할 수 있으며, 원래 행렬을 위해 설 치한 캐시 공간을 충분히 이용할 수 있다. 본 개시의 실시예에서, 프로세서는 각 저장 공간 그룹에 대해, 각 제1 초기 규모 정보에 따라 적어도 하나의 제 2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 각 제1 초기 규모 정보와 제2 저장 공 간의 용량에 따라 적어도 하나의 제2 규모 정보를 결정할 수 있다. 제2 행렬이 피승수 행렬 A인 것을 예로 들면, 제1 초기 규모 정보 large_C5에 기반하여 피승수 행렬 A의 제2 부분 행렬의 제2 행 수는 최대로 large_cm5일 수 있으며, 제2 열 수는 최대로 k일 수 있다. 제1 초기 규모 정보 large_C5의 제1 초기 행 수 large_cm5와 제2 저장 공간의 용량에 따라 제2 규모 정보 little_A5를 결정할 수 있다. 제2 규모 정보 little_A5는 제2 행 수 little_am5와 제2 열 수 little_ak5를 포함할 수 있다. 제2 행 수 little_am5는 제1 초기 행 수 large_cm5보다 작거나 같을 수 있다. 제2 열 수 little_ak5는 k보다 작을 수 있다. 이어서, 행렬 곱셈 동작을 병렬로 실행하기 위해 제1 초기 부분 행렬을 추가로 분할할 수 있다. 본 개시의 실시 예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따 라 복수의 제1 목표 규모 정보를 결정하는 것과 같은 동작을 실행하도록 구성될 수 있다. 예를 들면, 제2 규모 정보 little_A5의 제2 행 수 little_am5에 따라 제1 초기 규모 정보 large_C5의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예를 들면 제1 목표 규모 정보 little_C51과 제1 목표 규모 정보 little_C52를 포함할 수 있다. 제1 목표 규모 정보 little_C51은 제1 목표 행 수 little_cm51과 제1 목표 열 수 little_cn51을 포함할 수 있다. 제1 목표 규모 정보 little_C52는 제1 목표 행 수 little_cm52와 제1 목표 열 수 little_cn52를 포함할 수 있다. 제1 목표 열 수는 제1 초기 열 수보다 작을 수 있다. 제1 목표 행 수는 제2 행 수보다 작거나 같을 수 있다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라 복수의 제3 규모 정보를 결정하는 것과 같은 동작을 실행하도록 구성될 수 있다. 예를 들면, 제3 행렬이 승수 행렬 B인 경우, 제2 규모 정보 little_A5와 제1 목표 규모 정보 little_C51에 따라 제3 규모 정보 little_B51을 결정할 수 있다. 제3 규모 정보 little_B51의 제3 열 수 little_bn51은 예를 들면 제1 목표 규모 정보 little_C51의 제1 목표 열 수 little_cn51과 일치할 수 있다. 제3 규모 정보 little_B51의 제3 행 수 little_bk51은 예를 들면 제2 규모 정보 little_A5의 제2 열 수 little_ak5와 일치할 수 있다. 이해할 수 있는 것은, 위에서 제1 행렬이 결과 행렬 C이고 제2 행렬이 피승수 행렬 A인 것을 예시로 본 개시에 대하여 추가로 설명하였으나, 본 개시는 이에 한정되지 않으며, 제1 행렬이 결과 행렬 C인 경우, 제2 행렬은 승 수 행렬 B일 수도 있으며, 아래에서 추가로 설명한다. 본 개시의 실시예에서, 예를 들면 상술한 제1 초기 규모 정보 large_C5를 결정한 후, 프로세서는 각 저장 공간 그룹에 대해, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라 적어도 하나의 제2 규모 정보를 결정하는 동작을 실행하도록 구성될 수 있다. 예를 들면, 제2 행렬이 승수 행렬 B인 경우, 제1 초기 규모 정보 large_C5의 제1 초기 열 수 large_cn5에 따라, 승수 행렬 B의 제2 부분 행렬의 제2 행 수는 최대로 k일 수 있으 며, 제2 열 수는 최대로 large_cn5일 수 있다. 제1 초기 규모 정보 large_C5의 제1 초기 열 수 large_cn5와 제 2 저장 공간의 용량에 따라 제2 규모 정보 little_B5를 결정할 수 있다. 제2 규모 정보 little_B5는 제2 행 수 little_bk5와 제2 열 수 little_bn5를 포함할 수 있다. 제2 행 수 little_bk5는 k보다 작을 수 있고, 제2 열 수 little_bn5는 제1 초기 열 수 large_cn5보다 작거나 같을 수 있다. 제1 초기 규모 정보 large_C5와 제2 규모 정보 little_B5에 따라 제1 초기 메모리 접근 코스트를 결정할 수 있 다. 이어서, 행렬 곱셈 동작을 병렬로 실행하기 위해 제1 초기 부분 행렬을 추가로 분할할 수 있다. 본 개시의 실시 예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따 라 복수의 제1 목표 규모 정보를 결정하는 동작을 실행하도록 구성된다. 예를 들면, 제2 규모 정보 little_B5의 제2 열 수 little_bn5에 따라 제1 초기 규모 정보 large_C5의 적어도 하나의 제1 목표 규모 정보를 결정할 수 있다. 해당 적어도 하나의 제1 목표 규모 정보는 예를 들면 제1 목표 규모 정보 little_C53과 제1 목표 규모 정 보 little_C54를 포함할 수 있다. 제1 목표 규모 정보 little_C53은 제1 목표 행 수 little_cm53과 제1 목표 열 수 little_cn53을 포함할 수 있다. 제1 목표 규모 정보 little_C54는 제1 목표 행 수 little_cm54와 제1 목 표 열 수 little_cn54를 포함할 수 있다. 제1 목표 열 수는 제2 열 수보다 작거나 같을 수 있다. 제1 목표 행 수는 제1 초기 행 수보다 작을 수 있다. 본 개시의 실시예에서, 프로세서는 또한 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라 복수의 제3 규모 정보를 결정하는 것과 같은 동작을 실행하도록 구성될 수 있다. 예를 들면, 제3 행렬이 피승수 행렬 A인 경우, 제2 규모 정보 little_B5와 제1 목표 규모 정보 little_C54에 따라 제3 규모 정보 little_A44를 결정할 수 있다. 제3 규모 정보 little_A54의 제3 열 수 little_ak54는 예를 들면 제2 규모 정보 little_B5의 제2 행 수 little_bk5와 일치할 수 있다. 제3 규모 정보 little_A54의 제3 행 수 little_am54는 예를 들면 제1 목표 규모 정보 little_C54의 제1 목표 행 수 little_cm54와 일치할 수 있다. 위에서 각 행렬의 규모를 결정하는 일부 방식에 대해 설명하였음을 이해할 수 있으며, 다음은 관련 실시예와 결 합하여 목표 메모리 접근 코스트를 결정하는 일부 방식에 대해 설명한다. 일부 실시예에서, 프로세서는 또한, I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 목표 메모 리 접근 코스트를 결정하도록 구성될 수 있다. 예를 들면, 최소 제2 초기 메모리 접근 코스트를 목표 메모리 접 근 코스트으로 할 수 있다. 위에서 목표 메모리 접근 코스트를 결정하는 일부 방식에 대해 설명하였음을 이해할 수 있으며, 다음은 행렬 곱 셈 동작을 실행하는 일부 방식에 대해 설명한다. 본 개시의 실시예에서, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보에 따라 행렬의 곱셈 동작을 실행한다. 목표 메모리 접근 코스트에 대응하는 제1 행렬을 제1 목표 행렬로 할 수 있다. 목표 메모리 접근 코스트에 대응하는 제2 행렬을 제2 목표 행렬로 할 수 있다. 목표 메모리 접근 코스트에 대응하는 제3 행렬을 제3 목표 행렬로 할 수 있다. 본 개시의 실시예에서, 프로세서는 또한, 제3 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스트에 대응 하는 제1 목표 규모 정보에 따라 제1 목표 행렬의 제1 부분 행렬을 제1 저장 공간에 로드하며, 목표 메모리 접 근 코스트에 대응하는 제2 규모 정보에 따라 제2 목표 행렬의 제2 부분 행렬을 제2 저장 공간에 로드하며, 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제3 목표 행렬의 제3 부분 행렬을 얻으며, 제3 부분 행렬을 제3 저장 공간에 써넣도록 구성될 수 있다. 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각각 상술한 제1 목표 규모 정보 little_A32, 제2 규모 정보 little_B3 및 제3 규모 정보 little_C32이면, 목표 메 모리 접근 코스트에 대응하는 제1 목표 규모 정보 little_A32에 따라, 피승수 행렬 A의 제1 부분 행렬을 저장 공간 L1A에 로드한다. 해당 제1 부분 행렬의 규모는 제1 목표 규모 정보 little_A32와 일치할 수 있다. 목표 메 모리 접근 코스트에 대응하는 제2 규모 정보 little_B3에 따라 제2 목표 행렬의 제2 부분 행렬을 저장 공간 L1B 에 로드한다. 해당 제2 부분 행렬의 규모는 제2 규모 정보 little_B3과 일치할 수 있다. 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제3 부분 행렬을 얻으며, 해당 제3 부분 행렬의 규 모는 제3 규모 정보 little_C32과 일치할 수 있다. 제3 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 또 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각 각 상술한 제1 목표 규모 정보 little_B41, 제2 규모 정보 little_A4 및 제3 규모 정보 little_C41이면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보 little_B41에 따라 승수 행렬 B의 제1 부분 행렬을 저장 공 간 L1B에 로드한다. 해당 제1 부분 행렬의 규모는 제1 목표 규모 정보 little_B41과 일치할 수 있다. 목표 메모 리 접근 코스트에 대응하는 제2 규모 정보 little_A4에 따라 제2 목표 행렬의 제2 부분 행렬을 저장 공간 L1A에 로드한다. 해당 제2 부분 행렬의 규모는 제2 규모 정보 little_A4와 일치할 수 있다. 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제3 부분 행렬을 얻으며, 해당 제3 부분 행렬의 규모는 제3 규모 정보 little_C41과 일치할 수 있다. 제3 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 본 개시의 실시예에서, 프로세서는 또한， 제1 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스트에 대응 하는 제3 규모 정보에 따라 제3 목표 행렬의 제3 부분 행렬을 제3 저장 공간에 로드하도록 구성된다. 목표 메모 리 접근 코스트에 대응하는 제2 규모 정보에 따라 제2 목표 행렬의 제2 부분 행렬을 제2 저장 공간에 로드한다. 제3 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제1 목표 행렬의 제1 부분 행렬을 얻는다. 제1 부분 행렬을 제1 저장 공간에 써넣는다. 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각각 상술한 제1 목표 규모 정보 little_C51, 제2 규모 정보 little_A5 및 제3 규모 정보 little_B51이면, 목표 메 모리 접근 코스트에 대응하는 제3 목표 규모 정보 little_B51에 따라 승수 행렬 B의 제3 부분 행렬을 저장 공간 L1B에 로드한다. 해당 제3 부분 행렬의 규모는 제3 규모 정보 little_B51과 일치할 수 있다. 목표 메모리 접근 코스트에 대응하는 제2 목표 규모 정보 little_A5에 따라 피승수 행렬 A의 제2 부분 행렬을 저장 공간 L1A에 로 드한다. 해당 제2 부분 행렬의 규모는 제2 규모 정보 little_A5와 일치할 수 있다. 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제1 부분 행렬을 얻으며, 해당 제1 부분 행렬의 규모는 제1 목표 규모 정보 little_C51과 일치할 수 있다. 제1 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각각 상술한 제1 목표 규모 정보 little_C54, 제2 규모 정보 little_B5 및 제3 규모 정보 little_A54이면, 목표 메 모리 접근 코스트에 대응하는 제3 목표 규모 정보 little_A54에 따라 피승수 행렬 A의 제3 부분 행렬을 저장 공 간 L1A에 로드한다. 해당 제3 부분 행렬의 규모는 제3 규모 정보 little_A54과 일치할 수 있다. 목표 메모리 접 근 코스트에 대응하는 제2 목표 규모 정보 little_B5에 따라 승수 행렬 B의 제2 부분 행렬을 저장 공간 L1B에로드한다. 해당 제2 부분 행렬의 규모는 제2 규모 정보 little_B5와 일치할 수 있다. 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제1 부분 행렬을 얻으며, 해당 제1 부분 행렬의 규모는 제1 규모 정보 little_C54와 일치할 수 있다. 제1 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 본 개시의 실시예에서, 프로세서는 또한, 제2 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스트에 대응 하는 제1 목표 규모 정보에 따라 제1 목표 행렬의 제1 부분 행렬을 제1 저장 공간에 로드하며, 목표 메모리 접 근 코스트에 대응하는 제3 규모 정보에 따라 제3 목표 행렬의 제3 부분 행렬을 제3 저장 공간에 로드하며, 제1 부분 행렬과 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제2 목표 행렬의 제2 부분 행렬을 얻는으며, 제2 부분 행렬을 제2 저장 공간에 써넣도록 구성될 수 있다. 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각각 상술한 제1 목표 규모 정보 little_A34, 제2 규모 정보 little_C3 및 제3 규모 정보 little_B34이면, 목표 메 모리 접근 코스트에 대응하는 제1 목표 규모 정보 little_A34에 따라 피승수 행렬 A의 제1 부분 행렬을 저장 공 간 L1A에 로드한다. 해당 제1 부분 행렬의 규모는 제1 목표 규모 정보 little_A34와 일치할 수 있다. 목표 메모 리 접근 코스트에 대응하는 제3 규모 정보 little_B34에 따라 승수 행렬의 제3 부분 행렬을 저장 공간 L1B에 로 드한다. 해당 제3 부분 행렬의 규모는 제3 규모 정보 little_B34와 일치할 수 있다. 제1 부분 행렬과 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제2 부분 행렬을 얻으며, 해당 제2 부분 행렬의 규모는 제2 규모 정보 little_C3과 일치할 수 있다. 제2 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 예를 들면, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제3 규모 정보가 각각 상술한 제1 목표 규모 정보 little_B44, 제2 규모 정보 little_C4 및 제3 규모 정보 little_A44이면, 목표 메 모리 접근 코스트에 대응하는 제1 목표 규모 정보 little_B44에 따라 승수 행렬 B의 제1 부분 행렬을 저장 공간 L1B에 로드한다. 해당 제1 부분 행렬의 규모는 제1 목표 규모 정보 little_B44와 일치할 수 있다. 목표 메모리 접근 코스트에 대응하는 제3 목표 규모 정보 little_A44에 따라 승수 행렬의 제3 부분 행렬을 저장 공간 L1B에 로드한다. 해당 제3 부분 행렬의 규모는 제3 규모 정보 little_A44와 일치할 수 있다. 제1 부분 행렬과 제3 부 분 행렬에 대해 행렬 곱셈 동작을 실행하여 결과 행렬 C의 제2 부분 행렬을 얻으며, 해당 제2 부분 행렬의 규모 는 제2 규모 정보 little_C4와 일치할 수 있다. 제2 부분 행렬을 저장 공간 L1C에 써넣을 수 있다. 위에서 본 개시의 데이터 처리 장치에 대해 설명하였음을 이해할 수 있으며, 다음은 데이터 처리 장치를 포함하 는 전자 기기에 대해 설명한다. 도 3은 본 개시의 일 실시예에 따른 전자 기기의 개략도이다. 도 3에 도시된 바와 같이, 전자 기기는 본 개시에서 제공하는 데이터 처리 장치를 포함할 수 있다. 데 이터 처리 장치는 예를 들어 상술한 장치일 수 있다. 위에서 본 개시의 데이터 전자 기기에 대해 설명하였음을 이해할 수 있으며, 다음은 본 개시의 데이터 처리 방 법에 대해 설명한다. 도 4는 본 개시의 일 실시예에 따른 데이터 처리 방법의 흐름도이다. 도 4에 도시된 바와 같이, 해당 방법은 동작 S410 내지 동작 S430을 포함할 수 있다. 동작 S410에서, 캐시 유닛의 복수의 저장 공간에서 I개의 저장 공간 그룹을 결정한다. 본 개시의 실시예에서, I 개의 저장 공간 그룹 중의 각 저장 공간 그룹은 제1 저장 공간과 제2 저장 공간을 포함한다. 동작 S420에서, 각 저장 공간 그룹에 대해 다음의 동작을 실행하여 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트를 얻는다. 동작 S421에서, 제1 행렬의 규모와 제1 저장 공간의 용량에 따라 복수의 제1 초기 규모 정보를 결정한다. 본 개 시의 실시예에서, 제1 행렬은 제1 저장 공간에 대응하는 행렬이다. 동작 S422에서, 복수의 제1 초기 규모 정보 중의 각 제1 초기 규모 정보에 따라 적어도 하나의 제2 규모 정보를 결정한다. 본 개시의 실시예에서, 제2 규모 정보는 제2 행렬과 관련되며, 제2 행렬은 제2 저장 공간에 대응하는 행렬이다. 동작 S423에서, 복수의 제2 규모 정보와 복수의 제1 초기 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스 트를 결정한다.동작 S430에서, I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결 정한다. I는 1보다 크거나 같은 정수이다. 위에서 설명한 프로세서를 이용하여 방법을 실행할 수 있음을 이해할 수 있다. 본 개시의 실시예에서, 각 저장 공간 그룹에 대해, 복수의 제2 규모 정보와 예를 들어 적어도 하나의 제1 목표 규모 정보에 대응하는 복수의 제1 초기 규모 정보에 따라, 복수의 제1 목표 규모 정보를 결정하며, 복수의 제1 목표 규모 정보에 따라, 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 동작을 실행하는 것을 더 포함한다. 일부 실시예에서, 각 저장 공간 그룹에 대응하는 복수의 제1 초기 메모리 접근 코스트에서 적어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 것은, 복수의 제2 규모 정보와 복수의 제1 목표 규모 정보에 따라, 예를 들면,각 저장 공간 그룹에서 제3 저장 공간에 대응하는 행렬인 제3 행렬과 관련된 복수의 제3 규모 정보를 결정 하며, 복수의 제1 목표 규모 정보와 복수의 제3 규모 정보에 따라 복수의 제1 초기 메모리 접근 코스트에서 적 어도 하나의 제2 초기 메모리 접근 코스트를 결정하는 것을 포함한다. 일부 실시예에서, I개의 저장 공간 그룹의 전부 제1 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결정하는 것은, I개의 저장 공간 그룹의 전부 제2 초기 메모리 접근 코스트에서 목표 메모리 접근 코스트를 결 정하는 것을 포함한다. 일부 실시예에서, 방법은, 목표 메모리 접근 코스트에 대응하는 제1 목표 규모 정보, 제2 규모 정보 및 제 3 규모 정보에 따라 행렬의 곱셈 동작을 실행하는 것을 더 포함한다. 일부 실시예에서, 복수의 행렬은 승수 행렬, 피승수 행렬 및 결과 행렬을 포함하며, 목표 메모리 접근 코스트에 대응하는 제1 행렬, 제2 행렬 및 제3 행렬은 각각 제1 목표 행렬, 제2 목표 행렬 및 제3 목표 행렬이다. 일부 실시예에서, 행렬 곱셈 동작을 실행하는 것은, 제3 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스 트에 대응하는 제1 목표 규모 정보에 따라 제1 목표 행렬의 제1 부분 행렬을 제1 저장 공간에 로드하며, 목표 메모리 접근 코스트에 대응하는 제2 규모 정보에 따라 제2 목표 행렬의 제2 부분 행렬을 제2 저장 공간에 로드 하며, 제1 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제3 목표 행렬의 제3 부분 행렬을 얻 으며, 제3 부분 행렬을 제3 저장 공간에 써넣는 것을 포함한다. 일부 실시예에서, 행렬 곱셈 동작을 실행하는 것은, 제1 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스 트에 대응하는 제3 규모 정보에 따라 제3 목표 행렬의 제3 부분 행렬을 제3 저장 공간에 로드하며, 목표 메모리 접근 코스트에 대응하는 제2 규모 정보에 따라 제2 목표 행렬의 제2 부분 행렬을 제2 저장 공간에 로드하며, 제 3 부분 행렬과 제2 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제1 목표 행렬의 제1 부분 행렬을 얻으며, 제1 부분 행렬을 제1 저장 공간에 써넣는 것을 포함한다. 일부 실시예에서, 행렬 곱셈 동작을 실행하는 것은, 제2 목표 행렬이 결과 행렬인 경우, 목표 메모리 접근 코스 트에 대응하는 제1 목표 규모 정보에 따라 제1 목표 행렬의 제1 부분 행렬을 제1 저장 공간에 로드하며, 목표 메모리 접근 코스트에 대응하는 제3 규모 정보에 따라 제3 목표 행렬의 제3 부분 행렬을 제3 저장 공간에 로드 하며, 제1 부분 행렬과 제3 부분 행렬에 대해 행렬 곱셈 동작을 실행하여 제2 목표 행렬의 제2 부분 행렬을 얻 으며, 제2 부분 행렬을 제2 저장 공간에 써넣는 것을 포함한다. 본 개시의 기술 방안에서 언급된 사용자 개인 정보의 수집, 저장, 사용,가공, 전송, 제공과 공개 등 처리는 모 두 관련 법률과 법규의 규정에 부합되고 공서 양속을 위반하지 않는다. 본 개시의 실시예에 따르면, 본 개시는 또한 전자 기기, 판독 가능 저장 매체 및 컴퓨터 프로그램 제품을 제공 한다. 도 5는 본 개시의 실시예를 실시하는데 사용될수 있는 예시적인 전자 기기 의 개략적인 블록도이다. 전자 기기는 랩톱 컴퓨터, 데스크톱 컴퓨터, 웍스테이션, 개인 휴대 정보 단말기, 서버, 블레이드 서버, 메인 프레임 컴퓨터 및 기타 적합한 컴퓨터와 같은 다양한 형태의 디지털 컴퓨터를 말한다. 전자 기기는 개인 휴대 정보 단 말기, 셀룰러 전화, 스마트 폰, 웨어러블 디바이스 및 기타 유사한 컴퓨팅 장치와 같은 다양한 형태의 모바일 장치를 말할 수도 있다. 본 명세서에서 나타낸 부품, 이들의 연결 및 관계, 및 이들의 기능은 단지 예시일 뿐이 며, 본 명세서에서의 설명 및/또는 요구하는 본 출원의 구현을 한정하려 하는 것이 아니다. 도 5에 도시된 바와 같이, 기기는 읽기 전용 기억 장치(ROM)에 저장된 컴퓨터 프로그램 또는 저장 유 닛에서 랜덤 액세스 메모리(RAM)로 로드된 컴퓨터 프로그램에 따라 다양한 적절한 동작 및 처리를 실 행할 수 있는 컴퓨팅 유닛을 포함한다. RAM에는 저장 기기의 동작에 필요한 다양한 프로그램 및 데이터가 저장될 수 있다. 컴퓨팅 유닛, ROM 및 RAM은 버스를 통해 서로 연결된다. 입력/ 출력(I/O)인터페이스도 버스에 연결된다. 기기 중의 복수의 부품은 I/O인터페이스와 연결되며, 예를 들면 키보드, 마우스 등과 같은 입력 유닛 ; 예를 들면 다양한 유형의 디스플레이, 스피커 등과 같은 출력 유닛; 예를 들면 자기 디스크, 시디 롬 등과 같은 저장 유닛 및 예를 들면 랜 카드, 모뎀, 무선 통신 송수신기 등과 같은 통신 유닛을 포 함한다. 통신 유닛은 기기가 인터넷과 같은 컴퓨터 네트워크 및/또는 다양한 통신 네트워크와 기타 장치를 통하여 정보/데이터를 교환할 수 있도록 허용한다. 컴퓨팅 유닛은 처리 및 컴퓨팅 능력을 갖는 다양한 범용 및/또는 전용 처리 유닛일 수 있다. 컴퓨팅 유닛 의 일부 예는 중앙 처리 유닛(CPU), 그래픽 처리 유닛(GPU), 다양한 전용 인공 지능(AI) 컴퓨팅 칩, 머신 러닝 모델 알고리즘을 실행하는 다양한 컴퓨팅 유닛, 디지털 신호 처리 장치(DSP) 및 임의의 적절한 프로세서, 컨트롤러, 마이크로 컨트롤러 등를 포함하지만 이에 한정되지 않는다. 컴퓨팅 유닛은 예를 들면 데이터 처 리 방법과 같은 상술한 다양한 방법과 처리를 실행한다. 예를 들면, 일부 실시예에서는 데이터 처리 방법은 컴 퓨터 소프트웨어 프로그램으로 구현될 수 있으며, 이는 예를 들면 유형적으로 저장 유닛과 같은 기계 판독 가능 매체에 포함된다. 일부 실시예에서, 컴퓨터 프로그램의 일부 또는 전부는 ROM 및/또는 통신 유닛 을 통해 기기에 로드 및/또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로딩되고 컴퓨팅 유닛 에 의해 실행될 경우, 상술한 데이터 처리 방법 중의 하나 또는 복수의 동작을 실행할 수 있다. 선택적으 로, 다른 실시 예에서, 컴퓨팅 유닛은 기타 임의의 적절한 방식(예를 들면, 펌웨어에 의해)으로 데이터 처 리 방법을 실행하도록 구성될 수 있다. 본 명세서의 상술한 시스템 및 기술의 다양한 구현 방식은 디지털 전자 회로 시스템, 집적 회로 시스템, 필드 프로그램 가능 게이트 어레이(FPGA), 전용 집적 회로(ASIC), 특정 용도 표준 제품(ASSP), 시스템 온칩(SOC), 복 합 프로그램 가능 논리 장치(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합에서 구현될 수 있다. 이러한 다양한 실시방식은 아래와 같은 것을 포함할 수 있다. 하나 또는 복수의 컴퓨터 프로그램에서 실 시될 수 있으며, 해당 하나 또는 복수의 컴퓨터 프로그램은 적어도 하나의 프로그램 가능 프로세서를 포함하는 프로그램 가능 시스템에서 실행 및/또는 해석될 수 있으며, 프로그램 가능 프로세서는 전용 또는 범용 프로그램 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치로부터 데이터 및 명령어를 수신하고, 데이터 및 명령어를 해당 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치에 전송할 수 있다. 본 개시의 방법을 실행하기 위한 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 조합으로 작성될 수 있다. 이러한 프로그램 코드는 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그램 가능 데이터 처리 장치의 프로 세서 또는 컨트롤러에 제공하여, 프로그램 코드가 프로세서 또는 컨트롤러에 의해 실행될 때 흐름도 및/또는 블 록도에서 규정한 기능/동작이 실시되도록 할 수 있다. 프로그램 코드는 완전히 기계에서 실행되거나, 부분적으 로 기계에서 실행되거나, 독립적인 소프트웨어 패키지로서 부분적으로 기계에서 실행되면서 부분적으로 원격 기 계에서 실행되거나, 완전히 원격 기계 또는 서버에서 실행될 수 있다. 본 개시 내용의 맥락에서, 기계 판독 가능 매체는 명령어 실행 시스템, 장치 또는 설비에 의해 사용되거나, 명 령어 실행 시스템, 장치 또는 설비와 결합하여 사용되도록 제공하는 프로그램을 포함하거나 저장할 수 있는 매 체일 수있다. 기계 판독 가능 매체는 기계 판독 가능 신호 매체 또는 기계 판독 가능 저장 매체일 수 있다. 기 계 판독 가능 매체는 전자, 자기, 광학, 전자기, 적외선 또는 반도체 시스템, 장치 또는 기기, 또는 이들의 임 의의 적절한 조합을 포함할 수 있지만 이에 한정되지 않는다. 기계 판독 가능 저장 매체의 보다 구체적인 예에 는 하나 또는 복수의 전선에 기반한 전기 연결, 휴대용 컴퓨터 디스크, 하드 디스크, 임의기억장치 (RAM), 읽기 전용 기억 장치 (ROM), 소거 가능 프로그램 가능 읽기 전용 기억 장치 (EPROM 또는 플래시 메모리), 광섬유, 휴 대용 컴팩트 디스크 읽기 전용 기억 장치 (CD-ROM), 광학 저장 장치, 자기 저장 장치 또는 이들의 임의의 적절 한 조합을 포함할 수 있다. 사용자와의 인터랙션을 제공하기 위하여, 여기에 설명된 시스템 및 기술을 컴퓨터에서 실시할 수 있다. 이 컴퓨 터는 사용자에게 정보를 표시하는 디스플레이 장치(예: CRT(음극선관)모니터 또는 LCD(액정 디스플레이)) 및 사 용자가 컴퓨터에 입력을 제공할 수 있는 키보드 및 위치 결정 장치(예를 들면, 마우스 또는 트랙볼)를 구비한다. 다른 유형의 장치도 사용자와의 인터랙션을 제공하기 위해 사용될 수 있다. 예를 들면, 사용자에게제공되는 피드백은 모든 형태의 감지 피드백(예를 들면, 시각 피드백, 청각 피드백 또는 촉각 피드백) 일 수 있 고, 모든 형태(소리 입력, 음성 입력 또는 촉각 입력을 포함)를 이용하여 사용자로부터의 입력을 접수할 수 있 다. 여기에 설명된 시스템 및 기술을 백그라운드 부품을 포함하는 컴퓨팅 시스템(예를 들면, 데이터 서버로 함) 또 는 미들웨어 부품을 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버) 또는 프론트 엔드 부품을 포함하는 컴퓨팅 시스템(예를 들면, 그래픽 유저 인터페이스 또는 웹 브라우저를 가지고 있는 사용자 컴퓨터이며, 사용자 가 상기 그래픽 유저 인터페이스 또는 웹 브라우저를 통하여 여기에 설명된 시스템 및 기술의 실시 형태과 인터 랙션할 수 있다) 또는 이러한 백그라운드 부품, 미들웨어 부품, 또는 프런트 엔드 부품의 모든 조합을 포함하는 컴퓨팅 시스템에서 실시할 수 있다. 임의의 형식 또는 매체의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통해 시스템의 부품을 서로 연결할 수 있다. 통신 네트워크의 예로는 근거리 통신망(LAN), 광역 통신망(WAN) 및 인터넷을 포함한다. 통신 네트워크의 예로는 근거리 통신망(LAN), 광역 통신망(WAN) 및 인터넷을 포함한다. 통 신 네트워크의 예로는 근거리 통신망(LAN), 광역 통신망(WAN) 및 인터넷을 포함한다. 컴퓨터 시스템은 클라이언트와 서버를 포함할 수 있다. 클라이언트와 서버는 일반적으로 서로 멀리 떨어져 있으 며, 일반적으로 통신 네트워크를 통해 인터랙션한다. 클라이언트와 서버간의 관계는 해당 컴퓨터에서 실행되고 서로 클라이언트-서버 관계를 갖는 컴퓨터 프로그램에 의해 생성된다. 위에 나타낸 다양한 형태의 흐름을 사용하여 동작을 다시 순서 배열, 추가 또는 삭제할 수 있음을 이해해야 한 다. 예를 들면, 본 출원에 기재된 각 동작은 본 개시에서 개시하는 기술 방안이 기대하는 결과를 구현할 수 있 는 한, 병행하여 실행하거나 순차적으로 실행하거나 다른 순서로 실행할 수도 있으며, 본 명세서에서는 여기에 대해서 제한을 하지 않는다. 상술한 구체적인 실시 방식은 본 출원의 청구범위에 대한 제한을 구성하지 않는다. 해당 발명이 속하는 기술 분 야에서 통상의 지식을 가진 자라면 설계 요구 및 기타 요소에 따라 다양한 수정, 조합, 서브 조합 및 대체를 진 행할 수 있음을 이해해야 한다. 본 출원의 정신과 원칙내에서 이루어진 모든 수정, 동등한 대체 및 개선 등은 본 출원의 청구범위내에 포함되어야 한다."}
{"patent_id": "10-2024-0042059", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면은 본 방안을 보다 잘 이해하는 데 사용되며, 본 개시에 대한 한정이 되지 않는다. 그중에, 도 1은 본 개시의 일 실시예에 따른 데이터 처리 장치의 개략 블록도이며, 도 2a는 본 개시의 일 실시예에 따른 제1 초기 규모 정보의 개략도이며, 도 2b는 본 개시의 일 실시예에 따른 제2 규모 정보의 개략도이며, 도 2c는 본 개시의 일 실시예에 따른 제3 규모 정보의 개략도이며, 도 3은 본 개시의 일 실시예에 따른 전자 기기의 개략도이며, 도 4는 본 개시의 일 실시예에 따른 데이터 처리 방법의 흐름도이며, 도 5는 본 개시의 일 실시예에 따른 데이터 처리 방법을 적용할 수 있는 전자 기기의 블록도이다."}
