{"patent_id": "10-2021-0126395", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0043476", "출원번호": "10-2021-0126395", "발명의 명칭": "다이나믹 컨볼루션 연산 수행 방법 및 장치", "출원인": "삼성전자주식회사", "발명자": "박승인"}}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "미리 정해진 복수의 이산 값(discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weightmatrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하는 단계;상기 각각의 웨이트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트에 기초하여, 통합 커널을 결정하는 단계; 및상기 통합 커널에 기초하여, 컨볼루션(convolution) 연산을 수행하는 단계를 포함하는 다이나믹 컨볼루션(dynamic convolution) 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 커널 적응 웨이트를 결정하는 단계는입력 데이터(input data)에 대응하는 복수의 커널 관련성 스코어(kernel relevance score)를 생성하는 단계및;상기 커널 관련성 스코어에 기초하여, 커널 적응 웨이트를 결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 커널 관련성 스코어에 기초하여, 상기 커널 적응 웨이트를 결정하는 단계는상기 커널 관련성 스코어를 검벨 소프트맥스 샘플링(gumbel softmax sampling)하여, 상기 커널 적응 웨이트를결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 커널 적응 웨이트를 결정하는 단계는0과 1로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트를 결정하는단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 통합 커널을 결정하는 단계는공개특허 10-2023-0043476-3-상기 커널 적응 웨이트가 1로 결정된 웨이트 행렬들을 합하여, 상기 통합 커널을 결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 커널 적응 웨이트를 결정하는 단계는0과 1로 표현되는 카테고리 집합에서, 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대응하는 커널 적응웨이트만 1로 결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 통합 커널을 결정하는 단계는상기 어느 하나의 웨이트 행렬을 상기 통합 커널로 결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 커널 적응 웨이트를 결정하는 단계는2의 거듭제곱들로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트를결정하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 통합 커널을 결정하는 단계는상기 각각의 웨이트 행렬과 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트 사이의 시프트 연산(shift operation)을 수행하는 단계를 포함하는, 다이나믹 컨볼루션 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,각각의 바이어스(bias)와 상기 커널 적응 웨이트에 기초하여, 통합 바이어스를 결정하는 단계를 더 포함하고,상기 컨볼루션 연산을 수행하는 단계는공개특허 10-2023-0043476-4-입력 데이터, 상기 통합 커널 및 상기 통합 바이어스에 기초하여, 상기 컨볼루션 연산을 수행하는 단계를 포함하는, 다이나믹 컨볼루션(dynamic convolution) 연산 수행 방법."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "하드웨어와 결합되어 제1항 내지 제10항 중 어느 하나의 항의 방법을 실행시키기 위하여 매체에 저장된 컴퓨터프로그램."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "미리 정해진 복수의 이산 값(discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weightmatrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하고, 상기 각각의 웨이트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트에 기초하여, 통합 커널을 결정하고, 상기 통합 커널에 기초하여, 컨볼루션(convolution) 연산을 수행하는 프로세서를 포함하는, 다이나믹 컨볼루션(dynamic convolution) 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 프로세서는입력 데이터(input data)에 대응하는 복수의 커널 관련성 스코어(kernel relevance score)를 생성하고, 상기커널 관련성 스코어에 기초하여, 커널 적응 웨이트를 결정하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 프로세서는상기 커널 관련성 스코어에 기초하여, 상기 커널 적응 웨이트를 결정하고, 상기 커널 관련성 스코어를 검벨 소프트맥스 샘플링(gumbel softmax sampling)하여, 상기 커널 적응 웨이트를 결정하는, 다이나믹 컨볼루션 연산수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서,상기 프로세서는0과 1로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트를 결정하는,다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 프로세서는상기 커널 적응 웨이트가 1로 결정된 웨이트 행렬들을 합하여, 상기 통합 커널을 결정하는, 다이나믹 컨볼루션공개특허 10-2023-0043476-5-연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제12항에 있어서,상기 프로세서는0과 1로 표현되는 카테고리 집합에서, 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대응하는 커널 적응웨이트만 1로 결정하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 프로세서는상기 어느 하나의 웨이트 행렬을 상기 통합 커널로 결정하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제12항에 있어서,상기 프로세서는2의 거듭제곱들로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트를결정하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서,상기 프로세서는상기 각각의 웨이트 행렬과 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트 사이의 시프트 연산(shift operation)을 수행하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제12항에 있어서,상기 프로세서는각각의 바이어스(bias)와 상기 커널 적응 웨이트에 기초하여, 통합 바이어스를 결정하고, 입력 데이터, 상기 통합 커널 및 상기 통합 바이어스에 기초하여, 상기 컨볼루션 연산을 수행하는, 다이나믹 컨볼루션 연산 수행 장치."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다이나믹 컨볼루션 연산 수행 방법 및 장치가 개시된다. 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법은 미리 정해진 복수의 이산 값(discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weight matrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하는 단계, 상기 각각의 웨이트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트에 기초하여, 통합 커널을 결정하는 단계 및 상기 통합 커널에 기초하여, 컨볼루션(convolution) 연산을 수행하는 단계를 포함한다."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래 실시예들은 다이나믹 컨볼루션 연산 수행 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "사용자의 편의성 증대를 위해 사용자 단말에서 인공 지능(artificial intelligence; AI)과 관련된 다양한 동작 들이 수행될 수 있다. 인공 지능 알고리즘은 일반적으로 많은 메모리와 컴퓨팅이 요구되므로 주로 독립형 서버 (Standalone Server)나 클라우드 서비스(Cloud Service)를 통해 수행되었으며, 스마트 폰과 같은 사용자 단말에 서의 수행이 용이하지 않았다. 따라서, 인공 지능 알고리즘을 스마트 폰에서 구동할 수 있는 방법이 요구된다."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 다이나믹 컨볼루션(dynamic convolution) 연산 수행 방법은 미리 정해진 복수의 이산 값 (discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weight matrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하는 단계; 상기 각각의 웨이트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트에 기초하여, 통합 커널을 결정하는 단계; 및 상기 통합 커널에 기초하여, 컨볼 루션(convolution) 연산을 수행하는 단계를 포함한다. 상기 커널 적응 웨이트를 결정하는 단계는 입력 데이터(input data)에 대응하는 복수의 커널 관련성 스코어 (kernel relevance score)를 생성하는 단계 및; 상기 커널 관련성 스코어에 기초하여, 커널 적응 웨이트를 결정 하는 단계를 포함할 수 있다. 상기 커널 관련성 스코어에 기초하여, 상기 커널 적응 웨이트를 결정하는 단계는 상기 커널 관련성 스코어를 검 벨 소프트맥스 샘플링(gumbel softmax sampling)하여, 상기 커널 적응 웨이트를 결정하는 단계를 포함할 수 있 다. 상기 커널 적응 웨이트를 결정하는 단계는 0과 1로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대 응하는 상기 커널 적응 웨이트를 결정하는 단계를 포함할 수 있다. 상기 통합 커널을 결정하는 단계는 상기 커널 적응 웨이트가 1로 결정된 웨이트 행렬들을 합하여, 상기 통합 커 널을 결정하는 단계를 포함할 수 있다. 상기 커널 적응 웨이트를 결정하는 단계는 0과 1로 표현되는 카테고리 집합에서, 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대응하는 커널 적응 웨이트만 1로 결정하는 단계를 포함할 수 있다. 상기 통합 커널을 결정하는 단계는 상기 어느 하나의 웨이트 행렬을 상기 통합 커널로 결정하는 단계를 포함할 수 있다. 상기 커널 적응 웨이트를 결정하는 단계는 2의 거듭제곱들로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트를 결정하는 단계를 포함할 수 있다. 상기 통합 커널을 결정하는 단계는 상기 각각의 웨이트 행렬과 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트 사이의 시프트 연산(shift operation)을 수행하는 단계를 포함할 수 있다. 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법은 각각의 바이어스(bias)와 상기 커널 적응 웨이트에 기초 하여, 통합 바이어스를 결정하는 단계를 더 포함하고, 상기 컨볼루션 연산을 수행하는 단계는 입력 데이터, 상 기 통합 커널 및 상기 통합 바이어스에 기초하여, 상기 컨볼루션 연산을 수행하는 단계를 포함할 수 있다. 일 실시예에 따른 다이나믹 컨볼루션 연산 장치는 미리 정해진 복수의 이산 값(discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weight matrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하고, 상기 각각의 웨이트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트 에 기초하여, 통합 커널을 결정하고, 상기 통합 커널에 기초하여, 컨볼루션(convolution) 연산을 수행하는 프로 세서를 포함한다. 상기 프로세서는 입력 데이터(input data)에 대응하는 복수의 커널 관련성 스코어(kernel relevance score)를 생성하고, 상기 커널 관련성 스코어에 기초하여, 커널 적응 웨이트를 결정할 수 있다. 상기 프로세서는 상기 커널 관련성 스코어에 기초하여, 상기 커널 적응 웨이트를 결정하고, 상기 커널 관련성 스코어를 검벨 소프트맥스 샘플링(gumbel softmax sampling)하여, 상기 커널 적응 웨이트를 결정할 수 있다. 상기 프로세서는 0과 1로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨 이트를 결정할 수 있다. 상기 프로세서는 상기 커널 적응 웨이트가 1로 결정된 웨이트 행렬들을 합하여, 상기 통합 커널을 결정할 수 있 다. 상기 프로세서는 0과 1로 표현되는 카테고리 집합에서, 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대 응하는 커널 적응 웨이트만 1로 결정할 수 있다. 상기 프로세서는 상기 어느 하나의 웨이트 행렬을 상기 통합 커널로 결정할 수 있다. 상기 프로세서는 2의 거듭제곱들로 표현되는 카테고리 집합에서, 상기 각각의 웨이트 행렬에 대응하는 상기 커 널 적응 웨이트를 결정할 수 있다. 상기 프로세서는 상기 각각의 웨이트 행렬과 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트 사이 의 시프트 연산(shift operation)을 수행할 수 있다. 상기 프로세서는 각각의 바이어스(bias)와 상기 커널 적응 웨이트에 기초하여, 통합 바이어스를 결정하고, 입력 데이터, 상기 통합 커널 및 상기 통합 바이어스에 기초하여, 상기 컨볼루션 연산을 수행할 수 있다."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 개시되어 있는 특정한 구조적 또는 기능적 설명들은 단지 기술적 개념에 따른 실시예들을 설명하 기 위한 목적으로 예시된 것으로서, 실제로 구현된 형태는 다양한 다른 모습을 가질 수 있으며 본 명세서에 설 명된 실시예로만 한정되지 않는다. 제1 또는 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 이런 용어들은 하나의 구성요소 를 다른 구성요소로부터 구별하는 목적으로만 이해되어야 한다. 예를 들어 제1 구성요소는 제2 구성요소로 명명 될 수 있고, 유사하게 제2 구성요소는 제1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관계를 설명하는 표현들, 예를 들어 \"~간의\"와 \"바로~간의\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 실시된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 해당 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되 는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 실시예들은 퍼스널 컴퓨터, 랩톱 컴퓨터, 태블릿 컴퓨터, 스마트 폰, 텔레비전, 스마트 가전 기기, 지능형 자동 차, 키오스크, 웨어러블 장치 등 다양한 형태의 제품으로 구현될 수 있다. 이하, 실시예들을 첨부된 도면을 참 조하여 상세하게 설명한다. 각 도면에 제시된 동일한 참조 부호는 동일한 부재를 나타낸다. 도 1은 인공신경망(Artificial Neural Network)를 이용한 딥러닝 연산 방법을 설명하기 위한 도면이다. 딥러닝(Deep Learning) 등을 포함하는 인공지능(AI) 알고리즘은 인공신경망(Artificial Neural Network, ANN) 에 입력 데이터를 입력시키고, 컨볼루션 등의 연산을 통해 출력 데이터를 학습하는 것을 특징으로 한다. 인공신경망은 생물학적 뇌를 모델링한 컴퓨터 과학적 아키텍쳐(Computational Architecture)를 의미할 수 있다. 인공신경망 내에서, 뇌의 뉴런들에 해당되는 노드들은 서로 연결되어 있고, 입력 데이터를 처리하기 위하여 집합적으로 동작한다. 다양한 종류의 뉴럴 네트워크들을 예로 들면, 컨볼루션 뉴럴 네트워크 (Convolutional Neural Network, CNN), 회귀 뉴럴 네트워크(Recurrent Neural Network, RNN), 딥 빌리프 네트 워크(Deep Belief Network, DBN), 제한된 볼츠만 기계(Restricted Boltzman Machine, RBM) 방식 등이 있으나, 이에 제한되지 않는다. 피드-포워드(feed-forward) 뉴럴 네트워크에서, 뉴럴 네트워크의 뉴런들은 다른 뉴런들 과의 연결들(links)을 갖는다. 이와 같은 연결들은 뉴럴 네트워크를 통해, 한 방향으로, 예를 들어 순방향 (forward direction)으로 확장될 수 있다. 도 1을 참조하면, 인공신경망에 입력 데이터가 입력되고, 하나 이상의 레이어(layer)를 포함하는 인공 신경 망(예를 들어, 컨볼루션 뉴럴 네트워크(Convolution Neural Network, CNN))를 통해 출력 데이터가 출 력되는 구조가 도시된다. 인공신경망은 2개 이상의 레이어를 보유한 딥 뉴럴 네트워크(deep neural network)일 수 있다. 컨볼루션 뉴럴 네트워크는 입력 데이터로부터 테두리, 선 색 등과 같은 \"특징들(features)\"을 추출하기 위해 이용될 수 있다. 컨볼루션 뉴럴 네트워크는 복수의 레이어를 포함할 수 있다. 각각의 레이어는 데이 터를 수신할 수 있고, 해당 레이어에 입력되는 데이터를 처리하여 해당 레이어에서 출력되는 데이터를 생성할 수 있다. 레이어에서 출력되는 데이터는, 컨볼루션 뉴럴 네트워크에 입력된 이미지 또는 입력된 특징맵 (feature map)을 하나 이상의 필터(filter)의 웨이트(weight) 값과 컨볼루션 연산하여 생성한 특징맵일 수 있다. 컨볼루션 뉴럴 네트워크의 초기 레이어들은 입력으로부터 에지들 또는 그레디언트들과 같은 낮은 레 벨의 특징들을 추출하도록 동작될 수 있다. 컨볼루션 뉴럴 네트워크의 다음 레이어들은 이미지 내의 눈, 코 등과 같은 점진적으로 더 복잡한 특징들을 추출할 수 있다. 인공 지능 알고리즘을 스마트 폰과 같은 모바일 디바이스에서 구동하기 위해서는 저전력, 저연산 경량 네트워크 가 요구된다. 예를 들어, 스마트폰에 탑재된 AP(Application processor), 혹은 더 적은 프로세싱 파워 (processing power)를 가지는 마이크로 컨트롤러(MCU; microcontroller) 등의 환경에서 인공 신경망 실행을 가 능하게 하기 위한 다양한 기술이 연구되고 있다. 일 례로, 최근 연산량 추가에 대한 부담은 경감하되 네트워크의 리프리젠테이션 캐패시티(representation capacity)를 증가시키기 위한 방편으로 다이나믹 컨볼루션(dynamic convolution)이 제시되었다. 다이나믹 컨볼 루션은 레이어당 한 개의 컨볼루션 커널(convolution kernel)을 가지는 일반적 컨볼루션과 달리 복수개의 컨볼 루션 커널 세트를 학습한다. 그 후 복수개의 커널 각각에 대해 컨볼루션 연산을 수행하는 대신, 입력 영상 정 보를 이용하여 복수개의 컨볼루션 커널을 하나의 커널로 어그리게이션(aggregation)한 후 최종 컨볼루션 연산을 수행한다. 따라서 사용하는 커널의 수가 많아지는데 비해 연산량 증가 부담은 크지 않으며, 입력 정보에 따라 커널 웨이트 (kernel weight)가 동적으로 조절되므로 네트워크 정확도 향상에 효과가 있다.그러나, 마이크로 컨트롤러 등 연산 리소스(computational resource) 사용이 고도로 제약되는 환경에서는 다이 나믹 컨볼루션(dynamic convolution) 적용에 한계가 있을 수 있다. 보다 구체적으로, 입력 에 대한 일반적인 컨볼루션 연산은 아래 수학식 1과 같이 표현할 수 있다. 수학식 1"}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "수학식 1에서, W는 컨볼루션 커널의 웨이트 매트릭스(weight matrix)이고 b는 바이어스(bias)를 의미한다. 이 후 y에 대해 적절한 액티베이션(activation) 함수(예를 들어, Relu, Sigmoid)를 적용하여 각 레이어의 출력 데 이터를 얻어낸다. 반면에, 다이나믹 컨볼루션 연산은 아래 수학식 2와 같이 표현할 수 있다. 수학식 2"}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "아래 수학식 3과 같이, 통합 커널 와 통합 바이어스 는 각각 개의 웨이트 매트릭스 와 바이어스 를 선형 결합(linear combination)하여 생성한다. 수학식 3"}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "수학식 3에서 보여지듯, 각각의 웨이트 매트릭스 마다 상응되는 커널 적응 웨이트(kernel adaptation weight) 가 필요하다. 연속 값(continuous value)를 갖는 실수(real number) 는 입력 x에 대해 수행되는 라우팅 함수(routing function)을 거쳐 정해질 수 있다. 최종 를 구하기 위해서는 수식에서 보여지듯이 각"}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "를 곱하는 번의 곱셈 연산과, 각 곱셈 결과들을 모두 더하는 덧셈 연산 번이 필요하여 만큼의 계산 오버헤드(overhead)가 발생한다. 나아가, 네트워크 경량화를 위하여 부동 소수점 프리시전(floating point precision)으로 표현되는 실수 웨이트 들은 더 적은 비트 폭(bit-width)을 사용하도록 양자화(quantization) 과정을 거쳐 인티저 타입(integer typ e)으로 변환하여 연산을 수행한다. 따라서, 다이나믹 컨볼루션에서 실수(real number) 형태의 를 사용하는 것은 양자화 과정에 대한 부담을 추가한다.인공 지능 알고리즘을 스마트 폰과 같은 모바일 디바이스에서 구동하기 위해서는 저전력, 저연산 경량 네트워크 가 필요하고, 연산량 추가에 대한 부담은 경감하되 네트워크의 리프리젠테이션 캐패시티(representation capacity)를 증가시키기 위한 방편으로 다이나믹 컨볼루션이 제시되었으나, 상술한 바와 같이 다이나믹 컨볼루 션 연산 방법은 실수인 커널 적응 웨이트 에 대한 추가 양자화 과정이 따르는 부담이 있고, 또한 커널 어그리 게이션을 수행함에 있어 풀 프리시전(full precision) MAC(multiply and add) 연산이 필요하므로 연산 효율이 저하되는 문제가 있을 수 있다. 아래에서 상세히 설명하겠으나, 일 실시예에 따른 다이나믹 컨볼루션 연산 방법은 이산 값(discrete value)으로 표현되는 카테고리 집합(category set)에서 커널 적응 웨이트 를 샘플링하여 다이나믹 컨볼루션 연산 시 커 널 어그리게이션에 대한 양자화 에러 및 연산 오버헤드를 경감할 수 있다. 도 2는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 순서도이다. 도 2를 참조하면, 일 실시예에 따른 단계들(210 내지 230)은 다이나믹 컨볼루션 연산 수행 장치에 의해 수행될 수 있고, 다이나믹 컨볼루션 연산 수행 장치는 하나 또는 그 이상의 하드웨어 모듈, 하나 또는 그 이상의 소프 트웨어 모듈, 또는 이들의 다양한 조합에 의하여 구현될 수 있다. 도 2의 동작은 도시된 순서 및 방식으로 수 행될 수 있지만, 도시된 실시예의 사상 및 범위를 벗어나지 않으면서 일부 동작의 순서가 변경되거나 일부 동작 이 생략될 수 있다. 도 2에 도시된 다수의 동작은 병렬로 또는 동시에 수행될 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 미리 정해진 복수의 이산 값으로 표현되 는 카테고리 집합에서 각각의 웨이트 행렬에 대응하는 커널 적응 웨이트를 결정한다. 일 실시예에 따른 카테고 리 집합에 속하는 원소의 개수 및 값은 미리 결정될 수 있다. 아래에서 상세히 설명하겠으나, 예를 들어 다이나믹 컨볼루션 연산 수행 장치는 {0, 1}로 이루어진 두 개의 카 테고리에서 각각의 웨이트 행렬에 대응하는 커널 적응 웨이트를 샘플링할 수 있다. 또는, 다이나믹 컨볼루션 연산 수행 장치는 { , 로 이루어진 여섯 개의 카테고리에서 각각의 웨이트 행렬에 대응하 는 커널 적응 웨이트를 샘플링할 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 각각의 웨이트 행렬 및 각각의 웨이트 행렬에 대응하는 커널 적응 웨이트에 기초하여, 통합 커널을 결정한다. 일반적인 다이나믹 컨볼루션 연산에서 는 통합 커널 계산을 위해 각각의 웨이트 행렬 및 각각의 웨이트 행렬에 대응하는 커널 적응 웨이트 사이의 풀 프리시전(full precision) MAC(multiply and add) 연산이 필요하다. 반면에, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 풀 프리시전(full precision) MAC(multiply and add) 연산 없이 통합 커널을 결정할 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 통합 커널에 기초하여, 컨볼루션 (convolution) 연산을 수행한다. 도 3은 일 실시예에 따른 통합 커널을 결정하는 방법을 설명하기 위한 도면이다. 도 1 내지 도 2의 설명은 도 3에도 적용 가능하므로, 중복되는 내용의 설명은 생략한다. 도 3을 참조하면, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 커널 적응 웨이트 샘플링 모듈(Kernel Adaptation Weight Sampling Module) 및 커널 결합 모듈(Kernel Composition Module)을 포함할 수 있다. 일 실시예에 따른 커널 적응 웨이트 샘플링 모듈은 입력 데이터에 따른 샘플링을 수행하기 위해, 먼저 입력 데 이터에 대해 글로벌 에버리지 풀링(global average pooling)을 수행하여 입력 데이터를 축약한 후 선형 레이어 (linear layer)를 통과시켜 복수개(예를 들어, K개)의 커널 관련성 스코어(kernel relevance score)를 생성할 수 있다. 커널 관련성 스코어(kernel relevance score)는 로짓(logit)으로 표현될 수 있다.샘플링을 수행한다는 것은 곧 이산 랜덤 변수(discrete random variable)를 모델링하는 것을 의미하는데, 일반 적인 뉴럴 네트워크 학습 방법을 이용하여 이러한 이산 랜덤 변수를 표현하는 것은 쉽지 않다. 기울기가 0이어 서 미분 불가능인 레이어가 발생하기 때문이다. 이에, 커널 적응 웨이트 샘플링 모듈은 뉴럴 네트워크로부터 샘플링 모듈을 학습 하기 위한 검벨 소프트맥스 샘플링(gumbel softmax sampling) 방법을 사용할 수 있다. 보다 구체적으로, 커널 적응 웨이트 샘플링 모듈은 복수개(예를 들어, K개)의 커널 관련성 스코어를 검벨 소프 트맥스 샘플링(gumbel softmax sampling)하여, 커널 적응 웨이트를 결정할 수 있다. 보다 구체적으로, 커널 적 응 웨이트 샘플링 모듈은 복수개(예를 들어, K개)의 커널 관련성 스코어에 검벨 분포(gumbel distribution)에서 뽑은 노이즈(noise)를 더하여 소프트맥스(softmax) 레이어를 통과시켜 가장 큰 값을 갖는 카테고리 하나를 정할 수 있다. 다만, 일 실시예에 따른 샘플링 방법은 검벨 소프트맥스 샘플링에 국한되어 적용될 필요는 없고, 다 양한 유형의 샘플링 방법이 응용될 수 있다. 일 실시예에 따른 커널 결합 모듈은 각각의 웨이트 행렬 및 각각의 웨이트 행렬에 대응하는 커널 적응 웨이트에 기초하여, 통합 커널을 결정할 수 있다. 아래에서 상세히 설명하겠으나, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 풀 프리시전(full precision) MAC(multiply and add) 연산 없이 통합 커널을 결정할 수 있다. 도 4는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 1 내지 도 3의 설 명은 도 4에도 적용 가능하므로, 중복되는 내용의 설명은 생략한다. 도 4를 참조하면, 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 {0, 1}로 이루어진 두 개의 카테고리에서 커널 적응 웨이트를 샘플링 하도록 구성할 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 선택적 커널 합(selective kernel summation)을 통해 통합 커널을 결정할 수 있다. 예를 들어, 웨이트 매트릭스 에 상응되는 커널 적응 웨이 트 가 0으로 샘플링된 경우, 해당 웨이트 매트릭스 는 커널 적응 웨이트 와 곱셈 연산을 수행할 필요 가 없다. 따라서, 다이나믹 컨볼루션 연산 수행 장치는 통합 커널 W Þ 생성을 위한 덧셈 연산에서 해당 웨이 트 매트릭스 에 대한 연산을 생략할 수 있다. 반대로, 웨이트 매트릭스 에 상응되는 커널 적응 웨이트 가 1로 샘플링된 경우, 웨이트 매트릭스 는 커널 적응 웨이트 와 곱셈 연산할 필요 없으며 웨이트 매트릭스 를 유지한다. 따라서, 다이나믹 컨볼루 션 연산 수행 장치는 커널 적응 웨이트 가 1인 웨이트 매트릭스 만 선택 후 더하는 덧셈 연산을 수행하여 통합 커널 W Þ를 생성할 수 있다. 단계에서, 통합 커널을 결정한 다이나믹 컨볼루션 연산 수행 장치는, 통합 커널에 기초하여 컨볼루션 연산 을 수행할 수 있다. 도 5는 다른 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 1 내지 도 3의 설명은 도 5에도 적용 가능하므로, 중복되는 내용의 설명은 생략한다. 도 5를 참조하면, 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 {0, 1}로 이루어진 두 개의 카테고리에서 커널 적응 웨이트를 샘플링 하도록 구성할 수 있다. 다만, 일 실시예에 따른 다이나믹 컨볼 루션 연산 수행 장치는 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대응하는 커널 적응 웨이트만 1로 선택하도록 커널 적응 웨이트 샘플링 모듈을 학습시킬 수 있다.단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 커널 선택(kernel selection)을 통해 통 합 커널을 결정할 수 있다. 복수의 웨이트 행렬들 중 어느 하나의 웨이트 행렬에 대응하는 커널 적응 웨이트만 1로 샘플링되기 때문에, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 통합 커널 계산을 위한 덧셈 연산을 수행할 필요 없이 커널 적응 웨이트 가 1인 웨이트 매트릭스 만 선택 이를 최종 통합 커널로 결정할 수 있다. 단계에서, 통합 커널을 결정한 다이나믹 컨볼루션 연산 수행 장치는, 통합 커널에 기초하여 컨볼루션 연산 을 수행할 수 있다. 도 6은 또 다른 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 1 내지 도 3 의 설명은 도 6에도 적용 가능하므로, 중복되는 내용의 설명은 생략한다. 도 6을 참조하면, 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 보다 정밀한 연산을 위해 카테고리 개수를 늘리되, 각 카테고리가 대표하는 값이 특정 조건을 만족하는 형태의 숫자로 구성할 수 있 다. 예를 들어, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 2의 지수 형태로 표현되는 숫자 및 0으로 구 성된 카테고리 집합에서 샘플링을 수행할 수 있다. 예를 들어, 다이나믹 컨볼루션 연산 수행 장치는 { , 로 이루어진 여섯 개의 카테고리에서 각각의 웨이트 행렬에 대응하는 커널 적응 웨이 트를 샘플링할 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 커널 적응 웨이트 와 웨이트 매트릭 스 의 곱셈 연산을 수행하는 대신 연산 효율이 더 좋은 시프트 연산(shift operation)을 수행하여 연산 오버 헤드를 경감할 수 있다. 단계에서, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 시프트된 웨이트 매트릭스들을 합하여 최종 통합 커널을 생성할 수 있다. 단계에서, 통합 커널을 결정한 다이나믹 컨볼루션 연산 수행 장치는, 통합 커널에 기초하여 컨볼루션 연산 을 수행할 수 있다. 도 7는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치의 블록도이다. 도 7를 참조하면, 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 프로세서를 포함한다. 다 이나믹 컨볼루션 연산 수행 장치는 메모리, 통신 인터페이스, 및 센서들을 더 포함할 수 있다. 프로세서, 메모리, 통신 인터페이스, 및 센서들은 통신 버스를 통해 서로 통 신할 수 있다. 프로세서는 목적하는 동작들(desired operations)을 실행시키기 위한 물리적인 구조를 갖는 회로를 가지는 하드웨어로 구현된 처리 장치일 수 있다. 예를 들어, 목적하는 동작들은 프로그램에 포함된 코드(code) 또는 인스트럭션들(instructions)을 포함할 수 있다. 예를 들어, 하드웨어로 구현된 처리 장치는 마이크로프로세서 (microprocessor), 중앙 처리 장치(Central Processing Unit; CPU), 그래픽 처리 장치(Graphic Processing Unit; GPU), 프로세서 코어(processor core), 멀티-코어 프로세서(multi-core processor), 멀티프로세서 (multiprocessor), ASIC(Application-Specific Integrated Circuit), FPGA(Field Programmable Gate Array), NPU(Neural Processing Unit), MCU(microcontroller) 등을 포함할 수 있다. 프로세서는 프로그램을 실행하고, 연산 수행 장치를 제어할 수 있다. 프로세서에 의하여 실행 되는 프로그램 코드는 메모리에 저장될 수 있다.프로세서는 미리 정해진 복수의 이산 값(discrete value)으로 표현되는 카테고리 집합에서 각각의 웨이트 행렬(weight matrix)에 대응하는 커널 적응 웨이트(kernel adaptation weight)를 결정하고, 상기 각각의 웨이 트 행렬 및 상기 각각의 웨이트 행렬에 대응하는 상기 커널 적응 웨이트에 기초하여, 통합 커널을 결정하고, 상 기 통합 커널에 기초하여, 컨볼루션(convolution) 연산을 수행한다. 메모리는 ROM 및 SRAM을 포함할 수 있다. ROM은 다이나믹 컨볼루션 연산을 위한 신경망 모델 및 코드를 저장할 수 있다. SRAM은 프로세서에 의해 수행되는 동작들을 위한 워킹 메모리로 사용될 수 있으며, 다양한 어플리케 이션 프로그램들을 저장한다. 메모리는 상술한 프로세서의 처리 과정에서 생성되는 다양한 정보를 저장할 수 있다. 이 밖에도, 메모리는 각종 데이터와 프로그램 등을 저장할 수 있다. 메모리는 하 드 디스크 등과 같은 대용량 저장 매체를 구비하여 각종 데이터를 저장할 수 있다. 일 실시예에 따른 센서들은 이미지 센서를 포함할 수 있다. 예를 들어, 이미지 센서는 영상 프레임들 내 의 움직임을 감지하고, 움직임의 감지 여부에 기초하여 영상 프레임들 중 대상 프레임의 적어도 일부 영역에 대 한 조정을 수행할 수 있다. 이미지 센서는 조정된 대상 프레임에 의해 대상 객체의 존재 유무를 검출하여 트리 거 신호를 발생할 수 있다. 프로세서는 센서들이 발생시킨 트리거 신호에 활성화되어 다양한 어플리 케이션 프로그램들을 수행할 수 있다. 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치는 예를 들어, 첨단 운전자 보조 시스템(Advanced Drivers Assistance System; ADAS), HUD(Head Up Display) 장치, 3D 디지털 정보 디스플레이(Digital Information Display, DID), 내비게이션 장치, 뉴로모픽 장치(neuromorphic device), 3D 모바일 기기, 스마트 폰, 스마트 가전(예를 들어, 스마트 TV, 스마트 냉장고, 스마트 세탁기 등), 스마트 차량, IoT(Internet of Things) 디바이스, 의료 디바이스, 및 계측 디바이스 등과 같이 다양한 분야의 장치에 해당할 수 있다. 여기서, 3D 모바일 기기는 예를 들어, 증강 현실(Augmented Reality; AR), 가상 현실(Virtual Reality; VR), 및/또는 혼합 현실(Mixed Reality; MR)을 표시하기 위한 디스플레이 장치, 머리 착용 디스플레이(Head Mounted Display; HMD), 얼굴 착용 디스플레이(Face Mounted Display; FMD), 및 증강 현실 안경(AR glasses) 등을 모두 포함하는 의미로 이해될 수 있다. 또한, 도면에 도시되지는 않았으나, 다이나믹 컨볼루션 연산 수행 장치는 디스플레이(미도시) 및 통신 인 터페이스(미도시)를 더 포함할 수 있다. 디스플레이는 예를 들어, 터치 디스플레이, 또는 플렉서블 디스플레이 일 수 있으며, 반드시 이에 한정되지는 않는다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처 리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하 나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들의 조합을 포함 할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로(collectively) 처 리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 컴퓨터 판독 가능 기록 매체에 저장될 수 있다.실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독 으로 또는 조합하여 포함할 수 있다. 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구성 된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2021-0126395", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 상기를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다."}
{"patent_id": "10-2021-0126395", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 인공신경망(Artificial Neural Network)를 이용한 딥러닝 연산 방법을 설명하기 위한 도면이다. 도 2는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 순서도이다. 도 3은 일 실시예에 따른 통합 커널을 결정하는 방법을 설명하기 위한 도면이다. 도 4는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 5는 다른 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 6은 또 다른 실시예에 따른 다이나믹 컨볼루션 연산 수행 방법을 설명하기 위한 도면이다. 도 7는 일 실시예에 따른 다이나믹 컨볼루션 연산 수행 장치의 블록도이다."}
