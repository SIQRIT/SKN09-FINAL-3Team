{"patent_id": "10-2022-7010823", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0066080", "출원번호": "10-2022-7010823", "발명의 명칭": "다중-뱅크, 다중-포트 분산 공유 메모리를 갖는 인공 현실 시스템", "출원인": "페이스북 테크놀로지스, 엘엘씨", "발명자": "마투르 알록 쿠마르"}}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "집적 회로에 있어서:제1 뱅크 및 제2 뱅크를 포함하는 복수의 공유 메모리 뱅크들;제1 서브시스템 및 제2 서브시스템을 포함하는 복수의 서브시스템들로서, 상기 제1 서브시스템은 제1 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한 액세스를 가지고, 상기 제2 서브시스템은 제2 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한 액세스를 가지며, 제1 포트에 의한 제1 뱅크에 대한 대기시간이 제2 포트에 의한 제1 뱅크에 대한 대기시간보다 낮은, 상기 복수의 서브시스템들; 및제1 포트 및 제2 포트를 상기 공유 메모리 뱅크들의 각각에 연결하는 네트워크로서, 제1 스위치를 통해 제1 포트를 제1 뱅크에 연결하고, 제2 스위치를 통해 제2 포트를 제2 뱅크에 연결하고, 상기 제1 서브시스템에 의한제1 뱅크에 및 상기 제2 서브시스템에 의한 제2 뱅크에 대한 동시 액세스(concurrent access)를 가능하게 하도록 상기 집적 회로 내에 구성되는 상기 네트워크를 포함하는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 네트워크는:제1 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제1 뱅크로의 액세스 대기시간보다 높도록 제1스위치 및 제2 스위치를 통해 제1 포트를 제2 뱅크에 연결하고; 제2 포트로부터 제1 뱅크로의 액세스 대기시간이 제2 포트로부터 제2 뱅크로의 액세스 대기시간보다 높도록 제2스위치 및 제1 스위치를 통해 제2 포트를 제1 뱅크에 연결하고; 선택적으로, 상기 네트워크는 또한:제1 포트로부터, 상기 제2 메모리 뱅크의 메모리에 액세스하기 위한 요청을 수신하고;제1 스위치 및 제2 스위치를 통해 상기 요청을 라우팅하고, 제2 뱅크에 액세스하기 위한 다른 요청들과의 경합을 피하기 위해 중재(arbitration)를 수행함으로써 제1 포트가 제2 뱅크의 메모리에 액세스할 수 있게 하도록;구성되는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,제1 포트로부터 제1 뱅크에 액세스하는 것은 제1 뱅크로의 단일 홉 라우트(single hop route)를 수반하고,제1 포트로부터 제2 뱅크에 액세스하는 것은 제2 뱅크에 대한 적어도 2개의 홉들을 포함하는 라우트를수반하는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 제1 스위치는 상기 집적 회로 상의 제2 포트보다 제1 포트에 물리적으로 더 가깝게 위치되고, 상기 제2 스위치는 상기 집적 회로 상의 제1 포트보다 제2 포트에 물리적으로 더 가깝게 위치되거나, 또는상기 제1 스위치는 상기 집적 회로 상의 제2 뱅크보다 제1 뱅크에 물리적으로 더 가깝게 위치되고, 상기 제2 스위치는 상기 집적 회로 상의 제1 뱅크보다 제2 뱅크에 물리적으로 더 가깝게 위치되는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2022-0066080-3-제1항에 있어서, 상기 네트워크는: 상기 제1 서브시스템이 중재 없이 제1 스위치를 통해 제1 뱅크에 액세스할 수 있게 하고, 상기 제2 서브시스템이 중재 없이 제2 스위치를 통해 제2 뱅크에 액세스할 수 있게 하는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 제어기를 더 포함하며,상기 제어기는:상기 제1 서브시스템으로부터, 메모리 할당 요청을 수신하고; 비용 평가(cost assessment)에 기초하여, 상기 복수의 뱅크들 중 어느 것으로부터 메모리를 할당할지를 결정하고; 상기 제어기에 의해, 하나 이상의 상기 뱅크들로부터 메모리를 할당하도록;구성되고,선택적으로, 상기 비용 평가는:복수의 메모리 뱅크들의 각각에 대한 대기시간, 메모리 뱅크들의 각각에 액세스하는 것과 연관된 전력 요건들,대기시간에 대한 상기 제1 서브시스템의 민감도, 상기 집적 회로 내의 예상 데이터 흐름 패턴들, 상기 제1 서브시스템에 대한 예상 액세스 빈도, 하나 이상의 공유 메모리 뱅크들이 절전 모드인지의 여부, 및 하나 이상의 메모리 뱅크들을 상기 절전 모드로부터 나오게 하는 것과 연관된 전력 소비 정보를 평가하는 것을 포함하는, 집적회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 네트워크는:제1 포트로부터, 제1 메모리 뱅크의 메모리에 액세스하기 위한 요청을 수신하고; 제1 스위치를 통해 상기 요청을 라우팅함으로써 중재 없이 제1 포트가 제1 메모리 뱅크의 메모리에 액세스할 수있게 하도록;구성되는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,제1 포트는 제2 포트와 상이한 대기시간을 갖거나, 또는상기 네트워크는 제2 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제2 뱅크로의 액세스 대기시간보다 낮도록 제1 포트를 제1 뱅크에 및 제1 포트를 제2 뱅크에 연결하는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,복수의 메모리 뱅크들, 복수의 서브시스템들 및 네트워크 중 하나 이상이 전력 소비를 감소시키도록 상기 집적회로 상에 배열되거나, 복수의 메모리 뱅크들, 제1 포트, 제2 포트, 복수의 서브시스템들 및 네트워크 중 하나 이상이 공유 메모리에액세스하는 대기시간을 감소시키도록 상기 집적 회로 상에 배열되거나, 복수의 메모리 뱅크들, 제1 포트, 제2 포트, 복수의 서브시스템들 및 네트워크 중 하나 이상이 상기 집적 회로상의 구성요소들 사이의 연결들의 수 및 길이를 감소시키도록 상기 집적 회로 상에 배열되거나, 또는복수의 메모리 뱅크들, 제1 포트, 제2 포트, 복수의 서브시스템들 및 네트워크 중 하나 이상이 상기 복수의 서브시스템들 중 어느 서브시스템들이 메모리 대기시간에 더 관대한지(tolerant)에 관한 정보에 기초하여 배열되공개특허 10-2022-0066080-4-는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 메모리 뱅크들은 균일하며 각각 밀도에 최적화되거나, 또는메모리 뱅크들은 사용되지 않을 때 절전 모드로 진입하도록 구성되는, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,제1 스위치 및 제2 스위치는 각각 상이한 클록 도메인에서 동작하거나, 제1 스위치 및 제2 스위치는 동일한 클록 도메인에서 동작하지만, 클록 오정렬들에 관대한, 집적 회로."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "방법에 있어서:집적 회로 상의 컴퓨팅 시스템에 의해 및 집적 회로 상의 복수의 서브시스템들 중 하나로부터, 공유 메모리 시스템으로부터의 메모리 할당 요청을 수신하는 단계로서, 상기 공유 메모리 시스템은 상기 집적 회로의일부이고, 복수의 뱅크들의 각각에 액세스하는 것과 연관된 대기시간 및 전력 소비 속성들이 상기 복수의 서브시스템들의 각각에 대해 상이하도록 상기 집적 회로 상에 배열된 복수의 뱅크들을 포함하는, 상기 메모리 할당요청을 수신하는 단계;상기 컴퓨팅 시스템에 의해, 상기 복수의 서브시스템들의 각각의 예상 메모리 액세스 패턴들에 관한 정보를 포함하는 평가(assessment)에 기초하고, 또한 상기 대기시간 및 전력 소비 속성들에 기초하여 상기 복수의 뱅크들중 어느 것으로부터 메모리를 할당할지를 결정하는 단계; 및 상기 컴퓨팅 시스템에 의해, 상기 복수의 뱅크들 중 하나 이상으로부터 메모리를 할당하는 단계를 포함하는, 방법."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "인공 현실 시스템에 있어서:물리적 환경을 나타내는 이미지 데이터를 캡처하도록 구성된 이미지 캡처 시스템; 및인공 현실 컨텐트를 출력하도록 구성된 헤드-마운트 디스플레이(HMD: head-mounted display)를 포함하고, 상기 헤드-마운트 디스플레이는 집적 회로를 포함하며,상기 집적 회로는:제1 뱅크 및 제2 뱅크를 포함하는 복수의 공유 메모리 뱅크들;제1 서브시스템 및 제2 서브시스템을 포함하는 복수의 서브시스템들로서, 상기 제1 서브시스템은 제1 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한 액세스를 가지고, 상기 제2 서브시스템은 제2 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한 액세스를 가지며, 제1 포트에 의한 제1 뱅크에 대한 대기시간은 제2 포트에 의한 제1 뱅크에 대한 대기시간보다 낮은, 상기 복수의 서브시스템들; 및제1 포트 및 제2 포트를 상기 공유 메모리 뱅크들의 각각에 연결하는 네트워크로서, 제1 스위치를 통해 제1 포트를 제1 뱅크에 연결하고, 제2 스위치를 통해 제2 포트를 제2 뱅크에 연결하고, 상기 제1 서브시스템에 의한제1 뱅크에 및 상기 제2 서브시스템에 의한 제2 뱅크에 대한 동시 액세스를 가능하게 하도록 상기 집적 회로 내에 구성되는 상기 네트워크를 포함하는, 인공 현실 시스템."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서, 상기 네트워크는:제1 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제1 뱅크로의 액세스 대기시간보다 높도록 제1공개특허 10-2022-0066080-5-스위치 및 제2 스위치를 통해 제1 포트를 제2 뱅크에 연결하고; 제2 포트로부터 제1 뱅크로의 액세스 대기시간이 제2 포트로부터 제2 뱅크로의 액세스 대기시간보다 높도록 제2스위치 및 제1 스위치를 통해 제2 포트를 제1 뱅크에 연결하기 위해;상기 집적 회로 내에 구성되는, 인공 현실 시스템."}
{"patent_id": "10-2022-7010823", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항에 있어서, 상기 복수의 서브시스템들은:카메라 서브시스템 및 호스트 서브시스템을 포함하고, 선택적으로, 상기 네트워크는 상기 카메라 서브시스템이 상기 네트워크의 제1 홉을 통해 상기 복수의 공유 메모리 뱅크들의 제1 서브세트에 도달할 수 있도록 구성되고;선택적으로, 상기 네트워크는 상기 호스트 서브시스템이 상기 네트워크의 제1 홉을 통해 상기 복수의 공유 메모리 뱅크들의 제2 서브세트에 도달할 수 있도록 구성되는, 인공 현실 시스템."}
{"patent_id": "10-2022-7010823", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시내용은 시스템 온 칩의 일부로서 구현될 수 있는 다중-뱅크, 다중-포트 공유 메모리 시스템을 사용하는 시스템의 다양한 예들을 설명한다. 공유 메모리 시스템은 인공 현실 시스템의 맥락에서 특정 적용 가능성을 가질 수 있고, 시스템 온 칩 내에서 하나 이상의 메모리 뱅크들 및/또는 하나 이상의 구성요소들 또는 서브시스템들에 대해 분산되거나 다양한 대기시간을 갖도록 설계될 수 있다. 설명된 공유 메모리 시스템은 논리적으로 단일 엔티 티일 수 있지만, 물리적으로는 다중 메모리 뱅크들을 가질 수 있으며, 각각은 다수의 구성요소들 또는 서브시스 템들에 의해 액세스 가능하다. 일부 예들에서, 메모리 시스템은 일부 상황들에서 전체 잠금 또는 중재를 필요로 하지 않고 메모리에 대한 동시, 공통 및/또는 공유 액세스를 가능하게 할 수 있다."}
{"patent_id": "10-2022-7010823", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "상호 참조 본 출원은 2019년 9월 19일에 출원된 미국 가특허 출원 62/902,783의 이익을 주장하며, 이 가출원은 전체가 본 명세서에 참조로 포함된다."}
{"patent_id": "10-2022-7010823", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "기술분야 본 발명은 일반적으로 가상 현실, 혼합 현실 및/또는 증강 현실 시스템들과 같은 인공 현실 시스템들에 대한 메 모리 시스템들을 포함하는 인공 현실 시스템들에 관한 것이다."}
{"patent_id": "10-2022-7010823", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 현실 시스템들은 컴퓨터 게임, 건강 및 안전, 산업 및 교육과 같은 많은 분야의 응용들과 함께 점점 더 널 리 보급되고 있다. 예를 들어, 인공 현실 시스템들은 모바일 디바이스들, 게임 콘솔들, 개인용 컴퓨터들, 영화 관들 및 테마 파크들에 통합되고 있다. 일반적으로, 인공 현실은 사용자에게 제공하기 전에 어떤 방식으로든 조 정된 현실의 한 형태이며, 이는 예를 들어, 가상 현실, 증강 현실, 혼합 현실, 하이브리드 현실, 또는 일부 조 합 및/또는 그 파생물들을 포함할 수 있다. 본 개시내용은 하나 이상의 다중-뱅크, 다중-포트 분산 공유 메모리 시스템들을 사용하여 구현되는 인공 현실 시스템들의 다양한 예들을 설명한다. 이러한 공유 메모리 시스템은 인공 현실 시스템의 맥락에서 특정 적용 가 능성을 갖는 하나 이상의 집적 회로들 및/또는 시스템 온 칩(SoC: system on chip)의 일부로서 구현될 수 있다. 일부 예들에서, 설명된 공유 메모리 시스템들은 논리적으로 단일 엔티티 메모리 공간으로 볼 수 있지만, 물리적 으로는 다중 메모리 뱅크들을 가질 수 있으며, 각각은 SoC 상의 구성요소들 또는 서브시스템들과 같은 임의의 다수의 구성요소들 또는 서브시스템들에 의해 액세스 가능하다. 일부 예들에서, 공유 메모리 시스템은 공유 메 모리 내의 다중 메모리 뱅크들에 대한 동시 및 저-대기시간 액세스를 가능하게 하는 동시에, 저-전력 소비 특징 들도 가능하게 할 수 있다. 이러한 동시 액세스는 적어도 일부 경우에 전체 잠금 또는 중재를 필요로 하지 않고 수행될 수 있다. 이러한 기능들은 부분적으로 SoC 상에서 구현되는 다중 스위치들 또는 네트워크들을 통해, 논 리적으로 또는 주로 특정 구성요소들 또는 서브시스템들과 연관되어 있는 동시에 모든 구성요소들 또는 서브시 스템들에 의해 여전히 액세스 가능한 메모리 뱅크를 통해, 공유 메모리 시스템 내에서 다양한 또는 분산된 대기 시간을 통해, 및/또는 메모리 뱅크들 및 다른 구성요소들과 특정 다른 구성요소들 또는 서브시스템들을 집적 회 로 상에 물리적으로 위치시킴으로써 활성화될 수 있다. 일부 예들에서, 특정 메모리 뱅크들을 특정 다른 구성요 소들 또는 서브시스템들과 연관시키는 것은 동일한 메모리 뱅크에 대한 동시 액세스 가능성을 감소시킬 수 있으 며, 결과적으로 잠금 또는 중재의 필요성을 감소시킬 수 있다.또한, 본 개시내용은 SoC의 다양한 인공 현실 구성요소들로부터 공유 메모리 내의 특정 메모리 뱅크들로의 경로 길이들을 제한하는 경향이 있는 방식으로 메모리 뱅크들 및 다른 구성요소들을 배열함으로써 설계되는 인공 현 실 SoC들의 다양한 예들을 설명한다. 이러한 제한된 경로 길이들은 전력 소비를 제한하는데 도움이 될 수 있으 며 메모리 대기시간을 감소시킬 수도 있다. 또한, 이러한 예에서, 메모리 뱅크들의 각각은 주어진 메모리 뱅크 에 액세스하는 구성요소 또는 서브시스템에 따라 변하는 대기시간을 가질 수 있다. 이러한 다양한 대기시간은 특정 응용들에 대해 SoC의 성능을 조정할 수 있는 기회들을 제공할 수 있다. 공유 메모리 및 시스템 온 칩의 개시된 예들은 다양한 구현들에서 하나 이상의 기술적 이점들을 가질 수 있다. 예를 들어, 그리고 본 명세서에 추가로 설명되는 바와 같이, 설명된 공유 메모리 및 SoC는 메모리에 대한 동시 및 저-대기시간 액세스를 가능하게 하는 동시에 저전력 소비를 가능하게 할 수 있다. 인공 현실 시스템들과 관 련하여 설명되었지만, 이 기술들은 이러한 응용들에 제한될 필요는 없다. 일부 예들에서, 본 개시내용은 본 개시내용의 하나 이상의 양태들에 따른 공유 메모리 시스템에 의해 수행되는 동작들을 설명한다. 본 발명은 청구항 1에 따른 집적 회로, 청구항 12에 따른 방법 및 청구항 13에 따른 인공 현실 시스템에 관한 것이다. 유리한 실시예들은 종속 청구항들의 특징들을 포함할 수 있다. 본 발명의 일 특정 양태에 따르면, 본 개시내용은 집적 회로를 설명하며, 상기 집적 회로는: 제1 뱅크 및 제2 뱅크를 포함하는 복수의 메모리 뱅크들을 포함하는 공유 메모리; 제1 서브시스템 및 제2 서브시스템을 포함하는 복수의 서브시스템들로서, 상기 제1 서브시스템은 제1 포트를 통해 상기 공유 메모리에 대한 액세스를 가지고, 상기 제2 서브시스템은 제2 포트를 통해 상기 공유 메모리에 대한 액세스를 가지며, 제1 포트에 의한 제1 뱅크 에 대한 액세스 대기시간은 제2 포트에 의한 제1 뱅크에 대한 액세스 대기시간보다 낮은, 상기 복수의 서브시스 템들; 및 제1 포트 및 제2 포트를 복수의 메모리 뱅크들의 각각에 연결하는 네트워크로서, 제1 스위치를 통해 제1 포트를 제1 뱅크에 연결하고, 제2 스위치를 통해 제2 포트를 제2 뱅크에 연결하고, 상기 제1 서브시스템에 의한 제1 뱅크에 및 상기 제2 서브시스템에 의한 제2 뱅크에 대한 동시 액세스를 가능하게 하는 상기 네트워크 를 포함한다. 일 실시예에서, 상기 네트워크는: 제1 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제1 뱅크로 의 액세스 대기시간보다 높도록, 제1 스위치 및 제2 스위치를 통해 제1 포트를 제2 뱅크에 연결할 수 있다. 또 한, 상기 네트워크는 제2 포트로부터 제1 뱅크로의 액세스 대기시간이 제2 포트로부터 제2 뱅크로의 액세스 대 기시간보다 높도록 제2 스위치 및 제1 스위치를 통해 제2 포트를 제1 뱅크에 연결할 수 있다. 상기 네트워크는 선택적으로, 제1 포트로부터 상기 제2 메모리 뱅크의 메모리에 액세스하기 위한 요청을 수신하고; 제1 스위치 및 제2 스위치를 통해 상기 요청을 라우팅하고 제2 뱅크에 액세스하기 위한 다른 요청들과의 경합을 피하기 위 해 중재를 수행함으로써 제1 포트가 제2 뱅크의 메모리에 액세스할 수 있게 하도록 추가로 구성될 수 있다. 다른 실시예에서, 제1 포트로부터 제1 뱅크에 액세스하는 것은 제1 뱅크에 대한 단일 홉 라우트(single hop route)를 수반할 수 있고, 제1 포트로부터 제2 뱅크에 액세스하는 것은 제2 뱅크에 대한 적어도 2개의 홉들을 포함하는 라우트를 수반할 수 있다. 일 실시예에서, 제1 스위치는 상기 집적 회로 상의 제2 포트보다 제1 포트에 물리적으로 더 가깝게 위치되고, 제2 스위치는 상기 집적 회로 상의 제1 포트보다 제2 포트에 물리적으로 더 가깝게 위치될 수 있다. 다른 실시예에서, 제1 스위치는 상기 집적 회로 상의 제2 뱅크보다 제1 뱅크에 물리적으로 더 가깝게 위치되고, 제2 스위치는 상기 집적 회로 상의 제1 뱅크보다 제2 뱅크에 물리적으로 더 가깝게 위치될 수 있다. 일 실시예에서, 상기 네트워크는 상기 제1 서브시스템이 중재 없이 제1 스위치를 통해 제1 뱅크에 액세스할 수 있게 할 수 있고, 상기 네트워크는 상기 제2 서브시스템이 중재 없이 제2 스위치를 통해 제2 뱅크에 액세스할 수 있게 할 수 있다. 일 실시예에 따르면, 상기 집적 회로는, 상기 제1 서브시스템으로부터 메모리 할당 요청을 수신하고, 비용 평가 (cost assessment)에 기초하여, 상기 복수의 뱅크들 중 어느 것으로부터 메모리를 할당할지를 결정하고, 제어기 에 의해, 하나 이상의 상기 뱅크들로부터 메모리를 할당하도록 구성된 상기 제어기를 더 포함할 수 있다. 상기 비용 평가는 선택적으로, 상기 복수의 메모리 뱅크들의 각각에 대한 대기시간, 메모리 뱅크들의 각각에 액세스 하는 것과 연관된 전력 요건들, 대기시간에 대한 상기 제1 서브시스템의 민감도, 상기 집적 회로 내의 예상 데 이터 흐름 패턴들, 상기 제1 서브시스템에 대한 예상 액세스 빈도, 하나 이상의 공유 메모리 뱅크들이 절전 모 드인지의 여부, 및 상기 하나 이상의 메모리 뱅크들을 상기 절전 모드로부터 나오게 하는 것과 연관된 전력 소 비 정보를 평가하는 것을 포함할 수 있다.다른 실시예에서, 상기 네트워크는 제1 포트로부터, 상기 제1 메모리 뱅크의 메모리에 액세스하기 위한 요청을 수신하고; 제1 스위치를 통해 상기 요청을 라우팅함으로써 중재 없이 제1 포트가 상기 제1 메모리 뱅크의 메모 리에 액세스할 수 있게 하도록 구성될 수 있다. 일 실시예에 따르면, 제1 포트는 제2 포트와 상이한 대기시간을 가질 수 있다. 다른 실시예에서, 상기 네트워크는 제2 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제2 뱅크로 의 액세스 대기시간보다 낮도록 제1 포트를 제1 뱅크에 및 제1 포트를 제2 뱅크에 연결할 수 있다. 일 실시예에서, 상기 복수의 메모리 뱅크들, 상기 복수의 서브시스템들 및 상기 네트워크 중 하나 이상은 전력 소비를 감소시키도록 상기 집적 회로 상에 배열될 수 있다. 다른 실시예에 따르면, 상기 복수의 메모리 뱅크들, 제1 포트, 제2 포트, 상기 복수의 서브시스템들 및 상기 네 트워크 중 하나 이상은 상기 공유 메모리에 액세스하는 대기시간을 감소시키도록 상기 집적 회로 상에 배열될 수 있다. 또 다른 실시예에서, 상기 복수의 메모리 뱅크들, 제1 포트, 제2 포트, 상기 복수의 서브시스템들 및 상기 네트 워크 중 하나 이상은 상기 집적 회로 상의 구성요소들 사이의 연결들의 수 및 길이를 감소시키도록 상기 집적 회로 상에 배열될 수 있다. 다른 실시예에 따르면, 상기 복수의 메모리 뱅크들, 제1 포트, 제2 포트, 상기 복수의 서브시스템들 및 상기 네 트워크 중 하나 이상은 상기 복수의 서브시스템들 중 어느 서브시스템들이 메모리 대기시간에 더 관대한지 (tolerant)에 관한 정보에 기초하여 배열될 수 있다. 일 실시예에서, 상기 메모리 뱅크들은 균일할 수 있고 각각 밀도에 최적화될 수 있다. 또 다른 실시예에서, 상기 메모리 뱅크들은 사용되지 않을 때 절전 모드로 진입하도록 구성될 수 있다. 또 다른 실시예에서, 제1 스위치 및 제2 스위치는 각각 상이한 클록 도메인에서 동작할 수 있다. 대안적으로, 제1 스위치 및 제2 스위치는 동일한 클록 도메인에서 동작할 수 있지만, 클록 오정렬들에 관대할 수 있다. 본 발명의 다른 양태에 따르면, 본 개시내용은, 집적 회로 상의 컴퓨팅 시스템에 의해 및 상기 집적 회로 상의 복수의 서브시스템들 중 하나로부터, 공유 메모리 시스템으로부터의 메모리 할당 요청을 수신하는 단계로서, 상 기 공유 메모리 시스템은 상기 집적 회로의 일부이고, 복수의 뱅크들의 각각에 액세스하는 것과 연관된 대기시 간 및 전력 소비 속성들이 상기 복수의 서브시스템들의 각각에 대해 상이하도록 상기 집적 회로 상에 배열되는 복수의 뱅크들을 포함하는, 상기 메모리 할당 요청을 수신하는 단계; 상기 컴퓨팅 시스템에 의해, 상기 복수의 서브시스템들의 각각의 예상 메모리 액세스 패턴들에 관한 정보를 포함하는 평가에 기초하고, 또한 상기 대기시 간 및 전력 소비 속성들에 기초하여 상기 복수의 뱅크들 중 어느 것으로부터 메모리를 할당할지를 결정하는 단 계; 및 상기 컴퓨팅 시스템에 의해 및 결정에 응답하여, 상기 복수의 뱅크들 중 하나 이상으로부터 메모리를 할 당하는 단계를 포함하는 방법을 설명한다. 본 발명의 다른 양태에 따르면, 본 개시내용은, 복수의 스위치들을 포함하는 네트워크를 포함하는 집적 회로에 있어서: 상기 복수의 스위치들에 포함된 스위치가 집적 회로 상의 복수의 서브시스템들 중 하나로부터 공유 메 모리 시스템의 복수의 뱅크들에 포함된 요청된 뱅크로부터의 메모리 액세스 요청을 수신하는 동작으로서, 상기 공유 메모리 시스템은 상기 집적 회로의 일부이고, 상기 복수의 뱅크들은 상기 복수의 뱅크들의 각각에 액세스 하는 것과 연관된 대기시간 및 전력 소비 속성들이 상기 복수의 서브시스템들의 각각에 대해 상이하도록 상기 집적 회로 상에 배열되는, 상기 메모리 액세스 요청 수신 동작; 상기 복수의 스위치들 중 임의의 다른 스위치를 통해 상기 요청된 뱅크에 액세스하지 않고 상기 요청된 뱅크가 상기 스위치로부터 직접 액세스할 수 있는지 여 부를 결정하는 동작; 상기 요청된 뱅크에 직접 액세스할 수 있는 경우 중재 없이 상기 요청된 뱅크에 액세스하 는 동작; 및 상기 요청된 뱅크에 직접 액세스할 수 없는 경우 중재를 수행한 후 상기 요청된 뱅크에 액세스하는 동작을 수행하도록 구성되는, 상기 집적 회로를 설명한다. 본 발명의 또 다른 양태에 따르면, 본 개시내용은, 물리적 환경을 나타내는 이미지 데이터를 캡처하도록 구성된 이미지 캡처 시스템; 및 인공 현실 컨텐트를 출력하도록 구성된 헤드-마운트 디스플레이(HMD: head-mounted display)를 포함하는 인공 현실 시스템을 설명한다. 상기 헤드-마운트 디스플레이는 집적 회로를 포함하고, 상 기 집적 회로는 제1 뱅크 및 제2 뱅크를 포함하는 복수의 공유 메모리 뱅크들과; 제1 서브시스템 및 제2 서브시 스템을 포함하는 복수의 서브시스템들로서, 상기 제1 서브시스템은 제1 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한 액세스를 가지고, 상기 제2 서브시스템은 제2 포트를 통해 상기 공유 메모리 뱅크들의 각각에 대한액세스를 가지며, 제1 포트에 의한 제1 뱅크에 대한 대기시간은 제2 포트에 의한 제1 뱅크에 대한 대기시간보다 낮은, 상기 복수의 서브시스템을 포함한다. 상기 집적 회로는 제1 포트 및 제2 포트를 상기 공유 메모리 뱅크들 의 각각에 연결하는 네트워크를 더 포함하고, 상기 네트워크는 제1 스위치를 통해 제1 포트를 제1 뱅크에 연결 하고, 제2 스위치를 통해 제2 포트를 제2 뱅크에 연결하고, 상기 제1 서브시스템에 의한 제1 뱅크에 및 상기 제 2 서브시스템에 의한 제2 뱅크에 대한 동시 액세스를 가능하게 하도록 상기 집적 회로 내에서 구성된다. 일 실시예에서, 상기 네트워크는: 제1 포트로부터 제2 뱅크로의 액세스 대기시간이 제1 포트로부터 제1 뱅크로 의 액세스 대기시간보다 높도록, 제1 스위치 및 제2 스위치를 통해 제1 포트를 제2 뱅크에 연결하고; 제2 포트 로부터 제1 뱅크로의 액세스 대기시간이 제2 포트로부터 제2 뱅크로의 액세스 대기시간보다 높도록 제2 스위치 및 제1 스위치를 통해 제2 포트를 제1 뱅크에 연결하기 위해 상기 집적 회로 내에서 구성될 수 있다. 다른 실시예에서, 상기 복수의 서브시스템들은 카메라 서브시스템 및 호스트 서브시스템을 포함할 수 있다. 상 기 네트워크는 선택적으로 상기 카메라 서브시스템이 상기 네트워크의 제1 홉을 통해 상기 복수의 공유 메모리 뱅크들의 제1 서브세트에 도달할 수 있도록 구성되고, 상기 네트워크는 선택적으로 상기 호스트 서브시스템이 상기 네트워크의 제1 홉을 통해 상기 복수의 공유 메모리 뱅크들의 제2 서브세트에 도달할 수 있도록 구성될 수 있다. 본 개시내용의 기술들의 하나 이상의 예들의 세부사항들은 첨부 도면들 및 하기 설명에 기재된다. 이 기술의 다 른 특징들, 목적들 및 이점들은 설명 및 도면들로부터, 그리고 청구범위로부터 명백할 것이다."}
{"patent_id": "10-2022-7010823", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1a는 본 개시내용에 설명된 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집 적 회로들을 사용하여 구현되는 예시적인 인공 현실 시스템을 도시하는 예시이다. 도 1a의 예에서, 인공 현실 시스템은 헤드 마운트 디바이스(HMD), 콘솔, 및 일부 예들에서는 하나 이상의 외부 센서들을포함한다. 도시된 바와 같이, HMD는 통상적으로 사용자에 의해 착용되고 인공 현실 컨텐트를 사용자 에게 제공하기 위한 전자 디스플레이 및 광학 어셈블리를 포함한다. 또한, HMD는 HMD의 모션을 추적하기 위한 하나 이상의 센서들(예를 들어, 가속도계들)을 포함하고, 주변의 물리적 환경의 이미지 데이터를 캡처하기 위한 하나 이상의 이미지 캡처 디바이스들, 예를 들어, 카메라들, 라인 스캐너들 등을 포함할 수 있다. 헤 드-마운트 디스플레이로 예시되어 있지만, AR 시스템은 대안적으로 또는 부가적으로 인공 현실 컨텐트(12 2)를 사용자에게 제공하기 위한 안경 또는 다른 디스플레이 디바이스들을 포함할 수 있다. 이 예에서, 콘솔은 게임 콘솔, 워크스테이션, 데스크탑 컴퓨터 또는 랩탑과 같은 단일 컴퓨팅 디바이스로 서 도시된다. 다른 예들에서, 콘솔은 분산 컴퓨팅 네트워크, 데이터 센터, 또는 클라우드 컴퓨팅 시스템과 같은 복수의 컴퓨팅 디바이스들에 걸쳐 분산될 수 있다. 콘솔, HMD, 및 센서들은 이 예에 도시된 바와 같이, WiFi, 메시 네트워크 또는 단거리 무선 통신 매체와 같은 유선 또는 무선 네트워크일 수 있는 네트 워크를 통해 통신 가능하게 결합될 수 있다. HMD가 이 예에서 콘솔과 통신하는 것으로, 예를 들 어, 콘솔에 테더링되거나 이와 무선 통신하는 것으로 도시되지만, 일부 구현들에서 HMD는 독립형 모 바일 인공 현실 시스템으로서 동작한다. 일부 예들에서, 인공 현실 시스템은, 공통 인공 현실 환경을 공동 으로 구축하고 공유하는 다중 인공 현실 애플리케이션들을 동시에 실행하도록 구성된 동시 애플리케이션 엔진 을 포함한다. 일반적으로, 인공 현실 시스템은 사용자에게 디스플레이하기 위한 인공 현실 컨텐트를 렌더링하 기 위해 현실-세계의 3D 물리적 환경으로부터 캡처된 정보를 사용한다. 도 1a의 예에서, 사용자는 콘솔 및/또는 HMD 상에서 실행되는 인공 현실 애플리케이션에 의해 구성되고 및 렌더링되는 인공 현실 컨 텐트를 뷰잉한다. 일부 예들에서, 인공 현실 컨텐트는 현실-세계 이미지(예를 들어, 손, 지구 , 벽)과 가상 객체들(예를 들어, 가상 컨텐트 항목들(124, 126, 140 및 142))의 혼합물을 포함할 수 있다. 도 1a의 예에서, 인공 현실 컨텐트는, 가상 테이블을 나타내고 인공 현실 컨텐트 내의 특정 위 치에 매핑(예를 들어, 고정, 잠금, 배치)될 수 있는 가상 컨텐트 항목들(124, 126)을 포함한다. 유사하게, 인공 현실 컨텐트는, 인공 현실 컨텐트 내의 특정 위치에도 또한 매핑되는 가상 디스플레이 디바이스를 나 타내는 가상 컨텐트 항목을 포함한다. 가상 컨텐트 항목에 대한 위치는 예를 들어, 벽 또는 지구에 대해 고정될 수 있다. 가상 컨텐트 항목에 대한 위치는 예를 들어, 사용자에 대해 가변적일 수 있다. 일부 예들에서, 인공 현실 컨텐트 내의 가상 컨텐트 항목의 특정 위치는 현실-세계, 물리적 환경 내(예를 들어, 물리적 객 체의 표면 상)의 위치와 연관된다. 도 1a에 도시된 예시적인 인공 현실 경험에서, 가상 컨텐트 항목들(124, 126)은 지구 및/또는 벽 상 의 위치들에 매핑된다. 인공 현실 시스템은 가상 컨텐트 항목들의 위치의 적어도 일부가 사용자의 시 야에 있다는 결정에 응답하여 하나 이상의 가상 컨텐트 항목들을 렌더링할 수 있다. 즉, 가상 컨텐트는 인 공 현실 컨텐트 내에서만 나타나고 현실 세계, 물리적 환경에는 존재하지 않는다. 동작 동안, 인공 현실 애플리케이션은 기준 프레임(frame of reference), 통상적으로 HMD의 뷰잉 관점에 대한 자세 정보를 추적 및 계산함으로써 사용자에게 디스플레이하기 위한 인공 현실 컨텐트를 구성한 다. HMD를 기준 프레임으로 사용하고, HMD의 현재 추정된 자세에 의해 결정된 현재 시야에 기초 하여, 인공 현실 애플리케이션은, 일부 예들에서 사용자의 현실 세계의 3D 물리적 환경에 적어도 부분적으 로 오버레이될 수 있는 3D 인공 현실 컨텐트를 렌더링한다. 이 프로세스 동안, 인공 현실 애플리케이션은 움직 임 정보 및 사용자 명령들과 같은 HMD로부터 수신된 감지 데이터와, 일부 예들에서 외부 카메라들과 같은 임의의 외부 센서들로부터의 데이터를 사용하여 사용자의 모션 및/또는 사용자에 대한 특징 추적 정보와 같은 현실 세계, 물리적 환경 내에서 3D 정보를 캡처한다. 감지된 데이터에 기초하여, 인공 현실 애플리 케이션은 HMD의 기준 프레임에 대한 현재 자세를 결정하고 현재 자세에 따라 인공 현실 컨텐트를 렌 더링한다. 인공 현실 시스템은 사용자의 현재 시야에 기초하여 가상 컨텐트 항목들의 생성 및 렌더링을 트 리거할 수 있으며, 이는 사용자의 거의 또는 외견상 거의 실시간 시선 추적(real-time gaze tracking) 또는 다 른 조건들에 의해 결정될 수 있다. 보다 구체적으로, HMD의 이미지 캡처 디바이스들은 이미지 캡처 디바이스들의 시야 내에 있는 현실-세계 물리적 환경의 객체들을 나타내는 이미지 데이터를 캡처한다. 시야는 통상적으로 HMD의 시야 관점에 대응한다. 일부 예들에서, 인공 현실 애플리케이션 은 혼합 현실 및/또는 증강 현실을 포함하는 인공 현실 컨텐트를 제공한다. 일부 예들에서, 인공 현실 애플리케이션은, 인공 현실 컨텐트 내에 있는 것과 같이, 가상 객체들과 함께 시야 내에 있는 사용자 의 손 및/또는 팔의 부분들과 같은 현실-세계 객체들의 이미지들을 렌더링할 수 있다. 다른 예 들에서, 인공 현실 애플리케이션은, 인공 현실 컨텐트 내의 시야 내에 있는 사용자의 손 및/또는 팔의 부분들의 가상 표현들을 렌더링(예를 들어, 현실-세계 객체들을 가상 객체들로서 렌더링)할 수 있다. 어느 예이든, 사용자는 인공 현실 컨텐트 내의 시야 내에 있는 그들의 손, 팔 , 및/또는 임의의 다른 현실-세계 객체들의 부분들을 뷰잉할 수 있다. 다른 예들에서, 인공 현실 애플리케 이션은 사용자의 손 또는 팔의 표현들을 렌더링하지 않을 수 있다. 동작 동안, 인공 현실 시스템은 HMD의 이미지 캡처 디바이스들에 의해 캡처된 이미지 데이터 내 에서 객체 인식을 수행하여, 개별 손가락들 또는 엄지를 선택적으로 식별하는 것을 포함하여 손 및/또는 사용자의 팔의 전부 또는 부분들을 식별한다. 또한, 인공 현실 시스템은 시간의 슬라이딩 윈도우 에 걸쳐 손(손의 특정 손가락들을 선택적으로 포함하여) 및/또는 팔의 부분들의 위치, 방향 및 구성 을 추적한다. 도 1a의 예에서, 인공 현실 시스템은 장면의 객체들을 선택 및 옮기는(예를 들어, 이동하는) 것과 같이 인 공 현실 애플리케이션에 의해 원하는 응답을 트리거하도록 의도된 하나 이상의 제스처들을 검출할 수 있다. 일 부 예들에서, 인공 현실 시스템은, 아젠다 객체(agenda object; 142) 상의 선택 제스처(예를 들어, 집기), 제공 영역(offer area; 150) 밖으로 아젠다 객체를 이동시키기 위한 옮김 제스처(translation gesture), 및 인공 현실 컨텐트 내의 다른 제공 영역으로 또는 제공 영역 내의 다른 위치에서 아젠다 객체를 해제하 기 위한 재선택 제스처와 같은 일련의 제스처들을 검출할 수 있다. 아젠다 객체가 다른 제공 영역으로 또 는 제공 영역 내의 다른 위치에서 해제되면, 쉘(shell)은 아젠다 객체를 제공 영역에 연결하기 위한 첨부 (attachment)를 처리한다. 이러한 예들에서, 동시 애플리케이션 엔진의 쉘은 아젠다 객체에 대한 동 적 업데이트들(예를 들어, 아젠다 객체로 식별된 하나 이상의 제스처들)을 수신할 수 있고 공통 장면에서 아젠다 객체에 대한 동적 업데이트들을 렌더링할 수 있다. 다른 예들에서, 쉘은 인공 현실 애플리케이션들에 대한 네트워크 업데이트들 또는 센서 업데이트들과 같은 동적 업데이트들을 수신할 수 있다. 일례로서, 미디어 컨텐트 애플리케이션(예를 들어, 주식 시세)은 가상 디스플레 이 객체 상에 디스플레이될 미디어 컨텐트 제공자로부터 주기적 업데이트들을 수신할 수 있다. 이 예에서, 동시 애플리케이션 엔진의 쉘은 미디어 컨텐트 애플리케이션에 대한 입력 및 다른 신호들(예를 들어, 주식 시세 업데이트들)을 전달한다. 일부 예들에서, 콘솔, HMD, 및/또는 도 1a의 시스템의 다른 구성요소들은 하나 이상의 시스템 온 칩들(SoC들)을 통해 구현될 수 있다. 이러한 SoC들은 본 명세서에 추가로 설명되는 다중-뱅크, 다중-포트 분산 공유 메모리 시스템을 사용할 수 있다. 특히, 공유 메모리 시스템은 도 1a의 HMD를 구현할 때 특정한 적용 가능성을 가질 수 있는데, 이는 HMD가 광범위한 메모리를 수반하는 방식으로 동작할 수 있지만, 외부 메모 리의 사용, 특히 외부 메모리의 광범위한 사용이 대기시간, 동시 액세스 및/또는 전력 소비의 관점에서 비용이 많이 들 수 있기 때문이다. 따라서, HMD의 양태들은 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리 시 스템을 포함하는 SoC들을 사용하여 구현될 수 있다. 시스템 및 기술들은 적어도 하나의 실제 응용을 제공하는 하나 이상의 기술적 이점들을 제공할 수 있다. 예를 들어, 개시된 공유 메모리 시스템들 및/또는 시스템 온 칩들은 또한 다양한 구현들에서 또한 하나 이상의 기술 적 이점들을 가질 수 있다. 예를 들어, 본 명세서에 추가로 설명되는 바와 같이, 본 개시내용의 하나 이상의 양 태들에 따라 구현되는 공유 메모리 및 SoC는 공유 메모리에 대한 저-대기시간 액세스, 공유 메모리에 대한 동시 액세스를 가능하게 하는 동시에 저전력 소비를 가능하게 할 수도 있다. 어떤 경우에는 중재 및/또는 경합 또는 잠금 프로토콜들을 필요로 하지 않고 공유 메모리에 대한 이러한 동시 액세스가 발생할 수 있다. 이러한 공유 메모리 시스템은 또한 구성 가능 및/또는 분산 대기시간, 독립형 메모리 뱅크들, 및 균일하게 설계 또는 제작된 메모리 뱅크들을 가능하게 할 수 있다. 이러한 균일한 설계 및/또는 제조는 집적 회로 상에서 고도로-조정된 성 능 및/또는 고밀도 구현을 가능하게 할 수 있다. 일부 예들에서, 각 메모리 뱅크의 일부 양태들은 또한 개별적 으로 구성 가능할 수도 있다. 예를 들어, 각 메모리 뱅크는 다양한 메모리 뱅크 대기시간 및 별도로-구성 가능 한 메모리 뱅크 저전력 모드들을 포함할 수 있다. 도 1b는 본 개시내용의 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집적 회로 들을 사용하여 구현되는 다른 예시적인 인공 현실 시스템을 도시하는 예시이다. 도 1a의 인공 현실 시스템 과 유사하게, 일부 예들에서, 도 1b의 인공 현실 시스템은 다중-사용자 인공 현실 환경 내에서 복수의 인공현실 애플리케이션들을 위한 객체들을 포함하는 공통 장면을 생성 및 렌더링할 수 있다. 인공 현실 시스템 은 또한 다양한 예들에서 다중-사용자 인공 현실 환경 내에서 사용자의 하나 이상의 특정 제스처들의 검출에 응 답하여 가상 객체들의 상호작용 배치 및/또는 조작을 제공할 수 있다. 도 1b의 예에서, 인공 현실 시스템은 외부 카메라들(102A 및 102B)(총칭하여 \"외부 카메라들\"), HMD(112A 내지 112C)(총칭하여 \"HMD들\"), 제어기들(114A 및 114B)(총칭하여 \"제어기들\"), 콘솔 및 센서들을 포함한다. 도 1b에 도시된 바와 같이, 인공 현실 시스템은 다중-사용자 환경을 나타내며, 여기에서 콘솔 및/또는 HMD들에서 실행되는 복수의 인공 현실 애플리케이션들이 동시에 실행되고 각 각의 사용자에 대한 대응하는 기준 프레임의 현재 뷰잉 관점에 기초하여 사용자들(110A 내지 110C)(총칭하여, \"사용자들\")의 각각에게 제공되는 공통 렌더링된 장면에 디스플레이된다. 즉, 이 예에서, 복수의 인공 현 실 애플리케이션들의 각각은 HMD들의 각각에 대한 기준 프레임에 대한 자세 정보를 추적 및 계산하여 인공 컨텐트를 구성한다. 인공 현실 시스템은 카메라들, HMD들 및 제어기들로부터 수신된 데이터 를 사용하여, HMD들의 대응하는 기준 프레임에 대한 업데이트된 자세 정보를 계산하는데 사용하기 위해, 사용자들에 의한 모션 및/또는 사용자들 및 객체들에 대한 추적 정보와 같은 현실 세계 환경 내 의 3D 정보를 캡처한다. 일례에서, 복수의 인공 현실 애플리케이션들은 HMD(112C)에 대해 결정된 현재 뷰잉 관 점에 기초하여, 현실 세계 객체들(108A 내지 108C)(총칭하여, \"현실 세계 객체들\")에 공간적으로 오버레이 된 가상 객체들(124, 126, 140, 142)을 갖는 인공 현실 컨텐트를 동일한 장면에 렌더링할 수 있다. 또한, HMD(112C)의 관점에서, 인공 현실 시스템은 사용자들(110A, 110B) 각각에 대한 추정된 위치들에 기초하여 아바타들(122A, 122B)을 렌더링한다. HMD들의 각각은 인공 현실 시스템 내에서 동시에 동작한다. 도 1b의 예에서, 사용자들의 각각은 복수의 인공 현실 애플리케이션들의 \"참가자(participant)\"(또는 \"플레이어(player)\")일 수 있고, 사용자들 중 임의의 사용자는 복수의 인공 현실 애플리케이션들의 \"관중자(spectator)\" 또는 \"관찰자(observer)\"일 수 있다. HMD(112C)는, 사용자(110C)의 손 및/또는 팔을 추적하고, 시야 내에 있는 손의 부분들을 인공 현실 컨텐트 내의 가상 손으로 렌더링함으로써 도 1a의 HMD와 실질적으로 유사하 게 동작할 수 있다. HMD(112B)는 사용자(110B)가 들고 있는 제어기들(114A)로부터 사용자 입력들을 수신할 수 있다. HMD(112A)는 또한 도 1a의 HMD와 실질적으로 유사하게 동작할 수 있고, 사용자(110A)의 손들(132A, 132B)의 움직임들을 추적함으로써 사용자 입력들을 수신할 수 있다. HMD(112B)는 사용자(110B)가 들고 있는 제 어기들로부터 사용자 입력들을 수신할 수 있다. 제어기들은 블루투스와 같은 근거리 무선 통신의 근 거리 통신을 사용하거나, 유선 통신 링크들을 사용하거나, 또는 다른 유형의 통신 링크들을 사용하여 HMD(112 B)와 통신할 수 있다. 도 1a와 관련하여 상술한 예들과 유사한 방식으로, 인공 현실 시스템의 콘솔 및/또는 HMD(112C)는 다 중 인공 현실 애플리케이션들이 동시에 실행되고 장면 상에 디스플레이되는 장면을 생성 및 렌더링한다. 특히, HMD 또는 콘솔에서 실행되는 동시 애플리케이션 엔진은 아젠다 애플리케이션 및 미디어 컨텐트 애플리케이션이 동시에 실행되고 인공 현실 컨텐트 상에 디스플레이되는 장면을 집계 및 렌더링하도록 구 성된다. 이 예에서, 동시 애플리케이션 엔진은 아젠다 애플리케이션의 아젠다 객체 및 사용자들(11 0)의 각각에게 제공되는 미디어 컨텐트 애플리케이션의 가상 디스플레이 객체를 포함하는 공통 장면을 렌 더링한다. 이러한 방식으로, 사용자(110C)는 하나 이상의 사용자들(110A 및 110B)과, 파일들 또는 미디어 컨텐 트와 같은 인공 현실 애플리케이션들을 동시에 실행하는 컨텐트를 공유할 수 있다. 컨텐트를 공유할 때, HMD들 의 각각은 실행시 컨텐트를 출력할 수 있어서, HMD들이 지리적으로 상이한 위치들에 있더라도 사용자들 의 각각은 컨텐트를 함께 경험할 수 있다. 도 1b에 도시된 바와 같이, HMD(112C)의 카메라를 통해 캡처된 이미지 데이터에 추가로 또는 대안적으로, 외부 카메라들로부터의 입력 데이터는, 손의 손가락들(손가락들, 엄지)의 개별 및/또는 조합들의 움직임들 을 포함한 사용자(110C)의 손과 같이, 사용자들의 손들 및 팔들의 특정 모션들, 구성들, 위치들 및/ 또는 방향들을 추적 및 검출하는데 사용될 수 있다. 일부 양태들에서, 인공 현실 애플리케이션은 콘솔에서 실행될 수 있고, 이미지 캡처 디바이스들(102A 및 102B)을 활용하여 손(132B)의 구성들, 위치들 및/또는 방향들을 분석하여 HMD(112A)의 사용자에 의해 수행될 수 있는 입력 제스처들을 식별할 수 있다. 동시 애플리케이션 엔진은 도 1a와 관련하여 상술한 것과 유사한 방식으로 이러한 제스처들, 모션들 및 방향들에 응답하여 가상 컨텐트 항목들을 렌더링할 수 있다. 예를 들어, 동시 애플리케이션 엔진은 도 1a와 관련하여 상술한 것과 유사한 방식으로 이러한 제스처들, 움직임들 및 방향들에 응답하여 아젠다 객체 및/또는 가상 디스플레이 객체의 상호작용 배치 및/또는 조작을 제공할 수 있다. 이미지 캡처 디바이스들(102 및 138)은 가시광선 스펙트럼, 적외선 스펙트럼, 또는 다른 스펙트럼의 이미지들을 캡처할 수 있다. 객체들, 객체 자세들 및 제스처들을 식별하기 위해 본 명세서에 설명된 이미지 처리는 예를 들 어, 적외선 이미지들, 가시광선 스펙트럼 이미지들 등을 처리하는 것을 포함할 수 있다. 일부 예들에서, 콘솔, HMD, 및/또는 도 1b의 시스템의 다른 구성요소들은 본 명세서에 추가로 설 명된 하나 이상의 SoC들을 통해 구현될 수 있다. 예를 들어, 일부 예들에서, HMD는 본 명세서에 추가로 설 명된 다중-뱅크, 다중-포트 공유 메모리 시스템을 포함하는 하나 이상의 SoC들을 포함할 수 있다. 이러한 공유 메모리 시스템은 전력도 절약하면서 공유 메모리에 대한 동시 및 저-대기시간 액세스를 가능하게 할 수 있다. 일부 예들에서, 이러한 공유 메모리 시스템은 HMD 내에서 발생하는 예상 데이터 흐름들에 조정된 다중-포 트, 다중-뱅크, 분산 대기시간 공유 메모리 시스템을 사용하여 구현될 수 있다. 도 2a는 본 개시내용의 기술들에 따라 동작하는 예시적인 HMD를 도시한 예시이다. 도 2a의 HMD는 도 1a 및 도 1b의 HMD 중 임의의 HMD들의 예일 수 있다. HMD는 도 1a 또는 도 1b의 인공 현실 시스템들 (10, 20)과 같은 인공 현실 시스템의 일부일 수 있거나, 본 명세서에 설명된 기술들을 구현하도록 구성된 독립 형 모바일 인공 현실 시스템으로 동작할 수 있다. 이 예에서, HMD는 전면 강체 및 HMD를 사용자에게 고정하기 위한 밴드를 포함한다. 또한, HMD는 인공 현실 컨텐트를 사용자에게 제공하도록 구성된 내부를 향하는 전자 디스플레이들을 포함한다. 전자 디 스플레이들은 액정 디스플레이들(LCD), 양자 도트 디스플레이, 도트 매트릭스 디스플레이들, 발광 다이오 드(LED) 디스플레이들, 유기 발광 다이오드(OLED) 디스플레이들, 음극선관(CRT) 디스플레이들, e-잉크 또는 흑 백, 컬러 또는 시각적 출력을 생성할 수 있는 다른 유형의 디스플레이와 같은 임의의 적합한 디스플레이 기술일 수 있다. 일부 예들에서, 전자 디스플레이는 사용자의 각 눈에 별도의 이미지들을 제공하기 위한 입체 디스플레 이이다. 일부 예들에서, HMD의 전면 강체에 대한 디스플레이의 알려진 방향 및 위치는 HMD 및 사용자의 현재 뷰잉 관점에 따라 인공 현실 컨텐트를 렌더링하기 위해 HMD의 위치 및 방향을 추적할 때 기 준 프레임으로 사용되며 로컬 원점이라고도 칭해진다. 다른 예들에서, HMD는 안경 또는 고글과 같은 다른 웨어 러블 헤드 마운트 디스플레이들의 형태를 취할 수 있다. 도 2a에 더 도시된 바와 같이, 이 예에서, HMD는 HMD의 현재 가속도를 나타내는 데이터를 출력하는 하나 이상의 가속도계들(관성 측정 유닛들 또는 \"IMU들\"로도 칭해짐)과 같은 하나 이상의 모션 센서들, HMD의 위치를 나타내는 데이터를 출력하는 GPS 센서들, 다양한 객체들로부터 HMD의 거리들을 나타내 는 데이터를 출력하는 레이더 또는 소나(sonar), 또는 HMD나 물리적 환경 내의 다른 객체들의 위치 또는 방향의 표시들을 제공하는 다른 센서들을 더 포함할 수 있다. 또한, HMD는 물리적 환경을 나타내는 이미지 데이터를 출력하도록 구성된 비디오 카메라들, 레이저 스캐너들, 도플러 레이더 스캐너들, 깊이 스캐너들 등과 같은 통합 이미지 캡처 디바이스들(138A 및 138B)(총칭하여 \"이미지 캡처 디바이스들\")을 포함할 수 있다. 보다 구체적으로, 이미지 캡처 디바이스들은, 통상적으로 HMD의 뷰잉 관점에 대응하는 이미지 캡처 디바이스들의 시야(130A, 130B) 내에 있는 물리적 환경에서 객체들(손 포함)을 나타내는 이미지 데이 터를 캡처한다. HMD는 내부 제어 유닛을 포함하고, 이는 내부 전원 및 하나 이상의 인쇄-회로 기판들 을 포함할 수 있으며, 하나 이상의 인쇄 회로 기판은 하나 이상의 처리기들, 메모리, 및 감지된 데이터를 처리 하고 디스플레이 상에 인공 현실 컨텐트를 제공하기 위해 프로그램 가능한 동작들을 실행하기 위한 오퍼레 이팅 환경을 제공하기 위한 하드웨어를 구비한다. 일례에서, 본 명세서에 설명된 기술들에 따라, 제어 유닛은 감지된 데이터(예를 들어, 이미지 캡처 디바이 스들(138 및/또는 102)에 의해 캡처된 이미지 데이터, GPS 센서들로부터의 위치 정보) 및 복수의 인공 현실 애 플리케이션들의 가상 객체들(예를 들어, 도 1a 또는 도 1b의 가상 컨텐트 항목들(124, 126, 140, 142))의 모델 링 정보의 집계에 기초하여, 복수의 동시 실행 인공 현실 애플리케이션들의 객체들이 공통 장면에서 동시에 디 스플레이되도록 디스플레이 상에서의 디스플레이를 위해 생성 및 렌더링되도록 구성된다. 도 1a 및 도 1b 를 참조하여 설명된 바와 같이, HMD는 동시 실행 애플리케이션들을 조합하도록 구성된 동시 애플리케이션 엔진을 포함하고 이들을 공통의 렌더링된 장면에 디스플레이한다. 일부 예들에서, 제어 유닛의 양태 들은 본 명세서에 추가로 설명되는 바와 같이, 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리 시스템을 통해 구현될 수 있다. 일부 예들에서, 동시 애플리케이션 엔진은 장면 상의 객체들에 대한 상호작용을 제어하고, 관심 있는 인공 현실 애플리케이션들에 대한 입력 및 기타 신호들을 전달한다. 예를 들어, 제어 유닛은 감지된 데이터에기초하여, 사용자에 의해 수행된 특정 제스처 또는 제스처들의 조합을 식별하고, 이에 응답하여 동작을 수행하 도록 구성된다. 본 명세서에 설명된 바와 같이, 제어 유닛은 손, 손가락들, 엄지, 팔 또는 사용자의 다른 부분을 식별하기 위해 이미지 캡처 디바이스들에 의해 캡처된 이미지 데이터 내에서 객체 인식을 수 행할 수 있고 사용자에 의해 수행되는 미리-규정된 제스처들을 식별하기 위해 식별된 부분의 움직임들을 추적할 수 있다. 미리-규정된 제스처를 식별하는 것에 응답하여, 제어 유닛은 전자 디스플레이들 상에 디스 플레이하기 위해 대화식으로 배치되거나 조작되는 인공 현실 컨텐트를 생성 및 렌더링하는 것과 같은 일부 동작 을 취한다. 본 명세서에 설명된 기술들에 따르면, HMD는 손의 제스처들을 검출할 수 있고, 검출된 제스처들에 기 초하여 인공 현실 컨텐트 내의 제공 영역에 배치된 애플리케이션 컨텐트 항목들을 제공 영역 내의 다른 위치로 또는 인공 현실 컨텐트 내의 다른 제공 영역으로 이동시킬 수 있다. 예를 들어, 이미지 캡처 디바이스들은 물리적 환경을 나타내는 이미지 데이터를 캡처하도록 구성될 수 있다. 제어 유닛은 전자 디스플레이들 상에 인공 현실 컨텐트를 출력할 수 있다. 제어 유닛은 객체(예를 들어, 도 1a 및 도 1b의 아젠다 객체)를 연결하는 첨부를 포함하는 제1 제공 영역(예를 들어, 도 1a 및 도 1b의 제공 영역))를 렌더 링할 수 있다. 제어 유닛은 이미지 데이터로부터 선택 제스처를 식별할 수 있으며, 여기서 선택 제스처는 제공 영역 내에서 객체를 집거나 잡는 모션을 수행하는 손의 구성과, 제1 제공 영역으로부터 제2 제공 영 역(예를 들어, 도 1a 및 도 1b의 제공 영역)으로의 손의 후속 옮기는 제스처(예를 들어, 이동하는)이 다. 제어 유닛이 선택 제스처 및 옮기는 제스처를 식별하는 것에 응답하여, 제어 유닛은 제2 제공 영 역 상의 객체를 연결하고 제2 제공 영역 상에 배치된 객체를 렌더링하기 위해 첨부를 처리할 수 있다. 도 2b는 본 개시내용에서 설명된 기술들에 따른, 다른 예시적인 HMD를 도시한 예시이다. 도 2b에 도시된 바와 같이, HMD는 안경의 형태를 취할 수 있다. 도 2a의 HMD는 도 1a 및 도 1b의 HMD들 중 어 느 하나의 예일 수 있다. HMD는 도 1a, 도 1b의 인공 현실 시스템들(10, 20)과 같은 인공 현실 시스템의 일부일 수 있거나, 또는 본 명세서에 설명된 기술들을 구현하도록 구성된 독립형 모바일 인공 현실 시스템으로 동작할 수 있다. 이 예에서, HMD는 HMD가 사용자의 코에 올려놓을 수 있도록 하는 브리지를 포함하는 전면 프레임과, 사용자에게 HMD를 고정하기 위해 사용자의 귀 너머 연장되는 안경다리들(또는 \"팔들(arms)\")을 포함하는 안경이다. 또한, 도 2b의 HMD는 인공 현실 컨텐트를 사용자에게 제공하도록 구성된 내부를 향하는 전자 디 스플레이들(203A 및 203B)(총칭하여 \"전자 디스플레이들\")을 포함한다. 전자 디스플레이들은 액정 디 스플레이들(LCD), 양자 도트 디스플레이, 도트 매트릭스 디스플레이들, 발광 다이오드(LED) 디스플레이들, 유기 발광 다이오드(OLED) 디스플레이들, 음극선관(CRT) 디스플레이들, e-잉크, 또는 흑백, 컬러 또는 시각적 출력을 생성할 수 있는 다른 유형의 디스플레이와 같은 임의의 적합한 디스플레이 기술일 수 있다. 도 2b에 도시된 예 에서, 전자 디스플레이들은 사용자의 각 눈에 별도의 이미지들을 제공하기 위한 입체 디스플레이를 형성한 다. 일부 예들에서, HMD의 전면 프레임에 대한 디스플레이의 알려진 방향 및 위치는, HMD 및 사 용자의 현재 뷰잉 관점에 따라 인공 현실 컨텐트를 렌더링하기 위해 HMD의 위치 및 방향을 추적할 때 기준 프레임으로 사용되며 로컬 원점이라고도 칭해진다. 도 2b에 더 도시된 바와 같이, 이 예에서, HMD는 HMD의 현재 가속도를 나타내는 데이터를 출력하는 하나 이상의 가속도계들(관성 측정 유닛들 또는 \"IMU들\"로도 칭해짐)과 같은 하나 이상의 모션 센서들, HMD의 위치를 나타내는 데이터를 출력하는 GPS 센서들, 다양한 객체들로부터 HMD의 거리들을 나타내 는 데이터를 출력하는 레이더 또는 소나, 또는 HMD나 물리적 환경 내의 다른 객체들의 위치 또는 방향의 표시들을 제공하는 다른 센서들을 더 포함할 수 있다. 또한, HMD는 물리적 환경을 나타내는 이미지 데이터 를 출력하도록 구성된 비디오 카메라들, 레이저 스캐너들, 도플러 레이더 스캐너들, 깊이 스캐너들 등과 같은 통합 이미지 캡처 디바이스들(138A 및 138B)(총칭하여 \"이미지 캡처 디바이스들\")를 포함할 수 있다. HMD는 내부 제어 유닛을 포함하고, 이는 내부 전원 및 하나 이상의 인쇄-회로 기판들을 포함할 수 있 으며, 하나 이상의 인쇄 회로 기판은 하나 이상의 처리기들, 메모리, 및 감지된 데이터를 처리하고 디스플레이 상에 인공 현실 컨텐트를 제공하기 위해 프로그램 가능한 동작들을 실행하기 위한 오퍼레이팅 환경을 제 공하기 위한 하드웨어를 구비한다. 도 2a에서와 같이, 제어 유닛의 양태들은 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리 시스템을 통해 구현될 수 있다. 도 2a에 도시된 예와 유사하게, HMD는 감지된 데이터(예를 들어, 이미지 캡처 디바이스들(138 및/또는 102)에 의해 캡처된 이미지 데이터, GPS 센서들로부터의 위치 정보) 및 복수의 인공 현실 애플리케이션들의 가 상 객체들(예를 들어, 도 1a 또는 도 1b의 가상 컨텐트 항목들(124, 126, 140, 142))의 모델링 정보의 집계에기초하여, 복수의 동시 실행 인공 현실 애플리케이션들의 객체들이 디스플레이 상에서의 디스플레이를 위 해 생성 및 렌더링되도록 구성된다. 도 1a 및 도 1b를 참조하여 설명된 바와 같이, HMD는 동시 실행 애플 리케이션들을 조합하도록 구성된 동시 애플리케이션 엔진을 포함하고 이들을 공통의 렌더링된 장면에 디스 플레이한다. 일부 예들에서, 동시 애플리케이션 엔진은 장면 상의 객체들에 대한 상호작용들을 제어하고, 관심있는 인공 현실 애플리케이션들에 및 그로부터 입력 및 다른 신호들을 전달한다. 도 3은 본 개시내용의 기술들에 따른, 하나 이상의 SoC 집적 회로들을 사용하여 구현될 수 있는 인공 현실 시스 템의 콘솔 및 HMD의 예시적인 구현들을 도시한 블록도이다. 도 3의 예에서, 콘솔은 자세 추적, 제스처 검 출, 및 HMD의 전자 디스플레이들 상의 공통 3D AR 장면 내 디스플레이를 위한 컨텐트를 동시에 실행 및 출력하는 다중 인공 현실 애플리케이션들의 생성 및 렌더링을 수행한다. 이 예에서, HMD는 하나 이상의 처리기들 및 메모리를 포함하며, 이는 일부 예들에서 오퍼레이팅 시스템을 실행하기 위한 컴퓨터 플랫폼을 제공하며, 이는 예를 들어, 내장형 실시간 멀티태스킹 오퍼레이 팅 시스템 또는 다른 유형의 오퍼레이팅 시스템일 수 있다. 결과적으로, 오퍼레이팅 시스템은 동시 애플리 케이션 엔진을 포함하는 하나 이상의 소프트웨어 구성요소들을 실행하기 위한 멀티태스킹 오퍼레이팅 환경을 제공한다. 도 2a 및 도 2b의 예들에 관해 논의된 바와 같이, 처리기들은 전자 디스플레이, 모 션 센서들 및 이미지 캡처 디바이스들에 결합된다. 일부 예들에서, 처리기들 및 메모리는 별개의 이산 구성요소들일 수 있다. 다른 예들에서, 메모리는 단일 집적 회로 내에서 처리기들과 함 께 배치된 온칩 메모리일 수 있다. 이러한 예에서, 메모리는 특히 도 6 및 도 7과 관련하여 본 명세서에 추가로 설명되는 바와 같이, 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리를 포함할 수 있다. 일반적으로, 콘솔은 HMD에 대한 제스처 검출 및 사용자 인터페이스 생성을 수행하기 위해 카메라들 (도 1b) 및/또는 HMD로부터 수신된 이미지 및 추적 정보를 처리하는 컴퓨팅 디바이스이다. 일부 예들 에서, 콘솔은 워크스테이션, 데스크탑 컴퓨터, 랩탑 또는 게임 시스템과 같은 단일 컴퓨팅 디바이스이다. 일부 예들에서, 처리기들 및/또는 메모리와 같은 콘솔의 적어도 일부는 클라우드 컴퓨팅 시스템 을 통해, 데이터 센터를 통해, 또는 인터넷, 다른 공공 또는 사설 통신 네트워크, 예를 들어, 광대역, 셀룰러, Wi-Fi, 및/또는 컴퓨팅 시스템들, 서버들 및 컴퓨팅 디바이스들 사이에 데이터를 전송하기 위한 다른 유형의 통 신 네트워크들과 같은 네트워크를 통해 배포될 수 있다. 도 3의 예에서, 콘솔은 하나 이상의 처리기들 및 메모리를 포함하며, 이는 일부 예들에서 오퍼 레이팅 시스템을 실행하기 위한 컴퓨터 플랫폼을 제공하며, 이는 예를 들어, 내장형 실시간 멀티태스킹 오 퍼레이팅 시스템 또는 다른 유형의 오퍼레이팅 시스템일 수 있다. 결과적으로, 오퍼레이팅 시스템은 하나 이상의 소프트웨어 구성요소들을 실행하기 위한 멀티태스킹 오퍼레이팅 환경을 제공한다. 처리기들은 하나 이상의 I/O 인터페이스들에 결합되며, 이는 키보드, 게임 제어기들, 디스플레이 디바이스들, 이미지 캡처 디바이스들, HMD들 등과 같은 외부 디바이스들과 통신하기 위한 하나 이상의 I/O 인터페이스들을 제공한다. 더욱이, 하나 이상의 I/O 인터페이스들은 네트워크와 같은 네트워크와 통신하기 위한 하나 이상의 유선 또는 무선 네트워크 인터페이스 제어기들(NICs: network interface controllers)을 포함할 수 있 다. 처리기들(302, 312)의 각각은 멀티-코어 처리기, 제어기, 디지털 신호 처리기(DSP), 주문형 반도체(ASIC: application specific integrated circuit), 필드-프로그래밍 가능 게이트 어레이(FPGA: field-programmable gate array), 또는 이에 상응하는 개별 또는 집적 논리 회로 중 임의의 하나 이상을 포함할 수 있다. 메모리 (304, 314)는 랜덤-액세스 메모리(RAM: random-access memory), 판독 전용 메모리(ROM: read only memory), 프 로그램 가능 판독 전용 메모리(PROM: programmable read only memory), 소거 가능한 프로그램 가능 판독 전용 메모리(EPROM: erasable programmable read only memory), 전자적으로 소거 가능한 프로그램 가능 판독 전용 메모리(EEPROM: erasable electronically programmable read only memory), 및 플래시 메모리와 같이, 데이터 및 실행 가능한 소프트웨어 명령들을 저장하기 위한 임의의 형태의 메모리를 포함할 수 있다. 콘솔의 소프트웨어 애플리케이션들은 공통 장면에 인공 현실 애플리케이션들의 집합체(aggregation) 를 제공하도록 동작한다. 이 예에서, 소프트웨어 애플리케이션들은 동시 애플리케이션 엔진, 렌더링 엔진, 제스처 검출기, 자세 추적기, 및 사용자 인터페이스 엔진을 포함한다. 일반적으로, 동시 애플리케이션 엔진은 복수의 인공 현실 애플리케이션들, 예를 들어, 원격 회의 애 플리케이션, 게임 애플리케이션, 내비게이션 애플리케이션, 교육 애플리케이션, 트레이닝 또는 시뮬레이션 애플 리케이션들 등에 의해 생성되는 컨텐트의 집합체를 제공 및 제시하는 기능을 포함한다. 동시 애플리케이션 엔진 은 예를 들어, 콘솔 상의 복수의 인공 현실 애플리케이션들의 집합체를 구현하기 위한 하나 이상의 소프트웨어 패키지들, 소프트웨어 라이브러리들, 하드웨어 구동기들, 및/또는 애플리케이션 프로그램 인터 페이스들(APIs: Application Program Interfaces)을 포함할 수 있다. 본 명세서에 추가로 설명된 바와 같이, 동시 애플리케이션 엔진은 일례에서 인공 현실 애플리케이션들의 각각이 동시 애플리케이션 엔진 의 쉘에 등록하고 공통 장면 내의 렌더링을 위해 인공 현실 애플리케이션들의 객체들의 모델링 정보를 통신하는 장면 그래프 API일 수 있는 클라이언트 인터페이스를 제공한다. 예를 들어, 애플리케이션 개발 자들은 인공 현실 애플리케이션들의 객체들(예를 들어, 객체들, 객체들의 속성들, 및 객체들 사이의 관계들)의 모델링 정보를 지정하기 위해 장면 그래프 API를 사용할 수 있다. 애플리케이션 개발자들은 또한 제공 영역들 (예를 들어, 도 1a, 도 1b의 제공 영역들(150, 152)) 및 객체들을 제공 영역들과 연결하기 위한 첨부들에 대한 요청들을 지정하기 위해 장면 그래프 API를 사용할 수 있다. 임의의 이미지 캡처 디바이스들(138 또는 102), 또는 다른 센서 장치로부터 감지된 데이터에 기초하여, 제스처 검출기는 사용자에 의해 수행된 하나 이상의 제스처들을 식별하기 위해 HMD 및/또는 사용자의 물리적 객체들(예를 들어, 손들, 팔들, 손목들, 손가락들, 손바닥들, 엄지들)의 추적된 모션들, 구성들, 위치들 및/또는 방향들을 분석한다. 보다 구체적으로, 제스처 검출기는 HMD의 이미지 캡처 디바이스들 및/또는 센서들 및 외부 카메라들에 의해 캡처된 이미지 데이터 내에서 인식되는 객체들을 분석하여 사용자의 손 및/또는 팔을 식별하고 HMD에 대한 손 및/또는 팔의 움직임들을 추적하여 사용자에 의해 수행된 제스처들을 식별한다. 제스처 검출기는 캡처된 이미지 데이터에 기초하여 손, 손가락들 및/또 는 팔의 위치 및 방향에 대한 변화들을 포함한 움직임을 추적하고, 객체들의 모션 벡터들을 제스처 라이브러리 의 하나 이상의 엔트리들과 비교하여 사용자에 의해 수행된 제스처 또는 제스처들의 조합을 검출한다. 제스처 라이브러리의 일부 엔트리들은 제스처를 사용자의 손, 특정 손가락들, 엄지들, 손목들 및/또는 팔 들의 상대 경로 또는 공간 변환들 및 회전들과 같은 일련의 또는 패턴의 모션으로 각각 규정할 수 있다. 제스처 라이브러리의 일부 엔트리들은 특정 시간에 또는 시간 기간에 걸쳐 사용자의 손 및/또는 팔들(또는 그 부 분들)의 구성, 위치 및/또는 방향으로 제스처를 각각 규정할 수 있다. 다른 예들의 제스처 유형들이 가능하다. 또한, 제스처 라이브러리의 엔트리들의 각각은 규정된 제스처 또는 일련의 제스처들에 대해, 개인의 실시 간 시선 추적, 디스플레이되는 인공 컨텐트의 유형들, 실행중인 애플리케이션들의 유형들 등에 의해 결정될 수 있는 바와 같이, HMD의 현재 시야에 대한 공간적 관계들, 사용자에 의해 현재 관찰되고 있는 특정 지역에 대한 공간적 관계들과 같은 동작을 트리거하기 위해 제스처 또는 일련의 제스처들에 필요한 조건들을 지정할 수 있다. 제스처 라이브러리의 엔트리들의 각각은 규정된 제스처들 또는 제스처들의 조합/일련의 제스처들 각각에 대해, 소프트웨어 애플리케이션들에 의해 수행될 원하는 응답 또는 동작을 추가로 지정할 수 있다. 예를 들어, 본 개시내용의 기술들에 따르면, 미리-규정된 제스처들 중 하나를 검출하는 것에 응답하여, 동시 애플리 케이션 엔진이 렌더링된 장면의 객체들에 대한 상호 작용들을 제어하고 관심 있는 인공 현실 애플리케이션 들에 대한 입력 및 다른 신호들을 전달하도록 특정 특수 제스처들이 미리-규정될 수 있다. 예를 들어, 제스처 라이브러리는 선택 제스처, 옮기는 제스처(예를 들어, 이동하는, 회전하는), 수정/변경 제스처(예를 들어, 크기 조정), 또는 사용자들에 의해 수행될 수 있는 다른 제스처들을 묘사하는 엔트리들을 포 함할 수 있다. 제스처 검출기는 선택 제스처와 같은 제스처를 식별하기 위해 사용자 손의 구성들, 위치들, 모션들 및/또는 방향들을 분석하기 위해 이미지 캡처 디바이스들로부터의 이미지 데이터를 처리할 수 있다. 예를 들어, 제스처 검출기는 객체의 선택을 나타내는 손의 특정 구성을 검출할 수 있으며, 손이 있 는 구성은 제1 제공 영역에 배치된 객체를 잡도록 위치된다. 이 잡는 위치는 경우에 따라 사용자 손의 두 개 이 상의 손가락들이 서로 더 가깝게 이동하는 두 손가락 집기일 수 있으며 객체에 근접하여 수행된다. 제스처 검출 기는 사용자의 손 또는 팔이 제1 제공 영역으로부터 제1 제공 영역의 다른 위치 또는 제2 제공 영역으로 이동하는 옮김 제스처를 후속적으로 검출할 수 있다. 제스처 검출기는 사용자 손의 두 개 이상의 손가락들이 서 로 더 멀리 움직이는 해제 제스처를 검출할 수도 있다. 일단 객체가 제2 제공 영역으로 해제되면, 동시 애플리 케이션 엔진은 객체를 제2 제공 영역에 연결하기 위한 첨부를 처리한다. 도 4는 본 개시내용의 기술들에 따른, 하나 이상의 SoC 집적 회로들을 사용하여 구현될 수 있는 인공 현실 시스 템의 예시적인 HMD를 도시한 블록도이다. 이 예에서는 도 3과 유사하게, HMD는 하나 이상의 처리기들 및 메모리를 포함하며, 이는 일부 예들에서 오퍼레이팅 시스템을 실행하기 위한 컴퓨터 플랫폼을 제 공하며, 이는 예를 들어, 내장형 실시간 멀티태스킹 오퍼레이팅 시스템 또는 다른 유형의 오퍼레이팅 시스템일 수 있다. 결과적으로, 오퍼레이팅 시스템은 하나 이상의 소프트웨어 구성요소들을 실행하기 위한 멀티태스킹 오퍼레이팅 환경을 제공한다. 더욱이, 처리기(들)는 전자 디스플레이, 모션 센서들, 및 이미지 캡처 디바이스들에 결합된다. 일부 예들에서, 메모리는 특히 도 6 및 도 7과 관련하여 본 명세서에 추가로 설명되는 바와 같이, 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리를 포함할 수 있다. 도 4의 예에서, 소프트웨어 구성요소들은 공통 3D AR 장면 내에서 디스플레이를 위해 컨텐트를 동시에 실 행 및 출력하는 다중 인공 현실 애플리케이션들을 생성 및 렌더링하도록 동작한다. 이 예에서, 소프트웨어 애플 리케이션들은 동시 애플리케이션 엔진, 렌더링 엔진, 제스처 검출기, 자세 추적기, 및 사용자 인터페이스 엔진을 포함한다. 다양한 예들에서, 소프트웨어 구성요소들은 도 3의 콘솔 의 대응 구성요소들(예를 들어, 동시 애플리케이션 엔진, 렌더링 엔진, 제스처 검출기, 자 세 추적기, 및 사용자 인터페이스 엔진)과 유사하게 동작하여, 복수의 인공 현실 애플리케이션들이 동시에 실행되고 장면에 디스플레이되는 장면을 집계 및 렌더링한다. 일부 예들에서, 렌더링 엔진은 사용 자의 현실 세계 물리적 환경에 적어도 부분적으로 오버레이될 수 있는 3D 인공 현실 컨텐트를 구성한다. 도 5는 본 개시내용에 설명된 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집 적 회로들을 사용하여 구현되는 다중-디바이스 인공 현실 시스템을 위한 분산 아키텍처의 더욱 상세한 예시 구 현을 도시한 블록도이다. 일부 예들에서, 인공 현실 시스템은 HMD와 함께 동작하는 주변 디바이스를 포함한다. 이 예에서, 주변 디바이스는 AR 시스템이 가상 컨텐트를 오버레이할 수 있는 표면을 갖는 물리 적 현실 세계 디바이스이다. 주변 디바이스는 존재-민감 표면들(presence-sensitive surfaces)의 위치들을 터치하거나 호버링(hovering)하는 하나 이상의 객체들(예를 들어, 손가락들, 스타일러스)의 존재를 검출함으로 써 사용자 입력들을 검출하기 위한 하나 이상의 존재-민감 표면들을 포함할 수 있다. 일부 예들에서, 주변 디바 이스는 존재-민감 디스플레이일 수 있는 출력 디스플레이를 포함할 수 있다. 일부 예들에서, 주변 디바이 스는 스마트폰, 태블릿 컴퓨터, 개인 휴대정보 단말기(PDA), 또는 다른 휴대용 디바이스일 수 있다. 일부 예들에서, 주변 디바이스는 스마트워치, 스마트링, 또는 다른 웨어러블 디바이스일 수 있다. 주변 디바이 스는 또한 키오스크 또는 다른 고정식 또는 이동식 시스템의 일부일 수 있다. 주변 디바이스는 컨텐 트를 화면에 출력하기 위한 디스플레이 디바이스를 포함하거나 포함하지 않을 수 있다. 설명된 바와 같이, HMD는 본 개시내용에 설명된 기술들에 따라 다중 인공 현실 애플리케이션들 및 협력 장 면 렌더링의 동시 실행을 가능하게 하도록 설계되고 구성된다. 일반적으로 도 5에 도시된 SoC들은 분산 아키텍처에 배열된 특수 집적 회로들의 집합을 나타내며, 여기서 각 SoC 집적 회로는 인공 현실 애플리케이션들을 위한 오퍼레이팅 환경을 제공하도록 구성된 다양한 특수 기능 블 록들, 서브시스템들 및/또는 모듈들을 포함한다. 도 5는 SoC 집적 회로들의 하나의 예시적인 배열일 뿐이다. 다 중 디바이스 인공 현실 시스템을 위한 분산 아키텍처는 SoC 집적 회로들의 임의의 집합 및/또는 배열을 포함할 수 있다. 이 예에서, HMD의 SoC(630A)는 추적 블록, 암호화/복호화 블록, 공동 처리기들, 보안 처 리기, 인터페이스 블록 및 공유 메모리를 포함하는 기능 블록들, 서브시스템들, 및/또는 모듈들 을 포함한다. 추적 블록은 눈 추적(\"눈\"), 손 추적(\"손\"), 깊이 추적(\"깊이 \") 및/또는 동시 현지화 및 매핑(SLAM: Simultaneous Localization and Mapping)(\"SLAM\")을 위 한 기능들을 제공한다. 예를 들어, HMD는 HMD의 현재 가속도를 나타내는 데이터를 출력하는 하나 이 상의 가속도계들(관성 측정 유닛들 또는 \"IMU들\"로도 칭해짐), HMD의 위치를 나타내는 데이터를 출력하는 GPS 센서들, 다양한 객체들로부터 HMD의 거리들을 나타내는 데이터를 출력하는 레이더 또는 소나, 또는 HMD나 물리적 환경 내의 다른 객체들의 위치 또는 방향의 표시들을 제공하는 다른 센서들로부터 입력을 수 신할 수 있다. HMD는 또한 하나 이상의 이미지 캡처 디바이스들(688A 내지 688N)(총칭하여 \"이미지 캡처 디바이스들\")로부터 이미지 데이터를 수신할 수 있다. 이미지 캡처 디바이스들은 물리적 환경을 나타내는 이미지 데이터를 출력하도록 구성된 비디오 카메라들, 레이저 스캐너들, 도플러 레이더 스캐너들, 깊이 스캐너 들 등을 포함할 수 있다. 보다 구체적으로, 이미지 캡처 디바이스들은, 통상적으로 HMD의 뷰잉 관점에 대 응하는 이미지 캡처 디바이스들의 시야 내에 있는 물리적 환경의 객체들(주변 디바이스 및/또는 손 포함) 를 나타내는 이미지 데이터를 캡처한다. 감지된 데이터 및/또는 이미지 데이터에 기초하여, 추적은 예를 들어, HMD의 기준 프레임에 대한 현재 자세를 결정하고, 현재 자세에 따라 인공 현실 컨텐트를 렌더링한다. 암호화/복호화 블록은 주변 디바이스 또는 보안 서버로 통신되는 발신 데이터를 암호화하고 주변 디 바이스 또는 보안 서버로부터 통신되는 수신 데이터를 복호화하는 기능을 제공한다. 암호화/복호화 블록은 세션 키(예를 들어, 비밀 대칭 키)로 데이터를 암호화/복호화하기 위해 대칭 키 암호화를 지원할 수 있 다. 공동-애플리케이션 처리기들 또는 공동처리기들은 비디오 처리 유닛, 그래픽 처리 유닛, 디지털 신호 처리 기들, 인코더들 및/또는 디코더들, 및/또는 기타와 같은 다양한 처리기들을 포함할 수 있다. 본 개시내용에서 설명된 기술들에 따르면, 백엔드 쉘의 전부 또는 일부들은 하드웨어, 소프트웨어, 또는 하드웨어와 소프트웨어 의 조합일 수 있다. 예를 들어, 동시 애플리케이션 엔진의 백엔드 쉘은 공동-애플리케이션 처리기들에서 실행될 수 있다. 복수의 인공 현실 애플리케이션들은 공동-애플리케이션 처리기들에서 동시에 실행될 수 있다. 보안 처리기는 AR 환경 내에서 함께 사용되는 주변 디바이스와 같은 디바이스들과 쌍을 이룰 때 HMD의 보안 디바이스 증명 및 상호 인증을 제공한다. 보안 처리기는 HMD의 SoC들(630A 내지 630C)을 인증할 수 있다. 인터페이스 블록은 SoC(630A)의 기능 블록들, 서브시스템들 및/또는 모듈들에 연결하기 위한 하나 이상의 인터페이스들을 포함한다. 일례로서, 인터페이스 블록은 주변 구성요소 상호연결 익스프레스(PCIe: Peripheral Component Interconnect Express) 슬롯들을 포함할 수 있다. SoC(630A)는 인터페이스 블록을 사용하여 SoC(630B, 630C)와 연결할 수 있다. SoC(630A)는 다른 디바이스들, 예를 들어, 주변 디바이스와 통신하기 위해 인터페이스 블록을 사용하여 통신 디바이스(예를 들어, 무선 송신기)와 연결할 수 있다. 공유 메모리는 특히 도 6 및 도 7과 관련하여 본 명세서에 추가로 설명되는 바와 같이 다중-뱅크, 다중-포 트 분산 대기시간 공유 메모리 시스템을 포함하거나 구현될 수 있다. 이러한 공유 메모리 시스템은 전력을 보존 하면서도 공유 메모리에 대한 동시 및 저-대기시간 액세스를 가능하게 할 수 있다. 또한, 이러한 공유 메모리 시스템은 HMD 내에서 또는 HMD의 서브시스템들 내에서 또는 그 사이에서 발생하는 예상 데이터 흐름 들로 설계, 구현 및/또는 조정될 수 있다. SoC들(630B 및 630C)은 각각의 디스플레이들, 예를 들어 디스플레이들(686A, 686B)(총칭하여 \"디스플레이 \")에 인공 현실 컨텐트를 출력하기 위한 디스플레이 제어기들을 각각 나타낸다. 이 예에서, SoC(630B)는 사용자의 왼쪽 눈(687A)에 인공 현실 컨텐트를 출력하기 위한 디스플레이(668A)용 디스플레이 제어기를 포함할 수 있다. 예를 들어, SoC(630B)는 해독 블록(692A), 디코더 블록(694A), 디스플레이 제어기(696A), 디스플레이 (686A) 상에 인공 현실 컨텐트를 출력하기 위한 픽셀 구동기(698A), 및 공유 메모리(697B)를 포함한다. 유사하 게, SoC(630C)는 사용자의 오른쪽 눈(687B)에 인공 현실 컨텐트를 출력하기 위한 디스플레이(668B)용 디스플레 이 제어기를 포함할 수 있다. 예를 들어, SoC(630C)는 해독(692B), 디코더(694B), 디스플레이 제어기(696B), 디 스플레이(686B) 상에 인공 현실 컨텐트를 생성 및 출력하기 위한 픽셀 구동기(698B), 및 공유 메모리(697C)를 포함한다. 공유 메모리(697B 및 697C)는 SoC들(630B 및 630C) 중 하나 이상 내에 포함되는 경우, 본 명세서에 설명된 다른 공유 메모리(예를 들어, 공유 메모리)와 유사한 방식으로 설계 및/또는 구현될 수 있으며, 본 명세서에 설명된 이러한 다른 공유 메모리 시스템들과 일치하거나, 유사하거나, 동일한 속성들, 기능, 및 성능 들을 가질 수 있다. 디스플레이들은 발광 다이오드(LED) 디스플레이들, 유기 LED들(OLEDs), 양자 도트 LED들(QLEDs), 전자 페 이퍼(E-잉크) 디스플레이들, 액정 디스플레이들(LCDs), 또는 AR 컨텐트를 디스플레이하기 위한 다른 유형들의 디스플레이들을 포함할 수 있다. 주변 디바이스는 인공 현실 애플리케이션을 지원하도록 구성된 SoC들(610A 및 610B)을 포함한다. 이 예에 서, SoC(610A)는, 추적 블록, 암호화/복호화 블록, 디스플레이 처리기, 인터페이스 블록, 보안 처리기, 및 공유 메모리를 포함하는 기능 블록들, 서브시스템들 및/또는 모듈들을 포함한다. 추 적 블록은 눈 추적(\"눈\"), 손 추적(\"손\"), 깊이 추적(\"깊이\") 및/또는 동 시 현지화 및 매핑(SLAM)(\"SLAM\")을 제공하는 기능 블록일 수 있다. 예를 들어, 주변 디바이스 는 주변 디바이스의 현재 가속도를 나타내는 데이터를 출력하는 하나 이상의 가속도계들(관성 측정 유닛들 또는 \"IMU들\"로도 칭해짐), 주변 디바이스의 위치를 나타내는 데이터를 출력하는 GPS 센서들, 다양한 객체 들로부터 주변 디바이스의 거리들을 나타내는 데이터를 출력하는 레이더 또는 소나, 또는 주변 디바이스 나 물리적 환경 내의 다른 객체들의 위치 또는 방향의 표시들을 제공하는 다른 센서들로부터 입력을 수신 할 수 있다. 주변 디바이스는 또한 일부 예들에서 물리적 환경을 나타내는 이미지 데이터를 출력하도록 구 성된 비디오 카메라들, 레이저 스캐너들, 도플러 레이더 스캐너들, 깊이 스캐너들 등과 같은 하나 이상의 이미 지 캡처 디바이스들로부터 이미지 데이터를 수신할 수 있다. 감지된 데이터 및/또는 이미지 데이터에 기초하여,추적은 예를 들어, 주변 디바이스의 기준 프레임에 대한 현재 자세를 결정하고, 현재 자세에 따라 인 공 현실 컨텐트를 HMD에 렌더링한다. 암호화/복호화 블록은 HMD 또는 보안 서버로 통신되는 발신 데이터를 암호화하고 HMD 또는 보안 서버로부터 통신되는 수신 데이터를 복호화한다. 암호화/복호화 블록은 세션 키(예를 들어, 비밀 대칭 키)를 사용하여 데이터를 암호화/복호화하기 위해 대칭 키 암호화를 지원할 수 있다. 디스플레이 처리기는 HMD에 인공 현실 컨텐트를 렌더링하기 위한 비디오 처리 유닛, 그래픽 처리 유 닛, 인코더들 및/또는 디코더들, 및/또는 기타와 같은 하나 이상의 처리기들을 포함한다. 인터페이스 블록은 SoC(510A)의 기능 블록들에 연결하기 위한 하나 이상의 인터페이스들을 포함한다. 일례 로서, 인터페이스 블록은 주변 구성요소 상호연결 익스프레스(PCIe) 슬롯들을 포함할 수 있다. SoC(610A) 는 인터페이스 블록을 사용하여 SoC(610B)와 연결할 수 있다. SoC(610A)는 다른 디바이스들, 예를 들어 HMD와 통신하기 위해 인터페이스 블록을 사용하여 하나 이상의 통신 디바이스들(예를 들어, 무선 송 신기)와 연결할 수 있다. 보안 처리기는 AR 환경 내에서 함께 사용되는 디바이스들, 예를 들어 HMD와 쌍을 이룰 때 주변 디바 이스의 보안 디바이스 증명 및 상호 인증을 제공할 수 있다. 보안 처리기는 주변 디바이스의 SoC들(610A, 610B)을 인증할 수 있다. 공유 메모리는 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리 시스템으로 구현될 수 있다. 공유 메모리 는 SoC(610A) 내에 포함되는 경우, 본 명세서에 설명된 다른 공유 메모리(예를 들어, 공유 메모리)와 유사한 방식으로 설계 및/또는 구현될 수 있고, 본 명세서에 설명된 이러한 다른 공유 메모리 시스템들과 일치 하거나, 유사하거나 또는 동일한 속성들, 기능 및 성능들을 가질 수 있다. SoC(610B)는 도시된 예에서 공동-애플리케이션 처리기들, 애플리케이션 처리기들 및 공유 메모리 를 포함한다. 이 예에서, 공동-애플리케이션 처리기들은 비전 처리 유닛(VPU: vision processing unit), 그래픽 처리 유닛(GPU) 및/또는 중앙 처리 유닛(CPU)과 같은 다양한 처리기들을 포함한다. 애플리케이션 처리기들은 예를 들면 주변 디바이스의 표면에 대해 가상 사용자 인터페이스를 생성 및 렌더링하기 위해 및/또는 주변 장치에 대해 사용자에 의해 수행된 제스처들을 검출하기 위해 하나 이상의 인공 현실 애플리케이션들을 실행하기 위한 처리 유닛을 포함할 수 있다. 공유 메모리는 다중-뱅크, 다중-포트 분산 대기시간 공유 메모리 시스템으로 구현될 수 있으며, 본 명세서에 설명된 이러한 다른 공유 메모리 시스템들과 일치하거나, 유사하거나 또는 동일한 속성들, 기능 및 성능들을 가질 수 있다. 일부 예들에서, 및 도 5에 도시된 바와 같이, SoC(610A) 및 SoC(601B)의 각각은 공유 메모리 및 공유 메모 리를 각각 포함할 수 있다. 공유 메모리(657, 667)의 각각은 본 명세서에 추가로 설명되는 바와 같이 다중 -뱅크, 다중-포트 분산 공유 메모리 시스템으로 구현될 수 있다. 유사하게, SoC(630A, 630B 및 630C)의 각각은 공유 메모리(즉, 각각 공유 메모리(697A, 697B 및 697C) 각각)를 각각 포함할 수 있다. 일부 예들에서, 공유 메 모리(697A, 697B 및 697C)의 각각은 도 6 및 도 7과 관련하여 본 명세서에서 추가로 설명되는 바와 같이 다중- 뱅크, 다중-포트 분산 공유 메모리 시스템으로 구현될 수 있다. 도 6은 본 개시내용의 하나 이상의 양태들에 따른, 인공 현실 시스템의 SoC 내에 포함된 다중 구성요소들, 서브 시스템들, 및/또는 디바이스들에 의해 액세스 가능한 예시적인 공유 메모리를 포함하는 예시적인 SoC를 도시한 블록도이다. 도 6의 SoC는 HMD의 SoC(630A)와 같이, 도 5의 SoC들 중 하나 이상에 대응할 수 있다. 도 6은 PCI/USB 서브시스템, 보안 서브시스템, 호스트 서브시스템, 오디오 서브시스템, 카 메라 서브시스템, VCV 서브시스템, 그래픽 서브시스템, 디스플레이 서브시스템(758A) 및 디스플 레이 서브시스템(758B)을 포함하여, 다수의 서브시스템들 또는 구성요소들에 의해 액세스 가능한 공유 메모리 를 도시한다. 도 6의 예는 본 개시내용의 도 1 내지 도 5에 설명된 것과 같은 인공 현실 시스템의 맥락에서 설명될 수 있지만, SoC와 관련하여 본 명세서에 설명된 개념들은 인공 현실 애플리케이션들 또는 구현들 이외의 다른 맥락들에 적용될 수 있다. 도 6의 예에서의 SoC가 SoC(630A)에 대응하는 예에서, SoC는 HMD 내 에 포함될 수 있고, 이미지 캡처, 오디오 캡처, 눈, 손 및/또는 깊이 추적, 자세 결정, 입력 검출, 암호화 및/ 또는 복호화 및 컨텐트 생성 및/또는 디스플레이에 관한 기능들을 수행할 수 있다. 더욱이, 집적 회로 SoC를 참 조하여 설명되었지만, 본 명세서에 설명된 기술들 및 아키텍처들은 SoC 구현들에 제한되지 않고 도 6의 구성요 소들 중 하나 이상은 하나 이상의 추가적인 집적 회로들에서 구현될 수 있다.도 6의 예에서, 각 예시된 서브시스템(예를 들어, PCI/USB 서브시스템 내지 외부 메모리 제어기 중 임의의 것)은 공유 메모리에 데이터를 저장하고 공유 메모리로부터 데이터를 검색할 수 있으며, 여기 서 공유 메모리는 SOC를 구현하는 집적 회로의 내부에 있고 다중-뱅크, 다중-포트 분산 공유 메모리 시스템 역할을 한다. 공유 메모리는 각 서브시스템의 관점에서 논리적으로 단일 엔티티 또는 단일 메모리 디바이스로 나타날 수 있지만, 다중메모리의 뱅크들(도 6에 도시되지 않음)을 포함할 수 있으며, 이들 각각은 SoC 집적 회로 내부에 있고 서브시스템들 중 임의의 것에 의해 액세스 가능하다. 일부 구현들에서, 공유 메모리에 포함된 각 메모리 뱅크(메모리 뱅크들은 도 6에 구체적으로 도시되지 않 음)는 공유 메모리 내에 포함된 내부 네트워크를 통해 공유 메모리에/로부터 데이터를 판독 및 기록 하기 위한 SoC의 집적 회로 내의 공유 메모리에 의해 제공되는 포트들 또는 인터페이스들을 통해 서 브시스템들에 의해 액세스될 수 있다. 예를 들어, 도 6의 예에서, PCI/USB 서브시스템은 SoC 내의 내 부 전기적 연결인 포트(791A)를 통해 공유 메모리에 액세스할 수 있다. 유사하게, 보안 서브시스템은 포트(791B)를 통해 공유 메모리에 액세스할 수 있고, 호스트 서브시스템은 포트(791C)를 통해 공유 메모리에 액세스할 수 있고, 오디오 서브시스템은 포트(791D)를 통해 공유 메모리에 액세스할 수 있고, 카메라 서브시스템은 포트(791E)를 통해 공유 메모리에 액세스할 수 있고, FCV 서브시스템 은 포트(791F)를 통해 공유 메모리에 액세스할 수 있고, 그래픽 서브시스템은 포트(791G)를 통 해 공유 메모리에 액세스할 수 있으며, 디스플레이 서브시스템은 포트(791H)를 통해 공유 메모리 에 액세스할 수 있고, 디스플레이 서브시스템(758B)은 포트(791H)를 통해 공유 메모리에 액세스할 수 있다. 일부 예들에서, 주어진 서브시스템과 연관되어 도 6에 도시된 각 포트는 그 서브시스템에 전용될 수 있어서, 그 서브시스템에 의한 메모리에 대한 모든 액세스들은 단일 포트를 통해 발생한다. 예를 들어, PCI/USB 서브시스템 은 포트(791A)를 통해 공유 메모리 내에 포함된 임의의 메모리 뱅크들에 액세스할 수 있고, 일부 예 들에서 포트(791A)를 통해 외부 메모리에도 액세스할 수 있다. 대응하여, 보안 서브시스템은 포트 (791B)를 통해 공유 메모리 내에 포함된 임의의 메모리에 액세스할 수 있고, 일부 예들에서 포트(791B)를 통해 외부 메모리에도 액세스할 수 있다. 도 6의 시스템은 또한 외부 메모리(예를 들어, 외부 DDR 메모리)와 같은 추가 메모리에 대한 액세스를 가 능하게 하는 외부 메모리 제어기를 포함할 수 있으며, 여기서 외부 메모리는 SoC 상에 위치하지 않는다. 이러한 예에서, 외부 메모리는 다른 큰 메모리 뱅크로서 SoC 내의 서브시스템들에 나타날 수 있지만, 통상적으로 공유 메모리 내에 포함된 메모리 뱅크들보다 큰 대기시간을 가진다. 일부 예들에서, 다중 메모리 뱅크들(또는 각 메모리 뱅크)은 공유 메모리 내에 포함된 저-대기시간 연결들 을 통해 액세스될 수 있고, 또한 SoC 내의 서브시스템들에 의해 일제히 및/또는 동시에 액세스될 수 있다. 이러한 성능들은 특정 서브시스템들이 공유 메모리 내의 특정 메모리 뱅크들에 직접 액세스할 수 있게 하 는 공유 메모리 내에 포함된 네트워크를 통해 가능할 수 있다. 또한, 일부 예들에서 이러한 성능들은 다중 서브시스템들 사이의 경합 가능성을 감소시키기 위해 하나의 서브시스템(또는 서브시스템들의 서브세트)에 의해 주로 사용되는 공유 메모리 내의 각 메모리 뱅크를 통해 가능할 수 있다. 도 7과 관련하여 추가로 설명되 는 공유 메모리의 이들 및 다른 특징들이 제공되면서 저전력 소모 속성들을 달성할 수 있다. 도 7은 본 개시내용의 하나 이상의 양태들에 따른, 다중 뱅크들 및 다중 포트들을 갖는 공유 메모리 시스템을 사용하는 예시적인 SoC를 도시한 블록도이다. 도 7은 PCI/USB 서브시스템, 호스트 서브시스템, 카메 라 서브시스템, FCV 서브시스템, 그래픽 서브시스템, 디스플레이 서브시스템(858A), 및 디스플 레이 서브시스템(858B)을 포함하는 다수의 블록들, 서브시스템들 및/또는 모듈들을 포함하는 SoC를 예시한 다. 이들 서브시스템들은 본 명세서에 추가로 설명되는 포트들을 통해 공유 메모리에 액세스한다. 또 한, 이들 서브시스템들의 각각은 공유 메모리 내의 메모리 할당을 포함하는 다양한 목적들을 위해 버스 를 통해 통신할 수 있다. 호스트 서브시스템은 메모리 관리 모듈을 포함할 수 있다. 공유 메모 리는 메모리 뱅크(895A) 내지 메모리 뱅크(895W)(총칭하여 \"메모리 뱅크\")로서 도 7에 라벨이 붙여진 다수의 메모리 뱅크들의 각각에 대한 액세스를 가능하게 하는 네트워크를 포함한다. 네트워크는 다중 스위치들(893A, 893B 및 893C)(총칭하여 \"스위치들\")뿐만 아니라, 연결들, 경 로들, 및 스위치들의 각각을 공유 메모리 내의 다른 구성요소들에 연결하는 연결들을 포함 한다. 일부 예들에서, 스위치들의 각각은 연결들, 경로들 및/또는 연결들을 따라 공유 메 모리 내의 메모리 트래픽을 라우팅할 수 있는 네트워크 온 칩(NOC: Network on a Chip)일 수 있다.따라서, 스위치들로서 설명되었지만, 스위치들의 각각은 내부 구성요소들 및/또는 네트워크의 다른 속성들 사이의 연결들을 포함하는 네트워크 또는 NOC 역할을 각각 한다. 일부 예들에서, 스위치들의 각각의 양태 들은 다중 입력들 중 하나를 다중 출력들 중 하나에 연결하는 크로스바 스위치 역할을 할 수 있다. 스위치들 의 각각은 네트워크 및/또는 공유 메모리 내의 구성요소들 사이의 라우트들을 지능적으로 결정 하고, 연결들, 경로들 및/또는 연결들 중 하나 이상을 따라 네트워크 내에 메모리 트래픽 을 포워딩하는 능력들을 가질 수 있다. 일부 예들에서, 스위치들의 각각은 개별 클록 도메인들에서 각각 동작할 수 있다. 다른 예들에서, 스위치의 각각은 공통 클록에서 동작할 수 있지만, 이러한 예에서는 스위 치들은 메모리 뱅크들에 걸친 위상 오정렬에 대한 일부 허용오차를 가능하게 할 수 있다. 일부 예들에서, 메모리 뱅크들의 각각은 동일한 설계 또는 균일한 설계를 가질 수 있고, 잠재적으로 성능 및 밀도와 관련하여, 또한 대기시간 및 전력 소비와 관련하여 규모의 경제를 가능하게 할 수 있다. 예를 들어, 일부 예들에서, 집적 회로의 일부로서 각각 제조되는 다중 메모리 뱅크들 각각에 대한 균일한 설계는 이러 한 메모리 뱅크들의 각각의 크기를 최적화할 기회들을 제공하여 궁극적으로 더 많은 메모리 뱅크들이 주어 진 크기의 칩에 포함될 수 있게 할 수 있다. 메모리 뱅크들의 각각은 저전력 또는 절전 모드로 자동으로(또는 명령에 따라) 전환하는 능력과 같은 전력 소비 특징들로 구성될 수 있다. 일부 예들에서, 메모리 뱅크들의 각각은 공유 메모리 내에서 독립적 으로 동작할 수 있고, 저전력 모드로 전환할 때를 독립적으로 결정할 수 있다. 메모리 뱅크들이 특정 방식으로 도 7에 도시되고, 23개의 메모리 뱅크들이 도시되지만, 도 7의 SoC는 특정 예를 나타낸다. 다른 예들에서, 메모리 뱅크들은 상이하게 배열될 수 있고, 다소의 메모 리 뱅크들이 이러한 다른 예들 또는 구현들에 사용될 수 있다. 일부 예들에서, 메모리 뱅크들의 각각 은 1 메가바이트 정도의 크기를 가질 수 있다. 도 7의 SoC의 특정 예에서는 따라서, 공유 메모리가 23 메가바이트 정도의 용량을 가질 수 있다. 그 크기의 메모리는 일부 경우에 집적 회로에서 구현하기 위한 비 교적 많은 양의 메모리가 될 수 있다. 따라서, 본 명세서에 추가로 설명되는 바와 같이, SoC는 이러한 많 은 양의 메모리가 집적 회로에 집적되는 경우의 잠재적으로 부정적인 영향들에 대응하기 위해 다수의 특징들을 사용할 수 있다. 이러한 특징들은 메모리 대기시간을 감소시키고, 다양한 대기시간 분포를 제공하고, 효율성을 높이고, 저전력 소비를 가능하게 하고, 다른 기술적으로 유리한 속성들을 제공하는 역할을 할 수 있다. 도 7의 예에서, 예시된 서브시스템들(예를 들어, PCI/USB 서브시스템, 호스트 서브시스템, 카메라 서 브시스템, FCV 서브시스템, 그래픽 서브시스템, 및 디스플레이 서브시스템들)의 각각은 포 트들 중 하나를 통해 메모리 뱅크들에 액세스한다. 이러한 각각의 포트는 전용 포트를 가지므로, 주 어진 서브시스템에 대한 공유 메모리 내의 메모리 뱅크들에 대한 모든 액세스가 해당 전용 포트를 통 해 발생한다. 특히, 도 7의 예에서, PCI/USB 서브시스템은 포트(891A)를 통해 메모리 뱅크들에 액세 스하고, 호스트 서브시스템은 포트(891C)를 통해 메모리 뱅크들에 액세스하고, 카메라 서브시스템 은 포트(891E)를 통해 메모리 뱅크들에 액세스하고, FCV 서브시스템은 포트(891F)를 통해 메모 리 뱅크들에 액세스하고, 그래픽 서브시스템은 포트(891G)를 통해 메모리 뱅크들에 액세스하고, 디스플레이 서브시스템(858A)은 포트(891H)를 통해 메모리 뱅크들에 액세스하고, 디스플레이 서브시스템 (858B)은 포트(891I)를 통해 메모리 뱅크들에 액세스한다. 도 7에서, 포트들의 각각은 연결들 중 하나를 통해 다른 스위치에 연결된 것으로 도시된다. 예 를 들어, 포트(891A)는 연결을 통해 스위치(893A)에 연결된 것으로 도시된다. 유사하게, 포트(891C)도 상 이한 연결을 통해 스위치(893A)에 연결된 것으로 도시된다. 다른 예에서, 포트(891I)는 다른 연결을 통해 스위치(893C)에 연결된 것으로 도시된다. 예시의 편의를 위해, 포트들과 스위치들 사이의 모든 연결들이 구체적으로 연결들로 라벨링되는 것은 아니다. 또한 도 7에서, 스위치들의 각각은 경로들 중 하나를 통해 스위치들 중 다른 하나에 연결된 것으로 예시된다. 특히, 890에서, 스위치(893A)는 경로들 중 하나를 통해 스위치(893B)에 연결된 것으로 도 시된다. 유사하게, 스위치(893B)는 경로들 중 다른 하나를 통해 스위치(893C)에 연결된 것으로 도시된다. 3개의 스위치들이 도 7에 도시되지만, 다소의 NOC들 또는 스위치들이 다른 구현들 또는 예들에 사용될 수 있다. 도 7에서, 메모리 뱅크들의 각각은 인터페이스를 가지며, 이는 단일 진입점으로서 또는 메모리 뱅크 들의 각각과 연관된 통신 및 메모리 트래픽을 위한 타겟 에이전트 인터페이스로서 기능할 수 있다. 각각의 메모리 뱅크와 연관된 인터페이스들의 각각은 연결들 중 하나를 통해 스위치들 중 하나에연결되고, 주어진 메모리 뱅크에 대한 주어진 연결은 그 메모리 뱅크에 대한 메모리 액세스 트 래픽에 대한 경로 역할을 한다. 도 7의 예에서, 예를 들어, 메모리 뱅크(895A)와 연관된 인터페이스는 연 결들 중 하나를 통해 스위치(893A)에 연결된 것으로 도시된다. 유사하게, 메모리 뱅크(895K)와 연관된 인 터페이스는 연결들 중 다른 하나를 통해 스위치(893B)에 연결된 것으로 도시된다. 도 7에서 예시의 편의를 위해, 인터페이스들과 스위치들 사이의 모든 연결들이 특별히 연결들로 라벨링되는 것은 아니다. SoC들의 서브시스템들의 각각에 의한 메모리 뱅크들에 대한 액세스는 각 서브시스템의 전용 포트 를 메모리 뱅크들의 각각에 연결하는 네트워크를 통해 발생할 수 있다. 도 7의 예에서 및 이전 에 설명된 바와 같이, 네트워크는 스위치(893A), 스위치(893B) 및 스위치(893C)(총칭하여 \"스위치\") 를 포함하는 하나 이상의 스위치들과, 포트들, 스위치들 및 메모리 뱅크들 사이의 연결들 (892, 894 및 898)로 구성된다. 스위치들은 공유 메모리 내의 물리적 연결 수를 제한하면서 공유 메 모리 내의 다중 구성요소들 사이의 연결들을 가능하게 할 수 있다. 다중 스위치들의 적절한 사용은 병렬 연결 수의 감소를 가능하게 하고 공유 메모리 내의 다중 구성요소들이 다중화된 트래픽에 대해 동일 한 연결을 사용할 수 있게 할 수 있다. 일부 예들에서, 스위치들의 각각은 상이한 다중 중재기들(arbiters)을 갖는 크로스바의 역할을 한다. 스위 치들 중 하나 내의 중재기들의 각각은 메모리 뱅크들 중 하나를 수반하는 메모리 동작이 중재가 수행 되어야 하는지 여부를 결정한다. 도 7에서, 예를 들어, 스위치(893C)가 11개의 출력 포트들을 갖기 때문에, 스 위치(893C)는 11개의 상이한 중재기들을 포함할 수 있다. 11개의 출력 포트들 중 10개는 메모리 뱅크들 중 하나로 이어지고 다른 출력 포트는 스위치(893B)로 이어진다. 도 7에서, 스위치들의 각각은 일부 경우에 다중 메모리 뱅크들에 대한 독립적이고 동시인 액세스를 가능하게 할 수 있다. 예를 들어, 여전히 스위치(893C)를 참조하면, 그래픽 서브시스템이 메모리 뱅크 (895N)에 대한 액세스를 개시하고 디스플레이 서브시스템(858A)이 메모리 뱅크(895S)에 대한 액세스를 개시하면, 스위치(893C)는 메모리 뱅크들(895N 및 895S)의 각각이 요청하는 서브시스템들에 의해 독립적으로 및 동시에 액세스되도록 할 수 있다. 스위치(893C)가 이러한 능력을 갖는다면, 이러한 메모리 액세스들에 대해 중 재가 수행될 필요가 없을 수 있고, 메모리 뱅크들(895N 및 895S)의 각각은 요청하는 서브시스템들에 의해 독립 적으로 및 동시에 액세스될 수 있다. 그러나, 그래픽 서브시스템 및/또는 디스플레이 서브시스템(858A)이 스위치(893C)에 직접 연결되지 않은 하나 이상의 메모리 뱅크들에 액세스하려고 하는 것과 같은 상이한 예 에서, 연관된 메모리 트래픽은 스위치(893C)와 스위치(893B) 사이의 연결을 횡단해야 할 필요가 있고 스위 치(893B)에 의해 라우팅된다. 이러한 예에서, 다른 서브시스템들 또는 개시기들에서 발생하는 메모리 트래픽과 의 경합을 피하기 위해 중재가 필요할 수 있다. 일부 예들에서, 도 7의 서브시스템들(예를 들어, PCI/USB 서브시스템, 호스트 서브시스템, 카메라 서 브시스템, FCV 서브시스템, 그래픽 서브시스템, 및 디스플레이 서브시스템들)의 각각은 외 부 메모리 제어기를 통해서와 같은 공유 메모리를 통해 외부 메모리에 액세스할 수도 있다. 외부 메 모리 제어기는 도 6의 외부 메모리 제어기에 대응할 수 있고, 따라서 도 6과 관련하여 예시되고 설명 된 것과 유사한 방식으로 외부 메모리에 액세스할 수 있다. 도 7의 예에서, 각 서브시스템은 외부 메모리 를 균일한 메모리의 일부로 볼 수 있고 대기시간이 더 길지만 다른 큰 메모리 뱅크로 볼 수 있다. 소프트웨어 관점에서 외부 메모리는 여전히 균일한 메모리일 수 있다. 도 7의 SoC는 도 6의 SoC의 대안적 또는 예시적인 구현일 수 있다. 유사하게, 도 7의 SoC는 HMD의 SoC(630A)와 같은 도 5의 SoC들 중 하나 이상에 대응할 수 있다. 따라서, 도 7의 SoC는 본 개 시내용의 다른 도면들과 관련하여 설명된 것과 같은 인공 현실 시스템에서 구현될 수 있다. 이러한 예들에서, SoC는 HMD 내에서 구현될 수 있고 전체 인공 현실 환경을 구현하기 위한 기능들을 수행할 수 있다. 그러나, SoC와 관련하여 본 명세서에 설명된 개념들은 인공 현실 애플리케이션들 또는 구현들 외의 다른 맥락들에 적용될 수 있고, SoC는 다른 시스템들에 또는 인공 현실 맥락들 및 애플리케이션들 이외의 용도 들에 유리하게 배치될 수 있다. 도 7의 SoC는 인공 현실 시스템의 HMD 내에 포함된 시스템들과 같은 시스템에 특히 적합할 수 있으며, 여기서 메모리의 광범위한 사용이 바람직하거나 필요할 수 있지만, 외부 메모리의 사용은 대기시간의 측면뿐만 아니라 전력 소비 측면에서 비용이 많이 들 수 있다. 따라서, 공유 메모리는 SoC의 일부로 서 구현될 수 있고, 저-대기시간, 동시 액세스 및 저전력 특징들을 가능하게 하는 방식으로 설계 및/또는 구현될 수 있다. 예를 들어, 도 7에서, 다중 스위치들은 메모리 뱅크들 사이에서 메모리 트래픽을 라우팅 하는 데 사용된다. 단일 스위치 또는 NOC가 일부 설계들에서 사용될 수 있지만, NOC가 라우팅하는 메모리 트래 픽의 양이 큰 경우, 이러한 스위치 또는 NOC는 정체 지점이 될 수 있다. 또한, 단일 스위치 또는 NOC는 크기가 커야 할 수 있고, 큰 NOC는 상당한 전력량을 소비하려는 경향이 있다. 따라서, 도 7에 도시된 방식으로 다중 NOC들(예를 들어, 스위치들)을 사용하면 유리할 수 있다. 예를 들어, 다중 스위치들을 사용하면 스위 치들의 각각이 다중 스위치들을 통해 메모리 트래픽을 분배하는 것을 가능하게 하며, 이는 임의의 주 어진 스위치에서의 정체를 감소시킬 뿐만 아니라 이러한 시스템의 스위치들의 각각이 더 적은 전력을 소비하는 경향이 있다. 일부 예들에서, SoC 내의(그러나 공유 메모리 외부의) 서브시스템들 및/또는 구성요소들의 관점으로 부터, 공유 메모리는 다중 진입점들(예를 들어, 포트들)을 갖는 것으로 나타난다. 공유 메모리 의 각 서브시스템 또는 기능 블록(예를 들어, PCI/USB 서브시스템, 호스트 서브시스템, 카메라 서브 시스템, FCV 서브시스템, 그래픽 서브시스템, 및 디스플레이 서브시스템들)은 하나 이상의 메모리 뱅크들에 액세스(예를 들어, 데이터 액세스 또는 데이터 저장)하는 트래픽을 생성할 수 있다. 각각 의 이러한 서브시스템은 도 7의 예에서, 하나 이상의 메모리 뱅크들에 대한 액세스를 개시하는데 사용하는 포트를 가진다. 일부 예들에서, 하나 이상의 스위치들이 포트로부터 메모리 트래픽을 수신할 때, 이러한 각 스위치는 일부 경우에 메모리에 대한 임의의 다른 액세스들을 중재할 필요 없이 직접 주어진 메모리 뱅 크에 액세스할 수 있다. 메모리 뱅크들의 각각은 독립적인 것으로 간주될 수 있으며, 일부 경우에 특 정 스위치는 충돌없이 다중 직접-연결된 메모리 뱅크들에 액세스할 수 있다. 따라서, 일부 예들에서, 및 본 명세서에 추가로 설명되는 바와 같이, 다중 메모리 뱅크들에 대한 액세스는 메모리 트래픽이 임의의 공통 지점을 횡단할 필요없이 동시적일 수 있다. 예를 들어, PCI/USB 서브시스템 은 포트(891A)를 통해 공유 메모리에 액세스함으로써 메모리 뱅크(895A)에 액세스할 수 있고, 여기서 스위 치(893A)는 메모리 트래픽을 메모리 뱅크(895A)에 직접 라우팅한다. 유사하게, 디스플레이 서브시스템(858B)은 포트(891I)를 통해 공유 메모리에 액세스함으로써 메모리 뱅크(895N)에 액세스할 수 있고, 스위치(893C)는 메모 리 트래픽을 메모리 뱅크(895N)에 직접 라우팅한다. 이러한 예에서, 메모리 뱅크(895A) 및 메모리 뱅크(895N)의 각각에 대한 메모리 트래픽은 임의의 공통 지점을 횡단할 필요가 없으므로, 메모리 뱅크(895A) 및 메모리 뱅크 (895N)는 PCI/USB 서브시스템 및 디스플레이 서브시스템(858B)에 의해 동시에 액세스될 수 있다. 또한, 스 위치들의 각각은 다중 서브시스템들이 다중 직접-연결된 메모리 뱅크들에 동시에 액세스하는 것을 가 능하게(예를 들어, 호스트 서브시스템이 메모리 뱅크(895B)에 액세스하는 동안 PCI/USB 서브시스템이 메모리 뱅크(895A)에 액세스하는 것을 가능하게) 할 수 있도록 설계될 수 있다. 동시 액세스는 따라서 상당한 대역폭 향상을 제공할 수 있으며, 이는 단일 NOC를 사용하여 메모리에 대한 공유 액세스가 수행되는 시스템에 비해 한 가지 이점이다. 예를 들어, 4개의 메모리 뱅크들이 4개의 상이한 서브시스템들에 의해 동시에 액 세스되면, 공유 메모리의 유효 메모리 속도 또는 대역폭은 단일 메모리 뱅크의 액세스 속도보다 대략 4배 더 빠를 수 있다. 일반적으로, 이러한 동시 액세스는, 서브시스템들이 SoC 상의 그 서브시스템에 물리적으로 가까운 하나 이 상의 메모리 뱅크들에 액세스하고 및/또는 하나의 스위치를 수반하는 단일 홉만이 필요한 SoC에 서 가능할 수 있다. 그러나, 서브시스템이 SoC 상의 그 서브시스템에 물리적으로 가깝지 않은 하나 이상의 메모리 뱅크들에 액세스하고 및/또는 다중 스위치들을 수반하는 다중 홉들이 필요한 경우에는, 메모 리 트래픽 경합을 피하기 위해 중재가 필요할 수 있다. 이러한 경우에, 다중 메모리 뱅크들에 대한 동시 액세스가 제한되거나 중재 후에만 가능할 수 있다. 그러나 주어진 서브시스템에 의해 통상적으로 또는 일반적으 로 액세스되는 메모리 사이의 물리적 거리들 및 횡단되어야 할 스위치들의 수를 최소화하려는 방식으로 SoC 및 메모리 뱅크들 내의 서브시스템들의 각각이 SoC 상에 물리적으로 배열되도록 SoC가 설계된 경우, 메모리 트래픽 중재는 상당한 정도로 피할 수 있다. 메모리 트래픽 중재가 피할 수 있으면 많은 경우에 동시 메모리 액세스가 활성화될 수 있다. 공유 메모리가 많은 경우에 메모리 트래픽의 중재를 수행하지 않고 공유 메모리 뱅크들에 대한 동시 액세스를 제공할 수 있게 하는 한 가지 방법은, 분산 대기시간 설계를 사용하여 공유 메모리를 구현하는 것이며, 메모리 뱅크들에 대한 액세스 대기시간은 포트들(또는 서브시스템들) 중 어느 것이 메모리 뱅크들 중 어느 것에 액세스하는지에 따라 달라지는 경향이 있다. 이러한 예에서, 포트(891A)로부터 메모 리 뱅크(895A)로의 대기시간은 포트(891H)로부터 메모리 뱅크(895A)로의 대기시간보다 적을 수 있다. 메모리 뱅 크(895A)에 대한 이러한 대기시간은 포트(891A)가 메모리 뱅크(895A)에 도달하는 데 단일 홉(스위치(893A)를 수반함)만 필요하기 때문에 포트(891A)에 대해 감소될 수 있다. 도 7에서, 대기시간은 타겟 메모리 뱅크에 도달하는데 필요한 홉 수의 함수일 수 있다. 일부 예들에서, 연결들, 경로들 및 연결들의 물리적 길이들은 또한 집적 회로에서 확장할 수 있 는 이러한 연결들 또는 경로들의 거리에 대한 전기적 제한이 종종 있기 때문에 주어진 포트와 주어진 메모 리 뱅크 사이의 대기시간에 영향을 미칠 수 있다. 연결들 또는 경로들이 너무 긴 경우, 신호가 연결 또는 경로를 따라 그 목적지에 도달할 때 안정되도록 신호들을 재증폭해야 할 수 있다. 이러한 경우, 이러한 재증폭 에는 추가 클록 사이클이 필요하므로 대기시간이 증가할 수 있다. 따라서, 포트(891A)로부터 메모리 뱅크(895 A)까지의 대기시간은 포트(891A)로부터 메모리 뱅크(895A)까지의 물리적 거리(연결들 및 연결들의 길 이들)가 포트(891H)로부터 메모리 뱅크(895A)까지의 물리적 거리(포트(891H), 경로들 및 연결로부터 의 대응하는 연결들의 길이들)에 비해 상대적으로 짧을 수 있기 때문에 감소될 수 있다. 연결들의 물리적 길이들의 이러한 차이들은 도 7에 도시된 연결들의 길이들이 대략 축적에 맞게 도시된 설계에 대해 도 7로부터 명백하다. 이러한 분산 대기시간 설계는 전력 소비 이점들도 있다. 예를 들어, SoC는, 트래픽에 의해 메모리 뱅크들 로 횡단하는 홉 수를 제한하고, 공통 또는 통상적인 메모리 트래픽에 의해 메모리 뱅크들로 이동하는 연결들의 길이를 제한하고, SoC 내의 연결들, 배선들 및/또는 경로들의 길이를 제한함으로써 전력을 절약 할 수 있다. 단일 NOC(또는 스위치)보다는 다중 NOC들 또는 스위치들이 또한 전력 효율이 더 높은 경향이 있는데, 단일 NOC를 사용하여 공유 메모리를 구현하려면 단일 NOC가 대량의 전력을 소비해야 할 수 있기 때문이 다. 분산 대기시간 설계를 가능하게 하는 설계 고려사항들의 결과로, SoC의 전력 소비 속성들이 개선될 수 있다. 일부 예들에서, 메모리 뱅크들의 각각은 또한 저전력 또는 절전 모드로 자동으로(또는 명령에 따라) 전환 하는 능력과 같은 추가적인 전력 소비 특징들로 구성될 수 있다. 일부 예들에서, 메모리 뱅크들의 각각은 SoC 상에서 독립적으로 동작하고, 저전력 모드로 전환할 때를 독립적으로 결정할 수 있다. 일부 예들에서, 메모리 뱅크들의 각각은 그 메모리 뱅크들에 대한 이전 액세스 이후 얼마나 많은 시간이 경과했는지 에 기초하여 및/또는 주어진 메모리 뱅크에 액세스하려는 서브시스템들의 액세스 패턴들에 기초하여 절전 모드 또는 저전력 모드로 전환할지를 결정할 수 있다. SoC가 배치된 후 공유 메모리의 이러한 액세스 패턴들 및/또는 사용 패턴들을 평가하고 이러한 전환들을 수행하기 위한 적절하거나 최적의 임계값들을 학습함 으로써 메모리 뱅크들이 저전력 모드로 전환하는 빈도를 조정하거나 조절하는 것이 가능할 수 있다. 일부 예들에서, 메모리 뱅크들을 저전력 모드에서 전환하기 위한 대기시간 및 전력 소비 측면에서 비용이 있을 수 있고, 이러한 비용은 메모리 뱅크들이 저전력 모드로 전환하는 빈도에 영향을 미칠 수 있다. 또한, 일 부 예들에서, 메모리 관리 모듈이 비용 평가를 수행하거나 메모리 뱅크들 내에 메모리를 할당할 때의 비용 함수를 평가할 때 이러한 모드 전환 비용들이 고려될 수 있으며, 이는 하기에 추가로 설명된다. SoC는 또한 이러한 각 서브시스템의 예상 사용 패턴들에 기초하여 대기시간을 조정함으로써 설계될 수 있 다. 예를 들어, 도 1 내지 도 5에 도시된 인공 현실 시스템과 같은 일부 시스템들에서, 디자인 타임에서 데이터 가 SoC 내에서 어떻게 흐를 것으로 예상되는지 알 수 있다. 또한, SoC 내에서 구현된 서브시스템들의 각각(예를 들어, PCI/USB 서브시스템, 호스트 서브시스템, 카메라 서브시스템, FCV 서브시스템 , 그래픽 서브시스템, 및 디스플레이 서브시스템들)의 메모리 요건들에 관한 정보를 알 수 있다. 이러한 지식을 활용하면, 공통 메모리 동작들의 대기시간을 감소시키고, 동시 메모리 동작들을 가능하게 하며, SoC의 전체 전력 소비 요구들을 감소시키는 경향이 있는 설계 선택을 할 수 있다. 이러한 설계 선택 들은 메모리 뱅크들의 수 및 물리적 배열, 포트들의 수 및 물리적 배열, 스위치들의 수 및 물리 적 배열, 그리고 일반적으로 스위치들 및 연결들, 경로들, 연결들로 구성된 네트워크 토폴 로지를 선택하는 것을 수반할 수 있다. 설계시 예상 사용 사례들을 알 수 없는 범용 SoC의 경우, 이러한 설계 선택들은 불가능하거나 권장되지 않을 수 있다. 그러나 설계시 예상 사용 사례들에 관한 중요한 정보가 알려진 경우, 메모리 대기시간 및 전력 효율성에 상당한 영향을 미치는 설계 선택들을 할 수 있다. 이러한 설계 선택들 은 설계 후반에 이루어질 수도 있으므로, SoC에 대응하는 집적 회로를 제조하기 직전에 배치될 예상 사용 패턴들과 관련된 맞춤화들을 가능하게 하고 이점을 활용할 수 있다. 따라서, 하나 이상의 메모리 뱅크들은 특정 서브시스템들에 의한 효율적인 액세스를 가능하게 하는 방식으 로 SoC 상에 배열될 수 있다. 예를 들어, 도 7의 예에서, 호스트 서브시스템으로부터 나오는 데이터 가 메모리 뱅크(895B) 및/또는 메모리 뱅크(895C)로만 갈 가능성이 있음을 시사하는 예상 사용 패턴들이 있을 수 있다. 이러한 예에서, 메모리 뱅크(895B), 메모리 뱅크(895C), 스위치(893A), 포트(891C) 및 호스트 서브시스템의 각각이 SoC에 물리적으로 배열될 수 있으므로, 이러한 구성요소들 사이의 연결은 짧고 단일 홉(스위치(893A))만 필요로 한다. 호스트 서브시스템이 포트(891C)를 통해 메모리 뱅크들 중 어느 하 나에 액세스할 수 있고 공유 메모리가 논리적으로 여전히 단일의 균일한 메모리 공간인 것처럼 보일 수 있 지만, 호스트 서브시스템은 메모리 뱅크(895B) 및 메모리 뱅크(895C) 이외의 임의의 메모리 뱅크들에 액세스하지 않을 수 있다. 따라서, 메모리 뱅크(895B) 및 메모리 뱅크(895C)에 액세스하는 호스트 서브시스템 의 능력을 개선 및/또는 최적화하는 설계 선택들을 하는 것이 적절할 수 있다. 유사하게, 카메라 서브시스템은 또한 (SoC의 궁극적인 애플리케이션에 대한 지식에 기초하여) 메모리 뱅크들(895D, 895E, 895F 및 895G)에 주로 액세스할 것으로 예상될 수 있다. 따라서, 스위치(893B), 포트 (891E), 및 메모리 뱅크뿐만 아니라 이들 메모리 뱅크들의 각각은 SoC에 물리적으로 배열되어 이들 구성요소들 사이의 연결이 짧고 단일 홉(스위치(893B))만 필요로 할 수 있다. 다른 예로서, FCV 서브시스템은 또한 메모리 뱅크(895H) 및 메모리 뱅크(895A)에 주로 액세스할 것으로 예 상될 수 있다. 따라서, 설계 프로세스 동안, 대응하는 구성요소들이 짧고 단일 홉만 필요로 하도록 배열된 메모 리 뱅크(895A), 메모리 뱅크(895H), 스위치(893B), 포트(891F) 및 FCV 서브시스템을 배열하기 위한 노력 이 이루어질 수 있다. 그러나 일부 예들에서는 이러한 모든 설계 최적화들을 달성하기 위해 SoC를 설계하 는 것이 항상 가능하거나 효율적이지 않을 수 있다. 예를 들어, 도 7의 예에서, FCV 서브시스템이 FCV 서 브시스템(856A)에 자주 액세스할 것으로 예상되더라도, 설계 고려사항들은 FCV 서브시스템이 2개의 홉을 통해 FCV 서브시스템(856A)에 액세스하도록 요구되는 결과를 유발할 수 있다. 그러나, FCV 서브시스템이 대기시간에 상대적으로 관대한 경향이 있는 예에서, FCV 서브시스템이 메모리 뱅크(895A)에 대한 직접적인 원-홉 경로를 갖지 않는 경우에도 도 7의 배열은 적절한 설계일 수 있다. FCV 서브시스템에 대한 대기시간 증가가 성능에 영향을 미칠 가능성이 적은 경우, FCV 서브시스템에 비해 SoC 상의 비최적인 위치들에 하나 이상의 메모리 뱅크들을 배치하는 것이 적절할 수 있다. 따라서, 도 7의 예에서, FCV 서브시스템이 메모리 뱅크(895A)에 액세스하려고 할 때, FCV 서브시스템(85 6)은 포트(891F)를 통해 메모리 액세스를 개시하고, 그 액세스는 포트(891F)와 스위치(893B) 사이의 연결 을 통해 스위치(893B)에 전달된다. 스위치(893B), 또는 스위치(893B)와 연관된 에이전트는 메모리 뱅크(895A)로 의 라우트를 생성한다. 생성된 라우트에 기초하여, 스위치(893B)는 스위치(893B)와 스위치(893A) 사이의 경로 를 통해 스위치(893A)에 메모리 트래픽을 라우팅한다. 스위치(893A)는 메모리 트래픽을 수신하고 스위치 (893A)와 메모리 뱅크(895A) 사이의 연결을 통해 메모리 뱅크(895A)에 트래픽을 라우팅한다. 또한, 다른 설계 고려사항들은 서브시스템들의 특정 서브세트들이 동일한 데이터 중 일부를 처리하거나 액세스 하는 방법에 관한 지식에서 나올 수 있다. 이러한 예에서, 이러한 서브시스템들은 하나 이상의 공통 메모리 뱅 크들에 액세스할 필요가 있을 수 있다. 따라서, 이러한 서브시스템들은 물리적으로 서로 가까이 있도록 SoC에 같은 위치에 배치하는 것이 적절할 수 있다. 또한, 이러한 서브시스템들은 SoC에 물리적으로 배열되어, 각각이 해당 서브시스템들과 연관된 포트들을 통해 해당 공통 메모리 뱅크들에 빠르고 효 율적으로(예를 들어, 저대기시간, 저전력, 단일 홉) 액세스할 수 있다. 다른 설계 고려사항들은 외부 메모리에 대한 액세스와 관련될 수 있다. 예를 들어, 일부 예들에서 일부 서브시 스템들은 외부 메모리 제어기를 통해 외부 메모리에 액세스해야 하는 경향이 있을 수 있다. 카메라 서브시 스템, FCV 서브시스템 및/또는 그래픽 서브시스템은 일부 예들에서 다른 서브시스템들보다 외부 메모리에 더 자주 액세스할 수 있고, SoC는 이러한 서브시스템 중 하나 이상이 외부 메모리 제어기를 통해 외부 메모리에 더욱 효율적으로 액세스할 수 있도록 설계될 수 있다. 이러한 설계는 카메라 서브시스템 , FCV 서브시스템 및/또는 그래픽 서브시스템이 단일 스위치 홉을 통해서만 외부 메모리 제어기에 도달할 수 있도록 하고 및/또는 이러한 서브시스템들이 물리적으로 짧은 연결들을 통해 외부 메 모리 제어기에 도달할 수 있도록 한다. 일부 예들에서, 공유 메모리 내의 메모리 할당은 SoC 내의 하나 이상의 서브시스템들에서 실행하는 메모리 관리기 모듈에 의해 수행될 수 있다. 하나의 이러한 예에서, 호스트 서브시스템의 하나 이상의 코 어들에서 실행하는 메모리 관리 모듈은 호스트 서브시스템 및 다른 서브시스템들의 각각에 대해 메모 리를 할당할 수 있다. 일부 예들에서, 메모리 관리 모듈은, 메모리 뱅크 중 어느 것이다양한 서브시 스템들에 직접 액세스할 수 있는지(예를 들어, 한 홉)와 메모리 뱅크 중 어느 것이 비교적 짧은 경로들을 통해 공유 메모리 내의 포트들에 액세스할 수 있는지를 나타내는 정보를 메모리 관리 모듈이 갖 도록 공유 메모리의 글로벌 뷰를 가질 수 있다. 메모리 관리 모듈은 또한 SoC 내의 서브시스템들의 각각의 메모리 사용 패턴들에 관한 정보, 메모리가 사용되는 방식에 관한 다양한 서브시스템들 사이의 상 호작용, 및 공유 메모리 내의 데이터 흐름들에 관한 다른 정보에 대한 액세스를 가질 수 있다. 메모리 관 리 모듈은 이러한 정보를 사용하여, 공통 메모리 동작들의 대기시간을 감소시키고 동시 메모리 동작들을 가능하게 하며 SoC의 전체 전력 소비 요구들을 감소시키는 방식으로 메모리를 할당할 수 있다. 본 개시내용의 하나 이상의 양태들에 따르면, 호스트 서브시스템은 SoC 내의 하나 이상의 서브시스템 들(예를 들어, PCI/USB 서브시스템, 호스트 서브시스템, 카메라 서브시스템, FCV 서브시스템 , 그래픽 서브시스템 및 디스플레이 서브시스템들)에 대한 메모리를 할당할 수 있다. 예를 들어, 도 7의 맥락에서 설명될 수 있는 예에서, 카메라 서브시스템과 같은 SoC 내의 서브시스템들 중 하나는 버스를 통해 신호를 출력한다. 호스트 서브시스템은 신호를 검출하고 신호에 관한 정보를 메 모리 관리 모듈에 출력한다. 메모리 관리 모듈은 카메라 서브시스템에 의해 신호가 메모리 할당 요청에 대응한다고 결정한다. 메모리 관리 모듈은 공유 메모리에 관한 정보에 기초하여 메모리 뱅크 들 중 어느 것으로부터 메모리를 할당할지를 결정한다. 일례에서, 메모리 관리 모듈은 메모리 뱅크들 (895D, 895E, 895F 및/또는 853G) 중 하나 이상으로부터 메모리를 할당할 수 있다. 이러한 할당은 이러한 메모 리 뱅크들이 스위치(893B)를 통해 직접 액세스할 수 있고 어떤 경우에는 중재가 거의 또는 전혀 없이 액세스될 수 있기 때문에 선호될 수 있다. 또한, 메모리 뱅크들(895D, 895E, 895F 및/또는 853G)은 카메라 서브시스템 및/또는 포트(891E)에 물리적으로 더 가까울 수 있으므로, 카메라 서브시스템에 의한 이러한 메모리 에 대한 액세스들을 위한 전력 소비를 제한하는 경향이 있고 또한 카메라 서브시스템과 메모리 뱅크들 사이에서 전파하는 신호들에 대해 수행될 필요가 있을 수 있는 임의의 신호 증폭을 제한하는 경향이 있다. 일부 예들에서, 어느 메모리 뱅크들로부터 메모리를 할당할지 결정하기 위해, 메모리 관리 모듈은 비 용 평가를 수행하거나 메모리 뱅크들 중 어느 것이 메모리 할당을 위한 최소 비용 선택을 나타내는지를 결 정하기 위해 비용 함수를 평가할 수 있다. 이러한 비용 함수는 복수의 서브시스템들의 각각의 예상 메모리 액세 스 패턴들, SoC의 구성요소들 사이의 물리적 거리들, 공유 메모리 내의 네트워크 토폴로지, 및 메모 리 뱅크들의 각각과 연관된 전력 소비 속성들에 관한 정보를 포함하는 인자들을 평가할 수 있다. 이러한 비용 함수는 또한 이러한 인자들이 공통 메모리 동작들의 대기시간을 감소시키고 동시 메모리 동작들을 가능하 게 하며 SoC의 전체 전력 소비 요구들을 감소시키는데 미치는 상대적 영향에 기초하여 각 이러한 인자에 가중치들을 할당할 수 있다. 많은 경우에, 이러한 비용 함수는 요청하는 서브시스템에 물리적으로 가까운 메모 리 뱅크들에 대한 액세스 권한을 부여하도록 동작할 수 있다. 메모리 관리 모듈은 비용 함수에 기초 하여 일례에서 메모리 뱅크(895D)로부터 메모리를 할당하는 것이 카메라 서브시스템에 대해 최적임을 결정 할 수 있다. 도 7의 맥락에서 설명되는 메모리 할당 예를 계속하면, 메모리 관리 모듈은 호스트 서브시스템이 버 스를 통해 신호를 출력하게 한다. 카메라 서브시스템은 버스에서 신호를 검출하고, 메모리가 메 모리 뱅크 내의 카메라 서브시스템에 할당되었다고 결정한다. 카메라 서브시스템은 스위치 (893B)로 전파되는 포트(891E)에 신호를 출력한다. 스위치(893B)는 신호가 메모리 뱅크(895D) 내에 데이터를 저 장하기 위한 요청에 대응한다고 결정한다. 스위치(893B)는, 메모리 뱅크(895D)에 대한 직접 라우트를 갖고 포트 (891E)로부터 메모리 뱅크(895D)에 액세스하는데 중재가 거의 또는 전혀 필요하지 않다고 결정한다. 스위치 (893B)는 스위치(893B)와 메모리 뱅크(895D) 사이의 접속 및 인터페이스를 통해 데이터를 메모리 뱅 크(895D)에 데이터를 라우팅한다. 메모리 뱅크(895D)는 메모리 뱅크(895D) 내의 하나 이상의 메모리 셀들 내에 데이터를 저장한다. 도 8은 본 개시내용의 하나 이상의 양태들에 따른 호스트 서브시스템 상에서 실행하는 예시적인 메모리 관리 모 듈에 의해 수행되는 동작들을 도시한 흐름도이다. 도 8은 도 7의 호스트 서브시스템과 맥락 내에서 본 명 세서에 설명된다. 다른 예들에서, 도 8에 설명된 동작들은 하나 이상의 다른 구성요소들, 모듈들, 시스템들 또 는 디바이스들에 의해 수행될 수 있다. 또한, 다른 예들에서, 도 8과 관련하여 설명된 동작들은 병합되거나, 상 이한 순서로 수행되거나, 생략될 수 있거나, 또는 구체적으로 예시되거나 설명되지 않은 추가적인 동작들을 포 함할 수 있다. 도 8에 도시된 프로세스에서, 및 본 개시내용의 하나 이상의 양태들에 따르면, 호스트 서브시스템은 메모 리 할당 요청을 수신할 수 있다. 예를 들어, 도 7을 참조하여 설명될 수 있는 예에서, FCV 서브시스템 은 버스를 통해 신호를 출력한다. 호스트 서브시스템은 버스에서 신호를 검출하고 신호에 관한 정보를 메모리 관리 모듈에 출력한다. 메모리 관리 모듈은 신호가 FCV 서브시스템에 의해메모리 할당 요청에 대응한다고 결정한다. 호스트 서브시스템은 메모리를 할당할 메모리 뱅크를 선택하기 위해 비용 평가를 수행할 수 있다 . 예를 들어, 예를 계속하면, 메모리 관리 모듈은 SoC의 예상 데이터 흐름 패턴들 및 SoC 에 관해 메모리 관리 모듈이 이용할 수 있는 정보에 기초하여 비용 함수를 평가한다. 일부 예들에서, 이러 한 정보는 메모리 뱅크들의 각각의 가용성, 현재 사용량 및 용량, FCV 서브시스템의 예상 메모리 액 세스 패턴들, FCV 서브시스템 및 SoC의 구성요소들 사이의 물리적 거리들, 공유 메모리 내의 네 트워크 토폴로지, 및 메모리 뱅크들의 각각과 연관된 전력 소비 속성들에 관한 정보를 포함할 수 있다. 호스트 서브시스템은 비용 평가에 기초하여 할당할 메모리 뱅크들 중 하나를 선택할 수 있다. 예를 들어, 비용 함수에 기초하여, 메모리 관리 모듈은 메모리 뱅크(895H)가 이용 가능한 메모리 뱅크들 의 가장 전력 효율적이고 낮은 대기시간을 나타낸다고 결정할 수 있다. 따라서 메모리 관리 모듈은 FCV 서브시스템을 위해 메모리 뱅크로부터 메모리를 할당하도록 선택한다. 호스트 서브시스템은 선택된 메모리 뱅크로부터 메모리를 할당할 수 있다. 예를 들어, 메모리 관리 모듈은 호스트 서브시스템이 버스를 통해 신호를 출력하게 한다. FCV 서브시스템은 버스에서 신호를 검출한다. FCV 서브시스템은 신호가 메모리 할당 요청이 호스트 서브시스템에 의해 승인되었다는 표시에 대응한다고 결정한다. FCV 서브시스템은 신호가 메모리 뱅크(895H)를 메모리가 할당된 메모리 뱅크로 식별한다고 추가로 결정한다. 도 9는 본 개시내용의 하나 이상의 양태들에 따른 하나 이상의 예시적인 스위치들 또는 NOC들에 의해 수행되는 동작들을 도시한 흐름도이다. 도 9는 도 7의 NOC들 또는 스위치들의 맥락 내에서 본 명세서에 설명된다. 다른 예들에서, 도 9에 설명된 동작들은 하나 이상의 다른 구성요소들, 모듈들, 시스템들 또는 디바이스들에 의 해 수행될 수 있다. 또한, 다른 예들에서, 도 9와 관련하여 설명된 동작들은 병합되거나, 상이한 순서로 수행되 거나, 생략될 수 있거나, 또는 구체적으로 예시되거나 설명되지 않은 추가적인 동작들을 포함할 수 있다. 도 9에 도시된 프로세스에서, 및 본 개시내용의 하나 이상의 양태들에 따르면, 스위치(893B)는 메모리 액세스 요청을 수신할 수 있다. 예를 들어, 도 7을 참조하여 설명될 수 있는 다른 예에서, FCV 서브시스템은 신호를 포트(891F)에 출력한다. 포트는 포트(891F)와 스위치(893B) 사이의 연결을 통해 신호를 스위 치(893B)에 전파한다. 스위치(893B)는 신호를 검출하고 신호가 메모리 뱅크들 중 하나에 액세스하기 위한 요청에 대응한다고 결정한다. 스위치(893B)는 요청된 메모리 뱅크에 대한 직접 경로가 있는지 여부를 결정할 수 있다. 예를 들어, 일례에서, 스위치(893B)는 신호가 메모리 뱅크(895H)에 액세스하기 위한 요청에 대응한다고 결정한다. 스위치 (893B)는 또한 메모리 뱅크(895H)가 스위치(893B)와 메모리 뱅크(895H) 사이의 연결을 통해 직접 액세스될 수 있다고 결정한다(902로부터의 예 경로). 스위치(893B)는 메모리 뱅크(895H)에 액세스하고 어떤 경우에는 중 재를 수행하지 않고 메모리 동작을 수행한다. 스위치(893A)는 요청된 메모리 뱅크에 대한 직접 경로가 없는 경우 중재를 수행할 수 있다(903, 그리고 902로부터의 아니오 경로). 예를 들어, 상이한 예에서, 스위치(893B)는 포트(891F)와 스위치(893B) 사이의 연결 을 통해 수신된 신호가 메모리 뱅크(895N)에 액세스하기 위한 요청에 대응한다고 결정한다. 스위치(893B) 는 메모리 뱅크(895N)에 도달하기 위해 하나보다 많은 홉(스위치(893B) 및 스위치(893C))이 필요하다고 추가로 결정한다(902로부터의 아니오 경로). 스위치(893B) 및/또는 스위치(893C)는 메모리 뱅크(895H)에 액세스할 때 경합을 피하기 위해 중재를 수행한다. 스위치(893C)는 메모리 뱅크(895N)에 액세스한다. 임의의 흐름도들 또는 흐름 도면들을 포함하여 본 명세서에 설명된 프로세스들, 장치들 및 다른 예들 또는 예시 들의 경우, 본 명세서에 설명된 기술들 중 어느 하나에 포함된 특정 동작들, 작용들, 단계들 또는 이벤트들이 상이한 순서로 수행될 수 있고, 추가되거나, 병합되거나, 완전히 배제될 수 있다(예를 들어, 모든 설명된 작용 들 또는 이벤트들이 기술들의 실행에 필수적인 것은 아님). 더욱이, 특정 예들에서, 동작들, 작용들, 단계들 또 는 이벤트들은 예를 들어, 다중-스레드 처리, 인터럽트 처리, 또는 다중 처리기들을 통해 순차적이 아니라 동시 에 수행될 수 있다. 또한, 특정 동작들, 작용들, 단계들 또는 이벤트들은, 자동으로 수행되는 것으로서 구체적 으로 식별되지 않더라도, 자동으로 수행될 수 있다. 또한, 자동으로 수행되는 것으로 설명된 특정 동작들, 작용 들, 단계들 또는 이벤트들은 대안적으로 자동으로 수행되지 않을 수 있지만, 오히려 이러한 특정 동작들, 작용 들, 단계들 또는 이벤트들은 일부 예들에서 입력 또는 다른 이벤트에 대한 응답으로 수행될 수 있다. 본 개시내용에서 설명된 기술들은 하드웨어, 소프트웨어, 펌웨어 또는 이들의 임의의 조합으로 적어도 부분적으 로 구현될 수 있다. 예를 들어, 설명된 기술들의 다양한 양태들은 하나 이상의 마이크로처리기들을 포함하는 하 나 이상의 처리기들, DSP들, 주문형 반도체들(ASICs), 필드 프로그래밍 가능 게이트 어레이(FPGAs), 또는 임의 의 다른 등가의 집적 또는 이산 논리 회로뿐만 아니라 이러한 구성요소들의 임의의 조합 내에서 구현될 수 있다. 용어 \"처리기(processor)\" 또는 \"처리 회로(processing circuitry)\"는 일반적으로 단독으로 또는 다른 논리 회로 또는 임의의 다른 등가 회로와 조합하여 임의의 전술한 논리 회로를 나타낼 수 있다. 하드웨어를 포 함하는 제어 유닛은 또한 본 개시내용의 기술들 중 하나 이상을 수행할 수도 있다. 이러한 하드웨어, 소프트웨어 및 펌웨어는 본 개시내용에서 설명된 다양한 동작들 및 기능들을 지원하기 위해 동일한 디바이스 내에서 또는 별도의 디바이스들 내에서 구현될 수 있다. 또한, 임의의 설명된 유닛들, 모듈들 또는 구성요소들은 개별적이지만 상호 운용 가능한 논리 디바이스들로서 함께 또는 별도로 구현될 수 있다. 모 듈들 또는 유닛들과 같은 상이한 특징들의 묘사는 상이한 기능적 양태들을 강조하기 위한 것이며 이러한 모듈들 이나 유닛들이 별도의 하드웨어 또는 소프트웨어 구성요소들에 의해 실현되어야 함을 반드시 의미하지는 않는다. 오히려, 하나 이상의 모듈들 또는 유닛들과 연관된 기능은 별도의 하드웨어 또는 소프트웨어 구성요소 들에 의해 수행되거나 공통 또는 별도의 하드웨어 또는 소프트웨어 구성요소들 내에 통합될 수 있다. 본 개시내용에서 설명된 기술들은 또한 명령들을 포함하는 컴퓨터-판독 가능 저장 매체와 같은 컴퓨터-판독 가 능 매체에서 구현되거나 인코딩될 수도 있다. 컴퓨터-판독 가능 저장 매체에 내장되거나 인코딩된 명령들은 예 를 들어, 명령들이 실행될 때 프로그램 가능 처리기 또는 다른 처리기가 방법을 수행하게 할 수 있다. 컴퓨터 판독 가능한 저장 매체들은 랜덤 액세스 메모리(RAM), 판독 전용 메모리(ROM), 프로그램 가능 판독 전용 메모리 (PROM), 소거 가능한 프로그램 가능 판독 전용 메모리(EPROM), 전자적으로 소거 가능한 프로그램 가능 판독 전 용 메모리(EEPROM), 플래시 메모리, 하드 디스크, CD-ROM, 플로피 디스크, 카세트, 자기 매체들, 광학 매체들 또는 다른 컴퓨터 판독 가능 매체들을 포함할 수 있다. 본 명세서의 다양한 예들에 의해 설명된 바와 같이, 본 개시내용의 기술들은 인공 현실 시스템을 포함하거나 이 와 함께 구현될 수 있다. 설명된 바와 같이, 인공 현실은 사용자에게 제공하기 전에 어떤 방식으로든 조정된 현 실의 한 형태이며, 가상 현실 VR, 증강 현실 AR, 혼합 현실 MR, 하이브리드 현실 또는 일부 조합 및/또는 그 파 생물들을 포함할 수 있다. 인공 현실 컨텐트는 완전히 생성된 컨텐트 또는 캡처된 컨텐트(예를 들어, 현실-세계 사진들)와 결합된 생성 컨텐트를 포함할 수 있다. 인공 현실 컨텐트는 비디오, 오디오, 햅틱 피드백, 또는 이들 의 일부 조합을 포함할 수 있으며, 이들 중 임의의 것이 단일 채널 또는 다중 채널들(예를 들어, 시청자에게 3 차원 효과를 생성하는 스테레오 비디오)로 제공될 수 있다. 또한, 일부 예들에서, 인공 현실은 예를 들어, 인공 현실에서 컨텐트를 생성하는데 사용되는 및/또는 인공 현실에서 사용되는(예를 들어, 인공 현실에서 활동들을 수행하는) 애플리케이션들, 제품들, 액세서리들, 서비스들 또는 이들의 일부 조합과 연관될 수 있다. 인공 현실 컨텐트를 제공하는 인공 현실 시스템은, 호스트 컴퓨터 시스템에 연결된 헤드-마운트 디스플레이(HMD: head- mounted display), 독립형 HMD, 모바일 디바이스 또는 컴퓨팅 시스템, 또는 한 명 이상의 시청자들에게 인공 현 실 컨텐트를 제공할 수 있는 임의의 다른 하드웨어 플랫폼을 포함한 다양한 플랫폼들에서 구현될 수 있다. 예시의 편의를 위해 제한된 수의 디바이스들(예를 들어, 공유 메모리 디바이스들, SoC 디바이스들, 서브시스템 들, 메모리 뱅크들, 스위치들, 메모리 관리 모듈들 및 다른 것들)만이 도면들 및/또는 본 명세 서에 참조된 다른 예시들에 도시된다. 그러나, 본 개시내용의 하나 이상의 양태들에 따른 기술들은 이러한 시스 템들, 구성요소들, 디바이스들, 모듈들, 및/또는 다른 항목들 중 더 많은 것들로 수행될 수 있고, 이러한 시스 템들, 구성요소들, 디바이스들, 모듈들, 및/또는 다른 항목들에 대한 집합적 참조는 이러한 시스템들, 구성요소 들, 디바이스들, 모듈들, 및/또는 다른 항목들의 임의의 수를 나타낼 수 있다. 본 명세서에 포함된 도면들은 본 개시내용의 양태의 적어도 하나의 예시적인 구현을 각각 예시한다. 그러나 본 개시내용의 범위는 이러한 구현들에 제한되지 않는다. 따라서, 도면들에 예시된 것을 넘어 본 명세서에 설명된 시스템들, 방법들 또는 기술들의 다른 예 또는 대안적인 구현들은 다른 경우에는 적절할 수 있다. 이러한 구현 들은 도면들에 포함된 디바이스들 및/또는 구성요소들의 서브세트를 포함할 수 있고 및/또는 도면들에 도시되지 않은 추가 디바이스들 및/또는 구성요소들을 포함할 수 있다. 위에 기재된 상세한 설명은 다양한 구성들을 설명하려는 것이며 본 명세서에 설명된 개념들이 실시될 수 있는 구성들만을 나타내려는 것이 아니다. 상세한 설명에는 다양한 개념들에 대한 충분한 이해를 제공하기 위한 목적 으로 구체적인 세부사항들을 포함한다. 그러나 이러한 개념들은 이러한 특정 세부사항들 없이 실시될 수 있다. 일부 경우에, 잘-알려진 구조들 및 구성요소들은 이러한 개념들을 모호하게 하는 것을 피하기 위해 참조된 도면 들에서 블록도 형태로 도시된다.따라서, 다양한 시스템들, 디바이스들 및/또는 구성요소들의 하나 이상의 구현들이 특정 도면들을 참조하여 설 명될 수 있지만, 이러한 시스템들, 디바이스들 및/또는 구성요소들은 다수의 상이한 방식들로 구현될 수 있다. 예를 들어, 별도의 디바이스들로서 본 명세서의 도면들(예를 들어, 도 6 및/또는 도 7)에 예시된 하나 이상의 디바이스들은 대안적으로 단일 디바이스로서 구현될 수 있고; 별도의 구성요소들로서 예시된 하나 이상의 구성 요소들은 대안적으로 단일 구성요소로 구현될 수 있다. 또한, 일부 예들에서, 단일 디바이스로서 본 명세서의 도면들에 예시된 하나 이상의 디바이스들은 대안적으로 다중 디바이스들로서 구현될 수 있고; 단일 구성요소로 서 예시된 하나 이상의 구성요소들은 대안적으로 다중 구성요소들로서 구현될 수 있다. 이러한 다중 디바이스들 및/또는 구성요소들의 각각은 유선 또는 무선 통신을 통해 직접 결합되고 및/또는 하나 이상의 네트워크들을 통 해 원격으로 결합될 수 있다. 또한, 본 명세서의 다양한 도면들에 예시될 수 있는 하나 이상의 디바이스들 또는 구성요소들은 대안적으로 이러한 도면들에 도시되지 않은 다른 디바이스 또는 구성요소의 일부로서 구현될 수 있다. 이러한 방식 및 다른 방식으로, 본 명세서에 설명된 기능들 중 일부는 둘 이상의 디바이스들 또는 구성요 소들에 의한 분산 처리를 통해 수행될 수 있다. 또한, 특정 동작들, 기술들, 특징들 및/또는 기능들은 특정 구성요소들, 디바이스들 및/또는 모듈들에 의해 수 행되는 것으로 본 명세서에서 설명될 수 있다. 다른 예들에서, 이러한 동작들, 기술들, 특징들 및/또는 기능들 은 상이한 구성요소들, 디바이스들 또는 모듈들에 의해 수행될 수도 있다. 따라서, 본 명세서에서 하나 이상의 구성요소들, 디바이스들 또는 모듈들에 귀속되는 것으로 설명될 수 있는 일부 동작들, 기술들, 특징들 및/또는 기능들은 다른 예들에서, 이러한 방식으로 본 명세서에 구체적으로 설명되지 않더라도 다른 구성요소들, 디바이 스들 및/또는 모듈들에 귀속될 수 있다. 일부 예들의 설명들과 관련하여 특정 이점들이 식별되었지만, 다양한 다른 예들은 열거된 이점들의 일부, 없음 또는 모두를 포함할 수 있다. 기술적인 것이든 다른 것이든, 다른 이점들은 본 개시내용으로부터 당업자에게 명 백해질 수 있다. 또한, 특정 예들이 본 명세서에 개시되었지만, 본 개시내용의 양태들은 현재 알려져 있든 아니 든, 임의의 수의 기술들을 사용하여 구현될 수 있으며, 따라서, 본 개시내용은 본 개시내용에서 구체적으로 설 명 및/또는 예시된 예들에 제한되지 않는다.도면 도면1a 도면1b 도면2a 도면2b 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2022-7010823", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 본 개시내용에 설명된 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집 적 회로들을 사용하여 구현되는 예시적인 인공 현실 시스템을 도시하는 예시이다. 도 1b는 본 개시내용의 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집적 회로 들을 사용하여 구현되는 다른 예시적인 인공 현실 시스템을 도시하는 예시이다. 도 2a는 본 개시내용의 기술들에 따라 동작하는 예시적인 HMD를 도시하는 예시이다. 도 2b는 본 개시내용에 설명된 기술들에 따른, 다른 예시적인 HMD를 도시하는 예시이다. 도 3은 본 개시내용의 기술들에 따른, 하나 이상의 SoC 집적 회로들을 사용하여 구현될 수 있는 인공 현실 시스 템의 콘솔 및 HMD의 예시적인 구현들을 도시한 블록도이다. 도 4는 본 개시내용의 기술들에 따른, 하나 이상의 SoC 집적 회로들을 사용하여 구현될 수 있는 인공 현실 시스 템의 예시적인 HMD를 도시한 블록도이다. 도 5는 본 개시내용에 설명된 기술들에 따른, 하나 이상의 디바이스들이 각 디바이스 내의 하나 이상의 SoC 집 적 회로들을 사용하여 구현되는 다중-디바이스 인공 현실 시스템을 위한 분산 아키텍처의 더욱 상세한 예시 구 현을 도시한 블록도이다. 도 6은 본 개시내용의 하나 이상의 양태들에 따른, 인공 현실 시스템의 SoC 내에 포함된 다중 구성요소들, 서브 시스템들, 및/또는 디바이스들에 의해 액세스 가능한 예시적인 공유 메모리를 포함하는 예시적인 SoC를 도시한 블록도이다. 도 7은 본 개시내용의 하나 이상의 양태들에 따른, 다중 뱅크들 및 다중 포트들을 갖는 공유 메모리 시스템을 사용하는 예시적인 SoC를 도시한 블록도이다. 도 8은 본 개시내용의 하나 이상의 양태들에 따른 호스트 서브시스템 상에서 실행하는 예시적인 메모리 관리 모 듈에 의해 수행되는 동작들을 도시한 흐름도이다. 도 9는 본 개시내용의 하나 이상의 양태들에 따른 하나 이상의 예시적인 스위치들 또는 NOC들에 의해 수행되는 동작들을 도시한 흐름도이다."}
