{"patent_id": "10-2019-0168049", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0076641", "출원번호": "10-2019-0168049", "발명의 명칭": "인공지능 서비스를 제공하기 위한 방법", "출원인": "박병훈", "발명자": "박병훈"}}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프로세서에서실행되는 경우, 인공지능 서비스를 제공하기 위한 이하의 동작들을 수행하도록 하며, 상기 동작들은:적어도 하나의 엣지 디바이스(Edge Device)에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하는 동작;적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하는 동작; 및적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 동작; 을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하는동작은,엣지 디바이스로부터 수신한 모델 요청 신호에 기초하여 상기 엣지 디바이스에 사용자가 요청한 모델을 전송하는 동작;을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 모델의 학습 결과 정보는,학습된 모델의 버전 정보, 학습된 모델의 가중치, 학습에 따른 가중치 변화량 또는 모델의 학습 과정과 관련된데이터 중 적어도 하나를 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 학습된 모델의 가중치는,엣지 디바이스에서 상기 모델을 학습시키기 위해 사용된 학습 데이터 세트로부터 추출한 패턴 정보를 반영하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2021-0076641-2-제 1 항에 있어서,상기 적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 동작은,상기 적어도 하나의 엣지 디바이스로부터 수신한 학습된 모델의 가중치 중 적어도 일부에 기초하여 상기 모델을업데이트 하는 동작; 둘 이상의 엣지 디바이스로부터 수신한 둘 이상의 학습된 모델의 적어도 일부에 기초하여 상기 모델을 업데이트하는 동작; 또는상기 모델의 버전 정보를 업데이트하는 동작;중 적어도 하나를 포함하는, 컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상태 정보에 기초하여 동기화 작업을 수행하는 동작;을 더 포함하고,상기 동기화 작업은,서버 또는 적어도 하나의 엣지 디바이스가 동일한 모델을 사용자에게 제공하는 서비스를 수행하기 위하여 모델을 업데이트 하는 작업을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 동기화 작업은,장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기화 작업, 다른 엣지 디바이스로 하여금 상기 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하는 제 2 동기화 작업, 또는엣지 디바이스로부터 모델을 수신하는 제 3 동기화 작업중 적어도 하나를 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6 항에 있어서,상기 상태 정보는,모델의 버전 정보, 모델의 학습 데이터 메타 정보, 모델의 저장 위치 정보, 엣지 디바이스의 동작 관련 정보 또는 서버의 동작 관련 정보중 적어도 하나를 포함하는,공개특허 10-2021-0076641-3-컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서,상기 제 1 동기화 작업은,상기 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 장애가 발생한 엣지 디바이스에 모델을 전송하여 동기화를 수행하는 작업을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 제 1 동기화 작업은,상기 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 서버에 저장된 모델의 버전보다 하위 버전인 경우,상기 서버에 저장된 모델을 상기 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 상기 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 상기 장애가 발생한 엣지 디바이스로 하여금 상기 서버에 저장된 모델로 업데이트하도록 야기하는 작업; 또는상기 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위버전인 경우, 상기 다른 엣지 디바이스로 하여금 상기 다른 엣지 디바이스에 저장된 모델을 상기 장애가 발생한엣지 디바이스와 맵핑된 코디네이터 모듈 또는 상기 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여상기 장애가 발생한 엣지 디바이스로 하여금 상기 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기하는 작업;중 적어도 하나를 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 7 항에 있어서,상기 제 2 동기화 작업은,장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스로 하여금 상기 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 제 2 동기화 작업은,상기 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위버전인 경우, 상기 다른 엣지 디바이스에 저장된 모델을 상기 장애가 발생한 엣지 디바이스와 맵핑된 코디네이공개특허 10-2021-0076641-4-터 모듈 또는 상기 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 상기 장애가 발생한 엣지 디바이스로 하여금 상기 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기하는 작업을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 7 항에 있어서,상기 제 3 동기화 작업은,장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작업을 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 제 3 동기화 작업은,상기 엣지 디바이스에 저장된 모델의 버전이 상기 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인경우, 상기 엣지 디바이스에 저장된 모델을 상기 엣지 디바이스 또는 상기 엣지 디바이스와 맵핑된 코디네이터모듈 중 적어도 하나로부터 수신하여 상기 엣지 디바이스에 저장된 모델로 업데이트하는 작업을 더 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 1 항에 있어서,상기 엣지 디바이스는,상기 모델의 학습 및 상기 모델의 전송을 수행할 수 있는 중량 엣지 디바이스; 또는상기 모델의 전송을 수행할 수 있는 경량 엣지 디바이스;중 적어도 하나를 포함하는,컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,상기 모델의 전송은,적어도 하나의 상기 중량 엣지 디바이스 또는 적어도 하나의 상기 경량 엣지 디바이스 중 적어도 하나를 경유하여 사용자 단말로 전송되는 동작을 포함하는,공개특허 10-2021-0076641-5-컴퓨터 판독가능 저장매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "인공지능 서비스를 제공하기 위한 방법에 있어서,적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하는 단계;적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하는 단계; 및적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 단계;를 포함하는,인공지능 서비스를 제공하기 위한 방법."}
{"patent_id": "10-2019-0168049", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "인공지능 서비스를 제공하기 위한 서버로서,하나 이상의 프로세서; 및상기 하나 이상의 프로세서에서 실행 가능한 명령들을 저장하는 메모리;를 포함하고,상기 하나 이상의 프로세서는,적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하고,적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하고, 그리고적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는,서버."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프 로그램은 하나 이상의 프로세서에서 실행되는 경우 인공지능 서비스를 제공하기 위한 이하의 동작을 수행하도록 하며, 상기 동작은, 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습 시키도록 하는 동작; 적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하는 동작; 및 적어 도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 동작을 포함할 수 있다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 컴퓨팅 장치를 활용한 정보 처리 방법에 관한 것으로서, 보다 구체적으로는 인공지능 서비스를 제공 하기 위한 기술에 관한 것이다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "급격히 발전하는 IoT 시장에서 급증하는 엣지 디바이스의 트래픽 양과 늘어나는 사용자들의 데이터 요구를 충족 시키기에는 현재의 클라우드 컴퓨팅 구조로는 한계가 존재할 수 있다. 현재의 클라우드 컴퓨팅 구조는 부하의 집중, 실시간 연결의 한계, 보안 문제, 복잡한 데이터베이스 설계 등 다양한 문제가 존재할 수 있다. 따라서 최근에는 이러한 문제점들을 극복하기 위한 엣지 컴퓨팅 구조가 제시되고 있는 추세이다. 엣지 컴퓨팅 구조는 물리적으로 가까운 게이트웨이나 컴퓨팅 장치 등에서 연산 과정을 거치고 실시간으로 빠른 응답을 해주 는 구조일 수 있다. 현재는 인공지능 서비스 플랫폼이 클라우드 컴퓨팅 구조를 통해 구현되기도 한다. 하지만 전술한 바와 같이 클 라우드 컴퓨팅 구조는 문제점이 존재한다. 따라서 최근에는 안정적인 인공지능 서비스 플랫폼을 위하여 엣지 컴 퓨팅 구조를 차용하려는 시도가 증가하는 추세이다.따라서 안정적으로 인공지능 서비스를 제공하는 기술에 대한 수요가 당 업계에 존재할 수 있다. 대한민국 특허공개공보 10-2019-0085823는 개인 정보 보호가 가능한 개인화된 질의응답 시스템, 클라우드 서버 및 이의 공통 신경망 모델 제공 방법을 개시하고 있다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, 인공지능 서비스를 제공하기 위한 방법을 제공하기 위함 이다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라, 컴퓨터 판독가능 저장 매체에 저장되어 컴퓨터로 하여금 이하의 동작들을 수행하도록 하는 명령들을 포함하는 컴퓨터 프로그램이 개시된다. 상기 동작 들은, 적어도 하나의 엣지 디바이스(Edge Device)에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습 시키도록 하는 동작; 적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하는 동작; 및 적 어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 동작을 포함 할 수 있다. 대안적 실시예에서, 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 모델을 학습시키 도록 하는 동작은, 엣지 디바이스로부터 수신한 모델 요청 신호에 기초하여 엣지 디바이스에 사용자가 요청한 모델을 전송하는 동작을 포함할 수 있다. 대안적 실시예에서, 모델의 학습 결과 정보는, 학습된 모델의 버전 정보, 학습된 모델의 가중치, 학습에 따른 가중치 변화량 또는 모델의 학습 과정과 관련된 데이터 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 학습된 모델의 가중치는, 엣지 디바이스에서 모델을 학습시키기 위해 사용된 학습 데이터 세트로부터 추출한 패턴 정보를 반영할 수 있다. 대안적 실시예에서, 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기초로 모델을 업데이트하는 동작은, 적어도 하나의 엣지 디바이스로부터 수신한 학습된 모델의 가중치 중 적어도 일부에 기초하여 모델을 업데이트 하는 동작; 둘 이상의 엣지 디바이스로부터 수신한 둘 이상의 학습된 모델의 적어도 일부에 기초하여 상기 모델을 업데이트 하는 동작; 또는 모델의 버전 정보를 업데이트하는 동작; 중 적어도 하나를 포함할 수 있 다. 대안적 실시예에서, 상태 정보에 기초하여 동기화 작업을 수행하는 동작을 더 포함하고, 동기화 작업은, 서버 또는 적어도 하나의 엣지 디바이스가 동일한 모델을 사용자에게 제공하는 서비스를 수행하기 위하여 모델을 업 데이트 하는 작업을 포함할 수 있다. 대안적 실시예에서, 동기화 작업은, 장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기화 작업, 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하는 제 2 동기화 작업, 또는 엣지 디바이스로부터 모델을 수신하는 제 3 동기화 작업 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 상태 정보는, 모델의 버전 정보, 모델의 학습 데이터 메타 정보, 모델의 저장 위치 정보, 엣지 디바이스의 동작 관련 정보 또는 서버의 동작 관련 정보 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 장애가 발생한 엣지 디바이스에 모델을 전송하여 동기화를 수행하는 작업을 포함할 수 있 다. 대안적 실시예에서, 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 서버에 저장된 모델의 버전보다 하위 버전인 경우, 서버에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 상기 서버에 저장된 모델로 업데이트하도록 야기하는 작업; 또는 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위 버전인 경우, 다른 엣지 디바이스로 하여금 다른 엣 지 디바이스에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스에 저장된 모델 로 업데이트하도록 야기하는 작업; 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 제 2 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정 보에 기초하여 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기 화를 수행하는 작업을 포함할 수 있다. 대안적 실시예에서, 제 2 동기화 작업은, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바 이스에 저장된 모델의 버전보다 하위 버전인 경우, 다른 엣지 디바이스에 저장된 모델을 장애가 발생한 엣지 디 바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기하는 작업을 포함할 수 있다. 대안적 실시예에서, 제 3 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정 보에 기초하여 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작업을 포 함할 수 있다. 대안적 실시예에서, 제 3 동기화 작업은, 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인 경우, 엣지 디바이스에 저장된 모델을 엣지 디바이스 또는 엣지 디바이스와 맵핑 된 코디네이터 모듈 중 적어도 하나로부터 수신하여 엣지 디바이스에 저장된 모델로 업데이트하는 작업을 더 포 함할 수 있다. 대안적 실시예에서, 엣지 디바이스는, 모델의 학습 및 모델의 전송을 수행할 수 있는 중량 엣지 디바이스; 또는 모델의 전송을 수행할 수 있는 경량 엣지 디바이스; 중 적어도 하나를 포함할 수 있다. 대안적 실시예에서, 모델의 전송은, 적어도 하나의 상기 중량 엣지 디바이스 또는 적어도 하나의 상기 경량 엣 지 디바이스 중 적어도 하나를 경유하여 사용자 단말로 전송되는 동작을 포함할 수 있다. 본 개시의 다른 일 실시예에 따라, 하기 위한 방법이 개시된다. 적어도 하나의 엣지 디바이스에 모델을 전송하 여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하는 단계; 적어도 하나의 엣지 디바이스로부터 상기 모 델의 학습 결과 정보를 수신하는 단계; 및 적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하는 단계를 포함할 수 있다. 본 개시의 다른 일 실시예에 따라 하기 위한 서버가 개시된다. 하나 이상의 프로세서; 및 상기 하나 이상의 프 로세서에서 실행 가능한 명령들을 저장하는 메모리; 를 포함하고, 상기 하나 이상의 프로세서는, 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 상기 모델을 학습시키도록 하고, 적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신하고, 그리고 적어도 하나의 엣지 디바이스로부터 수신한 상 기 학습 결과 정보를 기초로 상기 모델을 업데이트할 수 있다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 일 실시예에 따라, 인공지능 서비스를 제공하기 위한 서버를 제공할 수 있다."}
{"patent_id": "10-2019-0168049", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 서버에서 실행되는 애플리케이션 및 서버 모두 컴포넌트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하나의 컴퓨터 내 에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌 트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스템에서 다른 컴포 넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인터넷과 같은 네트 워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, \"A 또는 B 중 적어도 하나\"이라는 용어는, \"A만을 포함하는 경우\", \"B 만을 포함하는 경우\", \"A와 B의 구성으로 조합된 경우\"를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개 시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다.제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 도 1은 본 개시의 일 실시예에 따른 인공지능 서비스를 제공하기 위한 서버의 블록 구성도이다. 도 1에 도시된 서버의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 서버는 서버의 컴퓨팅 환경을 수행하기 위한 다른 구성들이 포함될 수 있고, 개시된 구성들 중 일부만이 서버 를 구성할 수도 있다. 본 개시의 일 실시예에 따라, 서버는 프로세서, 메모리, 네트워크부를 포함할 수 있다. 본 개시의 일 실시예에 따라, 엣지 디바이스는 통신 네트워크를 통하여 서로 간에 또는 다른 노드와 통신하기 위한 매커니즘을 가지며, 데이터를 저장하고 활용하기 위한 시스템에서의 임의의 형태의 노드를 의미할 수 있다. 예를 들어, 엣지 디바이스는 PC, 랩탑 컴퓨터, 워크스테이션, 단말 및/또는 네트워크 접속성을 갖는 임의 의 전자 디바이스를 포함할 수 있다. 또한, 엣지 디바이스는 에이전트(Agent), API(Application Programming Interface) 및 플러그-인(Plug-in) 중 적어도 하나에 의해 구현되는 임의의 서버를 포함할 수도 있다. 또한, 엣 지 디바이스는 애플리케이션 소스 및/또는 클라이언트 애플리케이션을 포함할 수 있다. 전술한 엣지 디바이스는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 엣지 디바이스는 기업 또는 Service provider의 코어 네트워크로의 접속을 제공하 는 진입점일 수 있다. 엣지 디바이스는 예를 들어, 라우터, 라우팅 스위치, integrated access device(IAD), 멀티플렉서, MAN(Metropolitan area network), WAN(Wide Area Network) 엑세스 장치 등을 포함할 수 있다. 전 술한 엣지 디바이스는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 인공지능 서비스는 프로세서가 사용자 단말로부터 모델 전송 요청 신호를 수 신하는 경우, 모델을 해당 사용자 단말에 전송하는 서비스를 포함할 수 있다. 또한 인공지능 서비스는 프로세서 가 사용자 단말로부터 모델 전송 요청 신호를 수신하는 경우, 엣지 디바이스로 하여금 모델을 해당 사용자 단말에 전송하도록 야기할 수 있다. 따라서 프로세서가 인공지능 서비스를 제공함으로써 사용자는 필요한 모델을 제공받을 수 있다. 전술한 인공지능 서비스는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 인공지능 서비스를 제공할 수 있다. 프로세서는 인공지능 서비스를 제공하기 위하여, 네트워크부를 통해 엣지 디바이스로부터 모델 전송 요청을 수신할 수 있다. 전 술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 인공지능 서비스를 제공하기 위하여 적어도 하나의 엣지 디바이 스에 모델을 전송하여 엣지 디바이스로 하여금 모델을 학습시키도록 야기할 수 있다. 프로세서는 엣지 디 바이스로부터 수신한 모델 요청 신호에 기초하여 엣지 디바이스에 사용자가 요청한 모델을 전송할 수 있다. 모 델은 데이터 집합으로부터 규칙성을 추출하여 추론을 수행하는 네트워크 함수일 수 있다. 모델은 데이터 집합으 로부터 규칙성을 추출하여 추론을 수행하는 딥러닝 모델을 포함할 수 있다. 또한 모델은 기계학습 모델을 포함 할 수도 있다. 프로세서는 모델을 이용하여 데이터 집합에 존재하는 규칙성을 추출한 후, 추론값을 획득할 수 있다. 예를 들어, 프로세서가 복수개의 자동차 이미지에 존재하는 규척성을 모델을 이용하여 추출할 수 있다. 프로세서는 모델을 이용하여 획득한 규칙성을 기초로 모델에 입력된 이미지가 자동차 이미지인지 여 부에 대한 추론값(예를 들어, 이미지에 포함된 객체가 자동차일 확률일 80&)을 획득할 수 있다. 네트워크부 가 모델 전송 요청을 수신하는 경우, 프로세서는 해당 엣지 디바이스에 요청된 모델을 전송할 수 있 다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 적어도 하나의 엣지 디바이스로부터 모델의 학습 결과 정보를 수 신할 수 있다. 모델의 학습 결과 정보는 모델을 학습시킨 결과와 관련된 정보를 포함할 수 있다. 모델의 학습 결과 정보는 모델의 학습 과정에서 발생되는 정보 및/또는 모델의 학습 결과 발생되는 정보를 포함할 수 있다. 모델의 학습 결과 정보는 학습된 모델의 버전 정보, 학습된 모델의 가중치, 학습에 따른 가중치 변화량 또는 모델의 학습 과정과 관련된 데이터 중 적어도 하나를 포함할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 학습된 모델의 버전 정보는 학습된 모델이 언제 업데이트되었는지를 식별하기 위 한 정보를 포함할 수 있다. 학습된 모델의 버전 정보는 업데이트된 날짜, 시간, 업데이트 주체, 업데이트된 장 소(예를 들어, 서버 또는 엣지 디바이스)에 대한 정보를 포함할 수 있다. 따라서 모델의 버전 정보는 \"버전명 v2, 업데이트된 날짜: 2019-10-12, 업데이트 주체: 관리자, 업데이트된 장소: 서버\"를 포함할 수 있다. 또 다른 예로 모델의 버전 정보는 모델명: CNN(Convolutional Neural Network), 버전명 v4, 업데이트된 날짜: 2019-12- 12, 업데이트 주체: 사용자, 업데이트된 장소: 엣지 디바이스\"을 포함할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 학습된 모델의 가중치는 학습이 완료된 모델의 가중치를 포함할 수 있다. 모델의 학습 과정에서 모델의 가중치는 업데이트될 수 있다. 모델의 학습이 완료된 경우, 모델의 가중치는 더 이상 변 동되지 않을 수도 있다. 프로세서는 학습된 모델의 가중치를 엣지 디바이스로부터 수신할 수 있다. 본 개 시의 일 실시예에 따라, 학습된 모델의 가중치는, 엣지 디바이스에서 모델을 학습시키기 위해 사용된 학습 데이 터 세트로부터 추출한 패턴 정보를 반영할 수 있다. 패턴 정보는 데이터 집합 내에서 일정한 규칙성을 가지고 반복적으로 나타나는 데이터에 대한 정보를 포함할 수 있다. 패턴 정보는 예를 들어, 적어도 하나 이상의 속성 사이의 상관 관계에 대한 정보를 포함할 수 있다. 또한 패턴 정보는 예를 들어, 데이터를 분류하기 위한 기준에 대한 정보를 포함할 수도 있다. 프로세서는 패턴 정보가 포함된 모델을 이용하여 연속 또는 불연속 변수를 예측할 수 있다. 또한 프로세서는 패턴 정보가 포함된 모델을 이용하여 속성이 유사한 데이터를 클러스터 링할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 학습된 모델의 가중치는, 엣지 디바이스에서 모델을 학습시키기 위해 사용된 학습 데이터 세트로부터 추출한 패턴 정보를 반영할 수 있다. 프로세서는 모델의 가중치에 반영된 패턴 정보를 이용하여 추론값을 생성할 수 있다. 예를 들어, 학습 데이터 세트는 한 사람의 얼굴을 여러 각도에서 찍은 이미 지 데이터를 포함할 수 있다. 이 경우, 모델의 가중치에 반영된 패턴 정보는 특정 사람의 얼굴 생김새에 대한 패턴 정보일 수 있다. 따라서, 프로세서는 특정 사람의 얼굴 패턴 정보를 반영하는 학습된 모델의 가중치 를 이용하여, 새롭게 입력된 사람 얼굴 이미지에 대하여 특정 사람의 얼굴인지 여부를 확인하는 추론값을 획득 할 수 있다. 따라서 특정 엣지 디바이스에서 학습 데이터 세트를 사용하여 학습시킨 모델은 서버 및/또는 다른 엣지 디바이스에서 해당 학습 데이터 세트를 이용하지 않더라도 학습된 모델의 가중치에 학습 결과(패턴 정보) 가 반영된 모델을 수신하여 사용할 수 있다. 따라서 학습 데이터 세트를 송수신 하지 않고, 해당 학습 데이터 세트의 지식을 가진 학습된 모델 공유가 가능할 수 있다. 그러므로 높은 보안성이 요구되는 학습 데이터 세트 (예를 들어, 의료 영상 데이터, 국가 기밀 관련 데이터 등)를 송수신하지 않으면서, 보안성이 요구되는 학습 데 이터 세트의 지식이 반영된 학습된 모델을 공유할 수 있어, 인공지능 서비스를 제공하는 과정에서 높은 보안성 이 유지될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 학습에 따른 가중치 변화량은 각 학습 단계(예를 들어, 학습 에폭)마다 변화되는 가중치 변화량을 의미할 수 있다. 예를 들어, 1에폭의 모델 가중치와 2에폭의 모델 가중치의 차이가 학습에 따 른 가중치 변화량일 수 있다. 학습에 따른 가중치 변화량은 복수개의 학습 단계에 따라 변화되는 가중치 변화량 을 의미할 수도 있다. 예를 들어, 학습에 따른 가중치 변화량은 5에폭의 학습 과정을 거친 모델의 가중치와 10 에폭의 학습 과정을 거친 모델의 가중치의 차이일 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 모델의 학습 과정과 관련된 데이터는 모델의 학습 과정과 관련된 데이터를 포함할 수 있다. 모델의 학습 과정과 관련된 데이터는 모델의 하이퍼 파라미터와 관련된 데이터일 수 있다. 모델의 학 습 과정과 관련된 데이터는 학습 에폭, 에폭별 학습률, 학습 소요 시간, 바이어스(bias) 등을 포함할 수 있다. 모델의 학습 과정과 관련된 데이터를 수신함으로써, 프로세서는 모델을 어떤 방법으로 학습시켰는지에 대 한 정보를 획득할 수 있다. 프로세서는 모델의 학습 과정과 관련된 데이터를 이용하여 모델을 재학습 시킬 수도 있다. 또한 프로세서는 모델의 학습 과정과 관련된 데이터를 다른 엣지 디바이스에 전송할 수도 있다. 이를 통해, 다른 사용자는 모델을 학습시키는 과정에서 필요한 정보를 획득할 수 있다. 모델의 학습 과정 과 관련된 데이터 공유를 통해, 모델의 하이퍼 파라미터 튜닝에 소요되는 시간을 단축시킬 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시에 따라, 프로세서는 적어도 하나의 엣지 디바이스로부터 모델의 학습 결과 정보를 수신할 수 있다. 프로세서는 모델의 학습 결과 정보를 수신하면서, 모델의 학습에 사용된 학습 데이터 세트는 수신하 지 않을 수도 있다. 학습 데이터 세트는 국가 안보 분야와 관련된 데이터, 의료 영상 정보 데이터 등 보안이 매 우 중요한 데이터 세트일 수 있다. 이러한 보안이 중요한 데이터 세트는 제한 없이 공유될 경우, 사생활 침해, 국가 기밀 노출과 같은 다양한 문제점들이 발생할 수도 있다. 따라서 본 개시에 따라, 프로세서가 학습 데 이터 세트는 수신하지 않으면서, 학습 결과 정보만 수신하는 것은 데이터 보안 측면에서 매우 중요할 수 있다. 이하에서는 엣지 디바이스로부터 수신한 학습 결과 정보를 기초로 모델을 업데이트하는 동작에 대한 구체적인 설명을 하도록 한다. 본 개시의 일 실시예에 따라, 프로세서는 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기 초로 모델을 업데이트할 수 있다. 학습 결과 정보는 모델을 학습시킨 결과와 관련된 정보를 포함할 수 있다. 프 로세서는 엣지 디바이스로부터 수신한 학습 결과 정보를 기초로 모델을 업데이트함으로써, 다양한 지식을 학습한 모델을 획득할 수 있다. 즉, 서로 다른 엣지 디바이스에서 학습된 모델을 수신하여 업데이트함으로써, 학습 데이터 수집에 시간 및 비용을 투자할 필요 없이 폭넓은 지식을 학습한 모델을 획득할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 적어도 하나의 엣지 디바이스로부터 수신한 학습된 모델의 가중치 중 적어도 일부 에 기초하여 모델을 업데이트할 수 있다. 프로세서는 엣지 디바이스1에 모델A를 전송할 수 있다. 또한 프 로세서는 엣지 디바이스1에서 학습된 모델A'를 수신할 수 있다. 프로세서는 모델A'를 이용하여 모델A 의 가중치 일부를 업데이트할 수 있다. 프로세서는 모델A의 가중치 중 적어도 일부를 모델A'의 가중치로 변경하는 업데이트를 수행할 수도 있다. 프로세서는 모델A를 모델A'로 대체함으로써 모델A를 업데이트할 수 있다. 프로세서는 테스트 데이터 세트를 이용하여 모델A'의 성능을 평가할 수도 있다. 프로세서는 테스트 데이터 세트를 입력하여 획득한 모델A'의 성능이 모델A보다 우수한 경우, 프로세서는 모델A를 모델 A'로 대체하는 업데이트를 수행할 수 있다. 만약 모델A'의 성능이 모델A보다 낮은 경우, 프로세서는 모델A 에 대하여 업데이트를 수행하지 않을 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기 초로 모델을 업데이트할 수 있다. 프로세서는 둘 이상의 엣지 디바이스로부터 수신한 둘 이상의 학습된 모 델의 적어도 일부에 기초하여 모델을 업데이트할 수 있다. 프로세서는 각각의 엣지 디바이스로부터 수신된 각각의 학습된 모델 중 일부의 모델만을 이용하여 서버에 저장된 모델을 업데이트할 수 있다. 프로세서는 각각의 엣지 디바이스로부터 수신된 각각의 학습된 모델에 대하여 중요도를 판단하고, 중요도에 기초하여 학습 된 모델을 서버에 저장된 모델에 반영할지 여부를 결정할 수 있다. 또한 프로세서는 각각의 엣지 디바이스 로부터 수신된 각각의 학습된 모델의 중요도에 따라서, 각각의 모델의 학습 정도를 얼마나 서버에 저장된 모델 에 반영할지 결정할 수 있다. 본 개시의 일 실시예에 따라, 프로세서가 엣지 디바이스1, 엣지 디바이스2, 엣지 디바이스3에 전송한 모델은 모델A로 동일할 수 있다. 또한 엣지 디바이스1에서 학습된 모델은 모델A1, 엣 지 디바이스2에서 학습된 모델은 모델A2, 엣지 디바이스3에서 학습된 모델은 모델A3일 수 있다. 프로세서 는 학습된 모델A1의 가중치, 학습된 모델A2의 가중치, 학습된 모델A3의 가중치를 병합하여 모델A를 모델A4로 업 데이트할 수 있다. 이 경우, 학습된 모델A1의 가중치, 학습된 모델A2의 가중치, 학습된 모델A3의 가중치는 각각 의 가중치에 중요도를 부여하여 모델A의 가중치를 업데이트할 수 있다. 따라서 프로세서는 학습된 모델A1 의 가중치, 학습된 모델A2의 가중치, 학습된 모델A3의 가중치 각각에 대하여 다른 중요도를 부여한 모델 A4를 획득할 수 있다. 프로세서는 테스트 데이터 세트를 이용하여 모델A4의 성능을 테스트할 수 있다. 예를 들 어, 프로세서는 학습된 모델A1의 가중치에 중요도를 높게 부여하고 나머지 학습된 모델A2의 가중치, 학습 된 모델A3의 가중치에는 낮은 중요도를 부여할 수 있다. 이 경우, 모델A4의 성능은 낮을 수 있다. 하지만 프로 세서는 모델A2의 가중치에 중요도를 높게 부여하고 나머지 학습된 모델A1의 가중치, 학습된 모델A3의 가중 치에는 낮은 중요도를 부여할 수 있다. 이 경우, 모델A4의 성능은 높을 수도 있다. 따라서, 프로세서는 최 종적으로 모델A2의 가중치에 중요도를 높게 부여하고 나머지 학습된 모델A1의 가중치, 학습된 모델A3의 가중치 에는 낮은 중요도를 부여하여 모델A를 업데이트할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 다른 일 실시예에 따라, 프로세서는 둘 이상의 엣지 디바이스로부터 수신한 둘 이상의 학습된 모델의 적어도 일부에 기초하여 모델을 업데이트할 수 있다. 본 개시의 일 실시예에 따라, 프로세서가 엣 지 디바이스1, 엣지 디바이스2, 엣지 디바이스3에 전송한 모델은 각각 모델A, 모델B, 모델C로 다를 수도 있다.엣지 디바이스1에서 학습된 모델은 모델A1, 엣지 디바이스2에서 학습된 모델은 모델B2, 엣지 디바이스3에서 학 습된 모델은 모델C3일 수 있다. 프로세서는 엣지 디바이스1에서 학습된 모델은 모델A1, 엣지 디바이스2에 서 학습된 모델은 모델B2, 엣지 디바이스3에서 학습된 모델은 모델C3를 병합한 모델D를 생성할 수 있다. 모델D 는 여러 개의 모델을 이용해 최적의 답(추론값)을 찾아내는 앙상블 모델일 수 있다. 따라서 개와 고양이 분류 문제에서, 프로세서는 모델A1 및 모델B2를 이용하여 획득한 추론값은 \"개\"이고 모델C3를 이용하여 획득한 추론값이 \"고양이\"일 수 있다. 이 경우, 프로세서는 모델D를 이용하여 획득한 추론값은 다수결의 원칙에 의해 \"개\"라고 결정할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 전술한 사항은 예시 일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기 초로 모델을 업데이트할 수 있다. 프로세서는 모델의 버전 정보를 업데이트할 수 있다. 모델의 버전 정보 는 학습된 모델이 언제 업데이트되었는지를 식별하기 위한 정보를 포함할 수 있다. 학습된 모델의 버전 정보는 업데이트된 날짜, 시간, 업데이트 주체, 업데이트된 장소(예를 들어, 서버 또는 엣지 디바이스) 등에 대한 정보 를 포함할 수 있다. 프로세서가 엣지 디바이스로부터 수신한 학습 결과에 기초하여 모델을 업데이트 하는 경우, 모델의 버전 정보도 함께 업데이트할 수 있다. 모델의 버전 정보도 업데이트해야, 서버 및/또는 엣지 디 바이스에 저장된 모델이 공통적으로 최신에 업데이트된 모델인지 파악할 수 있기 때문이다. 즉, 같은 모델A에 대해서도 엣지 디바이스1에서 학습된 모델A1의 가중치와 엣지 디바이스2에서 학습된 모델A2의 가중치는 다를 수 있기 때문이다. 이를 통해, 프로세서는 사용자에게 공통적으로 최신 업데이트된 모델을 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 이하에서는 상태 정보에 기초하여 동기화 작업을 수행하는 동작에 대하여 구체적으로 설명하도록 한다. 본 개시의 일 실시예에 따라, 프로세서는 상태 정보에 기초하여 동기화 작업을 수행할 수 있다. 동기화 작 업은 서버 및 적어도 하나의 엣지 디바이스에 저장된 모델을 가장 최근에 업데이트한 모델로 유지하는 작업을 포함할 수 있다. 예를 들어, 동기화 작업은 서버에 저장된 모델A가 2019-10-10에 업데이트된 모델 A1인 경우, 적어도 하나 이상의 엣지 디바이스에 저장된 모델이 A1일 수 있도록 하는 작업을 포함할 수 있다. 이를 통해, 서버 및 적어도 하나 이상의 엣지 디바이스 모두는 동일한 모델을 사용하거나 다른 엣지 디바이스에 제공할 수 있다. 이를 통해, 서버 및/또는 엣지 디바이스에 문제가 발생한 경우라도, 프로세서는 인공지능 서비스 중 단 없이 모델을 사용자에게 연속적으로 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않 는다. 본 개시의 일 실시예에 따라, 동기화 작업은, 장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기화 작 업, 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하는 제 2 동기화 작 업, 또는 엣지 디바이스로부터 모델을 수신하는 제 3 동기화 작업 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따라, 장애가 발생한 엣지 디바이스는 가장 최근에 업데이트된 모델을 제공하는 서비스를 수행할 수 없는 단말을 포함할 수 있다. 예를 들어, 서버는 모델A에 대하여 2019-10-10에 업데이트된 모델A1을 가지고 있을 수 있다. 이에 반해, 장애가 발생한 엣지 디바이스는 동일 모델A에 대하여 2016-10-10에 업데이트된 모델 A2를 저장하고 있을 수 있다. 즉, 장애가 발생한 엣지 디바이스는 가장 최근에 업데이트된 모델을 저장하 고 있지 않을 수도 있다. 따라서, 장애가 발생한 엣지 디바이스는 가장 최근에 업데이트된 모델인 A1을 사용자 에게 제공하는 서비스를 수행할 수 없을 수 있다. 본 개시의 다른 일 실시예에 따라, 장애가 발생한 엣지 디바 이스는 컴퓨팅 장치의 문제로 인하여 서버 및 다른 엣지 디바이스와의 통신이 불가능한 상태일 수 있다. 또한 장애가 발생한 엣지 디바이스는 컴퓨팅 장치의 문제로 인하여 모델 업데이트를 수행할 수 없는 엣지 디바이스일 수도 있다. 또한 장애가 발생한 엣지 디바이스는 컴퓨팅 장치의 문제로 인하여 메모리에 저장하고 있던 최신 버 전 모델을 유실한 엣지 디바이스일 수도 있다. 따라서 프로세서는 장애가 발생한 엣지 디바이스에 모델을 전송하거나, 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여, 장애가 발생한 엣지 디바이스도 가장 최근에 업데이트된 모델을 제공하는 인공지능 제공 서비스를 수행할 수 있다. 전 술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 상태 정보에 기초하여 동기화 작업을 수행할 수 있다. 상태 정보 는 서버 및/또는 엣지 디바이스의 상태 정보를 포함할 수 있다. 예를 들어, 상태 정보는 서버 및/또는 엣지 디 바이스가 정상적으로 작동되고 있는지 여부에 대한 정보를 포함할 수 있다. 상태 정보는 또한 서버 및/또는 엣 지 디바이스가 저장하고 있는 모델의 상태 정보를 포함할 수 있다. 따라서 모델의 상태 정보는 서버 및/또는 엣지 디바이스가 저장하고 있는 모델이 가장 최근 업데이트된 모델인지 여부에 대한 정보를 포함할 수도 있다. 프 로세서는 모델의 상태 정보에 기초하여 메모리에 저장된 모델이 가장 최근에 업데이트된 모델인지 여부를 판단할 수 있다. 구체적으로 프로세서는 엣지 디바이스의 상태 정보에 기초하여 엣지 디바이스에 저장된 모델이 가장 최근에 업데이트된 모델인지 여부를 판단할 수 있다. 또한 프로세서는 엣지 디바이스의 상태 정보에 기초하여 특정 엣지 디바이스에 저장된 모델이 다른 엣지 디바이스에 저장된 모델과 동일한 모델인지 여 부를 판단할 수도 있다. 본 개시의 일 실시예에 따라, 상태 정보는 모델의 버전 정보, 모델의 학습 데이터 메타 정보, 모델의 저장 위치 정보, 엣지 디바이스의 동작 관련 정보 또는 서버의 동작 관련 정보 중 적어도 하나를 포함할 수 있다. 본 개시 의 일 실시예에 따라, 모델의 버전 정보는 학습된 모델이 언제 업데이트되었는지를 식별하기 위한 정보를 포함 할 수 있다. 학습된 모델의 버전 정보는 업데이트된 날짜, 시간, 업데이트 주체, 업데이트된 장소(예를 들어, 서버 또는 엣지 디바이스)에 대한 정보를 포함할 수 있다. 따라서 모델의 버전 정보는 \"버전명 v2, 업데이트된 날짜: 2019-10-12, 업데이트 주체: 관리자, 업데이트된 장소: 서버\"를 포함할 수 있다. 본 개시의 일 실시예에 따라, 모델의 학습 데이터 메타 정보는 학습 데이터가 가지고 있는 지식 정보를 포함할 수 있다. 예를 들어, 모 델의 학습 데이터 메타 정보는 개와 고양이를 분류하기 위한 학습 데이터 세트라는 정보를 포함할 수 있다. 또 한 모델의 학습 데이터 메타 정보는 모델을 이용하여 달성하고자 하는 목적(예를 들어, 개와 고양이를 분류하는 목적, 얼굴 인식을 수행하기 위한 목적, 문장에 포함된 의도 분석을 수행하기 위한 목적)을 포함할 수 있다. 본 개시의 일 실시예에 따라, 모델의 학습 데이터 메타 정보는 학습 데이터 형태(예를 들어, 이미지 데이터, 음성 데이터, 시계열 데이터, 텍스트 데이터인지 여부)에 대한 정보를 포함할 수도 있다. 본 개시의 일 실시예에 따 라, 모델의 저장 위치 정보는 모델이 어느 컴퓨팅 장치에 위치해 있는지에 대한 정보를 포함할 수 있다. 모델의 저장 위치 정보는 어느 서버 및/또는 어느 엣지 디바이스에 모델이 저장되어 있는지에 대한 정보를 포함할 수 있다. 또한 모델의 저장 위치 정보는 특정 서버 및/또는 특정 엣지 디바이스의 메모리 공간 상에서 위치하는 정 보(예를 들어, 인덱스 주소값, 물리적 공간에서의 주소값)를 포함할 수 있다. 본 개시의 일 실시예에 따라, 엣 지 디바이스의 동작 관련 정보 및/또는 서버의 동작 관련 정보는 엣지 디바이스 및/또는 서버에 장애가 발생하 는지를 검출하기 위하여 필요한 정보일 수 있다. 엣지 디바이스 및/또는 서버의 동작 관련 정보는 예를 들어, CPU 연산량, 메모리 사용량, 통신 상태, 시간당 주고받는 패킷 수 등을 포함할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 이하에서는 동기화 작업을 수행하기 위하여 상태 정보를 송수신하는 과정에 대한 설명을 도 3을 참조하여 구체 적으로 설명하도록 한다. 도 3에서는 서버, 엣지 디바이스(210, 230, 250) 및 각각의 서버 및/또는 엣지 디바이스(210, 230, 250)에 맵핑된 코디네이터 모듈, 학습 결과 정보, 상태 정보가 도시되어 있다. 본 개시의 일 실시예에 따라, 코디네이터 모듈은 서버 또는 엣지 디바이스(210, 230, 250)과 물리적으로 독립된 모듈을 포함할 수 있다. 따라서 코디네이터 모듈은 서버 또는 엣지 디바이스(210, 230, 250)에 장 애가 발생한 경우라도 정상적으로 작동할 수 있다. 코디네이터 모듈은 맵핑된 서버 또는 엣지 디바이스의 상태 정보를 수신하고 다른 서버, 다른 엣지 디바이스, 다른 코디네이터 모듈 등과 같이 물리적으로 독립된 장치에 정보를 전송할 수도 있다. 코디네이터 모듈은 한 개만 존재할 수도 있고, 복수개 존재할 수도 있다. 코디네이터 모듈이 한 개만 존재하는 경우, 해당 코디네이터 모듈은 서버 및/또는 모든 엣지 디바이스와 일대다 맵핑 관계 를 가질 수도 있다. 코디네이터 모듈이 복수개 존재하는 경우, 서버 및/또는 엣지 디바이스 각각에 일대일 맵핑 관계를 가질 수도 있다. 전술한 맵핑 관계는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 다른 일 실 시예에 따라, 코디네이터 모듈은 서버 및/또는 엣지 디바이스에 포함된 모듈일 수도 있다. 전술한 코디네이터 모듈은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 프로세서는 상태 정보를 서버와 맵핑된 코디네이터 모듈로부터 수 신할 수 있다. 해당 상태 정보는 엣지 디바이스의 상태 정보일 수 있다. 프로세서는 엣지 디바 이스(210, 230, 250)의 상태 정보를 엣지 디바이스(210, 230, 250)와 각각 맵핑된 코디네이터 모듈로부터 수신 할 수 있다. 또한 프로세서는 엣지 디바이스(210, 230, 250)의 상태 정보를 서버와 맵핑된 코디네이 터 모듈로부터 수신할 수 있다. 코디네이터 모듈은 실시간으로 서버 및/또는 엣지 디바이스의 상태 정보를 모니 터링을 통해 획득할 수 있다. 본 개시의 일 실시예에 따라, 프로세서는 학습 결과 정보를 엣지 디바 이스 및/또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 수신할 수도 있다. 전술한 사항은 예시일 뿐본 개시는 이에 제한되지 않는다. 이하에서는 엣지 디바이스에서 장애가 발생한 경우 수행되는 동기화 작업에 대하여 도 4를 참조하여 구체적으로 설명된다. 본 개시의 일 실시예에 따라, 프로세서는 장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기 화 작업을 수행할 수 있다. 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 로부터 수신한 상태 정보에 기초하여 장애가 발생한 엣지 디바이스에 모델을 전송하여 동기화를 수행하는 작업을 포함할 수 있다. 프로세서는 장애가 발생한 엣지 디바이스 및/또는 장애가 발생한 엣지 디바 이스와 맵핑된 코디네이터 모듈로부터 비정상 상태 정보를 수신할 수 있다. 이 때, 프로세서는 직접적으로 비정상 상태 정보를 수신할 수도 있고, 서버와 맵핑된 코디네이터 모듈을 통해 간접적(우 회적)으로 비정상 상태 정보를 수신할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는 다. 본 개시의 일 실시예에 따라, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 서버에 저장된 모델의 버전보다 하위 버전인 경우가 존재할 수 있다. 모델의 버전 정보는 학습된 모델이 언제 업데이트되었는지를 식 별하기 위한 정보를 포함할 수 있다. 프로세서는 모델의 버전 정보에 기초하여 모델의 버전을 비교할 수 있다. 예를 들어, 동일한 모델A에 대하여 모델A가 2015-01-01에 업데이트된 경우 모델 버전 정보는 모델A-v1, 업데이트된 날짜: 2015-01-01, 모델A가 2019-01-01에 업데이트된 경우 모델 버전 정보는 모델A-v3, 업데이트된 날짜: 2019-01-01 일 수 있다. 따라서 프로세서는 모델A-v1, 모델A-v3의 버전을 비교하여 모델A-v3가 모델 A-v1와 비교하여 더 상위 버전임을 결정할 수 있다. 엣지 디바이스에 장애가 발생한 경우는 서버로부터 최 신 모델을 전송 받을 수 없는 경우, 엣지 디바이스 자체적으로 모델을 업데이트할 수 없는 경우 등을 포함할 수 있다. 이 경우, 최신 모델을 지속적으로 제공할 수 있는 인공지능 서비스를 위하여 모델을 최신 모델로 업데이 트해야 할 필요성이 존재할 수 있다. 따라서 프로세서는 서버에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 서버에 저장된 모델로 업데이트하도록 야기할 수 있다. 여기서 장 애가 발생한 엣지 디바이스의 네트워크부에 이상이 발생하여 서버와 직접적으로 통신이 불가능한 경우가 발생할 수 있다. 이 경우, 서버는 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈을 통해 장애가 발생한 엣지 디바이스로 모델을 전송할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는 다. 본 개시의 일 실시예에 따라, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위 버전인 경우도 존재할 수 있다. 프로세서는 모델의 버전 정보에 기초하여 각 엣지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 따라서, 프로세서는 다른 엣지 디바이스(230, 250)로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코 디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이 스로 하여금 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기할 수 있다. 여기서 장애가 발생한 엣지 디바이스의 네트워크부에 이상이 발생하여 다른 엣지 디바이스(230, 250)과 직접적으로 통신이 불가 능한 경우가 발생할 수 있다. 이 경우, 서버는 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모 듈을 통해 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바이스로 모델을 전송할 수 있다. 따라서 서버는 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델 로 업데이트하도록 야기할 수 있다. 이를 통해, 서버의 부하량이 급격하게 증가하는 일이 감소하여, 서버가 모 델을 전송하는 속도 및 작업을 처리하는 속도가 급격하게 감소되지 않고 일정하게 유지될 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다. 이하에서는 서버에서 장애가 발생한 경우 수행되는 동기화 작업에 대하여 도 5를 참조하여 구체적으로 설명된다. 본 개시의 일 실시예에 따라, 동기화 작업은 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바 이스에 모델을 전송하도록 야기하는 제 2 동기화 작업을 포함할 수 있다. 제 2 동기화 작업은 장애가 발생 한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스(230, 250)로 하여금장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함할 수 있다. 장애가 발생한 서버는 가장 최근에 학습된 모델을 제공하는 서비스를 수행할 수 없는 서버를 포함할 수 있 다. 예를 들어, 엣지 디바이스(230, 250)은 모델A에 대하여 2019-10-10에 업데이트된 모델A1을 가지고 있을 수 있다. 이에 반해 장애가 발생한 서버는 동일 모델A에 대하여 2016-10-10에 업데이트된 모델A2를 저장하고 있을 수 있다. 즉, 장애가 발생한 서버는 가장 최근에 업데이트된 모델을 저장하고 있지 않을 수 있다. 따 라서, 장애가 발생한 서버는 가장 최근에 학습된 모델인 A1을 다른 엣지 디바이스에 제공하는 서비스를 수 행할 수 없을 수 있다. 본 개시의 다른 일 실시예에 따라, 장애가 발생한 서버는 컴퓨팅 장치의 문제로 인 하여 다른 서버 및 엣지 디바이스와의 통신이 불가능한 상태일 수 있다. 또한 장애가 발생한 서버는 컴퓨 팅 장치의 문제로 인하여 모델 업데이트를 수행할 수 없는 서버일 수도 있다. 또한 장애가 발생한 엣지 디바이 스는 컴퓨팅 장치의 문제로 인하여 메모리에 저장하고 있던 최신 버전 모델을 유실한 엣지 디바이스일 수도 있 다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 2 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함할 수 있다. 이 경우, 서버에 장애가 발생하였으므로, 프로 세서는 직접적으로 모델을 엣지 디바이스에 전송할 수 없을 수도 있다. 또 다른 예로 서버에 장애가 발생 하였으므로, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스(230, 250)에 저장 된 모델의 버전보다 하위 버전인 경우가 존재할 수 있다. 프로세서는 모델의 버전 정보에 기초하여 각 엣 지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 이 경우, 프로세서는 다른 엣지 디바이스(230, 25 0)에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디 바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델로 업데이트하도록 야기할 수 있다. 이를 통해, 서버의 장애가 발생한 상황에서도 인공지능 서비스는 중단 없이 제공될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작 업을 포함할 수 있다. 제 3 동기화 작업을 수행함으로써 장애가 발생한 서버는 최신 버전의 모델로 모델을 업데이트할 수 있다. 나아가 장애가 발생한 서버는 엣지 디바이스에 최신 버전의 모델을 저장할 수 있다. 이를 통해, 장애가 발생한 서버를 빠른 시간 내에 정상화시켜 연속성 있는 인공지능 서비스를 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인 경우, 엣지 디바이스에 저장된 모델을 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈 중 적어도 하나로부터 수신하여 엣지 디바이스 에 저장된 모델로 업데이트하는 작업을 더 포함할 수 있다. 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인 경우가 존재할 수 있다. 프로세서는 모델의 버전 정보에 기초하여 각 엣지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 서버에 장애가 발생하여, 프 로세서는 모델의 업데이트를 수행하지 못할 수도 있다. 따라서 장애가 발생한 서버에 저장된 모델의 버전은 엣지 디바이스에 저장된 모델의 버전보다 낮을 수도 있다. 이 경우, 프로세서는 엣지 디바이스 에 저장된 모델을 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈 중 적어도 하나 로부터 수신할 수 있다. 이 때 프로세서는 장애가 발생한 서버와 맵핑된 코디네이터 모듈을 통 해 엣지 디바이스에 저장된 모델을 수신할 수도 있다. 그 이유는 장애가 발생한 서버가 엣지 디바이 스로부터 직접적으로 모델을 수신할 수 없는 경우도 존재할 수 있기 때문이다. 프로세서는 엣지 디바 이스에 저장된 모델을 수신하여 모델 업데이트를 할 수 있다. 프로세서는 모델 업데이트를 진행한 후, 업데이트된 모델을 장애가 발생한 엣지 디바이스로 전송할 수도 있다. 전술한 사항은 예시일 뿐 본 개 시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 엣지 디바이스는 중량 엣지 디바이스 또는 경량 엣지 디바이스 중 적어도 하나를 포함할 수 있다. 중량 엣지 디바이스는 모델을 학습시킬 수도 있고, 모델을 서버 및/또는 다른 엣지 디바이스에 전송할 수도 있다. 프로세서는 사용자 단말로부터 모델 요청 신호를 수신하여 중량 엣지 디바이스로 하여 금 해당 사용자 단말로 모델을 전송하도록 야기할 수 있다. 경량 엣지 디바이스는 모델을 학습시킬 수는 없으나 모델을 서버 및/또는 다른 엣지 디바이스에 전송할 수 있다. 프로세서는 사용자 단말로부터 모델 요청 신 호를 수신하여 경량 엣지 디바이스로 하여금 해당 사용자 단말로 모델을 전송하도록 야기할 수 있다. 경량 엣지디바이스 및/또는 중량 엣지 디바이스에 각각 맵핑된 코디네이터 모듈이 존재할 수 있다. 본 개시의 일 실시예 에 따라, 경량 엣지 디바이스는 중량 엣지 디바이스와 모델을 송수신할 수 있다. 또한 중량 엣지 디바이스는 서 버와 모델을 송수신할 수 있다. 본 개시의 다른 일 실시예에 따라, 경량 엣지 디바이스는 서버와 직접적으로 모 델을 송수신할 수도 있다. 모델의 송수신은 서버, 중량 엣지 디바이스, 경량 엣지 디바이스 각각에 맵핑된 코디 네이터 모듈을 통하여 이루어질 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 이하에서는 중단 없는 인공지능 서비스를 제공하기 위한 다중화 네트워크에 대한 설명을 도 6을 참조하여 구체 적으로 설명된다. 본 개시의 일 실시예에 따라, 서버는 적어도 하나의 엣지 디바이스와 연결될 수 있다. 적어도 하나의 엣지 디바이스 각각은 적어도 하나의 엣지 디바이스와 연결될 수 있다. 이를 통해, 인공지능 서비스 제공 시스템에서 삼중화 이상의 다중화 네트워크가 구현될 수 있다. 다중화 연결 네트워크에서 서버 및/또는 엣지 디바이스는 정 점으로 표현될 수 있고, 각 정점의 연결 정보는 간선으로 표현될 수 있다. 정점과 정점 사이에 간선이 존재하는 경우, 연결된 정점은 모델 및/또는 모델의 학습 결과 정보를 송수신할 수 있다. 전술한 사항은 예시일 뿐 본 개 시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 모델의 전송은, 적어도 하나의 중량 엣지 디바이스 또는 적어도 하나의 경량 엣지 디바이스 중 적어도 하나를 경유하여 사용자 단말로 전송되는 동작을 포함할 수 있다. 본 개시의 일 실시예에 따라, 서버는 경량 엣지 디바이스로 하여금 장애가 발생한 경량 엣지 디바이스 및/ 또는 장애가 발생한 중량 엣지 디바이스로 모델을 전송하도록 야기할 수 있다. 또한 서버는 중량 엣지 디 바이스로 하여금 장애가 발생한 중량 엣지 디바이스 및/또는 장애가 발생한 경량 엣지 디바이스로 모델을 전송 하도록 야기할 수 있다. 장애가 발생한 서버는 경량 엣지 디바이스 및/또는 중량 엣지 디바이스로부터 모델을 수신할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 서버와 경량 엣지 디바이스 사이에 적어도 하나의 중량 엣지 디바이스가 존재할 수도 있고, 생략될 수도 있다. 도 6에 도시된 바와 같이 서버와 경량 엣지 디바이스2 사이에 중량 엣 지 디바이스1이 존재할 수도 있다. 본 개시의 다른 일 실시예에 따라, 서버와 경량 엣지 디바이스 4 사이에 적어도 하나의 경량 엣지 디바이스가 존재할 수도 있고 생략될 수도 있다. 본 개시의 다른 일 실 시예에 따라, 서버와 경량 엣지 디바이스4 사이에 적어도 하나의 다른 경량 엣지 디바이스 및 적어도 하나의 중량 엣지 디바이스가 존재할 수도 있다. 본 개시의 다른 일 실시예에 따라, 서버와 중량 엣지 디 바이스3 사이에 적어도 하나의 다른 중량 엣지 디바이스2가 존재할 수도 있고 생략될 수도 있다. 또 한 서버와 중량 엣지 디바이스 사이에 적어도 하나의 다른 엣지 디바이스가 존재할 수도 있고 생략될 수도 있다. 서버와 중량 엣지 디바이스 사이에 적어도 하나의 경량 엣지 디바이스 및 적어도 하나의 중량 엣지 디바 이스가 존재할 수도 있다. 이를 통해, 인공지능 서비스 제공 시스템에서 삼중화 이상의 다중화 연결이 구현될 수 있다. 따라서, 프로세서는 서버 및/또는 엣지 디바이스에서 장애가 발생한 경우에도 분산 처리를 통해 중단 없이 모델을 사용자에게 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 서버와 엣지 디바이스 사이에 존재하는 엣지 디바이스의 개수를 홉이라 정의할 수 있다. 이 경우, 0 홉에 존재하는 엣지 디바이스는 경량 엣지 디바이스1, 중량 엣지 디바이스1, 중량 엣지 디바이스2, 중량 엣지 디바이스4, 중량 엣지 디바이스5이 존재할 수 있다. 0 홉에 존재하 는 엣지 디바이스들은 서로 모델을 송수신할 수 있다. 따라서 프로세서는 정상인 0홉 엣지 디바이스로 하 여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기할 수 있다. 1홉 엣지 디바이스는 경량 엣지 디바 이스2, 중량 엣지 디바이스3일 수 있다. 인공지능 서비스를 제공하기 위한 다중화 네트워크에서 홉은 n홉일 수 있다. 이 경우, n은 임의의 양의 정수일 수 있다. 따라서 프로세서()는 n홉인 다중화 네트워크에서 인 공지능 서비스를 제공함으로써 고가용성이 보장될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 1 동기화 작업은, 장애가 발생한 경량 엣지 디바이스와 맵핑된 코디네이터 모 듈로부터 수신한 상태 정보에 기초하여 장애가 발생한 경량 엣지 디바이스에 모델을 전송하여 동기화를 수행하 는 작업을 포함할 수 있다. 서버는 경량 엣지 디바이스 및/또는 중량 엣지 디바이스로 하여금 장애가 발생한 경 량 엣지 디바이스로 모델을 전송하도록 야기할 수 있다. 또한 서버는 직접 장애가 발생한 경량 엣지 디바이스로 모델을 전송할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다.본 개시의 일 실시예에 따라, 제 1 동기화 작업은, 장애가 발생한 중량 엣지 디바이스와 맵핑된 코디네이터 모 듈로부터 수신한 상태 정보에 기초하여 장애가 발생한 중량 엣지 디바이스에 모델을 전송하여 동기화를 수행하 는 작업을 포함할 수 있다. 서버는 경량 엣지 디바이스 및/또는 중량 엣지 디바이스로 하여금 장애가 발생한 중 량 엣지 디바이스로 모델을 전송하도록 야기할 수 있다. 또한 서버는 직접 장애가 발생한 중량 엣지 디바이스로 모델을 전송할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 2 동기화 작업은 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 중량 엣지 디바이스 및/또는 경량 엣지 디바이스로 하여금 장애가 발생한 중량 엣지 디바이스 및/또는 경량 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함할 수 있다. 장애가 발생한 서버는 가장 최근에 학습된 모델을 제공하는 서비스를 수행할 수 없는 서버를 포함할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 중량 엣지 디바이스, 경량 엣지 디바이스, 중량 엣지 디바이스와 맵핑된 코디네이터 모듈 및/또는 경량 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작업을 포함할 수 있다. 제 3 동 기화 작업을 수행함으로써 장애가 발생한 서버는 최신 버전의 모델로 모델을 업데이트할 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시에 따라, 동기화 작업을 통한 인공지능 서비스를 제공함으로써 중단 없는 인공지능 서비스를 사용자에게 제공할 수 있다. 즉, 서버에 장애가 발생한 경우, 인공지능 서비스는 서버가 복구될 때까지 잠시 중단될 수도 있다. 하지만 본 개시에 따라, 다른 엣지 디바이스로부터 모델을 제공받고, 장애가 발생한 서버는 정상인 엣지 디바이스로부터 모델을 제공받아 모델을 업데이트함으로써 중단 없는 인공지능 서비스 실현이 가능할 수 있다. 또한 모델의 학습을 서버 뿐만 아니라 엣지 디바이스에서도 수행하므로 서버의 연산량 및 메모리 사용량이 감소 할 수 있다. 그리고 특정 엣지 디바이스가 다른 엣지 디바이스에 모델을 제공할 수도 있으므로, 서버의 부하량 이 감소할 수 있다. 엣지 디바이스에 다른 엣지 디바이스에 모델을 제공할 수 없는 경우, 서버에 부하량이 증가 하여 인공지능 서비스 제공 속도가 느려지는 문제가 발생할 수도 있기 때문이다. 도 2는 인공지능 서비스를 제공하는 과정에서 제공되는 모델의 네트워크 구조를 간략히 나타낸 예시도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이 러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링크에 의해 상호 연결될 수 있다. 신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경 우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하는 링크 에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들을 포함하여 구성될 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노 드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거 리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어 의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의 될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들이 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 와 동일할 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형 태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하 는 형태의 신경망일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수 가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨벌루셔널 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토 인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠 만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네트워크, 샴 네트워크 등을 포함할 수 있다. 전술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토 인코더를 포함할 수도 있다. 오토 인코더는 입력 데이터와 유사 한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토 인코더는 적어도 하나의 히든 레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어의 노드의 수 는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이어에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 이 경우, 도 2의 예시에서는 차원 감소 레이 어와 차원 복원 레이어가 대칭되는 것으로 도시되어 있으나, 본 개시는 이에 제한되지 않으며, 차원 감소 레이 어와 차원 복원 레이어의 노드는 대칭일 수도 있고 아닐 수도 있다. 오토 인코더는 비선형 차원 감소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 남은 센서들의 수와 대응될 수 있다. 오토 인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습(semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 출력의 오류를 최소 화하기 위한 것이다. 뉴럴 네트워크의 학습에서 반복적으로 학습 데이터를 뉴럴 네트워크에 입력시키고 학습 데 이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 뉴럴 네트워 크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어 있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데 이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학습 데이터가 뉴럴 네트워크에 입력되고, 뉴 럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류 가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전 파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이 트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학 습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습 률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 생략하는 드롭아웃(dropout) 등의 방법이 적용될 수 있다. 본 개시의 일 실시예에 따라 데이터 구조를 저장한 컴퓨터 판독가능 매체가 개시된다. 데이터 구조는 데이터에 효율적인 접근 및 수정을 가능하게 하는 데이터의 조직, 관리, 저장을 의미할 수 있다. 데이터 구조는 특정 문제(예를 들어, 최단 시간으로 데이터 검색, 데이터 저장, 데이터 수정) 해결을 위한 데이 터의 조직을 의미할 수 있다. 데이터 구조는 특정한 데이터 처리 기능을 지원하도록 설계된, 데이터 요소들 간 의 물리적이거나 논리적인 관계로 정의될 수도 있다. 데이터 요소들 간의 논리적인 관계는 사용자가 생각하는 데이터 요소들 간의 연결관계를 포함할 수 있다. 데이터 요소들 간의 물리적인 관계는 컴퓨터 판독가능 저장매 체(예를 들어, 하드 디스크)에 물리적으로 저장되어 있는 데이터 요소들 간의 실제 관계를 포함할 수 있다. 데 이터 구조는 구체적으로 데이터의 집합, 데이터 간의 관계, 데이터에 적용할 수 있는 함수 또는 명령어를 포함 할 수 있다. 효과적으로 설계된 데이터 구조를 통해 컴퓨팅 장치는 컴퓨팅 장치의 자원을 최소한으로 사용하면 서 연산을 수행할 수 있다. 구체적으로 컴퓨팅 장치는 효과적으로 설계된 데이터 구조를 통해 연산, 읽기, 삽입, 삭제, 비교, 교환, 검색의 효율성을 높일 수 있다. 데이터 구조는 데이터 구조의 형태에 따라 선형 데이터 구조와 비선형 데이터 구조로 구분될 수 있다. 선형 데 이터 구조는 하나의 데이터 뒤에 하나의 데이터만이 연결되는 구조일 수 있다. 선형 데이터 구조는 리스트 (List), 스택(Stack), 큐(Queue), 데크(Deque)를 포함할 수 있다. 리스트는 내부적으로 순서가 존재하는 일련의 데이터 집합을 의미할 수 있다. 리스트는 연결 리스트(Linked List)를 포함할 수 있다. 연결 리스트는 각각의 데이터가 포인터를 가지고 한 줄로 연결되어 있는 방식으로 데이터가 연결된 데이터 구조일 수 있다. 연결 리스 트에서 포인터는 다음이나 이전 데이터와의 연결 정보를 포함할 수 있다. 연결 리스트는 형태에 따라 단일 연결 리스트, 이중 연결 리스트, 원형 연결 리스트로 표현될 수 있다. 스택은 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조일 수 있다. 스택은 데이터 구조의 한 쪽 끝에서만 데이터를 처리(예를 들어, 삽입 또는 삭 제)할 수 있는 선형 데이터 구조일 수 있다. 스택에 저장된 데이터는 늦게 들어갈수록 빨리 나오는 데이터 구조 (LIFO-Last in First Out)일 수 있다. 큐는 제한적으로 데이터에 접근할 수 있는 데이터 나열 구조로서, 스택과 달리 늦게 저장된 데이터일수록 늦게 나오는 데이터 구조(FIFO-First in First Out)일 수 있다. 데크는 데이터 구조의 양 쪽 끝에서 데이터를 처리할 수 있는 데이터 구조일 수 있다. 비선형 데이터 구조는 하나의 데이터 뒤에 복수개의 데이터가 연결되는 구조일 수 있다. 비선형 데이터 구조는 그래프(Graph) 데이터 구조를 포함할 수 있다. 그래프 데이터 구조는 정점(Vertex)과 간선(Edge)으로 정의될 수 있으며 간선은 서로 다른 두개의 정점을 연결하는 선을 포함할 수 있다. 그래프 데이터 구조 트리(Tree) 데이터 구조를 포함할 수 있다. 트리 데이터 구조는 트리에 포함된 복수개의 정점 중에서 서로 다른 두개의 정점을 연 결시키는 경로가 하나인 데이터 구조일 수 있다. 즉 그래프 데이터 구조에서 루프(loop)를 형성하지 않는 데이 터 구조일 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. (이하에서는 신경망으로 통일하여 기술한다.) 데이터 구조는 신경망을 포함할 수 있다. 그리고 신경망을 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망을 포함한 데이터 구조는 또한 신경망 에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 학습을 위한 손실 함수를 포함할 수 있다. 신경망을 포함한 데 이터 구조는 상기 개시된 구성들 중 임의의 구성 요소들을 포함할 수 있다. 즉 신경망을 포함한 데이터 구조는 신경망에 입력되는 데이터, 신경망의 가중치, 신경망의 하이퍼 파라미터, 신경망으로부터 획득한 데이터, 신경 망의 각 노드 또는 레이어와 연관된 활성 함수, 신경망의 트레이닝을 위한 손실 함수 등 전부 또는 이들의 임의 의 조합을 포함하여 구성될 수 있다. 전술한 구성들 이외에도, 신경망을 포함한 데이터 구조는 신경망의 특성을 결정하는 임의의 다른 정보를 포함할 수 있다. 또한, 데이터 구조는 신경망의 연산 과정에 사용되거나 발생되는 모든 형태의 데이터를 포함할 수 있으며 전술한 사항에 제한되는 것은 아니다. 컴퓨터 판독가능 매체는 컴퓨터 판독가능 기록 매체 및/또는 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망은 적어도 하나 이상의 노드들을 포함하여 구성된다. 데이터 구조는 신경망에 입력되는 데이터를 포함할 수 있다. 신경망에 입력되는 데이터를 포함하는 데이터 구조 는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망에 입력되는 데이터는 신경망 학습 과정에서 입력되는 학습 데이터 및/또는 학습이 완료된 신경망에 입력되는 입력 데이터를 포함할 수 있다. 신경망에 입력되는 데이터는 전처리(pre-processing)를 거친 데이터 및/또는 전처리 대상이 되는 데이터를 포함할 수 있다. 전처리는 데이터 를 신경망에 입력시키기 위한 데이터 처리 과정을 포함할 수 있다. 따라서 데이터 구조는 전처리 대상이 되는 데이터 및 전처리로 발생되는 데이터를 포함할 수 있다. 전술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한 되지 않는다. 데이터 구조는 신경망에 입력되거나, 신경망에서 출력되는 데이터를 포함할 수 있다. 신경망에 입력되거나, 출 력되는 데이터를 포함하는 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 컴퓨터 판독가능 매체에 저 장된 데이터 구조는 신경망의 추론 과정에서 입력되는 데이터, 또는 신경망의 추론 결과 출력되는 출력 데이터 를 포함할 수 있다. 또한, 데이터 구조는 특정한 데이터 가공 방법에 의하여 가공되는 데이터를 포함할 수 있으 므로, 가공 전 후의 데이터를 포함할 수 있다. 따라서, 데이터 구조는 가공의 대상이 되는 데이터 및 데이터 가 공 방법을 통해 가공된 데이터를 포함할 수 있다. 데이터 구조는 신경망의 가중치를 포함할 수 있다. (본 명세서에서 가중치, 파라미터는 동일한 의미로 사용될 수 있다.) 그리고 신경망의 가중치를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 신경망은 복수개의 가중치를 포함할 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사 용자 또는 알고리즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입 력 노드들에 대응하는 링크에 설정된 파라미터에 기초하여 출력 노드 값을 결정할 수 있다. 전술한 데이터 구조 는 예시일 뿐 본 개시는 이에 제한되지 않는다. 제한이 아닌 예로서, 가중치는 신경망 학습 과정에서 가변되는 가중치 및/또는 신경망 학습이 완료된 가중치를 포함할 수 있다. 신경망 학습 과정에서 가변되는 가중치는 학습 사이클이 시작되는 시점의 가중치 및/또는 학습 사이클 동안 가변되는 가중치를 포함할 수 있다. 신경망 학습이 완료된 가중치는 학습 사이클이 완료된 가중치 를 포함할 수 있다. 따라서 신경망의 가중치를 포함한 데이터 구조는 신경망 학습 과정에서 가변되는 가중치 및 /또는 신경망 학습이 완료된 가중치를 포함한 데이터 구조를 포함할 수 있다. 그러므로 상술한 가중치 및/또는 각 가중치의 조합은 신경망의 가중치를 포함한 데이터 구조에 포함되는 것으로 한다. 전술한 데이터 구조는 예 시일 뿐 본 개시는 이에 제한되지 않는다. 신경망의 가중치를 포함한 데이터 구조는 직렬화(serialization) 과정을 거친 후 컴퓨터 판독가능 저장 매체(예 를 들어, 메모리, 하드 디스크)에 저장될 수 있다. 직렬화는 데이터 구조를 동일하거나 다른 컴퓨팅 장치에 저 장하고 나중에 다시 재구성하여 사용할 수 있는 형태로 변환하는 과정일 수 있다. 컴퓨팅 장치는 데이터 구조를 직렬화하여 네트워크를 통해 데이터를 송수신할 수 있다. 직렬화된 신경망의 가중치를 포함한 데이터 구조는 역 직렬화(deserialization)를 통해 동일한 컴퓨팅 장치 또는 다른 컴퓨팅 장치에서 재구성될 수 있다. 신경망의 가중치를 포함한 데이터 구조는 직렬화에 한정되는 것은 아니다. 나아가 신경망의 가중치를 포함한 데이터 구조 는 컴퓨팅 장치의 자원을 최소한으로 사용하면서 연산의 효율을 높이기 위한 데이터 구조(예를 들어, 비선형 데 이터 구조에서 B-Tree, Trie, m-way search tree, AVL tree, Red-Black Tree)를 포함할 수 있다. 전술한 사항 은 예시일 뿐 본 개시는 이에 제한되지 않는다.데이터 구조는 신경망의 하이퍼 파라미터(Hyper-parameter)를 포함할 수 있다. 그리고 신경망의 하이퍼 파라미 터를 포함한 데이터 구조는 컴퓨터 판독가능 매체에 저장될 수 있다. 하이퍼 파라미터는 사용자에 의해 가변되 는 변수일 수 있다. 하이퍼 파라미터는 예를 들어, 학습률(learning rate), 비용 함수(cost function), 학습 사이클 반복 횟수, 가중치 초기화(Weight initialization)(예를 들어, 가중치 초기화 대상이 되는 가중치 값의 범위 설정), Hidden Unit 개수(예를 들어, 히든 레이어의 개수, 히든 레이어의 노드 수)를 포함할 수 있다. 전 술한 데이터 구조는 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 3은 인공지능 서비스를 제공하기 위한 방법을 설명하기 위한 예시도이다. 도 3에서는 서버, 엣지 디바이스(210, 230, 250) 및 각각의 서버 및/또는 엣지 디바이스(210, 230, 250)에 맵핑된 코디네이터 모듈, 학습 결과 정보, 상태 정보가 도시되어 있다. 본 개시의 일 실시예에 따라, 코디네이터 모듈은 서버 또는 엣지 디바이스(210, 230, 250)과 물리적으로 독립된 모듈을 포함할 수 있다. 따라서 코디네이터 모듈은 서버 또는 엣지 디바이스(210, 230, 250)에 장 애가 발생한 경우라도 정상적으로 작동할 수 있다. 코디네이터 모듈은 맵핑된 서버 또는 엣지 디바이스의 상태 정보를 수신하고 다른 서버, 다른 엣지 디바이스, 다른 코디네이터 모듈 등과 같이 물리적으로 독립된 장치에 정보를 전송할 수도 있다. 코디네이터 모듈은 한 개만 존재할 수도 있고, 복수개 존재할 수도 있다. 코디네이터 모듈이 한 개만 존재하는 경우, 해당 코디네이터 모듈은 서버 및/또는 모든 엣지 디바이스와 일대다 맵핑 관계 를 가질 수도 있다. 코디네이터 모듈이 복수개 존재하는 경우, 서버 및/또는 엣지 디바이스 각각에 일대일 맵핑 관계를 가질 수도 있다. 전술한 맵핑 관계는 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 다른 일 실 시예에 따라, 코디네이터 모듈은 서버 및/또는 엣지 디바이스에 포함된 모듈일 수도 있다. 전술한 코디네이터 모듈은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 서버는 상태 정보를 서버와 맵핑된 코디네이터 모듈로부터 수신할 수 있다. 해당 상태 정보는 엣지 디바이스(210, 230, 250)의 상태 정보일 수 있다. 프로세서는 엣지 디바이스 (210, 230, 250)의 상태 정보를 엣지 디바이스(210, 230, 250)과 각각 맵핑된 코디네이터 모듈로부터 수신할 수 있다. 또한 프로세서는 엣지 디바이스(210, 230, 250)의 상태 정보를 서버와 맵핑된 코디네이터 모듈 로부터 수신할 수 있다. 코디네이터 모듈은 실시간으로 서버 및/또는 엣지 디바이스의 상태 정보를 모니터링을 통해 획득할 수 있다. 본 개시의 일 실시예에 따라, 프로세서는 학습 결과 정보를 엣지 디바이스 및/또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 수신할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 4는 인공지능 서비스를 제공하는 과정에서 엣지 디바이스에 장애가 발생한 경우 수행되는 동기화 작업을 설 명하기 위한 예시도이다. 도 4는 서버, 엣지 디바이스(230, 250), 장애가 발생한 엣지 디바이스 및 각각의 서버, 장애가 발생한 엣지 디바이스 및/또는 엣지 디바이스(230, 250)에 맵핑된 코디네이터 모듈이 도시되어 있다. 본 개시의 일 실시예에 따라, 서버는 장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기화 작업을 수행할 수 있다. 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈로부 터 수신한 상태 정보에 기초하여 장애가 발생한 엣지 디바이스에 모델을 전송하여 동기화를 수행하는 작업 을 포함할 수 있다. 서버는 장애가 발생한 엣지 디바이스 및/또는 장애가 발생한 엣지 디바이스(31 0)와 맵핑된 코디네이터 모듈로부터 비정상 상태 정보를 수신할 수 있다. 이 때, 서버는 직접적으로 비정상 상태 정보를 수신할 수도 있고, 서버와 맵핑된 코디네이터 모듈을 통해 간접적(우회적)으로 비정상 상태 정보를 수신할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 서버에 저장된 모델의 버전보다 하위 버전인 경우가 존재할 수 있다. 모델의 버전 정보는 학습된 모델이 언제 업데이트되었는지를 식 별하기 위한 정보를 포함할 수 있다. 서버는 모델의 버전 정보에 기초하여 모델의 버전을 비교할 수 있다. 예를 들어, 동일한 모델A에 대하여 모델A가 2015-01-01에 업데이트된 경우 모델 버전 정보는 모델A-v1, 업데이 트된 날짜: 2015-01-01, 모델A가 2019-01-01에 업데이트된 경우 모델 버전 정보는 모델A-v3, 업데이트된 날짜: 2019-01-01 일 수 있다. 따라서 서버는 모델A-v1, 모델A-v3의 버전을 비교하여 모델A-v3가 모델A-v1와 비교하여 더 상위 버전임을 결정할 수 있다. 엣지 디바이스에 장애가 발생한 경우는 서버로부터 최신 모델을 전송 받을 수 없는 경우, 엣지 디바이스 자체적으로 모델을 업데이트할 수 없는 경우 등을 포함할 수 있다. 이 경우, 최신 모델을 지속적으로 제공할 수 있는 인공지능 서비스를 위하여 모델을 최신 모델로 업데이트해야 할 필요성이 존재할 수 있다. 따라서 서버는 서버에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣 지 디바이스로 하여금 서버에 저장된 모델로 업데이트하도록 야기할 수 있다. 여기서 장애가 발생한 엣지 디바이스의 네트워크부에 이상이 발생하여 서버와 직접적으로 통신이 불가능한 경우가 발생할 수 있다. 이 경우, 서버는 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈을 통해 장애가 발생한 엣지 디바이 스로 모델을 전송할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위 버전인 경우도 존재할 수 있다. 서버는 모델의 버전 정보에 기초하여 각 엣 지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 따라서, 서버는 다른 엣지 디바이스(230, 250)로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기할 수 있다. 여기서 장애가 발생한 엣지 디바 이스의 네트워크부에 이상이 발생하여 다른 엣지 디바이스(230, 250)과 직접적으로 통신이 불가능한 경우 가 발생할 수 있다. 이 경우, 서버는 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈을 통해 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바이스로 모델을 전송할 수 있다. 따라서 서버는 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델로 업데이트하 도록 야기할 수 있다. 이를 통해, 서버의 부하량이 급격하게 증가하는 일이 감소하여, 서버가 모델을 전송하는 속도 및 작업을 처리하는 속도가 급격하게 감소되지 않고 일정하게 유지될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 5는 인공지능 서비스를 제공하는 과정에서 서버에 장애가 발생한 경우 수행되는 동기화 작업을 설명하기 위 한 예시도이다. 도 5는 장애가 발생한 서버, 엣지 디바이스(230, 250), 장애가 발생한 엣지 디바이스 및 각각의 서버 , 장애가 발생한 엣지 디바이스 및/또는 엣지 디바이스(230, 250)에 맵핑된 코디네이터 모듈이 도시 되어 있다. 본 개시의 일 실시예에 따라, 동기화 작업은 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바 이스에 모델을 전송하도록 야기하는 제 2 동기화 작업을 포함할 수 있다. 제 2 동기화 작업은 장애가 발생 한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함할 수 있다. 장애가 발생한 서버는 가장 최근에 학습된 모델을 제공하는 서비스를 수행할 수 없는 서버를 포함할 수 있 다. 예를 들어, 엣지 디바이스(230, 250)은 모델A에 대하여 2019-10-10에 업데이트된 모델A1을 가지고 있을 수 있다. 이에 반해 장애가 발생한 서버는 동일 모델A에 대하여 2016-10-10에 업데이트된 모델A2를 저장하고 있을 수 있다. 즉, 장애가 발생한 서버는 가장 최근에 업데이트된 모델을 저장하고 있지 않을 수 있다. 따 라서, 장애가 발생한 서버는 가장 최근에 학습된 모델인 A1을 다른 엣지 디바이스에 제공하는 서비스를 수 행할 수 없을 수 있다. 본 개시의 다른 일 실시예에 따라, 장애가 발생한 서버는 컴퓨팅 장치의 문제로 인 하여 다른 서버 및 엣지 디바이스와의 통신이 불가능한 상태일 수 있다. 또한 장애가 발생한 서버는 컴퓨 팅 장치의 문제로 인하여 모델 업데이트를 수행할 수 없는 서버일 수도 있다. 또한 장애가 발생한 엣지 디바이 스는 컴퓨팅 장치의 문제로 인하여 메모리에 저장하고 있던 최신 버전 모델을 유실한 엣지 디바이스일 수도 있 다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 2 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스(230, 250)로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하여 동기화를 수행하는 작업을 포함할 수 있다. 이 경우, 서버에 장애가 발생하였으므로, 서버 는 직접적으로 모델을 엣지 디바이스에 전송할 수 없을 수도 있다. 또 다른 예로 서버에 장애가 발생하였 으므로, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스(230, 250)에 저장된 모 델의 버전보다 하위 버전인 경우가 존재할 수 있다. 서버는 모델의 버전 정보에 기초하여 각 엣지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 이 경우, 서버는 다른 엣지 디바이스(230, 250)에 저장된 모 델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스(230, 250)에 저장된 모델로 업데이트하도록 야기할 수 있다. 이를 통해, 서버의 장애가 발생한 상황에서도 인공지능 서비스는 중단 없이 제공될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작 업을 포함할 수 있다. 제 3 동기화 작업을 수행함으로써 장애가 발생한 서버는 최신 버전의 모델로 모델을 업데이트할 수 있다. 나아가 장애가 발생한 서버는 엣지 디바이스에 최신 버전의 모델을 저장할 수 있다. 이를 통해, 장애가 발생한 서버를 빠른 시간 내에 정상화시켜 연속성 있는 인공지능 서비스를 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인 경우, 엣지 디바이스에 저장된 모델을 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈 중 적어도 하나로부터 수신하여 엣지 디바이스 에 저장된 모델로 업데이트하는 작업을 더 포함할 수 있다. 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버에 저장된 모델의 버전보다 상위 버전인 경우가 존재할 수 있다. 서버는 모델의 버전 정 보에 기초하여 각 엣지 디바이스에 저장된 모델의 버전을 비교할 수 있다. 서버에 장애가 발생하여, 서버 는 모델의 업데이트를 수행하지 못할 수도 있다. 따라서 장애가 발생한 서버에 저장된 모델의 버전은 엣지 디바이스에 저장된 모델의 버전보다 낮을 수도 있다. 이 경우, 장애가 발생한 서버는 엣지 디바이스 에 저장된 모델을 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈 중 적어도 하나 로부터 수신할 수 있다. 이 때, 장애가 발생한 서버는 장애가 발생한 서버와 맵핑된 코디네이터 모듈을 통해 엣지 디바이스에 저장된 모델을 수신할 수도 있다. 그 이유는 장애가 발생한 서버가 엣 지 디바이스로부터 직접적으로 모델을 수신할 수 없는 경우도 존재할 수 있기 때문이다. 장애가 발생한 서 버는 엣지 디바이스에 저장된 모델을 수신하여 모델 업데이트를 할 수 있다. 장애가 발생한 서버 는 모델 업데이트를 진행한 후, 업데이트된 모델을 장애가 발생한 엣지 디바이스로 전송할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 6은 중단 없는 인공지능 서비스를 제공하기 위한 다중화 네트워크를 도시한 예시도이다. 도 6에는 서버와 적어도 하나의 경량 엣지 디바이스 및 적어도 하나의 중량 엣지 디바이스가 도시되어 있 다. 본 개시의 일 실시예에 따라, 서버는 경량 엣지 디바이스로 하여금 장애가 발생한 경량 엣지 디바이스 및/ 또는 장애가 발생한 중량 엣지 디바이스로 모델을 전송하도록 야기할 수 있다. 또한 서버는 중량 엣지 디 바이스로 하여금 장애가 발생한 중량 엣지 디바이스 및/또는 장애가 발생한 경량 엣지 디바이스로 모델을 전송 하도록 야기할 수 있다. 장애가 발생한 서버는 경량 엣지 디바이스 및/또는 중량 엣지 디바이스로부터 모델을 수신할 수도 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에 따라, 서버와 경량 엣지 디바이스 사이에 적어도 하나의 중량 엣지 디바이스가 존재할 수도 있고, 생략될 수도 있다. 도 6에 도시된 바와 같이 서버와 경량 엣지 디바이스2 사이에 중량 엣 지 디바이스1이 존재할 수도 있다. 본 개시의 다른 일 실시예에 따라, 서버와 경량 엣지 디바이스 4 사이에 적어도 하나의 경량 엣지 디바이스가 존재할 수도 있고 생략될 수도 있다. 본 개시의 다른 일 실 시예에 따라, 서버와 경량 엣지 디바이스4 사이에 적어도 하나의 다른 경량 엣지 디바이스 및 적어도 하나의 중량 엣지 디바이스가 존재할 수도 있다. 본 개시의 다른 일 실시예에 따라, 서버와 중량 엣지 디 바이스3 사이에 적어도 하나의 다른 중량 엣지 디바이스2가 존재할 수도 있고 생략될 수도 있다. 또 한 서버와 중량 엣지 디바이스 사이에 적어도 하나의 다른 엣지 디바이스가 존재할 수도 있고 생략될 수도 있다. 서버와 중량 엣지 디바이스 사이에 적어도 하나의 경량 엣지 디바이스 및 적어도 하나의 중량 엣지 디바 이스가 존재할 수도 있다. 이를 통해, 인공지능 서비스 제공 시스템에서 삼중화 이상의 다중화 연결이 구현될 수 있다. 따라서, 프로세서는 서버 및/또는 엣지 디바이스에서 장애가 발생한 경우에도 분산 처리를 통해 중단 없이 모델을 사용자에게 제공할 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다.본 개시의 일 실시예에 따라, 서버와 엣지 디바이스 사이에 존재하는 엣지 디바이스의 개수를 홉이라 정의할 수 있다. 이 경우, 0 홉에 존재하는 엣지 디바이스는 경량 엣지 디바이스1, 중량 엣지 디바이스1, 중량 엣지 디바이스2, 중량 엣지 디바이스4, 중량 엣지 디바이스5이 존재할 수 있다. 0 홉에 존재하 는 엣지 디바이스들은 서로 모델을 송수신할 수 있다. 따라서 프로세서는 정상인 0홉 엣지 디바이스로 하 여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기할 수 있다. 1홉 엣지 디바이스는 경량 엣지 디바 이스2, 중량 엣지 디바이스3일 수 있다. 인공지능 서비스를 제공하기 위한 다중화 네트워크에서 홉은 n홉일 수 있다. 이 경우, n은 임의의 양의 정수일 수 있다. 따라서 프로세서()는 n홉인 다중화 네트워크에서 인 공지능 서비스를 제공함으로써 고가용성이 보장될 수 있다. 전술한 사항은 예시일 뿐 본 개시는 이에 제한되지 않는다. 도 7은 인공지능 서비스를 제공하기 위한 순서도다. 본 개시의 일 실시예에 따라, 서버는 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하 여금 모델을 학습시키도록 할 수 있다. 본 개시의 일 실시예에 따라, 적어도 하나의 엣지 디바이스로부터 상기 모델의 학습 결과 정보를 수신할 수 있다. 본 개시의 일 실시예에 따라, 모델의 학습 결과 정보는, 학습된 모델의 버전 정보, 학습된 모델의 가중치, 학습 에 따른 가중치 변화량 또는 모델의 학습 과정과 관련된 데이터 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따라, 학습된 모델의 가중치는, 엣지 디바이스에서 모델을 학습시키기 위해 사용된 학습 데이터 세트로부터 추출한 패턴 정보를 반영할 수 있다. 본 개시의 일 실시예에 따라, 서버는 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기초로 모델을 업데이트할 수 있다. 본 개시의 일 실시예에 따라, 동기화 작업은, 장애가 발생한 엣지 디바이스에 모델을 전송하는 제 1 동기화 작 업, 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하는 제 2 동기화 작 업, 또는 엣지 디바이스로부터 모델을 수신하는 제 3 동기화 작업 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따라, 상태 정보는, 모델의 버전 정보, 모델의 학습 데이터 메타 정보, 모델의 저장 위 치 정보, 엣지 디바이스의 동작 관련 정보 또는 서버의 동작 관련 정보 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따라, 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈로부 터 수신한 상태 정보에 기초하여 장애가 발생한 엣지 디바이스에 모델을 전송하여 동기화를 수행하는 작업을 포 함할 수 있다. 본 개시의 일 실시예에 따라, 제 1 동기화 작업은, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 서버 에 저장된 모델의 버전보다 하위 버전인 경우, 서버에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코 디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 상기 서버에 저장된 모델로 업데이트하도록 야기하는 작업; 또는 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위 버전인 경우, 다른 엣지 디바이스로 하여금 다른 엣지 디바이스에 저장된 모델을 장애가 발생한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생 한 엣지 디바이스 중 적어도 하나에 전송하여 장애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스에 저 장된 모델로 업데이트하도록 야기하는 작업; 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따라, 제 2 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 다른 엣지 디바이스로 하여금 장애가 발생한 엣지 디바이스에 모델을 전송하도록 야기하 여 동기화를 수행하는 작업을 포함할 수 있다. 본 개시의 일 실시예에 따라, 제 2 동기화 작업은, 장애가 발생한 엣지 디바이스에 저장된 모델의 버전이 다른 엣지 디바이스에 저장된 모델의 버전보다 하위 버전인 경우, 다른 엣지 디바이스에 저장된 모델을 장애가 발생 한 엣지 디바이스와 맵핑된 코디네이터 모듈 또는 장애가 발생한 엣지 디바이스 중 적어도 하나에 전송하여 장 애가 발생한 엣지 디바이스로 하여금 다른 엣지 디바이스에 저장된 모델로 업데이트하도록 야기하는 작업을 포 함할 수 있다.본 개시의 일 실시예에 따라, 제 3 동기화 작업은, 장애가 발생한 서버와 맵핑된 코디네이터 모듈로부터 수신한 상태 정보에 기초하여 엣지 디바이스 또는 엣지 디바이스와 맵핑된 코디네이터 모듈로부터 모델을 수신하는 작 업을 포함할 수 있다. 본 개시의 일 실시예에 따라, 제 3 동기화 작업은, 엣지 디바이스에 저장된 모델의 버전이 장애가 발생한 서버 에 저장된 모델의 버전보다 상위 버전인 경우, 엣지 디바이스에 저장된 모델을 엣지 디바이스 또는 엣지 디바이 스와 맵핑된 코디네이터 모듈 중 적어도 하나로부터 수신하여 엣지 디바이스에 저장된 모델로 업데이트하는 작 업을 더 포함할 수 있다. 본 개시의 일 실시예에 따라, 엣지 디바이스는, 모델의 학습 및 모델의 전송을 수행할 수 있는 중량 엣지 디바 이스; 또는 모델의 전송을 수행할 수 있는 경량 엣지 디바이스; 중 적어도 하나를 포함할 수 있다. 도 8은 인공지능 서비스를 제공하기 위한 모듈을 도시한 블록 구성도이다. 본 개시의 일 실시예에 따라 인공지능 서비스를 제공하기 위한 방법은 다음과 같은 모듈에 의해 구현될 수 있다. 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 모델을 학습시키도록 하기 위한 모듈; 적어도 하나의 엣지 디바이스로부터 모델의 학습 결과 정보를 수신하기 위한 모듈; 및 적어도 하나의 엣지 디바이스로부터 수신한 상기 학습 결과 정보를 기초로 상기 모델을 업데이트하기 위한 모듈을 포함할 수 있다. 인공지능 서비스를 제공하기 위한 대안적인 실시예에서, 적어도 하나의 엣지 디바이스에 모델을 전송하여 엣지 디바이스로 하여금 모델을 학습시키도록 하기 위한 모듈은 엣지 디바이스로부터 수신한 모델 요청 신호에 기초하여 엣지 디바이스에 사용자가 요청한 모델을 전송하는 동작을 포함할 수 있다. 인공지능 서비스를 제공하기 위한 대안적인 실시예에서, 적어도 하나의 엣지 디바이스로부터 수신한 학습 결과 정보를 기초로 모델을 업데이트하기 위한 모듈은 적어도 하나의 엣지 디바이스로부터 수신한 학습된 모델 의 가중치 중 적어도 일부에 기초하여 모델을 업데이트 하기 위한 모듈; 둘 이상의 엣지 디바이스로부터 수신한 둘 이상의 학습된 모델의 적어도 일부에 기초하여 상기 모델을 업데이트 하기 위한 모듈; 또는 모델의 버전 정 보를 업데이트하기 위한 모듈; 중 적어도 하나를 포함할 수 있다. 인공지능 서비스를 제공하기 위한 대안적인 실시예에서, 상태 정보에 기초하여 동기화 작업을 수행하기 위한 모 듈을 더 포함할 수 있다. 동기화 작업은, 서버 또는 적어도 하나의 엣지 디바이스가 동일한 모델을 사용자에게 제공하는 서비스를 수행하기 위하여 모델을 업데이트 하는 작업을 포함할 수 있다. 인공지능 서비스를 제공하기 위한 대안적인 실시예에서, 모델을 전송하기 위한 모듈은 적어도 하나의 중량 엣지 디바이스 또는 적어도 하나의 경량 엣지 디바이스 중 적어도 하나를 경유하여 사용자 단말로 전송하기 위한 모 듈을 포함할 수 있다. 본 개시의 일 실시예에 따르면 인공지능 서비스를 제공하기 위한 모듈은, 컴퓨팅 장치를 구현하기 위한 수단, 회로 또는 로직에 의하여 구현될 수도 있다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈들, 회로들, 수단들, 로직들 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상 호교환성을 명백하게 예시하기 위해, 다양한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회 로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들 에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있으나, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 도 9는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2019-0168049", "section": "도면", "subsection": "도면설명", "item": 1, "content": "상기 언급된 본 개시내용의 피처들이 상세하게, 보다 구체화된 설명으로, 이하의 실시예들을 참조하여 이해될 수 있도록, 실시예들 중 일부는 첨부되는 도면에서 도시된다. 또한, 도면과의 유사한 참조번호는 여러 측면에 걸쳐서 동일하거나 유사한 기능을 지칭하는 것으로 의도된다. 그러나, 첨부된 도면들은 단지 본 개시내용의 특 정한 전형적인 실시예들만을 도시하는 것일 뿐, 본 발명의 범위를 한정하는 것으로 고려되지는 않으며, 동일한 효과를 갖는 다른 실시예들이 충분히 인식될 수 있다는 점을 유의하도록 한다. 도 1은 본 개시의 일 실시예에 따른 인공지능 서비스를 제공하기 위한 서버의 블록 구성도이다.도 2는 인공지능 서비스를 제공하는 과정에서 제공되는 모델의 네트워크 구조를 간략히 나타낸 예시도이다. 도 3은 인공지능 서비스를 제공하기 위한 방법을 설명하기 위한 예시도이다. 도 4는 인공지능 서비스를 제공하는 과정에서 엣지 디바이스에 장애가 발생한 경우 수행되는 동기화 작업을 설 명하기 위한 예시도이다. 도 5는 인공지능 서비스를 제공하는 과정에서 서버에 장애가 발생한 경우 수행되는 동기화 작업을 설명하기 위 한 예시도이다. 도 6은 중단 없는 인공지능 서비스를 제공하기 위한 다중화 네트워크를 도시한 예시도이다. 도 7은 인공지능 서비스를 제공하기 위한 순서도다. 도 8은 인공지능 서비스를 제공하기 위한 모듈을 도시한 블록 구성도이다. 도 9는 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도이다."}
