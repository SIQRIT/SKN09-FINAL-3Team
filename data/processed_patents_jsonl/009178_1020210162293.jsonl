{"patent_id": "10-2021-0162293", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0075777", "출원번호": "10-2021-0162293", "발명의 명칭": "애플리케이션 보안을 위한 방법, 및 그 방법을 수행하는 전자 장치", "출원인": "삼성전자주식회사", "발명자": "장민"}}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,컴퓨터로 실행 가능한 명령어들(computer-executable instructions)이 저장된 메모리; 및상기 메모리에 액세스(access)하여 상기 명령어들을 실행하는 프로세서를 포함하고, 상기 프로세서에 의해 상기 명령어들이 실행되면, 상기 프로세서는,상기 전자 장치에 애플리케이션을 설치할 때에 상기 애플리케이션의 출처에 기초하여 상기 애플리케이션의 출처타입을 기록하고,상기 애플리케이션의 출처 타입에 기초하여 상기 애플리케이션이 신뢰하지 않는(untrusted) 애플리케이션에 해당하는지 여부를 결정하고,상기 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 신뢰하지 않는 애플리케이션에 대해설정된 하나 이상의 보안 기능을 수행하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 애플리케이션의 패키지 설정 파일에 나타난 상기 애플리케이션의 출처 정보에 기초하여 상기 애플리케이션의 출처 타입을 결정하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는,상기 애플리케이션의 출처 정보에 기초하여 상기 애플리케이션의 출처 타입을 신뢰하는(trusted) 애플리케이션,신뢰하지 않는(untrusted) 애플리케이션 및 기본 애플리케이션(default application) 중 어느 하나로 분류하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는,상기 애플리케이션이 신뢰하는 애플리케이션들에 대한 리스트인 허가 리스트에 포함되는 경우, 상기 애플리케이션의 출처 타입과 상관 없이 상기 애플리케이션을 신뢰하는 애플리케이션으로 결정하는,공개특허 10-2023-0075777-3-전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는,상기 애플리케이션이 기본 애플리케이션에 해당하는 경우, 상기 애플리케이션의 출처 타입과 상관 없이 상기 애플리케이션을 신뢰하는 애플리케이션으로 취급하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 프로세서는,상기 애플리케이션의 출처 타입이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 애플리케이션이 상기 신뢰하지 않는 애플리케이션임을 나타내는 심볼을 화면에 출력하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 프로세서는,상기 애플리케이션의 아이콘이 존재하는 경우에는 상기 심볼을 상기 애플리케이션의 아이콘에 중첩하여 출력하거나 또는 상기 아이콘의 출력 없이 상기 심볼만을 출력하고,상기 애플리케이션의 아이콘이 존재하지 않는 경우에는 상기 심볼만을 출력하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 프로세서는,상기 보안 기능으로서, 상기 신뢰하지 않는 애플리케이션의 보안 위험을 사용자에게 제공하기 위한 알림 창을출력하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는,상기 보안 기능으로서, 상기 신뢰하지 않는 애플리케이션의 실행 요청을 수신할 때마다 사용자로부터 상기 신뢰하지 않는 애플리케이션의 권한 승인 여부를 선택 받기 위한 선택 창을 출력하는,공개특허 10-2023-0075777-4-전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 프로세서는,상기 보안 기능으로서, 상기 신뢰하지 않는 애플리케이션의 권한이 사용자 선택에 의해 승인된 이후에 설정된시간이 경과한 경우 상기 신뢰하지 않는 애플리케이션의 권한을 제거하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 프로세서는,상기 보안 기능으로서, 설정된 시간 주기로 상기 전자 장치에 설치된 하나 이상의 신뢰하지 않는 애플리케이션을 식별하고, 상기 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 리스트와 상기 식별된 하나 이상의 신뢰하지 않는 애플리케이션에 대한 보안 위험을 알리기 위한 알림 창을 사용자에게 제공하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 프로세서는,상기 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 제거 여부를 선택할 수 있는 인터페이스 화면을 출력하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항에 있어서,상기 프로세서는,상기 애플리케이션의 출처 타입이 표시된 애플리케이션 정보를 사용자에게 제공하는,전자 장치."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "애플리케이션 보안을 위한 방법에 있어서,애플리케이션의 설치 요청을 수신하는 동작;상기 설치 요청의 수신에 응답하여 상기 애플리케이션의 출처에 기초하여 상기 애플리케이션의 출처 타입을 기록하는 동작;전자 장치에 상기 애플리케이션을 설치하는 동작;공개특허 10-2023-0075777-5-상기 애플리케이션의 출처 타입에 기초하여 상기 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는지 여부를 결정하는 동작; 및상기 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 신뢰하지 않는 애플리케이션에 대해설정된 하나 이상의 보안 기능을 수행하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 애플리케이션의 출처 타입을 기록하는 동작은,상기 애플리케이션의 패키지 설정 파일에 나타난 상기 애플리케이션의 출처 정보에 기초하여, 상기 애플리케이션의 출처 타입을 상기 애플리케이션의 출처 타입을 신뢰하는 애플리케이션, 신뢰하지 않는 애플리케이션 및 기본 애플리케이션 중 어느 하나로 분류하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 애플리케이션을 설치하는 동작은,상기 애플리케이션의 출처 타입이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 애플리케이션이 상기 신뢰하지 않는 애플리케이션임을 나타내는 심볼을 화면에 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제14항에 있어서,상기 하나 이상의 보안 기능을 수행하는 동작은,상기 보안 기능으로서, 상기 신뢰하지 않는 애플리케이션의 실행 요청을 수신할 때마다 사용자로부터 상기 신뢰하지 않는 애플리케이션의 권한 승인 여부를 선택 받기 위한 선택 창을 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제14항에 있어서,상기 하나 이상의 보안 기능을 수행하는 동작은,상기 신뢰하지 않는 애플리케이션의 권한이 사용자 선택에 의해 승인된 이후에 설정된 시간이 경과한 경우 상기신뢰하지 않는 애플리케이션의 권한을 제거하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제14항에 있어서,공개특허 10-2023-0075777-6-상기 하나 이상의 보안 기능을 수행하는 동작은,설정된 시간 주기로 상기 전자 장치에 설치된 하나 이상의 신뢰하지 않는 애플리케이션을 식별하는 동작; 및상기 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 리스트와 상기 식별된 하나 이상의 신뢰하지 않는 애플리케이션에 대한 보안 위험을 알리기 위한 알림 창을 사용자에게 제공하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0162293", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제14항 내지 제19항 중에서 어느 하나의 항의 방법을 실행시키기 위한 프로그램이 기록된 컴퓨터 판독 가능한저장 매체."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "애플리케이션 보안을 위한 방법, 및 그 방법을 수행하는 전자 장치가 개시된다. 전자 장치는 컴퓨터로 실행 가 능한 명령어들이 저장된 메모리, 및 메모리에 액세스하여 상기 명령어들을 실행하는 프로세서를 포함하고, 프로 세서에 의해 명령어들이 실행되면, 프로세서는 전자 장치에 애플리케이션을 설치할 때에 애플리케이션의 출처에 기초하여 상기 애플리케이션의 출처 타입을 기록하고, 애플리케이션의 출처 타입에 기초하여 애플리케이션이 신 뢰하지 않는 애플리케이션에 해당하는지 여부를 결정하고, 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하 는 경우 신뢰하지 않는 애플리케이션에 대해 설정된 하나 이상의 보안 기능을 수행한다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 실시예들은 애플리케이션 보안 기술에 관한 것이다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "애플리케이션 운용 시스템에는 안드로이드(android) 시스템과 iOS 시스템 등이 있다. 안드로이드 시스템은 사 이드 로딩(side loading)을 허용한다는 점에서 iOS 시스템과 차이가 있다. 사이드 로딩은 공식 애플리케이션 스토어를 통한 애플리케이션 설치 뿐만 아니라, 다양한 경로에서의 애플리케이션 설치가 가능한 것을 의미할 수 있다. 안드로이드 시스템에서는 이러한 사이드 로딩을 통해, 공식 애플리케이션 스토어로부터 배포되는 애플리 케이션 뿐만 아니라 다양한 출처의 애플리케이션을 설치하여 실행할 수 있다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "개시된 실시예들은 다양한 출처의 애플리케이션들 중에서 신뢰하지 않는 출처로부터 설치된 애플리케이션을 구 분하고, 신뢰하지 않는 출처로부터 설치된 애플리케이션에 대한 보안 기능을 수행하여 애플리케이션이 실행되는 전자 장치의 보안 환경을 개선하기 위한 것이다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는, 컴퓨터로 실행 가능한 명령어들이 저장된 메모리; 및 상기 메모리에 액세스하여 상기 명령어들을 실행하는 프로세서를 포함하고, 상기 프로세서에 의해 상기 명령어들이 실행되면, 상기 프로세 서는, 상기 전자 장치에 애플리케이션을 설치할 때에 상기 애플리케이션의 출처에 기초하여 상기 애플리케이션 의 출처 타입을 기록하고, 상기 애플리케이션의 출처 타입에 기초하여 상기 애플리케이션이 신뢰하지 않는 애플 리케이션에 해당하는지 여부를 결정하고, 상기 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 신뢰하지 않는 애플리케이션에 대해 설정된 하나 이상의 보안 기능을 수행할 수 있다. 일 실시예에 따른 애플리케이션 보안을 위한 방법은, 애플리케이션의 설치 요청을 수신하는 동작; 상기 설치 요 청의 수신에 응답하여 상기 애플리케이션의 출처에 기초하여 상기 애플리케이션의 출처 타입을 기록하는 동작; 전자 장치에 상기 애플리케이션을 설치하는 동작; 상기 애플리케이션의 출처 타입에 기초하여 상기 애플리케이 션이 신뢰하지 않는 애플리케이션에 해당하는지 여부를 결정하는 동작; 및 상기 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 상기 신뢰하지 않는 애플리케이션에 대해 설정된 하나 이상의 보안 기능을 수행 하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "실시예들에 따르면, 안드로이드 시스템에서 사이드 로딩에 따른 보안 취약점을 개선하고, 스마트폰과 같은 전자 장치를 악성 코드로부터 안전하게 사용할 수 있는 환경을 제공할 수 있다.또한, 실시예들에 따르면, 사용자는 신뢰하지 않는 출처로부터 설치된 애플리케이션들의 리스트와 위험성을 효 과적으로 인식하고, 필요시 해당 애플리케이션들을 간편하게 삭제할 수 있다. 또한, 실시예들에 따르면, 악의적인 애플리케이션에 의한 개인 정보의 유출 가능성 및 악성 코드의 위험을 줄일 수 있다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은, 다양한 실시예들에 따른, 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전 자 장치는 제1 네트워크(예: 블루투스 통신, 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치(10 4)와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디 스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연 결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소 들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레 이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 애플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다.보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 애플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르 면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다 른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보 조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버 )를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는 컴퓨터로 실행 가능한 명령어 들(computer-executable instructions)을 저장할 수 있다. 프로세서는 메모리에 액세스(access)하 여 해당 명령어들을 실행할 수 있다. 메모리는, 휘발성 메모리 또는 비휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 애플리케이션을 포함할 수 있다. 애플리케이션은 전자 장치에 설치되어 실행되는 응용 프 로그램을 의미하며, 응용 프로그램의 종류에는 제한이 없다. 애플리케이션은 줄여서 '앱(app)'이라고도 지칭될 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커 와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 위치 센서, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다.인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 애플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA와 같은 근거리 통신 네트워크) 또는 제2 네트워크 (예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또 는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩 들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전 자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운 링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테 나들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다 른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치(10 1)와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104 또는 108) 중 하나 이상의 외부의 전자 장치에서 실행될 수 있 다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또 는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일 부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장 치 또는 서버108)는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관 련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 일 실시예에서, 전자 장치는 안드로이드 시스템에서 운용될 수 있다. 안드로이드 시스템에서는 다양한 출 처에서의 애플리케이션의 설치가 가능한 사이드 로딩이 허용될 수 있다. 전자 장치가 안드로이드 시 스템으로 운용되는 경우, 이러한 사이드 로딩의 허용에 따라 전자 장치의 보안을 위협하는 악의적인 애플 리케이션(예: 개인 정보를 유출 또는 수집하는 애플리케이션 또는 전자 장치의 사용자가 의도하지 않는 조 작을 가능하게 하는 애플리케이션)이 전자 장치에 설치 및 실행될 우려가 있다. 사이드 로딩은 애플리케 이션으로부터 공격을 당할 수 있다는 자세한 내용을 사용자에게 알리지 않거나, 신뢰하지 않는 출처로부터 설치 된 애플리케이션에 대해 주요 권한을 허용하는 문제점을 발생시킬 수 있다. 이러한 안드로이드 시스템에서의 보안 취약점들을 해결하고, 사용자가 안전하게 전자 장치를 사용할 수 있는 환경을 제공하기 위한 기술적 수단이 필요하다. 본 명세서에서는 전자 장치가 안드로이드 시스템에서 운용되는 것을 예를 들어 설명하 지만, 실시예들은 안드로이드 시스템 뿐만 아니라 사이드 로딩을 허용하는 운용 시스템이라면 어느 것이든 제한 없이 적용될 수 있다. 이하에서 설명되는 실시예들에 따르면, 전자 장치는 애플리케이션을 설치할 때 애플리케이션의 출처 타입을 구분하여 출처 타입에 따른 보안 솔루션을 제공할 수 있다. 전자 장치는 애플리케이션 이 설치되는 시점(time)에 애플리케이션의 출처에 기초하여 출처 타입을 분류하고, 신뢰하지 않는 (untrusted) 애플리케이션으로 분류된 애플리케이션들을 관리할 수 있다. 해당 관리는 신뢰하지 않는 애플리케 이션에 대해 미리 설정된 보안 기능 내지 보안 정책(security policy)을 수행하는 것을 포함할 수 있다. 예를 들어, 전자 장치는 출처 타입에 따라 애플리케이션의 출처를 구분하고, 신뢰하지 않는 애플리케이션(예: 알 수 없는 출처로 설치된 애플리케이션)에 대한 위험을 사용자에게 알릴 수 있다. 또한, 전자 장치(10 1)는 보안에 위협이 되는 애플리케이션들의 리스트와 관련 정보를 사용자에게 제공하고, 해당 애플리케이션들을 간편하게 삭제할 수 있도록 유도할 수 있다. 또한, 전자 장치는 신뢰하지 않는 애플리케이션의 잠재적인 위험을 차단하기 위해 신뢰하지 않은 애플리케이션에 승인된 권한을 제거 또는 회수하는 기능을 제공할 수 있다. 이와 같이, 전자 장치는 신뢰하지 않는 출처로부터 설치된 애플리케이션에 대한 위험을 사용자에게 알리고, 필요시 해당 애플리케이션의 권한을 사전에 제거하는 등의 보안 기능을 통해 사용자에게 안전한 환경을 제공할 수 있다. 일 실시예에 따르면, 메모리에 저장된 명령어들이 프로세서에 의해 실행되면, 프로세서는 전자 장치에 애플리케이션을 설치할 때에 애플리케이션의 출처에 기초하여 애플리케이션의 출처 타입을 기록할 수 있다. 프로세서는 예를 들어, 애플리케이션의 패키지 설정 파일(예: packages.xml)에 나타난 애플리케이션의 출처 정보에 기초하여 애플리케이션의 출처 타입을 결정하고, 그 결정된 출처 타입을 패키지 설정 파일(예: packages.xml)에 기록할 수 있다. 패키지 설정 파일에 는 다양한 애플리케이션들의 출처 타입이 기록될 수 있고, 프로세서는 패키지 설정 파일을 통해 애플리케 이션들의 출처 타입을 식별할 수 있다. 프로세서는 애플리케이션의 출처 정보에 기초하여 애플리케이션의 출처 타입을 신뢰하는 (trusted) 애플리케이션, 신뢰하지 않는(untrusted) 애플리케이션 및 기본 애플리케이션(default application) 중 어느 하나로 분류할 수 있다. 프로세서는 애플리케이션이 신뢰하는 애플리케이션들에 대한 리스 트인 허가 리스트(allowlist)에 포함되는 경우, 애플리케이션의 출처 타입과 상관 없이 애플리케이션(14 6)을 신뢰하는 애플리케이션으로 결정할 수 있다. 프로세서는 애플리케이션이 기본 애플리케이션에 해당하는 경우, 애플리케이션의 출처 타입과 상관 없이 애플리케이션을 신뢰하는 애플리케이션으로 취급할 수 있다. 프로세서는 애플리케이션의 출처 타입이 표시된 애플리케이션 정보를 사용자에게 제공할 수 있다. 일 실시예에서, 프로세서는 애플리케이션의 출처 타입이 신뢰하지 않는 애플리케이션에 해당하는 경 우, 애플리케이션이 해당 신뢰하지 않는 애플리케이션임을 나타내는 심볼(또는 텍스트)을 화면에 출력할 수 있다. 애플리케이션의 아이콘이 존재하는 경우, 프로세서는 해당 심볼을 애플리케이션의 아이콘 에 중첩하여 출력하거나 또는 애플리케이션의 아이콘의 출력 없이 심볼만을 출력할 수도 있다. 애플리케 이션의 아이콘이 존재하지 않는 경우(예: 애플리케이션이 아이콘이 없는 상태로 설치되는 경우), 프로세서(12 0)는 심볼만을 출력할 수 있다. 애플리케이션에 대하여 별도의 아이콘이 존재하지 않을 수 있는데, 이 경 우 프로세서는 해당 애플리케이션이 신뢰하지 않는 애플리케이션임을 나타내기 위한 심볼을 해당 애 플리케이션의 아이콘처럼 표시하여 화면에 출력할 수 있다. 프로세서는 애플리케이션의 출처 타입에 기초하여 애플리케이션이 신뢰하지 않는 애플리케이션 에 해당하는지 여부를 결정할 수 있다. 프로세서는 애플리케이션의 출처 타입에 기초하여 애플리케 이션을 분류할 수 있다. 프로세서는 애플리케이션들에 대한 분류 작업만 수행하거나 또는 분류 결과 에 기초하여 애플리케이션들에 대한 보안 기능을 수행할 수도 있다. 실행 대상인 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 프로세서는 신뢰하지 않는 애 플리케이션에 대해 설정된 하나 이상의 보안 기능을 수행할 수 있다. 예를 들어, 프로세서는 보안 기능으 로서 다음의 동작들 중 하나 이상을 수행할 수 있다. 프로세서는 신뢰하지 않는 애플리케이션의 보안 위험을 사용자에게 제공하기 위한 알림 창을 출력할 수 있 다. 또한, 프로세서는 보안 기능으로서 해당 신뢰하지 않는 애플리케이션의 실행 요청을 수신할 때마다 사용자로부터 신뢰하지 않는 애플리케이션의 권한 승인 여부를 선택 받기 위한 선택 창을 출력할 수 있다. 프 로세서는 신뢰하지 않는 애플리케이션의 권한이 사용자 선택에 의해 승인된 이후에 설정된 시간이 경과한 경우 해당 신뢰하지 않는 애플리케이션의 권한을 제거할 수 있다. 또한, 프로세서는 설정된 시간 주기로 전자 장치에 설치된 하나 이상의 신뢰하지 않는 애플리케이션을 식별하고, 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 리스트와 식별된 하나 이상의 신뢰하지 않는 애플리케이션에 대한 보안 위험을 알리기 위 한 알림 창을 사용자에게 제공할 수 있다. 이 때, 프로세서는 식별된 하나 이상의 신뢰하지 않는 애플리 케이션의 제거 여부를 선택할 수 있는 인터페이스 화면을 출력할 수 있다. 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 리스트는 특정 메뉴를 통해 화면상으로 사용자에게 제공될 수 있고, 사용자는 특정 메뉴를 선택 하는 것에 의해 신뢰하지 않는 애플리케이션에 대한 리스트를 확인할 수 있고, 해당 리스트에서 제거하고자 하는 애플리케이션을 선택하여 삭제할 수 있다. 도 2는 일 실시예에 따른 애플리케이션 보안을 위한 보안 관리 모듈의 구성을 도시하는 블록도이다. 도 2를 참조하면, 애플리케이션 보안을 위한 보안 관리 모듈은 설치 관리 모듈, 패키지 관리 모듈 및 애플리케이션 관리 모듈을 포함할 수 있다. 보안 관리 모듈은 도 1의 전자 장치에 포 함되어 동작할 수 있으며, 보안 관리 모듈에 포함되는 각 구성 요소들의 기능과 동작은 전자 장치의 프로세서에 의해 수행될 수 있다. 설치 관리 모듈은 전자 장치(예: 도 1의 전자 장치)에 애플리케이션을 설치할 때에 애플리케이션의 출처 타입을 구분하고, 신뢰하지 않는 애플리케이션을 분류해 낼 수 있다. 설치 관리 모듈은 인스톨러 확 인 모듈(installer checker), 출처 타입 기록 모듈 및 심볼 생성 모듈을 포함할 수 있다. 인스톨러 확인 모듈을 애플리케이션의 설치 요청을 수신하는 경우, 패키지 관리 모듈을 통해 애플리 케이션을 설치하고자 하는 인스톨러(installer)를 확인할 수 있다. 실시예에 따라, 인스톨러 확인 모듈을 패키지 관리 모듈이 아닌 다른 모듈을 통해 인스톨러를 확인할 수도 있다. 애플리케이션 설치 파일은 예 를 들어 안드로이드 응용 프로그램 패키지(android application package, APK)의 파일 타입을 가질 수 있다. 인스톨러 확인 모듈은 패키지 관리 모듈에서 관리하는 애플리케이션의 패키지 설정 파일(예: packages.xml)에 기초하여 인스톨러를 확인할 수 있다. 패키지 설정 파일은 애플리케이션 설치 파일의 정보를 담은 파일로서, 설치 파일의 메타 정보를 제공할 수 있다. 애플리케이션 설치 시에 애플리케이션의 설치 상황 에 따라 시스템 패키지 데이터베이스에 해당하는 패키지 설정 파일에 installer 필드 및 installInitiator 필드 가 추가될 수 있다. installer 필드에는 실제로 설치 동작을 실행한 패키지에 대한 정보가 포함되고, installInitiator 필드에는 설치를 요청한 패키지에 대한 정보가 포함될 수 있다. installer 필드 및 installInitiator 필드를 통해 나타나는 정보는 서로 동일하거나 또는 경우에 따라 서로 다를 수도 있다. 신뢰 할 수 있는 애플리케이션의 경우에는 설치 시에 패키지 설정 파일에 installOriginator 필드가 추가되지 않으나, 신뢰할 수 없는 애플리케이션의 경우에는 설치 시에 패키지 설정 파일에 installer 필드 및 installInitiator 필드 뿐만 아니라 installOriginator 필드가 추가될 수 있다. installOriginator 필드에는 실제로 애플리케이션을 설치할 때 사용된 패키지에 대한 정보가 포함될 수 있다. 패키지 설정 파일은 모든 애 플리케이션의 패키지 정보와 각 애플리케이션이 사용하는 권한에 대한 정보를 포함할 수 있다. 안드로이드 운용 시스템에서는 애플리케이션의 출처 타입에 따라 패키지 설정 파일에 표시되는 내용이 달라진다. 예를 들어, 구글 플레이 스토어(google play store)를 통해 애플리케이션이 설치되는 경우에는 packages.xml의 파일에서 installer 필드 및 installInitiator 필드에는 각각 애플리케이션의 설치 동작을 실 행한 패키지와 설치를 요청한 패키지에 대한 정보로서, 'com.android.vending'이 표시될 수 있다. 경우에 따라, installer 필드 및 installInitiator 필드의 기재는 동일할 수 있다. 그리고, 갤럭시 스토어(galaxy store)를 통해 애플리케이션이 설치되는 경우에는 packages.xml의 파일에서 installer 필드 및 installInitiator 필드에 'com.sec.android.app.samsungapps'이 표시될 수 있다. 사이드 로딩을 통해 애플리 케이션이 설치되는 경우에는 packages.xml의 파일에서 installer 필드 및 installInitiator 필드에는 각각 애 플리케이션의 설치 동작을 실행한 패키지와 설치를 요청한 패키지에 대한 정보로서, 'com.google.android.packageinstaller'이 표시되고, installOriginator 필드에는 실제로 애플리케이션을 설치 할 때 사용된 패키지 정보가 표시될 수 있다. 예를 들어, 'myfiles'이라는 프로그램을 통해 애플리케이션이 설 치된 경우, ' installOriginator 필드는 'com.sec.android.app.myfiles'으로 표시될 수 있다. 인스톨러 확인 모듈은 이와 같은 애플리케이션의 출처 타입에 따른 패키지 설정 파일의 속성을 기초로 애 플리케이션의 출처 타입을 구분할 수 있다. 인스톨러 확인 모듈은 애플리케이션의 패키지 설정 파일에서 installer 필드 및 installInitiator 필드의 값이 'com.google.android.packageinstaller'으로 설정되어 있고, installOriginator 필드가 존재하는 경우에는, 해당 애플리케이션을 신뢰하지 않는 애플리케이션으로 구분할 수 있다. 신뢰하지 않는 애플리케이션은 출처가 확인되지 않거나 출처를 신뢰할 수 없는 애플리케이션을 의미할 수 있다. 인스톨러 확인 모듈은 애플리케이션의 패키지 설정 파일에서 installOriginator 필드가 존재하 지 않고, 애플리케이션의 설치 폴더가 제조사나 통신사의 기본 애플리케이션이 설치되는 폴더(예: /system/app 폴더 또는 /system/priv-app 폴더의 하위 폴더)에 존재하는 경우, 해당 애플리케이션을 기본 애플리케이션으로 구분할 수 있다. 기본 애플리케이션은 '프리로드 애플리케이션(preload application)'으로도 지칭될 수 있다.인스톨러 확인 모듈은 애플리케이션의 패키지 설정 파일에서 installOriginator 필드가 존재하지 않고, 애 플리케이션의 설치 폴더가 /system/app 폴더나 /system/priv-app 폴더의 하위 폴더에 존재하지 않는 경우, 해당 애플리케이션을 신뢰하는 애플리케이션으로 구분할 수 있다. 또한, 인스톨러 확인 모듈은 허가 리스트에 포함된 애플리케이션인 경우에는 해당 애플리케이션의 패키지 설정 파일에서 installOriginator 필드가 존재하 더라도 해당 애플리케이션을 신뢰하는 애플리케이션으로 구분할 수 있다. 허가 리스트는 예를 들어 B2B(business to business) 또는 B2G(business to government) 서비스를 위해 사용되는 애플리케이션의 패키지 이름과 서명 값에 대한 리스트 정보를 포함할 수 있고, 애플리케이션의 패키지 이름과 서명 값이 허가 리스트에 포함된 패키지 이름과 서명 값에 대응하는 경우에는 해당 애플리케이션은 패키지 설정 파일의 내용과 무관하게 신뢰하는 애플리케이션으로 구분될 수 있다. 인스톨러 확인 모듈은 애플리케이션의 출처 구분 결과에 기초하여, 애플리케이션의 출처 타입을 신뢰하는 애플리케이션, 신뢰하지 않는 애플리케이션 및 기본 애플리케이션 중 어느 하나로 분류할 수 있다. 신뢰하는 애플리케이션은 공식 애플리케이션 스토어(예: 구글 플레이 스토어, 원스토어(onestore), 또는 갤럭시 스토어 등)에서 다운받은 애플리케이션을 나타내고, 기본 애플리케이션은 전자 장치의 제조사 및 통신사에서 제공 하는 기본 프로그램을 나타낸다. 신뢰하지 않는 애플리케이션은 사이드 로딩을 통해 사용자가 전자 장치 에 직접 설치하는 애플리케이션을 나타낸다. 출처 타입 기록 모듈은 결정된 애플리케이션의 출처 타입을 애플리케이션의 패키지 설정 파일(예: packages.xml)에 기록할 수 있다. 출처 타입 기록 모듈은 installer, installInitiator, installOriginator의 필드들과 함께 추가적으로 애플리케이션의 출처 타입을 나타내는installType 필드를 포함 하는 패키지 설정 파일을 생성할 수 있다. 출처 타입 기록 모듈은 애플리케이션을 설치하는 주체에 따라 installType 필드에 출처 타입 값을 표기할 수 있다. 출처 타입 값은 예를 들어 신뢰하는 애플리케이션에 대응 하는 'Trusted', 기본 애플리케이션에 대응하는 'Preload' 및 신뢰하지 않는 애플리케이션에 대응하는 'Untrusted'(또는 'Unknown Source') 중 어느 하나로 지정될 수 있다. 애플리케이션의 출처 타입이 기록된 패 키지 설정 파일은 출처 타입 기록 모듈로부터 신뢰하지 않는 앱 분석 모듈로 전달될 수 있다. 실시 예에 따라, 출처 타입 기록 모듈은 별도의 데이터베이스에 애플리케이션의 출처 타입을 기록하고 관리할 수도 있다. 심볼 생성 모듈은 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션에 대한 위험을 알리기 위해 심볼 (예: 아이콘, 마크)을 표시할 수 있다. 예를 들어, 심볼 생성 모듈은 신뢰하지 않는 애플리케이션임을 나 타낼 수 있는 아이콘(icon)을 해당 신뢰하지 않는 애플리케이션의 아이콘으로서 표시하거나, 또는 신뢰하지 않 는 애플리케이션임을 나타낼 수 있는 마크(mark)를 해당 신뢰하지 않은 애플리케이션의 아이콘 상에 중첩하여 표시할 수 있다. 사용자는 표시된 심볼을 통해 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션에 대한 위험을 인식할 수 있다. 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션들 중에서 아이콘이 존재하지 않 거나 아이콘을 화면에 출력하지 않도록 설정된 것이 존재할 수 있는데, 이 경우 심볼 생성 모듈은 해당 애 플리케이션에 대응하는 심볼을 화면에 강제로 표시할 수 있다. 해당 심볼을 통해 사용자는 신뢰하지 않는 애플 리케이션이 설치되었음을 용이하게 인지할 수 있게 된다. 애플리케이션 관리 모듈은 애플리케이션이 설치된 후에 설치된 애플리케이션을 관리할 수 있다. 애플리케 이션 관리 모듈은 사용자가 설치된 애플리케이션의 안전한 사용을 위한 보안 기능을 제공할 수 있다. 애 플리케이션 관리 모듈은 애플리케이션들의 출처 타입에 기초하여 신뢰하지 않는 애플리케이션들로 분류된 애플리케이션들을 관리하고, 해당 애플리케이션들에 대한 위험을 사용자에게 알릴 수 있다. 애플리케이션 관리 모듈은 패키지 수집 모듈, 신뢰하지 않는 앱 분석 모듈, 타이머(timer), 알림 관리 모듈 및 앱 권한 관리 모듈을 포함할 수 있다. 패키지 수집 모듈은 패키지 관리 모듈을 통해 전자 장치(예: 도 1의 전자 장치)에 설치된 전체 애플리케이션들의 패키지를 읽을 수 있다. 신뢰하지 않는 앱 분석 모듈은 전체 애플리케이션들의 패키지 중 패키지 설정 정보에 기재된 출처 타입 값에 기초하여 신뢰하지 않는 애플리케이션을 구분할 수 있다. 실시 예에 따라, 신뢰하지 않는 앱 분석 모듈은 신뢰하지 않는 애플리케이션에 대한 정보가 저장된 별도의 데이 터베이스에 기반하여 신뢰하지 않는 애플리케이션이 구분할 수도 있다. 타이머는 설정된 시간에 따라 애 플리케이션 관리 모듈에 포함된 하나 이상의 구성 요소에 호출을 수행할 수 있다. 해당 시간은 사용자 설 정에 따라 변경이 가능하며, 각각의 구성 요소마다 설정된 시간은 동일하거나 또는 서로 다를 수도 있다. 타이 머는 예를 들어 사용자에게 신뢰하지 않는 애플리케이션들에 대한 정보를 제공하는 시점이나 신뢰하지 않 는 애플리케이션들의 권한을 제거하는 시점을 알리기 위한 알림 기능을 제공할 수 있다. 알림 관리 모듈은 사용자에게 제공되는 알림을 생성하고, 관리할 수 있다. 알림 관리 모듈은 예를 들어 신뢰하지 않는 애플리케이션에 대한 위험을 알리기 위한 알림이나 신뢰하지 않는 애플리케이션에 대한 삭제 가능함을 알리기 위한 알림을 생성할 수 있다. 앱 권한 관리 모듈은 신뢰하지 않는 애플리케이션의 권한을 관리할 수 있다. 앱 권한 관리 모듈은 신뢰하지 않는 애플리케이션의 권한을 사용자의 선택 또는 설정된 시간 주기 에 따라 제거(또는 회수)할 수 있다. 위 설명한 보안 관리 모듈은 사용자가 애플리케이션에 내제된 악성 코드에 의해 공격당하지 않도록 사이드 로딩을 통해 설치된 애플리케이션을 쉽게 구분하고, 신뢰하지 않는 출처로부터 설치된 애플리케이션이 특정한 권한의 승인을 요청하는 경우 사용자에게 해당 승인에 의한 위험성을 알리고, 악의적인 애플리케이션에 의한 피 해를 줄일 수 있다. 또한, 보안 관리 모듈은 설치된 전체 애플리케이션들을 신뢰할 수 있는 애플리케이션 과 신뢰하지 못하는 애플리케이션을 간단한 방식을 통해 정확하게 구분하고, 위험성이 있는 애플리케이션의 삭 제를 유도하여 사용자가 보다 안전한 환경에서 전자 장치를 사용할 수 있게 할 수 있다. 도 3a 및 도 3b는 일 실시예에 따른 애플리케이션 보안을 위한 방법에서의 애플리케이션 설치 과정을 설명하기 위한 흐름도들이다. 애플리케이션 설치 과정은 도 1의 전자 장치의 프로세서(또는 도 2의 설치 관리 모듈)에 의해 수행될 수 있다. 도 3a를 참조하면, 동작에서 프로세서는 애플리케이션의 설치 요청을 수신할 수 있다. 동작에 서, 프로세서는 애플리케이션의 설치 요청의 수신에 응답하여 애플리케이션의 출처 타입을 체크할 수 있다. 동작에서, 프로세서는 애플리케이션의 출처에 기초하여 애플리케이션의 출처 타입을 기록할 수 있다. 프로세서는 애플리케이션의 패키지 설정 파일(예: packages.xml)에 나타난 애플리케이션의 출처 정보에 기초하여 애플리케이션의 출처 타입을 결정하고, 그 결정된 출처 타입을 패키지 설정 파일(예: packages.xml)에 기록할 수 있다. 프로세서는 애플리케이션의 설치 시점에 패키지 관리 모듈(예: 도 2의 패키지 관리 모듈)을 통해 애플리케이션의 설치 요청에 대한 출처(예: 'com.google.android.packageinstaller', 'com.android.vending', 'com.sec.android.app.samsungapps' 등)을 확인할 수 있다. 프로세서는 애플리케이션의 출처 정보에 기초하여 애플리케이션의 출처 타입을 신뢰하는 애플리케이션, 신뢰하지 않는 애플리케이션 및 기본 애플리케이션 중 어느 하나로 분류할 수 있다. 신뢰하는 애플리케이션은 출처를 신뢰할 수 있는 애플리케이션이고, 기본 애플리케이션은 애플리케이션 자체를 신뢰할 수 있는 애플리케이션이다. 신뢰하지 않는 애플리케이션은 출처와 애플리케이션 모두를 신뢰할 수 없는 애플리케 이션이다. 프로세서는 애플리케이션이 신뢰하는 애플리케이션들에 대한 리스트인 허가 리스트에 포함되는 경우, 애플리케이션의 출처 타입과 상관 없이 애플리케이션을 신뢰하는 애플리케이션으로 결정할 수 있다. 또 한, 프로세서는 애플리케이션이 기본 애플리케이션에 해당하는 경우, 애플리케이션의 출처 타입과 상관 없 이 애플리케이션을 신뢰하는 애플리케이션으로 취급할 수 있다. 프로세서는 애플리케이션에 대해 분류된 출처 타입을 애플리케이션의 패키지 설정 파일의 installType 필드에 기록하고 저장할 수 있다. 실시예에 따라, 프로세서는 별도의 데이터베이스에 애플리케이션의 출처 타입을 기록할 수도 있다. 동작에서, 전자 장치(예: 도 1의 전자 장치)에 애플리케이션을 설치할 수 있다. 도 3a의 애플리케이션 설치 과정은 도 3b의 실시예와 같이 확장될 수 있다. 도 3b를 참고하면, 동작 내지 동작은 도 3a의 동작 내지 동작에 대응하여, 중복되는 설명은 생략한다. 동작에서, 프로 세서는 애플리케이션의 출처 타입이 신뢰하지 않는 애플리케이션에 해당하는지 여부를 판단할 수 있다. 애플리케이션의 출처 타입이 신뢰하는 애플리케이션이나 기본 애플리케이션인 경우, 프로세서는 동작(36 0)을 수행하는 것 없이 애플리케이션의 설치 과정을 종료할 수 있다. 애플리케이션의 출처 타입이 신뢰하지 않 는 애플리케이션에 해당하는 경우, 동작에서 프로세서는 애플리케이션이 신뢰하지 않는 애플리케이션 임을 나타내는 심볼(예: 아이콘 또는 마크 등)을 화면에 출력할 수 있다. 예를 들어, 프로세서는 해당 심 볼을 애플리케이션의 아이콘에 중첩하여 출력하거나 또는 애플리케이션의 아이콘의 출력 없이 심볼만을 출력할 수 있다. 이와 같이, 프로세서는 신뢰하지 않는 애플리케이션의 위험성을 표시할 수 있는 심볼을 설정 및 표시할 수 있다. 심볼의 출력을 위해, 프로세서는 예를 들어 런처(launcher)를 통해 애플리케이션의 아이 콘을 해당 심볼로 변경하여 출력하거나 또는 설치된 애플리케이션의 실제 아이콘 파일을 해당 심볼 파일로 대체 할 수 있다. 이러한 심볼의 구현 예들이 도 4a 및 도 4b에 도시되어 있다. 도 4a 및 도 4b는 일 실시예에 따른 신뢰하지 않는 애플리케이션임을 나타내는 심볼의 구현 예들을 나타내는 도 면들이다. 도 4a는 애플리케이션의 아이콘에 해당 애플리케이션이 신뢰하지 않는 애플리케이션임을 나타내는 심볼 을 중첩하여 표시하는 구현 예를 나타내고, 도 4b는 애플리케이션의 실제 아이콘을 출력하는 것 없이 심볼 을 애플리케이션의 아이콘으로 대체하여 표시하는 구현 예를 나타낸다. 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션이 아이콘이 생성되지 않는 애플리케이션의 경우에는, 도 4b에서와 같이 심볼이 애플 리케이션의 아이콘으로서 표시될 수 있다. 심볼이나 심볼을 통해, 사용자는 알 수 없는 출처로부터 설치된 애플리케이션임을 용이하게 식별할 수 있고, 해당 애플리케이션을 사용하는데 있어 보안에 보다 주의할 수 있다. 또한, 일부 악의적인 애플리케이 션은 해당 애플리케이션의 존재를 숨기기 위해 아이콘이 없는 상태로 설치되는 경우가 있는데, 이런 경우에는 도 4b에서와 같이 심볼이 해당 애플리케이션의 아이콘으로서 표시됨으로써 사용자는 해당 애플리케이션의 존재를 효과적으로 인지할 수 있다. 도 5 내지 도 7은 일 실시예에 따른 신뢰하지 않는 애플리케이션에 대한 보안 기능들을 설명하기 위한 흐름도들 이다. 애플리케이션에 대한 보안 기능들은 도 1의 전자 장치의 프로세서(또는 도 2의 애플리케이션 관리 모듈)에 의해 수행될 수 있다. 도 5는 일 실시예에 따른 애플리케이션의 권한 승인 요청에 대한 보안 기능을 설명하기 위한 흐름도이다. 도 5 를 참조하면, 동작에서 프로세서는 애플리케이션으로부터 정보 접근에 대한 권한을 승인해 달라는 권 한 승인 요청을 수신할 수 있다. 예를 들어, 권한 승인 요청은 사용자의 개인 정보(위치, 연락처, 메시지 등), 폴더에 대한 검색이나 사용, 또는 카메라나 마이크 등의 장치 사용에 관한 권한을 승인해 달라는 요청일 수 있 다. 이러한 권한 승인 요청은 애플리케이션의 실행 시에 또는 애플리케이션이 실행된 이후에 발생할 수 있다. 애플리케이션으로부터 권한 승인 요청을 수신하는 경우, 동작에서 프로세서는 애플리케이션의 출처 타입에 기초하여 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는지 여부를 결정할 수 있다. 예를 들어, 프로세서는 패키지 설정 파일의 install type 필드의 출처 타입 값이 untrusted로 설정되어 있으면, 애플리케이션이 신뢰하지 않지 않는 애플리케이션인 것으로 결정할 수 있다. 애플리케이션이 신뢰하지 않는 애 플리케이션에 해당하지 않는 경우(애플리케이션의 출처 타입이 신뢰하는 애플리케이션이거나 기본 애플리케이션 인 경우), 동작에서 프로세서는 애플리케이션의 권한 승인을 문의하기 위한 창(예: 대화 상자 또는 팝업)을 출력할 수 있다. 해당 창은 일반적으로 이용되는 안드로이드 런타임 퍼미션(android runtime permission) 요청을 위한 창으로 구현될 수 있다. 애플리케이션이 신뢰하지 않는 애플리케이션에 해당하는 경우, 프로세서는 신뢰하지 않는 애플리케이션에 대해 설정된 하나 이상의 보안 기능을 수행할 수 있다. 보안 기능 중 하나로서, 프로세서는 신뢰하지 않 는 애플리케이션의 보안 위험을 사용자에게 제공하기 위한 알림 창을 출력할 수 있다. 또한, 프로세서는 동작에서 신뢰하지 않는 애플리케이션의 위험에 대해 사용자에게 경고하기 위한 경고 알림과 함께 애플리 케이션의 권한 승인을 문의하기 위한 창을 출력할 수 있다. 경고 알림은 예를 들어 권한 승인을 요청한 애플리 케이션은 출처를 확인할 수 없는 애플리케이션으로서, 개인 정보의 유출이나 악성 코드의 공격을 받을 위험이 있다는 내용을 포함할 수 있다. 동작에서, 프로세서는 사용자 선택을 통해 애플리케이션의 권한 승인을 수신하였는지 여부를 판단할 수 있다. 사용자가 권한 승인을 거절하여 권한 승인을 수신하지 못한 경우, 애플리케이션은 실행이 종료되거나 또는 해당 권한을 얻지 못한 채 실행될 수 있다. 사용자 선택에 의해 애플리케이션의 권한이 승인된 경우, 동 작에서 프로세서는 애플리케이션이 요청한 권한을 승인하고, 권한이 승인된 상태에서 애플리케이션이 동작될 수 있다. 프로세서는 보안 기능 중 하나로서, 신뢰하지 않는 애플리케이션의 실행 요청을 수신할 때마다 사용자로부터 신뢰하지 않는 애플리케이션의 권한 승인 여부를 선택 받기 위한 선택 창을 출력할 수 있 다. 신뢰하지 않는 애플리케이션에 대해서는 한 번 권한이 허용되었다고 하더라도 지속적으로 권한을 허용하는 것이 아니라, 애플리케이션이 실행될 때마다 권한 승인 여부를 사용자에게 문의함으로써 보다 보안성을 높일 수 있다. 또한, 프로세서는 신뢰하지 않는 애플리케이션에 대해서는 개인 정보 접근에 대한 권한이 승인된 상태라 하더라도 사용자의 신원(identity)에 대한 정보나 중요 정보에 대한 접근은 허용하지 않거나 또는 정보 제공을 막을 수도 있다. 예를 들어, 신뢰하지 않는 애플리케이션이 문자 메시지에 대한 접근 권한을 가지고 있는 경우, 프로세서는 해당 애플리케이션이 문자 메시지에 포함된 개인 정보, 인증 번호 등의 정보에는 접 근하지 못하게 막거나, 애플리케이션에 제공되는 데이터에서 해당 정보를 삭제하여 전달할 수 있다. 도 6은 일 실시예에 따른 신뢰하지 않는 애플리케이션에 대해 승인된 권한에 대한 보안 기능을 설명하기 위한 흐름도이다. 도 6을 참조하면, 동작에서 프로세서는 설정된 시간(예: 1시간, 12시간, 1일, 1주일 등)이 경과하였는지 여부를 체크할 수 있다. 해당 시간은 사용자 선택에 의해 변경될 수 있다. 설정된 시간이 경과한 경우, 동작에서 프로세서는 전자 장치(예: 도 1의 전자 장치)에 설치된 애플리케이션들 중에서 신뢰하지 않는 애플리케이션을 식별할 수 있다. 프로세서는 패키지 관리 모듈(예: 도 2의 패키지 관리 모듈)을 통해 전자 장치에 설치된 전체 애플리케이션들에 대한 리스트를 획득할 수 있 고, 패키지 설정 파일(예: packages.xml)을 분석하여 전체 애플리케이션들 중 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션들을 식별할 수 있다. 동작에서, 프로세서는 하나 이상 종류의 권한이 승인된 신뢰하지 않는 애플리케이션이 존재하는지 여 부를 결정할 수 있다. 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션들 중에 하나 이상 종류의 권한이 승인된 상태로 있는 애플리케이션이 존재하는 것으로 결정된 경우, 동작에서 프로세서는 해당 신뢰하 지 않는 애플리케이션의 승인된 권한을 제거(또는 회수)할 수 있다. 이와 같이, 프로세서는 신뢰하지 않 는 애플리케이션의 권한이 사용자 선택에 의해 승인된 이후에 설정된 시간이 경과한 경우에는 신뢰하지 않는 애 플리케이션의 권한을 제거할 수 있다. 이를 통해, 신뢰하지 않는 애플리케이션이 한 번 권한을 승인한 이후에 악의적인 행위를 지속적으로 하는 것을 차단할 수 있다. 도 7은 일 실시예에 따른 신뢰하지 않는 애플리케이션에 대해 주기적으로 경고 알림을 제공하는 보안 기능을 설 명하기 위한 흐름도이다. 도 7을 참조하면, 동작과 동작은 각각 도 6의 동작과 동작에 대 응하며, 중복되는 설명은 생략한다. 동작에서, 프로세서는 신뢰하지 않는 애플리케이션이 존재하는지 여부를 결정할 수 있다. 프로세서 는 설정된 시간 주기로 전자 장치(예: 도 1의 전자 장치)에 설치된 하나 이상의 신뢰하지 않는 애플 리케이션을 식별할 수 있다. 신뢰하지 않는 애플리케이션이 존재하는 경우, 동작에서 프로세서는 경고 알림을 출력할 수 있다. 프로세서는 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 리스트와 해당 하나 이상의 신뢰하지 않는 애플리케이션에 대한 보안 위험을 알리기 위한 알림 창을 사용자에게 제공할 수 있다. 실시예에 따라, 프로세 서는 식별된 하나 이상의 신뢰하지 않는 애플리케이션의 제거 여부를 선택할 수 있는 인터페이스 화면을 출력할 수도 있다. 이와 같이, 프로세서는 기록된 애플리케이션의 출처 타입에 기초하여 전자 장치에 설 치된 신뢰하지 않는 애플리케이션들에 대한 리스트를 사용자에게 주기적으로 제공하고, 해당 신뢰하지 않는 애 플리케이션들을 쉽게 삭제할 수 있는 기능을 제공할 수 있다. 도 8a 및 도 8b는 일 실시예에 따른 애플리케이션의 출처 타입 정보를 제공하는 구현 예들을 나타내는 도면들이 다. 프로세서는 애플리케이션의 출처 타입이 표시된 애플리케이션 정보를 사용자에게 제공할 수 있다. 이러한 애플리케이션의 출처 타입은 8a에서와 같이 각 애플리케이션의 애플리케이션 정보 메뉴에서 애플리케이션의 설 치 상태를 나타내는 항목 주위에 표시될 수도 있고, 도 8b에서와 같이 애플리케이션 출처 정보를 나타내는 항목 주위에 표시될 수도 있다. 애플리케이션의 출처 타입은 예를 들어 신뢰하는 애플리케이션은 (a)에서와 같이 'Trusted'로 표시될 수 있고, 기본 애플리케이션은 (b)에서와 같이 'Preload'로 표시될 수 있으며, 신뢰하지 않 는 애플리케이션은 (c)에서와 같이 'Unknown'으로 표시될 수 있다. 실시예에 따라, 프로세서는 메뉴 항목 을 통해 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션들의 리스트를 사용자에게 제공하거나, 또는 전자 장치의 특정 폴더에 신뢰하지 않는 애플리케이션으로 분류된 애플리케이션들을 자동적으로 배치하여 신뢰하지 않는 애플리케이션들을 그룹핑할 수 있다. 이상 설명된 실시예들에 따르면, 사용자는 다양한 출처의 애플리케이션의 설치가 가능한 안드로이드 운용 시스 템을 이용하면서 보다 안전하게 전자 장치(예: 도 1의 전자 장치)를 사용할 수 있게 된다. 실시예들은 악 성 코드가 포함되어 있을 수 있는, 출처가 확인되지 않은 애플리케이션들을 구분하고, 해당 애플리케이션들에대해 하나 이상의 보안 기능(예: 사용자에게 위험성 경고, 지속적인 감시, 권한 제거, 애플리케이션 삭제 유도 등)을 수행함으로써 사용자가 더욱 안전하게 전자 장치를 사용할 수 있는 환경을 제공할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정 되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이 템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복 수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구 들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분 하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤 (예: 제1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직 접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 애플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 애플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2021-0162293", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 이를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다."}
{"patent_id": "10-2021-0162293", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 전자 장치의 블록도이다. 도 2는 일 실시예에 따른 애플리케이션 보안을 위한 보안 관리 모듈의 구성을 도시하는 블록도이다. 도 3a 및 도 3b는 일 실시예에 따른 애플리케이션 보안을 위한 방법에서의 애플리케이션 설치 과정을 설명하기 위한 흐름도들이다. 도 4a 및 도 4b는 일 실시예에 따른 신뢰하지 않는 애플리케이션임을 나타내는 심볼의 구현 예들을 나타내는 도 면들이다. 도 5 내지 도 7은 일 실시예에 따른 신뢰하지 않는 애플리케이션에 대한 보안 기능들을 설명하기 위한 흐름도들 이다. 도 8a 및 도 8b는 일 실시예에 따른 애플리케이션의 출처 타입 정보를 제공하는 구현 예들을 나타내는 도면들이 다."}
