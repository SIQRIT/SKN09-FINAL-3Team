{"patent_id": "10-2019-0047752", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0124434", "출원번호": "10-2019-0047752", "발명의 명칭": "데이터베이스 중단 관리 방법", "출원인": "주식회사 티맥스티베로", "발명자": "경기룡"}}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하며 상기 동작들은,하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하는 동작;상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하는 동작;상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하는 동작;상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인하는 동작;상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을결정하는 동작;상기 중단된 백 엔드에 대한 복구 정보를 수신하는 동작; 및상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 이벤트의 종류는 데이터를 저장하기 위한 스트리밍 이벤트 또는 백 엔드에 포함된 데이터를 읽기 위한 판독 이벤트를 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 이벤트의 종류가 스트리밍 이벤트인 경우,상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을결정하는 동작은,상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할 것을 결정하는 동작;을 포함하고, 그리고상기 중단된 백 엔드의 복구 이후 상기 물리적인 저장 공간에 저장된 상기 이벤트에 기초한 데이터를 상기 복구된 백 엔드에 전송하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램.공개특허 10-2020-0124434-3-청구항 4 제 1 항에 있어서,상기 이벤트의 종류가 판독 이벤트인 경우,상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을결정하는 동작은,상기 판독 이벤트에 기초한 데이터의 전송 및 변환 중 적어도 하나를 중단할 것을 결정하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 백 엔드의 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 동작은,상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서, 상기 클라이언트로부터 수신한 이벤트에 기초하여 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 데이터 로드 요청 정보를 전송하는 동작;상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정보 중 적어도하나를 버퍼에 저장하는 동작; 및상기 데이터 로드 요청 정보를 전송한 적어도 하나의 백 엔드로부터 상기 데이터 로드 요청 정보에 기초한 처리완료 정보를 수신하는 경우, 상기 버퍼에서 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정보 중 적어도 하나를 삭제하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램으로서, 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하나 이상의 프로세서에서 실행되는 경우 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하며 상기 동작들은,하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함하는프론트 엔드 리스트를 수신하는 동작;상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성하는 동작;상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하는 동작; 및공개특허 10-2020-0124434-4-상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는 동작은,상기 이벤트의 종류가 스트리밍 이벤트일 경우, 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할것을 결정하는 동작;을 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후, 상기 물리적인 저장 공간에 저장한상기 이벤트에 기초한 데이터를 상기 이벤트가 처리될 백 엔드에 전송하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7 항에 있어서,상기 이벤트의 종류가 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 포함된 데이터를 읽기 위한 판독이벤트일 경우, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상기 판독 이벤트에대한 처리를 다시 수행할 것을 결정하는 동작;을 더 포함하는,컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10 항에 있어서,상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상기 판독 이벤트에 대한 처리를 다시수행할 것을 결정하는 동작은,상기 하나 이상의 백 엔드의 최근 저장 시점 이후의 데이터에 기초하여 상기 판독 이벤트에 대한 처리를 수행할것을 결정하는 동작;을 포함하는,공개특허 10-2020-0124434-5-컴퓨터 판독가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "데이터베이스 중단 관리를 위한 방법으로서,하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하는 단계;상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하는 단계;상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하는 단계;상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인하는 단계;상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을결정하는 단계;상기 중단된 백 엔드에 대한 복구 정보를 수신하는 단계; 및상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 단계;를 포함하는,데이터베이스 중단 관리를 위한 방법."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "데이터베이스 중단 관리를 위한 서버로서,하나 이상의 코어를 포함하는 프로세서; 및메모리;를 포함하고,상기 프로세서는,하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하고,상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하고,상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하고,상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인하고,상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을결정하고,상기 중단된 백 엔드에 대한 복구 정보를 수신하고, 그리고상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는,데이터베이스 중단 관리를 위한 서버."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "데이터베이스 중단 관리를 위한 방법으로서,하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함하는프론트 엔드 리스트를 수신하는 단계;상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기공개특허 10-2020-0124434-6-초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성하는 단계;상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하는 단계; 및상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는 단계;를 포함하는,데이터베이스 중단 관리를 위한 방법."}
{"patent_id": "10-2019-0047752", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "데이터베이스 중단 관리를 위한 서버로서,하나 이상의 코어를 포함하는 프로세서; 및메모리;를 포함하고,상기 프로세서는,하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함하는프론트 엔드 리스트를 수신하고,상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성하고,상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하고, 그리고상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는,데이터베이스 중단 관리를 위한 서버."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "컴퓨터 판독가능 저장 매체에 저장되는 컴퓨터 프로그램이 개시된다. 상기 컴퓨터 프로그램은 컴퓨팅 장치의 하 나 이상의 프로세서에서 실행되는 경우 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하며 상기 동작들은, 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하는 동작; 상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하는 동작; 상기 이벤트가 중단된 백 엔드와 대응되 는 이벤트인지 여부를 확인하는 동작; 상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤 트의 종류를 확인하는 동작; 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 동작; 상기 중단된 백 엔드에 대한 복구 정보를 수신하는 동작; 및 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 동작을 포함할 수 있다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 데이터베이스에서의 이벤트 처리 방법에 관한 것으로, 보다 구체적으로 데이터베이스에서의 중단 발 생 시 이벤트 처리 방법에 관한 것이다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "기업의 비즈니스는 폭발적인 데이터의 증가와 다양한 환경 및 플랫폼의 등장으로 빠르게 확장되고 있다. 새로운 비즈니스 환경이 도래함에 따라서, 보다 더 효율적이고 유연한 데이터 서비스와 정보의 처리, 데이터 관리 기능 이 필요하게 되었다. 이러한 변화에 맞춰서 기업 비지니스 구현의 기반이 되는 고성능, 고가용성 및 확장성의 문제를 해결하기 위한 데이터베이스에 대한 연구가 계속되고 있다. 데이터베이스 관리 시스템(DBMS)에서 데이터들은 데이터 저장소에 저장될 수 있다. 데이터베이스가 수많은 양의 데이터를 포함하고 있는 경우, 사용자가 관심있어 하는 데이터를 리트리브하기 위한 쿼리를 처리하는데 있어서 상대적으로 긴 시간이 소요될 수 있다. 데이터베이스가 쿼리에 응답하는데 시간이 많이 소요되는 경우에는 데이 터베이스의 성능에 있어서 악영향을 미칠 수 있다. 클라이언트로부터 발행된 쿼리(또는 이벤트)를 처리하는 방식과 관련하여 복수의 수행 플랜들이 고려될 수 있다. 각각의 수행 플랜들은 상이한 속성들을 갖기 때문에, 해당 쿼리를 처리하기 이전에, 해당 쿼리를 처리하 는데 가장 적합한 알고리즘을 결정하는 것이 필요하다. 이때, 쿼리를 처리하는데 필요한 데이터베이스의 일부 객체에서 중단(failure)이 발생한 경우, 해당 쿼리를 처리하기 위한 수행 플랜이 고려되어야 한다. 데이터베이 스의 적어도 일부의 객체에서 중단이 발생한 경우에 클라이언트로부터 수신한 쿼리를 효율적으로 처리하기 위한 당업계의 니즈가 존재한다. 대한민국 공개 특허 제2019-0032694호는 계층 구조를 이용한 데이터베이스 설계 방법을 개시한다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출 된 것으로, 데이터베이스 중단 관리 방법을 제공하는 것을 목적으 로 한다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨 터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중 단 정보를 수신하는 동작; 상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하는 동작; 상 기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하는 동작; 상기 이벤트가 상기 중단된 백 엔드 와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인하는 동작; 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 동작; 상기 중단된 백 엔드에 대한 복구 정보를 수신하는 동작; 및 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤 트를 처리하는 동작을 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 이벤트의 종류는 데이터를 저장하기 위한 스트리밍 이벤트 또는 백 엔드에 포함된 데이터를 읽기 위한 판독 이벤트를 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 이벤트의 종류가 스트리밍 이벤트인 경우, 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대 응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 동작은, 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할 것을 결정하는 동작;을 포함하고, 그리고 상기 중단된 백 엔드의 복구 이후 상기 물리적인 저장 공간에 저장된 상기 이벤트에 기초한 데이터를 상기 복구된 백 엔드에 전송하는 동작;을 더 포함할 수 있 다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 이벤트의 종류가 판독 이벤트인 경우, 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되 는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 동작은, 상기 판독 이벤트에 기초한 데이터의 전송 및 변환 중 적어도 하나를 중단할 것을 결정하는 동작을 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 백 엔드의 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 동작은, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성하는 동작을 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 클라이언트로부터 수신한 이벤트에 기초하여 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 데이터 로드 요청 정보를 전송하는 동작; 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어 도 하나의 백 엔드에 관한 정보 중 적어도 하나를 버퍼에 저장하는 동작; 및 상기 데이터 로드 요청 정보를 전 송한 적어도 하나의 백 엔드로부터 상기 데이터 로드 요청 정보에 기초한 처리 완료 정보를 수신하는 경우, 상 기 버퍼에서 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정 보 중 적어도 하나를 삭제하는 동작을 더 포함할 수 있다.전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 컴퓨터 판독가능 저장 매체에 저장된 컴퓨 터 프로그램으로서, 상기 컴퓨터 프로그램은 하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함하는 프론트 엔드 리스트를 수신하는 동작; 상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기 초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성하는 동작; 상기 다른 프론트 엔드와 의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하는 동작; 및 상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하 기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는 동작을 포함할 수 있 다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정하는 동작 은, 상기 이벤트의 종류가 스트리밍 이벤트일 경우, 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장 할 것을 결정하는 동작을 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후, 상기 물리적인 저장 공간에 저장 한 상기 이벤트에 기초한 데이터를 상기 이벤트가 처리될 백 엔드에 전송하는 동작을 더 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 이벤트의 종류가 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 포함된 데이터를 읽기 위한 판독 이벤트일 경우, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상기 판독 이벤 트에 대한 처리를 다시 수행할 것을 결정하는 동작을 더 포함할 수 있다. 데이터베이스 중단 관리를 위한 이하의 동작들을 수행하도록 하는 컴퓨터 프로그램 동작들의 대안적인 실시예에 서, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상기 판독 이벤트에 대한 처리를 다시 수행할 것을 결정하는 동작은, 상기 하나 이상의 백 엔드의 최근 저장 시점 이후의 데이터에 기초하여 상 기 판독 이벤트에 대한 처리를 수행할 것을 결정하는 동작을 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 방법으로 서, 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하는 단계; 상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신하는 단계; 상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하는 단계; 상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트 의 종류를 확인하는 단계; 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 단계; 상기 중단된 백 엔드에 대한 복구 정보를 수신하는 단계; 및 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 서버로서, 하나 이상의 코어를 포함하는 프로세서; 및 메모리; 를 포함하고, 상기 프로세서는, 하나 이상의 백 엔드 중 적 어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신하고, 상기 백 엔드 중단 정보의 수신 이후 클라이언트로 부터 이벤트를 수신하고, 상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인하고, 상기 이벤트 가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인하고, 상기 이벤트의 종류에 기초 하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하고, 상기 중단된 백 엔드에 대한 복구 정보를 수신하고, 그리고 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 방법으로 서, 하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함 하는 프론트 엔드 리스트를 수신하는 단계; 상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중 단되는 경우, 상기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결 을 생성하는 단계; 상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드 와의 연결을 생성하는 단계; 및 상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중처리 방법을 결정하는 단계를 포함할 수 있다. 전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 서버로서, 하나 이상의 코어를 포함하는 프로세서; 및 메모리;를 포함하고, 상기 프로세서는, 하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관한 정보를 포함하는 프론트 엔드 리스트를 수신하 고, 상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성하고, 상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하고, 그리고 상기 적어도 하 나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정할 수 있다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시는 데이터베이스의 중단 관리 방법을 제공할 수 있다."}
{"patent_id": "10-2019-0047752", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시 적 논리적 블록들, 구성들, 모 듈들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조 합들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다 양한 예시 적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면 에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반 적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시의 일 실시예에서 서버는 서버의 서버 환경을 수행하기 위한 다른 구성들이 포함될 수도 있다. 서버는 임의의 형태의 장치는 모두 포함할 수 있다. 서버는 디지털 기기로서, 랩탑 컴퓨터, 노트북 컴퓨터, 데스크톱 컴퓨터, 웹 패드, 이동 전화기와 같이 프로세서를 탑재하고 메모리를 구비한 연산 능력을 갖춘 디지털 기기일 수 있다. 서버는 서비스를 처리하는 웹 서버일 수 있다. 전술한 서버의 종류는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 도 1은 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 동작을 수행하는 하이퍼로더(Hyper Loader)의 블록 구성도를 도시한 도면이다. 본 개시의 일 실시예에 따른 데이터베이스 중단 시 이벤트를 관리하기 위한 하이퍼로더는 네트워크부 , 프로세서 및 메모리를 포함할 수 있다. 네트워크부는 본 개시의 일 실시예에 따른 이벤트(event) 또는 데이터 등을 다른 컴퓨팅 장치, 서버 등과 송수신할 수 있다. 네트워크부는 이벤트 또는 데이터 등을 클라이언트(agent), 백 엔드 (backend), 프론트 엔드(frontend) 등과 송수신할 수 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터베이스 중단 관리를 수행하기 위한 프로세서를 포함할 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 데이터베이스 중단 시 이벤트를 관리할 수 있다. 본 개시의 일 실시예에 따라 프로세서는 데이터베이스 중단 시 이벤트 를 관리하기 위한 계산을 수행할 수 있다. 메모리는 본 개시의 일 실시예에 따른 데이터베이스 중단 시 이벤트를 관리하기 위한 컴퓨터 프로그램을 저장할 수 있으며, 저장된 컴퓨터 프로그램은 프로세서에 의하여 판독되어 구동될 수 있다. 본 개시의 실시예들에 따른 메모리는 프로세서의 동작을 위한 프로그램을 저장할 수 있고, 입/출력되 는 데이터들 또는 이벤트들을 임시 또는 영구 저장할 수도 있다. 상기 메모리는 디스플레이 및 음향에 관 한 데이터를 저장할 수 있다. 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 이하에서는 도 2를 참조하여 하이퍼로더를 포함하는 시스템에 관하여 설명한다. 도 2는 본 개시의 일 실시예에 따른 시스템의 예시를 도시한 도면이다. 데이터베이스 관리 시스템은 하이퍼로더, 백 엔드, 프론트 엔드, 클라이언트, 사용자 인터 페이스 및 클라우드 데이터베이스 관리 서버를 포함할 수 있다. 전술한 시스템의 각각의 객체들은 컴 퓨팅 장치로 구성될 수 있다. 전술한 시스템은 클라우드 컴퓨팅에 기반하여 구성될 수도 있다. 하이퍼로더는 클라이언트로부터 수신한 이벤트를 백 엔드 및 프론트 엔드 중 적어도 하나 를 이용하여 처리할 수 있다. 하이퍼로더는 클라이언트로부터 수신한 이벤트를 처리하기 위하여 다른 컴퓨팅 장치와 데이터를 송수 신할 수 있다. 하이퍼로더는 클라이언트로부터 수신한 이벤트를 처리하기 위하여 이벤트를 변환 (transformation)하거나 또는 이벤트와 관련한 정보를 저장할 수 있다. 하이퍼로더는 이벤트가 수신되지 않는 가동되지 않는 시간(idle time)에도 이벤트에 대한 정보를 수신할 것을 대기하고 있을 수 있다. 즉, 이벤 트 매니저는 항상 이벤트의 수신이 가능한 상태로 대기하고 있을 수 있다. 하이퍼로더는 이벤트에 관련한 정보를 저장할 수 있다. 예를 들어 하이퍼로더는 이벤트에 관한 정보, 이벤트를 변환한 데이터 정보, 이벤트를 처리하기 위한 백 엔드에 관한 정보 등을 저장할 수 있다. 예를 들어 하이퍼로더는 이벤트에 기초한 데이터 판독/기록 요청을 백 엔드에 전송하기 전에 하이퍼로더에 상기 이벤트에 기초한 데이터 판독/기록 요청에 관한 정보를 저장하고, 백 엔드로부터 상기 요청된 데이터 판독/기록 요청에 대한 처리 완료 정보를 수신하는 경우, 하이퍼로더는 저장된 데이터 판독/기록 요청에 관한 정보를 삭제할 수 있다. 전술한 하이퍼로더에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 하이퍼로더는 백 엔드에 이벤트에 기초한 데이터 판독/기록 요청을 전송하기 전에 이벤트에 대한 변 환을 수행할 수 있다. 하이퍼로더가 수행하는 이벤트에 대한 변환은, 클라이언트로부터 수신한 이벤 트를 백 엔드 또는 프론트 엔드에서 처리될 수 있는 형식으로 변환하는 것을 의미할 수 있다. 백 엔드는 데이터를 저장하고 있는 저장소일 수 있다. 예를 들어, 이벤트가 데이터를 데이터베이스에 저장 하기 위한 스트리밍 이벤트인 경우, 백 엔드는 하이퍼로더로부터 수신한 데이터 기록 요청에 기초하 여 데이터를 데이터베이스에 저장할 수 있다. 예를 들어, 이벤트가 데이터를 데이터베이스로부터 읽기 위한 판 독 이벤트인 경우, 백 엔드는 하이퍼로더로부터 수신한 데이터 판독 요청에 기초하여 데이터베이스로 부터 데이터를 읽어와서 하이퍼로더에 전송할 수 있다. 전술한 백 엔드에 대한 구체적인 기재는 예시 일 뿐이며 본 개시는 이에 제한되지 않는다. 시스템은 하나 이상의 백 엔드를 포함할 수 있다. 하나 이상의 백 엔드 각각은 서로 다른 데이터를 저장하고 있을 수도 있고, 동일한 데이터를 포함하고 있을 수도 있다. 예를 들어, 데이터를 분산 저장하는 경우 둘 이상의 백 엔드에 각각 상이한 데이터를 저장하고 있을 수 있다. 또한, 예를 들어, 백 엔드가 중 단되거나 백 엔드의 데이터가 유실되어 정합성이 깨지는 경우를 대비하여 미러링 백 엔드를 포함하고 있을 수 있다. 이 때, 미러링 백 엔드는 미러링 대상인 백 엔드와 동일한 데이터를 저장하고 있을 수 있다. 전 술한 둘 이상의 백 엔드에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프론트 엔드는 이벤트를 처리하기 위한 실행 플랜을 생성할 수 있다. 프론트 엔드는 클라우드 데이터 베이스 관리 서버에 포함된 백 엔드 또는 프론트 엔드의 네트워크 상에서의 주소, 프론트 엔드 또는 백 엔 드에 저장될 수 있는 데이터의 주소에 기초하여 이벤트를 처리하기 위한 실행 플랜을 생성할 수 있다. 이벤트를 처리하기 위한 플랜은, 이벤트를 처리하기 위한 데이터가 저장되어 있거나 저장되어야 하는 백 엔드의 위 치에 기초한 실행 플랜일 수 있다. 전술한 프론트 엔드에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 시스템은 하나 이상의 프론트 엔드를 포함할 수 있다. 하나 이상의 프론트 엔드 중 하이퍼로더 와 연결된 하나의 프론트 엔드가 중단되었을 때 다른 프론트 엔드가 상기 중단된 프론트 엔드 대신 하이퍼로더 와 연결될 수 있다. 클라이언트는 하이퍼로더에 데이터를 로딩해줄 것을 요청할 수 있다. 클라이언트는 하이퍼로더 에 이벤트를 전송하여, 데이터베이스로부터 데이터를 읽어오거나 쓰도록 할 수 있다. 예를 들어, 클라이언 트가 은행원 단말일 경우, 데이터베이스에 저장된 고객 계좌의 잔고를 확인하기 위한 판독 이벤트를 하이 퍼로더에 전송할 수 있다. 예를 들어, 클라이언트가 인공지능 스피커일 경우, 스피커 사용자가 스피 커에 음성을 통해 요청한 정보를 데이터베이스에 저장하기 위한 스트리밍 이벤트를 하이퍼로더에 전송할수 있다. 사용자 인터페이스는 데이터베이스 관리 시스템을 사용하는 사용자가 하이퍼로더를 관리하기 위한 인 터페이스를 제공할 수 있다. 사용자 인터페이스를 통해 사용자는 하이퍼로더에서 처리하고 있는 이벤 트 또는 데이터를 확인하거나, 또는 하이퍼로더의 메모리 사용량을 확인할 수 있다. 사용자 인터페이 스를 통해 사용자는 하이퍼로더를 관리할 수 있다. 예를 들어, 사용자는 사용자 인터페이스를 이용하여 하이퍼로더에서 사용하고 있는 메모리의 용량을 제한하거나 또는 이벤트의 처리 방법을 수 정할 수 있다. 전술한 사용자 인터페이스에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는 다. 클라우드 데이터베이스 관리 서버는 프론트 엔드 및 백 엔드 중 적어도 하나를 관리할 수 있다. 클라우드 데이터베이스 관리 서버는 프론트 엔드 또는 백 엔드의 네트워크 상에서의 주소, 프론 트 엔드 또는 백 엔드에 저장될 수 있는 데이터의 주소를 저장할 수 있다. 클라우드 데이터베이스 관 리 서버는 프론트 엔드 리스트 및 백 엔드 리스트를 저장할 수 있다. 클라우드 데이터베이스 관리 서버 는 프론트 엔드 및 백 엔드에 대한 메타 데이터를 저장, 관리할 수 있다. 클라우드 데이터베이스 관리 서 버에 저장된 정보에 기초하여 프론트 엔드는 이벤트에 대한 실행 플랜을 생성할 수 있다. 클라우드 데이터베이스 관리 서버는 백 엔드에 저장된 데이터에 기초하여 메타 데이터를 저장할 수 있다. 전술 한 클라우드 데이터베이스 관리 서버에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 하이퍼로더를 이용하여 클라이언트로부터 수신한 이벤트를 처리하는 방법에 관하여 설명 한다. 이벤트는 컨벤셔널 패스(conventional path) 또는 다이렉트 패스(direct path)로 처리될 수 있다. 컨벤셔 널 패스 및 다이렉트 패스에 관하여 후술하여 설명한다. 클라이언트로부터 수신된 이벤트는 프론트 엔드를 거쳐 백 엔드를 통해 처리될 수 있다. 컨벤셔 널 패스는 프론트 엔드를 통해 이벤트를 처리하는 방법일 수 있다. 하이퍼로더는 클라이언트로 부터 수신한 이벤트를 프론트 엔드에 전송할 수 있다. 프론트 엔드는 하이퍼로더로부터 수신한 이벤트에 기초하여 상기 이벤트를 처리하기 위한 실행 플랜을 생성할 수 있다. 프론트 엔드가 생성한 실행 플랜은 클라우드 데이터베이스 관리 서버에 저장된 메타 데이터에 기초하여 생성된 플랜일 수 있다. 실행 플랜은 이벤트를 처리하기 위한 계획을 포함할 수 있으며, 예를 들어, 이벤트를 처리하기 위하여 접근하여야 하 는 백 엔드 정보 등을 포함할 수 있다. 실행 플랜은 이벤트를 처리하기 위하여 하나 이상의 백 엔드 중 어 느 백 엔드에서 어느 테이블에 접근해야 하는지에 관한 정보를 포함할 수 있다. 프론트 엔드는 생성한 실 행 플랜을 하이퍼로더에 전송할 수 있다. 하이퍼로더는 프론트 엔드로부터 수신한 실행 플랜에 기초하여 이벤트를 처리하기 위하여 접근해야 하는 백 엔드에 이벤트에 기초한 데이터 판독/기록 요청을 전송할 수 있다. 이벤트가 판독 이벤트일 경우, 하이퍼로더는 상기 판독 이벤트에 기초하여 필요한 데이터 가 저장되어 있는 백 엔드에 상기 판독 이벤트에 기초한 데이터 판독 요청을 전송할 수 있다. 이벤트가 스 트리밍 이벤트일 경우 하이퍼로더는 상기 스트리밍 이벤트에 기초하여 데이터를 저장하기 위한 백 엔드 에 상기 스트리밍 이벤트에 기초한 데이터를 저장할 것을 요청할 수 있다. 전술한 컨벤셔널 패스에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 하이퍼로더가 클라이언트로부터 수신한 이벤트는 프론트 엔드를 거치지 않고 바로 백 엔드(20 0)를 통해 처리될 수 있다. 다이렉트 패스는 프론트 엔드를 거치지 않고 바로 백 엔드를 통해 이벤트 를 처리하는 방법일 수 있다. 다이렉트 패스를 위해서는 프론트 엔드와 준비(prepare) 과정을 거쳐야할 수 있다. 이하에서는 하이퍼로더에서 다이렉트 패스 방법에 기초하여 이벤트 처리를 준비(prepare)하는 동작에 관하 여 설명한다. 하이퍼로더는 다이렉트 패스 방법에 기초한 이벤트 처리를 준비하기 위하여 프론트 엔드에 프론트 엔 드 리스트 및 백 엔드 리스트를 요청할 수 있다. 하이퍼로더는 상기 요청에 기초하여 프론트 엔드로 부터 프론트 엔드 리스트 및 백 엔드 리스트를 수신할 수 있다. 프론트 엔드 리스트는 하나 이상의 프론트 엔드에 관한 정보를 포함할 수 있다. 하나 이상의 프론트 엔드에 관 한 정보는 하나의 프론트 엔드에서 중단이 발생했을 때, 중단이 발생한 프론트 엔드 대신 작업을 수행할 수 있 는 다른 프론트 엔드에 관한 정보를 포함할 수 있다. 중단이 발생한 프론트 엔드 대신 작업을 수행할 수 있는다른 프론트 엔드에 관한 정보는 중단이 발생한 프론트 엔드에 대한 미러링 프론트 엔드에 관한 정보일 수 있다. 미러링 프론트 엔드는 하나의 프론트 엔드가 중단될 것에 대비하여 동일한 데이터를 저장하고 있는 프론 트 엔드일 수 있다. 또한 중단이 발생한 프론트 엔드 대신 작업을 수행할 수 있는 다른 프론트 엔드에 관한 정 보는 다른 작업을 수행하고 있는 프론트 엔드에 관한 정보일 수 있다. 백 엔드 리스트는 하나 이상의 백 엔드에 관한 정보를 포함할 수 있다. 백 엔드 리스트는 하나 이상의 백 엔드 에 관한 주소를 포함할 수 있다. 또한, 백 엔드 리스트는 백 엔드에 포함된 데이터에 관한 정보를 포함할 수 있 다. 백 엔드에 포함된 데이터에 관한 정보는 데이터가 포함된 테이블, 칼럼 등에 관한 정보를 포함할 수 있다. 예를 들어, 백 엔드 리스트는 어느 테이블이 어느 백 엔드에 저장되어 있는지에 관한 정보를 포함하고 있을 수 있다. 하이퍼로더는 프론트 엔드로부터 백 엔드 리스트를 수신하고, 수신한 백 엔드 리스트에 기초하 여 이벤트를 다이렉트 패스로 처리할 수 있다. 하이퍼로더는 수신한 백 엔드 리스트에 기초하여 하나 이상의 백 엔드와 연결(connection)을 생성할 수 있 다. 하이퍼로더는 수신한 백 엔드 리스트에 포함된 하나 이상의 백 엔드에 관한 주소에 기초하여 하나 이 상의 백 엔드와 연결을 생성할 수 있다. 하이퍼로더는 하이퍼로더와 백 엔드의 연결에 기초하여 이벤트를 다이렉트 패스로 처리할 수 있다. 하이퍼로더는 이벤트를 수신하는 경우, 상기 연결에 기초하여 프론트 엔드를 거치지 않고 백 엔드에 데이터를 로딩(loading)할 수 있다. 이하에서는 하이퍼로더에서 다이렉트 패스 방법에 기초하여 이벤트를 처리하기 위한 동작에 관하여 설명한 다. 구체적으로 하이퍼로더가 클라이언트로부터 수신한 이벤트를 다이렉트 패스 방법을 이용하여 처 리하는 동작에 관하여 설명한다. 하이퍼로더는 클라이언트로부터 이벤트를 수신할 수 있다. 하이퍼로더는 상기 이벤트를 백 엔드 에서 처리될 수 있는 형식으로 변환 할 수 있다. 하이퍼로더는 변환된 이벤트에 관한 정보를 저장할 수 있다. 하이퍼로더는 백 엔드에 데이터 판 독/기록 요청을 전송하기 전에 데이터 판독/기록 요청에 관한 정보를 저장할 수 있다. 하이퍼로더는 데이 터 판독/기록 요청에 관한 정보 및 상기 데이터 판독/기록 요청을 처리하기 위한 백 엔드에 관한 정보를 저장할 수 있다. 하이퍼로더는 데이터 판독/기록 요청을 하나 이상의 백 엔드에 전송할 수 있다. 하이퍼로더 는 상기 데이터 판독/기록 요청을 전송한 하나 이상의 백 엔드로부터 처리 완료 정보를 수신할 때 까 지 상기 데이터 판독/기록 요청에 관한 정보 및 상기 데이터 판독/기록 요청을 처리하기 위한 백 엔드에 관한 정보를 삭제하지 않고 저장을 유지할 수 있다. 하이퍼로더는 백 엔드 리스트에 기초하여 클라이언트로부터 수신한 이벤트가 처리되어야 하는 백 엔 드를 식별하고, 프론트 엔드에서 실행 플랜을 생성하는 과정을 거치지 않고, 준비 과정을 통해 생성 된 연결을 이용하여 바로 백 엔드에 데이터 판독/기록 요청 정보를 전송할 수 있다. 하이퍼로더는 클 라이언트로부터 수신한 이벤트의 변환에 기초하여 백 엔드에 전송할 데이터 판독/기록 요청을 생성할 수 있다. 백 엔드는 수신한 데이터 판독/기록 요청에 기초하여 백 엔드에 데이터를 판독/기록할 수 있다. 백 엔드는 수신한 데이터 판독/기록 요청에 기초한 작업의 수행 완료 후 데이터 판독/기록 요청에 기초한 판 독/기록이 완료되었다는 처리 완료 정보를 하이퍼로더에 전송할 수 있다. 하이퍼로더는 상기 데이터 판독/기록 요청을 전송한 하나 이상의 백 엔드로부터 상기 데이터 판독/기 록 요청에 대한 처리 완료 정보를 수신할 수 있다. 하이퍼로더는 상기 데이터 판독 또는 기록 요청에 대한 처리 완료 정보를 수신하는 경우, 상기 처리 완료 정보를 전송한 백 엔드에 대응하여 저장된 판독/기록 요 청에 관한 정보 및 상기 데이터 판독/기록 요청을 처리하기 위한 백 엔드에 관한 정보를 삭제할 수 있다. 하이퍼로더는 백 엔드로부터 상기 처리 완료 정보를 수신한 것에 기초하여 필요한 경우 클라이언트 에 판독/기록 요청에 기초한 정보를 전송할 수 있다. 하이퍼로더는 클라이언트에 판독 이벤트에 기초하여 판독한 데이터에 관한 정보를 전송할 수 있다. 하이퍼로더는 클라이언트에 스트리밍 이벤트 에 기초하여 기록한 데이터에 관한 정보를 전송할 수 있다. 이하에서는 다이렉트 패스 방법에 기초하여 이벤트를 처리할 때, 백 엔드에서 데이터가 변경된 경우, 백 엔드의 변경된 데이터를 저장하는 동작에 관하여 설명한다. 하이퍼로더는 백 엔드의 변경된 데이터에 대한 저장 요청을 프론트 엔드에 전송할 수 있다. 하 이퍼로더는 프론트 엔드에 사전결정된 시간 주기로 백 엔드의 변경된 데이터에 대한 저장 요청 을 전송할 수도 있고, 또는 백 엔드에서 사전결정된 횟수만큼의 데이터 변경이 있을 경우 백 엔드의 변경된 데이터에 대한 저장 요청을 전송할 수도 있으나, 이는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프론트 엔드는 수신한 백 엔드의 변경된 데이터에 대한 저장 요청에 기초하여 백 엔드의 변경된 데이터에 대한 저장 요청을 전송할 수 있다. 백 엔드는 프론트 엔드로부터 변경된 데이터에 대한 저 장 요청을 수신할 수 있다. 백 엔드는 프론트 엔드로부터 수신한 변경된 데이터에 대한 저장 요청에 기초하여 변경된 데이터를 저장할 수 있다. 백 엔드는 변경된 데이터의 저장 완료 후 프론트 엔드에 변경된 데이터에 대한 저장 완료 정보를 전송할 수 있다. 프론트 엔드는 백 엔드로부터 변경된 데이 터에 대한 저장 완료 정보를 수신하는 것에 기초하여, 백 엔드의 변경된 데이터에 대한 저장 완료 정보를 프론트 엔드로 전송할 수 있다. 다이렉트 패스는 프론트 엔드를 거치지 않고, 바로 백 엔드에 데이터를 적재하므로 다른 사용자가 프론트 엔드 를 통해서 데이터를 조회할 때 백 엔드에 변경된 데이터를 조회할 수 없는 경우가 발생할 수 있다. 예를 들어, 다른 사용자는 백 엔드에서 데이터가 변경된 경우, 프론트 엔드를 통해 백 엔드의 데이터가 변경된 것이 아니기 때문에, 프론트 엔드를 통해서 셀렉트(select)문을 보내는 등의 동작을 수행할 수 없다. 하이퍼로더가 프론트 엔드를 통해 백 엔드에 백 엔드의 변경된 데이터에 대한 저장 요청을 전송하는 경우, 프론트 엔드가 백 엔드의 변경된 데이터들에 대한 조회를 할 수 있다. 프론트 엔드를 통해 백 엔드의 변경된 데이터를 저장하는 경우, 하 이퍼로더가 중단되더라도 백 엔드 및 프론트 엔드는 변경된 데이터들에 관한 정보를 저장하고 있을 수 있다. 본 개시의 일 실시예에 따라 하이퍼로더는 프론트 엔드에 사전결정된 주기 마다 백 엔드의 변경 된 데이터에 대한 저장 요청을 전송할 수 있다. 예를 들어, 하이퍼로더는 n초마다 프론트 엔드에 백 엔드의 변경된 데이터에 대한 저장 요청을 전송할 수 있다. 본 개시의 다른 일 실시예에 따라 하이퍼로더 는 프론트 엔드에 사전결정된 데이터 변경 정도에 기초하여 백 엔드의 변경된 데이터에 대한 저 장 요청을 전송할 수 있다. 예를 들어, 하이퍼로더는 백 엔드의 변경된 데이터의 크기가 n바이트가 될 때 마다 프론트 엔드에 백 엔드의 변경된 데이터에 대한 저장 요청을 전송할 수 있다. 전술한 백 엔드의 저장 요청에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 기존의 이벤트 처리의 경우, 이벤트를 처리하는 둘 이상의 컴퓨팅 장치 중 적어도 하나의 컴퓨팅 장치에서 중단 이 발생하는 경우 다른 컴퓨팅 장치에서 수행되고 있는 작업도 모두 중단이 되었다. 또한, 이벤트를 처리하는 중간에 둘 이상의 컴퓨팅 장치 중 적어도 하나의 컴퓨팅 장치에서 중단이 발생하는 경우 모든 작업이 롤백(roll back)이 되고 이벤트에 대한 처리가 처음부터 다시 수행되어야 하는 문제점이 존재하였다. 본원 발명에 따른 프 론트 엔드 중단 시 이벤트의 처리 방법 또는 백 엔드 중단 시 이벤트의 처리 방법에 기초하여 이벤트의 처리를 수행하는 경우, 이벤트의 처리 중간에 적어도 하나의 컴퓨팅 장치에서 중단이 발생하더라도 다른 컴퓨팅 장치에 서 해당 이벤트의 처리가 가능하며, 모든 작업의 롤백을 방지할 수 있다. 이하에서는 도 3을 참조하여 백 엔드의 중단 시 이벤트를 처리하기 위한 하이퍼로더의 동작에 관하여 설명한다. 이벤트를 처리하기 위한 둘 이상의 컴퓨팅 장치 중 백 엔드만 중단된 경우, 이벤트를 전송하는 클라이언트 와 이벤트를 처리하는 하이퍼로더는 중단이 되지 않고 정상적인 작업을 수행할 수 있을 수 있다. 이 하에서는 백 엔드가 중단된 경우, 하이퍼로더를 이용하여 이벤트를 처리하는 방법에 관하여 설명한다. 프로세서는 네트워크부를 통해 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신할 수 있다. 프로세서는 네트워크부를 통해 프론트 엔드로부터 백 엔드가 중단되었다는 백 엔드 중단 정보를 수신할 수 있다. 백 엔드 중단 시 클라우드 데이터베이스 관리 서버 가 중단을 감지하고, 클라우드 데이터베이스 관리 서버가 프론트 엔드에 상기 백 엔드 중단 정 보를 전송할 수 있다. 프론트 엔드는 클라우드 데이터베이스 관리 서버로부터 수신한 백 엔드 중단 정보에 기초하여 프로세서에 백 엔드 중단 정보를 전송할 수 있다. 백 엔드 중단 정보는, 중단된 백 엔드에 관한 정보를 포함할 수 있다. 중단된 백 엔드에 관한 정보는 중단된 백 엔드의 주소를 포함 할 수 있다. 프로세서는 상기 백 엔드 중단 정보의 수신 이후 네트워크부를 통해 클라이언트로부터 이벤트를 수신할 수 있다. 프로세서는 네트워크부를 통해 클라이언트로부터 이벤트를 수신하는 경우, 상 기 수신한 이벤트를 처리하기 위한 하나 이상의 백 엔드를 결정할 수 있다. 프로세서는 이벤트 처리 를 위한 준비 단계에서 프론트 엔드로부터 수신한 백 엔드 리스트에 기초하여 이벤트를 처리하기 위한 백 엔드를 식별할 수 있다. 프로세서는 이벤트를 처리하기 위한 백 엔드의 주소를 식별할 수 있다. 예를 들어, 이벤트가 백 엔드에 저장된 데이터 A 및 B를 판독하기 위한 판독 이벤트일 경우, 프로세서 는 백 엔드 리스트에 기초하여 상기 데이터 A 및 B가 각각 저장되어 있는 제 1 백 엔드 및 제 2 백 엔드를 식별할 수 있다. 전술한 이벤트의 처리에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 상기 이벤트가 중단된 백 엔드에 대응되는 이벤트인지 여부를 확인할 수 있다. 프로세서 는 프론트 엔드로부터 수신한 백 엔드 리스트에 기초하여 상기 이벤트가 처리되어야 하는 하나 이상 의 백 엔드를 식별할 수 있다. 프로세서는 상기 식별한 하나 이상의 백 엔드 중 상기 중단된 백 엔드에 대응되는 백 엔드가 있는지 여부를 식별할 수 있다. 이벤트에 기초하여 식별된 하나 이상의 백 엔 드 중 상기 중단된 백 엔드가 없을 경우, 상기 이벤트에 대한 처리는 백 엔드의 중단과 무관하 므로, 중단되지 않은 백 엔드들에 기초하여 이벤트의 처리가 수행될 수 있다. 이벤트에 기초하여 식별된 하나 이상의 백 엔드 중 상기 중단된 백 엔드가 있을 경우, 상기 이벤트에 대한 처리는 백 엔드 중단 중 처리에 의하여 수행될 수 있다. 이하에서는 이벤트에 기초하여 식별된 하나 이상의 백 엔드 중 중단된 백 엔드가 있을 경우, 이벤트 에 대한 백 엔드 중단 중 처리에 관하여 설명한다. 프로세서는 상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확 인할 수 있다. 상기 이벤트의 종류는 데이터를 기록하기 위한 스트리밍 이벤트 또는 백 엔드에 포함된 데이터를 판독하기 위한 판독 이벤트를 포함할 수 있다. 스트리밍 이벤트는 데이터를 백 엔드에 기록하기 위한 이벤트일 수 있다. 예를 들어, 클라이언트가 스마트 청소기인 경우, 스마트 청소기가 현재 청소하는 위치에 대한 스트리밍 데이터들을 저장하도록 요청하는 스트리 밍 이벤트를 네트워크부를 통해 프로세서에 전송할 수 있다. 스트리밍 이벤트는 클라이언트로부 터 네트워크부를 통해 프로세서에 스마트 청소기의 위치가 변화할 때 마다 전송될 수 있고, 상기 스 트리밍 이벤트에 기초한 데이터는 바로 저장하지 않으면 데이터가 유실될 수 있다. 전술한 스트리밍 이벤트에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 판독 이벤트는 백 엔드에 저장된 데이터를 판독하기 위한 이벤트일 수 있다. 예를 들어, 클라이언트가 은 행 단말인 경우, 고객의 계좌 잔고를 확인할 때, 계좌 잔고에 대한 데이터가 저장되어 있는 백 엔드로부터 상기 데이터를 읽어올 것을 요청하는 판독 이벤트를 네트워크부를 통해 프로세서에 전송할 수 있다. 전술 한 판독 이벤트에 관한 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서가 백 엔드의 중단 시 이벤트를 처리하는 방법은 이벤트의 종류에 따라 상이할 수 있다. 프로세서 는 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정할 수 있다. 이하에서는 프로세서에서 백 엔드 중단 이후 수신한 스트리밍 이벤트에 대한 백 엔드 중단 중 처리 방법에 관하여 설명한다. 프로세서는 상기 이벤트의 종류가 스트리밍 이벤트인 경우, 상기 이벤트의 백 엔드 중단 중 처리 방법을 결정하는 동작은, 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할 것을 결정하는 동작을 포함할 수 있다. 프로세서는 중단된 백 엔드에 대응하는 이벤트에 기초한 데이터를 물리적인 저장 공간에 저 장할 수 있다. 물리적인 저장 공간은 예를 들어 디스크(disk)를 포함할 수 있다. 전술한 물리적인 저장 공간에 관한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 프론트 엔드로부터 중단된 백 엔드가 복구(recovery) 되었다는 복구 정보를 수신할 수 있다. 중단된 백 엔드에 대하여 클라우드 데이터베이스 관리 서버가 복구를 감지하고, 클라우드 데이터베이스 관리 서버가 프론트 엔드에 상기 중단된 백 엔드에 대한 백 엔드 복구 정보를 전 송할 수 있다. 프론트 엔드는 클라우드 데이터베이스 관리 서버로부터 수신한 중단된 백 엔드에 대한 백 엔드 복구 정보에 기초하여 프로세서에 네트워크부를 통해 상기 중단된 백 엔드에 대한 복구 정보를 전송할 수 있다. 중단된 백 엔드에 대한 복구 정보는 복구된 백 엔드에 관한 정보를 포 함할 수 있다. 중단된 백 엔드에 대한 복구 정보는 복구된 백 엔드의 주소를 포함할 수 있다. 중단된 백 엔드가 둘 이상인 경우, 프로세서는 중단된 백 엔드의 복구 정보에 기초하여 어느 백 엔드가 복구된 것 인지 식별할 수 있다. 프로세서는 네트워크부를 통해 상기 중단된 백 엔드의 복구 이후 상기 물리적인 저장 공간에 저 장된 상기 이벤트에 기초한 데이터를 상기 복구된 백 엔드에 전송할 수 있다. 프로세서는 네트워크부(11 0)를 통해 중단된 백 엔드의 복구 정보를 수신하고, 어느 백 엔드가 복구되었는지 식별할 수 있다. 프로세서 는 물리적인 저장 공간에 저장된 하나 이상의 데이터 중 복구된 백 엔드에 대응하는 데이터를 식별할 수 있다. 프로세서는 네트워크부를 통해 복구된 백 엔드에 대응하여 식별된 데이터를 복구된 백 엔드에 전송할 수 있다. 프로세서는 네트워크부를 통해 백 엔드의 복구 이후 사전결정된 시간에 상기 물리적인 저장 공간에 저장된 상기 복구된 백 엔드에 대응하여 식별된 데이터를 상기 복구된 백 엔드에 전송할 수 있다. 사전결정된 시간은 예를 들어, 데이터베이스의 이용 빈도가 낮은 시간대일 수 있다. 예를 들어, 프로세서는 데이터베 이스에 포함된 데이터의 판독/기록 빈도가 낮은 새벽시간 대에 물리적인 저장 공간에 저장된 상기 이벤트에 기 초한 데이터를 네트워크부를 통해 상기 복구된 백 엔드에 전송할 수 있다. 예를 들어, 백 엔드의 복구 이 후 사전결정된 시간 간격 이내에 물리적인 저장 공간에 저장된 상기 이벤트에 기초한 데이터를 복구된 백 엔드 에 전송할 수도 있다. 전술한 복구된 백 엔드에 데이터를 전송하는 구체적인 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 프로세서에서 스트리밍 이벤트의 처리 중 백 엔드가 중단된 경우 백 엔드 중단 중 처리 방법에 관하여 설명한다. 프로세서는 스트리밍 이벤트를 수신하는 경우, 상기 스트리밍 이벤트가 처리되어야 하는 하나 이상의 백 엔드를 식별할 수 있다. 프로세서는 스트리밍 이벤트 및 스트리밍 이벤트가 처리되어야 하는 하나 이 상의 백 엔드에 관한 정보를 메모리에 저장하고 있을 수 있다. 프로세서는 스트리밍 이벤트에 기초한 정보를 메모리에 저장한 후, 네트워크부를 통해 스트리밍 이벤트가 처리되어야 하는 하나 이상의 백 엔드에 상기 데이터들에 기초한 요청을 전송할 수 있다. 프로세서가 네트워크부를 통해 하나 이상의 백 엔드에 상기 스트리밍 이벤트에 기초한 데이터 기록 요청을 전송한 후, 프론트 엔드로부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 관한 백 엔드 중단 정보를 수신할 수 있다. 프로세서는 백 엔드가 중단됨에 따라, 중단된 백 엔드로 부터 상기 데이터 기록 요청에 대한 처리 완료 정보를 수신하지 못할 수 있다. 프로세서는 데이터 기록 요 청에 대한 처리 완료 정보를 수신하지 못하므로, 메모리에서 상기 스트리밍 이벤트에 관련한 정보를 삭제 하지 못할 수 있다. 따라서, 메모리는 스트리밍 이벤트에 대한 처리 수행 중에 백 엔드가 중단된 경 우, 해당 스트리밍 이벤트에 관한 정보를 계속 저장하고 있을 수 있다. 프로세서는 백 엔드 중단 정보를 수신하는 것에 기초하여, 메모리에 저장된 스트리밍 이벤트에 기초 한 데이터를 물리적인 저장 공간에 저장할 것을 결정할 수 있다. 프로세서는 물리적인 저장 공간에 저장한 데이터를 백 엔드의 복구 후 복구된 백 엔드에 네트워크부를 통해 전송할 수 있다. 물리적인 저장 공간은 예를 들어 디스크(disk)를 포함할 수 있다. 전술한 물리적인 저장 공간에 관한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 이하에서는 프로세서에서 백 엔드 중단 이후 수신한 판독 이벤트에 대한 백 엔드 중단 중 처리 방법에 관 하여 설명한다. 프로세서는 네트워크부를 통해 클라이언트로부터 수신한 상기 이벤트의 종류가 판독 이벤트인 경우, 상기 판독 이벤트에 기초한 데이터의 전송 및 변환 중 적어도 하나를 중단할 것을 결정할 수 있다. 프로세서는 백 엔드가 중단되었을 경우 판독 이벤트에 대해서는 이벤트의 수신 또는 이벤트의 변환 작업 을 중단할 것을 결정할 수 있다. 프로세서는 이벤트의 수신 또는 이벤트의 변환 작업 중 처리하고 있던 작 업만 완료하면 프로세서에서 수행하는 이벤트의 수신 또는 변환 작업을 중단할 것을 결정할 수 있다. 스트리밍 이벤트의 경우 실시간으로 기록을 위한 데이터가 들어오는 이벤트이며, 실시간으로 들어오는 데이터를 저장하지 못하는 경우 해당 데이터가 유실될 수 있다. 따라서, 프로세서는 데이터의 유실을 방지하기 위하 여 스트리밍 이벤트에 기초한 데이터는 물리적인 저장 공간에 저장한 후, 백 엔드가 복구된 이후 물리적인 저장 공간에 저장된 데이터를 네트워크부를 통해 복구된 백 엔드에 전송할 수 있다. 반면, 판독 이벤트의 경우 데이터베이스에 저장된 데이터를 판독하기 위한 이벤트이며, 실시간으로 이벤트를 처 리하지 않아도 데이터의 유실 염려가 없다. 판독 이벤트의 경우 백 엔드가 복구될 때까지 기다린 후 판독 이벤트에 기초한 데이터의 처리를 수행해도 데이터의 유실 문제가 발생하지 않으므로, 프로세서에서의 이 벤트 수신 또는 이벤트 변환 작업을 중단하고 멈출 것을 결정할 수 있다. 백 엔드가 복구된 이후 프로세서(12 0)는 클라이언트로부터 수신한 이벤트의 처리를 위하여 다시 작업을 수행할 수 있다. 이하에서는 프로세서에서 판독 이벤트의 처리 중 백 엔드가 중단된 경우 백 엔드 중단 중 처리 방법에 관 하여 설명한다. 프로세서는 네트워크부를 통해 판독 이벤트를 수신하는 경우, 상기 판독 이벤트가 처리되어야 하는 하나 이상의 백 엔드를 식별할 수 있다. 프로세서는 판독 이벤트에 관한 정보 및 판독 이벤트가 처리 되어야 하는 하나 이상의 백 엔드에 관한 정보를 메모리에 저장할 수 있다. 프로세서는 판독 이 벤트에 기초한 정보를 버퍼에 저장한 후 판독 이벤트가 처리되어야 하는 하나 이상의 백 엔드에 상기 데이 터들에 기초한 요청을 전송할 수 있다. 프로세서가 하나 이상의 백 엔드에 상기 판독 이벤트에 기초한 데이터 판독 요청을 전송한 후, 프론트 엔 드로부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 관한 백 엔드 중단 정보를 수신할 수 있다. 프로세서는 백 엔드가 중단됨에 따라, 중단된 백 엔드로부터 상기 데이터 판독 요청에 대한 처리 완료 정보를 수신하지 못할 수 있다. 프로세서는 데이터 판독 요청에 대한 처리 완료 정보를 수 신하지 못하므로, 메모리에서 상기 판독 이벤트에 관련한 정보를 삭제하지 못할 수 있다. 따라서, 메모리 는 판독 이벤트에 대한 처리 수행 중 백 엔드가 중단된 경우, 해당 판독 이벤트에 관한 정보를 계속 저장하고 있을 수 있다. 프로세서는 중단된 백 엔드가 복구되었다는 복구 정보를 프론트 엔드로부터 수신하는 경우 복구 된 백 엔드에 대응하는 판독 이벤트에 기초한 데이터 판독 요청을 상기 복구된 백 엔드에 전송할 수 있다. 이하에서는 중단된 백 엔드의 복구 이후 복구된 백 엔드에 기초한 프로세서의 동작에 관하여 설명한다. 프로세서는 네트워크부를 통해 상기 중단된 백 엔드에 대한 복구 정보를 수신할 수 있다. 프로세서 는 프론트 엔드로부터 상기 백 엔드에 대한 복구 정보를 수신할 수 있다. 프로세서는 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성할 수 있다. 프로세서는 복구된 백 엔드와 연결을 생성할 수 있다. 프로세서는 복구된 백 엔드와 연결을 생성한 것에 기초하여, 물리적인 저장 공간에 저장해 두었던 스트리 밍 이벤트에 기초한 데이터를 네트워크부를 통해 복구된 백 엔드에 전송할 수 있다. 프로세서는 복구된 백 엔드와 연결을 생성한 것에 기초하여, 판독 이벤트에 기초한 데이터를 네트워크부 를 통해 복구된 백 엔드에 전송할 수 있다. 프로세서는 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리할 수 있다. 프로세서는 복구된 백 엔드와의 연결에 기초하여 이벤트를 처리할 수 있다. 프로세서는 상기 클라이언트로부터 수신한 이벤트에 기초하여 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 데이터 로드 요청 정보를 전송할 수 있다. 데이터 로드 요청 정보는 데이터의 판독/기록을 위한 정보를 포함할 수 있다. 프로세서는 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정보 중 적어도 하나를 메모리에 저장할 수 있다. 프로세서는 상기 데이 터 로드 요청 정보를 전송한 적어도 하나의 백 엔드로부터 상기 데이터 로드 요청 정보에 기초한 처리 완 료 정보를 수신하는 경우, 상기 메모리에서 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송 한 적어도 하나의 백 엔드에 관한 정보 중 적어도 하나를 삭제할 수 있다. 이하에서는 도 4를 참조하여 프론트 엔드의 중단 시 이벤트를 처리하기 위한 하이퍼로더의 동작에 관 하여 설명한다. 프로세서는 네트워크부를 통해 하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하 나 이상의 프론트 엔드에 관한 정보를 포함하는 프론트 엔드 리스트를 수신할 수 있다. 프로세서는 네트워크부를 통해 하이퍼로더와 연결된 프론트 엔드로부터 하나 이상의 프론트 엔드에 관 한 정보를 포함하는 프론트 엔드 리스트를 수신할 수 있다. 프론트 엔드 리스트는 하나 이상의 프론트 엔드 에 관한 정보를 포함할 수 있다. 프론트 엔드 리스트는 하나 이상의 프론트 엔드의 주소에 관한 정보 를 포함할 수 있다. 하나 이상의 프론트 엔드에 관한 정보는 하이퍼로더와 연결된 프론트 엔드 가 중단되었을 때, 중단된 프론트 엔드 대신 작업을 수행할 수 있는 다른 프론트 엔드에 관한 정보를 포함할 수 있다. 프로세서는 상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상 기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생 성할 수 있다. 프로세서는 중단된 프론트 엔드에 기초하여 연결되었던 백 엔드와의 연결을 끊을 수 있다. 프로세서는 상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성할 수 있다. 프로세서는 다른 프론트 엔드와의 연결을 수행하고, 다른 프 론트 엔드로부터 네트워크부를 통해 백 엔드 리스트를 다시 수신할 수도 있다. 프로세서는 상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정할 수 있다. 프로세서는 프론트 엔드가 중단된 이후부터 다른 프론트 엔드 와 연결을 생성한 후, 다른 프론트 엔드와 연결을 생성한 것에 기초하여 하나 이상의 백 엔드 중 적 어도 하나의 백 엔드와의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정할 수 있다. 이벤트는 데이터를 저장하기 위한 스트리밍 이벤트 또는 백 엔드에 포함된 데이터 를 읽기 위한 판독 이벤트일 수 있다. 프로세서는 이벤트의 종류에 기초하여 프론트 엔드 중단 중 처리 방 법을 결정할 수 있다. 이하에서는 프로세서에서 프론트 엔드의 중단 이후 수신한 스트리밍 이벤트에 대한 프론트 엔드 중단 중 처리 방법에 관하여 설명한다. 프로세서에서 프론트 엔드의 중단 이후 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성하기 전까지 수신한 스트리밍 이벤트에 대한 프론트 엔드 중단 중 처리 방법에 관하여 설명한다. 프로세서는 상기 이벤트의 종류가 스트리밍 이벤트일 경우, 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할 것을 결정할 수 있다. 물리적인 저장 공간은 예를 들어 디스크(disk)를 포함할 수 있다. 전술한 물리적인 저장 공간에 관한 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 프로세서는 다른 프론트 엔드와 연결을 생성하고, 상기 다른 프론트 엔드와 연결을 생성한 것에 기초하여 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결을 생성한 이후, 상기 물리적인 저 장 공간에 저장한 상기 이벤트에 기초한 데이터를 상기 이벤트가 처리될 백 엔드에 전송할 수 있다. 이하에서는 프로세서에서 프론트 엔드의 중단 이후 수신한 판독 이벤트에 대한 프론트 엔드 중단 중 처리 방법에 관하여 설명한다.프론트 엔드의 중단 이후 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성하기 전까지 프로세서가 네트워크부를 통해 클라이언트로부터 수신한 상기 이벤트의 종류가 상기 하나 이상 의 백 엔드 중 적어도 하나의 백 엔드에 포함된 데이터를 읽기 위한 판독 이벤트일 경우, 프로세서는 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상기 판독 이벤트에 대한 처리를 다시 수행할 것을 결정할 수 있다. 이벤트의 종류가 판독 이벤트일 경우, 프로세서는 백 엔드를 통해 프론트 엔드의 중단 이후 유효하지 않은 데이터를 판독할 수 있다. 따라서, 프로세서는 유효한 데이 터를 판독하기 위하여 프로세서가 프론트 엔드 리스트에 기초하여 다른 프론트 엔드와의 연결을 생성 한 후, 다시 판독 이벤트에 기초한 데이터를 백 엔드에서 다시 읽을 것을 결정할 수 있다. 프로세서는 판독 이벤트에 대한 처리를 다시 수행하기 위하여, 상기 하나 이상의 백 엔드의 최근 저 장 시점 이후의 데이터에 기초하여 상기 판독 이벤트에 대한 처리를 수행할 것을 결정할 수 있다. 프로세서 는 하나 이상의 백 엔드에서 변경된 데이터에 대한 최근 저장 시점 이후의 데이터에 기초하여 판독 이벤트에 대한 처리를 다시 수행할 것을 결정할 수 있다. 프로세서는 프론트 엔드로부터 가장 최근에 수신한 저장 완료 정보의 수신 시점 이후의 데이터를 백 엔드에서 다시 읽도록 결정할 수 있다. 프론트 엔드가 중단되는 경우, 백 엔드가 중단되는 경우와 달리 바로 새로운 다른 프론트 엔드와 연결을 생성할 수 있다. 또한, 프론트 엔드가 중단되는 경우 백 엔드의 복구와 달리 다른 프론트 엔드와 연결을 새롭게 생성하 므로 복구 시간이 짧다. 또한 프론트 엔드만 중단되고, 백 엔드는 중단되지 않은 경우, 판독 이벤트에 대한 처 리는 가능하나, 프로세서에서 잘못된 데이터를 판독한 것일 수 있다. 따라서, 프로세서는 다른 프론 트 엔드와 다시 연결을 생성하고, 그에 따라 백 엔드와 연결을 생성한 이후에 백 엔드에서 변경된 데이터에 대 한 최근 저장 시점 이후의 데이터를 다시 판독하도록 할 수 있다. 도 5는 시스템에서 프론트 엔드 중단 시 이벤트를 처리하기 위한 순서도이다. 하이퍼로더는 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 대한 백 엔드 중단 정보를 수신(S710)할 수 있다. 하이퍼로더는 상기 백 엔드 중단 정보의 수신 이후 클라이언트로부터 이벤트를 수신(S720)할 수 있다. 하이퍼로더는 상기 이벤트가 중단된 백 엔드와 대응되는 이벤트인지 여부를 확인(S730)할 수 있다. 하이퍼로더는 상기 이벤트가 상기 중단된 백 엔드와 대응되는 이벤트인 경우 상기 이벤트의 종류를 확인 (S740)할 수 있다. 하이퍼로더는 상기 이벤트의 종류에 기초하여 상기 중단된 백 엔드와 대응되는 상기 이 벤트의 백 엔드 중단 중 처리 방법을 결정(S750)할 수 있다. 상기 이벤트의 종류가 스트리밍 이벤트인 경우, 하 이퍼로더는 상기 이벤트에 기초한 데이터를 물리적인 저장 공간에 저장할 것을 결정할 수 있다. 상기 이벤 트의 종류가 판독 이벤트인 경우, 하이퍼로더는 상기 판독 이벤트에 기초한 데이터의 전송 및 변환 중 적 어도 하나를 중단할 것을 결정할 수 있다. 하이퍼로더는 상기 중단된 백 엔드에 대한 복구 정보를 수신(S760)할 수 있다. 하이퍼로더는 상기 하 나 이상의 백 엔드 중 적어도 하나의 백 엔드와 연결을 생성할 수 있다. 하이퍼로더는 상기 이벤트의 종류 가 스트리밍 이벤트인 경우, 상기 중단된 백 엔드의 복구 이후 상기 물리적인 저장 공간에 저장된 상기 이벤트 에 기초한 데이터를 상기 복구된 백 엔드에 전송할 수 있다. 하이퍼로더는 상기 백 엔드에 대한 복구 정보 수신 이후 상기 클라이언트로부터 수신된 이벤트를 처리 (S770)할 수 있다. 하이퍼로더는 상기 클라이언트로부터 수신한 이벤트에 기초하여 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 데이터 로드 요청 정보를 전송할 수 있다. 하이퍼로더는 상기 데이터 로 드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정보 중 적어도 하나를 버퍼에 저장할 수 있다. 하이퍼로더는 상기 데이터 로드 요청 정보를 전송한 적어도 하나의 백 엔드로부터 상기 데이터 로드 요청 정보에 기초한 처리 완료 정보를 수신하는 경우, 상기 버퍼에서 상기 데이터 로드 요청 정보 및 상기 데이터 로드 요청을 전송한 적어도 하나의 백 엔드에 관한 정보 중 적어도 하나를 삭제할 수 있다. 도 6은 시스템에서 백 엔드 중단 시 이벤트를 처리하기 위한 순서도이다. 하이퍼로더는 하나 이상의 프론트 엔드 중 하나의 프론트 엔드로부터 상기 하나 이상의 프론트 엔드에 관 한 정보를 포함하는 프론트 엔드 리스트를 수신(S810)할 수 있다. 하이퍼로더는 상기 하나 이상의 프론트 엔드 중 적어도 하나의 프론트 엔드가 중단되는 경우, 상기 프론트 엔드 리스트에 기초하여 상기 중단된 프론트 엔드 이외의 다른 프론트 엔드와의 연결을 생성(S820)할 수 있다. 하이퍼로더는 상기 다른 프론트 엔드와의 연결에 기초하여 하나 이상의 백 엔드 중 적어도 하나의 백 엔드 와의 연결을 생성(S830)할 수 있다. 하이퍼로더는 상기 적어도 하나의 프론트 엔드가 중단된 이후부터 상기 하나 이상의 백 엔드 중 적어도 하 나의 백 엔드와의 연결을 생성하기 전까지 클라이언트로부터 수신된 이벤트의 프론트 엔드 중단 중 처리 방법을 결정(S840)할 수 있다. 하이퍼로더는 상기 이벤트의 종류가 스트리밍 이벤트일 경우, 상기 이벤트에 기초한 데이터를 물리적인 저 장 공간에 저장할 것을 결정할 수 있다. 하이퍼로더는 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔 드와의 연결 생성 이후, 상기 물리적인 저장 공간에 저장한 상기 이벤트에 기초한 데이터를 상기 이벤트가 처리 될 백 엔드에 전송할 수 있다. 하이퍼로더는 상기 이벤트의 종류가 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드에 포함된 데이터 를 읽기 위한 판독 이벤트일 경우, 상기 하나 이상의 백 엔드 중 적어도 하나의 백 엔드와의 연결 생성 이후 상 기 판독 이벤트에 대한 처리를 다시 수행할 것을 결정할 수 있다. 하이퍼로더는 상기 하나 이상의 백 엔드 의 최근 저장 시점 이후의 데이터에 기초하여 상기 판독 이벤트에 대한 처리를 수행할 것을 결정할 수 있다. 도 7은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도이다. 도 7은 본 개시의 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도시한 다. 본 개시가 일반적으로 하나 이상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어와 관련하여 전술되었 지만, 당업자라면 본 개시가 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구 현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드 헬드 컴퓨팅 장 치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있다. 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시적 (transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동식 및 비이동식 매체를 포함한다. 컴퓨터 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메모리 기술, CD- ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 기타 전송 메커니즘(transport mechanism)과 같은 피변조 데이터 신호 (modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현 하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호 의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로서, 컴퓨터 판독가능 전송 매 체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외 선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터 를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)-이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음-, 자기 플로피 디스크 드 라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비 휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시 적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화 된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화 된 환경에서, 컴퓨터에 대해 설명된 프 로그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예 시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다. 컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 2개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a,b,g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네 트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비인 가 2.4 및 5 GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 \"소프트웨어\"로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양 한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명 되었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템 에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개 시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 \"제조 물품\"은 임의의 컴퓨터-판독가능 장치로부터 액세스 가능한 컴 퓨터 프로그램 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 매체는 자기 저장 장치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래 쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계 -판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다.제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다."}
{"patent_id": "10-2019-0047752", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따라 데이터베이스 중단 관리를 위한 동작을 수행하는 하이퍼로더의 블록 구성도 를 도시한 도면이다. 도 2는 본 개시의 일 실시예에 따른 시스템의 예시를 도시한 도면이다. 도 3은 본 개시의 일 실시예에 따른 백 엔드의 중단 시 시스템의 예시를 도시한 도면이다. 도 4는 본 개시의 일 실시예에 따라 프론트 엔드의 중단 시 시스템의 예시를 도시한 도면이다. 도 5는 시스템에서 프론트 엔드 중단 시 이벤트를 처리하기 위한 순서도이다. 도 6은 시스템에서 백 엔드 중단 시 이벤트를 처리하기 위한 순서도이다. 도 7은 본 개시의 일 실시예에 따른 컴퓨팅 장치의 블록 구성도이다."}
