{"patent_id": "10-2017-0156494", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0059001", "출원번호": "10-2017-0156494", "발명의 명칭": "컨테이너 기반 지능형 컴포넌트에 대한 원격 호출 방법", "출원인": "전자부품연구원", "발명자": "전기만"}}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에 있어서,호출은,프로그램의 편집을 위한 것을 특징으로 하는 원격 호출 방법."}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,제1 호출 단계는,제1 컨테이너에 설치된 제1 원격 액세스 유닛을 통해 제1 컨테이너의 프로그램을 원격에서 호출하는 것을 특징으로 하는 원격 호출 방법."}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,로컬 네트워크 추상화 모듈에 설치된 원격 네트워크 기능 모듈을 통해 제1 원격 액세스 유닛에 접근하는 것을특징으로 하는 원격 호출 방법."}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,제2 컨테이너를 생성하는 제2 생성단계;제2 컨테이너의 프로그램을 원격에서 호출하는 제2 호출단계;를 더 포함하는 것을 특징으로 하는 원격 호출 방법."}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 4에 있어서,제2 호출 단계는,제2 컨테이너에 설치된 제2 원격 액세스 유닛을 통해 제2 컨테이너의 프로그램을 원격에서 호출하는 것을 특징으로 하는 원격 호출 방법."}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 5에 있어서,로컬 네트워크 추상화 모듈에 설치된 원격 네트워크 기능 모듈을 통해 제2 원격 액세스 유닛에 접근하는 것을특징으로 하는 원격 호출 방법.공개특허 10-2019-0059001-3-청구항 7"}
{"patent_id": "10-2017-0156494", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "프로그램이 설치된 제1 컨테이너; 및제1 컨테이너에 설치되며, 제1 컨테이너에 설치된 프로그램을 원격에서 호출하기 위한 제1 원격 액세스 유닛;을포함하는 것을 특징으로 하는 가상화 시스템."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "원격에서 컨테이너의 내부 프로그램을 호출할 수 있도록 하기 위한 방법이 제공된다. 본 원격 호출 방법은 제1 컨테이너를 생성하는 제1 생성단계; 및 제1 컨테이너의 프로그램을 원격에서 호출하는 제1 호출단계;를 포함한다. 이에 의해, 원격에서 컨테이너의 내부 프로그램을 호출할 수 있게 되어, 컨테이너 기반의 가상화 시스템에 대해 서도 프로그램 기능 수정, 편집 등이 원격에서 가능해진다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨팅 자원들을 사용자에게 배포하는 가상화 기술에 관한 것으로, 더욱 상세하게는 독립적인 운영체 제가 탑재된 프로세스 실행 방식의 가상 환경을 제공하는 컨테이너 기반 가상화 기술에 관한 것이다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대량의 메모리 영역과 CPU 성능을 요구하는 기존의 가상머신의 단점을 해결할 수 있는 컨테이너 방식의 가상화 기술은, 격리된 네트워크, CPU, 메모리, 디스크 공간에서 프로세서 실행을 통해 사용자 서비스를 지원하므로, 실행 속도 향상과, 컴퓨팅 자원 사용을 최소화할 수 있다는 장점이 있다. 이와 같은 컨테이너 방식의 가상화 기술은, 호스트 운영체제에서 네트워크 추상화가 필수적인데, 현재의 로컬 네트워크 추상화 기법으로는 컨테이너의 내부 프로그램을 호출 등에 관한 기능을 원격지에서 수행하는데 한계가 있다. 이에, 원격에서 컨테이너의 내부 프로그램을 호출할 수 있도록 하기 위한 방안의 모색이 요청된다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로서, 본 발명의 목적은, 원격에서 컨테이너의 내 부 프로그램을 호출할 수 있도록 하기 위한 방법을 제공함에 있다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른, 원격 호출 방법은 제1 컨테이너를 생성하는 제1 생성 단계; 및 제1 컨테이너의 프로그램을 원격에서 호출하는 제1 호출단계;를 포함한다. 제1 호출 단계는, 제1 컨테이너에 설치된 제1 원격 액세스 유닛을 통해 제1 컨테이너의 프로그램을 원격에서 호 출하는 것일 수 있다. 로컬 네트워크 추상화 모듈에 설치된 원격 네트워크 기능 모듈을 통해 제1 원격 액세스 유닛에 접근하는 것일 수 있다. 본 실시예에 따른 원격 호출 방법은 제2 컨테이너를 생성하는 제2 생성단계; 및 제2 컨테이너의 프로그램을 원 격에서 호출하는 제2 호출단계;를 더 포함할 수 있다. 제2 호출 단계는, 제2 컨테이너에 설치된 제2 원격 액세스 유닛을 통해 제2 컨테이너의 프로그램을 원격에서 호 출하는 것일 수 있다.로컬 네트워크 추상화 모듈에 설치된 원격 네트워크 기능 모듈을 통해 제2 원격 액세스 유닛에 접근하는 것일 수 있다. 호출은, 프로그램의 편집을 위한 것일 수 있다. 한편, 본 발명의 다른 실시예에 따른, 가상화 시스템은 프로그램이 설치된 제1 컨테이너; 및 제1 컨테이너에 설 치되며, 제1 컨테이너에 설치된 프로그램을 원격에서 호출하기 위한 제1 원격 액세스 유닛;을 포함한다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상 설명한 바와 같이, 본 발명의 실시예들에 따르면, 원격에서 컨테이너의 내부 프로그램을 호출할 수 있게 되어, 컨테이너 기반의 가상화 시스템에 대해서도 프로그램 기능 수정, 편집 등이 원격에서 가능해진다."}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 도 1은 컨테이너 기반 가상화 시스템의 구조를 도시한 도면이다. 컨테이너 기반 가상화는 독립적인 운영체제가 탑재된 가상머신 개념과 차별화된 프로세스 실행 방식의 가상환경을 제공하여, 시스템의 안정성과 보안성을 보 다 향상시킨 구조이다. 컨테이너 기반 가상화 시스템은, 도 1에 도시된 바와 같이, 컨테이너들(110-1, 110-2, 110-3 및 110-n), 로컬 네트워크 추상화 모듈 및 운영체제를 포함하여 구축된다. 컨테이너들(110-1, 110-2, 110-3 및 110-n)은 사용자 별로 격리된 자원으로 생성한다. 컨테이너들(110-1, 110- 2, 110-3 및 110-n)에는 각각에서 요구하는 내부 프로그램들이 각각 설치된다. 컨테이너들(110-1, 110-2, 110-3 및 110-n)에 설치된 내부 프로그램들은, 독립적으로 운영되고 플러그 앤 플레 이(Plug and Play)가 가능한 인공지능 기능 구현을 위한 지능형 프로그램, 지능형 컴포넌트이다. 컨테이너들(110-1, 110-2, 110-3 및 110-n)은 지능형 컴포넌트 이외의 다른 종류의 프로그램이 설치될 수도 있 으며, 이 경우에도 본 발명의 기술적 사상이 적용될 수 있다. 로컬 네트워크 추상화 모듈은 가상화 시스템 내에서 컨테이너들(110-1, 110-2, 110-3 및 110-n)의 통신 인 터페이스를 위한 모듈이다. 컨테이너의 내부 프로그램에 대한 원격 호출이 가능한 컨테이너 기반 가상화 시스템의 구조에 대해, 이하에서 도 2를 참조하여 상세히 설명한다. 도 2는 본 발명의 일 실시예에 따른 가상화 시스템을 도시한 도면이다. 도 2에 도시된 바와 같이, 컨테이너들(110-1, 110-2, 110-3 및 110-n)에는 다양한 목적의 내부 프로그램(알고리 즘, 라이브러리 등) 외에도, 원격 액세스 유닛이 각각 설치된다. 원격 액세스 유닛은 외부 프로그램이 컨테이너들(110-1, 110-2, 110-3 및 110-n)의 내부 프로그램을 호출 하여, 내부 프로그램에 대한 기능 변경, 편집 등을 가능하도록 한다. 컨테이너-1(110-1)에 설치된 원격 액세스 유닛은 컨테이너-1(110-1)의 내부 프로그램 호출을 위한 것이고, 컨테이너-2(110-2)에 설치된 원격 액세스 유닛은 컨테이너-2(110-2)의 내부 프로그램 호출을 위한 것이며, 컨테이너-3(110-3)에 설치된 원격 액세스 유닛은 컨테이너-3(110-3)의 내부 프로그램 호출을 위한 것이고, 컨테이너-n(110-n)에 설치된 원격 액세스 유닛은 컨테이너-n(110-n)의 내부 프로그램 호출을 위한 것이다. 또한, 도 2에 도시된 바와 같이, 로컬 네트워크 추상화 모듈에는 원격 네트워크 기능 모듈가 구비되 어 있다. 원격 네트워크 기능 모듈은 외부 프로그램이 컨테이너들(110-1, 110-2, 110-3 및 110-n)의 원격 액세스 유닛들에 접근/연동할 수 있도록 지원한다. 도 3은 본 발명의 다른 실시예에 따른 컨테이너 기반 프로그램의 원격 호출 방법의 설명에 제공되는 흐름도이다. 도 3에 도시된 바와 같이, 컨테이너를 생성하면(S210), 컨테이너에 내부 프로그램(지능형 컴포넌트)을 설치하고 (S220), 컨테이너 기반 프로그램의 원격 호출이 가능하도록 원격 액세스 유닛을 설치한다(S230). 한편, S220단계와 S230단계의 순서, 즉, 컨테이너에 내부 프로그램과 원격 액세스 유닛을 설치하는 순서는, 서 로 바꾸어 구현하여도 무방하다. 다음, 외부 프로그램이 로컬 네트워크 추상화 모듈의 원격 네트워크 기능 모듈을 통해 호출하고자 하는 내부 프 로그램이 설치된 컨테이너의 원격 액세스 유닛에 접근한다(S240). 이후, 외부 프로그램이 원격 액세스 유닛과 연동하여, 컨테이너의 내부 프로그램을 호출하게 된다(S250). 도 4는, 도 2에 도시된 가상화 시스템을 구현할 수 있는 클라우드 서버의 하드웨어 구조를 도시한 도면이다. 도 4에 도시된 바와 같이, 클라우드 서버는, 통신부, 프로세서 및 스토리지를 포함한다. 통신부는 외부 프로그램이 실행되는 외부 단말과 통신을 위한 수단이고, 프로세서는 전술한 가상화 시스템을 구성/운용하며, 원격 호출에 필요한 절차들을 수행하고, 스토리지는 가상화 시스템 구성/운용에 필요한 저장공간을 제공한다. 지금까지, 컨테이너 내부 프로그램(지능형 컴포넌트)에 관한 원격 호출 방법에 대해 바람직한 실시예를 들어 상 세히 설명하였다. 본 발명의 실시예에서는 독립적으로 운영되며 플러그 앤 플레이가 가능한 다양한 지능형 컴포넌트를 원격 함수 호출하기 위한 방안을 제시하였으며, 이를 통해 가상화 자원의 성능 및 효율성을 극대화시킬 수 있도록 하였다. 한편, 본 실시예에 따른 장치와 방법의 기능을 수행하게 하는 컴퓨터 프로그램을 수록한 컴퓨터로 읽을 수 있는 기록매체에도 본 발명의 기술적 사상이 적용될 수 있음은 물론이다. 또한, 본 발명의 다양한 실시예에 따른 기 술적 사상은 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터로 읽을 수 있는 코드 형태로 구현될 수도 있다. 컴퓨터로 읽을 수 있는 기록매체는 컴퓨터에 의해 읽을 수 있고 데이터를 저장할 수 있는 어떤 데이터 저장 장 치이더라도 가능하다. 예를 들어, 컴퓨터로 읽을 수 있는 기록매체는 ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광디스크, 하드 디스크 드라이브, 등이 될 수 있음은 물론이다. 또한, 컴퓨터로 읽을 수 있는 기록매체 에 저장된 컴퓨터로 읽을 수 있는 코드 또는 프로그램은 컴퓨터간에 연결된 네트워크를 통해 전송될 수도 있다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2017-0156494", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2017-0156494", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 컨테이너 기반 가상화 시스템의 구조를 도시한 도면, 도 2는 본 발명의 일 실시예에 따른 가상화 시스템을 도시한 도면, 도 3은 본 발명의 다른 실시예에 따른 컨테이너 기반 프로그램의 원격 호출 방법의 설명에 제공되는 흐름도, 그 리고, 도 4는, 도 2에 도시된 가상화 시스템을 구현할 수 있는 클라우드 서버의 하드웨어 구조를 도시한 도면이다."}
