{"patent_id": "10-2014-0099009", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2015-0098174", "출원번호": "10-2014-0099009", "발명의 명칭": "바이너리 생성 방법 및 그 전자 장치", "출원인": "삼성전자주식회사", "발명자": "채상원"}}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에서, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하는 동작;상기 이미지 리소스에 대한 속성을 판단하는 동작;상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 및상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 선택적으로 변환하는 동작은,상기 전자 장치와 통신 가능한 외부 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함하는방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 전자 장치로 전송하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 공개특허 10-2015-0098174-3-상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 동작을 포함하는방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 이미지 리소스에 대한 속성을 판단하는 동작은상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "전자 장치는, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하고,상기 이미지 리소스에 대한 속성을 판단하고,상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하고,상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하도록 제어하는 프로세서를 포함하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서, 상기 프로세서는,상기 전자 장치와 통신 가능한 외부 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,상기 프로세서는,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8항에 있어서,상기 프로세서는,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지결정하는 전자 장치공개특허 10-2015-0098174-4-청구항 12 제8항에 있어서, 상기 프로세서는,상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 전자 장치로 전송하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제8항에 있어서, 상기 프로세서는,상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8항에 있어서, 상기 프로세서는,상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "컴퓨터로 판독 가능한, 명령어들을 저장하고 있는 기록 매체에 있어서전자 장치에서, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하는 동작;상기 이미지 리소스에 대한 속성을 판단하는 동작;상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 및상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 동작을 실행시키기 위한 프로그램을 기록한 컴퓨터 판독 가능한 기록매체."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제1항에 있어서,상기 전자 장치의 소모 전류, 발열, 그래픽 프로세서의 특성 및 상기 리소스에 대한 속성에 기반하는 병렬화 수행 정보를 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 병렬화 수행 정보는 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작에서 병렬화 가능한단계 정보를 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "공개특허 10-2015-0098174-5-제16항에 있어서,상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작은,상기 병렬화 수행 정보에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "어플리케이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확인하는 동작;상기 이미지 리소스에 대한 속성을 판단하는 동작;상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치패키지를 리패키징하는 동작;상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 선택적으로 변환하는 동작은,상기 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제19항에 있어서,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제19항에 있어서,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제19항에 있어서, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 동작을 포함하는방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "공개특허 10-2015-0098174-6-제19항에 있어서, 상기 이미지 리소스에 대한 속성을 판단하는 동작은상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제19항에 있어서,상기 전자 장치의 소모 전류, 발열, 그래픽 프로세서의 특성 및 상기 리소스에 대한 속성에 기반하는 병렬화 수행 정보를 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제25항에 있어서,상기 병렬화 수행 정보는 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작에서 병렬화 가능한단계 정보를 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제25항에 있어서,상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작은,상기 병렬화 수행 정보에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작을 포함하는 방법."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "어플리케이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확인하고,상기 이미지 리소스에 대한 속성을 판단하고,상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하고,상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치패키지를 리패키징하고,상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하도록 제어하는 프로세서를 포함하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "제28항에 있어서, 상기 프로세서는,상기 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "제28항에 있어서,공개특허 10-2015-0098174-7-상기 프로세서는,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_31", "content": "제28항에 있어서,상기 프로세서는,상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_32", "content": "제28항에 있어서, 상기 프로세서는,상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_33", "content": "제28항에 있어서, 상기 프로세서는,상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 전자 장치."}
{"patent_id": "10-2014-0099009", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_34", "content": "컴퓨터로 판독 가능한, 명령어들을 저장하고 있는 기록 매체에 있어서어플리케이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확인하는 동작;상기 이미지 리소스에 대한 속성을 판단하는 동작;상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치패키지를 리패키징하는 동작;상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하는 동작을 실행시키기 위한 프로그램을 기록한 컴퓨터 판독 가능한 기록매체.명 세 서기 술 분 야본 발명의 다양한 실시예는 바이너리 생성을 위한 리소스를 변환하기 위한 기술에 관한 것이다. [0001]배 경 기 술공개특허 10-2015-0098174-8-전자 장치는 음성 및 영상 통화 기능, 정보 입출력 기능 및 데이터 송수신과 같은 다양한 서비스를 제공하는 멀 [0002]티미디어 기기로 발전하고 있다. 전자 장치에서 어플리케이션(Application)이 실행(Launch)되는 경우, CPU에서는 어플리케이션의 리소스 파일 중에서 PNG와 JPG와 같은 일반 압축 이미지를 텍스처 압축 이미지로 변경하여GPU에 전달한다.발명의 내용해결하려는 과제상술한 바와 같이 전자 장치는 어플리케이션 실행 시, 어플리케이션에서 리소스 파일 중 압축 이미지를 텍스처 [0003]압축 이미지로 변경하는 과정을 매번 수행함으로써, 어플리케이션 시작 시간이 지연될 수 있다.본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리 [0004]소스 파일을 최적화하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리소스 파일 중 이미지 파일을 압축된 텍스처(Compressed Texture)로 변환하기 위한 장치 및 방법을 제공할 수 있다.본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 [0005]중 이미지 파일을 다른 이미지 타입으로 변환하기 위한 장치 및 방법을 제공할 수 있다.과제의 해결 수단상술한 바와 같이 전자 장치는 어플리케이션 실행 시, 어플리케이션에서 리소스 파일 중 압축 이미지를 텍스처 [0006]압축 이미지로 변경하는 과정을 매번 수행함으로써, 어플리케이션 시작 시간이 지연될 수 있다.본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리 [0007]소스 파일을 최적화하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리소스 파일 중 이미지 파일을 압축된 텍스처(Compressed Texture)로 변환하기 위한 장치 및 방법을 제공할 수 있다.본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 [0008]중 이미지 파일을 다른 이미지 타입으로 변환하기 위한 장치 및 방법을 제공할 수 있다.발명의 효과상술한 바와 같이 전자 장치에서 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 중 이미 [0009]지 파일을 압축된 텍스처 또는 다른 이미지 타입으로 변환함으로써, 어플리케이션의 실행 시간을 감소시키고,리소스 파일이 차지하는 메모리 사용량을 감소시킬 수 있다.도면의 간단한 설명도 1은 본 발명의 다양한 실시예에 따른 전자 장치에 대한 블록 구성을 도시하고 있다. [0010]도 2는 본 발명의 다양한 실시예에 따른 프로세서의 상세 블록 구성을 도시하고 있다.도 3은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다.도 4는 다양한 실시예들에 따른, 응용프로그램 설치 파일의 예를 도시하고 있다.도 5는 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다.도 6은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다.도 7은 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다.공개특허 10-2015-0098174-9-발명을 실시하기 위한 구체적인 내용이하, 본 발명의 다양한 실시예가 첨부된 도면과 연관되어 기재된다. 본 발명의 다양한 실시예는 다양한 변경을 [0011]가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들이 도면에 예시되고 관련된 상세한 설명이 기재되어 있다. 그러나, 이는 본 발명의 다양한 실시예를 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본발명의 다양한 실시예의 사상 및 기술 범위에 포함되는 모든 변경 및/또는 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용되었다.본 발명의 다양한 실시예에서 사용될 수 있는“포함한다” 또는 “포함할 수 있다” 등의 표현은 개시 [0012](disclosure)된 해당 기능, 동작 또는 구성요소 등의 존재를 가리키며, 추가적인 하나 이상의 기능, 동작 또는구성요소 등을 제한하지 않는다. 또한, 본 발명의 다양한 실시예에서, \"포함하다\" 또는 \"가지다\" 등의 용어는명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 발명의 다양한 실시예에서 “또는” 또는 “ A 또는/및 B 중 적어도 하나” 등의 표현은 함께 나열된 단어들 [0013]의 어떠한, 그리고 모든 조합을 포함한다. 예를 들어, “A 또는 B” 또는 “ A 또는/및 B 중 적어도 하나” 각각은, A를 포함할 수도, B를 포함할 수도, 또는 A 와 B 모두를 포함할 수도 있다.본 발명의 다양한 실시예에서 사용된 “제 1,”“제2,”“첫째,”또는“둘째,”등의 표현들은 다양한 실시예들 [0014]의 다양한 구성요소들을 수식할 수 있지만, 해당 구성요소들을 한정하지 않는다. 예를 들어, 표현들은 해당 구성요소들의 순서 및/또는 중요도 등을 한정하지 않는다. 표현들은 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 수 있다. 예를 들어, 제1 사용자 기기와 제 2 사용자 기기는 모두 사용자 기기이며, 서로 다른 사용자 기기를 나타낸다. 예를 들어, 본 발명의 다양한 실시예의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다.어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 어떤 구성요소가 다 [0015]른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 어떤 구성요소와 다른 구성요소사이에 새로운 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 어떤 구성요소와 다른 구성요소 사이에 새로운 다른 구성요소가 존재하지 않는 것으로 이해될 수 있어야 할 것이다. 본 발명의 다양한 실시예에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명의 다 [0016]양한 실시예를 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명의 [0017]다양한 실시예가 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를가지고 있다. 일반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥 상 가지는 의미와 일치하는 의미를 가지는 것으로 해석되어야 하며, 본 발명의 다양한 실시예에서 명백하게 정의되지 않는 한,이상적이거나 과도하게 형식적인 의미로 해석되지 않는다.본 발명의 다양한 실시예에 따른 전자 장치는 스마트 폰(smartphone), 태블릿 PC(tablet personal computer), [0018]이동 전화기(mobile phone), 화상전화기, 전자북 리더기(e-book reader), 데스크탑 PC(desktop personalcomputer), 랩탑 PC(laptop personal computer), 넷북 컴퓨터(netbook computer), PDA(personal digitalassistant), PMP(portable multimedia player), MP3 플레이어, 모바일 의료기기, 카메라(camera), 또는 웨어러블 장치(wearable device)(예: 전자 안경과 같은 head-mounted-device(HMD), 전자 의복, 전자 팔찌, 전자 목걸이, 전자 앱세서리(appcessory), 전자 문신, 또는 스마트 와치(smart watch))중 적어도 하나를 포함할 수 있다. 어떤 실시예들에 따르면, 전자 장치는 스마트 가전 제품(smart home appliance)일 수 있다. 스마트 가전 [0019]제품은, 예를 들자면, 전자 장치는 텔레비전, DVD(digital video disk) 플레이어, 오디오, 냉장고, 에어컨, 청소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), TV 박스(예를 들면, 삼성 HomeSync™,애플TV™, 또는 구글 TV™), 게임 콘솔(game consoles), 전자 사전, 전자 키, 캠코더(camcorder), 또는 전자액자 중 적어도 하나를 포함할 수 있다.어떤 실시예들에 따르면, 전자 장치는 각종 의료기기(예: MRA(magnetic resonance angiography), MRI(magnetic [0020]공개특허 10-2015-0098174-10-resonance imaging), CT(computed tomography), 촬영기, 초음파기 등), 네비게이션(navigation) 장치, GPS 수신기(global positioning system receiver), EDR(event data recorder), FDR(flight data recorder), 자동차인포테인먼트(infotainment) 장치, 선박용 전자 장비(예: 선박용 항법 장치 및 자이로 콤파스 등), 항공 전자기기(avionics), 보안 기기, 차량용 헤드 유닛, 산업용 또는 가정용 로봇, 금융 기관의 ATM(automatic teller’smachine) 또는 상점의 POS(point of sales) 중 적어도 하나를 포함할 수 있다.어떤 실시예들에 따르면, 전자 장치는 가구(furniture) 또는 건물/구조물의 일부, 전자 보드(electronic [0021]board), 전자 사인 입력장치(electronic signature receiving device), 프로젝터(projector), 또는 각종 계측기기(예: 수도, 전기, 가스, 또는 전파 계측 기기 등) 중 적어도 하나를 포함할 수 있다. 본 발명의 다양한 실시예에 따른 전자 장치는 전술한 다양한 장치들 중 하나 또는 그 이상의 조합일 수 있다. 또한, 본 발명의 다양한 실시예에 따른 전자 장치는 플렉서블 장치일 수 있다. 또한, 본 발명의 다양한 실시예에 따른 전자 장치는전술한 기기들에 한정되지 않음은 당업자에게 자명하다.이하, 첨부된 도면을 참조하여 다양한 실시예에 따른 전자 장치에 대해서 살펴본다. 다양한 실시예에서 이용되 [0022]는 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공지능 전자 장치)를지칭할 수 있다. 도 1은 다양한 실시예에 따른, 전자 장치(101)를 포함하는 네트워크 환경(100)를 도시한다. 도 1을 참조하면, [0023]전자 장치(101)는 버스(110), 프로세서(120), 메모리(130), 입출력 인터페이스(140), 디스플레이(150), 통신 인터페이스(160) 및 바이너리 생성 모듈(170)을 포함할 수 있다.버스(110)는 전술한 구성요소들을 서로 연결하고, 전술한 구성요소들 간의 통신(예: 제어 메시지)을 전달하는 [0024]회로일 수 있다.프로세서(120)는, 예를 들면, 버스(110)를 통해 전술한 다른 구성요소들(예: 메모리(130), 입출력 인터페이스 [0025](140), 디스플레이(150), 통신 인터페이스(160), 또는 바이너리 생성 모듈(170) 등)로부터 명령을 수신하여, 수신된 명령을 해독하고, 해독된 명령에 따른 연산이나 데이터 처리를 실행할 수 있다. 미도시 되었지만, 그래픽프로세서는 프로세서(120)의 그래픽 작업으로 인해 생기는 병목 현상을 해결하기 위한 것으로 2D 또는 3D 그래픽을 프로세서(120)가 처리하는 것보다 효율적으로 처리할 수 있다. 한 실시예에 따르면, PNG/JPEG와 같은 리소스가 프로세서(120)에서 압축된 텍스처로 변환되면, 그래픽 프로세서는 압축된 텍스처를 처리하여 디스플레이(150)를 통해 표시하도록 제어할 수 있다.메모리(130)는, 프로세서(120) 또는 다른 구성요소들(예: 입출력 인터페이스(140), 디스플레이(150), 통신 인터 [0026]페이스(160), 또는 바이너리 생성 모듈(170) 등)로부터 수신되거나 프로세서(120) 또는 다른 구성요소들에 의해생성된 명령 또는 데이터를 저장할 수 있다. 메모리(130)는, 예를 들면, 커널(131), 미들웨어(132), 어플리케이션 프로그래밍 인터페이스(API: application programming interface)(133) 또는 어플리케이션(134) 등의 프로그래밍 모듈들을 포함할 수 있다. 전술한 각각의 프로그래밍 모듈들은 소프트웨어, 펌웨어, 하드웨어 또는 이들중 적어도 둘 이상의 조합으로 구성될 수 있다.커널(131)은 나머지 다른 프로그래밍 모듈들, 예를 들면, 미들웨어(132), API(133) 또는 어플리케이션(134)에 [0027]구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스(110), 프로세서(120) 또는 메모리(130) 등)을 제어 또는 관리할 수 있다. 또한, 커널(131)은 미들웨어(132), API(133) 또는 어플리케이션(134)에서 전자 장치(101)의 개별 구성요소에 접근하여 제어 또는 관리할 수 있는 인터페이스를 제공할 수 있다. 미들웨어(132)는 API(133) 또는 어플리케이션(134)이 커널(131)과 통신하여 데이터를 주고받을 수 있도록 중개 [0028]역할을 수행할 수 있다. 또한, 미들웨어(132)는 어플리케이션(134)로부터 수신된 작업 요청들과 관련하여, 예를들면, 어플리케이션(134) 중 적어도 하나의 어플리케이션에 전자 장치(101)의 시스템 리소스(예: 버스(110), 프로세서(120) 또는 메모리(130) 등)를 사용할 수 있는 우선 순위를 배정하는 등의 방법을 이용하여 작업 요청에대한 제어(예: 스케쥴링 또는 로드 밸런싱)을 수행할 수 있다.API(133)는 어플리케이션(134)이 커널(131) 또는 미들웨어(132)에서 제공되는 기능을 제어하기 위한 인터페이스 [0029]로, 예를 들면, 파일 제어, 창 제어, 화상 처리 또는 문자 제어 등을 위한 적어도 하나의 인터페이스 또는 함수(예: 명령어)를 포함할 수 있다. 다양한 실시예에 따르면, 어플리케이션(134)는 SMS/MMS 어플리케이션, 이메일 어플리케이션, 달력 [0030]어플리케이션, 알람 어플리케이션, 건강 관리(health care) 어플리케이션(예: 운동량 또는 혈당 등을 측정하는어플리케이션) 또는 환경 정보 어플리케이션(예: 기압, 습도 또는 온도 정보 등을 제공하는 어플리케이션) 등을공개특허 10-2015-0098174-11-포함할 수 있다. 추가적으로 또는 대체적으로, 어플리케이션(134)은 전자 장치(101)와 외부 전자 장치(예: 전자장치(104)) 사이의 정보 교환과 관련된 어플리케이션일 수 있다. 정보 교환과 관련된 어플리케이션은, 예를 들어, 외부 전자 장치에 특정 정보를 전달하기 위한 알림 전달(notification relay) 어플리케이션, 또는 외부 전자 장치를 관리하기 위한 장치 관리(device management) 어플리케이션을 포함할 수 있다. 예를 들면, 알림 전달 어플리케이션은 전자 장치(101) 의 다른 어플리케이션(예: SMS/MMS 어플리케이션, 이메일 [0031]어플리케이션, 건강 관리 어플리케이션 또는 환경 정보 어플리케이션 등)에서 발생한 알림 정보를 외부 전자 장치(예: 전자 장치(104))로 전달하는 기능을 포함할 수 있다. 추가적으로 또는 대체적으로, 알림 전달 어플리케이션은, 예를 들면, 외부 전자 장치(예: 전자 장치(104))로부터 알림 정보를 수신하여 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치(101)와 통신하는 외부 전자 장치(예: 전자 장치(104))의적어도 일부에 대한 기능(예: 외부 전자 장치 자체(또는, 일부 구성 부품)의 턴온/턴오프 또는 디스플레이의 밝기(또는, 해상도) 조절), 외부 전자 장치에서 동작하는 어플리케이션 또는 외부 전자 장치에서 제공되는 서비스(예: 통화 서비스 또는 메시지 서비스)를 관리(예: 설치, 삭제 또는 업데이트)할 수 있다. 다양한 실시예에 따르면, 어플리케이션(134)은 외부 전자 장치(예: 전자 장치(104))의 속성(예: 전자 장치의 종 [0032]류)에 따라 지정된 어플리케이션을 포함할 수 있다. 예를 들어, 외부 전자 장치가 MP3 플레이어인 경우, 어플리케이션(134)은 음악 재생과 관련된 어플리케이션을 포함할 수 있다. 유사하게, 외부 전자 장치가 모바일 의료기기인 경우, 어플리케이션(134)은 건강 관리와 관련된 어플리케이션을 포함할 수 있다. 한 실시예에 따르면, 어플리케이션(134)은 전자 장치(101)에 지정된 어플리케이션 또는 외부 전자 장치(예: 서버(106) 또는 전자 장치(104))로부터 수신된 어플리케이션 중 적어도 하나를 포함할 수 있다.입출력 인터페이스(140)은, 입출력 장치(예: 센서, 키보드 또는 터치 스크린)를 통하여 사용자로부터 입력된 명 [0033]령 또는 데이터를, 예를 들면, 버스(110)를 통해 프로세서(120), 메모리(130), 통신 인터페이스(160), 또는 바이너리 생성 모듈(170)에 전달할 수 있다. 예를 들면, 입출력 인터페이스(140)은 터치 스크린을 통하여 입력된사용자의 터치에 대한 데이터를 프로세서(120)로 제공할 수 있다. 또한, 입출력 인터페이스(140)은, 예를 들면,버스(110)을 통해 프로세서(120), 메모리(130), 통신 인터페이스(160), 또는 바이너리 생성 모듈(170)로부터 수신된 명령 또는 데이터를 입출력 장치(예: 스피커 또는 디스플레이)를 통하여 출력할 수 있다. 예를 들면, 입출력 인터페이스(140)은 프로세서(120)를 통하여 처리된 음성 데이터를 스피커를 통하여 사용자에게 출력할 수 있다. 디스플레이(150)은 사용자에게 각종 정보(예: 멀티미디어 데이터 또는 텍스트 데이터 등)을 표시할 수 있다. [0034]통신 인터페이스(160)은 전자 장치(101)와 외부 장치(예: 전자 장치(104) 또는 서버(106)) 간의 통신을 연결할 [0035]수 있다. 예를 들면, 통신 인터페이스(160)은 무선 통신 또는 유선 통신을 통해서 네트워크(162)에 연결되어 외부 장치와 통신할 수 있다. 무선 통신은, 예를 들어, Wifi(wireless fidelity), BT(Bluetooth), NFC(nearfield communication), GPS(global positioning system) 또는 cellular 통신(예: LTE, LTE-A, CDMA, WCDMA,UMTS, WiBro 또는 GSM 등) 중 적어도 하나를 포함할 수 있다. 유선 통신은, 예를 들어, USB(universal serialbus), HDMI(high definition multimedia interface), RS-232(recommended standard 232) 또는 POTS(plain oldtelephone service) 중 적어도 하나를 포함할 수 있다.한 실시예에 따르면, 네트워크(162)는 통신 네트워크(telecommunications network)일 수 있다. 통신 네트워크 [0036]는 컴퓨터 네트워크(computer network), 인터넷(internet), 사물 인터넷(internet of things) 또는 전화망(telephone network) 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 전자 장치(101)와 외부 장치 간의통신을 위한 프로토콜(예: transport layer protocol, data link layer protocol 또는 physical layerprotocol))은 어플리케이션(134), 어플리케이션 프로그래밍 인터페이스(133), 미들웨어(132), 커널(131) 또는통신 인터페이스(160) 중 적어도 하나에서 지원될 수 있다.한 실시예에 따르면, 서버(106)는 전자 장치(101)에서 구현되는 동작(또는, 기능)들 중 적어도 하나의 동작을 [0037]수행함으로써, 전자 장치(101)의 구동을 지원할 수 있다. 예를 들면, 서버(106)는 전자 장치(101)에 구현된 바이너리 생성 모듈(170)을 지원할 수 있는 바이너리 생성 서버 모듈(108)을 포함할 수 있다. 예컨대, 바이너리생성 서버 모듈(108)은 바이너리 생성 모듈(170)의 적어도 하나의 구성요소를 포함하여, 바이너리 생성 모듈(170)이 수행하는 동작들 중 적어도 하나의 동작을 수행(예: 대행)할 수 있다. 한 실시예에 따르면, 전자 장치(101)는 전자 장치(101)에 포함되는 전체 바이너리를 서버(106)로부터 전달받을 [0038]수 있다. 예를 들어, 서버(106)는 바이너리를 생성하고, 생성된 바이너리를 전자 장치(101)에 전송할 수 있다.공개특허 10-2015-0098174-12-바이너리 생성 모듈(170)은, 다른 구성요소들(예: 프로세서(120), 메모리(130), 입출력 인터페이스(140), 또는 [0039]통신 인터페이스(160) 등)로부터 획득된 정보 중 적어도 일부를 처리하고, 이를 다양한 방법으로 사용자에게 제공 할 수 있다. 예를 들면, 바이너리 생성 모듈(170)은 프로세서(120)를 이용하여 또는 이와는 독립적으로, 전자 장치(101)가 다른 전자 기기(예: 전자 장치(104) 또는 서버(106))와 연동하도록 전자 장치(101)의 적어도 일부 기능을 제어할 수 있다. 한 실시예에 따르면, 바이너리 생성 모듈(170)의 적어도 하나의 구성은 서버(106)(예: 바이너리 생성 서버 모듈(108))에 포함될 수 있으며, 서버(106)로부터 바이너리 생성 모듈(170)에서 구현되는 적어도 하나의 동작을 지원받을 수 있다. 후술하는 도 2를 통하여 바이너리 생성 모듈(170) 에 대한 추가적인 정보가 제공된다.도 2는 다양한 실시예들에 따른, 전자 장치(예: 전자 장치(101))의 바이너리 생성 모듈(170)의 블록도를 도시한 [0040]다. 도 2를 참조하면, 바이너리 생성 모듈(170)은 리소스 분석 모듈(210), 메타데이터 생성 모듈(212), 리소스 변환 [0041]모듈(220) 및 병렬화 수행 모듈(222)을 포함할 수 있다. 한 실시예에 따르면, 전자 장치는 리소스 분석 모듈(210), 메타데이터 생성 모듈(212), 리소스 변환 모듈(220) 및 병렬화 수행 모듈(222) 중 적어도 일부를 포함하지 않을 수도 있다. 바이너리 생성 모듈(170)은, 예를 들면, 어플리케이션에 대한 바이너리 코드를 생성할 수 있다. 예를 들어, 바 [0042]이너리 생성 모듈(170)은 어플리케이션에 대한 설치 또는 빌드를 수행할 수 있다. 예컨대, 바이너리 생성 모듈(210)은 어플리케이션에 대한 소스 코드(예: C/C++, JAVA, 안드로이드 등으로 작성된 코드)를 바이너리 코드로변환함으로써 어플리케이션에 대한 빌드를 수행하거나, 변환된 바이너리 코드를 메모리(130)에 저장함으로써 어플리케이션에 대한 설치를 수행할 수 있다.예컨대, 바이너리 생성 모듈(170)은, 리소스 변환 모듈(220)에 의해 변환된 리소스를 포함하여 바이너리를 생성 [0043]할 수 있다. 한 실시예에 따르면, 바이너리 생성 모듈(170)은 메모리(130)에 저장된 바이너리 생성 프로그램을이용하여 어플리케이션에 대한 바이너리를 생성할 수 있다.리소스 분석 모듈(210)은, 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 어플리케이션의 리소 [0044]스로부터 추출된 이미지 리소스는, 예를 들면, PNG 또는 JPG와 같은 압축된 이미지 형태이거나 또는 기 정의된압축된 텍스처 형태(예: 시스템의 설정 등에 따라 결정된 형식에 따라 미리 압축된 텍스처)를 포함할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈(210)은 추출된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 [0045]지 확인할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈(210)은 추출된 이미지 리소스가 그래픽 프로세서를 통해 병렬화 수행 가 [0046]능한 리소스인지 확인할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈(210)은 전자 장치(101)의 소모 전류,발열, 그래픽 프로세서의 특성에 기반하는 병렬화 수행 정보를 메타 데이터로 저장하기 위한 메타데이터 생성모듈(212)을 포함할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core)의 개수, 메모리, 처리가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭(clock), 소모 전류, 발열중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈(210)은 서로 다른 그래픽 프로세서에서 병렬화를 수행할 수 있도록 각 단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 병렬화 수행 정보는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화 수행하거나, 코어들의 클럭을 제어하여 병렬화를 수행하도록 그래픽 프로세서를 제어하기 위한 매개 변수(work group thread,work item, 대역폭)를 포함할 수 있다.리소스 변환 모듈(220)은, 예를 들면, 어플리케이션에 대한 바이너리가 생성되는 것에 기반하여, 해당 어플리케 [0047]이션에 대한 리소스를 변환할 수 있다. 어플리케이션은 복수의 소스코드와 리소스를 포함할 수 있다. 소스코드는 프로그램의 동작을 정의할 수 있고, 리소스는 어플리케이션에서 사용하는 오디오, 비디오, 이미지, 텍스트등의 정보를 포함할 수 있다. 예컨대, 바이너리 생성 모듈(170)에 의해 어플리케이션에 대한 설치 또는 빌드가수행되는 경우, 리소스 변환 모듈(220)은 리소스 분석 모듈(210)로부터 해당 어플리케이션의 리소스를 획득하여시스템(예: 전자 장치(101), 전자 장치(104), 또는 서버(106)에 대응하는 형태(예: 시스템에 최적화된 형태로서시스템의 설정(configuration) 또는 사양(specifications) 등에 따라 결정된 형태)로 변환할 수 있다. 한 실시예에 따르면, 리소스 변환 모듈(220)은 메모리(130)에 저장된 리소스 변환 프로그램을 이용함으로써 해당 어플리케이션에 대한 리소스를 변환할 수 있다.한 실시예에 따르면, 리소스 변환 모듈(220)은 추출된 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, [0048]공개특허 10-2015-0098174-13-추출된 리소스를 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 압축 이미지인 경우, 리소스 변환 모듈(220)은 압축 이미지를 디코딩하여 비트맵(Bitmap) [0049]이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 예컨대, 리소스 변환 모듈(220)은 그래픽 프로세서에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 기 정의된 압축된 텍스처인 경우, 리소스 변환 모듈(220)은 그래픽 프로세서에서 지원 가 [0050]능한 압축된 텍스처로 변환할 수도 있다. 또한, 그래픽 프로세서에서 지원 가능한 압축된 텍스처로 변환 가능한리소스가 아닌 경우, 리소스 변환 모듈(220)은 리소스를 다른 리소스 타입으로 변환할 수도 있다.한 실시예에 따르면, 리소스 변환 모듈(220)은 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 [0051]이용하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환기 위해 병렬화 수행 모듈(222)을 포함할 수 있다.한 실시예에 따르면, 병렬화 수행 모듈(222)은 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다.다양한 실시예에 따르면, 전자 장치는, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 [0052]어플리케이션에 대한 이미지 리소스를 확인하고, 상기 이미지 리소스에 대한 속성을 판단하고, 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하고, 상기 이미지 리소스가 변환된 경우, 상기변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하도록 제어하는 프로세서를 포함하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 전자 장치와 통신 가능한 외부 전자 장치의 설정에 기반하여 [0053]상기 이미지 리소스를 변환하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 [0054]상기 바이너리 코드를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를변환할 것인지 결정하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 [0055]상기 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 [0056]전자 장치로 전송하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 [0057]이미지 리소스로 변환하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축 [0058]된 텍스처 형태인지 판단하는 전자 장치일 수 있다.다양한 실시예에 따르면, 전자 장치는, 어플리케이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확 [0059]인하고, 상기 이미지 리소스에 대한 속성을 판단하고, 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하고, 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기어플리케이션에 대한 설치 패키지를 리패키징하고, 상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하도록 제어하는 프로세서를 포함하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 [0060]전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 [0061]설치를 진행하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한설치를 진행하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 [0062]설치를 진행하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리공개특허 10-2015-0098174-14-케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 [0063]이미지 리소스로 변환하는 전자 장치일 수 있다.다양한 실시예에 따르면, 상기 프로세서는, 상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축 [0064]된 텍스처 형태인지 판단하는 전자 장치일 수 있다.도 3은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. [0065]도 3을 참조하면 301단계에서 전자 장치는 바이너리 생성 이벤트가 발생하는지 확인할 수 있다. 예를 들어, 전 [0066]자 장치는 어플리케이션에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 다른 예를 들어, 전자 장치는 어플리케이션에 대한 빌드 이벤트가 발생하는지 확인할 수 있다.바이너리 생성 이벤트가 발생한 경우, 303단계에서 전자 장치는 바이너리 생성을 위한 리소스를 추출할 수 [0067]있다. 예를 들어, 전자 장치는 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다.305단계에서 전자 장치는 압축된 텍스처로 변환 가능한 리소스인지 확인할 수 있다. 예를 들어, 전자 장치는 추 [0068]출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 다른 예를 들어, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다.압축된 텍스처로 변환 가능한 리소스인 경우, 307단계에서 전자 장치는 리소스를 압축된 텍스처로 변환할 수 있 [0069]다. 예를 들어, 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 이때, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 다른 예를 들어, 리소스가 기 정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 311단계에서 전자 장치는 리소스를 다른 리소스 타입으로 변 [0070]환할 수 있다. 예를 들어, 전자 장치는 이미지 리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있다. 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 309단계에서 전자 장치는 바이너리를 생성할 [0071]수 있다. 예를 들어, 전자 장치는 변환된 리소스에 기반하여 어플리케이션의 설치 또는 빌드를 완료할 수 있다.도 4는 다양한 실시예들에 따른, 응용프로그램 설치 파일의 예를 도시하고 있다. [0072]도 4를 참조하면, 응용프로그램 설치 파일(401)은 제1폴더(411), 제2폴더(413), 제3폴더(415)와 같은 하나 또는 [0073]그 이상의 폴더들, 및 제1파일(421), 제2파일(423), 제3파일(425)과 같은 하나 또는 그 이상의 파일들을 포함할수 있다. 여기서, 응용프로그램 설치 파일(401)은 안드로이드 운영체제의 APK(application package) 파일일 수있다.제1폴더(411)는 응용프로그램의 외부 리소스에 관한 데이터 또는 소프트웨어 프로그램을 저장하는 폴더일 수 있 [0074]다. 예를 들면, 제1폴더(411)는 안드로이드 운영체제의 APK(application package) 파일의 “assets” 폴더일수 있다.제2폴더(413)는, 응용프로그램 자체의 메타 정보 데이터를 저장할 수 있다. 여기서, 응용프로그램 자체의 메타 [0075]정보 데이터는 응용프로그램 배포시 사용자가 인증서를 통해 전자 서명한 내용을 포함할 수 있다. 예를 들어,제2폴더(413)는 안드로이드 운영체제의 APK(application package) 파일의 “META-INF” 폴더일 수 있다.제3폴더(415)는 응용프로그램의 내부 리소스에 관한 데이터 또는 소프트웨어 프로그램을 저장하는 폴더일 수 있 [0076]다. 예를 들면, 제3폴더(415)는 안드로이드 운영체제의 APK(application package) 파일의 “res”폴더일 수 있다. 본 발명의 다양한 실시예들에 따르면, 제3폴더(415)는 이미지 리소스 파일을 포함할 수 있다. 한 실시예에 따르면, 도 4에 도시되었듯이, 이미지 리소스 파일은 응용프로그램 설치 파일(401)의 제3폴더(41 [0077]공개특허 10-2015-0098174-15-5)에 위치할 수 있다. 이는 하나의 실시예에 불과하며, 이미지 리소스 파일은 응용프로그램 설치 파일(401)의다른 폴더 또는 다른 위치에 위치할 수도 있다.제1파일(421)은 응용프로그램의 기본 설정 정보를 저장하는 파일로, 응용프로그램을 구성하는 복수의 파일들 중 [0078]에 가장 먼저 참조되는 파일일 수 있다. 예를 들어, 제1파일(421)은 안드로이드 운영체제의 “AndroidManifest.xml”일 수 있다. 본 발명의 다양한 실시예에 따르면 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트는 제1파일(421)에 포함될 수 있다.한 실시예에 따르면, 도 4에 도시되었듯이, 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트는 응용프 [0079]로그램 설치 파일(401)의 제1파일(421)에 포함될 수 있다. 이는 하나의 실시예에 불과하며, 이미지 리소스들 중압축된 텍스처로 변환 가능한 리스트는 응용프로그램 설치 파일(401)의 다른 파일에 포함될 수도 있다.제2파일(423)은 응용프로그램의 소스 코드를 컴파일하여 생성된 파일로, 응용프로그램의 동작을 구성하는 클래 [0080]스들의 정보를 포함할 수 있다. 예를 들어, 제2파일(423)은 안드로이드 운영체제의 “classes.dex”일 수 있다. 제3파일(425)은 응용프로그램의 실행 이전에, 미리 컴파일된 리소스들을 포함할 수 있다. 예를 들면, 제3파일 [0081](425)은 안드로이드 운영체제의 “resources.arsc”일 수 있다.상술한 실시예에서는 전자 장치에서, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 이미지 [0082]리소스를 변환한다.다른 실시예에서는 전자 장치는 어플리케이션의 설치 시, 이미지 리소스를 변환할 수도 있다. [0083]도 5는 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다. [0084]도 5를 참조하면 501단계에서 전자 장치는 어플리케이션 설치 이벤트가 발생하는지 확인할 수 있다. 한 실시예 [0085]에 따르면, 안드로이드 시스템에서는 패키지 매니저(package manager) 또는 패키지 인스톨러(packageinstaller)를 이용하여 어플리케이션 설치 패키지인 apk 파일을 설치를 할 수 있다. 한 실시예에 따르면, 전자장치는 서버 또는 메모리에 저장된 어플리케이션 설치 패키지에 대한 설치 이벤트가 발생하는지 확인할 수있다.어플리케이션 설치 이벤트가 발생한 경우, 503단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 리소스 [0086]를 추출할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션의 설치 패키지에 포함된 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된압축된 텍스처 형태일 수 있다.505단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리 [0087]소스인지 확인할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다.어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, 507단계에서 [0088]전자 장치는 어플리케이션 설치 파일에 포함된 이미지 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에따르면, 어플리케이션 설치 파일에 포함된 이미지 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다.한 실시예에 따르면, 어플리케이션 설치 패키지에 포함된 이미지 리소스가 기 정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 511단 [0089]계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스를 다른 리소스 타입으로 변환할 수있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, [0090]공개특허 10-2015-0098174-16-509단계에서 전자 장치는 변환된 리소스를 포함하도록 어플리케이션 설치 패키지를 리패키징할 수 있다. 한 실시예에 따르면, 전자 장치는 리패키징된 어플리케이션 설치 패키지를 이용하여 어플리케이션의 설치를 완료할수 있다.한 실시예에 따르면, 전자 장치는 어플리케이션 설치 후에 기준 조건에 기반하여 리소스의 변환 및 어플리케이 [0091]션 설치 패키지를 리패키징 할 수 있다.한 실시예에 따르면, 전자 장치는 충전 중인 경우, 설치된 어플리케이션에 대한 리소스의 변환 및 어플리케이션 [0092]설치 패키지를 리패키징 할 수 있다.한 실시예에 따르면, 전자 장치는 일정 시간 동안 슬립 모드로 동작 중인 경우, 설치된 어플리케이션에 대한 리 [0093]소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다.도 6은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. [0094]도 6을 참조하면 601단계에서 전자 장치는 바이너리 생성 이벤트가 발생하는지 확인할 수 있다. 예를 들어, 전 [0095]자 장치는 어플리케이션에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 다른 예를 들어, 전자 장치는 어플리케이션에 대한 빌드 이벤트가 발생하는지 확인할 수 있다.바이너리 생성 이벤트가 발생한 경우, 603단계에서 전자 장치는 바이너리 생성을 위한 리소스를 추출할 수 [0096]있다. 예를 들어, 전자 장치는 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다.605단계에서, 전자 장치는 병렬화 수행 정보를 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 전자 장치의 [0097]소모 전류, 발열, 그래픽 프로세서의 특성 및 리소스의 종류에 기반하는 병렬화 수행 정보를 메타 데이터로 저장할 수 있다. 한 실시예에 따르면, 전자 장치는 서로 다른 그래픽 프로세서에서 병렬화를 수행할 수 있도록 각단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core)의 개수, 메모리, 처리 가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭(clock), 소모 전류, 발열 중 적어도 하나를 포함할 수 있다. . 한 실시예에 따르면, 병렬화 수행 정보는 추출한 리소스의 종류에 기반하여 리소스 변환 과정(혹은 코덱)에서 병렬화 가능한 단계 정보를 포함할 수 있다.607단계에서 전자 장치는 압축된 텍스처로 변환 가능한 리소스인지 확인할 수 있다. 예를 들어, 전자 장치는 추 [0098]출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 다른 예를 들어, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다.압축된 텍스처로 변환 가능한 리소스인 경우, 609단계에서 전자 장치는 병렬화 수행 정보에 기반하여 리소스를 [0099]압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다.이때, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 기 정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을이용하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 613단계에서 전자 장치는 병렬화 수행 정보에 기반하여 리소 [0100]스를 다른 리소스 타입으로 변환할 수 있다. 예를 들어, 전자 장치는 이미지 리소스에 대한 화질을 유지하면서,인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수있다.리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 611단계에서 전자 장치는 바이너리를 생성할 [0101]공개특허 10-2015-0098174-17-수 있다. 예를 들어, 전자 장치는 변환된 리소스에 기반하여 어플리케이션의 설치 또는 빌드를 완료할 수 있다.도 7은 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다. [0102]도 7을 참조하면 701단계에서 전자 장치는 어플리케이션 설치 이벤트가 발생하는지 확인할 수 있다. 한 실시예 [0103]에 따르면, 안드로이드 시스템에서는 패키지 매니저(package manager) 또는 패키지 인스톨러(packageinstaller)를 이용하여 어플리케이션 설치 패키지인 apk 파일을 설치를 할 수 있다. 한 실시예에 따르면, 전자장치는 서버 또는 메모리에 저장된 어플리케이션 설치 패키지에 대한 설치 이벤트가 발생하는지 확인할 수있다.어플리케이션 설치 이벤트가 발생한 경우, 703단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 리소스 [0104]를 추출할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션의 설치 패키지에 포함된 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된압축된 텍스처 형태일 수 있다.705단계에서, 전자 장치는 병렬화 수행 정보를 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 전자 장치의 [0105]소모 전류, 발열, 그래픽 프로세서의 특성 및 리소스의 종류에 기반하는 병렬화 수행 정보를 메타 데이터로 저장할 수 있다. 한 실시예에 따르면, 전자 장치는 서로 다른 그래픽 프로세서에서 병렬화를 수행할 수 있도록 각단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core)의 개수, 메모리, 처리 가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭(clock), 소모 전류, 발열 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 병렬화 수행 정보는 추출한리소스의 종류에 기반하여 리소스 변환 과정(혹은 코덱)에서 병렬화 가능한 단계 정보를 포함할 수 있다.707단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리 [0106]소스인지 확인할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다.어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, 709단계에서 [0107]전자 장치는 병렬화 수행 정보에 기반하여 어플리케이션 설치 파일에 포함된 이미지 리소스를 압축된 텍스처로변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 파일에 포함된 이미지 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 패키지에 포함된 이미지 리소스가 기정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다.어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 713단 [0108]계에서 전자 장치는 병렬화 수행 정보에 기반하여 어플리케이션 설치 패키지에 포함된 이미지 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를다른 리소스 타입으로 변환할 수 있다.어플리케이션 설치 패키지에 포함된 이미지 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, [0109]509단계에서 전자 장치는 변환된 리소스를 포함하도록 어플리케이션 설치 패키지를 리패키징할 수 있다. 한 실시예에 따르면, 전자 장치는 리패키징된 어플리케이션 설치 패키지를 이용하여 어플리케이션의 설치를 완료할수 있다.한 실시예에 따르면, 전자 장치는 어플리케이션 설치 후에 기준 조건에 기반하여 리소스의 변환 및 어플리케이 [0110]공개특허 10-2015-0098174-18-션 설치 패키지를 리패키징 할 수 있다.한 실시예에 따르면, 전자 장치는 충전 중인 경우, 설치된 어플리케이션에 대한 리소스의 변환 및 어플리케이션 [0111]설치 패키지를 리패키징 할 수 있다.한 실시예에 따르면, 전자 장치는 일정 시간 동안 슬립 모드로 동작 중인 경우, 설치된 어플리케이션에 대한 리 [0112]소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다.다양한 실시예에 따르면, 전자 장치에서 바이너리를 생성하기 위한 방법은, 어플리케이션의 바이너리 코드를 생 [0113]성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하는 동작; 상기 이미지 리소스에 대한 속성을 판단하는 동작; 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 및 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에대한 상기 바이너리 코드를 생성하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 선택적으로 변환하는 동작은, 상기 전자 장치와 통신 가능한 외부 전자 장치의 [0114]설정에 기반하여 상기 이미지 리소스를 변환하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드 [0115]를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함할 수 있다.다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드 [0116]를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지리소스를 변환할 것인지 결정하는 동작을 더 포함할 수 있다.다양한 실시예에 따르면, 상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 전자 장치로 전송하 [0117]는 동작을 더 포함할 수 있다.다양한 실시예에 따르면, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 [0118]변환하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 이미지 리소스에 대한 속성을 판단하는 동작은, 상기 이미지 리소스가 압축된 이 [0119]미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 전자 장치에서 어플리케이션 설치에 따른 바이너리를 생성하기 위한 방법은, 어플리케 [0120]이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확인하는 동작; 상기 이미지 리소스에 대한 속성을판단하는 동작; 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 상기이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치 패키지를 리패키징하는 동작; 상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 선택적으로 변환하는 동작은, 상기 전자 장치의 설정에 기반하여 상기 이미지 리 [0121]소스를 변환하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경 [0122]우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함할수 있다.다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경 [0123]우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지결정하는 동작을 더 포함할 수 있다.다양한 실시예에 따르면, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 [0124]변환하는 동작을 포함할 수 있다.다양한 실시예에 따르면, 상기 이미지 리소스에 대한 속성을 판단하는 동작은, 상기 이미지 리소스가 압축된 이 [0125]공개특허 10-2015-0098174-19-미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함할 수 있다.한편 본 발명의 다양한 실시예에 따른 상세한 설명에서는 구체적인 실시예에 관해 설명하였으나, 본 발명의 다 [0126]양한 실시예의 범위에서 벗어나지 않는 한도 내에서 여러 가지 변형이 가능하다. 그러므로 본 발명의 다양한 실시예의 범위는 설명된 실시예에 국한되어 정해져서는 아니 되며 후술하는 특허청구의 범위뿐만 아니라 이 특허청구의 범위와 균등한 것들에 의해 정해져야 할 수 있다.도면도면1도면2공개특허 10-2015-0098174-20-도면3공개특허 10-2015-0098174-21-도면4도면5공개특허 10-2015-0098174-22-도면6공개특허 10-2015-0098174-23-도면7공개특허 10-2015-0098174-24-"}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 다양한 실시예에 따르면, 전자 장치에서 바이너리 생성을 제어하기 위한 방법은, 전자 장치에서, 어플 리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하 는 동작; 상기 이미지 리소스에 대한 속성을 판단하는 동작; 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 및 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반 하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 동작을 포함할 수 있다. 전자 장치에서 바이너리 생성을 제어하기 위한 방법은 본 발명의 다양한 실시예를 통해 구현 가능하다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 다양한 실시예는 바이너리 생성을 위한 리소스를 변환하기 위한 기술에 관한 것이다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치는 음성 및 영상 통화 기능, 정보 입출력 기능 및 데이터 송수신과 같은 다양한 서비스를 제공하는 멀 티미디어 기기로 발전하고 있다. 전자 장치에서 어플리케이션(Application)이 실행(Launch)되는 경우, CPU에서 는 어플리케이션의 리소스 파일 중에서 PNG와 JPG와 같은 일반 압축 이미지를 텍스처 압축 이미지로 변경하여 GPU에 전달한다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "상술한 바와 같이 전자 장치는 어플리케이션 실행 시, 어플리케이션에서 리소스 파일 중 압축 이미지를 텍스처 압축 이미지로 변경하는 과정을 매번 수행함으로써, 어플리케이션 시작 시간이 지연될 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리 소스 파일을 최적화하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플 리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리소스 파일 중 이미지 파일을 압축된 텍스처 (Compressed Texture)로 변환하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 중 이미지 파일을 다른 이미지 타입으로 변환하기 위한 장치 및 방법을 제공할 수 있다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 바와 같이 전자 장치는 어플리케이션 실행 시, 어플리케이션에서 리소스 파일 중 압축 이미지를 텍스처 압축 이미지로 변경하는 과정을 매번 수행함으로써, 어플리케이션 시작 시간이 지연될 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리 소스 파일을 최적화하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플 리케이션에 대한 바이너리를 생성하는 경우, 어플리케이션의 리소스 파일 중 이미지 파일을 압축된 텍스처 (Compressed Texture)로 변환하기 위한 장치 및 방법을 제공할 수 있다. 본 발명의 다양한 실시예에서 전자 장치는 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 중 이미지 파일을 다른 이미지 타입으로 변환하기 위한 장치 및 방법을 제공할 수 있다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상술한 바와 같이 전자 장치에서 어플리케이션에 대한 바이너리 생성 시, 어플리케이션의 리소스 파일 중 이미 지 파일을 압축된 텍스처 또는 다른 이미지 타입으로 변환함으로써, 어플리케이션의 실행 시간을 감소시키고, 리소스 파일이 차지하는 메모리 사용량을 감소시킬 수 있다."}
{"patent_id": "10-2014-0099009", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 다양한 실시예가 첨부된 도면과 연관되어 기재된다. 본 발명의 다양한 실시예는 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있는 바, 특정 실시예들이 도면에 예시되고 관련된 상세한 설명이 기 재되어 있다. 그러나, 이는 본 발명의 다양한 실시예를 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 발명의 다양한 실시예의 사상 및 기술 범위에 포함되는 모든 변경 및/또는 균등물 내지 대체물을 포함하는 것으 로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용되었다. 본 발명의 다양한 실시예에서 사용될 수 있는“포함한다” 또는 “포함할 수 있다” 등의 표현은 개시 (disclosure)된 해당 기능, 동작 또는 구성요소 등의 존재를 가리키며, 추가적인 하나 이상의 기능, 동작 또는 구성요소 등을 제한하지 않는다. 또한, 본 발명의 다양한 실시예에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것 이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존 재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 발명의 다양한 실시예에서 “또는” 또는 “ A 또는/및 B 중 적어도 하나” 등의 표현은 함께 나열된 단어들 의 어떠한, 그리고 모든 조합을 포함한다. 예를 들어, “A 또는 B” 또는 “ A 또는/및 B 중 적어도 하나” 각 각은, A를 포함할 수도, B를 포함할 수도, 또는 A 와 B 모두를 포함할 수도 있다. 본 발명의 다양한 실시예에서 사용된 “제 1,”“제2,”“첫째,”또는“둘째,”등의 표현들은 다양한 실시예들 의 다양한 구성요소들을 수식할 수 있지만, 해당 구성요소들을 한정하지 않는다. 예를 들어, 표현들은 해당 구 성요소들의 순서 및/또는 중요도 등을 한정하지 않는다. 표현들은 한 구성요소를 다른 구성요소와 구분하기 위 해 사용될 수 있다. 예를 들어, 제1 사용자 기기와 제 2 사용자 기기는 모두 사용자 기기이며, 서로 다른 사용 자 기기를 나타낸다. 예를 들어, 본 발명의 다양한 실시예의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제 2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 어떤 구성요소가 다 른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 어떤 구성요소와 다른 구성요소 사이에 새로운 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성 요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 어떤 구성요소와 다른 구성요소 사이 에 새로운 다른 구성요소가 존재하지 않는 것으로 이해될 수 있어야 할 것이다. 본 발명의 다양한 실시예에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명의 다 양한 실시예를 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현 을 포함한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명의 다양한 실시예가 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥 상 가지는 의미 와 일치하는 의미를 가지는 것으로 해석되어야 하며, 본 발명의 다양한 실시예에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 본 발명의 다양한 실시예에 따른 전자 장치는 스마트 폰(smartphone), 태블릿 PC(tablet personal computer), 이동 전화기(mobile phone), 화상전화기, 전자북 리더기(e-book reader), 데스크탑 PC(desktop personal computer), 랩탑 PC(laptop personal computer), 넷북 컴퓨터(netbook computer), PDA(personal digital assistant), PMP(portable multimedia player), MP3 플레이어, 모바일 의료기기, 카메라(camera), 또는 웨어러 블 장치(wearable device)(예: 전자 안경과 같은 head-mounted-device(HMD), 전자 의복, 전자 팔찌, 전자 목걸 이, 전자 앱세서리(appcessory), 전자 문신, 또는 스마트 와치(smart watch))중 적어도 하나를 포함할 수 있다. 어떤 실시예들에 따르면, 전자 장치는 스마트 가전 제품(smart home appliance)일 수 있다. 스마트 가전 제품은, 예를 들자면, 전자 장치는 텔레비전, DVD(digital video disk) 플레이어, 오디오, 냉장고, 에어컨, 청 소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), TV 박스(예를 들면, 삼성 HomeSync™, 애플TV™, 또는 구글 TV™), 게임 콘솔(game consoles), 전자 사전, 전자 키, 캠코더(camcorder), 또는 전자 액자 중 적어도 하나를 포함할 수 있다. 어떤 실시예들에 따르면, 전자 장치는 각종 의료기기(예: MRA(magnetic resonance angiography), MRI(magnetic resonance imaging), CT(computed tomography), 촬영기, 초음파기 등), 네비게이션(navigation) 장치, GPS 수 신기(global positioning system receiver), EDR(event data recorder), FDR(flight data recorder), 자동차 인포테인먼트(infotainment) 장치, 선박용 전자 장비(예: 선박용 항법 장치 및 자이로 콤파스 등), 항공 전자기 기(avionics), 보안 기기, 차량용 헤드 유닛, 산업용 또는 가정용 로봇, 금융 기관의 ATM(automatic teller’s machine) 또는 상점의 POS(point of sales) 중 적어도 하나를 포함할 수 있다. 어떤 실시예들에 따르면, 전자 장치는 가구(furniture) 또는 건물/구조물의 일부, 전자 보드(electronic board), 전자 사인 입력장치(electronic signature receiving device), 프로젝터(projector), 또는 각종 계측 기기(예: 수도, 전기, 가스, 또는 전파 계측 기기 등) 중 적어도 하나를 포함할 수 있다. 본 발명의 다양한 실 시예에 따른 전자 장치는 전술한 다양한 장치들 중 하나 또는 그 이상의 조합일 수 있다. 또한, 본 발명의 다양 한 실시예에 따른 전자 장치는 플렉서블 장치일 수 있다. 또한, 본 발명의 다양한 실시예에 따른 전자 장치는 전술한 기기들에 한정되지 않음은 당업자에게 자명하다. 이하, 첨부된 도면을 참조하여 다양한 실시예에 따른 전자 장치에 대해서 살펴본다. 다양한 실시예에서 이용되 는 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 도 1은 다양한 실시예에 따른, 전자 장치를 포함하는 네트워크 환경를 도시한다. 도 1을 참조하면, 전자 장치는 버스, 프로세서, 메모리, 입출력 인터페이스, 디스플레이, 통신 인 터페이스 및 바이너리 생성 모듈을 포함할 수 있다. 버스는 전술한 구성요소들을 서로 연결하고, 전술한 구성요소들 간의 통신(예: 제어 메시지)을 전달하는 회로일 수 있다. 프로세서는, 예를 들면, 버스를 통해 전술한 다른 구성요소들(예: 메모리, 입출력 인터페이스 , 디스플레이, 통신 인터페이스, 또는 바이너리 생성 모듈 등)로부터 명령을 수신하여, 수 신된 명령을 해독하고, 해독된 명령에 따른 연산이나 데이터 처리를 실행할 수 있다. 미도시 되었지만, 그래픽 프로세서는 프로세서의 그래픽 작업으로 인해 생기는 병목 현상을 해결하기 위한 것으로 2D 또는 3D 그래 픽을 프로세서가 처리하는 것보다 효율적으로 처리할 수 있다. 한 실시예에 따르면, PNG/JPEG와 같은 리소 스가 프로세서에서 압축된 텍스처로 변환되면, 그래픽 프로세서는 압축된 텍스처를 처리하여 디스플레이 를 통해 표시하도록 제어할 수 있다. 메모리는, 프로세서 또는 다른 구성요소들(예: 입출력 인터페이스, 디스플레이, 통신 인터 페이스, 또는 바이너리 생성 모듈 등)로부터 수신되거나 프로세서 또는 다른 구성요소들에 의해 생성된 명령 또는 데이터를 저장할 수 있다. 메모리는, 예를 들면, 커널, 미들웨어, 어플리케이 션 프로그래밍 인터페이스(API: application programming interface) 또는 어플리케이션 등의 프로 그래밍 모듈들을 포함할 수 있다. 전술한 각각의 프로그래밍 모듈들은 소프트웨어, 펌웨어, 하드웨어 또는 이들 중 적어도 둘 이상의 조합으로 구성될 수 있다. 커널은 나머지 다른 프로그래밍 모듈들, 예를 들면, 미들웨어, API 또는 어플리케이션에 구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스, 프로세서 또는 메모리 등)을 제어 또는 관리할 수 있다. 또한, 커널은 미들웨어, API 또는 어플리케이션에 서 전자 장치의 개별 구성요소에 접근하여 제어 또는 관리할 수 있는 인터페이스를 제공할 수 있다. 미들웨어는 API 또는 어플리케이션이 커널과 통신하여 데이터를 주고받을 수 있도록 중개 역할을 수행할 수 있다. 또한, 미들웨어는 어플리케이션로부터 수신된 작업 요청들과 관련하여, 예를 들면, 어플리케이션 중 적어도 하나의 어플리케이션에 전자 장치의 시스템 리소스(예: 버스, 프 로세서 또는 메모리 등)를 사용할 수 있는 우선 순위를 배정하는 등의 방법을 이용하여 작업 요청에 대한 제어(예: 스케쥴링 또는 로드 밸런싱)을 수행할 수 있다. API는 어플리케이션이 커널 또는 미들웨어에서 제공되는 기능을 제어하기 위한 인터페이스 로, 예를 들면, 파일 제어, 창 제어, 화상 처리 또는 문자 제어 등을 위한 적어도 하나의 인터페이스 또는 함수 (예: 명령어)를 포함할 수 있다. 다양한 실시예에 따르면, 어플리케이션는 SMS/MMS 어플리케이션, 이메일 어플리케이션, 달력 어플리케이션, 알람 어플리케이션, 건강 관리(health care) 어플리케이션(예: 운동량 또는 혈당 등을 측정하는 어플리케이션) 또는 환경 정보 어플리케이션(예: 기압, 습도 또는 온도 정보 등을 제공하는 어플리케이션) 등을포함할 수 있다. 추가적으로 또는 대체적으로, 어플리케이션은 전자 장치와 외부 전자 장치(예: 전자 장치) 사이의 정보 교환과 관련된 어플리케이션일 수 있다. 정보 교환과 관련된 어플리케이션은, 예를 들 어, 외부 전자 장치에 특정 정보를 전달하기 위한 알림 전달(notification relay) 어플리케이션, 또는 외부 전 자 장치를 관리하기 위한 장치 관리(device management) 어플리케이션을 포함할 수 있다. 예를 들면, 알림 전달 어플리케이션은 전자 장치 의 다른 어플리케이션(예: SMS/MMS 어플리케이션, 이메일 어플리케이션, 건강 관리 어플리케이션 또는 환경 정보 어플리케이션 등)에서 발생한 알림 정보를 외부 전자 장 치(예: 전자 장치)로 전달하는 기능을 포함할 수 있다. 추가적으로 또는 대체적으로, 알림 전달 어플리케 이션은, 예를 들면, 외부 전자 장치(예: 전자 장치)로부터 알림 정보를 수신하여 사용자에게 제공할 수 있 다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치(예: 전자 장치)의 적어도 일부에 대한 기능(예: 외부 전자 장치 자체(또는, 일부 구성 부품)의 턴온/턴오프 또는 디스플레이의 밝 기(또는, 해상도) 조절), 외부 전자 장치에서 동작하는 어플리케이션 또는 외부 전자 장치에서 제공되는 서비스 (예: 통화 서비스 또는 메시지 서비스)를 관리(예: 설치, 삭제 또는 업데이트)할 수 있다. 다양한 실시예에 따르면, 어플리케이션은 외부 전자 장치(예: 전자 장치)의 속성(예: 전자 장치의 종 류)에 따라 지정된 어플리케이션을 포함할 수 있다. 예를 들어, 외부 전자 장치가 MP3 플레이어인 경우, 어플리 케이션은 음악 재생과 관련된 어플리케이션을 포함할 수 있다. 유사하게, 외부 전자 장치가 모바일 의료기 기인 경우, 어플리케이션은 건강 관리와 관련된 어플리케이션을 포함할 수 있다. 한 실시예에 따르면, 어 플리케이션은 전자 장치에 지정된 어플리케이션 또는 외부 전자 장치(예: 서버 또는 전자 장치 )로부터 수신된 어플리케이션 중 적어도 하나를 포함할 수 있다. 입출력 인터페이스은, 입출력 장치(예: 센서, 키보드 또는 터치 스크린)를 통하여 사용자로부터 입력된 명 령 또는 데이터를, 예를 들면, 버스를 통해 프로세서, 메모리, 통신 인터페이스, 또는 바 이너리 생성 모듈에 전달할 수 있다. 예를 들면, 입출력 인터페이스은 터치 스크린을 통하여 입력된 사용자의 터치에 대한 데이터를 프로세서로 제공할 수 있다. 또한, 입출력 인터페이스은, 예를 들면, 버스을 통해 프로세서, 메모리, 통신 인터페이스, 또는 바이너리 생성 모듈로부터 수 신된 명령 또는 데이터를 입출력 장치(예: 스피커 또는 디스플레이)를 통하여 출력할 수 있다. 예를 들면, 입출 력 인터페이스은 프로세서를 통하여 처리된 음성 데이터를 스피커를 통하여 사용자에게 출력할 수 있 다. 디스플레이은 사용자에게 각종 정보(예: 멀티미디어 데이터 또는 텍스트 데이터 등)을 표시할 수 있다. 통신 인터페이스은 전자 장치와 외부 장치(예: 전자 장치 또는 서버) 간의 통신을 연결할 수 있다. 예를 들면, 통신 인터페이스은 무선 통신 또는 유선 통신을 통해서 네트워크에 연결되어 외 부 장치와 통신할 수 있다. 무선 통신은, 예를 들어, Wifi(wireless fidelity), BT(Bluetooth), NFC(near field communication), GPS(global positioning system) 또는 cellular 통신(예: LTE, LTE-A, CDMA, WCDMA, UMTS, WiBro 또는 GSM 등) 중 적어도 하나를 포함할 수 있다. 유선 통신은, 예를 들어, USB(universal serial bus), HDMI(high definition multimedia interface), RS-232(recommended standard 232) 또는 POTS(plain old telephone service) 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 네트워크는 통신 네트워크(telecommunications network)일 수 있다. 통신 네트워크 는 컴퓨터 네트워크(computer network), 인터넷(internet), 사물 인터넷(internet of things) 또는 전화망 (telephone network) 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 전자 장치와 외부 장치 간의 통신을 위한 프로토콜(예: transport layer protocol, data link layer protocol 또는 physical layer protocol))은 어플리케이션, 어플리케이션 프로그래밍 인터페이스, 미들웨어, 커널 또는 통신 인터페이스 중 적어도 하나에서 지원될 수 있다. 한 실시예에 따르면, 서버는 전자 장치에서 구현되는 동작(또는, 기능)들 중 적어도 하나의 동작을 수행함으로써, 전자 장치의 구동을 지원할 수 있다. 예를 들면, 서버는 전자 장치에 구현된 바 이너리 생성 모듈을 지원할 수 있는 바이너리 생성 서버 모듈을 포함할 수 있다. 예컨대, 바이너리 생성 서버 모듈은 바이너리 생성 모듈의 적어도 하나의 구성요소를 포함하여, 바이너리 생성 모듈 이 수행하는 동작들 중 적어도 하나의 동작을 수행(예: 대행)할 수 있다. 한 실시예에 따르면, 전자 장치는 전자 장치에 포함되는 전체 바이너리를 서버로부터 전달받을 수 있다. 예를 들어, 서버는 바이너리를 생성하고, 생성된 바이너리를 전자 장치에 전송할 수 있다.바이너리 생성 모듈은, 다른 구성요소들(예: 프로세서, 메모리, 입출력 인터페이스, 또는 통신 인터페이스 등)로부터 획득된 정보 중 적어도 일부를 처리하고, 이를 다양한 방법으로 사용자에게 제 공 할 수 있다. 예를 들면, 바이너리 생성 모듈은 프로세서를 이용하여 또는 이와는 독립적으로, 전 자 장치가 다른 전자 기기(예: 전자 장치 또는 서버)와 연동하도록 전자 장치의 적어도 일 부 기능을 제어할 수 있다. 한 실시예에 따르면, 바이너리 생성 모듈의 적어도 하나의 구성은 서버 (예: 바이너리 생성 서버 모듈)에 포함될 수 있으며, 서버로부터 바이너리 생성 모듈에서 구현 되는 적어도 하나의 동작을 지원받을 수 있다. 후술하는 도 2를 통하여 바이너리 생성 모듈 에 대한 추가 적인 정보가 제공된다. 도 2는 다양한 실시예들에 따른, 전자 장치(예: 전자 장치)의 바이너리 생성 모듈의 블록도를 도시한 다. 도 2를 참조하면, 바이너리 생성 모듈은 리소스 분석 모듈, 메타데이터 생성 모듈, 리소스 변환 모듈 및 병렬화 수행 모듈을 포함할 수 있다. 한 실시예에 따르면, 전자 장치는 리소스 분석 모듈 , 메타데이터 생성 모듈, 리소스 변환 모듈 및 병렬화 수행 모듈 중 적어도 일부를 포함하 지 않을 수도 있다. 바이너리 생성 모듈은, 예를 들면, 어플리케이션에 대한 바이너리 코드를 생성할 수 있다. 예를 들어, 바 이너리 생성 모듈은 어플리케이션에 대한 설치 또는 빌드를 수행할 수 있다. 예컨대, 바이너리 생성 모듈 은 어플리케이션에 대한 소스 코드(예: C/C++, JAVA, 안드로이드 등으로 작성된 코드)를 바이너리 코드로 변환함으로써 어플리케이션에 대한 빌드를 수행하거나, 변환된 바이너리 코드를 메모리에 저장함으로써 어 플리케이션에 대한 설치를 수행할 수 있다. 예컨대, 바이너리 생성 모듈은, 리소스 변환 모듈에 의해 변환된 리소스를 포함하여 바이너리를 생성 할 수 있다. 한 실시예에 따르면, 바이너리 생성 모듈은 메모리에 저장된 바이너리 생성 프로그램을 이용하여 어플리케이션에 대한 바이너리를 생성할 수 있다. 리소스 분석 모듈은, 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 어플리케이션의 리소 스로부터 추출된 이미지 리소스는, 예를 들면, PNG 또는 JPG와 같은 압축된 이미지 형태이거나 또는 기 정의된 압축된 텍스처 형태(예: 시스템의 설정 등에 따라 결정된 형식에 따라 미리 압축된 텍스처)를 포함할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈은 추출된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 지 확인할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈은 추출된 이미지 리소스가 그래픽 프로세서를 통해 병렬화 수행 가 능한 리소스인지 확인할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈은 전자 장치의 소모 전류, 발열, 그래픽 프로세서의 특성에 기반하는 병렬화 수행 정보를 메타 데이터로 저장하기 위한 메타데이터 생성 모듈을 포함할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core)의 개수, 메모리, 처리 가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭(clock), 소모 전류, 발열 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 리소스 분석 모듈은 서로 다른 그래픽 프로세서에 서 병렬화를 수행할 수 있도록 각 단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 병렬 화 수행 정보는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화 수행하거나, 코 어들의 클럭을 제어하여 병렬화를 수행하도록 그래픽 프로세서를 제어하기 위한 매개 변수(work group thread, work item, 대역폭)를 포함할 수 있다. 리소스 변환 모듈은, 예를 들면, 어플리케이션에 대한 바이너리가 생성되는 것에 기반하여, 해당 어플리케 이션에 대한 리소스를 변환할 수 있다. 어플리케이션은 복수의 소스코드와 리소스를 포함할 수 있다. 소스코드 는 프로그램의 동작을 정의할 수 있고, 리소스는 어플리케이션에서 사용하는 오디오, 비디오, 이미지, 텍스트 등의 정보를 포함할 수 있다. 예컨대, 바이너리 생성 모듈에 의해 어플리케이션에 대한 설치 또는 빌드가 수행되는 경우, 리소스 변환 모듈은 리소스 분석 모듈로부터 해당 어플리케이션의 리소스를 획득하여 시스템(예: 전자 장치, 전자 장치, 또는 서버에 대응하는 형태(예: 시스템에 최적화된 형태로서 시스템의 설정(configuration) 또는 사양(specifications) 등에 따라 결정된 형태)로 변환할 수 있다. 한 실시 예에 따르면, 리소스 변환 모듈은 메모리에 저장된 리소스 변환 프로그램을 이용함으로써 해당 어플 리케이션에 대한 리소스를 변환할 수 있다. 한 실시예에 따르면, 리소스 변환 모듈은 추출된 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, 추출된 리소스를 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 압축 이미지인 경우, 리소스 변환 모듈은 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 예컨대, 리소스 변환 모듈은 그래 픽 프로세서에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 기 정의된 압축된 텍스처인 경우, 리소스 변환 모듈은 그래픽 프로세서에서 지원 가 능한 압축된 텍스처로 변환할 수도 있다. 또한, 그래픽 프로세서에서 지원 가능한 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 리소스 변환 모듈은 리소스를 다른 리소스 타입으로 변환할 수도 있다. 한 실시예에 따르면, 리소스 변환 모듈은 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환기 위해 병렬화 수행 모듈을 포함할 수 있다. 한 실시예에 따르면, 병렬화 수행 모듈은 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 다양한 실시예에 따르면, 전자 장치는, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하고, 상기 이미지 리소스에 대한 속성을 판단하고, 상기 속성에 기 반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하고, 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하도록 제어하는 프로세 서를 포함하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 전자 장치와 통신 가능한 외부 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리 케이션에 대한 바이너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하 여 상기 어플리케이션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기 반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 전자 장치로 전송하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축 된 텍스처 형태인지 판단하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 전자 장치는, 어플리케이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확 인하고, 상기 이미지 리소스에 대한 속성을 판단하고, 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스 처로 선택적으로 변환하고, 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치 패키지를 리패키징하고, 상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하 도록 제어하는 프로세서를 포함하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소 스를 변환할 것인지 결정하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 전자 장치일 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 이미지 리소스가 압축된 이미지 형태인지 또는 기 정의된 압축 된 텍스처 형태인지 판단하는 전자 장치일 수 있다. 도 3은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. 도 3을 참조하면 301단계에서 전자 장치는 바이너리 생성 이벤트가 발생하는지 확인할 수 있다. 예를 들어, 전 자 장치는 어플리케이션에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 다른 예를 들어, 전자 장치는 어플 리케이션에 대한 빌드 이벤트가 발생하는지 확인할 수 있다. 바이너리 생성 이벤트가 발생한 경우, 303단계에서 전자 장치는 바이너리 생성을 위한 리소스를 추출할 수 있다. 예를 들어, 전자 장치는 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리 소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다. 305단계에서 전자 장치는 압축된 텍스처로 변환 가능한 리소스인지 확인할 수 있다. 예를 들어, 전자 장치는 추 출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity) 과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값 의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 다른 예를 들어, 전자 장치 는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확 인할 수도 있다. 압축된 텍스처로 변환 가능한 리소스인 경우, 307단계에서 전자 장치는 리소스를 압축된 텍스처로 변환할 수 있 다. 예를 들어, 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵 (Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 이때, 전자 장치는 그래픽 프 로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 다른 예를 들어, 리소스가 기 정의된 압축된 텍 스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 311단계에서 전자 장치는 리소스를 다른 리소스 타입으로 변 환할 수 있다. 예를 들어, 전자 장치는 이미지 리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소 요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있다. 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 309단계에서 전자 장치는 바이너리를 생성할 수 있다. 예를 들어, 전자 장치는 변환된 리소스에 기반하여 어플리케이션의 설치 또는 빌드를 완료할 수 있다. 도 4는 다양한 실시예들에 따른, 응용프로그램 설치 파일의 예를 도시하고 있다. 도 4를 참조하면, 응용프로그램 설치 파일은 제1폴더, 제2폴더, 제3폴더와 같은 하나 또는 그 이상의 폴더들, 및 제1파일, 제2파일, 제3파일과 같은 하나 또는 그 이상의 파일들을 포함할 수 있다. 여기서, 응용프로그램 설치 파일은 안드로이드 운영체제의 APK(application package) 파일일 수 있다. 제1폴더는 응용프로그램의 외부 리소스에 관한 데이터 또는 소프트웨어 프로그램을 저장하는 폴더일 수 있 다. 예를 들면, 제1폴더는 안드로이드 운영체제의 APK(application package) 파일의 “assets” 폴더일 수 있다. 제2폴더는, 응용프로그램 자체의 메타 정보 데이터를 저장할 수 있다. 여기서, 응용프로그램 자체의 메타 정보 데이터는 응용프로그램 배포시 사용자가 인증서를 통해 전자 서명한 내용을 포함할 수 있다. 예를 들어, 제2폴더는 안드로이드 운영체제의 APK(application package) 파일의 “META-INF” 폴더일 수 있다. 제3폴더는 응용프로그램의 내부 리소스에 관한 데이터 또는 소프트웨어 프로그램을 저장하는 폴더일 수 있 다. 예를 들면, 제3폴더는 안드로이드 운영체제의 APK(application package) 파일의 “res”폴더일 수 있 다. 본 발명의 다양한 실시예들에 따르면, 제3폴더는 이미지 리소스 파일을 포함할 수 있다. 한 실시예에 따르면, 도 4에 도시되었듯이, 이미지 리소스 파일은 응용프로그램 설치 파일의 제3폴더(41 5)에 위치할 수 있다. 이는 하나의 실시예에 불과하며, 이미지 리소스 파일은 응용프로그램 설치 파일의 다른 폴더 또는 다른 위치에 위치할 수도 있다. 제1파일은 응용프로그램의 기본 설정 정보를 저장하는 파일로, 응용프로그램을 구성하는 복수의 파일들 중 에 가장 먼저 참조되는 파일일 수 있다. 예를 들어, 제1파일은 안드로이드 운영체제의 “ AndroidManifest.xml”일 수 있다. 본 발명의 다양한 실시예에 따르면 이미지 리소스들 중 압축된 텍스처로 변 환 가능한 리스트는 제1파일에 포함될 수 있다. 한 실시예에 따르면, 도 4에 도시되었듯이, 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트는 응용프 로그램 설치 파일의 제1파일에 포함될 수 있다. 이는 하나의 실시예에 불과하며, 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트는 응용프로그램 설치 파일의 다른 파일에 포함될 수도 있다. 제2파일은 응용프로그램의 소스 코드를 컴파일하여 생성된 파일로, 응용프로그램의 동작을 구성하는 클래 스들의 정보를 포함할 수 있다. 예를 들어, 제2파일은 안드로이드 운영체제의 “classes.dex”일 수 있다. 제3파일은 응용프로그램의 실행 이전에, 미리 컴파일된 리소스들을 포함할 수 있다. 예를 들면, 제3파일 은 안드로이드 운영체제의 “resources.arsc”일 수 있다. 상술한 실시예에서는 전자 장치에서, 어플리케이션의 바이너리 코드를 생성하기 위한 요청에 기반하여, 이미지 리소스를 변환한다. 다른 실시예에서는 전자 장치는 어플리케이션의 설치 시, 이미지 리소스를 변환할 수도 있다. 도 5는 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다. 도 5를 참조하면 501단계에서 전자 장치는 어플리케이션 설치 이벤트가 발생하는지 확인할 수 있다. 한 실시예 에 따르면, 안드로이드 시스템에서는 패키지 매니저(package manager) 또는 패키지 인스톨러(package installer)를 이용하여 어플리케이션 설치 패키지인 apk 파일을 설치를 할 수 있다. 한 실시예에 따르면, 전자 장치는 서버 또는 메모리에 저장된 어플리케이션 설치 패키지에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 어플리케이션 설치 이벤트가 발생한 경우, 503단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 리소스 를 추출할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션의 설치 패키지에 포함된 리소스들 중 이미 지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다. 505단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리 소스인지 확인할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들에 대해 PSNR(Peak Signal- to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양 한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가 능한 이미지인지 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처 로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, 507단계에서 전자 장치는 어플리케이션 설치 파일에 포함된 이미지 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 파일에 포함된 이미지 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있 다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 패키지에 포함된 이미지 리소스가 기 정의된 압축된 텍스처인 경우, 전 자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수도 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 511단 계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스에 대한 화질을 유지 하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환 할 수 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 509단계에서 전자 장치는 변환된 리소스를 포함하도록 어플리케이션 설치 패키지를 리패키징할 수 있다. 한 실 시예에 따르면, 전자 장치는 리패키징된 어플리케이션 설치 패키지를 이용하여 어플리케이션의 설치를 완료할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 후에 기준 조건에 기반하여 리소스의 변환 및 어플리케이 션 설치 패키지를 리패키징 할 수 있다. 한 실시예에 따르면, 전자 장치는 충전 중인 경우, 설치된 어플리케이션에 대한 리소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다. 한 실시예에 따르면, 전자 장치는 일정 시간 동안 슬립 모드로 동작 중인 경우, 설치된 어플리케이션에 대한 리 소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다. 도 6은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. 도 6을 참조하면 601단계에서 전자 장치는 바이너리 생성 이벤트가 발생하는지 확인할 수 있다. 예를 들어, 전 자 장치는 어플리케이션에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 다른 예를 들어, 전자 장치는 어플 리케이션에 대한 빌드 이벤트가 발생하는지 확인할 수 있다. 바이너리 생성 이벤트가 발생한 경우, 603단계에서 전자 장치는 바이너리 생성을 위한 리소스를 추출할 수 있다. 예를 들어, 전자 장치는 어플리케이션의 리소스들 중 이미지 리소스를 추출할 수 있다. 추출된 이미지 리 소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다. 605단계에서, 전자 장치는 병렬화 수행 정보를 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 전자 장치의 소모 전류, 발열, 그래픽 프로세서의 특성 및 리소스의 종류에 기반하는 병렬화 수행 정보를 메타 데이터로 저 장할 수 있다. 한 실시예에 따르면, 전자 장치는 서로 다른 그래픽 프로세서에서 병렬화를 수행할 수 있도록 각 단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core) 의 개수, 메모리, 처리 가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭 (clock), 소모 전류, 발열 중 적어도 하나를 포함할 수 있다. . 한 실시예에 따르면, 병렬화 수행 정보는 추출 한 리소스의 종류에 기반하여 리소스 변환 과정(혹은 코덱)에서 병렬화 가능한 단계 정보를 포함할 수 있다. 607단계에서 전자 장치는 압축된 텍스처로 변환 가능한 리소스인지 확인할 수 있다. 예를 들어, 전자 장치는 추 출된 이미지 리소스들에 대해 PSNR(Peak Signal-to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity) 과 같이 이미지의 품질(quality)을 측정하는 다양한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값 의 비교 결과에 기반하여 압축된 텍스처로 변환 가능한 이미지인지 결정할 수 있다. 다른 예를 들어, 전자 장치 는 추출된 이미지 리소스들 중 압축된 텍스처로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확 인할 수도 있다. 압축된 텍스처로 변환 가능한 리소스인 경우, 609단계에서 전자 장치는 병렬화 수행 정보에 기반하여 리소스를 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스가 PNG, JPEG와 같은 압축 이미지인 경우, 전자 장치는 압 축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 이때, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 있다. 예를 들어, 리소스 가 기 정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환 할 수도 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있 다. 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 613단계에서 전자 장치는 병렬화 수행 정보에 기반하여 리소 스를 다른 리소스 타입으로 변환할 수 있다. 예를 들어, 전자 장치는 이미지 리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이미지 코덱을 사용하여 변환할 수 있 다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로 세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 611단계에서 전자 장치는 바이너리를 생성할 수 있다. 예를 들어, 전자 장치는 변환된 리소스에 기반하여 어플리케이션의 설치 또는 빌드를 완료할 수 있다. 도 7은 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다. 도 7을 참조하면 701단계에서 전자 장치는 어플리케이션 설치 이벤트가 발생하는지 확인할 수 있다. 한 실시예 에 따르면, 안드로이드 시스템에서는 패키지 매니저(package manager) 또는 패키지 인스톨러(package installer)를 이용하여 어플리케이션 설치 패키지인 apk 파일을 설치를 할 수 있다. 한 실시예에 따르면, 전자 장치는 서버 또는 메모리에 저장된 어플리케이션 설치 패키지에 대한 설치 이벤트가 발생하는지 확인할 수 있다. 어플리케이션 설치 이벤트가 발생한 경우, 703단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 리소스 를 추출할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션의 설치 패키지에 포함된 리소스들 중 이미 지 리소스를 추출할 수 있다. 추출된 이미지 리소스는, PNG, JPG와 같은 압축된 이미지 형태이거나 기 정의된 압축된 텍스처 형태일 수 있다. 705단계에서, 전자 장치는 병렬화 수행 정보를 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 전자 장치의 소모 전류, 발열, 그래픽 프로세서의 특성 및 리소스의 종류에 기반하는 병렬화 수행 정보를 메타 데이터로 저 장할 수 있다. 한 실시예에 따르면, 전자 장치는 서로 다른 그래픽 프로세서에서 병렬화를 수행할 수 있도록 각 단말의 그래픽 프로세서의 특성을 확인할 수 있다. 한 실시예에 따르면, 그래픽 프로세서의 특성은 코어(core) 의 개수, 메모리, 처리 가능한 데이터 타입, 코어에서 실행 가능한 스레드(thread) 개수, 전압(power), 클럭 (clock), 소모 전류, 발열 중 적어도 하나를 포함할 수 있다. 한 실시예에 따르면, 병렬화 수행 정보는 추출한 리소스의 종류에 기반하여 리소스 변환 과정(혹은 코덱)에서 병렬화 가능한 단계 정보를 포함할 수 있다. 707단계에서 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리 소스인지 확인할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들에 대해 PSNR(Peak Signal- to-Nose Ratio) 또는 MSSIM(Modified Structural Similarity)과 같이 이미지의 품질(quality)을 측정하는 다양 한 방법 중 적어도 하나 이상을 이용하여 측정한 값과 기준값의 비교 결과에 기반하여 압축된 텍스처로 변환 가 능한 이미지인지 결정할 수 있다. 한 실시예에 따르면, 전자 장치는 추출된 이미지 리소스들 중 압축된 텍스처 로 변환 가능한 리스트에 포함되는 이미지 리소스가 존재하는지 확인할 수도 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스인 경우, 709단계에서 전자 장치는 병렬화 수행 정보에 기반하여 어플리케이션 설치 파일에 포함된 이미지 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 파일에 포함된 이미지 리소스가 PNG, JPEG와 같은 압 축 이미지인 경우, 전자 장치는 압축 이미지를 디코딩하여 비트맵(Bitmap) 이미지로 변환하고, 비트맵 이미지를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압 축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 어플리케이션 설치 패키지에 포함된 이미지 리소스가 기 정의된 압축된 텍스처인 경우, 전자 장치는 그래픽 프로세서(CPU)에서 지원 가능한 압축된 텍스처로 변환할 수 도 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용 하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로 세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 압축된 텍스처로 변환할 수 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스가 압축된 텍스처로 변환 가능한 리소스가 아닌 경우, 713단 계에서 전자 장치는 병렬화 수행 정보에 기반하여 어플리케이션 설치 패키지에 포함된 이미지 리소스를 다른 리 소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 패키지에 포함된 이미지 리소스에 대한 화질을 유지하면서, 인코딩 소요 시간, 디코딩 소요 시간, 메모리 사용량을 감소시킬 수 있는 이 미지 코덱을 사용하여 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들 중 일부 코어만을 이용하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 한 실시예에 따르면, 전자 장치는 그래픽 프로세서에 포함된 다수 개의 코어들의 클럭을 제어하여 병렬화를 통해 리소스를 다른 리소스 타입으로 변환할 수 있다. 어플리케이션 설치 패키지에 포함된 이미지 리소스를 압축된 텍스처 또는 다른 리소스 타입으로 변환한 경우, 509단계에서 전자 장치는 변환된 리소스를 포함하도록 어플리케이션 설치 패키지를 리패키징할 수 있다. 한 실 시예에 따르면, 전자 장치는 리패키징된 어플리케이션 설치 패키지를 이용하여 어플리케이션의 설치를 완료할 수 있다. 한 실시예에 따르면, 전자 장치는 어플리케이션 설치 후에 기준 조건에 기반하여 리소스의 변환 및 어플리케이 션 설치 패키지를 리패키징 할 수 있다. 한 실시예에 따르면, 전자 장치는 충전 중인 경우, 설치된 어플리케이션에 대한 리소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다. 한 실시예에 따르면, 전자 장치는 일정 시간 동안 슬립 모드로 동작 중인 경우, 설치된 어플리케이션에 대한 리 소스의 변환 및 어플리케이션 설치 패키지를 리패키징 할 수 있다. 다양한 실시예에 따르면, 전자 장치에서 바이너리를 생성하기 위한 방법은, 어플리케이션의 바이너리 코드를 생 성하기 위한 요청에 기반하여, 상기 어플리케이션에 대한 이미지 리소스를 확인하는 동작; 상기 이미지 리소스 에 대한 속성을 판단하는 동작; 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환 하는 동작; 및 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드를 생성하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 선택적으로 변환하는 동작은, 상기 전자 장치와 통신 가능한 외부 전자 장치의 설정에 기반하여 상기 이미지 리소스를 변환하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드 를 생성하는 경우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 바이 너리 코드를 생성하는 경우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정 하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 상기 바이너리 코드 를 생성하는 경우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이 션에 대한 바이너리 코드를 생성하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 생성한 바이너리 코드를 상기 전자 장치와 통신 가능한 외부 전자 장치로 전송하 는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 이미지 리소스에 대한 속성을 판단하는 동작은, 상기 이미지 리소스가 압축된 이 미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치에서 어플리케이션 설치에 따른 바이너리를 생성하기 위한 방법은, 어플리케 이션 설치 시, 상기 어플리케이션에 포함된 이미지 리소스를 확인하는 동작; 상기 이미지 리소스에 대한 속성을 판단하는 동작; 상기 속성에 기반하여 상기 이미지 리소스를 압축된 텍스처로 선택적으로 변환하는 동작; 상기 이미지 리소스가 변환된 경우, 상기 변환된 이미지 리소스를 포함하도록 상기 어플리케이션에 대한 설치 패키지 를 리패키징하는 동작; 상기 리패키징된 어플리케이션에 대한 설치 패키지를 설치하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 선택적으로 변환하는 동작은, 상기 전자 장치의 설정에 기반하여 상기 이미지 리 소스를 변환하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경 우의 메모리 사용량과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경 우의 메모리 사용량의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 변환된 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치를 진행하는 경 우의 어플리케이션 구동 소요 시간과 변환되지 않은 이미지 리소스에 기반하여 상기 어플리케이션에 대한 설치 를 진행하는 경우의 어플리케이션 구동 소요 시간의 비교 결과에 기반하여 상기 이미지 리소스를 변환할 것인지 결정하는 동작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 속성에 기반하여 상기 이미지 리소스를 다른 코덱에 기반하는 이미지 리소스로 변환하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 이미지 리소스에 대한 속성을 판단하는 동작은, 상기 이미지 리소스가 압축된 이 미지 형태인지 또는 기 정의된 압축된 텍스처 형태인지 판단하는 동작을 포함할 수 있다. 한편 본 발명의 다양한 실시예에 따른 상세한 설명에서는 구체적인 실시예에 관해 설명하였으나, 본 발명의 다 양한 실시예의 범위에서 벗어나지 않는 한도 내에서 여러 가지 변형이 가능하다. 그러므로 본 발명의 다양한 실 시예의 범위는 설명된 실시예에 국한되어 정해져서는 아니 되며 후술하는 특허청구의 범위뿐만 아니라 이 특허 청구의 범위와 균등한 것들에 의해 정해져야 할 수 있다."}
{"patent_id": "10-2014-0099009", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 다양한 실시예에 따른 전자 장치에 대한 블록 구성을 도시하고 있다. 도 2는 본 발명의 다양한 실시예에 따른 프로세서의 상세 블록 구성을 도시하고 있다. 도 3은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. 도 4는 다양한 실시예들에 따른, 응용프로그램 설치 파일의 예를 도시하고 있다. 도 5는 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다. 도 6은 전자 장치에서 바이너리 생성을 제어하기 위한 절차를 도시하고 있다. 도 7은 전자 장치에서 어플리케이션의 설치 시, 이미지 리소스를 변환하기 위한 절차를 도시하고 있다."}
