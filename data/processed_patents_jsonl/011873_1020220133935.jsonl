{"patent_id": "10-2022-0133935", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0043024", "출원번호": "10-2022-0133935", "발명의 명칭": "IoT 기기에 대한 사용 경험을 공유하기 위한 전자 장치", "출원인": "삼성전자주식회사", "발명자": "이충기"}}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "서버에 있어서,사용자 장치와 통신을 위한 통신 회로; 및상기 통신 회로에 연결된 프로세서; 및상기 프로세서와 연결된 메모리를 포함하고, 상기 메모리는, 상기 프로세서에 의해 실행될 때, 상기프로세서가:상기 통신 회로를 통해 제1 사용자 장치로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험 정보를수신하고,전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공지능 모델에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고,상기 제1 인공 지능 모델의 출력 값에서 제1 컨셉을 획득하고,상기 제1 컨셉을 상기 메모리에 저장하고,상기 통신 회로를 통해 제2 사용자 장치로부터 상기 IoT 기기들에 대한 사용 경험의 공유를 요청하는 메시지를수신하고,상기 제2 사용자 장치의 공유 요청에 반응하여, 컨셉을 전자 장치가 이해 가능한 사용 경험 정보로 변환하도록학습된 제2 인공 지능 모델에 상기 제1 컨셉을 입력 값으로 넣어주고,제2 사용 경험 정보를 상기 제2 인공 지능 모델의 출력 값에서 획득하고,상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송하도록 하는 인스트럭션들을 저장하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서, 상기 인스트럭션들은 상기 프로세서가, 상기 제1 사용 경험 정보로서,상기 IoT 기기들을 식별하기 위한 IoT 기기 정보, 상기 제1 사용자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보, 및 상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사용성 정보를 상기 통신 회로를 통해 제1 사용자 장치로부터 수신하도록 하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 구성 정보의 행렬 곱 연산을 통해 제1 행렬 벡터가 생성되고, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 IoT 사용성 정보의 행렬 곱 연산을 통해 제2 행렬 벡터가 생성되되,상기 인스트럭션들은 상기 프로세서가, 상기 제1 사용 경험 정보로서,상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 통신 회로를 통해 제1 사용자 장치로부터 수신하도록 하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서, 상기 제1 인공 지능 모델은 특징 추출 모델과 인코딩 모델을 포함하되, 상기 인스트럭션들은공개특허 10-2024-0043024-3-상기 프로세서가,상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 특징 추출 모델에 입력 값으로 넣어 주고,상기 특징 추출 모델에서 출력된 결과 값에서 특징들을 획득하고,상기 특징 추출 모델의 결과 값에서 획득된 특징들을 상기 인코딩 모델에 입력 값으로 넣어주고,상기 인코딩 모델에서 출력된 결과 값에서 상기 특징 추출 모델의 결과 값에서 획득된 특징들에 매핑이 되는 상기 제1 컨셉을 획득하도록 하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4 항에 있어서, 상기 특징 추출 모델과 상기 행렬 벡터 생성 모델은 DenseNet(densely connectedconvolution networks)을 포함하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4 항에 있어서, 상기 제2 인공 지능 모델은 디코딩 모델과 행렬 벡터 생성 모듈을 포함하되, 상기 인스트럭션들은 상기 프로세서가, 상기 제2 사용자 장치의 공유 요청에 반응하여,상기 제1 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고,상기 디코딩 모델에서 출력된 결과 값에서 상기 제1 컨셉에 매핑이 되는 특징들을 추출하고, 상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡터 생성 모듈에 입력 값으로 넣어주고,상기 행렬 벡터 생성 모듈에서 출력된 결과 값에서 상기 제1 행렬 벡터에 대응하는 제3 행렬 벡터와 상기 제2행렬 벡터에 대응하는 제4 행렬 벡터를 획득하고,상기 제3 행렬 벡터와 상기 제4 행렬 벡터를 상기 제2 사용 경험 정보로서 상기 제2 사용자 장치로 전송하도록하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6 항에 있어서, 상기 디코딩 모델은 제1 디코딩 모델과 제2 디코딩 모델을 포함하되, 상기 인스트럭션들은 상기 프로세서가,제1 운영 체제를 갖는 사용자 장치에 대응하여 상기 제1 디코딩 모델을 학습하고,상기 제1 운영 체제와 다른 제2 운영 체제를 갖는 사용자 장치에 대응하여 상기 제2 디코딩 모델을 학습하도록하는 서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6 항에 있어서, 상기 인스트럭션들은 상기 프로세서가,상기 제1 행렬 벡터의 업데이트 버전에 해당하는 제5 행렬 벡터와 상기 제2 행렬 벡터의 업데이트 버전에 해당하는 제6 행렬 벡터를 상기 제2 사용자 장치로부터 수신하고,상기 제5 행렬 벡터와 상기 제6 행렬 벡터 가 상기 제2 사용자 장치로부터 수신된 것에 반응하여, 상기 인코딩모델을 복제함으로써 대체 인코딩 모델을 생성하고,상기 제5 행렬 벡터와 상기 제6 행렬 벡터를 상기 특징 추출 모델에 입력 값으로 넣어주고,상기 특징 추출 모델에서 출력된 결과 값에서 제2 컨셉을 획득하고,상기 제2 컨셉을 상기 메모리에 저장하고,상기 제2 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고,상기 디코딩 모델에서 출력된 결과 값에서 상기 제2 컨셉에 매핑이 되는 특징들을 추출하고, 상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡터 생성 모듈에 입력 값으로 넣어주고,상기 행렬 벡터 생성 모듈에서 출력된 결과 값에서 상기 제5 행렬 벡터에 대응하는 제7 행렬 벡터와 상기 제6공개특허 10-2024-0043024-4-행렬 벡터에 대응하는 제8 행렬 벡터를 획득하고,상기 제7 행렬 벡터와 상기 제8 행렬 벡터 를 제3 사용 경험 정보로서 상기 제1 사용자 장치로 전송하도록 하는서버."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "전자 장치에 있어서,서버 및 IoT(internet of things) 기기들과 통신하기 위한 통신 회로;상기 통신 회로에 연결된 프로세서; 및상기 프로세서와 연결된 메모리를 포함하고, 상기 메모리는, 상기 프로세서에 의해 실행될 때, 상기프로세서가:상기 IoT 기기들을 식별하기 위한 IoT 기기 정보를 열 벡터로 구성하고,상기 전자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보를 제1 행 벡터로 구성하고,상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사용성 정보를 제2 행 벡터로 구성하고,상기 열 벡터와 상기 제1 행 벡터를 곱해서 제1 행렬 벡터를 생성하고,상기 열 벡터와 상기 제2 행 벡터를 곱해서 제2 행렬 벡터를 생성하고,상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 서버로 전송함으로써 상기 서버가 상기 제1 행렬 벡터와 상기제2 행렬 벡터를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 하는 인스트럭션들을 저장하는 전자장치."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "서버를 동작하는 방법에 있어서,상기 서버의 통신 회로를 통해 제1 사용자 장치로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험정보를 수신하는 동작;전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공지능 모델에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고 상기 제1 인공 지능 모델의 출력 값에서 제1 컨셉을 획득하는 동작;상기 제1 컨셉을 상기 메모리에 저장하는 동작;상기 통신 회로를 통해 제2 사용자 장치로부터 상기 IoT 기기들에 대한 사용 경험의 공유를 요청하는 메시지를수신하는 동작;상기 제2 사용자 장치의 공유 요청에 반응하여, 컨셉을 전자 장치가 이해 가능한 사용 경험 정보로 변환하도록학습된 제2 인공 지능 모델에 상기 제1 컨셉을 입력 값으로 넣어주고 제2 사용 경험 정보를 상기 제2 인공 지능모델의 출력 값에서 획득하는 동작; 및상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10 항에 있어서, 상기 제1 사용 경험 정보를 수신하는 동작은,상기 IoT 기기들을 식별하기 위한 IoT 기기 정보, 상기 제1 사용자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보, 및 상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사용성 정보를 수신하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "공개특허 10-2024-0043024-5-제11 항에 있어서, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 구성 정보의 행렬 곱 연산을통해 제1 행렬 벡터가 생성되고, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 IoT 사용성 정보의 행렬 곱 연산을 통해 제2 행렬 벡터가 생성되되,상기 제1 사용 경험 정보를 수신하는 동작은,상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 수신하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12 항에 있어서, 상기 제1 인공 지능 모델은 특징 추출 모델과 인코딩 모델을 포함하되, 상기 제1 컨셉을 획득하는 동작은,상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 특징 추출 모델에 입력 값으로 넣어 주고 상기 특징 추출 모델에서 출력된 결과 값에서 특징들을 획득하는 동작; 및상기 특징 추출 모델의 결과 값에서 획득된 특징들을 상기 인코딩 모델에 입력 값으로 넣어주고 상기 인코딩 모델에서 출력된 결과 값에서 상기 특징 추출 모델의 결과 값에서 획득된 특징들에 매핑이 되는 상기 제1 컨셉을획득하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13 항에 있어서, 상기 특징 추출 모델과 상기 행렬 벡터 생성 모델은 DenseNet(densely connectedconvolution networks)을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13 항에 있어서, 상기 제2 인공 지능 모델은 디코딩 모델과 행렬 벡터 생성 모듈을 포함하되, 상기 제2 사용경험 정보를 획득하는 동작은,상기 제1 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고 상기 디코딩 모델에서 출력된 결과 값에서 상기 제1컨셉에 매핑이 되는 특징들을 추출하는 동작; 및상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡터 생성 모듈에 입력 값으로 넣어주고 상기 행렬벡터 생성 모듈에서 출력된 결과 값에서 상기 제1 행렬 벡터에 대응하는 제3 행렬 벡터와 상기 제2 행렬 벡터에대응하는 제4 행렬 벡터를 획득하는 동작을 포함하는 방법."}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "IoT(internet of things) 서버는, 서버의 통신 회로를 통해 제1 사용자 장치로부터 IoT(internet of things) 기 기들에 대한 제1 사용 경험 정보를 수신하는 동작, 전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공 지능 모델에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고 (뒷면에 계속)"}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 실시예는 인공 지능 모델을 이용하여 IoT(internet of things) 기기에 대한 사용자 경험을 공유하도 록 한 전자 장치에 관한 것이다."}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "IoT는 인터넷을 통해 서로 연결 가능한 각종 사물들(예: 가전 제품, 의료 기기, 웨어러블 기기, 스마트 폰)로 이루어진 시스템 또는 사물들을 연결하기 위한 네트워크로 정의될 수 있다. IoT 기기는 사물 인터넷을 통해 다 른 IoT 기기에 연결되고 다른 IoT 기기와 데이터를 교환 및/또는 다른 IoT 기기를 제어하기 위한 목적으로 하드 웨어와 소프트웨어를 내장한 전자 장치로 정의될 수 있다. 사용자들 간에는 IoT 기기들로 구성된 장소(예: 홈, 카페)를 공유할 수 있다. 방문자의 휴대 전자 장치(예: 스 마트 폰)는, 해당 장소 오너의 승인 하에, IoT 기기들에 대한 제어권을 가질 수 있다. 이에 따라 방문자는 방문 장소에 있는 IoT 기기를 사용할 수 있다. 현대인들은 누구나 조금씩은 IoT 기기를 사용한 경험을 갖는다. 사용 경험이 없더라도, 스마트 폰을 보유한 사 람이라면 누구나 IoT 기기를 사용 경험할 준비가 되어있다고 할 수 있다. 사용자들 간 IoT 환경에 대한 사용 경험을 공유할 수 있다. 그런데, 문제는, 사용자 각자가 경험한 IoT 환경이 다르고 해당 장소에 참여한 사용자들이 갖는 전자 장치(예: 스마트 폰)가 보유한 기능 및/또는 성능에 차이가 있을 수 있고 이에 따라 사용자들 간 사용 경험의 공유가 쉽지 않다는 점이다. 본 개시의 실시예는 IoT 기기들로 구성된 장소에 방문한 방문자의 휴대 전자 장치가 해당 장소의 오너가 IoT 기 기들을 사용하기 위해 설정한 데이터를 획득하게 할 수 있고, 획득된 데이터를 이용하여, 해당 장소에서 오너의 사용 경험과 동일한 사용 경험을 방문자에게 제공하게 할 수 있다. 본 개시에서 이루고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또"}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다. 일 실시예에 따르면, 서버는, 사용자 장치와 통신을 위한 통신 회로; 및 상기 통신 회로에 연결된 프로세서; 및 상기 프로세서와 연결된 메모리를 포함할 수 있다. 상기 메모리는, 상기 프로세서에 의해 실행될 때, 상기 프로 세서가, 상기 통신 회로를 통해 제1 사용자 장치로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험 정보를 수신하도록 하는 인스트럭션들을 저장할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공 지능 모델에 상 기 제1 사용 경험 정보를 입력 값으로 넣어주고 상기 제1 인공 지능 모델의 출력 값에서 제1 컨셉을 획득하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 컨셉을 상기 메모리에 저장하도록 할 수 있다. 상 기 인스트럭션들은 상기 프로세서가, 상기 통신 회로를 통해 제2 사용자 장치로부터 상기 IoT 기기들에 대한 사 용 경험의 공유를 요청하는 메시지를 수신하고, 상기 제2 사용자 장치의 공유 요청에 반응하여, 컨셉을 전자 장 치가 이해 가능한 사용 경험 정보로 변환하도록 학습된 제2 인공 지능 모델에 상기 제1 컨셉을 입력 값으로 넣 어주고, 제2 사용 경험 정보를 상기 제2 인공 지능 모델의 출력 값에서 획득하도록 할 수 있다. 상기 인스트럭 션들은 상기 프로세서가, 상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송하도 록 할 수 있다. 일 실시예에 따르면, 전자 장치는, 서버 및 IoT(internet of things) 기기들과 통신하기 위한 통신 회로; 상기 통신 회로에 연결된 프로세서; 및 상기 프로세서와 연결된 메모리를 포함할 수 있다. 상기 메모리는, 상기 프로 세서에 의해 실행될 때, 상기 프로세서가: 상기 IoT 기기들을 식별하기 위한 IoT 기기 정보를 열 벡터로 구성하 도록 하는 인스트럭션들을 저장할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 전자 장치에 구성된 기 능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보를 제1 행 벡터 로 구성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 IoT 기기들을 이용해서 사용자가 경험 한 서비스를 식별하기 위한 IoT 사용성 정보를 제2 행 벡터로 구성하도록 할 수 있다. 상기 인스트럭션들은 상 기 프로세서가, 상기 열 벡터와 상기 제1 행 벡터를 곱해서 제1 행렬 벡터를 생성하고, 상기 열 벡터와 상기 제 2 행 벡터를 곱해서 제2 행렬 벡터를 생성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 서버로 전송함으로써 상기 서버가 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 할 수 있다. 일 실시예에 따르면, 서버를 동작하는 방법은, 상기 서버의 통신 회로를 통해 제1 사용자 장치로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험 정보를 수신하는 동작을 포함할 수 있다. 상기 방법은, 전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공 지능 모델에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고 상기 제1 인공 지능 모델의 출력 값에서 제1 컨 셉을 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 컨셉을 상기 메모리에 저장하는 동작을 포함할 수 있다. 상기 방법은, 상기 통신 회로를 통해 제2 사용자 장치로부터 상기 IoT 기기들에 대한 사용 경험의 공 유를 요청하는 메시지를 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 사용자 장치의 공유 요청에 반응하여, 컨셉을 전자 장치가 이해 가능한 사용 경험 정보로 변환하도록 학습된 제2 인공 지능 모델에 상기 제 1 컨셉을 입력 값으로 넣어주고 제2 사용 경험 정보를 상기 제2 인공 지능 모델의 출력 값에서 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송 하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 전자 장치는 IoT 기기에 대한 사용 경험을 IoT 기기가 위치한 장소에 방문한 사람에게 공유해 줄 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있 다."}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면,모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테나 들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다.상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는 일 실시예에 따른 IoT(internet of things) 시스템을 도시한다. 도 2의 구성 요소 중 적어도 일부 는 생략될 수도 있으며, 도시되지 않은 구성 요소가 더 포함되도록 구현될 수도 있다. 도 2을 참조하면, 일 실시예에 따른 IoT 시스템은, 데이터 네트워크(216 또는 246)(예: 도 1의 제2 네트워 크)에 연결 가능한 복수의 전자 장치들을 포함한다. 예를 들어, IoT 시스템은 제1 IoT 서버, 제1 노드(node), 보이스 어시스턴트(voice assistance) 서버, 제2 IoT 서버, 제2 노드, 또는 디바이스들(221,222,223,224,225,236,237,251,252,253) 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 제1 IoT 서버는, 통신 인터페이스, 프로세서, 또는 저장부 중 적어도 하나를 포함할 수 있다. 제2 IoT 서버는, 통신 인터페이스, 프로세서, 또는 저장부 중 적 어도 하나를 포함할 수 있다. 본 문서에서의 “IoT 서버”는, 예를 들어 데이터 네트워크(예: 데이터 네트워크 또는 데이터 네트워크)에 기반하여, 중계 디바이스(예: 제1 노드 또는 제2 노드)를 통하 거나, 또는 중계 디바이스 없이 직접적으로(directly), 하나 또는 그 이상의 디바이스들(예: 디바이스들 (221,222,223,224,225,251,252,253))을 원격으로 제어 및/또는 모니터링할 수 있다. 여기에서의 “디바이스” 는, 예를 들어 가택, 사무실, 공장, 빌딩, 외부 지점, 또는 다른 타입의 부지들과 같은 로컬 환경 내에 배치되 는(또는, 위치하는) 센서, 가전, 사무용 전자 디바이스, 또는 공정 수행을 위한 디바이스로, 그 종류에는 제한 이 없다. 제어 명령을 수신하고 제어 명령에 대응하는 동작을 수행하는 디바이스는 “타겟 디바이스”로 명명될 수 있다. IoT 서버는, 복수의 디바이스들 중 타겟 디바이스를 선택하고 제어 명령을 제공하는 점에서, 중앙 서 버(central server)로 명명될 수도 있다. 일 실시예에 따라서, 제1 IoT 서버는, 데이터 네트워크를 통하여 디바이스들(221,222,223)과 통신을 수행할 수 있다. 데이터 네트워크는, 예를 들어 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신을 위한 네트워크를 의미할 수 있으며, 또는 셀룰러 네트워크를 포함할 수도 있다. 일 실시예에 따라서, 제1 IoT 서버는, 통신 인터페이스를 통하여 데이터 네트워크에 연결될 수 있다. 통신 인터페이스는, 데이터 네트워크의 통신을 지원하기 위한 통신 디바이스(또는, 통신 모듈)를 포함할 수 있으며, 하나의 구성 요소(예: 단일 칩)로 통합되거나, 또는 별도의 복수의 구성 요소들(예: 복수 칩들)로 구현될 수 있다. 제1 IoT 서버는, 제1 노드를 통하여 디바이스들(221,222,223)와 통신 을 수행할 수 있다. 제1 노드는, 제1 IoT 서버로부터의 데이터를 데이터 네트워크를 통하여 수 신하고, 수신한 데이터를 디바이스들(221,222,223) 중 적어도 일부로 송신할 수 있다. 또는, 제1 노드는, 디바이스들(221,222,223) 중 적어도 일부로부터 데이터를 수신하고, 수신한 데이터를 데이터 네트워크를 통하여 제1 IoT 서버로 송신할 수 있다. 제1 노드는, 데이터 네트워크 및 디바이스들 (221,222,223) 사이의 브릿지(bridge)로서 기능할 수 있다. 한편, 도 2에서는 제1 노드가 하나인 것과 같이 도시되어 있지만 이는 단순히 예시적인 것으로, 그 숫자에는 제한이 없다. 본 문서에서의 “노드”는, 엣지 컴퓨팅 시스템(edge computing system)일 수 있거나, 또는 허브(hub) 디바이스 일 수 있다. 일 실시예에 따라서, 제1 노드는, 데이터 네트워크의 유선 및/또는 무선의 통신을 지원 하며, 아울러 디바이스들(221,222,223)과의 유선 및/또는 무선의 통신을 지원할 수 있다. 예를 들어, 제1 노드 는, 블루투스, Wi-Fi, Wi-Fi direct, Z-wave, Zig-bee, INSETEON, X10 또는 IrDA(infrared data association 중 적어도 하나와 같은 근거리 통신 네트워크를 통하여 디바이스들(221,222,223)과 연결될 수 있으 나, 통신 종류에는 제한이 없다. 제1 노드는, 예를 들어 가택, 사무실, 공장, 빌딩, 외부 지점, 또는 다 른 타입의 부지들과 같은 환경 내에 배치(또는, 위치)될 수 있다. 이에 따라, 디바이스들(221,222,223)은, 제1 IoT 서버에 의하여 제공되는 서비스에 의하여 모니터링 및/또는 제어될 수 있으며, 디바이스들 (221,222,223)은 제1 IoT 서버로의 직접 연결을 위한 완전한 네트워크 통신(예: 인터넷 통신)의 캐퍼빌리 티(capability)를 갖출 것이 요구되지 않을 수 있다. 디바이스들(221,222,223)은, 예를 들어 전등 스위치, 근 접 센서, 온도 센서 등으로 가택 환경 내의 전자 장치로 구현된 것과 같이 도시되었지만, 이는 예시적인 것으로 제한은 없다. 일 실시예에 따라서, 제1 IoT 서버는, 디바이스들(224,225)과의 직접 통신(direct communication)을 지원 할 수도 있다. 여기에서, “직접 통신”은, 예를 들어 제1 노드와 같은 중계 디바이스를 통하지 않은 통 신으로, 예를 들어 셀룰러 통신 네트워크 및/또는 데이터 네트워크를 통한 통신을 의미할 수 있다. 일 실시예에 따라서, 제1 IoT 서버는, 디바이스들(221,222,223,224,225) 중 적어도 일부로 제어 명령을 송 신할 수 있다. 여기에서, “제어 명령”은, 제어 가능한 디바이스가 특정 동작을 수행하도록 야기하는 데이터 를 의미할 수 있으며, 특정 동작은 디바이스에 의하여 수행되는 동작으로, 정보의 출력, 정보의 센싱, 정보의 보고, 정보의 관리(예: 삭제, 또는 생성)를 포함할 수 있으며, 그 종류에는 제한이 없다. 예를 들어, 프로세서 는, 외부(예: 보이스 어시스턴트 서버, 제2 IoT 서버, 외부 시스템, 또는 디바이스들 (221,222,223,224,225) 중 적어도 일부)로부터 제어 명령을 생성하기 위한 정보(또는, 요청)를 획득하고, 획득 한 정보에 기반하여 제어 명령을 생성할 수 있다. 또는, 프로세서는, 디바이스들(221,222,223,224,225) 중 적어도 일부의 모니터링 결과가 지정된 조건을 만족함에 기반하여 제어 명령을 생성할 수 있다. 프로세서 는, 제어 명령을, 타겟 디바이스로 송신하도록 통신 인터페이스를 제어할 수 있다. 일 실시예에 따라서, 프로세서, 프로세서, 또는 프로세서는, CPU(central processing unit), DSP(digital signal processor), AP(application processor), CP(communication processor) 등과 같은 범용 프로세서, GPU(graphical processing unit), VPU(vision processing Unit)와 같은 그래픽 전용 프로세서 또는 NPU(neural processing unit)와 같은 인공 지능 전용 프로세서 중 하나 이상의 조합으로 구현될 수 있다. 상술 한 처리 유닛은 단순히 예시적인 것으로, 프로세서는, 예를 들어 메모리에 저장된 인스트럭션을 실행 하여, 실행된 결과를 출력할 수 있는 연산 수단이라면 제한이 없음을 당업자는 이해할 것이다. 일 실시예에 따라서, 프로세서는, API에 기반하여 웹-기반 인터페이스를 구성하거나, 또는 제1 IoT 서버에 의하여 관리되는 리소스(resource)를 외부에 노출시킬 수 있다. 웹-기반 인터페이스는, 예를 들어 제1 IoT 서버 및 외부 웹 서비스 사이의 통신을 지원할 수 있다. 프로세서는, 예를 들어 외부 시스 템으로 하여금 디바이스들(221,222,223)의 제어 및/또는 억세스를 허용할 수도 있다. 외부 시스템은, 예를 들어 시스템과 연관이 없거나, 또는 일부가 아닌 독립적인 시스템일 수 있다. 외부 시스템은, 예를 들어 외부 서버이거나, 또는 웹 사이트일 수 있다. 하지만, 외부 시스템으로부터의 디바이스들(221,222,223), 또는 제1 IoT 서버의 리소스로의 억세스에 대한 보안이 요구된다. 일 실시예에 따라서, 프로세서는, 자동화 어플리케이션은 API에 기반한 API 엔드 포인트(예: URL(universal resource locator))를 외부에 노출할 수 있다. 상술한 바에 따라서, 제1 IoT 서버는, 제어 명령을 디바이 스들(221,222,223) 중 타겟 디바이스에게 전달할 수 있다. 한편, 제2 IoT 서버의 통신 인터페이스, 프로세서, 저장부의 API, 데이터베이스에 대한 설명은, 제1 IoT 서버의 통신 인터페 이스, 프로세서, 저장부의 API, 데이터베이스에 대한 설명과 실질적으로 동일할 수 있다. 아울러, 제2 노드에 대한 설명은, 제1 노드에 대한 설명과 실질적으로 동일할 수 있다. 제2 IoT 서버는, 제어 명령을 디바이스들(251,252,253) 중 타겟 디바이스에게 전달할 수 있다. 제1 IoT 서버 및 제2 IoT 서버는, 하나의 실시예에서는 동일한 서비스 제공자에 의하여 운영될 수 있으나, 다른 실시예에서는 상이한 서비스 제공자들에 의하여 각각 운영될 수도 있다. 일 실시예에 따라서, 보이스 어시스턴트 서버는, 데이터 네트워크를 통하여 제1 IoT 서버와 데 이터를 송수신할 수 있다. 일 실시예에 따른 보이스 어시스턴트 서버는, 통신 인터페이스, 프로세서 , 또는 저장부 중 적어도 하나를 포함할 수 있다. 통신 인터페이스는, 데이터 네트워크(미도시) 및/또는 셀룰러 네트워크(미도시)를 통하여 스마트 폰 또는 AI 스피커와 통신을 수 행할 수 있다. 스마트 폰(예: 도 1의 전자 장치) 또는 AI 스피커(예: 도 1의 전자 장치(10 2))는 마이크를 포함할 수 있으며, 사용자 음성(user voice)을 획득하여 음성 신호로 변환하여, 음성 신호를 보 이스 어시스턴트 서버로 송신할 수 있다. 프로세서는, 통신 인터페이스를 통하여 스마트 폰 또는 AI 스피커로부터 음성 신호를 수신할 수 있다. 프로세서는, 수신한 음성 신호를 저장된 모델에 기반하여 처리할 수 있다. 프로세서는, 데이터베이스에 저장된 정보에 기반하여, 처리 결과를 이용하여 제어 명령을 생성(또는, 확인)할 수 있다. 일 실시예에 따라서, 저장부(213,233,243)는, 플래 시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입 (multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(RAM, Random Access Memory), SRAM(Static Random Access Memory), 롬(ROM, Read-Only Memory), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 비 일시적(non-transitory) 저장매체를 포함할 수 있으며, 그 종류에는 제한이 없다. 도 3은, 일 실시예에 따른, 사용자들 간에 IoT 기기에 대한 경험을 공유하도록 구성된 IoT 시스템을 도시 한다. 도 3을 참조하면, IoT 시스템은 IoT 기기 그룹, IoT 기기 그룹에 속한 적어도 하나의 IoT 기기 를 사용해 본 경험이 있는 제1 사용자(예: IoT 기기를 소유한 사람)가 보유한 제1 사용자 장치(예컨대, 제1 사 용자가 휴대하는 스마트 폰, 태블릿 PC, 또는 노트북 PC로서 이하, 경험자 장치(experienced person's devic e)로 명명될 수 있음), 제2 사용자(예: IoT 기기 그룹이 위치한 장소에 방문한 사람)가 보유한 제2 사용자 장치(예컨대, 제2 사용자가 휴대하는 스마트 폰, 태블릿 PC, 또는 노트북 PC로서 이하, 피경험자 장치 (non-experienced person's device)로 명명될 수 있음), 및 IoT 서버를 포함할 수 있다. IoT서버 (예: 도 2의 IoT 서버(210 or 240))는 IoT 기기 그룹에 속한 IoT 기기(들)과 경험자 장치에 대 한 사용자의 사용 경험을 경험자 장치에서 피경험자 장치로 공유하도록 구성될 수 있다. 위에서 그리 고 후술하게 될 접두사 “제1” 및 “제2”는 해당 명칭의 구분을 위한 것일 뿐 그 자체에 중요도나 순서 등과 같이 특별한 의미가 부여된 것은 아니다. IoT 시스템에서 IoT 기기 그룹은 네트워크(예: 제2 네트워크, 데이터 네트워크(216 or 246))를 통해 IoT서버와 통신할 수 있다. 경험자 장치와 피 경험자 장치는 네트워크를 통 해 IoT서버와 통신할 수 있다. IoT 기기 그룹은 지정된 장소(예: home)에 위치한 IoT 기기들을 포함 할 수 있다. 예컨대, IoT 기기 그룹은 도 2에서 제1 노드에 연결된 디바이스들(221,222,223) 또는 제 2 노드에 연결된 디바이스들(251, 252, 253)을 포함할 수 있다. IoT 기기 그룹 내 IoT 기기들 간에 는 네트워크나 해당 장소에 위치한 AP(access point)를 통해서 또는 P2P(peer to peer) 통신 기술(예: 와 이파이 다이렉트 또는 블루투스)을 이용하여, 데이터 송수신 또는 원격 제어를 위한 통신이 이루어질 수 있다. 경험자 장치 역시, IoT 기기 그룹에 속한 IoT 기기이며 IoT 기기 그룹 내 다른 IoT 기기들에 대 한 제어 권한을 가질 수 있다. 예를 들어, 경험자 장치는, 사용자 계정(예: 이메일 주소, 휴대 전화 번 호)을 이용하여, IoT 서버에 로그인할 수 있다. 경험자 장치는 IoT 기기의 제품 코드를 예컨대 QR 스 캔 기능을 이용하여 획득하고 IoT 서버에 등록함으로써 제어 권한을 가질 수 있다. 경험자 장치는, 네트워크 또는 해당 장소에 위치한 AP를 통해서 또는 P2P(peer to peer) 통신 기술을 이용하여, IoT 기기 그룹 내 IoT 기기들과 데이터 송수신 또는 원격 제어를 위한 통신을 수행할 수 있다. 예컨대, 경험자 장치의 프로세서는 IoT 기기의 작동을 위한 사용자의 설정 정보를 저장할 수 있다. 경험자 장치의 프로세서는, 경험자 장치의 무선 통신 회로(wireless communication circuitry)를 이용하여, IoT 기기 그룹 내 IoT 기기(예: TV, 에어컨, 세탁기, 냉장고, 전등, 스피커, PC)의 작동 상태를 모니터링 할 수 있다. 경험자 장치의 프로세서는 모니터링 결과(예: 세탁 완료)를 사용자에게 디스플레이를 통해 안 내할 수 있다. 경험자 장치의 프로세서는, 설정 정보 및/또는 모니터링 결과에 기반하여, 해당 IoT 기기의 작동을 원격 제어할 수 있다. 경험자 장치는 그룹 내 IoT 기기의 대한 제어 권한을 IoT 서버를 통해 피경험자 장치로 제 공할 수 있다. 경험자 장치는 그룹 내 IoT 기기 및 경험자 장치에 대한 사용 경험을 IoT 서버 를 통해 피경험자 장치로 제공할 수 있다. 일 실시예에 따르면, 경험자 장치의 프로세서는, IoT기기 그룹에 어떠한 IoT 기기들이 속해 있는지를 다른 장치가 식별할 수 있도록 하는 정보(IoT 기기 정 보)를 IoT 서버를 통해 피경험자 장치로 제공할 수 있다. 프로세서는 경험자 장치에 어떠한 기 능들로 구성되어 있고 구성된 기능들 중에서 어떠한 기능이 ‘사용 중(활성화 상태)’으로 설정되고 어떠한 기 능이 ‘사용 안함(비활성화 상태)’으로 설정되어 있는지를 다른 장치가 식별할 수 있도록 한(구성 (configuration) 정보)를 IoT 서버를 통해 피경험자 장치로 제공할 수 있다. 프로세서는 그룹 내 IoT 기기들을 이용하여 사용자가 어떠한 IoT 서비스를 경험을 했는지를 다른 장치가 식별할 수 있도록 한 정 보(IoT 사용성(usages) 정보)를 IoT 서버를 통해 피경험자 장치로 제공할 수 있다. 일 실시예에 따르면, 경험자 장치의 프로세서는 IoT 기기 정보와 구성 정보를 각각 열 벡터(N*1)와 행 벡 터(1*M)로 구성하고 열 벡터와 행 벡터를 곱해서 제1 행렬(matrix) 벡터(N*M)를 생성하고 제1 행렬 벡터를 IoT 서버를 통해 피경험자 장치로 제공할 수 있다. 경험자 장치의 프로세서는 IoT 기기 정보와 IoT 사용성 정보를 각각 열 벡터(N*1)와 행 벡터(1*L)로 구성하고 열 벡터와 행 벡터를 곱해서 제2 행렬 벡터(N*L) 를 생성하고 제2 행렬 벡터를 IoT 서버를 통해 피경험자 장치로 제공할 수 있다. 피경험자 장치는, IoT 서버를 통해 경험자 장치로부터 제공받은 정보(제1 행렬 벡터와 제2 행렬 벡터)를 이용하여, 경험자 장치의 사용자가 IoT 기기들을 사용해 본 경험과 동일(또는, 유사)한 사용 경험 을 피경험자 잗치의 사용자에게 제공할 수 있다. 예를 들어, 피경험자 장치는 제공받은 IoT 기기 정 보로부터 그룹 내 에어컨이 존재한다는 것을 인지하고 제공받은 IoT 사용성 정보로부터 “실내 온도 24도 ”라는 사용 경험을 인지하고 실내 온도가 24도로 유지되게 에어컨을 원격 제어할 수 있다. 피경험자 장치(32 0)는 제공받은 구성 정보를 이용하여 피경험자 장치를 설정함으로써 경험자 장치에 대한 사용자의 사 용 경험과 동일한 사용 경험을 피경험자 장치의 사용자에게 제공할 수 있다. 도 4는, 일 실시예에 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 사용자 장치의 블록도이다. 도 5a 및 5b는, 일 실시예에 따른, IoT 기기들에 대한 사용 경험을 벡터화하는 동작을 설명하기 위 한 도면들이다. 도 4를 참조하면, 사용자 장치(예: 제1 사용자 장치 또는 제2 사용자 장치)는 사용 경험 관리 모듈, 사용 경험 동기화 모듈, 제1 통신 회로, 제1 메모리, 및 제1 프로세서를 포함 할 수 있다. 상기 모듈들(410, 420)은 인스트럭션들(instructions)로 구성되어 제1 메모리에 저장되고 제1 프로세서에 의해 실행될 수 있다. 제1 통신 회로, 제1 메모리, 및 제1 프로세서는 각각, 도 1의 통신 모듈, 메모리, 및 프로세서와 실질적으로 동일하게 구현됨으로써 동일한 기능을 수 행할 수 있다. 사용 경험 관리 모듈은 사용자 장치가 속한 제1 IoT 기기 그룹 내 IoT 기기들을 사용해 본 사용자의 경험을 나타내는 정보(사용 경험 정보)를 관리하도록 구성될 수 있다. 여기서, 관리는 사용 경험 정보 를 생성, 저장, 갱신, 또는 제1 통신 회로를 통해 IoT 서버(예: 도 3의 IoT 서버)로 제공을 포 함할 수 있다. IoT 서버는 사용자 장치로부터 수신된 사용 경험 정보를 다른 사용자 장치(예: 피경험자 장 치)로 제공할 수 있다. 일 실시예에 따르면, 사용 경험 정보는 IoT 기기 정보, 구성 정보, 및 IoT 사 용성 정보를 포함할 수 있다. 사용 경험 관리 모듈은 사용 경험 정보를 이용하여 제1 행렬 벡터와 제 2 행렬 벡터를 생성하고 IoT 서버로 제공할 수 있다. 도 5a 및 5b를 참조하면, 사용 경험 관리 모듈은 IoT 기기들에 대응하는 N개의 요소들을 열 벡터(N*1)로 표현한 IoT 기기 벡터를 생성할 수 있다. IoT 기기 벡터에서 각 요소는 해당 IoT 기기가 그룹의 일원 인지 여부(사용자가 보유하고 있는지 여부)에 따라 0 또는 1의 값을 가질 수 있다. 예컨대, IoT 기기 그룹에 구 성된 IoT 기기에 대응하는 요소에는 1의 값이 할당되고 IoT 기기 그룹에 구성되어 있지 않은 IoT 기기에 대응하 는 요소에는 0의 값이 할당될 수 있다. 사용 경험 관리 모듈은 사용자 장치에 구성 가능한 기능들에 대응하는 M 개의 요소들을 행 벡터(1*M)로 표현한 구성 벡터를 생성할 수 있다. 구성 요소에서 각 요 소는 해당 기능의 활성화 여부에 따라 0 또는 1의 값을 가질 수 있다. 예컨대, 활성화 상태인 기능에 대응하는 요소에는 1의 값이 할당되고 비활성화 상태인 기능에 대응하는 요소에는 0의 값이 할당될 수 있다. 사용자 장치 의 종류(기종)에 따라 구성 벡터에서 요소에 지정된 기능을 나타내는 명칭은 변경될 수 있다. 예컨대, 도 5a에 도시된 “Quick Share”라는 명칭은, 동일(또는, 유사)한 기능에 해당되나, 명칭만 다른 “Air Drop”으로 변경될 수 있다. 사용 경험 관리 모듈은 IoT 기기 그룹에서 제공되는 IoT 서비스들에 대응하는 L개의 요소들을 행 벡터(1*L)로 표현한 IoT 사용성 벡터를 생성할 수 있다. 제공되는 IoT 서비스에 대한 사용자의 경험 유무에 따라 해당 요소에 실수 값(real value)이 할당될 수 있다. 할당된 실수 값들은 도 5b에도시된 바와 같이 0과 1 사이의 값으로 정규화될 수 있다. 예컨대, 음성 비서 서비스로서, 빅스비(Bixby)에 대 한 사용 경험이 있으면 0.2, 쉬리(Siri)에 대한 사용 경험이 있으면 0.4, 알렉사(alexa)에 대한 사용 경험이 있 으면 0.6, 그리고 구글 보이스에 대한 사용 경험이 있으면 0.8이 해당 요소에 할당될 수 있다. 또 하나의 예로, “실내 온도 설정”이라는 서비스의 해당 요소에 섭씨 24도에 대응하는 0.5가 할당될 수 있다. 다시 도 5a 및 5b를 참조하면, 사용 경험 관리 모듈은 IoT 기기 벡터와 구성 벡터를 행렬 곱 연 산하여 제1 행렬 벡터를 생성할 수 있다. 사용 경험 관리 모듈은 IoT 기기 벡터와 IoT 사용성 벡터을 행렬 곱 연산하여 제2 행렬 벡터를 생성할 수 있다. 사용 경험 관리 모듈은 벡터들(510, 520, 530, 540, 550)을 제1 메모리에 저장하고 IoT 서버에 제공할 수 있다. 신규 IoT 기기가 그룹의 일원으로 추가되거나 IoT 기기 그룹에서 기존 IoT 기기가 제외되는 것과 같은 IoT 기기 그룹의 업데이트가 발생될 수 있다. 예컨대, 사용 경험 관리 모듈은 신규 IoT 기기의 제품 코드를 카메라 를 이용하여 획득하고 획득된 제품 코드를 IoT 서버에 등록할 수 있다. 사용 경험 관리 모듈은 IoT 기기 벡터에서 신규 IoT 기기에 해당하는 요소의 값을 ‘1’로 변경함으로써 IoT 기기 벡터를 갱신할 수 있다. 사용 경험 관리 모듈은 IoT 기기들의 목록을 디스플레이에 표시하고, 목록에서 사용자가 제외를 선 택한 IoT 기기에 대응하는 요소를 IoT 기기 벡터에서 확인하고, 확인된 요소의 값을 ‘0’으로 변경함으로 써 IoT 기기 벡터를 갱신할 수 있다. 사용 경험 관리 모듈은 갱신된 IoT 기기 벡터를 이용하여 제1 행렬 벡터 및 제2 행렬 벡터를 갱신하고 IoT 서버에 제공할 수 있다. IoT 서버는 갱신된 행렬 벡 터들을 이용하여 컨셉 DB(예: 후술할 컨셉 DB)에 저장된 해당 컨셉을 갱신할 수 있다. 사용 경험 관리 모듈은 사용자 장치에 구성된 기능들에 대한 상태를 사용자가 설정할 수 있도록 하는 사용자 인터페이스(예: 팝업 윈도우, 설정 화면)를 디스플레이 표시할 수 있다. 사용 경험 관리 모듈은 사 용자 인터페이스에서 사용자가 상태 변경(활성화 상태에서 비활성화 상태로 변경 또는 그 반대로 변경)한 기능 에 대응하는 요소를 구성 벡터에서 확인하고, 확인된 요소의 값을 변경함으로써 구성 벡터를 갱신할 수 있다. 사용 경험 관리 모듈은 갱신된 구성 벡터를 이용하여 제1 행렬 벡터를 갱신하고 IoT 서버에 제공할 수 있다. IoT 서버는 갱신된 제1 행렬 벡터를 이용하여 컨셉 DB(예: 후술할 컨셉 DB)에 저 장된 해당 컨셉을 갱신할 수 있다. 사용 경험 관리 모듈은 제공되는 IoT 서비스에 대한 사용 경험을 모니터링하고 모니터링 결과에 기반하여 IoT 사용성 벡터를 갱신할 수 있다. 예를 들어, 사용 경험 관리 모듈은 사용자가 사용자 장치를 이용하여 에어컨을 원격 제어함으로써 에어컨의 설정 온도를 변경할 수 있다. 사용 경험 관리 모듈은 설정 온도가 변경되었음을 인지하고 실내 온도 설정 서비스에 대응하는 요소를 변경된 설정 온도에 대응하는 값으로 변경함으로써 IoT 사용성 벡터를 갱신할 수 있다. 사용 경험 관리 모듈은 갱신된 IoT 사용성 벡터 를 이용하여 제2 행렬 벡터를 갱신하고 IoT 서버에 제공할 수 있다. IoT 서버는 갱신된 제2 행렬 벡 터를 이용하여 컨셉 DB(예: 후술할 컨셉 DB)에 저장된 해당 컨셉을 갱신할 수 있다. 사용 경험 동기화 모듈은 제1 통신 회로를 통해 IoT 서버로부터 다른 사용자 장치(예: 경험자 장치)를 사용하는 사용자의 사용 경험과 관련한 벡터(예: 제1 행렬 벡터, 제2 행렬 벡터)를 수신하고 수신 된 벡터화된 사용 경험 정보에서 IoT 기기 정보, 구성 정보, 및 IoT 사용성 정보를 추출하도록 구성될 수 있다. 사용 경험 동기화 모듈은 추출된 정보를 이용하여 다른 사용자 장치가 속한 IoT 기기 그룹 내 IoT 기기들 을 사용해 본 사용자의 경험과 동일한 사용 경험을 사용자 장치의 사용자에게 제공하도록 구성될 수 있다. 예를 들어, 사용 경험 동기화 모듈은 추출된 IoT 사용성 정보에서 실내 온도의 설정 값을 확인하고, 확인 된 설정 값으로 실내 온도 유지되도록 에어컨을 원격 제어할 수 있다. 도 6 은, 일 실시예 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 IoT 서버의 블록 도이다. 아래 설명에서, 접미사 “-S(server)”가 붙은 데이터는 IoT 서버에서 생산된 데이터이거나 사용 자 장치가 IoT 서버로부터 수신한 데이터일 수 있다. 접미사 “-U(user)”가 붙은 데이터는 사용자 장치에 서 생산된 데이터, 사용자 장치에 저장된 데이터, 또는 사용자 장치가 사용자에게 제공한 데이터 중에서 사용자 가 반응을 보인 데이터일 수 있다. 이러한 접미사는, 구성 요소나 데이터 구분을 위한 것이지, 그 자체에 특별 한 의미가 부여된 것은 아니다. 도 6을 참조하면, IoT 서버(예: IoT 서버)는 특징 추출 모델, 인코딩 모델, 디코딩 모델 , 행렬 벡터 생성 모델, 제2 통신 회로, 제2 메모리, 및 제2 프로세서를 포함할 수 있다. 모델들(610, 620, 630, 640)은 각각, 인공 지능 알고리즘을 이용하여 기계 학습된 인공 지능 모델로 구성 될 수 있다. 모델들(610, 620, 630, 640)은 각각, 입력 값으로 이용되는 제1 훈련 데이터 및 출력 값으로 이용되는 제2 훈련 데이터를 이용하여 학습될 수 있다. 모델들(610, 620, 630, 640)은 제2메모리에 저장되고 제2프로세서에 의해 실행될 수 있다. 제2 통신 회로, 제2 메모리, 및 제2 프로세서는 각각, 도 1의 통신 모듈, 메모리, 및 프로세서와 실질적으로 동일하게 구현됨으로써 동일한 기 능을 수행할 수 있다. 제 2 프로세서는 제1 행렬 벡터-U(예: 제1 행렬 벡터)와 제2 행렬 벡터-U(예: 제2 행렬 벡터)를 제2 통신 회로를 통해 제1 사용자 장치(예: 제1 사용자 장치)로부터 수신할 수 있다. 제2 프로세서 는 제1 행렬 벡터-U와 제2 행렬 벡터-U를 특징 추출 모델에 입력 값으로 넣어 줄 수 있다. 특징 추출 모델(예: DenseNet(densely connected convolution networks))은 제1 행렬 벡터-U와 제2 행렬 벡터-U에서 서로 독립적인 다수의 특징들을 추출하고 추출된 특징들을 결과 값으로 출력할 수 있다. 제2 프로세서는 특징 추출 모델에서 추출된 특징들을 인코딩 모델 에 입력 값으로 넣어줄 수 있다. 인코딩 모델(62 0)은 추출된 특징들에 매핑이 되는 컨셉(concept) 또는 추출된 특징들 중 주목(attention)해야 할 특징들에 매 핑된 컨셉을 생성해서 결과 값으로 출력할 수 있다. 컨셉은, 전자 장치에서 생성된 사용 경험 정보(예: IoT 기 기 정보, 구성 정보, IoT 사용성 정보)가 쉽고 명확하게 사람이 이해되도록 사용 경험 정보의 핵심적인 내용이 추상화(abstraction)(또는, 단순화)된 것으로 정의될 수 있다. 예시적으로 컨셉은, “실내 온도 00도 유지”, “미세먼지 좋음 유지”, “미온수 세탁”, “건조기 온도(중)”, “에어 드레서(air dresser)(미세먼지 제거) ”, “사운드 바(예: AI 스피커)(음량 7)”, 및 “식기세척기(저소음 모드)”를 포함할 수 있다. 제2 프로 세서는 인코딩 모델에서 출력된 컨셉을 제2 메모리에서 컨셉을 저장하도록 할당된 메모리 영역 인 컨셉 DB에 저장할 수 있다. 추가적으로, 제2 프로세서는 인코딩 모델에 의해 생성된 컨셉을"}
{"patent_id": "10-2022-0133935", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "제1 사용자 장치로 공유해 줄 수 있다. 요약하자면, 특징 추출 모델과 인코딩 모델은 특정 사용자 장 치를 이용하여 획득된 사용 경험이 다른 사용자 장치들에 범용적으로 적용될 수 있게 행렬 벡터들을 중간 연산 값인 컨셉으로 변환해주는 기능을 수행한다고 볼 수 있다. 제2 프로세서는 제2 통신 회로를 통해 제2 사용자 장치(예: 제2 사용자 장치)로부터 제1 사용자 장치가 속한 IoT 기기 그룹(예: IoT 기기 그룹)에 대한 사용 경험의 공유를 요청하는 메시지를 수신할 수 있다. 제2 사용자 장치의 공유 요청에 반응하여, 제2 프로세서는 디코딩 모델과 행렬 벡터 생성 모델 을 이용하여 제1 행렬벡터-S와 제2 행렬벡터-S를 생성할 수 있다. 일 실시예에 따르면, 제2 프로세서(69 9)는 제1 사용자 장치에 대응하는 컨셉을 컨셉 DB에서 획득하고, 획득된 컨셉을 디코딩 모델에 입력 값으로 넣어줄 수 있다. 디코딩 모델 은 컨셉에 매핑이 되는 다수의 특징들을 결과 값으로 출력할 수 있다. 제2 프로세서는 디코딩 모델에서 출력된 특징들을 행렬 벡터 생성 모델(예: DenseNet)에 입력 값으로 넣어줄 수 있다. 행렬 벡터 생성 모델은 특징들을 제1 행렬벡터-S와 제2 행렬벡터-S로 변환하 고 결과 값으로 출력할 수 있다. 제2 사용자 장치의 공유 요청에 반응하여, 제2 프로세서는 제1 행렬벡터- S와 제2 행렬벡터-S를 제2 통신 회로를 통해 제2 사용자 장치에게 전달할 수 있다. 제2 사용자 장치의 프 로세서는 수신된 제1 행렬벡터-S와 제2 행렬벡터-S에서 IoT 기기 정보, 구성 정보, 및 IoT 사용성 정보를 추출 할 수 있다. 제2 프로세서는 추출된 구성 정보를 이용하여 제2 사용자 장치를 설정할 수 있다. 제2 프로세 서는 추출된 IoT 기기 정보와 IoT 사용성 정보를 이용하여 IoT 기기들을 원격으로 제어 및/또는 모니터링 할 수 있다. 예를 들어, 제2 프로세서는 추출된 IoT 사용성 정보에서 실내 온도의 설정 값을 확인하고, 확 인된 설정 값으로 실내 온도 유지되도록 에어컨을 원격 제어할 수 있다. 제2 프로세서는 제1 학습 데이터(행렬 벡터)와 제2 학습 데이터(컨셉)를 이용하여 모델들(610, 620, 630, 640)을 학습함으로써 제1 사용자의 사용 경험이 제2 사용자에게 온전히 전달될 확률을 높일 수 있다. 예를 들어, 제2 프로세서는 제1 행렬 벡터-U와 제1 행렬 벡터-S 간의 일치율과 제2 행렬 벡터-U와 제2 행렬 벡 터-S 간의 일치율이 높도록 모델들(610, 620, 630, 640)을 학습할 수 있다. 도 7 은, 일 실시예에 따른, 기종이 동일한 사용자 장치들 간 그리고 기종이 다른 사용자 장치들 간에 사용 경 험을 공유할 수 있도록 하는 IoT 시스템을 도시한다. 도 7의 구성에서 도 6의 구성과 동일한 구성에 대한 구체 적인 설명은 간략하거나 생략될 수 있다. 도 7의 IoT 시스템에서 IoT 서버는 다수의 특징 추출 모델들(711, 712), 다수의 인코딩 모델들(721, 722), 다수의 디코딩 모델들(731, 732), 및 다수의 행렬 벡터 생성 모델(741, 742)을 포함할 수 있다. 일 실시 예에 따르면, 특징 추출 모델, 인코딩 모델, 디코딩 모델, 및 행렬 백터 생성 모델 중 적어도 하나의 모델(예: 디코딩 모델)은 사용자 장치의 기종에 따라 구분될 수 있다. 예컨대, 제1 특징 추출 모델, 제1 인코딩 모 델, 제1 디코딩 모델, 및 제1 행렬 벡터 생성 모델은 제1 타입의 사용자 장치(예: AndroidTM가탑재된 기종)를 이용해서 IoT 기기를 사용하는 사용자의 경험을 공유하기 위해 학습된 모델일 수 있다. 제2 특 징 추출 모델, 제2 인코딩 모델, 제2 디코딩 모델, 및 제2 행렬 벡터 생성 모델은 제2 타 입의 사용자 장치(예: iOSTM가 탑재된 기종)를 이용해서 IoT 기기를 사용하는 사용자의 경험을 공유하기 위해 학 습된 모델일 수 있다. 다른 예로, 디코딩 모델은 기종 별로 구분되고, 특징 추출 모델, 인코딩 모델, 및 행렬 벡터 생성 모델은, 기종과 상관없이(즉, 도시된 바와 같이 “제1”과 “제2”로 구분함이 없이), 범용적으로 사 용될 수 있다. 도 7의 IoT 시스템에서 제1 사용자 장치는 IoT 기기 정보, 구성 정보, 및 IoT 사용성 정보를 각각 벡터화 하고 벡터화된 정보(701a)(예: IoT 기기 벡터, 구성 벡터, 및 IoT 사용성 벡터)를 이용하여 행 렬 벡터들(701b)(예: 제1 행렬 벡터, 제2 행렬 벡터)를 생성하고 IoT 서버로 제공할 수 있다. 행렬 벡터들(701b)은 IoT 서버에서 제1 사용자 장치의 기종에 대응하는 제1 특징 추출 모델의 입력 값으로 사용될 수 있다. 제1 특징 추출 모델은 행렬 벡터들(701b)에서 제1 특징들을 추출할 수 있다. 제1 특징들은 제1 인코딩 모델의 입력 값으로 사용될 수 있다. 제1 인코딩 모델은 제1 특징들에 매핑 이 되는 제1 컨셉을 생성해서 컨셉 DB에 저장할 수 있다. IoT 서버는 제1 컨셉을 제1 사용자 장 치로 공유해 줄 수 있다. 도 7의 IoT 시스템에서 제2 사용자 장치는 IoT 기기 정보, 구성 정보, 및 IoT 사용성 정보를 각각 벡터화 하고 벡터화된 정보(702a)를 이용하여 행렬 벡터들(702b)를 생성하고 행렬 벡터들(702b)을 IoT 서버로 제 공할 수 있다. 행렬 벡터들(702b)은 IoT 서버에서 제2 사용자 장치의 기종에 대응하는 제2 특징 추출 모델의 입력 값으로 사용될 수 있다. 제2 특징 추출 모델은 행렬 벡터들(702b)에서 제2 특징들을 추 출할 수 있다. 제2 특징들은 제2 인코딩 모델의 입력 값으로 사용될 수 있다. 제2 인코딩 모델은 제2 특징들에 매핑이 되는 제2 컨셉을 생성해서 컨셉 DB에 저장할 수 있다. IoT 서버는 제2 컨셉을 제2 사용자 장치로 공유해 줄 수 있다. 도 7의 IoT 시스템에서 IoT 서버(예: IoT 서버의 제2 프로세서)는 제3 사용자 장치로부터 제1 사용자 장치가 속한 IoT 기기 그룹(예: IoT 기기 그룹)에 대한 사용 경험의 공유를 요청하는 메 시지를 수신할 수 있다. 제3 사용자 장치의 공유 요청에 반응하여, IoT 서버는 제1 사용자 장치(70 1)에 대응하는 제1 컨셉을 선택할 수 있다. IoT 서버는 제3 사용자 장치의 기종을 확인하고, 확 인된 기종이 제1 사용자 장치의 기종과 동일함을 확인하고, 동일 기종임이 확인된 것에 기반하여, 제1 디 코딩 모델을 제1 컨셉을 처리할 디코딩 모델로 선택할 수 있다. 제1 디코딩 모델은 제1 컨셉 에 매핑이 되는 다수의 특징들을 결과 값으로 출력할 수 있다. IoT 서버는 제1 디코딩 모델에서 출력된 특징들을 제1 행렬 벡터 생성 모델에 입력 값으로 넣어줄 수 있다. 제1 행렬 벡터 생성 모델 은 특징들을 행렬 벡터들(703a)로 변환하고 제3 사용자 장치로 출력할 수 있다. 제3 사용자 장치는 행렬 벡터들(703a)로부터 벡터화된 정보(703b)를 추출하고, 추출된 정보(703b)를 이용하여 제1 사용자 장치 가 속한 IoT 기기 그룹 내 IoT 기기들을 사용해 본 사용자의 경험과 동일한 사용 경험을 제3 사용자 장치 의 사용자에게 제공할 수 있다. 도 7의 IoT 시스템에서 IoT 서버는 제4 사용자 장치로부터 제1 사용자 장치가 속한 IoT 기기 그 룹(예: IoT 기기 그룹)에 대한 사용 경험의 공유를 요청하는 메시지를 수신할 수 있다. 제4 사용자 장치 의 공유 요청에 반응하여, IoT 서버는 제1 사용자 장치의 기종에 대응하는 제1 컨셉을 선 택할 수 있다. IoT 서버는 제4 사용자 장치의 기종을 확인하고, 확인된 기종이 제2 디코딩 모델(73 2)에 대응함을 확인하고, 이에 기반하여, 제2 디코딩 모델을 제1 컨셉을 처리할 디코딩 모델로 선택 할 수 있다. 제2 디코딩 모델은 제1 컨셉에 매핑이 되는 다수의 특징들을 결과 값으로 출력할 수 있 다. IoT 서버는 제2 디코딩 모델에서 출력된 특징들을 제2 행렬 벡터 생성 모델에 입력 값으로 넣어줄 수 있다. 제2 행렬 벡터 생성 모델은 특징들을 행렬 벡터들(704a)로 변환하고 제4 사용자 장치 로 출력할 수 있다. 제4 사용자 장치는 행렬 벡터들(704a)로부터 벡터화된 정보(704b)를 추출하고, 추출된 정보(704b)를 이용하여 제1 사용자 장치가 속한 IoT 기기 그룹 내 IoT 기기들을 사용해 본 사용자 의 경험과 동일한 사용 경험을 제4 사용자 장치의 사용자에게 제공할 수 있다. 도 7의 IoT 시스템에서 IoT 서버는 제5 사용자 장치로부터 제2 사용자 장치가 속한 IoT 기기 그 룹에 대한 사용 경험의 공유를 요청하는 메시지를 수신할 수 있다. 제5 사용자 장치의 공유 요청에 반응하 여, IoT 서버는 제2 사용자 장치에 대응하는 제2 컨셉을 선택할 수 있다. IoT 서버는 제5 사용자 장치의 기종을 확인하고, 확인된 기종이 제2 사용자 장치의 기종과 동일함을 확인하고, 동일기종임이 확인된 것에 기반하여, 제2 디코딩 모델을 제2 컨셉을 처리할 디코딩 모델로 선택할 수 있 다. 제2 디코딩 모델은 제2 컨셉에 매핑이 되는 다수의 특징들을 결과 값으로 출력할 수 있다. IoT 서버는 제2 디코딩 모델에서 출력된 특징들을 제2 행렬 벡터 생성 모델에 입력 값으로 넣어줄 수 있다. 제2 행렬 벡터 생성 모델은 특징들을 행렬 벡터들(705a)로 변환하고 제5 사용자 장치로 출 력할 수 있다. 제5 사용자 장치는 행렬 벡터들(705a)로부터 벡터화된 정보(705b)를 추출하고, 추출된 정보 (705b)를 이용하여 제2 사용자 장치가 속한 IoT 기기 그룹 내 IoT 기기들을 사용해 본 사용자의 경험과 동 일한 사용 경험을 제5 사용자 장치의 사용자에게 제공할 수 있다. 도 8 은, 일 실시예에 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 IoT 시스템의 블록도 이다. 아래 설명에서, 접미사 “-S(server)1”가 및 “-S2”가 붙은 데이터는 IoT 서버에서 생산된 데이터 이거나 사용자 장치가 IoT 서버로부터 수신한 데이터일 수 있다. 접미사 “-U(user)1” 및 “-U2”가 붙은 데이터는 사용자 장치에서 생산된 데이터, 사용자 장치에 저장된 데이터, 또는 사용자 장치가 사용자에게 제공 한 데이터 중에서 사용자가 반응을 보인 데이터일 수 있다. 이러한 접미사는, 구성 요소나 데이터 구분을 위한 것이지, 그 자체에 특별한 의미가 부여된 것은 아니다. 도 8의 구성에서 도 7의 구성과 동일한 구성에 대한 구 체적인 설명은 간략하거나 생략될 수 있다. 도 8의 IoT 시스템에서 제1 사용자 장치(예: 도 7에서 제1 사용자 장치)는 사용자 경험 정보-U1(예: 사용 경험 정보)를 이용하여 행렬 벡터-U1(예: 제1 행렬 벡터, 제2 행렬 벡터)를 생성하고 행렬 벡터-U1을 IoT 서버(예: IoT 서버)로 제공할 수 있다. 도 8의 IoT 서버에서 특징 추출 모델(예: 제1 특징 추출 모델)은 행렬 벡터-U1에서 제1 특징들 을 추출할 수 있다. 인코딩 모델(예: 제1 인코딩 모델)은 제1 특징들에 매핑이 되는 제1 컨셉을 생성해서 컨셉 DB에 저장할 수 있다. IoT 서버는 제2 사용자 장치(예: 제3 사용자 장치 또는 제 4 사용자 장치)로부터 제1 사용자 장치가 속한 IoT 기기 그룹(예: IoT 기기 그룹)에 대한 사용 경험의 공유를 요청하는 메시지를 수신할 수 있다. 제2 사용자 장치의 공유 요청에 반응하여, IoT 서버는 제1 사용자 장치에 대응하는 제1 컨셉 을 선택할 수 있다. IoT 서버는 제1 컨셉을 디코딩 모델(예: 제1 디코딩 모델 또는 제2 디코딩 모델)에 입력 값으로 넣어줄 수 있다. 디코딩 모델은 제1 컨셉에 매핑이 되는 다수 의 특징들을 결과 값으로 출력할 수 있다. IoT 서버는 디코딩 모델에서 출력된 특징들을 행렬 벡터 생성 모델(예: 제1 행렬 벡터 생성 모델 또는 제2 행렬 벡터 생성 모델)에 입력 값으로 넣어줄 수 있다. 행렬 벡터 생성 모델은 특징들을 행렬 벡터-S1으로 변환하고 제2 사용자 장치로 출력할 수 있다. 제2 사용자 장치는 행렬 벡터-S1으로부터 사용 경험 정보-S1을 획득하고, 사용 경험 정보-S1을 이용 하여 제1 사용자 장치가 속한 IoT 기기 그룹 내 IoT 기기들을 사용해 본 사용자의 경험과 동일한 사용 경 험을 제2 사용자 장치의 사용자에게 제공할 수 있다. 도 8의 IoT 시스템에서 제2 사용자 장치는 제2 사용자 장치에서 사용 경험이 추가됨에 따라 사용 경 험 정보-S1을 사용 경험 정보-U2로 갱신할 수 있다. 제2 사용자 장치는 사용 경험 정보-U2를 행렬 벡터-U2 로 변환하고 행렬 벡터-U2를 IoT 서버로 제공할 수 있다. IoT 서버는, 제1 컨셉에 대응하는 행렬 벡터-S1을 제2 사용자 장치로 전송한 것에 대한 제2 사 용자 장치의 회신으로서, 제2 사용자 장치로부터 행렬 벡터-U2를 수신할 수 있다. 행렬 벡터-U2가 제 2 사용자 장치로부터 수신된 것에 반응하여, IoT 서버는 인코딩 모델을 복제함으로써 대체 (surrogate) 인코딩 모델을 생성하고 행렬 벡터-U2를 특징 추출 모델(예: 제1 특징 추출 모델 또는 제2 특징 추출 모델)에 입력 값으로 넣어줄 수 있다. 특징 추출 모델은 행렬 벡터-U2에서 제2 특징들을 추출할 수 있다. 대체 인코딩 모듈은 제2 특징들에 매핑이 되는 제2 컨셉을 생성해서 컨셉 DB에 저장할 수 있다. 하나의 예시로 제2 컨셉은 ‘모션 포토 온(on)’이라는 사용 경험이 제1 컨셉 에 추가된 것일 수 있다. IoT 서버는 제2 컨셉을 디코딩 모델(예: 제1 디코딩 모델 또는 제2 디코딩 모델)에 입력 값으로 넣어줄 수 있다. 디코딩 모델은 제2 컨셉에 매핑이 되는 다수의 특징들을 결과 값으로 출력할 수 있다. IoT 서버는 디코딩 모델에서 출력된 특징들을 행렬 벡터 생성 모델(예: 제1 행 렬 벡터 생성 모델 또는 제2 행렬 벡터 생성 모델)에 입력 값으로 넣어줄 수 있다. 행렬 벡터 생성 모델은 특징들을 행렬 벡터-S2로 변환하고 제1 사용자 장치로 출력할 수 있다. 제1 사용자 장치(80 1)는 행렬 벡터-S2으로부터 사용 경험 정보-S2를 획득하고, 사용 경험 정보-S2를 이용하여 제2 사용자 장치에 의해 추가된 사용 경험을 제1 사용자 장치의 사용자에게 제공할 수 있다. 도 9는, 도 6의 특징 추출 모델과 인코딩 모델에 의해 수행되는 동작들의 일례를 설명하기 위한 도면 이다. 도 9를 참조하면, 특징 추출 모델은 IoT 기기 정보, 구성 정보, 및 IoT 사용성 정보가 합쳐진 행렬 벡터들 을 수신할 수 있다. 특징 추출 모델은 행렬 벡터들을 IoT 기기 별로 운영에 대한 개별적인 N개 의 특징 벡터들로 분리해서 출력할 수 있다. 인코딩 모델은 특징 벡터들을 디멘션(dimension)이 축소된 기계어로 압축(encoding)함으로써 특징 벡터들에 각각 매핑이 되는 N개의 컨셉을 획득할 수 있다. 인코딩 모델은 인코딩 과정에서 어텐션(attention)을 이용할 수 있다. 예를 들어, 인코딩 모델(62 0)은 입력된 전체 특징 벡터들 중에서 IoT 기기의 운영과 연관된 부분을 비교적 집중(attention)할 수 있 다. 이러한 집중에 의해 생성되는 컨셉은 IoT 기기와 연관된 하나의 문장으로 표현될 수 있다. 예컨대, “실내 온도”, “24도 유지”가 각각 인코딩되는 것이 아니라, “에어컨으로 실내 온도 24도 유지”라는 에어컨과 연 관된 하나의 컨셉이 생성될 수 있다. 도 10은, 도 6의 인코딩 모델과 디코딩 모델에 의해 수행되는 동작들의 일례를 설명하기 위한 도면이 다. 도 10을 참조하면, 인코딩 모델은 입력된 N개의 특징 벡터들을 각각 매핑이 되는 N개의 컨셉 을 획득할 수 있다. 인코딩 모델은 다양한 기종의 사용자 장치들에 대응하는 K열과 L행의 크기를 갖는 행 렬 벡터를 포함할 수 있다. 여기서, K는 인코딩 모델에서 학습된 기종의 수에 대응될 수 있다. 예컨 대, 제1 열은 제1 타입의 사용자 장치(예: AndroidTM가 탑재된 기종)에 해당되고 제2 열은 제2 타입의 사용자 장 치(예: iOSTM가 탑재된 기종)에 해당될 수 있다. 예컨대, 행렬 벡터는 Dense net의 레이어(layer)와 연결 되는 노드(node)들 간의 가중치(weight)로 만들 수 있는, 사용자 경험(예: 기기 운전 경험)에 관한 다양한 조합 을 의미할 수 있다. 디코딩 모델은 N개의 컨셉에 각각 매핑이 되는 N개의 특징 벡터들을 결과 값으로 출력할 수 있다. 디코딩 모델은 다양한 기종의 사용자 장치들에 대응하는 K열과 L행의 크기를 갖는 행렬 벡터를 포함할 수 있다. 인코딩 모델과 디코딩 모델은 다양한 기종의 사용자 장치들 간에 사용 경험을 공유하도록 학습될 수 있다. 아래 표 1을 참조하면, 인코딩 모델에서 제1 열 벡터는 제1 타입 의 사용자 장치에서 제1 타입의 사용자 장치로 사용 경험을 전달할 때 이용될 수 있다. 인코딩 모델에서 제2 열 벡터는 제2 타입의 사용자 장치에서 제2 타입의 사용자 장치로 사용 경험을 전달할 때 이용될 수 있다. 제1 타입의 사용자 장치에서 제2 타입의 사용자 장치로 사용 경험이 전달되어야 할 경우, 이용되는 열 벡터는 제1 열 벡터에서 제2 열 벡터로 변경될 수 있다. 제2 타입의 사용자 장치에서 제1 타입의 사용자 장치로 사용 경험이 전달되어야 할 경우, 이용되는 열 벡터는 제2 열 벡터에서 제1 열 벡터로 변경될 수 있다. 아래 표 1에 서 IN은 사용 경험을 전달하는 장치를 의미하고 OUT은 사용 경험을 수신하는 장치를 의미할 수 있다. 표 1 사용 경험 공유 인코딩 모델 제1열 벡터인코딩 모델 제2열 벡터 제1 타입의 사용자 장치 → 제1 타입의 사용자 장치 IN, OUT - 제2 타입의 사용자 장치 → 제2 타입의 사용자 장치 - IN, OUT 제1 타입의 사용자 장치 → 제2 타입의 사용자 장치 IN OUT 제2 타입의 사용자 장치 → 제1 타입의 사용자 장치 OUT IN 일 실시예에 따르면, 서버(예: IoT 서버 또는 IoT 서버)는, 사용자 장치와 통신을 위한 통신 회로; 및 상기 통신 회로에 연결된 프로세서; 및 상기 프로세서와 연결된 메모리를 포함할 수 있다. 상기 메모리는, 상기 프로세서에 의해 실행될 때, 상기 프로세서가, 상기 통신 회로를 통해 제1 사용자 장치(예: 제1 사용자 장 치)로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험 정보를 수신하도록 하는 인스트럭션들을 저장할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공 지능 모델(예: 특징 추출 모델 및 인코딩 모델 )에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고 상기 제1 인공 지능 모델의 출력 값에서 제1 컨셉을 획득하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 컨셉을 상기 메모리에 저장하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 통신 회로를 통해 제2 사용자 장치(예: 제2 사용자 장치)로부터 상기 IoT 기기들에 대한 사용 경험의 공유를 요청하는 메시지를 수신하고, 상기 제2 사용자 장치 의 공유 요청에 반응하여, 컨셉을 전자 장치가 이해 가능한 사용 경험 정보로 변환하도록 학습된 제2 인공 지능 모델(예: 디코딩 모델 및 행렬 벡터 생성 모델)에 상기 제1 컨셉을 입력 값으로 넣어주고, 제2 사용 경험 정보를 상기 제2 인공 지능 모델의 출력 값에서 획득하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세 서가, 상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 사용 경험 정보로서, 상기 IoT 기기들을 식별하기 위한 IoT 기 기 정보, 상기 제1 사용자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능 을 식별하기 위한 구성 정보, 및 상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사 용성 정보를 상기 통신 회로를 통해 제1 사용자 장치로부터 수신하도록 할 수 있다. 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 구성 정보의 행렬 곱 연산을 통해 제1 행렬 벡 터가 생성되고, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 IoT 사용성 정보의 행렬 곱 연 산을 통해 제2 행렬 벡터가 생성될 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 사용 경험 정보로 서, 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 통신 회로를 통해 제1 사용자 장치로부터 수신하도록 할 수 있다. 상기 제1 인공 지능 모델은 특징 추출 모델과 인코딩 모델을 포함할 수 있다. 상기 인스트럭션들은 상기 프로세 서가, 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 특징 추출 모델에 입력 값으로 넣어 주고, 상기 특징 추출 모델에서 출력된 결과 값에서 특징들을 획득하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상 기 특징 추출 모델의 결과 값에서 획득된 특징들을 상기 인코딩 모델에 입력 값으로 넣어주고, 상기 인코딩 모 델에서 출력된 결과 값에서 상기 특징 추출 모델의 결과 값에서 획득된 특징들에 매핑이 되는 상기 제1 컨셉을 획득하도록 할 수 있다. 상기 특징 추출 모델과 상기 행렬 벡터 생성 모델은 DenseNet(densely connected convolution networks)을 포 함할 수 있다. 상기 제2 인공 지능 모델은 디코딩 모델과 행렬 벡터 생성 모듈을 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제2 사용자 장치의 공유 요청에 반응하여, 상기 제1 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고, 상기 디코딩 모델에서 출력된 결과 값에서 상기 제1 컨셉에 매핑이 되는 특징들을 추출하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡 터 생성 모듈에 입력 값으로 넣어주고, 상기 행렬 벡터 생성 모듈에서 출력된 결과 값에서 상기 제1 행렬 벡터 에 대응하는 제3 행렬 벡터와 상기 제2 행렬 벡터에 대응하는 제4 행렬 벡터를 획득하도록 할 수 있다. 상기 인 스트럭션들은 상기 프로세서가, 상기 제3 행렬 벡터와 상기 제4 행렬 벡터를 상기 제2 사용 경험 정보로서 상기 제2 사용자 장치로 전송하도록 할 수 있다. 상기 디코딩 모델은 제1 디코딩 모델과 제2 디코딩 모델을 포함할 수 있다. 상기 인스트럭션들은 상기 프로세서 가, 제1 운영 체제를 갖는 사용자 장치에 대응하여 상기 제1 디코딩 모델을 학습하고, 상기 제1 운영 체제와 다 른 제2 운영 체제를 갖는 사용자 장치에 대응하여 상기 제2 디코딩 모델을 학습하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 행렬 벡터의 업데이트 버전에 해당하는 제5 행렬 벡터와 상기 제2 행렬 벡터의 업데이트 버전에 해당하는 제6 행렬 벡터를 상기 제2 사용자 장치로부터 수신하도록 할 수 있 다. 상기 인스트럭션들은 상기 프로세서가, 상기 제5 행렬 벡터와 상기 제6 행렬 벡터가 상기 제2 사용자 장치 로부터 수신된 것에 반응하여, 상기 인코딩 모델을 복제함으로써 대체 인코딩 모델을 생성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제5 행렬 벡터와 상기 제6 행렬 벡터를 상기 특징 추출 모델에 입 력 값으로 넣어주고, 상기 특징 추출 모델에서 출력된 결과 값에서 제2 컨셉을 획득하고 상기 제2 컨셉을 상기 메모리에 저장하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제2 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고, 상기 디코딩 모델에서 출력된 결과 값에서 상기 제2 컨셉에 매핑이 되는 특징들을 추출 하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡터 생성 모듈에 입력 값으로 넣어주고, 상기 행렬 벡터 생성 모듈에서 출력된 결과 값에서 상기 제 5 행렬 벡터에 대응하는 제7 행렬 벡터와 상기 제6 행렬 벡터에 대응하는 제8 행렬 벡터를 획득하도록 할 수 있 다. 상기 인스트럭션들은 상기 프로세서가, 상기 제7 행렬 벡터와 상기 제8 행렬 벡터를 제3 사용 경험 정보로 서 상기 제1 사용자 장치로 전송하도록 할 수 있다. 일 실시예에 따르면, 전자 장치(예: 사용자 장치)는, 서버 및 IoT(internet of things) 기기들과 통신하기 위한 통신 회로; 상기 통신 회로에 연결된 프로세서; 및 상기 프로세서와 연결된 메모리를 포함할 수 있다. 상 기 메모리는, 상기 프로세서에 의해 실행될 때, 상기 프로세서가: 상기 IoT 기기들을 식별하기 위한 IoT 기기 정보를 열 벡터로 구성하도록 하는 인스트럭션들을 저장할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상 기 전자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보를 제1 행 벡터로 구성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사용성 정보를 제2 행 벡터로 구성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 열 벡터와 상기 제1 행 벡터를 곱해서 제1 행렬 벡터를 생성하고, 상기 열 벡터와 상기 제2 행 벡터를 곱해서 제2 행렬 벡터를 생성하도록 할 수 있다. 상기 인스트럭션들은 상기 프로세서가, 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 서버로 전송함으로써 상기 서버가 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 할 수 있다. 일 실시예에 따르면, 서버(예: IoT 서버 또는 IoT 서버)를 동작하는 방법은, 상기 서버의 통신 회로 를 통해 제1 사용자 장치로부터 IoT(internet of things) 기기들에 대한 제1 사용 경험 정보를 수신하는 동작을 포함할 수 있다. 상기 방법은, 전자 장치에서 생성된 사용 경험 정보를 사람이 이해 가능한 컨셉(concept)으로 추상화하도록 학습된 제1 인공 지능 모델에 상기 제1 사용 경험 정보를 입력 값으로 넣어주고 상기 제1 인공 지 능 모델의 출력 값에서 제1 컨셉을 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 제1 컨셉을 상기 메모 리에 저장하는 동작을 포함할 수 있다. 상기 방법은, 상기 통신 회로를 통해 제2 사용자 장치로부터 상기 IoT 기기들에 대한 사용 경험의 공유를 요청하는 메시지를 수신하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 사용자 장치의 공유 요청에 반응하여, 컨셉을 전자 장치가 이해 가능한 사용 경험 정보로 변환하도록 학습된 제 2 인공 지능 모델에 상기 제1 컨셉을 입력 값으로 넣어주고 제2 사용 경험 정보를 상기 제2 인공 지능 모델의 출력 값에서 획득하는 동작을 포함할 수 있다. 상기 방법은, 상기 제2 사용 경험 정보를 상기 통신 회로를 통해 상기 제2 사용자 장치로 전송하는 동작을 포함할 수 있다. 상기 제1 사용 경험 정보를 수신하는 동작은, 상기 IoT 기기들을 식별하기 위한 IoT 기기 정보, 상기 제1 사용 자 장치에 구성된 기능들 중 활성화 상태로 설정된 기능과 비활성화 상태로 설정된 기능을 식별하기 위한 구성 정보, 및 상기 IoT 기기들을 이용해서 사용자가 경험한 서비스를 식별하기 위한 IoT 사용성 정보를 수신하는 동 작을 포함할 수 있다. 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 구성 정보의 행렬 곱 연산을 통해 제1 행렬 벡 터가 생성되고, 열 벡터로 구성된 상기 IoT 기기 정보와 행 벡터로 구성된 상기 IoT 사용성 정보의 행렬 곱 연 산을 통해 제2 행렬 벡터가 생성될 수 있다. 상기 제1 사용 경험 정보를 수신하는 동작은, 상기 제1 행렬 벡터 와 상기 제2 행렬 벡터를 수신하는 동작을 포함할 수 있다. 상기 제1 인공 지능 모델은 특징 추출 모델과 인코딩 모델을 포함할 수 있다. 상기 제1 컨셉을 획득하는 동작은, 상기 제1 행렬 벡터와 상기 제2 행렬 벡터를 상기 특징 추출 모델에 입력 값으로 넣어 주고 상기 특징 추출 모델에서 출력된 결과 값에서 특징들을 획득하는 동작; 및 상기 특징 추출 모델의 결과 값에서 획득된 특 징들을 상기 인코딩 모델에 입력 값으로 넣어주고 상기 인코딩 모델에서 출력된 결과 값에서 상기 특징 추출 모 델의 결과 값에서 획득된 특징들에 매핑이 되는 상기 제1 컨셉을 획득하는 동작을 포함할 수 있다. 상기 제2 인공 지능 모델은 디코딩 모델과 행렬 벡터 생성 모듈을 포함할 수 있다. 상기 제2 사용 경험 정보를 획득하는 동작은, 상기 제1 컨셉을 상기 디코딩 모델에 입력 값으로 넣어주고 상기 디코딩 모델에서 출력된 결 과 값에서 상기 제1 컨셉에 매핑이 되는 특징들을 추출하는 동작; 및 상기 디코딩 모델의 결과 값에서 획득된 특징들을 상기 행렬 벡터 생성 모듈에 입력 값으로 넣어주고 상기 행렬 벡터 생성 모듈에서 출력된 결과 값에서 상기 제1 행렬 벡터에 대응하는 제3 행렬 벡터와 상기 제2 행렬 벡터에 대응하는 제4 행렬 벡터를 획득하는 동 작을 포함할 수 있다.도면 도면1 도면2 도면3 도면4 도면5a 도면5b 도면6 도면7 도면8 도면9 도면10"}
{"patent_id": "10-2022-0133935", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은, 다양한 실시예에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2 는 일 실시예에 따른 IoT(internet of things) 시스템을 도시한다. 도 3은, 일 실시예에 따른, 사용자들 간에 IoT 기기에 대한 경험을 공유하도록 구성된 IoT 시스템을 도시한다. 도 4는, 일 실시예에 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 사용자 장치의 블록도 이다. 도 5a 및 5b는, 일 실시예에 따른, IoT 기기들에 대한 사용 경험을 벡터화하는 동작을 설명하기 위한 도면들이 다. 도 6 은, 일 실시예 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 IoT 서버의 블록도이다. 도 7 은, 일 실시예에 따른, 기종이 동일한 사용자 장치들 간 그리고 기종이 다른 사용자 장치들 간에 사용 경 험을 공유할 수 있도록 하는 IoT 시스템을 도시한다. 도 8은, 일 실시예에 따른, IoT 기기에 대한 사용자들 간의 사용 경험의 공유를 지원하는 IoT 시스템의 블록도 이다. 도 9는, 도 6의 특징 추출 모델과 인코딩 모델에 의해 수행되는 동작들의 일례를 설명하기 위한 도면이다. 도 10은, 도 6의 인코딩 모델과 디코딩 모델에 의해 수행되는 동작들의 일례를 설명하기 위한 도면이다."}
