{"patent_id": "10-2023-0131127", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0080109", "출원번호": "10-2023-0131127", "발명의 명칭": "가상 시뮬레이션 환경 기반의 인공지능 모델 학습 데이터 수집 방법 및 시스템", "출원인": "주식회사 스마트엠투엠", "발명자": "김용수"}}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서에 의해 수행되는, 가상 시뮬레이션 환경 기반의 인공지능 모델 학습 데이터 수집 방법에 있어서,가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터를 수신하는 단계;상기 학습 데이터를 라벨링하는 단계; 및상기 라벨링된 학습 데이터를 데이터베이스에 저장하는 단계를 포함하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 인공지능 모델은 분류 모델(classification model) 또는 객체 탐지 모델(object detection model) 중 적어도 하나를 포함하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 가상 시뮬레이션 환경은 그래픽 엔진(graphic engine)에 의해 구현되고,상기 학습 데이터를 라벨링하는 단계는,상기 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 상기 학습 데이터를 라벨링하는 단계를 포함하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 학습 데이터는 적대적 공격 데이터(adversarial attack data)를 포함하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 적대적 공격 데이터는 가상 시뮬레이션 환경을 관리하는 가상 환경 시스템에 의해 생성되고,상기 가상 환경 시스템은,뉴럴 렌더링 모델(neural rendering model)을 이용함으로써, 가상 시뮬레이션 환경의 특정 객체에 대한 레퍼런스 이미지(reference image), 상기 특정 객체에 대한 마스크 이미지(mask image) 및 적대적 텍스처(adversarial texture)에 기초하여 적대적 이미지(adversarial image)를 생성하는, 인공지능 모델 학습 데이터수집 방법.공개특허 10-2024-0080109-3-청구항 6 제5항에 있어서,상기 가상 환경 시스템은,상기 마스크 이미지를 이용하여 상기 레퍼런스 이미지로부터 마스킹된 레퍼런스 이미지를 추출하고,상기 적대적 텍스처를 3차원으로 매핑한 투사된 텍스처(projected texture)를 생성하고,상기 뉴럴 렌더링 모델을 이용하여 상기 마스킹된 레퍼런스 이미지에 상기 투사된 텍스처를 렌더링함으로써 마스킹된 적대적 이미지를 생성하고,반전된 마스크 이미지를 이용하여 상기 레퍼런스 이미지로부터 배경 이미지를 추출하고,상기 마스킹된 적대적 이미지 및 상기 배경 이미지를 결합하여 상기 적대적 이미지를 생성하는, 인공지능 모델학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 투사된 텍스처는,상기 특정 객체에 대한 깊이 이미지(depth image)로부터 추출된 표면 좌표 및 표면 법선에 기초하여 상기 적대적 텍스처를 3차원 매핑함으로써 생성되는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 가상 환경 시스템은,상기 적대적 이미지를 무작위로 변환하여 증강하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제5항에 있어서,상기 가상 환경 시스템은,복수의 손실함수를 이용하여 상기 적대적 텍스처를 개선하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 복수의 손실함수는, 적대적 공격의 대상이 되는 인공지능 모델의 성능을 낮추도록 상기 적대적 텍스처를 개선하기 위한 손실함수를포함하는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에 있어서,공개특허 10-2024-0080109-4-상기 복수의 손실함수는, 상기 적대적 텍스처의 평활도(smoothness)를 향상시키기 위한 손실함수를 포함하는, 인공지능 모델 학습 데이터수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 복수의 손실함수는,상기 특정 객체의 인식도를 낮추도록 상기 적대적 텍스처를 개선하기 위한 손실함수를 포함하는, 인공지능 모델학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제9항에 있어서,상기 복수의 손실함수는,상기 특정 객체의 인식도를 낮추도록 상기 적대적 텍스처를 개선하기 위한 손실함수를 포함하는, 인공지능 모델학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 복수의 이미지 데이터 세트는,상기 가상 시뮬레이션 환경에 존재하는 복수의 가상 카메라에 의해 생성되고,상기 복수의 가상 카메라 각각은 상이한 카메라 파라미터가 설정되는, 인공지능 모델 학습 데이터 수집 방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제1항에 있어서,상기 학습 데이터는,복수의 데이터 세트로 분할되고,상기 복수의 데이터 세트는,학습 데이터 세트, 검증 데이터 세트 및 테스트 데이터 세트를 포함하는, 인공지능 모델 학습 데이터 수집방법."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제1항 내지 제15항 중 어느 한 항에 따른 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "정보 처리 시스템으로서,공개특허 10-2024-0080109-5-통신 모듈;메모리; 및상기 메모리와 연결되고, 상기 메모리에 포함된 컴퓨터 판독 가능한 적어도 하나의 프로그램을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로그램은,가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터를 수신하고,상기 학습 데이터를 라벨링하고,상기 라벨링된 학습 데이터를 데이터베이스에 저장하기 위한 명령어들을 포함하는, 정보 처리 시스템."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 가상 시뮬레이션 환경은 그래픽 엔진에 의해 구현되고,상기 학습 데이터를 라벨링하는 것은,상기 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 상기 학습 데이터를 라벨링하는 것을 포함하는, 정보 처리 시스템."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서,상기 학습 데이터는 적대적 공격 데이터를 포함하는, 정보 처리 시스템."}
{"patent_id": "10-2023-0131127", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서,상기 적대적 공격 데이터는 상기 가상 시뮬레이션 환경을 관리하는 가상 환경 시스템에 의해 생성되고,상기 가상 환경 시스템은 뉴럴 렌더링 모델에 의해, 상기 가상 시뮬레이션 환경의 특정 객체에 대한 레퍼런스이미지, 상기 특정 객체에 대한 마스크 이미지 및 적대적 텍스처에 기초하여 적대적 이미지를 생성하는, 정보처리 시스템."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 적어도 하나의 프로세서에 의해 수행되는, 가상 시뮬레이션 환경 기반의 인공지능 모델 학습 데이터 수집 방법에 관한 것이다. 인공지능 모델 학습 데이터 수집 방법은 가상 시뮬레이션 환경에 기초하여 생성된 인 공지능 모델의 학습 데이터를 수신하는 단계, 학습 데이터를 라벨링하는 단계 및 라벨링된 학습 데이터를 데이터 베이스에 저장하는 단계를 포함한다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 가상 시뮬레이션 환경을 기반으로 인공지능 모델의 학습 데이터를 수집하는 방법 및 시스템에 관한 것으로, 구체적으로 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터를 수신하고, 이를 라벨링하여 데이터베이스에 저장하는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근, 인공지능 모델의 발전에 따라 인공지능 모델의 학습을 위한 학습 데이터의 중요성이 높아지고 있다. 학 습 데이터는 인공지능 모델의 성능 향상과 직결되기 때문에 학습 데이터 수집은 기계학습과 인공지능 분야에서 핵심적인 작업으로 간주되며, 학습 데이터의 양과 품질을 효과적으로 관리하는데 많은 노력이 이루어지고 있다. 한편, 인공지능 모델의 일반화 성능을 개선하고 오동작, 오류, 장애 또는 외부 공격으로부터 인공지능 모델이 강건성을 확보하기 위해서는 다양한 데이터를 학습 데이터로 이용하는 것이 필요하다. 그럼에도, 종래 학습 데 이터 수집 기술은 특정 문제의 해답을 얻기 위한 실제 현실의 데이터만을 학습 데이터로 수집함으로써 일반화 성능 및 강건성 개선을 위한 다양한 데이터를 수집하기 어렵다는 문제가 있다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상기와 같은 문제를 해결하기 위한 가상 시뮬레이션 환경 기반의 인공지능 모델 학습 데이터 수집 방 법, 기록 매체에 저장된 컴퓨터 프로그램 및 시스템(장치)을 제공한다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시는 방법, 시스템(장치) 또는 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 포함한 다양한 방식으로 구현될 수 있다. 본 개시의 일 실시예에 따르면, 적어도 하나의 프로세서에 의해 수행되는, 가상 시뮬레이션 환경 기반의 인공지 능 모델 학습 데이터 수집 방법은 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터를 수 신하는 단계, 학습 데이터를 라벨링하는 단계 및 라벨링된 학습 데이터를 데이터베이스에 저장하는 단계를 포함 한다. 본 개시의 일 실시예에 따르면, 상기 인공지능 모델은 분류 모델(classification model) 또는 객체 탐지 모델 (object detection model) 중 적어도 하나를 포함한다. 본 개시의 일 실시예에 따르면, 가상 시뮬레이션 환경은 그래픽 엔진(graphic engine)에 의해 구현되고, 학습 데이터를 라벨링하는 단계는, 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 학습 데이터를 라벨링하는 단계를 포함한다. 본 개시의 일 실시예에 따르면, 학습 데이터는 적대적 공격 데이터(adversarial attack data)를 포함한다. 본 개시의 일 실시예에 따르면, 적대적 공격 데이터는 가상 시뮬레이션 환경을 관리하는 가상 환경 시스템에 의 해 생성되고, 가상 환경 시스템은, 뉴럴 렌더링 모델(neural rendering model)을 이용함으로써, 시뮬레이션 환 경의 특정 객체에 대한 레퍼런스 이미지(reference image), 특정 객체에 대한 마스크 이미지(mask image) 및 적 대적 텍스처(adversarial texture)에 기초하여 적대적 이미지(adversarial image)를 생성한다. 본 개시의 일 실시예에 따르면, 가상 환경 시스템은, 마스크 이미지를 이용하여 레퍼런스 이미지로부터 마스킹 된 레퍼런스 이미지를 추출하고, 적대적 텍스처를 3차원으로 매핑한 투사된 텍스처(projected texture)를 생성 하고, 뉴럴 렌더링 모델을 이용하여 마스킹된 레퍼런스 이미지에 투사된 텍스처를 렌더링함으로써 마스킹된 적 대적 이미지를 생성하고, 반전된 마스크 이미지를 이용하여 레퍼런스 이미지로부터 배경 이미지를 추출하고, 마 스킹된 적대적 이미지 및 배경 이미지를 결합하여 상기 적대적 이미지를 생성한다. 본 개시의 일 실시예에 따르면, 투사된 텍스처는, 특정 객체에 대한 깊이 이미지(depth image)로부터 추출된 표 면 좌표 및 표면 법선에 기초하여 적대적 텍스처를 3차원 매핑함으로써 생성된다. 본 개시의 일 실시예에 따르면, 가상 환경 시스템은, 적대적 이미지를 무작위로 변환하여 증강한다. 본 개시의 일 실시예에 따르면, 가상 환경 시스템은, 복수의 손실함수를 이용하여 적대적 텍스처를 개선한다. 본 개시의 일 실시예에 따르면, 복수의 손실함수는, 적대적 공격의 대상이 되는 인공지능 모델의 성능을 낮추도 록 적대적 텍스처를 개선하기 위한 손실함수를 포함한다. 본 개시의 일 실시예에 따르면, 복수의 손실함수는, 적대적 텍스처의 평활도(smoothness)를 향상시키기 위한 손 실함수를 포함한다. 본 개시의 일 실시예에 따르면, 복수의 손실함수는, 특정 객체의 인식도를 낮추도록 상기 적대적 텍스처를 개선 하기 위한 손실함수를 포함한다. 본 개시의 일 실시예에 따르면, 학습 데이터는, 가상 시뮬레이션 환경의 특정 객체에 대한 이미지 데이터를 포 함하고, 이미지 데이터는 상기 특정 객체에 대한 복수의 이미지 데이터 세트 각각으로부터 동일한 개수만큼 무 작위로 선별된 데이터일 수 있다.본 개시의 일 실시예에 따르면, 복수의 이미지 데이터 세트는, 가상 시뮬레이션 환경에 존재하는 복수의 가상 카메라에 의해 생성되고, 복수의 가상 카메라 각각은 상이한 카메라 파라미터가 설정된다. 본 개시의 일 실시예에 따르면, 학습 데이터는, 복수의 데이터 세트로 분할되고, 복수의 데이터 세트는, 학습 데이터 세트, 검증 데이터 세트 및 테스트 데이터 세트를 포함한다. 본 개시의 일 실시예에 따른 상술한 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램이 제공된다. 본 개시의 일 실시예에 따른 정보 처리 시스템은, 통신 모듈, 메모리 및 메모리와 연결되고, 메모리에 포함된 컴퓨터 판독 가능한 적어도 하나의 프로그램을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 적어도 하나의 프로그램은, 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터를 수신하고, 학습 데이터를 라벨링하고, 라벨링된 학습 데이터를 데이터베이스에 저장하기 위한 명령어들을 포함한다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시예에 따르면, 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터가 수집될 수 있다. 이에 따라, 다양한 케이스에 대한 대규모의 학습 데이터가 확보될 수 있다. 본 개시의 다양한 실시예에 따르면, 학습 데이터는 가상 시뮬레이션 환경을 구현한 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 라벨링될 수 있다. 이에 따라, 데이터 라벨링에 소요되는 비용이 절약될 수 있다. 본 개시의 다양한 실시예에 따르면, 수집된 학습 데이터는 적대적 공격 데이터를 포함할 수 있다. 이에 따라, 인공지능 모델의 강건성을 개선할 수 있는 학습 데이터가 수집될 수 있다. 본 개시의 다양한 실시예에 따르면, 수집된 적대적 공격 데이터는 투사된 텍스처에 기초하여 생성될 수 있으며, 투사된 텍스처는 특정 객체에 대한 깊이 이미지로부터 추출된 표면 좌표 및 표면 법선에 기초하여 적대적 텍스 처를 3차원 매핑함으로써 생성될 수 있다. 이에 따라, 텍스처가 렌더링될 객체에 독립적인 적대적 텍스처가 생 성될 수 있다. 본 개시의 다양한 실시예에 따르면, 적대적 공격 데이터는 무작위로 변환되어 증강될 수 있다. 이에 따라, 인 공지능 모델의 강건성을 개선하기 위한 학습 데이터가 추가적으로 확보될 수 있다. 본 개시의 다양한 실시예에 따르면, 학습 데이터인 적대적 공격 데이터에 포함된 적대적 텍스처는 복수의 손실 함수를 이용하여 개선될 수 있다. 이에 따라, 적대적 공격 데이터의 성능이 향상될 수 있으며, 향상된 성능의 적대적 공격 데이터에 의해 학습된 인공지능 모델의 강건성이 보다 개선될 수 있다. 본 개시의 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급되지 않은 다른 효과들은 청구범위의 기재로부"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자(이하, '통상의 기술자'라 함)에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 개시의 실시를 위한 구체적인 내용을 첨부된 도면을 참조하여 상세히 설명한다. 다만, 이하의 설명에 서는 본 개시의 요지를 불필요하게 흐릴 우려가 있는 경우, 널리 알려진 기능이나 구성에 관한 구체적 설명은 생략하기로 한다. 첨부된 도면에서, 동일하거나 대응하는 구성요소에는 동일한 참조부호가 부여되어 있다. 또한, 이하의 실시예 들의 설명에 있어서, 동일하거나 대응되는 구성요소를 중복하여 기술하는 것이 생략될 수 있다. 그러나, 구성 요소에 관한 기술이 생략되어도, 그러한 구성요소가 어떤 실시예에 포함되지 않는 것으로 의도되지는 않는다. 개시된 실시예의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 후술되어 있는 실시예 들을 참조하면 명확해질 것이다. 그러나, 본 개시는 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 개시가 완전하도록 하고, 본 개시가 통상의 기술 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것일 뿐이다. 본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 개시된 실시예에 대해 구체적으로 설명하기로 한다. 본 명세서에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 관련 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 발명의 설명 부분에서 상세히 그 의미를 기재할 것이다. 따라서, 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어 가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서에서의 단수의 표현은 문맥상 명백하게 단수인 것으로 특정하지 않는 한, 복수의 표현을 포함한다. 또한, 복수의 표현은 문맥상 명백하게 복수인 것으로 특정하지 않는 한, 단수의 표현을 포함한다. 명세서 전체 에서 어떤 부분이 어떤 구성요소를 포함한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있음을 의미한다. 또한, 명세서에서 사용되는 '모듈' 또는 '부'라는 용어는 소프트웨어 또는 하드웨어 구성요소를 의미하며, '모 듈' 또는 '부'는 어떤 역할들을 수행한다. 그렇지만, '모듈' 또는 '부'는 소프트웨어 또는 하드웨어에 한정되 는 의미는 아니다. '모듈' 또는 '부'는 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서, '모듈' 또는 '부'는 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌웨어, 마이 크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 또는 변수들 중 적어도 하나를 포 함할 수 있다. 구성요소들과 '모듈' 또는 '부'들은 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 '모듈' 또는 '부'들로 결합되거나 추가적인 구성요소들과 '모듈' 또는 '부'들로 더 분리될 수 있다. 본 개시의 일 실시예에 따르면, '모듈' 또는 '부'는 프로세서 및 메모리로 구현될 수 있다. '프로세서'는 범용 프로세서, 중앙 처리 장치(CPU), 마이크로프로세서, 디지털 신호 프로세서(DSP), 제어기, 마이크로제어기, 상태 머신 등을 포함하도록 넓게 해석되어야 한다. 몇몇 환경에서, '프로세서'는 주문형 반도체(ASIC), 프로그램가 능 로직 디바이스(PLD), 필드 프로그램가능 게이트 어레이(FPGA) 등을 지칭할 수도 있다. '프로세서'는, 예를 들어, DSP와 마이크로프로세서의 조합, 복수의 마이크로프로세서들의 조합, DSP 코어와 결합한 하나 이상의 마 이크로프로세서들의 조합, 또는 임의의 다른 그러한 구성들의 조합과 같은 처리 디바이스들의 조합을 지칭할 수 도 있다. 또한, '메모리'는 전자 정보를 저장 가능한 임의의 전자 컴포넌트를 포함하도록 넓게 해석되어야 한 다. '메모리'는 임의 액세스 메모리(RAM), 판독-전용 메모리(ROM), 비-휘발성 임의 액세스 메모리(NVRAM), 프 로그램가능 판독-전용 메모리(PROM), 소거-프로그램가능 판독 전용 메모리(EPROM), 전기적으로 소거가능 PROM(EEPROM), 플래쉬 메모리, 자기 또는 광학 데이터 저장장치, 레지스터들 등과 같은 프로세서-판독가능 매체 의 다양한 유형들을 지칭할 수도 있다. 프로세서가 메모리로부터 정보를 판독하고/하거나 메모리에 정보를 기 록할 수 있다면 메모리는 프로세서와 전자 통신 상태에 있다고 불린다. 프로세서에 집적된 메모리는 프로세서 와 전자 통신 상태에 있다. 본 개시에서, '복수의 A의 각각' 또는 '복수의 A 각각'은 복수의 A에 포함된 모든 구성 요소의 각각을 지칭하거 나, 복수의 A에 포함된 일부 구성 요소의 각각을 지칭할 수 있다. 예를 들어, 복수의 이미지 데이터 세트 각각 은, 복수의 이미지 데이터 세트에 속한 모든 이미지 데이터 세트의 각각을 지칭하거나 복수의 이미지 데이터 세 트에 포함된 일부 이미지 데이터 세트의 각각을 지칭할 수 있다. 본 개시에서, '가상 시뮬레이션 환경'은 현실의 상황, 환경 또는 상호 작용을 컴퓨터 소프트웨어를 사용하여 시 뮬레이션하는 가상 혹은 디지털 환경을 지칭할 수 있다. 본 개시에서, '적대적 공격 데이터(adversarial attack data)'는 인공지능 모델의 오류를 유발시키기 위한 악의 적인 의도로 조작된 데이터를 지칭할 수 있다. '적대적 공격 데이터'는 인공지능 모델의 안전성과 신뢰성을 향 상시키기 위한 보안 관련된 연구 분야에서 주요 관심사 중 하나이며, 인공지능 모델의 강건성 개선에 활용될 수 있다. 예를 들어, '적대적 공격 데이터'는 교란(perturbation), 패치(patch) 또는 패턴(pattern)이 적용된 이 미지인 적대적 이미지(adversarial image)를 포함할 수 있다. 도 1은 본 개시의 일 실시예에 따라 인공지능 모델의 학습 데이터가 라벨링되어 수집되는 예시를 나타내는 도면이다. 도 1에 도시된 바와 같이, 인공지능 모델의 학습 데이터는 가상 환경 시스템, 학습 데이터 수 집 시스템 및 학습 데이터 데이터베이스 사이의 상호작용을 통해 수집될 수 있다. 일 실시예에 따르면, 학습 데이터 수집 시스템은 가상 환경 시스템으로부터 인공지능 모델의 학습 데 이터를 수신할 수 있다. 학습 데이터는 가상 시뮬레이션 환경에 기초하여 생성될 수 있다. 가 상 시뮬레이션 환경은 가상 환경 시스템에 의해 관리될 수 있다. 또한, 인공지능 모델의 학습 데이 터의 일 종류로서 적대적 공격 데이터가 수집될 수 있다. 학습 데이터 수집 시스템은 일반 학습 데 이터와 적대적 공격 데이터를 병행하여 수신할 수 있다. 일 실시예에 따르면, 학습 데이터인 적대적 공격 데이터는 가상 환경 시스템에 의해 생성될 수 있다. 가 상 환경 시스템은 뉴럴 렌더링 모델(neural rendering model)을 이용함으로써, 가상 시뮬레이션 환경(11 2)의 특정 객체(예: 자동차 등)에 대한 레퍼런스 이미지(reference image), 특정 객체에 대한 마스크 이미지 (mask image) 및 적대적 텍스처(adversarial texture)에 기초하여 적대적 공격 데이터의 일종인 적대적 이미지 를 생성할 수 있다. 가상 환경 시스템의 내부 구성 및 적대적 이미지 생성에 대한 세부적인 내용은 도 3 및 도 4를 참조하여 후술된다. 일 실시예에 따르면, 학습 데이터는 가상 시뮬레이션 환경의 특정 객체에 대한 이미지 데이터를 포함할 수 있다. 이 경우, 이미지 데이터는 특정 객체에 대한 복수의 이미지 데이터 세트 각각으로부터 무작위로 선별된 데이터일 수 있다. 이에 대한 세부적인 내용은 도 5를 참조하여 후술된다. 일 실시예에 따르면, 학습 데이터 수집 시스템은 수신된 학습 데이터를 라벨링할 수 있다. 이 경우, 학습 데이터를 라벨링하기 위한 레이블 데이터는 가상 시뮬레이션 환경을 구현하는 가상 환경 시스템 의 그래픽 엔진(graphic engine)에 의해 제공될 수 있다. 일 실시예에 따르면, 학습 데이터 수집 시스템은 라벨링된 학습 데이터를 학습 데이터 데이터베이스 에 저장할 수 있다. 학습 데이터 데이터베이스에 저장된 라벨링된 학습 데이터는 추후 인공지 능 모델을 학습시킬 때 가져올 수 있으며, 복수의 데이터 세트로 분할되어 학습 과정에서 이용될 수 있다. 또 한, 라벨링된 학습 데이터 중 적대적 공격 데이터는 인공지능 모델의 강건성 개선에 이용될 수 있다. 이 에 대한 세부적인 내용은 도 6 및 도 7을 참조하여 후술된다. 일 실시예에 따르면, 학습 데이터가 활용될 인공지능 모델은 영상 분석 인공지능 모델일 수 있으며, 분류 모델 (classification model) 또는 객체 탐지 모델(object detection model) 중 적어도 하나를 포함할 수 있다. 분 류 모델은 이미지가 어떤 클래스에 속하는지 분류하는 모델을 지칭할 수 있다. 객체 탐지 모델은 이미지 안의 객체가 어떤 클래스에 속하는지 분류하고, 객체의 위치를 바운딩 박스 좌표 형태로 탐지하는 모델을 지칭할 수 있다. 상술한 구성과 같이, 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델의 학습 데이터가 수집 될 수 있다. 이에 따라, 다양한 케이스에 대한 대규모의 학습 데이터가 확보될 수 있다. 또한, 학습 데이터 는 가상 시뮬레이션 환경을 구현한 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 라벨 링될 수 있다. 이에 따라, 데이터 라벨링에 소요되는 비용이 절약될 수 있다. 도 2는 본 개시의 일 실시예에 따른 학습 데이터 수집 시스템의 내부 구성을 나타내는 블록도이다. 학습 데이터 수집 시스템은, 메모리, 프로세서, 통신 모듈 및 입출력 인터페이스를 포함할 수 있다. 학습 데이터 수집 시스템은 통신 모듈을 이용하여 네트워크를 통해 외부 시스템(예: 도 1 의 가상 환경 시스템)과 정보 및/또는 데이터를 통신할 수 있도록 구성될 수 있다. 메모리는 비-일시적인 임의의 컴퓨터 판독 가능한 기록매체를 포함할 수 있다. 일 실시예에 따르면, 메모 리는 RAM(random access memory), ROM(read only memory), 디스크 드라이브, SSD(solid state drive), 플래시 메모리(flash memory) 등과 같은 비소멸성 대용량 저장 장치(permanent mass storage device)를 포함할 수 있다. 다른 예로서, ROM, SSD, 플래시 메모리, 디스크 드라이브 등과 같은 비소멸성 대용량 저장 장치는 메 모리와는 구분되는 별도의 영구 저장 장치로서 학습 데이터 수집 시스템에 포함될 수 있다. 또한, 메모리 에는 운영체제와 적어도 하나의 프로그램 코드(예를 들어, 학습 데이터 수집 시스템에 설치되어 구동 되는 학습 데이터 수집을 위한 코드 등)가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 로딩될 수 있 다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 이러한 학습 데이터 수집 시스템에 직접 연결가능 한 기록 매체를 포함할 수 있는데, 예를 들어, 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 예로서, 소프트웨어 구성요소들은 컴퓨터 에서 판독 가능한 기록매체가 아닌 통신 모듈을 통해 메모리에 로딩될 수도 있다. 예를 들어, 적어 도 하나의 프로그램은 개발자들 또는 어플리케이션의 설치 파일을 배포하는 파일 배포 시스템이 통신 모듈(23 0)을 통해 제공하는 파일들에 의해 설치되는 컴퓨터 프로그램(예를 들어, 학습 데이터 수집을 위한 프로그램 등)에 기반하여 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 모듈에 의해 사용자 단말(미도시) 또는 다른 외부 시스템 으로 제공될 수 있다. 예를 들어, 프로세서는, 수신된 학습 데이터 및 레이블 데이터에 기초하여 학습 데 이터를 라벨링할 수 있다. 통신 모듈은 네트워크를 통해 사용자 단말(미도시)과 학습 데이터 수집 시스템이 서로 통신하기 위한 구성 또는 기능을 제공할 수 있으며, 학습 데이터 수집 시스템이 외부 시스템(일례로 별도의 클라우드 시 스템 등)과 통신하기 위한 구성 또는 기능을 제공할 수 있다. 일례로, 학습 데이터 수집 시스템의 프로세 서의 제어에 따라 제공되는 제어 신호, 명령, 데이터 등이 통신 모듈과 네트워크를 거쳐 사용자 단말 및/또는 외부 시스템의 통신 모듈을 통해 사용자 단말 및/또는 외부 시스템으로 전송될 수 있다. 예를 들어, 인공지능 모델 학습이 필요한 사용자 단말 및/또는 외부 시스템은 학습 데이터 수집 시스템에 의해 수집된 학습 데이터를 수신할 수 있다. 또한, 학습 데이터 수집 시스템의 입출력 인터페이스는 학습 데이터 수집 시스템과 연결되거나 학습 데이터 수집 시스템이 포함할 수 있는 입력 또는 출력을 위한 장치(미도시)와의 인터페이스를 위한 수단일 수 있다. 도 2에서는 입출력 인터페이스가 프로세서와 별도로 구성된 요소로서 도시되었으나, 이에 한정되지 않으며, 입출력 인터페이스가 프로세서에 포함되도록 구성될 수 있다. 학습 데이터 수집 시스템은 도 2의 구성요소들보다 더 많은 구성요소들을 포함할 수 있다. 그러나, 대부 분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 학습 데이터 수집 시스템의 프로세서는 복수의 사용자 단말 및/또는 복수의 외부 시스템으로부터 수 신된 정보 및/또는 데이터를 관리, 처리 및/또는 저장하도록 구성될 수 있다. 일 실시예에 따르면, 프로세서 는 가상 환경 시스템으로부터 학습 데이터 및 레이블 데이터를 수신할 수 있다. 또한, 프로세서는 라벨링된 학습 데이터를 학습 데이터 데이터베이스에 저장할 수 있다. 도 3은 본 개시의 일 실시예에 따른 가상 환경 시스템의 내부 구성을 나타내는 도면이다. 일 실시예에 따 르면, 가상 환경 시스템은 가상 시뮬레이션 환경을 관리하는 시스템으로서 그래픽 엔진, 가상 데이터 생성 모듈, 적대적 공격 모듈, 파라미터 관리 모듈 및 히스토리 데이터베이스를 포함하여 구성될 수 있다. 또한, 도 3에서는 가상 환경 시스템의 구성을 각각의 기능별로 구분하여 설명하였으나, 반드시 물리적으로 구분되는 것을 의미하지 않는다. 예를 들어, 가상 데이터 생성 모듈과 파라미터 관리 모듈은 구분되어 상술되었으나, 이는 발명의 이해를 돕기 위한 것으로서, 이에 한정되지 않는다. 일 실시예에 따르면, 그래픽 엔진은 가상 시뮬레이션 환경을 시각적으로 구현하고 표현하기 위한 주요 역 할을 하는 소프트웨어를 지칭할 수 있다. 예를 들어, 그래픽 엔진은 가상의 차량이 운행되는 가상 주행 환 경을 구현할 수 있다. 이 경우, 그래픽 엔진은 언리얼 엔진(unreal Engine), 유니티(unity) 등을 활용할 수 있다. 또한, 그래픽 엔진은 학습 데이터 라벨링에 필요한 레이블 데이터를 제공할 수 있다. 예를 들 어, 그래픽 엔진은 가상 주행 환경에 존재하는 객체(예: 자동차, 보행자 등)의 클래스, 좌표 등을 제공할 수 있다. 일 실시예에 따르면, 가상 데이터 생성 모듈은 그래픽 엔진에 구현된 가상 시뮬레이션 환경으로부터 학습 데이터를 생성할 수 있다. 예를 들어, 가상 데이터 생성 모듈은 학습 데이터로서 가상 시뮬레이션 환경의 특정 객체(예: 자동차, 보행자 등)에 대한 이미지 데이터를 생성할 수 있다. 이 경우, 가상 데이터 생 성 모듈은 가상 시뮬레이션 환경에 존재하는 복수의 가상 카메라를 이용하여 복수의 이미지 데이터 세트를 생성하고, 이로부터 학습 데이터로 활용될 이미지 데이터를 무작위로 선별할 수 있다. 이에 대한 세부적인 내 용은 도 5를 참조하여 후술된다. 일 실시예에 따르면, 적대적 공격 모듈은 학습 데이터 중 적대적 공격 데이터를 생성할 수 있다. 예를 들 어, 적대적 공격 모듈은 뉴럴 렌더링 모델을 이용함으로써, 가상 시뮬레이션 환경의 특정 객체에 대한 레 퍼런스 이미지, 특정 객체에 대한 마스크 이미지 및 적대적 텍스처에 기초하여 적대적 이미지를 생성할 수 있다. 이에 대한 세부적인 내용은 도 4를 참조하여 후술된다. 일 실시예에 따르면, 파라미터 관리 모듈은 학습 데이터 생성과 연관된 파라미터를 관리할 수 있다. 예를 들어, 파라미터 관리 모듈은 적대적 공격 모듈의 뉴럴 렌더링 모델의 파라미터를 관리할 수 있다. 다른 예로서, 파라미터 관리 모듈은 가상 시뮬레이션 환경에 존재하는 가상 카메라의 카메라 파라미터를 관리할 수 있다. 일 실시예에 따르면, 히스토리 데이터베이스는 학습 데이터 생성 과정에 대한 기록 정보를 저장할 수 있다. 예를 들어, 히스토리 데이터베이스는 가상 데이터 생성 모듈이 학습 데이터를 생성하는 과정 에 대한 기록 정보를 저장할 수 있다. 다른 예로서, 히스토리 데이터베이스는 적대적 공격 모듈이 적대적 공격 데이터를 생성하는 과정에 대한 기록 정보(예: 뉴럴 렌더링 모델의 파라미터 등)를 저장할 수 있다. 도 3에서 도시한 가상 환경 시스템의 내부 구성은 일 예시일 뿐이며, 가상 환경 시스템의 적어도 일 부의 구성이 생략되거나, 다른 구성이 추가될 수 있으며, 가상 환경 시스템이 수행하는 적어도 일부의 동 작 또는 과정이 가상 환경 시스템과 통신 가능하도록 연결된 외부 시스템의 프로세서에 의해 수행되는 등 이와 다르게 구현될 수 있다. 도 4는 본 개시의 일 실시예에 따라 학습 데이터가 생성되는 예시를 나타내는 도면이다. 학습 데이터는 적대적 공격 데이터의 일종인 적대적 이미지를 포함할 수 있으며, 적대적 이미지는 도 3의 가상 환경 시스템의 적 대적 공격 모듈에 의해 생성될 수 있으며, 뉴럴 렌더링 모델을 이용함으로써, 가상 시뮬레이션 환경 의 특정 객체(예: 자동차 등)에 대한 레퍼런스 이미지, 특정 객체에 대한 마스크 이미지 및 적대적 텍스처에 기초하여 생성될 수 있다. 적대적 텍스처는 적대적 공격을 수행하기 위해 특정 객체의 이 미지에 렌더링되는 텍스처로서 교란(perturbation) 형태, 패치(patch) 형태, 패턴(pattern) 형태 등 다양한 형 태를 포함할 수 있다. 일 실시예에 따르면, 물리 기반 렌더링 엔진(physically based rendering engine)으로부터 레퍼런스 이미 지, 마스크 이미지 및 깊이 이미지가 생성될 수 있다. 물리 기반 렌더링 엔진은 도 3의 가상 환경 시스템의 그래픽 엔진에 구현된 가상 시뮬레이션 환경에 존재하는 특정 객체에 기초하여 상술한 이미지를 생성할 수 있다. 레퍼런스 이미지는 특정 객체에 대한 이미지를 지칭할 수 있다. 마스 크 이미지는 특정 객체가 마스킹(masking)된 이미지를 지칭할 수 있다. 깊이 이미지는 각 픽셀에서 카메라 또는 센서로부터 특정 객체까지의 거리 정보를 나타내는 이미지를 지칭할 수 있다. 일 실시예에 따르면, 마스크 이미지를 이용하여 레퍼런스 이미지로부터 마스킹된 레퍼런스 이미지 가 추출될 수 있다. 마스킹된 레퍼런스 이미지는 레퍼런스 이미지에서 특정 객체의 형상만이 추출된 이미지를 지칭할 수 있다. 또한, 적대적 텍스처를 3차원으로 매핑한 투사된 텍스처가 생성될 수 있다. 투사된 텍스처는 깊이 이미지로부터 추출된 표면 좌표 및 표면 법선에 기초하여 적대적 텍 스처를 3차원 매핑하는 삼면 매핑(triplanar mapping)에 의해 적대적 텍스처를 삼면으로 투사하여 생성될 수 있다. 이러한 방식에 따라 텍스처가 렌더링될 객체에 독립적인 적대적 텍스처가 생성될 수 있다. 또한, 삼 면 매핑 과정에서 카메라 파라미터, 증강된 카메라 파라미터가 이용될 수 있다. 일 실시예에 따르면, 마스킹된 레퍼런스 이미지 및 투사된 텍스처에 기초하여 마스킹된 적대적 이미 지가 생성될 수 있다. 마스킹된 적대적 이미지는 뉴럴 렌더링 모델에 의해 생성될 수 있다. 뉴럴 렌더링 모델은 미분 가능 렌더링(differentiable rendering)에 기초하여 화이트 박스 공격을 통해 최 적의 적대적 공격 데이터를 생성하는 모델일 수 있다. 뉴럴 렌더링 모델은 하기의 수학식 1을 이용하여텍스처 렌더링을 학습할 수 있다. 수학식 1"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, 는 특정 객체에 대한 레퍼런스 이미지, 는 적대적 텍스처, 은 렌더링된 이미지를 나타낸다. 뉴럴 렌더링 모델은 또한, 다양한 객체에 적용 가능한 공격 패턴을 생성하여 일반화 성능을 향 상시키고, 모든 유효한 클래스에 대한 신뢰성 점수를 최소화하여 객체 자체로 탐지되지 않도록 하기 위한 하기 의 수학식 2을 이용할 수 있다. 수학식 2"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, V는 사용 가능한 객체의 유형을 나타내고, Y는 탐지 모델의 이용 가능한 클래스를 나타낸다. 일 실시예에 따르면, 반전된 마스크 이미지를 이용하여 레퍼런스 이미지 로부터 배경 이미지가 생성 될 수 있다. 반전된 마스크 이미지는 마스크 이미지를 반전시킨 것으로 레퍼런스 이미지에서 배경 외 나머지 부분을 마스킹하는 이미지를 지칭할 수 있다. 마스킹된 적대적 이미지 및 배경 이미지에 기초하여 적대적 이미지가 생성될 수 있다. 일 실시예에 따르면, 적대적 이미지는 무작위로 변환하여 증강될 수 있다. 예를 들어, 적대적 이미지 는 스케일링, 명암, 대비 등이 무작위로 변환될 수 있으며 이에 따라 추가적인 적대적 이미지가 생성될 수 있다. 이를 통해, 학습 대상인 인공지능 모델의 강건성을 개선하기 위한 추가적인 학습 데이터가 확보될 수 있 다. 일 실시예에 따르면, 적대적 텍스처는 복수의 손실함수를 이용하여 개선될 수 있다. 예를 들어, 적대적 텍스처는 스텔스 손실(stealth loss; )를 이용하여 개선될 수 있다. 스텔스 손실은 적대적 공격의 대상이 되는 인공지능 모델(예: 객체 탐지 모델)의 성능을 낮추도록 적대적 텍스처를 개선하기 위 한 손실함수일 수 있다. 스텔스 손실은 객체 탐지 모델에 사용되는 2가지 대표 점수인 클래스 신뢰도 점 수(class confidence score)와 객체성 점수(objectness score)를 고려하며, 객체성 점수 및 모든 클래스에 대 한 최대 신뢰도 점수를 최소화하여 모델의 오분류를 유도할 뿐만 아니라 객체가 없는 빈 부분에 모델이 박스 표 시하도록 할 수 있다. 스텔스 손실은 하기의 수학식 3을 이용할 수 있다. 수학식 3"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서 는 모델 의 입력 데이터, 는 에 대한 의 신뢰도 점수, 는 에 대한 의 객체성 점수, 는 바운딩 박스 형태의 에 대한 의 탐지 결과, 객체성 점수 는 바운딩 박스 와 실측값(ground truth; gt) 사이의 IoU(Intersection over Union), t는 임의의 IoU의 임계값을 지칭할 수 있다. 는 탐지 점수로, 이는 신뢰도 점수와 객관성 점수의 곱일 수 있다. 는 실측값이 0일 때의 로그 손실이다. 이에 따라, 스텔스 손실을 최소화하면 신뢰도와 객관성 점수가 모두 최소화되는 효과가 있다. 또한, IoU가 t보다 큰 유효한 상자에 대해서만 탐지 점수에 값을 할당하고 그렇지 않으면 0으로설정될 수 있다. 이에 따라, 객체를 근접하게 탐지하는 상자에만 손실이 적용되고, 그렇지 않은 경우에는 제외 되므로 객체 탐지 모델의 유효 탐지 성능이 효과적으로 저하될 수 있다. 다른 예로서, 적대적 텍스처는 평활 손실(smooth loss; )을 이용하여 개선될 수 있다. 평활 손 실은 적대적 텍스처의 평활도(smoothness)를 향상시키기 위한 손실함수일 수 있으며, 하기의 수학식 4를 이용할 수 있다. 수학식 4"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서 는 좌표 (i,j)에서 텍스처 의 픽셀, 텍스처 이미지 높이(H) 및 텍스처 이미지 너비(W)의 스케일 팩터(scale factor)를 지칭할 수 있다. 인접한 픽셀의 값이 가까울수록 평활 손실 의 낮아지며, 평활 손실을 최소화하면 적대적 텍스처의 평활도가 향상될 수 있다. 또 다른 예로서, 적대적 텍스처는 위장 손실(camouflage loss; )을 이용하여 개선될 수 있다. 위장 손실은 적대적 텍스처가 적용된 특정 객체의 인식도를 낮추도록 적대적 텍스처를 개선하는 데 이용될 수 있다. 이를 위해, 위장 함수를 이용하여 배경 이미지의 도미넌트 배경색(dominant background color)을 추출하고 적대적 텍스처를 이와 유사하게 만드는 방법을 활용할 수 있으며, 하 기의 수학식 5를 이용할 수 있다. 수학식 5"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "여기서 는 위장 손실의 스케일 팩터이고, 는 도미넌트 배경색이다. 위장 손실을 최소화함으로써 배경과 유사한 색상을 갖는 적대적 텍스처를 획득할 수 있다. 복수의 손실함수를 이용한 총 손실함수는 하기의 수학식 6과 같다. 수학식 6"}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "여기서 , , 는 각 손실함수의 기여도를 조절하기 위한 가중치일 수 있다. 상술한 구성을 통해 학습 데이터로서 적대적 공격 데이터가 생성될 수 있다. 이에 따라, 인공지능 모델의 강건 성을 개선할 수 있는 학습 데이터가 수집될 수 있다. 도 5는 본 개시의 일 실시예에 따라 학습 데이터가 생성되는 다른 예시를 나타내는 도면이다. 일 실시예에 따 르면, 학습 데이터는 가상 시뮬레이션 환경의 특정 객체에 대한 이미지 데이터일 수 있다. 일 실시예에 따르면, 가상 시뮬레이션 환경에 존재하는 복수의 가상 카메라(520, 530, 540)는 특정 객체에 대한 복수의 이미지 데이터 세트(522, 532, 542)를 생성할 수 있다. 이 경우, 복수의 가상 카메라(520, 530, 540) 각각은 상이한 카메라 파라미터가 설정될 수 있다. 예를 들어, 복수의 가상 카메라(520, 530, 540) 각각은 외부 파라미터(예: 카메라의 방향 등) 또는 내부 파라미터(예: 초점 거리, 광학 중심 등)가 상이하게 설정될 수있다. 일 실시예에 따르면, 특정 객체에 대한 복수의 이미지 데이터 세트(522, 532, 542) 각각으로부터 학습 데이터인 이미지 데이터가 동일한 개수만큼 무작위로 선별될 수 있다. 예를 들어, 15개의 이미지 데이터를 학습 데 이터로 선별할 경우, 제1 이미지 데이터 세트, 제2 이미지 데이터 세트, 제3 이미지 데이터 세트 각각 5개의 이미지를 무작위로 선별하여 학습 데이터로 할 수 있다. 상술한 구성을 통해, 상이한 카메라 파라미터가 설정된 가상 카메라로부터 다양한 학습 데이터가 생성될 수 있 으며, 복수의 이미지 데이터 세트(522, 532, 542)로부터 동일한 개수만큼 무작위 선별함으로써 학습 대상인 인 공지능 모델의 편향성을 낮출 수 있다. 도 6은 본 개시의 일 실시예에 따른 수집된 학습 데이터가 활용되는 방법을 나타내는 흐름도이다. 방법 은 인공지능 모델 학습 시스템의 적어도 하나의 프로세서에 의해 수행될 수 있다. 도시된 바와 같이, 방 법은 학습 데이터를 전처리함으로써 개시될 수 있다(S610). 일 실시예에서, 프로세서는 학습 데이터 데이 터베이스로부터 학습 데이터를 전처리할 수 있다. 예를 들어, 프로세서는 데이터 정제, 데이터 통합, 데이터 변환, 데이터 축소, 데이터 이산화 등 학습 데이터를 전처리할 수 있다. 그 후, 프로세서는 학습 데이터를 복수의 데이터 세트로 분할할 수 있다(S620). 일 실시예에서, 프로세서는 학 습 데이터를 학습 데이터 세트, 검증 데이터 세트 및 테스트 데이터 세트로 분할할 수 있다. 그 후, 프로세서는 인공지능 모델을 학습시킬 수 있다(S630). 이 경우, 프로세서는 분할된 데이터 세트 중 학 습 데이터 세트를 이용할 수 있다. 예를 들어, 학습 데이터가 이미지 데이터인 경우, 프로세서는 분류 모델(예: VGG, ResNet, MobileNet, EfficientNet) 및/또는 객체 탐지 모델(YOLO, Faster R-CNN, SSD, DETR)을 학습시킬 수 있다. 그 후, 프로세서는 인공지능 모델을 검증 및 업데이트할 수 있다(S640). 예를 들어, 프로세서는 인공지능 모델 의 파라미터 검증, 하이퍼파라미터 튜닝, 커스텀 손실함수(custom loss function) 튜닝 등을 할 수 있으며, 모 델 성능 평가 기법을 활용할 수 있다. 마지막으로, 프로세서는 인공지능 모델을 테스트할 수 있다(S650). 예를 들어, 프로세서는 인공지능 모델의 파 라미터 검증, 하이퍼파라미터 검증, 커스텀 손실함수 검증, 모델 알고리즘 튜닝 등을 할 수 있다. 도 6에서 도시한 흐름도 및 상술한 설명은 일 예시일 뿐이며, 일부 실시예에서는 다르게 구현될 수 있다. 예를 들어, 일부 실시예에서는 각 단계의 순서가 바뀌거나, 일부 단계가 반복 수행되거나, 일부 단계가 생략되거나, 일부 단계가 추가될 수 있다. 도 7은 본 개시의 일 실시예에 따른 인공지능 모델의 강건성 개선 방법을 나타내는 흐름도이다. 방법 은 인공지능 모델 학습 시스템의 적어도 하나의 프로세서에 의해 수행될 수 있다. 도시된 바와 같이, 방 법은 인공지능 모델을 구성함으로써 개시될 수 있다(S710). 일 실시예에서, 프로세서는 학습 데이터 데이 터베이스로부터 학습 데이터를 전처리할 수 있다. 예를 들어, 프로세서는 인공지능 모델의 목적, 아키텍처를 설계하고 하이퍼파라미터를 설정할 수 있다. 그 후, 프로세서는 학습 데이터를 적대적 공격 데이터를 수집할 수 있다(S720). 일 실시예에서, 프로세서는 학 습 데이터 수집 시스템에 의해 수집된 적대적 공격 데이터를 수신할 수 있다. 그 후, 프로세서는 인공지능 모델의 성능을 평가할 수 있다(S730). 일 실시예에서, 프로세서는 수집한 적대적 공격 데이터를 이용하여 정확도 등 성능 지표를 활용하여 앞선 단계에서 구성한 인공지능 모델의 성능을 평가할 수 있다. 마지막으로, 프로세서는 인공지능 모델을 업데이트할 수 있다(S740). 일 실시예에서, 프로세서는 평가 결과에 기초하여 인공지능 모델을 업데이트할 수 있으며, 수신한 적대적 공격 데이터를 이용하여 인공지능 모델을 추가 적으로 학습시킬 수 있다. 프로세서는 상술한 S720 내지 S740을 반복적으로 수행함으로써 인공지능 모델의 강 건성을 점진적으로 개선할 수 있다. 도 7에서 도시한 흐름도 및 상술한 설명은 일 예시일 뿐이며, 일부 실시예에서는 다르게 구현될 수 있다. 예를 들어, 일부 실시예에서는 각 단계의 순서가 바뀌거나, 일부 단계가 반복 수행되거나, 일부 단계가 생략되거나, 일부 단계가 추가될 수 있다. 도 8은 본 개시의 일 실시예에 따른 인공지능 모델 학습 데이터 수집 방법을 나타내는 흐름도이다. 방법 은 도 2의 정보 처리 시스템의 적어도 하나의 프로세서(예: 학습 데이터 수집 시스템의 프로세서)에 의해 수행될 수 있다. 도시된 바와 같이, 방법은 가상 시뮬레이션 환경에 기초하여 생성된 인공지능 모델 의 학습 데이터를 수집함으로써 개시될 수 있다(S810). 일 실시예에서, 인공지능 모델은 분류 모델 또는 객체 탐지 모델 중 적어도 하나를 포함할 수 있다. 일 실시예에서, 학습 데이터는 적대적 공격 데이터를 포함할 수 있다. 이 경우, 적대적 공격 데이터는 가상 시 뮬레이션 환경을 관리하는 가상 환경 시스템에 의해 생성될 수 있다. 일 실시예에서, 가상 환경 시스템은 뉴럴 렌더링 모델을 이용함으로써, 가상 시뮬레이션 환경의 특정 객체에 대 한 레퍼런스 이미지, 특정 객체에 대한 마스크 이미지 및 적대적 텍스처에 기초하여 적대적 이미지를 생성할 수 있다. 보다 상세하게, 가상 환경 시스템은 마스크 이미지를 이용하여 레퍼런스 이미지로부터 마스킹된 레퍼런 스 이미지를 추출하고, 적대적 텍스처를 3차원으로 매핑한 투사된 텍스처를 생성하고, 뉴럴 렌더링 모델을 이용 하여 마스킹된 레퍼런스 이미지에 투사된 텍스처를 렌더링 함으로써 마스킹된 적대적 이미지를 생성하고, 반전 된 마스크 이미지를 이용하여 레퍼런스 이미지로부터 배경 이미지를 추출하고, 마스킹된 적대적 이미지 및 배경 이미지를 결합하여 적대적 이미지를 생성할 수 있다. 이 경우, 투사된 텍스처는 특정 객체에 대한 깊이 이미지 로부터 추출된 표면 좌표 및 표면 법선에 기초하여 적대적 텍스처를 3차원 매핑함으로써 생성될 수 있다. 일 실시예에서, 가상 환경 시스템은 적대적 이미지를 무작위로 변환하여 증강할 수 있다. 또한, 가상 환경 시 스템은 복수의 손실함수를 이용하여 적대적 텍스처를 개선할 수 있다. 복수의 손실함수는 적대적 공격의 대상 이 되는 인공지능 모델의 성능을 낮추도록 적대적 텍스처를 개선하기 위한 손실함수, 적대적 텍스처의 평활도를 향상시키기 위한 손실함수, 특정 객체의 인식도를 낮추도록 적대적 텍스처를 개선하기 위한 손실함수를 포함할 수 있다. 일 실시예에서, 학습 데이터는 가상 시뮬레이션 환경의 특정 객체에 대한 이미지 데이터를 포함할 수 있다. 이 미지 데이터는 특정 객체에 대한 복수의 이미지 데이터 세트 각각으로부터 동일한 개수만큼 무작위로 선별된 데 이터일 수 있다. 이 경우, 복수의 이미지 데이터 세트는 가상 시뮬레이션 환경에 존재하는 복수의 가상 카메라 에 의해 생성되고, 복수의 가상 카메라 각각은 상이한 카메라 파라미터가 설정될 수 있다. 일 실시예에서, 학습 데이터는 복수의 데이터 세트로 분할될 수 있다. 예를 들어, 학습 데이터는 학습 데이터 세트, 검증 데이터 세트 및 테스트 데이터 세트로 분할될 수 있다. 그 후, 프로세서는 학습 데이터를 라벨링할 수 있다(S820). 일 실시예에서, 가상 시뮬레이션 환경은 그래픽 엔 진에 의해 구현되고, 프로세서는 그래픽 엔진으로부터 제공된 레이블 데이터에 기초하여 학습 데이터를 라벨링 할 수 있다. 마지막으로, 프로세서는 라벨링된 학습 데이터를 데이터베이스에 저장할 수 있다(S830). 도 8에서 도시한 흐름도 및 상술한 설명은 일 예시일 뿐이며, 일부 실시예에서는 다르게 구현될 수 있다. 예를 들어, 일부 실시예에서는 각 단계의 순서가 바뀌거나, 일부 단계가 반복 수행되거나, 일부 단계가 생략되거나, 일부 단계가 추가될 수 있다. 상술한 방법은 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램으로 제공될 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하 는 것일 수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워크 상에 분산 존재하는 것일 수 도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD 와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체 의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 본 개시의 방법, 동작 또는 기법들은 다양한 수단에 의해 구현될 수도 있다. 예를 들어, 이러한 기법들은 하드 웨어, 펌웨어, 소프트웨어, 또는 이들의 조합으로 구현될 수도 있다. 본원의 개시와 연계하여 설명된 다양한 예시적인 논리적 블록들, 모듈들, 회로들, 및 알고리즘 단계들은 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양자 의 조합들로 구현될 수도 있음을 통상의 기술자들은 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 대 체를 명확하게 설명하기 위해, 다양한 예시적인 구성요소들, 블록들, 모듈들, 회로들, 및 단계들이 그들의 기능 적 관점에서 일반적으로 위에서 설명되었다. 그러한 기능이 하드웨어로서 구현되는지 또는 소프트웨어로서 구 현되는지 여부는, 특정 애플리케이션 및 전체 시스템에 부과되는 설계 요구사항들에 따라 달라진다. 통상의 기술자들은 각각의 특정 애플리케이션을 위해 다양한 방식들로 설명된 기능을 구현할 수도 있으나, 그러한 구현들 은 본 개시의 범위로부터 벗어나게 하는 것으로 해석되어서는 안 된다. 하드웨어 구현에서, 기법들을 수행하는 데 이용되는 프로세싱 유닛들은, 하나 이상의 ASIC들, DSP들, 디지털 신 호 프로세싱 디바이스들(digital signal processing devices; DSPD들), 프로그램가능 논리 디바이스들 (programmable logic devices; PLD들), 필드 프로그램가능 게이트 어레이들(field programmable gate arrays; FPGA들), 프로세서들, 제어기들, 마이크로제어기들, 마이크로프로세서들, 전자 디바이스들, 본 개시에 설명된 기능들을 수행하도록 설계된 다른 전자 유닛들, 컴퓨터, 또는 이들의 조합 내에서 구현될 수도 있다. 따라서, 본 개시와 연계하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, DSP, ASIC, FPGA나 다른 프로그램 가능 논리 디바이스, 이산 게이트나 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본원에 설명된 기능들을 수행하도록 설계된 것들의 임의의 조합으로 구현되거나 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수도 있지만, 대안으로, 프로세서는 임의의 종래의 프로세서, 제어기, 마이크로 제어기, 또는 상태 머신일 수도 있다. 프로세서는 또한, 컴퓨팅 디바이스들의 조합, 예를 들면, DSP와 마이크 로프로세서, 복수의 마이크로프로세서들, DSP 코어와 연계한 하나 이상의 마이크로프로세서들, 또는 임의의 다 른 구성의 조합으로 구현될 수도 있다. 펌웨어 및/또는 소프트웨어 구현에 있어서, 기법들은 랜덤 액세스 메모리(random access memory; RAM), 판독 전 용 메모리(read-only memory; ROM), 비휘발성 RAM(non-volatile random access memory; NVRAM), PROM(programmable read-only memory), EPROM(erasable programmable read-only memory), EEPROM(electrically erasable PROM), 플래시 메모리, 컴팩트 디스크(compact disc; CD), 자기 또는 광학 데이 터 스토리지 디바이스 등과 같은 컴퓨터 판독가능 매체 상에 저장된 명령어들로 구현될 수도 있다. 명령들은 하나 이상의 프로세서들에 의해 실행 가능할 수도 있고, 프로세서(들)로 하여금 본 개시에 설명된 기능의 특정 양태들을 수행하게 할 수도 있다. 이상 설명된 실시예들이 하나 이상의 독립형 컴퓨터 시스템에서 현재 개시된 주제의 양태들을 활용하는 것으로 기술되었으나, 본 개시는 이에 한정되지 않고, 네트워크나 분산 컴퓨팅 환경과 같은 임의의 컴퓨팅 환경과 연계 하여 구현될 수도 있다. 또 나아가, 본 개시에서 주제의 양상들은 복수의 프로세싱 칩들이나 장치들에서 구현 될 수도 있고, 스토리지는 복수의 장치들에 걸쳐 유사하게 영향을 받게 될 수도 있다. 이러한 장치들은 PC들, 네트워크 서버들, 및 휴대용 장치들을 포함할 수도 있다."}
{"patent_id": "10-2023-0131127", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "본 명세서에서는 본 개시가 일부 실시예들과 관련하여 설명되었지만, 본 개시의 발명이 속하는 기술분야의 통상 의 기술자가 이해할 수 있는 본 개시의 범위를 벗어나지 않는 범위에서 다양한 변형 및 변경이 이루어질 수 있 다. 또한, 그러한 변형 및 변경은 본 명세서에 첨부된 특허청구의 범위 내에 속하는 것으로 생각되어야 한다."}
{"patent_id": "10-2023-0131127", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시의 실시예들은, 이하 설명하는 첨부 도면들을 참조하여 설명될 것이며, 여기서 유사한 참조 번호는 유사 한 요소들을 나타내지만, 이에 한정되지는 않는다. 도 1은 본 개시의 일 실시예에 따라 인공지능 모델의 학습 데이터가 라벨링되어 수집되는 예시를 나타내는 도면 이다. 도 2는 본 개시의 일 실시예에 따른 학습 데이터 수집 시스템의 내부 구성을 나타내는 블록도이다. 도 3은 본 개시의 일 실시예에 따른 가상 환경 시스템의 내부 구성을 나타내는 도면이다. 도 4는 본 개시의 일 실시예에 따라 학습 데이터가 생성되는 예시를 나타내는 도면이다. 도 5는 본 개시의 일 실시예에 따라 학습 데이터가 생성되는 다른 예시를 나타내는 도면이다. 도 6은 본 개시의 일 실시예에 따른 수집된 학습 데이터가 활용되는 방법을 나타내는 흐름도이다. 도 7은 본 개시의 일 실시예에 따른 인공지능 모델의 강건성 개선 방법을 나타내는 흐름도이다. 도 8은 본 개시의 일 실시예에 따른 인공지능 모델 학습 데이터 수집 방법을 나타내는 흐름도이다."}
