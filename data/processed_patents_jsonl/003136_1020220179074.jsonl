{"patent_id": "10-2022-0179074", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0004394", "출원번호": "10-2022-0179074", "발명의 명칭": "공유 메모리 액세스 제어 방법, 장치, 전자 기기 및 자율 주행 차량", "출원인": "베이징 바이두 넷컴 사이언스 테크놀로지 컴퍼니", "발명자": "동, 레이"}}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "공유 메모리 액세스 제어 방법에 있어서, 공유 메모리를 크리에이트하고 초기화하는 단계 - 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계;및상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에저장하는 단계;를 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,공유 메모리를 크리에이트하고 초기화하는 단계는, 첫 번째 실행하는 프로세스를 통해 상기 공유 메모리를 크리에이트하는 단계; 상기 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하는 단계; 및상기 첫 번째 실행하는 프로세스의 파라미터에 따라 상기 헤더 오브젝트에 영역 배치 오브젝트의 속성파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하고, 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트하는단계;를 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 제1 프로세스는 상기 첫 번째 실행하는 프로세스 이외의 기타 프로세스 또는 재작동하는 프로세스이고, 상기 헤더 오브젝트에는 초기화 식별자 및 검증 파라미터가 더 포함되고; 상기 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는단계는, 상기 기타 프로세스를 통해 상기 초기화 식별자 및 상기 검증 파라미터를 검증하는 단계; 상기 초기화 식별자가 유효 상태이고, 상기 검증 파라미터와 상기 기타 프로세스의 검증값이 일치할 경우, 상기영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터에 따라 상기 기타 프로세스의 배치 파라미터를 업데이트하는 단계; 및상기 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 상기 적어도 하나의타겟 블록을 결정하는 단계;를 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2023-0004394-3-제3항에 있어서,상기 헤더 오브젝트에 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하기 전에, 상기 초기화 식별자를 무효 상태로 설치하고, 상기 검증 파라미터를 무효 데이터로 설치하는 단계를 더 포함하고; 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트한 후에, 상기 헤더 오브젝트의 검증값을 결정하고, 상기 검증값을 상기 검증 파라미터에 기록하고, 상기 초기화 식별자를 유효 상태로 업데이트하는 단계를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 초기화 후의 공유 메모리에는 상태 오브젝트가 더 포함되고, 상기 상태 오브젝트에는 블록 인덱스가 포함되고; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는단계는, 상기 기록해야 할 데이터의 데이터 양에 따라, 상기 타겟 블록의 제1 수를 결정하는 단계; 상기 상태 오브젝트로부터 상기 블록 인덱스를 획득하는 단계; 및상기 블록 인덱스에서 시작하는 제1 수의 블록을 상기 적어도 하나의 타겟 블록으로 결정하는 단계;를포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 상태 오브젝트에는 영역 인덱스가 더 포함되고, 상기 영역 인덱스에 대응되는 영역은 상기 타겟 영역인,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한후에, 상기 블록 인덱스 및 상기 영역 인덱스를 업데이트하는 단계를 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 상태 오브젝트에는 메모리 업데이트 시간이 더 포함되고; 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한후에, 상기 메모리 업데이트 시간을 현제 시간으로 수정하는 단계를 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법.공개특허 10-2023-0004394-4-청구항 9 제8항에 있어서,상기 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 상기 공유 메모리를 릴리스하는 단계를 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제6항에 있어서,제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 단계; 및상기 공유 메모리에 판독할 데이터가 존재할 경우, 상기 판독할 데이터를 판독하는 단계;를 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 단계는, 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치한지 여부를 판단하는 단계; 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치하지 않을 경우, 상기 기록 인덱스를 상기 영역 인덱스로 업데이트하는 단계; 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하는 단계; 및상기 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 상기 공유 메모리에 상기 판독할 데이터가 존재하는 것을 결정하는 단계;를 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 판독할 데이터를 판독하는 단계는, 상기 제2 프로세스의 판독 인덱스에 따라, 상기 판독할 데이터를 판독하고, 판독이 완료된 후에, 상기 판독 인덱스를 업데이트하는 단계를 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 방법."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공유 메모리 액세스 제어 장치에 있어서, 공유 메모리를 크리에이트하고 초기화하는 크리에이트 모듈 - 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 결정모듈; 및상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에저장하는 기록 모듈;을 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치.공개특허 10-2023-0004394-5-청구항 14 제13항에 있어서,상기 크리에이트 모듈은, 첫 번째 실행하는 프로세스를 통해 상기 공유 메모리를 크리에이트하는 제1 크리에이트 유닛; 상기 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하기 위한 제2 크리에이트 유닛; 및상기 첫 번째 실행하는 프로세스의 파라미터에 따라 상기 헤더 오브젝트에 영역 배치 오브젝트의 속성파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하고, 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트하는제3 크리에이트 유닛;을 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 제1 프로세스는 상기 첫 번째 실행하는 프로세스 이외의 기타 프로세스 또는 재작동하는 프로세스이고, 상기 헤더 오브젝트에는 초기화 식별자 및 검증 파라미터가 더 포함되고; 상기 기록 모듈은, 상기 기타 프로세스를 통해 상기 초기화 식별자 및 상기 검증 파라미터를 검증하는 검증 유닛; 상기 초기화 식별자가 유효 상태이고, 상기 검증 파라미터와 상기 기타 프로세스의 검증값이 일치할 경우, 상기영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터에 따라 상기 기타 프로세스의 배치 파라미터를 업데이트하는 제1 업데이트 유닛; 및상기 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 상기 적어도 하나의타겟 블록을 결정하는 제1 결정 유닛;을 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 초기화 식별자를 무효 상태로 설치하고, 상기 검증 파라미터를 무효 데이터로 설치하는 제1 설치 유닛; 및상기 헤더 오브젝트의 검증값을 결정하고, 상기 검증값을 상기 검증 파라미터에 기록하고, 상기 초기화 식별자를 유효 상태로 업데이트하는 제2 설치 유닛;을 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항 내지 제16항 중 어느 한 항에 있어서,상기 초기화 후의 공유 메모리에는 상태 오브젝트가 더 포함되고, 상기 상태 오브젝트에는 블록 인덱스가 포함되고; 상기 결정 모듈은, 상기 기록해야 할 데이터의 데이터 양에 따라, 상기 타겟 블록의 제1 수를 결정하는 제2 결정 유닛; 상기 상태 오브젝트로부터 상기 블록 인덱스를 획득하는 획득 유닛; 및상기 블록 인덱스에서 시작하는 제1 수의 블록을 상기 적어도 하나의 타겟 블록으로 결정하는 제3 결정 유닛;을포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치.공개특허 10-2023-0004394-6-청구항 18 제17항에 있어서,상기 상태 오브젝트에는 영역 인덱스가 더 포함되고, 상기 영역 인덱스에 대응되는 영역은 상기 타겟 영역인,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 블록 인덱스 및 상기 영역 인덱스를 업데이트하는 제2 업데이트 유닛을 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항 내지 제19항 중 어느 한 항에 있어서,상기 상태 오브젝트에는 메모리 업데이트 시간이 더 포함되고; 상기 장치는, 상기 메모리 업데이트 시간을 현제 시간으로 수정하는 제3 업데이트 유닛을 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제20항에 있어서,상기 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 상기 공유 메모리를 릴리스하는 릴리스 모듈을 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제18항에 있어서,제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 제4 결정 유닛; 및상기 공유 메모리에 판독할 데이터가 존재할 경우, 상기 판독할 데이터를 판독하는 판독 유닛;을 더 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제22항에 있어서,상기 제4 결정 유닛은,상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치한지 여부를 판단하는 제1 판단 유닛; 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치하지 않을 경우, 상기 기록 인덱스를 상기 영역 인덱스로 업데이트하는 제4 업데이트 유닛; 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하는 제2 판단 유닛; 및상기 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 상기 공유 메모리에 상기 판독할 데이터가 존재하는 것을 결정하는 제5 결정 유닛;을 포함하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "공개특허 10-2023-0004394-7-제23항에 있어서,상기 판독 유닛은,상기 제2 프로세스의 판독 인덱스에 따라, 상기 판독할 데이터를 판독하고, 판독이 완료된 후에, 상기 판독 인덱스를 업데이트하는,것을 특징으로 하는 공유 메모리 액세스 제어 장치."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "전자 기기에 있어서, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리;를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 수행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적어도 하나의 프로세서에 의해 수행되어, 상기 적어도 하나의 프로세서에 의해 제1항 내지 제12항 중 어느 한 항의 방법이 수행되도록 하는, 것을 특징으로 하는 전자 기기."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 기록 매체에 있어서, 상기 컴퓨터 명령은 상기 컴퓨터가 제1항 내지 제12항 중 어느 한 항의 방법을 수행하도록 하는, 것을 특징으로 하는 비일시적 컴퓨터 판독 가능 기록 매체."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서, 상기 컴퓨터 프로그램이 프로세서에 의해 수행될 때, 제1항 내지 제12항 중 어느 한 항의 방법을 구현하는, 것을 특징으로 하는 컴퓨터 프로그램."}
{"patent_id": "10-2022-0179074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "자율 주행 차량에 있어서, 제25항의 전자 기기를 포함하는,것을 특징으로 하는 자율 주행 차량."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 인공 지능"}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관련되고, 특히 무인 운전, 오퍼레이팅 시스템 기술에 관한 공유 메모리 액세 스 제어 방법, 장치, 전자 기기 및 자율 주행 차량을 제공한다. 당해 방법은 공유 메모리를 크리에이트하고 초기 화하는 단계 - 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데 이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계; 및 제1 프로세스를 통해 기록해야 할 데이터를 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장하고, 타겟 데이터 버퍼의 배치 정보를 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는 단계;를 포함한다. 당해 방법은 자기 적응 길이의 데이터 기록을 구현한다. 대 표 도 - 도1"}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2023-0004394 CPC특허분류 G06F 3/0632 (2013.01) G06F 3/064 (2013.01) G06F 3/0658 (2013.01) G06F 3/0683 (2013.01) G06F 2212/254 (2013.01) G06F 2212/7205 (2013.01) G06F 2212/7208 (2013.01)명 세 서 청구범위 청구항 1 공유 메모리 액세스 제어 방법에 있어서, 공유 메모리를 크리에이트하고 초기화하는 단계 - 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수 의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계; 및 상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저 장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는 단계;를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 2 제1항에 있어서, 공유 메모리를 크리에이트하고 초기화하는 단계는, 첫 번째 실행하는 프로세스를 통해 상기 공유 메모리를 크리에이트하는 단계; 상기 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하는 단계; 및 상기 첫 번째 실행하는 프로세스의 파라미터에 따라 상기 헤더 오브젝트에 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하 고, 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트하는 단계;를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 3 제2항에 있어서, 상기 제1 프로세스는 상기 첫 번째 실행하는 프로세스 이외의 기타 프로세스 또는 재작동하는 프로세스이고, 상 기 헤더 오브젝트에는 초기화 식별자 및 검증 파라미터가 더 포함되고; 상기 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계는, 상기 기타 프로세스를 통해 상기 초기화 식별자 및 상기 검증 파라미터를 검증하는 단계; 상기 초기화 식별자가 유효 상태이고, 상기 검증 파라미터와 상기 기타 프로세스의 검증값이 일치할 경우, 상기 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속 성 파라미터에 따라 상기 기타 프로세스의 배치 파라미터를 업데이트하는 단계; 및 상기 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 상기 적어도 하나의 타겟 블록을 결정하는 단계;를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 4 제3항에 있어서, 상기 헤더 오브젝트에 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복 수의 데이터 버퍼의 속성 파라미터를 각각 추가하기 전에, 상기 초기화 식별자를 무효 상태로 설치하고, 상기 검증 파라미터를 무효 데이터로 설치하는 단계를 더 포함하 고; 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트한 후에, 상기 헤더 오브젝트의 검증값을 결정하고, 상기 검증값을 상기 검증 파라미터에 기록하고, 상기 초기화 식별자 를 유효 상태로 업데이트하는 단계를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 5 제1항에 있어서, 상기 초기화 후의 공유 메모리에는 상태 오브젝트가 더 포함되고, 상기 상태 오브젝트에는 블록 인덱스가 포함 되고; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계는, 상기 기록해야 할 데이터의 데이터 양에 따라, 상기 타겟 블록의 제1 수를 결정하는 단계; 상기 상태 오브젝트로부터 상기 블록 인덱스를 획득하는 단계; 및 상기 블록 인덱스에서 시작하는 제1 수의 블록을 상기 적어도 하나의 타겟 블록으로 결정하는 단계;를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 6 제5항에 있어서, 상기 상태 오브젝트에는 영역 인덱스가 더 포함되고, 상기 영역 인덱스에 대응되는 영역은 상기 타겟 영역인, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 7 제6항에 있어서, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한 후에, 상기 블록 인덱스 및 상기 영역 인덱스를 업데이트하는 단계를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 8 제5항에 있어서, 상기 상태 오브젝트에는 메모리 업데이트 시간이 더 포함되고; 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한 후에, 상기 메모리 업데이트 시간을 현제 시간으로 수정하는 단계를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법.청구항 9 제8항에 있어서, 상기 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 상기 공유 메모리를 릴리스하는 단계 를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 10 제6항에 있어서, 제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 단계; 및 상기 공유 메모리에 판독할 데이터가 존재할 경우, 상기 판독할 데이터를 판독하는 단계;를 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 11 제10항에 있어서, 제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 단계는, 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치한지 여부를 판단하는 단계; 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치하지 않을 경우, 상기 기록 인덱스를 상기 영역 인 덱스로 업데이트하는 단계; 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하는 단계; 및 상기 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 상기 공유 메모리 에 상기 판독할 데이터가 존재하는 것을 결정하는 단계;를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 12 제11항에 있어서, 상기 판독할 데이터를 판독하는 단계는, 상기 제2 프로세스의 판독 인덱스에 따라, 상기 판독할 데이터를 판독하고, 판독이 완료된 후에, 상기 판독 인 덱스를 업데이트하는 단계를 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 방법. 청구항 13 공유 메모리 액세스 제어 장치에 있어서, 공유 메모리를 크리에이트하고 초기화하는 크리에이트 모듈 - 초기화 후의 공유 메모리는 복수의 영역 배치 오 브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 결정 모듈; 및 상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저 장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는 기록 모듈;을 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치.청구항 14 제13항에 있어서, 상기 크리에이트 모듈은, 첫 번째 실행하는 프로세스를 통해 상기 공유 메모리를 크리에이트하는 제1 크리에이트 유닛; 상기 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하기 위한 제2 크리에이트 유닛; 및 상기 첫 번째 실행하는 프로세스의 파라미터에 따라 상기 헤더 오브젝트에 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하 고, 상기 영역 배치 오브젝트, 상기 복수의 블록 배치 오브젝트 및 상기 복수의 데이터 버퍼를 크리에이트하는 제3 크리에이트 유닛;을 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 15 제14항에 있어서, 상기 제1 프로세스는 상기 첫 번째 실행하는 프로세스 이외의 기타 프로세스 또는 재작동하는 프로세스이고, 상 기 헤더 오브젝트에는 초기화 식별자 및 검증 파라미터가 더 포함되고; 상기 기록 모듈은, 상기 기타 프로세스를 통해 상기 초기화 식별자 및 상기 검증 파라미터를 검증하는 검증 유닛; 상기 초기화 식별자가 유효 상태이고, 상기 검증 파라미터와 상기 기타 프로세스의 검증값이 일치할 경우, 상기 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속 성 파라미터에 따라 상기 기타 프로세스의 배치 파라미터를 업데이트하는 제1 업데이트 유닛; 및 상기 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 상기 적어도 하나의 타겟 블록을 결정하는 제1 결정 유닛;을 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 16 제15항에 있어서, 상기 초기화 식별자를 무효 상태로 설치하고, 상기 검증 파라미터를 무효 데이터로 설치하는 제1 설치 유닛; 및 상기 헤더 오브젝트의 검증값을 결정하고, 상기 검증값을 상기 검증 파라미터에 기록하고, 상기 초기화 식별자 를 유효 상태로 업데이트하는 제2 설치 유닛;을 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 17 제13항 내지 제16항 중 어느 한 항에 있어서, 상기 초기화 후의 공유 메모리에는 상태 오브젝트가 더 포함되고, 상기 상태 오브젝트에는 블록 인덱스가 포함 되고; 상기 결정 모듈은, 상기 기록해야 할 데이터의 데이터 양에 따라, 상기 타겟 블록의 제1 수를 결정하는 제2 결정 유닛; 상기 상태 오브젝트로부터 상기 블록 인덱스를 획득하는 획득 유닛; 및 상기 블록 인덱스에서 시작하는 제1 수의 블록을 상기 적어도 하나의 타겟 블록으로 결정하는 제3 결정 유닛;을 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치.청구항 18 제17항에 있어서, 상기 상태 오브젝트에는 영역 인덱스가 더 포함되고, 상기 영역 인덱스에 대응되는 영역은 상기 타겟 영역인, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 19 제18항에 있어서, 상기 블록 인덱스 및 상기 영역 인덱스를 업데이트하는 제2 업데이트 유닛을 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 20 제17항 내지 제19항 중 어느 한 항에 있어서, 상기 상태 오브젝트에는 메모리 업데이트 시간이 더 포함되고; 상기 장치는, 상기 메모리 업데이트 시간을 현제 시간으로 수정하는 제3 업데이트 유닛을 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 21 제20항에 있어서, 상기 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 상기 공유 메모리를 릴리스하는 릴리 스 모듈을 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 22 제18항에 있어서, 제2 프로세스를 통해 상기 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 제4 결정 유닛; 및 상기 공유 메모리에 판독할 데이터가 존재할 경우, 상기 판독할 데이터를 판독하는 판독 유닛;을 더 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 23 제22항에 있어서, 상기 제4 결정 유닛은, 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치한지 여부를 판단하는 제1 판단 유닛; 상기 제2 프로세스의 기록 인덱스와 상기 영역 인덱스가 일치하지 않을 경우, 상기 기록 인덱스를 상기 영역 인 덱스로 업데이트하는 제4 업데이트 유닛; 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하는 제2 판단 유닛; 및 상기 업데이트 후의 기록 인덱스와 상기 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 상기 공유 메모리 에 상기 판독할 데이터가 존재하는 것을 결정하는 제5 결정 유닛;을 포함하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 24 제23항에 있어서, 상기 판독 유닛은, 상기 제2 프로세스의 판독 인덱스에 따라, 상기 판독할 데이터를 판독하고, 판독이 완료된 후에, 상기 판독 인 덱스를 업데이트하는, 것을 특징으로 하는 공유 메모리 액세스 제어 장치. 청구항 25 전자 기기에 있어서, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리;를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 수행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적 어도 하나의 프로세서에 의해 수행되어, 상기 적어도 하나의 프로세서에 의해 제1항 내지 제12항 중 어느 한 항 의 방법이 수행되도록 하는, 것을 특징으로 하는 전자 기기. 청구항 26 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 기록 매체에 있어서, 상기 컴퓨터 명령은 상기 컴퓨터가 제1항 내지 제12항 중 어느 한 항의 방법을 수행하도록 하는, 것을 특징으로 하는 비일시적 컴퓨터 판독 가능 기록 매체. 청구항 27 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서, 상기 컴퓨터 프로그램이 프로세서에 의해 수행될 때, 제1항 내지 제12항 중 어느 한 항의 방법을 구현하는, 것을 특징으로 하는 컴퓨터 프로그램. 청구항 28 자율 주행 차량에 있어서, 제25항의 전자 기기를 포함하는, 것을 특징으로 하는 자율 주행 차량. 발명의 설명 기 술 분 야 본 발명은 인공 지능 기술 분야의 무인 운전, 오퍼레이팅 시스템 기술에 관한 것으로, 특히 공유 메모리 액세스 제어 방법, 장치, 전자 기기 및 자율 주행 차량에 관한 것이다."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "동일한 호스트에서 서로 다른 모듈이 서로 다른 프로세스 공간에 있을 수 있으며, 프로그램 실행 효율을 높이고 시스템 성능을 향상시키기 위해, 동일한 호스트의 다중 프로세스의 통신은 공유 메모리를 선택하여 구현한다. 공유 메모리를 통해 통신해야 하는 여러 프로세스가 있을 경우, 일반적으로 프로세스 중 하나가 지정된 크기의 공유 메모리를 먼저 작동하여 크리에이트하고, 메모리 초기화가 완료된 후, 다른 프로세스를 작동하며, 다른 프 로세스가 공유 메모리를 자신의 프로세스 공간에 매핑하도록 미리 약속한다. 그 다음, 당해 여러 프로세스가 공 유 메모리를 통해 통신할 수 있으며, 일반적으로 하나의 프로세스가 공유 메모리에 데이터를 기록하고, 다른 프 로세스가 데이터를 조회하거나 판독한다. 현재 방안에 존재하는 문제점은 공유 메모리의 배치가 고정되어, 자기적응 길이의 데이터 기록을 지원하지 않는 것이다."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 자기 적응 길이의 데이터 기록을 구현하는 공유 메모리 액세스 제어 방법, 장치, 전자 기기 및 자율 주행 차량을 제공한다."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 제1 측면에 따르면, 공유 메모리 액세스 제어 방법을 제공하고, 공유 메모리를 크리에이트하고 초기화하는 단계 - 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수 의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 단계; 및 상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저 장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는 단계;를 포함한다. 본 발명의 제2 측면에 따르면, 공유 메모리 액세스 제어 장치를 제공하고, 공유 메모리를 크리에이트하고 초기화하는 크리에이트 모듈 - 초기화 후의 공유 메모리는 복수의 영역 배치 오 브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함함 -; 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정하는 결정 모듈; 및 상기 제1 프로세스를 통해 상기 기록해야 할 데이터를 상기 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 상기 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저 장하고, 상기 타겟 데이터 버퍼의 배치 정보를 상기 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는 기록 모듈;을 포함한다. 본 발명의 제3 측면에 따르면, 전자 기기를 제공하고, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서에 통신 가능하게 연결되는 메모리;를 포함하고, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 수행 가능한 명령이 저장되어 있고, 상기 명령이 상기 적어도 하나의 프로세서에 의해 수행되어, 상기 상기 적어도 하나의 프로세서에 의해 상술한 제1 측면에 기재된 방법이 수행되도록 한다. 본 발명의 제4 측면에 따르면, 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 기록 매체를 제공하고, 상기 컴퓨터 명령은 상기 컴퓨터가 상술한 제1 측면에 기재된 방법을 수행하도록 한다. 본 발명의 제5 측면에 따르면, 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 제공하고, 전자 기기의 적어도 하나의 프로세서는 상기 판독 가능 저장 매체로부터 상기 컴퓨터 프로그램을 판독하고, 상기 적어도 하 나의 프로세서는 상기 컴퓨터 프로그램을 수행하여 전자 기기가 제1 측면에 기재된 방법을 수행하도록 한다. 본 발명의 제6 측면에 따르면, 자율 주행 차량을 제공하고, 제3 측면에 기재된 전자 기기를 포함한다. 본 발명의 기술 방안에 따르면, 공유 메모리에 자기 적응 길이의 데이터를 기록하는 것을 구현한다. 본 명세서에서 설명된 내용은 본 발명의 실시예의 키 또는 중요한 특징을 식별하려는 것이 아니고, 또한 본 발 명의 범위를 제한하려는 것도 아닌 것을 이해하여야 한다. 본 발명의 다른 특징은 하기의 명세서를 통해 용이하 게 이해할 수 있다."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "하기는 첨부된 도면을 결부하여 본 발명의 예시적 실시예를 설명하되, 여기에는 이해를 돕기 위한 본 발명의 실"}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "시예의 다양한 세부 사항이 포함되며, 이는 단지 예시적인 것으로 간주되어야 한다. 따라서, 본 기술분야의 통 에서의 기술자는 본 발명의 범위와 사상을 벗어나지 않으면서, 여기서 설명되는 실시예에 대한 다양한 변경과 수정이 이루어질 수 있음을 이해해야 한다. 마찬가지로, 명확성 및 간결성을 위해, 아래의 설명에서 공지된 기 능과 구조에 대한 설명을 생략한다. 본 발명의 실시예의 방안에서, 공유 메모리의 구조를 최적화하고, 공유 메모리는 논리적으로 영역(Region), 블 록(Block) 및 데이터 버퍼(Buffer)로 분할하고, 여기서, 영역은 하나 또는 복수의 블록을 포함할 수 있고, 각 블록은 하나의 데이터 버퍼에 대응되고, 영역 배치 오브젝트를 통해 영역에 포함되는 블록의 배치 정보를 저장 하고, 블록 배치 오브젝트를 통해 블록에 대응되는 데이터 버퍼의 배치 정보를 저장한다. 데이터를 기록할 경우, 기록해야 할 데이터의 길이에 따라 하나 또는 복수의 블록을 결정하고, 기록해야 할 데이터를 당해 하나 또는 복수의 블록에 대응되는 하나 또는 복수의 데이터 버퍼에 기록하고, 동시에, 당해 하나 또는 복수의 데이 터 버퍼의 배치 정보를 당해 하나 또는 복수의 블록에 대응되는 블록 배치 오브젝트에 기록하고, 당해 하나 또 는 복수의 블록의 배치 정보를 대응되는 영역의 영역 배치 오브젝트에 기록한다. 이러면, 영역에 포함되는 블록 의 수는 기록해야 할 데이터의 길이에 의해 결정되어, 자기 적응 길이의 데이터 기록을 구현한다. 본 발명은 공유 메모리 액세스 제어 방법, 장치, 전자 기기, 저장 매체, 프로그램 및 자율 주행 차량을 제공하 고, 인공 지능 기술 분야의 무인 운전, 오퍼레이팅 시스템 분야에 응용되고, 구체적으로 차량탑재 시스템의 오 퍼레이팅 시스템에 응용되어, 공유 메모리에 자기 적응 길이의 데이터를 기록하는 것을 구현할 수 있다. 아래에는 구체적인 실시예를 통해 본 개시에서 제공하는 공유 메모리 액세스 제어 방법에 대해 상세히 설명한다. 이해할 수 있는 것은 아래의 몇 가지 구체적인 실시예가 서로 결합될 수 있으며, 같거나 비슷한 개념 이나 과정이 일부 실시례에서 더는 설명하지 않을 수도 있다. 도 1은 본 발명의 실시예에서 제공되는 공유 메모리 액세스 제어 방법의 흐름도이다. 당해 방법의 수행 주체는 공유 메모리 액세스 제어 장치이고, 당해 장치는 소프트웨어 및/또는 하드웨어의 방식을 통해 구현할 수 있다. 도 1에 도시된 바와 같이, 당해 방법은 하기의 단계를 포함한다. S101, 공유 메모리를 크리에이트하고 초기화하고, 초기화 후의 공유 메모리는 복수의 영역 배치 오브젝트, 복수 의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함한다. 본 단계에서, 공유 메모리를 크리에이트하고 초기화하는 프로세스는 공유 메모리를 통해 통신해야 하는 복수의 프로세스 중의 임의의 프로세스일 수 있다. 예를 들어 복수의 프로세스에서 첫 번째로 실행을 작동하는 프로세 스 공유 메모리를 크리에이트하고 초기화하며, 후에 실행을 작동하는 기타 프로세스는 초기화 후의 공유 메모리 의 배치 정보를 자체 프로세스에 업데이트할 수 있다. 첫 번째로 실행을 작동하는 프로세스는 어느 특정된 프로 세스에 한정되지 않는다. 공유 메모리는 논리적으로 영역, 블록 및 데이터 버퍼로 분할되고, 영역은 하나 또는 복수의 블록을 포함할 수 있고, 각 블록은 하나의 데이터 버퍼를 가리키고, 각 데이터 버퍼는 일단의 연속된 메모리를 가리키고, 블록은 공유 메모리를 할당하는 최소 단위이다. 영역, 블록 및 데이터 버퍼에 대한 관리를 구현하기 위해, 공유 메모리 의 구조는 복수의 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함한다. 여기서, 각 영역 배치 오브젝트는 당해 영역에 포함되는 블록의 배치 정보를 저장하는데 사용되고, 예를 들어 영역 배치오브젝트는 당해 영역에 대응되는 블록의 식별자 또는 인덱스, 데이터 길이 또는 판독 및 기록 상태 등을 포함 하고; 각 블록 배치 오브젝트는 당해 블록에 대응되는 데이터 버퍼의 배치 정보를 저장하는데 사용되고, 예를 들어 블록 배치 오브젝트는 당해 블록에 대응되는 데이터 버퍼의 주소, 데이터 길이 또는 판독 및 기록 상태 등 을 포함한다. S102, 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록을 결정한다. 제1 프로세스는 복수의 프로세스 중의 임의의 프로세스일 수 있고, 제1 프로세스가 공유 메모리에 데이터를 기 록해야 할 경우, 기록해야 할 데이터의 데이터 양, 즉 기록해야 할 데이터의 길이에 따라, 필요한 블록의 수, 즉 필요한 데이터 버퍼의 수를 결정할 수 있다. 예시적으로, 기록해야 할 데이터의 길이는 20이고, 각 블록이 가리키는 데이터 버퍼의 크기가 10일 경우, 필요 한 블록의 개수를 2로 결정할 수 있고, 즉 2개의 타겟 블록을 결정한다. 예시적으로, 기록해야 할 데이터의 길 이가 25이고, 각 블록이 가리키는 데이터 버퍼의 크기가 10일 경우, 필요한 블록의 개수를 3으로 결정할 수 있 고, 즉 3개의 타겟 블록을 결정한다. S103, 제1 프로세스를 통해 기록해야 할 데이터를 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기 록하고, 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장하고, 타겟 데이터 버퍼의 배치 정보를 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한다. 제1 프로세스는 기록해야 할 데이터를 적어도 하나의 타겟 블록이 가리키는 적어도 하나의 타겟 데이터 버퍼에 기록하여, 데이터의 기록을 구현하고, 동시에, 각 타겟 데이터 버퍼의 배치 정보를 대응되는 타겟 블록의 블록 배치 오브젝트에 저장하고, 예를 들어 각 타겟 블록에 대응되는 블록 배치 오브젝트에 당해 타겟 블록이 가리키 는 타겟 데이터 버퍼의 유효 데이터 길이를 기록한다. 또한, 타겟 블록의 배치 정보를 대응되는 타겟 영역의 영 역 배치 오브젝트에 저장하고, 예를 들어, 영역 배치 오브젝트에 당해 영역에 포함되는 적어도 하나의 타겟 블 록의 식별자 또는 인덱스 번호, 및 유효 데이터 길이 등을 기록한다. 이러면, 하나의 영역에 포함되는 블록의 수는 기록해야 할 데이터에 의해 결정되고, 즉 영역에 대응되는 사용 가능한 메모리 길이는 변화할 수 있고, 프 로세스는 고정된 길이에 따라 데이터를 기록할 필요가 없으므로, 자기 적응 길이의 데이터 기록을 구현한다. 본 발명의 실시예의 방법에서, 공유 메모리 중의 각 영역은 하나 또는 복수의 블록을 포함할 수 있고, 각 블록 은 하나의 데이터 버퍼에 대응되고, 기록해야 할 데이터의 길이에 따라 하나 또는 복수의 타겟 블록을 결정하고, 기록해야 할 데이터를 당해 하나 또는 복수의 타겟 블록에 대응되는 데이터 버퍼에 기록하고, 이러면, 하나의 영역에 대응되는 사용 가능한 메모리 길이는 기록해야 할 데이터에 따라 변화되어, 자기 적응 길이의 데이터 기록을 구현한다. 상술한 실시예에 기반하여, 먼저 공유 메모리의 구조 및 어떻게 공유 메모리를 크리에이트하고 초기화하는데 대 해 설명한다. 선택적으로, 공유 메모리의 구조는 도 2를 참조한 바와 같이, 공유 메모리는 헤더(Header) 오브젝트, 상태 (State) 오브젝트, 영역 배치 오브젝트, 블록 배치 오브젝트 및 데이터 버퍼를 포함하고, 예시적으로, 영역 배 치 오브젝트의 수는 M이고, 블록 배치 오브젝트 및 데이터 버퍼의 수는 모두 N이다. 선택적으로, 헤더 오브젝트의 구조는 도 3을 참조한 바와 같이, 헤더 오브젝트는 초기화 식별자(Flag), 버전 (Version), 검증 파라미터(Check Sum), 상태 오브젝트의 크기(State Size), 영역 배치 오브젝트의 크기(Region Size), 영역 배치 오브젝트의 수(Region Num), 블록 배치 오브젝트의 크기(Block Size), 블록 배치 오브젝트의 수(Block Num), 데이터 버퍼 길이(Buffer Len), 보류 필드(Reserve)를 포함한다. 선택적으로, 초기화 식별자는 공유 메모리 초기화의 완료 여부, 즉 공유 메모리의 유효성 식별자를 표시하는데 사용되고; 버전은 공유 메모리의 배치 버전을 표시하여, 후속의 호환성 지원을 진행하도록 하고; 검증 파라미터 는 헤더 오브젝트 중의 일부 또는 전부 데이터의 검증값(예를 들어 검증 합)을 표시하고; 상태 오브젝트의 크기 는 상태 오브젝트가 차지하는 메모리 크기를 표시하고; 영역 배치 오브젝트의 크기는 각 영역 배치 오브젝트가 차지하는 메모리 크기를 표시하고; 영역 배치 오브젝트의 수는 즉 도 2에 도시된 바와 같은 연속 배치된 영역 배치 오브젝트의 수이고, 예를 들어 M이고; 블록 배치 오브젝트의 크기는 각 블록 배치 오브젝트가 차지하는 메 모리 크기를 표시하고; 블록 배치 오브젝트의 수는 즉 도 2에 도시된 바와 같은 연속 배치된 블록 배치 오브젝 트의 수이고, 예를 들어 N이며, 블록 배치 오브젝트의 수는 데이터 버퍼의 수와 일치하고; 데이터 버퍼 길이는 각 데이터 버퍼의 길이를 표시하고, 메모리에 할당되는 최소 길이 단위이고; 보류 필드는 확장 보류 필드이다. 선택적으로, 상태 오브젝트는 공유 메모리 현제 기록 보호 상태, 영역 인덱스, 블록 인덱스, 메모리 업데이트 시간 등을 저장하는데 사용된다. 여기서, 영역 인덱스는 다음 기록 인덱스, 즉 다음에 기록할 영역의 식별자이 고; 블록 인덱스는 다음 기록 인덱스, 즉 다음에 기록할 블록의 식별자이다. 공유 메모리에 새로운 데이터를 매 번 기록할 경우, 영역 인덱스 및 블록 인덱스는 모두 업데이트된다. 메모리 업데이트 시간은 공유 메모리에서 판독 또는 기록될 때에 업데이트된다. 선택적으로, 영역 배치 오브젝트는 예를 들어 당해 영역에 대응되는 적어도 하나의 블록의 시작 인덱스, 유효 데이터 길이, 판독 및 기록 상태 등과 같은 당해 영역에 포함되는 블록의 배치 정보를 저장하는데 사용된다. 선택적으로, 블록 배치 오브젝트는 예를 들어 당해 블록에 대응되는 데이터 버퍼의 오프셋 주소, 유효 데이터 길이, 판독 및 기록 상태 등 당해 블록에 대응되는 데이터 버퍼의 배치 정보를 저장하는데 사용된다. 상술한 예의 공유 메모리의 구조를 참조하여, 공유 메모리를 크리에이트하고 초기화하는데 대해 하기와 같이 설 명한다. 첫 번째 실행하는 프로세스를 통해 공유 메모리를 크리에이트하고; 공유 메모리의 첫 번째 주소에 기반 하여 헤더 오브젝트를 크리에이트하고; 첫 번째 실행하는 프로세스의 파라미터에 따라 헤더 오브젝트에 영역 배 치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라 미터를 각각 추가하고, 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 크리에이트한 다. 첫 번째 실행하는 프로세스는 표준 시스템 호출 인터페이스(예를 들어 shm_open)를 통해 공유 메모리를 크리에 이트하고, 당해 인터페이스는 프로세스 안전 속성을 구비하고, 동일한 메모리 이름(신분 식별자)으로 전해지는 복수의 프로세스에 대해, 하나의 프로세스만 공유 메모리를 크리에이트할 수 있으므로, 첫 번째 실행하는 프로 세스는 공유 메모리를 크리에이트한 후, 실행을 작동하는 기타 프로세스는 공유 메모리를 다시 크리에이트하면, 크리에이트가 실패되고, 이러면 공유 메모리를 여러개 크리에이트하는 것을 피할 수 있다. 첫 번째 실행하는 프로세스는 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하고, 헤더 오브젝트 중의 초기화 식별자를 무효 상태로 설치하고, 검증 파라미터를 무효 데이터로 설치하여, 초기화가 완 료되지 않음을 표시하고; 그 다음, 첫 번째 실행하는 프로세스는 자체의 파라미터에 따라 헤더 오브젝트에서의 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속 성 파라미터를 설치하고, 설치 버전, 상태 오브젝트의 크기, 영역 배치 오브젝트의 크기, 영역 배치 오브젝트의 수, 블록 배치 오브젝트의 크기, 블록 배치 오브젝트의 수 및 데이터 버퍼 길이를 포함한다. 이후, 첫 번째 실행하는 프로세스는 헤더 오브젝트에 바로 인접하여 상태 오브젝트를 크리에이트하고, 상태 오 브젝트를 초기화하고, 다음에, 영역 배치 오브젝트의 수에 따라, 상태 오브젝트에 바로 인접하여 대응하는 수의 영역 배치 오브젝트를 연속 크리에이트하고, 영역 배치 오브젝트를 초기화하며, 다음에 블록 배치 오브젝트의 수에 따라, 마지막 영역 배치 오브젝트에 바로 인접하여 대응하는 수의 블록 배치 오브젝트를 연속 크리에이트 하고, 블록 배치 오브젝트를 초기화하며, 각 블록은 하나의 데이터 버퍼를 가리키고, 각 데이터 버퍼는 일단의 연속된 메모리를 가리킨다. 이러한 설치를 통해, 공유 메모리는 길이가 변하는 데이터 판독을 지원한다. 최후, 첫 번째 실행하는 프로세스는 헤더 오브젝트의 검증값을 결정하고, 검증값을 검증 파라미터에 기록하고, 초기화 식별자를 유효 상태로 업데이트한다. 예를 들어 첫 번째 실행하는 프로세스는 헤더 오브젝트 중의 일부 데이터의 검증 합을 계산하고, 검증 합을 검증 파라미터에 기록한다. 따라서, 공유 메모리의 초기화가 완료된다. 첫 번째 실행하는 프로세스 이외의 기타 프로세스, 즉 첫 번째 실행하는 프로세스 이후에 실행을 작동하는 기타 프로세스에 대해, 첫 번째 실행하는 프로세스에서 공유 메모리를 크리에이트하고 초기화한 이후, 공유 메모리의 판독 및 기록을 구현하기 위해, 초기화 후의 공유 메모리에 따라 자체의 파라미터를 업데이트할 필요가 있다. 선택적으로, 기타 프로세스를 통해 초기화 식별자 및 검증 파라미터를 검증하고; 초기화 식별자가 유효 상태이 고, 검증 파라미터 및 기타 프로세스의 검증값이 일치할 경우, 영역 배치 오브젝트의 속성 파라미터, 복수의 블 록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터에 따라 기타 프로세스의 배치 파라 미터를 업데이트하고; 이후, 기타 프로세스에서 공유 메모리에 데이터를 기록할 경우, 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 적어도 하나의 타겟 블록을 결정한다. 기타 프로세스가 실행된 후, 공유 메모리를 시도하여 크리에이트하고, 첫 번째 실행하는 프로세스가 이미 공유 메모리를 크리에이트하였으므로, 기타 프로세스가 공유 메모리를 크리에이트하는데 실패하며, 기타 프로세스는지연 대기로 들어가고, 또한 첫 번째 실행하는 프로세스에 의해 크리에이트되는 공유 메모리 중의 초기화 식별 자 및 검증 파라미터에 따라 공유 메모리 초기화의 완료 여부를 판단하고, 여기서, 검증 파라미터에 대해, 기타 프로세스는 헤더 오브젝트의 검증값을 계산하고, 계산된 검증값과 공유 메모리 중의 검증 파라미터를 비교하며, 일치할 경우, 검증에 성공한다. 공유 메모리 초기화가 완료됨을 결정한 후, 기타 프로세스는 헤더 오브젝트 중 의 상태 오브젝트의 크기를 판독하고, 당해 기타 프로세스 자체의 파라미터 중의 상태 오브젝트의 크기와 일치 하지 않을 경우, 오류 보고를 진행하고 종료되며, 일치할 경우, 헤더 오브젝트 중의 영역 배치 오브젝트의 크기 를 계속 판독하며, 당해 기타 프로세스 자체의 파라미터 중의 영역 배치 오브젝트의 크기와 일치하지 않을 경우, 오류 보고를 진행하고 종료되며, 일치할 경우, 헤더 오브젝트 중의 블록 배치 오브젝트의 크기를 계속 판 독하고, 당해 기타 프로세스의 블록 배치 오브젝트의 크기와 일치하지 않을 경우, 오류 보고를 진행하고 종료되 며, 일치할 경우, 헤더 오브젝트 중의 영역 배치 오브젝트의 수, 블록 배치 오브젝트의 수 및 데이터 버퍼 길이 를 판독하고, 이를 당해 기타 프로세스의 배치 파라미터로 업데이트하므로, 파라미터 자기 적응 배치를 구현한 다. 공유 메모리에 대한 검증 및 오류 보고 종료를 통해, 공유 메모리 배치의 비정상을 피한다. 상술한 절차를 통해, 첫 번째 실행하는 프로세스가 공유 메모리의 크리에이트 및 초기화를 완료하고, 기타 프로 세스가 초기화의 완료를 대기한 후, 공유 메모리의 배치 정보를 자체 프로세스에 업데이트하여 자기 적응 배치 파라미터를 지원하며, 당해 과정은 복수의 프로세스 사이의 작동 순서에 대해 강제적인 요구가 없다. 이 외에, 복수의 프로세스가 정상적으로 작동하여 상술한 과정이 완료된 후, 임의의 프로세스가 재작동할 경우, 당해 재작동하는 프로세스에 의해 수행되는 과정은 전술한 기타 프로세스와 유사하고, 즉 프로세스가 재작동된 후, 공유 메모리를 시도하여 크리에이트한다. 공유 메모리가 이미 크리에이트되었으므로, 재작동하는 프로세스 는 공유 메모리를 크리에이트하는데 실패하며, 재작동하는 프로세스는 이미 크리에이트된 공유 메모리의 초기화 식별자 및 검증 파라미터를 검증하고; 검증이 성공된 후, 재작동하는 프로세스의 배치 파라미터를 업데이트하고, 이후, 당해 재작동하는 프로세스가 공유 메모리에 데이터를 기록할 경우, 배치 파라미터 및 당해 재작동하는 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 적어도 하나의 타겟 블록을 결정한다. 이를 통해 알 수 있듯이, 본 발명의 실시예의 방법을 통해, 하나의 프로세스가 비정상적으로 재작동 한 후, 기타 프로세스는 재작동할 필요가 없으며, 당해 재작동하는 프로세스는 기타 프로세스와의 통신 관계를 자동적으로 회복할 수 있다. 하기는 공유 메모리의 기록 과정을 설명한다. 제1 프로세스는 기록해야 할 데이터의 데이터 양에 따라, 타겟 블록의 제1 수를 결정하고; 상태 오브젝트로부터 블록 인덱스를 획득하고; 블록 인덱스에서 시작하는 제1 수의 블록을 적어도 하나의 타겟 블록으로 결정한다. 제1 프로세스는 기록해야 할 데이터를 적어도 하나의 타겟 블록에 대응되는 타겟 데이터 버퍼에 기록하고, 적어 도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장하고, 타겟 데이터 버퍼의 배치 정보를 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장한다. 예시적으로, 기록해야 할 데이터의 길이가 25이고, 각 블록이 가리키는 데이터 버퍼의 크기가 10일 경우, 타겟 블록의 제1 수를 3으로 결정한다. 이후, 제1 프로세스는 공유 메모리의 상태 오브젝트 중의 기록 보호 상태를 유효(한 번에 하나의 프로세스만 데이터를 기록하도록 허용한다)로 설치하여, 기록 보호를 획득하고, 상태 오브 젝트로부터 영역 인덱스를 다시 판독하고, 당해 영역 인덱스에 대응되는 영역은 타겟 영역, 즉 기록해야 할 영 역이며, 이해 가능한 바로는, 영역 인덱스에 대응되는 영역이 판독되고 있을 경우, 기록 가능한 영역이 있을 때 까지, 영역 인덱스를 아래로 이동하고, 타겟 영역의 영역 배치 오브젝트 중의 기록 보호 상태를 유효(즉 판독을 허용하지 않음)로 설치하고, 그 다음 상태 오브젝트로부터 블록 인덱스를 판독하고, 당해 블록 인덱스로부터 시 작하여 3개의 블록(마지막 블록 인덱스까지 할당하기에 충분하지 않을 경우, 순환하여 시작 블록 인덱스로 돌아 간다)을 연속 할당하고, 즉 3개의 타겟 블록을 결정하며, 타겟 블록의 블록 배치 오브젝트 중의 기록 보호 상태 를 유효(즉 판독을 허용하지 않음)로 설치하고, 타겟 블록의 시작 및 종료 인덱스를 타겟 영역의 영역 배치 오 브젝트에 저장하고, 기록해야 할 데이터를 타겟 블록에 대응되는 데이터 버퍼에 기록한다. 이후, 블록 인덱스 및 영역 인덱스를 업데이트하고, 즉 블록 인덱스를 마지막 타겟 블록 이후의 하나의 블록의 인덱스로 업데이트 하고, 영역 인덱스를 타겟 영역 이후의 하나의 영역의 인덱스로 업데이트하며, 전술한 기록 보호 상태를 회복하 여, 데이터의 기록을 완료시킨다. 하나의 영역은 하나 또는 복수의 블록으로 구성될 수 있기 때문에, 영역에 대 응되는 사용 가능한 메모리 길이는 변경 가능하고, 기록해야 할 데이터의 길이에 따라 결정할 수 있으므로, 길 이가 변하는 데이터 판독 및 기록을 지원할 수 있다. 선택적으로, 공유 메모리를 판독 및 기록한 후, 또한 상태 오브젝트 중의 메모리 업데이트 시간을 현제 시간으 로 수정하여, 공유 메모리가 가장 최근에 사용된 시간을 표시하도록 한다. 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 공유 메모리를 릴리스한다. 따라서 사용되지 않는 공유 메모리가 즉시 제거되어, 당해 일부분 공유 메모리가 다시 할당될 수 있도록 하며, 공유 메모리의 자동적인 제거를 구현한다. 하기는 공유 메모리의 판독 과정을 설명한다. 제2 프로세스를 통해 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하고; 존재할 경우, 판독할 데이터 를 판독한다. 도 4를 참조하면, 각 프로세스 자체의 파라미터는 하나의 판독 인덱스 및 하나의 기록 인덱스를 포함하고, 여기 서, 기록 인덱스는 공유 메모리의 상태 오브젝트로부터 복사되는 영역 인덱스이고, 공유 메모리 중의 다음에 기 록해야 할 영역을 표시하고, 판독 인덱스 및 기록 인덱스는 일치하고, 판독할 영역을 표시한다. 제2 프로세스의 기록 인덱스와 공유 메모리의 상태 오브젝트 중의 영역 인덱스가 일치한지 여부를 판단하고; 제 2 프로세스의 기록 인덱스와 영역 인덱스가 일치하지 않을 경우, 공유 메모리에 새로운 데이터 기록이 있음을 표시하고, 영역 인덱스에 변화가 발생되므로, 제2 프로세스의 기록 인덱스를 영역 인덱스로 업데이트할 필요가 있고; 다시 업데이트 후의 기록 인덱스와 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하고; 업데이트 후의 기록 인덱스와 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 공유 메모리에 판독할 데이터가 존재한 다고 결정하고; 제2 프로세스의 판독 인덱스에 따라, 판독할 데이터를 판독하고, 판독이 완료된 후에, 판독 인 덱스를 업데이트한다. 예시적으로, 제2 프로세스의 판독 인덱스 및 기록 인덱스가 모두 2이고, 공유 메모리의 영역 인덱스가 데이터를 기록한 후, 2에서 3으로 변화된다고 가정하면, 이때, 제2 프로세스의 기록 인덱스와 영역 인덱스는 일치하지 않 으며, 제2 프로세스의 기록 인덱스를 3으로 업데이트하여, 공유 메모리에 다음에 기록해야 할 영역이 3인 것을 표시하며, 이때, 제2 프로세스의 업데이트 후의 기록 인덱스 3과 이의 판독 인덱스 2는 일치하지 않으며, 공유 메모리 중의 영역 2에 판독할 데이터가 존재한다고 결정하고, 영역 2의 판독 보호 상태를 유효로 설치하여, 영 역 2가 판독되고 있음을 표시함으로써, 기록하는 것을 방지하며, 영역 2의 영역 배치 오브젝트 중의 블록의 시 작, 종료 인덱스 및 유효 데이터 길이를 획득하고, 블록에 대응되는 데이터 버퍼의 데이터를 제2 프로세스에 복 사하고, 최후에 판독 보호 상태를 회복하며, 제2 프로세스의 판독 인덱스를 아래로 이동하고, 이를 3으로 업데 이트하여, 데이터 판독을 완료시킨다. 당해 방법은 복수의 프로세스가 동시에 공유 메모리로부터 데이터를 판독 하는 것을 지원할 수 있고, 데이터 판독 효율을 향상시킬 수 있다. 도 5는 본 발명의 실시예에서 제공되는 공유 메모리 액세스 제어 장치의 구조 개략도이다. 도 5에 도시된 바와 같이, 공유 메모리 액세스 제어 장치는 크리에이트 모듈, 결정 모듈 및 기록 모듈을 포함 한다. 크리에이트 모듈은, 공유 메모리를 크리에이트하고 초기화하는데 사용되고, 초기화 후의 공유 메모리는 복 수의 영역 배치 오브젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 포함한다. 결정 모듈은, 제1 프로세스에 대응되는 기록해야 할 데이터의 데이터 양을 통해, 적어도 하나의 타겟 블록 을 결정하는데 사용된다. 기록 모듈은, 제1 프로세스를 통해 기록해야 할 데이터를 적어도 하나의 타겟 블록에 대응되는 타겟 데이 터 버퍼에 기록하고, 적어도 하나의 타겟 블록의 배치 정보를 타겟 영역에 대응되는 영역 배치 오브젝트에 저장 하고, 타겟 데이터 버퍼의 배치 정보를 적어도 하나의 타겟 블록에 대응되는 블록 배치 오브젝트에 저장하는데 사용된다. 실시 방식에서, 크리에이트 모듈은, 첫 번째 실행하는 프로세스를 통해 공유 메모리를 크리에이트하는 제1 크리에이트 유닛; 공유 메모리의 첫 번째 주소에 기반하여 헤더 오브젝트를 크리에이트하는 제2 크리에이트 유닛; 및 첫 번째 실행하는 프로세스의 파라미터에 따라 헤더 오브젝트에 영역 배치 오브젝트의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터를 각각 추가하고, 영역 배치 오브 젝트, 복수의 블록 배치 오브젝트 및 복수의 데이터 버퍼를 크리에이트하는 제3 크리에이트 유닛;을 포함한다. 실시 방식에서, 제1 프로세스는 첫 번째 실행하는 프로세스 이외의 기타 프로세스 또는 재작동하는 프로세스이 고, 헤더 오브젝트에는 초기화 식별자 및 검증 파라미터가 더 포함된다. 기록 모듈은, 기타 프로세스를 통해 초기화 식별자 및 검증 파라미터를 검증하는 검증 유닛; 초기화 식별자가 유효 상태이고, 검증 파라미터와 기타 프로세스의 검증값이 일치할 경우, 영역 배치 오브젝트 의 속성 파라미터, 복수의 블록 배치 오브젝트의 속성 파라미터 및 복수의 데이터 버퍼의 속성 파라미터에 따라 기타 프로세스의 배치 파라미터를 업데이트하는 제1 업데이트 유닛; 및 배치 파라미터 및 기타 프로세스에 대응되는 기록해야 할 데이터의 데이터 양에 따라, 적어도 하나의 타겟 블록 을 결정하는 제1 결정 유닛;을 포함한다. 실시 방식에서, 공유 메모리 액세스 제어 장치는, 초기화 식별자를 무효 상태로 설치하고, 검증 파라미터를 무효 데이터로 설치하는 제1 설치 유닛; 및 헤더 오브젝트의 검증값을 결정하고, 검증값을 검증 파라미터에 기록하고, 초기화 식별자를 유효 상태로 업데이 트하는 제2 설치 유닛;을 더 포함한다. 실시 방식에서, 초기화 후의 공유 메모리에는 상태 오브젝트가 더 포함되고, 상태 오브젝트에는 블록 인덱스가 포함되고; 결정 모듈은, 기록해야 할 데이터의 데이터 양에 따라, 타겟 블록의 제1 수를 결정하는 제2 결정 유닛; 상태 오브젝트로부터 블록 인덱스를 획득하는 획득 유닛; 및 블록 인덱스에서 시작하는 제1 수의 블록을 적어도 하나의 타겟 블록으로 결정하는 제3 결정 유닛;을 포함한다. 실시 방식에서, 상태 오브젝트에는 영역 인덱스가 더 포함되고, 영역 인덱스에 대응되는 영역은 타겟 영역이다. 실시 방식에서, 공유 메모리 액세스 제어 장치는 제2 업데이트 유닛을 더 포함한다. 제2 업데이트 유닛은, 블록 인덱스 및 영역 인덱스를 업데이트한다. 실시 방식에서, 상태 오브젝트에는 메모리 업데이트 시간이 더 포함된다. 공유 메모리 액세스 제어 장치는 제3 업데이트 유닛을 더 포함한다. 제3 업데이트 유닛은, 메모리 업데이트 시간을 현제 시간으로 수정한다. 실시 방식에서, 공유 메모리 액세스 제어 장치는 릴리스 모듈을 더 포함한다. 릴리스 모듈은, 메모리 업데이트 시간이 미리 설정된 기간 내에 변화되지 않을 경우, 공유 메모리를 릴리스한다. 실시 방식에서, 공유 메모리 액세스 제어 장치는, 제2 프로세스를 통해 공유 메모리에 판독할 데이터가 존재하는지 여부를 결정하는 제4 결정 유닛; 및 공유 메모리에 판독할 데이터가 존재할 경우, 판독할 데이터를 판독하는 판독 유닛;을 더 포함한다. 실시 방식에서, 제4 결정 유닛은, 제2 프로세스의 기록 인덱스와 영역 인덱스가 일치한지 여부를 판단하는 제1 판단 유닛; 제2 프로세스의 기록 인덱스와 영역 인덱스가 일치하지 않을 경우, 기록 인덱스를 영역 인덱스로 업데이트하는 제4 업데이트 유닛; 업데이트 후의 기록 인덱스와 제2 프로세스의 판독 인덱스가 일치한지 여부를 판단하는 제2 판단 유닛; 및 업데이트 후의 기록 인덱스와 제2 프로세스의 판독 인덱스가 일치하지 않을 경우, 공유 메모리에 판독할 데이터 가 존재하는 것을 결정하는 제5 결정 유닛;을 포함한다. 실시 방식에서, 판독 유닛은, 제2 프로세스의 판독 인덱스에 따라, 판독할 데이터를 판독하고, 판독이 완료된 후에, 판독 인덱스를 업데이트 한다. 본 발명의 실시예의 장치는 상술한 방법 실시예중의 공유 메모리 액세스 제어 방법을 수행하며, 구현 원리 및 기술 효과는 유사하고, 여기서 더 이상 설명하지 않는다. 본 발명의 실시예에 따르면, 본 발명은 또한 전자 기기 및 컴퓨터 명령이 저장되어 있는 비일시적 컴퓨터 판독 가능 저장 매체를 제공한다. 본 발명의 실시예에 따르면, 본 발명은 또한 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 제공하고, 전자 기기의 적어도 하나의 프로세서가 판독 가능 저장 매체로부터 컴퓨터 프로그램을 판독할 수 있 고, 적어도 하나의 프로세서가 컴퓨터 프로그램을 수행하여, 전자 기기가 상술한 임의의 실시예에서 제공하는 방안을 수행한다. 도 6에 도시된 바와 같이, 본 발명의 실시예에 따른 공유 메모리 액세스 제어 방법의 전자 기기의 개략적인 블 록도이다. 전자 기기는 랩톱 컴퓨터, 데스크톱 컴퓨터, 운영 플랫폼, 개인 디지털 비서, 서버, 블레이드 서버, 대형 컴퓨터, 및 다른 적합한 컴퓨터와 같은 다양한 형태의 디지털 컴퓨터를 의미한다. 전자 기기는 개인 디지 털 처리, 셀룰러폰, 스마트폰, 웨어러블 기기 및 다른 유사한 계산 장치와 같은 다양한 형태의 이동 장치를 의 미할 수도 있다. 본문에서 나타낸 부재, 이들의 연결과 관계, 및 이들의 기능은 단지 예시적인 것으로, 본문에 서 설명 및/또는 요구된 본 발명의 구현을 한정하지 않는다. 도 6에 도시된 바와 같이, 전자 기기는 컴퓨팅 유닛을 포함하고, 컴퓨팅 유닛은 판독 전용 메모 리(ROM)에 저장되어 있는 컴퓨터 프로그램 또는 저장 유닛으로부터 랜덤 액세스 메모리(RAM) 에 로드된 컴퓨터 프로그램에 따라, 다양한 적절한 동작과 처리를 실행할 수 있다. RAM에는 전자 기기가 동작하는데 필요한 여러가지 프로그램과 데이터도 저장할 수 있다. 컴퓨팅 유닛, ROM 및 RAM은 버스를 통해 서로 연결된다. 입력/출력 (I/O)인터페이스도 버스에 연결된다. 전자 기기 중의 복수 컴포넌트는 I/O인터페이스에 연결되고, 키보드, 마우스 등과 같은 입력 유닛 ; 여러가지 타입의 디스플레이, 스피커 등과 같은 출력 유닛; 디스크, 광디스크 등과 같은 저장 유닛 및 네트워크 카드, 모뎀, 무선통신 트랜시버 등과 같은 통신 유닛을 포함한다. 통신 유닛은 전 자 기기가 인터넷 등과 같은 컴퓨터 네트워크 및 여러가지 통신 네트워크 중의 적어도 하나를 통해 다른 기기와 정보/데이터를 교환할 수 있다. 컴퓨팅 유닛은 여러가지 처리와 계산 능력을 갖춘 범용 처리 컴포넌트 및 전용 처리 컴포넌트 중의 적어도 하나일 수 있다. 컴퓨팅 유닛의 일부 예는, 중앙 처리 유닛 (CPU), 그래픽스 처리 유닛(GPU), 다양한 전용 인공지능(AI)계산 팁, 다양한 기계학습 모델 알고리즘을 실행하는 컴퓨팅 유닛, 디지털 신호 프로세서(DSP) 및 임의의 적절한 프로세서, 컨트롤러, 마이크로 컨트롤러 등을 포함하지만, 이에 한정되지 않는다. 컴퓨팅 유닛 은 공유 메모리 액세스 제어 방법 등과 같은 상기의 다양한 방법과 처리를 실행한다. 예를 들면, 일부 실 시예에서, 공유 메모리 액세스 제어 방법은 저장 유닛 등과 같은 기계 판독 가능 매체에 유형적으로 포함 되는 컴퓨터 소프트웨어 프로그램으로 구현할 수 있다. 일부 실시예에서, 컴퓨터 프로그램의 일부 또는 전부는 ROM및 통신 유닛 중의 적어도 하나를 통해 전자 기기에 로드 및/또는 인스톨될 수 있다. 컴퓨터 프로그램이 RAM에 로드되어 컴퓨팅 유닛에 의해 실행될 경우, 상기의 공유 메모리 액세스 제어 방법 의 하나 또는 복수의 단계를 실행할 수 있다. 대안적으로, 다른 실시예에서, 컴퓨팅 유닛은 다른 임의의 적절한 방식(예를 들면, 펌웨어에 의해)을 통해 공유 메모리 액세스 제어 방법을 실행하도록 구성될 수 있다. 본 발명의 실시예에 따르면, 본 발명은 또한 자율 주행 차량을 제공하고, 전술한 실시예중의 전자 기기를 포함 한다. 예시적으로, 당해 전자 기기는 무인 운전 차량 중의 제어 기기이다. 설명된 시스템 및 기술의 다양한 실시형태는 디지털 전자 회로 시스템, 집적 회로 시스템, 필드 프로그래밍 가 능한 게이트 어레이(FPGA), 특정 용도 대상 집적 회로(ASIC), 특정 용도 대상 표준제품(ASSP), 시스템 온 칩 시 스템(SOC), 부하 프로 그래 밍 가능 논리 장치(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어, 및/또는 이들의 결합에서 구현될 수 있다. 이러한 다양한 실시형태는 하나 또는 다수의 컴퓨터 프로그램에서의 구현을 포함할 수 있고, 상기 하나 또는 다수의 컴퓨터 프로그램은 적어도 하나의 프로그램 가능 프로세서를 포함하는 프로그 램 가능 시스템에서 실행 및/또는 해석될 수 있으며, 상기 프로그램 가능 프로세서는 전용 또는 범용 프로그램 가능 프로세서일 수 있고, 저장 시스템, 적어도 하나의 입력 장치, 및 적어도 하나의 출력 장치로부터 데이터 및 명령을 수신할 수 있으며, 데이터 및 명령을 상기 저장 시스템, 상기 적어도 하나의 입력 장치, 및 상기 적 어도 하나의 출력 장치에 전송할 수 있다.본 발명의 방법을 실시하기 위한 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 결합을 사용하여 작성할 수 있다. 이러한 프로그램 코드는 프로그램 코드가 프로세서 또는 컨트롤러30에 의해 실행될 때 흐름도 및 블록도 중의 적어도 하나에 규정된 기능/동작이 실행되도록, 대형 기계(슈퍼 컴퓨터), 전용 컴퓨터 또는 다 른 프로그램 가능한 데이터 처리 장치의 프로세서 또는 컨트롤러에 제공할 수 있다. 프로그램 코드는 완전히 기 계에서 실행되거나, 부분적으로 기계에서 실행되거나, 독립된 소프트웨어 패키지로서 부분적으로 기계에서 실행 되고, 부분적으로 리모트 기계에서 실행되거나 또는 완전히 리모트 기계 또는 서버에서 실행될 수 있다. 본 발명의 문맥에서, 기계 판독 가능 매체는 명령 실행 시스템, 장치 또는 기기의 사용, 또는 명령 실행 시스템, 장치 또는 기기와 결합하여 사용되는 프로그램을 포함하거나 저장할 수 있는 유형적인 매체일 수 있다. 기계 판독 가능 매체는 기계 판독 가능 신호 매체 또는 기계 판독 가능 기록 매체일 수 있다. 기계 판독 가능 매체는 전자, 자기, 광학, 전자기, 적외선, 또는 반도체 시스템, 장치 또는 기기, 또는 상술한 내용의 임의의 적절한 결합을 포함하지만, 이에 한정되지 않는다. 기계 판독 가능 기록 매체의 더 구체적인 예는 하나 또는 복 수의 와이어에 기반한 전기 연결, 휴대용 컴퓨터 디스크, 하드 디스크, 랜덤 액세스 메모리(RAM), 판독 전용 메 모리(ROM), 소거 가능 프로그래머블 판독 전용 메모리(EPROM 또는 플래시 메모리), 광섬유, 포터블 컴팩트 디스 크 판독 전용 메모리(CD-ROM), 광학 저장 장치, 자기 저장 장치 또는 상술한 내용의 임의의 적절한 결합을 포함 한다. 사용자와의 인터랙션을 제공하기 위하여, 컴퓨터에서 여기서 설명된 시스템 및 기술을 실시할 수 있고, 상기 컴 퓨터는 사용자에게 정보를 표시하기 위한 표시 장치(예를 들어, CRT(음극선관) 또는 LCD(액정 표시 장치) 모니 터); 및 키보드 및 지향 장치(예를 들어, 마우스 또는 트랙 볼)를 구비하며, 사용자는 상기 키보드 및 상기 지 향 장치를 통해 컴퓨터에 입력을 제공한다. 다른 타입의 장치는 또한 사용자와의 인터랙션을 제공할 수 있는데, 예를 들어, 사용자에게 제공된 피드백은 임의의 형태의 감지 피드백(예를 들어, 시각 피드백, 청각 피드백, 또 는 촉각 피드백)일 수 있고; 임의의 형태(소리 입력, 음성 입력, 또는 촉각 입력)로 사용자로부터의 입력을 수 신할 수 있다. 여기서 설명된 시스템 및 기술은 백엔드 부재를 포함하는 계산 시스템(예를 들어, 데이터 서버로 사용됨), 또는 미들웨어 부재를 포함하는 계산 시스템(예를 들어, 애플리케이션 서버), 또는 프론트 엔드 부재를 포함하는 계 산 시스템(예를 들어, 그래픽 사용자 인터페이스 또는 네트워크 브라우저를 구비하는 사용자 컴퓨터인 바, 사용 자는 상기 그래픽 사용자 인터페이스 또는 상기 네트워크 브라우저를 통해 여기서 설명된 시스템 및 기술의 실 시형태와 인터랙션할 수 있음), 또는 이러한 백엔드 부재, 미들웨어 부재, 또는 프론트 엔드 부재의 임의의 결 합을 포함하는 계산 시스템에서 구현될 수 있다. 임의의 형태 또는 매체의 디지털 데이터 통신(예를 들어, 통신 네트워크)을 통해 시스템의 부재를 서로 연결시킬 수 있다. 통신 네트워크의 예는, 근거리 통신망(LAN), 광역망 (WAN), 인터넷을 포함한다. 컴퓨터 시스템은 클라이언트 및 서버를 포함할 수 있다. 클라이언트 및 서버는 일반적으로 서로 멀리 떨어져 있 고 일반적으로 통신 네트워크를 통해 서로 인터랙션한다. 대응되는 컴퓨터에서 실행되고 또한 서로 클라이언트- 서버 관계를 가지는 컴퓨터 프로그램을 통해 클라이언트 및 서버의 관계를 생성한다. 서버는 클라우드 서버일 수 있고, 클라우드 계산 또는 클라우드 호스트일 수도 있으며, 클라우드 계산 서비스 시스템 중의 하나의 호스 트 제품일 수 있어, 종래의 물리 호스트와VPS서비스 (\"Virtual Private Server\" 또는 \"VPS\"라고 약칭한다)에 존재하는 관리 곤란도가 높고, 업무 확장성이 약한 것을 해결한다. 서버는 분산 시스템의 서버일 수 있거나, 또 는 블록 체인을 결합한 서버일 수도 있다. 위에서 설명된 다양한 형태의 프로세스를 사용하여 단계를 재배열, 추가 또는 삭제할 수 있음을 이해해야 한다. 예를 들어, 본 발명에 기재된 각 단계는 동시에, 순차적으로, 또는 상이한 순서로 수행될 수 있으며, 본 발명에 개시된 기술적 해결수단이 이루고자 하는 결과를 구현할 수 있는 한, 본문은 여기서 한정되지 않는다."}
{"patent_id": "10-2022-0179074", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "상기 구체적인 실시형태는 본 발명의 보호 범위를 한정하지 않는다. 본 기술분야의 통상의 기술자는, 설계 요구 및 다른 요소에 따라 다양한 수정, 결합, 서브 결합 및 대체를 진행할 수 있음을 이해해야 한다. 본 발명의 정 신 및 원칙 내에서 이루어진 임의의 수정, 등가 교체 및 개선 등은 모두 본 발명의 보호 범위 내에 포함되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2022-0179074", "section": "도면", "subsection": "도면설명", "item": 1, "content": "첨부 도면은 본 해결수단을 더 잘 이해하기 위한 것으로, 본 발명에 대해 한정하는 것으로 구성되지 않는다. 도 1은 본 발명의 실시예에서 제공되는 공유 메모리 액세스 제어 방법의 흐름도이다. 도 2는 본 발명의 실시예에서 제공되는 공유 메모리의 구조 개략도이다. 도 3은 본 발명의 실시예에서 제공되는 공유 메모리의 헤더 오브젝트의 구조 개략도이다. 도 4는 본 발명의 실시예에서 제공되는 프로세스 액세스 공유 메모리의 개략도이다. 도 5는 본 발명의 실시예에서 제공되는 공유 메모리 액세스 제어 장치의 구조 개략도이다. 도 6은 본 발명의 실시예의 공유 메모리 액세스 제어 방법을 구현하는데 사용되는 전자 기기의 개략적인 블록도 이다."}
