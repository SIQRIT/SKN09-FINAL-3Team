{"patent_id": "10-2022-0190249", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0108832", "출원번호": "10-2022-0190249", "발명의 명칭": "지능형 IoT 기기에 대한 파일시스템 기반의 데이터 추출 및 복원을 위한 장치 및 방법", "출원인": "아주대학교산학협력단", "발명자": "손태식"}}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법에 있어서,(a) 지능형 IoT 기기에 해당하는 대상 디바이스와 연계된 분석 대상 데이터를 수집하는 단계;(b) 상기 분석 대상 데이터에 기초하여, 상기 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를식별하는 단계; 및(c) 상기 기준 정보를 고려하여 상기 분석 대상 데이터로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 상기 메타데이터를 이용하여 상기 분석 대상 데이터 중에서 상기 탐색 대상 데이터를 추출하는단계,를 포함하는, 방법,"}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,(d) 상기 메타데이터를 이용하여 상기 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판단하고, 상기 기준 정보를 고려하여 상기 복원 대상 데이터를 복원하는 단계,를 더 포함하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 (b) 단계는,(b1) 상기 분석 대상 데이터에 기초하여 상기 대상 디바이스에 적용된 운영 체제 정보를 식별하는 단계; 및(b2) 상기 식별된 운영 체제 정보를 고려하여 상기 파일시스템의 유형을 식별하는 단계,를 포함하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 (c) 단계는,상기 기준 정보에 따른 파일시스템에 대하여 기 확보된 구조 정보와 상기 분석 대상 데이터를 비교하여 상기 탐색 대상 데이터의 저장 위치를 파악하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 (c) 단계는,상기 기준 정보에 따른 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이용하여 추정되는 상기 파일시스템의 구조 정보를 기초로 상기 메타데이터를 식별하고, 상기 메타데이터를 이용하여상기 탐색 대상 데이터의 저장 위치를 파악하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,공개특허 10-2024-0108832-3-상기 (c) 단계는,상기 탐색 대상 데이터를 포함하는 파일 및 디렉토리 중 적어도 하나를 상기 메타데이터를 이용한 데이터 카빙(Data Carving)을 적용하여 추출하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 (a) 단계는,상기 대상 디바이스가 복수의 파티션으로 분할되는 기록 장치를 구비하면, 상기 복수의 파티션 각각에 대응하는파티션 데이터를 개별 수집하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 (a) 단계 이전에,상기 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려하여 상기 분석 대상데이터에 대한 수집 방식을 결정하는 단계,를 더 포함하는 것인, 방법."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법 장치에 있어서,지능형 IoT 기기에 해당하는 대상 디바이스와 연계된 분석 대상 데이터를 수집하는 데이터 수집부;상기 분석 대상 데이터에 기초하여, 상기 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 식별하는 디바이스 분석부; 및상기 기준 정보를 고려하여 상기 분석 대상 데이터로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를추출하고, 상기 메타데이터를 이용하여 상기 분석 대상 데이터 중에서 상기 탐색 대상 데이터를 추출하는 데이터 추출부,를 포함하는, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 메타데이터를 이용하여 상기 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판단하고,상기 기준 정보를 고려하여 상기 복원 대상 데이터를 복원하는 데이터 복원부,를 더 포함하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에 있어서,상기 디바이스 분석부는,상기 분석 대상 데이터에 기초하여 상기 대상 디바이스에 적용된 운영 체제 정보를 식별하고, 상기 식별된 운영체제 정보를 고려하여 상기 파일시스템의 유형을 식별하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 데이터 추출부는,상기 기준 정보에 따른 파일시스템에 대하여 기 확보된 구조 정보와 상기 분석 대상 데이터를 비교하여 상기 탐공개특허 10-2024-0108832-4-색 대상 데이터의 저장 위치를 파악하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제9항에 있어서,상기 데이터 추출부는,상기 기준 정보에 따른 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이용하여 추정되는 상기 파일시스템의 구조 정보를 기초로 상기 메타데이터를 식별하고, 상기 메타데이터를 이용하여상기 탐색 대상 데이터의 저장 위치를 파악하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 데이터 추출부는,상기 탐색 대상 데이터를 포함하는 파일 및 디렉토리 중 적어도 하나를 상기 메타데이터를 이용한 데이터 카빙(Data Carving)을 적용하여 추출하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제9항에 있어서,상기 데이터 수집부는,상기 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려하여 상기 분석 대상데이터에 대한 수집 방식을 결정하는 것인, 장치."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장치 및 방법이 개시되며, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법은, (a) 지능형 IoT 기기에 해당하는 대상 디바이스와 연계된 분석 대상 데이터를 수집하는 단계, (b) 상기 분석 대상 데이터에 기초 하여, 상기 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 식별하는 단계 및 (c) 상기 기준 정 보를 고려하여 상기 분석 대상 데이터로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 상 기 메타데이터를 이용하여 상기 분석 대상 데이터 중에서 상기 탐색 대상 데이터를 추출하는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본원은 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장치 및 방법에 관한 것이다. 예를 들면, 본원은 지능형 IoT 플랫폼을 위한 디지털 포렌식(Digital Forensic) 기법에 관한 것이다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "사물인터넷(Internet of Things, IoT) 기술이 발전하고, 관련 시장 규모가 성장함에 따라 다양한 머신에 IoT 기 술이 접목되고 있으며, 예를 들어 차량, 인공지능, 웨어러블, 스피커, 산업 제품 등 다양한 기기에 사용되고 있 다. 이러한 IoT 머신들은 네트워크 통신, 기기 및 사람과의 상호작용을 통해 다양한 데이터를 저장하며, 저장되는 데이터에는 시스템 로그부터 사용자의 개인정보까지 민감한 정보들이 포함되게 된다. 그러나, IoT 머신들에 적용되는 보안 기술의 수준은 아직 부족한 상황으로 다양한 공격의 대상이 될 수 있다. 예시로, IP 카메라를 해킹하여, 개인의 사생활이 노출되는 사건이 발생하였는데, 해당 사건은 해커가 IP 카메라 를 해킹해 촬영된 피해자의 영상을 인터넷 사이트에 판매한 사건이다. 이처럼 IP 카메라뿐만 아니라 스피커, 인 터폰 등 다양한 IoT 머신들이 해킹의 위험에 처해있다. 전술한 사례뿐만 아니라, 다양한 IoT 머신을 대상으로 공격이 이루어지고 있으며, IoT가 일상으로 자리 잡은 현 재는 공격 시 큰 피해가 발생할 수 있다. 따라서 공격이 발생했을 때의 증거 획득을 위한 포렌식 기술 및 기기 의 보안에 관련된 기술의 발전이 필요하다. 한편, IoT 머신 및 기술이 적용되는 분야가 다양해진 만큼 사용되는 IoT 플랫폼의 수도 증가했다. 또한 각각의 플랫폼마다 데이터의 저장 방식, 구조 등이 다르기 때문에 다양한 플랫폼에 대한 지식이 필요하다. 또한, 다양 한 IoT 머신에 플랫폼들이 탑재되기 때문에, 해당 IoT 머신들은 공격의 대상이 될 수 있다. 또한 IoT 머신들은 사용자의 활동 및 사용기록 등을 저장하기 때문에 범죄 발생 시, 중요한 증거를 저장하고 있을 수 있다. 따라서 해당 IoT 머신들의 보안성 향상 및 증거 수집을 위해 IoT 머신에 탑재된 플랫폼의 특성을 고려한 분석 기법의 도입이 필요한 실정이다. 본원의 배경이 되는 기술은 한국등록특허공보 제10-1484882호에 개시되어 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본원은 전술한 종래 기술의 문제점을 해결하기 위한 것으로서, IoT 머신에 해당하는 대상 디바이스에 탑재된 파 일시스템의 메타데이터 분석을 통해 대상 디바이스에 저장된 파일의 종류, 크기, 파일 및 폴더 목록, 삭제된 파 일 등의 정보를 기초로 하여 대상 디바이스로부터 데이터 추출 및 복원을 수행하는 지능형 IoT 기기에 대한 파 일 시스템 기반의 데이터 추출 및 복원을 위한 장치 및 방법을 제공하려는 것을 목적으로 한다. 본원은 전술한 종래 기술의 문제점을 해결하기 위한 것으로서, 것을 목적으로 한다. 다만, 본원의 실시예가 이루고자 하는 기술적 과제는 상기된 바와 같은 기술적 과제들로 한정되지 않으며, 또 다른 기술적 과제들이 존재할 수 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기한 기술적 과제를 달성하기 위한 기술적 수단으로서, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파 일 시스템 기반의 데이터 추출 및 복원을 위한 방법은, (a) 지능형 IoT 기기에 해당하는 대상 디바이스와 연계 된 분석 대상 데이터를 수집하는 단계, (b) 상기 분석 대상 데이터에 기초하여, 상기 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 식별하는 단계 및 (c) 상기 기준 정보를 고려하여 상기 분석 대상 데이 터로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 상기 메타데이터를 이용하여 상기 분 석 대상 데이터 중에서 상기 탐색 대상 데이터를 추출하는 단계를 포함할 수 있다. 또한, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법 은, (d) 상기 메타데이터를 이용하여 상기 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판 단하고, 상기 기준 정보를 고려하여 상기 복원 대상 데이터를 복원하는 단계를 포함할 수 있다. 또한, 상기 (b) 단계는, (b1) 상기 분석 대상 데이터에 기초하여 상기 대상 디바이스에 적용된 운영 체제 정보 를 식별하는 단계 및 (b2) 상기 식별된 운영 체제 정보를 고려하여 상기 파일시스템의 유형을 식별하는 단계를 포함할 수 있다. 또한, 상기 (c) 단계는, 상기 기준 정보에 따른 파일시스템에 대하여 기 확보된 구조 정보와 상기 분석 대상 데 이터를 비교하여 상기 탐색 대상 데이터의 저장 위치를 파악할 수 있다. 또한, 상기 (c) 단계는, 상기 기준 정보에 따른 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함 하는 참조 정보를 이용하여 추정되는 상기 파일시스템의 구조 정보를 기초로 상기 메타데이터를 식별하고, 상기 메타데이터를 이용하여 상기 탐색 대상 데이터의 저장 위치를 파악할 수 있다. 또한, 상기 (c) 단계는, 상기 탐색 대상 데이터를 포함하는 파일 및 디렉토리 중 적어도 하나를 상기 메타데이 터를 이용한 데이터 카빙(Data Carving)을 적용하여 추출할 수 있다. 또한, 상기 (a) 단계는, 상기 대상 디바이스가 복수의 파티션으로 분할되는 기록 장치를 구비하면, 상기 복수의 파티션 각각에 대응하는 파티션 데이터를 개별 수집할 수 있다. 또한, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법 은, 상기 (a) 단계 이전에, 상기 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려하여 상기 분석 대상 데이터에 대한 수집 방식을 결정하는 단계를 포함할 수 있다. 한편, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법 장치는, 지능형 IoT 기기에 해당하는 대상 디바이스와 연계된 분석 대상 데이터를 수집하는 데이터 수집부, 상 기 분석 대상 데이터에 기초하여, 상기 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 식별하 는 디바이스 분석부 및 상기 기준 정보를 고려하여 상기 분석 대상 데이터로부터 탐색 대상 데이터의 저장 위치 와 연계된 메타데이터를 추출하고, 상기 메타데이터를 이용하여 상기 분석 대상 데이터 중에서 상기 탐색 대상 데이터를 추출하는 데이터 추출부를 포함할 수 있다. 또한, 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법 장치는, 상기 메타데이터를 이용하여 상기 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판단하고, 상기 기준 정보를 고려하여 상기 복원 대상 데이터를 복원하는 데이터 복원부를 포함할 수 있다. 또한, 상기 디바이스 분석부는, 상기 분석 대상 데이터에 기초하여 상기 대상 디바이스에 적용된 운영 체제 정 보를 식별하고, 상기 식별된 운영 체제 정보를 고려하여 상기 파일시스템의 유형을 식별할 수 있다. 또한, 상기 데이터 추출부는, 상기 기준 정보에 따른 파일시스템에 대하여 기 확보된 구조 정보와 상기 분석 대 상 데이터를 비교하여 상기 탐색 대상 데이터의 저장 위치를 파악할 수 있다. 또한, 상기 데이터 추출부는, 상기 기준 정보에 따른 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이용하여 추정되는 상기 파일시스템의 구조 정보를 기초로 상기 메타데이터를 식별하고, 상기 메타데이터를 이용하여 상기 탐색 대상 데이터의 저장 위치를 파악할 수 있다. 또한, 상기 데이터 추출부는, 상기 탐색 대상 데이터를 포함하는 파일 및 디렉토리 중 적어도 하나를 상기 메타 데이터를 이용한 데이터 카빙(Data Carving)을 적용하여 추출할 수 있다. 또한, 상기 데이터 수집부는, 상기 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나 를 고려하여 상기 분석 대상 데이터에 대한 수집 방식을 결정할 수 있다. 상술한 과제 해결 수단은 단지 예시적인 것으로서, 본원을 제한하려는 의도로 해석되지 않아야 한다. 상술한 예 시적인 실시예 외에도, 도면 및 발명의 상세한 설명에 추가적인 실시예가 존재할 수 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "전술한 본원의 과제 해결 수단에 의하면, IoT 머신에 해당하는 대상 디바이스에 탑재된 파일시스템의 메타데이 터 분석을 통해 대상 디바이스에 저장된 파일의 종류, 크기, 파일 및 폴더 목록, 삭제된 파일 등의 정보를 기초 로 하여 대상 디바이스로부터 데이터 추출 및 복원을 수행하는 지능형 IoT 기기에 대한 파일 시스템 기반의 데 이터 추출 및 복원을 위한 장치 및 방법을 제공할 수 있다. 전술한 본원의 과제 해결 수단에 의하면, 지능형 IoT 기기의 파일시스템 메타데이터를 분석하여 디지털 증거를 수집 및 삭제된 데이터를 복원하기 때문에 기기에 저장된 정보를 직접 수집함으로써 디지털 포렌식 및 사용자의 개인정보보호 범위를 확장할 수 있다. 전술한 본원의 과제 해결 수단에 의하면, IoT 기기의 데이터를 직접 추출 및 복원함으로써 IoT 기기 자체의 보 안 수준을 향상시키고, 발생할 수 있는 보안 위협에 대한 대비와 대상 기기들의 보안성을 향상시킬 수 있다. 전술한 본원의 과제 해결 수단에 의하면, 파일시스템이 존재하는 지능형 IoT 기기인 경우 데이터 추출 및 복원 할 수 있을 것으로 기대되며, 범죄 수사 시 증거로 사용될 수 있는 아티팩트 획득 방안으로 사용될 것으로 예상 된다. 다만, 본원에서 얻을 수 있는 효과는 상기된 바와 같은 효과들로 한정되지 않으며, 또 다른 효과들이 존재할 수 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 첨부한 도면을 참조하여 본원이 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 본원의 실시예를 상세히 설명한다. 그러나 본원은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본원을 명확하게 설명하기 위해서 설명과 관계없는 부분 은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 본원 명세서 전체에서, 어떤 부분이 다른 부분과 \"연결\"되어 있다고 할 때, 이는 \"직접적으로 연결\"되어 있는 경우뿐 아니라, 그 중간에 다른 소자를 사이에 두고 \"전기적으로 연결\" 또는 \"간접적으로 연결\"되어 있는 경우 도 포함한다. 본원 명세서 전체에서, 어떤 부재가 다른 부재 \"상에\", \"상부에\", \"상단에\", \"하에\", \"하부에\", \"하단에\" 위치 하고 있다고 할 때, 이는 어떤 부재가 다른 부재에 접해 있는 경우뿐 아니라 두 부재 사이에 또 다른 부재가 존 재하는 경우도 포함한다. 본원 명세서 전체에서, 어떤 부분이 어떤 구성 요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성 요소를 제외하는 것이 아니라 다른 구성 요소를 더 포함할 수 있는 것을 의미한다. 본원은 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장치 및 방법에 관한 것이다. 예를 들면, 본원은 지능형 IoT 플랫폼을 위한 디지털 포렌식(Digital Forensic) 기법에 관한 것이다. 도 1은 본원의 일 실시예에 따른 지능형 IoT 기기 분석 시스템의 개략적인 구성도이다. 도 1을 참조하면, 본원의 일 실시예에 따른 지능형 IoT 기기 분석 시스템은 본원의 일 실시예에 따른 지능 형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장치(이하, '데이터 추출 및 복원 장 치'라 한다.), 대상 디바이스, 사용자 단말 및 외부 서버를 포함할 수 있다. 데이터 추출 및 복원 장치, 대상 디바이스, 사용자 단말 및 외부 서버 상호간은 네트워크 를 통해 통신할 수 있다. 네트워크는 단말들 및 서버들과 같은 각각의 노드 상호간에 정보 교환이 가능 한 연결 구조를 의미하는 것으로, 이러한 네트워크의 일 예에는, 3GPP(3rd Generation Partnership Project) 네트워크, LTE(Long Term Evolution) 네트워크, 5G 네트워크, WIMAX(World Interoperability for Microwave Access) 네트워크, 인터넷(Internet), LAN(Local Area Network), Wireless LAN(Wireless Local Area Network), WAN(Wide Area Network), PAN(Personal Area Network), wifi 네트워크, 블루투스(Bluetooth) 네트워크, 위성 방송 네트워크, 아날로그 방송 네트워크, DMB(Digital Multimedia Broadcasting) 네트워크 등 이 포함되나 이에 한정되지는 않는다. 사용자 단말은 예를 들면, 스마트폰(Smartphone), 스마트패드(SmartPad), 태블릿 PC등과 PCS(Personal Communication System), GSM(Global System for Mobile communication), PDC(Personal Digital Cellular), PHS(Personal Handyphone System), PDA(Personal Digital Assistant), IMT(International Mobile Telecommunication)-2000, CDMA(Code Division Multiple Access)-2000, W-CDMA(W-Code Division Multiple Access), Wibro(Wireless Broadband Internet) 단말기 같은 모든 종류의 무선 통신 장치일 수 있다. 본원의 실시예에 관한 설명에서 대상 디바이스는 지능형 사물인터넷(Internet of Things, IoT) 기기로서, 사용자의 사용자 입력(조작), 음성, 영상 등에 대한 데이터를 수집하고, 수집된 데이터에 대한 인공지능 기반의 분석 등의 데이터 처리를 수행하는 기능을 보유한 디바이스일 수 있다. 예를 들어, 대상 디바이스는 인공 지능(AI) 스피커, 스마트 TV, 지능형 가전 등을 폭넓게 포함할 수 있다. 또한, 본원의 실시예에 관한 설명에서 사용자 단말 또는 외부 서버는 데이터 추출 및 복원 장치(10 0)에 의해 도출된 대상 디바이스 내부의 탐색 대상 데이터, 대상 디바이스에서 삭제된 후 데이터 추 출 및 복원 장치에 의해 복원된 복원 대상 데이터 등에 대한 정보를 데이터 추출 및 복원 장치로부터 전송받는 주체에 대응될 수 있다. 이하에서는 도 2a 내지 도 3b를 참조하여 데이터 추출 및 복원 장치의 구체적인 기능 및 동작에 대하여 상 세히 설명하도록 한다. 도 2a 및 도 2b는 대상 디바이스에 적용된 플랫폼의 유형에 따른 파일시스템의 구조를 예시적으로 나타낸 도면 이다. 구체적으로 도 2a는 Tizen 플랫폼에 따른 VDFS의 아키텍쳐를 나타내고, 도 2b는 리눅스(Linux) 플랫폼에 따른 JFFS2 및 UBIFS의 아키텍쳐를 나타낸 도면이다. 도 2a 및 도 2b를 참조하면, 현재 다양한 Machine-to-Machine(M2M) 장비가 활용됨에 따라 사용되는 플랫폼의 수 가 다양하며, 같은 플랫폼일 경우에도 사용되는 운영체제 및 파일시스템이 상이할 수 있고, 대상 디바이스(20 0)에 적용될 수 있는 플랫폼은 예시적으로 Fuchsia, Contiki, Tizen, Linux 등이 존재하며, 이렇듯, 다양한 플 랫폼이 사용됨에 따라 포렌식 진행을 위해 플랫폼의 특성 및 각 플랫폼에서 사용하는 파일시스템의 특성에 대한 분석이 필요하다. 도 2a를 참조하면, Tizen 운영체제(OS)에 사용 가능한 파일시스템인 VDFS(Vertically Deliberate File Syste m)는 주로 스마트 TV 유형의 대상 디바이스에 적용될 수 있으며, 삭제된 파일에 대한 저널 영역이 존재하 지 않고, 스냅숏 형태로 파일을 저장하는 특성을 가진다. 따라서, 저장된 스냅숏 데이터가 지워지지 않았다면 파일 추출이나 삭제된 파일의 복구가 가능한 특징이 있다. 또한, Tizen의 VDFS의 시스템 레이어 구조는 기본적 인 Linux 파일시스템과 유사하게 이루어져 있으며, 특히 VDFS는 Block Device에서 작동하며 블록 단위로 데이터 를 저장하는 특성을 갖는다. 또한, 도 2b를 참조하면, JFFS2 와 UBIFS는 플래시 메모리 장치에 쓰이는 리눅스 기반 파일시스템으로서, 로그 형태로 데이터를 저장하는 저널링 형태의 파일시스템에 해당한다. UBIFS는 JFFS2를 개선하여 개발된 파일시스템 으로, JFFS2와 달리 전체 미디어를 스캔하지 않아 큰 용량의 낸드 플래시(NAND flash)에 적합하다. 해당 파일시 스템들은 임베디드 시스템에서 주로 사용되며, JFFS2는 MTD(Memory Technology Device) 장치 위에서 작동하며 UBIFS는 UBI 볼륨 위에서 작동한다. UBIFS의 경우 MTD 장치의 접근을 위해 UBI 볼륨을 사용한다. UBIFS는 LEB(Logical Erasable Block)라는 블록을 사용하여 데이터를 저장하는 특성을 가진다. 이렇듯, 대상 디바이스에 적용된 다양한 플랫폼 유형, 운영체제, 파일시스템의 유형 등을 파악하기 위하여 데이터 추출 및 복원 장치는 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려하여 대상 디바이스와 연계된 분석 대상 데이터에 대한 수집 방식을 결정할 수 있다. 구체적으로 데이터 추출 및 복원 장치는 대상 디바이스에 대한 파일 및 데이터 추출에 앞서 분석 대 상이 되는 IoT 기기의 구동 환경을 조사하기 위하여, 대상 디바이스의 PCB 상세 사양을 수집하고, 대상 디 바이스의 칩-오프(Chip-off) 가능 여부를 판단할 수 있다. 또한, 데이터 추출 및 복원 장치는 결정된 수집 방식을 기초로 하여 대상 디바이스와 연계된 분석 대 상 데이터를 수집할 수 있다. 본원의 일 실시예에 따르면, 대상 디바이스가 복수의 파티션으로 분할되는 기록 장치(예를 들면, 메모리 등)를 구비하는 유형의 디바이스이면, 데이터 추출 및 복원 장치는 복수의 파티션 각각에 대응하는 파티션 데이터를 개별 수집할 수 있다. 예시적으로 데이터 추출 및 복원 장치는 전술한 IoT 기기의 구동 환경에 대한 조사 결과를 고려하여, 대상 디바이스에 구비되는 USB 포트, JTAG (Joint Test Action Group), UART (Universal asynchronous receiver-transmitter) 등의 디버깅 인터페이스를 활용하여 분석 대상 데이터를 수집할 수 있으며, 이러한 디버 깅 인터페이스 기반의 데이터 수집이 불가능하고, 칩-오프(Chip-off)가 가능한 것으로 판단된 경우에는 PCB 상 세 사양에 대한 조사 결과를 기반으로 PCB에 장착된 플래시 메모리의 칩-오프(Chip-off)를 수행함으로써 분석 대상 데이터를 수집할 수 있다. 데이터 추출 및 복원 장치는 데이터 추출 및 복원 장치에 의해 수집된 분석 대상 데이터에 기초하여, 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 식별할 수 있다. 구체적으로 데이터 추출 및 복원 장치는 수집된 분석 대상 데이터에 기초하여 대상 디바이스에 적용 된 운영 체제 정보를 식별하고, 식별된 운영 체제 정보를 고려하여 대상 디바이스에 적용된 파일시스템의 유형을 식별할 수 있다. 이와 관련하여 본원의 일 실시예에 따르면, 데이터 추출 및 복원 장치는 비주얼 인터페이스를 제공하는 대 상 디바이스의 경우, ‘설정‘ 등의 메뉴를 통해 대상 디바이스에 탑재된 운영체제를 파악할 수 있으 며, 다른 예로, 대상 디바이스의 펌웨어에 대한 분석을 통해 대상 디바이스에 설치된 운영체제를 파악할 수도 있다. 또한, 본원의 일 실시예에 따르면, 데이터 추출 및 복원 장치는 디버그 포트 연결 시, 운영체제에 맞는 명 령어를 통해 대상 디바이스에 적용된 파일시스템을 식별할 수 있다. 다른 예로, 데이터 추출 및 복원 장치 는 파티션 데이터 획득 시, HxD와 같은 hex editor 프로그램 등을 통해 사용하는 파일시스템의 매직 넘버 (Magic Number)를 탐색함으로써 대상 디바이스에 적용된 파일시스템을 식별할 수 있다. 도 3a 및 도 3b는 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 고려하여 탐색 대상 데이터를 추출하는 프로세스를 나타낸 도면이다. 구체적으로 도 3a는 Tizen 운영체제의 VDFS 파일시스템을 사용하는 대상 디바이스(예를 들면, 스마트 TV 등)에 대한 탐색 대상 데이터 추출 과정을 나타낸 도면이고, 도 3b는 Linux 운영체제의 Ext4 파일시스템을 사용 하는 대상 디바이스(예를 들면, AI 스피커 등) 또는 Android 운영체제의 Ext4 파일시스템을 사용하는 대상 디바이스(예를 들면, 스마트카의 인포테인먼트 기기 등)에 대한 탐색 대상 데이터 추출 과정을 나타낸 도 면이다. 도 3a 및 도 3b를 참조하면, 데이터 추출 및 복원 장치는 식별된 기준 정보를 고려하여 분석 대상 데이터 로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 추출된 메타데이터를 이용하여 분석 대 상 데이터 중에서 탐색 대상 데이터를 추출할 수 있다. 한편, 데이터 추출 및 복원 장치는 대상 디바이스 에 저장된 데이터 추출 시에 대상 디바이스에 설치된 운영체제가 동일한 경우에도, 다른 유형의 파일 시스템이 사용될 수 있기 때문에, 파일시스템의 식별 결과를 반영하는 기준 정보에 따라 각 파일시스템 유형 별 로 사용되는 메타데이터를 파악하여 알맞은 데이터 추출 방안을 적용할 수 있다. 보다 구체적으로, 데이터 추출 및 복원 장치는 대상 디바이스에 적용된 파일시스템에 대하여 확보된 구조 정보가 존재하는지 여부를 판단할 수 있다. 만일, 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재하면, 데이터 추출 및 복원 장치는 기 확보된 구조 정보와 수집된 분석 대상 데이터를 상호 비교하여 탐색 대상 데이터의 저장 위치를 파악하고, 파악된 탐색 대상 데이터의 저장 위치로 접근(이동)하여 탐색 대상 데이터를 추출할 수 있다. 달리 말해, 데이터 추출 및 복원 장치는 식별된 파일시스템에 대하여 공개된 구조 정보가 존재하는 경우, 수집된 분석 대상 데이터와 구조 정보의 비교 분석을 통해 데이터 추출 및 증거로 사용될 수 있는 메타데이터를 확인한다. 비교 분석한 메타데이터를 통해, 데이터가 저장된 영역으로 이동하여 데이터 카빙(data carving) 기 법을 통해 데이터의 추출을 진행할 수 있다. 반대로, 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재하지 않으면, 데이터 추출 및 복원 장치는 해당 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이 용하여 추정되는 파일시스템의 구조 정보를 기초로 수집된 분석 대상 데이터로부터 메타데이터를 식별 및 분석 하고, 메타데이터에 대한 분석 결과를 이용하여 탐색 대상 데이터의 저장 위치에 접근(이동)하여 탐색 대상 데 이터를 추출할 수 있다. 즉, 구조가 공개되지 않은 파일시스템에 대한 기준 정보가 획득된 경우, 데이터 추출 및 복원 장치는 대상 파일시스템과 관련된 개발자 문서 및 코드를 통해 분석을 진행하여 해당 파일시스템에 저장된 메타데이터를 분 석하거나 동일한 기기 및 동일한 환경에서의 연구를 통해 저장된 메타데이터의 분석을 진행한 후 분석한 메타데 이터를 기반으로 데이터가 저장된 영역으로 이동하여 데이터 카빙(data carving) 기법을 통해 데이터의 추출을 진행할 수 있다. 또한, 도 3a 및 도 3b를 참조하여 파일시스템 유형에 따른 데이터 추출 방식에 대한 적용 예시를 보다 구체적으 로 설명하면, 도 3a에 도시된 Tizen 운영체제의 VDFS 파일시스템의 경우, 공식 문서(달리 말해, 파일시스템의 구조 정보를 공개하는 문서 등)가 존재하지 않으므로, 데이터 추출 및 복원 장치는 HxD 등의 hex editor 프로그램을 통해 파일시스템 데이터의 분석을 진행하여 존재하는 메타데이터의 종류를 확인하고, 각 메타데이터 에 대응하여 저장된 데이터의 위치를 파악할 수 있다. 또한, 데이터 추출 및 복원 장치는 데이터의 저장 위치로 이동 시 필요한 메타데이터를 파악하고, 데이터 내에 저장된 파일 및 디렉토리 경로를 확인한다. 데이터 저장 위치로 이동 시, 수퍼블록(superblock)에서 카탈 로그 트리(catalog tree) 라는 블록으로 이동할 수 있는 'Catalog tree offset' 메타데이터를 통해 카탈로그 트리 블록으로 이동할 수 있고, 카탈로그 트리에는 파일 및 디렉토리의 정보를 저장하고 있는 다양한 레코드(Record)들이 저장되어 있으며, 각 레코드에 존재하는 데이터가 저장된 위치를 나타내는 'Data offset'을 통해 해당 저장 위치로 이동하여 데이터 카빙 기법을 적용함으로써 저장된 파일 및 디렉토리의 추출을 진행하여 탐색 대상 데이터를 획득할 수 있다. 이와 대비하여, 도 3b에 도시된 Linux 운영체제의 Ext4 파일시스템 또는 Android 운영체제의 Ext4 파일시스템을 사용하는 대상 디바이스에 대하여 데이터 추출 및 복원 장치는 Ext4 파일시스템의 공식 문서와 HxD 등의 hex editor 프로그램을 통해 파일시스템 데이터와 비교 분석을 진행하여 데이터의 저장 위치에 대한 및 데 이터의 저장 위치로 이동 시 필요한 메타데이터에 대한 파악을 수행하고, 데이터 내에 저장된 파일 및 디렉토리 경로를 확인한다. 예시적으로, 데이터 추출 및 복원 장치는 데이터 저장 위치로 이동 시, Group Descriptor에서 Inode table 블록으로 이동할 수 있는 'Inode table offset' 메타데이터를 이용할 수 있으며, Inode table 에는 파일 및 디렉토리의 정보를 저장하고 있는 다양한 inode들이 저장되어 있으며, 데이터 추출 및 복원 장치는 각 inode에 존재하는 데이터가 저장된 위치를 나타내는 'extent offset'을 통해 저장 위치로 이동(접근)할 수 있다. 한편, 해당 inode가 디렉토리일 경우, directory entry로 이동되며 해당 블록에는 디렉토리에 저장된 파 일 및 다른 디렉토리의 inode number 및 이름이 포함될 수 있다. 이어서 데이터 추출 및 복원 장치는 데이 터 카빙 기법을 적용함으로써 저장된 파일 및 디렉토리의 추출을 진행하여 탐색 대상 데이터를 획득할 수 있다. 한편, 데이터 추출 및 복원 장치는 데이터 추출 및 복원 장치에 의해 도출된 메타데이터를 이용하여 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판단할 수 있다. 만일, 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는 것으로 판단되면, 데이터 추출 및 복원 장 치는 대상 디바이스에 적용된 파일시스템에 대한 기준 정보를 고려하여 복원 대상 데이터를 복원할 수 있다. 이와 관련하여, 대상 디바이스로부터 삭제된 데이터를 복원하는 과정에서도 파일시스템마다 삭제된 데이터 의 저장 방법이 상이할 수 있으므로, 파일시스템 식별 결과를 반영하는 기준 정보를 이용하여 데이터 추출 및 복원 장치는 적절한 복원 방안을 선택하여 복원 대상 데이터에 대한 데이터 복원을 진행할 수 있다. 예시적으로 Tizen 운영체제의 VDFS 파일시스템을 사용하는 대상 디바이스에 대한 복원 대상 데이터에 대한 데이터 복원 시, 데이터 추출 및 복원 장치는 메타데이터 분석을 통해 VDFS 파일시스템의 삭제된 데이터의 저장 구조의 파악이 필요하며, 분석 결과 VDFS는 과거의 데이터를 삭제하지 않고 상태 그대로인 스냅샷 (Snapshot) 형태로 보관하는 것을 확인하고, 탐색 대상 데이터에 대한 데이터 추출 결과에 따라 'data offset' 메타데이터가 존재하지 않는 레코드를 식별하고, 식별된 레코드들의 고유 번화와 동일한 메타데이터인 오브젝트 ID(Object ID)의 검색을 통해 스냅샷 형태로 저장된 삭제 전 상태의 레코드를 식별할 수 있다. 이어서, 데이터 추출 및 복원 장치는 식별된 레코드(대상 레코드)의 'data offset'을 통해 데이터 영역으로 이동하고, 데 이터 카빙 기법을 적용함으로써 삭제된 복원 대상 데이터에 대한 복원을 진행할 수 있다. 다른 예로, Linux 운영체제의 Ext4 파일시스템을 사용하는 대상 디바이스 또는 Android 운영체제의 Ext4 파일시스템을 사용하는 대상 디바이스에 대한 복원 대상 데이터에 대한 데이터 복원 시, 데이터 추출 및 복원 장치는 공식 문서를 통해 Ext4 파일시스템의 삭제된 데이터의 저장 구조인 저널 영역(journal area) 을 확인하고, 해당 저널 영역에 대상 디바이스로부터 삭제된 데이터가 보관됨을 파악하고, 탐색 대상 데이 터에 대한 데이터 추출 결과에 따라 extent offset 메타데이터가 존재하지 않는 inode를 식별할 수 있다. 또한, 데이터 추출 및 복원 장치는 대상 디바이스에서 삭제된 데이터의 백업 영역인 저널 영역으로 이동(접근)하여 대상 inode들의 고유 번호와 같은 메타데이터인 uid의 검색을 통해 백업된 inode를 식별하고, 대상 inode의 'extent offset'을 통해 데이터 영역으로 이동하고, 데이터 카빙 기법을 적용함으로써 삭제된 복 원 대상 데이터에 대한 복원을 진행할 수 있다. 이하에서는 도 4 내지 도 14를 참조하여 본원에서 개시하는 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원 기법과 연계된 실험예를 구체적으로 설명하도록 한다. 구체적으로 도 4 내지 도 14는 Tizen 플랫 폼의 VDFS 파일시스템이 적용된 대상 디바이스에 대한 데이터 추출 및 복원 과정을 설명하기 위한 도면이 다. 도 4는 본원에서 개시하는 데이터 추출 및 복원 기법과 연계된 실험예에서 사용된 Tizen 플랫폼의 VDFS 파일시 스템이 적용된 대상 디바이스로서 스마트 TV 타입의 ‘KU43T5300AFXKR’ 모델의 PCB 분석 결과를나타내고, 도 5는 해당 대상 디바이스에 저장된 데이터의 파티션 구조를 나타낸다. 도 4 및 도 5를 참조하면, VDFS는 ‘VDFS2007’ 이라는 매직 넘버를 파티션 맨 앞 주소에 가지며, 이를 확인함 으로써 해당 파티션이 VDFS임을 알 수 있다. 또한, VDFS 파티션의 0x400 위치에서 수퍼블록(Superblock)을 확인 할 수 있고, 이러한 수퍼블록(Superblock)의 구조는 도 6에 도시되어 있다. 도 6을 참조하면, 수퍼블록(Superblock)으로부터 버전, 생성 시간, 볼륨 이름 등 파티션에 대한 기본적인 정보 를 확인할 수 있으며, 또한 기본 수퍼블록(Superblock) 뒤의 0x600 위치에 추가적인 정보가 존재하는 확장 수퍼 블록(Extended Superblock)이 존재할 수 있으며, 확장 수퍼블록(Extended Superblock)의 구조는 도 7에 도시되 어 있다. 도 7을 참조하면, 확장 수퍼블록(Extended Superblock)을 통해 해당 볼륨 내 존재하는 파일 수, 폴더 수, meta btree offset 등 저장된 데이터에 대한 정보를 획득할 수 있다. 이렇듯 Superblock의 분석을 통해 meta btree의 offset을 획득할 수 있으며, 획득한 주소로 이동하면 xattr tree, catalog tree, inode nitmap, fsm bitmap이 4개 블록 단위로 위치해 있다. Tree는 블록의 맨 앞에 '0x644E‘를 magic number로, bitmap은 각각 ‘inob', 'fsmb'를 매직 넘버(magic number)로 갖는다. 또한 xattr tree는 'XAre'를 매직 넘버(magic number)로 가진다. Xattr tree는 일반 파일이 아닌 확장속성과 접근제 어 등의 레코드가 저장되어 있고, Catalog tree에는 파일, 폴더, 파일 및 폴더의 레코드가 저장 되어 있다. Catalog tree에서는 파일 및 폴더 명을 확인할 수 있으며, 도 8은 Catalog tree의 airplay-service.md 파일의 레코드를 나타낸다. 한편, Catalog tree는 파일 및 폴더에 대한 정보가 담겨있으며, 도 9는 Catalog tree의 하나의 파일에 대한 구 조를 나타낸다. 도 9를 참조하면, 'Type'의 값을 통해 해당 데이터의 종류를 확인할 수 있으며, '0x01'일 경우 폴더, '0x02‘일 경우 파일, ‘0x05'일 경우 링크 레코드에 해당한다. 또한, 각각의 데이터는 key + record로 구성되는데, key에 는 이름, 타입, object id 등의 기본적인 정보가 존재할 수 있다. 이러한 레코드에는 파일 사이즈, 생성/수정/ 접근 시간, 데이터가 저장된 offset 주소 정보가 존재한다. 예외적으로 타입이 폴더일 경우, 파일 사이즈 대신 에 폴더에 존재하는 파일 개수의 정보가 존재하며, 링크 레코드의 경우 키(key) 값만 존재할 수 있다. 또한, VDFS는 파일시스템의 형태를 스냅숏을 사용하여 저장하는데, 스냅숏이란 파일 및 폴더의 데이터를 사진처 럼 저장하는 형태를 지칭하며, 이와 관련하여 도 10은 browser-data.db 파일의 데이터를 나타내며, 저장된 데이 터의 offset 주소가 다른 것을 확인할 수 있다. 이는 'browser-data.db' 파일이 수정되면서 내용이 변경되어 과 거의 파일은 스냅숏으로 저장되었음을 나타낸다. 이에 따라 각각의 파일에 해당하는 offset으로 이동(접근)하면 모두 해당 시점의 'browser-data.db' 파일의 데이터가 존재하며, 이처럼 본원에서 개시하는 데이터 추출 및 복 원 장치는 파일시스템의 스냅숏 기능을 통해 특정 파일(탐색 대상 데이터)을 추출하거나 삭제된 데이터(복 원 대상 데이터)를 복구할 수 있다. 또한, VDFS에서의 데이터 추출을 위해서는 catalog tree를 찾아야 하고, Catalog tree에 접근하기 위해서는 extended superblock에서 meta btree start offset을 찾아야 한다. 해당 offset에는 xattr tree, catalog tree, inode nitmap, fsm bitmap이 위치해 있는데, 이 중 catalog tree를 찾아 파일의 레코드를 확인할 수 있 다. 이와 관련하여 도 11은 8669.png 파일에 대한 레코드를 나타내며, 파일명, 파일 수정/생성 시간 및 파일 데 이터가 저장된 offset에 대한 정보가 존재하며, 추가로 데이터가 저장된 총 블록 개수와, 각 offset에 몇 개의 블록이 저장되어 있는지에 대한 정보도 존재하는 것을 확인할 수 있다. 이에 따라, 데이터 추출 및 복원 장치는 data offset을 나타내는 값(0xB3DD)에 블록 사이즈를 곱하여 데이 터가 저장된 offset을 파악할 수 있으며, 해당 offset으로 이동할 경우 도 12에 도시된 바와 같이 8669.png 파 일의 데이터가 존재하는 것을 확인할 수 있다. 그 후 데이터 추출 및 복원 장치는 데이터를 복사하고 파일 카빙(file carving)을 진행하여 파일을 추출할 수 있다. 또한, 전술한 바와 같이 VDFS의 경우 스냅숏 형태로 데이터가 저장되므로 삭제된 파일의 복구가 가능하며, Catalog tree에서 삭제된 파일명을 검색하거나, 조사 시에 파일 크기, 데이터가 저장된 offset 주소가 존재하지 않는 레코드를 확인할 수 있다. 이와 관련하여 도 13은 삭제된 8669.png 파일을 나타내며, 파일 크기 및 데이터 영역 offset 주소가 존재하지 않음을 확인할 수 있다. 해당 현상은 파일이 수정되거나 삭제되었을 경우에 나타 나게 된다. 그러나, VDFS의 경우 스냅숏 기능을 사용하기 때문에, 파일이 삭제된 후 새로운 스냅숏이 덮어 씌워 지지 않았으면, 과거에 저장된 스냅숏에 삭제된 파일의 정보가 존재할 수 있으므로, 데이터 추출 및 복원 장치는 과거의 스냅숏 정보를 통해 삭제된 데이터의 복구를 수행할 수 있다. 구체적으로 데이터 추출 및 복원 장치는 편집기(예를 들면, hxd 등)를 사용하여 복구를 원하는 파일의 정 보 또는 파일명 검색을 통해 과거에 저장된 스냅숏에서 원하는 파일 정보를 획득할 수 있다. 과거에 저장된 스 냅숏에는 도 14에 도시된 바와 같이 삭제된 8669.png 파일의 크기 및 데이터가 저장된 offset 값이 존재함을 알 수 있다. 따라서 해당 offset 주소로 이동하여 해당되는 영역의 데이터를 복사 및 저장하여 삭제된 파일의 복구 를 수행할 수 있다. 도 15는 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장 치의 개략적인 구성도이다. 도 15를 참조하면, 데이터 추출 및 복원 장치는 데이터 수집부, 디바이스 분석부, 데이터 추출 부 및 데이터 복원부를 포함할 수 있다. 데이터 수집부는 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려 하여 대상 디바이스와 연계된 분석 대상 데이터에 대한 수집 방식을 결정할 수 있다. 또한, 데이터 수집부는 결정된 수집 방식을 기초로 하여 대상 디바이스와 연계된 분석 대상 데이터를 수집할 수 있다. 본원의 일 실시예에 따르면, 대상 디바이스가 복수의 파티션으로 분할되는 기록 장치(예를 들면, 메모리 등)를 구비하는 유형의 디바이스이면, 데이터 수집부는 복수의 파티션 각각에 대응하는 파티션 데이터를 개별 수집할 수 있다. 디바이스 분석부는 데이터 수집부에 의해 수집된 분석 대상 데이터에 기초하여, 대상 디바이스 에 적용된 파일시스템의 유형에 대한 기준 정보를 식별할 수 있다. 구체적으로 디바이스 분석부는 수집된 분석 대상 데이터에 기초하여 대상 디바이스에 적용된 운영 체 제 정보를 식별하고, 식별된 운영 체제 정보를 고려하여 대상 디바이스에 적용된 파일시스템의 유형을 식 별할 수 있다. 데이터 추출부는 디바이스 분석부에 의해 식별된 기준 정보를 고려하여 분석 대상 데이터로부터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 추출된 메타데이터를 이용하여 분석 대상 데이터 중 에서 탐색 대상 데이터를 추출할 수 있다. 보다 구체적으로, 데이터 추출부는 대상 디바이스에 적용된 파일시스템에 대하여 확보된 구조 정보가 존재하는지 여부를 판단할 수 있다. 만일, 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재하면, 데이터 추출부는 기 확보된 구조 정보와 수집된 분석 대상 데이터를 상호 비교하여 탐색 대상 데이터의 저장 위치를 파악하고, 파악된 탐색 대상 데이터의 저장 위치로 접근(이동)하여 탐색 대상 데이터를 추출할 수 있다. 반대로, 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재하지 않으면, 데이터 추출 부는 해당 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이용하여 추정 되는 파일시스템의 구조 정보를 기초로 수집된 분석 대상 데이터로부터 메타데이터를 식별 및 분석하고, 메타데 이터에 대한 분석 결과를 이용하여 탐색 대상 데이터의 저장 위치에 접근(이동)하여 탐색 대상 데이터를 추출할 수 있다. 데이터 복원부는 데이터 추출부에 의해 도출된 메타데이터를 이용하여 대상 디바이스에서 삭제 된 복원 대상 데이터가 존재하는지 여부를 판단할 수 있다. 만일, 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는 것으로 판단되면, 데이터 복원부는 대 상 디바이스에 적용된 파일시스템에 대한 기준 정보를 고려하여 복원 대상 데이터를 복원할 수 있다. 이하에서는 상기에 자세히 설명된 내용을 기반으로, 본원의 동작 흐름을 간단히 살펴보기로 한다. 도 16은 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방 법에 대한 동작 흐름도이다. 도 16에 도시된 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법은 앞서 설명된 데이터 추출 및 복원 장치에 의하여 수행될 수 있다. 따라서, 이하 생략된 내용이라고 하더라도 데이터 추출 및 복원 장치에 대하여 설명된 내용은 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복 원을 위한 방법에 대한 설명에도 동일하게 적용될 수 있다. 도 16을 참조하면, 단계 S11에서 데이터 수집부는 대상 디바이스의 사양 정보 및 칩-오프(Chip-off) 가부 정보 중 적어도 하나를 고려하여 대상 디바이스와 연계된 분석 대상 데이터에 대한 수집 방식을 결정 할 수 있다. 다음으로 단계 S12에서 데이터 수집부는 단계 S11에서 결정된 수집 방식을 기초로 하여 대상 디바이스 와 연계된 분석 대상 데이터를 수집할 수 있다. 본원의 일 실시예에 따르면, 단계 S12에서 데이터 수집부는 대상 디바이스가 복수의 파티션으로 분할 되는 기록 장치(예를 들면, 메모리 등)를 구비하면, 복수의 파티션 각각에 대응하는 파티션 데이터를 개별 수집 할 수 있다. 다음으로 단계 S13에서 디바이스 분석부는 수집된 분석 대상 데이터에 기초하여, 대상 디바이스에 적 용된 파일시스템의 유형에 대한 기준 정보를 식별할 수 있다. 구체적으로 단계 S13에서 디바이스 분석부는 수집된 분석 대상 데이터에 기초하여 대상 디바이스에 적용된 운영 체제 정보를 식별할 수 있다. 또한, 단계 S13에서 디바이스 분석부는 식별된 운영 체제 정보를 고려하여 대상 디바이스에 적용된 파일시스템의 유형을 식별할 수 있다. 다음으로 단계 S14에서 데이터 추출부는 단계 S13에서 식별된 기준 정보를 고려하여 분석 대상 데이터로부 터 탐색 대상 데이터의 저장 위치와 연계된 메타데이터를 추출하고, 메타데이터를 이용하여 분석 대상 데이터 중에서 탐색 대상 데이터를 추출할 수 있다. 다음으로 단계 S15에서 데이터 복원부는 단계 S14에서 도출된 메타데이터를 이용하여 대상 디바이스 에서 삭제된 복원 대상 데이터가 존재하는지 여부를 판단할 수 있다. 만일 단계 S15의 판단 결과 대상 디바이스에서 삭제된 복원 대상 데이터가 존재하는 것으로 판단되면, 단 계 S16에서 데이터 복원부는 대상 디바이스에 적용된 파일시스템에 대한 기준 정보를 고려하여 복원 대상 데이터를 복원할 수 있다. 상술한 설명에서, 단계 S11 내지 S16은 본원의 구현예에 따라서, 추가적인 단계들로 더 분할되거나, 더 적은 단 계들로 조합될 수 있다. 또한, 일부 단계는 필요에 따라 생략될 수도 있고, 단계 간의 순서가 변경될 수도 있다. 도 17은 분석 대상 데이터로부터 메타데이터 및 탐색 대상 데이터 추출하는 프로세스에 대한 세부 동작 흐름도 이다. 도 17에 도시된 분석 대상 데이터로부터 메타데이터 및 탐색 대상 데이터 추출하는 프로세스는 앞서 설명된 데 이터 추출 및 복원 장치에 의하여 수행될 수 있다. 따라서, 이하 생략된 내용이라고 하더라도 데이터 추출 및 복원 장치에 대하여 설명된 내용은 도 17에 대한 설명에도 동일하게 적용될 수 있다. 도 17을 참조하면, 단계 S141에서 데이터 추출부는 대상 디바이스에 적용된 파일시스템에 대하여 확 보된 구조 정보가 존재하는지 여부를 판단할 수 있다. 만일 단계 S14의 판단 결과, 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재하지 않으면, 단계 S142에서 데이터 추출부는 해당 파일시스템과 관련된 개발 문서 및 코드 중 적어도 하나를 포함하는 참조 정보를 이용하여 추정되는 파일시스템의 구조 정보를 기초로 수집된 분석 대상 데이터로부터 메 타데이터를 식별 및 분석하고, 단계 S143에서 데이터 추출부는 메타데이터에 대한 분석 결과를 이용하여 탐색 대상 데이터의 저장 위치에 접근(이동)할 수 있다. 이와 달리 단계 S14의 판단 결과 대상 디바이스에 적용된 파일시스템에 대한 기 확보된 구조 정보가 존재 하면, 단계 S143에서 데이터 추출부는 기 확보된 구조 정보와 수집된 분석 대상 데이터를 상호 비교하여 탐색 대상 데이터의 저장 위치를 파악하고, 단계 S143에서 데이터 추출부는 파악된 탐색 대상 데이터의 저 장 위치에 접근(이동)할 수 있다. 다음으로 단계 S144에서 데이터 추출부는 탐색 대상 데이터를 수집된 분석 대상 데이터로부터 추출할 수 있다. 상술한 설명에서, 단계 S141 내지 S144는 본원의 구현예에 따라서, 추가적인 단계들로 더 분할되거나, 더 적은 단계들로 조합될 수 있다. 또한, 일부 단계는 필요에 따라 생략될 수도 있고, 단계 간의 순서가 변경될 수도 있 다. 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법은 다양 한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 본 발명을 위하여 특별히 설계되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하 드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체 (optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬 (ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치 가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리 터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상기된 하드웨어 장치는 본 발 명의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지 이다. 또한, 전술한 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방법은 기록 매체에 저 장되는 컴퓨터에 의해 실행되는 컴퓨터 프로그램 또는 애플리케이션의 형태로도 구현될 수 있다."}
{"patent_id": "10-2022-0190249", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "전술한 본원의 설명은 예시를 위한 것이며, 본원이 속하는 기술분야의 통상의 지식을 가진 자는 본원의 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 쉽게 변형이 가능하다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적이 아닌 것으로 이해해야만 한다. 예를 들어, 단일형으로 설명되어 있는 각 구성 요소는 분산되어 실시될 수도 있으며, 마찬가지로 분산된 것으로 설명되어 있는 구성 요소들도 결합된 형태로 실시될 수 있다. 본원의 범위는 상기 상세한 설명보다는 후술하는 특허청구범위에 의하여 나타내어지며, 특허청구범위의 의미 및 범위 그리고 그 균등 개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본원의 범위에 포함되는 것으로 해 석되어야 한다."}
{"patent_id": "10-2022-0190249", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본원의 일 실시예에 따른 지능형 IoT 기기 분석 시스템의 개략적인 구성도이다. 도 2a 및 도 2b는 대상 디바이스에 적용된 플랫폼의 유형에 따른 파일시스템의 구조를 예시적으로 나타낸 도면 이다. 도 3a 및 도 3b는 대상 디바이스에 적용된 파일시스템의 유형에 대한 기준 정보를 고려하여 탐색 대상 데이터를 추출하는 프로세스를 나타낸 도면이다. 도 4 내지 도 14는 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원 기법과 연계된 실험예를 설명하기 위한 도면이다. 도 15는 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 장 치의 개략적인 구성도이다. 도 16은 본원의 일 실시예에 따른 지능형 IoT 기기에 대한 파일 시스템 기반의 데이터 추출 및 복원을 위한 방 법에 대한 동작 흐름도이다. 도 17은 분석 대상 데이터로부터 메타데이터 및 탐색 대상 데이터 추출하는 프로세스에 대한 세부 동작 흐름도이다."}
