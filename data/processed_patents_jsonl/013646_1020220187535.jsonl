{"patent_id": "10-2022-0187535", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0105654", "출원번호": "10-2022-0187535", "발명의 명칭": "사용자 입력에 기반하여 이미지를 생성하는 장치", "출원인": "엔에이치엔 주식회사", "발명자": "이상현"}}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "사용자 입력에 기반하여, 이미지에 포함될 오브젝트들의 레이아웃을 나타내는 레이아웃 데이터를 획득하도록 구성되는 사용자 설정 데이터 생성기;상기 레이아웃 데이터를 토큰화하여 레이아웃 토큰들을 생성하도록 구성되는 레이아웃 인코더;상기 레이아웃 토큰들에 기반하여 상기 이미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나와 연관되는 세그멘테이션 토큰들을 생성하고, 상기 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 트랜스포머 디코더; 및상기 이미지 토큰들을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함하는 이미지 생성장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 레이아웃 데이터는 상기 오브젝트들에 각각 대응하는 클래스들을 나타내고,상기 레이아웃 토큰들은 상기 클래스들과 연관되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 트랜스포머 디코더는,상기 레이아웃 토큰들에 기반하여 상기 오브젝트들에 각각 대응하는 포지션들과 연관되는 추가적인 레이아웃 토큰들을 생성하고,상기 레이아웃 토큰들 및 상기 추가적인 레이아웃 토큰들에 기반하여 상기 세그멘테이션 토큰들을 생성하도록구성되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 레이아웃 데이터는 상기 오브젝트들에 각각 대응하는 클래스들, 그리고 상기 오브젝트들에 각각 대응하는포지션들을 나타내고,상기 레이아웃 토큰들은 상기 클래스들 및 상기 포지션들과 연관되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 사용자 설정 데이터 생성기는,상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신하고,상기 기준 이미지에 기반하여 상기 기준 오브젝트들의 레이아웃을 나타내는 기준 레이아웃 데이터를 생성하고,상기 기준 레이아웃 데이터를 상기 레이아웃 데이터로서 상기 레이아웃 인코더에 제공하도록 구성되는 이미지생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2024-0105654-3-제 1 항에 있어서,텍스트 데이터를 토큰화하여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더를 더 포함하고,상기 트랜스포머 디코더는 상기 텍스트 토큰들 및 상기 레이아웃 토큰들에 기반하여 상기 세그멘테이션 토큰들을 생성하도록 구성되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 트랜스포머 디코더는 상기 텍스트 토큰들, 상기 레이아웃 토큰들, 및 상기 세그멘테이션 토큰들에 기반하여 상기 이미지 토큰들을 생성하도록 구성되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6 항에 있어서,상기 텍스트 인코더는 바이트 페어 인코더(byte pair encoder)를 포함하는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "사용자 입력에 기반하여, 이미지에 포함될 오브젝트들의 레이아웃을 나타내는 레이아웃 데이터, 그리고 상기 이미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나를 나타내는 세그멘테이션 데이터를 획득하도록구성되는 사용자 설정 데이터 생성기;상기 레이아웃 데이터를 토큰화하여 레이아웃 토큰들을 생성하도록 구성되는 레이아웃 인코더;상기 세그멘테이션 데이터를 토큰화하여 세그멘테이션 토큰들을 생성하도록 구성되는 세그멘테이션 인코더;상기 레이아웃 토큰들 및 상기 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 트랜스포머 디코더; 및상기 이미지 토큰들을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함하는 이미지 생성장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 사용자 설정 데이터 생성기는,상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신하고,상기 기준 이미지에 기반하여 상기 기준 오브젝트들의 레이아웃을 나타내는 기준 레이아웃 데이터를 생성하고,상기 기준 레이아웃 데이터를 상기 레이아웃 데이터로서 상기 레이아웃 인코더에 제공하도록 구성되는 이미지생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9 항에 있어서,상기 사용자 설정 데이터 생성기는,상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신하고,상기 기준 이미지의 각 단위 영역이 표시하는 상기 기준 오브젝트들의 적어도 하나를 나타내는 기준 세그멘테이션 데이터를 생성하고,상기 기준 세그멘테이션 데이터를 상기 세그멘테이션 데이터로서 상기 세그멘테이션 인코더에 제공하도록 구성되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "공개특허 10-2024-0105654-4-제 9 항에 있어서,텍스트 데이터를 토큰화하여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더를 더 포함하고,상기 트랜스포머 디코더는 상기 텍스트 토큰들, 상기 레이아웃 토큰들, 및 상기 세그멘테이션 토큰들에 기반하여 상기 이미지 토큰들을 생성하도록 구성되는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 텍스트 인코더는 바이트 페어 인코더(Byte Pair Encoding)를 포함하는 이미지 생성 장치."}
{"patent_id": "10-2022-0187535", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "사용자 입력에 따라 획득된 텍스트 데이터를 토큰화하여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더;상기 텍스트 토큰들에 기반하여 이미지에 포함될 오브젝트들의 레이아웃과 연관되는 레이아웃 토큰들을 생성하고, 상기 레이아웃 토큰들에 기반하여 상기 이미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나와연관되는 세그멘테이션 토큰들을 생성하고, 상기 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록구성되는 트랜스포머 디코더; 및상기 이미지 토큰들을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함하는 이미지 생성장치."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "이미지 생성 장치는, 사용자 입력에 기반하여 이미지에 포함될 오브젝트들의 레이아웃을 나타내는 레이아웃 데이 터를 획득하도록 구성되는 사용자 설정 데이터 생성기, 레이아웃 데이터를 토큰화하여 레이아웃 토큰들을 생성하 도록 구성되는 레이아웃 인코더, 레이아웃 토큰들에 기반하여 이미지의 각 단위 영역이 표시할 오브젝트들의 적 어도 하나와 연관되는 세그멘테이션 토큰들을 생성하고 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하 도록 구성되는 트랜스포머 디코더, 그리고 이미지 토큰들을 디토큰화하여 이미지를 생성하도록 구성되는 이미지 디코더를 포함한다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 전자 장치에 관한 것으로, 좀 더 구체적으로는 사용자 입력에 기반하여 이미지를 생성하는 장치에 관 한 것이다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "과거에는 창작이 전문가의 영역으로 오랜 기간 동안 지속되어 왔으나, 정보 통신 기술의 발전, 통신 성능의 향 상, 컨텐츠 소비 문화의 변화 등으로 인해 점차 개인의 영역으로 확대되고 있는 추세이다. 또한 다양한 소셜 네 트워크 서비스(Social Network Service, SNS) 플랫폼들이 확산되면서, 과거와 달리 개인이 창작물을 전시할 수 있는 공간이 확대되었다. 예를 들면, 개인은 SNS 플랫폼, 블로그, 방송 등을 통해 창작물을 대중에게 쉽게 공개 할 수 있다. 컨텐츠를 제작을 위해, 개인은 아이디어 개발, 스케치, 편집 등 모든 과정을 직접 수행하고 있다. 만약 개인이 아이디어의 개발 이후의 과정들을 수행하는 데에 미숙하다면 그 과정들을 전문 편집기를 사용할 수 있는 전문가 에게 맡겨야 하며, 이러한 경우 개인은 상당한 비용을 지불해야 한다. 설사 개인이 전문 편집기를 사용할 수 있 다 하더라도, 해당 과장들을 수행하는 데에 상당한 시간이 소요될 수 있다. 위 기재된 내용은 오직 본 발명의 기술적 사상들에 대한 배경 기술의 이해를 돕기 위한 것이며, 따라서 그것은 본 발명의 기술 분야의 당업자에게 알려진 선행 기술에 해당하는 내용으로 이해될 수 없다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시 예들은 향상된 신뢰성으로 이미지를 자동적으로 생성할 수 있는 장치를 제공하기 위한 것이다. 예를 들면, 이미지 생성 장치는 사용자가 원하는 레이아웃을 나타내는 레이아웃 데이터를 사용자로부터 수신하 고, 수신된 레이아웃 데이터에 기반하여 토큰화 동작들을 수행하고, 토큰화된 데이터에 따라 이미지를 생성할 수 있다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시 예에 따른 이미지 생성 장치는, 사용자 입력에 기반하여, 이미지에 포함될 오브젝트들의 레이아 웃을 나타내는 레이아웃 데이터를 획득하도록 구성되는 사용자 설정 데이터 생성기; 상기 레이아웃 데이터를 토 큰화하여 레이아웃 토큰들을 생성하도록 구성되는 레이아웃 인코더; 상기 레이아웃 토큰들에 기반하여 상기 이 미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나와 연관되는 세그멘테이션 토큰들을 생성하고, 상 기 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 트랜스포머 디코더; 및 상기 이미지 토큰들을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함한다. 상기 레이아웃 데이터는 상기 오브젝트들에 각각 대응하는 클래스들을 나타낼 수 있고, 상기 레이아웃 토큰들은 상기 클래스들과 연관될 수 있다. 상기 트랜스포머 디코더는, 상기 레이아웃 토큰들에 기반하여 상기 오브젝트들에 각각 대응하는 포지션들과 연 관되는 추가적인 레이아웃 토큰들을 생성하고, 상기 레이아웃 토큰들 및 상기 추가적인 레이아웃 토큰들에 기반 하여 상기 세그멘테이션 토큰들을 생성하도록 구성될 수 있다. 상기 레이아웃 데이터는 상기 오브젝트들에 각각 대응하는 클래스들, 그리고 상기 오브젝트들에 각각 대응하는 포지션들을 나타낼 수 있고, 상기 레이아웃 토큰들은 상기 클래스들 및 상기 포지션들과 연관될 수 있다. 상기 사용자 설정 데이터 생성기는, 상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신할 수 있고, 상기 기준 이미지에 기반하여 상기 기준 오브젝트들의 레이아웃을 나타내는 기준 레이아웃 데이터를 생성할 수 있고, 상기 기준 레이아웃 데이터를 상기 레이아웃 데이터로서 상기 레이아웃 인코더에 제공하도록 구성될 수 있다. 상기 이미지 생성 장치는 텍스트 데이터를 토큰화하여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더를 더 포함할 수 있다. 상기 트랜스포머 디코더는 상기 텍스트 토큰들 및 상기 레이아웃 토큰들에 기반하여 상기 세그멘테이션 토큰들을 생성하도록 구성될 수 있다. 상기 트랜스포머 디코더는 상기 텍스트 토큰들, 상기 레이아웃 토큰들, 및 상기 세그멘테이션 토큰들에 기반하 여 상기 이미지 토큰들을 생성하도록 구성될 수 있다. 상기 텍스트 인코더는 바이트 페어 인코더를 포함할 수 있다. 본 발명의 다른 실시 예에 따른 이미지 생성 장치는, 사용자 입력에 기반하여, 이미지에 포함될 오브젝트들의 레이아웃을 나타내는 레이아웃 데이터, 그리고 상기 이미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나를 나타내는 세그멘테이션 데이터를 획득하도록 구성되는 사용자 설정 데이터 생성기; 상기 레이아웃 데이 터를 토큰화하여 레이아웃 토큰들을 생성하도록 구성되는 레이아웃 인코더; 상기 세그멘테이션 데이터를 토큰화 하여 세그멘테이션 토큰들을 생성하도록 구성되는 세그멘테이션 인코더; 상기 레이아웃 토큰들 및 상기 세그멘 테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 트랜스포머 디코더; 및 상기 이미지 토큰들을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함한다. 상기 사용자 설정 데이터 생성기는, 상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신하고, 상기 기준 이미지에 기반하여 상기 기준 오브젝트들의 레이아웃을 나타내는 기준 레이아웃 데이터를 생성하고, 상기 기준 레이아웃 데이터를 상기 레이아웃 데이터로서 상기 레이아웃 인코더에 제공하도록 구성될 수 있다. 상기 사용자 설정 데이터 생성기는, 상기 사용자 입력으로 기준 오브젝트들을 포함하는 기준 이미지를 수신하고, 상기 기준 이미지의 각 단위 영역이 표시하는 상기 기준 오브젝트들의 적어도 하나를 나타내는 기준 세그멘테이션 데이터를 생성하고, 상기 기준 세그멘테이션 데이터를 상기 세그멘테이션 데이터로서 상기 세그멘 테이션 인코더에 제공하도록 구성될 수 있다. 상기 이미지 생성 장치는 텍스트 데이터를 토큰화하여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더를 더 포함할 수 있다. 상기 트랜스포머 디코더는 상기 텍스트 토큰들, 상기 레이아웃 토큰들, 및 상기 세그멘테이 션 토큰들에 기반하여 상기 이미지 토큰들을 생성하도록 구성될 수 있다. 상기 텍스트 인코더는 바이트 페어 인코더를 포함할 수 있다. 본 발명의 또 다른 실시 예에 따른 이미지 생성 장치는, 사용자 입력에 따라 획득된 텍스트 데이터를 토큰화하 여 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더; 상기 텍스트 토큰들에 기반하여 이미지에 포함될 오브 젝트들의 레이아웃과 연관되는 레이아웃 토큰들을 생성하고, 상기 레이아웃 토큰들에 기반하여 상기 이미지의 각 단위 영역이 표시할 상기 오브젝트들의 적어도 하나와 연관되는 세그멘테이션 토큰들을 생성하고, 상기 세그멘테이션 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 트랜스포머 디코더; 및 상기 이미지 토큰들 을 디토큰화하여 상기 이미지를 생성하도록 구성되는 이미지 디코더를 포함한다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예들에 따르면, 향상된 신뢰성으로 이미지를 자동적으로 생성할 수 있는 장치가 제공된다. 실시 예들에 따른 효과는 이상에서 예시된 내용에 의해 제한되지 않으며, 더욱 다양한 효과들이 본 명세서 내에 포함되어 있다."}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명에 따른 바람직한 실시 예를 첨부한 도면을 참조하여 상세히 설명한다. 하기의 설명에서는 본 발 명에 따른 동작을 이해하는데 필요한 부분만이 설명되며 그 이외 부분의 설명은 본 발명의 요지를 모호하지 않 도록 하기 위해 생략될 것이라는 것을 유의하여야 한다. 또한 본 발명은 여기에서 설명되는 실시 예에 한정되지"}
{"patent_id": "10-2022-0187535", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "않고 다른 형태로 구체화될 수도 있다. 단지, 여기에서 설명되는 실시 예는 본 발명이 속하는 기술분야에서 통 상의 지식을 가진 자에게 본 발명의 기술적 사상을 용이하게 실시할 수 있을 정도로 상세히 설명하기 위하여 제 공되는 것이다. 명세서 전체에서, 어떤 부분이 다른 부분과 \"연결\"되어 있다고 할 때, 이는 \"직접적으로 연결\"되어 있는 경우뿐 아니라, 그 중간에 다른 소자를 사이에 두고 \"간접적으로 연결\"되어 있는 경우도 포함한다. 여기에서 사용된 용 어는 특정한 실시 예들을 설명하기 위한 것이며 본 발명을 한정하기 위한 것이 아니다. 명세서 전체에서, 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. \"X, Y, 및 Z 중 적어도 어느 하나\", 그리고 \"X, Y, 및 Z로 구성된 그룹으로부터 선택된 적어도 어느 하나\"는 X 하나, Y 하나, Z 하나, 또는 X, Y, 및 Z 중 둘 또는 그 이상의 어떤 조합 (예를 들면, XYZ, XYY, YZ, ZZ) 으로 해석될 수 있다. 여기에서, \"및/또는\"은 해 당 구성들 중 하나 또는 그 이상의 모든 조합을 포함한다. 여기에서, 제 1, 제 2 등과 같은 용어가 다양한 구성 요소들을 설명하기 위해 사용될 수 있지만, 이러한 구성 요소들은 이러한 용어들에 한정되지 않는다. 이러한 용어들은 하나의 구성 요소를 다른 구성 요소와 구별하기 위해 사용된다. 따라서, 제 1 구성 요소는 여기에 개시된 바를 벗어나지 않는 범위 내에서 제 2 구성 요소를 칭 할 수 있다. 도 1은 사용자 입력에 응답하여 이미지를 생성하기 위한 이미지 생성 장치를 보여주는 블록도이다. 도 1을 참조하면, 이미지 생성 장치는 사용자 입력(UI)을 수신한다. 사용자 입력(UI)에 따라, 예를 들면 \"The elephant is walking around in the park\"와 같은 텍스트 데이터가 정의될 수 있다. 예를 들면, 사용자는 키보드, 터치 스크린 등과 같은 사용자 입력 장치를 통해 사용자 입력(UI)이 수신될 수 있다. 이미지 생성 장치는 텍스트 데이터와 연관된 이미지(IMG)를 출력하도록 구성된다. 좀 더 구체적으로, 이미 지 생성 장치는 텍스트 데이터를 자동적으로 이미지화하도록 구성되는 텍스트 이미지 변환(text to image translation) 모델을 포함할 수 있다. 예를 들면, 이미지 생성 장치는 텍스트 데이터의 요소들(예를 들면, elephant, walking 등)로부터 텍스트 토큰들을 생성하도록 구성되는 텍스트 인코더, 텍스트 토큰들에 기반하여 이미지 토큰들을 생성하도록 구성되는 텍스트 이미지 변환 모델, 그리고 이미지 토큰들에 기반하여 이미지(IM G)를 생성하도록 구성되는 이미지 디코더를 포함할 수 있다. 도 2는 도 1의 이미지 생성 장치의 실시 예를 보여주는 블록도이다. 도 2를 참조하면, 이미지 생성 장치는 입력 인터페이스(210, input I/F), 텍스트 인코더(220, text encoder), 버퍼 메모리, 트랜스포머 디코더(240, transformer decoder), 및 이미지 벡터 양자화기(250, image vector quantizer)를 포함할 수 있다. 입력 인터페이스는 사용자 입력(UI)을 수신할 수 있다. 도 1을 참조하여 설명된 바와 같이, 사용자 입력 (UI)은 텍스트 데이터(TD), 예를 들면 \"The elephant is walking around in the park\"를 포함할 수 있다. 입력 인터페이스는 사용자 입력(UI)으로부터 텍스트 데이터(TD)를 획득하여 텍스트 인코더에 출력할 수 있 다. 텍스트 인코더는 입력 인터페이스에 연결된다. 텍스트 인코더는 텍스트 데이터(TD)에 대응하는 텍스트 토큰 세트(TTS)을 생성하도록 구성될 수 있다. 텍스트 토큰 세트(TTS)는 텍스트 데이터(TD), 예를 들면 \"The elephant is walking around in the park\"의 요소들 및/또는 특징들이 벡터화된 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)을 포함할 수 있다. 실시 예들에서, 텍스트 인코더는 텍스트 데이터(TD)를 인코딩(혹은 토큰화)하도록 구성되는 바이트 페어 인코더(byte pair encoder)를 포함할 수 있다. 실시 예들에서, 텍스트 데이터를 인코딩하여 양자화된 벡터값들 을 생성하도록 구성되는 인코더, 그리고 양자화된 벡터값들을 디코딩하여 텍스트 데이터를 생성하도록 구성되는 디코더를 포함하는 텍스트 벡터 양자화기가 제공될 수 있으며, 텍스트 벡터 양자화기의 인코더가 텍스트 인코더 로서 제공될 수 있다. 이러한 경우, 해당 인코더는 텍스트 데이터(TD)를 양자화하여 벡터값들을 출력할 수 있으며, 양자화된 벡터값들은 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)로서 제공될 수 있다. 텍스트 인코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)을 버퍼 메모리에 저장할 수 있다. 버퍼 메모리는 텍스트 인코더, 트랜스포머 디코더, 및 이미지 벡터 양자화기에 연결될 수 있다. 버퍼 메모리는 텍스트 인코더, 트랜스포머 디코더, 및 이미지 벡터 양자화기에 의해 액세스될 수 있으며, 그들의 워킹 메모리로서 기능할 수 있다. 실시 예들에서, 버퍼 메모리는 DRAM(Dynamic random access memory), SRAM(Static Random Access Memory) 등과 같은 저장 매체들을 포함하여 데이터를 저장할 수 있다. 트랜스포머 디코더는 버퍼 메모리에 연결된다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토 큰들(TT1~TTm)에 따라 다음의 데이터 토큰을 예측(혹은 생성)하도록 구성될 수 있다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 예측된 데이터 토큰에 따라 그 다음의 데이터 토큰을 예측하는 동작 을 반복함으로써, 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 생성할 수 있다. 예측되는 데이터 토큰들은 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp), 그리고 제 1 내지 제 q 이미지 토큰들(IT1~ITq)일 수 있다. 트랜스포머 디코더은 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)을 입력으로 수신하여 제 1 레이아웃 토큰 (LT1)을 생성할 수 있다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 생성된 제 1 레 이아웃 토큰(LT1)을 입력으로 수신하여 다음 레이아웃 토큰(LT2)을 생성할 수 있다. 이와 같은 방식으로, 트랜 스포머 디코더는 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn)을 순차적으로 생성할 수 있다. 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn)은 그것들이 디코딩(혹은 디토큰화)될 때 이미지(IMG)에 포함될 오브젝트들의 레이아 웃을 나타내는 레이아웃 데이터로 변환되는 데이터일 수 있다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 제 1 내지 제 n 레이아웃 토큰들 (LT1~LTn)을 입력으로 수신하여 제 1 세그멘테이션 토큰(ST1)을 생성할 수 있다. 트랜스포머 디코더는 제1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 및 생성된 제 1 세그멘테이션 토큰(ST1)을 입력으로 수신하여 다음 세그멘테이션 토큰(ST2)을 생성할 수 있다. 이와 같은 방식으로, 트랜스포 머 디코더는 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp)을 순차적으로 생성할 수 있다. 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp)은 그것들이 디코딩(혹은 디토큰화)될 때 이미지(IMG)의 각 단위 영역(예를 들면 하나의 유닛 픽셀)이 표시할 오브젝트를 나타내는 세그멘테이션 데이터로 변환되는 데이터일 수 있다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 및 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp)을 입력으로 수신하여 제 1 이미지 토큰(IT1)을 생성할 수 있 다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들 (LT1~LTn), 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp), 및 생성된 제 1 이미지 토큰(IT1)을 입력으로 수신 하여 다음 이미지 토큰(IT2)을 생성할 수 있다. 이와 같은 방식으로, 트랜스포머 디코더는 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 순차적으로 생성할 수 있다. 제 1 내지 제 q 이미지 토큰들(IT1~ITq)은 그것들이 디 코딩(혹은 디토큰화)될 때 이미지(IMG)로 변환되는 데이터일 수 있다. 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)에 뒤따르는 제 1 내지 제 n 레이아웃 토큰들 (LT1~LTn), 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp), 및 제 1 내지 제 q 이미지 토큰들(IT1~ITq)의 데이 터 스트링(string)을 도 2에 도시된 순서대로 순차적으로 예측하도록 학습될 수 있다. 실시 예들에서, 트랜스포 머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)에 따라 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn)을 순차적으로 예측하도록 학습될 수 있다. 실시 예들에서, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰 들(TT1~TTm) 및 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn)에 따라 제 1 내지 제 p 세그멘테이션 토큰들 (ST1~STp)을 순차적으로 예측하도록 학습될 수 있다. 그리고, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 그리고 제 1 내지 제 p 세그멘테이션 토큰들 (ST1~STp)에 따라 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 순차적으로 예측하도록 학습될 수 있다. 트랜스포머 디코더가 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)로부터 바로 이미지 토큰들을 예측하도록 구성된다 면, 이미지 토큰들은 상대적으로 낮은 신뢰성을 가질 수 있다. 예를 들면, 이미지 토큰들을 디코딩하여 생성된 이미지는 사용자가 원하는 이미지가 아닐 수 있다. 반면, 본 발명의 실시 예예 따른 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)로부터 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 제 1 내지 제 p 세그 멘테이션 토큰들(ST1~STp), 그리고 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 순차적으로 예측하도록 사전에 학 습함으로써, 상대적으로 높은 신뢰성을 갖는 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 제공할 수 있다. 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 디코딩하여 생성된 이미지(IMG)는 상대적으로 높은 확률로 사용자가 원하 는 이미지일 수 있다. 이미지 벡터 양자화기는 버퍼 메모리에 연결된다. 이미지 벡터 양자화기는 이 분야에 알려진 이 미지 인코더(IEN)와 이미지 디코더(IDE)를 포함할 수 있다. 이미지 인코더(IEN)는 이미지(혹은 이미지 데이터) 를 인코딩(혹은 토큰화)하여 양자화된 벡터값들을 생성하도록 구성될 수 있다. 이미지 디코더(IDE)는 양자화된 벡터값들을 디코딩(혹은 디토큰화)하여 이미지(IMG)를 생성하도록 구성될 수 있다. 이미지 벡터 양자화기는 이미지 디코더(IDE)를 이용하여 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 디코딩 할 수 있다. 이미지 디코더(IDE)는 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 양자화된 벡터값들로서 획득하고, 획득된 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 디코딩하여 이미지(IMG)를 생성하도록 구성될 수 있다. 실시 예에서, 이미지 인코더(IEN)는 사용되지 않을 수 있다. 도 3은 도 2의 트랜스포머 디코더의 실시 예를 보여주는 블록도이다. 도 3을 참조하면, 트랜스포머 디코더는 인공지능 모델 및 인공지능 프로세서를 포함할 수 있다. 인공지능 모델은 입력 데이터 토큰들(IDT)을 입력하면 출력 데이터 토큰(ODT)을 출력하도록 사전에 학습될 수 있다. 여기에서, 입력 데이터 토큰들(IDT)은 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 이전에 생성된 출력 데이터 토큰들을 포함할 수 있다. 예를 들면, 입력 데이터 토큰들(IDT)은 제 1 내지 제 n 레이아웃 토큰들 (LT1~LTn), 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp), 및 제 1 내지 제 q 이미지 토큰들(IT1~ITq) 중 직 전까지 생성된 출력 데이터 토큰들, 그리고 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)을 포함할 수 있다. 출력 데 이터 토큰(ODT)은 직전까지 생성된 출력 데이터 토큰들 다음의 데이터 토큰일 수 있다. 이와 같이, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm)에 따라, 제 1 내지 제 n 레이아웃 토큰들(LT1~LTn), 제 1 내지 제 p 세그멘테이션 토큰들(ST1~STp), 및 제 1 내지 제 q 이미지 토큰들(IT1~ITq)을 순차적으로 생성하도 록 사전에 학습될 수 있다.실시 예들에서, 인공지능 모델은 하나 또는 그 이상의 뉴럴 네트워크들(L1, L2, ... , L_k-1, L_k)을 포함 할 수 있다. 뉴럴 네트워크들(L1, L2, ... , L_k-1, L_k)은, 입력 데이터 토큰들(IDT)로서 텍스트 토큰들, 그리고 출력 데이 터 토큰들(ODT)로서 레이아웃 토큰들을 포함하는 제 1 학습 데이터를 사전에 학습할 수 있으며, 입력 데이터 토 큰들(IDT)로서 텍스트 토큰들과 레이아웃 토큰들, 그리고 출력 데이터 토큰들(ODT)로서 세그먼테이션 토큰들을 포함하는 제 2 학습 데이터를 사전에 학습할 수 있으며, 입력 데이터 토큰들(IDT)로서 텍스트 토큰들, 레이아웃 토큰들, 및 세그멘테이션 토큰들, 그리고 출력 데이터 토큰들(ODT)로서 이미지 토큰들을 포함하는 제 3 학습 데 이터를 사전에 학습할 수 있다. 인공지능 프로세서는 인공지능 모델을 제어하도록 구성된다. 인공지능 프로세서는 데이터 학습 부(321, data learning unit) 및 데이터 처리부(322, data processing unit)를 포함할 수 있다. 데이터 학습부 는 학습 데이터, 예를 들면 위 설명된 제 1 학습 데이터, 제 2 학습 데이터, 및 제 3 학습 데이터를 이용 하여, 입력 데이터 토큰들(IDT)이 인공지능 모델에 입력되면 해당 출력 데이터 토큰(ODT)이 출력되도록 인 공지능 모델을 학습시킬 수 있다. 데이터 처리부는 학습된 인공지능 모델에 입력 데이터 토큰들 (IDT)을 입력함으로써 출력 데이터 토큰(ODT)을 획득할 수 있다. 실시 예들에서, 인공지능 모델 및 인공지능 프로세서는 프로세서 및 메모리로 구현될 수 있다. 프로 세서는 싱글 코어, 듀얼 코어, 쿼드 코어 등과 같이 하나 또는 그 이상의 코어들을 포함할 수 있다. 프로세서는 프로그램 및/또는 명령어들을 메모리에 로드하고, 로드된 프로그램 및/또는 명령어들을 실행함으로써 인공지능 모델 및 인공지능 프로세서 각각을 제공할 수 있다. 도 4는 도 1의 이미지 생성 장치의 다른 실시 예를 보여주는 블록도이다. 도 4를 참조하면, 이미지 생성 장치는 제 1 입력 인터페이스(210, first input I/F), 텍스트 인코더 , 버퍼 메모리, 트랜스포머 디코더, 이미지 벡터 양자화기, 제 2 입력 인터페이스(460, second input I/F), 및 고객 설정 데이터 생성기를 포함할 수 있다. 텍스트 인코더, 버퍼 메모리, 트랜스포머 디코더, 및 이미지 벡터 양자화기는 도 2를 참조 하여 설명된 텍스트 인코더, 버퍼 메모리, 트랜스포머 디코더, 및 이미지 벡터 양자화기와 각각 마찬가지로 구성된다. 이하, 중복되는 설명은 생략된다. 제 1 입력 인터페이스는 제 1 사용자 입력(UI1)을 수신한다. 제 1 사용자 입력(UI1)은 도 2의 사용자 입력 (UI)과 마찬가지로 텍스트 데이터(TD)를 포함할 수 있다. 제 1 입력 인터페이스는 제 1 사용자 입력(UI1) 으로부터 텍스트 데이터(TD)를 획득하고, 획득된 텍스트 데이터(TD)를 텍스트 인코더에 제공할 수 있다. 제 1 입력 인터페이스는 도 2의 입력 인터페이스와 실질적으로 동일하게 기능할 수 있다. 제 2 입력 인터페이스는 제 2 사용자 입력(UI2)을 수신한다. 제 2 사용자 입력(UI2)은 레이아웃 데이터 (LD)를 포함할 수 있다. 레이아웃 데이터(LD)은 이미지(IMG)에 포함될 오브젝트들과 연관된 정보를 포함할 수 있다. 실시 예들에서, 레이아웃 데이터(LD)는 이미지(IMG)에 포함될 오브젝트들의 클래스(class)들을 나타내는 정보를 포함할 수 있다. 여기에서, 클래스는 해당 오브젝트의 종류(예를 들면, 코끼리, 나무, 하늘, 지면 등)를 나타내는 데이터일 수 있다. 실시 예들에서, 레이아웃 데이터(LD)는 이미지(IMG)에 포함될 오브젝트들의 포지션 (position)들을 나타내는 정보를 포함할 수 있다. 여기에서, 포지션은 각 오브젝트가 이미지(IMG) 상에서 위치 하는 영역을 나타내는 데이터일 수 있다. 사용자 설정 데이터 생성기는 제 2 입력 인터페이스로부터 레이아웃 데이터(LD)를 수신할 수 있다. 사용자 설정 데이터 생성기는 레이아웃 데이터(LD)를 인코딩(혹은 토큰화)하여 레이아웃 토큰 세트(LTS) 중 적어도 일부를 생성하도록 구성될 수 있다. 레이아웃 토큰 세트(LTS)는 레이아웃 데이터(LD)가 벡터화된 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')을 포함할 수 있다. 트랜스포머 디코더는 도 2의 트랜스포머 디코더와 마찬가지로 구성될 수 있다. 트랜스포머 디코더 는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')에 따라 제 1 내지 제 p 세그멘테이션 토큰들(ST1'~STp')을 순차적으로 예측할 수 있다. 그리고, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn'), 및 제 1 내지 제 p 세 그멘테이션 토큰들(ST1'~STp')에 따라 제 1 내지 제 q 이미지 토큰들(IT1'~ITq')을 순차적으로 예측할 수 있다. 이미지 벡터 양자화기는 이미지 디코더(IDE)를 이용하여 제 1 내지 제 q 이미지 토큰들(IT1'~ITq')을 디코 딩함으로써 이미지(IMG)를 생성할 수 있다. 위 설명된 바와 같이 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')은, 트랜스포머 디코더에 의해 예측되는 대신, 사용자로부터 제공된 레이아웃 데이터(LD)로부터 생성될 수 있다. 이에 따라, 제 1 내지 제 q 이미지 토 큰들(IT1'~ITq')은 사용자의 의도를 더 잘 반영할 수 있으며, 그에 기반하여 생성되는 이미지(IMG)도 사용자의 의도를 더 잘 반영할 수 있다. 따라서, 더 높은 신뢰성의 이미지(IMG)가 제공될 수 있다. 도 5는 도 4의 사용자 설정 데이터 생성기의 실시 예를 보여주는 블록도이다. 도 6은 도 5의 레이아웃 클래스 데이터의 일 예를 보여주는 개념도이다. 도 5를 참조하면, 사용자 설정 데이터 생성기는 컨트롤러(510, controller) 및 레이아웃 벡터 양자화기 (520, layout vector quantizer)를 포함할 수 있다. 컨트롤러는 도 4의 레이아웃 데이터(LD)로서 이미지(IMG, 도 4 참조)에 포함될 오브젝트들의 클래스들을 나타내는 레이아웃 데이터(LD_C, 이하 레이아웃 클래스 데이터)를 수신할 수 있다. 예를 들면, 레이아웃 클래스 데이터(LD_C)는 이미지(IMG)에 포함될 하나 또는 그 이상의 오브젝트들의 종류들을 나타내는 데이터일 수 있다. 도 6을 참조하면, 레이아웃 클래스 데이터(LD_C)는 제 1 오브젝트의 클래스(OBJC1), 제 2 오브젝트의 클래스 (OBJC2), 제 3 오브젝트의 클래스(OBJC3), 제 4 오브젝트의 클래스(OBJC4), 및 제 5 오브젝트의 클래스(OBJC 5)를 포함할 수 있다. 예를 들면, 제 1 내지 제 5 오브젝트들의 클래스들(OBJC1~OBJC5)은 각각 이미지(IMG)에 포함될 코끼리, 제 1 나무, 제 2 나무, 건물, 하늘을 나타낼 수 있다. 다시 도 5를 참조하면, 레이아웃 벡터 양자화기는 컨트롤러의 제어에 응답하여 동작할 수 있다. 레이 아웃 벡터 양자화기는 이 분야에 알려진 레이아웃 인코더(LEN) 및 레이아웃 디코더(LDE)를 포함할 수 있다. 레이아웃 인코더(LEN)는 레이아웃 클래스 데이터(LD_C)를 인코딩(혹은 토큰화)하여 양자화된 벡터값들을 생성하도록 구성될 수 있다. 레이아웃 디코더(LDE)는 양자화된 벡터값들을 디코딩(혹은 디토큰화)하여 레이아웃 클래스 데이터(LD_C)를 생성하도록 구성될 수 있다. 컨트롤러는 레이아웃 인코더(LEN)를 이용하여 레이아웃 클래스 데이터(LD_C)를 인코딩함으로써 제 1 내지 제 x 레이아웃 토큰들(LT1'~LTx')을 포함하는 제 1 레이아웃 토큰 세트(LTS1)를 생성할 수 있다(x는 n보다 작은 양의 정수). 좀 더 구체적으로, 레이아웃 인코더(LEN)는 레이아웃 클래스 데이터(LD_C)를 인코딩하여 양자화된 벡터값들을 생성하고, 생성된 양자화된 벡터값들을 제 1 내지 제 x 레이아웃 토큰들(LT1'~LTx')로서 제공할 수 있다. 제 1 내지 제 x 레이아웃 토큰들(LT1'~LTx')은 도 4의 제 1 내지 제 n 레이아웃 토큰들(LT1'~LT1n') 중 일부일 수 있다. 이러한 경우, 도 4의 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 제 1 내지 제 x 레 이아웃 토큰들(LT1'~LTx')에 따라 제 x+1 내지 제 n 레이아웃 토큰들(LTx+1'~LTn)을 순차적으로 예측할 수 있다. 이어서, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')에 따라 제 1 내지 제 p 세그멘테이션 토큰들(ST1'~STp')을 순차적으로 예측할 수 있다. 그리 고, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들 (LT1'~LTn'), 및 제 1 내지 제 p 세그멘테이션 토큰들(ST1'~STp')에 따라 제 1 내지 제 q 이미지 토큰들 (IT1'~ITq')을 순차적으로 예측할 수 있다. 도 7은 도 4의 사용자 설정 데이터 생성기의 다른 실시 예를 보여주는 블록도이다. 도 8은 도 7의 레이아웃 포 지션 데이터의 일 예를 보여주는 개념도이다. 도 7을 참조하면, 사용자 설정 데이터 생성기는 컨트롤러 및 레이아웃 벡터 양자화기를 포함할 수 있다. 컨트롤러는 레이아웃 클래스 데이터(LD_C), 그리고 이미지(IMG, 도 4 참조)에 포함될 오브젝트들의 포지션 들을 나타내는 레이아웃 데이터(LD_P, 이하 레이아웃 포지션 데이터)를 수신할 수 있다. 레이아웃 포지션 데이 터(LD_P)는 오브젝트들이 이미지(IMG) 상에서 위치할 영역들을 나타내는 데이터일 수 있다. 레이아웃 클래스 데 이터(LD_C)와 레이아웃 포지션 데이터(LD_P)는 도 4의 레이아웃 데이터(LD)로서 제공될 수 있다. 도 8을 참조하 면, 레이아웃 포지션 데이터(LD_P)는 제 1 내지 제 5 오브젝트들이 이미지(IMG) 상에서 위치할 영역들 (OBJP1~OBJP5)을 나타낼 수 있다. 이와 같이, 사용자는 레이아웃 포지션 데이터(LD_P)를 더 제공하여 오브젝트 들이 위치할 영역들을 설정할 수 있다. 각 영역은 이미지(IMG) 내 좌표, 사이즈 등을 통해 정의될 수 있다. 다시 도 7을 참조하면, 레이아웃 벡터 양자화기는 레이아웃 인코더(LEN) 및 레이아웃 디코더(LDE)를 포함 할 수 있다. 레이아웃 인코더(LEN)는 레이아웃 클래스 데이터(LD_C) 및 레이아웃 포지션 데이터(LD_P)를 인코딩 (혹은 토큰화)하여 양자화된 벡터값들을 생성하도록 구성될 수 있다. 레이아웃 디코더(LDE)는 양자화된 벡터값 들을 디코딩(혹은 디토큰화)하여 레이아웃 클래스 데이터(LD_C) 및 레이아웃 포지션 데이터(LD_P)를 생성하도록 구성될 수 있다. 컨트롤러의 제어에 응답하여, 레이아웃 인코더(LEN)는 레이아웃 클래스 데이터(LD_C)를 인코딩함으로써 제 1 내지 제 x 레이아웃 토큰들(LT1'~LTx')을 포함하는 제 1 레이아웃 토큰 세트(LTS1)를 생성할 수 있다. 컨트롤 러의 제어에 응답하여, 레이아웃 인코더(LEN)는 레이아웃 포지션 데이터(LD_P)를 인코딩함으로써 제 x+1 내지 제 n 레이아웃 토큰들(LTx+1'~LTn')을 포함하는 제 2 레이아웃 토큰 세트(LTS2)를 생성할 수 있다. 제 1 및 제 2 레이아웃 토큰 세트들(LTS1, LTS2)은 도 4의 레이아웃 토큰 세트(LTS)를 이룰 수 있다. 이러한 경우, 도 4의 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm) 및 제 1 내지 제 n 레 이아웃 토큰들(LT1'~LTn')에 따라 제 1 내지 제 p 세그멘테이션 토큰들(ST1'~STp')을 순차적으로 예측할 수 있 다. 이어서, 트랜스포머 디코더는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰 들(LT1'~LTn'), 및 제 1 내지 제 p 세그멘테이션 토큰들(ST1'~STp')에 따라 제 1 내지 제 q 이미지 토큰들 (IT1'~ITq')을 순차적으로 예측할 수 있다. 이와 같이, 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')은 레이아웃 데이터(LD)로부터 생성될 수 있다. 이에 따 라, 제 1 내지 제 q 이미지 토큰들(IT1'~ITq')은 사용자의 의도를 더 잘 반영할 수 있으며, 따라서 향상된 신뢰 성을 갖는 이미지(IMG)가 제공될 수 있다. 도 9는 도 4의 사용자 설정 데이터 생성기의 또 다른 실시 예를 보여주는 블록도이다. 도 9를 참조하면, 사용자 설정 데이터 생성기는 컨트롤러, 레이아웃 벡터 양자화기, 및 레이아 웃 추출기를 포함할 수 있다. 레이아웃 추출기는 기준 이미지(RIMG)를 수신할 수 있다. 레이아웃 추출기는 기준 이미지(RIMG)로부 터 레이아웃 데이터(LD)를 추출하도록 구성될 수 있다. 레이아웃 추출기는 이 분야에 알려진 다양한 알고 리즘들 중 적어도 하나를 이용하여 기준 이미지(RIMG)에 포함된 오브젝트(이하, 기준 오브젝트)들의 레이아웃을 나타내는 레이아웃 데이터(LD)를 추출할 수 있다. 추출된 레이아웃 데이터(LD)는 도 6에 예시된 레이아웃 클래 스 데이터(LD_C), 그리고 도 8에 예시된 레이아웃 포지션 데이터(LD_P)를 포함할 수 있다. 레이아웃 클래스 데 이터(LD_C)는 기준 오브젝트들의 클래스들을 나타낼 것이다. 레이아웃 포지션 데이터(LD_P)는 기준 오브젝트들 의 포지션들을 나타낼 것이다. 실시 예들에서, 레이아웃 추출기는 도 4의 제 2 입력 인터페이스로서 제공될 수 있다. 이러한 경우, 레이아웃 추출기는 기준 이미지(RIMG)를 제 2 사용자 입력(UI2)으로서 수신할 수 있다. 컨트롤러 및 레이아웃 벡터 양자화기는 각각 도 7의 컨트롤러 및 레이아웃 벡터 양자화기 와 마찬가지로 구성된다. 이에 따라, 제 1 레이아웃 토큰 세트(LTS1)의 제 1 내지 제 x 레이아웃 토큰들 (LT1'~LTx')과 제 2 레이아웃 토큰 세트(LTS2)의 제 x+1 내지 제 n 레이아웃 토큰들(LTx+1'~LTn')이 생성될 수 있다. 이와 같이, 사용자는 출력될 이미지(IMG)와 유사한 스타일의 이미지를 기준 이미지(RIMG)로서 제공할 수 있으며, 이에 따라 간편하게 레이아웃 데이터(LD)를 입력할 수 있다. 따라서, 향상된 사용자 편의성으로 레이아 웃 데이터(LD)를 입력 받을 수 있는 이미지 생성 장치가 제공될 수 있다. 도 10은 도 1의 이미지 생성 장치의 또 다른 실시 예를 보여주는 블록도이다. 도 11은 도 10의 세그먼트 데이터 의 일 예를 보여주는 개념도이다. 도 10을 참조하면, 이미지 생성 장치는 제 1 입력 인터페이스, 텍스트 인코더, 버퍼 메모리 , 트랜스포머 디코더, 이미지 벡터 양자화기, 제 2 입력 인터페이스, 제 1 사용자 설정 데이터 생성기(1070, first custom data generator), 및 제 2 사용자 설정 데이터 생성기(1080, second custom data generator)를 포함할 수 있다. 제 1 입력 인터페이스, 텍스트 인코더, 버퍼 메모리, 트랜스포머 디코더, 및 이미지 벡터 양자화기는 도 4를 참조하여 설명된 제 1 입력 인터페이스, 텍스트 인코더, 버퍼 메모리, 트랜스포머 디코더, 및 이미지 벡터 양자화기와 각각 마찬가지로 구성된다. 이하, 중복되는 설명은생략된다. 제 2 입력 인터페이스는 제 2 사용자 입력(UI2)을 수신한다. 도 4의 실시 예와 비교할 때, 제 2 사용자 입 력(UI2)은 세그멘테이션 데이터(SD)를 더 포함할 수 있다. 이와 같이, 사용자는 레이아웃 데이터(LD) 뿐만 아니 라 세그멘테이션 데이터(SD)를 제공할 수 있다. 세그멘테이션 데이터(SD)는 이미지(IMG)의 각 단위 영역이 표시할 오브젝트를 나타낼 수 있다. 도 11을 참조하 면, 세그멘테이션 데이터(SD)는 이미지(IMG)의 각 단위 영역(UA)이 나타내는 오브젝트(예를 들면, 코끼리, 나무, 건물, 하늘, 지면 등)에 대한 정보 혹은 오브젝트의 클래스에 대한 정보를 포함할 수 있다. 이와 같이, 세그멘테이션 데이터(SD)는 레이아웃 데이터(LD)보다 더 구체적인 이미지(IMG)에 대한 정보를 포함할 수 있다. 실시 예들에서, 단위 영역(UA)은 컬러와 계조를 나타낼 수 있는 픽셀일 수 있다. 실시 예들에서, 단위 영역(U A)은 다수의 픽셀들의 그룹일 수 있다. 이 밖에도, 단위 영역(UA)은 실시 예들에 따라 다양하게 변형될 수 있다. 제 1 사용자 설정 데이터 생성기는 제 2 입력 인터페이스로부터 레이아웃 데이터(LD)를 수신할 수 있다. 제 1 사용자 설정 데이터 생성기는 도 4의 사용자 설정 데이터 생성기와 마찬가지로 구성된다. 제 1 사용자 설정 데이터 생성기는 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn')을 포함하는 레 이아웃 토큰 세트(LTS)를 생성하도록 구성될 수 있다. 제 2 사용자 설정 데이터 생성기는 제 2 입력 인터페이스로부터 세그멘테이션 데이터(SD)를 수신할 수 있다. 제 2 사용자 설정 데이터 생성기는 세그멘테이션 데이터(SD)를 인코딩(혹은 토큰화)하여 제 1 내지 제 p 세그멘테이션 토큰들(ST1''~STp'')을 포함하는 세그멘테이션 토큰 세트(STS)를 생성하도록 구성될 수 있다. 트랜스포머 디코더는 도 4의 트랜스포머 디코더와 마찬가지로 구성될 수 있다. 트랜스포머 디코더 는 제 1 내지 제 m 텍스트 토큰들(TT1~TTm), 제 1 내지 제 n 레이아웃 토큰들(LT1'~LTn'), 그리고 제 1 내지 제 p 세그멘테이션 토큰들(ST1''~STp'')에 따라 제 1 내지 제 q 이미지 토큰들(IT1''~ITq'')을 순차적으로 예측할 수 있다. 이미지 벡터 양자화기는 이미지 디코더(IDE)를 이용하여 제 1 내지 제 q 이미지 토큰들(IT1''~ITq'')을 디 코딩함으로써 이미지(IMG)를 생성할 수 있다. 위 설명된 바와 같이, 사용자로부터 제공된 데이터(즉 LD 및 SD)로부터 제 1 내지 제 n 레이아웃 토큰들 (LT1'~LTn') 뿐만 아니라 제 1 내지 제 p 세그멘테이션 토큰들(ST1''~STp'')이 생성될 수 있다. 이에 따라, 제 1 내지 제 q 이미지 토큰들(IT1''~ITq'')은 사용자의 의도를 더욱 더 잘 반영할 수 있으며, 따라서 더욱 향상된 신뢰성을 갖는 이미지(IMG)가 제공될 수 있다. 도 12는 도 10의 제 1 및 제 2 사용자 설정 데이터 생성기들의 실시 예를 보여주는 블록도이다. 도 12를 참조하면, 사용자 설정 데이터 생성기는 제 1 컨트롤러, 레이아웃 벡터 양자화기, 레이아웃 추출기, 제 2 컨트롤러, 세그멘테이션 벡터 양자화기(1250, segmentation vector quantizer), 및 세그멘테이션 추출기(1260, segmentation extractor)를 포함할 수 있다. 제 1 컨트롤러, 레이아웃 벡터 양자화기, 및 레이아웃 추출기는 각각 도 9의 컨트롤러, 레이아웃 벡터 양자화기, 및 레이아웃 추출기와 마찬가지로 구성될 수 있다. 이하, 중복되는 설명은 생략된다. 제 1 컨트롤러 및 레이아웃 벡터 양자화기는 도 10의 제 1 사용자 설정 데이터 생성기 로서 제공될 수 있다. 세그멘테이션 추출기는 기준 이미지(RIMG)를 수신할 수 있다. 세그멘테이션 추출기는 기준 이미지 (RIMG)로부터 세그멘테이션 데이터(SD)를 추출하도록 구성될 수 있다. 세그멘테이션 데이터(SD)는 기준 이미지 (RIMG)의 각 단위 영역이 표시하는 기준 오브젝트에 대한 정보를 포함할 수 있다. 예를 들면, 세그멘테이션 추 출기는 도 11에 개념적으로 도시된 세그멘테이션 데이터(SD)를 제공할 수 있다. 세그멘테이션 추출기 는 이 분야에 알려진 다양한 알고리즘들 중 적어도 하나를 이용하여 기준 이미지(RIMG)로부터 세그멘테이 션 데이터(SD)를 추출할 수 있다. 실시 예들에서, 레이아웃 추출기 및 세그멘테이션 추출기는 도 10의 제 2 입력 인터페이스로 서 제공될 수 있다. 레이아웃 추출기 및 세그멘테이션 추출기 각각은 기준 이미지(RIMG)를 도 10의제 2 사용자 입력(UI2)으로서 수신할 수 있다. 제 2 컨트롤러는 세그멘테이션 추출기로부터 세그멘테이션 데이터(SD)를 수신할 수 있다. 제 2 컨 트롤러는 세그멘테이션 벡터 양자화기를 이용하여, 세그멘테이션 데이터(SD)로부터 세그멘테이션 토큰 세트(STS)를 생성할 수 있다. 세그멘테이션 벡터 양자화기는 이 분야에 알려진 세그멘테이션 인코더(SEN) 및 세그멘테이션 디코더(SD E)를 포함할 수 있다. 세그멘테이션 인코더(SEN)는 세그멘테이션 데이터(SD)를 인코딩(혹은 토큰화)하여 양자화 된 벡터값들을 생성하도록 구성될 수 있다. 세그멘테이션 디코더(SDE)는 양자화된 벡터값들을 디코딩(혹은 디토 큰화)하여 세그멘테이션 데이터(SD)를 생성하도록 구성될 수 있다. 제 2 컨트롤러의 제어에 응답하여, 세그멘테이션 인코더(SEN)는 세그멘테이션 데이터(SD)를 인코딩함으로 써 제 1 내지 제 p 세그멘테이션 토큰들(ST1''~STp'')을 생성할 수 있다. 세그멘테이션 인코더(SEN)는 세그멘테 이션 데이터(SD)를 인코딩하여 양자화된 벡터값들을 생성하고, 생성된 양자화된 벡터값들을 제 1 내지 제 p 세 그멘테이션 토큰들(ST1''~STp'')로서 제공할 수 있다. 제 1 내지 제 p 세그멘테이션 토큰들(ST1''~STp'')은 세 그멘테이션 토큰 세트(STS)를 이룰 수 있다. 제 2 컨트롤러와 세그멘테이션 벡터 양자화기는 도 10의 제 2 사용자 설정 데이터 생성기로 서 제공될 수 있다. 이와 같이, 사용자는 출력될 이미지(IMG)와 유사한 스타일의 이미지를 기준 이미지(RIMG)로서 제공할 수 있으며, 이에 따라 간편하게 레이아웃 데이터(LD) 및 세그멘테이션 데이터(SD)를 입력할 수 있다. 따라서, 향상 된 사용자 편의성으로 레이아웃 데이터(LD) 및 세그멘테이션 데이터(SD)를 입력 받을 수 있는 이미지 생성 장치 가 제공될 수 있다. 비록 특정 실시 예들 및 적용 례들이 여기에 설명되었으나, 다른 실시 예들 및 변형들이 위 기재로부터 도출될 수 있다. 따라서, 본 발명의 사상은 이러한 실시 예들에 한정되지 않으며, 아래 기재된 특허청구범위, 다양한 자명한 변형들, 그리고 균등물들에까지 미친다."}
{"patent_id": "10-2022-0187535", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 사용자 입력에 응답하여 이미지를 생성하기 위한 이미지 생성 장치를 보여주는 블록도이다. 도 2는 도 1의 이미지 생성 장치의 실시 예를 보여주는 블록도이다. 도 3은 도 2의 트랜스포머 디코더의 실시 예를 보여주는 블록도이다. 도 4는 도 1의 이미지 생성 장치의 다른 실시 예를 보여주는 블록도이다. 도 5는 도 4의 사용자 설정 데이터 생성기의 실시 예를 보여주는 블록도이다. 도 6은 도 5의 레이아웃 클래스 데이터의 일 예를 보여주는 개념도이다. 도 7은 도 4의 사용자 설정 데이터 생성기의 다른 실시 예를 보여주는 블록도이다. 도 8은 도 7의 레이아웃 포지션 데이터의 일 예를 보여주는 개념도이다. 도 9는 도 4의 사용자 설정 데이터 생성기의 또 다른 실시 예를 보여주는 블록도이다. 도 10은 도 1의 이미지 생성 장치의 또 다른 실시 예를 보여주는 블록도이다. 도 11은 도 10의 세그먼트 데이터의 일 예를 보여주는 개념도이다. 도 12는 도 10의 제 1 및 제 2 사용자 설정 데이터 생성기들의 실시 예를 보여주는 블록도이다."}
