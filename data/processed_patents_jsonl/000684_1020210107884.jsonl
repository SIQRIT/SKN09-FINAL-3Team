{"patent_id": "10-2021-0107884", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0026014", "출원번호": "10-2021-0107884", "발명의 명칭": "프루닝을 이용한 딥러닝 모델 경량화 방법 및 시스템", "출원인": "주식회사 노타", "발명자": "김태호"}}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 프로세서를 포함하는 컴퓨터 장치에 의해 수행되는 모델 경량화 방법에 있어서,상기 적어도 하나의 프로세서에 의해, 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하는 단계;상기 적어도 하나의 프로세서에 의해, 상기 채널의 중요도에 따라 채널별로 초기값을 할당하는 단계; 및상기 적어도 하나의 프로세서에 의해, 상기 할당된 초기값에 기초하여 목표 압축률에서 상기 딥러닝 모델의 압축을 개시하는 단계를 포함하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 적어도 하나의 프로세서에 의해, 상기 할당된 초기값에 기반한 가중치 마스크를 이용하여 구성된 손실함수에서 상기 딥러닝 모델의 임의의 채널에 대한 상기 가중치 마스크의 값에 따라 상기 임의의 채널에 대한 프루닝여부를 결정하는 단계를 더 포함하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 손실함수는 상기 딥러닝 모델의 훈련 정확도 향상을 위한 크로스엔트로피 손실(cross-entropy loss), 상기가중치 마스크 및 상기 가중치 마스크에 대한 L1 정규화(L1 regularization)를 이용하여 구성되는 것을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 L1 정규화는 상기 가중치 마스크에 대한 L1 놈(norm) 및 상기 손실함수에서 상기 L1 놈이 미치는 영향을조절하기 위한 하이퍼파라미터 간의 곱으로 구성되는 것을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2항에 있어서,상기 임의의 채널에 대한 프루닝 여부를 결정하는 단계는,상기 가중치 마스크의 값이 1인 경우 상기 임의의 채널을 계속 사용하는 것으로 결정하고 상기 가중치 마스크의값이 0인 경우 상기 임의의 채널을 프루닝하는 것으로 결정하는 것을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제2항에 있어서,상기 가중치 마스크는 온도 파라미터 및 마스크 변수의 곱을 입력 파라미터로 갖는 시그모이드(sigmoid) 함수로구성되고,상기 온도 파라미터는 상기 딥러닝 모델의 성능 향상에 상대적으로 더 큰 기여를 하는 채널에 상대적으로 더 큰가중치를 할당하기 위해, 상기 할당된 초기값과 상기 마스크 변수의 값에 따른 손실 변화도 간의 곱으로 결정되는 것공개특허 10-2023-0026014-3-을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 채널의 중요도를 결정하는 단계는,글로벌 프루닝 기법을 이용하여 상기 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하는 것을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 글로벌 프루닝 기법은 LAMP(Layer-Adaptive Magnitude-based Pruning)를 포함하는 것을 특징으로 하는 모델 경량화 방법."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "컴퓨터 장치와 결합되어 제1항 내지 제8항 중 어느 한 항의 방법을 컴퓨터 장치에 실행시키기 위해 컴퓨터 판독가능한 기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제8항 중 어느 한 항의 방법을 컴퓨터 장치에 실행시키기 위한 프로그램이 기록되어 있는 컴퓨터 판독 가능한 기록매체."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "컴퓨터 장치에서 판독 가능한 명령을 실행하도록 구현되는 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서에 의해,압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하고,상기 채널의 중요도에 따라 채널별로 초기값을 할당하고,상기 할당된 초기값에 기초하여 목표 압축률에서 상기 딥러닝 모델의 압축을 개시하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 적어도 하나의 프로세서에 의해,상기 할당된 초기값에 기반한 가중치 마스크를 이용하여 구성된 손실함수에서 상기 딥러닝 모델의 임의의 채널에 대한 상기 가중치 마스크의 값에 따라 상기 임의의 채널에 대한 프루닝 여부를 결정하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 손실함수는 상기 딥러닝 모델의 훈련 정확도 향상을 위한 크로스엔트로피 손실(cross-entropy loss), 상기가중치 마스크 및 상기 가중치 마스크에 대한 L1 정규화(L1 regularization)를 이용하여 구성되는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "공개특허 10-2023-0026014-4-제12항에 있어서,상기 임의의 채널에 대한 프루닝 여부를 결정하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 가중치 마스크의 값이 1인 경우 상기 임의의 채널을 계속 사용하는 것으로 결정하고 상기 가중치 마스크의값이 0인 경우 상기 임의의 채널을 프루닝하는 것으로 결정하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0107884", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서,상기 가중치 마스크는 온도 파라미터 및 마스크 변수의 곱을 입력 파라미터로 갖는 시그모이드(sigmoid) 함수로구성되고,상기 온도 파라미터는 상기 딥러닝 모델의 성능 향상에 상대적으로 더 큰 기여를 하는 채널에 상대적으로 더 큰가중치를 할당하기 위해, 상기 할당된 초기값과 상기 마스크 변수의 값에 따른 손실 변화도 간의 곱으로 결정되는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "프루닝을 이용한 딥러닝 모델 경량화 방법 및 시스템을 개시한다. 일실시예에 따른 딥러닝 모델 경량화 방법은, 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하는 단계, 상기 채널의 중요도에 따라 채널별로 초기 값을 할당하는 단계 및 상기 할당된 초기값에 기초하여 목표 압축률에서 상기 딥러닝 모델의 압축을 개시하는 단 계를 포함할 수 있다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 프루닝을 이용한 딥러닝 모델 경량화 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "딥러닝 모델(또는 인공지능 모델)은 우수한 성능을 보이고 있지만, 모델의 크기가 크고 연산량이 많아 실제 응 용에 적용되기에는 어려움이 많다. 딥러닝 모델을 실제 응용에 적용하기 위해서 이용되는 대표적인 방법으로는 딥러닝 모델 경량화 기법이 있다. 딥러닝 모델의 경량화는 주어진 딥러닝 모델을 더 작은 딥러닝 모델로 만드 는 함수, 모듈 및/또는 기능을 의미한다. 여기서, '작다'는 딥러닝 모델을 구성하는 가중치(weights/bias)의 수를 줄이거나, 용량을 줄이거나, 추론 속도를 빠르게 하는 것을 의미할 수 있다. 이때, 경량화를 진행하면서 성능을 하락시키지 않는 것이 매우 중요하다. 경량화 기법에는 다양한 종류가 있다. 큰 분류로는 프루닝(Network Pruning), 양자화(Quantization), 지식 증 류(Knowledge Distillation), 모델 탐색(Neural Architecture Search), 필터 분해(Filter Decomposition)가 있 으며, 각 분류 내에도 굉장히 다양한 종류의 경량화 기법이 존재한다. 이 중 프루닝은 대표적인 경량화 기법이 다. 프루닝 기법에는 크게 글로벌 프루닝(Global Pruning)과 로컬 프루닝(Local Pruning)이 있으며, 로컬 프루닝은 각 레이어별로 레이어 내의 가중치(weight)를 얼마나 프루닝해야 하는가에 대한 파라미터를 입력을 받은 뒤, 각 레이어에서 어떤 가중치를 프루닝할 지에 대한 결정을 내린다. 글로벌 프루닝의 경우에는 로컬 프루닝을 포함 하여 각 레이어별로 어느 정도의 가중치가 프루닝되어야 하는지 또한 결정한다. 글로벌 프루닝 기법 중 대표적인 방법으로는 그로잉(Growing), 오토슬림(AutoSlim), 뉴클리어 놈(Nuclear Norm) 등의 기법이 있다. 해당 기법들은 딥러닝 모델의 각 레이어의 최적의 채널 수가 몇 개인지 결정하는 방법론으 로, 그로잉은 각 레이어 내의 채널이 1일 때를 기준으로, 채널을 조금씩 늘려가며 채널 수를 탐색하고, 오토슬 림은 전체 모델을 학습한 후에 레이어별로 채널을 줄여가며 최적의 채널 수를 결정한다. 한편, 뉴클리어 놈의 경우에는 각 레이어별로 특징맵(feature map)의 특이치(singular value)의 뉴클리어 놈을 계산한 뒤, 특정 임계 값 이하의 값을 지니는 채널을 삭제하는 방식으로 프루닝을 진행한다. 해당 프루닝 기법을 활용해, 엣지 컴퓨팅(edge computing) 환경에서 추론을 하는 경우, 엣지 하드웨어의 환경에 제약이 있기 때문에, RAM(Random Access Memory), 메모리 크기, FLOPS(floating-point operations per second) 등에 제한을 받게 된다. 일례로, 앞서 설명한 글로벌 프루닝의 경우, FLOPS에 따라 제한된 수로 각 레이어별 채널 수를 조절하게 된다. 또한, 그로잉 기법은 레이어마다 한 개의 채널만 가진 상태로 딥러닝 모델의 압축을 시작하기 때문에, 최적의 네트워크에 도달하기까지 학습 시간이 오래 걸린다는 단점이 있다. 또한, 오토슬림 기법은 각 레이어별로 전체 네트워크를 학습하기 때문에, 역시 학습 시간이 오래 걸린다는 문제점이 있다. 뿐만 아니라, 뉴틀리어 놈의 경 우, 선학습된 가중치를 기준으로 프루닝을 진행하기 때문에 결과가 정교하지 못하다는 문제가 있다. [선행문헌번호] 한국공개특허 제10-2020-0023238호"}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "딥러닝 모델의 각 레이어마다 채널의 중요도를 고려하여 프루닝을 초기화함으로써, 딥러닝 모델의 학습 시간을 줄일 수 있는 딥러닝 모델 경량화 방법 및 시스템을 제공한다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "적어도 하나의 프로세서를 포함하는 컴퓨터 장치에 의해 수행되는 모델 경량화 방법에 있어서, 상기 적어도 하 나의 프로세서에 의해, 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하는 단계; 상기 적어도 하나 의 프로세서에 의해, 상기 채널의 중요도에 따라 채널별로 초기값을 할당하는 단계; 및 상기 적어도 하나의 프 로세서에 의해, 상기 할당된 초기값에 기초하여 목표 압축률에서 상기 딥러닝 모델의 압축을 개시하는 단계를 포함하는 모델 경량화 방법을 제공한다. 일측에 따르면, 상기 모델 경량화 방법은 상기 적어도 하나의 프로세서에 의해, 상기 할당된 초기값에 기반한 가중치 마스크를 이용하여 구성된 손실함수에서 상기 딥러닝 모델의 임의의 채널에 대한 상기 가중치 마스크의 값에 따라 상기 임의의 채널에 대한 프루닝 여부를 결정하는 단계를 더 포함할 수 있다. 다른 측면에 따르면, 상기 손실함수는 상기 딥러닝 모델의 훈련 정확도 향상을 위한 크로스엔트로피 손실 (cross-entropy loss), 상기 가중치 마스크 및 상기 가중치 마스크에 대한 L1 정규화(L1 regularization)를 이 용하여 구성되는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 L1 정규화는 상기 가중치 마스크에 대한 L1 놈(norm) 및 상기 손실함수에서 상기 L1 놈이 미치는 영향을 조절하기 위한 하이퍼파라미터 간의 곱으로 구성되는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 임의의 채널에 대한 프루닝 여부를 결정하는 단계는, 상기 가중치 마스크의 값이 1인 경우 상기 임의의 채널을 계속 사용하는 것으로 결정하고 상기 가중치 마스크의 값이 0인 경우 상기 임의의 채널을 프루닝하는 것으로 결정하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 가중치 마스크는 온도 파라미터 및 마스크 변수의 곱을 입력 파라미터로 갖는 시 그모이드(sigmoid) 함수로 구성되고, 상기 온도 파라미터는 상기 딥러닝 모델의 성능 향상에 상대적으로 더 큰 기여를 하는 채널에 상대적으로 더 큰 가중치를 할당하기 위해, 상기 할당된 초기값과 상기 마스크 변수의 값에 따른 손실 변화도 간의 곱으로 결정되는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 채널의 중요도를 결정하는 단계는, 글로벌 프루닝 기법을 이용하여 상기 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하는 것을 특징으로 할 수 있다. 또 다른 측면에 따르면, 상기 글로벌 프루닝 기법은 LAMP(Layer-Adaptive Magnitude-based Pruning)를 포함하 는 것을 특징으로 할 수 있다. 컴퓨터 장치와 결합되어 상기 방법을 컴퓨터 장치에 실행시키기 위해 컴퓨터 판독 가능한 기록매체에 저장된 컴 퓨터 프로그램을 제공한다. 상기 방법을 컴퓨터 장치에 실행시키기 위한 프로그램이 기록되어 있는 컴퓨터 판독 가능한 기록매체를 제공한 다. 컴퓨터 장치에서 판독 가능한 명령을 실행하도록 구현되는 적어도 하나의 프로세서를 포함하고, 상기 적어도 하 나의 프로세서에 의해, 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정하고, 상기 채널의 중요도에 따라 채널별로 초기값을 할당하고, 상기 할당된 초기값에 기초하여 목표 압축률에서 상기 딥러닝 모델의 압축을 개시하는 것을 특징으로 하는 컴퓨터 장치를 제공한다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "딥러닝 모델의 각 레이어마다 채널의 중요도를 고려하여 프루닝을 초기화함으로써, 딥러닝 모델의 학습 시간을 줄일 수 있다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예를 첨부한 도면을 참조하여 상세히 설명한다. 본 발명의 실시예들에 따른 딥러닝 모델 경량화 시스템은 적어도 하나의 컴퓨터 장치에 의해 구현될 수 있다. 이때, 컴퓨터 장치에는 본 발명의 일실시예에 따른 컴퓨터 프로그램이 설치 및 구동될 수 있고, 컴퓨터 장치는 구동된 컴퓨터 프로그램의 제어에 따라 본 발명의 실시예들에 따른 딥러닝 모델 경량화 방법을 수행할 수 있다. 상술한 컴퓨터 프로그램은 컴퓨터 장치와 결합되어 딥러닝 모델 경량화 방법을 컴퓨터에 실행시키기 위해 컴퓨 터 판독 가능한 기록매체에 저장될 수 있다. 도 1은 본 발명의 일실시예에 따른 컴퓨터 장치의 예를 도시한 블록도이다. 컴퓨터 장치(Computer device, 100)는 도 1에 도시된 바와 같이, 메모리(Memory, 110), 프로세서(Processor, 120), 통신 인터페이스 (Communication interface, 130) 그리고 입출력 인터페이스(I/O interface, 140)를 포함할 수 있다. 메모리 는 컴퓨터에서 판독 가능한 기록매체로서, RAM(random access memory), ROM(read only memory) 및 디스크 드라이브와 같은 비소멸성 대용량 기록장치(permanent mass storage device)를 포함할 수 있다. 여기서 ROM과 디스크 드라이브와 같은 비소멸성 대용량 기록장치는 메모리와는 구분되는 별도의 영구 저장 장치로서 컴 퓨터 장치에 포함될 수도 있다. 또한, 메모리에는 운영체제와 적어도 하나의 프로그램 코드가 저장 될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 메모리로 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 실 시예에서 소프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신 인터페이스를 통해 메모 리에 로딩될 수도 있다. 예를 들어, 소프트웨어 구성요소들은 네트워크(Network, 160)를 통해 수신되는 파일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 컴퓨터 장치의 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 인터페이스에 의해 프로세서로 제공될 수 있다. 예 를 들어 프로세서는 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행 하도록 구성될 수 있다. 통신 인터페이스은 네트워크를 통해 컴퓨터 장치가 다른 장치와 서로 통신하기 위한 기능을 제 공할 수 있다. 일례로, 컴퓨터 장치의 프로세서가 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 생성한 요청이나 명령, 데이터, 파일 등이 통신 인터페이스의 제어에 따라 네트워크를 통해 다른 장치들로 전달될 수 있다. 역으로, 다른 장치로부터의 신호나 명령, 데이터, 파일 등이 네트워크 를 거쳐 컴퓨터 장치의 통신 인터페이스를 통해 컴퓨터 장치로 수신될 수 있다. 통신 인 터페이스를 통해 수신된 신호나 명령, 데이터 등은 프로세서나 메모리로 전달될 수 있고, 파일 등은 컴퓨터 장치가 더 포함할 수 있는 저장 매체(상술한 영구 저장 장치)로 저장될 수 있다. 입출력 인터페이스는 입출력 장치(I/O device, 150)와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 입력 장치는 마이크, 키보드 또는 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피커와 같은 장치를 포함할 수 있다. 다른 예로 입출력 인터페이스는 터치스크린과 같이 입력과 출력을 위한 기능이 하나로 통합된 장치와의 인터페이스를 위한 수단일 수도 있다. 입출력 장치는 컴퓨터 장치와 하나의 장치로구성될 수도 있다. 또한, 다른 실시예들에서 컴퓨터 장치는 도 1의 구성요소들보다 더 적은 혹은 더 많은 구성요소들을 포함 할 수도 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 예를 들어, 컴퓨 터 장치는 상술한 입출력 장치 중 적어도 일부를 포함하도록 구현되거나 또는 트랜시버 (transceiver), 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수도 있다. 도 2는 본 발명의 일실시예에 따른 딥러닝 모델 경량화 시스템의 내부 구성의 예를 도시한 블록도이고, 도 3은 본 발명의 일실시예에 따른 딥러닝 모델 경량화 방법의 예를 도시한 흐름도이다. 본 실시예에 따른 딥러닝 모 델 경량화 시스템은 적어도 하나의 컴퓨터 장치에 의해 구현될 수 있다. 도 3의 딥러닝 모델 경량화 시스템은 채널 중요도 결정부, 채널 초기값 할당부, 압축 개시부 및 프루닝 여부 결정부 를 포함할 수 있다. 이때, 채널 중요도 결정부, 채널 초기값 할당부, 압축 개시부 및 프 루닝 여부 결정부는 딥러닝 모델 경량화 시스템을 구현하는 컴퓨터 장치의 프로세서가 컴 퓨터 프로그램의 제어에 따라 동작하는 기능의 기능적 표현(functional expression)일 수 있다. 일례로, 컴퓨 터 장치의 프로세서는 메모리가 포함하는 운영체제의 코드나 적어도 하나의 컴퓨터 프로그램의 코드에 따른 제어 명령(instruction)을 실행하도록 구현될 수 있다. 여기서, 프로세서는 컴퓨터 장치 에 저장된 코드가 제공하는 제어 명령에 따라 컴퓨터 장치가 도 3의 방법이 포함하는 단계들(310 내 지 340)을 수행하도록 컴퓨터 장치를 제어할 수 있다. 이때, 각 단계들(310 내지 340)의 수행을 위한 프 로세서의 기능적 표현으로서 채널 중요도 결정부, 채널 초기값 할당부, 압축 개시부 및 프 루닝 여부 결정부가 사용될 수 있다. 단계에서 채널 중요도 결정부는 압축할 딥러닝 모델의 각 레이어마다 채널의 중요도를 결정할 수 있 다. 일례로, 채널 중요도 결정부는 글로벌 프루닝 기법을 이용하여 상기 압축할 딥러닝 모델의 각 레이어 마다 채널의 중요도를 결정할 수 있다. 보다 구체적인 예로, 선택된 계층별 희소성을 사용하여 단순한 크기 기 반 프루닝이 아닌 희소성과 성능 사이의 최첨단 절충을 달성할 수 있는 프루닝 기법을 제공하는 LAMP(Layer- Adaptive Magnitude-based Pruning)가 각 레이어마다의 채널의 중요도를 결정하기 위해 사용될 수 있다. 단계에서 채널 초기값 할당부는 채널의 중요도에 따라 채널별로 초기값을 할당할 수 있다. 여기서 채널별로 할당되는 초기값은 추후 설명되는 온도 파라미터(temperature parameter)의 초기값이 될 수 있다. 단계에서 압축 개시부는 할당된 초기값에 기초하여 목표 압축률에서 딥러닝 모델의 압축을 개시할 수 있다. 앞서 설명한 바와 같이, 그로잉(growing) 기법은 레이어마다 한 개의 채널만 가진 상태로 딥러닝 모델의 압축을 시작하기 때문에, 최적의 네트워크에 도달하기까지 학습 시간이 오래 걸린다는 단점이 있다. 또한, 오 토슬림(AutoSlim) 기법은 각 레이어별로 전체 네트워크를 학습하기 때문에, 역시 학습 시간이 오래 걸린다는 문 제점이 있다. 반면, 본 실시예에 따른 딥러닝 모델 경량화 방법에서는 채널의 중요도에 따라 채널별로 초기값 을 할당한 후, 목표 압축률에서부터 딥러닝 모델의 압축을 개시할 수 있기 때문에 딥러닝 모델의 학습 시간을 최적화할 수 있다. 단계에서 프루닝 여부 결정부는 할당된 초기값에 기반한 가중치 마스크를 이용하여 구성된 손실함수 에서 딥러닝 모델의 임의의 채널에 대한 가중치 마스크의 값에 따라 임의의 채널에 대한 프루닝 여부를 결정할 수 있다. 일례로, 손실함수는 딥러닝 모델의 훈련 정확도 향상을 위한 크로스엔트로피 손실(cross-entropy loss), 가중치 마스크 및 가중치 마스크에 대한 L1 정규화(L1 regularization)를 이용하여 구성될 수 있다. 이때, 프루닝 여부 결정부는 가중치 마스크의 값이 1인 경우 임의의 채널을 계속 사용하는 것으로 결정하 고 가중치 마스크의 값이 0인 경우 임의의 채널을 프루닝하는 것으로 결정할 수 있다. 또한, L1 정규화는 가중치 마스크에 대한 L1 놈(norm) 및 손실함수에서 L1 놈이 미치는 영향을 조절하기 위한 하이퍼파라미터 간의 곱으로 구성될 수 있다. 또한, 가중치 마스크는 온도 파라미터 및 마스크 변수의 곱을 입력 파라미터로 갖는 시그모이드(sigmoid) 함수 로 구성될 수 있고, 온도 파라미터는 딥러닝 모델의 성능 향상에 상대적으로 더 큰 기여를 하는 채널에 상대적 으로 더 큰 가중치를 할당하기 위해, 할당된 초기값과 마스크 변수의 값에 따른 손실 변화도 간의 곱으로 결정 될 수 있다. 보다 구체적인 예로, 딥러닝 모델의 네트워크 손실(network loss)은 아래 수학식 1과 같이 계산될 수 있다. 수학식 1"}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, \"L\"은 딥러닝 모델의 손실(loss)을, \"f\"는 데이터 \"x\"를 입력으로 받는 딥러닝 모델을 각각 의미할 수 있다. 또한, \"L_CE\"는 딥러닝 모델 \"f\"의 학습 정확도를 향상시키기 위한 크로스엔트로피 손실(cross-entropy loss)를, \"w\"는 가중치를, \"σ(βs)\"는 가중치 마스킹의 역할을 수행하는 가중치 마스크일 수 있다. 이때, \"σ\"는 시그모이드(sigmoid) 함수를, \"β\" 온도 파라미터를, \"s\"는 마스크 변수일 수 있다. 또한, \"˚\"는 아다 마드 곱(Hadamard product, 또는 요소별 곱(Element-wise Product))을 의미할 수 있으며, \"||x||_1\"는 x에 대 한 L1 놈을 의미할 수 있다. 여기서, 온도 파라미터 \"β\"는 딥러닝 모델 \"f\"가 최적의 방향으로 학습되도록 스 케줄링될 수 있다. 온도 파라미터 \"β\"의 스케줄링에 대해서는 이후 더욱 자세히 설명한다. 이 경우, 프루닝 여부 결정부는 가중치 마스크 \"σ(βs)\"의 값이 1인 경우 임의의 채널을 계속 사용하는 것으로 결정하고 가중치 마스크 \"σ(βs)\"의 값이 0인 경우 임의의 채널을 프루닝하는 것으로 결정할 수 있다. \"λ_1\"는 손실에서 L1 놈이 미치는 영향을 조절하기 위한 하아퍼파라미터로 딥러닝 모델 \"f\"이 목표 희소성 (target sparsity)에 맞게 학습되도록 아래 수학식 2와 같이 스케줄링될 수 있다. 수학식 2"}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, \"λ_1 ^ base\"는 하이퍼파라미터들을, \"u\"는 목표 희소성을, \"u_c\"는 현재 희소성을 각각 의미할 수 있 다. 한편, 수학식 1에서 온도 파라미터 \"β\"는 값이 증가하는 경우 시그모이드 함수 \"σ\"의 기울기를 급격하게 만들 고 따라서, 가중치 마스크 \"σ(βs)\"를 이산(discrete) 값으로 수렴시키는 역할을 할 수 있다. 기존보다 학습 안정성 및 수렴 속도 향상을 위해 성능향상에 큰 기여를 하는 채널은 큰 가중치를 할당하여 학습과정에서 해당 채널이 계속 사용될 수 있도록 온도 파라미터 \"β\"를 스케줄링할 수 있다. 일례로 아래 수학식 3과 같이, 온도 파라미터 \"β\"는 초기값으로서의 \"β_0\"에 마스크 변수의 값에 따른 손실의 변환도를 곱해줌으로써, 해당 마스크의 변화가 손실에 큰 기여를 할수록 큰 가중치를 주는 방식을 채택할 수 있 다. 수학식 3"}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 4, "content": "도 4는 본 발명의 일실시예에 있어서, 목표 압축률에서부터 딥러닝 모델의 압축을 개시하는 예를 도시한 도면이 다. 도 4는 원래의 모델(Original model, 410)에 대해, 각 레이어들의 전체 채널에 대해 딥러닝 모델의 학습이 진행되는 예를 나타내고 있다. 될 수 있다. 또한, 도 4는 그로잉(Growing, 420) 기법에 대해, 레이어마다 한 개의 채널만 가진 상태로 딥러닝 모델의 압축을 시작하는 예를 나타내고 있다. 또한, 도 4는 오토슬림 (AutoSlim, 430) 기법에 대해 각 레이어별로 전체 네트워크를 학습하는 예를 나타내고 있다. 이러한 종래기술 들과 달리, 도 4는 본 실시예에 따라 제안된 방법(Proposed Method, 440)으로서, 채널의 중요도에 따라 채널별 로 초기값을 할당한 후, 목표 압축률에서부터 딥러닝 모델의 압축을 개시하는 예를 나타내고 있다. 이때, 각 채널별로, 목표 압축률에서부터 압축이 시작되기 때문에 각 레이어별로 보다 빠르게 최적의 채널 수를 결정하여 학습 시간을 줄일 수 있다. 이처럼, 본 발명의 실시예들에 따르면, 딥러닝 모델의 각 레이어마다 채널의 중요도를 고려하여 프루닝을 초기 화함으로써, 딥러닝 모델의 학습 시간을 줄일 수 있다.이상에서 설명된 시스템 또는 장치는 하드웨어 구성요소, 또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조 합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설"}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "명된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소 (processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치 는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터 는 하나 이상의 컴퓨터 판독 가능 기록매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등 을 단독으로 또는 조합하여 포함할 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트 워크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같 은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의 해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2021-0107884", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 청구범위와 균등한 것들도 후술하는 청구범위의 범위에 속한다. 도면 도면1 도면2 도면3 도면4"}
{"patent_id": "10-2021-0107884", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일실시예에 따른 컴퓨터 장치의 예를 도시한 블록도이다. 도 2는 본 발명의 일실시예에 따른 딥러닝 모델 경량화 시스템의 내부 구성의 예를 도시한 블록도이다. 도 3은 본 발명의 일실시예에 따른 딥러닝 모델 경량화 방법의 예를 도시한 흐름도이다. 도 4는 본 발명의 일실시예에 있어서, 목표 압축률에서부터 딥러닝 모델의 압축을 개시하는 예를 도시한 도면이 다."}
