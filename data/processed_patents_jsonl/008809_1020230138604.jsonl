{"patent_id": "10-2023-0138604", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0152201", "출원번호": "10-2023-0138604", "발명의 명칭": "이종 컴퓨팅 환경에서 분산 학습을 수행하는 전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "김태정"}}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "이종 컴퓨팅(Heterogeneous Computing) 환경에서 인공지능 모델의 분산 학습을 수행하는 전자 장치에 있어서,복수의 연산 노드와 통신을 수행하는 통신 인터페이스;상기 복수의 연산 노드에 대한 프로파일 정보와 적어도 하나의 명령어를 저장하는 메모리; 및상기 복수의 연산 노드 각각의 프로파일 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델및 학습 데이터를 분할하기 위한 가중치를 부여하고,상기 부여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하고,상기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상기 복수의 연산 노드를 제어하여 상기 인공지능 모델의 분산 학습을 수행하는 프로세서;를 포함하고,상기 프로세서는,상기 복수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각각이 처리할 수 있는 포맷의 데이터로 변환하고,상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는,상기 제1 연산 노드로부터 수신된 학습 결과 데이터를 기정의된 포맷의 데이터로 변환하고,상기 기정의된 유형의 데이터를 상기 제2 연산 노드가 처리할 수 있는 포맷의 데이터로 변환하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 프로파일 정보는, 상기 복수의 연산 노드를 구성하는 복수의 연산 노드의 성능 정보 및 상기 복수의 연산노드의 네트워크 속도 정보를 포함하고,상기 프로세서는,상기 복수의 연산 노드 각각의 성능 정보 및 네트워크 속도 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분배하기 위한 가중치를 부여하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 복수의 연산 노드에 부여된 가중치의 합에 대한 상기 복수의 연산 노드 각각에 부여된 가중치의 비율에 따라, 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 프로세서는,공개특허 10-2024-0152201-3-상기 가중치에 따라 상기 복수의 연산 노드 중 적어도 하나의 연산 노드에 할당된 인공지능 모델 및 학습 데이터의 크기가 상기 적어도 하나의 연산 노드의 메모리 용량을 초과하면, 상기 적어도 하나의 연산 노드에 상기적어도 하나의 노드의 메모리 용량만큼 상기 인공지능 모델 및 상기 학습 데이터가 분배되도록 상기 인공지능모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 연산 노드 각각이 상기 분배된 인공지능 모델을 학습시키는데 소요된 연산 시간을 식별하고,상기 복수의 연산 노드 각각의 연산 시간에 기초하여, 상기 분배된 인공지능 모델 및 상기 분할된 학습 데이터의 크기를 조정하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 연산 노드 중, 상기 분산 학습을 수행하기 위한 연산 노드를 선택하기 위한 사용자 입력을 획득하고,상기 선택된 연산 노드를 이용하여 상기 인공지능 모델의 분산 학습을 수행하는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 연산 노드의 학습 수행 시간을 식별하고,상기 복수의 연산 노드 중 상기 학습 수행 시간이 임계값 이상인 연산 노드를 식별하고,상기 연산 노드에 분배된 데이터를 감소시키는, 전자 장치."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "이종 컴퓨팅(Heterogeneous Computing) 환경에서 인공지능 모델의 분산 학습을 수행하는 전자 장치의 제어 방법에 있어서,복수의 연산 노드 각각의 프로파일 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분할하기 위한 가중치를 부여하는 단계;상기 부여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는단계; 및상기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상기 복수의 연산 노드를 제어하여 상기 인공지능 모델의 분산 학습을 수행하는 단계;를 포함하고,상기 분산 학습을 수행하는 단계는,상기 복수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각각이 처리할 수 있는 포맷의 데이터로 변환하고,상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,공개특허 10-2024-0152201-4-상기 제어 방법은,상기 제1 연산 노드로부터 수신된 학습 결과 데이터를 기정의된 포맷의 데이터로 변환하고,상기 기정의된 유형의 데이터를 상기 제2 연산 노드가 처리할 수 있는 포맷의 데이터로 변환하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에 있어서,상기 프로파일 정보는, 상기 복수의 연산 노드를 구성하는 복수의 연산 노드의 성능 정보 및 상기 복수의 연산노드의 네트워크 속도 정보를 포함하고,상기 가중치를 부여하는 단계는,상기 복수의 연산 노드 각각의 성능 정보 및 네트워크 속도 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분배하기 위한 가중치를 부여하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는 단계는,상기 복수의 연산 노드에 부여된 가중치의 합에 대한 상기 복수의 연산 노드 각각에 부여된 가중치의 비율에 따라, 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제9항에 있어서,상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는 단계는,상기 가중치에 따라 상기 복수의 연산 노드 중 적어도 하나의 연산 노드에 할당된 인공지능 모델 및 학습 데이터의 크기가 상기 적어도 하나의 연산 노드의 메모리 용량을 초과하면, 상기 적어도 하나의 연산 노드에 상기적어도 하나의 노드의 메모리 용량만큼 상기 인공지능 모델 및 상기 학습 데이터가 분배되도록 상기 인공지능모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 제어 방법은,상기 복수의 연산 노드 각각이 상기 분배된 인공지능 모델을 학습시키는데 소요된 연산 시간을 식별하는 단계;및상기 복수의 연산 노드 각각의 연산 시간에 기초하여, 상기 분배된 인공지능 모델 및 상기 분할된 학습 데이터의 크기를 조정하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제9항에 있어서,상기 제어 방법은,상기 복수의 연산 노드 중, 상기 분산 학습을 수행하기 위한 연산 노드를 선택하기 위한 사용자 입력을 획득하는 단계; 및상기 선택된 연산 노드를 이용하여 상기 인공지능 모델의 분산 학습을 수행하는 단계;를 더 포함하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "공개특허 10-2024-0152201-5-제9항에 있어서,상기 제어 방법은,상기 복수의 연산 노드의 학습 수행 시간을 식별하는 단계;상기 복수의 연산 노드 중 상기 학습 수행 시간이 임계값 이상인 연산 노드를 식별하는 단계; 및상기 연산 노드에 분배된 데이터를 감소시키는 단계;를 포함하는, 제어 방법."}
{"patent_id": "10-2023-0138604", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "이종 컴퓨팅(Heterogeneous Computing) 환경에서 인공지능 모델의 분산 학습을 수행하는 전자 장치의 제어 방법을 실행하는 프로그램을 포함하는 비일시적 컴퓨터 판독 가능 기록매체에 있어서,상기 제어 방법은,복수의 연산 노드 각각의 프로파일 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분할하기 위한 가중치를 부여하는 단계;상기 부여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는단계; 및상기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상기 복수의 연산 노드를 제어하여 상기 인공지능 모델의 분산 학습을 수행하는 단계;를 포함하고,상기 분산 학습을 수행하는 단계는,상기 복수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각각이 처리할 수 있는 포맷의 데이터로 변환하고,상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어하는, 비일시적 컴퓨터 판독 가능 기록 매체."}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "이종 컴퓨팅(Heterogeneous Computing) 환경에서 인공지능 모델의 분산 학습을 수행하는 전자 장치가 개시된다. 본 전자 장치는, 복수의 연산 노드와 통신을 수행하는 통신 인터페이스, 상기 복수의 연산 노드에 대한 프로파일 정보와 적어도 하나의 명령어를 저장하는 메모리; 및 상기 복수의 연산 노드 각각의 프로파일 정보에 기초하여, (뒷면에 계속)"}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 그 제어 방법에 관한 것으로, 더욱 상세하게는 이종 컴퓨팅 환경에서 분산 학습을 수행 하는 전자 장치 및 그 제어 방법에 관한 것이다."}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 더 높은 수준의 서비스를 위해 대규모의 데이터로 큰 규모의 딥러닝 모델을 원활히 학습해내는 것이 중요 해졌다. 하지만, 이러한 딥러닝 모델 학습은 원활히 처리되기엔 너무 높은 복잡도를 갖고 있어 긴 컴퓨팅 시간 이 드는 문제가 발생한다. 이와 같은 문제를 해결하기 위해, 먼저, 중앙 고성능 컴퓨팅 환경에서 복잡도 높은 딥러닝 모델 학습을 병렬 처 리하는 것이 가장 유망한 솔루션으로 제시되고 있다. 고성능 컴퓨팅 환경은 기존 중앙 처리 장치(CPU)만으로 구 성되는 일반적인 서버가 아니라 그래픽 처리 장치(GPU), 뉴럴 처리 장치(NPU)와 같은 연산 장치를 장착한 연산 노드를 클러스터 형태로 지원하고 있다. 여기서는 주로 데이터 병렬 처리 방식을 도입하여 각 연산 장치에 인공 지능 모델과 데이터를 분배하여 학습시킨 모델을 통합하는 방식을 취한다. 인공지능 모델을 훈련시키는 방법으로써, 컴퓨터 클러스터를 이용하여 인공지능 모델을 분산 컴퓨팅을 통해 훈 련시키는, 분산 학습이 활용되고 있다. 컴퓨터 클러스터를 이용하여 분산 학습을 수행하는 경우, 컴퓨터 클러스 터의 마스터 노드는 각각의 노드들로부터 훈련 결과를 취합하여 인공지능 모델을 훈련시킬 수 있다. 그러나 클 러스터 내 포함되는 노드들의 컴퓨팅 성능의 차이 또는, 네트워크 속도의 차이 등으로 인하여, 컴퓨터 클러스터"}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "내 일부 노드로부터 처리된 연산 결과의 획득이 지연되면, 전체 분산 학습의 과정에 지연이 발생할 수 있다.발명의 내용"}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 하나 이상의 실시예에 따른 전자 장치는 복수의 연산 노드와 통신을 수행하는 통신 인터페이스; 상기 복수의 연산 노드에 대한 프로파일 정보와 적어도 하나의 명령어를 저장하는 메모리; 및 상기 복수의 연산 노드 각각의 프로파일 정보에 기초하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분할하 기 위한 가중치를 부여하고, 상기 부여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수 의 연산 노드에 분배하고, 상기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상 기 복수의 연산 노드를 제어하여 상기 인공지능 모델의 분산 학습을 수행하는 프로세서;를 포함하고, 상기 프로 세서는, 상기 복수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각 각이 처리할 수 있는 포맷의 데이터로 변환하고, 상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어한다. 본 개시의 하나 이상의 실시예에 따른 전자 장치의 제어 방법은 복수의 연산 노드 각각의 프로파일 정보에 기초 하여, 상기 복수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분할하기 위한 가중치를 부여하는 단계; 상기 부여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하 는 단계; 및 상기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상기 복수의 연산 노드를 제어하여 상기 인공지능 모델의 분산 학습을 수행하는 단계;를 포함하고, 상기 분산 학습을 수행하는 단 계는, 상기 복수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각각 이 처리할 수 있는 포맷의 데이터로 변환하고, 상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어한다. 본 개시의 하나 이상의 실시예에 따른 전자 장치의 제어 방법을 실행하는 프로그램을 포함하는 비일시적 컴퓨터 판독 가능 기록매체에 있어서, 상기 제어 방법은, 복수의 연산 노드 각각의 프로파일 정보에 기초하여, 상기 복 수의 연산 노드 각각에 상기 인공지능 모델 및 학습 데이터를 분할하기 위한 가중치를 부여하는 단계; 상기 부 여된 가중치에 따라 상기 인공지능 모델 및 상기 학습 데이터를 상기 복수의 연산 노드에 분배하는 단계; 및 상 기 분배된 학습 데이터를 이용하여 상기 분할된 인공지능 모델을 학습시키도록 상기 복수의 연산 노드를 제어하 여 상기 인공지능 모델의 분산 학습을 수행하는 단계;를 포함하고, 상기 분산 학습을 수행하는 단계는, 상기 복 수의 연산 노드 중 제1 연산 노드로부터 수신된 학습 결과 데이터를 상기 복수의 연산 노드 각각이 처리할 수 있는 포맷의 데이터로 변환하고, 상기 변환된 데이터를 이용하여 상기 복수의 연산 노드 중 제2 연산 노드에 분 배된 인공지능 모델을 학습시키도록 상기 제2 연산 노드를 제어한다."}
{"patent_id": "10-2023-0138604", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는 바, 특정 실시 예들을 도면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하려는 것이 아니며, 본 개시의 실시 예의 다양한 변경(modifications), 균등물(equivalents), 및/또는 대체물(alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유 사한 참조 부호가 사용될 수 있다. 본 개시를 설명함에 있어서, 관련된 공지 기능 혹은 구성에 대한 구체적인 설명이 본 개시의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그에 대한 상세한 설명은 생략한다. 덧붙여, 하기 실시 예는 여러 가지 다른 형태로 변형될 수 있으며, 본 개시의 기술적 사상의 범위가 하기 실시 예에 한정되는 것은 아니다. 오히려, 이들 실시 예는 본 개시를 더욱 충실하고 완전하게 하고, 당업자에게 본 개시의 기술적 사상을 완전하게 전달하기 위하여 제공되는 것이다. 본 개시에서 사용한 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 권리범위를 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 개시에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 개시에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\"등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 개시에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직 접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 개시에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for),\" \"~하는 능력을 가지는(having the capacity to),\" \"~하도록 설계된(designed to),\" \"~하도 록 변경된(adapted to),\" \"~하도록 만들어진(made to),\" 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 설정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\"것 만을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메모리 장치에 저장된 하나 이상의 소프트 웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 실시 예에 있어서 '모듈' 혹은 '부'는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 '모듈' 혹은 복수의 '부'는 특정 한 하드웨어로 구현될 필요가 있는 '모듈' 혹은 '부'를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하 나의 프로세서로 구현될 수 있다. 한편, 도면에서의 다양한 요소와 영역은 개략적으로 그려진 것이다. 따라서, 본 발명의 기술적 사상은 첨부한 도면에 그려진 상대적인 크기나 간격에 의해 제한되지 않는다. 이하에서는 첨부한 도면을 참고하여 본 개시에 따른 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 도 1은 본 개시의 하나 이상의 실시예에 따른 분산 학습 시스템을 설명하기 위한 도면이다. 전자 장치는 분산 학습을 수행하기 위한 학습 데이터셋 및 학습 코드를 저장할 수 있다. 여기서, 학습 데이터셋 및 학습 코드는, 인공지능 모델을 학습시키기 위한 데이터일 수 있다. 그리고, 전자 장치는 복수의 연산 노드를 이용하여 데이터 병렬화(data parallelism)를 통해 학습된 인공지능 모델의 분산 학습을 수행할 수 있다. 연산 노드는 연산 자원을 제공하기 위한 적어도 하나의 연산 장치(예로, 가속기)를 포함할 수 있다. 구체적으로, 연산 장치는 인공지능 모델의 학습 및 추론을 수행하기 위한 장치를 의미할 수 있다. 예를 들어, 연산 장치는 GPU, CPU, APU, MIC, DSP, NPU, MPU, 하드웨어 연산 장치 또는 머신 러닝 연산 장치 중 하나 이상 을 포함할 수 있다. 이 때, 하나의 연산 노드는 동종의 연산 장치를 포함할 수 있다. 그리고, 복수의 연산 노드는 서로 이종의 연산 장치를 포함할 수 있다. 예를 들어서, 제1 연산 노드는 적어도 하나의 제1 연산 장치를 포함할 수 있다. 그리고, 제2 연산 노드는 적어도 하나의 제2 연산 장치를 포함할 수 있다. 그리고, 제3 연산 노드는 적어도 하 나의 제3 연산 장치를 포함할 수 있다. 이 때, 제1 연산 장치, 제2 연산 장치 및 제3 연산 장치의 종류가 상이 할 수 있다. 제1 연산 장치, 제2 연산 장치 및 제3 연산 장치는 연산 속도가 상이할 수 있다. 또는, 제1 연산 장치, 제2 연산 장치 및 제3 연산 장치의 메모리 용량이 상이할 수 있다. 또는, 제1 연산 장치, 제2 연산 장치 및 제3 연산 장치와 전자 장치 사이의 통신 속도가 상이할 수 있다. 전자 장치는 학습 데이터셋(11 2)을 분할하여 복수의 연산 노드 각각에 분배할 수 있다. 그리고, 복수의 연산 노드 각각에 분배된 학습 데이터셋을 이용하여, 전자 장치는 인공지능 모델 의 분산 학습을 수행할 수 있다. 즉, 전자 장치는 복수의 연산 노드 각각이 복수의 연산 노드 각각에 분배된 학습 데이터셋을 이용하 여 복수의 연산 노드를 제어할 수 있다. 그리고, 전자 장치는 복수의 연산 노드로부터 학습을 수행한 결과 를 수신하고, 수신된 결과를 종합하여 인공지능 모델을 학습시킬 수 있다. 또한, 도면에는 도시되지 않았지만, 본 개시의 하나 이상의 실시 예에 따른 전자 장치는 복수의 연산 노드 를 이용하여 모델 병렬화(model parallelism) 및 데이터 병렬화(data parallelism)을 통해 인공지능 모델의 분 산 추론을 수행할 수 있다. 즉, 전자 장치는 학습이 완료되지 않은 인공지능 모델과 학습 데이터셋을 분할하여 복수의 연산 노드 각각에 분배할 수 있다. 복수의 연산 노드 각각에 분배된 인공지능 모델과 학습 데이터셋을 이용하여, 전자 장치는 인공 지능 모델의 분산 학습을 수행할 수 있다. 도 2a 및 도 2b는 본 개시의 하나 이상의 실시예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다. 도 2a 를 참조하면, 전자 장치는 메모리, 통신 인터페이스 및 프로세서를 포함할 수 있다. 전자 장치는 상기 구성요소 중 일부가 생략될 수 있으며, 다른 구성요소를 더 포함할 수 있다. 이 때, 복수의 연산 장치는 전자 장치에 포함될 수 있으나, 이는 일 실시예에 불과할 뿐, 전자 장치와 별도의 장치 로 구현될 수 있다. 그리고, 전자 장치는 서버로 구현될 수 있으나, 이에 한정되는 것은 아니다. 메모리는 전자 장치에 관한 적어도 하나의 명령어(instruction)를 저장할 수 있다. 메모리는 전 자 장치를 구동시키기 위한 O/S(Operating System)를 저장할 수 있다. 또한, 메모리는 본 개시의 다 양한 실시 예들에 따라 전자 장치가 동작하기 위한 각종 소프트웨어 프로그램이나 애플리케이션을 저장할 수 있다. 그리고, 메모리는 플래시 메모리(Flash Memory) 등과 같은 반도체 메모리나 하드디스크(Hard Disk) 등과 같은 자기 저장 매체 등을 포함할 수 있다. 구체적으로, 메모리는 본 개시의 다양한 실시 예에 따라 전자 장치가 동작하기 위한 각종 소프트웨어 모듈을 저장할 수 있으며, 프로세서는 메모리에 저장된 각종 소프트웨어 모듈을 실행하여 전자 장치 의 동작을 제어할 수 있다. 즉, 메모리는 프로세서에 의해 액세스되며, 프로세서에 의한 데이터의 독취/기록/수정/삭제/갱신 등이 수행될 수 있다. 한편, 본 개시에서 메모리라는 용어는 메모리, 프로세서 내 롬(미도시), 램(미도시) 또는 전자 장치에 장착되는 메모리 카드(미도시)(예를 들어, micro SD 카드, 메모리 스틱)를 포함하는 의미로 사용될수 있다. 메모리는 분산 학습 또는 분산 추론을 수행하기 위한 인공지능 모델을 저장할 수 있다. 이 때, 메모 리는 인공지능 모델을 학습시키기 위한 학습 데이터셋을 저장할 수 있다. 그리고, 메모리 는 인공지능 모델의 추론을 수행하기 위한 입력 데이터를 저장할 수 있다. 그리고, 통신 인터페이스는 회로(circuitry)를 포함하며, 외부 장치 및 서버와 통신할 수 있는 구성이다. 통신 인터페이스는 유선 또는 무선 통신 방식에 기초하여 외부 기기 또는 서버와 통신을 수행할 수 있다. 통신 인터페이스는 블루투스 모듈(미도시), 와이파이 모듈(미도시), IR(infrared) 모듈, LAN(Local Area Network) 모듈, 이더넷(Ethernet) 모듈 등을 포함할 수 있다. 여기서, 각 통신 모듈은 적어도 하나의 하드웨어 칩 형태로 구현될 수 있다. 무선 통신 모듈은 상술한 통신 방식 이외에 지그비(zigbee), USB(Universal Serial Bus), MIPI CSI(Mobile Industry Processor Interface Camera Serial Interface), 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced), 4G(4th Generation), 5G(5th Generation)등과 같은 다양한 무선 통신 규격에 따라 통신을 수행하는 적어도 하나의 통신 칩을 포함할 수 있다. 다만 이는 일 실시 예에 불과하며 통신 인터페이스는 다양한 통신 모듈 중 적어도 하나의 통신 모듈을 이용할 수 있다. 통신 인터페이스는 복수의 연산 노드를 구성하는 복수의 연산 장치와 연결될 수 있다. 통신 인터페이스 를 통해 복수의 연산 노드 각각에 분산 학습 또는 분산 추론을 수행하기 위한 인공지능 모델, 학습 데이터 및 입력 데이터 중 적어도 하나가 전송될 수 있다. 프로세서는 전자 장치의 전반적인 동작 및 기능을 제어할 수 있다. 구체적으로, 프로세서는 메 모리를 포함하는 전자 장치의 구성과 연결되며, 상술한 바와 같은 메모리에 저장된 적어도 하나 의 명령어를 실행함으로써, 전자 장치의 동작을 전반적으로 제어할 수 있다. 프로세서는 다양한 방식으로 구현될 수 있다. 예를 들어, 프로세서는 주문형 집적 회로(Application Specific Integrated Circuit, ASIC), 논리 집적 회로(Logic Integrated Circuit), 임베디드 프로세서, 마이콤 (Micom), 마이크로 프로세서, 하드웨어 컨트롤 로직, 하드웨어 유한 상태 기계(hardware Finite State Machine, FSM), 디지털 신호 프로세서(Digital Signal Processor, DSP) 중 적어도 하나로 구현될 수 있다. 특히, 프로세서는 하나 이상의 프로세서를 포함할 수 있다. 구체적으로, 하나 이상의 프로세서는 CPU(Central Processing Unit), GPU (Graphics Processing Unit), APU (Accelerated Processing Unit), MIC (Many Integrated Core), DSP (Digital Signal Processor), NPU (Neural Processing Unit), MPU(Main Processing Unit), 하드웨어 연산 장치 또는 머신 러닝 연산 장치 중 하나 이상을 포함할 수 있다. 하나 이상의 프로세서는 전자 장치의 다른 구성요소 중 하나 또는 임의의 조합을 제어할 수 있으며, 통신에 관한 동작 또는 데이터 처리를 수행할 수 있다. 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 프로그램 또는 명령어 (instruction)를 실행할 수 있다. 예를 들어, 하나 이상의 프로세서는 메모리에 저장된 하나 이상의 명령어를 실행함으로써, 본 개시의 일 실시 예에 따른 방법을 수행할 수 있다. 본 개시의 하나 이상의 실시예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 하나의 프로세서에 의해 수행될 수도 있고, 복수의 프로세서에 의해 수행될 수도 있다. 즉, 하나 이상의 실시예에 따른 방법에 의 해 제1 동작, 제2 동작, 제3 동작이 수행될 때, 제1 동작, 제2 동작, 및 제3 동작 모두 제1 프로세서에 의해 수 행될 수도 있고, 제1 동작 및 제2 동작은 제1 프로세서(예를 들어, 범용 프로세서)에 의해 수행되고 제3 동작은 제2 프로세서(예를 들어, 인공지능 전용 프로세서)에 의해 수행될 수도 있다. 하나 이상의 프로세서는 하나의 코어를 포함하는 단일 코어 프로세서(single core processor)로 구현될 수도 있 고, 복수의 코어(예를 들어, 동종 멀티 코어 또는 이종 멀티 코어)를 포함하는 하나 이상의 멀티 코어 프로세서 (multicore processor)로 구현될 수도 있다. 하나 이상의 프로세서가 멀티 코어 프로세서로 구현되는 경우, 멀 티 코어 프로세서에 포함된 복수의 코어 각각은 캐시 메모리, 온 칩(On-chip) 메모리와 같은 프로세서 내부 메 모리를 포함할 수 있으며, 복수의 코어에 의해 공유되는 공통 캐시가 멀티 코어 프로세서에 포함될 수 있다. 또 한, 멀티 코어 프로세서에 포함된 복수의 코어 각각(또는 복수의 코어 중 일부)은 독립적으로 본 개시의 하나 이상의 실시예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있고, 복수의 코어 전체(또 는 일부)가 연계되어 본 개시의 하나 이상의 실시예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수 행할 수도 있다. 본 개시의 하나 이상의 실시예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 멀티 코어 프로세서 에 포함된 복수의 코어 중 하나의 코어에 의해 수행될 수도 있고, 복수의 코어에 의해 수행될 수도 있다. 예를 들어, 하나 이상의 실시예에 따른 방법에 의해 제1 동작, 제2 동작, 및 제3 동작이 수행될 때, 제1 동작, 제2 동작, 및 제3 동작 모두 멀티 코어 프로세서에 포함된 제1 코어에 의해 수행될 수도 있고, 제1 동작 및 제2 동 작은 멀티 코어 프로세서에 포함된 제1 코어에 의해 수행되고 제3 동작은 멀티 코어 프로세서에 포함된 제2 코 어에 의해 수행될 수도 있다. 본 개시의 실시예들에서, 프로세서는 하나 이상의 프로세서 및 기타 전자 부품들이 집적된 시스템 온 칩 (SoC), 단일 코어 프로세서, 멀티 코어 프로세서, 또는 단일 코어 프로세서 또는 멀티 코어 프로세서에 포함된 코어를 의미할 수 있으며, 여기서 코어는 CPU, GPU, APU, MIC, DSP, NPU, 하드웨어 연산 장치 또는 기계 학습 연산 장치 등으로 구현될 수 있으나, 본 개시의 실시예들이 이에 한정되는 것은 아니다. 본 개시의 다양한 실시 예를 구현하기 위한 프로세서의 동작은 복수의 모듈을 통해 구현될 수 있다. 구체적으로, 본 개시에 따른 복수의 모듈에 대한 데이터는 메모리에 저장될 수 있고, 프로세서는 메 모리에 엑세스하여 복수의 모듈에 대한 데이터를 프로세서 내부의 메모리 또는 버퍼에 로딩한 후, 복 수의 모듈을 이용하여 본 개시에 따른 다양한 실시예를 구현할 수 있다. 다만, 본 개시에 따른 복수의 모듈 중 적어도 하나는 하드웨어로 구현되어 시스템 온 칩(system on chip)의 형 태로 프로세서내에 포함될 수도 있다. 또는, 본 개시에 따른 복수의 모듈 중 적어도 하나는 별도의 외부 장치로 구현될 수 있으며, 전자 장치 및 각 모듈은 통신을 수행하며 본 개시에 따른 동작을 수행할 수 있다. 한편, 도 2b를 참조하면, 본 개시의 하나 이상의 실시 예에 따른 전자 장치는 메모리, 통신 인터페이 스, 디스플레이, 사용자 인터페이스 및 프로세서를 포함할 수 있다. 메모리, 통신 인터페이스 및 프로세서에 대해서는 도 2a를 참조하여 설명한 바 있으므로, 중복 되는 설명은 생략한다. 디스플레이는 LCD(Liquid Crystal Display), OLED(Organic Light Emitting Diodes) 디스플레이, PDP(Plasma Display Panel) 등과 같은 다양한 형태의 디스플레이로 구현될 수 있다. 디스플레이내에는 a- si TFT(amorphous silicon thin film transistor), LTPS(low temperature poly silicon) TFT, OTFT(organic TFT) 등과 같은 형태로 구현될 수 있는 구동 회로, 백라이트 유닛 등도 함께 포함될 수 있다. 한편, 디스플레이 는 터치 센서와 결합된 터치 스크린, 플렉시블 디스플레이(flexible display), 3차원 디스플레이(3D display, three-dimensional dispaly) 등으로 구현될 수 있다. 또한, 본 개시의 일 실시 예에 따른, 디스플레 이는 이미지를을 출력하는 디스플레이 패널뿐만 아니라, 디스플레이 패널을 하우징하는 베젤을 포함할 수 있다. 특히, 본 개시의 일 실시 예에 따른, 베젤은 사용자 인터렉션을 감지하기 위한 터치 센서(미도시)를 포함 할 수 있다. 사용자 인터페이스는 버튼, 터치 패드, 마우스 및 키보드와 같은 장치로 구현되거나, 상술한 디스플레이 기능 및 조작 입력 기능도 함께 수행 가능한 터치 스크린으로도 구현될 수 있다. 여기서, 버튼은 전자 장치 의 본체 외관의 전면부나 측면부, 배면부 등의 임의의 영역에 형성된 기계적 버튼, 터치 패드, 휠 등과 같 은 다양한 유형의 버튼이 될 수 있다. 이하에서는 첨부된 도면을 참조하여, 본 개시에 따른 프로세서의 동작을 상세히 설명한다. 도 3은 본 개시의 하나 이상의 실시예에 따른 전자 장치가 데이터를 연산 노드에 분할하는 방법을 설명하기 위 한 도면이다. 도 3을 참조하면, 프로세서는 복수의 연산 노드의 프로파일 정보를 획득할 수 있다(S310). 구체적으로, 프 로세서는 복수의 연산 노드를 구성하는 복수의 연산 장치의 프로파일 정보를 획득할 수 있다. 즉, 복수의 연산 노드 각각의 프로파일 정보는 복수의 연산 노드 각각을 구성하는 복수의 연산 장치의 프로파일 정보를 의미할 수 있다. 이 때, 복수의 연산 노드를 구성하는 복수의 연산 장치는 통신 인터페이스를 통해 전자 장치와 연결된 연산 장치일 수 있다. 예를 들어서, 제1 연산 노드의 프로파일 정보는 제1 연산 노드를 구성하는 제1 연산 장치의 프로파일 정보를 의 미할 수 있다. 그리고, 제2 연산 노드의 프로파일 정보는 제2 연산 노드를 구성하는 제2 연산 장치의 프로파일 정보를 의미할 수 있다.메모리는 복수의 연산 장치 각각의 프로파일 정보를 저장할 수 있다. 그리고, 프로세서는 메모리 에 저장된 복수의 연산 장치 각각의 프로파일 정보를 로딩할 수 있다. 또는, 프로세서는 복수의 연산 장치로 프로파일 정보를 요청하고, 복수의 연산 장치로부터 복수의 연산 장치의 프로파일 정보를 수신할 수 있 다. 연산 장치의 프로파일 정보는 연산 장치의 속성 및 연산 장치의 성능에 대한 정보를 포함할 수 있다. 구체적으 로, 연산 장치의 프로파일 정보는 연산 장치의 식별 정보(예로, 연산 장치의 모델명), 연산 장치의 제조사 정보, 연산 장치의 연산 속도 정보, 연산 장치의 네트워크 속도 정보, 연산 장치의 메모리 용량 정보, 연산 장 치의 메모리 대역폭 정보, 연산 장치의 학습 방법 및 연산 장치가 처리 가능한 데이터 포맷 중 적어도 하나를 포함할 수 있다. 연산 장치의 식별 정보는 연산 장치의 명칭, 모델명 및 고유 번호 중 적어도 하나를 포함할 수 있다. 연산 장치의 연산 속도 정보는 연산 데이터의 타입에 따른 연산 장치의 연산 속도를 의미할 수 있다. 여기서, 연산 데이터의 타입은 연산 데이터의 부동 소수점을 의미할 수 있다. 예를 들어서, 연산 데이터의 타입은 FP16, FP32 또는 FP64일 수 있다. FP16은 정상 부동 소수점 수가 부호 비트, 5 지수 비트, 및 10 유효 숫자 비트로 표현되는 부동 소수점 포맷을 의미할 수 있다. FP32는, 정상 부동 소수점 수가 단일 비트, 8 지수 비트, 및 23 유효 숫자 비트로 표현되는 부동 소수점 포맷을 의미할 수 있다. FP64는, 정상 부동 소수점 수가 부호 비트, 11 지수 비트, 및 52 유효 숫자 비트로 표현되는 부동 소수점 포맷 을 의미할 수 있다. 연산 장치의 네트워크 속도 정보는, 전자 장치와 연산 장치 간의 통신 속도를 의미할 수 있다. 예를 들어 서, 전자 장치와 제1 연산 장치와의 네트워크 속도는 100Gbps일 수 있다. 그리고, 전자 장치와 제2 연산 장치와의 네트워크 속도는 1Gbps일 수 있다. 연산 장치의 학습 방법은, 머신 러닝 시 컴파일 수행 유무 여부를 의미할 수 있다. 즉, 연산 장치의 학습 방법 은 연산 장치가 머신 러닝 컴파일러 포함 유무를 의미할 수 있다. 도 4는 본 개시의 하나 이상의 실시예에 따른 연산 장치의 프로파일 정보를 설명하기 위한 도면이다. 도 4를 참조하면, 메모리는 연산 장치의 프로파일 정보를 저장할 수 있다. 이 때, 연산 장치의 제조 사는 A일 수 있다. 그리고, 연산 장치의 모델명은 S100일 수 있다. 연산 장치의 FP64 데이터의 연산 속도는 9.7 TFLOPS(Tera Floating-Point Operations Per Second)일 수 있다. 그리고, 연산 장치의 FP32 데이터의 연산 속 도는 19.5 TFLOPS일 수 있다. 그리고, 연산 장치의 FP16 데이터의 연산 속도는 312 TFLOPS일 수 있다. 그리고, 연산 장치의 메모리 용량은 80GB일 수 있다. 그리고, 연산 장치의 네트워크 속도는 100Gbps일 수 있다. 복수의 연산 노드 각각의 프로파일 정보에 기초하여, 프로세서는 복수의 연산 노드 각각에 가중치를 부여 할 수 있다(S320). 여기서, 가중치는 분산 학습 수행 시 인공지능 모델 및 학습 데이터를 분배하기 위한 가중치 를 의미할 수 있다. 또한, 가중치는 분산 추론 수행 시 인공지능 모델을 분배하기 위한 가중치를 의미할 수 있 다. 본 개시의 하나 이상의 실시예에 따르면, 복수의 연산 노드의 연산 속도에 기초하여, 프로세서는 복수의 연산 장치 각각에 가중치를 부여할 수 있다. 여기서, 연산 노드의 연산 속도는 연산 노드를 구성하는 연산 장치의 연산 속도를 의미할 수 있다. 이 때, 연산 속도는 연산 속도는 인공지능 모델을 구성하는 파라미터의 비트 정밀도의 데이터의 연산 속도를 의미할 수 있다. 예를 들어서, 인공지능 모델을 구성하는 파라미터의 비트 정밀도가 FP64이면, 복수의 연산 노드의 FP64 데이터 의 연산 속도에 기초하여, 프로세서는 복수의 연산 장치 각각에 대해 인공지능 모델 및 학습 데이터를 분 배하기 위한 가중치를 부여할 수 있다. 구체적으로, 프로세서는 아래의 수학식 1에 따라 복수의 연산 노드 각각에 가중치를 부여할 수 있다. 수학식 1 연산 노드의 가중치 = a * 연산 노드를 구성하는 연산 장치의 연산 속도 * 연산 노드를 구성하는 연산 장치의 수여기서, a는 임의의 실수일 수 있다. 예를 들어, a는 1이고, 제1 연산 노드를 구성하는 제1 연산 장치의 FP64 데이터 처리 속도가 9.7 TFLOPS이고, 제2 연산 노드를 구성하는 제2 연산 장치의 FP64 데이터 처리 속도가 90.5 TFLOPS일 수 있다. 그리고, 제1 연산 노드는 2개의 제1 연산 장치를 포함하고, 제2 연산 노드는 3개의 제2 연산 장치를 포함할 수 있다. 이 때, 프로 세서는 제1 연산 노드에 19.4의 가중치를 부여하고, 제2 연산 노드에 271.5의 가중치를 부여할 수 있다. 복수의 연산 노드와 전자 장치 사이의 통신 속도는 연산 노드마다 상이할 수 있다. 이 때, 연산 노드의 성 능 정보만을 기초로 연산 노드에 데이터가 분배되면, 네트워크 속도가 낮은 연산 노드에 의해 분산 학습 또는 분산 추론의 속도가 감소하는 문제가 발생할 수 있다. 본 개시의 하나 이상의 실시예에 따르면, 복수의 연산 노드의 연산 속도 및 복수의 연산 노드의 네트워크 속도 에 기초하여, 프로세서는 복수의 연산 장치 각각에 대해 가중치를 부여할 수 있다. 구체적으로, 프로세서는 아래의 수학식 2에 기초하여, 복수의 연산 장치 각각에 가중치를 부여할 수 있다. 수학식 2 연산 노드의 가중치 = (a * 연산 속도 + b * 네트워크 속도) * 연산 노드를 구성하는 연산 장치의 수 여기서, a와 b는 임의의 실수일 수 있다. 예를 들어서, a는 1이고, b는 0.01일 수 있다. 그리고, 제1 연산 노드는 2개의 제1 연산 장치를 포함할 수 있다. 제1 연산 장치의 연산 속도는 9.7 TFLOPS이고, 제1 연산 장치의 네트워크 속도는 200Gbps일수 있다. 제2 연산 장치의 연산 속도는 90.5 TFLOPS이고, 제2 연산 장치의 네트워크 속도는 100Gbps일 수 있다. 이 때, 프로 세서는 제1 연산 장치에 가중치를 2.6으로 부여하고, 제2 연산 장치에 가중치를 23.4로 부여할 수 잇다. 상술한 바와 같이, 연산 노드의 성능 및 연산 노드의 네트워크 속도에 기초하여, 연산 노드에 가중치가 부여됨 에 따라, 네트워크 속도가 낮은 연산 노드에 분배되는 데이터가 감소할 수 있다. 이에 따라, 네트워크 속도가 낮은 연산 노드에 의해 분산 학습 또는 분산 추론의 속도가 감소하는 문제가 해결될 수 있다. 한편, 복수의 연산 노드 각각에 가중치가 부여되면, 프로세서는 부여된 가중치에 따라 복수의 연산 노드에 데이터를 분배할 수 있다(S330). 이 때, 복수의 연산 노드에 분배되는 데이터는, 복수의 연산 노드 각각이 분산 학습 또는 분산 학습을 수행하기 위한 데이터일 수 있다. 즉, 프로세서는 부여된 가중치에 따라 복수의 연 산 노드에 분산 학습을 수행하기 위한 인공지능 모델 및 학습 데이터를 분배할 수 있다. 또는, 프로세서는 부여된 가중치에 따라 복수의 연산 노드에 분산 추론을 수행하기 위한 인공지능 모델을 분배할 수 있다. 구체적으로, 프로세서는 복수의 연산 노드에 부여된 가중치의 합에 대한 복수의 연산 노드 각각의 가중치 의 비율에 따라 데이터를 분배할 수 있다. 예를 들어, 분산 학습을 수행 시, 복수의 연산 노드에 부여된 가중치 전체의 합이 100이고, 제1 연산 노드에 부 여된 가중치가 2이면, 프로세서는 인공지능 모델의 2%와 학습 데이터의 2%를 제1 연산 노드에 분배할 수 있다. 한편, 부여된 가중치에 기초하여 일부 연산 노드에 분배된 데이터의 크기는 일부 연산 노드의 메모리 용량의 합 보다 클 수 있다. 이 때, 일부 연산 노드의 메모리 용량의 합은 일부 연산 노드를 구성하는 연산 장치의 메모리 용량의 합을 의미할 수 있다. 이 경우, 프로세서는 일부 연산 노드에 일부 연산 노드를 구성하는 일부 연 산 장치의 메모리 용량의 합만큼 데이터가 분배되도록, 복수의 연산 노드에 분배되는 데이터의 크기를 조정할 수 있다. 구체적으로, 프로세서는 부여된 가중치에 기초하여 일부 연산 노드에 분배된 인공지능 모델 및 학습 데이 터 중 일부 연산 노드의 메모리 용량을 초과하는 초과 데이터를 복수의 연산 노드 중 일부 연산 노드를 제외한 나머지 연산 노드에 재분배할 수 있다. 이 때, 프로세서는 초과 데이터가 나머지 연산 노드의 가중치에 따 라 분배되도록, 복수의 연산 노드에 데이터를 분배할 수 있다. 복수의 연산 노드에 데이터가 분배되면, 프로세서는 분배된 데이터를 이용하여 분산 학습 또는 분산 추론 을 수행하도록 복수의 연산 노드를 제어할 수 있다(S340). 구체적으로, 복수의 연산 장치 각각에 학습 데이터와 인공지능 모델이 분배되면, 프로세서는 분배된 학습 데이터를 이용하여 분배된 인공지능 모델을 학습시키도록 복수의 연산 장치를 제어할 수 있다.또는, 복수의 연산 장치에 인공지능 모델이 분배되면, 프로세서는 입력 데이터와 복수의 연산 장치에 분배 된 인공지능 모델을 이용하여 분산 추론을 수행하도록 복수의 연산 노드를 제어할 수 있다. 한편, 분산 학습 또는 분산 추론을 수행하는 동안, 복수의 연산 노드 간에 데이터가 송수신 될 수 있다. 이 때, 복수의 연산 노드 간 송수신되는 데이터는, 특정 레이어에 대한 학습 결과로 획득된 학습 결과 데이터일 수 있 다. 여기서, 학습 결과 데이터는 특정 레이어에 대한 학습을 통해 획득된 그래디언트 및 특정 레이어에 대한 파 라미터 값 중 적어도 하나일 수 있으나, 이에 제한되는 것은 아니다. 예를 들어, 복수의 연산 노드 중 제2 연산 노드는 복수의 연산 노드 중 제1 연산 노드로부터 수신된 데이터를 이용하여 분산 학습 또는 분산 추론을 수행할 수 있다. 이 때, 복수의 연산 노드를 구성하는 연산 장치 각각의 데이터 프로토콜은 상이할 수 있다. 즉, 제1 연산 노드 를 구성하는 제1 연산 장치의 데이터 프로토콜과 제2 연산 노드를 구성하는 제2 연산 장치의 데이터 프로토콜이 상이할 수 있다. 이 경우, 제2 연산 노드로부터 수신된 데이터를 제1 연산 노드에서 처리할 수 없는 문제가 발 생할 수 있다. 구체적으로, 연산 노드 간 데이터 프로토콜이 상이하면, 연산 노드가 처리할 수 있는 데이터의 포맷이 상이할 수 있다. 여기서, 데이터의 포맷은 데이터를 표현하거나 저장하는 방식이나 규칙을 의미할 수 있다. 구체적으로, 데이터의 포맷은 데이터의 구조, 레이아웃, 인코딩 방식 등을 의미할 수 있다. 예를 들어, 데이터 의 포맷은 JSON, XML, CSV 등과 같은 오픈 포맷이거나, 독자적으로 정의된 규격을 따르는 포맷일 수 있다. 이 때, 데이터는 tensor 구조로 표현될 수 있으며, 사용 언어에 따라 tensor를 표현하는 방식이 달라질 수 있다. 상술한 문제를 해결하기 위해, 본 개시에 따른 전자 장치는 제1 연산 노드로부터 출력되는 데이터를 복수 의 연산 노드 각각이 처리할 수 있는 데이터로 변환하고, 변환된 데이터를 제2 연산 노드로 전송하여 제2 연산 노드가 분산 학습 또는 분산 추론을 수행하도록 제어할 수 있다. 즉, 본 개시에 따른 전자 장치는 복수의 연산 노드 중 하나로부터 출력되는 학습 결과 데이터를 복수의 연 산 노드 각각이 처리할 수 있는 범용 데이터 프로토콜(Universal Data Protocol)에 따른 데이터 포맷으로 변환 하여, 이종의 연산 노드의 분산 학습을 지원할 수 있다. 본 개시에 따른 전자 장치는 복수의 연산 노드가 송수신하는 데이터를 인코딩 및 디코딩하여 분산 학습 및 분산 추론을 수행할 수 있다. 즉, 본 개시에 따른 전자 장치는 제1 연산 노드로부터 출력되는 데이터의 포맷을 복수의 연산 노드 각각이 처리할 수 있는 포맷의 데이터로 변환하여 제2 연산 노드로 전송하고, 제2 연산 노드가 수신된 데이터를 이용하 여 분산 학습 또는 분산 추론을 수행하도록 제어할 수 있다. 이 때, 제1 연산 노드로부터 출력되는 데이터 중 변환되는 데이터는 제2 연산 노드가 분산 학습 또는 분산 추론 을 수행하기 위해 필요한 데이터일 수 있다. 도 5 및 도 6은 본 개시의 하나 이상의 실시예에 따른 전자 장치가 연산 노드 간 데이터 송수신을 지원하 는 방법을 설명하기 위한 도면이다. 도 5 및 도 6에서 제1 연산 노드, 제2 연산 노드 및 제3 연산 노드에 각각 분배된 인공지능 모 델의 레이어는 인공지능 모델을 구성하는 레이어 중 인접하는 레이어일 수 있다. 즉, 제1 연산 노드에 인공지능 모델을 구성하는 제n 레이어가 분배되고, 제2 연산 노드에 인공지능 모델을 구성하는 제n+1 레이어가 분배되고, 제3 연산 노드에 인공지능 모델을 구성하는 제n+2 레이어가 분배될 수 있다. 이 때, 제n 레이어의 출력 데이터 는 제n+1 레이어의 입력데이터일 수 있다. 그리고, 제n+1 레이어의 출력 데이터는 제n+2 레이어의 입력데이터일 수 있다. 여기서, n은 1이상의 자연수일 수 있다. 도 5는 순전파 방향(forward propagation)으로 분산 학습 수행 시, 복수의 연산 노드 간 데이터 흐름을 설명하 기 위한 도면이다. 도 5를 참조하면, 프로세서는 제(n-1)레이어가 분배된 연산 노드로부터 획득된 데이터를 제1 디코더(201 a)에 입력하여 제1 연산 노드가 처리할 수 있는 데이터 프로토콜로 변환할 수 있다. n이 1인 경우, 프로세서는 제1 연산 노드에 분배된 인공지능 모델 및 학습 데이터를 이용하여 학습을 수행하도록 제1 연산 노드를 제어할 수 있다.그리고, 프로세서는 제1 연산 노드로부터 출력된 제1 데이터를 제1 인코더(201b)에 입력하여, 제1 데 이터의 데이터 프로토콜을 기정의된 데이터 프로토콜로 변환할 수 있다. 이 때, 제1 인코더(201b)는 제1 연산 노드에 대응되는 인코더일 수 있다. 즉, 프로세서는 제1 연산 노드로부터 출력된 제1 데이터를 제1 인코더(201b)에 입력하여, 제1 데이터 의 데이터 포맷을 기정의된 데이터 포맷으로 변환할 수 있다. 이 때, 기정의된 데이터 포맷은, 복수의 연산 노 드 각각이 처리할 수 있는 포맷의 데이터일 수 있다. 이 때, 제1 연산 노드로부터 출력된 제1 데이터는 제n 레이어의 학습을 수행하여 획득된 학습 결과 데이터 값을 포함할 수 있다. 그리고, 프로세서는 기정의된 데이터 포맷으로 변환된 제1 데이터를 제2 디코더(202a)에 입력하여 제1 데 이터의 데이터 포맷을 제2 연산 노드가 처리할 수 있는 데이터 포맷으로 변환할 수 있다. 이에 따라, 제2 연산 노드는 제2 디코더(202a)가 출력한 데이터를 이용하여 제(n+1) 레이어의 학습을 수행할 수 있다. 그리고, 프로세서는 제2 연산 노드로부터 출력된 제2 데이터를 제2 인코더(202b)에 입력하여 제2 데 이터의 데이터 포맷을 기정의된 데이터 포맷으로 변환할 수 있다. 이 때, 제2 인코더(202b)는 제2 연산 노드 에 대응되는 인코더일 수 있다. 이 때, 제2 연산 노드로부터 출력된 제2 데이터는 제n+1 레이어의 학습을 수행하여 획득된 학습 결과 데이 터 값을 포함할 수 있다. 그리고, 프로세서는 기정의된 데이터 포맷으로 변환된 제2 데이터를 제3 디코더(203a)에 입력하여, 제2 데 이터의 데이터 데이터 포맷을 제3 연산 노드가 처리할 수 있는 데이터 포맷으로 변환할 수 있다. 이에 따 라, 제3 연산 노드는 제3 디코더(203a)가 출력한 데이터를 이용하여 제(n+2) 레이어의 학습을 수행할 수 있다. 그리고, 제3 연산 노드로부터 출력된 데이터를 제3 인코더(203b)에 입력하여 기정의된 데이터 포맷으로 변 환하고, 변환된 제3 데이터를 제(n+3) 레이어가 분배된 연산 노드에 대응되는 디코더로 입력할 수 있다. 그리고, 프로세서는 디코더로부터 출력된 데이터를 이용하여 학습하도록 제(n+3) 레이어가 분배된 연산 노 드를 제어할 수 있다. 한편, 전자 장치가 복수의 연산 노드를 이용하여 분산 추론을 수행하는 경우, 복수의 연산 노드 간 데이터 의 흐름은 도 5를 참조하여 설명한 바와 같을 수 있다. 도 6은 역전파(back propagation) 방향으로 분산 학습 수행 시 데이터의 흐름을 설명하기 위한 도면이다. 도 6을 참조하면, 프로세서는 제3 연산 노드로부터 출력된 제3 데이터의 적어도 일부를 제3 인코더 (203b)에 입력하여, 제3 데이터의 데이터 포맷을 기정의된 데이터 포맷으로 변환할 수 있다. 이 때, 제3 인코더 (203b)는 제3 연산 노드에 대응되는 인코더일 수 있다. 이 때, 제3 연산 노드로부터 출력된 제3 데이터는 제n+2 레이어의 학습을 수행하여 획득된 학습 결과 데이 터 값을 포함할 수 있다. 여기서, 학습 결과 데이터는, 제n+2 레이어의 학습을 수행하여 획득된 그래디언트 및 파라미터 값 중 적어도 하나를 포함할 수 있다. 그리고, 프로세서는 기정의된 데이터 포맷으로 변환된 제3 데이터를 제2 디코더(202a)에 입력하여 제3 데 이터의 데이터 포맷을 제2 연산 노드가 처리할 수 있는 데이터 포맷으로 변환할 수 있다. 이에 따라, 제2 연산 노드는 제2 디코더(202a)가 출력한 데이터를 이용하여 제(n+1) 레이어의 학습을 수행할 수 있다. 그리고, 프로세서는 제2 연산 노드로부터 출력된 제2 데이터를 제2 인코더(202b)에 입력하여 제2 데 이터의 데이터 포맷을 기정의된 데이터 포맷으로 변환할 수 있다. 이 때, 제2 인코더(202b)는 제2 연산 노드 에 대응되는 인코더일 수 있다. 이 때, 제2 연산 노드로부터 출력된 제2 데이터는 제n+1 레이어의 학습을 수행하여 획득된 학습 결과 데이 터 값을 포함할 수 있다. 여기서, 학습 결과 데이터는, 제n+1 레이어의 학습을 수행하여 획득된 그래디언트 및 파라미터 값 중 적어도 하나를 포함할 수 있다. 그리고, 프로세서는 기정의된 데이터 포맷으로 변환된 제2 데이터를 제1 디코더(201a)에 입력하여, 제2 데 이터의 데이터 포맷을 제1 연산 노드가 처리할 수 있는 데이터 포맷으로 변환할 수 있다. 이에 따라, 제1연산 노드는 제1 디코더(201a)가 출력한 데이터를 이용하여 제n 레이어의 학습을 수행할 수 있다. 한편, 프로세서는 특정 연산 노드로부터 출력된 데이터를 기정의된 데이터 포맷으로 변환할 때, 특정 연산 노드로부터 출력된 데이터에 훈련 단위인 에폭(epoch)에 대한 정보와 시간에 대한 정보를 추가할 수 있다. 즉, 프로세서는 출력된 데이터에 추가된 에폭(epoch)에 대한 정보와 시간에 대한 정보로부터 복수의 연산 노드 각각의 학습 수행 시간을 식별할 수 있다. 즉, 프로세서는 복수의 연산 노드 각각에 의해 수행된 학습 결과로부터 복수의 연산 노드 각각의 에폭 별 학습 수행 시간을 식별할 수 있다. 이에 따라, 프로세서는 분산 학습 과정의 일부인 에폭이 수행됨에 따라, 복수의 연산 노드 각각에 분배된 데이터를 조정할 수 있다. 구체적으로, 프로세서는 복수의 연산 노드 중 학습 수행 시간이 임계값 이상인 연산 노드에 분배된 데이터 를 감소시킬 수 있다. 여기서, 임계값은 복수의 연산 노드의 학습 수행 시간의 평균 값보다 기설정된 값 이상일 수 있다. 또는, 임계값은 복수의 연산 노드의 학습 수행 시간의 분포에서 기설정된 범위를 벗어나는 값일 수 있 다. 또는, 임계값은 복수의 연산 노드의 학습 수행 시간 중 가장 긴 시간일 수 있다. 예를 들어, 제1 에폭에 대해서, 복수의 연산 노드의 수행 시간의 평균 값이 3초이고, 기설정된 값이 2초이면, 프로세서는 학습 수행 시간이 5초 이상인 연산 노드에 분배된 데이터를 감소시킬 수 있다. 이 때, 프로세 서는 학습 수행 시간이 5초 이상인 연산 노드에 분배된 데이터가 다른 연산 노드에 포함되도록 조정할 수 있다. 그리고, 프로세서는 재분배된 데이터에 기초하여 제2 에폭에 따른 학습을 수행하도록 복수의 연산 노드를 제어할 수 있다. 한편, 본 개시에 따른 전자 장치는 사용자로부터 분산 학습을 수행할 연산 노드를 설정하는 사용자 입력을 획득하고, 사용자 입력에 따라 설정된 연산 노드를 이용하여 분산 학습을 수행할 수 있다. 도 7은 본 개시의 하나 이상의 실시예에 따른 연산 노드를 설정하는 UI를 제공하는 방법을 설명하기 위한 도면 이다. 도 7을 참조하면, 프로세서는 분산 학습을 수행할 수 있는 복수의 연산 노드를 설정할 수 있는 UI를 사용자에게 제공할 수 있다. 이 때, 프로세서는 UI를 표시하도록 디스플레이를 제어할 수 있다. 또는, 프로세서는 UI를 표시하기 위한 정보를 사용자 단말 장치로 전송할 수 있다. 이 때, 사용자는 연산 노드를 구성하는 연산 장치를 선택하기 위한 UI 엘리먼트를 통해 연산 노드를 구성 하는 연산 장치를 설정할 수 있다. 이 때, 적어도 하나의 연산 장치가 선택되면, 프로세서는 선택된 적어도 하나의 연산 장치와 함께 분산 학 습을 수행할 수 있는 연산 장치와 선택된 적어도 하나의 연산 장치와 함께 분산 학습을 수행할 수 없는 연산 장 치를 구분하여 표시할 수 있다. 여기서, 선택된 적어도 하나의 연산 장치가 머신 러닝 컴파일을 지원하지 않으면, 선택된 적어도 하나의 연산 장치와 함께 분산 학습을 수행할 수 있는 연산 장치는 머신 러닝 컴파일을 지원하지 않는 연산 장치일 수 있다. 예를 들어, A100, B100 및 C100은 머신 러닝 컴파일을 지원하는 장치이고, D100 및 S100은 머신 러닝 컴파일을 지원하지 않는 장치일 수 있다. 그리고, 선택된 적어도 하나의 연산 장치가 머신 러닝 컴파일을 지원하지 않으면, 선택된 적어도 하나의 연산 장치와 함께 분산 학습을 수행할 수 없는 연산 장치는 머신 러닝 컴파일을 지원하는 연산 장치일 수 있다. 또는, 선택된 적어도 하나의 연산 장치가 머신 러닝 컴파일을 지원하면, 선택된 적어도 하나의 연산 장치와 함 께 분산 학습을 수행할 수 있는 연산 장치는 머신 러닝 컴파일을 지원하는 연산 장치일 수 있다. 그리고, 선택 된 적어도 하나의 연산 장치가 머신 러닝 컴파일을 지원하면, 선택된 적어도 하나의 연산 장치와 함께 분산 학 습을 수행할 수 없는 연산 장치는 머신 러닝 컴파일을 지원하는 않는 연산 장치일 수 있다. 그리고, 사용자는 각 연산 노드를 구성하는 연산 장치의 수를 선택하기 위한 UI 엘리먼트를 통해 연산 노 드를 구성하는 연산 장치의 수를 선택할 수 있다. 그리고, 사용자는 연산 노드를 추가하기 위한 UI 엘리먼트 를 통해 분산 학습 또는 분산 추론을 수행하기 위한 연산 노드를 추가할 수 있다. 상술한 바에 따라, 분산 학습을 수행하기 위한 연산 노드가 설정되면, 프로세서는 설정된 연산 노드를 이 용하여 분산 학습을 수행할 수 있다. 한편, 본 개시에서 사용된 용어 \"부\" 또는 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구성된 유닛을 포함하 며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. \"부\" 또는 \" 모듈\"은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는 최소 단위 또는 그 일부가 될 수 있다. 예를 들면, 모듈은 ASIC(application-specific integrated circuit)으로 구성될 수 있다. 본 개시의 다양한 실시예들은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine-readable storage media)에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는, 저장 매체로부터 저장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시예들에 따른 전자 장치를 포함할 수 있다. 상기 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접, 또는 상기 프로세서의 제어 하에 다른 구성 요소들을 이용하여 상기 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생 성 또는 실행되는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매 체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장매체가 신호(signal)를 포함하지 않으며 실재 (tangible)한다는 것을 의미할 뿐 데이터가 저장매체에 반영구적 또는 임시적으로 저장됨을 구분하지 않는다. 하나 이상의 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품 (computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 온라인으로 배포될 수 있 다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따른 구성 요소(예: 모듈 또는 프로그램) 각각은 단수 또는 복수의 개체로 구성될 수 있으며, 전술한 해당 서브 구성 요소들 중 일부 서브 구성 요소가 생략되거나, 또는 다른 서브 구성 요소가 다 양한 실시예에 더 포함될 수 있다. 대체적으로 또는 추가적으로, 일부 구성 요소들(예: 모듈 또는 프로그램)은 하나의 개체로 통합되어, 통합되기 이전의 각각의 해당 구성 요소에 의해 수행되는 기능을 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따른, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차 적, 병렬적, 반복적 또는 휴리스틱하게 실행되거나, 적어도 일부 동작이 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다."}
{"patent_id": "10-2023-0138604", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 하나 이상의 실시예에 따른 분산 학습 시스템을 설명하기 위한 도면이다. 도 2a 및 도 2b는 본 개시의 하나 이상의 실시예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다. 도 3은 본 개시의 하나 이상의 실시예에 따른 전자 장치가 데이터를 연산 노드에 분할하는 방법을 설명하기 위 한 도면이다. 도 4는 본 개시의 하나 이상의 실시예에 따른 연산 장치의 프로파일 정보를 설명하기 위한 도면이다. 도 5 및 도 6은 본 개시의 하나 이상의 실시예에 따른 전자 장치가 연산 노드 간 데이터 송수신을 지원하는 방 법을 설명하기 위한 도면이다. 도 7은 본 개시의 하나 이상의 실시예에 따른 연산 노드를 설정하는 UI를 제공하는 방법을 설명하기 위한 도면 이다."}
