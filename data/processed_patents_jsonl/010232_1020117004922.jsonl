{"patent_id": "10-2011-7004922", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2011-0083595", "출원번호": "10-2011-7004922", "출원인": "주마 테크놀로지 코포레이션", "발명자": "키퍼 매튜"}}
{"patent_id": "10-2011-7004922", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 네트워크 설비들에 대한 복수의 네트워크 관리 프로세스들을 액세스하는 관리 시스템에 대한방법으로서,(a) 상기 네트워크 설비들 중 선택된 하나의 네트워크 설비에 상기 선택된 하나의 네트워크 설비에 대한 네트워크 관리 프로세스에 가입하도록 요청하는 단계; 및(b) 상기 관리 시스템에 가입된 상기 네트워크 관리 프로세스에 관한 변경된 정보를 중계하는 단계를 포함하고,상기 중계하는 단계는, 상기 선택된 하나의 네트워크 설비가 그 자신의 상기 정보의 내부 리프리젠테이션(internal representation) 을 업데이트하는 때와 거의 동시에 상기 선택된 하나의 네트워크 설비에 의해 실시되는, 복수의 네트워크 설비들에 대한 복수의 네트워크 관리 프로세스들을 액세스하는 관리 시스템에 대한방법."}
{"patent_id": "10-2011-7004922", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 중계하는 단계는 상기 업데이트된 정보의 내부 리프리젠테이션을 업데이트하는 것과 동일한 소프트웨어 루틴에 의해 행해지는, 복수의 네트워크 설비들에 대한 복수의 네트워크 관리 프로세스들을 액세스하는 관리 시스템에 대한 방법."}
{"patent_id": "10-2011-7004922", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,정보가 가입되면, 로컬 테이블을 업데이트하는 미들웨어 프로세스는 또한 새로운 데이터를 소켓에 복사하는, 복수의 네트워크 설비들에 대한 복수의 네트워크 관리 프로세스들을 액세스하는 관리 시스템에 대한 방법."}
{"patent_id": "10-2011-7004922", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,액세스될 상기 네트워크 관리 프로세스들이 상이한 네트워크들에 상주하는 경우, (a) 제 1 고유 식별자를 각각의 쿼리된 엘리먼트의 어드레스와 결합하여, 결합된 고유 식별자를 형성하는 단계로서, 이 단계는 상기 엘리먼트의 로컬 도메인 내에서 행해지는, 상기 형성하는 단계; 및(b) 상기 결합된 고유 식별자를, 쿼리하는 시스템에 이용가능하게 하는 단계를 포함하는 단계들에 의해 쿼리 및 응답을 프록싱하는, 복수의 네트워크 설비들에 대한 복수의 네트워크 관리프로세스들을 액세스하는 관리 시스템에 대한 방법."}
{"patent_id": "10-2011-7004922", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,이력 메트릭 정보 및 현재 메트릭 정보를 획득하기 위해, 필터를 시간에 의해 설정하는 단계를 더 포함하는, 복수의 네트워크 설비들에 대한 복수의 네트워크 관리 프로세스들을 액세스하는 관리 시스템에 대한 방법.명 세 서기 술 분 야관련 출원들에 대한 상호 참조 [0001]본원은, 전체 개시가 참조로 포함된 2008년 7월 31일자로 출원된 미국 가특허 출원 제 61/085,407 호의 출원일 [0002]의 이익을 주장한다. 또한, 본원은 본원과 동일자로 출원된 다음의 공통 계류중인 미국 특허 출원들: 미국공개특허 10-2011-0083595-2-특허 출원 제 12/___,___ 호, 제 12/___,___ 호, 및 제 12/___,___ 호의 전체 개시를 참조로 포함한다.배 경 기 술본 발명의 배경 [0003]본 발명의 분야 [0004]본 발명은 네트워크 관리 및 지원의 분야에 속한다. 더 구체적으로, 본 발명은 복수의 상이한 네트워크들 [0005]및 시스템들을 원격으로 그리고 안전하게 모니터링하고 관리하는 시스템을 제공하며, 그 시스템은, 다른 능력들중에서도, 네트워크에 대한 특수한 액세스를 요구하지 않고, 관리되는 네트워크들의 또는 관리되는 네트워크들내의, 아키텍처 (architecture) 들, 비지니스 목적들, 또는 어드레싱 스키마 (schema) 들에 상관없이, 모든 관리되는 네트워크들 전반에 걸쳐 실시간으로 이벤트들을 선택적으로 또는 전역적으로 모니터링하고, 각각의 관리되는 네트워크 내의 임의의 내부 깊이까지 개별적인 네트워크 엘리먼트들을 액세스하고 관리할 수 있다.관련 기술의 설명 [0006]최신의 데이터 및 통신 네트워크들은 매우 복잡하며, 이들 네트워크들 및 이들 네트워크들이 제공하는 서비스들 [0007]을 유지(maintenance)하고 계속 순조롭게 동작하게 하기 위해 실질적인 관리를 요구한다. \"네트워크 관리\"의 범위 내의 활동들 중에는, 가능한 신속하게, 바람직하게는 사용자들 또는 비지니스 프로세스들이 영향을 받기 전에, 문제들을 발견하기 위해 네트워크 및 그 네트워크의 시스템들 및 컴포넌트들의 헬스 (health) 를 모니터링하는 것이 있다. 그러한 관리의 범위 내의 다른 활동들은 운영, 관리, 유지보수, 및 프로비저닝(provisioning) 을 포함한다.상기 참조된 관리 및 지원의 타입들을 제공하기 위해 다수의 시스템들이 네트워크마다 존재한다. [0008]다수의 조직들은 복잡한 네트워크들을 요구하지만, 이들을 관리하기 위한 리소스들이 부족하거나, 이들의 개별 [0009]적인 네트워크에 대한 완전히-갖춰진 관리 시스템을 획득하기 위한 예산이 부족하거나, 또는 이러한 활동을 아웃소싱하는 것이 가능하다면 이들이 더 양호하게 절약할 수 있다고 생각한다. 복수의 상이한 커스토머들에대한 네트워크들을 관리하는 임무를 맡은 조직은, 각각의 커스토머에 대해 별개의 관리 기반구조를 제공해야만하는 경우에 배가된 비용들에 직면할 것이다. 따라서, 상이한 소유 또는 관리 하의 네트워크들, 또는 그렇지 않으면, 상이한 아키텍처들, 상이한 관리 폴리시 (policy) 들, 상이한 비지니스 목적들 및/또는 상이한 전체설계를 갖는 것을 특징으로 하는 네트워크들을 의미하는, 복수의 상이한 네트워크들을 원격으로, 그러나 중앙집중식으로 그리고 안전하게 관리할 수 있는 시스템들에 대한 필요성이 존재한다.다수의 액세스 방법들은 임의의 소정의 네트워크 내에서의, 또는 임의의 소정의 네트워크에 대한 네트워크 및 [0010]네트워크 디바이스 관리를 지원하기 위해 존재한다. 액세스 방법들은, 심플 네트워크 관리 프로토콜(Simple Network Management Protocol; SNMP), 커맨드 라인 인터페이스 (Command Line Interface; CLI) 들, 커스텀 XML, CMIP, 윈도우즈 관리 도구 (Windows Management Instrumentation; WMI), 트랜잭션 언어 1, CORBA,netconf, 자바 관리 익스텐션 (JMX), 자바 메시징 서비스 (JMS), SOAP, 및 XML-RPC 를 포함한다. 이들은,관리 과제들을 완료하는 것을 원조하는 기본적인 로우-레벨 프로토콜들이지만, 복수의 상이한 네트워크들을 관리하는데 수반되는 이슈들을 해결하지는 않는다.상술된 바와 같이, 시스템들은 전체 엔터프라이즈-레벨 네트워크들을 관리하기 위해 현재 존재한다. 대중적 [0011]인 시스템들은, Hewlett-Packard Corporation 으로부터의 OpenView, Computer Associates 로부터의 Unicenter, 및 IBM Tivoli 프레임워크를 포함한다. 그러나, 이들 시스템들은 기본적으로 개별적인 엔터프라이즈-레벨 네트워크들을관리하기 위해 개발되었다. 이들은 상이한 네트워크들을 완전히 관리하기 위한 제한된 능력들만을 갖는다. 그러한 시스템의 다른 예는 Solarwinds Orion 네트워크 퍼포먼스 모니터이다. 그러나, 솔라윈즈 시스템은 스테이트리스 (stateless) 통신 방법들을 사용공개특허 10-2011-0083595-3-하며, 모니터링되는 네트워크들 내에서의 개별적인 디바이스들의 원격 관리보다는 모니터링에 관한 것이다. 다소 상이한 접근법은 미국 특허 공개 공보 제 2006/0218267 A1 호에 의해 반영되는 Jumpnode Systems LLC 의접근법이며, 이는 로컬 네트워크에 인스톨될 수 있는 하드웨어 기기를 제공하여, 로컬 네트워크 이벤트들을 모니터링하고, 수집된 정보를 원격 관리 센터로 통신한다. 그러나, Jumpnode 기기들은 네트워크 이벤트들을 국부적으로 (locally) 추적하고, 따라서 접속의 손실 및 연속 데이터 손실 및보안 리스크들에 취약하다. 또한, 하드웨어 기기들의 각각은, 원격 관리 설비 (facility) 에 대한 필요한접속들을 행하기 위해 그 각각의 고유의 \"인터넷 드롭 (Internet drop)\" (로컬 네트워크 외부로부터 직접 액세스 가능한 (모뎀 포트와 같은) 다른 액세스 포인트) 을 가져만 하며, 그 기기들은, 실시간 데이터 획득을 제공하지 않는 스테이트리스 통신 및 폴링 (polling) 에 의존한다.또한, 툴들은, 프록시 서버들과 같은 네트워크간 통신들, GoToMyPC [0012] (현재 Citrix Systems 소유) 과 같은 원격 제어 소프트웨어 시스템들, 및 (Honeywell Security Systems 에 의한) AlarmnetTM 을 위해 존재한다. 그러나, 이들 툴들은, 관리되는 네트워크의 제 1 레벨을 넘어서 통신하기위한 방법을, 더 깊은 액세스를 허용하는, 특수한 크리덴셜들, VPN 액세스, 방화벽 등에서의 특수한 오프닝, 또는 소켓(socket)들 및 터널들의 수동 구축과 같은, 특수한 배열들 없이 제공하지 않는다. 또한, 이들은, 한번에 하나의 데이터 소스를 뷰잉하는 것을 선택하는 것이 아닌, 복수의 관리되는 네트워크들 및 시스템들에 걸친 모든 이벤트들을 구별 없이 모니터링하는 것으로부터 발생될 수도 있는 데이터의 거대한 볼륨을 감소시키는메커니즘을 제공하지 않는다. 또한, 중앙 집중된 폴링은 종종, 엔드-사용자 커뮤니티 네트워크들과 별개의관리 네트워크로부터 수행되어, 폴링된 리소스들의 가용성의 엔드 사용자의 로컬 관점의 정확도의 부족을 초래한다. 또한, 원거리에서의 측정은, 레이턴시 (latency) 와 같은, 획득된 실제 측정들에서의 인공적인 통계치를 도입할 수 있다.유사하게, 네트워크 어드레스 변환 (Network Address Translation; NAT) 과 같은 툴들은, 외부 뷰 및 액세스로 [0013]부터의 네트워크들의 리소스들과 내부 작업들을 분리시키기 위해 존재하며, NAT 시스템들은 특정된 내부 네트워크 목적지들 및 리소스들로 메시지들을 포워딩하도록 구성될 수 있다. 이러한 접근법의 예들은, (LucentTechnologies, Inc 에 의해 양도된) 미국 특허 제 6,581,108 호 및 미국 특허 공개 공보 제 2005/0271047 A1호 및 제 2006/0029083 A1 호에서 반영된다. 그러나, 그러한 설비들은 원격 관리에 대한 제한된 유틸리티로이루어진다. NAT 도메인 내부로부터 개시된 NAT 접속들은 세션 기반이다. 외부로부터 개시된 접속들을포워딩하기 위해 특수한 프로비전 (provision) 이 행해질 수 있다. 그러나, NAT 방화벽을 통해 네트워크들을 외부적으로 관리하는 것은, NAT 내의 각각의 네트워크 엘리먼트를 외부로부터 액세스 가능하게 하도록 NAT를 구성해야만 하기 때문에 비현실적이다.다수의 네트워크들을 관리하기 위해 시도하였던 시스템들은 다수의 이슈들을 만족스럽게 처리하지 않았으며, 그 [0014]이슈들은 다음을 포함한다. 관리되는 네트워크들 사이에서의 오버래핑하는 사설 (private) 어드레스 스페이스들. 상이한 네트워크들 [0015]은 동일한 사설 어드레스 할당을 이용하여 충돌들을 발생시킬 수도 있다. 기존의 대안들은, 특히 전체 스키마를 한번에 변화시키기 위한 필요성을 고려할 때 상당히 불편하고 고가일 수 있는, 상이한 네트워크 스키마들을 할당하는 것; 상당한 중복 및 비용으로 다수의 관리 기반구조들을 모니터링하거나 또는 제공하는데 있어서시간 갭들을 생성하는, VPN 또는 정적 라우팅을 통해 한번에 하나의 네트워크에 연관시키는 것을 수반하였다. Ricoh Company, Ltd. 에 양도된 미국 특허 제 7,302,469 호에서 반영되는 바와 같은 다른 접근법은, MAC 어드레스들에 기초하는 것과 같은, 전역적으로 고유하다고 여겨지는 스키마를 대신 사용하는 것이다. 그러나,그러한 시스템은, 모니터링 능력을 제공하면서, 디바이스들을 관리하기 위해 디바이스들을 개별적으로 어드레싱하기 위한, 디바이스들의 로컬 네트워크 외부의 원격 설비에 대한 어떠한 수단도 제공하지 않는다. 각각의 네트워크 내의 프로세스들 및 리소스들을 액세스 및 관리하기 위한 특수한 배열들에 대한 필요성. [0016] VPN, 방화벽 등에서의 홀과 같은 몇몇 \"특수한\" 액세스 수단을 제공하지 않으면서 네트워크 프로세스들 및 리소스들을 원격으로 관리하기 위한 일반적인 방법이 존재하지 않았다. 모든 이전의 접근법들은, 네트워크 관리 서비스들에 대한 다수의 가능한 커스토머들에 대해 수용가능하지 않은 비용, 불편함, 또는 보안 타협들을 수반한다.공개특허 10-2011-0083595-4- 네트워크 이벤트 정보의 압도적인 양. 각각의 네트워크는 모니터링의 목적들을 위한 이벤트 정보의 매우 [0017]큰 볼륨을 생성할 수 있다. 복수의 네트워크들이 관리에 대해 집합되는 경우에, 이러한 정보의 볼륨은 배가된다. 기존의 시스템들은, 관련 정보를 모니터링하기 위한 지속적인 능력과 타협하지 않으면서, 관련된 이벤트 정보를 제한하는 방법의 이슈를 적절하게 처리하지 않았다.따라서, 특수한 액세스에 대한 광범위하거나 또는 일치하지 않는 프로비전들 없이, 지배적인 커스토머 방화벽 [0018]및 보안 프랙티스들에 의해 지원되는 방식으로, 단일의 공통 기반구조로부터 복수의 상이한 네트워크들을 관리및 서비스하기 위한 현실적이고 효과적인 방법에 대한 필요성, 및 이들 기술들의 유리한 점을 취하고, 전체적으로 모든 관리되는 네트워크들을 뷰잉 및/또는 관리하거나, 또는 이들 중 임의의 하나를 개별적으로 뷰잉 및/또는 관리할 수 있는 서비스로서 관리 플랫폼을 전달하는 융합된 네트워크 관리 애플리케이션에 대한 필요성이 존재한다.발명의 내용해결하려는 과제본 발명의 목적은, 네트워크들 또는 시스템들의 임의의 소유자가 임의의 위상적 특징 (topological feature) 들 [0019]또는 엘리먼트들을 변경하도록 관리될 필요없이, 단일, 공통의 기반구조로부터 복수의 상이한 네트워크들을 관리 및 서빙하는 방법들을 제공하는 것이다.본 발명의 다른 목적은, 관리되는 네트워크들 및 시스템들 사이에 존재할 수도 있는 어드레스 공간 충돌들을 극 [0020]복하는 방법을 제공함으로써 복수의 상이한 네트워크들에 대한 관리 및 서빙 방법을 용이하게 하는 것이다.본 발명의 다른 목적은 관리 엘리먼트들 사이의 통신을 라우팅하는 균일하고 포괄적인 방법 및 프로토콜을 제공 [0021]하는 것이므로, 근본적인 관리 엘리먼트들의 관리가능한 선택에 확장가능하게 기초하여 관리 기반구조들을 구축할 수 있다.또한, 본 발명의 목적은, 상이한 네트워크들 및 시스템들을 관리 및 지원하는 시스템에서, 관련없는 데이터의 [0022]압도적인 양을 받아들이거나 아니면 관련 데이터를 배제하도록 데이터 뷰를 제한하지 않고도, 다수의 네트워크관리 프로세스들에 대한 실시간 정보를 원격으로 뷰잉하는 방법을 제공하는 것이다.본 발명의 다른 목적은, 모든 관리되는 네트워크들을 집합적으로 또는 이들 모든 네트워크들 중 어느 하나를 개 [0023]별적으로 볼 수 있고 그리고/또는 관리할 수 있는 서비스로서, 관리 플랫폼을 전달하는 집중 네트워크 관리 애플리케이션을 제공하기 위해, 상기 기술을 이용하여 상기 개별 목표들을 충족시키는 것이다.과제의 해결 수단이들 목표들을 달성하기 위해, 본 발명은, 일 실시형태에서, 관리되는 네트워크들 또는 시스템들 중 어느 하나 [0024]의 위치로부터 분리된 중앙집중된 물리적 위치로부터 복수의 상이한 네트워크들 및 시스템들을 모니터링 및 관리하는 시스템을 제공하며, 이 시스템에서는 위상적 특징들 또는 엘리먼트들을 변경하도록 관리될 필요없이 그리고 관리되는 네트워크들 중 어느 하나에 대한 전용 접속의 필요없이, 동작들이 달성된다. 이 시스템은 서비스로서 제공될 수 있으며, 이 서비스에 의해, 모든 관리되는 네트워크들을 집합적으로 또는 이들 모든 네트워크들 중 어느 하나를 개별적으로 사용자가 볼 수 있고 그리고/또는 관리할 수 있다.복수의 상이한 네트워크들 및 시스템들을 관리하는 능력을 촉진하기 위해, 본 발명은, 상기 실시형태에서, 각 [0025]엘리먼트의 로컬 도메인 내에서 엘리먼트의 어드레스를 갖는 고유의 식별자를 결합하고, 결합된 고유의 식별자를 관리 시스템에서의 다른 엘리먼트들에게 이용가능하도록 함으로써, 각각의 엘리먼트들에 대한 IP 어드레스스키마를 중첩시키면서, 네트워크 토폴로지 (network topology) 들을 관리하는 능력을 더 제공한다.상기 능력을 촉진하기 위해, 본 발명은, 모듈화된 소프트웨어 컴포넌트들을 통해 이러한 능력들이 제공되는 일 [0026]실시형태에서, 루트를 명시적 또는 함축적으로 특정하고; 커맨드를 특정하고; 상기 루트 및 커맨드와의 소켓을파라미터들로서 인보크 (invoke) 하고; 상기 루트에 따라 커맨드 및 파라미터들을 라우팅하고; 이 파라미터들을이용하여 루트 타겟에서 커맨드를 실행하고; 상기 루트를 통해 상기 실행의 임의의 결과들을 리턴하고; 상기 실행이 완료될 때 상기 루트를 닫아버림으로써, 이러한 컴포넌트들 사이에서 커맨드들을 라우팅하는 방법을 더 제공한다.공개특허 10-2011-0083595-5-발명의 효과네트워크 설비들 중 선택된 하나의 네트워크 설비에 상기 선택된 하나의 네트워크 설비에 대한 네트워크 관리 [0027]프로세스에 가입하도록 요청하고; 상기 설비가 그 자신의 상기 정보의 내부 리프리젠테이션 (internalrepresentation) 를 업데이트하는 때와 거의 동시에, 관리 시스템에 가입된 네트워크 관리 프로세스에 관한 변경된 정보를 중계함으로써, 복수의 네트워크 설비들을 위해 복수의 네트워크 프로세스들을 액세스하는 관리 시스템에 대한 방법을 제공한다. 본 발명에서 \"발행 및 가입\"으로서 지칭되는 이 메커니즘은, 관리의 목적으로, 집합 및 개별 관리되는 네트워크들 양자 모두에 대한, 매우 다양한 정보 출력들 및 디스플레이들을 지원하는데 이용된다.본 발명의 다른 양태들 및 이점들은 이하의 첨부 도면 및 상세한 설명으로부터 명백해질 것이다. [0028]도면의 간단한 설명본 발명 및 그 이점의 더욱 완전한 이해를 위해, 첨부된 도면과 함께 취해진 이하의 상세한 설명이 참조되며, [0029]여기서 동일한 참조 부호는 동일한 부분을 나타낸다.도 1 은 본 발명의 일 실시형태의 예시적인 배치에서 각종 컴포넌트들, 및 이들 컴포넌트들의 상호 접속들을 나타내는 블록도이다.도 2 는 본 발명의 일 실시형태에서 이용된 라우팅 방법 및 프로토콜을 위한 소켓 및 채널 접속을 나타내는 블록도이다.도 3 은 클라이언트에게 데이터를 디스플레이하기 위해 본 발명에 따른 발행 및 가입 메커니즘의 일 실시형태를이용하는 예시적인 서버 컴포넌트들 및 클라이언트 애플리케이션들 세트를 나타내는 블록도이다.도 4 는 관리 하의 복수의 상이한 네트워크를 나타내는, 예시의 네트워크 관리 애플리케이션의 탑-레벨 스크린디스플레이의 묘사이다.도 5 는 관리된 네트워크들 중 선택된 하나의 모니터링 및 관리에 전용된 예시의 네트워크 관리 애플리케이션의스크린 디스플레이의 묘사이다.도 6 은 본 발명의 일 실시형태에 따라 모니터링되는 선택된 관리 네트워크에 대한 이벤트 리스트를 나타내는스크린 디스플레이의 예시적인 묘사이다.도 7 은 본 발명의 일 실시형태에 따라, 시간에 대해 선택된 네트워크 상의 포트 사용의 모니터링을 나타내는스크린 디스플레이의 예시적인 묘사이다.도 8 은 네트워크 맵 및 엘리먼트들의 디스플레이를 포함하는 관리된 네트워크의 \"계기판\" 뷰를 나타내는 스크린 디스플레이의 예시적인 묘사이다.도 9 는 중앙 통신 매니저 (CM) 프로세서의 헬스 메트릭을 나타내는 스크린 디스플레이의 예시적인 묘사이다.도 10 은 QOS 디스플레이와 전화기 트레이스라우트 (traceroute) 를 나타내는 스크린 디스플레이의 예시적인 묘사이다.도 11 은 하나의 전화기 트레이스라우트에 대한 QOS 상세를 나타내는 스크린 디스플레이의 예시적인 묘사이다.도 12 는 방침 셋업 모듈을 나타내는 스크린 디스플레이의 예시적인 묘사이다.도 13 은 시간에 대한 현재 서비스를 나타내는 스크린 디스플레이, 플러스 롤링 평균 디스플레이의 예시적인 묘사이다.발명을 실시하기 위한 구체적인 내용다음은 본 발명이 어떻게 바람직하게 구현될 수도 있는지의 예시적인 예들을 제공하도록 선택된 본 발명의 소정 [0030]실시형태들의 상세한 설명이다. 본 발명의 범위는 설명된 특정 실시형태들에 제한되지 않고, 첨부된 도면들에 도시되거나 본 발명의 개요 또는 요약에 언급 또는 설명된 임의의 특정 구현, 구성, 실시형태 또는 특징들에도 제한되지 않는다. 또한, 본 개시물은 다수의 방법들을 설명하며, 방법들 각각은 복수의 단계들을 포함한다. 기입된 상세한 설명에 포함되지 않은 것들은 분명한 청구항의 언어에 의해 특정되는 것 외에, 이러한공개특허 10-2011-0083595-6-방법에서의 단계들의 임의의 필요한 순서를 의미하는 것으로 이해되어야 한다.소정의 용어들은 본 명세서의 이해 및 첨부된 청구범위의 설명의 목적을 위해 명확히 정의된 방식으로 이해되어 [0031]야 한다:\"상이한 네트워크\" 는 상이한 오너십 또는 관리 하의 네트워크를 의미하고, 다르게는 상이한 아키텍처, 상이한 [0032]관리 방침, 및 가능하게는 상호적으로 충돌하는 어드레싱 스키마를 갖는 것으로 특징지어지는 네트워크를 의미한다.\"소켓 (socket)\" 은 양방향 통신 링크에서의 엔드 포인트를 의미한다. TCP/IP 소켓은 일 소켓이지만, 다른 [0033]소켓은 TCP/IP 소켓이 아닌 곳에 존재하거나 (그리고 본 발명의 문맥에서 이용됨), TCP/IP 소켓과 같은 동일한추상적인 베이스 군들로부터 예시되고, TCP/IP 소켓의 완전한 기능성을 갖지 않는다.예시적인 시스템 아키텍처 [0034]도 1 은 본 발명의 일 실시형태의 예시적인 배치에서의 각종 컴포넌트들, 및 이들 컴포넌트들의 상호접속들의 [0035]개관을 나타내는 하이 레벨 블록도이다. 이 도면은 커스터머 비지니스 유닛 1, 2, 등, 최대 x 에 속하는 네트워크들 (101, 102, 등, 내지 10x) 를 나타낸다. 커스터머 비지니스 유닛은, 비지니스 조직이 그 각각의네트워크를 관리하도록 동일한 서비스 제공자를 이용한다는 사실 만을 공동으로 갖는 비지니스 조직에 완전히관련되지 않을 수도 있다. 커스터머 비지니스 유닛 1 의 네트워크 (101) 는 다른 것들 보다 더욱 상세히 도시되지만, 다른 것들은 비교 가능하고, 도 1 에 도시되지 않은 더 복잡하거나 덜 복잡한 네트워크를 가질 수도있다. 커스터머 비지니스 유닛 1 은 3 개의 위치들 (111 (메인 위치), 112 및 113) 을 갖는 것으로 도시된다. 각각의 위치에서 네트워크 인프라스트락처 내에는 원격 지능형 게이트웨이 (Remote IntelligenceGateway; RIG) 가 있다. RIG (CL1-RIG1) 는 위치 (111) 에 있고, RIG (BU1-RIG2) 는 위치 (112) 에 있으며,RIG (BU1-RIG3) 는 위치 (113) 에 있다. CIP (Central Intelligence Platform) 는 데이터 센터 (120) 내에제공된다. 본 실시형태에서, 데이터 센터 (120) 는 각각의 커스터머 비지니스 유닛 1-x 를 갖는, 보다 구체적으로 (121, 122 및 12x 에 대한 점선의 커스터머 측 상의 연속으로 도시된 바와 같은) 커스터머 비지니스 유닛의 기본 설비로서 네트워크 관리 목적을 위해 고려되는 RIG 를 갖는 SRSTP (이하에서 더욱 상세히 설명되는바와 같은 Secure Remote Session Transport Protocol) 를 통해 접속들 (121, 122 및 12x) 을 유지하는 단일설비이다. 이들 RIG 들 각각은 점선들 (131, 132) 로 나타난 바와 같이 가장 가까운 다운스트림 커스터머위치에서 RIG 로 SRSTP 를 통해 유사하게 접속된다. CIP (120) 는 RIG 가 기초되는 클래스를 확장하는 소프트웨어 구성에 기초하여 동작하고, 따라서 상당한 추가된 기능성에 부가적으로 CIP (120) 는 RIG 의 속성들 및기능성 전부를 포함한다.상이한 시스템들 간의 어드레스 스페이스 충돌 극복하기 [0036]기업 네트워크는 글로벌 또는 사설 IP 어드레싱을 이용할 수도 있다. 글로벌하게 고유한 IP 어드레스의 부 [0037]족 때문에, 많은 기업들은 RFC 1918 에 정의된 또는 다른 널리 수용된 조약에 따른 사설의 어드레스 스페이스들중 하나를 택한다. 이들은 조직 내에서 사설로 사용 가능하지만 공용 네트워크를 통해 아직 라우팅되지 않은 어드레스의 범위를 제공하고, 따라서 반드시 글로벌하게 고유할 필요가 없다. 따라서, 커스터머 비지니스 유닛들 (101-10x) 중 2 이상의 유닛들은 오버랩되는 채택된 사설의 어드레스 스키마를 가질 수도 있고, 직접적으로 함께 접속된다면 충돌할 것이 완전히 가능하다. 예를 들어, 커스터머 비지니스 유닛 1 (네트워크(101)) 및 커스터머 비지니스 유닛 2 (네트워크 (102)) 는 각각 독립적으로 채택된 172.16.0.0/12 사설의 어드레싱 스키마를 가질 수도 있다. 디바이스는 식별 어드레스, 예를 들어 172.16.7.33 을 갖는 각각의 네트워크 내에 존재할 수도 있다. 양자 시스템 모두를 집중적으로 관리할 수 있기 위해서, 동일한 어드레스를 기본적으로 할당받은 관리 하의 상이한 네트워크들에서 2 개의 노드들을 구별하기 위한 수단이 필요하다.그 자신의 어드레싱 도메인 밖에서부터 사설로 어드레싱된 노드와 통신하기 위한 가장 널리 이용된 방법은 \"NAT [0038](Network Address Translation)\" 이다. 그러나, NAT 는 세션 기반 프로토콜이고, 여기서 세션은 일반적으로 내부에서부터 개시된다. 이는 관리를 위해 충분하지 않으며, 여기서 콘택트는 관리된 네트워크 밖에서부터 종종 개시되어야 한다. 특별한 데이터 엔트리들에 따라 통신을 포워딩하기 위한 다른 접근법은 NAT 라우터, 또는 프록시 서버에 대한 것이지만, 이는 기업 방화벽에 효과적으로 \"홀 (hole)\" 을 남기고, 따라서 관리상의 부담 및 보안 위험을 제기한다. 다른 해결책은 큰 어드레스 스페이스, 예컨대 5.0.0.0/8 에 모든 영향을미치는 네트워크를 다시 맡기는 것이다. 그러나, 이러한 찬스는, 엄청나게 리소스-집중적이고 값비쌀 수 있는, 네트워크 상의 모든 것들이 한 번에 새로운 어드레스 스키마 전부로 옮겨지는 것을 필요로 한다.공개특허 10-2011-0083595-7-본 발명의 일 실시형태는 다음의 기술에 의해 이 문제를 해결한다: [0039] 시스템 (예를 들어, RIG) 로컬을 관리되는 토폴로지에 배치 [0040] RIG, 명칭 및 RIG 에 대한 기반구조 로컬에서의 속성 상에서 추출 (요약) 및 태깅 [0041] 고유한 ID (예를 들어, CL1-RIG1), 플러스 타임스탬프 (예를 들어, 2008-0601-21:33:17.04) 를 갖는 RIG 를 [0042]명명 네트워크들의 공동 관리의 목적을 위한 새로운 \"어드레스\" 를 형성하기 위해 각각의 기반구조 엘리먼트의 사 [0043]설의 어드레스와 상기 명칭을 조합 상위 레지스트라 (registrar) 에 액세스 가능한 방식으로 RIG 상의 엘리먼트 리스트에 관리 어드레스를 발 [0044]행이렇게 하여, 업스트림 페어런트 (다른 RIG 나 CIP 중 어느 하나) 는 디렉토리 정보에 대해 (인증 및 적용가능 [0045]한 폴리시에 기초하여) 임의의 다운스트림 RIG 에 질문할 수 있다. 업스트림 페어런트는 그 후 그 어드레스들을 이용하여 RIG 의 로컬 네트워크 내부의 엘리먼트들로 커맨드들을 보낼 수 있다. 모든 이러한 커맨드들은, 그 정도까지는 프록시로서의 역할을 하는 로컬 RIG 를 통과할 것이다. 동일한 어드레싱 방식은 또한 업스트림 페어런트로 하여금 제 1 RIG 의 하류의 추가적인 RIG들과 통신할 수 있게 할 것이다. 예를 들어,CIP (120) 는 RIG (130) 의 로컬 네트워크 기반구조 내의 디바이스에 대해 예정된 커맨드를 전송할 수 있다. CIP (120) 는, RIG (130) 의 디렉토리가 RIG (110) 에 공개되고, 차례로 CIP (120) 에 공개되기 때문에 목적지 디바이스의 어드레스를 \"알고 있으며 (knows)\", 따라서 RIG (130) 에 로컬인 디바이스로 커맨드를 어드레싱하여 그 커맨드를 RIG (110) 를 통하여 전송할 수 있다 (그러나, 그 커맨드가 라우팅되는 방법은 SRSTP 프로토콜의 함수이며 (후술됨), 어드레싱 그 자체가 아니다).라우팅 방법 및 프로토콜 [0046]도 1 의 아키텍처에 의해 제시된 다른 문제는 어드레싱의 상기 설명에 의해 이미 제안된 바와 같이 라우팅이다. [0047] 이 문제는, 모듈들 (및 관련 엘리먼트들) 의 전체 수집을 중심적으로 관리하는데 효과적인 능력을 획득하기위하여, 복수의 소프트웨어 모듈들, 예를 들어, 로컬 네트워크 관리용 모듈들이 배치되어 있는 시스템에서, 커맨드들을 라우팅하는 방법 및 커맨드들을 실행한 결과이다. 이것은 모듈화된 소프트웨어 시스템에서 커맨드들을 라우팅하기 위해 플렉서블, 네트워크-가능 메커니즘을 요구한다. 보다 일반적으로, 도 1 에 도시한 바와 같이 네트워크를 관리하는데 필요한 기능성을 완전히 실현하기 위해서는, 통신 및 관리에 대한 비교가능하게복잡한 사전-배열 없이 임의로 복잡한 토폴로지들을 내비게이팅할 수 있는 인터모듈 통신 및 관리를 위한 방법이 필요하게 된다.예를 들어, 네트워크들 (101, 102 등) 을 관리하기 위하여, 네트워크의 모든 영역들로 다양한 관리 커맨드들을 [0048]라우팅할 수 있을 필요가 있고, 네트워크가 RIG 의 깊이를 통하여 \"레이어\" 될 수도 있다는 것을 도 1 을 참조하여 알게 될 수 있다. 이것은 도 1 에서 RIG들 (110 및 130) 의 체인과 같은 가장 단순한 형태로 도시되지만, 물론 이 구조는 임의의 깊이까지 연장될 수 있고, 전체 기반구조는 관리되어야 할 것이다.가장 통상적으로, 커맨드들은 RPC, RMI, 코바 (Corba), JMS (Java messaging service), SOAP, XML-RPC (및 다 [0049]른 유사한 프로토콜들) 와 같은 프로토콜들로 네트워크 환경에서 실행된다. 그러나, 이들은 점-대-점 프로토콜이며, 커맨드가 인보크되는 환경에서 다르게 제공되는 라우팅 이외에 어떠한 라우팅도 갖지 않는다. 본경우에, 이러한 라우팅은 반드시 존재하는 것은 아니다. 상기 일반적으로 설명되는 이유들로, 단순히 관리기능들을 가능하게 하기 위해, 다른 경우에는 요구되지 않는 이러한 일반적인 라우팅을 확립해야 할 필요가 없다. 또한, 중심적으로 관리하는 경우, 보안을 위하여, 상이한 커스토머 네트워크들의 분리를 유지할 필요가있다.커맨드들은 텔넷 또는 SSH 와 같은 일련의 대화형 프로토콜을 체인화하고, 목적지 디바이스로 \"호핑\" 함으로써 [0050]복합 시스템에서 라우팅될 수 있다. 유사하게는, 필수 소켓들 및 터널들을 수동으로 구성할 수 있다.그러나, 이러한 통신에 대한 준비를 하는 것은, 이전에 설명되는 관리상 및 보안상 결점들을 갖는다.여기에 고려되는 것과 일부 방식에 있어서 유사한 일 타입의 분배가 UUCP (Unix-to-Unix Copy) 메일 전달 프로 [0051]토콜을 이용하여, 메일 라우팅에 대해 히스토리로 행해졌다. 로컬이 아닌 머신 box2 를 통하여 접속된 머신공개특허 10-2011-0083595-8-box3 상의 사용자에 대해 예정된 메일 메시지는 box2!box3!사용자 (\"뱅\" 프로토콜로 지칭) 로 어드레싱될 것이다. 그러나, UUCP 프로토콜은 단방향적이었다. 커맨드를 어드레싱하는데 이용했다면, 커맨드를 실행한결과를 리턴할 수 없으며, 따라서 네트워크 관리에 결함이 있을 것이다.도 2 는 본 발명의 일 실시형태에서 이용되는 라우팅 방법 및 프로토콜에 대한 소켓 및 채널 접속들을 도시한 [0052]블록도이다. 채널 마스터 인스턴스들 (201, 202 및 203) 은 RIG들을 나타낸다. 채널 마스터 인스턴스(203) 는, 주로 제어 콘솔 및 GUI 인터페이스를 제어하도록 기능하는 특수화된 RIG 이다. 채널 마스터 인스턴스 (201) 는 (미도시된 추가적인 기능적 엘리먼트들을 가진) 통상의 RIG 또는 CIP 일 수도 있다. 또한,채널 마스터 인스턴스들은, 채널 마스터 인스턴스들을 추가하고, 그들을 업스트림 채널 마스터 인스턴스 상의추가적인 채널 접속들, 예를 들어, 채널 접속 (221, 222) 과 유사한 추가적인 채널 접속 (미도시) 에 접속함으로써, 도 2 에 도시된 것보다 더 큰 깊이까지 체인화될 수도 있다.채널 마스터 인스턴스들 (201 및 202) 각각에 대해 도시된 모듈들 (1, 2 및 3) 은 그들 각각의 채널 마스터 인 [0053]스턴스들에 로컬인 디바이스들을 나타낸다. ComStruc 인터페이스들 (231, 232) 은 채널 마스터 인스턴스들(201, 202) 과 관련 모듈들 사이의 각각의 인터페이스들이다.각 채널 마스터 인스턴스는 다른 채널 마스터 인스턴스들과 하나 이상의 채널 접속들, 예를 들어, 채널 접속들 [0054](221, 222, 225 및 226) 을 갖는다. 바람직하게는, 이들 엘리먼트들 사이의 실제 접속들이 SSL 터널을 경유하지만, 암호화가 절대적으로 필요한 것은 아니다. 완전한 GUI 기능을 갖는 것 이외에 각 채널 마스터 인스턴스는 보통 단지 히스토리 이유로 도 2 에서 \"해상 단말기 (maritime terminal)\" 로 지칭되는 관련 커맨드 라인 인터페이스, 예를 들어, 241, 242 를 가질 것이다.각 채널 마스터 인스턴스는 또한 그것이 외부 디바이스들 및 인터페이스들과 통신하는 CSocket (251, 252 등) [0055]이라 불리는 통신 인터페이스들을 갖는다. CSocket들의 일부, 예를 들어, 252, 253 은, 다수의 상이한 관리프로세스들이 동일한 채널 접속을 통하여 라우팅될 수 있다는 사실을 반영하여, 복수의 CSocket들의 세트들에서대응하는 채널 접속에 접속된다.도 2 의 근거가 되는 라우팅 시스템은 커맨드 기반이다. 궁극적으로, 라우팅된 각 메시지는 실행될 커맨드 [0056]를 라우팅 체인의 수신 단을 통해 전달한다. 이들 커맨드들은 CSocket들을 통하여 포워딩된다. 결과는커맨드의 양방향적 소켓과의 하이브리드화이다.예시적인 시스템에서 이용되는 커맨드들은 다수의 총 커맨드들을 포함하며, 어느 점에서는 Microsoft [0057] NTTM NET 커맨드와 유사하지만 더 많은 옵션들을 가진 트리 구조로 배열된다. 그 커맨드들은 \"ComStruc\"커맨드들이라 불린다. 이 커맨드 계층의 기능성 및 신택스를 예시하는 다수의 예시적인 ComStruc 커맨드들의 리스트는 여기에 첨부된 부록에서 기술된다.부록의 표 1 에서 알 수 있는 바와 같이, 바람직한 실시형태에서, ComStruc 커맨드들은 트리 구조를 형성하며, [0058]트리의 \"잎들 (leaves)\" 은 실제 커맨드들이고, \"가지들 (branches)\" 은 커맨드들에 대한 컨테이너 (또는 카테고리) 이다. 커맨드는 스트링들을 뿌리로부터 원하는 잎까지 연쇄시키고, 임의의 필요한 파라미터들을 추가함으로써 완전히 특정된다. (라우팅 경로 엘리먼트가 없는) 이러한 커맨드의 일 예는 \"툴 리스타트 (toolrestart)\" 이다. 이 예에서, \"툴\" 은 컨테이너이고, \"리스타트\" 는 타겟 (및 ComStruc 커맨드) 이다.어드레스가 파라미터로서 주어질 것이다. 커맨드의 영향은 특정된 어드레스에서 서비스를 리스타트하는 것이다. 알 수 있는 바와 같이, 다수의 다른 커맨드들이 제공된다. 파라미터들의 예들은 : IP 어드레스,디바이스의 명칭, 사용자 명칭, 포트 명칭 등이다.본 목적은 커맨드들을 원하는 타겟 모듈로 회귀적으로 전달하는 것이다. 라우팅은 SRSTP 프로토콜에서 원하 [0059]는 커맨드와 함께 특정된다. 라우팅 경로는 \"뱅\" (\"!\") - 범위가 정해진 일련의 서버 (RIG) 명칭들이다.SRSTP 프로토콜은 다음의 일반적인 구조를 갖는다 (다음의 설명의 포맷은 BNF 및/또는 \"매뉴얼 페이지 (man [0060]pages)\" 로 익숙한 것에 의해 쉽게 알게 될 것이다) :SRSTP 패킷 : [!SERVER1NAME] [!SERVER2NAME ...]ComStruc 커맨드 [PARAMS] [0061]ComStruc 커맨드 : 컨테이너 + ComStruc 커맨드 || 타겟 [0062]PARAMS : 스트링* [0063]공개특허 10-2011-0083595-9-스트링 : nonspacestring || nonspacestring+ [0064]CSocket 은 자바 소켓 클래스를 연장하지만, 이것은 통신 기능성보다는 호환성을 위해 행해진다. CSocket [0065]은 소켓의 가장 단순한, 비구현 인보킹 변형에 기초한다. 소켓의 것과 유사한 통신 기능성이 계승(inheritance) 에 의해서가 아니라 독립적으로 제공된다.CSocket 의 제작자는 ComStruc 커맨드를 파라미터로서 인정한다. 커맨드가 명확하게 특정된 어떠한 라우팅 [0066]도 갖지 않는다면, 그 커맨드는 로컬 채널 마스터 인스턴스로 전달되며, 로컬 채널 마스터 인스턴스는, 그 커맨드를, 타겟을 발견하고 그것을 가능하다면 (국부적으로) 실행하기 위해 로컬 ComStruc 트리로 전달한다. 라우팅이 특정된다면, 커맨드는 여전히 채널 마스터 인스턴스 (예를 들어, 201) 로 전달되지만, 그 후 명칭이 제1 라우팅 커맨드와 일치하는 채널 접속 (예를 들어, 222) 으로 전달된다. 그것은 그 자신의 명칭 (수신된라우팅 스트링에서의 제 1 명칭) 을 없애고, 그것을 SSL 접속을 통하여 피어드 (peered) 채널 접속 (예를 들어,225) 으로 전달한다. 그 채널 접속은 그 후 커맨드를 그의 로컬 채널 마스터 인스턴스 (이 예에서는, 202)로 전달한다. 그 후, 패킷을 필요하다면 다시 포워딩하고, 다른 경우에는 그것을 국부적으로 실행하여, 이채널 마스터 인스턴스에 대해 동일한 프로세스를 반복한다. 각 채널 마스터 인스턴스는 동일한 코어 기능성을 갖기 때문에, 이 프로세스는 채널 마스터 인스턴스가 배치된 범위까지, 네트워크의 전체를 횡단하기 위해,회귀 방식으로 무기한 계속될 수도 있다.커맨드 실행의 결과는 통상의 소켓의 경우와 동일한 방식으로 다시 전달된다 (그러나, 소켓의 구현을 이용하지 [0067]않고, 대신에 CSocket 의 자신의 구현을 이용). 또한, 완료 메시지가 CSocket 접속을 폐쇄하기 위해 타겟으로부터 전송된다.보다 일상적인 말로, 상기 설명된 바람직한 실시형태는, 모듈화된 소프트웨어 시스템에서 커맨드들을 라우팅하 [0068]는 방법을 제공하며, 상기 방법은 : 루트를 명시적 또는 함축적으로 특정하는 단계; [0069] 커맨드를 특정하는 단계; [0070] 파라미터들로서 상기 루트 및 커맨드를 가진 소켓을 인보크하는 단계; [0071] 상기 루트에 따라 커맨드 및 파라미터들을 라우팅하는 단계; [0072] 루트 타겟에서 그 파라미터들을 가진 커맨드를 실행; [0073] 상기 루트를 통하여 상기 실행의 임의의 결과들을 다시 리턴하는 단계; [0074] 상기 실행이 완료되는 경우 상기 루트를 폐쇄하는 단계를 포함한다. [0075]상기 방법에서의 커맨드들은 또한 컨테이너들 및 커맨드들의 계층 (hierarchy) 에서 제공될 수 있다. 루트 [0076]의 링크들은 터널링되고, 바람직하게 SSL 상에서 터널링된다. 또한, 상기 논의에 비추어, 상기에서 기재한 SRSTP 프로토콜을 구현하기 위한 시스템은 일반적으로 다음을 제공 [0077]함을 알 수 있다. 루트 및 커맨드를 함축적으로 또는 명시적으로 구체화하고 파라미터로서 루트 및 커맨드로 소켓을 인보크하 [0078]는 애플리케이션 각각이 하기를 포함하는, 하나 이상의 로컬 설비 [0079] 구체화된 루팅을 오픈 채널 접속과 매칭함으로써 루팅을 셋업하는 채널 마스터 [0080] 루트 및 커맨드의 나머지를 다른 채널 접속에 통신하는 채널 접속, 및 [0081] 커맨드를 실행하는 상기 인스턴스 중 마지막 하나 이내의 타켓 [0082]또한, 논의의 다음 주제로 넘어가기 이전에, 아펜딕스 (Appendix) 의 테이블 1 에 기재된 바와 같이 바람직한 [0083]실시형태에서 제공된 ComStruc 커맨드들 중 하나는 localConnect 커맨드임을 주의해야 한다. SRSTP 상에 성공개특허 10-2011-0083595-10-립된 CSocket 체인의 각 말단에 localConnect 를 사용하는 것은, VPN 에 대한 요구 없이, 사실상 임의의 서비스또는 네트워크 동작 (예를 들어, 유지) 을, 소켓들 사이에 셋업된 SSL 접속들을 통해 터널링되게 한다. 예를 들어, 이 메커니즘은, 네트워크에서 컴퓨터를 원격으로 제어 (제한 없이 그 컴퓨터를 통해 임의의 로컬 네트워크 관리 동작을 수행하는 것을 포함함) 하는 것 등을 위해서, 관리된 네트워크 내의 CIP 콘솔 및 리소스 딥사이에서의 텔넷 (telnet) 또는 SSH 상호작용 세션, 또는 리모트 데스크탑 프로토콜 (RDP) 세션을 성립하는데용이하게 이용될 수 있다.또한, 유사한 방식으로, 도 2 에 반영된 전체 통신 구조는, 서비스되는 네트워크에 접근하는 운영 지원 체계 [0084](OSS) 를 위한 수단을 제공하는 프록시 서버로서 역할을 하는 OSS 와 텐덤으로 개발될 수 있다.상기로부터, SRSTP 가 네트워크 관리 애플리케이션을 위한, 특히 상이한 네트워크들을 원격으로 및 중심적으로 [0085]관리하고 지원하기 위한, 플렉서블 파운데이션을 제공하는 것이 명백해야 한다.또한, 본 발명에 의해 제공된 분배된 정보 수집은, 네트워크 관리자가 관리된 엘리먼트들의 운영 상태를 이해하 [0086]도록 하며, 관측된 엘리먼트의 로컬 관점으로부터, 주어진 네트워크에 걸쳐서 지리학적으로 분포될 수 있다. 또한 이러한 분포된 정보 수집은 아티피셜 레이턴시 (artificial latency) 와 같은 측정 아티팩트를 도입하는것을 방지한다. \"발행 및 가입 (Publish and Subscribe)\" 메커니즘 [0087]우리는 이제 복수의 상이한 네트워크들을 위한 관리 시스템이 멀티플 네트워크 관리 프로세스에 대한 실시간 정 [0088]보를 원격으로 볼 수 있는 방법으로 터닝한다. 이러한 능력 (capability) 은 애플리케이션의 범위를 위해,그리고 가장 기본적으로는, 서비스되는 네트워크들에서 이벤트를 효과적으로 모니터링할 수 있기 위해서 중요하다. 이 문제에 대한 이전 해결책은, 어느 정도 시도되었지만, 모든 네트워크 이벤트들의 전반적인 디스플레이 또는 [0089]데이터베이스를 연속적으로 리프레쉬하거나, 또는 이벤트 데이터를 제한하여 하나의 소스를 한번에 리프레쉬하는 것이었다. 어떠한 접근법도 충분히 만족스럽지 않다. 전자의 접근법은 선택적이지 않고 스케일러블(scalable) 하지 않다. 후자의 접근법은 실시간 모니터링을 위한 임의의 능력을 본질적으로 인정한다. 본 발명은, 일 실시형태에서, 복수의 상이한 네트워크들에서 이벤트를 원격으로 모니터링하기 위해 \"발행 및 가 [0090]입\" (또는 선택적으로 \"가입 및 푸시 (subscribe and push)\") 메커니즘이라 불리기도 하는 것을 이용한다. 도 3 은, 리모트 네트워크들로부터 이벤트 데이터를 실시간으로 획득하고 그 데이터를 관리 애플리케이션에서 [0091]디스플레이하기 위해 발행 및 가입 메커니즘을 구현하는, 예시적인 세트의 서버 컴포넌트들 및 클라이언트 애플리케이션들을 나타낸 블록도이다. GXListClient (301) 는 클라이언트 애플리케이션, 예를 들어 (도 1 에서와 같이) CIP (120) 상의 관리 콘솔 애플리케이션, 또는 업스트림 RIG 이다. GXListServer System (310),GXDataSource (311), ComStrucTargets (312) 및 ListSessions (313) 등은 모두 관리된 네트워크 (320) 상에 상주한다. GXListClient (301) 는, 도 2와 관련하여 상기에서 논의한 방식으로, ComStruc Tunnel (303) 상에서 관리된 네트워크 (320) 와 통신한다. 루팅은 도 2 와 관련하여 논의된 것과 동일하지만, 간략히 하기 위해서, 도 3 은 ComStruc Targets (312) 에서 터미네이팅하는 ComStruc Tunnel 을 나타내고, 이것은 도 2 와 관련하여 논의된 (그리고 ComStruc Interface (232) 로서 도 2에 도시된) 커맨드 트리이다. 테이블은, 관리된네트워크 (320) 상에서 각각 모니터링된 프로세스에 대한 상태 정보를 홀딩하기 위해, GXDataSource (311) 에서유지된다. GXListServer System, 예를 들어, 313 은 각각의 그러한 테이블을 위해 존재한다. 발행 및 가입 절차를 개시하기 위해서, GXListClient, 예를 들어, 301 은 ComStruc Tunnel (303) 상에서 [0092]ComStruc Targets (312) 으로 ComStruc DATA GXSTREAM CONNECT 메시지를 전송한다. 그 커맨드는GXListServer System (310) 으로 나아간다. GXListServer System (310) 은 리스트 세션, 예를 들어,ListSession (313) 을 예시한다. (페이즈 1) 예시 상으로, ListSession (313) 은 트랙들을 변화시키기 위한 요청 (트랙 변화) - 소정의 필터를 [0093]사용하는 소정의 컬럼에 대한 요청을 리스닝하는, 루프로 나아간다. 요청자, 이 경우, GXListClient (301)은 이후 트랙 변화 요청 (GXQUERY) 을 전송한다. GXListClient 는 트랙 변화 요청을 하기 위해서 (도 2에서와 같이) CSocket 을 이용한다. ListSession (313) 은 GXQUERY 쿼리 (query) 커맨드를 수용하고 \"덤핑 모드\" 로 나아간다 - 이로써 가입되는 [0094]엘리먼트에 대한 모든 응답 정보를 수집하고, 그것을 ComStruc tunnel (303) 을 통해서 요청자 (301) 에게 다시공개특허 10-2011-0083595-11-전송하고, 또한 그 진행 (progress) 을 요청자에게 보고한다. ListSession (313) 은 또한 현재 쿼리의 기록을 유지한다. 이 시점에, 구체화된 네트워크 프로세스 상의 구체화된 업데이트에 대한 \"가입\" 이 성립되었다. (페이즈 2) GXListServer (310) 는 관련 테이블을 유지할 책임이 있다. GXDataSource (311) 를 향하는 데 [0095]이터베이스 업데이트는 GXListServer (310) 를 통과한다. 각 데이터베이스 업데이트 요청은 또한 각각의 모든 ListSession 오브젝트 (313) 등으로 나아간다. ListSession 오브젝트 (313) 등의 내에서, 업데이트 요청은 필터 및 요청된 컬럼명에 대해 매칭된다. 매치가 있다면 (즉, 데이터베이스 서버가 가입된 데이터를업데이트한다면), (증가될 수 있거나, 감소 또는 변화하는) 업데이터 정보는 실제 데이터베이스 업데이트가 이루어진 것과 거의 동일한 시간에 GXListClient (예를 들어, 301) 로 전송된다. 즉, 정보가 가입된 이후, 로컬 테이블 (즉, GXListServer (310)) 을 업데이트하는 \"미들웨어 (middleware)\" 프로세스는 또한 새로운 데이터를 가입자로 향하는 소켓 (즉, ComStruc 메시지에 의해 성립되는 CSocket) 에 복사한다. 임의의 오버플로우를 방지하기 위해서, 업데이트 전송은 큐 (queue) 를 통과한다. 이 방식으로, 요청된 정보는 요청자에게\"발행\" (또는 \"푸시\") 된다. 소켓이 오픈되는 임의의 시간에, GXListClient (301) 는 새로운 필터 및 새로운 컬럼을 요청할 수 있고, 이 경 [0096]우 새로운 덤프 및 이후 업데이트가 있을 것이다 (페이즈 2).도 4 내지 도 13 은, 여기서 논의된 어드레싱 및 루팅 기술은 물론, 상술한 \"발행 및 가입\" 메커니즘을 이용하 [0097]는, CIP (120) 로부터 운행될 수 있는 예시적인 \"관리 콘솔\" 애플리케이션의 선택된 스크린 디스플레이를 나타낸다. 도시된 실시예에서, 논의가 되는 네트워크는 보이스-오버-IP (VOIP) 텔레포니는 물론, 데이터 통신을취급한다. 도 4 는 관리 콘솔의 통상적인 GUI 스크린 (400) 을 나타낸다. 스크린의 상부 좌측 패널 (401) 은, 상이한 [0098]회사에 속하는, 관리 하에서의 상이한 네트워크들의 리스트 (411, 412 등) 를 나타낸다. 그 아래, 영역(407) 은 복수의 상태 레벨 각각에서의 서버 수를 나타내는 상태 요약, 및 관련 아이콘이 있다. 볼 수 있는바와 같이, 이 실시예에서, 관측되는 모든 5가지 서버는 \"양호한\" 상태에 있고, 상응하는 \"녹색광\" 아이콘(408) 은 상부 좌측 패널 (401) 에서, 상응하는 엔트리들 (411, 412 등) 다음에 도시된다. (상부 섹션(403) 및 하부 섹션 (404) 으로 분할된) 우측 패널 (402) 은, 모든 고객들을 위해 운영자 응답을 요청하는 \"알람\" 의 요약을 나타낸다. 디스플레이되는 알람은 또한 필터 박스 (405) 를 통해서 필터링될 수 있다.각각의 알람에 대해서, 알람이 발생된 서버 (421), 서버에 의존하는 리소스의 체인 (\"디펜던시 트리\") 의 상부노드 (422), 경고 레벨 (예를 들어, 0-5)(423), 상태 (예를 들어, 신규함, 응답됨, 폐쇄됨) (424), 알람에 응답한 사람을 나타내는 응답 필드 (425), 보다 상세한 설명을 가지는 테이블에 링크되는 diaryEntry 필드 (426),및 다른 정보를 포함하여, 일 세트의 데이터가 테이블 형태로 도시된다. 상부 우측 패널 (403) 은 응답되지않은 모든 현재 알람을 요약하고; 하부 우측 패널 (404) 은 응답된 알람을 나타낸다. 알람이 리졸브(resolve) 될 때, 그 디스플레이는 이 디스플레이로부터 사라진다. 상부 좌측 패널 (401) 내의 네트워크 엔트리들 (411, 412 등) 중 하나 상에서 마우스를 클릭함으로써 관리 콘솔의 사용자는 관리된 네트워크들 중 하나를 선택할 수 있다. 도 5 는 관리 콘솔의 사용자가 도 4 와 관련하여 상기에서 논의된 네트워크들 중 하나를 선택한 이후에 디스플 [0099]레이되는 스크린을 나타낸다. 이 스크린으로부터, 사용자는 다양한 툴을 사용하여 네트워크의 상태를 볼 수있거나 또는 클라이언트 컴퓨터를 리모트 네트워크와 일시적으로 브릿지하는 RIGs 의 능력을 사용할 수 있어,데스크탑 쉐어링 애플리케이션들을 사용하거나 또는 관리 애플리케이션들을 운행할 수 있다. 기본적으로,도시된 실시형태의 도면은, 선택된 네트워크, 이 경우에는 HHR (511) 에 대한 이벤트 요약을 디스플레이한다. 이 디스플레이의 컨텐츠는 앞서 논의된 \"발행 및 가입\" 을 통해서 제공된다. 이 컨텐츠는 동적이고, 연속적으로 실시간으로 공급한다. 상부 우측 패널 (503) 의 메인 메뉴 (530) 에서 아이콘 (531) 등을 클릭함으로써 복수의 다른 디스플레이들이 패널 (502) 에 교대로 들어가고 나갈 수 있다. 또한, 나타난 이벤트 요약은 뷰 버튼 (532) 을 클릭한 후 \"요약\" (541) 을 클릭함으로써 달성될 수 있다. 열거된 이벤트 라인(561) 등은, 문제의 디바이스의 \"최대 경보\" 에 대응하여 각각 컬러-코딩된다. 최대 경보는 디바이스의 종속 체인 (dependency chain) 내의 가장 높은 경보 레벨을 의미한다. 각각의 이벤트에 대해, 타임 디스플레이 (571), 기록되는 디바이스에 로컬 특정된 \"텍스트_타임\" 디스플레이 (572), 이벤트 유형을 특정하는 이벤트Id (573), 보조디바이스명칭으로서 이 도면에 지칭된 로컬 디바이스 명칭 (574), 디바이스명칭으로서 본 도면에서 지칭된 네트워크 (575) (이 네트워크는 업스트림 RIG 또는 CPI 에 대한 \"디바이스\" 이기 때문), 및 다른 정보가 존재한다. 이 실시형태에서, 이벤트들은 가능한 한 \"합병\" 된다. 이는, 연속적인 양호한 핑공개특허 10-2011-0083595-12-(ping) 들과 같은 \"합병가능한\" 것으로 고려되는 이벤트들은 새로운 이벤트들을 이용하여 디스플레이를 클러터링 (cluttering) 하는 것 이외에 업데이트된 타임들 및 도시된 이전 이벤트 타임만을 갖는다는 것을 의미한다. 이러한 경우, 이전 합병된 이벤트의 타임에 대해서는 마지막_텍스트_타임 (577) 에서의 엔트리가 존재한다. 요약 (541) 으로 시작하는 패널 (503) 에서의 아이템들의 로우는, 이하 논의되는 수많은 디스플레이들을 포함하는 다른 디스플레이들에 대한 링크이다.도 6 은 동시에 모니터링되는 복수의 상이한 네트워크들 중 하나의 네트워크에서 이벤트들을 모니터링하는 관리 [0100]콘솔 스크린을 도시한다. 특정 커스터머 (customer) 네트워크가 선택될 때, 도 5 의 우측 패널 (504) 은 상부 제어 바 (503), 및 이 제어 바로부터 사용자에 의해 선택된 컴포넌트 뷰를 포함하는 하부 스크린 인 스페이스 (504) 를 디스플레이한다. 사용자가 메인 메뉴 (530) 로부터 (예를 들어) \"뷰\" (532) 를 선택하고, 서브메뉴 (540) 로부터 이벤트 (542) 를 선택한 후, 이벤트 뷰어 컴포넌트는 컴포넌트 뷰 섹션, 패널 (504) 의 \"요약 뷰\" 컴포넌트를 교체할 것이다. 관리 시스템은 수많은 관리 네트워크들에서의 이벤트에 대해가입하지만, 도시된 도 6 은 하나의 특정 커스터머 네트워크 (\"HHR\" (511)) 로 제한된 디스플레이를 반영한다. 도 6 에 도시된 이벤트 리스트들은 동적이고, 도 2 에 예시된 방법에 따라서, 실시간으로 자동으로 업데이트한다. \"필터\" 엘리먼트 (605) 는 임의의 컬럼에서 나타날 수 있는 키에 기초하여 빠른 필터를 가능하게 하기 위한 모든-컬럼 필터이다. 상위 디스플레이 패널 (603) 은 아직 인지되지 않은 이벤트들의 리스트,각각, 타임 (661), 이벤트 Id (673), 로컬 디바이스 명칭 (디바이스명칭) (674), 서비스가 영향을 미치는 경우(678), 관련 에이전트 IP 어드레스 (에이전트 Ip) 가 있는 경우 (679), 및 다른 정보를 포함한다. 바닥의패널 (604) 은, 여기서 6 시간으로 도시된, 드롭-다운 제어 (691) 에 의해 조절가능한 타임 범위로 모든 이벤트들의 리스트를 도시한다. 패널 (603 및 604) (및 유사한 다른 디스플레이) 의 컬럼들은 GUI 제어에 의해 좌측으로 그리고 우측으로 이동될 수 있다. 최좌측 컬럼은 이 리스트에 대해 분류 키로서 작용한다. 자동적으로, 분류 키는 타임 컬럼이다.도 7 은 타임의 함수로서 관리 시스템상의 포트 용도의 볼륨의 디스플레이를 나타내는 \"시스템 모니터\" 유형 그 [0101]래픽 디스플레이를 나타낸다. 이 스크린은 도 5 에 도시된 모니터 링크 (543) 로부터 도달가능하다. 이디스플레이는 우측에서 좌측으로 스크롤하는 이동 그래프로서 나타나고, 도 2 에 도시된 방법에 따라서, 실시간으로 우측으로부터 업데이트한다. 이 특정 디스플레이는 12 시간의 선택 시간 범위 (드롭-다운 제어 (791)동안) 에 걸쳐서 디바이스의 슬롯 (1) 에서 포트 (8) 의 용도를 나타낸다. Y-축 (751) 은 초당 비트이다. 하부 패널 (705 및 706) 은, 현재 뷰 (703, 705) 가 더 긴 시간-라인 (706) 에 적응하는 것을 나타낸다. 또한, 뷰 타임 프레임은 패널 (705 및 706) 상에서 클릭-앤드-드래그 동작에 의해 조절될 수도 있다. 대안적으로, 이 예에서 반-투명 윈도우에 디스플레이된 기록된 초당-비트수 (709) 는 동적 디스플레이 트레이스가시작하고 이 트레이스가 중첩되지 않도록 우측으로 디스플레이된다.도 8 은 네트워크 맵 및 엘리먼트들의 디스플레이를 포함하는 관리 네트워크의 \"대시보드\" 뷰를 나타내는 스크 [0102]린 디스플레이의 예시적인 도면이다. 좌측 패널 (801) 은 통신 및 제어의 라인들을 나타내는 라인 (821,822) 등을 갖는 네트워크 맵을 나타낸다. 이 경우, 로컬 서바이버블 프로세서 (LSP) (841, 842) 등에 접속된 CM (831) 이 도시된다. LSP (841, 842) 등은, CM (831) 이 디스에이블되는 경우 또는 연결성을 잃는 경우에, 그들 자신의 제어를 가정하도록 프로그래밍된다. 이러한 이벤트에서, CM (831) 에 통상적으로 접속된업스트림 RIG (미도시) 는 LSP (841, 842) 등에 직접 부착될 것이고, CM (831) 으로부터의 제어 (822) 의 이전라인은 사라질 것이다. 도 8 의 우측 패널 (802) 은 그 상태에 대한 아이콘을 갖는 상위-레벨 네트워크 엘리먼트 (이들 각각은 종속 트리임) 를 나타낸다. 우측 디스플레이 패널 (802) 의 바닥에 따른 링크 (851,852) 등은 패널 (802) 에 대한 다른 \"대시보드\" 디스플레이에 대한 링크들이고, 또는 이들은 그 자신의 윈도우에 디스플레이될 수도 있고, 이들 각각은 모니터링된 네트워크(들) 에 대한 집중된, 상위-레벨, 실시간 정보의패널을 제공한다.도 9 는 중앙 통신 관리자 (CM) 프로세서에 대한 헬쓰 메트릭 (health metric) 을 나타내는 스크린 디스플레이 [0103]의 예시적인 도면이다. 이는, 도 8 의 프로세서 링크 (854) 로부터 선택될 수 있다. 이는, 퍼센트 프로세서 아이들 (961), 퍼센트 프로세서 서비스 유지보수 (962), 폰 콜에 대한 퍼센트 프로세서 용도 (963), 및 다른 정보를 나타낸다.도 10 은 QOS 디스플레이를 갖는 폰 트래이스루트 (phone traceroute) 를 나타내는 스크린 디스플레이의 예시적 [0104]인 도면이다. 이 스크린은 도 5 의 폰 QOS (545) 를 클릭한 후 폰을 열거하는 중간 스크린 (미도시) 상의 \"트레이스\" 를 클릭함으로써 도달될 수 있다. 이 폰 리스트에서 엔트리를 더블-클릭하는 것은 이하의 도11 에 도시된 디스플레이를 띄울 것이다. 도 10 은 모든 폰들에 대한 그리피컬 트레이스라우트공개특허 10-2011-0083595-13-(traceroute) 도면을 도시한다. 이 폰들은 필터 제어 (1005) 를 통해서 필터링될 수 있다. 각각의 트레이스라우트 (1041, 1042 등) 의 라인들은, (당업계에 잘 알려진 방법에 따라서 계산된) 패킷 손실, 라운드-트립딜레이 및 지터 간격 (interarrival jitter) 의 함수인 현재 품질 서비스 (QOS) 에 따라서 컬러를 변경할 것이다.도 11 은 라운드-트립 딜레이 (1151), 패킷 손실 (1152a 및 1152b), 및 지터 (1153a 및 1153b) 를 포함하는 하 [0105]나의 폰 트레이스라우트에 대한 QOS 세부사항을 나타내는 스크린 디스플레이의 예시적인 도면이다. 지터 및패킷 손실의 상부 및 하부 디스플레이들 (1103 및 1104) 은 트레이스된 루트의 각각의 말단에 해당하는 메트릭(예를 들어, 미디어 프로세서 및 폰) 을 반영한다.도 12 는 폴리시 설정 모듈을 나타내는 스크린 디스플레이의 예시적인 도면이다. \"폴리시\" 는 기록, 이벤트 [0106]처리, 등과 같은 이벤트들에 기초하여 표준화된 동작들을 트리거하기 위해 적소에 놓일 수 있다. 폴리시는스크립트와 비슷한 플로우차트 및 함수로서 프로그래밍된다. 폴리시는 디스플레이 패널 (1203) 의 (도시된예시에서, 우측-클릭-접근가능한 메뉴에 의해) 마우스에 의해 접근가능한 GUI 제어를 통해서 인증된다. 각각의 생성된 폴리시는 패널 (1202) 에 열거된다. 이 스크린은 도 4 의 셋업 냅 (419) 로부터 도달한다 (셋업->폴리시). 디스플레이된 플로우차트 (1210) 에 도시된 폴리시는 \"가상\" 익스텐션으로 기록하는 폰에 대한 것이다 (왜냐하면, 물리적인 폰들은 메시지 기록에 대해 필수적이지는 않기 때문이다). 이 폴리시는,\"IF\" 컨디션 (1211, 1212) 마다 인-서비스 (in-service)/온-후크 (on-hook) 또는 인-서비스/오프-후크의 상태가 관찰되지 않는 한, 이 이벤트를 삭제하는, 가상 익스텐션의 범위에 대한 실패를 나타내는 이벤트를 삭제하기위해 새로운 이벤트를 발생시킨다. 이 폴리시는 활성 이벤트 리스트가 소프트폰 실패에 대해 스캐닝되도록야기하고, 이 소프트폰이 실패되는 경우를 체크한다. 실패하지 않으면, \"실패된\" 이벤트를 삭제하기 위한새로운 이벤트를 전송한다. 따라서, 일단 확립되면, 각각의 폴리시는 도 2 와 관련하여 설명된 프로토콜들에 따라서 실시간으로 모니터링된 이벤트들에 기초하여 특정 컨디션들을 연속적으로 집행한다.도 13 은 서비스 레벨 모니터를 나타내는 스크린 디스플레이의 예시적인 도면이다. 이 디스플레이는 도 5 [0107]의 뷰 링크 (532) 에서 시작하는 뷰->서비스 레벨을 클릭함으로써 도달가능하다. 도 13 의 디스플레이는 개별적인 윈도우에서 나타날 수 있고, 또는 도 5 의 패널 (504) 에 나타날 수 있다. 도 13 은 제어 (1391) 에의해 선택가능한 타임 프레임에 걸친 현재 서비스 레벨 (1311) 에 (제어 (1392) 마다) 타임 범위에 걸쳐서 모니터링되는 서비스 레벨의 롤링 평균 디스플레이 (1312), 및 다른 정보를 더한 것을 나타낸다. 또한, 이 디스플레이는 실시간으로 모니터링된 네트워크(들) 및 리소스(들) 에 대한 서비스 레벨을 동적으로 나타낸다.이는, 도 1 내지 도 3 과 관련하여 앞서 개시된 기술들을 통합하는 도 4 내지 도 13 에 예시된 동작가능한 [0108]예가, 본 발명의 목적에 따라서, 집합체 내의 복수의 상이한 네트워크들의 이벤트를 관찰하고/하거나 관리할 수있는 서비스의 형태로 제공된 커버리지 모니터링 및 관리 플랫폼, 또는 실질적인 네트워크 변과 또는 원치않는추가적인 기반구조 없이 구성 네트워크들 내에서 라우팅할 수 없는 능력, 원격의 네트워크 측정 및 관찰로부터발생하는 아티팩트, 및 각각의 관리 네트워크로의 연속적인 연결성의 부족으로부터 초래되는 인지의 갭과 같은어드레싱 충돌과 같은 과거에 제공되는 것으로부터 시스템을 예방하는 방해물을 극복하는 것 중 임의의 하나를개별적으로 완전하게 실현한다.본 발명이 상세하게 설명되었음에도 불구하고, 다양한 변화, 치환, 및 변경이 당업자에 의해 용이하게 확인될 [0109]수도 있고 이하의 청구범위에 의해 정의된 바와 같이 본 발명의 사상 및 범위로부터 벗어나지 않고 본 명세서에서 이루어질 수 있다는 것을 이해해야만 한다.공개특허 10-2011-0083595-14-[0110]공개특허 10-2011-0083595-15-[0111]공개특허 10-2011-0083595-16-[0112]공개특허 10-2011-0083595-17-도면도면1공개특허 10-2011-0083595-18-도면2공개특허 10-2011-0083595-19-도면3공개특허 10-2011-0083595-20-도면4공개특허 10-2011-0083595-21-도면5공개특허 10-2011-0083595-22-도면6공개특허 10-2011-0083595-23-도면7공개특허 10-2011-0083595-24-도면8공개특허 10-2011-0083595-25-도면9공개특허 10-2011-0083595-26-도면10공개특허 10-2011-0083595-27-도면11공개특허 10-2011-0083595-28-도면12공개특허 10-2011-0083595-29-도면13공개특허 10-2011-0083595-30-"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "집합에서 관리되는 모든 네트워크들, 또는 (관리되는 네트워크들 내에 개별 디바이스들을 포함하는) 이들 모든 네트워크들 중 어느 하나를 개별적으로 볼 수 있고 그리고/또는 관리할 수 있는 서비스로서 관리 플랫폼을 전달 하는 집중 네트워크 관리 애플리케이션 및 시스템이 제공되어, 안정적이고 효율적인 방식으로, 관리되는 네트워 크들 및 시스템들 상에서 실시간으로 이용가능한 지능을 계속 제공하고, 어드레스 스키마의 충돌, 불필요한 기반 구조를 회피할 필요, 적용가능한 메모리 및 대역폭 제한 내에서 실시간으로 필요한 모든 정보를 획득할 필요를 포함하는 통합 문제들을 극복한다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "관련 출원들에 대한 상호 참조 본원은, 전체 개시가 참조로 포함된 2008년 7월 31일자로 출원된 미국 가특허 출원 제 61/085,407 호의 출원일 의 이익을 주장한다. 또한, 본원은 본원과 동일자로 출원된 다음의 공통 계류중인 미국 특허 출원들: 미국특허 출원 제 12/___,___ 호, 제 12/___,___ 호, 및 제 12/___,___ 호의 전체 개시를 참조로 포함한다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "본 발명의 배경 본 발명의 분야 본 발명은 네트워크 관리 및 지원의 분야에 속한다. 더 구체적으로, 본 발명은 복수의 상이한 네트워크들 및 시스템들을 원격으로 그리고 안전하게 모니터링하고 관리하는 시스템을 제공하며, 그 시스템은, 다른 능력들 중에서도, 네트워크에 대한 특수한 액세스를 요구하지 않고, 관리되는 네트워크들의 또는 관리되는 네트워크들 내의, 아키텍처 (architecture) 들, 비지니스 목적들, 또는 어드레싱 스키마 (schema) 들에 상관없이, 모든 관 리되는 네트워크들 전반에 걸쳐 실시간으로 이벤트들을 선택적으로 또는 전역적으로 모니터링하고, 각각의 관리 되는 네트워크 내의 임의의 내부 깊이까지 개별적인 네트워크 엘리먼트들을 액세스하고 관리할 수 있다. 관련 기술의 설명 최신의 데이터 및 통신 네트워크들은 매우 복잡하며, 이들 네트워크들 및 이들 네트워크들이 제공하는 서비스들 을 유지(maintenance)하고 계속 순조롭게 동작하게 하기 위해 실질적인 관리를 요구한다. \"네트워크 관리\" 의 범위 내의 활동들 중에는, 가능한 신속하게, 바람직하게는 사용자들 또는 비지니스 프로세스들이 영향을 받 기 전에, 문제들을 발견하기 위해 네트워크 및 그 네트워크의 시스템들 및 컴포넌트들의 헬스 (health) 를 모니 터링하는 것이 있다. 그러한 관리의 범위 내의 다른 활동들은 운영, 관리, 유지보수, 및 프로비저닝 (provisioning) 을 포함한다. 상기 참조된 관리 및 지원의 타입들을 제공하기 위해 다수의 시스템들이 네트워크마다 존재한다. 다수의 조직들은 복잡한 네트워크들을 요구하지만, 이들을 관리하기 위한 리소스들이 부족하거나, 이들의 개별 적인 네트워크에 대한 완전히-갖춰진 관리 시스템을 획득하기 위한 예산이 부족하거나, 또는 이러한 활동을 아 웃소싱하는 것이 가능하다면 이들이 더 양호하게 절약할 수 있다고 생각한다. 복수의 상이한 커스토머들에 대한 네트워크들을 관리하는 임무를 맡은 조직은, 각각의 커스토머에 대해 별개의 관리 기반구조를 제공해야만 하는 경우에 배가된 비용들에 직면할 것이다. 따라서, 상이한 소유 또는 관리 하의 네트워크들, 또는 그렇 지 않으면, 상이한 아키텍처들, 상이한 관리 폴리시 (policy) 들, 상이한 비지니스 목적들 및/또는 상이한 전체 설계를 갖는 것을 특징으로 하는 네트워크들을 의미하는, 복수의 상이한 네트워크들을 원격으로, 그러나 중앙 집중식으로 그리고 안전하게 관리할 수 있는 시스템들에 대한 필요성이 존재한다. 다수의 액세스 방법들은 임의의 소정의 네트워크 내에서의, 또는 임의의 소정의 네트워크에 대한 네트워크 및 네트워크 디바이스 관리를 지원하기 위해 존재한다. 액세스 방법들은, 심플 네트워크 관리 프로토콜 (Simple Network Management Protocol; SNMP), 커맨드 라인 인터페이스 (Command Line Interface; CLI) 들, 커 스텀 XML, CMIP, 윈도우즈 관리 도구 (Windows Management Instrumentation; WMI), 트랜잭션 언어 1, CORBA, netconf, 자바 관리 익스텐션 (JMX), 자바 메시징 서비스 (JMS), SOAP, 및 XML-RPC 를 포함한다. 이들은, 관리 과제들을 완료하는 것을 원조하는 기본적인 로우-레벨 프로토콜들이지만, 복수의 상이한 네트워크들을 관 리하는데 수반되는 이슈들을 해결하지는 않는다. 상술된 바와 같이, 시스템들은 전체 엔터프라이즈-레벨 네트워크들을 관리하기 위해 현재 존재한다. 대중적 인 시스템들은, Hewlett-Packard Corporation 으로부터의 OpenView , Computer Associates 로부터의 Unicenter , 및 IBM Tivoli 프레임워크를 포함한다. 그러나, 이들 시스템들은 기본적으로 개별적인 엔터프라이즈-레벨 네트워크들을 관리하기 위해 개발되었다. 이들은 상이한 네트워크들을 완전히 관리하기 위한 제한된 능력들만을 갖는다. 그러한 시스템의 다른 예는 Solarwinds Orion 네트워크 퍼포먼스 모니터이다. 그러나, 솔라윈즈 시스템은 스테이트리스 (stateless) 통신 방법들을 사용하며, 모니터링되는 네트워크들 내에서의 개별적인 디바이스들의 원격 관리보다는 모니터링에 관한 것이다. 다소 상이한 접근법은 미국 특허 공개 공보 제 2006/0218267 A1 호에 의해 반영되는 Jumpnode Systems LLC 의 접근법이며, 이는 로컬 네트워크에 인스톨될 수 있는 하드웨어 기기를 제공하여, 로컬 네트워크 이벤트들을 모 니터링하고, 수집된 정보를 원격 관리 센터로 통신한다. 그러나, Jumpnode 기기들은 네트워크 이벤트들을 국부적으로 (locally) 추적하고, 따라서 접속의 손실 및 연속 데이터 손실 및 보안 리스크들에 취약하다. 또한, 하드웨어 기기들의 각각은, 원격 관리 설비 (facility) 에 대한 필요한 접속들을 행하기 위해 그 각각의 고유의 \"인터넷 드롭 (Internet drop)\" (로컬 네트워크 외부로부터 직접 액세 스 가능한 (모뎀 포트와 같은) 다른 액세스 포인트) 을 가져만 하며, 그 기기들은, 실시간 데이터 획득을 제공 하지 않는 스테이트리스 통신 및 폴링 (polling) 에 의존한다. 또한, 툴들은, 프록시 서버들과 같은 네트워크간 통신들, GoToMyPC"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "(현재 Citrix Systems 소유) 과 같은 원격 제어 소프트웨어 시스템들, 및 (Honeywell Security Systems 에 의 한) AlarmnetTM 을 위해 존재한다. 그러나, 이들 툴들은, 관리되는 네트워크의 제 1 레벨을 넘어서 통신하기 위한 방법을, 더 깊은 액세스를 허용하는, 특수한 크리덴셜들, VPN 액세스, 방화벽 등에서의 특수한 오프닝, 또 는 소켓(socket)들 및 터널들의 수동 구축과 같은, 특수한 배열들 없이 제공하지 않는다. 또한, 이들은, 한 번에 하나의 데이터 소스를 뷰잉하는 것을 선택하는 것이 아닌, 복수의 관리되는 네트워크들 및 시스템들에 걸 친 모든 이벤트들을 구별 없이 모니터링하는 것으로부터 발생될 수도 있는 데이터의 거대한 볼륨을 감소시키는 메커니즘을 제공하지 않는다. 또한, 중앙 집중된 폴링은 종종, 엔드-사용자 커뮤니티 네트워크들과 별개의 관리 네트워크로부터 수행되어, 폴링된 리소스들의 가용성의 엔드 사용자의 로컬 관점의 정확도의 부족을 초래 한다. 또한, 원거리에서의 측정은, 레이턴시 (latency) 와 같은, 획득된 실제 측정들에서의 인공적인 통계 치를 도입할 수 있다. 유사하게, 네트워크 어드레스 변환 (Network Address Translation; NAT) 과 같은 툴들은, 외부 뷰 및 액세스로 부터의 네트워크들의 리소스들과 내부 작업들을 분리시키기 위해 존재하며, NAT 시스템들은 특정된 내부 네트워 크 목적지들 및 리소스들로 메시지들을 포워딩하도록 구성될 수 있다. 이러한 접근법의 예들은, (Lucent Technologies, Inc 에 의해 양도된) 미국 특허 제 6,581,108 호 및 미국 특허 공개 공보 제 2005/0271047 A1 호 및 제 2006/0029083 A1 호에서 반영된다. 그러나, 그러한 설비들은 원격 관리에 대한 제한된 유틸리티로 이루어진다. NAT 도메인 내부로부터 개시된 NAT 접속들은 세션 기반이다. 외부로부터 개시된 접속들을 포워딩하기 위해 특수한 프로비전 (provision) 이 행해질 수 있다. 그러나, NAT 방화벽을 통해 네트워크들 을 외부적으로 관리하는 것은, NAT 내의 각각의 네트워크 엘리먼트를 외부로부터 액세스 가능하게 하도록 NAT 를 구성해야만 하기 때문에 비현실적이다. 다수의 네트워크들을 관리하기 위해 시도하였던 시스템들은 다수의 이슈들을 만족스럽게 처리하지 않았으며, 그 이슈들은 다음을 포함한다. 관리되는 네트워크들 사이에서의 오버래핑하는 사설 (private) 어드레스 스페이스들. 상이한 네트워크들 은 동일한 사설 어드레스 할당을 이용하여 충돌들을 발생시킬 수도 있다. 기존의 대안들은, 특히 전체 스키 마를 한번에 변화시키기 위한 필요성을 고려할 때 상당히 불편하고 고가일 수 있는, 상이한 네트워크 스키마들 을 할당하는 것; 상당한 중복 및 비용으로 다수의 관리 기반구조들을 모니터링하거나 또는 제공하는데 있어서 시간 갭들을 생성하는, VPN 또는 정적 라우팅을 통해 한번에 하나의 네트워크에 연관시키는 것을 수반하였다. Ricoh Company, Ltd. 에 양도된 미국 특허 제 7,302,469 호에서 반영되는 바와 같은 다른 접근법은, MAC 어 드레스들에 기초하는 것과 같은, 전역적으로 고유하다고 여겨지는 스키마를 대신 사용하는 것이다. 그러나, 그러한 시스템은, 모니터링 능력을 제공하면서, 디바이스들을 관리하기 위해 디바이스들을 개별적으로 어드레싱 하기 위한, 디바이스들의 로컬 네트워크 외부의 원격 설비에 대한 어떠한 수단도 제공하지 않는다. 각각의 네트워크 내의 프로세스들 및 리소스들을 액세스 및 관리하기 위한 특수한 배열들에 대한 필요성. VPN, 방화벽 등에서의 홀과 같은 몇몇 \"특수한\" 액세스 수단을 제공하지 않으면서 네트워크 프로세스들 및 리 소스들을 원격으로 관리하기 위한 일반적인 방법이 존재하지 않았다. 모든 이전의 접근법들은, 네트워크 관 리 서비스들에 대한 다수의 가능한 커스토머들에 대해 수용가능하지 않은 비용, 불편함, 또는 보안 타협들을 수 반한다. 네트워크 이벤트 정보의 압도적인 양. 각각의 네트워크는 모니터링의 목적들을 위한 이벤트 정보의 매우 큰 볼륨을 생성할 수 있다. 복수의 네트워크들이 관리에 대해 집합되는 경우에, 이러한 정보의 볼륨은 배가 된다. 기존의 시스템들은, 관련 정보를 모니터링하기 위한 지속적인 능력과 타협하지 않으면서, 관련된 이 벤트 정보를 제한하는 방법의 이슈를 적절하게 처리하지 않았다. 따라서, 특수한 액세스에 대한 광범위하거나 또는 일치하지 않는 프로비전들 없이, 지배적인 커스토머 방화벽 및 보안 프랙티스들에 의해 지원되는 방식으로, 단일의 공통 기반구조로부터 복수의 상이한 네트워크들을 관리 및 서비스하기 위한 현실적이고 효과적인 방법에 대한 필요성, 및 이들 기술들의 유리한 점을 취하고, 전체적으 로 모든 관리되는 네트워크들을 뷰잉 및/또는 관리하거나, 또는 이들 중 임의의 하나를 개별적으로 뷰잉 및/또 는 관리할 수 있는 서비스로서 관리 플랫폼을 전달하는 융합된 네트워크 관리 애플리케이션에 대한 필요성이 존 재한다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은, 네트워크들 또는 시스템들의 임의의 소유자가 임의의 위상적 특징 (topological feature) 들 또는 엘리먼트들을 변경하도록 관리될 필요없이, 단일, 공통의 기반구조로부터 복수의 상이한 네트워크들을 관 리 및 서빙하는 방법들을 제공하는 것이다. 본 발명의 다른 목적은, 관리되는 네트워크들 및 시스템들 사이에 존재할 수도 있는 어드레스 공간 충돌들을 극 복하는 방법을 제공함으로써 복수의 상이한 네트워크들에 대한 관리 및 서빙 방법을 용이하게 하는 것이다. 본 발명의 다른 목적은 관리 엘리먼트들 사이의 통신을 라우팅하는 균일하고 포괄적인 방법 및 프로토콜을 제공 하는 것이므로, 근본적인 관리 엘리먼트들의 관리가능한 선택에 확장가능하게 기초하여 관리 기반구조들을 구축 할 수 있다. 또한, 본 발명의 목적은, 상이한 네트워크들 및 시스템들을 관리 및 지원하는 시스템에서, 관련없는 데이터의 압도적인 양을 받아들이거나 아니면 관련 데이터를 배제하도록 데이터 뷰를 제한하지 않고도, 다수의 네트워크 관리 프로세스들에 대한 실시간 정보를 원격으로 뷰잉하는 방법을 제공하는 것이다. 본 발명의 다른 목적은, 모든 관리되는 네트워크들을 집합적으로 또는 이들 모든 네트워크들 중 어느 하나를 개 별적으로 볼 수 있고 그리고/또는 관리할 수 있는 서비스로서, 관리 플랫폼을 전달하는 집중 네트워크 관리 애 플리케이션을 제공하기 위해, 상기 기술을 이용하여 상기 개별 목표들을 충족시키는 것이다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "이들 목표들을 달성하기 위해, 본 발명은, 일 실시형태에서, 관리되는 네트워크들 또는 시스템들 중 어느 하나 의 위치로부터 분리된 중앙집중된 물리적 위치로부터 복수의 상이한 네트워크들 및 시스템들을 모니터링 및 관 리하는 시스템을 제공하며, 이 시스템에서는 위상적 특징들 또는 엘리먼트들을 변경하도록 관리될 필요없이 그 리고 관리되는 네트워크들 중 어느 하나에 대한 전용 접속의 필요없이, 동작들이 달성된다. 이 시스템은 서 비스로서 제공될 수 있으며, 이 서비스에 의해, 모든 관리되는 네트워크들을 집합적으로 또는 이들 모든 네트워 크들 중 어느 하나를 개별적으로 사용자가 볼 수 있고 그리고/또는 관리할 수 있다. 복수의 상이한 네트워크들 및 시스템들을 관리하는 능력을 촉진하기 위해, 본 발명은, 상기 실시형태에서, 각 엘리먼트의 로컬 도메인 내에서 엘리먼트의 어드레스를 갖는 고유의 식별자를 결합하고, 결합된 고유의 식별자 를 관리 시스템에서의 다른 엘리먼트들에게 이용가능하도록 함으로써, 각각의 엘리먼트들에 대한 IP 어드레스 스키마를 중첩시키면서, 네트워크 토폴로지 (network topology) 들을 관리하는 능력을 더 제공한다. 상기 능력을 촉진하기 위해, 본 발명은, 모듈화된 소프트웨어 컴포넌트들을 통해 이러한 능력들이 제공되는 일 실시형태에서, 루트를 명시적 또는 함축적으로 특정하고; 커맨드를 특정하고; 상기 루트 및 커맨드와의 소켓을 파라미터들로서 인보크 (invoke) 하고; 상기 루트에 따라 커맨드 및 파라미터들을 라우팅하고; 이 파라미터들을 이용하여 루트 타겟에서 커맨드를 실행하고; 상기 루트를 통해 상기 실행의 임의의 결과들을 리턴하고; 상기 실 행이 완료될 때 상기 루트를 닫아버림으로써, 이러한 컴포넌트들 사이에서 커맨드들을 라우팅하는 방법을 더 제 공한다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "네트워크 설비들 중 선택된 하나의 네트워크 설비에 상기 선택된 하나의 네트워크 설비에 대한 네트워크 관리 프로세스에 가입하도록 요청하고; 상기 설비가 그 자신의 상기 정보의 내부 리프리젠테이션 (internal representation) 를 업데이트하는 때와 거의 동시에, 관리 시스템에 가입된 네트워크 관리 프로세스에 관한 변 경된 정보를 중계함으로써, 복수의 네트워크 설비들을 위해 복수의 네트워크 프로세스들을 액세스하는 관리 시 스템에 대한 방법을 제공한다. 본 발명에서 \"발행 및 가입\"으로서 지칭되는 이 메커니즘은, 관리의 목적으 로, 집합 및 개별 관리되는 네트워크들 양자 모두에 대한, 매우 다양한 정보 출력들 및 디스플레이들을 지원하 는데 이용된다. 본 발명의 다른 양태들 및 이점들은 이하의 첨부 도면 및 상세한 설명으로부터 명백해질 것이다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다음은 본 발명이 어떻게 바람직하게 구현될 수도 있는지의 예시적인 예들을 제공하도록 선택된 본 발명의 소정 실시형태들의 상세한 설명이다. 본 발명의 범위는 설명된 특정 실시형태들에 제한되지 않고, 첨부된 도면들"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "에 도시되거나 본 발명의 개요 또는 요약에 언급 또는 설명된 임의의 특정 구현, 구성, 실시형태 또는 특징들에 도 제한되지 않는다. 또한, 본 개시물은 다수의 방법들을 설명하며, 방법들 각각은 복수의 단계들을 포함한 다. 기입된 상세한 설명에 포함되지 않은 것들은 분명한 청구항의 언어에 의해 특정되는 것 외에, 이러한방법에서의 단계들의 임의의 필요한 순서를 의미하는 것으로 이해되어야 한다. 소정의 용어들은 본 명세서의 이해 및 첨부된 청구범위의 설명의 목적을 위해 명확히 정의된 방식으로 이해되어 야 한다: \"상이한 네트워크\" 는 상이한 오너십 또는 관리 하의 네트워크를 의미하고, 다르게는 상이한 아키텍처, 상이한 관리 방침, 및 가능하게는 상호적으로 충돌하는 어드레싱 스키마를 갖는 것으로 특징지어지는 네트워크를 의미 한다. \"소켓 (socket)\" 은 양방향 통신 링크에서의 엔드 포인트를 의미한다. TCP/IP 소켓은 일 소켓이지만, 다른 소켓은 TCP/IP 소켓이 아닌 곳에 존재하거나 (그리고 본 발명의 문맥에서 이용됨), TCP/IP 소켓과 같은 동일한 추상적인 베이스 군들로부터 예시되고, TCP/IP 소켓의 완전한 기능성을 갖지 않는다. 예시적인 시스템 아키텍처 도 1 은 본 발명의 일 실시형태의 예시적인 배치에서의 각종 컴포넌트들, 및 이들 컴포넌트들의 상호접속들의 개관을 나타내는 하이 레벨 블록도이다. 이 도면은 커스터머 비지니스 유닛 1, 2, 등, 최대 x 에 속하는 네 트워크들 (101, 102, 등, 내지 10x) 를 나타낸다. 커스터머 비지니스 유닛은, 비지니스 조직이 그 각각의 네트워크를 관리하도록 동일한 서비스 제공자를 이용한다는 사실 만을 공동으로 갖는 비지니스 조직에 완전히 관련되지 않을 수도 있다. 커스터머 비지니스 유닛 1 의 네트워크 는 다른 것들 보다 더욱 상세히 도 시되지만, 다른 것들은 비교 가능하고, 도 1 에 도시되지 않은 더 복잡하거나 덜 복잡한 네트워크를 가질 수도 있다. 커스터머 비지니스 유닛 1 은 3 개의 위치들 (111 (메인 위치), 112 및 113) 을 갖는 것으로 도시된 다. 각각의 위치에서 네트워크 인프라스트락처 내에는 원격 지능형 게이트웨이 (Remote Intelligence Gateway; RIG) 가 있다. RIG (CL1-RIG1) 는 위치 에 있고, RIG (BU1-RIG2) 는 위치 에 있으며, RIG (BU1-RIG3) 는 위치 에 있다. CIP (Central Intelligence Platform) 는 데이터 센터 내에 제공된다. 본 실시형태에서, 데이터 센터 는 각각의 커스터머 비지니스 유닛 1-x 를 갖는, 보다 구체 적으로 (121, 122 및 12x 에 대한 점선의 커스터머 측 상의 연속으로 도시된 바와 같은) 커스터머 비지니스 유 닛의 기본 설비로서 네트워크 관리 목적을 위해 고려되는 RIG 를 갖는 SRSTP (이하에서 더욱 상세히 설명되는 바와 같은 Secure Remote Session Transport Protocol) 를 통해 접속들 (121, 122 및 12x) 을 유지하는 단일 설비이다. 이들 RIG 들 각각은 점선들 (131, 132) 로 나타난 바와 같이 가장 가까운 다운스트림 커스터머 위치에서 RIG 로 SRSTP 를 통해 유사하게 접속된다. CIP 는 RIG 가 기초되는 클래스를 확장하는 소프 트웨어 구성에 기초하여 동작하고, 따라서 상당한 추가된 기능성에 부가적으로 CIP 는 RIG 의 속성들 및 기능성 전부를 포함한다. 상이한 시스템들 간의 어드레스 스페이스 충돌 극복하기 기업 네트워크는 글로벌 또는 사설 IP 어드레싱을 이용할 수도 있다. 글로벌하게 고유한 IP 어드레스의 부 족 때문에, 많은 기업들은 RFC 1918 에 정의된 또는 다른 널리 수용된 조약에 따른 사설의 어드레스 스페이스들 중 하나를 택한다. 이들은 조직 내에서 사설로 사용 가능하지만 공용 네트워크를 통해 아직 라우팅되지 않 은 어드레스의 범위를 제공하고, 따라서 반드시 글로벌하게 고유할 필요가 없다. 따라서, 커스터머 비지니 스 유닛들 (101-10x) 중 2 이상의 유닛들은 오버랩되는 채택된 사설의 어드레스 스키마를 가질 수도 있고, 직접 적으로 함께 접속된다면 충돌할 것이 완전히 가능하다. 예를 들어, 커스터머 비지니스 유닛 1 (네트워크 ) 및 커스터머 비지니스 유닛 2 (네트워크 ) 는 각각 독립적으로 채택된 172.16.0.0/12 사설의 어드 레싱 스키마를 가질 수도 있다. 디바이스는 식별 어드레스, 예를 들어 172.16.7.33 을 갖는 각각의 네트워 크 내에 존재할 수도 있다. 양자 시스템 모두를 집중적으로 관리할 수 있기 위해서, 동일한 어드레스를 기 본적으로 할당받은 관리 하의 상이한 네트워크들에서 2 개의 노드들을 구별하기 위한 수단이 필요하다. 그 자신의 어드레싱 도메인 밖에서부터 사설로 어드레싱된 노드와 통신하기 위한 가장 널리 이용된 방법은 \"NAT (Network Address Translation)\" 이다. 그러나, NAT 는 세션 기반 프로토콜이고, 여기서 세션은 일반적으 로 내부에서부터 개시된다. 이는 관리를 위해 충분하지 않으며, 여기서 콘택트는 관리된 네트워크 밖에서부 터 종종 개시되어야 한다. 특별한 데이터 엔트리들에 따라 통신을 포워딩하기 위한 다른 접근법은 NAT 라우 터, 또는 프록시 서버에 대한 것이지만, 이는 기업 방화벽에 효과적으로 \"홀 (hole)\" 을 남기고, 따라서 관리상 의 부담 및 보안 위험을 제기한다. 다른 해결책은 큰 어드레스 스페이스, 예컨대 5.0.0.0/8 에 모든 영향을 미치는 네트워크를 다시 맡기는 것이다. 그러나, 이러한 찬스는, 엄청나게 리소스-집중적이고 값비쌀 수 있 는, 네트워크 상의 모든 것들이 한 번에 새로운 어드레스 스키마 전부로 옮겨지는 것을 필요로 한다.본 발명의 일 실시형태는 다음의 기술에 의해 이 문제를 해결한다: 시스템 (예를 들어, RIG) 로컬을 관리되는 토폴로지에 배치"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "RIG, 명칭 및 RIG 에 대한 기반구조 로컬에서의 속성 상에서 추출 (요약) 및 태깅 고유한 ID (예를 들어, CL1-RIG1), 플러스 타임스탬프 (예를 들어, 2008-0601-21:33:17.04) 를 갖는 RIG 를 명명 네트워크들의 공동 관리의 목적을 위한 새로운 \"어드레스\" 를 형성하기 위해 각각의 기반구조 엘리먼트의 사 설의 어드레스와 상기 명칭을 조합 상위 레지스트라 (registrar) 에 액세스 가능한 방식으로 RIG 상의 엘리먼트 리스트에 관리 어드레스를 발 행 이렇게 하여, 업스트림 페어런트 (다른 RIG 나 CIP 중 어느 하나) 는 디렉토리 정보에 대해 (인증 및 적용가능 한 폴리시에 기초하여) 임의의 다운스트림 RIG 에 질문할 수 있다. 업스트림 페어런트는 그 후 그 어드레스 들을 이용하여 RIG 의 로컬 네트워크 내부의 엘리먼트들로 커맨드들을 보낼 수 있다. 모든 이러한 커맨드들 은, 그 정도까지는 프록시로서의 역할을 하는 로컬 RIG 를 통과할 것이다. 동일한 어드레싱 방식은 또한 업 스트림 페어런트로 하여금 제 1 RIG 의 하류의 추가적인 RIG들과 통신할 수 있게 할 것이다. 예를 들어, CIP 는 RIG 의 로컬 네트워크 기반구조 내의 디바이스에 대해 예정된 커맨드를 전송할 수 있다. CIP 는, RIG 의 디렉토리가 RIG 에 공개되고, 차례로 CIP 에 공개되기 때문에 목적 지 디바이스의 어드레스를 \"알고 있으며 (knows)\", 따라서 RIG 에 로컬인 디바이스로 커맨드를 어드레싱 하여 그 커맨드를 RIG 를 통하여 전송할 수 있다 (그러나, 그 커맨드가 라우팅되는 방법은 SRSTP 프로토 콜의 함수이며 (후술됨), 어드레싱 그 자체가 아니다). 라우팅 방법 및 프로토콜 도 1 의 아키텍처에 의해 제시된 다른 문제는 어드레싱의 상기 설명에 의해 이미 제안된 바와 같이 라우팅이다. 이 문제는, 모듈들 (및 관련 엘리먼트들) 의 전체 수집을 중심적으로 관리하는데 효과적인 능력을 획득하기 위하여, 복수의 소프트웨어 모듈들, 예를 들어, 로컬 네트워크 관리용 모듈들이 배치되어 있는 시스템에서, 커 맨드들을 라우팅하는 방법 및 커맨드들을 실행한 결과이다. 이것은 모듈화된 소프트웨어 시스템에서 커맨드 들을 라우팅하기 위해 플렉서블, 네트워크-가능 메커니즘을 요구한다. 보다 일반적으로, 도 1 에 도시한 바 와 같이 네트워크를 관리하는데 필요한 기능성을 완전히 실현하기 위해서는, 통신 및 관리에 대한 비교가능하게 복잡한 사전-배열 없이 임의로 복잡한 토폴로지들을 내비게이팅할 수 있는 인터모듈 통신 및 관리를 위한 방법 이 필요하게 된다. 예를 들어, 네트워크들 (101, 102 등) 을 관리하기 위하여, 네트워크의 모든 영역들로 다양한 관리 커맨드들을 라우팅할 수 있을 필요가 있고, 네트워크가 RIG 의 깊이를 통하여 \"레이어\" 될 수도 있다는 것을 도 1 을 참조 하여 알게 될 수 있다. 이것은 도 1 에서 RIG들 (110 및 130) 의 체인과 같은 가장 단순한 형태로 도시되지 만, 물론 이 구조는 임의의 깊이까지 연장될 수 있고, 전체 기반구조는 관리되어야 할 것이다. 가장 통상적으로, 커맨드들은 RPC, RMI, 코바 (Corba), JMS (Java messaging service), SOAP, XML-RPC (및 다 른 유사한 프로토콜들) 와 같은 프로토콜들로 네트워크 환경에서 실행된다. 그러나, 이들은 점-대-점 프로 토콜이며, 커맨드가 인보크되는 환경에서 다르게 제공되는 라우팅 이외에 어떠한 라우팅도 갖지 않는다. 본 경우에, 이러한 라우팅은 반드시 존재하는 것은 아니다. 상기 일반적으로 설명되는 이유들로, 단순히 관리 기능들을 가능하게 하기 위해, 다른 경우에는 요구되지 않는 이러한 일반적인 라우팅을 확립해야 할 필요가 없 다. 또한, 중심적으로 관리하는 경우, 보안을 위하여, 상이한 커스토머 네트워크들의 분리를 유지할 필요가 있다. 커맨드들은 텔넷 또는 SSH 와 같은 일련의 대화형 프로토콜을 체인화하고, 목적지 디바이스로 \"호핑\" 함으로써 복합 시스템에서 라우팅될 수 있다. 유사하게는, 필수 소켓들 및 터널들을 수동으로 구성할 수 있다. 그러나, 이러한 통신에 대한 준비를 하는 것은, 이전에 설명되는 관리상 및 보안상 결점들을 갖는다. 여기에 고려되는 것과 일부 방식에 있어서 유사한 일 타입의 분배가 UUCP (Unix-to-Unix Copy) 메일 전달 프로 토콜을 이용하여, 메일 라우팅에 대해 히스토리로 행해졌다. 로컬이 아닌 머신 box2 를 통하여 접속된 머신box3 상의 사용자에 대해 예정된 메일 메시지는 box2!box3!사용자 (\"뱅\" 프로토콜로 지칭) 로 어드레싱될 것이다. 그러나, UUCP 프로토콜은 단방향적이었다. 커맨드를 어드레싱하는데 이용했다면, 커맨드를 실행한 결과를 리턴할 수 없으며, 따라서 네트워크 관리에 결함이 있을 것이다. 도 2 는 본 발명의 일 실시형태에서 이용되는 라우팅 방법 및 프로토콜에 대한 소켓 및 채널 접속들을 도시한 블록도이다. 채널 마스터 인스턴스들 (201, 202 및 203) 은 RIG들을 나타낸다. 채널 마스터 인스턴스 는, 주로 제어 콘솔 및 GUI 인터페이스를 제어하도록 기능하는 특수화된 RIG 이다. 채널 마스터 인스 턴스 는 (미도시된 추가적인 기능적 엘리먼트들을 가진) 통상의 RIG 또는 CIP 일 수도 있다. 또한, 채널 마스터 인스턴스들은, 채널 마스터 인스턴스들을 추가하고, 그들을 업스트림 채널 마스터 인스턴스 상의 추가적인 채널 접속들, 예를 들어, 채널 접속 (221, 222) 과 유사한 추가적인 채널 접속 (미도시) 에 접속함으 로써, 도 2 에 도시된 것보다 더 큰 깊이까지 체인화될 수도 있다. 채널 마스터 인스턴스들 (201 및 202) 각각에 대해 도시된 모듈들 (1, 2 및 3) 은 그들 각각의 채널 마스터 인 스턴스들에 로컬인 디바이스들을 나타낸다. ComStruc 인터페이스들 (231, 232) 은 채널 마스터 인스턴스들 (201, 202) 과 관련 모듈들 사이의 각각의 인터페이스들이다. 각 채널 마스터 인스턴스는 다른 채널 마스터 인스턴스들과 하나 이상의 채널 접속들, 예를 들어, 채널 접속들 (221, 222, 225 및 226) 을 갖는다. 바람직하게는, 이들 엘리먼트들 사이의 실제 접속들이 SSL 터널을 경유 하지만, 암호화가 절대적으로 필요한 것은 아니다. 완전한 GUI 기능을 갖는 것 이외에 각 채널 마스터 인스 턴스는 보통 단지 히스토리 이유로 도 2 에서 \"해상 단말기 (maritime terminal)\" 로 지칭되는 관련 커맨드 라 인 인터페이스, 예를 들어, 241, 242 를 가질 것이다. 각 채널 마스터 인스턴스는 또한 그것이 외부 디바이스들 및 인터페이스들과 통신하는 CSocket (251, 252 등) 이라 불리는 통신 인터페이스들을 갖는다. CSocket들의 일부, 예를 들어, 252, 253 은, 다수의 상이한 관리 프로세스들이 동일한 채널 접속을 통하여 라우팅될 수 있다는 사실을 반영하여, 복수의 CSocket들의 세트들에서 대응하는 채널 접속에 접속된다. 도 2 의 근거가 되는 라우팅 시스템은 커맨드 기반이다. 궁극적으로, 라우팅된 각 메시지는 실행될 커맨드 를 라우팅 체인의 수신 단을 통해 전달한다. 이들 커맨드들은 CSocket들을 통하여 포워딩된다. 결과는 커맨드의 양방향적 소켓과의 하이브리드화이다. 예시적인 시스템에서 이용되는 커맨드들은 다수의 총 커맨드들을 포함하며, 어느 점에서는 Microsoft"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "NTTM NET 커맨드와 유사하지만 더 많은 옵션들을 가진 트리 구조로 배열된다. 그 커맨드들은 \"ComStruc\" 커맨드들이라 불린다. 이 커맨드 계층의 기능성 및 신택스를 예시하는 다수의 예시적인 ComStruc 커맨드들 의 리스트는 여기에 첨부된 부록에서 기술된다. 부록의 표 1 에서 알 수 있는 바와 같이, 바람직한 실시형태에서, ComStruc 커맨드들은 트리 구조를 형성하며, 트리의 \"잎들 (leaves)\" 은 실제 커맨드들이고, \"가지들 (branches)\" 은 커맨드들에 대한 컨테이너 (또는 카테 고리) 이다. 커맨드는 스트링들을 뿌리로부터 원하는 잎까지 연쇄시키고, 임의의 필요한 파라미터들을 추가 함으로써 완전히 특정된다. (라우팅 경로 엘리먼트가 없는) 이러한 커맨드의 일 예는 \"툴 리스타트 (tool restart)\" 이다. 이 예에서, \"툴\" 은 컨테이너이고, \"리스타트\" 는 타겟 (및 ComStruc 커맨드) 이다. 어드레스가 파라미터로서 주어질 것이다. 커맨드의 영향은 특정된 어드레스에서 서비스를 리스타트하는 것 이다. 알 수 있는 바와 같이, 다수의 다른 커맨드들이 제공된다. 파라미터들의 예들은 : IP 어드레스, 디바이스의 명칭, 사용자 명칭, 포트 명칭 등이다. 본 목적은 커맨드들을 원하는 타겟 모듈로 회귀적으로 전달하는 것이다. 라우팅은 SRSTP 프로토콜에서 원하 는 커맨드와 함께 특정된다. 라우팅 경로는 \"뱅\" (\"!\") - 범위가 정해진 일련의 서버 (RIG) 명칭들이다. SRSTP 프로토콜은 다음의 일반적인 구조를 갖는다 (다음의 설명의 포맷은 BNF 및/또는 \"매뉴얼 페이지 (man pages)\" 로 익숙한 것에 의해 쉽게 알게 될 것이다) : SRSTP 패킷 : [!SERVER1NAME] [!SERVER2NAME ...]ComStruc 커맨드 [PARAMS] ComStruc 커맨드 : 컨테이너 + ComStruc 커맨드 || 타겟 PARAMS : 스트링* 스트링 : nonspacestring || nonspacestring+ CSocket 은 자바 소켓 클래스를 연장하지만, 이것은 통신 기능성보다는 호환성을 위해 행해진다. CSocket 은 소켓의 가장 단순한, 비구현 인보킹 변형에 기초한다. 소켓의 것과 유사한 통신 기능성이 계승 (inheritance) 에 의해서가 아니라 독립적으로 제공된다. CSocket 의 제작자는 ComStruc 커맨드를 파라미터로서 인정한다. 커맨드가 명확하게 특정된 어떠한 라우팅 도 갖지 않는다면, 그 커맨드는 로컬 채널 마스터 인스턴스로 전달되며, 로컬 채널 마스터 인스턴스는, 그 커맨 드를, 타겟을 발견하고 그것을 가능하다면 (국부적으로) 실행하기 위해 로컬 ComStruc 트리로 전달한다. 라 우팅이 특정된다면, 커맨드는 여전히 채널 마스터 인스턴스 (예를 들어, 201) 로 전달되지만, 그 후 명칭이 제 1 라우팅 커맨드와 일치하는 채널 접속 (예를 들어, 222) 으로 전달된다. 그것은 그 자신의 명칭 (수신된 라우팅 스트링에서의 제 1 명칭) 을 없애고, 그것을 SSL 접속을 통하여 피어드 (peered) 채널 접속 (예를 들어, 225) 으로 전달한다. 그 채널 접속은 그 후 커맨드를 그의 로컬 채널 마스터 인스턴스 (이 예에서는, 202) 로 전달한다. 그 후, 패킷을 필요하다면 다시 포워딩하고, 다른 경우에는 그것을 국부적으로 실행하여, 이 채널 마스터 인스턴스에 대해 동일한 프로세스를 반복한다. 각 채널 마스터 인스턴스는 동일한 코어 기능성 을 갖기 때문에, 이 프로세스는 채널 마스터 인스턴스가 배치된 범위까지, 네트워크의 전체를 횡단하기 위해, 회귀 방식으로 무기한 계속될 수도 있다. 커맨드 실행의 결과는 통상의 소켓의 경우와 동일한 방식으로 다시 전달된다 (그러나, 소켓의 구현을 이용하지 않고, 대신에 CSocket 의 자신의 구현을 이용). 또한, 완료 메시지가 CSocket 접속을 폐쇄하기 위해 타겟으 로부터 전송된다. 보다 일상적인 말로, 상기 설명된 바람직한 실시형태는, 모듈화된 소프트웨어 시스템에서 커맨드들을 라우팅하 는 방법을 제공하며, 상기 방법은 : 루트를 명시적 또는 함축적으로 특정하는 단계; 커맨드를 특정하는 단계; 파라미터들로서 상기 루트 및 커맨드를 가진 소켓을 인보크하는 단계; 상기 루트에 따라 커맨드 및 파라미터들을 라우팅하는 단계; 루트 타겟에서 그 파라미터들을 가진 커맨드를 실행; 상기 루트를 통하여 상기 실행의 임의의 결과들을 다시 리턴하는 단계; 상기 실행이 완료되는 경우 상기 루트를 폐쇄하는 단계를 포함한다. 상기 방법에서의 커맨드들은 또한 컨테이너들 및 커맨드들의 계층 (hierarchy) 에서 제공될 수 있다. 루트 의 링크들은 터널링되고, 바람직하게 SSL 상에서 터널링된다. 또한, 상기 논의에 비추어, 상기에서 기재한 SRSTP 프로토콜을 구현하기 위한 시스템은 일반적으로 다음을 제공 함을 알 수 있다. 루트 및 커맨드를 함축적으로 또는 명시적으로 구체화하고 파라미터로서 루트 및 커맨드로 소켓을 인보크하 는 애플리케이션 각각이 하기를 포함하는, 하나 이상의 로컬 설비 구체화된 루팅을 오픈 채널 접속과 매칭함으로써 루팅을 셋업하는 채널 마스터 루트 및 커맨드의 나머지를 다른 채널 접속에 통신하는 채널 접속, 및 커맨드를 실행하는 상기 인스턴스 중 마지막 하나 이내의 타켓 또한, 논의의 다음 주제로 넘어가기 이전에, 아펜딕스 (Appendix) 의 테이블 1 에 기재된 바와 같이 바람직한 실시형태에서 제공된 ComStruc 커맨드들 중 하나는 localConnect 커맨드임을 주의해야 한다. SRSTP 상에 성립된 CSocket 체인의 각 말단에 localConnect 를 사용하는 것은, VPN 에 대한 요구 없이, 사실상 임의의 서비스 또는 네트워크 동작 (예를 들어, 유지) 을, 소켓들 사이에 셋업된 SSL 접속들을 통해 터널링되게 한다. 예 를 들어, 이 메커니즘은, 네트워크에서 컴퓨터를 원격으로 제어 (제한 없이 그 컴퓨터를 통해 임의의 로컬 네트 워크 관리 동작을 수행하는 것을 포함함) 하는 것 등을 위해서, 관리된 네트워크 내의 CIP 콘솔 및 리소스 딥 사이에서의 텔넷 (telnet) 또는 SSH 상호작용 세션, 또는 리모트 데스크탑 프로토콜 (RDP) 세션을 성립하는데 용이하게 이용될 수 있다. 또한, 유사한 방식으로, 도 2 에 반영된 전체 통신 구조는, 서비스되는 네트워크에 접근하는 운영 지원 체계 (OSS) 를 위한 수단을 제공하는 프록시 서버로서 역할을 하는 OSS 와 텐덤으로 개발될 수 있다. 상기로부터, SRSTP 가 네트워크 관리 애플리케이션을 위한, 특히 상이한 네트워크들을 원격으로 및 중심적으로 관리하고 지원하기 위한, 플렉서블 파운데이션을 제공하는 것이 명백해야 한다. 또한, 본 발명에 의해 제공된 분배된 정보 수집은, 네트워크 관리자가 관리된 엘리먼트들의 운영 상태를 이해하 도록 하며, 관측된 엘리먼트의 로컬 관점으로부터, 주어진 네트워크에 걸쳐서 지리학적으로 분포될 수 있다. 또한 이러한 분포된 정보 수집은 아티피셜 레이턴시 (artificial latency) 와 같은 측정 아티팩트를 도입하는 것을 방지한다. \"발행 및 가입 (Publish and Subscribe)\" 메커니즘 우리는 이제 복수의 상이한 네트워크들을 위한 관리 시스템이 멀티플 네트워크 관리 프로세스에 대한 실시간 정 보를 원격으로 볼 수 있는 방법으로 터닝한다. 이러한 능력 (capability) 은 애플리케이션의 범위를 위해, 그리고 가장 기본적으로는, 서비스되는 네트워크들에서 이벤트를 효과적으로 모니터링할 수 있기 위해서 중요하 다. 이 문제에 대한 이전 해결책은, 어느 정도 시도되었지만, 모든 네트워크 이벤트들의 전반적인 디스플레이 또는 데이터베이스를 연속적으로 리프레쉬하거나, 또는 이벤트 데이터를 제한하여 하나의 소스를 한번에 리프레쉬하 는 것이었다. 어떠한 접근법도 충분히 만족스럽지 않다. 전자의 접근법은 선택적이지 않고 스케일러블 (scalable) 하지 않다. 후자의 접근법은 실시간 모니터링을 위한 임의의 능력을 본질적으로 인정한다. 본 발명은, 일 실시형태에서, 복수의 상이한 네트워크들에서 이벤트를 원격으로 모니터링하기 위해 \"발행 및 가 입\" (또는 선택적으로 \"가입 및 푸시 (subscribe and push)\") 메커니즘이라 불리기도 하는 것을 이용한다. 도 3 은, 리모트 네트워크들로부터 이벤트 데이터를 실시간으로 획득하고 그 데이터를 관리 애플리케이션에서 디스플레이하기 위해 발행 및 가입 메커니즘을 구현하는, 예시적인 세트의 서버 컴포넌트들 및 클라이언트 애플 리케이션들을 나타낸 블록도이다. GXListClient 는 클라이언트 애플리케이션, 예를 들어 (도 1 에서 와 같이) CIP 상의 관리 콘솔 애플리케이션, 또는 업스트림 RIG 이다. GXListServer System , GXDataSource , ComStrucTargets 및 ListSessions 등은 모두 관리된 네트워크 상에 상 주한다. GXListClient 는, 도 2와 관련하여 상기에서 논의한 방식으로, ComStruc Tunnel 상에 서 관리된 네트워크 와 통신한다. 루팅은 도 2 와 관련하여 논의된 것과 동일하지만, 간략히 하기 위 해서, 도 3 은 ComStruc Targets 에서 터미네이팅하는 ComStruc Tunnel 을 나타내고, 이것은 도 2 와 관 련하여 논의된 (그리고 ComStruc Interface 로서 도 2에 도시된) 커맨드 트리이다. 테이블은, 관리된 네트워크 상에서 각각 모니터링된 프로세스에 대한 상태 정보를 홀딩하기 위해, GXDataSource 에서 유지된다. GXListServer System, 예를 들어, 313 은 각각의 그러한 테이블을 위해 존재한다. 발행 및 가입 절차를 개시하기 위해서, GXListClient, 예를 들어, 301 은 ComStruc Tunnel 상에서 ComStruc Targets 으로 ComStruc DATA GXSTREAM CONNECT 메시지를 전송한다. 그 커맨드는 GXListServer System 으로 나아간다. GXListServer System 은 리스트 세션, 예를 들어, ListSession 을 예시한다. (페이즈 1) 예시 상으로, ListSession 은 트랙들을 변화시키기 위한 요청 (트랙 변화) - 소정의 필터를 사용하는 소정의 컬럼에 대한 요청을 리스닝하는, 루프로 나아간다. 요청자, 이 경우, GXListClient 은 이후 트랙 변화 요청 (GXQUERY) 을 전송한다. GXListClient 는 트랙 변화 요청을 하기 위해서 (도 2에서 와 같이) CSocket 을 이용한다. ListSession 은 GXQUERY 쿼리 (query) 커맨드를 수용하고 \"덤핑 모드\" 로 나아간다 - 이로써 가입되는 엘리먼트에 대한 모든 응답 정보를 수집하고, 그것을 ComStruc tunnel 을 통해서 요청자 에게 다시전송하고, 또한 그 진행 (progress) 을 요청자에게 보고한다. ListSession 은 또한 현재 쿼리의 기 록을 유지한다. 이 시점에, 구체화된 네트워크 프로세스 상의 구체화된 업데이트에 대한 \"가입\" 이 성립되 었다. (페이즈 2) GXListServer 는 관련 테이블을 유지할 책임이 있다. GXDataSource 를 향하는 데 이터베이스 업데이트는 GXListServer 를 통과한다. 각 데이터베이스 업데이트 요청은 또한 각각의 모 든 ListSession 오브젝트 등으로 나아간다. ListSession 오브젝트 등의 내에서, 업데이트 요 청은 필터 및 요청된 컬럼명에 대해 매칭된다. 매치가 있다면 (즉, 데이터베이스 서버가 가입된 데이터를 업데이트한다면), (증가될 수 있거나, 감소 또는 변화하는) 업데이터 정보는 실제 데이터베이스 업데이트가 이 루어진 것과 거의 동일한 시간에 GXListClient (예를 들어, 301) 로 전송된다. 즉, 정보가 가입된 이후, 로 컬 테이블 (즉, GXListServer ) 을 업데이트하는 \"미들웨어 (middleware)\" 프로세스는 또한 새로운 데이 터를 가입자로 향하는 소켓 (즉, ComStruc 메시지에 의해 성립되는 CSocket) 에 복사한다. 임의의 오버플로 우를 방지하기 위해서, 업데이트 전송은 큐 (queue) 를 통과한다. 이 방식으로, 요청된 정보는 요청자에게 \"발행\" (또는 \"푸시\") 된다. 소켓이 오픈되는 임의의 시간에, GXListClient 는 새로운 필터 및 새로운 컬럼을 요청할 수 있고, 이 경 우 새로운 덤프 및 이후 업데이트가 있을 것이다 (페이즈 2). 도 4 내지 도 13 은, 여기서 논의된 어드레싱 및 루팅 기술은 물론, 상술한 \"발행 및 가입\" 메커니즘을 이용하 는, CIP 로부터 운행될 수 있는 예시적인 \"관리 콘솔\" 애플리케이션의 선택된 스크린 디스플레이를 나타 낸다. 도시된 실시예에서, 논의가 되는 네트워크는 보이스-오버-IP (VOIP) 텔레포니는 물론, 데이터 통신을 취급한다. 도 4 는 관리 콘솔의 통상적인 GUI 스크린 을 나타낸다. 스크린의 상부 좌측 패널 은, 상이한 회사에 속하는, 관리 하에서의 상이한 네트워크들의 리스트 (411, 412 등) 를 나타낸다. 그 아래, 영역"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "은 복수의 상태 레벨 각각에서의 서버 수를 나타내는 상태 요약, 및 관련 아이콘이 있다. 볼 수 있는 바와 같이, 이 실시예에서, 관측되는 모든 5가지 서버는 \"양호한\" 상태에 있고, 상응하는 \"녹색광\" 아이콘 은 상부 좌측 패널 에서, 상응하는 엔트리들 (411, 412 등) 다음에 도시된다. (상부 섹션 및 하부 섹션 으로 분할된) 우측 패널 은, 모든 고객들을 위해 운영자 응답을 요청하는 \"알"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "람\" 의 요약을 나타낸다. 디스플레이되는 알람은 또한 필터 박스 를 통해서 필터링될 수 있다. 각각의 알람에 대해서, 알람이 발생된 서버 , 서버에 의존하는 리소스의 체인 (\"디펜던시 트리\") 의 상부 노드 , 경고 레벨 (예를 들어, 0-5), 상태 (예를 들어, 신규함, 응답됨, 폐쇄됨) , 알람에 응답 한 사람을 나타내는 응답 필드 , 보다 상세한 설명을 가지는 테이블에 링크되는 diaryEntry 필드 , 및 다른 정보를 포함하여, 일 세트의 데이터가 테이블 형태로 도시된다. 상부 우측 패널 은 응답되지"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "않은 모든 현재 알람을 요약하고; 하부 우측 패널 은 응답된 알람을 나타낸다. 알람이 리졸브 (resolve) 될 때, 그 디스플레이는 이 디스플레이로부터 사라진다. 상부 좌측 패널 내의 네트워크 엔 트리들 (411, 412 등) 중 하나 상에서 마우스를 클릭함으로써 관리 콘솔의 사용자는 관리된 네트워크들 중 하나 를 선택할 수 있다. 도 5 는 관리 콘솔의 사용자가 도 4 와 관련하여 상기에서 논의된 네트워크들 중 하나를 선택한 이후에 디스플 레이되는 스크린을 나타낸다. 이 스크린으로부터, 사용자는 다양한 툴을 사용하여 네트워크의 상태를 볼 수 있거나 또는 클라이언트 컴퓨터를 리모트 네트워크와 일시적으로 브릿지하는 RIGs 의 능력을 사용할 수 있어, 데스크탑 쉐어링 애플리케이션들을 사용하거나 또는 관리 애플리케이션들을 운행할 수 있다. 기본적으로,"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "도시된 실시형태의 도면은, 선택된 네트워크, 이 경우에는 HHR 에 대한 이벤트 요약을 디스플레이한다. 이 디스플레이의 컨텐츠는 앞서 논의된 \"발행 및 가입\" 을 통해서 제공된다. 이 컨텐츠는 동적이고, 연 속적으로 실시간으로 공급한다. 상부 우측 패널 의 메인 메뉴 에서 아이콘 등을 클릭함 으로써 복수의 다른 디스플레이들이 패널 에 교대로 들어가고 나갈 수 있다. 또한, 나타난 이벤트 요"}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "약은 뷰 버튼 을 클릭한 후 \"요약\" 을 클릭함으로써 달성될 수 있다. 열거된 이벤트 라인 등은, 문제의 디바이스의 \"최대 경보\" 에 대응하여 각각 컬러-코딩된다. 최대 경보는 디바이스의 종 속 체인 (dependency chain) 내의 가장 높은 경보 레벨을 의미한다. 각각의 이벤트에 대해, 타임 디스플레 이 , 기록되는 디바이스에 로컬 특정된 \"텍스트_타임\" 디스플레이 , 이벤트 유형을 특정하는 이벤트 Id , 보조디바이스명칭으로서 이 도면에 지칭된 로컬 디바이스 명칭 , 디바이스명칭으로서 본 도면에 서 지칭된 네트워크 (이 네트워크는 업스트림 RIG 또는 CPI 에 대한 \"디바이스\" 이기 때문), 및 다른 정 보가 존재한다. 이 실시형태에서, 이벤트들은 가능한 한 \"합병\" 된다. 이는, 연속적인 양호한 핑(ping) 들과 같은 \"합병가능한\" 것으로 고려되는 이벤트들은 새로운 이벤트들을 이용하여 디스플레이를 클러터 링 (cluttering) 하는 것 이외에 업데이트된 타임들 및 도시된 이전 이벤트 타임만을 갖는다는 것을 의미한다. 이러한 경우, 이전 합병된 이벤트의 타임에 대해서는 마지막_텍스트_타임 에서의 엔트리가 존재한다."}
{"patent_id": "10-2011-7004922", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "요약 으로 시작하는 패널 에서의 아이템들의 로우는, 이하 논의되는 수많은 디스플레이들을 포 함하는 다른 디스플레이들에 대한 링크이다. 도 6 은 동시에 모니터링되는 복수의 상이한 네트워크들 중 하나의 네트워크에서 이벤트들을 모니터링하는 관리 콘솔 스크린을 도시한다. 특정 커스터머 (customer) 네트워크가 선택될 때, 도 5 의 우측 패널 은 상 부 제어 바 , 및 이 제어 바로부터 사용자에 의해 선택된 컴포넌트 뷰를 포함하는 하부 스크린 인 스페이 스 를 디스플레이한다. 사용자가 메인 메뉴 로부터 (예를 들어) \"뷰\" 를 선택하고, 서브 메뉴 로부터 이벤트 를 선택한 후, 이벤트 뷰어 컴포넌트는 컴포넌트 뷰 섹션, 패널 의 \"요 약 뷰\" 컴포넌트를 교체할 것이다. 관리 시스템은 수많은 관리 네트워크들에서의 이벤트에 대해 가입하지만, 도시된 도 6 은 하나의 특정 커스터머 네트워크 (\"HHR\" ) 로 제한된 디스플레이를 반영한다. 도 6 에 도시된 이벤트 리스트들은 동적이고, 도 2 에 예시된 방법에 따라서, 실시간으로 자동으로 업데이트 한다. \"필터\" 엘리먼트 는 임의의 컬럼에서 나타날 수 있는 키에 기초하여 빠른 필터를 가능하게 하 기 위한 모든-컬럼 필터이다. 상위 디스플레이 패널 은 아직 인지되지 않은 이벤트들의 리스트, 각각, 타임 , 이벤트 Id , 로컬 디바이스 명칭 (디바이스명칭) , 서비스가 영향을 미치는 경우 , 관련 에이전트 IP 어드레스 (에이전트 Ip) 가 있는 경우 , 및 다른 정보를 포함한다. 바닥의 패널 은, 여기서 6 시간으로 도시된, 드롭-다운 제어 에 의해 조절가능한 타임 범위로 모든 이벤트 들의 리스트를 도시한다. 패널 (603 및 604) (및 유사한 다른 디스플레이) 의 컬럼들은 GUI 제어에 의해 좌 측으로 그리고 우측으로 이동될 수 있다. 최좌측 컬럼은 이 리스트에 대해 분류 키로서 작용한다. 자동 적으로, 분류 키는 타임 컬럼이다. 도 7 은 타임의 함수로서 관리 시스템상의 포트 용도의 볼륨의 디스플레이를 나타내는 \"시스템 모니터\" 유형 그 래픽 디스플레이를 나타낸다. 이 스크린은 도 5 에 도시된 모니터 링크 로부터 도달가능하다. 이 디스플레이는 우측에서 좌측으로 스크롤하는 이동 그래프로서 나타나고, 도 2 에 도시된 방법에 따라서, 실시간 으로 우측으로부터 업데이트한다. 이 특정 디스플레이는 12 시간의 선택 시간 범위 (드롭-다운 제어 동안) 에 걸쳐서 디바이스의 슬롯 에서 포트 의 용도를 나타낸다. Y-축 은 초당 비트이다. 하부 패널 (705 및 706) 은, 현재 뷰 (703, 705) 가 더 긴 시간-라인 에 적응하는 것을 나타낸다. 또한, 뷰 타임 프레임은 패널 (705 및 706) 상에서 클릭-앤드-드래그 동작에 의해 조절될 수도 있다. 대안 적으로, 이 예에서 반-투명 윈도우에 디스플레이된 기록된 초당-비트수 는 동적 디스플레이 트레이스가 시작하고 이 트레이스가 중첩되지 않도록 우측으로 디스플레이된다. 도 8 은 네트워크 맵 및 엘리먼트들의 디스플레이를 포함하는 관리 네트워크의 \"대시보드\" 뷰를 나타내는 스크 린 디스플레이의 예시적인 도면이다. 좌측 패널 은 통신 및 제어의 라인들을 나타내는 라인 (821, 822) 등을 갖는 네트워크 맵을 나타낸다. 이 경우, 로컬 서바이버블 프로세서 (LSP) (841, 842) 등에 접속 된 CM 이 도시된다. LSP (841, 842) 등은, CM 이 디스에이블되는 경우 또는 연결성을 잃는 경 우에, 그들 자신의 제어를 가정하도록 프로그래밍된다. 이러한 이벤트에서, CM 에 통상적으로 접속된 업스트림 RIG (미도시) 는 LSP (841, 842) 등에 직접 부착될 것이고, CM 으로부터의 제어 의 이전 라인은 사라질 것이다. 도 8 의 우측 패널 은 그 상태에 대한 아이콘을 갖는 상위-레벨 네트워크 엘 리먼트 (이들 각각은 종속 트리임) 를 나타낸다. 우측 디스플레이 패널 의 바닥에 따른 링크 (851, 852) 등은 패널 에 대한 다른 \"대시보드\" 디스플레이에 대한 링크들이고, 또는 이들은 그 자신의 윈도우 에 디스플레이될 수도 있고, 이들 각각은 모니터링된 네트워크(들) 에 대한 집중된, 상위-레벨, 실시간 정보의 패널을 제공한다. 도 9 는 중앙 통신 관리자 (CM) 프로세서에 대한 헬쓰 메트릭 (health metric) 을 나타내는 스크린 디스플레이 의 예시적인 도면이다. 이는, 도 8 의 프로세서 링크 로부터 선택될 수 있다. 이는, 퍼센트 프로 세서 아이들 , 퍼센트 프로세서 서비스 유지보수 , 폰 콜에 대한 퍼센트 프로세서 용도 , 및 다 른 정보를 나타낸다. 도 10 은 QOS 디스플레이를 갖는 폰 트래이스루트 (phone traceroute) 를 나타내는 스크린 디스플레이의 예시적 인 도면이다. 이 스크린은 도 5 의 폰 QOS 를 클릭한 후 폰을 열거하는 중간 스크린 (미도시) 상의 \"트레이스\" 를 클릭함으로써 도달될 수 있다. 이 폰 리스트에서 엔트리를 더블-클릭하는 것은 이하의 도 11 에 도시된 디스플레이를 띄울 것이다. 도 10 은 모든 폰들에 대한 그리피컬 트레이스라우트(traceroute) 도면을 도시한다. 이 폰들은 필터 제어 를 통해서 필터링될 수 있다. 각각의 트레 이스라우트 (1041, 1042 등) 의 라인들은, (당업계에 잘 알려진 방법에 따라서 계산된) 패킷 손실, 라운드-트립 딜레이 및 지터 간격 (interarrival jitter) 의 함수인 현재 품질 서비스 (QOS) 에 따라서 컬러를 변경할 것이다. 도 11 은 라운드-트립 딜레이 , 패킷 손실 (1152a 및 1152b), 및 지터 (1153a 및 1153b) 를 포함하는 하 나의 폰 트레이스라우트에 대한 QOS 세부사항을 나타내는 스크린 디스플레이의 예시적인 도면이다. 지터 및 패킷 손실의 상부 및 하부 디스플레이들 (1103 및 1104) 은 트레이스된 루트의 각각의 말단에 해당하는 메트릭 (예를 들어, 미디어 프로세서 및 폰) 을 반영한다. 도 12 는 폴리시 설정 모듈을 나타내는 스크린 디스플레이의 예시적인 도면이다. \"폴리시\" 는 기록, 이벤트 처리, 등과 같은 이벤트들에 기초하여 표준화된 동작들을 트리거하기 위해 적소에 놓일 수 있다. 폴리시는 스크립트와 비슷한 플로우차트 및 함수로서 프로그래밍된다. 폴리시는 디스플레이 패널 의 (도시된 예시에서, 우측-클릭-접근가능한 메뉴에 의해) 마우스에 의해 접근가능한 GUI 제어를 통해서 인증된다. 각 각의 생성된 폴리시는 패널 에 열거된다. 이 스크린은 도 4 의 셋업 냅 로부터 도달한다 (셋 업->폴리시). 디스플레이된 플로우차트 에 도시된 폴리시는 \"가상\" 익스텐션으로 기록하는 폰에 대 한 것이다 (왜냐하면, 물리적인 폰들은 메시지 기록에 대해 필수적이지는 않기 때문이다). 이 폴리시는, \"IF\" 컨디션 (1211, 1212) 마다 인-서비스 (in-service)/온-후크 (on-hook) 또는 인-서비스/오프-후크의 상태 가 관찰되지 않는 한, 이 이벤트를 삭제하는, 가상 익스텐션의 범위에 대한 실패를 나타내는 이벤트를 삭제하기 위해 새로운 이벤트를 발생시킨다. 이 폴리시는 활성 이벤트 리스트가 소프트폰 실패에 대해 스캐닝되도록 야기하고, 이 소프트폰이 실패되는 경우를 체크한다. 실패하지 않으면, \"실패된\" 이벤트를 삭제하기 위한 새로운 이벤트를 전송한다. 따라서, 일단 확립되면, 각각의 폴리시는 도 2 와 관련하여 설명된 프로토콜들 에 따라서 실시간으로 모니터링된 이벤트들에 기초하여 특정 컨디션들을 연속적으로 집행한다. 도 13 은 서비스 레벨 모니터를 나타내는 스크린 디스플레이의 예시적인 도면이다. 이 디스플레이는 도 5 의 뷰 링크 에서 시작하는 뷰->서비스 레벨을 클릭함으로써 도달가능하다. 도 13 의 디스플레이는 개 별적인 윈도우에서 나타날 수 있고, 또는 도 5 의 패널 에 나타날 수 있다. 도 13 은 제어 에 의해 선택가능한 타임 프레임에 걸친 현재 서비스 레벨 에 (제어 마다) 타임 범위에 걸쳐서 모니 터링되는 서비스 레벨의 롤링 평균 디스플레이 , 및 다른 정보를 더한 것을 나타낸다. 또한, 이 디스 플레이는 실시간으로 모니터링된 네트워크(들) 및 리소스(들) 에 대한 서비스 레벨을 동적으로 나타낸다. 이는, 도 1 내지 도 3 과 관련하여 앞서 개시된 기술들을 통합하는 도 4 내지 도 13 에 예시된 동작가능한 예가, 본 발명의 목적에 따라서, 집합체 내의 복수의 상이한 네트워크들의 이벤트를 관찰하고/하거나 관리할 수 있는 서비스의 형태로 제공된 커버리지 모니터링 및 관리 플랫폼, 또는 실질적인 네트워크 변과 또는 원치않는 추가적인 기반구조 없이 구성 네트워크들 내에서 라우팅할 수 없는 능력, 원격의 네트워크 측정 및 관찰로부터 발생하는 아티팩트, 및 각각의 관리 네트워크로의 연속적인 연결성의 부족으로부터 초래되는 인지의 갭과 같은 어드레싱 충돌과 같은 과거에 제공되는 것으로부터 시스템을 예방하는 방해물을 극복하는 것 중 임의의 하나를 개별적으로 완전하게 실현한다. 본 발명이 상세하게 설명되었음에도 불구하고, 다양한 변화, 치환, 및 변경이 당업자에 의해 용이하게 확인될 수도 있고 이하의 청구범위에 의해 정의된 바와 같이 본 발명의 사상 및 범위로부터 벗어나지 않고 본 명세서에 서 이루어질 수 있다는 것을 이해해야만 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13"}
{"patent_id": "10-2011-7004922", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명 및 그 이점의 더욱 완전한 이해를 위해, 첨부된 도면과 함께 취해진 이하의 상세한 설명이 참조되며, 여기서 동일한 참조 부호는 동일한 부분을 나타낸다. 도 1 은 본 발명의 일 실시형태의 예시적인 배치에서 각종 컴포넌트들, 및 이들 컴포넌트들의 상호 접속들을 나 타내는 블록도이다. 도 2 는 본 발명의 일 실시형태에서 이용된 라우팅 방법 및 프로토콜을 위한 소켓 및 채널 접속을 나타내는 블 록도이다. 도 3 은 클라이언트에게 데이터를 디스플레이하기 위해 본 발명에 따른 발행 및 가입 메커니즘의 일 실시형태를 이용하는 예시적인 서버 컴포넌트들 및 클라이언트 애플리케이션들 세트를 나타내는 블록도이다. 도 4 는 관리 하의 복수의 상이한 네트워크를 나타내는, 예시의 네트워크 관리 애플리케이션의 탑-레벨 스크린 디스플레이의 묘사이다. 도 5 는 관리된 네트워크들 중 선택된 하나의 모니터링 및 관리에 전용된 예시의 네트워크 관리 애플리케이션의 스크린 디스플레이의 묘사이다. 도 6 은 본 발명의 일 실시형태에 따라 모니터링되는 선택된 관리 네트워크에 대한 이벤트 리스트를 나타내는 스크린 디스플레이의 예시적인 묘사이다. 도 7 은 본 발명의 일 실시형태에 따라, 시간에 대해 선택된 네트워크 상의 포트 사용의 모니터링을 나타내는 스크린 디스플레이의 예시적인 묘사이다. 도 8 은 네트워크 맵 및 엘리먼트들의 디스플레이를 포함하는 관리된 네트워크의 \"계기판\" 뷰를 나타내는 스크 린 디스플레이의 예시적인 묘사이다. 도 9 는 중앙 통신 매니저 (CM) 프로세서의 헬스 메트릭을 나타내는 스크린 디스플레이의 예시적인 묘사이다. 도 10 은 QOS 디스플레이와 전화기 트레이스라우트 (traceroute) 를 나타내는 스크린 디스플레이의 예시적인 묘 사이다. 도 11 은 하나의 전화기 트레이스라우트에 대한 QOS 상세를 나타내는 스크린 디스플레이의 예시적인 묘사이다. 도 12 는 방침 셋업 모듈을 나타내는 스크린 디스플레이의 예시적인 묘사이다. 도 13 은 시간에 대한 현재 서비스를 나타내는 스크린 디스플레이, 플러스 롤링 평균 디스플레이의 예시적인 묘 사이다."}
