{"patent_id": "10-2018-7017017", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2018-0082578", "출원번호": "10-2018-7017017", "발명의 명칭": "제어 객체의 공간 위치 결정 방법 및 장치", "출원인": "텐센트 테크놀로지", "발명자": "저우 밍"}}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제어 객체의 공간 위치 결정 방법(control-object spatial-location determining method)으로서, 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 단계 - 상기 게임 엔진은 물리적 충돌이 적용되지않으며, 상기 공간 위치 요청은 상기 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2제어 객체의 제2 공간 위치를 결정하기 위한 요청임 -; 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하는 단계 - 상기복수의 후보 공간 위치는 상기 제1 공간 위치를 둘러싸고 있고, 상기 복수의 후보 공간 위치와 상기 제1 공간위치 중 어떤 2개의 공간 위치도 서로 겹치지 않음 -; 및 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 단계 를 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하는 단계는, 공간 영역에서, 상기 제1 공간 위치를 중심으로 하는 상기 복수의 후보 공간 위치를 결정하는 단계 - 상기 복수의 후보 공간 위치 각각과 상기 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않음 - 를 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 공간 영역에서, 상기 제1 공간 위치를 중심으로 하는 상기 복수의 후보 공간 위치를 결정하는 단계는, 상기 공간 영역에서, 상기 복수의 후보 공간 위치를 상기 제1 공간 위치를 상기 중심으로 하는 포위 고리(encirclement ring) 위에 분포시키는 단계 를 포함하는, 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, N개의 포위 고리가 있고, 상기 복수의 후보 공간 위치를 상기 제1 공간 위치를 상기 중심으로 하는 포위 고리 위에 분포시키는 단계는, 하나의 그룹의 후보 공간 위치를 상기 N개의 포위 고리 각각의 위에 분포시키는 단계 - i번째 그룹의 후보 공간위치가 i번째 포위 고리 위에 배치되고, N은 1보다 크거나 같은 정수이며, i는 N보다 작거나 같은 양의 정수임- 를 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 i번째 그룹의 후보 공간 위치는 상기 i번째 포위 고리 위에 균등하게 분포되고, 각각의 그룹 내 후보 공간공개특허 10-2018-0082578-2-위치의 개수가 서로 다른, 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서, 상기 복수의 후보 공간 위치를 상기 제1 공간 위치를 상기 중심으로 하는 포위 고리 위에 분포시키는 단계는, 상기 제1 제어 객체와 상기 제2 제어 객체의 속성 정보에 따라, 상기 i번째 포위 고리와 상기 제1 제어 객체 사이의 거리, 상기 i번째 그룹 내 후보 공간 위치의 개수, 및 상기 i번째 그룹의 후보 공간 위치의 분포 방식 중적어도 하나를 설정하는 단계 를 포함하는, 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 단계는, 상기 복수의 후보 공간 위치 중에서 상기 제1 공간 위치에 가장 가까운 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 단계 를 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 복수의 후보 공간 위치 중에서 상기 제1 공간 위치에 가장 가까운 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 단계 이후에, 상기 제1 공간 위치에 가장 가까운 상기 비점유된 후보 공간 위치의 상태를 점유된 상태로 변경하는 단계 를 더 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 단계는, 상기 제2 제어 객체가 상기 제1 제어 객체에 대해 수행하는 동작의 지시를 수신하는 경우, 상기 공간 위치 요청이 검출된 것을 결정하는 단계; 또는 상기 제1 제어 객체가 제3 공간 위치에 위치하고 또한 상기 제1 제어 객체가 제4 공간 위치에 위치하는 복수의제2 제어 객체로 둘러싸여 있는 경우, 상기 제1 제어 객체가 상기 제1 공간 위치로 이동하는 것 그리고 상기 제1 공간 위치와 제3 공간 위치 간의 거리가 사전 설정된 거리를 초과하는 것이 검출되면, 상기 공간 위치 요청이검출된 것을 결정하는 단계 를 포함하는, 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서, 상기 제1 제어 객체가 상기 제3 공간 위치에 위치하고 또한 상기 제1 제어 객체가 상기 제4 공간 위치에 위치하는 상기 복수의 제2 제어 객체로 둘러싸여 있는 경우, 상기 제1 제어 객체가 상기 제1 공간 위치로 이동하는 것 그리고 상기 제1 공간 위치와 상기 제3 공간 위치 간의 상기 거리가 상기 사전 설정된 거리를 초과하지 않는 것이 검출된 경우, 상기 제1 공간 위치와 상기 제3 공간 위치에 기초하여 상기 제1 제어 객체의 움직임 벡터를 결정하는 단계; 및 공개특허 10-2018-0082578-3-상기 움직임 모델 벡터에 따라, 상기 제2 공간 위치에서 제5 공간 위치로 상기 제2 제어 객체를 병진 이동시키는 단계 를 더 포함하는 제어 객체의 공간 위치 결정 방법."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제어 객체의 공간 위치 결정 장치(control-object spatial-location determining apparatus)로서, 프로세서와 메모리를 포함하고, 상기 메모리는 컴퓨터 판독가능 명령을 저장하며, 상기 컴퓨터 판독가능 명령은 상기 프로세서로 하여금, 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 동작 - 상기 게임 애플리케이션은 물리적 충돌이적용되지 않으며, 상기 공간 위치 요청은 상기 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2 제어 객체의 제2 공간 위치를 결정하기 위한 요청임 -; 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하는 동작 - 상기복수의 후보 공간 위치는 상기 제1 공간 위치를 둘러싸고 있고, 상기 복수의 후보 공간 위치와 상기 제1 공간위치 중 어떤 2개의 공간 위치도 서로 겹치지 않음 -; 및 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 동작 을 수행할 수 있게 하는 제어 객체의 공간 위치 결정 장치."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 컴퓨터 판독가능 명령은 상기 프로세서로 하여금, 공간 영역에서, 상기 제1 공간 위치를 중심으로 하는 상기 복수의 후보 공간 위치를 결정하는 동작을 수행할 수있게 하며, 상기 복수의 후보 공간 위치 각각과 상기 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않는, 제어 객체의 공간 위치 결정 장치."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 컴퓨터 판독가능 명령은 상기 프로세서로 하여금, 상기 공간 영역에서, 상기 복수의 후보 공간 위치를 상기 제1 공간 위치를 상기 중심으로 하는 포위 고리 위에분포시키는 동작을 수행할 수 있게 하는, 제어 객체의 공간 위치 결정 장치."}
{"patent_id": "10-2018-7017017", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "비일시적 컴퓨터 판독가능 저장 매체로서, 컴퓨터 판독가능 명령을 저장하고, 상기 컴퓨터 판독가능 명령은 적어도 하나의 프로세서로 하여금, 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 동작 - 상기 게임 애플리케이션은 물리적 충돌이적용되지 않으며, 상기 공간 위치 요청은 상기 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2 제어 객체의 제2 공간 위치를 결정하기 위한 요청임 -; 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하는 동작 - 상기복수의 후보 공간 위치는 상기 제1 공간 위치를 둘러싸고 있고, 상기 복수의 후보 공간 위치와 상기 제1 공간위치 중 어떤 2개의 공간 위치도 서로 겹치지 않음 -; 및 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 동작 공개특허 10-2018-0082578-4-을 수행할 수 있게 하는, 비일시적 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2018-7017017", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 제어 객체의 공간 위치 결정 방법 및 장치를 개시한다. 제어 객체의 공간 위치 결정 방법은, 게임 애 플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 단계 - 게임 엔진은 물리적 충돌이 적용되지 않으며, 공간 위치 요청은 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2 제어 객체의 제2 공간 위 치를 결정하기 위한 요청임 -; 게임 엔진이 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결 정하는 단계 - 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위 치 중 어떤 2개의 공간 위치도 서로 겹치지 않음 -; 및 게임 엔진이 복수의 후보 공간 위치 중에서 비점유된 후 보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정하는 단계를 포함한다."}
{"patent_id": "10-2018-7017017", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 출원은 중국 특허출원 제201610082767.2호(\"CONTROL OBJECT SPATIAL LOCATION DETERMINING METHOD AND APPARATUS\")에 대해 우선권을 주장하는 바이며, 그 전체 내용이 원용에 의해 본 명세서에 포함된다. 본 출원은 컴퓨터 기술 분야에 관한 것으로, 상세하게는 제어 객체의 공간 위치를 결정하기 위한 방법 및 장치 에 관한 것이다."}
{"patent_id": "10-2018-7017017", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "기존의 기술에서는, 온라인 게임 응용 프로그램에서 일반적으로 같은 타깃을 동시에 공격하는 복수의 논플레이 어 캐릭터(non-player character, NPC)가 있다. NPC는 타깃 주위에서 자신의 위치를 점유하고, 온라인 게임에 서 복수의 NPC의 인공지능(AI)이 동시에 동일한 타깃(예를 들어, 플레이어 캐릭터)을 공격하는 위치 점유 메커 니즘을 AI 포위 메커니즘이라고 한다. 현재의 게임 엔진에서는, AI 포위 메커니즘의 구현이 게임 엔진에 물리 적 충돌이 적용되는지 여부에 따라 2가지 유형으로 분류된다. 물리적 충돌이 적용되는 게임 엔진: 콘솔 게임(예를 들어, 스타 크래프트 또는 워크래프트), 온라인 게임 (예를 들어, 수안 전설(Xuanyuan Legend)) 등. 이 게임의 특징은 게임에서 모든 신체(예: NPC와 같은 전술한 캐릭터 객체)가 공간에서 겹칠 수 없다는 것이다. 따라서, 이러한 유형의 게임 어플리케이션에서는, 복수의 NPC의 AI가 동일한 타깃을 공격하는 경우, 복수의 NPC가 타깃에 비교적 가깝지만 서로 중첩되지 않는 위치로 이 동한다. 물리적 충돌이 적용되지 않는 게임 엔진: 대부분의 게임 애플리케이션에는 물리적인 충돌 엔진이 없고, 이 러한 유형의 게임의 특징은 게임 내에서 신체가 공간에서 중첩될 수 있다는 것이다. 도 1에 도시된 개략도에서 는, 게임 인터페이스 상에서, 4개의 NPC(NPC 1, NPC 2, NPC 3, NPC 4)가 동일한 타깃(도 1의 타깃 객체(M1))을 공격하고 있으며, 도 1의 4개의 NPC 중 3개의 NPC(즉, NPC 1, NPC 2, 및 NPC 3)가 공간에서 중첩되어 있다. 물리적 충돌이 없으므로, NPC를 위해, 게임 장면에서의 전체 공간이 점유될 수 있다. 따라서 모든 NPC가 동일 한 위치 점유 지점을 선택할 수 있으며, 함께 중첩될 수 있다. 따라서, 플레이어의 경험이 종종 현실적이지 않 다. 물리적 충돌이 없는 게임 엔진에서는, 하나의 공간 위치에 복수의 신체가 중첩되지 않게 하는 해결책이 흔히 운 영 효율성이 낮다는 기술적인 문제를 해결하기 위해, 본 개시의 실시예는 제어 객체의 공간 위치 결정 방법 및 장치를 제공한다. 본 개시의 일 양태에 따르면, 제어 객체의 공간 위치 결정 방법이 제공된다. 상기 공간 위치 결정 방법은, 게 임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 단계 - 상기 게임 엔진은 물리적 충돌이 적용되지 않으며, 상기 공간 위치 요청은 상기 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2 제어 객체의 제2 공간 위치를 결정하기 위한 요청임 -; 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치 에 따라 복수의 후보 공간 위치를 결정하는 단계 - 상기 복수의 후보 공간 위치는 상기 제1 공간 위치를 둘러싸 고 있고, 상기 복수의 후보 공간 위치와 상기 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않음 -; 및 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 단계를 포함한다. 본 개시의 다른 양태에 따르면, 제어 객체의 공간 위치 결정 장치가 제공된다. 상기 공간 위치 결정 장치는, 프로세서와 메모리를 포함하고, 상기 메모리는 컴퓨터 판독가능 명령을 저장하며, 상기 컴퓨터 판독가능 명령은 상기 프로세서로 하여금, 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 동작 - 상기 게임 애플 리케이션은 물리적 충돌에 적용되지 않으며, 상기 공간 위치 요청은 상기 게임 애플리케이션 내에서 제1 제어 객체의 제1 공간 위치에 기초하여 제2 제어 객체의 제2 공간 위치를 결정하기 위한 요청임 -; 상기 게임 엔진이 상기 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하는 동작 - 상기 복수의 후보 공간 위치는 상기 제1 공간 위치를 둘러싸고 있고, 상기 복수의 후보 공간 위치와 상기 제1 공간 위치 중 어떤 2개의공간 위치도 서로 겹치지 않음 -; 및 상기 게임 엔진이 상기 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 상기 제2 제어 객체의 제2 공간 위치로서 결정하는 동작을 수행할 수 있게 한다."}
{"patent_id": "10-2018-7017017", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 당업자가 본 개시의 해결책을 더 이해할 수 있도록, 첨부 도면을 참조하여 본 개시의 실시예의 기술적 해 결책에 대해 설명한다. 명백하게, 설명되는 실시예는 본 개시의 모든 실시예가 아니라 일부에 불과하다. 본 개시의 실시예에 기초하여 창의적인 노력없이 당업자에 의해 획득되는 다른 실시예는 본 개시의 보호 범위에 속 할 것이다. 본 명세서와 본 개시의 청구 범위와 첨부 도면의 \"제1\" 및 \"제2\"와 같은 용어는 유사한 객체를 구별하는 데 사 용될 수 있지만, 반드시 특정 순서나 우선순위 정도를 설명하는 데 사용될 필요가 없다는 점을 유의해야 한다. 본 명세서에서 설명된 본 개시의 실시예가 도면에 도시된 것 또는 본 명세서에서 설명된 것과 다른 순서로 구현 될 수 있도록, 이러한 방식으로 사용된 데이터가 적절한 환경에서 상호 교환될 수 있다고 이해해야 한다. 또한, \"포함하다(include)\" 및 \"가지고 있다(have)\"라는 용어와 이 용어의 어떠한 변형도 비독점적으로 포함하 는 것을 포괄하기 위한 것이다. 예를 들어, 일련의 단계나 유닛을 포함하는 프로세스, 방법, 시스템, 제품, 또 는 장치가 명확하게 나열된 단계나 유닛에 한정되지 않고, 명확하게 나열되지 않거나 또는 프로세스, 방법, 제 품 또는 장치에 고유한 다른 단계나 유닛을 포함하고 있을 수 있다. 본 개시의 실시예에 따르면, 제어 객체의 공간 위치 결정 방법의 실시예가 제공된다. 예를 들어, 첨부 도면의 흐름도에 도시된 단계가 컴퓨터 실행가능 명령의 그룹을 가진 컴퓨터 시스템에서 수행될 수 있다는 것을 유의해 야 한다. 또한, 비록 흐름도에는 논리적 순서가 도시되어 있지만, 몇몇 경우에 도시되거나 설명된 단계가 본 명세서의 순서와는 다른 순서로 수행될 수 있다. 일부 실시예에서, 전술한 제어 객체의 공간 위치 결정 방법이 도 2에 도시된 네트워크 환경에 적용될 수 있다. 네트워크 환경은 단말기와 서버를 포함한다. 단말기는 네트워크를 이용하여 서버로의 연결을 구축하 고, 프로세서가 단말기와 서버 모두에 배치될 수 있다. 네트워크는 광역 통신 네트워크, 또는 도시권 통신 네트워크, 또는 근거리 통신 네트워크를 포함하지만 이에 제 한되지 않는다. 일부 실시예에서, 네트워크는 근거리 통신 네트워크이며; 단말기는 개인용 컴퓨터, 또는 모바일 단말기(모바일 폰 또는 태블릿 컴퓨터 등)을 포함할 수 있다. 도 3은 본 개시의 일 실시예에 따른 제어 객체의 공간 위치 결정 방법을 나타낸 도면이다. 도 3에 도시된 바와 같이, 제어 객체의 공간 위치 결정 방법은 이하를 포함한다. S302: 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출한다. 여기서, 공간 위치 요청은 게임 애플리케 이션 내에서 제1 제어 객체의 제1 공간 위치에 따라 제2 제어 객체의 제2 공간 위치를 결정하도록 요청하는 데 사용되고, 게임 엔진은 물리적 충돌이 없는 엔진이다. 즉, 게임 애플리케이션 내의 제어 객체는 동일한 공간 위치에서 겹치는 것이 허용된다. S304: 게임 엔진이 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정한다. 여기서, 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. S306: 게임 엔진이 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로 서 결정한다. 제2 공간 위치가 결정된 후, 제2 공간 위치에 관한 정보를 포함하는 통지가 생성된다. 이 통지를 수신한 후, 제2 제어 객체의 인공지능 제어 유닛(AI)이 제2 제어 객체를 제2 공간 위치로 이동시킨다. 따라서, 본 개시의 본 실시예에서 물리적 충돌 조건이 없는 게임 엔진의 경우, 공간 위치 요청이 검출된 후, 복 수의 후보 공간 위치가 제1 제어 객체의 제1 공간 위치에 따라 결정되고, 복수의 후보 공간 위치 중 비점유된 후보 공간 위치가 제2 제어 객체의 제2 공간 위치로서 결정된다. 전술한 실시예의 복수의 후보 공간 위치가 제 1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. 따라서, 복수의 공간 위치 중에서 비점유된 위치가 제2 제어 객체의 제2 공간 위치로서 선택된다. 복 수의 제2 제어 객체가 있으면, 복수의 제2 제어 객체의 위치가 서로 겹치지 않는다. 따라서, 높은 연구 개발 비용과 낮은 실행 효율을 필요로 하는, 물리적 충돌이 있는 게임 엔진이 없더라도, 물리적 충돌이 없는 게임 엔 진에서는 복수의 제2 제어 객체에 대해 중첩하지 않는 공간 위치가 할당되어, 물리적 충돌이 없는 게임 엔진에 서 복수의 신체가 공간 위치에 겹치지 않게 하는 기존의 해결책이 종종 운영 효율이 낮다는 문제점을 해결할 수 있다. 전술한 실시예의 제1 제어 객체와 제2 제어 객체가 모두 게임 캐릭터일 수 있고, 게임 내에서 정적인 객체 (static object)일 수 있다. 전술한 실시예의 제2 제어 객체는 인공 지능에 의해 제어되는 객체일 수 있고, 공 간 위치 요청은 제2 제어 객체의 인공 지능 제어 유닛에 의해 생성될 수도 있다. 전술한 방법은 게임 엔진 내 에서 포위 매니저(encirclement manager)에 의해 수행될 수 있다. 예를 들어, 제1 제어 객체는 게임 플레이어일 수 있고, 제2 제어 객체는 NPC일 수 있으며, 게임 플레이어는 사 용자가 게임 클라이언트를 사용할 때 동작 명령을 입력하는 사용자에 의해 제어되는 게임 캐릭터일 수 있다. 따라서, 개시된 실시예에 따르면, AI가 NPC의 포위 메커니즘을 이용하여 위치 점유 성능을 더 현실적이고 생생 하게 만들 수 있도록, 물리적 충돌 없이 서로 다른 공간 위치가 게임 애플리케이션 내에서 복수의 NPC에 할당될 수 있고, NPC의 공간 위치가 서로 다르다. 구체적으로, 게임 애플리케이션은 온라인 게임 애플리케이션일 수 있고; 사용자는 게임 계정 번호를 이용하여 단말기 상에 설치된 게임 클라이언트에 로그온하고, 게임 애플리케이션의 게임 시나리오에 들어갈 수 있다. 게 임 시나리오에 들어간 후, 게임 계정 번호는 이 시나리오에서 하나의 게임 캐릭터(즉, 전술한 실시예의 제1 제 어 객체)에 대응한다. 단말기의 게임 클라이언트로부터 시작 명령을 수신한 후, 게임 엔진은 시작 명령에 응답 하여 대응하는 게임을 시작한다. 게임이 시작된 후, NPC가 게임에 나타나는지 여부가 검출된다. NPC가 나타나 면, 공간 위치 요청이 검출된다. 공간 위치 요청이 검출되면, 서로 겹치지 않고 또한 제1 제어 객체의 제1 공 간 위치에 대응하는 복수의 후보 공간 위치가 결정되고, 비점유된 후보 공간 위치가 복수의 공간 위치 중에서 선택되어 NPC의 제2 공간 위치로서 결정된다. 비점유된 후보 공간 위치가 NPC에 할당되고, NPC에 할당된 제2 공간 위치가 NPC에 통지되며, NPC는 제2 공간 위치로 이동한다. 일부 실시예에서, 게임 엔진은 대안적으로, NPC를 제2 공간 위치로 직접 이동시킬 수 있다. 본 개시에서는 이 에 대해 제한하지 않는다. 또한, 이미 하나의 NPC에 의해 점유된 공간 위치가 다른 NPC에 의해 점유되지 않을 것이고; 복수의 NPC가 타깃 (즉, 제1 제어 객체)을 둘러싸는 경우, 복수의 NPC는 서로 겹치지 않으며, 이 게임이 가능한 한 현실적이 되어사용자 경험을 향상시킨다. 도 4는 후보 공간 위치의 분포를 나타낸다. 일 실시예에서, 게임 엔진이 제1 제어 객체의 제1 공간 위치에 따 라 복수의 후보 공간 위치를 결정하는 과정은, 공간 영역에서, 제1 공간 위치를 중심으로 하는 복수의 후보 공 간 위치를 결정하는 것을 포함한다. 여기서, 후보 공간 위치 각각과 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않는다. 도 4에 도시된 바와 같이, 제1 공간 위치를 중심으로 이용하고 또한 사전 설정된 임계값을 반경으로 이용 하여 원형의 공간 영역이 결정된다. 복수의 후보 공간 위치가 원형의 공간 영역 안에 무작위로 배치 된다. 후보 공간 위치 각각과 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않고, 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있다. 이 게임 애플리케이션에서, 제2 제어 객체는 제1 제어 객체에 대해 동작(포위 또는 공격 등)을 수행할 필요가 있다. 따라서, 후보 공간 위치와 제1 공간 위치 사이의 거리가 사전 설정된 거리의 범위 안에 있다고 결정되면, 게임의 포위 또는 공격 기능 공격이 더 잘 구현될 수 있다. 일부 실시예에서, 공간 영역에서, 제1 공간 위치를 중심으로 하는 복수의 후보 공간 위치를 결정하는 것은, 공 간 영역에서, 복수의 후보 공간 위치를 제1 공간 위치를 중심으로 하는 포위 고리 위에 배치하는 단계를 포함할 수 있다. 구체적으로, N개의 포위 고리가 있고, 복수의 후보 공간 위치를 제1 공간 위치를 중심으로 하는 포위 고리 위에 배치하는 단계는, 하나의 그룹의 후보 공간 위치를 N개의 포위 고리 각각의 위에 배치하는 단계를 포함한다. 여기서, i번째 그룹의 후보 공간 위치가 i번째 포위 고리 위에 배치되고, N은 1보다 크거나 같은 정수이며, i는 N보다 작거나 같은 양의 정수이다. 제1 공간 위치를 원의 중심으로 이용하여 N개의 포위 고리가 배치될 수 있다. 각각의 포위 고리의 반경이 서로 다르다. 하나의 그룹의 후보 공간 위치가 각각의 포위 고리 위에 배치된다. 즉, i번째 그룹의 후보 공간 위치 가 i번째 포위 고리 위에 배치된다. 이런 방식으로, 후보 공간 위치를 배치하는 무질서도가 감소되며, 프로세 서의 성능이 향상된다. 또한, 각각의 포위 고리 위의 후보 공간 위치 간의 거리가 일정하고, 포위 고리에 대해 서 제2 공간 위치가 차례로 선택될 수 있다. 예를 들어, 제1 포위 고리 위의 후보 공간 위치가 먼저 선택되고, 제1 포위 고리 위에 적절한 위치가 없으면, 제2 포위 고리 위의 위치가 선택되며; 다른 상황도 이와 유사하게 처리될 수 있다. 후보 공간 위치의 무작위적 배치에 비해, 이 해결책에서는, 후보 공간 위치의 배치가 규칙을 따르고 또한 후보 공간 위치의 선택도 규칙을 따름으로써, 처리 속도가 증가된다. 또한, 후보 공간 위치가 배치되는 경우, i번째 그룹의 후보 공간 위치가 i번째 포위 고리 위에 균등하게 분포되 고, 각각의 그룹 내 후보 공간 위치의 개수가 서로 다르다. 도 5에 도시된 바와 같이, 제1 제어 객체가 제1 공간 위치에 위치하고, 결정된 공간 영역 내부에서, 3개의 포위 고리(3개의 포위 고리는 모두 라벨로 식별됨)가 배치될 수 있다. 3개의 포위 고리 의 반경이 각각 r1, r2, 및 r3이다. 3개의 포위 고리의 반경이 서로 다르고, 하나의 그룹의 후보 공간 위 치가 각각의 포위 고리 위에 배치되며, 각각의 그룹 내 후보 공간 위치의 개수가 서로 다르다. 도 5에서, 제1 그룹에는 5개의 후보 공간 위치가 있고, 제2 그룹에는 9개의 후보 공간 위치가 있으며, 제3 그룹에는 13개의 후보 공간 위치가 있고, 후보 공간 위치가 각각의 포위 고리 위에 고르게 분산되어 있다. 본 개시에서, 포위 고리가 가상의 개념일 뿐이고, 후보 공간 위치가 반경 거리에 따라 설정될 수 있으며, 포위 고리가 사용되지 않을 수 있다는 것을 유의해야 한다. 즉, 제1 제어 객체를 중심으로 하는 N개의 그룹의 후보 공간 위치가 서로 다른 반경 거리에 따라 배치되고, 각각의 그룹에서는 후보 공간 위치와 제1 제어 객체 사이의 거리가 동일할 수 있다. 일부 실시예에서, 복수의 후보 공간 위치를 제1 공간 위치를 중심으로 하는 포위 고리 위에 배치하는 단계는, 제1 제어 객체와 제2 제어 객체의 속성 정보에 따라, i번째 포위 고리와 제1 제어 객체 사이의 거리, i번째 그 룹 내 후보 공간 위치의 개수, 및 i번째 그룹의 후보 공간 위치의 분포 방식 중 적어도 하나를 설정하는 단계를 포함할 수 있다. 일 실시예에서, 복수의 포위 고리, 각각의 포위 고리와 제1 제어 객체 간의 거리, 각각의 그룹 내 후보 공간 위 치의 개수, 및 후보 공간 위치의 분포 방식(균일한 분포 또는 불균일한 분포 등)이 제1 제어 객체와 제2 제어객체의 속성에 따라 결정될 수 있다. 복수의 NPC가 동일한 타깃을 둘러싸는 경우, 복수의 NPC가 서로 겹치지 않게 하면서 가능한 한 진짜처럼 보이게 하기 위해, 본 개시에서는 후보 공간 위치를 \"포메이션(formation)\"이라고 한다. 도 6에 도시된 바와 같이, 포 메이션은 타깃(즉, 제1 제어 객체) 주위의 일련의 가상의 지점(즉, 후보 공간 위치)이다. 후보 공간 위치가 분산된 경우, 각각의 후보 공간 위치에 위치하는 NPC 객체가 타깃 객체에 대해 동작을 직접 수행할 수 있도록, 복수의 후보 공간 위치 각각과 타깃 객체(즉, 제1 제어 객체)의 제1 공간 위치 사이의 연결 이 서로 일치하지 않는다. 즉, 타깃 객체에 대해 동작이 직접 수행될 수 있는 위치에 각각의 후보 공간 위치가 배치된다. 일부 실시예에서, 각각의 후보 공간 위치가 어떤 2개의 후보 공간 위치와 제1 공간 위치를 이용하여 결정된 각 도에 따라 배치될 수 있다. 이 각도는 제1 공간 위치를 정점(vertex)으로 이용하고, 어느 2개의 후보 공간 위 치 중 하나의 후보 공간 위치와 꼭지점 사이의 연결선을 하나의 변으로 사용하며, 어느 2개의 후보 공간 위치 중 다른 후보 공간 위치와 꼭지점 사이의 연결선을 다른 변으로 사용한다. 구체적으로, 타깃 객체(예를 들어, 도 6에 도시된 제1 제어 객체) 주위의 공간(공간 영역이고도 함), 예컨 대 도 6에 도시된 공간이 타깃 객체로부터의 거리에 따라 먼저 N개의 \"포위 고리\"(예를 들어, 3개의 포위 고리가 도 6에 도시되어 있으며, 3개의 포위 고리는 반경이 각각 r1, r2, 및 r3인 3개의 원일 수 있 음)로 분할된다. 또한, \"포위 지점\"(즉, 후보 공간 위치)이 포위 고리 위에 적절한 각도로 할당된다. 적 절한 각도는 게임 애플리케이션의 시나리오에 기초하여 자체 정의될 수 있거나, 또는 타깃 객체와 NPC 객체의 속성에 따라 설정될 수 있다. 도 6에 도시된 바와 같이, H1과 H2 간의 각도, H3과 H4 간의 각도, H5와 H6 간의 각도는 각각 a1, a2, 및 a3이다. 포위 고리의 반경(r)과 포위 고리의 개수(N) 모두, 각각의 포위 고리 위의 포 위 지점의 개수(이 변수는 포위 지점 간의 각도 'a'를 이용하여 대안적으로 결정될 수 있음)는 서비스 요구사항 에 따라 자체 정의될 수 있다. 유사하게, 포위 지점의 분포 방식이 반드시 포위 고리의 방식일 필요는 없으며, 포위 지점은 어떠한 모양으로도 분포될 수 있다. 복수의 후보 공간 위치의 포위 효과를 더 생생하게 만들기 위해, 복수의 후보 공간 위치의 상대적인 위치가 오 프셋 벡터에 따라 조절될 수 있다는 것을 추가로 유의해야 한다. 도 7에 도시된 바와 같이, 제1 제어 객체가 제1 공간 위치에 위치하고, 결정된 공간 영역에 3개의 포위 고리(3개의 포위 고리는 모두 번호 로 식별됨)가 배치될 수 있다. 하나의 그룹의 후보 공간 위치가 포위 고리 각각 위에 배치되고, 거리와 각도의 일부 랜덤 오프셋이 포위 고리 각각 위에서 포위 지점의 상대적인 위치(즉, 후보 공간 위치)에 대해 수행되어, 불균일 효과가 생긴다. 즉, 조정 이후, 포위 고리와 제1 제어 객체 사이의 거리가 변경되지 않은 채 유지될 수 있고, 각각의 포위 고리 위의 후보 공간 위치가 변경된다. 포위 고리 위에 는 변경된 후보 공간 위치가 더 이상 위치하지 않을 수 있다. 따라서, 제2 공간 위치가 결정된 경우, 사전 정의된 우선순위 선택 방식, 예를 들어 거리가 가장 짧은 공간 위 치를 먼저 선택하는 선택 방식, 또는 이웃하는 후보 공간 위치로부터의 거리가 가장 큰 공간 위치를 선택하는 선택 방식에 따라 제2 공간 위치가 선택될 수 있다. 사전 정의된 우선순위 선택 방식은 서비스 요구사항에 따 라 대안적으로 자체 정의될 수 있다. 일반적으로, 거리가 가장 짧은 공간 위치를 선택하는 원칙을 따를 수 있 다. 즉, 비교적 타깃 객체에 가깝고 또한 포위 고리 위의 NPC의 현재 위치에 가장 가까운 포위 지점이 NPC(괴 물 등)에 할당된다. 즉, 게임 엔진이 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정하는 단계는, 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가까운 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정하는 단계를 포함할 수 있다. 구체적으로, 제1 공간 위치가 결정된 후, 제1 공간 위치에 가장 가까운 포위 고리가 획득되고, 비점유된 후보 공간 위치가 현재 획득된 포위 고리 중에서 선택된다. 현재 획득된 포위 고리 상의 모든 후보 공간 위치가 점 유되면, 가장 가까운 다음 포위 고리가 획득되고, 점유된 포위 고리가 발견될 때까지 가장 가까운 다음 포위 고 리가 획득된다. 전술한 실시예에서, 동일한 포위 고리 위에 여러 비점유된 후보 공간 위치가 있으면, 비점유된 후보 공간 위치 중 하나가 제2 공간 위치로서 무작위로 선택될 수 있거나; 또는 비점유된 후보 공간 위치 중에서 제2 제어 객체 의 현재 위치에 가장 가까운 위치가 제2 공간 위치로서 선택될 수 있거나; 또는 제2 제어 객체의 현재 위치기 비어 있으면(즉, 제2 제어 객체가 게임 공간에 존재하지 않으면), 무작위적 선택이 수행될 수 있다. 또한, 각각의 후보 공간 위치가 상태 플래그를 가지고 있을 수 있다. 상태 플래그는 후보 공간 위치가 점유되 어 있는지 여부를 나타내는 데 사용된다. 즉, 대응하는 후보 공간 위치가 점유되어 있는지 여부가 상태 플래그 에 따라 결정될 수 있다. 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가까운 비점유된 후보 공간 위 치가 제2 제어 객체의 제2 공간 위치로서 결정된 후에, 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가 까운 비점유된 후보 공간 위치의 상태가 점유 상태로 변경된다. 매번 제2 공간 위치가 결정된 후에, 결정된 제2 공간 위치의 상태가 점유 상태로 변경된다. 유사하게, 매번 NPC가 사라진 후, 다음 번에 공간 위치가 선택되는 경우, 사라진 NPC의 공간 위치의 상태가 다시 비점유 상태로 변경됨으로써, 제2 제어 객체의 공간 위치가 정확하게 결정되는 것이 보장될 수 있다. 이하, 도 8을 참조하여 본 출원의 전술한 실시예에 대해 상세하게 설명한다. 도 8에 도시된 바와 같이, 위치 결정 요청이 검출된 후, 제1 제어 객체의 제1 공간 위치의 복수의 후보 공간 위치가 결정된다(전술한 실시 예 중 어느 하나의 실시예에서 이 방식으로 후보 공간 위치가 결정될 수 있다). 도 8에 도시된 실시예에서, 공 간 영역에서, 결정된 후보 공간 위치 중 일부가 이미 점유되어 있다. 예를 들어, 도 8의 제1 포위 고리 위의 H11, H12, H13, 및 H14가 이미 점유되어 있고, 제2 포위 고리 위의 H23이 이미 점유되어 있다. 앞에서 설 명한 바와 같이, 제1 포위 고리 위의 비점유된 후보 공간 위치(H15)가 선택될 수 있고, H15가 제2 공간 위치로 서 결정된다. 게임 엔진이 제2 공간 위치에 관한 정보를 싣고 있는 통지를 생성하고, 이 통지를 제2 제어 객체 의 수동 제어 유닛에 송신한다. 수동 제어 유닛은, 제1 제어 객체에 대해 공격과 같은 동작을 수행하기 위해 제2 제어 객체를 제2 공간 위치로 이동시킨다. 도 8의 검은 후보 공간 위치는 점유된 후보 공간 위치를 나타낸다. 또한, 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출하는 단계는, 제2 제어 객체가 제1 제어 객체에 대해 수행한 동작의 명령을 수신하는 경우, 게임 엔진이 공간 위치 요청이 검출된 것을 결정하거나; 또는 제1 제어 객체가 제3 공간 위치에 위치하고 또한 제1 제어 객체가 제4 공간 위치에 위치하는 복수의 제2 제어 객체 로 둘러싸여 있는 경우, 제1 제어 객체가 제1 공간 위치로 이동하고 또한 제1 공간 위치와 제3 공간 위치 간의 거리가 사전 설정된 거리를 초과하는 것이 검출되면, 공간 위치 요청이 검출된 것을 결정하는 단계를 포함할 수 있다. 일부 실시예에서, 제1 제어 객체가 제3 공간 위치에 위치하고 또한 제1 제어 객체가 제4 공간 위치에 위치하는 복수의 제2 제어 객체로 둘러싸여 있는 경우, 공간 위치 결정 방법은, 제1 제어 객체가 제1 공간 위치로 이동하 고 또한 제1 공간 위치와 제3 공간 위치 간의 거리가 사전 설정된 거리를 초과하지 않는 것이 검출되면, 제1 공 간 위치와 제3 공간 위치에 기초하여 제1 제어 객체의 움직임 벡터를 결정하고; 움직임 벡터에 따라 제2 공간 위치에서 제5 공간 위치로 제2 제어 객체를 병진 이동시키는 단계를 더 포함한다. 즉, 제1 제어 객체의 이동 범위가 크지 않으면, 공간 위치 요청을 다시 생성할 필요 없이, 제2 제어 객체가 제1 제어 객체의 움직임에 기 초하여 병진 이동하여 자원을 절감한다. 일부 실시예에서, 게임 기능이 시작된 후, 제2 제어 객체가 제1 제어 객체를 공격하는 경우, 공격 명령이나 포 위 명령과 같은 동작 명령이 생성되고, 공간 위치 요청이 생성된다. 그 다음에, 게임 엔진이 공간 위치 요청을 검출할 수 있다. 일부 실시예에서, NPC가 동작 명령을 생성하는 것이 검출되면, 공간 위치 요청이 검출된 것으 로 결정된다. 일부 실시예에서, 게임 기능이 시작된 후, 제1 제어 객체가 제3 공간 위치에 위치하고, 제1 제어 객체가 제4 공 간 위치에 위치하는 복수의 제2 제어 객체로 둘러싸여 있으며; 제1 제어 객체가 이전의 상태에 있는 경우, 게임 엔진이 제1 제어 객체의 위치가 제1 공간 위치로 이동하고 또한 이 움직임의 범위가 매우 크다는 것을 검출한다. 제3 제어 위치가 이동하는 거리가 사전 설정된 거리 범위를 초과하면, NPC가 공간 위치 요청을 생성 하여 PC의 공간 위치를 다시 획득한다. 이하, 도 9를 참조하여 더 자세히 설명한다. 제1 제어 객체가 제3 공간 위치에 위치하고 또한 제4 공간 위치에 위치하는 3개의 제2 제어 객체가 제1 제어 객체를 둘러싸는 경우, 제1 제어 객체가 이동하고 또한 제1 제어 객체가 이동하는 거리가 크면, 제1 제어 객체의 제1 공간 위치로 도 9에 도시된 바와 같이, NPC 의 AI가 공간 위치 요청을 생성하여 공간 위치를 다시 신청한다. NPC가 타깃을 공격하는 경우, 복수의 후보 공간 위치 중에서 하나의 포위 지점(즉, 제2 공간 위치)이 신청되어 NPC의 위치 점유 지점으로 사용되고, 현재 상태가 포위 지점 위에 기록된다. 검은 후보 공간 위치로 도시된 바 와 같이, 이미 다른 NPC에 의해 점유된 포위 지점이 다른 NPC에 의해 점유될 수 없으며, 나머지 NPC가 나머지비점유된 포위 지점 중에서 단지 선택될 수 있을 뿐이다. 포위 지점을 선택하는 우선순위 알고리즘이 서비스 요구사항에 따라 대안적으로 자체 정의될 수 있다. 일반적 으로, 거리가 가장 짧은 지점을 먼저 선택하는 원리를 따른다. 즉, 포위 고리 위에서 비교적 타깃에 가깝고 또 한 괴물(즉, 제2 제어 객체)의 현재 위치에 가장 가까운 포위 지점이 괴물에 할당된다. 포위 타겟은 반드시 정적인 것은 아니며, 타깃이 계속 움직이는 경우, 전체 \"포메이션\"이 타깃을 기반으로 연속 적으로 그리고 병진적으로 이동한다. 즉, 각각의 포위 지점의 절대 좌표가 계속 변경된다. 따라서, NPC가 적 용을 통해 포위 지점을 획득한 후, AI가 포위 지점의 현재 좌표를 계속 결정할 필요가 있고, NPC가 포위 지점에 서 비교적 큰 차이로 벗어난 것을 발견하면, AI가 NPC를 새로운 좌표로 이동시키는 것을 시작한다. 또한, 타깃 의 하나의 오프 이동(off movement)이 비교적 큰 차이로 원래의 좌표에서 벗어나서(도 9에 도시된 상태와 같이) 포위 상태에 있는 NPC의 상대적인 위치가 비교적 크게 바뀌면, NPC가 적용 프로세스를 다시 개시할 수 있도록 모든 포위 지점이 동시에 리셋될 수 있다. 도 10에 도시된 바와 같이, 본 개시의 개시된 실시예에서 생성된 게임 시나리오에서 4개의 제2 제어 객체(NPC1, NPC2, NPC3, 및 NPC4)와 하나의 제1 제어 객체(즉, 타깃 객체 M1)가 있으면, 4개의 제2 제어 객체가 제1 제어 객체를 향해 포위 모멘텀을 생성한다. 도 1과 비교하면, 4개의 NPC의 공간 위치가 서로 겹치지 않는다. 따라서, 본 개시의 개시된 실시예에 따르면, 물리적 충돌이 없는 게임에서, 괴물 포위를 위해 충돌의 효과가 시 뮬레이션됨으로써, 괴물 성능이 더 사실적일 수 있다. 개시된 방법 실시예에 따르면, 간략한 설명을 위해, 방법 실시예가 일련의 동작의 조합으로서 기술된다는 것을 유의해야 한다. 그러나, 당업자라면 몇몇 단계가 본 개시에 따라 다른 순서로 수행되거나 또는 동시에 수행될 수 있으므로, 본 개시가 설명된 동작 순서에 제한되지 않는다는 것을 알 수 있을 것이다. 둘째, 당업자는 명세 서에 설명된 모든 실시예가 바람직한 실시예이고 또한 관련 동작과 모듈이 반드시 본 개시에 필요한 것이 아니 라는 것을 알아야 한다. 또한, 당업자는 전술한 실시예에 따른 방법이 소프트웨어와 필요한 일반적인 하드웨어 플랫폼을 이용하여 구현 될 수 있거나, 또는 하드웨어를 이용하여 구현될 수 있다는 것을 알 수 있다. 하지만, 대부분의 경우에, 전자 가 바람직한 구현이다. 이러한 이해에 기초하여, 본 발명의 기술적 해결책 또는 기술에 기여하는 부분이 소프 트웨어 제품의 형태로 구현될 수 있다. 컴퓨터 소프트웨어 제품은 저장 매체(ROM/RAM, 자기 디스크, 또는 광 디스크 등)에 저장되어 있으며, 본 발명의 실시예에서 설명된 방법을 수행하도록 단말 장치(모바일 폰, 컴퓨터, 서버, 또는 네트워크 장치 등일 수 있음)에 지시하기 위한 몇몇 명령을 포함한다. 본 개시의 실시예에 따라, 도 11에 도시된 바와 같이, 전술한 제어 객체의 공간 위치 결정 방법을 구현하는 데 사용되는 장치가 더 제공된다. 본 실시예에서, 전술한 제어 객체 공간 위치 결정 장치는 대안적으로 도 2에 도시된 네트워크 환경에 적용될 수 있다. 도 11에 도시된 바와 같이, 제어 객체 공간 위치 결정 장치는 검출 유닛, 제1 결정 유닛, 및 제2 결 정 유닛을 포함한다. 검출 유닛은 공간 위치 요청을 검출하도록 구성된다. 여기서, 공간 위치 요청은 게임 애플리케이션 내에 서 제1 제어 객체의 제1 공간 위치에 따라 제2 제어 객체의 제2 공간 위치를 결정하도록 요청하는 데 사용되고, 게임 엔진은 물리적 충돌이 없는 엔진이다. 예를 들어, 게임 애플리케이션 내의 제어 객체가 하나의 공간 위치 에서 겹치는 것이 허용된다. 제1 결정 유닛은 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정하도록 구성된다. 여기서, 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸며, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개도 서로 겹치지 않는다. 제2 결정 유닛는 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위 치로서 결정하도록 구성된다. 제2 공간 위치가 결정된 후, 제2 공간 위치에 관한 정보를 싣고 있는 통지가 생성된다. 이 통지를 수신한 후에, 제2 제어 객체의 AI(인공 지능 제어 유닛 등)가 제2 제어 객체를 제2 공간 위치로 이동시킨다. 본 실시예의 장치는 게임 애플리케이션의 게임 엔진에 있을 수 있고, 게임 엔진은 게임 애플리케이션에 대응하 는 서버에 위치할 수 있다. 따라서, 물리적 충돌이 없는 게임 엔진의 경우, 공간 위치 요청이 검출된 후, 복수의 후보 공간 위치가 제1 제 어 객체의 제1 공간 위치에 따라 결정되고, 복수의 후보 공간 위치 중 비점유된 후보 공간 위치가 제2 제어 객 체의 제2 공간 위치로서 결정된다. 전술한 실시예의 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. 따라서, 복수의 공간 위치 중에서 비점유된 위치가 제2 제어 객체의 제2 공간 위치로서 선택된다. 복수의 제2 제어 객체가 있는 경 우, 복수의 제2 제어 객체의 위치는 중첩하지 않는다. 따라서, 높은 연구 개발 비용과 낮은 실행 효율을 가진 물리적 충돌이 있는 게임 엔진 대신 물리적 충돌이 없는 게임 엔진에서는 중첩하지 않는 공간 위치가 복수의 제 2 제어 객체에 할당되어, 물리적 충돌이 없는 게임 엔진에서 복수의 신체가 하나의 공간 위치에 겹치지 않게 하 는 기존의 해결책이 종종 운영 효율성이 낮다는 문제점을 해결할 수 있다. 제1 제어 객체와 제2 제어 객체는 모두 게임 캐릭터일 수 있거나, 또는 게임 내의 정적인 신체일 수 있다. 제2 제어 객체는 인공 지능에 의해 제어되는 객체일 수 있고, 공간 위치 요청도 제2 제어 객체의 인공 지능 제어 유 닛에 의해 생성된다. 전술한 방법은 게임 엔진 내의 포위 매니저에 의해 수행될 수 있다. 예를 들어, 제1 제어 객체는 게임 플레이어일 수 있고, 제2 제어 객체는 NPC일 수 있으며, 게임 플레이어는 사 용자가 게임 클라이언트를 사용할 때 동작 명령을 입력하는 사용자에 의해 제어되는 게임 캐릭터일 수 있다. 따라서, 심지어 물리적 충돌이 없더라도, AI가 포위 메커니즘을 이용하여 NPC의 위치 점유 성능을 더 사실적으 로 그리고 더 생생하게 만들 수 있도록, 게임 애플리케이션 공간 내 서로 다른 공간 위치가 복수의 NPC에 할당 되고, NPC의 공간 위치는 서로 다르다. 특정한 실시예에서, 제1 결정 유닛은 제1 공간 위치를 중심으로 하는 공간 영역에서 복수의 후보 공간 위치를 결정하도록 구성된 결정 모듈을 포함할 수 있다. 여기서, 후보 공간 위치 각각과 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않는다. 제1 공간 위치를 중심으로 이용하고 사전 설정된 임계값을 반지름으로 이용하여 원형의 공간 영역이 결정되고 또한 복수의 후보 공간 위치가 원형의 공간 영역 내에 무작위로 배치되면, 후보 공간 위치 각각과 제1 공간 위 치 간의 거리가 사전 설정된 임계값을 초과하지 않으며, 복수의 후보 공간 위치가 제1 공간 위치를 둘러싸고 있 다. 이 게임 애플리케이션에서는, 제2 제어 객체가 제1 제어 객체에 대해 동작(포위 또는 공격 등)을 수행할 필요가 있다. 따라서, 후보 공간 위치와 제1 공간 위치 사이의 거리가 사전 설정된 거리의 범위 안에 있다고 결정되면, 게임의 포위 기능이나 공격 기능이 더 잘 구현될 수 있다. 일부 실시예에서, 결정 모듈은, 공간 영역에서, 복수의 후보 공간 위치를 제1 공간 위치를 중심으로하는 포위 고리 위에 배치하도록 구성된 배치 서브모듈(disposition sub-module)을 포함할 수 있다. 구체적으로, N개의 포위 고리가 있다. 배치 서브모듈은, 하나의 그룹의 후보 공간 위치를 N개의 포위 고리 각 각 위에 배치하도록 구성된 제1 위치 배치 서브모듈을 포함한다. 여기서, i번째 그룹의 후보 공간 위치가 i번 째 포위 고리 위에 배치되고, N은 1보다 크거나 같은 정수이며, i는 N보다 작거나 같은 양의 정수이다. N개의 포위 고리가 제1 공간 위치를 원의 중심으로 이용하여 배치될 수 있다. 각각의 포위 고리의 반경이 서로 다르다. 하나의 그룹의 후보 공간 위치가 각각의 포위 고리 위에 배치된다. 즉, i번째 그룹의 후보 공간 위치 가 i번째 포위 고리 위에 배치된다. 이런 방식으로, 후보 공간 위치를 배치하는 무질서도가 감소되고, 프로세 서의 성능이 향상된다. 또한, 각각의 포위 고리 위의 후보 공간 위치 간의 거리가 일치하고, 포위 고리에 대해 제2 공간 위치가 차례로 선택될 수 있다. 예를 들어, 제1 포위 고리 위의 후보 공간 위치가 먼저 선택되고, 제 1 포위 고리 위에 적절한 위치가 없으면 제2 포위 고리 위의 위치가 선택되며, 기타 등등이다. 후보 공간 위치 의 무작위적 배치와 비교하여, 이 해결책에서는 후보 공간 위치의 배치가 규칙을 따르며, 후보 공간 위치의 선 택도 규칙을 따름으로써 처리 속도를 높인다. 또한, 후보 공간 위치가 배치되는 경우, i번째 그룹의 후보 공간 위치가 i번째 포위 고리 위에 균등하게 배치되 고, 각각의 그룹 내 후보 공간 위치의 개수가 서로 다르다. 일부 실시예에서, i번째 그룹의 후보 공간 위치가 i번째 포위 고리 위에 대안적으로 균등하지 않게 분포될 수 있고, 각각의 그룹 내 후보 공간 위치의 개수가 동일할 수 있다. 본 개시에서, 포위 고리가 가상의 개념에 불과하며, 후보 공간 위치가 반경 거리에 따라 배치될 수 있고, 포위 고리가 배치되지 않을 수 있다는 것을 유의해야 한다. 즉, 제1 제어 객체를 중심으로 이용하여 N개의 그룹의 후보 공간 위치가 서로 다른 반경 거리에 따라 배치되고, 각각의 그룹에서는 후보 공간 위치와 제1 제어 객체 사이의 거리가 동일할 수 있다. 일부 실시예에서, 배치 서브모듈은, 제1 제어 객체와 제2 제어 객체의 속성 정보에 따라, i번째 포위 고리와 제 1 제어 객체 사이의 거리, i번째 그룹 내 후보 공간 위치의 개수, 및 i번째 그룹의 후보 공간 위치의 분포 방식 중 적어도 하나를 설정하도록 구성된 제2 위치 배치 서브모듈(second location disposition sub-module)을 포 함한다. 일 실시예에서, 포위 고리의 개수, 각각의 포위 고리와 제1 제어 객체 간의 거리, 각각의 그룹 내 후보 공간 위 치의 개수, 및 후보 공간 위치의 분포 방식(균일한 분포 또는 불균일한 분포 등)이 제1 제어 객체와 제2 제어 객체의 속성에 따라 결정될 수 있다. 후보 공간 위치가 배치되는 경우, 각각의 후보 공간 위치에 위치하는 NPC 객체가 타깃 객체에 대해 동작을 직접 수행할 수 있도록, 복수의 후보 공간 위치 각각과 타깃 객체(즉, 제1 제어 객체)의 제1 공간 위치 사이의 연결 이 서로 일치하지 않는다. 즉, 각각의 후보 공간 위치가 타깃 객체에 대해 동작이 직접 수행될 수 있는 위치로 설정된다. 또한, 제2 공간 위치가 결정된 경우, 사전 정의된 우선순위 선택 방식에 따라 제2 공간 위치가 선택될 수 있다. 예를 들어, 거리가 가장 짧은 공간 위치를 먼저 선택하는 선택 방식이거나, 또는 이웃하는 후보 공간 위치로부 터의 거리가 가장 큰 공간 위치를 선택하는 선택 방식이다. 사전 정의된 우선순위 선택 방식은 서비스 요구사 항에 따라 대안적으로 자체 정의될 수 있다. 일반적으로, 거리가 가장 짧은 공간 위치를 먼저 선택하는 원리에 따를 수 있다. 비교적 타깃 객체에 가까운 포위 지점으로서 포위 고리 상의 NPC의 현재 위치에 가장 가까운 포 위 지점이 NPC(괴물 등)에 할당된다. 즉, 제2 결정 유닛에 포함된 위치 선택 모듈은 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가까운 비 점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정하도록 구성된다. 구체적으로, 제1 공간 위치가 결정된 후, 제1 공간 위치에 가장 가까운 포위 고리가 획득되고, 비점유된 후보 공간 위치가 현재 획득된 포위 고리 중에서 선택된다. 현재 획득된 포위 고리 위의 후보 공간 위치가 점유되면, 가장 가까운 다음 포위 고리가 획득되고, 점유된 포위 고리가 발견될 때까지 나머지가 유추에 의해 추론된다. 또한, 각각의 후보 공간 위치가 상태 플래그를 가지고 있을 수 있다. 상태 플래그는 후보 공간 위치가 점유되 어 있는지 여부를 나타내는 데 사용된다. 즉, 대응하는 후보 공간 위치가 점유되어 있는지 여부가 상태 플래그 에 따라 결정될 수 있다. 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가까운 비점유된 후보 공간 위 치가 제2 제어 객체의 제2 공간 위치로서 결정된 후, 복수의 후보 공간 위치 중에서 제1 공간 위치에 가장 가까 운 비점유된 후보 공간 위치의 상태가 상태 변화 유닛을 이용하여 점유 상태로 변경된다. 일 실시예에서, 검출 유닛은, 제2 제어 객체가 제1 제어 객체에 대해 수행하는 동작의 지시를 수신하는 경우, 공간 위치 요청이 검출된 것을 결정하도록 구성된 제1 검출 모듈; 또는 제1 제어 객체가 제3 공간 위치에 위치 하고 또한 제1 제어 객체가 제4 공간 위치에 위치하는 복수의 제2 제어 객체로 둘러싸여 있는 경우 제1 제어 객 체가 제1 공간 위치로 이동하는 것 그리고 제1 공간 위치와 제3 공간 위치 간의 거리가 사전 설정된 거리를 초 과하는 것이 검출되면, 공간 위치 요청이 검출된 것을 결정하도록 구성된 제2 검출 모듈을 포함한다. 전술한 내용이 공간 위치 요청의 생성을 트리거하기 위한 2가지 트리거 조건이다. 일부 실시예에서, 제2 검출 모듈은 추가적으로, 제1 제어 객체가 제1 공간 위치로 이동하고 또한 제1 공간 위치 와 제3 공간 위치 간의 거리가 사전 설정된 거리를 초과하지 않는 것이 검출되면, 제1 공간 위치와 제3 공간 위 치에 기초하여 제1 제어 객체의 움직임 벡터를 결정하고; 이 움직임 벡터에 따라 제2 제어 객체를 제2 공간 위 치에서 제5 공간 위치로 병진 이동시키도록 구성된다. 포위 타깃이 반드시 정적인 것은 아니며, 타깃이 계속 움직이는 경우, 전체 \"포메이션\"이 타깃에 기초하여 연속 적으로 그리고 병진적으로 이동한다. 즉, 각각의 포위 지점의 절대 좌표가 계속 바뀐다. 따라서, NPC가 적용 을 통해 포위 지점을 획득한 후, AI가 포위 지점의 현재 좌표를 계속 결정할 필요가 있고, NPC가 포위 지점에서 비교적 큰 차이로 벗어난 것을 발견하면, AI가 NPC를 새로운 좌표로 이동시키는 것을 시작한다. 또한, 타깃의하나의 오프 이동이 비교적 큰 차이로 원래의 좌표에서 벗어나서(도 9에 도시된 상태와 같이) 포위 상태에 있는 NPC의 상대적인 위치가 비교적 크게 바뀌면, NPC가 적용 프로세스를 다시 개시할 수 있도록 모든 포위 지점이 동시에 리셋될 수 있다. 또한, 물리적 충돌이 없는 게임에서, 괴물 포위를 위해 충돌의 효과가 또한 시뮬레이션됨으로써 괴물 성능을 더 사실적으로 만들 수 있다. 본 발명에서 제공되는 모듈은 대응하는 방법 실시예에서 제공된 방법을 사용할 수 있으며, 애플리케이션 시나리 오도 동일할 수 있다. 물론, 모듈과 관련된 해결책이 개시된 실시예에서의 내용과 시나리오에 한정되지 않고, 모듈은 컴퓨터 단말기나 모바일 단말기에서 실행될 수 있으며, 소프트웨어 또는 하드웨어에 의해 구현될 수 있 다는 것을 유의해야 한다. 본 개시의 실시예에 따라, 전술한 제어 객체의 공간 위치 결정 방법을 구현하는 데 사용되는 서버가 더 제공된 다. 도 12에 도시된 바와 같이, 서버는 프로세서, 메모리, 및 전송 장치 중 하나 이상(도면에는 하나만 도시되어 있음)을 포함한다. 도 12에 도시된 바와 같이, 단말기는 입력/출력 장치를 더 포함할 수 있다. 메모리는 소프트웨어 프로그램 및 모듈, 예컨대 본 발명의 실시예에서 제어 객체의 공간 위치 결정 방법 과 장치에 대응하는 프로그램 명령/모듈을 저장하도록 구성될 수 있고, 프로세서는 소프트웨어 프로그램 및 메모리에 저장된 모듈을 실행하여 다양한 기능 애플리케이션과 데이터 처리를 실행하는데, 즉 제어 객 체의 공간 위치 결정 방법을 구현한다. 메모리는 고속 랜덤 액세스 메모리를 포함할 수 있고, 비휘발성 메모리, 예컨대 하나 이상의 마그네틱 저장 장치, 또는 플래쉬 메모리, 또는 다른 비휘발성 솔리드 스테이트 메 모리를 포함할 수도 있다. 일부 실시예에서, 메모리는 프로세서에 대해 원격으로 배치된 메모리를 더 포함할 수 있고, 이러한 원격 메모리는 네트워크를 통해 단말기에 연결되어 있을 수 있다. 네트워크의 예는 인터넷, 인트라넷, 근거리 통신 네트워크, 이동 통신 네트워크, 및 이들의 조합을 포함하지만 이에 제한되지 않 는다. 전송 장치는 네트워크를 이용하여 데이터를 수신하거나 송신하도록 구성되고, 프로세서와 메모리 간에 데 이터를 송신하도록 추가로 구성될 수 있다. 전술한 네트워크의 구체적인 예는 유선 네트워크와 무선 네트워크 를 포함할 수 있다. 일 예에서, 인터넷 또는 근거리 통신 네트워크와 통신할 수 있도록, 전송 장치는 네 트워크 케이블을 이용하여 다른 네트워크 장치 및 라우터에 연결될 수 있는 네트워크 인터페이스 컨트롤러(NI C)를 포함한다. 일 예에서, 전송 장치는 무선으로 인터넷과 통신하도록 구성된 무선 주파수(RF) 모듈이 다. 구체적으로, 메모리는 응용 프로그램을 저장하도록 구성된다. 프로세서는 메모리에 저장된 응용 프로그램을 전송 장치를 이용하여 호출함으로써 다음의 단 계를 수행한다. S1: 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출한다. 여기서, 공간 위치 요청은 게임 애플리케이 션 내에서 제1 제어 객체의 제1 공간 위치에 따라 제2 제어 객체의 제2 공간 위치를 결정하도록 요청하는 데 사 용되고, 게임 엔진은 물리적 충돌이 없는 엔진이다. 예를 들어, 게임 애플리케이션 내의 제어 객체가 하나의 공간 위치에서 겹치는 것이 허용된다. S2: 게임 엔진이 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정한다. 여기서, 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. S3: 게임 엔진이 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정한다. 프로세서는 메모리에 저장된 응용 프로그램을 전송 장치를 이용하여 호출함으로써, 제1 공간 위치를 중심으로 하는 공간 영역에서 복수의 후보 공간 위치를 결정하는 단계를 수행한다. 여기서, 후보 공간 위치 각각과 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않는다. 따라서, 물리적 충돌이 없는 게임 엔진의 경우, 공간 위치 요청이 검출된 후, 복수의 후보 공간 위치가 제1 제 어 객체의 제1 공간 위치에 따라 결정되고, 복수의 후보 공간 위치 중 비점유된 후보 공간 위치가 제2 제어 객 체의 제2 공간 위치로서 결정된다. 전술한 실시예의 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. 따라서, 복수의 공간 위치 중에서 비점유된 위치가 제2 제어 객체의 제2 공간 위치로서 선택된다. 복수의 제2 제어 객체가 있는 경 우, 복수의 제2 제어 객체의 위치가 겹치지 않는다. 따라서, 높은 연구 개발 비용과 낮은 실행 효율을 가진 물 리적 충돌이 있는 게임 엔진 대신 물리적 충돌이 없는 게임 엔진에서는 중첩하지 않는 공간 위치가 복수의 제2 제어 객체에 할당되어, 물리적 충돌을 갖추지 못한 게임 엔진에서 복수의 신체가 하나의 공간 위치에 겹치지 않 게 하는 기존의 해결책이 종종 운영 효율이 낮다는 문제점을 해결할 수 있다. 본 실시예의 구체적인 예에 대해서는, 이전 실시예에서 설명한 예를 참조하고, 여기서는 세부사항에 대해 설명 하지 않는다. 또한, 레지스터 영역이 시스템의 내부 메모리 내의 레지스터와 시스템 프로세서라는 것을 추가로 유의해야 한다. 도 12에 도시된 구조는 예시적인 것에 불과하며, 단말기가 스마트폰(안드로이드 모바일 폰 또는 iOS 모바일 폰 등), 태블릿 컴퓨터, 팜탑 컴퓨터, 및 모바일 인터넷 장치(mobile Internet device, MID)와 같은 단말 장치일 수 있거나, 또는 PAD일 수 있다는 것을 당업자라면 이해할 수 있을 것이다. 도 12는 구체적인 구조를 제한하지 않는다. 예를 들어, 단말기는 도 12에 도시된 것보다 많거나 적은 수의 구성요소(네트워크 인터페이스와 디스 플레이 장치 등)를 더 포함하거나, 또는 도 12에 도시된 것과는 다른 구성을 가지고 있을 수 있다. 단말 장치의 관련 하드웨어에 지시하는 프로그램이 전술한 실시예의 방법의 단계 중 전부나 일부를 구현할 수 있다는 것을 당업자라면 이해할 수 있을 것이다. 프로그램은 컴퓨터가 판독 가능한 저장 매체에 저장될 수 있 다. 저장 매체는 플래쉬 드라이브, 읽기 전용 메모리(ROM), 랜덤 액세스 메모리(RAM), 자기 디스크, 또는 광 디스크 등을 포함할 수 있다. 본 개시의 본 실시예는 저장 매체를 추가로 제공한다. 일부 실시예에서, 전술한 저장 매체는 제어 객체의 공간 위치 결정 방법을 수행하기 위한 프로그램 코드를 저장하는 데 사용될 수 있다. 일부 실시예에서, 전술한 저장 매체는 도 2에 도시된 네트워크 내 복수의 네트워크 장치 중 적어도 하나에 위치 할 수 있다. 일부 실시예에서, 저장 매체는 다음의 단계를 수행하기 위해 사용되는 프로그램 코드를 저장하도록 구성된다. S1: 게임 애플리케이션의 게임 엔진이 공간 위치 요청을 검출한다. 여기서, 공간 위치 요청은 게임 애플리케이 션 내에서 제1 제어 객체의 제1 공간 위치에 따라 제2 제어 객체의 제2 공간 위치를 결정하도록 요청하는 데 사 용되고, 게임 엔진은 물리적 충돌이 없는 엔진이다. 예를 들어, 게임 애플리케이션 내의 제어 객체가 하나의 공간 위치에서 겹칠 수 있다. S2: 게임 엔진이 제1 제어 객체의 제1 공간 위치에 따라 복수의 후보 공간 위치를 결정한다. 여기서, 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. S3: 게임 엔진이 복수의 후보 공간 위치 중에서 비점유된 후보 공간 위치를 제2 제어 객체의 제2 공간 위치로서 결정한다. 일부 실시예에서, 저장 매체는 추가적으로, 제1 공간 위치를 중심으로 하는 공간 영역에서 복수의 후보 공간 위치를 결정하는 단계를 수행하기 위해 사용되 는 프로그램 코드를 저장하도록 구성된다. 여기서, 후보 공간 위치 각각과 제1 공간 위치 사이의 거리가 사전 설정된 임계값을 초과하지 않는다. 따라서, 물리적 충돌이 없는 게임 엔진의 경우, 공간 위치 요청이 검출된 후, 복수의 후보 공간 위치가 제1 제 어 객체의 제1 공간 위치에 따라 결정되고, 복수의 후보 공간 위치 중 비점유된 후보 공간 위치가 제2 제어 객 체의 제2 공간 위치로서 결정된다. 전술한 실시예의 복수의 후보 공간 위치는 제1 공간 위치를 둘러싸고 있고, 복수의 후보 공간 위치와 제1 공간 위치 중 어떤 2개의 공간 위치도 서로 겹치지 않는다. 따라서, 복수의 공간 위치 중에서 비점유된 위치가 제2 제어 객체의 제2 공간 위치로서 선택된다. 복수의 제2 제어 객체가 있는 경 우, 복수의 제2 제어 객체의 위치가 겹치지 않는다. 따라서, 높은 연구 개발 비용과 낮은 실행 효율을 가진 물리적 충돌이 있는 게임 엔진 대신 물리적 충돌이 없는 게임 엔진에서는 중첩하지 않는 공간 위치가 복수의 제2 제어 객체에 할당되어, 물리적 충돌이 없는 게임 엔진에서 복수의 신체가 하나의 공간 위치에 겹치지 않게 하는 기존의 해결책이 종종 운영 효율이 낮다는 문제점을 해결할 수 있다. 일부 실시예에서, 저장 매체는 프로그램 코드를 저장할 수 있는 다양한 매체, 예를 들어 USB 디스크, ROM, RAM, 모바일 디스크, 자기 디스크, 및 광 디스크를 포함할 수 있지만 이에 제한되지 않는다. 본 실시예의 구체적인 예에 대해서는, 이전 실시예에서 설명한 예를 참조하고, 본 실시예에서는 세부사항에 대 해 여기서 다시 설명하지 않는다. 본 출원의 선행하는 실시예의 순서 번호는 설명의 목적일 뿐이며, 실시예의 우선순위를 나타내지는 않는다. 소프트웨어 기능 유닛의 형태로 구현되어 독립적인 제품으로서 판매되거나 사용되는 경우, 전술한 실시예의 통 합 유닛이 전술한 컴퓨터 판독가능 저장 매체에 저장될 수 있다. 이러한 이해에 기초하여, 본 출원의 기술적 해결책이 기본적으로, 또는 기술적 해결책의 일부이면서 또한 기존의 기술에 기여하는 부분 또는 기술적 해결책 의 전부나 일부가 소프트웨어 제품 형태로 구현될 수 있다. 컴퓨터 소프트웨어 제품은 저장 매체에 저장되고, 하나 이상의 컴퓨터 장치(개인용 컴퓨터, 서버, 또는 네트워크 장치 등일 수 있음)가 본 발명의 실시예의 방법 의 단계 중 전부 또는 일부를 수행하게 하는 데 사용되는 여러 명령을 포함한다. 본 출원의 전술한 실시예에서, 실시예의 설명은 다른 주안점을 가지고 있으며, 일 실시예에서 상세하게 설명되 지 않은 부분에 대해서는 다른 실시예의 관련 설명을 참조할 수 있다. 본 출원에 제공된 몇몇 실시예에서, 개시된 장치가 다른 방식으로 구현될 수 있다고 이해해야 한다. 전술한 장 치 실시예는 예시적인 것에 불과하다. 예를 들어, 유닛 구분은 단지 논리적 기능 구분일 뿐 실제 구현에서는 이와 다르게 구분될 수 있다. 예를 들어, 복수의 유닛 또는 컴포넌트는 다른 시스템으로 결합되거나 통합될 수 있거나, 또는 몇몇 특징은 무시되거나 수행되지 않을 수도 있다. 또한, 표시되거나 논의된 상호 연결 또는 직 접 연결 또는 통신 연결은 일부 인터페이스를 이용하여 구현될 수 있다. 유닛이나 모듈 간의 간접 결합 또는 통신 연결은 전자적 형태 또는 다른 형태로 구현될 수 있다. 별도의 부분으로 설명된 유닛은 물리적으로 분리되어 있거나 또는 분리되어 있지 않을 수 있고, 유닛으로 표시 된 부분은 물리적 유닛이거나 또는 물리적 유닛이 아닐 수 있으며, 하나의 위치에 놓여 있을 수 있거나, 또는 복수의 네트워크 유닛 상에 분산되어 있을 수 있다. 유닛 중 일부 또는 전부가 실시예의 해결책의 목적을 달성 하기 위한 실제 필요에 따라 선택될 수 있다. 또한, 본 출원의 실시예의 기능 유닛이 하나의 처리 유닛에 통합되어 있을 수 있거나, 또는 유닛이 각각 물리적 으로 단독으로 존재할 수 있거나, 또는 2개 이상의 유닛이 하나의 유닛으로 통합되어 있을 수 있다. 통합 유닛 은 하드웨어의 형태로 구현될 수 있고, 또는 소프트웨어 기능 유닛의 형태로 구현될 수도 있다. 이상에서 설명한 내용은 본 발명의 바람직한 실시예일뿐이며, 당업자는 본 개시의 기술적 사상을 벗어나지 않고 다양하게 수정하고 개선할 수 있다는 것을 유의해야 한다. 본 개시는 이러한 모든 수정과 개선을 포함하기 위 한 것이다. 도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2018-7017017", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 명세서에서 설명하는 첨부 도면은 본 출원에 관한 추가적인 이해를 제공하고, 본 출원의 일부를 구성하는 데 사용된다. 본 출원의 개략적인 실시예와 예시적인 실시예에 관한 설명은 본 출원을 이해하는 데 사용되며, 본 출원을 부적절하게 제한하지 않는다. 이 도면에서, 도 1은 본 개시의 일 실시예에 따라 신체의 공간 위치를 결정하는 것을 개략적으로 나타낸 도면이다. 도 2는 본 개시의 일 실시예에 따른 컴퓨터 네트워크 환경을 개략적으로 나타낸 도면이다. 도 3은 본 개시의 일 실시예에 따른 제어 객체의 공간 위치 결정 방법을 나타낸 흐름도이다. 도 4는 본 개시의 일 실시예에 따른 후보 공간 위치의 분포를 나타낸 제1 개략도이다. 도 5는 본 개시의 일 실시예에 따른 후보 공간 위치의 분포를 나타낸 제2 개략도이다. 도 6은 본 개시의 일 실시예에 따른 후보 공간 위치의 분포를 나타낸 제3 개략도이다. 도 7은 본 개시의 일 실시예에 따른 후보 공간 위치의 분포를 나타낸 제4 개략도이다. 도 8은 본 개시의 실시예에 따른 후보 공간 위치의 분포를 나타낸 제5 개략도이다 도 9는 본 개시의 일 실시예에 따른 공간 위치 요청 생성을 위한 트리거 조건을 나타낸 개략도이다. 도 10는 본 개시의 일 실시예에 따른 공간 위치 결정 방법을 이용하여 생성된 게임 인터페이스를 나타낸 개략도 이다. 도 11은 본 개시의 일 실시예에 따른 제어 객체 공간 위치 결정 장치를 나타낸 개략도이다. 도 12는 본 개시의 일 실시예에 따른 서버의 내부 구조를 나타낸 블록도이다."}
