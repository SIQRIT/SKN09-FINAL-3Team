{"patent_id": "10-2018-0096368", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0020545", "출원번호": "10-2018-0096368", "발명의 명칭": "전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "우샤코브 유리"}}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저장된 스토리지; 및입력 데이터에서 획득된 특징 데이터를 상기 LSM 모델에 입력하고,상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력하며, 상기 RNN 모델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는프로세서;를 포함하며, 상기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은, 서로 링크된 복수의 뉴런을 포함하고, 상기 복수의 뉴런 간 링크에 적용되는 가중치는, 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정되는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 LSM 모델은, 상기 복수의 뉴런 중 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 타겟 개수보다 큰경우 상기 뉴런의 링크에 대응되는 가중치를 감소시키고, 상기 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 상기 타겟 개수보다 작은 경우 상기 뉴런의 링크에 대응되는 가중치를 증가시키는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 복수의 뉴런 중 임의의 송신 뉴런 및 상기 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는, 상기 기 설정된 시간 단위에서 상기 송신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크(spike)의제1 개수 및 상기 수신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득되는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,현재 시간 구간에서 상기 링크의 가중치는, 이전 시간 구간에서 상기 링크의 가중치에 변화량을 합산하여 획득되며, 상기 변화량은, 상기 스파이크의 타겟 개수, 상기 제1 개수 및 상기 제2 개수에 의해 산출된 값에 기초하여 획득되는, 전자 장치.공개특허 10-2020-0020545-2-청구항 5 제4항에 있어서, 상기 LSM 모델은, 상기 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고,상기 기 설정된 시간 단위 마다 상기 설정된 타겟 개수를 기 설정된 개수만큼 증가시키는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5항에 있어서,상기 LSM 모델은,상기 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 상기 기 설정된 시간 단위로 상기송신 뉴런의 정보 엔트로피 값을 획득하고,상기 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 상기 획득된 엔트로피 값을 합산하고, 상기 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수로 설정하는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 4항에 있어서,상기 LSM 모델은,상기 제2 개수가 상기 타겟 개수보다 큰 경우, 상기 변화량이 음수가 되도록 하고,상기 제2 개수가 상기 타겟 개수보다 작은 경우, 상기 변화량이 양수가 되도록 하고,상기 제2 개수가 상기 타겟 개수와 동일한 경우, 상기 변화량을 0으로 설정하는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서, 상기 가중치는 하기 수학식에 기초하여 결정되는, 전자 장치. wij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치, δwij는 상기 가중치의 변화량, α는 기 설정된 상수, ni=Ni/NT (Ni는 기 설정된 시간 단위에서 i뉴런의 스파이크 수, NT는 스파이크의 타겟 개수),nj=Nj/NT (Nj는 기 설정된 시간 단위에서 j뉴런의 스파이크 수, NT는 스파이크의 타겟 개수),δnj=nj-1임."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 특징 데이터는, 퓨리에 변환 계수(Fourier transform coefficients) 및 MFCC(Mel-Frequency Cepstral Coefficients) 중 적어도공개특허 10-2020-0020545-3-하나이며, 상기 프로세서는, 상기 퓨리에 변환 계수 및 상기 MFCC 중 적어도 하나를 상기 LSM 모델에 입력하는, 전자장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 LSM 모델은, 시간에 따라 변하는 상기 특징 데이터를 상기 복수의 뉴런의 액티비티에 기초한 시공간적 패턴(spatio-temporal pattern)으로 변환하여 출력하는, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 전자 장치는,마이크를 더 포함하며,상기 입력 데이터는 상기 마이크를 통해 수신된 음성 데이터이며, 상기 기 설정된 객체는 웨이크 업 워드(wakeup word)인, 전자 장치."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저장된 전자 장치의 제어 방법에있어서,입력데이터에서 특징 데이터를 획득하는 단계;상기 획득된 특징 데이터를 상기 LSM 모델에 입력하는 단계;상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력하는 단계; 및상기 RNN 모델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 단계;를포함하며, 상기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은, 서로 링크된 복수의 뉴런을 포함하고, 상기 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정되는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 LSM 모델은, 상기 복수의 뉴런 중 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가타겟 개수보다 큰 경우 상기 뉴런의 링크에 대응되는 가중치를 감소시키고, 상기 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 상기 타겟 개수보다 작은 경우 상기 뉴런의 링크에 대응되는 가중치를 증가시키는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "공개특허 10-2020-0020545-4-제12항에 있어서, 상기 복수의 뉴런 중 임의의 송신 뉴런 및 상기 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는, 상기 기 설정된 시간 단위에서 상기 송신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크(spike)의제1 개수 및 상기 수신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득되는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,현재 시간 구간에서 상기 링크의 가중치는, 이전 시간 구간에서 상기 링크의 가중치에 변화량을 합산하여 획득되며, 상기 변화량은, 상기 스파이크의 타겟 개수, 상기 제1 개수 및 상기 제2 개수에 의해 산출된 값에 기초하여 획득되는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 LSM 모델은,상기 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고,상기 기 설정된 시간 단위 마다 상기 설정된 타겟 개수를 기 설정된 개수만큼 증가시키는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16항에 있어서,상기 LSM 모델은,상기 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 상기 기 설정된 시간 단위로 상기 송신 뉴런의 정보엔트로피 값을 획득하고, 상기 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 상기 획득된 엔트로피 값을 합산하며, 상기 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수로 설정하는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 15항에 있어서,상기 LSM 모델은, 상기 제2 개수가 상기 타겟 개수보다 큰 경우, 상기 변화량이 음수가 되도록 하고,상기 제2 개수가 상기 타겟 개수보다 작은 경우, 상기 변화량이 양수가 되도록 하고,상기 제2 개수가 상기 타겟 개수와 동일한 경우, 상기 변화량을 0으로 설정하는, 제어 방법."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "공개특허 10-2020-0020545-5-제 18항에 있어서, 상기 가중치는 하기 수학식에 기초하여 결정되는, 제어 방법. wij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치, δwij는 상기 가중치의 변화량, α는 기 설정된 상수, ni=Ni/NT (Ni는 기 설정된 시간 단위에서 i뉴런의 스파이크 수, NT는 스파이크의 타겟 개수),nj=Nj/NT (Nj는 기 설정된 시간 단위에서 j뉴런의 스파이크 수, NT는 스파이크의 타겟 개수),δnj=nj-1임."}
{"patent_id": "10-2018-0096368", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저장된 전자 장치의 프로세서에의해 실행되는 경우 상기 전자 장치가 동작을 수행하도록 하는 컴퓨터 명령을 저장하는 비일시적 컴퓨터 판독가능 매체에 있어서, 상기 동작은,입력데이터에서 특징 데이터를 획득하는 단계;상기 획득된 특징 데이터를 상기 LSM 모델에 입력하는 단계;상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력하는 단계; 및상기 RNN 모델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 단계;를포함하며, 상기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은, 서로 링크된 복수의 뉴런을 포함하고, 상기 복수의 뉴런 간 링크에 적용되는 가중치는, 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정되는, 컴퓨터 판독가능 기록매체."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 전자 장치는 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델 이 저장된 스토리지 및 입력 데이터에서 획득된 특징 데이터를 LSM 모델에 입력하고, LSM 모델의 출력 값을 RNN 모델에 입력하며, RNN 모델의 출력 값에 기초하여 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 프 로세서를 포함하며, RNN 모델은 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, LSM 모델은 서로 링 크된 복수의 뉴런을 포함하고 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설 정된 임계값 이상인 스파이크(spike)에 기초하여 결정된다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 딥러닝 등의 기계 학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 인공지능 (Artificial Intelligence, AI) 시스템 및 그 응용을 수행하기 위한 전자 장치 및 그 제어 방법에 대한 것이다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템으로서 기계가 스스로 학습하고 판단하며, 사용 할수록 인식률이 향상되는 시스템이다 근래에는 인간 수준의 지능을 구현하는 인공 지능 시스템이 다양한 분야에서 이용되고 있다. 인공 지능 시스템 은 기존의 룰(rule) 기반 스마트 시스템과 달리 기계가 스스로 학습하고 판단하며 똑똑해지는 시스템이다. 인공 지능 시스템은 사용할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 룰 기반 스마트 시스템은 점차 딥러닝 기반 인공 지능 시스템으로 대체되고 있다. 인공 지능 기술은 기계학습(예로, 딥러닝) 및 기계학습을 활용한 요소 기술들로 구성된다. 기계학습은 입력 데이터들의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소기술은 딥러닝 등의 기계학 습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 기술로서, 언어적 이해, 시각적 이해,추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공 지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 오브젝트 인식, 오브젝트 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예 측하는 기술로서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간 의 경험정보를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주행), 조작 제어(행동 제어) 등을 포함한다. 한편, 인공지능 시스템에 입력되는 데이터에 따라 기계 학습 알고리즘의 성능이 달라질 수 있다. 또한, 데이터 가 입력되는 상황에 따라 기계 학습 알고리즘의 성능이 달라질 수 있다. 일반적으로, 잡음이 들리거나 이미지 데이터의 픽셀이 깨지는 경우와 같은 상황이 있을 수 있다. 이와 같은 상황을 노이즈가 있다고 말할 수 있는데, 입력 데이터에 노이즈가 있는 경우 기계 학습 알고리즘의 성능이 떨어질 수 있다. 따라서, 입력되는 데이터를 미리 처리하는 데이터 전처리 동작이 필요하게 되었다. 여기서, 데이터 전처리 과정에 따라 인공 기계학습 알고 리즘의 인식률이 달라질 수 있다. 그에 따라, 데이터 처리 과정을 최소화하면서 기계학습 알고리즘의 성능을 높 일 수 있는 방법이 필요하게 되었다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 문제를 개선하기 위해 고안된 것으로, 본 개시의 목적은 LSM(Liquid-State Machine) 모델을 이용하여 입력 데이터를 데이터 전처리하는 전자 장치 및 그의 제어방법을 제공함에 있다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 목적을 달성하기 위한 본 실시 예에 따른 전자 장치는 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저장된 스토리지 및 입력 데이터에서 특징 데이터를 획득하고, 상기 획득 된 특징 데이터를 상기 LSM 모델에 입력하고, 상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력하며, 상기 RNN 모델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 프로세서를 포함하 며, 상기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은 서로 링크된 복수의 뉴런을 포함하고, 상기 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정된다. 여기서, 상기 LSM 모델은 상기 복수의 뉴런 중 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 타겟 개수보다 큰 경우 상기 뉴런의 링크에 대응되는 가중치를 감소시키고, 상기 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 상기 타겟 개수보다 작은 경우 상기 뉴런의 링크에 대응되는 가중치를 증가시킬 수 있다. 또한, 상기 복수의 뉴런 중 임의의 송신 뉴런 및 상기 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는 상 기 기 설정된 시간 단위에서 상기 송신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크(spike)의 제1 개수 및 상기 수신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득될 수 있다. 또한, 현재 시간 구간에서 상기 링크의 가중치는 이전 시간 구간에서 상기 링크의 가중치에 변화량을 합산하여 획득되며, 상기 변화량은 상기 스파이크의 타겟 개수, 상기 제1 개수 및 상기 제2 개수에 의해 산출된 값에 기 초하여 획득될 수 있다. 여기서, 상기 LSM 모델은 상기 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고, 상기 기 설정된 시간 단위 마다 상기 설정된 타겟 개수를 기 설정된 개수만큼 증가시킬 수 있다. 여기서, 상기 LSM 모델은 상기 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 상기 기 설정된 시간 단위 로 상기 송신 뉴런의 정보 엔트로피 값을 획득하고, 상기 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 상 기 획득된 엔트로피 값을 합산하고, 상기 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종타겟 개수로 설정할 수 있다. 또한, 상기 LSM 모델은 상기 제2 개수가 상기 타겟 개수보다 큰 경우 상기 변화량이 음수가 되도록 할 수 있다. 그리고, 상기 LSM 모델은 상기 제2 개수가 상기 타겟 개수보다 작은 경우, 상기 변화량이 양수가 되도록 할 수 있다. 그리고, 상기 LSM 모델은 상기 제2 개수가 상기 타겟 개수와 동일한 경우, 상기 변화량을 0으로 설정할 수 있다. 여기서, 상기 가중치는 하기 수학식에 기초하여 결정될 수 있다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "wij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치, δwij는 상기 가중치의 변화량, α는 기 설정된 상수, ni=Ni/NT (Ni는 기 설정된 시간 단위에서 i뉴런의 스파이크 수, NT는 스파이크의 타겟 개 수), nj=Nj/NT (Nj는 기 설정된 시간 단위에서 j뉴런의 스파이크 수, NT는 스파이크의 타겟 개수), δnj=nj-1일 수 있다. 한편, 상기 특징 데이터는, 퓨리에 변환 계수(Fourier transform coefficients) 및 MFCC(Mel-Frequency Cepstral Coefficients) 중 적어도 하나이며, 상기 프로세서는, 상기 퓨리에 변환 계수 및 상기 MFCC 중 적어도 하나를 상기 LSM 모델에 입력할 수 있다. 한편, 상기 LSM 모델은 시간에 따라 변하는 상기 특징 데이터를 상기 복수의 뉴런의 액티비티에 기초한 시공간 적 패턴(spatio-temporal pattern)으로 변환하여 출력할 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 마이크를 더 포함할 수 있고, 상기 입력 데이터는 상기 마이크 를 통해 수신된 음성 데이터이며, 상기 기 설정된 객체는 웨이크 업 워드(wake up word)일 수 있다. 본 개시의 일 실시 예에 따른 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저 장된 전자 장치의 제어 방법에 있어서, 입력데이터에서 특징 데이터를 획득하는 단계, 상기 획득된 특징 데이터 를 상기 LSM 모델에 입력하는 단계, 상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력하는 단계 및 상기 RNN 모 델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 단계를 포함하며, 상 기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은 서로 링크된 복수의 뉴런을 포함하고, 상기 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정된다. 여기서, 상기 LSM 모델은 상기 복수의 뉴런 중 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 타겟 개수보다 큰 경우 상기 뉴런의 링크에 대응되는 가중치를 감소시키고, 상기 임의의 뉴런에서 상기 기 설정된 시간 구간 동안 상기 스파이크 개수가 상기 타겟 개수보다 작은 경우 상기 뉴런의 링크에 대응되는 가중치를 증가시킬 수 있다. 또한, 상기 복수의 뉴런 중 임의의 송신 뉴런 및 상기 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는 상 기 기 설정된 시간 단위에서 상기 송신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크(spike)의 제1 개수 및 상기 수신 뉴런의 뉴런 값이 상기 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득될 수 있다. 또한, 현재 시간 구간에서 상기 링크의 가중치는 이전 시간 구간에서 상기 링크의 가중치에 변화량을 합산하여 획득되며, 상기 변화량은 상기 스파이크의 타겟 개수, 상기 제1 개수 및 상기 제2 개수에 의해 산출된 값에 기 초하여 획득될 수 있다. 또한, 상기 LSM 모델은 상기 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고, 상기 기 설정된 시 간 단위 마다 상기 설정된 타겟 개수를 기 설정된 개수만큼 증가시킬 수 있다. 또한, 상기 LSM 모델은 상기 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 상기 기 설정된 시간 단위로 상기 송신 뉴런의 정보 엔트로피 값을 획득하고, 상기 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 상기 획득된 엔트로피 값을 합산하며, 상기 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수로 설정할 수 있다.또한, 상기 LSM 모델은 상기 제2 개수가 상기 타겟 개수보다 큰 경우, 상기 변화량이 음수가 되도록 하고, 상기 제2 개수가 상기 타겟 개수보다 작은 경우, 상기 변화량이 양수가 되도록 하고, 상기 제2 개수가 상기 타겟 개 수와 동일한 경우, 상기 변화량을 0으로 설정할 수 있다. 여기서, 상기 가중치는 하기 수학식에 기초하여 결정될 수 있다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 3, "content": "w_ij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치, δw_ij는 상기 가중치의 변화량, α는 기 설정된 상수, ni=Ni/NT (Ni는 기 설정된 시간 단위에서 i뉴런의 스파이크 수, NT는 스파이크의 타겟 개 수), nj=Nj/NT (Nj는 기 설정된 시간 단위에서 j뉴런의 스파이크 수, NT는 스파이크의 타겟 개수), δnj=nj-1일 수 있다. 본 개시의 일 실시 예에 따른 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저 장된 전자 장치의 프로세서에 의해 실행되는 경우 상기 전자 장치가 동작을 수행하도록 하는 컴퓨터 명령을 저 장하는 비일시적 컴퓨터 판독 가능 매체에 있어서, 상기 동작은 입력데이터에서 특징 데이터를 획득하는 단계, 상기 획득된 특징 데이터를 상기 LSM 모델에 입력하는 단계, 상기 LSM 모델의 출력 값을 상기 RNN 모델에 입력 하는 단계 및 상기 RNN 모델의 출력 값에 기초하여 상기 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별 하는 단계를 포함하며, 상기 RNN 모델은 상기 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, 상기 LSM 모델은 서로 링크된 복수의 뉴런을 포함하고 상기 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시 간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정된다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시에 대하여 구체적으로 설명하기에 앞서, 본 명세서 및 도면의 기재 방법에 대하여 설명한다. 먼저, 본 명세서 및 청구범위에서 사용되는 용어는 본 개시의 다양한 실시 예들에서의 기능을 고려하여 일반적 인 용어들을 선택하였다 하지만, 이러한 용어들은 당해 기술 분야에 종사하는 기술자의 의도나 법률적 또는 기 술적 해석 및 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 일부 용어는 출원인이 임의로 선정한 용어 도 있다. 이러한 용어에 대해서는 본 명세서에서 정의된 의미로 해석될 수 있으며, 구체적인 용어 정의가 없으 면 본 명세서의 전반적인 내용 및 당해 기술 분야의 통상적인 기술 상식을 토대로 해석될 수도 있다. 또한, 본 명세서에 첨부된 각 도면에 기재된 동일한 참조번호 또는 부호는 실질적으로 동일한 기능을 수행하는 부품 또는 구성요소를 나타낸다. 설명 및 이해의 편의를 위해서 서로 다른 실시 예들에서도 동일한 참조번호 또 는 부호를 사용하여 설명한다. 즉, 복수의 도면에서 동일한 참조 번호를 가지는 구성요소를 모두 도시되어 있다고 하더라도, 복수의 도면들이 하나의 실시 예를 의미하는 것은 아니다. 또한, 본 명세서 및 청구범위에서는 구성요소들 간의 구별을 위하여 \"제1\", \"제2\" 등과 같이 서수를 포함하는 용어가 사용될 수 있다. 이러한 서수는 동일 또는 유사한 구성요소들을 서로 구별하기 위하여 사용하는 것이며 이러한 서수 사용으로 인하여 용어의 의미가 한정 해석되어서는 안 된다. 용어들은 하나의 구성요소를 다른 구 성요소로부터 구별하는 목적으로만 사용된다. 일 예로, 이러한 서수와 결합된 구성요소는 그 숫자에 의해 사용 순서나 배치 순서 등이 제한되어서는 안 된다. 필요에 따라서는, 각 서수들은 서로 교체되어 사용될 수도 있다. 본 명세서에서 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다.\" 또는 \"구성되다.\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구 성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는바, 특정 실시 예들을 도면에 예 시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하려는 것 이 아니며, 개시된 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이해되어 야 한다. 실시 예들을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 요지를 흐릴 수 있다고 판단 되는 경우 그 상세한 설명을 생략한다. 본 개시의 실시 예에서 \"모듈\", \"유닛\", \"부(part)\" 등과 같은 용어는 적어도 하나의 기능이나 동작을 수행하는 구성요소를 지칭하기 위한 용어이며, 이러한 구성요소는 하드웨어 또는 소프트웨어로 구현되거나 하드웨어 및 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\", \"유닛\", \"부(part)\" 등은 각각이 개별적인 특정 한 하드웨어로 구현될 필요가 있는 경우를 제외하고는, 적어도 하나의 모듈이나 칩으로 일체화되어 적어도 하나 의 프로세서로 구현될 수 있다. 또한, 본 개시의 실시 예에서, 어떤 부분이 다른 부분과 연결되어 있다고 할 때, 이는 직접적인 연결뿐 아니라, 다른 매체를 통한 간접적인 연결의 경우도 포함한다. 또한, 어떤 부분이 어떤 구성요소를 포함한다는 의미는, 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것 을 의미한다. 도 1a는 본 개시의 일 실시 예에 따른 전자 장치를 도시한 블록도이다. 도 1a에 도시된 바와 같이, 전자 장치는 스토리지 및 프로세서를 포함할 수 있다. 전자 장치는 TV, 데스크탑 PC, 노트북, 스마트폰, 태블릿 PC, 서버 등일 수 있다. 또는, 전자 장치는 클라우딩 컴퓨팅 환경이 구축된 시스템 자체 즉, 클라우드 서버로 구현될 수도 있다. 스토리지는 LSM(Liquid-State Machine) 학습 모델 및 RNN (Recurrent Neural Networks) 학습 모델을 저장 할 수 있다. 여기서, RNN 학습 모델이란 단위(노드 또는 뉴런)들간에 연결이 시퀀스를 따라 방향성을 갖는 인공 신경망의 한 종류일 수 있다. 예를 들어, 입력층(input layer)과 출력층(output layer) 사이에 다중의 은닉층(hidden layer)을 포함하는 인공 신경망(ANN: Artificial Neural Network)일 수 있다. 본 개시의 일 실시 예에 따른RNN 학습 모델은 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것일 수 있다. LSM 학습 모델은 단위(노드 또 는 뉴런)의 큰 집합으로 구성된 스파이크 신경 네트워크이며, 각 단위(노드 또는 뉴런)은 외부 소스 또는 다른 단위(노드 또는 뉴런)로부터 시간에 따른 입력 데이터를 수신할 수 있다. 또한, LSM 학습 모델은 시간에 따라 변하는 특징 데이터를 복수의 뉴런의 액티비티에 기초한 시공간적 패턴(spatio-temporal pattern)으로 변환하여 출력할 수 있다. 예를 들어, LSM 학습 모델은 메모리를 갖는 excitatory 유닛들의 집합일 수 있으며, 유닛들의 상호 연결과 temporal dynamics 에 기초하여, 자연스럽게 다차원 입력의 변환을 수행 할 수 있다. 즉, LSM은 입 력 벡터를 고차원의 공간에 매핑할 수 있으며, 그로 인해 RNN을 보다 효과적으로 학습할 수 있다. 본 개시의 일 실시 예에 따른 LSM 학습 모델은 서로 링크된 복수의 뉴런을 포함하고, 본 개시의 다양한 실시 예 에 따라 복수의 뉴런 간 링크에 가중치가 적용된 학습 모델일 수 있다. 한편, RNN 학습 모델 및 LSM 학습 모델은 전자 장치에서 인공 지능 학습된 모델일 수도 있지만, 적어도 하 나의 외부 장치 또는 외부 서버에서 학습된 후 전자 장치에 저장된 것일 수도 있다. 스토리지는 프로세서에 포함된 롬(ROM), 램(RAM) 등의 내부 메모리로 구현되거나, 프로세서와 별도의 메모리로 구현될 수도 있다. 이 경우, 스토리지는 데이터 저장 용도에 따라 전자 장치에 임베 디드된 메모리 형태로 구현되거나, 전자 장치에 탈부착이 가능한 메모리 형태로 구현될 수도 있다. 예를 들어, 전자 장치의 구동을 위한 데이터의 경우 전자 장치에 임베디드된 메모리에 저장되고, 전자 장 치의 확장 기능을 위한 데이터의 경우 전자 장치에 탈부착이 가능한 메모리에 저장될 수 있다. 한편, 전자 장치에 임베디드된 메모리의 경우 비휘발성 메모리, 휘발성 메모리, 하드 디스크 드라이브(HDD) 또는 솔리드 스테이트 드라이브(SSD) 등과 같은 형태로 구현되고, 전자 장치에 탈부착이 가능한 메모리의 경우 메모리 카드(예를 들어, micro SD 카드, USB 메모리 등), USB 포트에 연결가능한 외부 메모리(예를 들어, USB 메모리) 등과 같은 형태로 구현될 수 있다. 프로세서는 전자 장치의 동작을 전반적으로 제어한다. 일 실시 예에 따라 프로세서는 디지털 시그널 프로세서(digital signal processor(DSP), 마이크로 프로세 서(microprocessor), TCON(Time controller)으로 구현될 수 있다. 다만, 이에 한정되는 것은 아니며, 중앙처리 장치(central processing unit(CPU)), MCU(Micro Controller Unit), MPU(micro processing unit), 컨트롤러 (controller), 어플리케이션 프로세서(application processor(AP)), 또는 커뮤니케이션 프로세서 (communication processor(CP)), ARM 프로세서 중 하나 또는 그 이상을 포함하거나, 해당 용어로 정의될 수 있 다. 또한, 프로세서는 프로세싱 알고리즘이 내장된 SoC(System on Chip), LSI(large scale integration) 로 구현될 수도 있고, FPGA(Field Programmable gate array) 형태로 구현될 수도 있다. 일 실시 예에 따라, 프로세서는 입력 데이터에서 특징 데이터를 획득하고, 획득된 특징 데이터를 LSM 모델 에 입력할 수 있다. 다만, 입력 데이터를 외부 서버로 전송하고, 외부 서버로부터 입력 데이터에서 획득된 특징 데이터를 수신하는 것도 가능하다. 또한, 프로세서는 LSM 모델의 출력 값을 RNN 모델에 입력하며, RNN 모델의 출력 값에 기초하여 입력 데이 터에 기 설정된 객체가 포함되어 있는지 식별할 수 있다. LSM 학습 모델은 일반적으로 간단한 feed-forward ANN(Artificial neural network)인 소위 read-out module을 위한 특징 전처리기(feature preprocessor )에 해당할 수 있다. 예를 들어, 특징 데이터를 RNN 학습 모델에 입 력하기 전에 LSM 학습 모델을 이용하여 데이터 전처리 동작을 수행할 수 있다. 한편, 프로세서는 입력 데이터에 기설정된 변환 함수를 적용하여 특징 데이터(예를 들어, 특징 벡터)를 획 득할 수 있다. 예를 들어, 프로세서는 적어도 하나의 프레임 단위로 기설정된 변환 함수를 적용하여 특징 데이터를 획득할 수 있다. 여기서, 특징 데이터는, 퓨리에 변환 계수(Fourier transform coefficients) 및 (Mel-Frequency Cepstral Coefficients) 중 적어도 하나일 수 있다. 프로세서는 RNN 모델의 출력 값에 기초하여 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별할 수 있다. 본 개시의 일 실시 예에 따른 RNN 학습 모델은 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이 기 때문에, 프로세서는 RNN 학습 모델의 출력값에 기초하여 입력 데이터에 기 설정된 객체가 포함되어 있 는지 식별할 수 있게 된다. . 여기서, 기설정된 객체는, 특정 단어에 대한 음성 데이터 또는 특정 이미지에 대 한 이미지 데이터를 의미할 수 있다. 또한, 기 설정된 객체는 특정 단어에 대한 텍스트 정보를 의미할 수 있다. 예를 들어, LSM 학습 모델은 서로 링크된 복수의 뉴런을 포함할 수 있다. 여기서, 복수의 뉴런 간 링크에 적용 되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정될 수 있다. 한편, 본 개시의 일 실시 예에 따른LSM 모델은 서로 링크된 복수의 뉴런을 포함할 수 있다. 여기서, 복수의 뉴 런 간 링크에 적용되는 가중치는 기 설정된 시간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)에 기초하여 결정될 수 있다. 여기서, 기 설정된 시간 단위란, 일정한 시간 단위, 시간 구간 또는 시간 구간 단위중 어느 하나를 의미할 수 있다. 또한, 사용자가 기 설정한 또는 약속된 형식의 시간 간격을 의미할 수 있다. 또한, 스파이크는 개수, 양, 비율 중 어느 하나로 표현 될 수 있다. 예를 들어, LSM 모델은 스파이크의 개수를 파악하여 비교할 수 있다. 또한, LSM 모델은 스파이크의 비율을 비교할 수 있다. 구체적으로, 전체시간 동안 스 파이크가 차지하는 비율을 계산할 수 있다. 또한, LSM 모델은 스파이크의 양을 비교할 수 있다. 상술한 예시 이외에 다양한 방법으로 스파이크를 표현할 수 있다. 아래의 설명에서는 스파이크에 대하여 개수를 기준으로 하였지만, 개수 이외에 다양한 표현 방법이 이용될 수 있다. 구체적으로, LSM 모델은 복수의 뉴런 중 임의의 뉴런에서 기 설정된 시간 구간 동안 스파이크 개수가 타겟 개수 보다 큰 경우 뉴런의 링크에 대응되는 가중치를 감소시키고, 임의의 뉴런에서 기 설정된 시간 구간 동안 스파이 크 개수가 타겟 개수보다 작은 경우 뉴런의 링크에 대응되는 가중치를 증가시키도록 학습될 수 있다. 구체적으로, 복수의 뉴런 중 임의의 송신 뉴런 및 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는 기 설정 된 시간 구간 단위에서 송신 뉴런의 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)의 제1 개수 및 수신 뉴런의 뉴런 값이 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득될 수 있다. 또한, 현재 시간 구간에서 링크의 가중치는 이전 시간 구간에서 링크의 가중치에 변화량을 합산하여 획득되며, 변화량은 스파이크의 타겟 개수, 제1 개수 및 제2 개수에 의해 산출된 값에 기초하여 획득될 수 있다. 이 경우, LSM 모델은 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고, 기 설정된 시간 구간 단위 마다 설정된 타겟 개수를 기 설정된 개수만큼 증가시킬 수 있다. LSM 모델은 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 기 설정된 시간 구간 단위로 송신 뉴런의 정보 엔트로피 값을 획득하고, 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 획득된 엔트로피 값을 합산하고, 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수로 설정할 수 있다. 일 실시 예에 따른 LSM 모델은 제2 개수가 타겟 개수보다 큰 경우 변화량이 음수가 되도록 할 수 있다. 또한LSM 모델은 제2 개수가 타겟 개수보다 작은 경우, 변화량이 양수가 되도록 할 수 있다. 또한, LSM 모델은 제2 개수 가 타겟 개수와 동일한 경우, 변화량을 0으로 설정할 수 있다. 구체적으로, LSM 학습 모델은 구체적인 계산을 위하여 수학식 1내지 5에 기초하여 각 뉴런 간 링크에 적용되는 가중치를 산출할 수 있다. 우선, LSM 학습 모델은 각 뉴런에 대한 뉴런값을 수학식 1을 통해 계산할 수 있다. 수학식 1"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서, 여기서 vi (n)는 시간 n에서 i 번째 뉴런의 막 전위(뉴런값)를 의미할 수 있다. μ는 1보다 작은 수일 수 있고(μ<1), vi의 감쇠를 보장하는 상수 매개 변수일 수 있다. Ii (n)는 시간 n에서 뉴런에 대한 총 입력일 수 있다. vth는 임계값을 의미할 수 있다. 여기서, LSM 학습 모델은 뉴런의 뉴런 값이 vth보다 큰 경우 v_reset으로 설정 할 수 있다. 한편, LSM 학습 모델은 뉴런의 뉴런 값이 vth보다 작은 경우, 이전 시간의 뉴런 값에 입력값을 더 한 값을 현재 시간의 뉴런 값으로 획득할 수 있다. 또한, LSM 학습 모델은 특정 불응 기간(Tref)에는 입력에 반 응하지 않도록 제어 할 수 있다 (도4(b)의 Tref 참고). 그리고, 뉴런 값이 vth보다 작은 경우 이전 시간(n-1)에 대한 뉴런 값에 μ를 곱하고 현재 시간(n)에 대한 입력 값(Ii(n))을 더하여 현재 시간(n)에 대한 i뉴런의 뉴런 값을 구할 수 있다. 한편, 교차 임계 시간(crossing threshold time)에서 뉴런은 스파이크를 생성할 수 있으며 단일 임펄스(single impulse)가 네트워크의 다른 뉴런에 보내질 수 있다. 다른 말로 하면, 모든 교차 임계 시간(crossing threshold time)에서 신경 세포의 si(n)은 1일 수 있다(si (n^k_cross) = 1). 또한, 다른 모든 시간에는 si(n)은 0일 수 있다. 그리고, 현재 시간(n)에 대한 입력 값(Ii(n))은 수학식 2를 이용하여 계산될 수 있다. Ii(n)은 i번째 뉴런에 대 한 입력값을 의미할 수 있다.수학식 2"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서 w_ji는 j 번째 뉴런에서 i 번째 뉴런으로 이어지는 링크의 가중치일 수 있다(i번째뉴런에서 j번째 뉴런 으로 이어지는 반대 링크도 존재할 수 있다). 여기서, i 및 j는 뉴런의 인덱스 번호일 수 있다. i뉴런과 j뉴런 이 링크되어 있다고 가정하며, w_ji는 j뉴런이 송신 뉴런 i뉴런이 수신뉴런인 경우를 의미할 수 있다. Sj는 j뉴 런에서 생성된(식별된) 기 설정된 시간 구간 단위에서의 스파이크 개수을 의미할 수 있으며, n은 현재 시간을 의미할 수 있다. 여기서, 특별하게 지정된 출력 단위는 없으며 네트워크의 출력을 \"0\"과 \"1\"의 시변 벡터 (s0 (n), s1 (n), ...)로 구할 수 있다. 또한, LSM 학습 모델은 임의의 부분 집합을 선택할 수 있다. 예를 들어, 판독 값의 입력 차원을 줄이기 위해 LSM 신경 회로망의 30 %를 출력 단위로 사용할 수 있다. 수학식 1 및 수학식2를 이용하여 LSM 학습 모델이 이용될 수 있다. 여기서, 가중치를 변경하는 동작을 추가할 수 있다. 상기 수학식2에서 이용되는 가중치에 대한 변경은 수학식 3 및 수학식 4에 의해 계산될 수 있다. LSM 학습 모델은 랜덤 가중치w_ij로 네트워크를 초기화 시킬 수 있다. 그리고, 입력 데이터가 vector로 입력될 수 있으며 각 뉴런에서 스파이크를 생성할 수 있다. LSM 학습 모델은 일정 수의 입력 데이터가(소위 미니 배 치)수신된 후 각 뉴런의 \"활동\"(“activity”)을 다른 활동과 비교할 수 있다. 그리고, LSM 학습 모델은 선택된 입력 데이터를 기초로 하여 “활동 분포”가 되도록 네트워크를 이끌 수 있다. \"활동\"은 w_ij를 변경하여 측정 가능하고 제어 가능한 것일 수 있다. 여기서는 미니 배치(기 설정된 시간 구간 단위)중에 생성된 스파이크 개수일 수 있다. 실제 학습과정에서는 특정 뉴런에서 미니 배치 당 평균 스파이크 수는 더 많거나 적을 수 있다. 이 값은, (미니 배치 당 엔트로피로서 측정한) 최대 출력 엔트로피 생산의 기준 에 따라, 학습 중에 선택할 수 있다. 그리고, LSM 학습 모델은 2단계의 알고리즘으로 구성될 수 있다. 1단계는 최상의 활동 수준(activity level)을 갖는 상태를 갖는 단계를 의미할 수 있다(스캔 상태, 스캔 단계). 그리고, 2단계는 해당 수준(level)에서 학습 하는 단계를 의미할 수 있다. 한편, LSM 학습 모델은 아래의 수학식 3 및 수학식 4를 이용하여 가중치를 변경할 수 있다. 시간 n에 대한 가중치는 w_ij (n) = w_ij (n-1) + δw_ij 로 표현될 수 있다. 현재 시간에 대한 가중치는 전 시 간에 대한 가중치에서 δw_ij를 더하여 획득될 수 있다. δw_ij는 수학식3에 의해 계산될 수 있다. 수학식 3"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "w_ij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치를 의미할 수 있다. δw_ij는 가중치의 변화량을 의미할 수 있다. α는 적응 단계를 반영한 일반 상수일 수 있다. δnj는 δnj = (nj) - 1=(Nj / NT)-1로 계산될 수 있다. ni는 i뉴런에서 생성된 스파이크 개수와 타겟 개수의 비율을 의미할 수 있으며 ni = Ni / NT로 표현될 수 있다. nj는 j뉴런에서 생성된 스파이크 개수와 타겟 개수의 비율을 의미할 수 있으며 nj = Nj / NT로 표현될 수 있다. Ni는 입력된 미니 배치만큼의 특징 데이터에서 생성된(식별된) i 번째 뉴런의 스파이크 개수를 의미할 수 있다. Nj는 입력된 미니 배치만큼의 특징 데이터에서 생성된(식별된) j 번째 뉴런의 스파이크 개수를 의미할 수 있다. NT는 미니 배치 당 스파이크의 목표 평균 개수를 의미할 수 있으며 타겟 개수를 의미할 수 있다. 여기서, 평균 개수란 미니 배치 당 생성된 스파이크 개수를 의미할 수 있으며, 데이터를 분석하는 기준을 M개의 미니 배치로 설정할 수 있기 때문에 LSM 학습 모델은 미니 배치당 평균 개수를 이용할 수 있다. 예를 들어, w_ij는 양(excitatory 또는 activating)의 값을 갖고 δn_j> 0이면, 수신 뉴런인 j 뉴런은 우리가 원하는 정도(NT)보다 더 활동적인 것을 의미할 수 있다(Nj> NT). 이 경우, δnj = (nj) - 1=(Nj / NT)-1를 반영하면 δnj >0일 수 있다. 이 경우, δw_ij <0 이 되고, w_ij (n) = w_ij (n-1) + δw_ij를 반영하면, 현재 시간에 대한 가중치는 감소할 수 있다. 반대의 경우, w_ij는 양(excitatory 또는 activating)의 값을 갖고 δn_j <0이면, 수신 뉴런인 j 뉴런은 우리 가 원하는 정도(NT)보다 덜 활동적인 것을 의미할 수 있다(Nj< NT). 이 경우, δnj = (nj) - 1=(Nj / NT)-1를 반영하면 δnj <0일 수 있다. 이 경우, δw_ij >0 이 되고, w_ij (n) = w_ij (n-1) + δw_ij를 반영하면, 현재 시간에 대한 가중치는 증가할 수 있다. 예를 들어, LSM 학습 모델은 복수의 뉴런 중 임의의 뉴런에서 기 설정된 시간 구간 동안 생성된(식별된) 스파이 크 개수가 타겟 개수보다 큰 경우 뉴런의 링크에 대응되는 가중치를 감소시킬 수 있다. 또한, LSM 학습 모델은 임의의 뉴런에서 기 설정된 시간 구간 동안 생성된(식별된) 스파이크 개수가 타겟 개수보다 작은 경우 뉴런의 링크에 대응되는 가중치를 증가시킬 수 있다. 또한, 복수의 뉴런 중 임의의 송신 뉴런 및 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는 기 설정된 시 간 구간 단위에서 송신 뉴런의 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)의 제1 개수(Ni) 및 수신 뉴 런의 뉴런 값이 기 설정된 임계값 이상인 스파이크의 제2 개수(Nj)에 기초하여 획득될 수 있다. 현재 시간 구간에서 링크의 가중치는 이전 시간 구간에서 링크의 가중치에 변화량을 합산하여 획득되며, 변화량 은 스파이크의 타겟 개수(NT), 제1 개수(Ni) 및 제2 개수(Nj)에 의해 산출된 값에 기초하여 획득될 수 있다. 구체적으로, LSM 학습 모델은 제2 개수(Nj)가 타겟 개수(NT)보다 큰 경우 가중치 변화량(δw_ij )이 음수가 되 도록 할 수 있다. 그리고, LSM 모델은 제2 개수(Nj)가 타겟 개수(NT)보다 작은 경우, 가중치 변화량(δw_ij )이 양수가 되도록 할 수 있다. 그리고, LSM 모델은 제2 개수(Nj)가 타겟 개수(NT)와 동일한 경우, 가중치 변화량(δw_ij )을 0으로 설정할 수 있다. 수학식 3의 경우 송신 뉴런이 i뉴런이고 수신 뉴런이 j뉴런인 경우에 적용하는 식이며, 반대로 송신 뉴런이 j뉴 런이고 수신 뉴런이 i뉴런인 경우도 존재할 수 있다. 이 경우, 수학식 3을 일부 수정한 수학식 4를 이용할 수 있다. 그리고 수학식 4를 적용함에 있어 상술한 제1개수는 Nj가 될 수 있고 제2 개수는 Ni가 될 수 있다. 수학식 4"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "w_ji는 송신 뉴런인 j뉴런에서 수신 뉴런인 i뉴런간 링크에 대응되는 가중치를 의미할 수 있다. δw_ji는 가중치의 변화량을 의미할 수 있다. α는 적응 단계를 반영한 일반 상수일 수 있다. δni는 δni = (ni) - 1=(Ni / NT)-1로 계산될 수 있다. nj는 j뉴런에서 생성된 스파이크 개수와 타겟 개수의 비율을 의미할 수 있으며 nj = Nj / NT로 표현될 수 있다. ni는 i뉴런에서 생성된 스파이크 개수와 타겟 개수의 비율을 의미할 수 있으며 ni= Ni / NT로 표현될 수 있다. Nj는 입력된 미니 배치만큼의 특징 데이터에서 생성된(식별된) j 번째 뉴런의 스파이크 개수를 의미할 수 있다. Ni는 입력된 미니 배치만큼의 특징 데이터에서 생성된(식별된) i 번째 뉴런의 스파이크 개수를 의미할 수 있다. NT는 미니 배치 당 스파이크의 목표 평균 개수를 의미할 수 있으며 타겟 개수를 의미할 수 있다. 예를 들어, w_ji는 양(excitatory 또는 activating)의 값을 갖고 δn_i> 0이면, 수신 뉴런인 i 뉴런은 우리가 원하는 정도(NT)보다 더 활동적인 것을 의미할 수 있다(Ni> NT). 이 경우, δni = (ni) - 1=(Ni / NT)-1를 반영하면 δni >0일 수 있다. 이 경우, δw_ji <0 이 되고, w_ji (n) = w_ji (n-1) + δw_ji를 반영하면, 현재 시간에 대한 가중치는 감소할 수 있다. 반대의 경우, w_ji는 양(excitatory 또는 activating)의 값을 갖고 δn_i <0이면, 수신 뉴런인 i 뉴런은 우리 가 원하는 정도(NT)보다 덜 활동적인 것을 의미할 수 있다(Ni< NT). 이 경우, δni = (n_i) - 1=(Ni / NT)-1를 반영하면 δni <0일 수 있다. 이 경우, δw_ji >0 이 되고, w_ji (n) = w_ji (n-1) + δw_ji를 반영하면, 현재 시간에 대한 가중치는 증가할 수 있다. LSM 학습 모델은 수학식 4를 이용하여 j뉴런에서 i뉴런으로 링크되는 것에 대응되는 가중치w_ji를 변경할 수 있 다. 그리고, LSM 학습 모델은 변경된 w_ji를 수학식 2에 적용시킬 수 있다. 여기서, NT는 타겟 개수를 의미할 수 있으며, LSM 학습 모델은 기 설정된 시간 구간 단위가 경과하면 타겟 개수 를 변경할 수 있다. 여기서, 기 설정된 시간 구간 단위란 하나의 미니 배치가 될 수 있다. 또한, 사용자 설정에 따라 도5에서 서술하는 M개의 미니 배치일 수 있다. 상술한 2가지 단계에서 1단계에서는 타겟 개수(NT)가 일정하게 증가하며 2단계에서는 타겟 개수(NT)가 일정할 수 있다. 예를 들어, LSM 모델은 스파이크의 최초 타겟 개수(NT)를 기 설정된 최소 값(Nmin)으로 설정하고, 기 설정된 시 간 구간 단위 마다 설정된 타겟 개수를 기 설정된 개수만큼 증가시킬 수 있다(NT=NT+1). 여기서, LSM 모델은 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 기 설정된 시간 구간 단위로 송신 뉴 런의 정보 엔트로피 값을 획득하고, 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 획득된 엔트로피 값을 합산하고, 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수(최적값,Nopt)로 설정 할 수 있다. LSM 학습 모델은 최적의 타겟 개수가 나올 때가지 학습할 수 있다. 최적의 타겟 개수를 Nopt로 호칭할 수 있으 며, Nopt는 정보 엔트로피를 이용하여 획득될 수 있다. 정보 엔트로피는 아래의 수학식 5를 이용하여 구할 수 있다. 정보 엔트로피는 shannon엔트로피로 호칭될 수 있 다. 정보 엔트로피는 정보의 흐름에 기초하여 획득되는 정보의 기댓값(평균)을 의미할 수 있다. 수학식 5"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "S는 정보 엔트로피를 의미할 수 있다. i는 뉴런의 인덱스를 나타낼 수 있으며, 즉, i뉴런을 의미할 수 있다. b는 미니 배치의 인덱스를 나타낼 수 있다. k는 발생 가능한 사건의 인덱스를 나타낼 수 있다. pik는 i뉴런에서 k의 사건이 발생할 확률을 의미할 수 있다. 즉, LSM 학습 모델은 수학식 5를 이용하여 b 미니배치에서 얻어지는 i뉴런의 정보 엔트로피를 출력값으로 획득 할 수 있다. LSM 학습 모델은 ISI(Inter-Spike Intervals)를 기초로 하여 정보 엔트로피를 계산할 수 있다. ISI는 스파이크와 스파이크 사이의 시간 간격을 의미할 수 있다. 도 4(c)를 참고하면, 3개의 스파이크가 존재하 는 경우 2개의 ISI가 존재할 수 있다. 미니 배치 동안 i번째 뉴런은 Ni의 스파이크를 생성할 수 있다. 같은 의미로 i번째 뉴런에서 미니 배치 동안 Ni 의 스파이크가 측정될 수 있다. 그리고 ISI 분포 히스토그램을 형성하는 (Ni-1)개의 ISI가 존재할 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 음성 데이터 인식에 이용될 수 있다. 전자 장치는 마이크를 더 포함할 수 있고, 입력 데이터는 마이크를 통해 수신된 음성 데이터이며, 상술한 기 설정된 객체는 웨이크 업 워드(wake up word)일 수 있다. 이와 관련된 내용은 도 2에서 후술한다. 한편, 인공 지능 학습모델은 인공지능 알고리즘 기반으로 학습된 판단 모델로서, 예로, 신경망(Neural Networ k)을 기반으로 하는 모델일 수 있다. 학습된 인공지능 모델은 인간의 뇌 구조를 컴퓨터 상에서 모의하도록 설계 될 수 있으며 인간의 신경망의 뉴런(neuron)을 모의하는, 가중치를 가지는 복수의 네트워크 노드들을 포함할 수 있다. 복수의 네트워크 노드들은 뉴런이 시냅스(synapse)를 통하여 신호를 주고 받는 뉴런의 시냅틱(synaptic) 활동을 모의하도록 각각 연결 관계를 형성할 수 있다. 또한, 학습된 인공지능 모델은, 일 예로, 신경망 모델, 또는 신경망 모델에서 발전한 딥 러닝 모델을 포함할 수 있다. 딥 러닝 모델에서 복수의 네트워크 노드들은 서 로 다른 깊이(또는, 레이어)에 위치하면서 컨볼루션(convolution) 연결 관계에 따라 데이터를 주고 받을 수 있 다. 학습된 인공지능 모델의 예에는 DNN(Deep Neural Network), RNN(Recurrent Neural Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 등이 있을 수 있으나 이에 한정되지 않는다. 또한, 전자 장치는 상술한 바와 같이 출력 데이터를 획득하기 위하여, 인공지능 전용 프로그램(또는 인공 지능 에이전트, Artificial intelligence agent)을 이용할 수 있다. 이때, 인공지능 전용 프로그램은 AI(Artificial Intelligence) 기반의 서비스를 제공하기 위한 전용 프로그램으로서, 기존의 범용 프로세서(예를 들어, CPU) 또는 별도의 AI 전용 프로세서(예를 들어, GPU 등)에 의해 실행될 수 있다. 구체적으로, 기 설정된 사용자 입력(예를 들어, 기 설정된 단어(wake up word)를 포함하는 사용자 음성 등)이 입력되는 경우, 인공지능 에이전트가 동작(또는 실행)할 수 있다. 그리고, 인공지능 에이전트는 기 설정된 사용 자 입력에 대한 정보를 외부 서버로 전송하고, 외부 서버로부터 출력 컨텐츠를 수신하고 출력할 수 있다. 기 설정된 사용자 입력이 수신되면, 인공지능 에이전트가 동작할 수도 있다. 인공지능 에이전트는 기 설정된 사 용자 입력이 감지되기 이전에 기 실행된 상태일 수 있다. 이 경우, 기 설정된 사용자 입력이 감지된 이후에는 전자 장치의 인공지능 에이전트가 출력 데이터를 획득할 수 있다. 또한, 인공지능 에이전트는 기 설정된 사용자 입력이 감지되기 이전에 대기 상태일 수 있다. 여기서, 대기 상태란, 인공지능 에이전트의 동작 시작을 제어하기 위해 미리 정의된 사용자 입력이 수신되는 것을 감지하는 상태이다. 인공지능 에이전트가 대기 상태인 동안 기 설정된 사용자 입력이 감지되면, 전자 장치는 인공지능 에이전트를 동작시키고, 출력 데이터를 획득할 수 있다. 본 개시의 또 다른 실시 예로, 전자 장치가 직접 인공지능 모델을 이용하여 출력 데이터를 획득하는 경우, 인공지능 에이전트는 인공지능 모델을 제어하여 출력 데이터를 획득할 수 있다. 이때, 인공지능 에이전트는 상 술한 외부 서버의 동작을 수행할 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 인공지능 알고리즘을 구현할 수 있는 서버, AI 스피커, STB/Apple TV 로 구현될 수 있다. 도 1b는 전자 장치의 세부 구성의 일 예를 나타내는 블록도이다. 도 1b에 따르면, 전자 장치는 스토리지, 프로세서, 통신부, 사용자 인터페이스부, 디 스플레이, 오디오 처리부, 비디오 처리부를 포함한다. 도 1b에 도시된 구성요소들 중 도 1a에 도시된 구성요소와 중복되는 부분에 대해서는 자세한 설명을 생략하도록 한다. 프로세서는 스토리지에 저장된 각종 프로그램을 이용하여 전자 장치의 동작을 전반적으로 제어 한다. 구체적으로, 프로세서는 RAM, ROM, 메인 CPU, 그래픽 처리부, 제1 내지 n 인터페이 스(125-1 ~ 125-n), 버스를 포함한다. RAM, ROM, 메인 CPU, 그래픽 처리부, 제1 내지 n 인터페이스(125-1 ~ 125-n) 등은 버스 를 통해 서로 연결될 수 있다. 제1 내지 n 인터페이스(125-1 내지 125-n)는 상술한 각종 구성요소들과 연결된다. 인터페이스들 중 하나는 네트 워크를 통해 외부 장치와 연결되는 네트워크 인터페이스가 될 수도 있다. 메인 CPU는 스토리지에 액세스하여, 스토리지에 저장된 O/S를 이용하여 부팅을 수행한다. 그리 고, 스토리지에 저장된 각종 프로그램 등을 이용하여 다양한 동작을 수행한다. ROM에는 시스템 부팅을 위한 명령어 세트 등이 저장된다. 턴온 명령이 입력되어 전원이 공급되면, 메인 CPU는 ROM에 저장된 명령어에 따라 스토리지에 저장된 O/S를 RAM에 복사하고, O/S를 실행 시켜 시스템을 부팅시킨다. 부팅이 완료되면, 메인 CPU는 스토리지에 저장된 각종 어플리케이션 프로 그램을 RAM에 복사하고, RAM에 복사된 어플리케이션 프로그램을 실행시켜 각종 동작을 수행한다. 그래픽 처리부는 연산부(미도시) 및 렌더링부(미도시)를 이용하여 아이콘, 이미지, 텍스트 등과 같은 다양 한 객체를 포함하는 화면을 생성한다. 연산부(미도시)는 수신된 제어 명령에 기초하여 화면의 레이아웃에 따라 각 객체들이 표시될 좌표값, 형태, 크기, 컬러 등과 같은 속성값을 연산한다. 렌더링부(미도시)는 연산부(미도 시)에서 연산한 속성값에 기초하여 객체를 포함하는 다양한 레이아웃의 화면을 생성한다. 렌더링부(미도시)에서 생성된 화면은 디스플레이의 디스플레이 영역 내에 표시된다. 여기서, 전자 장치는 전자 장치에 포함된 디스플레이를 직접 제어 할 수 있다. 전자 장치 는 디스플레이에 표시되는 내용을 결정하여 디스플레이를 통해 표시할 수 있다. 한편, 본 개시의 또 다른 실시 예에 따른 전자 장치는 비디오 신호를 생성하여 외부의 디스플레이 장 치에 생성된 비디오 신호를 전달하는 형태로 구현될 수 있다. 전자 장치는 비디오 신호를 출력하여 외부의 디스플레이 장치에 전송하고, 외부의 디스플레이 장치는 전자 장치에서 출력된 비디오 신호를 수신하 여 해당 내용을 디스플레이에 표시할 수 있다. 한편, 상술한 프로세서의 동작은 스토리지에 저장된 프로그램에 의해 이루어질 수 있다. 스토리지는 전자 장치를 구동시키기 위한 O/S(Operating System) 소프트웨어 모듈, LSM 및 RNN 학습 모듈 등과 같이 다양한 데이터를 저장한다. 통신부는 다양한 유형의 통신방식에 따라 다양한 유형의 외부 장치와 통신을 수행하는 구성이다. 통신부 는 와이파이 칩, 블루투스 칩, 무선 통신 칩, NFC 칩 등을 포함한다. 프로세서(12 0)는 통신부를 이용하여 각종 외부 장치와 통신을 수행한다. 와이파이 칩, 블루투스 칩은 각각 WiFi 방식, 블루투스 방식으로 통신을 수행한다. 와이파이 칩(13 1)이나 블루투스 칩을 이용하는 경우에는 SSID 및 세션 키 등과 같은 각종 연결 정보를 먼저 송수신하여, 이를 이용하여 통신 연결한 후 각종 정보들을 송수신할 수 있다. 무선 통신 칩은 IEEE, 지그비(zigbee),3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evoloution) 등과 같은 다양 한 통신 규격에 따라 통신을 수행하는 칩을 의미한다. NFC 칩은 135kHz, 13.56MHz, 433MHz, 860~960MHz, 2.45GHz 등과 같은 다양한 RF-ID 주파수 대역들 중에서 13.56MHz 대역을 사용하는 NFC(Near Field Communication) 방식으로 동작하는 칩을 의미한다. 한편, 본 개시의 또 다른 실시 예에 따른 전자 장치는 디스플레이를 포함하지 않고 별도의 디스플레이 장 치에 연결될 수 있다. 이 경우, 프로세서는 별도의 디스플레이 장치에 비디오 및 오디오 신호를 전송하기 위하 여 통신부를 제어할 수 있다. 디스플레이 장치는 비디오 및 오디오 신호를 수신하여 출력 할 수 있도록 디스플레이 및 오디오 출력부를 포함 할 수 있다. 오디오 출력부는 오디오 데이터를 출력하기 위한 스피커, 헤드폰 출력 단자 또는 S/PDIF 출력 단자 를 포함할 수 있다. 이 경우, 전자 장치는 비디오 및 오디오 신호를 디스플레이 장치에 전송하기 위한 출력 포트를 구비할 수 있다. 여기서, 전자 장치의 출력 포트는 비디오 및 오디오 신호를 동시에 전송할 수 있는 포트 일 수 있다. 예를 들어, 출력 포트는 HDMI(High Definition Multimedia Interface), DP(Display Port), 썬더볼트 (Thunderbolt) 중 하나의 인터페이스일 수 있다. 한편, 전자 장치의 출력 포트는 비디오 및 오디오 신호를 각각 전송할 수 있도록 별개의 포트로 구성될 수 있다. 또한, 전자 장치는 비디오 및 오디오 신호를 디스플레이 장치에 전달하기 위해 무선 통신 모듈을 이용할 수 있다. 무선 통신 모듈이란, WiFi, IEEE 등과 같은 무선 통신 프로토콜에 따라 외부 네트워크에 연결되어 통 신을 수행하는 모듈이다. 이 밖에 무선 통신 모듈은 3G(3rd Generation), 3GPP(3rd Generation Partnership Project), LTE(Long Term Evolution), LTE-A(LTE Advanced) 등과 같은 다양한 이동 통신 규격에 따라 이동 통 신망에 접속하여 통신을 수행하는 이동 통신 모듈을 더 포함할 수 있다. 프로세서는 통신부를 통해 외부 장치로부터 입력 데이터 등을 수신할 수 있다. 사용자 인터페이스부는 다양한 사용자 인터랙션(interaction)을 수신할 수 있다. 여기서, 사용자 인터페이 스부는 전자 장치의 구현 예에 따라 다양한 형태로 구현 가능하다. 예를 들어, 사용자 인터페이스부 는 전자 장치에 구비된 버튼, 사용자 음성을 수신하는 마이크, 사용자 모션을 감지하는 카메라 등일 수 있다. 또는, 전자 장치가 터치 기반의 전자 장치로 구현되는 경우 사용자 인터페이스부는 터치패 드와 상호 레이어 구조를 이루는 터치 스크린 형태로 구현될 수도 있다. 이 경우, 사용자 인터페이스부는 상술한 디스플레이로 사용될 수 있게 된다. 한편, 프로세서는 오디오 데이터에 대한 디코딩이나 증폭, 노이즈 필터링 등과 같은 다양한 처리를 수행할 수 있다. 또한, 프로세서는 비디오 데이터에 대한 디코딩, 스케일링, 노이즈 필터링, 프레임 레이트 변환, 해상도 변환 등과 같은 다양한 이미지 처리를 수행할 수 있다. 스피커는 프로세서에서 처리된 오디오 신호를 출력할 수 있다. 예를 들어, 스피커는 적어도 하나의 채널을 출력할 수 있는, 적어도 하나의 스피 커 유닛, D/A 컨버터, 오디오 앰프(audio amplifier) 등을 포함할 수 있다. 이상과 같은 방법을 통해 프로세서는 RNN모델 및 LSM모델을 이용하여 성능 저하를 최소화하는 데이터 전처 리 과정을 수행할 수 있다. 한편, 도1a 및 1b를 설명함에 있어, 전자 장치가 데이터 수신 및 기계 학습 알고리즘을 모두 수행하는 것으로 설명하였다. 하지만, 실제 구현시 전자 장치는 입력 데이터를 수신하고, 전자 장치는 외부 서버 (미도시)에 입력 데이터를 송신할 수 있다. 여기서, 외부 서버는 수신 받은 입력 데이터를 기초로 특징 추출 동 작을 수행하여 특징 데이터를 획득할 수 있다. 외부 서버는 특징 데이터를 이용하여 LSM 학습 모델 및 RNN 학습 모델에 적용시켜 최종 출력값을 획득할 수 있다. 그리고 획득된 최종 출력값을 전자 장치로 송신할 수 있 다. 한편, 본 개시의 또 다른 실시 예에 따르면, 전자 장치에서 입력 데이터 수신 및 특징 추출 동작을 수행할 수 있고, 외부 서버에서 LSM 학습 모델 및 RNN 학습 모델을 적용하는 동작을 수행할 수 있다. 이와 같이, 하드웨어의 성능 및 처리 속도에 따라 전자 장치와 외부 서버 사이에 복수개의 동작을 분담하 여 기계 학습 알고리즘을 구현할 수 있다. 외부 서버에서 기계 학습 알고리즘을 수행하는 구체적인 내용은 도 9 내지 도11에서 후술한다. 한편, 도 1b에서 전자 장치는 디스플레이를 포함하는 전자 장치로 도시하였지만, 전자 장치 는 디스플레이가 포함되지 않는 장치일 수 있으며, 별도의 디스플레이 장치를 제어하는 전자 장 치일 수 있다. 도 2는 본 개시의 일 실시 예에 따른 기계 학습 알고리즘 과정을 설명하기 위한 흐름도이다. 도2를 참고하면, 기계 학습 알고리즘을 위해 전자 장치는 입력 데이터를 수신할 수 있다(S205). 그리고, 전자 장치는 수신된 입력 데이터를 기초로 하여 특징 추출(Feature Extraction) 동작을 수행할 수 있다 (S210). 특징 추출 동작은 입력 데이터에서 사용자가 원하는 부분을 추출하기 위한 동작일 수 있다. 여기서, 특징 추출 동작은 데이터의 일부분을 선택하는 동작 또는 데이터를 변환하는 동작을 포함할 수 있다. 전자 장치는 특징 추출 동작을 위해 이산 푸리에 변환(Discrete Fourier Transform, DFT)에 대응하는 고 속 푸리에 변환(Fast Fourier Transform, FFT)을 이용할 수 있다. 전자 장치는 주기성을 나타내는 데이터 를 획득할 수 있도록 FTT를 이용하여 데이터를 변환할 수 있으며, 변환된 데이터는 시간과 주파수의 관계를 의 미할 수 있다. 그리고, FTT롤 이용하여 변환된 데이터의 주파수 영역을 스펙트럼이라고 부를 수 있으며, 이를 이용한 분석을 스펙트럼 분석이라고 부를 수 있다. 한편, 본 개시의 또 다른 실시 예에 따른 전자 장치는 특징 추출 동작을 수행하기 위하여, 테일러 급수 식, 웨이블릿 변환 및 행렬 분해 중 어느 하나의 방법을 이용할 수 있다. 또한, 전자 장치는 상술한 방법 이외에 다양한 방법을 통해 입력 데이터의 특징 추출 동작을 수행할 수 있다. 전자 장치는 상술한 특징 추출 동작을 통해 특징 데이터를 획득할 수 있다. 그리고, 전자 장치는 획 득된 특징 데이터를 RNN 학습 모델에 입력시킬 수 있다. RNN 학습 모델에 적용하면, 해당 학습 모델에 대응되는 출력 값이 나올 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 RNN 학습 모델에 적용시키기 전에 LSM 학습 모델을 이용 하여 데이터 전처리 동작을 수행할 수 있다(S215). 예를 들어, 전자 장치는 특징 추출 동작에 의해 획득된 특징 데이터를 LSM 학습 모델에 적용할 수 있다. 즉, 전자 장치는 LSM 학습 모델에 특징 데이터를 입력값으로 설정할 수 있고, LSM 학습 모델에 의해 출력 된 출력값을 다시 RNN 학습 모델에 입력시킬 수 있다(S220). LSM 학습 모델은 데이터 전처리 동작을 위한 모델일 수 있다. 전자 장치는 LSM 학습 모델을 이용하여 RNN 에 입력되는 데이터를 사전에 변환시킬 수 있다. 그리고, 전자 장치가 LSM 학습 모델을 이용하면 전체적인 인공 지능 알고리즘의 성능이 향상되고, 오류(오인식) 발생 비율을 감소시킬 수 있다. 전자 장치가 LSM 학습 모델을 이용하여 변환시킨 데이터를 RNN 학습 모델에 입력하면, RNN 학습 모델은 기 설정된 알고리즘을 이용하여 출력값을 출력할 수 있다. 그리고, 전자 장치는 RNN 학습 모델에 의해 출력된 출력값에 소프트 맥스(Soft-max)함수를 적용시킬 수 있 다(S225). 소프트 맥스 함수는 입력 받은 값을 0과 1사이의 값으로 정규화할 수 있다. 또한, 소프트 맥스 함수는 K개의 가 능한 결과에 대한 확률 분포를 나타내는 데 이용될 수 있다. 전자 장치는 RNN 학습 모델에서 출력한 데이터를 소프트 맥스 함수에 적용하여 최종 출력값을 식별할 수 있다(S230). 여기서, 최종 출력값은 확률 값을 의미할 수 있다. 전자 장치는 최종 출력값을 출력할 수 있다. 그리고, 전자 장치는 추가적으로 입력되는 입력 데이터 가 있는지 여부를 식별할 수 있다(S235). 추가로 입력되는 입력 데이터가 없는 경우, 전자 장치는 동작을 정지할 수 있으며, 출력된 적어도 하나의 출력값을 이용하여 데이터를 분석할 수 있다. 한편, 추가로 입력되는 입력 데이터가 있는 경우, 전자 장치는 해당 입력 데이터에 대하여 특징 추출 동작, LSM 학습 모델, RNN 학습 모델 및 소프트 맥스 함수를 적용하여 최종 출력값을 다시 획득할 수 있다. 한편, 본원은 입력 데이터에 대하여 특징 추출 동작을 수행하고 RNN 학습 모델을 적용하기 이전에 데이터 전처 리 동작을 수행하는 것일 수 있다. 따라서, RNN 학습 모델이 이용되는 다양한 실시 예에 본원 기술이 적용될 수 있다. 예를 들어, 본원 데이터 전처리 동작은 음성 인식 또는 이미지 인식에 적용될 수 있다. 본원 알고리즘은 음성 인식 장치에 적용될 수 있다. 여기서, Wake-up Word (Wake up word (WuW))를 검출하는 학습 모델은 잡음이 많은 환경에서는 True Acceptance (TA) 비율을 높이고 False Acceptance (FA) 비율을 낮추 는 것이 매우 어려울 수 있다. 하지만, 특징 데이터를 본 개시에 따른 LSM 학습 모델에 적용한 후 RNN 모델에 입력하게 되면, 잡음이 많은 환경에서도 True Acceptance (TA) 비율을 높이고 False Acceptance (FA) 비율을 낮출 수 있게 된다. 본 개시의 일 실시 예에 따라 전자 장치가 스마트 스피커 (Smart Speaker)로 구현되는 경우, 스마트 스피커는 음악 또는 기타 오디오 데이터를 재생하기 위한 강력한 오디오 스피커 시스템과 음성 인 터페이스 용 마이크 어레이로 구성될 수 있다. 음성 인식 기능을 수행하는 전자 장치는 마이크(미도시)를 포함할 수 있다. 마이크는 활성화 상태에서 사용자의 음성을 수신할 수 있다. 예를 들어, 마이크는 전자 장치의 상측이나 전면 방향, 측면 방향 등에 일체화된 일체형으로 형성될 수 있다. 마이크는 음성 입력을 받기 위한 구성일 수 있다. 마이크는 아날로그 형태의 사용자 음성을 수집하는 마이크, 수집된 사용자 음성을 증폭하는 앰프 회로, 증폭된 사용자 음성을 샘플링하여 디지털 신호로 변환하는 A/D 변환회로, 변환된 디지털 신호로부터 노이즈 성 분을 제거하는 필터 회로 등과 같은 다양한 구성을 포함할 수 있다. 여기서, 마이크의 종류, 크기, 배치 위치 등은 원격 제어 장치를 이용하여 구현하고자 하는 동작의 종류나, 원 격 제어 장치의 외관 형상, 원격 제어 장치의 사용 양태 등에 따라 달라질 수 있다. 가령, 원격 제어 장치가 직 사각 형태의 앞면을 가지는 육면체로 구현된 경우, 마이크는 원격 제어 장치의 앞면에 배치될 수 있다. 사용자는 전자 장치의 마이크를 통하여 음성 인식을 수행할 수 있다. 따라서, 본 명세서의 모든 동작은 외 부 장치에 포함된 마이크 없이 전자 장치의 마이크만으로도 수행될 수 있다. 한편, 상술한 설명에서는 전자 장치가 마이크를 직접 포함하는 것으로 설명하였지만, 실제 구현 시 마이크 는 외부 장치에 포함된 구성요소일 수 있다. 이 경우, 외부 장치에 포함된 마이크에서 사용자의 아날로그 음성 신호를 수신하면, 외부 장치에서 수신된 아날 로그 음성 신호를 디지털 신호로 변환할 수 있다. 그리고, 외부 장치는 변환된 디지털 신호를 전자 장치에 전송할 수 있다. 그리고 외부 장치는 변환된 디지털 신호를 전자 장치에 전송하기 위하여 무선 통신 방법 을 이용할 수 있으며, 무선 통신 방법은 Bluetooth 또는 Wi-Fi 일 수 있다. 또한, 무선 통신 방법을 Bluetooth 또는 Wi-Fi 로 설명하였지만, 실제 구현 시 Bluetooth 또는 Wi-Fi 이외에 다양한 무선 통신 방법이 이용될 수 있다. 외부 장치는 원격 제어 장치일 수 있다. 원격 제어 장치는 특정한 장치를 제어하기 위한 장치에 해당하며, 리모 컨에 해당할 수 있고, 사용자는 리모컨에 부착되어 있는 마이크를 통하여 음성 인식 동작을 수행할 수 있다. 한편, 외부 장치는 스마트폰과 같은 단말 장치에 해당할 수 있다. 사용자는 스마트폰에 포함되어 있는 마이크를 통하여 음성 인식 동작을 수행할 수 있다. 이 경우, 사용자는 특정 어플리케이션을 설치하여 음성 인식 동작을 수행하여 전자 장치에 전송할 수 있다. 또한, 사용자는 특정 어플리케이션을 이용하여 전자 장치를 제어 할 수 있다. 이 경우, 마이크를 포함하는 스마트폰은 데이터 송수신 및 전자 장치의 제어를 위해 Bluetooth, Wi-Fi 또 는 적외선 등을 이용하는 통신부를 포함할 수 있다. 이 경우, 외부 장치의 통신부는 통신 방식에 따라 복수의 구성요소로 이루어질 수 있다. 한편, 마이크를 포함하는 외부 장치는 데이터 송수신 및 전자 장치의 제어를 위해 Bluetooth, Wi-Fi 또는 적외선 등을 이용하는 통신부를 포함할 수 있다. 이 경우, 외부 장치의 통신부는 통신 방식에 따라 복수의 구성 요소로 이루어질 수 있다. 또한, 외부 장치로부터 데이터 송수신 및 제어 명령을 수신하는 전자 장치는 Bluetooth, Wi-Fi 또는 적외 선 등을 이용하는 통신부를 포함할 수 있다. 이 경우, 전자 장치의 통신부는 통신 방식에 따라 복수의 구 성요소로 이루어질 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치는 음성 인식 외부 서버로 수신된 디지털 음성 신호를 전송 할 수 있다. 그리고 음성 인식 외부 서버는 디지털 음성 신호를 텍스트 정보로 변환하는 STT(Speech To Text)기능을 수행할 수 있다. 음성 인식 외부 서버는 STT기능을 수행하여 디지털 음성 신호를 텍스트 정보로 변환하고 변환된 텍스트 정보에 대응되는 정보를 검색할 수 있다. 그리고 음성 인식 외부 서버는 변환된 텍스트 정보에 대응되는 정보를 전자 장치에 전송할 수 있다. 상술한 음성 인식 외부 서버는 STT(Speech To Text) 기능 및 검색 기능을 동시에 수행할 수 있다. 한편, 음성 인식 외부 서버에서는 STT(Speech To Text) 기능만을 수행하고 검색 기능은 별도의 외부 서버에서 수행할 수 있다. 이 경우, STT(Speech To Text) 기능을 수행하는 외부 서버에서 디지털 음성 신호를 텍스트 정 보로 변환하고 변환된 텍스트 정보를 검색 기능을 수행하는 별도의 외부 서버에 전송할 수 있다. 한편, 본 개시의 또 다른 실시 예에 따른 전자 장치는 직접 STT(Speech To Text) 기능을 수행할 수 있다. 전자 장치는 디지털 음성 신호를 텍스트 정보로 변환하고 변환된 텍스트 정보를 음성 인식 외부 서버에 전 송할 수 있다. 이 경우 음성 인식 외부 서버는 검색 기능만을 수행할 수 있다. 그리고 음성 인식 외부 서버는 변환된 텍스트 정보에 대응되는 정보를 검색하고 전자 장치에 전송할 수 있다. 스마트 스피커는LSM 학습 모델 및 RNN 학습 모델을 포함하는Wake up word (WuW) 엔진을 포함할 수 있다. 스마트 스피커로 입력된 음성 신호는 잡음 감소 알고리즘을 적용한 후에 one-channel audio-stream 로 머징 (merge)되고, Wake up word (WuW) 엔진에서 적어도 하나의 프레임 단위로 독출(식별)될 수 있다. 이후 적어도 하나의 프레임 단위로 상술한 특징 데이터로 변환된 후, LSM 학습 모델을 거쳐 RNN 학습 모델로 입력될 수 있다. 이 경우, RNN 학습 모델의 출력은 후처리 과정(예를 들어, \"soft-max\" 함수)에 의해 \"Wake up word (WuW)\"및 \"non-Wake up word (WuW)\" 확률로 변환될 수 있다. 이후, \"Wake up word (WuW)\"확률이 충분히 높을 때(기 정의 된 임계 값을 초과하는 경우) Wake up word (WuW)가 인식되었다고 볼 수 있게 된다. 도 3은 Liquid State Machine(LSM) 모델의 신경망을 설명하기 위한 도면이다. 도 3을 참고하면, LSM 학습 모델의 신경망은 특징 데이터, 뉴런, 링크를 포함할 수 있다. 특징 데이터는 특징 추출 동작이 수행된 이후의 데이터를 의미할 수 있다. 즉, 특징 데이터는 수신된 입력 데이터에서 특징 추출 동작을 수행한 이후의 데이터를 의미할 수 있다. LSM학습 모델은 특징 추출 동작이 수행된 데이터를 이용하여, 출력 값을 획득할 수 있다. LSM 학습 모델은 각 뉴런의 뉴런 값 및 각 뉴런간 연결된 링크에 대응되는 가중치를 포함할 수 있다. 또한, LSM 학습 모델은 각 뉴런간 링크로 구성될 수 있으며, 특정 층(layer)로 구분되어 있지 않을 수 있다. 한편, 도 3을 설명함에 있어 하나의 뉴런이 일부 뉴런과 링크되어 있는 것으로 도시하였지만, 실제로 하나의 뉴 런이 다른 모두의 뉴런과 링크되는 형태로 구현될 수 있다. 한편, 본 개시의 또 다른 실시 예에 따른 LSM 학습 모델에서 특징 데이터는 센서일 수 있다. 특징 데이터 가 센서에서 식별된 데이터라고 가정하면, 수학식 2를 적용함에 있어 Ii(n)대신에 Ei(n)을 사용할 수 있다. Ei (n)은 시간 n에서 i 번째 센서에 대한 외부 입력이므로 전자 장치는 시스템 내부에서 스파이크를 수신하지 않을 수 있다. 반면에 전자 장치는 다른 유닛들 (interneurons)로부터 수학식 2에 따라 센서의 스파이크를 수신할 수 있다. 도 4는 Liquid State Machine(LSM) 모델의 계산 과정을 설명하기 위한 도면이다. 도 4 (a)는 LSM 학습 모델에 입력되는 특징 데이터를 의미할 수 있다. 여기서, 특징 데이터는 특징 추출 동작이 수행된 데이터일 수 있다. 도 4 (a)는 수학식 2를 이용하여 획득된 Ii값일 수 있다. LSM 학습 모델은 Ii(n) 값을 획득하기 위하여 가중치 및 스파이크 이용할 수 있다. 도 4 (a)에서 도시한 그래프를 이용하여 전자 장치는 출력값을 획득할 수 있 다. 도 4 (b)는 수학식 1을 이용하여 획득할 수 있다. 수학식 1을 이용하여 획득된 vi(n)의 값은 뉴런의 뉴런 값에 해당할 수 있다. 전자 장치는 특정 뉴런의 뉴런 값이 vth값보다 큰 경우를 식별하여 스파이크(Spike) 형태로 데이터를 획득 할 수 있다. 도 4(c)는 스파이크 형식의 데이터를 표현한 도면이다. LSM 학습 모델은 도4 (b)에서 임계값(vth)보다 큰 경우 1로 설정할 수 있다. 그리고, LSM 학습 모델은 도4 (b)에서 임계값(vth)보다 작은 경우 0으로 설정할 수 있다. 도 5는 Liquid State Machine(LSM) 모델의 정보 엔트로피를 설명하기 위한 도면이다. NT는 기 설정된 시간 구간 단위에서 생성되는 스파이크의 타겟 개수를 의미할 수 있다. 그리고, iteration number은 NT가 변하는 횟수를 의미할 수 있으며, NT는 기 설정된 시간 구간 단위로 변할 수 있으며 기 설정된 시간 구간 단위가 하나의 iteration이 될 수 있다. 도 5 (a)를 참고하면, LSM 학습 모델은 NT가 알고리즘 진행에 따라 증가하도록 설정할 수 있다. 그리고, 도 5 (b)를 참고하면, LSM 학습 모델은 수학식 5를 이용하여 정보 엔트로피를 구하고, 각 뉴런의 정보 엔트로피 합을 획득할 수 있다. 여기서, LSM 학습 모델은 정보 엔트로피의 합을 기 설정된 시간 구간 단위로 그 룹핑하여 계산할 수 있다. LSM 학습 모델은 기 설정된 시간 구간 단위를 배치(batch) 또는 미니 배치(mini- batch)로 구분할 수 있다. 도 5 (a) 와 같이 NT를 일정시간에 따라 상승하는 형태로 설정하면, 도 5 (b)와 같은 정보 엔트로피의 합을 획 득할 수 있다. 도 5 (b)를 참고하면, LSM 학습 모델은 정보 엔트로피의 합이 증가하다가 감소하는 형태의 데이 터를 획득할 수 있다. 도 6은 Liquid State Machine(LSM) 모델의 학습 알고리즘을 설명하기 위한 도면이다. LSM 학습 모델은 기 설정된 시간 구간 단위에서 스파이크의 타겟 개수를 설정할 수 있다(S605). 여기서, 타겟 개수란 사용자가 원하는 기 설정된 시간 구간 단위의 스파이크 개수를 의미할 수 있다. 타겟 개수는 각 뉴런에 서 생성되는 스파이크 개수와 함께 각 뉴런간 링크에 대응되는 가중치를 결정하는데 이용될 수 있다. (수학식 3 및 4참고) LSM 학습 모델은 알고리즘 학습 과정에서 스캔 상태인지 여부를 구분할 수 있다. LSM 학습 모델은 스캔 상태인 경우를 True(phase 1), 스캔 상태가 아닌 경우를 False(phase 2)로 구분할 수 있다. LSM 학습 모델은 동작을 시작하는 경우, 스캔 상태를 True로 설정하고 타겟 개수(NT)를 Nmin으로 설정할 수 있 다. 여기서, Nmin은 타겟 개수의 최소값을 의미할 수 있다. 본 개시의 일 실시 예에 따른 LSM 학습 모델은 타겟 개수(NT)를 증가시키므로, 최초 설정되는 타겟 개수 값이 최소값이 될 수 있다. 여기서, Nmin은 기 설정된 임의 의 값일 수 있다. LSM 학습 모델은 초기 값을 설정한 이후, 특징 데이터를 수신할 수 있다(S610). 여기서, 특징 데이터는 수신된 데이터에서 특징 추출 동작이 수행된 데이터를 의미할 수 있다. LSM 학습 모델은 기 설정된 시간 구간 단위만큼 데이터를 수신하였는지 판단할 수 있다(S615). 여기서, LSM 학 습 모델은 기 설정된 시간 구간 단위를 미니 배치(mini-batch)로 설정할 수 있다. LSM 학습 모델은 미니 배치만 큼의 데이터가 입력되지 않은 경우 새로운 특징 데이터를 수신할 수 있다. LSM 학습 모델은 미니 배치만큼의 데이터가 입력된 경우 스캔 상태 여부를 판단할 수 있다(S625). LSM 학습 모 델이 스캔 상태가 아니라면 가중치를 업데이트(S620)하고 새로운 특징 데이터를 받을 것인지 여부를 식별(S62 0)할 수 있다. 여기서, 가중치란 각 뉴런간 링크에 대응되는 가중치를 의미할 수 있다. LSM 학습 모델이 스캔 상태라면 M 미니 배치만큼 특징 데이터가 수신되었는지 여부를 판단할 수 있다(S630). 여 기서, M미니 배치란, 미니 배치에 대응되는 시간에 M배를 곱한 시간 단위를 의미할 수 있다. M 미니 배치만큼 특징 데이터가 수신되지 않았다면, LSM 학습 모델은 가중치를 업데이트(S620)하고 새로운 특징 데이터를 받을 것인지 여부를 식별(S620)할 수 있다. 여기서, M 미니 배치 단위로 데이터를 분석하는 경우, LSM 학습 모델은 기 설정된 시간 구간 단위(1 미니 배 치)의 평균 스파이크 개수를 이용할 수 있다. M 미니 배치만큼 특징 데이터가 수신되었다면 LSM 학습 모델은 타겟 개수(NT)를 기 설정된 숫자만큼 올리도록 설정할 수 있다(S635). 예를 들어, M 미니 배치의 시간이 경과한 것으로 식별되면, LSM 학습 모델은 NT의 값을 +1만큼 올릴 수 있다. 그리고, LSM 학습 모델은 M 미니 배치에 해당하는 시간에 대응되는 정보 엔트로피를 계산할 수 있다. 또한, LSM 학습 모델은 계산된 모든 뉴런들의 정보 엔트로피의 합을 계산할 수 있다. 계산 과정은 수학식 5를 참고할 수 있다. LSM 학습 모델은 모든 뉴런들의 정보 엔트로피를 합한 값을 획득할 수 있고, 획득된 값이 최대 값을 갖는지 여 부를 식별할 수 있다(S645). 여기서, 정보 엔트로피 합에 대한 데이터는 도 5 (b)와 유사할 수 있다. LSM 학습 모델은 정보 엔트로피 합에 대한 데이터에서 최대값을 갖는 iteration number를 식별할 수 있다. 정보 엔트로피 합에 대한 데이터에서 최대값이 식별되지 않는 경우, LSM 학습 모델은 가중치를 업데이트(S620) 하고 새로운 특 징 데이터를 수신할 것인지 여부를 식별(S620)할 수 있다. LSM 학습 모델이 모든 뉴런에 대한 정보 엔트로피 합에 대한 데이터에서 최대값을 식별하면, LSM 학습 모델은 스캔 상태 여부를 false로 설정할 수 있다(S650). 여기서, LSM 학습 모델이 최대값을 식별하기 위해서 NT값을 기 설정된 범위만큼 증가시킬 수 있다. 그리고, LSM 학습 모델은 식별된 최대값에 대응되는 iteration을 식별하고, 해당 iteration에서 설정된 타겟 개 수(NT)를 최적의 타겟 개수로 설정할 수 있다. 도 6을 참고하면, 최적의 타겟 개수는 Nopt로 표현될 수 있다. LSM 학습 모델이 스캔 상태를 false로 변환하고 NT에 대한 최적값을 설정한 이후, LSM 학습 모델은 가중치를 업 데이트(S620) 하고 새로운 특징 데이터를 수신할 것인지 여부를 식별(S620)할 수 있다. 여기서, LSM 학습 모델은 새로운 특징 데이터 값이 수신되지 않는 경우, 알고리즘 동작을 멈출 수 있다. 만약, 새로운 특징 데이터 값이 수신되는 경우, LSM 학습 모델은 특징 데이터를 수신(S610)할 수 있다. 여기서, LSM 학습 모델은 스캔 상태가 false로 변환되었기 때문에 타겟 개수를 변화시키지 않을 수 있다. LSM 학습 모델 은 특징 데이터가 더 이상 수신되지 않을 때까지 타겟 개수를 최적 값으로 고정하고 가중치만을 변경할 수 있다. 도 7은 도 6에 따른 Liquid State Machine(LSM) 모델의 정보 엔트로피를 설명하기 위한 도면이다. 도 6에 따른 LSM 학습 모델 알고리즘은 스캔 상태여부를 구분할 수 있다. 앞서 설명한 바와 같이 스캔 상태인 경우를 True 또는 phase 1으로 표시하고, 스캔 상태가 아닌 경우를 false 또는 phase 2로 표시할 수 있다. 도 7을 참고하면, LSM 학습 모델은 x2에 해당하는 iteration까지 타겟 개수를 증가 시킬 수 있다. 그리고, 도 7(b)를 참고하면, LSM 학습 모델은 x2에 해당하는 iteration 동안 획득된 정보 엔트로피 합에 대한 데이터 중 최대값을 식별할 수 있다. 해당 최대값에 대응되는 iteration은 x1일 수 있다. 그리고, LSM 학습 모델은 x1 에 대응되는 타겟 개수(NT)를 최적 값(Nopt)으로 설정할 수 있다. 예를 들어, LSM 학습 모델은 x1에 대응되는 타겟 개수(NT=17)을 최적 값으로 설정할 수 있다. 그리고, LSM 학습 모델은 x2이후의 iteration에 대하여 스캔 상태 를 phase2(false)로 변환할 수 있다. Phase2(false)상태에서는 LSM 학습 모델이 타겟 개수를 최적 값으로 유지할 수 있다. 도7(a)를 참고하면, x2 이후 iteration부터는 타게 개수가 17로 유지되고 있음을 알 수 있다. 그리고, 도7(b)를 참고하면, 정보 엔트로피 합에 대한 데이터도 최대값으로 유지되고 있음을 알 수 있다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 본 개시의 일 실시 예에 따른 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저 장된 전자 장치의 제어 방법에 있어서, 전자 장치는 입력 데이터를 수신할 수 있다 (S805). 그리고 전자 장치는 수신된 입력 데이터에서 특징 데이터를 획득할 수 있다 (S810). 그리고, 전자 장치는 획득된 특징 데이터를 LSM 모델에 입력할 수 있다 (S815). 그리고, 전자 장치는 LSM 모델의 출력 값을 RNN 모델에 입력할 수 있다 (S820). 또한, 전자 장치는 RNN 모델의 출력 값에 기초 하여 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 단계를 포함할 수 있다 (S825). 여기서, RNN 모델은 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, LSM 모델은 서로 링크된 복수 의 뉴런을 포함하고 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 구간 단위로 뉴런 값이 기 설정 된 임계값 이상인 스파이크(spike)에 기초하여 결정될 수 있다. 여기서, LSM 모델은 복수의 뉴런 중 임의의 뉴런에서 기 설정된 시간 구간 동안 스파이크 개수가 타겟 개수보다 큰 경우 뉴런의 링크에 대응되는 가중치를 감소시키고, 임의의 뉴런에서 기 설정된 시간 구간 동안 스파이크 개 수가 타겟 개수보다 작은 경우 뉴런의 링크에 대응되는 가중치를 증가시킬 수 있다. 또한, 복수의 뉴런 중 임의의 송신 뉴런 및 송신 뉴런에 대응되는 수신 뉴런 간 링크의 가중치는 기 설정된 시 간 구간 단위에서 송신 뉴런의 뉴런 값이 기 설정된 임계값 이상인 스파이크(spike)의 제1 개수 및 수신 뉴런의뉴런 값이 기 설정된 임계값 이상인 스파이크의 제2 개수에 기초하여 획득될 수 있다. 또한, 현재 시간 구간에서 링크의 가중치는 이전 시간 구간에서 링크의 가중치에 변화량을 합산하여 획득되며, 변화량은 스파이크의 타겟 개수, 제1 개수 및 제2 개수에 의해 산출된 값에 기초하여 획득될 수 있다. 또한, LSM 모델은 스파이크의 최초 타겟 개수를 기 설정된 최소 값으로 설정하고, 기 설정된 시간 구간 단위 마 다 설정된 타겟 개수를 기 설정된 개수만큼 증가시킬 수 있다. 또한, LSM 모델은 송신 뉴런의 스파이크 간 발생 시간 차이에 기초하여 기 설정된 시간 구간 단위로 송신 뉴런 의 정보 엔트로피 값을 획득하고, 복수의 뉴런 각각의 정보 엔트로피 값이 획득되면, 획득된 엔트로피 값을 합 산하며, 합산된 값이 최대값이 되는 시간 구간에서 설정된 타겟 개수를 최종 타겟 개수로 설정할 수 있다. 또한, LSM 모델은 제2 개수가 타겟 개수보다 큰 경우, 변화량이 음수가 되도록 하고, 제2 개수가 타겟 개수보다 작은 경우, 변화량이 양수가 되도록 하고, 제2 개수가 타겟 개수와 동일한 경우, 변화량을 0으로 설정할 수 있 다. 여기서, 가중치는 하기 수학식에 기초하여 결정될 수 있다."}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "w_ij는 송신 뉴런인 i뉴런에서 수신 뉴런인 j뉴런 간 링크에 대응되는 가중치, δw_ij는 가중치의 변화량, α는 기 설정된 상수, ni=Ni/NT (Ni는 기 설정된 시간 구간 단위에서 i뉴런의 스파이크 수, NT는 스파이크의 타겟 개 수), nj=Nj/NT (Nj는 기 설정된 시간 구간 단위에서 j뉴런의 스파이크 수, NT는 스파이크의 타겟 개수), δ nj=nj-1일 수 있다. 도 8에 따른 전자 장치의 제어 방법은 RNN 학습 모델을 적용하기 이전에 데이터 전처리 동작으로서 LSM 학습 모 델을 적용할 수 있다. 여기서, LSM 학습 모델을 이용하여 특징 데이터를 다시 한번 변환할 수 있으므로, 결과적 으로 인공 지능 학습 과정의 성과가 좋을 수 있으며 오류(오인식)가 적을 수 있다. 한편, 본 개시의 일 실시 예에 따른 전자 장치을 설명함에 있어 하나의 전자 장치에서 모든 동작을 수행하는 것처럼 설명하였지만, 실제로 입력 데이터를 수신하는 동작은 전자 장치에서 수행되고 인공 지능 학습 과정은 외부 서버에서 수행될 수 있다. 예를 들어, 전자 장치는 음성 데이터를 수신하여 외부 서버로 전송하고 외부 서버는 수신된 음성 데이터를 분석할 수 있다. 외부 서버는 분석된 결과값을 다시 전자 장치 에 전송할 수 있다. 한편, 도 8과 같은 전자 장치의 제어 방법은 도 1의 구성을 가지는 전자 장치 상에서 실행될 수 있으며, 그 밖 의 구성을 가지는 전자 장치 상에서도 실행될 수 있다. 도 9는 본 개시의 일 실시 예에 따른, 인공지능 모델을 학습하고 이용하기 위한 전자 장치의 구성을 나타내는 블록도이다. 도 9를 참조하면, 외부 서버는 학습부 및 판단부 중 적어도 하나를 포함할 수 있다. 학습부는 학습 데이터를 이용하여 출력 데이터를 획득하기 위한 기준을 갖는 인공지능 모델을 생성 또는 학습시킬 수 있다. 학습부는 수집된 학습 데이터를 이용하여 판단 기준을 갖는 인공지능 모델을 생성할 수 있다. 일 예로, 학습부는 음성 데이터, 이미지 데이터, 텍스트 정보 등을 학습 데이터로서 이용하여 사용자가 의 도하는 출력 데이터를 획득하기 위한 인공지능 모델을 생성, 학습 또는 갱신시킬 수 있다. 판단부는 소정의 데이터를 학습된 인공지능 모델의 입력 데이터로 사용하여, 소정의 출력 데이터를 획득할 수 있다. 일 예로, 판단부는 음성 데이터, 이미지 데이터, 텍스트 정보 등을 학습된 인공지능 모델의 입력 데이터로 사용하여 출력 데이터를 획득(또는, 추정, 추론)할 수 있다. 본 개시의 일 실시 예로, 학습부 및 판단부는 외부 서버에 포함될 수 있으나, 이는 일 실시 예 에 불과할 뿐, 전자 장치 내부에 탑재될 수 있다. 구체적으로, 학습부의 적어도 일부 및 판단부(92 0)의 적어도 일부는, 소프트웨어 모듈로 구현되거나 적어도 하나의 하드웨어 칩 형태로 제작되어 전자 장치에 탑재될 수 있다. 예를 들어, 학습부 및 판단부 중 적어도 하나는 인공 지능(AI; artificial intelligence)을 위한 전 용 하드웨어 칩 형태로 제작될 수도 있고, 또는 기존의 범용 프로세서(예: CPU 또는 application processor) 또 는 그래픽 전용 프로세서(예: GPU)의 일부로 제작되어 전술한 각종 전자 장치에 탑재될 수도 있다. 이때, 인공 지능을 위한 전용 하드웨어 칩은 확률 연산에 특화된 전용 프로세서로서, 기존의 범용 프로세서보다 병렬처리 성능이 높아 기계 학습과 같은 인공 지능 분야의 연산 작업을 빠르게 처리할 수 있다. 학습부 및 판단부가 소프트웨어 모듈(또는, 인스트럭션(instruction) 포함하는 프로그램 모듈)로 구 현되는 경우, 소프트웨어 모듈은 컴퓨터로 읽을 수 있는 판독 가능한 비일시적 판독 가능 기록매체(non- transitory computer readable media)에 저장될 수 있다. 이 경우, 소프트웨어 모듈은 OS(Operating System)에 의해 제공되거나, 소정의 애플리케이션에 의해 제공될 수 있다. 또는, 소프트웨어 모듈 중 일부는 OS(Operating System)에 의해 제공되고, 나머지 일부는 소정의 애플리케이션에 의해 제공될 수 있다. 이 경우, 학습부 및 판단부는 하나의 전자 장치에 탑재될 수도 있으며, 또는 별개의 전자 장치들에 각각 탑재될 수도 있다. 예를 들어, 학습부 및 판단부 중 하나는 전자 장치에 포함되고, 나머지 하나는 외부의 서버에 포함될 수 있다. 또한, 학습부 및 판단부는 유선 또는 무선으로 통하여, 학습부가 구축한 모델 정보를 판단부로 제공할 수도 있고, 학습부로 입력된 데이터가 추가 학습 데이터로서 학습부로 제공될 수도 있다. 도 10 및 도 11은 본 개시의 일 실시 예에 따른, 학습부 및 판단부의 구체적인 구성을 나타내는 블록도이다. 도 10의 (a)를 참조하면, 일부 실시 예에 따른 학습부는 학습 데이터 획득부(910-1) 및 모델 학습부(910- 4)를 포함할 수 있다. 또한, 학습부는 학습 데이터 전처리부(910-2), 학습 데이터 선택부(910-3) 및 모델 평가부(910-5) 중 적어도 하나를 선택적으로 더 포함할 수 있다. 학습 데이터 획득부(910-1)는 출력 데이터를 획득하기 위한 인공지능 모델에 필요한 학습 데이터를 획득할 수 있다. 본 개시의 실시 예로, 학습 데이터 획득부(910-1)는 음성 데이터, 이미지 데이터, 텍스트 정보 등을 학습 데이터로서 획득할 수 있다. 또한, 학습 데이터 획득부(910-1)는 출력 데이터를 획득하기 위하여 사용자 히스토 리 정보, 사용자 선호 정보 등을 학습 데이터로서 획득할 수 있다. 학습 데이터는 학습부 또는 학습부 의 제조사가 수집 또는 테스트한 데이터가 될 수도 있다. 모델 학습부(910-4)는 학습 데이터를 이용하여, 인공지능 모델이 출력 데이터를 획득하는 기준을 갖도록 학습시 킬 수 있다. 예로, 모델 학습부(910-4)는 학습 데이터 중 적어도 일부를 출력 데이터를 획득하기 위한 기준으로 이용하는 지도 학습(supervised learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 또는, 모델 학습부 (910-4)는, 예를 들어, 별다른 지도 없이 학습 데이터를 이용하여 스스로 학습함으로써, 출력 데이터를 획득하 기 위한 기준을 발견하는 비지도 학습(unsupervised learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 또한, 모델 학습부(910-4)는, 예를 들어, 학습에 따른 판단 결과가 올바른 지에 대한 피드백을 이용하는 강화 학습(reinforcement learning)을 통하여, 인공지능 모델을 학습시킬 수 있다. 또한, 모델 학습부(910-4)는, 예 를 들어, 오류 역전파법(error back-propagation) 또는 경사 하강법(gradient descent)을 포함하는 학습 알고 리즘 등을 이용하여 인공지능 모델을 학습시킬 수 있다 또한, 모델 학습부(910-4)는 입력 데이터를 이용하여 출력 데이터를 획득하기 위하여 어떤 학습 데이터를 이용 해야 하는지에 대한 선별 기준을 학습할 수도 있다. 모델 학습부(910-4)는 미리 구축된 인공지능 모델이 복수 개가 존재하는 경우, 입력된 학습 데이터와 기본 학습 데이터의 관련성이 큰 인공지능 모델을 학습할 인공지능 모델로 결정할 수 있다. 이 경우, 기본 학습 데이터는 데이터의 타입별로 기 분류되어 있을 수 있으며, 인공지능 모델은 데이터의 타입별로 미리 구축되어 있을 수 있 다. 예를 들어, 기본 학습 데이터는 학습 데이터가 생성된 지역, 학습 데이터가 생성된 시간, 학습 데이터의 크 기, 학습 데이터의 장르, 학습 데이터의 생성자, 학습 데이터 내의 오브젝트의 종류 등과 같은 다양한 기준으로 기 분류되어 있을 수 있다. 인공지능 모델이 학습되면, 모델 학습부(910-4)는 학습된 인공지능 모델을 저장할 수 있다. 이 경우, 모델 학습 부(910-4)는 학습된 인공지능 모델을 외부 서버의 메모리에 저장할 수 있다. 또는, 모델 학습부(910-4)는 학습된 인공지능 모델을 외부 서버와 유선 또는 무선 네트워크로 연결되는 서버 또는 전자 장치의 메모리 에 저장할 수도 있다.학습부는 인공지능 모델의 판단 결과를 향상시키거나, 인공지능 모델의 생성에 필요한 자원 또는 시간을 절약하기 위하여, 학습 데이터 전처리부(910-2) 및 학습 데이터 선택부(910-3)를 더 포함할 수도 있다. 학습 데이터 전처리부(910-2)는 출력 데이터를 획득하기 위한 학습에 획득된 데이터가 이용될 수 있도록, 획득 된 데이터를 전처리할 수 있다. 학습 데이터 전처리부(910-2)는 모델 학습부(910-4)가 출력 데이터를 획득하기 위하여 획득된 데이터를 이용할 수 있도록, 획득된 데이터를 기 설정된 포맷으로 가공할 수 있다. 예를 들어, 학습 데이터 전처리부(910-2)는 입력된 정보 중 인공지능 모델이 응답을 제공할 때 필요 없는 텍스트(예를 들어, 부사,감탄사 등)를 제거할 수 있다. 학습 데이터 선택부(910-3)는 학습 데이터 획득부(910-1)에서 획득된 데이터 또는 학습 데이터 전처리부(910- 2)에서 전처리된 데이터 중에서 학습에 필요한 데이터를 선택할 수 있다. 선택된 학습 데이터는 모델 학습부 (910-4)에 제공될 수 있다. 학습 데이터 선택부(910-3)는 기 설정된 선별 기준에 따라, 획득되거나 전처리된 데 이터 중에서 학습에 필요한 학습 데이터를 선택할 수 있다. 또한, 학습 데이터 선택부(910-3)는 모델 학습부 (910-4)에 의한 학습에 의해 기 설정된 선별 기준에 따라 학습 데이터를 선택할 수도 있다. 학습부는 인공지능 모델의 판단 결과를 향상시키기 위하여, 모델 평가부(910-5)를 더 포함할 수도 있다. 모델 평가부(910-5)는 인공지능 모델에 평가 데이터를 입력하고, 평가 데이터로부터 출력되는 판단 결과가 소정 기준을 만족하지 못하는 경우, 모델 학습부(910-4)로 하여금 다시 학습하도록 할 수 있다. 이 경우, 평가 데이 터는 인공지능 모델을 평가하기 위한 기 정의된 데이터일 수 있다. 예를 들어, 모델 평가부(910-5)는 평가 데이터에 대한 학습된 인공지능 모델의 판단 결과 중에서, 판단 결과가 정확하지 않은 평가 데이터의 개수 또는 비율이 미리 설정된 임계치를 초과하는 경우 소정 기준을 만족하지 못 한 것으로 평가할 수 있다. 한편, 학습된 인공지능 모델이 복수 개가 존재하는 경우, 모델 평가부(910-5)는 각각의 학습된 인공지능 모델에 대하여 소정 기준을 만족하는지를 평가하고, 소정 기준을 만족하는 모델을 최종 인공지능 모델로서 결정할 수 있다. 이 경우, 소정 기준을 만족하는 모델이 복수 개인 경우, 모델 평가부(910-5)는 평가 점수가 높은 순으로 미리 설정된 어느 하나 또는 소정 개수의 모델을 최종 인공지능 모델로서 결정할 수 있다. 도 10의 (b)를 참조하면, 일부 실시 예에 따른 판단부는 입력 데이터 획득부(920-1) 및 판단 결과 제공부 (920-4)를 포함할 수 있다. 또한, 판단부는 입력 데이터 전처리부(920-2), 입력 데이터 선택부(920-3) 및 모델 갱신부(920-5) 중 적어 도 하나를 선택적으로 더 포함할 수 있다. 입력 데이터 획득부(920-1)는 출력 데이터를 획득하기 위해 필요한 데이터를 획득할 수 있다. 판단 결과 제공부 (920-4)는 입력 데이터 획득부(920-1)에서 획득된 입력 데이터를 입력 값으로 학습된 인공지능 모델에 적용하여 출력 데이터를 획득할 수 있다. 판단 결과 제공부(920-4)는 후술할 입력 데이터 전처리부(920-2) 또는 입력 데 이터 선택부(920-3)에 의해 선택된 데이터를 입력 값으로 인공지능 모델에 적용하여 판단 결과를 획득할 수 있 다. 일 실시 예로, 판단 결과 제공부(920-4)는 입력 데이터 획득부(920-1)에서 획득한 음성 데이터, 이미지 데이터, 텍스트 정보 등을 학습된 인공지능 모델에 적용하여 출력 데이터를 획득할 수 있다. 판단부는 인공지능 모델의 판단 결과를 향상시키거나, 판단 결과의 제공을 위한 자원 또는 시간을 절약하 기 위하여, 입력 데이터 전처리부(920-2) 및 입력 데이터 선택부(920-3)를 더 포함할 수도 있다. 입력 데이터 전처리부(920-2)는 출력 데이터를 획득하는 과정에 획득된 데이터가 이용될 수 있도록, 획득된 데 이터를 전처리할 수 있다. 입력 데이터 전처리부(920-2)는 판단 결과 제공부(920-4)가 출력 데이터를 획득하기 위하여 획득된 데이터를 이용할 수 있도록, 획득된 데이터를 기 정의된 포맷으로 가공할 수 있다. 입력 데이터 선택부(920-3)는 입력 데이터 획득부(920-1)에서 획득된 데이터 또는 입력 데이터 전처리부(920- 2)에서 전처리된 데이터 중에서 응답 제공에 필요한 데이터를 선택할 수 있다. 선택된 데이터는 판단 결과 제공 부(920-4)에게 제공될 수 있다. 입력 데이터 선택부(920-3)는 응답 제공을 위한 기 설정된 선별 기준에 따라, 획득되거나 전처리된 데이터 중에서 일부 또는 전부를 선택할 수 있다. 또한, 입력 데이터 선택부(920-3)는 모 델 학습부(910-4)에 의한 학습에 의해 기 설정된 선별 기준에 따라 데이터를 선택할 수도 있다. 모델 갱신부(920-5)는 판단 결과 제공부(920-4)에 의해 제공되는 판단 결과에 대한 평가에 기초하여, 인공지능 모델이 갱신되도록 제어할 수 있다. 예를 들어, 모델 갱신부(920-5)는 판단 결과 제공부(920-4)에 의해 제공되 는 판단 결과를 모델 학습부(910-4)에게 제공함으로써, 모델 학습부(910-4)가 인공지능 모델을 추가 학습 또는 갱신하도록 요청할 수 있다. 특히, 모델 갱신부(920-5)는 사용자 입력에 따른 피드백 정보를 바탕으로 인공지능 모델을 재학습할 수 있다 도 11은, 일 실시 예에 따른 전자 장치 및 외부의 서버(S)가 서로 연동함으로써 데이터를 학습하고 판단하 는 예시를 나타내는 도면이다. 도 11을 참조하면, 외부의 서버(S)는 학습 데이터에 대한 출력 데이터를 획득하기 위한 기준을 학습할 수 있으 며, 전자 장치는 서버(S)에 의한 학습 결과에 기초하여 출력 데이터를 제공할 수 있다. 이 경우, 서버(S)의 모델 학습부(910-4)는 도 9에 도시된 학습부의 기능을 수행할 수 있다. 즉, 서버(S)의 모델 학습부(910-4)는 출력 데이터를 획득하기 위하여 음성 데이터, 이미지 데이터, 텍스트 정보 등을 이용할지, 상기 정보를 이용하여 출력 데이터를 어떻게 획득할지에 관한 기준을 학습할 수 있다. 또한, 전자 장치의 판단 결과 제공부(920-4)는 입력 데이터 선택부(920-3)에 의해 선택된 데이터를 서버 (S)에 의해 생성된 인공지능 모델에 적용하여 출력 데이터를 획득할 수 있다. 또는, 전자 장치의 판단 결 과 제공부(920-4)는 서버(S)에 의해 생성된 인공지능 모델을 서버(S)로부터 수신하고, 수신된 인공지능 모델을 이용하여 출력 데이터를 획득할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치 에 설치 가능한 어플리케이션 형태로 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들에 따른 방법들은, 기존 전자 장치 에 대한 소프트웨어 업그레이 드, 또는 하드웨어 업그레이드 만으로도 구현될 수 있다. 또한, 상술한 본 개시의 다양한 실시 예들은 전자 장치에 구비된 임베디드 서버, 또는 전자 장치의 외부 서버를 통해 수행되는 것도 가능하다. 본 개시의 일 실시 예에 따른 LSM(Liquid-State Machine) 모델 및 RNN (Recurrent Neural Networks) 모델이 저 장된 전자 장치의 프로세서에 의해 실행되는 경우 전자 장치가 동작을 수행하도록 하는 컴퓨터 명령을 저장하는 비일시적 컴퓨터 판독 가능 매체에 있어서, 동작은 입력데이터에서 특징 데이터를 획득할 수 있다. 획득된 특징 데이터를 LSM 모델에 입력할 수 있다. LSM 모델의 출력 값을 RNN 모델에 입력할 수 있다. RNN 모델의 출력 값에 기초하여 입력 데이터에 기 설정된 객체가 포함되어 있는지 식별하는 단계를 포함하며, RNN 모델은 기 설정된 객체와 관련된 샘플 데이터로 트레이닝된 것이며, LSM 모델은 서로 링크된 복수의 뉴런을 포함하고 복수의 뉴런 간 링크에 적용되는 가중치는 기 설정된 시간 구간 단위로 뉴런 값이 기 설정된 임계값 이상인 스파이크(spik e)에 기초하여 결정될 수 있다. 한편, 상술한 실시 예에 따른 전자 장치 제어 방법은 프로그램으로 구현되어 전자 장치에 제공될 수 있다. 특히, 전자 장치 제어 방법을 포함하는 프로그램은 비일시적 판독 가능 매체(non-transitory computer readable medium)에 저장되어 제공될 수 있다. 또한, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어(hardware) 또는 이들의 조합된 것 을 이용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 하드 웨어적인 구현에 의하면, 본 개시에서 설명되는 실시 예들은 ASICs(Application Specific Integrated Circuits), DSPs(digital signal processors), DSPDs(digital signal processing devices), PLDs(programmable logic devices), FPGAs(field programmable gate arrays), 프로세서(processors), 제어기 (controllers), 마이크로 컨트롤러(micro-controllers), 마이크로 프로세서(microprocessors), 기타 기능 수행 을 위한 전기적인 유닛(unit) 중 적어도 하나를 이용하여 구현될 수 있다. 일부의 경우에 본 명세서에서 설명되 는 실시 예들이 프로세서 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨어 모듈들로 구현될 수 있다. 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 동작을 수행할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 전자 장치 에서의 처리동작을 수행하기 위한 컴퓨터 명 령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium) 에 저장될 수 있다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 특정 기기의 프로세서에 의해 실행되었을 때 상술한 다양한 실시 예에 따른 전자 장치 에서의 처리 동작을 상기 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체 가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적 컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등 이 있을 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2018-0096368", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어서는 안될 것이다."}
{"patent_id": "10-2018-0096368", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 본 개시의 일 실시 예에 따른 전자 장치를 도시한 블록도이다. 도 1b는 전자 장치의 세부 구성의 일 예를 나타내는 블록도이다. 도 2는 본 개시의 일 실시 예에 따른 기계 학습 알고리즘 과정을 설명하기 위한 흐름도이다. 도 3은 Liquid State Machine(LSM) 모델의 신경망을 설명하기 위한 도면이다. 도 4는 Liquid State Machine(LSM) 모델의 계산 과정을 설명하기 위한 도면이다. 도 5는 Liquid State Machine(LSM) 모델의 정보 엔트로피를 설명하기 위한 도면이다. 도 6은 Liquid State Machine(LSM) 모델의 학습 알고리즘을 설명하기 위한 도면이다. 도 7은 도 6에 따른 Liquid State Machine(LSM) 모델의 정보 엔트로피를 설명하기 위한 도면이다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 도 9는 본 개시의 일 실시 예에 따른, 인공지능 모델을 학습하고 이용하기 위한 전자 장치의 구성을 나타내는 블록도이다. 도 10 및 도 11은 본 개시의 일 실시 예에 따른, 학습부 및 판단부의 구체적인 구성을 나타내는 블록도이다."}
