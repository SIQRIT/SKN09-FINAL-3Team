{"patent_id": "10-2024-7011941", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0088820", "출원번호": "10-2024-7011941", "발명의 명칭": "공유 자원 및 다수의 스케줄링 목적을 갖는 다수의 작업 프로젝트를 스케줄링하기 위한 AI 훈", "출원인": "헥사곤 테크놀로지 센터 게엠베하", "발명자": "메가니, 크리샨, 쿠마르"}}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 디바이스를 사용하여 태스크 스케줄들을 생성하기 위한 시스템으로서,신경망들을 포함하는 프로세서;상기 프로세서에 결합된 메모리;상기 프로세서에 결합된 AI 자동 스케줄러를 포함하고, 상기 AI 자동 스케줄러는: 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스; 상기 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스; 상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스를 수신하고;상기 총 작업 데이터베이스, 상기 자원 데이터베이스, 상기 제약 데이터베이스 및 상기 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여 상기 태스크 스케줄을 최적화하기 위한 훈련된 강화 학습 엔진을 제공하고;상기 훈련된 강화 학습 엔진을 사용하여 상기 작업 패키지들을 순서화하기 위한 최적의 작업 패키지 스케줄을생성하도록 구성되며, 상기 최적의 작업 패키지 스케줄은 상기 주요 목적을 최대화하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 스케줄링 목적 데이터베이스는 적어도: 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는것; 및 고객 비용 견적들을 충족시키는 것을 우선시하는 것을 포함하는 스케줄링 목적들의 그룹으로부터 선택되는, 시스템.공개특허 10-2024-0088820-3-청구항 4 제1항에 있어서, 상기 AI 자동 스케줄러는 상기 총 작업 데이터베이스, 상기 자원 데이터베이스, 상기 제약 데이터베이스, 및 상기 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여 상기 최적의 작업 패키지 스케줄을 생성하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 AI 자동 스케줄러는 상기 주요 목적을 최대화하기 위해 강화 학습에 의해 훈련된 상기 신경망들을 사용하여 상기 최적의 작업 패키지 스케줄을 생성하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 신경망들은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층, 및 하나의 출력 계층을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 최적의 태스크 스케줄은 수행될 복수의 작업 패키지의 상기 제1 리스트의 시퀀스, 수행될상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 시작일 및 종료일, 수행될 상기 복수의 작업 패키지 중각각의 작업 패키지에 대한 스케줄 차트, 수행될 상기 복수의 작업 패키지의 상기 제1 리스트에 대한 시작일 및종료일, 및 수행될 복수의 작업 패키지의 상기 제1 리스트에 대한 스케줄 차트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 AI 자동 스케줄러는: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 작업 패키지 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "계층적 작업 분류 구조의 제3 레벨 작업 패키지들의 스케줄을 자동으로 최적화하기 위한 AI 자동 스케줄러로서,상기 계층적 작업 분류 구조는:계획될 총 작업을 나타내는 제1 레벨;서브시스템들을 나타내는 제2 레벨; 및 상기 작업 패키지들을 나타내는 상기 제3 레벨을 포함하고; 상기 AI 자동 스케줄러는: 계획될 상기 총 작업을 나타내는 아이템들을 포함하도록 구성된 제1 레벨 데이터베이스; 서브시스템들로의 상기 총 작업의 논리적 분류를 나타내는 아이템들을 포함하도록 구성된 제2 레벨 데이터베이스; 상기 제1 레벨에 나열된 작업을 완료하기 위해 궁극적으로 완료되어야 하는 모든 컴포넌트들 및 활동들을 포함하는 제3 레벨 데이터베이스; 상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 제3 레벨 작업 패키지들에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스를 수신하고;상기 제1 레벨 데이터베이스, 상기 제2 레벨 데이터베이스, 상기 제3 레벨 데이터베이스, 상기 제약 데이터베이스 및 상기 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여, 훈련된 강화 학습 엔진을 사용하여 상기계층적 작업 분류 구조 내에서 달성되어야 하는 상기 주요 목적을 우선시하는 상기 제3 레벨 작업 패키지들에공개특허 10-2024-0088820-4-대한 최적화된 스케줄을 자동으로 생성하도록 구성되는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 AI 자동 스케줄러는 자원 요구들, 시간 프레임들, 주어진 작업 패키지에 대한 자원들 간의 종속성들, 및 상기 제3 레벨 작업 패키지들에 대한 작업 패키지들 간의 종속성들을 자동으로 결정하고 할당하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 AI 자동 스케줄러는 주어진 제2 레벨 서브시스템과 관련된 제3 레벨 아이템들을 자동으로 순서화하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서, 상기 AI 자동 스케줄러는 다수의 작업 패키지에 걸친 상기 자원들의 가용성을 자동으로 조정하여, 주어진 자원이 상기 작업 패키지 내의 순서화된 제3 레벨 아이템들에 필요할 때 이용 가능하게 되는, AI자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 AI 자동 스케줄러는 다수의 작업 패키지에 걸친 자원들의 가용성을 자동으로 조정하여,상기 다수의 작업 패키지가 주어진 자원에 대하여 최적화되는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 AI 자동 스케줄러는 상기 작업 패키지 내의 순서화된 제3 레벨 아이템들의 실행에 관한피드백을 추가로 수신하고, 미완료된 제3 레벨 아이템들의 리스트 및 이러한 아이템들의 완료에 필요한 상기 자원들에 기초하여 상기 제3 레벨 아이템들의 시퀀스를 자동으로 업데이트하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서, 상기 AI 자동 스케줄러는 스케줄링 모범 사례들에 관한 업계 전문가 피드백을 추가로 수신하고, 상기 훈련된 강화 학습 엔진을 업데이트하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 상기 AI 자동 스케줄러는 상기 업데이트된 훈련된 강화 학습 엔진을 이용하여 미완료된 제3레벨 아이템들의 리스트 및 이러한 아이템들의 완료에 필요한 자원들에 기초하여 상기 제3 레벨 아이템들의 시퀀스를 자동으로 업데이트하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제11항에 있어서, 상기 AI 자동 스케줄러는 복수의 최적화된 제3 레벨 작업 패키지 후보를 생성하고, 상기 제3레벨 작업 패키지들의 스케줄에 대한 대안적인 옵션들을 제시하는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제10항에 있어서, 상기 AI 자동 스케줄러는 상기 제3 레벨 작업 패키지들의 스케줄링에 대한 통찰력을제공하여, 업계 전문가들이 상기 훈련된 강화 학습 엔진에 의해 훈련될 수 있는, AI 자동 스케줄러."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "강화 학습을 사용하여 대규모 자본 프로젝트를 이행하기 위한 최적의 태스크 스케줄을 생성하기 위한 방법으로서,작업 패키지 내의 태스크들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스를 수신하는 단계; 상기 작업 패키지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원데이터베이스를 수신하는 단계;공개특허 10-2024-0088820-5-상기 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스를 수신하는 단계;상기 최적의 태스크 스케줄에 의해 달성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케줄링 목적데이터베이스를 수신하는 단계; 상기 총 작업 데이터베이스, 상기 자원 데이터베이스, 상기 제약 데이터베이스 및 상기 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여 상기 태스크 스케줄을 최적화하기 위한 훈련된 강화 학습 엔진을 제공하는 단계; 및상기 훈련된 강화 학습 엔진을 사용하여 상기 작업 패키지 내의 상기 아이템들을 순서화하기 위한 최적의 태스크 스케줄을 생성하는 단계를 포함하고, 상기 최적의 태스크 스케줄은 상기 하나 이상의 주요 목적을 최대화하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "새로운 태스크 스케줄들을 작성하도록 인공 지능 소프트웨어를 훈련하기 위한 방법으로서,설치 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 설치 작업 패키지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된자원 데이터베이스;상기 설치 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 상기 새로운 태스크 스케줄들에 의해 달성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스의 복수의 상이한 조합을 시뮬레이션함으로써 복수의 상이한 작업 프로젝트에 대한 복수의 데이터 세트를 생성하는 단계; 및 상기 복수의 데이터 세트 중 각각의 데이터 세트에 대해 하나 이상의 주요 목적을 최대화하도록 강화 학습 엔진을 훈련하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제21항에 있어서,상기 복수의 상이한 작업 프로젝트는 수백 개의 프로젝트를 포함하고;상기 총 작업 데이터베이스, 상기 자원 데이터베이스, 상기 제약 데이터베이스 및 상기 스케줄링 목적 데이터베이스 내의 작업 패키지들의 총 수는 상기 프로젝트들의 복잡성에 따라 약 10개에서 1,000개 이상까지 다양한,방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제21항에 있어서, 상기 강화 학습 엔진은 신경망들을 포함하는 네트워크 아키텍처를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제23항에 있어서, 상기 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층, 및 출력 계층을 갖는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제23항에 있어서, 가중치 분포는 상이한 표준 편차들을 갖는 가우스 분포를 사용하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "공개특허 10-2024-0088820-6-제21항에 있어서, 상기 강화 학습 엔진은 심층 강화 학습 엔진인, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제26항에 있어서, 상기 심층 강화 학습 엔진은 보상 함수에 기초하여 시뮬레이션된 훈련 데이터로부터학습하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "제21항에 있어서, 상기 하나 이상의 주요 목적은 적어도: 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및고객 견적들을 충족시키는 것을 우선시하는 것을 포함하는 목적들의 그룹으로부터 선택되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "제21항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 태스크의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 태스크 중 각각의 태스크에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "제21항에 있어서, 상기 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 태스크 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 구성되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_31", "content": "제30항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_32", "content": "새로운 태스크 스케줄들을 작성하도록 인공 지능 소프트웨어를 훈련하기 위한 시스템으로서,신경망들을 포함하는 프로세서;상기 프로세서에 결합된 메모리;상기 프로세서에 결합된 스케줄링 훈련기를 포함하고, 상기 훈련 스케줄러는:설치 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 설치 작업 패키지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된자원 데이터베이스;상기 설치 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 공개특허 10-2024-0088820-7-상기 새로운 태스크 스케줄들에 의해 달성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스의 복수의 상이한 조합을 시뮬레이션함으로써 복수의 상이한 작업 프로젝트에 대한 복수의 데이터 세트를 생성하고; 상기 복수의 데이터 세트 중 각각의 데이터 세트에 대해 하나 이상의 주요 목적을 최대화하도록 강화 학습 엔진을 훈련하도록 구성되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_33", "content": "제32항에 있어서,상기 복수의 상이한 작업 프로젝트는 수백 개의 프로젝트를 포함하고;상기 총 작업 데이터베이스, 상기 자원 데이터베이스, 상기 제약 데이터베이스 및 상기 스케줄링 목적 데이터베이스 내의 작업 패키지들의 총 수는 상기 프로젝트들의 복잡성에 따라 약 10개에서 1,000개 이상까지 다양한,시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_34", "content": "제32항에 있어서, 상기 강화 학습 엔진은 신경망들을 포함하는 네트워크 아키텍처를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_35", "content": "제34항에 있어서, 상기 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층, 및 출력 계층을 갖는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_36", "content": "제34항에 있어서, 가중치 분포는 상이한 표준 편차들을 갖는 가우스 분포를 사용하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_37", "content": "제32항에 있어서, 상기 강화 학습 엔진은 심층 강화 학습 엔진인, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_38", "content": "제37항에 있어서, 상기 심층 강화 학습 엔진은 보상 함수에 기초하여 시뮬레이션된 훈련 데이터로부터학습하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_39", "content": "제32항에 있어서, 상기 하나 이상의 주요 목적은 적어도: 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및고객 견적들을 충족시키는 것을 우선시하는 것을 포함하는 목적들의 그룹으로부터 선택되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_40", "content": "제32항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 태스크의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 태스크 중 각각의 태스크에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 공개특허 10-2024-0088820-8-수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_41", "content": "제32항에 있어서, 상기 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 태스크 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 구성되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_42", "content": "제41항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_43", "content": "전자 디바이스를 사용하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성하기 위한 시스템으로서,컴퓨터 프로그램 명령어들을 저장하는 적어도 하나의 메모리에 결합된 적어도 하나의 프로세서를 포함하고, 상기 컴퓨터 프로그램 명령어들은 상기 적어도 하나의 프로세서 상에서 실행될 때 상기 시스템으로 하여금 컴퓨터프로세스들을 수행하게 하며, 상기 컴퓨터 프로세스들은:시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 기초하여 복수의 상이한 스케줄링 목적을 위해 훈련된 강화 학습엔진을 제공하는 단계 - 각각의 스케줄링 목적은 상이한 강화 학습 보상 함수를 가짐 -; 및 상기 훈련된 강화 학습 엔진에 의해 상기 복수의 상이한 스케줄링 목적 중에서 선택된 스케줄링 목적 및 그에대응하는 보상 함수에 기초하여 상기 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성하는 단계를 포함하고, 상기 훈련된 강화 학습 엔진은 상기 복수의 스케줄링 목적에 기초하여 상기 타겟 작업 프로젝트에대한 상이한 태스크 스케줄들을 생성할 수 있는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_44", "content": "제43항에 있어서, 상기 타겟 작업 프로젝트는:작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원데이터베이스;상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스와 연관되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_45", "content": "제44항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 공개특허 10-2024-0088820-9-수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_46", "content": "제43항에 있어서, 상기 복수의 상이한 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및고객 비용 견적들을 충족시키는 것을 우선시하는 것을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_47", "content": "제43항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 신경망을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_48", "content": "제47항에 있어서, 상기 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층,및 하나의 출력 계층을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_49", "content": "제43항에 있어서, 상기 최적의 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 시작일 및 종료일, 및 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_50", "content": "제43항에 있어서, 상기 훈련된 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스; 인공 지능 작업 패키지 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_51", "content": "제50항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_52", "content": "제43항에 있어서, 상기 강화 학습 엔진은 상기 훈련된 강화 학습 엔진에 의해 생성된 상기 타겟 작업 프로젝트에 대한 상기 태스크 스케줄에 관한 사용자 피드백을 수신하고, 상기 사용자 피드백에 기초하여 적어도 하나의보상 함수를 업데이트하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_53", "content": "전자 디바이스를 사용하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성하기 위한 방법으로서,시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 기초하여 복수의 상이한 스케줄링 목적을 위해 훈련된 강화 학습엔진을 제공하는 단계 - 각각의 스케줄링 목적은 상이한 강화 학습 보상 함수를 가짐 -; 및 상기 훈련된 강화 학습 엔진에 의해 상기 복수의 상이한 스케줄링 목적 중에서 선택된 스케줄링 목적 및 그에대응하는 보상 함수에 기초하여 상기 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성하는 단계를 포함하고, 상기 훈련된 강화 학습 엔진은 상기 복수의 스케줄링 목적에 기초하여 상기 타겟 작업 프로젝트에대한 상이한 태스크 스케줄들을 생성할 수 있는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_54", "content": "제53항에 있어서, 상기 타겟 작업 프로젝트는:공개특허 10-2024-0088820-10-작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원데이터베이스;상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스와 연관되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_55", "content": "제54항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_56", "content": "제53항에 있어서, 상기 복수의 상이한 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및고객 비용 견적들을 충족시키는 것을 우선시하는 것을 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_57", "content": "제53항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 신경망을 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_58", "content": "제57항에 있어서, 상기 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층,및 하나의 출력 계층을 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_59", "content": "제53항에 있어서, 상기 최적의 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 시작일 및 종료일, 및 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_60", "content": "제53항에 있어서, 상기 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 작업 패키지 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_61", "content": "제60항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 방법.공개특허 10-2024-0088820-11-청구항 62 제53항에 있어서, 상기 강화 학습 엔진은 상기 훈련된 강화 학습 엔진에 의해 생성된 상기 타겟 작업 프로젝트에 대한 상기 태스크 스케줄에 관한 사용자 피드백을 수신하고, 상기 사용자 피드백에 기초하여 적어도 하나의보상 함수를 업데이트하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_63", "content": "전자 디바이스를 사용하여 복수의 작업 프로젝트에 대한 태스크 스케줄들을 생성하기 위한 시스템으로서, 상기 복수의 작업 프로젝트는 주어진 공유 자원에 대한 액세스를 필요로 하고, 상기 시스템은:컴퓨터 프로그램 명령어들을 저장하는 적어도 하나의 메모리에 결합된 적어도 하나의 프로세서를 포함하고, 상기 컴퓨터 프로그램 명령어들은 상기 적어도 하나의 프로세서 상에서 실행될 때 상기 시스템으로 하여금 컴퓨터프로세스들을 수행하게 하며, 상기 컴퓨터 프로세스들은:시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 대해 훈련된 강화 학습 엔진을 제공하는 단계; 및 선택된 스케줄링 목적에 최적화된 적어도 하나의 태스크 스케줄을 갖는 복수의 태스크 스케줄에 걸쳐 조정된 상기 공유 자원의 가용성을 이용하여 상기 훈련된 강화 학습 엔진에 의해 상기 복수의 작업 프로젝트 각각에 대한태스크 스케줄을 생성하는 단계를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_64", "content": "제63항에 있어서, 각각의 작업 프로젝트는:작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원데이터베이스;상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스와 연관되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_65", "content": "제64항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 시스템.공개특허 10-2024-0088820-12-청구항 66 제63항에 있어서, 상기 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것;자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 또는 고객 비용 견적들을 충족시키는 것을 우선시하는 것 중 하나를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_67", "content": "제63항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 신경망을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_68", "content": "제67항에 있어서, 상기 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층,및 하나의 출력 계층을 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_69", "content": "제63항에 있어서, 상기 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 상기 복수의 작업 패키지 중각각의 작업 패키지에 대한 시작일 및 종료일, 및 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_70", "content": "제63항에 있어서, 상기 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 작업 패키지 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_71", "content": "제70항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_72", "content": "제63항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 태스크 스케줄에 관한 사용자 피드백을 수신하고, 상기사용자 피드백에 기초하여 적어도 하나의 보상 함수를 업데이트하는, 시스템."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_73", "content": "전자 디바이스를 사용하여 복수의 작업 프로젝트에 대한 태스크 스케줄들을 생성하기 위한 방법으로서,상기 복수의 작업 프로젝트는 주어진 공유 자원에 대한 액세스를 필요로 하고, 상기 방법은:시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 대해 훈련된 강화 학습 엔진을 제공하는 단계; 및 선택된 스케줄링 목적에 최적화된 적어도 하나의 태스크 스케줄을 갖는 복수의 태스크 스케줄에 걸쳐 조정된 상기 공유 자원의 가용성을 이용하여 상기 훈련된 강화 학습 엔진에 의해 상기 복수의 작업 프로젝트 각각에 대한태스크 스케줄을 생성하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_74", "content": "제73항에 있어서, 각각의 작업 프로젝트는:작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스;상기 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원데이터베이스;상기 작업 패키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스공개특허 10-2024-0088820-13-와 연관되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_75", "content": "제74항에 있어서, 상기 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함하고; 상기 자원 데이터베이스는:수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함하고;상기 제약 데이터베이스는:수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트; 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트; 및 수행될 상기 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_76", "content": "제73항에 있어서, 상기 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것;자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 또는 고객 비용 견적들을 충족시키는 것을 우선시하는 것 중 하나를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_77", "content": "제73항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 신경망을 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_78", "content": "제77항에 있어서, 상기 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층,및 하나의 출력 계층을 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_79", "content": "제73항에 있어서, 각각의 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 상기 복수의 작업 패키지 중각각의 작업 패키지에 대한 시작일 및 종료일, 및 수행될 상기 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_80", "content": "제73항에 있어서, 상기 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스;인공 지능 작업 패키지 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_81", "content": "제80항에 있어서, 상기 서비스들은 클라우드 기반 마이크로 서비스들로서 제공되는, 방법."}
{"patent_id": "10-2024-7011941", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_82", "content": "제73항에 있어서, 상기 강화 학습 엔진은 적어도 하나의 태스크 스케줄에 관한 사용자 피드백을 수신하고, 상기사용자 피드백에 기초하여 적어도 하나의 보상 함수를 업데이트하는, 방법."}
{"patent_id": "10-2024-7011941", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 디바이스를 사용하여 태스크 스케줄들을 생성하기 위한 시스템은: 신경망들을 포함하는 프로세서; 프로세서 에 결합된 메모리; 프로세서에 결합된 스케줄러를 포함하고, 스케줄러는: 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스; 작업 패키지들 내의 아이템들을 이행하는 데 필요한 자원들을 나타내 (뒷면에 계속)"}
{"patent_id": "10-2024-7011941", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "관련 출원(들)에 대한 상호 참조 본 특허출원은 AI 자동 스케줄러(AI AUTO-SCHEDULER)라는 발명의 명칭으로 2021년 9월 24일자로 출원된 미국 특 허출원 제17/483,941호의 이익을 주장하며, 이는 그 전체가 본 명세서에 참조로 통합된다. 본 특허출원은 또한 작업 스케줄 생성을 위한 AI 훈련(AI TRAINING TO PRODUCE TASK SCHEDULES)이라는 발명의 명칭으로 2021년 9월 24일자로 출원된 미국 특허출원 제17/483,966호의 이익을 주장하며, 이는 그 전체가 본 명세서에 참조로 통합된 다. 본 특허출원은 또한 다수의 스케줄링 목적을 지원하는 스케줄링(SCHEDULING WITH SUPPORT FOR MULTIPLE SCHEDULING OBJECTIVES)이라는 발명의 명칭으로 2021년 9월 24일자로 출원된 미국 특허출원 제17/483,986호의 이익을 주장하며, 이는 그 전체가 본 명세서에 참조로 통합된다. 본 특허 출원은 또한 공유 자원을 가진 다수 의 작업 프로젝트에 대한 스케줄링(SCHEDULING MULTIPLE WORK PROJECTS WITH A SHARED RESOURCE)이라는 발명의 명칭으로 2021년 9월 24일자로 출원된 미국 특허 출원 제17/484,029호의 이익을 주장하며, 이는 그 전체가 본 명세서에 참조로 통합된다. 본 특허 출원의 주제는 작업흐름 배치(WORKFLOW DEPLOYMENT)라는 발명의 명칭으로 2020년 12월 3일자로 출원되 고 Hexagon Technology Center GmbH에 양도되고 2021년 7월 29일자로 미국 특허 출원 공보 제2021/0232990호로 서 공개된 미국 특허 출원 제15/734,933호의 주제와 관련될 수 있으며, 이는 그 전체가 본 명세서에 참조로 통 합된다. 본 특허 출원의 주제는 또한 구축 순서 최적화(CONSTRUCTION SEQUENCING OPTIMIZATION)라는 발명의 명칭으로 2019년 8월 26일자로 출원되고 Hexagon Technology Center GmbH에 양도되고 2021년 3월 4일자로 미국 특허 출 원 공보 제2021/0065006호로서 공개된 미국 특허 출원 제16/551,246호의 주제와 관련될 수 있으며, 이는 그 전 체가 본 명세서에 참조로 통합된다. 본 특허 출원의 주제는 또한 작업흐름 생성(WORKFLOW GENERATION)이라는 발명의 명칭으로 2020년 8월 4일자로 출원되고 Hexagon Technology Center GmbH에 양도되고 2021년 7월 15일자로 미국 특허 출원 공보 제 2021/0216358호로 공개된 미국 특허 출원 제16/967,380호의 주제와 관련될 수 있으며, 이는 그 전체가 본 명세 서에 참조로 통합된다. 본 특허 출원의 주제는 또한 작업흐름 생성(WORKFLOW GENERATION)이라는 발명의 명칭으로 2020년 8월 4일자로 출원되고 Hexagon Technology Center GmbH에 양도되고 2021년 7월 15일자로 공개된 미국 특허 출원 공보 제 2021/0216359로 공개된 미국 특허 출원 제16/967,405호의 주제와 관련될 수 있으며, 이는 그 전체가 본 명세서 에 참조로 통합된다. 발명의 분야 본 발명의 다양한 실시예들은 일반적으로 대규모 자본 프로젝트들(large-scale capital projects)의 스케줄링에 관한 것이며, 보다 상세하게는, 다양한 실시예들은 프로젝트 데이터베이스 입력들을 수신하고 상세하고 최적화 된 스케줄들을 자동으로 생성하기 위해 심층 강화 학습 훈련된 인공 지능 자동 스케줄러들(deep reinforcement learning trained artificial intelligence auto-schedulers)을 통합하는 것에 관한 것이다."}
{"patent_id": "10-2024-7011941", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대규모 건설 프로젝트들의 구성(construction)을 설계(designing), 구축(building) 및 관리(managing)하는 것 은 프로젝트를 완료하는 데 필요한 자원들을 조정(coordinate)하기 위한 복잡한 소프트웨어를 필요로 한다. 또 한, 대규모 프로젝트들의 구성은 종종 공급이 제한되는 자원들(resources)을 필요로 하며, 다른 프로젝트들이 동일한 제한된 자원들의 사용을 필요로 한다는 사실로 인해 자원들이 사용 가능한 제한된 시간 윈도우들(time windows)을 가질 수 있다. 따라서, 다른 대규모 프로젝트들에 의해 부과되는 제약들(constraints) 내에서 대규 모 프로젝트들을 관리하는 것은 자원들과 제약들 간의 매우 복잡한 상호 작용을 수용할 수 있는 포괄적인 관리 솔루션을 필요로 한다. 계획될 총 작업(total work)과 같은 프로젝트 입력들을 수신할 뿐만 아니라 총 작업의 서브 프로젝트들로의 분 류(breakdown)를 수신할 수 있는 소프트웨어가 개발되었다. 그러나, 이러한 유형의 프로그램은 여전히 사용자 가 다양한 자원들 및 그러한 자원들에 부과된 제약들을 수용하는 데 필요한 복잡한 스케줄링을 완료할 것을 요 구할 수 있다. 휴리스틱 접근법들(Heuristic approaches)은 작은 태스크들의 세트에 적용될 수 있지만, 대규모프로젝트들의 스케줄링은 매우 숙련된 전문가들에게도 매우 어려워진다. 이러한 복잡한 스케줄을 짜맞추는 것 의 복잡성으로 인해 많은 프로젝트들이 예산을 초과하거나 스케줄보다 늦어진다."}
{"patent_id": "10-2024-7011941", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "다양한 실시예들의 요약 본 발명의 일 실시예에 따르면, 전자 디바이스를 사용하여 태스크 스케줄들을 생성하기 위한 시스템은: 신경망 들을 포함하는 프로세서; 프로세서에 결합된 메모리; 프로세서에 결합된 스케줄러를 포함하고, 스케줄러는: 작 업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스(total work database); 작업 패키 지들 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스 (resources database); 작업 패키지들 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스(constraints database); 및 최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적 (prime objective)을 지정하도록 구성된 스케줄링 목적 데이터베이스(scheduling objective database)를 수신 하고; 총 작업 데이터베이스, 자원 데이터베이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여 태스크 스케줄을 최적화하기 위한 훈련된 강화 학습 엔진(trained reinforcement learning engine)을 제공하고; 훈련된 강화 학습 엔진을 사용하여 작업 패키지들을 순서화(sequence)하기 위한 최적의 작 업 패키지 스케줄을 생성하도록 구성되며, 최적의 작업 패키지 스케줄은 하나 이상의 주요 목적을 최대화한다. 시스템은 스케줄링될 복수의 작업 패키지의 적어도 제1 리스트를 포함하는 총 작업 데이터베이스를 포함할 수 있다. 자원 데이터베이스는 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들(resource requirements)의 제2 리스트 및 스케줄링될 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들(time requirements)의 제3 리스트를 포함할 수 있다. 제약 데이터베이스는 수행될 복수의 작업 패키지의 각각의 자 원 요구에 대한 자원 유형들(resource types)의 제4 리스트, 수행될 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량(quantity)의 제5 리스트, 및 수행될 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성(time availability)의 제6 리스트를 포함할 수 있다. 스케줄링 목 적 데이터베이스는 적어도 평균 슬로우 다운(average slow down)을 최소화하고, 평균 완료 시간(average completion time)을 최소화하고, 자원 이용의 효율을 최대화하고, 원하는 고객 날짜들을 충족시키는 것을 우선 시(prioritize)하고, 고객 비용 견적들을 충족시키는 것을 우선시하는 것을 포함하는 스케줄링 목적들의 그룹으 로부터 선택될 수 있다. 스케줄러는 총 작업 데이터베이스, 자원 데이터베이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스로부 터의 입력들에 기초하여 최적의 작업 패키지 스케줄을 생성할 수 있다. 스케줄러는 주요 목적들을 최대화하기 위해 강화 학습에 의해 훈련된 신경망들을 사용하여 최적의 작업 패키지 스케줄을 생성할 수 있다. 신경망들은 하나의 입력 계층(input layer), 복수의 뉴런을 갖는 하나 이상의 은닉 계층(hidden layers) 및 하나의 출력 계 층(output layer)을 포함할 수 있다. 본 발명의 다른 실시예에 따르면, 계층적 작업 분류 구조(hierarchical work breakdown structure)의 제3 레벨 작업 패키지들의 스케줄을 자동으로 최적화하기 위한 AI 자동 스케줄러로서, 계층적 작업 분류 구조는: 계획될 총 작업을 나타내는 제1 레벨; 서브시스템들을 나타내는 제2 레벨; 및 작업 패키지들을 나타내는 제3 레벨을 포 함하고; AI 자동 스케줄러는: 계획될 총 작업을 나타내는 아이템들을 포함하도록 구성된 제1 레벨 데이터베이스; 총 작업의 서브시스템들로의 논리적 분류(logical breakdown)를 나타내는 아이템들을 포함하도록 구성된 제2 레벨 데이터베이스; 제1 레벨에 나열된 작업을 완료하기 위해 궁극적으로 완료되어야 할 모든 컴포 넌트들 및 활동들(activities)을 포함하는 제3 레벨 데이터베이스; 작업 패키지들의 이행에 대한 제약들을 나타 내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 제3 레벨 작업 패키지들에 의해 달성될 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스를 수신하고; 제1 레벨 데이터베이스, 제2 레벨 데이터베이스, 제3 레벨 데이터베이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여, 훈련된 강화 학습 엔진을 사용하여 계층적 작업 분류 구조 내에서 달성되어야 하는 주요 목적을 우선시하는 제3 레벨 작업 패키지들에 대한 최적화된 스케줄을 자동으로 생성하도록 구성된다. AI 자동 스케줄러는 자원 요구들, 시간 프레임들, 주어진 작업 패키지에 대한 자원들 간의 종속성들 (dependencies), 및 제3 레벨 작업 패키지들에 대한 작업 패키지들 간의 종속성들을 자동으로 결정하고 할당할 수 있다. AI 자동 스케줄러는 주어진 제2 레벨 서브시스템과 관련된 제3 레벨 아이템들을 자동으로 순서화할 수 있다.AI 자동 스케줄러는 다수의 작업 패키지에 걸친 자원들의 가용성을 자동으로 조정할 수 있어 주어진 자원이 작 업 패키지 내의 순서화된 제3 레벨 아이템들에 필요할 때 이용 가능하게 할 수 있다. AI 자동 스케줄러는 다수 의 작업 패키지에 걸친 자원들의 가용성을 자동으로 조정할 수 있어 다수의 작업 패키지가 주어진 자원에 대해 최적화된다. AI 자동 스케줄러는 추가로 작업 패키지 내의 순서화된 제3 레벨 아이템들의 실행과 관련된 피드 백을 수신하고, 완료되지 않은 제3 레벨 아이템들의 리스트 및 이러한 아이템들의 완료에 필요한 자원들에 기초 하여 제3 레벨 아이템들의 시퀀스를 자동으로 업데이트한다. AI 자동 스케줄러는 추가로 스케줄링 모범 사례들에 관한 업계 전문가(industry expert) 피드백을 수신하고, 훈 련된 강화 학습 엔진을 업데이트할 수 있다. AI 자동 스케줄러는 완료되지 않은 제3 레벨 아이템들의 리스트에 기초하여 제3 레벨 아이템들의 시퀀스를 자동으로 업데이트할 수 있다. AI 자동 스케줄러는 업데이트된 훈련된 강화 학습 엔진을 이용하여 이러한 아이템들의 완료에 필요한 자원들을 자동으로 업데이트할 수 있다. AI 자동 스케줄러는 복수의 최적화된 제3 레벨 작업 패키지 후보를 생성할 수 있고, 제3 레벨 작업 패키지들의 스케줄에 대한 대안적인 옵션들을 제시할 수 있다. AI 자동 스케줄러는 업계 전문가들이 훈련된 강화 학습 엔 진에 의해 훈련될 수 있도록 제3 레벨 작업 패키지들의 스케줄링에 대한 통찰력을 제공할 수 있다. 본 발명의 다른 실시예에 따르면, 강화 학습을 사용하여 대규모 자본 프로젝트를 이행하기 위한 최적의 태스크 스케줄을 생성하기 위한 방법은 작업 패키지 내의 태스크들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스를 수신하는 단계, 작업 패키지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들 을 포함하도록 구성된 자원 데이터베이스를 수신하는 단계, 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스를 수신하는 단계, 최적의 태스크 스케줄에 의해 달 성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스를 수신하는 단계, 총 작업 데이터베이스, 자원 데이터베이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여 태스크 스케줄을 최적화하기 위한 훈련된 강화 학습 엔진을 제공하는 단계, 및 훈련된 강화 학습 엔진 을 사용하여 작업 패키지의 아이템들을 순서화하기 위한 최적의 태스크 스케줄을 생성하는 단계를 포함하며; 최 적의 태스크 스케줄은 하나 이상의 주요 목적을 최대화한다. 본 발명의 다른 실시예에 따르면, 새로운 태스크 스케줄들을 작성하도록 인공 지능 소프트웨어를 훈련하기 위한 방법은: 설치 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스, 설치 작업 패키 지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스, 설치 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터 베이스, 및 새로운 태스크 스케줄들에 의해 달성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케 줄링 목적 데이터베이스의 복수의 상이한 조합을 시뮬레이션함으로써 복수의 상이한 작업 프로젝트에 대한 복수 의 데이터 세트를 생성하는 단계, 및 복수의 데이터 세트 중 각각의 데이터 세트에 대해 하나 이상의 주요 목적 을 최대화하도록 강화 학습 엔진을 훈련하는 단계를 포함한다. 총 작업 데이터베이스는 수행될 복수의 태스크의 적어도 제1 리스트를 포함할 수 있다. 자원 데이터베이스는 수행될 복수의 태스크 중 각각의 태스크에 대한 자원 요구들의 제2 리스트 및 수행될 복수의 태스크의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함할 수 있다. 제약 데이터베이스는 수행될 복수의 태스크의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트, 수행될 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트, 및 수행될 복수의 태스크의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함할 수 있다. 복수의 상이한 작업 프로젝트는 수백 개의 프로젝트를 포함할 수 있다. 총 작업 데이터베이스, 자원 데이터베 이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스 내의 작업 패키지들의 총 수는 프로젝트들의 복잡성에 따라 약 10개에서 1,000개 이상까지 다양하다. 강화 학습 엔진은 인공 지능 총 작업 지속기간(total job duration) 서비스, 인공 지능 자원 요구 서비스, 인공 지능 태스크 종속성 서비스 및 인공 지능 자원 종속성 서비스를 제공하도록 구성될 수 있다. 서비스들은 클라 우드 기반 마이크로 서비스들로서 제공될 수 있다. 본 발명의 다른 실시예에 따르면, 새로운 태스크 스케줄들을 작성하도록 인공 지능 소프트웨어를 훈련하기 위한 시스템은: 신경망들을 포함하는 프로세서; 프로세서에 결합된 메모리; 프로세서에 결합된 스케줄링 훈련기를 포 함하고, 훈련 스케줄러는: 설치 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스; 설치 작업 패키지 내의 아이템들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스; 설치 작업 패키지 내의 아이템들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스; 및 새로운 태스크 스케줄들에 의해 달성되어야 하는 하나 이상의 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스의 복수의 상이한 조합을 시뮬레이션함으로써 복수의 상 이한 작업 프로젝트에 대한 복수의 데이터 세트를 생성하고; 복수의 데이터 세트 중 각각의 데이터 세트에 대해 하나 이상의 주요 목적을 최대화하도록 강화 학습 엔진을 훈련하도록 구성된다. 복수의 상이한 작업 프로젝트는 수백 개의 프로젝트를 포함할 수 있다. 총 작업 데이터베이스, 자원 데이터베 이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스 내의 작업 패키지들의 총 수는 프로젝트들의 복잡성에 따라 약 10개에서 1,000개 이상까지 다양할 수 있다. 강화 학습 엔진은 신경망들을 포함하는 신경망 아키텍처를 포함할 수 있다. 신경망은 하나의 입력 계층, 복수 의 뉴런을 갖는 하나 이상의 은닉 계층 및 출력 계층을 가질 수 있다. 가중치 분포(weight distribution)는 상 이한 표준 편차들(standard deviations)을 갖는 가우스 분포(Gaussian distribution)를 사용할 수 있다. 강화 학습 엔진은 심층 강화 학습 엔진일 수 있다. 심층 강화 학습 엔진은 보상 함수(reward function)에 기초 하여 시뮬레이션된 훈련 데이터로부터 학습할 수 있다. 하나 이상의 주요 목적은: 적어도, 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것; 자원 이용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및 고객 견적들을 충족시 키는 것을 우선시하는 것을 포함하는 목적들의 그룹으로부터 선택될 수 있다. 강화 학습 엔진은: 인공 지능 총 작업 지속기간 서비스; 인공 지능 자원 요구 서비스; 인공 지능 태스크 종속성 서비스; 및 인공 지능 자원 종속성 서비스를 제공하도록 구성될 수 있다. 서비스들은 클라우드 기반 마이크로 서비스들로서 제공될 수 있다. 본 발명의 다른 실시예에 따르면, 전자 디바이스를 사용하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성 하기 위한 시스템은: 컴퓨터 프로그램 명령어들을 저장하는 적어도 하나의 메모리에 결합된 적어도 하나의 프로 세서를 포함하고, 컴퓨터 프로그램 명령어들은 적어도 하나의 프로세서 상에서 실행될 때 시스템으로 하여금 컴 퓨터 프로세스들을 수행하게 하며, 컴퓨터 프로세스들은: 시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 기초하 여, 복수의 상이한 스케줄링 목적을 위해 훈련된 강화 학습 엔진을 제공하는 단계 - 각각의 스케줄링 목적은 상 이한 강화 학습 보상 함수를 가짐 -; 및 훈련된 강화 학습 엔진에 의해 복수의 상이한 스케줄링 목적 중에서 선 택된 스케줄링 목적 및 그에 대응하는 보상 함수에 기초하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성 하는 단계를 포함하고, 훈련된 강화 학습 엔진은 복수의 스케줄링 목적에 기초하여 타겟 작업 프로젝트에 대한 상이한 태스크 스케줄들을 생성할 수 있다. 타겟 작업 프로젝트는 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스, 작업 패 키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스, 작업 패키 지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스 및 최적의 태스크 스 케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스와 연관될 수 있다. 복수의 상이한 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것; 자원 이 용의 효율을 최대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및 고객 비용 견적들을 충 족시키는 것을 우선시하는 것을 포함할 수 있다. 강화 학습 엔진은 적어도 하나의 신경망을 포함할 수 있다. 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층 및 하나의 출력 계층을 포함할 수 있다. 최적의 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 시작일 및 종료일, 및 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함할 수 있다. 훈련된 강화 학습 엔진은 인공 지능 총 작업 지속기간 서비스, 인공 지능 자원 요구 서비스, 인공 지능 작업 패 키지 종속성 서비스 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성될 수 있다. 서비스들은 클라우드 기반 마이크로 서비스들로서 제공될 수 있다. 강화 학습 엔진은 훈련된 강화 학습 엔진에 의해 생성된 타겟 작업 프로젝트에 대한 태스크 스케줄에 관한 사용 자 피드백을 수신할 수 있다. 강화 학습 엔진은 사용자 피드백에 기초하여 적어도 하나의 보상 함수를 업데이트할 수 있다. 본 발명의 다른 실시예에 따르면, 전자 디바이스를 사용하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성 하기 위한 방법은: 시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하 는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 기초하여, 복수의 상이한 스케줄링 목적을 위해 훈련된 강화 학습 엔진을 제공하는 단계 - 각각의 스케줄링 목적은 상이한 강화 학습 보상 함수를 가짐 -; 및 훈련된 강화 학습 엔진에 의해 복수의 상이한 스케줄링 목적 중에서 선택된 스케줄링 목적 및 그에 대응하는 보상 함수에 기초하여 타겟 작업 프로젝트에 대한 태스크 스케줄을 생성하는 단계를 포함하고, 훈련된 강화 학 습 엔진은 복수의 스케줄링 목적에 기초하여 타겟 작업 프로젝트에 대한 상이한 태스크 스케줄들을 생성할 수 있다. 본 발명의 다른 실시예에 따르면, 전자 디바이스를 사용하여 복수의 작업 프로젝트에 대한 태스크 스케줄들을 생성하기 위한 시스템으로서, 복수의 작업 프로젝트는 주어진 공유 자원에 대한 액세스를 필요로 하고, 시스템 은 컴퓨터 프로그램 명령어들을 저장하는 적어도 하나의 메모리에 결합된 적어도 하나의 프로세서를 포함하며, 컴퓨터 프로그램 명령어들은 적어도 하나의 프로세서 상에서 실행될 때 시스템으로 하여금 컴퓨터 프로세스들을 수행하게 하고, 컴퓨터 프로세스들은: 시뮬레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적 어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 대해 훈련된 강화 학습 엔진을 제공하는 단계, 및 선택된 스케줄링 목적에 최적화된 적어도 하나의 태스크 스케줄을 갖는 복수의 태스 크 스케줄에 걸쳐 조정된 공유 자원의 가용성을 이용하여, 훈련된 강화 학습 엔진에 의해 복수의 작업 프로젝트 각각에 대한 태스크 스케줄을 생성하는 단계를 포함한다. 각각의 작업 프로젝트는 작업 패키지들을 나타내는 아이템들을 포함하도록 구성된 총 작업 데이터베이스, 작업 패키지들을 이행하는 데 필요한 자원들을 나타내는 아이템들을 포함하도록 구성된 자원 데이터베이스, 작업 패 키지들의 이행에 대한 제약들을 나타내는 아이템들을 포함하도록 구성된 제약 데이터베이스 및 최적의 태스크 스케줄에 의해 달성되어야 하는 주요 목적을 지정하도록 구성된 스케줄링 목적 데이터베이스와 연관될 수 있다. 태스크 스케줄은 수행될 작업 패키지들의 시퀀스, 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 시 작일 및 종료일, 및 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 스케줄 차트를 포함할 수 있다. 강화 학습 엔진은 인공 지능 총 작업 지속기간 서비스, 인공 지능 자원 요구 서비스, 인공 지능 작업 패키지 종 속성 서비스 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성될 수 있다. 서비스들은 클라우드 기반 마 이크로 서비스들로서 제공될 수 있다. 강화 학습 엔진은 적어도 하나의 태스크 스케줄에 관한 사용자 피드백을 수신할 수 있고, 사용자 피드백에 기초 하여 적어도 하나의 보상 함수를 업데이트할 수 있다. 본 발명의 다른 실시예에 따르면, 전자 디바이스를 사용하여 복수의 작업 프로젝트에 대한 태스크 스케줄을 생 성하기 위한 방법으로서, 복수의 작업 프로젝트는 주어진 공유 자원에 대한 액세스를 필요로 하고, 방법은 시뮬 레이션된 작업 프로젝트들 또는 실제 완료된 작업 프로젝트들 중 적어도 하나를 포함하는 복수의 상이한 작업 프로젝트를 나타내는 복수의 데이터 세트에 대해 훈련된 강화 학습 엔진을 제공하는 단계, 및 선택된 스케줄링 목적에 최적화된 적어도 하나의 태스크 스케줄을 갖는 복수의 태스크 스케줄에 걸쳐 조정된 공유 자원의 가용성 을 이용하여, 훈련된 강화 학습 엔진에 의해 복수의 작업 프로젝트 각각에 대한 태스크 스케줄을 생성하는 단계 를 포함한다. 총 작업 데이터베이스는 수행될 복수의 작업 패키지의 적어도 제1 리스트를 포함할 수 있다. 자원 데이터베이 스는 수행될 복수의 작업 패키지 중 각각의 작업 패키지에 대한 자원 요구들의 제2 리스트; 및 수행될 복수의 작업 패키지의 각각의 자원 요구에 대한 시간 요구들의 제3 리스트를 포함할 수 있다. 제약 데이터베이스는 수 행될 복수의 작업 패키지의 각각의 자원 요구에 대한 자원 유형들의 제4 리스트, 수행될 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형의 수량의 제5 리스트, 및 수행될 복수의 작업 패키지의 각각의 자원 요구에 대한 각각의 자원 유형에 대한 시간 가용성의 제6 리스트를 포함할 수 있다. 스케줄링 목적은 평균 슬로우 다운을 최소화하는 것; 평균 완료 시간을 최소화하는 것; 자원 이용의 효율을 최 대화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 또는 고객 비용 견적들을 충족시키는 것을 우선시하는 것 중 하나를 포함할 수 있다. 강화 학습 엔진은 적어도 하나의 신경망을 포함할 수 있다. 적어도 하나의 신경망은 하나의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은닉 계층 및 하나의 출력 계층을 포함할 수 있다. 강화 학습 엔진은 인공 지능 총작업 지속기간 서비스, 인공 지능 자원 요구 서비스, 인공 지능 작업 패키지 종속성 서비스 및 인공 지능 자원 종속성 서비스를 제공하도록 더 구성된다. 서비스들은 클라우드 기반 마이크로 서비스들로서 제공될 수 있다. 강화 학습 엔진은 적어도 하나의 태스크 스케줄에 관한 사용자 피드백을 수신할 수 있다. 강화 학습 엔진은 사 용자 피드백에 기초하여 적어도 하나의 보상 함수를 업데이트할 수 있다."}
{"patent_id": "10-2024-7011941", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "예시적인 실시예들의 설명 발전소, 고층 주상복합 건물, 대규모 산업 및/또는 토목 건축 등의 구축과 같은 대규모 자본 프로젝트들은 전문 설계 소프트웨어 제품들을 이용하여 프로젝트를 매우 상세하게 설계하는 것을 포함한다. 전문 설계 소프트웨어 제품들은 작업/계획/프로젝트의 단계들(phases), 산출물들(deliverables) 및 작업 패키지들로의 계층적이고 점 진적인 분해인 작업 분류 구조(WBS: Work Breakdown Structure)를 생성한다. 이는 목적을 달성하는 데 필요한 노력의 세분화(subdivision)를 도시하는 트리 구조(tree structure)이다. WBS는 계약의 전반적인 계획 및 제어 의 자연스러운 개발을 위한 공통 프레임워크이며, 작업을 상세 스케줄이 개발될 수 있는 정의 가능한 증분들 (definable increments)로 분할하기 위한 기초이다. 이러한 상세 스케줄은 대규모 자본 프로젝트와 관련된 다양한 입력들을 수용해야 한다. 이러한 입력들은 완료 되어야 하는 모든 태스크들/아이템들은 물론, 필요한 모든 자원들의 전체 리스트를 포함한다. 상세 스케줄은 주어진 자원의 이용 가능한 양은 물론, 자원들이 필요하게 되는 지속기간들도 수신해야 한다. 상세 스케줄은 또한 그러한 자원들에 대한 제약들, 예컨대, 이용 가능한 날짜들 및 지속기간들을 수용해야 한다. 상세 스케줄 은 또한 평균 슬로우 다운 최소화, 평균 완료 시간 최소화 등과 같이 최적화될 특정 목적들을 수용해야 한다. 본 명세서에서는 전술한 것들과 같은 입력들에 기초하여 상세 스케줄들을 생성하는 AI 자동 스케줄러의 실시예 들이 개시된다. AI 자동 스케줄러(AI Auto-Scheduler) 도 1은 결합된 3 레벨 작업 분류 구조(WBS)의 개략적인 표현을 제시한다. 제1 레벨인 레벨 1은 계획될 총 작업을 나타낸다. 즉, 레벨 1은 완료되어야 하는 총 작업을 설명한다. 예를 들어, 도 1에 도시된 바와 같이, 레벨 1 작업(예를 들어, 프로젝트)은 플랜트 내에 유닛을 구축하는 것이다. 제2 레벨인 레벨 2는 총 작업의 하나 이상의 서브시스템으로의 논리적 분류를 나타낸다. 도 1은 2개의 서브시 스템을 도시한다. 이러한 레벨 2 서브시스템들은 플랜트의 2개의 별개의 부분을 나타낸다. 제1 서브시스템은 유황 회수 영역(Sulphur Recover Area, 115) 노드이고, 제2 서브시스템은 정제 영역(Refining Area, 120) 노드 이다. 서브시스템 노드들 각각은 3개의 작업 패키지를 갖는다. 작업 패키지들은 레벨 3을 구성한다. 도 1에서, 레벨 2 유황 회수 영역은 레벨 3 작업 패키지들을 갖는다. 이들은 장비 시스템 노드, 전 기 시스템 노드 및 파이핑 시스템 노드이다. 각각의 레벨 3 작업 패키지는 식별된 특정 태스크들(예 컨대, 노드들)을 가지며, 각각의 태스크/노드는 필요한 자원들 및 자원이 요구될 지속기간을 지정한다. 예를 들어, 작업 패키지 장비 시스템은 펌프 설치, 설비 설치(Install Fittings, 135) 및 기초 시스템 설 치(Install Foundation Systems, 140)의 태스크들/노드들을 갖는다. 제3 레벨인 레벨 3은 완료될 지상의 실제 작업을 나타낸다. 레벨 3은 레벨 1에 나열된 작업을 완료하기 위해 궁극적으로 완료되어야 하는 모든 컴포넌트들 및 활동들을 집계한다. 레벨 2의 서브시스템들 각각은 서브시스 템을 완료하기 위해 완료되어야 하는 다수의 작업 패키지를 가질 것이다. 레벨 3은 레벨 1에 나열된 작업을 완 료하기 위해 궁극적으로 완료되어야 하는 모든 컴포넌트들 및 활동들을 집계한다. 레벨 3은 작업 패키지에 들 어갈 모든 부품들에 대한 상세들을 갖는 계획을 가질 것을 요구한다. 예를 들어, 각각의 작업 패키지는 작업 패키지에 기여하는 특정 노드들을 가질 것이다. 예를 들어, 도 1에 나열된 바와 같은 노드들(130, 135, 140) 각각은 태스크들을 수행하는 데 필요한 자원들은 물론, 각각의 작업을 완료하기 위해 자원이 필요하게 되는 시간에 대한 계획된 지속기간을 가질 것이다. 예를 들어, 도 1에 도시된 바와 같이, 펌프 설치는 2일 동안 4개의 크레인 그리고 4일 동안 2개의 크롤 크레인 (crawl crane)을 필요로 한다. 각각의 태스크는 완료되어야 할 미리 결정된 시간 슬롯을 가지며, 태스크를 완 료하는 데 필요하게 되는 자원들을 가질 것이다. 각각의 노드에 대한 특정 자원들 각각은 시간 슬롯 내의 특정 지속기간 동안 필요할 것이다. 도 1에 도시된 바와 같이, 플랜트의 유닛을 구축하는 레벨 1 작업을 성공적으로 완료하는 것은 작업 패키 지들 내의 모든 태스크들을 계획하고 스케줄링할 것을 요구한다. 상세한 계획 및 스케줄링은 레벨 3 계층구조 를 생성하는 것, 컴포넌트들 및 이러한 컴포넌트들에 대한 활동들을 할당하고 이러한 활동들에 대한 시간 프레 임들을 할당하는 것, 이러한 활동들에 대한 자원들을 할당하는 것, 및 작업 길이들 및 자원 요구들에 대한 이러 한 레벨 3 노드들 모두를 집계하는 것을 포함한다. 동일한 레벨 2 노드 내의 레벨 3 노드들 간의 순서화 (sequencing)도 정의될 수 있다. 즉, 스케줄은 특정 레벨 3 노드 내의 미리 결정된 활동 시퀀스들을 레벨 2 노 드 아래에 있는 다른 레벨 3 노드들 내의 다른 활동들과 통합할 것이다. 도 2a는 AI 자동 스케줄러의 전체 설계의 일 실시예를 개략적으로 도시한다. AI 자동 스케줄러 내로의 입 력들은 설치 작업 패키지(Installation Work Package, IWP) 데이터, 제약/자원 데이터 및 스케줄링 목적 데이터를 포함한다. 입력들(210, 220, 230)은 입력들(210, 220, 230)에 기초하여 최적화된 상세한 태스크 스케줄을 생성하도록 심층 강화 학습에 의해 훈련된, 훈련된 강화 엔진에 제공된다. AI 자동 스케 줄러로부터의 출력들은 입력들(210, 220, 230)에 기초하는 최적의 작업 패키지(예를 들어, IWP) 스케줄을 포함한다. 최적의 IWP 스케줄은 수행될 태스크들의 상세한 시퀀스, 태스크 시작일들 및 종료일들, 스케줄 차트를 포함한다. IWP 데이터는 레벨 1 노드에서 식별된 프로젝트를 완료하기 위해 수행될 모든 작업을 나타내는 레벨 2 및 레벨 3의 모든 아이템들/노드들을 포함하는 총 작업 데이터베이스를 포함한다. 이 데이터베이스는 매우 복잡한건물 프로젝트들에서의 각각의 아이템/태스크를 열거하는 매우 큰 데이터베이스일 수 있다. IWP 데이터는 또한 작업 패키지 내의 아이템들을 이행하는 데 필요한 모든 자원들, 및 각각의 자원에 필요 하게 되는 지속기간을 포함하는 자원 데이터베이스를 포함한다. 예를 들어, 도 1을 참조하면, 노드(펌프 설치)는 2일 동안 4개의 크레인 그리고 4일 동안 2개의 크롤 크레인을 필요로 한다. 훈련된 강화 학습 엔진에 제공되는 IWP 데이터는 레벨 1 노드에서 식별된 전체 프로젝트에 대한 모든 레벨 3 노드들에 대해 나 열된 모든 자원들을 포함할 것이다. 제약 데이터는 자원 데이터베이스에 나열된 자원들에 대한 모든 제약들을 포함하는 제약 데이터베이스를 포함한다. 제약의 한 가지 예는 특정 자원 유형이 필요하다는 것이다. 예를 들어, 레벨 3 노드의 완료는 적어도 4개의 크레인, 2개의 크롤 크레인 및 2개의 지게차를 필요로 할 것이다. 제약의 다른 예는 이용 가능한 각각의 자원 유형의 수이다. 예를 들어, 특정 레벨 1 프로젝트에 이용 가능한 고정된 수의 크레인만이 있을 수 있다. 제약의 다른 예는 각각의 자원의 시간 가용성이다. 예를 들어, 각각의 레벨 3 노드에 대해, 자원, 예컨 대 크레인은 자원이 필요한 상이한 지속기간들을 가질 수 있다. 따라서, 각각의 크레인은 제한된 양의 시간 동 안만 이용 가능하도록 제한된다. 다른 유형의 제약은 레벨 2 및 레벨 3의 태스크들/노드들의 순서화와 관련되 며 제약 데이터베이스에 포함된다. 예시적인 예가 레벨 3 노드들(130, 135)에 의해 제공된다. 펌프는 노드 에 설치되고 설비들은 노드에 설치된다. 노드와 노드 사이의 순서화 관계는 노드가 노드보다 먼저 발생하는 것이다, 예컨대, 130 135. 스케줄링 목적 데이터는 최적의 스케줄에 의해 달성되어야 할 주요 목적을 포함하는 스케줄링 목적 데이터 베이스를 포함한다. 예를 들어, 상세 스케줄의 주요 목적은 평균 슬로우 다운을 최소화하는 것일 수 있다. 즉, 고객 및/또는 프로젝트 관리자는 슬로우 다운 없이 프로젝트를 완료하기 위해 계속 진행되도록 스케줄을 최 적화하기를 원할 수 있다. 다른 예로서, 최적의 스케줄은 자원 사용의 효율을 최대화하는 것일 수 있다. 다른 예들은 평균 완료 시간을 최소화하는 것; 원하는 고객 날짜들을 충족시키는 것을 우선시하는 것; 및 고객 비용 견적들을 충족시키는 것을 우선시하는 것을 포함한다. 훈련된 강화 엔진은 데이터 입력들(210, 220, 230)을 수신하고, 어떤 제약이 얼마나 많이 위반되는지 대비 얼마나 많은 제약이 최적화되는지를 체계화(codify)하는 보상 함수에 기초하여 스케줄 대안들을 생성한다. 이 것은 제약 데이터가 위와 같이 주어지는 시뮬레이션 환경에 의해 설정될 수 있고, 훈련된 강화 엔진 내의 에이전트는 그 후 먼저 실현 가능한 그리고 -제2 또는 그 이상의 단계들에서- 심지어 스케줄에 대한 최적의 솔루션을 향해 행동 공간(action space)을 탐색(explore)할 수 있다. 에이전트는 데이터 입력들(210, 220, 230)에서 어떤 부품들을 선택할지를 결정하고, 시작일 및 종료일을 스케줄링하며, 따라서 많은 IWP의 시퀀 스를 반복적으로 생성한다. 강화 학습은 가능한 행동들을 탐색하고 보상의 형태로 각각의 행동에 대한 피드백을 수신하고, 이를 통해 시스 템의 기본 논리와 역학을 암시적으로 학습하여 궁극적으로 고전적인 접근법들을 능가하는 방식으로 작동한다. 에이전트는 단일 데이터 입력을 선택하고 그것을 가능한 스케줄들로 분류(sort)한다. 각각의 개별 행동 후 또 는 여러 개별 행동 후, 예를 들어 개별 IWP가 \"완료\"될 때마다(즉, 동일한 IWP에 더 이상 컴포넌트가 추가되지 않고 IWP가 스케줄링할 준비가 될 때), 이것은 보상을 제공하는 시뮬레이션으로 전송된다. 보상은 실제 스칼라 이지만, 여러 양태를 고려할 수 있다. 시뮬레이션 엔진은 에이전트에 의해 출력에 대해 그것이 실현 가능 한지, 예를 들어 임의의 물리적 제약이 위반되는지를 체크할 수 있다. 또한, 시뮬레이션 환경은 에이전트에 상 태를 출력(put out)한다. 이 상태는 나머지 컴포넌트, 자원, 제약 등을 정의한다. 이어서, 에이전트는 업데이 트된 보상 및 상태에 기초하여 새로운 행동을 선택한다. 작업 패키지에 대한 스케줄 최적화의 일례는 완료 시간을 최소화하는 것, 예컨대 제1 작업의 시작 시간으로부터 모든 작업을 완료하는 데 걸리는 시간을 최소화하는 것이다. 각각의 시간 단계에 대한 보상 = -|J|이고, 여기 서 J는 각각의 시간 단계에 대한 시스템 내의 완료되지 않은 작업들의 수이다. 총 보상은 모든 시간 단계들에 대한 이러한 모든 이러한 개별 보상들의 합산으로 계산된다. 도 2b는 \"완료 시간 최소화\"의 스케줄링 목적을 최적화하기 위한 매우 단순화된 프로세스의 일 실시예를 개략적으로 예시한다. 즉, 스케줄링 목적들 내의 주요 목적은 \"완료 시간 최소화\"이다. 도 2b에 예시된 예에 서는, 3개의 작업 패키지 WP1, WP2 및 WP3이 있다. 이 예에서는 크레인 1 및 크레인 2라는 2개의 크레인만이 있다. 2개의 자원(크레인)만이 있으므로, 함께 스케줄링될 수 있는 2개의 작업 패키지만이 있을 수 있다. 이 예제에서, 완료 시간 최소화에 대한 보상은 = -|J|로서 정의되며, 여기서 J는 각 각의 시간 단계에 대한 시스템 내의 완료되지 않은 작업들의 수이다. 3개의 예시적인 가능한 조합은 다음의242, 244 또는 246으로 표시될 수 있으며, 각각의 세트에 대한 총 일수 보상(days reward)은 각각 세트 242에 대해 9일, 세트 244에 대해 7일, 및 세트 246에 대해 8일이다. 이러한 단순화된 예에서, \"완료 시간 최소화\"의 주요 목적을 최적화하는 세트는 총 완료 시간이 7일인 세트이다. 즉, 완료 시간을 최소화하는 것이 목적 이기 때문에, 212 및 214를 함께 스케줄링하고, 216을 나중에 스케줄링함으로써 최상의 스케줄이 달성된다. 이 는 도 2b에 도시된 바와 같이 244의 총 완료 시간을 4+3=7로서 제공할 것이다. 이러한 예시적인 배열은 예시를 위한 것이며, 본 명세서의 임의의 다른 예들과 반드시 관련되는 것은 아니다. 작업 패키지에 대한 스케줄을 최적화하는 다른 예는 작업의 평균 슬로우 다운을 최소화하는 것, 예컨대 정규화 된 작업 완료 시간을 최소화하는 것이다. 이는 Cj/Dj를 최소화하는 것으로 표시되며, 여기서 Cj는 작업 패키지 j의 완료 시간이고 Dj는 작업 패키지 j의 계획된 지속기간이다. 각각의 시간 단계에 대한 보상 = SUM(-1/Dj)이 고, 여기서 Dj는 작업 패키지의 계획된 지속 기간으로서, 작업 스케줄 및 대기 중인 작업들 각각에 대해 수행되 는 합계이다. 총 보상은 모든 시간 단계들에 대한 이러한 모든 개별 보상들의 합산으로 계산된다. 모든 시간 에 대한 모든 페널티들이 합산될 때, 정확한 작업 지속기간이 제공된다. 이 보상 신호는 목적과 정확히 일치하 도록 설계된다. 시간 경과에 따른 누적 보상은 작업 슬로우 다운들의 합(음수)과 일치하므로, 누적 보상 (cumulative reward)을 최대화하는 것은 평균 슬로우 다운을 최소화하는 것을 모방한다. 도 2c는 \"평균 슬로우 다운 최소화(Minimize Average Slowdown)\"의 스케줄링 목적을 최적화하기 위한 단 순화된 프로세스의 일 실시예를 개략적으로 예시한다. 도 2b에 대해 전술한 바와 같이, 3개의 작업 패키지 WP1, WP2, WP3과 2개의 크레인(222, 224)이 있다. 2개의 자원(크레인)만 있으므로 함께 스케 줄링될 수 있는 2개의 작업 패키지만 있을 수 있다. 이 예에서, 평균 슬로우 다운에 대한 보상은 -1/(완료할 시간)으로 정의된다. 3개의 예시적인 가능한 조합은 다음 세트들 252, 254 또는 256으로 표시될 수 있으며, 각 각의 세트에 대한 평균 슬로우 다운 보상은 각각 세트 252에 대해 -0.64, 세트 254에 대해 -0.70, 세트 256에 대해 -0.67이다. 이러한 단순화된 예에서, \"평균 슬로우 다운 최소화\"의 주요 목적을 최적화하는 세트는 총 보 상이 -0.70인 세트 254이다. 이 예시적인 배열은 예시를 위한 것이며, 본 명세서의 임의의 다른 예들과 반드시 관련되는 것은 아니다. 작업 패키지에 대한 스케줄을 최적화하는 다른 예는 작업의 자원 이용을 최대화하는 것, 예컨대, 모든 자원들이 가능한 한 많은 시간 동안 효과적으로 이용되도록 보장하는 것이다. 이는 각각의 시간 단계에 대한 보상 = SUM(Rp/Ra)를 정의하여 표시되며, 여기서 Rp는 각각의 자원에 대한 계획된 시간이고 Ra는 각각의 자원에 대한 이용 가능한 시간이다. 이는 각각의 시간 단계에 대한 모든 자원들에 대해 합산되어야 한다. 총 보상은 모든 시간 단계들에 대한 이러한 모든 개별 보상들을 합산하여 계산된다. 도 2d는 \"자원 이용 최대화\"의 스케줄링 목적을 최적화하기 위한 단순화된 프로세스의 일 실시예를 개략적으로 예시한다. 도 2b에 대해 전술한 바와 같이, 3개의 작업 패키지 WP1, WP2, WP3과 2개의 크레인 (222, 224)이 있다. 2개의 자원(크레인)만 있으므로, 함께 스케줄링될 수 있는 2개의 작업 패키지만 있을 수 있다. 이 예에서 자원 이용 최대화에 대한 보상은 스케줄 내의 낭비 일수(waste days)로 정의된다. 3개의 예 시적인 가능한 조합은 다음 세트들 262, 264 또는 266으로 표시될 수 있으며, 각각의 세트에 대한 총 낭비 일수 보상은 각각 세트 262에 대해 4 낭비일, 세트 264에 대해 6 낭비일, 세트 266에 대해 2 낭비일이다. 이 단순화 된 예에서, \"자원 이용 최대화\"의 주요 목적을 최적화하는 세트는 총 낭비일이 단지 2일인 세트 266이다. 이 예시적인 배열은 예시를 위한 것이며, 본 명세서의 임의의 다른 예들과 반드시 관련되는 것은 아니다. 도 3은 최적의 작업 패키지 스케줄 내의 레벨 3 노드의 일부를 개략적으로 예시한다. 도 3에 예시된 레벨 3 노드 작업 패키지는 2개의 스케줄링 리스트를 갖는다. 제1 리스트는 작업 길이(job length) 이며, 도 3에 도시된 예에서 3일과 같다. 제2 리스트는 자원 요구들의 리스트를 갖는다. 도 4는 상세 스케줄 차트(detailed schedule chart, 400)의 일부를 예시한다. 상세 스케줄 차트는 설치 작업 패키지(IWP) 번호들에 따라 조직화된다. 각각의 IP 번호에 대하여, 차트는 계획된 시작일 , 계획된 종료일, 계획된 인시(man hours), 크루 크기(crew size), 및 다른 IWP 번호들의 시작일 및 종료일과 비교하여 각각의 IWP 번호에 대한 계획된 시작일 및 계획된 종료일을 나타 내기 위한 달력 내의 라인의 그래픽 표현을 나타내는 라인 차트를 나열한다. 특정 시작일 및 종료일 에 추가하여, 상세 스케줄 차트는 다양한 태스크들의 실행의 시퀀스를 나타낸다. 실시예들에서, 차트는 레벨 1 및 레벨 2 노드들을 포함하는 전체 스케줄을 나타내도록 덜 상세하게 제시될 수 있다. 실시예들에서, 차트는 완료가 예정되어 있는 최소 및 최단 지속기간 아이템들을 포함하여 많은 세부사항과 함께 제시될 수 있 다.상세 스케줄 차트는 최적의 작업 패키지 스케줄을 그래픽 포맷(예를 들어, 간트 뷰(Gantt view)/차트)으로 제시하며, 이는 모든 태스크들의 리스트 및 수행될 태스크들의 시퀀스를 포함한다. 레벨 2 노 드들 및 레벨 3 노드들의 다양한 상호 종속성들(interdependencies)이 간트 차트 상에 예시되고 매핑된다. 상 세 스케줄 차트는 적어도, 수행될 작업 패키지들의 제1 리스트의 시퀀스, 각각의 작업 패키지에 대한 시작 일 및 종료일, 각각의 작업 패키지에 대한 스케줄 차트, 수행될 작업 패키지들의 제1 리스트에 대한 시작일 및 종료일, 및 수행될 작업 패키지들의 제1 리스트에 대한 스케줄 차트를 포함한다. 실시예들에서, AI 자동 스케줄러는 제1 레벨 데이터베이스, 제2 레벨 데이터베이스, 제약 데이터베이스 및 스케줄링 목적 데이터베이스로부터의 입력들에 기초하여, 훈련된 강화 학습 엔진을 사용하 여, 계층적 작업 분류 구조 내에서 달성되어야 할 주요 목적을 최적화하는 제3 레벨 작업 패키지에 대한 최적화 된 스케줄을 자동으로 생성한다. AI 자동 스케줄러는 사용자 피드백 및 산업 피드백을 제공함으로써 추가로 훈련될 수 있다. 예를 들어, AI 자동 스케줄러는 작업 패키지 내의 순서화된 제3 레벨 아이템들의 실행에 관한 피드백을 수신하고, 미 완료된 제3 레벨 아이템들의 시퀀스 및 이러한 아이템들의 완료에 필요한 자원들을 자동으로 업데이트할 수 있 다. 더욱이, AI 자동 스케줄러는 스케줄링 모범 사례들에 관한 업계 전문가의 피드백을 수신할 수 있고, 훈련된 강화 학습 엔진을 업데이트한다. AI 자동 스케줄러는 업데이트된 훈련된 강화 학습 엔진에 기초하 여 미완료된 제3 레벨 아이템들의 시퀀스 및 이러한 아이템들의 완료에 필요한 자원들을 자동으로 업데이트할 수 있다. 실시예들에서, AI 자동 스케줄러는 복수의 최적화된 제3 레벨 작업 패키지 후보를 생성하고, 제3 레벨 작 업 패키지들의 스케줄에 대한 대안적인 옵션들을 제시한다. 실시예들에서, AI 자동 스케줄러는 제3 레벨 작업 패키지들의 스케줄링에 대한 통찰력을 제공하여, 업계 전문가들이 훈련된 강화 학습 엔진에 의해 훈련될 수 있다. 실시예들에서, AI 자동 스케줄러는 도 5에 도시된 바와 같은 계획 및 스케줄링 시스템을 제공할 수 있다. 계획 및 스케줄링 시스템은 훈련된 강화 학습 엔진에서 이용되는 바와 같은 인공 지능(AI)을 사용하여 다수의 서비스를 제공할 수 있다. 예를 들어, 계획 및 스케줄링 시스템은 AI 작업 길이 서비스 ; AI 자원 요구 서비스; AI 태스크 종속성 서비스; 및 AI 자원 종속성 서비스를 제공할 수 있다. 전술한 서비스들(510, 520, 530, 540)은 클라우드 기반 마이크로 서비스들로서 제공될 수 있다. 실시예들에서, AI 서비스들과 AI 자동 스케줄러의 조합은 자원 요구들, 시간 프레임들, 주어진 작업 패키지에 대한 자원들 사이의 종속성들, 및 제3 레벨 작업 패키지들 사이의 종속성들을 자동으로 결정하고 할당 한다. AI 자동 스케줄러는 주어진 제2 레벨 서브시스템과 관련된 제3 레벨 아이템들을 자동으로 순서화하 고, 다수의 작업 패키지에 걸친 자원들의 가용성을 자동으로 조정하여, 작업 패키지 내의 순서화된 제3 레벨 아 이템들에 필요할 때 주어진 자원이 이용 가능하게 될 것이다. 실시예들에서, 본 개시의 AI 자동 스케줄러들은 2개 이상의 프로젝트를 스케줄링하기 위한 최적화된 상세한 태 스크 스케줄들을 제공할 수 있다. 도 6은 4개의 프로젝트를 스케줄링하기 위한 AI 자동 스케줄러의 전체 설계의 일 실시예를 개략적으로 도시한다. 이것은 2개 이상의 프로젝트를 스케줄링하는 비제한적인 예이며, 본 명세서에 개시된 시스템들, 방법들 또는 스케줄러들을 사용하여 스케줄링될 수 있는 프로젝트들의 수를 제한하 는 것으로 간주되어서는 안 된다. 도 6에 도시된 바와 같이, 훈련된 강화 엔진은 프로젝트 1, 프로젝트 2, 프로젝트 3 및 프 로젝트 4를 포함하는 다양한 소스들로부터 입력들을 수신한다. 프로젝트들은 서로 유사할 수 있거나 유사 하지 않을 수 있다. 프로젝트들은 공장, 병원, 창고, 조선소 등의 구축을 포함할 수 있다. 4개의 프로젝트는 자원, 인력, 시간 요구 등의 다양한 요구를 가질 수 있다. 레벨 1 노드들은 도 6에 도시된 프로젝트들(610, 615, 620, 625) 각각에 의해 설명된다. 이러한 레벨 1 노드들 각각은 그들의 서브시스템들을 포함하는 적어도 하나의 레벨 2 노드를 갖는다. 각각의 레벨 2 노드는 적어도 하나의 레벨 3 작업 패키지를 갖는다. 전체 WBS에 의해 설명되는 작업 패키지들의 모음은 AI 자동 스케줄러 에 의해 스케줄링될 모든 아이템들/태스크들을 정의한다. 각각의 프로젝트의 작업 패키지에 정의된 아이 템들/태스크들 각각은 훈련된 강화 엔진에 데이터베이스 내의 데이터 세트로서 제공된다. 프로젝트들 각각에 대한 자원들 및 제약들은 데이터베이스 내의 데이터의 세트로서 훈련된 강화 엔진(65 0)에 데이터베이스들로서 제공된다. 각각의 프로젝트에 대한 스케줄링 목적들뿐만 아니라 전체 4-프로젝 트 작업(4-project job)의 스케줄링 목적들은 훈련된 강화 엔진에 데이터베이스들로서 제공된다. AI 자동 스케줄러로부터의 출력들은 입력들(610, 615, 620, 625, 630, 640)에 기초하는 최종적인 최적의 작업 패키지 스케줄을 포함한다. 최종적인 최적의 작업 패키지 스케줄은 수행될 태스크들의 상세한 시퀀스, 태스크 시작일 및 종료일, 및 스케줄 차트를 포함한다. 훈련된 강화 엔진은 전체 4-프로젝트 작 업 모두에 대한 작업 패키지들을 포함하는 상세한 최종 스케줄을 생성한다. 강화 엔진의 훈련(Training a Reinforcement Engine) 강화 엔진을 통합한 AI 자동 스케줄러는 전문 스케줄러보다 더 능숙하게 작업들을 스케줄링하도록 심층 강화 학 습을 통해 훈련될 수 있다. AI 자동 스케줄러 내의 강화 엔진은 기계 학습(ML)과 강화 학습(RL) 및 심층 학습 을 결합하여 훈련된다. RL은 시행착오를 통해 결정을 내리기 위해 계산 에이전트(computational agent)를 통합 하여 학습 프로세스를 시작한다. 이 조합은 소프트웨어 시스템들이 명시적으로 프로그래밍되지 않고도 경험을 통해 스스로 학습하고 개선할 수 있게 한다. 대신, 솔루션 자체를 프로그래밍하는 것이 아니라, 해결해야 할 문제를 모델링하고, 특정 유형의 입력들에 기초하여 특정 유형의 출력들을 생성하는 방법을 학습하기 위해 \"훈 련 데이터\"에 기초하여 주어진 태스크를 수행하도록 심층 강화 모델을 훈련한다. 따라서, ML은 많은 실행 가능 한 솔루션을 가질 수 있는 해결하기 어려운 문제들에 유용하다. ML 솔루션들은 AI로 인해 예상하지 못한 거동 을 나타낼 수 있으며, 시간이 지남에 따라 누적된 추가 훈련 데이터에 기초하여 시간이 지남에 따라 개선될 수 있다. 심층 RL은 심층 학습을 솔루션에 통합하여 에이전트들이 상태 공간(state space)의 수동 엔지니어링 없이 구조 화되지 않은 입력(unstructured input)으로부터 결정을 내릴 수 있게 한다. 이러한 기술은 심층 RL 알고리즘들 이 매우 많은 양의 데이터를 취한 다음 목적을 최적화하기 위해 수행할 행동들을 결정할 수 있게 한다. 이를 통해, AI 자동 스케줄러는 동적으로 학습하고, 지속적인 피드백을 통해 더 높은 정확도를 얻을 수 있다. 처음 에 에이전트는 아무것도 모르고, 상이한 변수들을 사용하여 시행착오를 통해 학습하며, 반복해서 개선된다. AI 자동 스케줄러는 실험을 계속하기 때문에 더 나은 결정을 내리는 방법을 학습하도록 코칭될 수 있으며, 인간이 처리하는 데 몇 년이 걸리는 것을 몇 시간으로 압축한다. 대규모 자본 프로젝트들의 AI 자동 스케줄링의 경우, 방대한 조합 검색 공간(combinatorial search space)이 있 다. 각각의 단계에서 개별 컴포넌트(예컨대, 자원, 제약 등)를 선택하고, IWP에 할당한 다음 모든 컴포넌트에 대해 이를 수행하는 것은 거의 끝없는 복잡성을 갖는 방대한 조합 태스크(combinatorial task)이다. 최적화할 명확한 태스크들, 제약들 및 목적들이 있다. 이는 비용 최소화, 평균 슬로우 다운 최소화, 자원 효율 최대화, 다운타임 최소화 등 그리고 제약 위반 여부일 수 있다. 이는 합에 모두 추가(선형 또는 가중)된 다음 공동으로 최적화될 것이다. 더욱이, 이러한 방식으로 동적 제약이 내장될 수 있으며, 제약 위반은 상이한 행동들에 걸쳐 상이하게 페널티를 받는다. 이용 가능한 과거 데이터가 있을 수 있으며, 데이터 시뮬레이션들도 가능하다. 보 다 구체적으로, 과거 설계들 및/또는 시뮬레이션된 설계들을 사용하여 초기에 강화 접근법(reinforcement approach)을 훈련할 수 있다. 제1 훈련 단계에서, 신경망을 과거 또는 시뮬레이션된 문제들을 사용하여 훈련할 수 있는데, 즉 강화 설정(reinforcement setup)을 진행할 때 무작위 초기화보다 더 나은 시작점을 갖도록 지도 된 접근법(supervised approach)에 기초하여 망(network)을 훈련할 수 있다. 한 가지 중요한 선택은 적절한 보 상 함수를 선택하는 것이다. RL은 명확한 목적들은 물론, 명확한 \"게임 오버(game over)\" 행동들이 있는 경우 에 잘 작동한다. 자동 스케줄링 최적화의 경우, 적절한 목적들은 비용, 노동, 다운타임 등을 최소화하는 것도 포함할 수 있다. 또한, \"게임 오버(game over)\" 상태는 행동이 물리적 제약을 위반하는 즉시 도달될 것이다. AI 자동 스케줄러에 통합하기 위한 AI 강화 학습 엔진의 훈련은 4 단계: 훈련 프로세스(training process); 추 론 프로세스(inference process); 점진적인 개선 프로세스(incremental improvement process); 및 배치 (deployment)를 통해 진행된다. 도 7은 스케줄러 훈련 마이크로 서비스를 위한 데이터 파일을 준비하는 훈련 프로세스를 위한 훈련 데이터 작업흐름을 개략적으로 나타낸다. 훈련 프로세스는 주어진 목적을 위한 강화 학습을 래핑(wrapping)하기 위해 파이톤(Python)으로 작성된 매크로 서비스로 수행된다. 강화 엔진은 상이한 프로젝트들 및 작업 패키지들, 자원 요구들, 타임라인들, 이용 가능한 자원들/제약들 등의 상이한 조합들에 대해 데이터 시뮬레이션 서비스에 의해 생성된 많은 양의 데이터를 사용하여 훈련된다. 예를 들어, 데이터는 다양한 크기들의 수 백 개에 가까운 프로젝트에 대해 생성될 수 있으며, 각각의 프로젝트는 다양한 요구들을 갖는 산업 유사성 데이 터를 생성하기 위해 상이한 컴포넌트들, 활동들, 자원 요구들, 장비, 크레인 등의 이용 가능한 제약들의 수백내지 수천 개에 이르는 다양한 작업 패키지들로 구성된다. 데이터 시뮬레이션 서비스에 의해 생성된 데이 터는 또한 실제 계획 및 건설을 수행하면서 산업에서 볼 수 있는 다양한 가변 인자들(variable factors)을 커버 하기 위해 계절, 설치의 복잡성 및 밀도, 설치의 높이 등의 다양한 도메인 인자들(domain factors)을 포함한다. 데이터 시뮬레이션 서비스로부터의 데이터는 경로 1a를 따라 데이터베이스에 제공될 수 있거나, 경로 1b를 따라 훈련을 위해 JSON 파일로 직접 포맷(format)될 수 있다. 경로 1a를 따라 데이터베이스에 제공되는 데이터는 작업 패키지 데이터베이스, 제약 데이터베이스, 작업 패키지의 타임라인 데이터베이스, 종속 성 데이터베이스, 및 작업 패키지의 자원 요구 데이터베이스를 포함한다. 이어서, 데이터베이스로부터의 이러한 다양한 데이터베이스들은 경로 2를 따라 훈련을 위해 JSON 파일에 대해 직접 포맷된다. 데이터 시뮬레이션 서비스로부터의 데이터가 경로 1a를 따라 데이터베이스를 통과한 후, 경로 2를 따 라 JSON 파일로 이동하든지, 또는 데이터 시뮬레이션 서비스로부터의 데이터가 경로 1b를 따라 JSON 파일로 직접 이동하든지, 데이터는 JSON 파일 포맷이 되면, 스케줄러 훈련 마이크로 서비스로 전송될 수 있다. 데이터베이스 입력들은 JSON 포맷으로 래핑된다. JSON 포매팅의 간단한 예가 아래에 제공된다. 훈련의 목적 평균 지연 최소화 프로젝트 1 패키지들 패키지 1 시간 지속기간 - 5일 자원 1(크레인) 수량 - 2 자원 2(탱크) 수량 - 3 패키지2 패키지3 패키지들 간의 종속성 패키지 1 --> 패키지 2 자원들 자원 유형 1(크레인) 수량 2 크레인 1의 점유 3일 이용 가능 2일 사용 불가 크레인 2의 점유 프로젝트 2 프로젝트 3 포맷된 JSON 파일은 경로 3을 따라 스케줄러 훈련 마이크로 서비스에 제공된다. JSON 포맷을 사용하여 데이터로부터 훈련까지의 3개의 경로는 훈련 데이터 작업흐름에 도시되어 있다. JSON 파일은 포맷되면, 도 8a에 도시된 바와 같이 AI 모델에 제공된다. JSON 포맷된 파일은 사용자에 의 한 처리를 위해 AI 소프트웨어에 제공된다. JSON 파일은 로드 밸런서로, 이어서 웹 서버로, 이어서 애플리케이션 서버로, 이어서 캐싱(cache)된 데이터베이스 서버를 통해 데이터베이스로부터 획 득된 추가적인 훈련 및 이력 데이터와 함께 AI 모델을 훈련하기 위해 스케줄러 훈련 마이크로 서비스(80 6)로 진행한다. 대안적으로, 도 8a에도 도시된 바와 같이, JSON 파일은 데이터베이스로부터 직접 생성될 수 있고, 사용자 가 훈련 프로세스를 호출할 때 훈련의 목적으로 805를 사용하여 캐싱될 수 있다. 이 경우, 사용자는 JSON 파일을 로딩 및/또는 개시하여 데이터베이스로부터 스케줄러 훈련 마이크로 서비스로 직접 진행하거 나 캐싱된 데이터베이스 서버를 통해 진행할 수 있다. AI 모델은 데이터를 스케줄러 추론 마이크로 서비스로 전송한다. 데이터는 스케줄러 추론 마이크로 서비스로부터 어플리케이션 서버로, 이어서 웹 서버로, 이어서 로드 밸런서로, 마지막으로 추론 결과를 검토한 후 훈련의 결과를 개선하기 위한 입력을 제공하는 사용자에게로 진행한다. 사용자 입력은 바이너리, 즉 \"스케줄 수락(accept schedule)\" 또는 \"스케줄 거부(reject schedule)\" 형태일 수 있다. 더욱이, 사용자는: 스케줄이 얼마나 인간과 유사한가? (예컨대, 순서화 측면에서) 스케줄이 로컬 크루들(local crews)에게 익숙한 것에서 얼마나 벗어나는가? 등과 같은 몇 가지 메트릭(metrics)의 관점에서 피 드백을 제공할 수 있다. 이것은 Q-학습 접근법, 훈련 신경망 또는 Q-테이블에 대한 보상 함수 측면에서 체계화 될 수 있다. 또한, SARSA 또는 몬테카를로(Monte-Carlo) 기반 알고리즘들이 가능하다. 단계 880에서, 피드백은 위에 나열된 가능성들의 임의의 서브세트에 관한 보상 함수의 관점에서 인간 또는 시뮬 레이션 소프트웨어 중 어느 하나에 의해 주어질 수 있다. 에이전트는 IWP 데이터, 제약 데이터, 자원 제한, 이 용 가능한 시간 슬롯, 크루 가용성, 부품 등에 대한 정보를 제공받는다. 제약들은 시뮬레이션 소프트웨어에 통 합되거나, 인간들에 의해 체크되고, 그들의 피드백의 일부로서 에이전트 자체에 대한 이들의 명시적인 지식 없 이 학습될 수 있다. 주어진 피드백에 의해 에이전트는 시간이 지남에 따라 학습하도록 결정이 강화된다. 강화 학습 엔진은 여러 대규모 자본 프로젝트에 걸쳐 그리고/또는 단일 건설 프로젝트 내에서 결정을 개선하기 위해 학습 및 훈련될 수 있다. 시뮬레이션 소프트웨어는 물리적 자원의 가용성, 스케줄링 목적, 시간 슬롯, 물리적 기초 또는 보안 규정과 같은 제약들을 알고, 제공된 상세 스케줄에 의해 이러한 제약들이 위반되는지 여부를 결 정할 수 있다. 2개 이상의 강화 학습 방법이 강화 엔진의 훈련에 통합될 수 있다. 한 가지 방법은 상태와 행동의 명시적인 조 합들에 대한 보상을 학습하기 위해 Q-테이블의 사용과 함께 Q-학습을 사용하는 것이다. 다른 한 가지 방법은 Q-테이블 대신 신경망 아키텍처를 사용하는 것이다. 도 8b는 강화 알고리즘에서 반복되는 피드백 루프를 나타 낸다. 도 8b를 참조하면, 에이전트는 환경에서 \"at\"의 행동을 취하고, 상태 \"st\"에서 보 상 \"rt\"를 수신한다. Q-학습 방법 및 신경망 아키텍처는 둘 다 Q-함수 Q(s,a)- 예를 들어, 상태 \"st\"에서 행동 \"at\"를 취하는 보상 -를 예측하도록 훈련된다. Q-테이블은 Q-함수를 룩업 테이 블로 나타낸다. 즉, Q-테이블은 훈련 중에 보이는 상태들의 행동들로의 정확한 매핑이며, 따라서 보이지 않는 상태들에 적응하지 않으며 그들에 대한 예측을 제공할 수 없다. 그러나, 함수 근사화기(function approximators)로서 동작하는 신경망들이 작동하기 시작한다. 신경망들은 보이지 않는 상태들에 적응할 수 있 는 유연성을 제공한다는 장점이 있으며, 대규모 상태 행동 공간으로 양호하게 확장(scale)된다. Q-테이블을 사 용하는 것과 같은 방식으로, 신경망에 대한 보상 함수는 Q-값을 업데이트하는 데 사용된다. Q-테이블은 보상 함수와 벨만 방정식(Bellmann equation)을 사용하여 학습된다. 신경망은 또한 보상 함수를 사용하여 학습되지만, 이어서 역전파(backpropagation)를 사용하여 신경망 가중치를 업데이트한다. 인간의 피드백 대신, IWP 데이터, 제약 및 자원에 기초하여 Q-학습 접근법(Q-learning-approach)이 또한 사용될 수 있으며, 제약 위반 여부와 관련하여 강화 학습 엔진에 피드백이 제공될 수 있다. 이 접근법은 순전히 자체 적으로 스케줄링 대안들(scheduling alternatives)을 생성할 것이며, 보상 함수는 어떤 제약들이 그리고 얼마나 많은 제약들이 위반되는지를 체계화할 것이다. 이것은 제약들이 위와 같이 주어지는 시뮬레이션 환경 에 의해 설정될 것이며, 이어서 에이전트는 먼저 실현 가능한 스케줄링 솔루션 그리고 -제2 또는 그 이상의 단계에서- 심지어 최적의 스케줄링 솔루션을 향하여 행동 공간을 탐색할 수 있다. 에이전트는 IWP 에서 어떤 부품을 선택할지, 어떤 자원/제약/목적을 할당할지를 결정하고, 시작일 및 종료일을 스케줄링하여, 많은 IWP의 시퀀스를 반복적으로 생성한다. 데이터가 훈련되면, 데이터는 동일한 경로를 따라 스케줄러 추론 마이크로 서비스로 다시 진행한다. 도 9는 점진적 개선 프로세스의 개략적인 레이아웃을 나타낸다. 점진적 개선 프로세스는 스케줄러 추론 마이크로 서비스, JSON 파일, 사용자 인터페이스 및 데이터베이스를 포함하는 루프를 반복하는 것을 포함한다. 스케줄러 추론 마이크로 서비스가 JSON 파일 상에서 동작함에 따라, 수정된 스 케줄이 사용자 인터페이스에서 사용자에게 제공된다. 사용자는 훈련의 결과를 개선하기 위해 피드백을 제 공할 수 있다. 위와 같이, 사용자 입력은 바이너리, 즉 \"스케줄링 수락\" 또는 \"스케줄링 거부\" 형태일 수 있다. 간트 차트와 함께 스케줄의 예가 도 9에 도시되어 있다. 사용자 인터페이스와 상호작용하는 사 용자는 스케줄러 추론 마이크로 서비스가 사용자의 입력과 일치하는 개선된 스케줄을 제공하도록 시스템에 입력을 제공할 수 있다. 이러한 점진적 개선 프로세스의 출력은 데이터베이스에 저장된 AI 강화 엔 진 모델이다. AI 강화 엔진 모델은 데이터베이스에 저장되면, AI 자동 스케줄러에 통합될 수 있다. 도 10a는 전문가에 의해 수동으로, 또는 다른 메커니즘에 의해 생성되지만, AI 자동 스케줄러에 의해 생성되지 않는 디폴트 상세 스케줄 차트를 도시한다. 상세 스케줄 차트는 IWP 번호들에 따라 조직화 된다. 각각의 IWP 번호에 대하여, 차트는 계획된 시작일, 계획된 종료일, 계획된 인시 , 크루 크기, 및 다른 IWP 번호들의 시작일 및 종료일과 비교하여 각각의 IWP 번호에 대한 계획된 시작일 및 계획된 종료일을 나타내기 위한 달력 내의 라인의 그래픽 표현을 나타내는 간트 차트를 나열한다. 특정 시작일 및 종료일에 추가하여, 상세 스케줄 차트는 다양한 태 스크들의 실행의 시퀀스를 나타낸다. 상세 스케줄 차트에서, 각각의 IWP 번호가 입력되고, 시작일, 종료일, 계획된 인시 및 크루 크기를 나타낸다. 그러나, 상세 스케줄 차트는 실제 스케줄 또는 임의의 태스크들의 순서화를 나타내지 않는데, 이는 태스크들이 AI 자동 스케줄러에 따라 스케줄링되지 않았기 때문이다. 도 10b는 강화 엔진의 훈련 완료 후에 강화 엔진을 통합한 AI 자동 스케줄러에 의해 생성된 상세 스케줄 차트 를 나타낸다. 상세 스케줄 차트는 IWP 번호들에 따라 조직화된다. 각각의 IP 번호에 대하여, 차트는 계획된 시작일, 계획된 종료일, 계획된 인시, 크루 크기, 및 다른 IWP 번호들의 시작일 및 종료일과 비교하여 각각의 IWP 번호에 대한 계획된 시작일 및 계획된 종료일 을 나타내기 위한 달력 내의 라인의 그래픽 표현을 나타내는 간트 차트를 나열한다. 특정 시작일 및 종료일에 추가하여, 상세 스케줄 차트는 다양한 태스크들의 실행의 시퀀스를 나타낸다. 상세 스케줄 차트와는 대조적으로, 상세 스케줄 차트는 각각의 IWP 번호에 따른 각각의 태스 크들의 종속성 및 순서화를 나타낸다. 상세 스케줄 차트는 시작일 및 종료일이 태스크들의 종속성 및 순서화에 따라 어떻게 엇갈리는지를 나타낸다. 태스크들의 종속성 및 순서화의 존재는 AI 자동 스케 줄러가 훈련된 강화 엔진을 통합했음을 나타낸다. 예들 다음의 예들은 본 개시 및 그의 바람직한 실시예들을 더 예시하기 위한 것이다. 예 1. 인공 지능(AI) 강화 엔진은 AI 자동 스케줄러에서 사용하도록 훈련되었다. 강화 엔진은 AI 자동 스케줄러에게 전문 스케줄러가 되는 방법을 훈련하기 위해 심층 강화 학습(RL)에 의해 훈련되었다. AI 스케줄러 내의 강화 엔진은 기계 학습(ML)과 RL 및 심층 학습을 결합하여 훈련되었다. AI 강화 엔진의 훈련은 4 단계: 훈련 프로세스; 추론 프로세스; 점진적 개선; 및 배치를 통해 진행한다. 1. 훈련 프로세스 패키지 훈련 프로세스에 대한 입력들은 위에서 설명한 패키지들의 여러 변형을 갖는 프로젝트들의 세트이었다. 입력들 은 다음과 같은 구조의 JSON 포맷으로 래핑되었다. AI 소프트웨어에 의해 작동하도록 포맷된 샘플 JSON 파일이 아래 표 1에 제공된다. 샘플 JSON 파일은 \"pouring Foundation Concrete at Work Area A1\"로서 설명된 IWP 패키지 \"IWP-A1\"을 위한 것이다. 샘플 JSON 파일 표 1 // input { \"packages\": [ //Package - IWP-A1 { //Package basic properties \"id\": \"IWP-001\", \"name\": \"IWP-A1\", \"description\": \"Pouring Foundation Concrete at Work Area A1\", \"level2PackageId\": \"CWP-A1\", \"discipline\": \"Structure\", //Required Resources \"requiredResources\":[ { \"resourceTypeId\" : \"CRANE-001\", \"resourceQuantity\": 4, \"ResourceType\": \"Crane\" }, { \"resourceTypeId\" : \"FORKLIFT-001\", \"resourceQuantity\": 3, \"ResourceType\": \"Forklift\" } ], //Package Planned Duration \"plannedDuration\": { \"Quantity\" : 4, \"Units\": \"Days\" }, //Resource internal dependencies for this package to execute \"resourceIds_Dependencies\":[\"CRANE-001\", \"FORKLIFT-001\"], //Optional Input - CRANE-001 is required first and later FORKLIFT-001 //Package Dependecies \"package_Dependecies\": [] //For the first package there will be no dependencies (successors or predecessors) }, //Package - IWP-A2 { //Package basic properties \"id\": \"IWP-002\", \"name\": \"IWP-A2\", \"description\": \"Placing equipment on top of foundation at Work Area A1\", \"level2PackageId\": \"CWP-A1\", \"discipline\": \"Equipment\", //Required Resources \"requiredResources\":[ { \"resourceTypeId\" : \"CRANE-001\", \"resourceQuantity\": 4, \"ResourceType\": \"Crane\" }, { \"resourceTypeId\" : \"CRANE-002\", \"resourceQuantity\": 2, \"ResourceType\": \"CrawlerCrane\" } ], //Package Planned Duration \"plannedDuration\": { \"Quantity\" : 2, \"Units\": \"Days\" }, //Resource internal dependencies for this package to execute \"resourceIds_Dependencies\":[\"CRANE-001\", \"CRANE-002\"], //Optional Input - CRANE-001 is required first and later CRANE-002 //Package Dependecies \"package_Dependecies\": { \"predecessors\":[\"IWP-001\"], \"successors\": [\"IWP-004\"] } }, //Package - IWP-A3 { //Package basic properties \"id\": \"IWP-003\", \"name\": \"IWP-A3\", \"description\": \"Painting equipment at Work Area A1\", \"level2PackageId\": \"CWP-A2\", \"discipline\": \"Painting\", //Required Resources \"requiredResources\":[ { \"resourceTypeId\" : \"StepLadder-001\", \"resourceQuantity\": 4, \"ResourceType\": \"Ladder\" }, { \"resourceTypeId\" : \"ExtensionLadder-001\", \"resourceQuantity\": 2, \"ResourceType\": \"Ladder\" } ], //Package Planned Duration \"plannedDuration\": { \"Quantity\" : 5, \"Units\": \"Hours\" }, //Resource internal dependencies for this package to execute \"resourceIds_Dependencies\":[], //Optional Input - No dependecies b/w resources //Package Dependecies \"package_Dependecies\": [] //No dependecies }, //Package - IWP-A4 { //Package basic properties \"id\": \"IWP-004\", \"name\": \"IWP-A4\", \"description\": \"Routing pipes from equipment at Work Area A1\", \"level2PackageId\": \"CWP-A2\", \"discipline\": \"Piping\", //Required Resources \"requiredResources\":[ { \"resourceTypeId\" : \"CRANE-005\", \"resourceQuantity\": 4, \"ResourceType\": \"Crane\" }, { \"resourceTypeId\" : \"HYDRAULIC-EXCAVATOR-002\", \"resourceQuantity\": 2, \"ResourceType\": \"Excavator\" } ], //Package Planned Duration \"plannedDuration\": { \"Quantity\" : 2, \"Units\": \"Days\" }, //Resource internal dependencies for this package to execute \"resourceIds_Dependencies\":[\"HYDRAULIC-EXCAVATOR-002\", \"CRANE-005\"], //Optional Input - CRANE-001 is required first and later CRANE-002 //Package Dependecies \"package_Dependecies\": { \"predecessors\":[\"IWP-001\", \"IWP-002\"], \"successors\": [] } } ], \"schedulingObjective\":1, //1> minimize average delay, 2> effective resource utilization, 3> meet customer dates etc //Constraints or Availability of resources \"constraints\":[ { \"Id\" : \"CRANE-001\", \"description\": \"Rough Terrain Crane\", \"availableQuantity\": 5, \"resource_Type\": \"Crane\", \"available_Days\": [\"12/8/2021\", \"13/8/2021\", \"14/8/2021\", \"17/8/2021\"] }, { \"Id\" : \"CRANE-005\", \"description\": \"Small Terrain Crane\", \"availableQuantity\": 5, \"resource_Type\": \"Crane\", \"available_Days\": [\"11/8/2021\", \"13/8/2021\", \"14/8/2021\", \"17/8/2021\"] }, { \"Id\" : \"CRANE-002\", \"description\": \"Terrain Crane\", \"availableQuantity\": 7, \"resource_Type\": \"CrawlerCrane\", \"available_Days\": [\"15/8/2021\", \"18/8/2021\", \"21/8/2021\"] }, { \"Id\" : \"FORKLIFT-001\", \"description\": \"Fork lift of type A101\", \"availableQuantity\": 5, \"resource_Type\": \"Forklift\", \"available_Days\": [\"12/8/2021\", \"13/8/2021\", \"14/8/2021\"] }, { \"Id\" : \"StepLadder-001\", \"description\": \"Step ladder 6ft\", \"availableQuantity\": 5, \"resource_Type\": \"Ladder\", \"available_Days\": [\"12/8/2021\", \"13/8/2021\", \"14/8/2021\"] }, { \"Id\" : \"ExtensionLadder-001\", \"description\": \"Extension ladder 8ft\", \"availableQuantity\": 5, \"resource_Type\": \"Ladder\", \"available_Days\": [\"12/8/2021\", \"13/8/2021\", \"14/8/2021\"] }, { \"Id\" : \"HYDRAULIC-EXCAVATOR-002\", \"description\": \"Excavator of type Ex-101\", \"availableQuantity\": 5, \"resource_Type\": \"Excavator\", \"available_Days\": [\"12/8/2021\", \"13/8/2021\", \"14/8/2021\"] } ] } // output { \"scheduledPackages\": [ { \"package_Id\":\"IWP-001\", //pouring foundation \"startDate\": \"12/08/2021\", \"finishDate\": \"17/08/2021\" }, { \"package_Id\":\"IWP-003\", //painting equipment \"startDate\": \"12/08/2021\", \"finishDate\": \"12/08/2021\" }, { \"package_Id\":\"IWP-002\", //placing equipment on the foundation \"startDate\": \"18/08/2021\", \"finishDate\": \"25/08/2021\" }, { \"package_Id\":\"IWP-004\", //routing pipes from the equipment \"startDate\": \"26/08/2021\", \"finishDate\": \"31/08/2021\" } ] } 표 1에 표시된 샘플 JSON 파일은 적어도 각각의 IWP에 대한 다음 자원 및 제약들: 패키지 기본 속성들; 필요한 자원들; 패키지 계획 지속기간; 및 자원 내부 종속성들을 기술한다. 이 서비스 프로세스의 출력은 데이터베이스에 저장된 AI 강화 엔진 모델이다. 이것은 일반적으로, 사용되는 데 이터 세트에 대한 합의(agreement)에 따라 프로젝트당 한 번 또는 전체에 대해 한 번 수행되는 것으로 간주된다. 훈련은 신경망들의 상이한 조합들을 사용하는 것을 포함할 수 있으며, 알고리즘들은 상이한 학습률들(learning rates)로 시행착오에 기초하여 훈련되었다. 도 11a 및 도 11b는 2개의 상이한 학습률로 1,000회 이상의 반복을 수행한 샘플 결과를 나타낸다. 학습률은 도 11a의 경우 0.1이었고, 도 11b의 경우 0.01이었다. 상이한 신경망 구성들이 훈련되고 테스트되었다. 하나 이상의 입력 계층, 복수의 뉴런을 갖는 하나 이상의 은 닉 계층, 및 하나 이상의 출력 계층을 갖는 신경망들이 테스트되었다. 하나의 입력 계층, 여러 개의 뉴런을 갖 는 하나의 은닉 계층, 및 하나의 출력 계층을 갖는 신경망이 성공하도록 훈련되었다. 0.01의 예에서의 표준 편차를 갖는 가우스 분포가 가중치 분포에 대해 고려되었다. 2. 추론 프로세스 추론 프로세스는 데이터베이스에 저장된 AI 모델로부터 추천을 제공하기 위해 파이톤 랩(Python wrap)으로 작성 된 코드에 의해 수행되었다. 이러한 서비스들에 대한 입력들은 위와 유사한 패키지들/자원들의 세트이며, 출력 은 JSON 포맷이며, 이는 일부 설정된 메타데이터와 함께 아래에 표시된 바와 같은 스케줄링을 반영한다. 프로젝트 목적 세트 평균 지연 최소화 스케줄 패키지 1 시작일 종료일 패키지 2 시작일 종료일 테스트 설계의 개략적인 레이아웃이 도 8에 도시되어 있다. 테스트 서비스들은 스케줄러 추론 마이크로 서비스 및 스케줄러 훈련 마이크로 서비스를 포함하며, 이들은 AI 모델에 의해 개선되고, 서버 데이터베이스에 통합되었다. 피드백은 강화 학습 모델들을 훈련하거나 재훈련하기 위해 시스템에서 사용 하는 보상 함수들에 통합되었으며, 그 다음에 진행 중이거나 새로운 스케줄링 태스크들에 적용될 수 있다. 따 라서, 전문가 피드백을 통합하고 모델을 훈련하면 훈련 프로세스가 신속화되고 결과가 개선된다. 3. 점진적 개선 점진적 개선의 프로세스는 추론 프로세스로부터의 도메인 전문가/사용자의 피드백을 사용하여 AI 기반 모듈들의 자동 또는 반자동 재훈련 및/또는 수동 조정을 통해 시스템 성능을 개선하는 것을 포함한다. 점진적 개선으로 AI 자동 스케줄러를 훈련하기 위한 목적으로, 예시적인 실시예의 강화 학습 AI 자동 스케줄러 는 대규모 자동 확장가능(massive auto scalable) 시스템에서의 클라우드 상의 2개의 마이크로 서비스의 세트로 서 로컬 독점 스케줄링(proprietary scheduling) 소프트웨어(스마트 플랜트 건설 또는 스마트 구축)에 배치되었 다. 테스트 소프트웨어는 자신의 SQL 서버 데이터베이스로부터 패키지 및 관련 자원을 수집하고, 이들을 전술한 훈 련/추론 서비스에서의 필요에 따라 JSON 포맷으로 래핑하고, 인터넷을 통해 호출하는 새로운 커맨드를 시스템에 포함하도록 수정되었다. 클라이언트는 추론 서비스로부터 JSON 형태로 응답을 다시 수신하여 전문가가 최종적으로 검토하거나 수락할 수 있도록 시스템에 스케줄링을 저장하고 시각화한다. 4. 배치 예시적인 실시예에서, 훈련된 강화 엔진은 AI 자동 스케줄러에 통합되었다. 훈련된 강화 엔진을 갖는 AI 자동 스케줄러는 주어진 작업으로부터의 데이터베이스를 사용하여 테스트되었다. 테스트를 위해 JSON 파일에는 표 1에 표시된 샘플 JSON 파일이 포함되었다. 표 1의 JSON 파일은 각각 설명 \"Pouring Foundation Concrete at Work Area A1\", \"Placing equipment on top of foundation at Work Area A1\", \"Painting equipment at Work Area A1\" 및 \"Routing pipes from equipment at Work Area A1\"에 대응하는 IWP 번호 IWP-A1, IWP-A2, IWP-A3 및 IWP-A4를 포함한다. 도 12는 표 1에 표시되고 전술한 샘플 JSON 파일을 포함하는 JSON 파일을 사용하여 테스트 실행에 의해 생성된 상세 스케줄의 일부를 나타낸다. 상세 스케줄은 IWP 번호, 설명, 계획된 시작일 , 계획된 종료일 및 간트 차트를 포함한다. 테스트 실행에 의해 생성된 상세 스케줄은 데이터베이스 내의 주요 목적에 따라 작업을 성공적으로 스케줄링했 으며, 결과들은 재현 가능하였다. 본 발명의 다양한 실시예들은 임의의 종래의 컴퓨터 프로그래밍 언어로 적어도 부분적으로 구현될 수 있다. 예 를 들어, 일부 실시예들은 절차적 프로그래밍 언어(예를 들어, \"C\")로, 비주얼 프로그래밍 프로세스로서, 또는 객체 지향 프로그래밍 언어(예를 들어, \"C++\")로 구현될 수 있다. 본 발명의 다른 실시예들은 미리 구성된 독 립형 하드웨어 요소 및/또는 미리 프로그래밍된 하드웨어 요소들(예를 들어, 주문형 집적 회로들, FPGA들, 및 디지털 신호 프로세서들), 또는 다른 관련 컴포넌트들로서 구현될 수 있다. 대안적인 실시예에서, 개시된 장치들 및 방법들(예를 들어, 전술한 방법들 참조)은 컴퓨터 시스템과 함께 사용 하기 위한 컴퓨터 프로그램 제품으로서 구현될 수 있다. 이러한 구현은 컴퓨터 판독 가능 매체(예를 들어, 디 스켓, CD-ROM, ROM 또는 고정 디스크)와 같은 유형적이고 비일시적이고 비일과성인 매체 상에 고정된 일련의 컴 퓨터 명령어들을 포함할 수 있다. 일련의 컴퓨터 명령어들은 시스템과 관련하여 본 명세서에서 이전에 설명된 기능의 전부 또는 일부를 구현할 수 있다. 이 분야의 통상의 기술자들은 이러한 컴퓨터 명령어들이 많은 컴퓨터 아키텍처 또는 운영 체제와 함께 사용하기 위해 다수의 프로그래밍 언어로 작성될 수 있다는 것을 이해해야 한다. 더욱이, 이러한 명령어들은 반도체, 자 기, 광학 또는 다른 메모리 디바이스와 같은 임의의 메모리 디바이스에 저장될 수 있으며, 광학, 적외선, 마이 크로파, 또는 다른 전송 기술과 같은 임의의 통신 기술을 사용하여 전송될 수 있다.많은 방식 중에서 특히, 이러한 컴퓨터 프로그램 제품은 수반되는 인쇄 또는 전자 문서(예를 들어, 수축 포장된 (shrink wrapped) 소프트웨어)를 갖는 이동식 매체로서 배포될 수 있거나, 컴퓨터 시스템에(예를 들어, 시스템 ROM 또는 고정 디스크 상에) 사전 로딩되거나, 네트워크(예를 들어, 인터넷 또는 월드 와이드 웹)를 통해 서버 또는 전자 게시판으로부터 배포될 수 있다. 실제로, 일부 실시예들은 \"SAAS\"(Software-as-a-Service Model) 또는 클라우드 컴퓨팅 모델로 구현될 수 있다. 물론, 본 발명의 일부 실시예들은 소프트웨어(예를 들어, 컴퓨 터 프로그램 제품)와 하드웨어 양자의 조합으로 구현될 수 있다. 본 발명의 또 다른 실시예들은 완전히 하드웨 어로 또는 완전히 소프트웨어로 구현된다. 전술한 설명은 본 발명의 다양한 예시적인 실시예들을 개시하고 있지만, 이 분야의 통상의 기술자들은 본 발명 의 진정한 범위를 벗어나지 않고서 본 발명의 장점들 중 일부를 달성하는 다양한 변경들을 수행할 수 있다는 것 이 명백할 것이다."}
{"patent_id": "10-2024-7011941", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이 분야의 통상의 기술자들은 바로 아래에 요약된 도면들을 참조하여 설명되는 이하의 \"예시적인 실시예들의 설 명\"으로부터 본 발명의 다양한 실시예들의 장점들을 보다 충분히 인식해야 한다. 도 1은 결합된 3 레벨 작업 분류 구조(three level work breakdown structure)의 개략적 표현을 제시한다. 도 2a는 AI 자동 스케줄러의 전체 설계의 일 실시예를 개략적으로 도시한다. 도 2b는 \"완료 시간 최소화(Minimize Completion Time)\"의 스케줄링 목적을 최적화하기 위한 단순화된 프로세스 의 일 실시예를 개략적으로 예시한다. 도 2c는 \"평균 슬로우 다운 최소화(Minimize Average Slowdown)\"의 스케줄링 목적을 최적화하기 위한 단순화된 프로세스의 일 실시예를 개략적으로 예시한다. 도 2d는 \"자원 이용 최대화(Maximize Resource Utilization)\"의 스케줄링 목적을 최적화하기 위한 단순화된 프 로세스의 일 실시예를 개략적으로 예시한다. 도 3은 최적의 작업 패키지 스케줄 내의 레벨 3 노드(node)의 일부를 개략적으로 예시한다. 도 4는 상세 스케줄 차트의 일부를 예시한다. 도 5는 인공 지능을 사용하는 다수의 서비스를 예시한다. 도 6은 다수의 프로젝트를 위한 AI 자동 스케줄러의 전체 설계의 일 실시예를 개략적으로 도시한다. 도 7은 AI 자동 스케줄링 소프트웨어에서 강화 엔진을 훈련하기 위한 훈련 데이터 작업흐름을 개략적으로 도시 한다. 도 8a는 AI 모델을 훈련하고 추론(training and inferencing)하기 위한 프로세스를 도시한다. 도 8b는 강화 알고리즘에서 반복되는 피드백 루프를 도시한다. 도 9는 점진적 개선 프로세스의 개략적인 레이아웃을 도시한다. 도 10a는 수동으로 또는 상이한 메커니즘에 의해 그러나 AI 자동 스케줄러를 적용하지 않고 생성된 상세 스케줄 차트를 도시한다. 도 10b는 AI 자동 스케줄러에 의해 생성된 상세 스케줄 차트를 도시한다. 도 11a는 1,000회 이상의 반복을 수행한 결과들을 도시한다. 도 11b는 1,000회 이상의 반복을 수행한 결과들을 도시한다. 도 12는 상세 스케줄의 일부를 도시한다."}
