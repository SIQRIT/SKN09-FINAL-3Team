{"patent_id": "10-2021-0150771", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0065017", "출원번호": "10-2021-0150771", "발명의 명칭": "인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치 및 방법", "출원인": "연세대학교 산학협력단", "발명자": "한요섭"}}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "특정 프로그램에 관한 소스코드 및 요약문을 입력받는 프로그램 입력부;상기 소스코드를 분석하여 간선과 노드로 구성된 프로그램 의존 그래프를 생성하는 그래프 생성부;상기 소스코드 및 상기 요약문을 기초로 적어도 하나의 어휘사전을 생성하는 어휘사전 생성부; 및동작 과정에서 상기 적어도 하나의 어휘사전이 적용되는 인코더(Encoder)와 디코더(Decoder)를 포함하고, 상기소스코드에 대응되는 소스코드 임베딩을 기초로 상기 노드의 어텐션을 산출하여 소스코드 요약문을 생성하는 소스코드 요약문 생성부;를 포함하고,상기 인코더(Encoder)는 트랜스포머(transformer) 과정의 출력이 그래프 합성곱 과정의 입력에 연결되도록 구현되는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 그래프 생성부는상기 소스코드의 코드 블록을 상기 노드로 구성하고 데이터 플로우 또는 제어 플로우로 정의되는 상기 노드 간의 연결을 상기 간선으로 구성하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 어휘사전 생성부는최대 빈도수를 기준으로 상기 어휘사전에 있는 어휘 개수를 상위 N 개로 제한하고, 상기 N은 상기 소스코드의크기에 비례하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 소스코드 요약문 생성부는상기 소스코드의 입력 토큰들에 대한 워드 임베딩을 통해 각 입력 토큰 별로 각각이 해당 토큰의 의미 정보와위치 정보를 포함하는 토큰 임베딩 및 위치 임베딩을 생성하고, 상기 토큰 임베딩 및 상기 위치 임베딩 간의 합연산에 의해 생성된 임베딩 벡터를 상기 인코더의 입력으로 사용하는 것을 특징으로 하는 인공지능 분석 기반프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 소스코드 요약문 생성부는상기 소스코드 임베딩을 기초로 상기 입력 토큰들의 어텐션을 산출하여 상기 소스코드 내 자기학습을 강화하는셀프 어텐션(self-attention) 과정과, 상기 셀프 어텐션 과정의 결과로서 획득된 노드 어텐션 벡터를 완전 연결계층에 입력하여 노드 잠재표현 벡터를 생성하는 피드 포워드(feed forward) 과정을 포함하는 상기 트랜스포머과정을 수행하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치.공개특허 10-2023-0065017-3-청구항 6 제5항에 있어서, 상기 소스코드 요약문 생성부는상기 그래프 합성곱 과정에서 상기 프로그램 의존 그래프의 간선 정보를 기초로 상기 노드 잠재표현 벡터 간의합성 곱을 반복적으로 수행하여 상기 노드의 어텐션을 산출하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 소스코드 요약문 생성부는상기 노드의 어텐션과 상기 요약문을 상기 디코더에 입력하여 요약 어휘 임베딩을 생성하는 것을 특징으로 하는인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 소스코드 요약문 생성부는상기 노드의 어텐션을 상기 디코더의 멀티 헤드 어텐션 과정의 입력으로 사용하는 것을 특징으로 하는 인공지능분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서, 상기 소스코드 요약문 생성부는상기 요약 어휘 임베딩을 활성화 함수에 적용한 결과를 기초로 상기 소스코드 요약문을 생성하는 것을 특징으로하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "특정 프로그램의 소스코드를 분석하여 프로그램 의존 그래프를 생성하는 단계;상기 소스코드 및 상기 특정 프로그램에 관한 요약문을 기초로 적어도 하나의 어휘사전을 생성하는 단계;상기 소스코드에 대응되는 소스코드 임베딩을 생성하는 단계;상기 소스코드 임베딩을 기초로 상기 프로그램 의존 그래프의 노드들에 관한 제1 노드 임베딩을 생성하는 단계;상기 제1 노드 임베딩 및 상기 프로그램 의존 그래프의 간선 정보를 이용하여 그래프 어텐션(graph attention)을 수행하는 단계;상기 그래프 어텐션에 따른 노드들의 제2 노드 임베딩 및 상기 요약문을 기초로 요약 어휘들에 관한 요약 어휘임베딩을 생성하는 단계; 및상기 요약 어휘 임베딩을 기초로 상기 소스코드에 관한 소스코드 요약문을 생성하는 단계;를 포함하는 인공지능분석 기반 프로그램 소스코드의 요약문 생성 방법."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 소스코드 임베딩을 생성하는 단계는상기 소스코드의 입력 토큰들에 대한 워드 임베딩을 통해 각 입력 토큰 별로 각각이 해당 토큰의 의미 정보와위치 정보를 포함하는 토큰 임베딩 및 위치 임베딩을 생성하는 단계; 및공개특허 10-2023-0065017-4-상기 토큰 임베딩 및 상기 위치 임베딩 간의 합 연산을 통해 임베딩 벡터를 생성하는 단계를 포함하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 제1 노드 임베딩을 생성하는 단계는셀프 어텐션(self-attention) 과정을 통해 상기 소스코드 임베딩을 기초로 상기 입력 토큰들의 어텐션을 산출하여 상기 소스코드 내 자기학습을 강화하는 단계; 및피드 포워드(feed forward) 과정을 통해 상기 셀프 어텐션 과정의 결과로서 획득된 노드 어텐션 벡터를 완전 연결 계층에 입력하여 노드 잠재표현 벡터를 생성하는 단계를 포함하는 것을 특징으로 하는 인공지능 분석 기반프로그램 소스코드의 요약문 생성 방법."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서, 상기 그래프 어텐션을 수행하는 단계는상기 프로그램 의존 그래프의 간선 정보를 기초로 상기 제1 노드 임베딩 간의 합성 곱을 반복적으로 수행하는단계를 포함하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법."}
{"patent_id": "10-2021-0150771", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 소스코드 요약문을 생성하는 단계는상기 요약 어휘 임베딩을 활성화 함수에 적용한 결과를 기초로 상기 소스코드 요약문을 생성하는 단계를 포함하는 것을 특징으로 하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "문 생성 장치 및 방법 요 약"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "요약", "paragraph": 2, "content": "본 발명은 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치 및 방법에 관한 것으로, 상기 장치는 특정"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "요약", "paragraph": 3, "content": "프로그램에 관한 소스코드 및 요약문을 입력받는 프로그램 입력부; 상기 소스코드를 분석하여 간선과 노드로 구"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "요약", "paragraph": 4, "content": "성된 프로그램 의존 그래프를 생성하는 그래프 생성부; 상기 소스코드 및 상기 요약문을 기초로 적어도 하나의 어휘사전을 생성하는 어휘사전 생성부; 및 동작 과정에서 상기 적어도 하나의 어휘사전이 적용되는 인코더 (Encoder)와 디코더(Decoder)를 포함하고, 상기 소스코드에 대응되는 소스코드 임베딩을 기초로 상기 노드의 어"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "요약", "paragraph": 5, "content": "텐션을 산출하여 소스코드 요약문을 생성하는 소스코드 요약문 생성부;를 포함한다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 소스코드 요약 기술에 관한 것으로, 보다 상세하게는 기존의 트랜스포머 모델을 기반으로 그래프 처"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "리 모델을 적용하여 프로그램 소스코드에 대한 자연어 요약문을 생성하는 인공지능 분석 기반 프로그램 소스코"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 3, "content": "드의 요약문 생성 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "소스코드(source code)의 요약은 코드에 관한 간단한 자연어(natural language) 설명을 생성하는 작업에 해당할 수 있다. 소스코드에 대한 간단한 설명은 프로그래머가 코드 자체를 읽을 필요없이 해당 코드의 동작과 전체 프 로그램에서 해당 코드의 목적을 쉽게 이해하도록 할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "또한, 프로그래머는 소스코드에 대한 요약문을 통해 해당 코드의 동작에 대한 명확한 그림을 그릴 수 있고, 해 당 코드의 구체적인 동작을 이해하는데 소요되는 시간을 절약할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "이에 따라, 자동 코드 요약 기술은 빠르게 연구되어 왔으며, 최근에는 AI, 자연어 처리(NLP) 및 마이닝(mining)"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 4, "content": "분야에서 신경망을 적용하여 소스코드의 요약문을 생성하고자 하는 시도가 존재한다. 선행기술문헌특허문헌 (특허문헌 0001) 한국공개특허 제10-2013-0116908호 (2013.10.24)"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "소스코드와 추상구문트리를 이용하는 기존의 소스코드 요약생성 모델의 경우 구조정보 학습을 위한 별도의 인코 더를 둠으로써 모델의 크기가 커져 훈련 효율성이 상대적으로 낮은 문제점이 있다. 또한, 소스코드의 제어흐름"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "을 이용한 기존의 소스코드 요약생성 모델의 경우 제어흐름을 사전 학습하는 과정이 추가되어 이중훈련이 필요"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 3, "content": "하고 요약문을 생성하는데 데이터흐름 정보를 포함하지 않는 문제점이 있다. 본 발명에 따른 기존의 트랜스포머 모델을 기반으로 그래프 처리 모델을 적용하여 프로그램 소스코드에 대한 자"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 4, "content": "연어 요약문을 생성하는 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치 및 방법을 제공하고자 한다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "실시예들 중에서, 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치는 특정 프로그램에 관한 소스코드"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "및 요약문을 입력받는 프로그램 입력부; 상기 소스코드를 분석하여 간선과 노드로 구성된 프로그램 의존 그래프"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 3, "content": "를 생성하는 그래프 생성부; 상기 소스코드 및 상기 요약문을 기초로 적어도 하나의 어휘사전을 생성하는 어휘 사전 생성부; 및 동작 과정에서 상기 적어도 하나의 어휘사전이 적용되는 인코더(Encoder)와 디코더(Decoder)를"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 4, "content": "포함하고, 상기 소스코드에 대응되는 소스코드 임베딩을 기초로 상기 노드의 어텐션을 산출하여 소스코드 요약"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 5, "content": "문을 생성하는 소스코드 요약문 생성부;를 포함한다. 이때, 상기 인코더(Encoder)는 트랜스포머(transformer) 과정의 출력이 그래프 합성곱 과정의 입력에 연결되도 록 구현될 수 있다. 상기 그래프 생성부는 상기 소스코드의 코드 블록을 상기 노드로 구성하고 데이터 플로우 또는 제어 플로우로 정의되는 상기 노드 간의 연결을 상기 간선으로 구성할 수 있다. 상기 어휘사전 생성부는 최대 빈도수를 기준으로 상기 어휘사전에 있는 어휘 개수를 상위 N 개로 제한할 수 있 고, 상기 N은 상기 소스코드의 크기에 비례할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 6, "content": "상기 소스코드 요약문 생성부는 상기 소스코드의 입력 토큰들에 대한 워드 임베딩을 통해 각 입력 토큰 별로 각 각이 해당 토큰의 의미 정보와 위치 정보를 포함하는 토큰 임베딩 및 위치 임베딩을 생성하고, 상기 토큰 임베 딩 및 상기 위치 임베딩 간의 합 연산에 의해 생성된 임베딩 벡터를 상기 인코더의 입력으로 사용할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 7, "content": "상기 소스코드 요약문 생성부는 상기 소스코드 임베딩을 기초로 상기 입력 토큰들의 어텐션을 산출하여 상기 소 스코드 내 자기학습을 강화하는 셀프 어텐션(self-attention) 과정과, 상기 셀프 어텐션 과정의 결과로서 획득 된 노드 어텐션 벡터를 완전 연결 계층에 입력하여 노드 잠재표현 벡터를 생성하는 피드 포워드(feed forward) 과정을 포함하는 상기 트랜스포머 과정을 수행할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 8, "content": "상기 소스코드 요약문 생성부는 상기 그래프 합성곱 과정에서 상기 프로그램 의존 그래프의 간선 정보를 기초로 상기 노드 잠재표현 벡터 간의 합성 곱을 반복적으로 수행하여 상기 노드의 어텐션을 산출할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 9, "content": "상기 소스코드 요약문 생성부는 상기 노드의 어텐션과 상기 요약문을 상기 디코더에 입력하여 요약 어휘 임베딩 을 생성할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 10, "content": "상기 소스코드 요약문 생성부는 상기 노드의 어텐션을 상기 디코더의 멀티 헤드 어텐션 과정의 입력으로 사용할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 11, "content": "상기 소스코드 요약문 생성부는 상기 요약 어휘 임베딩을 활성화 함수에 적용한 결과를 기초로 상기 소스코드"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 12, "content": "요약문을 생성할 수 있다.실시예들 중에서, 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법은 특정 프로그램의 소스코드를 분"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 13, "content": "석하여 프로그램 의존 그래프를 생성하는 단계; 상기 소스코드 및 상기 특정 프로그램에 관한 요약문을 기초로 적어도 하나의 어휘사전을 생성하는 단계; 상기 소스코드에 대응되는 소스코드 임베딩을 생성하는 단계; 상기 소스코드 임베딩을 기초로 상기 프로그램 의존 그래프의 노드들에 관한 제1 노드 임베딩을 생성하는 단계; 상기 제1 노드 임베딩 및 상기 프로그램 의존 그래프의 간선 정보를 이용하여 그래프 어텐션(graph attention)을 수"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 14, "content": "행하는 단계; 상기 그래프 어텐션에 따른 노드들의 제2 노드 임베딩 및 상기 요약문을 기초로 요약 어휘들에 관"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 15, "content": "한 요약 어휘 임베딩을 생성하는 단계; 및 상기 요약 어휘 임베딩을 기초로 상기 소스코드에 관한 소스코드 요 약문을 생성하는 단계;를 포함한다. 상기 소스코드 임베딩을 생성하는 단계는 상기 소스코드의 입력 토큰들에 대한 워드 임베딩을 통해 각 입력 토 큰 별로 각각이 해당 토큰의 의미 정보와 위치 정보를 포함하는 토큰 임베딩 및 위치 임베딩을 생성하는 단계; 및 상기 토큰 임베딩 및 상기 위치 임베딩 간의 합 연산을 통해 임베딩 벡터를 생성하는 단계를 포함할 수 있다. 상기 제1 노드 임베딩을 생성하는 단계는 셀프 어텐션(self-attention) 과정을 통해 상기 소스코드 임베딩을 기 초로 상기 입력 토큰들의 어텐션을 산출하여 상기 소스코드 내 자기학습을 강화하는 단계; 및 피드 포워드(feed forward) 과정을 통해 상기 셀프 어텐션 과정의 결과로서 획득된 노드 어텐션 벡터를 완전 연결 계층에 입력하 여 노드 잠재표현 벡터를 생성하는 단계를 포함할 수 있다. 상기 그래프 어텐션을 수행하는 단계는 상기 프로그램 의존 그래프의 간선 정보를 기초로 상기 제1 노드 임베딩 간의 합성 곱을 반복적으로 수행하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 16, "content": "상기 소스코드 요약문을 생성하는 단계는 상기 요약 어휘 임베딩을 활성화 함수에 적용한 결과를 기초로 상기"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 17, "content": "소스코드 요약문을 생성하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "개시된 기술은 다음의 효과를 가질 수 있다. 다만, 특정 실시예가 다음의 효과를 전부 포함하여야 한다거나 다 음의 효과만을 포함하여야 한다는 의미는 아니므로, 개시된 기술의 권리범위는 이에 의하여 제한되는 것으로 이 해되어서는 아니 될 것이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치 및 방법은 기존의 트랜스포머 모델"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 3, "content": "을 기반으로 그래프 처리 모델을 적용하여 프로그램 소스코드에 대한 자연어 요약문을 효과적으로 생성할 수 있 다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 4, "content": "본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 장치 및 방법은 트랜스포머 기반의 code- to-sequence 모델에 GCN 계층을 추가적으로 사용하여 소스코드의 시퀀스 정보뿐 아니라 그래프의 구조정보가 담"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 5, "content": "긴 요약을 생성할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명에 관한 설명은 구조적 내지 기능적 설명을 위한 실시예에 불과하므로, 본 발명의 권리범위는 본문에 설 명된 실시예에 의하여 제한되는 것으로 해석되어서는 아니 된다. 즉, 실시예는 다양한 변경이 가능하고 여러 가 지 형태를 가질 수 있으므로 본 발명의 권리범위는 기술적 사상을 실현할 수 있는 균등물들을 포함하는 것으로 이해되어야 한다. 또한, 본 발명에서 제시된 목적 또는 효과는 특정 실시예가 이를 전부 포함하여야 한다거나 그러한 효과만을 포함하여야 한다는 의미는 아니므로, 본 발명의 권리범위는 이에 의하여 제한되는 것으로 이해 되어서는 아니 될 것이다. 한편, 본 출원에서 서술되는 용어의 의미는 다음과 같이 이해되어야 할 것이다. \"제1\", \"제2\" 등의 용어는 하나의 구성요소를 다른 구성요소로부터 구별하기 위한 것으로, 이들 용어들에 의해 권리범위가 한정되어서는 아니 된다. 예를 들어, 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\"있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결될 수 도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\"있다고 언급된 때에는 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 한편, 구성요소들 간의 관계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃 하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한 복수의 표현을 포함하는 것으로 이해되어야 하고, \"포함 하다\"또는 \"가지다\" 등의 용어는 실시된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함을 지정하려는 것이며, 하나 또는 그 이상의 다른 특징이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이 들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 각 단계들에 있어 식별부호(예를 들어, a, b, c 등)는 설명의 편의를 위하여 사용되는 것으로 식별부호는 각 단 계들의 순서를 설명하는 것이 아니며, 각 단계들은 문맥상 명백하게 특정 순서를 기재하지 않는 이상 명기된 순 서와 다르게 일어날 수 있다. 즉, 각 단계들은 명기된 순서와 동일하게 일어날 수도 있고 실질적으로 동시에 수 행될 수도 있으며 반대의 순서대로 수행될 수도 있다. 본 발명은 컴퓨터가 읽을 수 있는 기록매체에 컴퓨터가 읽을 수 있는 코드로서 구현될 수 있고, 컴퓨터가 읽을 수 있는 기록 매체는 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록 장치를 포함 한다. 컴퓨터가 읽을 수 있는 기록 매체의 예로는 ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있다. 또한, 컴퓨터가 읽을 수 있는 기록 매체는 네트워크로 연결된 컴퓨터 시스템에 분산되어, 분산 방식으로 컴퓨터가 읽을 수 있는 코드가 저장되고 실행될 수 있다. 여기서 사용되는 모든 용어들은 다르게 정의되지 않는 한, 본 발명이 속하는 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되는 사전에 정의되어 있는 용어들은 관 련 기술의 문맥상 가지는 의미와 일치하는 것으로 해석되어야 하며, 본 출원에서 명백하게 정의하지 않는 한 이 상적이거나 과도하게 형식적인 의미를 지니는 것으로 해석될 수 없다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 2, "content": "도 1은 본 발명에 따른 요약문 생성 시스템을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 3, "content": "도 1을 참조하면, 요약문 생성 시스템은 사용자 단말, 요약문 생성 장치 및 데이터베이스 를 포함할 수 있다. 사용자 단말은 사용자에 의해 운용되는 단말 장치에 해당할 수 있다. 예를 들어, 사용자는 사용자 단말"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "을 통해 특정 프로그램에 관한 소스코드와 요약문을 직접 작성할 수 있으며, 이에 관한 데이터를 입력하고 그 결과를 확인할 수 있다. 본 발명의 실시예에서 사용자는 하나 이상의 사용자로 이해될 수 있으며, 복수의 사 용자들은 하나 이상의 사용자 그룹으로 구분될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "또한, 사용자 단말은 요약문 생성 시스템을 구성하는 하나의 장치로서 요약문 생성 장치와 연동"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "하여 동작하는 컴퓨팅 장치에 해당할 수 있다. 예를 들어, 사용자 단말은 요약문 생성 장치와 연결되 어 동작 가능한 스마트폰, 노트북 또는 컴퓨터로 구현될 수 있으며, 반드시 이에 한정되지 않고, 태블릿 PC 등"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "포함하여 다양한 디바이스로도 구현될 수 있다. 또한, 사용자 단말은 요약문 생성 장치와 연동하기위한 전용 프로그램 또는 어플리케이션(또는 앱, app)을 설치하여 실행할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "요약문 생성 장치는 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법을 수행하"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "는 컴퓨터 또는 프로그램에 해당하는 서버로 구현될 수 있다. 또한, 요약문 생성 장치는 사용자 단말(11 0)과 유선 네트워크 또는 블루투스, WiFi, LTE 등과 같은 무선 네트워크로 연결될 수 있고, 네트워크를 통해 사 용자 단말과 데이터를 송·수신할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "또한, 요약문 생성 장치는 관련 동작을 수행하기 위하여 독립된 외부 시스템(도 1에 미도시함)과 연결되어"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "동작하도록 구현될 수 있다. 예를 들어, 요약문 생성 장치는 포털 시스템, SNS 시스템, 클라우드 시스템 등과 연동하여 다양한 서비스를 제공하도록 구현될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "데이터베이스는 요약문 생성 장치의 동작 과정에서 필요한 다양한 정보들을 저장하는 저장장치에 해 당할 수 있다. 예를 들어, 데이터베이스는 소스코드와 이미지에 관한 정보를 저장할 수 있고, 학습을 위한"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "트랜스포머 모델이나 그래프 처리 모델에 관한 정보를 저장할 수 있으며, 반드시 이에 한정되지 않고, 요약문"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "생성 장치가 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법을 수행하는 과정 에서 다양한 형태로 수집 또는 가공된 정보들을 저장할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 15, "content": "한편, 도 1에서, 데이터베이스는 요약문 생성 장치와 독립적인 장치로서 도시되어 있으나, 반드시 이"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 16, "content": "에 한정되지 않고, 논리적인 저장장치로서 요약문 생성 장치에 포함되어 구현될 수 있음은 물론이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 17, "content": "도 2는 본 발명에 따른 요약문 생성 장치의 시스템 구성을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 18, "content": "도 2를 참조하면, 요약문 생성 장치는 프로세서, 메모리, 사용자 입출력부 및 네트워크 입 출력부를 포함할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 19, "content": "프로세서는 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 프로시저를 실행할 수 있고, 이러한 과정에서 읽혀지거나 작성되는 메모리를 관리할 수 있으며, 메모리에 있는 휘발성 메모"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 20, "content": "리와 비휘발성 메모리 간의 동기화 시간을 스케줄 할 수 있다. 프로세서는 요약문 생성 장치의 동작 전반을 제어할 수 있고, 메모리, 사용자 입출력부 및 네트워크 입출력부와 전기적으로 연결되어"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 21, "content": "이들 간의 데이터 흐름을 제어할 수 있다. 프로세서는 요약문 생성 장치의 CPU(Central Processing Unit)로 구현될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 22, "content": "메모리는 SSD(Solid State Disk) 또는 HDD(Hard Disk Drive)와 같은 비휘발성 메모리로 구현되어 요약문 생성 장치에 필요한 데이터 전반을 저장하는데 사용되는 보조기억장치를 포함할 수 있고, RAM(Random Access Memory)과 같은 휘발성 메모리로 구현된 주기억장치를 포함할 수 있다. 또한, 메모리는 전기적으로"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 23, "content": "연결된 프로세서에 의해 실행됨으로써 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생 성 방법을 실행하는 명령들의 집합을 저장할 수 있다. 사용자 입출력부은 사용자 입력을 수신하기 위한 환경 및 사용자에게 특정 정보를 출력하기 위한 환경을 포함하고, 예를 들어, 터치 패드, 터치 스크린, 화상 키보드 또는 포인팅 장치와 같은 어댑터를 포함하는 입력 장치 및 모니터 또는 터치 스크린과 같은 어댑터를 포함하는 출력장치를 포함할 수 있다. 일 실시예에서, 사용"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 24, "content": "자 입출력부은 원격 접속을 통해 접속되는 컴퓨팅 장치에 해당할 수 있고, 그러한 경우, 요약문 생성 장치 는 독립적인 서버로서 수행될 수 있다. 네트워크 입출력부은 네트워크를 통해 사용자 단말과 연결되기 위한 통신 환경을 제공하고, 예를 들 어, LAN(Local Area Network), MAN(Metropolitan Area Network), WAN(Wide Area Network) 및 VAN(Value Added Network) 등의 통신을 위한 어댑터를 포함할 수 있다. 또한, 네트워크 입출력부는 데이터의 무선 전송을 위해 WiFi, 블루투스 등의 근거리 통신 기능이나 4G 이상의 무선 통신 기능을 제공하도록 구현될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 25, "content": "도 3은 본 발명에 따른 요약문 생성 장치의 기능적 구성을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 26, "content": "도 3을 참조하면, 요약문 생성 장치는 프로그램 입력부, 그래프 생성부, 어휘사전 생성부,"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 27, "content": "소스코드 요약문 생성부 및 제어부를 포함할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 28, "content": "프로그램 입력부는 특정 프로그램에 관한 소스코드 및 요약문을 입력받을 수 있다. 소스코드(source cod e)는 프로그래밍 언어로 작성된 원시코드에 해당할 수 있으며, 특정 목적 달성을 위해 일련의 동작들을 정의하"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 29, "content": "는 프로그래밍 언어의 시퀀스에 해당할 수 있다. 요약문은 특정 프로그램의 목적 및 동작을 설명하는 텍스트로"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 30, "content": "서 자연어들의 집합에 해당할 수 있다. 프로그램 입력부는 데이터베이스에 저장된 소스코드와 요약문 을 독출하여 메모리에 저장할 수 있으며, 이를 기초로 다음 단계의 동작들이 수행될 수 있다. 또한, 프로 그램 입력부는 사용자 단말과 연동하여 사용자에 의해 직접 작성되거나 또는 입력되는 소스코드와 요 약문을 수신할 수도 있다. 그래프 생성부는 소스코드를 분석하여 간선과 노드로 구성된 프로그램 의존 그래프(Program Dependence Graph, PDG)를 생성할 수 있다. 프로그램 의존 그래프는 노드(node)와 간선(edge)으로 구성될 수 있으며, 노드 사이의 데이터 흐름 또는 제어 흐름을 표현하기 위해 방향 간선(directed edge)을 갖는 방향 그래프로 표현될 수 있다. 여기에서, 프로그램 의존 그래프는 소스코드의 데이터 플로우(data flow)와 제어 플로우(control flow)에 따라 생성되는 그래프에 해당할 수 있다. 이때, 제어 플로우는 제어 의존 관계에 대응될 수 있고, 데이터 플로우는 데이터 의존 관계에 대응될 수 있다. 제어 의존 관계는 프로그램 실행 시의 순차적 진행 과정을 정의하기 위한 것으로, 예를 들어, B코드의 실행 여부가 A코드에 따라 결정되는 경우 B는 A에 의존관계가 있는 것으로 결정될 수 있다. 데이터 의존 관계는 제어 흐름에 영향을 받는 변수들 사이의 관계에 해당할 수 있으며, 프로그램의 실 행순서에 따라 각 실행문에서 사용된 데이터의 흐름을 표현할 수 있다. 일 실시예에서, 그래프 생성부는 소스코드의 코드 블록을 노드로 구성하고 데이터 플로우 또는 제어 플로 우로 정의되는 노드 간의 연결을 간선으로 구성할 수 있다. 보다 구체적으로, 그래프 생성부는 소스코드를 코드 블록 단위로 분해할 수 있으며, 코드 블록은 특정 연산을 수행하는 소스코드의 부분코드로서 프로그램을 구성하는 프로시저에 대응될 수 있다. 그래프 생성부는 소스코드 분석을 통해 도출된 코드 블록에 대응하 여 노드를 생성할 수 있고, 코드 블록 간의 제어 플로우 또는 데이터 플로우를 기초로 노드 간의 연결을 간선으 로 구성할 수 있다. 한편, 프로그램 의존 그래프의 노드들과 제어 플로우에 대응되는 간선들은 소스코드에 관한 제어 흐름 그래프 (Control Flow Graph, CFG)로 표현될 수 있으며, 프로그램 의존 그래프의 노드들과 데이터 플로우에 대응되는 간선들은 소스코드에 관한 데이터 흐름 그래프(Data Flow Graph, DFG)로 표현될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 31, "content": "어휘사전 생성부는 소스코드 및 요약문을 기초로 적어도 하나의 어휘사전을 생성할 수 있다. 소스코드는 변수, 변수 유형, 키워드, 특수문자, 함수, 리터럴(literal) 등 다양한 유형의 토큰들을 포함할 수 있다. 어휘"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 32, "content": "사전 생성부는 입력받은 소스코드와 요약문을 분석하여 소스코드 요약문 생성 과정에 사용되는 어휘사전을"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 33, "content": "생성할 수 있다. 이때, 어휘사전에는 소스코드 어휘사전과 요약문 어휘사전이 포함될 수 있다. 소스코드 어휘사"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 34, "content": "전은 소스코드에서 추출된 토큰(token)들의 집합으로 정의될 수 있고, 요약문 어휘사전은 요약문에서 추출된 워 드(word)들의 집합으로 정의될 수 있다. 어휘사전 생성부에 의해 생성된 어휘사전들은 이후 단계의 동작 과정에서 활용될 수 있다. 일 실시예에서, 어휘사전 생성부는 최대 빈도수를 기준으로 어휘사전에 있는 어휘 개수를 상위 N 개로 제 한할 수 있다. 이때, N은 소스코드의 크기에 비례할 수 있다. 소스코드에 포함된 변수는 프로그래머의 지정 어 휘에 따라 달라질 수 있다. 즉, 프로그램의 소스코드마다 서로 상이한 변수들이 정의되어 사용될 수 있으며, 이 는 프로그램의 분석에 있어 구조적 정보를 고려하는데 방해가 될 수 있다. 따라서, 어휘사전 생성부는 어 휘의 전체 개수를 어휘의 최대 빈도수를 기준으로 제한할 수 있다. 이에 따라, 최대 빈도수를 기준으로 상위 N 개의 어휘들만 어휘사전에 포함될 수 있다. 이때, N은 소스코드의 크기에 비례하여 가변적으로 설정될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 35, "content": "소스코드 요약문 생성부는 동작 과정에서 적어도 하나의 어휘사전이 적용되는 인코더(Encoder)와 디코더 (Decoder)를 포함하고, 소스코드에 대응되는 소스코드 임베딩을 기초로 노드의 어텐션을 산출하여 소스코드 요 약문을 생성할 수 있다. 여기에서, 소스코드 임베딩은 소스코드에 대응하는 벡터에 해당할 수 있으며, 소스코드"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 36, "content": "의 토큰별 임베딩을 기초로 1차원 벡터로 표현될 수 있다. 또한, 소스코드 요약문 생성부는 트랜스포머 모"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 37, "content": "델을 기반으로 구현되는 인코더와 디코더를 포함할 수 있다. 소스코드 요약문 생성부는 인코더를 통해 소"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 38, "content": "스코드에 대응되는 특징을 벡터로 표현하고 디코더를 통해 벡터 표현에 대응되는 요약문을 생성할 수 있다. 특"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 39, "content": "히, 소스코드 요약문 생성부는 인코더에 그래프 정보를 학습하는 GCN 계층을 추가하여 인코더를 통해 소스 코드에 대응하는 잠재표현을 생성하고, 디코더를 통해 노드의 어텐션에 따른 소스코드와의 관계를 분석하여 요"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 40, "content": "약문을 출력할 수 있다.일 실시예에서, 소스코드 요약문 생성부는 소스코드의 입력 토큰들에 대한 워드 임베딩을 통해 각 입력 토 큰 별로 각각이 해당 토큰의 의미 정보와 위치 정보를 포함하는 토큰 임베딩 및 위치 임베딩을 생성하고, 토큰 임베딩 및 위치 임베딩 간의 합 연산에 의해 생성된 임베딩 벡터를 인코더의 입력으로 사용할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 41, "content": "먼저, 소스코드 요약문 생성부는 입력 토큰과 위치 값을 인코더 신경망에 입력으로 제공하기 위해 워드 임 베딩을 통해 입력 토큰에 대응되는 벡터를 생성할 수 있다. 토큰 임베딩은 소스코드의 각 입력 토큰에 대응되는 임베딩 벡터에 해당할 수 있으며, 위치 임베딩은 임베딩 벡터에 위치 정보를 추가하기 위한 포지셔널 인코딩 (positional encoding)값에 해당할 수 있다. 일 실시예에서, 위치 임베딩은 사인(sin) 또는 코사인(cos) 함수를 통해 생성될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 42, "content": "이후, 소스코드 요약문 생성부는 토큰 임베딩 및 위치 임베딩 간의 합 연산에 의해 생성된 임베딩 벡터를 인코더의 입력으로 사용할 수 있다. 예를 들어, 토큰의 길이가 m인 입력 토큰 x = (x1, x2, …, xm)에 대해 x의 토큰 임베딩이 ex = (ex1, ex2, …, exm)이고, 위치 정보 p = (1, 2, …, m)에 대해 p의 위치 임베딩이 ep=(e1,"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 43, "content": "e2, …, em)인 경우, 소스코드 요약문 생성부는 다음의 수학식 1과 같이 두 벡터를 더해준 다음 최종적으로 인코더 신경망의 입력으로 사용할 수 있다. [수학식 1]"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 44, "content": "일 실시예에서, 소스코드 요약문 생성부는 소스코드 임베딩을 기초로 입력 토큰들의 어텐션을 산출하여 소 스코드 내 자기학습을 강화하는 셀프 어텐션(self-attention) 과정과, 셀프 어텐션 과정의 결과로서 획득된 노 드 어텐션 벡터를 완전 연결 계층에 입력하여 노드 잠재표현 벡터를 생성하는 피드 포워드(feed forward) 과정"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 45, "content": "을 포함하는 트랜스포머 과정을 수행할 수 있다. 소스코드 요약문 생성부는 트랜스포머 모델 기반의 인코 더와 디코더를 포함할 수 있고, 트랜스포머 과정은 인코더 내부에서 수행될 수 있으며 셀프 어텐션 과정과 피드 포워드 과정을 포함할 수 있다. 보다 구체적으로, 인코더 내의 트랜스포머는 셀프 어텐션(self-attention) 계층과 완전연결(Fully connected) 계층으로 구성될 수 있다. 이때, 셀프 어텐션 계층을 통해 상기의 셀프 어텐션 과정이 수행될 수 있으며, 완전 연결 계층을 통해 상기의 피드 포워드 과정이 수행될 수 있다. 셀프 어텐션 계층은 입력된 토큰 간 어텐션(attention)을 계산하여 소스코드 내 자기학습을 강화할 수 있다. 예 를 들어, Q, K, V는 가중치가 곱해진 소스코드의 벡터(즉, 소스코드 임베딩)에 해당할 수 있으며, 자기학습이기 에 모두 동일한 소스코드를 표현할 수 있다. Q와 K는 내적 후 소프트맥스(softmax)를 통해 활성화 정도가 산출 될 수 있다. 그 후, 각 토큰은 자신의 활성화 정보와 연산되어 노트 어텐션 벡터를 출력할 수 있으며, 다음의 수학식 2와 같이 표현될 수 있다. [수학식 2]"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 46, "content": "여기에서, Q, K 및 V는 각각 쿼리(Query), 키(Key), 값(Value)이고, dk는 K벡터의 크기(차원수)이며, 는 K 행렬의 전치행렬이다. 또한, 셀프 어텐션 계층에서 출력된 노드 어텐션 벡터 는 완전연결 계층에 입력될 수 있다. 완전연결 계층은 노드 어텐션 벡터 를 학습 가중치 W1과 연산한 후 ReLU를 통해 활성화할 수 있다. 완전연결 계층은 활성화된 정보를 다시 한번 학습 가중치 W2와 연산한 후 입력과 같은 피처(feature)를 갖는 벡터를 출력할 수 있으며, 다 음의 수학식 3과 같이 표현될 수 있다.[수학식 3]"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 47, "content": "여기에서, FFNN은 피드 포워드 신경망이고, 는 노드 어텐션이며, 벡터 b1 및 b2는 바이어스 벡터(bias vecto r)이다. 완전연결 계층에 의해 출력된 모든 벡터 T는 신경망 계층을 거쳐 벡터 N으로 집약될 수 있으며, N은 각 코드 블 럭의 집약된 정보이자 하나의 노드를 의미할 수 있다. 즉, 다음의 수학식 4와 같이 표현될 수 있으며, N은 노드 잠재표현 벡터에 해당할 수 있다. [수학식 4]"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 48, "content": "일 실시예에서, 소스코드 요약문 생성부는 그래프 합성곱 과정에서 프로그램 의존 그래프의 간선 정보를 기초로 노드 잠재표현 벡터 간의 합성 곱을 반복적으로 수행하여 노드의 어텐션을 산출할 수 있다. 즉, 인코더"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 49, "content": "내의 트랜스포머 과정의 출력은 그래프 합성곱 과정의 입력으로 연결될 수 있다. 이에 따라, 소스코드 요약문 생성부는 프로그램 의존 그래프의 간선 정보를 이용하여 각 노드에 대응되는 노드 잠재표현 벡터들 간의 연산을 수행할 수 있다. 보다 구체적으로, M은 프로그램 의존 그래프의 간선(edge) 정보를 갖는 행렬(matrix)에 해당할 수 있으며, M∈ Rnode num×node num의 형상을 가질 수 있다. 간선 정보가 1인 노드들의 관계는 '이웃(neighbor)'으로 결정될 수 있고, 해당 노드는 자신의 이웃 노드 hneighbor들과 더해질 수 있다. 한편, 합성곱 과정에서 마스크(mask)를 통해 노드 값에 M 정보가 반영될 수 있으며, 데이터의 특징에 따라 합성곱 연산이 반복적으로 수행될 수도 있다. 해 당 동작은 다음의 수학식 5와 같이 표현될 수 있다. [수학식 5]"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 50, "content": "여기에서, h는 특정 노드의 임베딩이고, hneightbor은 노드 h의 이웃 노드의 임베딩이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 51, "content": "일 실시예에서, 소스코드 요약문 생성부는 노드의 어텐션과 요약문을 디코더에 입력하여 요약 어휘 임베딩"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 52, "content": "을 생성할 수 있다. 여기에서, 노드의 어텐션은 노드에 관한 어텐션 벡터에 해당할 수 있으며, 요약 어휘 임베"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 53, "content": "딩은 소스코드 요약문 생성에 사용될 가능성이 있는 요약 어휘들의 임베딩 벡터에 해당할 수 있다. 소스코드 요"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 54, "content": "약문 생성부는 디코더를 통해 요약 어휘 별로 요약 어휘 임베딩을 생성할 수 있다. 한편, 디코더는 멀티 헤드 셀프 어텐션 계층(multi head self-attention), 멀티 헤드 어텐션(multi head attention) 계층 및 피드 포워드(feed forward) 계층으로 구성될 수 있다. 멀티 헤드 셀프 어텐션 계층은 인코 더의 셀프 어텐션 과정과 동일하게 수행될 수 있다. 멀티 헤드 어텐션 계층은 멀티 헤드 어텐션 과정을 수행할 수 있다. 피드 포워드 계층은 인코더의 피드 포워드 과정과 동일하게 수행될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 55, "content": "일 실시예에서, 소스코드 요약문 생성부는 노드의 어텐션을 디코더의 멀티 헤드 어텐션 과정의 입력으로"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 56, "content": "사용할 수 있다. 디코더는 자연어 토큰과 인코더 출력을 입력으로 수신할 수 있으며, 자연어 토큰은 요약문에서 추출된 토큰들에 해당할 수 있다. 한편, 자연어 토큰은 띄어쓰기를 기준으로 추출될 수 있다. 디코더 또한 인코"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 57, "content": "더와 동일하게 요약문에 관한 토큰 임베딩 및 위치 임베딩을 기초로 생성된 임베딩 벡터를 입력으로 수신할 수 있으며, 경우에 따라 임베딩 벡터는 행렬로 표현될 수 있다. 멀티 헤드 어텐션 과정은 K 및 Q에 대해 인코더의 출력, 즉 노드의 어텐션을 사용하는 반면, V는 자연어 토큰으로부터 생성된 잠재표현(또는 잠재표현 벡터)을 사 용할 수 있다. 또한, 멀티 헤드 어텐션 과정은 헤드(head) 개수만큼 다수의 어텐션들을 동시에 학습하고 그 결과들을 서로 연결하는 과정을 통해 출력을 생성할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 58, "content": "일 실시예에서, 소스코드 요약문 생성부는 요약 어휘 임베딩을 활성화 함수에 적용한 결과를 기초로 소스"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 59, "content": "코드 요약문을 생성할 수 있다. 소스코드 요약문 생성부는 디코더로부터 출력된 요약 어휘 임베딩을 활성"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 60, "content": "화 함수(예를 들어, softmax 함수)에 입력한 결과를 이용하여 요약 어휘들 중에서 최종 출력될 어휘들을 결정할"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 61, "content": "수 있다. 결과적으로, 소스코드 요약문 생성부는 최종 출력 어휘들로 구성된 소스코드 요약문을 출력으로 생성할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 62, "content": "제어부는 요약문 생성 장치의 전체적인 동작을 제어하고, 프로그램 입력부, 그래프 생성부"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 63, "content": ", 어휘사전 생성부 및 소스코드 요약문 생성부 간의 제어 흐름 또는 데이터 흐름을 관리할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 64, "content": "도 4는 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법을 설명하는 순서도이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 65, "content": "도 4를 참조하면, 요약문 생성 장치는 프로그램 입력부를 통해 특정 프로그램에 관한 소스코드 및 요 약문을 입력받을 수 있다. 이때, 프로그램 입력부는 사용자 단말과 연결되어 사용자에 의해 직접 작"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 66, "content": "성된 소스코드와 요약문을 수신할 수도 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 67, "content": "요약문 생성 장치는 그래프 생성부를 통해 소스코드를 분석하여 간선과 노드로 구성된 프로그램 의존 그래프를 생성할 수 있다(단계 S410). 소스코드에 대응되는 프로그램 의존 그래프는 소스코드의 부분 코드에 해 당하는 코드 블록을 노드로 표현하고 코드 블록 간의 데이터 흐름 또는 제어 흐름을 간선으로 표현함으로써 생 성될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 68, "content": "요약문 생성 장치는 어휘사전 생성부를 통해 소스코드 및 요약문을 기초로 적어도 하나의 어휘사전을"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 69, "content": "생성할 수 있다(단계 S420). 적어도 하나의 어휘사전은 소스코드 어휘사전 및 요약문 어휘사전을 포함할 수 있"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 70, "content": "다. 소스코드 어휘사전은 소스코드의 토큰들로 구성될 수 있으며, 요약문 어휘사전은 요약문의 단어들로 구성될 수 있다. 어휘사전 생성부는 필요에 따라 어휘사전의 크기, 즉 어휘사전에 포함되는 어휘들의 개수를 제한 적으로 적용할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 71, "content": "요약문 생성 장치는 소스코드 요약문 생성부를 통해 소스코드에 대응되는 소스코드 임베딩을 생성하"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 72, "content": "여 인코더에 입력할 수 있다(단계 S430). 즉, 소스코드 요약문 생성부는 트랜스포머 모델 기반으로 구현된 인코더와 디코더를 포함할 수 있으며, 인코더와 디코더는 동작 과정에서 적어도 하나의 어휘사전을 적용할 수 있다. 이때, 소스코드 임베딩은 1차원 벡터로 변화되어 인코더에 입력될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 73, "content": "요약문 생성 장치는 소스코드 요약문 생성부의 인코더를 통해 소스코드 임베딩을 기초로 프로그램 의 존 그래프의 노드들에 관한 제1 노드 임베딩을 생성할 수 있다(단계 S440). 이때, 해당 과정은 인코더의 트랜스 포머 과정에 해당할 수 있으며, 제1 노드 임베딩은 노드 잠재표현 벡터에 해당할 수 있으며, 소스코드 내에 존 재하는 노드들의 임베딩에 해당할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 74, "content": "요약문 생성 장치는 소스코드 요약문 생성부의 인코더를 통해 제1 노드 임베딩 및 프로그램 의존 그 래프의 간선 정보를 이용하여 그래프 어텐션(graph attention)을 수행할 수 있다(단계 S450). 이때, 해당 과정 은 인코더의 그래프 합성곱 과정에 해당할 수 있다. 즉, 소스코드 내 존재하는 노드들의 임베딩을 기초로 그래 프 합성곱 과정이 수행된 결과 그래프 어텐션에 관한 노드들의 임베딩이 갱신될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 75, "content": "요약문 생성 장치는 소스코드 요약문 생성부의 디코더를 통해 그래프 어텐션에 따른 노드들의 제2 노"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 76, "content": "드 임베딩 및 요약문을 기초로 요약 어휘들에 관한 요약 어휘 임베딩을 생성할 수 있다(단계 S460). 이때, 제2"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 77, "content": "노드 임베딩은 인코더의 출력으로서 노드의 어텐션에 해당할 수 있으며, 디코더는 인코더의 출력과 요약문을 입"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 78, "content": "력으로 수신하여 요약 어휘 임베딩을 출력을 위한 신경망 학습을 수행할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 79, "content": "이후, 요약문 생성 장치는 소스코드 요약문 생성부를 통해 요약 어휘 임베딩을 활성화 함수에 적용할"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 80, "content": "수 있고, 그 결과를 이용하여 소스코드에 관한 소스코드 요약문을 생성할 수 있다(단계 S470)."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 81, "content": "도 5는 본 발명에 따른 요약문 생성 인공지능 프로그램을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 82, "content": "도 5를 참조하면, 본 발명에 따른 요약문 생성 인공지능 방법은 프로그램을 통해 구현될 수 있다. 요약문 생성 을 위한 인공지능 프로그램은 소스코드를 입력받아 자연어 요약문을 출력하는 모델로 트랜스포머, 그래프 처리 모델인 GCN(graph convolutional network) 기반의 code2seq모델에 해당할 수 있다. 기존의 트랜스포머 모 델은 두 개의 순환신경망이 각각 인코더-디코더의 역할을 수행한 반면, 본 발명에 따른 모델은 인코더(Encode r)에 그래프 정보를 학습하는 GCN 계층(도 5의 PDG GCN)이 추가된 형태로 구현될 수 있다. 즉, 입력된 소스코드 는 1차원의 벡터로 변환되어 인코더(Encoder)에 입력될 수 있으며, 인코더(Encoder)는 학습된 잠재표현을 출력 할 수 있다. 디코더(Decoder)는 인코더(Encoder)의 출력을 입력받아 소스코드와의 관계를 학습한 후 소스코드에"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 83, "content": "대응되는 요약문을 출력할 수 있다. 도 6은 본 발명에 따른 프로그램 의존 그래프를 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 84, "content": "도 6을 참조하면, 요약문 생성 장치는 그래프 생성부를 통해 소스코드를 분석하여 간선과 노드 로 구성된 프로그램 의존 그래프를 생성할 수 있다. 프로그램 의존 그래프는 도 6과 같이 소스코드의 데이 터 흐름(data flow)과 제어 흐름(control flow)에 따라 그래프를 생성할 수 있다. 그래프는 노드들과 노드 간의 간선으로 구성될 수 있으며, 노드는 부분 소스코드를 의미하고 간선은 프로그램의 작동에 따라 부분 소스코드 간의 연결을 의미할 수 있다. 또한, 간선은 데이터 흐름과 제어 흐름을 나타내는 간선으로 분류될 수 있다. 데이터 흐름은 이전에 사용 된 데이터의 노드를 기준으로 데이터가 다른 노드에서 사용되는 것을 의미할 수 있다. 제어 흐름은 소스코드가 실행되기 위해 거쳐야 하는 코드 흐름을 의미할 수 있다. 그래프 생성부는 생성된 노드를 기준으로 소스코드를 분리할 수 있고, 분리된 소스코드 간 간선 정보를 데이터로 생성할 수 있다. 이후, 간선 데이 터는 GCN 계층의 합성곱(convolution) 레이어에서 연결 노드 간 정보의 연산을 수행하기 위해 사용될 수 있다. 도 7은 본 발명에 따른 소스코드 토큰의 유형을 설명하는 도면이다. 도 7을 참조하면, 특정 프로그램에 관한 소스코드는 변수, 변수 유형, 키워드, 특수문자, 함수 및 리터럴 과 같은 다양한 종류의 토큰으로 구성될 수 있다. 이 중에서 변수 유형, 특수문자 등은 서로 다른 소스코드에서 공용으로 사용되는 어휘에 해당할 수 있다. 하지만, 변수는 프로그래머의 지정 어휘에 따라 달라질 수 있다. 즉, 소스코드에 따라 무분별한 변수가 정의될 수 있고, 이는 프로그램의 분석에서 구조적 정보를 고려하는 데 방해가 될 수 있다. 따라서, 어휘의 전체 수는 어휘의 최대 빈도수를 기준으로 제한될 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 85, "content": "도 8은 소스코드 입력에 따른 그래프 및 요약문 생성 과정의 일 실시예를 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 86, "content": "도 8을 참조하면, 요약문 생성 장치는 특정 프로그램에 관한 소스코드를 입력으로 수신할 수 있으며,"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 87, "content": "소스코드를 분석하여 소스코드 요약문을 생성할 수 있다. 도 8에서, 소스코드는 Main 함수를 정의하는 코드에 해당할 수 있고, 2번째 라인의 'System.out.println (“Hello World”);'은 java 표준 입출력 크래스인 System이라는 클래스의 out이라는 객체를 이용해서 println()메소드를 호출하고, 해당 메소드를 통해 괄호 안에 있는 입력값인 “Hello World”라는 텍스트를 화면 에 출력하는 동작을 정의하는 부분 소스코드에 해당할 수 있다. 또한, 3번째 라인의 'Boolean pasCall = true'는 Boolean 형 변수 passCall을 선언하고 true 값을 할당하는 동 작을 정의하고, 4번째 라인의 'if(pasCall == true){'은 변수 pasCall의 값이 true 값인지를 비교하는 동작을 정의하며, 5번째 라인의 'pasCall = false'은 변수 pasCall에 false 값을 할당하는 동작을 정의할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 88, "content": "이에 따라, 요약문 생성 장치는 소스코드에 관한 소스코드 요약문으로서 “change Boolean value if Boolean value is true”라는 텍스트를 출력할 수 있다."}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 89, "content": "또한, 요약문 생성 장치는 소스코드 요약문 생성을 위하여 소스코드에 대응되는 프로그램 의존"}
{"patent_id": "10-2021-0150771", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 90, "content": "그래프를 생성할 수 있다. 도 8에서, 요약문 생성 장치는 소스코드에서 3 ~ 5 번째 라인들의 코 드 블록에 대응되는 노드들(831, 832 및 833)을 생성하고 노드들 사이를 데이터 흐름에 따른 간선과 제어 흐름에 따른 간선으로 연결하는 과정을 통해 프로그램 의존 그래프를 생성할 수 있다.상기에서는 본 발명의 바람직한 실시예를 참조하여 설명하였지만, 해당 기술 분야의 숙련된 당업자는 하기의 특 허 청구의 범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명을 다양하게 수정 및 변경시킬 수 있음을 이해할 수 있을 것이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 요약문 생성 시스템을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 2, "content": "도 2는 본 발명에 따른 요약문 생성 장치의 시스템 구성을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 3, "content": "도 3은 본 발명에 따른 요약문 생성 장치의 기능적 구성을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 4, "content": "도 4는 본 발명에 따른 인공지능 분석 기반 프로그램 소스코드의 요약문 생성 방법을 설명하는 순서도이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 5, "content": "도 5는 본 발명에 따른 요약문 생성 인공지능 프로그램을 설명하는 도면이다. 도 6은 본 발명에 따른 프로그램 의존 그래프를 설명하는 도면이다. 도 7은 본 발명에 따른 소스코드 토큰의 유형을 설명하는 도면이다."}
{"patent_id": "10-2021-0150771", "section": "도면", "subsection": "도면설명", "item": 6, "content": "도 8은 소스코드 입력에 따른 그래프 및 요약문 생성 과정의 일 실시예를 설명하는 도면이다."}
