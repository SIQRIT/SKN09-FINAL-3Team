{"patent_id": "10-2022-0128762", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0044269", "출원번호": "10-2022-0128762", "발명의 명칭": "반도체 장치", "출원인": "삼성전자주식회사", "발명자": "전정훈"}}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 비트 데이터를 2비트 단위의 제1 그룹 데이터 및 제2 그룹 데이터로 구분하여 수신하고, 상기 제2 그룹데이터를 소정 기간 지연시키고, 상기 제1 그룹 데이터 및 지연된 상기 제2 그룹 데이터를 출력하는 인코더, 그리고상기 제1 그룹 데이터 및 지연된 상기 제2 그룹 데이터를 함께 외부 반도체 장치에 출력하는 출력 드라이버를 포함하는 반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 인코더는 제1 클록에 동기하여 상기 제1 그룹 데이터를 출력하고, 상기 제1 클록과 상기 소정 기간의 위상차를 갖는 제2 클록에 동기하여 상기 제2 그룹 데이터를 출력하는,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 외부 반도체 장치로부터 수신된 신호를 증폭하여 수신 신호로 출력하는 증폭기, 그리고상기 수신 신호를 하나의 단위 기간(UI: unit interval) 동안 디코딩하여 현재 UI 출력 데이터를 획득하고, 상기 현재 UI 출력 데이터에 이전 UI PAM-4(4 level Pulse Amplitude Modulation) 데이터를 감산하여 현재 UIPAM-4 데이터를 획득하고, 상기 현재 UI PAM-4 데이터를 비복귀 제로(NRZ: Non-Return to Zero) 신호로 디코딩하는 디코더를 더 포함하는 반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 디코더는, 상기 수신 신호를 복수의 기준 전압과 각각 비교하여 상기 수신 신호의 레벨에 대응하는 값을 갖는 n-비트의 감지 신호를 출력하는 비교기,상기 감지 신호를 m-비트의 상기 현재 UI 출력 데이터로 변환하는 n비트-to-m비트 디코더,상기 현재 UI 출력 데이터에서 상기 이전 UI PAM-4 데이터를 감산하여 상기 현재 UI PAM-4 데이터를 출력하는m-비트 감산기, 그리고상기 현재 UI PAM-4 데이터를 리타이밍하여 상기 m-비트 감산기에 제공하는 적어도 하나의 디플립플롭을 포함하는,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 디코더는, 복수의 내부 클록 중 대응하는 하나를 제1 내부 클록으로 사용하여 상기 수신 신호를 샘플링하고 홀딩하는 복수공개특허 10-2024-0044269-3-의 샘플 앤 홀드 회로,상기 복수의 샘플 앤 홀드 회로 중 대응하는 하나의 샘플 앤 홀드가 출력하는 신호의 레벨에 대응하는 값을 갖는 n-비트의 감지 신호를 출력하는 복수의 비교기,상기 감지 신호를 m-비트의 상기 현재 UI 출력 데이터로 변환하는 복수의 n비트-to-m비트 디코더(n 및 m는 양수이며, n>m임),상기 현재 UI 출력 데이터에서 상기 이전 UI PAM-4 데이터를 감산하여 상기 현재 UI PAM-4 데이터를 출력하는복수의 m-비트 감산기, 상기 복수의 내부 클록 중 대응하는 다른 하나를 제2 내부 클록으로 사용하여 상기 현재 UI PAM-4 데이터를 상기 복수의 m-비트 감산기 중 대응하는 m-비트 감산기에 제공하는 복수의 디플립플롭, 그리고상기 복수의 m-비트 감산기에 연결된 복수의 입력단 및 하나의 출력단을 포함하고, 상기 복수의 입력단에 수신된 복수의 상기 현재 UI PAM-4 데이터 중 상기 복수의 내부 클록에 따라 선택된 하나를 상기 하나의 출력단으로출력하는 복수의 멀티플렉서를 포함하는,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서,상기 하나의 단위 기간은 상기 소정 기간과 동일한 길이의 기간인,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제2항에 있어서, 상기 제1 클록과 상기 제2 클록은 쿼터 레이트 클록이고, 상기 위상차는 90도인,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 복수의 비트 데이터는 2비트 단위로 교번하여 상기 제1 그룹 데이터와 상기 제2 그룹 데이터로 구분되는,반도체 장치."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "메모리 셀 어레이 및 듀오-바이너리 PAM-4에 기반하여 상기 메모리 셀 어레이로부터의 복수의 비트 데이터를 2비트 단위의 제1 그룹 데이터 및 제2 그룹 데이터로 구분하여 수신하고, 상기 제2 그룹 데이터를 하나의 단위기간(UI: unit interval) 동안 지연시키고, 상기 제1 그룹 데이터 및 지연된 상기 제2 그룹 데이터를 데이터 입출력 신호로서 함께 출력하는 송신기를 포함하는 메모리 장치, 그리고상기 데이터 입출력 신호를 하나의 UI 동안 디코딩하여 현재 UI 출력 데이터를 획득하고, 상기 현재 UI 출력 데이터에 이전 UI PAM-4(4 level Pulse Amplitude Modulation) 데이터를 감산하여 현재 UI PAM-4 데이터를 획득하고, 상기 현재 UI PAM-4 데이터를 비복귀 제로(NRZ: Non-Return to Zero) 신호로 디코딩하는 수신기를 포함하는 메모리 컨트롤러를 포함하는 메모리 시스템."}
{"patent_id": "10-2022-0128762", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "메모리 셀 어레이, 상기 메모리 셀 어레이의 i-비트 병렬 데이터를 j-비트의 직렬 데이터로 변환하는 직렬화기(i 및 j는 양수이며,i>j임),공개특허 10-2024-0044269-4-제1 클록에 기초하여 상기 j-비트의 직렬 데이터의 제1 비트 데이터와 제2 비트 데이터를 제1 인코딩 데이터로출력하고, 상기 제1 클록과 하나의 단위 기간의 위상차를 갖는 제2 클록에 기초하여 상기 j-비트의 직렬 데이터의 제3 비트 데이터와 제4 비트 데이터를 제2 인코딩 데이터로 출력하는 인코더, 그리고상기 제1 인코딩 데이터를 두 개의 단위 기간 동안 출력하는 제1 드라이버 블록 및 상기 제2 인코딩 데이터를두 개의 단위 기간 동안 출력하는 제2 드라이버 블록을 포함하는 출력 드라이버를 포함하는 메모리 장치."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 따른 반도체 장치는, 복수의 비트 데이터를 2비트 단위의 제1 그룹 데이터 및 제2 그룹 데이터로 구 분하여 수신하고, 제2 그룹 데이터를 소정 기간 지연시키고, 제1 그룹 데이터 및 지연된 제2 그룹 데이터를 출력 하는 인코더, 그리고 제1 그룹 데이터 및 지연된 제2 그룹 데이터를 함께 외부 반도체 장치에 출력하는 출력 드 라이버를 포함한다."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "개시 내용은 반도체 장치에 관한 것이다."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근에는 인공지능, 고화질 영상 스트리밍, 빅 데이터 등을 전송하기 위해 높은 속도의 데이터 통신이 요구된다. 이에 따라 메모리 인터페이스의 대역폭의 한계를 극복하기 위한 연구가 계속되고 있다. 비복귀 제로 (NRZ: Non-Return to Zero) 타입의 인코딩을 기반으로 하는 신호 변조 방식으로는 이러한 고용량 및 고속의 데 이터 전송 요구를 만족시키기 어렵다. 기존의 NRZ 타입의 인코딩 방식을 보완하기 위해, 펄스 진폭 변조(PAM: Pulse Amplitude Modulation)와 같은 다양한 멀티 레벨 시그널링 방식이 제안되고 있다."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "일 실시예는 나이퀴스트(Nyquist) 주파수가 PAM-4 인코딩 신호에 비해 더 작은 신호로 인코딩을 수행하는 반도 체 장치를 제공하고자 한다. 일 실시예는 하프 레이트 클록 신호 또는 쿼터 레이트 클록 신호에 기초하여 인코딩 및 디코딩을 수행하는 반도 체 장치를 제공하고자 한다."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "이러한 기술적 과제를 해결하기 위한 일 실시예에 따른 반도체 장치는, 복수의 비트 데이터를 2비트 단위의 제1 그룹 데이터 및 제2 그룹 데이터로 구분하여 수신하고, 제2 그룹 데이터를 소정 기간 지연시키고, 제1 그룹 데 이터 및 지연된 제2 그룹 데이터를 출력하는 인코더, 그리고 제1 그룹 데이터 및 지연된 제2 그룹 데이터를 함 께 외부 반도체 장치에 출력하는 출력 드라이버를 포함한다. 인코더는 제1 클록에 동기하여 제1 그룹 데이터를 출력하고, 제1 클록과 소정 기간의 위상차를 갖는 제2 클록에 동기하여 제2 그룹 데이터를 출력할 수 있다. 외부 반도체 장치로부터 수신된 신호를 증폭하여 수신 신호로 출력하는 증폭기, 그리고 수신 신호를 하나의 단 위 기간(UI: unit interval) 동안 디코딩하여 현재 UI 출력 데이터를 획득하고, 현재 UI 출력 데이터에 이전 UI PAM-4(4 level Pulse Amplitude Modulation) 데이터를 감산하여 현재 UI PAM-4 데이터를 획득하고, 현재 UI PAM-4 데이터를 비복귀 제로(NRZ: Non-Return to Zero) 신호로 디코딩하는 디코더를 더 포함할 수 있다. 디코더는, 수신 신호를 복수의 기준 전압과 각각 비교하여 수신 신호의 레벨에 대응하는 값을 갖는 n-비트의 감 지 신호를 출력하는 비교기, 감지 신호를 m-비트의 현재 UI 출력 데이터로 변환하는 n비트-to-m비트 디코더, 현 재 UI 출력 데이터에서 이전 UI PAM-4 데이터를 감산하여 현재 UI PAM-4 데이터를 출력하는 m-비트 감산기, 그 리고 현재 UI PAM-4 데이터를 리타이밍하여 m-비트 감산기에 제공하는 적어도 하나의 디플립플롭을 포함할 수 있다. 적어도 하나의 디플립플롭은 제1 클록 및 제2 클록의 주파수의 4배의 주파수를 갖는 제3 클록에 기초하여 현재 UI PAM-4 데이터를 리타이밍할 수 있다.적어도 하나의 디플립플롭은, 수신 신호가 소정 패턴을 갖는 경우 리셋될 수 있다. 디코더는, 복수의 내부 클록 중 대응하는 하나를 제1 내부 클록으로 사용하여 수신 신호를 샘플링하고 홀딩하는 복수의 샘플 앤 홀드 회로, 복수의 샘플 앤 홀드 회로 중 대응하는 하나의 샘플 앤 홀드가 출력하는 신호의 레 벨에 대응하는 값을 갖는 n-비트의 감지 신호를 출력하는 복수의 비교기, 감지 신호를 m-비트의 현재 UI 출력 데이터로 변환하는 복수의 n비트-to-m비트 디코더(n 및 m는 양수이며, n>m임), 현재 UI 출력 데이터에서 이전 UI PAM-4 데이터를 감산하여 현재 UI PAM-4 데이터를 출력하는 복수의 m-비트 감산기, 복수의 내부 클록 중 대 응하는 다른 하나를 제2 내부 클록으로 사용하여 현재 UI PAM-4 데이터를 복수의 m-비트 감산기 중 대응하는 m- 비트 감산기에 제공하는 복수의 디플립플롭, 그리고 복수의 m-비트 감산기에 연결된 복수의 입력단 및 하나의 출력단을 포함하고, 복수의 입력단에 수신된 복수의 현재 UI PAM-4 데이터 중 복수의 내부 클록에 따라 선택된 하나를 하나의 출력단으로 출력하는 복수의 멀티플렉서를 포함할 수 있다. 제1 내부 클록으로 사용되는 제3 내부 클록과 제2 내부 클록으로 사용되는 제4 내부 클록의 위상차는 90도일 수 있다. 수신 신호를 샘플링하는 데 사용되는 제3 내부 클록과 수신 신호에 의해 생성된 현재 UI PAM-4 데이터를 하나의 출력단으로 출력하는 데 사용되는 제4 내부 클록의 위상차는 90도일 수 있다. 하나의 단위 기간은 소정 기간과 동일한 길이의 기간일 수 있다. 제1 클록과 제2 클록은 쿼터 레이트 클록이고, 위상차는 90도일 수 있다. 복수의 비트 데이터는 2비트 단위로 교번하여 제1 그룹 데이터와 제2 그룹 데이터로 구분될 수 있다. 출력 드라이버는 소정 기간과 동일한 기간 동안 제1 그룹 데이터 및 지연된 제2 그룹 데이터를 함께 출력할 수 있다. 출력 드라이버는, 제1 전압과 제2 전압 사이에 직렬로 연결되고, 제1 그룹 데이터 또는 제2 그룹 데이터가 각각 의 게이트에 인가되는 풀업 트랜지스터 및 풀다운 트랜지스터를 포함하는 드라이버 블록을 복수개 포함할 수 있 다. 제1 그룹 데이터의 최상위 비트에 대응하는 드라이버 블록의 개수가, 제1 그룹 데이터의 최하위 비트에 대응하 는 드라이버 블록의 개수보다 더 많고, 제2 그룹 데이터의 최상위 비트에 대응하는 드라이버 블록의 개수가, 제 2 그룹 데이터의 최하위 비트에 대응하는 드라이버 블록의 개수보다 더 많을 수 있다. 일 실시예에 따른 메모리 시스템은, 메모리 셀 어레이 및 듀오-바이너리 PAM-4에 기반하여 메모리 셀 어레이로 부터의 복수의 비트 데이터를 2비트 단위의 제1 그룹 데이터 및 제2 그룹 데이터로 구분하여 수신하고, 제2 그 룹 데이터를 하나의 단위 기간(UI: unit interval) 동안 지연시키고, 제1 그룹 데이터 및 지연된 제2 그룹 데이 터를 데이터 입출력 신호로서 함께 출력하는 송신기를 포함하는 메모리 장치, 그리고 데이터 입출력 신호를 하 나의 UI 동안 디코딩하여 현재 UI 출력 데이터를 획득하고, 현재 UI 출력 데이터에 이전 UI PAM-4(4 level Pulse Amplitude Modulation) 데이터를 감산하여 현재 UI PAM-4 데이터를 획득하고, 현재 UI PAM-4 데이터를 비복귀 제로(NRZ: Non-Return to Zero) 신호로 디코딩하는 수신기를 포함하는 메모리 컨트롤러를 포함한다. 듀오-바이너리 PAM-4에 기반한 데이터 입출력 신호는 7개의 심볼을 표현하는 전압 레벨을 갖고, 최대 천이 전압 레벨은 3 레벨일 수 있다. 송신기는, PAM-4에 기반하여 메모리 셀 어레이로부터의 복수의 비트 데이터를 데이터 입출력 신호로서 출력하고, PAM-4에 기반한 데이터 입출력 신호는 4개의 심볼을 표현하는 전압 레벨을 갖고, 최대 천이 전압 레 벨은 3 레벨일 수 있다. 송신기 및 수신기 각각은, 하나의 주기가 네 개의 단위 기간인 복수의 클록을 사용하여 동작할 수 있다. 일 실시예에 따른 메모리 장치는, 메모리 셀 어레이, 메모리 셀 어레이의 i-비트 병렬 데이터를 j-비트의 직렬 데이터로 변환하는 직렬화기(i 및 j는 양수이며, i>j임), 제1 클록에 기초하여 j-비트의 직렬 데이터의 제1 비 트 데이터와 제2 비트 데이터를 제1 인코딩 데이터로 출력하고, 제1 클록과 하나의 단위 기간의 위상차를 갖는 제2 클록에 기초하여 j-비트의 직렬 데이터의 제3 비트 데이터와 제4 비트 데이터를 제2 인코딩 데이터로 출력 하는 인코더, 그리고 제1 인코딩 데이터를 두 개의 단위 기간 동안 출력하는 제1 드라이버 블록 및 제2 인코딩 데이터를 두 개의 단위 기간 동안 출력하는 제2 드라이버 블록을 포함하는 출력 드라이버를 포함한다."}
{"patent_id": "10-2022-0128762", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 첨부한 도면을 참고로 하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지 식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현 될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통 하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도면을 참고하여 설명한 흐름도에서, 동작 순서는 변 경될 수 있고, 여러 동작들이 병합되거나, 어느 동작이 분할될 수 있고, 특정 동작은 수행되지 않을 수 있다. 또한, 단수로 기재된 표현은 \"하나\" 또는 \"단일\" 등의 명시적인 표현을 사용하지 않은 이상, 단수 또는 복수로 해석될 수 있다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소를 설명하는데 사용될 수 있지만, 구성요소는 이러한 용어에 의해 한정되지는 않는다. 이들 용어는 하나의 구성요소를 다른 구성요소로부터 구별 하는 목적으로 사용될 수 있다. 도 1은 일 실시예에 따른 메모리 시스템의 예시 블록도이다. 도 1을 참고하면, 메모리 시스템은 메모리 장치 및 메모리 컨트롤러를 포함한다. 어떤 실시예에 서, 메모리 장치와 메모리 컨트롤러는 메모리 인터페이스를 통해 연결되어 메모리 인터페이스를 통해 신호를 주고받을 수 있다. 메모리 장치는 메모리 셀 어레이(MEMORY CELL ARRAY) 및 데이터 입출력 회로(DATA I/O CIRCUIT)를 포함한다. 메모리 셀 어레이는 복수의 행과 복수의 열에 연결된 복수의 메모리 셀을 포함 한다. 어떤 실시예에서, 행은 워드라인에 의해 정의되고, 열은 비트라인에 의해 정의될 수 있다. 데이터 I/O 회 로는 외부로부터 전달되는 데이터를 메모리 셀 어레이에 저장하거나 또는 메모리 셀 어레이에 저장된 데이터를 메모리 장치 외부(즉, 메모리 컨트롤러 등)에 출력할 수 있다. 데이터 I/O 회로 는 송신기(TRANSMITTER) 및 수신기(RECEIVER)를 포함할 수 있다. 송신기는 메모리 셀 어 레이로부터 데이터(DATA)를 수신하여 인코딩하고, 인코딩된 신호에 기초하여 데이터 입출력 신호(DQ)를 출 력할 수 있다. 일 실시예에서, 메모리 컨트롤러와 메모리 장치 사이에서 통신되는 신호를 변조하기 위해 다중 기호(또는 다중 레벨) 변조 방식이 사용될 수 있다. 다중 기호 변조 방식의 예는 펄스 진폭 변조 (PAM: pulse amplitude modulation), 직교 진폭 변조(QAM: quadrature amplitude modulation), 직교 위상 편이 키잉(QPSK: quadrature phase shift keying) 및/또는 기타를 포함하지만 이에 제한되지 않는다. 다중 기호 신 호는 1비트 이상의 정보를 인코딩하기 위해 적어도 3개의 레벨들을 포함하는 변조 방식을 사용하여 변조된 신호 일 수 있다. 다중 기호 변조 방식 및 기호들은 대안적으로 비-이진, 다중-비트, 또는 고차 변조 방식 및 기호들 로 지칭될 수 있다. 일례로, 송신기는 PAM-n(n-level Pulse Amplitude Modulation)에 따라 a-비트 수의 심볼을 포함하여, 2a(=n)개의 데이터 값을 표현할 수 있는 DQ를 생성하여 출력할 수 있다. 송신기는 PAM-4 에 따라 2-비트 수의 심볼을 포함하여 4개의 데이터 값(00, 01, 10, 11)을 표현할 수 있는 DQ를 생성하여 출력 할 수 있다. 다른 예로, 송신기는 듀오-바이너리(duo-binary) PAM-4에 따라 3-비트 수의 심볼을 포함하여 7개의 데이터 값(000, 001, 010, 011, 100, 101, 110)을 표현할 수 있는 DQ를 생성하여 출력할 수 있다. 이하 에서, 데이터 I/O 회로는 듀오-바이너리 PAM-4 방식을 사용하는 것으로 가정하여 설명한다. 도 1에서는 DQ는 단일(single) 신호로서 구현되어 메모리 장치와 메모리 컨트롤러 사이의 단일 라인 을 통해 송수신될 수 있다. 어떤 실시예에서, DQ는 차동(differential) 신호로 구현되어 메모리 장치와 메 모리 컨트롤러 사이의 차동 라인들을 통해 송수신될 수 있다. 수신기는 메모리 컨트롤러로부터 제공되는 DQ를 수신하고, 수신한 DQ를 디코딩하여 데이터(DATA)를 생성할 수 있다. 수신기는 생성한 데이 터(DATA)를 메모리 셀 어레이에 출력할 수 있다. 메모리 장치의 수신기는 메모리 컨트롤러(12 0)의 수신기와 실질적으로 동일하므로, 메모리 컨트롤러의 수신기에 대한 이하의 설명을 참조한 다. 메모리 컨트롤러는 메모리 장치로 신호를 제공하여 메모리 장치의 메모리 동작을 제어한다. 신 호는 커맨드(CMD)와 어드레스(ADDR)를 포함할 수 있다. 어떤 실시예에서, 메모리 컨트롤러는 커맨드(CMD) 와 어드레스(ADDR)를 메모리 장치로 제공하여 메모리 셀 어레이에 액세스하고 읽기 또는 쓰기 등의 메모리 동작을 제어할 수 있다. 읽기 동작에 따라 메모리 셀 어레이에서 메모리 컨트롤러로 데이터가 DQ로 전달되고, 쓰기 동작에 따라 메모리 컨트롤러에서 메모리 셀 어레이에 데이터가 DQ로 전달될 수 있다. 메모리 장치와 메모리 컨트롤러는 직렬 인터페이싱 방식으로 DQ를 상호 송수신할 수 있다. 메모리 컨 트롤러는 메모리 시스템 외부의 호스트로부터의 요청에 따라 메모리 장치에 액세스할 수 있다. 메모리 컨트롤러는 다양한 프로토콜을 사용하여 호스트와 통신할 수 있다. 예를 들어, 메모리 컨트롤러 는 외부의 호스트와 병렬 인터페이싱 방식으로 통신할 수 있다. 어떤 실시예에서, 메모리 컨트롤러는 호스트와 직렬 인터페이싱 방식으로 통신할 수 있다. 커맨드(CMD)는 활성화(activate) 커맨드, 읽기/쓰기 커맨드, 및 리프레시 커맨드를 포함할 수 있다. 활성화 커 맨드는 메모리 셀 어레이에 데이터를 쓰거나 메모리 셀 어레이로부터 데이터를 읽기 위해 메모리 셀 어레이의 대상 행을 액티브 상태로 전환하는 커맨드일 수 있다. 활성화 커맨드에 응답하여 대상 행의 메모 리 셀이 활성화(예를 들면, 구동)될 수 있다. 읽기/쓰기 커맨드는 액티브 상태로 전환된 행의 대상 메모리 셀에 서 읽기 또는 쓰기 동작을 수행하기 위한 커맨드일 수 있다. 리프레시 커맨드는 메모리 셀 어레이에서 리 프레시 동작을 수행하기 위한 커맨드일 수 있다. 커맨드(CMD)가 읽기 커맨드일 때, 송신기는 메모리 셀 어레이로부터 데이터(DATA)를 수신할 수 있다. 송신기는 데이터(DATA)를 듀오-바이너리 PAM-4를 기반으로 인코딩하고, 인코딩된 신호를 DQ로서 출력할 수 있다. 송신기는 복수의 비트 데이터(DATA)를 복수의 2-비트 그룹 데이터로 구분할 수 있다. 예를 들어, 송 신기는 8-비트 데이터인 11001001을 2-비트 그룹 데이터인 11, 00, 10, 01로 구분할 수 있다. 여기서, 구 분된 순서에 따라 00, 01은 제1 그룹 데이터(예를 들어, 제1 그룹 데이터)이고, 11, 10은 제2 그룹 데이터(예를 들어, 홀수 번째 그룹 데이터)일 수 있다. 송신기는 2-비트 그룹 데이터를 복수의 UI(unit interval) 동안출력할 수 있다. 예를 들어, 송신기는 11을 두 개의 UI 동안 DQ로서 출력할 수 있다. 송신기는 제1 그룹 데이터와 제2 그룹 데이터 중 어느 하나를 하나의 UI만큼 지연시키고, 두 그룹 데이터를 함께 DQ로서 출력 할 수 있다. 예를 들어, 송신기가 제2 그룹 데이터를 하나의 UI만큼 지연시키는 경우, 송신기는 제1 UI 내지 제2 UI에서 제1 그룹 데이터 중 00을 DQ로서 출력하고, 제2 UI 내지 제3 UI에서 제2 그룹 데이터 중 11 을 DQ로서 출력하며, 제3 UI 내지 제4 UI에서 제1 그룹 데이터 중 01을 DQ로서 출력하고, 제4 UI 내지 제5 UI에 서 제2 그룹 데이터 중 10을 DQ로서 출력할 수 있다. 또한, 송신기는 제1 UI에서는 제1 그룹 데이터 중 00 을 DQ로서 출력하고, 제2 UI에서는 제1 그룹 데이터 중 00과 제2 그룹 데이터 중 11을 함께 DQ로서 출력하고, 제3 UI에서는 제2 그룹 데이터 중 11과 제1 그룹 데이터 중 01을 함께 DQ로서 출력할 수 있다. 메모리 컨트롤러의 데이터 I/O 회로는 데이터를 메모리 장치에 DQ로서 출력하거나 또는 메모리 장치로부터 출력된 DQ를 수신할 수 있다. 데이터 I/O 회로는 송신기 및 수신기를 포함할 수 있다. 송신기는 외부의 호스트로부터 제공되는 데이터를 메모리 장치에 전송할 수 있다. 메모리 컨트롤러의 송신기는 메모리 장치의 송신기와 실질적으로 동일하므로, 메모리 장치의 송신기에 대한 상기의 설명을 참조한다. 수신기는 DQ를 수신하고, 듀오-바이너리 PAM-4를 기반으로 디코딩할 수 있다. 일 실시예에서, 수신기는 DQ를 듀오-바이너리 PAM-4를 기반으로 디코딩하여 PAM-4 데이 터를 생성할 수 있다. 구체적으로, 수신기는 현재 UI에서 DQ를 디코딩하여 현재 UI 출력 데이터를 획득하 고, 현재 UI 출력 데이터를 이전 UI의 PAM-4 데이터와 감산하여, 현재 UI의 PAM-4 데이터를 획득할 수 있다. 수 신기는 듀오-바이너리 PAM-4를 기반으로 인코딩된 DQ를 PAM-4 데이터로 복원할 수 있다. 메모리 장치가 높은 데이터 레이트로 DQ를 송신할 때, DQ의 아이 오프닝 높이(eye opening height)와 아이 오프닝 너비(eye opening width)가 충분히 확보할 필요가 있다. 본 개시에 따른 송신기는 듀오-바이너리 PAM-4에 따라 인코딩된 DQ를 출력하므로, 크로스톡의 영향이 적고, 충분한 오프닝 높이 및 아이 오프닝 너비를 확보할 수 있다. 그리고, 듀오-바이너리 PAM-4 신호의 나이퀴스트 주파수는 PAM-4 신호의 나이퀴스트 주파수보 다 더 낮아서, 송신기에 따르면, 고주파수 대역에서의 채널 삽입 손실(channel insertion loss)을 방지할 수 있다. 송신기는 낮은 주파수의 클록을 사용하여 인코딩 및 디코딩을 수행하므로, 전력 소모가 감소되어, 에너지 효율을 증가시킬 수 있는 장점이 있다. 메모리 장치는 반도체 소자를 기반으로 하는 저장 장치일 수 있다. 어떤 실시예에서, 메모리 장치는 DRAM(Dynamic Random Access Memory) 장치를 포함할 수 있다. 어떤 실시예에서, 메모리 장치는 송신기 또는 수신기가 사용되는 다른 휘발성 또는 비휘발성 메모리 장치를 포함할 수 있다. 이하에서, 도 2 내지 도 9를 참조하여, 메모리 장치의 데이터 I/O 회로에 대해 설명한다. 다만, 이하 에서 메모리 장치의 데이터 I/O 회로에 대한 설명은 메모리 컨트롤러의 데이터 I/O 회로에 동일하게 적용될 수 있다. 도 2는 일 실시예에 따른 메모리 장치를 나타낸 블록도이다. 도 2를 참고하면, 메모리 장치는 메모리 셀 어레이, 센스 앰프, 제어 로직 회로, 어드레스 버퍼, 행 디코더, 열 디코더, I/O 게이팅 회로, 클록 버퍼, 및 데이터 I/O 회로 를 포함한다. 메모리 셀 어레이는 복수의 메모리 셀(MC)을 포함한다. 어떤 실시예에서, 메모리 셀 어레이는 복수의 메모리 뱅크(210a~210h)를 포함할 수 있다. 도 2에는 여덟 개의 메모리 뱅크(BANK0~BANKh)(210a~210h)가 도시 되어 있지만, 메모리 뱅크의 개수는 이에 한정되지 않는다. 각 메모리 뱅크(210a~210h)는 복수의 행, 복수의 열 및 복수의 행과 복수의 열의 교차점에 배열되는 복수의 메모리 셀(MC)을 포함할 수 있다. 어떤 실시예에서, 복 수의 행은 복수의 워드라인(WL)에 의해 정의되고, 복수의 열은 복수의 비트라인(BL)에 의해 정의될 수 있다. 제어 로직 회로는 메모리 장치의 동작을 제어한다. 예를 들어, 제어 로직 회로는 메모리 장치 가 읽기 동작, 쓰기 동작, 오프셋 캘리브레이션 동작 등을 수행하도록 제어 신호를 생성할 수 있다. 어떤 실시예에서, 제어 로직 회로는 커맨드 디코더를 포함할 수 있다. 커맨드 디코더는 메모리 컨트 롤러(예를 들면, 도 1의 120)로부터 수신되는 커맨드(CMD)를 디코딩하여 제어 신호를 생성할 수 있다. 어떤 실 시예에서, 제어 로직 회로는 메모리 장치의 동작 모드를 설정하기 위한 모드 레지스터를 더 포 함할 수 있다. 어드레스 버퍼는 메모리 컨트롤러로부터 제공되는 어드레스(ADDR)를 수신한다. 어드레스(ADDR)는 메 모리 셀 어레이의 행을 지시하는 행 어드레스(RA)와 열을 지시하는 열 어드레스(CA)를 포함한다. 행 어드레스(RA)는 행 디코더로 제공되며, 열 어드레스(CA)는 열 디코더로 제공된다. 어떤 실시예에서, 메모 리 장치는 행 어드레스 다중화기를 더 포함할 수 있다. 행 어드레스(RA)는 행 어드레스 다중화기 를 통해 행 디코더로 제공될 수 있다. 어떤 실시예에서, 어드레스(ADDR)는 메모리 뱅크를 지시하는 뱅크 어드레스(BA)를 더 포함할 수 있다. 뱅크 어드레스(BA)는 뱅크 제어 로직으로 제공될 수 있다. 어떤 실시예에서, 메모리 장치는 뱅크 어드레스(BA)에 응답하여 뱅크 제어 신호를 생성하는 뱅크 제어 로 직을 더 포함할 수 있다. 뱅크 제어 로직은 뱅크 제어 신호에 응답하여, 복수의 행 디코더 중에 서 뱅크 어드레스(BA)에 대응하는 행 디코더를 활성화하고, 복수의 열 디코더 중에서 뱅크 어드레스 (BA)에 대응하는 열 디코더를 활성화할 수 있다. 행 디코더는 행 어드레스에 기초해서 메모리 셀 어레이의 복수의 행 중에서 활성화될 행을 선택한다. 이를 위해, 행 디코더는 활성화될 행에 해당하는 워드라인에 구동 전압을 인가할 수 있다. 어떤 실시예에 서, 복수의 메모리 뱅크(210a~210h)에 대응하는 복수의 행 디코더(250a~250h)가 제공될 수 있다. 열 디코더는 열 어드레스에 기초해서 메모리 셀 어레이의 복수의 열 중에서 활성화될 열을 선택한다. 이를 위해, 열 디코더는 I/O 게이팅 회로를 통해 열 어드레스(CA)에 대응하는 센스 앰프를 활성 화시킬 수 있다. 어떤 실시예에서, 복수의 메모리 뱅크(210a~210h)에 각각 대응하는 복수의 열 디코더 (260a~260h)가 제공될 수 있다. 어떤 실시예에서, I/O 게이팅 회로는 입출력 데이터를 게이팅하며, 메모리 셀 어레이로부터 읽은 데이터를 저장하기 위한 데이터 래치 및 메모리 셀 어레이에 데이터를 쓰기 위 한 쓰기 드라이버를 포함할 수 있다. 메모리 셀 어레이에서 읽은 데이터는 센스 앰프에 의해 감지되 고, I/O 게이팅 회로(예를 들면, 데이터 래치)에 저장될 수 있다. 어떤 실시예에서, 복수의 메모리 뱅크 (210a~210h)에 각각 대응하는 복수의 센스 앰프(211a~211h)가 제공될 수 있다. 어떤 실시예에서, 메모리 셀 어레이에서 읽은 데이터(예를 들면, 데이터 래치에 저장된 데이터)는 데이터 I/O 회로를 통하여 메모리 컨트롤러에 제공될 수 있다. 메모리 셀 어레이에 기입될 데이터는 메 모리 컨트롤러로부터 데이터 I/O 회로에 제공되고, 데이터 I/O 회로에 제공된 데이터는 I/O 게 이팅 회로로 제공될 수 있다. 클록 버퍼는 클록(CK)을 수신할 수 있다. 클록 버퍼는 클록(CK)을 버퍼링하거나 클록(CK)을 분주하여 내부 데이터 클록(ICK)을 생성할 수 있다. 예를 들어, 클록 버퍼는 클록(CK)을 버퍼링하여 풀-레이트 (full-rate) 클록(CK0)을 출력하고, 클록(CK0)을 2분주하여 하프-레이트(half-rate) 클록(CK1, CK1B)을 출력하 고, 클록(CK1, CK1B)을 2분주하여 쿼터-레이트(quarter-rate) 클록(ICK0, ICK90, ICK180, ICK270)을 출력할 수 있다. 이외에도, 클록 버퍼는 데이터를 직렬화하기 위해, 클록(CK0)의 8분주 클록, 16분주 클록, 32분주 클록 등을 더 생성할 수도 있다. 클록 버퍼는 내부 데이터 클록(ICK)을 데이터 I/O 회로에 제공할 수 있다. 데이터 I/O 회로는 DQ를 출력하거나 또는 DQ를 수신할 수 있다. 데이터 I/O 회로는 송신기 및 수신기를 포함할 수 있다. 송신기는 I/O 게이팅 회로로부터 전달되는 데이터(TXD)를 듀오-바이 너리 PAM-4를 기반으로 인코딩하여 DQ로 출력할 수 있다. 수신기는 수신한 DQ를 디코딩하여, PAM-4 신호로 복원하고, I/O 게이팅 회로에 복원한 신호에 기초한 데이터(RXD)를 전달할 수 있다. 일 실시예에서, 송신기는 직렬화기(SER: serializer), 인코더(293, 294), 및 출력 드라이버를 포함할 수 있다. 직렬화기는 I/O 게이팅 회로로부터 전달되는 병렬 데이터(TXD)를 내부 클록(ICK)에 따라 직렬 데이터로 변환할 수 있다. 예를 들어, 직렬화기는 i-비트의 병렬 데이터(TXD)를 j-비트의 직렬 데이터로 변환하는 i:j 직렬화기일 수 있다(여기서, i 및 j는 양수이며, i>j). 제1 인코더는 직렬 데이터 의 일부를 인코딩하여 인코딩 데이터(ENC_E)를 출력할 수 있다. 제2 인코더는 직렬 데이터의 다른 일부를 인코딩하여 인코딩 데이터(ENC_O)를 출력할 수 있다. 구체적으로, 제1 인코더는 직렬 데이터 중 짝수 번째 (예를 들어, 0, 2, 4 등) 2-비트 그룹 데이터를 인코딩하여 인코딩 데이터(ENC_E)를 생성하고, 제2 인코더(29 4)는 직렬 데이터 중 홀수 번째 2-비트 그룹 데이터를 1 UI 만큼 지연시키고, 지연된 홀수 번째(예를 들어, 1, 3, 5 등) 2-비트 그룹 데이터를 인코딩하여 인코딩 데이터(ENC_O)를 생성할 수 있다. 제1 인코더가 인코딩 데이터(ENC_E)를 출력하는 데 사용되는 내부 클록(예를 들어, ICK90)과 제2 인코더가 인코딩 데이터 (ENC_O)를 출력하는 데 사용되는 내부 클록(예를 들어, ICK180)은 90도의 위상 차이를 가질 수 있다. 출력 드라 이버는 인코딩 데이터들(ENC_E, ENC_O)을 입력받고, 인코딩 데이터들(ENC_E, ENC_O)을 아날로그 신호인 DQ 로 출력할 수 있다. 인코딩 데이터들(ENC_E, ENC_O) 각각은 PAM-4 신호로서 4개의 데이터 값(00, 01, 10, 11) 을 포함하므로, 두 인코딩 데이터들(ENC_E, ENC_O)을 결합하여 출력하는 DQ는 7개의 데이터 값(00+00, 01+00,10+00, 11+00, 11+01, 11+10, 11+11)을 표현할 수 있다. 즉, DQ는 7개의 전압 레벨을 가질 수 있다. 예를 들어, 어떤 실시예에서, 송신기는 DQ의 왜곡을 보상하기 위한 등화를 수행하는 등화기(미도시)를 더 포함 할 수 있다. 도 2에서, 인코더와 인코더를 구분하여 도시하였으나, 이는 하나의 인코더로서 표시될 수 있다. 일 실시예에서, 수신기는 증폭기, 디코더, 및 역직렬화기(DES: deserializer)를 포함할 수 있다. 증폭기는 DQ를 증폭하여 수신 신호(RXS)를 생성할 수 있다. 어떤 실시예에서, 증폭기는 송 신기(도 1의 122)와의 임피던스 매칭을 위한 입력 임피던스를 가질 수도 있다. 디코더는 증폭기로부 터 수신 신호(RXS)를 입력받고, 수신 신호(RXS)를 PAM-n을 기반으로 디코딩하여 디코딩 신호(DES)를 생성할 수 있다. 일 실시예에서, 디코더는 현재 UI에서 수신된 수신 신호(RXS)로부터 현재 UI 출력 데이터를 획득하 고, 현재 UI 출력 데이터를 이전 UI의 PAM-4 데이터와 감산하여, 현재 UI의 PAM-4 데이터를 획득할 수 있다. 예 를 들어, 디코더는 7개의 전압 레벨을 갖는 수신 신호(RXS)를 6개의 기준 전압과 비교하여 6-비트 데이터 로 변환하고, 변환된 6-비트 데이터를 3-비트로 디코딩하여 현재 UI 출력 데이터를 획득할 수 있다. 디코더 는 3-비트의 현재 UI 출력 데이터에서 3-비트의 이전 UI PAM-4 데이터를 감산하여, 3-비트의 현재 UI PAM- 4 데이터를 생성할 수 있다. 수신된 DQ는 두 개의 PAM-4 신호가 결합되어 변환된 신호이므로, 디코더는 DQ 에 포함된 두 개의 PAM-4 신호를 분리하여 하나의 PAM-4 신호를 생성할 수 있다. 디코더는 현재 UI의 PAM- 4 데이터를 NRZ 신호로 변환하여 디코딩 신호(DES)를 생성할 수 있다. 어떤 실시예에서, 수신기는 DQ의 왜 곡을 보상하기 위한 등화를 수행하는 등화기(미도시)를 더 포함할 수 있다. 역직렬화기는 디코딩 신호 (DES)를 수신하여 수신 데이터(RXD)로 변환할 수 있다. 다음으로 도 3 내지 도 5를 참조하여, 일 실시예에 따른 송신기에 대해 구체적으로 설명한다. 도 3은 일 실시예에 따른 송신기의 직렬화기와 인코더를 구체적으로 나타낸 블록도이다. 도 3을 참조하면, 직렬화기는 64-비트의 송신 데이터(TXD)를 입력받고, 8-비트의 직렬 데이터 (MSB_SER[3:0], LSB_SER[3:0])를 출력할 수 있다. 예를 들어, 직렬화기는 32분주 클록을 사용하여 64-비 트의 송신 데이터(TXD)를 직렬화할 수 있다. 직렬화기에서 출력된 8-비트의 직렬 데이터(MSB_SER[3:0], LSB_SER[3:0])는 제1 인코더 및 제2 인코더에 입력될 수 있다. 제1 인코더는 복수의 디플립플롭(DFF)(321a, …, 321d)과 복수의 멀티플렉서(322a, 322b)를 포함할 수 있 다. 제2 인코더는 복수의 디플립플롭(331a, …, 331d, 332a, …, 332d)과 복수의 멀티플렉서(333a, 333 b)를 포함할 수 있다. 8-비트의 직렬 데이터(MSB_SER[3:0], LSB_SER[3:0])는 비트 순서에 따라 순차적으로 4개 의 2-비트 그룹 데이터로 구분될 수 있다. 그리고, 2-비트 그룹 데이터는은 최상위 비트와 최하위 비트를 포함 할 수 있다. 제1 인코더의 복수의 디플립플롭(321a, …, 321d)은 직렬 데이터의 짝수 번째 2-비트 그룹 데 이터 데이터(MSB_SER[0], MSB_SER[2], LSB_SER[0], LSB_SER[2])를 입력받을 수 있다. 복수의 디플립플롭(321a, …, 321d) 각각은 클록(ICK90)에 동기하여 신호(MSB[0], MSB[2], LSB[0], LSB[2])를 출력할 수 있다. 제2 인코 더의 복수의 디플립플롭(332a, …, 332d)은 직렬 데이터의 홀수 번째 2-비트 그룹 데이터 데이터 (MSB_SER[1], MSB_SER[3], LSB_SER[1], LSB_SER[3])를 입력받을 수 있다. 복수의 디플립플롭(332a, …, 332d) 각각은 클록(ICK90)에 동기하여 홀수 번째 2-비트 그룹 데이터 데이터(MSB_SER[1], MSB_SER[3], LSB_SER[1], LSB_SER[3])를 복수의 디플립플롭(332a, …, 332d)에 전달할 수 있다. 복수의 디플립플롭(332a, …, 332d) 각 각은 클록(ICK180)에 동기하여 신호(MSB[1], MSB[3], LSB[1], LSB[3])를 출력할 수 있다. 멀티플렉서들(322a, 322b) 각각은 클록(ICK90)의 레벨에 따라 두 개의 디플립플롭(321a 및 321b, 321c 및 321d)에서 출력된 신호들(MSB[0] 및 MSB[2], LSB[0] 및 LSB[2]) 중 하나를 제1 인코딩 데이터(MSB_EVEN, LSB_EVEN)로서 출력할 수 있다. 예를 들어, 멀티플렉서(322a)는 클록(ICK90)이 로직 하이 레벨인 때 두 개의 디 플립플롭(321a 및 321b)에서 출력된 신호들(MSB[0] 및 MSB[2]) 중 하나(MSB[0])를 제1 인코딩 데이터 (MSB_EVEN)로 출력하고, 클록(ICK90)이 로직 로 레벨인 때 두 개의 디플립플롭(321a 및 321b)에서 출력된 신호 들(MSB[0] 및 MSB[2]) 중 하나(MSB[2])를 제1 인코딩 데이터(MSB_EVEN)로 출력할 수 있다. 멀티플렉서(322a, 333b) 각각은 클록(ICK180)의 레벨에 따라 두 개의 디플립플롭(332a 및 332b, 332c 및 332 d)에서 출력된 신호들(MSB[1] 및 MSB[3], LSB[1] 및 LSB[3]) 중 하나를 제2 인코딩 데이터(MSB_ODD, LSB_ODD) 로서 출력할 수 있다. 예를 들어, 멀티플렉서(333a)는 클록(ICK180)이 로직 하이 레벨인 때 두 개의 디플립플롭 (332a 및 332b)에서 출력된 신호들(MSB[1] 및 MSB[3]) 중 하나(MSB[1])를 제2 인코딩 데이터(MSB_ODD)로 출력 하고, 클록(ICK180)이 로직 로 레벨인 때 두 개의 디플립플롭(332a 및 332b)에서 출력된 신호들(MSB[1] 및 MSB[3]) 중 하나(MSB[3])를 제2 인코딩 데이터(MSB_ODD)로 출력할 수 있다. 도 4는 일 실시예에 따른 메모리 장치의 출력 드라이버를 나타낸 회로도이다. 도 4를 참조하면, 출력 드라이버는 인코딩 데이터(MSB_EVEN, LSB_EVEN, MSB_ODD, LSB_ODD)에 대응하는 전 압 레벨을 갖는 DQ를 출력할 수 있다. 출력 드라이버는 복수의 드라이버 블록을 포함할 수 있다. 복 수의 드라이버 블록 각각은 CMOS 구조로 연결된 풀업 트랜지스터(DT1) 및 풀다운 트랜지스터(DT2)를 포함 할 수 있다. 어떤 실시예에서, 풀업 트랜지스터(DT1)는 nMOS 트랜지스터일 수 있고, 풀다운 트랜지스터(DT2)는 pMOS 트랜지스터일 수 있다. 풀업 트랜지스터(DT1) 및 풀다운 트랜지스터(DT2)는 제1 전압(VDD)과 제2 전압 (VSS) 사이에 직렬로 연결될 수 있다. 풀업 트랜지스터(DT1) 및 풀다운 트랜지스터(DT2)의 게이트에는 인코딩 데이터(MSB_EVEN, LSB_EVEN, MSB_ODD, LSB_ODD)가 입력될 수 있다. 출력 드라이버는 최상위 비트에 대응하는 인코딩 데이터(MSB_EVEN, MSB_ODD)에 의해 흐르는 전류가 최하위 비트에 대응하는 인코딩 데이터(LSB_EVEN, LSB_ODD)에 의해 흐르는 전류보다 더 크도록 구성될 수 있다. 예를 들어, 복수의 드라이버 블록에 포함된 풀업 트랜지스터(DT1) 및 풀다운 트랜지스터(DT2)의 크기가 동일하 면, 최상위 비트에 대응하는 인코딩 데이터(MSB_EVEN, MSB_ODD)가 인가되는 드라이버 블록(410a, 410b, 410d, 410e)의 개수가 최하위 비트에 대응하는 인코딩 데이터(LSB_EVEN, LSB_ODD)가 인가되는 드라이버 블록(410c, 410f)의 개수보다 더 많을 수 있다. 즉, 최상위 비트에 대응하는 인코딩 데이터(MSB_EVEN, MSB_ODD)에 따른 드 라이빙 세기가 최하위 비트에 대응하는 인코딩 데이터(LSB_EVEN, LSB_ODD)에 따른 드라이빙 세기보다 더 클 수 있다. 도 5는 일 실시예에 따른 인코더 및 출력 드라이버의 입출력 신호를 나타낸 도면이다. 도 5를 참조하면, t0 내지 t4 기간에서, 복수의 디플립플롭(321a, …, 321d)은 신호들(MSB[0], MSB[2], LSB[0], LSB[2])을 출력할 수 있다. t0 내지 t2 기간에서, 클록(ICK90)은 로직 하이 레벨을 갖고, t2 내지 t4 기간에서, 클록(ICK90)은 로직 로 레벨을 가질 수 있다. 복수의 멀티플렉서(322a, 322b)는 t0 내지 t2 기간에서 입력되는 신호들(MSB[0] 및 LSB[0], MSB[2] 및 LSB[2]) 중 하나(MSB[0], LSB[0])를 인코딩 데이터(MSB_EVEN, LSB_EVEN)로서 출력할 수 있다. 복수의 멀티플렉서(322a, 322b)는 t2 내지 t4 기간에서 입력되는 신호들(MSB[0] 및 LSB[0], MSB[2] 및 LSB[2]) 중 하나(MSB[2], LSB[2])를 인코딩 데이터(MSB_EVEN, LSB_EVEN)로서 출력할 수 있다. t1 내지 t5 기간에서, 복수의 디플립플롭(332a, …, 332d)은 신호들(MSB[1], MSB[3], LSB[1], LSB[3])을 출력 할 수 있다. t1 내지 t3 기간에서, 클록(ICK180)은 로직 하이 레벨을 갖고, t3 내지 t5 기간에서, 클록(ICK18 0)은 로직 로 레벨을 가질 수 있다. 복수의 멀티플렉서(333a, 333b)는 t1 내지 t3 기간에서 입력되는 신호들 (MSB[1] 및 LSB[1], MSB[3] 및 LSB[3]) 중 하나(MSB[1], LSB[1])를 인코딩 데이터(MSB_ODD, LSB_ODD)로서 출력 할 수 있다. 복수의 멀티플렉서(333a, 333b)는 t3 내지 t5 기간에서 입력되는 신호들(MSB[1] 및 LSB[1], MSB[3] 및 LSB[3]) 중 하나(MSB[3], LSB[3])를 인코딩 데이터(MSB_ODD, LSB_ODD)로서 출력할 수 있다. 제1 UI(t0 내지 t1)에서, 출력 드라이버는 신호(MSB[0])에 기초한 인코딩 데이터(MSB_EVEN) 및 신호 (LSB[0])에 기초한 인코딩 데이터(LSB_EVEN)에 의해 3개의 심볼을 표현하는 전압을 갖는 DQ를 출력할 수 있다. 제2 UI(t1 내지 t2)에서, 출력 드라이버는 신호(MSB[0])에 기초한 인코딩 데이터(MSB_EVEN), 신호 (LSB[0])에 기초한 인코딩 데이터(LSB_EVEN), 신호(MSB[1])에 기초한 인코딩 데이터(MSB_ODD), 및 신호 (LSB[1])에 기초한 인코딩 데이터(LSB_ODD)에 의해 7개의 심볼을 표현하는 전압을 갖는 DQ를 출력할 수 있다. 제3 UI(t2 내지 t3)에서, 출력 드라이버는 신호(MSB[2])에 기초한 인코딩 데이터(MSB_EVEN), 신호 (LSB[2])에 기초한 인코딩 데이터(LSB_EVEN), 신호(MSB[1])에 기초한 인코딩 데이터(MSB_ODD), 및 신호 (LSB[1])에 기초한 인코딩 데이터(LSB_ODD)에 의해 7개의 심볼을 표현하는 전압을 갖는 DQ를 출력할 수 있다. 제4 UI(t3 내지 t4)에서, 출력 드라이버는 신호(MSB[2])에 기초한 인코딩 데이터(MSB_EVEN), 신호 (LSB[2])에 기초한 인코딩 데이터(LSB_EVEN), 신호(MSB[3])에 기초한 인코딩 데이터(MSB_ODD), 및 신호 (LSB[3])에 기초한 인코딩 데이터(LSB_ODD)에 의해 7개의 심볼을 표현하는 전압을 갖는 DQ를 출력할 수 있다. 이하에서, 도 6 내지 도 11을 참조하여, 일 실시예의 송신기가 출력하는 듀오-바이너리 PAM-4 신호에 대해 설명 한다. 도 6은 PAM-4 신호를 설명하기 위한 도면이고, 도 7은 듀오-바이너리 PAM-4 신호를 설명하기 위한 도면이며, 도 8은 PAM8 신호를 설명하기 위한 도면이다. 도 6을 참조하면, PAM-4 신호는 1 UI 동안 V1에서 V4로 천이할 수 있으므로, PAM-4 신호의 최대 천이 레벨은 3 이다. 도 7을 참조하면, 듀오-바이너리 PAM-4 신호는 1 UI 동안 V1에서 V4로 천이할 수 있으므로, 듀오-바이너리 PAM- 4 신호의 최대 천이 레벨은 3이다. 도 8을 참조하면, PAM8 신호는 1 UI 동안 V1에서 V8로 천이할 수 있으므로, PAM8 신호의 최대 천이 레벨은 8이 다. 따라서, PAM-4 신호와 듀오-바이너리 PAM-4 신호는 PAM8 신호에 비해 최대 천이 레벨이 작으므로, 크로스톡의 영향이 적다. 또한, 듀오-바이너리 PAM-4 신호를 사용함으로써, 7개의 심볼을 표현하는 전압(V1, …, V7)을 가 지므로, 8개의 심볼을 표현하는 전압(V1, …, V8)을 갖는 PAM-8 신호에 비해, 충분한 오프닝 높이 및 아이 오프 닝 너비가 확보될 수 있다. 일 실시예의 송신기에 따르면, 쿼터 레이트 클록(예를 들어, ICK90, ICK180)을 사용하여 듀오-바이너리 PAM-4 인코딩을 수행하므로, 전력 소모가 감소되어, 에너지 효율을 증가시킬 수 있다. 동일한 데이터 레이트로 PAM-4 신호, 듀오-바이너리 PAM-4 신호, 및 PAM8 신호를 전송하는 경우, 듀오-바이너리 PAM-4 신호의 최대 주파수 성분은 PAM8 신호의 최대 주파수 성분과 동일하다. 도 9는 채널의 응답 특성을 나타낸 그래프이다. 도 9를 참조하면, 18Gb/s의 전송 속도에서의 임의의 채널의 삽입 손실이 도시된다. 채널은 PAM-4 신호의 나이퀴 스트 주파수에 해당하는 4.5 GHz에서 응답 특성이 감소할 수 있다. 이때, 듀오-바이너리 PAM-4 신호의 나이퀴스 트 주파수(fNY, Duo-PAM-4)는 PAM8 신호의 나이퀴스트 주파수(fNY, PAM8)와 동일한 수준이며, 이는 PAM-4 신호의 나이 퀴스트 주파수(fNY, PAM-4)보다 1.5배 더 작고, NRZ 신호의 나이퀴스트 주파수(fNY, NRZ)보다 3배 더 작다. 따라서, 듀오-바이너리 PAM-4 신호를 사용하는 경우, 고주파수 대역, 즉 4.5GHz 대역에서의 채널 삽입 손실이 방지될 수 있다. 도 10은 채널을 통과한 후의 PAM-4 신호의 아이 다이어그램이고, 도 11은 채널을 통과한 후의 듀오-바이너리 PAM-4 신호의 아이 다이어그램이다. 도 10 및 도 11을 참조하면, PAM-4 신호와 듀오-바이너리 PAM-4 신호는 2.5Db의 이득을 갖는 등화가 수행되고, 18 Gb/s로 송신될 수 있다. 도 11의 PAM-4 신호의 아이 패턴에 비해, 듀오-바이너리 PAM-4 신호의 아이 패턴의 오프닝 마스크가 더 큰 것을 알 수 있다. 다음으로, 도 12 내지 도 15를 참조하여, 일 실시예에 따른 수신기에 대해 구체적으로 설명한다. 도 12는 일 실시예에 따른 메모리 장치의 디코더를 구체적으로 나타낸 블록도이다. 도 12를 참조하면, 디코더는 수신 신호(RXS)를 입력받아 디코딩 신호(DES)를 생성할 수 있다. 디코더 는 풀 레이트 클록(CK0)을 사용하여, 듀오-바이너리 PAM-4 신호를 디코딩할 수 있다. 디코더는 비 교기, 디코더, 감산기, 및 PAM-4 디코더를 포함할 수 있다. 비교기는 수신 신호(RXS)의 레벨에 대응하는 값을 갖는 n-비트(n은 자연수)의 감지 신호를 출력할 수 있 다. 일 실시예에서, 비교기는 복수의 히스테리시스 비교기를 포함할 수 있다. 비교기들 각각 의 제1 입력단은 수신 신호(RXS)를 입력받을 수 있다. 히스테리시스 비교기들 각각의 제2 입력단은 대응 하는 기준 전압(VREF0, …, VREF5)을 입력받을 수 있다. 히스테리시스 비교기들 각각은 수신 신호(RXS)와 대응하는 기준 전압(VREF0, …, VREF5)을 비교한 감지 신호를 출력할 수 있다. 예를 들어, 히스테리시스 비교기 (1212a)는 수신 신호(RXS)가 기준 전압(VREF0)보다 더 크면, 로직 하이 레벨의 감지 신호를 출력하고, 수신 신 호(RXS)가 기준 전압(VREF0)보다 이하이면, 로직 로 레벨의 감지 신호를 출력할 수 있다. 비교기는 6개의 히스테리시스 비교기를 포함하므로, 6-비트의 감지 신호를 출력할 수 있다. 6-비트의 신호 중 수신 신호 (RXS)의 전압 값에 인접한 두 개의 기준 전압들이 입력되는 두 개의 히스테리시스 비교기들이 출력하는 감지 신 호들의 로직 레벨이 서로 상이할 수 있다. 디코더는 n비트-to-m비트 디코더로서, 히스테리시스 비교기들이 출력한 n-비트의 감지 신호를 m-비 트(m은 n 이하의 자연수) 데이터로 디코딩하여 현재 UI 출력 데이터를 출력할 수 있다. 예를 들어, 디코더 는 표 1과 같이, 6-비트의 감지 신호를 디코딩하여 현재 UI 출력 데이터를 생성할 수 있다. 표 1 감지 신호 (6-bit) 현재 UI 출력 데이터 (3-bit) 000000 000001 000011 000111 001111 011111 111111000 001 010 011 100 101 110 감산기는 m-비트 감산기로서, 현재 UI 출력 데이터(CURRENT UI OUTPUT)에서 이전 UI PAM-4 데이터 (2D+C[2:0])를 감산하여 현재 UI PAM-4 데이터(2F+E[2:0])를 생성할 수 있다. 이와 관련하여 도 11을 함께 참 조하여 설명한다. 도 13은 일 실시예에 따른 디코더의 입출력 신호를 나타낸 도면이다. 도 13을 참조하면, 현재 UI의 DQ는, 송신기에서의 제1 인코딩 데이터(MSB_EVEN, LSB_EVEN)에 기초한 전압 레벨과 제2 인코딩 데이터(MSB_ODD, LSB_ODD)에 기초한 전압 레벨이 결합된 전압 레벨을 가질 수 있다. 구체적 으로, 제1 인코딩 데이터(MSB_EVEN)가 2F이고, 제1 인코딩 데이터(LSB_EVEN)가 E이며, 제2 인코딩 데이터 (MSB_ODD)가 2D이고, 제2 인코딩 데이터(LSB_ODD)가 C인 경우, 현재 UI의 DQ는 2F에 따른 전압 레벨, E에 따른 전압 레벨, 2D에 따른 전압 레벨, 및 C에 따른 전압 레벨이 결합된 전압 레벨을 가질 수 있다. 따라서, 현재 UI PAM-4 데이터로서 제1 인코딩 데이터들(MSB_EVEN, LSB_EVEN)의 값(2F+E)을 획득하기 위해서는, 현재 UI의 DQ로 부터 생성된 현재 UI 출력 데이터에서, 이전 UI PAM-4 데이터인 제2 인코딩 데이터들(MSB_ODD, LSB_ODD)의 값 (2D+C)을 감산해야 한다. 감산기는 현재 UI 출력 데이터(CURRENT UI OUTPUT)에서 피드백된 이전 UI PAM-4 데이터(2D+C[2:0])를 감 산하여, 현재 UI PAM-4 데이터(2F+2[2:0])를 출력할 수 있다. 이전 UI의 출력 데이터와 현재 UI 출력 데이터에 기초하여 디코딩되는 현재 UI PAM-4 데이터는 다음의 표 2와 같다. 표 2 이전 UI 출력 데이터 현재 UI 출력 데이터 CDEF 2B+A+0 (즉, 2D+C=0) 0 (즉, 2F+E=0) 0000 2B+A+0 (즉, 2D+C=0) 1 (즉, 2F+E=1) 0010 2B+A+1 (즉, 2D+C=1) 1 (즉, 2F+E=0) 1000 2B+A+0 (즉, 2D+C=0) 2 (즉, 2F+E=2) 0001 2B+A+1 (즉, 2D+C=1) 2 (즉, 2F+E=1) 1010 2B+A+2 (즉, 2D+C=2) 2 (즉, 2F+E=0) 0100 2B+A+0 (즉, 2D+C=0) 3 (즉, 2F+E=3) 0011 2B+A+1 (즉, 2D+C=1) 3 (즉, 2F+E=2) 1001 2B+A+2 (즉, 2D+C=2) 3 (즉, 2F+E=1) 0110 2B+A+3 (즉, 2D+C=3) 3 (즉, 2F+E=0) 1100 2B+A+1 (즉, 2D+C=1) 4 (즉, 2F+E=3) 1011 2B+A+2 (즉, 2D+C=2) 4 (즉, 2F+E=2) 0101 2B+A+3 (즉, 2D+C=3) 4 (즉, 2F+E=1) 1110 2B+A+2 (즉, 2D+C=2) 5 (즉, 2F+E=3) 0111 2B+A+3 (즉, 2D+C=3) 5 (즉, 2F+E=2) 1101 2B+A+3 (즉, 2D+C=3) 6 (즉, 2F+E=3) 1111 감산기가 출력한 현재 UI PAM-4 데이터(2F+2[2:0])는 적어도 하나의 디플립플롭(1240, 1042)을 통해 감 산기의 입력단으로 제공될 수 있다. 적어도 하나의 디플립플롭(1240, 1042)은 풀 레이트 클록(CK0)에 동 기하여 현재 UI PAM-4 데이터(2F+2[2:0])를 리타이밍하고, 현재 UI PAM-4 데이터(2F+2[2:0])를 이전 UI PAM-4 데이터로서 감산기에 출력할 수 있다. 적어도 하나의 디플립플롭(1240, 1042)은 리셋 신호(RESET)가 인가 됨에 따라, 래치하고 있는 데이터를 리셋할 수 있다. 리셋 신호(RESET)는 소정 패턴을 갖는 수신 신호(RXS)가 수신될 때, 출력될 수 있다. 예를 들어, 송신기는 듀오-바이너리 PAM-4 신호에 기초한 DQ의 송신 시작 시점과 종료 시점에 논리 값 \"0\"을 소정 개수로 나열한 데이터를 DQ로서 송신함으로써, 디플립플롭(1240, 1042)에 리셋 신호(RESET)의 인가되도록 할 수 있다.PAM-4 디코더는 입력받은 PAM-4 데이터를 NRZ 신호로 변환하 여 디코딩 신호(DES)를 생성할 수 있다. 일 실시예에서, PAM-4 디코더는 감산기에서 출력된 현재 UI PAM-4 데이터의 최상위 비트 데이터(2F+E[1])와 최하위 비트 데이터(2F+E[0])를 입력받을 수 있다. PAM-4 디코더는 최상위 비트 데이터(2F+E[1])와 최하위 비트 데이터(2F+E[0])에 기초하여 NRZ 신호를 생성하고, 이를 디코딩 신호(DES)로서 출력할 수 있다. 다음으로, 도 14 및 도 15를 참조하여, 하프 레이트 클록(ICK0, ICK90, ICK180, ICK270)으로써, 수신 신호 (RXS)를 디코딩 신호(DES)로 출력하는 디코더에 대해 설명한다. 도 14는 일 실시예에 따른 메모리 장치의 디코더를 구체적으로 나타낸 블록도이다. 도 14를 참조하면, 디코더는 수신 신호(RXS)를 입력받아 디코딩 신호(DES)를 생성할 수 있다. 디코더 는 쿼터 레이트 클록들(ICK0, ICK90, ICK180, ICK270)을 사용하여, 듀오-바이너리 PAM-4 신호를 디코딩 할 수 있다. 디코더는 복수의 샘플 앤 홀드 회로, 복수의 비교기, 복수의 디코더, 복 수의 감산기, 복수의 디플립플롭, 복수의 멀티플렉서(1442a, 1242b), 및 PAM-4 디코더를 포 함할 수 있다. 복수의 샘플 앤 홀드 회로는 입력되는 클록(ICK0, ICK90, ICK180, ICK270)에 따라 수신 신호(RXS)를 샘 플링하고, 클록(ICK0, ICK90, ICK180, ICK270)의 한 사이클 기간 동안 홀딩할 수 있다. 복수의 비교기는 샘플 앤 홀드 회로가 출력하는 신호의 레벨에 대응하는 값을 갖는 신호를 출력할 수 있다. 복수의 디코더는 복수의 비교기 각각이 출력한 6-비트의 신호를 3-비트 데이터로 디코딩 하여 클록들(ICK0, ICK90, ICK180, ICK270) 각각에 대응하는 현재 UI 출력 데이터를 출력할 수 있다. 복수의 비교기 및 복수의 디코더는 도 12의 비교기 및 디코더와 각각 동일 또는 유사 하므로, 이들에 대한 설명은 생략한다. 복수의 감산기는 현재 UI 출력 데이터에서 이전 UI PAM-4 데이터를 감산하여, 현재 UI PAM-4 데이터 (D0[2:0], D90[2:0], D180[2:0], D270[2:0])를 생성할 수 있다. 예를 들어, 감산기(1430b)는 디코더(1420b)로 부터 현재 UI 출력 데이터를 수신할 수 있다. 현재 UI 출력 데이터는 샘플 앤 홀드 회로(1402b)가 클록(ICK90) 에 동기하여 샘플링한 데이터일 수 있다. 감산기(1430b)는 디플립플롭(1440a)으로부터 이전 UI PAM-4 데이터 (D0[2:0])를 클록(ICK90)에 동기하여 수신할 수 있다. 이전 UI PAM-4 데이터(D0[2:0])는 클록(ICK0)에 동기되 어 샘플링된 이전 UI 출력 데이터에 기초하여 생성될 수 있다. 복수의 디플립플롭은 클록(ICK0, ICK90, ICK180, ICK270)에 동기하여 현재 UI PAM-4 데이터(D0[2:0], D90[2:0], D180[2:0], D270[2:0])를 리타이밍하고, 현재 UI PAM-4 데이터(D0[2:0], D90[2:0], D180[2:0], D270[2:0])를 이전 UI PAM-4 데이터로서 복수의 감산기에 출력할 수 있다. 복수의 디플립플롭은 리 셋 신호(RESET)가 인가됨에 따라, 래치하고 있는 데이터를 리셋할 수 있다. 리셋 신호(RESET)는 소정 패턴을 갖 는 수신 신호(RXS)가 수신될 때, 출력될 수 있다. 복수의 멀티플렉서(1442a, 1242b)는 복수의 감산기로부터의 출력을 선택적으로 PAM-4 디코더에 출 력할 수 있다. 복수의 멀티플렉서(1442a, 1242b) 각각은 복수의 감산기로부터 클록(ICK0, ICK90, ICK180, ICK270)에 동기하여 전달된 현재 UI PAM-4 데이터(D0[2:0], D90[2:0], D180[2:0], D270[2:0])의 최상 위 비트 데이터(D0[1], D90[1], D180[1], D270[1])와 최하위 비트 데이터(D0[0], D90[0], D180[0], D270[0])를 입력받고, 클록(ICK90, ICK180, ICK270, ICK0)에 동기하여 최상위 비트 데이터(D0[1], D90[1], D180[1], D270[1]) 중 하나의 데이터(D[1])와 최하위 비트 데이터(D0[0], D90[0], D180[0], D270[0]) 중 하나의 데이터 (D[0])를 PAM-4 디코더에 출력할 수 있다. 복수의 멀티플렉서(1442a, 1242b)와 관련하여, 도 15를 함께 참조하여 설명한다. 도 15는 일 실시예에 따른 디코더의 입출력 신호를 나타낸 도면이다. 도 15를 참조하면, 복수의 멀티플렉서(1442a, 1242b)는 제1 클록(ICK0, ICK90, ICK180, ICK270)에 동기하여 현 재 UI PAM-4 데이터의 최상위 비트 및 최하위 비트 데이터(D0[1:0], D90[1:0], D180[1:0], D270[1:0])를 수신 하고, 제2 클록(ICK90, ICK180, ICK270, ICK0)에 동기하여 최상위 비트 데이터(D0[1], D90[1], D180[1], D270[1]) 및 최하위 비트 데이터(D0[0], D90[0], D180[0], D270[0])를 PAM-4 데이터(D[1], D[0])로서 출력할 수 있다. 예를 들어, t10 내지 t14 동안 복수의 멀티플렉서(1442a, 1242b)의 제1 입력단에는 제1 클록(ICK0)에동기하여 전달된 현재 UI PAM-4 데이터의 최상위 비트 및 최하위 비트 데이터(D0[1:0])가 입력될 수 있다. 복수 의 멀티플렉서(1442a, 1242b)는 제2 클록(ICK90)에 동기하여 현재 UI PAM-4 데이터의 최상위 비트 및 최하위 비 트 데이터(D0[1:0])를 PAM-4 데이터(D[1], D[0])로서 출력할 수 있다. PAM-4 디코더는 입력받은 PAM-4 데이터(D[1], D[0])를 NRZ 신호로 변환하여 디코딩 신호(DES)를 생성할 수 있다. PAM-4 디코더는 도 12의 PAM-4 디코더와 동일 또는 유사하므로, 이에 대한 설명은 생략한 다. 일 실시예의 디코더에 따르면, 쿼터 레이트 클록(예를 들어, ICK90, ICK180)을 사용하여 듀오-바이너리 PAM-4 인코딩을 수행하므로, 전력 소모가 감소되어, 에너지 효율을 증가시킬 수 있다. 도 16은 일 실시예에 따른 송신기를 나타낸 블록도이다. 도 16을 참조하면, 송신기는 PAM-4에 따른 DQ와 듀오-바이너리 PAM-4에 따른 DQ를 선택적으로 출력할 수 있다. 송신기는 I/O 게이팅 회로(도 2의 270)로부터 전달되는 데이터(TXD)를 PAM-4를 기반으로 인코딩하 여 DQ로 출력하거나 또는 듀오-바이너리 PAM-4를 기반으로 인코딩하여 DQ로 출력할 수 있다. 일 실시예에서, 송신기는 직렬화기(SER), 메인 인코더 및 보조 인코더, 등화기 , 및 출력 드라이버를 포함할 수 있다. 직렬화기는 도 2에서 설명한 직렬화기와 동일, 유사하므로 이에 대한 설명은 생략한다. 메인 인코더와 보조 인코더는 각각 듀오-바이너리 PAM-4 인코더 및 PAM-4 인코더를 포함할 수 있다. 보조 인코더는 등화기의 디앰퍼시스 구동을 위한 인코딩 데이터(ENC_P)를 생성할 수 있다. 어떤 실시예에서, 보조 인코더의 인코딩 데이터(ENC_P)는 메인 인코더의 인코딩 데이터 (ENC_M)보다 1 UI만큼 지연되고, 논리 값이 서로 반대일 수 있다. 예를 들어, 보조 인코더는 메인 인코더 에 입력되는 클록에 비해 위상이 90도 늦은 클록을 사용할 수 있다. 듀오-바이너리 PAM-4 인코더는 직렬화기에서 출력한 직렬 데이터를 듀오-바이너리 PAM-4를 기반으 로 인코딩할 수 있다. 일 실시예에서, 듀오-바이너리 PAM-4 인코더는 도 2에서 설명한 제1 인코더 및 제2 인코더를 포함할 수 있다. PAM-4 인코더는 직렬화기에서 출력한 직렬 데이터를 PAM- 4를 기반으로 인코딩할 수 있다. 메인 인코더와 보조 인코더는 모드 선택기(1623, 1624), 선택기, 및 클록 선택기를 포함할 수 있다. 모드 선택기(1623, 1624)는 듀오-바이너리 모드 이네이블 신호(D_EN)에 기초하여, 듀오-바이너 리 PAM-4 인코더로부터 입력되는 데이터와 PAM-4 인코더로부터 입력되는 데이터를 선택적으로 출력 할 수 있다. 선택기는 클록 선택기로부터 전달되는 클록 신호에 기초하여, 모드 선택기로부 터 입력되는 데이터와 모드 선택기로부터 입력되는 데이터를 선택적으로 출력할 수 있다. 클록 선택기 는 듀오-바이너리 모드 이네이블 신호(D_EN)에 기초하여, 하프-레이트 클록(CK1B)과 쿼터-레이트 클록 (ICK90)을 선택적으로 출력할 수 있다. 등화기는 등화 이네이블 신호(EQ_EN)에 기초하여, 인코딩 데이터(ENC_M)에 기초한 드라이버 입력 신호를 생성하거나, 또는 인코딩 데이터(ENC_M)및 인코딩 데이터(ENC_P)에 기초한 드라이버 입력 신호를 생성할 수 있 다. 출력 드라이버는 드라이버 입력 신호를 입력받고, 드라이버 입력 신호를 아날로그 신호인 DQ로 출력 할 수 있다. 일 실시예의 송신기에 따르면, PAM-4 인코딩 또는 듀오-바이너리 PAM-4 인코딩을 선택적으로 수행하므로, 채널 조건에 대응하는 인터페이싱이 수행될 수 있다. 도 17은 일 실시예에 따른 송신기의 일부를 구체적으로 나타낸 블록도이다. 도 17을 참조하면, 직렬화기는 64-비트의 송신 데이터(TXD)를 입력받고, 8-비트의 직렬 데이터 (MSB_SER[3:0], LSB_SER[3:0])를 출력할 수 있다. 제1 인코더는 복수의 디플립플롭(1721a, …, 1721d)을 포함할 수 있다. 제2 인코더는 복수의 디플 립플롭(1731a, …, 1731d, 1732a, …, 1732d)을 포함할 수 있다. 복수의 디플립플롭(1721a, …, 1721d)은 도 3 의 복수의 디플립플롭(321a, …, 321d)과 동일, 유사하므로, 이에 대한 설명은 생략한다. 복수의 디플립플롭 (1731a, …, 1731d, 1732a, …, 1732d)은 도 3의 복수의 디플립플롭(331a, …, 331d, 332a, …, 332d)과 동일, 유사하므로, 이에 대한 설명은 생략한다.제3 인코더는 복수의 디플립플롭(1741a, …, 1741h)과 복수의 멀티플렉서(1742a, …, 1742d)를 포함할 수 있다. 복수의 디플립플롭(1741a, …, 1741d)은 직렬 데이터의 짝수 번째 2-비트 그룹 데이터 데이터 (MSB_SER[0], MSB_SER[2], LSB_SER[0], LSB_SER[2])를 입력받을 수 있다. 복수의 디플립플롭(1741e, …, 1741h)은 직렬 데이터의 홀수 번째 2-비트 그룹 데이터 데이터(MSB_SER[1], MSB_SER[3], LSB_SER[1], LSB_SER[3])를 입력받을 수 있다. 복수의 디플립플롭(1741a, …, 1741h) 각각은 클록(ICK90)에 동기하여 신호 (MSB[0], MSB[2], LSB[0], LSB[2], MSB[1], MSB[3], LSB[1], LSB[3])를 출력할 수 있다. 멀티플렉서(1742a, …, 1742d) 각각은 클록(ICK90)의 레벨에 따라 두 개의 디플립플롭(1741a 및 1741b, 1741c 및 1741d, 1741e 및 1741f, 1741g 및 1741h)에서 출력된 신호들(MSB[0] 및 MSB[2], LSB[0] 및 LSB[2], MSB[1] 및 MSB[3], LSB[1] 및 LSB[3]) 중 하나를 PAM-4 인코딩 데이터(PAM4_MSB[0], PAM4_LSB[0], PAM4_MSB[1], PAM4_LSB[1])로서 출력할 수 있다. 제1 모드 선택기는 듀오-바이너리 모드 이네이블 신호(D_EN)에 기초하여, 제1 인코더로부터 입력된 듀오-바이너리 PAM-4 인코딩 데이터(DUO_MSB_E[0], DUO_MSB_E[1], DUO_LSB_E[0], DUO_LSB_E[1]) 또는 제3 인코 더로부터 입력된 PAM-4 인코딩 데이터(PAM4_MSB[0], PAM4_LSB[0], PAM4_MSB[1], PAM4_LSB[1])를, 선택된 인코딩 데이터(SEL_MAIN[0], SEL_MAIN[1], SEL_MAIN[2], SEL_MAIN[3])로서 출력할 수 있다. 제2 모드 선택기는 듀오-바이너리 모드 이네이블 신호(D_EN)에 기초하여, 제2 인코더로부터 입력된 듀오-바이너리 PAM-4 인코딩 데이터(DUO_MSB_O[0], DUO_MSB_O[1], DUO_LSB_O[0], DUO_LSB_O[1]) 또는 제3 인코 더로부터 입력된 PAM-4 인코딩 데이터(PAM4_MSB[0], PAM4_LSB[0], PAM4_MSB[1], PAM4_LSB[1])를, 선택된 인코딩 데이터(SEL_MAIN[4], SEL_MAIN[5], SEL_MAIN[6], SEL_MAIN[7])로서 출력할 수 있다. 제1 선택기는 복수의 멀티플렉서(1771a, 1771b)를 포함할 수 있다. 복수의 멀티플렉서(1771a, 1771b) 각 각은 클록 선택기로부터 입력되는 클록 신호에 기초하여, 제1 모드 선택기로부터 출력된, 선택된 인코딩 데이터들(SEL_MAIN[0] 및 SEL_MAIN[1], SEL_MAIN[2] 및 SEL_MAIN[3]) 중 하나를 최종 인코딩 데이터 (MAIN[0], MAIN[1])로서 출력할 수 있다. 제2 선택기는 복수의 멀티플렉서(1771c, 1771d)를 포함할 수 있다. 복수의 멀티플렉서(1771c, 1771d) 각각은 클록 선택기로부터 입력되는 클록 신호에 기초하여, 제2 모드 선택기로부터 출력된, 선택된 인코딩 데이터들(SEL_MAIN[4] 및 SEL_MAIN[5], SEL_MAIN[6] 및 SEL_MAIN[7]) 중 하나를 최종 인코딩 데이터(MAIN[2], MAIN[3])로서 출력할 수 있다. 여기서, 인코딩 데이터 (MAIN[0], MAIN[2])는 직렬 데이터의 최상위 비트 데이터(MSB_SER[0], MSB_SER[2], MSB_SER[1], MSB_SER[3])에 대응하고, 인코딩 데이터(MAIN[1], MAIN[3])는 최하위 비트 데이터(LSB_SER[0], LSB_SER[2], LSB_SER[1], LSB_SER[3])에 대응할 수 있다. 클록 선택기는 듀오-바이너리 모드 이네이블 신호(D_EN)에 기초하여, 하프-레이트 클록(CK1B)과 쿼터-레 이트 클록(ICK90)을 선택적으로 출력할 수 있다. 상기에서, 제1 인코더, 제2 인코더, 제3 인코더, 제1 모드 선택기, 제2 모드 선택기 , 선택기, 및 클록 선택기는 도 16의 메인 인코더의 구성요소로서, 도 16의 보조 인코 더는 메인 인코더와 동일, 유사한 구성요소를 가질 수 있다. 보조 인코더는 메인 인코더 와 비교하여, 클록(ICK90) 대신에 클록(ICK180)을 수신하고, 클록(ICK180) 대신에 클록(ICK270)을 수신 하며, 클록(CK1B) 대신에 클록(CK1)을 수신할 수 있다. 도 18은 일 실시예에 따른 송신기의 등화기를 구체적으로 나타낸 블록도이다. 도 18을 참조하면, 등화기는 메인 인코더로부터 출력된 최종 인코딩 데이터(MAIN[0], MAIN[1], MAIN[2], MAIN[3]) 및 보조 인코더로부터 출력된 최종 인코딩 데이터(POST[0], POST[1], POST[2], POST[3])에 기초하여, 드라이버 입력 신호(DRV[11:0])를 생성할 수 있다. 등화기는 최상위 비트 데이터에 대응하는 복수의 선택기(1801, 1802) 및 최하위 비트 데이터에 대응하는 복수의 선택기(1803, 1804)를 포함할 수 있다. 제1 선택기들(1801a, 1802a, 1803a, 1804a)은 최종 인코딩 데이터(MAIN[0], MAIN[1], MAIN[2], MAIN[3])를 드 라이버 입력 신호(DRV[11], DRV[8], DRV[5], DRV[2])로서 출력할 수 있다. 제2 선택기들(1801b, 1801c, 1802b, 1802c, 1803b, 1803c, 1804b, 1804c,)은 등화 이네이블 신호(EQ_EN1, EQ_EN2)에 기초하여 최종 인코딩 데이터(MAIN[0], MAIN[1], MAIN[2], MAIN[3]), 또는 최종 인코딩 데이터 (POST[0], POST[1], POST[2], POST[3])를 드라이버 입력 신호(DRV[10:9], DRV[7:6], DRV[4:3], DRV[1:0])로서출력할 수 있다. 도 19는 일 실시예에 따른 메모리 장치의 출력 드라이버를 나타낸 회로도이다. 도 19를 참조하면, 출력 드라이버는 드라이버 입력 신호(DRV[11:0])에 대응하는 전압 레벨을 갖는 DQ를 출력할 수 있다. 출력 드라이버는 복수의 드라이버 블록을 포함할 수 있다. 복수의 드라이버 블록 각각은 CMOS 구조로 연결된 풀업 트랜지스터(DT1) 및 풀다운 트랜지스터(DT2)를 포함할 수 있다. 출력 드라이버는 최상위 비트에 대응하는 드라이버 입력 신호(DRV[11], DRV[5])에 의해 흐르는 전류가 최 하위 비트에 대응하는 드라이버 입력 신호(DRV[8], DRV[2])에 의해 흐르는 전류보다 더 크도록 구성될 수 있다. 예를 들어, 최상위 비트 데이터에 대응하는 드라이버 입력 신호(DRV[11], DRV[5])가 입력되는 드라이버 블록 의 개수가 최하위 비트 데이터에 대응하는 드라이버 입력 신호(DRV[8], DRV[2])가 입력되는 드라이버 블 록의 개수보다 더 많을 수 있다. 도 20은 일 실시예에 따른 메모리 장치의 출력 드라이버의 출력 신호를 나타낸 표이다. 도 20을 참조하면, 드라이버 입력 신호(DRV[11:0])에 따라 드라이버 블록의 개수가 다를 수 있다. 예를 들어, 최상위 비트 데이터에 대응하는 드라이버 입력 신호(DRV[11], DRV[5])가 입력되는 드라이버 블록의 개수는 12이 고, 최하위 비트 데이터에 대응하는 드라이버 입력 신호(DRV[8], DRV[2])가 입력되는 드라이버 블록의 개수는 6 개이며, 드라이버 입력 신호(DRV[10:9], DRV[4:3])가 입력되는 드라이버 블록의 개수는 2개이고, 드라이버 입력 신호(DRV[7:6], DRV[1:0]))가 입력되는 드라이버 블록의 개수는 1개일 수 있다. 등화가 수행되지 않는 경우, 모든 드라이버 블록이 메인 인코더(도 16의 1620)로부터 출력된 최종 인코딩 데이 터(MAIN[0], MAIN[1], MAIN[2], MAIN[3])에 기초하여 DQ를 출력할 수 있다. 등화 이네이블 신호(EQ_EN1)가 이네이블 레벨로 변경되어 등화가 수행되는 경우, 도 18의 선택기(1801c, 1802c, 1803c, 1804c)가 보조 인코더로부터 출력된 최종 인코딩 데이터(POST[0], POST[1], POST[2], POST[3])를 드라이버 입력 신호(DRV[9], DRV[6] DRV[3], DRV[0])를 출력할 수 있다. 그러면, 일부 드라이버 블록이 드라이 버 입력 신호(DRV[9], DRV[6] DRV[3], DRV[0])에 기초하여 DQ를 출력하고, 이로써 디앰퍼시스 구동이 수행될 수 있다. 등화 이네이블 신호들(EQ_EN1, EQ_EN2)이 모두 이네이블 레벨로 변경되어 등화가 수행되는 경우, 도 18의 선택 기(1801b, 1801c, 1802b, 1802c, 1803b, 1803c, 1804b, 1804c)가 보조 인코더로부터 출력된 최종 인코딩 데이터(POST[0], POST[1], POST[2], POST[3])를 드라이버 입력 신호(DRV[10:9], DRV[7:6] DRV[4:3], DRV[1: 0])를 출력할 수 있다. 그러면, 일부 드라이버 블록이 드라이버 입력 신호(DRV[10:9], DRV[7:6] DRV[4:3], DRV[1:0])에 기초하여 DQ를 출력하고, 이로써 디앰퍼시스 구동이 수행될 수 있다. 도 21은 일 실시예에 따른 컴퓨터 시스템을 나타내는 예시 블록도이다. 도 21을 참조하면, 컴퓨팅 시스템은 프로세서, 메모리, 메모리 컨트롤러, 저장 장치 , 통신 인터페이스 및 버스를 포함한다. 컴퓨팅 시스템은 다른 범용적인 구성 요소를 더 포함할 수 있다. 프로세서는 컴퓨팅 시스템의 각 구성의 전반적인 동작을 제어한다. 프로세서는 CPU(central processing unit), AP(application processor), GPU(graphic processing unit) 등의 다양한 프로세싱 유닛 중 적어도 하나로 구현될 수 있다. 메모리는 각종 데이터 및 커맨드를 저장한다. 메모리는 도 1 내지 도 15를 참고로 하여 설명한 메 모리 장치로 구현될 수 있다. 메모리 컨트롤러는 메모리로의 및 메모리로부터의 데이터 또는 커맨드의 전달을 제어한다. 메모리 컨트롤러는 도 1 내지 도 15를 참고로 하여 설명한 메모리 컨트롤러로 구현될 수 있다. 어떤 실시예에서, 메모리 컨트롤러는 프로세서와 별도의 칩으로 제공될 수 있다. 어떤 실시예에서, 메모리 컨트롤러는 프로세서의 내부 구성으로 제공될 수 있다. 메모리 및 메모리 컨트롤러 각각은 데이터를 송수신하기 위해 듀오-바이너리 PAM-4 인코딩 및 디코딩을 수행할 수 있다. 메모리 및 메모리 컨트롤러 각각은 도 1 내지 도 15에 따라 송신하려는 데이터의 복수의 비 트를 복수의 2-비트 그룹 데이터로 구분하고, 2-비트 그룹 데이터를 복수의 UI 동안 출력하며, 제1 그룹 데이터 와 제2 그룹 데이터 중 어느 하나를 하나의 UI만큼 지연시키고, 두 그룹 데이터를 함께 DQ로서 출력할 수 있다. 또한, 메모리 및 메모리 컨트롤러 각각은 현재 UI에서 DQ를 디코딩하여 현재 UI 출력 데이터를 획 득하고, 현재 UI 출력 데이터를 이전 UI의 PAM-4 데이터와 감산하여, 현재 UI의 PAM-4 데이터를 획득할 수있다. 저장 장치는 프로그램 및 데이터를 비임시적으로 저장한다. 어떤 실시예에서, 저장 장치는 비휘발 성 메모리로 구현될 수 있다. 통신 인터페이스는 컴퓨팅 시스템의 유무선 인터넷 통신을 지원한다. 또한, 통신 인터페이스는 인터넷 통신 외의 다양한 통신 방식을 지원할 수도 있다. 버스는 컴퓨팅 시스템의 구성 요소간 통신 기능을 제공한다. 버스는 구성 요소간의 통신 프로토콜에 따라 적어도 하나의 유형의 버스를 포함할 수 있다. 어떤 실시예에서, 도 1 내지 도 21를 참고로 하여 설명한 각 구성요소 또는 둘 이상의 구성요소의 조합은 디지 털 회로, 프로그램 가능한 또는 프로그램할 수 없는 로직 장치 또는 어레이, 응용 주문형 집적 회로 (application specific integrated circuit, ASIC) 등으로 구현될 수 있다. 이상에서 본 발명의 실시예에 대하여 상세하게 설명하였지만 본 발명의 권리범위는 이에 한정되는 것은 아니고 다음의 청구범위에서 정의하고 있는 본 발명의 기본 개념을 이용한 당업자의 여러 변형 및 개량 형태 또한 본 발명의 권리범위에 속하는 것이다."}
{"patent_id": "10-2022-0128762", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 메모리 시스템의 예시 블록도이다. 도 2는 일 실시예에 따른 메모리 장치를 나타낸 블록도이다. 도 3은 일 실시예에 따른 송신기의 직렬화기와 인코더를 구체적으로 나타낸 블록도이다. 도 4는 일 실시예에 따른 메모리 장치의 출력 드라이버를 나타낸 회로도이다. 도 5는 일 실시예에 따른 인코더 및 드라이버의 입출력 신호를 나타낸 도면이다. 도 6은 PAM-4 신호를 설명하기 위한 도면이다. 도 7은 듀오-바이너리 PAM-4 신호를 설명하기 위한 도면이다. 도 8은 PAM8 신호를 설명하기 위한 도면이다. 도 9는 채널의 응답 특성을 나타낸 그래프이다. 도 10은 채널을 통과한 후의 PAM-4 신호의 아이 다이어그램이다. 도 11은 채널을 통과한 후의 듀오-바이너리 PAM-4 신호의 아이 다이어그램이다. 도 12는 일 실시예에 따른 메모리 장치의 디코더를 구체적으로 나타낸 블록도이다. 도 13은 일 실시예에 따른 디코더의 입출력 신호를 나타낸 도면이다. 도 14는 일 실시예에 따른 메모리 장치의 디코더를 구체적으로 나타낸 블록도이다. 도 15는 일 실시예에 따른 디코더의 입출력 신호를 나타낸 도면이다. 도 16은 일 실시예에 따른 송신기를 나타낸 블록도이다. 도 17은 일 실시예에 따른 송신기의 일부를 구체적으로 나타낸 블록도이다. 도 18은 일 실시예에 따른 송신기의 등화기를 구체적으로 나타낸 블록도이다. 도 19는 일 실시예에 따른 메모리 장치의 출력 드라이버를 나타낸 회로도이다. 도 20은 일 실시예에 따른 메모리 장치의 출력 드라이버의 출력 신호를 나타낸 표이다. 도 21은 일 실시예에 따른 컴퓨터 시스템을 나타내는 예시 블록도이다."}
