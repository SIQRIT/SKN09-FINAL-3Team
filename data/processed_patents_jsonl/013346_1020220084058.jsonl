{"patent_id": "10-2022-0084058", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0007029", "출원번호": "10-2022-0084058", "발명의 명칭": "소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시스템", "출원인": "(주) 피플아이", "발명자": "염찬섭"}}
{"patent_id": "10-2022-0084058", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "코딩 능력을 평가하는 평가 서버로서,답을 코딩으로 구할 수 있는 코딩 문제를 피평가자의 단말기로 전송하고, 상기 단말기로부터 상기 코딩 문제에대해 상기 피평가자가 코딩한 답변 코드를 수신하는 통신부;상기 답변 코드에 대한 평가를 수행하여 기설정된 복수의 평가 항목에 대한 각각의 복수의 항목 결과를 산출하는 평가 처리부;상기 복수의 항목 결과를 병합하여 종합 판정 결과를 생성하는 통합 판정부; 및상기 복수의 항목 결과 및 상기 종합 판정 결과에 대한 각각의 보고서를 생성하는 리포트 생성부를 포함하는 평가 서버."}
{"patent_id": "10-2022-0084058", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 복수의 평가 항목은 상기 코딩 문제의 정답 여부, 정적 신뢰성 여부, 및 동적 신뢰성 여부를 구비하고,상기 평가 처리부는,상기 정답 여부를 판단하기 위해, 상기 답변 코드를 실행하고 그 실행된 결과가 정답인지 판단하는 소스코드 처리 모듈;상기 정적 신뢰성이 있는지 판단하기 위해, 상기 답변 코드가 코딩 규칙을 만족하는지 판단하고, 코딩 취약점이있는지 분석하는 정적 신뢰성 처리 모듈; 및상기 동적 신뢰성이 있는지 판단하기 위해, 상기 답변 코드의 제어문이 적절한지 판단하는 동적 신뢰성 처리 모듈을 구비하는, 평가 서버."}
{"patent_id": "10-2022-0084058", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 종합 판정 결과는 상기 소스코드 처리 모듈의 정답 여부에 대한 평가 결과, 상기 정적 신뢰성 처리 모듈의정적 신뢰성 평가 결과, 및 상기 동적 신뢰성 처리 모듈의 동적 신뢰성 평가 결과가 병합된 것인, 평가 서버."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시스템에 관한 것으로서, 본 시스템의 평가 서버는 답을 코딩으로 구할 수 있는 코딩 문제를 피평가자의 단말기로 전송하고, 상기 단 말기로부터 상기 코딩 문제에 대해 상기 피평가자가 코딩한 답변 코드를 수신하는 통신부; 상기 답변 코드에 대한 평가를 수행하여 기설정된 복수의 평가 항목에 대한 각각의 복수의 항목 결과를 산출하는 평가 처리 부; 상기 복수의 항목 결과를 병합하여 종합 판정 결과를 생성하는 통합 판정부; 및 상기 복수의 항목 결과 및 상기 종합 판정 결과에 대한 각각의 보고서를 생성하는 리포트 생성부를 포함할 수 있다."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시스템에 관한 것으로서, 보 다 상세하게는, 온라인 상에서 웹 브라이저를 통해 손 쉽게 코딩할 수 있는 편집창으로 작성한 소스코드를 코딩 규칙, 취약점 및 실행시간 오류 기반으로 코딩 능력을 평가할 수 있는 시스템에 관한 것이다."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "4차 산업혁명은 모든 것이 연결되고 보다 지능화되는 사회로, 그 패러다임 변화의 본질은 소프트웨어이다. 코 딩이 중요한 것은 딥러닝, 빅데이터, 인공지능(AI), 사물인터넷(IoT), 로봇기술, 드론, 자율주행차, 가상현실 (VR) 등 4차 산업혁명 시대를 대변하는 모든 ICT(정보통신기술)을 바탕으로 한 소프트웨어를 통해 구현되기 때 문이다. 이러한 중요성 때문에 해외 선진국에서는 경쟁적으로 코딩을 정규 교육과정에 편입시켜 교육을 하고 있 다. 그런데, 코딩 실습자는 자신의 코드가 제대로 되어 있는지 판정받을 필요가 있으며, 교육 제공자 측은 실습"}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "자의 코딩 능력이 어느 정도인지 자동으로 판단할 수 있는 시스템을 필요로 하고 있다.발명의 내용"}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 소프트웨어 코드를 작성함에 있어 각 소프트웨어 최소 구성 단위별 코딩규칙, 실행시간 오류 및 커버리지를 체계적으로 분석하고 대응함으로써 신뢰성높은 소프트웨어 개발자를 양성하는 코딩능력 평가시스 템을 제공하는데 그 목적이 있다."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시스템의 코딩 능력을 평가하는 평가 서버는 답을 코딩으로 구할 수 있는 코딩 문제를 피평가자의 단말기로 전송 하고, 상기 단말기로부터 상기 코딩 문제에 대해 상기 피평가자가 코딩한 답변 코드를 수신하는 통신부 ; 상기 답변 코드에 대한 평가를 수행하여 기설정된 복수의 평가 항목에 대한 각각의 복수의 항목 결과를 산출하는 평가 처리부; 상기 복수의 항목 결과를 병합하여 종합 판정 결과를 생성하는 통합 판정부; 및 상기 복수의 항목 결과 및 상기 종합 판정 결과에 대한 각각의 보고서를 생성하는 리포트 생성부를 포 함할 수 있다. 또한, 상기 복수의 평가 항목은 상기 코딩 문제의 정답 여부, 정적 신뢰성 여부, 및 동적 신뢰성 여부를 구비할 수 있다. 또한, 상기 평가 처리부는, 상기 정답 여부를 판단하기 위해, 상기 답변 코드를 실행하고 그 실행된 결과 가 정답인지 판단하는 소스코드 처리 모듈; 상기 정적 신뢰성이 있는지 판단하기 위해, 상기 답변 코드가 코딩 규칙을 만족하는지 판단하고, 코딩 취약점이 있는지 분석하는 정적 신뢰성 처리 모듈; 및 상기 동적 신뢰성이 있는지 판단하기 위해, 상기 답변 코드의 제어문이 적절한지 판단하는 동적 신뢰성 처리 모듈을 구비할 수 있다. 또한, 상기 종합 판정 결과는 상기 소스코드 처리 모듈의 정답 여부에 대한 평가 결과, 상기 정적 신뢰성 처리 모듈의 정적 신뢰성 평가 결과, 및 상기 동적 신뢰성 처리 모듈의 동적 신뢰성 평가 결과가 병 합된 것일 수 있다."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 기존의 코딩 능력 평가 시스템에 융합할 수 있는 기술적 패러다임으로 정적/동적 신뢰성 측정을 적용 함으로써 다양한 코딩능력평가 시스템의 조합이 가능하며 이러한 코딩능력평가 시스템을 통하여 신뢰성높은 소 프트웨어 개발자를 양성할 수 있다."}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의 해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된 다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유 사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 및/또는 이라는 용어는 복수의 관련된 기재된 항목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함한다. '또는'은 전후 문맥상 논리적 배타합으로해석될 수 있으나, 일반적으로 '그렇지 않으면', '논리적 배타합' 등의 직접적인 묘사가 없는 한, '및/또는'과 같은 의미, 즉, 논리합으로 해석한다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 또한 네트워크 상의 제1 구성요소와 제2 구성요소가 연결되어 있거나 접속되어 있다는 것은, 유선 또는 무선으로 제1 구성요소와 제 2 구성요소 사이에 데이터를 주고 받을 수 있음을 의미한다. 또한, 이하의 설명에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 단순히 본 명세서 작성의 용이함만 이 고려되어 부여되는 것으로서, 그 자체로 특별히 중요한 의미 또는 역할을 부여하는 것은 아니다. 따라서, 상 기 \"모듈\" 및 \"부\"는 서로 혼용되어 사용될 수도 있다. 이와 같은 구성요소들은 실제 응용에서 구현될 때 필요에 따라 2 이상의 구성요소가 하나의 구성요소로 합쳐지 거나, 혹은 하나의 구성요소가 2 이상의 구성요소로 세분되어 구성될 수 있다. 도면 전체를 통하여 동일하거나 유사한 구성요소에 대해서는 동일한 도면 부호를 부여하였고, 동일한 도면 부호를 가지는 구성요소에 대한 자세 한 설명은 전술한 구성요소에 대한 설명으로 대체되어 생략될 수 있다. 또한, 본 발명은 본 명세서에 표시된 실시예들의 모든 가능한 조합들을 망라한다. 본 발명의 다양한 실시예는 서로 다르지만 상호 배타적이지 않다. 본 명세서에 기술된 특정 형상, 구조, 기능, 및 특성의 일 실시예는 다른 실시예로 구현될 수 있다. 예를 들어, 제1 및 제2 실시예에서 언급되는 구성요소는 제1 및 제2 실시예의 모든 기능을 수행할 수 있다. 도 1은 본 발명의 일 실시예에 따른 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시 스템의 블럭 구성도이다. 도 2는 도 1의 평가 서버의 내부 블럭 구성도이다. 도 3은 도 2의 평가 처리부의 내부 블럭 구성도이다. 도 4는 본 발명의 일 실시예에 따른 코딩 능력 평가 방법의 순서도이다. 도 5는 도 4의 평가 처리 방법의 순서도이다. 도 1을 참조하면, 본 발명의 일 실시예에 따른 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능 력 평가 시스템은 평가 서버 및 단말기를 포함할 수 있다. 단말기와 평가 서버는 인터넷 등의 통신을 통해, 서로 데이터를 주고 받을 수 있다. 본 명세서에서 기술되는 단말기에는, 휴대폰, 스마트 폰(smart phone), 노트북 컴퓨터(notebook computer), 디지털방송용 단말기, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 네비 게이션, 타블렛 컴퓨터(tablet computer), 이북(e-book) 단말기 등이 포함될 수 있다. 단말기는 코딩 능력을 평가 받으려는 수행자 측일 수 있다. 이러한 피평가자는 학생일 수 있다. 단말기는 평가 서버에서 제시한 코딩 문제를 수신할 수 있다. 단말기는 그 사용자에 의해 작성된 답변 코드를 평가 서버에 전송할 수 있다. 평가 서버는 피평가자의 코딩 능력을 평가할 수 있다. 도 2를 참조하면, 평가 서버는 제어부, 통합 판정부, 리포트 생성부, 통신부, 및 저장 부를 포함할 수 있다. 제어부는 각 부의 동작을 제어하며, 평가 서버의 전반적인 동작을 제어 및 처리를 수행할 수 있다. 제 어부는 마이크로 컨트롤러나 중앙처리장치로 해석될 수 있다. 제어부는 저장부에 저장된 프로그램 및/또는 데이터를 이용하여 다양한 동작을 수행할 수 있다. 저장부는 제어부의 처리 및 제어를 위한 프로그램을 저장할 수 있고, 입력되거나 출력되는 데이터들 의 임시 저장을 위한 기능을 수행할 수도 있다. 저장부는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램, 롬 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 저장부는 데이터베이스로서 기능하거나, 데이터베이스 기능을 구비할 수 있다. 저장부는 데이터베이 스를 운용하거나 데이터베이스와 연결되어 제어하는 서버일 수 있다. 다른 실시예로, 평가 서버는 이러한 데이터베이스 기능을 하는 데이터베이스 서버와 연결될 수 있다. 통신부는 네트워크를 통해 단말기와 데이터를 주고 받을 수 있다. 통신 방식은 인터넷 프로토콜인 것 이 바람직하다. 도 4를 참조하면, 제어부는 단말기에 답을 코딩으로 구할 수 있는 코딩 문제를 통신부를 통해 전 송할 수 있다(S310). 피평가자는 단말기를 통해 수신한 코딩 문제를 소프트웨어 코드를 작성하여 답을 구할 수 있다. 피평가자는 작성한 답변 코드를 단말기를 통해 평가 서버으로 전송하고, 평가 서버는 답 변 코드를 수신할 수 있다(S315). 답변 코드는 문제를 해결하기 위한 코드 이외에, 피평가자의 식별 정보(이름, 학교, 학번 등), 및 작성 언어 등의 메타 데이터를 더 구비할 수 있다. 코딩 문제에 작성 언어가 명시되어 있으 면, 답변 코드의 메타 데이터에 작성 언어는 생략될 수 있다. 이러한 절차는 온라인 상에서 웹 브라우저를 통해 문제를 제시하고, 해당 웹 브라우저에 코딩할 수 있는 편집창을 제공하는 것으로 구현될 수 있다. 제어부는 통신부을 통해 수신한 답변 코드를 평가 처리부로 보내고, 평가 처리부는 답변 코드에 대한 평가를 수행할 수 있다(S320). 평가 처리부는 답변 코드에 대한 평가를 수행하여 기설정된 복 수의 평가 항목에 대한 각각의 복수의 항목 결과를 산출할 수 있다. 평가 처리부는 코드에 대해 소프트웨 어의 최소 구성 단위별로 평가할 수 있다. 복수의 평가 항목은 상기 코딩 문제의 정답 여부, 정적 신뢰성 여부, 및 동적 신뢰성 여부를 구비할 수 있다. 도 3을 참조하면, 평가 처리부는 소스코드 처리 모듈, 정적 신뢰성 처리 모듈, 및 동적 신뢰성 처리 모듈을 구비할 수 있다. 각 모듈은 평가 결과에 대한 지표, 및 문제점 등의 항목 결과를 도출할 수 있다. 도 5를 참조하면, 소스코드 처리 모듈은 답변 코드를 실행하면 정답을 도출하는지 판단할 수 있다(S350). 소스코드 처리 모듈은 답변 코드가 정답 인지 여부를 판단하기 위해, 답변 코드를 실행하고 그 실행된 결 과가 정답인지 판단할 수 있다. 소스코드 처리 모듈은 정답 여부에 따른 점수를 책정할 수 있다. 정적 신뢰성 처리 모듈은 답변 코드에 대한 정적 신뢰성을 판단할 수 있다. 정적 신뢰성이 있는지 판단하 기 위해, 정적 신뢰성 처리 모듈은 답변 코드가 코딩 규칙을 만족하는지 판단(S355)하고, 코딩 취약점이 있는지 분석(S360)할 수 있다. 정적 신뢰성 처리 모듈은 답변 코드가 컴파일러 언어로 작성된 경우, 컴파일 에러가 발생하는 여부 등의 답변 코드가 코딩 규칙에 맞게 코딩되었는지 판단할 수 있다. 정적 신뢰성 처리 모듈은 답변 코드가 인터 프리터 언어인 경우, 중간에 에러가 발생하는지 여부 등의 답변 코드가 코딩 규칙에 맞게 코딩되었는지 판단할 수 있다. 에러는 답변 코드가 메모리 관리를 잘 하는지 등의 내용을 포함할 수 있다. 에러가 발생한 경우, 정적 신뢰성 처리 모듈은 에러 발생에 따른 지표 및 에러 발생 부분을 리포팅할 수 있다. 정적 신뢰성 처리 모듈은 입력 값 검증에 취약점이 있는지, 세션 처리 및 접근 통제에 취약점이 있는지, 코드 내 중요 정보가 노출되는 취약점이 있는지, 보안 취약점이 있는지 등의 취약점을 분석하고, 그 취약점 정 도를 지표로 산출하고, 취약점을 리포팅할 수 있다. 동적 신뢰성 처리 모듈은 동적 신뢰성이 있는지 판단할 수 있다. 동적 신뢰성이 있는지 판단하기 위해, 동 적 신뢰성 처리 모듈은 답변 코드의 제어문이 적절한지 판단할 수 있다(S365). 동적 신뢰성 처리 모듈 은 이를 위해 코드 커버리지를 측정할 수 있다. 코드 커버리지는 함수 커버리지(functio coverage), 실행 문 커버리지(statement coverage), 브랜치 커버리지(branch coverage), 컨디션 커버리지(condition coverage), 및 경로 커버리지(path coverage) 등이 있을 수 있다. 동적 신뢰성 처리 모듈은 함수 커버리지 측정을 위해, 어떤 함수가 최소한 한 번은 실행되었는 가를 측정 할 수 있다. 동적 신뢰성 처리 모듈은 실행문 커버리지 측정을 위해, 각 실행문이 실행되었는 지를 측정할 수 있다. 동적 신뢰성 처리 모듈은 브랜치 커버리지 측정을 위해, 각 조건 분기문의 조건이 참/거짓으로 모두 실행되었는지 측정할 수 있다. 동적 신뢰성 처리 모듈은 컨디션 커버리지 측정을 위해, 조건 분기문 에 있는 모든 표현(expresion)들의 참 혹은 거짓을 모두 확인할 수 있다. 동적 신뢰성 처리 모듈은 경로 커버리지 측정을 위해, 각 함수에서 가능한 모든 경로(Path)를 실행해봤는지를 확인할 수 있다. 통합 판정부는 복수의 항목 결과를 병합하여 종합 판정 결과를 생성할 수 있다(S325). 종합 판정 결과는 소스코드 처리 모듈의 정답 여부에 대한 평가 결과, 정적 신뢰성 처리 모듈의 정적 신뢰성 평가결과, 및 동적 신뢰성 처리 모듈의 동적 신뢰성 평가 결과를 병합하고, 통합한 결과일 수 있다. 저장부는 복수의 항목 결과 및 종합 판정 결과를 피평가자의 식별정보와 함께 데이터베이스화하여 저장할 수 있다. 리포트 생성부는 복수의 항목 결과 및 종합 판정 결과에 대한 각각의 보고서를 생성할 수 있다(S330). 리 포트 생성부는 평가 처리부에서 평가한 지표 및 리포팅한 내용에 대해, 코딩 규칙 결과 보고서, 취약 점 결과 보고서, 커버리지 결과 보고서, 및 종합 결과 보고서를 생성할 수 있다. 상기 본 발명은 하드웨어 또는 소프트웨어에서 구현될 수 있다. 구현은 상기 본 발명은 또한 컴퓨터로 읽을 수 있는 기록매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 즉, 컴퓨터에 의해 실행 가능한 명 령어를 포함하는 기록 매체의 형태로 구현될 수 있다. 컴퓨터 판독 가능 매체는 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 매체를 포함한다. 컴퓨터 판독 가능 매체는 컴퓨터 저장 매체 및 통신 저장 매체를 포함할 수 있다. 컴퓨터 저장 매체는 컴퓨터가 읽을 수 있는 명령어, 데이터 구조, 프로그램 모듈, 및 기타 데이터 등 정보 저장을 위한 임의의 방법 또는 기술로서 구현된 모든 저장 가능한 매체를 포함하는 것으로, 휘발성/비휘발성/하이브리드형 메모리 여부, 분리형/비분리형 여부 등에 한정되지 않는다. 통신 저장 매 체 는 반송파와 같은 변조된 데이터 신호 또는 전송 메커니즘, 임의의 정보 전달 매체 등을 포함한다. 그리고 본 발명을 구현하기 위한 기능적인(functional) 프로그램, 코드 및 코드 세그먼트들은 본 발명이 속하는 기술분 야의 프로그래머들에 의해 용이하게 추론될 수 있다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2022-0084058", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안 될 것이다."}
{"patent_id": "10-2022-0084058", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 소프트웨어 코딩 규칙, 취약점 및 실행시간 오류 기반의 코딩 능력 평가 시 스템의 블럭 구성도이다. 도 2는 도 1의 평가 서버의 내부 블럭 구성도이다. 도 3은 도 2의 평가 처리부의 내부 블럭 구성도이다. 도 4는 본 발명의 일 실시예에 따른 코딩 능력 평가 방법의 순서도이다. 도 5는 도 4의 평가 처리 방법의 순서도이다."}
