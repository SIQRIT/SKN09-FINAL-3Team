{"patent_id": "10-2021-0071670", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0088276", "출원번호": "10-2021-0071670", "발명의 명칭": "캐시 기반의 챗봇 간 경쟁 유도 방법 및 장치", "출원인": "건국대학교 산학협력단", "발명자": "김두현"}}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "멀티 챗봇 서비스를 중개하는 중개 장치의 동작 방법에 있어서,사용자 단말로부터 사용자의 질문을 수신하는 동작;캐시 메모리에 저장된 Q&A 세트들에 상기 사용자의 질문과 일치하는 질문이 있는지 확인하는 동작;상기 캐시 메모리에 대한 확인 결과에 기초하여 상기 사용자의 질문에 대한 정보가 컴페티션 보드에 있는지 확인하는 동작; 및상기 캐시 메모리에 대한 확인 결과 및 상기 컴페티션 보드에 대한 대한 확인 결과 중에서 하나 이상에 기초하여 상기 Q&A 세트들 중 하나의 Q&A 세트의 응답 또는 챗봇으로부터 전달받은 응답을 상기 사용자 단말로 전송하는 동작을 포함하는, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 전송하는 동작은,상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 있는 경우, 상기 Q&A 세트들 중에서 상기 일치하는질문의 Q&A 세트의 응답을 상기 사용자 단말로 전송하는 동작; 및상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 없는 경우, 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전송하는 동작을 포함하는, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전송하는 동작은,상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 있는 경우, 상기 상기 컴페티션 보드에 기록된 상기사용자의 질문에 대해 응답했던 챗봇에 상기 사용자의 질문에 대한 응답을 요청하는 동작; 및상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 없는 경우, 상기 사용자의 질문에 대한 응답을 임의의챗봇에 요청하는 동작을 포함하는, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 챗봇은,상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 하나 이상의 챗봇들 중에서 상기 사용자의질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇인, 방법.공개특허 10-2022-0088276-3-청구항 5 제3항에 있어서,상기 임의의 챗봇에 요청하는 동작은,복수 회의 상기 사용자의 질문에 대해서 상기 복수의 챗봇들 모두에게 라운드로빈식으로 디스패치하여 응답을요청하는 동작을 포함하는, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,복수의 챗봇들 중에서 어느 챗봇으로부터 상기 사용자의 질문에 관련된 Q&A 세트들을 획득하는 동작; 및캐싱 규칙에 기초하여 상기 사용자의 질문에 관련된 Q&A 세트들을 이용함으로써 상기 캐시 메모리를 업데이트하는 동작을 더 포함하는, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 어느 챗봇은,상기 사용자의 질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇인, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "하드웨어와 결합되어 제1항 내지 제7항 중 어느 하나의 항의 방법을 실행시키기 위하여 컴퓨터 판독 가능한 기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "멀티 챗봇 서비스를 중개하는 중개 장치에 있어서,Q&A 세트들을 저장하는 캐시 메모리; 및사용자 단말로부터 사용자의 질문을 수신하고, 상기 캐시 메모리에 저장된 Q&A 세트들에 상기 사용자의 질문과일치하는 질문이 있는지 확인하고, 상기 캐시 메모리에 대한 확인 결과에 기초하여 상기 사용자의 질문에 대한정보가 컴페티션 보드에 있는지 확인하고, 상기 캐시 메모리에 대한 확인 결과 및 상기 컴페티션 보드에 대한대한 확인 결과 중에서 하나 이상에 기초하여 상기 Q&A 세트들 중 하나의 Q&A 세트의 응답 또는 챗봇으로부터전달받은 응답을 상기 사용자 단말로 전송하는 프로세서를 포함하는, 중개 장치."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,공개특허 10-2022-0088276-4-상기 프로세서는,상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 있는 경우, 상기 Q&A 세트들 중에서 상기 일치하는질문의 Q&A 세트의 응답을 상기 사용자 단말로 전송하고,상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 없는 경우, 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전송하는, 중개 장치."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 프로세서는,상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 있는 경우, 상기 상기 컴페티션 보드에 기록된 상기사용자의 질문에 대해 응답했던 챗봇에 상기 사용자의 질문에 대한 응답을 요청하고,상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 없는 경우, 상기 사용자의 질문에 대한 응답을 임의의챗봇에 요청하는, 중개 장치."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 챗봇은,상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 하나 이상의 챗봇들 중에서 상기 사용자의질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇인, 방법."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서,상기 프로세서는,복수 회의 상기 사용자의 질문에 대해서 상기 복수의 챗봇들 모두에게 라운드로빈식으로 디스패치하여 응답을요청하는, 중개 장치."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서,상기 프로세서는,복수의 챗봇들 중에서 어느 챗봇으로부터 상기 사용자의 질문에 관련된 Q&A 세트들을 획득하고,캐싱 규칙에 기초하여 상기 사용자의 질문에 관련된 Q&A 세트들을 이용함으로써 상기 캐시 메모리를 업데이트하는, 중개 장치."}
{"patent_id": "10-2021-0071670", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 어느 챗봇은,상기 사용자의 질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇인, 중개 장치.공개특허 10-2022-0088276-5-"}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "멀티 챗봇 시스템의 만족도 개선을 위한 캐시 기반의 경쟁 유도 방법 및 장치가 개시된다. 다양한 실시예들에 따른, 멀티 챗봇 서비스를 중개하는 중개 장치의 동작 방법은, 사용자 단말로부터 사용자의 질문을 수신하는 동 작; 캐시 메모리에 저장된 Q&A 세트들에 상기 사용자의 질문과 일치하는 질문이 있는지 확인하는 동작; 상기 캐 시 메모리에 대한 확인 결과에 기초하여 상기 사용자의 질문에 대한 정보가 컴페티션 보드에 있는지 확인하는 동 작; 및 상기 캐시 메모리에 대한 확인 결과 및 상기 컴페티션 보드에 대한 대한 확인 결과 중에서 하나 이상에 기초하여 상기 Q&A 세트들 중 하나의 Q&A 세트의 응답 또는 챗봇으로부터 전달받은 응답을 상기 사용자 단말로 전송하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래 개시는 멀티 챗봇 시스템의 만족도 개선을 위한 캐시 기반의 챗봇 간 경쟁 유도 방법 및 장치가 개시된다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(AI) 및 SNS(social network service)의 발달로 기존 메신저를 통해 대화하듯이 정보를 획득할 수 있는 챗봇 서비스가 활발히 도입되고 있다. 챗봇은 사용자가 기존에 사용하던 메신저를 통해 채팅하듯이 질문을 입력하면, 인공지능이 질문 내용을 분석하 여 적절한 해답을 주는 대화형 메신저이다. 최근 국내외 유수 기업들은 고객지원 서비스에 챗봇을 도입해 고객 응대에 필요한 인력을 줄임과 동시에 24시간 빠르게 응답을 처리하여 고객지원 서비스의 품질 향상을 도모하고 있다. 이러한 챗봇 서비스는 공공 정보 제공, 음식 주문, 지도 정보 등 다양한 영역에 사용될 수 있다. 한편, 챗봇은 각각의 제공되는 서비스에 따라 구별되어 생성되고, 각각의 챗봇은 해당 서비스와 관련된 질의에 대한 응답만을 제공할 수 있다. 챗봇의 보다 효율적은 활용을 위해 통합적으로 복수의 서비스에 대하여 응답을 제공하는 챗봇을 구현하는 것이 요구될 수 있다. 이러한 챗봇의 구현은 대용량의 저장 공간 및 네트워크 리소 스가 요구되는 바, 실제적인 구현은 어려움이 뒤따를 수 있다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "위에서 설명한 배경기술은 발명자가 본원의 개시 내용을 도출하는 과정에서 보유하거나 습득한 것으로서, 반드 시 본 출원 전에 일반 공중에 공개된 공지기술이라고 할 수는 없다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 실시예들은 멀티 챗봇 시스템의 만족도 개선을 위한 캐시 기반의 경쟁 유도 기술을 제공할 수 있다. 다만, 기술적 과제는 상술한 기술적 과제들로 한정되는 것은 아니며, 또 다른 기술적 과제들이 존재할 수 있다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예들에 따른, 멀티 챗봇 서비스를 중개하는 중개 장치의 동작 방법은, 사용자 단말로부터 사용자의 질문을 수신하는 동작; 캐시 메모리에 저장된 Q&A 세트들에 상기 사용자의 질문과 일치하는 질문이 있는지 확인 하는 동작; 상기 캐시 메모리에 대한 확인 결과에 기초하여 상기 사용자의 질문에 대한 정보가 컴페티션 보드에 있는지 확인하는 동작; 및 상기 캐시 메모리에 대한 확인 결과 및 상기 컴페티션 보드에 대한 확인 결과 중에서 하나 이상에 기초하여 상기 Q&A 세트들 중 하나의 Q&A 세트의 응답 또는 챗봇으로부터 전달받은 응답을 상기 사 용자 단말로 전송하는 동작을 포함할 수 있다. 상기 전송하는 동작은, 상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 있는 경우, 상기 Q&A 세트들 중에서 상기 일치하는 질문의 Q&A 세트의 응답을 상기 사용자 단말로 전송하는 동작; 및 상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 없는 경우, 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전 송하는 동작을 포함할 수 있다. 상기 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전송하는 동작은, 상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 있는 경우, 상기 상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했 던 챗봇에 상기 사용자의 질문에 대한 응답을 요청하는 동작; 및 상기 사용자의 질문에 대한 정보가 상기 컴페 티션 보드에 없는 경우, 상기 사용자의 질문에 대한 응답을 임의의 챗봇에 요청하는 동작을 포함할 수 있다. 상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 챗봇은, 상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 하나 이상의 챗봇들 중에서 상기 사용자의 질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇일 수 있다. 상기 임의의 챗봇에 요청하는 동작은, 복수 회의 상기 사용자의 질문에 대해서 상기 복수의 챗봇들 모두에게 라 운드로빈식으로 디스패치하여 응답을 요청하는 동작을 포함할 수 있다. 상기 방법은, 복수의 챗봇들 중에서 어느 챗봇으로부터 상기 사용자의 질문에 관련된 Q&A 세트들을 획득하는 동 작; 및 캐싱 규칙에 기초하여 상기 사용자의 질문에 관련된 Q&A 세트들을 이용함으로써 상기 캐시 메모리를 업 데이트하는 동작을 더 포함할 수 있다. 상기 어느 챗봇은, 상기 사용자의 질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇일 수 있다. 다양한 실시예들에 따른, 멀티 챗봇 서비스를 중개하는 중개 장치는, Q&A 세트들을 저장하는 캐시 메모리; 및 사용자 단말로부터 사용자의 질문을 수신하고, 상기 캐시 메모리에 저장된 Q&A 세트들에 상기 사용자의 질문과 일치하는 질문이 있는지 확인하고, 상기 캐시 메모리에 대한 확인 결과에 기초하여 상기 사용자의 질문에 대한 정보가 컴페티션 보드에 있는지 확인하고, 상기 캐시 메모리에 대한 확인 결과 및 상기 컴페티션 보드에 대한 대한 확인 결과 중에서 하나 이상에 기초하여 상기 Q&A 세트들 중 하나의 Q&A 세트의 응답 또는 챗봇으로부터 전달받은 응답을 상기 사용자 단말로 전송하는 프로세서를 포함할 수 있다. 상기 프로세서는, 상기 사용자의 질문과 일치하는 질문이 상기 캐시 메모리에 있는 경우, 상기 Q&A 세트들 중에 서 상기 일치하는 질문의 Q&A 세트의 응답을 상기 사용자 단말로 전송하고, 상기 사용자의 질문과 일치하는 질 문이 상기 캐시 메모리에 없는 경우, 복수의 챗봇들 중에서 어느 챗봇으로부터 전달받은 응답을 전송할 수 있다. 상기 프로세서는, 상기 사용자의 질문에 대한 정보가 상기 컴페티션 보드에 있는 경우, 상기 상기 컴페티션 보 드에 기록된 상기 사용자의 질문에 대해 응답했던 챗봇에 상기 사용자의 질문에 대한 응답을 요청하고, 상기 사 용자의 질문에 대한 정보가 상기 컴페티션 보드에 없는 경우, 상기 사용자의 질문에 대한 응답을 임의의 챗봇에 요청할 수 있다. 상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 챗봇은, 상기 컴페티션 보드에 기록된 상기 사용자의 질문에 대해 응답했던 하나 이상의 챗봇들 중에서 상기 사용자의 질문에 대해 획득한 호감 표시 누적 치가 가장 높은 챗봇일 수 있다. 상기 프로세서는, 복수 회의 상기 사용자의 질문에 대해서 상기 복수의 챗봇들 모두에게 라운드로빈식으로 디스 패치하여 응답을 요청할 수 있다. 상기 프로세서는, 복수의 챗봇들 중에서 어느 챗봇으로부터 상기 사용자의 질문에 관련된 Q&A 세트들을 획득하 고, 캐싱 규칙에 기초하여 상기 사용자의 질문에 관련된 Q&A 세트들을 이용함으로써 상기 캐시 메모리를 업데이 트할 수 있다. 상기 어느 챗봇은, 상기 사용자의 질문에 대해 획득한 호감 표시 누적치가 가장 높은 챗봇일 수 있다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "실시예들에 대한 특정한 구조적 또는 기능적 설명들은 단지 예시를 위한 목적으로 개시된 것으로서, 다양한 형 태로 변경되어 구현될 수 있다. 따라서, 실제 구현되는 형태는 개시된 특정 실시예로만 한정되는 것이 아니며, 본 명세서의 범위는 실시예들로 설명한 기술적 사상에 포함되는 변경, 균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어를 다양한 구성요소들을 설명하는데 사용될 수 있지만, 이런 용어들은 하나의 구성요소 를 다른 구성요소로부터 구별하는 목적으로만 해석되어야 한다. 예를 들어, 제1 구성요소는 제2 구성요소로 명 명될 수 있고, 유사하게 제2 구성요소는 제1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 설명된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 으로 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들 을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 해당 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되 는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 다양한 실시예들에 따른 멀티 챗봇 시스템의 일 예를 나타내고, 도 2는 중개 장치에서 이용하는 캐시 메 모리 및 컴페티션 보드의 일 예를 나타낸다. 다양한 실시예들에 따르면, 멀티 챗봇 시스템은 시스템의 만족도 개선을 위한 캐시 기반의 경쟁 유도 방법 을 수행할 수 있다. 멀티 챗봇 시스템의 만족도는 사용자들이 챗봇이 제공하는 응답(예: 답변)에 대해 부 여하는 호감 표시(예: '좋아요', Like it, Like 등)의 누적치를 의미할 수 있다. 멀티 챗봇 시스템에 챗봇 들의 호감 표시 랭킹을 운영하고 각 챗봇들로 하여금 호감 표시를 많이 받기 위하여 경쟁하는 체계를 만듦으로 써 멀티 챗봇 시스템에서 호감 표시 누적치의 상승을 유도하고자 할 수 있다. 다양한 실시예들에 따르면, 멀티 챗봇 시스템에서는 챗봇들이 사용자들로부터 호감 표시를 많이 받기 위하 여 경쟁하는 수단으로 캐시(예: 캐시 메모리)를 활용할 수 있다. 캐시 메모리에는 호감 표시 수치가 높은 응답 이 보관될 수 있다. 일단, 캐시 메모리에 응답이 보관되게 되면 그 시점부터 들어오는 사용자의 질문에 대한 답변으로 활용되기 때문에 호감 표시를 더 많이 받아 랭킹을 올릴 수 있는 기회가 될 수 있다. 챗봇 개발자들 입장에서는 자신이 만든 챗봇의 호감 표시 랭킹을 끌어 올리기 위하여 우선적으로 자신의 답변이 캐시 메모리에 들어가도록 더 좋은 답변을 구비하고자 경쟁적으로 서로 노력하게 될 것이다. 이는 멀티 챗봇 시스템 전체 의 호감 표시 누적치를 상승시켜 만족도의 개선 유도를 만들어 낼 수 있다. 다양한 실시예들에 따르면, 멀티 챗봇 시스템은 사용자 단말, 중개 장치(예: 메타 챗봇), 및 복 수의 챗봇들을 포함할 수 있다. 멀티 챗봇 시스템은 사용자 단말의 단말(예: 제1 레이어), 중개 장치 의 에지(또는 캐시)(예: 제2 레이어), 및 복수의 챗봇들의 챗봇(예: 제3 레이어)의 세 계층으로 나뉠 수 있다. 제1 레이어에서, 사용자 단말은 클라이언트 프로그램(client program)인 챗봇 인터페이스(예: 무카차)를 포함할 수 있다. 챗봇 인터페이스는 사용자 단말과 멀티 챗봇 시스템의 다른 구성(예: 중개 장치 ) 간의 미들웨어 역할을 수행하며, 사용자와의 대화(예: 사용자 단말과 챗봇 간의 주고받는 대화)를 관리할 수 있다. 사용자 단말은 사용자 단말에 설치된 챗봇 인터페이스를 통해 중개 장치에 접 속할 수 있다. 사용자는 사용자 단말의 챗봇 인터페이스를 통해 질문(예: 질의, 쿼리)을 전송할 수 있다.사용자 단말은 PC(Personal Computer), 데이터 서버, 또는 휴대용 장치로 구현될 수 있다. 휴대용 전자 장치는 랩탑(laptop) 컴퓨터, 이동 전화기, 스마트 폰(smart phone), 태블릿(tablet) PC, 모바일 인터넷 디바 이스(mobile internet device(MID)), PDA(personal digital assistant), EDA(enterprise digital assistant), 디지털 스틸 카메라(digital still camera), 디지털 비디오 카메라(digital video camera), PMP(portable multimedia player), PND(personal navigation device 또는 portable navigation device), 휴대용 게임 콘솔 (handheld game console), e-북(e-book), 스마트 디바이스(smart device)으로 구현될 수 있다. 이때, 스마트 디바이스는 스마트 워치(smart watch) 또는 스마트 밴드(smart band)로 구현될 수 있다. 멀티 챗봇 시스템(예: 중개 장치, 챗봇)이 질의에 대한 응답을 리턴하면, 사용자는 해당 응답에 대한 호감 표시를 사용자 단말을 통해 중개 장치로 전송할 수 있다. 이는 멀티 챗봇 시스템(예: 중개 장치, 챗봇)의 만족도 개선을 위한 작업일 수 있다 제2 레이어에서, 중개 장치는 사용자 단말와 복수의 챗봇들 사이의 중개 역할을 수행할 수 있다. 중 개 장치는 사용자 단말의 사용자 질문의 내용에 따라 복수의 챗봇들 중 하나 이상의 챗봇(예: 질문에 가장 적절한 챗봇)을 선택하고, 선택된 챗봇에 질문을 제공할 수 있다. 중개 장치는 선택된 챗봇으로부터 질문에 대한 응답을 수신하고 수신된 응답을 사용자에게 제공할 수 있다. 중개 장치는 캐시 메모리 및 컴페티션 보드를 포함할 수 있다. 중개 장치는 캐시 메모리 및 컴페티 션 보드를 이용하여 사용자 질문에 대응하는 응답을 제공할 수 있다. 캐시 메모리에는 사용자의 질문과 관련된 Q&A 세트들(예: 챗봇에 자주 묻는 Q&A 세트들, 질문이 입력될 확률이 높은 Q&A 세트들)가 저장되어 있을 수 있 고, 컴페티션 보드에는 사용자의 질문에 대한 정보가 기록될 수 있다. 도 2에 도시된 바와 같이, 사용자 질문 (예: 도 2의 Q1~Qm)에 대한 정보는 사용자 질문에 대한 각 챗봇(예: 도 2의 C1~Cm)의 호감 표시 누적치(예: 도 2의 L1~L3) 및 사용자의 질문에 대한 각 챗봇의 응답 빈도 정보(예: 도 2의 Fq1~Fq3)를 포함할 수 있다. 중개 장치는 중개 장치는 사용자 단말로부터 수신한 사용자의 질문이 캐시 메모리에 있는지 확 인할 수 있다. 중개 장치는 사용자의 질문과 관련된 Q&A 세트들(예: 챗봇에 자주 묻는 Q&A 세트들)을 미 리 캐싱(예: 프리페칭)하고 있을 수 있다. 중개 장치는 사용자의 질문을 수신하는 경우, 사용자의 질문을 복수의 챗봇들 중 하나 이상의 챗봇에게 전달하기 전에, 캐시 메모리에 캐싱된 관련된 Q&A 세트들에 기초하여 사용자의 질문에 대한 응답을 사용자 단말에게 제공할 수 있다. 또한, 중개 장치는 캐시 메모리에 캐싱된 관련된 Q&A 세트들로부터 사용자의 질문에 대한 응답을 제공할 수 없을 때(예: 사용자의 질의가 캐시 메모리에 없는 경우) 컴페티션 보드에서 사용자의 질문에 대해 복수의 챗 봇들이 획득하고 있는 호감 표시 수(예: 누적치)를 확인할 수 있다. 중개 장치는 복수의 챗봇들 중 에서 누적치가 가장 높은 챗봇에게 질문에 대한 응답을 요청하고, 해당 챗봇으로부터 수신된 응답을 사용자 단 말에게 제공할 수 있다. 캐시 메모리 및 컴페티션 보드의 역할을 고려할 때, 중개 장치에 수신된 사용자의 질문에 대하여 캐시 메 모리 및 컴페티션 보드의 정보 간에는 [표 1]과 같이 세 가지 케이스가 존재할 수 있다. 표 1의 세 가지 케이 스에 대한 설명은 도 4 내지 도 6을 참조하여 상세하게 설명하도록 한다. [표 1]"}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "제3 레이어에서, 챗봇은 사용자의 질문(예: 질의, 쿼리)에 대한 질문 데이터를 분석하여 질문에 적합한 응답을 제공할 수 있다. 챗봇은 질문과 질문에 대응하는 응답 쌍인 Q&A 세트를 데이터베이스에 저장하고, 사용자(예: 사용자 단말)로부터 질문을 수신하는 경우마다 데이터베이스에서 질문에 대응되는 Q&A 세트를 검색하여 검 색된 Q&A 세트로부터 응답을 사용자 단말에게 제공하는 것이다. 각 챗봇은 모든 주제에 대해 응답을 제공할 수도 있지만, 대응되는 주제에 대한 질의에만 응답을 제공할 수 있도록 주제별로 존재할 수 있다. 복수의 챗봇들은 하나의 서버에 존재할 수 있지만, 이에 한정되는 것은 아니며, 복수의 서버에 산재해 존재할 수 있다. 챗봇이 현재의 질문에 대한 응답을 제공할 때, 현재의 질문에 대한 응답과 현재 질문과 관련성이 있는 Q&A 세트 들을 같이 제공할 수 있다. 이렇게 제공된 Q&A 세트들은 현재의 질문이 중개 장치의 캐시 메모리에 저장 될 때 함께 저장됨으로써, 추후 캐시 메모리의 hit율이 높아질 수 있다. 도 3은 중개 장치의 동작을 설명하기 위한 순서도의 일 예를 나타낸다. 중개 장치는 사용자 단말로부터 사용자의 질문 Q를 수신할 수 있다. 중개 장치는 사용자의 질문 Q이 캐시 메모리에 저장되어 있는지 확인하고, 사용자의 질문 Q에 대한 정보가 컴페티션 보드에 기록되어 있는지 확인할 수 있다. 사용자의 질문이 캐시 메모리에 저장되어 있는 경우, 중개 장치는 캐시 메모리에 캐싱된 관련된 Q&A 세트 들에 기초하여 사용자의 질문 Q에 대한 응답을 사용자 단말에게 바로 제공할 수 있다. 사용자의 질문 Q이 캐시 메모리에 저장되어 있지 않지만 사용자의 질문 Q에 대한 정보가 컴페티션 보드에 기록되어 있는 경우, 중 개 장치는 사용자의 질문 Q에 대해 호감 표시의 누적치가 가장 높은 챗봇에게 질문 Q에 대한 응답을 요청 하고, 해당 챗봇으로부터 수신된 응답을 사용자 단말에게 제공할 수 있다. 사용자의 질문 Q이 캐시 메모 리에 저장되어 있지 않고 사용자의 질문 Q에 대한 정보도 컴페티션 보드에 기록되어 있지 않은 경우, 중개 장치 는 복수의 챗봇들 중 랜덤하게 챗봇에 질문 Q에 대한 응답을 요청하고, 해당 챗봇으로부터 수신된 응답을 사용자 단말에게 제공할 수 있다. 중개 장치는 사용자 단말에게 응답을 송신하면서 사용자에게 이에 대한 호감 표시 입력을 요청하고, 사용자가 입력한 호감 표시에 대한 정보를 수신할 수 있다. 중개 장치는 사용자가 입력한 호감 표시를 확인하고 컴페티션 보드에 사용자 질문 Q을 기록하고 사용자 질 문 Q에 대한 정보를 기록 또는 업데이트할 수 있다. 사용자 질문 Q에 대한 정보는 응답에 대해 사용자로부터 전달받은 호감 표시와 사용자 질문 Q에 대한 응답 빈도(예: 응답 빈도 정보)를 포함할 수 있다. 도 4는 표 1의 케이스 1을 설명하기 위한 도면이다. 케이스 1은 현재 중개 장치에 수신된 사용자의 질문 Q이 캐시 메모리에 저장(예: 등록)되어 있지 않고, 사 용자의 질문 Q에 대한 정보가 컴페티션보드에 기록되어 있지 않는 것일 수 있다. 사용자 단말은 사용자의 질문 Q를 챗봇 인터페이스(예: 사용자 인터페이스)를 통해서 중개 장치로 전 송할 수 있다. 중개 장치는 사용자의 질문 Q이 캐시 메모리에 저장되어 있는지 확인하고, 사용자의 질문 Q에 대한 정보가 컴페티션 보드에 기록되어 있는지 확인할 수 있다. 캐시 메모리에 사용자의 질문 Q이 저장되어 있 지 않고 컴페티션보드에도 사용자의 질문 Q에 대한 정보가 기록되어 있지 않아서, 중개 장치는 복수의 챗 봇들 중 한 챗봇을 램덤하게 선정하여 사용자의 질문 Q을 전송할 수 있다. 사용자의 질문 Q을 전달받은 챗봇은 해당 질문에 대한 응답 A을 중개 장치로 리턴할 수 있다. 중개 장치는 전달받은 응답 A를 사용자 단말로 전송할 수 있다. 중개 장치가 하나의 챗봇을 랜덤하게 선정하면 최초에 응답한 하나의 챗봇에 대한 호감 표시 값이 유효한 값이 되게 되어 계속해서 해당 챗봇에게만 기회가 제공될 수도 있다. 중개 장치는 처음 N(예: N은 1이상 의 자연수)회의 질문에 대해서 모든 챗봇에게 라운드로빈식으로 디스패치하여 공정하게 기회를 부여함으로써 이 러한 불합리성을 개선할 수 있다. 이러한 동작을 부트업(Boot-up) 동작이라 할 수 있다. 부트업 동작에서는 어떤 챗봇의 응답이 품질이 좋은 지를 판단할 근거가 부족하므로 캐싱이 일어나지 않을 수 있다. 부트업 동작이 종료되면, 중개 장치는 캐시 기능이 적용되기 시작하는 캐시온(Cache-on) 동작을 수행할 수 있다. 캐시온 동작 진입시에는 그 때까지 가장 높은 호감 표시 누적치를 획득한 챗봇에게 해당 질문과 관련성 이 있는 n(예: n은 1이상의 자연수)개의 Q&A 세트를 전송해줄 것을 요청할 수 있다. 중개 장치는 해당 요 청에 따라 해당 챗봇이 보내온 n개를 포함한 총 n+1개의 Q&A 세트가 캐시 메모리에 남게 될지 여부를 결정할 수있다. 중개 장치는 이러한 결정을 캐싱 규칙(Caching Rule)에 기초하여 수행하며, 캐시의 크기 또는 캐시 가 질문에 대해 캐싱할 수 있는 최대 개수를 K라 할 때 캐싱 규칙(Caching Rule)에 부합되는 정도가 높은 순으 로 K(예: K는 1이상의 자연수)개의 Q&A 세트만 캐시 메모리에 저장할 수 있다. 사용자는 사용자 단말을 통해 응답 A를 수신하면 이에 대한 호감 표시에 대해 On/Off또는 yes/no를 입력할 수 있다. 중개 장치는 사용자가 입력한 호감 표시 정보에 기초하여 컴페티션 보드에 해당 질문 Q을 기록하고 응답 A에 대해 돌려받은 호감 표시와 빈도 정보를 기록 또는 업데이트할 수 있다. 이렇게 사용자는 질문 Q에 대한 응답 A을 얻고, 중개 장치가 이와 관련성이 높은 Q&A 세트를 캐싱할지 여 부를 결정하여 캐시 메모리를 업데이트하며, 컴페티션 보드에 대해 기록을 업데이트 함으로써 케이스1이 종료될 수 있다. 도 5는 표 1의 케이스 2를 설명하기 위한 도면이다. 케이스2는 현재 중개 중치에 수신된 사용자의 질문 Q이 캐시 메모리에 저장(예: 등록)되어 있고, 사용자의 질문 Q에 대한 정보가 컴페티션 보드에 기록되어 있는 것일 수 있다. 사용자 단말은 사용자의 질문 Q를 챗봇 인터페이스(예: 사용자 인터페이스)를 통해서 중개 장치로 전 송할 수 있다. 중개 장치는 사용자의 질문 Q이 캐시 메모리에 저장되어 있는지 확인하는데, 사용자의 질문 Q이 캐시 메모 리에 저장되어 있어 사용자의 질문 Q에 대한 응답 A를 바로 회신할 수 있다. 사용자는 사용자 단말을 통해 응답 A를 수신하면 이에 대한 호감 표시(예: '좋아요')에 대해 On/Off 또는 yes/no를 입력할 수 있다. 중개 장치는 사용자가 입력한 정보에 기초하여 컴페티션 보드에 해당 질 문(예: 이번 질문)의 호감 표시에 대한 정보를 업데이트할 수 있다. 이렇게 사용자는 질문 Q에 대한 응답 A을 얻고, 해당 질문이 이미 중개 장치의 캐시 메모리에 저장되어 있 는 질문이므로 컴페티션 보드에서 호감 표시에 대한 정보(예: 호감 표시 누적치, 빈도 정보)만 업데이트되고 케 이스2가 종료될 수 있다. 중개 장치가 이처럼 캐시 메모리에 있는 내용(예: 저장된 Q&A 세트들을)만으로 응답을 리턴한다면, 다른 챗봇에게는 기회가 돌아가지 않을 수도 있다. 중개 장치는 캐시 메모리에 저장된 Q&A 세트들을 사용하지 않고 다른 챗봇에게도 일정량의 확률(예: e)만큼의 작은 확률로 기회가 돌아갈 수 있도록하여 순위가 역전될 수 있는 기회를 열어 주는 콜업 동작을 수행할 수 있다. 여기서, e는 epsilon의 약자로 이러한 정책을 epsilon- greedy policy라고도 부를 수 있다. 중개 장치가 다른 챗봇에게도 기회를 부여하는 동작을 콜업(Call-up) 동작이라 부를 수 있다. 단, 콜업된 챗봇의 응답은 중개 장치의 캐시 메모리에 저장되지 않을 수 있다. 캐시 메모리에는 항상 호감 표시 (like)의 누적치가 가장 높은 챗봇의 내용만 기록될 수 있다. 콜업 동작은 현재 캐시되지 않은 다른 챗봇에게 도 호감 표시(like)를 잘 받아 역전하여 캐시 메모리에 들어가는 기회를 부여하기 위한 동작이라고 볼 수 있다. 중개 장치는 사용자 단말로부터 사용자의 질문 Q이 수신되면 곧바로 사용자의 질문 Q에 대한 응답 A 를 바로 리턴한 후, 즉시 컴페티션 보드의 호감 표시(like) 누적치를 검토하여 가장 높은 수치에 역전이 발생했 는지 확인하고, 만약 역전이 일어났다면 캐시 메모리를 업데이트할 수 있다. 업데이트를 위하여, 중개 장치는 호감 표시(like) 누적치가 가장 높게 역전한 챗봇에게 현재 입력된 사용 자 질문 Q의 응답 A 뿐만아니라 해당 질문과 관련성이 있는 n개의 Q&A 세트들을 전송해 줄 것을 요청할 수 있다. 즉, 중개 장치는 사용자 질문 Q를 포함한 총 n+1개의 Q&A 세트들을 전송해 줄 것을 요청하는 것일 수 있다. 중개 장치는 해당 요청에 따라 해당 챗봇이 보내오는 n+1개의 Q&A 세트들에 대하여 캐시 메모리 에 남게 될지 여부를 결정할 수 있다. 중개 장치는 이러한 결정을 캐싱 규칙(Caching Rule)에 기초하여 수행하며, 캐시의 크기 또는 캐시가 질문에 대해 캐싱할 수 있는 최대 개수를 K라 할 때 캐싱 규칙(Caching Rule)에 부합되는 정도가 높은 순으로 K개의 Q&A 세트만 캐시 메모리에 저장할 수 있다. 도 6은 표 1의 케이스 3을 설명하기 위한 도면이다. 케이스3은 현재 중개 장치에 수신된 사용자의 질문 Q이 캐시 메모리에 저장(예: 등록)되어 있지 않고, 사 용자의 질문 Q에 대한 정보가 컴페티션보드에 기록되어 있는 것일 수 있다. 중개 장치가 캐시온 동작에 진입하였다 하더라도 해당 질문에 대한 응답 및 관련 Q&A 세트가 캐시 메모리 에 저장되게 된다는 보장은 없을 수 있다. 캐시 메모리에 저장되는 것은 캐싱 규칙에 의하여 결정되는 것일 수 있다. 케이스 3은 캐시온 동작에 진입하였더라도 입력된 질문이 캐시 메모리에 없는 경우에 대한 대응 방법에 해당할 수 있다. 케이스 2에서도 설명된 바와 같이, 현재 캐싱된 내용이 호감 표시 누적치가 가장 높은 챗봇의 응답이 아닐 경우 가 발생할 수 있다. 즉, 누적치 랭킹에 역전이 일어나는 경우가 발생할 수 있다. 이 경우에는 마치 캐시 메모 리에 내용이 없는 것이나 다름없이 처리되게 되므로 케이스 3에 해당되는 것으로 간주할 수 있다. 사용자 단말은 사용자의 질문 Q를 챗봇 인터페이스(예: 사용자 인터페이스)를 통해서 중개 장치로 전 송할 수 있다. 중개 장치는 캐시 메모리에 사용자의 질문 Q이 저장되어 있지 않지만 사용자의 질문 Q에 대한 정보를 컴페 티션보드에서 확인할 수 있다. 중개 장치는 호감 표시(like)의 누적치가 가장 큰 챗봇에게 응답 A를 요청하고, 응답 A을 전달받아 사용자 단말에 전송할 수 있다. 사용자는 사용자 단말을 통해 응답 A를 수신하면 이에 대한 호감 표시에 대해 On/Off 또는 yes/no를 입력 할 수 있다. 중개 장치는 사용자가 입력한 호감 표시 정보에 기초하여 컴페티션 보드에 해당 질문 Q 에 대한 정보를 업데이트할 수 있다. 상술한 과정을 마치면, 중개 장치는 방금전 응답을 보내온 챗봇에게 관련성이 있는 n개의 Q&A 세트들을 전 송해 줄 것을 요청할 수 있다. 중개 장치는 해당 요청에 따라 해당 챗봇이 보내오는 n개의 Q&A 세트를 포 함한 총 n+1개의 Q&A 세트들에 대하여 캐시 메모리에 남게 될지 여부를 결정할 수 있다. 중개 장치는 이 러한 결정을 캐싱 규칙(Caching Rule)에 기초하여 수행하며, 캐시의 크기 또는 캐시가 질문에 대해 캐싱할 수 있는 최대 개수가 K라 할 때 캐싱 규칙(Caching Rule)에 부합되는 정도가 높은 순으로 K개의 Q&A 세트만 캐시 메모리에 저장할 수 있다. 이렇게 사용자는 질문 Q에 응답을 얻고, 중개 장치는 이와 관련성이 높은 Q&A 세트를 캐싱할지 여부를 결 정하여 캐시 메모리를 업데이트하며, 컴페티션 보드에 기록을 업데이트 함으로써 케이스 3가 종료될 수 있다. 도 7은 디스패칭 규칙을 설명하기 위한 도면이다. 컴페티션 보드에는 도 3가 같이 현재까지 입력되었던 사용자의 질문들에 대하여 응답의 기회를 한번이라도 얻었 던 챗봇들이 각 응답 내용에 대하여 응답 기회를 얻은 횟수(예: 응답 빈도 정보)와 사용자들로부터 얻은 호감 표시 누적치가 기록되어 있을 수 있다. 여기서, 응답 횟수(예: 응답 빈도 정보) 대비 호감 표시 누적치 비율을 LRF(Like Frequency Ratio)라 하고 다음 수학식 1 과 같이 정의될 수 있다. [수학식 1]"}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, Accumulated_Like는 호감 표시 누적치를 의미하고, Answer_Frequency는 응답 횟수(예: 응답 빈도 정보)를 의미할 수 있다. 중개 장치에 사용자의 질문 Q이 입력되었다 가정한다. 만약, 해당 질문이 처음 입력된 경우라면 컴페티션 보드에 정보가 없어 LFR 값이 유효하지 않으므로, 중개 장치는 복수의 챗봇들 중에서 한 챗봇을 램덤하게 선정하여 응답기회를 줄 수 있다(예: 케이스 1). 이렇게 할 경우 랜덤하게 선정되어 최초에 응답한 챗봇의 LFR 만 유효한 값이 되게 되어 계속해서 해당 챗봇에게만 기회가 제공될 수 있다. 이에, 중개 장치는 처음 N 회의 질문에 대해서 모든 챗봇에게 라운드로빈식으로 디스패치하여 공정하게 기회를 부여하는 부트업(Boot-up) 동작을 수행함으로써 이러한 불합리성을 개선할 수 있다. 부트업 동작에서는 어떤 챗봇의 응답이 품질이 좋은 지를 판단할 근거가 부족하므로 캐시가 일어나지 않을 수 있다 부트업 동작이 종료된 이후에는 그때까지 LFR 값이 가장 높은 챗봇에게만 기회를 많이 주게 된다. 이에, 중개 장치는 다른 챗봇에게도 일정량의 확률(예: e)만큼의 작은 화률로 기회가 돌아갈 수 있도록하여 순위가 역 전될 수 있는 기회를 열어 주는 콜업 동작을 수행할 수 있다. 한편, 확률값 e는 상수로 고정될 수도 있겠지만, 경우에 따라서는 변수로 두어 챗봇 간에 호감 표시 값의 편차 가 적으면 e 값을 크게하여 경쟁 상황을 도모해주고, 만약 가장 큰 호감 표시(like) 누적수와 그렇지 않는 호감 표시(like) 누적수들 간의 편차가 크면 역전될 경우가 적을 것으로 간주하여 e 값을 줄여나가는 가변적 방식을 채택할 수도 있을 것이다. 부트업 동작 이후부터, 중개 장치는 캐시 기능이 적용되기 시작하는 캐시온(Cache-on) 동작을 수행할 수 있다. 캐시온 동작은 가장 높은 호감 표시 누적치의 응답 및 관련 Q&A 세트들을 캐시 대상으로 삼는 것일 수 있 다. 하지만 언제나 캐시 메모리에 저장되는 것은 아니며, 캐시 메모리에 캐싱 여부는 캐싱 규칙(caching rul e)에 따를 수 있다. 입력된 질문에 대한 응답이 캐시 메모리에 저장되어 있지 않을 경우, 중개 장치는 해당 질문에 대하여 LFR 이 가장 높은 챗봇에게 응답할 수 있는 기회를 줄 수 있다(예: 케이스 3). 응답을 마치면 중개 장치는 방 금전 응답을 보내온 챗봇에게 관련성이 있는 n개의 Q&A 세트들를 보내 줄 것을 요청할 수 있다. 중개 장치 는 이 요청에 따라 해당 챗봇이 보내오는 n개의 Q&A 세트들을 포함한 총 n+1개의 Q&A 세트들에 대하여 캐 시에 남게 될지 여부를 결정할 수 있다. 중개 장치는 이러한 결정을 캐싱 규칙(Caching Rule)에 기초하여 수행하며, 캐싱 규칙(Caching Rule)에 부합되는 정도가 높은 순으로 k(예: 해당 질의에 허용되는 캐시의 크기) 개의 Q&A 세트만 캐시 메모리에 저장할 수 있다. 입력된 질문에 대한 응답이 캐시 메모리에 들어 있을 경우, 중개 장치는 그 응답을 단순히 리턴할 수 있다 (예: 케이스 2). 중개 장치는 그 후 즉시 컴페티션 보드의 호감 표시(like) 누적치를 검토하여 가장 높은 수치에 역전이 발생했는지 확인하여 만약 역전이 일어났다면 캐시 메모리를 업데이트할 수 있다. 이를 위하여, 중개 장치는 호감 표시(like) 누적치가 가장 높게 역전한 챗봇에게 현재 입력된 질문의 응답 뿐만아니라 그 질문과 관련성이 있는 n개의 Q&A 세트, 즉, 총 n+1개의 Q&A 세트를 보내 줄 것을 요청할 수 있다. 중개 장 치는 이 요청에 따라 해당 챗봇이 보내오는 n+1개의 Q&A 세트들에 대하여 캐시 메모리에 남게 될지 여부를 결정할 수 있다. 중개 장치는 이러한 결정을 캐싱 규칙(Caching Rule)에 기초하여 수행하며, 캐싱 규칙 (Caching Rule)에 부합되는 정도가 높은 순으로 k개의 Q&A 세트만 캐시 메모리에 저장할 수 있다. 도 8은 캐싱 규칙 규칙을 설명하기 위한 도면이다. 중개 장치의 입장에서 볼 때 캐시 메모리에는 현재까지 입력된 질문들에 대하여 이에 대한 응답에 대한 사 용자의 호감 표시 누적치가 가장 높은 챗봇의 응답을 캐시 메모리에 보관하고 있는 것이 가장 이상적일 수 있다. 이는 두가지 측면에서 문제가 있을 수 있다. 첫째는 그 질문과 연관성이 있는 Q&A 세트들도 적절한 개 수가 캐싱되어야 한다는 것이고, 둘째는 캐시 메모리의 크기가 한정되어 있을 경우 그와 같이 연관성있는 Q&A 세트를 모두 캐싱할 수는 없다는 것이다. 이러한 문제를 감안하여 선택적 캐싱을 실시하는 방법이 필요하다. 현재 입력된 질문에 대한 Q&A 세트가 캐시 메모리에 캐시되어 있지 않았었다면(예: 케이스 3), 중개 장치 는 현재 응답을 제공하게 된 챗봇에게 해당 질문과 관련성이 높은 질의응답 쌍 n개를 전송해 줄 것을 요청할 수 있다. 그런 후, 중개 장치는 이렇게 얻어진 n+1개의 Q&A 세트가 캐시 메모리에 저장할 수 있는지를 결정 할 수 있다. 입력된 질문에 대한 Q&A 세트가 캐시 메모리에 들어 있을 경우(예: 케이스 2), 중개 장치는 그 응답을 단 순히 리턴할 수 있다. 그 후, 중개 장치는 즉시 컴페티션 보드의 호감 표시 누적치를 검토하여 가장 높은 수치에 역전이 발생했는지 확인하여 만약 역전이 일어났다면 캐시 메모리를 업데이트할 수 있다. 이를 위하여 중개 장치는 호감 표시(like) 누적치가 가장 높게 역전한 챗봇에게 현재 입력된 질문의 응답뿐만아니라 그질문과 관련성이 있는 n개의 Q&A 세트, 즉, 총 n+1개의 Q&A 세트를 전송해줄 것을 요청할 수 있다. 중개 장치 는 이 요청에 따라 해당 챗봇이 보내오는 n+1개의 Q&A 세트에 대하여 캐시 메모리에 남게 될지 여부를 결 정할 수 있다. 중개 장치는 이상의 과정을 통해 얻어진 캐싱 대상의 Q&A 세트에 대하여 캐싱 여부를 결정할 수 있다. 이 를 위하여 중개 장치가 사용하는 가장 대표적인 캐싱 룰은 질문의 빈도수를 기반으로 하는 것일 수 있다. 질문의 빈도수란 도 2를 참고할 때 해당 질문에 대하여 각 챗봇이 응답한 횟수(예: 응답 빈도 정보)의 합으로 정의될 수 있다. 이를 QOF(Question Occurrence Frequency)라 부르며 질문의 QOF는 컴페티션 보드의 해당 질 문 행에서 챗봇이 응답했던 횟수를 합산한 것과 동일할 수 있다. 중개 장치는 방금전 얻어진 n+1개의 질문과 이미 캐시에 들어 있는 질문들을 통틀어 각 질문의 QOF를 산출 하여 이를 기준으로 정렬할 수 있다. 캐시의 사이즈가 K라 하면 빈도수가 높은 순서로 K개의 Q&A 세트가 캐시 메모리에 남기게 될 수 있다. 도 9는 중개 장치의 일 예를 나타내는 개략적인 블록도이다. 중개 장치는 메모리, 프로세서, 및 캐시 메모리를 포함할 수 있다. 캐시 메모리는 프로세서 내에 구현될 수도 있다. 메모리는 프로세서에 의해 실행가능한 인스트럭션들(예: 프로그램)을 저장할 수 있다. 예를 들어, 인스트럭션들은 프로세서의 동작 및/또는 프로세서의 각 구성의 동작을 실행하기 위한 인스트럭션들 을 포함할 수 있다. 캐시 메모리는 도 1 내지 도 8을 참조하여 설명된 Q&A 세트들을 저장할 수 있다. Q&A 세트들이 프리페칭되어 캐시 메모리에 저장될 수 있다. 프로세서는 메모리에 저장된 데이터를 처리할 수 있다. 프로세서는 메모리에 저장된 컴퓨 터로 읽을 수 있는 코드(예를 들어, 소프트웨어) 및 프로세서에 의해 유발된 인스트럭션(instruction)들을 실행할 수 있다. 프로세서는 목적하는 동작들(desired operations)을 실행시키기 위한 물리적인 구조를 갖는 회로를 가지는 하드웨어로 구현된 데이터 처리 장치일 수 있다. 예를 들어, 목적하는 동작들은 프로그램에 포함된 코드(code) 또는 인스트럭션들(instructions)을 포함할 수 있다. 예를 들어, 하드웨어로 구현된 데이터 처리 장치는 마이크로프로세서(microprocessor), 중앙 처리 장치(central processing unit), 프로세서 코어(processor core), 멀티-코어 프로세서(multi-core processor), 멀티프로세서 (multiprocessor), ASIC(Application-Specific Integrated Circuit), FPGA(Field Programmable Gate Array)를 포함할 수 있다. 프로세서에 의해 수행되는 동작은 도 1 내지 도 8을 참조하여 설명한 중개 장치의 동작과 실질적으로 동일할 수 있다. 이에, 상세한 설명은 생략하도록 한다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처 리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하 나의 프로세서 및 하나의 컨트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다.소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단 독으로 또는 조합하여 저장할 수 있으며 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구 성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 위에서 설명한 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 또는 복수의 소프트웨어 모듈로서 작동하 도록 구성될 수 있으며, 그 역도 마찬가지이다."}
{"patent_id": "10-2021-0071670", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 이를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2021-0071670", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 멀티 챗봇 시스템의 일 예를 나타낸다. 도 2는 중개 장치에서 이용하는 캐시 메모리 및 컴페티션 보드의 일 예를 나타낸다. 도 3은 중개 장치의 동작을 설명하기 위한 순서도의 일 예를 나타낸다. 도 4는 표 1의 케이스 1을 설명하기 위한 도면이다. 도 5는 표 1의 케이스 2를 설명하기 위한 도면이다. 도 6은 표 1의 케이스 3을 설명하기 위한 도면이다. 도 7은 디스패칭 규칙을 설명하기 위한 도면이다. 도 8은 캐싱 규칙 규칙을 설명하기 위한 도면이다. 도 9는 중개 장치의 일 예를 나타내는 개략적인 블록도이다."}
