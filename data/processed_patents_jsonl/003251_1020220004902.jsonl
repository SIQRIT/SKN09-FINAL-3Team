{"patent_id": "10-2022-0004902", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0109022", "출원번호": "10-2022-0004902", "발명의 명칭": "비휘발성 메모리에 기반하여 쓰기 원자성을 보장하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "정재원"}}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,휘발성 메모리;상기 휘발성 메모리와 동일한 메모리 버스에 부착되어 바이트 어드레스(byte address)로 접근 가능한 비휘발성메모리; 및상기 비휘발성 메모리에 사용자 버퍼를 할당하고, 대상 파일에 대한 수정 데이터를 상기 사용자 버퍼에 로그로서 저장하며, 상기 수정 데이터를 대상 파일에 쓰는(write) 프로세서를 포함하는전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 프로세서는상기 대상 파일에 대한 쓰는 동작이 완료되지 않은 이벤트가 발생할 경우에 응답하여, 상기 사용자 버퍼에 저장된 상기 수정 데이터에 기반한 리커버리를 수행하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 프로세서는상기 사용자 버퍼에 저장된 상기 수정 데이터를 리두 로그(redo log)로 사용하여 상기 리커버리를 수행하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는넌-템포럴 저장 명령(non-temporal store instruction)에 기반하여 상기 수정 데이터를 상기 사용자 버퍼에 영구적으로 저장하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,공개특허 10-2023-0109022-3-상기 쓰는 동작은상기 대상 파일에 대한 쓰기 시스템 콜(write system call)을 후킹(hooking)한 후 상기 수정 데이터에 관한 메타 데이터를 로깅하는 동작을 포함하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 메타 데이터는상기 수정 데이터에 기반한 리커버리 수행 시, 상기 수정 데이터를 반영할 파일 위치에 대한 정보를 포함하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 프로세서는상기 쓰기 시스템 콜을 후킹한 후 메모리 배리어 명령(memory barrier instruction)을 실행하여 상기 수정 데이터가 상기 사용자 버퍼에 영구적으로 저장될 때까지 대기하고, 상기 메모리 배리어 명령이 완료되면 상기 사용자 버퍼를 커밋된(committed) 로그로 기록하는 동작을 포함하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 프로세서는상기 사용자 버퍼에 저장되는 데이터를 수정할 필요가 있는 경우 또는 상기 수정 데이터가 반영되지 않은 대상파일에 대한 읽기가 요청된 경우에 응답하여, 상기 사용자 버퍼에 저장되는 데이터를 수정하거나 상기 대상 파일을 읽기 전 상기 사용자 버퍼에 저장된 상기 수정 데이터를 상기 대상 파일에 쓰는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는상기 대상 파일에 대한 오픈 시스템 콜(open system call)을 후킹한 후 상기 대상 파일을 사용자 레벨에서 처리하기 위한 메모리 매핑을 수행하는,전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,공개특허 10-2023-0109022-4-상기 대상 파일을 저장하고 상기 비휘발성 메모리와 I/O 인터페이스로 연결되는 스토리지(storage)를 더 포함하는전자 장치."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치의 동작 방법에 있어서,비휘발성 메모리에 사용자 버퍼를 할당하는 동작;대상 파일에 대한 수정 데이터를 상기 사용자 버퍼에 로그로서 저장하는 동작; 및상기 수정 데이터를 대상 파일에 쓰는 동작을 포함하는전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 대상 파일에 대한 쓰는 동작이 완료되지 않은 이벤트가 발생할 경우에 응답하여, 상기 사용자 버퍼에 저장된 상기 수정 데이터에 기반한 리커버리를 수행하는 동작을 더 포함하는전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 리커버리를 수행하는 동작은상기 사용자 버퍼에 저장된 상기 수정 데이터를 리두 로그로 사용하여 상기 리커버리를 수행하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 저장하는 동작은넌-템포럴 저장 명령에 기반하여 상기 수정 데이터를 상기 사용자 버퍼에 영구적으로 저장하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서,상기 쓰는 동작은상기 대상 파일에 대한 쓰기 시스템 콜을 후킹한 후 상기 수정 데이터에 관한 메타 데이터를 로깅하는 동작을공개특허 10-2023-0109022-5-포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 메타 데이터는상기 수정 데이터에 기반한 리커버리 수행 시, 상기 수정 데이터를 반영할 파일 위치에 대한 정보를 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제15항에 있어서,상기 쓰는 동작은상기 쓰기 시스템 콜을 후킹한 후 메모리 배리어 명령을 실행하여 상기 수정 데이터가 상기 사용자 버퍼에 영구적으로 저장될 때까지 대기하고, 상기 메모리 배리어 명령이 완료되면 상기 사용자 버퍼를 커밋된 로그로 기록하는 동작을 포함하는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제11항에 있어서,상기 쓰는 동작은상기 사용자 버퍼에 저장되는 데이터를 수정할 필요가 있는 경우 또는 상기 수정 데이터가 반영되지 않은 대상파일에 대한 읽기가 요청된 경우에 응답하여, 상기 사용자 버퍼에 저장되는 데이터를 수정하거나 상기 대상 파일을 읽기 전 상기 사용자 버퍼에 저장된 상기 수정 데이터를 상기 대상 파일에 쓰는,전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제11항에 있어서,상기 대상 파일에 대한 오픈 시스템 콜을 후킹한 후 상기 대상 파일을 유저 레벨에서 처리하기 위한 메모리 매핑을 수행하는 동작을 더 포함하는전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제11항에 있어서,상기 휘발성 메모리는 상기 전자 장치에 포함된 휘발성 메모리와 동일한 메모리 버스에 부착되어 바이트 어드레스로 접근 가능한 장치인,공개특허 10-2023-0109022-6-전자 장치의 동작 방법."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "비휘발성 메모리에 기반하여 쓰기 원자성을 보장하는 전자 장치 및 그 동작 방법이 개시된다. 개시된 전자 장치 는 휘발성 메모리, 상기 휘발성 메모리와 동일한 메모리 버스에 부착되어 바이트 어드레스(byte address)로 접근 가능한 비휘발성 메모리 및 상기 비휘발성 메모리에 사용자 버퍼를 할당하고, 대상 파일에 대한 수정 데이터를 상기 사용자 버퍼에 로그로서 저장하며, 상기 수정 데이터를 대상 파일에 쓰는(write) 프로세서를 포함할 수 있 다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 다양한 실시예들은 비휘발성 메모리에 기반하여 쓰기 원자성을 보장하는 전자 장치 및 그 동작 방법 에 관한 것이다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 비휘발성 메모리(예: PRAM(phase-change random access memory)) 기술이 발전함에 따라 비휘발성 메인 메 모리 시스템은 대규모 데이터 센터를 위한 유망한 시스템으로 기대되고 있다. 이와 발맞춰 바이트 단위로 접근 이 가능하고, 낮은 지연시간과 높은 확정성을 갖는 비휘발성 메모리의 특성을 잘 활용하여 파일 시스템 성능을 개선하려는 시도가 많이 연구되고 있다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "비휘발성 메모리의 특성에 기인하여 파일 시스템의 높은 성능을 기대할 수 있더라도 시스템 안정성을 유지하기 위한 쓰기 원자성(write atomicity)이 보장되어야 할 수 있다. 이러한 쓰기 원자성을 위한 방안으로 종래 다양 한 기법(예: 로깅, CoW(copy on write))이 존재하지만, 이 중에서 로깅은 수정할 데이터를 저널 로그에 한 번, 실제 대상 파일에 한 번, 총 두 번의 쓰기 동작이 수행되어 두 배의 쓰기 오버헤드가 발생할 수 있다. 본 명세 서에서 로깅은 저널링(journaling)으로도 지칭될 수 있다. 본 문서에 개시되는 다양한 실시예에 따르면, 비휘발성 메모리에 사용자 버퍼를 할당하고, 수정할 데이터를 사 용자 버퍼에 저장함으로써, 쓰기 원자성 보장을 위해 발생하는 쓰기 오버헤드를 최소화시킬 수 있다. 또한, 다양한 실시예에 따르면, 바이트 단위로 데이터 접근이 가능하고, 스토리지보다 낮은 지연 시간과 높은 확장성을 가지는 비휘발성 메모리의 특성을 이용하면서도 비휘발성 메모리의 입출력에서 큰 비중을 차지하는 쓰 기 오버헤드는 1회로 한정함으로써 더 나은 입출력 파일 시스템을 제공할 수 있다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 휘발성 메모리, 상기 휘발성 메모리와 동일한 메모리 버스에 부착되어 바이트 어 드레스로 접근 가능한 비휘발성 메모리 및 상기 비휘발성 메모리에 사용자 버퍼를 할당하고, 대상 파일에 대한 수정 데이터를 상기 사용자 버퍼에 로그로서 저장하며, 상기 수정 데이터를 대상 파일에 쓰는 프로세서를 포함 할 수 있다. 일 실시예에 따른 전자 장치의 동작 방법은 비휘발성 메모리에 사용자 버퍼를 할당하는 동작, 대상 파일에 대한 수정 데이터를 상기 사용자 버퍼에 로그로서 저장하는 동작 및 상기 수정 데이터를 대상 파일에 쓰는 동작을 포 함할 수 있다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, 영구적인 사용자 버퍼를 저널 로그로 활용함으로써 쓰기 트랜잭션을 위한 새로운 리커 버리 메커니즘을 제공할 수 있다. 또한, 다양한 실시예에 따르면, 비휘발성 메모리 내 사용자 버퍼에 수정할 데이터를 영구적으로 저장하여 저널 로그로 이용함으로써, 쓰기 원자성 보장을 위해 발생하는 쓰기 오버헤드를 최소화시킬 수 있다. 또한, 다양한 실시예에 따르면, 오픈 시스템 콜을 후킹하여 오픈 시스템 콜에 기반한 오픈 동작을 수행한 후 메 모리 매핑을 수행함으로써, 라이브러리의 파일 IO를 커널 레벨이 아닌 사용자 레벨에서 처리하여 성능 향상을 기대할 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2022-0004902", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도를 나타낸다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리 및/또는 비휘발성 메모리에 저장하고, 휘발성 메모리 및/또는 비휘발성 메모리에 저 장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독 립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치(GPU; graphics processing unit), 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케 이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다.카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래쉬들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통 신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네 트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내 에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 도 2는 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 일실시예에 따르면, 프로그램은 전자 장치의 하나 이상의 리소스들을 제어하기 위한 운영 체제, 미들웨어, 또는 상기 운영 체제 에서 실행 가능한 어플리케이션을 포함할 수 있다. 운영 체제는, 예를 들면, AndroidTM, iOSTM, WindowsTM, SymbianTM, TizenTM, 또는 BadaTM를 포함할 수 있다. 프로그램 중 적어도 일부 프로그램은, 예를 들면, 제조 시에 전자 장치에 프리로드되거나, 또는 사용자에 의해 사용 시 외부 전자 장치(예: 전자 장치 (102 또는 104), 또는 서버)로부터 다운로드되거나 갱신 될 수 있다. 운영 체제는 전자 장치의 하나 이상의 시스템 리소스들(예: 프로세스, 메모리, 또는 전원)의 관리(예: 할당 또는 회수)를 제어할 수 있다. 운영 체제는, 추가적으로 또는 대체적으로, 전자 장치 의 다른 하드웨어 디바이스, 예를 들면, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터 리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 구동하기 위한 하나 이상의 드라이 버 프로그램들을 포함할 수 있다. 미들웨어는 전자 장치의 하나 이상의 리소스들로부터 제공되는 기능 또는 정보가 어플리케이션 에 의해 사용될 수 있도록 다양한 기능들을 어플리케이션으로 제공할 수 있다. 미들웨어는, 예를 들 면, 어플리케이션 매니저, 윈도우 매니저, 멀티미디어 매니저, 리소스 매니저, 파워 매니 저, 데이터베이스 매니저, 패키지 매니저, 커넥티비티 매니저, 노티피케이션 매니저, 로케이션 매니저, 그래픽 매니저, 시큐리티 매니저, 통화 매니저, 또는 음성 인식 매니저 를 포함할 수 있다. 어플리케이션 매니저는, 예를 들면, 어플리케이션의 생명 주기를 관리할 수 있다. 윈도우 매니저 는, 예를 들면, 화면에서 사용되는 하나 이상의 GUI 자원들을 관리할 수 있다. 멀티미디어 매니저는, 예를 들면, 미디어 파일들의 재생에 필요한 하나 이상의 포맷들을 파악하고, 그 중 선택된 해당하는 포맷에 맞 는 코덱을 이용하여 상기 미디어 파일들 중 해당하는 미디어 파일의 인코딩 또는 디코딩을 수행할 수 있다. 리 소스 매니저는, 예를 들면, 어플리케이션의 소스 코드 또는 메모리의 메모리의 공간을 관리할 수 있다. 파워 매니저는, 예를 들면, 배터리의 용량, 온도 또는 전원을 관리하고, 이 중 해당 정보를 이용하여 전자 장치의 동작에 필요한 관련 정보를 결정 또는 제공할 수 있다. 일실시예에 따르면, 파워 매 니저는 전자 장치의 바이오스(BIOS: basic input/output system)(미도시)와 연동할 수 있다. 데이터베이스 매니저는, 예를 들면, 어플리케이션에 의해 사용될 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저는, 예를 들면, 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는갱신을 관리할 수 있다. 커넥티비티 매니저는, 예를 들면, 전자 장치와 외부 전자 장치 간의 무선 연 결 또는 직접 연결을 관리할 수 있다. 노티피케이션 매니저는, 예를 들면, 지정된 이벤트(예: 착신 통화, 메시지, 또는 알람)의 발생을 사용자에게 알리기 위한 기능을 제공할 수 있다. 로케이션 매니저는, 예를 들면, 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저는, 예를 들면, 사용자에게 제공될 하 나 이상의 그래픽 효과들 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 시큐리티 매니저는, 예를 들면, 시스템 보안 또는 사용자 인증을 제공할 수 있다. 통화(telephony) 매니저 는, 예를 들면, 전자 장치에 의해 제공되는 음성 통화 기능 또는 영상 통화 기능을 관리할 수 있다. 음성 인식 매니저는, 예를 들면, 사용자의 음성 데이터를 서버로 전송하고, 그 음성 데이터에 적어도 일부 기반하여 전자 장치에서 수행될 기능에 대응하는 명령어(command), 또는 그 음성 데이터에 적어도 일 부 기반하여 변환된 문자 데이터를 서버로부터 수신할 수 있다. 일 실시예에 따르면, 미들웨어는 동 적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. 일 실시예에 따르면, 미들웨 어의 적어도 일부는 운영 체제의 일부로 포함되거나, 또는 운영 체제와는 다른 별도의 소프트웨 어로 구현될 수 있다. 어플리케이션은, 예를 들면, 홈, 다이얼러, SMS/MMS, IM(instant message), 브라우 저, 카메라, 알람, 컨택트, 음성 인식, 이메일, 달력, 미디어 플레이어 , 앨범, 와치, 헬스(예: 운동량 또는 혈당과 같은 생체 정보를 측정), 또는 환경 정보 (예: 기압, 습도, 또는 온도 정보 측정) 어플리케이션을 포함할 수 있다. 일실시예에 따르면, 어플리케이 션은 전자 장치와 외부 전자 장치 사이의 정보 교환을 지원할 수 있는 정보 교환 어플리케이션(미도 시)을 더 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치로 지정된 정보 (예: 통화, 메 시지, 또는 알람)를 전달하도록 설정된 노티피케이션 릴레이 어플리케이션, 또는 외부 전자 장치를 관리하도록 설정된 장치 관리 어플리케이션을 포함할 수 있다. 노티피케이션 릴레이 어플리케이션은, 예를 들면, 전자 장치 의 다른 어플리케이션(예: 이메일 어플리케이션)에서 발생된 지정된 이벤트(예: 메일 수신)에 대응하 는 알림 정보를 외부 전자 장치로 전달할 수 있다. 추가적으로 또는 대체적으로, 노티피케이션 릴레이 어플리케 이션은 외부 전자 장치로부터 알림 정보를 수신하여 전자 장치의 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치 또는 그 일부 구성 요소(예: 외부 전자장치의 디스플레이 모듈 또는 카메라 모듈)의 전원(예: 턴-온 또는 턴-오프) 또는 기능(예: 밝기, 해 상도, 또는 포커스)을 제어할 수 있다. 장치 관리 어플리케이션은, 추가적으로 또는 대체적으로, 외부 전자 장 치에서 동작하는 어플리케이션의 설치, 삭제, 또는 갱신을 지원할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으 로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 3은 일 실시예에 따른 사용자 레벨에서 전자 장치의 동작을 설명하기 위한 소프트웨어-하드웨어 구조도이다. 도 3을 참조하면, 어플리케이션(예: 도 1의 어플리케이션), 라이브러리 및 커널은 휘발성 메모리(예: DRAM(dynamic random access memory))(예: 도 1의 휘발성 메모리)에서 동작하고, 영구적 인 버퍼와 파일은 비휘발성 메모리(예: PRAM(phase-change random access memory))(예: 도 1의 비휘 발성 메모리)에서 동작할 수 있다. 비휘발성 메모리는 휘발성 메모리와 유사한 지연 시간을 가지면서도 플래시 스토리지와 유사한 밀도 (density)를 가질 수 있다. 비휘발성 메모리는 휘발성 메모리와 마찬가지로 전자 장치(예: 도 1의 전자 장치)의 메인 메모리로 활용될 수 있고, 파일과 같은 영구 데이터를 저장할 수 있다. 비휘발성 메모 리에 기반한 파일 시스템은 스토리지에 기반한 파일 시스템보다 파일 입출력 대기 시간이 더 짧을 수 있다. 또한, 비휘발성 메모리는 바이트 단위로 데이터 접근이 가능하고, 스토리지보다 낮은 지연 시간과 높은 확장성을 가질 수 있다. 비휘발성 메모리의 특성에 기인하여 파일 시스템의 높은 성능을 기대할 수 있더라도 쓰기 원자성이 보장되어야 할 수 있다. 쓰기 원자성을 보장하기 위한 로깅은 수정으로 대상 파일을 업데이트하기 전 대상 파일에 대한 수정 데이터와 관련 정보를 저널 로그(journal log)로 기록하는 것으로, 로깅이 완료된 후에는 오류가 발생하더라도 저널 로그 에 기반한 리커버리가 가능하므로 쓰기 원자성이 보장될 수 있다. 예를 들어, 로깅은 수정 데이터를 저널 로그 로 기록하는 리두 로깅(redo logging)일 수 있으며, 저널 로그는 리두 로그로 지칭될 수 있다. 로깅은 바이트 단위로 수행될 수 있으나, 로깅에 의해 수정 데이터를 저널 로그에 한 번, 실제 대상 파일에 한 번, 총 두 번을 쓰게 되면, 쓰기 오버헤드가 2배로 증가할 수 있다. 비휘발성 메모리에서 쓰기는 입출력에서 상당한 비중 을 차지하는 오버헤드로서, 쓰기 원자성 보장을 위한 로깅으로 발생하는 쓰기 횟수를 줄이는 것이 중요할 수 있다. 데이터 입출력 중 휘발성 메모리(예: DRAM)에서 동작하는 코드보다 비휘발성 메모리(예: 스토리 지)에 쓰는 동작의 비중이 클 수 있다. 이하, 비휘발성 메모리에 기반한 파일 시스템에서 로깅으로 인한 쓰기 횟수를 최소화하면서도 쓰기 원자성을 보장할 수 있는 방안에 대해 상세히 설명한다. 전자 장치는 휘발성 메모리 및 비휘발성 메모리를 포함할 수 있다. 전자 장치는 비휘발성 메모리 를 스토리지로 활용하여 IO 성능이 향상시킬 수 있다. 비휘발성 메모리는 휘발성 메모리와 동 일한 메모리 버스에 부착되어 바이트 어드레스로 접근이 가능한 메모리일 수 있다. 예를 들어, 비휘발성 메모리는 DAX(direct access) 파일 시스템으로 마운트될 수 있다. DAX 파일 시스템은 비휘발성 메모리와 같은 PM(persistent memory) 저장 장치에 직접적으로 데이터를 입출력시 킬 수 있다. 파일 시스템은 POSIX(portable operating system interface) I/O 시스템 콜을 통해 구동되 며, 기존 파일 시스템인 ext4(extended file system 4) 파일 시스템 계층 내부에서 바이트 단위로 전달된 입출 력 데이터를 DAX 인터페이스(예: direct_access())를 이용하여 블록 단위로 변환하지 않고, PM 저장 장치에 직 접 접근시킬 수 있다. 어플리케이션에서 대상 파일에 대한 open이 요청되면, 오픈 시스템 콜이 후킹되고, 오픈 시스템 콜에 기반 한 오픈 동작이 수행된 후 mmap(memory mapping) 시스템 콜에 기반한 메모리 매핑이 수행될 수 있다. DAX의 파 일 시스템 내 파일에 대해 mmap이 수행되면, 블록 디바이스(block device)의 파일을 휘발성 메모리로 이동시킨 후 해당 파일을 사용할 필요 없이, 페이지 테이블만 매핑하여 비휘발성 메모리에 바로 접근할 수 있다. 휘발성 메모리의 메모리 공간(memory space)처럼, 비휘발성 메모리는 로드(load), 저장 (store)으로 접근될 수 있으며, 저장 후 캐시 플러시(cache flush)를 수행하거나 캐시 정책(cache policy)에 의해 캐시의 내용이 비휘발성 메모리까지 전달된다면, 해당 내용은 비휘발성 메모리에서 영구적인 상 태가 될 수 있다. 라이브러리는 비휘발성 메모리에 기반한 파일 시스템에서 로깅으로 인한 쓰기 횟수를 최소화하 기 위해 특수한 API들을 제공할 수 있다. 본 명세서에서 설명하는 이러한 특수 API들에는 *malloc 및 *puts가 포함될 수 있다. 여기서, * 표시는 일반적으로 사용되는 메모리 할당 API(예: malloc API)와 메모리 저장 API (예: puts API)와 구별하기 위한 것으로, *malloc과 *puts은 일반적인 malloc API와 puts API와 유사한 역할을 수행하지만 비휘발성 메모리에 기반한 파일 시스템에서 로깅으로 인한 쓰기 횟수를 최소화하기 위한 목적에 적합하게 설계된 것일 수 있다. 라이브러리는 일반적인 시스템에서 소스 코드 변경을 최소화하면 서도 비휘발성 메모리에 대한 파일 입출력을 제공하고 쓰기 원자성을 보장할 수 있다. 라이브러리는 이후에 설명할 사용자 버퍼(user buffer)를 할당하고 해당 사용자 버퍼에 데이터를 저장하는 인터페 이스를 제공할 수 있다. 사용자 버퍼는 영구적(persistent)일 수 있다. 사용자 버퍼에 저장된 데이터는 로그로 활용되기 때문에 체크포인트 이전에 해당 데이터가 수정되는 것이 방지될 수 있다. 다만, 사용자 버퍼는 사용자 레벨에서 사용되는 버퍼이므로 언제든지 수정되어야 하기 때문에, 사용자 레벨에서 사용자 버퍼에 데이터를 저장하고, 읽어갈 수 있는 인터페이스를 통해 사용자 버 퍼에 접근될 수 있다. *malloc은 영구적인 사용자 버퍼를 할당하고, 해당 사용자 버퍼를 나타내는 객체에 대한 주소를 반환 할 수 있다. *puts은 대상 파일에 대한 수정 데이터를 영구적인 사용자 버퍼에 저장할 수 있다. 이때, 넌-템포럴 저장 명령이 이용되어 수정 데이터가 사용자 버퍼에 영구적으로 저장될 수 있다. 넌-템포럴 저장 명령을 이용 하면, 수정 데이터가 캐시를 거치지 않고 메모리에 바로 업데이트될 수 있다. 따라서, 이후에 메모리 배리어 명령이 실행되면, 수정 데이터가 메모리에 모두 저장되었다는 것이 보장될 수 있다. 메모리 접근들은 컴파일에 최적화(optimize)되기도 하고 실제 명령이 실행되어도 파이프라인(pipeline)으로 인해 아직 메모리에 쓰는 동작 이 완전히 수행되지 않은 경우가 있을 수 있다. 이때, 메모리 배리어 명령이 실행되면, 그전에 있었던 메모리 저장 명령들이 모두 수행된 것이 보장될 수 있다. 사용자 버퍼에 저장된 수정 데이터는 저널 로그로 활용 될 수 있다. 사용자 버퍼가 그대로 로그로 활용되기 때문에 별도의 데이터 로깅 없이 쓰기 원자성이 보장 될 수 있다. 비휘발성 메모리를 사용자 버퍼로 할당하고 저널 로그로 활용함으로써, 동일 데이터에 대한 쓰기 횟 수를 1회로 줄이더라도 쓰기 원자성을 보장할 수 있다.도 4는 일 실시예에 따른 전자 장치의 동작을 설명하기 위한 도면이다. 이하 실시예에서 각 동작들은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 각 동작들의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수도 있다. 동작 내지 동작은 전자 장치(예: 도 1의 전자 장치)의 적어도 하나의 구성요소(예: 도 1의 프로세서(12 0))에 의해 수행될 수 있다. 동작에서, 전자 장치는 오픈 시스템 콜을 후킹하고, 오픈 시스템 콜에 기반하여 대상 파일에 대한 오픈 동 작을 수행한 후 mmap 시스템 콜을 통해 메모리 매핑을 수행할 수 있다. 비휘발성 메모리(예: 도 1의 비휘발성 메모리 및 도 3의 비휘발성 메모리)에 기반한 파일 시스템(예: 도 3의 파일 시스템)에서 로깅으로 인한 쓰기 횟수를 최소화하면서도 쓰기 원자성을 보장할 수 있는 라이 브러리(예: 도 3의 라이브러리)의 파일 IO는 사용자 레벨에서 처리될 수 있다. 이처럼 파일 IO를 사용자 레벨에서 처리하는 것은 메모리 매핑을 활용한 방안인데, 이를 통해 성능 향상을 기대할 수 있다. 사용자 레벨 은 프로그램이 동작하기 위해 사용되는 메모리 공간(예: 코드 영역, 데이터 영역, 스택 및 힙 영역)을 가리키는 사용자 공간(user space)에 해당할 수 있다. 사용자 레벨에 대비되는 커널 레벨은 프로세스에 할당되는 총 메 모리 공간 중에서 유저 영역을 제외한 나머지 영역인 커널 영역에 해당하는 것으로, 예를 들어, 운영체제 실행 을 위해 필요한 메모리 공간일 수 있다. 예를 들어, 메인 메모리 상에서 프로그램은 사용자 영역과 커널 영역 으로 구분되어 저장될 수 있다. 전자 장치는 사용자 레벨에서 파일 IO를 수행할 경우, 사용자 레벨에서 사용되는 시스템 콜을 후킹할 수 있다. 시스템 콜 후킹을 통해, 사용자 프로그램에 대한 불필요한 수정을 방지할 수 있다. 후킹은 LD_PRELOAD에 기반 하여 수행될 수 있다. 사용자 프로그램이 호출하는 시스템 콜과 동일한 이름의 함수(예: open, close, read, write 시스템 콜)가 생성되고, 사용자 프로그램이 해당 시스템 콜을 호출할 때 일반적인 라이브러리(예: glibc(gnu c library)) 내 함수가 아닌, 새로 생성된 함수가 호출되도록 할 수 있다. LD_PRELOAD로 생성된 라 이브러리를 등록하면, 사용자 프로그램은 동적 라이브러리(dynamic library) 중에서 동일한 이름의 API가 있는 경우 LD_PRELOAD로 등록된 API를 높은 우선순위로 호출할 수 있다. 이를 통해, open, close, read, write와 같은 파일 IO에서 사용되는 POSIX 시스템 콜이 후킹될 수 있다. read나 write는 메모리 로드, 저장으로 대체될 수 있다. 동작에서, 전자 장치는 *malloc API를 통해 비휘발성 메모리에 사용자 버퍼(예: 도 3의 사용자 버퍼(36 0))를 할당할 수 있다. 사용자 버퍼는 어플리케이션(예: 도 1의 어플리케이션 및 도 3의 어플리케이션 )이 할당 요청하는 데이터를 저장하는 영구적인 버퍼이며, 저널 로그로 활용될 수 있는 버퍼일 수 있다. 동작에서, 전자 장치는 *puts API를 통해 대상 파일에 대한 수정 데이터를 사용자 버퍼에 저장할 수 있다. 이때, 넌-템포럴 저장 명령에 기반하여 수정 데이터에 대한 메모리 업데이트까지 보장될 수 있다. 동작에서, 전자 장치는 쓰기 시스템 콜을 후킹하고, 로그로 사용될 수 있는 영구적 버퍼이기 때문에 별도 의 데이터 로깅 없이, 메타 데이터만 로깅한 후 대상 파일에 수정 데이터를 직접 쓸 수 있다. 전자 장치는 쓰기 시스템 콜을 후킹한 후 메모리 배리어 명령을 실행하여 수정 데이터가 비휘발성 메모리 내 사 용자 버퍼에 영구적으로 기록될 때까지 대기할 수 있다. 메모리 배리어 명령의 실행이 완료되면, 수정 데이터 가 사용자 버퍼에 영구적으로 기록되므로, 로그가 커밋되었다고 표현할 수 있다. 커밋된 로그를 대상 파일에 쓰는 것은 체크포인트(checkpoint)라고 표현할 수 있다. 어플리케이션이 쓰기 시스템 콜을 호출하면, 전자 장 치는 쓰기 시스템 콜을 후킹하여 사용자 레벨에서 동작하고, 메모리 배리어 명령으로 인해 사용자 버퍼에 수정 데이터가 이미 영구적으로 저장되었기에 사용자 버퍼 내 수정 데이터를 대상 파일에 체크포인트할 수 있다. 예 를 들어, 로그에 대한 체크포인트는 백그라운드에서 비동기식(asynchronous)으로 수행될 수 있다. 이를 위해서 는, 커밋된 로그가 체크포인트 이전까지 수정되지 않을 것이 보장되어야 할 수 있다. 사용자 버퍼에 저장된 커 밋된 로그가 수정될 필요가 있을 경우에는 수정 전 로그가 먼저 체크포인트될 수 있다. 또한, 수정 데이터가 반영되지 않은 대상 파일에 대한 읽기가 요청된 경우에도 읽기 수행 전 로그가 먼저 체크포인트될 수 있다. 쓰기 시스템 콜이 후킹되면, 별도의 데이터 로깅 없이 메타 데이터만 로깅될 수 있다. 메타 데이터는 수정 데 이터에 기반한 리커버리 수행 시 해당 수정 데이터를 반영할 파일 위치에 대한 정보를 포함할 수 있다. 도 5는 일 실시예에 따른 사용자 버퍼를 로그로 활용하는 원자성 보장 동작을 설명하기 위한 도면이다. 도 5를 참조하면, 비휘발성 메모리(예: 도 1의 비휘발성 메모리 및 도 3의 비휘발성 메모리)는 사용자 버퍼(예: 도 3의 사용자 버퍼)와 대상 파일을 포함할 수 있다. 사용자 버퍼는 대 상 파일에 대한 수정 데이터를 저장할 수 있다. 수정 데이터는 대상 파일의 일부 또는 전부를 수정 하는 데이터로서, 예를 들어, 전자 장치(예: 도 1의 전자 장치)를 제어하는 사용자 및/또는 다른 장치로부 터 전달될 수 있다. 사용자 버퍼가 비휘발성 메모리 내에 할당됨으로써 수정 데이터에 대한 1회 쓰 기만으로도 쓰기 원자성을 보장할 수 있다. 도 6은 일 실시예에 따른 전자 장치의 하드웨어 블록도를 나타낸 도면이다. 도 6을 참조하면, 전자 장치(예: 도 1의 전자 장치)는 프로세서(예: 도 1의 프로세서), 비휘발성 메 모리(예: 도 1의 비휘발성 메모리, 도 3의 비휘발성 메모리 및 도 5의 비휘발성 메모리), 휘발성 메모리(예: 도 1의 휘발성 메모리 및 도 3의 휘발성 메모리) 및 하나 이상의 스토리지들 을 포함할 수 있다. 비휘발성 메모리 및 휘발성 메모리는 메모리 인터페이스(예: 메모리 버 스)로 연결될 수 있다. 비휘발성 메모리는 데이터를 영구적으로 저장할 수 있어 스토리지로도 활용될 수 있으며, 바이트 어드레스로 접근될 수 있다. 비휘발성 메모리는 앞서 설명한 사용자 버퍼(예: 도 3의 사 용자 버퍼 및 도 5의 사용자 버퍼)를 포함할 수 있다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다. 이하 실시예에서 각 동작들은 순차적으로 수행될 수도 있으나, 반드시 순차적으로 수행되는 것은 아니다. 예를 들어, 각 동작들의 순서가 변경될 수도 있으며, 적어도 두 동작들이 병렬적으로 수행될 수도 있다. 동작 내지 동작은 전자 장치(예: 도 1의 전자 장치)의 적어도 하나의 구성요소(예: 도 1의 프로세서(12 0))에 의해 수행될 수 있다. 동작에서, 전자 장치는 비휘발성 메모리(예: 도 1의 비휘발성 메모리, 도 3의 비휘발성 메모리, 도 5의 비휘발성 메모리 및 도 6의 비휘발성 메모리)에 사용자 버퍼(예: 도 3의 사용자 버퍼 및 도 5의 사용자 버퍼)를 할당할 수 있다. 동작에서, 전자 장치는 대상 파일(예: 도 5의 대상 파일 )에 대한 수정 데이터를 사용자 버퍼에 로그로서 저장할 수 있다. 전자 장치는 넌-템포럴 저장 명령에 기 반하여 수정 데이터를 사용자 버퍼에 영구적으로 저장할 수 있다. 동작에서, 전자 장치는 수정 데이터를 대상 파일에 쓸 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법은 비휘발성 메모리에 사용자 버퍼를 할당하는 동작, 대상 파일에 대한 수정 데이터를 사용자 버퍼에 로그로서 저장하는 동작 및 수정 데이터를 대상 파일에 쓰는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법은 대상 파일에 대한 쓰는 동작이 완료되지 않은 이벤트가 발생할 경우에 응답하여, 사용자 버퍼에 저장된 수정 데이터에 기반한 리커버리를 수행하는 동작을 더 포함할 수 있다. 예를 들어, 쓰는 동작이 완료되지 않은 이벤트는 시스템 크래시(system crash)나 갑작스러운 전원 오프 발생으 로 쓰는 동작이 않는 것을 나타내나, 전술한 예에 한정되지 않는다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 리커버리를 수행하는 동작은 사용자 버퍼에 저장된 수정 데이 터를 리두 로그로 사용하여 리커버리를 수행할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 저장하는 동작은 넌-템포럴 저장 명령에 기반하여 수정 데이터 를 사용자 버퍼에 영구적으로 저장할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 쓰는 동작은 대상 파일에 대한 쓰기 시스템 콜을 후킹한 후 수 정 데이터에 관한 메타 데이터를 로깅하는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 메타 데이터는 수정 데이터에 기반한 리커버리 수행 시, 수정 데이터를 반영할 파일 위치에 대한 정보를 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 쓰는 동작은 쓰기 시스템 콜을 후킹한 후 메모리 배리어 명령 을 실행하여 수정 데이터가 사용자 버퍼에 영구적으로 저장될 때까지 대기하고, 메모리 배리어 명령이 완료되면사용자 버퍼를 커밋된 로그로 기록하는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 쓰는 동작은 사용자 버퍼에 저장되는 데이터를 수정할 필요가 있는 경우 또는 수정 데이터가 반영되지 않은 대상 파일에 대한 읽기가 요청된 경우에 응답하여, 사용자 버퍼에 저장되는 데이터를 수정하거나 대상 파일을 읽기 전 사용자 버퍼에 저장된 수정 데이터를 대상 파일에 쓸 수 있 다. 일 실시예에 따르면, 전자 장치의 동작 방법은 대상 파일에 대한 오픈 시스템 콜을 후킹한 후 대상 파일을 유저 레벨에서 처리하기 위한 메모리 매핑을 수행하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 전자 장치의 동작 방법에서 비휘발성 메모리는 전자 장치에 포함된 휘발성 메모리(예: 도 1의 휘발성 메모리, 도 3의 휘발성 메모리 및 도 6의 휘발성 메모리)와 동일한 메모리 버스에 부착되어 바이트 어드레스로 접근 가능한 장치일 수 있다. 도 8은 일 실시예에 따른 전자 장치를 설명하기 위한 도면이다. 도 8을 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치)는 휘발성 메모리(예: 도 1의 휘발성 메모리, 도 3의 휘발성 메모리 및 도 6의 휘발성 메모리), 비휘발성 메모리(예: 도 1의 비휘발성 메모리, 도 3의 비휘발성 메모리, 도 5의 비휘발성 메모리 및 도 6의 비휘발성 메모리) 및 프로세서를 포함할 수 있다. 휘발성 메모리, 비휘발성 메모리 및 프로세서는 메모리 인터페이스(예: 도 6의 메모리 인터페이스)에 의해 연결될 수 있다. 일 실시예에 따른 전자 장치는 사용자 단말로 구현될 수 있다. 예를 들어, 사용자 단말은 휴대폰, 스마트 폰, 태블릿, 랩탑, 퍼스널 컴퓨터, 또는 전자북 장치와 같은 다양한 컴퓨팅 장치, 스마트 시계, 스마트 안경, HMD(Head-Mounted Display), 또는 스마트 의류와 같은 다양한 웨어러블 기기, 스마트 스피커, 스마트 TV, 또는 스마트 냉장고와 같은 다양한 가전장치, 스마트 자동차, 스마트 키오스크, IoT(Internet of Things) 기기, WAD(Walking Assist Device), 드론, 또는 로봇을 포함할 수 있다. 비휘발성 메모리는 휘발성 메모리와 동일한 메모리 버스에 부착되어 바이트 어드레스로 접근 가능할 수 있다. 프로세서는 비휘발성 메모리에 사용자 버퍼(예: 도 3의 사용자 버퍼 및 도 5의 사용 자 버퍼)를 할당하고, 대상 파일(예: 도 5의 대상 파일)에 대한 수정 데이터를 사용자 버퍼에 로그로 서 저장하며, 수정 데이터를 대상 파일에 쓸 수 있다. 그 밖에, 전자 장치에 관해서는 상술된 동작을 처리할 수 있다. 일 실시예에 따르면, 전자 장치는 휘발성 메모리, 휘발성 메모리와 동일한 메모리 버스에 부착 되어 바이트 어드레스로 접근 가능한 비휘발성 메모리 및 비휘발성 메모리에 사용자 버퍼를 할당하고, 대상 파일에 대한 수정 데이터를 사용자 버퍼에 로그로서 저장하며, 수정 데이터를 대상 파일에 쓰는 프로세서를 포함할 수 있다. 일 실시예에 따르면, 전자 장치에서 프로세서는 대상 파일에 대한 쓰는 동작이 완료되지 않은 이벤 트가 발생할 경우에 응답하여, 사용자 버퍼에 저장된 수정 데이터에 기반한 리커버리를 수행할 수 있다. 일 실시예에 따르면, 전자 장치에서 프로세서는 사용자 버퍼에 저장된 수정 데이터를 리두 로그로 사용하여 리커버리를 수행할 수 있다. 일 실시예에 따르면, 전자 장치에서 프로세서는 넌-템포럴 저장 명령에 기반하여 수정 데이터를 사 용자 버퍼에 영구적으로 저장할 수 있다. 일 실시예에 따르면, 전자 장치에서 쓰는 동작은 대상 파일에 대한 쓰기 시스템 콜을 후킹한 후 수정 데 이터에 관한 메타 데이터를 로깅하는 동작을 포함할 수 있다. 일 실시예에 따르면, 전자 장치에서 메타 데이터는 데이터에 기반한 리커버리 수행 시, 수정 데이터를 반 영할 파일 위치에 대한 정보를 포함할 수 있다. 일 실시예에 따르면, 전자 장치에서 프로세서는 쓰기 시스템 콜을 후킹한 후 메모리 배리어 명령을 실행하여 수정 데이터가 사용자 버퍼에 영구적으로 저장될 때까지 대기하고, 메모리 배리어 명령이 완료되면 사 용자 버퍼를 커밋된 로그로 기록하는 동작을 포함할 수 있다.일 실시예에 따르면, 전자 장치에서 프로세서는 사용자 버퍼에 저장되는 데이터를 수정할 필요가 있 는 경우 또는 수정 데이터가 반영되지 않은 대상 파일에 대한 읽기가 요청된 경우에 응답하여, 사용자 버퍼에 저장되는 데이터를 수정하거나 대상 파일을 읽기 전 사용자 버퍼에 저장된 수정 데이터를 대상 파일에 쓸 수 있 다. 일 실시예에 따르면, 전자 장치에서 프로세서는 대상 파일에 대한 오픈 시스템 콜을 후킹한 후 대상 파일을 사용자 레벨에서 처리하기 위한 메모리 매핑을 수행할 수 있다. 일 실시예에 따르면, 전자 장치는 대상 파일을 저장하고, 비휘발성 메모리와 I/O(input/output) 인 터페이스로 연결되는 스토리지를 더 포함할 수 있다. 그리고 본 명세서와 도면에 개시된 본 발명의 실시예들은 본 발명의 실시예에 따른 기술 내용을 쉽게 설명하고 본 발명의 실시예의 이해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 발명의 실시예의 범위를 한정하고자 하는 것은 아니다. 따라서 본 발명의 다양한 실시예의 범위는 여기에 개시된 실시예들 이외에도 본 발명의 다 양한 실시예의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형된 형태가 본 발명의 다양한 실시예의 범 위에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2022-0004902", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도를 나타낸다. 도 2는 다양한 실시예에 따른 프로그램을 예시하는 블록도이다. 도 3은 일 실시예에 따른 사용자 레벨(user level)에서 전자 장치의 동작을 설명하기 위한 소프트웨어-하드웨어 구조도이다. 도 4는 일 실시예에 따른 전자 장치의 동작을 설명하기 위한 도면이다. 도 5는 일 실시예에 따른 사용자 버퍼를 로그로 활용하는 원자성 보장 동작을 설명하기 위한 도면이다. 도 6은 일 실시예에 따른 전자 장치의 하드웨어 블록도를 나타낸 도면이다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법을 나타낸 도면이다. 도 8은 일 실시예에 따른 전자 장치를 설명하기 위한 도면이다."}
