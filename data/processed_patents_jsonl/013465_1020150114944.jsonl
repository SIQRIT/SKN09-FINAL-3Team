{"patent_id": "10-2015-0114944", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2017-0020137", "출원번호": "10-2015-0114944", "발명의 명칭": "전자 기기의 프로그램 관리 방법 및 장치", "출원인": "삼성전자주식회사", "발명자": "권은영"}}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리;상기 메모리에 암호화된 보안 프로그램을 저장하기 위한 프로세서; 및상기 프로세서와 보안 채널을 통하여 연결된 보안 회로(secured circuitry)를 포함하고,상기 보안 회로는 상기 제1 키를 기반으로 제2 키를 생성하고,상기 제2 키를 기반으로 생성된 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 보안 회로는상기 생성한 제2 키의 유효성을 확인하기 위한 키 확인 정보를 상기 프로세서에 송신하고,상기 프로세서는 상기 키 확인 정보가 유효한 경우, 상기 보안 회로에 상기 암호화된 보안 프로그램을 제공하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 제3 연결키는외부 장치에서 상기 보안 프로그램을 암호화하는데 사용된 암호화 키를 포함하는 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 제2 키는상기 보안 프로그램을 암호화한 외부 장치와 공유되는 공유키를 포함하는 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 프로세서는일반 환경 및 보안 환경으로 구분되어 동작하고,상기 보안 환경은 상기 보안 회로와 보안 채널을 형성하고 상기 보안 회로와 데이터를 송수신 하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서, 상기 보안 환경은상기 보안 회로의 저장 모듈에 미리 저장된 제1 연결키를 수집하고,상기 제1 연결키를 기반으로 상기 보안 회로의 관리 모듈과 제1 보안 채널을 형성하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 보안 환경은임의로 생성된 제2 연결키를 생성하고, 상기 제2 연결키를 이용하여 상기 관리 모듈과 제2 보안 채널을 형성하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "공개특허 10-2017-0020137-3-제5항에 있어서, 상기 보안 환경은상기 보안 채널을 통해 상기 제1 키를 상기 보안 회로에 제공하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 제1 키는상기 보안 프로그램을 암호화한 외부 장치에서 임의로 생성된 비대칭키 중 공개키를 포함하는 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 제1 키는상기 외부 장치에서 상기 보안 프로그램과 함께 상기 프로세서에 제공되도록 설정된 전자 장치"}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 상기 제2 키는상기 제1 키 및 상기 보안 회로에 미리 저장된 보안 개인키를 기반으로 생성되도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서, 상기 프로세서는상기 암호화된 보안 프로그램과 함께 저장된 키 검증 정보를 기반으로 상기 키 확인 정보를 비교하여 상기 제2키의 유효성을 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 프로세서는외부 장치로부터 상기 암호화된 보안 프로그램과 상기 키 검증 정보를 함께 제공받도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 프로세서는외부 장치로부터 상기 제1 키, 상기 암호화된 보안 프로그램 및 키 검증 정보를 바이너리(binary)로 제공받도록설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 보안 환경은상기 바이너리에 대한 서명의 적합성을 검사하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제1항에 있어서, 상기 암호화된 보안 프로그램은외부 장치로부터 다운로드 되거나 제조 단계에서 상기 메모리의 일부 영역 또는 상기 보안 회로 중 적어도 하나에 미리 저장되도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제1항에 있어서, 상기 보안 회로는상기 보안 프로그램을 실행하여 상기 보안 회로에 적어도 하나의 애플릿을 삭제, 설치, 또는 업데이트 중 적어도 하나의 기능을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "프로세서, 메모리 및 보안 회로를 포함하는 전자 장치에서,공개특허 10-2017-0020137-4-상기 프로세서에서, 상기 메모리에 암호화된 보안 프로그램을 저장하는 동작;상기 보안 회로에서, 제1 키를 기반으로 제2 키 및 제3 연결키를 생성하는 동작;상기 보안 회로에서, 상기 생성한 제2 키의 유효성을 확인하는 키 확인 정보를 상기 프로세서에 송신하는 동작;상기 프로세서에서, 상기 키 확인 정보가 유효한 경우, 상기 보안 회로에 상기 암호화된 보안 프로그램을 제공하는 동작;상기 보안 회로에서, 상기 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하는 동작; 및상기 보안 회로에서, 상기 복호화된 보안 프로그램을 실행하는 동작;을 포함하는 방법."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서, 상기 제2 키를 생성하는 동작은상기 프로세서의 보안 환경과 상기 보안 회로 사이에 보안 채널을 형성하는 동작; 및상기 보안 환경에서, 상기 보안 채널을 통해 상기 보안 회로에 상기 제1 키를 제공하는 동작;을 포함하는 방법."}
{"patent_id": "10-2015-0114944", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "명령들을 저장하고 있는 저장 매체에 있어서, 상기 명령들은 적어도 하나의 프로세서에 의하여 실행될 때에 상기 적어도 하나의 프로세서로 하여금 적어도 하나의 동작을 수행하도록 설정된 것으로서, 상기 적어도 하나의동작은, 프로세서, 메모리 및 보안 회로를 포함하는 전자 장치에서,상기 프로세서에서, 상기 메모리에 암호화된 보안 프로그램을 저장하는 동작;상기 보안 회로에서, 제1 키를 기반으로 제2 키 및 제3 연결키를 생성하는 동작;상기 보안 회로에서, 상기 생성한 제2 키의 유효성을 확인하는 키 확인 정보를 상기 프로세서에 송신하는 동작;상기 프로세서에서, 상기 키 확인 정보가 유효한 경우, 상기 보안 회로에 상기 암호화된 보안 프로그램을 제공하는 동작;상기 보안 회로에서, 상기 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하는 동작; 및상기 보안 회로에서, 상기 복호화된 보안 프로그램을 실행하는 동작;을 포함하는 저장 매체."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 다양한 실시 예에 따른 전자 장치는 메모리, 상기 메모리에 암호화된 보안 프로그램을 저장하기 위한 프로세서 및 상기 프로세서와 보안 채널을 통하여 연결된 보안 회로(secured circuitry)를 포함하고, 상기 보안 회로는 상기 제1 키를 기반으로 제2 키를 생성하고, 상기 제2 키를 기반으로 생성된 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하도록 설정될 수 있다. 이 외에도 명세서를 통해 파악되는 다양한 실시 예가 가능하다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서의 다양한 실시 예는 전자 장치에 관한 것으로, 예를 들면, 전자 장치의 프로그램 관리 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치, 예를 들어, 스마트 폰, 또는 태블릿은 보안 회로(예: 내장형 보안 요소(eSE, embedded secure element))를 포함할 수 있다. 상기 보안 회로는, 예를 들어, 보안 정보(예: 개인 정보)를 저장하기 위한 회로를 포함할 수 있고, 외부 전자 장치를 이용한 결제 등에 이용될 수 있다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "전자 장치에서 보안 정보를 저장하는 보안 회로는, 예를 들어, 탈부착 가능한 형태 또는 내장형으로 구비될 수 있다. 전자 장치는, 보안 정보를 외부(예: 외부 전자 장치)로부터의 접근을 제어하기 위하여 신뢰할 수 있는 외 부 전자 장치(예: 서버)의 제어(예: 명령)에 기반하여 관리할 수 있다. 전자 장치에 포함된 보안 회로가, 외부 전자 장치(예: 서버)의 제어에 의해서만 프로그램을 실행(예: 애플릿의 삭제, 설치, 업데이트 등)하는 경우, 외부 전자 장치의 관리, 통신 데이터 비용의 증가, 프로그램 다운로드, 또 는 설치에 소요되는 시간의 증가로 인해 전자 장치에서 프로그램을 효율적으로 이용하는 데에 어려움이 발생할 수 있다. 본 문서의 다양한 실시 예들은, 예컨대, 전자 장치와 기능적으로 연결된 프로세서와 보안 회로 사이의 보안 채 널(예: 로컬 경로)을 이용하여, 암호화된 프로그램을 보안 회로에 제공하고, 보안 회로 내부에서 생성한 키를 이용하여 암호화된 프로그램을 복호화하여 지정된 기능을 실행할 수 있다. 또한, 다양한 실시예들은, 예컨대, 전자 장치에서의 프로그램 관리 방법 및 이를 지원하는 전자 장치를 제공할 수 있다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 과제 또는 다른 과제를 해결하기 위한, 본 발명의 다양한 실시 예에 따른 전자 장치는, 예를 들면, 본 발명의 다양한 실시 예에 따른 전자 장치는 메모리, 상기 메모리에 암호화된 보안 프로그램을 저장하기 위한 프 로세서 및 상기 프로세서와 보안 채널을 통하여 연결된 보안 회로(secured circuitry)를 포함하고, 상기 보안 회로는 상기 제1 키를 기반으로 제2 키를 생성하고, 상기 제2 키를 기반으로 생성된 제3 연결키를 이용하여 상 기 보안 프로그램을 복호화하도록 설정될 수 있다.본 발명의 다양한 실시 예에 따른 프로그램 관리 방법은 프로 세서, 메모리 및 보안 회로를 포함하는 전자 장치에서 수행되고, 상기 프로세서에서, 상기 메모리에 암호화된 보안 프로그램을 저장하는 동작, 상기 보안 회로에서, 제1 키를 기반으로 제2 키 및 제3 연결키를 생성하는 동 작, 상기 보안 회로에서, 상기 생성한 제2 키의 유효성을 확인하는 키 확인 정보를 상기 프로세서에 송신하는 동작, 상기 프로세서에서, 상기 키 확인 정보가 유효한 경우, 상기 보안 회로에 상기 암호화된 보안 프로그램을 제공하는 동작, 상기 보안 회로에서, 상기 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하는 동작 및 상 기 보안 회로에서, 상기 복호화된 보안 프로그램을 실행하는 동작을 포함할 수 있다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 다양한 실시 예에 따른 전자 장치 및 방법은, 예컨대, 외부 전자 장치와의 연결 없이, 로컬 경로를 통해 암호화된 보안 프로그램을 보안 회로에 제공할 수 있다. 본 발명의 다양한 실시 예에 따른 전자 장치 및 방법은, 예컨대, 보안 회로의 내부에서 생성한 키(예: 보안 키)를 이용하여 프로그램을 복호화할 수 있는 바, 외부에 보안 키의 노출 없이 지정된 프로그램을 실행할 수 있 다. 본 발명의 다양한 실시 예에 따른 전자 장치 및 방법은, 예컨대, 글로벌 플랫폼(global platform)에 의한 표준 통신 방식을 기반으로 하여, 프로세서의 보안 환경 및 보안 회로의 보안 채널을 형성할 수 있는 바, 프로그램 및 프로그램에 이용되는 정보에 대한 보안을 향상시킬 수 있다."}
{"patent_id": "10-2015-0114944", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 문서의 다양한 실시 예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 문서에 기재된 기술을 특정한 실시 형태에 대해 한정하려는 것이 아니며, 본 문서의 실시예의 다양한 변경(modifications), 균등물 (equivalents), 및/또는 대체물(alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 본 문서에서, \"가진다\", \"가질 수 있다\", \"포함한다\", 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 문서에서, \"A 또는 B\", \"A 또는/및 B 중 적어도 하나\", 또는 \"A 또는/및 B 중 하나 또는 그 이상\" 등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B\", \"A 및 B 중 적어도 하나\", 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 문서에서 사용된 \"제 1\", \"제 2\", \"첫째\", 또는 \"둘째\" 등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들 을 한정하지 않는다. 예를 들면, 제 1 사용자 기기와 제 2 사용자 기기는, 순서 또는 중요도와 무관하게, 서로 다른 사용자 기기를 나타낼 수 있다. 예를 들면, 본 문서에 기재된 권리 범위를 벗어나지 않으면서 제 1 구성요 소는 제 2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소도 제 1 구성요소로 바꾸어 명명될 수 있다. 어떤 구성요소(예: 제 1 구성요소)가 다른 구성요소(예: 제 2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결 되어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제 3 구성요소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제 1 구성요소)가 다 른 구성요소(예: 제 2 구성요소)에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는, 상기 어 떤 구성요소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제 3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 문서에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for)\", \"~하는 능력을 가지는(having the capacity to)\", \"~하도록 설계된(designed to)\", \"~하도 록 변경된(adapted to)\", \"~하도록 만들어진(made to)\", 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 설정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\" 것만을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메 모리 장치에 저장된 하나 이상의 소프트웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 본 문서에서 사용된 용어들은 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 다른 실시예의 범위를 한정 하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술 분야에서 통상 의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 문서에 사용된 용어들 중 일반적인 사전에 정의된 용어들은, 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으 며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시 예들을 배제하도록 해석될 수 없다. 본 문서의 다양한 실시 예들에 따른 전자 장치는, 예를 들면, 스마트폰(smartphone), 태블릿 PC(tablet personal computer), 이동 전화기(mobile phone), 영상 전화기, 전자책 리더기(e-book reader), 데스크탑 PC(desktop personal computer), 랩탑 PC(laptop personal computer), 넷북 컴퓨터(netbook computer), 워크 스테이션(workstation), 서버, PDA(personal digital assistant), PMP(portable multimedia player), MP3 플 레이어, 모바일 의료기기, 카메라(camera), 또는 웨어러블 장치(wearable device) 중 적어도 하나를 포함할 수있다. 다양한 실시 예에 따르면, 웨어러블 장치는 액세서리형(예: 시계, 반지, 팔찌, 발찌, 목걸이, 안경, 콘택 트 렌즈, 또는 머리 착용형 장치(head-mounted-device(HMD)), 직물 또는 의류 일체형(예: 전자 의복), 신체 부 착형(예: 스킨 패드(skin pad) 또는 문신), 또는 생체 이식형(예: implantable circuit) 중 적어도 하나를 포 함할 수 있다. 어떤 실시 예들에서, 전자 장치는 가전 제품(home appliance)일 수 있다. 가전 제품은, 예를 들면, 텔레비전, DVD(digital video disk) 플레이어, 오디오, 냉장고, 에어컨, 청소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), 홈 오토매이션 컨트롤 패널(home automation control panel), 보안 컨트롤 패널 (security control panel), TV 박스(예: 삼성 HomeSyncTM, 애플TVTM, 또는 구글 TVTM), 게임 콘솔(예: XboxTM, PlayStationTM), 전자 사전, 전자 키, 캠코더(camcorder), 또는 전자 액자 중 적어도 하나를 포함할 수 있다. 다른 실시 예에서, 전자 장치는, 각종 의료기기(예: 각종 휴대용 의료측정기기(혈당 측정기, 심박 측정기, 혈압 측정기, 또는 체온 측정기 등), MRA(magnetic resonance angiography), MRI(magnetic resonance imaging), CT(computed tomography), 촬영기, 또는 초음파기 등), 네비게이션(navigation) 장치, 위성 항법 시스템 (GNSS(global navigation satellite system)), EDR(event data recorder), FDR(flight data recorder), 자동 차 인포테인먼트(infotainment) 장치, 선박용 전자 장비(예: 선박용 항법 장치, 자이로 콤파스 등), 항공 전자 기기(avionics), 보안 기기, 차량용 헤드 유닛(head unit), 산업용 또는 가정용 로봇, 금융 기관의 ATM(automatic teller's machine), 상점의 POS(point of sales), 또는 사물 인터넷 장치(internet of things) (예: 전구, 각종 센서, 전기 또는 가스 미터기, 스프링클러 장치, 화재경보기, 온도조절기(thermostat), 가로등, 토스터(toaster), 운동기구, 온수탱크, 히터, 보일러 등) 중 적어도 하나를 포함할 수 있다. 어떤 실시 예에 따르면, 전자 장치는 가구(furniture) 또는 건물/구조물의 일부, 전자 보드(electronic board), 전자 사인 수신 장치(electronic signature receiving device), 프로젝터(projector), 또는 각종 계측 기기(예: 수도, 전기, 가스, 또는 전파 계측 기기 등) 중 적어도 하나를 포함할 수 있다. 다양한 실시 예에서, 전자 장치는 전술한 다양한 장치들 중 하나 또는 그 이상의 조합일 수 있다. 어떤 실시 예에 따른 전자 장치는 플렉서블 전자 장치일 수 있다. 또한, 본 문서의 실시 예에 따른 전자 장치는 전술한 기기들에 한정되지 않으며, 기술 발전에 따른 새로운 전자 장치를 포함할 수 있다. 이하, 첨부 도면을 참조하여, 다양한 실시 예에 따른 전자 장치가 설명된다. 본 문서에서, 사용자라는 용어는 전자 장치를 사용하는 사람 또는 전자 장치를 사용하는 장치(예: 인공지능 전자 장치)를 지칭할 수 있다. 본 문서에 개시된 보안 회로(secure circuitry)는, 예를 들면, 안전한 데이터 저장 및/또는 보호된 명령 실행 환경을 보장해주는 회로를 포함할 수 있다. 상기 보안 회로는, 예를 들면, 탈착 가능한 스마트 칩, 또는 시큐어 디지털(SD) 카드 내에 존재하거나, 또는 전자 장치의 고정 칩 내에 내장 될 수 있다. 다양한 실시 예에서, 상기 보안 회로는 가입자 식별 모듈(SIM) 카드에 탑재되거나, 금융 관련 스마트카드에 탑재된 회로를 포함할 수 있다. 상기 보안 회로는, 예를 들면, 암호화 프로세서(cryptographic processor), 또는 난수 발생기(random number generator) 등의 서브 회로를 포함할 수 있다. 상기 보안 회로는, 예를 들어, javaCard open platform (JCOP) 운영 체제 등의 스마트 카드 운영 체제를 기반으로 동작할 수 있다. 또한, 상기 보안 회로는, 예를 들면, 전자 장치의 고정 칩 내의 내장형 보안 요소(embedded secure element; 이하 'eSE'라 한다)를 포함할 수 있다. 본 문서에 개시된 eSE는 보안 회로의 예시이며, 이에 제한되는 것은 아니다. 도 1은 다양한 실시 예에 따른 전자 장치의 블럭도를 도시한다. 도 1을 참조하면, 전자 장치 101은 프로세서 110, 메모리 115 및 보안 회로 120(예: eSE)을 포함할 수 있다. 프 로세서 110은, 예를 들면, 보안 채널 125을 통해 보안 회로 120에 연결될 수 있다. 다양한 실시 예에 따르면, 프로세서 110은 중앙처리장치(CPU), AP(application processor), 또는 CP(communication processor) 중 하나 또는 그 이상을 포함할 수 있다. 프로세서 110은, 예를 들면, 전자 장치 101의 적어도 하나의 다른 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 실행할 수 있다. 다양한 실시 예에 따르면, 프로세서 110은 일반적 연산을 수행하기 위한 영역 및/또는 보안과 관련된 데이터(예: 결제 정보 등)의 처리와 관련된 연산을 수행하기 위한 영역을 포함할 수 있다. 상기 프로세서 110의 구성에 관한 추가 정보는 도 2를 통해 제공될 수 있다. 다양한 실시 예에 따르면, 메모리 115는 휘발성 및/또는 비휘발성 메모리를 포함할 수 있다. 메모리 115는, 예 를 들면, 프로세서 110에서 처리하는 명령 또는 데이터를 저장할 수 있다. 다양한 실시 예에서, 메모리 115는보안 회로 120에서 실행될 수 있는 암호화된 프로그램 데이터를 저장할 수 있다. 예를 들어, 메모리 115는 보안 회로 120에서 암호화된 보안 프로그램(예: 암호화된 스크립트)를 저장하거나, 보안 프로그램을 암호화한 키와 연관된 공개키를 저장할 수 있다. 다양한 실시 예에 따르면, 보안 회로 120은 안전한 데이터 저장 및/또는 보호된 명령 실행 환경을 보장해주는 회로를 포함할 수 있다. 보안 회로 120은, 예를 들면, 프로세서 110 및 메모리 115와 별개로 구현되어, 고정 칩 내에 내장될 수 있다. 보안 회로 120은, 예를 들면, 상대적으로 물리적 공격 또는 해킹 공격에 강한 보안성이 제공될 수 있다. 보안 회로 120은, 예를 들면, 프로세서 110으로부터 암호화된 보안 프로그램을 제공 받을 수 있고, 보안 회로 120 내부에서 생성한 키를 이용하여 상기 보안 프로그램을 복호화 할 수 있다. 보안 회로 120 은, 예를 들면, 보안 프로그램을 실행하여 지정된 기능(예: 애플릿의 삭제, 설치, 업데이트 등)을 수행할 수 있 다. 보안 회로 120가 프로세서 110으로부터 암호화된 보안 프로그램을 제공받고 복호화하는 과정에 관한 정보는 도 2 내지 도 10을 통해 제공될 수 있다. 다양한 실시 예에 따르면, 보안 채널 125는 프로세서 110와 보안 회로 120 사이에 형성된, 데이터를 송수신하는 채널을 포함할 수 있다. 보안 채널 125는, 예를 들면, 프로세서 110가 외부 네트워크(예: 무선 인터넷)에 영향 을 받지 않고, 보안 회로 120를 직접 제어할 수 있는 로컬 경로를 형성할 수 있다. 프로세서 110은, 예를 들면, 보안 채널 125을 통해 별도의 통신 모듈(예: NFC 모듈 1228등)을 거치지 않고, 직접 제어 신호를 송수신할 수 있다. 또한, 프로세서 110은, 예를 들면, 상기 제어 신호에 대응하는 결과를 보안 회로 120로부터 수신할 수 있 다. 다양한 실시 예에 따르면, 상기 보안 채널 125는 SPI(serial peripheral interface), RS232, 또는 I2C(inter- integrated circuit) 등의 물리적 채널을 통해 구현될 수 있다. 예를 들어, 보안 채널 125는 SPI로 구현되는 경 우, 보안 채널 125는 프로세서 110와 보안 회로 120를 직접적으로 연결하는 4개의 선으로 이루어진 직렬 버스의 형태로 구현될 수 있다. 다른 예를 들어, 보안 채널 125이 I2C로 구현되는 경우, 보안 채널 125은 하나의 데이 터 선으로 구현될 수 있다. 다양한 실시 예에서, 프로세서 110과 상기 보안 회로 120은 지정된 프로토콜을 통해 서로 데이터를 송수신할 수 있다. 프로세서 110과 상기 보안 회로 120은, 예를 들면, 채널 형성을 위한 키를 각각 생성하고, 생성된 키의 유효성을 확인하는 프로비저닝(provisioning) 과정을 통해 데이터 송수신을 위한 채널이 형성될 수 있다. 도 2는 다양한 실시 예에 따른 전자 장치의 블록도를 도시한다. 도 2를 참조하면, 전자 장치 101은 프로세서 110, 메모리 115 및 보안 회로 120를 포함할 수 있다. 프로세서 110은, 예를 들면, 일반 환경(REE, rich execution environment) 130 및/또는 보안 환경(TEE, trusted execution environment) 140을 포함할 수 있다. 프로세서 110은 상대적으로 높은 보안 수준을 요구하 는 데이터를 보안 환경 140을 통해 처리할 수 있다. 일반 환경 130 및 보안 환경 140은, 예를 들면, 물리적으로 분리된 형태, 소프트웨어 적으로 분리된 형태, 또는 물리적인 분리와 소프트웨어적인 분리를 모두 이용한 형태 로 구현될 수 있다. 보안 환경 140은, 예를 들면, 보안 채널 125을 통해 보안 회로 120에 연결될 수 있다. 프로세서 110은, 예를 들면, 일반 환경 130이 아닌 보안 환경 140 및/또는 보안 채널 125을 통해 보안 회로 120 에 접근할 수 있다. 프로세서 110은, 예를 들면, 상대적으로 높은 보안 수준을 요구하는 정보 또는 프로그램을 보안 환경 140 및 보안 채널 125을 통해 보안 회로 120에 저장하거나 실행할 수 있다. 일반 환경 130은, 예를 들면, 보안 업무과 관련성이 낮은 통상적인 연산 작업을 수행할 수 있다. 일반 환경 130은 중앙처리장치(CPU), AP(application processor), 또는 CP(communication processor) 중 하나 또는 그 이상을 포함할 수 있다. 일반 환경 130은, 예를 들면, 전자 장치 101의 적어도 하나의 다른 구성요소들(예: 메모리, 통신 인터페이스 등)의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 실행할 수 있다. 다양한 실시 예에서, 일반 환경 130은 외부 장치(예: 외부 서버, 데스크탑 PC, 랩탑, 또는 근거리 무선 통신 장 치 등)로부터 암호화된 보안 프로그램과 암호화된 보안 프로그램과 관련된 추가 정보를 제공 받을 수 있다. 일 반 환경 130은 상기 암호화된 보안 프로그램 또는 추가 정보를 보안 환경 140에 제공할 수 있다. 다양한 실시 예에 따르면, 일반 환경 130은 어플리케이션 레이어 131, 프레임워크 레이어 132 및 커널 133을 포 함할 수 있다. 어플리케이션 레이어 131는, 예를 들면, 전자 장치(예: 전자 장치 101)에 관련된 자원을 제어하는 운영 체제 (operating system, OS) 및/또는 운영 체제 상에서 구동되는 다양한 어플리케이션을 포함할 수 있다.프레임워크 레이어 132는, 예를 들면, 어플리케이션 레이어 131로부터 수신된 하나 이상의 작업 요청들을 우선 순위에 따라 처리할 수 있다. 프레임워크 레이어 132는 상기 우선 순위에 따라 상기 하나 이상의 작업 요청들을 처리함으로써, 상기 하나 이상의 작업 요청들에 대한 스케쥴링 또는 로드 밸런싱 등을 수행할 수 있다. 다양한 실시 예에서, 프레임워크 레이어 132는 보안 환경 140의 구동에 필요한 라이브러리를 포함할 수 있다. 커널 133은, 예를 들면, 다른 프로그램들(예: 프레임워크 레이어 132 또는 어플리케이션 레이어 131)에 구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스, 프로세서 또는 메모리 등)을 제어 또는 관 리할 수 있다. 다양한 실시 예에서, 커널 133은 보안 환경 140을 구동하기 위한 드라이버를 포함할 수 있다. 보안 환경 140은, 예를 들면, 보안 데이터 통신을 수행하기 위한 영역(TEE, trusted execution environment)을 포함할 수 있다. 예를 들면, 프로세서 110 에서 보안과 관련된 데이터(예: 결제 정보 등)의 처리와 관련된 연산 또는 보안 프로그램을 보안 회로 120에 제공할 수 있다. 다양한 실시 예에서, 보안 환경 140은 보안 회로 120와 공유된 키(secret key)를 가질 수 있고, 상기 키를 이용하여 보안 회로 120와 암호화된 데이터를 송수신할 수 있는 채널을 형성할 수 있다. 다양한 실시 예에서, 보안 환경 140은 바이너리 형태의 암호화된 보안 프로그램을 일반 환경 130을 통해 외부 장치로부터 제공받을 수 있다. 보안 환경 140은, 예를 들면, 바이너리 형태의 암호화된 보안 프로그램의 키 서 명을 확인하여, 서명을 검증할 수 있다. 다양한 실시 예에 따르면, 보안 환경 140은 암호화된 보안 프로그램을 보안 회로 120에 제공할 수 있다. 보안 회로 120은 암호화된 보안 프로그램을 보안 회로 120 에서 생성된 키를 이용하여 복호화할 수 있고, 복호화된 보안 프로그램을 실행하여 다양한 기능을 실행할 수 있다. 암호화된 보안 프로그램은, 예를 들면, 외부 장치(예: TSM(trusted service manager) 서버)가 아닌, 프로세서 110에 포함된 보안 환경 140와 보안 회로 120 사이에 형성된 로컬 경로를 통해 제공될 수 있다. 예를 들어, 상기 암호화된 보안 프로그램은 지정된 기능을 실행하는 애플릿(applet)을 설치(또는 삭제, 업데이 트)하기 위한 ELF(executable load file)을 암호화한 스크립트를 포함할 수 있다. 일반 환경 130은, 예를 들면, 외부 서버로부터 암호화된 보안 프로그램을 제공 받을 수 있고, 이를 보안 환경 140에 제공할 수 있다. 보안 환 경 140은 암호화된 보안 프로그램을 지정된 조건(예: 암호화된 보안 프로그램을 복호화하기 위한 키의 유효한 생성)을 만족하는 경우, 상기 암호화된 보안 프로그램을 보안 회로 120에 제공할 수 있다. 다양한 실시 예에 따르면, 보안 환경 140은 보안 회로 120에서 암호화한 보안 프로그램을 복호화하기 위한 키를 생성한 경우, 생성된 키의 유효성을 검증할 수 있다. 보안 환경 140은, 예를 들면, 보안 프로그램을 복호화하기 위한 키를 저장할 필요는 없으며, 보안 회로 120에서 생성한 키의 유효성을 확인하기 위한 키 확인 정보(예: receipt 신호)를 보안 회로 120으로부터 제공받을 수 있다. 보안 환경 140은, 예를 들면, 암호화된 보안 프로그 램과 함께 저장된 키 검증 정보를 상기 키 확인 정보와 비교하여 생성된 키의 유효성을 확인할 수 있다. 다양한 실시 예에 따르면, 보안 환경 140은 보안 어플리케이션 레이어 141, 보안 프레임워크 레이어 142 및 보 안 커널 143을 포함할 수 있다. 보안 어플리케이션 레이어 141는, 예를 들면, 통상적인 데이터와 달리 상대적으로 높은 보안 수준을 요구하는 어플리케이션을 포함할 수 있다. 예를 들어, 보안 어플리케이션 레이어 141는 결제 앱(온라인 또는 오프라인), 또는 사용자 인증 앱(예: 지문 인식, 홍채 인식 등 생체 인식 앱) 등을 포함할 수 있다. 보안 프레임워크 레이어 142는. 예를 들면, 보안 어플리케이션 레이어 141로부터 수신된 하나 이상의 작업 요청 들을 우선 순위에 따라 처리할 수 있다. 보안 프레임워크 레이어 142는 보안 회로 120에 전송하는 데이터를 암 호화하는 기능을 수행할 수 있다. 보안 프레임워크 레이어 142는, 예를 들면, 보안 프로토콜(SP, secure protocol) 모듈 145 및 APDU(application protocol data unit) 통신 엔진 146을 포함할 수 있다. APDU 통신 엔 진 146은, 예를 들면, ISO 7816-4에서 규정한 메시지 규격에 따라 통신을 수행할 수 있다. 보안 프로토콜 모듈 145는, 예를 들면, 어플리케이션 레이어 131로부터 수신된 하나 이상의 작업 요청들을 보안 회로 120와 공유된 키(예: 채널 형성을 위한 키, 이하 채널키)를 통해 암호화 하는 모듈을 포함할 수 있다. 상 기 채널키는 프로비저닝 과정 등을 통해 공유될 수 있다. 다양한 실시 예에 따르면, 프로비저닝 과정은 보안 환 경 140과 보안 회로 120 사이에 세션 형성을 위한 채널키를 공유하는 과정일 수 있다. 프로비저닝 과정은, 예를 들면, 보안 환경 140의 키 교환 요청과 보안 회로 120의 키 교환 응답을 통해 진행될 수 있다. 보안 환경 140은, 예를 들면, 키 교환 요청을 보안 회로 120에 송신할 수 있다. 상기 키 교환 요청은, 예를 들 면, 알고리즘 식별자, 프로세스 식별자, 또는 지정된 보안 알고리즘에 따른 공개키 등을 포함할 수 있다. 보안 회로 120은, 예를 들면, 지정된 조건(예: 저장된 키가 있는지 여부 또는 보안 회로 120의 상태 정보 등)를 확인하여 제1 채널키를 생성할 수 있다. 예를 들어, 보안 회로 120은 프로세서 보안 회로 120의 개인키, 보안 환경 140의 공개키, 식별자, 또는 eSE 식별자 등을 기반으로 KDF(key derivation function)를 계산하여 키를 생성할 수 있다. 보안 회로 120은, 예를 들면, 프로세서 110에 키 교환 응답을 송신할 수 있다. 상기 키 교환 응답은 키의 생성 및 저장이 성공이면 성공 코드를 포함할 수 있고, 키의 생성 및 저장이 실패이면, 에러 코드를 포함할 수 있다. 다양한 실시 예에서, 보안 회로 120은 프로세서 110과의 키 교환을 위해 생성된 키(예: 공개키)와 MAC(message authentication code) 데이터를 응답으로 송신할 수 있다. 보안 환경 140은, 예를 들면, 성공 코드를 수신한 경우, 보안 회로 120의 개인키, 보안 환경 140의 공개키, 프 로세스 식별자, eSE 식별자 등을 인자로 계산하여 제1 채널키를 생성 후 저장할 수 있다. APDU 통신 엔진 146은, 예를 들면, 보안 회로 120에서 인식할 수 있는 포맷(format)으로 데이터를 변환하는 모 듈일 수 있다. 보안 커널 143은, 예를 들면, 다른 프로그램들(예: 보안 프레임워크 레이어 142, 또는 보안 어플리케이션 레이 어 141)에 구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스, 프로세서, 또는 메모리 등)을 제어 또는 관리할 수 있다. 다양한 실시 예에서, 보안 커널 143은 보안 회로 드라이버(미도시)를 포함할 수 있다. 상기 보안 회로 드라이버는 보안 환경 140과 보안 회로 120 사이의 데이터 전송을 위한 인터페이스를 수행할 수 있다. 보안 회로 120은, 예를 들면, 보안 환경 140으로부터 암호화된 보안 프로그램을 제공 받을 수 있고, 보안 회로 120 내부에서 생성한 키를 이용하여 상기 보안 프로그램을 복호화 할 수 있다. 보안 회로 120은 보안 프로그램 을 실행하여 지정된 기능(예: 애플릿의 삭제, 설치, 업데이트 등)을 수행할 수 있다. 다양한 실시 예에 따르면, 보안 회로 120은 보안 환경 140으로부터 제공 받은 제1 키(예: 외부 장치에서 생성된 공개키)를 제공받고, 상기 제1 키를 이용(예: 보안 회로 120에 저장된 비밀키와 조합)하여, 제 2 키를 생성할 수 있다. 보안 회로 120은 제 2 키를 이용하여 암호화된 보안 프로그램을 복호화 하는 제3 연결키를 생성할 수 있다. 이후, 보안 회로 120은 생성한 제2 키의 유효성을 확인하기 위한 키 확인 정보(예: receipt 신호)를 생성 하고, 보안 환경 140에 송신하여 제2 키의 유효성을 검증 받을 수 있다. 보안 환경 140에서 제 2 키의 유효성이 확인 되면 암호화 된 보안 프로그램을 보안 회로 120로 전송할 수 있고, 보안 회로 120은 제3 연결키를 이용하 여 암호화된 보안 프로그램을 복호화하는 과정을 진행할 수 있다. 보안 회로 120가 제2 키 및 제3 연결키를 생성하는 과정, 암호화된 보안 프로그램을 제공받고 복호화하는 과정 에 관한 추가 정보는 별도 도면을 통해 제공될 수 있다. 다양한 실시 예에 따르면, 보안 회로 120 내부에 보안 프로그램의 실행이 완료되면, 지정된 기능을 수행하는 애 플릿이 보안 회로 120 내부에 설치(또는 기존 애플릿의 삭제, 업데이트)될 수 있다. 설치된 애플릿은 보안 회로 120 내부에서 지정된 기능(예: 카드의 잠금/잠금 해제 등)을 수행할 수 있다. 다양한 실시 예에 따르면, 전자 장치 101의 모든 구성요소들이 하나의 전자 장치에 포함되는 구성으로 도시되어 있지만, 다양한 실시예들은 이에 한정되지 않는다. 예를 들면, 전자 장치 101의 역할, 기능, 또는 성능에 따라, 전자 장치 101의 구성요소 중 적어도 일부는 전자 장치 101 및 외부 전자 장치(예: 도 11의 제 1 외부 전자 장 치 1102, 제 2 외부 전자 장치 1104, 또는 서버 1106)에 분산되어 구현될 수 있다. 예를 들면, 전자 장치 101의 상기 프로세서 110 및/또는 상기 메모리 115는 상기 전자 장치에 포함될 수 있으며, 상기 보안 회로 120은 상기 외부 전자 장치에 포함될 수 있다.본 발명의 다양한 실시예들은 이에 한정되지 않으며, 프로세서 110, 메모리 115, 또는 보안 회로 120는 전자 장치 101의 다양한 영역에 배치될 수 있다. 도 3a 및 3b는 다양한 실시 예에 따른 프로그램 관리 방법을 도시한 흐름도이다. 도 3a를 참조하면, 동작 301에서, 전자 장치 101(예: 프로세서 110)은 암호화된 보안 프로그램을 메모리 115에 저장할 수 있다. 상기 보안 프로그램은 지정된 기능을 실행하는 애플릿(applet)을 설치(삭제, 업데이트)하기 위 한 ELF(executable load file)을 암호화한 스크립트 일 수 있다. 다양한 실시 예에 따르면, 상기 암호화된 보안 프로그램은 외부 장치(예: 외부 서버, 데스크탑 PC, 랩탑, 또는 근거리 무선 통신 장치 등)로부터 프로세서 110에 제공될 수 있다. 예를 들어, 상기 암호화된 보안 프로그램은 앱 스토어(예: 구글 플레이 스토어 등)에서 apk 형태로 다운로드 되거나, 운영체제 업그레이드를 위한 OTA(over the air) 방식으로 제공될 수도 있다. 다양한 실시 예에 따르면, 상기 암호화된 보안 프로그램은 보안 회로 120에 미리 주입되어 저장될 수 있다. 예 를 들어, 보안 회로 120가 eSE 칩인 경우, 칩 제조 당시 내부 저장 모듈에 저장될 수 있다. 보안 회로 120은 보 안 채널을 통해 프로세서 110의 보안 환경 140에 암호화된 보안 프로그램을 저장할 수 있다. 동작 302에서, 전자 장치 101(예: 보안 회로 120)은, 예를 들면, 제1 키를 기반으로 제2 키를 생성하고, 제2 키 를 기반으로 상기 보안 프로그램의 암호화에 사용할 제3 연결키를 생성할 수 있다. 프로세서 110은 외부 장치로부터 상기 암호화된 보안 프로그램과 연관된 제1 키(예: 외부 장치에서 생성된 임의 의 공개키)를 함께 제공받을 수 있다. 상기 제1 키는 보안 회로 120에 제공되어, 제2 키를 생성하는데 이용될 수 있다. 다양한 실시 예에서, 상기 제1 키는 전자 장치 101의 제조 과정에서 보안 환경 130 또는 보안 회로 120에 미리 저장될 수도 있다. 상기 제1 키에 대한 추가 정보는 도 4a 및 도 4b를 통해 제공될 수 있다. 보안 회로 120은 상기 제1 키를 이용(예: 보안 회로 120 내부에 저장된 비밀키와 조합)하여, 제2 키를 생성하고, 상기 제2 키를 이용하여 암호화된 보안 프로그램을 복호화 하는 제3 연결키를 생성할 수 있다. 상기 제 3 연결키는 외부 장치에서 상기 보안 프로그램을 암호화하는 과정에서 사용된 키와 동일한 키일 수 있다. 동작 303에서, 보안 회로 120은, 제2 키를 이용하여 제3 연결키를 생성하고, 제3 연결키를 이용하여 암호화된 보안 프로그램을 복호화할 수 있다. 보안 회로 120은 보안 프로그램을 실행하여 지정된 기능(예: 애플릿의 삭제, 설치, 업데이트 등)을 수행할 수 있다. 도 3b를 참조하면, 동작 310 및 320은 도 3a에서의 동작 301 및 302와 동일 또는 유사할 수 있다. 동작 330에서, 보안 회로 120은, 예를 들면, 생성한 제2 키의 유효성을 확인하기 위한 키 확인 정보를 생성하고, 상기 보안 환경 140에 제공할 수 있다. 예를 들어, 상기 키 확인 정보는 제2 키의 유효성을 검증하는 receipt값일 수 있다. 동작 340에서, 프로세서 110은, 예를 들면, 상기 키 확인 정보가 유효한 경우, 상기 보안 회로 120에 암호화된 보안 프로그램을 제공할 수 있다. 다양한 실시 예에 따르면, 프로세서 110은 상기 키 확인 정보에 대응하는 키 검증 정보를 미리 저장할 수 있다. 상기 키 검증 정보는 외부 장치에서 보안 프로그램을 암호화하는 과정에서 추가되는 정보일 수 있다. 예를 들어, 외부 장치는 각각의 보안 프로그램을 암호화하는 과정에서, 임의의 비대칭키를 생성하고, 상기 비대칭키 와 보안 회로 120에 사전에 주입된 공개 키를 조합하여 상기 제2 키를 생성할 수 있다. 외부 장치는 제2 키에 대한 receipt의 해쉬 값을 키 검증 정보로 스크립트에 추가할 수 있다. 이후, 보안 회로 120 내부에서 생성한 제2 키가 외부 장치에서 암호화 과정에서 생성한 제2 키와 동일한 경우, 키 확인 정보의 해쉬값과 키 검증 정보는 동일할 수 있다. 보안 환경 140은 키 확인 정보의 해쉬값과 키 검증 정보의 동일성을 확인하여 보안 회로 120의 내부에서 생성된 제2 키가 외부 장치에서 암호화에 이용된 제2 키와 동일한 것으로 판단되는 경우, 저장된 암호화된 보안 프로그램을 보안 채널을 이용하여 보안 회로 120에 제공할 수 있다. 동작 350에서, 보안 회로 120은, 예를 들면, 제2 키가 유효한 것으로 확인된 경우, 제2 키를 이용하여 제3 연결 키를 생성하고, 제3 연결키를 이용하여 암호화된 보안 프로그램을 복호화할 수 있다. 보안 회로 120은 보안 프 로그램을 실행하여 지정된 기능(예: 애플릿의 삭제, 설치, 업데이트 등)을 수행할 수 있다. 도 4a 및 도 4b는 다양한 실시 예에 따른 외부 장치에서 수행되는 보안 프로그램의 암호화 방법을 도시한 흐름 도 및 구성도이다. 도 4a 및 도 4b를 참조하면, 동작 411에서, 외부 장치 401은, 예를 들면, 전자 장치 101에 제공할 보안 프로그 램(예: ELF) 410을 생성할 수 있다. 동작 412에서, 외부 장치 401은, 예를 들면, 각각의 보안 프로그램 410에 대응하는 임의의 비대칭키 420의 공개 키 및 개인키(이하, 외부 공개키 420a 및 외부 개인키 420b)를 생성할 수 있다. 생성된 비대칭키 420 중 외부 공개키 420a는 전자 장치 101에 암호화된 보안 프로그램 410a과 함께 제공되는 제1 키일 수 있다.동작 413에서, 외부 장치 401은, 예를 들면 상기 임의의 비대칭키 420를 이용하여 보안 프로그램 410을 암호화 하기 위한 공유키 430을 생성할 수 있다. 예를 들어, 보안 회로 120이 eSE 칩인 경우, 칩 제조 시점에서 고유의 비대칭키(이하, 보안 공개키 121a 및 보안 개인키(도 7b의 키 121b))가 생성되고, 보안 개인키가 칩에 삽입될 수 있다. 외부 장치 401은 보안 회로 120에 저장된 보안 개인키에 대응하는 보안 공개키 121a를 사전에 확보할 수 있다. 외부 장치 401은 상기 보안 공개키 121a를 동작 420에서 생성한 외부 개인키 420b와 조합하여, 공유키 430을 생성할 수 있다. 공유키 430은 보안 회로 140에서 생성되는 제2 키와 동일할 수 있다. 동작 414에서, 외부 장치 401은 공유키 430을 이용하여, 키 검증 정보를 생성할 수 있다. 외부 장치 401은 생성 된 공유키 430에 대한 receipt의 해쉬 값을 키 검증 정보로 스크립트에 추가할 수 있다. 이후, 키 검증 정보는 보안 회로 120에서 생성한 제2 키가 외부 장치에서 생성된 공유키 430과 동일한지 여부를 확인하는데 이용될 수 있다. 동작 415에서, 외부 장치 401은 공유키 430을 이용하여, 암호화키 435(보안 회로 120에서 생성되는 제3 연결키 에 대응)를 생성할 수 있다. 동작 416에서, 외부 장치 401은 공유키 430으로부터 생성된 제3 연결키 435를 이용하여, 보안 프로그램 410을 암호화할 수 있다. 다양한 실시 예에서, 외부 장치 401은 보안 프로그램 410의 실행에 필요한 명령을 포함하는 토큰을 생성할 수 있고, 상기 토큰을 토큰 확인 키(token verification key)로 서명할 수 있다. 전자 장치 101 의 보안 회로 120는 상기 토큰의 무결성(integrity)을 검증할 수 있다. 다양한 실시 예에 따르면, 외부 장치 401은 복수의 보안 프로그램들을 전자 장치 101에 제공하고자 하는 경우, 보안 프로그램 마다 서로 다른 임의의 비대칭키 420를 각각 생성하고, 각각의 비대칭키 420을 기반으로 서로 다른 공유키 430을 생성할 수 있다. 외부 장치 401은 공유키 430을 이용하여 각각의 보안 프로그램을 암호화할 수 있다. 다양한 실시 예에서, 외부 장치 401은 복수의 보안 프로그램들에 대해 각각의 외부 공개키와 토큰을 모아 바이너리를 형성하고, 상기 바이너리 의 무결성을 검증할 수 있도록 별도의 키로 서명 할 수 있다. 동작 417에서, 외부 장치 401은 공유키 430을 이용하여 암호화된 보안 프로그램 410a를 바이너리 450(키 검증 정보 및 외부 공개키를 포함할 수 있음)의 형태로 전자 장치 101에 제공할 수 있다. 예를 들어, 상기 암호화된 보안 프로그램은 앱 스토어(예: 구글 플레이 스토어 등)에서 apk 형태로 전자 장치 101에 다운로드 되거나, 운 영체제 업그레이드를 위한 OTA(over the air) 방식으로 전자 장치 101에 제공될 수도 있다. 도 5는 다양한 실시 예에 따른 보안 회로의 블럭도를 도시한다. 도 5를 참조하면, 보안 회로 120은 응용 모듈 510, 관리 모듈 520, 실행 모듈 530, 인증 모듈 540 및 저장 모듈 550을 포함할 수 있다. 상기 실행 모듈 530은, 예를 들면, 적어도 하나 이상의 애플릿(applet)(예: 제1 애플릿, 또는 제2 애플릿 등)을 포함할 수 있다. 상기 애플릿은, 예를 들면, 지정된 기능을 실행하는 어플리케이션을 포 함할 수 있다. 응용 모듈 510은, 예를 들면, 관리 모듈 520으로부터 복호화된 보안 프로그램을 제공 받아 보안 프로그램을 검 증할 수 있다. 응용 모듈 510은 검증 결과가 유효할 경우, 관리 모듈 520에 결과를 전송할 수 있다. 다양한 실 시 예에서, 응용 모듈 510은 관리 모듈 520으로부터 제공되는 토큰의 유효성을 검토(예: 토큰 확인 키를 이용하 여 확인)할 수 있다. 관리 모듈 520은, 예를 들면, 보안 환경 140과 데이터를 송수신하기 위한 채널을 형성할 수 있다. 관리 모듈 520은 제2 키의 생성을 인증 모듈 540에 요청할 수 있다. 관리 모듈 520은, 예를 들면, 제2 키가 유효하게 생성 된 경우, 제2 키를 이용하여 제3 연결키를 생성하고, 응용 모듈 510에 보안 프로그램의 검증을 요청 할 수 있다. 응용 모듈 510로부터 검증이 유효하다는 결과를 수신한 경우, 관리 모듈 520은 제3 연결키를 이용하여 보 안 프로그램을 복호화하고 실행 할 수 있다. 실행 모듈 530은, 예를 들면, 보안 회로 120에서 구동되는 프로그램(예: 애플릿)이 설치되는 영역일 수 있다. 예를 들어, 보안 환경 140에서 결제 어플리케이션이 실행되면, 실행 모듈 530에 설치된 각각의 카드 발행자에 따른 애플릿이 실행될 수 있다. 인증 모듈 540은, 예를 들면, 제2 키를 생성할 수 있고, 제2 키의 유효성을 판단하기 위한 키 확인 정보를 생성 할 수 있다. 상기 제2 키는 보안 환경 140으로부터 제공 받은 제1 키(예: 외부 장치에서 생성된 공개키)와 인증 모듈 540 내부에 저장된 개인키를 조합하여 생성될 수 있다. 상기 키 확인 정보는 제2 키의 유효성을 검증하는 receipt 값일 수 있다. 인증모듈 540은 생성한 제2 키를 관리모듈 520에 전달할 수 있다. 관리모듈 520은 제2키의 유효성을 보안환경 140에게 검증 받을 수 있다. 저장 모듈 550은, 예를 들면, 보안 회로 120 내의 보안 데이터를 저장하는 애플릿일 수 있다. 다양한 실시 예에 따르면, 저장 모듈 550은 보안 환경 140이 관리 모듈 520에 접근하기 위한 연결키를 저장할 수 있다. 상기 연결 키는 보안 회로 120의 제조 시점에서 저장될 수 있고, 인증 과정이 완료된 경우 보안 환경 140에 제공될 수 있 다. 상기 연결키의 인증에 관한 추가 정보는 도 6을 통해 제공될 수 있다. 다양한 실시 예에 따르면, 보안 회로 120의 모든 구성요소들이 하나의 보안 회로에 포함되는 구성으로 도시되어 있지만, 다양한 실시 예들은 이에 한정되지 않는다. 예를 들면, 보안 회로 120의 역할, 기능, 또는 성능에 따라, 보안 회로 120의 구성요소 중 적어도 일부는 전자 장치 101 및 외부 전자 장치(예: 도 11의 제 1 외부 전 자 장치 1102, 제 2 외부 전자 장치 1104, 또는 서버 1106) 에 분산되어 구현될 수 있다. 도시되진 않았지만, 다양한 실시예에 따르면, 응용 모듈 510, 관리 모듈 520, 실행 모듈 530, 인증 모듈 540, 및 저장 모듈 550은 복수의 프로세서(또는, 칩(chip))에 포함될 수 있다. 예를 들면, 관리 모듈 520 및 실행 모듈 530은 제 1 프로세서(또는, 제 1 칩)에 포함될 수 있다. 응용 모듈 510은 제 2 프로세서(또는, 제 2 칩) 에 포함될 수 있다. 또한, 인증 모듈 540 및 저장 모듈 550은 제 3 프로세서(또는, 제 3 칩)에 포함될 수 있다. 다양한 실시 예에 따르면, 보안 회로 120의 적어도 일부는 소프트웨어, 펌웨어, 하드웨어, 또는 이들 중 적어도 둘 이상의 조합으로 구현될 수 있다. 보안 회로 120의 적어도 일부는, 예를 들면, 프로세서(예: 프로세서 110) 에 의해 구현(implement)(예: 실행)될 수 있다. 보안 회로 120의 적어도 일부는 하나 이상의 기능을 수행하기 위한, 예를 들면, 모듈, 프로그램, 루틴, 명령어 세트(sets of instructions) 또는 프로세스 등을 포함할 수 있 다. 도 6은 다양한 실시 예에 따른 관리 모듈과 채널을 형성하는 방법을 도시한 흐름도이다. 도 6을 참조하면, 동작 610에서, 전자 장치 101(예: 프로세서 110의 보안 환경 140)은 프로비저닝 (provisioning) 과정을 통해 보안 회로 120의 저장 모듈 540과 보안 채널을 형성할 수 있다. 보안 환경 140은, 예를 들면, 키 교환 요청을 보안 회로 120에 송신할 수 있다. 상기 키 교환 요청은 알고리즘 식별자, 프로세스 식별자, 또는 지정된 보안 알고리즘에 따른 공개키 등을 포함할 수 있다. 보안 회로 120의 저장 모듈 540은, 예를 들면, 보안 환경 140에 키 교환 응답을 송신할 수 있다. 상기 키 교환 응답은 키의 생성 및 저장이 성공이면 성공 코드를 포함할 수 있고, 키의 생성 및 저장이 실패이면, 에러 코드 를 포함할 수 있다. 보안 채널이 형성된 이후, 보안 환경 140과 저장 모듈 540은 지정된 보안 통신 프로토콜(secure communication protocol)을 통해 데이터를 송수신할 수 있다. 동작 620에서, 보안 환경 140은, 예를 들면, 관리 모듈 520에 접근하기 위한 제1 연결키를 저장 모듈 550에 요 청할 수 있다. 저장 모듈 550은 보안 회로 120의 제조 시점에서 관리 모듈 520에 접근하기 위한 제1 연결키를 저장하도록 설정될 수 있다. 동작 630에서, 전자 장치 101(예: 저장 모듈 550)은, 예를 들면, 보안 환경 140에 대한 인증 과정이 완료되면, 저장된 제1 연결키를 보안 환경 140에 제공할 수 있다. 상기 인증 과정은 저장 모듈 550에 저장된 각각의 저장 정보에 대해 접근 권한을 가진 주체인지를 확인하는 과 정일 수 있다. 예를 들어, 저장 모듈 550은 1) 저장 정보를 요청하는 보안 어플리케이션(보안 환경 140에서 구 동)의 식별자가 일치하는 경우, 2) 저장 정보를 요청하는 보안 요소의 애플릿 식별자가 일치하는 경우, 또는 3) 저장 정보를 요청하는 사용자의 비밀정보(예: 패스워드, 혹은 지문정보 등)가 일치하는 경우 중 어느 하나의 경 우에 저장 정보를 제공할 수 있다. 동작 640에서, 보안 환경 140은, 예를 들면, 제1 연결키를 이용하여 관리 모듈 520과 채널을 형성할 수 있다. 동작 650에서, 보안 환경 140은, 예를 들면, 임의의 제2 연결키를 생성하고, 제1 연결키를 기반으로 하는 보안 채널을 통해 상기 제2 연결키를 관리 모듈 520에 제공할 수 있다. 동작 660에서, 보안 환경 140은, 예를 들면, 제2 연결키를 이용하여 관리 모듈 520과 보안 채널을 형성할 수 있 다. 다양한 실시 예에서, 보안 환경 140은 제2 연결키를 이용한 보안 채널이 형성된 이후, 보안성의 강화를 위 해 제1 연결키를 보안 환경 140 내부에서 제거할 수 있다.다양한 실시 예에 따르면, 보안 환경 140은 제2 연결키를 이용한 보안 채널을 통해, 상기 암호화된 보안 프로그 램과 연관된 제1 키(예: 외부 장치에서 생성된 임의의 공개키)를 보안 회로 120에 제공하여, 보안 프로그램을 복호화하는 과정을 진행할 수 있다. 다양한 실시 예에 따르면, 보안 환경 140, 저장 모듈 550 및 관리 모듈 520 사이의 제1 및 제2 연결키를 교환하 는 과정은 지정된 프로토콜(예: SCP 11)에 따른 키 교환 과정으로 대체될 수 있다. 도 7a 및 도 7b는 다양한 실시 예에 따른 제2 키 및 제3 연결키의 생성 및 검증 방법을 도시한 흐름도이다. 도 7a 및 도 7b를 참조하면, 보안 회로 120은 암호화된 보안 프로그램 410a(예: E_K(ELF))과 연관된 제1 키(외 부 장치 401에서 생성된 임의의 공개키) 420a를 이용하여 제2 키(외부 장치와 공유된 공유키) 122를 생성할 수 있다. 보안 회로 120은 생성된 제2 키 122를 이용해 제3 연결키(암호화된 보안 프로그램을 복호화하는 키) 521 을 생성할 수 있다. 동작 710에서, 보안 환경 140과 관리 모듈 520은, 예를 들면, 보안 채널을 형성할 수 있다. 다양한 실시 예에서, 상기 보안 채널은 도 6에서의 제2 연결키를 이용한 보안 채널일 수 있다. 동작 720에서, 전자 장치 101(예: 일반 환경130)은, 예를 들면, 외부 장치 401로부터 바이너리 450(키 검증 정 보 및 외부 공개키를 포함할 수 있음)을 전송받을 수 있고, 보안 환경 140에 전송할 수 있다. 보안 환경 140은 상기 바이너리 450의 서명을 검증하고, 제1 키(예: 외부 장치에서 생성된 임의의 공개키) 420a를 추출할 수 있 다. 동작 730에서, 전자 장치 101(예: 보안 환경 140)은, 예를 들면, 보안 채널을 통해 관리 모듈 520에 제1 키 420a를 제공할 수 있다. 동작 740에서, 관리 모듈 520은, 예를 들면, 상기 제1 키 420a를 인증 모듈 540에 제공할 수 있다. 동작 750에서, 전자 장치 101(예: 인증 모듈 540)은, 예를 들면, 제2 키 122를 생성할 수 있다. 인증 모듈 540 은 수신한 제1 키 420a와 내부에 저장된 고유의 비대칭키 121(보안 공개키 121a 및 보안 개인키 121b를 포함)를 이용하여, 제2 키 122를 생성할 수 있다. 상기 제2 키 122는, 도 4a 및 4b에서 공유키 430와 동일한 키일 수 있 다. 인증 모듈 540은 수신한 제1 키420a 와 보안 개인키 121b를 조합하여 제2 키 122를 생성할 수 있다. 동작 760에서, 인증 모듈 540은, 예를 들면, 생성된 제2 키 122를 관리 모듈 520에 송신할 수 있다. 동작 765에서, 전자 장치 101(예: 관리 모듈 520)은, 예를 들면, 제2 키 122를 이용하여 제3 연결키 521을 생성 하고, 제2 키 122 및 제3 연결키 521을 저장할 수 있다. 또한, 관리 모듈 520은 수신한 제2 키 122에 대한 키 확인 정보를 생성할 수 있다. 상기 키 확인 정보는 제2 키 122의 유효성을 검증하는 receipt 값일 수 있다. 동작 770에서, 관리 모듈 520은, 예를 들면, 보안 환경 140에 키 확인 정보를 송신할 수 있다. 동작 780에서, 보안 환경 140은, 예를 들면, 키 확인 정보와 바이너리 450에 포함된 키 검증 정보를 비교하여, 제2 키 122가 유효하게 생성되었는지 확인(예: 외부 장치에서 보안 프로그램을 암호화한 공유키 430와 제2 키 122가 동일한지를 확인)할 수 있다. 동작 790에서, 제2 키 122가 유효한 것으로 확인된 경우, 보안 환경 140은, 예를 들면, 암호화된 보안 프로그램 410a을 관리 모듈 520에 송신할 수 있다. 동작 795에서, 관리 모듈 520은, 예를 들면, 제 3키 521을 이용하여, 보안 프로그램을 복호화하고 실행할 수 있 다. 예를 들어, 보안 회로 120의 실행 모듈 530에 제1 애플릿 531 및 제2 애플릿 532가 설치될 수 있다. 도 8은 다양한 실시 예에 따른 보안 프로그램을 복호화하여 애플릿을 설치하는 방법을 도시한 흐름도이다. 도 8 에서는 애플릿을 설치하는 경우를 예시적으로 도시하였으나, 이에 한정되는 것은 아니다. 애플릿을 삭제하거나 업데이트 하는 경우에서 적용될 수 있다. 도 8을 참조하면, 동작 810에서, 관리 모듈 520은, 예를 들면, 키 검증이 완료된 제2 키 및 제3 연결키를 저장 할 수 있다. 동작 820에서, 보안 환경 140은, 예를 들면, 관리 모듈 520에 애플릿의 설치 로드 명령 및 토큰을 암호화된 형 태로 제공할 수 있다. 동작 830에서, 관리 모듈 520은, 예를 들면, 저장된 제3 연결키를 이용하여, 상기 설치 로드 명령 및 토큰을 복 호화할 수 있다. 관리 모듈 520은 상기 토큰을 응용 모듈 510에 제공할 수 있다. 동작 840에서, 응용 모듈 510은, 예를 들면, 수신한 토큰의 유효성을 확인(예: 토큰 확인 키를 이용하여 확인) 할 수 있다. 다양한 실시 예에서, 응용 모듈 510은 토큰이 유효한 경우, 응답 신호를 생성(예: receipt 생성 키 를 이용한 신호를 생성)할 수 있다. 동작 850에서, 응용 모듈 510은, 예를 들면, 토큰 검토 결과를 관리 모듈 520에 전송할 수 있다. 동작 855에서, 관리 모듈 520은 상기 토큰 검토 결과에 따라 보안 환경 140에 응답 신호를 송신할 수 있다. 동작 860에서, 보안 환경 140은, 예를 들면, 관리 모듈 520에 애플릿 설치를 위한 패키지를 전송할 수 있다. 다 양한 실시 예에서, 관리 모듈 520은 상기 패키지를 저장하고, 패키지의 저장에 대한 응답 신호를 보안 환경 140 에 송신할 수 있다. 동작 870에서, 보안 환경 140은, 예를 들면, 설치 시작 명령 및 토큰을 관리 모듈 520에 전송할 수 있다. 동작 880에서, 관리 모듈 520은, 예를 들면, 저장된 제3 연결키를 이용하여, 상기 설치 시작 명령 및 토큰을 복 호화하여, 상기 복호화된 토큰을 응용 모듈 510에 제공할 수 있다. 동작 885에서, 응용 모듈 510은, 예를 들면, 수신한 토큰의 유효성을 확인(예: 토큰 확인 키를 이용하여 확인) 할 수 있다. 다양한 실시 예에서, 응용 모듈 510은 토큰이 유효한 경우, 응답 신호를 생성(예: receipt 생성 키 를 이용한 신호를 생성)할 수 있다. 동작 890에서, 응용 모듈 510은, 예를 들면, 토큰 검토 결과를 관리 모듈 520에 전송할 수 있다. 동작 895에서, 관리 모듈 520은, 예를 들면, 애플릿을 설치할 수 있다. 동작 896에서, 관리 모듈 520은 애플릿의 설치가 완료된 이후, 보안 환경 140에 응답 신호를 송신할 수 있다. 다양한 실시 예에 따르면, 보안 환경140은 복수의 패키지들(예: 패키지 1, 패키지 2, 또는 패키지 N 등)로 구성 된 설치 프로그램을 보안 회로 120에 설치할 수 있다. 보안 환경140은 복수의 패키지들을 순차적 또는 임의적으 로 송신할 수 있다. 다양한 실시 예에서, 관리 모듈 520은 각각의 패키지를 저장하고, 각각의 패키지의 저장에 대한 응답 신호를 보안 환경 140에 송신할 수 있다. 복수의 패키지들 각각에 대해, 상기 동작 820 내지 동작 890이 수행될 수 있다. 관리 모듈 520은 상기 복수의 패키지들 각각에 대한 저장 및 검증이 완료되면 애플릿을 설치할 수 있다. 다양한 실시 예에 따르면, 애플릿을 설치하는 과정 이전에 기존의 애플릿을 삭제하는 과정이 진행될 수 있다. 애플릿을 삭제하는 과정은, 예를 들면, 동작 810 내지 850의 과정과 유사한 형태로 진행될 수 있다. 보안 환경 140은, 예를 들면, 관리 모듈 520에 애플릿의 삭제 명령 및 토큰을 암호화된 형태로 제공할 수 있다. 관리 모듈 520은 저장된 제3 연결키를 이용하여, 상기 삭제 명령 및 토큰을 복호화할 수 있다. 관리 모듈 520은 상기 토큰을 응용 모듈 510에 제공할 수 있다. 응용 모듈 510은 수신한 토큰의 유효성을 확인(예: 토큰 확인 키 를 이용하여 확인)할 수 있다. 응용 모듈 510은 토큰 검토 결과 및 응답 신호를 관리 모듈 520에 제공할 수 있 다. 관리 모듈 520은 보안 환경 140에 삭제 응답 신호를 송신할 수 있다. 도 9는 다양한 실시 예에 따른 보안 회로의 프로비저닝(provisioning) 방법을 도시한 흐름도이다. 프로비저닝 과정은 보안 환경 140과 보안 회로 120 사이에 채널키를 공유하는 과정일 수 있다. 도 9를 참조하면, 동작 910에서, 예를 들면, 보안 환경 140은 프로비저닝 이벤트를 수신할 수 있다. 프로비저닝 이벤트는 프로비저닝 과정을 시작하기 위한 시작 신호일 수 있다. 다양한 실시 예에서, 상기 프로비저닝 이벤트 는 외부 장치로부터 프로비저닝 요청을 수신하는 이벤트일 수 있다. 상기 프로비저닝 요청은 키 생성 관리 장치 의 AT command, 또는 보안 회로 120의 관리 권한을 가지는 외부 서버의 OTA(over the air) 메시지일 수 있다. 다양한 실시 예에 따르면, 상기 프로비저닝 이벤트는 전자 장치 101 내부에서 발생하는 지정된 이벤트일 수 있 다. 예를 들어, 상기 프로비저닝 이벤트는 상기 전자 장치 101의 부팅(booting)시 보안 회로 120가 키를 저장하 지 않은 경우, 상기 전자 장치 101의 부팅(booting)시 프로비저닝을 수행한 이력 정보를 나타내는 플래그를 체 크(flag check)한 이력이 없는 경우, 또는 보안 회로 120의 사용 요청을 받아 연결 요청을 하였을 때, 키가 저 장되지 않은 경우 중 적어도 하나일 수 있다. 보안 환경 140은, 예를 들면, 보안 회로 120가 사전에 채널키를 가지고 있는 경우, 프로비저닝 절차를 종료하고, 채널키를 가지고 있지 않은 경우, 동작 920 내지 980의 프로비저닝 절차를 계속할 수 있다. 동작 920에서, 보안 환경 140은, 예를 들면, 상기 프로비저닝 이벤트에 따라 키 교환 요청을 보안 회로 120에 송신할 수 있다. 다양한 실시 예에서, 상기 키 교환 요청은 알고리즘 식별자, 프로세스 식별자, 또는 지정된 보 안 알고리즘에 따른 공개키 등을 포함할 수 있다. 동작 930에서, 보안 회로 120는, 예를 들면, 지정된 조건(예: 저장된 키가 있는지 여부 또는 보안 회로의 상태 정보 등)를 확인하여 제1 채널키를 생성할 수 있다. 예를 들어, 보안 회로 120는 미리 설정된 채널키가 없고, 보안 회로 120이 차단(blocked) 상태 또는 중단(terminated) 상태가 아닌 경우, 제1 채널키를 생성할 수 있다. 다양한 실시 예에서, 보안 회로 120는 차단(blocked) 상태 또는 중단(terminated) 상태인 경우, 에러 코드를 보 안 환경 140에 송신할 수 있다. 상기 조건에 관한 정보는 도 10을 통해 제공될 수 있다. 다양한 실시 예에서, 보안 회로 120은 보안회로 120의 개인키, 보안환경 140의 공개키, 프로세서 식별자, 보안 회로 식별자 등을 기 반으로 KDF(key derivation function)를 계산하여 키를 생성할 수 있다. 동작 940에서, 보안 회로 120는, 예를 들면, 보안 환경 140에 키 교환 응답을 송신할 수 있다. 상기 키 교환 응 답은 키의 생성이 성공이면 성공 코드를 포함할 수 있고, 키의 생성이 실패이면, 에러 코드를 포함할 수 있다. 다양한 실시 예에서, 보안 회로 120는 보안 환경 140과의 키 교환을 위해 생성된 키(예: 공개키)와 MAC 데이터 를 응답으로 송신할 수 있다. 보안 회로 120는 데이터 무결성 검증을 위해 보안 회로 120의 개인 키로 서명을 하여 상기 응답을 송신할 수 있다. 동작 950에서, 보안 환경 140은, 예를 들면, 상기 키 교환 응답에 대응하여 동작할 수 있다. 성공 코드를 수신 한 경우, 보안 환경 140은 제1 채널키 확인을 위한 서명 검증을 수행하고, 보안회로 120의 개인키, 보안환경 140의 공개키, 프로세스 식별자, 보안 회로 식별자 등을 인자로 계산하여 제1 채널키를 생성 후 저장할 수 있다. 반면, 보안 환경 140은 에러 코드를 수신한 경우, 키의 생성 및 저장이 실패한 이유(예: 키가 이미 존재, 보안 회로 120의 상태가 차단 상태 등)를 확인할 수 있다. 보안 환경 140은 각각의 에러 코드에 대응하는 동작(예: 대기, 재시행, 리셋, 또는 사용자가 알 수 있도록 소리 또는 디스플레이 중 적어도 하나 이상의 방법을 이용한 알림 등)을 수행할 수 있다. 다양한 실시 예에서, 보안 환경 140은 보안 회로 120로부터 전송 받은 MAC 데이터를 보안 환경 140에 의해 직접 생성된 MAC 데이터와 비교하여, 각각의 구성에서 생성된 키의 유효성을 확인할 수 있다. 이와 유사한(또는 대응 되는) 동작이 보안 회로 120에 의해 수행될 수 있다(동작 970). 다양한 실시 예에서, 보안 회로 120의 개인 키 로 서명된 응답을 수신한 경우, 보안 환경 140은 보안 회로 120의 개인 키에 대응되는 공개 키로 서명을 검증할 수 있다. 동작 960에서, 보안 환경 140은, 예를 들면, 키 생성 및 저장이 완료 된 후, MAC 데이터를 이용하여, 키 확인 요청을 보안 회로 120에 송신할 수 있다. 다양한 실시 예에서, 데이터 무결성 검증을 위해 보안 환경 140의 개 인 키로 서명을 하여 키 확인 요청을 보안 회로 120에 송신할 수 있다. 동작 970에서, 보안 회로 120은 제1 채널키 확인을 위한 서명 검증을 수행할 수 있다. 상기 검증이 유효한 경우, 동작 930에서 생성한 제1 채널키를 저장할 수 있다. 보안 회로 120은, 예를 들면, 전송 받은 MAC 데이터 를 직접 생성한 MAC 데이터와 비교하여, 각각에서 생성된 키의 유효성을 확인할 수 있다. 이 경우에도, 전술한 방식과 유사하게 보안 환경 140의 개인 키에 대응되는 공개 키로 서명을 검증할 수 있다. 동작 980에서, 보안 회로 120은, 예를 들면, 상기 비교 결과에 따라 키 확인 응답을 송신할 수 있다. 도 10은 다양한 실시 예에 따른 보안 회로의 키 생성 방법을 도시한 흐름도이다. 도 10를 참조하면, 동작 1010에서, 보안 회로 120는, 예를 들면, 보안 환경 140로부터 키 교환 요청을 수신할 수 있다. 상기 키 교환 요청은 알고리즘 식별자, 프로세스 식별자, 또는 지정된 보안 알고리즘에 따른 공개키 등을 포함할 수 있다. 동작 1020에서, 보안 회로 120는, 예를 들면, 보안 회로의 차단(blocked) 상태 또는 중단(terminated) 상태인지 여부를 확인할 수 있다. 상기 차단 상태는 보안 회로 120의 리셋 과정이 지정된 횟수(예: 5회)이상 실패한 상태 일 수 있다. 상기 중단 상태는 보안 회로 120가 critical attack(예: 물리적 손상 등)에 의해 동작이 중단된 상 태일 수 있다.동작 1030에서, 보안 회로 120는, 예를 들면, 차단 상태 또는 중단 상태가 아닌 경우, 이전에 저장된 채널키가 있는지 여부를 확인할 수 있다. 동작 1020 또는 동작 1030에서 비교 또는 판단한 결과, 보안 회로 120의 상태가 차단 또는 중단이거나, 기존의 키(예: 채널키)가 있는 경우, 보안 회로 120는, 예를 들면, 동작 1040을 수행할 수 있다. 한 실시예에 따르면, 동작 1040에서, 보안 회로 120는, 예를 들면, 키 교환 응답에 에러 코드로 회신할 수 있다. 다양한 실시 예에서, 상기 동작 1020과 1030은 동시에 진행되거나 순서가 바뀔 수 있다. 동작 1020 또는 동작 1030에서 비교 또는 판단한 결과, 보안 회로 120의 상태가 차단 또는 중단이 아니거나, 저 장된 키(예: 채널키)가 없는 경우, 보안 회로 120는, 예를 들면, 동작 1050을 수행할 수 있다. 한 실시예에 따 르면, 동작 1050에서, 보안 회로 120는, 예를 들면, 채널키를 생성 후 저장할 수 있다. 보안 회로 120는 보안회 로 120의 개인키, 보안환경 140의 공개키, 프로세서 식별자, 보안 회로 식별자 등을 기반으로 KDF(key derivation function)를 계산하여 키를 생성하고 저장할 수 있다. 동작 1060에서, 보안 회로 120는, 예를 들면, 키 교환 응답으로 보안 환경 140에 성공 코드로 회신할 수 있다. 도 3 내지 도 4, 및 도 6 내지 도 10에 도시된 과정 내지 방법에 기재된 동작(예: 310 내지 350, 410 내지 460, 610 내지 660, 710 내지 795, 810 내지 895, 910 내지 980, 또는 1010 내지 1060)들은 순차적, 병렬적, 반복적 또는 휴리스틱(heuristic)한 방법으로 실행될 수 있다. 예를 들면, 다른 순서로 실행되거나, 일부 동작이 생략 되거나, 다른 동작이 추가될 수 있다. 도 11은 다양한 실시 예에 따른 네트워크 환경 시스템을 도시한다. 도 11을 참조하여, 다양한 실시 예에서의, 네트워크 환경 1100 내의 전자 장치 1101가 기재된다. 전자 장치 1101는 버스 1110, 프로세서 1120, 메모리 1130, 입출력 인터페이스 1150, 디스플레이 1160, 및 통신 인터페이 스 1170를 포함할 수 있다. 어떤 실시 예에서는, 전자 장치 1101는, 구성요소들 중 적어도 하나를 생략하거나 다른 구성요소를 추가적으로 구비할 수 있다. 버스 1110는, 예를 들면, 구성요소들 1110-1170을 서로 연결하고, 구성요소들 간의 통신(예: 제어 메시지 및/또 는 데이터)을 전달하는 회로를 포함할 수 있다. 프로세서 1120는, 중앙처리장치(central processing unit(CPU)), 어플리케이션 프로세서(application processor(AP)), 또는 커뮤니케이션 프로세서(communication processor(CP)) 중 하나 또는 그 이상을 포함할 수 있다. 프로세서 1120는, 예를 들면, 전자 장치 1101의 적어도 하나의 다른 구성요소들의 제어 및/또는 통신 에 관한 연산이나 데이터 처리를 실행할 수 있다. 메모리 1130는, 휘발성 및/또는 비휘발성 메모리를 포함할 수 있다. 메모리 1130는, 예를 들면, 전자 장치 1101 의 적어도 하나의 다른 구성요소에 관계된 명령 또는 데이터를 저장할 수 있다. 한 실시 예에 따르면, 메모리 1130는 소프트웨어 및/또는 프로그램 1140을 저장할 수 있다. 프로그램 1140은, 예를 들면, 커널 1141, 미들웨 어 1143, 어플리케이션 프로그래밍 인터페이스(application programming interface(API)) 1145, 및/또는 어플 리케이션 프로그램(또는 \"어플리케이션\") 1147 등을 포함할 수 있다. 커널 1141, 미들웨어 1143, 또는 API 1145 의 적어도 일부는, 운영 시스템(operating system(OS))으로 지칭될 수 있다. 커널 1141은, 예를 들면, 다른 프로그램들(예: 미들웨어 1143, API 1145, 또는 어플리케이션 프로그램 1147)에 구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들(예: 버스 1110, 프로세서 1120, 또는 메모리 1130 등)을 제어 또는 관리할 수 있다. 또한, 커널 1141은 미들웨어 1143, API 1145, 또는 어플리케이션 프로그 램 1147에서 전자 장치 1101의 개별 구성요소에 접근함으로써, 시스템 리소스들을 제어 또는 관리할 수 있는 인 터페이스를 제공할 수 있다. 미들웨어 1143는, 예를 들면, API 1145 또는 어플리케이션 프로그램 1147이 커널 1141과 통신하여 데이터를 주 고받을 수 있도록 중개 역할을 수행할 수 있다. 또한, 미들웨어 1143는 어플리케이션 프로그램 1147으로부터 수신된 하나 이상의 작업 요청들을 우선 순위에 따 라 처리할 수 있다. 예를 들면, 미들웨어 1143는 어플리케이션 프로그램 1147 중 적어도 하나에 전자 장치 1101 의 시스템 리소스(예: 버스 1110, 프로세서 1120, 또는 메모리 1130 등)를 사용할 수 있는 우선 순위를 부여할 수 있다. 예컨대, 미들웨어 1143는 상기 적어도 하나에 부여된 우선 순위에 따라 상기 하나 이상의 작업 요청들 을 처리함으로써, 상기 하나 이상의 작업 요청들에 대한 스케쥴링 또는 로드 밸런싱 등을 수행할 수 있다.API 1145는, 예를 들면, 어플리케이션 1147이 커널 1141 또는 미들웨어 1143에서 제공되는 기능을 제어하기 위 한 인터페이스로, 예를 들면, 파일 제어, 창 제어, 영상 처리, 또는 문자 제어 등을 위한 적어도 하나의 인터페 이스 또는 함수(예: 명령어)를 포함할 수 있다. 입출력 인터페이스 1150는, 예를 들면, 사용자 또는 다른 외부 기기로부터 입력된 명령 또는 데이터를 전자 장 치 1101의 다른 구성요소(들)에 전달할 수 있는 인터페이스의 역할을 할 수 있다. 또한, 입출력 인터페이스 1150는 전자 장치 1101의 다른 구성요소(들)로부터 수신된 명령 또는 데이터를 사용자 또는 다른 외부 기기로 출력할 수 있다. 다양한 실시 예에 따르면, 입출력 인터페이스 1150는, 전자 장치 1101에 기능적으로 연결된 센서 모듈(예: 센서 모듈 1240)을 통해서 사용자 입력을 획득할 수 있다. 상기 센서 모듈을 이용하여 획득되는 사용자 입력은, 예를 들면, 근접 이벤트, 또는 가속도 이벤트를 포함할 수 있다. 디스플레이 1160는, 예를 들면, 액정 디스플레이(liquid crystal display(LCD)), 발광 다이오드(light- emitting diode(LED)) 디스플레이, 유기 발광 다이오드(organic light-emitting diode(OLED)) 디스플레이, 또 는 마이크로 전자기계 시스템(microelectromechanical systems(MEMS)) 디스플레이, 또는 전자종이(electronic paper) 디스플레이를 포함할 수 있다. 디스플레이 1160는, 예를 들면, 사용자에게 각종 콘텐츠(예: 텍스트, 이 미지, 비디오, 아이콘, 또는 심볼 등)을 표시할 수 있다. 디스플레이 1160는, 터치 스크린을 포함할 수 있으며, 예를 들면, 전자 펜 또는 사용자의 신체의 일부를 이용한 터치, 제스쳐, 근접, 또는 호버링 입력을 수신할 수 있다. 통신 인터페이스 1170는, 예를 들면, 전자 장치 1101와 외부 장치(예: 제 1 외부 전자 장치 1102, 제 2 외부 전 자 장치 1104, 또는 서버 1106) 간의 통신을 설정할 수 있다. 예를 들면, 통신 인터페이스 1170는 무선 통신 또 는 유선 통신을 통해서 네트워크 1162에 연결되어 외부 장치(예: 제 2 외부 전자 장치 1104 또는 서버 1106)와 통신할 수 있다. 무선 통신은, 예를 들면, 셀룰러 통신 프로토콜로서, 예를 들면, LTE(long-term evolution), LTE-A(LTE Advance), CDMA(code division multiple access), WCDMA(wideband CDMA), UMTS(universal mobile telecommunications system), WiBro(Wireless Broadband), 또는 GSM(Global System for Mobile Communications) 등 중 적어도 하나를 사용할 수 있다. 또한, 무선 통신은, 예를 들면, 근거리 통신 1164을 포 함할 수 있다. 근거리 통신 1164은, 예를 들면, WiFi(wireless fidelity), 블루투스(Bluetooth), NFC(near field communication), 또는 GNSS(global navigation satellite system) 등 중 적어도 하나를 포함할 수 있다. GNSS는 사용 지역 또는 대역폭 등에 따라, 예를 들면, GPS(Global Positioning System), Glonass(Global Navigation Satellite System), Beidou Navigation Satellite System(이하 \"Beidou\") 또는 Galileo, the European global satellite-based navigation system 중 적어도 하나를 포함할 수 있다. 이하, 본 문서에서는, \"GPS\"는 \"GNSS\"와 혼용되어 사용(interchangeably used)될 수 있다. 유선 통신은, 예를 들면, USB(universal serial bus), HDMI(high definition multimedia interface), RS-232(recommended standard232, 또는 POTS(plain old telephone service) 등 중 적어도 하나를 포함할 수 있다. 네트워크 1162는 통신 네트워크 (telecommunications network), 예를 들면, 컴퓨터 네트워크(computer network)(예: LAN 또는 WAN), 인터넷, 또는 전화 망(telephone network) 중 적어도 하나를 포함할 수 있다. 제 1 및 제 2 외부 전자 장치 1102, 1104 각각은 전자 장치 1101와 동일한 또는 다른 종류의 장치일 수 있다. 한 실시 예에 따르면, 서버 1106는 하나 또는 그 이상의 서버들의 그룹을 포함할 수 있다. 다양한 실시 예에 따 르면, 전자 장치 1101에서 실행되는 동작들의 전부 또는 일부는 다른 하나 또는 복수의 전자 장치(예: 전자 장 치 1102,1104, 또는 서버 1106에서 실행될 수 있다. 한 실시 예에 따르면, 전자 장치 1101가 어떤 기능이나 서 비스를 자동으로 또는 요청에 의하여 수행해야 할 경우에, 전자 장치 1101는 기능 또는 서비스를 자체적으로 실 행시키는 대신에 또는 추가적으로, 그와 연관된 적어도 일부 기능을 다른 장치(예: 전자 장치 1102, 1104, 또는 서버 1106)에게 요청할 수 있다. 다른 전자 장치(예: 전자 장치 1102, 1104, 또는 서버 1106)는 요청된 기능 또 는 추가 기능을 실행하고, 그 결과를 전자 장치 1101로 전달할 수 있다. 전자 장치 1101는 수신된 결과를 그대 로 또는 추가적으로 처리하여 요청된 기능이나 서비스를 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴 퓨팅, 분산 컴퓨팅, 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 도 12는 다양한 실시 예에 따른 전자 장치의 블록도를 도시한다. 전자 장치 1201는, 예를 들면, 도 11에 도시된 전자 장치 1101의 전체 또는 일부를 포함할 수 있다.전자 장치 1201는 하나 이상의 프로세서(예: AP(application processor)) 1210, 통신 모듈 1220, (가입자 식별 모듈 1224, 메모리 1230, 센서 모듈 1240, 입력 장치 1250, 디스플레이 1260, 인터페이스 1270, 오디오 모듈 1280, 카메라 모듈 1291, 전력 관리 모듈 1295, 배터리 1296, 인디케이터 1297, 및 모터 1298 를 포함할 수 있 다. 프로세서 1210는, 예를 들면, 운영 체제 또는 응용 프로그램을 구동하여 프로세서 1210에 연결된 다수의 하드웨 어 또는 소프트웨어 구성요소들을 제어할 수 있고, 각종 데이터 처리 및 연산을 수행할 수 있다. 프로세서 1210 는, 예를 들면, SoC(system on chip) 로 구현될 수 있다. 한 실시 예에 따르면, 프로세서 1210는 GPU(graphic processing unit) 및/또는 이미지 신호 프로세서(image signal processor)를 더 포함할 수 있다. 프로세서 1210는 도 12에 도시된 구성요소들 중 적어도 일부(예: 셀룰러 모듈 1221)를 포함할 수도 있다. 프로세서 1210 는 다른 구성요소들(예: 비휘발성 메모리) 중 적어도 하나로부터 수신된 명령 또는 데이터를 휘발성 메모리에 로드(load)하여 처리하고, 다양한 데이터를 비휘발성 메모리에 저장(store)할 수 있다. 통신 모듈 1220은, 도 10의 통신 인터페이스 1070와 동일 또는 유사한 구성을 가질 수 있다. 통신 모듈 1220은, 예를 들면, 셀룰러 모듈 1221, WiFi 모듈 1223, 블루투스 모듈 1225, GNSS 모듈 1227(예: GPS 모듈, Glonass 모듈, Beidou 모듈, 또는 Galileo 모듈), NFC 모듈 1228 및 RF(radio frequency) 모듈 1229를 포함할 수 있다. 셀룰러 모듈 1221은, 예를 들면, 통신망을 통해서 음성 통화, 영상 통화, 문자 서비스, 또는 인터넷 서비스 등 을 제공할 수 있다. 한 실시 예에 따르면, 셀룰러 모듈 1221은 가입자 식별 모듈(예: SIM 카드) 1224을 이용하 여 통신 네트워크 내에서 전자 장치 1201의 구별 및 인증을 수행할 수 있다. 한 실시 예에 따르면, 셀룰러 모듈 1221은 프로세서 1210가 제공할 수 있는 기능 중 적어도 일부 기능을 수행할 수 있다. 한 실시 예에 따르면, 셀 룰러 모듈 1221은 커뮤니케이션 프로세서(CP: communication processor)를 포함할 수 있다. WiFi 모듈 1223, 블루투스 모듈 1225, GNSS 모듈 1227 또는 NFC 모듈 1228 각각은, 예를 들면, 해당하는 모듈 을 통해서 송수신되는 데이터를 처리하기 위한 프로세서를 포함할 수 있다. 어떤 실시 예에 따르면, 셀룰러 모 듈 1221, WiFi 모듈 1223, 블루투스 모듈 1225, GNSS 모듈 1227 또는 NFC 모듈 1228 중 적어도 일부(예: 두 개 이상)는 하나의 integrated chip(IC) 또는 IC 패키지 내에 포함될 수 있다. RF 모듈 1229은, 예를 들면, 통신 신호(예: RF 신호)를 송수신할 수 있다. RF 모듈 1229은, 예를 들면, 트랜시 버(transceiver), PAM(power amp module), 주파수 필터(frequency filter), LNA(low noise amplifier), 또는 안테나 등을 포함할 수 있다. 다른 실시 예에 따르면, 셀룰러 모듈 1221, WiFi 모듈 1223, 블루투스 모듈 1225, GNSS 모듈 1227 또는 NFC 모듈 1228 중 적어도 하나는 별개의 RF 모듈을 통하여 RF 신호를 송수신할 수 있다. 가입자 식별 모듈 1224은, 예를 들면, 가입자 식별 모듈을 포함하는 카드 및/또는 내장 SIM(embedded SIM)을 포 함할 수 있으며, 고유한 식별 정보(예: ICCID(integrated circuit card identifier)) 또는 가입자 정보(예: IMSI(international mobile subscriber identity))를 포함할 수 있다. 메모리 1230(예: 메모리 1030)는, 예를 들면, 내장 메모리 1232 또는 외장 메모리 1234를 포함할 수 있다. 내장 메모리 1232는, 예를 들면, 휘발성 메모리(예: DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등), 비휘발성 메모리(non-volatile Memory)(예: OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash 등), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive(SSD)) 중 적어도 하나를 포함할 수 있다. 외장 메모리 1234는 플래시 드라이브(flash drive), 예를 들면, CF(compact flash), SD(secure digital), Micro-SD(micro secure digital), Mini-SD(mini secure digital), xD(extreme digital), MMC(multi-media card) 또는 메모리 스틱(memory stick) 등을 더 포함할 수 있다. 외장 메모리 1234는 다양한 인터페이스를 통하 여 전자 장치 1201와 기능적으로 및/또는 물리적으로 연결될 수 있다. 센서 모듈 1240은, 예를 들면, 물리량을 계측하거나 전자 장치 1201의 작동 상태를 감지하여, 계측 또는 감지된 정보를 전기 신호로 변환할 수 있다. 센서 모듈 1240은, 예를 들면, 제스처 센서 1240A, 자이로 센서 1240B, 기 압 센서 1240C, 마그네틱 센서 1240D, 가속도 센서 1240E, 그립 센서 1240F, 근접 센서 1240G, 컬러(color) 센 서 1240H(예: RGB(red, green, blue) 센서), 생체 센서 1240I, 온/습도 센서 1240J, 조도 센서 1240K, 또는 UV(ultra violet) 센서 1240M 중의 적어도 하나를 포함할 수 있다. 추가적으로 또는 대체적으로(additionally or alternatively), 센서 모듈 1240은, 예를 들면, 후각 센서(E-nose sensor), EMG 센서(electromyography sensor), EEG 센서(electroencephalogram sensor), ECG 센서(electrocardiogram sensor), IR(infrared) 센서,홍채 센서 및/또는 지문 센서를 포함할 수 있다. 센서 모듈 1240은 그 안에 속한 적어도 하나 이상의 센서들을 제어하기 위한 제어 회로를 더 포함할 수 있다. 어떤 실시 예에서는, 전자 장치 1201는 프로세서 1210의 일부로 서 또는 별도로, 센서 모듈 1240을 제어하도록 구성된 프로세서를 더 포함하여, 프로세서 1210가 슬립(sleep) 상태에 있는 동안, 센서 모듈 1240을 제어할 수 있다. 입력 장치 1250는, 예를 들면, 터치 패널(touch panel) 1252, (디지털) 펜 센서(pen sensor) 1254, 키(key) 1256, 또는 초음파(ultrasonic) 입력 장치 1258를 포함할 수 있다. 터치 패널 1252은, 예를 들면, 정전식, 감압 식, 적외선 방식, 또는 초음파 방식 중 적어도 하나의 방식을 사용할 수 있다. 또한, 터치 패널 1252은 제어 회 로를 더 포함할 수도 있다. 터치 패널 1252은 택타일 레이어(tactile layer)를 더 포함하여, 사용자에게 촉각 반응을 제공할 수 있다. (디지털) 펜 센서 1254는, 예를 들면, 터치 패널의 일부이거나, 별도의 인식용 쉬트(sheet)를 포함할 수 있다. 키 1256는, 예를 들면, 물리적인 버튼, 광학식 키, 또는 키패드를 포함할 수 있다. 초음파 입력 장치 1258는 마 이크(예: 마이크 1288)를 통해, 입력 도구에서 발생된 초음파를 감지하여, 상기 감지된 초음파에 대응하는 데이 터를 확인할 수 있다. 디스플레이 1260(예: 디스플레이 1060)는 패널 1262, 홀로그램 장치 1264, 또는 프로젝터 1266를 포함할 수 있 다. 패널 1262은, 도 10의 디스플레이 1060와 동일 또는 유사한 구성을 포함할 수 있다. 패널 1262은, 예를 들 면, 유연하게(flexible), 투명하게(transparent), 또는 착용할 수 있게(wearable) 구현될 수 있다. 패널 1262 은 터치 패널 1252과 하나의 모듈로 구성될 수도 있다. 홀로그램 장치 1264는 빛의 간섭을 이용하여 입체 영상 을 허공에 보여줄 수 있다. 프로젝터 1266는 스크린에 빛을 투사하여 영상을 표시할 수 있다. 스크린은, 예를 들면, 전자 장치 1201의 내부 또는 외부에 위치할 수 있다. 한 실시 예에 따르면, 디스플레이 1260는 패널 1262, 홀로그램 장치 1264, 또는 프로젝터 1266를 제어하기 위한 제어 회로를 더 포함할 수 있다. 인터페이스 1270는, 예를 들면, HDMI(high-definition multimedia interface) 1272, USB(universal serial bus) 1274, 광 인터페이스(optical interface) 1276, 또는 D-sub(D-subminiature) 1278를 포함할 수 있다. 인 터페이스 1270는, 예를 들면, 도 10에 도시된 통신 인터페이스 1070에 포함될 수 있다. 추가적으로 또는 대체적 으로(additionally and alternatively), 인터페이스 1270는, 예를 들면, MHL(mobile high-definition link) 인 터페이스, SD(secure digital) 카드/MMC(multi-media card) 인터페이스, 또는 IrDA(infrared data association) 규격 인터페이스를 포함할 수 있다. 오디오 모듈 1280은, 예를 들면, 소리(sound)와 전기 신호를 쌍방향으로 변환시킬 수 있다. 오디오 모듈 1280의 적어도 일부 구성요소는, 예를 들면, 도 10 에 도시된 입출력 인터페이스 1045에 포함될 수 있다. 오디오 모듈 1280은, 예를 들면, 스피커 1282, 리시버 1284, 이어폰 1286, 또는 마이크 1288 등을 통해 입력 또는 출력되는 소리 정보를 처리할 수 있다. 카메라 모듈 1291은, 예를 들면, 정지 영상 및 동영상을 촬영할 수 있는 장치로서, 한 실시 예에 따르면, 하나 이상의 이미지 센서(예: 전면 센서 또는 후면 센서), 렌즈, ISP(image signal processor), 또는 플래시 (flash)(예: LED 또는 xenon lamp 등)를 포함할 수 있다. 전력 관리 모듈 1295은, 예를 들면, 전자 장치 1201의 전력을 관리할 수 있다. 한 실시 예에 따르면, 전력 관리 모듈 1295은 PMIC(power management integrated circuit), 충전 IC(charger integrated circuit), 또는 배터 리 또는 연료 게이지(battery or fuel gauge)를 포함할 수 있다. PMIC는, 유선 및/또는 무선 충전 방식을 가질 수 있다. 무선 충전 방식은, 예를 들면, 자기공명 방식, 자기유도 방식 또는 전자기파 방식 등을 포함하며, 무 선 충전을 위한 부가적인 회로, 예를 들면, 코일 루프, 공진 회로, 또는 정류기 등을 더 포함할 수 있다. 배터 리 게이지는, 예를 들면, 배터리 1296의 잔량, 충전 중 전압, 전류, 또는 온도를 측정할 수 있다. 배터리 1296 는, 예를 들면, 충전식 전지(rechargeable battery) 및/또는 태양 전지(solar battery)를 포함할 수 있다. 인디케이터 1297는 전자 장치 1201 또는 그 일부(예: 프로세서 1210)의 특정 상태, 예를 들면, 부팅 상태, 메시 지 상태 또는 충전 상태 등을 표시할 수 있다. 모터 1298는 전기적 신호를 기계적 진동으로 변환할 수 있고, 진 동(vibration), 또는 햅틱(haptic) 효과 등을 발생시킬 수 있다. 도시되지는 않았으나, 전자 장치 1201는 모바 일 TV 지원을 위한 처리 장치(예: GPU)를 포함할 수 있다. 모바일 TV 지원을 위한 처리 장치는, 예를 들면, DMB(digital multimedia broadcasting), DVB(digital video broadcasting), 또는 미디어플로(mediaFloTM) 등의 규격에 따른 미디어 데이터를 처리할 수 있다. 본 문서에서 기술된 구성요소들 각각은 하나 또는 그 이상의 부품(component)으로 구성될 수 있으며, 해당 구성 요소의 명칭은 전자 장치의 종류에 따라서 달라질 수 있다. 다양한 실시 예에서, 전자 장치는 본 문서에서 기술 된 구성요소 중 적어도 하나를 포함하여 구성될 수 있으며, 일부 구성요소가 생략되거나 또는 추가적인 다른 구 성요소를 더 포함할 수 있다. 또한, 다양한 실시 예에 따른 전자 장치의 구성요소들 중 일부가 결합되어 하나의 개체(entity)로 구성됨으로써, 결합되기 이전의 해당 구성요소들의 기능을 동일하게 수행할 수 있다. 도 13은 다양한 실시 예에 따른 프로그램 모듈의 블록도를 도시한다. 한 실시 예에 따르면, 프로그램 모듈 1310(예: 프로그램 1040)은 전자 장치(예: 전자 장치 1001)에 관련된 자원을 제어하는 운영 체제(operating system(OS)) 및/또는 운영 체제 상에서 구동되는 다양한 어플리케이션(예: 어플리케이션 프로그램 1047)을 포함 할 수 있다. 운영 체제는, 예를 들면, 안드로이드(AndroidTM), iOSTM, 윈도우즈(WindowsTM), 심비안(SymbianTM), 타이젠(TizenTM), 또는 바다(Samsung bada osTM) 등이 될 수 있다. 프로그램 모듈 1310은 커널 1320, 미들웨어 1330, 어플리케이션 프로그래밍 인터페이스(application programming interface (API)) 1360, 및/또는 어플리케이션 1370을 포함할 수 있다. 프로그램 모듈 1310의 적 어도 일부는 전자 장치 상에 프리로드(preload) 되거나, 외부 전자 장치(예: 전자 장치 1002, 1004, 서버 1006 등)로부터 다운로드(download) 가능하다. 커널 1320(예: 커널 1041)은, 예를 들면, 시스템 리소스 매니저 1321 및/또는 디바이스 드라이버 1323를 포함할 수 있다. 시스템 리소스 매니저 1321는 시스템 리소스의 제어, 할당, 또는 회수 등을 수행할 수 있다. 한 실시 예에 따르면, 시스템 리소스 매니저 1321는 프로세스 관리부, 메모리 관리부, 또는 파일 시스템 관리부 등을 포 함할 수 있다. 디바이스 드라이버 1323는, 예를 들면, 디스플레이 드라이버, 카메라 드라이버, 블루투스 드라이 버, 공유 메모리 드라이버, USB 드라이버, 키패드 드라이버, WiFi 드라이버, 오디오 드라이버, 또는 IPC(inter- process communication) 드라이버를 포함할 수 있다. 미들웨어 1330는, 예를 들면, 어플리케이션 1370이 공통적으로 필요로 하는 기능을 제공하거나, 어플리케이션 1370이 전자 장치 내부의 제한된 시스템 자원을 효율적으로 사용할 수 있도록 API 1360를 통해 다양한 기능들을 어플리케이션 1370으로 제공할 수 있다. 한 실시 예에 따르면, 미들웨어 1330(예: 미들웨어 1043)는 런타임 라 이브러리 1335, 어플리케이션 매니저(application manager) 1341, 윈도우 매니저(window manager) 1342, 멀티 미디어 매니저(multimedia manager) 1343, 리소스 매니저(resource manager) 1344, 파워 매니저(power manager) 1345, 데이터베이스 매니저(database manager) 1346, 패키지 매니저(package manager) 1347, 연결 매 니저(connectivity manager) 1348, 통지 매니저(notification manager) 1349, 위치 매니저(location manager) 1350, 그래픽 매니저(graphic manager) 1351, 또는 보안 매니저(security manager) 1352 중 적어도 하나를 포 함할 수 있다. 런타임 라이브러리 1335는, 예를 들면, 어플리케이션 1370이 실행되는 동안에 프로그래밍 언어를 통해 새로운 기능을 추가하기 위해 컴파일러가 사용하는 라이브러리 모듈을 포함할 수 있다. 런타임 라이브러리 1335는 입출 력 관리, 메모리 관리, 또는 산술 함수에 대한 기능 등을 수행할 수 있다. 어플리케이션 매니저 1341는, 예를 들면, 어플리케이션 1370 중 적어도 하나의 어플리케이션의 생명 주기(life cycle)를 관리할 수 있다. 윈도우 매니저 1342는 화면에서 사용하는 GUI 자원을 관리할 수 있다. 멀티미디어 매 니저 1343는 다양한 미디어 파일들의 재생에 필요한 포맷을 파악하고, 해당 포맷에 맞는 코덱(codec)을 이용하 여 미디어 파일의 인코딩(encoding) 또는 디코딩(decoding)을 수행할 수 있다. 리소스 매니저 1344는 어플리케 이션 1370 중 적어도 어느 하나의 어플리케이션의 소스 코드, 메모리 또는 저장 공간 등의 자원을 관리할 수 있 다. 파워 매니저 1345는, 예를 들면, 바이오스(BIOS: basic input/output system) 등과 함께 동작하여 배터리 (battery) 또는 전원을 관리하고, 전자 장치의 동작에 필요한 전력 정보 등을 제공할 수 있다. 데이터베이스 매 니저 1346는 어플리케이션 1370 중 적어도 하나의 어플리케이션에서 사용할 데이터베이스를 생성, 검색, 또는 변경할 수 있다. 패키지 매니저 1347는 패키지 파일의 형태로 배포되는 어플리케이션의 설치 또는 업데이트를 관리할 수 있다. 연결 매니저 1348는, 예를 들면, WiFi 또는 블루투스 등의 무선 연결을 관리할 수 있다. 통지 매니저 1349는 도 착 메시지, 약속, 근접성 알림 등의 사건(event)을 사용자에게 방해되지 않는 방식으로 표시 또는 통지할 수 있 다. 위치 매니저 1350는 전자 장치의 위치 정보를 관리할 수 있다. 그래픽 매니저 1351는 사용자에게 제공될 그 래픽 효과 또는 이와 관련된 사용자 인터페이스를 관리할 수 있다. 상기 사용자 인터페이스는 예를 들면, 상기 전자 장치에서 디스플레이를 통해 외부로 출력되는 방식, 색, 발광도(luminosity), 투명도(transparency), 표시위치, 크기, 상기 적어도 일부에 표시되는 콘텐트(content) 또는 상기 콘텐트에 대한 시각적 효과를 변경하도록 설정될 수 있다. 보안 매니저 1352는, 예를 들면, 시스템 보안 또는 사용자 인증 등에 필요한 제반 보안 기능을 제공할 수 있다. 한 실시 예에 따르면, 전자 장치(예: 전자 장치 1001)가 전화 기능을 포함한 경우, 미들웨어 1330는 전자 장치 의 음성 또는 영상 통화 기능을 관리하기 위한 통화 매니저(telephony manager)를 더 포함할 수 있다. 미들웨어 1330는 전술한 구성요소들의 다양한 기능의 조합을 형성하는 미들웨어 모듈을 포함할 수 있다. 미들웨 어 1330는 차별화된 기능을 제공하기 위해 운영 체제의 종류 별로 특화된 모듈을 제공할 수 있다. 또한, 미들웨 어 1330는 동적으로 기존의 구성요소를 일부 삭제하거나 새로운 구성요소들을 추가할 수 있다. API 1360(예: API 1045)는, 예를 들면, API 프로그래밍 함수들의 집합으로, 운영 체제에 따라 다른 구성으로 제 공될 수 있다. 예를 들면, 안드로이드 또는 iOS의 경우, 플랫폼 별로 하나의 API 셋을 제공할 수 있으며, 타이 젠(tizen)의 경우, 플랫폼 별로 두 개 이상의 API 셋을 제공할 수 있다. 어플리케이션 1370(예: 어플리케이션 프로그램 1047)은, 예를 들면, 홈 1371, 다이얼러 1372, SMS/MMS 1373, IM(instant message) 1374, 브라우저 1375, 카메라 1376, 알람 1377, 컨택트 1378, 음성 다이얼 1379, 이메일 1380, 달력 1381, 미디어 플레이어 1382, 앨범 1383, 또는 시계 1384, 건강 관리(health care)(예: 운동량 또 는 혈당 등을 측정), 또는 환경 정보 제공(예: 기압, 습도, 또는 온도 정보 등을 제공) 등의 기능을 수행할 수 있는 하나 이상의 어플리케이션을 포함할 수 있다. 한 실시 예에 따르면, 어플리케이션 1370은 전자 장치(예: 전자 장치 1001)와 외부 전자 장치(예: 전자 장치 1002, 1004) 사이의 정보 교환을 지원하는 어플리케이션(이하, 설명의 편의 상, \"정보 교환 어플리케이션\")을 포함할 수 있다. 정보 교환 어플리케이션은, 예를 들면, 외부 전자 장치에 특정 정보를 전달하기 위한 알림 전 달(notification relay) 어플리케이션, 또는 외부 전자 장치를 관리하기 위한 장치 관리(device management) 어플리케이션을 포함할 수 있다. 예를 들면, 알림 전달 어플리케이션은 전자 장치의 다른 어플리케이션(예: SMS/MMS 어플리케이션, 이메일 어플 리케이션, 건강 관리 어플리케이션, 또는 환경 정보 어플리케이션 등)에서 발생된 알림 정보를 외부 전자 장치 (예: 전자 장치 1002, 1004)로 전달하는 기능을 포함할 수 있다. 또한, 알림 전달 어플리케이션은, 예를 들면, 외부 전자 장치로부터 알림 정보를 수신하여 사용자에게 제공할 수 있다. 장치 관리 어플리케이션은, 예를 들면, 전자 장치와 통신하는 외부 전자 장치(예: 전자 장치 1002, 1004)의 적 어도 하나의 기능(예: 외부 전자 장치 자체(또는, 일부 구성 부품)의 턴-온/턴-오프 또는 디스플레이의 밝기(또 는, 해상도) 조절), 외부 전자 장치에서 동작하는 어플리케이션 또는 외부 전자 장치에서 제공되는 서비스(예: 통화 서비스 또는 메시지 서비스 등)를 관리(예: 설치, 삭제, 또는 업데이트)할 수 있다. 한 실시 예에 따르면, 어플리케이션 1370은 외부 전자 장치(예: 전자 장치 1002, 1004)의 속성(에 따라 지정된 어플리케이션(예: 모바일 의료 기기의 건강 관리 어플리케이션 등)을 포함할 수 있다. 한 실시 예에 따르면, 어 플리케이션 1370은 외부 전자 장치(예: 서버 1006 또는 전자 장치 1002, 1004)로부터 수신된 어플리케이션을 포 함할 수 있다. 한 실시 예에 따르면, 어플리케이션 1370은 프리로드 어플리케이션(preloaded application) 또는 서버로부터 다운로드 가능한 제3자 어플리케이션(third party application)을 포함할 수 있다. 도시된 실시 예 에 따른 프로그램 모듈 1310의 구성요소들의 명칭은 운영 체제의 종류에 따라서 달라질 수 있다. 다양한 실시 예에 따르면, 프로그램 모듈 1310의 적어도 일부는 소프트웨어, 펌웨어, 하드웨어, 또는 이들 중 적어도 둘 이상의 조합으로 구현될 수 있다. 프로그램 모듈 1310의 적어도 일부는, 예를 들면, 프로세서(예: 프 로세서 100)에 의해 구현(implement)(예: 실행)될 수 있다. 프로그램 모듈 1310의 적어도 일부는 하나 이상의 기능을 수행하기 위한, 예를 들면, 모듈, 프로그램, 루틴, 명령어 세트(sets of instructions) 또는 프로세스 등을 포함할 수 있다. 본 문서에서 사용된 용어 \"모듈\"은, 예를 들면, 하드웨어, 소프트웨어 또는 펌웨어(firmware) 중 하나 또는 둘 이상의 조합을 포함하는 단위(unit)를 의미할 수 있다. \"모듈\"은, 예를 들면, 유닛(unit), 로직(logic), 논리 블록(logical block), 부품(component), 또는 회로(circuit) 등의 용어와 바꾸어 사용(interchangeably use)될 수 있다. \"모듈\"은, 일체로 구성된 부품의 최소 단위 또는 그 일부가 될 수 있다. \"모듈\"은 하나 또는 그 이상 의 기능을 수행하는 최소 단위 또는 그 일부가 될 수도 있다. \"모듈\"은 기계적으로 또는 전자적으로 구현될 수 있다. 예를 들면,\"모듈\"은, 알려졌거나 앞으로 개발될, 어떤 동작들을 수행하는 ASIC(application-specific integrated circuit) 칩, FPGAs(field-programmable gate arrays) 또는 프로그램 가능 논리 장치(programmable-logic device) 중 적어도 하나를 포함할 수 있다. 다양한 실시 예에 따른 장치(예: 모듈들 또는 그 기능들) 또는 방법(예: 동작들)의 적어도 일부는, 예컨대, 프 로그램 모듈의 형태로 컴퓨터로 읽을 수 있는 저장매체(computer-readable storage media)에 저장된 명령어로 구현될 수 있다. 상기 명령어가 프로세서(예: 프로세서 1020)에 의해 실행될 경우, 상기 하나 이상의 프로세서 가 상기 명령어에 해당하는 기능을 수행할 수 있다. 컴퓨터로 읽을 수 있는 저장매체는, 예를 들면, 메모리 1030가 될 수 있다. 컴퓨터로 판독 가능한 기록 매체는, 하드디스크, 플로피디스크, 마그네틱 매체(magnetic media)(예: 자기테이프), 광기록 매체(optical media)(예: CD-ROM(compact disc read only memory), DVD(digital versatile disc), 자기-광 매체(magneto-optical media)(예: 플롭티컬 디스크(floptical disk)), 하드웨어 장 치(예: ROM(read only memory), RAM(random access memory), 또는 플래시 메모리 등) 등을 포함할 수 있다. 또 한, 프로그램 명령에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해 서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함할 수 있다. 상술한 하드웨어 장치는 다양한 실시 예 의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지다. 다양한 실시 예에 따르면, 컴퓨터로 판독 가능한 기록 매체는 접근 시 인증이 요구되는 데이터를 획득하는 동작 및 상기 데이터의 적어도 일부를 프로세서와 물리적 채널을 통해 연결된 내장형 보안 요소(embedded secure element, eSE)에 저장하는 동작을 실행시키기 위한 프로그램을 저장할 수 있다. 다양한 실시예에 따르면, 명령들을 저장하고 있는 저장 매체에 있어서, 상기 명령들은 적어도 하나의 프로세서 에 의하여 실행될 때에 상기 적어도 하나의 프로세서로 하여금 적어도 하나의 동작을 수행하도록 설정된 것으로 서, 상기 적어도 하나의 동작은, 프로세서, 메모리 및 보안 회로를 포함하는 전자 장치에서, 상기 프로세서에서, 상기 메모리에 암호화된 보안 프로그램을 저장하는 동작, 상기 보안 회로에서, 제1 키를 기반으 로 제2 키 및 제3 연결키를 생성하는 동작, 상기 보안 회로에서, 상기 생성한 제2 키의 유효성을 확인하는 키 확인 정보를 상기 프로세서에 송신하는 동작, 상기 프로세서에서, 상기 키 확인 정보가 유효한 경우, 상기 보안 회로에 상기 암호화된 보안 프로그램을 제공하는 동작, 상기 보안 회로에서, 상기 제3 연결키를 이용하여 상기 보안 프로그램을 복호화하는 동작 및 상기 보안 회로에서, 상기 복호화된 보안 프로그램을 실행하는 동작을 포 함할 수 있다. 다양한 실시 예에 따른 모듈 또는 프로그램 모듈은 전술한 구성요소들 중 적어도 하나 이상을 포함하거나, 일부 가 생략되거나, 또는 추가적인 다른 구성요소를 더 포함할 수 있다. 다양한 실시 예에 따른 모듈, 프로그램 모 듈 또는 다른 구성요소에 의해 수행되는 동작들은 순차적, 병렬적, 반복적 또는 휴리스틱(heuristic)한 방법으 로 실행될 수 있다. 또한, 일부 동작은 다른 순서로 실행되거나, 생략되거나, 또는 다른 동작이 추가될 수 있다. 그리고 본 문서에 개시된 실시 예는 개시된, 기술 내용의 설명 및 이해를 위해 제시된 것이며, 본 문서에 서 기재된 기술의 범위를 한정하는 것은 아니다. 따라서, 본 문서의 범위는, 본 문서의 기술적 사상에 근거한 모든 변경 또는 다양한 다른 실시 예를 포함하는 것으로 해석되어야 한다.도면 도면1 도면2 도면3a 도면3b 도면4a 도면4b 도면5 도면6 도면7a 도면7b 도면8 도면9 도면10 도면11 도면12 도면13"}
{"patent_id": "10-2015-0114944", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시 예에 따른 전자 장치의 블럭도를 도시한다. 도 2는 다양한 실시 예에 따른 전자 장치의 블록도를 도시한다. 도 3a 및 3b은 다양한 실시 예에 따른 프로그램 관리 방법을 도시한 흐름도이다. 도 4a 및 도 4b는 다양한 실시 예에 따른 외부 장치에서 수행되는 보안 프로그램의 암호화 방법을 도시한 흐름 도 및 구성도이다. 도 5는 다양한 실시 예에 따른 보안 회로의 블럭도를 도시한다. 도 6은 다양한 실시 예에 따른 관리 모듈과 채널을 형성하는 방법을 도시한 흐름도이다. 도 7a 및 도 7b는 다양한 실시 예에 따른 제2 키 및 제3 연결키의 생성 및 검증 방법을 도시한 흐름도이다. 도 8은 다양한 실시 예에 따른 보안 프로그램을 복호화하여 애플릿을 설치하는 방법을 도시한 흐름도이다. 도 9는 다양한 실시 예에 따른 보안 회로의 프로비저닝(provisioning) 방법을 도시한 흐름도이다. 도 10은 다양한 실시 예에 따른 보안 회로의 키 생성 방법을 도시한 흐름도이다. 도 11은 다양한 실시 예에 따른 네트워크 환경 시스템을 도시한다.도 12는 다양한 실시 예에 따른 전자 장치의 블록도를 도시한다. 도 13은 다양한 실시 예에 따른 프로그램 모듈의 블록도를 도시한다."}
