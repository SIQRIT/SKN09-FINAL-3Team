{"patent_id": "10-2020-0054370", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0143241", "출원번호": "10-2020-0054370", "발명의 명칭": "ML 및 AI 모델들에 대해 대립적 샘플들을 완화하기 위한 시스템", "출원인": "바이두 유에스에이 엘엘씨", "발명자": "지아, 윤한"}}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "신뢰할 수 있는 환경(trusted environment)에서 데이터 처리(data processing)를 위한 컴퓨터-구현방법으로서, 상기 방법은:타겟 ML(target machine learning) 모델에 의해 제공되기 위해 머신 러닝(machine learning, ML) 서비스에 대한 클라이언트(client)로부터 쿼리(query)를 수신하는 단계;상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어(score)-상기 유사성 스코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 단계; 상기 유사성 스코어가 사전 결정된 임계값(threshold)을 초과하는지 여부를 결정하는 단계; 및상기 유사성 스코어가 상기 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적(adversarial) 쿼리로 결정하는 단계;를 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클라이언트로서 지정하는(designating) 단계; 및상기 타겟 ML 모델의 블라인드 스폿(blind spot)의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타겟 ML 모델과 함께 트레이닝 된 ML 모델들의 모음(collection)으로부터의 대체 ML 모델로 상기 대립적 클라이언트의 후속 쿼리들을 서비스하는 단계;를 더 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2항에 있어서, 상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단(blocking)하는 단계를 더 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2항에 있어서,상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는- 상기 임의로 선택된 ML 모델에의해 상기 클라이언트로 리턴된(returned) 신뢰 스코어(confidence score)를 난독화(obfuscate)하기 위해-, 방법.공개특허 10-2020-0143241-3-청구항 5 제 2항에 있어서,상기 ML 모델들의 모음은 상이한 에포크(epoch)를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레이닝 된,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항에 있어서,상기 유사성 스코어는 임의의 두개의 쿼리들에 대한 임의의 두개의 입력들 사이의 거리(distance)에 기초하여계산되는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6항에 있어서, 상기 두개의 입력들이 이미지들인 경우, 상기 거리는 상기 두개의 이미지들 사이의 상이한 픽셀(pixel)들의 카운트(count)를 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 6항에 있어서,상기 두개의 입력들이 두개의 이미지들인 경우, 상기 거리는 상기 두개의 이미지들 사이의 픽셀들 차이들의 합을 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 6항에 있어서,상기 두개의 입력들이 두개의 이미지들로 구성되는 경우, 상기 거리는 상기 두개의 이미지들 사이의 픽셀들 차이들의 평균 제곱근(root mean square)을 포함하는,방법."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "프로세서에 의해 실행되는 경우, 상기 프로세서로 하여금 동작들을 수행하도록 하는 명령들이 저장된 비-일시적기기-판독 가능 매체로서, 상기 동작들은: 타겟 ML 모델에 의해 제공되기 위해 머신 러닝(ML) 서비스에 대한 클라이언트로부터 쿼리를 수신하는 동작;상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어-상기 유사성 스코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 동작;공개특허 10-2020-0143241-4-상기 유사성 스코어가 사전 결정된 임계값을 초과하는지 여부를 결정하는 동작; 및상기 유사성 스코어가 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적 쿼리로 결정하는 동작;을 포함하는,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 10항에 있어서,상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클라이언트로서 지정하는 동작; 및상기 타겟 ML 모델의 블라인드 스폿의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타겟 ML 모델과함께 트레이닝 된 ML 모델들의 모음으로부터의 대체 ML 모델로 상기 대립적 클라이언트의 후속 쿼리들을 서비스하는 동작;을 더 포함하는,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11항에 있어서,상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단하는 동작을 더 포함하는,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11항에 있어서,상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는-상기 임의로 선택된 ML 모델에의해 상기 클라이언트로 리턴된 신뢰 스코어를 난독화하기 위해-,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11항에 있어서,상기 ML 모델들의 모음은 상이한 에포크를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레이닝 되는,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 10항에 있어서,공개특허 10-2020-0143241-5-상기 유사성 스코어는 임의의 두개의 쿼리들에 대한 임의의 두개의 입력들 사이의 거리에 기초하여 계산되는,비-일시적 기기-판독 가능 매체."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "데이터 처리 시스템에 있어서,프로세서; 및상기 프로세서에 의해 실행되는 경우, 상기 프로세서로 하여금 동작들을 수행하도록 하는 명령들을 저장하기 위해 상기 프로세서와 연결된 메모리를 포함하고, 상기 동작들은:타겟 ML 모델에 의해 제공되기 위해 머신 러닝(ML) 서비스에 대한 클라이언트로부터 쿼리를 수신하는 동작;상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어-상기 유사성 스코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 동작;상기 유사성 스코어가 사전 결정된 임계값을 초과하는지 여부를 결정하는 동작; 및상기 유사성 스코어가 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적 쿼리로 결정하는 동작;을 포함하는,시스템."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16항에 있어서,상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클라이언트로서 지정하는 동작; 및상기 타겟 ML 모델의 블라인드 스폿의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타겟 ML 모델과함께 트레이닝 된 ML 모델들의 모음으로부터의 대체 ML 모델로 상기 대립적 클라이언트의 후속 쿼리들을 서비스하는 동작;을 더 포함하는,시스템."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17항에 있어서,상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단하는 동작을 더 포함하는,시스템."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 17항에 있어서,상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는-상기 임의로 선택된 ML 모델에공개특허 10-2020-0143241-6-의해 상기 클라이언트로 리턴된 신뢰 스코어를 난독화하기 위해-,시스템."}
{"patent_id": "10-2020-0054370", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 17항에 있어서,상기 ML 모델들의 모음은 상이한 에포크를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레이닝 되는,시스템."}
{"patent_id": "10-2020-0054370", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 실시예들은 머신 러닝(ML)/인공 지능(AI) 모델들에 대한 대립적 입력 샘플들을 완화하기 위한 시스템 을 개시한다. 일 실시예에 따라, 시스템은 ML 서비스에 대한 클라이언트로부터 쿼리를 수신한다. 시스템은 클라 이언트로부터 수신된 다수의 사전 쿼리들에 기초하는 쿼리에 대해 유사성 스코어(similarity score)를 계산하며, 유사성 스코어는 사전 쿼리들 및 수신된 쿼리 사이의 유사성을 나타낸다. 시스템은 유사성 스코어가 사전 결정된 임계값(threshold)을 초과한다는 결정에 대한 응답으로 쿼리를 대립적 쿼리로 결정한다. 공개특허10-2020-0143241 CPC특허분류 G06N 20/00 (2019.01) G06F 2221/0748 (2013.01) G06F 2221/2141 (2013.01) 발명자 장, 유롱 미국 캘리포니아주 94089 서니베일 보르도 드라이 브 1195웨이, 타오 미국 캘리포니아주 94089 서니베일 보르도 드라이 브 1195명 세 서 청구범위 청구항 1 신뢰할 수 있는 환경(trusted environment)에서 데이터 처리(data processing)를 위한 컴퓨터-구현 방법으로서, 상기 방법은: 타겟 ML(target machine learning) 모델에 의해 제공되기 위해 머신 러닝(machine learning, ML) 서비스에 대 한 클라이언트(client)로부터 쿼리(query)를 수신하는 단계; 상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어(score)-상기 유 사성 스코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 단계; 상기 유사성 스코어가 사전 결정된 임계값(threshold)을 초과하는지 여부를 결정하는 단계; 및 상기 유사성 스코어가 상기 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적 (adversarial) 쿼리로 결정하는 단계; 를 포함하는, 방법. 청구항 2 제 1항에 있어서, 상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클 라이언트로서 지정하는(designating) 단계; 및 상기 타겟 ML 모델의 블라인드 스폿(blind spot)의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타 겟 ML 모델과 함께 트레이닝 된 ML 모델들의 모음(collection)으로부터의 대체 ML 모델로 상기 대립적 클라이언 트의 후속 쿼리들을 서비스하는 단계; 를 더 포함하는, 방법. 청구항 3 제 2항에 있어서, 상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단(blocking)하는 단계를 더 포함하는, 방법. 청구항 4 제 2항에 있어서, 상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는- 상기 임의로 선택된 ML 모델에 의해 상기 클라이언트로 리턴된(returned) 신뢰 스코어(confidence score)를 난독화(obfuscate)하기 위해-, 방법.청구항 5 제 2항에 있어서, 상기 ML 모델들의 모음은 상이한 에포크(epoch)를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레 이닝 된, 방법. 청구항 6 제 1항에 있어서, 상기 유사성 스코어는 임의의 두개의 쿼리들에 대한 임의의 두개의 입력들 사이의 거리(distance)에 기초하여 계산되는, 방법. 청구항 7 제 6항에 있어서, 상기 두개의 입력들이 이미지들인 경우, 상기 거리는 상기 두개의 이미지들 사이의 상이한 픽셀(pixel)들의 카 운트(count)를 포함하는, 방법. 청구항 8 제 6항에 있어서, 상기 두개의 입력들이 두개의 이미지들인 경우, 상기 거리는 상기 두개의 이미지들 사이의 픽셀들 차이들의 합 을 포함하는, 방법. 청구항 9 제 6항에 있어서, 상기 두개의 입력들이 두개의 이미지들로 구성되는 경우, 상기 거리는 상기 두개의 이미지들 사이의 픽셀들 차 이들의 평균 제곱근(root mean square)을 포함하는, 방법. 청구항 10 프로세서에 의해 실행되는 경우, 상기 프로세서로 하여금 동작들을 수행하도록 하는 명령들이 저장된 비-일시적 기기-판독 가능 매체로서, 상기 동작들은: 타겟 ML 모델에 의해 제공되기 위해 머신 러닝(ML) 서비스에 대한 클라이언트로부터 쿼리를 수신하는 동작; 상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어-상기 유사성 스 코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 동작;상기 유사성 스코어가 사전 결정된 임계값을 초과하는지 여부를 결정하는 동작; 및 상기 유사성 스코어가 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적 쿼리로 결정 하는 동작; 을 포함하는, 비-일시적 기기-판독 가능 매체. 청구항 11 제 10항에 있어서, 상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클 라이언트로서 지정하는 동작; 및 상기 타겟 ML 모델의 블라인드 스폿의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타겟 ML 모델과 함께 트레이닝 된 ML 모델들의 모음으로부터의 대체 ML 모델로 상기 대립적 클라이언트의 후속 쿼리들을 서비스 하는 동작; 을 더 포함하는, 비-일시적 기기-판독 가능 매체. 청구항 12 제 11항에 있어서, 상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단하는 동작을 더 포함하는, 비-일시적 기기-판독 가능 매체. 청구항 13 제 11항에 있어서, 상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는-상기 임의로 선택된 ML 모델에 의해 상기 클라이언트로 리턴된 신뢰 스코어를 난독화하기 위해-, 비-일시적 기기-판독 가능 매체. 청구항 14 제 11항에 있어서, 상기 ML 모델들의 모음은 상이한 에포크를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레이닝 되 는, 비-일시적 기기-판독 가능 매체. 청구항 15 제 10항에 있어서,상기 유사성 스코어는 임의의 두개의 쿼리들에 대한 임의의 두개의 입력들 사이의 거리에 기초하여 계산되는, 비-일시적 기기-판독 가능 매체. 청구항 16 데이터 처리 시스템에 있어서, 프로세서; 및 상기 프로세서에 의해 실행되는 경우, 상기 프로세서로 하여금 동작들을 수행하도록 하는 명령들을 저장하기 위 해 상기 프로세서와 연결된 메모리를 포함하고, 상기 동작들은: 타겟 ML 모델에 의해 제공되기 위해 머신 러닝(ML) 서비스에 대한 클라이언트로부터 쿼리를 수신하는 동작; 상기 클라이언트로부터 사전 수신된 복수의 쿼리들에 기초하여 상기 쿼리에 대한 유사성 스코어-상기 유사성 스 코어는 상기 사전의 쿼리들 및 상기 수신된 쿼리 사이의 유사성을 나타냄-를 계산하는 동작; 상기 유사성 스코어가 사전 결정된 임계값을 초과하는지 여부를 결정하는 동작; 및 상기 유사성 스코어가 사전 결정된 임계값을 초과한다는 결정에 대한 응답으로 상기 쿼리를 대립적 쿼리로 결정 하는 동작; 을 포함하는, 시스템. 청구항 17 제 16항에 있어서, 상기 쿼리가 대립적 쿼리라는 결정에 대한 응답으로, 상기 대립적 쿼리와 관련된 상기 클라이언트를 대립적 클 라이언트로서 지정하는 동작; 및 상기 타겟 ML 모델의 블라인드 스폿의 탐색을 방지하기 위해, 상기 타겟 ML 모델 대신에, 상기 타겟 ML 모델과 함께 트레이닝 된 ML 모델들의 모음으로부터의 대체 ML 모델로 상기 대립적 클라이언트의 후속 쿼리들을 서비스 하는 동작; 을 더 포함하는, 시스템. 청구항 18 제 17항에 있어서, 상기 대립적 클라이언트로부터의 추가적인 쿼리들을 차단하는 동작을 더 포함하는, 시스템. 청구항 19 제 17항에 있어서, 상기 대체 ML 모델은, 상기 후속 쿼리들 각각에 대한 상기 ML 모델들의 모음으로부터 임의로 선택되는-상기 임의로 선택된 ML 모델에의해 상기 클라이언트로 리턴된 신뢰 스코어를 난독화하기 위해-, 시스템. 청구항 20 제 17항에 있어서, 상기 ML 모델들의 모음은 상이한 에포크를 포함하는 상이한 파라미터로, 상기 타겟 ML 모델과 함께 트레이닝 되 는, 시스템. 발명의 설명"}
{"patent_id": "10-2020-0054370", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 실시예들은 일반적으로 다자간 컴퓨팅(multiparty computing) 보안에 관한 것이다. 보다 구체적으로, 본 발명의 실시예들은 머신 러닝(machine learning, ML) 및 인공 지능(AI) 모델들에 대한 대립적 샘플들을 완화 하기 위한 시스템에 관한 것이다."}
{"patent_id": "10-2020-0054370", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "ML 및/또는 AI 모델들은 멀웨어(malware)들/위협들을 분류/검출하고 그리고, 컨텐츠(content)를 센싱(censor)/ 필터링(filter)하는 애플리케이션(application)들에 의해 사용될 수 있는 클라우드(cloud) 제공자들에 의해 클 라우드 API들을 통해 제공될 수 있다. 하지만, 공격자(adversary)들은 ML 또는 AI 모델들을 속이기 위한 “대립 적 샘플(adversarial sample)들”을 생성하기 위해 ML 또는 AI 모델들의 “블라인드 스폿(blind spot)”을 조 사하도록(probe) 연속적인 쿼리(query)들을 보낼 수 있다. 필터링 된 컨텐츠의 수동 검사들 및 검출들은 대립적 샘플들을 식별하기 위해 인간들에 의해 수행될 수 있다. 하지만, 이 방법은 시간이 많이 걸리며, 확장 가능(scalable)하지 않다."}
{"patent_id": "10-2020-0054370", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 다양한 실시예들 및 양상들이 아래에서 설명되는 세부사항들을 참조하여 기술될 것이며, 첨부 도면들 은 다양한 실시예들을 도시할 것이다. 이후의 설명 및 도면들은 본 발명의 예시일 뿐, 본 발명을 제한하는 것으 로 해석되지 않아야 한다. 본 발명의 다양한 실시예들에 대한 전반적인 이해를 제공하기 위해 다수의 구체적인세부사항들이 기술된다. 그러나, 어떤 경우들에서, 본 발명들의 실시예들의 간결한 설명을 제공하기 위해 공지 되거나 종래의 세부사항들은 기술되지 않는다. 본 명세서에서 “일 실시예” 또는 “실시예”에 대한 언급은 실시예들과 함께 기술되는 특정한 특징, 구조, 또 는 특성이 본 발명의 적어도 하나의 실시예에 포함됨을 의미한다. 본 명세서의 다양한 부분들에서 “일 실시예 에서”라는 문구의 등장들은 반드시 동일한 실시예를 모두 지칭하는 것은 아니다. 본 개시내용의 실시예들은 머신 러닝 또는 인공 지능(ML/AI) 모델들의 “블라인드 스폿들”을 이용하는 “대립 적 샘플들”을 완화하기 위한 시스템 및 방법을 개시한다. 일 실시예에 따라, 시스템은 ML 서비스에 대한 클라 이언트(client)로부터 쿼리를 수신한다. 시스템은 클라이언트로부터 수신된 다수의 사전 쿼리들에 기초하는 쿼 리에 대해 유사성 스코어(similarity score)를 계산하며, 유사성 스코어는 사전 쿼리들 및 수신된 쿼리 사이의 유사성을 나타낸다. 시스템은 유사성 스코어가 사전 결정된 임계값(threshold)을 초과한다는 결정에 대한 응답 으로 쿼리를 대립적 쿼리로 결정한다. 도 1은 일 실시예에 따라 네트워크 시스템을 도시한 블록 다이어그램이다. 도 1을 참고하면, 시스템 구성 은 네트워크를 통해 데이터 처리 서버와 통신 가능하게(communicatively) 연결된 하나 이상의 클라이 언트 디바이스들(101-102)을 포함하지만, 이에 제한되지는 않는다. 클라이언트 디바이스들(101-102)은 모바일 폰(mobile phone)(예를 들어, 스마트폰), 스마트 워치(Smartwatch), 웹 가능 기기(Web enabled appliance), 개 인 휴대정보 단말기(personal digital assistant, PDA), “씬(thin)” 클라이언트, 개인용 컴퓨터(personal computer)(예를 들어, 데스크탑(desktop)들, 랩탑(laptop)들, 및 타블랫(tablet)들) 등과 같이 클라이언트 디 바이스들의 임의의 타입(type)일 수 있다. 대안적으로, 클라이언트 디바이스들(101-102)은 다른 서버들일 수도 있다. 네트워크는 유선 또는 무선, 이들의 조합 또는, 인터넷과 같은 광역 통신망(wide area network, WAN), 근거리 통신망(local area network, LAN)과 같은 네트워크들의 임의의 타입일 수도 있다. 네트워크(10 3)를 통한 데이터 처리 서버 및 클라이언트 디바이스들(101-102) 사이의 통신은, 예를 들어, TLS/SSL을 통 해 보안될 수 있다. 데이터 처리 서버(예를 들어, 호스트)는 웹 또는 클라우드 서버들, 애플리케이션 서버들, 백엔드(backend) 서버들, 또는 이들의 조합과 같은 서버들의 클러스터(cluster) 또는 서버들의 임의의 종류일 수도 있다. 서버 는 서버에 의해 제공되는 서비스들 또는 리소스(resource)들에 클라이언트 디바이스들(101-102)과 같 은 클라이언트들이 접근(access)하는 것을 허용하기 위한 인터페이스(interface)를 포함할 수 있다. 리소스들 또는 서비스들의 예시들은 컨텐츠를 센싱/필터링, 멀웨어/위협을 분류/감지하기 위한 클라우드 AI 서비스들을 포함할 수 있다. 서비스들은 통계적인, 머신 러닝(ML)/인공 지능(AI) 알고리즘들 및 모델들을 사용하여 수행될 수 있다. ML/AI 모델들의 예시들은 재귀(recurrent), 강화 학습, 컨볼루션(convolutional) 뉴럴 네트워크 모델 들 등과 같은 단일 층의 또는 딥 뉴럴 네트워크(deep neural network) 모델들을 포함할 수 있다. 서버는 프라이빗 클라우드(private cloud), 공용 클라우드(public cloud), 또는 하이브리드 클라우드(hybrid cloud)일 수도 있는 클라우드를 통한 SaaS (Software-as-a-Service) 또는 PaaS (Platform-as-a-Service) 시스템의 일부 분으로서 구성될 수도 있다. 인터페이스는 웹 인터페이스, API(application programming interface), 및/또는 CLI(command line interface)를 포함할 수도 있다. 데이터 처리 서버는 클라이언트들에 의해 전송된 입력 데이터 및/또는 쿼리들을 저장하기 위한 쿼리/입력 데이터베이스를 포함할 수 있다. 입력 데이터의 예시는 위협 검출 및/또는 센싱/필터링을 위한 입력 데이 터 및 사전 쿼리들을 포함할 수 있다. 데이터 처리 서버는 머신 러닝(ML) 서비스들 모듈 및 하나 이상의 ML 모델 패밀리(family)(108- 109)를 포함할 수 있다. ML 서비스들 모듈은 클라이언트들(101-102)로부터 ML/AI 서비스들 요청을 수신할 수 있고, 요청이 만족되는 경우 요청자에게 결과들을 리턴(return)할 수 있다. ML 모델 패밀리(108-109)는 하나 이상의 ML 모델들의 패밀리들을 포함할 수 있다. ML 모델들의 패밀리는 동일한 ML 서비스를 제공할 수 있지만, 각각 약간 상이한 예측 스코어를 리턴할 수 있다. 일 실시예에서, 패밀리 내의 ML 모델 각각이 상이한 예측 결 과(prediction outcome) 또는 신뢰 스코어(confidence score)를 출력하도록 ML 모델들의 패밀리는 상이한 트레 이닝(training) 파라미터(parameter)들로, 함께 트레이닝 된다. 상이한 모델/트레이닝 파라미터들의 예시들은 상이한 에포크(epoch)들 (트레이닝 데이터를 통해 패스(pass)한 횟수), 수렴을 위한 반복들, 활성화 함수들, 드 롭 아웃(dropout) 비율, (모델이 뉴럴 네트워크인 경우,) 등을 포함할 수 있다. 예를 들어, 오프라인 트레이닝 에서 AI 모델에 대한 마지막 세 개의 체크 포인트들(예를 들어, t = T, t = T-1, t = T-2)은 패밀리의 ML/AI 모델들로서 사용될 수 있다. 이러한 트레이닝 된 모델들은 약간 상이한 출력 결과들(예를 들어, 확률/신뢰 스코어)를 생성하지만, 동일한 추론(예를 들어, 분류/위협 검출)을 가진다. 예를 들어, 동일한 입력 파라미터들(예 를 들어, 이미지가 외설적/노골적 자료를 가지는지 분류하는 것)을 가지는 컨텐츠 필터링 쿼리는 패밀리의 세 개의 ML 모델들을 사용하여 세개의 고유한 출력들 예측(0.90, 0.91, 및 0.906과 같은)을 가질 수 있지만, 결과 는 동일한 추론이다(이미지가 외설적/노골적 자료를 가진다). 일 실시예에서, ML 모델들의 패밀리 각각은 요청 을 서비스하도록 타겟 ML 모델을 지정할 수 있다. 또 다른 일 실시예에서, 패밀리 각각에 포함된 모델은 요청을 서비스하도록 임의로 선택될 수 있다. 이 경우에, 매번 상이한 신뢰 스코어로, 컨텐츠 필터링은 입력 데이터에 포함된 외설적/노골적 자료들, 멀웨어/위협 검출, 또는 임의의 다른 타입의 컨텐츠를 식별할 수 있다. 도 2는 일 실시예에 따라 ML 서비스들 모듈의 예시를 도시한 블록 다이어그램이다. ML 서비스들 모듈은 ML/AI 서비스에 대한 클라이언트 입력에 대해 난독화 된 신뢰 스코어를 생성할 수 있다. 도 2를 참고하면, 일 실시예에서, ML 서비스들 모듈은 클라이언트 입력들/쿼리들 수신기, 유사성 체크(similarity check), 의심되는 분류(suspicious classification), 및 ML 모델 선택기(selector)와 같은 서 브 모듈들을 포함한다. 클라이언트 입력들/쿼리들 수신기는 클라이언트 요청과 관련된 클라이언트 입력들 및/또는 클라이언트 쿼리들을 수신할 수 있다. 클라이언트 입력들/쿼리들 수신기는 추후 검색을 위해 도 1 의 쿼리/입력 데이터베이스와 같은 쿼리/입력 데이터베이스에 수신된 정보를 추가로 저장할 수 있다. 유사 성 체크는 사전 클라이언트 입력과 비교하여 사전 클라이언트 입력에 대한 유사성 스코어를 생성할 수 있 다. 의심되는 분류는 클라이언트 입력에 대한 유사성 스코어에 기초하여 클라이언트 입력이 의심적/대립적 인지를 결정할 수 있다. ML 모델 선택기는 클라이언트 쿼리를 서비스하도록 ML 모델들의 패밀리 내의 ML 모델을 선택할 수 있다. 일 실시예에서, ML 모델은 랜덤 함수(random function)을 사용하여 ML 모델 패밀리로부 터 임의로 선택된다. 도 3은 일 실시예에 따라 ML 서비스들을 제공하는 시스템을 도시한 블록 다이어그램이다. 시스템은 도 1의 시스템을 나타낼 수도 있다. 도 3을 참고하면, 호스트는 클라이언트 쿼리들 및/또는 입력(들)을 수신할 수 있고, 난독화 된 신뢰 스코어를 요청 클라이언트에게 리턴할 수 있다. 클라이언트 입력들은 클 라우드 AI 서비스를 사용한 애플리케이션(앱, app) 또는 프로그램으로부터 올 수 있다. 예를 들어, 앱은 이미지 에서 잠재적인 성인, 외설적, 또는 폭력적인 자료를 검출 및 센싱하도록 시스템에 의해 제공된 이미지 검 열(censorship) AI 서비스를 사용할 수 있다. 도 3을 참조하면, 일 실시예에서, 수신된 클라이언트 입력들은 유사성 체크를 통과한다. 입력 유사성 체크 는 동일한 클라이언트의 사전 입력들과 비교하여 쿼리의 입력이 얼마나 '유사한'지를 나타내는 유사성 스 코어를 생성할 수 있다. 또 다른 일 실시예에서, 입력 유사성 체크는 사전 결정된 시간 범위 내에 모든 클 라이언트들의 사전 입력들과 비교하여 쿼리의 입력에 대한 유사성 스코어를 생성한다. 동기는 “대립적 샘플들 ”을 생성하기 위해, 공격자가 각각 약간 상이한 섭동(perturbation)을 가지는 입력들의 세트로 AI 모델들을 조 사할 필요가 있다는 것이다. 약간의 변화가 있는 이들의 입력들 각각에 대한 출력 신뢰 스코어들은 ML 모델의 그래디언트 정보(gradient information)를 추정하고, 그리고 조사하기 위해 사용될 수 있다. 추정되는 그래디언 트 정보에 기초하여, 공격자는 대립적 샘플들이 AI 모델들을 속이는 가능성을 높이는, 모델 출력 신뢰 스코어들 을 안정적으로 낮추는 대립적 샘플들을 제작할 수 있다. 난독화 된 신뢰 스코어를 통해, 신뢰 스코어는 ML 모델 패밀리에서 임의로 선택된 ML 모델들에 의해 생성되므로, 공격자가 그래디언트 정보를 추정하고 그리고 모델 신 뢰 스코어를 낮추기 위한 섭동 방향을 찾는 것이 더 어려울 것이다. 유사성 스코어들의 생성은 상이한 애플리케이션들/클라이언트 입력에 대해 다양한 방식들로 구현될 수 있다. 예 를 들어, 일 실시예에서, 유사성 스코어는 입력(예를 들어, )과 사전 입력(예를 들어, ) 사이의 거리 (distance) 스코어로서 구현될 수 있다. 일 실시예에서, 입력 이미지들에 대해, 거리 스코어는 L0, L1 및 L2의 조합일 수 있고, 여기서 L0은 와 사이의 상이한 픽셀(pixel)들의 수의 카운트(count)에 기초하여 계산되고, L1은 모든 픽셀들에 대해 차이들의 합(예를 들어, )이고, 그리고 L2는 모든 픽셀들에 대한 차이들의 평균 제곱근(root mean square)(예를 들어, )이다. 유사성 스코어에 기초하여, 의심되는 분류는 유사성 스코어가 사전 결정된 임계값 스코어와 같거나 낮은 경우 클라이언트 입력 데이터를 정상으로 분류하거나, 또는 유사성 스코어가 사전 결정된 임계값 스코어를 초과 하는 경우, 클라이언트 입력 데이터를 의심되는 것으로 분류할 수 있다. 입력이 정상으로 분류되는 경우, 타겟 ML/AI 모델은 클라이언트 입력에 기초하여 예측 작업(task)을 수행 하도록 선택될 수 있다. 입력이 의심되는 것으로 분류되는 경우, 클라이언트 입력에 기초하여 예측 작업을 수행 하도록, ML/AI 모델은 약간 다른 파라미터들로 타겟 ML/AI 모델과 함께 트레이닝 된 ML/AI 모델들의 모음(예를 들어, ML 모델들 패밀리)에서 임의로 선택될 수 있다. 목적은 예측 정확도와 관련하여 타겟 모델과 크게 다르지 않지만 동일한 추론 결과들을 산출하는 대체 모델들을 가지는 것임을 유의한다. 예측 작업에 대한 상이 한 예측 정확도는 난독화 된 신뢰 스코어를 생성할 수 있다. 여기서, 난독화 된 신뢰 스코어는 동일한 입 력 샘플이 클라이언트 입력들로서 사용되는 경우, 다양한 확률/신뢰 스코어들을 의미하며, 신뢰 스코어들의 차 이가 대립적 입력 조사(probing)에 대해 명확한 패턴을 제공하지 않음에 유의한다. 난독화 된 신뢰 스코어는 대 립적 샘플들을 사용하는 대립적 조사를 저지한다. ML/AI 모델들은 과적합(overfitting), 트레이닝 중 부적절한 데이터 세트 또는 AI 모델들의 결점(shortcoming)과 같이 다양한 이유들로 인해 “블라인드 스폿들”(잘못된 추 정에서의 결과)을 가질 수 있음을 유의한다. “블라인드 스폿들”은 공격자가 추세를 확인하기 위해 AI 모델을 조사하여, “블라인드 스폿들”을 유발(trigger)하는 입력 샘플들을 안정적으로 제작하도록 허용한다. 도 4는 일 실시예에 따라 방법을 도시한 플로우 다이어그램이다. 프로세스(process)는 소프트웨어, 하드웨 어, 또는 이들의 조합을 포함할 수도 있는 처리 로직(processing logic)에 의해 수행될 수도 있다. 예를 들어, 프로세스는 도 1의 데이터 처리 서버(예를 들어, 호스트)에 의해 수행될 수도 있다. 도 4를 참고하면, 블 록 에서, 처리 로직은 머신 러닝(ML) 서비스에 대해 클라이언트로부터 쿼리를 수신한다. 블록 에서, 처리 로직은 클라이언트로부터 수신된 다수의 사전 쿼리들에 기초하는 쿼리에 대해 유사성 스코어를 계산하며, 유사성 스코어는 사전 쿼리들 및 수신된 쿼리 사이의 유사성을 나타낸다. 블록 에서, 유사성 스코어가 사 전 결정된 임계값을 초과한다는 결정에 대한 응답으로 쿼리를 대립적 쿼리로 결정한다. 도 5는 일 실시예에 따라 방법을 도시한 플로우 다이어그램이다. 프로세스는 소프트웨어, 하드웨어, 또는 이들의 조합을 포함할 수도 있는 처리 로직에 의해 수행될 수도 있다. 예를 들어, 프로세스는 도 1의 데이 터 처리 서버(예를 들어, 호스트)에 의해 수행될 수도 있다. 도 5를 참고하면, 블록 에서, 처리 로직은 대 립적 쿼리와 관련된 클라이언트를 대립적 클라이언트로 식별한다. 블록 에서, 타겟 ML 모델의 블라인드 스 폿 탐색을 방지하도록, 타겟 ML 모델 대신에, 처리 로직은 타겟 ML 모델과 함께 트레이닝 된 ML 모델들의 모음 에서의 대체 ML모델로 대립적 클라이언트의 후속 쿼리들을 서비스한다. 블록 에서, 대체 ML 모델은 임의로 선택된 ML 모델에 의해 클라이언트에게 리턴 된 신뢰 스코어를 난독화 하기 위해 후속 쿼리들 각각에 대한 ML 모델들의 모음으로부터 임의로 선택된다. 일 실시예에서, 처리 로직은 추가적으로 대립적 클라이언트로부터의 추가적인 쿼리들을 차단한다. 또 다른 일 실시예에서, ML 모델들의 모음은 상이한 에포크를 포함하는 상이한 파라미터로, 타겟 ML 모델과 함께 트레이닝 된다. 일 실시예에서, 유사성 스코어는 임의의 두개의 쿼리들에 대한 임의의 두개의 입력들 사이의 거리에 기초하여 계산된다. 또 다른 일 실시예에서, 두개의 입력들이 이미지들인 경우, 거리는 상기 두개의 이미지들 사이의 상 이한 픽셀들의 카운트를 포함한다. 또 다른 일 실시예에서, 거리는 상기 두개의 이미지들 사이의 픽셀들 차이들 의 합을 포함한다. 또 다른 일 실시예에서, 거리는 두개의 이미지들 사이의 픽셀들 차이들의 평균 제곱근(root mean square)을 포함한다. 상기 도시되고 설명된 바와 같은 구성 요소들 중 일부 또는 전부는 소프트웨어, 하드웨어, 또는 이들의 조합으 로 구현될 수 있음에 유의한다. 예를 들어, 이러한 구성 요소들은 프로세서(미도시)에 의해 메모리에 로드 및 실행되어 본 출원 전체에 기술된 프로세스들 또는 동작들을 수행할 수 있는, 영구 저장 디바이스에 설치 및 저 장되는 소프트웨어로서 구현될 수 있다. 대안적으로, 이러한 구성 요소들은 집적 회로(예를 들어, 애플리케이션 특정 IC 또는 ASIC), 디지털 신호 프로세서(digital signal processor, DSP), 또는 필드 프로그래머블 게이트 어레이(field programmable gate array, FPGA)와 같이, 애플리케이션으로부터 대응하는 드라이버 및/또는 운영 체제(operating system)를 통해 접근될 수 있는, 전용 하드웨어에 프로그래밍 되거나, 또는 임베디드(embedded) 실행가능한 코드(code)로서 구현될 수 있다. 또한, 이러한 구성 요소들은 하나 이상의 특정 명령들을 통해 소프 트웨어 구성요소에 의해 접근 가능한(accessible) 명령 세트의 일부로서 프로세서 코어 또는 프로세서에서 특정 하드웨어 로직으로서 구현될 수 있다. 도 6은 일 실시예에 따라 데이터 처리 시스템(data processing system)을 도시한 블록 다이어그램이다. 예를 들 어, 시스템은 예를 들어, 상술한 클라이언트 디바이스 또는 서버와 같은(예를 들어, 상술한 바와 같이 클 라이언트들(101-102) 및 서버와 같은), 상술한 임의의 프로세스들 또는 방법들을 수행하는 상술한 임의의 데이터 처리 시스템들을 표시할 수도 있다. 시스템은 다수의 상이한 구성 요소들을 포함할 수 있다. 이러한 구성 요소들은 집적 회로(IC), 이들의 일 부, 개별 전자 디바이스, 컴퓨터 시스템의 애드-인(add-in)카드 또는 마더보드(motherboard)와 같이 회로 보드 에 적합한 다른 모듈들, 또는 컴퓨터 시스템의 전체 구조(chassis) 내에 포함된 구성 요소들로서 구현될 수 있 다. 또한 시스템은 컴퓨터 시스템의 많은 구성 요소들의 높은 레벨의 뷰(view)를 나타내도록 의도됨에 유의한 다. 그러나, 추가적인 구성 요소들이 특정 구현들에 존재할 수도 있으며, 나아가, 도시되는 구성 요소들의 상이 한 배열이 다른 구현들에서 발생할 수도 있음을 이해하여야 한다. 시스템은 데스크탑, 랩탑, 태블릿, 서 버, 모바일 폰, 미디어 플레이어(media player), 개인 휴대 정보 단말기(PDA), 스마트 워치, 개인 통신기 (communicator), 게임 디바이스, 네트워크 라우터(router)또는 허브, 무선 접근 포인트(AP) 또는 리피터 (repeater), 셋-탑(set-top) 박스, 또는 이들의 조합을 표시할 수 있다. 또한, 단일 기기(machine) 또는 시스 템만이 도시되어 있지만, 용어 \"기기\" 또는 \"시스템\"은 마찬가지로 본 명세서에서 논의된 임의의 하나 이상의 방법론들을 수행하기 위한 명령들의 한 세트를 개별적 또는 공동적으로 실행하는 기기들 또는 시스템들의 임의 의 집합을 포함하는 것으로 간주되어야 한다. 일 실시예에서, 시스템은 버스 또는 인터커넥트(interconnect)를 통해 프로세서, 메모리 및 디바이스들(1505-1508)을 포함한다. 프로세서는 단일 프로세서 또는 단일 프로세서 코어 또는 다중 프로세서 코어가 포함된 다중 프로세서들을 표시할 수도 있다. 프로세서는 마이크로 프로세서, 중앙 처리 디바이스(CPU) 등과 같은 하나 이상의 범용 프로세서를 나타낼 수 있다. 보다 구체적으로, 프로세서 는 복합 명령어 집합 컴퓨팅 (CISC) 마이크로 프로세서, 축소 명령어 집합 컴퓨팅 (RISC) 마이크로 프로 세서, 훨씬 긴 명령어 워드 (VLIW) 마이크로 프로세서, 또는 다른 명령어 세트들을 구현하는 프로세서, 또는 명 령어 세트들의 조합을 구현하는 프로세서들 일 수 있다. 프로세서는 또한, ASIC (application specific integrated circuit), 셀룰러(cellular) 또는 기저 대역 프로세서(baseband processor), FPGA (Field Programmable Gate Array), DSP (Digital Signal Processor), 네트워크 프로세서, 그래픽 프로세서, 통신 프로 세서, 암호화 프로세서, 코-프로세서(co-processor), 임베디드 프로세서, 또는 명령어들의 처리가 가능한 임의 의 다른 유형의 로직과 같은, 하나 이상의 특수-목적(special-purpose) 프로세서들일 수 있다. 초-저전압(ultra-low voltage) 프로세서와 같은 저전력 멀티-코어 프로세서 소켓(socket)일 수도 있는 프로세서 는 시스템의 다양한 구성 요소들과 통신하기 위한 메인 처리 유닛 및 중앙 허브로서 작동할 수도 있다. 이러한 프로세서는 SoC(system on chip)으로서 구현될 수 있다. 프로세서는 본 명세서에서 논의된 동작들 및 단계들을 수행하기 위한 명령들을 실행하도록 구성된다. 시스템은 디스플레이 컨트롤러, 그래픽 프로 세서 및/또는 디스플레이 디바이스를 포함할 수 있는, 선택적인 그래픽 서브시스템(optional graphics subsystem)과 통신하는 그래픽 인터페이스를 더 포함할 수도 있다. 프로세서는 일 실시예에서 주어진 양의 시스템 메모리를 제공하기 위해 다수의 메모리 디바이스들을 통해 구현될 수 있는 메모리와 통신할 수 있다. 메모리 는 랜덤 액세스 메모리 (RAM), 동적 RAM (DRAM), 동기식 DRAM (SDRAM), 정적 RAM (SRAM), 또는 다른 유형들의 저장 디바이스들과 같은 하나 이상의 휘발성 저장 (volatile storage)(또는 메모리) 디바이스들을 포함할 수 있다. 메모리 는 프로세서 또는 임의의 다른 디바이스에 의해 실행되는 명령들의 시퀀스들을 포함하는 정보를 저장할 수도 있다. 예를 들어, 다양한 운 영 체제들, 디바이스 드라이버들, 펌웨어(예를 들어, 입력 출력 기본 시스템 또는 BIOS), 및/또는 애플리케이션 의 실행가능 코드 및/또는 데이터들은 메모리에 로딩되고 프로세서에 의해 실행될 수 있다. 운영 체제는, 예를 들어, Microsoft®의 Windows® 운영 체제, Apple의 Mac OS®/iOS®, Google의 Android®, Linux ®, Unix® 또는 VxWorks와 같은 실시간(real-time) 또는 임베디드 운영 체제들과 같은, 임의의 종류의 운영 체 제들일 수 있다. 시스템은 네트워크 인터페이스 디바이스(들), 선택적인 입력 디바이스 (들) 및 다른 선택적 인 IO 디바이스(들)를 포함하는 디바이스들(1505-1508)과 같은 IO 디바이스들을 더 포함할 수 있다. 네트 워크 인터페이스 디바이스는 무선 트랜시버 및/또는 네트워크 인터페이스 카드(NIC)를 포함할 수도 있다. 무선 트랜시버(transceiver)는 WiFi 트랜시버, 적외선 트랜시버, 블루투스 트랜시버, WiMax 트랜시버, 무선 셀 룰러 전화 트랜시버, 위성 트랜시버 (예를 들어, GPS (Global Positioning System) 트랜시버), 또는 다른 라디 오 주파수(RF) 트랜시버 또는 이들의 조합일 수도 있다. NIC는 이더넷 카드(Ethernet card)일 수도 있다. 입력 디바이스(들)은 마우스, 터치 패드, 터치 감지 스크린(디스플레이 디바이스와 통합될 수도 있 는), 스타일러스(stylus)와 같은 포인터 디바이스, 및/또는 키보드(예를 들어, 물리적 키보드 또는 터치 감지스크린의 일부분으로 디스플레이 된 가상 키보드)일 수도 있다. 예를 들어, 입력 디바이스는 터치 스크린 에 연결된 터치 스크린 컨트롤러를 포함할 수도 있다. 터치 스크린 및 터치 스크린 컨트롤러는, 예를 들어, 터 치 스크린과 하나 이상의 접촉점을 결정하기 위한 다른 근접 센서 어레이들 또는 다른 요소들뿐 아니라, 용량성, 저항성, 적외선 및 표면 탄성파(surface acoustic wave) 기술들을 포함하지만 이에 제한 되지 않는, 다 수의 터치 감지 기술들 중 임의의 것을 사용하여 발생되는 접촉 및 움직임 또는 이의 중단(brake)을 감지할 수 있다. IO 디바이스들은 오디오 디바이스를 포함할 수도 있다. 오디오 디바이스는 음성 인식, 음성 복제, 디지털 기록, 및. 또는 전화 기능들과 같은, 음성-가능(voice-enabled) 기능들을 용이하게 하는 스피커 및/또는 마이크 로폰을 포함할 수도 있다. 다른 IO 디바이스들은 범용 직렬 버스(USB) 포트(들), 병렬 포트(들), 직렬 포 트(들), 프린터, 네트워크 인터페이스, 버스 브리지 (예를 들어, PCI-PCI 브리지), 센서(들)(예를 들어, 가속도 계, 자이로스코프, 자기력계(magnetometer), 광 센서, 나침반, 근접 센서 등과 같은 모션 센서) 또는 이들의 조 합을 더 포함할 수도 있다. 디바이스들은, 사진들 및 비디오 클립들을 녹화하는 것과 같은 카메라 기능들 을 용이하게 하기 위해 이용되는 고체촬상소자(charged coupled device, CCD) 또는 상보성 금속산화물 반도체 (complementary metal-oxide semiconductor, CMOS) 광학 센서와 같은 광학 센서를 포함할 수도 있는 이미징 처 리 서브 시스템(예를 들어, 카메라)을 더 포함할 수 있다. 특성 센서들은 센서 허브(도시되지 않은)를 통해 인 터커넥트에 연결될 수 있으며, 반면에, 키보드 또는 열 센서와 같은 다른 디바이스들은 시스템의 특정 구성 또는 설계에 따라 임베디드 컨트롤러(미도시)에 의해 제어될 수도 있다. 데이터, 애플리케이션들, 하나 이상의 운영 체제들과 같은 정보의 영구 저장을 제공하기 위해, 대용량 저장소 (mass storage)(미도시) 또한, 프로세서에 결합될 수도 있다. 다양한 실시예들에서, 시스템 응답성을 향 상시킬 뿐 아니라, 더 얇고 더 가벼운 시스템 설계가 가능하도록, 이러한 대용량 저장소는 솔리드 스테이트 디 바이스(solid state device, SSD)를 통해 구현될 수도 있다. 그러나, 다른 실시예들에서, 전원 차단 이벤트들 동안에 컨텍스트 상태(context state) 및 다른 기타 정보의 비-휘발성 저장이 가능하여 시스템 활동들의 재시작 에 빠른 전원 공급이 가능하도록 하는 SSD 캐시로서 작동하는 적은 양의 SSD 저장소를 가지는 하드 디스크 드라 이브(HDD)를 사용하여 대용량 저장소가 주로 구현될 수도 있다. 또한, 플래시 디바이스는 예를 들어, 직렬 주변 디바이스 인터페이스(SPI)를 통해 프로세서에 연결될 수도 있다. 이러한 플래시 디바이스는 시스템의 다 른 펌웨어뿐만 아니라, 기본 입/출력 소프트웨어(BIOS)를 포함하여 시스템 소프트웨어의 비-휘발성 저장을 제공 할 수도 있다. 저장 디바이스는 본 명세서에서 기술된 임의의 하나 이상의 방법론들 또는 기능들을 구현하는 명령들 또 는 소프트웨어의 하나 이상의 세트들(예를 들어, 모듈, 유닛, 및/또는 로직)이 저장된 컴퓨터-접근가능한 저장 매체(또한, 기기-판독 가능 저장 매체 또는 컴퓨터-판독 가능 매체라고도 하는)를 포함할 수도 있다. 처리 모듈/유닛/로직은 예를 들어, 도 1의 ML 서비스 모듈 또는 호스트 서버와 같은 전 술된 임의의 구성 요소들을 나타낼 수도 있다. 처리 모듈/유닛/로직은 데이터 처리 시스템, 메모리 및, 기기-접근가능한 저장 매체를 구성하기도 하는 프로세서에 의해 실행 동안 메모리 내에 그리고/또는 프로세서 내에 완전히 또는 적어도 부분적으로 존재할 수 있다. 처리 모듈/유닛/로직 은 추가로 네트워크 인터페이스 디바이스를 통해 네트워크를 통해 송신되거나 또는 수신될 수도 있다. 컴퓨터-판독 가능 저장 매체는 또한, 전술한 일부 소프트웨어 기능들을 영구적으로 저장하는데 사용될 수 도 있다. 컴퓨터-판독 가능 저장 매체가 예시적인 실시예에서 단일 매체인 것으로 도시되어 있지만, \"컴 퓨터-판독 가능 저장 매체\"라는 용어는 단일 매체 또는 하나 이상의 명령어들의 세트들을 저장하는 다중 매체 (예를 들어, 중앙 또는 분산 데이터베이스, 및/또는 관련된 캐시들 및 서버들)를 포함하는 것으로 간주되어야 한다. \"컴퓨터-판독 가능 저장 매체\"라는 용어는 또한, 기기에 의해 실행되는 명령들의 세트를 저장 또는 인코 딩할 수 있고, 기기가 본 발명의 방법론들 중 임의의 하나 이상을 수행하게 하는 임의의 매체를 포함하는 것으 로 간주되어야 한다. 따라서, \"컴퓨터-판독 가능 저장 매체\"라는 용어는 솔리드-스테이트 메모리, 및 광학 및 자기 매체, 또는 임의의 다른 비-일시적 기기-판독 가능 매체를 포함하지만 이에 제한되지는 않는다. 본 명세서에 기술된 처리 모듈/유닛/로직, 구성요소들 및 다른 특징들은 이산 하드웨어 구성 요소들 (discrete hardware components)로서 구현되거나 ASICS, FPGA, DSP 또는 유사한 디바이스들과 같은 하드웨어 구성 요소들의 기능에 통합될 수 있다. 추가적으로, 처리 모듈/유닛/로직은 하드웨어 디바이스 내에서 펌 웨어 또는 기능 회로로서 구현될 수 있다. 또한, 처리 모듈/유닛/로직은 하드웨어 디바이스들 및 소프트 웨어 구성요소들의 임의의 조합으로 구현될 수 있다.시스템이 데이터 처리 시스템의 다양한 구성 요소들로 도시되어 있지만, 구성 요소들을 상호 연결하는 임 의의 특정 아키텍처(architecture) 또는 방식을 나타내도록 의도되지 않았으며; 이러한 세부 사항들은 본 발명 의 실시예들과 밀접한 관련이 없음에 유의한다. 또한, 더 적은 구성 요소들 또는 아마도 더 많은 구성 요소들을 가지는 다른 데이터 처리 시스템들, 서버들, 모바일 폰들, 소형 컴퓨터들(handheld computers), 및/또는 네트워 크 컴퓨터들이 또한 본 발명의 실시예들과 사용될 수도 있음이 이해될 것이다. 전술한 상세한 설명들의 몇몇 부분들은 컴퓨터 메모리 내의 데이터 비트들에 대한 동작들의 알고리즘 및 상징적 표시들의 관점에서 제시되고 있다. 이러한 알고리즘적 설명들 및 표시들은 데이터 처리 분야의 당업자들이 그들 의 작업 내용을 다른 당업자들에게 가장 효과적으로 전달하기 위해 사용되는 방식들이다. 여기서, 알고리즘은 일반적으로, 원하는 결과를 도출하는 일관된 동작들의 시퀀스인 것으로 생각될 수 있다. 동작들은 이러한 물리 적 수량들의 물리적 조작들이 요구된다. 그러나, 이들 및 유사한 용어들은 모두 적절한 물리적 수량들과 관련되어야 하며, 이들 수량들에 적용되는 단지 편리한 레이블들일 뿐임을 명심해야 한다. 상기 논의로부터 명백하게 달리 구체적으로 언급되지 않는 한, 설명 전반에 걸쳐, 아래의 청구 범위들에 제시된 것과 같은 용어들을 이용하는 논의들은, 컴퓨터 시스템의 레지스터 들 및 메모리들 내의 물리적(전기적) 수량들로 표시된 데이터를 컴퓨터 시스템 메모리들 또는 레지스터들 또는 다른 그러한 정보 저장, 전송 또는 디스플레이 디바이스들 내의 물리적 수량들로 유사하게 표시되는 다른 데이 터로 조작 및 변환하는, 컴퓨터 시스템 또는 유사한 전자 컴퓨팅 디바이스의 작동 및 프로세스들을 의미하는 것으로 이해된다. 도면들에서 도시되는 기술들은 하나 이상의 전자 디바이스들에 저장되고 실행되는 코드 및 데이터를 사용하여 구현될 수 있다. 이러한 전자 디바이스들은 비-일시적 컴퓨터-판독 가능 저장 매체(예를 들어, 자기 디스크, 광 디스크, 랜덤 액세스 메모리, 읽기 전용 메모리, 플래시 메모리 디바이스, 위상 변경 메모리) 및 일시적 컴퓨터 -판독 가능 전송 매체(예를 들어, 전기, 광학, 음향 또는 기타 형태의 전파 신호(반송파, 적외선 신호, 디지털 신호와 같은))와 같은 컴퓨터-판독 가능 매체를 사용하여 코드 및 데이터를 저장하고 통신한다(네트워크를 통해 내부 및/또는 다른 전자 디바이스와). 전술한 도면들에 도시된 프로세스들 또는 방법들은 하드웨어(예를 들어, 회로, 전용 로직 등), 펌웨어, 소프트 웨어 (예를 들어, 비 일시적 컴퓨터 판독 가능 매체에 구현되는) 또는 이들의 조합을 포함하는 처리 로직에 의 해 수행될 수도 있다. 프로세스들 또는 방법들이 몇몇 순차적 동작들과 관련하여 위에서 설명되었음에도, 설명 된 동작들 중 몇몇은 다른 순서로 수행될 수도 있음을 이해해야 한다. 또한, 몇몇 동작들은 순차적이 아닌 병렬 로 수행될 수도 있다. 전술한 명세서에서, 본 발명의 실시예들은 특정 예시적인 실시예들을 참고하여 설명되었다. 다음의 청구 범위들 에 기재된 본 발명의 더 넓은 사상 및 범위를 벗어나지 않고 다양한 변형들이 이루어질 수 있음이 명백할 것이다. 따라서, 명세서 및 도면들은 제한적인 의미보다는 예시적인 의미로 간주되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2020-0054370", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 실시예들은 예시의 수단으로서 도시되고 유사한 참조번호가 유사한 요소들을 나타내는 첨부되는 도면 들에서의 도시들로 제한되지 않는다. 도 1은 일 실시예에 따라 네트워크 시스템(networked system)의 예시를 도시한 블록 다이어그램(block diagra m)이다. 도 2는 일 실시예에 따라 ML 서비스들 모듈의 예시를 도시한 블록 다이어그램이다. 도 3은 일 실시예에 따라 ML 서비스들을 제공하는 시스템을 도시한 블록 다이어그램이다. 도 4는 일 실시예에 따라 방법을 도시한 플로우 다이어그램(flow diagram)이다. 도 5는 일 실시예에 따라 방법을 도시한 플로우 다이어그램이다. 도 6은 일 실시예에 따라 데이터 처리 시스템(data processing system)을 도시한 블록 다이어그램이다."}
