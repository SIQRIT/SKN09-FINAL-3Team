{"patent_id": "10-2022-0042257", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0011857", "출원번호": "10-2022-0042257", "발명의 명칭": "자동화 머신 러닝을 위한 작업 스케줄링 방법", "출원인": "(주)뤼이드", "발명자": "김완수"}}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "단말이 AutoML(Automated Machine Learning)을 위한 작업을 스케줄링하는 방법에 있어서,상기 단말이 연결된 클러스터(cluster) 내의 1) 복수 개의 연산 장치가 요구되는 제1 작업 및 2) 하나의 연산장치가 요구되는 제2 작업의 비율을 설정하는 단계;설정된 1) 상기 비율 및 2) 상기 AutoML을 위한 제3 작업이 상기 복수 개의 연산 장치가 요구되는지 또는 상기하나의 연산 장치가 요구되는 지에 근거하여, 상기 클러스터에 상기 제3 작업을 할당하는 단계;사용자로부터 세션(session)의 할당 요청을 수신하는 단계;상기 제2 작업의 비율에 근거하여, 상기 세션의 할당 가능 여부를 검사하는 단계; 및상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 가능한 경우, 상기 제2 작업과 관련된 연산 장치에 상기세션을 할당하는 단계;를 포함하는 스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 비율을 설정하는 단계는상기 클러스터의 크기에 근거하여, 상기 제1 작업의 비율이 상기 제2 작업의 비율보다 크거나 같게 설정되는,스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 불가능한 경우, 상기 제1 작업과 연관되는 연산 장치에상기 세션을 할당하는 단계;를 더 포함하는, 스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 세션에 요구되는 자원(resource)에 근거하여, 상기 제1 작업을 종료하는 단계;를 더 포함하며,상기 제1 작업은 상기 자원과 같거나, 상기 자원보다 많은 자원을 요구하는, 스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 세션이 할당된 클러스터의 이용률을 모니터링하는 단계; 및공개특허 10-2023-0011857-3-상기 모니터링의 결과에 근거하여, 상기 이용률이 0인 클러스터의 세션을 종료하는 단계;를 더 포함하는, 스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,설정된 1) 상기 비율 및 2) 상기 AutoML을 위한 제4 작업이 상기 복수 개의 연산 장치가 요구되는지 또는 상기하나의 연산 장치가 요구되는 지에 근거하여, 상기 종료된 세션이 포함된 클러스터에 상기 제4 작업을 할당하는단계;를 더 포함하는, 스케줄링 방법."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "AutoML(Automated Machine Learning)을 위한 작업을 스케줄링하는 단말에 있어서,메모리;통신모듈; 및상기 메모리 및 상기 통신모듈을 기능적으로 제어하는 프로세서; 를 포함하고,상기 프로세서는상기 단말이 연결된 클러스터(cluster) 내의 1) 복수 개의 연산 장치가 요구되는 제1 작업 및 2) 하나의 연산장치가 요구되는 제2 작업의 비율을 설정하고, 설정된 1) 상기 비율 및 2) 상기 AutoML을 위한 제3 작업이 상기복수 개의 연산 장치가 요구되는지 또는 상기 하나의 연산 장치가 요구되는 지에 근거하여, 상기 클러스터에 상기 제3 작업을 할당하며, 사용자로부터 세션(session)의 할당 요청을 수신하고, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당 가능 여부를 검사하며, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 가능한 경우, 상기 제2 작업과 관련된 연산 장치에 상기 세션을 할당하는, 단말."}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 비율은 상기 클러스터의 크기에 근거하여, 상기 제1 작업의 비율이 상기 제2 작업의 비율보다 크거나 같게설정되는,"}
{"patent_id": "10-2022-0042257", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서,상기 프로세서는상기 세션이 할당된 클러스터의 이용률을 모니터링하고,상기 모니터링의 결과에 근거하여, 상기 이용률이 0인 클러스터의 세션을 종료하는, 단말."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 명세서에서, 단말이 AutoML(Automated Machine Learning)을 위한 작업을 스케줄링하는 방법에 있어서, 상기 단말이 연결된 클러스터(cluster) 내의 1) 복수 개의 연산 장치가 요구되는 제1 작업 및 2) 하나의 연산 장치가 요구되는 제2 작업 의 비율을 설정하고, 설정된 상기 비율에 근거하여, 상기 AutoML을 위한 제3 작업을 할당하며, 사용자로부터 세션(session)의 할당 요청을 수신하고, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당 가능 여부를 검사하며, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 가능한 경우, 상기 제2 작업 과 관련된 연산 장치에 상기 세션을 할당할 수 있다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 명세서는 멀티 GPU(Graphics Processing Unit) 사용 환경에서 AutoML(Automated Machine Learning) 트라이 얼(Trial)을 할당하기 위한 작업 스케줄링 방법 및 이를 위한 장치에 관한 것이다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "메타(Meta) 러닝은 주어진 데이터 및 환경 만으로 스스로 학습하는 인공지능 시스템을 의미한다. 메타 러닝을 통해, 인공지능 모델은 기존에 학습했던 정보 및 알고리즘을 새로운 문제에 적용시켜 해결할 수 있다. 메타 러닝 방식의 예로서, 자동화 머신 러닝(AutoML, Automated Machine Learning)은 기존 머신 러닝의 과정에 서 인간의 선택을 자동으로 선택하는 방법이다. 예를 들어, 자동화 머신 러닝은 하이퍼 파라미터 최적화(HPO, Hyper Parameter Optimization), Neural Architecture Search (NAS) 등에 적용될 수 있다. 이러한 자동화 머신 러닝의 목표는 주어진 과제에 대한 성능을 최대화하는 것이고, 인간의 선택에 비하여 보다 효율적으로 검색 범 위를 탐색하여, 성능 도달을 위해 소요되는 비용을 감소시키는 것이다. 보다 자세하게, 머신 러닝에 대한 데이터를 사용할 수 있도록 하기 위해, 전문가는 data pre-processing, feature engineering, feature extraction, 및 feature selection을 적용할 수 있다. 이러한 단계를 수행한 후, 전문가는 모델의 예측 성능을 최대화하기 위해 알고리즘을 선택하고 하이퍼 파라 미터의 최적화를 수행할 수 있다. AutoML은 전문가가 아닌 경우, 전술한 단계를 단순화할 수 있다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 명세서의 목적은, GPU Cluster를 보유한 시스템의 자원 효율을 향상시킬 방법을 제안한다. 또한, 본 명세서의 목적은, 사용되지 않는 유휴 자원을 모니터링하고, 자동으로 할당하여 AutoML 작업을 효율적 으로 동작시키는 방법을 제안한다. 본 명세서가 이루고자 하는 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급되지 않은"}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "또 다른 기술적 과제들은 이하의 명세서의 상세한 설명으로부터 본 명세서가 속하는 기술분야에서 통상의 지식 을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 명세서의 일 양상은, 단말이 AutoML(Automated Machine Learning)을 위한 작업을 스케줄링하는 방법에 있어 서, 상기 단말이 연결된 클러스터(cluster) 내의 1) 복수 개의 연산 장치가 요구되는 제1 작업 및 2) 하나의 연산 장치가 요구되는 제2 작업 의 비율을 설정하는 단계; 설정된 상기 비율에 근거하여, 상기 AutoML을 위한 제3 작업을 할당하는 단계; 사용자로부터 세션(session)의 할당 요청을 수신하는 단계; 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당 가능 여부를 검사하는 단계; 및 상기 제2 작업의 비율에 근거하여, 상기 세션의 할 당이 가능한 경우, 상기 제2 작업과 관련된 연산 장치에 상기 세션을 할당하는 단계; 를 포함할 수 있다. 또한, 상기 비율을 설정하는 단계는 상기 클러스터의 크기에 근거하여, 상기 제1 작업의 비율이 상기 제2 작업 의 비율보다 크거나 같게 설정될 수 있다. 또한, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 불가능한 경우, 상기 제1 작업과 연관되는 연산 장치에 상기 세션을 할당하는 단계; 를 더 포함할 수 있다. 또한, 상기 세션에 요구되는 자원(resource)에 근거하여, 상기 제1 작업을 종료하는 단계; 를 더 포함하며, 상 기 제1 작업은 상기 자원과 같거나, 상기 자원보다 많은 자원을 요구할 수 있다. 또한, 상기 클러스터의 이용률을 모니터링하는 단계; 및 상기 모니터링의 결과에 근거하여, 상기 이용률이 0인 클러스터의 세션을 종료하는 단계; 를 더 포함할 수 있다. 또한, 설정된 상기 비율에 근거하여, 상기 종료된 세션이 포함된 클러스터에 상기 AutoML을 위한 제4 작업을 할 당하는 단계; 를 더 포함할 수 있다. 본 명세서의 또 다른 일 양상은, AutoML(Automated Machine Learning)을 위한 작업을 스케줄링하는 단말에 있 어서, 메모리; 통신모듈; 및 상기 메모리 및 상기 통신모듈을 기능적으로 제어하는 프로세서;를 포함하고, 상기 프로세서는 상기 단말이 연결된 클러스터(cluster) 내의 1) 복수 개의 연산 장치가 요구되는 제1 작업 및 2) 하 나의 연산 장치가 요구되는 제2 작업의 비율을 설정하고, 설정된 상기 비율에 근거하여, 상기 AutoML을 위한 제3 작업을 할당하며, 사용자로부터 세션(session)의 할당 요청을 수신하고, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당 가능 여부를 검사하며, 상기 제2 작업의 비율에 근거하여, 상기 세션의 할당이 가능한 경우, 상기 제2 작업과 관련된 연산 장치에 상기 세션을 할당할 수 있다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 명세서의 실시예에 따르면, GPU Cluster를 보유한 시스템의 자원 효율을 향상시킬 수 있다. 또한, 본 명세서의 실시예에 따르면, 사용되지 않는 유휴 자원을 모니터링하고, 자동으로 할당하여 AutoML 작업 을 효율적으로 동작시킬 수 있다. 본 명세서에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 명세서가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0042257", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 명세서에 개시된 실시예를 상세히 설명하되, 도면 부호에 관계없이 동일하거 나 유사한 구성요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 이하의 설명 에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 명세서 작성의 용이함만이 고려되어 부여되거나 혼용 되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 또한, 본 명세서에 개시된 실시 예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 명세서에 개시된 실시예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부된 도면은 본 명세서에 개시된 실시예를 쉽게 이 해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명세서에 개시된 기술적 사상이 제한되지 않으며, 본 명세서의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소 들은 상기 용어들에 의해 한정되지는 않는다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함한다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되 어야 한다. 도 1은 본 명세서와 관련된 전자 기기를 설명하기 위한 블록도이다. 상기 전자 기기는 무선 통신부, 입력부, 센싱부, 출력부, 인터페이스부, 메모리 , 제어부 및 전원 공급부 등을 포함할 수 있다. 도 1에 도시된 구성요소들은 전자 기기를 구현 하는데 있어서 필수적인 것은 아니어서, 본 명세서 상에서 설명되는 전자 기기는 위에서 열거된 구성요소들 보 다 많거나, 또는 적은 구성요소들을 가질 수 있다. 보다 구체적으로, 상기 구성요소들 중 무선 통신부는, 전자 기기와 무선 통신 시스템 사이, 전자 기 기와 다른 전자 기기 사이, 또는 전자 기기와 외부서버 사이의 무선 통신을 가능하게 하는 하나 이상의 모듈을 포함할 수 있다. 또한, 상기 무선 통신부는, 전자 기기를 하나 이상의 네트워크에 연 결하는 하나 이상의 모듈을 포함할 수 있다. 이러한 무선 통신부는, 방송 수신 모듈, 이동통신 모듈, 무선 인터넷 모듈, 근거리 통신 모듈, 위치정보 모듈 중 적어도 하나를 포함할 수 있다. 입력부는, 영상 신호 입력을 위한 카메라 또는 영상 입력부, 오디오 신호 입력을 위한 마이크로폰 (microphone, 122), 또는 오디오 입력부, 사용자로부터 정보를 입력받기 위한 사용자 입력부(123, 예를 들어, 터치키(touch key), 푸시키(mechanical key) 등)를 포함할 수 있다. 입력부에서 수집한 음성 데이터나 이 미지 데이터는 분석되어 사용자의 제어명령으로 처리될 수 있다. 센싱부는 전자 기기 내 정보, 전자 기기를 둘러싼 주변 환경 정보 및 사용자 정보 중 적어도 하나를 센싱 하기 위한 하나 이상의 센서를 포함할 수 있다. 예를 들어, 센싱부는 근접센서(141, proximity sensor), 조도 센서(142, illumination sensor), 터치 센서(touch sensor), 가속도 센서(acceleration sensor), 자기 센 서(magnetic sensor), 중력 센서(G-sensor), 자이로스코프 센서(gyroscope sensor), 모션 센서(motion sensor), RGB 센서, 적외선 센서(IR 센서: infrared sensor), 지문인식 센서(finger scan sensor), 초음파 센 서(ultrasonic sensor), 광 센서(optical sensor, 예를 들어, 카메라(121 참조)), 마이크로폰(microphone, 122 참조), 배터리 게이지(battery gauge), 환경 센서(예를 들어, 기압계, 습도계, 온도계, 방사능 감지 센서, 열 감지 센서, 가스 감지 센서 등), 화학 센서(예를 들어, 전자 코, 헬스케어 센서, 생체 인식 센서 등) 중 적어도 하나를 포함할 수 있다. 한편, 본 명세서에 개시된 전자 기기는, 이러한 센서들 중 적어도 둘 이상의 센서에서 센싱되는 정보들을 조합하여 활용할 수 있다. 출력부는 시각, 청각 또는 촉각 등과 관련된 출력을 발생시키기 위한 것으로, 디스플레이부, 음향 출 력부, 햅팁 모듈, 광 출력부 중 적어도 하나를 포함할 수 있다. 디스플레이부는 터치 센서 와 상호 레이어 구조를 이루거나 일체형으로 형성됨으로써, 터치 스크린을 구현할 수 있다. 이러한 터치 스크린 은, 전자 기기와 사용자 사이의 입력 인터페이스를 제공하는 사용자 입력부로써 기능함과 동시에, 전 자 기기와 사용자 사이의 출력 인터페이스를 제공할 수 있다. 인터페이스부는 전자 기기에 연결되는 다양한 종류의 외부 기기와의 통로 역할을 수행한다. 이러한 인터페이스부는, 유/무선 헤드셋 포트(port), 외부 충전기 포트(port), 유/무선 데이터 포트(port), 메모 리 카드(memory card) 포트, 식별 모듈이 구비된 장치를 연결하는 포트(port), 오디오 I/O(Input/Output) 포트 (port), 비디오 I/O(Input/Output) 포트(port), 이어폰 포트(port) 중 적어도 하나를 포함할 수 있다. 전자 기 기에서는, 상기 인터페이스부에 외부 기기가 연결되는 것에 대응하여, 연결된 외부 기기와 관련된 적 절할 제어를 수행할 수 있다. 또한, 메모리는 전자 기기의 다양한 기능을 지원하는 데이터를 저장한다. 메모리는 전자 기기 에서 구동되는 다수의 응용 프로그램(application program 또는 애플리케이션(application)), 전자 기기 의 동작을 위한 데이터들, 명령어들을 저장할 수 있다. 이러한 응용 프로그램 중 적어도 일부는, 무선 통 신을 통해 외부 서버로부터 다운로드 될 수 있다. 또한 이러한 응용 프로그램 중 적어도 일부는, 전자 기기 의 기본적인 기능(예를 들어, 전화 착신, 발신 기능, 메시지 수신, 발신 기능)을 위하여 출고 당시부터 전 자 기기상에 존재할 수 있다. 한편, 응용 프로그램은, 메모리에 저장되고, 전자 기기 상에 설치 되어, 제어부에 의하여 상기 전자 기기의 동작(또는 기능)을 수행하도록 구동될 수 있다. 제어부는 상기 응용 프로그램과 관련된 동작 외에도, 통상적으로 전자 기기의 전반적인 동작을 제어 한다. 제어부는 위에서 살펴본 구성요소들을 통해 입력 또는 출력되는 신호, 데이터, 정보 등을 처리하거 나 메모리에 저장된 응용 프로그램을 구동함으로써, 사용자에게 적절한 정보 또는 기능을 제공 또는 처리 할 수 있다. 또한, 제어부는 메모리에 저장된 응용 프로그램을 구동하기 위하여, 도 1과 함께 살펴본 구성요소들 중 적어도 일부를 제어할 수 있다. 나아가, 제어부는 상기 응용 프로그램의 구동을 위하여, 전자 기기에 포함된 구성요소들 중 적어도 둘 이상을 서로 조합하여 동작시킬 수 있다. 전원공급부는 제어부의 제어 하에서, 외부의 전원, 내부의 전원을 인가받아 전자 기기에 포함된 각 구성요소들에 전원을 공급한다. 이러한 전원공급부는 배터리를 포함하며, 상기 배터리는 내장형 배터리 또는 교체가능한 형태의 배터리가 될 수 있다. 상기 각 구성요소들 중 적어도 일부는, 이하에서 설명되는 다양한 실시 예들에 따른 전자 기기의 동작, 제어, 또는 제어방법을 구현하기 위하여 서로 협력하여 동작할 수 있다. 또한, 상기 전자 기기의 동작, 제어, 또는 제 어방법은 상기 메모리에 저장된 적어도 하나의 응용 프로그램의 구동에 의하여 전자 기기 상에서 구현될 수 있다. 본 명세서에서 전자기기는 단말로 통칭될 수 있다. 도 2는 본 명세서의 일 실시예에 따른 AI 장치의 블록도이다. 상기 AI 장치는 AI 프로세싱을 수행할 수 있는 AI 모듈을 포함하는 전자 기기 또는 상기 AI 모듈을 포함하 는 서버 등을 포함할 수 있다. 또한, 상기 AI 장치는 도 1에 도시된 전자기기의 적어도 일부의 구성으 로 포함되어 AI 프로세싱 중 적어도 일부를 함께 수행하도록 구비될 수도 있다. 상기 AI 장치는 AI 프로세서, 메모리 및/또는 통신부를 포함할 수 있다. 상기 AI 장치는 신경망을 학습할 수 있는 컴퓨팅 장치로서, 서버, 데스크탑 PC, 노트북 PC, 태블릿 PC 등과 같은 다양한 전자 장치로 구현될 수 있다. AI 프로세서는 메모리에 저장된 프로그램을 이용하여 신경망을 학습할 수 있다. 특히, AI 프로세서(2 1)는 자동화 머신 러닝(AutoML) 모델을 생성할 수 있다. 한편, 전술한 바와 같은 기능을 수행하는 AI 프로세서는 범용 프로세서(예를 들어, CPU)일 수 있으나, 인공 지능 학습을 위한 AI 전용 프로세서(예를 들어, GPU, graphics processing unit)일 수 있다. 메모리는 AI 장치의 동작에 필요한 각종 프로그램 및 데이터를 저장할 수 있다. 메모리는 비 휘발 성 메모리, 휘발성 메모리, 플래시 메모리(flash-memory), 하드디스크 드라이브(HDD) 또는 솔리드 스테이트 드 라이브(SDD) 등으로 구현할 수 있다. 메모리는 AI 프로세서에 의해 액세스되며, AI 프로세서에 의 한 데이터의 독취/기록/수정/삭제/갱신 등이 수행될 수 있다. 또한, 메모리는 본 명세서의 일 실시예에 따 른 데이터 분류/인식을 위한 학습 알고리즘을 통해 생성된 신경망 모델(예를 들어, 딥 러닝 모델)을 저장할 수 있다. 한편, AI 프로세서는 데이터 분류/인식을 위한 신경망을 학습하는 데이터 학습부를 포함할 수 있다. 예를 들어, 데이터 학습부는 학습에 이용될 학습 데이터를 획득하고, 획득된 학습데이터를 딥러닝 모델에 적용함으로 써, 딥러닝 모델을 학습할 수 있다. 통신부는 AI 프로세서에 의한 AI 프로세싱 결과를 외부 전자 기기로 전송할 수 있다. 여기서 외부 전자 기기는 다른 단말, 서버를 포함할 수 있다. 한편, 도 2에 도시된 AI 장치는 AI 프로세서와 메모리, 통신부 등으로 기능적으로 구분하여 설 명하였지만, 전술한 구성요소들이 하나의 모듈로 통합되어 AI 모듈 또는 인공지능(AI) 모델로 호칭될 수도 있다. 머신 러닝(Machine Learning) 분야에서 하이퍼 파라미터 (Hyperparameter, HP)는 학습으로 결정되지 않으며 사 용자가 manual하게 정해줘야하는 값이다. 이러한, HP는 일반적으로 모델의 성능에 크고 작은 효과를 영향을 주 기 때문에 가장 효율적인 HP를 설정하면 더 높은 머신 러닝의 성능이 달성될 수 있다. 예를 들어, 효율적인 HP 를 찾는 과정 혹은 행위를 HP Search 혹은 HPO이라고 지칭될 수 있다. 이를 위한, 가장 일반적인 방법론은 연구자의 경험과 직관에 따라 HPO를 수동으로 변경하면서 HPO를 수행하는 Manual Search가 있다. 다만, Manual Search는 연구자의 인력이 필요하며, HPO 과정을 자동화할 수 없다는 단점 이 존재한다. 이러한 단점들을 보완하기 위해 Random Search, Grid Search, Bayesian Search와 같은 HPO를 자 동화할 수 있는 다양한 알고리즘들이 제안되었다. 그러나, 위의 알고리즘들은 일반적으로 하나의 HP Set에 대한 검증이 끝나야만 다른 HP Set을 검증할 수 있다. 즉, 위 알고리즘들은 순차적인 탐색을 수행하므로 동시에 여러 HP Set을 탐색할 수 없다. 위와 같은 문제점을보완하기 위해서 다양한 Parallel Search 알고리즘과 Scheduler들이 개발되었다. 예를 들어, Parallel Search는 많은 Computing Resource에서 여러개의 HP Set을 병렬적으로 탐색한다. Deep Learning의 경우 하나의 HP Set을 검증하는데 많은 시간이 소비되므로 불필요하거나 비효율적으로 보이는 HP Set의 학습은 조기 종료해야한다. 또 다른 예로서, Scheduler는 병렬적으로 여러 HP Set을 탐색하고 있는 Trial의 정보를 집계하여 비효율적인 HP Set일 가능성이 높은 HP Set의 학습을 조기 종료시켜 비교적 짧은 시간에 많은 HP Set을 탐색할 수 있도록 한다. 이러한 알고리즘들은 HyperOpt, Optuna, Ray Tune과 같은 다양한 Library로 제공될 수 있다. 일반적으로, 소프트웨어 공학에서는 Cloud Computing Resource를 많이 사용하고 있으나, Deep Learning 연구에 필요한 GPU를 Cloud에서 대여하여 사용하게 되면 매우 비싼 비용을 지불해야한다. 그렇기 때문에 많은 연구 기 업들은 연구 목적으로 Cloud GPU를 사용하는 대신 On-Premise GPU Server를 구성하여 연구에 활용하고 있다. 다만, 연구 목적으로만 사용되는 GPU Cluster의 경우에는 늦은 저녁 또는 주말과 같은 업무 이외의 시간에는 활 용되지 않아 매우 많은 유휴 자원이 발생한다. 기존 시스템은 이러한 유휴 자원을 인식하고 활용할 수 있는 방 법이 없기 때문에 보유한 자원들이 낭비될 수 있다. 예를 들어, RayTune, Optuna, HyperOpt와 같은 기존의 HPO Library들은 모두 Parallel Search를 지원하기에 Large Scale Search 가능하다. 그러나 이 Library들은 탐색 시작 이전에 임의로 지정한 Resource 들만을 사용 하기 때문에 탐색 도중 Scale In / Scale Out이 불가능하다. 따라서, 보유한 Computing Resource에 유휴 자원이 발생하더라도 이를 즉시 활용할 할 수 없다. 예를 들어, Parallel Search에서 가장 효과적인 알고리즘중 하나인 Population Based Training(PBT) 계열 알고리즘은 동작 중인 HPO 중 일부만 중지하는 것도 불가능 하기 때문에 연구자가 특정 Resource를 필요로 할 때 즉시 할당시킬 수 없다. 이를 해결하기 위해서 본 명세서에서는 On-Premise GPU Cluster 에서 Scale In / Scale Out 을 유연 성 있게 가능하도록 하며 효율적인 HPO 탐색을 할 수 있는 방법을 제안한다. 도 3은 본 명세서에 적용될 수 있는 머신 러닝 절차의 예시이다. 도 3을 참조하면, AutoML은 머신 러닝 절차를 수행할 때마다 절차가 되풀이되면서 발생하는 비효율적인 작업을 최대한 자동화하여 생산성과 효율을 높이기 위한 머신 러닝 방식이다. AutoML은 머신 러닝 절차의 다양한 절차 들을 대상으로 할 수 있다. 예를 들어, AutoML은 데이터 전처리, feature engineering, 모델 선택 및 결과 분석 등의 절차들을 자동화할 수 있다. 도 4는 본 명세서가 적용될 수 있는 스케줄링 방법의 예시이다. 본 명세서에서 단말은 \"유휴 자원을 인식하고 동작 시킨다\" 라는 목적과 \"동작하는 자원을 즉시 Scale In 할 수 있도록 한다\"라는 두 가지 목적을 만족시키기 위해, 프로세서 상에서 동작하는 작업 스케줄링을 수행하기 위한 스케줄러 및 클러스터의 이용률을 모니터링하기 위한 모니터를 포함할 수 있다. 예를 들어, 전술한 동작이라는 의미는 HPO 과 Feature Engineering, Ensemble Search 와 같은 다양한 AutoML 기술을 포함하는 작업들을 의미 할 수 있다. 도 4를 참조하면, 단말은 하나 이상의 연산 장치(예를 들어, GPU)와 연결되어, 스케줄러를 통해, 연산 장치에 할당될 수 있는 작업을 스케줄링하고, 모니터를 통해, 각 연산 장치의 상태를 모니터링할 수 있다. 단말은 클러스터의 Multi 작업 및 Single 작업 비율을 설정한다(S410). 예를 들어, Multi 작업은 Multi(복수 개 의) 연산 장치가 요구되는 Trial(Multi 연산 장치 Trial), Single 작업은 Single(하나의) 연산 장치가 요구되 는 Trial(Single 연산 장치 Trial)를 의미할 수 있다. 본 명세서에서 User Session의 효율적인 할당을 위해 Single 작업은 전체 할당될 수 있는 작업의 일정 비율 이 상으로 설정되어야한다. 예를 들어, 단말에 1개의 연산 장치 Resource가 필요한 User Session을 할당하고자 하 는 요청이 입력된 경우, 단말은 클러스터 상에 있는 모든 AutoML Trial이 Multi 연산 장치를 사용하고, 그 Multi 연산 장치 Trial 중에 가장 적은 수의 연산 장치를 사용하는 AutoML Trial이 8개의 연산 장치를 사용하고 있음을 확인할 수 있다. 단말은 User Session을 할당하기 위해, 8개의 연산 장치를 사용하고 있는 해당 AutoML Trial을 종료시킬 수 있다. 이 경우, 1개의 연산 장치에 User Session이 할당되게 되므로, 7개의 유휴 연산 장치가 추가적으로 발생하게 된 다. 따라서, 이러한 스케줄링 방법은 비효율적이다.만일, 사용자로부터 5개의 연산 장치가 요구되는 User Session에 연산 장치를 할당하고자 하는 요청이 들어올 경우, 단말은 1) 1개의 Single 연산 장치의 AutoML Trial 및 2) 3개의 연산 장치가 요구되는 Multi 연산 장치 Trial로서, AutoML Trial이 펜딩(pending) 중이고, 3) 5개의 연산 장치가 요구되는 Trial은 없음을 확인할 수 있다. 이 경우, 단말은 연산 장치의 할당을 위해, 1(Single 연산 장치의 AutoML Trial) + 1(유휴 연산 장치) + 3(Multi 연산 장치의 Trial)과 같이 조합의 경우의 수를 늘려갈 수 있으며, 유휴 연산 장치를 최소화하여, 기존 의 AutoML Trial을 종료하고 User Session을 할당할 수 있는 확률을 증가시킬 수 있다. 따라서, 본 명세서에서 단말은 일정비율 이상의 Single 작업을 위한 연산 장치의 수를 유지함으로써, User Session의 할당을 위한 Interupt가 발생했을 시에 더 많은 조합의 가능성을 만들고 효율적인 연산 장치의 사용 을 가능하게 할 수 있다. 보다 자세하게, Multi 작업 및 Single 작업 비율의 설정을 위해, 단말은 하나 이상의 연산 장치가 포함된 클러 스터의 크기를 고려할 수 있다. 예를 들어, 클러스터의 크기가 작을수록 Single 연산 장치 Trial의 비율을 50% 에 수렴시키고, 클러스터의 크기가 클수록 Single 연산 장치 Trial의 비율을 그보다 더 낮은 비율로 유지시킬 수 있다. 이를 통해, 클러스터가 작더라도 Single 연산 장치의 절대적인 수가 특정 임계값 이상이라면, 전술한 효율적인 연산 장치 사용이 가능하다. 다만, 특정 임계값 이상으로 Single 연산 장치 Trial의 수가 많아진다고 하여, 전술한 효과가 선형적으로 증가되지 않으므로. 비율은 Cluster에 크기에 근거하여, 특정 임계값을 갖을 수 있다. 단말은 설정된 비율에 근거하여, 작업을 할당한다(S420). 예를 들어, 단말은 클러스터의 크기에 근거하여, 설정 된 특정 임계값에 따라, Multi 작업 및 Single 작업의 비율을 설정하고, 이러한 비율에 따라, 작업을 할당할 수 있다. 이러한 작업은 AutoML Trial을 포함한다. 만일, 설정된 비율에 따라 작업 할당이 불가능한 경우, 비율을 재설정하거나, 할당이 불가능한 작업은 Global Queue에 삽입 후, 후술되는 모니터링 동작을 통해, 다시 할당될 수 있다. 보다 자세하게, Multi 작업은 단순히 Distributed Data Parallel (DDP)와 같은 Multi 연산 장치를 이용한 Training 만을 말하는 것이 아니라 Population Based Training(PBT)와 같이 다중 연산 장치를 사용하는 상황에 서 유기적으로 얽혀있는 시스템들도 포함될 수 있다. 즉, Multi 작업은 하나의 연산 장치에 할당된 작업을 취소 한다면 동일한 작업이 할당된 다른 연산 장치의 연산도 연쇄적으로 취소되어야하는 작업을 말한다. 단말은 사용자로부터 세션 할당 요청을 수신한다(S430). 예를 들어, 세션 할당 요청은 당해 세션을 동작하는 데 필요한 resource의 정보(예를 들어, 연산 장치의 수)가 포함될 수 있다. 단말은 세션 할당 요청의 응답으로서, Single 작업 비율에 근거하여, 세션 할당 가능여부 검사한다(S440). 예를 들어, 단말은 Single 작업 비율 내에서, 세션 할당 요청의 resource를 커버할 수 있는 지를 확인한다. 단말은 세션 할당 가능여부 검사에 근거하여, 세션을 할당한다(S450). 예를 들어, 단말은 Single 작업 비율 내 에서, 세션 할당 요청의 resource가 커버될 수 있다면, 필요할 경우, 진행 중인 Single 작업들을 저장하고, Global Queue에 삽입한 뒤, Single 작업 비율 내의 resource에 세션 할당을 수행할 수 있다. 즉, 단말은 진행 중인 Single 작업보다 세션 할당 요청에 우선하여 resource를 할당할 수 있다. 만일, 세션 할당 가능여부 검사 결과, Single 작업 비율 내에서 세션 할당 요청의 resource를 커버할 수 없다면, 단말은 진행 중인 Multi 작업에서 세션 할당 요청의 resource와 같거나, 가장 가까우며 더 많은 resource를 사용하는 Multi 작업을 종료하고, 저장하며, Global Queue에 삽입한 뒤, 해당 resource에 세션을 할당시킬 수 있다. 만일, Multi 작업이 종료되고, 세션 할당 뒤에 유휴 연산 장치가 있다면, 해당 유휴 연산 장 치의 resource로 커버될 수 있는 Global Queue에 포함된 Single 작업이 추가적으로 할당될 수 있다. 도 5는 본 명세서가 적용될 수 있는 모니터링 방법의 예시이다. 도 5를 참조하면, 예를 들어, 단말은 모니터를 통해, 클러스터의 이용률을 모니터링할 수 있다. 단말은 클러스터의 이용률을 모니터링한다(S510). 예를 들어, 단말은 연결된 클러스터의 이용률을 모니터링할 수 있다. 보다 자세하게, 단말은 클러스터의 연산 장치들에서 동작하고 있는 세션의 resource에 근거하여, 클러 스터의 이용률을 모니터링할 수 있다. 세션은 전술한 Single 작업 또는 Multi 작업일 수 있다. 단말은 모니터링의 결과에 근거하여, 세션을 종료한다(S520). 예를 들어, 단말은 이용률이 0 인 클러스터의 세 션을 종료할 수 있다. 보다 자세하게, 단말은 동작하고 있는 모든 세션들의 resource를 모니터링하고, 만일 세 션들이 사용하는 다수의 연산 장치 중 하나라도 이용률이 특정 시간동안 0 이라면 해당 세션의 Container를 중 단한 뒤, Image 화 시켜 저장하고 세션을 종료시킬 수 있다. 단말은 종료된 세션이 포함된 클러스터에 작업을 할당한다(S530). 예를 들어, 단말은 종료된 세션이 사용하던 resource에 Single 및 Multi 작업의 비율을 계산하여, AutoML Trial을 할당할 수 있다. 이를 통해, 단말은 사 용되지 않는 유휴 resource를 자동으로 할당하여 AutoML 작업을 동작시킬 수 있다. 본 명세서에서, 단말은 넓은 Search Space를 탐색하면서 연구자가 개발한 Baseline 모델 성능을 향상시키기 위 한 작업을 항상 수행할 수 있다. 또한, 연구자가 resource를 활용하지 않는 시간에도 유휴 자원을 발생시키지 않으며 유의미한 연구 자원이 항상 활용될 수 있다. 이를 통해 On-Premise GPU Cluster를 보유한 조직의 자원 효율을 향상시킬 수 있다. 전술한 본 명세서는, 프로그램이 기록된 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨 터가 읽을 수 있는 매체는, 컴퓨터 시스템에 의하여 읽혀 질 수 있는 데이터가 저장되는 모든 종류의 기록장치 를 포함한다. 컴퓨터가 읽을 수 있는 매체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있으며, 또한 캐리어 웨이브(예를 들어, 인터넷을 통한 전송)의 형태로 구현되는 것도 포함한다. 따라서, 상기의 상세한 설명은 모든 면에서 제한적으로 해석되어서는 아니되고 예시적인 것으로 고려되어야 한다. 본 명세서의 범위는 첨부된 청구항의 합리적 해석에 의해 결정되어야 하고, 본 명세서의 등가적 범위 내에서의 모든 변경은 본 명세 서의 범위에 포함된다. 또한, 이상에서 서비스 및 실시 예들을 중심으로 설명하였으나 이는 단지 예시일 뿐 본 명세서를 한정하는 것이 아니며, 본 명세서가 속하는 분야의 통상의 지식을 가진 자라면 본 서비스 및 실시 예의 본질적인 특성을 벗어 나지 않는 범위에서 이상에 예시되지 않은 여러 가지의 변형과 응용이 가능함을 알 수 있을 것이다. 예를 들어, 실시 예들에 구체적으로 나타난 각 구성 요소는 변형하여 실시할 수 있는 것이다. 그리고 이러한 변형과 응용에 관계된 차이점들은 첨부한 청구 범위에서 규정하는 본 명세서의 범위에 포함되는 것으로 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5"}
{"patent_id": "10-2022-0042257", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 명세서와 관련된 전자 기기를 설명하기 위한 블록도이다. 도 2는 본 명세서의 일 실시예에 따른 AI 장치의 블록도이다. 도 3은 본 명세서에 적용될 수 있는 머신 러닝 절차의 예시이다. 도 4는 본 명세서가 적용될 수 있는 스케줄링 방법의 예시이다. 도 5는 본 명세서가 적용될 수 있는 모니터링 방법의 예시이다. 본 명세서에 관한 이해를 돕기 위해 상세한 설명의 일부로 포함되는, 첨부 도면은 본 명세서에 대한 실시예를 제공하고, 상세한 설명과 함께 본 명세서의 기술적 특징을 설명한다."}
