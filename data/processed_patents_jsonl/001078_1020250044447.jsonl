{"patent_id": "10-2025-0044447", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0055453", "출원번호": "10-2025-0044447", "발명의 명칭": "공중권 기반 운항 중 네트워크 단절 비행체의 안전 운항 시스템 및 방법", "출원인": "강성운", "발명자": "강성운"}}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "공중권 기반 운항 중 네트워크 단절 비행체의 안전 운항 시스템에 있어서,조작부(500)가 네트워크 단절 발생 시 경로 데이터를 독립적으로 저장 및 유지하며, 블록체인 서버(300) 및 검증부(200)와의 연계를 통해 경로 데이터의 무결성을 검증하고, 네트워크 복구 후 안전하게 동기화할 수 있도록구성되는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,조작부(500)가 경로 데이터를 저장할 때 Merkle Tree 기반의 검증 방식을 사용하여 데이터의 변조 여부를 검증하고, 블록체인 서버(300)에 Merkle Root를 저장하여 데이터의 무결성을 유지하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서,조작부(500)가 경로 데이터를 TLS/SSL 프로토콜로 암호화하여 블록체인 서버(300)로 전송하며, 인증 토큰을 사용하여 데이터 접근을 제한하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 하나에 있어서,조작부(500)가 머신러닝 기반 경로 탐색 알고리즘을 사용하여 최적 경로를 자동으로 탐색하고, 장애물 정보를분석하여 실시간으로 경로를 조정할 수 있는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중 어느 하나에 있어서,조작부(500)가 네트워크 단절 시 경로 데이터를 로컬 저장소에 암호화하여 저장하고, 네트워크 복구 후 블록체인 서버(300)와의 데이터 동기화를 통해 경로 데이터의 무결성을 확인하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제5항 중 어느 하나에 있어서,조작부(500)가 블록체인 서버(300)와의 연계로 P2P 방식 및 중앙 서버 경유 방식을 병행하여 경보를 발송하고,경로 데이터의 안전성을 확보하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항 내지 제6항 중 어느 하나에 있어서,공개특허 10-2025-0055453-3-조작부(500)가 경로 데이터를 실시간으로 분석하여, 다수의 비행체 간 경로 충돌 가능성을 평가하고 회피 경로를 자동으로 설정하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항 내지 제7항 중 어느 하나에 있어서,조작부(500)가 블록체인 서버(300)에 경로 데이터를 기록하고, 다른 비행체들과의 경로 충돌 위험을 분석하여최적 경로를 자동으로 설정하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항 내지 제8항 중 어느 하나에 있어서,조작부(500)가 블록체인 서버(300)와의 연계를 통해 모든 비행체 간의 경로 데이터를 실시간으로 분석하고, 최신 경로 정보로 자동으로 동기화하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제9항 중 어느 하나에 있어서,조작부(500)가 경로 데이터를 블록체인 서버(300)와 검증부(200)에 의해 실시간으로 검증하고, 경로 데이터의무결성을 지속적으로 유지하는 것을 특징으로 하는,공중권 기반 운항 중 네트워크 단절 비행체의 독립적 안전 운항 시스템."}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 네트워크 단절 상황에서도 안전하게 운항을 지속할 수 있는 공중권 기반 운항 중 네트워크 단절 비행 체의 안전 운항 시스템 및 방법에 관한 것이다. 조작부는 경로 데이터를 로컬 저장소에 안전하게 저장하고, 블록체인 서버 및 검증부와 연계하여 데이터 무결성을 검증하며 네트워크 복구 후 자동으로 동기화를 수행한다. 또한, 머신러닝 기반 경로 탐색 알고리즘을 통해 경로 충돌 가능성을 분석하고 회피 경로를 설정하여 안전성을 강화한다. 본 발명은 경로 유지, 경보 발송, 데이터 동기화, 경로 충돌 분석 및 회피 설정을 통합적으 로 수행함으로써 안전하고 효율적인 운항을 제공한다."}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 공중권 기반의 비행체 운항 시스템 및 방법에 관한 것으로, 특히 네트워크 단절 시 발생할 수 있는 안전 문제를 해결하기 위한 시스템 및 방법을 제공하는 기술에 관한 것이다. 더 구체적으로는, 본 발명은 공중 권 기반의 비행체 운항 중 네트워크가 단절된 경우에도 안전하게 비행 경로를 유지하고, 다른 비행체와의 충돌 을 방지하며, 네트워크 복구 후 데이터를 무결하게 동기화할 수 있는 기술적 수단을 제공한다. 또한, 본 발명은 2022년 2월 4일 출원된 원출원(출원번호 KR1020220014502)의 기술사상을 이은 선출원(출원번호 KR1020250034926)을 확장시킨 응용발명으로서, 기존의 공중권 관리 및 운항 시스템을 개선하고 안전 운항을 보 장하기 위한 기술적 진보를 포함한다."}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "도심 항공 이동체(UAM, Urban Air Mobility) 및 드론의 상용화가 급속도로 진행되면서, 기존의 지상 교통망을 대체하거나 보완할 수 있는 공중 교통 시스템이 주목받고 있다. 이러한 이동체들은 주로 수직 이착륙(VTOL, Vertical Take-Off and Landing) 기능을 갖추고 있어 도심 내 교통 혼잡을 해소하거나, 긴급 구조 및 물류 배송 등의 목적으로 활용될 수 있다. 그러나 도심 내 다수의 비행체가 동시에 운항할 경우, 공중권(Air Rights)에 대 한 충돌 및 침해 문제, 비행 경로 설정의 복잡성, 그리고 네트워크 장애 발생 시 안전성을 확보하는 문제 등이 발생할 수 있다. 특히, 공중권은 개별 건물 소유자, 정부 기관 및 민간 기업에 의해 소유 또는 관리될 수 있으 며, 특정 시간대에 특정 공중권을 점유하는 경우가 많다. 기존의 공중권 기반 비행체 운항 시스템은 블록체인 서버, 검증부, 및 조작부를 포함하여 공중 권 데이터의 실시간 검증, 경로 설정, 충돌 회피 기능을 제공하는 방식으로 개발되었다. 이러한 시스템은 실시 간으로 공중권 점유 상태를 파악하고, 블록체인 기반의 승인 절차를 통해 권리 침해를 방지하며 안전한 경로 설 정을 돕는다. 하지만, 기존 시스템에서는 네트워크 장애 발생 시 비행체의 안전 운항을 보장하기 어려운 문제가 있다. 네트워크 단절이 발생하면 비행체가 중앙 서버와의 통신이 단절되어, 실시간 경로 수정 및 검증 절차가정상적으로 이루어지지 않을 수 있다. 특히, 블록체인 기반의 공중권 관리 시스템을 활용하는 경우, 네트워크 단절로 인해 기존 승인 데이터가 동기화되지 않거나 경로 설정이 지연되는 문제가 발생할 수 있다. 예를 들어, 도심 항공 이동체(UAM)가 네트워크 장애로 인해 중앙 서버와의 연결이 끊어지면, 기존 설정된 경로를 유지할지, 대체 경로를 탐색할지에 대한 판단을 독립적으로 수행해야 한다. 또한, 네트워크 단절 비행체가 다른 비행체와 의 충돌을 방지하기 위해 해당 경로 정보를 실시간으로 전달하지 못할 경우, 전체 시스템의 안전성이 저하될 수 있다. 기존 시스템의 한계를 극복하기 위해서는, 네트워크 단절 상황에서도 비행체가 안전하게 비행할 수 있는 방법과 시스템이 필요하다. 또한, 네트워크 복구 시 데이터 무결성을 보장하며 정확하게 동기화하는 기술적 수단도 요 구된다. 따라서 본 발명은, 기존의 공중권 기반 운항 시스템을 개선하여 네트워크 단절 시 발생할 수 있는 안전 문제를 효과적으로 해결할 수 있는 방법과 시스템을 제공하는 것을 목적으로 한다. 이 발명은 2022년 2월 4일 출원된 원출원(출원번호 KR1020220014502) 및 선출원(출원번호 KR1020250034926)을 기반으로 하며, 해당 기술사 상을 확장하여 응용한 발명이다. 선행기술문헌 특허문헌 (특허문헌 0001) KR1020220014502 (특허문헌 0002) KR1020230085428 (특허문헌 0003) KR1020250034926"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는 다음과 같다: 1. 네트워크 단절 상황에서의 안전 운항 문제 도심 항공 이동체(UAM) 및 드론은 공중권(Air Rights)을 기반으로 한 경로 설정을 통해 운항을 수행한다. 하지 만 네트워크 단절이 발생하면 기존의 중앙 서버(블록체인 서버) 및 검증부와의 통신이 끊어지게 되어, 경로 설 정 및 수정 기능이 제한된다. 예를 들어, 특정 비행체가 비행 중 네트워크 장애로 인해 통신이 단절되었다고 가 정하자. 기존 시스템에서는 해당 비행체가 독립적으로 경로를 유지할 방법이 충분히 마련되지 않았기 때문에, 공중권 침해나 충돌 위험이 발생할 가능성이 크다. 이는 마치 도로 상에서 자율주행 차량이 GPS 신호를 잃어버 린 상황과 유사하다. 만약 자율주행 차량이 신호 없이 계속 주행한다면, 예상치 못한 충돌 사고가 발생할 가능 성이 높다. 비행체의 경우, 고도 및 속도가 높기 때문에 이러한 문제는 더욱 심각해질 수 있다. 따라서, 본 발 명은 네트워크 단절 상황에서도 비행체가 안전하게 비행할 수 있도록 기존 경로 데이터를 로컬 저장소에 저장하 여 경로 유지 및 운항을 지속할 수 있는 방법을 제공하는 것을 목표로 한다. 2. 네트워크 단절 비행체의 경로 정보 공유 및 경고 문제 네트워크 단절이 발생하면, 해당 비행체의 경로 정보를 다른 비행체들에게 실시간으로 전달하기 어려워진다. 특 히, 다수의 비행체가 동일 공중권을 공유하며 운항하는 경우, 네트워크 단절 비행체의 존재를 다른 비행체가 인 지하지 못한다면 충돌 위험이 크게 증가한다. 예를 들어, 빌딩 숲 사이를 비행 중인 드론이 네트워크 단절로 인 해 중앙 서버와의 통신이 끊어졌다고 가정하자. 이 드론은 설정된 경로를 계속 유지하더라도, 주변의 다른 드론 들이 그 존재를 인식하지 못할 경우 충돌 사고가 발생할 수 있다. 이는 마치 고속도로에서 차량이 차선 변경을 하려는 순간, 주변 차량들에게 신호를 보내지 않는 상황과 같다. 주변 차량들이 이를 인지하지 못하면 사고가 발생할 가능성이 높다. 따라서, 본 발명은 블록체인 서버 및 검증부가 네트워크 단절 비행체를 감지 하고, 해당 경로 정보를 다른 비행체들에게 실시간으로 전송하는 방법을 제공하는 것을 목표로 한다. 이를 통해 충돌 위험을 사전에 방지하고, 네트워크 단절 상황에서도 비행체 간의 안전성을 유지할 수 있다. 3. 네트워크 복구 후 데이터 동기화 문제 네트워크 단절이 복구되었을 때, 해당 비행체가 기존 경로 데이터를 블록체인 서버 및 검증부와 정확 히 동기화하지 못한다면, 데이터의 무결성이 훼손될 수 있다. 예를 들어, 네트워크 단절 동안 경로가 변경되었 거나, 다른 비행체와의 충돌을 회피하기 위해 경로 수정이 발생했다면, 이를 중앙 시스템에 정확히 반영하지 못 할 경우 문제가 발생할 수 있다. 이 상황은 마치 다수의 사람들로부터 문서 편집 권한을 동시에 받았을 때, 네 트워크 문제가 발생하여 일부 편집 내용이 누락되거나 중복되는 경우와 유사하다. 데이터의 일관성을 보장하기 위해서는 네트워크 복구 후 정확한 동기화 절차가 필수적이다. 따라서, 본 발명은 네트워크 복구 시, 조작부 가 블록체인 서버와의 데이터 동기화를 정확하게 수행하도록 하며, Merkle Tree 기반의 해시 검증 방 식을 통해 데이터 무결성을 보장하는 방법을 제공하는 것을 목표로 한다. 4. 회피 설계를 방지하기 위한 포괄적 권리범위 설정 문제 기존 기술은 특정 시스템 구성이나 방법에만 초점을 맞추어 권리범위를 설정하는 경우가 많아, 일부 기술 요소 를 변형하거나 대체하는 방식으로 회피 설계가 이루어질 수 있었다. 예를 들어, 조작부 대신 다른 명칭의 장치를 사용하거나, 블록체인 서버를 단일 중앙 서버로 교체하는 경우 등이다. 따라서, 본 발명은 시스템과 방 법을 모두 포괄하는 청구항 세트를 구성하여 회피 설계 가능성을 최소화하는 것을 목표로 한다. 특히, 조작부 , 블록체인 서버, 검증부를 포함하여 네트워크 단절 발생 시 경로 유지 및 경로 정보 공유 기능 을 구현하는 모든 방법을 포함하도록 포괄적인 권리범위를 설정한다."}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명은 공중권 기반 운항 중 네트워크 단절 비행체의 안전 운항을 보장하기 위해, 다음과 같은 기술적 수단 을 제공한다. 본 발명은 시스템 및 방법을 모두 포함하며, 조작부, 블록체인 서버, 검증부 등의 구성 요소가 협력하여 네트워크 단절 상황에서도 안전하게 운항을 지속할 수 있도록 설계되었다. 1. 네트워크 단절 발생 시의 경로 유지 및 운항 지속 기능 조작부는 네트워크 단절 발생 시, 사전에 설정된 경로 데이터를 로컬 저장소에 암호화하여 안전하게 저장 한다. 네트워크가 단절되면 해당 비행체는 외부와의 통신 없이 독립적으로 설정된 경로를 유지하며 비행을 지속 한다. 조작부는 네트워크 단절 발생 시, 사전 설정된 경로 데이터를 JSON, XML 등의 데이터 포맷으로 저장 하며, TLS/SSL 방식으로 암호화하여 보관한다. 경로 유지 동안 비행체는 설정된 경로의 예상 도착 시점까지 비 행을 지속하며, 일정 시간 이상 경로 수정 요청이 없는 경우 기존 경로를 유지하도록 설계된다. 예를 들어, 드 론이 네트워크 단절 상황에서 목표 지점까지 도달해야 할 경우, 경로 데이터를 안전하게 보존하고 독립적으로 운항을 지속할 수 있다. 2. 네트워크 단절 비행체의 경로 정보 공유 및 경고 기능 블록체인 서버 및 검증부는 네트워크 단절 비행체의 존재를 인식하고, 해당 비행체의 경로 정보를 타 비행체들에게 경보로 전송한다. 네트워크 단절 비행체가 발생하면, 블록체인 서버는 Redis 또는 Memcached 와 같은 캐시 시스템을 활용하여 경보 메시지를 신속히 전송한다. 경보 메시지는 JSON 또는 XML 데이터 포맷으 로 구성되며, 경로 정보, 예상 도착 시점, 경로 유지 여부 등의 정보를 포함한다. 예를 들어, 네트워크 단절 비 행체가 특정 고도에서 비행 중일 때, 인근의 다른 비행체들은 경보 메시지를 수신하여 경로를 자동으로 조정하 거나 회피할 수 있다. 경로 정보는 HTTP/HTTPS 프로토콜을 통해 전송되며, WebSocket을 이용하여 실시간 통신을 유지할 수 있다. 3. 네트워크 복구 후 데이터 동기화 및 무결성 검증 기능 네트워크가 복구되었을 때, 조작부는 블록체인 서버와의 데이터 동기화를 정확하게 수행하며, Merkle Tree 기반의 해시 검증 방식을 통해 데이터의 무결성을 확인한다. 조작부는 네트워크 복구 시, 블록체인 서버와의 데이터 동기화를 위해 RESTful API를 활용하여 최신 데이터를 요청한다. 데이터 무결성 검증은 Merkle Tree 기반의 해시 값을 비교하여 수행되며, 변경된 경로 데이터가 포함된 경우 이를 자동으로 블록체인 서버에 반영한다. 예를 들어, 네트워크 단절 중에 경로가 수정되었다면, 이를 블록체인 서버에 정확 히 반영하고 모든 관련 노드들과 동기화한다. 데이터 동기화 과정은 TCP/IP 기반의 통신을 사용하며, API 요청 방식(GET, POST) 및 응답 방식(200 OK, 404 Not Found 등)을 포함한다. 4. 경로 조정 및 자동 회피 기능 타 비행체가 네트워크 단절 비행체의 경로를 인지하고, 경로 충돌 가능성을 자동으로 분석하여 회피 경로를 설 정할 수 있다. 블록체인 서버는 타 비행체로부터의 경로 요청을 수신하고, 경로 충돌 여부를 판단하여 경고 메시지를 발송한다. 머신러닝 모델(예: 인공신경망, 강화학습, 서포트 벡터 머신 등)을 사용하여 경로 변경 여부를 자동으로 판단할 수 있다. 경로 탐색 알고리즘(A*, Dijkstra 등)을 활용하여 대체 경로를 자동으로 설정 한다. 예를 들어, 드론이 네트워크 단절 상태에서 기존 경로를 유지하고 있을 때, 인근 비행체는 경로 충돌 가 능성을 예측하여 회피 경로를 자동으로 설정할 수 있다. 5. 회피 설계 방지 및 포괄적 권리 범위 설정 본 발명은 시스템 및 방법을 모두 포괄하며, 구성 요소의 변경이나 대체를 포함하더라도 동일한 기능을 수행하 는 경우 권리범위에 포함될 수 있도록 설정하였다. 조작부, 블록체인 서버, 검증부를 포함하여, 네트워크 단절 발생 시 경로 유지 및 경로 정보 공유 기능을 구현하는 모든 방법을 포함한다. 예를 들어, 블록 체인 서버를 대체하는 중앙 서버 또는 클라우드 기반의 서버 시스템도 본 발명의 권리 범위에 포함될 수 있다. 또한, 데이터 포맷(JSON, XML 등), 통신 방식(HTTP/HTTPS, WebSocket 등), 암호화 방식(TLS/SSL 등) 등 을 변형하거나 대체하는 경우도 포함된다."}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 공중권 기반 운항 중 네트워크 단절 비행체의 안전 운항을 보장하기 위해 제공된 시스템 및 방법으로, 다음과 같은 주요 효과를 달성할 수 있다. 1. 네트워크 단절 상황에서도 안전한 운항 지속 보장 본 발명은 조작부가 네트워크 단절 발생 시 기존 설정된 경로 데이터를 로컬 저장소에 안전하게 저장하고 이를 기반으로 독립적인 운항을 지속할 수 있도록 한다 이로 인해 다음과 같은 효과를 얻을 수 있다 운항 안정 성 향상 네트워크 장애 상황에서도 비행체가 기존 설정된 경로를 유지하며 운항을 지속할 수 있어 경로 이탈로 인한 사고 발생 위험을 줄일 수 있다 신뢰성 강화 중앙 서버(블록체인 서버)와의 통신이 끊기더라도 로컬 저장 소에 안전하게 저장된 데이터로 운항을 지속할 수 있어 시스템의 신뢰성을 크게 강화한다 예를 들어 도심 내 특 정 고도에서 운항 중인 드론이 네트워크 장애를 겪더라도 기존 경로 데이터를 기반으로 목표 지점까지 안전하게 비행을 지속할 수 있다 2. 네트워크 단절 비행체에 대한 실시간 경보 및 경로 조정 기능 제공 본 발명은 블록체인 서버 및 검증부가 네트워크 단절 비행체의 존재를 인식하고 다른 비행체들에게 실시간으로 경보를 발송하여 충돌 위험을 방지할 수 있도록 한다 충돌 방지 기능 향상 다른 비행체들이 네트워 크 단절 비행체의 경로를 실시간으로 인지하고 이를 회피할 수 있도록 경보를 제공함으로써 충돌 가능성을 사전 에 예방할 수 있다 경로 조정 자동화 머신러닝 모델 및 경로 탐색 알고리즘을 활용하여 경로 충돌 가능성을 자 동으로 분석하고 최적의 회피 경로를 설정할 수 있다 예를 들어 도심 내 복수의 드론이 동일한 공중권을 점유하 며 운항 중일 때 네트워크 단절 비행체가 발생하면 이를 인근의 다른 드론들에게 신속히 알림으로써 안전한 경 로 조정을 가능하게 한다 3. 네트워크 복구 후 데이터 동기화 및 무결성 보장 본 발명은 네트워크 복구 후 조작부가 블록체인 서버와의 데이터 동기화를 정확하게 수행하며 Merkle Tree 기반의 해시 검증 방식을 통해 데이터 무결성을 보장한다 데이터 일관성 유지 네트워크 단절 동안 변경된 경로 데이터가 블록체인 서버에 정확히 반영되도록 함으로써 데이터 일관성을 유지할 수 있다 무결성 검증 강화 Merkle Tree를 사용하여 데이터의 신뢰성을 검증함으로써 데이터 변조 또는 손실을 방지한다 예를 들어 네 트워크 단절 중에 경로 변경이 발생한 경우 이를 블록체인 서버에 정확히 반영하고 모든 관련 노드와 동기화하 여 데이터의 무결성을 유지할 수 있다. 4. 회피 설계 방지 및 포괄적인 권리범위 제공 본 발명은 시스템과 방법을 모두 포괄하는 청구항 세트를 구성하여 다양한 설계 변경에도 권리범위를 효과적으 로 보호할 수 있도록 한다 회피 설계 방지 조작부, 블록체인 서버, 검증부 등을 포함하는 구성 요소의 변형 또는 대체를 포함하더라도 동일한 기능을 수행하면 권리범위에 포함될 수 있도록 설정하였다 다양 한 구현 방식 포함 데이터 포맷(JSON, XML 등), 통신 방식(HTTP/HTTPS, WebSocket 등), 암호화 방식(TLS/SSL 등)을 변경하여도 본 발명의 권리범위에 포함될 수 있다 예를 들어 블록체인 서버를 중앙 서버 또는 클라 우드 기반 서버로 대체하는 방식으로 회피 설계를 시도하더라도 동일한 기능을 수행하는 경우 본 발명의 권리범 위에 포함된다.5. 도심 항공 이동체(UAM) 및 드론 운항의 안전성 및 효율성 증대 본 발명은 공중권 기반의 안전 운항을 보장함으로써 도심 항공 이동체 및 드론의 운항 안전성과 효율성을 크게 향상시킬 수 있다 운항 안전성 네트워크 장애 발생 시에도 독립적인 경로 유지 및 자동 경보 기능을 제공함으로 써 비행체 간 충돌 위험을 줄일 수 있다 운항 효율성 경로 데이터의 무결성을 보장하고 네트워크 복구 후 정확 하게 데이터를 동기화함으로써 효율적인 운항을 가능하게 한다 예를 들어 여러 드론이 동일한 공중권을 공유하 는 상황에서도 네트워크 장애로 인한 사고 위험을 최소화하고 안전한 운항을 지속할 수 있다"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 공중권 기반 운항 중 네트워크 단절 비행체의 안전 운항 시스템 및 방법에 관한 것으로, 특히 네트워 크 단절 상황에서도 조작부가 독립적으로 경로를 유지하며 운항을 지속할 수 있고, 블록체인 서버 및 검증부가 이를 인지하여 다른 비행체에게 경보를 발송하며 경로 조정을 자동으로 수행할 수 있도록 하는 기술에 관한 것이다. 본 발명의 주요 구현 구성요소는 다음과 같다. 1. 조작부 조작부는 공중권 기반 경로 설정 및 안전 운항 기능을 수행하는 핵심 장치로서, 비행체에 설치되어 실시간 공중권 데이터를 분석하고 경로를 설정하며, 네트워크 단절 상황에서도 독립적으로 운항을 지속할 수 있도록 한 다. 주 기능은 다음과 같다; 경로 설정 및 유지 기능 본 발명의 조작부는 비행체가 출발지에서 목적지까지 안전하게 운항할 수 있는 최적의 경로를 설정하고 이 를 지속적으로 유지하는 기능을 제공한다. 경로 설정 기능은 기존의 기술과 차별화되며, 특히 머신러닝 기반 경 로 탐색 알고리즘을 적용하여 비행체 간 충돌 가능성을 사전에 분석하고 최적의 경로를 자동으로 탐색할 수 있 도록 구현된다. 경로 설정 절차는 다음과 같다; 가. 초기 경로 설정 : 비행체가 출발하기 전, 조작부는 블록체인 서버로부터 공중권 데이터 및 기상 정보, 교통 밀집도, 비행 금지 구역 등을 포함한 데이터를 수신하여 최적의 경로를 설정한다. 예를 들어, 드론 이 도시 내 특정 목적지로 이동할 때, 비행 가능 구역과 비행 금지 구역을 자동으로 분석하여 경로를 설정한다. 나. 경로 유지 및 모니터링 : 비행 중 조작부는 지속적으로 공중권 데이터, 실시간 위치 정보, 장애물 정 보 등을 모니터링하며 경로를 유지한다. 경로 이탈 가능성이 있는 경우 경고를 발생시키고 즉각적으로 대체 경 로를 탐색한다. 예를 들어, 도심 내 건물 밀집 구역에서 예상치 못한 장애물(예: 크레인, 건설 장비 등)이 발생 할 경우 이를 감지하고 우회 경로를 생성한다. 다. 경로 조정 : 비행 중 발생하는 돌발 상황(예: 장애물 발생, 기상 악화 등)에 대응하여 조작부는 실시 간으로 경로를 조정한다. 조정된 경로는 블록체인 서버와 동기화되며, 필요시 검증부를 통해 다른 비 행체에게 알림이 발송된다. 예를 들어, 강풍이나 폭우가 발생할 경우, 기존 경로를 유지하는 대신 안전한 고도 로 자동 조정하여 운항을 지속한다. 라. 경로 복구 : 네트워크 단절이 발생하더라도 조작부는 로컬 저장소에 저장된 경로 데이터를 기반으로 운항을 지속한다. 네트워크 복구 후에는 블록체인 서버와의 데이터 동기화를 통해 최신 경로 정보를 반영 한다. 예를 들어, 도심 내 네트워크 장애로 인해 중앙 서버와의 연결이 끊어지더라도, 조작부는 기존 설정 된 경로를 유지하며 목적지까지 이동을 지속할 수 있다. 표 1경로 설정 알고리즘 예시: 머신러닝 기반 경로 탐색 const findOptimalRoute = (currentLocation, destination, obstacles) => { const optimalRoute = []; const visited = new Set(); function explore(route, currentPoint) { if (currentPoint === destination) { optimalRoute.push([...route]); return; } visited.add(currentPoint); const neighbors = getNearbyPoints(currentPoint, obstacles); neighbors.forEach(neighbor => { if (!visited.has(neighbor)) { explore([...route, neighbor], neighbor); } }); visited.delete(currentPoint); } explore([currentLocation], currentLocation); return optimalRoute; }; 상기 알고리즘은 비행체의 현재 위치와 목적지 사이의 최적 경로를 탐색하는 방식으로, 탐욕 알고리즘(Greedy Algorithm)을 응용한 방식이다 currentLocation은 출발 위치를 나타내며 destination은 목적지 위치를 나타낸 다 obstacles는 경로 상의 장애물 목록을 나타내며 optimalRoute는 가능한 경로를 저장하는 배열을 의미한다 explore는 경로를 탐색하는 재귀 함수로, 탐색된 경로를 계속해서 확장하며 목적지에 도달하면 경로를 저장한다 이 알고리즘은 단순한 탐색 방식을 사용하지만, 실시간 장애물 정보를 반영하여 경로를 자동으로 수정할 수 있 도록 설계되었다 향후 머신러닝 기반으로 경로 탐색의 효율성을 개선할 수 있다. 본 발명에서는 강화학습(Deep Q-Learning) 모델을 사용하여 경로 탐색의 효율성을 개선할 수 있다. 강화학습 모 델은 비행체가 특정 목표 지점에 도달할 때까지의 경로를 학습하며, 경로의 안전성, 효율성, 장애물 회피 등을 고려하여 최적의 경로를 탐색한다. 모델은 다음과 같은 방식으로 구성된다; 본 발명에서 강화학습 모델은 비행 체의 안전하고 효율적인 경로 설정을 위해 상태(State), 행동(Action), 보상(Reward)의 개념을 기반으로 학습을 수행하도록 설계된다. 상태(State)는 비행체의 현재 위치, 속도, 방향, 주변 장애물 정보 등을 포함하며, 환경 의 상태를 정확히 파악하여 적절한 행동을 선택하는 데 중요한 역할을 한다. 행동(Action)은 비행체가 취할 수 있는 다양한 조작으로서, 예를 들어 경로 변경, 속도 조절, 방향 전환 등이 포함된다. 보상(Reward)은 비행체가 목표 지점에 안전하게 도달하거나 충돌을 회피할 때 제공되는 점수로, 학습 모델이 최적의 경로를 탐색하도록 유도하는 중요한 요소이다. 예를 들어, 강화학습 모델은 도심 내에서 드론이 경로를 탐색하는 과정에서 장애물 을 피해 안전한 경로를 학습하도록 훈련될 수 있으며, 이 과정에서 비행체는 장애물을 회피하거나 최적의 경로 를 설정하는 행동을 반복적으로 수행하며 보상을 얻는다. 경로 데이터는 실시간으로 업데이트되며, 학습된 모델 은 새로운 경로 설정 및 조정 과정에 적용되어 더욱 효율적인 경로 탐색과 안전성을 제공할 수 있다. 경로 데이터 로컬 저장 기능 본 발명에서는 네트워크 단절 상황에서도 비행체가 안전하게 운항을 지속할 수 있도록 경로 데이터를 로컬 저장 소에 안전하게 저장하는 기능을 포함한다. 이 기능은 조작부에 의해 수행되며, 특히 암호화 저장 방식과 데이터 무결성 검증 기술을 적용하여 보안성을 강화하는 것이 특징이다. 경로 데이터 로컬 저장 절차는 다음과 같다;가. 경로 설정 시 데이터 저장 : 비행체가 초기 경로 설정을 완료하면, 조작부는 설정된 경로 데이터를 로 컬 저장소에 즉시 저장한다. 이때 저장되는 정보는 다음과 같다. 표 2 경로 설정 시 로컬 저장소에 저장되는 정보 항목내용 1 목적지 정보 (위치 좌표) 2 경로의 각 구간 정보 (출발지, 경유지, 목적지 좌표) 3 비행 경로의 예상 시간 및 거리 4 공중권 승인 상태 및 조건 5 장애물 정보 및 회피 경로 데이터 6 비행 금지 구역 정보 7 네트워크 단절 발생 시 경로 유지 규칙 나. 경로 데이터 암호화 저장 : 보안 강화를 위해 경로 데이터는 저장 전 AES(Advanced Encryption Standard) 방식으로 암호화된다. 암호화된 데이터는 지정된 로컬 저장소에 저장되며, 비행체의 식별 코드(예: Device ID) 를 기반으로 접근이 제한된다. 표 3 예시 코드(AES-256 암호화 적용) const crypto = require('crypto'); function encryptData(data, key) { const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key), Buffer.from(key.slice(0, 16))); let encrypted = cipher.update(JSON.stringify(data), 'utf8', 'hex'); encrypted += cipher.final('hex'); return encrypted; } const key = crypto.randomBytes.toString('hex'); // 256-bit key const routeData = { destination: \"37.7749,-122.4194\", waypoints: [\"37.7749,-122.4194\", \"37.8044,-122.2712\"], flightDuration: \"20 minutes\", conditions: \"Approved\", }; const encryptedData = encryptData(routeData, key); console.log(\"Encrypted Route Data: \", encryptedData); 본 발명은 데이터의 무결성을 보장하기 위해 암호화 방식을 추가로 강화한다. 경로 데이터는 AES-256 방식으로 암호화되며, 이를 블록체인 서버로 전송하기 전에 공개키 기반 암호화 방식(RSA)으로 추가 보호할 수 있다. 예를 들어, 블록체인 서버의 공개키를 사용하여 암호화된 데이터는 서버 측에서만 복호화할 수 있으 며, 이를 통해 전송 중 발생할 수 있는 데이터 변조나 도청을 방지할 수 있다. 또한, 모든 데이터 전송 과정은 TLS/SSL 프로토콜을 사용하여 보호되며, 인증 토큰을 사용하여 접근 권한을 제한한다. 다. 데이터 무결성 검증(Merkle Tree 기반) : 로컬 저장된 경로 데이터는 블록체인 서버와의 동기화 시 무 결성을 검증하기 위해 Merkle Tree 구조로 관리된다. 경로 데이터가 변조되거나 손실되지 않았는지 확인하기 위 해, 저장된 데이터의 해시값을 블록체인 서버에 주기적으로 제출하여 비교 검증한다.표 4 예시 코드(Merkle Tree 해시값 생성) const crypto = require('crypto'); class MerkleTree { constructor(data) { this.leaves = data.map(d => this.hash(d)); this.tree = this.buildTree(this.leaves); } hash(data) { return crypto.createHash('sha256').update(data).digest('hex'); } buildTree(leaves) { if (leaves.length === 1) return leaves; const treeLayer = []; for (let i = 0; i < leaves.length; i += 2) { const left = leaves[i]; const right = leaves[i + 1] || leaves[i]; // If odd, duplicate last node const combinedHash = this.hash(left + right); treeLayer.push(combinedHash); } return [...treeLayer, ...this.buildTree(treeLayer)]; } getRoot() { return this.tree[this.tree.length - 1]; } } const routeData = [\"Destination: 37.7749,-122.4194\", \"Waypoints: A-B-C\", \"FlightDuration: 20 minutes\"]; const tree = new MerkleTree(routeData); console.log(\"Merkle Root: \", tree.getRoot()); 라. 경로 데이터 복구 및 동기화 : 본 발명은 보안성 강화를 위해 경로 데이터를 암호화하여 저장함으로써 외부 로부터의 무단 접근을 방지한다 또한 Merkle Tree 기반 검증 방식을 활용하여 데이터 변조를 방지하고 신뢰성을 보장하며 네트워크 단절 상황에서도 안전하게 경로를 유지하고 운항을 지속할 수 있도록 연속 운항 보장을 제공 한다 블록체인 서버와의 연계를 통해 데이터의 신뢰성과 투명성을 확보함으로써 본 발명은 안전하고 효율 적인 경로 유지 및 복구 기능을 제공한다. 예를 들어, 도심 내 200m 고도에서 운항 중인 드론이 예상치 못한 네트워크 단절 상황을 겪는 경우 조작부(50 0)는 사전에 설정된 경로 데이터를 로컬 저장소에 암호화하여 저장한다 이때, AES-256 방식으로 암호화된 경로 데이터는 외부로부터의 무단 접근이나 변조로부터 보호된다 또한, 네트워크가 복구되면 조작부는 블록체인 서버와의 동기화를 수행하는데 이 과정에서 Merkle Tree 기반의 무결성 검증을 통해 경로 데이터가 변조되 지 않았음을 확인한다 예를 들어, 블록체인 서버에 저장된 해시값과 로컬 저장된 경로 데이터의 해시값을 비교하여 동일한 경우 데이터가 온전하게 유지되었음을 확인한다 만약 네트워크 단절 동안 경로가 변경되거나 예기치 못한 장애물(예: 크레인, 건설 장비 등)이 발견되는 경우 조작부는 실시간으로 경로를 조정하여 안 전하게 운항을 지속할 수 있다 이후 네트워크가 복구되면 조작부는 변경된 경로 데이터를 블록체인 서버 에 동기화하여 전체 시스템의 최신 상태를 유지한다 이러한 기능은 네트워크 장애 상황에서도 비행체의 안전성을 보장하고 블록체인 기반의 데이터 신뢰성을 유지하는 중요한 요소이다 Merkle Tree 기반 검증 방식은 블록체인 서버와의 동기화 과정에서 데이터의 무결성을 검증하기 위해 사용 되는 기술로서, 특히 경로 데이터가 변조되지 않고 정확하게 보존되었는지를 효율적으로 확인할 수 있다. 본 발 명에서는 Merkle Tree 구조를 사용하여 경로 데이터의 무결성을 검증하는 과정이 포함된다. Merkle Tree는 이진 트리 구조로, 각 노드가 데이터의 해시값을 포함하며, 자식 노드의 해시값을 결합하여 부모 노드의 해시값을 생 성하는 방식으로 구성된다. 최종적으로 생성되는 루트 노드를 Merkle Root라고 하며, 이 Merkle Root가 전체 데 이터의 무결성을 대표하는 값으로 사용된다. 경로 데이터 검증을 위한 Merkle Tree 구성 절차는 다음과 같다; 첫째, 경로 데이터 분할 및 해싱이다. 경로 데이터는 개별적으로 해시(Hash) 처리된다. 예를 들어, 다음과 같은 경로 데이터가 있다고 가정한다. 표 5 경로 데이터 예시 항목 내용 목적지 정보 37.7749,-122.4194 경유지 정보 37.8044,-122.2712 비행 경로의 예상 시간 20분 공중권 승인 상태 Approved 장애물 정보: Crane Detected 본 발명에서 경로 데이터의 무결성을 보장하기 위해 사용되는 SHA-256 알고리즘은 미국 국가안보국(NSA)에서 설 계한 암호화 해시 함수로서, 256비트(32바이트) 크기의 고정 길이 해시값을 생성한다. 이는 현재 블록체인 기술 을 포함한 다양한 보안 응용 분야에서 널리 사용되는 강력한 보안성을 가진 해시 함수이며, 데이터의 변조 여부 를 신속하게 확인할 수 있는 특성을 지닌다. 경로 데이터의 무결성을 보장하기 위해, 본 발명에서는 경로 데이 터를 구성하는 각 요소를 개별적으로 SHA-256 알고리즘을 이용해 해싱 처리하게 된다. 예를 들어, 목적지 정보, 경유지 정보, 비행 경로의 예상 시간, 공중권 승인 상태, 장애물 정보 등과 같은 다양한 데이터 요소가 존재할 수 있다. 이러한 데이터는 각각의 정보가 독립적인 문자열 형태로 변환된 뒤, SHA-256 알고리즘의 입력값으로 사용된다. 각각의 데이터 요소는 텍스트 형식으로 변환된 후, SHA-256 해시 함수에 입력되며, 이 과정에서 해당 데이터의 고유한 해시값이 생성된다. 예를 들어, 목적지 정보 \"37.7749,-122.4194\"는 해시 함수에 입력되어 고 정된 길이의 해시값이 생성되며, 동일한 데이터 입력에 대해서는 언제나 동일한 해시값이 생성되지만, 데이터의 일부라도 변형되면 전혀 다른 해시값이 출력되게 된다. 또한, 본 발명에서는 경로 데이터의 신뢰성을 높이기 위 해 SHA-256 알고리즘을 적용한 해시값을 Merkle Tree 구조로 구성하여 검증하는 방식을 사용한다. 예를 들어, \"37.7749,-122.4194\"와 같은 목적지 정보는 SHA-256 알고리즘을 통해 고유의 해시값으로 변환되고, 이어서 다른 데이터 요소(예: \"20분\", \"Approved\", \"Crane Detected\" 등)도 동일한 방식으로 각각 해싱 처리된다. 이러한 개별 데이터 요소들은 모두 해시값으로 변환된 뒤 Merkle Tree의 말단 노드로 사용되며, 이를 상위 노드로 결합 하여 최종적으로 Merkle Root를 생성하게 된다. 이와 같이 생성된 Merkle Root는 전체 데이터의 무결성을 대표 하는 값으로 사용되며, 경로 데이터의 변조 여부를 검증하기 위해 블록체인 서버와의 동기화 과정에서 활 용된다. 특히, 본 발명에서 사용되는 Merkle Tree 기반 검증 방식은 경로 데이터의 일부분이 변경되거나 손실되 더라도 이를 신속하게 탐지할 수 있는 장점을 제공하며, 기존 데이터의 신뢰성을 유지하는 데 중요한 역할을 수 행한다. 둘째, Merkle Tree 생성이다. 개별 해시값들을 결합하여 상위 노드의 해시값을 생성한다. 짝수 개의 해시값이 아닐 경우 마지막 해시값을 중복하여 사용한다. 표 6 Merkle Tree 해시값 계산 예시 H6 = SHA-256(H1 + H2) H7 = SHA-256(H3 + H4) H8 = SHA-256(H5 + H5) // 홀수일 경우, 마지막 해시를 중복하여 사용상위 노드들의 해시값을 두 개씩 결합하여 새로운 해시값을 생성하고, 이 과정을 반복하여 트리 구조의 최상위 에 위치한 Merkle Root를 만들어낸다. 이때, 두 개의 해시값을 결합한 후 SHA-256 해시 함수를 적용하여 새로운 해시값을 생성하는 과정을 계속해서 반복하여 최종적으로 Merkle Tree의 루트 노드인 Merkle Root가 완성된다. 표 7 Merkle Tree 해시값 계산 및 Merkle Root 생성 예시 H9 = SHA-256(H6 + H7) H10 = SHA-256(H8 + H8) Merkle Root = SHA-256(H9 + H10) 셋째, Merkle Tree 기반 검증 절차이다. 경로 데이터를 로컬 저장소에 저장할 때, 조작부는 경로 데이터를 구성하는 모든 요소를 개별적으로 SHA-256 알고리즘을 이용하여 해싱 처리하고, 이들 해시값을 기반으로 Merkle Tree를 구축하여 최종적으로 Merkle Root를 계산한다. 이렇게 계산된 Merkle Root는 블록체인 서버에 전송 되어 안전하게 저장되며, 이후 데이터 동기화 과정에서 경로 데이터의 무결성을 검증하기 위한 중요한 기준값으 로 활용된다. 네트워크 복구 후, 조작부는 로컬 저장소에 저장된 경로 데이터를 동일한 방식으로 다시 해 싱 처리하여 새로운 Merkle Root를 계산하며, 이렇게 계산된 Merkle Root는 블록체인 서버에 저장된 기존 의 Merkle Root와 비교되어 데이터의 무결성을 확인하는 데 사용된다. 만약 계산된 Merkle Root가 블록체인 서 버에 저장된 Merkle Root와 일치하는 경우, 이는 경로 데이터가 무결하게 유지되었음을 의미하며, 시스템 은 안전하게 데이터를 동기화할 수 있는 상태임을 확인하게 된다. 반면, 계산된 Merkle Root가 블록체인 서버 에 저장된 Merkle Root와 일치하지 않는 경우에는 경로 데이터가 손상되거나 변조되었을 가능성을 의미하 므로, 시스템은 자동으로 경고를 발생시키고 재동기화 절차를 수행하여 안전성을 확보하도록 설계되어 있다. Merkle Tree 기반 검증 방식은 경로 데이터의 무결성을 효과적으로 보장할 수 있는 중요한 기술로, 경로 데이터 의 변조를 신속하게 감지하여 데이터의 신뢰성을 유지할 수 있도록 한다. Merkle Tree의 특성상, 전체 데이터가 아닌 일부 데이터의 변경이라 하더라도 이를 신속하게 탐지할 수 있기 때문에, 데이터 검증 과정에서 높은 효율 성을 제공하며 검증 시간을 크게 단축시킬 수 있다. 또한, 본 발명에서 사용되는 Merkle Tree 기반 검증 방식은 블록체인 서버와의 연계를 통해 중앙화된 데이터베이스 없이도 신뢰성 있는 검증을 가능하게 하며, 이를 통해 데이터의 위변조 방지 및 안전성을 더욱 강화할 수 있는 기술적 장점을 제공한다. 표 8예시 코드(Merkle Tree 생성 및 검증) const crypto = require('crypto'); class MerkleTree { constructor(data) { this.leaves = data.map(d => this.hash(d)); this.tree = this.buildTree(this.leaves); } hash(data) { return crypto.createHash('sha256').update(data).digest('hex'); } buildTree(leaves) { if (leaves.length === 1) return leaves; const treeLayer = []; for (let i = 0; i < leaves.length; i += 2) { const left = leaves[i]; const right = leaves[i + 1] || leaves[i]; // 홀수일 경우, 마지막 값을 중복 사용 const combinedHash = this.hash(left + right); treeLayer.push(combinedHash); } return [...treeLayer, ...this.buildTree(treeLayer)]; } getRoot() { return this.tree[this.tree.length - 1]; } } const routeData = [ \"37.7749,-122.4194\", \"37.8044,-122.2712\", \"20분\", \"Approved\", \"Crane Detected\" ]; const tree = new MerkleTree(routeData); console.log(\"Merkle Root: \", tree.getRoot()); Merkle Tree 기반 검증 방식은 본 발명에서 경로 데이터의 무결성을 보장하기 위한 중요한 방법으로, 블록체인 서버에 저장된 Merkle Root와의 비교를 통해 데이터의 변조 여부를 신속하고 정확하게 확인할 수 있도록 설계되었다. 이 검증 방식은 경로 데이터가 변조되었을 경우 시스템이 즉시 경고를 발생시키도록 하여, 신속하 게 문제를 감지하고 대응할 수 있게 한다. 또한, 데이터 변조가 확인되면 시스템은 안전한 데이터 동기화를 수 행함으로써 신뢰성을 유지하고, 경로 데이터의 일관성을 확보할 수 있도록 보장한다. 마. 경로 데이터 로컬 저장 기능의 특징 및 장점 : 본 발명은 보안성 강화를 위해 경로 데이터를 암호화하여 저 장함으로써 외부로부터의 무단 접근을 방지한다 또한 Merkle Tree 기반 검증 방식을 활용하여 데이터 변조를 방 지하고 신뢰성을 보장하며 네트워크 단절 상황에서도 안전하게 경로를 유지하고 운항을 지속할 수 있도록 연속 운항 보장을 제공한다 블록체인 서버와의 연계를 통해 데이터의 신뢰성과 투명성을 확보함으로써 본 발명은 안전하고 효율적인 경로 유지 및 복구 기능을 제공한다 본 발명은 다양한 네트워크 환경에서도 안정적으로 작동할 수 있도록 설계되었다. 예를 들어, 네트워크 단절 상 황에서도 Wi-Fi, Bluetooth, Li-Fi 등의 근거리 통신 방식을 활용하여 인접 비행체와의 P2P 통신을 통해 데이터 를 공유하고 동기화할 수 있다. 또한, 블록체인 서버와의 연계를 통해 분산 원장 방식으로 경로 데이터를 관리하므로, 단일 장애점(Single Point of Failure)에 의한 시스템 오류를 방지하고 확장성을 확보할 수 있다. 이러한 구조는 다양한 네트워크 환경에서의 호환성을 보장하며, 복수의 비행체가 동일 공중권을 공유하는 복잡 한 상황에서도 안전하게 운항을 지속할 수 있도록 한다. 네트워크 복구 후 데이터 동기화 기능 본 발명에서 제시하는 네트워크 복구 후 데이터 동기화 기능은 조작부와 블록체인 서버가 상호 연계 하여 데이터의 무결성을 검증하고, 최신 상태로 데이터를 동기화하는 과정을 포함한다. 네트워크 단절로 인해 블록체인 서버와의 연결이 끊어진 상태에서 비행체는 로컬 저장소를 활용하여 독립적으로 운항을 지속할 수 있다. 그러나 네트워크가 복구되면, 데이터의 정확성과 무결성을 보장하기 위해 동기화 절차가 필요하다. 네 트워크 복구 후 데이터 동기화 절차는 다음과 같이 진행된다; 가. 네트워크 복구 감지 : 조작부는 네트워크 연결이 복구되었는지 지속적으로 모니터링하며, 블록체인 서 버와의 연결이 재확립되면 데이터 동기화 절차를 자동으로 시작한다. 나. Merkle Root 계산 및 비교 : 로컬 저장소에 저장된 경로 데이터를 기반으로 새로운 Merkle Root를 계산한다. 이 Merkle Root는 네트워크 단절 이전의 Merkle Root와 다를 수 있으며, 변경된 경로 데이터를 포함 하는 경우 이를 신속히 검증하기 위해 사용된다. 조작부는 계산된 Merkle Root를 블록체인 서버에 저 장된 기존 Merkle Root와 비교하여 데이터의 무결성을 확인한다. 다. 무결성 검증 결과 처리 : 블록체인 서버에 저장된 Merkle Root와 로컬 저장소에서 계산된 Merkle Root 가 일치하는 경우, 이는 경로 데이터가 무결하게 유지되었음을 의미하며, 블록체인 서버에 로컬 저장소의 데이터가 안전하게 업데이트되어 동기화가 완료된다. 반면, Merkle Root가 불일치하는 경우에는 데이터 변조 또 는 손상이 발생했음을 의미하므로, 조작부는 즉시 경고를 발생시키고, 블록체인 서버와의 재동기화를 수행하여 안전한 경로 데이터를 복구하고 무결성을 확보한다. 라. 동기화 데이터 블록 생성 및 전송 : 데이터 동기화 과정에서, 조작부는 변경된 경로 데이터를 블록 단 위로 구성하여 블록체인 서버에 전송한다. 이 과정에서 생성된 블록은 블록체인 서버에 기록되며, 다 른 노드들과의 동기화를 통해 전체 시스템의 일관성을 유지한다. 마. 동기화 완료 확인 및 데이터 저장 : 블록체인 서버는 전송된 데이터 블록을 검증하고, 무결성이 확인 되면 이를 블록체인에 기록한다. 이후 조작부는 동기화가 성공적으로 완료되었음을 확인하고, 최신 상태의 경로 데이터를 저장한다. 표 9코드 예시(Python) import hashlib from typing import List, Dict # 데이터 해싱 함수 (SHA-256 사용) def hash_data(data: str) -> str: return hashlib.sha256(data.encode('utf-8')).hexdigest() # Merkle Tree 구축 함수 def build_merkle_tree(data_blocks: List[str]) -> str: if len(data_blocks) == 1: return data_blocks[0] new_level = [] for i in range(0, len(data_blocks), 2): if i + 1 < len(data_blocks): combined_hash = hash_data(data_blocks[i] + data_blocks[i + 1]) else: combined_hash = hash_data(data_blocks[i] + data_blocks[i]) new_level.append(combined_hash) return build_merkle_tree(new_level) # 데이터 동기화 함수 def synchronize_data(local_data: List[str], blockchain_root: str) -> bool: local_merkle_root = build_merkle_tree([hash_data(data) for data in local_data]) if local_merkle_root == blockchain_root: print(\"Data integrity verified. Synchronization successful.\") return True else: print(\"Data integrity compromised. Re-synchronization required.\") return False # 예시 데이터 local_data = [\"Route A\", \"Route B\", \"Route C\", \"Route D\"] blockchain_root = build_merkle_tree([hash_data(data) for data in local_data]) # 데이터 동기화 검증 synchronize_data(local_data, blockchain_root) 본 발명은 Merkle Tree 기반의 무결성 검증 방식을 사용하여 네트워크 단절 동안 저장된 경로 데이터가 변조되 지 않았는지를 신속하게 확인함으로써 데이터의 안전성을 보장하는 기술적 장점을 가진다. 또한, 데이터가 블록 단위로 구성되고 전송되기 때문에 대량의 데이터를 효율적으로 처리할 수 있으며, 데이터 손실이나 오류를 신속 하게 감지하고 복구할 수 있어 전송 및 동기화 과정의 효율성을 크게 향상시킨다. 특히, 블록체인 서버와 의 연계를 통해 데이터의 검증 및 동기화 과정이 투명하고 안전하게 이루어지도록 설계되었으며, 이를 통해 데 이터의 신뢰성을 크게 강화할 수 있다. 더불어 본 발명은 다양한 네트워크 환경에서도 데이터 무결성을 유지할 수 있도록 설계되어 있어, 타 시스템과의 연계 및 호환성이 높은 확장성을 제공하는 특징을 가진다. 경보 발송 및 경로 조정 기능 본 발명의 경보 발송 및 경로 조정 기능은 네트워크 단절 비행체가 발생한 경우, 해당 비행체의 경로 정보와 상 태를 다른 비행체들에게 신속하게 전파하여 충돌 위험을 예방하고 안전하게 경로를 조정할 수 있도록 하는 핵심적인 기술 요소이다. 이 기능은 특히 블록체인 서버 및 검증부와 연계하여 안전하고 신속하게 이루어 질 수 있도록 설계되었다. 가. 경보 발송 기능 : 경보 발송 기능은 네트워크 단절 비행체가 발생할 경우 이를 주변 비행체들에게 즉각적으 로 알리는 시스템으로, 다음과 같은 절차로 이루어진다; 조작부는 실시간으로 네트워크 상태를 모니터링하 며, 네트워크 단절이 발생하는 즉시 이를 감지하고 경보 발송 절차를 자동으로 시작한다. 네트워크 단절이 감지 되면, 조작부는 해당 비행체의 정보인 위치, 속도, 경로, 예상 경로 유지 시간 등을 포함한 경보 메시지를 생성한다. 이 경보 메시지는 JSON 형식으로 구성되며, 블록체인 서버와 인근 비행체들에게 신속하게 전송 된다. 이를 통해 네트워크 단절로 인한 비행체의 안전성 저하를 방지하고, 주변 비행체들이 신속히 대응할 수 있도록 돕는다. 표 10 경고 메시지 예시(JSON 형식) { \"alertType\": \"NetworkDisruption\", \"aircraftID\": \"UAM-001\", \"currentLocation\": \"37.7749, -122.4194\", \"expectedRoute\": [\"Point A\", \"Point B\", \"Point C\"], \"timestamp\": \"2025-04-06T08:00:00Z\" } 경보 메시지는 블록체인 서버를 경유하여 인근의 모든 비행체들로 전파되며, 이 과정은 P2P 방식과 중앙 서버 경유 방식의 두 가지 방식으로 수행될 수 있다. P2P 방식에서는 네트워크 단절 상황에서도 인접 비행체 간 의 직접적인 P2P 통신을 통해 경보가 신속하게 전송되며, 이를 통해 중앙 서버와의 연결 없이도 안전한 경로 조 정이 가능하다. 반면, 중앙 서버 경유 방식에서는 블록체인 서버에 경보 메시지를 기록하고 이를 실시간으 로 다른 비행체들에게 전송하여 경로 조정 및 통합 관리의 일관성을 유지할 수 있다. 이러한 이중 경보 전송 방 식을 통해 본 발명은 네트워크 단절 상황에서도 신속하고 안전하게 경고 메시지를 전파할 수 있도록 설계되었다. 나. 경로 조정 기능 : 경로 조정 기능은 경보 메시지를 수신한 비행체들이 네트워크 단절 비행체와의 충돌을 방 지하기 위해 경로를 재설정하는 기능이다. 이 기능은 다음과 같이 구성된다; 경보 메시지를 수신한 비행체의 조 작부는 즉시 경보 메시지의 내용을 분석하여 현재 경로와의 충돌 가능성을 평가하며, 이 과정은 인공지능 기반의 경로 탐색 알고리즘을 사용하여 수행된다. 경로 충돌 가능성 평가 알고리즘은 비행체의 현재 위치, 속도, 방향, 경로 정보 등을 종합적으로 분석하여 충돌 위험을 예측하고 대응하는 방식으로 이루어진다. 예측 경로는 네트워크 단절 비행체의 예상 경로를 시뮬레이션하여 충돌 가능성을 분석하며, 위험도 계산 과정에서 특 정 경로에서의 충돌 위험도를 점수로 계산하고 위험도가 높은 경로는 회피 경로로 자동 조정한다. 경로 충돌 가 능성이 확인되면, 조작부는 자동으로 회피 경로를 설정하는데, 이 과정은 기존 경로를 벗어나지 않는 범위 내에서 최적의 회피 경로를 탐색하고, 네트워크 단절 비행체가 예상되는 경로와의 교차 지점을 회피하도록 설정 하는 방식으로 이루어진다. 경로 변경이 완료되면 이를 블록체인 서버에 기록하여 다른 비행체들에게도 즉 시 전파되도록 함으로써, 전체 시스템의 안전성을 높이고 충돌 방지를 효과적으로 수행할 수 있도록 설계되었다. 표 11경로 조정 알고리즘 예시(충돌 감지 및 회피 경로 설정) import numpy as np from typing import List, Tuple class Aircraft: def __init__(self, aircraft_id: str, position: Tuple[float, float], speed: float, direction: float): self.aircraft_id = aircraft_id self.position = np.array(position) self.speed = speed self.direction = np.radians(direction)"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "def predict_position(self, time: float) -> np.ndarray: dx = np.cos(self.direction) * self.speed * time dy = np.sin(self.direction) * self.speed * time return self.position + np.array([dx, dy]) def detect_collision(aircraft1: Aircraft, aircraft2: Aircraft, time: float) -> bool: pos1 = aircraft1.predict_position(time) pos2 = aircraft2.predict_position(time) distance = np.linalg.norm(pos1 - pos2) return distance < 0.1 # 충돌 위험 거리 설정 (단위: km) # 예시: 두 비행체 간 충돌 감지 uav1 = Aircraft(\"UAM-001\", (0, 0), 0.2, 45) uav2 = Aircraft(\"UAM-002\", (0.1, 0.1), 0.1, 225) collision_detected = detect_collision(uav1, uav2, 10) # 10초 후의 충돌 여부 확인 print(\"Collision Detected:\", collision_detected) 본 발명은 여러 가지 기술적 장점을 제공하는데, 첫째로 충돌 방지의 신속성 측면에서 네트워크 단절 비행체 발 생 시 다른 비행체들에게 신속하게 경고를 전송하여 충돌 위험을 사전에 방지할 수 있다는 점이 있다. 둘째로, 경로 조정의 효율성 측면에서 실시간으로 경로 충돌 가능성을 평가하고 회피 경로를 자동으로 설정하여 비행체 운항의 안전성을 크게 향상시킬 수 있다. 또한, 확장 가능성 측면에서도 다양한 경로 조정 알고리즘을 적용할 수 있어 시스템의 유연성을 강화하고, 다양한 환경에서도 효과적으로 작동할 수 있도록 설계되었다. 마지막으로, 블록체인 기반 신뢰성 측면에서 경보 발송 및 경로 조정 과정이 블록체인 서버와 연계되어 투 명하고 신뢰성 있게 처리됨으로써, 데이터의 무결성과 보안을 확실하게 보장할 수 있다. 이러한 기술적 장점들 은 본 발명의 안전성과 효율성을 더욱 강화하는 중요한 요소로 작용한다. 2. 블록체인 서버 블록체인 서버는 공중권 데이터를 분산 원장 방식으로 안전하게 저장하고 관리하는 핵심 구성 요소로서, 본 발명의 신뢰성을 보장하는 중요한 역할을 수행한다. 공중권 소유자의 승인 여부 및 경로 설정 데이터를 블록 체인 서버에 기록함으로써 데이터의 무결성을 보장하고, 네트워크 단절 시에도 안전하게 동기화를 수행할 수 있도록 설계되었다. 블록체인 서버의 주요 기능은 다음과 같다; 공중권 데이터의 무결성 검증 (Merkle Tree 기반 검증 방식) 블록체인 서버는 조작부로부터 전송받은 경로 데이터의 Merkle Root를 저장하고, 이후 데이터 동기화 과정에서 이를 비교하여 무결성을 검증한다. Merkle Tree 기반 검증 방식은 데이터의 변조 여부를 신속하게 파 악할 수 있도록 하며, 블록체인 서버에서 Merkle Root를 조회하고 비교함으로써 데이터의 신뢰성을 유지한 다. 이 과정은 경로 데이터의 변경이나 손실을 즉시 감지하고, 복구를 수행할 수 있는 기반을 제공한다. 예를 들어, 조작부가 네트워크 단절 중에 경로 데이터를 수정하거나 새로운 경로를 설정한 경우, 이를 로컬 저 장소에 기록하며 Merkle Tree를 생성한다. 이후 블록체인 서버와 통신이 복구되면, 조작부는 기록된Merkle Root를 블록체인 서버에 전송하여 비교한다. 만약 블록체인 서버에서 기존에 저장된 Merkle Root와 동일하면, 경로 데이터가 변조되지 않았음을 확인할 수 있다. 예를 들어, 도시 내에서 드론이 고층 빌딩 사이를 통과하며 새로운 경로를 설정할 때, Merkle Root 검증을 통해 안전하게 데이터의 무결성을 보장할 수 있 다. 경로 데이터의 기록 및 동기화 블록체인 서버는 조작부로부터 전송된 경로 데이터를 안전하게 기록하고, 네트워크 복구 후 동기화 작업을 수행한다. 특히, 조작부가 네트워크 단절 시 로컬 저장소에 기록한 경로 데이터의 Merkle Root를 블록체인 서버와 비교하여 데이터의 무결성을 확인한다. 블록체인 서버는 이 과정에서 변경된 데이터 를 기록하고, 이를 다른 비행체들에게 전파하여 최신 정보를 유지하도록 한다. 예를 들어, 드론이 네트워크 단 절 상태에서 비행하면서 새로운 경로를 설정하고 이를 로컬 저장소에 기록한 경우를 가정한다. 네트워크가 복구 되면 조작부는 기록된 데이터를 블록체인 서버에 전송하여 최신 상태로 동기화한다. 예를 들어, 물류 배송 드론이 예상치 못한 네트워크 장애로 인해 로컬 경로 데이터를 사용하여 목적지까지 안전하게 도착했을 때, 블록체인 서버에 해당 데이터를 업로드하여 전체 네트워크와 동기화하는 과정이 포함된다. 이때 Merkle Root 비교 과정을 통해 데이터의 무결성을 확인할 수 있다. 표 12경로 데이터의 기록 및 동기화(예시 코드) import json import hashlib import requests # HTTP 요청을 위해 사용 class PathDataSync: def __init__(self, blockchain_server_url): self.local_storage = {} self.blockchain_server_url = blockchain_server_url def save_to_local(self, path_id, path_data): \"\"\"경로 데이터를 로컬 저장소에 기록하고 Merkle Root를 생성\"\"\" self.local_storage[path_id] = path_data merkle_root = self.calculate_merkle_root(path_data) self.local_storage[f\"{path_id}_merkle_root\"] = merkle_root print(f\"경로 데이터 저장 완료. Merkle Root: {merkle_root}\") def calculate_merkle_root(self, path_data): \"\"\"Merkle Root를 계산하는 함수\"\"\" hash_list = [hashlib.sha256(json.dumps(data).encode()).hexdigest() for data in path_data] while len(hash_list) > 1: temp_list = [] for i in range(0, len(hash_list), 2): left = hash_list[i] right = hash_list[i+1] if i+1 < len(hash_list) else left # 홀수일 경우 복제 combined_hash = hashlib.sha256((left + right).encode()).hexdigest() temp_list.append(combined_hash) hash_list = temp_list return hash_list[0] def sync_with_blockchain(self, path_id): \"\"\"블록체인 서버와 데이터 동기화\"\"\" if path_id not in self.local_storage: print(\"경로 데이터가 로컬 저장소에 존재하지 않습니다.\") return path_data = self.local_storage[path_id] merkle_root = self.local_storage[f\"{path_id}_merkle_root\"] payload = { \"path_id\": path_id, \"path_data\": path_data, \"merkle_root\": merkle_root } response = requests.post(f\"{self.blockchain_server_url}/sync\", json=payload)"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "if response.status_code == 200: print(\"블록체인 서버와의 동기화 성공\") else: print(\"동기화 실패. 오류 코드:\", response.status_code) # 사용 예시 blockchain_server_url = \"http://localhost:8000\" path_data_sync = PathDataSync(blockchain_server_url) # 경로 데이터 예시 path_data_example = [ {\"location\": \"Point A\", \"timestamp\": \"2025-04-06T08:00:00Z\"}, {\"location\": \"Point B\", \"timestamp\": \"2025-04-06T08:10:00Z\"}, {\"location\": \"Point C\", \"timestamp\": \"2025-04-06T08:20:00Z\"} ] # 경로 데이터를 로컬 저장소에 저장하고 Merkle Root 생성 path_data_sync.save_to_local(\"Path_001\", path_data_example) # 블록체인 서버와의 데이터 동기화 path_data_sync.sync_with_blockchain(\"Path_001\") 상기 코드 예시는 경로 데이터를 로컬 저장소에 저장하고, Merkle Tree 기반으로 무결성을 검증하며 블록체인 서버와 동기화하는 과정을 보여준다. 앞서 설명한 Merkle Tree 기반 검증 방식을 코드로 구현한 예시이다. 블록 체인 서버와의 통신은 HTTP/HTTPS, WebSocket 프로토콜을 기반으로 수행되며, API 설계는 다음과 같다; 본 발명에서 블록체인 서버와의 통신은 HTTP/HTTPS 프로토콜을 기반으로 수행되며, 다양한 API 요청 방식 으로 데이터의 조회, 전송, 갱신 및 삭제가 이루어진다. 경로 데이터를 조회하는 경우에는 GET 요청 방식으로 '/fetch' 경로를 사용하며, 경로 데이터를 전송하고 동기화하는 경우에는 POST 요청 방식으로 '/sync' 경로를 사용한다. 또한, 경로 데이터를 갱신할 때에는 PUT 요청 방식으로 '/update' 경로를 사용하며, 경로 데이터를 삭제하는 경우에는 DELETE 요청 방식으로 '/delete' 경로를 사용한다. 통신 시 모든 데이터는 JSON 형식으로 구 성되며, 보안을 강화하기 위해 TLS/SSL 프로토콜을 사용하여 암호화된다. 또한, 각 API 요청에는 인증 토큰이 포함되어 허가된 장치만 데이터에 접근할 수 있도록 설정되며, 이를 통해 데이터의 무결성과 보안을 유지할 수 있다. 예를 들어, 경로 데이터를 전송하고 동기화하는 POST 요청의 경우 다음과 같은 형식으로 이루어진다. 표 13 API 설계 및 데이터 동기화 통신 규약 POST /sync Content-Type: application/json Authorization: Bearer <access_token> { \"path_id\": \"Path_001\", \"path_data\": [ {\"location\": \"Point A\", \"timestamp\": \"2025-04-06T08:00:00Z\"}, {\"location\": \"Point B\", \"timestamp\": \"2025-04-06T08:10:00Z\"}, {\"location\": \"Point C\", \"timestamp\": \"2025-04-06T08:20:00Z\"} ], \"merkle_root\": \"b5d4045cbb5a...\" } 검증부와의 연계 기능 블록체인 서버는 검증부와 상호작용하여 공중권 승인 여부를 실시간으로 확인하고 기록한다. 예를 들 어, 경로 데이터가 새롭게 설정되거나 변경될 경우, 검증부는 이를 분석하여 승인 여부를 결정하고, 해당 결과를 블록체인 서버에 기록한다. 이후 조작부는 블록체인 서버와 통신하여 승인된 경로 데이 터를 확인하고, 안전한 운항을 지속할 수 있게 된다. 또한, 검증부는 인공지능 기반의 경로 탐색 알고리즘 을 통해 경로 충돌 가능성을 평가하고, 필요시 블록체인 서버에 회피 경로 설정 요청을 전송한다. 이 과정 은 블록체인 서버에서 다른 비행체들에게 안전하게 전파되어 충돌 위험을 최소화하는 데 기여한다. 예를 들어, 비행체가 경로를 설정하거나 변경할 때마다 검증부는 해당 경로가 다른 비행체의 경로와 충돌하지 않는지 확인한다. 만약 경로가 충돌할 가능성이 높다고 판단되면, 검증부는 블록체인 서버에 경고 메 시지를 기록하고 다른 비행체들에게도 이를 전파한다. 예를 들어, 도심 상공을 비행하는 다수의 드론 중 하나가 네트워크 단절 후 복구되면서 새로운 경로를 설정했을 때, 검증부는 이를 분석하여 다른 드론과의 충돌 가 능성을 평가하고 적절히 회피 경로를 제시한다. 이 과정에서 블록체인 서버에 기록된 경로 데이터는 실시 간으로 업데이트되며 다른 비행체들과 공유된다. 표 14 검증부 연계 경로 충돌 감지 및 경고 전송 시스템 예시 import requests import json class CollisionDetector: def __init__(self, blockchain_server_url): self.blockchain_server_url = blockchain_server_url def evaluate_collision(self, path_data, existing_paths): \"\"\"충돌 가능성을 평가하는 함수\"\"\" for existing_path in existing_paths: if self.detect_collision(path_data, existing_path): self.send_alert(path_data) return True return False def detect_collision(self, path_data, existing_path): \"\"\"경로 간 충돌 여부를 단순 비교하는 함수\"\"\" for point in path_data: if point[\"location\"] in [p[\"location\"] for p in existing_path]: return True return False def send_alert(self, path_data): \"\"\"블록체인 서버에 경고 메시지 전송\"\"\" payload = { \"alert\": \"경로 충돌 위험 감지\", \"path_data\": path_data } response = requests.post(f\"{self.blockchain_server_url}/alert\", json=payload)"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "if response.status_code == 200: print(\"경고 메시지 전송 성공\") else: print(\"경고 메시지 전송 실패. 오류 코드:\", response.status_code) # 사용 예시 blockchain_server_url = \"http://localhost:8000\" collision_detector = CollisionDetector(blockchain_server_url) # 경로 데이터 예시 path_data_example = [ {\"location\": \"Point A\", \"timestamp\": \"2025-04-06T08:00:00Z\"}, {\"location\": \"Point B\", \"timestamp\": \"2025-04-06T08:10:00Z\"}, ] existing_paths = [ [ {\"location\": \"Point B\", \"timestamp\": \"2025-04-06T08:05:00Z\"}, {\"location\": \"Point C\", \"timestamp\": \"2025-04-06T08:15:00Z\"} ] ] collision_detector.evaluate_collision(path_data_example, existing_paths) 상기 코드 예시는 경로 충돌 위험을 분석하는 간단한 검증부 모듈의 예시이다. 기존의 경로와 비교하여 충 돌 위험을 탐지하고, 블록체인 서버에 경고 메시지를 전송하는 방식이 포함되었다. 3. 검증부 검증부는 네트워크 단절 비행체를 감지하고, 이를 다른 비행체들에게 경보로 알리며 경로 조정을 자동으로 수행하는 모듈이다. 이 모듈은 실시간 데이터 분석, 경로 조정 자동화, 그리고 경보 발송 기능을 포함하여 전체 시스템의 안전성을 극대화하는 역할을 담당한다. 구체적인 기능은 다음과 같다; 네트워크 단절 비행체 발생 경보 발송 검증부는 비행체들의 네트워크 연결 상태를 지속적으로 모니터링한다. 네트워크 단절이 발생하면 이를 즉 시 감지하고, 해당 비행체의 정보를 기반으로 경보 메시지를 생성하여 다른 비행체들 및 블록체인 서버에 전파한다. 경보 메시지 생성 및 전송 과정은 다음고 같다; 검증부는 모든 비행체의 연결 상태를 주기적으 로 확인하며, 연결 끊김이 발생할 경우 이를 즉시 감지한다. 네트워크 단절이 발생한 비행체의 정보, 예를 들어위치, 속도, 예상 경로 유지 시간 등을 포함하는 경보 메시지를 생성하고, 이 경보 메시지는 블록체인 서버 와 인접 비행체들에게 동시에 전송된다. 경로 충돌 방지를 위해 경보 메시지 전송 방식은 P2P 방식과 중앙 서버 경유 방식이 병행하여 사용될 수 있도록 설계되었다. 표 15 네트워크 단절 감지 및 경보 전송 시스템 예시 import requests import json class NetworkMonitor: def __init__(self, blockchain_server_url): self.blockchain_server_url = blockchain_server_url def send_alert(self, flight_data): \"\"\"경보 메시지를 블록체인 서버 및 인근 비행체들에게 전송\"\"\" payload = { \"alert_type\": \"Network Disconnection Detected\", \"flight_data\": flight_data } response = requests.post(f\"{self.blockchain_server_url}/alert\", json=payload)"}
{"patent_id": "10-2025-0044447", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "if response.status_code == 200: print(\"경보 메시지 전송 성공\") else: print(\"경보 메시지 전송 실패. 오류 코드:\", response.status_code) 경로 조정 자동화 검증부는 네트워크 단절 비행체의 경로 정보를 분석하여 충돌 가능성을 예측하고, 자동으로 경로를 조정하 는 역할을 수행한다. 이 과정은 실시간 경로 분석 및 경로 탐색 알고리즘을 기반으로 한다. 경로 조정 과정은 다음과 같다; 검증부는 인공지능 기반의 경로 탐색 알고리즘을 사용하여 네트워크 단절 비행체의 예상 경 로와 다른 비행체의 경로 간 충돌 위험을 계산한다. 충돌 가능성이 감지되면, 검증부는 즉시 새로운 회피 경로를 자동으로 설정하고, 변경된 경로 정보는 블록체인 서버에 기록되며 다른 비행체들에게도 실시간으 로 전파되어 안전성을 확보한다. 표 16경로 조정 및 회피 경로 생성 시스템 예시 import numpy as np class PathAdjuster: def __init__(self, blockchain_server_url): self.blockchain_server_url = blockchain_server_url def evaluate_path(self, current_path, other_paths): \"\"\"경로 간 충돌 가능성을 평가하고 회피 경로를 생성\"\"\" for other_path in other_paths: if self.detect_collision(current_path, other_path): return self.generate_alternative_path(current_path) return current_path def detect_collision(self, current_path, other_path): \"\"\"단순 충돌 검출 함수\"\"\" current_points = {tuple(point.values()) for point in current_path} other_points = {tuple(point.values()) for point in other_path} return len(current_points.intersection(other_points)) > 0 def generate_alternative_path(self, current_path): \"\"\"간단한 회피 경로 생성 (랜덤 변위 추가)\"\"\" new_path = [] for point in current_path: new_point = { \"location\": point[\"location\"], \"timestamp\": point[\"timestamp\"], \"x\": point.get(\"x\", 0) + np.random.uniform(-1, 1), \"y\": point.get(\"y\", 0) + np.random.uniform(-1, 1), \"z\": point.get(\"z\", 0) + np.random.uniform(-1, 1) } new_path.append(new_point) return new_path 실시간 경로 데이터 분석 및 업데이트 검증부는 실시간으로 비행체들의 경로 데이터를 수집하고 분석하여, 네트워크 단절 상태에서도 안전한 운 항을 지속할 수 있도록 한다. 주요 기능은 다음과 같다; 검증부는 블록체인 서버로부터 실시간 경로 데이터를 수집하고, 인공지능 기반의 경로 분석 알고리즘을 사용하여 충돌 가능성을 예측하며 안전한 경로 설정 을 수행한다. 새로운 경로 정보는 블록체인 서버에 즉시 업데이트되며, 다른 비행체들에게도 실시간으로 전파되어 시스템의 안전성과 효율성을 높인다. 표 17실시간 데이터 분석 및 경로 분석 시스템 예시 class RealTimeAnalyzer: def __init__(self, blockchain_server_url): self.blockchain_server_url = blockchain_server_url def fetch_data(self): \"\"\"블록체인 서버에서 실시간 데이터를 수집\"\"\" response = requests.get(f\"{self.blockchain_server_url}/fetch\") if response.status_code == 200: return response.json() else: print(\"데이터 수집 실패. 오류 코드:\", response.status_code) return None def analyze_data(self, path_data): \"\"\"경로 데이터 분석\"\"\" # 인공지능 기반 경로 분석 알고리즘 (단순화된 예제) if path_data: for data in path_data: print(f\"분석 중: {data['location']} - {data['timestamp']}\") 4. 소프트웨어 구현 및 코드 예시 본 발명은 소프트웨어적으로 구현될 수 있으며, 조작부는 임베디드 시스템 또는 클라우드 기반 서버에서 구현될 수 있다. 블록체인 서버는 분산 네트워크로 구성될 수 있으며, 검증부는 독립적인 모듈 또는 블록체인 네트워크의 노드로 구성될 수 있다. 특히, 본 발명의 구성 요소들은 모두 통합적으로 작동하며, 경로 데이터의 무결성 검증, 경로 설정, 경로 조정, 네트워크 복구 후 데이터 동기화 등의 과정을 수행한다. 이러한 기능들은 소프트웨어적으로 구현될 수 있으며, 구체적인 코드 예시는 다음과 같다; Merkle Tree 기반 데이터 검증 Merkle Tree를 사용하여 경로 데이터의 무결성을 보장하기 위해, 경로 데이터를 개별 블록으로 분리하고 이를 해시하여 Merkle Root를 계산한다. 표 18Merkle Tree 구축 및 루트 해시값 계산 예시 const crypto = require('crypto'); class MerkleTree { constructor(leaves) { this.leaves = leaves.map(data => this.hash(data)); this.tree = [this.leaves]; this.buildTree(); } hash(data) { return crypto.createHash('sha256').update(data).digest('hex'); } buildTree() { let currentLevel = this.leaves; while (currentLevel.length > 1) { currentLevel = this.createNextLevel(currentLevel); this.tree.push(currentLevel); } } createNextLevel(level) { const nextLevel = []; for (let i = 0; i < level.length; i += 2) { const left = level[i]; const right = level[i + 1] || left; const combinedHash = this.hash(left + right); nextLevel.push(combinedHash); } return nextLevel; } getRoot() { return this.tree[this.tree.length - 1][0]; } } // 예시 데이터 const leaves = ['Route A', 'Route B', 'Route C']; const merkleTree = new MerkleTree(leaves); console.log('Merkle Root:', merkleTree.getRoot()); 상기 코드는 경로 데이터를 각각 개별 블록으로 분할하여, 각 블록의 데이터를 SHA-256 알고리즘을 사용하여 해 싱하고, 이를 다시 병합하여 Merkle Root를 계산하는 방식으로 구성된다. 각 블록은 경로 데이터의 특정 구간이 나 단계에 해당하며, 블록별로 해시값이 생성되기 때문에 데이터의 무결성을 개별적으로 확인할 수 있는 장점이 있다. 이렇게 계산된 Merkle Root는 블록체인 서버와의 연계를 통해 안전하게 저장되며, 네트워크 복구 후 검증하는 과정에서 기준값으로 활용된다. 특히, 네트워크 단절 중에 변경되거나 추가된 경로 데이터가 있는 경 우, 블록체인 서버에 저장된 Merkle Root와 비교하여 데이터의 변조 여부를 신속하게 확인할 수 있다. 이 러한 방식은 데이터의 무결성을 보장함과 동시에 경로 데이터의 신뢰성을 강화하는 데 중요한 역할을 한다. 경로 설정 알고리즘 예시: 머신러닝 기반 최적 경로 탐색 경로 설정 및 조정 기능은 머신러닝 기반의 경로 탐색 알고리즘을 활용하여 구현될 수 있다. 예를 들어, 강화학 습 알고리즘(Q-learning)을 사용하여 최적의 경로를 탐색할 수 있다. 표 19 최적 경로 탐색 알고리즘 예시 function findOptimalRoute(currentLocation, destination, obstacles) { const optimalRoute = []; // 최적 경로 저장 배열 // 경로 점수 계산 함수 function calculateScore(route) { return route.reduce((score, point) => score + point.distance, 0); } // 초기 경로 설정 let currentRoute = [currentLocation]; while (currentRoute[currentRoute.length - 1] !== destination) { // 주변 지점을 탐색하여 최적 경로 계산 const nearbyPoints = getNearbyPoints(currentRoute[currentRoute.length - 1], obstacles); nearbyPoints.sort((a, b) => calculateScore(a) - calculateScore(b)); currentRoute.push(nearbyPoints[0]); optimalRoute.push(nearbyPoints[0]); } return optimalRoute; } 상기 알고리즘은 비행체의 현재 위치와 목적지 사이의 최적 경로를 탐색하는 과정을 포함하며, 탐색 과정에서 실시간으로 경로 데이터를 지속적으로 업데이트하고 저장할 수 있는 기능을 제공한다. 이 알고리즘은 비행체의 현재 위치에서 목적지까지의 경로를 효율적으로 계산하기 위해 장애물 정보, 공중권 제한 구역, 비행 경로의 혼 잡도 등을 고려하여 경로를 탐색한다. 또한, 탐색된 경로는 실시간으로 로컬 저장소에 저장되며, 필요 시 블록 체인 서버와의 연계를 통해 안전하게 기록된다. 이 과정은 네트워크 단절 상황에서도 기존 경로 데이터를 유지하고 복구된 후에 무결성을 검증하는 방식으로 데이터의 신뢰성과 안전성을 보장할 수 있다. 경로 데이터 로컬 저장 및 블록체인 서버 연계 본 발명은 경로 데이터를 로컬 저장소에 안전하게 저장하고, 블록체인 서버와의 연계를 통해 데이터 무결 성을 보장한다. 이 과정은 다음과 같은 방식으로 구현될 수 있다. 표 20경로 데이터 저장 및 블록체인 서버 전송 예시 const fs = require('fs'); // 경로 데이터를 로컬 저장소에 저장 function saveRouteData(routeData) { const data = JSON.stringify(routeData); fs.writeFileSync('routeData.json', data); } // 블록체인 서버로 데이터 전송 function sendToBlockchainServer(routeData) { // 블록체인 서버와의 연계 로직 구현 (예: HTTP POST 요청) console.log('Sending data to blockchain server:', routeData); } // 예시 경로 데이터 const routeData = { routeId: 'Route123', points: ['Point A', 'Point B', 'Point C'], timestamp: new Date().toISOString() }; saveRouteData(routeData); sendToBlockchainServer(routeData); 상기 코드 예시는 경로 데이터를 JSON 형식으로 변환하여 로컬 저장소에 안전하게 저장하고, 저장된 데이터를 블록체인 서버에 전송하는 과정을 포함한다. 이 과정은 비행체의 경로 정보가 손실되지 않도록 하기 위해 네트워크 단절 상황에서도 데이터를 안전하게 보관할 수 있도록 설계되었다. JSON 파일 형식으로 저장된 경로 데이터는 블록체인 서버와의 연계를 통해 기록되며, 이후 무결성 검증 및 데이터 동기화 과정에서 활용된 다. 또한, 경로 데이터는 Merkle Tree 기반의 해시 값을 사용하여 검증되며, 블록체인 서버에 안전하게 기 록되어 데이터 변조 및 손실로부터 보호된다. 기술적 효과 및 장점 본 발명은 Merkle Tree 기반의 검증 방식을 사용하여 데이터의 변조를 방지하고 신뢰성을 확보할 수 있도록 설 계되었다. 또한, 머신러닝 기반의 경로 설정 알고리즘을 활용하여 비행체의 최적 경로를 자동으로 탐색할 수 있 으며, 이를 통해 경로 탐색의 효율성을 극대화할 수 있다. 경로 데이터는 블록체인 서버에 안전하게 저장 되며, 데이터의 무결성을 검증할 수 있는 구조로 되어 있어 신뢰성을 더욱 강화한다. 더불어, 본 발명은 다양한 네트워크 환경에서도 효과적으로 작동할 수 있도록 설계되었으며, 다른 시스템과의 연계도 가능하여 확장성과 호환성을 동시에 확보할 수 있다. 예를 들어, 도시 내 복수의 드론이 동일 공중권을 사용하여 물류 배송을 수행하는 상황을 가정할 수 있다. 이때, 네트워크 장애로 인해 일부 드론이 블록체인 서버와의 연결이 끊어진 경우, 조작부는 로컬 저 장소를 활용하여 경로 데이터를 안전하게 유지한다. 이후 네트워크가 복구되면, 경로 데이터는 블록체인 서버 와 자동으로 동기화되며, 다른 드론들과의 경로 충돌 가능성을 평가하여 회피 경로를 설정한다. 예를 들어, 특정 지점에서 예상치 못한 건설 장비의 설치로 인해 경로가 변경되었을 때, 검증부는 이를 즉시 탐 지하고 새로운 경로를 설정하여 드론 간 충돌을 방지할 수 있다. 산업상 이용가능성 본 발명은 공중권 거래 및 검증 시스템을 통해 다양한 산업 분야에서 실질적인 활용이 가능하다. 특히, 항공 교 통 관리 시스템, 드론 운항 시스템, UAM(Urban Air Mobility) 서비스 등에서 공중권의 디지털화와 실시간 거래 및 검증 기능을 제공하여, 공중권의 효율적인 관리와 비행 경로의 안전성을 보장할 수 있다. 또한, 블록체인 기 술을 기반으로 한 거래 검증 방식은 거래의 투명성을 확보하고, 데이터의 변조를 방지하여 공공 및 민간 부문에서의 신뢰성 높은 운영을 가능하게 한다. 이러한 기술적 특성은 글로벌 시장에서도 광범위하게 적용될 수 있으 며, 각국의 항공 및 교통 관리 시스템에 통합되어 산업 전반에 걸쳐 새로운 비즈니스 기회를 창출할 것이다."}
{"patent_id": "10-2025-0044447", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명은 원 분할출원의 조작부를 중심으로, 도심 항공 이동체(UAM) 및 드론 조종사가 해당 조작부를 활 용하여 공중권 정보를 확인하고 실시간으로 최적 경로를 설정하며 충돌을 회피할 수 있도록 하는 시스템에 관한 것이다. 본 발명의 도면은 원 분할출원의 도면을 기반으로 하되, 본 발명의 특징인 네트워크 단절 상황에서의 운항 안전성과 데이터 동기화 기능을 강조하는 방식으로 설명된다. 도 1 : 본 발명의 공중권 기반 도심 항공 이동체(UAM) 및 드론의 실시간 경로 설정 및 충돌 회피 시스템의 전체 적인 구성을 개략적으로 도시한 도면이다. 조작부를 포함하여 블록체인 서버, 공중권 데이터베이스 , 검증부 등이 상호 연계되어 공중권 거래가 이루어지는 과정을 나타낸다. 본 발명에서는 특히 네트 워크 단절 발생 시 조작부가 독립적으로 공중권 정보를 유지하며 운항을 지속할 수 있도록 설계된 점이 강 조된다. 도 2 : 소유자가 존재하는 토지의 소유권이 상·하부에 미치는 입체적 권리를 도시한 도면이다. 공중권을 포함 하여 토지 상공의 권리가 어떻게 구성되는지를 설명한다. 본 발명은 기존의 공중권 구조를 기반으로, 각 공중권 영역에 대한 실시간 경로 설정 및 경고 발송 기능이 포함된 점이 특징이다. 도 3 : 미사용 공간에 대한 소유권 양도를 의미하는 본연의 공중권과 미사용 개발권의 임대를 의미하는 개발권 의 이전을 구분하여 설명하기 위해 도시한 도면이다. 본 발명에서는 특히 블록체인 서버를 이용하여 공중 권 거래의 승인 및 경로 설정을 자동으로 수행하는 기능이 포함된다. 도 4 : 조망권 및 일조권을 포함하는 사적 권리의 조정을 위하여 본 발명에 의해 안출된 공중권 명시 및 거래의 구체적인 활용 예를 도시한 도면이다. 본 발명에서는 특히 충돌 가능성을 사전에 예측하고, 자동으로 회피 경로 를 설정하는 기능이 추가되었다. 도 5 : 본 발명에서 네트워크 단절이 발생한 비행체의 경로 유지 및 경보 발송 과정을 도시한 도면이다. 조작부 는 네트워크 단절 발생 시 기존 경로 데이터를 로컬 저장소에 안전하게 저장하며, 독립적으로 경로를 유지 한다. 블록체인 서버 및 검증부는 네트워크 단절 비행체를 인지하여 타 비행체들에게 경보를 발송하 는 과정을 나타내며, 이 과정에서 블록체인 서버는 경보 메시지를 기록하고 이를 다른 비행체들에게 전파 한다. 또한, 검증부는 P2P 방식과 중앙 서버 경유 방식의 두 가지 방법을 통해 경보를 발송하며, 특히 P2P 방식에서는 인접 비행체 간의 직접적인 통신을 통해 네트워크 단절 상황에서도 신속하게 경고를 전달할 수 있도 록 설계되었다. 도 6 : 본 발명에서 네트워크 복구 후 조작부가 블록체인 서버와의 데이터 동기화를 수행하며 Merkle Tree 기반의 해시 검증을 통해 데이터의 무결성을 확인하는 과정을 도시한 도면이다. 조작부는 로컬 저장 소에 저장된 경로 데이터를 기반으로 새로운 Merkle Root를 계산하고, 이를 블록체인 서버에 저장된 Merkle Root와 비교하여 데이터의 무결성을 확인한다. 이 과정에서 블록체인 서버는 검증부와의 연계 를 통해 무결성 검증 결과를 기록하고, 모든 관련 노드로 데이터를 동기화한다. 또한, 동기화 과정에서 오류가 발생하거나 무결성 검증이 실패할 경우, 재동기화를 수행하여 데이터의 신뢰성을 확보하는 방식이 포함된다. 도 7 : 본 발명에서 경로 충돌 가능성을 분석하고, 자동으로 회피 경로를 설정하는 과정을 도시한 도면이다. 머 신러닝 모델 및 경로 탐색 알고리즘을 활용하여 다수의 항공 이동체 간 충돌 가능성을 예측하고, 최적의 회피 경로를 설정하는 방식이 표현된다. 이 과정에서 검증부는 실시간으로 수집된 경로 데이터를 분석하며, 예 상 경로 간의 충돌 가능성을 점수화하여 위험도가 높은 경로는 회피 경로로 자동 조정한다. 블록체인 서버(30 0)는 경로 변경 정보 및 회피 경로 설정 결과를 기록하고, 이를 다른 비행체들에게도 전파하여 시스템 전체의 안전성을 확보한다. 예를 들어, 도심 내에서 다수의 드론이 동일한 공중권을 이용하는 상황에서도 머신러닝 모 델을 사용하여 충돌 위험을 사전에 예측하고, 최적의 경로를 제시하는 과정이 포함된다."}
