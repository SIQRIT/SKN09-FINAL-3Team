{"patent_id": "10-2024-7014398", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0110567", "출원번호": "10-2024-7014398", "발명의 명칭": "제어 가능한 공간 비트 할당을 통한 신경 이미지 압축", "출원인": "퀄컴 인코포레이티드", "발명자": "양 양"}}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세서 구현형 방법으로서,인공 신경망의 인코더에서, 이미지 및 상기 이미지에 대응하는 공간 분할 맵을 수신하는 단계로서, 상기 공간분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 이미지 및 상기 이미지에 대응하는 공간 분할 맵을 수신하는 단계; 및상기 인코더를 통해, 제어 가능한 공간 비트 할당에 따라 상기 이미지를 압축하는 단계로서, 상기 제어 가능한공간 비트 할당은 학습된 양자화 빈 크기에 기반하는, 상기 제어 가능한 공간 비트 할당에 따라 상기 이미지를압축하는 단계를 포함하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 학습된 양자화 빈 크기에 기반하여 이미지의 잠재 표현과 공간 분할 맵을 양자화하는 단계; 및상기 이미지의 양자화된 잠재 표현 및 상기 양자화된 분할 맵을 디코더로 전송하는 단계를 더 포함하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 비-관심 영역들에 대한 비트 할당은 감소 계수를 통해 제어되는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 학습된 양자화 빈 크기는 스케일링 매개변수에 기반하여 조정되는, 프로세서 구현형방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 공간 분할 맵은 바이너리 분할 맵을 포함하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "프로세서 구현형 방법으로서,인공 신경망의 디코더에서, 인코더로부터의 비트 스트림을 수신하는 단계;상기 디코더를 통해, 상기 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을복구하는 단계로서, 상기 공간 분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 비트 스트림을 디코딩하여공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하는 단계;상기 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 단계로서, 상기 상호이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득제어 요소들을 적용하여 공간 분할 맵을 생성하는 단계; 및상기 디코더를 통해, 상기 공간 분할 맵에 기반하여 재구성된 이미지를 생성하는 단계를 포함하는, 프로세서 구현형 방법.공개특허 10-2024-0110567-3-청구항 8 제7항에 있어서, 상기 학습된 양자화 빈 크기는 상기 이미지의 각 공간 위치에 대한 레이트-왜곡 트레이드오프를 제어하기 위해 하나 이상의 관심 영역들에 기반하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서, 상기 상호 이득 제어 요소들은 상기 공간 분할 맵에 기반하여 구성되는, 프로세서 구현형방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제7항에 있어서, 상기 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 프로세서 구현형 방법."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "장치로서,메모리; 및상기 메모리에 커플링된 적어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는,인공 신경망의 인코더에서, 이미지 및 상기 이미지에 대응하는 공간 분할 맵을 수신하는 것으로서, 상기 공간분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 이미지 및 상기 이미지에 대응하는 공간 분할 맵을 수신하고; 그리고상기 인코더를 통해, 제어 가능한 공간 비트 할당에 따라 상기 이미지를 압축하는 것으로서, 상기 제어 가능한공간 비트 할당은 학습된 양자화 빈 크기에 기반하는, 상기 제어 가능한 공간 비트 할당에 따라 상기 이미지를압축하도록 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 적어도 하나의 프로세서는,상기 학습된 양자화 빈 크기에 기반하여 상기 이미지의 잠재 표현과 상기 공간 분할 맵을 양자화하고; 그리고상기 이미지의 양자화된 잠재 표현 및 상기 양자화된 분할 맵을 디코더로 전송하도록 더 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서, 상기 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서, 상기 적어도 하나의 프로세서는 비-관심 영역들에 대한 비트 할당을 감소 계수를 통해 제어하도록 더 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서, 상기 적어도 하나의 프로세서는 스케일링 매개변수에 기반하여 상기 학습된 양자화 빈 크기를조정하도록 더 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제11항에 있어서, 상기 공간 분할 맵은 바이너리 분할 맵을 포함하는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "장치로서,메모리; 및공개특허 10-2024-0110567-4-상기 메모리에 커플링된 적어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는,인공 신경망의 디코더에서, 인코더로부터의 비트 스트림을 수신하고;상기 디코더를 통해 상기 비트 스트림을 디코딩하여 공간 분할 맵 - 상기 공간 분할 맵은 하나 이상의 관심 영역들을 표시함 - 에 대응하는 이미지의 양자화된 잠재 표현을 복구하고;상기 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 것으로서, 상기 상호이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득제어 요소들을 적용하여 공간 분할 맵을 생성하고; 그리고상기 디코더를 통해, 상기 공간 분할 맵에 기반하여 재구성된 이미지를 생성하도록 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서, 상기 학습된 양자화 빈 크기는 상기 이미지의 각 공간 위치에 대한 레이트-왜곡 트레이드오프를 제어하기 위해 하나 이상의 관심 영역들에 기반하는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서, 상기 적어도 하나의 프로세서는 상기 공간 분할 맵에 기반하여 상기 상호 이득 제어 요소들을구성하도록 추가로 구성되는, 장치."}
{"patent_id": "10-2024-7014398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서, 상기 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 장치."}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공 신경망(ANN)을 사용하여 이미지를 압축하는 프로세서 구현 방법은 ANN의 인코더에서 이미지 및 이미지에 대 응하는 공간 분할 맵을 수신하는 것을 포함한다. 공간 분할 맵은 하나 이상의 관심 영역을 표시한다. 인코더는 제어 가능한 공간 비트 할당에 따라 이미지를 압축한다. 제어 가능한 공간 비트 할당은 학습된 양자화 빈 크기 에 기반한다."}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "관련 출원의 교차 참조 본 출원은, 2021년 11월 16일자로 출원된 발명의 명칭이 \"NEURAL IMAGE COMPRESSION WITH CONTROLLABLE SPATIAL BIT ALLOCATION\"인 미국 임시 특허 출원 제63/280,097호의 이익을 주장하는, 2022년 11월 15일자로 출 원된 발명의 명칭이 \"NEURAL IMAGE COMPRESSION WITH CONTROLLABLE SPATIAL BIT ALLOCATION\"인 미국 특허 출원 제17/987,844호의 우선권을 주장하며, 이들의 개시내용은 그 전체가 본원에 원용되어 명시적으로 포함된다."}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "기술분야 본 개시내용의 양태들은 일반적으로 신경망들에 관한 것이며, 보다 상세하게는, 인공 신경망을 사용하여 제어 가능한 공간 비트 할당을 통한 이미지 압축에 관련된 것이다."}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 신경망은 인공 뉴런들의 상호 연결된 그룹들(예를 들어, 뉴런 모델들)을 포함할 수 있다. 인공 신경망은 컴퓨팅 디바이스이거나, 컴퓨팅 디바이스에 의해 수행될 방법으로 표현될 수 있다. 컨볼루션(convolutional) 신경망은 피드-포워드(feed-forward) 인공 신경망의 한 유형이다. 컨볼루션 신경망은, 각각이 수용 필드 (receptive field)를 갖고 집합적으로 입력 공간을 타일링(tile)하는 뉴런들의 집합들을 포함할 수 있다. 컨볼 루션 신경망(CNN: convolutional neural network), 예컨대 심층 컨볼루션 신경망(DCN: deep convolutional neural network)은 다수의 응용 분야를 갖는다. 특히, 이러한 신경망 아키텍처(architecture)들은 이미지 인식, 패턴 인식, 음성 인식, 자율 주행, 및 다른 분류 작업들과 같은 다양한 기술에서 사용된다. 신경망은 영상 압축 및 이미지 압축과 같은 멀티미디어 압축에서 성공적으로 응용되고 있다. 이미지 압축은 이 미지 및 영상과 같은 멀티미디어의 전달에 유용하다. 하지만, 사용자들은 상이한 컴퓨팅 능력을 가진 다양한 컴퓨터 아키텍처를 가지고 있을 수 있으며, 이러한 디바이스들을 상이한 네트워크 조건들에서 동작할 수도 있다. 종래의 이미지 코덱 및 신경 이미지 압축 방식은, 각각의 이미지에서 다른 영역들보다 더 중요한/더 두 드러진 영역들이 있는지 여부에 관계없이, 상이한 공간적 위치들에 걸쳐 전체 이미지의 레이트 왜곡 트레이드오프(rate-distortion trade-off)에 대해 균일하게 최적화한다. 본 개시내용의 일 양태에서, 프로세서 구현형 방법은, 인공 신경망의 인코더에서, 이미지 및 그 이미지에 대응 하는 공간 분할 맵을 인공 신경망의 인코더에서 수신하는 단계로서, 공간 분할 맵은 하나 이상의 관심 영역을 표시하는, 상기 이미지 및 그 이미지에 대응하는 공간 분할 맵을 수신하는 단계를 포함한다. 방법은, 인코더를 통해, 제어 가능한 공간 비트 할당에 따라 이미지를 압축하는 단계로서, 제어 가능한 공간 할당은 학습된 양자 화 빈 크기에 기반하는, 상기 이미지를 제어 가능한 공간 비트 할당에 따라 이미지를 압축하는 단계를 더 포함 한다. 본 개시내용의 다른 양태는 메모리 및 메모리에 커플링된 하나 이상의 프로세서들을 갖는 장치에 관한 것이다. 프로세서(들)는, 인공 신경망의 인코더에서, 이미지 및 그 이미지에 대응하는 공간 분할 맵을 인공 신경망의 인 코더에서 수신하는 것으로서, 공간 분할 맵은 하나 이상의 관심 영역을 표시하는, 상기 이미지 및 그 이미지에 대응하는 공간 분할 맵을 수신하도록 구성된다. 프로세서(들)는, 인코더를 통해, 제어 가능한 공간 비트 할당 에 따라 이미지를 인코더를 통해 압축하는 것으로서, 제어 가능한 공간 할당은 학습된 양자화 빈 크기에 기반하 는, 상기 이미지를 제어 가능한 공간 비트 할당에 따라 이미지를 압축하도록 더 구성된다. 본 개시내용의 일 양태에서, 프로세서 구현형 방법은, 인코더로부터의 비트 스트림을 인공 신경망의 디코더에서 수신하는 단계를 포함한다. 방법은, 디코더를 통해, 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미 지의 양자화된 잠재 표현을 복구하는 단계로서, 공간 분할 맵은 하나 이상의 관심 영역을 표시하는, 상기 디코 더를 통해 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하는 단계를 더 포함한다. 방법은 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 단계 로서, 상호 이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 단계를 또한 더 포함한다. 이 방법은, 공간 분할 맵에 기반하여 재구성된 이미지를 디코더를 통해 생성하는 단계를 또한 포함한다. 본 개시내용의 다른 양태는 메모리 및 메모리에 커플링된 하나 이상의 프로세서들을 갖는 장치에 관한 것이다. 프로세서(들)는, 인코더로부터의 비트 스트림을 인공 신경망의 디코더에서 수신하도록 구성된다. 프로세서 (들)는, 디코더를 통해, 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복 구하는 것으로서, 공간 분할 맵은 하나 이상의 관심 영역을 표시하는, 상기 비트 스트림을 디코딩하여 공간 분 할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하도록 더 구성된다. 프로세서(들)는 양자화된 잠재 표 현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 것으로서, 상호 이득 제어 요소는 학습된 양 자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하도록 또한 더 구성된다. 프로세서(들)는 또한, 공간 분할 맵에 기반하여 재구성된 이미지를 디코더를 통해 생성하도록 또한 구성된다. 본 개시내용의 추가적인 특징들 및 이점들은 이하에서 설명될 것이다. 본 개시내용이 본 개시내용의 동일한 목 적들을 수행하기 위해 다른 구조들을 수정 또는 설계하기 위한 기초로 쉽게 이용될 수도 있다는 것이 당업자에 의해 인식되어야 한다. 또한, 이러한 등가의 구성들은 첨부된 청구범위에 기재된 바와 같은 본 개시내용의 교 시들로부터 벗어나지 않는다는 것이 당업자에 의해 인식되어야 한다. 본 개시내용의 특징인 것으로 여겨지는 신규한 특징들은, 추가적인 목적들 및 이점들과 함께, 그것의 구성 및 동작 방법 양자에 관하여, 첨부 도면들과 관련하여 고려될 때 이하의 설명으로부터 더 잘 이해될 것이다. 그러나, 도면들 각각은 단지 예시 및 설명의 목적을 위해 제공되고, 본 개시내용의 제한들의 정의로서 의도되지 않는다는 것이 명백하게 이해될 것이다."}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "첨부 도면들과 관련하여 아래에 제시되는 상세한 설명은 다양한 구성들의 설명으로 의도되며 설명되는 개념들이 실시될 수 있는 유일한 구성들만을 나타내는 것으로 의도되는 것은 아니다. 상세한 설명은 다양한 개념들의 철 저한 이해를 제공할 목적으로 특정 세부사항들을 포함한다. 그러나, 이들 개념들이 이들 특정 세부사항들 없이 실시될 수 있다는 점이 당업자들에게 분명할 것이다. 일부 경우에서, 잘 알려진 구조체들 및 컴포넌트들은 그 러한 개념들을 모호하게 하는 것을 회피하기 위해 블록선도 형태로 도시된다. 교시들에 기반하여, 당업자는, 본 개시내용의 임의의 다른 양태와 독립적으로 또는 그 양태와 조합하여 구현되 는지에 관계없이, 본 개시내용의 범위가 본 개시내용의 임의의 양태를 포괄하도록 의도된다는 것을 인식해야 한 다. 예를 들어, 기재된 임의의 수의 양태들을 사용하여 장치가 구현될 수 있거나 방법이 실시될 수 있다. 또 한, 본 개시내용의 범위는 제시되는 본 개시내용의 다양한 양태들에 부가하여 또는 그 외에 다른 구조, 기능, 또는 구조와 기능을 사용하여 실시되는 그러한 장치 또는 방법을 포괄하는 것으로 의도된다. 개시된 본 개시내 용의 임의의 양태가 청구항의 하나 이상의 요소들에 의해 구현될 수 있다는 것이 이해되어야 한다. 단어 \"예시적인\" 은 \"예, 실례, 또는 예시로서 역할을 하는 것\"을 의미하도록 사용된다. \"예시적인\" 것으로서 설명된 임의의 양태가 반드시 다른 양태들에 비해 유리하거나 또는 바람직한 것으로서 해석되어야 하는 것은 아 니다. 특정 양태들이 설명되지만, 이러한 양태들의 많은 변형들 및 치환들이 본 개시내용의 범위 내에 포함된다. 선 호되는 양태들의 일부 이익들 및 이점들이 언급되지만, 본 개시내용의 범위는 특정 이익들, 용도들 또는 목적들 에 국한된 것으로 의도되는 것은 아니다. 그보다, 본 개시내용의 양태들은 다른 기술들, 시스템 구성들, 네트 워크들 및 프로토콜들에 폭넓게 적용될 수 있는 것으로 의도되며, 이들 중 일부는 선호되는 양태들에 대한 하기 의 설명 및 도면들에서 예로서 설명된다. 상세한 설명 및 도면들은 제한하는 것이 아니라 개시내용의 단지 예 시일 뿐이고, 개시내용의 범위는 첨부된 청구범위 및 그 등가물들에 의해 정의된다. 설명된 바와 같이, 신경망은 영상 압축 및 이미지 압축과 같은 멀티미디어 압축에서 성공적으로 응용되고 있다. 이미지 압축은 이미지 및 영상과 같은 멀티미디어의 전달에 유용하다. 하지만, 사용자들은 상이한 컴퓨팅 능력 을 가진 다양한 컴퓨터 아키텍처를 가지고 있을 수 있으며, 이러한 디바이스들을 상이한 네트워크 조건에서 동 작할 수도 있다. 일부 종래의 이미지 코덱과 신경 이미지 압축 방식은 생물학적으로 영감을 얻은 것이다. 인간은 장면의 여러 부분을 서로 다른 해상도로 지각하며, 더 두드러진 관심 영역에 주목하는 경향이 있다. 이를 감안하여, 종래의 객체 기반 코덱은 두드러져 보이는 영역에 비균일하게 비트를 할당하지만 그 반대 급부로 나머지 영역의 왜곡이 증가하게 된다. 이러한 종래의 접근법은 낮은 레이트 제약 조건에서 지각 품질이 향상될 수 있게 한다. 영상 압축을 위해 다른 종래의 신경 코덱이 도입되었다. 그러나, 이러한 종래의 신경 코덱은 모든 공간 위치에서 균 일하게 동작한다. 즉, 이러한 종래의 신경 코덱은, 각각의 이미지에서 다른 영역들보다 더 중요한/더 두드러진 영역들이 있는지 여부에 관계없이, 상이한 공간적 위치들에 걸쳐 전체 이미지의 레이트-왜곡 트레이드오프(rate-distortion trade-off)에 대해 균일하게 최적화한다. 이들 및 다른 과제들을 해결하기 위해, 본 개시내용의 양태들에 따르면, 두드러진 측면을 포함하는 이미지의 영 역들(예를 들어, 하나 이상의 특정 관심 대상을 포함함)에 관한 의미론적 정보가 신경 압축과 조합되어 그러한 관심 영역들을 우선순위화할 수 있다. 예를 들어, 우선순위화는 이미지의 다른 영역들보다 관심 영역에 더 많 은 비트를 할당하여 이미지의 다른 영역들(예를 들어, 배경)에 비해 관심 영역들의 왜곡을 감소시킨다. 본 개시내용의 양태들은 화상 회의, 차량 카메라 녹화(예를 들어, 다른 자동차 또는 교통 표지판), 영상 감시 (예를 들어, 자동차 번호판 또는 사람의 얼굴), 포비티드 영상 스트리밍(예를 들어, 이미지의 일부가 고해상도 이고 나머지는 효과적으로 흐릿하게 처리되는 경우 - 적용 가능할 수 있음) 및 기타 영상 처리 응용 분야에 유 용할 수 있다. 도 1은 인공 신경망(예를 들어, 종단간 신경망)을 동작시키기 위해 구성된 중앙 처리 장치(CPU: central processing unit) 또는 다중 코어(multi-core) CPU를 포함할 수 있는 시스템 온 칩(SoC)의 예시적인 구현예를 예시한다. 변수들(예를 들어, 신경 신호 및 시냅스 가중치(synaptic weight)), 컴퓨팅 디바이스와 연 관된 시스템 매개변수(예를 들어, 가중치를 갖는 신경망), 지연, 주파수 빈(bin) 정보, 및 작업 정보가 신경망 처리 장치(NPU: neural processing unit)와 연관된 메모리 블록에, CPU와 연관된 메모리 블록에, 그 래픽 처리 장치(GPU: graphics processing unit)와 연관된 메모리 블록에, 디지털 신호 프로세서(DSP: digital signal processor)와 연관된 메모리 블록에, 메모리 블록에 저장될 수 있거나, 또는 다수의 블록들에 걸쳐 분산될 수 있다. CPU에서 실행되는 명령어들은 CPU와 연관된 프로그램 메모리로부터 로딩될 수 있거나, 또는 메모리 블록으로부터 로딩될 수 있다. SOC는 또한 특정 기능들에 맞춤화된 추가적인 프로세싱 블록들, 이를테면 GPU, DSP, 5G(fifth generation) 연결, 4G LTE(fourth generation long term evolution) 연결, Wi-Fi 연결, USB 연결, 블루투스 연 결 등을 포함할 수 있는 연결 블록, 및 예를 들어 제스처들을 검출 및 인식할 수 있는 멀티미디어 프로세 서를 포함할 수 있다. 일 구현예에서, NPU는 CPU, DSP 및/또는 GPU에서 구현된다. SOC는 또한 센서 프로세서, 이미지 신호 프로세서(ISP: image signal processor)들, 및/또는 글로벌 포지셔닝 시스템을 포함할 수 있는 내비게이션 모듈을 포함할 수 있다. SOC는 ARM 명령어 세트에 기반할 수 있다. 본 개시내용의 양태에서, 범용 프로세서에 로딩된 명령어 들은, 이미지 및 이미지에 대응하는 공간 분할 맵을 인공 신경망의 인코더에서 수신하기 위한 코드를 포함할 수 있다. 공간 분할 맵은 하나 이상의 관심 영역을 표시한다. 범용 프로세서는 또한, 제어 가능한 공간 비 트 할당에 따라 이미지를 인코더를 통해 압축하는 코드를 포함할 수 있다. 제어 가능한 공간 비트 할당은 학습 된 양자화 빈 크기에 기반한다. SOC는 ARM 명령어 세트에 기반할 수 있다. 본 개시내용의 양태에서, 범용 프로세서에 로딩된 명령어 들은, 인코더로부터의 비트 스트림을 인공 신경망의 디코더에서 수신하기 위한 코드를 포함할 수 있다. 범용 프로세서는 또한, 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하기 위해 비트 스트림을 디코더를 통해 디코딩하기 위한 코드를 포함할 수 있다. 공간 분할 맵은 하나 이상의 관심 영역을 표시한다. 범용 프로세서는 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하기 위한 코드를 더 포함할 수 있다. 상호 이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는다. 범용 프로세서는, 공간 분할 맵에 기반하여 재구성된 이미지를 디코더를 통해 생성하기 위한 코드를 더 포 함할 수 있다. 심층 기계 학습 아키텍처들은 각각의 계층에서 연속적으로 더 높은 추상화 레벨들의 입력들을 나타내도록 학습 함으로써 객체 인식 작업을 수행할 수 있으며, 이에 의해 입력 데이터의 유용한 특징 표현을 구축할 수 있다. 이 방식으로, 심층 기계 학습은 통상적인 기계 학습의 주요 병목 현상을 해결한다. 심층 기계 학습의 출현 전 에, 객체 인식 문제에 대한 기계 학습 접근법은, 어쩌면 얕은 분류기와 함께, 인간 설계 특징에 크게 의존했을 수 있다. 얕은 분류기는, 예를 들어, 2 클래스 선형 분류기일 수 있고, 여기서는 특징 벡터 성분들의 가중 합 이 임계치와 비교됨으로써 입력이 어느 클래스에 속하는지가 예측될 수 있다. 인간 설계 특징들은 도메인 전문 지식을 갖춘 엔지니어에 의해서 특정 문제 도메인에 맞게 조정된 템플릿들 또는 커널들일 수 있다. 대조적으로, 심층 기계 학습 아키텍처들은 인간 엔지니어가 설계할 수 있는 것과 유사한 특징들을 나타내기 위 해서 훈련을 통해 학습할 수 있다. 게다가, 심층 네트워크는 인간이 고려하지 않았을 수 있는 새로운 유형의 특징들을 나타내고 인식하기 위해 학습할 수 있다.심층 기계 학습 아키텍처는 특징들의 계층 구조(hierarchy)을 학습할 수 있다. 예를 들어, 시각적 데이터가 제 시되는 경우, 제1 계층은 입력 스트림에서 에지와 같은 비교적 간단한 특징들을 인식하는 것을 학습할 수 있다. 다른 실시예에서, 청각적 데이터가 제시되는 경우, 제1 계층은 특정 주파수에서 스펙트럼 파워를 인식하는 것을 학습할 수 있다. 제1 계층의 출력을 입력으로서 취하는 제2 계층은 시각적 데이터에 대한 간단한 형상들 또는 청각적 데이터에 대한 사운드들의 조합과 같은 특징들의 조합을 인식하는 것을 학습할 수 있다. 예1컨대, 상위 계층들은 시각적 데이터에서 복잡한 형상들 또는 청각적 데이터에서 단어들을 표현하는 것을 학습할 수 있다. 더 상위 계층들은 일반적인 시각 객체 또는 구어(spoken phrase)를 인식하기 위해 학습할 수 있다. 심층 기계 학습 아키텍처는 자연스러운 계층 구조를 갖는 문제에 적용될 때 특히 잘 수행될 수 있다. 예를 들 어, 모터 구동 차량의 분류는 휠, 윈드실드(windshield), 및 다른 특징을 인식하는 제1 학습으로부터 이익을 얻 을 수 있다. 이러한 특징들은 자동차, 트럭, 및 항공기를 인식하기 위해 상이한 방식들로 더 높은 계층들에서 조합될 수 있다. 신경망은 다양한 연결 패턴으로 설계될 수 있다. 피드-포워드 네트워크에서, 정보는 하위 계층들로부터 상위 계층들로 전달되고, 소정의 계층의 각각의 뉴런은 상위 계층들의 뉴런들과 통신한다. 계층 구조적 표현은 전술 한 바와 같이 피드-포워드 네트워크의 연속적인 계층들에 구축될 수 있다. 신경망은 또한 순환(recurrent) 또 는 피드백(톱-다운식(top-down)이라고도 함) 연결을 가질 수 있다. 순환 연결(recurrent connection)에서, 소 정의 계층의 뉴런으로부터의 출력은 동일한 계층의 다른 뉴런으로 통신될 수 있다. 순환 아키텍처는 시퀀스로 신경망에 전달되는 입력 데이터 청크(input data chunk)들 중 둘 이상에 걸쳐 있는 패턴들을 인식하는 데 도움 이 될 수 있다. 소정의 계층의 뉴런으로부터 하위 계층의 뉴런으로의 연결은 피드백(또는 톱-다운식(top- down)) 연결이라고 지칭된다. 많은 피드백 연결을 갖는 네트워크는 하이-레벨 개념의 인식이 입력의 특정 로우 -레벨 특징들을 판별하는 것을 도울 수 있을 때 도움이 될 수 있다. 신경망의 계층들 사이의 연결은 완전 연결되거나 국소 연결될 수 있다. 도 2a는 완전히 연결된 신경망의 일 실시예를 예시한다. 완전 연결 신경망에서, 제1 계층의 뉴런은 그의 출력을 제2 계층의 모든 뉴런에 전달함으로써, 제2 계층의 각각의 뉴런은 제1 계층의 모든 뉴런으로부터 입력을 수신하게 될 것이다. 도 2b는 국소적으로 연결된 신경망의 일 실시예를 예시한다. 국소 연결된 신경망에서, 제1 계층의 뉴런은 제 2 계층의 제한된 수의 뉴런에 연결될 수 있다. 보다 일반적으로, 국소 연결된 신경망의 국소 연결된 계층 은 계층 내의 각각의 뉴런이 동일하거나 유사한 연결 패턴을 가질 것이지만, 상이한 값들(예를 들어, 210, 212, 214, 및 216)을 가질 수 있는 연결 강도들을 갖도록 구성될 수 있다. 소정의 영역 내의 상위 계층 뉴런들이 네 트워크에 대한 총 입력의 제한된 부분의 속성들에 대한 훈련을 통해 튜닝되는 입력들을 수신할 수 있기 때문에, 국소 연결된 연결 패턴은 상위 계층에서 공간적으로 구별되는 수용 필드(receptive field)들을 발생시킬 수 있 다. 국소 연결된 신경망의 한 예는 컨볼루션 신경망(convolutional neural network)이다. 도 2c는 컨볼루션 신경망 의 일 실시예를 예시한다. 컨볼루션 신경망은 제2 계층의 각각의 뉴런에 대한 입력들과 연관된 연결 강도들이 공유되도록(예를 들어, 208) 구성될 수 있다. 컨볼루션 신경망들은 입력들의 공간적 위치가 의미 있 는 문제들에 매우 적합할 수 있다. 컨볼루션 신경망의 한 유형은 심층 컨볼루션 신경망(DCN: deep convolutional network)이다. 도 2d는 자동차 장착 카메라와 같은 이미지 캡처(capturing) 디바이스로부터 입력된 이미지로부터 시각적 특징들을 인식하도록 설계된 DCN의 상세한 실시예를 예시한다. 본 실시예의 DCN은 교통 표지판 및 교통 표지 판 상에 제공된 숫자를 식별하도록 훈련될 수 있다. 물론, DCN은 차선 표시를 식별하거나 교통 신호등을 식별하는 것과 같은 다른 작업들에 대해 훈련될 수 있다. DCN은 지도 학습(supervised learning)으로 훈련될 수 있다. 훈련 동안, DCN에는 속도 제한 표지판 의 이미지와 같은 이미지가 제시될 수 있고, 그런 다음 순방향 패스가 계산되어 출력을 생성할 수 있 다. DCN은 특징 추출부(feature extraction section) 및 분류부(classification section)를 포함할 수 있다. 이미지를 수신할 때, 컨볼루션 계층은 제1 특징 맵 세트를 생성하기 위해 컨볼루션 커널 들(도시되지 않음)을 이미지에 적용할 수 있다. 한 예로서, 컨볼루션 계층에 대한 컨볼루션 커널은 28x28 특징 맵을 생성하는 5x5 커널일 수 있다. 이 예에서, 4개의 상이한 특징 맵들이 제1 특징 맵 세트 에서 생성되기 때문에, 4개의 상이한 컨볼루션 커널들이 컨볼루션 계층에서 이미지에 적용되었다. 컨볼루션 커널들은 또한 필터 또는 컨볼루션 필터로 지칭될 수 있다. 제1 특징 맵 세트는 제2 특징 맵 세트을 생성하기 위해 최대 풀링 계층(max pooling layer)(도시되지 않음)에 의해 서브샘플링될 수 있다. 최대 풀링 계층은 제1 특징 맵 세트의 크기를 감소시킨다. 즉, 14x14와 같은 제2 특징 맵 세트의 크기는 28x28과 같은 제1 특징 맵 세트의 크기보다 작다. 감소된 크기는 메모리 소비를 감소시키면서 후속 계층에 유사한 정보를 제공한다. 제2 특징 맵 세트은 하나 이상 의 후속 특징 맵 세트(도시되지 않음)를 생성하기 위해 하나 이상의 후속 컨볼루션 계층(도시되지 않음)을 통해 추가로 컨볼루션될 수 있다. 도 2d의 예에서, 제2 특징 맵 세트은 컨볼루션되어 제1 특징 벡터를 생성한다. 또한, 제1 특징 벡터 는 제2 특징 벡터를 생성하기 위해 추가로 컨볼루션된다. 제2 특징 벡터의 각각의 특징은 \"표 지판(sign)\", \"60\" 및 \"100\"과 같은 이미지의 가능한 특징에 대응하는 숫자를 포함할 수 있다. 소프트맥 스 함수(softmax function)(도시되지 않음)는 제2 특징 벡터 내의 숫자들을 확률로 변환할 수 있다. 이와 같이, DCN의 출력은 하나 이상의 특징들을 포함하는 이미지의 확률이다. 본 예에서, \"표지판(sign)\" 및 \"60\"에 대한 출력에서의 확률들은 \"30\", \"40\", \"50\", \"70\", \"80\", \"90\" 및 \"100\"과 같은 출력의 다른 것들의 확률들보다 높다. 훈련 전에, DCN에 의해 생성된 출력은 부 정확할 가능성이 있다. 따라서, 출력과 타겟 출력(target output) 사이에서 오류(error)가 계산될 수 있 다. 타겟 출력은 이미지의 실측 자료(ground truth)(예를 들어, \"표지판\" 및 \"60\")이다. 그런 다음, DCN의 가중치들은 DCN의 출력이 타겟 출력과 더 근접하게 정렬되도록 조정될 수 있다. 가중치를 조정하기 위해, 학습 알고리즘은 가중치에 대한 기울기 벡터(gradient vector)를 계산할 수 있다. 기 울기는 가중치가 조정되면 오류가 증가하거나 감소할 양을 표시할 수 있다. 최상위 계층에서, 기울기는 끝에서 두번째 계층(penultimate layer)의 활성화된 뉴런과 출력 계층의 뉴런을 연결하는 가중치의 값에 직접 대응할 수 있다. 하위 계층들에서, 기울기는 가중치들의 값 및 상위 계층들의 계산된 오류 기울기들에 의존할 수 있다. 이어서, 오류를 줄이기 위해 가중치들이 조정될 수 있다. 가중치를 조정하는 이러한 방식은 신경망을 통한 \"역방향 패스\"를 수반하기 때문에 \"역전파(back propagation)\"로 지칭될 수 있다. 실제로, 가중치들의 오류 기울기가 작은 수의 예들에 걸쳐 계산될 수 있으므로, 계산되는 기울기는 실제 오류 기울기에 접근한다. 이러한 접근 방법은 확률적 경사 하강법(stochastic gradient descent)으로 지칭될 수 있 다. 확률적 경사 하강법은, 전체 시스템의 달성 가능한 오류율이 감소하는 것을 중단할 때까지 또는 오류율이 타깃 레벨에 도달할 때까지, 반복될 수 있다. 학습 후에, DCN에는 새로운 이미지들이 제시될 수 있고, 네트워 크를 통한 순방향 패스는 DCN의 추론 또는 예측으로 간주될 수 있는 출력을 산출할 수 있다. 심층 신뢰 신경망(DBN: Deep Belief Network)은 다수의 은닉 노드 계층을 포함하는 확률론적 모델이다. DBN은 훈련 데이터 세트들의 계층 구조 표현을 추출하는 데 사용될 수 있다. DBN은 RBM(Restricted Boltzmann Machine)의 계층을 쌓아서 획득될 수 있다. RBM은 입력들의 세트에 대한 확률 분포를 학습할 수 있는 인공 신 경망의 한 유형이다. RBM은 각각의 입력이 분류되어야 하는 클래스에 대한 정보가 없을 때 확률 분포를 학습할 수 있기 때문에, 비지도 학습에서 종종 RBM이 사용된다. 하이브리드 비지도 및 지도 패러다임을 사용하여, DBN 의 하부 RBM은 비지도 방식으로 훈련될 수 있고, 특징 추출기의 역할을 할 수 있고, 상부 RBM은 (이전 계층 및 타겟 클래스로부터의 입력의 조인트 분포(joint distribution) 상에서) 지도 방식으로 훈련될 수 있고, 분류기 의 역할을 할 수 있다. 심층 컨볼루션 신경망(DCN)은 추가적인 풀링 및 정규화 계층들로 구성된 컨볼루션 네트워크의 네트워크이다. DCN은 많은 작업에 대한 최신 기술 성능을 달성했다. DCN들은 입력 및 출력 타겟들 둘 모두가 많은 예시들에 대해 알려져 있고 경사 하강법의 사용으로 네트워크의 가중치들을 수정하는 데 사용되는 지도 학습을 사용하여 훈련될 수 있다. DCN은 피드-포워드 네트워크일 수 있다. 또한, 상기에서 설명된 바와 같이, DCN의 제1 계층의 뉴런으로부터 다 음 상위 계층의 뉴런들의 그룹으로의 연결들은 제1 계층의 뉴런들에 걸쳐 공유된다. DCN의 피드-포워드 및 공 유 연결들은 빠른 프로세싱을 위해 활용될 수 있다. DCN의 계산 부담은, 예를 들어, 순환 또는 피드백 연결들 을 포함하는 유사한 크기의 신경망의 계산 부담보다 훨씬 적을 수 있다. 컨볼루션 네트워크의 각각의 계층의 프로세싱은 공간적으로 불변인 템플릿 또는 기저 투영(basis projection)으 로 간주될 수 있다. 입력이 컬러 이미지의 레드, 그린 및 블루 채널들과 같은 다수의 채널들로 먼저 분해되면, 해당 입력에 대해 훈련된 컨볼루션 네트워크는 이미지의 축들을 따른 2개의 공간 차원 및 컬러 정보를 캡처하는 제3 차원을 갖는 3차원으로 간주될 수 있다. 컨볼루션 연결들의 출력들은 후속 계층에서 특징 맵을 형성하기 위해 고려될 수 있고, 특징 맵의 각각의 요소(예를 들어, 220)는 이전 계층의 뉴런들의 범위(예를 들어, 특징맵들)로부터 그리고 다수의 채널들 각각으로부터 입력을 수신한다. 특징 맵의 값들은 비-선형성, 이를테 면 max(0, x)인 교정(rectification)을 통해 더 프로세싱될 수 있다. 인접한 뉴런들로부터의 값들은 더 풀링될 수 있으며, 이는 다운 샘플링에 대응하고, 추가적인 국소(local) 불변 및 차원 감소를 제공할 수 있다. 백색화 (whitening)에 대응하는 정규화는 또한 특징 맵에서 뉴런들 간의 측방 억제를 통해 적용될 수 있다. 심층 기계 학습 아키텍처들의 성능은, 더 많은 라벨링된 데이터 포인트들이 이용 가능하게 됨에 따라 또는 컴퓨 팅 능력이 증가함에 따라 증가할 수 있다. 현대의 심층 신경망들은, 단지 15년 전에 일반 연구원에게 이용 가 능하였던 것보다 수천 배 더 많은 컴퓨팅 자원들로 일상적으로 훈련된다. 새로운 아키텍처들 및 훈련 패러다임 들은 심층 기계 학습의 성능을 더욱 향상시킬 수 있다. 수정된 선형 유닛들은 기울기 소실로 알려진 훈련 문제 를 줄일 수 있다. 새로운 훈련 기술들은 과대-적합(over-fitting)을 줄여서, 더 큰 모델들이 더 나은 일반화를 달성하게 할 수 있다. 캡슐화 기술은 소정의 수용 필드에서 데이터를 추상화하고 전반적인 성능을 더욱 향상시 킬 수 있다. 도 3는 심층 컨볼루션 신경망을 예시하는 블록선도이다. 심층 컨볼루션 신경망은 연결 및 가중치 공 유에 기초하여 다수의 상이한 유형의 계층을 포함할 수 있다. 도 3에 도시된 바와 같이, 심층 컨볼루션 신경망 은 컨볼루션 블록들(354A, 354B)을 포함한다. 컨볼루션 블록들(354A, 354B) 각각은 컨볼루션 계층 (CONV), 정규화 계층(LNorm), 및 최대 풀링 계층(MAX POOL)으로 구성될 수 있다. 컨볼루션 계층들은 특징 맵을 생성하기 위해 입력 데이터에 적용될 수 있는 하나 이상의 컨볼루션 필터들 을 포함할 수 있다. 비록 2개의 컨볼루션 블록들(354A, 354B)만이 도시되지만, 본 개시내용은 그렇게 제한되지 않으며, 대신에, 설계 선호도에 따라 임의의 수의 컨볼루션 블록들(354A, 354B)이 심층 컨볼루션 신경망에 포함될 수 있다. 정규화 계층은 컨볼루션 필터들의 출력을 정규화할 수 있다. 예를 들어, 정규화 계층 은 화이트닝(whitening) 또는 측방 억제(lateral inhibition)를 제공할 수 있다. 최대 풀링 계층은 국소 불변 및 차원 감소를 위해 공간에 걸쳐 다운 샘플링 집성을 제공할 수 있다. 예를 들어, 심층 컨볼루션 신경망의 병렬 필터 뱅크들은 SOC의 CPU 또는 GPU에 로딩되어, 높은 성능 및 저전력 소비를 달성할 수 있다. 대안적인 실시형태들에서, 병렬 필터 뱅크들은 SOC의 DSP 또는 ISP에 로딩될 수 있다. 추가적으로, 심층 컨볼루션 신경망은 센서들 및 내비게이션에 각각 전 용되는 센서 프로세서 및 내비게이션 모듈과 같은, SOC 상에 존재할 수 있는 다른 프로세싱 블 록들에 액세스할 수 있다. 심층 컨볼루션 신경망은 또한 하나 이상의 완전히 연결된 계층들(FC1 및 FC2)을 포함할 수 있다. 심 층 컨볼루션 신경망은 로지스틱 회귀(logistic regression)(LR) 계층을 더 포함할 수 있다. 심층 컨볼루션 신경망의 각각의 계층(356, 358, 360, 362, 364) 사이에는 업데이트될 가중치들(도시되지 않음) 이 있다. 계층들(예를 들어, 356, 358, 360, 362, 364) 각각의 출력은 컨볼루션 블록들(354A) 중 제1 컨볼루 션 블록에서 공급되는 입력 데이터(예를 들어, 이미지들, 오디오, 영상, 센서 데이터 및/또는 다른 입력 데이터)로부터 계층 구조적 특징 표현들을 학습하기 위해 심층 컨볼루션 신경망에서 계층들(예를 들어, 356, 358, 360, 362, 364)의 연속되는 하나의 입력의 역할을 할 수 있다. 심층 컨볼루션 신경망의 출력은 입력 데이터에 대한 분류 스코어이다. 분류 스코어는 확률들의 세트일 수 있으며, 여기서 각각 의 확률은 입력 데이터가 특징들의 세트로부터의 특징을 포함할 확률이다. 도 4는 인공지능(AI: artificial intelligence) 기능들을 모듈화할 수 있는 예시적인 소프트웨어 아키텍처(40 0)를 예시하는 블록선도이다. 아키텍처를 사용하여, SoC의 다양한 프로세싱 블록들(예컨대, CPU, DSP, GPU 및/또는 NPU)로 하여금, 본 개시내용의 양태들에 따라, AI 애플리케이션에 대한 훈련 후 양자화에 대해 개시된 바와 같이 적응형 라운딩(adaptive rounding)을 지원하게 할 수 있는 애플리케이 션들이 설계될 수 있다. AI 애플리케이션은 예를 들어, 디바이스가 현재 동작하는 위치를 표시하는 장면의 검출 및 인식을 제공할 수 있는 사용자 공간에 정의된 기능들을 호출하도록 구성될 수 있다. AI 애플리케이션은, 예를 들어, 인식된 장면이 사무실인지, 강의실인지, 식당인지 또는 호수와 같은 실외 환경인지에 따라 마이크로폰 (microphone) 및 카메라를 상이하게 구성할 수 있다. AI 애플리케이션은 AI 함수 API(application programming interface)에서 정의된 라이브러리와 연관된 컴파일된 프로그램 코드에 대한 요청을 할 수 있 다. 이러한 요청은 궁극적으로, 예를 들어 영상 및 포지셔닝 데이터에 기초하여 추론 응답을 제공하도록 구성 된 심층 신경망의 출력에 의존할 수 있다.런타임 프레임워크(runtime framework)의 컴파일된 코드일 수 있는 런타임 엔진(engine)은 AI 애플리케이 션에 추가로 액세스 가능할 수 있다. AI 애플리케이션은 런타임 엔진으로 하여금, 예를 들어, 특정 시간 간격으로 추론을 요청하게 하거나 또는 애플리케이션의 사용자 인터페이스(interface)에 의해 검출된 이벤 트(event)에 의해 트리거링(trigger)되게 할 수 있다. 추론 응답을 제공하게 될 때, 런타임 엔진은 결국, SoC 상에서 실행되는 커널과 같은 운영 체제(OS: operating system) 공간 내의 운영 체제에 신 호를 전송할 수 있다. 운영 체제는 결국, CPU, DSP, GPU, NPU, 또는 이들의 어떤 조합 상에서 양자화의 연속 완화가 수행되게 할 수 있다. CPU는 운영 체제에 의해 직접 액세스될 수 있고, 다 른 프로세싱 블록들은 각각 DSP, GPU 또는 NPU에 대한 드라이버(414, 416 또는 418)와 같은 드 라이버를 통해 액세스될 수 있다. 예시적인 예에서, 심층 신경망은 CPU, DSP 및 GPU와 같은 프 로세싱 블록들의 조합 상에서 실행되도록 구성될 수 있거나, 또는 NPU 상에서 실행될 수 있다. 애플리케이션(예를 들어, AI 애플리케이션)은 예를 들어, 디바이스가 현재 동작하는 위치를 표시하는 장면 의 검출 및 인식을 제공할 수 있는 사용자 공간에 정의된 기능들을 호출하도록 구성될 수 있다. 애플리케 이션은 예를 들어, 인식된 장면이 사무실인지, 강의실인지, 식당인지 또는 호수와 같은 실외 환경인지에 따라 마이크로폰 및 카메라를 상이하게 구성할 수 있다. 애플리케이션은 현재 장면의 추정치를 제공하도 록 장면 검출 API(application programming interface)에서 정의된 라이브러리와 연관된 컴파일된 프로그 램 코드에 대한 요청을 할 수 있다. 이러한 요청은 궁극적으로, 예컨대 영상 및 포지셔닝 데이터에 기초하여 장면 추정치들을 제공하도록 구성된 차동 신경망의 출력에 의존할 수 있다. 런타임 프레임워크의 컴파일된 코드일 수 있는 런타임 엔진은 애플리케이션에 추가로 액세스 가능할 수 있다. 애플리케이션은 런타임 엔진으로 하여금, 예를 들어 특정 시간 간격으로 장면 추정치를 요청하 게 하거나 또는 애플리케이션의 사용자 인터페이스에 의해 검출된 이벤트에 의해 트리거링되게 할 수 있다. 장 면을 추정하게 될 때, 런타임 엔진은 결국, SoC 상에서 실행되는 커널과 같은 운영 체제에 신호 를 전송할 수 있다. 운영 체제는 결국, CPU, DSP, GPU, NPU, 또는 이들의 어떤 조 합 상에서 계산이 수행되게 할 수 있다. CPU는 운영 체제에 의해 직접 액세스될 수 있고, 다른 프로세싱 블록들은 DSP에 대한, GPU에 대한 또는 NPU에 대한 드라이버(414 내지 418)와 같은 드라이버를 통해 액세스될 수 있다. 예시적인 예에서, 차동 신경망은 CPU 및 GPU와 같은 프로세싱 블록들의 조 합 상에서 실행되도록 구성될 수 있거나, 또는 NPU 상에서 실행될 수 있다. 설명한 바와 같이, 본 개시내용의 양태들은 신경 이미지 압축에 관한 것이다. 본 개시내용의 양태들에 따르면, 두드러진 측면을 포함하는 이미지의 영역들(예를 들어, 하나 이상의 특정 관심 대상을 포함함)에 관한 의미론적 정보가 신경 압축과 조합되어 그러한 관심 영역들을 우선순위화할 수 있다. 예를 들어, 우선순위화는 이미지의 다른 영역들보다 관심 영역에 더 많은 비트를 할당하여 이미지의 다른 영역들(예를 들어, 배경)에 비해 관심 영 역들의 왜곡을 감소시킨다. 영상 프레임은 타임 스텝 I에서 로 정의될 수 있으며, 여기서 H는 높이, W는 폭이다. 그러면 영 상 시퀀스는 , 프레임으로 표시될 수 있다. 영상 시퀀스에 대응하는 바이너리 관심 영역(ROI: region of interest) 마스크의 시퀀스는 로 정의될 수 있으며, 여기서 이다. 하나의 신경 영상 코덱은 I-프레임 코덱과 P-프레임 코덱이 포함한다. I-프레임 코덱은 개별 프레임 를 독 립적으로 인코딩하여 재구성 를 생성하는 평균 스케일 하이퍼프라이어 오토인코더(AE: mean-scale hyperprior auto encoder)이다. P-프레임 코덱은 두 개의 하이퍼프라이어 AE로 구성될 수 있다. 제1 하이퍼프라이어 AE인P-프레임 흐름 하이퍼프라이어 AE는 이전 재구성 과 현재 프레임 로부터 스케일-공간 흐름 를 추정하 여 이전 재구성을 로 워핑(warp)하는 데 사용될 수 있다. 제2 하이퍼프라이어 AE인 P-프레임 잔여 하이퍼프 라이어 AE는 잔여 를 인코딩한다. 최종 재구성 는 워핑된 예측 와 추정 잔여 를 더하여 얻 을 수 있다. ,로 표시되는 각 하이퍼프라이어 AE의 잠재 코드들은 정수 값들로 반올림된 다음에 각각 의 하이퍼-디코더에 의해 추정된 이전 매개변수들을 사용하여 엔트로피 코딩될 수 있다. 본 개시내용의 양태들은 잠재 스케일링을 사용하여 공간 비트 할당을 제어하는 방법을 제공한다. 양자화 단계 크기를 변경하기 위해 잠재에 스케일링 계수를 적용하여 레이트와 왜곡 사이의 트레이드오프들을 달리할 수 있 다. 설명을 쉽게 하기 위해, I-프레임 하이퍼프라이어 AE에 대한 잠재 스케일링을 설명한다. 그러나, 동일한 잠재 스케일링 프로세스가 P-프레임 잔여 하이퍼프라이어 AE에도 적용될 수 있음을 이해해야 한다. 본 개시내용의 양태에 따라, 이득 하이퍼프라이어 AE로 지칭되는 하이퍼프라이어 유사 네트워크가 제공된다. 이득 하이퍼프라이어 AE는 ROI 마스크 를 잠재 코드 로 인코딩할 수 있다. 잠재 코드 는 공간적으로 나 채널 측면에서 잠재 변수 와 동일한 차원을 공유하는 이득 변수 로 디코딩될 수 있다. 반면, 종래의 잠재 스케일링은 채널별 이득만을 사용한다. 잠재 는 추정 공간 이득 변수 의 역수로 스케일링될 수 있고, 여기서 이다. 이러한 방식으로, 이득은 단지 양자화 그리드를 덜 조밀하게 만들 수 있으며, 이로 인해 해당 영역들에 더 적은 비트들이 할당될 수 있게 된다. 평균 μ와 스케일 σ는 I-프레임 하이퍼-디코더에 의해 추정된 이전 매개변수들로 표시될 수 있다. 양자화 단계에서, 스케일링된 잠재 는 그의 이전 평 균 에 의해 중심화될 수 있으며, 여기서 는 요소별 분할이다. 다음, 반올림 연산자 가 에 적용되어 하이퍼프라이어-인코더가 학습한 추정 평균 μ가 그리드에 위치될 수 있다. 그런 다 음 오프셋 가 다시 더해질 수 있다. 역-양자화된 잠재 가 양자화 블록 뒤에 를 곱함으로써 얻 어질 수 있다. 즉, 역-양자화된 잠재 은 다음에 의해 주어질 수 있다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서 ⊙는 요소별 곱셈을 나타낸다. 역-양자화된 잠재 은 재구성된 프레임 를 생성하기 위해 디코 더로 패싱될 수 있다. 레이트 계산과 엔트로피 코딩을 위해, 의 수정된 확률 는 다음과 같이 사용된 다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "식 2에 표시된 것처럼, 잠재 스케일링은 양자화 그리드 또는 빈 폭을 효과적으로 변경하는 것으로 해석될 수 있 다. 실제로, 식 3에서와 같이, 엔트로피 코딩의 경우 양자화 그리드를 변경하지 않고 정수 그리드로 반올림하고 이전 것을 적절하게 스케일링할 수 있다. 설명된 바와 같이, P-프레임 잔여 잠재 코드 에도 동일한 프로 세스가 적용될 수 있다. 레이트-왜곡(R-D) 손실은 ROI 마스크를 고려하도록 적응될 수 있다. 영상 시퀀스 x의 모든 프레임에 대한 레이 트 및 왜곡은 대응하는 ROI 마스크 s와 합산될 수 있다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서, β는 레이트-왜곡 트레이드오프 변수이다. 는 바이너리 ROI 마스크와 관련된 수정된 평균 제곱 오차 (MSE)인 왜곡 손실을 나타낸다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "여기서, 평균은 이미지 차원에 대한 평균을 계산하고, γ는 비-ROI에 대한 페널티, 는 제곱 오차, 는 채널 차원에 대한 브로드캐스트이다. 또한, 레이트 손실 은 모델에 존재하는 각 잠재 변수의 하이퍼프라이어에 의해 추정된 교차 엔트로피 로 계산된다. 암시적 ROI의 경우, 레이트 손실 은 다음과 같다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "잠재 스케일링 ROI의 레이트 손실 에는 I-프레임 하이퍼프라이어 AE의 잠재 스케일링을 위한 잠재 변수 와 P-프레임 잔여 하이퍼프라이어 AE의 잠재 스케일링을 위한 잠재 변수 도 포함된다. 그러면, 잠재 스케일 링 ROI의 레이트 손실은 다음과 같이 주어진다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "하이퍼 잠재 코드들의 레이트도 훈련 중 레이트 손실의 일부로 사용되지만, 여기서는 단순화를 위해 식으로 표 현하지 않는다. 실제로, ROI 마스크 와 의 두 가지 추가 레이트 기여도는 모델의 표준 레이트 구성요소 와 에 비해 아주 작은 부분일 뿐이다. 도 5는 본 개시내용의 양태들에 따른, 이득 제어를 통한 신경 압축을 위한 예시적인 아키텍처를 예시하는 블록선도이다. 아키텍처는 인코더 및 디코더를 포함할 수 있다. ATRA는 또한 하이퍼-인 코더 및 하이퍼-디코더를 포함할 수 있다. 하이퍼-인코더 및 하이퍼-디코더는 인코더 와 디코더 사이의 압축 파이프라인을 관리할 수 있다. 인코더는, 예컨대, 범GDN(general divisive normalization layer)과 같은 활성화 계층으로 인터리빙된 다 수의 컨볼루션 계층(Conv)을 포함할 수 있다. 컨볼루션 계층들은 이미지와 같은 입력을 연속적으로 처리 하여 입력의 특징들을 추출하고 입력의 잠재 표현(코드)을 생성할 수 있다. 잠재 표현(코 드)은 입력에 대한 분할 맵에 대응할 수 있다. 분할 맵은 입력 내의 객체 위치의 윤곽과 같은 입력의 공간 분할을 표시할 수 있다. 즉, 입력의 공간 분할은 입력의 하나 이상의 관심 영역(예를 들어, 물체 또는 사람)을 표시할 수 있다. 분할 맵은 이진 분할 맵일 수 있다. 즉, 분할 맵은 이진 값 들을 사용하여 분할 맵의 영역이 관심 영역인지를 표시할 수 있다. 예를 들어, 관심 영역은 값 1을 사용하여 표시될 수 있고, 값 0은 영역이 관심 영역이 아님을 표시할 수 있다(예를 들어, 배경). 그러나, 본 개시내용은 그렇게 제한되지 않으며, 일부 양태에서는 분할이 연속적일 수도 있다. 예컨대, 분할은 다수의 관심 영역을 포 함할 수 있으며, 연속 값을 사용하여 영역의 우선순위 또는 상대적 중요성을 표시할 수 있다. 다른 한편, 디코더는 인코더에 대해 대칭적으로 구성될 수 있다. 예컨대, 도 5의 예에 도시된 바와 같이, 디코더는 다수의 트랜스포스(transpose) 컨볼루션 계층(Tconv)들을 포함할 수 있으며, 이는 역 GDN(IGDN: inverse GDN)과 같은 활성화 함수로 인터리빙될 수 있다. 이와 같이, 디코더는 잠재 표현(코드)을 수신할 수 있다. 디코더는 잠재 표현(코드)을 디코딩하고 입력의 재구성 을 생성하기 위해 연속적인 인터리빙된 계층들(예를 들어, Tconv-IGDN)를 통해 잠재 표현(코드)을 처 리할 수 있다. 하이퍼-인코더는 컨볼루션 계층(Conv) 세트를 포함한다. 컨볼루션 계층들은 정류기 선형 유닛(ReLU)과 같 은 활성화 함수로 인터리빙될 수 있다(도시되지 않음). 하이퍼-인코더는 입력의 잠재 표현(코 드)을 수신한다. 하이퍼-인코더는 입력의 잠재 표현(코드)을 연속적인 인터리빙 계층(예 를 들어, conv-ReLU)들을 통해 처리하여 하이퍼코드를 생성한다. 하이퍼코드는 반올림 블록을 통해 양자화되어 산술 인코더(AE)에 공급될 수 있다. 산술 인코더(AE)는 하이퍼코드를 엔트로피 코딩하여 하이퍼-디코더로 전송되는 비트 스트림으로 변환한다. 하이퍼-디코더는 하이퍼-인코더 에 대해 대칭적으로 구성될 수 있다. 하이퍼-디코더는 역 ReLU 활성화로 인터리빙될 수 있는 트랜스포스 컨볼루션 계층(Tconv)들의 세트를 포함할 수 있다. 하이퍼-디코더 는 산술 디코더(AD)를 통해 하이퍼-인코더로부터 전송된 비트 스트림을 수신할 수 있다. 산술 디코 더(AD)의 엔트로피는 비트 스트림을 디코딩하여 하이퍼코드를 복구한다. 하이퍼-디코더는 하이퍼코드를 디코딩하고 입력의 잠재 표현(코드)에 대응하는 위치(loc)와 스케일을 결정하기 위해 트랜포스 컨볼 루션 계층들의 연속적인 계층들을 통해 하이퍼코드를 처리한다. 압축 파이프라인은 이득 제어(예를 들어, 510, 512, 514 및 516)로 구성될 수 있다. 이득 제어는, 잠재 표현(코드)의 상이한 공간 위치들에 일률적으로 압축을 적용하는 대신, 잠재 표현(코드)의 상이한 공 간 위치들에 대해 제어 가능한 압축을 가능하게 한다. 즉, 입력의 상이한 영역들에 대해 압축이 달리 수 행될 수 있다. 양자화 빈 크기(이득으로 간주될 수 있음)는 입력의 더 두드러진 부분에 대해 조정될 수 있다. 예컨대, 압축 중에 비-ROI(예를 들어, 배경)보다 관심 영역(ROI)에 더 많은 비트가 할당될 수 있다. 압축 파이프라인은 입력의 공간 분할 맵에 대응하는 잠재 표현(코드)을 취한다. 이득은 분할 맵에 이득이 곱해지도록 적용된다. 이득 제어 요소는 레이트-왜곡 트레이드오프를 제어할 수 있다. 이득이 클수록 양자화 빈이 덜 조밀해져서, 결과적으로 레이트가 낮아지고 왜곡이 높아지게 된다. 즉, 이득 값 이 클수록 양자화 빈 크기가 커지고 반대로 이득 값이 작을수록 양자화 빈 크기가 작아질 수 있다. 이득은 입 력의 각 잠재 표현 코드에 적용되기 때문에, 입력 이미지의 각 공간 위치에 대해 레이트-왜곡 트레이 드오프를 다르게 제어할 수 있다. 일부 양태에서는, 이득이 분할 맵에 기반하여 구성될 수 있다. 이득의 출력은, 예를 들어, 반올림 블록을 통해 양자화될 수 있다. 양자화된 잠재는 산술 인코더(AE)에 공급될 수 있으며, 산술 인코더는 엔트로 피 코딩을 수행하여 양자화된 잠재를 비트 스트림으로 변환하고, 이는 디코더로 전송될 수 있다. 비트 스트림은 산술 디코더(AD)를 통해 수신될 수 있으며, 이 디코더는 비트 스트림을 디코딩하여 양자화된 잠 재 표현을 복구한다. 양자화된 잠재에 상호 이득이 적용된다. 분할 맵(코드)은 하이퍼-디코더(50 8)를 통해 결정된 위치 및 스케일 값들을 사용하여 생성된다. 도 6은 본 개시내용의 양태들에 따른, 영상을 프로세싱하기 위한 예시적인 아키텍처를 예시하는 블록선도 이다. 도 6을 참조하면, 아키텍처는 인코더 및 디코더를 포함한다. 아키텍처는 또한 보 조 네트워크를 포함할 수 있다. 보조 네트워크는 인코더 및 보조 디코더를 포함할 수 있 다. 보조 네트워크는 인코더와 디코더 사이의 압축 파이프라인을 관리할 수 있다. 도 6에 도 시된 바와 같이, 보조 인코더는 분할 맵을 입력으로 수신하고 분할 코드(세그-코드)를 생성한다. 분할 코 드는 압축 파이프라인의 이득 값들을 결정하는 보조 디코더에 공급된다.본 개시내용의 양태들에 따라, 아키텍처는 에 의해 주어진 목적 함수(objective function)에 따 라 훈련될 수 있으며, 여기서 R은 레이트이고, D는 왜곡이며, λ는 라그랑주 승수(LaGrange multiplier)이다. 목적 함수를 사용하여, 인공 신경망(ANN)은 레이트 R(비트 수) 및 왜곡 D의 균형을 맞추도록 훈련될 수 있다. 레이트 R은 엔트로피 코딩 단계의 비트 수에 대응하며 전송할 정보의 양을 결정한다. 레이트 R은 R = 분할-코 드 + 코드로 주어질 수 있다. 왜곡 D는 인코더의 입력과 디코더를 통한 재구성된 이미지 출력 간의 차이로 계산될 수 있다. 왜곡 D는 관심 영역(ROI)의 평균 제곱 오차(MSE)와 MSE(비-ROI)의 합으로 주어질 수 있다. 라그랑주 승수 λ는 왜곡 감소와 입력 전송에 사용되는 비트 레이트 감소라는 두 객체들 간의 트레이드 오프 균형을 맞추는 데 사용되는 트레이드오프 매개변수일 수 있다. 일부 양태에서, 분할 맵은 바이너리 분할 맵일 수 있다. 대안적으로, 공간 분할 맵은 관심 영역과 비-관심 영 역 사이의 원활한 전이를 제공함으로써 그러한 영역들 사이의 경계에서의 급격한 화질 변화를 줄일 수 있다. 도 7은 본 개시내용의 양태들에 따른, 신경 압축을 위한 훈련 목표의 계산을 예시하는 블록선도이다. 도 7을 참조하면, 분할 맵이 보조 네트워크(예를 들어, 도 6에 도시된 606 또는 도 5에 도시된 하이퍼-인코더 /하이퍼-디코더)에 공급된다. 분할 맵은 보조 네트워크의 인코더를 통해 수신된다. 인코더는 분할 맵을 처리하여 분할 맵의 잠재 표현(예를 들어, 도 5에 도시된 하이퍼코드)을 생 성할 수 있다. 분할 맵의 잠재 표현은 보조 네트워크의 디코더에 제공된다. 디코더는 잠 재 표현을 디코딩하여 이득 값을 생성한다. 이득 값은 메인 네트워크의 인코더를 통 해 생성된 입력의 잠재 표현에 적용된다. 이득 값은 입력의 잠재 표현에 적용되어 관심 영역에 기초한 잠재 표현의 압축을 제어한다. 도시된 바와 같이, 레이트는 보조 네트워크의 잠재 표현 의 레이트와 메인 네트워크의 잠재 표현의 레이트의 합에 의해 주어진다. 왜곡은 ROI에 기반하여 두 개의 부분으로 분리될 수 있다(예: ROI 또는 비-ROI). 도 6을 참조하여 설명한 바와 같이, λ 값은 전체 레이트-왜곡 트레이드오프를 제어한다. 비-ROI에 대한 왜곡의 경우, 초매개변수로 작용할 수 있는 감소 계수(reduction-factor)로 나눔으로써 디스카운트를 적용할 수 있다. 따라서, 목적 함수를 최소 화할 때, 감소 계수 초매개변수에 의해 제어되는 왜곡(예를 들어, ROI)에 더 많은 가중치를 부여할 수 있다. ROI에 대한 왜곡은 입력 이미지와 메인 네트워크를 통한 재구성된 이미지 출력 간의 차이에 ROI를 곱 한 값으로 표현될 수 있으며, 여기서 차이는 픽셀당 MSE에 따라 측정된다. 픽셀당 MSE는 요소별로 분할 맵을 곱한 후 평균화한다. 비-ROI에 대한 왜곡은 입력 이미지와 재구성된 이미지의 차이에 ROI의 보수를 곱한 값(예 를 들어, 1- ROI)으로 표현할 수 있다. 일부 양태에서, 훈련 목표는 복합 레이트 추정 및 복합 왜곡 추정이 포함할 수 있다. 훈련 목표는 ROI와 비- ROI에 기반하여 레이트-왜곡 트레이드오프의 균형을 맞추도록 조정될 수 있다. 예를 들어, 훈련 목표는 다음과 같이 표현될 수 있다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "여기서, 감소 계수는 초매개변수(예를 들어, 10)이다. 도 8은 본 개시내용의 양태들에 따른, 이득 제어를 통한 신경 압축을 더 예시하는 선도이다. 도 8에 도시 된 바와 같이, 비-관심 영역들에 대한 비트 할당은 또한 훈련 후(예를 들어, 이득 값들의 스케일링을 통해) 조 정될 수 있다. 이득은 분할 맵의 비-ROI에 대한 비트 할당을 제어하는 추가 매개변수 α에 의해 수정될 수 있 다. 따라서, 수정된 이득은 다음에 의해 주어질 수 있다:"}
{"patent_id": "10-2024-7014398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "예를 들어, 매개변수 α를 증가시킴으로써 비-ROI 영역들에 대한 비트 할당은 훈련 후 조정될 수 있다. 도 9a 및 도 9b는 본 개시내용의 양태들에 따른, 인공 신경망(ANN)을 사용하여 제어 가능한 공간 비트 할당을 통한 이미지 압축을 위한 예시적인 아키텍처(900 및 950)를 예시하는 블록선도이다. 도 9a를 참조하면, 예시적 인 아키텍처는 다수의 하이퍼프라이어 오토인코더(910, 920, 930)를 포함한다. 예시적인 아키텍처는각 하이퍼프라이어 오토인코더(910, 920, 930)에 대한 추가 입력으로서 ROI 마스크 를 사용하는 ROI 인지 프 레임워크를 제공한다. 주목할 점은, 인코더(902, 922, 932)들이 기존의 잠재 코드들에 관련 ROI 정보를 암시적 으로 저장할 수 있기 때문에 ROI 마스크가 디코더(904, 924, 934)들에 공급되지 않을 수 있다는 것이다. 디코 더(904, 924, 934)들은 ROI 마스크를 사용하지 않으므로, 마스크의 표현을 전송하는 것을 피할 수 있다. 도 9b에 도시된 바와 같이, 예시적인 아키텍처는 다수의 하이퍼프라이어 오토인코더(910, 920, 930)들을 포함한다. 또한, 예시 아키텍처는 다수의 이득 하이퍼프라이어 AE(952, 992)들도 포함한다. 이득 하이퍼 프라이어 AE(952, 992)들은 ROI 마스크 를 잠재 코드 로 인코딩하고, 이는 공간적 및 채널 측면에서 잠재 변수 와 동일한 차원을 공유하는 이득 변수 로 디코딩된다. 스케일 공간 워핑 유닛은 이득 변수 의 역수(여기서 )로 잠재 를 스케일링한다. 이러한 방식으로, 이득은 양자화 그리드를 덜 조밀하게 만들 수 있으며, 이로 인해 해당 영역들에 더 적은 비트들이 할당될 수 있게 된다. 평균 μ와 스케일 σ는 I- 프레임 하이퍼-디코더에 의해 추정된 이전 매개변수들로 표시될 수 있다. 양자화 단계에서, 스케일링된 잠재 은 그의 이전 평균 에 의해 중심화될 수 있으며, 여기서 는 요소별 분할 연산자이다. 반올림 연산자 가 에 적용되어 하이퍼-인코더가 학습한 추정 평균 μ가 그리드에 위치될 수 있 다. 그런 다음 오프셋 가 다시 더해질 수 있다. 역-양자화된 잠재 가 을 곱함으로써 얻어질 수 있다. 이어서, 역-양자화된 잠재 가 재구성된 프레임 을 생성하기 위해 디코더로 공급될 수 있다. 도 10 은 본 개시내용의 다양한 양태들에 따른, 인공 신경망(ANN)을 사용한 압축을 위한 프로세서 구현 방법 을 예시하는 흐름도이다. 도 10에 도시된 바와 같이, 블록 1002에서, 이미지 및 이미지에 대응하는 공간 분할 맵이 ANN의 인코더에서 수신된다. 공간 분할 맵은 하나 이상의 관심 영역을 표시한다. 도 5를 참조하여 설명한 바와 같이, 입력은 인코더에 의해 수신될 수 있다. 입력은, 예를 들어, 영상 또는 이미 지와 같은 시각적 입력일 수 있다. 블록 1004에서, 이미지는 제어 가능한 공간 비트 할당에 따라 인코더를 통해 압축된다. 제어 가능한 공간 비트 할당은 학습된 양자화 빈 크기에 기반한다. 도 5를 참조하여 설명한 바와 같이, 압축 파이프라인은 입력 의 공간 분할 맵에 대응하는 잠재 표현(코드)을 취한다. 이득은 분할 맵에 이득이 곱해지 도록 적용된다. 이득 제어 요소는 레이트-왜곡 트레이드오프를 제어할 수 있다. 이득이 클수록 양자화 빈이 덜 조밀해져서, 결과적으로 레이트가 낮아지고 왜곡이 높아지게 된다. 즉, 이득 값이 클수록 양자화 빈 크기가 커지고 반대로 이득 값이 작을수록 양자화 빈 크기가 작아질 수 있다. 이득은 입력의 각 잠재 표현 코드 에 적용되기 때문에, 입력 이미지의 각 공간 위치에 대해 레이트-왜곡 트레이드오프를 다르게 제어할 수 있다. 일부 양태에서는, 이득이 분할 맵에 기반하여 구성될 수 있다. 이득의 출력은, 예를 들어, 반올림 블록을 통해 양자화될 수 있다. 양자화된 잠재는 산술 인코더(AE)에 공급될 수 있으며, 산술 인코더는 엔트로피 코딩을 수행하여 양자화된 잠재를 비트 스트림으로 변환하고, 이는 디코더로 전송될 수 있다. 도 11은 본 개시내용의 다양한 양태들에 따른, 인공 신경망(ANN)을 이용한 압축을 위한 프로세스를 예시 하는 흐름도이다. 도 11에 도시된 바와 같이, 블록 1102에서, 비트 스트림은 ANN의 디코더를 통해 수신된다. 블록 1104에서, 비트 스트림은, 디코더를 통해 디코딩되어 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표 현을 복구한다. 공간 분할 맵은 하나 이상의 관심 영역을 표시한다. 예를 들어, 도 5를 참조하여 설명된 바와 같이, 산술 디코더는 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구 한다. 입력의 공간 분할은 입력의 하나 이상의 관심 영역(예를 들어, 물체 또는 사람)을 표시할 수 있다.블록 1106에서, 양자화된 잠재 표현에 상호 이득 제어 요소들이 적용되어 공간 분할 맵을 생성하며, 상호 이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는다. 예를 들어, 도 5를 참조하여 설명한 바와 같이, 상호 이득이 양자화된 잠재에 적용된다. 분할 맵(코드)은 하이퍼-디코더를 통해 결정된 위치 및 스케일 값들을 사용하여 생성된다. 블록 1108에서, 재구성된 이미지가 공간 분할 맵에 기반하여 생성된다. 구현예들은 다음의 번호 부여된 조항들에서 제공된다. 1. 프로세서 구현형 방법으로서, 인공 신경망의 인코더에서, 이미지 및 이미지에 대응하는 공간 분할 맵을 인공 신경망의 인코더에서 수신하는 단계로서, 공간 분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 이미지 및 이미지에 대응하는 공간 분할 맵을 수신하는 단계; 및 인코더를 통해, 제어 가능한 공간 비트 할당에 따라 이미지를 압축하는 단계로서, 제어 가능한 공간 비트 할당 은 학습된 양자화 빈 크기에 기반하는, 상기 이미지를 제어 가능한 공간 비트 할당에 따라 압축하는 단계를 포 함하는, 프로세서 구현형 방법. 2. 조항 1에 있어서, 학습된 양자화 빈 크기에 기반하여 이미지의 잠재 표현과 공간 분할 맵을 양자화하는 단계; 및 이미지의 양자화된 잠재 표현 및 양자화된 분할 맵을 디코더로 전송하는 단계를 더 포함하는, 프로세서 구현형 방법. 3. 조항 1 또는 조항 2에 있어서, 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제 공하는, 프로세서 구현형 방법. 4. 조항 1 내지 조항 3 중 어느 하나에 있어서, 비-관심 영역들에 대한 비트 할당이 감소 계수를 통해 제어되는, 프로세서 구현형 방법. 5. 조항 1 내지 조항 4 중 어느 하나에 있어서, 학습된 양자화 빈 크기가 스케일링 매개변수에 기반하여 조정되 는, 프로세서 구현형 방법. 6. 조항 1 내지 조항 5 중 어느 하나에 있어서, 공간 분할 맵이 바이너리 분할 맵을 포함하는, 프로세서 구현형 방법. 7. 프로세서 구현형 방법으로서, 인공 신경망의 디코더에서, 인코더로부터의 비트 스트림을 수신하는 단계; 디코더를 통해, 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하는 단계로서, 공간 분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 비트 스트림을 디코딩하여 공간 분할 맵 에 대응하는 이미지의 양자화된 잠재 표현을 복구하는 단계; 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 단계로서, 상호 이득 제어 요소들은 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득 제어 요소 들을 적용하여 공간 분할 맵을 생성하는 단계; 및 디코더를 통해, 공간 분할 맵에 기반하여 재구성된 이미지를 생성하는 단계를 포함하는, 프로세서 구현형 방법. 8. 조항 7에 있어서, 학습된 양자화 빈 크기는 이미지의 각 공간 위치에 대한 레이트-왜곡 트레이드오프를 제어 하기 위해 하나 이상의 관심 영역들에 기반하는, 프로세서 구현형 방법. 9. 조항 7 또는 조항 8에 있어서, 상호 이득 제어 요소들은 공간 분할 맵에 기반하여 구성되는, 프로세서 구현 형 방법. 10. 조항 7 내지 조항 9 중 어느 하나에 있어서, 학습된 양자화 빈 크기가 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 프로세서 구현형 방법. 11. 장치로서, 메모리; 및 메모리에 커플링된 적어도 하나의 프로세서를 포함하고, 적어도 하나의 프로세서는, 인공 신경망의 인코더에서, 이미지 및 그 이미지에 대응하는 공간 분할 맵을 인공 신경망의 인코더에서 수신하 는 것으로서, 공간 분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 이미지 및 그 이미지에 대응하는 공간 분할 맵을 수신하고; 그리고 인코더를 통해, 제어 가능한 공간 비트 할당에 따라 이미지를 압축하도록 구성하는 것으로서,제어 가능한 공간 비트 할당은 학습된 양자화 빈 크기에 기반하는, 상기 제어 가능한 공간 비트 할당에 따라 이미지를 압축하도록 구성되는, 장치. 12. 조항 11에 있어서, 적어도 하나의 프로세서는, 학습된 양자화 빈 크기에 기반하여 이미지의 잠재 표현과 공간 분할 맵을 양자화하고; 그리고 이미지의 양자화된 잠재 표현 및 양자화된 분할 맵을 디코더로 전송하도록 더 구성되는, 장치. 13. 조항 11 또는 조항 12에 있어서, 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 장치. 14. 조항 11 내지 조항 13 중 어느 하나에 있어서, 적어도 하나의 프로세서가 비-관심 영역들에 대한 비트 할당 을 감소 계수를 통해 제어하도록 더 구성되는, 장치. 15. 조항 11 내지 조항 14 중 어느 하나에 있어서, 적어도 하나의 프로세서가 스케일링 매개변수에 기반하여 학 습된 양자화 빈 크기를 조정하도록 더 구성되는, 장치. 16. 조항 11 내지 조항 15 중 어느 하나에 있어서, 공간 분할 맵은 바이너리 분할 맵을 포함하는, 장치 17. 장치로서, 메모리; 및 메모리에 커플링된 적어도 하나의 프로세서를 포함하고, 적어도 하나의 프로세서는, 인코더로부터의 비트 스트림을 인공 신경망의 디코더에서 수신하고; 디코더를 통해, 비트 스트림을 디코딩하여 공간 분할 맵에 대응하는 이미지의 양자화된 잠재 표현을 복구하는 것으로서, 공간 분할 맵은 하나 이상의 관심 영역들을 표시하는, 상기 비트 스트림을 디코딩하여 공간 분할 맵 에 대응하는 이미지의 양자화된 잠재 표현을 복구하고; 양자화된 잠재 표현에 상호 이득 제어 요소들을 적용하여 공간 분할 맵을 생성하는 것으로서, 상호 이득 제어 요소는 학습된 양자화 빈 크기에 대응하는 이득 값을 갖는, 상기 양자화된 잠재 표현에 상호 이득 제어 요소들 을 적용하여 공간 분할 맵을 생성하고; 그리고 디코더를 통해, 공간 분할 맵에 기반하여 재구성된 이미지를 생성하도록 구성되는, 장치. 18. 조항 17에 있어서, 학습된 양자화 빈 크기는 이미지의 각 공간 위치에 대한 레이트-왜곡 트레이드오프를 제 어하기 위해 하나 이상의 관심 영역들에 기반하는, 장치. 19. 조항 17 또는 조항 18에 있어서, 적어도 하나의 프로세서는 공간 분할 맵에 기반하여 상호 이득 제어 요소 들을 구성하도록 더 구성되는, 장치. 20. 조항 17 내지 조항 19 중 어느 하나에 있어서, 학습된 양자화 빈 크기는 상이한 관심 영역들에 대해 상이한 비트 할당을 제공하는, 장치. 일 양태에서, 수신 수단, 압축 수단, 양자화 수단, 전송 수단, 디코딩 수단, 적용 수단 및/또는 생성 수단은 전 술한 기능들을 수행하도록 구성된 CPU, CPU와 관련된 프로그램 메모리, 전용 메모리 블록, 완전 연결 계층들, NPU 및/또는 라우팅 연결 프로세싱 유닛일 수 있다. 다른 구성에서, 위에서 언급 된 수단은 위에서 언급된 수단에 의해 언급된 기능들을 수행하도록 구성된 임의의 모듈 또는 임의의 장치일 수 있다. 위에서 설명된 방법들의 다양한 동작들은 대응하는 기능들을 수행할 수 있는 임의의 적합한 수단에 의해 수행될 수 있다. 이러한 수단은 회로, 주문형 집적 회로(ASIC: application specific integrated circuit) 또는 프로 세서를 포함하지만 이에 한정된 것은 아닌 다양한 하드웨어 및/또는 소프트웨어 컴포넌트(들) 및/또는 모듈 (들)을 포함할 수 있다. 일반적으로, 도면들에 예시된 동작들이 존재하는 경우, 그러한 동작들은 비슷한 번호 를 가진 대응하는 상대 수단 + 기능 컴포넌트들을 가질 수 있다. 본원에서 사용된 바와 같이, 용어 \"결정하는 것\"은 매우 다양한 액션들을 포괄한다. 예를 들어, \"결정하는 것\"은 계산하는 것, 컴퓨팅하는 것, 프로세싱하는 것, 도출하는 것, 조사하는 것, 룩업하는 것(예를 들어, 테이 블, 데이터베이스 또는 다른 데이터 구조에서 룩업하는 것), 확인하는 것 등을 포함할 수 있다. 부가적으로, \"결정하는 것\"은 수신하는 것 (예를 들어, 정보를 수신하는 것), 액세스하는 것 (예를 들어, 메모리 내 데이터 에 액세스하는 것) 등을 포함할 수도 있다. 더욱이, \"결정하는 것\" 은 해결하는 것, 선택하는 것, 선출하는 것, 확립하는 것 등을 포함할 수도 있다. 본원에서 사용된 바와 같이, 아이템들의 리스트 \"중 적어도 하나\"를 지칭하는 어구는 단일 멤버들을 포함한, 그 아이템들의 임의의 조합을 지칭한다. 예를 들어, \"a, b 또는 c 중 적어도 하나\"는 a, b, c, a-b, a-c, b-c 및 a-b-c를 포함하도록 의도된다. 본 개시내용과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, 디지털 신 호 프로세서(DSP), 주문형 집적 회로(ASIC), 필드 프로그래밍 가능 게이트 어레이 신호(FPGA: field programmable gate array) 또는 다른 프로그래밍 가능 로직 디바이스(PLD: programmable logic device), 이산 게이트 또는 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본원에서 설명된 기능들을 수행하도록 설계된 이들의 임의의 조합으로 구현 또는 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수 있지만, 대안적 으로, 프로세서는 임의의 상업적으로 이용 가능한 프로세서, 제어기, 마이크로제어기 또는 상태 기계일 수 있다. 또한, 프로세서는 컴퓨팅 디바이스들의 조합, 예컨대 DSP와 마이크로프로세서의 조합, 복수의 마이크로 프로세서들, DSP 코어와 결합된 하나 이상의 마이크로프로세서들, 또는 임의의 다른 그러한 구성으로서 구현될 수 있다. 본 개시내용과 관련하여 설명되는 알고리즘 또는 방법의 단계들은 직접적으로 하드웨어로, 프로세서에 의해 실 행되는 소프트웨어 모듈로, 또는 이 둘의 조합으로 구현될 수 있다. 소프트웨어 모듈은 당업계에 공지된 임의 의 형태의 저장 매체에 상주할 수 있다. 사용될 수 있는 저장 매체의 일부 예들은 RAM(random access memory), ROM(read only memory), 플래시 메모리, EPROM(erasable programmable read-only memory), EEPROM(electrically erasable programmable read-only memory), 레지스터들, 하드디스크, 탈착식 디스크, CD- ROM 등을 포함한다. 소프트웨어 모듈은 단일 명령어 또는 다수의 명령어들을 포함할 수 있으며, 그리고 수 개 의 상이한 코드 세그먼트들에 걸쳐, 상이한 프로그램들 사이에, 그리고 다수의 저장 매체들에 걸쳐 분산될 수 있다. 저장 매체는, 프로세서가 저장 매체로부터 정보를 판독하고 저장 매체에 정보를 기록할 수 있도록 프로 세서에 커플링될 수 있다. 대안적으로, 저장 매체는 프로세서에 통합될 수 있다. 본원에 개시된 방법들은 설명된 방법을 달성하기 위한 하나 이상의 단계들 또는 동작들을 포함한다. 방법 단계 들 및/또는 액션들은 청구범위의 범위를 벗어나지 않으면서 서로 상호교환될 수 있다. 다시 말해서, 단계들 또 는 액션들의 특정 순서가 특정되지 않으면, 특정 단계들 및/또는 액션들의 순서 및/또는 사용은 청구범위의 범 위를 벗어나지 않으면서 수정될 수 있다. 설명된 기능들은 하드웨어, 소프트웨어, 펌웨어, 또는 이들의 임의의 조합으로 구현될 수 있다. 하드웨어로 구 현된다면, 예시적인 하드웨어 구성은 디바이스의 프로세싱 시스템을 포함할 수 있다. 프로세싱 시스템은 버스 아키텍처로 구현될 수 있다. 버스는 프로세싱 시스템의 특정 애플리케이션 및 전체적인 설계 제약들에 따라, 임의의 수의 상호접속 버스들 및 브리지들을 포함할 수 있다. 버스는 프로세서, 기계 판독 가능 저장 매체들, 및 버스 인터페이스를 포함하는 다양한 회로들을 함께 링크시킬 수 있다. 버스 인터페이스는 다른 무엇보다도, 네트워크 어댑터를 버스를 통해 프로세싱 시스템에 접속하는 데 사용될 수 있다. 네트워크 어댑터는 신호 프로 세싱 기능들을 구현하는 데 사용될 수 있다. 특정 양태들의 경우, 사용자 인터페이스(예를 들어, 키패드, 디스 플레이, 마우스, 조이스틱 등)가 또한 버스에 접속될 수 있다. 버스는 또한 타이밍 소스들, 주변장치들, 전압 조절기들, 전력 관리 회로들 등과 같은 다양한 다른 회로들을 링크할 수 있으며, 이들은 당해 기술 분야에 잘 알려져 있고 따라서 더 이상 설명되지 않을 것이다. 프로세서는, 기계 판독 가능 저장 매체에 저장된 소프트웨어의 실행을 비롯하여, 버스의 관리 및 일반적 프로세 싱을 담당할 수 있다. 프로세서는 하나 이상의 범용 및/또는 특수 목적 프로세서들로 구현될 수 있다. 예들은 마이크로프로세서들, 마이크로제어기들, DSP 프로세서들, 및 소프트웨어를 실행할 수 있는 다른 회로를 포함한다. 소프트웨어는, 소프트웨어, 펌웨어, 미들웨어, 마이크로코드, 하드웨어 기술 언어 또는 다른 용어로 지칭 되는지에 관계없이, 명령어들, 데이터 또는 이것들의 임의의 조합을 의미하도록 넓게 해석되어야 한다. 기계 판독 가능 저장 매체들은 예로서, RAM(random access memory), 플래시 메모리, ROM(read only memory), PROM(programmable read-only memory), EPROM(erasable programmable read-only memory), EEPROM(electrically erasable programmable Read-only memory), 레지스터들, 자기 디스크들, 광 디스크들, 하 드 드라이브들, 또는 임의의 다른 적당한 저장 매체, 또는 이들의 임의의 조합을 포함할 수 있다. 기계 판독 가능 저장 매체들은 컴퓨터-프로그램 제품으로 구현될 수 있다. 컴퓨터 프로그램 제품은 패키징 재료들을 포함 할 수 있다. 하드웨어 구현에서, 기계 판독 가능 저장 매체는 프로세서와 별개인 프로세싱 시스템의 부품일 수 있다. 그러 나, 당업자가 용이하게 이해할 바와 같이, 기계 판독 가능 저장 매체, 또는 그것의 임의의 부분은 프로세싱 시 스템의 외부에 있을 수 있다. 예로서, 기계 판독 가능 저장 매체는 전송선, 데이터에 의해 변조된 반송파, 및/ 또는 디바이스와는 별개인 컴퓨터 제품을 포함할 수 있으며, 이들 모두 버스 인터페이스를 통해 프로세서에 의 해 액세스될 수 있다. 대안적으로 또는 추가적으로, 기계 판독 가능 저장 매체들 또는 이들의 임의의 일부는 프로세서로 통합될 수 있으며, 이를테면, 그 경우는 캐시 및/또는 범용 레지스터 파일들이 해당될 수 있다. 논 의된 다양한 컴포넌트들은 국소 컴포넌트와 같은 특정 위치를 갖는 것으로 설명될 수 있지만, 이러한 컴포넌트 들은 또한 다양한 방식들로 구성될 수 있는데, 이를테면 특정 컴포넌트들이 분산 컴퓨팅 시스템의 일부로서 구 성된다. 프로세싱 시스템은, 프로세서 기능성을 제공하는 하나 이상의 마이크로프로세서들 그리고 기계 판독 가능 저장 매체의 적어도 일부를 제공하는 외부 메모리를 가지며 이들 모두가 외부 버스 아키텍처를 통해 다른 지원 회로 와 함께 링크되는, 범용 프로세싱 시스템으로서 구성될 수 있다. 대안적으로, 프로세싱 시스템은 설명된 신경 시스템들의 모델들 및 뉴런 모델들을 구현하기 위한 하나 이상의 신경계 형태의(neuromorphic) 프로세서들을 포 함할 수 있다. 다른 대안으로서, 프로세싱 시스템은 하나 이상의 필드 프로그램 가능 게이트 어레이(FPGA)들, 프로그래밍 가능 로직 디바이스(PLD)들, 제어기들, 상태 기계들, 게이티드(gated) 로직, 이산 하드웨어 컴포넌 트들, 또는 임의의 다른 적합한 회로를 갖거나, 단일 칩(chip)으로 통합된 기계 판독 가능 저장 매체들의 적어 도 일부, 프로세서, 버스 인터페이스, 사용자 인터페이스 및 지원 회로를 갖는 주문형 집적 회로(ASIC), 또는 본 개시내용 전반에 걸쳐 설명된 다양한 기능을 수행할 수 있는 회로들의 임의의 조합으로 구현될 수 있다. 당 업자들은, 특정 애플리케이션 및 전체 시스템에 부과된 전체 설계 제약들에 따라 프로세싱 시스템에 대한 설명 된 기능을 최상으로 구현하는 방법을 인지할 것이다. 기계 판독 가능 저장 매체는 다수의 소프트웨어 모듈들을 포함할 수 있다. 소프트웨어 모듈들은, 프로세서에 의해 실행되는 경우, 프로세싱 시스템으로 하여금 다양한 기능들을 수행하게 하는 명령어들을 포함한다. 소프 트웨어 모듈들은 송신 모듈 및 수신 모듈을 포함할 수 있다. 각각의 소프트웨어 모듈은 단일 저장 디바이스에 상주할 수 있거나, 또는 다수의 저장 디바이스들에 걸쳐 분산될 수 있다. 예로서, 소프트웨어 모듈은 트리거링 이벤트가 발생할 때 하드 드라이브로부터 RAM으로 로딩될 수 있다. 소프트웨어 모듈의 실행 동안, 프로세서는 액세스 속도를 증가시키기 위해 명령어들 중 일부를 캐시로 로딩할 수 있다. 그런 다음, 하나 이상의 캐시 라 인들은 프로세서에 의한 실행을 위해 범용 레지스터 파일로 로딩될 수 있다. 아래에서 소프트웨어 모듈의 기능 을 참조할 때, 그러한 기능이 그 소프트웨어 모듈로부터의 명령어들을 실행할 때 프로세서에 의해 구현된다는 것이 이해될 것이다. 더욱이, 본 개시내용의 양태들은 프로세서, 컴퓨터, 기계, 또는 이러한 양태들을 구현하 는 다른 시스템의 기능에 대한 개선들을 야기한다고 인식되어야 한다. 소프트웨어로 구현되는 경우, 상기 기능들은 컴퓨터 판독 가능 저장 매체 상에 하나 이상의 명령어 또는 코드로 서 저장되거나 이를 통해 송신될 수 있다. 컴퓨터 판독 가능 저장 매체들은, 일 장소에서 다른 장소로의 컴퓨 터 프로그램의 전달을 용이하게 하는 임의의 매체를 포함한 통신 매체들 및 컴퓨터 저장 매체들 둘 모두를 포함 한다. 저장 매체는 컴퓨터에 의해 액세스 가능한 임의의 이용 가능한 매체일 수 있다. 제한이 아닌 예로서, 이러한 컴퓨터 판독 가능 저장 매체는 RAM, ROM, EEPROM, CD-ROM, 또는 다른 광학 디스크 저장소, 자기 디스크 저장소 또는 다른 자기 저장 디바이스들, 또는 명령어들 또는 데이터 구조들의 형태로 요구되는 프로그램 코드 를 전달하거나 저장하기 위해 사용될 수 있으며 컴퓨터에 의해 액세스될 수 있는 임의의 다른 매체를 포함할 수 있다. 추가로, 임의의 접속이 컴퓨터 판독 가능 저장 매체로 적절히 지칭된다. 예를 들어, 소프트웨어가 동축 케이블, 광섬유 케이블, 연선(twisted pair), DSL(digital subscriber line), 또는 (적외선(IR), 라디오, 및 마이크로파와 같은) 무선 기법들을 사용하여 웹사이트, 서버, 또는 다른 원격 소스로부터 전송되면, 동축 케이 블, 광섬유 케이블, 연선, DSL, 또는 (적외선, 라디오, 및 마이크로파와 같은) 무선 기법들이 매체의 정의에 포함된다. 본원에서 사용된 디스크(disk) 및 디스크(disc)는 CD(compact disc), 레이저 디스크(disc), 광학 디 스크(disc), DVD(digital versatile disc), 플로피 디스크(disk) 및 블루-레이® 디스크(disc)를 포함하며, 여 기서 디스크(disk)들은 일반적으로 데이터를 자기적으로 재생하지만, 디스크(disc)들은 레이저들을 이용하여 광 학적으로 데이터를 재생한다. 따라서, 일부 양태에서, 컴퓨터 판독 가능 저장 매체들은 비일시적 컴퓨터 판독 가능 저장 매체들(예를 들어, 유형(tangible) 매체들)을 포함할 수 있다. 추가로, 다른 양태들에 대해, 컴퓨터 판독 가능 저장 매체들은 일시적 컴퓨터 판독 가능 저장 매체들(예를 들어, 신호)을 포함할 수 있다. 상기의 것들의 조합들이 또한 컴퓨터 판독 가능 저장 매체들의 범위 내에 포함되어야 한다. 따라서, 특정 양태들은 본원에서 제시되는 동작들을 수행하기 위한 컴퓨터 프로그램 제품을 포함할 수 있다. 예를 들어, 이러한 컴퓨터 프로그램 제품은 명령어들이 저장(및/또는 인코딩)된 컴퓨터 판독 가능 저장 매체를 포함할 수 있고, 명령어들은 설명된 동작들을 수행하도록 하나 이상의 프로세서들에 의해 실행 가능하다. 특정 양태들에 대해, 컴퓨터 프로그램 제품은 패키징 재료를 포함할 수 있다. 추가로, 설명된 방법들 및 기법들을 수행하기 위한 모듈들 및/또는 다른 적절한 수단은 적용 가능한 경우에 사 용자 단말 및/또는 기지국에 의해 다운로드(download)될 수 있고 그리고/또는 다른 방식으로 획득될 수 있다고 인식되어야 한다. 예를 들어, 이러한 디바이스는 서버에 결합되어, 설명된 방법들을 수행하기 위한 수단의 전 달을 가능하게 할 수 있다. 대안적으로, 설명된 다양한 방법들은 사용자 단말 및/또는 기지국이 저장 수단(예 를 들어, RAM, ROM, CD(compact disc)나 플로피 디스크와 같은 물리적 저장 매체 등)을 디바이스에 결합 또는 제공할 때 다양한 방법들을 얻을 수 있도록, 이러한 저장 수단을 통해 제공될 수 있다. 더욱이, 설명된 방법들 및 기법들을 디바이스에 제공하기 위한 임의의 다른 적당한 기법이 이용될 수 있다. 청구범위가 위에서 예시되는 바로 그 구성 및 컴포넌트들로 제한되지 않는다는 것을 이해할 것이다. 다양한 수 정들, 변화들 및 변경들은 청구범위의 범위로부터 벗어나지 않고 전술된 방법들 및 장치의 배열(arrangement), 동작 및 상세 항목들 내에서 이루어질 수 있다.도면 도면1 도면2a 도면2b 도면2c 도면2d 도면3 도면4 도면5 도면6 도면7 도면8 도면9a 도면9b 도면10 도면11"}
{"patent_id": "10-2024-7014398", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시내용의 특징들, 본질 및 이점들은 도면들과 함께 받아들여질 때 아래 제시되는 상세한 설명으로부터 보 다 명백해질 것이며, 도면들에서는 비슷한 참조 부호들이 전체에 걸쳐 대응하게 식별한다. 도 1은 본 개시내용의 특정 양태들에 따른, 범용 프로세서를 포함하는 시스템 온 칩(SoC: system-on-a-chip)를 사용하는 신경망의 예시적인 구현예를 예시한다. 도 2a, 도 2b 및 도 2c는 본 개시내용의 양태들에 따른, 신경망을 예시하는 선도들이다. 도 2d는 본 개시내용의 양태들에 따른, 예시적인 심층 컨볼루션 신경망(DCN: deep convolutional network)을예시하는 선도이다. 도 3는 본 개시내용의 다양한 양태들에 따른, 예시적인 심층 컨볼루션 신경망(DCN)을 예시한 블록선도이다. 도 4는 본 개시내용의 양태들에 따른, 인공지능(AI: artificial intelligence) 기능들을 모듈화할 수 있는 예시 적인 소프트웨어 아키텍처를 예시하는 블록선도이다. 도 5는 본 개시내용의 양태들에 따른, 이득 제어를 통한 신경 압축을 위한 예시적인 아키텍처를 예시하는 블록 선도이다. 도 6은 본 개시내용의 양태들에 따른, 영상을 프로세싱하기 위한 예시적인 아키텍처를 예시하는 블록선도이다. 도 7은 본 개시내용의 양태들에 따른, 신경 압축을 위한 훈련 목표의 계산을 예시하는 블록선도이다. 도 8은 본 개시내용의 양태들에 따른, 이득 제어를 통한 신경 압축을 더 예시하는 선도이다. 도 9a 및 도 9b는 본 개시내용의 양태들에 따른, 인공 신경망(ANN)을 사용하여 제어 가능한 공간 비트 할당을 통한 이미지 압축을 위한 예시적인 아키텍처를 예시하는 블록선도이다. 도 10 및 도 11은 본 개시내용의 양태들에 따른, 인공 신경망을 동작시키는 방법을 예시하는 흐름도이다."}
