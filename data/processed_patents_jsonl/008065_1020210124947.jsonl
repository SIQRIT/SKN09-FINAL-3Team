{"patent_id": "10-2021-0124947", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0041391", "출원번호": "10-2021-0124947", "발명의 명칭": "연산 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "서건석"}}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "연산 장치의 동작 방법에 있어서,제1 이미지 데이터를 언셔플(unshuffle)하여 입력 데이터를 획득하는 단계;상기 입력 데이터를 인공 신경망 모델에 입력하여, 출력 데이터를 획득하는 단계; 및상기 출력 데이터를 셔플(shuffle)하여 제2 이미지 데이터를 획득하는 단계를 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 연산 장치는제1 프로세서 및 제2 프로세서를 포함하고,상기 입력 데이터를 획득하는 단계는상기 제1 프로세서에서, 상기 제1 이미지 데이터를 언셔플하는 단계를 포함하고,상기 출력 데이터를 획득하는 단계는상기 입력 데이터를 상기 제2 프로세서에 입력하여, 상기 출력 데이터를 획득하는 단계를 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 입력 데이터를 획득하는 단계는상기 제1 프로세서에서, 제1 포맷의 제1 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계; 및상기 제1 프로세서에서, 상기 제2 포맷의 이미지 데이터를 언셔플하는 단계를 포함하는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 연산 장치는제1 프로세서 및 제2 프로세서를 포함하고,공개특허 10-2023-0041391-3-상기 출력 데이터를 획득하는 단계는상기 입력 데이터를 상기 제2 프로세서에 입력하여, 상기 출력 데이터를 획득하는 단계를 포함하고,상기 제2 이미지 데이터를 획득하는 단계는상기 제1 프로세서에서, 상기 출력 데이터를 셔플하는 단계를 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 제2 이미지 데이터를 획득하는 단계는상기 출력 데이터를 상기 제 1프로세서에서 셔플하여 제2 이미지 데이터를 획득하는 단계; 및상기 제2 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계를 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 연산 장치의 상태 데이터를 수신하는 단계; 및상기 상태 데이터에 기초하여, 상기 언셔플의 수행 주체를 결정하는 단계를 더 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 연산 장치의 상태 데이터를 수신하는 단계; 및상기 상태 데이터에 기초하여, 상기 셔플의 수행 주체를 결정하는 단계를 더 포함하는 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 제1 이미지 데이터와 상기 제2 이미지 데이터는 동일한 크기를 갖는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 출력 데이터를 획득하는 단계는상기 입력 데이터를 상기 연산 장치에서 동작할 수 있는 포맷으로 변환된 인공 신경망 모델에 입력하여, 상기출력 데이터를 획득하는 단계공개특허 10-2023-0041391-4-를 포함하는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 입력 데이터를 획득하는 단계는셔플 비율(shuffle ratio)에 기초하여, 상기 제1 이미지 데이터를 언셔플하는 단계를 포함하고,상기 제2 이미지 데이터를 획득하는 단계는상기 셔플 비율에 기초하여, 상기 출력 데이터를 셔플하는 단계를 포함하는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "인공 신경망 모델을 구동하는 연산 장치의 동작 방법에 있어서,상기 인공 신경망 모델의입력단에는 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가 추가되고,상기 연산 장치의 제1 프로세서에서, 상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔플 레이어의 셔플연산을 수행하는 단계; 및상기 연산 장치의 제2 프로세서에서, 상기 인공 신경망 모델의 컨볼루션(convolution) 연산을 수행하는 단계를 포함하고,상기 제1 프로세서에서 언셔플 연산 및 셔플 연산 중 적어도 하나를 수행할 때, 상기 제2 프로세서에서 상기 컨볼루션 연산을 병렬적으로 수행하는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,제1 포맷의 제1 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계를 더 포함하는, 연산 장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서,상기 픽셀 언셔플 레이어의 입력 데이터와 상기 픽셀 셔플 레이어의 출력 데이터는 동일한 크기를 갖는, 연산장치의 동작 방법."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 컨볼루션 연산을 수행하는 단계는공개특허 10-2023-0041391-5-상기 연산 장치의 제2 프로세서에서, 상기 연산 장치에서 동작할 수 있는 포맷으로 변환된 인공 신경망 모델의컨볼루션 연산을 수행하는 단계를 더 포함하는, 연산 장치."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "하드웨어와 결합되어 제1항 내지 제14항 중 어느 하나의 항의 방법을 실행시키기 위하여 매체에 저장된 컴퓨터프로그램."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "입력단에 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가추가된 인공 신경망 모델을 구동하는 연산 장치에 있어서,상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔플 레이어의 셔플 연산을 수행하는 제1 프로세서; 및상기 인공 신경망 모델의 컨볼루션 연산을 수행하는 제2 프로세서를 포함하고,상기 제1 프로세서에서 언셔플 연산 및 셔플 연산 중 적어도 하나를 수행할 때, 상기 제2 프로세서에서 상기 컨볼루션 연산을 병렬적으로 수행하는, 연산 장치."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 제1 프로세서는제1 포맷의 제1 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는, 연산 장치."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서,상기 픽셀 언셔플 레이어의 입력 데이터와 상기 픽셀 셔플 레이어의 출력 데이터는 동일한 크기를 갖는, 연산장치."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제15항에 있어서,상기 제1 프로세서는셔플 비율(shuffle ratio)에 기초하여 언셔플 연산을 수행하고, 상기 셔플 비율에 기초하여 셔플 연산을 수행하는, 연산 장치."}
{"patent_id": "10-2021-0124947", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "인공 신경망 모델 구동을 위한 연산 시스템에 있어서,입력단에 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가공개특허 10-2023-0041391-6-추가된 인공 신경망 모델을 구동하는 제1 연산 장치; 및상기 인공 신경망 모델이 상기 제1 연산 장치에서 동작할 수 있도록 상기 인공 신경망 모델을 변환하는 제2 연산 장치를 포함하고,상기 제1 연산 장치는상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔플 레이어의 셔플 연산을 수행하는 제1 프로세서; 및상기 인공 신경망 모델의 컨볼루션 연산을 수행하는 제2 프로세서를 포함하는, 연산 시스템."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "연산 장치 및 그 동작 방법이 개시된다. 일 실시예에 따른 연산 장치의 동작 방법은 제1 이미지 데이터를 언셔 플(unshuffle)하여 입력 데이터를 획득하는 단계, 입력 데이터를 인공 신경망 모델에 입력하여, 출력 데이터를 획득하는 단계 및 출력 데이터를 셔플(shuffle)하여 제2 이미지 데이터를 획득하는 단계를 포함한다."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래 실시예들은 인공 신경망 모델을 구동하는 연산 장치 및 그의 동작 방법에 관한 것으로, 보다 구체적으로는 모바일 환경에서 영상처리 고속화를 위한 딥러닝 모델 구조 및 다중 프로세서(heterogeneous processor)분할 구 동 방법에 관한 것이다."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 딥러닝 기반 영상처리(Super resolution, De-nosing, De-blur, HDR, Motion Blur등) 방법들이 많이 제안 되었다. 일반적인 컴퓨터 비젼(Computer Vision) 문제와 다르게 영상처리를 수행하는 딥러닝 모델들은 입력과 출력의 영상의 같아야 하기 때문에 이러한 영상처리용 딥러닝 모델들을 모바일 디바이스에서 구동하기 위해선 경량화 모델의 설계가 필요하다. 일반적으로 모델의 사이즈를 줄이기 위해 U-Net 구조를 적용하는데, 이러한 경우 마지막에 이미지의 사이즈를 키우기 위해 보간(interpolation) 기법이나 디컨볼루션(deconvolution)을 사용하지만 이러한 방법은 성능이나 연산량 측면에서 오히려 효과적이지 못하다."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 연산 장치의 동작 방법은 제1 이미지 데이터를 언셔플(unshuffle)하여 입력 데이터를 획득하 는 단계; 상기 입력 데이터를 인공 신경망 모델에 입력하여, 출력 데이터를 획득하는 단계; 및 상기 출력 데이 터를 셔플(shuffle)하여 제2 이미지 데이터를 획득하는 단계를 포함한다. 상기 연산 장치는 제1 프로세서 및 제2 프로세서를 포함하고, 상기 입력 데이터를 획득하는 단계는 상기 제1 프 로세서에서, 상기 제1 이미지 데이터를 언셔플하는 단계를 포함하고, 상기 출력 데이터를 획득하는 단계는 상기 입력 데이터를 상기 제2 프로세서에 입력하여, 상기 출력 데이터를 획득하는 단계를 포함할 수 있다. 상기 입력 데이터를 획득하는 단계는 상기 제1 프로세서에서, 상기 제1 포맷의 제1 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계; 및 상기 제1 프로세서에서, 상기 제2 포맷의 이미지 데이터를 언셔플하는 단계 를 포함할 수 있다. 상기 연산 장치는 제1 프로세서 및 제2 프로세서를 포함하고, 상기 출력 데이터를 획득하는 단계는 상기 입력 데이터를 상기 제2 프로세서에 입력하여, 상기 출력 데이터를 획득하는 단계를 포함하고, 상기 제2 이미지 데이터를 획득하는 단계는 상기 제1 프로세서에서, 상기 출력 데이터를 셔플하는 단계를 포함할 수 있다. 상기 제2 이미지 데이터를 획득하는 단계는 상기 출력 데이터를 상기 제 1프로세서에서 셔플하여 제2 이미지 데 이터를 획득하는 단계; 및 상기 제2 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계를 포함할 수 있다. 일 실시예에 따른 연산 장치의 동작 방법은 상기 연산 장치의 상태 데이터를 수신하는 단계 및 상기 상태 데이 터에 기초하여, 상기 언셔플의 수행 주체를 결정하는 단계를 더 포함할 수 있다. 일 실시예에 따른 연산 장치의 동작 방법은 상기 연산 장치의 상태 데이터를 수신하는 단계 및 상기 상태 데이 터에 기초하여, 상기 셔플의 수행 주체를 결정하는 단계를 더 포함할 수 있다. 상기 제1 이미지 데이터와 상기 제2 이미지 데이터는 동일한 크기를 갖을 수 있다. 상기 출력 데이터를 획득하는 단계는 상기 입력 데이터를 상기 연산 장치에서 동작할 수 있는 포맷으로 변환된 인공 신경망 모델에 입력하여, 상기 출력 데이터를 획득하는 단계를 포함할 수 있다. 상기 입력 데이터를 획득하는 단계는 셔플 비율(shuffle ratio)에 기초하여, 상기 제1 이미지 데이터를 언셔플 하는 단계를 포함하고, 상기 제2 이미지 데이터를 획득하는 단계는 상기 셔플 비율에 기초하여, 상기 출력 데이 터를 셔플하는 단계를 포함할 수 있다. 일 실시예에 따른 인공 신경망 모델을 구동하는 연산 장치의 동작 방법은 상기 인공 신경망 모델의 입력단에는 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가 추가되고, 상기 연산 장치의 제1 프로세서에서, 상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔플 레이어의 셔플 연산을 수행하는 단계; 및 상기 연산 장치의 제2 프로세서에서, 상기 인공 신경망 모델의 컨볼루션 (convolution) 연산을 수행하는 단계를 포함하고, 상기 제1 프로세서에서 언셔플 연산 및 셔플 연산 중 적어도 하나를 수행할 때, 상기 제2 프로세서에서 상기 컨볼루션 연산을 병렬적으로 수행한다. 일 실시예에 따른 인공 신경망 모델을 구동하는 연산 장치의 동작 방법은 상기 제1 포맷의 제1 이미지 데이터를 제2 포맷의 이미지 데이터로 변환하는 단계를 더 포함할 수 있다. 상기 제1 이미지 데이터와 상기 제2 이미지 데이터는 동일한 크기를 갖을 수 있다. 일 실시예에 따른 인공 신경망 모델을 구동하는 연산 장치의 동작 방법은 상기 컨볼루션 연산을 수행하는 단계 는 상기 연산 장치의 제2 프로세서에서, 상기 연산 장치에서 동작할 수 있는 포맷으로 변환된 인공 신경망 모델 의 컨볼루션 연산을 수행하는 단계를 더 포함할 수 있다. 일 실시예에 따른 입력단에 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가 추가된 인공 신경망 모델을 구동하는 연산 장치는 상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔플 레이어의 셔플 연산을 수행하는 제1 프로세서; 및 상기 인공 신경망 모델의 컨볼루션 연산을 수 행하는 제2 프로세서를 포함하고, 상기 제1 프로세서에서 상기 제1 연산을 수행할 때, 상기 제2 프로세서에서 상기 제2 연산을 병렬적으로 수행할 수 있다. 상기 제1 이미지 데이터와 상기 제2 이미지 데이터는 동일한 크기를 갖을 수 있다. 상기 제2 프로세서는 상기 인공 신경망 모델이 상기 연산 장치에서 동작할 수 있다. 상기 제1 프로세서는 셔플 비율(shuffle ratio)에 기초하여 언셔플 연산을 수행하고, 상기 셔플 비율에 기초하 여 셔플 연산을 수행할 수 있다. 일 실시예에 따른 인공 신경망 모델 구동을 위한 연산 시스템은 입력단에 픽셀 언셔플 레이어(pixel unshuffle layer)가, 출력단에 픽셀 셔플 레이어(pixel shuffle layer)가 추가된 인공 신경망 모델을 구동하는 제1 연산 장치; 및 상기 인공 신경망 모델이 상기 제1 연산 장치에서 동작할 수 있도록 상기 인공 신경망 모델을 변환하 는 제2 연산 장치를 포함하고, 상기 제1 연산 장치는 상기 픽셀 언셔플 레이어의 언셔플 연산 및 상기 픽셀 셔 플 레이어의 셔플 연산을 수행하는 제1 프로세서; 및 상기 인공 신경망 모델의 컨볼루션 연산을 수행하는 제2 프로세서를 포함한다."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 개시되어 있는 특정한 구조적 또는 기능적 설명들은 단지 기술적 개념에 따른 실시예들을 설명하 기 위한 목적으로 예시된 것으로서, 실제로 구현된 형태는 다양한 다른 모습을 가질 수 있으며 본 명세서에 설 명된 실시예로만 한정되지 않는다. 제1 또는 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 이런 용어들은 하나의 구성요소 를 다른 구성요소로부터 구별하는 목적으로만 이해되어야 한다. 예를 들어 제1 구성요소는 제2 구성요소로 명명 될 수 있고, 유사하게 제2 구성요소는 제1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관계를 설명하는 표현들, 예를 들어 \"~간의\"와 \"바로~간의\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 실시된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 해당 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적으로 사용되 는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 실시예들은 퍼스널 컴퓨터, 랩톱 컴퓨터, 태블릿 컴퓨터, 스마트 폰, 텔레비전, 스마트 가전 기기, 지능형 자동 차, 키오스크, 웨어러블 장치 등 다양한 형태의 제품으로 구현될 수 있다. 이하, 실시예들을 첨부된 도면을 참 조하여 상세하게 설명한다. 각 도면에 제시된 동일한 참조 부호는 동일한 부재를 나타낸다. 도 1a는 인공신경망(Artificial Neural Network)를 이용한 딥러닝 연산 방법을 설명하기 위한 도면이다. 딥러닝(Deep Learning) 등을 포함하는 인공지능(AI) 알고리즘은 인공신경망(Artificial Neural Network, ANN) 에 입력 데이터를 입력시키고, 컨볼루션 등의 연산을 통해 출력 데이터를 학습하는 것을 특징으로 한다. 인공신경망은 생물학적 뇌를 모델링한 컴퓨터 과학적 아키텍쳐(Computational Architecture)를 의미할 수 있다. 인공신경망 내에서, 뇌의 뉴런들에 해당되는 노드들은 서로 연결되어 있고, 입력 데이터를 처리하기 위하여 집합적으로 동작한다. 다양한 종류의 뉴럴 네트워크들을 예로 들면, 컨볼루션 뉴럴 네트워크 (Convolutional Neural Network, CNN), 회귀 뉴럴 네트워크(Recurrent Neural Network, RNN), 딥 빌리프 네트 워크(Deep Belief Network, DBN), 제한된 볼츠만 기계(Restricted Boltzman Machine, RBM) 방식 등이 있으나, 이에 제한되지 않는다. 피드-포워드(feed-forward) 뉴럴 네트워크에서, 뉴럴 네트워크의 뉴런들은 다른 뉴런들 과의 연결들(links)을 갖는다. 이와 같은 연결들은 뉴럴 네트워크를 통해, 한 방향으로, 예를 들어 순방향 (forward direction)으로 확장될 수 있다. 도 1a를 참조하면, 인공신경망에 입력 데이터가 입력되고, 하나 이상의 레이어(layer)를 포함하는 인공 신 경망(예를 들어, 컨볼루션 뉴럴 네트워크(Convolution Neural Network, CNN))를 통해 출력 데이터가 출력되는 구조가 도시된다. 인공신경망은 2개 이상의 레이어를 보유한 딥 뉴럴 네트워크(deep neural networ k)일 수 있다. 컨볼루션 뉴럴 네트워크는 입력 데이터로부터 테두리, 선 색 등과 같은 \"특징들(features)\"을 추출하기 위해 이용될 수 있다. 컨볼루션 뉴럴 네트워크는 복수의 레이어를 포함할 수 있다. 각각의 레이어는 데이 터를 수신할 수 있고, 해당 레이어에 입력되는 데이터를 처리하여 해당 레이어에서 출력되는 데이터를 생성할 수 있다. 레이어에서 출력되는 데이터는, 컨볼루션 뉴럴 네트워크에 입력된 이미지 또는 입력된 특징맵 (feature map)을 하나 이상의 필터(filter)의 웨이트(weight) 값과 컨볼루션 연산하여 생성한 특징맵일 수 있다. 컨볼루션 뉴럴 네트워크의 초기 레이어들은 입력으로부터 에지들 또는 그레디언트들과 같은 낮은 레 벨의 특징들을 추출하도록 동작될 수 있다. 컨볼루션 뉴럴 네트워크의 다음 레이어들은 이미지 내의 눈, 코 등과 같은 점진적으로 더 복잡한 특징들을 추출할 수 있다. 도 1b는 딥러닝 기반에서 컨볼루션 연산을 수행하는 과정을 설명하기 위한 도면이다. 도 1b를 참조하면, 인공신경망에서 컨볼루션 연산을 수행하는 과정은, 각각의 레이어에서 입력 특징맵과 필터와의 곱셈 및 덧셈 연산을 하여 출력 값을 생성하고, 출력 값을 누적하여 합산함으로써, 출력 특징맵 을 생성하는 과정을 의미할 수 있다. 컨볼루션 연산 수행 과정은, 현재 레이어에서 입력 특징맵의 좌측 상단으로부터 우측 하단까지 일정한 크 기, 즉 n×n 크기의 필터를 적용하여 곱셈 및 덧셈 연산을 수행하는 과정이다. 이하에서는, 필터의 크기가 3×3인 경우에 컨볼루션 연산을 수행하는 과정을 설명하기로 한다. 예를 들어, 먼저 입력 특징맵의 좌측 상단 제1 영역에서 3×3, 즉 제1 방향으로 3개의 데이터와 제2 방향으로 3개의 데이터를 포함한 총 9개의 데이터(x11 내지 x33)를 각각 필터의 웨이트 값(weight)(W11 내 지 W33)과 곱하는 연산을 수행한다. 이후, 곱셈 연산의 출력 값, 즉 X11*W11, X12*W12, X13*W13, X21*W21, X22*W22, X23*W23, X31*W31, X32*W32, X33*W33을 모두 누적하여 합산하면 출력 특징맵의 제1-1 출력 데이터(Y11)가 생성된 다. 이후, 입력 특징맵의 좌측 상단의 제1 영역에서 제2 영역으로 데이터의 단위만큼 이동하면서 연 산한다. 이 때, 컨볼루션 연산 과정에서 입력 특징맵 내의 데이터가 이동하는 개수를 스트라이드(strid e)라고 하며, 스트라이드의 크기에 따라 생성되는 출력 특징맵의 크기가 결정될 수 있다. 예를 들어, 스 트라이드가 1인 경우, 제2 영역에 포함된 총 9개의 입력 데이터(X12 내지 X34)를 필터의 웨이트 값(W11 내지 W33)과 곱하는 연산을 수행하고, 곱셈 연산의 출력 값인 X12*W11, X13*W12, X14*W13, X22*W21, X23*W22, X24*W23, X32*W31, X33*W32, X34*W33을 모두 누적하여 합산하면 출력 특징맵의 제1-2 출력 데이터(Y12)가 생성된다. 도 2는 일 실시예에 따른 연산 장치의 블록도이다. 도 2를 참조하면, 일 실시예에 따른 연산 장치는 제1 프로세서, 제2 프로세서 및 메모리를 포함할 수 있다. 도 2에 도시된 연산 장치에는 본 실시예들와 관련된 구성요소들만이 도시되어 있다. 따 라서, 연산 장치는 도 2에 도시된 구성요소들 외에 다른 범용적인 구성요소들이 더 포함될 수 있음은 당업자에게 자명하다. 일 실시예에 따른 제1 프로세서는 연산 장치를 제어하기 위한 전반적인 기능을 수행하는 역할을 한다. 제1 프로세서는 연산 장치 내의 메모리에 저장된 프로그램들을 실행함으로써, 연산 장치 를 전반적으로 제어한다. 제1 프로세서는 연산 장치 내에 구비된 CPU(central processing unit) 등으로 구현될 수 있으나, 이에 제한되지 않는다. 일 실시예에 따른 연산 장치는 인공 신경망 구동을 위한 제2 프로세서를 포함할 수 있다. 제2 프로 세서는 예를 들어, 인공 신경망 구동을 위한 전용 모듈인 NPU(neural processing unit), TPU(Tensor Processing Unit), Neural Engine, GPU(graphics processing unit), DSP(digital signal processor) 등에 해 당될 수 있다. 일 실시예에 따른 메모리는 연산 장치 내에서 처리된 데이터들 및 처리될 데이터들을 저장하는 하드 웨어일 수 있다. 또한, 메모리는 연산 장치에 의해 구동될 애플리케이션, 드라이버 등을 저장할 수 있다. 메모리는 DRAM과 같은 휘발성 메모리(volatile memory) 또는 불휘발성 메모리(nonvolatile memory) 를 포함할 수 있다. 이하의 설명에서, 각각의 프로세서가 각 장치의 메모리에 저장된 명령어(commands or instructions)에 기반하여 동작을 수행하는 것으로 전제한다. 그리고 각 장치는 무선 통신 회로를 이용하거나 통신 인터페이스를 통해 상 호간 통신하는 것으로 전제한다. 일 실시예에 따른 연산 장치는 인공 신경망을 이용하여 실시간으로 영상 처리를 수행하는 장치로, 스마트 폰, 테블릿 컴퓨터, 랩톱 컴퓨터, 데스크톱 컴퓨터, 텔레비전, 웨어러블 장치, 보안 시스템, 스마트 홈 시스템 등 다양한 컴퓨팅 장치 및/또는 시스템에 탑재될 수 있다. 예를 들어, 연산 장치는 스마트폰일 수 있고, 스마트폰의 카메라 시스템을 통해 획득한 제1 이미지 데이터 (예를 들어, 저화질 이미지 데이터)를 실시간으로 영상 처리하여 제2 이미지 데이터(예를 들어, 화질이 개선된 이미지 데이터)를 생성할 수 있다. 다만, 영상 처리를 위한 딥러닝 모델의 경우, 입력 사이즈가 마지막 레이어까지 유지되기 때문에, 모델 자체가 무겁기 때문에, 실시간 처리에 어려움이 있다. 이에, 영상 처리용 딥러닝 모델들을 모바일 디바이스에서 구동 하기 위해선 경량화 모델의 설계가 필요하다. 또한, 학습이 완료된 인공 신경망 모델들을 모바일 디바이스에서 구동하기 위해서는 인공 신경망 모델을 모바일 디바이스에서 구동하기 위한 변환이 필요할 수 있다. 예를 들어, SNPE(Qualcomm Snapdragon Neural Processing Engine) SDK를 통해 인공 신경말 모델을 퀄컴 디바이스에서 동작할 수 있도록 변환할 수 있다. SNPE SDK를 사용하면 학습된 딥러닝 모델은 Deep Learning Container (DLC) 로 변환되고, 모바일 디바이스에서 CPU, GPU 그리고 DSP 환경에서 구동할 수 있게 된다. 하지만 SNPE에서 모델 변환을 지원하지 않는 레이어 (layer)는 변환이 불가능하다는 단점이 있다. 아래에서 상세히 설명하겠지만, 일 실시예에 따른 연산 장치는 모바일 환경에서 영상처리 고속화를 위해 딥 러닝 모델을 구동하기 위한 연산들을 각각의 연산들의 특성에 따라 제1 프로세서 및 제2 프로세서(23 0)에 분할하고, 각각의 프로세서에서 병렬적으로 동시에 해당 연산들을 처리할 수 있다. 나아가, 일 실시예에 따른 딥 러닝 모델 또한 영상처리 고속화를 위해 새롭게 고안된 것으로, 새롭게 고안된 딥 러닝 모델은 픽셀 언셔플 레이어(pixel unshuffle layer) 및 픽셀 셔플 레이어(pixel shuffle layer)를 추가로 포함할 수 있다. 도 3은 일 실시예에 따른 딥 러닝 모델을 설명하기 위한 도면이다. 도 1a 내지 도 2를 참조하여 설명한 내용은 도 3에도 적용될 수 있고, 이에 중복되는 설명은 생략할 수 있다. 도 3을 참조하면, 일 실시예에 따른 딥 러닝 모델은 픽셀 언셔플 레이어(pixel unshuffle layer), 인공 신경망 모델 및 픽셀 셔플 레이어(pixel shuffle layer)를 포함할 수 있다. 일 실시예에 따른 딥 러닝 모델은 제1 이미지 데이터(예를 들어, 저화질 이미지 데이터)를 실시간으로 영 상 처리하여 제2 이미지 데이터(예를 들어, 화질이 개선된 이미지 데이터)를 생성할 수 있다.보다 구체적으로, 일 실시예에 따른 연산 장치는 제1 이미지 데이터를 픽셀 언셔플 레이어에 입력하여, 입 력 데이터를 획득할 수 있고, 입력 데이터를 인공 신경망 모델에 입력하여 출력 데이터를 획득할 수 있고, 출력 데이터를 픽셀 셔플 레이어에 입력하여 제2 이미지 데이터를 획득할 수 있다. 최종 출력 데이터인 제2 이미지 데이터는 입력 데이터인 제1 이미지 데이터와 동일한 크기(예를 들어, 높이(H)* 폭(W)*채널의 수 (C))를 갖을 수 있다. 아래에서, 도 4a 내지 도 4b를 참조하여, 일 실시예에 따른 픽셀 언셔플 레이어 및 픽셀 셔플 레이어(33 0)의 동작을, 도 5a 내지 도 5b를 참조하여 인공 신경망 모델의 동작을 상세히 설명한다. 도 4a 내지 도 4b는 일 실시예에 따른 픽셀 언셔플 레이어 및 픽셀 셔플 레이어의 동작을 설명하기 위한 도면이 다. 도 1a 내지 도 3을 참조하여 설명한 내용은 도 3에도 적용될 수 있고, 이에 중복되는 설명은 생략할 수 있 다. 도 4a를 참조하면, 일 실시예에 따른 연산 장치는 셔플 비율(shuffle ratio)에 기초하여, 제1 이미지 데이터를 언셔플할 수 있다. 보다 구체적으로, 일 실시예에 따른 연산 장치는 (H, W, C) 크기의 제1 이미지 데이터를 픽 셀 언셔플 레이어에 입력하여, (H/r, W/r, C*r2) 크기의 입력 데이터를 획득할 수 있다. 여기서, r은 셔 플 비율을 의미할 수 있다. 예를 들어, 일 실시예에 따른 연산 장치는 (15, 15, 1) 크기의 제1 이미지 데이터를 픽셀 언셔플 레이어에 입력하여, (5, 5, 9) 크기의 입력 데이터를 획득할 수 있다. 도 4b를 참조하면, 일 실시예에 따른 연산 장치는 셔플 비율(shuffle ratio)에 기초하여, 출력 이미지 데이터를 셔플할 수 있다. 보다 구체적으로, 일 실시예에 따른 연산 장치는 (H/r, W/r, C*r2) 크기의 제1 이미지 데이터 를 픽셀 셔플 레이어에 입력하여, (H, W, C) 크기의 입력 데이터를 획득할 수 있다. 여기서, r은 셔플 비 율로, 언셔플 레이어에서 사용된 셔플 비율과 동일할 수 있다. 예를 들어, 일 실시예에 따른 연산 장치는 (5, 5, 9) 크기의 출력 데이터를 픽셀 셔플 레이어에 입력하여, (15, 15, 1) 크기의 제2 이미지 데이터를 획득할 수 있다. 도 5a 내지 도 5b는 일 실시예에 따른 영상 처리용 딥러닝 모델의 동작 방법을 설명하기 위한 도면이다. 딥러닝 모델의 연산량을 평가하는 기준으로는 모델을 구성하고 있는 파라미터수와 컨볼루션(Convolution) 연산 인 더하고 곱하는 횟수를 나타내는 플롭스(FLOPS, FLoating point Operations Per Second)가 많이 사용된다. 일 실시예에 따른 영상 처리용 딥러닝 모델의 동작 방법을 설명하기에 앞서, 도 5a를 참조하여 일반적인 영상 처리용 딥러닝 모델의 동작 방법을 설명한다. 도 5a를 참조하면, 일반적인 영상 처리용 딥러닝 모델의 경우를 분석하면 다음과 같다. 일반적인 딥러닝 모델의 입력 데이터의 크기와 출력 데이터의 크기가 (H, W, C), 커널의 크기가 K, 채널의 크기가 C1이며 L 개의 레이어 수를 갖는 컨볼루션 뉴럴 네트워크(CNN)가 존재한다고 가정하면, 이 경우 딥러닝 모델의 파라 미터 수는 , 플롭스는 가 된다. 도 5b를 참조하면, 도 4a 및 도 4b를 참조하여 전술한 바와 같이 일 실시예에 따른 딥러닝 모델은 인공 신 경망 모델의 입력단과 출력단에 픽셀 언셔플 레이어 및 픽셀 셔플 레이어가 추가되었기 때문에 입력 데이터와 출력 데이터의 크기가 (H/r, W/r, C*r2)이 된다. 커널의 크기가 도 5a와 동일하게 K이고 동일한 채널 크기와 레이어 수를 갖는 경우, 이 경우 딥러닝 모델의 파라미터 수는 , 플롭 수는 가 된다. 도 5a와 도 5b를 참조하여 설명한 두 모델(500과 550)의 결과를 비교하면, 두 모델 모두 모델 내부에 커널 크기 K, 채널 크기 C1, L개의 레이어를 갖는 CNN을 사용하기 때문에, 파라미터수의 경우 두 모델 내부는 로 같고 모델 외부에서 딥러닝 모델이 딥러닝 모델보다 배 더 많다. 하지만 플롭스의 경우 두 딥러닝 모델 모두 모델 외부에서 로 같으며, 딥러닝 모델이 딥러닝 모델보다 배 만큼 줄어들었 다. 일반적으로 딥러닝 모델은 입, 출력 채널크기 C 보다 모델 내부의 채널크기 이 훨씬 큰 C << 이며 셔플 비 율(shuffle ratio)인 r을 적용해도 < 이기 때문에, 위에서 계산한 딥러닝 모델의 파라미터 수 증 가 대비 플롭스의 감소정도가 훨씬 크게되어, 일 실시예에 따른 딥러닝 모델이 일반적인 딥러닝 모델 보다 더 낮은 연산량을 갖는다. 도 6은 일 실시예에 따른 연산 장치의 동작 방법을 설명하기 위한 도면이다. 도 6을 참조하면, 일 실시예에 따른 연산 장치의 제1 프로세서에서, 픽셀 언셔플 레이어의 언셔플 연산 및 픽셀 셔플 레이어의 셔플 연산을 수행하고, 제2 프로세서에서 인공 신경망 모델의 컨볼루션 연산을 수행할 수 있다. 보다 구체적으로, 일 실시예에 따른 언셔플 연산 및 셔플 연산은 각각 셔플 비율에 따라 인 텐 서를 로, 인 텐서를 로 재배치하는 연산으로, 메모리 접근 만을 요구하는 연산이며 반복적인 곱셈과 덧셈의 연산인 컨볼루션 연산과 그 특성이 다를 수 있다. 일반적으로 메모리 접근이 많은 연산은 제1 프로세서(예를 들어, CPU)에서 수행하는 것이 효율적인 바, 내부에 서 위치를 교환하는 연산인 언셔플 연산 및 셔플 연산 또한 제1 프로세서(예를 들어, CPU)에서 수행할 수 있다. 나아가, 일 실시예에 따른 언셔플 연산 및 셔플 연산은 딥러닝 모델의 처음과 끝에서 2번만 실행되기 때문에 메 모리 컨텍스트(memory context) 교환에 대한 비용 또한 크지 않을 수 있다. 따라서 제안한 영상처리 고속화를 위한 딥러닝 모델은 다중 프로세서(Heterogeneous Processor)를 통한 병렬 구 동이 가능하다. 일 실시예에 따른 연산 장치는 컨볼루션 연산에 특화된 프로세서인 제2 프로세서(예를 들어, GPU, DSP, NPU)에서 구동하지 않아도 되기 때문에 이러한 프로세서에 걸리는 부하를 줄일 수 있는 장점이 있다. 또한, 인공 신경망 모델을 모바일 디바이스에서 구동하기 위해 변환해 주는 모델 변환 툴(예를 들어, SNPE SD K)에서 변환을 지원하지 않는 레이어는 변환이 불가능할 수 있으나, 일 실시예에 따른 연산 장치는 제1 프로세 서(예를 들어, CPU)에서 연산이 가능하기 때문에, 해당 문제를 해결할 수 있다. 일 실시예에 따른 픽셀 언셔플 레이어 및 픽셀 셔플 레이어를 제외한 내부 인공 신경망 모델은 모바일 디바이스 (예를 들어, 퀄컴 디바이스)에서 동작할 수 있게 모델을 변환 해 주는 모델 변환 툴(예를 들어, SNPE SDK)을 사 용하여 딥 러닝 컨테이더(Deep Learning Container (DLC))로 변환할 수 있다. 이때, 제1 프로세서(예를 들어, CPU)에서 동작하는 픽셀 언셔플 레이어 및 픽셀 셔플 레이어는 프로그래밍 프레임워크(예를 들어, Android NDK 의 JNI(Jave Native Interface)) 이용하여 소스 코드 파일(예를 들어, cpp파일)로 작성될 수 있다. 일 실시예에 따른 연산 장치는 작성된 소스 코드 파일(예를 들어, cpp파일)을 빌드하여 헤더 파일과 공유 객체 라이브러리를 생성할 수 있다. 나아가, 제2 프로세서의 추론 레이어와 제1 프로세서의 추론 레이어와의 연결을 위해 소프트웨어 프로그램(예를 들어, Android SDK)를 사용할 수 있다. 최종 단계에서 SDK를 모바일 카메라 시 스템에 추가하여 모바일 어플리케이션으로 완성될 수 있다.예를 들어, 사용자가 모바일 카메라로 영상을 획득하면 이것을 학습된 딥러닝 모델의 입력으로 사용할 수 있다. 일 실시예에 따른 연산 장치는 다중 디바이스에서 추론된 영상을 실시간으로 구동하여 모바일 어플리케이션에서 유저가 실시간으로 확인할 수 있다. 도 7a 내지 도7b는 일 실시예에 따른 레지듀얼 커넥션이 추가된 딥러닝 모델을 설명하기 위한 도면이다. 도 7a를 참조하면, 일 실시예에 따른 인공 신경망 모델은 레지듀얼 블락(residual block)으로 구성될 수 있다. 일 실시예에 다른 레지듀얼 블락은 레지듀얼 커넥션(residual connection)(또는, 스킵 커넥션(skip connection))을 통해 이전 레이어에서 학습했던 정보를 연결함으로써 해당 레이어에서는 추가적으로 학습해야할 정보만을 매핑하여 학습하게될 수 있다. 도 7b를 참조하면, 레지듀얼 커넥션의 위치가 변경될 수도 있다. 보다 구체적으로, 다른 실시예에 따른 레지듀 얼 커넥션을 통해 픽셀 언셔플 레이어의 전단과 픽셀 셔플 레이어의 후단이 연결될 수도 있다. 도 8a 내지 도 8b는 일 실시예에 따른 인공 신경망 모델을 설명하기 위한 도면이다. 도 8a를 참조하면, 일 실시예에 따른 인공 신경망 모델의 레지듀얼 블락은 3X3 컨볼루션 레이어, ReLU 레 이어, 3X3 컨볼루션 레이어, 3X3 컨볼루션 레이어 및 3X3 컨볼루션 레이어를 포함할 수 있 다. 나아가, 제1 레지듀얼 커넥션은 3X3 컨볼루션 레이어 전단과 3X3 컨볼루션 레이어 후단을 연결 할 수 있고, 제2 레지듀얼 커넥션은 3X3 컨볼루션 레이어 전단과 3X3 컨볼루션 레이어 후단을 연결할 수 있다. 도 8b를 참조하면, 다른 실시예에 따른 인공 신경망 모델의 레지듀얼 블락에서는 제2 레지듀얼 커넥션이 생략될 수도 있다. 도 9a 내지 도 9b는 일 실시예에 따른 다중 연산 방법을 설명하기 위한 도면이다. 일 실시예에 따른 영상 처리용 딥러닝 모델의 다중 연산 방법을 설명하기에 앞서, 도 9a를 참조하여 영상 처리 용 딥러닝 모델의 단일 연산 방법을 설명한다. 도 9a는 컨볼루션 연산 뿐만 아니라 언셔플 연산, 셔플 연산도 제2 프로세서(예를 들어, , GPU, DSP, NPU)에서 수행하는 단일 연산 방법에 관한 것으로, 단일 연산 방법의 경우 도 9b의 다중 연산 방법에 비해 연산 속도도 느릴 뿐만 아니라, 연산 장치의 발열 문제가 생길 수도 있다. 보다 구체적으로, 제2 프로세서는 제1 프로세서(예를 들어, CPU)로부터 제1 이미지 데이터를 수신하여, 언셔플 연산, 컨볼루션 연산 및 셔플 연산을 수행하여 제2 이미지 데이터를 제1 프로세서에 전달한다. 즉, 제2 프로세 서에서 언셔플 연산, 컨볼루션 연산 및 셔플 연산을 모두 수행하기 때문에 제2 프로세서의 로드만 크게 증가하 는 문제가 있다. 도 9b를 참조하면, 일 실시예에 따른 다중 연산 방법에 따르면, 모바일 환경에서의 구동을 위해서 연산의 특성 에 따라 연산을 수행하는 프로세서를 결정하고, 각각의 프로세서가 병렬적으로 연산을 수행할 수 있다. 보다 구체적으로, 제1 프로세서는 언셔플 연산 및 셔플 연산을 수행하고, 제1 프로세서가 언셔플 연산 및 셔플 연산 중 적어도 하나를 수행하고 있을 때, 제2 프로세서는 컨볼루션 연산을 수행할 수 있다. 예를 들어, 제1 프로세서가 (t+2)에 대응하는 제1 이미지 데이터에 대한 언셔플 연산을 수행하고 있을 때, 제2 프로세서는 (t+1)에 대응하는 입력 데이터에 대한 컨볼루션 연산을 수행하여 출력 데이터를 제1 프로세서로 전 달한다. 제1 프로세서가 (t+1)에 대응하는 출력 데이터에 대한 셔플 연산을 수행하고 있을 때, 제2 프로세서는 (t+2)에 대응하는 입력 데이터에 대한 컨볼루션 연산을 수행하여 출력 데이터를 제1 프로세서로 전달한다. 제1 프로세서는 (t+2)에 대응하는 출력 데이터에 대한 셔플 연산을 수행하여 제2 이미지 데이터를 생성할 수 있다. 즉, 제1 프로세서가 (i-1)에 대응하는 제1 이미지 데이터에 대한 언셔플 연산 및 (i+1)에 대응하는 출력 데이터 에 대한 셔플 연산을 수행할 때, 병렬적으로 동시에 제2 프로세서가 i에 대응하는 입력 데이터에 대한 컨볼루션연산을 수행하기 때문에, 전체적인 연산 속도가 빨라지게 된다. 일 실시예예 따른 연산 장치는 상태 데이터에 기초하여 언셔플 연산 및 셔플 연산의 주체를 결정할 수 있다. 상태 데이터는 연산 장치에 포함된 프로세서들의 상태에 관한 정보로, 예를 들어, 각 프로세서의 연산 점유율 및 연산 장치의 발열 데이터를 포함할 수 있다. 일 실시예에 따른 연산 장치는 제1 프로세서가 제2 프로세서보다 높은 점유율인 상황에서는, 언셔플 연산 및 셔 플 연산을 모두 제2 프로세서에서 수행할 수 있고, 반대의 경우에는 언셔플 연산 및 셔플 연산의을 제1 프로세 서에서 수행하고, 제2 프로세서에서는 컨볼루션 연산만 수행할 수 있다. 나아가, 제1 프로세서와 제2 프로세서는 발열에 따라 연산 성능 저하(computing performance drop) 정도가 다를 수 있다. 예를 들어, 제1 프로세서는 상대적으로 제2 프로세서 대비 연산 성능 저하 정도가 클 수 있다. 이 에, 일 실시예에 따른 연산 장치는 발열 데이터에 기초하여, 연산 장치 전체의 연산 성능 저하 정도가 가장 낮 을 수 있도록 언셔플 연산 및 셔플 연산의 주체를 결정할 수 있다. 이상에서 설명된 실시예들은 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨 어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치, 방법 및 구성요소는, 예를 들 어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마 이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 소프트웨어 애플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처 리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만,"}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하 나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들의 조합을 포함 할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로(collectively) 처 리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독 으로 또는 조합하여 포함할 수 있다. 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구성 된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2021-0124947", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가진 자라면 상기를 기초로 다양한 기술적 수정 및 변형을 적용할 수 있다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다.도면 도면1a 도면1b 도면2 도면3 도면4a 도면4b 도면5a 도면5b 도면6 도면7a 도면7b 도면8a 도면8b 도면9a 도면9b"}
{"patent_id": "10-2021-0124947", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a는 인공신경망(Artificial Neural Network)를 이용한 딥러닝 연산 방법을 설명하기 위한 도면이다. 도 1b는 딥러닝 기반에서 컨볼루션 연산을 수행하는 과정을 설명하기 위한 도면이다. 도 2는 일 실시예에 따른 연산 장치의 블록도이다. 도 3은 일 실시예에 따른 딥 러닝 모델을 설명하기 위한 도면이다. 도 4a 내지 도 4b는 일 실시예에 따른 픽셀 언셔플 레이어 및 픽셀 셔플 레이어의 동작을 설명하기 위한 도면이 다. 도 5a 내지 도 5b는 일 실시예에 따른 영상 처리용 딥러닝 모델의 동작 방법을 설명하기 위한 도면이다. 도 6은 일 실시예에 따른 연산 장치의 동작 방법을 설명하기 위한 도면이다. 도 7a 내지 도7b는 일 실시예에 따른 레지듀얼 커넥션이 추가된 딥러닝 모델을 설명하기 위한 도면이다. 도 8a 내지 도 8b는 일 실시예에 따른 인공 신경망 모델을 설명하기 위한 도면이다. 도 9a 내지 도 9b는 일 실시예에 따른 다중 연산 방법을 설명하기 위한 도면이다."}
