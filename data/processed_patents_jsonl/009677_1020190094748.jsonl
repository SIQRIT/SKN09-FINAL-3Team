{"patent_id": "10-2019-0094748", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0016684", "출원번호": "10-2019-0094748", "발명의 명칭": "데이터 처리 시스템 및 동작 방법", "출원인": "에스케이하이닉스 주식회사", "발명자": "김주영"}}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리 풀 및, 호스트의 요청에 따라 상기 메모리 풀에 대한 데이터 입출력을 제어하는 컨트롤러를 포함하는 데이터 처리 시스템으로서, 상기 컨트롤러는,상기 메모리 풀로부터 전송된 데이터를 저장하는 복수의 버퍼를 포함하는 버퍼 메모리;상기 복수의 버퍼 각각에 접속되어 상기 버퍼로부터 데이터를 독출하여 연산하는 복수의 코어를 포함하는 프로세서 그룹; 및상기 복수의 코어 각각에 대응하는 각 버퍼의 미독출 데이터양에 기초하여 상기 프로세서 그룹의 동작 속도를조정하는 속도 제어부;를 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 속도 제어부는 상기 복수의 코어의 동작 속도를 개별적 또는 일괄적으로 조정하도록 구성되는 데이터 처리시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 버퍼에 데이터를 라이트할 주소를 지시하는 라이트 포인터 및 상기 버퍼 각각으로부터 데이터를 리드할 주소를 지시하는 버퍼별 리드 포인터를 관리하는 입출력 관리부를 더 포함하고,상기 속도 제어부는 상기 라이트 포인터와 상기 버퍼별 리드 포인터의 차이값에 기초하여 상기 미독출 데이터양을 판단하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서,상기 속도 제어부는 상기 차이값이 제 1 기준값보다 작은 버퍼에 접속된 코어를 디스에이블하거나 클럭 주파수를 하향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 3 항에 있어서,상기 속도 제어부는 상기 차이값이 제 1 기준값보다 작은 버퍼가 적어도 하나 검출됨에 따라 상기 복수의 코어모두의 클럭 주파수를 하향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 4 항에 있어서,상기 속도 제어부는, 상기 차이값이 상기 제 1 기준값보다 작은 버퍼는 미독출 데이터가 존재하지 않는 버퍼로판단하는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 4 항에 있어서,상기 속도 제어부는 상기 차이값이 2 기준값 - 상기 제 1 기준값보다 크게 설정됨 - 보다 작은 버퍼에 접속된공개특허 10-2021-0016684-3-코어의 클럭 주파수를 하향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 속도 제어부는 상기 차이값이 제 2 기준값 이상인 버퍼에 접속된 코어의 클럭 주파수를 유지 도는 상향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 7 항에 있어서,상기 속도 제어부는 상기 차이값이 제 2 기준값보다 작은 버퍼가 설정 개수 이상 검출됨에 따라 상기 복수의 코어 모두의 클럭 주파수를 하향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 속도 제어부는 상기 차이값이 제 2 기준값보다 작은 버퍼가 상기 설정 개수 미만 검출됨에 따라 상기 복수의 코어 모두의 클럭 주파수를 유지 또는 상향 조정하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "메모리 풀 및, 호스트의 요청에 따라 상기 메모리 풀에 대한 데이터 입출력을 제어하는 컨트롤러를 포함하는 데이터 처리 시스템의 동작 방법으로서,상기 컨트롤러가 상기 메모리 풀로부터 리드한 데이터를 복수의 버퍼를 포함하는 버퍼 메모리에 저장하는 단계;상기 컨트롤러에 구비되고 상기 복수의 버퍼 각각에 접속되는 복수의 코어 각각이 상기 버퍼로부터 데이터를 독출하여 연산하는 단계; 및상기 컨트롤러가 상기 복수의 코어 각각에 대응하는 각 버퍼의 미독출 데이터양에 기초하여 상기 복수의 코어에대한 동작 속도를 조정하는 단계;를 포함하도록 구성되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 복수의 코어의 동작 속도를 개별적 또는 일괄적으로 조정하는 단계를포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 컨트롤러가 상기 버퍼에 데이터를 라이트할 주소를 지시하는 라이트포인터 및 상기 버퍼 각각으로부터 데이터를 리드할 주소를 지시하는 버퍼별 리드 포인터를 리드하는 단계; 및상기 컨트롤러가 상기 라이트 포인터와 상기 버퍼별 리드 포인터의 차이값에 기초하여 상기 미독출 데이터양을판단하는 단계;를 포함하도록 구성되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 제 1 기준값보다 작은 버퍼에 접속된 코어를 디스에이블하거나 클럭 주파수를 하향 조정하는 단계를 포함하는 데이터 처리 시스템의 동작 방법.공개특허 10-2021-0016684-4-청구항 15 제 13 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 제 1 기준값보다 작은 버퍼가 적어도 하나 검출됨에 따라 상기 복수의 코어 모두의 클럭 주파수를 하향 조정하는 단계를 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 상기 제 1 기준값보다 작은 버퍼는 미독출 데이터가 존재하지 않는 버퍼로 판단하는 단계를 더 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 14 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 2 기준값 - 상기 제 1 기준값보다 크게 설정됨 - 보다 작은버퍼에 접속된 코어의 클럭 주파수를 하향 조정하는 단계를 포함하도록 구성되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 제 2 기준값 이상인 버퍼에 접속된 코어의 클럭 주파수를 유지 도는 상향 조정하는 단계를 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 17 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 제 2 기준값보다 작은 버퍼가 설정 개수 이상 검출됨에 따라상기 복수의 코어 모두의 클럭 주파수를 하향 조정하는 단계를 포함하도록 구성되는 데이터 처리 시스템의 동작방법."}
{"patent_id": "10-2019-0094748", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서,상기 동작 속도를 조정하는 단계는, 상기 차이값이 제 2 기준값보다 작은 버퍼가 상기 설정 개수 미만 검출됨에따라 상기 복수의 코어 모두의 클럭 주파수를 유지 또는 상향 조정하는 단계를 포함하는 데이터 처리 시스템의동작 방법."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 기술의 일 실시예에 의한 데이터 처리 시스템은 메모리 풀 및, 호스트의 요청에 따라 메모리 풀에 대한 데이 터 입출력을 제어하는 컨트롤러를 포함하는 데이터 처리 시스템으로서, 컨트롤러는, 메모리 풀로부터 전송된 데 이터를 저장하는 복수의 버퍼를 포함하는 버퍼 메모리, 복수의 버퍼 각각에 접속되어 버퍼로부터 데이터를 독출 하여 연산하는 복수의 코어를 포함하는 프로세서 그룹 및 복수의 코어 각각에 대응하는 각 버퍼의 미독출 데이터 양에 기초하여 프로세서 그룹의 동작 속도를 조정하는 속도 제어부를 포함하도록 구성될 수 있다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 반도체 집적 장치에 관한 것으로, 보다 구체적으로 데이터 처리 시스템 및 동작 방법에 관한 것이다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "반도체로 구성된 회로 또는 장치는 전기적 신호를 송수신하도록 구성된다. 예를 들어, 반도체 회로 또는 장치는 수신된 신호를 연산 또는 저장하고, 저장된 또는 연산된 신호를 송신하도록 구성된다. 유비쿼터스, 인공지능, 자율 주행, 로봇, 및 가상 현실 등과 같이, 대용량 신호를 고속 전송하고, 분석 및 처리 하는 기술에 대한 수요가 증가함에 따라 데이터 처리 시스템의 전력 소모량을 최소화하기 위한 방안이 연구되고 있다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "발명의 내용"}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 기술은 불필요한 전력 소모를 줄이고 성능 저하를 방지할 수 있는 반도체 장치를 제공하기 위한 것이다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 기술의 실시예에 따른 데이터 처리 장치는 메모리 풀 및, 호스트의 요청에 따라 상기 메모리 풀에 대한 데이 터 입출력을 제어하는 컨트롤러를 포함하는 데이터 처리 시스템으로서, 상기 컨트롤러는, 상기 메모리 풀로부터 전송된 데이터를 저장하는 복수의 버퍼를 포함하는 버퍼 메모리; 상기 복수의 버퍼 각각에 접속되어 상기 버퍼 로부터 데이터를 독출하여 연산하는 복수의 코어를 포함하는 프로세서 그룹; 및 상기 복수의 코어 각각에 대응 하는 각 버퍼의 미독출 데이터양에 기초하여 상기 프로세서 그룹의 동작 속도를 조정하는 속도 제어부;를 포함 하도록 구성될 수 있다. 본 기술의 실시예에 따른 데이터처리 장치의 동작 방법은 메모리 풀 및, 호스트의 요청에 따라 상기 메모리 풀 에 대한 데이터 입출력을 제어하는 컨트롤러를 포함하는 데이터 처리 시스템의 동작 방법으로서, 상기 컨트롤러 가 상기 메모리 풀로부터 리드한 데이터를 복수의 버퍼를 포함하는 버퍼 메모리에 저장하는 단계; 상기 컨트롤 러에 구비되고 상기 복수의 버퍼 각각에 접속되는 복수의 코어 각각이 상기 버퍼로부터 데이터를 독출하여 연산 하는 단계; 및 상기 컨트롤러가 상기 복수의 코어 각각에 대응하는 각 버퍼의 미독출 데이터양에 기초하여 상기 복수의 코어에 대한 동작 속도를 조정하는 단계;를 포함하도록 구성될 수 있다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 기술에 의하면 프로세서의 데이터 처리 성능에 따라 실시간으로 처리 속도를 제어함으로써 불필요한 전력 소 모를 방지할 수 있다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 기술의 실시예를 보다 구체적으로 설명한다. 도 1은 일 실시예에 의한 전자 시스템의 구성도이다. 도 1을 참조하면, 일 실시예에 의한 전자 시스템은 데이터 처리 시스템 및 이와 통신하는 호스트(20 0)를 포함할 수 있다. 호스트는 데이터 처리 시스템으로 데이터 처리와 관련된 요청(REQ), 어드레스(ADD), 그리고 필요에 따라 데이터(DATA)를 전송할 수 있다. 데이터 처리 시스템은 호스트의 요청(REQ), 어드레스(ADD) 및 데이터(DATA)에 응답하여 요청(REQ)에 대응하는 동작을 수행하고, 처리 결과로 도출된 데이터(DATA)를 호스트 로 전송할 수 있다. 데이터 처리 시스템과 호스트 간에 송수신되는 데이터(DATA)의 양이 증가하고, 호스트가 스마트 폰, 태블릿 PC, 노트북 등과 같이 소형화된 장치로 구현됨에 따라, 호스트는 데이터 처리 시스템에 의존하여 연산을 처리할 수 있다. 즉, 데이터 처리 시스템은 단순한 데이터의 저장이나 출력 뿐 아니라 자체적으로 데이터(DATA)를 연산하도록 구성될 수 있다. 데이터 처리 시스템은 슈퍼컴퓨터 또는 컴퓨터 클러스터를 사용하여 협력적인 방식으로 고급 연산을 수행 하는 고성능 컴퓨팅(High Performance Computing: HPC) 장치, 또는 개별적으로 데이터(DATA)를 처리하는 네트 워킹된 정보 처리 장치들 또는 서버들의 어레이를 포함할 수 있다. 데이터 처리 시스템은 데이터(DATA)를 저장 또는 연산하고, 연산된 데이터(DATA)를 출력하도록 복수의 데 이터 처리 장치를 포함할 수 있다. 데이터 처리 시스템을 구성하는 데이터 처리 장치는 적어도 하나의 서버 컴퓨터, 또는 서버 컴퓨터 각각을 구성하는 적어도 하나의 랙(Rack), 또는 각각의 랙을 구성하는 적어도 하나의 보드를 포함할 수 있다. 이와 같이, 데이터 처리 시스템은 정보 처리 성능을 향상시키기 위해 복수의 데이터 처리 장치를 포함하고, 각 데이터 처리 장치는 상호 간에 데이터를 송수신 또는 공유할 수 있도록 전기적으로 네트워킹될 수 있다. 도 2는 일 실시예에 의한 데이터 처리 시스템의 구성도이다. 도 2를 참조하면, 일 실시예에 의한 데이터처리 시스템은 컨트롤러 및 메모리풀을 포함할 수 있 다. 컨트롤러는 메모리풀과 접속되어 메모리풀에 대한 데이터 입출력을 제어할 수 있다. 컨트롤러 는 호스트의 요청(REQ)으로부터 명령(CMD)을 생성하여 생성된 명령(CMD)에 따라 데이터를 처리할 수 있다. 데이터를 처리한다는 것은, 메모리풀에 저장된 데이터를 리드하는 동작, 리드한 데이터에 기초하여 연산하는 동작, 연산된 데이터를 호스트 또는 메모리 풀로 제공하는 동작을 포함할 수 있다. 도 2를 참조하면, 컨트롤러는 호스트 인터페이스, ROM, RAM, 메모리 컨트롤러, 버 퍼 메모리 및 프로세서 그룹를 포함할 수 있고, 버퍼 메모리를 제어하기 위한 버퍼 제어 회로 를 포함할 수 있다. 호스트 인터페이스는 호스트와 컨트롤러 간의 인터페이스를 제공할 수 있다. 호스트 인터페이 스는 호스트로부터 제공되는 커맨드를 저장 및 스케쥴링하여 프로세서 그룹으로 제공할 수 있다. 호스트 인터페이스는 호스트로부터 제공되는 라이트 데이터를 메모리 컨트롤러로 제공하 거나, 메모리풀로부터 메모리 컨트롤러를 통해 제공된 리드 데이터 또는 프로세서 그룹에서 출 력되는 데이터를 호스트로 제공할 수 있다. ROM은 컨트롤러의 동작에 필요한 프로그램 코드, 예를 들어 펌웨어 또는 소프트웨어가 저장되고, 프 로그램 코드들이 이용하는 코드 데이터 등이 저장될 수 있다. RAM은 컨트롤러의 동작에 필요한 데이터 또는 컨트롤러에 의해 생성된 데이터를 저장할 수 있 다. 메모리 컨트롤러는 호스트 인터페이스로부터 제공된 데이터를 메모리풀으로 전송하거나, 메모리 풀에서 리드한 데이터를 전달받아 호스트 인터페이스 또는 버퍼 메모리로 제공할 수 있다. 버퍼 메모리는 버퍼 제어 회로의 제어에 따라 메모리 풀로부터 리드된 데이터를 저장할 수 있다. 버퍼 메모리에 저장된 데이터는 프로세서 그룹에 의해 독출될 수 있다. 프로세서 그룹은 복수의 코어(C0~Cn)를 포함하여, 호스트의 어플리케이션 오프로드 처리 요청에 따라, 메모리 풀로부터 데이터를 리드하고 클럭 신호에 응답하여 처리 요청된 어플리케이션의 프로그램 코 드를 연산할 수 있다. 오프로드란 호스트의 연산을 다른 장치, 예를 들어 데이터 처리 시스템으로 위임하는 것을 의미한다. 빅 데이터 분석, 머신 러닝 등과 같은 어플리케이션은 방대한 양의 데이터를 대상으로 하는 연산을 요구한다. 이러한 요구에 따라 호스트의 연산을 컴퓨팅 엔진, 즉 프로세서 그룹에 위임하여 처리할 수 있는 데 이터 처리 장치에 대한 연구가 이루어지고 있다. 이러한 전자 장치에서 호스트는 방대한 양의 데이터 연산을 데이터 처리 시스템에서 수행하는 동안 다른 작업을 할 수 있어 작업 효율이 향상될 수 있다. 일 실시예에서, 호스트는 어플리케이션의 오프로드 처리 요청시 데이터 처리 시스템으로 초기 파라미 터를 전송하여 메모리풀에 저장할 수 있다. 프로세서 그룹의 코어(C1~Cn)에서 어플리케이션을 분산 처리하기 위하여 메모리 컨트롤러는 메모리풀에 저장된 초기 파라미터를 버퍼 메모리에 저장하 고, 코어(C1~Cn)는 버퍼 메모리로부터 초기 파라미터를 리드하여 어플리케이션의 프로그램 코드를 실행, 즉 연산할 수 있다. 일 실시예에서, 메모리풀로부터 리드된 데이터는 페이지(로우 라인) 단위로 버퍼 메모리에 전송되어 페이지 단위로 저장될 수 있다. 프로세서 그룹의 각 코어(C1~Cn)는 버퍼 메모리에 독립적으로 접근 하여 데이터를 리드할 수 있다. 도 3은 일 실시예에 의한 버퍼 제어 회로의 구성도이고, 도 4는 일 실시예에 의한 버퍼 메모리 운용 방법을 설 명하기 위한 개념도이다. 도 3을 참조하면, 버퍼 제어 회로는 입출력 관리부, 커맨드 처리부 및 속도 제어부를 포함 할 수 있다. 입출력 관리부는 라이트 포인터(WP) 및 리드 포인터(RP)를 통해 버퍼 메모리에 대한 데이터의 입출력 을 관리할 수 있다. 예를 들어, 버퍼 메모리에 데이터를 입력(라이트)할 때 라이트 포인터(WP)가 가리키 는 주소에 대응하는 영역에 데이터를 라이트하고 라이트 포인터(WP)를 증가시킬 수 있다. 버퍼 메모리로 부터 데이터를 출력(리드)할 때에는 리드 포인터(RP)가 가리키는 주소에 대응하는 영역으로부터 데이터를 리드 하고 리드 포인터(RP)를 증가시킬 수 있다. 도 4에 도시한 것과 같이, 버퍼 메모리는 각각의 코어(C0~Cn)에 대응하여 접속되는 복수의 버퍼(B0~Bn)를 포함할 수 있다. 각 버퍼(B0~Bn)는 FIFO 방식으로 데이터를 입출력할 수 있으나 이에 한정되는 것은 아니다. 각 버퍼(B0~Bn)의 깊이(depth)는 페이지의 개수일 수 있고, 도 4에는 깊이가 m인, 즉 m개의 페이지를 갖는 버퍼 (B0~Bn)를 도시하였다. 메모리 풀로부터 제공되는 데이터가 페이지 단위로 버퍼 메모리에 저장됨에 따라 버퍼 메모리에 데이터를 라이트할 위치는 단일의 라이트 포인터(WP)로 관리할 수 있다. 또한, 복수의 코어(C0~Cn) 별로 버퍼 (B0~Bn)가 구비되어 각각의 코어(C0~Cn)가 독립적으로 데이터를 리드함에 따라, 데이터를 리드할 위치는 각 코 어(C0~Cn)별 리드 포인터(RPx)로 관리될 수 있다. 입출력 관리부는 라이트 포인터(WP) 및 리드 포인터(RPx)를 0번지로 설정함에 의해 버퍼 메모리를 초 기화할 수 있다. 커맨드 처리부는 메모리 컨트롤러 또는 프로세서 그룹의 입력 또는 출력 커맨드를 전송받아 대 응하는 동작을 수행할 수 있다. 속도 제어부는 프로세서 그룹을 구성하는 복수의 코어(C0~Cn) 각각의 데이터 처리 성능에 따라 복수 의 코어(C0~Cn)의 속도를 개별적으로 또는 전체적으로 조정할 수 있다. 일 실시예에서, 복수의 코어(C0~Cn)에 대한 속도 조정은 클럭 주파수를 변경하는 동작일 수 있으나 이에 한정되는 것은 아니다. 코어(C0~Cn)별 데이터 처리 성능은 코어(C0~Cn)별 버퍼(B0~Bn)의 미독출 데이터 양에 따라 결정할 수 있으나 이 에 한정되지 않는다. 또한, 버퍼(B0~Bn)별 미독출 데이터의 양은 라이트 포인터(WP) 및 리드 포인터(RPx)에 기 초하여, 예를 들어 라이트 포인터(WP)가 가리키는 주소에서 리드 포인터(RPx)가 가리키는 주소의 차인 포인터 차이값(SUB=WP-RPx)에 기초하여 확인할 수 있다. 일 실시예에서, 제 1 기준값(REF1)을 \"0\"으로 설정한 경우, 포인터 차이값(SUB)이 제 1 기준값(REF1)보다 작은, 즉 리드 포인터(RPx)가 라이트 포인터(WP)보다 앞서 있는 비어있는(Empty) 버퍼와 접속된 코어의 성능 레벨은 유휴 상태로 판단할 수 있다. 일 실시예에서, 포인터 차이값(SUB)이 제 2 기준값(REF2)보다 작은 버퍼와 접속 된 코어의 성능 레벨은 바쁘지 않은(Not-busy) 상태로 판단할 수 있다. 포인터 차이값(SUB)이 제 2 기준값 (REF2) 이상인 버퍼와 접속된 코어의 성능 레벨은 비지 상태로 판단할 수 있다. 속도 제어부는 코어의 성능 레벨에 따라 코어의 동작 속도, 실질적으로는 클럭 주파수를 조정할 수 있다. 개별 코어 별로 성능 레벨에 따라 동작 속도를 조정하는 예를 표로 정리하면 다음과 같다. 표 1 포인터 차이값 SUB = WP - RPx코어 성능 레벨 클럭 주파수 SUB < REF1(=0) 유휴 상태 주파수 하향 또는 오프 SUB < REF2 Not-busy 상태 주파수 하향 SUB ≥ REF2 Busy 상태 주파수 상향 속도 제어부는 상기와 같이 각 코어 별 성능 레벨에 따라 코어 별로 동작 속도를 제어할 수 있으나, 이에 한정되지 않으며, 코어 전체의 동작 속도를 일괄 제어하는 것도 가능하다. 일 실시예에서, 전체 코어 중 어느 하나라도 유휴 상태인 경우, 또는 전체 코어 중 기 설정된 개수 이상의 코어가 바쁘지 않은 상태인 경우, 전체 코어의 클럭 주파수를 하향 조정할 수 있다. 복수의 코어가 하나의 컴퓨팅 엔진에 포함되는 데이터 처리 시스템에서는 각 코어(CO~Cn)들마다 데이터 처 리 속도가 상이할 수 있다. 컴퓨팅 엔진의 성능은 최저 동작 속도를 갖는 코어에 의해 결정되므로 전체 코어 (CO~Cn)의 데이터 처리 속도 간에 균형을 맞추어야 전력 소모를 최소화할 수 있다. 버퍼 메모리에는 페이지 단위로 데이터가 입력되기 때문에, 특정 코어가 버퍼의 모든 데이터를 리드하여 버퍼가 빈 상태가 되면, 다른 코어가 모든 데이터를 리드하고 연산할 때까지 데이터를 리드하지 못하고 유휴 상 태가 되는 상황이 발생하게 된다. 따라서, 본 기술에서는 잔여 작없이 없거나 적은 코어의 동작 속도는 늦추고, 잔여 작업이 많은 코어의 동작 속 도는 높여 프로세서 그룹 내 모든 코어(CO~Cn) 간에 속도 균형을 맞출 수 있다. 도 5는 일 실시예에 의한 속도 제어부의 구성도이다. 도 5를 참조하면, 속도 제어부는 감산 회로, 비교 회로 및 클럭 생성 회로를 포함할 수 있 다. 감산 회로는 라이트 포인터(WP) 및 각 코어별 리드 포인터(RPx)를 제공받아 감산하여 포인터 차이값(SUB x)을 출력할 수 있다. 비교 회로는 포인터 차이값(SUBx), 제 1 기준값(REF1) 및 제 2 기준값(REF2)을 제공받아 제 1 비교 신호 (COMP1) 및 제 2 비교 신호(COMP2)를 생성할 수 있다. 일 실시예에서, 비교 회로는 포인터 차이값(SUBx)과 제 1 기준값(REF1)의 비교 결과에 따라 제 1 비교 신 호(COMP1)를 생성하고, 포인터 차이값(SUBx)과 제 2 기준값(REF2)의 비교 결과에 따라 제 2 비교 신호(COMP2)를 생성할 수 있다. 클럭 생성 회로는 기준 클럭 신호(ICLK)를 제공받으며, 제 1 및 제 2 비교 신호(COMP1, COMP2)에 응답하여 기준 클럭 신호(ICLK)의 주파수를 조정한 변조 클럭 신호(MCLK)를 출력할 수 있다. 일 실시예에서, 제 1 비교 신호(COMP1)는 클럭 생성 회로의 인에이블 여부를 결정하는 신호일 수 있다. 따라서, 포인터 차이값(SUBx)이 제 1 기준값(REF1)보다 작은 경우 제 1 비교 신호(COMP1)는 클럭 생성 회로 를 디스에이블시킬 수 있는 레벨로 출력될 수 있다. 일 실시예에서, 제 2 비교 신호(COMP2)는 클럭 생성 회로의 발진 주파수를 제어할 수 있는 신호일 수 있다. 따라서, 제 1 비교 신호(COMP1)에 의해 클럭 생성 회로가 인에이블되면 제 2 비교 신호(COMP2)에 대응하는 발진 주파수를 갖는 변조 클럭 신호(MCLK)가 출력될 수 있다. 변조 클럭 신호(MCLK)는 해당하는 코어(Cx)로 제 공되고, 코어(Cx)는 변조 클럭 주파수(MCLK)에 대응하는 속도로 동작할 수 있다. 도 6은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 도 6을 참조하면, 일 실시예에 의한 데이터 처리 시스템의 속도 제어부는 각 코어(C0~Cn)별로 접속된 버퍼(B0~Bn)의 미독출 데이터의 양을 체크할 수 있다(S101). 일 실시예에서, 속도 제어부는 입출력 관리 부로부터 각 버퍼(B0~Bx)의 라이트 포인터(WP)와 리드 포인터(RPx)가 가리키는 주소를 제공받아 포인터 차 이값(SUBx)을 도출함에 의해 미독출 데이터의 양을 확인할 수 있다(S101).속도 제어부는 포인터 차이값(SUBx), 제 1 기준값(REF1) 및 제 2 기준값(REF2)에 기초하여 코어(C0~Cn)의 개별 또는 전체적인 성을 레벨을 판단할 수 있다(S103). 그리고, 속도 제어부는 성능 레벨 판단 결과에 따라 각각의 코어(C0~Cn)별로 또는 코어(C0~Cn) 전체의 속 도를 조정할 수 있다(S105). 코어의 성능 레벨에 따라 속도를 조정하는 구체적인 실시예는 도 7 및 도 8을 참 조하여 설명하기로 한다. 도 7은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도로서, 코어의 속도를 개별적 으로 조정하는 실시예를 나타낸다. 도 7을 참조하면, 속도 제어부는 포인터 차이값(SUBx)을 제 1 기준값(REF1)과 비교할 수 있다(S201). 제 1 기준값(REF1)은 예를 들어 \"0\"으로 설정될 수 있고, 포인터 차이값(SUBx)이 제 1 기준값(REF1) 보다 작은 경 우(S201:Y), 즉 리드 포인터(RPx)가 라이트 포인터(WP)보다 앞서 있는 경우에는 해당 버퍼가 비어있는(Empty) 것으로 판단할 수 있다. 속도 제어부는 빈 버퍼와 접속된 코어의 성능 레벨을 유휴 상태로 판단하고 해당 코어를 디스에이블하거나 동작 주파수를 하향 조정할 수 있다(S203). 한편, 포인터 차이값(SUBx)이 제 1 기준값(REF1) 보다 큰 경우(S201:N), 속도 제어부는 포인터 차이값 (SUBx)을 제 2 기준값(REF2)과 비교할 수 있다(S205). 포인터 차이값(SUBx)이 제 2 기준값(REF2) 보다 작은 경우(S205:Y), 해당 버퍼와 접속된 코어의 성능 레벨은 바 쁘지 않은(Not-busy) 상태로 판단할 수 있으며, 동작 주파수를 하향 조정할 수 있다(S207). 속도 제어부는 포인터 차이값(SUBx)이 제 2 기준값(REF2) 이상인 버퍼와 접속된 코어의 성능 레벨은 비지 상태로 판단할 수 있고, 동작 주파수는 유지 또는 상향 조정될 수 있다(S209). 도 8은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도로서, 코어의 속도를 일괄 조 정하는 실시예를 나타낸다. 속도 제어부는 프로세서 그룹에 포함된 각각의 코어별 미독출 데이터양을 확인할 수 있다(S301). 일 실시예에서, 속도 제어부는 미독출 데이터양을 확인하기 위해 각 버퍼(B0~Bn) 별 포인터 차이값(SUBx) 을 제 1 기준값(REF1=0)과 비교할 수 있다. 포인터 차이값(SUBx)이 제 1 기준값(REF1) 보다 작은 버퍼, 즉 비어 있는 버퍼에 접속된 코어가 하나라도 검출 되는 경우(S303:Y), 속도 제어부는 모든 코어(C0~Cn)의 동작 주파수를 하향 조정할 수 있다(S305). 한편, 비어 있는 상태의 버퍼가 검출되지 않은 경우(S303:N)에는 전체 코어 중 바쁘지 않은(Not busy) 상태의 코어의 개수가 설정 개수(TH) 이상 검출되는지 확인할 수 있다(S307). 일 실시예에서, 속도 제어부는 포 인터 차이값(SUBx)이 제 2 기준값(REF2)보다 작은 버퍼와 접속된 코어가 설정 개수(TH) 이상 검출되는지 확인할 수 있다. 그리고, 설정 개수(TH) 이상의 코어가 바쁘지 않은 상태인 경우(S307:Y), 속도 제어부는 전체 코어의 클럭 주파수를 하향 조정하고(S309), 그렇지 않은 경우(S307:N) 전체 코어의 클럭 주파수를 유지 또는 상향 조정할 수 있다(S311). 본 기술의 데이터 처리 시스템은 로직 다이 상이 메모리 풀을 적층하여 구성할 수 있다. 도 9는 일 실시예에 의한 적층형 반도체 장치의 구성도이다. 일 실시예에 의한 적층형 반도체 장치는 복수의 다이가 적층된 적층 구조체를 포함할 수 있다. 적층 구조체는 복수의 다이를 적층하고, 관통 전극(TSV, Through Silicon Via)을 통해 전기적으로 연결시킴으로 써 입/출력 유닛의 수를 늘려 대역폭(Bandwidth)을 증가시킨 HBM(High Bandwidth Memory) 형태로 구성될 수 있 다. 적층 구조체는 베이스 다이(Base Die) 및 복수의 코어 다이(Core Die)를 포함할 수 있다. 복수의 코어 다이는 베이스 다이 상에 적층될 수 있으며, 관통 전극(TSV)을 통해 서로 연결될 수 있 다. 코어 다이 각각에는 데이터를 저장하기 위한 메모리 셀들 및 메모리 셀의 코어 동작을 위한 회로들이 배치될 수 있다.코어 다이는 관통전극(TSV)을 통해 베이스 다이와 전기적으로 접속되어, 관통전극(TSV)을 통해 베이 스 다이로부터 신호 및 전원 등을 제공받을 수 있다. 베이스 다이는 예를 들어 도 2 및 도 3에 도시한 것과 같은 컨트롤러를 포함할 수 있다. 베이스 다 이는 적층형 반도체 장치 내의 다양한 기능, 예를 들어, 메모리 셀들의 전력 관리 및 리프레쉬와 같은 메모리 관리 기능 혹은 코어 다이와 베이스 다이 간의 타이밍조절 기능들을 수행할 수 있다. 베이스 다이에 구비되는 물리 영역(PHY)은 어드레스, 명령어, 데이터, 제어신호 등의 입출력 영역일 수 있 다. 물리 영역(PHY)에는 적층형 반도체 장치에 요구되는 데이터 처리 속도를 만족시킬 수 있는 수만큼의 입출력 회로부가 구비될 수 있다. 그리고 베이스 다이의 배면 중 물리 영역(PHY) 부분에는 입출력 동작시 필요한 신호 및 전원을 공급받을 수 있도록 복수의 입출력 단자와 전원공급 단자가 구비될 수 있다. 도 10은 일 실시예에 의한 적층형 반도체 장치의 구성도이다. 도 10을 참조하면, 적층형 반도체 장치는 복수의 코어 다이와 베이스 다이의 적층 구조체, 메모리 호스트 및 인터페이스 기판을 포함할 수 있다. 호스트는 CPU, 또는 GPU, 또는 ASIC(Application Specific Integrated Circuit), 또는 FPGA(Field Programmable Gate Arrays) 등이 될 수 있 다. 베이스 다이는 코어 다이와 호스트 간의 인터페이스를 위한 회로가 실장될 수 있다. 적층 구조 체는 도 9를 참조하여 설명한 것과 유사한 구조를 가질 수 있다. 적층 구조체와 호스트는 인터페이스 기판을 통해 각각의 물리 영역(PHY)이 연결될 수 있다. 인 터페이스 기판은 인터포저(Interposer)가 지칭될 수 있다. 도 11은 일 실시예에 의한 적층형 반도체 장치의 구성도이다. 도 11에 도시한 적층형 반도체 장치는 도 10에 도시한 적층형 반도체 장치를 패키지 기판 상에 배치한 것으로 이해할 수 있다. 패키지 기판과 인터페이스 기판은 접속단자를 통해 전기적으로 접속될 수 있다. 인터페이스 기판 상에 도 9에 도시한 것과 같은 적층 구조체 및 호스트를 적층하고, 이를 패키 지 기판에 장착한 후 패키징하므로써 시스템 인 패키지(System In Package; SiP) 타입의 반도체 장치를 구 현할 수 있다. 도 12는 일 실시예에 의한 네트워크 시스템의 구성도이다. 도 12를 참조하면, 네트워크 시스템은 네트워크를 통해서 연결된 서버 시스템 및 복수의 클 라이언트 시스템들(5410~5430)을 포함할 수 있다. 서버 시스템은 복수의 클라이언트 시스템들(5410~5430)의 요청에 응답하여 데이터를 서비스할 수 있다. 예를 들면, 서버 시스템은 복수의 클라이언트 시스템들(5410~5430)로부터 제공된 데이터를 저장할 수 있 다. 다른 예로서, 서버 시스템은 복수의 클라이언트 시스템들(5410~5430)로 데이터를 제공할 수 있다. 서버 시스템은 호스트 및 메모리 시스템을 포함할 수 있다. 메모리 시스템은 도 2 내 지 도 4에 도시한 데이터 처리 시스템으로 구성될 수 있다."}
{"patent_id": "10-2019-0094748", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명이 속하는 기술분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고서 다른 구 체적인 형태로 실시될 수 있으므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 본 발명의 범위는 상기 상세한 설명보다는 후술하는 특허청구범위에 의하여 나 타내어지며, 특허청구범위의 의미 및 범위 그리고 그 등가개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12"}
{"patent_id": "10-2019-0094748", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 의한 전자 시스템의 구성도이다. 도 2는 일 실시예에 의한 데이터 처리 시스템의 구성도이다. 도 3은 일 실시예에 의한 버퍼 제어 회로의 구성도이다. 도 4는 일 실시예에 의한 버퍼 메모리 운용 방법을 설명하기 위한 개념도이다. 도 5는 일 실시예에 의한 속도 제어부의 구성도이다. 도 6은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 도 7은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 도 8은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 도 9 내지 도 11은 실시예들에 의한 적층형 반도체 장치의 구성도이다. 도 12는 일 실시예에 의한 네트워크 시스템의 구성도이다."}
