{"patent_id": "10-2023-0082840", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0000729", "출원번호": "10-2023-0082840", "발명의 명칭": "UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법 및 시스템", "출원인": "에스케이 주식회사", "발명자": "서대웅"}}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "시스템이, 화면에 출력되는 UI를 이용하여, 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하는 제1 단계;시스템이, 화면에 출력되는 UI를 이용하여, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하는 제2 단계; 및시스템이, 화면에 출력되는 UI를 이용하여, 해당 클래스의 속성으로 설정된 정보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 제3 단계;를 포함하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,제2 단계는, 설정된 클래스를 수행하기 위해 필요한 하나 이상의 정보를 설정하고, 설정된 각 정보가 입력될 슬롯(Slot)을생성하는 것을 특징으로 하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,코드 블록은, 정보 획득 로직을 통해 획득된 정보를 검증하기 위한 정보 검증 로직을 더 포함하는 것을 특징으로 하는 UI를이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,코드 블록은,획득되는 정보가 입력될 슬롯(Slot)이 생성된 이후, 정보가 입력되면, 해당 정보 획득 로직에 대응되는 정보 검증 로직을 통해 입력된 정보를 검증하여, 검증된 정보가 슬롯에 입력되는 것을 특징으로 하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 3에 있어서,코드 블록은, constant(상수)로 정의되고, constant로 정의된 코드블록은, constant의 명칭에 해당하는 block 명, 들여쓰기(indentation)에 필요한 정보인 level 및 코드블록 내의 변수(key)를 어떤 값(value)으로 채울지 정의하는 info에 대한 정보가 포함되는 것을 특징으로 하는 UI를 이용한 목공개특허 10-2025-0000729-3-적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 2에 있어서,제3 단계는,화면에 출력되는 UI를 통해 기작성된 코드 블록을 호출하고, 정보가 입력될 슬롯에 호출된 코드 블록 중 특정 코드 블록을 드래그 앤 드롭 방식으로 조합하여 대화 흐름을구성하는 것을 특징으로 하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 1에 있어서,제3 단계가 완료된 이후, 정보 획득 과정에서 입력되는 정보의 속성에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과의 연동 여부를 설정하는 제4 단계;를 더 포함하는 것을 특징으로 하는 UI를 이용한 목적지향챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서,제4 단계는,해당 클래스의 속성으로 설정된 정보의 획득 과정에서 입력되는 정보의 속성값이 False인 경우, 해당 클래스의대화 흐름에서 벗어난 것으로 판단하여 외부 대화형 인공지능 챗봇 엔진과 연동되도록 하고, 외부 대화형 인공지능 챗봇 엔진과 연동된 상태에서 해당 클래스의 대화 흐름에 진입하는 경우, 재차 해당 클래스의 정보 획득 로직을 통해 정보 획득 과정이 진행되도록 하는 것을 특징으로 하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 7에 있어서,제1 단계는, FAQ(Frequently asked questions)를 챗봇 기반의 업무별로 구성하며,제4 단계는,해당 클래스의 대화 흐름에서 벗어난 것으로 판단되는 경우, 다른 클래스의 대화 흐름에 진입한 것인지 여부를판단하고, 설정된 모든 클래스의 대화 흐름에서 벗어난 것으로 판단되면, 외부 대화형 인공지능 챗봇 엔진과 연동되도록 하는 것을 특징으로 하는 UI를 이용한 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법."}
{"patent_id": "10-2023-0082840", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "화면에 UI를 출력하는 출력부;UI를 통해 정보를 입력받는 입력부; 및 입력부를 통해 입력되는 정보를 기반으로 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하고, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하며, 해당 클래스의 속성으로 설정된 정보를 획공개특허 10-2025-0000729-4-득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을구성하는 프로세서;를 포함하는 챗봇 시스템."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "목적지향 챗봇 시스템에서의 객체지향적 대화 흐름 구성 및 제어 방법이 제공된다. 본 발명의 실시예에 따른 목 적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법은, 시스템이, 화면에 출력되는 UI를 이용하여, 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하는 제1 단계; 시스템이, 화면에 출력되는 UI를 이용하여, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하는 제2 단계; 및 시스템이, 화면에 출력되는 UI를 이용하여, 해당 클래스의 속성으로 설정된 정보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하 여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 제3 단계;를 포함한다. 이에 의해, 미리 정의된 코 드블록을 활용하여 UI를 통해 쉽게 대화의 속성을 정의하고 획득로직과 검증로직을 조합하여 기존에 구현이 난해 했던 대화 중간에 다른 대화로 연결되거나 다른 대화로 이동 후 다시 돌아오는 구조 등을 쉽게 구현할 수 있다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 목적지향 챗봇 시스템에 관한 것으로, 더욱 상세하게는 목적지향 챗봇 시스템에서의 객체지향적 대화 흐름 구성 및 제어 방법에 관한 것이다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "챗봇(chatbot)의 대화는 크게 목적지향적（Task Oriented） 대화와 비목적성대화（Chitchat）으로 구분할 수 있 다. 목적지향적 대화를 구성함에 있어 가장 많이 사용되는 것이 Tree구조 인데, Tree구조는 현실에서 사람이 업무를 처리하는 프로세스를 표현하다 보면 그 복잡성이 지나치게 높아진다는 단점이 존재한다 그로 인해 슬롯(slot)이라는 개념을 활용하여 slot을 채우는 방식으로 대화를 진행하는 방법이 복합적으로 사용 되기도 하나, 이 역시 tree 구조의 보조적 수단으로 활용되는데 지나지 않았다. 모든 분기를 if/else로 표현하기 어려운 한계를 극복하기 위해 RASA opensource framework는 slot을 채우는 form과 대화 시나리오를 학습시키는 story를 함께 사용하는 방법을 제안하고 있으나, 이 역시 완벽한 대화 흐름 을 컨트롤하기에는 부족하다는 단점이 있다. 더불어, 목적지향 챗봇 시스템과 관련하여 직관적으로 대화 흐름과 정보를 채우는 순서를 확인할 수 있는 UI 도 구가 없어, 이에 대한 방안의 모색이 요구된다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위하여 안출된 것으로서, 본 발명의 목적은, 미리 정의된 코드블록을 활용하여 UI(사용자 인터페이스)를 통해 쉽게 대화의 속성을 정의하고 획득로직과 검증로직을 조합하여 대화 객 체를 구성할 수 있는 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법 및 시스템을 제공함에 있다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 발명의 일 실시예에 따른, 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법 은, 시스템이, 화면에 출력되는 UI를 이용하여, 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하는 제1 단계; 시스템이, 화면에 출력되는 UI를 이용하여, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하는 제2 단계; 및 시스템이, 화면에 출력되는 UI를 이용하여, 해당 클래스의 속성으로 설정된 정 보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 제3 단계;를 포함한다. 그리고 제2 단계는, 설정된 클래스를 수행하기 위해 필요한 하나 이상의 정보를 설정하고, 설정된 각 정보가 입 력될 슬롯(Slot)을 생성할 수 있다. 또한, 코드 블록은, 정보 획득 로직을 통해 획득된 정보를 검증하기 위한 정보 검증 로직을 더 포함할 수 있다. 그리고 코드 블록은, 획득되는 정보가 입력될 슬롯(Slot)이 생성된 이후, 정보가 입력되면, 해당 정보 획득 로 직에 대응되는 정보 검증 로직을 통해 입력된 정보를 검증하여, 검증된 정보가 슬롯에 입력되도록 할 수 있다. 또한, 코드 블록은, constant(상수)로 정의되고, constant로 정의된 코드블록을 활용하기 위해서는, constant의 명칭에 해당하는 block 명, 들여쓰기(indentation)에 필요한 정보인 level 및 코드블록 내의 변수(key)를 어떤값(value)으로 채울지 정의하는 info에 대한 정보가 포함될 수 있다. 그리고 제3 단계는, 화면에 출력되는 UI를 통해 기작성된 코드 블록을 호출하고, 정보가 입력될 슬롯에 호출된 코드 블록 중 특정 코드 블록을 드래그 앤 드롭 방식으로 조합하여 대화 흐름을 구성할 수 있다. 또한, 본 실시예에 따른, 목적지향 챗봇에서의 객체지향적 대화 흐름 구성 방법은, 제3 단계가 완료된 이후, 정 보 획득 과정에서 입력되는 정보의 속성에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과의 연동 여 부를 설정하는 제4 단계;를 더 포함할 수 있다. 그리고 제4 단계는, 해당 클래스의 속성으로 설정된 정보의 획득 과정에서 입력되는 정보의 속성값이 False인 경우, 해당 클래스의 대화 흐름에서 벗어난 것으로 판단하여 외부 대화형 인공지능 챗봇 엔진과 연동되도록 하 고, 외부 대화형 인공지능 챗봇 엔진과 연동된 상태에서 해당 클래스의 대화 흐름에 진입하는 경우, 재차 해당 클래스의 정보 획득 로직을 통해 정보 획득 과정이 진행되도록 할 수 있다. 또한, 제1 단계는, FAQ(Frequently asked questions)를 챗봇 기반의 업무별로 구성하며, 제4 단계는, 해당 클 래스의 대화 흐름에서 벗어난 것으로 판단되는 경우, 다른 클래스의 대화 흐름에 진입한 것인지 여부를 판단하 고, 설정된 모든 클래스의 대화 흐름에서 벗어난 것으로 판단되면, 외부 대화형 인공지능 챗봇 엔진과 연동되도 록 할 수 있다. 한편, 본 발명의 다른 실시예에 따른, 챗봇 시스템은, 화면에 UI를 출력하는 출력부; UI를 통해 정보를 입력받 는 입력부; 및 입력부를 통해 입력되는 정보를 기반으로 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하고, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하며, 해당 클래스의 속성으로 설정 된 정보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 프로세서;를 포함할 수 있다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상 설명한 바와 같이, 본 발명의 실시예들에 따르면, 미리 정의된 코드블록을 활용하여 UI를 통해 쉽게 대화 의 속성을 정의하고 획득로직과 검증로직을 조합하여 기존에 구현이 난해했던 대화 중간에 다른 대화로 연결되 거나 다른 대화로 이동 후 다시 돌아오는 구조 등을 쉽게 구현할 수 있다."}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 도 1은 본 발명의 일 실시예에 따른 챗봇 시스템의 구성 설명에 제공된 도면이다. 본 실시예에 따른 챗봇 시스템은, 시스템과의 대화를 통해 챗봇 기반의 업무(ex. 비용 납입, 일정 관리, 호텔/ 식당/항공권 등의 예약, 음악 듣기 등 명령 전달, 콜센터 상담 등)를 처리하기 위한 목적지향 대화 시스템으로 서, 챗봇 기반의 업무에 관한 대화 자체를 하나의 객체로 취급하여 FAQ(Frequently asked questions) 허용 여부, 연동해야 할 외부 시스템(ex. chatGPT와 같은 외부 대화형 인공지능 챗봇 엔진)의 종류 등을 대화의 속성 으로 관리할 수 있다. 예를 들면, 챗봇 시스템은, 관리자로부터(단말을 통해) 전달되는 정보 및 명령을 기반으로 챗봇 기반의 업무에 관한 대화 자체를 하나의 객체로 취급하여 해당 업무를 처리하기 위한 대화 흐름(대화 시나리오)을 구성하고, 서비스(챗봇 서비스) 플랫폼을 통해 연결되는 사용자로부터 획득되는 정보를 기반으로 대화 흐름을 제어할 수 있다. 이때, 챗봇 시스템은, 별도로 마련되는 사용자 데이터베이스(DB) 또는 챗봇용 레거시(legacy) 챗봇 시스템과 연 동하여 정보 획득을 위한 질문을 조립할 수 있다. 또한, 챗봇 시스템은, 사용자와의 대화(정보 획득 과정) 중 사용자와 대화를 통해 획득되는 정보에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과 연동되어, 사용자와의 대화(질의, 요청 등)에 대응할 수 있다. 이를 위해, 본 챗봇 시스템은, 도 1에 도시된 바와 같이 통신부, 프로세서, 입력부, 출력부 및 저장부를 포함할 수 있다. 통신부는, 챗봇 시스템이 관리자, 서비스 플랫폼을 통해 연결되는 사용자 및 외부 챗봇 엔진 등에 연결되 도록 할 수 있다. 즉, 통신부는, 대화 흐름(대화 시나리오)을 구성하는데 필요한 명령 또는 정보들을 관리자로부터 획득하거 나 사용자로부터 수행하고자 하는 챗봇 기반의 업무에 대한 정보를 획득할 수 있다. 입력부는, 마우스, 터치 인터페이스, 키보드 등 관리자의 입력을 수신하는 입력 인터페이스 장치를 포함하 여, UI를 통해 정보를 입력 받을 수 있다. 예를 들면, 입력부는, 마우스 또는 터치 인터페이스를 포함하여, 드래그 앤 드롭 방식으로 코드 블럭을 정 보가 입력될 슬롯에 연결(입력)할 수 있다. 출력부는 프로세서가 동작하여 출력하고자 하는 정보들을 화면에 출력하는 디스플레이 수단으로서, 화면에 UI를 출력할 수 있다. 저장부는, 프로세서가 동작함에 있어 필요한 프로그램 및 정보를 저장하기 위한 저장매체이다. 프로세서는, 입력부를 통해 입력되는 정보를 기반으로 챗봇 기반의 업무를 하나의 클래스(Class)로 설정하고, 설정된 클래스를 수행하기 위해 필요한 정보를 해당 클래스의 속성으로 설정하며, 해당 클래스의 속 성으로 설정된 정보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처 리하기 위한 대화 흐름을 구성할 수 있다. 여기서, 코드 블록은, 봇 응답 단위로서, 정보 획득 로직 및 정보 획득 로직을 통해 획득된 정보를 검증하기 위 한 정보 검증 로직할 수 있다. 예를 들면, 프로세서는 사용자에게 \"홍길동 고객님 맞으십니까\" 라고 물어보기 위해서 사용자가 로그인 되 었는지 여부를 체크하고 로그인되었다면 홍길동이라는 사용자 명을 챗봇 시스템과 연결되는 레거시 챗봇 시스 템에서 조회하여 획득한 뒤 질문을 조립해야 하는데, 이때, 시스템 연동 및 변수로 설정된 사용자 명을 조립하 는 로직을 정보 획득 로직으로 정의(설정)하여 각 정보별로 정보 획득 로직을 해당 Class의 속성으로 정의(설정)할 수 있다. 이때, 정보별 획득 방식은, Play의 기능을 동작시키기 위해 표현하는 사용자 의도를 의미하는 인텐트(Intent), 사용자의 요청을 정확히 처리하기 위해 Intent 외에 추가로 알아야 하는 개체를 의미하는 엔티티(Entity) 또는 기타 다른 대화를 통한 정보 획득 등이 포함될 수 있다. 또한, 프로세서는 사용자가 '네 맞아요'라고 답변한 경우 해당 답변이 원하는 답변인지 판단하는 과정이 필요하기 때문에, 정보 검증 로직은, 정보 획득을 위한 질문에 대한 사용자의 답변이 원하는 유형의 답변인지 여부를 검증하는 로직으로 구성될 수 있다. 즉, 프로세서는 '네/아니오' 답변을 기대하고 질문한 상황에서 '뭐라구요?'라는 답변이 들어온 경우, 재질 문하는 과정이 필요하며, 이를 위해, 사용자 답변이 '네/아니오'인지 판단하는 로직을 정보 검증 로직으로 정의 (설정)하여 각 정보별로 검증로직을 해당 Class의 속성으로 정의(설정)할 수 있다. 또한, 프로세서는, 사용자와 대화 중 사용자로부터 획득되는 정보에 따라 별도로 마련되는 외부 대화형 인 공지능 챗봇 엔진과 연동되어, 사용자와의 대화(질의, 요청 등)에 대응할 수 있다. 예를 들면, 프로세서는, 정보 획득 과정에서 입력되는 정보의 속성에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과의 연동 여부를 설정하여, 사용자와의 대화에 대응할 수 있다. 도 2는, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 구성 방법의 설명에 제공된 흐름도이다. 본 실시예에 따른 객체지향적 대화 흐름 구성 방법은, 도 1을 참조하여 전술한 챗봇 시스템에 의해 실행될 수 있다. 도 2을 참조하면, 객체지향적 대화 흐름 구성 방법은, 챗봇 시스템의 화면에 출력되는 UI를 이용하여, 챗봇 기 반의 업무를 하나의 클래스(Class)로 설정하고(S210), 화면에 출력되는 UI를 이용하여, 설정된 클래스를 수행하 기 위해 필요한 정보를 해당 클래스의 속성으로 설정할 수 있다(S220). 여기서, 챗봇 시스템은, 필요한 정보를 해당 클래스의 속성으로 설정하는 경우, 설정된 클래스를 수행하기 위해 필요한 하나 이상의 정보를 설정하고, 설정된 각 정보가 입력될 슬롯(Slot)을 생성할 수 있다. 이후, 객체지향적 대화 흐름 구성 방법은, 챗봇 시스템을 이용하여 정보를 획득하기 위한 정보 획득 로직 및 획 득된 정보를 검증하기 위한 정보 검증 로직을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성할 수 있다(S230). 즉, 관리자는 화면에 출력되는 UI를 이용하여, 해당 클래스의 속성으로 설정된 정보를 획득하기 위한 정보 획득 로직이 포함되는 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성할 수 있다. 한편, 객체지향적 대화 흐름 구성 방법은, 챗봇 시스템을 이용하여 S230 단계가 완료된 이후, 정보 획득 과정에 서 입력되는 정보의 속성에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과의 연동 여부를 설정할 수 있다. 도 3은, 본 발명의 일 실시예에 따른 코드 블록을 정의하기 위해 작성된 코드가 예시된 도면이고, 도 4는, 본 발명의 일 실시예에 따른 코드 블록을 yml로 표현한 코드가 예시된 도면이다. 코드 블록은, constant(상수)로 정의되고, constant로 정의된 코드블록을 활용하기 위해서는, 코드 블록에 constant의 명칭에 해당하는 block 명, 들여쓰기(indentation)에 필요한 정보인 level 및 코드블록 내의 변수 (key)를 어떤 값(value)으로 채울지 정의하는 info에 대한 정보가 포함될 수 있다. 즉, 코드 블록은 도 3에 예시된 바와 같이 constant(상수)로 정의되고, 해당 텍스트에 변수를 채울 수 있도록 구성될 수 있다. 그리고 if 문 다음에 오는 코드 블록은 이전 블록인 if문 보다 indentation이 추가로 필요하므로 level 정보가 반드시 필요하기 때문에, info는 key, value 값으로 코드블록 내의 변수（key）를 어떤 값（value）로 채울지 정의할 수 있으며, 이러한 규칙을 지켜서 custom block을 구성할 수 있다. 또한, if문과 조건식 등은 미리 정의하기가 어렵고 사용자 정보를 받아 조립을 해야 하기 때문에, 조건식이 하 나만 있다고 볼 수 없고 여러 개가 존재할 수 있으며 if문 안에 if문이 들어가는 등 다양한 variation이 가능하 다. 이를 위해 block type \"COMPOSE\"가 존재하며, 이 경우 code snipet을 조립하여 하나의 라인을 구성할 수 있다. 또한, 코드 블록은 yml 또는 json 구조를 parsing 하여 python script를 생성하고, 이것을 바로 대화 엔진과 연 동하여 대화가 가능한 형태로 구현할 수 있다. 한편, 챗봇 시스템은, 정보 획득 로직 및 정보 검증 로직을 조합하여 대화 흐름을 구성하는 경우, 해당 클래스 의 속성으로 설정된 각각의 정보들이 입력될 슬롯별로 적어도 하나의 정보 획득 로직과 해당 정보 획득 로직을 통해 획득된 정보를 검증하기 위한 정보 검증 로직이 일대일 매칭으로 연결되도록 할 수 있다. 따라서, 코드 블록은, 획득되는 정보가 입력될 슬롯(Slot)이 생성된 이후, 정보가 입력되면, 해당 정보 획득 로 직에 대응되는 정보 검증 로직을 통해 입력된 정보를 검증하여, 검증된 정보가 슬롯에 입력될 수 있다. 도 5는, 본 발명의 일 실시예에 따른 UI를 이용하여, 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 모습이 예시된 도면이다. 도 5를 참조하면, 코드 블록을 조합하여 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 경우, 화면에 출력되는 UI를 통해 기작성된 코드 블록을 호출하고, 정보가 입력될 슬롯에 호출된 코드 블록 중 특정 코드 블 록을 드래그 앤 드롭 방식으로 조합하여 대화 흐름을 구성할 수 있다. 구체적으로, 관리자는, 화면에 출력되는 UI를 통해 '보험료 납입'이란 업무를 하나의 클래스로 설정(Action 정 보 생성)하고, 해당 클래스를 수행하기 위해 필요한 정보인 고객 정보, 납입하고자 하는 보험의 상품 정보, 결 제 정보 등을 클래스의 속성으로 설정할 수 있다. 도 6는, 본 발명의 일 실시예에 따른 UI를 이용하여, 코드 블록을 조합하는 모습이 예시된 도면이다. 관리자는, 도 5의 계약 선택(보험료 납입이란 클래스의 속성 설정 단계 중 하나) 단계에서 도 6에 예시된 바와 같이 화면에 출력되는 UI를 이용하여, 복수의 코드 블록을 조합하여 대화 흐름을 구성할 수 있다. 이 경우, 각 코드 블록을 사전에 작성된 코드 블록이며, 화면에 출력되는 UI를 통해 사전에 작성된 코드 블록을 호출하고, 드래그 앤 드롭 방식으로 조합하여 대화 흐름을 구성할 수 있다. 도 7은, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 구성 방법 중 외부 대화형 인공지능 챗봇 엔진과 연 동하는 과정의 설명에 제공된 흐름도이고, 도 8은, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 제어 방 법에 따라 외부 대화형 인공지능 챗봇 엔진과 연동되거나 또는 특정 클래스의 대화 흐름에 진입되는 모습이 예 시된 도면이며, 도 9는, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 제어 방법에 따라 외부 대화형 인공 지능 챗봇 엔진과 연동되도록 작성된 코드가 예시된 도면이다. 전술한 바와 같이 객체지향적 대화 흐름 제어 방법은, 사용자(단말을 통한)와의 대화(정보 획득 과정) 중 사용 자로부터 획득되는 정보에 따라 별도로 마련되는 외부 대화형 인공지능 챗봇 엔진과 연동되어, 사용자와의 대화 에 대응할 수 있다. 구체적으로, 객체지향적 대화 흐름 제어 방법은, 챗봇 시스템을 이용하여, 사용자로부터 획득되는 정보(입력 정 보)의 속성 값이 False인 경우(S710-Yes), 해당 클래스의 대화 흐름에서 벗어난 것으로 판단하여(S720), 외부 대화형 인공지능 챗봇 엔진과 연동되도록 설정할 수 있다(S730). 즉, 도 8a에 예시된 바와 같이 챗봇 시스템은, '통신료 납입'이라는 업무를 해당 클래스로 설정하여 대화(흐 름)를 진행 중인 상태에서, 사용자로부터 'S텔레콤은 뭐하는 회사야' 라는 질문(정보)이 입력되면, 필요한 정보 (ex. 고객 정보, 결제 정보 등)가 아니기 때문에, 정보의 속성 값이 False로 나타나고, 이에, chatGPT와 같은 외부 대화형 인공지능 챗봇 엔진과 연동되어, 사용자와의 대화(질의, 요청 등)에 대응할 수 있다. 이를 위해, 챗봇 시스템은, 도 9에 예시된 바와 같이 별도로 마련되는 FAQ 시스템 또는 외부 대화형 인공지능 챗봇 엔진(ex. chatGPT 등)과 연동은 allowFAQ와 같은 속성값을 기본 객체가 가지고 있고, 이 속성값을 변경하 면 respond_faq함수를 통해 응답 여부를 판단하도록 설정될 수 있다. 이때, 해당 함수는 대화 처리 로직에 따라 자동으로 실행될 수 있다. 그리고 챗봇 시스템은 사용자로부터 획득되는 정보(입력 정보)의 속성 값이 True인 경우(S740-Yes), 해당 클래 스의 대화 흐름에 진입한 것으로 판단하여(S750), 해당 클래스의 정보 획득 로직을 통해 정보 획득 과정이 진행 되도록 설정할 수 있다(S760). 도 8b을 참조하면, 챗봇 시스템은, 사용자와 대화 중인 상태에서, '통신 요금 납부할게요'라는 정보가 입력되면, 정보의 속성 값이 True로 나타나, '통신료 납입' 업무을 클래스로 설정된 대화 흐름이 진행되어, 해 당 클래스의 속성으로 설정된 정보 획득 로직을 통해 정보 획득 과정이 진행될 수 있다. 다른 예를 들면, 챗봇 시스템은, FAQ(Frequently asked questions)를 챗봇 기반의 업무별로 구성하여, 사용자와 대화 중인 상태에서, 사용자가 FAQ에 연관된 질문을 하는 경우, 대응할 수 있다. 이를 위해, 챗봇 시스템은, 특정 클래스의 대화 흐름에 진입하여 사용자와 대화 중인 상태에서도, 해당 클래스 의 속성으로 설정된 정보의 획득 과정에서 입력되는 정보의 속성값이 False인 경우, 해당 클래스에서 벗어난 것으로 판단되면, 다른 클래스에 진입한 것인지 여부를 판단하고, 설정된 모든 클래스에서 벗어난 것으로 판단되면, 외부 대화형 인공지능 챗봇 엔진과 연동되도록 설정할 수 있다. 즉, 챗봇 시스템은, 각종 업무(ex. FAQ 등)들을 개별적으로 클래스로 설정하고, 특정 클래스의 대화 흐름에 따 라 사용자와 대화하는 도중, 사용자가 대화 흐름에서 벗어나는 다른 질문 또는 다른 이야기를 하게되면, 해당 클래스에서 벗어난 것으로 판단하여, 다른 클래스에 진입한 것인지 여부를 판단하고, 설정된 모든 클래스에서 벗어난 것으로 판단되면, 외부 대화형 인공지능 챗봇 엔진과 연동되도록 설정하여, 보다 유연하게 대응할 수 있 다. 한편, 본 실시예에 따른 장치와 방법의 기능을 수행하게 하는 컴퓨터 프로그램을 수록한 컴퓨터로 읽을 수 있는 기록매체에도 본 발명의 기술적 사상이 적용될 수 있음은 물론이다. 또한, 본 발명의 다양한 실시예에 따른 기 술적 사상은 컴퓨터로 읽을 수 있는 기록매체에 기록된 컴퓨터로 읽을 수 있는 코드 형태로 구현될 수도 있다. 컴퓨터로 읽을 수 있는 기록매체는 컴퓨터에 의해 읽을 수 있고 데이터를 저장할 수 있는 어떤 데이터 저장 장 치이더라도 가능하다. 예를 들어, 컴퓨터로 읽을 수 있는 기록매체는 ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광디스크, 하드 디스크 드라이브, 등이 될 수 있음은 물론이다. 또한, 컴퓨터로 읽을 수 있는 기록매체 에 저장된 컴퓨터로 읽을 수 있는 코드 또는 프로그램은 컴퓨터간에 연결된 네트워크를 통해 전송될 수도 있다. 또한, 이상에서는 본 발명의 바람직한 실시예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시"}
{"patent_id": "10-2023-0082840", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "예에 한정되지 아니하며, 청구범위에서 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야 에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2023-0082840", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 챗봇 시스템의 구성 설명에 제공된 도면, 도 2는, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 구성 방법의 설명에 제공된 흐름도, 도 3은, 본 발명의 일 실시예에 따른 코드 블록을 정의하기 위해 작성된 코드가 예시된 도면, 도 4는, 본 발명의 일 실시예에 따른 코드 블록을 yml로 표현한 코드가 예시된 도면, 도 5는, 본 발명의 일 실시예에 따른 UI를 이용하여, 챗봇 기반의 업무를 처리하기 위한 대화 흐름을 구성하는 모습이 예시된 도면, 도 6은, 본 발명의 일 실시예에 따른 UI를 이용하여, 코드 블록을 조합하는 모습이 예시된 도면, 도 7은, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 구성 방법 중 외부 대화형 인공지능 챗봇 엔진과 연 동하는 과정의 설명에 제공된 흐름도, 도 8은, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 제어 방법에 따라 외부 대화형 인공지능 챗봇 엔진 과 연동되거나 또는 특정 클래스의 대화 흐름에 진입되는 모습이 예시된 도면이고, 그리고 도 9는, 본 발명의 일 실시예에 따른 객체지향적 대화 흐름 제어 방법에 따라 외부 대화형 인공지능 챗봇 엔진 과 연동되도록 작성된 코드가 예시된 도면이다."}
