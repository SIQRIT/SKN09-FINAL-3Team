{"patent_id": "10-2022-0016211", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0119894", "출원번호": "10-2022-0016211", "발명의 명칭": "인공지능 기반 캐시 메모리 구조 자동 설계 방법 및 인공지능 기반 캐시 메모리 구조 자동 설", "출원인": "연세대학교 산학협력단", "발명자": "정의영"}}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "접근 주소 추출부에 의해, 입력된 어플리케이션에 대해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의메모리 주소를 추출하는 단계;메모리 접근 패턴 결정부에 의해, 상기 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 상기어플리케이션에 대한 메모리 액세스 패턴을 결정하는 단계;캐시 구조 설계부에 의해, 상기 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 상기 어플리케이션에대한 캐시 구조를 설계하는 단계를 포함하는 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,특징 매트릭스 추출부에 의해, 상기 메모리 액세스 패턴으로부터 상기 메모리 주소의 지역성을 기반으로 하는특징 매트릭스를 추출하는 단계를 더 포함하고,상기 어플리케이션에 대한 캐시 구조를 설계하는 단계는,상기 캐시 구조 설계부에 의해, 상기 어플리케이션에 대한 특징 매트릭스를 상기 인공지능 모델에 입력하여 캐시 구조를 설계하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 특징 매트릭스를 추출하는 단계는:특징 정보 추출부에 의해, 상기 어플리케이션에 대해서 상기 가속기가 상기 메모리에 접근한 시점을 나타내는복수의 기준 타임스탬프에 대한 특징 정보를 추출하는 단계; 및특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한특징 매트릭스를 생성하는 단계를 더 포함하는, 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,어느 한 기준 타임스탬프에 대한 특징 정보를 추출하는 단계는:상기 특징 정보 추출부에 의해, 상기 기준 타임스탬프보다 시간적으로 앞서는 연속적인 복수의 타임스탬프를 결정하는 단계; 및상기 특징 정보 추출부에 의해, 각각의 상기 연속적인 복수의 타임스탬프 마다 상기 가속기가 접근한 복수의 메모리 주소 및 상기 기준 타임스탬프에서 상기 가속기가 접근한 메모리 주소를 기초로 상기 기준 타임스탬프에대한 특징 정보를 연산하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 기준 타임스탬프에 대한 특징 정보를 연산하는 단계는:상기 특징 정보 추출부에 의해, 상기 연속적인 복수의 타임스탬프에서 접근된 메모리 주소 중에서, 상기 기준타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하는 단계; 및상기 특징 정보 추출부에 의해, 상기 기준 타임스탬프에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의공개특허 10-2023-0119894-3-차이 값을 연산하여 상기 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보를 결정하는 단계를 포함하고,상기 특징 매트릭스를 추출하는 단계는,상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 상기 메모리 주소 최소 차이 정보를 취합하여상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구조 자동설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서,상기 기준 타임스탬프에 대한 특징 정보를 연산하는 단계는:상기 특징 정보 추출부에 의해, 상기 연속적인 복수의 타임스탬프 중에서 상기 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개수에 대한 정보인 제1 개수 정보를 추출하는 단계를포함하고,상기 특징 매트릭스를 추출하는 단계는,상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제3항에 있어서,어느 한 기준 타임스탬프에 대한 특징 정보를 추출하는 단계는:상기 특징 정보 추출부에 의해, 상기 기준 타임스탬프보다 시간적으로 앞서고, 상기 기준 타임스탬프의 메모리주소에 인접한 메모리 주소까지 오름차순 또는 내림차순으로 순차적으로 접근하는 연속적인 복수의 타임스탬프를 결정하는 단계; 및상기 특징 정보 추출부에 의해, 상기 결정된 연속적인 복수의 타임스탬프의 개수에 대한 정보인 제2 개수 정보를 추출하는 단계를 포함하고,상기 특징 매트릭스를 추출하는 단계는,상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 상기 제2 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제3항에 있어서,상기 메모리 접근 패턴 결정부에 의해, 학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근하는메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정하는 단계;상기 특징 매트릭스 추출부에 의해, 상기 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 상기 학습용 어플리케이션의 특징 매트릭스를 추출하는 단계; 및기계학습부에 의해, 상기 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출력변수로 설정하여 상기 인공지능 모델을 학습하는 단계를 더 포함하는 인공지능 기반 캐시 메모리 구조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 캐시 구조를 설계하는 단계는,상기 캐시 구조 설계부에 의해, 상기 메모리 액세스 패턴을 기초로 상기 인공지능 모델을 이용하여 상기 캐시메모리의 메모리 계층 구조, 상기 캐시 메모리의 각 레벨 저장 공간의 용량, 상기 캐시 메모리의 연상 기억 장치의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계하는 단계를 포함하는, 인공지능 기반 캐시 메모리 구공개특허 10-2023-0119894-4-조 자동 설계 방법."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제9항 중 어느 한 항의 인공지능 기반 캐시 메모리 구조 자동 설계 방법을 실행시키도록 컴퓨터로판독 가능한 기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "입력된 어플리케이션에 대해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하도록구성되는 접근 주소 추출부;상기 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 상기 어플리케이션에 대한 메모리 액세스패턴을 결정하도록 구성되는 메모리 접근 패턴 결정부;상기 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 상기 어플리케이션에 대한 캐시 구조를 설계하도록 구성되는 캐시 구조 설계부를 포함하는 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 메모리 액세스 패턴으로부터 상기 메모리 주소의 지역성을 기반으로 하는 특징 매트릭스를 추출하도록 구성되는 특징 매트릭스 추출부를 더 포함하고,상기 캐시 구조 설계부는,상기 어플리케이션에 대한 특징 매트릭스를 상기 인공지능 모델에 입력하여 캐시 구조를 설계하도록 구성되는,인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 어플리케이션에 대해서 상기 가속기가 상기 메모리에 접근한 시점을 나타내는 복수의 기준 타임스탬프에대한 특징 정보를 추출하도록 구성되는 특징 정보 추출부; 및모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성되는 특징 매트릭스 생성부를 더 포함하는 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 특징 정보 추출부는:상기 기준 타임스탬프보다 시간적으로 앞서는 연속적인 복수의 타임스탬프를 결정하고; 그리고각각의 상기 연속적인 복수의 타임스탬프 마다 상기 가속기가 접근한 복수의 메모리 주소 및 상기 기준 타임스탬프에서 상기 가속기가 접근한 메모리 주소를 기초로 상기 기준 타임스탬프에 대한 특징 정보를 연산하도록 구성되는, 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 특징 정보 추출부는:상기 연속적인 복수의 타임스탬프에서 접근된 메모리 주소 중에서, 상기 기준 타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하고; 그리고상기 기준 타임스탬프에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의 차이 값을 연산하여 상기 기준타임스탬프에 대한 메모리 주소 최소 차이 정보를 결정하도록 구성되고,공개특허 10-2023-0119894-5-상기 특징 매트릭스 생성부는,모든 기준 타임스탬프에 대한 상기 메모리 주소 최소 차이 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성되는, 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 특징 정보 추출부는,상기 연속적인 복수의 타임스탬프 중에서 상기 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개수에 대한 정보인 제1 개수 정보를 추출하도록 구성되고,상기 특징 매트릭스 생성부는,모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성되는, 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서,상기 특징 정보 추출부는:상기 기준 타임스탬프보다 시간적으로 앞서고, 상기 기준 타임스탬프의 메모리 주소에 인접한 메모리 주소까지오름차순 또는 내림차순으로 순차적으로 접근하는 연속적인 복수의 타임스탬프를 결정하고; 그리고상기 결정된 연속적인 복수의 타임스탬프의 개수에 대한 정보인 제2 개수 정보를 추출하도록 구성되고,상기 특징 매트릭스 생성부는,모든 기준 타임스탬프에 대한 상기 제2 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성되는, 인공지능 기반 캐시 메모리 구조 자동 설계 시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서,상기 메모리 접근 패턴 결정부는,학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근하는 메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정하도록 구성되고,상기 특징 매트릭스 추출부는,상기 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 상기 학습용 어플리케이션의 특징 매트릭스를추출하도록 구성되고,상기 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출력 변수로 설정하여 상기 인공지능 모델을 학습하도록 구성되는 기계학습부를 더 포함하는 인공지능 기반 캐시 메모리 구조 자동 설계시스템."}
{"patent_id": "10-2022-0016211", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제18항에 있어서,상기 캐시 구조 설계부는,상기 메모리 액세스 패턴을 기초로 상기 인공지능 모델을 이용하여 상기 캐시 메모리의 메모리 계층 구조, 상기캐시 메모리의 각 레벨 저장 공간의 용량, 상기 캐시 메모리의 연상 기억 장치의 구성 및 캐시 메모리의 정책중 적어도 하나를 설계하도록 구성되는, 인공지능 기반 캐시 메모리 구조 자동 설계 시스템.공개특허 10-2023-0119894-6-"}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "개시된 발명의 일 실시예에 따른 인공지능 기반 캐시 메모리 구조 자동 설계 방법은, 접근 주소 추출부에 의해, 입력된 어플리케이션에 대해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 단 계; 메모리 접근 패턴 결정부에 의해, 상기 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 상 기 어플리케이션에 대한 메모리 액세스 패턴을 결정하는 단계; 캐시 구조 설계부에 의해, 상기 메모리 액세스 패 턴을 기초로 인공지능 모델을 이용하여 상기 어플리케이션에 대한 캐시 구조를 설계하는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 모델을 이용하여 캐시 메모리의 구조를 자동으로 설계할 수 있는 캐시 메모리 구조 자동 설 계 방법 및 캐시 메모리 구조 자동 설계 시스템에 관한 것이다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근에 각종 연산을 신속하게 처리하기 위한 가속기와 캐시 메모리가 장착된 하드웨어가 다수 개발되고 있다. 가속기는 연산에 필요한 데이터를 캐시 메모리의 특정 저장 공간에 접근하는 방식으로 획득할 수 있다. 따라서, 미리 적절하게 캐시 메모리의 구조를 설계한다면 특정 가속기에 맞는 최적화된 저전력의 고성능 캐시 구조를 도출할 수 있다. 하지만 캐시 메모리를 설계하는 방법은 경험을 토대로 가속기에 맞는 캐시를 설계하기 때문에 시간과 비용이 많이 소요된다는 문제가 있다. 특히 AI 가속기와 같이 복잡도가 높은 가속기에 대한 캐시 메모리 설계의 경우, 인간이 직접 실험이나 경험을 기초로 설계하려 할 경우 더욱 시간이 많이 소요되고, 최적의 캐시 메모리 구조를 설계하기 어렵다는 문제가 있 다. 따라서, 인공지능을 이용하여 자동으로 캐시 메모리의 구조를 설계하는 방법이 필요하다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 인공지능 기반의 설계 방법을 이용하여 특정 가속기에 최적화된 저전력 고성능 캐시 구조를 도출할 수 있는 인공지능 기반 캐시 메모리 구조 자동 설계 방법 및 인공지능 기반 캐시 메모리 구조 자동 설계 시스템 을 제공하기 위한 것이다. 또한, 본 발명은 일반적인 캐시 메모리 설계 방법과 달리 자동화 설계 방법을 이용하여 캐시 메모리 설계에 소 요되는 시간 및 인적 자원을 감소시킬 수 있는 인공지능 기반 캐시 메모리 구조 자동 설계 방법 및 인공지능 기 반 캐시 메모리 구조 자동 설계 시스템을 제공하기 위한 것이다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "개시된 발명의 일 측면에 따른 인공지능 기반 캐시 메모리 구조 자동 설계 방법은, 접근 주소 추출부에 의해, 입력된 어플리케이션에 대해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하는 단 계; 메모리 접근 패턴 결정부에 의해, 상기 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 상 기 어플리케이션에 대한 메모리 액세스 패턴을 결정하는 단계; 캐시 구조 설계부에 의해, 상기 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 상기 어플리케이션에 대한 캐시 구조를 설계하는 단계를 포함할 수 있 다. 또한, 특징 매트릭스 추출부에 의해, 상기 메모리 액세스 패턴으로부터 상기 메모리 주소의 지역성을 기반으로 하는 특징 매트릭스를 추출하는 단계를 더 포함하고, 상기 어플리케이션에 대한 캐시 구조를 설계하는 단계는, 상기 캐시 구조 설계부에 의해, 상기 어플리케이션에 대한 특징 매트릭스를 상기 인공지능 모델에 입력하여 캐 시 구조를 설계하는 단계를 포함할 수 있다. 또한, 상기 특징 매트릭스를 추출하는 단계는: 특징 정보 추출부에 의해, 상기 어플리케이션에 대해서 상기 가 속기가 상기 메모리에 접근한 시점을 나타내는 복수의 기준 타임스탬프에 대한 특징 정보를 추출하는 단계; 및 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 더 포함할 수 있다. 또한, 어느 한 기준 타임스탬프에 대한 특징 정보를 추출하는 단계는: 상기 특징 정보 추출부에 의해, 상기 기 준 타임스탬프보다 시간적으로 앞서는 연속적인 복수의 타임스탬프를 결정하는 단계; 및 상기 특징 정보 추출부 에 의해, 각각의 상기 연속적인 복수의 타임스탬프 마다 상기 가속기가 접근한 복수의 메모리 주소 및 상기 기 준 타임스탬프에서 상기 가속기가 접근한 메모리 주소를 기초로 상기 기준 타임스탬프에 대한 특징 정보를 연산하는 단계를 포함할 수 있다. 또한, 상기 기준 타임스탬프에 대한 특징 정보를 연산하는 단계는: 상기 특징 정보 추출부에 의해, 상기 연속적 인 복수의 타임스탬프에서 접근된 메모리 주소 중에서, 상기 기준 타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하는 단계; 및 상기 특징 정보 추출부에 의해, 상기 기준 타임스탬프 에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의 차이 값을 연산하여 상기 기준 타임스탬프에 대한 메 모리 주소 최소 차이 정보를 결정하는 단계를 포함할 수 있다. 또한, 상기 특징 매트릭스를 추출하는 단계는, 상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대 한 상기 메모리 주소 최소 차이 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함할 수 있다. 또한, 상기 기준 타임스탬프에 대한 특징 정보를 연산하는 단계는: 상기 특징 정보 추출부에 의해, 상기 연속적 인 복수의 타임스탬프 중에서 상기 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타 임스탬프의 개수에 대한 정보인 제1 개수 정보를 추출하는 단계를 포함하고, 상기 특징 매트릭스를 추출하는 단 계는, 상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함할 수 있다. 또한, 어느 한 기준 타임스탬프에 대한 특징 정보를 추출하는 단계는: 상기 특징 정보 추출부에 의해, 상기 기 준 타임스탬프보다 시간적으로 앞서고, 상기 기준 타임스탬프의 메모리 주소에 인접한 메모리 주소까지 오름차 순 또는 내림차순으로 순차적으로 접근하는 연속적인 복수의 타임스탬프를 결정하는 단계; 및 상기 특징 정보 추출부에 의해, 상기 결정된 연속적인 복수의 타임스탬프의 개수에 대한 정보인 제2 개수 정보를 추출하는 단계 를 포함하고, 상기 특징 매트릭스를 추출하는 단계는, 상기 특징 매트릭스 생성부에 의해, 모든 기준 타임스탬 프에 대한 상기 제2 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하는 단계를 포함할 수 있다. 또한, 상기 메모리 접근 패턴 결정부에 의해, 학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근 하는 메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정하는 단계; 상기 특징 매트릭스 추출부에 의 해, 상기 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 상기 학습용 어플리케이션의 특징 매트릭 스를 추출하는 단계; 및 기계학습부에 의해, 상기 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하 고 최적 캐시 구조를 출력 변수로 설정하여 상기 인공지능 모델을 학습하는 단계를 더 포함할 수 있다. 또한, 상기 캐시 구조를 설계하는 단계는, 상기 캐시 구조 설계부에 의해, 상기 메모리 액세스 패턴을 기초로 상기 인공지능 모델을 이용하여 상기 캐시 메모리의 메모리 계층 구조, 상기 캐시 메모리의 각 레벨 저장 공간 의 용량, 상기 캐시 메모리의 연상 기억 장치의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계하는 단계를 포함할 수 있다. 개시된 발명의 일 측면에 따른 컴퓨터 프로그램은, 상기 인공지능 기반 캐시 메모리 구조 자동 설계 방법을 실 행시키도록 컴퓨터로 판독 가능한 기록매체에 저장될 수 있다. 개시된 발명의 일 측면에 따른 인공지능 기반 캐시 메모리 구조 자동 설계 시스템은, 입력된 어플리케이션에 대 해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출하도록 구성되는 접근 주소 추출 부; 상기 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 상기 어플리케이션에 대한 메모리 액 세스 패턴을 결정하도록 구성되는 메모리 접근 패턴 결정부; 상기 메모리 액세스 패턴을 기초로 인공지능 모델 을 이용하여 상기 어플리케이션에 대한 캐시 구조를 설계하도록 구성되는 캐시 구조 설계부를 포함할 수 있다. 또한, 상기 메모리 액세스 패턴으로부터 상기 메모리 주소의 지역성을 기반으로 하는 특징 매트릭스를 추출하도 록 구성되는 특징 매트릭스 추출부를 더 포함하고, 상기 캐시 구조 설계부는, 상기 어플리케이션에 대한 특징 매트릭스를 상기 인공지능 모델에 입력하여 캐시 구조를 설계하도록 구성될 수 있다. 또한, 상기 어플리케이션에 대해서 상기 가속기가 상기 메모리에 접근한 시점을 나타내는 복수의 기준 타임스탬 프에 대한 특징 정보를 추출하도록 구성되는 특징 정보 추출부; 및 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성되는 특징 매트릭스 생성부를 더 포함할 수 있다. 또한, 상기 특징 정보 추출부는: 상기 기준 타임스탬프보다 시간적으로 앞서는 연속적인 복수의 타임스탬프를 결정하고; 그리고 각각의 상기 연속적인 복수의 타임스탬프 마다 상기 가속기가 접근한 복수의 메모리 주소 및상기 기준 타임스탬프에서 상기 가속기가 접근한 메모리 주소를 기초로 상기 기준 타임스탬프에 대한 특징 정보 를 연산하도록 구성될 수 있다. 또한, 상기 특징 정보 추출부는: 상기 연속적인 복수의 타임스탬프에서 접근된 메모리 주소 중에서, 상기 기준 타임스탬프에서 접근된 메모리 주소와 가장 차이가 적은 최소 차이 메모리 주소를 추출하고; 그리고 상기 기준 타임스탬프에서 접근된 메모리 주소와 상기 최소 차이 메모리 주소의 차이 값을 연산하여 상기 기준 타임스탬프 에 대한 메모리 주소 최소 차이 정보를 결정하도록 구성되고, 상기 특징 매트릭스 생성부는, 모든 기준 타임스 탬프에 대한 상기 메모리 주소 최소 차이 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도 록 구성될 수 있다. 또한, 상기 특징 정보 추출부는, 상기 연속적인 복수의 타임스탬프 중에서 상기 기준 타임스탬프에서 접근된 메 모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개수에 대한 정보인 제1 개수 정보를 추출하도록 구성 되고, 상기 특징 매트릭스 생성부는, 모든 기준 타임스탬프에 대한 상기 제1 개수 정보를 취합하여 상기 어플리 케이션에 대한 특징 매트릭스를 생성하도록 구성될 수 있다. 또한, 상기 특징 정보 추출부는: 상기 기준 타임스탬프보다 시간적으로 앞서고, 상기 기준 타임스탬프의 메모리 주소에 인접한 메모리 주소까지 오름차순 또는 내림차순으로 순차적으로 접근하는 연속적인 복수의 타임스탬프 를 결정하고; 그리고 상기 결정된 연속적인 복수의 타임스탬프의 개수에 대한 정보인 제2 개수 정보를 추출하도 록 구성되고, 상기 특징 매트릭스 생성부는, 모든 기준 타임스탬프에 대한 상기 제2 개수 정보를 취합하여 상기 어플리케이션에 대한 특징 매트릭스를 생성하도록 구성될 수 있다. 또한, 상기 메모리 접근 패턴 결정부는, 학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근하는 메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정하도록 구성되고, 상기 특징 매트릭스 추출부는, 상기 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 상기 학습용 어플리케이션의 특징 매트릭스를 추출하도록 구성되고, 상기 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출 력 변수로 설정하여 상기 인공지능 모델을 학습하도록 구성되는 기계학습부를 더 포함할 수 있다. 또한, 상기 캐시 구조 설계부는, 상기 메모리 액세스 패턴을 기초로 상기 인공지능 모델을 이용하여 상기 캐시 메모리의 메모리 계층 구조, 상기 캐시 메모리의 각 레벨 저장 공간의 용량, 상기 캐시 메모리의 연상 기억 장 치의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계하도록 구성될 수 있다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "개시된 발명의 일 측면에 따르면, 인공지능 기반의 설계 방법을 이용하여 특정 가속기에 최적화된 저전력 고성 능 캐시 구조를 도출할 수 있다. 또한, 본 발명의 실시예에 의하면, 일반적인 캐시 메모리 설계 방법과 달리 자동화 설계 방법을 이용하여 캐시 메모리 설계에 소요되는 시간 및 인적 자원을 감소시킬 수 있다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "명세서 전체에 걸쳐 동일 참조 부호는 동일 구성요소를 지칭한다. 본 명세서가 실시예들의 모든 요소들을 설명"}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "하는 것은 아니며, 개시된 발명이 속하는 기술분야에서 일반적인 내용 또는 실시예들 간에 중복되는 내용은 생 략한다. 또한 어떤 부분이 어떤 구성요소를 \"포함\"한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것을 의미한다. 제1, 제2 등의 용어는 하나의 구성요소를 다른 구성요소로부터 구별하기 위해 사용되는 것으로, 구성요소가 전 술된 용어들에 의해 제한되는 것은 아니다. 단수의 표현은 문맥상 명백하게 예외가 있지 않는 한, 복수의 표현을 포함한다. 각 단계들에 있어 식별부호는 설명의 편의를 위하여 사용되는 것으로 식별부호는 각 단계들의 순서를 설명하는 것이 아니며, 각 단계들은 문맥상 명백하게 특정 순서를 기재하지 않는 이상 명기된 순서와 다르게 실시될 수 있다. 이하 첨부된 도면들을 참고하여 개시된 발명의 작용 원리 및 실시예들에 대해 설명한다. 도 1은 일 실시예에 따른 캐시 메모리 구조 자동 설계 시스템의 구성도이다. 도 1을 참조하면, 본 발명의 실시예에 따른 캐시 메모리 구조 자동 설계 시스템은, 접근 주소 추출부 , 메모리 접근 패턴 결정부, 특징 매트릭스 추출부, 특징 정보 추출부, 특징 매트릭스 생 성부, 캐시 구조 설계부, 기계학습부 및 인공지능 모델을 포함할 수 있다. 가속기(accelerator)는 어플리케이션을 입력 받으면 해당 어플리케이션의 수행에 필요한 데이터 를 캐시 메모리로부터 획득할 수 있다. 즉, 특정한 어플리케이션의 수행에 필요한 데이터는 캐시 메 모리의 복수의 공간에 저장된 데이터일 수 있다. 가속기는 범용 어플리케이션들을 처리하는 CPU 및 GPU와 달리 DNN(Deep Neural Network)에 특화된 하드웨어일 수 있으나 이에 한정되는 것은 아니다. 가속기는 필요한 데이터가 미리 저장되어 있는 어떤 특정한 메모리 주소의 저장 공간에 접근하여 데 이터를 획득할 수 있다. 어플리케이션을 수행하는데 필요한 데이터들은 캐시 메모리에서 복수의 저장 공간에 각각 저장되어 있을 수 있다. 가속기는 시간의 흐름에 따라 그때 그때 필요한 데이터를 획득하기 위해서 어떤 특정한 메모리 주소의 저장 공간에 접근하여 데이터를 획득한 후, 다른 메모리 주소의 저장 공간에 접근하여 다음으로 필요한 데이터를 획득하는 과정을 반복할 수 있다. 접근 주소 추출부는 입력된 어플리케이션에 대해서 가속기가 각 타임스탬프(timestamp)마 다 접근하는 캐시 메모리의 메모리 주소를 추출할 수 있다. 타임스탬프는 특정한 시각을 나타내거나 기록하는 문자열일 수 있다. 구체적으로, 타임스탬프는 이벤 트, 즉 사건이 컴퓨터에 기록된 시간을 의미할 수 있다. 시간의 흐름에 따라 가속기는 복수의 메모리 주소에 순차적으로 접근하므로, 접근 주소 추출부 는 각 타임스탬프에서 가속기가 접근한 저장 공간의 메모리 주소들의 정보를 획득할 수 있다. 메모리 접근 패턴 결정부는 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 어 플리케이션에 대한 메모리 액세스 패턴(memory access pattern)을 결정할 수 있다. 메모리 액세스 패턴은 특정한 어플리케이션에 대해서 가속기가 접근하는 메모리 주소의 타임스 탬프의 흐름에 따른 경향이나 패턴일 수 있다. 따라서, 동일한 가속기가 동일한 캐시 메모리에 접근하는 경우라 해도 어플리케이션에 따라 메모리 액세스 패턴은 다를 수 있다. 또한, 캐시 메모리의 구조(configuration)를 미리 어떻게 설계했는지에 따라 동일한 가속기가 동일한 어플리케이션에 대해서 동일한 가속기에 접근하더라도 메모리 액세스 패턴은 전혀 다르게 나타날 수 있다. 미리 적절하게 캐시 메모리의 구조를 설계한다면 특정 가속기에 맞는 최적화된 저전력의 고성능 캐시 구조를 도출할 수 있다. 하지만 캐시 메모리를 설계하는 방법은 경험을 토대로 가속기에 맞는 캐시를 설계하기 때문에 시간과 비용이 많이 소요된다는 문제가 있다. 특히 AI 가속기와 같이 복잡도가 높은 가속기에 대한 캐시 메모리의 경우 개발 기간 단축을 위해 각 단계(step)의 런타임을 줄이거나 전체 플로우 (flow)의 반복 횟수를 줄이는 것이 중요하다. 일 실시예에 따른 메모리 구조 자동 설계 방법은 시간을 많이 감소시킬 수 있는 인공지능 기반의 캐시 메모리 설계 방법을 제공할 수 있다. 캐시 구조 설계부는 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 어플리케이션에 대 한 캐시 구조(cache configuration)를 설계할 수 있다. 인공지능 모델은 기계학습 방식으로 학습된 딥러닝 (deep learning) 모델일 수 있다. 결과적으로, 일 실시예에 따른 메모리 구조 자동 설계 방법은 설계자의 경험 또는 직관에 의존한 기존의 방법과 달리, 인공지능 기반의 설계 방법으로 최적 또는 고성능의 캐시 메모리 구조를 자동으로 설계할 수 있다. 도 2는 일 실시예에 따른 캐시 구조를 설계하는 단계를 설명하기 위한 도면이고, 도 3은 일 실시예에 따른 캐시 구조를 설계하는 단계를 설명하기 위한 또다른 도면이다. 도 2 및 도 3을 참조하면, 캐시 메모리의 캐시 구조를 설계하는 것은 메모리 계층 구조(Memory hierarchy), 캐시 메모리의 각 레벨 저장 공간의 용량(Cache level capacity), 캐시 메모리의 연상 기억 장치(associative memomry)의 구성 및 캐시 메모리의 정책(policy) 중 적어도 하나를 결정하는 것일 수 있다. 캐시 구조 설계부는 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 캐시 메모리의 메 모리 계층 구조, 캐시 메모리의 각 레벨 저장 공간의 용량, 캐시 메모리의 연상 기억 장치의 구성 및 캐시 메모리의 정책 중 적어도 하나를 설계할 수 있다. 한편, 캐시 구조 설계부가 캐시 메모리 의 캐시 구조를 설계할 때 결정하거나 고려하는 것이 반드시 전술한 메모리 계층 구조, 각 레벨 저장 공간의 용 량, 연상 기억 장치의 구성 및 캐시 메모리의 정책에 한정되는 것은 아니며, 메모리 액세스 패턴을 기초로 인공지능 모델을 이용해서 캐시 메모리의 구조를 설계할 수 있다면 캐시 메모리의 어떠한 요소 라도 일 실시예에 따른 캐시 메모리 설계 과정에서 결정될 수 있다. 도 4는 일 실시예에 따른 메모리 접근 패턴을 도시한 도면이다. 도 4를 참조하면, 시간의 흐름에 따라 가속기가 접근하는 메모리 주소의 경향의 예시를 확인할 수 있 다. 즉, 메모리 액세스 패턴의 예시를 확인할 수 있다. 도시된 2개의 그래프는 각각 서로 다른 어플리케이션에 대해서 가속기가 접근하는 메모리 주소 의 경향을 나타낸 것이다. 구체적으로, 도시된 그래프들의 x축은 타임스탬프를 나타내며, y축은 메모리의 주소를 나타내는 것일 수 있다. 이때, 시간의 흐름에 따라 타임스탬프가 변하면 가속기가 접근하는 저장 공간의 메모리 주소 가 달라질 수 있다. 물론 경우에 따라 타임스탬프가 변하더라도 동일한 메모리 주소의 공간에 가속기가 접근하는 것도 가능하다. 도시된 그래프의 경향, 즉 메모리 액세스 패턴을 참조하면 서로 인접한 타임스탬프일수록 서로 인접한 메 모리 주소의 저장 공간에 가속기가 접근한다는 것을 확인할 수 있다. 예를 들어, 하단의 그래프의 예 시에서는 타임스탬프가 증가하더라도 일정 타임스탬프 범위 내에서는 아주 인접한 메모리 주소의 저 장 공간에 가속기가 접근하다가 특정 타임스탬프가 되면 갑자기 어느 정도 차이가 있는 메모리 주소 로 접근하게 되고, 또 일정 타임스탬프 범위 내에서는 인접한 메모리 주소의 저장 공간에 가속기가 접근하는 것이 반복되는 것을 확인할 수 있다. 이처럼, 가속기가 시간의 흐름에 따라 접근하는 캐시 메모리의 메모리 주소는 어플리케이션 에 따라 일정한 지역성(locality)을 가질 수 있다. 이러한 지역성에 관련된 특징을 기초로 인공지능 모델 이 학습되도록 하여, 추후에 캐시 메모리 구조 자동 설계 시스템이 해당 인공지능 모델을 이용 하여 어플리케이션에 대한 캐시 구조를 설계하도록 할 수 있다. 특징 매트릭스 추출부는 메모리 액세스 패턴으로부터 메모리 주소의 지역성을 기반으로 하는 특징 매 트릭스(feature matrix)를 추출할 수 있다. 특징 매트릭스는 기준이 되는 복수의 타임스탬프 각각에 대해, 일정 타임스탬프 범위 내에서 가속기 가 접근하는 메모리 주소들의 특징들을 기초로 생성되는 특징일 수 있다. 예를 들어, 특징 매트릭스는 가속기가 어느 정도로 서로 인접한 메모리 주소의 저장공간에 많이 또는 빈번하게 접근하는 지에 대한 특징을 나타내는 것일 수 있으나, 이에 한정되는 것은 아니다. 이러한 특징 매트릭스는 결국 각 각의 어플리케이션마다 하나씩 생성될 수 있다. 캐시 구조 설계부는 어플리케이션에 대한 특징 매트릭스를 인공지능 모델에 입력하여 캐시 구조를 설계할 수 있다. 기계학습부는 반복적인 기계 학습(Machine Learning)을 통해 손실 함수가 감소하는 방식 등을 이용하여 인 공지능 모델을 학습할 수 있다. 미리 학습된 인공지능 모델은 메모리에 저장될 수 있다. 기계 학습이란 다수의 파라미터로 구성된 모델을 이용하며, 주어진 데이터로 파라미터를 최적화하는 것을 의미 할 수 있다. 기계 학습은 학습 문제의 형태에 따라 지도 학습(supervised learning), 비지도 학습 (unsupervised learning), 강화 학습(reinforcement learning)을 포함할 수 있다. 지도 학습(supervised learning)은 입력과 출력 사이의 매핑을 학습하는 것이며, 입력과 출력 쌍이 데이터로 주어지는 경우에 적용할 수 있다. 비지도 학습(unsupervised learning)은 입력만 있고 출력은 없는 경우에 적용하며, 입력 사이의 규칙 성 등을 찾아낼 수 있다. 다만, 일 실시예에 따른 기계 학습이 반드시 전술한 학습 방식으로 한정되는 것은 아 니다. 기계학습부는 다양한 방식으로 인공지능 모델을 학습할 수 있다. 예를 들어, 기계학습부는 복수 의 학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근하는 메모리의 주소들로부터 추 출되는 특징(feature)을 딥러닝 기반의 학습방법으로 학습할 수 있다. 이때, 가속기가 시간의 흐름에 따라 접근하는 메모리의 주소로부터 특징, 즉 특징 매트릭스를 추출하 는 방법을 학습하기 위해 여러 단계의 컨볼루션 계층(Convolution layer)을 쌓은 CNN(Convolutional Neural Networks) 구조가 활용될 수 있으나, 기계학습부의 학습방법이 반드시 CNN 구조를 활용하는 방법으로 한정 되는 것은 아니다. 예를 들어, 기계학습부는 컴퓨팅 시스템 컴포넌트(computing system component)간의 최적의 토폴로지 (topology)를 빠르게 예측하는 GNN(Graph Neural Network) 구조를 활용하여 기계학습을 수행할 수도 있으며, 특정 어플리케이션과 시스템을 타겟으로 최적화된 캐시 구조를 설계할 수 있다면 어떠한 ANN(Artificial Neural Network)를 활용하더라도 문제없다. 메모리 접근 패턴 결정부는 학습용 어플리케이션에 대해서 가속기가 시간의 흐름에 따라 접근하 는 메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정할 수 있다. 특징 매트릭스 추출부는 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 학습용 어플리케이션 의 특징 매트릭스를 추출할 수 있다. 한편, 전술한 방식대로 기계학습을 진행하기 위해서는 각각의 학습용 어플리케이션마다 최적의 캐시 구조 가 정답으로서 미리 정해져 있을 필요가 있다. 기계학습부는 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출력 변수로 설정하여 인공지능 모델을 학습할 수 있다. 접근 주소 추출부, 메모리 접근 패턴 결정부, 특징 매트릭스 추출부, 특징 정보 추출부, 특징 매트릭스 생성부, 캐시 구조 설계부 및 기계학습부는 메모리 구조 자동 설계 시스템 에 포함된 복수개의 프로세서 중 어느 하나의 프로세서를 포함할 수 있다. 또한, 지금까지 설명된 본 발명의 실 시예 및 앞으로 설명할 실시예에 따른 인공지능 기반 캐시 메모리 구조 자동 설계 방법은 프로세서에 의해 구동 될 수 있는 프로그램의 형태로 구현될 수 있다. 여기서 프로그램은, 프로그램 명령, 데이터 파일 및 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 프로그램은 기계어 코드나 고급 언어 코드를 이용하여 설계 및 제작된 것일 수 있다. 프로그램은 상술한 부호 수정을 위한 방법을 구현하기 위하여 특별히 설계된 것일 수도 있고, 컴퓨터 소프트웨어 분야에서 통상의 기술 자에게 기 공지되어 사용 가능한 각종 함수나 정의를 이용하여 구현된 것일 수도 있다. 전술한 정보 표시 방법 을 구현하기 위한 프로그램은 가속기 또는 프로세서에 의해 판독 가능한 기록매체에 기록될 수 있다. 이때, 기록매체는 캐시 메모리와는 구별되는 별개의 메모리일 수 있다. 메모리는 전술한 동작 및 후술하는 동작을 수행하는 프로그램을 저장할 수 있으며, 메모리는 저장된 프로그램을 실행시킬 수 있다. 프로세서와 메모리가 복수인 경우에, 이들이 하나의 칩에 집적되는 것도 가능하고, 물리적으 로 분리된 위치에 마련되는 것도 가능하다. 메모리는 데이터를 일시적으로 기억하기 위한 D램(DRAM: Dynamic Random Access Memory) 등의 휘발성 메모리일 수 있으나 이에 한정되는 것은 아니며, 메모리는 제어 프로그램 및 제어 데이터를 장기간 저장하기 위한 롬 (Read Only Memory), 이피롬(Erasable Programmable Read Only Memory: EPROM), 이이피롬(Electrically Erasable Programmable Read Only Memory: EEPROM) 등의 비휘발성 메모리를 포함할 수도 있다. 가속기 및 프로세서는 각종 논리 회로와 연산 회로를 포함할 수 있으며, 메모리로부터 제공된 프로그램에 따라 데이터를 처리하고, 처리 결과에 따라 제어 신호를 생성할 수 있다. 도 5는 일 실시예에 따른 특징 정보를 추출하는 과정을 설명하기 위한 도면이다. 도 5에 도시된 그래프를 참조하면, 시간의 흐름에 따라 타임스탬프가 변하고, 각각의 타임스탬프에서 는 가속기가 어느 하나의 메모리 주소의 저장 공간에 접근할 수 있다. 기준 타임스탬프는 어플리케이션에 대해서 가속기가 메모리에 접근한 시점을 나타내는 타임스탬 프일 수 있다. 도시된 그래프를 참조하면 어느 특정 시점의 타임스탬프가 기준 타임스탬프로 결 정되어 있음을 확인할 수 있으며, 해당 기준 타임스탬프에서 가속기가 접근한 메모리 주소(Current address)가 활용될 수 있음을 확인할 수 있다. 즉, 기준 타임스탬프는 어플리케이션에 대한 특징 정보를 추출할 때 필요한 기준이 되는 타임스탬프 일 수 있다. 한편, 어느 한 어플리케이션에 대해서 특징 매트릭스를 추출하기 위해서는 복수의 타임스탬프가 필요할 수 있다. 구체적으로, 시간의 흐름에 따라 타임스탬프는 계속 변할 수 있는데, 모든 타임스탬프가 순서대로 기 준 타임스탬프가 될 수 있다. 즉, 어느 한 타임스탬프가 기준 타임스탬프로서 해당 타임스탬프 에 대한 특징 정보를 추출하는데 이용되고 난 후, 해당 타임스탬프 바로 뒤의 타임스탬프로 기 준 타임스탬프가 변경되어 변경된 기준 타임스탬프에 대한 특징 정보가 추출되는 방식으로 계속해서 모든 타임스탬프에 대한 특징 정보들을 추출할 수 있다. 한편, 반드시 모든 타임스탬프가 기준 타임스탬프로서 이용되어야 하는 것은 아니고 일정한 규칙을 가지고 몇 개의 타임스탬프만 기준 타임스탬프로서 이용되는 것도 가능하다. 특징 정보는 각각의 타임스탬프에 대해서 가속기의 메모리 접근 패턴에 따라 결정되는 특징에 관련된 정보일 수 있다. 특징 정보는 사용자가 어떤 기준을 가지고 정의하는지에 따라 얼마든지 달라질 수 있으며 다양 한 특징이 특징 정보로 결정될 수 있다. 특징 정보 추출부는 복수의 기준 타임스탬프에 대한 특징 정보를 추출할 수 있다. 특징 매트릭스 생성부는 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 어플리케이션에 대 한 특징 매트릭스를 생성할 수 있다. 한편, 어느 한 기준 타임스탬프보다 시간적으로 앞서는 복수의 타임스탬프에서 접근된 메모리 주소 의 정보를 기초로 해당 타임스탬프에 대한 특징 정보가 연산될 수 있다. 특징 정보 추출부는 기준 타임스탬프보다 시간적으로 앞서는 연속적인 복수의 타임스탬프를 결 정할 수 있다. 도 5에 도시된 그래프를 참조하면, 기준 타임스탬프보다 시간적으로 앞서는 16개의 연속적인 타임스탬프 (Window=16 Address buffer)가 해당 기준 타임스탬프에 대한 특징 정보의 연산에 이용될 수 있음을 확인할 수 있다. 이처럼 연속적인 복수의 타임스탬프는 기준 타임스탬프 바로 직전까지 순차적으로 도래했던 타임스탬 프일 수 있으나 반드시 이에 한정되는 것은 아니다. 특징 정보 추출부는 각각의 연속적인 복수의 타임스탬프 각각에서 가속기가 접근한 복수의 메모 리 주소들과 기준 타임스탬프에서 가속기가 접근한 메모리 주소를 기초로 기준 타임스탬프 에 대한 특징 정보를 연산할 수 있다.도 6은 메모리 주소 최소 차이 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 6을 참조하면, 어느 한 기준 타임스탬프의 특징 정보는 연속적인 복수의 타임스탬프에서 접근된 메모리 주소와 해당 기준 타임스탬프에서 접근된 메모리 주소와의 차이 값을 기초로 결정될 수 있다. 특징 정보 추출부는 최소 차이 메모리 주소를 추출할 수 있다. 최소 차이 메모리 주소는 연속적인 복수의 타임스탬프에서 가속기가 접근한 메모리 주소 중에서, 기준 타임스탬프에서 가속기가 접근한 메모리 주소와 가장 차이가 적은 메모리 주소 일 수 있다. 예를 들어, 기준 타임스탬프에서 가속기가 접근한 메모리 주소가 z일때, 연속적인 복수의 타임 스탬프에서 가속기가 접근한 메모리 주소들(a, b, c 쪋 m, n, o. p) 중에서 z와 가장 차이가 작은 메 모리 주소가 z와 1 차이나는 o이고 나머지는 2이상이면, o가 해당 기준 타임스탬프에 대한 최소 차이 메모리 주소일 수 있다. 특징 정보 추출부는 기준 타임스탬프에서 접근된 메모리 주소와 최소 차이 메모리 주소의 차이 값을 연산하여 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보를 결정할 수 있다. 예를 들어, 기준 타임스탬프에서 가속기가 접근한 메모리 주소가 z이고 z와 1 차이나는 o가 최 소 차이 메모리 주소이면, 특징 정보 추출부는 1을 해당 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보로 결정할 수 있다. 특징 매트릭스 생성부는 모든 기준 타임스탬프에 대한 메모리 주소 최소 차이 정보를 취합하여 어플 리케이션에 대한 특징 매트릭스를 생성할 수 있다. 즉, 각각의 기준 타임스탬프마다 대응되는 메모리 주소 최소 차이 정보가 존재하며, 특징 매트릭스 생성부 는 이를 취합하여 통계적으로 정리하는 방식으로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 예를 들어, 수천 또는 수만개의 기준 타임스탬프 각각에 대한 메모리 주소 최소 차이 정보들을 취합한 결 과, 메모리 주소 최소 차이 정보가 0인 기준 타임스탬프가 5050개, 메모리 주소 최소 차이 정보가 1인 기 준 타임스탬프가 1222개, 메모리 주소 최소 차이 정보가 2인 기준 타임스탬프가 3개 존재할 수 있으 며, 이러한 통계 수치를 기초로 특징 매트릭스가 생성될 수 있다. 도 7은 제1 개수 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 7을 참조하면, 어느 한 기준 타임스탬프의 특징 정보는 연속적인 복수의 타임스탬프 중에서, 해당 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프의 개 수를 기초로 결정될 수 있다. 특징 정보 추출부는 제1 개수 정보를 추출할 수 있다. 제1 개수 정보는 연속적인 복수의 타임스탬프 중에서 기준 타임스탬프에서 접근된 메모리 주소와 동일한 메모리 주소에 접근한 타임스탬프 의 개수에 대한 정보일 수 있다. 예를 들어, 기준 타임스탬프에서 가속기가 접근한 메모리 주소가 z일때, 연속적인 복수의 타임 스탬프에서 가속기가 접근한 메모리 주소들(a, b, z, d 쪋 z, n, o. p) 중에서 기준 타임스탬프 에서 접근된 메모리 주소(z)와 동일한 메모리 주소에 접근한 타임스탬프의 개수는 2이므로, 특 징 정보 추출부는 2를 해당 기준 타임스탬프에 대한 제1 개수 정보로 결정할 수 있다. 특징 매트릭스 생성부는 모든 기준 타임스탬프에 대한 제1 개수 정보를 취합하여 어플리케이션 에 대한 특징 매트릭스를 생성할 수 있다. 즉, 각각의 기준 타임스탬프마다 대응되는 제1 개수 정보가 존재하며, 특징 매트릭스 생성부는 이를 취합하여 통계적으로 정리하는 방식으로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 예를 들어, 수천 또는 수만개의 기준 타임스탬프 각각에 대한 제1 개수 정보들을 취합한 결과, 제1 개수 정보가 1인 기준 타임스탬프가 44개, 제1 개수 정보가 2인 기준 타임스탬프가 3332개, 제1 개수 정보 가 3인 기준 타임스탬프가 123개 존재할 수 있으며, 이러한 통계 수치를 기초로 특징 매트릭스가 생성될 수 있다. 도 8은 제2 개수 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 8을 참조하면, 어느 한 기준 타임스탬프의 특징 정보는 기준 타임스탬프보다 시간적으로 앞서고, 기준 타임스탬프의 메모리 주소에 인접한 메모리 주소까지 오름차순 또는 내림차순으로 순차적 으로 접근하는 연속적인 복수의 타임스탬프의 개수를 기초로 결정될 수 있다. 특징 정보 추출부는 기준 타임스탬프보다 시간적으로 앞서고, 기준 타임스탬프의 메모리 주소 에 인접한 메모리 주소까지 오름차순 또는 내림차순으로 순차적으로 접근하는 연속적인 복수의 타임 스탬프를 결정할 수 있다. 특징 정보 추출부는 제2 개수 정보를 추출할 수 있다. 제2 개수 정보는 결정된 연속적인 복수의 타임스탬 프의 개수에 대한 정보일 수 있다. 예를 들어, 기준 타임스탬프에서 가속기가 접근한 메모리 주소가 z일때, 가속기는 기준 타 임스탬프 직전의 타임스탬프에서 z까지 순차적으로 오름차순인 메모리 주소들(z-3, z-2, z-1)에 순서 대로 접근할 수 있고, 이때 제2 개수 정보는 3일 수 있다. 즉, 특징 정보 추출부는 기준 타임스탬프의 메모리 주소(z)에 인접한 메모리 주소(z-1)까지 오름차순 으로 순차적으로 접근하는 연속적인 복수의 타임스탬프의 개수인 3을 제2 개수 정보로 결정할 수 있다. 특징 매트릭스 생성부는 모든 기준 타임스탬프에 대한 제2 개수 정보를 취합하여 어플리케이션 에 대한 특징 매트릭스를 생성할 수 있다. 즉, 각각의 기준 타임스탬프마다 대응되는 제2 개수 정보가 존재하며, 특징 매트릭스 생성부는 이를 취합하여 통계적으로 정리하는 방식으로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 예를 들어, 수천 또는 수만개의 기준 타임스탬프 각각에 대한 제2 개수 정보들을 취합한 결과, 제2 개수 정보가 2인 기준 타임스탬프가 5353개, 제2 개수 정보가 4인 기준 타임스탬프가 1333개, 제2 개수 정 보가 5인 기준 타임스탬프가 13개 존재할 수 있으며, 이러한 통계 수치를 기초로 특징 매트릭스가 생 성될 수 있다. 도 9는 각 어플리케이션에 대한 복수의 특징 매트릭스들을 도시한 도면이다. 도 9를 참조하면, 각 어플리케이션마다 메모리 주소 최소 차이 정보, 제1 개수 정보 및 제2 개수 정보를 추출할 수 있다는 것을 확인할 수 있다. 특징 매트릭스 생성부는 각 어플리케이션마다 메모리 주소 최소 차이 정보를 기초로 생성되는 특징 매트릭스(spatial top 10), 제1 개수 정보를 기초로 생성되는 특징 매트릭스(temporal top 10) 및 제2 개수 정 보를 기초로 생성되는 특징 매트릭스(contagious top 10)을 생성할 수 있다. 정리하면, 각 어플리케이션마다 대응되는 3개의 특징 매트릭스가 생성될 수 있다. 캐시 메모리 구조 자동 설계 시스템이 인공지능 모델을 학습하는 학습 단계 또는 미리 학습된 인공지 능 모델을 이용하여 캐시 메모리의 구조를 설계하는 설계 단계에서 특징 매트릭스가 인공지능 모델에 입력될 수 있다. 이때, 인공지능 모델에 입력되는 특징 매트릭스는 메모리 주소 최소 차이 정보를 기초로 생성되는 특 징 매트릭스, 제1 개수 정보를 기초로 생성되는 특징 매트릭스, 제2 개수 정보를 기초로 생성되는 특징 매트릭 스 중 적어도 하나일 수 있다. 즉, 인공지능 모델에 전술한 3개의 특징 매트릭스 중 하나만 입력되어 기계학습 또는 캐시 메모리 설 계가 진행될 수도 있으나, 3개의 특징 매트릭스 중 2개 또는 3개의 특징 매트릭스 전부가 인공지능 모델에 입력되어 기계학습 또는 캐시 메모리 설계가 진행될 수도 있다. 한편 전술한 3가지 방식으로 생성 가능한 특징 매트릭스는 하나의 예시일 뿐이고, 전혀 다른 메모리 주소 의 지역성을 기초로 생성된 특징 매트릭스를 이용하여 인공지능 모델을 학습 또는 이용할 수 있 다면 어떠한 방식으로 생성된 특징 매트릭스를 이용하더라도 문제없다. 이상에서 설명된 구성요소들의 성능에 대응하여 적어도 하나의 구성요소가 추가되거나 삭제될 수 있다. 또한, 구성요소들의 상호 위치는 시스템의 성능 또는 구조에 대응하여 변경될 수 있다는 것은 당해 기술 분야에서 통 상의 지식을 가진 자에게 용이하게 이해될 것이다. 도 10은 일 실시예에 따른 캐시 메모리 구조 자동 설계 방법의 순서도이다. 이는 본 발명의 목적을 달성하기 위 한 바람직한 실시예일 뿐이며, 필요에 따라 일부 구성이 추가되거나 삭제될 수 있음은 물론이다. 도 10을 참조하면, 학습단계에서 메모리 접근 패턴 결정부는 학습용 어플리케이션에 대해서 가속기 가 시간의 흐름에 따라 접근하는 메모리의 주소들을 기초로, 학습용 메모리 액세스 패턴을 결정할 수 있다 . 이때, 특징 매트릭스 추출부는 학습용 메모리 액세스 패턴으로부터 지역성을 기반으로 하는 학습 용 어플리케이션의 특징 매트릭스를 추출할 수 있다. 기계학습부는 학습용 어플리케이션의 특징 매트릭스를 입력 변수로 설정하고 최적 캐시 구조를 출력 변수로 설정하여 인공지능 모델을 학습할 수 있다. 이후, 캐시 메모리 설계 단계에서 접근 주소 추출부는 입력된 어플리케이션에 대해서 가속기가 각 타임스탬프마다 접근하는 캐시 메모리의 메모리 주소를 추출할 수 있다. 메모리 접근 패턴 결정부는 가속기가 시간의 흐름에 따라 접근하는 메모리 주소들을 기초로, 어 플리케이션에 대한 메모리 액세스 패턴을 결정할 수 있다. 특징 정보 추출부는 어플리케이션에 대해서 가속기가 메모리에 접근한 시점을 나타내는 복수의 기준 타임스탬프에 대한 특징 정보를 추출할 수 있다. 이때, 특징 정보 추출부는 각각의 연속 적인 복수의 타임스탬프 마다 가속기가 접근한 복수의 메모리 주소 및 기준 타임스탬프에 서 가속기가 접근한 메모리 주소를 기초로 기준 타임스탬프에 대한 특징 정보를 연산할 수 있다. 특징 매트릭스 생성부는 모든 기준 타임스탬프에 대한 특징 정보를 취합하여 어플리케이션에 대 한 특징 매트릭스를 생성할 수 있다. 이때, 특징 매트릭스 생성부는 메모리 주소 최소 차이 정 보, 제1 개수 정보 밑 제2 개수 정보 중 적어도 하나를 기초로 어플리케이션에 대한 특징 매트릭스를 생성할 수 있다. 캐시 구조 설계부는 메모리 액세스 패턴을 기초로 인공지능 모델을 이용하여 어플리케이션에 대 한 캐시 구조를 설계할 수 있다. 이때, 캐시 구조 설계부는 어플리케이션에 대한 특징 매트릭 스를 인공지능 모델에 입력하여 캐시 구조를 설계할 수 있다."}
{"patent_id": "10-2022-0016211", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상에서와 같이 첨부된 도면을 참조하여 개시된 실시예들을 설명하였다. 본 발명이 속하는 기술분야에서 통상 의 지식을 가진 자는 본 발명의 기술적 사상이나 필수적인 특징을 변경하지 않고도, 개시된 실시예들과 다른 형 태로 본 발명이 실시될 수 있음을 이해할 것이다. 개시된 실시예들은 예시적인 것이며, 한정적으로 해석되어서 는 안 된다."}
{"patent_id": "10-2022-0016211", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 캐시 메모리 구조 자동 설계 시스템의 구성도이다. 도 2는 일 실시예에 따른 캐시 구조를 설계하는 단계를 설명하기 위한 도면이다. 도 3은 일 실시예에 따른 캐시 구조를 설계하는 단계를 설명하기 위한 또다른 도면이다. 도 4는 일 실시예에 따른 메모리 접근 패턴을 도시한 도면이다. 도 5는 일 실시예에 따른 특징 정보를 추출하는 과정을 설명하기 위한 도면이다. 도 6은 메모리 주소 최소 차이 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 7은 제1 개수 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 8은 제2 개수 정보를 기초로 특징 매트릭스를 생성하는 것을 도시한 도면이다. 도 9는 각 어플리케이션에 대한 복수의 특징 매트릭스들을 도시한 도면이다. 도 10은 일 실시예에 따른 캐시 메모리 구조 자동 설계 방법의 순서도이다."}
