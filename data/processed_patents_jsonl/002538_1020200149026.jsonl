{"patent_id": "10-2020-0149026", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0063335", "출원번호": "10-2020-0149026", "발명의 명칭": "메모리 시스템 및 메모리 시스템의 동작 방법", "출원인": "에스케이하이닉스 주식회사", "발명자": "윤상돈"}}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리 장치; 및상기 메모리 장치와 통신하고, 상기 메모리 장치를 제어하는 메모리 컨트롤러를 포함하고,상기 메모리 컨트롤러는,특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 타깃 장치의 입출력 성능 패턴을 입력받고, 입력받은입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 상기 타깃 장치에 대한 데이터 입출력 시의 레이턴시를 감소시킬 수 있는 어드레스 매핑 정보를 출력하는 인공 지능 엔진을 포함하고,상기 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서, 상기 타깃 장치에 대한입출력 성능 패턴인 제1 입출력 성능 패턴을 모니터링하고,상기 제1 입출력 성능 패턴에 대한 정보를 상기 인공 지능 엔진에 입력하고,상기 인공 지능 엔진이 상기 제1 입출력 성능 패턴에 대한 정보를 입력받은 후 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 상기 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 타깃 장치는,상기 메모리 컨트롤러에 포함된 워킹 메모리 또는 상기 메모리 장치인 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 타깃 장치가 상기 워킹 메모리일 때,상기 어드레스 매핑 정보는,칩 셀렉트(chip select) 매핑 정보, 행(row) 매핑 정보, 열(column) 매핑 정보, 뱅크(bank) 매핑 정보 및 뱅크그룹(bank group) 매핑 정보를 포함하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 타깃 장치가 상기 메모리 장치일 때,상기 어드레스 매핑 정보는,칩 인에이블(chip enable) 매핑 정보를 포함하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,공개특허 10-2022-0063335-3-상기 인공 지능 엔진은,상기 제1 입출력 성능 패턴에 포함된 정보를 유저 데이터 군집, 가비지 컬렉션 데이터 군집, 펌웨어 코드 군집및 맵 데이터 군집 중 적어도 하나 이상의 군집으로 군집화하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 인공 지능 엔진은,K-평균 클러스터링(K-means clustering) 알고리즘을 이용하여, 상기 제1 입출력 성능 패턴에 포함된 정보를 군집화하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 인공 지능 엔진은,DNN(Deep Neural Network) 을 기초로 상기 하나 이상의 군집을 분석하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 메모리 컨트롤러는,상기 메모리 시스템이 부팅되는 시점 또는 유휴(idle) 상태에서 깨어나는 시점에서, 상기 어드레스 매핑 정보를상기 제2 어드레스 매핑 정보로 리매핑하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 메모리 컨트롤러는,상기 타깃 장치에 대응하는 어드레스 매핑 정보가 상기 제2 어드레스 매핑 정보로 리매핑된 후에, 상기 타깃 장치에 대한 입출력 성능 패턴인 제2 입출력 성능 패턴을 모니터링하고,상기 제2 입출력 성능 패턴을 상기 제1 입출력 성능 패턴과 비교하여, 상기 인공 지능 엔진이 상기 타깃 장치에대한 데이터 입출력 시의 레이턴시를 최소화할 수 있는 어드레스 매핑 정보를 출력하도록 하기 위해, 상기 인공지능 엔진이 사용하는 인공 지능 모델에 대한 학습을 실행하는 메모리 시스템."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "메모리 시스템의 동작 방법에 있어서,특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서, 상기 타깃 장치에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴을 모니터링하는단계;상기 제1 입출력 성능 패턴을, 상기 타깃 장치의 입출력 성능 패턴을 입력받고, 입력받은 입출력 성능 패턴을설정된 인공 지능 모델을 기초로 분석하여 상기 타깃 장치에 대한 데이터 입출력 시의 레이턴시를 감소시킬 수있는 어드레스 매핑 정보를 출력하는 인공 지능 엔진에 입력하는 단계; 및공개특허 10-2022-0063335-4-상기 인공 지능 엔진이 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 상기 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑하는 단계를 포함하는 메모리 시스템의 동작 방법."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 타깃 장치가 상기 메모리 시스템에 포함된 워킹 메모리일 때,상기 어드레스 매핑 정보는,칩 셀렉트(chip select) 매핑 정보, 행(row) 매핑 정보, 열(column) 매핑 정보, 뱅크(bank) 매핑 정보 및 뱅크그룹(bank group) 매핑 정보를 포함하는 메모리 시스템의 동작 방법."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 타깃 장치가 상기 메모리 시스템에 포함된 메모리 장치일 때,상기 어드레스 매핑 정보는,칩 인에이블(chip enable) 매핑 정보를 포함하는 메모리 시스템의 동작 방법."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,상기 제1 입출력 성능 패턴에 포함된 정보는,상기 인공 지능 엔진에 의해 유저 데이터 군집, 가비지 컬렉션 데이터 군집, 펌웨어 코드 군집 및 맵 데이터 군집 중 적어도 하나 이상의 군집으로 군집화되는 메모리 시스템의 동작 방법."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서,상기 메모리 시스템이 부팅되는 시점 또는 유휴 상태에서 깨어나는 시점에서, 상기 어드레스 매핑 정보가 상기제2 어드레스 매핑 정보로 리매핑되는 메모리 시스템의 동작 방법."}
{"patent_id": "10-2020-0149026", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서,상기 타깃 장치에 대응하는 어드레스 매핑 정보가 상기 제2 어드레스 매핑 정보로 리매핑된 후에, 상기 타깃 장치에 대한 입출력 성능 패턴인 제2 입출력 성능 패턴을 모니터링하는 단계; 및상기 제2 입출력 성능 패턴을 상기 제1 입출력 성능 패턴과 비교하여, 상기 인공 지능 엔진이 상기 타깃 장치에대한 데이터 입출력 시의 레이턴시를 최소화할 수 있는 어드레스 매핑 정보를 출력하도록 하기 위해, 상기 인공지능 엔진이 사용하는 인공 지능 모델에 대한 학습을 실행하는 단계를 추가로 포함하는 메모리 시스템의 동작방법."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 실시예들은 메모리 시스템 및 메모리 시스템의 동작 방법에 관한 것이다. 본 발명의 실시예들에 따르 면, 메모리 시스템은 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서 타깃 장치 에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴을 모니터링하고, 제1 입출력 성능 패턴에 대한 정보를 인공 지능 엔진 - 입력받은 입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 타깃 장치에 대한 어드레스 매핑 정보를 출력한다 - 에 입력하고, 인공 지능 엔진이 제1 입출력 성능 패턴에 대한 정보를 입력받은 후 출력 한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑할 수 있다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 실시예들은 메모리 시스템 및 메모리 시스템의 동작 방법에 관한 것이다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "저장 장치에 해당하는 메모리 시스템은 컴퓨터와, 스마트 폰, 태블릿 등의 모바일 단말, 또는 각종 전자 기기와 같은 호스트(host)의 요청을 기초로 데이터를 저장하는 장치이다. 메모리 시스템은 하드 디스크 드라이브(HDD: Hard Disk Drive)와 같이 자기 디스크에 데이터를 저장하는 장치뿐 아니라, 솔리드 스테이트 드라이브(SSD: Solid State Drive), UFS(Universal Flash Storage) 장치, eMMC(embedded MMC) 장치 등과 같이 비휘발성 메모 리에 데이터를 저장하는 장치 등을 포함할 수 있다. 메모리 시스템은 메모리 장치(e.g. 휘발성 메모리/비휘발성 메모리)를 제어하기 위한 메모리 컨트롤러를 더 포 함할 수 있으며, 이러한 메모리 컨트롤러는 호스트로부터 커맨드(Command)를 입력 받아, 입력 받은 커맨드에 기 초하여 메모리 시스템에 포함된 메모리 장치에 데이터를 리드(Read), 라이트(Write), 또는 소거(Erase) 하기 위 한 동작들을 실행하거나 제어할 수 있다. 그리고 메모리 컨트롤러는 이러한 동작들을 실행하거나 제어하기 위한 논리 연산을 수행하기 위한 펌웨어를 구동할 수 있다. 일반적으로, 메모리 시스템이 데이터를 리드 또는 라이트하는 과정에서 데이터에 대응하는 어드레스에 대한 매 핑 정보는 고정된 상태이다. 이 경우 리드 또는 라이트되는 데이터의 특성에 따라 메모리 시스템이 최적의 성능 을 내지 못할 가능성이 있다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예들은 최적의 리드/라이트 성능을 낼 수 있도록 어드레스 매핑 정보를 동적으로 변경할 수 있는 메모리 시스템 및 메모리 시스템의 동작 방법을 제공할 수 있다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 측면에서, 본 발명의 실시예들은 메모리 장치 및 메모리 장치와 통신하고 메모리 장치를 제어하는 메모리 컨 트롤러를 포함하는 메모리 시스템을 제공할 수 있다. 메모리 컨트롤러는, 특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 타깃 장치의 입출력 성능 패턴을 입력받고, 입력받은 입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 타깃 장치에 대한 데이터 입 출력 시의 레이턴시를 감소시킬 수 있는 어드레스 매핑 정보를 출력하는 인공 지능 엔진을 포함할 수 있다. 메모리 컨트롤러는, 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서, 타깃 장 치에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴을 모니터링할 수 있다. 메모리 컨트롤러는, 제1 입출력 성능 패턴에 대한 정보를 인공 지능 엔진에 입력할 수 있다. 메모리 컨트롤러는, 인공 지능 엔진이 제1 입출력 성능 패턴에 대한 정보를 입력받은 후 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑할 수 있다. 다른 측면에서, 본 발명의 실시예들은 메모리 장치를 포함하는 메모리 시스템의 동작 방법을 제공할 수 있다. 메모리 시스템의 동작 방법은, 특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서, 타깃 장치에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴을 모니터링하는 단계를 포함할 수 있다. 메모리 시스템의 동작 방법은, 제1 입출력 성능 패턴을, 타깃 장치의 입출력 성능 패턴을 입력받고, 입력받은 입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 타깃 장치에 대한 데이터 입출력 시의 레이턴시 를 감소시킬 수 있는 어드레스 매핑 정보를 출력하는 인공 지능 엔진에 입력하는 단계를 포함할 수 있다. 메모리 시스템의 동작 방법은, 인공 지능 엔진이 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑하는 단계를 포함할 수 있다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 의하면, 최적의 리드/라이트 성능을 낼 수 있도록 어드레스 매핑 정보를 동적으로 변경할 수 있다."}
{"patent_id": "10-2020-0149026", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는, 본 발명의 실시예들을 첨부된 도면을 참조하여 상세히 설명한다. 도 1은 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 구성도이다. 도 1을 참조하면, 본 발명의 실시예들에 따른 메모리 시스템은 데이터를 저장하는 메모리 장치와, 메 모리 장치를 제어하는 메모리 컨트롤러 등을 포함할 수 있다. 메모리 장치는 다수의 메모리 블록(Memory Block)을 포함하며, 메모리 컨트롤러의 제어에 응답하여 동작한다. 여기서, 메모리 장치의 동작은 일 예로, 리드 동작(Read Operation), 프로그램 동작(Program Operation; \"Write Operation\" 이라고도 함) 및 소거 동작(Erasure Operation) 등을 포함할 수 있다. 메모리 장치는 데이터를 저장하는 복수의 메모리 셀(Memory Cell; 간단히 줄여서 \"셀\" 이라고도 함)을 포 함하는 메모리 셀 어레이(Memory Cell Array)를 포함할 수 있다. 이러한 메모리 셀 어레이는 메모리 블록 내에 존재할 수 있다. 예를 들어, 메모리 장치는 DDR SDRAM(Double Data Rate Synchronous Dynamic Random Access Memory), LPDDR4(Low Power Double Data Rate4) SDRAM, GDDR(Graphics Double Data Rate) SDRAM, LPDDR(Low Power DDR), RDRAM(Rambus Dynamic Random Access Memory), 낸드 플래시 메모리(NAND Flash Memory), 3차원 낸드 플 래시 메모리(3D NAND Flash Memory), 노아 플래시 메모리(NOR Flash memory), 저항성 램(Resistive Random Access Memory: RRAM), 상변화 메모리(Phase-Change Memory: PRAM), 자기저항 메모리(Magnetoresistive Random Access Memory: MRAM), 강유전체 메모리(Ferroelectric Random Access Memory: FRAM), 또는 스핀주입 자화반전 메모리(Spin Transfer Torque Random Access Memory: STT-RAM) 등으로 다양한 타입으로 구현될 수 있다. 한편, 메모리 장치는 3차원 어레이 구조(three-Dimensional Array structure)로 구현될 수 있다. 본 발명 의 실시예들은 전하 저장층이 전도성 부유 게이트(Floating Gate)로 구성된 플래시 메모리 장치는 물론, 전하 저장층이 절연막으로 구성된 차지 트랩형 플래시(Charge Trap Flash; CTF)에도 적용될 수 있다. 메모리 장치는 메모리 컨트롤러로부터 커맨드 및 어드레스 등을 수신하고, 메모리 셀 어레이 중 어드 레스에 의해 선택된 영역을 액세스하도록 구성된다. 즉, 메모리 장치는 어드레스에 의해 선택된 영역에 대 해 커맨드에 해당하는 동작을 수행할 수 있다. 예를 들면, 메모리 장치는 프로그램 동작, 리드 동작 및 소거 동작 등을 수행할 수 있다. 이와 관련하여, 프로그램 동작 시, 메모리 장치는 어드레스에 의해 선택된 영역에 데이터를 프로그램 할 것이다. 리드 동 작 시, 메모리 장치는 어드레스에 의해 선택된 영역으로부터 데이터를 읽을 것이다. 소거 동작 시, 메모리 장치는 어드레스에 의해 선택된 영역에 저장된 데이터를 소거할 것이다. 메모리 컨트롤러는 메모리 장치에 대한 쓰기(프로그램), 읽기, 소거 및 백그라운드(background) 동작 을 제어할 수 있다. 여기서, 백그라운드 동작은 일 예로 가비지 컬렉션(GC, Garbage Collection), 웨어 레벨링 (WL, Wear Leveling), 또는 배드 블록 관리(BBM, Bad Block Management) 동작 등 중 하나 이상을 포함할 수 있 다. 메모리 컨트롤러는 호스트(HOST)의 요청에 따라 메모리 장치의 동작을 제어할 수 있다. 이와 다르게, 메모리 컨트롤러는 호스트(HOST)의 요청과 무관하게 메모리 장치의 동작을 제어할 수도 있다. 한편, 메모리 컨트롤러와 호스트(HOST)는 서로 분리된 장치일 수도 있다. 경우에 따라서, 메모리 컨트롤러 와 호스트(HOST)는 하나의 장치로 통합되어 구현될 수도 있다. 아래에서는, 설명의 편의를 위하여, 메모리 컨트롤러와 호스트(HOST)가 서로 분리된 장치인 것을 예로 들어 설명한다. 도 1을 참조하면, 메모리 컨트롤러는 메모리 인터페이스 및 제어 회로 등을 포함할 수 있으며, 호스트 인터페이스 등을 더 포함할 수 있다. 호스트 인터페이스는 호스트(HOST)와의 통신을 위한 인터페이스를 제공한다. 제어 회로는 호스트(HOST)로부터 커맨드를 수신할 때, 호스트 인터페이스를 통해서 커맨드를 수신하 여, 수신된 커맨드를 처리하는 동작을 수행할 수 있다. 메모리 인터페이스는, 메모리 장치와 연결되어 메모리 장치와의 통신을 위한 인터페이스를 제공 한다. 즉, 메모리 인터페이스는 제어 회로의 제어에 응답하여 메모리 장치와 메모리 컨트롤러 를 인터페이스를 제공하도록 구성될 수 있다. 제어 회로는 메모리 컨트롤러의 전반적인 제어 동작을 수행하여 메모리 장치의 동작을 제어한다. 이를 위해, 일 예로, 제어 회로는 프로세서, 워킹 메모리 등 중 하나 이상을 포함할 수 있으며, 경우에 따라서, 에러 검출 및 정정 회로(ECC Circuit, 126) 등을 더 포함할 수 있다. 프로세서는 메모리 컨트롤러의 제반 동작을 제어하고, 논리 연산을 수행할 수 있다. 프로세서는 호스트 인터페이스를 통해 호스트(HOST)와 통신하고, 메모리 인터페이스를 통해 메모리 장치와 통신할 수 있다. 프로세서는 플래시 변환 계층(FTL: Flash Translation Layer)의 기능을 수행할 수 있다. 프로세서는 플래시 변환 계층(FTL)을 통해 호스트가 제공한 논리 블록 어드레스(LBA, logical block address)를 물리 블록 어드레스(PBA, physical block address)로 변환할 수 있다. 플래시 변환 계층(FTL)은 맵핑 테이블을 이용하여 논리 블록 어드레스(LBA)를 입력 받아, 물리 블록 어드레스(PBA)로 변환시킬 수 있다. 플래시 변환 계층의 주소 맵핑 방법에는 맵핑 단위에 따라 여러 가지가 있다. 대표적인 어드레스 맵핑 방법에는 페이지 맵핑 방법(Page mapping method), 블록 맵핑 방법(Block mapping method), 그리고 혼합 맵핑 방법 (Hybrid mapping method)이 있다. 프로세서는 호스트(HOST)로부터 수신된 데이터를 랜더마이즈하도록 구성된다. 예를 들면, 프로세서는 랜더마이징 시드(seed)를 이용하여 호스트(HOST)로부터 수신된 데이터를 랜더마이즈할 것이다. 랜더마이즈된 데 이터는 저장될 데이터로서 메모리 장치에 제공되어 메모리 셀 어레이에 프로그램 된다. 프로세서는 리드 동작 시 메모리 장치로부터 수신된 데이터를 디랜더마이즈하도록 구성된다. 예를 들 면, 프로세서는 디랜더마이징 시드를 이용하여 메모리 장치로부터 수신된 데이터를 디랜더마이즈할것이다. 디랜더마이즈된 데이터는 호스트(HOST)로 출력될 것이다. 프로세서는 펌웨어(FirmWare)를 실행하여 메모리 컨트롤러의 동작을 제어할 수 있다. 다시 말해, 프 로세서는, 메모리 컨트롤러의 제반 동작을 제어하고, 논리 연산을 수행하기 위하여, 부팅 시 워킹 메 모리에 로딩 된 펌웨어를 실행(구동)할 수 있다. 펌웨어(FirmWare)는 메모리 시스템 내에서 실행되는 프로그램으로서, 다양한 기능적 계층들을 포함할 수 있다. 예를 들어, 펌웨어는, 호스트(HOST)에서 메모리 시스템에 요구하는 논리 주소(Logical Address)와 메모리 장치의 물리 주소(Physical Address) 간의 변환 기능을 하는 플래시 변환 계층(FTL: Flash Translation Layer)와, 호스트(HOST)에서 저장 장치인 메모리 시스템에 요구하는 커맨드를 해석하여 플래시 변환 계층 (FTL)에 전달하는 역할을 하는 호스트 인터페이스 계층(HIL: Host Interface Layer)와, 플래시 변환 계층(FT L)에서 지시하는 커맨드를 메모리 장치로 전달하는 플래시 인터페이스 계층(FIL: Flash Interface Layer) 등 중 하나 이상을 포함할 수 있다. 이러한 펌웨어는, 일 예로, 메모리 장치에 저장되어 있다가 워킹 메모리에 로딩 될 수 있다. 워킹 메모리는 메모리 컨트롤러를 구동하기 위해 필요한 펌웨어, 프로그램 코드, 커맨드 또는 데이터 들을 저장할 수 있다. 이러한 워킹 메모리는, 일 예로, 휘발성 메모리로서, SRAM (Static RAM), DRAM (Dynamic RAM) 및 SDRAM(Synchronous DRAM) 등 중 하나 이상을 포함할 수 있다. 에러 검출 및 정정 회로는 에러 정정 코드(Error Correction Code)를 이용하여 확인 대상 데이터의 에러 비트를 검출하고, 검출된 에러 비트를 정정하도록 구성될 수 있다. 여기서, 확인 대상 데이터는, 일 예로, 워킹 메모리에 저장된 데이터이거나, 메모리 장치로부터 읽어온 데이터 등일 수 있다. 에러 검출 및 정정 회로는 에러 정정 코드로 데이터를 디코딩하도록 구현될 수 있다. 에러 검출 및 정정 회로는 다양한 코드 디코더로 구현될 수 있다. 예를 들어, 비체계적 코드 디코딩을 수행하는 디코더 또는 체계적 코드 디코딩을 수행하는 디코더가 이용될 수 있다. 예를 들면, 에러 검출 및 정정 회로는 읽기 데이터들 각각에 대해 섹터(Sector) 단위로 에러 비트를 검출 할 수 있다. 즉, 각각의 읽기 데이터는 복수의 섹터(Sector)로 구성될 수 있다. 섹터(Sector)는 플래시 메모리 의 읽기 단위인 페이지(Page)보다 더 작은 데이터 단위를 의미할 수 있다. 각각의 읽기 데이터를 구성하는 섹터 들은 어드레스를 매개로 서로 대응될 수 있다. 에러 검출 및 정정 회로는 비트 에러율(Bit Error Rate, BER)을 산출하고, 섹터 단위로 정정 가능 여부를 판단할 수 있다. 에러 검출 및 정정 회로는 예를 들어, 비트 에러율(BER)이 기준값(reference value)보다 높은 경우 해당 섹터를 정정 불가능(Uncorrectable or Fail)으로 판단할 것이다. 반면에, 비트 에러율(BER)이 기준값보다 낮은 경우 해당 섹터를 정정 가능(Correctable or Pass)으로 판단할 것이다. 에러 검출 및 정정 회로는 모든 읽기 데이터들에 대해 순차적으로 에러 검출 및 정정 동작을 수행할 수 있 다. 에러 검출 및 정정 회로는 읽기 데이터에 포함된 섹터가 정정 가능한 경우 다음 읽기 데이터에 대해서 는 해당 섹터에 대한 에러 검출 및 정정 동작을 생략할 수 있다. 이렇게 모든 읽기 데이터들에 대한 에러 검출 및 정정 동작이 종료되면, 에러 검출 및 정정 회로는 마지막까지 정정 불가능으로 판단된 섹터를 검출할 수 있다. 정정 불가능한 것으로 판단된 섹터는 하나 또는 그 이상일 수 있다. 에러 검출 및 정정 회로는 정정 불가능으로 판단된 섹터에 대한 정보(ex. 어드레스 정보)를 프로세서로 전달할 수 있다. 버스는 메모리 컨트롤러의 구성 요소들(121, 122, 124, 125, 126) 사이의 채널(Channel)을 제공하도 록 구성될 수 있다. 이러한 버스는, 일 예로, 각종 제어 신호, 커맨드 등을 전달하기 위한 제어 버스와, 각종 데이터를 전달하기 위한 데이터 버스 등을 포함할 수 있다. 메모리 컨트롤러의 전술한 구성 요소들(121, 122, 124, 125, 126)은 예시일 뿐이다. 메모리 컨트롤러(12 0)의 전술한 구성 요소들(121, 122, 124, 125, 126) 중 일부의 구성 요소는 삭제되거나, 메모리 컨트롤러 의 전술한 구성 요소들 (121, 122, 124, 125, 126) 중 몇몇 구성 요소들이 하나로 통합될 수 있다. 경우에 따라, 메모리 컨트롤러의 전술한 구성 요소들 이외에 하나 이상의 다른 구성 요소가 추가될 수도 있다. 아래에서는, 도 2를 참조하여 메모리 장치에 대하여 더욱 상세하게 설명한다. 도 2는 본 발명의 실시예들에 따른 메모리 장치를 개략적으로 나타낸 블록도다. 도 2를 참조하면, 본 발명의 실시예들에 따른 메모리 장치는, 메모리 셀 어레이(Memory Cell Array, 210), 어드레스 디코더(Address Decoder, 220), 읽기 및 쓰기 회로(Read and Write Circuit, 230), 제어 로직 (Control Logic, 240) 및 전압 생성 회로(Voltage Generation Circuit, 250) 등을 포함할 수 있다. 메모리 셀 어레이는 다수의 메모리 블록(BLK1~BLKz, z는 2 이상의 자연수)을 포함할 수 있다. 다수의 메모리 블록(BLK1~BLKz)에는, 다수의 워드 라인(WL)과 다수의 비트 라인(BL)이 배치되며, 다수의 메모리 셀(MC)이 배열될 수 있다. 다수의 메모리 블록(BLK1~BLKz)은 다수의 워드 라인(WL)을 통해 어드레스 디코더와 연결될 수 있다. 다수 의 메모리 블록(BLK1~BLKz)은 다수의 비트 라인(BL)을 통해 읽기 및 쓰기 회로와 연결될 수 있다. 다수의 메모리 블록(BLK1~BLKz) 각각은 다수의 메모리 셀을 포함할 수 있다. 예를 들어, 다수의 메모리 셀은 불 휘발성 메모리 셀들이며, 수직 채널 구조를 갖는 불휘발성 메모리 셀들로 구성될 수 있다. 메모리 셀 어레이는 2차원 구조의 메모리 셀 어레이로 구성될 수 있으며, 경우에 따라서는, 3차원 구조의 메모리 셀 어레이로 구성될 수도 있다. 한편, 메모리 셀 어레이에 포함되는 복수의 메모리 셀 각각은 적어도 1비트의 데이터를 저장할 수 있다. 일 예로, 메모리 셀 어레이에 포함되는 복수의 메모리 셀 각각은 1비트의 데이터를 저장하는 싱글-레벨 셀 (SLC: Single-Level Cell)일 수 있다. 다른 예로, 메모리 셀 어레이에 포함되는 복수의 메모리 셀 각각은 2비트의 데이터를 저장하는 멀티-레벨 셀(MLC: Multi-Level Cell)일 수 있다. 또 다른 예로, 메모리 셀 어레이 에 포함되는 복수의 메모리 셀 각각은 3비트의 데이터를 저장하는 트리플-레벨 셀(TLC: Triple-Level Cell)일 수 있다. 또 다른 예로, 메모리 셀 어레이에 포함되는 복수의 메모리 셀 각각은 4비트의 데이터를 저장하는 쿼드-레벨 셀(QLC: Quad-Level Cell)일 수 있다. 또 다른 예로, 메모리 셀 어레이는 5비트 이상 의 데이터를 각각 저장하는 복수의 메모리 셀을 포함할 수도 있다. 도 2를 참조하면, 어드레스 디코더, 읽기 및 쓰기 회로, 제어 로직 및 전압 생성 회로 등 은 메모리 셀 어레이를 구동하는 주변 회로로서 동작할 수 있다. 어드레스 디코더는 다수의 워드 라인(WL)을 통해 메모리 셀 어레이에 연결될 수 있다. 어드레스 디코더는 제어 로직의 제어에 응답하여 동작하도록 구성될 수 있다. 어드레스 디코더는 메모리 장치 내부의 입출력 버퍼를 통해 어드레스(Address)를 수신할 수 있다. 어 드레스 디코더는 수신된 어드레스 중 블록 어드레스(Block Address)를 디코딩하도록 구성될 수 있다. 어드 레스 디코더는 디코딩된 블록 어드레스에 따라 적어도 하나의 메모리 블록을 선택할 수 있다. 어드레스 디코더는 전압 생성 회로로부터 읽기 전압(Vread) 및 패스 전압(Vpass)을 입력 받을 수 있 다. 어드레스 디코더는 리드 동작 중 읽기 전압 인가 동작 시, 선택된 메모리 블록 내 선택된 워드 라인(WL)으 로 읽기 전압(Vread)를 인가하고, 나머지 비 선택된 워드 라인들(WL)에는 패스 전압(Vpass)을 인가할 수 있다. 어드레스 디코더는 프로그램 검증 동작 시, 선택된 메모리 블록 내 선택된 워드 라인(WL)에 전압 생성 회 로에서 발생된 검증 전압을 인가하고, 나머지 비 선택된 워드 라인들(WL)에 패스 전압(Vpass)을 인가할 수 있다. 어드레스 디코더는 수신된 어드레스 중 열 어드레스를 디코딩 하도록 구성될 수 있다. 어드레스 디코더 는 디코딩 된 열 어드레스를 읽기 및 쓰기 회로에 전송할 수 있다. 메모리 장치의 리드 동작 및 프로그램 동작은 페이지 단위로 수행될 수 있다. 리드 동작 및 프로그램 동작 요청 시에 수신되는 어드레스는 블록 어드레스, 행 어드레스 및 열 어드레스 중 하나 이상을 포함할 수 있다. 어드레스 디코더는 블록 어드레스 및 행 어드레스에 따라 하나의 메모리 블록 및 하나의 워드 라인을 선택 할 수 있다. 열 어드레스는 어드레스 디코더에 의해 디코딩 되어 읽기 및 쓰기 회로에 제공될 수 있 다. 어드레스 디코더는 블록 디코더, 행 디코더, 열 디코더 및 어드레스 버퍼 등 중 하나 이상을 포함할 수 있 다.읽기 및 쓰기 회로는 다수의 페이지 버퍼(PB)를 포함할 수 있다. 읽기 및 쓰기 회로는 메모리 셀 어 레이의 리드 동작(Read Operation) 시에는 \"읽기 회로(Read Circuit)\"로 동작하고, 쓰기 동작(Write Operation) 시에는 \"쓰기 회로(Write Circuit)\"로 동작할 수 있다. 전술한 읽기 및 쓰기 회로는 다수의 페이지 버퍼(PB)를 포함하는 페이지 버퍼 회로(Page Buffer Circuit) 또는 데이터 레지스터 회로(Data Register Circuit)라고도 한다. 여기서, 읽기 및 쓰기 회로는 데이터 처 리 기능을 담당하는 데이터 버퍼(Data Buffer)를 포함할 수 있고, 경우에 따라서, 캐싱 기능을 담당하는 캐쉬 버퍼(Cache Buffer)를 추가로 더 포함할 수 있다. 다수의 페이지 버퍼(PB)는 다수의 비트 라인(BL)을 통해 메모리 셀 어레이에 연결될 수 있다. 다수의 페이 지 버퍼(PB)는 리드 동작 및 프로그램 검증 동작 시, 메모리 셀들의 문턱전압(Vth)을 센싱하기 위하여, 메모리 셀들과 연결된 비트 라인들(BL)에 센싱 전류를 계속적으로 공급하면서, 대응하는 메모리 셀의 프로그램 상태에 따라 흐르는 전류량이 변화되는 것을 센싱 노드를 통해 감지하여 센싱 데이터로 래치할 수 있다. 읽기 및 쓰기 회로는 제어 로직에서 출력되는 페이지 버퍼 제어 신호들에 응답하여 동작할 수 있다. 읽기 및 쓰기 회로는 리드 동작 시, 메모리 셀의 데이터를 센싱하여 독출 데이터를 임시 저장한 후, 메모 리 장치의 입출력 버퍼로 데이터(DATA)를 출력한다. 예시적인 실시 예로서, 읽기 및 쓰기 회로는 페 이지 버퍼들(PB) 또는 페이지 레지스터들 이외에도, 열 선택 회로 등을 포함할 수 있다. 제어 로직은 어드레스 디코더, 읽기 및 쓰기 회로, 및 전압 생성 회로 등과 연결될 수 있 다. 제어 로직은 메모리 장치의 입출력 버퍼를 통해 커맨드(CMD) 및 제어 신호(CTRL)를 수신할 수 있 다. 제어 로직은 제어 신호(CTRL)에 응답하여 메모리 장치의 제반 동작을 제어하도록 구성될 수 있다. 제 어 로직은 다수의 페이지 버퍼(PB)의 센싱 노드의 프리 차지 전위 레벨을 조절하기 위한 제어 신호를 출력 할 수 있다. 제어 로직은 메모리 셀 어레이의 리드 동작을 수행하도록 읽기 및 쓰기 회로를 제어할 수 있다. 전압 생성 회로는, 제어 로직에서 출력되는 전압 생성 회로 제어 신호에 응답하여, 리드 동작 시, 이 용되는 읽기 전압(Vread) 및 패스 전압(Vpass)을 생성할 수 있다. 한편, 전술한 메모리 장치의 메모리 블록 각각은 다수의 워드 라인(WL)과 대응되는 다수의 페이지와 다수 의 비트 라인(BL)과 대응되는 다수의 스트링으로 구성될 수 있다. 메모리 블록(BLK)에는 다수의 워드 라인(WL)과 다수의 비트 라인(BL)이 교차하면서 배치될 수 있다. 예를 들어, 다수의 워드 라인(WL) 각각은 행 방향으로 배치되고, 다수의 비트 라인(BL) 각각은 열 방향으로 배치될 수 있다. 다른 예를 들어, 다수의 워드 라인(WL) 각각은 열 방향으로 배치되고, 다수의 비트 라인(BL) 각각은 행 방향으로 배치될 수 있다. 다수의 워드 라인(WL) 중 하나와 다수의 비트 라인(BL) 중 하나에 연결되는 메모리 셀이 정의될 수 있다. 각 메 모리 셀에는 트랜지스터가 배치될 수 있다. 예를 들어, 메모리 셀(MC)에 배치된 트랜지스터는 드레인, 소스 및 게이트 등을 포함할 수 있다. 트랜지스터의 드레인(또는 소스)은 해당 비트 라인(BL)과 직접 또는 다른 트랜지스터를 경유하여 연결될 수 있다. 트랜지스터 의 소스(또는 드레인)는 소스 라인(그라운드일 수 있음)과 직접 또는 다른 트랜지스터를 경유하여 연결될 수 있 다. 트랜지스터의 게이트는 절연체에 둘러싸인 플로팅 게이트(Floating Gate)와 워드 라인(WL)으로부터 게이트 전압이 인가되는 컨트롤 게이트(Control Gate)를 포함할 수 있다. 각 메모리 블록에는, 2개의 최외곽 워드 라인 중 읽기 및 쓰기 회로와 더 인접한 제1 최외곽 워드 라인의 바깥쪽에 제1 선택 라인(소스 선택 라인 또는 드레인 선택 라인이라고도 함)이 더 배치될 수 있으며, 다른 제2 최외곽 워드 라인의 바깥쪽에 제2 선택 라인(드레인 선택 라인 또는 소스 선택 라인이라고도 함)이 더 배치될 수 있다. 경우에 따라서, 제1 최외곽 워드 라인과 제1 선택 라인 사이에는 하나 이상의 더미 워드 라인이 더 배치될 수 있다. 또한, 제2 최외곽 워드 라인과 제2 선택 라인 사이에도 하나 이상의 더미 워드 라인이 더 배치될 수 있다. 전술한 메모리 블록의 리드 동작 및 프로그램 동작(쓰기 동작)은 페이지 단위로 수행될 수 있으며, 소거 (Erasure) 동작은 메모리 블록 단위로 수행될 수 있다. 도 3는 본 발명의 실시예들에 따른 메모리 장치의 워드 라인(WL) 및 비트 라인(BL)의 구조를 나타낸 도면 이다. 도 3를 참조하면, 메모리 장치에는, 메모리 셀들(MC)이 모여 있는 핵심 영역과 이 핵심 영역의 나머지 영 역에 해당하며 메모리 셀 어레이의 동작을 위해 서포트(Support) 해주는 보조 영역이 존재한다. 핵심 영역은 페이지들(PG)과 스트링들(STR)으로 구성될 수 있다. 이러한 핵심 영역에는, 다수의 워드 라인(WL1 ~ WL9)과 다수의 비트 라인(BL)이 교차하면서 배치된다. 다수의 워드 라인(WL1 ~ WL9)은 행 디코더와 연결되고, 다수의 비트 라인(BL)은 열 디코더와 연결될 수 있다. 다수의 비트 라인(BL)와 열 디코더 사이에는 읽기 및 쓰기 회로에 해당하는 데이터 레지스 터가 존재할 수 있다. 다수의 워드 라인(WL1 ~ WL9)은 다수의 페이지(PG)와 대응된다. 예를 들어, 도 3와 같이 다수의 워드 라인(WL1 ~ WL9) 각각은 하나의 페이지(PG)와 대응될 수 있다. 이와 다르 게, 다수의 워드 라인(WL1 ~ WL9) 각각이 사이즈가 큰 경우, 다수의 워드 라인(WL1 ~ WL9) 각각은 둘 이상(예: 2개 또는 4개)의 페이지(PG)와 대응될 수도 있다. 페이지(PG)는 프로그램 동작과 리드 동작을 진행하는데 있어 서 최소 단위가 되며, 프로그램 동작 및 리드 동작 시, 동일 페이지(PG) 내에서의 모든 메모리 셀(MC)은 동시 동작을 수행할 수 있다. 다수의 비트 라인(BL)은 홀수 번째 비트 라인(BL)과 짝수 번째 비트 라인(BL)을 구분되면서 열 디코더와 연결될 수 있다. 메모리 셀(MC)에 액세스 하기 위해서는, 주소가 먼저 입출력 단을 거쳐 행 디코더와 열 디코더를 통 하여 핵심 영역으로 들어와서, 타깃 메모리 셀을 지정할 수 있다. 타깃 메모리 셀을 지정한다는 것은 행 디코더 와 연결된 워드 라인들(WL1 ~ WL9)과 열 디코더와 연결된 비트 라인들(BL)의 교차되는 사이트에 있는 메모리 셀(MC)에 데이터를 프로그램 하거나 프로그램 된 데이터를 읽어 내기 위하여 액세스 한다는 것을 의미한 다. 제1 방향(예: X축 방향)의 페이지(PG)는 워드 라인(WL)이란 공통으로 사용하는 라인으로 묶여 있으며, 제2 방향 (예: Y축 방향)의 스트링(STR)도 비트 라인(BL)이란 공통 라인으로 묶여(연결되어) 있다. 공통으로 묶여 있다는 것은 구조적으로 동일한 물질로 연결되어 있고, 전압 인가 시에도 모두 동일한 전압이 동시에 인가된다는 것을 의미한다. 물론, 직렬로 연결된 중간 위치나 마지막 위치의 메모리 셀(MC)은 앞의 메모리 셀(MC)의 전압 강하에 의하여, 처음에 위치하는 메모리 셀(MC)과 맨 마지막에 위치하는 메모리 셀(MC)에 인가되는 전압은 약간 다를 수 있다. 메모리 장치의 데이터 처리 모두는, 데이터 레지스터를 경유하여 프로그램 및 읽기가 되므로, 데이터 레지스터는 중추적 역할을 한다. 데이터 레지스터의 데이터 처리가 늦어지면 다른 모든 영역에서는 데이터 레지스터가 데이터 처리를 완료할 때까지 기다려야 한다. 또한, 데이터 레지스터의 성능이 저 하되면, 메모리 장치의 전체 성능을 저하시킬 수 있다. 도 3의 예시를 참조하면, 1개의 스트링(STR)에는, 다수의 워드 라인(WL1 ~ WL9)과 연결되는 다수의 트랜지스터 (TR1 ~ TR9)가 존재할 수 있다. 다수의 트랜지스터(TR1 ~ TR9)가 존재하는 영역들이 메모리 셀들(MC)에 해당한 다. 여기서, 다수의 트랜지스터(TR1 ~ TR9)는 전술한 바와 같이, 제어 게이트 (CG)와 플로팅 게이트(FG)를 포함 하는 트랜지스터들이다. 다수의 워드 라인(WL1 ~ WL9)은 2개의 최외곽 워드 라인(WL1, WL9)을 포함한다. 2개의 최외곽 워드 라인(WL1, WL9) 중 신호 경로적 측면에서 데이터 레지스터와 더 인접한 제1 최외곽 워드 라인(WL1)의 바깥쪽에는 제1 선택 라인(DSL)이 더 배치되고, 다른 제2 최외곽 워드 라인(WL9)의 바깥쪽에는 제2 선택 라인(SSL)이 더 배치될 수 있다. 제1 선택 라인(DSL)에 의해 온-오프가 제어되는 제1 선택 트랜지스터(D-TR)는 제1 선택 라인(DSL)과 연결된 게 이트 전극을 가지고 있을 뿐, 플로팅 게이트(FG)를 포함하지 않는 트랜지스터이다. 제2 선택 라인(SSL)에 의해 온-오프가 제어되는 제2 선택 트랜지스터(S-TR)는 제2 선택 라인(SSL)과 연결된 게이트 전극을 가지고 있을 뿐, 플로팅 게이트(FG)를 포함하지 않는 트랜지스터이다.제1 선택 트랜지스터(D-TR)는 해당 스트링(STR)과 데이터 레지스터 간의 연결을 온 또는 오프 시키는 스위 치 역할을 한다. 제2 선택 트랜지스터(S-TR)는 해당 스트링(STR)과 소스 라인(SL) 간의 연결을 온 또는 오프 시 켜주는 스위치 역할을 한다. 즉, 제1 선택 트랜지스터(D-TR) 및 제2 선택 트랜지스터(S-TR)는 해당 스트링(ST R)의 양쪽 끝에 있으면서, 신호를 이어주고 끊어내는 문지기 역할을 한다. 메모리 시스템은, 프로그램 동작 시, 프로그램 할 비트 라인(BL)의 타깃 메모리 셀(MC)에 전자를 채워야 하기 때문에, 제1 선택 트랜지스터(D-TR)의 게이트 전극에 소정의 턴-온 전압(Vcc)를 인가하여 제1 선택 트랜지 스터(D-TR)를 턴-온 시키고, 제2 선택 트랜지스터(S-TR)의 게이트 전극에는 소정의 턴-오프 전압(예: 0V)을 인 가하여 제2 선택 트랜지스터(S-TR)를 턴-오프 시킨다. 메모리 시스템은, 리드 동작 또는 검증(Verification) 동작 시, 제1 선택 트랜지스터(D-TR) 및 제2 선택 트랜지스터(S-TR)를 모두 턴-온 시켜준다. 이에 따라, 전류가 해당 스트링(STR)을 관통하여 그라운드에 해당하 는 소스 라인(SL)으로 빠질 수 있어서, 비트 라인(BL)의 전압 레벨이 측정될 수 있다. 다만, 리드 동작 시, 제1 선택 트랜지스터(D-TR) 및 제2 선택 트랜지스터(S-TR)의 온-오프 타이밍의 시간 차이가 있을 수 있다. 메모리 시스템은, 소거(Erasure) 동작 시, 소스 라인(SL)을 통하여 기판(Substrate)에 소정 전압(예: +20V)를 공급하기도 한다. 메모리 시스템은, 소거(Erasure) 동작 시, 제1 선택 트랜지스터(D-TR) 및 제2 선택 트랜지스터(S-TR)를 모두 플로팅(Floating) 시켜서 무한대의 저항을 만들어 준다. 이에 따라, 제1 선택 트 랜지스터(D-TR) 및 제2 선택 트랜지스터(S-TR)의 역할이 없도록 해주고, 플로팅 게이트(FG)와 기판(Substrate) 사이에서만 전위 차이에 의한 전자(electron)가 동작할 수 있도록 구조화 되어 있다. 도 4는 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 구조를 나타낸 도면이다. 도 4를 참조하면, 메모리 시스템의 메모리 컨트롤러는 인공 지능 엔진을 포함할 수 있다. 인공 지능 엔진은 타깃 장치의 입출력 성능 패턴을 입력받고, 입력받은 입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 타깃 장치에 대한 데이터 입출력 시의 레이턴시(latency)를 감소시킬 수 있는 어 드레스 매핑 정보를 출력할 수 있다. 이때, 인공 지능 모델은 예를 들어 머신 러닝 모델(e.g. 의사 결정 트리 (decision tree), 랜덤 포레스트(random forest))이나 딥 러닝 모델(e.g. CNN(Convolutional Neural Network), RNN(Recurrent Neural Network)) 등일 수 있다. 타깃 장치는 특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 장치이다. 타깃 장치는 일 예로 메모리 시 스템의 메모리 장치 또는 워킹 메모리일 수 있다. 인공 지능 엔진은 메모리 컨트롤러 내부에 포함된 하드웨어 회로로 구현되거나 또는 프로세서에 의해 구동되는 소프트웨어 모듈로서 구현될 수도 있다. 일 예로, 프로세서는 펌웨어 상에서 인공 지능 엔 진의 기능을 정의한 소프트웨어 모듈을 별도의 프로세스(process) 또는 스레드(thread)로 구동하여 인공 지능 엔진을 실행시킬 수 있다. 도 5는 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 동작을 나타낸 도면이다. 도 5를 참조하면, 메모리 시스템의 메모리 컨트롤러는 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보(AM1)인 상태에서, 타깃 장치에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴(IOP1)을 모니터링할 수 있다. 메모리 컨트롤러는 미리 설정된 주기마다 제1 입출력 성능 패턴(IOP1)을 모니터링할 수도 있고, 특정한 조 건(e.g. 타깃 장치의 입출력 성능이 설정된 기준치 이하인 경우/호스트가 타깃 장치의 입출력 성능을 모니터링 할 것을 요청하는 메시지를 전송하는 경우)이 만족될 때 제1 입출력 성능 패턴(IOP1)을 모니터링할 수도 있다. 이때, 타깃 장치는 도 4에서 전술한 바와 같이, 워킹 메모리 또는 메모리 장치일 수 있다. 타깃 장치에 대한 입출력 성능 패턴은, 일 예로 타깃 장치에 데이터가 입력 또는 출력되는 과정에서 발생한 레 이턴시(latency)에 대한 정보를 포함할 수 있다. 즉, 타깃 장치에 대한 입출력 성능 패턴은 데이터가 타깃 장치 에 입력되거나 또는 출력되는 과정에서 소요된 지연 시간의 정보를 나타낼 수 있다. 한편, 타깃 장치에 대한 입출력 성능 패턴은 타깃 장치에 대한 워크로드(workload) 등의 용어로서 호칭될 수도 있으며, 호칭에 의해 그 의미가 한정되지 않는다. 그리고 메모리 컨트롤러는 모니터링한 제1 입출력 성능 패턴(IOP1)에 대한 정보를 인공 지능 엔진에 입력할 수 있다. 그리고 메모리 컨트롤러는 인공 지능 엔진이 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보 (AM2)를, 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑할 수 있다. 이와 같이, 본 발명의 실시예들에서 메모리 시스템은 타깃 장치에 대응하는 어드레스 매핑 정보를 인공 지 능 엔진을 통해 동적으로 리매핑하므로서, 타깃 장치의 입출력 성능을 최적화할 수 있으며, 결과적으로 메 모리 시스템이 호스트의 요청에 따라 데이터를 리드/라이트하는 성능을 최적화할 수 있다. 이하, 전술한 어드레스 매핑 정보에 대해서 설명한다. 도 6은 본 발명의 실시예들에 따른 어드레스 매핑 정보의 일 예를 나타낸 도면이다. 도 6을 참조하면, 어드레스 매핑 정보는 어드레스의 각 비트가 어떤 정보에 매핑되는지를 지시할 수 있다. 이하, 본 발명의 실시예들에서는 어드레스의 비트수가 32비트인 경우를 예를 들어 설명하나, 어드레스의 비트 수에는 제한이 없으며 16비트, 64비트, 128비트 등으로 설정될 수도 있다. 어드레스 매핑 정보는, 일 예로 타깃 장치가 워킹 메모리일 때, 칩 셀렉트(CS, chip select) 매핑 정보, 행(Row) 매핑 정보, 열(column) 매핑 정보, 뱅크(bank) 매핑 정보 및 뱅크 그룹(BG, bank group) 매핑 정보를 포함할 수 있다. 칩 셀렉트 매핑 정보는 어드레스 중에서 어떤 비트가 칩 셀렉트 주소에 매핑되는지를 나타내는 정보이다. 행 매 핑 정보는 어드레스 중에서 어떤 비트가 행 주소에 매핑되는지를 나타내는 정보이다. 열 매핑 정보는 어드레스 중에서 어떤 비트가 열 주소에 매핑되는지를 나타내는 정보이다. 뱅크 매핑 정보는 어드레스 중에서 어떤 비트 가 뱅크 주소에 매핑되는지를 나타내는 정보이다. 뱅크 그룹 매핑 정보는 어드레스 중에서 어떤 비트가 뱅크 그 룹 주소에 매핑되는지를 나타내는 정보이다. 본 발명의 실시예들에서, 칩 셀렉트 주소, 행 주소, 열 주소, 뱅크 주소, 뱅크 그룹 주소 각각에 대응되는 비트 의 개수는 고정되어 있다. 하지만, 칩 셀렉트 주소, 행 주소, 열 주소, 뱅크 주소, 뱅크 그룹 주소 각각에 대하 여 매핑되는 비트는 변경될 수 있다. 도 6에서, 32비트의 어드레스는 1비트의 칩 셀렉트 주소, 16비트의 행 주소, 2비트의 뱅크 주소, 2비트의 뱅크 그룹 주소, 9비트의 열 주소를 포함할 수 있다. 이때, 제1 어드레스 매핑 정보(AM1)는 어드레스 중 31번 비트가 칩 셀렉트 주소이고, 30번 비트부터 15번 비트 까지가 행 주소, 14번 비트부터 13번 비트까지가 뱅크 주소, 12번 비트부터 11번 비트까지가 뱅크 그룹 주소, 10번 비트부터 2번 비트까지가 열 주소라는 것을 지시한다. 반면, 제2 어드레스 매핑 정보(AM2)는 어드레스 중 31번 비트부터 16번 비트까지가 행 주소, 15번 비트부터 14 번 비트까지가 뱅크 주소, 8번 비트가 칩 셀렉트 주소, 7번 비트부터 6번 비트까지가 뱅크 그룹 주소, 13번 비 트부터 9번 비트, 5번 비트부터 2번 비트까지가 열 주소라는 것을 지시한다. 한편, 다른 예로, 어드레스 매핑 정보는, 타깃 장치가 메모리 장치일 때, 어드레스 중에서 어떤 비트가 칩 인에이블(chip enable) 주소에 매핑되는지를 나타내는 정보인 칩 인에이블 매핑 정보를 포함할 수 있다. 어드레 스의 칩 인에이블 주소는, 해당 어드레스가 메모리 장치에 포함된 복수의 메모리 다이 중에서 어떤 메모리 다이에 매핑되는지를 지시하는 주소이다. 이와 같이 어드레스 매핑 정보가 변경됨에 따라, 어드레스 매핑 정보를 기반으로 데이터를 입출력하는 장치의 성능에 차이가 발생할 수 있다. 예를 들어, 칩 셀렉트 주소가 어드레스의 어떤 비트에 매핑되는지에 따라, 칩 셀렉트 인터리빙(interleaving)에 따라 데이터 입출력 과정에서 소요되는 턴어라운드 타임(turnaround time)의 차이로 인해, 데이터를 입출력하는 장치의 성능에 차이가 발생할 수 있다. 도 7은 본 발명의 실시예들에 따른 워킹 메모리의 동작의 일 예를 나타낸 도면이다. 도 7에서는, 메모리 컨트롤러가 워킹 메모리로부터 데이터를 리드할 때, 하나의 뱅크 그룹에서 데이 터를 리드한 후에 다른 뱅크 그룹에서 데이터를 리드할 때는 tCCD_S 이상의 레이턴시를 지켜야 하고, 하나의 뱅 크 그룹에서 데이터를 리드한 후에 같은 뱅크 그룹에서 다시 데이터를 리드할 때는 tCCD_L 이상의 레이턴시를 지켜야 한다. 도 7에서, 뱅크 그룹 a의 데이터를 리드한 후 뱅크 그룹 b의 데이터를 리드하기까지 레이턴시가 tCCD_S이고, 뱅크 그룹 b의 데이터를 리드한 후 다시 뱅크 그룹 b의 데이터를 리드하기까지의 레이턴시가tCCD_L이다. 이때, tCCD_L의 값이 tCCD_S보다 크다. 즉, 같은 뱅크 그룹에서 데이터를 리드할 때의 레이턴시가 서로 다른 뱅 크 그룹에서 데이터를 리드할 때의 레이턴시보다 크다. 따라서, 워킹 메모리에 대한 어드레스는, 뱅크 그 룹을 뱅크보다 먼저 판단하기 위해서 뱅크 그룹의 주소에 매핑되는 비트를 뱅크의 주소에 매핑되는 비트보다 하 위의 비트에 매핑할 수 있다. 데이터를 리드하는 과정에서 리드하는 데이터의 주소가 변할 때, 주소가 변하는 위치에 어떤 정보가 매핑되어 있는지에 따라 데이터를 리드하는 과정의 레이턴시가 tCCD_L이 될 수도 있고 tCCD_S가 될 수도 있다. 이 경우 메모리 컨트롤러는 하나의 데이터를 리드한 후 다른 데이터를 리드할 때 레이턴시가 tCCD_L에서 tCCD_S로 변경되도록 어드레스 매핑 정보를 리매핑함으로써, 데이터를 리드할 때 소요되 는 전체 레이턴시를 감소시킬 수 있다. 단, 레이턴시의 감소 비율(e.g. 33%)은 상황에 따라 달라질 수 있다. 하지만, 어드레스의 어떤 비트에 뱅크 그룹의 주소를 매핑시켜야 하는지는 명확한 기준이 없으며, 이는 리드 과 정에서 입출력되는 데이터의 특성에 따라 달라질 수 있다. 그리고 뱅크 주소 및 뱅크 그룹 주소의 관계뿐 아니 라 칩 셀렉트 주소, 행 주소, 열 주소의 관계 역시 입출력되는 데이터의 특성에 따라 달라질 수 있다. 따라서, 본 발명의 실시예들에서, 메모리 시스템의 메모리 컨트롤러는 타깃 장치에 대한 최적의 입출 력 성능을 확보할 수 있는 어드레스 매핑 정보를 결정할 수 있다. 이때, 타깃 장치에 입출력되는 데이터의 특성 은, 호스트의 특성(e.g. 호스트의 OS(Operating System)), 환경 정보(e.g. 동작 시간, 공급되는 전원), 타깃 장치의 특성(e.g. 최대 대역폭(bandwidth) 등 여러가지 기준에 따라 다양하고 복잡하게 결정될 수 있다. 따라서, 메모리 시스템의 메모리 컨트롤러는 특정한 기준에 따라 어드레스 매핑 정보를 결정하는 대 신에, 인공 지능 엔진이 사용하는 인공 지능 모델에 대한 지속적인 비지도 학습을 수행하여 인공 지능 엔 진이 입출력 동작 시에 발생하는 레이턴시를 감소시킬 수 있는 어드레스 매핑 정보를 출력하도록 한다. 이 를 통해 인공 지능 엔진은 타깃 장치에 대한 최적의 입출력 성능을 확보할 수 있는 어드레스 매핑 정보를 결정할 수 있다. 일 예로, 메모리 컨트롤러는 인공 지능 모델에 대한 비지도 학습을 수행하기 위해, 인공 지능 엔진이 출력한 어드레스 매핑 정보를 사용하였을 때 데이터 입출력 동작 시에 발생하는 레이턴시를 측정하고, 이를 기 존의 어드레스 매핑 정보를 사용하였을 때 데이터 입출력 동작 시에 발생하는 레이턴시와 비교할 수 있다. 그리 고 메모리 컨트롤러는 비교 결과를 기초로 하여 경사 강하법(gradient descent), 역전파(back propagation) 등의 방법을 사용하여 인공 지능 엔진의 사용하는 인공 지능 모델을 수정(e.g. 인공 지능 모 델의 은닉층(hidden layer)에 포함된 각 노드에 적용되는 가중치를 변경)하는 방식으로 학습을 진행할 수 있다. 이상에서, 메모리 시스템이 타깃 장치에 대한 어드레스 매핑 정보를 리매핑하는 동작에 대해 설명하였다. 이하, 도 8 내지 도 10에서 메모리 시스템이 타깃 장치에 대한 어드레스 매핑 정보를 리매핑하기 위해 사 용하는 인공 지능 엔진의 동작의 구체적인 일 예를 설명한다. 도 8은 본 발명의 실시예들에 따른 인공 지능 엔진의 개략적인 동작을 나타낸 도면이다. 타깃 장치(e.g. 워킹 메모리/메모리 장치)에 입출력되는 데이터는, 데이터의 특성에 따라 크기/발생 빈도 등이 서로 다를 수 있다. 따라서, 인공 지능 엔진은 입력된 입출력 성능 패턴에 포함된 정보를 데이 터의 특성에 따라 군집화함으로써 타깃 장치에 입출력되는 데이터의 특성을 구체화할 수 있다. 도 8을 참조하면, 인공 지능 엔진은 제1 입출력 성능 패턴(IOP1)을 입력받고, 제1 입출력 성능 패턴(IOP 1)에 포함된 정보를 1) 유저 데이터 군집, 2) 가비지 컬렉션 데이터 군집, 3) 펌웨어 코드 군집 및 4) 맵 데이 터 군집 중 적어도 하나 이상의 군집으로 군집화(clustering)할 수 있다. 유저 데이터 군집은 호스트가 리드 또는 라이트를 요청한 데이터가 포함된 군집이다. 가비지 컬렉션 데이터 군 집은 가비지 컬렉션 동작 중에 리드 또는 라이트되는 데이터가 포함된 군집이다. 펌웨어 코드 군집은 메모리 컨 트롤러가 펌웨어를 구동하기 위해 리드 또는 라이트하는 펌웨어 코드가 포함된 군집이다. 맵 데이터 군집 은 호스트 상의 논리 주소와 메모리 장치 상의 물리 주소 간의 매핑 관계를 지시하는 맵 데이터가 포함된 군집이다. 인공 지능 엔진은 군집화를 통해 생성된 각 군집을 설정된 인공 지능 모델을 기초로 분석하여, 인공 지능 모델에 의해 도출된 결과를 기초로 제2 어드레스 매핑 정보(AM2)를 출력할 수 있다. 한편, 도 8에서 설명한 군집의 개수 및 각 군집의 특성은 예시적인 것으로서, 인공 지능 엔진에서 군집화 하는 군집의 개수 및 각 군집의 특성은 구현에 따라 달라질 수 있다. 도 9는 본 발명의 실시예들에 따른 인공 지능 엔진이 성능 패턴에 대한 정보를 군집화하는 일 예를 나타낸 도면이다. 도 9를 참조하면, 인공 지능 엔진은 K-평균 클러스터링(K-means clustering) 알고리즘을 이용하여, 제1 입 출력 성능 패턴(IOP1)에 포함된 정보를 군집화할 수 있다. K-평균 클러스터링 알고리즘은 클러스터되지 않은 (unclusted) 정보를 K개의 클러스터로 클러스터링 하기 위해, 각 클러스터와 각 정보 간의 차이의 분산 (variance)을 최소화하는 방식으로 동작할 수 있다. 도 10은 본 발명의 실시예들에 따른 인공 지능 엔진이 사용하는 모델의 일 예를 나타낸 도면이다. 도 10을 참조하면, 인공 지능 엔진은 DNN(Deep Neural Network)를 기초로 도 9에서 군집화된 하나 이상의 군집을 분석하여, 제2 어드레스 매핑 정보(AM2)를 생성할 수 있다. DNN은 입력층(input layer)와 출력층(output layer) 사이에 하나 이상의 은닉층(hidden layer)이 위치하는 인공 지능 모델이다. 인공 지능 엔진은 도 9에서 군집화된 하나 이상의 군집을 입력층을 통해 입력받아, 이를 하나 이상의 은닉 층에 통과시킨 후에, 출력층을 통해 어드레스 매핑 정보에 대응하는 값을 출력할 수 있다. 이때, 각 은닉층의 노드는, 서로 다른 입력 노드에서 입력된 값에 대해 서로 다른 가중치를 적용하여 계산된 값을 다음 층으로 출 력할 수 있다. 도 11은 본 발명의 실시예들에 따른 메모리 시스템이 어드레스 매핑 정보를 리매핑하는 동작의 일 예를 나 타낸 흐름도이다. 도 11을 참조하면, 메모리 시스템은 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보 (AM1)인 상태에서 동작을 시작할 수 있다(S1110). 그리고 메모리 시스템의 메모리 컨트롤러는 타깃 장치에 대한 입출력 성능 패턴인 제1 입출력 성능 패턴(IOP1)을 모니터링할 수 있다(S1120). 그리고 메모리 시스템의 메모리 컨트롤러는 제1 입출력 성능 패턴에 대한 정보를 인공 지능 엔진 에 입력하고, 인공 지능 엔진이 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보(AM2)를 임시로 저장할 수 있다(S1130). 이때, 타깃 장치에 대응하는 어드레스 매핑 정보는 아직 제2 어드레스 매핑 정보(AM2) 로 리매핑되기 전이다. 따라서, 타깃 장치는 아직 어드레스 매핑 정보가 제1 어드레스 매핑 정보(AM1)인 상태에 서 동작한다. 메모리 컨트롤러는 타깃 장치에 대한 어드레스 매핑 정보를 즉시 제2 어드레스 매핑 정보로 리매핑하는 대 신에, 특정한 시점 이후에 타깃 장치에 대한 어드레스 매핑 정보를 즉시 제2 어드레스 매핑 정보로 리매핑할 수 있다. 이는 어드레스 매핑 정보가 갑자기 리매핑되어서 타깃 장치를 액세스하는 과정에서 발생할 수 있는 충돌 을 방지하기 위해서이다. 이후, 메모리 시스템은 파워 오프되거나 또는 유휴 상태로 진입할 수 있다(S1140). S1140 단계 이후, 메모리 시스템은 부팅되거나(S1140 단계에서 파워 오프된 경우) 또는 유휴 상태에서 깨 어날 수(S1140 단계에서 유휴 상태에 진입한 경우) 있다(S1150). 메모리 시스템의 메모리 컨트롤러는 S1150 단계 이후, 워킹 메모리 또는 메모리 장치에 대 응하는 어드레스 매핑 정보를 S1130 단계에서 임시로 저장된 제2 어드레스 매핑 정보로 리매핑할 수 있다 (S1160). 이상에서, 메모리 시스템이 어드레스 매핑 정보를 리매핑하는 동작에 대해 설명하였다. 이하, 메모리 시스 템이 어드레스 매핑 정보가 리매핑된 이후의 타깃 장치의 입출력 성능 패턴을 기초로 하여 인공 지능 모델 을 학습하는 동작에 대해 설명한다. 도 12는 본 발명의 실시예들에 따른 메모리 시스템이 인공 지능 엔진을 학습하는 동작을 나타낸 흐름 도이다. 도 12를 참조하면, 메모리 시스템의 메모리 컨트롤러는 타깃 장치에 대응하는 어드레스 매핑 정보가 제2 어드레스 매핑 정보(AM2)인 상태에서 동작할 수 있다(S1210). 이후, 메모리 컨트롤러는 타깃 장치에 대한 입출력 성능 패턴인 제2 입출력 성능 패턴을 모니터링할 수 있 다(S1220). 그리고, 메모리 컨트롤러는 제2 입출력 성능 패턴을 기초로, 인공 지능 엔진이 사용하는 인공 지능 모델에 대한 학습을 실행할 수 있다(S1230). 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보(AM1)에서 제2 어드레스 매핑 정보(AM2)로 리매핑되었을 때, 타깃 장치의 입출력 성능이 항상 개선된다고 볼 수는 없다. 따라서, 메모리 컨트롤러는 제1 입출력 성능 패턴과 제2 입출력 성능 패턴을 비교하여, 타깃 장치의 입출력 성능의 개선 정도를 판단할 수 있다. 그리고 메모리 컨트롤러는 인공 지능 엔진이 타깃 장치의 입출력 성능을 최소화할 수 있는 어 드레스 매핑 정보를 출력할 수 있도록 하기 위해 인공 지능 엔진이 사용하는 인공 지능 모델을 학습할 수 있다. 이때, 인공 지능 모델을 학습하기 위하여 사용하는 방법은 전술한 일반적인 인공 지능 모델의 학습 방법 (e.g. 경사 하강법(gradient descent), 역전파(back propagation))일 수 있다. 일 예로, 메모리 컨트롤러는 어드레스 매핑 정보가 리매핑되기 전의 입출력 성능 패턴인 제1 입출력 성능 패턴과, 어드레스 매핑 정보가 리매핑된 후의 입출력 성능 패턴인 제2 입출력 성능 패턴을 비교하여 입출력 성 능의 개선 정도를 판단할 수 있다. 그리고, 입출력 성능의 개선 정도에 따라서 인공 지능 엔진이 사용하는 인공 지능 모델(e.g. DNN)에 사용되는 가중치 값을 변경할 수 있다. 도 13은 본 발명의 실시예들에 따른 메모리 시스템의 동작 방법을 나타낸 도면이다. 도 13을 참조하면, 메모리 시스템의 동작 방법은 특정한 어드레스에 대응하는 데이터를 입출력할 수 있는 타깃 장치에 대응하는 어드레스 매핑 정보가 제1 어드레스 매핑 정보인 상태에서, 타깃 장치에 대한 입출력 성 능 패턴인 제1 입출력 성능 패턴(AM1)을 모니터링하는 단계(S1310)를 포함할 수 있다. 이때, 어드레스 매핑 정보는, 일 예로 타깃 장치가 워킹 메모리일 때, 칩 셀렉트(chip select) 매핑 정보, 행(row) 매핑 정보, 열(column) 매핑 정보, 뱅크(bank) 매핑 정보 및 뱅크 그룹(bank group) 매핑 정보를 포함 할 수 있다. 어드레스 매핑 정보는, 다른 예로 타깃 장치가 메모리 장치일 때, 칩 인에이블(chip enable) 매핑 정보를 포함할 수 있다. 그리고 메모리 시스템의 동작 방법은 S1310 단계에서 모니터링한 제1 입출력 성능 패턴을 인공 지능 엔진 에 입력하는 단계(S1320)를 포함할 수 있다. 이때, 인공 지능 엔진은 타깃 장치의 입출력 성능 패턴 을 입력받고, 입력받은 입출력 성능 패턴을 설정된 인공 지능 모델을 기초로 분석하여 타깃 장치에 대한 어드레 스 매핑 정보를 출력할 수 있다. 일 예로, 인공 지능 엔진은, 입력된 제1 입출력 성능 패턴(AM1)에 포함된 정보를, 인공 지능 엔진에 의해 유저 데이터 군집, 가비지 컬렉션 데이터 군집, 펌웨어 코드 군집 및 맵 데이터 군집 중 적어도 하나 이상의 군 집으로 군집화할 수 있다. 그리고 메모리 시스템의 동작 방법은 인공 지능 엔진이 출력한 어드레스 매핑 정보인 제2 어드레스 매핑 정보를, 타깃 장치에 대응하는 어드레스 매핑 정보로 리매핑하는 단계(S1330)를 포함할 수 있다. 이때, 어드레스 매핑 정보는, 일 예로, 메모리 시스템이 부팅되는 시점 또는 유휴 상태에서 깨어나는 시점 에서 제2 어드레스 매핑 정보로 리매핑될 수 있다. 한편, 메모리 시스템의 동작 방법은, 타깃 장치에 대응하는 어드레스 매핑 정보가 제2 어드레스 매핑 정보 (AM2)로 리매핑된 후에 타깃 장치에 대한 입출력 성능 패턴인 제2 입출력 성능 패턴을 모니터링하는 단계 및 제 2 입출력 성능 패턴을 제1 입출력 성능 패턴과 비교하여, 인공 지능 엔진이 타깃 장치에 대한 데이터 입출 력 시의 레이턴시를 최소화할 수 있는 어드레스 매핑 정보를 출력하도록 하기 위해, 인공 지능 엔진이 사 용하는 인공 지능 모델에 대한 학습을 실행하는 단계를 추가로 포함할 수 있다. 한편, 이상에서 설명한 메모리 컨트롤러의 동작은 제어 회로에 의해 제어될 수 있으며, 프로세서 가 메모리 컨트롤러의 제반 동작이 프로그램된 펌웨어를 실행(구동)하는 방식으로 수행될 수 있다. 도 14은 본 발명의 실시예들에 따른 컴퓨팅 시스템의 구성도이다. 도 14을 참조하면, 본 발명의 실시예들에 따른 컴퓨팅 시스템은 시스템 버스에 전기적으로 연결되 는 메모리 시스템, 컴퓨팅 시스템의 전반적인 동작을 제어하는 중앙처리장치(CPU, 1410), 컴퓨팅 시스템의 동작과 관련한 데이터 및 정보를 저장하는 램(RAM, 1420), 사용자에게 사용 환경을 제공하기 위한 UI/UX (User Interface/User Experience) 모듈, 외부 장치와 유선 및/또는 무선 방식으로 통신하기 위한 통신 모듈, 컴퓨팅 시스템이 사용하는 파워를 관리하는 파워 관리 모듈 등을 포함할 수 있다. 컴퓨팅 시스템은 PC(Personal Computer)이거나, 스마트 폰, 태블릿 등의 모바일 단말, 또는 각종 전자 기 기 등을 포함할 수 있다. 컴퓨팅 시스템은, 동작 전압을 공급하기 위한 배터리를 더 포함할 수 있으며, 응용 칩셋(Application Chipset), 그래픽 관련 모듈, 카메라 이미지 프로세서(Camera Image Processor), 디램 등을 더 포함할 수도 있 다. 이외에도, 이 분야의 통상적인 지식을 습득한 자들에게 자명하다. 한편, 메모리 시스템은, 하드 디스크 드라이브(HDD: Hard Disk Drive)와 같이 자기 디스크에 데이터를 저 장하는 장치뿐 아니라, 솔리드 스테이트 드라이브(SSD: Solid State Drive), UFS(Universal Flash Storage) 장 치, eMMC(embedded MMC) 장치 등과 같이 비휘발성 메모리에 데이터를 저장하는 장치 등을 포함할 수 있다. 비휘 발성 메모리는 ROM(Read Only Memory), PROM(Programmable ROM), EPROM (Electrically Programmable ROM), EEPROM(Electrically Erasable and Programmable ROM), 플래시 메모리, PRAM(Phase-change RAM), MRAM(Magnetic RAM), RRAM(Resistive RAM), FRAM(Ferroelectric RAM) 등을 포함할 수 있다. 이뿐만 아니라, 메 모리 시스템은 다양한 형태의 저장 장치로 구현되어, 다양한 전자 기기 내에 탑재될 수 있다. 이상의 설명은 본 발명의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 발명이 속하는 기술 분야에 서 통상의 지식을 가진 자라면 본 발명의 본질적인 특성에서 벗어나지 않는 범위에서 다양한 수정 및 변형이 가 능할 것이다. 또한, 본 발명에 개시된 실시예들은 본 발명의 기술 사상을 한정하기 위한 것이 아니라 설명하기 위한 것이므로 이러한 실시예에 의하여 본 발명의 기술 사상의 범위가 한정되는 것은 아니다. 본 발명의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기술 사상은 본 발명의 권리 범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2020-0149026", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 구성도이다. 도 2는 본 발명의 실시예들에 따른 메모리 장치를 개략적으로 나타낸 블록도다. 도 3은 본 발명의 실시예들에 따른 메모리 장치의 워드 라인 및 비트 라인의 구조를 나타낸 도면이다. 도 4는 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 구조를 나타낸 도면이다. 도 5는 본 발명의 실시예들에 따른 메모리 시스템의 개략적인 동작을 나타낸 도면이다. 도 6은 본 발명의 실시예들에 따른 어드레스 매핑 정보의 일 예를 나타낸 도면이다. 도 7은 본 발명의 실시예들에 따른 워킹 메모리의 동작의 일 예를 나타낸 도면이다. 도 8은 본 발명의 실시예들에 따른 인공 지능 엔진의 개략적인 동작을 나타낸 도면이다. 도 9는 본 발명의 실시예들에 따른 인공 지능 엔진이 성능 패턴에 대한 정보를 군집화하는 일 예를 나타낸 도면 이다. 도 10은 본 발명의 실시예들에 따른 인공 지능 엔진이 사용하는 모델의 일 예를 나타낸 도면이다. 도 11은 본 발명의 실시예들에 따른 메모리 시스템이 어드레스 매핑 정보를 리매핑하는 동작의 일 예를 나타낸 흐름도이다. 도 12는 본 발명의 실시예들에 따른 메모리 시스템이 인공 지능 엔진을 학습하는 동작을 나타낸 흐름도이다. 도 13은 본 발명의 실시예들에 따른 메모리 시스템의 동작 방법을 나타낸 도면이다. 도 14는 본 발명의 실시예들에 따른 컴퓨팅 시스템의 구성도이다."}
