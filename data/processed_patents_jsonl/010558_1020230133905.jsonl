{"patent_id": "10-2023-0133905", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0051034", "출원번호": "10-2023-0133905", "발명의 명칭": "객체인식기반의 전력저감 컴퓨터 및 그 제어방법", "출원인": "(주)대우루컴즈", "발명자": "박대우"}}
{"patent_id": "10-2023-0133905", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "CPU와 메모리의 사용량을 측정하는 'CPU/메모리 사용량 측정모듈'; 모니터에 디스플레이되는 화면 이미지를 이미지 형식의 파일 포맷으로 캡처하는 '화면캡처모듈'; 화면 캡처 프로그램에서 캡처된 화면 캡처 이미지를 소정 사이즈로 줄이는 '전처리부'; 전처리부에서 변환된 화면 캡처 이미지를 딥러닝 모델로 분석하는 '분석모듈'; 실행중인 작업의 작업종류를 판단하는 '작업종류 판단모듈'; CPU/메모리 사용량 측정모듈로부터 CPU 사용량 데이터와 메모리 사용량 데이터를 수신하여 평균 CPU 사용량 평균 메모리 사용량을 산출하는 '평균사용량 산출모듈'; 및인공지능모듈로부터 수신되는 작업종류를 기반으로 기설정된 코어파킹 기준 테이블과 비교하여 활성화시킬 코어수를 결정하는 '코어수 판단모듈'; 을 포함하는 것을 특징으로 하는 객체인식기반의 전력저감 컴퓨터."}
{"patent_id": "10-2023-0133905", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 코어수 판단모듈에서 결정된 코어 수에 따라 활성화되는 CPU 코어 수와 함께 CPU 클럭을 조정하도록 하는 '코어수 제어모듈'; 를 더 포함하는 것을 특징으로 하는 객체인식기반의 전력저감 컴퓨터."}
{"patent_id": "10-2023-0133905", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항의 객체인식기반의 전력저감 컴퓨터의 제어 방법으로서,(a) 사용자의 컴퓨터 정보 및 모니터 정보를 읽어서(S11), CPU 사용량을 측정하는 단계(S12); (b) 상기 (a) 단계 이후, 사용자의 화면을 캡처하는 함수를 만들어 일정 주기가 지나면 화면캡처를 수행할 수있게끔 구성함으로써, 화면 캡처를 진행하는 단계(S13); (c) 상기 (b) 단계 이후, 화면을 모델 인풋에 맞게끔 resize를 진행할 수 있는 함수를 구성하여, 캡처된 화면의리사이즈를 진행하게 되는 단계(S14); (d) 상기 (c) 단계 이후, resize된 화면은 모델의 입력단으로 들어가게 되며, 모델의 아웃풋은 각 객체의 label과 좌표값을 추출(inference)하게 되며(S15), 전처리된 화면 이미지는 학습된 객체인식모델(MobileNet-SSD) 모델을 활용하여 분석이 시행되고, 화면 분석 결과 현재 사용자 화면에서 작업의 수와, 어떤 작업을 하고 있는지에 대한 정보를 획득하게 되는 단계(S16); 및 (h) 상기 (d) 단계 이후, 인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를바탕으로 CPU 클럭을 조정하는 단계(S20); 를 포함하는 것을 특징으로 하는 객체인식기반의 전력저감 컴퓨터의 제어 방법."}
{"patent_id": "10-2023-0133905", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 3 항에 있어서, (e) 상기 (d) 단계 이후, 평균 CPU 사용량 값을 산출하는 단계(S17); (f) 상기 (e) 단계 이후, 평균 CPU 사용량이 일정치 이상인가? 여부를 판단하는 단계(S18); 및 공개특허 10-2025-0051034-3-(g) 상기 (f) 단계에서의 판단 결과, 평균 CPU 사용량이 상기 일정치 이상이면 CPU 최대 주파수 값을 최대로 유지하고(S19), 상기 (b) 단계로 리턴하며, 반면 평균 CPU 사용량이 상기 일정치 미만인 경우에만, 상기 (h) 단계로 진행하는 단계; 를 더 포함하는 것을 특징으로 하는 객체인식기반의 전력저감 컴퓨터의 제어 방법."}
{"patent_id": "10-2023-0133905", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 3 항 또는 제 4 항에 있어서, 상기 (h) 단계는, (h1) 인공지능모듈로부터 수신되는 작업종류를 기반으로 기설정된 코어파킹 기준 테이블과 비교하여 활성화시킬코어 수를 결정하는 단계(S21)와, (h2) 상기 (h1) 단계 이후, 인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를 바탕으로 Max-frequency를 조정하게 되는 단계(S22)와, (h3) 상기 (h2) 단계 이후, 각 코어의 클럭을 미세 조절함으로써(S23), 더욱 절전을 행하게 되는 단계로 이루어지는 것을 특징으로 하는 객체인식기반의 전력저감 컴퓨터의 제어 방법."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은, 컴퓨터 CPU 클럭을 제어하여 절전을 행함으로써 전체 컴퓨터 시스템에서 소요되는 에너지를 절감하는 기술에 관한 것으로, 특히 인공지능을 이용하여 화면을 캡처한 딥러닝으로 학습된 모델을 이용하여서 적합한 밝 기 단계를 도출하는 객체인식기반의 전력저감 컴퓨터 및 그 제어방법에 관한 것이다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨터 CPU 클럭을 제어하여 절전을 행함으로써 전체 컴퓨터 시스템에서 소요되는 에너지를 절감하는 기술에 관한 것으로, 특히 인공지능을 이용하여 화면을 캡처한 딥러닝으로 학습된 모델을 이용하여서 적합한 CPU 클럭 속도를 제어하여 절전을 행하는 객체인식기반의 전력저감 컴퓨터 및 그 제어방법에 관한 것이다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "종래의 컴퓨터 전원공급장치는, 도 1에서 보는 바와 같이, SMPS와 같은 파워서플라이가 메인보드의 SIO와 24핀으로 연결되어 있으며, 그 중 하나는 +5V의 스탠바이 전압(+5VSB)의 인가용이다. 사용자가 PC 케이스의 파워스위치(미도시됨)를 누르면, 이와 기구적으로 연결된 파워 버튼이 눌려지고, 파 워 버튼이 SIO로 제1 신호(PWRBTN#)를 보내며, 다시 SIO는 파워서플라이로 파워온 신호선 (PSON#)을 활성화하며, 칩셋으로는 제2 신호(PWRBTN#_SB)를 발하는바, 파워서플라이는 CPU 및 칩 셋으로 파워굳 신호(PWROK) 신호를 보내서 이를 알리며, 이후 메인 보드로 파워가 공급되도록 한다. 미설명 부호 15는 칩셋의 리셋 버튼이며, 16은 배터리이고, 17은 리쥼 리셋이며, 18은 LAN이다. 그외에도, CPU 및 칩셋과 연결된 AC, FWH, 슈퍼IO, AGP 슬롯, PCI 슬롯, IDE 등이 접속되어 있다. 한편, 전술한 바와 같이, 파워서플라이와 메인보드 간에는 비작동시에도 +5V의 대기전력이 인가되는바, 시 동 버튼의 인식 및 원격시동의 인식 등을 위해 약 1W의 대기전력을 필요로 한다. 그리고, 이는 개별적으로는 결코 높지 않은 소비전력이나, 일 기관 전체로는, 나아가 일 국가 전체로는 막대한 에너지의 낭비로 이어지게 된다. 이러한 문제점을 해결하기 위하여, 전원 콘센트 자체에서 전원을 완전 차단하여 대기전력을 제로로 만드는 스위 치를 갖는 콘센트가 개발돼 있는가 하면 (제1 종래기술), 한편으로는 대한민국 특허공개 제2013-0043923호 (전 원공급장치 및 그를 포함하는 화상형성장치) 와 같이, 파워 스위치의 온/오프를 인식하여 전원을 완전 차단하기 위한 별도의 추가적인 복잡한 장치를 제안하기도 한다(제2 종래기술). 그러나, 상기 제1 종래기술의 경우, 그럼에도 불구하고 현실적으로 여러가지 이유로, 사용자가 콘센트의 전원 완전 차단 스위치를 오프하지 않고 자리를 뜨는 경우가 대부분이며, 제2 종래기술의 경우, 대단히 복잡하고 고 비용의 별도의 장치를 추가하여야 하므로, 이러한 장치를 일반 PC에 장착하기가 주저되는 것이 사실이다. 한편, 아주 단순하면서도 자동으로 대기전력을 최소화한 컴퓨터 전원공급장치를 제공하기 위한 것으로, 대한민 국 특허 제1328393호 (명칭: 대기전력이 절감되는 컴퓨터 전원공급장치) 가 개시되어 있는바, 이를 제3 종래기 술로서 설명한다.상기 제3 종래기술은, 도 2에서 보듯이, CPU, SIO, 파워 버튼, 칩셋, 리셋 버튼, 제1 배 터리, LAN 및 슈퍼IO를 갖는 메인 보드; 상기 메인 보드에 전원을 공급하는 SMPS; 상기 SMPS의 대기전력 공급을 제어하는 마이컴; 상기 메인보드와 SMPS 간의 신호 및 대기전력 커넥팅을 매개하는 파워 커넥터; 및 상기 마이컴의 제어에 따라 대기전력 온/오프를 스위칭하는 스위칭부; 를 포함하여 이 루어지며, 상기 마이컴은 파워 전원의 대기전력(5VSB)을 상기 스위칭부에 의해 제어함으로써, 메인보드 에 공급되는 대기전원을 통제하는 것을 특징으로 한다. 즉, 상기 제3 종래기술의 전원공급장치는, 도 2에서 보는 바와 같이, 기존의 CPU, SIO, 파워 버튼, 칩셋, 리셋 버튼, 배터리, 리쥼 리셋, LAN, 슈퍼IO 등을 갖는 메인 보드와, 상기 메인 보드에 전원을 공급하는 SMPS, SMPS의 대기전력 공급을 제어하는 마이컴 및 마이컴의 제어에 따라 대기전력 온/오프를 스위칭하는 스위칭부를 포함하여 이루어진다. 미설명부호 '50'은 PC 케이스의 파워스위 치이며, '60'은 메인보드와 SMPS 간의 파워 커넥터이다. 상기 제3 종래기술에서는, 파워 커넥터가 메인보드와 SMPS 간의 신호 및 대기전력 커넥팅을 매개하 는바, SMPS와 상기 파워 커넥터와는 23개 핀으로 접속되어지고, 대신 하나의 핀인 +5V 대기전력선(+5VSB)은 파워 커넥터 대신 마이컴 및 스위칭부와 접속되어 진다는 점이 도 1의 종래의 전원공급장치와 상이하다. 상기 스위칭부는, 파워스위치용 IC이거나, FET 회로로 이루어질 수 있다. 이외에도, 마이컴은, SMPS로부터 SMPS굳 신호(PS_ON#) 혹은 파워굳 신호(PWR_ON) 중의 어느 하나 혹은 양자 모두의 신호를 SMPS로부터 수신받는다. 상기 파워굳 신호(PWR_ON)는 CPU 및 칩셋으로도 인가 된다. 한편, 상기 마이컴은 또한, 외부의 케이스 파워 스위치로부터의 스위칭 신호(CASE_PWR_BTN)에 의해 대 기전력 공급 개시 동작을 시작하게 되며, 이에 따라 +5V의 대기전력(+5VSB)을 상기 스위칭부를 통해 5V 대 기신호(P5V_STBY)로서 메인 보드로 인가하게 되는바, 상기 스위칭부는 상기 마이컴의 제어신호 (5VSB_SW)가 '온'일 경우에, 상기 SMPS로부터의 +5V 대기전력(+5VSB)을 5V 대기신호(P5V_STBY)로서 메인 보드로 인가하게 된다. SMPS 파워 커넥터로부터 메인보드 파워 커넥터로 PC 정상동작 전력 +12V 및 -12V 라인, +5V 대기전력선 및 +3.3V 전력선, 그리고 파워굳(PWR_ON) 신호가 간다. 다만, 5V 대기전력선(5VSB)은, 스위칭 장치로 가며, 다시 스위칭 장치에서 메인보드 파워 커넥터로 대기전력 신호(P5V_STBY)가 간다. 더욱이, 마이컴으로부터 스위칭부로 대기전원 스위치 신호(5VSB_SW)가, 그리고 메인 파워 버튼으로 파워 버튼 신호(MB_PWR_BTN)가 간다. 역으로, 메인보드 파워 커넥터로부터 SMPS 파워 커넥터로 SMPS굳(PS_ON#) 신호가 간다. 이들 동작을 더 상세히 설명하면, 먼저, 상기 제3 종래기술의 마이컴은 파워 전원의 대기전력(5VSB)을 상기 스위칭부에 의해 제어함으로써, 메인보드에 공급되는 전원을 통제하는데, 보통 전원이 오프되는 것은 커넥 터 간의 오가는 파워굳(PWR_ON) 및/또는 SMPS굳(PS_ON#) 신호를 마이컴에서 감지하여, 전원이 오프일 경우에는 5V 대기전원을 오프해 주면 된다. 즉, 이 경우, 메인보드에 대기전력이 공급되지 않기 때문에, 컴퓨터의 전원을 켤 수 없는 것이다. 한편, PC 사용자가 케이스 파워 스위치를 누르면, 이 신호에 의해 상기 제3 종래기술의 마이컴이 활성 화되며, 마이컴은 커넥터 간의 오가는 파워굳(PWR_ON) 및/또는 SMPS굳(PS_ON#) 신호를 감지하여, 전원이 온일 경우에는 스위칭부로의 제어신호(5VSB_SW)를 턴온하여, 5V 대기전원(5VSB)이 메인보드로 인가되도록 하는 것이다. 아울러, 메인보드의 파워 버튼이 온되면, SIO로 입출력 개시명령이 하달되고, SIO는 파워 커넥터를 통해 SMPS로 파워서플라이굳(PS_ON#)을 발하는바, SMPS는 상황이 정상일 경우, 파워굳 (PWR_ON) 신호를 역시 커넥터를 통해 메인보드로 전달하면서, 메인보드 동작전원(+12V)를 활성화하는 것이다. 따라서, 상기 제3 종래기술에 의하면, 컴퓨터 기동 시스템의 대기전력에 해당하는 1W의 대기전력을 소비하지 않 고, 마이컴의 대기전력에 해당하는 0.1W 정도의 대기전력만으로 스탠바이 및 컴퓨터 기동이 가능해 진다는 장점 이 있다. 그런데, 시스템 전원 '온' 및 '오프' 상태만을 갖는 종래의 시스템과 달리, 최근의 PC들은 S1 내지 S5 모드를 채택하여, 다양하게 세분화된 모드를 채택하고 그에 따라 속도와 자원 활용도를 높인 가장 효율적인 시스템 동작을 하게 된다. 참고로, S0 모드는 컴퓨터 동작 모드이고, S1 모드는 프로세서가 아이들(idle) 상태로서 저전 력 공급 상태이나 여전히 램에 전원이 공급되어야 하는 상태이고, S2 모드는 프로세서가 딥슬립(deep sleep)모 드로서 그러나 여전히 램에 전원이 공급되는 상태이며, S3모드 (절전/대기모드)의 경우는 데이터를 메모리에 저 장하고 최소 전원을 유지하는 방식이기 때문에 이 경우에도 여전히 +5V SB를 OFF하면 안 된다. 이때 DDR 메모리 의 타입에 따라 조금씩 다르게 출력되지만 VDD 전원이 1.2~1.5V가 계속 유지되는바, 이때에는 메모리와 RTC등 일부에만 전원이 공급된다. 반면, S4 모드 (최대절전모드) 에서는 데이터를 하드디스크에 저장하고 시스템의 모 든 전원을 끈다. 즉, 전원 OFF와 거의 동일한 상태가 된다. 이때에는 메모리의 VDD 전원은 전원 OFF 때와 같이 0V 출력된다. 따라서, VDD 신호 하나로 대기전력 차단과 관련한 체크가 가능하게 되는 것인바, 다시 정리하자면, 시스템 대기전력을 OFF 조건인 전원 OFF 및 S4 모드의 경우에는 VDD 신호는 0V이고, 대기전력 ON 조건인 시스템 동작(전원 ON 상태) 및 S3(절전/대기 모드)의 경우에는, VDD 신호는 1.2~1.5V 를 출력하게 된다. 따라서, 이와 같은 최근의 S0~S5 모드를 갖는 시스템의 경우에는, 상기 제3 종래기술의 경우에도, 이러한 대기 전력을 차단하기 위해서는 전원의 상태를 모두 확인할 필요가 있는데, 종래의 방법으로는 1) SMPS 내부에 인가 되는 전류를 측정하거나, 2) '파워굳' 등의 몇 가지 신호를 더 확인하여 체크하였는데, 1) 전류를 체크하는 경 우 고가의 ADC(Analog to Digital Converter) 및 주변회로가 필요하여 대기전력 1W를 줄이는 비용대비 효용가치 가 없으며, 2) 또한 '파워굳' 등의 신호를 통하여 체크하는 경우 하나의 신호로 모든 전원을 확인할 수 없기 때 문에 여러 신호를 입력받고 전원상태를 체크하기 위하여 복잡한 구조를 가지고 있어 생산 효율성이 떨어진다는 문제점이 발생한다. 한편, 종래의 일반적인 파워온 동작에 대하여, 도 3 내지 도 7을 참조하여 설명한다. 도 3은 종래의 일반적인 파워온 동작의 개념을 설명하는 도면인바, 종래는 도 3에서 보는 바와 같이, 전원 버튼 이 '온'되면, 수퍼IO 내의 PS_ON 회로(19a)가 이를 인식하고, 칩셋의 사우스브릿지와 통신하면서, 메인 보드의 SIO의 20핀짜리 커넥터의 PS_ON# 단자를 활성화시켜 메인보드로 파워가 인가되도록 한다. 이상의 도 3의 PS_ON 회로(19a)의 블록도의 일예가, 도 4에 상세히 도시되어 있다. 즉, 도 4에서, 전원 버튼에 해당하는 스위치(S1)가 눌려지면, '로우' 레벨로 떨어지면서, PS_ON 회로(19a)가 활성화되는바, 각종 전압이 SMPS로부터 메인 보드로 인가된다(도 5의 타이밍챠트 참조). 다른 한편, 도 6은 종래의 일반적인 파워온 동작의 개념을 설명하는 또다른 예의 도면인바, 역시 전원'온' 스위 칭(PWR)이 행해지면, 칩셋이 P.ON 신호를 SIO로 출력하고, 다시 SIO는 P.ON 신호를 메인보드의 커 넥터의 PS_ON# 단자로 출력하여, 전원이 SMPS로부터 메인보드로 인가되도록 한다. 도 7은 도 6의 각 신호들의 타이밍 챠트인바, VAC가 활성화(AC 전원이 인가)되면, PS_ON# 신호가 '로우' 레벨로 떨어지면서 활성화되고, 각종 전압이 SMPS로부터 메인보드로 인가되면서, 파워굳 신호로 응답하게 된다. 즉, 종래는 도 6에서와 같이, PS_ON# 신호(SMPS 전원 On)도, +5V SB신호를 먼저 On한 후, 메인보드의 전원 '온' 스위치 단에 연결하여 사우스브리지와 Super I/O 칩셋을 통하여 SMPS에 PS_ON#신호를 발생하여, 케이블의 연결 이나 개조 작업성이 좋지 않아, 결국 생산성이 낮았다. 다른 한편, 이상의 문제점을 해결하고자, 다양한 동작 모드를 갖는 컴퓨터 시스템에서도, 아주 단순하면서도 자 동으로 대기전력을 최소화한 컴퓨터 전원공급장치를 제공하기 위하여, 도 8 내지 도 10에서 보는 바와 같은 대 기전력이 절감되는 컴퓨터 전원공급장치가 특허 제1623756호로 개시되어 있다. 이를 도 2 및 도 8 내지 도 10을 참조하여 설명한다. 도 8은 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 블록도이고, 도 9는 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 상세 회로도이며, 도 10은 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 마이컴의 동작흐름도이다. 먼저, 제4 종래기술의 발명을 도 8의 블록도로 개략적으로 설명하면, 먼저 PC 전원이 '온'인지를 감지하고, 이에 연동하여 SMPS에서 메인보드로 가는 ATX 파워 케이블의 PS_ON# 신호를 '로우' 레벨로 활성화하여, 5V SB 라인을 제외한 라인이 메인보드로 가도록 한다. 이때, 5V SB 라인은 메인보드로 직접 가지 않고, 마이컴 및 제1 스위칭부 등에 Vcc를 제공하며, 이들을 활성화하는바, 이에 따라 파워컨트롤 신호(PWR_CTRL)를 활성 화하여 상기 제1 스위칭부로 출력하고, 이에 응하여 상기 제1 스위칭부는 파워 출력 신호(PWR_OUT)를 메인보드의 5V SB 단자로 보냄으로써, 메인보드로 모든 전원공급이 되면서 메인보드를 동작시키게 된다. 이때, 상기 마이컴은, PS_ON# 신호를 SMPS에 인가하여 SMPS를 턴온시키고 이에 응하여 상기 신호 및 이 에 연동된 공통접지 신호가 SMPS로부터 메인보드로 ATX 케이블을 통해 다른 신호 및 전원이 인가되도록 함 으로서 메인보드를 동작시킬 수도 있으나, 도 8에서와 같이, 상기 마이컴이 SMPS를 경유하지 않고 제2 스위 칭부를 통하여, PS_ON# 신호를 직접 메인보드로 인가하되, 메인보드의 파워 버튼 -> PS_ON 회로(19a) -> 파워커넥터의 PS_ON# 단자로 인가하는 것도 가능하다. 이들 회로를, 도 9를 참조하여 더 상세히 기술하면, 마이컴의 스위칭입력(SW_IN) 단자(칩의 16번 핀)를 통 하여, PC 전원 '온' 스위치의 온/오프 상태를 감지하게 된다. 이후, 마이컴은, 공통 접지 단자를 활성화 ('하이'에서 '로우'로 감) 하여, 5V, 3.3V, 12V, 파워 굳 (PWR_OK) 신호 라인 등이 모두 메인 보드의 단자로 가도록 활성화하여, 각종 파워가 SMPS로부터 메인보드로 인 가되도록 한다. 아울러, PS_ON# 단자(칩의 2번 핀)를 통해 PS_ON# 신호를 SMPS로 출력하고 ATX 파워 케이블 을 통해 메인보드의 파워 커넥터의 해당 단자로 연결되도록 할 수도 있고, 혹은 도 9에서와 같이, 마이 컴의 일례로 5번 단자를 통해 SW_OUT 신호를 제2 스위칭부로 출력하고, 상기 스위칭 신호가 메인 보드 내의 파워 버튼# 을 통해 슈퍼IO의 PS_ON 회로(19a)를 활성화함으로써, 결국 파워 커넥터의 해당 단자로 연결되도록 할 수도 있다. 한편, 전원 제어 시그널(PWR_CTRL)은 마이컴의 14번 핀을 통해 출력되어, 스위칭부의 제1 및 제3 트랜 지스터(Q1, Q3)를 활성화하여, 파워 출력(PWR_OUT) 신호를 메인보드의 커넥터의 5V 스탠바이 신호 단자로 출력한다. 이는 최종적으로, 메모리의 기능을 포함하는 메인 보드(컴퓨터)가 동작함을 의미한다. 마지막으로, 메인보드의 메모리(일례로 DDR3)로 공급되는 전압은, 감지부의 제4 트랜지스터(Q4)에 의해 감지되는바, 그 결과는 파워굳(GD_PWR) 단자(마이컴 칩의 15번 핀)를 통해 마이컴으로 알려진다. 이상의 제4 종래기술의 마이컴의 동작을 도 10을 참조하여 다시 한번 상술한다. 먼저, 상기 제4 종래기술에서의 마이컴은 시스템 대기 전원이 오프 상태인 경우에 (AC 전원이 입력되지 않 는 상태에서) 진행되는바, 먼저 시스템 대기 전원이 오프 상태인가? 여부를 판단하며(S1), 그러한 경우에 PC 전 원 스위치가 '온'인가? (컴퓨터 전원 스위치가 켜져 있는가?) 여부를 판단하는바(S2), 만약 그렇지 않으면 일정 시간 지연 후 피드백하여 계속해서 체크하며, '예스'인 경우에는, 다음 단계로 진행하여, 파워컨트롤 신호 (PWR_CTRL)를 활성화하여 상기 스위칭부로 출력하고, 이에 응하여 상기 스위칭부는 파워 출력 신호 (PWR_OUT)를 메인보드의 5V SB 단자로 보냄으로써, 메인보드로 모든 전원공급이 되게 하면서(S3), 동시에 파워 버튼#을 활성화하고 PS_ON# 신호를 활성화하여, 메인보드를 동작시키게 된다(S4'). 즉, 마이컴이 PC 전원 스위치가 '온'이라는 신호를 받고, 제1 스위칭부로의 파워컨트롤 신호(PWR_CTR L)를 활성화하여 상기 제1 스위칭부를 통해 파워 출력 신호(PWR_OUT)를 메인보드의 5V SB 단자로 보냄으로 써, 메인보드로 모든 전원공급이 되게 함과 동시에(S3), 또다른 제2 스위칭부로 스위칭아웃(SW_OUT) 신호를 출력하는바, 이에 상기 제2 스위칭부의 트랜지스터(Q2)가 턴온되고, 상기 메인보드의 파워버튼으로 PS_ON# 신호를 인가하게 되는바, 이에 파워버튼 및 메인보드의 슈퍼I/O의 PS_ON 회로(19a)를 통해, 상 기 커넥터의 PS_ON# 단자를 활성화하여, 결국 메인보드를 동작시키게 된다(S4'). 이후, 메인보드의 메모리(10a)로 공급되는 전압(VDD)을 체크하여(S5), 일정 전압(일례로 0.7V) 미만인지 여부를 판단하여(S6), 이상이면 (이때는 램이 동작 중이므로), 5V SB 전원 '온' 상태를 그대로 유지하여 메인보드로의 파워 공급을 계속하며, 그렇지 않은 경우에는 메모리가 작동을 멈춘 것으로 인식하여, 파워컨트롤 신호 (PWR_CTRL)를 비활성화하여 상기 스위칭부로 출력하고, 이에 응하여 상기 스위칭부는 파워 출력 신호 (PWR_OUT)를 디스에이블시켜 시스템 대기전력을 '오프'시키게 된다(S7). 즉, 상기 종래기술에서 상술한 바와 같이, S3 모드 (절전/대기모드)의 경우는 +5V SB를 OFF하면 안 되며, 반면, S4 모드 (최대절전모드) 에서는 데이터를 하드디스크에 저장하고 시스템의 모든 전원을 끈다. 즉, S4 모드 및 전원 OFF인 S5 모드에서 0V 가 출력된다. 따라서, VDD 신호 하나로 대기전력 차단과 관련한 체크가 가능하게 되 는 것인바, 다시 정리하자면, 시스템 대기전력을 OFF 조건인 전원 OFF 및 S4 모드의 경우에는 VDD 신호는 0V이 고, 대기전력 ON 조건인 시스템 동작(전원 ON 상태) 및 S3(절전/대기 모드)의 경우에는, VDD 신호는 1.2~1.5V 를 출력하게 된다. 따라서, 상기 S5 및 S6 단계에서, 메모리로 공급되는 전압(VDD)을 체크하여(S5), 일정 전압 (Vr: 일예로 0.7V) 미만인지 여부를 판단하여(S6), 그 이상이면 5V SB 전원 '온' 상태를 그대로 유지하며, 그 미만(VDD < Vr)이면, 시스템 대기전력을 '오프'시키는 것이다(S7). 상기 제4 종래기술은, 메모리로 공급되는 전압(VDD)을 체크하는 비교적 간단한 방법으로 S3 및 S4 모드를 인식하 고, 메모리 등의 시스템에 여전히 전원 공급이 필요한 S3 모드에서는 5V 대기 전원을 계속 공급하고, 그렇지 않 은 S4 모드에서는 대기 전원을 차단하여 대시 모드에서의 전력을 절감하는 방법을 제공하되, 그것도 추가적인 케이블 공사를 하지 않고도 행할 수 있다는 장점이 있기는 하다. 그런데, S3(대기/절전모드)에서도 특정 모드 외에는, 사실 5V의 대기전원을 공급할 필요까지는 없고, 3V 정도의 대기 전원만 공급하더라도 충분한바, 상기 제4 종래기술에서는 이에 대한 대비가 없는 실정이다. 또한, 상기 종래기술들은 S3 및 S4 등의 모드 인식이, 메모리와 같이 2차적인 장치에서의 전압으로 체크하였기 때문에, 이를 체크하기 위한 별도의 장치가 필요하고, 아울러 이러한 센싱 전압의 검출 장치로부터 제어용 마이 컴까지의 배선이나 별도의 케이블이 필요하며, 아울러 가능성이 아주 낮기는 하지만 시스템의 에러로 인하여 현 재 모드와 메모리 등의 2차적 장치 간의 불일치의 경우에는 정확한 센싱이 되지 못하다는 문제점이 있었으며, 특히 슬립 모드에서도 메모리 등은 최소한의 전력 공급이 되어야 하는데도 불구하고 이에 대한 대책이 미흡했다. 그리하여, 이러한 문제점을 해결하고자, 본 출원인은 특허 제10-2516672호 (CPU 사용율에 따른 한계값 설정을 통하여 절전을 행하는 에너지 절감형 컴퓨터 시스템 및 그 제어 방법) 을 제5 종래기술로서 제안한 바 있다. 상기 제5 종래기술은, 컴퓨터 메인보드의 현재 CPU의 동작 상태(사용율) 및 최대 프로세서 전류(IccMAX), CPU 온도 등을 파악하여, CPU의 사용율 및/또는 CPU 온도의 상/하한치를 설정하여 두고, 이 범위 내로 동작시킴으로 써, CPU 성능의 저하 없이도 최적으로 절전이 가능하며 나아가 주변장치도 이에 맞추어 절전을 행함으로써, 전 체 컴퓨터 시스템에서 소요되는 에너지를 절감하는 기술에 관한 것으로, 특히 CPU 사용율에 따른 한계값 설정을 통하여 절전을 행하는 에너지 절감형 컴퓨터 시스템 및 그 제어 방법에 관한 것으로, 그 효과가 충분히 발휘되 었다. 그런데, 상기 제5 종래기술에서는 현재 CPU의 사용율 및/또는 CPU 온도의 상/하한치를 최적으로 설정하여야 효 율이 극대화되는바, 상/하한치의 설정이 개인에 따라서 혹은 실행 작업이 몇 개인가에 따라서 달라지는바, 다양 한 사용환경하에서 이러한 설정을 최적으로 행하는 방법이 요구되었다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 특허공개 제2013-0043923호 (특허출원 제2011-0108115호) (특허문헌 0002) 대한민국 특허 제1328393호 (명칭: 대기전력이 절감되는 컴퓨터 전원공급장치) (특허문헌 0003) 대한민국 특허 제1623756호 (명칭: 시스템 메모리 전원을 활용한 대기전력 차단장치의 대기전 력 차단 방법) (특허문헌 0004) 대한민국 특허 제1815239호 (명칭: 스위칭 소자를 이용한 컴퓨터 시스템의 대기전력 최적화 장 치 및 방법) (특허문헌 0005) 대한민국 특허 제2516672호 (CPU 사용율에 따른 한계값 설정을 통하여 절전을 행하는 에너지 절감형 컴퓨터 시스템 및 그 제어 방법)"}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "최근, 컴퓨터의 성능이 점차 높아지고 있지만 불필요한 전력 낭비를 유발하고 있는바, 컴퓨터의 핵심 부품인 중 앙처리장치(CPU)는 컴퓨터의 중요한 부품 중 하나이며 전력 소모량이 매우 크며, CPU는 성능이 크게 향상됨에 따라 사용자는 하나의 컴퓨터 안에서 다양한 업무를 동시에 처리하는 것이 가능해졌지만, CPU 성능에 비례하여 전력 소모량이 더욱더 커지고 있다. 아울러, CPU는 운영중인 프로그램과는 무관하게 항상 최고의 속도로 동작하 게 되는데, 운영 중인 프로그램에 따라 CPU의 연산 속도를 최고 속도로 사용할 필요 없는 경우가 있는바, 예를 들어 워드, 엑셀, 메모장 등 타이핑이 많은 문서 작업, 웹페이지나 간단한 업무, 쇼핑 등과 같은 비교적 가벼운 운행상태일 경우 CPU의 속도를 최고 속도로 동작할 필요가 없는데, 미리 설정된 최고 속도로 운행되므로 불필요 한 전력낭비가 이루어지고 있으며, 반대로 프로그래밍과 같은 고성능이 요구되는 작업의 경우 CPU의 성능을 최고치로 설정이 되어야 할 필요가 있다. 이에, 사용자가 운영중인 작업상태에 따라 그에 맞는 CPU 성능을 제공함으로써 불필요한 전력 감소 및 효율적인 운영에 대한 기술 및 제품의 필요성이 대두되고 있는바, 사용자 프로그램의 사용 패턴을 실시간으로 분석 및 추 출하여, 이를 기반으로 CPU 성능을 조절 가능하도록 하는 기술과, 키보드와 마우스 입력 장치를 이용하여 작업 상태를 판별하고, 프로세스 정보를 로딩하는 등의 여러 기술이 개발 및 적용되고 있음에도 불구하고, 종래기술 들은 대부분 단순한 패턴을 이용하여 구분하고 있으며, 이는 다양하고 복잡해진 작업환경을 반영하지 못하고 있 다는 점에 착안하여, 본 발명은, 다양하고 복잡해진 작업에 대응할 수 있는 기술을 개발하여 사용자에게 적절한 CPU 성능을 제공할 수 있는 기술을 제안하고, 또한 여러 컴퓨터 모델에 적용이 가능한 기술인 객체인식기반의 전력저감 컴퓨터 및 그 제어방법을 제공하기 위한 것이다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기의 목적을 달성하기 위한 본 발명의 일 측면에 따른 객체인식기반의 전력저감 컴퓨터는, CPU와 메모리의 사 용량을 측정하는 'CPU/메모리 사용량 측정모듈'; 모니터에 디스플레이되는 화면 이미지를 이미지 형식의 파일 포맷으로 캡처하는 '화면캡처모듈'; 화면 캡처 프로그램에서 캡처된 화면 캡처 이미지를 소정 사이즈로 줄이는 '전처리부'; 전처리부에서 변환된 화면 캡처 이미지를 딥러닝 모델로 분석하는 '분석모듈'; 실행중인 작업의 (문서 작업, 메일 작업, CAD작업, 인터넷 서핑, 미디어 재생과 같은 작업 중에 어디에 속하는지를 결정하여) 작 업종류를 판단하는 '작업종류 판단모듈'; CPU/메모리 사용량 측정모듈로부터 CPU 사용량 데이터와 메모리 사용 량 데이터를 수신하여 평균 CPU 사용량 평균 메모리 사용량을 산출하는 '평균사용량 산출모듈'; 및 인공지능모 듈로부터 수신되는 작업종류를 기반으로 기설정된 코어파킹 기준 테이블과 비교하여 활성화시킬 코어 수를 결정 하는 '코어수 판단모듈'; 을 포함하는 것을 특징으로 한다. 바람직하게는, 코어수 판단모듈에서 결정된 코어 수에 따라 활성화되는 CPU 코어 수와 함께 CPU 클럭을 조정하 도록 하는 '코어수 제어모듈'; 를 더 포함하는 것을 특징으로 한다. 한편, 상기의 목적을 달성하기 위한 본 발명의 다른 측면에 따른 객체인식기반의 전력저감 컴퓨터의 제어 방법 은, 상기 객체인식기반의 전력저감 컴퓨터의 제어 방법으로서, (a) 사용자의 컴퓨터 정보 및 모니터 정보를 읽 어서(S11), CPU 사용량을 측정하는 단계(S12); (b) 상기 (a) 단계 이후, 사용자의 화면을 캡처하는 함수를 만들 어 일정 주기가 지나면 화면캡처를 수행할 수 있게끔 구성함으로써, 화면 캡처를 진행하는 단계(S13); (c) 상기 (b) 단계 이후, 화면을 모델 인풋에 맞게끔 resize를 진행할 수 있는 함수를 구성하여, 캡처된 화면의 리사이즈 를 진행하게 되는 단계(S14); (d) 상기 (c) 단계 이후, resize된 화면은 모델의 입력단으로 들어가게 되며, 모 델의 아웃풋은 각 객체의 label과 좌표값을 추출(inference)하게 되며(S15), 전처리된 화면 이미지는 학습된 객 체인식모델(MobileNet-SSD) 모델을 활용하여 분석이 시행되고, 화면 분석 결과 현재 사용자 화면에서 작업의 수 와, 어떤 작업을 하고 있는지에 대한 정보를 획득하게 되는 단계(S16); 및 (h) 상기 (d) 단계 이후, 인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를 바탕으로 CPU 클럭을 조정하는 단계 (S20); 를 포함하는 것을 특징으로 한다. 바람직하게는, (e) 상기 (d) 단계 이후, 평균 CPU 사용량 값을 산출하는 단계(S17); (f) 상기 (e) 단계 이후, 평균 CPU 사용량이 일정치 이상인가? 여부를 판단하는 단계(S18); 및 (g) 상기 (f) 단계에서의 판단 결과, 평균 CPU 사용량이 상기 일정치 이상이면 CPU 최대 주파수 값을 최대로 유지하고(S19), 상기 (b) 단계로 리턴하며, 반면 평균 CPU 사용량이 상기 일정치 미만인 경우에만, 상기 (h) 단계로 진행하는 단계; 를 더 포함하는 것을 특징으로 한다. 또한 바람직하게는, 상기 (h) 단계는, (h1) 인공지능모듈로부터 수신되는 작업종류를 기반으로 기설정된 코어파 킹 기준 테이블과 비교하여 활성화시킬 코어 수를 결정하는 단계(S21)와, (h2) 상기 (h1) 단계 이후, 인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를 바탕으로 Max-frequency를 조정하게 되는 단계(S22)와, (h3) 상기 (h2) 단계 이후, 각 코어의 클럭을 미세 조절함으로써(S23), 더욱 절전을 행하게 되는 단계로 이루어지는 것을 특징으로 한다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따른 객체인식기반의 전력저감 컴퓨터 및 그 제어방법에 따르면, 화면을 캡처(Capture)하여 딥러닝 모델을 이용하여 화면을 분석한 후 현재 사용자가 사용하는 작업이 몇 개인지 어떠한 작업을 하고 있는지를 판별한 후에 CPU의 최대 주파수를 조절하는 방법으로서, 인공지능모델 경량화 및객체인식 알고리즘 활용하고, 다양한 패턴의 작업 환경 적용이 가능하며, SW 구현만으로 다양한 컴퓨터 모델에 적용이 가능하다는 장점이 있다. 또한, Background에서 프로세서가 돌고 있을 때에 CPU 사용률이 일정치 (일례로 50%) 이상 넘어가면 제한을 하 지 않도록 구성하여, Background에서 프로세서가 돌고 있을 때에 대한 원활한 처리가 가능하다. 상기 목적 및 효과 외에 본 발명의 다른 목적 및 이점들은 첨부한 도면을 참조한 실시예에 대한 상세한 설명을 통하여 명백하게 드러나게 될 것이다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는, 첨부도면을 참고하여 본 발명에 따른 바람직한 실시예를 상세하게 설명하기로 한다. 도 11은 본 발명의 객체인식기반의 전력저감 컴퓨터의 제어방법의 사전 작업으로서 인공지능 모델 학습의 흐름 도이고, 도 12는, 도 11의 데이터 캡처 및 수집 단계에서 캡처된 모니터 화면의 예이고, 도 13은, 도 11의 데이 터 캡처 및 수집 단계에서 수집된 모니터 화면의 예이고, 도 14는, 도 11의 이미지 리사이즈 단계를 설명하는 도면이고, 도 15는, 도 11의 데이터 분석 및 레이블링 단계에서 레이블링 작업 및 레이블링 데이터의 예이며, 도 16은, 도 11의 딥러닝 모델 학습 평가에서의 손실함수의 그래프이다. 도 17은 본 발명의 객체인식기반의 전력저감 컴퓨터의 제어방법의 전체 흐름도이고, 도 18은, 도 17의 CPU 클럭 조정 단계의 상세 흐름도이고, 도 19는, 도 17의 객체인식모델을 사용하여 분석을 행한 결과 화면이며, 도 20은, 도 17의 레이블 데이터로 작업 종류를 추출한 결과 화면이다. 도 21은 본 발명의 객체인식기반의 전력저감 컴퓨터의 GUI 구성의 예이고, 도 22a 내지 도 22g 는, 실제 화면 캡처 및 분석 결과의 예시를 보여주는 도면들이다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "다만, 첨부된 도면은 본 발명의 내용을 보다 쉽게 개시하기 위하여 설명되는 것일 뿐, 본 발명의 범위가 첨부된 도면의 범위로 한정되는 것이 아님은 당해 기술 분야의 통상의 지식을 가진 자라면 용이하게 알 수 있을 것이다. (본 발명의 실시예) 우선, 본 발명의 최적 실시예에 따른 객체인식기반의 전력저감 컴퓨터의 제어방법은, 딥러닝에 기초한 인공지능 모델 학습에 따라서, 모델링 및 레이블링이 이루어져야 한다. 그리고, 본 발명에 따른 컴퓨터 시스템은, 화면을 캡처(Capture)하여 딥러닝 모델을 이용하여 화면을 분석한 후 현재 사용자가 사용하는 작업이 몇 개인지 어떠한 작업을 하고 있는지를 판별한 후에 CPU의 최대 주파수를 조절 하는 방법을 제공한다. 아울러, 사용자의 별도 조작 없이 현재하고 있는 화면을 캡처(Capture)하여 인공지능 모델을 활용하여 분석을 한 후 사용자가 어떠한 프로그램을 사용하고 있는지? 또한 화면에서 몇 개의 프로그램을 사용하고 있는지? 를 파악하고, 인공지능 기반의 컴퓨터 전력 저감기술에서 사용한 이미지를 통해 단순한 분류(Classification) 방법 이 아니라 객체 탐지(Object Detection) 방법을 사용하여 여러 개의 창이 실행되고 있을 때도 각 창에 대한 탐 지를 하여 작업의 분류가 가능하도록 구성하며, 별도의 조작 없이도 사용자가 화면에서 사용하고 있는 작업의 종류, 수에 따라 CPU의 성능을 조절함으로써, 사용자가 사용하는데 큰 불편함 없이 불필요한 컴퓨터 전력을 감 소시키는 것이 특징이다. 즉, CPU의 최대로 올라갈 수 있는 주파수를 조정을 함으로써, Microsoft에서 제공하는 CPU의 이용률이 줄어들 때 CPU 클럭을 줄이는 전력 저감 기술과 충돌이 일어나지 않도록 한다. 아울러, Background에서 프로세서가 돌고 있을 때에 CPU 사용률이 일정치 (일례로 50% 이상) 넘어가면 성능 제 한을 하지 않도록 구성하고, 사용자의 환경에 따라 모니터 화면에 표시되지는 않지만 Background에서 부하가 많 이 걸리는 프로그램이 돌고 있을 때에도 CPU 성능을 제한시키는 문제점을 개선하며, CPU 사용량을 계속해서 체 크하여 평균 CPU 사용률이 일정 수치 이상이 되면 CPU 성능 제한을 하지 않도록 구성한다. 추가적으로, 데이터 구성을 다양화하여, 직접 수집한 데이터뿐만 아니라 수요처에서 얻은 데이터도 학습에 이용 하여 범용성을 높이도록 한다. 그리하여, 본 발명에 의하면, 객체 탐지 알고리즘을 적용하고, 평균 CPU 사용량 체크 기술을 추가하며, 데이터 다양화를 통해, 다양한 환경과 작업상태, 컴퓨터 모델에 적용이 가능한 기술인바, 인공지능 모델을 활용하여, 작업 상태뿐만 아니라 작업 수도 체크하여 소비전력 절감을 도모하는 것이다. 보다 구체적으로, 도 11을 주로 참조하고, 도 12 내지 도 16을 보조적으로 참조하여, 본 발명의 객체인식기반의 전력저감 컴퓨터의 제어방법의 사전 작업으로서 인공지능 모델 학습 방법을 설명하면, 도 11에서 보는 바와 같 이, 데이터 캡처 및 수집을 행하게 된다(S1). 즉, 도 12에서 보는 바와 같이, 직접 모델 학습을 진행하기 위해 데이터 수집 프로그램을 개발하였는바, 이에 의해 사무 환경은 듀얼 모니터 사용이 많기 때문에 모니터의 정보 를 받아와 사용 모니터 개수 파악 및 해상도 정보를 파악하며, 사용화면 이미지 외에도 현재 프로세서의 이름, CPU 사용량, 메모리 사용량, 키보드 마우스 입력 횟수, 화면 사이즈 등의 정보를 CSV 형태로 저장하게 된다. 도 12의 (a) 내지 (c)에는, 직접 캡처한 모니터 화면의 저장된 파일들이 예시되어 있다. 더욱이, 그러한 수집 프로그램을 배포하여 꾸준한 데이터 수집을 진행하며, 협의가 되는 수요처에 배포를 하여 수요처가 사용하는 프로그램, 화면 정보, 사용화면 이미지, CPU 사용량 등의 정보 수집 진행하게 된다. 도 13에는, 회사 및 수요처를 대상으로 지속적으로 수집된 여러가지 데이터로서, 모니터 화면의 저장된 파일들 이 예시되어 있다. 이후, 선택적으로 수집된 이미지 리사이즈(Resize)를 수행하게 되는바(S2), 일례로, 캡처된 이미지는 학습하기 에는 너무 크기 때문에 일례로 1920x1080 사이즈를 224x224 으로 리사이즈를 진행하게 된다. 즉, 학습을 하기 위해서 사용되는 이미지들은 모니터의 해상도 만큼의 size이기 때문에 학습 모델 입력으로는 너무 커서 적절하 지 않으므로, 리사이징 작업을 통해 이미지들을 줄여 주는 것이 좋다.이후, 데이터 분석 및 레이블링을 행하게 되는바(S3), 수집된 데이터를 분석하여 정리하고 학습에 필요한 데이 터를 추출하며, 학습을 위해 추출된 데이터의 레이블링을 행하게 된다. 일례로, 본 실시 예에서 학습용으로 구성한 데이터들은, training data set 과 validation data set, 및 test data set 의 세 가지로 구분하여 구성을 하였다. 이들 각 set의 목적 및 개수는 다음 [표 1]에서와 같다. 표 1 컴퓨터 학습 데이터 셋(10,409개) Training data set Validation data set Test data set 9454개 423개 532개 데이터 학습을 위함 학습 중간 평가를 위함 모델을 평가하기 위함 참고로, 상기 예의 경우, 사무 환경에서 데이터를 수집하였기 때문에 사용자가 회의나 자리를 비운 상황일 경우 같은 패턴의 데이터가 수집될 수 있으며, 같은 데이터는 모델 학습을 진행할 때 과적합(Over-fitting) 문제를 일으킬 수 있기 때문에 데이터 정리가 필요하다. 저장된 CSV 파일을 이용하여 마우스 입력과 키보드 입력 횟수 가 없을 경우에는 사용자가 자리를 비웠다고 판단하고 그 때의 이미지는 제외한다. 최근 사무환경은 Window 10 과 Window 11의 환경이므로 Window 10에서 수집된 데이터와 Window 11 수집된 데이터 분류를 시행하였는바, 정 리 결과 Window 10 환경에서는 13,981개의 데이터를 추출하였고 Window 11 환경에서는 10409개의 데이터를 사용 하여 학습에 이용하였다. 데이터 분석과 함께, 객체 인식 모델을 적용하기 위해 추출된 데이터의 레이블링 작업을 시행되어야 하는바, 화 면에서 객체가 있는 영역의 좌표 값, 즉 x_min, x_max, y_min, y_max의 좌표 값과 그 영역의 작업 상태가 무엇 인지 label 작업을 시행한 후, 좌표값과 작업 상태 label은 일례로 xml 형태로 저장되며, 작업 상태 label은 일 례로 인터넷 작업, 프로그래밍 작업, 문서 작업, 기타 작업으로 분류하게 된다. 도 15의 (a) 및 (b)는 레이블링 작업의 예를 보여주고, 도 15의 (c)는 레이블링 데이터를 저장한 상태를 보여주 고 있다. 이후, 레이블링된 데이터들을 이용하여 딥러닝 모델을 선정한 후, 딥러닝 모델 학습을 진행하게 된다(S4). 일례 로, 전처리된 (즉, resize된) 화면 이미지는 학습된 객체인식모델(MobileNet-SSD) 모델을 활용하여 분석이 시행 되는바, 즉, 전처리된 화면 이미지와 그에 대응하는 Label들은 객체 인식을 위한 Model인 Mobilenet SSD를 활용 하여 학습을 진행을 하고, 현재 사용자 화면에서 윈도우 창의 좌표값과, 그 창의 작업 상태를 학습에 이용하게 된다. 일례로, 모델 학습을 위해 Backbone network로 Mobilenet을 활용하는바, 구글 연구진들이 만든 MobileNet은 자 원이 열악한 모바일 환경에서도 문제없이 실행될 수 있도록 만든 Network 이다. 이때, Depthwise separable convolution이라는 일반적인 convolution 연산과 비교하여 연산량을 많이 줄일 수 있는 방법을 사용하였으며, Bottlenect 접근을 통해 연산량을 줄이면서도 정확도를 유지할 수 있었다. 또한, 유명한 CNN(Convolutional Neural Network)인 GoogleNet, VGG16, ResNet과 비교하여도 성능이 크게 감소하지 않으며, 적은 파라미터를 사 용하여 연산량이 적다는 것이 확인되었으며, 본 실시예에서는, 기존 기술에서 활용되었던 ResNet이 가지고 있었 던 연산량이 많아 프로그램 로딩이 많이 걸리며 inference 속도가 오래 걸리는 문제를 개선하고자, Mobilenet을 활용하여 학습을 진행하였다. 더욱이, 사용자가 모니터에서 작업 상태와 작업의 수를 파악하기 위해 객체 탐지 (Object detection) 알고리즘의 한 종류인 SSD(Single-Shot-Detector)를 활용하는 것이 바람직한바, SSD는 탐 지 속도를 높인 1-stage detector 로써, 여러 개의 feature map들을 탐지에 활용하는 방식으로서, 다양한 크기 의 객체들을 찾기 위하여 Default Box(Anchor)를 사용하여 다양한 크기의 객체를 탐지할 수 있으며, NMS(Non Max Suppression) 통해서 탐지된 데이터들 중 하나의 데이터를 추출하게 된다. 추가적으로, 상기 딥러닝 모델 선정 후 학습 진행에 따른, 손실함수로서 Classification 함수는 Weighted CrossEntropy 함수를 사용하였으며, Localization 함수는 Weighted Smooth l1 함수, batch size는 32로 설정하 여 학습을 진행하였는바, 도 16은 도 11의 딥러닝 모델 학습 평가에서의 손실함수의 그래프로서, 도 14의 (a)는 Classification loss 그래프이고, 도 14의 (b)는 Localization loss 그래프이며, 도 14의 (c)는 Total loss 그 래프이다. 마지막으로, 테스트 데이터 set로 모델 평가를 진행하고, 최종 학습된 딥러닝 모델을 AW Application에서 적용 될 수 있도록 모델 파일을 추출하게 된다(S5). 즉, 최종 학습된 객체 탐지(Mobilenet) 모델 파일을 PB (proto buffer) 파일로 변환하여 SW Application에서 사용할 수 있게끔 모델 파일을 추출한다. 즉, SW Application에 적용할 모델 파일을 추출하는바, 학습된 모델은 PB(Proto Buffer) 파일로 변환하여 SW Application에서 사용할 수 있게끔 모델 파일을 추출하게 된다. 부연하자면, 이와 같이 인공지능(딥러닝)을 사용하여 학습하는 이유는, 사용자가 사용하는 작업 환경은 매우 다 양하며, 기존의 특징점을 이용하여 작업 상태나 화면 상태를 판단하는 방식에서는 오류가 많을 수밖에 없기 때 문에, 딥러닝을 사용하여 사용자가 현재 작업하고 있는 화면을 분석하고, 작업 상태와 화면 상태를 도출하여 적 용하면서 다양한 패턴에 적용이 가능하기 때문이며, 컴퓨터 성능이 급속하게 발전함에 따라 딥러닝 기술도 적용 이 가능하게 되었고, 다양한 패턴을 학습하기 때문에 새로운 환경에서도 적용이 쉬우며, 수요처별 이미지 학습 을 통해 커스터마이징된 작업환경도 제공이 가능하고, 모델 업데이트 방식으로 성능을 쉽게 업그레이드 가능하 기 때문이다. 이제, 도 17 내지 도 20을 참조하여, 일례로 SW Application에 의해 이루어지는, 본 발명의 객체인식기반의 전 력저감 컴퓨터의 제어방법 중, 학습된 모델을 이용하여 컴퓨터 전력 조절 방법에 대하여 상술한다. 먼저, 사용자의 컴퓨터 정보 및 모니터 정보 즉 모니터의 개수, 해상도 값을 읽어서(S11), CPU 사용량을 측정한 다(S12), 즉, SW Application을 통하여 사용자 사용환경 정보를 받아와, 모니터 사용 개수, 해상도, 모니터 핸 들 등의 정보를 획득한다. 이후, 사용자의 화면을 캡처하는 함수를 만들어 일정 주기가 지나면 화면캡처를 수행할 수 있게끔 구성함으로써, 화면 캡처를 진행한다(S13). 즉, 설정된 일정 주기마다 화면 캡처를 실행하는바, 종전의 기술에 서는 resnet 모델이 너무 무거워서 30s로 설정을 하였는데, 본 실시예의 모델은 가볍고 연산량이 적으며 빠르기 때문에 default 값은 5초로 설정을 하였으며, 다만 1~10초 범위 내에서 사용자가 임의로 조절할 수 있도록 하는 것이 바람직하다. Defalut 값이 5초인 것은 내부 테스트 결과 5초 정도면 사용자가 사용하는데 무리가 없다고 판단하여 설정을 하였는바, 내부테스트 결과, SW상에서 학습 결과 값 도출 시 5초가 최적인 것으로 확인되었다. 계속해서, 화면이 캡처가 되면 화면을 모델 인풋에 맞게끔 resize를 진행할 수 있는 함수를 구성하여, 캡처된 화면의 리사이즈를 진행하게 되는바(S14), 일례로 캡처된 화면은 224x224 사이즈로 Resize 되어 딥러닝 모델의 입력부로 활용된다 (도 14 참조). 참고로, 최근 Full-HD 화면뿐만 아니라 4K 디스플레이도 많이 활용하고 있기 때문에, 캡처된 화면 데이터 Resize 작업이 \"사실상 반드시\"라고 할 정도로 필요하다고 할 것이다. 이후, resize된 화면은 모델의 입력단으로 들어가게 되며, 모델의 아웃풋은 각 객체의 label과 좌표값을 추출 (inference)하게 된다(S15). 그리하여, 전처리된 화면 이미지는 학습된 객체인식모델(MobileNet-SSD) 모델을 활용하여 분석이 시행되고, 화 면 분석 결과 현재 사용자 화면에서 작업의 수와, 어떤 작업을 하고 있는지에 대한 정보를 획득하게 되는바 (S16), 즉, 각 객체의 label과 좌표값 정보를 이용하여, 현재 사용자가 화면에서 사용하는 작업의 종류, 수를 추출하게 된다. 참고로, 도 19에서의 분석 결과는, 탐지된 창(윈도우)의 수가 3개이고, 작업 종류는 모두 문서 작업임을 나타내고 있다. 일례로, 도 20에서 보는 바와 같이, 객체인식모델의 label 데이터를 구성하여 학습을 진행하였으며, label 은 문서작업, 인터넷작업, 프로그래밍 작업, 기타작업 4가지 작업으로 분류를 시행할 수 있다. 이후, CPU 클럭을 조정하는 단계(S20)로 바로 진행하여도 되나, 그 전에 평균 CPU 사용량 값을 산출하여(S17), 평균 CPU 사용량이 일정치 (50%) 이상인가? 여부를 판단하여(S18), 평균 CPU 사용량이 일정치 (50%) 이상을 넘 어가게 되면 CPU 최대 주파수 값을 최대로 유지하고(S19), 상기 S13 단계로 리턴하며, 반면 평균 CPU 사용량이 50% 이하인 경우에만, CPU의 Max-frequency의 클럭을 조정하여 전력절감을 시행하도록 하는 것이 바람직하다. CPU 클럭을 조정하는 단계(S20)에 대해서는, 도 18을 참조하여 더욱 상세히 설명한다. 먼저, 인공지능모듈로부 터 수신되는 작업종류를 기반으로 기설정된 코어파킹 기준 테이블과 비교하여 활성화시킬 코어 수를 결정하는바 (S21), 그러한 코어파킹 기준 테이블의 일례가 하기 [표 2]에 예시되어 있다. 표 2 작업의 수 Min-frequency(%) ~ Max-frequency(%)비고 0 (바탕화면) 0~501 0~60 -프로그래밍 툴 감지 제외. -작업 분류에 따라 조정 가능성. 2 0~70 -프로그래밍 툴 감지 제외. -작업 분류에 따라 조정 가능성. 3 0~80 -프로그래밍 툴 감지 제외. -작업 분류에 따라 조정 가능성. 4 0~90 -프로그래밍 툴 감지 제외. -작업 분류에 따라 조정 가능성. 프로그래밍 Tool0~100 이후, 인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를 바탕으로 Max- frequency를 조정하게 되며(S22), 필요시 각 코어의 클럭을 미세 조절함으로써(S23), 더욱 절전을 행하게 된다. 참고로, 도 21은 본 발명의 객체인식기반의 전력저감 컴퓨터의 GUI 구성의 예인바, 사용자가 편리하게 사용할 수 있게끔 프로그램 종료 시 PC의 CPU 성능을 복원, 전력절감 기능을 on/off 할 수 있는 체크박스 등을 구성하 여 여러 제품에 테스트를 진행하도록 한다. 마지막으로, 도 28a 내지 도 28g 는, 실제 화면 캡처 및 분석 결과의 예시를 보여주는 도면인바, 이를 간략히 설명한다. 도 28a 내지 도 28c에서 보는 바와 같이, 사무 환경에서 수집된 데이터 결과들은, 각 화면을 모니터 개수와 해 상도에 따라 화면 캡처 파일을 이미지로 저장하는바, 프로세스의 상태, CPU 사용량, 메모리 사용량 등의 데이터 는 CSV 파일 형태로 저장된다. 즉, 저장된 이미지 파일 형식과 프로세스 상태나 CPU 사용량, 메모리 사용량, 마우스 입력 횟수, 키보드 입력 횟수, 등의 여러 데이터가 저장된 CSV 데이터와 함께, 저장하게 된다. 도 28a는 수집 데이터 폴더를 나타내고, 도 28b는 저장된 이미지파일, CSV파일 등을 나타내고, 도 28c는 CSV 파일 구성요소를 보여준다. 일례로, 도 28d 및 도 28e에서는, 총 71,849개의 CSV 데이터가 수집되었으며, 수집된 프로세스 종류는 111개로 구성되어 있고, 수집된 데이터들은 프로세스에 따라 데이터(CPU 평균값, 메모리 평균값)가 도 28d의 표 및 도 28e의 그래프와 같이 정리되어 있다. 이 결과에 따르면 가장 많이 사용된 프로세서들은 chrome으로 나타났다. 하지만 이렇게 수집된 데이터들은 같은 패턴의 데이터들이 너무 많아서, 같은 패턴의 데이터들은 삭제를 하였는 바, 같은 패턴들의 데이터가 많으면 모델 학습 시 overfitting을 유발할 수 있기 때문에 같은 패턴의 데이터들 은 삭제를 하는 것이 바람직하다. 그리고, 이를 위해서 저장된 CSV 데이터 중 키보드 마우스 입력값을 활용하여, 키보드 마우스 움직임 값이 0 일 경우에는, 사용자가 컴퓨터를 사용하고 있지 않다고 판단하여 그 데 이터를 제외하였는바, 결국 총 71,849 개의 순수 데이터 중에서, 키보드 마우스 입력 데이터가 없을 경우의 데 이터 44,216개를 제외하고, 27,633개의 학습용 유효 데이터가 얻어졌으며, 이때 105개의 유효 프로세스 종류가 얻어졌다. 도 28f 및 도 28g는, 총 27,633개의 학습용 유효 데이터를 정리한 표 및 그래프이다. 더욱이, 상기 27,633개의 유효 데이터를, 다시 눈으로 보고 [표 1] 에서와 같이 총 10,409개의 데이터를 구성을 하였다. 한편, 이상의 객체인식기반의 전력저감이 가능한 컴퓨터 시스템에서는, 적어도 다음 [표 3]에서와 같은 모듈들 이 최소한으로 필요하다할 것이다. 표 3 주요 구성요소 기술구현 내용 CPU와 메모리의 사용량을 측정하는 'CPU/메모리 사용량 측정모듈'Background에서 프로세서가 실행될 때 CPU의 부하가 어 느 수준 이상이 될 경우, CPU의 성능제한을 풀어주기 위해서 CPU 측정 방식을 구현함. 모니터에 디스플레이되는 화면 이미지를 이미지 형식의 파일 포맷으로 캡처하는 '화면캡처모듈'현재 사용자가 실행하고 있는 화면정보 분석을 위하여 프로그램에서 모니터 정보를 받아와 이 정보를 바탕으 로 화면 캡처를 진행함. 화면 캡처 프로그램에서 캡처된 화면 캡처 이미지 를 소정 사이즈로 줄이는 '전처리부'캡처된 화면은 일례로 224x224 사이즈로 Resize 되어 딥러닝 모델의 입력부로 활용됨.전처리부에서 변환된 화면 캡처 이미지를 딥러닝 모델로 분석하는 '분석모듈'전처리된 화면 이미지는 학습된 객체인식모델 (MobileNet-SSD) 모델을 활용하여 분석이 시행되며, 화 면 분석 결과 현재 사용자 화면에서 작업의 수와, 어떤 작업을 하고 있는지에 대한 정보를 획득. 실행중인 작업이 문서 작업, 메일 작업, CAD작업, 인터넷 서핑, 미디어 재생과 같은 작업 중에 어디 에 속하는지를 결정하여 작업종류를 판단하는 '작 업종류 판단모듈'객체인식모델의 label 데이터를 구성하여 학습을 진행 하였으며, label은, 일례로 문서작업, 인터넷작업, 프 로그래밍 작업, 기타작업의 4가지 작업으로 분류를 시 행. CPU/메모리 사용량 측정모듈로부터 CPU 사용량 데 이터와 메모리 사용량 데이터를 수신하여 평균 CPU 사용량 평균 메모리 사용량을 산출하는 '평균 사용량 산출모듈'Background에서 실행되는 프로그램이 많을 경우 평균 CPU 사용량이 평소의 CPU 사용량보다 높아지기 때문에 일정 주기마다 평균치를 산출. 인공지능모듈로부터 수신되는 작업종류를 기반으 로 기설정된 코어파킹 기준 테이블과 비교하여 활 성화시킬 코어 수를 결정하는 '코어수 판단모듈'인공지능 분석부에서 판단된 모니터화면에서 실행되고 있는 작업의 수와 작업 종류를 바탕으로 Max-frequency 를 조정하게 됨 코어수 판단모듈에서 결정된 코어 수에 따라 활성 화되는 CPU 코어 수와 함께 CPU 클럭을 조정하도 록 하는 '코어수 제어모듈'Microsoft에서 제공하는 CPU의 이용률이 줄어들 때 CPU 클럭을 줄이는 전력 저감 기술과 충돌이 일어나지 않도 록 최대 주파수만을 조정하는 방식으로 변경됨. 이상, 이와 같은 본 발명의 객체인식기반의 전력저감 컴퓨터 및 그 제어방법에 의하면, 화면을 캡처(Capture)하 여 딥러닝 모델을 이용하여 화면을 분석한 후 현재 사용자가 사용하는 작업이 몇 개인지 어떠한 작업을 하고 있 는지를 판별한 후에 CPU의 최대 주파수를 조절함으로써, 다양한 패턴의 작업 환경 하에서, SW 구현만으로 사용 자에게 최적의 CPU 클럭을 조정 가능함으로 인하여, 최대한의 절전이 가능하다."}
{"patent_id": "10-2023-0133905", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상에서는 본 발명의 일 실시예에 따라 본 발명을 설명하였지만, 본 발명이 속하는 기술분야에서 통상의 지식 을 가진 자가 본 발명의 기술적 사상을 벗어나지 않는 범위 내에서 변경 및 변형한 것도 본 발명에 속함은 당연 하다."}
{"patent_id": "10-2023-0133905", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 종래의 컴퓨터 전원공급장치의 개념도. 도 2는 제3 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 블록도. 도 3은 종래의 일반적인 파워온 동작의 개념을 설명하는 도면. 도 4는 도 3의 PS_ON 회로(19a)의 블록도. 도 5는 도 3의 각 신호들의 타이밍 챠트. 도 6은 종래의 일반적인 파워온 동작의 개념을 설명하는 또다른 예의 도면. 도 7은 도 6의 각 신호들의 타이밍 챠트. 도 8은 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 블록도. 도 9는 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 상세 회로도. 도 10은 제4 종래기술에 따른 대기전력이 절감되는 컴퓨터 전원공급장치의 마이컴의 동작흐름도. 도 11은 본 발명의 객체인식기반의 전력저감 컴퓨터의 제어방법의 사전 작업으로서 인공지능 모델 학습의 흐름 도. 도 12는, 도 11의 데이터 캡처 및 수집 단계에서 캡처된 모니터 화면의 예. 도 13은, 도 11의 데이터 캡처 및 수집 단계에서 수집된 모니터 화면의 예. 도 14는, 도 11의 이미지 리사이즈 단계를 설명하는 도면. 도 15는, 도 11의 데이터 분석 및 레이블링 단계에서 레이블링 작업 및 레이블링 데이터의 예. 도 16은, 도 11의 딥러닝 모델 학습 평가에서의 손실함수의 그래프. 도 17은 본 발명의 객체인식기반의 전력저감 컴퓨터의 제어방법의 전체 흐름도. 도 18은, 도 17의 CPU 클럭 조정 단계의 상세 흐름도. 도 19는, 도 17의 객체인식모델을 사용하여 분석을 행한 결과 화면. 도 20은, 도 17의 레이블 데이터로 작업 종류를 추출한 결과 화면. 도 21은 본 발명의 객체인식기반의 전력저감 컴퓨터의 GUI 구성의 예. 도 22a 내지 도 22g 는, 실제 화면 캡처 및 분석 결과의 예시를 보여주는 도면."}
