{"patent_id": "10-2021-0081242", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0170428", "출원번호": "10-2021-0081242", "발명의 명칭": "이기종 프로세서 기반 엣지 시스템에서 SLO 달성을 위한 인공지능 추론 스케쥴러", "출원인": "한국과학기술원", "발명자": "박종세"}}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "스케쥴링 시스템에 의해 수행되는 머신러닝 추론 작업을 위한 스케쥴링 방법에 있어서, 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 단계; 및상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 단계 를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 서비스 수준 목표 인식 기반의 스케쥴링 정책은, 최소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책, 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책 또는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책 중 어느 하나를 포함하는, 것을 특징으로 하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 운영하는 단계는, 스케쥴링 지점에서 예상되는 머신러닝 모델의 추론 작업에 대한 지연시간을 예측함에 따라 주어진 스케쥴링 시간대 동안 요청되고 누적된 모든 추론 작업의 평균 소요 시간을 최소화하기 위하여 상기 최소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책을 설정하는 단계 를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 운영하는 단계는, 주기적으로 호출되는 런타임의 특정 지점에서 주어진 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하고, 상기 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후보 집합에 대한 후보별점수를 계산하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 운영하는 단계는, 상기 후보별 점수를 계산하기 위해 상기 가용 가능한 프로세서에서 프로파일링된 작업의 지연시간과 이미 예약이 보류 중인 작업으로 인한 현재 대기 시간의 합계인 예상 지연시간을 추정하고, 최소 예상 지연시간을 제공하는 후보의 우선순위를 지정하기 위하여 상기 추정된 예상 지연시간이 역순으로 설정되고 모든 작업에 대하여 누적하는 단계 를 포함하는 스케쥴링 방법.공개특허 10-2022-0170428-3-청구항 6 제4항에 있어서,상기 운영하는 단계는, 상기 계산된 후보별 점수에 기초하여 상기 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보집합 중 최소 평균 예상 지연시간을 생성하는 후보를 결정하고, 상기 결정된 후보에 포함된 추론 작업을 상기결정된 후보에 포함된 프로세서에 할당하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제4항에 있어서,상기 운영하는 단계는, 상기 프로세서에 존재하는 요청 우선순위 대기열을 통해 과거의 스케쥴 정보에 기초하여 예약된 작업을 순서대로 누적하고, 상기 추론 작업을 평균 예상 지연시간을 최소화하는 방식으로 요청 우선순위 대기열에서 보류 중인 작업 사이에 삽입하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 운영하는 단계는, 서비스 수준 목표에 대한 위반의 회피를 최소화한 후, 시스템 처리량을 고려하여 서비스 수준 목표에 대한 위반이 발생할 것으로 예상됨에 따라 서비스 수준 목표에 대한 위반 수준의 총 합계를 최소화하기 위하여 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책을 설정하는 단계 를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 운영하는 단계는, 작업 별 서비스 수준 목표의 요구 사항에 기초하여 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하고, 상기 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후보 집합에 대한 후보별점수를 계산하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 운영하는 단계는, 평균 예상 지연시간과 서비스 수준 목표에 대한 점수를 계산하고, 상기 점수를 계산하기 전에 예상 지연시간이필요한 서비스 수준 목표보다 큰 지 확인하고, 상기 예상 지연시간이 필요한 서비스 수준 목표보다 클 경우, 작업이 서비스 수준 목표를 위반할 것으로 예상되어 예상 지연시간을 계산하는 대신, 서비스 수준 목표의 위반 정도를 계산하고, 상기 계산된 서비스 수준 목표의 위반 정도의 음수값을 누적하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "공개특허 10-2022-0170428-4-제9항에 있어서,상기 운영하는 단계는, 상기 계산된 후보별 점수에 기초하여 기 설정된 기준 이상의 점수를 가진 후보를 결정하고, 상기 결정된 후보에포함된 추론 작업을 상기 결정된 후보에 포함된 프로세서에 할당하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서,상기 운영하는 단계는, 복수의 계층으로 구성된 머신러닝 모델의 속성을 활용하여 머신러닝 모델을 균일한 크기의 하위 머신러닝 모델로 분할하고, 상기 분할된 하위 머신러닝 모델 별로 하위 작업을 채워 스케쥴링 목적에 대한 선점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책을 설정하는 단계 를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 운영하는 단계는, 모델 슬라이싱의 활성화 또는 비활성화 여부를 확인하고, 상기 모델 슬라이싱이 활성화되어 있을 경우, 중복된작업의 계산을 방지하기 위해 작업 집합에서 추론 작업을 제거하는 동안 상기 추론 작업을 슬라이스된 하위 작업의 집합으로 분할하고, 상기 슬라이스된 하위 작업을 상기 작업 집합에 삽입하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13에 있어서,상기 운영하는 단계는, 요청 우선순위 대기열에 슬라이스된 하위 작업을 삽입하는 동안 슬라이스 모드가 비활성화 되어 있으면 대기중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상되는지 확인하고, 대기중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상될 경우, 슬라이스모드를 활성화 하고, 대기 중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반하지 않을 것으로 예상될 경우, 슬라이스 모드를 비활성화 하는 단계를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 운영하는 단계는, 슬라이스 모드가 이미 활성화되어 있을 경우, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되는지 확인하고, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데도움이 되는 것으로 판단할 경우, 슬라이스 모드를 활성화 상태로 유지하고, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되지 않는 것으로 판단할 경우, 슬라이스 모드를 비활성화 하는 단계 를 포함하는 스케쥴링 방법."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "공개특허 10-2022-0170428-5-스케쥴링 시스템에 의해 수행되는 머신러닝 추론 작업을 위한 스케쥴링 방법을 실행시키기 위하여 컴퓨터 판독가능한 기록매체에 저장된 컴퓨터 프로그램에 있어서,이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 단계; 및상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 단계 를 포함하는 컴퓨터 판독 가능한 기록매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "스케쥴링 시스템에 있어서,이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 작업 요청 수신부;및상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 자원 운영부를 포함하는 스케쥴링 시스템."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 자원 운영부는,스케쥴링 지점에서 예상되는 머신러닝 모델의 추론 작업에 대한 지연시간을 예측함에 따라 주어진 스케쥴링 시간대 동안 요청되고 누적된 모든 추론 작업의 평균 소요 시간을 최소화하기 위하여 상기 최소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책을 설정하는 것을 특징으로 하는 스케쥴링 시스템."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서,상기 자원 운영부는,서비스 수준 목표 위반의 회피를 최소화한 후, 시스템 처리량을 고려하여 서비스 수준 목표 위반이 발생할 것으로 예상됨에 따라 서비스 수준 목표에 대한 위반 수준의 총 합계를 최소화하기 위하여 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책을 설정하는 것을 특징으로 하는 스케쥴링 시스템."}
{"patent_id": "10-2021-0081242", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서,상기 자원 운영부는,복수의 계층으로 구성된 머신러닝 모델의 속성을 활용하여 머신러닝 모델을 균일한 크기의 하위 머신러닝 모델로 분할하고, 상기 분할된 하위 머신러닝 모델 별로 하위 작업을 채워 스케쥴링 목적에 대한 선점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책을 설정하는 것을 특징으로 하는 스케쥴링 시스템."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "이기종 프로세서 기반 엣지 시스템에서 SLO 달성을 위한 인공지능 추론 스케쥴러 기술이 개시된다. 일 실시예에 따른 스케쥴러에 의해 수행되는 머신러닝 추론 작업을 위한 스케쥴링 방법은, 이기종 프로세서로 구성된 엣지 시 스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 단계; 및 상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 엣지 시스템에서 머신러닝 모델의 추론 작업을 스케쥴링하는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 몇 년 동안 머신러닝(ML) 알고리즘이 눈에 띄게 발전함에 따라 많은 문제들을 인간 수준의 정확도로 해결 할 수 있게 되었다. 이러한 뛰어난 발전을 바탕으로 머신러닝 알고리즘을 다양한 유형의 실제 애플리케이션에 통합하고 엣지 플랫폼에 애플리케이션을 배포하는 방향으로 나아가고 있다. 엣지 플랫폼은 종종 여러 목적으로 사용되며 여러 머신러닝 모델에 대한 다양한 유형의 추론 작업 요청을 동시 에 처리해야 한다. 인간과 직접 상호 작용할 수 있는 컴퓨팅 지원 엣지 플랫폼의 수가 제한되어 있어야하는 반 면, 머신러닝 알고리즘은 거의 모든 애플리케이션 도메인에 침투하고 있기 때문에 추론 작업 요청을 동시에 처 리해야 하는 상황이 심화될 것으로 보인다. 종래에는 단일 프로세서 엣지 시스템 상에 다중 머신러닝 모델 추론 연산을 배치하거나 이기종 프로세서 엣지 시스템 상에 단일 머신러닝 모델 추론 연산을 배치하였다. 그러나, 엣지 시스템의 이기종 프로세서 상에 다양 한 머신러닝 추론 연산을 배치하는 문제는 해결되지 않았다. 특히, 엣지 시스템에 다양한 모델의 추론 작업 요청이 연속적으로 들어올 경우 서비스 수준 목표(SLO: Service- Level Objective)를 맞추는 것은 실용적인 엣지 시스템 운영을 위해 필수적이지만 이것이 가능한 작업 스케쥴러 는 존재하지 않았다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 유형의 프로세서에서 다양한 기계학습 모델의 다양한 특성을 고려하여 이기종 프로세서 및 이기종 기계 학습 모델을 위한 스케쥴링 방법 및 시스템을 제공할 수 있다. 사전 프로파일링된 작업 동작을 사용하여 예상 지연시간을 기반으로 서비스 수준 목표 인식 추론 스케쥴링 방법 및 시스템을 제공할 수 있다. GPU 및 DSP 계산을 위한 거친 선점을 제공하는 모델 슬라이싱 기술을 제공하고, 다음 작업의 서비스 수준 목표 위반으로 이어질 수 있는 대규모 머신러닝 작업에 의한 리소스 차단 문제를 해결하는 방법 및 시스템을 제공할 수 있다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "스케쥴링 시스템에 의해 수행되는 머신러닝 추론 작업을 위한 스케쥴링 방법은, 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 단계; 및 상기 수신된 추론 작업 요청에 따라 서비 스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기 종 프로세서 자원을 운영하는 단계를 포함할 수 있다. 상기 서비스 수준 목표 인식 기반의 스케쥴링 정책은, 최소 평균 예상 지연시간(Minimum-Average-Expected- Latency; MAEL)을 통한 스케쥴링 정책, 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴 링 정책 또는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책 중 어느 하나 를 포함할 수 있다. 상기 운영하는 단계는, 스케쥴링 지점에서 예상되는 머신러닝 모델의 추론 작업에 대한 지연시간을 예측함에 따 라 주어진 스케쥴링 시간대 동안 요청되고 누적된 모든 추론 작업의 평균 소요 시간을 최소화하기 위하여 상기 최소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책을 설정하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 주기적으로 호출되는 런타임의 특정 지점에서 주어진 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하고, 상기 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후보 집합에 대한 후보별 점수를 계산하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 상기 후보별 점수를 계산하기 위해 상기 가용 가능한 프로세서에서 프로파일링된 작업의 지연시간과 이미 예약이 보류 중인 작업으로 인한 현재 대기 시간의 합계인 예상 지연시간을 추정하고, 최소 예 상 지연시간을 제공하는 후보의 우선순위를 지정하기 위하여 상기 추정된 예상 지연시간이 역순으로 설정되고 모든 작업에 대하여 누적하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 상기 계산된 후보별 점수에 기초하여 상기 추론 작업과 엣지 시스템에서 가용 가능한 프 로세서를 매핑한 후보 집합 중 최소 평균 예상 지연시간을 생성하는 후보를 결정하고, 상기 결정된 후보에 포함 된 추론 작업을 상기 결정된 후보에 포함된 프로세서에 할당하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 상기 프로세서에 존재하는 요청 우선순위 대기열을 통해 과거의 스케쥴 정보에 기초하여 예약된 작업을 순서대로 누적하고, 상기 추론 작업을 평균 예상 지연시간을 최소화하는 방식으로 요청 우선순위 대기열에서 보류 중인 작업 사이에 삽입하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 서비스 수준 목표 위반의 회피를 최소화한 후, 시스템 처리량을 고려하여 서비스 수준 목표 위반이 발생할 것으로 예상됨에 따라 서비스 수준 목표 위반 수준의 총 합계를 최소화하기 위하여 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책을 설정 하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 작업 별 서비스 수준 목표의 요구 사항에 기초하여 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하고, 상기 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후 보 집합에 대한 후보별 점수를 계산하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 평균 예상 지연시간과 서비스 수준 목표에 대한 점수를 계산하고, 상기 점수를 계산하기 전에 예상 지연시간이 필요한 서비스 수준 목표보다 큰 지 확인하고, 상기 예상 지연시간이 필요한 서비스 수준 목표보다 클 경우, 작업이 서비스 수준 목표를 위반할 것으로 예상되어 예상 지연시간을 계산하는 대신, 서비스 수준 목표의 위반 정도를 계산하고, 상기 계산된 서비스 수준 목표의 위반 정도의 음수값을 누적하는 단계를 포 함할 수 있다. 상기 운영하는 단계는, 상기 계산된 후보별 점수에 기초하여 기 설정된 기준 이상의 점수를 가진 후보를 결정하 고, 상기 결정된 후보에 포함된 추론 작업을 상기 결정된 후보에 포함된 프로세서에 할당하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 복수의 계층으로 구성된 머신러닝 모델의 속성을 활용하여 머신러닝 모델을 균일한 크기 의 하위 머신러닝 모델로 분할하고, 상기 분할된 하위 머신러닝 모델별로 하위 작업을 채워 스케쥴링 목적에 대 한 선점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시 간 선점을 통한 스케쥴링 정책을 설정하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 모델 슬라이싱의 활성화 또는 비활성화 여부를 확인하고, 상기 모델 슬라이싱이 활성화 되어 있을 경우, 중복된 작업의 계산을 방지하기 위해 작업 집합에서 추론 작업을 제거하는 동안 상기 추론 작 업을 슬라이스된 하위 작업의 집합으로 분할하고, 상기 슬라이스된 하위 작업을 상기 작업 집합에 삽입하는 단 계를 포함할 수 있다. 상기 운영하는 단계는, 요청 우선순위 대기열에 상기 슬라이스된 하위 작업을 삽입하는 동안 슬라이스 모드가 비활성화 되어 있으면 대기중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으 로 예상되는지 확인하고, 대기중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상될 경우, 슬라이스 모드를 활성화 하고, 대기 중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목 표 요구 사항을 위반하지 않을 것으로 예상될 경우, 슬라이스 모드를 비활성화 하는 단계를 포함할 수 있다. 상기 운영하는 단계는, 슬라이스 모드가 이미 활성화되어 있을 경우, 슬라이스된 모델의 조각이 잠재적인 서비 스 수준 목표 위반을 제거하는 데 도움이 되는지 확인하고, 상기 슬라이스된 모델의 조각이 잠재적인 서비스 수 준 목표 위반을 제거하는 데 도움이 되는 것으로 판단할 경우, 슬라이스 모드를 활성화 상태로 유지하고, 슬라 이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되지 않는 것으로 판단할 경우, 슬라이스 모드를 비활성화 하는 단계를 포함할 수 있다. 스케쥴링 시스템에 의해 수행되는 머신러닝 추론 작업을 위한 스케쥴링 방법을 실행시키기 위하여 컴퓨터 판독 가능한 기록매체에 저장된 컴퓨터 프로그램은, 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의추론 작업 요청을 수신하는 단계; 및 상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 단계를 포함할 수 있다. 스케쥴링 시스템은, 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신하는 작업 요청 수신부; 및 상기 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인 식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영하는 자원 운영부를 포함 할 수 있다. 상기 자원 운영부는, 스케쥴링 지점에서 예상되는 머신러닝 모델의 추론 작업에 대한 지연시간을 예측함에 따라 주어진 스케쥴링 시간대 동안 요청되고 누적된 모든 추론 작업의 평균 소요 시간을 최소화하기 위하여 상기 최 소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책을 설정할 수 있다. 상기 자원 운영부는, 서비스 수준 목표 위반의 회피를 최소화한 후, 시스템 처리량을 고려하여 서비스 수준 목 표 위반이 발생할 것으로 예상됨에 따라 서비스 수준 목표에 대한 위반 수준의 총 합계를 최소화하기 위하여 서 비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책을 설정할 수 있다. 상기 자원 운영부는, 복수의 계층으로 구성된 머신러닝 모델의 속성을 활용하여 머신러닝 모델을 균일한 크기의 하위 머신러닝 모델로 분할하고, 상기 분할된 하위 머신러닝 모델 별로 하위 작업을 채워 스케쥴링 목적에 대한 선점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책을 설정할 수 있다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "스케쥴링 시점에 주어진 추론 요청에 대해 만족시켜야 하는 기대 지연시간을 최소화하는 방향으로 스케쥴링할 수 있다. 이에, 기대 지연시간이 서비스 수준 목표를 초과하는 경우, 시스템 성능 처리량을 최소한으로 타협하 면서도 서비스 수준 목표를 충족시킬 수 있는 방향으로 선택함으로써 효율적으로 엣지 시스템을 운영할 수 있다. 다음 작업의 서비스 수준 목표 위반으로 이어질 수 있는 대규모 머신러닝 모델 작업에 의한 리소스 차단 문제를 해결할 수 있다. 미래에 머신러닝 모델의 다양성이 높아지고 추론 연산 작업량이 늘어난다고 하더라도, 엣지 시스템에 주어진 이 기종 프로세서의 자원을 보다 효율적으로 사용할 수 있도록 하는 스케쥴링 기법을 통해 엣지 시스템 개발 업계 의 경제성 및 수익성을 개선시킬 수 있다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예를 첨부한 도면을 참조하여 상세히 설명한다. 실시예에서는 다양한 모델에 대한 연속적 추론 요청들을 엣지 시스템 상의 가용 가능한 이기종 프로세서의 자원 을 최대한 효율적으로 사용함으로써 시스템 성능 처리량(throughput)을 극대화하면서도 서비스 수준 목표를 위 반하지 않도록 하는 스케쥴링 방법 및 시스템에 대하여 설명하기로 한다. 도 1은 일 실시예에 있어서, 이기종 플랫폼 엣지 장치에서 다양한 머신러닝 모델 작업에 대한 머신러닝 추론을 나타낸 예이다. 도 1(a)는 스케쥴링 프레임워크의 개요이고, 도 1(b)는 자율주행 차량의 이기종 프로세서에 대한 머신러닝 추론 작업의 예이다. 도 1(a)를 참고하면, 엣지 장치에서 다중 머신러닝 모델의 추론 작업을 위한 작업 예약 메커니즘이 탐색될 수 있다. 스케쥴러는 다양한 유형의 머신러닝 추론 작업을 이기종 하드웨어 플랫폼에 전달할 수 있다. 도 1(b)를 참고하면, 다양한 유형의 센서 데이터를 수집하고 다양한 유형의 머신러닝 모델의 추론을 수행하여 런타임에 여러 애플리케이션을 제공하는 자율 주행 차량을 나타낸 것이다. 여기서, 자율 주행 차량은 머신러닝 추론을 수행하기 위해 컴퓨팅 기능이 필요한 엣지 플랫폼이다. 자율 주행 차량은 둘 이상의 머신러닝 애플리케 이션을 호스팅하는 유일한 엣지 플랫폼이 아니다. 예를 들면, 엣지 플랫폼의 예로서, 스마트 홈 허브, 포그 컴 퓨팅 장치, ICU 환자 모니터, 제조 로봇 감시 카메라 등이 있다. 일반적으로 유일한 목적이나 제한된 수의 기능을 가진 기존의 임베디드 장치와 달리 최신 엣지 플랫폼은 종종 광범위한 애플리케이션 도메인의 다양한 기능을 지원한다. 애플리케이션마다 서로 다른 유형의 컴퓨팅 작업이 필요하고 고유한 컨텍스트에서 사용되므로 애플리케이션에는 성능 및 에너지 효율성 측면에서 서로 다른 요구 사항이 존재한다. 다양한 요구를 충족하기 위하여 많은 엣지 플랫폼에 이기종 프로세서가 장착되어 있을 수 있 다. 도 1(b)에 도시된 봐와 같이, 자율 주행 차량은 다양한 센서 데이터를 입력으로 받아 다양한 머신러닝 모델에 대한 추론을 수행하면서 배터리로 구동하기 때문에 CPU, GPU, DSP, FPGA, NPU 등 이기종 플랫폼을 탑재한 고성 능이면서도 전력 효율적인 시스템이 필요하다. 예를 들면, 실제의 Tesla FSD 컴퓨터는 3 개의 쿼드 코어 CPU, 1 개의 GPU, 2 개의 NPU, 1 개의 ISP 및 몇 개의 추가 ASIC 칩으로 구성될 수 있다. 머신러닝 추론을 위한 서비스 수준 목표에 대하여 설명하기로 한다. 엣지 플랫폼에 일반적으로 배포되는 애플 리케이션은 서비스 수준 목표와 함께 제공될 수 있다. 이러한 애플리케이션이 머신러닝 알고리즘에 의존하는 경우 추론 처리 시간이 일반적으로 종단 간 응용 프로그램 런타임의 상당 부분을 차지하므로 머신러닝 추론 작 업에서 제어된 잠재성을 달성하는 것이 애플리케이션의 서비스 수준 목표 관점에서 중요하다. 시스템에서 사용 가능한 하드웨어 리소스가 물리적으로 제한되어 있고 탄력적으로 확장할 수 없기 때문에 서비스 수준 목표를 달 성하는 것은 클라우드에 비해 엣지 플랫폼의 경우 특히 어렵다. 또한, 엣지 플랫폼에서의 머신러닝 추론 작업 은 종종 미션 크리티컬 애플리케이션(예를 들면, ADAS의 보행자 감지)의 일부이므로 서비스 수준 목표를 일반적 인 지침이 아니라 필수 조건으로 만든다. 엣지 플랫폼이 이기종 하드웨어 플랫폼에서 임의의 속도로 다양한 머 신러닝 추론 요청을 처리할 때 문제는 더욱 어려워진다. 실시예에서는 평균 응답 시간, 시스템 처리량 및 서비 스 수준 목표의 트레이드 오프 공간을 탐색하면서 다중 모델의 추론 작업에 대한 몇 가지 스케쥴링 정책을 탐색 하는 것을 목표로 한다. 도 2는 일 실시예에 있어서, 스케쥴링 동작을 설명하기 위한 도면이다. 스케쥴링 시스템(=스케쥴러)은 서로 다른 컴퓨팅 프로세서에서 각 머신러닝 모델의 사전 프로파일링된 실행 동 작을 참조하고 전체 지연시간을 최소화하기 위한 스케쥴링을 결정할 수 있다. 스케쥴링이란, 머신러닝 모델의 추론 작업의 일정을 결정하는 것을 의미할 수 있다. 일례로, 프로세서 관련성이 컴퓨팅 작업 수, 모델 크기, 계층 구성 및 네트워크 토폴로지와 같은 다양한 모델별 요인에 따라 머신러닝 모델마다 다르다. 머신러닝 모델은 프로세서 관련성 측면에서 서로 다른 성능 특성을 가 지고 있지만, 모델들이 알고리즘 특성과 관계없이 유사한 에너지 효율 특성을 가지고 있을 수 있다. 이러한 결 과는 스케쥴러 관점에서 주어진 모든 추론 작업을 에너지 효율적인 프로세서에 매핑하는 것이 성능 측면에서 차선책이 될 수 있더라도 에너지 효율에 대한 최선의 스케쥴링 결정일 가능성이 높다는 것을 의미한다. 이에, 스 케쥴링 시스템은 머신러닝 모델과 프로세서의 쌍에 대한 속성을 활용하여 스케쥴링 정책을 설계할 수 있다. 스케쥴링 시스템은 복수 개의 스케쥴링 정책을 도입할 수 있다. 예를 들면, 스케쥴링 시스템은 3가지의 스케쥴 링 정책을 도입할 수 있다. 각 정책은 서로 다른 최적화 목표를 가지고 있으며, 추론 전환 시간을 최소화하도 록 최적화된 기준 스케쥴링 정책에서 시작될 수 있다. 이때, 두 가지의 서비스 수준 목표 인식 스케쥴링은 서 비스 수준 목표의 요구 사항을 충족시키도록 설계될 수 있다. 도 2를 참고하면, 세 가지의 스케쥴링 동작을 시각적으로 나타낸 것이다. 다른 유형의 화살표는 제안된 세가지 작업 스케쥴링 동작의 워크플로를 나타낸 것이고, xPU는CPU, GPU, DSP와 같이 엣지 시스템의 이기종 프로세서를 나타낸 것이다. 스케쥴링 시스템은 최소 평균 예상 지연시간(Minimum-Average-Expected-Latency; MAEL)을 통한 스케쥴링 정책, 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책 또는 서비스 수준 목표 인식 기반 의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책 중 어느 하나의 스케쥴링 정책을 포함할 수 있다. 최소 평균 예상 지연시간을 통한 스케쥴링 정책에 대하여 설명하기로 한다. 기본 스케쥴링 정책이며, 서비스 수준 목표에 구애받지 않는 시간대 기반 스케쥴링 정책이다. 최소 평균 예상 지연시간을 통한 스케쥴링 정책의 목표는 스케쥴링 지점(point)에서 예상되는 추론 지연시간을 예측하여 주어진 스케쥴링 시간대 동안 요청되고 누적된 추론 작업의 평균 소요 시간을 최소화하는 것이다. 예측을 위해 특정 프로세서에서 주어진 머신러닝 모 델에 대한 추론 지연시간이 매우 제한된 분산을 나타내므로 예측 가능한 머신러닝 모델의 고유한 속성에 의존한 다. 오프라인의 스케쥴러는 (머신러닝 모델, 프로세서) 쌍에서 관련 지연시간까지 매핑된 프로파일 정보를 수 집하며, 런타임에 수집된 프로파일 정보를 사용하여 예상 지연시간을 계산할 수 있다. 스케쥴링 시스템은 이기 종 프로세서에 대한 다중 머신러닝 모델의 추론 작업을 스케쥴링하는 것을 목표로 하기 때문에, 스케쥴링 결정 의 검색 공간이 커서 런타임 스케쥴러가 프로세서 당 요청 대기열에서 가능한 모든 작업 삽입에 방문하는 것은 불가능하다. 이에, 최소 평균 예상 지연시간을 통한 스케쥴링 정책은 각 추론 작업이 위치해야 하는 프로세서를 결정하는 평 가 단계, 작업이 프로세서 당 요청 대기열 내에 위치해야 하는 위치를 결정하는 선택 단계로 구성될 수 있다. 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책에 대하여 설명하기로 한다. 최소 평균 예상 지연시간을 통한 스케쥴링에는 서비스 수준 목표 인식이 없기 때문에 스케쥴링 시간대에 요청된 긴급 추론 작업이 있어도 평균 예상 지연시간을 기준으로 긴급성과 일정을 무시한다. 이러한 한계를 극복하기 위하 여 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간정책을 통한 스케쥴링의 목표는 서비스 수준 목표 위 반의 회피를 최소화하는 것을 최우선 과제로 삼고 시스템 처리량을 다음의 우선순위로 둔다. 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책은 서비스 수준 목표 위반이 존재 할 것으로 예상되는지 여부를 평가하고, 서비스 수준 목표 위반이 발생하지 않을 것으로 예상되면, 최소 평균 예상 지연시간을 통한 스케쥴링 정책으로 대체하고, 서비스 수준 목표 위반이 발생할 것으로 예상되면, 서비스 수준 목표 위반 수준의 총 합계를 최소화하는 것을 목표로 한다. 이때, 서비스 수준 목표인식 기반의 최소 평 균 예상 지연시간을 통한 스케쥴링 정책은 위반 비율(즉, 주어진 서비스 수준 목표를 위반하는 추론 비율)이 아 니라 서비스 수준 목표 위반 정도와 관련이 있으며, 서비스 수준 목표 위반율을 줄일 뿐만 아니라 기아 문제도 제거하려고 시도한다. 서비스 수준 목표 위반율을 최소화하도록 항상 긴 작업보다 작은 스케쥴링을 우선시한다 는 관찰에서 도출된 것이다. 소수를 희생시킴으로써 많은 양을 구하는 것이 실제로 비율 면에서 우수하기 때문 에 직관적이며, 대신 예정된 머신러닝 모델 간의 공정성을 제공하기 위하여 운영 체제의 다소 일반적인 스케쥴 링 메커니즘에서 통찰력을 찾고, 노후화 및 서비스 수준 목표 위반 정도를 사용하여 스케쥴링 계획에 활용할 수 있다. 이렇게 하면, 시간이 흐를수록 부족한 작업의 위반 정도가 커질 것으로 예상되므로 스케쥴링에서 우선순 위를 정해야 한다. 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책에 대하여 설명하기로 한다. 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책은 시스템 처리량(즉, 평균 추론 소요 시간의 역수)과 서비스 수준 목표 사이의 균형을 맞추면, 여전히 추론 작업을 비선점적으로 전송하며, 특 정 경우에는 스케쥴링 기능을 크게 제한한다. 예를 들면, 몇 가지 긴 작업이 이미 모든 하드웨어 플랫폼(프로 세서)을 점유하고 있고 상당한 시간 내에 계산을 완료할 것으로 예상되는 서비스 수준 목표 인식 기반의 최소평균 예상 지연시간을 통한 스케쥴러의 손이 묶여 있으며, 이는 결국 속도와 정도 측면에서 모두 상당한 서비스 수준 목표 위반을 야기할 것이다. 대규모 서비스 수준 목표 위반 문제를 해결하기 위하여 계산을 일련의 추론 작업으로 나타낼 수 있는 복수의 계 층으로 구성된 머신러닝 모델의 고유한 알고리즘 속성을 활용할 수 있다. 이를 위해, 대형 머신러닝 모델을 더 작지만 균일한 크기의 하위 모델로 분할하고, 분할된 하위 모델별로 하위 작업을 채워 스케쥴링 목적에 대한 선 점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선 점을 통한 스케쥴링 정책이 제안될 수 있다. 모델 슬라이싱과 같은 오버헤드가 단일 대형 추론 실행 대신 복수 개의 작은 추론 실행을 시작한다. 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴 링이 항상 활성화인 것은 아니며, 대신 사전 예방으로 인한 서비스 수준 목표 위반 정도의 감소가 오버헤드보다 훨씬 클 것으로 예상되는 경우에만 활성화될 수 있다. 도 3을 참고하면, 최소 평균 지연시간을 통한 스케쥴링 동작을 설명하기 위한 도면이다. 도 3은 최소 평균 지연시간을 통한 스케쥴링 동작을 설명하기 위한 알고리즘(제1 알고리즘)이다. 제1 알고리즘 에서 세 가지의 입력 데이터가 사용될 수 있다. T는 주기적으로 호출되는 런타임의 특정 지점에서 스케쥴러에게 주어진 일련의 추론 작업 집합이다. 스케 쥴링 시간대는 경험적으로 결정되는 구성 가능한 매개변수이다. P는 주어진 엣지 플랫폼에서 사용할 수 있는 프로세서 집합을 의미한다. 최신 엣지 플랫폼에는 CPU와 같은 기존의 프로세서뿐만 아니라 GPU, DSP, NPU와 같은 다양한 가속기 등 다양한 하드웨어 프로세서 집합이 점점 더 많이 장착될 수 있다. L (T, P)는 (추론 작업, 하드웨어 플랫폼) 쌍에서 관련 지연시간까지의 매핑 집합을 의미한다. 추론 지연 시간은 결정론적이고 정확한 지연시간 예측을 가능하게 하는 하드웨어 플랫폼의 모델 및 컴퓨팅 기능의 알고리 즘 속성에 크게 의존한다. 앞서 설명한 바와 같이, 프로파일 정보는 오프라인 프로파일링을 통해 사전에 수집 되며, 런타임 스케쥴러는 단순히 매핑 테이블을 조회하여 지연시간을 획득한다. 알고리즘의 출력은 매핑된 하 드웨어 플랫폼과 요청 대기열의 예약된 위치를 포함하는 스케쥴링 결정이다. 도 3의 스케쥴링 알고리즘은 두 단계로 구성될 수 있다. 평가 단계에서 먼저 가능한 모든 작업-플랫폼 매핑을 찾아 후보 집합으로 수집할 수 있다(5행). 그런 다음 후보를 반복하여 후보별 점수를 계산할 수 있다(6-9행). 후보 별 점수를 계산하기 위해 플랫폼 p에서 프로파일링된 작업 t의 지연시간과 이미 예약이 보류 중인 작업으로 인한 현재 대기 시간의 합계인 예상 지연시간을 추정할 수 있다(9행). 최소 예상 대기 시간을 제공하 는 후보의 우선순위를 지정하려고 하기 때문에 계산된 예상 대기 시간을 역순으로 설정하고 모든 작업에 대해 누적할 수 있다. 평가 단계 후 후보별 점수(c)를 획득하고, 이는 선택 단계에서 차례로 사용될 수 있다. 선택 단계에서, 수집된 점수를 살펴보고 어떤 작업 대 플랫폼 매핑이 최소 평균 예상 지연시간을 생성하는지 파 악할 수 있다(11행). 매핑이 결정되면 작업이 각 플랫폼에 할당될 수 있다(13행). 각 플랫폼에는 요청 우선순 위 대기열이 있다. 이러한 요청 우선순위 대기열은 과거의 일정(스케쥴) 결정에 기초하여 예약된(스케쥴링된) 작업을 순서대로 누적할 수 있다. 스케쥴링 작업 t는 평균 예상 지연시간을 최소화하는 방식으로 요청 우선순 위 대기열에서 보류 중인 작업 사이에 삽입될 수 있다. 이러한 방식으로 제안된 2 단계 스케쥴링 메커니즘은 검색 공간 탐색 비용을 효과적으로 줄일 수 있다. 도 4를 참고하면, 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 동작을 설명하기 위 한 도면이다. 도 4는 최소 평균 지연시간을 통한 스케쥴링 동작을 설명하기 위한 알고리즘이다(알고리즘 2). 알고리즘 2는 최소 평균 지연시간 알고리즘을 기반으로 구축된 SLO-MAEL(SLO-Aware MAEL) 스케쥴링 알고리즘으로, 또 다른 목 표인 서비스 수준 목표를 추적하도록 설계될 수 있다. 알고리즘 2에서 네 가지의 입력 데이터가 사용될 수 있 다. T는 주기적으로 호출되는 런타임의 특정 지점에서 스케쥴러에게 주어진 일련의 추론 작업 집합이다. 스케 쥴링 시간대는 경험적으로 결정되는 구성 가능한 매개변수이다. P는 주어진 엣지 플랫폼에서 사용할 수 있는 프로세서 집합을 의미한다. 최신 엣지 플랫폼에는 CPU와 같은 기존의 프로세서뿐만 아니라 GPU, DSP, NPU와 같은 다양한 가속기 등 다양한 하드웨어 프로세서 집합이 점점 더많이 장착될 수 있다. L (T, P)는 (추론 작업, 하드웨어 플랫폼) 쌍에서 관련 지연시간까지의 매핑 집합을 의미한다. 추론 지연 시간은 결정론적이고 정확한 지연시간 예측을 가능하게 하는 하드웨어 플랫폼의 모델 및 컴퓨팅 기능의 알고리 즘 속성에 크게 의존한다. 앞서 설명한 바와 같이, 프로파일 정보는 오프라인 프로파일링을 통해 사전에 수집 되며, 런타임 스케쥴러는 단순히 매핑 테이블을 조회하여 지연시간을 획득한다. 알고리즘의 출력은 매핑된 하 드웨어 플랫폼과 요청 대기열의 예약된 위치를 포함하는 스케쥴링 결정이다. SLO(T)는 작업 별 서비스 수준 목표의 요구 사항을 의미한다. 기본적으로, 점수 기반 우선순위 스케쥴링 방법은 최소 평균 지연시간 알고리즘의 방법과 동일하다. 그러나 평 가 단계에서 각각 평균 예상 지연시간 및 SLO에 대한 점수를 나타내는 두 개의 독립적인 점수, 즉, score_ael 및 score_slo를 계산할 수 있다. 점수를 계산하기 전에, 스케쥴러는 먼저 예상 대기 시간이 필요한 서비스 수 준 목표보다 큰 지 확인할 수 있다(10행). 먼저 예상 대기 시간이 필요한 서비스 수준 목표보다 클 경우(YES), 작업이 서비스 수준 목표를 위반할 것으로 예상됨을 의미하며 예상 대기 시간을 계산하는 대신 스케쥴러는 서비 스 수준 목표의 위반 정도를 계산할 수 있다. 서비스 수준 목표의 위반 정도는 서비스 수준 목표의 요구 사항 에 따라 예상되는 대기 시간을 정규화하여 계산할 수 있다. 그런 다음, 서비스 수준 목표의 위반 정도의 음수 값을 누적할 수 있다(11행). 이런 식으로, 예약된 작업 사이에 서비스 수준 목표 위반이 적어도 하나 이상 있 는 경우, score_slo에 음수 값이 포함될 수 있다. 선택 단계에서, 후보가 더 큰 점수 값을 가질수록 후보가 더 나은 스케쥴링 결정을 내리도록 점수가 설계 되었기 때문에 간단하게 스케쥴링을 결정할 수 있다. 도 5를 참고하면, 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 동작을 설명하 기 위한 도면이다. 도 5는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 동작을 설명하기 위한 알 고리즘(알고리즘 3)이다. 알고리즘 3은 서비스 수준 목표 위반을 더욱 줄이기 위해 모델 슬라이싱을 활용하여 비선점 하드웨어 및 소프트웨어 추론 프레임 워크에서도 선점을 효과적으로 활성화할 수 있다. 알고리즘 3의 입력 및 출력은 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 알고리즘의 입력 및 출력과 동일하다. 그러나 앞서 설명한 알고리즘들과 달리 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스 케쥴링 알고리즘은 상태 저장 변수인 슬라이스 모드(SliceMode)를 유지하며, 이는 모델 슬라이싱을 활성화 및 비활성화하는 플래그 스위치이다. 플래그 플래그를 설정하거나 해제하기 위해 스케쥴러는 모델 슬라이싱이 서 비스 수준 목표 위반의 부작용을 줄이는 것이 얼마나 유익한 지 모니터링하고 신중하게 설정/해제를 결정할 수 있다. 알고리즘 3을 상태 저장으로 선택한 이유는 스케쥴러가 예측적으로 슬라이싱을 활성화하여 이미 슬라이 싱된 작은 작업이 보이지 않는 큰 작업의 잠재적인 서비스 수준 목표 위반을 방지할 수 있도록 해야 하기 때문 이다. 모델 슬라이싱은 \"짧게\" 수신되는 작업이 \"길게\" 이미 예약된 작업을 선점하는 경우에 유용하다. 또한, 모델 슬라이싱에는 상당한 양의 지연시간 오버 헤드가 수반된다. 이에 따라 서비스 수준 목표의 위반 감소를 얻지 않고 모델 슬라이싱을 활성화하면 성능 저하만 부과되며, 이는 추측 모델 슬라이싱 메커니즘을 통해 피할 수 있 다. 평가 단계에서, 모델 슬라이싱이 활성화되어 있는지 확인하는 조건부 블록을 가지고 있다(3-7행). 모델 슬라이 싱이 활성화되어 있을 경우(YES), 스케쥴러는 중복된 작업의 계산(5-6행)을 방지하기 위해, 작업 집합(T)에서 원래의 큰 작업(t)을 제거하는 동안, 추론 작업(t)을 슬라이스된 하위 작업(sub_t)의 집합(T')으로 분할하고, 모든 하위 작업을 작업 집합(T)에 삽입할 수 있다. 모든 모델이 분할되는 것은 아니며 기 설정된 크기 이상(큰) 모델만 분할될 수 있다. 슬라이스 여부를 결정하기 위한 임계 값은 경험적으로 선택되며 슬라이싱 메 커니즘은 하위 작업을 사용하는 스케쥴링이 더 쉽게 관리할 수 있도록 균등하게 균형 잡힌 하위 작업을 생성하 는 경향이 있다. 알고리즘 3의 간결함을 위해 슬라이싱 대상 모델을 선택하는 방법과 관련하여 위의 세부 정보 가 생략될 수 있다. 슬라이싱이 큰 작업을 추론 요청 작업 집합에서 기능적으로 동일한 하위 작업으로 대체하기 때문에 나머지 평가 단계는 업데이트할 필요가 없다. 따라서 최적화된 스케쥴링 결정을 원활하게 식별할 수 있다. 선택 단계에서, 슬라이스 모드 플래그(24-27행)를 업데이트하는 과정에서 약간의 차이가 있다. 요청 우선순위 대기열에 작업이 삽입되는 동안 슬라이스 모드가 비활성화 되어 있으면 대기중인 긴 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상되는지 확인할 수 있다. 조건이 충족되면 슬라이스모드가 활성화되고, 그렇지 않으면 슬라이드 모드가 비활성화된 상태로 유지될 수 있다. 다시 말해서, 대기중 인 긴 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상될 경우, 슬라이스 모드가 활성화될 수 있고, 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반하지 않을 것으로 예상될 경우, 슬라이스 모드가 비활성화된 상태로 유지될 수 있다. 슬라이스 모드가 이미 활성화되어 있 을 경우, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되는지 확인할 수 있다. 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되는 것으로 판단할 경우(YES), 슬라이스 모드는 True로 유지되고, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제 거하는 데 도움이 되지 않는 것으로 판단할 경우, 슬라이스 모드가 비활성화될 수 있다. 이때, 종속 하위 작업 의 실행이 완료될 때까지 후속 하위 작업의 전송(dispatch)을 중지하여 슬라이스된 하위 작업 간의 종속성을 보 장할 수 있다. 도 6은 일 실시예에 있어서, 스케쥴링 시스템의 구성을 설명하기 위한 블록도이고, 도 7은 일 실시예에 있어서, 머신러닝 추론 작업을 위한 스케쥴링 방법을 설명하기 위한 흐름도이다. 스케쥴링 시스템의 프로세서는 작업 요청 수신부 및 자원 운영부를 포함할 수 있다. 이러한 프 로세서의 스케쥴링 시스템에 저장된 프로그램 코드가 제공하는 제어 명령에 따라 프로세서에 의해 수행되는 서 로 다른 기능들(different functions)의 표현들일 수 있다. 프로세서 및 프로세서의 구성요소들은 도 7의 머신 러닝 추론 작업을 위한 스케쥴링 방법이 포함하는 단계들(710 내지 720)을 수행하도록 스케쥴링 시스템을 제어 할 수 있다. 이때, 프로세서 및 프로세서의 구성요소들은 메모리가 포함하는 운영체제의 코드와 적어도 하나의 프로그램의 코드에 따른 명령(instruction)을 실행하도록 구현될 수 있다. 프로세서는 머신러닝 추론 작업을 위한 스케쥴링 방법을 위한 프로그램의 파일에 저장된 프로그램 코드를 메모 리에 로딩할 수 있다. 예를 들면, 스케쥴링 시스템에서 프로그램이 실행되면, 프로세서는 운영체제의 제어에 따라 프로그램의 파일로부터 프로그램 코드를 메모리에 로딩하도록 스케쥴링 시스템을 제어할 수 있다. 이때, 작업 요청 수신부 및 자원 운영부 각각은 메모리에 로딩된 프로그램 코드 중 대응하는 부분의 명령을 실행하여 이후 단계들(710 내지 720)을 실행하기 위한 프로세서의 서로 다른 기능적 표현들일 수 있다. 단계에서 작업 요청 수신부는 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 수신할 수 있다. 작업 요청 수신부는 이기종 프로세서로 구성된 엣지 시스템에 다중 머신러닝 모델의 추론 작업 요청을 연속적으로 수신할 수 있다. 단계에서 자원 운영부는 수신된 추론 작업 요청에 따라 서비스 수준 목표(Service-Level Objective; SLO) 인식 기반의 스케쥴링 정책에 기초하여 상기 엣지 시스템의 이기종 프로세서 자원을 운영할 수 있다. 일 례로, 자원 운영부는 스케쥴링 지점에서 예상되는 머신러닝 모델의 추론 작업에 대한 지연시간을 예측함에 따라 주어진 스케쥴링 시간대 동안 요청되고 누적된 모든 추론 작업의 평균 소요 시간을 최소화하기 위하여 최 소 평균 예상 지연시간을 통한 스케쥴링 정책을 설정할 수 있다. 자원 운영부는 주기적으로 호출되는 런 타임의 특정 지점에서 주어진 추론 작업과 엣지 시스템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하 고, 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후보 집합에 대한 후보별 점수를 계산할 수 있다. 자 원 운영부는 후보별 점수를 계산하기 위해 가용 가능한 프로세서에서 프로파일링된 작업의 지연시간과 이 미 예약이 보류 중인 작업으로 인한 현재 대기 시간의 합계인 예상 지연시간을 추정하고, 최소 예상 지연시간을 제공하는 후보의 우선순위를 지정하기 위하여 추정된 예상 지연시간이 역순으로 설정되고 모든 작업에 대하여 누적할 수 있다. 자원 운영부는 계산된 후보별 점수에 기초하여 추론 작업과 엣지 시스템에서 가용 가능 한 프로세서를 매핑한 후보 집합 중 최소 평균 예상 지연시간을 생성하는 후보를 결정하고, 결정된 후보에 포함 된 추론 작업을 결정된 후보에 포함된 프로세서에 할당할 수 있다. 자원 운영부는 프로세서에 존재하는 요청 우선순위 대기열을 통해 과거의 스케쥴 정보에 기초하여 예약된 작업을 순서대로 누적하고, 추론 작업을 평균 예상 지연시간을 최소화하는 방식으로 요청 우선순위 대기열에서 보류 중인 작업 사이에 삽입할 수 있다. 다른 예로서, 자원 운영부는 서비스 수준 목표에 대한 위반의 회피를 최소화한 후, 시스템 처리량을 고려 하여 서비스 수준 목표에 대한 위반이 발생할 것으로 예상됨에 따라 서비스 수준 목표에 대한 위반 수준의 총 합계를 최소화하기 위하여 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 정책을 설 정할 수 있다. 자원 운영부는 작업 별 서비스 수준 목표의 요구 사항에 기초하여 추론 작업과 엣지 시스 템에서 가용 가능한 프로세서를 매핑한 후보 집합을 수집하고, 수집된 후보 집합을 수집하는 과정을 반복함에 따라 후보 집합에 대한 후보별 점수를 계산할 수 있다. 자원 운영부는 평균 예상 지연시간과 서비스 수준목표에 대한 점수를 계산하고, 점수를 계산하기 전에 예상 대기 시간이 필요한 서비스 수준 목표보다 큰 지 확 인하고, 예상 대기 시간이 필요한 서비스 수준 목표보다 클 경우, 작업이 서비스 수준 목표를 위반할 것으로 예 상되어 예상 대기 시간을 계산하는 대신, 서비스 수준 목표의 위반 정도를 계산하고, 계산된 서비스 수준 목표 의 위반 정도의 음수값을 누적할 수 있다. 자원 운영부는 계산된 후보별 점수에 기초하여 기 설정된 기준 이상의 점수를 가진 후보를 결정하고, 결정된 후보에 포함된 추론 작업을 상기 결정된 후보에 포함된 프로세서 에 할당할 수 있다. 또 다른 예로서, 자원 운영부는 복수의 계층으로 구성된 머신러닝 모델의 속성을 활용하여 대형의 머신러 닝 모델을 더 작지만 균일한 크기의 하위 머신러닝 모델로 분할하고, 분할된 하위 머신러닝 모델 별로 하위 작 업을 채워 스케쥴링 목적에 대한 선점 효과를 달성하는 모델 슬라이싱 기법을 활용하는 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 정책을 설정할 수 있다. 자원 운영부는 모델 슬라 이싱의 활성화 또는 비활성화 여부를 확인하고, 모델 슬라이싱이 활성화되어 있을 경우, 중복된 작업의 계산을 방지하기 위해 작업 집합에서 추론 작업을 제거하는 동안 추론 작업을 슬라이스된 하위 작업의 집합으로 분할하 고, 슬라이스된 하위 작업을 작업 집합에 삽입할 수 있다. 자원 운영부는 요청 우선순위 대기열에 슬라이 스된 하위 작업을 삽입하는 동안 슬라이스 모드가 비활성화 되어 있으면 대기중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상되는지 확인하고, 대기중인 지연 작업으로 인해 지정 된 작업이 서비스 수준 목표 요구 사항을 위반할 것으로 예상될 경우, 슬라이스 모드를 활성화 하고, 대기 중인 지연 작업으로 인해 지정된 작업이 서비스 수준 목표 요구 사항을 위반하지 않을 것으로 예상될 경우, 슬라이스 모드를 비활성화 할 수 있다. 자원 운영부는 슬라이스 모드가 이미 활성화되어 있을 경우, 슬라이스된 모 델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되는지 확인하고, 슬라이스된 모델의 조각 이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되는 것으로 판단할 경우, 슬라이스 모드를 활성화 상태로 유지하고, 슬라이스된 모델의 조각이 잠재적인 서비스 수준 목표 위반을 제거하는 데 도움이 되지 않는 것으로 판단할 경우, 슬라이스 모드를 비활성화 할 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로 세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴 퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설"}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "명된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소 (processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치 는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터 는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등 을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판 독 가능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도 록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2021-0081242", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다."}
{"patent_id": "10-2021-0081242", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 있어서, 이기종 플랫폼 엣지 장치에서 다양한 기계학습 모델 작업에 대한 기계학습 추론을 나타낸 예이다. 도 2는 일 실시예에 있어서, 스케쥴링 동작을 설명하기 위한 도면이다. 도 3은 일 실시예에 있어서, 최소 평균 지연시간을 통한 스케쥴링 동작을 설명하기 위한 도면이다. 도 4는 일 실시예에 있어서, 서비스 수준 목표인식 기반의 최소 평균 예상 지연시간을 통한 스케쥴링 동작을 설 명하기 위한 도면이다. 도 5는 일 실시예에 있어서, 서비스 수준 목표 인식 기반의 최소 평균 예상 지연시간 선점을 통한 스케쥴링 동 작을 설명하기 위한 도면이다. 도 6은 일 실시예에 있어서, 스케쥴링 시스템의 구성을 설명하기 위한 블록도이다. 도 7은 일 실시예에 있어서, 머신러닝 추론 작업을 위한 스케쥴링 방법을 설명하기 위한 흐름도이다."}
