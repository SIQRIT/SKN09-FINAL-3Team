{"patent_id": "10-2019-0094523", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0098106", "출원번호": "10-2019-0094523", "발명의 명칭": "배치 정규화 레이어 트레이닝 방법", "출원인": "엘지전자 주식회사", "발명자": "오승균"}}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "신경망 학습 장치에 있어서, 인공 신경망 모델 학습을 위한 훈련 데이터를 입력하기 위한 입력부; 및상기 훈련 데이터를 이용하여 상기 인공 신경망 모델을 훈련(training)시키는 러닝 프로세서를 포함하고, 상기 인공 신경망 모델은,제 1 신경망 레이어와 제 2 신경망 레이어 사이에 배치 정규화 레이어(batch normalization layer)를 포함하고, 상기 제 1 신경망 레이어는, 상기 훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받아 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하며, 상기 배치 정규화 레이어는,상기 미니 배치 단위로 생성된 제 1 레이어 출력값들을 수신하고, 상기 수신된 제 1 레이어 출력값들에 대하여배치 정규화 변환(batch normalization transform)을 수행하여 배치 정규화 레이어 출력을 생성하고, 상기 생성된 배치 정규화 레이어 출력을 상기 제 2 신경망 레이어에 대한 입력으로 제공하며, 상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 초기 신경망또는 이전의 신경망에서 획득된 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 1 미니 배치이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서, 상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 손실 함수의 평균에 대한 그래디언트를 0 으로 설정하여 변환하고,현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터세트(set)를 생성하고, 상기 생성된 데이터 세트의 정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2019-0098106-2-신경망 학습 장치에 있어서, 인공 신경망 모델 학습을 위한 훈련 데이터를 입력하기 위한 입력부; 및상기 훈련 데이터를 이용하여 상기 인공 신경망 모델을 훈련(training)시키는 러닝 프로세서를 포함하고, 상기 인공 신경망 모델은,제 1 신경망 레이어와 제 2 신경망 레이어 사이에 배치 정규화 레이어(batch normalization layer)를 포함하고, 상기 제 1 신경망 레이어는, 상기 훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받아 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하며, 상기 배치 정규화 레이어는,상기 미니 배치 단위로 생성된 제 1 레이어 출력값들을 수신하고, 상기 수신된 제 1 레이어 출력값들에 대하여배치 정규화 변환(batch normalization transform)을 수행하여 배치 정규화 레이어 출력을 생성하고, 상기 생성된 배치 정규화 레이어 출력을 상기 제 2 신경망 레이어에 대한 입력으로 제공하며, 상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화통계값을 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서, 상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 4 항에 있어서, 상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 상기 생성된 데이터 세트의정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항 내지 제 6 항에 있어서, 상기 정규화 통계값은,각각의 미니 배치 세트 또는 데이터 세트에서 연산되는 각 세트 당 데이터 개수, 평균 및 표준편차를 포함하는신경망 학습 장치."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "공개특허 10-2019-0098106-3-배치 정규화 레이어 트레이닝 방법에 있어서,훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받는 단계;미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하는 단계;상기 제 1 레이어 출력값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환(batchnormalization transform)하는 단계; 및 상기 배치 정규화 변환을 이용하여 상기 제 1 레이어 출력값들을 정규화하여 출력하는 단계를 포함하고,상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 초기 신경망또는 이전의 신경망에서 획득된 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝 방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서, 상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 1 미니 배치이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝 방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 8 항에 있어서, 상기 배치 정규화 변환은,손실 함수의 표준편차에 대한 그래디언트 및 손실 함수의 평균에 대한 그래디언트를 0 으로 설정하여 변환하고,현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터세트(set)를 생성하고, 상기 생성된 데이터 세트의 정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "배치 정규화 레이어 트레이닝 방법에 있어서,훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받는 단계;미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하는 단계;상기 제 1 레이어 출력값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환(batchnormalization transform)하는 단계; 및 상기 배치 정규화 변환을 이용하여 상기 제 1 레이어 출력값들을 정규화하여 출력하는 단계를 포함하고,상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝 방법.공개특허 10-2019-0098106-4-청구항 12 제 11 항에 있어서, 상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11 항에 있어서, 상기 배치 정규화 변환은,현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 상기 생성된 데이터 세트의정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함하는 배치 정규화 레이어 트레이닝 방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 8 항 내지 제 13 항에 있어서, 상기 정규화 통계값은,각각의 미니 배치 세트 또는 데이터 세트에서 연산되는 각 세트 당 데이터 개수, 평균 및 표준편차를 포함하는배치 정규화 레이어 트레이닝 방법."}
{"patent_id": "10-2019-0094523", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 8 항 내지 제 13 항 중 어느 한 항의 방법을 구현하기 위한 프로그램이 기록된 컴퓨터로 판독 가능한 기록매체."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "한정된 연산 처리 능력 및 저장 공간을 가진 신경망 학습 장치에서 사용 가능한 배치 정규화 레이어 트레이닝 방 법이 개시된다. 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법은, 손실 함수의 표준편차 및 평 균에 대한 그래디언트를 0 으로 설정하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함 수의 그래디언트에 적용하여 배치 정규화 변환을 수행할 수 있다. 본 발명의 신경망 학습 장치는 인공 지능(Artificial Intelligence) 모듈, 드론(Unmanned Aerial Vehicle, UAV), 로봇, 증강 현실(Augmented Reality, AR) 장치, 가상 현실(virtual reality, VR), 5G 네트워크 서비스와 관련된 장치 등과 연계 혹은 융복합될 수 있다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 배치 정규화 레이어(batch normalization layer) 트레이닝 방법에 관한 것으로, 보다 구체적으로는 온 디바이스(on-device) 된 신경망 학습 장치에서 배치 정규화 레이어를 트레이닝하는 방법에 관한 것이다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 인공 지능(Artificial intelligence) 기술이 발달함에 따라서 인공 지능 기술이 다양한 산업에서 응용 및 도입되고 있다. 특히, 최근 범용 프로세서 및 전용 가속기 등의 처리 장치의 성능 향상으로 많은 연산량이 필요한 인공 지능 딥 러닝(deep learning) 알고리즘을 구동할 수 있게 되어, 다양한 전자 장치에서 기존의 기능을 뛰어넘는 새로운 기능을 수행할 수 있게 되었다. 로봇청소기를 예로 들면, 고유의 역할인 청소 기능 이외에도 장착된 카메라를 이용하여, 공간 내의 사물을 인식 하고, 충돌 회피, 최적 경로 설정, 방범 등 부가 기능을 수행할 수 있다. 과거에는 사물 인식 기법이 인식의 대상이 되는 물체의 고유 특징을 추출하고 비교하는 레거시 알고리즘에 기반 하여 적용되었으나, 최근에는 다양한 물체에 대한 인식률의 정확도를 향상시키기 위해서 인공 지능 딥 러닝 알 고리즘에 기반하여 적용하려는 연구가 시도되고 있다. 최근 딥 러닝을 사용하는 사물 인식 알고리즘은 일반적으로 컨볼루션 레이어(convolution layer)로 구성된 심층 신경망(Deep Neural Network, DNN) 모델이 많이 연구되고 있다. 다만, 심층 신경망 모델의 학습(훈련)은 이전 레이어들의 파라미터 변화로 인한 각 레이어의 입력값들 분포 (distribution)의 변화 때문에 신경망 학습 과정에서 가중치 소실(Gradient Vanishing) 또는 가중치 폭발 (Gradient Exploding)이 발생할 수 있는 문제점이 존재하였다. 따라서, 심층 신경망 모델을 학습시키기 위해서는 학습률을 낮게 설정하여야 하고, 초기 파라미터들을 신중하게 결정해야 하는 조건이 필요하게 되었고, 학습 시간이 지체되거나 비선형적인 학습의 난이도는 더욱 올라가는 문 제점을 내포하고 있었다. 이러한 문제점들을 해결하기 위해서 미국공개특허 제2016/0217368호는 각 특징(feature) 별로 평균과 표준편차 를 계산해서 정규화하는 배치 정규화(batch normalization) 방법을 개시하고 있다. 이런 배치 정규화 방법은 미니 배치 단위로 정규화하여 학습하기 때문에 인공 신경망 학습 중에 발생할 수 있는 내부 공변량 이동(internal covariate shift)을 감소시킬 수 있으며, 학습 결과가 빠른 속도로 수렴하여 최근의 딥 러닝 알고리즘에서 많이 도입하고 있다. 다만, 배치 정규화 방법에서 사용되는 배치 정규화 레이어(batch normalization layer, BN layer)는 미니 배치 (mini batch) 단위의 데이터들의 통계값을 이용하기 때문에 빠른 연산 처리 능력과 많은 저장 공간을 필요로 하 는 문제점이 있었다. 또한, 배치 정규화 방법은 각 미니 배치 단위로 통계값을 계산하기 때문에 학습(training)을 바로 진행하지 못 하고, 각 미니 배치 단위로 진행되어 학습이 지연되는 문제점이 존재하였다. 따라서, 한정된 연산 처리 능력과 저장 공간을 가진 온 디바이스(on-device)된 신경망 학습 장치에서 배치 정규 화 방법을 수행하기 위한 연구가 진행되고 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 미국공개특허 제2016/0217368호"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하기 위해 창안된 것으로, 한정된 연산 처리 능력 및 저장 공간을 가진 신 경망 장치에서 배치 정규화 레이어 트레이닝 방법을 제공하는 것이다. 또한, 학습에서 처리 지연이 발생하는 문제점을 해결하기 위해서 현재 미니 배치 단위의 통계값 계산 없이 배치 정규화 변환을 수행하는 배치 정규화 레이어 트레이닝 방법을 제공하는 것이다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 신경망 학습 장치는, 인공 신경망 모델 학습을 위한 훈련 데이터를 입력하기 위한 입력부 및 훈련 데이터를 이용하여 인공 신경망 모델을 훈련(training)시키는 러닝 프로세서를 포함하고, 인공 신경망 모델은, 제 1 신경망 레이어와 제 2 신경망 레이어 사이에 배치 정규화 레이어(batch normalization layer)를 포함하고, 제 1 신경망 레이어는, 훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받아 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하며, 배치 정규화 레이어는, 미니 배치 단위로 생성된 제 1 레이어 출력값들을 수신하고, 수신된 제 1 레이어 출력값들에 대하여 배치 정규화 변환(batch normalization transform)을 수행하여 배치 정규화 레이어 출력을 생성하고, 생성된 배치 정규화 레이어 출력을 제 2 신경망 레이어에 대한 입력으로 제공하며, 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대 한 그래디언트를 0 으로 설정하여 변환하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 신경망 학습 장치에 있어서, 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 1 미니 배치 이전에 연산한 미니 배 치 세트(set)의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 신경망 학습 장치에 있어서, 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 손실 함수의 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 현재 인덱스 i 를 제외 한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 생성된 데이터 세트의 정규화 통계값을 계산하고, 계산된 데이터 세트의 정규화 통계값을 손실 함수 의 그래디언트에 적용하여 변환할 수 있다. 본 발명의 일 실시예에 따른 신경망 학습 장치는, 인공 신경망 모델 학습을 위한 훈련 데이터를 입력하기 위한 입력부 및 훈련 데이터를 이용하여 인공 신경망 모델을 훈련(training)시키는 러닝 프로세서를 포함하고, 인공 신경망 모델은, 제 1 신경망 레이어와 제 2 신경망 레이어 사이에 배치 정규화 레이어(batch normalization layer)를 포함하고, 제 1 신경망 레이어는, 훈련 데이터들을 미니 배치(mini-batch) 단위로 입력 받아 미니 배 치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하며, 배치 정규화 레이어는, 미니 배치 단위로 생성된 제 1 레이어 출력값들을 수신하고, 수신된 제 1 레이어 출력값들에 대하여 배치 정규화 변환(batch normalization transform)을 수행하여 배치 정규화 레이어 출력을 생성하고, 생성된 배치 정규화 레이어 출력을 제 2 신경망 레이어에 대한 입력으로 제공하며, 배치 정규화 변환은, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하 고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 신경망 학습 장치에 있어서, 배치 정규화 변환은, 현재 인덱스 i 에 대한 데 이터 값만을 사용하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 손실 함수 의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 신경망 학습 장치에 있어서, 배치 정규화 변환은, 현재 인덱스 i 에 대한 데 이터 값만을 사용하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 생성된 데이터 세트의 정규화 통계값을 계산하고, 계 산된 데이터 세트의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 신경망 학습 장치에 있어서, 정규화 통계값은, 각각의 미니 배치 세트 또는 데이터 세트에서 연산되는 각 세트 당 데이터 개수, 평균 및 표준편차를 포함할 수 있다. 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법은, 훈련 데이터들을 미니 배치(mini-batch) 단 위로 입력 받는 단계, 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하는 단계, 제 1 레이어 출력 값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환(batch normalization transform)하는 단계 및 배치 정규화 변환을 이용하여 제 1 레이어 출력값들을 정규화하여 출력하는 단계를 포함하고, 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 초 기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 있어서, 배치 정규화 변환은, 손실 함 수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 있어서, 배치 정규화 변환은, 손실 함 수의 표준편차에 대한 그래디언트 및 손실 함수의 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 생성된 데이터 세트의 정규화 통계값을 계산하고, 계산된 데이터 세트의 정규화 통계값을 손 실 함수의 그래디언트에 적용하여 변환하는 단계를 포함할 수 있다. 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법은, 훈련 데이터들을 미니 배치(mini-batch) 단 위로 입력 받는 단계, 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성하는 단계, 제 1 레이어 출력 값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환(batch normalization transform)하는 단계 및 배치 정규화 변환을 이용하여 제 1 레이어 출력값들을 정규화하여 출력하는 단계를 포함하고, 배치 정규화 변환은, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 있어서, 배치 정규화 변환은, 현재 인 덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포함할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 있어서, 배치 정규화 변환은, 현재 인 덱스 i 에 대한 데이터 값만을 사용하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 생성된 데이터 세트의 정규화 통계 값을 계산하고, 계산된 데이터 세트의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변환하는 단계를 포 함할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 있어서, 정규화 통계값은, 각각의 미니 배치 세트 또는 데이터 세트에서 연산되는 각 세트 당 데이터 개수, 평균 및 표준편차를 포함할 수 있다. 한편, 본 발명의 일 실시예로써, 전술한 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록매체가 제공될 수 있다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법은 현재 미니 배치 단위의 통계값 계산 없이 배 치 정규화 변환을 수행함으로써 한정된 연산 처리 능력 및 저장 공간을 가진 신경망 장치에서도 사용될 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법은 현재 미니 배치 단위의 통계값 계산 없 이 배치 정규화 변환을 수행함으로써 학습 과정에서의 처리 지연 문제를 감소시킬 수 있다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 명세서에 개시된 실시 예를 상세히 설명하되, 도면 부호에 관계없이 동일하거 나 유사한 구성요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 이하의 설명에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 명세서 작성의 용이함만이 고려되어 부여되거나 혼용 되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 또한, 본 명세서에 개시된 실시 예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 명세서에 개시된 실시 예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부된 도면은 본 명세서에 개시된 실시 예를 쉽게 이 해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명세서에 개시된 기술적 사상이 제한되지 않으며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소 들은 상기 용어들에 의해 한정되지는 않는다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 인공 지능(artificial intelligence, AI)은 인간의 지능으로 할 수 있는 사고, 학습, 자기계발 등을 컴퓨터가 할 수 있도록 하는 방법을 연구하는 컴퓨터 공학 및 정보기술의 한 분야로, 컴퓨터가 인간의 지능적인 행동을 모방할 수 있도록 하는 것을 의미한다. 또한, 인공지능은 그 자체로 존재하는 것이 아니라, 컴퓨터 과학의 다른 분야와 직간접으로 많은 관련을 맺고 있다. 특히 현대에는 정보기술의 여러 분야에서 인공지능적 요소를 도입하여, 그 분야의 문제 풀이에 활용하려 는 시도가 매우 활발하게 이루어지고 있다. 머신 러닝(machine learning)은 인공지능의 한 분야로, 컴퓨터에 명시적인 프로그램 없이 배울 수 있는 능력을 부여하는 연구 분야이다. 구체적으로 머신 러닝은, 경험적 데이터를 기반으로 학습을 하고 예측을 수행하고 스스로의 성능을 향상시키는 시스템과 이를 위한 알고리즘을 연구하고 구축하는 기술이라 할 수 있다. 머신 러닝의 알고리즘들은 엄격하게 정해진 정적인 프로그램 명령들을 수행하는 것이라기보다, 입력 데이터를 기반으로 예측이나 결정을 이끌어내기 위해 특정한 모델을 구축하는 방식을 취한다. 용어 '머신 러닝'은 용어 '기계 학습'과 혼용되어 사용될 수 있다. 기계 학습에서 데이터를 어떻게 분류할 것인가를 놓고, 많은 기계 학습 알고리즘이 개발되었다. 의사결정나무 (Decision Tree)나 베이지안 망(Bayesian network), 서포트벡터머신(SVM: support vector machine), 그리고 인 공 신경망(ANN: Artificial Neural Network) 등이 대표적이다. 의사결정나무는 의사결정규칙(Decision Rule)을 나무구조로 도표화하여 분류와 예측을 수행하는 분석방법이다. 베이지안 망은 다수의 변수들 사이의 확률적 관계(조건부독립성: conditional independence)를 그래프 구조로 표현하는 모델이다. 베이지안 망은 비지도 학습(unsupervised learning)을 통한 데이터마이닝(data mining)에 적합하다. 서포트벡터머신은 패턴인식과 자료분석을 위한 지도 학습(supervised learning)의 모델이며, 주로 분류와 회귀 분석을 위해 사용한다. 인공신경망은 생물학적 뉴런의 동작원리와 뉴런간의 연결 관계를 모델링한 것으로 노드(node) 또는 처리 요소 (processing element)라고 하는 다수의 뉴런들이 레이어(layer) 구조의 형태로 연결된 정보처리 시스템이다. 인공 신경망은 기계 학습에서 사용되는 모델로써, 기계학습과 인지과학에서 생물학의 신경망(동물의 중추신경계 중 특히 뇌)에서 영감을 얻은 통계학적 학습 알고리즘이다. 구체적으로 인공신경망은 시냅스(synapse)의 결합으로 네트워크를 형성한 인공 뉴런(노드)이 학습을 통해 시냅 스의 결합 세기를 변화시켜, 문제 해결 능력을 가지는 모델 전반을 의미할 수 있다. 용어 인공신경망은 용어 뉴럴 네트워크(Neural Network)와 혼용되어 사용될 수 있다. 인공신경망은 복수의 레이어(layer)를 포함할 수 있고, 레이어들 각각은 복수의 뉴런(neuron)을 포함할 수 있다. 또한 인공신경망은 뉴런과 뉴런을 연결하는 시냅스를 포함할 수 있다.인공 신경망은 일반적으로 다음의 세가지 인자, 즉 다른 레이어의 뉴런들 사이의 연결 패턴 연결의 가 중치를 갱신하는 학습 과정 이전 레이어로부터 수신되는 입력에 대한 가중 합으로부터 출력값을 생성하는 활성화 함수에 의해 정의될 수 있다. 인공 신경망은, DNN(Deep Neural Network), RNN(Recurrent Neural Network), BRDNN(Bidirectional Recurrent Deep Neural Network), MLP(Multilayer Perceptron), CNN(Convolutional Neural Network)와 같은 방식의 네트 워크 모델들을 포함할 수 있으나, 이에 한정되지 않는다. 본 명세서에서 용어 '레이어'는 용어 '계층'과 혼용되어 사용될 수 있다. 인공신경망은 계층 수에 따라 단층 신경망(Single-Layer Neural Networks)과 다층 신경망(Multi-Layer Neural Networks)으로 구분된다. 일반적인 단층 신경망은, 입력층과 출력층으로 구성된다. 또한 일반적인 다층 신경망은 입력층(Input Layer)과 하나 이상의 은닉층(Hidden Layer), 출력층(Output Layer)으로 구성된다. 입력층은 외부의 자료들을 받아들이는 층으로서, 입력층의 뉴런 수는 입력되는 변수의 수와 동일하며, 은닉층은 입력층과 출력층 사이에 위치하며 입력층으로부터 신호를 받아 특성을 추출하여 출력층으로 전달한다. 출력층은 은닉층으로부터 신호를 받고, 수신한 신호에 기반한 출력 값을 출력한다. 뉴런간의 입력신호는 각각의 연결강도 (가중치)와 곱해진 후 합산되며 이 합이 뉴런의 임계치보다 크면 뉴런이 활성화되어 활성화 함수를 통하여 획득 한 출력값을 출력한다. 한편 입력층과 출력 층 사이에 복수의 은닉층을 포함하는 심층 신경망은, 기계 학습 기술의 한 종류인 딥 러닝 을 구현하는 대표적인 인공 신경망일 수 있다. 한편 용어 '딥 러닝'은 용어 '심층 학습'과 혼용되어 사용될 수 있다. 인공 신경망은 훈련 데이터(training data)를 이용하여 학습(training)될 수 있다. 여기서 학습이란, 입력 데이 터를 분류(classification)하거나 회귀분석(regression)하거나 군집화(clustering)하는 등의 목적을 달성하기 위하여, 학습 데이터를 이용하여 인공 신경망의 파라미터(parameter)를 결정하는 과정을 의미할 수 있다. 인공 신경망의 파라미터의 대표적인 예시로써, 시냅스에 부여되는 가중치(weight)나 뉴런에 적용되는 편향(bias)을 들 수 있다. 훈련 데이터에 의하여 학습된 인공 신경망은, 입력 데이터를 입력 데이터가 가지는 패턴에 따라 분류하거나 군 집화 할 수 있다. 한편 훈련 데이터를 이용하여 학습된 인공 신경망을, 본 명세서에서는 학습 모델(a trained model)이라 명칭 할 수 있다. 다음은 인공 신경망의 학습 방식에 대하여 설명한다. 인공 신경망의 학습 방식은 크게, 지도 학습, 비 지도 학습, 준 지도 학습(Semi-Supervised Learning), 강화 학 습(Reinforcement Learning)으로 분류될 수 있다. 지도 학습은 훈련 데이터로부터 하나의 함수를 유추해내기 위한 기계 학습의 한 방법이다. 그리고 이렇게 유추되는 함수 중, 연속적인 값을 출력하는 것을 회귀분석(Regression)이라 하고, 입력 벡터의 클래스(class)를 예측하여 출력하는 것을 분류(Classification)라고 할 수 있다. 지도 학습에서는, 훈련 데이터에 대한 레이블(label)이 주어진 상태에서 인공 신경망을 학습시킨다. 여기서 레이블이란, 훈련 데이터가 인공 신경망에 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결 과 값)을 의미할 수 있다. 본 명세서에서는 훈련 데이터가 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결과값)을 레이블 또 는 레이블링 데이터(labeling data)이라 명칭 한다. 또한 본 명세서에서는, 인공 신경망의 학습을 위하여 훈련 데이터에 레이블을 설정하는 것을, 훈련 데이터에 레 이블링 데이터를 레이블링(labeling) 한다고 명칭한다.이 경우 훈련 데이터와 훈련 데이터에 대응하는 레이블)은 하나의 트레이닝 셋(training set)을 구성하고, 인공 신경망에는 트레이닝 셋의 형태로 입력될 수 있다. 한편 훈련 데이터는 복수의 특징(feature)을 나타내고, 훈련 데이터에 레이블이 레이블링 된다는 것은 훈련 데 이터가 나타내는 특징에 레이블이 달린다는 것을 의미할 수 있다. 이 경우 훈련 데이터는 입력 객체의 특징을 벡터 형태로 나타낼 수 있다. 인공 신경망은 훈련 데이터와 레이블링 데이터를 이용하여, 훈련 데이터와 레이블링 데이터의 연관 관계에 대한 함수를 유추할 수 있다. 그리고, 인공 신경망에서 유추된 함수에 대한 평가를 통해 인공 신경망의 파라미터가 결정(최적화)될 수 있다. 비 지도 학습은 기계 학습의 일종으로, 훈련 데이터에 대한 레이블이 주어지지 않는다. 구체적으로, 비 지도 학습은, 훈련 데이터 및 훈련 데이터에 대응하는 레이블의 연관 관계 보다는, 훈련 데이터 자체에서 패턴을 찾아 분류하도록 인공 신경망을 학습시키는 학습 방법일 수 있다. 비 지도 학습의 예로는, 군집화 또는 독립 성분 분석(Independent Component Analysis)을 들 수 있다. 본 명세서에서 용어 '군집화'는 용어 '클러스터링'과 혼용되어 사용될 수 있다. 비지도 학습을 이용하는 인공 신경망의 일례로 생성적 적대 신경망(GAN: Generative Adversarial Network), 오 토 인코더(AE: Autoencoder)를 들 수 있다. 생성적 적대 신경망이란, 생성기(generator)와 판별기(discriminator), 두 개의 서로 다른 인공지능이 경쟁하며 성능을 개선하는 머신 러닝 방법이다. 이 경우 생성기는 새로운 데이터를 창조하는 모형으로, 원본 데이터를 기반으로 새로운 데이터를 생성할 수 있 다. 또한 판별기는 데이터의 패턴을 인식하는 모형으로, 입력된 데이터가 원본 데이터인지 또는 생성기에서 생성한 새로운 데이터인지 여부를 감별하는 역할을 수행할 수 있다. 그리고 생성기는 판별기를 속이지 못한 데이터를 입력 받아 학습하며, 판별기는 생성기로부터 속은 데이터를 입 력 받아 학습할 수 있다. 이에 따라 생성기는 판별기를 최대한 잘 속이도록 진화할 수 있고, 판별기는 원본 데 이터와 생성기에 의해 생성된 데이터를 잘 구분하도록 진화할 수 있다. 오토 인코더는 입력 자체를 출력으로 재현하는 것을 목표로 하는 신경망이다. 오토 인코더는 입력층, 적어도 하나의 은닉층 및 출력층을 포함한다. 이 경우 은닉 계층의 노드 수가 입력 계층의 노드 수보다 적으므로 데이터의 차원이 줄어들게 되며, 이에 따라 압축 또는 인코딩이 수행되게 된다. 또한 은닉 계층에서 출력한 데이터는 출력 계층으로 들어간다. 이 경우 출력 계층의 노드 수는 은닉 계층의 노 드 수보다 많으므로, 데이터의 차원이 늘어나게 되며, 이에 따라 압축 해제 또는 디코딩이 수행되게 된다. 한편 오토 인코더는 학습을 통해 뉴런의 연결 강도를 조절함으로써 입력 데이터가 은닉층 데이터로 표현된다. 은닉층에서는 입력층보다 적은 수의 뉴런으로 정보를 표현하는데 입력 데이터를 출력으로 재현할 수 있다는 것 은, 은닉층이 입력 데이터로부터 숨은 패턴을 발견하여 표현했다는 것을 의미할 수 있다. 준 지도 학습은 기계 학습의 일종으로, 레이블이 주어진 훈련 데이터와 레이블이 주어지지 않은 훈련 데이터를 모두 사용하는 학습 방법을 의미할 수 있다. 준 지도 학습의 기법 중 하나로, 레이블이 주어지지 않은 훈련 데이터의 레이블을 추론한 후 추론된 라벨을 이 용하여 학습을 수행하는 기법이 있으며, 이러한 기법은 레이블링에 소요되는 비용이 큰 경우에 유용하게 사용될 수 있다. 강화 학습은, 에이전트(Agent)가 매 순간 어떤 행동을 해야 좋을지 판단할 수 있는 환경이 주어진다면, 데이터 없이 경험으로 가장 좋을 길을 찾을 수 있다는 이론이다. 강화 학습은 주로 마르코프 결정 과정(MDP: Markov Decision Process)에 의하여 수행될 수 있다. 마르코프 결정 과정을 설명하면, 첫 번째로 에이전트가 다음 행동을 하기 위해 필요한 정보들이 구성된 환경이 주어지며, 두 번째로 그 환경에서 에이전트가 어떻게 행동할지 정의하고, 세 번째로 에이전트가 무엇을 잘하면 보상(reward)을 주고 무엇을 못하면 벌점(penalty)을 줄지 정의하며, 네 번째로 미래의 보상이 최고점에 이를 때까지 반복 경험하여 최적의 정책(policy)을 도출하게 된다. 인공 신경망은 모델의 구성, 활성 함수(Activation Function), 손실 함수(Loss Function) 또는 비용 함수(Cost Function), 학습 알고리즘, 최적화 알고리즘 등에 의해 그 구조가 특정되며, 학습 전에 하이퍼파라미터 (Hyperparameter)가 미리 설정되고, 이후에 학습을 통해 모델 파라미터(Model Parameter)가 설정되어 내용이 특 정될 수 있다. 예컨대, 인공 신경망의 구조를 결정하는 요소에는 은닉층의 개수, 각 은닉층에 포함된 은닉 노드의 개수, 입력 특징 벡터(Input Feature Vector), 대상 특징 벡터(Target Feature Vector) 등이 포함될 수 있다. 하이퍼파라미터는 모델 파라미터의 초기값 등과 같이 학습을 위하여 초기에 설정하여야 하는 여러 파라미터들을 포함한다. 그리고, 모델 파라미터는 학습을 통하여 결정하고자 하는 여러 파라미터들을 포함한다. 예컨대, 하이퍼파라미터에는 노드 간 가중치 초기값, 노드 간 편향 초기값, 미니 배치(Mini-batch) 크기, 학습 반복 횟수, 학습률(Learning Rate) 등이 포함될 수 있다. 그리고, 모델 파라미터에는 노드 간 가중치, 노드 간 편향 등이 포함될 수 있다. 손실 함수는 인공 신경망의 학습 과정에서 최적의 모델 파라미터를 결정하기 위한 지표(기준)로 이용될 수 있다. 인공 신경망에서 학습은 손실 함수를 줄이기 위하여 모델 파라미터들을 조작하는 과정을 의미하며, 학습 의 목적은 손실 함수를 최소화하는 모델 파라미터를 결정하는 것으로 볼 수 있다. 손실 함수는 주로 평균 제곱 오차(MSE: Mean Squared Error) 또는 교차 엔트로피 오차(CEE, Cross Entropy Error)를 사용할 수 있으며, 본 발명이 이에 한정되지는 않는다. 교차 엔트로피 오차는 정답 레이블이 원 핫 인코딩(one-hot encoding)된 경우에 사용될 수 있다. 원 핫 인코딩 은 정답에 해당하는 뉴런에 대하여만 정답 레이블 값을 1로, 정답이 아닌 뉴런은 정답 레이블 값이 0으로 설정 하는 인코딩 방법이다. 머신 러닝 또는 딥 러닝에서는 손실 함수를 최소화하기 위하여 학습 최적화 알고리즘을 이용할 수 있으며, 학습 최적화 알고리즘에는 경사 하강법(GD: Gradient Descent), 확률적 경사 하강법(SGD: Stochastic Gradient Descent), 모멘텀(Momentum), NAG(Nesterov Accelerate Gradient), Adagrad, AdaDelta, RMSProp, Adam, Nadam 등이 있다. 경사 하강법은 현재 상태에서 손실 함수의 기울기를 고려하여 손실 함수값을 줄이는 방향으로 모델 파라미터를 조정하는 기법이다. 모델 파라미터를 조정하는 방향은 스텝(step) 방향, 조정하는 크기는 스텝 사이즈(size)라고 칭한다. 이때, 스텝 사이즈는 학습률을 의미할 수 있다. 경사 하강법은 손실 함수를 각 모델 파라미터들로 편미분하여 기울기를 획득하고, 모델 파라미터들을 획득한 기 울기 방향으로 학습률만큼 변경하여 갱신할 수 있다. 확률적 경사 하강법은 학습 데이터를 미니 배치로 나누고, 각 미니 배치마다 경사 하강법을 수행하여 경사 하강 의 빈도를 높인 기법이다. Adagrad, AdaDelta 및 RMSProp는 SGD에서 스텝 사이즈를 조절하여 최적화 정확도를 높이는 기법이다. SGD에서 모멘텀 및 NAG는 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. Adam은 모멘텀과 RMSProp를 조합하여 스텝 사이즈와 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. Nadam은 NAG와 RMSProp를 조합하여 스 텝 사이즈와 스텝 방향을 조절하여 최적화 정확도를 높이는 기법이다. 인공 신경망의 학습 속도와 정확도는 인공 신경망의 구조와 학습 최적화 알고리즘의 종류뿐만 아니라, 하이퍼파 라미터에 크게 좌우되는 특징이 있다. 따라서, 좋은 학습 모델을 획득하기 위하여는 적당한 인공 신경망의 구조 와 학습 알고리즘을 결정하는 것뿐만 아니라, 적당한 하이퍼파라미터를 설정하는 것이 중요하다. 통상적으로 하이퍼파라미터는 실험적으로 다양한 값으로 설정해가며 인공 신경망을 학습시켜보고, 학습 결과 안 정적인 학습 속도와 정확도를 제공하는 최적의 값으로 설정한다.이하 첨부된 도면을 참고하여 본 발명을 상세히 설명하기로 한다. 도 1은 본 발명의 일 실시 예에 따른 신경망 장치의 구성을 나타낸 블록도이다. 신경망 장치는 훈련 데이터를 이용하여 기계 학습을 수행할 수 있는 장치로서, 인공 신경망으로 구성된 모 델을 이용하여 학습하는 장치를 포함할 수 있다. 즉, 신경망 장치는 데이터 마이닝, 데이터 분석, 지능형 의사 결정 및 기계 학습 알고리즘을 위해 이용될 정보를 수신, 분류, 저장 및 출력하도록 구성될 수 있다. 여기서, 기계 학습 알고리즘은 딥 러닝 알고리즘을 포 함할 수 있다. 신경망 장치는 적어도 하나의 외부 장치(미도시) 또는 단말기(미도시)와 통신할 수 있고, 외부 장치를 대 신하여 혹은 도와 데이터를 분석하거나 학습하여 결과를 도출할 수 있다. 여기서, 다른 장치를 도운다는 의미는 분산 처리를 통한 연산력의 분배를 의미할 수 있다. 신경망 장치는 인공 신경망을 학습하기 위한 다양한 장치로서, 통상적으로 서버를 의미할 수 있고, 신경망 학습 장치 또는 신경망 학습 서버 등으로 지칭할 수 있다. 특히, 신경망 장치는 단일한 서버뿐만 아니라 복수의 서버 세트, 클라우드 서버 또는 이들의 조합 등으로 구현될 수 있다. 즉, 신경망 장치는 복수로 구성되어 신경망 학습 장치 세트(혹은 클라우드 서버)를 구성할 수 있고, 신경 망 학습 장치 세트에 포함된 적어도 하나 이상의 신경망 장치는 분산 처리를 통하여 데이터 분석 또는 학 습하여 결과를 도출할 수 있다. 신경망 장치는 주기적으로 혹은 요청에 의하여 외부 장치(미도시)에 기계 학습 또는 딥 러닝에 의하여 학 습한 모델을 전송할 수 있다. 도 1을 참조하면, 신경망 장치는 통신부(Communication Unit, 110), 입력부(Input Unit, 120), 메모리 (Memory, 130), 러닝 프로세서(Learning Processor, 140), 전원 공급부(Power Supply Unit, 150) 및 프로세서 (Processor, 160) 등을 포함할 수 있다. 통신부는 무선 통신부(미도시) 및 인터페이스부(미도시)를 포함하는 구성을 의미할 수 있다. 즉, 통신부 는 유무선 통신이나 인터페이스를 통하여 다른 장치와 데이터를 송수신할 수 있다. 입력부는 모델 학습을 위한 훈련 데이터 또는 학습된 모델(a trained model)을 이용하여 출력을 획득하기 위한 입력 데이터 등을 획득할 수 있다. 입력부는 가공되지 않은 입력 데이터를 획득할 수도 있으며, 이 경우 러닝 프로세서 또는 프로세서 는 획득한 데이터를 전처리하여 모델 학습에 입력이 가능한 훈련 데이터 또는 전처리된 입력 데이터를 생 성할 수 있다. 이때, 입력부에서 수행하는 입력 데이터에 대한 전처리는, 입력 데이터로부터 입력 특징점(input featur e)을 추출하는 것을 의미할 수 있다. 또한, 입력부는 통신부를 통하여 데이터를 수신함으로써 데이터를 획득할 수도 있다. 메모리는 러닝 프로세서 또는 신경망 장치에서 학습된 모델을 저장할 수 있다. 이때, 메모리는 필요에 따라 학습된 모델을 학습 시점 또는 학습 진척도 등에 따라 복수의 버전으로 구분 하여 저장할 수 있다. 이때, 메모리는 입력부에서 획득한 입력 데이터, 모델 학습을 위하여 이용되는 학습 데이터(또는 훈 련 데이터), 모델의 학습 히스토리 등을 저장할 수 있다. 이때, 메모리에 저장된 입력 데이터는 모델 학습에 적합하게 가공된 데이터뿐만 아니라, 가공되지 않은 입 력 데이터 그 자체일 수 있다. 메모리는 모델 저장부 및 데이터베이스 등을 포함할 수 있다. 모델 저장부는 러닝 프로세서을 통하여 학습 중인 또는 학습된 신경망 모델(또는 인공 신경망, 131 a)을 저장하며, 학습을 통하여 모델이 업데이트되면 업데이트 된 모델을 저장한다.이때, 모델 저장부는 필요에 따라 학습된 모델을 학습 시점 또는 학습 진척도 등에 따라 복수의 버전으로 구분하여 저장할 수 있다. 도 1에 도시된 인공 신경망(131a)은 복수의 은닉층을 포함하는 인공 신경망의 하나의 예시일 뿐이며, 본 발명의 인공 신경망이 이에 한정되는 것은 아니다 인공 신경망(131a)은 하드웨어, 소프트웨어 또는 하드웨어와 소프트웨어의 조합으로 구현될 수 있다. 인공 신경 망(131a)의 일부 또는 전부가 소프트웨어로 구현되는 경우, 인공 신경망(131a)을 구성하는 하나 이상의 명령어 는 메모리에 저장될 수 있다. 데이터베이스는 입력부에서 획득한 입력 데이터, 모델 학습을 위하여 이용되는 학습 데이터(또는 훈 련 데이터), 모델의 학습 히스토리 등을 저장할 수 있다. 데이터베이스에 저장된 입력 데이터는 모델 학습에 적합하게 가공된 데이터뿐만 아니라, 가공되지 않은 입 력 데이터 그 자체일 수 있다. 러닝 프로세서는 훈련 데이터 또는 트레이닝 셋(training set)을 이용하여 인공 신경망(131a)을 훈련 (training, 또는 학습)시킬 수 있다. 러닝 프로세서는 프로세서가 입력부를 통해 획득한 입력 데이터를 전처리한 데이터를 바로 획득 하여 인공 신경망(131a)을 학습하거나, 데이터베이스에 저장된 전처리된 입력 데이터를 획득하여 인공 신 경망(131a)을 학습할 수 있다. 구체적으로, 러닝 프로세서는 앞서 설명한 다양한 학습 기법을 이용하여 인공 신경망(131a)을 반복적으로 학습시킴으로써, 인공 신경망(131a)의 최적화된 모델 파라미터들을 결정할 수 있다 본 명세서에서는 훈련 데이터를 이용하여 학습됨으로써 파라미터가 결정된 인공 신경망을 학습 모델 또는 학습 된 모델(a trained model)이라 칭할 수 있다. 이때, 학습 모델은 인공 신경망의 학습 장치에 탑재된 상태에서 결과 값을 추론할 수도 있으며, 통신부 를 통해 단말기 또는 외부 장치와 같은 다른 장치에 전송되어 탑재될 수도 있다. 또한, 학습 모델이 업데이트되는 경우, 업데이트된 학습 모델은 통신부를 통해 단말기 또는 외부 장치와 같은 다른 장치에 전송되어 탑재될 수 있다. 또한, 학습 모델은 훈련 데이터가 아닌 새로운 입력 데이터에 대하여 결과 값을 추론해 내는데 사용될 수 있다. 러닝 프로세서는 데이터 마이닝, 데이터 분석, 지능형 의사 결정, 및 기계 학습 알고리즘 및 기술을 위해 이용될 정보를 수신, 분류, 저장 및 출력하도록 구성될 수 있다. 러닝 프로세서는 다른 컴포넌트, 외부 디바이스 또는 신경망 장치와 통신하는 장치에 의해 수신, 검 출, 감지, 생성, 사전 정의 또는 출력되는 데이터를 저장하도록 구성된 하나 이상의 메모리 유닛을 포함할 수 있다. 러닝 프로세서는 신경망 장치에 통합되거나 구현된 메모리를 포함할 수 있다. 일부 실시 예에서, 러 닝 프로세서는 메모리를 사용하여 구현될 수 있다. 선택적으로 또는 부가적으로, 러닝 프로세서는 단말기에 직접 결합된 외부 메모리 또는 단말기와 통신하는 서버에서 유지되는 메모리와 같이 단말기와 관련된 메모리를 사용하여 구현될 수 있다. 다른 실시 예에서, 러닝 프로세서는 클라우드 컴퓨팅 환경에서 유지되는 메모리, 또는 네트워크와 같은 통 신 방식을 통해 단말기에 의해 액세스 가능한 다른 원격 메모리 위치를 이용하여 구현될 수 있다. 러닝 프로세서는 일반적으로 감독 또는 감독되지 않은 학습, 데이터 마이닝, 예측 분석 또는 다른 머신에 서 사용하기 위해 데이터를 식별, 색인화, 카테고리화, 조작, 저장, 검색 및 출력하기 위해 데이터를 하나 이상 의 데이터베이스에 저장하도록 구성될 수 있다. 여기서, 데이터베이스는 메모리, 클라우드 컴퓨팅 환경에 서 유지되는 메모리, 또는 네트워크와 같은 통신 방식을 통해 단말기에 의해 액세스 가능한 다른 원격 메모리 위치를 이용하여 구현될 수 있다. 러닝 프로세서에 저장된 정보는 다양한 상이한 유형의 데이터 분석 알고리즘 및 기계 학습 알고리즘 중 임 의의 것을 사용하여 프로세서에 의해 이용될 수 있다.이러한, 알고리즘의 예로는, k-최근 인접 시스템, 퍼지 논리 (예: 가능성 이론), 신경 회로망, 볼츠만 기계, 벡 터 양자화, 펄스 신경망, 지원 벡터 기계, 최대 마진 분류기, 힐 클라이밍, 유도 논리 시스템 베이지안 네트워 크, 페리트넷 (예: 유한 상태 머신, 밀리 머신, 무어 유한 상태 머신), 분류기 트리 (예: 퍼셉트론 트리, 지원 벡터 트리, 마코프 트리, 의사 결정 트리 포리스트, 임의의 포리스트), 판독 모델 및 시스템, 인공 융합, 센서 융합, 이미지 융합, 보강 학습, 증강 현실, 패턴 인식, 자동화 된 계획 등을 포함한다. 프로세서는 데이터 분석 및 기계 학습 알고리즘을 사용하여 결정되거나, 생성된 정보에 기초하여 신경망 장치의 적어도 하나의 실행 가능한 동작을 결정 또는 예측할 수 있다. 이를 위해, 프로세서는 러닝 프로세서의 데이터를 요청, 검색, 수신 또는 활용할 수 있고, 상기 적어도 하나의 실행 가능한 동작 중 예 측되는 동작이나, 바람직한 것으로 판단되는 동작을 실행하도록 상기 신경망 장치를 제어할 수 있다. 프로세서는 지능적 에뮬레이션(즉, 지식 기반 시스템, 추론 시스템 및 지식 획득 시스템)을 구현하는 다양 한 기능을 수행 할 수 있다. 이는 적응 시스템, 기계 학습 시스템, 인공 신경망 등을 포함하는, 다양한 유형의 시스템(예컨대, 퍼지 논리 시스템)에 적용될 수 있다. 프로세서는, 또한 I/O 처리 모듈, 환경 조건 모듈, 음성 - 텍스트 (STT: Speech to Text) 처리 모듈, 자 연어 처리 모듈, 작업 흐름 처리 모듈 및 서비스 처리 모듈과 같이, 음성 및 자연 언어 음성 처리를 수반하는 연산을 가능하게 하는 서브 모듈을 포함할 수 있다. 이들 서브 모듈들 각각은, 단말기에서의 하나 이상의 시스템 또는 데이터 및 모델, 또는 이들의 서브셋 또는 수 퍼 셋에 대한 액세스를 가질 수 있다. 또한, 이들 서브 모듈들 각각은, 어휘 색인, 사용자 데이터, 작업 흐름 모델, 서비스 모델 및 자동 음성 인식 (ASR) 시스템을 비롯한 다양한 기능을 제공할 수 있다. 다른 실시 예에서, 프로세서 또는 신경망 장치의 다른 양태는 상기 서브 모듈, 시스템, 또는 데이터 및 모델로 구현 될 수 있다. 일부 예에서, 러닝 프로세서의 데이터에 기초하여, 프로세서는 사용자 입력 또는 자연 언어 입력으로 표현된 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항을 검출하고 감지하도록 구성 될 수 있다. 프로세서는 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항을 완전히 결정하는데 필요한 정보를 능동 적으로 이끌어 내고, 획득할 수 있다. 예를 들어, 프로세서는 역사적 입력 및 출력, 패턴 매칭, 모호하지 않은 단어, 입력 의도 등을 포함하는 과거 데이터를 분석함으로써 요구 사항을 결정하는데, 필요한 정보를 능동 적으로 이끌어낼 수 있다. 프로세서는 문맥 조건 또는 사용자의 의도에 기초하여 요구 사항에 응답하는 기능을 실행하기 위한 태스크 흐름을 결정할 수 있다. 프로세서는 러닝 프로세서에서 프로세싱 및 저장을 위한 정보를 수집하기 위해, 단말기에서 하나 이 상의 감지 컴포넌트를 통해 데이터 분석 및 기계 학습 작업에 사용되는 신호 또는 데이터를 수집, 감지, 추출, 검출 및/또는 수신하도록 구성 될 수 있다. 정보 수집은 센서를 통해 정보를 감지하는 것, 메모리에 저장된 정보를 추출하는 것 또는 통신 수단을 통 해 외부 단말기, 엔티티 또는 외부 저장 장치로부터 정보를 수신하는 것을 포함 할 수 있다. 프로세서는 신경망 장치에서 사용 히스토리 정보를 수집하여, 메모리에 저장할 수 있다. 프로세서는 저장된 사용 히스토리 정보 및 예측 모델링을 사용하여 특정 기능을 실행하기 위한 최상의 매 치를 결정할 수 있다. 프로세서는 입력부로부터 이미지 정보 (또는 해당 신호), 오디오 정보 (또는 해당 신호), 데이터 또 는 사용자 입력 정보를 수신 할 수 있다. 프로세서는 정보를 실시간으로 수집하고, 정보 (예를 들어, 지식 그래프, 명령 정책, 개인화 데이터베이스, 대화 엔진 등)를 처리 또는 분류하고, 처리 된 정보를 메모리 또는 러닝 프로세서에 저장할 수 있다. 신경망 장치의 동작이 데이터 분석 및 기계 학습 알고리즘 및 기술에 기초하여 결정될 때, 프로세서 는 결정된 동작을 실행하기 위해 신경망 장치의 구성 요소를 제어 할 수 있다. 그리고 프로세서는 제 어 명령에 따라 신경망 장치를 제어하여 결정된 동작을 수행 할 수 있다.프로세서는 특정 동작이 수행되는 경우, 데이터 분석 및 기계 학습 알고리즘 및 기법을 통해 특정 동작의 실행을 나타내는 이력 정보를 분석하고, 분석된 정보에 기초하여 이전에 학습 한 정보의 업데이트를 수행 할 수 있다. 따라서, 프로세서는 러닝 프로세서과 함께, 업데이트 된 정보에 기초하여 데이터 분석 및 기계 학습 알고리즘 및 기법의 미래 성능의 정확성을 향상시킬 수 있다. 전원 공급부는 프로세서의 제어 하에서, 외부의 전원, 내부의 전원을 인가 받아 신경망 장치에 포함된 각 구성요소들에 전원을 공급하기 위한 장치를 포함한다. 또한, 이러한 전원공급부는 배터리를 포함하며, 상기 배터리는 내장형 배터리 또는 교체 가능한 형태의 배 터리가 될 수 있다. 구체적으로 러닝 프로세서에 의해 학습되는 인공 신경망 모델의 배치 정규화 레이어(batch normalization layer) 학습 방법에 대하여 살펴보기로 한다. 도 2는 본 발명의 일 실시예에 따른 배치 정규화 레이어를 포함한 인공 신경망 모델의 구조를 나타낸 도면이다. 도 2를 참조하면, 인공 신경망 모델은 제 1 신경망 레이어, 배치 정규화 레이어 및 제 2 신경망 레이 어를 포함할 수 있다. 전술한 바와 같이, 인공 신경망 모델은 입력부를 통하여 인공 신경망 모델 학습을 위한 훈련 데이터를 입 력 받을 수 있다. 이 때, 훈련 데이터는 배치 정규화 변환을 위해서 미니 배치(mini-batch) 단위로 제 1 신경망 레이어로 입 력될 수 있다. 예를 들어, 전체 훈련 데이터의 개수를 N 개라 가정하고, 미니 배치에 포함된 데이터의 개수를 m 개로 가정하면, 미니 배치는 N/m 개로 정해질 수 있다. 예컨대, 전체 훈련 데이터가 10 개이고, 미니 배치에 포함될 데이터가 2 개이면, 2개의 훈련 데이터(컴포넌트) 로 구성된 미니 배치(mini batch)는 10/2 = 5 개가 되므로, 제 1 신경망 레이어는 5 개의 미니 배치로 훈 련 데이터를 나누어 입력받을 수 있다. 다음으로, 제 1 신경망 레이어는 입력받은 훈련 데이터들을 이용하여 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성할 수 있다. 여기에서, 배치 정규화 레이어는 생성된 제 1 레이어 출력값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환을 수행할 수 있다. 배치 정규화 레이어는 제 1 레이어(또는 이전 레이어들)의 파라미터 변화로 인한 각 레이어의 입력값들 분 포(distribution)의 변화 때문에 신경망 학습 과정에서 발생할 수 있는 가중치 소실(Gradient Vanishing) 또는 가중치 폭발(Gradient Exploding)을 감소시키기 위하여, 제 1 레이어(또는 이전 레이어들) 출력값들을 배치 정 규화 변환하기 위한 레이어를 의미한다. 즉, 배치 정규화 레이어는 인공 신경망 학습 중에 발생할 수 있는 내부 공변량 이동(internal covariate shift)을 감소시키기 위한 것으로, 배치 정규화(batch normalization)는 다음과 같은 가정을 통하여 적용할 수 있다. 배치 정규화(batch normalization)는 훈련 데이터로 입력되는 각각의 특징(feature)들이 이미 관련 없는 형태 (uncorrelated)로 되어있다고 가정하고, 특징(feature) 각각에 대해서만 스칼라(scalar) 형태로 평균(mean)과 분산(variance)를 계산하고, 계산된 평균과 분산을 이용하여 각각 정규화(normalization)를 수행하여 적용한다. 다만, 배치 정규화에서 단순히 평균을 0, 분산을 1 로 고정시키는 것은 오히려 활성화 함수(Activation function)의 비선형성(nonlinearity)을 없애는 문제가 발생할 수 있다. 예를 들어, 시그노이드(sigmoid) 입력이 평균 0, 분산 1 이라면 출력 부분은 곡선보다는 직선 형태에 가깝게 나타나는 문제가 발생할 수 있다. 또한, 특징(feature)들이 이미 관련 없는 형태(uncorrelated)로 되어있다는 가정에 의해서 신경망 모델이 표현 할 수 있는 것이 제한될 수 있다. 이런 문제점들을 보완하기 위해서, 배치 정규화 방법은 각각 정규화된 값들에 스케일(scale) 파라미터인 감마(gamma)와 시프트(shift) 파라미터인 베타(beta)를 이용하여 변환하고, 이 변수들을 역전파(back-propagation) 과정에서 같이 학습시켜 획득하게 된다. 이 때, 배치 정규화는 훈련 데이터 전체에 대해서 평균과 분산을 계산하는 것이 아니라, 미니 배치(mini-batch) 단위로 접근하여 계산한다. 즉, 현재 선택한 미니 배치(mini-batch) 안에서만 평균과 분산을 계산하고, 선택된 미니 배치 단위로 계산된 평균과 분산을 이용해서 정규화하는 방법을 사용한다. 배치 정규화에서 사용되는 수학식은 다음과 같다. 수학식 1"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "수학식 2"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "수학식 3"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "수학식 4"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "<수학식 1> 및 <수학식 2>는 미니 배치의 평균과 분산을 계산하는 수학식이고, <수학식 3>은 미니 배치에서 계 산한 평균과 분산을 이용하여 xi의 정규화 값을 계산하는 수학식이고, <수학식 4>는 xi의 정규화 값에 스케일 (scale) 파라미터인 감마(gamma)를 곱셈하고, 이동(shift) 파라미터인 베타(beta)를 덧셈하여 배치 정규화 변환 하는 수학식을 의미한다. 상기 <수학식 1> 내지 <수학식 4> 에 체인 룰(chain rule)을 적용하면, 손실 함수의 각 파라미터에 대한 그래디 언트를 다음의 <수학식 5> 내지 <수학식 10>과 같이 계산할 수 있다. 수학식 5 수학식 6"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "수학식 7"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "수학식 8"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "수학식 9"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "수학식 10"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "즉, 배치 정규화 방법은 미니 배치 단위로 정규화를 수행하기 때문에, 현재 인덱스 i 훈련 데이터에 대한 학습 을 시키기 위해서는 정규화 과정으로 인하여 인덱스 i 뿐만 아니라 미니 배치 단위로 학습이 이루어 져야 한다. 즉, 배치 정규화 방법은 현재 인덱스 i 에 대한 데이터뿐만 아니라 미니 배치 단위의 모든 데이터 값 및 미니 배치 단위의 통계적 계산이 필요하다는 점에서, 온 디바이스(on-device)에서는 처리하기 어려운 연산 처리 능력 및 저장 공간을 필요로 한다. 즉, 온 디바이스(on-device) 된 신경망 학습 장치는 한정된 연산 처리 능력 및 저장 공간을 가지고 있기 때문에, 온 디바이스 상태에서 배치 정규화 방법을 사용하기 위해서는 연산량 및 연산에 필요한 저장 공간을 감 소시키는 방향으로 배치 정규화의 수학식을 변형시킬 필요가 있다. 예를 들어, 배치 정규화 방법에서 미니 배치 단위의 계산을 배제하거나 간략히 하는 방향으로 수학식을 변형시 켜 연산량을 감소시킬 수 있다. 본 발명의 일 실시예에 따른 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그 래디언트를 0 으로 설정하여 변환하고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 손실 함수 의 그래디언트에 적용하여 변환할 수 있다. 정규화 통계값은 각각의 미니 배치 세트 또는 데이터 세트에서 연산되는 각 세트 당 데이터 개수, 평균 및 표준 편차를 포함할 수 있다.즉, 미니 배치 단위의 계산을 배제하거나 간략히 하기 위해서, <수학식 6> 및 <수학식 7>에서 표현된 표준편차 (분산)에 대한 그래디언트와 평균에 대한 그래디언트의 계산을 간단하게 수행되도록 하는 방법을 고려할 수 있 다. 여기에서, 표준편차(분산)에 대한 그래디언트 및 평균에 대한 그래디언트의 계산이 간단하게 수행되도록, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 ( )으로 설정하면, 상기 <수학식 8>은 다음의 <수학식 11> 과 같이 간략하게 표현할 수 있다. 수학식 11"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "<수학식 11>을 참조하면, 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트가 0 으로 가정되었으므로, x 에 대한 그래디언트 값은 단순히 xi 의 정규화 값과 표준편차(분산)의 값으로 표현될 수 있다. 다만, 상기 <수학식 11>의 계산에 필요한 정규화 값(평균, 표준편차)과 표준편차의 값도 현재 미니 배치 단위에 서 계산되는 평균과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차 를 대체할 수 있는 방법이 필요하다. 도 3은 이전 신경망 모델에서 획득된 평균, 분산을 이용하여 전이 학습(transfer learning)이 수행 되는 모습을 나타낸 도면이다. 전이 학습(transfer learning)이란 특정 목적을 가지고 이미 학습된 신경망 모델이 존재할 때, 이 신경망 모델 을 다시 재사용하여 학습하는 것을 의미하는데, 현재 훈련데이터가 기존의 훈련 데이터와 동일한 분포를 가진다 고 가정하여 수행되는 학습 모델이다. 즉, 도 3을 참조하면, 전이 학습의 경우에는 현재 훈련 데이터가 기존의 훈련 데이터와 동일한 분포를 가진다고 가정하여 이전 신경망에서 획득된 평균, 분산을 다시 재사용하여 학습을 수행할 수 있다. 즉, 상기 <수학식 11> 의 계산에 필요한 현재 미니 배치 단위의 평균 및 표준편차의 값도, 전이 학습의 경우와 유사하게 현재 훈련 데이터의 분포가 초기 신경망(또는 이전의 신경망)의 훈련 데이터와 동일한 분포를 가진다 고 가정하면, 초기 신경망 또는 이전의 신경망에서 획득된 평균, 표준편차의 값으로 대체되어 사용될 수 있다. 즉, 배치 정규화 방법에서 연산량 및 연산에 필요한 저장 공간을 감소시키기 위해서, 현재 훈련 데이터가 기존 의 훈련 데이터와 동일한 분포를 가진다고 가정하여 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값 을 손실 함수의 그래디언트에 적용하여 계산할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 평균에 대 한 그래디언트를 0 으로 설정하여 변환하고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값 을 상기 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 상술한 바와 같이, 미니 배치 단위의 계산을 배제하기 위하여 손실 함수의 표준편차(분산)에 대한 그래디언트 및 평균에 대한 그래디언트를 0 ( )으로 설정하면, 상기 <수학식 11> 과 같이, x 에 대한 그래 디언트 값은 단순히 xi 의 정규화 값과 표준편차(분산)의 값으로 표현될 수 있다. 다만, 상기 <수학식 11>의 계산에 필요한 정규화 값(평균, 표준편차)과 표준편차의 값도 현재 미니 배치 단위에 서 계산되는 평균과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차 를 대체할 수 있는 방법이 필요하다. 도 4는 미니 배치 단위로 평균과 분산을 계산하면서, 이전 미니 배치까지의 평균, 분산을 이용하여 이동 평균 및 이동 분산을 획득하는 모습을 나타낸 도면이다. 예를 들면, 도 4는 현재 인덱스 i 에 대한 현재의 미니 배치 단위의 계산을 배제하기 위해서, 이전 미니 배치까 지 계산된 평균, 분산을 이용하여 현재 미니 배치 단위의 평균, 분산을 유추하는 방법이다. 즉, 도 4는 이전 미니 배치까지 계산된 평균, 분산을 이용하여 이동 평균과 이동 분산을 계산하고, 계산된 이동 평균과 이동 분산을 현재 미니 배치 단위의 평균과 분산으로 이용하는 방법을 나타낸 도면이다. 도 4를 참조하면, 이동 평균과 이동 분산을 이용하면 현재 미니 배치 단위로 직접 평균과 분산을 계산하지 않고 도 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 이동 평균과 이동 분산은 1 미니 배치 이전에 연산 한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득할 수 있다. 이 때, 1 미니 배치 이전에 연산한 미니 배치 세트의 정규화 통계값은 각 데이터의 누적값 만을 이용하는 경우 이므로, 모든 데이터를 저장할 필요 없이 각 데이터 처리시 값을 누적하고, 미니 배치 구성 완료 단계에서 평균 과 분산을 계산하여 획득할 수 있다. 즉, 현재 미니 배치 단위로 직접 평균과 분산을 계산할 필요 없이 이동 평균과 이동 분산으로 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 1 미니 배치 이전에 연산된 미니 배치 세트의 정규화 통계값을 이용하 는 방법이기 때문에, 온 디바이스 된 인공 신경망의 배치 정규화 레이어 트레이닝 방법으로 사용할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 변환은, 손실 함수의 표준편차에 대한 그래디언트 및 손실 함수 의 평균에 대한 그래디언트를 0 으로 설정하여 변환하고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역 순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하고, 상기 생성된 데이터 세트의 정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하 여 변환할 수 있다. 상술한 바와 같이, 미니 배치 단위의 계산을 배제하기 위하여 손실 함수의 표준편차(분산)에 대한 그래디언트 및 평균에 대한 그래디언트를 0 ( )으로 설정하면, 상기 <수학식 11> 과 같이, x 에 대한 그래 디언트 값은 단순히 xi 의 정규화 값과 표준편차(분산)의 값으로 표현될 수 있다. 다만, 상기 <수학식 11>의 계산에 필요한 정규화 값(평균, 표준편차)과 표준편차의 값도 현재 미니 배치 단위에 서 계산되는 평균과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차 를 대체할 수 있는 방법이 필요하다. 이 때, 1 미니 배치 이전에서 계산되는 이동 평균과 유사한 방법으로, 현재 인덱스 i 를 제외한 이전의 훈련 데 이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하여 평균과 분산을 획 득하는 방법을 고려할 수 있다. 즉, 1 미니 배치 이전 단위에서 획득되는 이동 평균이 아니라 현재 인덱스 i 데이터를 제외한 이전 데이터들을 미니 배치 세트의 데이터 개수만큼 선택하여 정규화 통계값인 평균과 분산을 계산하는 방법이다. 즉, 이 방법은 현재 인덱스 i 데이터를 제외한 이전의 데이터들이 사용된다는 점에서, 1 미니 배치 이전의 일부 데이터와 현재 미니 배치 안의 일부 데이터가 포함되어 평균과 분산이 계산될 수 있다. 또한, 이 방법은 현재 인덱스 i 데이터를 기준으로 이전의 데이터를 이용하는 것이므로, 현재 미니 배치 단위로 정규화 통계값을 획득하지 않으며, 미니 배치 단위로 통계값들을 저장할 필요가 없으며, 단순히 데이터 값을 누 적시키는 방법으로 정규화 통계값을 획득한다는 점에서 연산량 및 저장 공간을 감소시킬 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 변환은, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하 고, 초기 신경망 또는 이전의 신경망에서 획득된 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변 환할 수 있다. 예를 들어, 배치 정규화 방법에서 연산량 및 연산에 필요한 저장 공간을 감소시키기 위해서, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 배치 정규화 변환함으로써 미니 배치 단위의 계산을 배제할 수 있다. 즉, 현재 미니 배치에 포함된 모든 데이터들의 정규화 통계값을 계산할 필요 없이, 현재 인덱스 i 에 대하여만 고려하여 배치 정규화 변환을 적용할 수 있다. 현재 인덱스 i 에 대하여만 고려한 배치 정규화 수학식은 다음의 <수학식 12> 내지 <수학식 14>와 같이 표현될 수 있다.수학식 12"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "수학식 13"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 13, "content": "수학식 14"}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 14, "content": "즉, <수학식 12> 내지 <수학식 14>는 <수학식 6> 내지 <수학식 8>에서 미니 배치 단위로 표현되는 시그마 값들 을 현재 인덱스 i 에 대하여만 고려하여 변환된 수식이다. 다만, <수학식 12> 내지 <수학식 14>를 참조하면, <수학식 12> 내지 <수학식 14>는 현재 인덱스 i 에 대하여만 고려하여 변환된 수식이지만, 여전히 현재 미니 배치 단위로의 평균, 분산값이 필요하다는 것을 확인할 수 있다. 즉, 상기 <수학식 12> 내지 <수학식 14>에서 요구되는 정규화 값, 평균값 및 표준편차의 값도 현재 미니 배치 단위에서 계산된 평균과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 계산 없이 평균과 분산을 대체할 수 있는 방법이 필요하다. 이 때, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 상술한 도 3의 전이 학습 모델에서 이전 신경망의 평균과 분산을 사용하는 방법을 적용할 수 있다. 즉, 도 3을 참조하여, 상기 <수학식 12> 내지 <수학식 14>의 계산에 필요한 현재 미니 배치 단위로의 정규화 값, 평균값 및 표준편차의 값도, 전이 학습의 경우와 유사하게 현재 훈련 데이터의 분포가 초기 신경망(또는 이 전의 신경망)의 훈련 데이터와 동일한 분포를 가진다고 가정하면, 초기 신경망 또는 이전의 신경망에서 획득된 평균, 표준편차의 값으로 대체되어 사용될 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 변환은, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하 고, 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 손실 함수의 그래디언트에 적용하여 변 환할 수 있다. 상술한 바와 같이, 배치 정규화 방법에서 연산량 및 연산에 필요한 저장 공간을 감소시키기 위해서, 현재 인덱 스 i 에 대한 데이터 값만을 사용하여 배치 정규화 변환이 가능하고, 이 때의 수학식은 상기 <수학식 12> 내지 <수학식 14>로 표현된다. 다만, <수학식 12> 내지 <수학식 14>를 참조하면, <수학식 12> 내지 <수학식 14>는 현재 인덱스 i 에 대하여만 고려하여 변환된 수식이지만, 여전히 현재 미니 배치 단위로의 평균, 분산값이 필요하다는 것을 확인할 수 있다. 즉, <수학식 12> 내지 <수학식 14>에서 요구되는 정규화 값, 평균값 및 표준편차의 값도 현재 미니 배치 단위에 서 계산된 평균과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 계산 없이 평균과 분산을 대체할 수 있는 방법이 필요하다. 이 때, 상술한 도 4의 이동 평균과 이동 분산을 계산하는 방법을 사용할 수 있다. 즉, 도 4를 참조하면, 이동 평균과 이동 분산을 이용하면 현재 미니 배치 단위로 직접 평균과 분산을 계산하지 않고 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 이동 평균과 이동 분산은 1 미니 배치 이전에 연 산한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득할 수 있다. 즉, 현재 미니 배치 단위로 직접 평균과 분산을 계산할 필요 없이 이동 평균과 이동 분산으로 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 1 미니 배치 이전에 연산된 미니 배치 세트의 정규화 통계값을 이용하 는 방법이기 때문에, 온 디바이스 된 인공 신경망의 배치 정규화 레이어 트레이닝 방법으로 사용할 수 있다. 또한, 본 발명의 일 실시예에 따른 배치 정규화 변환은, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하 고, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데 이터 세트(set)를 생성하고, 상기 생성된 데이터 세트의 정규화 통계값을 계산하고, 상기 계산된 데이터 세트의 정규화 통계값을 상기 손실 함수의 그래디언트에 적용하여 변환할 수 있다. 상술한 바와 같이, 배치 정규화 방법에서 연산량 및 연산에 필요한 저장 공간을 감소시키기 위해서, 현재 인덱 스 i 에 대한 데이터 값만을 사용하여 배치 정규화 변환이 가능하고, 이 때의 수학식은 상기 <수학식 12> 내지 <수학식 14>로 표현된다. 다만, <수학식 12> 내지 <수학식 14>를 참조하면, <수학식 12> 내지 <수학식 14>는 현재 인덱스 i 에 대하여만 고려하여 변환된 수식이지만, 여전히 미니 배치 단위로의 평균, 분산값이 필요하다는 것을 확인할 수 있다. 즉, <수학식 12> 내지 <수학식 14>에서 요구되는 정규화 값, 평균값 및 표준편차의 값도 미니 배치 단위에서 계 산된 평균과 분산이 필요하다는 점에서, 미니 배치 단위의 계산 없이 평균과 분산을 대체할 수 있는 방법이 필 요하다. 이 때, 1 미니 배치 이전에서 계산되는 이동 평균과 유사한 방법으로, 현재 인덱스 i 를 제외한 이전의 훈련 데 이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하여 평균과 분산을 획 득하는 방법을 적용할 수 있다. 즉, 1 미니 배치 이전 단위에서 획득되는 이동 평균이 아니라 현재 인덱스 i 데이터를 제외한 이전 데이터들을 미니 배치 세트의 데이터 개수만큼 선택하여 정규화 통계값인 평균과 분산을 계산하는 방법이다. 즉, 이 방법은 현재 현재 인덱스 i 데이터를 제외한 이전의 데이터들이 사용된다는 점에서, 1 미니 배치 이전의 일부 데이터와 현재 미니 배치의 일부 데이터가 포함되어 평균과 분산이 계산될 수 있다. 또한, 이 방법은 현재 인덱스 i 데이터를 기준으로 이전의 데이터를 이용하는 것이므로, 현재 미니 배치 단위로 정규화 통계값을 획득하지 않으며, 미니 배치 단위로 통계값들을 저장할 필요가 없으며, 단순히 데이터 값을 누 적시키는 방법으로 정규화 통계값을 획득한다는 점에서 연산량 및 저장 공간을 감소시킬 수 있다. 본 발명의 일 실시예에 따른 인공 신경망 모델에서, 배치 정규화 레이어를 제 1 레이어 및 제 2 레이 어 사이에 위치한 것으로 설명하였으나, 제 1 레이어 이전에 위치할 수도 있으며, 훈련 데이터를 바 로 배치 정규화 변환한 다음 제 1 레이어에 입력하는 것도 가능하다. 이하 도 5 및 도6을 참조하여 배치 정규화 레이어 트레이닝 방법에 대해 살펴보기로 한다. 도 5는 본 발명의 일 실시예에 따른 표준편차 및 평균에 대한 그래디언트를 0 으로 설정한 배치 정규화 레이어 트레이닝 방법을 설명하기 위한 흐름도이다. 도 5를 참조하면, 단계 S510에서, 인공 신경망 모델은 입력부를 통하여 훈련 데이터들을 미니 배치(mini- batch) 단위로 입력 받을 수 있다. 예를 들어, 인공 신경망 모델의 학습을 위해서, 훈련 데이터들은 입력부를 통하여 인공 신경망 모델로 입 력되며, 배치 정규화 변환을 위해서 미니 배치(mini-batch) 단위로 제 1 신경망 레이어로 입력될 수 있다. 단계 S520에서, 제 1 신경망 레이어는 입력받은 훈련 데이터들을 이용하여 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성할 수 있다. 단계 S530에서, 배치 정규화 레이어는 생성된 제 1 레이어 출력값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환을 수행할 수 있는데, 현재 미니 배치 단위의 계산을 배제하거나 간략히 하기 위해서,손실 함수의 표준편차에 대한 그래디언트 및 평균에 대한 그래디언트를 0 으로 설정하여 변환할 수 있다. 다만, 현재 미니 배치 단위의 계산을 배제하기 위하여 손실 함수의 표준편차(분산)에 대한 그래디언트 및 평균 에 대한 그래디언트를 0 ( )으로 설정하면, 상기 <수학식 11> 과 같이 표현되는데, 상기 <수학 식 11>의 계산에 필요한 정규화 값(평균, 표준편차)과 표준편차의 값도 현재 미니 배치 단위에서 계산되는 평균 과 분산이 필요하다는 점에서, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있 는 방법이 필요하다. 이 때, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 상술한 도 3의 전이 학습 모델에서 이전 신경망의 평균과 분산을 사용하는 방법을 적용할 수 있다. 즉, 도 3을 참조하여, 현재 훈련 데이터가 기존의 훈련 데이터와 동일한 분포를 가진다고 가정하면 <수학식 1 1>의 계산에 필요한 현재 미니 배치 단위의 정규화 값(평균, 표준편차)을 이전 신경망에서 획득된 평균, 분산으 로 대체하여 계산할 수 있다. 또한, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 상술한 도 4 의 이전 미니 배치까지 계산된 평균, 분산을 이용하여 현재의 미니 배치 단위의 평균, 분산을 유추하는 방법을 적용할 수 있다. 도 4를 참조하면, 이동 평균과 이동 분산을 이용하면 현재 미니 배치 단위로 직접 평균과 분산을 계산하지 않고 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 이동 평균과 이동 분산은 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득할 수 있다. 즉, <수학식 11>의 계산에 필요한 현재 미니 배치 단위의 정규화 값(평균, 표준편차)을 1 미니 배치 이전에 연 산한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득한 이동 평균과 이동 분산으로 대체하여 계산할 수 있다.. 또한, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 1 미니 배치 이전에서 계산되는 이동 평균과 유사한 방법으로, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하여 평균과 분산을 획득하는 방법을 적용 할 수 있다. 즉, <수학식 11>의 계산에 필요한 현재 미니 배치 단위의 정규화 값(평균, 표준편차)을 현재 인덱스 i 를 제외 한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 생성된 데이터 세트(set)의 평균과 분산으로 대체하여 계산할 수 있다. 단계 S540에서, 배치 정규화 레이어는 배치 정규화 변환을 이용하여 제 1 레이어 출력값들을 정규화하여 출력할 수 있다. 예를 들어, 배치 정규화 레이어는 제 1 레이어 출력값들을 미니 배치 단위로 배치 정규화 변환을 수행하여 배치 정규화 레이어 출력을 생성할 수 있다. 다만, 본 발명의 일 실시예에 따르면, 미니 배치 단위의 계산을 배제하기 위하여 손실 함수의 표준편차(분산) 및 평균에 대한 그래디언트를 0 ( )으로 설정하고, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체하는 방법이 사용되어 배치 정규화 변환을 수행한 것이므로, 현재 입력된 제 1 레 이어 출력값을 직접 배치 정규화하여 출력하는 것도 가능하다. 다음으로, 배치 정규화 레이어에 의해서 배치 정규화된 제 1 레이어 출력값들은 제 2 신경망 레이어 에 대한 입력으로 제공될 수 있다. 도 6은 본 발명의 일 실시예에 따른 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환한 배치 정규화 레이어 트레이닝 방법을 설명하기 위한 흐름도이다. 도 6을 참조하면, 단계 S610에서, 인공 신경망 모델은 입력부를 통하여 훈련 데이터들을 미니 배치(mini- batch) 단위로 입력 받을 수 있다. 예를 들어, 인공 신경망 모델의 학습을 위해서, 훈련 데이터들은 입력부를 통하여 인공 신경망 모델로 입 력되며, 배치 정규화 변환을 위해서 미니 배치(mini-batch) 단위로 제 1 신경망 레이어로 입력될 수 있다. 단계 S620에서, 제 1 신경망 레이어는 입력받은 훈련 데이터들을 이용하여 미니 배치(mini-batch) 단위로 제 1 레이어 출력값들을 생성할 수 있다. 단계 S630에서, 배치 정규화 레이어는 생성된 제 1 레이어 출력값들을 제 2 레이어의 입력값으로 이용하기 위해서 배치 정규화 변환을 수행할 수 있는데, 현재 미니 배치 단위의 계산을 배제하거나 간략히 하기 위해서, 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환할 수 있다. 다만, 현재 미니 배치 단위의 계산을 배제하기 위하여 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환하면, 상기 <수학식 12> 내지 <수학식 14>와 같이 표현되는데, 상기 <수학식 12> 내지 <수학식 14>에서 요 구되는 정규화 값, 평균값 및 표준편차의 값도 현재 미니 배치 단위에서 계산된 평균과 분산이 필요하다는 점에 서, 현재 미니 배치 단위의 계산 없이 평균과 분산을 대체할 수 있는 방법이 필요하다. 이 때, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 상술한 도 3의 전이 학습 모델에서 이전 신경망의 평균과 분산을 사용하는 방법을 적용할 수 있다. 즉, 도 3을 참조하여, 상기 <수학식 12> 내지 <수학식 14>의 계산에 필요한 현재 미니 배치 단위로의 정규화 값, 평균값 및 표준편차의 값도, 전이 학습의 경우와 유사하게 현재 훈련 데이터의 분포가 초기 신경망(또는 이 전의 신경망)의 훈련 데이터와 동일한 분포를 가진다고 가정하면, 초기 신경망 또는 이전의 신경망에서 획득된 평균, 표준편차의 값으로 대체되어 사용될 수 있다. 또한, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 상술한 도 4 의 이전 미니 배치까지 계산된 평균, 분산을 이용하여 현재의 미니 배치 단위의 평균, 분산을 유추하는 방법을 적용할 수 있다. 도 4를 참조하면, 이동 평균과 이동 분산을 이용하면 현재 미니 배치 단위로 직접 평균과 분산을 계산하지 않고 현재 미니 배치 단위의 평균과 분산을 유추할 수 있으며, 이동 평균과 이동 분산은 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득할 수 있다. 즉, <수학식 12> 내지 <수학식 14>에서 요구되는 현재 미니 배치 단위의 정규화 값, 평균값 및 표준편차의 값을 1 미니 배치 이전에 연산한 미니 배치 세트(set)의 정규화 통계값을 이용하여 획득한 이동 평균과 이동 분산으 로 대체하여 계산할 수 있다.. 또한, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체할 수 있는 방법으로, 1 미니 배치 이전에서 계산되는 이동 평균과 유사한 방법으로, 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 데이터 세트(set)를 생성하여 평균과 분산을 획득하는 방법을 적용 할 수 있다. 즉, <수학식 12> 내지 <수학식 14>에서 요구되는 현재 미니 배치 단위의 정규화 값, 평균값 및 표준편차의 값을 현재 인덱스 i 를 제외한 이전의 훈련 데이터들을 역순으로 미니 배치 세트의 데이터 개수만큼 선택하여 생성된 데이터 세트(set)의 평균과 분산으로 대체하여 계산할 수 있다. 단계 S640에서, 배치 정규화 레이어는 배치 정규화 변환을 이용하여 제 1 레이어 출력값들을 정규화하여 출력할 수 있다. 예를 들어, 배치 정규화 레이어는 제 1 레이어 출력값들을 미니 배치 단위로 배치 정규화 변환을 수행하여 배치 정규화 레이어 출력을 생성할 수 있다. 다만, 본 발명의 일 실시예에 따르면, 미니 배치 단위의 계산을 배제하기 위하여 현재 인덱스 i 에 대한 데이터 값만을 사용하고, 현재 미니 배치 단위의 정규화 계산 과정 없이 평균과 표준편차를 대체하는 방법이 사용되어 배치 정규화 변환을 수행한 것이므로, 현재 입력된 제 1 레이어 출력값을 직접 배치 정규화하여 출력하는 것도 가능하다. 다음으로, 배치 정규화 레이어에 의해서 배치 정규화된 제 1 레이어 출력값들은 제 2 신경망 레이어 에 대한 입력으로 제공될 수 있다. 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에서, 배치 정규화 레이어를 제 1 레이어 및 제 2 레이어 사이에 위치한 것으로 설명하였으나, 제 1 레이어 이전에 위치할 수도 있으며,훈련 데이터를 바로 배치 정규화 변환한 다음 제 1 레이어에 입력하는 것도 가능하다. 본 발명의 일 실시예에 따른 배치 정규화 레이어 트레이닝 방법에 관련하여서는 전술한 배치 정규화 레이어를 포함한 인공 신경망 모델에 대한 내용이 적용될 수 있다. 따라서, 배치 정규화 레이어 트레이닝 방법과 관련하 여, 전술한 배치 정규화 레이어를 포함한 인공 신경망 모델에 대한 내용과 동일한 내용에 대하여는 설명을 생략 하였다. 전술한 본 발명은, 프로그램이 기록된 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨터 가 읽을 수 있는 매체는, 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록장치를 포함한다. 컴퓨터가 읽을 수 있는 매체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있다. 또한, 상기 컴 퓨터는 단말기, 전자 장치의 프로세서를 포함할 수도 있다."}
{"patent_id": "10-2019-0094523", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 15, "content": "전술한 본 발명의 설명은 예시를 위한 것이며, 본 발명이 속하는 기술분야의 통상의 지식을 가진 자는 본 발명 의 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 쉽게 변형이 가능하다는 것을 이해 할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적이 아닌 것으로 이해해야만 한다. 예를 들어, 단일형으로 설명되어 있는 각 구성 요소는 분산되어 실시될 수도 있으며, 마찬가 지로 분산된 것으로 설명되어 있는 구성 요소들도 결합된 형태로 실시될 수 있다. 본 발명의 범위는 상기 상세한 설명보다는 후술하는 특허청구범위에 의하여 나타내어지며, 특허청구범위의 의미 및 범위 그리고 그 균등 개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으 로 해석되어야 한다."}
{"patent_id": "10-2019-0094523", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시 예에 따른 신경망 장치의 구성을 나타낸 블록도이다. 도 2는 본 발명의 일 실시예에 따른 배치 정규화 레이어를 포함한 인공 신경망 모델의 구조를 나타낸 도면이다. 도 3은 이전 신경망 모델에서 획득된 평균, 분산을 이용하여 전이 학습(transfer learning)이 수행 되는 모습을 나타낸 도면이다. 도 4는 미니 배치 단위로 평균과 분산을 계산하면서, 이전 미니 배치까지의 평균, 분산을 이용하여 이동 평균 및 이동 분산을 획득하는 모습을 나타낸 도면이다. 도 5는 본 발명의 일 실시예에 따른 표준편차 및 평균에 대한 그래디언트를 0 으로 설정한 배치 정규화 레이어 트레이닝 방법을 설명하기 위한 흐름도이다. 도 6은 본 발명의 일 실시예에 따른 현재 인덱스 i 에 대한 데이터 값만을 사용하여 변환한 배치 정규화 레이어 트레이닝 방법을 설명하기 위한 흐름도이다."}
