{"patent_id": "10-2021-0161074", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0074955", "출원번호": "10-2021-0161074", "발명의 명칭": "재구성가능 온 칩 메모리 뱅크, 재구성가능 온 칩 메모리, 이를 탑재한 시스템 온 칩 및 재구", "출원인": "리벨리온 주식회사", "발명자": "신원규"}}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 셀이 정렬되어 데이터를 저장하는 셀 어레이;상기 셀 어레이에서 상기 데이터를 이동시키는 제1 경로 유닛;상기 셀 어레이에서 상기 데이터를 이동시키는 제2 경로 유닛; 및상기 제1 및 제2 경로 유닛과 연결되고, 경로 컨트롤 신호에 따라 상기 데이터를 상기 제1 경로 유닛 및 상기제2 경로 유닛 중 어느 쪽으로 송수신할지를 런 타임 중에 결정하고, 상기 제1 경로 유닛을 사용할 경우에는 제1 어드레스 체계를 이용하고, 상기 제2 경로 유닛을 사용할 경우에는 상기 제1 어드레스 체계와 다른 제2 어드레스 체계를 이용하는 뱅크 컨트롤러를 포함하는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 제1 경로 유닛 및 상기 제2 경로 유닛은 서로 다른 인터페이스를 가지는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서,상기 제1 경로 유닛의 클럭 주파수는 상기 뱅크 컨트롤러의 클럭 주파수의 배수(倍數)인,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3 항에 있어서,상기 제2 경로 유닛의 클럭 주파수는 상기 뱅크 컨트롤러의 클럭 주파수의 배수가 아닌,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2 항에 있어서,상기 제1 경로 유닛의 제1 클럭 주파수는 상기 제2 경로 유닛의 제1 클럭 주파수와 서로 다른,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서,공개특허 10-2023-0074955-3-상기 제1 경로 유닛 및 상기 제2 경로 유닛은 서로 동일한 인터페이스를 가지는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6 항에 있어서,상기 제1 경로 유닛의 제1 클럭 주파수 및 제2 경로 유닛의 제2 클럭 주파수는 각각 상기 뱅크 컨트롤러의 제3클럭 주파수의 배수(倍數)인,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6 항에 있어서,상기 제1 경로 유닛의 제1 클럭 주파수 및 제2 경로 유닛의 제2 클럭 주파수는 각각 상기 뱅크 컨트롤러의 제3클럭 주파수의 배수가 아닌,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1 항에 있어서,상기 셀 어레이는 SRAM(Static Random Access Memory) 셀을 포함하는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 항에 있어서,상기 제1 경로 유닛은 제1 프로세싱 유닛에 대해 전용으로 사용되는 제1 스크래치 패드와 상기 데이터를 직접송수신하는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10 항에 있어서,상기 제1 경로 유닛, 상기 제1 프로세싱 유닛 및 상기 제1 스크래치 패드의 클럭 주파수는 모두 동일한,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10 항에 있어서,상기 제2 경로 유닛은 데이터 버스를 통해서 오프 칩 메모리와 상기 데이터를 송수신하는,공개특허 10-2023-0074955-4-재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12 항에 있어서,상기 데이터 버스는 상기 제1 스크래치 패드 및 제2 스크래치 패드와 연결되고,상기 제2 스크래치 패드는 상기 제1 프로세싱 유닛과 다른 제2 프로세싱 유닛에 대해 전용으로 사용되는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13 항에 있어서,상기 제2 경로 유닛 및 상기 데이터 버스의 클럭 주파수는 동일한,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제1 항에 있어서,상기 경로 컨트롤 신호는 미리 설계된 장치 드라이버 또는 컴파일러에 의해서 생성되는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제1 항에 있어서,상기 경로 컨트롤 신호는 사용자로부터 입력되는,재구성가능 온 칩 메모리 뱅크."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "서로 다른 프로세싱 유닛의 데이터를 각각 버퍼링하는 제1 및 제2 스크래치 패드;상기 제1 스크래치 패드와 대응되는 제1 메모리 유닛;상기 제2 스크래치 패드와 대응되는 제2 메모리 유닛;상기 제1 메모리 유닛과 상기 제1 스크래치 패드 사이의 데이터 교환을 제어하는 제1 스크래치 패드 컨트롤러;상기 제2 메모리 유닛과 상기 제2 스크래치 패드 사이의 데이터 교환을 제어하는 제2 스크래치 패드 컨트롤러;및상기 제1 메모리 유닛 및 상기 제2 메모리 유닛과, 데이터 버스 사이의 데이터 교환을 제어하는 글로벌 컨트롤러를 포함하는,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "공개특허 10-2023-0074955-5-제17 항에 있어서,상기 제1 및 제2 메모리 유닛은 각각 적어도 하나의 메모리 뱅크를 포함하는,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17 항에 있어서,상기 제1 메모리 유닛은, 상기 제1 스크래치 패드와 동일한 방식으로 동작하는 제1 영역 및/또는 상기 제1 스크래치 패드와 다른 방식으로 동작하는 제2 영역을 포함하는,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19 항에 있어서,상기 제1 영역의 클럭 주파수는 상기 제1 스크래치 패드의 클럭 주파수와 동일한,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제19 항에 있어서,상기 제2 메모리 유닛은, 상기 제2 스크래치 패드와 동일한 방식으로 동작하는 제3 영역 및/또는 상기 제2 스크래치 패드와 다른 방식으로 동작하는 제4 영역을 포함하는,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제21 항에 있어서,상기 제1 영역과 제2 영역의 제1 비율은, 상기 제3 영역과 제4 영역의 제2 비율과 서로 다른,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제21 항에 있어서,상기 제2 영역 및 상기 제4 영역은, 상기 제1 스크래치 패드 및 상기 제2 스크래치 패드에 의해서 공유되는,재구성가능 온 칩 메모리."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제1 및 제2 연산 작업을 각각 처리하는 제1 및 제2 프로세싱 유닛; 및상기 제1 프로세싱 유닛에 대한 제1 전용 영역과, 상기 제2 프로세싱 유닛에 대한 제2 전용 영역과, 상기 제1및 제2 프로세싱 유닛의 공용 영역을 포함하는 온 칩 메모리를 포함하고,공개특허 10-2023-0074955-6-상기 제1 전용 영역의 크기, 상기 제2 전용 영역의 크기 및 상기 공용 영역의 크기는 런 타임 중에변하는,재구성가능 온 칩 메모리를 탑재한 시스템 온 칩."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제24 항에 있어서,상기 온 칩 메모리는,상기 제1 프로세싱 유닛의 데이터를 전용으로 버퍼링하는 제1 스크래치 패드와,상기 제2 프로세싱 유닛의 데이터를 전용으로 버퍼링하는 제2 스크래치 패드와,상기 제1 스크래치 패드와 동일한 방식으로 동작하는 제1 영역, 상기 제2 스크래치 패드와 동일한 방식으로 동작하는 제2 영역 및 상기 제1 및 제2 스크래치 패드와 다른 방식으로 동작하는 제3 영역 중 적어도 하나를 포함하는 재구성가능 온 칩 메모리를 포함하고,상기 제1 전용 영역은 상기 제1 스크래치 패드 및 상기 제1 영역을 포함하고,상기 제2 전용 영역은 상기 제2 스크래치 패드 및 상기 제2 영역을 포함하고,상기 공용 영역은 상기 제3 영역을 포함하는,재구성가능 온 칩 메모리를 탑재한 시스템 온 칩."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제24 항에 있어서,상기 제1 및 제2 연산 작업은 각각 딥러닝 학습 및 딥러닝 추론 작업 중 적어도 하나를 포함하는,재구성가능 온 칩 메모리를 탑재한 시스템 온 칩."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_27", "content": "제1 프로세싱 유닛에 제1 연산 작업을 할당하고,상기 제1 연산 작업에 따른 제1 경로 컨트롤 신호를 획득하되, 상기 제1 경로 컨트롤 신호는 상기 제1 연산 작업에 대한 제1 데이터를 서로 다른 제1 및 제2 인터페이스 중 어느 것을 사용하여 송수신할지에 대한 신호이고,상기 제1 경로 컨트롤 신호가 상기 제1 인터페이스를 사용하는 경우, 제1 어드레스 체계를 사용하여 상기 제1데이터를 온 칩 메모리에 리드 또는 라이트하고,상기 제1 경로 컨트롤 신호가 상기 제2 인터페이스를 사용하는 경우, 상기 제1 어드레스 체계와 다른 제2 어드레스 체계를 사용하여 상기 제1 데이터를 상기 온 칩 메모리에 리드(read) 또는 라이트(write)하는 것을 포함하는,재구성가능 온 칩 메모리 사용 방법."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_28", "content": "제27 항에 있어서,연산 작업을 수신하여 상기 제1 연산 작업과 제2 연산 작업으로 나누고,상기 제2 연산 작업을 상기 제1 프로세싱 유닛과 다른 제2 프로세싱 유닛에 할당하는 것을 더 포함하는,공개특허 10-2023-0074955-7-재구성가능 온 칩 메모리 사용 방법."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_29", "content": "제28 항에 있어서,상기 제2 연산 작업에 따른 제2 경로 컨트롤 신호를 획득하되, 상기 제2 경로 컨트롤 신호는 상기 제2 연산 작업에 대한 제2 데이터를 상기 제1 및 제2 인터페이스 중 어느 것을 사용하여 송수신할지에 대한 신호이고,상기 제2 경로 컨트롤 신호가 상기 제1 인터페이스를 사용하는 경우, 제3 어드레스 체계를 사용하여 상기 제2데이터를 상기 온 칩 메모리에 리드 또는 라이트하고,상기 제2 경로 컨트롤 신호가 상기 제2 인터페이스를 사용하는 경우, 상기 제2 어드레스 체계를 사용하여 상기제2 데이터를 상기 온 칩 메모리에 리드 또는 라이트하는 것을 포함하는,재구성가능 온 칩 메모리 사용 방법."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_30", "content": "제29 항에 있어서,상기 제1 어드레스 체계는 상기 제1 프로세싱 유닛의 전용으로 사용되고,상기 제3 어드레스 체계는 상기 제2 프로세싱 유닛의 전용으로 사용되는,재구성가능 온 칩 메모리 사용 방법."}
{"patent_id": "10-2021-0161074", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_31", "content": "제29 항에 있어서,상기 제2 어드레스 체계는 상기 제1 및 제2 프로세싱 유닛에 공용으로 적용되는,재구성가능 온 칩 메모리 사용 방법."}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 재구성가능 온 칩 메모리 뱅크, 재구성가능 온 칩 메모리, 이를 탑재한 시스템 온 칩 및 재구성가능 온 칩 메모리 사용 방법을 개시한다. 상기 재구성가능 온 칩 메모리 뱅크는, 복수의 셀이 정렬되어 데이터를 저 장하는 셀 어레이, 상기 셀 어레이에서 상기 데이터를 이동시키는 제1 경로 유닛, 상기 셀 어레이에서 상기 데이 터를 이동시키는 제2 경로 유닛 및 상기 제1 및 제2 경로 유닛과 연결되고, 경로 컨트롤 신호에 따라 상기 데이 터를 상기 제1 경로 유닛 및 상기 제2 경로 유닛 중 어느 쪽으로 송수신할지를 런 타임 중에 결정하고, 상기 제1 경로 유닛을 사용할 경우에는 제1 어드레스 체계를 이용하고, 상기 제2 경로 유닛을 사용할 경우에는 상기 제1 어드레스 체계와 다른 제2 어드레스 체계를 이용하는 뱅크 컨트롤러를 포함한다."}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 재구성가능 온 칩 메모리 뱅크, 재구성가능 온 칩 메모리, 이를 탑재한 시스템 온 칩 및 재구성가능 온 칩 메모리 사용 방법에 관한 것이다. 구체적으로, 본 발명은 연산 작업의 특성에 맞게 메모리를 재구성할 수 있는 재구성가능 온 칩 메모리 뱅크, 재구성가능 온 칩 메모리, 이를 탑재한 시스템 온 칩 및 재구성가능 온 칩 메모리 사용 방법에 관한 것이다."}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "지난 몇년간, 인공지능(Artificial Intelligence) 기술은 4차 산업혁명의 핵심 기술로 전세계적으로 가장 유망 한 기술로 거론되고 있다. 이러한 인공지능 기술의 가장 큰 문제는 컴퓨팅 성능이다. 인간의 학습능력과 추론능 력, 지각능력, 자연언어의 이행능력 등을 실현해내는 인공지능 기술은 많은 데이터를 빠르게 처리하는 것이 가 장 중요하다. 초기 인공지능의 딥러닝 학습과 추론에는 기성 컴퓨터의 중앙처리장치(CPU; Central processing unit)나 그래픽 처리장치(GPU; Graphics Processing Unit)가 쓰였지만, 높은 워크 로드를 가지는 딥러닝 학습 및 추론의 작업에는 한계가 있어 구조적으로 딥러닝 작업에 특화된 인공지능 프로세싱 코어가 각광받고 있다. 이러한 인공지능 프로세싱 코어가 여러 개 탑재된 시스템 온 칩(System on Chip)의 경우 칩 내에 위치하는 온 칩 메모리(on-chip memory)를 같이 포함하고, 이러한 온 칩 메모리는 크게 스크래치 패드와 공유 메모리의 2가 지 메모리로 나누어질 수 있다. 스크래치 패드는 각 인공지능 프로세싱 코어의 전용 메모리이고, 공유 메모리는 여러 인공지능 프로세싱 코어의 공통 메모리로 사용될 수 있다. 이러한 온 칩 메모리의 2가지 메모리의 최적 구성 비율은 인공지능 프로세싱 코어의 연산 작업 특성에 따라 달 라질 수 있으나, 현재의 온 칩 메모리는 고정된 메모리 구성 비율로 이루어져 각각의 연산 작업에 비효율이 발 생할 수 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 등록특허공보 제10-2258566호"}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 과제는, 메모리 활용을 극대화할 수 있는 재구성가능 온 칩 메모리 뱅크를 제공하는 것이다. 또한, 본 발명의 다른 과제는, 메모리 활용을 극대화할 수 있는 재구성가능 온 칩 메모리를 제공하는 것이다. 또한, 본 발명의 또 다른 과제는, 메모리 활용을 극대화할 수 있는 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩을 제공하는 것이다. 또한, 본 발명의 또 다른 과제는, 메모리 활용을 극대화할 수 있는 재구성가능 온 칩 메모리 사용 방법을 제공 하는 것이다. 본 발명의 목적들은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 본 발명의 다른 목적 및 장점들 은 하기의 설명에 의해서 이해될 수 있고, 본 발명의 실시예에 의해 보다 분명하게 이해될 것이다. 또한, 본 발 명의 목적 및 장점들은 특허 청구 범위에 나타낸 수단 및 그 조합에 의해 실현될 수 있음을 쉽게 알 수 있을 것 이다."}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 과제를 해결하기 위한 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리 뱅크는, 복수의 셀이 정렬 되어 데이터를 저장하는 셀 어레이, 상기 셀 어레이에서 상기 데이터를 이동시키는 제1 경로 유닛, 상기 셀 어 레이에서 상기 데이터를 이동시키는 제2 경로 유닛 및 상기 제1 및 제2 경로 유닛과 연결되고, 경로 컨트롤 신 호에 따라 상기 데이터를 상기 제1 경로 유닛 및 상기 제2 경로 유닛 중 어느 쪽으로 송수신할지를 런 타임 중 에 결정하고, 상기 제1 경로 유닛을 사용할 경우에는 제1 어드레스 체계를 이용하고, 상기 제2 경로 유닛을 사 용할 경우에는 상기 제1 어드레스 체계와 다른 제2 어드레스 체계를 이용하는 뱅크 컨트롤러를 포함한다. 또한, 상기 제1 경로 유닛 및 상기 제2 경로 유닛은 서로 다른 인터페이스를 가질 수 있다. 또한, 상기 제1 경로 유닛의 클럭 주파수는 상기 뱅크 컨트롤러의 클럭 주파수의 배수일 수 있다. 또한, 상기 제2 경로 유닛의 클럭 주파수는 상기 뱅크 컨트롤러의 클럭 주파수의 배수가 아닐 수 있다. 또한, 상기 제1 경로 유닛의 제1 클럭 주파수는 상기 제2 경로 유닛의 제1 클럭 주파수와 서로 다를 수 있다. 또한, 상기 제1 경로 유닛 및 상기 제2 경로 유닛은 서로 동일한 인터페이스를 가질 수 있다. 또한, 상기 제1 경로 유닛의 제1 클럭 주파수 및 제2 경로 유닛의 제2 클럭 주파수는 각각 상기 뱅크 컨트롤러 의 제3 클럭 주파수의 배수일 수 있다. 또한, 상기 제1 경로 유닛의 제1 클럭 주파수 및 제2 경로 유닛의 제2 클럭 주파수는 각각 상기 뱅크 컨트롤러 의 제3 클럭 주파수의 배수가 아닐 수 있다. 또한, 상기 셀 어레이는 SRAM(Static Random Access Memory) 셀을 포함할 수 있다. 또한, 상기 제1 경로 유닛은 제1 프로세싱 유닛에 대해 전용으로 사용되는 제1 스크래치 패드와 상기 데이터를 직접 송수신할 수 있다. 또한, 상기 제1 경로 유닛, 상기 제1 프로세싱 유닛 및 상기 제1 스크래치 패드의 클럭 주파수는 모두 동일할 수 있다. 또한, 상기 제2 경로 유닛은 데이터 버스를 통해서 오프 칩 메모리와 상기 데이터를 송수신할 수 있다. 또한, 상기 데이터 버스는 상기 제1 스크래치 패드 및 제2 스크래치 패드와 연결되고, 상기 제2 스크래치 패드 는 상기 제1 프로세싱 유닛과 다른 제2 프로세싱 유닛에 대해 전용으로 사용될 수 있다. 또한, 상기 제2 경로 유닛 및 상기 데이터 버스의 클럭 주파수는 동일할 수 있다. 또한, 상기 경로 컨트롤 신호는 미리 설계된 장치 드라이버 또는 컴파일러에 의해서 생성될 수 있다. 또한, 상기 경로 컨트롤 신호는 사용자로부터 입력될 수 있다. 상기 다른 과제를 해결하기 위한 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리는, 서로 다른 프로세 싱 유닛의 데이터를 각각 버퍼링하는 제1 및 제2 스크래치 패드, 상기 제1 스크래치 패드와 대응되는 제1 메모 리 유닛, 상기 제2 스크래치 패드와 대응되는 제2 메모리 유닛, 상기 제1 메모리 유닛과 상기 제1 스크래치 패 드 사이의 데이터 교환을 제어하는 제1 스크래치 패드 컨트롤러, 상기 제2 메모리 유닛과 상기 제2 스크래치 패 드 사이의 데이터 교환을 제어하는 제2 스크래치 패드 컨트롤러 및 상기 제1 메모리 유닛 및 상기 제2 메모리 유닛과, 데이터 버스 사이의 데이터 교환을 제어하는 글로벌 컨트롤러를 포함한다. 또한, 상기 제1 및 제2 메모리 유닛은 각각 적어도 하나의 메모리 뱅크를 포함할 수 있다. 또한, 상기 제1 메모리 유닛은, 상기 제1 스크래치 패드와 동일한 방식으로 동작하는 제1 영역 및/또는 상기 제 1 스크래치 패드와 다른 방식으로 동작하는 제2 영역을 포함할 수 있다. 또한, 상기 제1 영역의 클럭 주파수는 상기 제1 스크래치 패드의 클럭 주파수와 동일할 수 있다. 또한, 상기 제2 메모리 유닛은, 상기 제2 스크래치 패드와 동일한 방식으로 동작하는 제3 영역 및/또는 상기 제 2 스크래치 패드와 다른 방식으로 동작하는 제4 영역을 포함할 수 있다. 또한, 상기 제1 영역과 제2 영역의 제1 비율은, 상기 제3 영역과 제4 영역의 제2 비율과 서로 다를 수 있다. 또한, 상기 제2 영역 및 상기 제4 영역은, 상기 제1 스크래치 패드 및 상기 제2 스크래치 패드에 의해서 공유될 수 있다. 상기 또 다른 과제를 해결하기 위한 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩은, 제1 및 제2 연산 작업을 각각 처리하는 제1 및 제2 프로세싱 유닛 및 상기 제1 프로세싱 유닛에 대한 제1 전용 영역과, 상기 제2 프로세싱 유닛에 대한 제2 전용 영역과, 상기 제1 및 제2 프로세싱 유닛의 공용 영 역을 포함하는 온 칩 메모리를 포함하고, 상기 제1 전용 영역의 크기, 상기 제2 전용 영역의 크기 및 상기 공용 영역의 크기는 런 타임 중에 변한다. 또한, 상기 온 칩 메모리는, 상기 제1 프로세싱 유닛의 데이터를 전용으로 버퍼링하는 제1 스크래치 패드와, 상 기 제2 프로세싱 유닛의 데이터를 전용으로 버퍼링하는 제2 스크래치 패드와, 상기 제1 스크래치 패드와 동일한 방식으로 동작하는 제1 영역, 상기 제2 스크래치 패드와 동일한 방식으로 동작하는 제2 영역 및 상기 제1 및 제 2 스크래치 패드와 다른 방식으로 동작하는 제3 영역 중 적어도 하나를 포함하는 재구성가능 온 칩 메모리를 포 함하고, 상기 제1 전용 영역은 상기 제1 스크래치 패드 및 상기 제1 영역을 포함하고, 상기 제2 전용 영역은 상 기 제2 스크래치 패드 및 상기 제2 영역을 포함하고, 상기 공용 영역은 상기 제3 영역을 포함할 수 있다. 또한, 상기 제1 및 제2 연산 작업은 각각 딥러닝 학습 및 딥러닝 추론 작업 중 적어도 하나를 포함할 수 있다. 상기 또 다른 과제를 해결하기 위한 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리 사용 방법은, 제1 프로세싱 유닛에 제1 연산 작업을 할당하고, 상기 제1 연산 작업에 따른 제1 경로 컨트롤 신호를 획득하되, 상 기 제1 경로 컨트롤 신호는 상기 제1 연산 작업에 대한 제1 데이터를 서로 다른 제1 및 제2 인터페이스 중 어느 것을 사용하여 송수신할지에 대한 신호이고, 상기 제1 경로 컨트롤 신호가 상기 제1 인터페이스를 사용하는 경 우, 제1 어드레스 체계를 사용하여 상기 제1 데이터를 온 칩 메모리에 리드 또는 라이트하고, 상기 제1 경로 컨 트롤 신호가 상기 제2 인터페이스를 사용하는 경우, 상기 제1 어드레스 체계와 다른 제2 어드레스 체계를 사용 하여 상기 제1 데이터를 상기 온 칩 메모리에 리드 또는 라이트하는 것을 포함할 수 있다. 또한, 연산 작업을 수신하여 상기 제1 연산 작업과 제2 연산 작업으로 나누고, 상기 제2 연산 작업을 상기 제1 프로세싱 유닛과 다른 제2 프로세싱 유닛에 할당하는 것을 더 포함할 수 있다. 또한, 상기 제2 연산 작업에 따른 제2 경로 컨트롤 신호를 획득하되, 상기 제2 경로 컨트롤 신호는 상기 제2 연 산 작업에 대한 제2 데이터를 상기 제1 및 제2 인터페이스 중 어느 것을 사용하여 송수신할지에 대한 신호이고, 상기 제2 경로 컨트롤 신호가 상기 제1 인터페이스를 사용하는 경우, 제3 어드레스 체계를 사용하여 상기 제2 데이터를 상기 온 칩 메모리에 리드 또는 라이트하고, 상기 제2 경로 컨트롤 신호가 상기 제2 인터페이스를 사 용하는 경우, 상기 제2 어드레스 체계를 사용하여 상기 제2 데이터를 상기 온 칩 메모리에 리드 또는 라이트하 는 것을 포함할 수 있다. 또한, 상기 제1 어드레스 체계는 상기 제1 프로세싱 유닛의 전용으로 사용되고, 상기 제3 어드레스 체계는 상기 제2 프로세싱 유닛의 전용으로 사용될 수 있다. 또한, 상기 제2 어드레스 체계는 상기 제1 및 제2 프로세싱 유닛에 공용으로 적용될 수 있다."}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 재구성가능 온 칩 메모리 뱅크, 재구성가능 온 칩 메모리, 이를 탑재한 시스템 온 칩 및 재구성가능 온 칩 메모리 사용 방법은, 런 타임 중에 온 칩 메모리의 구성을 변경할 수 있어 연산 작업의 특성에 최적화된 성능을 이끌어 낼 수 있다. 또한, 프로세싱 유닛 별로 제공되는 스크래치 패드 방식으로 사용되는 메모리의 크기가 상이하게 지원되어 각 프로세싱 유닛 별로 연산 작업 특성에 따른 최적화된 메모리 크기를 확보할 수 있다. 상술한 내용과 더불어 본 발명의 구체적인 효과는 이하"}
{"patent_id": "10-2021-0161074", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서 및 특허청구범위에서 사용된 용어나 단어는 일반적이거나 사전적인 의미로 한정하여 해석되어서는 아 니된다. 발명자가 그 자신의 발명을 최선의 방법으로 설명하기 위해 용어나 단어의 개념을 정의할 수 있다는 원 칙에 따라, 본 발명의 기술적 사상과 부합하는 의미와 개념으로 해석되어야 한다. 또한, 본 명세서에 기재된 실 시예와 도면에 도시된 구성은 본 발명이 실현되는 하나의 실시예에 불과하고, 본 발명의 기술적 사상을 전부 대 변하는 것이 아니므로, 본 출원시점에 있어서 이들을 대체할 수 있는 다양한 균등물과 변형 및 응용 가능한 예 들이 있을 수 있음을 이해하여야 한다. 본 명세서 및 특허청구범위에서 사용된 제1, 제2, A, B 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 발명의 권리 범위를 벗어나지 않으면서 제1 구성 요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. '및/또는' 이라는 용어는 복수의 관련된 기재된 항목들의 조합 또는 복수의 관련된 기재된 항목들 중의 어느 항목을 포함 한다. 본 명세서 및 특허청구범위에서 사용된 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서 \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해서 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의 미를 가지는 것으로 해석되어야 하며, 본 출원에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적 인 의미로 해석되지 않는다. 또한, 본 발명의 각 실시예에 포함된 각 구성, 과정, 공정 또는 방법 등은 기술적으로 상호 간 모순되지 않는 범위 내에서 공유될 수 있다. 이하, 도 1 내지 도 14를 참조하여, 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩을 설명한다. 도 1은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩을 설명하기 위한 개념 도이다. 도 1을 참조하면, 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩(System on Chip, SoC)은 복수의 프로세싱 코어와 재구성가능 온 칩 메모리를 포함한다. 시스템 온 칩 은 데이터 버스를 통해서 오프 칩 메모리와 데이터를 교환할 수 있다. 프로세싱 코어는 시스템 온 칩 내부에 배치될 수 있다. 프로세싱 코어는 연산 작업을 수신하여 수행할 수 있다. 프로세싱 코어는 도 1에 도시된 바와 같이 2개 이상일 수 있다. 단, 본 실시예가 이에 제 한되는 것은 아니다. 프로세싱 코어가 복수인 경우 연산 작업을 나누어 수행할 수 있다. 이때, 프로세싱 코어 별로 서로 다른 양과 서로 다른 종류의 작업을 수행할 수도 있다. 재구성가능 온 칩 메모리(Reconfigurable On-Chip Memory, ROCM)는 시스템 온 칩 내부에 위치할 수 있다. 재구성가능 온 칩 메모리는 연산 작업에 필요한 프로그램, 데이터 및 인스트럭션을 오프 칩 메모리 (Off-Chip Memory)를 통해서 수신하여 프로세싱 코어로 제공할 수 있다. 또한, 재구성가능 온 칩 메 모리는 프로세싱 코어가 연산한 결과 데이터를 수신하여 일시적으로 저장하고, 오프 칩 메모리(200 0)로 전송할 수 있다. 즉, 재구성가능 온 칩 메모리는 프로세싱 코어의 버퍼(buffer) 역할을 수행할수 있다. 오프 칩 메모리는 시스템 온 칩과 분리된 위치에 설치될 수 있다. 오프 칩 메모리는 시스템 온 칩과 데이터 버스를 통해서 데이터를 송수신할 수 있다. 오프 칩 메모리는 예를 들어, DRAM(Dynamic Random-Access Memory), 낸드 플래시 메모리(NAND flash memory), 노어 플래시 메모리(NOR flash memory) 및 3D 크로스 포인트 메모리 중 적어도 하나를 포함할 수 있다. 단, 본 실시예가 이에 제한되는 것은 아니다. 데이터 버스는 오프 칩 메모리와 재구성가능 온 칩 메모리를 서로 연결시킬 수 있다. 데이터 버스는 프로세싱 코어와 재구성가능 온 칩 메모리를 서로 연결시킬 수 있다. 또한, 데이터 버 스는 시스템 온 칩과 다른 칩 사이의 데이터 교환에도 사용될 수 있다. 데이터 버스는 데이 터를 교환하는 통로(path)의 역할을 할 수 있다. 도 2는 도 1의 프로세싱 코어의 구조를 세부적으로 설명하기 위한 블록도이다. 도 2를 참조하면, 프로세싱 코어는 프로세싱 유닛, 액티베이션 버퍼, 액티베이션 로드/스토어 유닛, 스크래치 패드 및 로드/스토어 유닛을 포함할 수 있다. 프로세싱 유닛은 연산을 수행하는 모듈일 수 있다. 프로세싱 유닛은 1차원 연산뿐만 아니라 2차원 매 트릭스 연산 즉, 컨볼루션 연산을 수행할 수 있다. 프로세싱 유닛은 인풋 액티베이션(Act_In)을 수신하여 가중치(weight)와 곱한 뒤 이를 더하여 아웃풋 액티베이션(Act_Out)을 생성할 수 있다. 도 3은 도 2의 프로세싱 유닛의 구조를 세부적으로 설명하기 위한 블록도이다. 도 2 및 도 3을 참조하면, 프로세싱 유닛은 PE 어레이 및 벡터 유닛을 포함할 수 있다. PE 어레이는 인풋 액티베이션(Act_In)을 수신하여 가중치와 각각 곱셈을 수행할 수 있다. 이때, 인풋 액티 베이션(Act_In)과 가중치는 매트릭스를 구성하고, 컨볼루션을 통해서 연산될 수 있다. 이를 통해서, PE 어레이 는 아웃풋 액티베이션(Act_Out)을 생성할 수 있다. PE 어레이는 적어도 하나의 프로세싱 엘리먼트(111a)를 포함할 수 있다. 프로세싱 엘리먼트(111a)는 서로 정렬되어 각각 하나의 인풋 액티베이션(Act_In)과 하나의 가중치에 대한 곱셈을 수행할 수 있다. PE 어레이는 각각의 곱셈에 대한 값을 합한 부분합을 생성할 수 있다. 이러한 부분합은 아웃풋 액티베이션 (Act_Out)으로 활용될 수 있다. PE 어레이는 이차원 매트릭스 곱셈을 수행하므로 이차원 매트릭스 연산 유 닛(2D matrix compute unit)으로 지칭될 수도 있다. 벡터 유닛은 주로 1차원 연산을 수행할 수 있다. 벡터 유닛은 PE 어레이와 함께 딥러닝 연산을 수행할 수 있다. 이를 통해서 프로세싱 유닛은 필요한 연산에 특화될 수 있다. 즉, 프로세싱 코어는 대량의 2차원 매트릭스 곱셈과 1차원 연산을 수행하는 연산 모듈이 각각 있어 효율적으로 딥러닝 작업을 수행할 수 있다. 도 4는 프로세싱 유닛에 의해서 실행되는 딥러닝 작업의 신경망 네트워크의 구조를 설명하기 위한 개념도이다. 도 4를 참조하면, PE 어레이에 의해서 구현되는 신경망 네트워크는 인풋 데이터를 입력 받는 입력노드를 포함하는 입력 레이어(Input1~k)와, 출력 데이터를 출력하는 출력노드를 포함하는 출력 레이어(Output1~i)와, 입력 레이어와 출력 레이어 사이에 배치되는 M 개의 히든 레이어를 포함할 수 있다. 여기서, 각 레이어들의 노드를 연결하는 에지(Edge)에는 가중치가 설정될 수 있다. 이러한 가중치 혹은 에지의 유무는 학습 과정에서 추가, 제거, 또는 업데이트 될 수 있다. 따라서, 학습 과정을 통하여, k개의 입력노드와 i개의 출력노드 사이에 배치되는 노드들 및 에지들의 가중치는 업데이트될 수 있다. 신경망 네트워크가 학습을 수행하기 전에는 모든 노드와 에지는 초기값으로 설정될 수 있다. 그러나, 누적하여 정보가 입력될 경우, 노드 및 에지들의 가중치는 변경되고, 이 과정에서 학습인자로 입력되는 파라미터들과 출 력노드로 할당되는 값 사이의 매칭이 이루어질 수 있다. 또한, 신경망 네트워크를 구성하는 입력노드와 출력노드 사이의 노드 및 에지의 가중치는 신경망 네트워크의 학 습 과정에 의해 업데이트될 수 있다. 상기 신경망 네트워크는 예를 들어, ANN(Artificial Neural Network), SLP(Single Layer Perceptron), MLP(Multi-Layer Perceptron), DNN(Deep Neual Network), RNN (Recurrent Neual Network), CNN(Convolution Neural Network) 및 LSTM(Long Short-Term Memory) 중 적어도 하나일 수 있다. 단, 본 실시예들이 이에 제한되는 것은 아니다. 다시, 도 2를 참조하면, 액티베이션 버퍼는 프로세싱 유닛으로 인풋 액티베이션(Act_In)을 제공하고, 프로세싱 유닛으로부터 아웃풋 액티베이션(Act_Out)을 수신할 수 있다. 액티베이션 버퍼는 인풋 액티 베이션(Act_In)과 아웃풋 액티베이션(Act_Out)을 일시적으로 저장할 수 있다. 인풋 액티베이션(Act_In) 및 아웃풋 액티베이션(Act_Out)은 신경망 네트워크의 레이어의 입력값과 출력값을 의 미할 수 있다. 이때, 신경망 네트워크의 레이어가 복수인 경우 이전 레이어의 출력값이 다음 레이어의 입력값이 되므로 이전 레이어의 아웃풋 액티베이션(Act_Out)이 다음 레이어의 인풋 액티베이션(Act_In)으로 활용될 수 있 다. 액티베이션 버퍼는 연산량이 많은 프로세싱 유닛, 특히, PE 어레이에 빠르게 액티베이션을 제공 하고, 빠르게 액티베이션을 수신하여 프로세싱 코어의 연산 속도를 높일 수 있다. 액티베이션 로드/스토어 유닛은 스크래치 패드로부터 인풋 액티베이션(Act_In)을 액티베이션 버퍼 로 전달하고, 액티베이션 버퍼로부터 아웃풋 액티베이션(Act_Out)을 상기 온 칩 버퍼로 전달할 수 있 다. 즉, 액티베이션 로드/스토어 유닛은 액티베이션의 로드 작업과 스토어 작업을 모두 수행할 수 있다. 스크래치 패드는 프로세싱 코어 내부에 위치한 메모리로서, 프로세싱 코어가 작업에 필요한 모 든 입력 데이터를 외부로부터 수신하여 임시로 저장할 수 있다. 또한, 스크래치 패드는 프로세싱 코어 에 의해서 연산된 출력 데이터를 외부로 전송하기 위해서 일시적으로 저장할 수 있다. 스크래치 패드는 액티베이션 로드/스토어 유닛에 의해서 인풋 액티베이션(Act_In)을 액티베이션 버퍼 로 전송하고, 아웃풋 액티베이션(Act_Out)을 수신할 수 있다. 스크래치 패드는 액티베이션 로드/스토 어 유닛 외에도, 프로세싱 유닛과 직접 데이터를 송수신할 수 있다. 즉, 스크래치 패드는 PE 어레이 및 벡터 유닛 각각과 데이터를 주고받을 수 있다. 로드/스토어 유닛은 외부 인터페이스를 통해서 외부에서 입력 데이터, 프로그램 및 제어 신호 중 적 어도 하나를 수신할 수 있다. 로드/스토어 유닛은 스크래치 패드로 수신한 입력 데이터, 프로그램 및 제어 신호 중 적어도 하나를 전송할 수 있다. 유사하게 로드/스토어 유닛은 외부 인터페이스를 통해서 출력 데이터를 외부로 전달 수 있다. 로드/ 스토어 유닛은 프로세싱 유닛이 생성한 출력 데이터를 전송할 수 있다. 도 5는 도 1의 시스템 온 칩의 온 칩 메모리의 구조를 설명하기 하기 위한 개념도이다. 도 5를 참조하면, 시스템 온 칩은 제1 내지 제8 프로세싱 유닛(110a~110h) 및 온 칩 메모리(OCM)를 포함 할 수 있다. 도 5에서는 예시적으로 8개의 프로세싱 유닛을 도시하였으나, 이는 예시에 불과하고 프로세싱 유닛 의 개수는 얼마든지 달라질 수 있다. 온 칩 메모리(OCM)는 제1 내지 제8 스크래치 패드(140a~140h) 및 재구성가능 온 칩 메모리를 포함할 수 있 다. 제1 내지 제8 스크래치 패드(140a~140h)는 각각 제1 내지 제8 프로세싱 유닛(110a~110h)의 전용 메모리로 사용 될 수 있다. 즉, 제1 내지 제8 프로세싱 유닛(110a~110h)과 제1 내지 제8 스크래치 패드(140a~140h)는 서로 1:1로 대응될 수 있다. 재구성가능 온 칩 메모리는 제1 내지 제8 메모리 유닛(210a~210h)을 포함할 수 있다. 제1 내지 제8 메모리 유닛(210a~210h)은 제1 내지 제8 프로세싱 유닛(110a~110h) 및 제1 내지 제8 스크래치 패드(140a~140h)에 각각 대응할 수 있다. 즉, 메모리 유닛의 개수는 프로세싱 유닛 및 스크래치 패드의 개수와 동일한 8개일 수 있다. 재구성가능 온 칩 메모리는 2가지 종류의 온 칩 메모리 형식 중 어느 하나로 동작할 수 있다. 즉, 재구성 가능 온 칩 메모리는 스크래치 패드 형식 또는 공유 메모리 형식 중 어느 하나로 동작할 수 있다. 즉, 재 구성가능 온 칩 메모리는 하나의 하드웨어로 2가지의 논리적인(logical) 메모리를 구현할 수 있다. 재구성가능 온 칩 메모리가 스크래치 패드 형식으로 구현되는 경우, 재구성가능 온 칩 메모리는 제1 내지 제8 스크래치 패드(140a~140h)와 같이 제1 내지 제8 프로세싱 유닛(110a~110h) 각각의 전용 메모리 (private memory)로 동작할 수 있다. 스크래치 패드는 공유 메모리에 비해서 상대적으로 고속의 클럭으로 동작 할 수 있고, 재구성가능 온 칩 메모리도 스크래치 패드 형식으로 동작할 때 상대적으로 더 빠른 클럭을 사용할 수 있다. 재구성가능 온 칩 메모리가 공유 메모리 형식으로 구현되는 경우, 재구성가능 온 칩 메모리는 제1 프 로세싱 유닛(110a) 및 제2 프로세싱 유닛(110b)이 서로 공유하는 공용 메모리(common memory)로 동작할 수 있다. 이때, 재구성가능 온 칩 메모리 는 제1 내지 제8 프로세싱 유닛(110a~110b)뿐만 아니라 제1 내지 제 8 스크래치 패드(140a~140h) 에 의해서도 공유될 수 있다. 공유 메모리는 일반적으로 스크래치 패드에 비해서 낮은 클럭을 사용할 수 있으나, 이에 제한되는 것은 아니다. 재구성가능 온 칩 메모리가 공유 메모리 형식으로 동작할 때는, 제1 내지 제8 프로세싱 유닛(110a~110h)이 재구성가능 온 칩 메모리를 공유할 수 있다. 이때, 재구성가능 온 칩 메모리는 오프 칩 메모리(200 0)와 데이터 버스를 통해서 연결되고, 오프 칩 메모리의 버퍼로 동작할 수도 있다. 재구성가능 온 칩 메모리는 적어도 일부가 스크래치 패드 형식으로 동작하고, 나머지가 공유 메모리 형식 으로 동작할 수 있다. 즉, 재구성가능 온 칩 메모리 전체가 스크래치 패드 형식으로 동작할 수도 있고, 재 구성가능 온 칩 메모리 전체가 공유 메모리 형식으로 동작할 수도 있다. 또는, 재구성가능 온 칩 메모리 의 일부가 스크래치 패드 형식으로 동작하고, 나머지 일부가 공유 메모리 형식으로 동작할 수 있다. 도 6 내지 도 12는 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩의 재구성 온 칩 메모리의 형태를 설명하기 위한 도면들이다. 도 5 및 도 6을 참조하면, 제1 프로세싱 유닛(110a)은 온 칩 메모리(OCM)의 제1 전용 영역(AE1)을 스크래치 패 드 형식으로 이용할 수 있다. 제5 프로세싱 유닛(110e)은 온 칩 메모리(OCM)의 제5 전용 영역(AE5)을 스크래치 패드 형식으로 이용할 수 있다. 이때, 제1 전용 영역(AE1)은 제1 프로세싱 유닛(110a)의 전용 메모리로 동작하고, 제5 전용 영역(AE5)은 제5 프 로세싱 유닛(110e)의 전용 메모리로 동작할 수 있다. 공용 영역(AC)은 제1 내지 제8 프로세싱 유닛(110a~110h) 에 의해서 공유되는 메모리일 수 있다. 제1 전용 영역(AE1)은 도 5의 제1 스크래치 패드(140a)와 제1 메모리 유닛(210a)을 포함할 수 있다. 제1 전용 영역(AE1)은 하드웨어적으로 분리된 제1 스크래치 패드(140a)와 제1 메모리 유닛(210a)이 같은 방식으로 동작하 여 논리적으로 하나의 스크래치 패드 메모리로 동작하는 영역일 수 있다. 제5 전용 영역(AE5)은 도 5의 제5 스크래치 패드(140e)와 제5 메모리 유닛(210e)을 포함할 수 있다. 제5 전용 영역(AE5)은 하드웨어적으로 분리된 제5 스크래치 패드(140e)와 제5 메모리 유닛(210e)이 같은 방식으로 동작하 여 논리적으로 하나의 스크래치 패드 메모리로 동작하는 영역일 수 있다. 공용 영역(AC)은 제1 내지 제8 프로세싱 유닛(110a~110h) 이 공유하는 메모리 영역일 수 있다. 도 6에서는 공용 영역(AC)이 제1 메모리 유닛(210a) 및 제5 메모리 유닛(210e)을 제외한 나머지 부분으로 형성되는 경우를 도시 하였다. 즉, 도 6에서는 제1 메모리 유닛(210a) 및 제5 메모리 유닛(210e)이 스크래치 패드 형식으로 구현되고, 제2 내지 제4 메모리 유닛(210b~210d) 및 제6 내지 제8 메모리 유닛(210f~210h)이 공유 메모리 즉, 공용 영역 (AC)으로 구현되는 것을 나타낼 수 있다. 본 실시예에 따른 재구성가능 온 칩 메모리는 각 프로세싱 유닛에 대응하는 영역을 최적화된 비율의 논리 적인 스크래치 패드와 논리적인 공유 메모리로 전환하여 사용할 수 있다. 재구성가능 온 칩 메모리는 이러 한 비율의 조정을 런 타임(Run time)에서 수행할 수 있다. 각 프로세싱 유닛은 서로 동일한 작업을 하는 경우도 있지만, 서로 상이한 작업을 하는 경우도 있을 수 있다. 이 경우 각 프로세싱 유닛이 하는 작업에 필요한 스크 래치 패드의 용량과 공유 메모리의 용량은 매번 다를 수밖에 없다. 이에 따라서, 기존의 온 칩 메모리와 같이 스크래치 패드와 공유 메모리의 구성 비율이 고정적으로 설정되는 경 우에는 각 프로세싱 유닛에게 할당되는 연산 작업에 따른 비효율이 발생할 수 있다. 이에 반해, 본 실시예에 따른 재구성가능 온 칩 메모리는 런 타임 중에 연산 작업에 따라서 최적의 스크래치 패 드 및 공유 메모리의 비율을 설정할 수 있고, 연산의 효율성 및 속도가 향상될 수 있다. 도 5 및 도 7을 참조하면, 제1 내지 제3 및 제5 내지 제7 프로세싱 유닛(110a~110c, 110e~110g) 각각의 제1 내 지 제3 및 제5 내지 제7 전용 영역(AE1~AE3, AE5~AE7)은 각각 제1 내지 제3 및 제5 내지 제7 스크래치 패드 (140a~140c, 140e~140g)만을 포함할 수 있다. 또한, 제4 전용 영역(AE4)은 제4 스크래치 패드(140d)와 제4 메모리 영역(210d)을 포함할 수 있다. 제8 전용 영 역(AE8)은 제8 스크래치 패드(140h)와 제8 메모리 영역(210h)을 포함할 수 있다. 재구성가능 온 칩 메모리(20 0)의 제1 내지 제3 및 제5 내지 제7 메모리 유닛(210a~210c, 210e~210g)은 공용 영역(AC)으로 활용될 수 있다. 도 5 및 도 8을 참조하면, 제1 내지 제4 프로세싱 유닛(110a~110d) 각각의 제1 내지 제4 전용 영역(AE1~AE4)은 각각 제1 내지 제4 스크래치 패드(140a~140d)를 포함할 수 있다. 또한, 제1 내지 제4 전용 영역(AE1~AE4)은 각 각 제1 내지 제4 메모리 유닛(210a~210d)을 포함할 수 있다. 제5 내지 제8 프로세싱 유닛(110e~110h)의 제5 내지 제8 전용 영역(AE5~AE8)은 각각 제5 내지 제8 스크래치 패 드(140f~140h)만을 포함할 수 있다. 재구성가능 온 칩 메모리의 제5 내지 제8 메모리 유닛(210e~210h)은 공유 메모리로 활용될 수 있다. 도 5 및 도 9를 참조하면, 제1 내지 제4 프로세싱 유닛(110a~110d) 각각의 제1 내지 제4 전용 영역(AE1~AE4)은 각각 제1 내지 제4 스크래치 패드(140a~140d)만을 포함할 수 있다. 또한, 제5 내지 제8 프로세싱 유닛 (110e~110h) 각각의 제5 내지 제8 전용 영역(AE5~AE8)은 각각 제5 내지 제8 스크래치 패드(140e~140h)를 포함 할 수 있다. 또한, 제5 내지 제8 전용 영역(AE5~AE8)은 각각 제5 내지 제8 메모리 유닛(210e~210h)을 포함할 수 있다. 재구성가능 온 칩 메모리의 제1 내지 제4 메모리 유닛(210a~210d)은 공유 메모리로 활용될 수 있다. 도 5 및 도 10을 참조하면, 제1, 제3, 제5 및 제7 프로세싱 유닛(110a, 110c, 110e, 110g) 각각의 제1, 제3, 제5 및 제7 전용 영역(AE1, AE3, AE5, AE7)은 각각 제1, 제3, 제5 및 제7 스크래치 패드(140a, 140c, 140e, 140g)만을 포함할 수 있다. 또한, 제2, 제4, 제6 및 제8 프로세싱 유닛(110b, 110d, 110f, 110h) 각각의 제2, 제4, 제6 및 제8 전용 영역(AE2, AE4, AE6 및 AE8)은 각각 제2, 제4, 제6 및 제8 스크래치 패드(140b. 140d, 140f, 140h)를 포함할 수 있다. 또한, 제2, 제4, 제6 및 제8 전용 영역(AE2, AE4, AE6 및 AE8)은 제2, 제4, 제 6 및 제8 메모리 유닛(210b, 210d, 210f, 210h)을 포함할 수 있다. 재구성가능 온 칩 메모리의 제1, 제3, 제5 및 제7 메모리 유닛(210a, 210c, 210e, 210g)은 공유 메모리로 활용될 수 있다. 도 5 및 도 11을 참조하면, 제1, 제3, 제5 및 제7 프로세싱 유닛(110a, 110c, 110e, 110g) 각각의 제1, 제3, 제5 및 제7 전용 영역(AE1, AE3, AE5, AE7)은 각각 제1, 제3, 제5 및 제7 스크래치 패드(140a, 140c, 140e, 140g)를 포함할 수 있다. 또한, 제1, 제3, 제5 및 제7 전용 영역(AE1, AE3, AE5, AE7)은 각각 제1, 제3, 제5 및 제7 메모리 유닛(210a, 210c, 210e, 210g)을 포함할 수 있다. 제2, 제4, 제6 및 제8 프로세싱 유닛(110b, 110d, 110f, 110h) 각각의 제2, 제4, 제6 및 제8 전용 영역(AE2, AE4, AE6, AE8)은 각각 제2, 제4, 제6 및 제8 스크래치 패드(140b, 140d, 140f, 140h)만을 포함할 수 있다. 재 구성가능 온 칩 메모리의 제2, 제4, 제6 및 제8 메모리 유닛(210b, 210d, 210f, 210h)은 공유 메모리로 활용될 수 있다. 도 5 및 도 12를 참조하면, 제1 내지 제8 프로세싱 유닛(110a~110h) 각각의 제1 내지 제8 전용 영역(AE1~AE8)은 각각 제1 내지 제8 스크래치 패드(140a~140h)를 포함할 수 있다. 또한, 제1 내지 제8 전용 영역(AE1~AE8)은 각 각 제1 내지 제8 메모리 유닛(210a~210h)을 포함할 수 있다. 이와 같이, 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리는 제1 내지 제8 전용 영역(AE1~AE8) 및 공 용 영역(AC)의 크기가 런 타임 중에 변할 수 있다. 도 13은 도 5의 A 부분의 구조를 세부적으로 설명하기 위한 개념도이다. 도 5 및 도 13을 참조하면, 재구성가능 온 칩 메모리는 제1 스크래치 패드 컨트롤러(141a), 제2 스크래치 패드 컨트롤러(141b), 제5 스크래치 패드 컨트롤러(141e), 제6 스크래치 패드 컨트롤러(141f), 제1 내지 제8 메 모리 유닛(210a~210h) 및 글로벌 컨트롤러를 포함할 수 있다. 재구성가능 온 칩 메모리는 도시되지 않은 다른 스크래치 패드 컨트롤러도 포함될 수 있으나 편의상 생략한다. 제1 스크래치 패드 컨트롤러(141a)는 제1 스크래치 패드(140a)를 제어할 수 있다. 또한, 제1 스크래치 패드 컨 트롤러(141a)는 제1 메모리 유닛(210a)을 제어할 수 있다. 구체적으로, 제1 메모리 유닛(210a)이 논리적인 스크 래치 패드 형식으로 구현될 때, 제1 스크래치 패드 컨트롤러(141a)에 의한 제어가 제1 메모리 유닛(210a)에 수 행될 수 있다. 제2 스크래치 패드 컨트롤러(141b)는 제2 스크래치 패드(140b)를 제어할 수 있다. 또한, 제2 스크래치 패드 컨 트롤러(141b)는 제2 메모리 유닛(210b)을 제어할 수 있다. 즉, 제2 메모리 유닛(210b)이 논리적인 스크래치 패 드 형식으로 구현될 때, 제1 스크래치 패드 컨트롤러(141a)에 의한 제어가 제2 메모리 유닛(210b)에 수행될 수있다. 제5 스크래치 패드 컨트롤러(141e)는 제5 스크래치 패드(140e)를 제어할 수 있다. 또한, 제5 스크래치 패드 컨 트롤러(141e)는 제5 메모리 유닛(210e)을 제어할 수 있다. 즉, 제5 메모리 유닛(210e)이 논리적인 스크래치 패 드 형식으로 구현될 때, 제5 스크래치 패드 컨트롤러(141e)에 의한 제어가 제5 메모리 유닛(210e)에 수행될 수 있다. 제6 스크래치 패드 컨트롤러(141f)는 제6 스크래치 패드(140f)를 제어할 수 있다. 또한, 제6 스크래치 패드 컨 트롤러(141f)는 제6 메모리 유닛(210f)을 제어할 수 있다. 즉, 제6 메모리 유닛(210f)이 논리적인 스크래치 패 드 형식으로 구현될 때, 제6 스크래치 패드 컨트롤러(141f)에 의한 제어가 제6 메모리 유닛(210f)에 수행될 수 있다. 글로벌 컨트롤러는 제1 내지 제8 메모리 유닛(210a~210h)을 모두 제어할 수 있다. 구체적으로, 글로벌 컨 트롤러는 제1 내지 제8 메모리 유닛(210a~210h)이 각각 논리적으로 공유 메모리 형식으로 동작할 때(즉, 논리적으로 스크래치 패드 형식으로 동작하지 않을 때), 제1 메모리 유닛(210a) 내지 제8 메모리 유닛(210h)을 제어할 수 있다. 즉, 제1 내지 제8 메모리 유닛(210a~210h)은 논리적으로 어떤 형식의 메모리로 구현되느냐에 따라서 제1 내지 제8 스크래치 패드 컨트롤러(141a~141h)에 의해 각각 제어되거나 글로벌 컨트롤러에 의해서 제어될 수 있 다. 제1, 제2, 제5 및 제6 스크래치 패드 컨트롤러(141a, 141b, 141e, 141f)를 포함하는 스크래치 패드 컨트롤러가 각각 제1 내지 제8 메모리 유닛(210a~210h)을 제어하는 경우, 제1 내지 제8 스크래치 패드 컨트롤러(141a~141 h)는 제1 내지 제8 메모리 유닛(210a~210h)을 제1 내지 제8 스크래치 패드(140a~140h)와 동일하게 제어하므로, 제1 내지 제8 프로세싱 유닛(110a~110h)의 전용 메모리로 제어할 수 있다. 이에 따라서, 제1 내지 제8 메모리 유닛(210a~210h)은 제1 내지 제8 프로세싱 유닛(110a~110h)의 클럭 주파수와 대응하는 클럭 주파수로 동작할 수 있다. 제1 스크래치 패드 컨트롤러(141a), 제2 스크래치 패드 컨트롤러(141b), 제5 스크래치 패드 컨트로럴(141e) 및 제6 스크래치 패드 컨트롤러(141f)를 포함하는 스크래치 패드 컨트롤러는 각각 도 2의 프로세싱 코어의 로 드/스토어 유닛을 포함할 수 있다. 글로벌 컨트롤러가 제1 내지 제8 메모리 유닛(210a~210h) 중 적어도 하나를 각각 제어하는 경우, 글로벌 컨트롤러는 제1 내지 제8 메모리 유닛(210a~210h)을 각각 제1 내지 제8 프로세싱 유닛(110a~110h)의 공용 메모리로 제어할 수 있다. 이에 따라서, 제1 내지 제8 메모리 유닛(210a~210h) 중 적어도 하나는 각각 제1 내지 제8 프로세싱 유닛(110a~110h) 의 클럭 주파수와는 무관한 클럭 주파수로 동작할 수 있다. 단, 본 실시예가 이 에 제한되는 것은 아니다. 글로벌 컨트롤러는 제1 내지 제8 메모리 유닛(210a~210h)을 도 1의 데이터 버스와 연결할 수 있다. 제1 내지 제8 메모리 유닛(210a~210h)은 글로벌 컨트롤러에 의해서 도 1의 오프 칩 메모리와 데이터를 교 환하거나, 제1 내지 제8 스크래치 패드(140a~140h) 와 각각 데이터를 교환할 수 있다. 제1 내지 제8 메모리 유닛(210a~210h)은 각각 적어도 하나의 메모리 뱅크를 포함할 수 있다. 제1 메모리 유닛 (210a)은 적어도 하나의 제1 메모리 뱅크(211a)를 포함할 수 있다. 제1 메모리 뱅크(211a)는 제1 메모리 유닛 (210a)을 특정한 크기로 나눈 영역일 수 있다. 각각의 제1 메모리 뱅크(211a)는 모두 동일한 크기의 메모리 소 자일 수 있다. 단, 본 실시예가 이에 제한되는 것은 아니다. 도 13에서는 4개의 메모리 뱅크가 하나의 메모리 유닛에 포함되는 것으로 도시되었다. 유사하게 제2, 제5 및 제6 메모리 유닛(210b, 210e, 210f)는 각각 적어도 하나의 제2, 제5 및 제6 메모리 뱅크 (211b, 211e, 211f)를 포함할 수 있다. 이하 제1 메모리 뱅크(211a) 및 제5 메모리 뱅크(211e)를 기준으로 설명하고, 이는 제2 및 제6 메모리 뱅크 (211b, 211f)를 포함한 다른 메모리 뱅크와 동일할 수 있다. 제1 메모리 뱅크(211a)는 각각 논리적으로 스크래치 패드 형식으로 동작하거나 논리적으로 공유 메모리 형식으 로 동작할 수 있다. 이때, 제1 메모리 뱅크(211a)는 제1 메모리 유닛(210a) 내의 다른 메모리 뱅크와 독립적으 로 동작할 수도 있다. 단, 본 실시예가 이에 제한되는 것은 아니다.각 메모리 뱅크별로 독립적으로 동작하는 경우, 제1 메모리 유닛(210a)은 제1 스크래치 패드(140a)와 동일한 방 식으로 동작하는 제1 영역과, 제1 스크래치 패드(140a)와 다른 방식으로 동작하는 제2 영역을 포함할 수 있다. 이때, 제1 영역과 제2 영역이 반드시 병존하는 것은 아니고 어느 하나의 영역이 전체 제1 메모리 유닛(210a)의 전체를 차지할 수도 있다. 마찬가지로, 제2 메모리 유닛(210b)은 제2 스크래치 패드(140b)와 동일한 방식으로 동작하는 제3 영역과, 제2 스크래치 패드(140b)와 다른 방식으로 동작하는 제4 영역을 포함할 수 있다. 이때, 제3 영역과 제4 영역이 반드 시 병존하는 것은 아니고 어느 하나의 영역이 전체 제1 메모리 유닛(210a)의 전체를 차지할 수도 있다. 이때, 제1 영역과 제2 영역의 비율은 제3 영역과 제4 영역의 비율과 상이할 수 있다. 단, 본 실시예가 이에 제 한되는 것은 아니다. 따라서, 제1 영역과 제2 영역의 비율은 제3 영역과 제4 영역의 비율과 동일할 수도 있다. 즉, 각 메모리 유닛에서의 메모리 구성 비율을 얼마든지 달라질 수 있다. 일반적으로 기존의 시스템 온 칩의 경우에는 고속의 스크래치 패드를 제외한 온 칩 메모리를 고밀도 저전력 SRAM으로 구성하는 경우가 많았다. 이는 필요한 용량 대비 칩의 면적과 사용 전력에서 SRAM이 높은 효율을 가지 기 때문이다. 그러나, 기존의 온 칩 메모리는 미리 결정된 스크래치 패드의 용량보다 더 많은 데이터가 빠르게 필요한 작업의 경우에는 처리 속도가 크게 느려질 수밖에 없었고, 공유 메모리의 필요가 크지 않은 경우에도 남 아있는 공유 메모리를 활용할 방안이 전혀 없어 비효율이 발생하였다. 이에 반해서, 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리는 경우에 따라서 각각 2개의 컨트롤 러 중 어느 하나에 의해서 선택적으로 제어될 수 있다. 이때, 재구성가능 온 칩 메모리가 전체적으로 2개 의 컨트롤러 중 정해진 어느 하나에 의해서만 제어되는 것은 아니고, 메모리 유닛 단위 또는 메모리 뱅크 단위 로 독립적으로 제어될 수 있다. 이를 통해서, 본 실시예에 따른 재구성가능 온 칩 메모리는 연산 작업에 따른 최적의 메모리 구성 비율을 런 타임 중에 획득하여 더 빠르고 효율적인 연산작업을 수행할 수 있다. 인공지능에 특화된 프로세싱 유닛의 경 우 특정 어플리케이션 단위로 스크래치 패드와 공유 메모리의 필요한 크기가 달라질 수 있다. 나아가, 동일한 어플리케이션이라도 딥러닝 네트워크를 사용하는 경우 각 레이어 별로 스크래치 패드와 공유 메모리의 필요한 크기가 달라질 수 있다. 본 실시예에 따른 재구성가능 온 칩 메모리는 각 레이어에 따른 연산 단계의 변화 에도 메모리의 구성 비율이 런 타임 중에 변화될 수 있어 빠르고 효율적인 딥러닝 작업이 가능할 수 있다. 도 14는 도 13의 메모리 뱅크를 세부적으로 설명하기 위한 블록도이다. 도 14는 제1 메모리 뱅크(211a)에 대해 서 도시하였지만, 다른 메모리 뱅크도 제1 메모리 뱅크(211a)와 동일한 구조일 수 있다. 도 14를 참조하면, 제1 메모리 뱅크(211a)는 셀 어레이(Ca), 뱅크 컨트롤러(Bc), 제1 경로 유닛(P1) 및 제2 경 로 유닛(P2)을 포함할 수 있다. 셀 어레이(Ca)는 내부에 복수의 메모리 소자(Cell)를 포함할 수 있다. 셀 어레이(Ca)는 복수의 메모리 소자가 격자 구조로 정렬되어 배치될 수 있다. 셀 어레이(Ca)는 예를 들어, SRAM(Static Random Access Memory) 셀 어 레이일 수 있다. 도 15는 도 14의 셀 어레이를 설명하기 위한 회로도이다. 도 14 및 도 15를 참조하면, 셀 어레이(Ca)는 복수의 SRAM 셀을 포함할 수 있다. 각각의 SRAM 셀은 워드라인 (WL), 비트라인(BL), 제1 트랜지스터(Tr1), 제2 트랜지스터(Tr2), 제1 인버터(Inv1) 및 제2 인버터(Inv2)를 포 함할 수 있다. 워드라인(WL)은 셀을 선택하기 위한 신호 라인일 수 있다. 즉, 워드라인(WL)에 하이(또는 로우) 신호가 인가되 면 해당 셀이 선택될 수 있다. 비트라인(BL)은 데이터를 인가하는 라인일 수 있다. 비트라인(BL)에 데이터가 하 이(또는 로우)로 인가되면 SRAM 셀에 하이(또는 로우) 데이터가 저장될 수 있다. 제1 트랜지스터(Tr1) 및 제2 트랜지스터(Tr2)는 워드라인(WL)의 신호 인가에 따라서 동작하고, 비트라인(BL)의 데이터를 통과시키는 스위치 역할을 할 수 있다. 제1 인버터(Inv1) 및 제2 인버터(Inv2)는 직렬로 연결되어 비 트라인(BL)을 통해서 인가된 데이터를 저장할 수 있다. 제1 인버터(Inv1) 및 제2 인버터(Inv2)는 입력된 데이터 를 각각 반전시켜 원래의 데이터를 저장할 수 있다. 라이트(write) 동작의 경우 워드라인(WL)의 인가를 통해서 제1 트랜지스터(Tr1) 및 제2 트랜지스터(Tr2)가 온 (On)이 되고, 비트라인(BL)의 데이터가 제1 인버터(Inv1) 및 제2 인버터(Inv2)로 인가될 수 있다. 이후, 워드라인(WL)의 인가가 종료되면 제1 트랜지스터(Tr1) 및 제2 트랜지스터(Tr2)가 오프되어 데이터가 2개의 인버터를 통해서 유지될 수 있다. 리드(Read) 동작의 경우 워드라인(WL)의 인가를 통해서 제1 트랜지스터(Tr1) 및 제2 트랜지스터(Tr2)가 온(On) 되고, 제1 인버터(Inv1) 및 제2 인버터(Inv2)에 저장된 데이터가 비트라인(BL)으로 나가서 리드될 수 있다. 도 4, 도 13 및 도 14를 참조하면, 뱅크 컨트롤러(Bc)는 셀 어레이(Ca)를 제어할 수 있다. 뱅크 컨트롤러(Bc)는 셀 어레이(Ca)가 스크래치 패드 형식으로 동작할지, 아니면 공유 메모리 형식으로 동작할 지를 결정하고 그에 따라 셀 어레이(Ca)를 제어할 수 있다. 구체적으로, 뱅크 컨트롤러(Bc)는 런 타임 중에 제1 경로 유닛(P1) 방향으로 데이터를 송수신할지, 제2 경로 유 닛(P2) 방향으로 데이터를 송수신할지를 결정할 수 있다. 뱅크 컨트롤러(Bc)는 경로 컨트롤 신호(Spc)에 따라 데이터의 송수신 방향을 결정할 수 있다. 경로 컨트롤 신호(Spc)는 미리 설계된 장치 드라이버나 컴파일러에 의해서 생성될 수 있다. 경로 컨트롤 신호 (Spc)는 연산 작업의 특성에 따라서 생성될 수 있다. 또는, 경로 컨트롤 신호(Spc)는 사용자로부터 수신된 입력 에 의해서 생성될 수 있다. 즉, 사용자가 가장 최적의 메모리 구성 비율을 선택하기 위해서 경로 컨트롤 신호 (Spc)에 대한 입력을 직접 인가할 수 있다. 뱅크 컨트롤러(Bc)는 경로 컨트롤 신호(Spc)를 통해서 셀 어레이(Ca)에 저장된 데이터들의 송수신되는 경로를 결정할 수 있다. 뱅크 컨트롤러(Bc)가 데이터들이 송수신되는 경로를 결정하는 것에 따라 데이터들의 교환 인터 페이스가 달라질 수 있다. 즉, 뱅크 컨트롤러(Bc)가 제1 경로 유닛(P1)과 데이터를 교환하는 경우 제1 인터페이 스를 이용할 수 있고, 제2 경로 유닛(P2)과 데이터를 교환하는 경우 제2 인터페이스를 이용할 수 있다. 이때, 제1 인터페이스와 제2 인터페이스는 서로 다를 수 있다. 또한, 데이터가 저장되는 어드레스 체계도 달라질 수 있다. 즉, 특정 인터페이스를 선택하면 그에 대응하는 어 드레스 체계로 리드 및 라이트 동작이 수행될 수 있다. 뱅크 컨트롤러(Bc)는 특정 클럭 주파수로 동작할 수 있다. 예를 들어, 셀 어레이(Ca)가 SRAM 셀 어레이인 경우 에는 일반적인 SRAM의 동작 클럭 주파수로 뱅크 컨트롤러(Bc)가 동작할 수 있다. 도 14에서는 예시적으로 750MHz로 도시하였지만 본 실시예가 이에 제한되는 것은 아니다. 제1 경로 유닛(P1)은 뱅크 컨트롤러(Bc)와 연결될 수 있다. 제1 경로 유닛(P1)은 셀 어레이(Ca)의 데이터를 제1 프로세싱 유닛(110a)과 직접 교환할 수 있다. 이때, “직접”이란 데이터 버스를 거치지 않고 서로 교환 됨을 의미할 수 있다. 즉, 제1 프로세싱 유닛(110a)은 제1 스크래치 패드(140a)와 직접 데이터를 교환할 수 있 고, 제1 프로세싱 유닛(110a)은 재구성가능 온 칩 메모리가 논리적으로 스크래치 패드 형식으로 구현되었 을 때 제1 경로 유닛(P1)을 통해서 데이터를 교환할 수 있다. 제1 경로 유닛(P1)은 도 13의 제1 스크래치 패드 컨트롤러(141a) 및 제2 스크래치 패드 컨트롤러(141b)를 포함한 스크래치 패드 컨트롤러를 포함할 수 있다. 제1 경로 유닛(P1)은 멀티 사이클 싱크 패스(Multi-Cycle Sync-Path)를 구성할 수 있다. 즉, 제1 경로 유닛 (P1)의 동작 클럭 주파수는 제1 프로세싱 유닛(110a)의 동작 클럭 주파수와 동일할 수 있다. 제1 스크래치 패드 (140a)는 제1 프로세싱 유닛(110a)의 동작과 같은 속도로 빠르게 데이터를 교환하기 위해서 제1 프로세싱 유닛 (110a)의 동작 클럭 주파수와 동일한 클럭 주파수로 빠르게 데이터를 교환할 수 있다. 제1 경로 유닛(P1)도 동 일하게 제1 프로세싱 유닛(110a)의 동작 클럭 주파수와 동일한 클럭 주파수로 동작할 수 있다. 이때, 제1 경로 유닛(P1)의 동작 클럭 주파수는 뱅크 컨트롤러(Bc)의 동작 클럭 주파수의 배수(倍數)일 수 있다. 이 경우, 뱅크 컨트롤러(Bc)와 제1 경로 유닛(P1) 사이에 클럭의 동기화를 위한 CDC(Clock Domain Crossing) 작업이 따로 필요하지 않고, 이에 따라서 데이터 전송의 지연(delay)이 발생하지 않을 수 있다. 이에 따라서, 더 빠르고 효율적인 데이터 교환이 가능할 수 있다. 도 14에서는 예시적으로, 제1 경로 유닛(P1)의 동작 클럭 주파수는 1.5GHz로 동작할 수 있다. 이는 뱅크 컨트롤 러(Bc)의 750MHz의 2배의 주파수일 수 있다. 본 실시예가 이에 제한되는 것은 아니고 뱅크 컨트롤러(Bc)의 클럭 주파수의 정수배로 제1 경로 유닛(P1)이 동작하는 경우라면 얼마든지 가능할 수 있다. 제2 경로 유닛(P2)은 뱅크 컨트롤러(Bc)와 연결될 수 있다. 제2 경로 유닛(P2)은 셀 어레이(Ca)의 데이터를 제1 프로세싱 유닛(110a)과 직접 교환하지 않고, 데이터 버스를 통해서 교환할 수 있다. 즉, 제1 프로세싱 유 닛(110a)은 데이터 버스 및 제2 경로 유닛(P2)을 통해서 셀 어레이(Ca)와 데이터를 교환할 수 있다. 이때, 셀 어레이(Ca)는 단순히 제1 프로세싱 유닛(110a)뿐만 아니라 다른 프로세싱 유닛과도 데이터를 교환할수 있다. 즉, 제2 경로 유닛(P2)은 제1 메모리 뱅크(211a)가 논리적으로 공유 메모리 형식으로 구현되었을 때 셀 어레이 (Ca)와 모든 프로세싱 유닛과의 데이터 교환 경로일 수 있다. 제2 경로 유닛(P2)은 도 13의 글로벌 컨트롤러 를 포함할 수 있다. 제2 경로 유닛(P2)은 어싱크 패스(Async-Path)를 구성할 수 있다. 제2 경로 유닛(P2)의 동작 클럭 주파수는 데 이터 버스의 동작 클럭 주파수와 동일할 수 있다. 제2 경로 유닛(P2)도 동일하게 데이터 버스의 동 작 클럭 주파수와 동일한 클럭 주파수로 동작할 수 있다. 이때, 제2 경로 유닛(P2)의 동작 클럭 주파수는 뱅크 컨트롤러(Bc)의 동작 클럭 주파수와 서로 동기화되지 않을 수 있다. 이 경우, 뱅크 컨트롤러(Bc)와 제2 경로 유닛(P2) 사이에 클럭의 동기화를 위한 CDC(Clock Domain Crossing) 작업이 필요할 수 있다. 뱅크 컨트롤러(Bc)의 동작 클럭 주파수와 제2 경로 유닛(P2)의 동작 클럭 주 파수를 서로 동기화 시키지 않는 경우에는 클럭 도메인의 설계의 자유도가 높아질 수 있다. 따라서, 하드웨어 설계의 난이도가 낮아져 더욱 용이하게 하드웨어 동작을 도출할 수 있다. 뱅크 컨트롤러(Bc)는 제1 경로 유닛(P1)을 통해서 데이터를 교환하는 경우와 제2 경로 유닛(P2)을 통해서 데이 터를 교환하는 경우에 서로 다른 어드레스 체계를 이용할 수 있다. 즉, 뱅크 컨트롤러(Bc)는 제1 경로 유닛(P 1)을 통해서는 제1 어드레스 체계를 이용하고, 제2 경로 유닛(P2)을 통해서는 제2 어드레스 체계를 이용할 수 있다. 이때, 제1 어드레스 체계와 제2 어드레스 체계는 서로 다를 수 있다. 뱅크 컨트롤러(Bc)는 반드시 메모리 뱅크별로 존재할 필요는 없다. 즉, 뱅크 컨트롤러(Bc)는 스케쥴링을 위한 부분이 아니라 신호를 전달하는 역할을 하므로, 2개의 포트를 가지는 각각의 메모리 뱅크에 필수적인 부분은 아 니다. 따라서, 하나의 뱅크 컨트롤러(Bc)가 여러 메모리 뱅크를 제어할 수 있다. 여러 메모리 뱅크는 뱅크 컨트 롤러(Bc)에 의해 제어되더라도 독립적으로 동작할 수 있다. 단, 본 실시예가 이에 제한되는 것은 아니다. 물론, 뱅크 컨트롤러(Bc)는 각 메모리 뱅크별로 존재할 수도 있다. 이 경우, 뱅크 컨트롤러(Bc)가 각각의 메모 리 뱅크를 개별적으로 제어할 수 있다. 도 13 및 도 14를 참조하면, 제1 메모리 유닛(210a)이 제1 경로 유닛(P1)을 통해서 데이터를 교환하는 경우 제1 어드레스 체계를 사용하고, 제2 경로 유닛(P2)을 통해서 데이터를 교환하는 경우 제2 어드레스 체계를 사용할 수 있다. 유사하게, 제2 메모리 유닛(210b)이 제1 경로 유닛(P1)을 통해서 데이터를 교환하는 경우 제3 어드레 스 체계를 사용하고, 제2 경로 유닛(P2)을 통해서 데이터를 교환하는 경우 제2 어드레스 체계를 사용할 수 있다. 이때, 제1 어드레스 체계와 제3 어드레스 체계는 서로 동일할 수 있다. 단, 본 실시예가 이에 제한되는 것은 아니다. 제1 어드레스 체계와 제3 어드레스 체계는 각각 제1 프로세싱 유닛(110a) 및 제2 프로세싱 유닛(110b)에 각각 전용으로 사용될 수 있다. 제2 어드레스 체계는 제1 프로세싱 유닛(110a) 및 제2 프로세싱 유닛(110b)에 공용으 로 적용될 수 있다. 도 14에서는 예시적으로, 제2 경로 유닛(P2)의 동작 클럭 주파수는 1GHz로 동작할 수 있다. 이는 뱅크 컨트롤러 (Bc)의 750MHz의 동작 클럭 주파수와 동기화 되지 않은 주파수일 수 있다. 즉, 제2 경로 유닛(P2)의 동작 클럭 주파수는 뱅크 컨트롤러(Bc)의 동작 클럭 주파수에 전혀 종속되지 않고 자유롭게 설정될 수 있다. 일반적인 온 칩 메모리는 느린 SRAM(예를 들어, 750MHz)과 그보다 빠른 데이터 버스(예를 들어, 1GHz)를 이용하 여 CDC 작업에 따른 지연이 발생할 수밖에 없었다. 이에 반해서, 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리는 제2 경로 유닛(P2) 외에도 제1 경로 유닛(P1)을 이용할 여지가 있어 CDC 작업에 따른 지연 을 회피할 수 있다. 또한, 기존의 온 칩 메모리는 공유 메모리로서 복수의 프로세싱 유닛이 하나의 데이터 버스를 이용하므로 데이터 전송량이 동시에 발생하였을 때 전체적인 처리 속도의 저하가 쉽게 발생할 수 있다. 이에 반해서, 본 발 명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리는 제2 경로 유닛(P2) 외에도 제1 경로 유닛(P1)을 이 용할 여지가 있어 글로벌 컨트롤러에 몰리는 데이터 처리량을 적절하게 분산하는 효과도 얻을 수 있다. 이하, 도 16을 참조하여 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 설명한다. 상술한 설명과 중복되는 부분은 간략히 하거나 생략한다. 도 16은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리의 메모리 뱅크의 구조를 설명하기 위한 개념 도이다. 도 16을 참조하면, 제1_1 메모리 뱅크(211a_1)는 데이터 버스 및 제1 프로세싱 코어가 모두 싱크 가 능한(주파수가 서로 배수로 이루어진) 클럭 주파수로 동작할 수 있다. 즉, 제2 경로 유닛(P2)이 어싱크 패스로 구성할 필요가 없이 멀티 사이클 싱크 패스로 구성될 수 있다. 이 경우 제1 경로 유닛(P1) 외에도 제2 경로 유닛(P2) CDC에 따른 지연이 발생하지 않으므로 본 발명의 몇몇 실 시예들에 따른 재구성가능 온 칩 메모리의 연산 작업이 빠르고 효율적으로 수행될 수 있다. 도 16에서는 뱅크 컨트롤러(Bc)의 동작 클럭의 주파수는, 제1 경로 유닛(P1) 및 제2 경로 유닛(P2)의 동작 클럭 의 주파수인 1.5GHz와 싱크 가능한 750MHz일 수 있다. 이러한 경우에도, 제1 경로 유닛(P1) 및 제2 경로 유닛 (P2)은 제1 프로세싱 유닛(110a)의 전용 메모리로 사용될지 모든 프로세싱 유닛의 공용 메모리로 사용될지에 따 라 재구성의 효과는 유지될 수 있고, 공용 메모리로 사용되는 경우에도 CDC에 따른 지연도 추가적으로 차단될 수 있어 더 빠른 연산 작업의 처리가 가능할 수 있다. 또는 뱅크 컨트롤러(Bc)의 동작 클럭 주파수가 1.5GHz로 제1 경로 유닛(P1) 및 제2 경로 유닛(P2)과 모두 동일 한 경우에는 멀티 사이클 싱크 패스도 필요하지 않을 수 있다. 즉, 재구성가능 온 칩 메모리가 고속으로 동작하는 경우 CDC에 따른 지연도 없고, 멀티 사이클 싱크 패스의 설계도 없어 설계 난이도도 낮아질 수 있다. 이하, 도 17을 참조하여 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 설명한다. 상술한 설명과 중복되는 부분은 간략히 하거나 생략한다. 도 17은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리의 메모리 뱅크의 구조를 설명하기 위한 개념 도이다. 도 17을 참조하면, 제1_2 메모리 뱅크(211a_2)는 데이터 버스 및 제1 프로세싱 코어가 서로 종속되 지 않는 클럭 주파수로 동작할 수 있다. 즉, 제1 경로 유닛(P1)도 멀티 사이클 싱크 패스 대신 어싱크 패스를 사용할 수 있다. 이 경우 제1 프로세싱 유닛(110a), 데이터 버스 및 뱅크 컨트롤러(Bc)의 동작 클럭의 주파수의 설계 자유 도를 얻을 수 있어 설계 단계에서 하드웨어 세부사항의 선택의 폭이 넓어질 수 있다. 이를 통해서, 다양한 성능 의 장치를 설계할 수 있다. 도 17에서는 뱅크 컨트롤러(Bc)의 동작 클럭의 주파수는, 제1 경로 유닛(P1) 및 제2 경로 유닛(P2)의 동작 클럭 의 주파수에 종속되지 않은 750MHz이고, 제1 경로 유닛(P1) 및 제2 경로 유닛(P2)의 경우 각각 1GHz의 클럭 주 파수로 동작할 수 있다. 물론, 이는 예시에 불과하고, 제1 경로 유닛(P1) 및 제2 경로 유닛(P2)이 서로 다른 클 럭 주파수로 동작할 수도 있다. 이 경우 칩 설계 단계에서 각 클럭 주파수의 매칭 작업을 할 필요도 없으므로 조금 더 설계 단계의 자유도를 얻을 수 있다. 이하, 도 5, 도 14 및 도 18을 참조하여 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리 사용 방법을 설명한다. 상술한 설명과 중복되는 부분은 간략히 하거나 생략한다. 도 18은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리 사용 방법을 설명하기 위한 순서도이다. 도 18을 참조하면, 제1 프로세싱 유닛에 제1 연산 작업을 할당한다(S100). 구체적으로, 도 5를 참조하면, 시스템 온 칩에 탑재된 복수의 프로세싱 유닛은 연산 작업을 나누어 할당 받을 수 있다. 예를 들어, 제1 프로세싱 유닛(110a)은 제1 연산 작업을 할당 받아 처리할 수 있다. 다시, 도 18을 참조하면, 제1 경로 컨트롤 신호를 획득한다(S200). 구체적으로, 도 14를 참조하면, 뱅크 컨트롤러(Bc)는 런 타임 중에 제1 경로 유닛(P1) 방향으로 데이터를 송수 신할지, 제2 경로 유닛(P2) 방향으로 데이터를 송수신할지를 결정할 수 있다. 뱅크 컨트롤러(Bc)는 경로 컨트롤 신호(Spc)에 따라 데이터의 송수신 방향을 결정할 수 있다. 경로 컨트롤 신호(Spc)는 미리 설계된 장치 드라이버나 컴파일러에 의해서 생성될 수 있다. 경로 컨트롤 신호 (Spc)는 연산 작업의 특성에 따라서 생성될 수 있다. 또는, 경로 컨트롤 신호(Spc)는 사용자로부터 수신된 입력 에 의해서 생성될 수 있다. 즉, 사용자가 가장 최적의 메모리 구성 비율을 선택하기 위해서 경로 컨트롤 신호 (Spc)에 대한 입력을 직접 인가할 수 있다.다시, 도 18을 참조하면, 제1 및 제2 인터페이스 중 어느 것을 선택할지를 판단한다(S300). 구체적으로, 도 14를 참조하면, 뱅크 컨트롤러(Bc)가 데이터들이 송수신되는 경로를 결정하는 것에 따라 데이터 들의 교환 인터페이스가 달라질 수 있다. 또한, 데이터가 저장되는 어드레스 체계도 달라질 수 있다. 다시, 도 18을 참조하면, 제1 인터페이스를 사용하는 경우, 제1 어드레스 체계를 사용하여 온 칩 메모리에 리드 또는 라이트를 수행하고(S400), 제2 인터페이스를 사용하는 경우, 제2 어드레스 체계를 사용하여 온 칩 메모리 에 리드 또는 라이트를 수행한다(S500). 본 발명의 몇몇 실시예에 따른 재구성가능 온 칩 메모리 사용 방법은 하나의 하드웨어로 구성된 온 칩 메모리를 서로 다른 인터페이스로 사용하여 스크래치 패드와 공유 메모리의 구성 비율을 최적화할 수 있다. 이상의 설명은 본 실시예의 기술 사상을 예시적으로 설명한 것에 불과한 것으로서, 본 실시예가 속하는 기술 분 야에서 통상의 지식을 가진 자라면 본 실시예의 본질적인 특성에서 벗어나지 않는 범위에서 다양한 수정 및 변 형이 가능할 것이다. 따라서, 본 실시예들은 본 실시예의 기술 사상을 한정하기 위한 것이 아니라 설명하기 위 한 것이고, 이러한 실시예에 의하여 본 실시예의 기술 사상의 범위가 한정되는 것은 아니다. 본 실시예의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기술 사상은 본 실시예의 권리범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2021-0161074", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩을 설명하기 위한 개념 도이다. 도 2는 도 1의 프로세싱 코어의 구조를 세부적으로 설명하기 위한 블록도이다. 도 3은 도 2의 프로세싱 유닛의 구조를 세부적으로 설명하기 위한 블록도이다. 도 4는 프로세싱 유닛에 의해서 실행되는 딥러닝 작업의 신경망 네트워크의 구조를 설명하기 위한 개념도이다. 도 5는 도 1의 시스템 온 칩의 온 칩 메모리의 구조를 설명하기 하기 위한 개념도이다. 도 6 내지 도 12는 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리를 탑재한 시스템 온 칩의 재구성 온 칩 메모리의 형태를 설명하기 위한 도면들이다. 도 13은 도 5의 A 부분의 구조를 세부적으로 설명하기 위한 개념도이다. 도 14는 도 13의 메모리 뱅크를 세부적으로 설명하기 위한 블록도이다. 도 15는 도 14의 셀 어레이를 설명하기 위한 회로도이다. 도 16은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리의 메모리 뱅크의 구조를 설명하기 위한 개념 도이다.도 17은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리의 메모리 뱅크의 구조를 설명하기 위한 개념 도이다. 도 18은 본 발명의 몇몇 실시예들에 따른 재구성가능 온 칩 메모리 사용 방법을 설명하기 위한 순서도이다."}
