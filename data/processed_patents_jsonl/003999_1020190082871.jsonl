{"patent_id": "10-2019-0082871", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0018234", "출원번호": "10-2019-0082871", "발명의 명칭": "인공지능 칩 및 인공지능 칩에 사용되는 명령 실행 방법", "출원인": "베이징 바이두 넷컴 사이언스 앤 테크놀로지 코.,", "발명자": "수, 닝이"}}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트, 및 적어도 하나의 전용 실행 컴포넌트를 포함하는 인공지능 칩에 있어서,명령 메모리는, 중앙 처리 유닛에 의해 송신된 커널 코드를 수신하도록 구성되되, 상기 커널 코드는 적어도 하나의 코드 블록을 포함하며, 상기 적어도 하나의 코드 블록 내의 코드 블록은 통용 실행 컴포넌트 및 전용 실행컴포넌트와 연관되며,통용 실행 컴포넌트는, 코드 블록을 수신하고, 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 수신된 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하도록 구성되며,전용 실행 컴포넌트는, 통용 실행 컴포넌트에 의해 송신된 명령을 수신하고, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하도록 구성되며,데이터 메모리는, 전용 실행 컴포넌트에 의해 송신된 실행 결과를 저장하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 적어도 하나의 코드 블록 내의 코드 블록은 제1 명령 및 제2 명령세트를 포함하며,통용 실행 컴포넌트는 구체적으로,코드 블록의 수신에 응답하여, 제1 명령을 실행하여, 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하며,제2 명령세트 중의 제2 명령을 로크된 전용 실행 컴포넌트에 순차적으로 송신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 적어도 하나의 코드 블록 내의 코드 블록은 제1 명령 및 제2 명령세트를 포함하고,통용 실행 컴포넌트는 구체적으로,코드 블록의 수신에 응답하여, 제1 명령을 실행하여, 수신된 코드 블록과 연관된 적어도 하나의 전용 실행 컴포넌트를 로크하며,제2 명령세트의 제2 명령에 대해, 로크된 전용 실행 컴포넌트로부터 상기 제2 명령을 실행하는 전용 실행 컴포넌트를 결정하여, 상기 제2 명령을 결정된 전용 실행 컴포넌트에 송신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 인공지능 칩은, 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하고,로컬 제어 메모리는,통용 실행 컴포넌트에 의해 송신된 로컬 변수 갱신 요청을 수신하고, 상기 로컬 변수 갱신 요청은 소정의 로컬공개특허 10-2020-0018234-3-변수의 목표값을 포함하며,상기 소정의 로컬 변수의 값을 목표값으로 갱신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,로컬 제어 메모리는 또한, 상기 적어도 하나의 통용 실행 컴포넌트에 상기 소정의 로컬 변수의 갱신 통지를 송신하도록 구성되며,상기 소정의 로컬 변수의 갱신을 대기하는 통용 실행 컴포넌트는 또한, 상기 통지의 수신에 응답하여, 수신된코드 블록 내의 명령을 계속 실행하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서,통용 실행 컴포넌트는 또한,목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하며,상기 목표 로컬 변수의 값의 갱신이 검출된 것에 응답하여, 수신된 코드 블록 내의 명령을 계속 실행하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 인공지능 칩은, 적어도 하나의 컴퓨팅 클러스터를 더 포함하고,상기 적어도 하나의 컴퓨팅 클러스터 내의 컴퓨팅 클러스터는, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하는,인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 인공지능 칩은 글로벌 제어 메모리를 더 포함하고, 컴퓨팅 클러스터는 로컬 제어 메모리를 더 포함하며,상기 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장하고, 로컬 제어 메모리는 적어도 하나의 로컬 변수의 값을 저장하며,상기 글로벌 제어 메모리는,컴퓨팅 클러스터에 의해 송신된 글로벌 변수 갱신 요청을 수신하고, 상기 글로벌 변수 갱신 요청은 소정의 글로벌 변수의 목표값을 포함하며,상기 소정의 글로벌 변수의 값을 목표값으로 갱신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 글로벌 제어 메모리는 또한, 적어도 하나의 상기 로컬 제어 메모리에 상기 소정의 글로벌 변수 갱신의 통지를 송신하도록 구성되며,공개특허 10-2020-0018234-4-상기 소정의 글로벌 변수의 갱신을 대기하는 로컬 제어 메모리는 또한 통지의 수신에 응답하여 상기 소정의 글로벌 변수와 연관된 로컬 변수의 값을 갱신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,로컬 제어 메모리는 또한,목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하며,상기 목표 글로벌 변수의 값의 갱신이 검출된 것에 응답하여, 상기 소정의 글로벌 변수와 연관된 로컬 변수의값을 갱신하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,통용 실행 컴포넌트에 의해 로크되는 전용 실행 컴포넌트는 상기 커널 코드의 실행 기간에 로크 해제되지 않는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제2항 또는 제3항에 있어서,통용 실행 컴포넌트는 또한,제1 명령을 실행한 후에 제2 명령세트를 순환하여 실행하도록 구성되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항에 있어서,상기 커널 코드는, 입력된 데이터 흐름 그래프를 상기 중앙 처리 유닛에 의해 파싱함으로써 획득되고, 상기 데이터 흐름 그래프는 신경망 모델의 정적 맵을 매핑함으로써 획득되는인공지능 칩."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "인공지능 칩에 사용되는 명령 실행 방법에 있어서, 상기 인공지능 칩은 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하며, 명령 메모리는 중앙 처리 유닛에통신 가능하게 연결되고,상기 방법은,상기 명령 메모리로부터의 코드 블록을 수신하는 단계로서, 상기 코드 블록은, 상기 명령 메모리가 상기 중앙처리 유닛에 의해 송신된 커널 코드로부터 획득하며, 상기 코드 블록은 전용 실행 컴포넌트와 연관되는 단계,상기 코드 블록에 연관된 전용 실행 컴포넌트를 로크하는 단계, 및상기 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트에 송신하는 단계를 포함하며,전용 실행 컴포넌트는, 수신된 명령을 실행하고 실행 결과를 상기 데이터 메모리에 저장하도록 구성되는인공지능 칩에 사용되는 명령 실행 방법."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "공개특허 10-2020-0018234-5-제14항에 있어서,상기 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하고,상기 방법은 또한,목표 로컬 변수의 갱신 통지가 수신된 것에 응답하여 상기 코드 블록 내의 명령을 계속 실행하는 것을 포함하는방법."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 인공지능 칩은 적어도 하나의 로컬 변수의 값을 저장하는 로컬 제어 메모리를 더 포함하고,상기 방법은 또한,목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하며,상기 목표 로컬 변수의 값의 갱신이 검출된 것에 응답하여 상기 코드 블록 내의 명령을 계속 실행하는 것을 포함하는 방법."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "인공지능 칩에 사용되는 명령 실행 장치에 있어서, 상기 인공지능 칩은 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하며, 명령 메모리는 중앙 처리 유닛에통신 가능하게 연결되고,상기 장치는,상기 명령 메모리로부터의 코드 블록을 수신하도록 구성되되, 상기 코드 블록은, 상기 명령 메모리가 상기 중앙처리 유닛에 의해 송신된 커널 코드로부터 획득되며, 상기 코드 블록은 전용 실행 컴포넌트와 연관되는 코드 수신 유닛과,상기 코드 블록에 연관된 전용 실행 컴포넌트를 로크하도록 구성된 로크 유닛과,상기 코드 블록 내의 명령을 상기 로크된 전용 실행 컴포넌트로 송신하도록 구성된 명령 송신 유닛을 포함하며, 전용 실행 컴포넌트는, 수신된 명령을 실행하고 실행 결과를 상기 데이터 메모리에 저장하도록 구성되는인공지능 칩에 사용되는 명령 실행 장치."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "컴퓨터 프로그램이 저장된 컴퓨터 판독 가능 매체에 있어서, 상기 컴퓨터 프로그램이 실행 컴포넌트에 의해 실행시, 제14항 내지 제16항 중 어느 한 항에 기재한 방법을 실현하는, 컴퓨터 판독 가능 매체."}
{"patent_id": "10-2019-0082871", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "중앙 처리 유닛, 저장 장치, 및 적어도 하나의 제1항 내지 제13항 중 어느 한 항에 기재한 인공지능 칩을 포함하는 전자 디바이스."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 출원의 실시예는 인공지능 칩 및 인공지능 칩에 사용되는 명령 실행 방법을 개시한다. 상기 인공지능 칩의 특 정 실시예는 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포 넌트를 포함하고, 명령 메모리는 적어도 하나의 코드 블록을 포함하는 커널 코드를 수신하도록 구성되고, 통용 실행 컴포넌트는 코드 블록을 수신하고, 수신된 코드 블록에 연관된 전용 실행 컴포넌트를 로크하고, 수신된 코 드 블록 중의 명령을 로크된 전용 실행 컴포넌트로 송신하도록 구성되고, 전용 실행 컴포넌트는, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하며, 데이터 메모리는 전용 실행 컴포넌트에 의해 송신된 실행 결 과를 저장하도록 구성된다. 상기 실시형태는 커널 코드 실행 기간 CPU와의 빈번한 통신을 피면하고 전용 실행 컴 포넌트의 빈번한 로크 / 로크 해제를 피면하여 인공지능 칩의 성능을 향상시킬 수 있다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 컴퓨터 기술분야에 관한 것으로서, 특히 인공지능 칩 및 인공지능 칩에 사용되는 명령 실행 방법에 관한 것이다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 기술의 급속한 발전과 함께, 신경망 모델의 규모도 점점 커지고, 훈련 데이터도 점점 많아지고, 이로 인하여 전용 신경망 가속기를 이용한 신경망의 훈련 및 예측 계산이 주류 경향을 보이고 있다. 따라서 GPU (Graphics Processing Unit, 그래픽 프로세서), FPGA (Field-Programmable Gate Array, 필드 프로그래머블 게 이트 어레이), ASIC (Application Specific Integrated Circuits, 전용 집적 회로) 등과 같은 다양한 신경 네 트워크 가속기가 개발되었다. 이러한 신경망 가속기는 신경 네트워크의 전형적인, 고계산 집약형의 계산 임무(예를 들어, 행렬 계산 (또는 행 렬 계산과 관련된 곱셈누산) 활성화 연산, 벡터 연산 등)에 대해 특수한 최적화를 실시할 수 있다. 일반적으로, 신경망 가속기는 복수의 부동한 실행 유닛을 내장할 수 있으며, 각 실행 유닛은 서로 다른 계산 임무를 수행할 수 있으며, 호스트 컴퓨터의 CPU (Central Processing Unit, 중앙 처리 유닛)가 스케줄링 실행을 담당한다. 종래의 기술에서, GPU가 신경망 모델 중의 계산 집약적형의 컴퓨팅 임무를 담당하고, CPU가 GPU의 운행제어를 담당하고 있었다. 예를 들어, CPU는 사용자가 정의한 정적 계산 그림에 묘사된 심도 학습 모델을 분석하고 연산 임무 순서를 취득하는 것을 담당하고, 하나의 연산 임무를 GPU에 보낸 다음 GPU가 연산 임무를 실행한 것을 기 다려서 다음의 연산 임무를 GPU에 송신하고, ... 이렇게 실행한다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 출원의 실시예는 인공지능 칩 및 인공지능 칩에 사용되는 명령 실행 방법을 제안한다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "제1 양태에서, 본 출원의 실시예는 인공지능 칩을 제공한다. 상기 인공지능 칩은, 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하며, 명령 메모리는, 중앙 처 리 유닛에 의해 송신된 커널 코드를 수신하도록 구성되되, 상기 커널 코드는 적어도 하나의 코드 블록을 포함하 며, 상기 적어도 하나의 코드 블록 내의 코드 블록은 통용 실행 컴포넌트 및 전용 실행 컴포넌트와 연관되며, 통용 실행 컴포넌트는, 코드 블록을 수신하고, 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 수 신된 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하도록 구성되며, 전용 실행 컴포넌트는, 통용 실행 컴포넌트에 의해 송신된 명령을 수신하고, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하 도록 구성되며, 데이터 메모리는, 전용 실행 컴포넌트에 의해 송신된 실행 결과를 저장하도록 구성된다. 일부 실시예들에서, 적어도 하나의 코드 블록 내의 코드 블록은 제1 명령 및 제2 명령 세트를 포함하고, 통용 실행 컴포넌트는 구체적으로, 코드 블록의 수신에 응답하여, 제1 명령을 실행하여 수신된 코드 블록에 연관된 전용 실행 컴포넌트를 로크하며, 제2 명령세트의 제2 명령을 로크된 전용 실행 컴포넌트로 순차적으로 송신하도 록 구성된다. 일부 실시예에서, 적어도 하나의 코드 블록 내의 코드 블록은 제1 명령 및 제2 명령 세트를 포함하고, 통용 실 행 컴포넌트는 구체적으로, 코드 블록의 수신에 응답하고, 제1 명령을 실행하여 수신된 코드 블록에 연관된 적 어도 하나의 전용 실행 컴포넌트를 로크하며, 제2 명령세트의 제2 명령에 대해, 로크된 전용 실행 컴포넌트로부 터, 상기 제2 명령을 실행하는 전용 실행 컴포넌트를 결정하고, 상기 제2 명령을 결정된 전용 실행 컴포넌트로 송신하도록 구성된다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값을 저장하는 로컬 제어 메모리를 더 포함하며, 로컬 제어 메모리는, 통용 실행 컴포넌트에 의해 송신된 소정의 로컬 변수의 목표값을 포함한 로컬 변수 갱신 요청을 수신하고, 소정의 로컬 변수의 값을 목표값으로 갱신하도록 구성된다. 일부 실시예에서, 로컬 제어 메모리는 또한 적어도 하나의 통용 실행 컴포넌트에 소정의 로컬 변수의 갱신 통지 를 송신하도록 구성되며, 소정 로컬 변수 갱신을 기다리는 통용 실행 컴포넌트는 또한 통지를 수신한 것에 응답 하여 수신된 코드 블록 내의 명령을 계속 실행하도록 구성된다. 일부 실시예에서, 통용 실행 컴포넌트는 또한, 목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목 표 로컬 변수의 값 갱신이 검출된 것에 응답하여, 수신된 코드 블록 내의 명령을 계속 실행한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 컴퓨팅 클러스터를 더 포함하고, 적어도 하나의 컴퓨팅 클러스 터 내의 컴퓨팅 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴 포넌트를 포함한다.일부 실시예에서, 인공지능 칩은 글로벌 제어 메모리를 더 포함하고, 컴퓨팅 클러스터는 로컬 제어 메모리를 더 포함하며, 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장하고, 로컬 제어 메모리는 적어도 하나 의 로컬 변수의 값을 저장하며, 글로벌 제어 메모리는, 컴퓨팅 클러스터에 의해 송신된, 소정의 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정의 글로벌 변수의 값을 목표값으로 갱신하도록 구성된 다. 일부 실시예에서, 글로벌 제어 메모리는 또한 적어도 하나의 로컬 제어 메모리에 소정의 글로벌 변수 갱신의 통 지를 송신하도록 구성되고, 소정의 글로벌 변수 갱신을 대기하는 로컬 제어 메모리는 또한 통지의 수신에 응답 하여, 소정의 글로벌 변수에 연관된 로컬 변수의 값을 갱신하도록 구성된다. 일부 실시예에서, 로컬 제어 메모리는 또한, 목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목 표 글로벌 변수의 값의 갱신이 검출된 것에 응답하여, 소정의 글로벌 변수에 연관된 로컬 변수의 값을 갱신하도 록 구성된다. 일부 실시예에서, 통용 실행 컴포넌트에 의해 로크된 전용 실행 컴포넌트는, 커널 코드가 실행되는 동안 로크 해제되지 않는다. 일부 실시예에서, 통용 실행 컴포넌트는, 제1 명령을 실행한 후에 제2 명령세트를 순환하여 실행하도록 또한 구 성된다. 일부 실시예에서, 커널 코드는, 중앙 처리 유닛이 입력된 데이터 스트림 그래프를 파싱함으로써 얻어지고, 데이 터 스트림 그래프는 신경망 모델의 정적 그래프를 매핑함으로써 얻어진다. 제2 양태에서, 본원의 실시예는 인공지능 칩에 사용되는 명령 실행 방법을 제공한다. 인공지능 칩은 명령 메모 리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하며, 명령 메모리는 중앙 처리 유닛에 통신 가능하게 연결되고, 상기 방법은, 상기 명령 메모리로부터의 코드 블록을 수신 하는 단계로서, 상기 코드 블록은, 상기 명령 메모리가 상기 중앙 처리 유닛에 의해 송신된 커널 코드로부터 획 득하며, 상기 코드 블록은 전용 실행 컴포넌트와 연관되는 단계, 상기 코드 블록에 연관된 전용 실행 컴포넌트 를 로크하는 단계, 및 상기 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트에 송신하는 단계를 포함하며, 전 용 실행 컴포넌트는, 수신된 명령을 실행하고 실행 결과를 상기 데이터 메모리에 저장하도록 구성된다. 일부 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함하고, 코드 블록에 연관된 전용 실행 컴포넌트 를 로크하는 단계는, 제1 명령을 실행하여, 코드 블록에 연관된 전용 실행 컴포넌트를 로크하는 단계를 포함하 며, 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하는 단계는, 제2 명령세트 내의 제2 명령을 로크 된 전용 실행 컴포넌트로 순차적으로 송신하는 단계를 포함한다. 일부 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함하고, 코드 블록에 연관된 전용 실행 컴포넌트 를 로크하는 단계는, 제1 명령을 실행하여, 코드 블록에 연관된 적어도 하나의 전용 실행 컴포넌트를 로크하는 단계를 포함하며, 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하는 단계는, 제2 명령세트 내의 제 2 명령에 대해, 로크된 전용 실행 컴포넌트로부터 상기 제2 명령을 실행하는 전용 실행 컴포넌트를 결정하고, 상기 제2 명령을 결정된 전용 실행 컴포넌트로 송신하는 단계를 포함한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하며, 로 컬 제어 메모리는, 통용 실행 컴포넌트에 의해 송신된 소정의 로컬 변수의 목표값을 포함한 로컬 변수 갱신 요 청을 수신하고, 소정의 로컬 변수의 값을 목표값으로 갱신하도록 구성된다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하고, 상 기 방법은, 목표 로컬 변수의 갱신 통지를 수신한 것에 응답하여, 코드 블록 내의 명령을 계속 실행하는 단계를 더 포함한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하고, 상 기 방법은, 목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하는 단계와, 목표 로컬 변수의 값의 갱신이 검출된 것에 응답하여, 코드 블록 내의 명령을 계속 실행하는 단계를 더 포함한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 컴퓨팅 클러스터를 더 포함하고, 적어도 하나의 컴퓨팅 클러스 터 내의 컴퓨팅 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴 포넌트를 포함한다.일부 실시예에서, 인공지능 칩은 글로벌 제어 메모리를 더 포함하고, 컴퓨팅 클러스터는 로컬 제어 메모리를 더 포함하며, 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장하고, 로컬 제어 메모리는 적어도 하나 의 로컬 변수의 값을 저장하며, 글로벌 제어 메모리는, 컴퓨팅 클러스터에 의해 송신된, 소정의 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정의 글로벌 변수의 값을 목표값으로 갱신하도록 구성된 다. 일부 실시예에서, 글로벌 제어 메모리는 또한, 적어도 하나의 로컬 제어 메모리에 소정의 글로벌 변수 갱신의 통지를 송신하도록 구성되고, 소정의 글로벌 변수 갱신을 대기하는 로컬 제어 메모리는 또한 통지의 수신에 응 답하여, 소정의 글로벌 변수와 연관된 로컬 변수의 값을 갱신하도록 구성된다. 일부 실시예에서, 로컬 제어 메모리는 또한, 목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목 표 글로벌 변수의 값의 갱신이 검출된 것에 응답하여, 소정의 글로벌 변수와 연관된 로컬 변수의 값을 갱신하도 록 구성된다. 일부 실시예에서, 통용 실행 컴포넌트에 의해 로크된 전용 실행 컴포넌트는 커널 코드가 실행되는 동안 로크 해 제되지 않는다. 일부 실시예에서, 상기 방법은 제1 명령을 실행한 후에 제2 명령세트를 순환하여 실행하는 단계를 더 포함한다. 일부 실시예에서, 커널 코드는 중앙 처리 유닛이 입력된 데이터 스트림 그래프를 파싱함으로써 얻어지고, 데이 터 스트림 그래프는 신경망 모델의 정적 그래프를 매핑함으로써 얻어진다. 제3 양태에서, 본원의 실시예는 인공지능 칩에 사용되는 명령 실행 장치를 제공한다. 인공지능 칩은 명령 메모 리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌트를 포함하며, 명령 메모리는 중앙 처리 유닛에 통신 가능하게 연결되고, 상기 장치는, 상기 명령 메모리로부터의 코드 블록을 수신 하도록 구성되되, 상기 코드 블록은, 상기 명령 메모리가 상기 중앙 처리 유닛에 의해 송신된 커널 코드로부터 획득되며, 상기 코드 블록은 전용 실행 컴포넌트와 연관되는 코드 수신 유닛과, 상기 코드 블록에 연관된 전용 실행 컴포넌트를 로크하도록 구성된 로크 유닛과, 상기 코드 블록 내의 명령을 상기 로크된 전용 실행 컴포넌트 로 송신하도록 구성된 명령 송신 유닛을 포함하며, 전용 실행 컴포넌트는, 수신된 명령을 실행하고 실행 결과를 상기 데이터 메모리에 저장하도록 구성된다. 일부 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함하고, 로크 유닛은 구체적으로, 제1 명령을 실 행하여, 코드 블록에 연관된 전용 실행 컴포넌트를 로크하도록 구성되며, 명령 송신 유닛은 구체적으로, 제2 명 령세트 내의 제2 명령을 로크된 전용 실행 컴포넌트에 순차적으로 송신하도록 구성된다. 일부 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함하고, 로크 유닛은 구체적으로, 제1 명령을 실 행하여, 코드 블록과 관련된 적어도 하나의 전용 실행 컴포넌트를 로크하도록 구성되고, 명령 송신 유닛은 구체 적으로, 제2 명령세트 내의 제2 명령에 대해, 로크된 전용 실행 컴포넌트로부터 상기 제2 명령을 실행하는 전용 실행 컴포넌트를 결정하고, 결정된 전용 실행 컴포넌트로 상기 제2 명령을 송신하도록 구성된다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하며, 로 컬 제어 메모리는, 통용 실행 컴포넌트에 의해 송신된 소정의 로컬 변수의 목표값을 포함한 로컬 변수 갱신 요 청을 수신하고, 소정의 로컬 변수의 값을 목표값으로 갱신하도록 구성된다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하며, 상 기 장치는, 목표 로컬 변수의 갱신 통지를 수신한 것에 응답하여, 코드 블록 내의 명령을 계속 실행하도록 구성 된 계속 실행 유닛을 더 포함한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메모리를 더 포함하며, 상 기 장치는, 목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하도록 구성된 검출 유닛과, 목표 로컬 변수 의 값의 갱신이 검출된 것에 응답하여, 코드 블록 내의 명령을 계속 실행하도록 구성된 계속 실행 유닛을 더 포 함한다. 일부 실시예에서, 인공지능 칩은 적어도 하나의 컴퓨팅 클러스터를 더 포함하고, 적어도 하나의 컴퓨팅 클러스 터 내의 컴퓨팅 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴 포넌트를 포함한다. 일부 실시예에서, 인공지능 칩은 글로벌 제어 메모리를 더 포함하고, 컴퓨팅 클러스터는 로컬 제어 메모리를 더 포함하며, 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장하고, 로컬 제어 메모리는 적어도 하나 의 로컬 변수의 값을 저장하며, 글로벌 제어 메모리는, 컴퓨팅 클러스터에 의해 송신된, 소정의 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정의 글로벌 변수의 값을 목표값으로 갱신하도록 구성된 다. 일부 실시예에서, 글로벌 제어 메모리는 또한, 적어도 하나의 로컬 제어 메모리에 소정의 글로벌 변수 갱신의 통지를 송신하도록 구성되고, 소정의 글로벌 변수 갱신을 대기하는 로컬 제어 메모리는 또한, 통지의 수신에 응 답하여, 소정의 글로벌 변수와 연관된 로컬 변수의 값을 갱신하도록 구성된다. 일부 실시예에서, 로컬 제어 메모리는 또한, 목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목 표 글로벌 변수의 값의 갱신이 검출된 것에 응답하여, 소정의 글로벌 변수와 연관된 로컬 변수의 값을 갱신하도 록 구성된다. 일부 실시예에서, 통용 실행 컴포넌트에 의해 로크된 전용 실행 컴포넌트는 커널 코드가 실행되는 동안 로크 해 제되지 않는다. 일부 실시예에서, 상기 장치는, 제1 명령을 실행한 후, 제2 명령세트를 순환하여 실행하는 순환 유닛을 더 포함 한다. 일부 실시예에서, 커널 코드는 중앙 처리 유닛이 입력된 데이터 스트림 그래프를 파싱함으로써 얻어지고, 데이 터 스트림 그래프는 신경망 모델의 정적 그래프를 매핑함으로써 얻어진다. 제4 양태에서, 본 출원의 실시예는, 컴퓨터 프로그램이 저장된 컴퓨터 판독 가능 매체를 제공하며, 컴퓨터 프로 그램은 실행 컴포넌트에 의해 실행시, 상기 제2 양태 중 임의의 실시방식에 설명된 방법으로 실시된다. 제5 양태에서, 본 출원의 실시예는 전자 설비를 제공하며, 중앙 처리 유닛, 저장 장치 및 적어도 하나의 제1 양 태의 임의의 실시방식으로 설명된 인공지능 칩을 포함한다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 출원의 실시예에 의해 제공되는 인공지능 칩 및 인공지능 칩에 사용되는 명령 실행 방법은, 명령 메모리가 CPU로부터 적어도 하나의 코드 블록을 포함하는 커널 코드를 수신한 후, 통용 실행 컴포넌트가 수신된 코드 블 록에 연관된 전용 실행 컴포넌트를 로크하고, 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하고, 마지막으로 전용 실행 컴포넌트가 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 송신하여 저장함으로 써, 커널 코드 실행 기간, CPU와의 빈번한 통신을 피면하고, 전용 실행 컴포넌트의 빈번한 로크 / 로크 해제를 피면하여 인공지능 칩의 성능을 향상시킬 수 있다."}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부 도면 및 실시예를 참조하면서 본 출원을 더 상세하게 설명한다. 본 명세서에 기술된 특정 실시예는 본 발명에 대한 한정이 아니라 관련 발명을 분석하기 위한 것임을 이해해야 할것이다. 또한, 설명의 편의상, 관 련된 발명과 관련된 부분만이 첨부 도면에 도시되어 있음에 유의해야 한다.본 출원중의 실시예와 실시예 중의 특징들은 충돌되지 않는 정황하에서 서로 결합될 수 있음에 유의하기 바란다. 이하, 첨부 도면에 실시예를 결합하여 본 출원을 상세하게 설명한다. 도1은 본 출원이 적용될 수있는 인공지능 칩, 인공지능 칩에 사용되는 명령 실행 방법 또는 인공지능 칩에 사용 되는 명령 실행 장치의 실시예의 예시적인 시스템 아키텍처 를 나타낸다. 도1에 도시된 바와 같이, 시스템 아키텍처 는 CPU , 인공지능 (Artificial Intelligence, AI) 칩 및 버스 를 포함할 수 있다. 버스 는 예를 들어, PCIE (Peripheral Component Interconnect Express, 고속 직렬 컴퓨터 확장 버스 규격) 버스 등일 수 있고, CPU 과 인공지능 칩 사이에 통신 링 크를 제공하는 매체로 사용된다. CPU 는 버스 를 통해 인공지능 칩 과 인터랙션함으로써 메시지를 송수신할 수 있다. CPU 는 인 공지능 칩 에 커널 코드를 송신하고, 인공지능 칩 으로부터 반송된 처리 결과를 수신할 수 있다. 인공지능 칩 은 AI 가속기 또는 컴퓨팅 카드로서, 인공지능 응용 프로그램 중 대량 계산 집약형의 컴퓨팅 작업을 전문적으로 처리하는데 사용된다. 인공지능 칩 은 명령 메모리, 데이터 메모리, 하나 이상의 통용 실행 컴포넌트 및 하나 이상의 전용 실행 컴포넌트를 포함할 수 있다. 명령 메모리는 CPU 로부터 송신된 커 널 코드를 수신할 수 있다. 통용 실행 컴포넌트는 명령 메모리에서 분배된 코드 블록을 수신하거나 또는 명령 메모리로부터 관련(연관)된 코드 블록을 주동적으로 취득한 후, 사전에 표시 지정된 전용 실행 컴포넌트에 명령 을 송신할 수 있다. 전용 실행 컴포넌트는 수신된 명령을 실행하고, 실행 결과를 데이터 메모리로 송신하여 저 장할 수 있다. 데이터 메모리는 전용 실행 컴포넌트의 명령 실행 결과를 저장할 수 있다. 설명할 것은, 본 출원의 실시예에 따른 인공지능 칩에 사용되는 명령 실행 방법은 일반적으로 통용 실행 컴포넌 트에 의해 실행되므로, 상응하여 인공지능 칩에 사용되는 명령 실행 장치는 일반적으로 통용 실행 컴포넌트에 설치된다. 도1의 CPU, 버스, 인공지능 칩, 명령 메모리, 데이터 메모리, 통용 실행 컴포넌트 및 전용 실행 컴포넌트의 수 량은 단지 예시적인 것임을 이해해야 할것이다. 실시의 필요에 따라, 임의의 적합한 수량의 CPU, 버스, 인공지 능 칩, 명령 메모리, 데이터 메모리, 통용 실행 컴포넌트 및 전용 실행 컴포넌트를 구비할 수 있다. 계속하여 도2를 참조하면 도2는 본 출원에 의한 인공지능 칩의 일실시예의 동작 타이밍 을 나타낸다. 본 실시형태의 인공지능 칩은 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나 의 전용 실행 컴포넌트를 포함할 수 있다. 명령 메모리는 중앙 처리 유닛에서 송신된 커널 코드를 수신하도록 구성될 수 있으며, 커널 코드는 적어도 하나의 코드 블록을 포함하고, 적어도 하나의 코드 블록 내의 코드 블록 은 통용 실행 컴포넌트 및 전용 실행 컴포넌트와 관련(연관)된다. 통용 실행 컴포넌트는 코드 블록을 수신하고, 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 수신된 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하도록 구성될 수 있다. 전용 실행 컴포넌트는 통용 실행 컴포넌트에서 송신된 명령을 수신하고, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하도록 구성될 수 있다. 데이터 메모리는 전용 실행 컴포넌트에서 송신된 실행 결과를 저장하도록 구성될 수 있다. 도2에 나타낸 바와 같이, 단계 에서 명령 메모리는 CPU에서 송신된 커널 코드를 수신한다. 본 실시형태에서, 명령 메모리 (예를 들어, 도1에 도시된 명령 메모리)는 호스트 컴퓨터의 CPU (예를 들어, 도1 에 도시된 CPU)에서 송신된 커널 코드를 수신할 수 있다. 커널 코트는 적어도 하나의 코드 블록을 포함한다. 상 기 적어도 하나의 코드 블록 내의 각 코드 블록은 하나의 통용 실행 컴포넌트 및 하나 이상의 전용 실행 컴포넌 트와 관련된다. 본 실시형태의 일부 바람직한 실시예에서, 통용 실행 컴포넌트는 프로그래밍 가능한 통용 계산 그래픽 프로세서, 예를 들어, ARM (Advanced RISC Machine 또는 Acorn RISC Machine 고급 축소 명령 세트 컴퓨터) 코 어, 51 코어 등을 포함할 수 있다. 전용 실행 컴포넌트는 신경망 모델의 계산 집약형의 계산 작업을 전문적으로 처리하기 위한 실행 컴포넌트를 포함할 수 있으며, 회선 엔진, 단일 데이터 프로세서, 플랫 데이터 프로세서, 채널 데이터 프로세서, 전용 메모리 및 데이터 재구성 엔진 중 적어도 하나를 포함할 수 있으나, 이에 한정되지 않는다. 회선 엔진은 신경망 모델의 회선층의 데이터 처리에 사용되고, 단일 데이터 프로세서는 신경망 모델의 활성화 함수층의 데이터 처리에 사용되고, 평면 데이터 프로세서는 신경망 모델의 풀링층의 데이터 처리에 사용 되고, 채널 데이터 프로세서는 신경망 모델의 표준화층의 데이터 처리에 사용되고, 전용 메모리 및 데이터 재구 성 엔진은 텐서 재구성과 메모리에서 메모리로의 변환 속도의 복사 조작에 사용된다.본 실시형태의 일부 바람직한 실시예에서, 커널 코드는 CPU가 입력된 데이터 스트림 그래프를 파싱함으로써 얻 을 수 있다. 예를 들어, 데이터 스트림 그래프는 합의된 프로그래밍 프로토콜에 따라 특정 프로그래밍 언어 (예 를 들어, C, C++, Java 등)에 대한 커널 코드로 변환된다. 여기서, 데이터 스트림 그래프는 사용자가 입력한 신 경망 모델의 정적지도를 매핑함으로써 얻을 수 있다. 여기서, 신경망 모델은 인공 신경망 (Artificial Neural Network, ANN) 일 수 있다. 인공 신경망은 인간의 뇌 신경 네트워크에 대한 기본 인식을 바탕으로 수학, 물리적 방법 및 정보 처리의 각도로부터 인간의 뇌신경 네트 워크를 추상화하여 건립한 모종의 간단한 모델이다. 예를 들어, 신경망 모델은 회선 신경망 (Convolutional Neural Network, CNN) 모델 및 딥 신경망 (Deep Neural Network, DNN) 모델 등을 포함할 수 있다. 단계 에서, 통용 실행 컴포넌트는 코드 블록을 수신한다. 본 실시예에서, 통용 실행 컴포넌트(예를 들어, 도1에 도시된 통용 실행 컴포넌트)는 명령 메모리로부터의 코드 블록을 수신할 수 있다. 여기서, 통용 실행 컴포넌트는 연관된 코드 블록을 직접 수신할 수 있다. 예를 들어, 통용 실행 컴포넌트는 명 령 메모리에 획득 요구를 송신할 필요없이, 코드 블록과 통용 실행 컴포넌트 간의 연관 관계에 따라 명령 메모 리에 의해 발행된 코드 블록을 직접 수신한다. 또한 통용 실행 컴포넌트는 커널 코드를 직접 수신한 다음 커널 코드로부터 관련 코드 블록을 추출할 수 있다. 이외에, 통용 실행 컴포넌트는 명령 메모리에 요청을 송신함으로써 관련 코드 블록을 획득할 수도 있다. 본 실시형태의 일부 바람직한 실시예에서, 상기 적어도 하나의 코드 블록 내의 각 코드 블록은 제1 명령과 제2 명령세트를 포함할 수 있다. 제1 명령은 통용 실행 컴포넌트에 의해 실행시 코드 블록과 관련된 전용 실행 컴포 넌트를 로크하는데 사용된다. 제2 명령세트 내의 각 제2 명령은 전용 실행 컴포넌트에 의해 실행시 연산 집약형 의 컴퓨팅 타스크를 처리하는데 사용된다. 제2 명령세트 내의 제2 명령은 제1 명령의 실행 후 (즉, 전용 실행 컴포넌트가 로크된 후) 통용 실행 컴포넌트에 의해 전용 실행 컴포넌트에 송신된다. 일 예로서, 다음의 코드 \"lock (dma); loadDataToL2 ();\"를 포함하는 코드 블록의 경우, \"lock (dma)\"가 해당 코드 블록의 제1 명령이고 \"loadDataToL2 ()\"가 해당 코드 블록의 제2 명령이다. 제1 명령은 \"dma\"라는 전용 실 행 컴포넌트를 로크하는데 사용되며, 제2 명령은 데이터를 2레벨 캐시에 로드하는데 사용된다. 본 실시형태의 일부 바람직한 실시예에서, 코드 블록은 또한 순환 세그먼트를 포함할 수 있다. 순환 세그먼트는 제2 명령세트를 포함할 수 있다. 즉, 제2 명령세트 내의 각 제2 명령은 제1 명령이 실행된 후 순환하여 실행된 다. 일 예로서, 다음의 코드 \"lock (mac); while {convolution ();}\"를 포함하는 코드 블록에 대해, \"lock (mac)\"가 해당 코드 블록의 제1 명령이며, \"while {convolution \"\"();} \"이 해당 코드 블록의 순환 세그먼 트이며, \"convolution () \"이 순환 세그먼트 내의 제2 명령이다. 제1 명령은 \"mac\"라는 전용 실행 컴포넌트를 로크하는데 사용되며, 제2 명령은 컨볼루션 연산을 실행하는데 사용되고, 순환 세그먼트는 제2 명령을 순환하여 실행하는데 사용된다 (즉, 컨벌루션 연산을 순환적으로 실행한다). 단계 에서, 통용 실행 컴포넌트는 전용 실행 컴포넌트를 로크한다. 본 실시형태에서, 관련 코드 블록의 수신에 응답하여, 통용 실행 컴포넌트는 수신된 코드 블록과 관련된 전용 실행 컴포넌트를 로크할 수 있다. 일 예로서, 통용 실행 컴포넌트가 다음 코드 \"lock (dma); loadDataToL2 ();\"을 포함하는 코드 블록을 수신하면, \"dma\"라는 전용 실행 컴포넌트를 로크할 수 있다. 전용 실행 컴포넌트는 임의의 통용 실행 컴포넌트에 의해 호출될 수 있기 때문에, 통용 실행 컴포넌트가 전용 실행 컴포넌트를 호출할 때 충돌의 발생을 피면하기 위해 전용 실행 컴포넌트를 로크할 필요가 있다. 통용 컴포 넌트는 다양한 방식으로 전용 컴포넌트를 로크할 수 있다. 예를 들어, 잠금 메커니즘을 채용한다 (즉, 각 전용 실행 컴포넌트는 호출 가능한 잠금을 구비할 수 있다. 여기에서 잠금은 소프트웨어 프로그래밍 방법에 의해 실 시할 수 있다). 전용 실행 컴포넌트의 잠금을 호출하는 잠금 설정 방법에 따라 전용 실행 컴포넌트를 로크할 수 있다 (즉, 로크된 전용 실행 컴포넌트는 다른 통용 실행 컴포넌트로 호출될 수 없다). 통용 실행 컴포넌트는 하나의 전용 실행 컴포넌트를 로크할 수도 있고 하나 이상의 전용 실행 컴포넌트를 로크 할 수 있다는 점에 유의하기 바란다. 당업자는 실제 응용 시나리오의 수요에 따라 설정할 수 있으며, 본 출원은 이에 대해 구체적으로 한정하지 않는다.단계 에서 통용 실행 컴포넌트는 코드 블록 내의 명령을 전용 실행 컴포넌트로 송신한다. 본 실시형태에서, 수신된 코드 블록과 연관되는 전용 실행 컴포넌트를 로크한 후, 통용 실행 컴포넌트는 수신된 코드 블록 중 계산 집약형 타스크를 처리하기 위한 명령을 로크된 전용 실행 컴포넌트에 송신할 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 하나의 전용 실행 컴포넌트를 로크할 시, 통용 실행 컴포넌트는 로크 된 전용 실행 컴포넌트에 제2 명령세트 중 각 제2 명령을 실행 순서에 따라순차적으로 송신할 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 하나 이상의 전용 실행 컴포넌트를 로크할 시, 제2 명령세트 중 매개 제2 명령에 대해, 통용 실행 컴포넌트는 먼저 로크된 전용 실행 컴포넌트 중 상기 제2 명령을 실행하는 전용 실 행 컴포넌트를 확정한 후, 상기 제2 명령을 확정된 전용 실행 컴포넌트에 송신할 수 있다. 단계 에서 전용 실행 컴포넌트는 수신된 명령을 실행한다. 본 실시형태에서, 통용 실행 컴포넌트에 의해 송신된 명령의 수신에 응답하여, 전용 실행 컴포넌트는 수신된 명 령을 수행할 수 있다. 단계 에서 전용 실행 컴포넌트는 실행 결과를 데이터 메모리로 송신한다. 본 실시형태에서, 전용 실행 컴포넌트는 명령 실행이 완료된 후, 실행 결과를 데이터 메모리로 송신한다. 여기 서, 데이터 메모리는 L1 캐시, L2 캐시, L3 캐시 등을 포함할 수 있다. 단계 에서 데이터 메모리는 실행 결과를 저장한다. 본 실시형태에서, 데이터 메모리는 전용 실행 컴포넌트의 실행 결과를 수신하고 실행 결과를 저장할 수 있다. 도2의 동작 타이밍에서 알 수 있는바, 자주 로크 / 로크 해제되는 전용 실행 컴포넌트와는 달리, 본 출원의 인 공지능 칩은 커널 코드의 실행 기간 전체에 있어서 전용 실행 컴포넌트가 항상 통용 실행 컴포넌트에 의해 로크 된 상태에 있기 때문에 빈번한 로크 / 로크 해제 프로세스가 피면되어, 인공지능 칩의 성능이 향상될 수 있다. 인공지능 칩이 매 계산 임무를 완성할 때마다 호스트 컴퓨터의 CPU에서 운행되는 응용 프로그램과 통신하여 다 음 임무를 접수해야 할 경우, 인공지능 칩의 성능이 매우 높고 계산 임무 실행 시간이 매우 짧은 조건하에서 분 명히 인공지능 칩의 성능에 영향을 미치게 된다 예를 들어 설명하면, 인공지능 칩이 매번 계산에 5us 시간이 걸 리고, 인공지능 칩과 CPU와의 통신 시간이 10us일 경우, 인공지능 칩의 약 3분의 2에 해당하는 시간이 유휴 상 태에 있어 인공지능 칩의 절반 이상 성능이 낭비되는 것과 같다. 하지만, 본 실시형태에서, 인공지능 칩은 CPU와 한 번만 통신하면 신경망 모델의 커널 코드를 얻을 수 있고, 게 다가 커널 코드의 실행 기간 전체에 있어서 CPU와 통신할 필요가 없다. 즉, 인공지능 칩은 기본적으로 대기 시 간이 없기 때문에 인공지능 칩의 성능을 크게 향상시킬 수 있다. 계속하여 도3을 참조하면, 도3은 본 출원에 의한 인공지능 칩의 하나의 응용 시나리오를 보여준다. 도3은 하나 의 신경망 모델 (예를 들어, 인간 얼굴 인식 모델)을 매핑하여 얻은 데이터 스트림 그래프이다. 상기 데이터 스 트림 그래프에서, U1 ~ U6은 각각 다른 전용 실행 컴포넌트를 가리키며, 화살표는 데이터 스트림의 방향을 나타 낸다. 상기 데이터 스트림 그래프를 실시하는 커널 코드는 다음과 같다. Case(get_core_id()): 0:lock(U1); loadDataToL2(); 1: lock(U2); while{ convolution(); } 2:lock(U3); ……； 3:lock(U4); ……; 4:lock(U5); ……; 5:lock(U6); ……; 여기서, 상기 커널 코드는 6개의 코드 블록 (즉, 숫자 0 ~ 5 후의 코드 단편)을 포함한다. CPU는 상기 커널 코 드를 인공지능 칩의 명령 메모리로 보낸다. 명령 메모리는 먼저 각 통용 실행 컴포넌트의 식별자 (명령 \"get_core_id ()\"를 통해 얻으며, 여기에서 식별자의 값은 각각 숫자 0 ~ 5이다)를 취득하고, 그 다음 코드 블 록 \"lock (U1) ; loadDataToL2 (); \"를 식별자가 0인 통용 실행 컴포넌트로 보내고, 코드 블록\"lock (U2); while {convolution ();} \"을 식별자가 1인 통용 실행 컴포넌트에 보내고, ... ... 코드 블록 \"lock (U6); ...;\"을 식별자가 5인 통용 실행 컴포넌트로 보낸다. 식별자가 0인 통용 실행 컴포넌트는 코드 블록을 수신한 후, 전용 실행 컴포넌트 U1을 로크한 다음, 명령 \"loadDataToL2 ()\"을 전용 실행 컴포넌트 U1로 송신한다. 식별 자가 1인 통용 실행 컴포넌트는 코드 블록을 수신한 후, 전용 실행 컴포넌트 U2를 로크한 다음, 명령 \"convolution ()\"을 지속적으로 전용 실행 컴포넌트 U2로 송신한다. 이와 같이 계속 실행된다. 전용 실행 컴포 넌트 U1 ~ U6은 명령 실행 결과를 데이터 메모리로 송신하여 저장한다. 본 출원의 상기 실시형태에 따른 인공지능 칩은, 명령 메모리가 CPU로부터 적어도 하나의 코드 블록을 포함하는 커널 코드를 수신한 후, 통용 실행 컴포넌트가 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 코 드 블록 중의 명령을 로크된 전용 실행 컴포넌트에 송신하고 마지막으로, 전용 실행 컴포넌트가 수신된 명령을 실행하여 실행 결과를 데이터 메모리로 송신하여 저장함으로써, 커널 코드 실행 동안 CPU와의 빈번한 통신을 피 면함과 동시에, 전용 실행 컴포넌트가 빈번히 로크 / 로크 해제되는 것을 피면하여 인공지능 칩의 성능이 향상 될 수 있다. 계속하여 도4를 참조하면, 본 출원에 의한 인공지능 칩의 다른 일 실시형태의 동작 타이밍 을 나타내고 있 다. 본 실시형태의 인공지능 칩은 명령 메모리, 데이터 메모리, 로컬 제어 메모리, 적어도 하나의 통용 실행 컴포넌 트 및 적어도 하나의 전용 실행 컴포넌트를 포함할 수 있다. 명령 메모리는 중앙 처리 유닛에서 송신된 커널 코 드를 수신하도록 구성될수 있으며, 커널 코드는 적어도 하나의 코드 블록을 포함하고, 적어도 하나의 코드 블록 내의 코드 블록은 통용 실행 컴포넌트 및 전용 실행 컴포넌트와 관련된다. 통용 실행 컴포넌트는 코드 블록을 수신하고, 수신된 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 수신된 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트로 송신하도록 구성될 수 있다. 전용 실행 컴포넌트는 통용 실행 컴포넌트에서 송신된 명령 을 수신하고, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하도록 구성될 수 있다. 데이터 메모 리는 전용 실행 컴포넌트에서 송신된 실행 결과를 저장하도록 구성될 수 있다. 로컬 제어 메모리는 적어도 하나 의 로컬 변수의 값을 저장하고있다. 로컬 제어 메모리는, 통용 실행 컴포넌트에서 송신된 소정 로컬 변수의 목 표값를 포함한 로컬 변수 갱신 요청을 수신하고, 소정 로컬 변수의 값을 목표값으로 갱신하도록 구성될 수 있다. 도4에 나타낸 바와 같이, 단계 에서 명령 메모리는 CPU에서 송신된 커널 코드를 수신한다. 본 실시형태에서, 명령 메모리 (예를 들어, 도1에 도시된 명령 메모리)는 호스트 컴퓨터의 CPU (예를 들어, 도1 에 도시된 CPU)에서 송신된 커널 코드를 수신할 수 있다. 커널 코트는 적어도 하나의 코드 블록을 포함한다. 상 기 적어도 하나의 코드 블록 내의 각 코드 블록은, 하나의 통용 실행 컴포넌트 및 하나 이상의 전용 실행 컴포 넌트와 관련된다. 단계 에서, 통용 실행 컴포넌트는 코드 블록을 수신한다. 본 실시예에서, 통용 실행 컴포넌트 (예를 들어, 도1에 도시된 통용 실행 컴포넌트)는 명령 메모리로부터의 코 드 블록을 수신할 수 있다. 단계 에서, 통용 실행 컴포넌트는 전용 실행 컴포넌트를 로크한다. 본 실시형태에서, 관련된 코드 블록의 수신에 응답하여, 통용 실행 컴포넌트는 수신된 코드 블록과 관련된 전용 실행 컴포넌트를 로크할 수 있다. 일 예로서, 통용 실행 컴포넌트가 다음 코드 \"lock (dma); loadDataToL2();\"을 포함하는 코드 블록을 수신하면 \"dma\"라는 전용 실행 컴포넌트를 로크할 수 있다. 그리고, 통용 실행 컴포넌트는 대기 상태에 들어가 로컬 제어 메모리의 소정 로컬 변수의 갱신 통지를 기다린다. 단계 에서 로컬 제어 메모리는 소정 로컬 변수의 값을 갱신한다. 본 실시형태에서, 로컬 제어 메모리는 다른 통용 실행 컴포넌트에서 송신된 로컬 변수 갱신 청구를 수신한 후, 소정 로컬 변수의 값을 목표값으로 갱신할 수 있다. 로컬 변수 갱신 청구에 소정 로컬 변수의 목표값이 포함된 다. 여기서 로컬 변수의 값은 0 또는 1과 같은 2진수일 수 있다. 로컬 변수의 값은 다른 미리 설정된 값일 수도 있으며, 본 출원에서 특별히 한정되지 않는다. 단계 에서 로컬 제어 메모리는 통용 실행 컴포넌트로 통지를 송신한다. 본 실시형태에서, 로컬 제어 메모리는 각 통용 실행 컴포넌트를 향해 상기 소정 로컬 변수 갱신을 표시하는 통 지를 송신할 수 있다. 단계 에서 통용 실행 컴포넌트는 코드 블록 내의 명령을 전용 실행 컴포넌트로 송신한다. 본 실시형태에서, 소정 로컬 변수의 갱신을 표시하는 통지를 수신한 것에 응답하여, 통용 실행 컴포넌트는 수신 된 코드 블록 중 계산 집약형 임무를 처리하기 위한 명령을 로크된 전용 실행 컴포넌트에 송신할 수 있다. 단계 에서 전용 실행 컴포넌트는 수신된 명령을 실행한다. 본 실시형태에서, 통용 실행 컴포넌트에 의해 송신된 명령의 수신에 응답하여, 전용 실행 컴포넌트는 수신된 명 령을 수행할 수 있다. 단계 에서 전용 실행 컴포넌트는 실행 결과를 데이터 메모리로 송신한다. 본 실시형태에서, 전용 실행 컴포넌트는 명령 실행이 완료된 후, 실행 결과를 데이터 메모리로 송신한다. 여기 서, 데이터 메모리는 L1 캐시, L2 캐시, L3 캐시 등을 포함할 수 있다. 단계 에서 데이터 메모리는 실행 결과를 저장한다. 본 실시형태에서, 데이터 메모리는 전용 실행 컴포넌트의 실행 결과를 수신하고 수신된 실행 결과를 저장할 수 있다. 도4의 동작 타이밍으로부터 알 수 있는바, 로컬 제어 메모리를 설정함으로써 임의의 2개의 통용 실행 컴포넌트 간의 동기화가 실현되어 커널 코드의 각 코드 블록이 원하는 순서대로 실행되고 인공지능 칩의 제어가 더욱 유 연하게 된다. 도4는 통용 실행 컴포넌트가 전용 실행 컴포넌트를 로크한 후 대기 상태로 들어가고, 로컬 제어 메모리는 통용 실행 컴포넌트로 통지를 송신하는 것으로 도시되어 있지만, 본 실시형태는 이에 한정되지 않는다. 본 실시형태의 일부 바람직한 실시예에서, 통용 실행 컴포넌트는 또한 목표 로컬 변수의 값의 갱신 여부를 폴링 방식으로 검출하고, 상기 목표 로컬 변수의 값의 갱신이 검출된 것에 응답하여, 수신된 코드 블록 내의 명령을 계속 실행하도록 구성될수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 또한 적어도 하나의 계산 클러스터를 포함할 수 있으 며, 각각의 계산 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴 포넌트를 포함할 수 있다. 각 계산 클러스터는 하나의 명령 메모리를 공유할 수 있다. 바람직하게는 각 계산 클러스터는 명령 메모리를 포함할 수 있다. 각 계산 클러스터의 명령 메모리는 중앙 처리 유닛과 통신 가능하게 연결될 수 있다. 바람직하게는 인공지능 칩은 글로벌 제어 메모리를 더 포함할 수 있으며, 각 계산 클러스터는 로컬 제어 메모리 를 더 포함할 수 있다. 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장할 수 있고, 로컬 제어 메 모리는 적어도 하나의 로컬 변수의 값을 저장할 수 있다. 글로벌 제어 메모리는, 계산 클러스터에서 송신된 소 정 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정 글로벌 변수의 값을 목표값으로 갱 신하도록 구성될 수 있다. 바람직하게는 글로벌 제어 메모리는 또한, 적어도 하나의 로컬 제어 메모리로 소정 글로벌 변수 갱신의 통지를 송신하도록 구성될 수 있고, 소정 글로벌 변수의 갱신을 대기하는 로컬 제어 메모리는 또한, 통지의 수신에 응 답하여 소정 글로벌 변수와 관련된 로컬 변수의 값을 갱신하도록 구성될수 있다. 바람직하게는 로컬 제어 메모리는 또한, 목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목표 글 로벌 변수의 값의 갱신이 검출된 것에 응답하여, 소정 글로벌 변수와 관련된 로컬 변수의 값을 갱신 (및 각 통 용 실행 컴포넌트를 향해 관련된 로컬 변수 갱신을 표시하는 통지를 송신)하도록 구성될 수 있다. 복수의 계산 클러스터를 설치함으로써 인공지능 칩은 예를 들어, 여러 간단한 모델을 포함하는 복잡한 신경망 모델을 처리할 수 있다. 글로벌 제어 메모리를 설치함으로써 부동한 계산 클러스터 간의 동기화가 실현되어 인 공지능 칩은 여러 간단한 모델을 처리할 때 원하는 순서로 실행할 수 있으며, 인공지능 칩의 제어가 더욱 유연 하게 된다. 도4에서 알수 있는바, 도2에 대응하는 실시예에 비하여, 본 실시형태의 인공지능 칩은 로컬 제어 메모리를 더 포함한다. 이상과 같이, 본 실시형태에 설명된 해결책은 부동한 통용 실행 컴포넌트 간의 동기화를 실현할 수 있어 커널 코드의 각 코드 블록이 원하는 순서대로 실행됨과 동시에, 인공지능 칩의 제어가 더욱 유연하게 된다. 또한, 도5를 참조하면, 도5는 본 출원에 의한 인공지능 칩에 사용되는 명령 실행 방법의 일 실시형태의 프로세 스 를 나타내고 있다. 상기 인공지능 칩에 사용되는 명령 실행 방법은 다음의 단계를 포함할 수 있다. 단계 에서, 명령 메모리로부터의 코드 블록을 수신한다. 본 실시형태에서, 인공지능 칩은 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하 나의 전용 실행 컴포넌트를 포함한다. 명령 메모리는 중앙 처리 유닛에 통신 가능하게 연결된다. 인공지능 칩에 사용되는 명령 실행 방법의 실행 주체 (예를 들어, 도1의 인공지능 칩의 통용 실행 컴포넌트)는 명령 메모 리로부터의 코드 블록을 수신할 수 있다. 코드 블록은 명령 메모리에 의해 호스트 컴퓨터의 CPU에서 송신된 커 널 코드에서 얻어지고, 코드 블록은 전용 실행 컴포넌트와 관련(연관)된다. 본 실시형태의 일부 바람직한 실시예에서, 커널 코드는 CPU가 입력된 데이터 스트림 그래프를 파싱함으로써 얻 을 수 있다. 예를 들어, 데이터 스트림 그래프는 합의된 프로그래밍 프로토콜에 따라 특정 프로그래밍 언어 (예 를 들어, C, C ++, Java 등)에 대한 커널 코드로 변환된다. 여기서, 데이터 스트림 그래프는 사용자가 입력한 신경망 모델의 정적지도를 매핑함으로써 얻을 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함할 수 있다. 제1 명령 은 통용 실행 컴포넌트에 의해 실행시 코드 블록과 관련된 전용 실행 컴포넌트를 로크하는데 사용된다. 제2 명 령세트 내의 각 제2 명령은 전용 실행 컴포넌트에 의해 실행시 연산 집약형의 컴퓨팅 타스크를 처리하는데 사용 된다. 제2 명령세트 내의 제2 명령은 제1 명령의 실행 후 (즉, 전용 실행 컴포넌트가 로크된 후) 통용 실행 컴 포넌트에 의해 전용 실행 컴포넌트에 송신된다. 일 예로서, 다음의 코드 \"lock (dma); loadDataToL2 ();\"를 포함하는 코드 블록에 대해, \"lock (dma)\"가 해당 코드 블록의 제1 명령이고, \"loadDataToL2 ()\"가 해당 코드 블록의 제2 명령이다. 제1 명령은 \"dma\"라는 전용 실행 컴포넌트를 로크하는데 사용되며, 제2 명령은 데이터를 L2 캐시에 로드하는데 사용된다. 본 실시형태의 일부 바람직한 실시예에서, 코드 블록은 또한 순환 세그먼트를 포함할 수 있다. 순환 세그먼트는 제2 명령세트를 포함할 수 있다. 즉, 제2 명령세트 내의 각 제2 명령은 제1 명령이 실행된 후 순환되어 실행된 다. 일 예로서, 다음의 코드 \"lock (mac); while () {convolution ();}\"를 포함하는 코드 블록에 대해, \"lock (mac)\"가 해당 코드 블록의 제1 명령이며, \"while (1 ) {convolution ();} \"이 해당 코드 블록의 순환 세그먼 트이며, \"convolution () \"이 순환 세그먼트의 제2 명령이다. 제1 명령은 \"mac\"라는 전용 실행 컴포넌트를 로크 하는데 사용되며, 제2 명령은 컨볼루션 연산을 실행하는데 사용되고, 순환 세그먼트는 제2 명령을 순환하여 실 행하는데 사용된다 (즉, 컨벌루션 연산을 순환하여 실행한다). 단계 에서, 코드 블록과 연관되는 전용 실행 컴포넌트를 로크한다. 본 실시형태에서, 상기 실행 주체는 코드 블록과 연관되는 전용 실행 컴포넌트를 로크할 수 있다. 일 예로서, 통용 실행 컴포넌트가 코드 \"lock (dma); loadDataToL2 ();\"를 포함하는 코드 블록을 수신하는 경우, 제1 명령\"lock (dma)\"을 실행하여 \"dma\"라는 전용 실행 컴포넌트를 로크할 수 있다. 통용 실행 컴포넌트는 하나의 전용 실행 컴포넌트를 로크할 수도 있고 하나 이상의 전용 실행 컴포넌트를 로크 할 수 있다는 점에 유의하기 바란다. 단계 에서, 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트에 송신한다. 본 실시형태에서, 코드 블록과 연관되는 전용 실행 컴포넌트를 로크한 후, 상기 실행 주체는 수신된 코드 블록 중 계산 집약형 임무를 처리하기 위한 명령을 로크된 전용 실행 컴포넌트에 송신할 수 있다. 전용 실행 컴포넌트는, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하도록 구성된다. 일 예로서, 하나의 전용 실행 컴포넌트가 로크되면, 상기 실행 주체는 코드 블록의 제2 명령세트 중의 제2 명령 을 실행 순서에 따라 로크된 전용 실행 컴포넌트에 순차적으로 송신할수 있다. 다른 한 실시예에서, 하나 이상의 전용 실행 컴포넌트 로크시, 코드 블록 중 제2 명령 세트의 각각의 제2 명령 에 대해, 상기 실행 주체는 먼저 로크된 전용 실행 컴포넌트로부터 상기 제2 명령을 실행하는 전용 실행 컴포넌 트를 확정한 후, 상기 제2 명령을 확정된 전용 실행 컴포넌트에 송신할 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메 모리를 더 포함할 수 있다. 로컬 제어 메모리는 통용 실행 컴포넌트에서 송신된 소정 로컬 변수의 목표값을 포함한 로컬 변수 갱신 요청을 수신하고, 소정 로컬 변수의 값을 목표값으로 갱신하도록 구성될 수 있다. 바람직하게는 상기 인공지능 칩에 사용되는 명령 실행 방법은 또한, 목표 로컬 변수의 갱신 통지를 수신한 것에 응답하여, 코드 블록 중의 명령을 계속 수행하는 것을 포함한다. 일 예로서, 코드 블록 중의 명령은 실행시 기타의 통용 실행 컴포넌트의 실행 결과를 필요로 한다. 이 경우, 상 기 실행 주체는 전용 실행 컴포넌트를 로크한 후 대기 상태로 될 수 있다. 기타의 통용 실행 컴포넌트는 동작 실행이 완료된 후, 로컬 제어 메모리에 로컬 변수A의 갱신 요청을 송신한다. 로컬 제어 메모리는 로컬 변수A를 갱신한 후, 로컬 변수A가 갱신된 통지를 상기 실행 주체로 송신한다. 상기 실행 주체는 상기 통지를 받은 후, 코드 블록 중의 명령을 계속 실행한다. 바람직하게는 상기 인공지능 칩에 사용되는 명령 실행 방법은 또한, 목표 로컬 변수의 값의 갱신 여부를 폴링방 식으로 검출하고, 목표 로컬 변수의 값 갱신이 검출된 것에 응답하여, 코드 블록 중 명령을 계속 실행하는 것을 포함한다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 또한 적어도 하나의 계산 클러스터를 포함할 수 있으 며, 각각의 계산 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴 포넌트를 포함할 수 있다. 각 계산 클러스터는 하나의 명령 메모리를 공유할 수 있다. 바람직하게는 각 계산 클러스터는 명령 메모리를 포함할 수 있다.각 계산 클러스터의 명령 메모리는 중앙 처리 유닛과 통신 가능하게 연결될 수 있다. 바람직하게는 인공지능 칩은 글로벌 제어 메모리를 더 포함할 수 있으며, 각 계산 클러스터는 로컬 제어 메모리 를 더 포함할 수 있다. 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값을 저장할 수 있고, 로컬 제어 메 모리는 적어도 하나의 로컬 변수의 값을 저장할 수 있다. 글로벌 제어 메모리는, 계산 클러스터에서 송신된 소 정 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정 글로벌 변수의 값을 목표값으로 갱 신하도록 구성될 수 있다. 바람직하게는 글로벌 제어 메모리는 또한, 적어도 하나의 로컬 제어 메모리에 소정 글로벌 변수 갱신의 통지를 송신하도록 구성될 수 있다. 소정 글로벌 변수 갱신을 기다리는 로컬 제어 메모리는 또한, 통지의 수신에 응답 하여, 소정 글로벌 변수와 관련된 로컬 변수의 값을 갱신하도록 구성될 수 있다. 바람직하게는 로컬 제어 메모리는 또한, 목표 글로벌 변수의 값의 갱신 여부를 폴링방식으로 검출하고, 목표 글 로벌 변수의 값의 갱신이 검출된 것에 응답하여, 소정 글로벌 변수와 관련된 로컬 변수의 값을 갱신 (및 각 통 용 실행 컴포넌트를 향해 관련된 로컬 변수의 갱신을 지시하는 통지를 송신)하도록 구성될 수 있다. 복수의 계산 클러스터를 설치함으로써 인공지능 칩은 예를 들어, 여러 간단한 모델을 포함하는 복잡한 신경망 모델을 처리할 수 있다. 글로벌 제어 메모리를 설치함으로써 부동한 계산 클러스터 간의 동기화가 실현되어 인공지능 칩은 여러 간단한 모델을 처리할 때 원하는 순서로 실행할 수 있으며, 인공지능 칩의 제어가 더욱 유연 하게 된다. 본 출원의 상기 실시형태에 따른 인공지능 칩에 사용되는 명령 실행 방법은, 명령 메모리로부터의 코드 블록을 수신한 후, 코드 블록과 연관되는 전용 실행 컴포넌트를 로크하고, 마지막으로, 코드 블록 중의 명령을 로크된 전용 실행 컴포넌트로 송신함으로써, 커널 코드 실행 동안 CPU와의 빈번한 통신을 피면함과 동시에 전용 실행 컴포넌트의 빈번한 로크 / 로크 해제를 피면하여 인공지능 칩의 성능이 향상될 수 있다. 또한 도6을 참조하면, 도5에 도시된 방법의 실시로서, 본 출원은 인공지능 칩에 사용되는 명령 실행 장치의 일 실시예를 제공하고, 상기 장치의 실시형태는 도5에 도시된 방법의 실시형태에 대응되며, 상기 장치는 구체적으 로 인공지능 칩의 통용 실행 컴포넌트에 적용할 수 있다. 도6에 나타낸 바와 같이, 본 실시형태의 인공지능 칩에 사용되는 명령 실행 장치 는, 코드 수신 유닛 , 로크 유닛 및 명령 송신 유닛 을 구비할 수 있다. 코드 수신 유닛 은 명령 메모리로부 터의 코드 블록을 수신하도록 구성되고, 코드 블록은 명령 메모리가 중앙 처리 유닛으로부터 송신된 커널 코드 에서 취득되고, 코드 블록은 전용 실행 컴포넌트와 관련된다. 로크 유닛 은 코드 블록과 연관되는 전용 실 행 컴포넌트를 로크하도록 구성되며, 명령 송신 유닛 은 코드 블록 중의 명령을 로크된 전용 실행 컴포넌 트로 송신하도록 구성되며, 전용 실행 컴포넌트는 수신된 명령을 실행함과 동시에 실행 결과를 데이터 메모리에 저장하도록 구성된다. 본 실시형태에서, 인공지능 칩은 명령 메모리, 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하 나의 전용 실행 컴포넌트를 포함할 수 있다. 명령 메모리는 중앙 처리 유닛에 통신 가능하게 연결된다. 인공지 능 칩에 사용되는 명령 실행 장치 의 상기 코드 수신 유닛 은 명령 메모리로부터의 코드 블록을 수신 할 수 있다. 코드 블록은 명령 메모리에 의해 호스트 컴퓨터의 CPU에서 송신된 커널 코드에서 얻어지고, 코드 블록은 전용 실행 컴포넌트와 관련된다. 본 실시형태의 일부 바람직한 실시예에서, 커널 코드는 CPU가 입력된 데이터 스트림 그래프를 파싱함으로써 얻 을 수 있다. 예를 들어, 데이터 스트림 그래프는 합의된 프로그래밍 프로토콜에 따라 특정 프로그래밍 언어 (예 를 들어, C, C ++, Java 등)에 대한 커널 코드로 변환된다. 여기서, 데이터 스트림 그래프는 사용자가 입력한 신경망 모델의 정적지도를 매핑함으로써 얻을 수 있다. 본 실시형태에서, 상기 로크 유닛 은 코드 블록과 관련된 전용 실행 컴포넌트를 로크할 수 있다. 일 예로 서, 통용 실행 컴포넌트가 코드 \"lock (dma); loadDataToL2 ();\"를 포함하는 코드 블록을 수신하는 경우, 제1 명령 \"lock (dma)\"을 실행하여 \"dma\"라는 전용 실행 컴포넌트를 로크할 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 코드 블록은 제1 명령 및 제2 명령세트를 포함할 수 있다. 로크 유닛 은 구체적으로, 제1 명령을 실행하여, 코드 블록과 관련된 전용 실행 컴포넌트를 로크하도록 구성될 수 있 다. 본 실시형태에서, 코드 블록과 연관되는 전용 실행 컴포넌트를 로크한 후, 상기 명령 송신 유닛 은 수신된 코드 블록 중 계산 집약형 임무를 처리하기 위한 명령을 로크된 전용 실행 컴포넌트에 송신할 수 있다. 전용 실 행 컴포넌트는, 수신된 명령을 실행하고, 실행 결과를 데이터 메모리에 저장하도록 구성된다. 본 실시형태의 일부 바람직한 실시예에서, 명령 송신 유닛 은 구체적으로, 제2 명령세트 중 제2 명령을 로 크된 전용 실행 컴포넌트에 순차적으로 송신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 명령 송신 유닛 은 구체적으로, 제2 명령세트 중의 제2 명령에 대해, 로크된 전용 실행 컴포넌트로부터 상기 제2 명령을 실행하는 전용 실행 컴포넌트를 확정하고, 상기 제2 명령을 확정된 전용 실행 컴포넌트로 송신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메 모리를 더 포함할 수 있다. 로컬 제어 메모리는, 통용 실행 컴포넌트에서 송신된 소정 로컬 변수의 목표값을 포 함한 로컬 변수 갱신 요청을 수신하고, 소정 로컬 변수의 값을 목표값으로 갱신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메 모리를 더 포함할 수 있다. 상기 장치 는 계속 실행 유닛을 더 포함할 수 있다. 계속 실행 유닛은, 목표 로컬 변수의 갱신 통지를 수신한 것에 응답하여, 코드 블록 중의 명령을 계속 실행하도록 구성될 수 있다.본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 적어도 하나의 로컬 변수의 값이 저장된 로컬 제어 메 모리를 더 포함할 수 있다. 상기 장치 는 검출유닛 및 계속 실행 유닛을 더 포함할 수 있다. 검출 유닛은 목표 로컬 변수의 값의 갱신 여부를 폴링방식으로 검출하도록 구성될 수 있고, 계속 실행 유닛은 목표 로컬 변 수의 값의 갱신이 검출된 것에 응답하여, 코드 블록 중의 명령을 계속 실행하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 적어도 하나의 계산 클러스터를 더 포함할 수 있다. 각각의 계산 클러스터는 데이터 메모리, 적어도 하나의 통용 실행 컴포넌트 및 적어도 하나의 전용 실행 컴포넌 트를 포함할 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 인공지능 칩은 글로벌 제어 메모리를 더 포함하고, 각 계산 클러스터 는 로컬 제어 메모리를 더 포함할 수 있다. 글로벌 제어 메모리는 적어도 하나의 글로벌 변수의 값이 저장되어 있고, 로컬 제어 메모리는 적어도 하나의 로컬 변수의 값이 저장되어 있다. 글로벌 제어 메모리는, 계산 클러스 터에서 송신된 소정 글로벌 변수의 목표값을 포함한 글로벌 변수 갱신 요청을 수신하고, 소정 글로벌 변수의 값 을 목표값으로 갱신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 글로벌 제어 메모리는 또한 적어도 하나의 로컬 제어 메모리에 소정 글로벌 변수 갱신의 통지를 송신하도록 구성될수 있다. 소정 글로벌 변수 갱신을 기다리는 로컬 제어 메모리는 또한, 통지의 수신에 응답하여, 소정 글로벌 변수와 관련된 로컬 변수의 값을 갱신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 로컬 제어 메모리는 또한 목표 글로벌 변수의 값의 갱신 여부를 폴링 방식으로 검출하고, 목표 글로벌 변수 값의 갱신이 검출된 것에 응답하여, 소정 글로벌 변수와 관련된 로컬 변 수의 값을 갱신하도록 구성될 수 있다. 본 실시형태의 일부 바람직한 실시예에서, 커널 코드가 실행되는 동안, 통용 실행 컴포넌트에 의해 로크된 전용 실행 컴포넌트는 로크 해제되지 않는다. 본 실시형태의 일부 바람직한 실시예에서, 상기 장치 는 또한 순환 유닛을 구비할 수 있다. 순환 유닛은 제1 명령을 실행한 후, 제2 명령세트를 순환하여 실행하도록 구성될 수 있다. 본 출원의 상기 실시예에 따른 인공지능 칩에 사용되는 명령 실행 장치는, 명령 메모리로부터의 코드 블록을 수 신한 후, 코드 블록과 연관되는 전용 실행 컴포넌트를 로크하고, 마지막으로, 코드 블록 중의 명령을 로크된 전 용 실행 컴포넌트로 송신함으로써, 커널 코드 실행 동안 CPU와의 빈번한 통신을 피면함과 동시에 전용 실행 컴 포넌트의 빈번한 로크 / 로크 해제를 피면함으로서 인공지능 칩의 성능이 향상되었다. 본 출원 실시예는 또한 전자 디바이스를 제공하였다. 상기 전자 디바이스의 구조는 도7을 참조할 수있으며, 도7 은 본 출원의 전자 디바이스의 일 실시형태의 컴퓨터 시스템 700의 구조 개략도를 나타내었다. 도 7에 표시하는 전자 디바이스는 단지 하나의 예이고 본 출원의 실시예의 기능과 사용 범위에 대하여 임의의 제한을 하지 말아 야 한다. 도7에 나타낸 바와 같이, 컴퓨터 시스템 은 하나 이상의 중앙 처리 유닛 (CPU) 701 및 하나 이상의 인공지 능 칩 을 구비한다. CPU는 읽기 전용 메모리 (ROM) 에 저장되어 있는 프로그램 또는 저장부 로부터 랜덤 액세스 메모리 (RAM) 에 로드된 프로그램에 따라 다양한 적당한 동작 및 처리를 실행할 수 있다. 인공지능 칩 은 명령 메모리, 데이터 메모리, 하나 이상의 통용 실행 컴포넌트 및 하나 이상의 전용 실행 컴포넌트를 포함할 수 있으며, 인공지능 칩 은 CPU로부터 수신된 프로그램에 따라 다양한 적당한 동작 및 처리를 실행할 수 있다. RAM에는 시스템 의 조작에 필요한 각종 프로그램 및 데이터 가 더 저장되어 있다. CPU, ROM, RAM 및 인공지능 칩 은 버스 를 통해 서로 연결되 어 있다. 입력 / 출력 (I / O) 인터페이스 도 버스 에 연결되어 있다. 하드 디스크 등을 포함하는 저장부 및 LAN 카드, 모뎀 등과 같은 네트워크 인터페이스 카드를 포함하는 통신부 는 I / O 인터페이스 에 연결되어 있다. 통신부 는 예를 들어 인터넷과 같은 네트워크를 통해 통신 처리를 실행한다. 드라이버 는 필요에 따라 I / O 인터페이스 에 연결된다. 이동식 미디어 , 예를 들어, 마그네틱 디스크, 광디스크, 광자기 디스크, 반도체 메모리 등과 같은 것이며, 필요에 따라 드라이버 에 장착됨으로써 드라이버 에서 판독된 컴퓨터 프로그램이 필요에 따라 기억 부 에 장 착된다. 특히, 본 발명의 실시예에 따르면, 상기 흐름도 참조하여 설명된 과정은 컴퓨터 소프트웨어 프로그램으로 실현 될 수 있다. 예를 들어, 본 발명의 실시예는, 컴퓨터 판독 가능 매체에 로드되는 컴퓨터 프로그램을 포함한 컴퓨터 프로그램 제품을 제공하며, 상기 컴퓨터 프로그램은 순서도에 표시된 방법을 실행하기 위한 프로그램 코드 를 포함한다. 이러한 실시예에서, 상기 컴퓨터 프로그램은 통신부 를 통해 네트워크로부터 다운로드하여 설치 및 / 또는 이동식 미디어 로부터 장착될 수 있다. 상기 컴퓨터 프로그램은 인공지능 칩 의 통용 실행 컴포넌트에 의해 실행시, 본 출원의 방법에 한정되는 상기 기능을 실행한다. 설명해야 할 것은 본 출원에 기재되는 컴퓨터 판독 가능 매체는 컴퓨터 판독 가능 신호 매체 또는 컴퓨터 판독 가능 저장 매체 또는 상기 양자의 임의적인 조합일 수 있다. 컴퓨터 판독 가능 저장 매체는 예컨대 전기, 자기, 광, 전자기, 적외선 또는 반도체의 시스템, 장치 또는 소자 혹은 임의적인 조합일 수 있지만 이에 한정되지 않 는다. 컴퓨터 판독 가능 저장 매체의 보다 구체적인 예는, 하나 또는 복수의 전도선을 구비한 전기적 연결, 휴 대형 컴퓨터 자기디스크, 하드디스크, 랜덤 액세스 메모리(RAM), 읽기 전용 메모리(ROM), 삭제 가능 프로그래밍 읽기 전용 메모리(EPROM 또는 플래시 메모리) , 광섬유, 휴대형 콤팩터 자기디스크 읽기 전용 메모리(CD-ROM), 광 메모리 소자, 자기 메모리 소자, 또는 상술한 요소들의 임의적인 적절한 조합을 포함하며 이에 한정되지 않 는다. 본 출원에 있어서, 컴퓨터 판독 가능 저장 매체는 프로그램을 포함하거나 저장한 임의의 유형 매체일 수 있으며, 상기 프로그램은 명령 수행 시스템, 장치 또는 소자에 의해 사용되거나 그것들과 결합 사용될 수 있다. 컴퓨터 판독 가능 신호 매체는 베이스 밴드에 포함되거나, 캐리어 파동의 일부분으로서 전파되는 데이터 신호에 포함될 수 있는데, 그 중에는 컴퓨터 판독 가능 프로그램 코드가 탑재되어 있다. 이러한 전파되는 데이터 신호 는 다양한 형식을 적용할 수 있는 바, 전자기 신호, 광 신호 또는 상술한 신호들의 임의적인 조합을 포함할 수 있지만 이에 한정되지는 않는다. 컴퓨터 판독 가능 신호 매체는 또한 컴퓨터 판독 가능 저장 매체 이외의 임의 의 컴퓨터 판독 가능 매체일 수도 있는데, 상기 컴퓨터 판독 가능 매체는 프로그램을 송신, 전파 또는 송신할 수 있는 바, 상기 프로그램은 명령 수행 시스템, 장치 또는 소자 또는 이들의 결합에 의해 사용되는 프로그램이 다. 컴퓨터 판독 가능 매체 상에 포함되는 프로그램 코드는 임의의 적절한 매체를 이용하여 송신될 수 있는데, 무선, 전선, 광케이블, RF 등 또는 상술한 요소들의 임의의 적절한 조합을 포함할 수 있으나 이에 한정되지 않 는다. 한가지 또는 여러가지 프로그램 설계 언어 또는 그 조합에 의해 본 발명에 따라 동작하는 컴퓨터 프로그램 코드 를 프로그래밍할 수 있는데, 상기 프로그램 설계 언어는 객체를 지향한 프로그램 설계 언어, 예컨대 Java, Smalltalk, C++ 를 포함하고, 상규적 과정식 프로그램 설계 언어, 예컨대 \"C\" 언어 또는 유사한 프로그램 설계 언어를 더 포함한다. 프로그램 코드는 완전히 사용자 컴퓨터 상에서 수행되거나, 부분적으로 사용자 컴퓨터 상 에서 수행되거나, 하나의 독립적인 소프트웨어 패킷으로서 수행되거나, 일부분은 사용자 컴퓨터 상에서 타부분 은 원격 컴퓨터 상에서 수행되거나, 완전히 원격 컴퓨터 또는 서버 상에서 수행될 수 있다. 원격 컴퓨터가 섭렵 되는 경우, 원격 컴퓨터는 임의의 종류의 네트워크 - 로컬 영역 네트워크(LAN) 또는 광대 영역 네트워크(WAN)를 통해 사용자 컴퓨터에 연결될 수 있다. 또는, 외부 컴퓨터(예를 들면, 인터넷 서비스 제공업체를 이용하여 인터 넷을 통해 연결)에 연결될 수 있다. 첨부된 도면 중의 흐름도 및 블록도는 본 출원의 각 실시예에 따른 시스템, 방법, 및 컴퓨터 프로그램 제품의 구현 가능한 체계구조, 기능 및 동작을 도시하였다. 이러한 방면에 있어서, 흐름도 또는 블록도 중의 각 블록은 하나의 모듈, 프로그램 세그먼트 또는 코드의 일부분을 대표할 수 있고, 해당 모듈, 프로그램 세그먼트 또는 코 드의 일부분은 규정된 로직 기능을 구현하기 위한 하나 또는 다수의 실행 가능한 명령을 포함한다. 일부 대체 구현에 있어서, 블록에 표기된 기능들은 첨부된 도면에 표기된 순서와 다른 순서로 수행될 수도 있음을 유의하 여야 한다. 예를 들어, 순차적으로 표시된 두 개의 블록은 실제적으로 거의 동시에 실행될 수 있고, 경우에 따 라 반대된 순서에 따라 실행될 수도 있으며, 이는 관련된 기능에 따라 결정된다. 블록도 및/또는 흐름도 중의 각 블록 및 블록도 및/또는 흐름도 중의 블록들의 조합은 규정된 기능 또는 동작을 실행하는 하드웨어 기반의 전용 시스템으로 구현되거나, 전용 하드웨어와 컴퓨터 명령의 조합으로 구현될 수 있음을 유의하여야 한다. 본 출원의 실시예에 설명된 관련 유닛들은 소프트웨어의 방식으로 구현될 수 있거나, 또는 하드웨어의 방식으로 구현될 수도 있다. 설명된 유닛들은 통용 실행 컴포넌트에 설치될 수도 있으며, 예를 들어, 통용 실행 컴포넌트 는 코드 수신 유닛, 로크 유닛, 및 명령 송신 유닛을 포함한다고 설명될 수 있다. 여기서, 이러한 유닛들의 명 칭은 일부의 경우에 있어서 해당 유닛 자체에 대한 한정을 구성하지 않는다. 예를 들어, 코드 수신 유닛은 \"명 령 메모리로부터의 코드 블록을 수신하는 유닛\"으로 설명될 수도 있다. 다른 일 방면에 있어서, 본 출원은 컴퓨터 판독 가능한 매체를 더 제공하며, 해당 컴퓨터 판독 가능한 매체는 상기 실시예에 설명된 인공지능 칩에 있어서의 통용 실행 컴포넌트에 포함되는 것일 수 있으며, 또는 해당 통용 실행 컴포넌트에 설치되는 것이 아니라 별도로 제공된 것일 수도 있다. 상기 컴퓨터 판독 가능한 매체에는 하나 또는 다수의 프로그램이 탑재되고, 상기 하나 또는 다수의 프로그램이 해당 통용 실행 컴포넌트에 의해 실행될경우, 해당 통용 실행 컴포넌트로 하여금, 중앙 처리 유닛에 의해 송신된 커널 코드에서 취득한, 전용 실행 컴 포넌트와 관련된 코드 블록을 명령 메모리로부터 수신하고, 코드 블록과 연관된 전용 실행 컴포넌트를 로크하고, 코드 블록 내의 명령을 로크된 전용 실행 컴포넌트에 송신하도록 하며, 전용 실행 컴포넌트는 수신된 명령을 실행하고 실행 결과를 데이터 메모리에 저장한다. 이상의 설명은 단지 본 출원의 비교적 바람직한 실시예 및 운용한 기술적 원리에 대한 설명이다. 본 출원에 관 련된 발명의 범위가 상기 기술적 특징들의 특정 조합으로 이루어진 기술적 방안들에 한정되는 것이 아니라, 본 발명의 주지를 벗어나지 않는한 상기 기술적 특징들 또는 그들의 균등한 특징들의 임의의 조합으로 이루어진 기"}
{"patent_id": "10-2019-0082871", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "타 기술적 방안들도 포함되어야 함을 해당 기술분야의 당업자는 이해할 것이다. 예를 들어, 상기 특징들과 본 출원에 개시되어 있으나 이에 한정되지 않는 유사한 기능을 구비한 기술적 특징을 서로 대체하여 이루어진 기술 적 방안도 포함된다."}
{"patent_id": "10-2019-0082871", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이하, 첨부된 도면을 참조하면서 비한정적인 실시예를 상세하게 설명함으로써 본원의 다른 특징, 목적 및 이점 은 더욱 명확해진다. 도1은 본 출원의 일실시예에 의해 적용될 수 있는 예시적인 시스템 구조도이다. 도2는 본 출원에 따른 인공지능 칩의 일실시예의 동작 타이밍도이다. 도3은 본 출원에 따른 인공지능 칩의 하나의 응용 시나리오를 개략적으로 도시한 도면이다. 도4는 본 출원에 따른 인공지능 칩의 다른 하나의 실시예의 동작 타이밍도이다. 도5는 본 출원에 따른 인공지능 칩에 사용되는 명령 실행 방법의 일실시예의 흐름도이다. 도6은 본 출원에 따른 인공지능 칩에 사용되는 명령 실행 장치의 일실시예의 개략적인 구조도이다. 도7은 본 출원의 실시예의 전자 기기를 실현하기에 적합한 컴퓨터 시스템의 개략적인 구조도이다."}
