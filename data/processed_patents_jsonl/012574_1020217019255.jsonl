{"patent_id": "10-2021-7019255", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0093331", "출원번호": "10-2021-7019255", "발명의 명칭": "자동화 디바이스용 확장 디바이스", "출원인": "지멘스 악티엔게젤샤프트", "발명자": "클라우센, 하이코"}}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "하나 이상의 컴퓨테이션(C1,...,Cn)을 가능하게 하고/하거나 가속화하는, 산업용 시스템(100)에서의 자동화 디바이스(DEV)를 위한 확장 디바이스(MI)로서,상기 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1,...,Rn)를 획득(S2)하고 - 상기 결과(R1,...,Rn)는 상기 산업용 시스템(100)의 하나 이상의 상태(S1,...,Sn)를 나타냄 -, 상기 산업용 시스템(100)을 모니터링 및/또는 제어하기 위해 상기 자동화 디바이스(DEV)와 공유되는 프로세스상태 모델(PM)을 통해 상기 하나 이상의 결과(R1,...,Rn)를 제공(S3)하도록 동작하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 확장 디바이스는, 특히 하나 이상의 인공 신경 네트워크를 컴퓨팅하도록 구성된, 신경 프로세싱 유닛인, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서, 상기 컴퓨테이션들(C1,...,Cn)의 중간 결과 및/또는 상기 하나 이상의 상태(S1,...,Sn)에 로직을 적용하도록 동작하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항 내지 제3항 중 어느 한 항에 있어서, 상기 결과들(R1,...,Rn) 중 하나 이상을 사용하여 상기 프로세스 상태 모델(PM)의 적어도 일부를 업데이트하도록 동작하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중 어느 한 항에 있어서, 상기 컴퓨테이션들(C1,...,Cn)을 수행하도록 구성된 프로세싱 유닛(PU)을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제5항 중 어느 한 항에 있어서, SIMD 아키텍처로 상기 컴퓨테이션들(C1,...,Cn)의 적어도 일부를 수행하도록 적응된 프로세싱 유닛(PU)을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항 내지 제6항 중 어느 한 항에 있어서, 신경 네트워크 가속 아키텍처에 기초한 프로세싱 유닛(PU)을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항 내지 제7항 중 어느 한 항에 있어서, 0.1 또는 그 이상의 TOPS/Watt로 컴퓨테이션들(C1,...,Cn)을 제공하도록 설계된 프로세싱 유닛(PU)을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항 내지 제8항 중 어느 한 항에 있어서, 상기 프로세스 상태 모델(PM)을 통해 산업용 데이터(DATA)를 획득하공개특허 10-2021-0093331-3-도록 동작하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항 내지 제9항 중 어느 한 항에 있어서, 상기 프로세스 상태 모델(PM)을 통해 상기 자동화 디바이스(DEV)로부터 데이터(ID)를 검색 및/또는 제공하도록 구성된 제어 유닛(CU)을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항 내지 제10항 중 어느 한 항에 있어서, 상기 자동화 디바이스(DEV)와 상기 확장 디바이스(MI) 사이에서 상기 프로세스 상태 모델(PM)의 적어도 일부를 교환하도록 동작하는 통신 인터페이스(CI)를 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항 내지 제11항 중 어느 한 항에 있어서, 상기 프로세스 상태 모델(PM)은 상기 자동화 디바이스(DEV)의 입력들 및/또는 출력들의 상태 표현들을 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제1항 내지 제12항 중 어느 한 항에 있어서, 상기 확장 디바이스(MI)에 연결된 데이터 소스들(DS)에 대한 연결을 제공하도록 동작하는 주변기기 연결 시스템(PS)을 추가로 포함하는, 확장 디바이스(MI)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1항 내지 제13항 중 어느 한 항에 따른 하나 이상의 확장 디바이스(MI) 및 하나 이상의 자동화 디바이스(DEV)를 포함하는 시스템(10)으로서, 상기 자동화 디바이스들(DEV) 중 적어도 하나는 상기 확장 디바이스들(MI) 중하나 이상에 의해 수행되는 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1..., Rn)에 따라 산업용시스템(100)을 모니터링 및/또는 제어하도록 동작하며, 상기 하나 이상의 결과(R1..., Rn)는 프로세스 상태 모델(PM)을 통해 상기 자동화 디바이스(DEV)에 제공되는, 시스템(10)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제1항 내지 제13항 중 어느 한 항에 따른 하나 이상의 확장 디바이스(MI)에 의해 수행되는 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1..., Rn)에 기초하여 산업용 시스템(100)을 제어하도록 동작하는 자동화디바이스(DEV)로서, 상기 하나 이상의 결과(R1..., Rn)는 프로세스 상태 모델(PM)을 통해 컨트롤러(DEV)에 제공되는, 자동화 디바이스(DEV)."}
{"patent_id": "10-2021-7019255", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "산업용 시스템(100)에서 컴퓨테이션(C1,...,Cn)의 결과(R1,...,Rn)를 제공하기 위한 방법으로서,확장 디바이스(MI)에 의해, 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1,...,Rn)를 획득하는 단계(S2) - 상기 결과(R1,...,Rn)는 상기 산업용 시스템(100)의 하나 이상의 상태(S1,...,Sn)를 나타냄 - 및상기 산업용 시스템(100)을 모니터링 및/또는 제어하기 위해 자동화 디바이스(DEV)와 공유되는 프로세스 상태모델(PM)을 통해 상기 하나 이상의 결과(R1,...,Rn)를 제공하는 단계(S3)를 포함하는, 방법."}
{"patent_id": "10-2021-7019255", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 산업용 시스템에서의 하나 이상의 자동화 디바이스(DEV)를 위한 확장 디바이스(MI)에 관한 것이다. 본 발명은 특히 하나 이상의 인공 신경 네트워크에 기초하여 데이터 프로세싱을 수행할 수 있는 산업용 데 이터 프로세싱 유닛(PU)에 관한 것이다. 산업용 시스템에서 하나 이상의 컴퓨테이션(C1,...,Cn)을 가능하 (뒷면에 계속)"}
{"patent_id": "10-2021-7019255", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 산업용 시스템에서의 하나 이상의 자동화 디바이스를 위한 확장 디바이스에 관한 것이다. 본 발명은 특히 하나 이상의 인공 신경 네트워크에 기초하여 데이터 프로세싱을 수행할 수 있는 산업용 데이터 프로세싱유닛에 관한 것이다. 본 발명은 추가로 시스템, 자동화 디바이스 및 방법에 관한 것이다."}
{"patent_id": "10-2021-7019255", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "AI 기술(인공 지능 기술, 또한 기계 지능이라고도 알려짐)이 더 안정적으로 되고 산업용 시스템에서의 응용이 더 보편화됨에 따라, 산업용 AI 장비에 대한 수요가 있다. 프로그래머블 로직 컨트롤러(PLC라고도 알려짐)와 같은, 일반 자동화 디바이스는 AI 기술에 필요한 컴퓨팅 능력이 없다. 클라우드 기반 AI 솔루션이 이용 가능하 지만 생산 현장 솔루션용으로 구현하기가 쉽지 않으며, 즉, 클라우드 기반 AI 솔루션의 결과가 생산 현장에서 쉽게 이용 가능하지 않을 수 있다. 본 발명은 산업용 시스템의/에서의 하나 이상의 컴퓨테이션(computation)을 가능하게 하고/하거나 가속화하여, 이에 의해 인공 지능을 산업용 시스템에 통합시키는 것을 단순화하는 데 목적이 있다. 본 발명의 다른 목적은 인공 지능을 사용하여 데이터를 프로세싱할 수 있는 확장 디바이스와 자동화 디바이스 간의 데이터 교환을 단순 화하는 것이다. 컴퓨테이션은 계산(calculation)을 포함할 수 있다. 자동화 시스템의 하나 이상의 상태를 나타내는 하나 이상의 컴퓨테이션의 하나 이상의 결과를 획득하도록 동작 하는 확장 디바이스에 의해 문제가 해결된다. 확장 디바이스는 추가로 산업용 시스템을 모니터링 및/또는 제어 하기 위해 자동화 디바이스와 공유되는 프로세스 상태 모델을 통해 하나 이상의 결과를 제공하도록 동작한다. 제어는 실제 개루프 또는 폐루프 제어, 설정 값을 변경하는 것, 값을 제한하는 것, 산업용 프로세스를 중지, 시 작, 일시 중지 또는 업데이트하는 것을 포함하지만 이에 제한되지 않는다. 확장 디바이스는, 예를 들면, 프로파일 레일에 자동화 디바이스, 예를 들면, PLC와 나란히 마운팅될 수 있는 물 리적 모듈일 수 있다. 확장 디바이스는 또한 기존의 자동화 디바이스를 위한 플러그인 모듈로서 구축될 수 있 다. 예를 들어, 플러그인 솔루션 및/또는 직접 하드웨어 통합에 의해, 확장 디바이스를 자동화 디바이스에 통 합시키는 것도 가능하다. 컴퓨테이션은, 예를 들어, 컴퓨테이션 및/또는 인공 신경 네트워크(ANN)라고도 불리는 신경 네트워크의 컴퓨테 이션이다. 결과는 애플리케이션의 컴퓨테이션의 임의의 결과일 수 있으며, 여기서 컴퓨테이션은 산업용 시스템에서 직접 또는 간접적으로 생성된 데이터에 대해 수행된다. 결과는 산업용 시스템에서 발생했거나 곧 발생할 이벤트의 분류를 포함하지만 이에 제한되지 않는다. 예를 들어, 그러한 이벤트는, 예를 들면, 생산 라인 또는 프로세스 자동화 라인에서 사용되는 센서 및 액터(actor)의 데이터에 나타나는 특이한 패턴일 수 있다. 특이한 패턴을 갖는 생산된 제품을 표시하는 품질 지시자가 또한 컴퓨팅될 수 있다. 특이한 패턴은 실제 이벤트가 발생하기 전에 고장 또는 저품질을 표시할 수 있다. 산업용 시스템은, 예를 들어, 전문 산업용 환경에서 사용되는 프로세스 산업 시스템, 자동화 산업 시스템, 건물 자동화 시스템 등으로 이해되어야 한다. 산업용 시스템의 하나 이상의 상태는 시스템 전체에 대한 하나 이상의 일반 지시자, 자동화 컨트롤러, I/O 디바 이스, 센서, 액터 등과 같은 단일 엔티티에 대한 하나 이상의 지시자, 또는 하나 이상의 엔티티 그룹의 상태일 수 있다. 상태는 하나 이상의 감지된 데이터, 하나 이상의 예측된 데이터 또는 하나 이상의 컴퓨팅된 데이터 중 적어도 하나에 기초한 값 또는 다른 파라미터일 수 있다. 그에 의해 데이터는 기술된 엔티티의 상태를 나타 낼 수 있다. 예를 들어, 모터는 다음과 같은 상태들: 회전 속도, 토크, 온도, 전류, 전압, 건강 상태, 운전 시 간, 유지 관리 지시자 ... 중 하나 이상을 포함하는 액터이다. 하위 상태들로 분할될 가능성이 있는 그 상태 들 각각, 예를 들어, 온도는 회전자 온도, 고정자 온도 또는 전체 모터 온도 중앙값일 수 있다. 상태는 또한 산업용 시스템에서 생산된 제품의 상태, 예를 들면, 품질 지시자일 수 있다. 가능한 실시예에서, 상태들 중 하 나 이상은 이진(binary)일 수 있으며, 예를 들면, 1은 제품이 모든 품질 요구사항을 충족시키는 것으로 적격임 에 대한 것이고, 0은 제품이 추가 프로세싱에 적합하지 않고 따라서 폐기 또는 수리되어야 함에 대한 것이다. 프로세스 상태 모델은 일반적으로 자동화 디바이스와 확장 디바이스 간에 공유되는 데이터 구조이며, 자동화 디 바이스가 확장 디바이스에 의해 제공되는 결과를 직접 사용할 수 있게 한다. 프로세스 상태 모델은 바람직하게 는 산업용 시스템을 제어 및/또는 모니터링하기 위해 자동화 디바이스에 의해 사용되는 하나 이상의, 바람직하 게는 모든 현재 상태의 실제 표현을 포함한다. 예시적인 구현예에서, 프로세스 상태 모델은 입출력 디바이스의이진 표현을 나타낸다. 프로세스 상태 모델의 한 형태는 PLC에서 통상적으로 사용되고 알려진, 프로세스 이미 지 또는 독일어로 \"Prozessabbild\"로서 알려져 있다. 프로세스 상태 모델은 산업용 시스템을 제어 및/또는 모 니터링하는 데 필요한 상태들에 대한 중간 저장소로서 역할한다. 이것은 프로그램에서 특정 기능을 실행할 때 입력 및/또는 출력이 레지스터로부터 리드 인(read in)되거나 레지스터에 라이트 인(write in)될 필요가 없다는 장점이 있다. 본 발명은 프로세스 상태 모델을 통해 통신하는 것이 확장 디바이스, 예를 들어, 신경 프로세싱 유닛과 자동화 디바이스 사이에서 데이터를 교환하는 데 유리하다는 것을 보여주었다. 이것은 확장 디바이스로부터의 하나 이 상의 컴퓨테이션의 하나 이상의 결과를 프로세스 상태 모델을 통해 자동화 디바이스로 반환하는 것을 포함하지 만 이에 제한되지 않는다. 자동화 디바이스는 프로세스 상태 모델을 통해 교환된 결과에 직접 액세스할 수 있 으며 확장 디바이스와 통신하기 위해 다른 API에 액세스할 필요가 없다. 그에 의해 그러한 통신의 엔지니어링 은 단순화되고 프로세스에 집중하게 되며 임의의 다른 모듈을 포함시키기 위해 어떤 방식으로든 필요하다. 따 라서 엔지니어링은 별도의 커스텀 인터페이스(custom interface)를 만들 필요가 없다. 프로세스 상태 모델 전체 또는 그 일부는 인터럽트와 같은 이벤트에 의해 트리거되어 주기적으로 업데이트될 수 있거나 또는 부분적으로는 주기적으로 및 부분적으로는 이벤트 트리거 방식으로(event-triggered) 업데이트될 수 있다. 보안 및/또는 안전 대책과 관련하여, 프로세스 상태 모델이 확장 디바이스와 부분적으로만 공유될 수 있고, 여 기서 확장 디바이스는 그의 컴퓨테이션에 관련성 있는 데이터에만 액세스할 수 있으며 확장 디바이스가 그의 결 과를 놓아둘 수 있는 프로세스 상태 모델의 일부에도 액세스할 수 있다. 결과는 상태로서 직접 제공될 수 있거 나 또는 자동화 디바이스에 의한 추가 프로세싱을 위해 원시 형태로 제공될 수 있다. 많은 양의 데이터를 전송 하기 위해, 프로세스 상태 모델은 \"전송 준비 완료(transmission ready)\" 지시자를 가질 수 있다. 예를 들면, 데이터 레코드를 통해, 더 많은 양의 데이터를 전송하기 위해 사이드 채널이 사용될 수 있다. 추가 실시예에서, 확장 디바이스는 신경 프로세싱 유닛이다. 신경 프로세싱 유닛은 특히 하나 이상의 인공 신 경 네트워크를 컴퓨팅하도록 구성될 수 있다. 이것은 산업용 시스템에서 AI 알고리즘을 직접 사용하는 것을 가 능하게 하고 산업용 환경에서 AI를 사용하는 것을 용이하게 한다. 추가 실시예에서, 확장 디바이스는 컴퓨테이션의 중간 결과에 로직을 적용하는 것에 의해 하나 이상의 결과를 획득하도록 동작한다. 실제 산업용 플랜트로부터의 실제 데이터는, 일부 경우에, 로직을 적용하여 다수의 클래 스로 세그먼트화될 수 있고/있거나 세그먼트화되어야 한다. 세그먼트화는, 예를 들면, \"if - then\" 구조 또는 다른 더 복잡한 세그먼트화 기술을 적용하는 것에 의해 달성될 수 있다. 원시 데이터가 컴퓨테이션을 위해 제 공되기 전에 원시 데이터에 로직이 적용될 수 있다. 컴퓨테이션은 원시 데이터에 대해 직접 수행될 수 있으며 나중에 로직에 피드(feed)되고 추가 컴퓨테이션에 추가로 피드될 수 있다. 또한 컴퓨테이션이 먼저 수행될 수 있고, 결과를 자동화 디바이스에 제공하기 전에 로직이 후속 단계로서 수행될 수 있다. 추가 실시예에서 그리고 편리한 방식으로 결과를 제공하기 위해, 확장 디바이스는 결과들 중 하나 이상으로 프 로세스 상태 모델의 적어도 일부를 업데이트하도록 동작한다. 자동화 디바이스는 어떠한 추가 지연도 없이 이 러한 결과를 사용하고 추가로 프로세싱할 수 있다. 프로세스 상태 모델을 업데이트하는 것은 프로세스 상태 모 델의 적용 가능한 부분에 변수를 기입하는 것, 더 오래된 기존 결과를 덮어쓰는 것, 및/또는 확장 디바이스와 자동화 디바이스 간에 교환되는 프로세스 상태 모델에 새로운 부분을 생성하는 것에 의해 구현될 수 있다. 불 필요한 데이터가 통신 인터페이스를 통해 자동화 디바이스와 확장 디바이스 사이에서 전송되는 것을 방지하기 위해, 확장 디바이스와 자동화 디바이스에 의해 제각기 업데이트되어야 하는 프로세스 상태 모델의 부분을 정의 하는 것이 유리한 것으로 입증되었다. 추가 실시예에서, 확장 디바이스는 결과를 제공하기 위해 하나 이상의 컴퓨테이션을 수행하도록 동작하는 프로 세서를 포함한다. 바람직한 실시예에서, 프로세서는, 바람직하게는 병렬 프로세싱 능력을 갖는, 효율적인 방식 으로 신경 네트워크를 컴퓨팅하도록 적응된다. 프로세서는 하나 이상의 프로세싱 유닛, 하나 이상의 제어 유닛, 하나 이상의 휘발성 및 비휘발성 메모리 및/또는 하나 이상의 주변기기 인터페이스를 포함할 수 있다. 추가 실시예에서, 확장 디바이스는 컴퓨테이션들 중 하나 이상을 수행하도록 구성된 프로세싱 유닛을 포함한다. 프로세싱 유닛은, 예를 들어, - 자동화 디바이스에 비해 - 더 높은 효율성 및/또는 더 빠른 속도로 컴퓨테이션 을 수행하도록 적응된다. 프로세싱 유닛은 신경 네트워크 가속 아키텍처를 포함할 수 있다. 이들은 컨볼루션, 행렬 곱셈 등을 컴퓨팅하는 데 특화된 특정 하위 프로세서일 수 있다. 프로세싱 유닛은 다수의 상이한 또는 동일한 해당 하위 프로세서를 포함할 수 있다. 추가 실시예에서, 확장 디바이스는 SIMD 아키텍처를 사용하여 컴퓨테이션의 적어도 일부를 수행하도록 적응된 프로세싱 유닛을 포함한다. SIMD 아키텍처는 단일 명령어, 다중 데이터(single instruction, multiple data) 를 나타내며 다수의 데이터 포인트에 대해 동시에 동일한 동작을 수행하는 다수의 프로세싱 요소를 갖는 컴퓨터 를 기술한다. AI 목적에 특화된 최신 프로세싱 유닛은 SIMD 기반 컴퓨테이션에 특화된 다수의 프로세싱 코어를 갖는다. 프로세싱 유닛은 또한 프로세싱 유닛의 SIMD 아키텍처를 제어하는 프로그램을 실행하도록 적응된 별도 의 제어 유닛과 통신할 수 있다. 프로세싱 유닛은 프로세서의 일부일 수 있다. 다른 실시예에서, 확장 디바이스는 신경 네트워크 가속 아키텍처에 기초한 프로세싱 유닛을 포함한다. 이러한 목적을 위해, 프로세싱 유닛은 신경 네트워크 가속 아키텍처를 포함할 수 있다. 이러한 아키텍처는 컨볼루션, 행렬 곱셈 등을 컴퓨팅하는 데 특화된 특정 하위 프로세서/하위 프로세싱 유닛일 수 있다. 프로세싱 유닛은 다 수의 상이한 또는 동일한 해당 하위 프로세서를 포함할 수 있다. 아키텍처는 통합 프로세서 및/또는 SoC의 일 부일 수 있다. 추가 실시예에서, 확장 디바이스는 0.1 또는 그 이상의 TOPS/Watt로 컴퓨테이션을 제공하도록 설계된 프로세싱 유닛을 포함한다. TOPS/Watt는 소비된 에너지 당 프로세싱 효율성에 대한 척도를 기술하고, AI 유닛(NPU - 신 경 프로세싱 유닛 - 이라고도 알려짐), 텐서 프로세싱 유닛 등의 프로세싱 능력(processing power)을 기술하는 알려진 파라미터이다. TOPS/Watt는 소비되는 에너지 와트 당 초당 테라 연산(1012 또는 10^12개의 연산)을 나타 낸다. 프로세서는 바람직하게는 0.1; 0.5; 1 또는 2 또는 그 이상의 TOPS/Watt를 제공한다. 무제한의 프로세 싱 능력이 이용 가능하지 않지만, 본 기술 분야의 통상의 기술자가 본 출원에서 기술된 바와 같은 본 발명에 가 장 적합한 하나 이상의 프로세싱 유닛을 갖는 프로세싱 유닛 또는 프로세서를 선택할 것임은 분명하다. 위의 값들은, 시간이 지나면 아마도 쓸모가 없게 될, 현재 이용 가능한 프로세서/프로세싱 유닛(예를 들면, Intel Movidius Myriad X 또는 Google의 Cloud TPU)을 기술한다. 따라서, 미래에 본 기술 분야의 통상의 기술자는 본 발명의 범위를 벗어나지 않으면서 미래의 최첨단 프로세싱 유닛/프로세서를 선택할 수 있다. 고 에너지 효 율 프로세싱 유닛의 사용은 유효 전력 손실(active power dissipation)에 대한 필요성을 감소시키고 전체 전력 소비를 감소시키는 큰 장점이 있다. 프로세싱 유닛의 상기 실시예들의 특징들 중 하나 이상이 단일 프로세서 및/또는 프로세싱 유닛에 겸비될 수 있 다. 추가 실시예에서, 확장 디바이스는 초당 적어도 10 GFLOPS, 바람직하게는 20, 50 또는 100 또는 그 이상의 GFLOPS의 부동 소수점 연산의 프로세싱 속도로 컴퓨테이션을 제공하도록 설계된 프로세싱 유닛을 포함한다. 추가 실시예에서, 확장 디바이스는 프로세스 상태 모델을 통해 산업용 데이터를 획득하도록 동작한다. 산업용 데이터는 능동적 또는 수동적 방식으로 산업용 시스템으로부터 획득될 수 있다. 산업용 데이터의 능동적 획득 은 자동화 디바이스에 직접 데이터를 요청하는 것 및/또는 자동화 디바이스에 연결된 디바이스에 대한 데이터를 요청하는 것이다. 데이터를 수동적으로 획득하는 것은 프로세스 상태 모델을 통해 자동화 디바이스에 의해 제 공되는 데이터를 판독하는 것이다. 추가 실시예에서, 확장 디바이스는 프로세스 상태 모델을 통해 자동화 디바이스로부터 데이터를 검색하고/하거 나 그에 제공하도록 구성된 제어 유닛을 포함한다. 이러한 바람직한 실시예에서, 제어 유닛은 프로세스 상태 모델을 통한 통신을 제어하는 유닛이다. 이것은 실제 프로세싱 유닛이 통신 및 관리 오버헤드에서 벗어나게 되 고 결과의 실제 컴퓨테이션에 집중할 수 있다는 장점이 있다. 제어 유닛은 프로그래밍 가능하고 확장 디바이스 에 운영 체제를 제공할 수 있다. 제어 유닛은 컴퓨테이션을 제어하도록 구성될 수 있다. 제어 유닛은 컴퓨테 이션을 수행하기 위해 프로세싱 유닛을 제어하는 애플리케이션을 실행할 수 있다. 제어 유닛은 확장 디바이스 의 하위 시스템들 간의 오케스트레이션(orchestration) 및 이들을 구성하는 것을 구현할 수 있다. 이는 확장 디바이스 자체를 구성하는 것, 프로세스 상태 모델로부터의 데이터를 데이터 프로세싱 컴포넌트에서 실행 중인 애플리케이션으로 라우팅하는 것을 포함하지만, 이에 제한되지 않는다. 애플리케이션을 시작, 중지 및 로딩하 는 것은 물론 자동화 디바이스와 확장 디바이스 간의 통신 프로토콜을 구현하는 것. 제어 유닛은 또한 주변 디 바이스와 직접 상호작용할 수 있으며, 예를 들면, \"사진 찍기(take picture)\" 커맨드를 연결된 카메라로 송신할 수 있다. 추가 실시예에서, 확장 디바이스는 자동화 디바이스와 확장 디바이스 사이에서 프로세스 상태 모델의 적어도 일 부를 교환하도록 동작하는 통신 인터페이스를 포함한다. 바람직하게는, 통신 인터페이스는 자동화 디바이스와확장 디바이스 사이의 직접 통신을 위한 백플레인 인터페이스로서 설계된다. 프로세스 상태 모델을 통한 통신 은 PROFINET 및 다른 산업용 통신 표준과 같은 다른 통신 기술에도 적용될 수 있다. 공통 리소스, 이 경우에, 프로세스 상태 모델에 대한 액세스를 제어하기 위해 액세스 제어 메커니즘을 적용하는 것이 큰 이점인 것으로 입증되었다. 통상적으로 알려진 액세스 제어 메커니즘에 대한 일 예는 하드웨어 기반의 세마포어 또는 유사한 메커니즘을 사용하는 것이다. 추가 실시예에서, 프로세스 상태 모델은 자동화 디바이스의 입력 및/또는 출력의 상태 표현을 포함한다. 이진 입력의 상태 표현은, 예를 들어, 논리 하이에 대해 \"1\" 또는 논리 로우에 대해 \"0\"일 수 있다. 입력이, 예를 들어, 8 비트 분해능을 갖는 DAC인 경우, 상태 표현은 0 내지 255의 범위에 있는 임의의 값일 수 있다. 이들 예는 훨씬 더 복잡한 데이터를 또한 포함할 수 있는 상태 표현의 기본 원리를 보여준다. 프로세스 상태 모델을 사용하는 구현은, 하드웨어 기반 I/O 핸들링이 실제 애플리케이션과 분리되도록, 자동화 디바이스가 모든 사이 클에서 입력을 리드 인하거나 모든 사이클에서 입력을 라이트 아웃(write out)할 필요가 없다는 장점이 있다. 이것은 시스템으로서 함께 작동하는 자동화 디바이스와 확장 디바이스의 프로그래밍을 단순화한다. 본 실시예 및 확장 디바이스가 프로세스 상태 모델을 통해 통신하는 것의 큰 장점은 결과가 자동화 디바이스의 입력 및/또 는 출력처럼 취급될 수 있고 똑같이 간단하고 빠르게 프로세싱될 수 있다는 것이다. 자동화 디바이스와 확장 디바이스 간에 공유되는 프로세스 상태 모델의 일부는 입력 및/또는 출력의 상태 표현들 중 임의의 것을 또한 포함할 수 있다. 추가 실시예에서, 확장 디바이스는 데이터 소스에 대한 연결을 제공하도록 동작하는 주변기기 연결 시스템을 포 함한다. 데이터 소스는 바람직하게는 확장 디바이스에 직접 연결된다. 이러한 바람직한 실시예에서, 확장 디 바이스는, 카메라, 센서 및/또는 추가 데이터 소스와 같은, 주변 디바이스에 대한 직접 연결을 위한 능력을 제 공한다. 이것은 고 데이터 레이트 장비가 사용될 때 매우 유리하다. 예를 들어, 고속 카메라를 갖는 산업용 기기의 품질 보증을 위한 컴퓨터 비전은 산업용 시스템에서 유용하기 위해 일반적으로 적절한 속도로 프로세싱 될 필요가 있는 대량의 데이터를 생성한다. 확장 디바이스가 그러한 고속 및/또는 고 대역폭 데이터 소스에 직 접 연결할 수 있는 특수 프로세싱 유닛 및 주변기기 연결 시스템을 제공하는 경우, 실제 자동화 디바이스는 해 당 데이터 소스로부터의 불필요한 데이터 로드로 인해 스트레스를 받을 필요가 없다. 주변기기 연결 시스템은 USB 3.0 또는 3.1 인터페이스로서 제공될 수 있지만 이에 제한되지 않는다. 이더넷(예를 들면, GigE Vision) 또는 광섬유 연결과 같은 추가 인터페이스가 가능하다. 이 문제는 또한 확장 디바이스를 구성하도록 동작하는 엔지니어링 시스템에 의해 해결된다. 엔지니어링 시스템 은 자동화 디바이스 및 또한 확장 디바이스를 프로그래밍 및/또는 구성하는 시스템이다. 엔지니어링 시스템은 산업용 시스템 전체를 설계할 수 있는 가능성을 추가로 제공한다. 잘 알려진 엔지니어링 시스템은 SIEMENS TIA Portal(Totally Integrated Automation Portal)이다. 이 문제는 또한 본 발명에 따른 하나 이상의 자동화 디바이스 및 하나 이상의 확장 디바이스를 포함하는 시스템 에 의해 해결된다. 자동화 디바이스들 중 적어도 하나는 확장 디바이스들 중 하나 이상에 의해 수행되는 하나 이상의 컴퓨테이션의 하나 이상의 결과에 따라 산업용 시스템을 모니터링 및/또는 제어하도록 동작한다. 하나 이상의 결과는 프로세스 상태 모델을 통해 컨트롤러에 제공된다. 이 문제는 또한 본 발명에 따른 하나 이상의 확장 디바이스에 의해 수행되는 하나 이상의 컴퓨테이션의 하나 이 상의 결과에 기초하여 산업용 시스템을 제어하도록 동작하는 자동화 디바이스에 의해 해결된다. 하나 이상의 결과는 프로세스 상태 모델을 통해 컨트롤러에 제공된다. 이 문제는 추가로 산업용 시스템에서의 컴퓨테이션의 결과를 제공하기 위한 방법에 의해 해결된다. 이 단계들 은: 하나 이상의 컴퓨테이션의 하나 이상의 결과를 획득하는 단계 및 하나 이상의 결과를 프로세스 상태 모델을 통해 제공하는 단계를 포함한다. 획득하는 단계는 바람직하게는 본 발명에 따른 확장 디바이스에 의해 수행된 다. 결과는 산업용 시스템의 하나 이상의 상태를 나타내며, 산업용 시스템을 모니터링 및/또는 제어하기 위해 자동화 디바이스와 공유될 수 있다. 이상에서 정의된 양태와 실시예 및 본 발명의 추가 양태와 실시예가 이후부터 설명될 예에 나와 있고 도면을 참 조하여 설명되지만, 본 발명이 이들로 제한되지 않는다."}
{"patent_id": "10-2021-7019255", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은 산업용 시스템 내의 부착된 확장 디바이스(MI)를 갖는 자동화 디바이스(DEV)를 포함하는 시스템 을 도시한다. 자동화 디바이스(DEV)는, 예를 들어, PLC일 수 있다. 확장 디바이스(MI) 및 자동화 디바이 스(DEV)는 레일 기반 마운팅 시스템에, 예를 들면, 서로 바로 옆에 또는 적어도 동일한 백플레인 통신에 마운팅 될 수 있다. 확장 디바이스(MI)가 자동화 디바이스(DEV)에 플러그인되기 위한 플러그인 솔루션이 가능하지만 도시되어 있지 않다. 확장 디바이스(MI)에는 산업용 등급 강건 설계(industrial ruggedization)가 유리하다. 산업용 시스템은 산업용 시스템 내의 추가 컴포넌트들을 단지 예시적으로 나타내는 센서(S) 및 액터 (A)를 추가로 포함한다. 산업용 시스템은 대부분의 사용 사례에서 도시된 바와 같이 훨씬 더 복잡할 것이다. 센서(S)와 액터(A)는, 예를 들면, PROFINET, PROFIBUS 등과 같은 산업용 버스 시스템이고 추가 I/O 모듈, 센서, 액터, HMI 디바이스,....에 연결될 수 있는, 산업용 버스(PN)를 통해 자동화 디바이스(DEV)에 연결된다. 자동화 디바이스(DEV)와 확장 디바이스(MI)는, 양 디바이스(MI, DEV)에 걸쳐 확장되는 파선으로 표시되는, 통신 링크(COM)를 통해 연결된다. 통신 링크(COM)는 2개의 디바이스(DEV, MI) 간에 프로세스 상태 모델(PM)을 공유 하는 것을 가능하게 한다. 통신 링크(COM)는 디바이스들(DEV, MI) 각각의 백플레인 통신 ASIC에 의해 제공되는 백플레인 통신일 수 있다. 그러한 ASIC은 통상적으로 산업용 응용에서 알려져 있다. 프로세스 상태 모델(PM)은 산업용 시스템의 임의의 상태를 나타낼 수 있는 상태(S1,...,Sn)를 보여준다. 이것 은 자동화 디바이스(DEV)의 I/O 또는 디바이스(DEV) 자체의 상태(S1,...,Sn), 산업용 시스템의 디바이스의 상태(S1,...,Sn), 산업용 시스템에서 생산된 상품의 상태(S1,...,Sn), 상품의 품질 보증의 상태 (S1,...,Sn), 머신 및 툴과 같은, 산업용 시스템에서 사용되는 장비의 건강 상태의 상태(S1,...,Sn)를 포함하지 만, 이에 제한되지 않는다. 상태(S1,...,Sn)는 산업용 시스템을 제어 및/또는 모니터링하기 위해 자동화 디바이스에 의해 사용될 수 있다. 결과(R1,...,Rn)는 바람직하게는 하나 이상의 인공 신경 네트워크를 컴퓨팅 하는 것에 의해 획득된다. 일 예에서, 센서(S)와 액터(A)는 각각 그 자신의 상태(온, 오프, 온도, ...)를 나타내는 상태(S1,...,Sn)를 제 공할 수 있다. 이러한 상태(S1,...,Sn)는 자동화 디바이스(DEV)에 제공될 수 있고/있거나 자동화 디바이스 (DEV) 자체에 의해 폴링 또는 결정될 수 있다. 확장 디바이스(MI)는 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1,...,Rn)를 획득(S2)할 가능성 을 제공한다. 확장 디바이스(MI)는 프로세스 상태 모델(PM)을 통해 하나 이상의 결과(R1,...,Rn)를 추가로 제 공(S3)한다. 추가 실시예에서, 확장 디바이스(MI)는 결과(R1,...,Rn)를 사용하여 특정 상태(S1,...,Sn)를 직접 업데이트할 수 있다. 임의로, 파선이 나타내는 바와 같이, 상태(S1,...,Sn) 중 적어도 하나에 기초하여 컴퓨테 이션(C1,...,Cn)을 수행하기 위해 상태(S1,...,Sn)를 획득(S11)하는 단계가 도시되어 있다. 통신 링크(COM)는 바람직하게는 데이터 미스매치, 예를 들면, 상태 S1이 확장 디바이스(MI)에서 현재 이용 가능 한 프로세스 상태 모델(PM)과 비교하여 자동화 디바이스(DEV)에서 현재 이용 가능한 프로세스 상태 모델(PM) 내 에서 상이한 값을 갖는 것을 방지하기 위해 프로세스 상태 모델(PM)에 대한 액세스를 제어하는 액세스 제어 메 커니즘을 지원한다. 공통 리소스에 대한 그러한 액세스 제어 메커니즘의 일 예는 세마포어를 사용하는 것이다. 일 예에서, 액터(A)는 모터일 수 있고 센서(S)는 모터의 외부에 연결된 온도 센서일 수 있다. 이어서 자동화 디바이스(DEV)는 센서 값을 온도 상태로서 리드 인할 수 있고 이를 프로세스 상태 모델(PM)을 통해 확장 디바이 스(MI)에 제공할 수 있다. 이어서 확장 디바이스(MI) 내의 트레이닝된 신경 네트워크는 예측된 상태 (S1,...,Sn)를 나타내는 결과(R1,...,Rn)를 제공할 수 있다. 이 예에서, 이러한 결과는 모터의 건강 상태, 모 터의 상이한 위치에서의 온도, 모터의 부하 지시자일 수 있다. 결과(R1,...,Rn)는 바람직하게는 확장 디바이스 (MI) 내의 인공 신경 네트워크 등에 의해 컴퓨팅된다. 도 2는 동일한 요소를 참조할 때 동일한 참조 부호를 사용하면서 도 1의 시스템과 유사한 시스템을 도시한 다. 확장 디바이스(MI)는 - 개략적으로 표시된 바와 같이 - 주변기기 인터페이스(PI)를 통해 데이터 소스(DS) 에 직접 연결된다. 데이터 소스(DS)로부터의 데이터에 적어도 부분적으로 기초하여 컴퓨테이션(C1,...,Cn)을 수행하기 위해 데이터 소스(DS)로부터 데이터를 획득(S12)하는 단계가 확장 디바이스(MI)에 의해 수행될 수 있 다. 주변기기 인터페이스(PI)는 또한 컴퓨테이션(C1,...,Cn)에 연결되며, 이는 데이터 소스(DS)의 데이터가 (사전 프로세싱 없이 직접 또는 어떤 형태의 사전 프로세싱을 적용하는 동안 간접적으로) 컴퓨테이션 (C1,...,Cn)에 피드될 수 있음을 나타낸다. 프로세스 상태 모델(PM)을 통해 제공되는 상태(S1,...,Sn)로부터 컴퓨테이션(C1,...,Cn)으로의 파선(S11)은 상태(S1,...,Sn)가 컴퓨테이션(C1,...,Cn)에서 직접 또는 간접적으로 사용될 수 있음을 나타낸다. 이것은 도 1에도 도시되어 있었다. 상태(S1,...,Sn)는 또한 하나 이상의 컴퓨테 이션(C1,...,Cn)의 실행을 트리거하는 데 또는 확장 디바이스(MI)에서 이용 가능한 상이한 컴퓨테이션들 (C1,...,Cn)(예를 들면, 상이한 사전 트레이닝된 신경 네트워크들) 간에 전환하는 데 사용될 수 있다. 본 발명의 한 가지 장점은 도 1의 실시예와 도 2의 실시예가 임의의 방식으로 조합 가능하다는 것이다. 예를 들어, 산업용 버스(PN)를 통해 연결된 센서(S)와 액터(A)가 고속 데이터 소스(DS)로부터의 데이터에 기초한 컴 퓨테이션(C1,...,Cn)을 위해 또는 그에 사용될 수 있다는 것이다. 이는 산업용 응용에 종종 필요한 레벨의 유 연성을 보장한다. 도 3은 자동화 디바이스(DEV) 및 확장 디바이스(MI)를 포함하는 시스템의 더 상세한 뷰를 도시한다. 자동화 디 바이스(DEV)는 통신 링크(COM)를 통해 확장 디바이스(MI)의 통신 인터페이스(CI)에 연결되는 통신 인터페이스 (CI)를 포함한다. 도 1 및 도 2로부터 알려진 바와 같이, 통신 링크(COM)는 프로세스 상태 모델(PM)이 확장 디 바이스(MI)와 자동화 디바이스(DEV) 간에 공유될 수 있게 한다. 확장 디바이스(MI)는, 추가 하위 유닛 및 인터페이스를 포함하는, 프로세서(AICPU)를 포함한다. 제어 유닛(C U)은 통신 인터페이스(CI)에 연결되고, 관리 유닛으로서 역할하여 자동화 디바이스(DEV)에 대한 연결을 관리하 고 프로세스 상태 모델(PM)을 통해 수신된 데이터를 추가로 제공한다. 제어 유닛(CU)은 또한 애플리케이션을 실행하기 위한 실행 환경을 제공할 수 있다. 확장 디바이스(MI)에서 실행되는 애플리케이션은 컴퓨테이션 및 결과가 제공하는 기능을 구현한다. 애플리케이션은 제어 유닛(CU)과 프로세싱 유닛(PU) 둘 모두에서 실행될 수 있으며, 여기서 실제 컴퓨테이션(C1,...,Cn)은 프로세싱 유닛(PU)에서 실행된다. 애플리케이션의 관리 부분이 제어 유닛에서 실행되고 실제 컴퓨테이션 부분이 프로세싱 유닛(PU)에서 실행될 때 유리하다. 프로세싱 유닛(PU)은 에너지 효율적이고 시간 최적화된 방식으로 컴퓨테이션을 수행하기 위한 실제 하드웨어 구 현을 제공한다. 메모리(MEM)는 RAM(바람직하게는 DDR-RAM)과 같은 휘발성 고속 메모리 및, 예를 들면, 도시된 바와 같은 SD 카드(SD)와 같은 비휘발성 메모리를 포함할 수 있다. 다른 비휘발성 메모리 유형이 가능하다. 고속 메모리는 컴퓨테이션을 위한 데이터를 프로세싱 유닛에 직접 제공하는 데 사용될 수 있다. 비휘발성 또는 영구 데이터 저장소는 추가 용도를 가질 수 있다. 그러한 용도는 프로세싱 유닛(PU)을 통해 실행되는 데이터로 부터의 샘플을 저장하는 것, 데이터 프로세싱(컴퓨테이션(C1,...,Cn))을 위해 제어 유닛(CU)을 통해 데이터 및 결과의 흐름을 동적으로 제어하는 애플리케이션을 저장하는 것, 애플리케이션(예를 들면, 트레이닝된 신경 네트 워크)을 위한 데이터를 저장하는 것 및 복사/수정될 저장된 데이터/애플리케이션을 메모리에 직접 또는 백플레 인 버스, USB 또는 이더넷과 같은 통신 기능을 통해 저장하는 것을 제공하는 것일 수 있지만, 이에 제한되지 않 는다. 프로세싱 유닛(PU)(환언하면, 데이터 프로세싱 하위 시스템)은 컴퓨테이션을 실제로 수행하는 애플리케이션을 실행한다. 프로세싱 유닛(PU)은 전형적으로, SIMD 능력을 갖는 벡터 프로세서와 같은, AI 및 신경 컴퓨테이션 을 효율적으로 수행하기 위한 특수 하드웨어, 또는 매트릭스 연산 또는 컨볼루션을 구현하기 위한 전용 하드웨 어, 및 다른 프로그래밍 가능 프로세싱 유닛을 제공한다. 제어 유닛(CU)은 컴퓨테이션을 제어하는 사용자 애플 리케이션의 일부를 실행하는 것에 의해 프로세싱 유닛(PU)을 제어할 수 있다. 제어 유닛(CU)은 주변기기 인터페이스(PI)에 대한 액세스를 제공할 수 있다. 이 실시예에서, 주변기기 인터페 이스(PI)는 2개의 USB 포트 및 이더넷 포트(ETH)를 포함한다. 주변기기 인터페이스(PI)는 컴퓨테이션이 결과를 제공하는 데 사용될 수 있는 데이터를 제공할 수 있는 임의의 종류의 디바이스에 연결하도록 설계될 수 있다. 예를 들어, 다수의 데이터 소스(DS)와의 무선 통신이 가능하며, 개장 솔루션(retrofit solution)에, 예를 들면, 기존의 산업용 플랜트에 특히 유용하다. 프로세싱 유닛(PU), 제어 유닛(CU) 및 메모리(MEM) 사이의 흑색 실선 연결로 표시된 바와 같이, 이들 유닛(또는 하위 유닛) 각각은 직접 또는 제어 유닛(CU)을 통해 상대방에 액세스할 수 있다. 일부 실시예에서, 유닛들(PU, CU, MEM)의 일부만이 상대방에 의해 액세스 가능할 수 있다. 일반 개념은 제어 유닛(CU)이 애플리케이션을 실행하는 동안 기능을 관리하고 애플리케이션에 제공되는 컴퓨테이션(C1,...,Cn)으로 프로세싱 유닛(PU)의 동작을 제어한다는 것이다. 프로세싱 유닛(PU)은 제어 유닛(CU)이 제공하는 데이터를 프로세싱하기 위해 메모리(MEM), 특히 DDR-RAM과 같은 고속 메모리에 액세스할 수 있다. 카메라(CAM)는 주변기기 인터페이스(PI)에 연결된다. 카메라(CAM)로부터의 데이터는 주변기기 인터페이스(PI) 를 통해 제어 유닛(CU)에 제공된다. 카메라는 이더넷(예를 들면, GigE Vision), USB 3.0, 3.1 또는 후속 표준 을 통해 연결될 수 있다. 프로세서(AICPU)는 위의 유닛들 전부를 제공하는 단일 SOC(system on a chip)로서 설계될 수 있다. 프로세서 (AICPU)는 또한 단일 하드웨어 칩으로 그룹화된 하위 유닛들 중 일부 및 독립형 프로세싱 하드웨어로서 제공되 는 다른 것들을 포함하는 프로세싱 보드로서 구축될 수 있다. 상세 예에서, 전형적인 컴퓨테이션(C1,...,Cn)은 다음과 같을 수 있으며, 단일 단계들은 단계들을 교환, 반복 또는 스킵할 가능성이 있는 그들의 일반 실행의 순서로 되어 있다. 1.) 자동화 디바이스(DEV)(예를 들면, PLC)는 프로세스 상태 모델(PM)을 지속적으로 업데이트하고, 확장 디바이 스(MI)로부터 입력을 판독하며 출력을 확장 디바이스(MI)에 기입한다. 이 모든 것이 자동화 디바이스의 하나의 사이클에서 수행될 수 있다. 2.) 자동화 디바이스(DEV)에서의 트리거 이벤트는 (자유롭게 실행되거나, 예를 들면, 주기적 인터럽트/트리거를 통해 정확하게 타이밍 조절될 수 있는) 오거나이제이션 블록(organization block)의 실행의 시작일 수 있다. 오거나이제이션 블록은 때때로 제각기 연속적 태스크 또는 주기적 태스크라고 한다. 3.) 자동화 디바이스(DEV)는 확장 디바이스(MI)에서의 커맨드를 트리거한다. 이것은 프로세스 상태 모델(PM)에 플래그를 설정하는 것에 의해 수행될 수 있다. 4.) 임의로 및/또는 추가적으로, 데이터 레코드들이 자동화 디바이스(DEV)로부터 확장 디바이스(MI)로 병렬로 송신될 수 있다. 데이터 레코드는 자동화 디바이스에서 통상적으로 사용되는 직접 데이터 전송의 한 형태이다. 5.) 확장 디바이스(MI)에서 트리거가 프로세싱될 때, 제어 유닛(CU)은 확장 디바이스(MI)에 의해 프로세싱될 애 플리케이션에서의 함수를 호출하고 있다. a. 임의로 카메라(CAM)와 같은 외부 데이터 소스(DS)로부터의 추가 데이터의 수집은 주변기기 인터페이스(PI) 를 사용하여 수행될 수 있다. 확장 디바이스(MI)는 이미지가 캡처되었고 이제 - 예를 들면, 프로세싱 유닛(P U)에 의한 - 추가 프로세싱을 위해 이용 가능하다는 지시자를 프로세스 상태 모델(PM)을 통해 제공할 수 있다. 지시자는 상태(S1,...,Sn)일 수 있다. b. 추가 단계에서, 수집된 데이터는 데이터 프로세싱 요구에 따라 사전 프로세싱되고, 이것은, 예를 들어, 일 정 레벨의 콘트라스트 및/또는 밝기가 달성되도록 하나 이상의 이미지를 정규화하는 것 또는 하나 이상의 이미 지를 추가 프로세싱에 적합한 해상도로 스케일링하는 것일 수 있다. 필요하지 않은 데이터를 제거하기 위해 또 는 추가의 사전 프로세싱을 위한 데이터를 선택하기 위해 데이터에 로직이 적용될 수 있다. c. 그 후에, 모든 데이터(예를 들면, 프로세스 상태 모델(PM)을 통해 획득된 자동화 디바이스(DEV)로부터의 상 태(S1,...,Sn), 데이터 소스(DS), 액터(A) 및/또는 센서(S)로부터의 값)는 데이터 프로세싱 애플리케이션이 예 상하는 것과 같은 형태, 예를 들면, 프로세싱 유닛(PU)에 의해 신경 네트워크에 의해 프로세싱될 텐서/벡터로 압축된다. d. 다음 단계는 프로세싱 유닛(PU)에 의해 애플리케이션의 데이터 프로세싱 부분에 의해 규정된 하나 이상의 수학 함수를 실행하는 것이다. e. 사후 프로세싱 단계에서, 하나 이상의 수학 함수의 하나 이상의 결과가 집계되고 자동화 디바이스(DEV)로 반환될 준비가 된다. f. 모든 함수가 적용된 후에, 하나 이상의 결과(R1,...,Rn)가 수집되고 제어 유닛(CU)에 통지된다. 6.) 이어서, 제어 유닛(CU)은 프로세스 상태 모델(PM)을 통해 프로세싱의 결과를 자동화 디바이스(DEV)에 제공 한다. 7.) 하나 이상의 결과는 산업용 시스템을 모니터링 및/또는 제어하기 위해 자동화 디바이스(DEV)에서 프로세싱 된다. 컴퓨테이션이 여러 사이클 걸릴 수 있으므로, 새로운 결과의 이용 가능성은 프로세스 상태 모델(PM)에서의 상태 비트(status bit)(예를 들면, 이진 상태)에 의해 표시될 수 있다. 도 4는 연결 모듈(CM)과 연결된 확장 디바이스(MI)를 포함하는 시스템의 다른 실시예를 도시한다. 연결 모듈 (CM)은 버스 인터페이스(PNI)를 통해 산업용 버스 시스템(PN)에 대한 연결을 제공한다. 산업용 버스 시스템 (PN)은 자동화 디바이스(DEV)에 대한 연결을 제공한다. 연결 모듈(CM)은 확장 디바이스(MI)의 통신 인터페이스 (CI)에 연결된 통신 인터페이스(CI)를 포함한다. 통신 인터페이스(CI)는 이전 실시예들로부터 알려진 통신 링 크(COM)를 제공한다. 프로세스 상태 모델(PM)은 산업용 버스 시스템(PN) 및 연결 모듈(CM)을 통해 자동화 디바 이스(DEV)로부터 확장 디바이스(MI)로 확장된다. 연결 모듈(CM)은 도 1, 도 2 및/또는 도 3으로부터의 실시예 들 전부가 도 4에 도시된 것에 적용될 수 있도록 한다. 추가 실시예에서, 연결 모듈(CM)은 확장 디바이스(MI) 의 일부(예컨대, 플러그인 모듈)일 수 있다. 도 5는 다수의 확장 디바이스(MI)를 갖는 단일 자동화 디바이스(DEV)를 도시한다. 이전 실시예들로부터 알려진 프로세스 상태 모델(PM)은 모든 디바이스(DEV, MI)에 걸쳐 확장된다. 이것은 상이한 목적을 위한 다수의 신경 네트워크(예를 들면, 카메라 품질 검사를 위한 것 및 산업용 시스템의 일반 건강 상태를 위한 것)가 컴퓨팅될 필요가 있고/있거나 더 많은 프로세싱 능력이 필요할 때 유용할 수 있다. 또한 대규모 신경 네트워크가 다수의 확장 디바이스(MI) 간에 분산될 수 있다. 이것은 본 발명에 따른 프로세스 상태 모델(PM)을 통한 통신이 가능 하게 하는 유연성을 보여준다. 도 6은 확장 디바이스(MI)에 적용 가능한 방법의 실시예에 대한 예의 플로차트를 도시한다. 본 발명의 범위를 벗어나지 않으면서, 제공된 순서가 준수되거나 변경될 수 있다. 일부 단계(S11, S12, S2, S3)는 스킵되거나 두 번 이상 실행될 수 있다. 제1 단계는 상태(S1,...,Sn) 중 적어도 하나에 기초하여 컴퓨테이션(C1,...,Cn)을 수행하기 위해 상태 (S1,...,Sn)를 획득하는 단계(S11)를 포함한다. 제2 단계는 컴퓨테이션(C1,...,Cn)을 수행하기 위해 데이터 소 스(DS)로부터 데이터를 획득하는 단계(S12)를 포함한다. 컴퓨테이션(C1,...,Cn)은 데이터 소스(DS)로부터의 데 이터에 적어도 부분적으로 기초하고 확장 디바이스(MI)에 의해 수행될 수 있다. 획득하는 단계(S11 및 S12)는 임의적이고 여러 번 수행될 수 있다. 제3 단계는, 확장 디바이스(MI)에 의해, 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1,...,Rn)를 획득하는 단계(S2)를 포함한다. 결과(R1,...,Rn)는 산업용 시스템의 하나 이상의 상태(S1,...,Sn)를 나타 낸다. 제4 단계는 산업용 시스템을 모니터링 및/또는 제어하기 위해 자동화 디바이스(DEV)와 공유되는 프로세스 상태 모델(PM)을 통해 하나 이상의 결과(R1,...,Rn)를 제공하는 단계(S3)를 포함한다. 본 발명은 산업용 시스템에서의 하나 이상의 자동화 디바이스(DEV)를 위한 확장 디바이스(MI)에 관한 것이다. 본 발명은 특히 하나 이상의 인공 신경 네트워크에 기초하여 데이터 프로세싱을 수행할 수 있는 산업용 데 이터 프로세싱 유닛(PU)에 관한 것이다. 산업용 시스템에서 하나 이상의 컴퓨테이션(C1,...,Cn)을 가능하 게 하고/하거나 가속화하여, 이에 의해 인공 지능을 산업용 시스템에 통합시키는 것을 단순화하고, 인공 지능을 사용하여 데이터를 프로세싱할 수 있는 확장 디바이스(MI)와 자동화 디바이스(DEV) 간의 데이터 교환을 단순화하기 위해, 본 발명은 하나 이상의 컴퓨테이션(C1,...,Cn)의 하나 이상의 결과(R1,...,Rn)를 획득(S2)하 는 것 - 결과(R1,...,Rn)는 산업용 시스템의 하나 이상의 상태(S1,...,Sn)를 나타냄 -, 및 산업용 시스템 을 모니터링 및/또는 제어하기 위해 자동화 디바이스(DEV)와 공유되는 프로세스 상태 모델(PM)을 통해 하 나 이상의 결과(R1,...,Rn)를 제공(S3)하는 것을 제안한다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2021-7019255", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 산업용 시스템에서의 확장 디바이스를 갖는 자동화 디바이스이다. 도 2는 확장 디바이스와 데이터 소스를 갖는 자동화 디바이스이다. 도 3은 더 상세한 확장 디바이스를 갖는 자동화 디바이스이다. 도 4는 연결 모듈을 갖는 확장 디바이스이다. 도 5는 다수의 확장 디바이스를 갖는 자동화 디바이스이다. 도 6은 본 발명에 따른 방법의 플로차트이다."}
