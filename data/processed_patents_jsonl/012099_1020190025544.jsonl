{"patent_id": "10-2019-0025544", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0107058", "출원번호": "10-2019-0025544", "발명의 명칭": "복수 개의 엔드 포인트가 포함된 플랜들을 처리하는 방법 및 그 방법을 적용한 전자 장치", "출원인": "삼성전자주식회사", "발명자": "제갈호준"}}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에 있어서, 상기 복수 개의 엔드 포인트는 사용자 단말 및/또는 지능형 서버인 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 액션들이 갖는 상기 엔드 포인트에 따라 상기 액션들의 저장 위치가 설정되는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서, 상기 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인 경우, 동일한 엔드 포인트를 갖는 액션들을 모아서하나의 서브 플랜을 생성하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서,상기 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적이지 않은 경우 상기 서로 다른 엔드 포인트를 갖는상기 액션들을 의존성(dependency)에 따라 설정된 순서대로 처리하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서,상기 플랜에 포함된 복수의 액션들을 상기 엔드 포인트에 따라 구분하고, 상기 서로 다른 엔드 포인트를 갖는상기 액션들 사이에 의존성이 없다고 판단되는 경우 서로 다른 엔드 포인트를 갖는 상기 액션들을 분리하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,상기 복수의 서브 플랜들 중 제1 서브 플랜에 포함된 상기 액션들을 처리하여 제1 결과를 생성하고, 상기 복수의 서브 플랜들 중 제2 서브 플랜에 포함된 상기 액션들을 처리하고 상기 제1 결과를 반영하여 목표(goal) 액션을 생성하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서, 상기 복수의 서브 플랜들 중 제2 서브 플랜에 포함된 상기 액션들을 처리하여 제2 결과를생성하고, 상기 제1 결과 및 상기 제2 결과를 병합(merge)하여 상기 목표 액션을 생성하는 방법.공개특허 10-2020-0107058-3-청구항 8"}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 1에 있어서,복수의 가전 기기들과 연결된 입력 장치에서 사용자의 발화를 입력받는 동작;상기 복수의 가전 기기들이 해당하는 동작을 수행하도록 상기 플랜을 수립하는 동작; 및상기 플랜에 포함된 액션을 상기 엔드 포인트에 따라 나누어 복수의 서브 플랜들을 재생성하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "에 있어서,상기 클라이언트 모듈은,상기 서로 다른 엔드 포인트를 갖는 상기 액션들이 의존성이 있는 경우 서로 같은 엔드 포인트를 갖는 액션들이먼저 처리되도록 순서를 조정한 서브 플랜을 전달받는 전자 장치."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 10에 있어서, 상기 클라이언트 모듈은,상기 지능형 서버로부터 상기 제1 서브 플랜을 처리하여 생성한 제1 결과를 전달받는 전자 장치."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서,상기 클라이언트 모듈은,상기 제1 서브 플랜 및/또는 상기 제1 결과를 상기 실행 엔진으로 전달하고,상기 실행 엔진은 상기 제1 서브 플랜을 처리하고 상기 제1 결과를 반영하여 목표 액션을 생성하는 전자 장치."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 12에 있어서,상기 실행 엔진은,상기 제2 서브 플랜을 처리하여 제2 결과를 생성하는 평행 처리(parallel processing) 모듈; 및상기 제1 결과 및 상기 제2 결과를 병합하여 상기 목표 액션을 생성하는 결과 결합(result merging) 모듈을 포함하는 전자 장치.공개특허 10-2020-0107058-4-청구항 14"}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "복수 개의 엔드 포인트가 포함된 플랜들을 처리하는 방법에 있어서,상기 플랜들이 연결 순서를 설정한 액션들의 엔드 포인트가 복수 개인지 여부를 확인하는 동작;서로 다른 엔드 포인트를 갖는 상기 액션들 사이에 의존성이 있는 경우 목표 액션의 엔드 포인트를 확인하는 동작;상기 목표 액션의 엔드 포인트를 제외한 엔드 포인트에 속하는 액션들을 수행하여 상기 의도를 실행하기 위한상기 액션들의실행 순서를 수립 및/또는 설정하는 플랜을 축소하며 업데이트하는 동작;상기 업데이트된 플랜을 상기 목표 액션을 수행하는 엔드 포인트로 전달하는 동작; 및상기 목표 액션을 수행하는 엔드 포인트에 속하는 액션들을 수행하고 상기 목표 액션을 수행하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 15에 있어서,상기 목표 액션의 엔드 포인트와 다른 엔드 포인트를 갖는 액션들을 먼저 수행하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 15에 있어서,상기 목표 액션의 엔드 포인트를 제외한 엔드 포인트에 속하는 액션들을 수행하여 제1 결과를 생성하고,상기 제1 결과에 기반하여 상기 목표 액션을 수행하는 엔드 포인트에 속하는 액션들을 수행하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 17에 있어서,상기 목표 액션을 수행하는 엔드 포인트에 속하는 액션들을 수행하여 제2 결과를 생성하고,상기 제2 결과에 상기 제1 결과를 결합하여 상기 목표 액션을 생성하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 15에 있어서,상기 플랜은 복수 개의 컨셉 또는 액션들의 처리 순서 및/또는 처리 방법을 설정하는 방법."}
{"patent_id": "10-2019-0025544", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 15에 있어서,상기 목표 액션을 수행하는 동작은 상기 목표 액션의 성공 및/또는 실패 여부를 포함한 결과를 전송하는 동작을포함하는 방법."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "사용자 발화(utterance)에 대응하는 의도(intent)를 획득하는 동작, 상기 의도를 실행하기 위한 액션(action)들 의 연결 순서를 설정하는 상기 플랜들을 생성하는 동작, 상기 액션들의 엔드 포인트가 복수 개인지 여부를 확인 하는 동작, 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인지 여부를 판단하는 동작, 및 상기 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인 경우 같은 엔드 포인트를 갖는 액션들끼리 결합하여 복수 개의 서브 (sub) 플랜들을 재생성한 후 상기 복수 개의 서브 플랜들을 병렬적으로 처리하는 동작을 포함하는 복수 개의 엔 드 포인트(end point)가 포함된 플랜(plan)들을 처리하는 방법이 개시된다. 이 외에도 명세서를 통해 파악되는 다양한 실시 예가 가능하다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에서 개시되는 실시 예들은, 복수 개의 엔드 포인트(end point)를 갖는 플랜(Plan)들을 액션(action) 처 리하는 방법 및 그 방법을 적용한 전자 장치에 관련된다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치는 음성 인식 서비스, 음성 인식 인터페이스로 사용자에게 음성을 입력 받아 사용자 의도에 기반한 다 양한 컨텐츠 서비스를 제공하거나, 전자 장치에 포함된 다양한 기능들을 수행할 수 있다. 전자 장치는 입력된 음성에 대응하여 동작하기 위해 사용자의 발화(utterance)와 같은 음성을 인식하고, 인식된 음성을 지능형 서버 (intelligence server)로 송신한다. 예를 들어, 지능형 서버는 인식된 음성의 내용을 분석하여 의도(intent)를 파악하고, 의도에 대응하는 동작들을 수행하기 위한 플랜(plan)을 수립할 수 있다. 예를 들어 플랜(Plan)은 의 도를 수행 또는 저장하는 위치 정보 및 동작 내용을 포함 할 수 있다. 또한 플랜(plan) 에서는 위 정보를 딥 링 크(deep link)를 이용하여 수행해야 하는 장치에 전달 할 수 있다. 플랜은 의도에 대응하는 동작들을 수행하기 위하여 캡슐(capsule)의 정보를 포함 할 수 있다. 또한 플랜은 캡 슐 내부의 컨셉 및/또는 액션들의 연결 순서를 설정하고, 캡슐에 저장된 컨셉 및/또는 액션의 실행 순서를 지정 할 수 있다. 플랜에 따라 캡슐에 저장된 컨셉 및/또는 액션이 실행되고, 다음 캡슐에 저장된 컨셉 및/또는 액션 은 이전 액션의 결과에 적어도 일부 기반하여 수행될 수 있다. 플랜(Plan)은 딥 링크를 포함 할 수 있다. 딥 링크는 의도에 대응하는 동작을 수행하는 명령과 위치를 포함하는 URL(uniform resource locator) 형태일 수 있다. 명령은 전자 장치의 메모리에 저장될 수도 있고 지능형 서버 에 저장될 수도 있다. 메모리에 저장된 명령을 실행하는 경우 음성 서버에서 의도를 추출한 후 전자 장치로 전 송하고 전자 장치에서 의도를 수행하기 위해 필요한 액션(action)들을 수행한다. 지능형 서버에 있는 명령을 실 행하는 경우 음성 서버에서 의도를 추출한 후 지능형 서버로 전송하고 지능형 서버에서 액션(action)들을 수행 한 후 액션을 수행한 결과를 전자 장치에 전달한다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "플랜에 따른 캡슐들이 수행하는 컨셉들 및 액션들의 최종 실행 위치 또는 명령들의 저장 위치는 액션의 엔드 포 인트(end point)에 따라 설정될 수 있다. 어느 하나의 액션이 전자 장치 내부에 저장된 정보를 이용하여 전자 장치에서 실행되는 경우 해당 액션의 엔드 포인트는 전자 장치이고, 다른 액션이 지능형 서버에 저장된 정보를 이용하여 지능형 서버에서 실행되는 경우 해당 액션의 엔드 포인트는 지능형 서버일 수 있다. 전자 장치 내부에 저장된 정보 및 지능형 서버에 저장된 정보를 모두 이용하고 전자 장치 및 지능형 서버 각각에서 해당되는 액션 들이 실행되는 플랜을 수립하는 경우 해당 플랜은 복수 개의 엔드 포인트를 가질 수 있다. 복수 개의 엔드 포인트를 가지는 플랜을 처리할 때 플랜에 설정된 순서대로 캡슐에 저장된 액션을 실행하고 다 음 캡슐에 저장된 액션을 실행하는 경우 전자 장치 또는 지능형 서버 중 어느 하나에서만 액션을 수행하고 다른 쪽에서는 액션을 수행하지 않고 대기하는 상태가 지속적으로 발생하여 지연(latency)이 발생할 수 있다. 또한, 서로 다른 엔드 포인트를 갖는 명령을 처리하는 경우 전자 장치 및 지능형 서버 사이에서 빈번하게 상호 작용(interaction)을 하게 되어 지연이 발생할 수 있다. 본 문서에서 개시되는 실시 예들은, 복수 개의 엔드 포인트를 갖는 플랜에서 실행하도록 순서가 설정된 액션들 및/또는 서로 다른 엔드 포인트를 갖는 명령에 의해 실행되는 액션들을 엔드 포인트 별로 처리하여 지연을 감소 시킬 수 있는 방법을 제공하고자 한다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 문서에 개시되는 일 실시 예에 따른 복수 개의 엔드 포인트(end point)가 포함된 플랜(plan)들을 처리하는 방법은, 사용자 발화(utterance)에 대응하는 의도(intent)를 획득하는 동작, 상기 의도를 실행하기 위한 액션 (action)들의 연결 순서를 설정하는 상기 플랜들을 생성하는 동작, 상기 액션들의 엔드 포인트가 복수 개인지 여부를 확인하는 동작, 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인지 여부를 판단하는 동작, 및 상 기 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인 경우 같은 엔드 포인트를 갖는 액션들끼리 결합하여 복수 개의 서브(sub) 플랜들을 재생성한 후 상기 복수 개의 서브 플랜들을 병렬적으로 처리하는 동작을 포함할 수 있다.또한, 본 문서에 개시되는 일 실시 예에 따른 복수 개의 엔드 포인트가 포함된 플랜들을 처리하는 방법을 적용 한 전자 장치는, 지능형 서버(intelligence server)와 작동적으로 연결된(operationally connected) 클라이언 트(client) 모듈, 및 상기 클라이언트 모듈과 작동적으로 연결된 실행 엔진(execution engine)을 포함하고, 상 기 클라이언트 모듈은, 사용자 발화를 입력 받아 상기 지능형 서버로 전달하고, 상기 플랜들을 이용하여 캡슐 (capsule)에 저장된 컨셉(concept)들 및/또는 액션(action)들의 연결 순서를 설정하고, 상기 지능형 서버로부터 상기 액션들 중 상기 전자 장치를 엔드 포인트로 하는 제1 액션들을 이용하여 생성된 제1 서브 플랜을 전달받고, 상기 액션들 중 상기 지능형 서버를 상기 엔드 포인트로 하는 제2 액션들을 이용하여 제2 서브 플랜 을 생성하고, 상기 서로 다른 엔드 포인트를 갖는 상기 액션들이 독립적인 경우 상기 제1 서브 플랜 및 상기 제 2 서브 플랜을 병렬적으로 처리하도록 설정될 수 있다. 또한, 본 문서에 개시되는 일 실시 예에 따른 복수 개의 엔드 포인트가 포함된 플랜들을 처리하는 방법은, 상기 플랜들이 연결 순서를 설정한 액션들의 엔드 포인트가 복수 개인지 여부를 확인하는 동작, 서로 다른 엔드 포인 트를 갖는 상기 액션들 사이에 의존성이 있는 경우 목표 액션의 엔드 포인트를 확인하는 동작, 상기 목표 액션 의 엔드 포인트를 제외한 엔드 포인트에 속하는 액션들을 수행하여 상기 의도를 실행하기 위한 상기 액션들을 포함하는 캡슐들의 실행 순서를 수립 및/또는 설정하는 플랜을 축소하며 업데이트하는 동작, 상기 업데이트된 플랜을 상기 목표 액션을 수행하는 엔드 포인트로 전달하는 동작, 및 상기 목표 액션을 수행하는 엔드 포인트에 속하는 액션들을 수행하고 상기 목표 액션을 수행하는 동작을 포함할 수 있다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 문서에 개시되는 실시 예들에 따르면, 복수 개의 엔드 포인트를 갖는 플랜에서 실행되도록 연결 순서가 설정 된 액션들을 엔드 포인트 별로 분류한 후 각각의 엔드 포인트에서 서로 다른 액션들을 동시에 처리할 수 있어, 어느 하나의 엔드 포인트에서 순차적으로 액션들을 처리하는 경우 발생하는 지연을 감소시킬 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2019-0025544", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 다양한 실시 예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 발명을 특정한 실시 형 태에 대해 한정하려는 것이 아니며, 본 발명의 실시 예의 다양한 변경(modification), 균등물(equivalent), 및/ 또는 대체물(alternative)을 포함하는 것으로 이해되어야 한다. 도 1은 일 실시예에 따른 통합 지능(integrated intelligence) 시스템을 나타낸 블록도이다. 도 1을 참조하면, 일 실시예의 통합 지능 시스템은 사용자 단말, 지능형 서버, 및 서비스 서버 를 포함할 수 있다. 일 실시 예의 사용자 단말은, 인터넷에 연결 가능한 단말 장치(또는, 전자 장치)일 수 있으며, 예를 들어, 휴대폰, 스마트폰, PDA(personal digital assistant), 노트북 컴퓨터, TV, 백색 가전, 웨어러블 장치, HMD, 또 는 스마트 스피커일 수 있다. 도시된 실시 예에 따르면, 사용자 단말은 통신 인터페이스, 마이크, 스피커, 디스플레이 , 메모리, 또는 프로세서를 포함할 수 있다. 상기 열거된 구성요소들은 서로 작동적으로 또는 전기적으로 연결될 수 있다. 일 실시 예의 통신 인터페이스는 외부 장치와 연결되어 데이터를 송수신하도록 구성될 수 있다. 일 실시 예의 마이크는 소리(예: 사용자 발화)를 수신하여, 전기적 신호로 변환할 수 있다. 일 실시예의스피커 는 전기적 신호를 소리(예: 음성)으로 출력할 수 있다. 일 실시 예의 디스플레이는 이미지 또는 비디 오를 표시하도록 구성될 수 있다. 일 실시 예의 디스플레이는 또한 실행되는 앱(app)(또는, 어플리케이션 프로그램(application program))의 그래픽 사용자 인터페이스(graphic user interface)(GUI)를 표시할 수 있다. 일 실시 예의 메모리는 클라이언트 모듈, SDK(software development kit), 및 복수의 앱들 을 저장할 수 있다. 상기 클라이언트 모듈, 및 SDK는 범용적인 기능을 수행하기 위한 프레임워 크(framework)(또는, 솔루션 프로그램)를 구성할 수 있다. 또한, 클라이언트 모듈 또는 SDK는 음성 입력을 처리하기 위한 프레임워크를 구성할 수 있다. 일 실시 예의 메모리는 상기 복수의 앱들은 지정된 기능을 수행하기 위한 프로그램일 수 있다. 일 실 시 예에 따르면, 복수의 앱은 제1 앱(155_1), 제2 앱(155_3) 을 포함할 수 있다. 일 실시 예에 따르면, 복 수의 앱 각각은 지정된 기능을 수행하기 위한 복수의 동작들을 포함할 수 있다. 예를 들어, 상기 앱들은, 알람 앱, 메시지 앱, 및/또는 스케줄 앱을 포함할 수 있다. 일 실시 예에 따르면, 복수의 앱들은 프로세 서에 의해 실행되어 상기 복수의 동작들 중 적어도 일부를 순차적으로 실행할 수 있다. 일 실시 예의 프로세서는 사용자 단말의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로세서(16 0)는 통신 인터페이스, 마이크, 스피커, 및 디스플레이와 전기적으로 연결되어 연결되어 지정된 동작을 수행할 수 있다. 일 실시 예의 프로세서는 또한 상기 메모리에 저장된 프로그램을 실행시켜 지정된 기능을 수행할 수 있다. 예를 들어, 프로세서는 클라이언트 모듈 또는 SDK 중 적어도 하나를 실행하여, 음성 입 력을 처리하기 위한 이하의 동작을 수행할 수 있다. 프로세서는, 예를 들어, SDK를 통해 복수의 앱 의 동작을 제어할 수 있다. 클라이언트 모듈 또는 SDK의 동작으로 설명된 이하의 동작은 프로 세서의 실행에 의한 동작일 수 있다. 일 실시 예의 클라이언트 모듈은 음성 입력을 수신할 수 있다. 예를 들어, 클라이언트 모듈은 마이크 를 통해 감지된 사용자 발화에 대응되는 음성 신호를 수신할 수 있다. 상기 클라이언트 모듈은 수신 된 음성 입력을 지능형 서버로 송신할 수 있다. 클라이언트 모듈은 수신된 음성 입력과 함께, 사용자 단말의 상태 정보를 지능형 서버로 송신할 수 있다. 상기 상태 정보는, 예를 들어, 앱의 실행 상태정보일 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 음성 입력에 대응되는 결과를 수신할 수 있다. 예를 들어, 클라이 언트 모듈은 지능형 서버에서 상기 수신된 음성 입력에 대응되는 결과를 산출할 수 있는 경우, 수신 된 음성 입력에 대응되는 결과를 수신할 수 있다. 클라이언트 모듈은 상기 수신된 결과를 디스플레이(14 0)에 표시할 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 음성 입력에 대응되는 플랜을 수신할 수 있다. 클라이언트 모듈 은 플랜에 따라 앱의 복수의 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 클라이언트 모듈 은, 예를 들어, 복수의 동작의 실행 결과를 순차적으로 디스플레이에 표시할 수 있다. 사용자 단말은, 다른 예를 들어, 복수의 동작을 실행한 일부 결과(예: 마지막 동작의 결과)만을 디스플레이에 표 시할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 지능형 서버로부터 음성 입력에 대응되는 결과를 산출하기 위해 필요한 정보를 획득하기 위한 요청을 수신할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 상기 요청에 대응하여 상기 필요한 정보를 지능형 서버로 송신할 수 있다. 일 실시 예의 클라이언트 모듈은 플랜에 따라 복수의 동작을 실행한 결과 정보를 지능형 서버로 송신 할 수 있다. 지능형 서버는 상기 결과 정보를 이용하여 수신된 음성 입력이 올바르게 처리된 것을 확인할 수 있다. 일 실시 예의 클라이언트 모듈은 음성 인식 모듈을 포함할 수 있다. 일 실시 예에 따르면, 클라이언트 모 듈은 상기 음성 인식 모듈을 통해 제한된 기능을 수행하는 음성 입력을 인식할 수 있다. 예를 들어, 클라 이언트 모듈은 지정된 입력(예: 웨이크 업!)을 통해 유기적인 동작을 수행하기 위한 음성 입력을 처리하기 위한 지능형 앱을 수행할 수 있다. 일 실시 예의 지능형 서버는 통신 망을 통해 사용자 단말로부터 사용자 음성 입력과 관련된 정보를 수신할 수 있다. 일 실시 예에 따르면, 지능형 서버는 수신된 음성 입력과 관련된 데이터를 텍스트 데이터 (text data)로 변경할 수 있다. 일 실시 예에 따르면, 지능형 서버는 상기 텍스트 데이터에 기초하여 사용 자 음성 입력과 대응되는 태스크(task)를 수행하기 위한 플랜(plan)을 생성할 수 있다 일 실시 예에 따르면, 플랜은 인공 지능(artificial intelligent)(AI) 시스템에 의해 생성될 수 있다. 인공지능 시스템은 룰 베이스 시스템(rule-based system) 일 수도 있고, 신경망 베이스 시스템(neual network-based system)(예: 피드포워드 신경망(feedforward neural network(FNN)), 순환 신경망(recurrent neural network(RNN))) 일 수도 있다. 또는, 전술한 것의 조합 또는 이와 다른 인공지능 시스템일 수도 있다. 일 실시 예에 따르면, 플랜은 미리 정의된 플랜의 집합에서 선택될 수 있거나, 사용자 요청에 응답하여 실시간으로 생성 될 수 있다. 예를 들어, 인공지능 시스템은 미리 정의 된 복수의 플랜 중 적어도 플랜을 선택할 수 있다. 일 실시 예의 지능형 서버는 생성된 플랜에 따른 결과를 사용자 단말로 송신하거나, 생성된 플랜을 사용자 단말로 송신할 수 있다. 일 실시 예에 따르면, 사용자 단말은 플랜에 따른 결과를 디스플레이 에 표시할 수 있다. 일 실시 예에 따르면, 사용자 단말은 플랜에 따른 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 일 실시 예의 지능형 서버는 프론트 엔드(front end), 자연어 플랫폼(natual language platform), 캡슐 데이터베이스(capsule DB), 실행 엔진(execution engine), 엔드 유저 인터페 이스(end user interface), 매니지먼트 플랫폼(management platform), 빅 데이터 플랫폼(big data platform), 또는 분석 플랫폼(analytic platform)을 포함할 수 있다. 일 실시 예의 프론트 엔드는 사용자 단말로부터 수신된 음성 입력을 수신할 수 있다. 프론트 엔드 는 상기 음성 입력에 대응되는 응답을 송신할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼은 자동 음성 인식 모듈(automatic speech recognition module)(ASR module), 자연어 이해 모듈(natural language understanding module)(NLU module), 플래너 모듈 (planner module), 자연어 생성 모듈(natural language generator module)(NLG module)또는 텍스트 음성 변환 모듈(text to speech module)(TTS module)를 포함할 수 있다. 일 실시 예의 자동 음성 인식 모듈은 사용자 단말로부터 수신된 음성 입력을 텍스트 데이터로 변환할 수 있다. 일 실시 예의 자연어 이해 모듈은 음성 입력의 텍스트 데이터를 이용하여 사용자의 의도를 파악할 수 있다. 예를 들어, 자연어 이해 모듈은 문법적 분석(syntactic analyze) 또는 의미적 분석(semantic analyze)을 수행하여 사용자의 의도를 파악할 수 있다. 일 실시 예의 자연어 이해 모듈은 형태소 또는 구 의 언어적 특징(예: 문법적 요소)을 이용하여 음성 입력으로부터 추출된 단어의 의미를 파악하고, 상기 파악된 단어의 의미를 의도에 매칭시켜 사용자의 의도를 결정할 수 있다. 일 실시 예의 플래너 모듈은 자연어 이해 모듈에서 결정된 의도 및 파라미터를 이용하여 플랜을 생성 할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 의도에 기초하여 태스크를 수행하기 위해 필요한 복수의 도메인을 결정할 수 있다. 플래너 모듈은 상기 의도에 기초하여 결정된 복수의 도메인 각각 에 포함된 복수의 동작을 결정할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 복수의 동작 을 실행하는데 필요한 파라미터나, 상기 복수의 동작의 실행에 의해 출력되는 결과 값을 결정할 수 있다. 상기 파라미터, 및 상기 결과 값은 지정된 형식(또는, 클래스)의 컨셉으로 정의될 수 있다. 이에 따라, 플랜은 사용 자의 의도에 의해 결정된 복수의 동작, 및 복수의 컨셉을 포함할 수 있다. 상기 플래너 모듈은 상기 복수 의 동작, 및 상기 복수의 컨셉 사이의 관계를 단계적(또는, 계층적)으로 결정할 수 있다. 예를 들어, 플래너 모 듈은 복수의 컨셉에 기초하여 사용자의 의도에 기초하여 결정된 복수의 동작의 실행 순서를 결정할 수 있 다. 다시 말해, 플래너 모듈은 복수의 동작의 실행에 필요한 파라미터, 및 복수의 동작의 실행에 의해 출 력되는 결과에 기초하여, 복수의 동작의 실행 순서를 결정할 수 있다. 이에 따라, 플래너 모듈는 복수의 동작, 및 복수의 컨셉 사이의 연관 정보(예: 온톨로지(ontology))가 포함된 플랜를 생성할 수 있다. 상기 플래 너 모듈은 컨셉과 동작의 관계들의 집합이 저장된 캡슐 데이터베이스에 저장된 정보를 이용하여 플랜 을 생성할 수 있다. 일 실시 예의 자연어 생성 모듈은 지정된 정보를 텍스트 형태로 변경할 수 있다. 상기 텍스트 형태로 변경 된 정보는 자연어 발화의 형태일 수 있다. 일 실시 예의 텍스트 음성 변환 모듈은 텍스트 형태의 정보를 음성 형태의 정보로 변경할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼의 기능의 일부 기능 또는 전체 기능은 사용자 단말에서도 구현 가능 할 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인에 대응되는 복수의 컨셉과 동작들의 관계에 대한 정보를 저장할 수 있다. 일 실시예에 따른 캡슐은 플랜에 포함된 복수의 동작 오브젝트(action object 또는, 동작 정보) 및 컨 셉 오브젝트(concept object 또는 컨셉 정보)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스(23 0)는 CAN(concept action network)의 형태로 복수의 캡슐을 저장할 수 있다. 일 실시 예에 따르면, 복수의 캡슐 은 캡슐 데이터베이스에 포함된 기능 저장소(function registry)에 저장될 수 있다. 상기 캡슐 데이터베이스는 음성 입력에 대응되는 플랜을 결정할 때 필요한 전략 정보가 저장된 전략 레지 스트리(strategy registry)를 포함할 수 있다. 상기 전략 정보는 음성 입력에 대응되는 복수의 플랜이 있는 경 우, 하나의 플랜을 결정하기 위한 기준 정보를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 지정된 상황에서 사용자에게 후속 동작을 제안하기 위한 후속 동작의 정보가 저장된 후속 동작 레지스트리 (follow up registry)를 포함할 수 있다. 상기 후속 동작은, 예를 들어, 후속 발화를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자 단말을 통해 출력되는 정보의 레이아웃(layout) 정보를 저 장하는 레이아웃 레지스트리(layout registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 캡슐 정보에 포함된 어휘(vocabulary) 정보가 저장된 어휘 레지스트리(vocabulary registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자와의 대화(dialog)(또는, 인터렉션 (interaction)) 정보가 저장된 대화 레지스트리(dialog registry)를 포함할 수 있다. 상기 캡슐 데이터베이스 는 개발자 툴(developer tool)을 통해 저장된 오브젝트를 업데이트(update)할 수 있다. 상기 개발자 툴은, 예를 들어, 동작 오브젝트 또는 컨셉 오브젝트를 업데이트하기 위한 기능 에디터(function editor)를 포함할 수 있다. 상기 개발자 툴은 어휘를 업데이트하기 위한 어휘 에디터(vocabulary editor)를 포함할 수 있다. 상기 개 발자 툴은 플랜을 결정하는 전략을 생성 및 등록 하는 전략 에디터(strategy editor)를 포함할 수 있다. 상기 개발자 툴은 사용자와의 대화를 생성하는 대화 에디터(dialog editor)를 포함할 수 있다. 상기 개발자 툴은 후 속 목표를 활성화하고, 힌트를 제공하는 후속 발화를 편집할 수 있는 후속 동작 에디터(follow up editor)를 포 함할 수 있다. 상기 후속 목표는 현재 설정된 목표, 사용자의 선호도 또는 환경 조건에 기초하여 결정될 수 있 다. 일 실시 예에서는 캡슐 데이터베이스 은 사용자 단말 내에도 구현이 가능할 수 있다. 일 실시 예의 실행 엔진은 상기 생성된 플랜을 이용하여 결과를 산출할 수 있다. 엔드 유저 인터페이스 는 산출된 결과를 사용자 단말로 송신할 수 있다. 이에 따라, 사용자 단말은 상기 결과를 수신하고, 상기 수신된 결과를 사용자에게 제공할 수 있다. 일 실시 예의 매니지먼트 플랫폼은 지능형 서버 에서 이용되는 정보를 관리할 수 있다. 일 실시 예의 빅 데이터 플랫폼은 사용자의 데이터를 수집할 수 있다. 일 실시 예의 분석 플랫폼을 지능형 서버의 QoS(quality of service)를 관리할 수 있다. 예를 들어, 분석 플랫폼은 지능형 서버의 구성 요소 및 처리 속도(또는, 효율성)를 관리할 수 있다. 일 실시 예의 서비스 서버는 사용자 단말에 지정된 서비스(예: 음식 주문 또는 호텔 예약)를 제공할 수 있다. 일 실시 예에 따르면, 서비스 서버는 제3 자에 의해 운영되는 서버일 수 있다. 일 실시 예의 서 비스 서버는 수신된 음성 입력에 대응되는 플랜을 생성하기 위한 정보를 지능형 서버에 제공할 수 있 다. 상기 제공된 정보는 캡슐 데이터베이스에 저장될 수 있다. 또한, 서비스 서버는 플랜에 따른 결 과 정보를 지능형 서버에 제공할 수 있다. 위에 기술된 통합 지능 시스템에서, 상기 사용자 단말은, 사용자 입력에 응답하여 사용자에게 다양한 인텔리전트 서비스를 제공할 수 있다. 상기 사용자 입력은, 예를 들어, 물리적 버튼을 통한 입력, 터치 입력 또는 음성 입력을 포함할 수 있다. 일 실시 예에서, 상기 사용자 단말은 내부에 저장된 지능형 앱(또는, 음성 인식 앱)을 통해 음성 인식 서 비스를 제공할 수 있다. 이 경우, 예를 들어, 사용자 단말은 상기 마이크를 통해 수신된 사용자 발화 (utterance) 또는 음성 입력(voice input)를 인식하고, 인식된 음성 입력에 대응되는 서비스를 사용자에게 제공 할 수 있다. 일 실시 예에서, 사용자 단말은 수신된 음성 입력에 기초하여, 단독으로 또는 상기 지능형 서버 및/또는 서비스 서버와 함께 지정된 동작을 수행할 수 있다. 예를 들어, 사용자 단말은 수신된 음성 입력에 대응되 는 앱을 실행시키고, 실행된 앱을 통해 지정된 동작을 수행할 수 있다. 일 실시 예에서, 사용자 단말이 지능형 서버 및/또는 서비스 서버와 함께 서비스를 제공하는 경우에 는, 상기 사용자 단말은, 상기 마이크를 이용하여 사용자 발화를 감지하고, 상기 감지된 사용자 발화에 대 응되는 신호(또는, 음성 데이터)를 생성할 수 있다. 상기 사용자 단말은, 상기 음성 데이터를 통신 인터페이스 를 이용하여 지능형 서버로 송신할 수 있다. 일 실시 예에 따른 지능형 서버는 사용자 단말로부터 수신된 음성 입력에 대한 응답으로써, 음성 입 력에 대응되는 태스크(task)를 수행하기 위한 플랜, 또는 상기 플랜에 따라 동작을 수행한 결과를 생성할 수 있 다. 상기 플랜은, 예를 들어, 사용자의 음성 입력에 대응되는 태스크(task)를 수행하기 위한 복수의 동작, 및 상기 복수의 동작과 관련된 복수의 컨셉을 포함할 수 있다. 상기 컨셉은 상기 복수의 동작의 실행에 입력되는 파라미터나, 복수의 동작의 실행에 의해 출력되는 결과 값을 정의한 것일 수 있다. 상기 플랜은 복수의 동작, 및 복수의 컨셉 사이의 연관 정보를 포함할 수 있다. 일 실시 예의 사용자 단말은, 통신 인터페이스를 이용하여 상기 응답을 수신할 수 있다. 사용자 단말 은 상기 스피커를 이용하여 사용자 단말 내부에서 생성된 음성 신호를 외부로 출력하거나, 디스 플레이를 이용하여 사용자 단말 내부에서 생성된 이미지를 외부로 출력할 수 있다. 도 2는 다양한 실시 예에 따른, 컨셉과 액션의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 상기 지능형 서버의 캡슐 데이터베이스(예: 캡슐 데이터베이스)는 CAN (concept action network) 형 태로 캡슐을 저장할 수 있다. 상기 캡슐 데이터베이스는 사용자의 음성 입력에 대응되는 태스크를 처리하기 위 한 동작, 및 상기 동작을 위해 필요한 파라미터를 CAN(concept action network) 형태로 저장될 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인(예: 어플리케이션) 각각에 대응되는 복수의 캡슐(capsule(A), capsule(B))을 저장할 수 있다. 일 실시 예에 따르면, 하나의 캡슐(예: capsule(A))은 하나의 도메 인(예: 위치(geo), 어플리케이션)에 대응될 수 있다. 또한, 하나의 캡슐에는 캡슐과 관련된 도메인에 대한 기능 을 수행하기 위한 적어도 하나의 서비스 제공자(예: CP 1 또는 CP 2 )가 대응될 수 있다. 일 실시 예 에 따르면, 하나의 캡슐은 지정된 기능을 수행하기 위한 적어도 하나 이상의 동작 및 적어도 하나 이상의 컨셉을 포함할 수 있다. 상기, 자연어 플랫폼은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 수신된 음성 입력에 대응하는 태스크 를 수행하기 위한 플랜을 생성할 수 있다. 예를 들어, 자연어 플랫폼의 플래너 모듈은 캡슐 데이터베이스 에 저장된 캡슐을 이용하여 플랜을 생성할 수 있다. 예를 들어, 캡슐 A 의 동작들(4011,4013) 과 컨셉들(4012,4014) 및 캡슐 B의 동작 과 컨셉 를 이용하여 플랜을 생성할 수 있다. 도 3은 일 실시예에 따라, 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 표시하는 사용자 단말을 도시 하는 도면이다. 사용자 단말은 지능형 서버를 통해 사용자 입력을 처리하기 위해 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 310 화면에서, 사용자 단말은 지정된 음성 입력(예: 웨이크 업!)를 인식하거나 하드 웨어 키(예: 전용 하드웨어 키)를 통한 입력을 수신하면, 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있 다. 사용자 단말은, 예를 들어, 스케줄 앱을 실행한 상태에서 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 사용자 단말은 지능형 앱에 대응되는 오브젝트(예: 아이콘)를 디스플레이에 표시할 수 있다. 일 실시 예에 따르면, 사용자 단말은 사용자 발화에 의한 음성 입력을 수신할 수 있다. 예를 들어, 사용자 단말은 \"이번주 일정 알려줘!\"라는 음성 입력을 수신할 수 있다. 일 실시 예에 따르면, 사용자 단 말은 수신된 음성 입력의 텍스트 데이터가 표시된 지능형 앱의 UI(user interface)(예: 입력창)를 디 스플레이에 표시할 수 있다. 일 실시 예에 따르면, 320 화면에서, 사용자 단말은 수신된 음성 입력에 대응되는 결과를 디스플레이에 표 시할 수 있다. 예를 들어, 사용자 단말은 수신된 사용자 입력에 대응되는 플랜을 수신하고, 플랜에 따라 '이번주 일정'을 디스플레이에 표시할 수 있다. 도 4는 일 실시 예에 따른 복수 개의 엔드 포인트(end point)가 포함된 플랜(plan)을 처리하는 과정을 나타낸 순서도이다. 일 실시 예에서, 엔드 포인트는 플랜에 포함된 액션(action)을 수행하기 위해 클라이언트 모듈이 연결되는 지점일 수 있다. 엔드 포인트는 액션이 수행되는 부분으로, 수행하는 액션의 종류에 따라 사용자 단말 또 는 지능형 서버가 될 수 있다. 예를 들어, 어느 하나의 액션이 사용자 단말 내부에 저장된 정보를 이 용하는 경우 해당 액션의 엔드 포인트는 사용자 단말이고, 다른 액션이 지능형 서버에 저장된 정보를 이용하는 경우 해당 액션의 엔드 포인트는 지능형 서버일 수 있다. 일 실시 예에 따른 지능형 서버는 동작 451에서, 사용자 발화(utterance)에 대응하는 의도(intent)를 획득 할 수 있다. 의도는 발화를 통해 수행하고자 하는 동작 및/또는 이루고자 하는 결과일 수 있다. 사용자 단말 은 사용자 의도에 기반한 다양한 컨텐츠 서비스를 제공하거나 사용자 단말에 포함된 다양한 기능들을 수행할 수 있다. 일 실시 예에 따른 지능형 서버는 동작 452에서, 의도에 따른 플랜(plan)을 생성할 수 있다. 플랜은 의도 를 실행하기 위한 액션(action)들의 연결 순서를 설정할 수 있다. 예를 들어, 지능형 서버의 플래너 모듈 은 의도에 대응하는 동작들을 수행하기 위한 플랜(plan)을 수립할 수 있다.액션들은 캡슐(capsule) 내부에 있을 수 있다. 캡슐은 의도에 대응하는 동작들을 담는 어플리케이션 또는 프로그램일 수 있다. 캡슐은 동작들을 수행하기 위한 컨셉(concepts)들 및/또는 액션들을 포함할 수 있다. 캡슐에 포함된 액션이 갖는 엔드 포인트에 따라 해당 액션을 포함하는 캡슐의 저장 위치가 설정될 수 있다. 일 실시 예에 따른 지능형 서버는 동작 453에서, 플랜에 포함된 액션들의 엔드 포인트가 복수 개인지 여부 를 확인할 수 있다. 플랜에 포함된 액션들 중 일부 액션들은 사용자 단말 내부에 저장된 정보를 이용하여 사용자 단말에서 수행되고, 나머지 액션들은 지능형 서버에 저장된 정보를 이용하여 지능형 서버 에서 수행되는 경우, 해당 플랜은 사용자 단말 및 지능형 서버 2개의 엔드 포인트를 가지므로 복수 개의 엔드 포인트를 갖는 것으로 판단할 수 있다. 일 실시 예에 따른 지능형 서버는 동작 454에서, 서로 다른 엔드 포인트를 갖는 액션들이 독립적인지 여부 를 판단할 수 있다. 어느 하나의 액션의 원인 및/또는 결과가 다른 액션의 원인 및/또는 결과와 무관한 경우, 두 액션은 서로 독립적일 수 있다. 지능형 서버는 사용자 단말을 엔드 포인트로 갖는 액션 및 지능형 서버를 엔드 포인트로 갖는 액션이 독립적인지 여부를 판단할 수 있다. 일 실시 예에 따른 사용자 단말 및/또는 지능형 서버는 동작 455에서, 서로 다른 엔드 포인트를 갖는 액션들이 독립적인 경우 같은 엔드 포인트를 갖는 액션들끼리 결합하여 복수 개의 서브(sub) 플랜들을 재생성한후 복수 개의 서브 플랜들을 병렬적으로 처리할 수 있다. 서로 다른 엔드 포인트를 갖는 액션들이 독립적인 경 우, 사용자 단말 및/또는 지능형 서버는 동일한 엔드 포인트를 갖는 액션들을 모아서 하나의 서브 플 랜을 생성할 수 있다. 사용자 단말 및/또는 지능형 서버는 복수의 서브 플랜들 각각을 처리할 수 있 다. 예를 들어, 사용자 단말에서는 사용자 단말을 엔드 포인트로 갖는 액션들을 이용하여 어느 하나 의 서브 플랜을 생성하여 처리하고, 지능형 서버에서는 지능형 서버를 엔드 포인트로 갖는 액션들을 이용하여 다른 서브 플랜을 생성하여 지능형 서버에서 병렬적으로 처리할 수 있다. 일 실시 예에 따른 일 실시 예에 따른 사용자 단말 및/또는 지능형 서버는 동작 456에서, 서로 다른 엔드 포인트를 갖는 액션들을 의존성(dependency)에 따라 설정된 순서대로 처리할 수 있다. 서로 다른 엔드 포 인트를 갖는 액션들이 의존성을 갖는 경우, 사용자 단말 및/또는 지능형 서버는 서로 다른 엔드 포인 트를 갖는 액션들을 순차적으로 처리할 수 있다. 도 5는 일 실시 예에 따른 복수 개의 캡슐들에 포함된 정보들의 연결 순서를 설정하는 플랜을 수립하고 동작을 수행하는 과정을 나타낸 도면이다. 복수 개의 캡슐들에 포함된 정보들의 연결 순서를 설정을 거치는 발화 를 처리하는 이후의 예시들에서 복수 개의 캡슐에 관련된 도 5의 설명은 실질적으로 동일하게 적용될 수 있다. 일 실시 예에서, 사용자 발화가 사용자 단말로 입력될 수 있다. 사용자 발화는 동작을 수행하고 자 하는 의도를 포함할 수 있다. 예를 들어, \"수지에게 전화해 줘.\"라는 사용자 발화는 수지를 검색하여 전화번 호를 찾는 의도 및 전화를 거는 의도를 포함할 수 있다. 사용자 단말은 지능형 서버로 사용자 발화 를 전달할 수 있다. 일 실시 예에서, 사용자 발화는 자동 음성 인식 모듈에서 텍스트로 변환되어 인식될 수 있다. 인식된 사용자 발화는 하나 이상의 캡슐로 나누어져 입력될 수 있다. 일 실시 예에서, 지능형 서버에 포함된 복수 개의 캡슐들 중 의도에 대응하는 캡슐로 인식된 사용자 발화 의 의도를 입력할 수 있다. 예를 들어, 지능형 서버에 포함된 캡슐 중 연락처 캡슐로 수지를 검 색하여 전화번호를 찾는 의도를 보내고 전화 캡슐로 전화를 거는 의도를 보낼 수 있다. 일 실시 예에서, 캡슐은 수신된 의도를 의도에 대응하는 컨셉과 연결시킬 수 있다. 컨셉은 수신된 의도와 대응 하는 액션을 수행하도록 할 수 있다. 컨셉은 클라이언트 모듈이 의도에 따른 액션을 수행하도록 신호를 송 신 및/또는 수신할 수 있다. 예를 들어, 연락처 캡슐은 클라이언트 모듈과 수지를 검색하여 전화번호 를 찾는 액션을 수행하기 위한 신호를 송신 및/또는 수신하고, 전화 캡슐은 클라이언트 모듈과 전화 를 거는 액션을 수행하기 위한 신호를 송신 및/또는 수신할 수 있다. 일 실시 예에서, 클라이언트 모듈은 사용자 단말의 어플리케이션을 제어하여 액션을 수행할 수 있다. 예를 들어, 클라이언트 모듈은 연락처 어플리케이션을 이용하여 수지를 검색하여 전화번호를 찾는 액 션을 수행하고, 전화 어플리케이션을 이용하여 전화를 거는 액션을 수행할 수 있다. 도 6은 일 실시 예에 따른 복수 개의 엔드 포인트가 포함된 플랜을 처리하는 과정을 나타낸 도면이다. 복 수 개의 엔드 포인트가 포함된 발화를 처리하는 이후의 예시들에서 복수 개의 엔드 포인트에 관련된 도 6의 설 명은 실질적으로 동일하게 적용될 수 있다. 또한, 도 6에서는 플랜을 처리하는 과정을 예시하였으나, 이에 한정 되지 않으며 도 6에서 설명한 개념 또는 내용은 도메인 또는 딥 링크에 해당하는 복수 개의 액션들을 처리할 때 서로 다른 엔드 포인트를 갖는 액션을 처리하는 과정에서도 실질적으로 동일하게 적용될 수 있다. 일 실시 예에서, 사용자 발화가 입력된 경우, 플래너 모듈은 사용자 발화에 대응하는 동작을 수 행하기 위한 플랜을 수립할 수 있다. 예를 들어, \"이번 주 병원 가는 날 예약된 식당 정보를 제니에게 보내 줘.\"라는 사용자 발화가 입력된 경우, 플래너 모듈은 제니에게 이번 주 중 병원 가는 날에 예약된 식 당 정보를 메시로 전송하기 위한 플랜을 수립할 수 있다. 일 실시 예에서, 플랜은 복수 개의 캡슐들(610, 620, 630, 640, 650)을 포함할 수 있다. 예를 들어, 플랜은 시 간 캡슐, 캘린더 캡슐, 예약 일정 캡슐, 연락처 캡슐, 및/또는 메시지 캡슐을 포함할 수 있다. 플랜은 복수 개의 캡슐들(610, 620, 630, 640, 650)에 포함된 컨셉들 및/또는 액션의 처리 순서 및/또 는 처리 방법을 설정할 수 있다.일 실시 예에서, 시간 캡슐은 제1 원인 컨셉, 제1 액션, 및/또는 제1 결과 컨셉을 포함할 수 있다. 제1 원인 컨셉은 사용자 발화 중 시간 캡슐에서 분석하여야 하는 \"오늘부터 7일\"라는 조건을 제1 액션으로 전달할 수 있다. 제1 액션은 \"오늘부터 7일\"라는 조건을 처리하여 \"이번 주\"에 대한 결과를 제1 결과 컨셉에 전달할 수 있다. 제1 결과 컨셉은 \"이번 주\"에 대한 결과인 \"0211~0217\"을 산출하여 제2 액션으로 전달할 수 있다. 일 실시 예에서, 캘린더 캡슐은 제2 원인 컨셉, 제2 액션, 및/또는 제2 결과 컨셉을 포함 할 수 있다. 제2 원인 컨셉은 사용자 발화 중 캘린더 캡슐에서 검색하여야 하는 \"병원\"이라는 정보를 제2 액션으로 전달할 수 있다. 제2 액션은 \"병원 가는 날\"을 검색하여 제2 결과 컨셉에 전달할 수 있다. 제2 결과 컨셉은 \"병원\" 가는 날인 \"0214\"를 제3 액션으로 전달할 수 있다. 일 실시 예에서, 예약 일정 캡슐은 제3 액션, 및/또는 제3 결과 컨셉을 포함할 수 있다. 제3 액 션은 예약한 \"식당 정보\"를 검색하여 제1 결과 컨셉에 전달할 수 있다. 제3 결과 컨셉은 예약한 식당인 \"아웃백\"을 제5 액션으로 전달할 수 있다. 일 실시 예에서, 연락처 캡슐은 제4 원인 컨셉, 제4 액션, 및/또는 제4 결과 컨셉을 포함 할 수 있다. 제4 원인 컨셉은 사용자 발화 중 연락처 캡슐에서 검색하여야 하는 \"제니\"라는 정 보를 제4 액션으로 전달할 수 있다. 제4 액션은 \"번호 검색\" 작업을 수행하여 제4 결과 컨셉에 전달할 수 있다. 제4 결과 컨셉은 \"제니\"의 전화번호인 \"01012345678\"을 산출하여 제5 액션으로 전달 할 수 있다. 일 실시 예에서, 메시지 캡슐은 제5 액션을 포함할 수 있다. 제5 액션은 \"2월 14일 예약된 아웃 백 정보를 제니에게 전송\"하는 목표(goal) 액션을 수행할 수 있다. 일 실시 예에서, 시간 캡슐에 포함된 제1 액션 및 일정 캡슐에 포함된 제3 액션은 지능형 서버에서 수행되고, 캘린더 캡슐에 포함된 제2 액션, 연락처 캡슐에 포함된 제4 액션 , 및 메시지 캡슐에 포함된 제5 액션은 사용자 단말에서 수행될 수 있다. 복수 개의 캡슐 들(610, 620, 630, 640, 650)에 포함된 액션이 서로 다른 엔드 포인드를 갖는 경우, 하나의 액션을 하나의 엔드 포인트에서 수행할 때 다른 엔드 포인트는 아이들(idle) 상태를 유지할 수 있다. 또한 복수 개의 캡슐들(610, 620, 630, 640, 650)에 포함된 액션이 서로 다른 엔드 포인드를 갖는 경우, 플랜을 실행하면서 클라이언트 모듈 이 사용자 단말 및/또는 지능형 서버 사이에서 상호 작용(interaction)을 복수 회 반복하거나 클라이언트 모듈과 사용자 단말 및/또는 지능형 서버 사이의 연결을 반복적으로 수립할 수 있다. 도 7은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이가 독립적인 경우 서브 플랜들을 병렬적으 로 처리하는 과정을 나타낸 도면이다. 일 실시 예에서, 사용자 단말의 클라이언트 모듈은 사용자 발화를 입력 받을 수 있다. 클라이언트 모 듈은 사용자 발화를 지능형 서버의 자동 음성 인식 모듈로 전달할 수 있다. 일 실시 예에서, 자동 음성 인식 모듈은 클라이언트 모듈로부터 사용자 발화를 입력 받을 수 있다. 자동 음성 인식 모듈은 사용자 발화를 텍스트로 변환할 수 있다. 자동 음성 인식 모듈은 텍스트를 자 연어 이해 모듈로 전달할 수 있다. 일 실시 예에서, 자연어 이해 모듈은 자동 음성 인식 모듈로부터 텍스트를 입력 받을 수 있다. 자연 어 이해 모듈은 텍스트에 포함된 의도를 추출할 수 있다. 자연어 이해 모듈은 의도를 플래너 모듈 로 전달할 수 있다. 일 실시 예에서, 플래너 모듈은 자연어 이해 모듈로부터 의도를 입력 받을 수 있다. 플래너 모듈 은 의도에 대응하는 액션 및/또는 동작을 수행하기 위한 플랜을 수립할 수 있다. 플래너 모듈은 수립 한 플랜을 제1 실행 엔진(execution engine)으로 전달할 수 있다. 일 실시 예에서, 제1 실행 엔진은 플랜에 포함된 복수의 액션들을 엔드 포인트에 따라 구분할 수 있다. 제 1 실행 엔진은 지능형 서버를 엔드 포인트로 갖는 액션들을 처리할 수 있다. 제1 실행 엔진은 전처리(pre-processing) 모듈 및/또는 제1 평행 처리(parallel processing) 모듈을 포함할 수 있다.일 실시 예에서, 전처리 모듈은 플랜에 포함된 복수의 액션들을 엔드 포인트에 따라 구분할 수 있다. 전처 리 모듈은 사용자 단말을 엔드 포인트로 하는 액션들 및 지능형 서버를 엔드 포인트로 하는 액 션들을 구분할 수 있다. 전처리 모듈은 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 없다고 판 단되는 경우 서로 다른 엔드 포인트를 갖는 액션들을 분리할 수 있다. 일 실시 예에서, 전처리 모듈은 지능형 서버를 엔드 포인트로 하는 액션들을 이용하여 제1 서브 플랜 을 생성할 수 있다. 전처리 모듈은 사용자 단말을 엔드 포인트로 하는 액션들을 이용하여 제2 서브 플랜을 생성할 수 있다. 전처리 모듈은 제1 서브 플랜을 지능형 서버의 제1 평행 처리 모듈로 전달할 수 있다. 전처리 모듈은 제2 서브 플랜을 사용자 단말의 클라이언트 모듈로 전달할 수 있다. 전처리 모듈은 제1 서브 플랜 및 제2 서브 플랜을 사용자 단말 및 지능형 서버에서 병렬 적으로 처리하도록 할 수 있다. 일 실시 예에서, 제1 평행 처리 모듈은 제1 서브 플랜에 포함된 액션들을 처리할 수 있다. 제1 평행 처리 모듈은 제1 서브 플랜을 처리하여 제1 결과를 생성할 수 있다. 제1 평행 처리 모듈은 제1 결과를 클 라이언트 모듈로 전달할 수 있다. 일 실시 예에서, 클라이언트 모듈은 제2 서브 플랜 및/또는 제1 결과를 사용자 단말의 제2 실행 엔진 으로 전달할 수 있다. 제2 실행 엔진은 사용자 단말을 엔드 포인트로 갖는 액션들을 처리하고 제1 결과를 반영하여 목표 액션을 생성할 수 있다. 제2 실행 엔진은 제2 평행 처리 모듈 및/또는 결 과 결합(result merging) 모듈을 포함할 수 있다. 일 실시 예에서, 제2 평행 처리 모듈은 제2 서브 플랜을 전달받을 수 있다. 제2 평행 처리 모듈은 제 2 서브 플랜을 처리하여 제2 결과를 생성할 수 있다. 제2 평행 처리 모듈은 제2 결과를 결과 결합 모듈 로 전달할 수 있다. 일 실시 예에서, 결과 결합 모듈은 클라이언트 모듈로부터 제1 결과를 전달받을 수 있다. 결과 결합 모듈은 제2 평행 처리 모듈로부터 제2 결과를 전달받을 수 있다. 결과 결합 모듈은 병렬적으로 처리된 제1 결과 및 제2 결과를 병합할 수 있다. 결과 결합 모듈은 제1 결과 및 제2 결과를 이용하여 목표 액션을 생성할 수 있다. 결과 결합 모듈은 목표 액션을 클라이언트 모듈로 전달할 수 있다. 도 8은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이가 독립적인 발화를 처리하는 과정을 나타 낸 도면이다. 일 실시 예에서, 전처리 모듈은 플랜 중 지능형 서버를 엔드 포인트로 하는 서버 플랜(server plan) 을 이루는 \"이번 주\" 및 \"예약된 식당 정보\"라는 액션들을 제1 실행 엔진에 포함된 캡슐들(810, 820)로 전 달할 수 있다. 전처리 모듈은 플랜 중 사용자 단말을 엔드 포인트로 하는 클라이언트 플랜(client plan)을 이루는 \"병원 가는 날\", \"제니 전화번호\", \"문자 보내줘\"라는 액션들을 제2 실행 엔진에 포함된 캡슐들(830, 840, 850)로 전달할 수 있다. (단계 1) 일 실시 예에서, 제1 실행 엔진에 포함된 캡슐들(810, 820) 각각은 전달받은 \"이번 주\" 및 \"예약된 식당 정보\"라는 액션들에 대응하여 날짜 정보 및 식당 예약 목록(list)을 생성하고 \"2018년 2월 11일 ~ 2018년 2월 17일\" 및 \"예약된 식당 목록\"이라는 컨셉들을 생성할 수 있다. 제1 실행 엔진과 병렬적으로 제2 실행 엔진 에 포함된 캡슐들(830, 840, 850) 각각은 전달받은 \"병원 가는 날\", \"제니 전화번호\", \"문자 보내줘\"라는 액션들에 대응하는 \"일정 목록(list)\", \"01012345678\", \"목표 액션 수행을 위한 메시지 전송\"이라는 컨셉들을 생성할 수 있다. 일 실시 예에서, 제1 실행 엔진에 포함된 캡슐들(810, 820) 각각은 생성한 컨셉들을 제1 평행 처리 모듈 로 전달할 수 있다. 제1 평행 처리 모듈은 전달받은 컨셉들을 이용하여 날짜 정보 및 식당 예약 목록 에 관한 제1 결과를 생성할 수 있다. 제1 평행 처리 모듈은 제1 결과를 결과 결합 모듈로 전달할 수 있다. (단계 2) 일 실시 예에서, 제2 실행 엔진에 포함된 적어도 일부의 캡슐은 생성한 병원 일정에 관한 컨셉을 제2 평행 처리 모듈로 전달할 수 있다. 제2 평행 처리 모듈은 병원 일정에 관한 제2 결과를 생성할 수 있 다. 제2 평행 처리 모듈은 제2 결과를 결과 결합 모듈로 전달할 수 있다. 제2 실행 엔진에 포함 된 적어도 일부의 캡슐은 다른 캡슐로 목표 액션을 수행하기 위한 정보를 직접 전달할 수 있다.일 실시 예에서, 결과 결합 모듈은 제1 결과 및 제2 결과를 합병하여 목표 액션을 실행하기 위한 \"2018년 2월 14일 15:00 보나세라\"라는 최종 결과를 생성할 수 있다. 결과 결합 모듈은 최종 결과를 목표 액션을 수행하기 위한 캡슐로 전달할 수 있다. 일 실시 예에서, 목표 액션을 달성하기 위한 캡슐은 목표 액션을 달성할 수 있다. 목표 액션을 달성하기 위한 캡슐은 목표 액션의 성공 및/또는 실패 여부를 포함한 결과를 제1 실행 엔진으로 전달할 수 있 다. (단계 3) 도 9는 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 플랜을 처리하는 과정을 나타낸 순서도이다. 일 실시 예에 따른 지능형 서버는 동작 910에서, 플랜에 포함된 액션들의 엔드 포인트가 복수 개인지 여부 를 확인할 수 있다. 플랜에 포함된 액션들 중 일부 액션들은 사용자 단말 내부에 저장된 정보를 이용하고, 나머지 액션들은 지능형 서버에 저장된 정보를 이용하는 경우, 해당 플랜은 사용자 단말 및 지능형 서버 2개의 엔드 포인트를 가지므로 복수 개의 엔드 포인트를 갖는 것으로 판단할 수 있다. 일 실시 예에 따른 지능형 서버는 동작 920에서, 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 경우 목표 액션의 엔드 포인트를 확인할 수 있다. 서로 다른 엔드 포인트를 갖는 액션들이 인과 관계가 있 거나 어느 하나의 액션의 결과가 다른 액션에 사용되는 경우, 액션들 사이에 의존성이 있는 것으로 판단할 수 있다. 예를 들어, 실행 및/또는 처리 순서가 지정된 액션들인 경우, 액션들 사이에 의존성이 있는 것으로 판단 할 수 있다. 이 경우 목표 액션의 엔드 포인트가 사용자 단말 또는 지능형 서버 중 어디인지 확인할 수 있다. 일 실시 예에 따른 사용자 단말 및/또는 지능형 서버는 동작 930에서, 목표 액션의 엔드 포인트를 제 외한 엔드 포인트에 속하는 액션들을 수행하여 플랜을 축소하며 업데이트할 수 있다. 사용자 단말 및/또는 지능형 서버는 목표 액션의 엔드 포인트와 다른 엔드 포인트를 갖는 액션들을 먼저 수행할 수 있다. 예를 들어, 사용자 단말이 목표 액션의 엔드 포인트인 경우, 지능형 서버에서 지능형 서버를 엔드 포 인트로 갖는 액션들을 먼저 수행할 수 있다. 다른 예로, 지능형 서버가 목표 액션의 엔드 포인트인 경우, 사용자 단말에서 사용자 단말를 엔드 포인트로 갖는 액션들을 먼저 수행할 수 있다. 목표 액션의 엔 드 포인트와 다른 엔드 포인트를 갖는 액션들을 수행하는 경우 플랜에 포함된 액션들의 개수를 감소시켜 플랜을 축소(shrink)시킬 수 있다. 또한, 적어도 일부의 액션들이 수행되면서 적어도 일부의 액션에 대한 결과를 획득 할 수 있어, 플랜이 업데이트될 수 있다. 일 실시 예에서, 플랜 대신 딥 링크를 포함하는 도메인들 각각이 지정하는 액션들을 수행하는 경우, 목표 액션 의 엔드 포인트를 제외한 엔드 포인트에 속하는 액션들을 수행하여 액션들의 개수를 감소시킬 수 있다. 이에 따 라, 어느 하나의 엔드 포인트(예: 사용자 단말 또는 지능형 서버)에 해당하는 액션들을 우선적으로 처리하여 어느 하나의 엔드 포인트(100 또는 200)에서 수행하는 동작들을 완료할 수 있다. 일 실시 예에 따른 사용자 단말 및/또는 지능형 서버는 동작 940에서, 업데이트된 플랜을 목표 액션 을 수행하는 엔드 포인트로 전달할 수 있다. 예를 들어, 사용자 단말이 목표 액션의 엔드 포인트인 경우, 지능형 서버에서 지능형 서버를 엔드 포인트로 갖는 액션들을 먼저 수행할 수 있다. 다른 예로, 지능 형 서버가 목표 액션의 엔드 포인트인 경우, 사용자 단말에서 사용자 단말를 엔드 포인트로 갖 는 액션들을 먼저 수행할 수 있다. 일 실시 예에 따른 사용자 단말 및/또는 지능형 서버는 동작 950에서, 목표 액션을 수행하는 엔드 포 인트에 속하는 액션들을 수행하고 목표 액션을 수행할 수 있다. 예를 들어, 사용자 단말이 목표 액션의 엔 드 포인트인 경우, 지능형 서버에서 축소된 플랜을 전달받아 나머지 액션들을 수행한 후 최종적으로 목표 액션을 수행할 수 있다. 다른 예로, 지능형 서버가 목표 액션의 엔드 포인트인 경우, 사용자 단말에 서 축소된 플랜을 전달받아 나머지 액션들을 수행한 후 최종적으로 목표 액션을 수행할 수 있다. 플랜의 처리 과정에서 목표 액션의 엔드 포인트와 다른 엔드 포인트를 갖는 액션을 우선적으로 처리하여 플랜에 포함된 액션 들을 처리할 때 사용자 단말 및/또는 지능형 서버 사이의 상호 작용이 발생하는 횟수 또는 연결을 재 설정하는 횟수를 감소시킬 수 있다.도 10은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 경우 서브 플랜들을 순 차적으로 처리하는 과정을 나타낸 도면이다. 도 10의 자동 음성 인식 모듈, 자연어 이해 모듈, 플래너 모듈은 도 7의 자동 음성 인식 모듈, 자연어 이해 모듈, 플래너 모듈과 실질적으로 동일하므로 이하에서는 중복되는 설명은 생략하기로 한다. 일 실시 예에서, 제1 실행 엔진은 플랜에 포함된 복수의 액션들을 엔드 포인트에 따라 구분할 수 있다. 제1 실행 엔진은 지능형 서버를 엔드 포인트로 갖는 액션들을 처리할 수 있다. 제1 실행 엔진(101 0)은 전처리 모듈 및/또는 제1 순차 처리(sequential processing) 모듈을 포함할 수 있다. 일 실시 예에서, 전처리 모듈은 플랜에 포함된 복수의 액션들을 엔드 포인트에 따라 구분할 수 있다. 전 처리 모듈은 사용자 단말을 엔드 포인트로 하는 액션들 및 지능형 서버를 엔드 포인트로 하는 액션들을 구분할 수 있다. 전처리 모듈은 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있다고 판단되는 경우 서로 같은 엔드 포인트를 갖는 액션들이 먼저 처리되도록 순서를 조정할 수 있다. 일 실시 예에서, 전처리 모듈은 지능형 서버를 엔드 포인트로 하는 액션들을 이용하여 제1 서브 플 랜을 생성할 수 있다. 전처리 모듈은 사용자 단말을 엔드 포인트로 하는 액션들을 이용하여 제2 서 브 플랜을 생성할 수 있다. 전처리 모듈은 제1 서브 플랜을 지능형 서버의 제1 순차 처리 모듈 로 전달할 수 있다. 전처리 모듈은 제2 서브 플랜을 사용자 단말의 클라이언트 모듈로 전달할 수 있다. 일 실시 예에서, 제1 순차 처리 모듈은 제1 서브 플랜에 포함된 액션들을 처리할 수 있다. 제1 순차 처리 모듈은 제1 서브 플랜을 처리하여 제1 결과를 생성할 수 있다. 제1 순차 처리 모듈은 제1 결과를 클라이언트 모듈로 전달할 수 있다. 일 실시 예에서, 클라이언트 모듈은 제1 결과를 전달받을 수 있다. 제2 실행 엔진은 제1 결과에 기 반하여 제2 서브 플랜을 처리하기 시작할 수 있다. 클라이언트 모듈은 제1 결과 및/또는 제2 서브 플랜을 제2 실행 엔진으로 전달할 수 있다. 일 실시 예에서, 제2 실행 엔진은 사용자 단말을 엔드 포인트로 갖는 액션들을 처리하고 목표 액션 을 생성할 수 있다. 제2 실행 엔진에 포함된 제2 순차 처리 모듈은 제2 서브 플랜을 처리하여 제2 결과를 생성할 수 있다. 제2 평행 처리 모듈은 제2 결과에 제1 결과를 결합하여 목표 액션을 생성할 수 있다. 제2 평행 처리 모듈은 목표 액션을 클라이언트 모듈로 전달할 수 있다. 도 11은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 발화를 처리하는 과정 을 나타낸 도면이다. 일 실시 예에서, 전처리 모듈은 플랜 중 지능형 서버를 엔드 포인트로 하는 서버 플랜(server pla n)을 이루는 \"지난 주\" 및 \"방탄소년단 1위 노래\"라는 액션들을 제1 실행 엔진에 포함된 캡슐들(1110, 1120)로 전달할 수 있다. (단계 1) 일 실시 예에서, 제1 실행 엔진에 포함된 캡슐들(1110, 1120) 각각은 전달받은 \"지난 주\" 및 \"방탄소년단 1위 노래\"라는 액션들에 대응하여 날짜 정보 및 곡 정보를 생성할 수 있다. 제1 순차 처리 모듈은 제1 실 행 엔진에 포함된 캡슐들(1110, 1120)로부터 정보를 전달받아 \"2018년 8월 20일 ~ 2018년 8월 26일\" 및 \"노래 목록\"이라는 컨셉들을 생성할 수 있다. 일 실시 예에서, 제1 순차 처리 모듈은 플랜 중 사용자 단말을 엔드 포인트로 하는 클라이언트 플랜 (client plan)을 이루는 \"spotify에서 재생해줘\"라는 액션을 제2 실행 엔진에 포함된 캡슐로 전달 할 수 있다. 제1 순차 처리 모듈은 제1 실행 엔진에 포함된 캡슐들(1110, 1120)로부터 정보를 전달 받아 생성한 컨셉을 제2 순차 처리 모듈로 전달할 수 있다. (단계 2) 일 실시 예에서, 제2 실행 엔진에 포함된 캡슐은 제2 순차 처리 모듈로부터 곡 정보를 전달 받을 수 있다. 제2 실행 엔진에 포함된 캡슐은 곡 정보 및 \"spotify에서 재생해줘\"라는 액션을 합 병하여 목표 액션을 실행하기 위한 최종 결과를 생성할 수 있다. 제2 실행 엔진에 포함된 캡슐은 목표 액션을 수행할 수 있다. 제2 실행 엔진에 포함된 캡슐은 성공 및/또는 실패 여부를 포함한 결 과를 전처리 모듈로 전달할 수 있다. (단계 3)도 12는 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 IoT(Internet of Things) 환경에서의 발화를 처리하 는 과정을 나타낸 도면이다. IoT 환경은 집 또는 사무실과 같은 일정한 공간 내의 사물들이 무선 통신으 로 서로 연결되어 상호 작용할 수 있는 환경일 수 있다. IoT 환경은 IoT 입력 장치, 전처리 모듈, 및/또는 복수의 가전 기기들(1230, 1240)을 포함할 수 있다. 예를 들어, 복수의 가전 기기(1230, 1240)는 컴퓨 터 및/또는 TV를 포함할 수 있다. 일 실시 예에서, IoT 입력 장치는 사용자의 발화를 입력받고, 연결된 복수의 가전 기기들(1230, 1240)이 해당하는 동작을 수행하도록 플랜을 수립할 수 있다. 전처리 모듈은 플랜에 포함된 액션을 엔드 포인트에 따라 나누어 복수의 서브 플랜들을 재생성할 수 있다. 복수의 가전 기기들(1230, 1240) 각각은 복수의 서브 플 랜들에 따라 동작할 수 있다. 일 실시 예에서, 사용자는 복수의 가전 기기들(1230, 1240)이 동시에 동작할 수 있는 발화를 할 수 있다. 예를 들어, 사용자는 \"컴퓨터에 저장된 하와이 사진 수지에게 보내고 TV에서 오늘의 영화 미리보기 재생해줘.\"라는 발화를 IoT 입력 장치에 할 수 있다. 일 실시 예에서, IoT 입력 장치는 사용자의 발화에 대한 플랜을 수립하여 전처리 모듈로 전달할 수 있다. 전처리 모듈은 플랜 중 컴퓨터에서 수행할 수 있는 액션들 및 TV에서 수행할 수 있는 액션들을 분리할 수 있다. 전처리 모듈은 컴퓨터에서 수행할 수 있는 액션들을 이용하여 제1 서브 플랜을 생성할 수 있다. 전처리 모듈은 TV에서 수행할 수 있는 액션들을 이용하여 제2 서브 플랜을 생성할 수 있다. 예를 들어, 전처리 모듈은 \"컴퓨터에 저장된 하와이 사진 수지에게 보내는\" 플랜에 관련 된 액션들을 이용하여 제1 서브 플랜을 생성하고, \"TV에서 오늘의 영화 미리보기 재생하는\" 플랜에 관련된 액션 들을 이용하여 제2 서브 플랜을 생성할 수 있다. 일 실시 예에서, 컴퓨터는 제1 서브 플랜을 처리하여 컴퓨터에 저장된 하와이 사진을 수지에게 전송하는 목표 액션을 수행할 수 있다. 이와 동시에 TV는 제2 서브 플랜을 처리하여 오늘의 영화 미리보기를 재생 할 수 있다. 복수의 서브 플랜들 각각을 복수의 가전 기기들(1230, 1240)에 동시에 전달함에 따라 복수의 가전 기기들(1230, 1240)을 포함하는 사용자 발화에 대응하여 복수의 가전 기기들(1230, 1240) 각각이 지연 없이 동 시에 동작할 수 있다. 도 13은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블럭도이다. 도 13을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전 자 장치 또는 서버와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입 력 장치, 음향 출력 장치, 표시 장치, 오디오 모듈, 센서 모듈, 인터페이스 , 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 표시 장치 또는 카메라 모듈)가 생략되거나, 하나 이상의 다른 구성 요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들은 하나의 통합된 회로로 구현될 수 있다. 예를 들면, 센서 모듈(예: 지문 센서, 홍채 센서, 또는 조도 센서)은 표시 장치(예: 디스플레이)에 임베디드된 채 구현될 수 있다 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)을 제어할 수 있고, 다양한 데 이터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발 성 메모리에 로드하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘 발성 메모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처 리 장치 또는 어플리케이션 프로세서), 및 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있 다. 추가적으로 또는 대체적으로, 보조 프로세서은 메인 프로세서보다 저전력을 사용하거나, 또는지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일 부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세 서를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로 세서와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 표시 장치, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르 면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다 른 구성 요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서모듈)에 의해 사용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관 련된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 장치는, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 장치은, 예를 들면, 마이크, 마우스, 키보드, 또 는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 장치는 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 장치는, 예를 들면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도 로 사용될 수 있고, 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커 와 별개로, 또는 그 일부로서 구현될 수 있다. 표시 장치는 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 표시 장치(136 0)은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로를 포함 할 수 있다. 일실시예에 따르면, 표시 장치는 터치를 감지하도록 설정된 터치 회로(touch circuitry), 또 는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 센서 회로(예: 압력 센서)를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시 예에 따르면, 오디오 모듈은, 입력 장치 를 통해 소리를 획득하거나, 음향 출력 장치, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치) (예: 스피커 또는 헤드 폰))를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태)를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치이 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스 는, 예를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자은, 예를 들면, HDMI 커넥터, USB 커넥 터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성 요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배 터리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있 다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버 )간의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접 (예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi direct 또는 IrDA(infrared data association) 같은 근거리 통신 네트워크) 또는 제 2 네트워크(예: 셀룰러 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나 의 구성 요소(예: 단일 칩)으로 통합되거나, 또는 서로 별도의 복수의 구성 요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자 (IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크 내에서 전자 장치 를 확인 및 인증할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 하나의 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용 되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들 로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외부 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC)이 추가 로 안테나 모듈의 일부로 형성될 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))를 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 전자 장치(1302, 1304) 각각은 전자 장치와 동일 한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부 전자 장치들(1302, 1304, or 1308) 중 하나 이상의 외부 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수 행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하 나 이상의 외부 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요 청을 수신한 하나 이상의 외부 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련 된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치 는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있 다.. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 본 문서에 개시된 다양한 실시 예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시 예에 따른 전자 장치는 전술한 기기들에 한정되지 않는다. 본 문서의 다양한 실시 예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시 예들로 한정하려는 것이 아니며, 해당 실시 예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한 다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아 이템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\",“A 또는 B 중 적어도 하 나,”\"A, B 또는 C,\" \"A, B 및 C 중 적어도 하나,”및 “A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소 와 구분하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, “기능적으로” 또는 “통신적으로”라는 용어 와 함께 또는 이런 용어 없이, “커플드” 또는 “커넥티드”라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것 을 의미한다. 본 문서에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부가 될 수 있다. 예를 들 면, 일 실시 예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시 예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매체의 형태 로 제공될 수 있다. 여기서, ‘비일시적’은 저장매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시 예에 따르면, 본 문서에 개시된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품(computer pro메 모리 product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD- ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치 (예: 스마트폰)들 간에 직접 또는 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우 에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메 모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시 예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소 들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시 예들에 따르면, 모듈, 프로그램 또는 다른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2019-0025544", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 2는 다양한 실시예에 따른, 컨셉과 액션의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 도 3은 일 실시예에 따라, 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 표시하는 사용자 단말을 도시 하는 도면이다. 도 4는 일 실시 예에 따른 복수 개의 엔드 포인트가 포함된 플랜을 처리하는 과정을 나타낸 순서도이다. 도 5는 일 실시 예에 따른 복수 개의 캡슐들에 포함된 정보들의 연결 순서를 설정하는 플랜을 수립하고 동작을 수행하는 과정을 나타낸 도면이다. 도 6은 일 실시 예에 따른 복수 개의 엔드 포인트가 포함된 플랜을 처리하는 과정을 나타낸 도면이다. 도 7은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이가 독립적인 경우 서브 플랜들을 병렬적으 로 처리하는 과정을 나타낸 도면이다. 도 8은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이가 독립적인 발화를 처리하는 과정을 나타 낸 도면이다. 도 9는 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 플랜을 처리하는 과정을 나타낸 순서도이다. 도 10은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 경우 서브 플랜들을 순 차적으로 처리하는 과정을 나타낸 도면이다. 도 11은 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 액션들 사이에 의존성이 있는 발화를 처리하는 과정 을 나타낸 도면이다. 도 12는 일 실시 예에 따른 서로 다른 엔드 포인트를 갖는 IoT 환경에서의 발화를 처리하는 과정을 나타낸 도면 이다.도 13은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도면의 설명과 관련하여, 동일 또는 유사한 구성요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있다."}
