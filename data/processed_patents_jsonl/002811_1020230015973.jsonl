{"patent_id": "10-2023-0015973", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0123521", "출원번호": "10-2023-0015973", "발명의 명칭": "심층 신경망 응용을 위한 분할 컴퓨팅 방법 및 장치", "출원인": "고려대학교 산학협력단", "발명자": "백상헌"}}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 프로세서를 포함하는 분할 컴퓨팅 장치에 의해 수행되는 분할 컴퓨팅 방법에 있어서,복수의 모바일 단말들 각각으로부터 계층 분할 지점 결정 요청을 수신하는 단계;상기 계층 분할 지점 결정 요청에 응답하여, 상기 복수의 모바일 단말들 각각의 계층 분할 지점을 결정하는 단계;상기 계층 분할 지점을 상기 복수의 모바일 단말들 각각으로 송신하는 단계;상기 복수의 모바일 단말들 각각으로부터 제1 중간 데이터를 수신하는 단계;상기 제1 중간 데이터 중간 모델에 입력하여 제2 중간 데이터를 도출하는 단계; 및상기 제2 중간 데이터를 상기 모바일 단말들 각각으로 송신하는 단계를 포함하는 분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 계층 분할 지점은, 분할 컴퓨팅을 위해 임의의 심층 신경망 모델을 분할하는 지점을 의미하고,상기 계층 분할 지점에 따라 상기 임의의 심층 신경망 모델은 헤드(head) 모델, 중간(middle) 모델, 및 테일(tail) 모델로 분할되고,상기 제1 중간 데이터는 상기 헤드 모델의 출력 데이터이고,상기 제2 중간 데이터는 상기 중간 모델의 출력 데이터인,분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 계층 분할 지점을 결정하는 단계는,상기 모바일 단말들의 평균 추론 지연 시간을 최소화하기 위한 목적 함수를 이용한 최적화 문제를풀이함으로써, 상기 계층 분할 지점을 결정하는,분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 계층 분할 지점을 결정하는 단계는 적어도 하나의 제약 조건을 이용하여 상기 최적화 문제를 풀이하고,상기 적어도 하나의 제약 조건은, 상기 복수의 모바일 단말들 각각에 대한 제1 계층 분할 지점은 최대 1 개가존재하여야 한다는 제1 제약 조건을 포함하는,분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 적어도 하나의 제약 조건은, 상기 복수의 모바일 단말들 각각에 대한 제2 계층 분할 지점은 최대 1 개가존재하여야 한다는 제2 제약 조건을 포함하는,공개특허 10-2024-0123521-3-분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 적어도 하나의 제약 조건은, 상기 제1 계층 분할 지점은 상기 제2 계층 분할 지점보다 작거나 같아야 한다는 제3 제약 조건을 포함하는,분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 적어도 하나의 제약 조건은, 수학식 1로 표현되는 제4 제약 조건을 포함하고,상기 수학식 1은 이고,상기 은 모바일 단말 m이 상기 분할 컴퓨팅 장치로 오프로딩하는 연산량이고,상기 M은 상기 모바일 단말의 개수이고,상기 는 미리 정해진 값을 갖는 공평성 임계치(fairness threshold)인,분할 컴퓨팅 방법."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "심층 신경망 응용을 위한 분할 컴퓨팅 장치 및 방법이 개시된다. 상기 분할 컴퓨팅 방법은 적어도 프로세서를 포 함하는 분할 컴퓨팅 장치에 의해 수행되고, 복수의 모바일 단말들 각각으로부터 계층 분할 지점 결정 요청을 수 신하는 단계, 상기 계층 분할 지점 결정 요청에 응답하여, 상기 복수의 모바일 단말들 각각의 계층 분할 지점을 결정하는 단계, 상기 계층 분할 지점을 상기 복수의 모바일 단말들 각각으로 송신하는 단계, 상기 복수의 모바일 단말들 각각으로부터 제1 중간 데이터를 수신하는 단계, 상기 제1 중간 데이터 중간 모델에 입력하여 제2 중간 데이터를 도출하는 단계, 및 상기 제2 중간 데이터를 상기 모바일 단말들 각각으로 송신하는 단계를 포함한다."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 멀티 모바일 단말 엣지 컴퓨팅 환경에서의 분할 컴퓨팅에 관한 것이다."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "기존의 DNN(Deep Neural Network, 심층 신경망) 추론 방식은 전체 DNN 모델을 단일 장치(e.g., 모바일 단말 또 는 엣지 서버 등)에서 처리하여 결과를 도출하는 구조를 갖는다. 추론(Inference)이란 DNN 모델 파라미터들의 학습(training)이 완료된 이후 학습된 모델을 바탕으로 학습에 사용되지 않은 새로운 데이터를 입력으로 넣어 결과를 도출하는 과정이다. 기존의 DNN 추론 방식은 전체 DNN 추론을 모바일 단말에서 수행하는 경우와 엣지 서버에서 수행하는 경우로 크 게 두 가지의 방식이 있다. 먼저, 전체 DNN 추론을 모바일 단말에서 수행하는 경우에는 로데이터(raw data)를 다른 장치로 보낼 필요 없이, 모바일 단말에서 자체적으로 처리하지만, 모바일 단말의 부족한 컴퓨팅 자원으로 인해 높은 추론 지연 시간을 발생시킬 수 있다. 반면, 로데이터를 엣지 서버로 전송하여 전체 DNN 추론을 엣지 서버에서 할 때는 컴퓨팅 자원이 충분하여 추론 지연 시간 측면에서는 이득을 볼 수 있지만, 높은 전송 지연 시 간 시간이 발생하는 문제점이 있다. 분할 컴퓨팅(Split Computing)은 위와 같이 단일 장치에서의 DNN 추론 방식이 가지는 문제점을 극복하기 위해 여러 장치를 통해 순차적으로 추론을 하는 구조를 제시한다. 먼저, 분할 컴퓨팅은 DNN 모델의 특정 계층을 계층 분할 지점(Split Point)을 선택하여 DNN 모델을 앞부분(head)과 뒷부분(tail)으로 나눈다. 이를 기반으로 앞부 분은 모바일 단말에서 처리하고, 앞부분의 중간 데이터(intermediate data)를 엣지 서버로 전송하여 뒷부분은 엣지 서버에서 처리하는 구조를 가진다. 이러한 구조는 여러 장치의 컴퓨팅 자원, 통신 상태, 에너지 등의 상태 에 따라서 적절한 계층 분할 지점을 선택하여 기존의 단일 장치에서의 DNN 추론 방식의 문제점을 극복한다. 계 층 분할 지점에 따라 추론 지연 시간, 장치 자원 사용량 등이 달라지기 때문에 적절한 계층 분할 지점을 선택하 는 것이 중요하다. 최근에는, 인공지능 기술이 발전하면서 다양한 구조를 가진 DNN 모델이 등장하고 있다. 저해상도의 이미지를 입 력으로 받아, 고해상도의 이미지를 출력으로 도출하는 super resolution 모델은 데이터 크기가 상당히 결과를도출하는 구조로 되어 있다. 이러한 구조를 가진 DNN 모델은, 엣지 서버에서 DNN 모델의 뒷부분을 처리하고 결 과를 다시 모바일 단말로 반환하는데 상당히 많은 전송 오버헤드를 발생시켜 추론 지연 시간이 급증하게 된다. 이러한 문제점을 해결하기 위해 본 발명에서는 계층 분할 지점을 두 개로 결정하여, DNN 모델을 앞부분(head), 중간 부분(middle), 뒷부분(tail)으로 나누는 구조를 제안한다. 즉, 두 개의 계층 분할 지점을 결정하는 방안을 제안함으로써, 모바일 단말에서 앞부분을 처리하고, 엣지 서버에서 중간 부분을 처리하고, 뒷부분을 다시 모바 일 단말에서 처리함으로써 데이터 크기가 큰 출력을 엣지 서버에서 모바일 단말로 전송하지 않아도 되는 구조를 제안한다. 또한, 하나의 엣지 서버가 서비스 제공자(service provider)로서 여러 개의 모바일 단말들에 서비스를 제공해주 는 환경에서, 컴퓨팅 자원이 부족한 모바일 단말들은 컴퓨팅 자원이 충분한 모바일 단말들보다 더 많은 양의 연 산량을 오프로딩(offloading) 한다. 각각의 모바일 단말들이 엣지 서버의 자원을 위해 비용을 지불하는 환경에 서, 컴퓨팅 자원이 많다는 이유로 엣지 서버의 자원을 충분히 활용하지 못하는 것은 컴퓨팅 자원이 충분한 모바 일 단말에는 불공평하다는 문제점이 발생한다. 이에 따라, 본 발명에서는 여러 모바일 단말들이 엣지 서버의 자 원을 공평하게 사용(공평한 오프로딩 기회)할 수 있는 계층 분할 지점을 결정하는 방안을 제안한다. 이를 위해 본 발명에서는 분할 컴퓨팅 시 추론 시간을 최소화하고 모바일 단말 간 엣지 서버로 오프로딩하는 연 산량에 대한 공정성(fairness)를 보장하는 계층 분할 지점을 결정하기 위한 F2SC(Fast and Fair Split Computing) 알고리즘을 제안한다. 먼저, 엣지 서버가 여러 모바일 단말에 공평한 오프로딩 기회를 보장해주기 위해 JFI(Jain’Fairness Index)를 이용하여 문제 공식화를 하고, 준최적(sub-optimal)의 결과를 현실적인 시 간 내에 구할 수 있는 F2SC 알고리즘을 제안한다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허 제2113662호 (2020.05.22. 공고) (특허문헌 0002) 대한민국 공개특허 제2022-0113714호 (2022.08.16. 공개) 비특허문헌 (비특허문헌 0001) R. Jain, D. Chiu, and W. Hawe, “A Quantitative Measure of Fairness and Discrimination for Resource Allocation in Shared Computer System,” in arXiv:cs/9809099, September 1998."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 이루고자 하는 기술적인 과제는 추론 지연 시간을 최소화하고 공정성을 보장하는 분할 컴퓨팅 방법 및 장치를 제공하는 것이다."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 분할 컴퓨팅 방법은 적어도 프로세서를 포함하는 분할 컴퓨팅 장치에 의해 수행되 고, 복수의 모바일 단말들 각각으로부터 계층 분할 지점 결정 요청을 수신하는 단계, 상기 계층 분할 지점 결정 요청에 응답하여, 상기 복수의 모바일 단말들 각각의 계층 분할 지점을 결정하는 단계, 상기 계층 분할 지점을 상기 복수의 모바일 단말들 각각으로 송신하는 단계. 상기 복수의 모바일 단말들 각각으로부터 제1 중간 데이터 를 수신하는 단계, 상기 제1 중간 데이터 중간 모델에 입력하여 제2 중간 데이터를 도출하는 단계, 및 상기 제2 중간 데이터를 상기 모바일 단말들 각각으로 송신하는 단계를 포함한다."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 의할 경우, 추론 지연 시간을 최소화하는 동시에 모바일 단말 간 엣지 서버로 오프로딩하 는 연산량에 대한 공정성을 보장하는 계층 분할 지점 결정이 가능하다."}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에 개시되어 있는 본 발명의 개념에 따른 실시예들에 대해서 특정한 구조적 또는 기능적 설명들은 단 지 본 발명의 개념에 따른 실시예들을 설명하기 위한 목적으로 예시된 것으로서, 본 발명의 개념에 따른 실시예 들은 다양한 형태들로 실시될 수 있으며 본 명세서에 설명된 실시예들에 한정되지 않는다. 본 발명의 개념에 따른 실시예들은 다양한 변경들을 가할 수 있고 여러 가지 형태들을 가질 수 있으므로 실시예 들을 도면에 예시하고 본 명세서에서 상세하게 설명하고자 한다. 그러나, 이는 본 발명의 개념에 따른 실시예들 을 특정한 개시 형태들에 대해 한정하려는 것이 아니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 상기 구성 요소들은 상기 용어 들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으로 만, 예컨대 본 발명의 개념에 따른 권리 범위로부터 벗어나지 않은 채, 제1 구성 요소는 제2 구성 요소로 명명 될 수 있고 유사하게 제2 구성 요소는 제1 구성 요소로도 명명될 수 있다. 어떤 구성 요소가 다른 구성 요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성 요소 에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성 요소가 존재할 수도 있다고 이해되어야 할 것이다. 반면에, 어떤 구성 요소가 다른 구성 요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는 중간에 다른 구성 요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성 요소들 간의 관계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등 도 마찬가지로 해석되어야 한다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로서, 본 발명을 한정하려는 의 도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 본 명세서에 기재된 특징, 숫자, 단계, 동작, 구성 요소, 부분품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구 성 요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적 으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의 미로 해석되지 않는다. 이하, 본 명세서에 첨부된 도면들을 참조하여 본 발명의 실시예들을 상세히 설명한다. 그러나, 특허출원의 범위 가 이러한 실시예들에 의해 제한되거나 한정되는 것은 아니다. 각 도면에 제시된 동일한 참조 부호는 동일한 부 재를 나타낸다. DNN(Deep Neural Network, 심층 신경망) 모델의 계층 분할 지점을 결정하기 위한 시스템 모델을 소개하고, 분할 컴퓨팅의 전반적인 과정을 자세히 설명한다.도 1은 모바일 단말간 공평성(또는 공정성)을 보장하고 추론 지연 시간을 최소화하는 분할 컴퓨팅을 수행하기 위한 시스템 모델(분할 컴퓨팅 시스템 등으로 명명될 수 있음)이다. 복수의 모바일 단말들과 하나의 (엣지) 서 버(분할 컴퓨팅 장치 등으로 명명될 수 있음)로 구성되고, DNN 추론을 수행하기 위해 모바일 단말과 엣지 서버 에서 분할 컴퓨팅을 활용한다. 모바일 단말은 으로 표현하고, 각각의 모바일 단말은 서로 다른 컴퓨팅 자원 (FLoating point OPerations per Second, FLOPS) 을 가진다. 모바일 단말에서 DNN 기반의 애플리케이션이 발 생하면 모바일 단말들은 엣지 서버로 적절한 계층 분할 지점에 대한 결정을 요청한다. 엣지 서버에서 계층 분할 지점을 결정하기 위해 먼저 모바일 단말의 정보가 필요하다. 모바일 단말이 추론하는 데 발생하는 추론 지연 시간 정보(inference profile)를 엣지 서버에 미리 전송하는 것으로 가정한다. 엣지 서 버는 모바일 단말과 엣지 서버의 추론 지연 시간 정보, 엣지 서버의 처리 큐(processing queue) 정보, 모바일 단말 간 오프로딩하는 연산량에 대한 공평성을 고려하여 적절한 계층 분할 지점을 두 개(실시예에 따라, 단일의 계층 분할 지점을 결정할 수도 있음)로 결정하여 모바일 단말에게 알려준다. 모바일 단말은 결정된 두 개의 계 층 분할 지점을 바탕으로 DNN 추론을 시작하게 된다. 엣지 서버의 컴퓨팅 자원은 로 표현한다. 또한, 엣지 서 버는 동시에 여러 태스크를 처리 할 수 없는 것으로 가정한다. 모바일 단말에서 발생하는 DNN 기반의 애플리케이션은 총 L 개의 층으로 구성되어 있고, 번째 계층을 처리하기 위해 필요한 연산량(FLoating point Operations, FLOPs)은 로 표현하고, k번째 계층을 처리하고 발 생하는 중간 데이터의 크기는 로 표현한다. 모바일 단말 m의 첫 번째 계층 분할 지점이 로 결정되고 두 번째 계층 분할 지점이 로 결정되 면, DNN 모델을 도 2와 같이 헤드(head), 중간(middle), 테일(tail) 모델로 나눌 수 있다. 이에 따라, 모바일 단말에서 헤드 모델을 처리하고, 엣지 서버에서 중간 모델(또는 미들 모델)을 처리하고, 테일 모델을 다시 모바 일 단말에서 처리함으로써 크기가 큰 출력을 엣지 서버에서 모바일 단말로 반환하지 않아도 되는 구조를 가진다. 모바일 단말 m에서 발생한 DNN 기반의 애플리케이션이 두 개의 계층 분할 지점이 결정되었을 때, DNN 추론 시간 및 과정은 다음과 같다. 먼저, 헤드 모델을 모바일 단말에서 처리하는데 발생하는 시간을 로 표현하고 로 계산한다. 모바일 단말에서 헤드 모델을 처리하고 나온 크기의 첫 번째 중간 데이터를 엣지 서버로 전송하는데 발생하는 시간을 로 표현하고, 통신 상태가 라 할 때, 로 계산할 수 있다. 또한, 엣지 서버 에서 중간 모델을 처리하는데 발생하는 시간을 로 표현하고 로 계산한다. 엣지 서버에서 중간 모델을 처리하고 나온 크기의 두 번째 중간 데이터를 모바일 단말로 전송하는데 발생하는 시간을 로 표현하고, 로 계산한다. 모바일 단말이 크기의 두 번째 중간 데이터를 엣지 서버로부터 전송 받으면, 테일 모델을 모 바일 단말에서 처리하게 되는데, 이 때 발생하는 처리 지연 시간을 로 표현하고, 로 계산할 수 있 다. 앞서 계산한 처리 지연 시간 및 전송 지연 시간은 첫 번째 계층 분할 지점 과 두 번째 계층 분할 지점 이 같 지 않은 경우이다. 반면, 첫 번째 계층 분할 지점과 두 번째 계층 분할 지점이 같은 경우에는 전체 DNN 모델을 모바일 단말에서 자체적으로 처리하겠다는 의미이므로, 의 값이 0 이 된다. 또한, 엣지 서버의 처리 큐는 다음과 같은 방식으로 업데이트한다. 모바일 단말 m에서 발생한 DNN 기반의 애플 리케이션이 엣지 서버에 도착하는 시점이 이고, 가 괄호안의 수식이 참이면 1, 거짓이면 0을 반환하는 표시 함수(indicator function)라고 할 때, t+1 시점에 엣지 서버의 처리 큐는 로 계산한다. 엣지 서버가 이미 처리중인 태스크가 있는 경 우에는 엣지 서버에서의 대기 시간 가 발생한다. 이하에서는 모바일 단말들이 엣지 서버로 오프로딩하는 연산량에 대한 공평성을 보장하고, 모바일 단말들의 평 균 DNN 추론 지연 시간을 최소화하기 위한 계층 분할 지점 결정에 대한 최적화 문제를 공식화 한다. 1. 목적 함수 먼저, 은 모바일 단말 m의 두 개의 계층 분할 지점이 번째 계층으로 결정되었을 때 발생하는 DNN 추론 지연 시간이다. 은 앞서 계산한 의 합으로 계산된다. 또한, 는 모바일 단말 m의 계층 분할 지점이 과 번째 계층이라면 1을, 아니라면 0의 값 을 가지게 되는 이진 결정 변수이다. 이를 기반으로 모바일 단말들의 평균 추론 지연 시간 최적화를 위한 목적 함수는 수학식 1과 같다. [수학식 1]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "2. 제약 조건 모든 모바일 단말들에 대해 첫 번째 계층 분할 지점은 최대 1 개가 존재할 수 있으므로, 수학식 2의 제약 조건 을 만족해야 한다. [수학식 2]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "모든 모바일 단말들에 대해 두 번째 계층 분할 지점은 최대 1 개가 존재할 수 있으므로, 수학식 3의 제약 조건 을 만족해야 한다. [수학식 3]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "첫 번째 계층 분할 지점은 두 번째 계층 분할 지점보다 작거나 같아야 하므로, 수학식 4의 제약 조건도 함께 만 족해야 한다. [수학식 4]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "모바일 단말 m이 엣지 서버로 오프로딩하는 연산량을 이라고 할 때, 은 수학식 5와 같은 방식으로 계산한 다. [수학식 5]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "Jain’s Fairness Index 식(R. Jain, D. Chiu, and W. Hawe, “A Quantitative Measure of Fairness and Discrimination for Resource Allocation in Shared Computer System,” in arXiv:cs/9809099, September1998.)을 기반으로 최소 보장 되어야 하는 공평성 임계치(fairness threshold) 를 설정해 주어, 모바일 단말 들이 엣지 서버로 오프로딩하는 연산량에 대한 공평성을 보장해 줄 수 있도록 수학식 6을 만족해야 한다. [수학식 6]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "는 모바일 단말 m의 첫번째 계층 분할 지점이 l번째이고, 두번째 계층 분할 지점이 l′번째 계층이라면 1을, 아니라면 0의 값을 가지게 되는 이진 결정 변수이므로, 수학식 7을 만족해야 한다. [수학식 7]"}
{"patent_id": "10-2023-0015973", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "이하에서는 모바일 단말간 공평성을 보장해주고, 모바일 단말들의 평균 DNN 추론 지연 시간을 최소화하는 최적 화 문제를 빠르고 효율적인 시간 내에 해결할 수 있는 휴리스틱 알고리즘을 설명한다. 도 3은 제안하는 휴리스틱 알고리즘의 의사 코드(pseudo code)이다. 먼저, 1번째 줄에서 모바일 단말을 컴퓨팅 자원 기준으로 오름차순으로 정렬하여, 컴퓨팅 자원이 가장 부족한 모바일 단말부터 계층 분할 지점을 결정할 수 있도록 한다. 2 번째 줄에서는 공평성 임계치(fairness threshold) 값이 주어지면, 다음과 같은 방식으로 K 값을 구한다. 모든 모바일 단말 m에 대하여, 와 를 만족할 때, Jain’s Fairness Index 는 최소 를 만족한다. 이를 바탕으로 공평성 임계치 값이 주어지면 K 값을 계산할 수 있고, 계산한 K 값을 통해 Pm에 대한 범위를 Pmin에 대한 식으로 표현할 수 있다. 변수인 Pmin을 특정 상수로 결정 해주기 위해 Pmin과 Pmax의 중앙값을 나타내는 를 정의하여 15 번째 줄과 같이 에 대해 탐색함으로써 공평성 임계치 를 만족하는 최종적인 Pm의 범위를 구한다. 다음으로는, 알고리즘에 필요한 변수를 초기화한다. Lfinal은 M 개의 모바일 단말에 대해 최종적으로 결정되는 계층 분할 지점을 저장하는 리스트 이다. Ltot은 값에 따른 M 개의 모바일 단말에 대한 계층 분할 지점을 저장하는 리스트이다. Lmd는 하나의 모바 일 단말 m이 결정할 수 있는 계층 분할 지점을 저장하는 리스트이다. 4~13 번째 줄에서는 K 값이 1인 경우에 동작하는 의사 코드이다. K 값이 1인 경우는 공정성 임계치 값이 1 인 경우로, 모든 모바일 단말들이 동일한 연산량을 엣지 서버로 오프로딩 한다. 오름차순으로 정렬된 모바일 단말 중 첫 번째 모바일 단말이 DNN 추론 지연 시간이 최소화되는 계층 분할 지점을 결정하고, 첫 번째 모바일 단말 의 결정된 계층 분할 지점을 나머지 모바일 단말도 동일하게 가질 수 있도록, 11~12 번째 줄과 같이 처리한다. 반면에, K 값이 1이 아닌 경우, 모바일 단말들의 계층 분할 지점 결정 방법은 15~33 번째 줄과 같다. 20 번째 줄은 탐색한 두 개의 계층 분할 지점이 공정성 임계치 를 만족하는지 확인하고, 만족한다면 해당 계층 분할 지점을 Lmd에 저장하여 모바일 단말 m의 후보 계층 분할 지점으로 저장한다. 하나의 모바일 단말 m에 대한 계층 분할 지점의 탐색이 종료되면, 25 번째 줄과 같이 Lmd에 저장된 후보 계층 분할 지점 중 DNN 추론 지연 시간이 최소화되는 계층 분할 지점 을 기반으로 엣지 서버의 처리 큐를 예약하고, 해당 계층 분할 지점을 Lmds에 저장한다. 엣지 서버의 처리 큐를 예약하는 방식은 도 4, 도 5와 같다. 먼저, 태스크 1과 2가 엣지 서버의 처리 큐에 먼저 예약된 상태에서, 길이가 4인 태스크 3이 시점 6에 도착했을 때, 엣지 서버의 처리 큐에 태스크 3을 연속적으로 처리할 수 있는 공간이 있으면, 도 5와 같이 태스크 3을 예약하고, 그렇지 않으면 도 4와 같이 엣지 서버의 처리 큐의 가장 뒤에 예약하게 된다. 이렇게 하나의 값에 대하여 모든 모바일 단말의 계층 분할 지점이 결정되면, Lmds를 Ltot에 저장하고, Lmds를 초기화한다. 33 번째 줄에서는 모든 값에 대하여 탐색하여 모바일 단말의 계층 분할 지점이 결정되면, Ltot에 저장된 모바일 단말의 후보 계층 분할 지점 중 DNN 추론 지연 시간의 평균이 가장 최소화되는 모바일 단말들의 계층 분할 지점 을 Lfinal에 저장하여, 모바일 단말들의 최종적인 계층 분할 지점을 결정한다. 이하에서는 공식화한 최적화 문제를 Brute-force 방식으로 최적의 해를 찾을 때와 앞서 제안한 휴리스틱 알고리 즘을 통해 해를 찾을 때의 알고리즘 복잡도를 설명한다. 먼저, Brute-force 방식으로 최적의 해를 찾을 때, 알 고리즘의 복잡도는 로 표현한다. O()는 Big-O 표기법을 나타낸다. 또한, 과 은 각 각 집합 과 에 포함된 원소의 수(모바일 단말의 개수, DNN 모델의 계층 개수)를 나타낸다. 따라서, Brute- force 방식으로 최적의 해를 찾기에는 알고리즘의 복잡도가 높아 많은 연산 시간 및 컴퓨팅 자원이 요구된다. 따라서 본 발명에서는 현실적인 시간 내에 최적의 해를 구할 수 있는 휴리스틱 알고리즘을 제안하였다. 제안하는 휴리스틱 알고리즘의 복잡도는 로 표현할 수 있다. 여기서 a는 공정성 임계치 를 만족하는 Pm의 범위를 구하기 위해, 최적의 값을 탐색하기 위한 값으로, 상수의 값을 가진다. 따라서, 지수 함 수 형태의 복잡도를 가지는 Brute-force 방식에 비해 제안한 휴리스틱 알고리즘의 복잡도는 다항 함수의 형태를 가지므로 매우 낮은 복잡도를 가지며, 빠른 시간내에 최적의 해를 구할 수 있다. 도 6은 본 발명의 일 실시예에 따른 분할 컴퓨팅 방법을 설명하기 위한 흐름도이다. 분할 컴퓨팅 방법은 계층 분할 지점 결정 방법 등으로 명명될 수도 있다. 또한, 분할 컴퓨팅 방법은 적어도 프로세서(processor) 및/또는 메모리(memory)를 포함하는 컴퓨팅 장치에 의해 수행될 수 있다. 따라서, 분할 컴퓨팅 방법의 단계들 중 적어도 일부는 컴퓨팅 장치의 프로세서의 동작으로 이해될 수도 있다. 컴퓨팅 장치는 PC(Personal Computer), 서버 (server) 등을 포함한다. 이하에서, 분할 컴퓨팅 방법을 설명함에 있어, 앞선 기재와 중복되는 내용에 관하여는 그 구체적인 설명을 생략하기로 한다. 우선, 복수의 모바일 단말들 각각으로부터 계층 분할 지점 결정 요청을 수신한다(S110). 즉, 심층 신경망 모델 을 이용한 추론 동작을 수행할 필요가 발생했을 때, 복수의 모바일 단말들 각각은 계층 분할 지점 결정 요청을 서버(분할 컴퓨팅 장치로 명명될 수도 있음)로 송신할 수 있다. 이때, 복수의 모바일 단말들 각각에는 동일한 심층 신경망 모델(학습이 완료된 모델을 의미할 수 있음)이 저장되어 있거나, 또는 상이한 심층 신경망 모델이 저장되어 있을 수 있다. 다음으로, 모바일 단말들 각각에 대한 계층 분할 지점을 도출하고, 도출된 계층 분할 지점에 대한 정보를 각 모 바일 단말로 전송할 수 있다(S120). 이때, 계층 분할 지점은 모바일 단말 별로 상이하거나 동일할 수 있다. 계 층 분할 지점은 앞서 기재한, 목적 함수와 적어도 하나의 제약 조건을 이용한 최적화 문제의 풀이와 제안한 알 고리즘을 이용하여 도출될 수 있다. 계층 분할 지점에 대한 정보를 수신한 각 모바일 단말들 각각은 수신된 계층 분할 지점에 대응하는 헤드 모델에 대한 추론을 수행하고, 추론 수행의 결과물인 제1 중간 데이터를 서버로 송신할 수 있다(S130). 이때, 각 모바 일 단말은 자신의 계층 분할 지점에 맞는 헤드 모델에 대한 추론 동작을 수행한다. 따라서, 각 모바일 단말에는 임의의 계층 분할 지점에 대응하는 모델들이 미리 저장되어 있을 수 있다. 제1 중간 데이터를 수신한 서버는 제1 중단 데이터를 중간 모델에 입력함으로써 추론 동작을 수행할 수 있다 (S140). 서버에 의한 추론 동작의 결과로써, 제2 중간 데이터가 획득될 수 있고, 제2 중간 데이터는 대응되는 각 모바일 단말로 송신될 수 있다. 마지막으로, 각 모바일 단말은 서버로부터 수신한 제2 중간 데이터를 테일 모델에 입력함으로써, 최종 결과를 도출할 수 있다. 본 명세서에서 언급된 심층 신경망은 임의의 인공 신경망을 의미할 수 있으며, 본 발명의 권리범위가 인공 신경 망의 종류에 제한되는 것이 아님은 명백하다. 하나의 예로써, 심층 신경망은 FSRCNN(Fast Super-Resolution Convolution Neural Network)일 수 있다. 이상에서 설명된 장치는 하드웨어 구성 요소, 소프트웨어 구성 요소, 및/또는 하드웨어 구성 요소 및 소프트웨 어 구성 요소의 집합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성 요소는, 예를 들어, 프로세서, 콘트롤러, ALU(Arithmetic Logic Unit), 디지털 신호 프로세서(Digital Signal Processor), 마이크 로컴퓨터, FPA(Field Programmable array), PLU(Programmable Logic Unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(Operation System, OS) 및 상기 운영 체제 상에서수행되는 하나 이상의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응 답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사 용되는 것으로 설명된 경우도 있지만, 해당 기술 분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처 리 요소(Processing Element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (Parallel Processor)와 같은, 다른 처리 구성(Processing Configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(Computer Program), 코드(Code), 명령(Instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (Collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성 요소(Component), 물리적 장치, 가상 장치(Virtual Equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(Signal Wave)에 영구적으로, 또는 일시적으로 구체화(Embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매 체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(Magnetic Media), CD- ROM, DVD와 같은 광기록 매체(Optical Media), 플롭티컬 디스크(Floptical Disk)와 같은 자기-광 매체 (Magneto-optical Media), 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계 어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상 기된 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다. 본 발명은 도면에 도시된 실시예를 참고로 설명되었으나 이는 예시적인 것에 불과하며, 본 기술 분야의 통상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시예가 가능하다는 점을 이해할 것이다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성 요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성 요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 따라서, 본 발명의 진정한 기술적 보호 범위는 첨부된 등록청구범 위의 기술적 사상에 의해 정해져야 할 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2023-0015973", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 상세한 설명에서 인용되는 도면을 보다 충분히 이해하기 위하여 각 도면의 상세한 설명이 제공된다. 도 1은 본 발명에서 제안하는 분할 컴퓨팅 시스템을 도시한다. 도 2는 두 개의 계층 분할 지점이 결정된 DNN 모델을 도시한다. 도 3은 계층 분할 지점 결정 알고리즘의 수도 코드를 도시한다. 도 4는 엣지 서버 처리 큐의 예약 예시1을 나타낸다. 도 5는 엣지 서버 처리 큐의 예약 예시2를 나타낸다. 도 6은 본 발명의 일 실시예에 따른 분할 컴퓨팅 방법을 설명하기 위한 흐름도이다."}
