{"patent_id": "10-2021-0189602", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0070991", "출원번호": "10-2021-0189602", "발명의 명칭": "전자 장치 및 어플리케이션 패키지 관리 방법", "출원인": "삼성전자주식회사", "발명자": "오명진"}}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,통신 인터페이스;메모리; 및 프로세서를 포함하며,상기 프로세서는어플리케이션 패키지(application package)의 생성 과정에서 상기 어플리케이션 패키지 상에 기입된 제1식별 정보를 획득하고,상기 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하고,상기 제1식별 정보 및 상기 제2식별 정보에 기반하여 인증 정보를 생성하고,상기 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 제1식별 정보는상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보, 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는 링크 정보 및 상기 어플리케이션이 상기 전자 장치가 특정 국가에 위치할 때 다운로드되는지에 대응하는 국가 정보 중 적어도 어느 하나를 포함하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2항에 있어서,상기 인스톨러 정보는 상기 어플리케이션의 설치 과정에서 이용되는 앱 스토어(app store)를 지시하는 정보를포함하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항에 있어서,상기 제2식별 정보는상기 통신 인터페이스를 이용하여 수신된 상기 어플리케이션 패키지의 다운로드 경로를 포함하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4항에 있어서,상기 어플리케이션 패키지의 다운로드 경로는공개특허 10-2023-0070991-3-상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보, 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는 링크 정보 및 상기 어플리케이션이 상기 전자 장치가 특정 국가에 위치할 때 다운로드되었는지에 대응하는 국가 정보 중 적어도 어느 하나를 포함하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항에 있어서,상기 프로세서는상기 제1식별 정보에 상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 인스톨러 정보와 비교하고,상기 제1식별 정보 상의 상기 인스톨러 정보와 상기 제2식별 정보 상의 상기 인스톨러 정보가 일치함에 대응하여 상기 어플리케이션의 설치를 허용하도록 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6항에 있어서,상기 프로세서는상기 제1식별 정보 상의 상기 인스톨러 정보와 상기 제2식별 정보 상의 상기 인스톨러 정보가 일치하지 않음에대응하여 상기 어플리케이션의 설치를 허용하지 않도록 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서,상기 프로세서는상기 인스톨러 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의설치가 가능하도록 적절한 설치 경로를 가이드하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1항에 있어서,상기 프로세서는상기 제1식별 정보에 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는링크 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 링크 정보와 비교하고,상기 제1식별 정보 상의 상기 링크 정보와 상기 제2식별 정보 상의 상기 링크 정보가 일치함에 대응하여 상기어플리케이션의 설치를 허용하도록 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9항에 있어서,상기 프로세서는상기 제1식별 정보 상의 상기 링크 정보와 상기 제2식별 정보 상의 상기 링크 정보가 일치하지 않음에 대응하여상기 어플리케이션의 설치를 허용하지 않도록 제어하는 전자 장치.공개특허 10-2023-0070991-4-청구항 11 제 10항에 있어서,상기 프로세서는상기 링크 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1항에 있어서,상기 프로세서는상기 제1식별 정보에 상기 국가 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 국가 정보와 비교하고,상기 제1식별 정보 상의 상기 국가 정보와 상기 제2식별 정보 상의 상기 국가 정보가 일치함에 대응하여 상기어플리케이션의 설치를 허용하도록 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12항에 있어서,상기 프로세서는상기 제1식별 정보 상의 상기 국가 정보와 상기 제2식별 정보 상의 상기 국가 정보가 일치하지 않음에 대응하여상기 어플리케이션의 설치를 허용하지 않도록 제어하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13항에 있어서,상기 프로세서는상기 국가 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 전자 장치."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "전자 장치의 어플리케이션 패키지 관리 방법에 있어서,상기 어플리케이션 패키지(application package) 상에 기입된 제1식별 정보를 획득하는 동작;상기 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하는 동작;상기 제1식별 정보 및 상기 제2식별 정보에 기반하여 인증 정보를 생성하는 동작;및상기 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15항에 있어서,공개특허 10-2023-0070991-5-상기 제1식별 정보는상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되었는지에 대응하는 인스톨러 정보, 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는 링크 정보 및 상기 어플리케이션이 상기 전자 장치가 특정 국가에 위치할 때 다운로드되는지에 대응하는 국가 정보 중 적어도 어느 하나를 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15항에 있어서,상기 제2식별 정보는통신 인터페이스를 이용하여 수신된 상기 어플리케이션 패키지의 다운로드 경로를 포함하고,상기 어플리케이션 패키지의 다운로드 경로는상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보, 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는 링크 정보 및 상기 어플리케이션이 상기 전자 장치가 특정 국가에 위치할 때 다운로드되는지에 대응하는 국가 정보 중 적어도 어느 하나를 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 15항에 있어서,상기 제1식별 정보 및 상기 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은상기 제1식별 정보에 상기 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 인스톨러 정보와 비교하는 동작을 포함하고,상기 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은상기 제1식별 정보 상의 상기 인스톨러 정보와 상기 제2식별 정보 상의 상기 인스톨러 정보가 일치함에 대응하여 상기 어플리케이션의 설치를 허용하도록 제어하는 동작;상기 제1식별 정보 상의 상기 인스톨러 정보와 상기 제2식별 정보 상의 상기 인스톨러 정보가 일치하지 않음에대응하여 상기 어플리케이션의 설치를 허용하지 않도록 제어하는 동작;및상기 인스톨러 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 15항에 있어서,상기 제1식별 정보 및 상기 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은상기 제1식별 정보에 상기 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드 되는지에 대응하는 링크 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 링크 정보와 비교하는 동작을포함하고,상기 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은상기 제1식별 정보 상의 상기 링크 정보와 상기 제2식별 정보 상의 상기 링크 정보가 일치함에 대응하여 상기어플리케이션의 설치를 허용하도록 제어하는 동작;상기 제1식별 정보 상의 상기 링크 정보와 상기 제2식별 정보 상의 상기 링크 정보가 일치하지 않음에 대응하여공개특허 10-2023-0070991-6-상기 어플리케이션의 설치를 허용하지 않도록 제어하는 동작;및상기 링크 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 15항에 있어서,상기 제1식별 정보 및 상기 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은상기 제1식별 정보에 상기 국가 정보가 포함된 것을 확인함에 대응하여 상기 제2식별 정보 상의 국가 정보와 비교하는 동작을 포함하고,상기 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은상기 제1식별 정보 상의 상기 국가 정보와 상기 제2식별 정보 상의 상기 국가 정보가 일치함에 대응하여 상기어플리케이션의 설치를 허용하도록 제어하는 동작;상기 제1식별 정보 상의 상기 국가 정보와 상기 제2식별 정보 상의 상기 국가 정보가 일치하지 않음에 대응하여상기 어플리케이션의 설치를 허용하지 않도록 제어하는 동작;및상기 국가 정보가 일치하지 않아 상기 어플리케이션의 설치가 불가능함을 가이드하고, 상기 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치는 통신 인터페이스, 메모리 및 프로세서를 포함하며, 프로세서는 어플리케이 션 패키지(application package)의 생성 과정에서 어플리케이션 패키지 상에 기입된 제1식별 정보를 획득하고, 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하고, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하고, 인증 정보에 기반하여 어플리케이션의 설치를 제어할 수 있 다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서는 전자 장치에 관한 것이며, 특히, 어플리케이션 패키지를 포함하는 전자 장치 및 그의 어플리케이션 패키지 관리 방법에 대한 내용을 포함할 수 있다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이동통신 기술 및 프로세서 기술의 발달에 따라 휴대용 단말 장치(이하, 전자 장치)는 종래의 통화 기능에서 나 아가 다양한 기능을 구비하게 되었다. 전자 장치의 다양한 기능들은 예를 들어, 카메라 기능, 멀티 미디어 재생 기능, 다양한 어플리케이션 실행 등을 들 수 있으며, 이러한 다양한 기능들을 실행하기 위해 전자 장치는 고사 양의 하드웨어 및 소프트웨어 들을 구비하게 되고, 이에 따라 전자 장치의 가격이 높아지고 있다. 전자 장치의 제조사 및 통신사 등은 전자 장치의 식별 정보를 이용해 다양한 서비스를 제공할 수 있다. 예를 들 어, OTA(over the air) 등의 무선 방식으로 전자 장치의 펌웨어(firmware) 또는 운영체제를 업데이트 할 수 있 다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "안드로이드 어플리케이션은 다양한 경로를 통해 전파 및 설치할 수 있다. 이러한 다양한 출처를 허용하는 안드 로이드 정책은 개발 편이 및 비즈니스 유연성등 장점으로 작용될 수 있으나, 개발자(판매자)의 의도치 않은 설 치 경로는 어플리케이션 패키지(APK)의 자산 보호를 어렵게 하고 단말의 보안성을 해치는 결과를 초래할 수 있 다. 안드로이드에서는 단말 내 설치된 어플리케이션 패키지(APK)의 원본 추출이 손쉽게 가능하여 추출된 어플리 케이션 패키지(APK)가 다양한 경로를 통해 다시 설치될 수 있다. 이 경우 개발자(판매자) 입장에서는 지정된 유 통 경로를 보장할 수 없게 되어 어플리케이션 패키지(APK)의 유출 및 배포에 대한 대응이 어려워질 수 있다. 또 한, 지정된 유통 경로를 보장할 수 없게 되어 유료 앱의 과금 체계를 복잡하게 만들 수 있다. 개발 중인 어플리케이션 패키지(APK)가 특정 웹 사이트에 업로드 되어 유통 될 수 있다면 어플리케이션의 주요 정보가 유출되는 결과를 초래해 심각한 자산 침해가 발생할 수 있다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치는 통신 인터페이스, 메모리 및 프로세서를 포함하며, 프로세서는 어플리케이 션 패키지(application package)의 생성 과정에서 어플리케이션 패키지 상에 기입된 제1식별 정보를 획득하고, 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하고, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하고, 인증 정보에 기반하여 어플리케이션의 설치를 제어할 수 있 다. 다양한 실시예들에 따른 전자 장치의 어플리케이션 패키지 관리 방법은 어플리케이션 패키지(application package) 상에 기입된 제1식별 정보를 획득하는 동작, 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하는 동작, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하는 동작 및 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치 및 어플리케이션 패키지 관리 방법을 이용하여 개발자(판매자)는 사전에 어 플리케이션 패키지(APK)의 설치 경로를 유효하게 설정할 수 있다. 개발자가 지정한 곳에서만 어플리케이션 패키 지(APK)가 유통되면 단말에서 원본 어플리케이션 패키지(APK)를 추출 가능한 현재 안드로이드 체계에서 어플리 케이션 패키지(APK) 자산을 보호할 수 있다. 또한, 단말 내 원본 어플리케이션 패키지(APK)를 추출하여 유포하는 행위를 사전에 차단할 수 있고, 유상 어플 리케이션의 다운로드 횟수를 정확하게 측정하여 과금을 산정할 수 있다."}
{"patent_id": "10-2021-0189602", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴 퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다.모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2a 및 2b는 비교 실시예에 따른 어플리케이션의 배포 과정을 도시한 것이다. 일 실시예에 따르면, 어플리케이션은 다양한 경로를 거쳐 단말로 설치될 수 있다. 개발자는 어플리케이션 패키 지(APK, android application package) 파일을 생성하고, 다양한 수단을 이용하여 사용자의 전자 장치로 전달할 수 있다. 사용자의 전자 장치는 앞서 도 1에서 설명된 전자 장치의 구조 및/또는 기능을 포함 할 수 있다. 예를 들어, 도 2a의 그림 210처럼, 개발자에 의해 개발된 어플리케이션은 적어도 하나의 스토어를 이용하여, 업 로드(upload)될 수 있다. 동작 211에서, 어플리케이션 패키지(APK, android application package)는 어플리케 이션 개발 과정에서 생성될 수 있다. 이후 동작 213에서, 어플리케이션 패키지는 적어도 하나의 스토어(예: A 스토어, B스토어 및 C스토어) 상에 업로드 될 수 있다. 동작 215에서, 전자 장치는 적어도 하나의 스토어(예: A스토어, B스토어 및 C스토어)를 이용하여 어플리케이션을 다운로드할 수 있 다. 이후 동작 217에서, 전자 장치는 어플리케이션을 다운로드 받은 스토어 어플리케이션(예: A스토어 어 플리케이션, B스토어 어플리케이션 및 C스토어 어플리케이션)를 이용하여 어플리케이션 패키지 파일을 전자 장치 내에 설치할 수 있다. 이 때 설치 과정에 이용된 스토어 어플리케이션(예: A스토어 어플 리케이션, B스토어 어플리케이션 및 C스토어 어플리케이션)은 인스톨러(installer)로 지칭될 수 있다. 도 2a의 그림 220처럼, 어플리케이션은 스토어가 아닌 특정 서버(예: 웹 서버)를 이용하여 업로드(uploa d)될 수 있다. 이 때 특정 서버는 개발사 자체 서버를 포함할 수 있으나 이에 한정된 것은 아니다. 동작 221에서, 어플리케이션 패키지(APK, android application package)는 어플리케이션으로 개발 과정에서 생성될 수 있 다. 이후 동작 223에서, 어플리케이션 패키지는 적어도 하나의 서버(예: 웹 서버) 상에 업로드 될 수 있다. 또는 어플리케이션 패키지는 적어도 하나의 서버(예: 웹 서버) 상에 등록될 수 있다. 동작 225에서, 전자 장치는 개발자에 의해 설정된 서버(예: 웹 서버) 상으로 어플리케이션 파일을 요청할 수 있다. 동작 227에서, 요청을 받은 서버(예: 웹 서버) 는 전자 장치 상에서 어플리케이션을 다운로 드 받을 수 있도록 제어할 수 있다. 이후 동작 229에서, 전자 장치는 링크(예: 제1브라우저 또는 제2 브라우저)를 이용하여 다운로드 받은 어플리케이션 패키지 파일을 단말 내 설치할 수 있다. 일 실시예에 따르면, 전자 장치는 개발자에 의해 설정된 서버 상으로 어플리케이션 파일을 요청할 수 있다. 요청을 받은 서버는 전자 장치 상에서 어플리케이션을 다운로드 받을 수 있도록 제어할 수 있다. 전자 장치는 어플리케이션의 다운로드 후 사용자에게 어플리케이션의 다운로드 완료 상황을 공유하고, 어 플리케이션의 설치 여부를 확인하고, 사용자의 선택(예: 터치 입력을 이용하여 어플리케이션 설치 확인 또는 취 소)에 대응하여 어플리케이션 패키지를 단말 내에 설치하거나 또는 삭제할 수 있다. 도 2b에 따르면, 동작 231에서, 어플리케이션 패키지(APK, android application package)는 어플리케이션으로 부터 별도로 추출 또는 생성될 수 있다. 이후 동작 233에서, 전자 장치는 적어도 하나의 스토어(예: A스토 어, B스토어 및 C스토어)를 이용하거나 또는 적어도 하나의 서버(예: 웹 서버)를 이용하여 어플리케이션을 다운로드할 수 있다. 이후 동작 235에서, 전자 장치는 어플리케이션을 다운로드 받은 스토 어 어플리케이션(예: A스토어 어플리케이션, B스토어 어플리케이션 및 C스토어 어플리케이션) 또는 링크(예: 제1브라우저, 제2브라우저)를 이용하여 어플리케이션 패키지 파일을 전자 장치 내에 설치할 수 있다. 전자 장치는 side loading을 허용하는 안드로이드의 환경의 특성 상 개발자가 업로드하지 않은 또는 의도 하지 않은 서버를 통해 어플리케이션 패키지(APK)를 수신하고, 수신한 어플리케이션 패키지를 이용하여 어플리 케이션을 설치할 수 있다. side loading은 어플리케이션의 개발자가 의도하지 않은 경로로 어플리케이션을 다운 로드 받는 동작을 의미할 수 있다. 이 경우, 다양한 출처를 허용하는 안드로이드 정책은 개발 편이 및 비즈니스 유연성 등 장점으로 작용될 수 있으나, 개발자(판매자)가 의도하지 않은 설치 경로로 인해 어플리케이션 패키지 (APK)의 자산 보호를 어렵게 하고 전자 장치의 보안성을 해치는 결과를 초래할 수 있다. 본 문서에 따른 다양한 실시예들에 따른 전자 장치는 개발자가 어플리케이션 패키지(APK)의 유통 출처를 어플리 케이션 패키지(APK) 내부에 직접 설정할 수 있도록 제어하고, 개발자에 의해 설정된 출처와 어플리케이션의 실 제 설치 경로를 비교하여 어플리케이션의 설치를 제어할 수 있다. 또한, 전자 장치는 어플리케이션의 설치를 차 단하는 경우 차단 사유를 사용자에게 가이드할 수 있다. 이하에서는 이러한 전자 장치의 구성 및 전자 장치의 어플리케이션 패키지 관리 방법에 대해 설명될 것이다. 도 3은 다양한 실시예들에 따른 전자 장치의 구성을 블록도로 나타낸 것이다. 다양한 실시예들에 따르면, 전자 장치는 프로세서, 메모리 및 통신 인터페이스를 포함할 수 있으며, 도시된 구성 중 일부가 생략 또는 치환될 수도 있다. 전자 장치는 도 1의 전자 장치의 구 성 및/또는 기능 중 적어도 일부를 더 포함할 수 있다. 도시된(또는 도시되지 않은) 전자 장치의 각 구성 중 적 어도 일부는 상호 작동적으로(operatively), 기능적으로(functionally) 및/또는 전기적으로 (electrically) 연 결될 수 있다. 다양한 실시예에 따르면, 프로세서는 전자 장치의 각 구성 요소들의 제어 및/또는 통신에 관한 연산 이나 데이터 처리를 수행할 수 있는 구성으로써, 하나 이상의 프로세서들로 구성될 수 있다. 프로세서는 도 1의 프로세서의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서가 전자 장치 상에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한 정됨이 없을 것이나, 이하에서는 어플리케이션 패키지(APK) 내의 출처 정보를 이용하여 어플리케이션의 설치 과 정을 제어하는 동작에 관련된 특징에 대해 상세히 설명하기로 한다. 프로세서의 동작들은 메모리에 저장된 인스트럭션들을 로딩(loading)함으로써 수행될 수 있다. 다양한 실시예에 따르면, 전자 장치는 하나 이상의 메모리를 포함하며, 메모리는 메인 메모리 (main memory) 및 스토리지(storage)를 포함할 수 있다. 메인 메모리는 DRAM(dynamic random access memory), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM) 등 휘발성 메모리로 구성될 수 있다. 또는 메모리는 비휘발성 메모리(non-volatile memory)로써, 대용량의 스토리지(storage) 장치를 포함할 수 있다. 스 토리지(storage)는 OTPROM(one time programmable ROM), PROM, EPROM, EEPROM, mask ROM, flash ROM, 플래시 메모리, 하드 드라이브, 또는 솔리드 스테이트 드라이브 (SSD) 중 적어도 하나를 포함할 수 있다. 메모리 는 다양한 파일 데이터들을 저장할 수 있으며, 프로세서의 동작에 따라 저장된 파일 데이터들은 업데이트 될 수 있다. 다양한 실시예들에 따르면, 통신 인터페이스는 외부 장치와의 데이터 송수신을 위한 유선 또는 무선 인터 페이스 기능을 수행할 수 있다. 통신 인터페이스는 외부 서버, 웹 브라우저 또는 어플리케이션 스토어 중 적어도 어느 하나로부터 어플리케이션과 관련된 파일(예: 어플리케이션 패키지(apk))을 다운로 드할 수 있다. 이 때 웹 브라우저는 어플리케이션 스토어와는 달리 전자 장치 내에 설치된 것은 아닐 수 있으며, 외부 서버에 포함되거나 또는 외부 서버의 일종으로 이해될 수 있다. 도 4는 다양한 실시예들에 따른 전자 장치의 세부 구성을 도시한 것이다. 다양한 실시예들에 따르면, 전자 장치(예: 도 3의 전자 장치)는 인스톨러, 패키지 매니저(package manager), 패키지 파서(package parser), 소스 체커(source checker), 파일 매니저(file manager), 텔레퍼니 매니저(telephony maneger) 및 패일 리포트 매니저(fail report manager) 을 포함할 수 있다. 도 4에 도시된 구성들은 전자 장치의 프로세서 상에서 동작하는 소프트웨어적인 구성일 수 있다. 또 는, 다양한 실시예에 따라, 도 4에 도시된 구성들은 별도의 하드웨어적인 구성으로 구현될 수도 있다. 인스톨러 , 패키지 매니저(package manager), 패키지 파서(package parser), 소스 체커(source checker), 파일 매니저(file manager), 텔레퍼니 매니저(telephony maneger) 및 패일 리포트 매니저(fail report manager)는 소프트웨어적인 구성일 수 있으며, 전자 장치의 프로세서 상에 서 동작될 수 있다. 인스톨러는 어플리케이션 패키지(APK)를 전자 장치 상에 설치하도록 제어할 수 있다. 일 실시예에 따 르면, 인스톨러는 플레이스토어(play store) 또는 갤럭시 스토어(galaxy store)와 같은 스토어 앱(app)을 포함할 수 있으며, 인스톨러가 포함할 수 있는 스토어 앱의 종류는 이것으로 한정되는 것은 아니다. 또한, 인스톨러는 파일을 다운로드 받은 링크(예: 브라우저) 또는 전자 장치 내 파일 관리 앱(app)을 포함 할 수 있다. 또는, 인스톨러는 android debug bridge(adb)를 포함할 수 있다. android debug bridge는 안 드로이드 시스템 상에서 작동하는 디버깅 툴(debugging tool)을 의미할 수 있다. 패키지 매니저(package manager)는, 어플리케이션 패키지(apk)를 전자 장치 상에 설치할 때, 어플리 케이션의 정보를 전자 장치 상에 등록하도록 제어할 수 있다. 또는 패키지 매니저(package manager) 는 어플리케이션 패키지를 전자 장치 상에서 삭제할 때 어플리케이션의 정보를 전자 장치 상에서 삭 제하도록 제어할 수 있다. 패키지 파서(package parser)는 어플리케이션 패키지(APK)의 설치 과정에서 어플리케이션 패키지(APK)에 포함된 복수의 파일들 중 적어도 일부 파일에 접근하고, 접근한 파일에서 데이터를 추출할 수 있다. 예를 들어, 패키지 파서(package parser)는 어플리케이션 패키지(APK) 내부 파일(예: androidmanifest.xml)의 권한 정보를 획득하거나 또는 특정 DB에 삽입하도록 제어할 수 있다. 전자 장치는 권한 정보가 삽입된 특정 DB 를 참조하여 어플리케이션 설치 과정을 진행할 수 있다. 일 실시예에 따르면, 패키지 파서(package parser)는 어플리케이션 패키지(APK) 내에 개발자가 의도한 출처 정보가 존재하는지 확인함에 대응하여 소 스 체커(source checker)로 출처 정보를 전달할 수 있다. 소스 체커(source checker)는 패키지 파서(package parser)로부터 전달 받은 개발자가 설정한 출처 정보와 실제 어플리케이션 패키지(APK)가 설치되는 과정의 출처 정보를 비교할 수 있다. 이하에서는 개발자가 설정한 출처 정보는 '개발자 출처 정보'또는 '제1식별 정보'로 지칭될 수 있고, 실제 어플리케이션 패키지(AP K)가 설치되는 과정의 출처 정보는 전자 장치를 통해 확인되는 '단말 출처 정보', '앱 출처 정보' 또는 '제2식 별 정보'로 지칭될 수 있다. 소스 체커(source checker)는 개발자가 설정한 출처 정보(이하 개발자 출처 정보)와 실제 어플리케이션 패키지(APK)가 설치되는 과정에서 획득한 출처 정보(이하 단말 출처 정보)를 비교하 여 어플리케이션의 설치 과정을 제어할 수 있다. 예를 들어, 전자 장치는 어플리케이션의 출처 정보를 이 용하여 어플리케이션이 특정 스토어를 통해서 설치되거나 또는 특정 스토어를 통해서 설치되지 않도록 설치 여부를 결정할 수 있다. 소스 체커(source checker)는 어플리케이션이 특정 스토어를 통해서 설치되거나 또는 특정 스토어를 통해 서 설치되지 않도록 제어하는 개발자가 설정한 출처 정보에 기초하여 어플리케이션의 설치 과정을 제어할 수 있 다. 예를 들면, 소스 체커는, 개발자가 설정한 출처 정보 및 어플리케이션 패키지가 설치되는 과정에서 획 득한 출처 정보를 비교하고, 개발자가 설정한 출처 정보 및 어플리케이션 패키지가 설치되는 과정에서 획득한 출처 정보가 일치함에 기반하여 어플리케이션이 전자 장치 상에서 설치되도록 허용할 수 있다. 또는, 소스 체커는, 개발자가 설정한 출처 정보 및 어플리케이션 패키지가 설치되는 과정에서 획득한 출처 정보를 비 교하고, 개발자가 설정한 출처 정보 및 어플리케이션 패키지가 설치되는 과정에서 획득한 출처 정보가 일치하지 않음에 기반하여 어플리케이션이 전자 장치 상에서 설치되지 않도록 할 수 있다. 이하에서 개발자가 설정 한 출처 정보는 제1식별 정보로 지칭될 수 있다. 파일 매니저(file manager)는 어플리케이션 패키지(APK)의 다운로드 경로를 포함하는 정보를 저장 또는 관 리할 수 있다. 예를 들어, 파일 매니저(file manager)는 링크(예: 브라우저)를 통해 어플리케이션 패키지 (APK)가 다운로드 되는 경우 파일 매니저의 DB 상에 어플리케이션 패키지(APK)의 생성 및/또는 다운로드 경로를 포함하는 정보를 삽입시킬 수 있다. 텔레퍼니 매니저(telephony maneger)는 전자 장치에 연결된 usim(universal subscriber identity module)의 정보를 기반으로 어플리케이션 패키지(APK)가 다운로드된 국가 정보 또는 국가 코드를 획득할 수 있 다. 패일 리포트 매니저(fail report manager)는 개발자 출처 정보와 단말 출처 정보가 달라 어플리케이션의 설치에 실패한 경우, 개발자가 사전에 설정한 에러 문구(예: <본 어플리케이션은 아래 링크에서 최신 버전을 다 운로드 받을 수 있습니다>, <해당 스토어에서는 본 어플리케이션의 설치가 불가능합니다>)가 전자 장치 상 에 표시되도록 제어할 수 있다. 도 5는 다양한 실시예들에 따른 전자 장치가 어플리케이션 패키지 설치 시 인증 정보를 생성하는 방법의 흐름도 이다. 도 5를 통하여 설명되는 동작들은 컴퓨터 기록 매체 또는 메모리(도 3의 320)에 저장될 수 있는 인스트럭션들 을 기반으로 구현될 수 있다. 도 5에 도시된 방법은 앞서 도 1 내지 도 4를 통해 설명한 전자 장치(예: 도 3의 전자 장치)에 의해 실행될 수 있으며, 앞서 설명한 바 있는 기술적 특징은 이하에서 생략하기로 한다. 인스톨러, 패키지 매니저(package manager), 패키지 파서(package parser), 소스 체커(source checker), 파일 매니저(file manager), 텔레퍼니 매니저(telephony maneger) 및 패일 리포트 매니저(fail report manager)는 소프트웨어적인 구성일 수 있으며, 전자 장치의 프로세서 상에 서 동작될 수 있다. 동작 501에서 인스톨러는 어플리케이션의 설치 이벤트 또는 설치 요청을 확인하고, 패키지 매니저(package manager)에 어플리케이션의 설치를 요청할 수 있다. 동작 503에서, 패키지 매니저(package manager)는 패키지 파서(package parser)에 설치하려는 어플 리케이션의 어플리케이션 패키지(APK) 정보 추출을 요청할 수 있다. 동작 505에서, 패키지 파서(package parser)는 패키지 매니저(package manager)로부터 전송된 어플 리케이션 패키지(APK) 정보 추출 요청에 대응하여 어플리케이션 패키지(APK) 내 파일을 읽고, 어플리케이션의 설치에 필요한 정보를 수집할 수 있다. 이 때, 패키지 파서(package parser)는 어플리케이션 패키지(APK) 내에 개발자 출처 정보가 포함된 것을 확인함에 대응하여, 소스 체커(source checker)로 개발자 출처 정보 를 전달할 수 있다. 개발자 출처 정보는 개발자가 설정한 출처 정보를 의미할 수 있으며, 이는 도 4에서 설명된 바 있다. 소스 체커(source checker)는 패키지 파서(package parser)로부터 전달받은 개발자 출처 정보에 기 반하여 실제로 어플리케이션이 다운로드되는 경로가 개발자의 의도와 일치하는지 확인할 수 있다. 예를 들어, 개발자 출처 정보 상에 어플리케이션을 설치하는 인스톨러의 정보가 포함된 경우 소스 체커(source checker)는 동작 507에서 인스톨러 상으로 정보를 요청할 수 있다. 이후 소스 체커(source checke r)는 동작 509에서 어플리케이션을 설치하는 인스톨러와 관련된 정보를 수신할 수 있다. 일 실시예에 따르면,인스톨러는 플레이스토어(play store) 또는 갤럭시 스토어(galaxy store)와 같은 스토어 앱(app)을 포함할 수 있으며, 인스톨러가 포함할 수 있는 스토어 앱의 종류는 이것으로 한정되는 것은 아니다. 전자 장치 는 개발자 출처 정보에 기초하여 특정 어플리케이션에 대해 특정 인스톨러를 이용해 설치되거나 또는 특정 인스톨러를 이용하여 설치되지 않도록 결정할 수 있다. 이 경우 프로세서(예: 도 3의 프로세서)는 동작 507 및 동작 509를 통해 어플리케이션의 설치를 진행하는 인스톨러에 대한 정보를 획득할 수 있다. 동작 511에서 소스 체커(source checker)는 파일 매니저(file manager)에 파일을 다운로드 받은 링 크(예: 도 3의 웹 브라우저)에 대한 정보를 요청할 수 있다. 여기서 웹 브라우저는 어플리케이션이 다운로드 된 경로 중 하나를 의미할 수 있다. 웹 브라우저는 외부 서버(예: 도 3의 외부 서버)에 포 함될 수 있다. 동작 513에서 소스 체커(source checker)는 파일 매니저(file manager)로부터 어플리 케이션이 다운로드 된 링크(예: 웹 브라우저)에 대한 정보를 획득할 수 있다. 소스 체커(source checker)는 패키지 파서(package parser)로부터 전달 받은 개발자 출처 정보 상에 링크에 대한 정보 가 포함된 경우 동작 511 및 동작 513을 진행하도록 제어할 수 있다. 예를 들어, 프로세서(예: 도 3의 프로세서 )는 특정 어플리케이션에 대해 특정 링크를 통해 다운로드된 경우에만 설치하거나 또는 특정 링크에서 다 운로드 된 경우 어플리케이션의 설치를 차단하도록 설정할 수 있다. 이 경우 프로세서는 동작 511 및 동작 513를 통해 어플리케이션을 다운로드 받은 링크에 대한 정보를 획득할 수 있다. 소스 체커(source checker)는 동작 515 및 동작 517에서 텔레퍼니 매니저(telephony maneger)에 어 플리케이션이 다운로드 된 국가에 대한 정보를 요청 및 획득할 수 있다. 소스 체커(source checker)는 패 키지 파서(package parser)로부터 전달 받은 개발자 출처 정보 상에 어플리케이션이 다운로드 된 국가에 대한 정보가 포함된 경우 동작 515 및 동작 517을 진행하도록 제어할 수 있다. 예를 들어, 프로세서는 특 정 어플리케이션에 대해 특정 국가에서 다운로드 된 경우만 설치하거나 또는 특정 국가에서 다운로드 된 경우 어플리케이션의 설치를 차단하도록 설정할 수 있다. 이 경우 프로세서(예: 도 3의 프로세서)는 동작 515 및 동작 517를 통해 어플리케이션을 다운로드 받은 국가에 대한 정보를 획득할 수 있다. 소스 체커(source checker)는 패키지 파서(package parser)로부터 개발자 출처 정보를 전달 받고, 개발자 출처 정보 상에 어플리케이션을 설치하는 인스톨러의 정보가 포함된 경우 동작 507 및 동작 509를 진행 하여 어플리케이션의 설치를 진행하는 인스톨러에 대한 정보를 획득할 수 있다. 또한, 소스 체커(source checker)는 개발자 출처 정보 상에 어플리케이션이 다운로드 된 링크에 대한 정보 가 포함된 경우 동작 511 및 동작 513를 진행하여 어플리케이션을 다운로드 받은 링크에 대한 정보를 획득할 수 있다. 또한, 소스 체커(source checker)는 개발자 출처 정보 상에 어플리케이션이 다운로드 된 국가에 대한 정보 가 포함된 경우 동작 515 및 동작 517를 진행하여 어플리케이션을 다운로드 받은 국가에 대한 정보를 획득할 수 있다. 소스 체커(source checker)는 동작 519에서 어플리케이션의 설치와 관련된 정보(예: 어플리케이션의 설치 가 실패했는지 여부)를 패키지 매니저(package manager)로 전달할 수 있다. 패키지 매니저(package manager)는 소스 체커(source checker)로부터 어플리케이션의 설치와 관련된 정보를 전달 받고, 어플 리케이션의 설치가 실패한 경우, 어플리케이션의 설치 실패 사유(예: 특정 어플리케이션 스토어를 이용하 여 어플리케이션을 다운로드받지 않은 경우)를 패일 리포트 매니저(fali report manager)로 전달할 수 있 다. 이 때 소스 체커(source checker)는 개발자 출처 정보 및 단말 출처 정보를 비교하여 어플리케이션의 설치 과정을 제어할 수 있다. 일 실시예에 따르면, 어플리케이션 패키지(APK)가 전자 장치 상으로 유입되는 경로는 다양하게 존재할 수 있다. 전자 장치는 어플리케이션 패키지(APK)를 업로드할 대상(예: 앱 스토어, 링크 등)을 포함하는 개발 자 출처 정보를 이용하여, 어플리케이션 패키지(APK)가 개발자가 의도하지 않은 설치 경로를 통해 다운로드 된 것인지 확인할 수 있다. 본 문서의 다양한 실시예들에 따른 전자 장치는 개발자가 출처 정보를 어플리케이션 패 키지(APK) 상에 입력할 수 있도록 제어하고, 실제 다운로드 된 어플리케이션 패키지(APK)의 출처 정보와 비교하 여 개발자 의도와 다른 경로를 통한 설치 시도를 원천 차단하도록 제어할 수 있다. 도 6a는 다양한 실시예들에 따른 전자 장치의 개발자 출처 정보 삽입 과정을 도시한 것이다. 도 6a 에 따르면, 전자 장치(예: 도 3의 전자 장치)는 어플리케이션 개발자에 의해 설정된 개발자 출처 정 보를 포함할 수 있다. 출처 정보는 어플리케이션 패키지(APK) 내에 포함될 수 있다. 개발자에 의해 설정된 출처 정보는 앞선 도 4에서 설명된 것처럼 '개발자 출처 정보' 또는 '제1식별 정보'로 표기될 수 있다. 개발자 출처 정보의 종류에 대해서는 도 6b에서 설명될 것이다. 일 실시예에 따르면, 개발자 출처 정보는 어플리케이션 패키지(APK) 생성 시 개발자에 의해 설정이 변경될 수 있는 파일 내에 삽입되거나 또는 포함될 수 있다. 예를 들어, 개발자 출처 정보는 개발자에 의해 설정 이 변경될 수 있는 manifest 파일 내에 삽입되거나 또는 포함될 수 있다. manifest 파일은 androidmanifest.xml 의 확장명을 가진 파일을 의미할 수 있다. manifest 파일은 하나의 예시일 뿐 어플 리케이션 패키지(APK) 생성 과정에서 개발자 출처 정보가 삽입될 수 있는 부분은 manifest 파일로 한 정되는 것은 아니며, 개발자들이 직접 설정을 변경할 수 있는 부분 또는 개발자들이 직접 설정을 변경할 수 있 는 파일이라면 무엇이든 포함될 수 있다. 도 6b는 다양한 실시예들에 따른 개발자 출처 정보의 종류를 도시한 것이다. 그림 610에 따르면, 전자 장치는 어플리케이션을 설치하는 인스톨러(예: 도 3의 어플리케이션 스토어 )의 종류, 어플리케이션을 다운로드 받는 링크(예: 도 3의 외부 서버 또는 웹 브라우저)의 종류 또는 어플리케이션을 다운로드 받는 국가의 종류(예: KR, US) 중 적어도 어느 하나를 개발자 출처 정보로 설정 할 수 있다. 예를 들어, 전자 장치는 어플리케이션의 설치를 허용할 인스톨러의 종류는 A 스토어로 설정하 고, 어플리케이션의 설치를 허용할 링크는 https://family.ohsung.com로 설정하며, 어플리케이션의 설치를 허용 할 국가는 US 및 KR로 설정할 수 있다. 이 경우 전자 장치는 다운로드된 파일이 A 스토어 또는 https://family.ohsung.com의 링크를 이용하여 다운로드된 것인지 확인함에 대응하여 전자 장치 내에 다운 로드된 파일이 설치되도록 제어할 수 있다. 어플리케이션의 설치를 허용할 인스톨러 및 어플리케이션의 설치를 허용할 링크는 or 조건으로 적용될 수 있는 반면, 어플리케이션의 설치를 허용할 국가 조건은 and 조건으로 적 용될 수 있다. 즉, 전자 장치는 다운로드된 파일이 A 스토어를 이용하여 다운로드되거나 또는 https://family.ohsung.com의 링크를 이용하여 다운로드된 경우 전자 장치 내 설치를 허용하고, 다운로드 된 파일이 US 및 KR이 아닌 다른 국가에서 다운로드 된 경우 전자 장치 내 설치를 허용하지 않을 수 있다. 이는 개발자 출처 정보를 적용하는 일 예시일뿐 and조건 또는 or 조건이 고정된 것은 아니며, 개발자 출처 정보 는 개발자의 설정에 따라 적용 조건이 달라질 수 있다. 일 실시예에 따르면, 도 4의 소스 체커(source checker)는 설정된 개발자 출처 정보(예: 도 6a의 출처 정 보)와 실제로 어플리케이션이 전자 장치로 다운로드 되었을 때 출처를 비교할 수 있다. 실제로 어플 리케이션이 전자 장치로 다운로드 되었을 때의 출처 정보는 앞선 도 4에서 설명된 것처럼'단말 출처 정보' 또는 '제2식별 정보'로 표기될 수 있다. 그림 610의 경우 소스 체커(source checker)는 단말 출처 정보 상의 인스톨러 정보를 확인하고, 어플리케 이션이 A 스토어를 통해 다운로드 된 것인지 확인할 수 있다. 또한, 소스 체커(source checker)는 단말 출 처 정보 상의 링크 정보를 확인하고, 어플리케이션이 https://family.ohsung.com 으로부터 다운로드 된 것인지 확인할 수 있다. 또한, 소스 체커(source checker)는 단말 출처 정보 상의 국가 정보 또는 국가 코드를 확 인하고, 어플리케이션이 US 또는 KR로부터 다운로드 된 것인지 확인할 수 있다. 소스 체커(source checker)는 인스톨러, 링크 및 국가 정보가 모두 일치하는 것을 확인함에 대응하여 전자 장치(예: 도 3의 전자 장치)내 어플리케이션이 설치되도록 제어할 수 있다. 소스 체커(source checker)는 인스톨러, 링크 및 국가 정보 중 어느 하나라도 일치하지 않는 경우 전자 장치 상에 어플리케이션이 설치되지 않도록 제어할 수 있다. 이는 인스톨러, 링크 및 국가 정보가 and 조건으로 적용된 상황으로 이해될 수 있다. 또는 소스 체커(source checker)는 인스톨러 정보가 일치하지 않더라도 링크 정보가 일치하는 경우 어플리 케이션의 설치를 허용하고, 반대로 링크 정보가 일치하지 않더라도 인스톨러 정보가 일치하는 경우 어플리케이 션의 설치를 허용할 수 있다. 이는 인스톨러 정보와 링크 정보는 or 조건으로 적용되고, 국가 정보는 and 조건 으로 적용된 상황으로 이해될 수 있다. 일 실시예에 따르면, 전자 장치는 인스톨러, 링크 및 국가 정보 중 구체적으로 어떠한 정보가 일치하지 않 아 설치가 실패하였는지 사용자에게 가이드를 제공할 수 있다. 이는 하나의 예시일 뿐 개발자가 설정할 수 있는 인스톨러, 링크 및 국가 정보는 위에서 설명한 내용으로 한정되는 것은 아니다. 그림 620에 따르면, 개발자는 어플리케이션을 설치하는 인스톨러의 종류, 어플리케이션을 다운로드 받는 링크의 종류 또는 어플리케이션을 다운로드 받는 국가의 종류 중 적어도 어느 하나를 개발자 출처 정보로 설정할 수 있다. 예를 들어, 개발자는 스토어에서 다운로드 되지 않은 어플리케이션에 대해서는 전자 장치 내에서 설치 가 진행되지 않도록 설정할 수 있다. 이 경우 프로세서(예: 도 3의 프로세서)는 앱 스토어가 아닌 링크를 통해 다운로드 받은 어플리케이션이 전자 장치상에 설치되지 않도록 제어할 수 있다. 또한, 개발자는 A 스 토어에서 다운로드 받은 어플리케이션에 대해서는 전자 장치내에서 설치가 진행되지 않도록 설정할 수 있 다. 또한, 개발자는 특정 국가(예: US 및 KR)에서 다운로드 받은 어플리케이션에 대해서는 전자 장치내에 서 설치가 진행되지 않도록 설정할 수 있다. 소스 체커(source checker)는 인스톨러, 링크 및 국가 정보 중 어느 하나라도 개발자가 설정한 설치 실패 조건에 해당하는 경우 전자 장치 상에 어플리케이션이 설치 되지 않도록 제어하고, 그림 630처럼 인스톨러, 링크 및 국가 정보 중 구체적으로 어떠한 정보가 설치 실패 조 건에 해당하여 어플리케이션의 설치가 실패하였는지 사용자에게 가이드를 제공할 수 있다. 도 6c는 다양한 실시예들에 따른 단말 출처 정보를 확인하는 과정을 도시한 것이다. 도 6c는 전자 장치가 특정 링크(예: family.ohsung.com)에서 어플리케이션 패키지(APK)를 다운로드 한 상황을 의미할 수 있다. 이 경 우 전자 장치내 단말 출처 정보는 어플리케이션 패키지(APK)를 다운로드 한 링크(예: family.ohsung.com)를 포함할 수 있다. 이는 일 예시에 불과하며, 단말 출처 정보는 이것으로 한정되는 것 은 아니다. 예를 들어, 단말 출처 정보는 출처 정보에 따라 '앱 출처 정보'또는'보낸 사람'으로도 표기될 수 있다. 전자 장치는'단말 출처 정보', '앱 출처 정보'또는'보낸 사람'중 적어도 어느 하나로 표기된 영 역 상에 어플리케이션 패키지(APK)를 다운로드 받은 링크를 함께 표시할 수 있다. 도 6d는 다양한 실시예들에 따른 전자 장치 상에서 개발자 출처 정보와 단말 출처 정보가 일치하지 않는 경우 사용자에게 어플리케이션의 설치 실패 사유를 가이드하는 동작을 나타낸 것이다. 예를 들어, 개발자는 특정한 링크(예: family.ohsung.com)를 통해 어플리케이션을 다운로드 받은 경우에만 전자 장치상에 설치를 허용하도록 설정할 수 있다. 개발자에 의해 설정된 링크 이외의 경로를 통해 사용자가 어 플리케이션을 다운로드 받고, 전자 장치상에 설치를 시도하는 경우 프로세서는 개발자에 의해 미리 설정된 가이드를 사용자에게 제공할 수 있다. 사용자는 개발자에 의해 미리 설정된 가이드를 이용하 여 어플리케이션의 설치 여부 및 실패 사유에 대해 확인할 수 있고, 전자 장치 내부의 문제가 아닌 출처 (예: 다운로드 경로)의 문제라는 사실을 확인할 수 있다. 사용자는 개발자에 의해 미리 설정된 가이드를 이용하여 개발자가 특정한 링크를 통해 다시 어플리케이션을 다운로드 받고, 전자 장치상에 설치를 진행할 수 있다. 소스 체커(source checker)에서는 '개발자 출처 정보'와 '단말 출처 정보' 를 비교하여 설치 허용 및 실패 여부를 포함하는 인증 정보를 생성하고, 패키지 매니저(package manager)로 전달할 수 있다. 패키지 매니 저(package manager)는 소스 체커(source checker)로부터 전달된 인증 정보를 확인함에 대응하여 어 플리케이션 패키지(APK)의 설치를 제어할 수 있다. 일반적으로 설치 실패 사유는 전자 장치 내 로그 상에 기록될 수 있는데, 본 문서의 다양한 실시예들에 따른 전자 장치는 에서 개발자가 설정한 정책에 따라 설 치가 실패되는 경우 사용자에게 명시적으로 설치 실패 사유를 가이드하고, 다운로드 경로를 변경하도록 유도할 수 있다. 개발자는 '개발자 출처 정보'를 어플리케이션 패키지(APK)에 삽입할 수 있으며, 또한 설치 실패에 따 른 메시지를 함께 삽입시킬 수 있다. 예를 들어 개발자는 지정된 서버에서 링크를 통해 어플리케이션을 다운로 드 받고 전자 장치 내에 설치될 수 있도록 개발자 출처 정보를 설정할 수 있다. 이 때 전자 장치는 개발자가 설정한 출처와는 다른 경로로 다운로드된 어플리케이션의 설치를 시도하는 경우 메시지(예: <본 어플리케이션은 아래 링크에서 최신 버전을 다운로드 받을 수 있습니다>, <해당 스토어에서는 본 어플리케이션 의 설치가 불가능합니다>)를 사전 등록하여 사용자에게 설치 실패 사유(예: 특정 어플리케이션 스토어를 이용하여 어플리케이션을 다운로드받지 않은 경우)를 정확하게 전달할 수 있다. 다양한 실시예들에 따른 전자 장치는 통신 인터페이스, 메모리 및 프로세서를 포함하며, 프로세서는 어플리케이 션 패키지(application package)의 생성 과정에서 어플리케이션 패키지 상에 기입된 제1식별 정보를 획득하고, 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하고, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하고, 인증 정보에 기반하여 어플리케이션의 설치를 제어할 수 있 다. 일 실시예에 따르면, 제1식별 정보는 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응 하는 인스톨러 정보, 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드되는지에 대응하는 링크 정보 및 어플리케이션이 전자 장치가 특정 국가에 위치할 때 다운로드되는지에 대응하는 국가 정보 중 적어도어느 하나를 포함할 수 있다. 일 실시예에 따르면, 인스톨러 정보는 어플리케이션의 설치 과정에서 이용되는 앱 스토어(app store)를 지시하 는 정보를 포함할 수 있다. 일 실시예에 따르면, 제2식별 정보는 통신 인터페이스를 이용하여 수신된 어플리케이션 패키지의 다운로드 경로 를 포함할 수 있다. 일 실시예에 따르면, 어플리케이션 패키지의 다운로드 경로는 어플리케이션이 특정 인스톨러(installer)를 이용 하여 설치되는지에 대응하는 인스톨러 정보, 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드 되는지에 대응하는 링크 정보 및 어플리케이션이 전자 장치가 특정 국가에 위치할 때 다운로드되었는지에 대응 하는 국가 정보 중 적어도 어느 하나를 포함할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보에 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되 는지에 대응하는 인스톨러 정보가 포함된 것을 확인함에 대응하여 제2식별 정보 상의 인스톨러 정보와 비교하고, 제1식별 정보 상의 인스톨러 정보와 제2식별 정보 상의 인스톨러 정보가 일치함에 대응하여 어플리케 이션의 설치를 허용하도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보 상의 인스톨러 정보와 제2식별 정보 상의 인스톨러 정보가 일치 하지 않음에 대응하여 어플리케이션의 설치를 허용하지 않도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 인스톨러 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보에 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운 로드되는지에 대응하는 링크 정보가 포함된 것을 확인함에 대응하여 제2식별 정보 상의 링크 정보와 비교하고, 제1식별 정보 상의 링크 정보와 제2식별 정보 상의 링크 정보가 일치함에 대응하여 어플리케이션의 설치를 허용 하도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보 상의 링크 정보와 제2식별 정보 상의 링크 정보가 일치하지 않음 에 대응하여 어플리케이션의 설치를 허용하지 않도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 링크 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어 플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보에 국가 정보가 포함된 것을 확인함에 대응하여 제2식별 정보 상 의 국가 정보와 비교하고, 제1식별 정보 상의 국가 정보와 제2식별 정보 상의 국가 정보가 일치함에 대응하여 어플리케이션의 설치를 허용하도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 제1식별 정보 상의 국가 정보와 제2식별 정보 상의 국가 정보가 일치하지 않음 에 대응하여 어플리케이션의 설치를 허용하지 않도록 제어할 수 있다. 일 실시예에 따르면, 프로세서는 국가 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어 플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드할 수 있다. 다양한 실시예들에 따른 전자 장치의 어플리케이션 패키지 관리 방법은 어플리케이션 패키지(application package) 상에 기입된 제1식별 정보를 획득하는 동작, 어플리케이션 패키지의 다운로드 경로에 따라 다른 값을 가질 수 있는 제2식별 정보를 획득하는 동작, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하는 동작 및 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작을 포함할 수 있다. 일 실시예에 따르면, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은 제1식별 정보에 어플리케이션이 특정 인스톨러(installer)를 이용하여 설치되는지에 대응하는 인스톨러 정보가 포함된 것을 확 인함에 대응하여 제2식별 정보 상의 인스톨러 정보와 비교하는 동작을 포함할 수 있다. 일 실시예에 따르면, 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은 제1식별 정보 상의 인스톨 러 정보와 제2식별 정보 상의 인스톨러 정보가 일치함에 대응하여 어플리케이션의 설치를 허용하도록 제어하는 동작, 제1식별 정보 상의 인스톨러 정보와 제2식별 정보 상의 인스톨러 정보가 일치하지 않음에 대응하여 어플 리케이션의 설치를 허용하지 않도록 제어하는 동작 및 인스톨러 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함할수 있다. 일 실시예에 따르면, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은 제1식별 정보에 어플리케이션이 외부 서버 또는 특정 웹 브라우저를 통해 다운로드 되는지에 대응하는 링크 정보가 포함된 것을 확인함에 대응하여 제2식별 정보 상의 링크 정보와 비교하는 동작을 포함할 수 있다. 일 실시예에 따르면, 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은 제1식별 정보 상의 링크 정 보와 제2식별 정보 상의 링크 정보가 일치함에 대응하여 어플리케이션의 설치를 허용하도록 제어하는 동작, 제1 식별 정보 상의 링크 정보와 제2식별 정보 상의 링크 정보가 일치하지 않음에 대응하여 어플리케이션의 설치를 허용하지 않도록 제어하는 동작 및 링크 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 제1식별 정보 및 제2식별 정보에 기반하여 인증 정보를 생성하는 동작은 제1식별 정보에 국가 정보가 포함된 것을 확인함에 대응하여 제2식별 정보 상의 국가 정보와 비교하는 동작을 포함할 수 있다. 일 실시예에 따르면, 인증 정보에 기반하여 어플리케이션의 설치를 제어하는 동작은 제1식별 정보 상의 국가 정 보와 제2식별 정보 상의 국가 정보가 일치함에 대응하여 어플리케이션의 설치를 허용하도록 제어하는 동작, 제1 식별 정보 상의 국가 정보와 제2식별 정보 상의 국가 정보가 일치하지 않음에 대응하여 어플리케이션의 설치를 허용하지 않도록 제어하는 동작 및 국가 정보가 일치하지 않아 어플리케이션의 설치가 불가능함을 가이드하고, 어플리케이션의 설치가 가능하도록 적절한 설치 경로를 가이드하는 동작을 더 포함할 수 있다. 본 명세서와 도면에 개시된 본 문서의 실시예는 본 문서의 실시예에 따른 기술 내용을 쉽게 설명하고 본 문서의 실시예의 이해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 문서의 실시예의 범위를 한정하고자 하는 것은 아니다. 따라서 본 문서의 다양한 실시예의 범위는 여기에 개시된 실시예 이외에도 본 문서의 다양한 실시예의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형된 형태가 본 문서의 다양한 실시예의 범위에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2a 도면2b 도면3 도면4 도면5 도면6a 도면6b 도면6c 도면6d"}
{"patent_id": "10-2021-0189602", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2a 및 2b는 비교 실시예에 따른 어플리케이션의 배포 과정을 도시한 것이다. 도 3은 다양한 실시예들에 따른 전자 장치의 구성을 블록도로 나타낸 것이다. 도 4는 다양한 실시예들에 따른 전자 장치의 세부 구성을 도시한 것이다. 도 5는 다양한 실시예들에 따른 전자 장치가 어플리케이션 패키지 설치 시 인증 정보를 생성하는 방법의 흐름도 이다. 도 6a 내지 도 6d는 다양한 실시예들에 따른 전자 장치의 어플리케이션 패키지 관리 방법을 나타낸 것이다."}
