{"patent_id": "10-2023-0149252", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0005851", "출원번호": "10-2023-0149252", "발명의 명칭": "신경망 처리 장치를 포함하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "이준혁"}}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,프로세싱 엘리먼트 어레이;복수의 로컬 메모리 블록으로 구성되고, 상기 프로세싱 엘리먼트 어레이에서 처리되는 복수의 특성 맵에 대한데이터를 저장하는 로컬 메모리;상기 프로세싱 엘리먼트 어레이 및 상기 로컬 메모리를 제어하도록 구성되는 컨트롤 코어;를 포함하고,상기 컨트롤 코어는,레이어에 대응하는 특성 맵의 사이즈에 기초하여 상기 복수의 로컬 메모리 블록 중 적어도 하나의 로컬 메모리블록이 오프 되도록 상기 로컬 메모리를 제어하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,인공 신경망 모델을 제공하도록 상기 인공 신경망 모델을 제1 언어 형태로 저장하는 메인 메모리; 및상기 메인 메모리에 저장된 제1 언어 형태의 인공 신경망 모델을 상기 로컬 메모리에 제공하는 프로세서;를 더포함하고,상기 프로세서는,상기 제1 언어 형태인 인공 신경망 모델이 제2 언어 형태로 컴파일 될 때, 상기 특성 맵의 사이즈에 대응되는로컬 메모리의 버퍼 용량을 상기 컴파일 된 인공 신경망 모델에 태깅(Tagging)하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 프로세서서는,상기 로컬 메모리가 제어되는 동안에,온 상태인 로컬 메모리 블록의 개수에 기초하여 상기 메인 메모리의 대역폭을 조절하고, 상기 로컬 메모리는 상기 조절된 대역폭에 기초하여 상기 메인 메모리로부터 데이터를 획득하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2 항에 있어서,상기 컨트롤 코어는,상기 레이어 별 특성 맵의 사이즈에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를결정하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 2 항에 있어서,상기 컨트롤 코어는,상기 레이어 별 특성 맵의 사이즈가 상기 복수의 로컬 메모리 블록의 전체 버퍼 용량보다 크면, 상기 복수의 로컬 메모리 블록 전체를 온(ON)시키는 전자 장치.공개특허 10-2025-0005851-3-청구항 6 제 1 항에 있어서,상기 로컬 메모리는,상기 컨트롤 코어와 연관되어 레이어 별 특성 맵을 상기 컨트롤 코어에 제공하는 TCM(tightly-coupled memory)인 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 2 항에 있어서,상기 프로세서는,제1 레이어의 특성 맵 사이즈에 대응되는 제1 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하고,상기 제1 레이어 다음에 처리되는 제2 레이어의 특성 맵 사이즈에 대응되는 제2 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하고,상기 제2 레이어 다음에 처리되는 제3 레이어의 특성 맵 사이즈에 대응되는 제3 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 2 항에 있어서,상기 컨트롤 코어는,연속되는 복수의 레이어를 버퍼 용량으로 구별되는 복수의 레이어 그룹으로 분류하고,상기 레이어 그룹에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를 결정하는 전자장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 컨트롤 코어는,제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 하고,상기 레이어 그룹 내에 상기 제2 버퍼 용량을 가지는 레이어가 연속되지 않으면, 상기 제1 버퍼 용량에 기초하여 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 8 항에 있어서,상기 컨트롤 코어는,제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 하고,상기 레이어 그룹 내에 상기 제2 버퍼 용량을 가지는 레이어가 연속되면, 상기 제1 버퍼 용량 및 상기 제2 버퍼용량에 기초하여 상기 복수의 셀 중 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하는 전자 장치."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 1 항에 있어서,상기 컨트롤 코어는,상기 복수의 로컬 메모리 블록 중 일부가 오프 된 상태에서 MAC(multiply and accumulate) 연산을 수행하도록프로세싱 엘리먼트 어레이를 제어하는 전자 장치.공개특허 10-2025-0005851-4-청구항 12 신경망 처리 장치를 포함하는 전자 장치의 동작 방법에 있어서,상기 신경망 처리 장치는,프로세싱 엘리먼트 어레이;복수의 로컬 메모리 블록으로 구성되고, 상기 프로세싱 엘리먼트 어레이에서 처리되는 복수의 특성 맵에 대한데이터를 저장하는 로컬 메모리;상기 프로세싱 엘리먼트 어레이 및 상기 로컬 메모리를 제어하도록 구성되는 컨트롤 코어;를 포함하고,레이어에 대응하는 특성 맵의 사이즈에 기초하여 상기 복수의 로컬 메모리 블록 중 적어도 하나의 로컬 메모리블록이 오프 되도록 상기 로컬 메모리를 제어하는 동작을 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 신경망 처리 장치에 인공 신경망 모델을 제공하도록 상기 인공 신경망 모델을 제1 언어 형태로 저장하는메인 메모리; 및상기 메인 메모리에 저장된 제1 언어 형태의 인공 신경망 모델을 상기 신경망 처리 장치에 제공하는 프로세서;를 더 포함하고,상기 제1 언어 형태인 인공 신경망 모델이 제2 언어 형태로 컴파일 하는 동작; 및상기 특성 맵의 사이즈에 대응되는 로컬 메모리의 버퍼 용량을 상기 컴파일 된 인공 신경망 모델에 태깅(Tagging)하는 동작을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 레이어 별 특성 맵의 사이즈에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를결정하는 동작;을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 13 항에 있어서,상기 레이어 별 특성 맵의 사이즈가 상기 복수의 로컬 메모리 블록의 전체 버퍼 용량보다 크면, 상기 복수의 로컬 메모리 블록 전체를 온(ON)시키는 동작;을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 12 항에 있어서,상기 로컬 메모리는,상기 컨트롤 코어와 연관되어 레이어 별 특성 맵을 상기 컨트롤 코어에 제공하는 TCM(tightly-coupled memory)인 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 13 항에 있어서,상기 컴파일 하는 동작은,제1 레이어의 특성 맵 사이즈에 대응되는 제1 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하는동작;상기 제1 레이어 다음에 처리되는 제2 레이어의 특성 맵 사이즈에 대응되는 제2 버퍼 용량을 상기 제2 언어 형공개특허 10-2025-0005851-5-태인 인공 신경망 모델에 태깅하는 동작; 및상기 제2 레이어 다음에 처리되는 제3 레이어의 특성 맵 사이즈에 대응되는 제3 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하는 동작을 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 13 항에 있어서,연속되는 복수의 레이어를 버퍼 용량으로 구별되는 복수의 레이어 그룹으로 분류하는 동작; 및상기 레이어 그룹에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를 결정하는 동작;을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18 항에 있어서,제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 하는 동작; 및상기 레이어 그룹 내에 상기 제2 버퍼 용량을 가지는 레이어가 연속되지 않으면, 상기 제1 버퍼 용량에 기초하여 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하는 동작;을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 18 항에 있어서,제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 하는 동작; 및상기 레이어 그룹 내에 상기 제2 버퍼 용량을 가지는 레이어가 연속되면, 상기 제1 버퍼 용량 및 상기 제2 버퍼용량에 기초하여 상기 복수의 셀 중 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하는 동작;을 더 포함하는동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 12 항에 있어서,상기 복수의 로컬 메모리 블록 중 일부가 오프 된 상태에서 MAC(multiply and accumulate) 연산을 수행하도록프로세싱 엘리먼트 어레이를 제어하는 동작;을 더 포함하는 동작 방법."}
{"patent_id": "10-2023-0149252", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "신경망 처리 장치에 있어서,프로세싱 엘리먼트 어레이;복수의 로컬 메모리 블록으로 구성되고, 상기 프로세싱 엘리먼트 어레이에서 처리되는 복수의 특성 맵에 대한데이터를 저장하는 로컬 메모리;상기 프로세싱 엘리먼트 어레이 및 상기 로컬 메모리를 제어하도록 구성되는 컨트롤 코어;를 포함하고,상기 컨트롤 코어는,레이어에 대응하는 특정 맵의 사이즈에 기초하여 상기 복수의 로컬 메모리 블록 중 적어도 하나의 로컬 메모리블록이 오프 되도록 상기 로컬 메모리를 제어하는 신경망 처리 장치."}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 프로세싱 엘리먼트 어레이와, 복수의 로컬 메모리 블록으로 구성되고, 프로세싱 엘리먼트 어레이에서 처리되는 복수의 특성 맵에 대한 데이터를 저장하는 로컬 메모리와, 프로세싱 엘리먼트 어 레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코어를 포함할 수 있다. 컨트롤 코어는 레이어에 대응하는 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 적어도 하나의 로컬 메모리 블록이 오프 되도록 로컬 메모리를 제어할 수 있다."}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 신경망 처리 장치를 포함하는 전자 장치에 관한 것이다."}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 신경망(Artificial neural network)의 일종인 딥러닝 모델이 발전함에 따라 신경망 네트워크를 구성하는 칩셋인 신경망 처리 장치(NPU: neural processing unit)의 하드웨어 사양이 상당 수준으로 높아졌다. 신경망 처 리 장치의 사양이 증대됨에 따라 내부 캐시(Cache)와 유사한 역할을 하는 정적 랜덤 액세스 메모리(SRAM: static random access memory)의 용량도 증가하였다. 딥러닝 모델의 연산량이 클 경우에는 사양이 높아진 NPU가 적합하지만, 딥러닝 모델이 작은 내부 메모리를 요구 하는 모델일 경우에는 SRAM의 모든 셀을 이용하지 않으므로, 사용하지 않는 셀에 인가되는 전류인 누설 전류가 발생하게 된다. 만약, 전자 장치에서 딥러닝 모델의 연산량 대비 NPU가 높은 사양에 해당한다면 전체적인 측면에서 불필요한 전 력 소비가 발생하게 된다."}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 전자 장치는 신경망 처리 장치를 포함할 수 있다. 일 실시예에 따른 신경망 처리 장치는 프로 세싱 엘리먼트 어레이와 특성 맵(feature map)을 프로세싱 엘리먼트 어레이에 제공하고, 복수의 로컬 메모리 블 록으로 구성되는 로컬 메모리와 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코어 를 포함할 수 있다. 일 실시예에 따른 컨트롤 코어는 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 일부가 오프 되도록 적어도 하나의 로컬 메모리 블록을 제어할 수 있다. 일 실시예에 따른 전자 장치의 동작 방법에서 전자 장치는 신경망 처리 장치를 포함할 수 있다. 일 실시예에 따 른 동작 방법에서 신경망 처리 장치는 프로세싱 엘리먼트 어레이와 특성 맵(feature map)을 프로세싱 엘리먼트 어레이에 제공하고, 복수의 로컬 메모리 블록으로 구성되는 로컬 메모리와 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코어를 포함할 수 있다. 일 실시예에 따른 전자 장치의 동작 방법은 컨트 롤 코어가 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 일부가 오프 되도록 적어도 하나의 로컬 메모리 블록을 제어하는 동작을 포함할 수 있다."}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 발명의 바람직한 실시예들을 상세히 설명한다. 본 발명의 이점 및 특징, 그리 고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시예들을 참조하면 명확해질 것 이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될"}
{"patent_id": "10-2023-0149252", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술분야에서 통상의 지 식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정 의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있다. 또 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니 다. 본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는 (comprising)\"은 언급된 구성 요소, 단계, 동 작 및/또는 소자는 하나 이상의 다른 구성 요소, 단계, 동작 및/또는 소자의 존재 또는 추가를 배제하지 않는다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다.전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 일 실시예들에 따른 전자 장치 내의 신경망 처리 장치의 블록도이고, 도 3은 일 실시예에 따른 로 컬 메모리를 구성하는 복수의 셀을 도시한다. 본 개시의 일 예시에 따른 신경망 처리 장치는 컨트롤 코어, 프로세싱 엘리먼트 어레이 및 로컬 메모리를 포함하도록 구성될 수 있다. 일 실시예에 따른 신경망 처리 장치는 프로세싱 엘리먼트 어레이에서 추론될 수 있는 인공 신경망 모델을 저장하거나, 인공 신경망 모델의 적어도 일부 데이터를 저장하도록 구성된 로컬 메모리를 포함할 수 있다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 에 기초하여 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성된 컨트롤 코어를 포함할 수 있다. 인공 신경망 모델은 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터의 지역성 정보를 포함할 수 있다. 지역성 정보는 신경망 처리 장치의 프로세싱 엘리먼트의 개수, 특성 맵과 가중치를 저장하는 메모 리의 용량 및 신경망 처리 장치 메모리 계층 구조 등에 관한 것일 수 있다. 인공 신경망 모델은 특정 추 론 기능을 수행하도록 학습된 AI 인식 모델 또는 딥러닝 모델을 의미할 수 있다. 컨트롤 코어는 시스템 버스를 통해서 전자 장치의 메인 프로세서 등 다양한 구성 요소와 데이터를 주고받을 수 있다. 예를 들어, 메인 프로세서는 컨트롤 코어를 통해서 신경망 처리 장치에 특정 인공 신경망 모델의 동작을 지시할 수 있다. 일 실시예에 따른 컨트롤 코어는 메인 메모리에 저장된 인공 신경망 모델의 데이터를 로컬 메모리 로 로딩 시킬 수 있다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델의 추론 결과를 메인 프로세서에 제공할 수 있다. 일 실시예에 따른 컨트롤 코어는 신경망 처리 장치의 추론 연산을 위한 프로세싱 엘리먼트 어레이 의 연산 및 로컬 메모리의 읽기 및 쓰기 순서를 제어할 수 있다. 일 실시예에 따른 컨트롤 코어는 프로세싱 엘리먼트 어레이에서 작동할 인공 신경망 모델의 구조를 분석하거나 또는 분석된 구조 정보를 제공받을 수 있다. 인공 신경망 모델이 포함할 수 있는 인공 신경망의 데 이터는 각각의 레이어의 특성 맵(feature map) 데이터, 노드 데이터, 레이어들의 배치 구조 데이터, 각각의 레 이어의 노드를 연결하는 연결망 각각의 가중치 데이터 또는 인공신경망 데이터 지역성 정보를 포함할 수 있다. 인공 신경망의 데이터는 로컬 메모리 및/또는 메인 메모리에 저장될 수 있다. 컨트롤 코어는 인공 신경망의 데이터가 저장된 메모리에 액세스하여 필요한 데이터를 활용할 수 있다. 단, 이에 제한되지 않으 며, 인공신경망 모델의 노드 데이터 및 가중치 데이터 등의 데이터에 기초하여 인공 신경망 모델의 구조 데이터또는 인공 신경망 데이터 지역성 정보를 생성할 수 있다. 가중치 데이터는 가중치 커널로 지칭되는 것도 가능하 다. 노드 데이터는 특성 맵으로 지칭되는 것도 가능하다. 예를 들면, 인공 신경망 모델의 구조가 정의된 데이터 는 인공 신경망 모델을 설계하거나 또는 학습이 완료될 때 생성될 수 있다. 단, 이에 제한되지 않는다. 일 실시예에 따른 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보 에 기초하여 인공 신경망 모델의 연산 순서를 스케줄링 할 수 있다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델의 구조에 따라서 각 레이어 별 연산을 순차적으 로 처리할 수 있다. 즉, 인공 신경망 모델의 구조가 결정되면, 커널 별 또는 레이어 별 특성 맵의 연산 순서가 정해질 수 있다. 이러한 정보를 인공 신경망 모델의 구조 데이터로 정의할 수 있다. 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보에 기초하여 인공신경망모델의 레이어의 노드 데이터 및 연결망의 가중치 데이터가 저장된 메모리 어드레스 값을 획득할 수 있다. 예를 들면, 컨트롤 코어 는 로컬 메모리에 저장된 인공 신경망 모델의 레이어의 특성 맵, 노드 데이터 및 연결망의 가중치 데이터가 저장된 메모리 어드레스 값을 획득할 수 있다. 따라서, 컨트롤 코어는 구동할 인공신경망 모델 의 레이어의 노드 데이터 및 연결망의 가중치 데이터를 메인 메모리에서 가져와서 로컬 메모리에 저장할 수 있다. 각각의 레이어의 노드 데이터는 대응되는 각각의 메모리 어드레스 값을 가질 수 있다. 각각의 연결망의 가중치 데이터는 대응되는 각각의 메모리 어드레스 값을 가질 수 있다. 일 실시예에 따른 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보, 예를 들면, 인공 신경망 모델의 인공 신경망의 레이어들의 배치 구조 데이터 또는 인공신경망 데이터 지역성 정 보에 기초해서 프로세싱 엘리먼트 어레이의 연산 순서를 스케줄링 할 수 있다. 일 실시예에 따른 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보에 기초하여 스케줄링 하기 때문에, 메인 프로세서 스케줄링 개념과 다르게 동작할 수 있다. 메인 프로세서 의 스케줄링은 공평성, 효율성, 안정성, 반응 시간 등을 고려하여, 최상의 효율을 낼 수 있도록 동작한다. 즉, 우선 순위, 연산 시간 등을 고려해서 동일 시간내에 가장 많은 프로세싱을 수행하도록 스케줄링 한다. 메인 프로세서는 각 프로세싱의 우선 순서, 연산 처리 시간 등의 데이터를 고려하여 작업을 스케줄링 하는 알고리즘을 사용할 수 있다. 이와 다르게 신경망 처리 장치는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보 에 기초하여 프로세싱 순서를 결정할 수 있다. 더 나아가면, 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보 및/또 는 사용하려는 신경망 처리 장치의 구조 데이터에 기초하여 프로세싱 순서를 결정할 수 있다. 단, 본 개시의 다양한 실시예들은 신경망 처리 장치의 구조 데이터에 제한되지 않는다. 예를 들면, 신경 망 처리 장치의 구조 데이터는 로컬 메모리의 메모리 크기, 로컬 메모리의 계층 구조, 프로 세싱 엘리먼트들(PE)의 개수 데이터, 프로세싱 엘리먼트들(PE)의 연산기 구조 중 적어도 하나 이상의 데이터를 활용하여 프로세싱 순서를 결정할 수 있다. 즉, 신경망 처리 장치의 구조 데이터는 로컬 메모리의 메모리 크기, 로컬 메모리의 계층 구조, 프로세싱 엘리먼트들(PE)의 개수 데이터, 및 프로세싱 엘리먼트 들(PE)의 연산기 구조 중 적어도 하나 이상의 데이터 포함할 수 있다. 단, 본 개시는 신경망 처리 장치의 구조 데이터에 제한되지 않는다. 로컬 메모리의 메모리 크기는 메모리 용량에 대한 정보를 포함한다. 로 컬 메모리의 계층 구조는 각각의 계층 구조에 대한 구체적인 계층 간의 연결 관계에 대한 정보를 포함한 다. 프로세싱 엘리먼트들(PE)의 연산기 구조는 프로세싱 엘리먼트 내부의 구성요소들에 대한 정보를 포함한다. 컴파일러(미도시)가 인공 신경망 모델이 신경망 처리 장치에서 실행되도록 인공 신경망 모델을 컴파일 할 경우, 프로세싱 엘리먼트 어레이-로컬 메모리 레벨에서 인공 신경망 모델의 인공 신경망 데이터 지 역성이 구성될 수 있다. 컴파일러는 별도의 소프트웨어로 구현될 수 있다. 단, 이에 제한되지 않는다. 즉, 컴파일러는 인공 신경망 모델에 적용된 알고리즘들 및 신경망 처리 장치의 하드웨어 적인 동작 특성 에 따라서 프로세싱 엘리먼트 어레이-로컬 메모리 레벨에서의 인공 신경망 모델의 데이터 지역성을 적절히 구성할 수 있다. 예를 들면, 동일한 인공 신경망 모델의 경우에도 신경망 처리 장치이 해당 인공 신경망 모델을 연산하는 방식에 따라 인공 신경망 모델의 인공신경망 데이터 지역성을 다르게 구성할 수 있다. 예를 들면, 인공 신경망 모델의 인공신경망 데이터 지역성은 특징 맵 타일링, 프로세싱 엘리먼트의 스테이셔너 리(Stationary) 기법, 메모리 재사용 등의 알고리즘에 기초하여 구성될 수 있다. 예를 들면, 인공 신경망 모델의 인공 신경망 데이터 지역성은 신경망 처리 장치의 프로세싱 엘리먼트 개 수, 특징 맵 및 가중치 등을 저장하는 로컬 메모리의 메모리 용량, 신경망 처리 장치내의 메모리 계층 구조 등에 기초하여 구성될 수 있다. 컴파일러는 신경망 처리 장치의 워드(word) 단위로 프로세싱 엘리먼트 어레이-로컬 메모리 레벨에서 인공 신경망 모델의 인공 신경망 데이터 지역성을 구성하여 연산 처리에 필요한 데이터의 순서를 결정 할 수 있다. 워드 단위는 해당 커널의 양자화에 따라서 달라질 수 있으며, 예를 들면, 4비트, 8비트, 16비트, 또는 32 비트 등 일 수 있다. 단, 이에 제한되지 않는다. 즉, 프로세싱 엘리먼트 어레이-로컬 메모리 레벨에서 존재하는 인공 신경망 모델의 인공 신경망 데 이터 지역성이란 프로세싱 엘리먼트 어레이가 처리하는 인공 신경망 모델의 연산 순서 정보로 정의될 수 있다. 컨트롤 코어가 인공신경망 데이터 지역성 정보를 제공받을 경우, 컨트롤 코어는 워드 단위로 인공 신경망 모델의 연산 순서를 알 수 있기 때문에, 필요한 데이터를 메인 메모리에서 로컬 메모리로 사전에 저장할 수 있다. 따라서, 컨트롤 코어는 인공 신경망의 인공 신경망 데이터 지역성 정보 및/또는 구조 데이터를 저장하도 록 구성될 수 있다. 즉, 상술한 구조 데이터는 인공 신경망 모델의 레이어, 커널 단위 개념의 구조 데이터를 의미한다. 상술한 구조 데이터는 알고리즘 레벨에서 활용될 수 있다. 즉, 상술한 인공 신경망 데이터 지역성은 해당 인공 신경망 모델이 컴파일러에 의해서 특정 신경망 프로세싱 유 닛에서 동작하도록 변환될 때 결정된 신경망 처리 장치의 프로세싱 순서 정보를 의미한다. 인공 신경망 데이터 지역성은, 신경망 처리 장치가 특정 인공 신경망 모델을 처리할 때, 해당 인공 신경 망 모델의 구조 및 연산 알고리즘을 따라 수행되는 신경망 처리 장치가 해당 인공 신경망을 연산 처리하 는데 필요한 데이터의 워드(word) 단위인 순서 정보를 의미할 수 있다. 워드 단위는 신경망 처리 장치가 처리할 수 있는 기본 단위인 엘리먼트 단위를 의미할 수 있다. 인공 신경망 데이터 지역성은 하드웨어-메모리 레벨에서 활용될 수 있다. 일 실시예에 따른 컨트롤 코어는 구조 데이터 또는 인공신경망 데이터 지역성에 기초하여 신경망 처리 장 치가 요청할 메모리 읽기/쓰기 동작을 사전에 예측하고, 신경망 처리 장치가 처리할 데이터를 메인 메모리에서 로컬 메모리로 사전에 저장할 수 있다. 따라서 데이터 공급 지연(Latency)을 최소화 또 는 실질적으로 제거할 수 있는 효과가 있다. 즉, 컨트롤 코어는 적어도 인공 신경망 모델의 인공 신경망의 구조 데이터 또는 인공 신경망 데이터 지역 성 정보만 활용하더라도 프로세싱 순서를 결정할 수 있다. 즉, 컨트롤 코어는 인공 신경망의 입력 레이어 부터 출력 레이어 까지의 구조 데이터 또는 인공신경망 데이터 지역성 정보를 활용하여 연산 순서를 결정할 수 있다. 예를 들면, 입력 레이어 연산이 제1 순위로 스케줄링 되고 출력 레이어 연산이 마지막으로 스케줄링 될 수 있다. 따라서, 컨트롤 코어가 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보 를 제공받는 경우, 인공 신경망 모델의 모든 연산 순서를 알 수 있다. 따라서 모든 스케줄링 순서를 결정할 수 있는 효과가 있다. 또한, 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보 및 신경망 처리 장치의 구조 데이터를 고려하여 프로세싱 순서를 결정할 수 있으며 결정된 순서 별 프로세싱 최적화 도 가능하다. 따라서, 컨트롤 코어가 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보 및 신경망 처리 장치의 구조 데이터를 모두 제공받는 경우, 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이 터 지역성 정보에 의해서 결정된 스케줄링 순서 각각의 연산 효율을 보다 더 향상시킬 수 있다. 예를 들면, 컨 트롤 코어는 4개의 레이어의 인공 신경망 레이어들과 각각의 레이어들을 연결하는 3개의 레이어의 가중치 데이터들을 가지는 연결망 데이터를 획득할 수 있다. 이러한 경우 컨트롤 코어가 인공 신경망 모델의 구 조 데이터 또는 인공신경망 데이터 지역성 정보를 기초로 프로세싱 순서를 스케줄링 하는 방법에 대하여 예를들어 아래에서 설명한다. 예를 들면, 컨트롤 코어는 추론 연산을 위한 입력 데이터를 인공 신경망모델의 입력 레이어인 제1 레이어 의 노드 데이터로 설정하고, 제1 레이어의 노드 데이터와 제1 레이어에 대응되는 제1 연결망의 가중치 데이터의 MAC(multiply and accumulate) 연산을 먼저 수행하도록 스케줄링 할 수 있다. 단, 본 개시의 예시들은 MAC 연 산에 제한되지 않으며, 인공 신경망 연산은 다양하게 변형실시 될 수 있는 곱셈기 및 덧셈기를 활용하여 인공 신경망 연산을 수행하는 것도 가능하다. 이하 단지 설명의 편의를 위해서 해당 연산을 제1 연산이라 지칭하고, 제1 연산의 결과를 제1 연산 값이라 지칭하고, 해당 스케줄링을 제1 스케줄링이라 지칭할 수 있다. 예를 들면, 컨트롤 코어는 제1 연산 값을 제1 연결망에 대응되는 제2 레이어의 노드 데이터로 설정하고, 제2 레이어의 노드 데이터와 제2 레이어에 대응되는 제2 연결망의 가중치 데이터의 MAC 연산을 제1 스케줄링 이 후에 수행하도록 스케줄링 할 수 있다. 이하 단지 설명의 편의를 위해서 해당 연산을 제2 연산이라 지칭하고, 제2 연산의 결과를 제2 연산 값이라 지칭하고, 해당 스케줄링을 제2 스케줄링이라 지칭할 수 있다. 예를 들면, 컨트롤 코어는 제2 연산 값을 제2 연결망에 대응되는 제3 레이어의 노드 데이터로 설정하고, 제3 레이어의 노드 데이터와 제3 레이어에 대응되는 제3 연결망의 가중치 데이터의 MAC 연산을 제2 스케줄링에 수행하도록 스케줄링 할 수 있다. 이하 단지 설명의 편의를 위해서 해당 연산을 제3 연산이라 지칭하고, 제3 연 산의 결과를 제3 연산 값이라 지칭하고, 해당 스케줄링을 제3 스케줄링이라 지칭할 수 있다. 예를 들면, 컨트롤 코어는 제3 연산 값을 제3 연결망에 대응되는 출력 레이어인 제4 레이어의 노드 데이 터로 설정하고, 제4 레이어의 노드 데이터에 저장된 추론 결과를 로컬 메모리에 저장하도록 스케줄링 할 수 있다. 이하 단지 설명의 편의를 위해서 해당 스케줄링을 제4 스케줄링이라 지칭할 수 있다. 추론 결과 값은 전자 장치의 다양한 구성요소들에 전달되어 활용될 수 있다. 예를 들면, 추론 결과 값이 특정 키워드를 감지한 결과 값이라면, 신경망 처리 장치는 추론 결과를 메인 프로세서에 전달하여, 전자 장치가 특정 키워드에 대응되는 동작을 수행할 수 있다. 일 실시예에 따른 컨트롤 코어는 제1 스케줄링, 제2 스케줄링, 제3 스케줄링, 및 제4 스케줄링 순서대로 연산이 수행되도록 로컬 메모리와 프로세싱 엘리먼트 어레이를 제어할 수 있다. 즉, 컨트롤 코어 는 설정된 스케줄링 순서대로 연산이 수행되도록 로컬 메모리과 프로세싱 엘리먼트 어레이를 제어하도록 구성될 수 있다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망의 레이어들의 구조와, 구조에 대응되는 연산 순서 데 이터에 기초하여, 프로세싱 순서를 스케줄링 하도록 구성될 수 있다. 스케줄링 되는 프로세싱 순서는 적어도 하 나 이상일 수 있다, 예를 들면, 신경망 처리 장치가 모든 연산 순서를 예측할 수 있기 때문에, 다음 연산 을 스케줄링 하는 것도 가능하고, 특정 순서의 연산을 스케줄링 하는 것도 가능하다. 예를 들면, 컨트롤 코어는 인공 신경망 모델의 인공 신경망의 입력 레이어부터 출력 레이어 까지의 구조 데이터 또는 인공 신경망 데이터 지역성 정보를 기초로, 프로세싱 순서를 스케줄링 하도록 구성될 수 있다. 일 실시예에 따른 컨트롤 코어는 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보 에 기초한 스케줄링 순서를 활용하여 로컬 메모리를 제어하여 신경망 프로세싱 유닛의 연산 가동율을 향 상시킬 수 있고, 메모리 재사용율을 향상시킬 수 있는 효과가 있다. 일 실시예에 따른 신경망 처리 장치에서 구동되는 인공 신경망 연산의 특성상 하나의 레이어의 연산 값이 다음 레이어의 입력 데이터가 되는 특성을 가질 수 있다. 신경망 처리 장치는 스케줄링 순서에 따라서 로컬 메모리을 제어하여, 로컬 메모리의 메모리 재사용율을 향상시킬 수 있는 효과가 있다. 메모리 재사용은 메모리에 저장된 데이터를 몇 번 읽는지 횟수로 판 단할 수 있다. 예를 들면, 메모리에 특정 데이터를 저장한 다음, 특정 데이터를 1회만 읽은 후 해당 데이터를 삭제하거나 덮어쓰기 하면, 메모리 재사용율은 100%가 될 수 있다. 예를 들면, 메모리에 특정 데이터를 저장한 다음, 특정 데이터를 4회 읽은 후, 해당 데이터를 삭제하거나 덮어쓰기 하면, 메모리 재사용율은 400%가 될 수 있다. 즉, 메모리 재사용율은 한번 저장된 데이터의 재사용 횟수로 정의될 수 있다. 즉, 메모리 재사용은 메모 리에 저장된 데이터 또는 특정 데이터가 저장된 특정 메모리 어드레스를 재사용한다는 것을 의미할 수 있다. 구체적으로 설명하면, 컨트롤 코어가 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보를 제공받도록 구성되고, 제공받은 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보에 의해서 인공 신경망의 연산이 진행되는 순서 데이터를 파악할 수 있는 경우, 컨트롤 코어는 인공 신경망모델의 특정 레이어의 노드 데이터와 특정 연결망의 가중치 데이터의 연산 결과가 대응되는 다음 레이어의 노드 데이터가 된다는 사실을 인식할 수 있다. 즉, 전자 장치의 신경망 처리 장치는 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보에 기초하여, 로컬 메모리의 메모리 재사용율을 향상시 키도록 구성될 수 있다. 따라서, 컨트롤 코어는 특정 연산 결과가 저장된 메모리 어드레스의 값을 이어지는 다음 연산에서 재사용 할 수 있다. 따라서 메모리 재사용율이 향상될 수 있다. 예를 들면, 컨볼루션 신경망의 경우, 신경망 처리 장치는 연산된 출력 특성 맵(feature map) 데이터를 로 컬 메모리에 저장하고, 해당 데이터를 다음 레이어의 입력 특성 맵 데이터로 활용하도록 컨트롤 코어 및/또는 로컬 메모리를 제어할 수 있다. 예를 들면, 상술한 제1 스케줄링의 제1 연산 값은 제2 스케줄링의 제2 레이어의 노드 데이터로 설정된다. 구체 적으로 설명하면, 컨트롤 코어는 로컬 메모리에 저장된 제1 스케줄링의 제1 연산 값에 대응되는 메 모리 어드레스 값을 제2 스케줄링의 제2 레이어의 노드 데이터에 대응되는 메모리 어드레스 값으로 재설정할 수 있다. 즉, 메모리 어드레스 값을 재사용할 수 있다. 따라서 컨트롤 코어가 제1 스케줄링의 메모리 어드레 스의 데이터를 재사용함으로써, 로컬 메모리는 별도의 메모리 쓰기 동작 없이 제2 스케줄링의 제2 레이어 노드 데이터로 활용할 수 있다. 예를 들면, 상술한 제2 스케줄링의 제2 연산 값은 제3 스케줄링의 제3 레이어의 노드 데이터로 설정된다. 구체 적으로 설명하면, 컨트롤 코어는 로컬 메모리에 저장된 제2 스케줄링의 제2 연산 값에 대응되는 메 모리 어드레스 값을 제3 스케줄링의 제3 레이어의 노드 데이터에 대응되는 메모리 어드레스 값으로 재설정할 수 있다. 즉, 메모리 어드레스 값을 재사용할 수 있다. 따라서 컨트롤 코어가 제2 스케줄링의 메모리 어드레 스의 데이터를 재사용함으로 써, 로컬 메모리은 별도의 메모리 쓰기 동작 없이 제3 스케줄링의 제3 레이 어 노드 데이터로 활용할 수 있다. 예를 들면, 상술한 제3 스케줄링의 제3 연산 값은 제4 스케줄링의 제4 레이어의 노드 데이터로 설정된다. 구체 적으로 설명하면, 컨트롤 코어는 로컬 메모리에 저장된 제3 스케줄링의 제3 연산 값에 대응되는 메 모리 어드레스 값을 제4 스케줄링의 제4 레이어의 노드 데이터에 대응되는 메모리 어드레스 값으로 재설정할 수 있다. 즉, 메모리 어드레스 값을 재사용할 수 있다. 따라서 컨트롤 코어가 제3 스케줄링의 메모리 어드레 스의 데이터를 재사용함으로 써, 로컬 메모리는 별도의 메모리 쓰기 동작 없이 제4 스케줄링의 제4 레이 어 노드 데이터로 활용할 수 있다. 또한, 컨트롤 코어는 스케줄링 순서와 메모리 재사용 여부를 판단해서 로컬 메모리을 제어하도록 구성되는 것도 가능하다. 이러한 경우 컨트롤 코어가 인공 신경망 모델의 구조 데이터 또는 인공 신경망 데이터 지역성 정보를 분석해서 효율적인 스케줄링을 제공할 수 있는 효과가 있다. 또한 메모리 재사용이 가능 한 연산에 필요한 데이터를 중복해서 로컬 메모리에 저장하지 않을 수 있기 때문에 메모리 사용량을 저감 할 수 있는 효과가 있다. 또한, 컨트롤 코어는 메모리 재사용만큼 저감된 메모리 사용량을 계산해서 로컬 메모리을 효율화 할 수 있다. 또한, 컨트롤 코어는 인공신경망 데이터 지역성 정보에 기초하여 스케줄링 순서를 파악하고, 로컬 메모리 에 필요한 데이터를 미리 저장하도록 구성될 수 있다. 따라서, 프로세싱 엘리먼트 어레이가 스케줄 링 된 순서에 따라 연산 시, 메인 메모리로부터 데이터를 요청하지 않고, 로컬 메모리에 사전 준비 된 데이터를 활용할 수 있다. 또한, 컨트롤 코어는 신경망 처리 장치의 구조 데이터에 기초해서, 로컬 메모리의 리소스 사 용량, 프로세싱 엘리먼트들(PE)의 리소스 사용량을 모니터링 하도록 구성될 수 있다. 따라서, 신경망 처리 장치 의 하드웨어 리소스 활용 효율을 향상시킬 수 있다. 일 실시예에 따른 신경망 처리 장치의 컨트롤 코어는 인공 신경망모델의 구조 데이터 또는 인공신 경망 데이터 지역성 정보를 활용하여 메모리를 재사용할 수 있다. 인공 신경망 모델이 심층 신경망일 경우, 레이어의 개수 및 연결망의 개수가 상당히 증가할 수 있으며, 이러한 경우 메모리 재사용의 효과가 더욱더 극대화될 수 있다. 만약, 신경망 처리 장치이 인공 신경망 모델의 구조 데이터 또는 인공신경망 데이터 지역성 정보 및 연산 순서를 파악하지 않을 경우, 컨트롤 코어는 로컬 메모리에 저장된 값들의 메모리 재사용 여부를 판단할 수 없다. 따라서, 컨트롤 코어는 각각의 프로세싱에 필요한 메모리 어드레스를 불필요하게 생성하고, 실질적으로 동일한 데이터를 하나의 메모리 어드레스에서 다른 메모리 어드레스로 복사해야 한다. 따 라서 불필요한 메모리 읽기 쓰기 작업이 발생되며, 로컬 메모리에 중복되는 값들이 저장되게 되어, 불필 요하게 메모리가 낭비될 수 있다. 프로세싱 엘리먼트 어레이는 인공 신경망의 노드 데이터와 연결망의 가중치 데이터를 연산하도록 구성된 복수의 프로세싱 엘리먼트들(PE)이 배치된 구성을 의미한다. 각각의 프로세싱 엘리먼트는 MAC (multiply and accumulate) 연산기 및/또는 ALU (Arithmetic Logic Unit) 연산기를 포함하도록 구성될 수 있다. 단, 본 개시 에 따른 예시들은 이에 제한되지 않는다. 프로세싱 엘리먼트 어레이는 복수의 프로세싱 엘리먼트들로 구성되거나, 하나의 프로세싱 엘리먼트 내부 에 MAC을 대체하여, 복수의 곱셈기(multiplier) 및 가산기 트리(adder tree)로 구현된 연산기들이 병렬로 배치 되어 구성되는 것도 가능하다. 이러한 경우, 프로세싱 엘리먼트 어레이는 복수의 연산기를 포함하는 적어 도 하나의 프로세싱 엘리먼트로 지칭되는 것도 가능하다. 프로세싱 엘리먼트 어레이는 복수의 프로세싱 엘리먼트들(PE)을 포함하도록 구성된다. 복수의 프로세싱 엘리먼트의 개수는 제한되지 않는다. 복수의 프로세싱 엘리먼트의 개수에 의해서 프로세싱 엘리먼트 어레이 의 크기 또는 개수가 결정될 수 있다. 프로세싱 엘리먼트 어레이의 크기는 N x M 매트릭스 형태로 구현될 수 있다. 여기서 N 과 M은 0보다 큰 정수이다. 프로세싱 엘리먼트 어레이는 N x M 개의 프로세싱 엘리먼트를 포함할 수 있다. 즉, 프로세싱 엘리먼트는 1개 이상일 수 있다. 프로세싱 엘리먼트 어레이의 크기는 신경망 처리 장치가 작동하는 인공 신경망 모델의 특성을 고려 하여 설계할 수 있다. 프로세싱 엘리먼트의 개수는 작동할 인공 신경망 모델의 데이터 크기, 요구되는 동작 속 도, 요구되는 소비 전력 등을 고려하여 결정될 수 있다. 인공 신경망 모델의 데이터 크기는 인공 신경망 모델의 레이어 수와 각각의 레이어의 가중치 데이터 크기에 대응되어 크기가 결정될 수 있다. 따라서, 일 실시예에 따른 신경망 처리 장치의 프로세싱 엘리먼트 어레이의 크기는 제한되지 않는 다. 프로세싱 엘리먼트 어레이의 프로세싱 엘리먼트들의 개수가 증가할수록 작동하는 인공 신경망 모델의 병렬 연산 능력이 증가되나, 신경망 처리 장치의 제조 비용 및 물리적인 크기가 증가될 수 있다. 예를 들면, 신경망 처리 장치에서 작동되는 인공 신경망 모델은 30개의 특정 키워드를 감지하도록 학습된 인공 신경망, 즉 AI 키워드 인식모델일 수 있으며, 이러한 경우, 신경망 처리 장치의 프로세싱 엘리먼트 어레이의 크기는 연산량 특성을 고려하여 4 x 3로 설계될 수 있다. 다르게 설명하면, 신경망 처리 장치 은 12개의 프로세싱 엘리먼트들을 포함하도록 구성될 수 있다. 단, 이에 제한되지 않으며, 복수의 프로세 싱 엘리먼트의 개수는 예를 들면, 8개 내지 16,384 범위 내에서 선택되는 것도 가능하다. 즉, 본 개시의 예시들 은 프로세싱 엘리먼트의 개수에 제한되지 않는다. 프로세싱 엘리먼트 어레이는 인공 신경망 연산에 필요한 덧셈, 곱셈, 누산 등의 기능을 수행하도록 구성 된다. 다르게 설명하면, 프로세싱 엘리먼트 어레이는 MAC(multiplication and accumulation) 연산을 수 행하도록 구성될 수 있다. 로컬 메모리는 TCM(tightly-coupled memory)일 수 있으며 신경망 처리 장치 내부에 마련된 전용 메모리 영역일 수 있다. TCM은 SRAM(static random-access memory)으로 구현될 수 있다. 메인 메모리는 신경망 처리 장치 외부에 마련된 범용 메모리 영역일 수 있다. 메인 메모리는 DRAM(dynamic random access memory)으로 구현될 수 있다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델을 처리할 때, 메인 메모리로부터 레이어 단위의 입력 데이터인 입력 특성 맵을 읽어 로컬 메모리에 일시적으로 저장한다. 프로세싱 엘리먼트 어레 이는 입력 특성 맵에 대한 연산 처리를 수행한 결과 생성된 출력 특성 맵을 로컬 메모리에 전달한 다. 컨트롤 코어는 로컬 메모리에 일시적으로 저장된 출력 특성 맵을 메인 메모리에 저장되 도록 로컬 메모리를 제어한다. 한편, 도 3을 참조하면 로컬 메모리는 복수의 로컬 메모리 블록(1239-1 내지 1239-N)으로 구성될 수 있다. 로컬 메모리는 SRAM으로 구현될 수 있으며, SRAM은 수많은 로컬 메모리 셀들의 배열로 구성되며, 복수의 로컬 메모리 셀은 워드 라인(wordline) 및 비트 라인(bitline)으로 연결될 수 있다. 복수의 로컬 메모리 셀 중 일부는 로컬 메모리 블록 단위로 구획될 수 있으며, 로컬 메모리는 복수의 로컬 메모리 블록(1239-1 내지 1239-N)로 구성될 수 있다. 즉, 로컬 메모리 셀은 로컬 메모리를 구성하는 최소 단위를 가리키며, 로컬 메모리 블록은 복수의 로컬 메모리 셀로 구성되어 로컬 메모리을 부분적 및 동적으로 운용하기 위한 최소 단위를 가리킨다. 예를 들어, 로컬 메모리의 전체 용량이 8MB 인 경우, 4 개의 로컬 메모리 블록으 로 구획되면, 각 로컬 메모리 블록은 각각 2MB의 연산량을 가질 수 있다. 또한, 로컬 메모리의 전체 용량 이 8MB 인 경우, 8 개의 로컬 메모리 블록으로 구획되면, 각 로컬 메모리 블록은 각각 1MB의 연산량을 가질 수 있다. 전술한 예와 같이 로컬 메모리 블록은 서로 균등한 용량을 가지도록 구획될 수도 있고, 서로 다른 용량을 가지도록 구획될 수도 있다. 예를 들어, 로컬 메모리의 전체 용량이 8MB 인 경우, 3 개의 로컬 메모리로 구획되면, 4MB의 연산량을 가지는 로컬 메모리 블록과 2MB의 연산량을 가지는 로컬 메모리 블록 2 개로 구성될 수 있다. 전술한 예시는 설명의 편의를 위한 것이며, 로컬 메모리 블록의 개수 및 로컬 메모리 블록 당 용량은 다양한 설계에 의해 조합될 수 있음은 물론이다. 일 실시예에 따른 로컬 메모리는 복수의 로컬 메모리 블록(1239-1 내지 1239-N)로 구획됨으로써, 신경망 처리 장치가 인공 신경망 모델을 처리할 때 복수의 로컬 메모리 블록(1239-1 내지 1239-N) 중 일부만이 작동하도록 할 수 있다. 복수의 로컬 메모리 블록(1239-1 내지 1239-N) 각각에는 메모리에 전원(전류)을 공급하는 전력 배선(미도시)과 공급되는 전류를 차단할 수 있는 스위치(미도시)가 마련될 수 있다. 따라서, 로컬 메모리는 컨트롤 코어 의 제어 신호에 따라 복수의 로컬 메모리 블록(1239-1 내지 1239-N) 중 적어도 하나가 오프 상태로 전환 하도록 할 수 있다. 예를 들어, 컨트롤 코어는 제1 로컬 메모리 블록(1239-1) 및 제2 로컬 메모리 블록 (1239-2)가 온 상태로, 제3 로컬 메모리 블록(1239-3) 내지 제N 로컬 메모리 블록(1239-N)을 오프 상태로 되도 록 로컬 메모리를 제어할 수 있다. 즉, 일 실시예에 따른 신경망 처리 장치는 로컬 메모리를 포함하고, 로컬 메모리는 N 개의 영역으로 구분되어 부분적으로 온/오프 될 수 있다. 부분적인 온/오프 동작은 캐시 메모리에서 적용되는 기술과 유사하지만, 본 개시의 다양한 실시예에서는 인공 신경망 모델의 특성 맵 사이즈에 따라 적어도 하나의 로컬 메 모리 블록을 온/오프 함으로써, 불필요한 전력 소모를 줄일 수 있다. 한편, 일 실시예에 따른 신경망 처리 장치에서 특성 맵 사이즈는 입력 특성 맵, 출력 특성 맵에 대한 연 산 및 레이어 자체를 처리하기 위해 필요한 로컬 메모리의 버퍼 용량일 수 있다. 일 실시예에 따른 신경 망 처리 장치는 입력 특성 맵, 출력 특성 맵 및 레이어를 모두 처리하기 위한 특성 맵 사이즈에 기초하여 복수의 로컬 메모리 블록(1239-1 내지 1239-N) 중 적어도 하나의 로컬 메모리가 오프(또는 온)되도록 로컬 메모 리를 제어할 수 있다. 상술한 바와 같이, 신경망 처리 장치는 로컬 메모리를 제어하기 위해, 입력 특성 맵, 출력 특성 맵 및 레이어 자체를 모두 고려하는 것 이외에도, 입력 특성 맵 또는 출력 특성 맵 중 어느 하나에 기반하여 로컬 메모리를 제어할 수 있다. 일 실시예에 따른 신경망 처리 장치는 입력 특성 맵을 처리하기 위한 버퍼 용량 사이즈에 기초하여 로컬 메모리를 제어할 수 있다. 예를 들어, 신경망 처리 장치는 입력 특성 맵을 처리하기 위한 버퍼 용 량 사이즈에 대해 가중치(예, 2배)를 적용한 것에 기초하여 오프되는 로컬 메모리 블록의 개수를 결정할 수 있 다. 또한, 일 실시예에 따른 신경망 처리 장치는 출력 특성 맵을 처리하기 위한 버퍼 용량 사이즈에 기초하여 로컬 메모리를 제어할 수 있다. 예를 들어, 신경망 처리 장치는 출력 특성 맵을 처리하기 위한 버 퍼 용량 사이즈에 대해 가중치(예, 2배)를 적용한 것에 기초하여 오프되는 로컬 메모리 블록의 개수를 결정할 수 있다. 신경망 처리 장치는 인공 신경망 모델을 처리할 때, 메인 메모리에서 처리할 특성 맵에 관한 데이 터를 읽고, 프로세싱 엘리먼트 어레이을 통해 연산 처리를 수행한다. 이 때, 신경망 처리 장치는 상대적으로 작은 사이즈의 특성 맵을 처리하는 경우 로컬 메모리 중 적어도 하나의 로컬 메모리 블록을 오프 상태로 시키고, 상대적으로 큰 사이즈의 특성 맵을 처리하는 경우 로컬 메모리의 모든 로컬 메모리 블록을 온 상태로 할 수 있다. 구체적인 실시예들에 대해서는 도 6 내지 도 8을 참조하여 상세히 설명한다. 한편, 로컬 메모리의 온/오프 운용 방식은 인공 신경망 모델의 레이어 별 특징 맵 사이즈에 따라 달라질 수 있다. 이와 관련하여 도 4 및 도 5를 참조하여 설명한다.도 4는 일 실시예에 따른 상대적으로 작은 연산량을 가지는 딥러닝 모델의 레이어 별 특징 맵 사이즈를 도시하 고, 도 5는 일 실시예에 따른 상대적으로 큰 연산량을 가지는 딥러닝 모델의 레이어 별 특징 맵 사이즈를 도시 한다. 도 4는 도 5에 대해 상대적으로 작은 연산량을 가지는 제1 딥러닝 모델로써, 1MB 이하인 특성 맵으로 구현되는 레이어 별 특성 맵 사이즈를 도시한다. 예를 들어, 제1 딥러닝 모델은 MobilenetEdgeTPU 일 수 있다. 만약, 제1 딥러닝 모델이 8MB의 메모리 크기(로컬 메모리의 용량, 도 2 및 도 3 참조)를 갖는 신경망 처 리 장치에서 동작 시 제1 딥러닝 모델은 1MB 이하의 로컬 메모리 블록 만을 사용하여도 된다. 따라서, 신 경망 처리 장치의 로컬 메모리의 전체 용량이 8MB이고 1MB의 8 개의 로컬 메모리 블록으로 구획되 는 경우, 한개의 로컬 메모리 블록만 구동하는 상태에서 연산 처리가 가능하다. 이 때, 로컬 메모리는 7 개의 로컬 메모리 블록이 오프 상태에 있게 된다. 도 5는 도 4에 대해 상대적으로 큰 연산량을 가지는 제2 딥러닝 모델로써, 다양한 사이즈를 가지는 특성 맵으로 구현되는 레이어 별 특성 맵 사이즈를 도시한다. 예를 들어, 제2 딥러닝 모델은 Deeplabv3+일 수 있다. 도 5는 제2 딥러닝 모델의 처리 순서에 따라 필요한 레이어 별 특성 맵의 사이즈를 도시한다. 특성 맵 사이즈에 관한 정보는 딥러닝 모델을 신경망 처리 장치를 기준으로 하는 컴파일 과정에서 획득될 수 있다. 제2 딥 러닝 모델은 초반 레이어들의 사이즈가 약 8MB 이하이고, 중반 레이어들의 사이즈는 약 4MB 이하이고, 후반 레 이어들의 사이즈는 약 8MB 이하 또는 이상일 수 있다. 제2 딥러닝 모델이 처리되는 과정에서, 신경망 처리 장치는 레이어를 처리하는 시점에 필요한 로컬 메모 리의 일부 영역을 온 상태로 하고, 필요하지 않은 로컬 메모리의 나머지 일부 영역을 오프 상태로 할 수 있다. 예를 들어, 신경망 처리 장치의 로컬 메모리의 전체 용량이 8MB이고 1MB의 8 개의 로 컬 메모리 블록으로 구획되는 경우에는, 초반 레이어들이 연산 처리되는 구간에서는 모든 로컬 메모리 블록이 온 상태로 동작하고, 중반 레이어 들이 연산 처리되는 구간에서는 4 개의 로컬 메모리 블록이 오프 상태로 동작 하고, 후반 레이어 들이 연산 처리되는 구간에서는 다시 모든 로컬 메모리 블록이 온 상태로 동작할 수 있다. 일 실시예에 따른 신경망 처리 장치는 하나의 레이어가 결과 값인 특성 맵을 생성하기 위해 필요한 데이 터 크기에 기초하여 로컬 메모리의 적어도 하나의 로컬 메모리 블록을 오프 상태로 하고, 이 후에 필요한 데이터 크기에 따라 로컬 메모리 블록을 다시 온 상태로 전환하는 동적 운용이 가능하다. 레이어 별 버퍼 용량 의 크기는 특성 맵을 생성하기 위해 필요한 데이터 크기에 기초하여 결정될 수 있다. 즉, 일 실시예에 따른 신 경망 처리 장치는 레이어 별 버퍼 용량의 크기에 기초하여 로컬 메모리에서 오프 되는 로컬 메모리 블록의 개수를 결정할 수 있다. 레이어에 대응하는 특성 맵의 사이즈는 하나의 레이어가 결과 값인 특성 맵을 생성하기 위한 데이터 크기와 관련된다. 특성 맵에 대한 정보는 컴파일 시점에 알 수 있고, 레이어 별 해당 정 보에 대한 태깅(tagging)을 통해 컴파일 된 딥러닝 모델에 특성 맵의 사이즈 정보를 추가하여 모델 동작 시 필 요로 하는 버퍼 용량의 크기를 미리 알 수 있다. 도 6은 일 실시예에 따른 전자 장치에서 레이어 별 로컬 메모리 블록의 운용을 나타내는 제어 블록도이다. 설명 의 편의를 위해 도 6은 전체 용량이 8MB이고, 1MB의 로컬 메모리 블록이 8개로 구성되는 로컬 메모리를 기준으로 설명하지만, 로컬 메모리 블록의 용량, 개수 및 구획 방식은 다양한 설계에 따를 수 있다. 일 실시예에 따른 컨트롤 코어는 컴파일 과정에서 획득된 특성 맵 사이즈에 기초하여 적어도 하나의 로컬 메모리 블록을 온/오프 할 수 있다. 일 실시예에 따른 컨트롤 코어는 인공 신경망 모델의 구조에 따라서 각 레이어 별 연산을 순차적으로 처리할 수 있다. 예를 들어, 컨트롤 코어는 제1 레이어, 제2 레이어, 제 3 레이어 및 제4 레이어 순으로 연산을 순차적으로 처리한다. 제1 레이어에서 필요한 버퍼 용량이 4MB이고, 제2 레이어에서 필요한 버퍼 용량이 8MB이고, 제3 레이어에서 필요한 버퍼 용량이 2MB이고, 제4 레이어에서 필요한 버퍼 용량이 4MB이다. 여기서, 버퍼 용량은 해당 레이어를 처리하기 위해 필요한 로컬 메모리의 용량을 가리키며, 버퍼 용량에 따라 온 또는 오프 되는 로컬 메모리 블록의 개수가 결정될 수 있다. 예를 들어, 컨트롤 코어는 제1 레이어의 특성 맵이 프로세싱 엘리먼트 어레이에 의해 연산 처리될 때, 4 개의 로컬 메모리 블록을 오프 시킬 수 있다. 다음으로, 컨트롤 코어는 제2 레이어의 특성 맵이 프 로세싱 엘리먼트 어레이에 의해 연산 처리될 때, 모든 로컬 메모리 블록을 온 시킬 수 있다. 다음으로,컨트롤 코어는 제3 레이어의 특성 맵이 프로세싱 엘리먼트 어레이에 의해 연산 처리될 때, 6 개의 로컬 메모리 블록을 오프 시킬 수 있다. 다음으로, 컨트롤 코어는 제4 레이어의 특성 맵이 프로세싱 엘리 먼트 어레이에 의해 연산 처리될 때, 4 개의 로컬 메모리 블록을 오프 시킬 수 있다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 일 실시예 따른 컨트롤 코어는 딥러닝 모델(인공 신경망 모델)을 로딩한다. 일 실시예에 따른 컨트 롤 코어는 메인 메모리에 저장된 인공 신경망 모델의 데이터를 로컬 메모리로 로딩 시킬 수 있다. 인공 신경망의 데이터는 로컬 메모리 및/또는 메인 메모리에 저장될 수 있다. 컨트롤 코어 는 인공 신경망의 데이터가 저장된 메모리에 액세스하여 필요한 데이터를 활용할 수 있다. 따라서, 컨트 롤 코어는 구동할 인공 신경망 모델의 레이어의 특성 맵, 노드 데이터 및 연결망의 가중치 데이터를 메인 메모리에서 가져와서 로컬 메모리에 저장할 수 있다. 한편, 일 실시예에 따른 프로세서는 온(또는 오프) 되는 로컬 메모리 블록의 개수에 기초하여 메인 메모리 의 대역폭(Bandwidth)를 조절할 수 있다. 즉, 프로세서는 메인 메모리의 대역폭을 조절함으로써, 로컬 메모리에 로딩하는 데이터의 양을 조절할 수 있다. 일 실시예에 따른 프로세서는 로컬 메모리(123 5)가 온/오프 제어되는 동안에, 온(또는 오프) 상태인 로컬 메모리 블록의 개수에 기초하여 메인 메모리 의 대역폭을 조절할 수 있다. 일 실시예에 따른 컨트롤 코어는 레이어 별 특성 맵 사이즈와 로컬 메모리에 기반하여 로컬 메모리 에 속하는 로컬 메모리 블록의 개수를 결정할 수 있다. 일 실시예에 따른 컨트롤 코어는 레이어 별 특성 맵 사이즈가 로컬 메모리의 용량보다 작을 경우 , 적어도 하나의 로컬 메모리 블록를 오프 시킬 수 있다. 컨트롤 코어는 컴파일 과정에 서 획득한 레이어에서 필요한 버퍼 용량에 관한 정보에 기반하여 오프 시킬 로컬 메모리 블록의 개수를 결정할 수 있다. 일 실시예에 따른 신경망 처리 장치는 버퍼 용량 대비 레이어 별 특성 맵 사이즈가 작을 경우 불필요한 로컬 메모리 블록를 오프 시켜 전체적인 소비 전력을 감소시킬 수 있다. 일 실시예에 따른 컨트롤 코어는 레이어 별 특성 맵 사이즈가 로컬 메모리의 용량보다 크거나 같을 경우, 모든 로컬 메모리 블록(1239-1 내지 1239-N, 도 3 참조)를 온 시킬 수 있다. 이 경우, 해당 레이어의 특성 맵 사이즈가 버퍼 용량에 비해 큰 경우로써, 모든 로컬 메모리 블록을 온 상태로 하여 정 상적인 연산 처리를 가능하게 한다. 일 실시예에 따른 컨트롤 코어는 MAC(multiply and accumulate) 연산을 처리한다. 컨트롤 코어 는 705 단계 및/또는 707 단계에 따라 적어도 하나의 로컬 메모리 블록을 오프 하거나, 모든 로컬 메모리 블록를 온 시킬 수 있다. 일 실시예에 따른 신경망 처리 장치는 오프(또는 온)되는 로컬 메모리 블록의 개수를 결정하기 위 해 컴파일 과정에서 획득한 정보를 이용할 수 있다. 이하에서는, 도 8을 참조하여 로컬 메모리 블록의 개 수를 결정하는 획득하는 과정에 대해 상세히 설명한다. 도 8은 일 실시예에 따른 전자 장치가 컴파일 과정 중에서 레이어 별 추가 정보를 태깅하는 방법의 흐름도이다. 신경망 처리 장치에서 동작하는 인공 신경망 모델은 신경망 처리 장치의 하드웨어 특성에 맞도록 하는 컴파일 과정을 거치게 된다. 즉, 컴파일 과정은 메인 메모리에서 특성 맵에 관한 데이터 등이 신경 망 처리 장치에 로딩되면, 신경망 처리 장치에서 호환이 가능하도록 하는 인공 신경망 모델을 변환 시킨다. 이 때, 인공 신경망 장치는 인공 신경망 모델을 파싱(parsing)하는 과정을 통해 특성 맵을 처리 하기 위해 필요한 로컬 메모리의 버퍼 용량을 알 수 있게 된다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델을 메인 메모리로부터 획득한다. 일 실시예에 따른 신경망 처리 장치는 인공 신경망 모델이 전자 장치(101, 도 1 참조)의 신경망 처리 장 치에서 실행되도록 인공 신경망 모델을 하드웨어 특성에 맞도록 컴파일 한다. 인공 신경망 처리 장 치에 마련된 컴파일러(미도시)는 인공 신경망 모델이 신경망 처리 장치에서 실행되도록 인공 신경 망 모델을 컴파일 할 경우, 프로세싱 엘리먼트 어레이-로컬 메모리 레벨에서 인공 신경망 모델의인공 신경망 데이터 지역성이 구성될 수 있다. 일 실시예에 따른 신경망 처리 장치는 컴파일 과정에서 지 역성이 구성되는 것과 함께 레이어 별 특성 맵에 대한 사이즈를 획득할 수 있다. 컴파일러는 별도의 소프트웨어 로 구현될 수 있다. 컴파일은 상술한 바와 같이 신경망 처리 장치에서 자체적으로 수행되거나, 신경망 처리 장치 외부 에서도 수행될 수 있다. 예를 들어, 컴파일은 어플리케이션 프로세서인 메인 프로세서(121, 도 1 참조)에 마련 된 SDK(software development kit)에 의해 수행될 수 있다. 어플리케이션 프로세서는 컴파일 과정에서 획득된 레이어 별 특성 맵에 대한 사이즈 정보를 메인 메모리(1240, 도 2)에 저장함으로써, 신경망 처리 장치로 하여금 상기 사이즈 정보를 로딩 할 수 있도록 한다. 또한, 어플리케이션 프로세서는 신경망 처리 장치에 실시간으로 레이어에 관한 정보, 레이어 별 특성 맵 사이즈에 관한 정보를 제공하고, 신경망 처리 장치가 특성 맵을 처리할 수 있는지 확인하는 런타임(Runtime) 방식의 컴파일을 수행할 수 있다.일 실시예에 따른 신경 망 처리 장치는 레이어 별 특성 맵의 사이즈를 확인한다. 신경망 처리 장치는 인공 신경망 모 델이 신경망 처리 장치에서 동작할 때 필요한 레이어 별 특성 맵의 사이즈를 미리 알 수 있고, 특성 맵을 처리하기 위해 필요한 로컬 메모리의 버퍼 용량을 획득하게 된다. 일 실시예에 따른 신경망 처리 장치는 레이어 별 특성 맵 사이즈에 대응되는 로컬 메모리의 버퍼 용량을 인공 신경망 모델에 태깅(tagging)한다. 이 때, 태깅되는 인공 신경망 모델은 컴파일이 완료된 데 이터에 해당한다. 상술한 바와 같이, 컴파일 과정으로 획득한 레이어 별 특성 맵 사이즈에 관한 정보는 컴파일 된 모델에 태깅 (Tagging)되면, 컴파일이 완료된 인공 신경망 모델은 순차적으로 처리되는 레이어 별 특성 맵의 사이즈 정보를 가지고 있어 사용할 로컬 메모리의 버퍼 용량을 결정할 수 있고, 버퍼 용량을 통해 사용할 로컬 메모리 블록 영역과 사용하지 않을 로컬 메모리 블록 영역에 대한 온/오프가 가능하다. 한편, 개시의 일 실시예에 따르면, 신경망 처리 장치는 적어도 하나의 로컬 메모리 블록을 레이어 의 처리 순서에 따라 온/오프 하는 방식을 통해 신경망 처리 장치에서 소비되는 전력을 줄일 수 있다. 로 컬 메모리 블록의 온/오프는 로컬 메모리에 공급되는 전류를 차단할 수 있는 스위치(예, 트랜지스 터) 제어를 통해 구현될 수 있다. 만약, 복수의 레이어가 순차적으로 처리될 때, 인접한 레이어 간에 특성 맵 사이즈 격차가 지속적으로 존재하는 경우, 로컬 메모리 블록의 온/오프 과정이 짧은 싸이클 마다 발생할 수 있다. 온/오프 과정에서도 스위칭에 의해 전력 소모는 발생하게 되며, 로컬 메모리 블록에 대한 온/오 프가 모든 레이어 마다 이루어지면, 모든 로컬 메모리 블록이 온 되어 있는 만큼 전력 소모가 발생할 수 있다. 이러한 경우, 로컬 메모리의 운용 방안에 대해 도 9 내지 도 11을 참조하여 설명한다. 도 9는 일 실시예에 따른 신경망 처리 장치에서 서로 다른 버퍼 용량을 가지는 레이어 그룹을 처리할 때 로컬 메모리의 운용 방법을 도시하고, 도 10은 일 실시예에 따른 신경망 처리 장치에서 서로 다른 버퍼 용량을 가지 는 레이어 그룹을 처리할 때 도 9와 다른 로컬 메모리의 운용 방법을 도시한다. 도 9 및 도 10은 공통적으로 초반 레이어 그룹, 중반 레이어 그룹, 후반 레이어 그룹 순으로 연산 처리의 순서 에 따라 레이어 별 특성 맵 사이즈를 도시한다. 초반 레이어 그룹에 속한 레이어들의 사이즈 평균은 8MB에 근접하므로, 신경망 처리 장치는 로컬 메모리 의 버퍼 용량이 8MB가 되도록 로컬 메모리 블록를 제어한다. 예를 들어, 신경망 처리 장치는 로컬 메모리의 전체 용량이 8MB일 때, 모든 로컬 메모리 블록이 온 되도록 한다. 중반 레이어 그룹에 속한 레이어들의 사이즈 평균은 4MB에 근접하므로, 신경망 처리 장치는 로컬 메모리 의 버퍼 용량이 4MB가 되도록 로컬 메모리 블록를 제어한다. 예를 들어, 신경망 처리 장치는 로컬 메모리의 전제 용량이 8MB이고, 로컬 메모리 블록의 단위 용량이 1MB일 때, 4 개의 로컬 메모 리 블록가 오프 되도록 한다. 후반 레이어 그룹에 속한 레이어들의 사이즈 평균은 초반 레이어 그룹과 같이 8MB에 근접하므로, 신경망 처리 장치는 로컬 메모리의 버퍼 용량이 8MB가 되도록 로컬 메모리 블록를 제어한다. 예를 들어, 신경망 처리 장치는 로컬 메모리의 전체 용량이 8MB일 때, 모든 로컬 메모리 블록이 온 되도 록 한다.일반적으로, 신경망 처리 장치의 연산 처리 과정에서 초반과 후반에서는 중반에서의 연산 처리 과정보다 많은 버퍼 용량이 필요하지만 이러한 양상은 인공 신경망 모델에 따라 상이할 수 있다. 도 9와 도 10 간의 차이점은 중반 레이어 그룹에서 평균 사이즈보다 작은 특성 맵 사이즈를 가지는 레이어가 인 접하는지 여부이다. 도 9와 같이, 중반 레이어 그룹의 평균 사이즈(4MB)보다 작은 2 개의 레이어(A, B)가 서로 인접하지 않는 경우, A 레이어 전후로 로컬 메모리 블록의 온-오프-온이 발생하고, B 레이어 전후로도 로 컬 메모리 블록의 온-오프-온이 발생하게 된다. 일 실시예에 따른 신경망 처리 장치는 전술한 과정 에서 A 레이어 및 B 레이어에 대한 연산 처리 과정에서 로컬 메모리 블록에 대한 오프를 생략함으로써, 스위칭 제어에 의한 전력 소모를 방지할 수 있다. 도 10은 중반 레이어 그룹의 평균 사이즈(4MB)보다 작은 복수의 레이어(C)가 서로 인접하여 있는 경우이다. 이 경우에, 신경망 처리 장치는 연속되는 레이어에 대한 연산 처리 과정에서 로컬 메모리 블록에 대한 오프 상태를 지속하여 나머지 2MB의 로컬 메모리 블록에 대한 전력 소모를 줄일 수 있다. 도 11은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 일 실시예에 따른 신경망 처리 장치는 연속되는 복수의 레이어 각각의 버퍼 용량을 확인한다. 여기 서, 버퍼 용량은 연속되는 각각의 레이어를 처리하기 위해 필요한 로컬 메모리의 용량을 가리키며, 버퍼 용량에 따라 온 또는 오프 되는 로컬 메모리 블록의 개수가 결정될 수 있다. 일 실시예에 따른 신경망 처리 장치는 제1 버퍼 용량과 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 한다. 이 때, 제1 버퍼 용량은 제2 버퍼 용량보다 큰 값을 갖는 것을 전제로 한다. 도 9 및 도 10을 참조 하여 예를 들면, 그룹핑 된 복수의 레이어는 중반 레이어 그룹에 대응될 수 있고, 제1 버퍼 용량은 4MB이고, 제 2 버퍼 용량은 2MB가 될 수 있다. 로컬 메모리에서는, 그룹핑 된 복수의 레이어 내에서 상대적으로 작은 버퍼 용량을 필요로 하는 레이어의 인접성에 따라, 오프 되는 로컬 메모리 블록의 개수가 결정된다. 일 실시예에 따른 신경망 처리 장치는 제2 버퍼 용량을 가지는 레이어가 연속되는지 확인한다. 일 실시예에 따른 신경망 처리 장치는 제2 버퍼 용량을 가지는 레이어가 연속되지 않으면, 제1 버퍼 용량 에 기초하여 오프 되는 로컬 메모리 블록의 개수를 결정한다. 도 9를 참조하면, 중반 레이어 그룹 은 제1 버퍼 용량을 가지는 레이어 들과 제2 버퍼 용량을 가지는 2 개의 레이어(A, B)를 포함한다. 이 때, 2 개 의 레이어(A, B)가 서로 연속하지 않는 경우, A 레이어 전후로 로컬 메모리 블록의 온-오프-온이 발생하 고, B 레이어 전후로도 로컬 메모리 블록의 온-오프-온이 발생하므로, 로컬 메모리 블록를 스위칭 하기 위한 전력 소모가 발생한다. 개시의 일실시예에 따른 신경망 처리 장치는 레이어 각각의 버퍼 용량 을 반영하여 오프 되는 로컬 메모리 블록의 개수를 결정하지만, 상대적으로 버퍼 용량이 작은 레이어가 연속되지 않는 경우에는 많은 분포를 차지하는 버퍼 용량인 제1 버퍼 용량에 기초하여 로컬 메모리 블록 을 오프 할 수 있다. 따라서, 본 실시예에서는 A 및 B 레이어에 대한 연산 처리 시 8 개 중 6 개가 아닌 4 개의 로컬 메모리 블록이 오프 된다. 일 실시예에 따른 신경망 처리 장치는 제2 버퍼 용량을 가지는 레이어가 연속되면, 제1 버퍼 용량 및 제2 버퍼 용량에 기초하여 오프 되는 로컬 메모리 블록의 개수를 결정한다. 도 10을 참조하면, 중반 레 이어 그룹은 제1 버퍼 용량을 가지는 레이어 들과 제2 버퍼 용량을 가지는 레이어 들을 포함한다. 이 때, 제2 버퍼 용량을 가지는 레이어 들은 서로 인접하여 순차적인 연산 처리 과정이 수행된다. 신경망 처리 장치 는 중반 레이어 그룹 내에 제2 버퍼 용량을 가지는 레이어들(C)에 의해 지속적으로 2MB의 로컬 메모리 블록 만을 가동시켜 전력 소모를 줄일 필요가 있다. 따라서, 본 실시예에서는 도 9에 따른 실시예와 달리, 제1 버퍼 용량 및 제2 버퍼 용량 모두를 고려하여 오프 되는 로컬 메모리 블록의 개수가 결정된다. 즉, C 구 간의 레이어 들이 연산 처리되는 과정에서는 8 개 중 6 개의 로컬 메모리 블록이 오프 된다. 도 12 및 도 13은 도 11에 따른 동작 방법이 혼합 정밀도(Mixed Precision) 모델에 적용될 수 있음을 설명하기 위한 도면이다. 인공 신경망 모델에 대한 양자화(quantization) 기술이 발전하면서, 인공 신경망의 레이어 별 중요도에 따라 비 트 길이(bit-width)를 레이어의 특징 맵(feature map) 사이즈를 차별적으로 설정할 수 있다.인공 신경망 모델은 학습 이후에 양자화를 통해서 모델 경량화가 이루어질 수 있다. 인공 신경망 모델이 학습된 이후, 레이어의 중요도에 기초하여 특징 맵의 사이즈는 양자화 될 수 있다. 예를 들어, 도 12을 참조하면 양자화는 float타입인 텐서 가중치(Tensor weight)와 활성화 함수(Activation Function)를 int형으로 변환하여 모델의 크기를 줄이고 추론(test) 속도를 높일 수 있다. 구체적으로, 기 학습 된 FP 32 모델은 FP 16(16 bit floating points) 또는 INT 8로 양자화 될 수 있다. 도 12는 두 가지 비트 길이 인 FP 16과 INT 8만을 사용하여 레이어 별로 양자화 된 모델의 일 예이다. 이 경우, 양자화 과정을 거치게 되면, INT 8인 양자화가 적용된 레이어에서 사용되는 특성 맵의 사이즈는 FP 16에 비하여 작은 값을 가지게 되 고, FP 16의 양자화가 적용된 레이어에서 사용되는 특성 맵의 사이즈는 INT 8에 비하여 큰 값을 가지게 된다. 즉, 인공 신경망 모델이 양자화 되면, 로컬 메모리 블록이 오프 될 수 있는 기회가 양자화 되지 않은 모 델보다 많아지게 된다. 도 13은 가중치(weight)와 활성화(activation) 계층에 할당하는 비트를 레이어 별로 모두 다르게 양자화 하는 모델의 예이다. 즉, 가중치와 활성화 계층에 할당하는 bit를 레이어 별로 모두 다르게 양자화 하는 모델의 예이 다. 도 13에 따른 방식에서는 비트 길이가 작은 레이어(제3 레이어[3bit/5bit], 제5 레이어[4bit/6bit])의 경우 의 특성 맵의 사이즈가 작아질 가능성이 크게 된다. 상술한 바와 같이, 양자화 과정이 처리된 딥러닝 모델이 신경망 처리 장치에서 동작할 경우에도 레이어 별 특성 맵 사이즈 정보를 활용하여 특성 맵 사이즈가 작아지는 레이어가 동작할 때 적어도 하나의 로컬 메모리 블록를 오프 시키면 양자화 동작 중에서도 전력 소모를 줄일 수 있다. 본 개시는 NPU에서 SRAM에 의한 전력 소비를 낮출 수 있는 전자 장치 및 그 동작 방법을 제공하기 위한 것이다. 다만, 이하에서 설명되는 실시예들은 전술한 목적에 제한되지 않으며, 다른 목적을 위한 구성으로도 동작할 수 있음에 유의한다. 본 개시의 일 실시예에 따르면 전자 장치는 프로세싱 엘리먼트 어레이와, 복수의 로컬 메모리 블록으로 구성되 고, 프로세싱 엘리먼트 어레이에서 처리되는 복수의 특성 맵에 대한 데이터를 저장하는 로컬 메모리와 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코어를 포함할 수 있다. 일 실시예에 따른 컨트 롤 코어는, 레이어에 대응하는 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 적어도 하나의 로컬 메모리 블록이 오프 되도록 로컬 메모리를 제어할 수 있다. 일 실시예에 따른 전자 장치는, 인공 신경망 모델을 제공하도록 인공 신경망 모델을 제1 언어 형태로 저장하는 메인 메모리와 메인 메모리에 저장된 제1 언어 형태의 인공 신경망 모델을 로컬 메모리에 제공하는 프로세서를 더 포함할 수 있다. 일 실시예에 따른 프로세서는, 제1 언어 형태인 인공 신경망 모델이 제2 언어 형태로 컴파 일 될 때, 특성 맵의 사이즈에 대응되는 로컬 메모리의 버퍼 용량을 컴파일 된 인공 신경망 모델에 태깅 (Tagging)할 수 있다. 일 실시예에 따른 프로세서는, 로컬 메모리가 제어되는 동안에, 온 상태인 로컬 메모리 블록의 개수에 기초하여 메인 메모리의 대역폭을 조절하고, 로컬 메모리는 조절된 대역폭에 기초하여 메인 메모리로부터 데이터를 획득 할 수 있다. 일 실시예에 따른 컨트롤 코어는, 레이어 별 특성 맵의 사이즈에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되 는 로컬 메모리 블록의 개수를 결정할 수 있다. 일 실시예에 따른 컨트롤 코어는, 레이어 별 특성 맵의 사이즈가 복수의 로컬 메모리 블록의 전체 버퍼 용량보 다 크면, 복수의 로컬 메모리 블록 전체를 온(ON)시킬 수 있다. 일 실시예에 따른 로컬 메모리는, 컨트롤 코어와 연관되어 레이어 별 특성 맵을 컨트롤 코어에 제공하는 TCM(tightly-coupled memory)일 수 있다. 일 실시예에 따른 프로세서는, 제1 레이어의 특성 맵 사이즈에 대응되는 제1 버퍼 용량을 제2 언어 형태인 인공 신경망 모델에 태깅하고, 제1 레이어 다음에 처리되는 제2 레이어의 특성 맵 사이즈에 대응되는 제2 버퍼 용량 을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하고, 제2 레이어 다음에 처리되는 제3 레이어의 특성 맵 사 이즈에 대응되는 제3 버퍼 용량을 제2 언어 형태인 인공 신경망 모델에 태깅할 수 있다. 일 실시예에 따른 컨트롤 코어는, 연속되는 복수의 레이어를 버퍼 용량으로 구별되는 복수의 레이어 그룹으로 분류하고, 레이어 그룹에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를 결정할 수 있다. 일 실시예에 따른 컨트롤 코어는, 제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수 의 레이어를 그룹핑 하고, 레이어 그룹 내에 제2 버퍼 용량을 가지는 레이어가 연속되지 않으면, 제1 버퍼 용량 에 기초하여 오프(OFF)되는 로컬 메모리 블록의 개수를 결정할 수 있다다. 일 실시예에 따른 컨트롤 코어는, 제1 버퍼 용량과 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레 이어를 그룹핑 하고, 레이어 그룹 내에 제2 버퍼 용량을 가지는 레이어가 연속되면, 제1 버퍼 용량 및 제2 버퍼 용량에 기초하여 복수의 셀 중 오프(OFF)되는 로컬 메모리 블록의 개수를 결정할 수 있다. 일 실시예에 따른 컨트롤 코어는, 복수의 로컬 메모리 블록 중 일부가 오프 된 상태에서 MAC(multiply and accumulate) 연산을 수행하도록 프로세싱 엘리먼트 어레이를 제어할 수 있다. 본 개시의 일 실시예에 따르면 신경망 처리 장치를 포함하는 전자 장치의 동작 방법에서 신경망 처리 장치는 프 로세싱 엘리먼트 어레이와 특성 맵(feature map)을 프로세싱 엘리먼트 어레이에 제공하고, 복수의 로컬 메모리 블록으로 구성되는 로컬 메모리와 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코 어를 포함할 수 있다. 일 실시예에 따른 동작 방법은 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 일부가 오프 되도록 적어도 하나의 로컬 메모리 블록을 컨트롤 코어를 통해 제어하는 동작을 포함할 수 있다. 일 실시예에 따른 동작 방법에서 전자 장치는 신경망 처리 장치에 인공 신경망 모델을 제공하도록 인공 신경망 모델을 제1 언어 형태로 저장하는 메인 메모리를 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 제1 언어 형태인 인공 신경망 모델이 제2 언어 형태로 컴파일 하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방 법은 레이어 별 특성 맵의 사이즈에 대응되는 로컬 메모리의 버퍼 용량을 컴파일 된 인공 신경망 모델에 태깅 (Tagging)하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 레이어 별 특성 맵의 사이즈에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를 결정하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 레이어 별 특성 맵의 사이즈가 복수의 로컬 메모리 블록의 전체 버퍼 용량보다 크면, 복수의 로컬 메모리 블록 전체를 온(ON)시키는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법에서 로컬 메모리는 컨트롤 코어와 연관되어 레이어 별 특성 맵을 컨트롤 코어에 제 공하는 TCM(tightly-coupled memory)일 수 있다. 일 실시예에 따른 동작 방법에서 컴파일 하는 동작은 제1 레이어의 특성 맵 사이즈에 대응되는 제1 버퍼 용량을 상기 제2 언어 형태인 인공 신경망 모델에 태깅하는 동작과 제1 레이어 다음에 처리되는 제2 레이어의 특성 맵 사이즈에 대응되는 제2 버퍼 용량을 제2 언어 형태인 인공 신경망 모델에 태깅하는 동작과 제2 레이어 다음에 처리되는 제3 레이어의 특성 맵 사이즈에 대응되는 제3 버퍼 용량을 제2 언어 형태인 인공 신경망 모델에 태깅 하는 동작을 포함할 수 있다. 일 실시예에 따른 동작 방법은 연속되는 복수의 레이어를 버퍼 용량으로 구별되는 복수의 레이어 그룹으로 분류 하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 레이어 그룹에 대응되는 버퍼 용량에 기초하여 오프(OFF) 되는 로컬 메모리 블록의 개수를 결정하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 제1 버퍼 용량과 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이 어를 그룹핑 하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 레이어 그룹 내에 제2 버퍼 용량을 가지는 레이어가 연속되지 않으면, 제1 버퍼 용량에 기초하여 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하 는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 제1 버퍼 용량과 상기 제1 버퍼 용량 보다 작은 제2 버퍼 용량을 가지는 복수의 레이어를 그룹핑 하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 레이어 그룹 내에 제2 버퍼 용 량을 가지는 레이어가 연속되면, 제1 버퍼 용량 및 제2 버퍼 용량에 기초하여 복수의 셀 중 오프(OFF)되는 로컬 메모리 블록의 개수를 결정하는 동작을 더 포함할 수 있다. 일 실시예에 따른 동작 방법은 복수의 로컬 메모리 블록 중 일부가 오프 된 상태에서 MAC(multiply and accumulate) 연산을 수행하도록 프로세싱 엘리먼트 어레이를 제어하는 동작을 더 포함할 수 있다. 본 개시의 일 실시예에 따르면 신경망 처리 장치는, 프로세싱 엘리먼트 어레이와, 복수의 로컬 메모리 블록으로 구성되고, 프로세싱 엘리먼트 어레이에서 처리되는 레이어 별 특성 맵에 대한 데이터를 저장하는 로컬 메모리와, 프로세싱 엘리먼트 어레이 및 로컬 메모리를 제어하도록 구성되는 컨트롤 코어를 포함할 수 있다. 일 실시예에 따른 컨트롤 코어는, 레이어에 대응하는 특성 맵의 사이즈에 기초하여 복수의 로컬 메모리 블록 중 적 어도 하나의 로컬 메모리 블록이 오프 되도록 상기 로컬 메모리를 제어할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2023-0149252", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 일 실시예들에 따른 전자 장치 내의 NPU의 블록도이다. 도 3은 일 실시예에 따른 로컬 메모리를 구성하는 복수의 셀을 도시한다. 도 4는 일 실시예에 따른 상대적으로 작은 연산량을 가지는 딥러닝 모델의 레이어 별 특징 맵 사이즈를 도시한 다. 도 5는 일 실시예에 따른 상대적으로 큰 연산량을 가지는 딥러닝 모델의 레이어 별 특징 맵 사이즈를 도시한다. 도 6은 일 실시예에 따른 전자 장치에서 레이어 별 로컬 메모리 블록의 운용을 나타내는 제어 블록도이다. 도 7은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 도 8은 일 실시예에 따른 전자 장치가 컴파일 과정 중에서 레이어 별 추가 정보를 태깅하는 방법의 흐름도이다. 도 9는 일 실시예에 따른 신경망 처리 장치에서 서로 다른 버퍼 용량을 가지는 레이어 그룹을 처리할 때 로컬 메모리의 운용 방법을 도시한다. 도 10은 일 실시예에 따른 신경망 처리 장치에서 서로 다른 버퍼 용량을 가지는 레이어 그룹을 처리할 때 도 9 와 다른 로컬 메모리의 운용 방법을 도시한다. 도 11은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 도 12 및 도 13은 도 11에 따른 동작 방법이 혼합 정밀도(Mixed Precision) 모델에 적용될 수 있음을 설명하기 위한 도면이다."}
