{"patent_id": "10-2024-7004166", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0054265", "출원번호": "10-2024-7004166", "발명의 명칭": "다수의 변환을 사용한 데이터 버스 반전", "출원인": "자일링크스 인코포레이티드", "발명자": "스리니바산 크리슈난"}}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "송신기 회로부에 있어서,제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하도록 구성된 반전 회로부;상기 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성하도록 구성된 제1 변환 회로부; 및선택 회로부로서,상기 제1 데이터 워드와 상기 제2 데이터 워드 사이의 제1 비트 반전 수, 상기 제1 변환된 데이터 워드와 상기제2 데이터 워드 사이의 제2 비트 반전 수, 및 상기 제2 변환된 데이터 워드와 상기 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 상기 제1 데이터 워드, 상기 제1 변환된 데이터 워드 및 상기 제2 변환된 데이터 워드 중 하나를 선택하고;상기 선택한 데이터 워드를 출력하도록 구성된, 상기 선택 회로부를 포함하는, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제1 데이터 워드 및 상기 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행하여 제3 변환된 데이터 워드를 생성하도록 구성된 제2 변환 회로부를 더 포함하며, 상기 제2 반전 가능 연산은 상기 제1반전 가능 연산과 다른, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서, 상기 제2 반전 가능 연산은 비트별 XNOR 연산인, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 선택 회로부는,상기 제1 데이터 워드와 상기 제2 데이터 워드 사이의 상기 제1 비트 반전 수, 상기 제1 변환된 데이터 워드와상기 제2 데이터 워드 사이의 상기 제2 비트 반전 수, 및 상기 제2 변환된 데이터 워드와 상기 제2 데이터 워드사이의 상기 제3 비트 반전 수를 결정하도록 추가로 구성되는, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 제1 데이터 워드, 상기 제1 변환된 데이터 워드, 및 상기 제2 변환된 데이터 워드 중 하나를 선택하는 단계는,상기 제1 비트 반전 수가 상기 제2 비트 반전 수 및 상기 제3 비트 반전 수보다 더 작은 것에 기초하여 상기 제1 데이터 워드를 선택하는 단계;상기 제2 비트 반전 수가 상기 제1 비트 반전 수 및 상기 제3 비트 반전 수보다 더 작은 것에 기초하여 상기 제1 변환된 데이터 워드를 선택하는 단계; 및상기 제3 비트 반전 수가 상기 제1 비트 반전 수 및 상기 제2 비트 반전 수보다 더 작은 것에 기초하여 상기 제2 변환된 데이터 워드를 선택하는 단계를 포함하는, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 제2 데이터 워드를 저장하고 출력하도록 구성된 메모리를 더 포함하는, 송신기 회로부."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "공개특허 10-2024-0054265-2-전자 디바이스에 있어서,송신기 회로부를 포함하며, 상기 송신기 회로부는,처리 회로부로서, 복수의 비트를 포함하는 제1 데이터 워드를 수신하고; 상기 제1 데이터 워드의 상기 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하고; 상기 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를생성하도록 구성되는, 상기 처리 회로부; 및선택 회로부로서, 상기 제1 데이터 워드와 상기 제2 데이터 워드 사이의 제1 비트 반전 수, 상기 제1 변환된 데이터 워드와 상기제2 데이터 워드 사이의 제2 비트 반전 수, 및 상기 제2 변환된 데이터 워드와 상기 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 상기 제1 데이터 워드, 상기 제1 변환된 데이터 워드 및 상기 제2 변환된 데이터 워드 중 하나를 선택하도록 구성되고, 상기 송신기 회로부는 상기 선택된 데이터 워드를 출력하도록 구성된, 상기선택 회로부를 포함하는, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 처리 회로부는,상기 제1 데이터 워드 및 상기 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행하여 제3 변환된 데이터 워드를 생성하도록 추가로 구성되며, 상기 제2 반전 가능 연산은 상기 제1 반전 가능 연산과 다른, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항 또는 제8항에 있어서, 상기 제2 반전 가능 연산은 비트별 XNOR 연산인, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제7항에 있어서, 상기 선택 회로부는,상기 제1 데이터 워드와 상기 제2 데이터 워드 사이의 상기 제1 비트 반전 수, 상기 제1 변환된 데이터 워드와상기 제2 데이터 워드 사이의 상기 제2 비트 반전 수, 및 상기 제2 변환된 데이터 워드와 상기 제2 데이터 워드사이의 상기 제3 비트 반전 수를 결정하도록 추가로 구성되는, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제7항에 있어서, 상기 제1 데이터 워드, 상기 제1 변환된 데이터 워드, 및 상기 제2 변환된 데이터 워드 중 하나를 선택하는 단계는,상기 제1 비트 반전 수가 상기 제2 비트 반전 수 및 상기 제3 비트 반전 수보다 더 작은 것에 기초하여 상기 제1 데이터 워드를 선택하는 단계;상기 제2 비트 반전 수가 상기 제1 비트 반전 수 및 상기 제3 비트 반전 수보다 더 작은 것에 기초하여 상기 제1 변환된 데이터 워드를 선택하는 단계; 및상기 제3 비트 반전 수가 상기 제1 비트 반전 수 및 상기 제2 비트 반전 수보다 더 작은 것에 기초하여 상기 제2 변환된 데이터 워드를 선택하는 단계를 포함하는, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제7항에 있어서,상기 출력 데이터 워드를 수신하도록 구성된 수신기 회로부를 더 포함하며, 상기 수신기 회로부는,처리 회로부로서, 상기 출력 데이터 워드의 하나 이상의 비트를 반전시켜 제1 수신된 데이터 워드를 생성하고;공개특허 10-2024-0054265-3- 상기 제1 반전 가능 연산, 상기 출력 데이터 워드 및 상기 제2 데이터 워드에 기초하여 제2 수신된 데이터 워드를 생성하도록 구성된, 상기 처리 회로부를 포함하는, 전자 디바이스."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "데이터 워드를 송신하는 방법에 있어서, 방법은,복수의 비트를 포함하는 제1 데이터 워드를 수신하는 단계;상기 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하는 단계;상기 제1 데이터 워드와 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성하는 단계;상기 제1 데이터 워드와 상기 제2 데이터 워드 사이의 제1 비트 반전 수, 상기 제1 변환된 데이터 워드와 상기제2 데이터 워드 사이의 제2 비트 반전 수, 및 상기 제2 변환된 데이터 워드와 상기 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 상기 제1 데이터 워드, 상기 제1 변환된 데이터 워드 및 상기 제2 변환된 데이터 워드 중 하나를 선택하는 단계; 및상기 선택한 데이터 워드를 출력하는 단계를 포함하는, 방법."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 제1 데이터 워드와 상기 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행하여 제3 변환된 데이터 워드를 생성하는 단계를 더 포함하며, 상기 제2 반전 가능 연산은 상기 제1 반전 가능 연산과 다른, 방법."}
{"patent_id": "10-2024-7004166", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제13항 또는 제14항에 있어서, 상기 제2 반전 가능 연산은 비트별 XNOR 연산인, 방법."}
{"patent_id": "10-2024-7004166", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "송신기 회로부는 반전 회로부, 제1 변환 회로부 및 선택 회로부를 포함한다. 반전 회로부는 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성한다. 제1 변환 회로부는 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성한다. 선택 회로부는 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택한다. 선택 회로부는 선택된 데이터 워드를 추가로 출력한다."}
{"patent_id": "10-2024-7004166", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 예는 일반적으로 인터페이스 시스템에 관한 것이며, 보다 상세하게는 다수의 변환을 포함하는 데이터 버스 반전 기술을 사용하는 인터페이스 시스템에 관한 것이다."}
{"patent_id": "10-2024-7004166", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인터페이스 시스템은 집적 회로(IC) 디바이스 사이에 또는 IC 디바이스 내에서 통신하는 데 사용된다. 예를 들 어, 인터페이스 시스템은 다수의 IC 칩 사이에서 통신하는 C2C(chip-to-chip) 인터페이스일 수 있다. 또 다른 예에서 인터페이스 시스템은 NOC(Network-on-Chip)이다. 인터페이스 시스템의 크기는 대응 IC 칩 내의 가용 공 간에 따라 제한되며, IC 칩의 크기가 감소함에 따라 인터페이스 시스템의 가용 공간이 감소하여 인터페이스 시 스템의 크기가 제한된다. 인터페이스 시스템의 크기가 제한되면, 인터페이스 시스템의 채널을 형성하는 트레이 스(예를 들어, 와이어)의 수가 제한된다. 따라서, 더 높은 대역폭에 도달하기 위해 인터페이스 시스템은 더 높 은 데이터 레이트로 동작된다. 그러나, 데이터 레이트가 증가함에 따라 오류 가능성이 증가하고 신호 무결성이 감소한다. 더 높은 데이터 레이트로 동작할 때 높은 신호 무결성을 달성하기 위해 비트 오류율(BER)은 더 낮은 오류율로 유지된다. BER에 대한 기여자 중 하나는 현재 데이터 워드와 이전에 송신된 데이터 워드 사이에서 발생하는 비 트 반전 수이다. 현재 데이터 워드와 이전에 송신된 데이터 워드 사이에서 발생하는 비트 반전 수를 감소시키 기 위해 현재 데이터 워드의 비트가 반전된다(예를 들어, 값들 사이에서 토글된다). 일부 예에서, 송신된 데이 터 워드와 이전에 송신된 데이터 워드 사이의 비트 반전 수를 감소시키기 위해 DBI(Data Bus Inversion)와 같은 기술이 사용된다. DBI 기술은 데이터 워드를 변환하고, 이전 데이터 워드와 비교한, 데이터 워드 및 변환된 데 이터 워드의 비트 전이 수에 기초하여 데이터 워드와 변환된 데이터 워드 중 하나를 송신하는 단계를 포함한다. DBI 기술을 사용하는 경우에도, 인터페이스 시스템의 크기가 감소하고 및/또는 인터페이스 시스템의 데이터 레 이트가 증가함에 따라 인터페이스 시스템의 BER은 현재 DBI 기술의 완화 기능 이상으로 증가할 수 있다. 따라서, 인터페이스 시스템의 BER을 더욱 감소시키고, IC 칩 사이에서 통신할 때 발생하는 오류를 더욱 감소시키기 위해서는 데이터 워드 사이의 비트 반전 수를 더욱 감소시켜야 할 필요가 있다. 집적 회로(IC) 디바이스 사이의 인터페이스 시스템은 인터페이스 시스템 내의 오류와 비트 오류율을 완화하기 위해 현재 데이터 워드와 이전에 송신된 데이터 워드 사이의 비트 반전 수를 제한한다. 하나의 예에서, 인터페 이스는 특히 C2C(chip-to-chip) 인터페이스 또는 NOC(Network-on-Chip)이다. 현재 데이터 워드의 비트와 이전 에 송신된 데이터 워드의 비트 사이의 비트 반전 수를 제한하는 것은 현재 및 이전에 송신된 데이터 워드에 하 나 이상의 반전 가능 연산을 적용하는 것을 포함한다. 하나의 예에서, 하나 이상의 반전 가능 연산은 특히 비 트별 XOR 연산, 또는 비트별 XNOR 연산을 포함한다. 현재 데이터 워드와 이전 데이터 워드에 반전 가능 연산을 적용하여 변환된 데이터 워드를 생성한다. 이전 데이터 워드로부터 비트 반전 수가 가장 작은 데이터 워드(예 를 들어, 변환된 또는 변환되지 않은 데이터 워드)가 선택되어 송신된다. 하나의 예에서, 송신기 회로부는 반전 회로부, 제1 변환 회로부 및 선택 회로부를 포함한다. 반전 회로부는 제 1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성한다. 제1 변환 회로부 는 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성 한다. 선택 회로부는 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반 전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택한다. 선택 회로부는 선택된 데이터 워드를 추가로 출력한다. 하나의 예에서, 전자 디바이스는 송신기 회로부를 포함한다. 송신기 회로부는 처리 회로부와 선택 회로부를 포 함한다. 처리 회로부는 복수의 비트를 갖는 제1 데이터 워드를 수신하고, 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성한다. 처리 회로부는 제1 데이터 워드 및 제2 데이터 워 드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 추가로 생성한다. 선택 회로부는 제1 데 이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택한다. 송신기 회로부는 선택된 데이 터 워드를 출력한다. 하나의 예에서, 데이터 워드를 송신하는 방법은 복수의 비트를 갖는 제1 데이터 워드를 수신하는 단계, 및 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하는 단계를 포함한다. 방 법은 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생 성하는 단계를 더 포함한다. 또한, 방법은 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워 드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택하는 단계를 포함한다. 추가적으로, 방법은 선택된 데이터 워드를 출력하는 단계를 포함한다. 이들 및 다른 양태는 다음의 상세한 설명을 참조하여 이해할 수 있다."}
{"patent_id": "10-2024-7004166", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "인터페이스 시스템은 집적 회로(IC) 디바이스 사이에서 데이터 워드를 통신하는 데 사용된다. 예시적인 인터페 이스는 C2C(chip-to-chip) 인터페이스와 NOC(Network-on-Chip) 인터페이스를 포함한다. 인터페이스 시스템의 오류율을 감소시키기 위해 인터페이스 시스템은 현재 데이터 워드와 이전에 송신된 데이터 워드 사이에서 토글 (예를 들어, 반전)하는 비트 수를 감소시킨다. 하나의 예에서, 데이터 워드를 송신할 때 비트 반전 수를 감소 시키기 위해, 데이터 워드는 송신되기 전에 반전되며, 이는 변환된 데이터 워드가 변환되지 않은 데이터 워드보 다 더 적은 비트 반전을 가질 수 있기 때문이다. 하나의 예에서, 현재 데이터 워드와 이전 데이터 워드 사이의 비트 반전 수가 데이터 워드의 총 비트 수의 50% 미만인 경우, 현재 데이터 워드는 송신 전에 반전되지 않는다. 현재 데이터 워드와 이전 데이터 사이의 비트 반전 수가 데이터 워드의 총 비트 수의 50%보다 더 큰 경우, 현재 데이터 워드는 송신되기 전에 반전된다. 그러나, 일부 경우에는 위의 방법을 적용하더라도 인터페이스 시스템에 이용 가능한 회로 크기의 감소 및 더 높 은 데이터 레이트의 사용으로 인해 인터페이스 시스템의 오류율이 증가한다. 송신 사이의 비트 반전 수를 추가 로 감소시키기 위해, 현재 및 이전에 송신된 데이터 워드에 추가적인 연산이 적용된다. 예를 들어, 대응하는 변환된 데이터 워드를 생성하기 위해 하나 이상의 반전 가능 연산이 현재 및 이전 데이터 워드에 적용된다. 하 나의 예에서, 하나 이상의 반전 가능 연산은 특히 비트별 XOR 연산 및 비트별 XNOR 연산을 포함한다. 송신을 위해 변환된 데이터 워드를 생성하기 위해 반전 가능 연산을 사용하면 저효율 사례에서 반전 수가 감소한다. 예를 들어, 현재 데이터 워드와 이전 데이터 워드 사이의 총 반전 수가 데이터 워드 내의 총 비트 수의 절반보 다 1개 많거나 1개 작을(예를 들어, 50%에 가까울) 때 저효율 사례가 존재할 수 있다. 이러한 경우 반전 수를 감소시키면 대응 인터페이스 시스템의 오류율이 더욱 감소한다. 이하에서는 도면을 참조하여 다양한 특징을 설명한다. 도면은 일정 비율로 그려질 수 있거나 그렇지 않을 수 있으며 유사한 구조 또는 기능의 요소는 도면 전체에 걸쳐 유사한 참조 번호로 표현된다는 점에 유의해야 한다. 도면은 특징 설명을 용이하게 하기 위한 것일 뿐임을 유의하여야 한다. 이는 청구된 발명에 대한 철저한 설명 이나 청구된 발명의 범위를 제한하기를 의도하지는 않는다. 또한, 예시된 예는 제시된 모든 양태이나 이점을 가질 필요는 없다. 특정 예와 함께 설명된 양태 또는 이점은 반드시 해당 예에 제한되는 것은 아니며 그렇게 예시되지 않거나 그렇게 명시적으로 설명되지 않더라도 임의의 다른 예에서 실행될 수 있다. 도 1은 하나 이상의 예에 따른 예시적인 전자 디바이스를 예시한다. 전자 디바이스는 메인(앵커) IC 칩, 보조 IC 칩 및 인터페이스를 포함한다. 메인 IC 칩은 하나 이상의 보조 IC 칩(칩 렛)과 연결되어 다중-칩 시스템을 형성한다. 메인 IC 칩은 특히 전원 제어기, 메모리 제어기 같은 회로 블록을 포함한다. 보조 IC 칩은 특히 하드웨어 가속기, 인공지능(AI) 엔진, 및/또는 트랜시버 엔진 일 수 있다. 메인 IC 칩과 함께 보조 IC 칩을 사용하면 메인 IC 칩의 개발 사이클이 보조 IC 칩으로부터 분리된다. 또한, 보조 칩과 함께 메인 IC 칩을 사용하는 것은 서로 다른 유형의 보 조 칩이 서로 다른 구성의 메인 칩과 함께 사용될 수 있게 한다. 인터페이스는 메인 IC 칩과 보조 IC 칩 사이에서 데이터를 통신한다. 인터페이스는 메인 IC 칩과 보조 IC 칩을 결합하는 채널(132, 134)을 포함한다. 인터페이스는 다중-칩 시스템 내 의 C2C 인터페이스 시스템이다. 메인 IC 칩은 ASIC(주문형 IC) 또는 프로그램 가능 IC(예를 들어, FPGA(field programmable gate arra y))일 수 있다. 메인 IC 칩은 송신기 회로부, 수신기 회로부 및 인터페이스 회로부를 포 함한다. 송신기 회로부, 수신기 회로부 및 인터페이스 회로부는 메인 IC 칩 또는 다른 유 형의 트랜시버 내에 직렬 변환기/탈직렬 변환기(SerDes) 디바이스를 형성한다. 메인 IC 칩은 병렬 입력 직렬 출력(PISO) 회로부, 직렬 입력 병렬 출력(SIPO) 회로부 및 기타 회로 요소(예를 들어, 특히 인코더 회로부 및/또는 디코더 회로부)를 더 포함할 수 있다. PISO 회로부는 채널을 통해 인터페이스 회로부를 통 해 송신기 회로부에 의한 송신을 위해 병렬 입력 데이터를 직렬 출력 데이터로 변환한다. 수신기 회로부 는 채널을 통해 인터페이스 회로부를 통해 데이터 워드를 수신한다. 수신기 회로부는 데 이터 워드를 처리하여 수신된 신호를 생성한다. SIPO 회로부는 수신기 회로부에 의해 수신된 직렬 입력 데이터를 병렬 출력 데이터로 변환한다.보조 IC 칩은 ASIC 또는 프로그램 가능 IC이다. 보조 IC 칩은 송신기 회로부, 수신기 회로부 및 인터페이스 회로부를 포함한다. 송신기 회로부, 수신기 회로부 및 인터페이스 회로부 는 SerDes 디바이스 또는 다른 유형의 트랜시버 회로부를 형성한다. 보조 IC 칩은 PISO 회로부, SIPO 회로부 및 기타 회로 요소(예를 들어, 특히 인코더 회로부 및/또는 디코더 회로부)를 더 포함할 수 있다. PISO 회로부는 채널을 통해 인터페이스 회로부를 통해 송신기 회로부에 의한 송신을 위해 병렬 입력 데이터를 직렬 출력 데이터로 변환한다. 수신기 회로부는 채널을 통해 인터페이스 회로부(12 6)를 통해 데이터 워드를 수신한다. 수신기 회로부는 데이터 워드를 처리하여 수신된 신호를 생성한다. SIPO 회로부는 수신기 회로부에 의해 수신된 직렬 입력 데이터를 병렬 출력 데이터로 변환한다. 채널(132, 134)은 인터페이스 회로부와 인터페이스 회로부를 결합하는 하나 이상의 병렬 트레이스(와 이어)를 포함한다. 채널(132, 134) 내의 트레이스의 수는 인터페이스 회로부 및 인터페이스 회로부 의 회로 영역 크기에 대응한다. 하나의 예에서, 인터페이스 회로부에 이용 가능한 회로 영역은 메인 IC 칩의 에지를 따른 메인 IC 칩의 이용 가능한 회로 영역에 대응한다. 또한, 인터페이스 회로부 에 이용 가능한 회로 영역은 보조 IC 칩의 에지를 따른 보조 IC 칩의 이용 가능한 회로부 영역에 대응한다. 따라서, 인터페이스 회로부와 인터페이스 회로부의 회로 영역은 메인 IC 칩과 보 조 IC 칩에서 이용 가능한 회로 크기로 제한되어 채널(132, 134)을 형성하는 트레이스(예를 들어, 와이 어)의 수를 제한한다. 따라서, 더 높은 대역폭에 도달하기 위해, 인터페이스 회로부 및 인터페이스 회로 부는 더 높은 데이터 레이트로 동작된다. 그러나, 더 높은 데이터 레이트로 동작하면 대응 비트 오류율 (BER)도 증가된다. 하나의 예에서, 인터페이스 회로부 및 인터페이스 회로부는 데이터 워드당 42개 의 트레이스를 지원하고 트레이스당 약 8Gbps로 동작하여 약 328Gbps의 데이터 레이트를 달성한다. 데이터 레 이트는 데이터 워드당 트레이스 수와 트레이스당 데이터 레이트에 대응한다. 높은 데이터 레이트로 동작할 때 높은 신호 무결성을 달성하기 위해 비트 오류율(BER)이 감소된다. BER에 대한 한 가지 기여자는 데이터 워드를 전송할 때 인터페이스 회로부 및 인터페이스 회로부에 의해 완료되 는 현재 데이터 워드와 이전에 송신된 데이터 워드(예를 들어, 이전 데이터 워드) 사이의 비트 반전 수이다. 인터페이스 회로부 및 인터페이스 회로부에 의해 완료된 반전 수가 증가함에 따라, 송신의 오류 가능 성이 증가한다. 하나의 예에서, 인터페이스 회로부 및 인터페이스 회로부에서 비트 반전을 감소시키 기 위해 DBI(Data Bus Inversion) 기술(프로세스)이 사용된다. 하나의 예에서, DBI를 수행할 때, 현재 데이터 워드의 비트가 이전 데이터 워드의 비트와 비교된다. 이전 데이터 워드는 현재 데이터 워드 직전에 송신된 데 이터 워드이다. 다르게 말하면, 현재 데이터 워드는 이전 데이터 워드에 후속한다. 각각의 데이터 워드의 비 트는 서로 비교되어 데이터 워드 사이의 제1 비트 전이 수를 결정한다. 현재 데이터 워드의 비트 값이 이전 데 이터 워드의 대응 비트 값과 다를 때 비트 전이가 발생한다. 하나의 예에서, 현재 데이터 워드는 111010000이 고, 이전 데이터 워드는 000010000이다. 이러한 예에서, 현재 데이터 워드의 처음 3 비트는 이전 데이터 워드 의 것들과 다르다. 따라서, 3 비트는 현재 데이터 워드와 이전 데이터 워드 사이에서 토글(예를 들어, 3 비트 반전이 발생)한다. 다른 예에서, 현재 데이터 워드의 비트는 010011111이고 이전 데이터 워드의 비트는 000010000이다. 이러한 예에서, 현재 데이터 워드의 두 번째 비트와 마지막 4 비트가 이전 데이터 워드와 다르 며, 현재 데이터 워드와 이전 데이터 워드 사이에 다른 것은 총 5 비트가 된다. 따라서, 현재 데이터 워드와 이전 데이터 워드 사이에 5 비트 토글, 또는 5 비트가 반전된다. 현재 워드와 이전 워드 사이에서 토글되는 비트 수가 증가하면 BER도 증가한다. 하나의 예에서, 현재와 워드 및 이전 워드 사이에서 토글되는 비트 수를 감소시키기 위해 현재 데이터 워드의 비트가 반전된다. 변환된 데 이터 워드는 이전 데이터 워드와 비교되어 변환된 데이터 워드와 이전 데이터 워드 사이에서 토글되는 비트 수 가 현재 데이터 워드(변환되지 않은 데이터 워드)와 이전 데이터 워드 사이에서 토글되는 비트 수보다 더 크거 나 더 작은지 여부를 결정한다. 반전된 데이터와 이전 데이터 워드 사이에서 토글되는 비트 수가 현재 데이터 와 이전 데이터 워드 사이에서 토글되는 비트 수보다 더 작은 경우, 변환된 데이터 워드가 송신된다. 위의 예에 기초하여, 현재 데이터 워드 010011111이 변환된 데이터 워드 101100000으로 반전된다. 이전 데이터 워드 000010000과 비교할 때, 변환된 데이터 워드는 4 비트만큼 다르며, 이는 이전 데이터 워드와 5 비트만큼 다른 현재(비반전) 데이터 워드의 것 보다 더 적다. 이에 따라, 변환된 데이터 워드가 선택되어 송신된다. 하 나의 예에서, 비트의 절반을 초과하여 현재 데이터 워드와 이전 데이터 워드 사이에서 토글(예를 들어, 반전)되 면, 현재 데이터 워드의 비트가 반전된다. 송신기 회로부는 변환된 데이터 워드를 인터페이스 회로부 및 채널을 통해 보조 IC 칩의 인터페이스 회로부 및 수신기 회로부로 송신하기 전에 현재 데이터 워드의 비트를 반전(예를 들어,토글)한다. 또한, 송신기 회로부는 앞서 설명한 바와 같이 현재 데이터 워드를 비반전 형태로 송신할지 또는 변환된 데이터 워드를 송신할지 여부를 결정한다. 변환된 데이터 워드 또는 비반전 현재 데이터 워드는 인터페이스 회로부 및 채널을 통해 보조 IC 칩의 수신기 회로부에 의해 수신된다. 수신기 회로부는 또한 채널 및 인터페이스 회로부를 통해 표시 신호를 수신한다. 표시 신호는 송신된 데이터 워드가 반전되었는지 여부를 나타낸다. 수신기 회로부는 수신된 데이터 워드를 반전 및 처리하거 나 표시 신호에 기초하여 수신된 데이터 워드를 처리한다. 도 2는 하나 이상의 예에 따른 다중-칩 시스템을 예시한다. 다중-칩 시스템은 IC 칩(220 내지 226) 에 연결된 IC 칩을 포함한다. IC 칩은 도 1의 메인 IC 칩과 유사하게 구성된다. 또한, IC 칩 (220-226)은 도 1의 보조 IC 칩과 유사하게 구성된다. 4개의 IC 칩(220-226)이 도 2에 예시되어 있지만, 다른 예에서 IC 칩(220-226)의 수는 4개보다 더 많거나 더 적을 수 있다. IC 칩은 연결된 각각의 IC 칩(220-226)에 대한 송신기 회로부, 수신기 회로부 및 인터페이스 회로부의 세 트를 포함한다. 송신기 회로부, 수신기 회로부 및 인터페이스 회로부는 도 1의 송신기 회로부, 수신기 회 로부 및 인터페이스 회로부의 구성과 유사하게 구성된다. 또한, IC 칩은 하나 이상의 채널을 통해 각각의 IC 칩(220 내지 226)과 연결된다. 채널은 도 1의 채널(132 및 134)과 유사하게 구성된다. 도 2의 예에서, IC 칩은 송신기 회로부, 수신기 회로부 및 인터페이스 회로부의 적어도 4개 세트를 포함한다. IC 칩(222 내지 226) 각각은 IC 칩과 데이터 워드를 송신 및 수신한다. IC 칩(222-226) 각각은 도 1과 관련하여 앞서 설명한 송신기 회로부, 수신기 회로부 및 인터페이스 회로부와 유사한 송신기 회 로부, 수신기 회로부 및 인터페이스 회로부를 포함한다. 도 3은 본 개시의 양태가 구현될 수 있는 예시적인 프로그램 가능 디바이스의 블록도를 도시한다. 도 3에 도시된 프로그램 가능 디바이스는 프로그램 가능 디바이스의 예시적인 예이고; 유사하거나 다른 배열로 추 가적인 또는 더 적은 수의 블록 또는 모듈을 사용하는 다른 구현이 가능하다. 하나의 예에서, 프로그램 가능 디바이스는 단일 IC 칩 상에 형성될 수 있다. 다른 예에서, 프로그램 가능 디바이스는 둘 이상의 IC 칩에 걸쳐 분산될 수 있다. 또한, 프로그램 가능 디바이스는 서로 상호작용할 수 있는 다수의 서브시스템 을 포함하는 SoC(System-on-a-Chip)일 수 있다. 프로그램 가능 디바이스는 예를 들어 프로그램 가능 로직(PL), 네트워크-온-칩(NoC) 상호접속 시스템 , 전용 회로부, CCIX 및 PCIe 모듈(CPM), 연결 패브릭, 트랜시버, 입력/출력(I/O) 블록 360 및 메모리 제어기와 같은 다수의 서브시스템을 포함할 수 있다. 프로그램 가능 디바이스는 도 3에 도시되지 않은 다른 서브시스템 또는 컴포넌트를 포함할 수 있다. 또한, 간결성을 위해 도시되지는 않 았지만, 프로그램 가능 디바이스는 다수의 주변 컴포넌트(하나 이상의 고성능 메모리 디바이스와 같 은) 및/또는 다른 디바이스 또는 칩(다른 프로그램 가능 디바이스와 같은)에 결합될 수 있다. PL은 다수의 다양한 사용자 정의 기능 또는 동작을 수행하도록 프로그램될 수 있는 회로부를 포함한다. PL은 프로그램 가능 상호접속 회로부 및 프로그램 가능 로직 회로부를 각각 포함하는 프로그램 가능 회로 블록 또는 타일의 어레이를 포함할 수 있다. 프로그램 가능 회로 블록은 구성 가능한 로직 블록(CLB), 랜덤 액 세스 메모리 블록(BRAM), 디지털 신호 처리 블록(DSP), 클록 관리자, 지연 로킹 루프(DLL) 및/또는 사용자 지정 회로 설계를 구현하도록 프로그램하거나 구성할 수 있는 다른 로직 또는 회로를 포함할 수 있지만 이에 제한되 지 않는다. 추가적으로 또는 대안적으로, PL은 다수의 입력/출력 블록(IOB)을 포함할 수 있다. PL 310은 프로그램 가능 패브릭에 걸쳐 분산될 수 있는 프로그램 가능 패브릭 하위 구역(FSR)의 어레이이다. 일부 예에 서 FSR은 프로그램 가능 패브릭 내에서 반복 가능한 타일이다. 프로그램 가능 상호접속 회로부는 프로그램 가능 상호접속 지점(PIP)에 의해 상호접속된 다양한 길이의 복수의 상호접속 와이어를 포함할 수 있다. 상호접속 와이어는 특정 프로그램 가능 타일 내의 컴포넌트 사이, 서로 다 른 프로그램 가능 타일 내의 컴포넌트 사이, 그리고 프로그램 가능 타일의 컴포넌트와 다른 서브시스템 또는 디 바이스 사이의 연결을 제공하도록 구성될 수 있다. 프로그램 가능 상호접속 회로부 및 프로그램 가능 회로 블 록은 프로그램 가능 요소가 대응 사용자 지정 회로 설계를 구현하는 방법을 정의하는 구성 레지스터에 구성 데 이터를 로딩함으로써 프로그램되거나 구성될 수 있다. 일부 양태에서, 다수의 프로그램 가능 회로 블록 각각 내의 프로그램 가능 상호접속 회로부는 프로그램 가능 디바이스에 블록 레벨 및/또는 디바이스 레벨 신호 라우팅 리소스를 제공하는 프로그램 가능 상호접속 패브릭의 일부를 형성할 수 있다. 각각의 CLB는 LUT(look-up table), 플립플롭(flip-flop), 조합 로직, 및/또는 구성 데이터에 의해 집합적으로 프로그램되어 다양한 폭의 입력 신호에 대해 다양한 로직 기능(예컨대, 가산 및 감산)을 수행할 수 있는 프로그 램 가능 상호접속 회로부를 포함할 수 있다. LUT는 임의의 적절한 크기일 수 있고, 임의의 적절한 수의 입력 및 출력을 포함할 수 있다. 일부 양태에서, 각각의 CLB는 32개의 LUT 및 64개의 플립플롭을 포함할 수 있다. 각각의 CLB는 또한 더 넓은 로직 기능을 구현하는 데 사용할 수 있는 산술 캐리 로직 및 멀티플렉서를 포함할 수 있다. PL의 리소스는 프로그램 가능 디바이스의 열로 배열된 반복 가능한 타일이며, 고정된 높이 와 폭의 다수의 구역으로 분할될 수 있다. 도 3의 예에서, PL은 프로그램 가능 디바이스의 서로 다 른 구역을 점유하는 것으로 도시되어 있다. 다른 예에서, PL은 프로그램 가능 패브릭의 통합 구역이다. 프로그램 가능 디바이스의 일부로서 제조될 수 있는 NoC 상호접속 시스템은 프로그램 가능 디바이스 의 다양한 리소스, 서브시스템, 회로 및 기타 컴포넌트를 선택적으로 상호접속할 수 있는 고속, 고대역폭 프로그램 가능 신호 라우팅 네트워크를 제공한다. NoC 상호접속 시스템은 도 3에 도시된 바와 같이 프로 그램 가능 디바이스의 프로그램 가능 패브릭에 걸쳐 (예를 들어, 에지를 향해) 수평 및 수직 방향으로 연 장될 수 있다. 추가적으로 또는 대안적으로, NoC 상호접속 시스템은 프로그램 가능 패브릭에 걸쳐 하나 이상의 대각선 방향으로 연장될 수 있다. 또한, 도 3의 예에서는 단일 열 부분을 갖는 것으로 도시되어 있지만, 다른 예에서 NoC 상호접속 시스템은 프로그램 가능 패브릭의 높이에 걸쳐 수직 연장 복수의 열 부 분을 포함할 수 있다. 따라서, 예시적인 NoC 상호접속 시스템의 특정 레이아웃, 형상, 크기, 배향 및 기 타 물리적 특성은 단지 본 출원에 개시된 다양한 예를 예시하는 것일 뿐이다. NoC 상호접속 시스템은 패킷화된 데이터로서 프로그램 가능 디바이스의 다양한 리소스, 서브시스템, 회로와 기타 컴포넌트 사이의 정보를 라우팅하기 위해 데이터 패킷 프로토콜 및 메모리 맵핑된 어드레스를 사용 한다. 데이터 패킷은 데이터 패킷을 표시된 목적지로 라우팅하기 위해 NoC 상호접속 시스템에 의해 사용 될 수 있는 소스 어드레스, 목적지 어드레스 및 프로토콜 정보를 포함할 수 있다. 데이터 패킷은 예를 들어 할 당된 우선순위, 트래픽 유형 및/또는 유동 정보에 기초하여 NoC 상호접속 시스템을 통한 데이터 패킷의 송 신이 우선순위화되도록 허용하는 서비스 품질(QoS) 정보를 포함할 수 있다. 이러한 예에서, NoC 상호접속 시스 템은 수신된 데이터 패킷의 우선순위 레벨 또는 트래픽 클래스를 결정할 수 있고 송신을 위해 데이터 패킷 을 대기열화할 때 결정된 우선순위 레벨 또는 트래픽 클래스를 사용할 수 있는 우선순위 로직을 포함할 수 있다. 간결성을 위해 도시되지는 않았지만, NoC 상호접속 시스템은 또한 스케줄러 및 중재 로직을 포함할 수 있 다. 스케줄러는 NoC 상호접속 시스템의 하나 이상의 물리적 및/또는 가상 채널을 사용하여 소스 어드레스 에서 목적지 어드레스로 데이터 패킷의 송신을 스케줄링하는 데 사용될 수 있다. 중재 로직은 예를 들어 충돌 및 다른 경합 관련 레이턴시를 최소화하기 위해 NoC 상호접속 시스템에 대한 액세스를 중재하는 데 사용될 수 있다. 프로그램 가능 디바이스가 SSI(stacked silicon interconnect) 기술을 사용하여 제조되는 예의 경우, NoC 상호접속 시스템의 열 부분은 예를 들어 구성 데이터가 마스터와 슬레이브 SLR 사이에서 라우팅 될 수 있게 하도록 인접한 슈퍼 로직 구역(SLR) 사이에 신호 연결을 제공할 수 있다. NoC 상호접속 시스템은 NoC 상호접속 시스템과 프로그램 가능 디바이스의 다양한 리소스, 서브 시스템, 회로와 기타 컴포넌트 사이의 선택적 연결을 제공하는 복수의 노드, 포트 또는 기타 인터페이스(간결성 을 위해 도시되지 않음)를 포함할 수 있다. 예를 들어, NoC 상호접속 시스템은 프로그램 가능 디바이스 의 다수의 서브시스템이 온칩 메모리(OCM) 리소스, 처리 리소스 및/또는 I/O 리소스에 대한 액세스를 공유 하도록 허용할 수 있다. 많은 양의 데이터를 요구하고 사용할 수 있는 프로그램 가능 디바이스의 다양한 리소스, 서브시스템, 회로 및 기타 컴포넌트를 선택적으로 상호접속함으로써, NoC 상호접속 시스템은 로컬 상호접속 리소스에 대한 신호 라우팅 부담을 완화할 수 있으며, 이에 의해, 디바이스 성능을 증가시키고 다른 프로그램 가능 디바이스보다 더 큰 구성 유연성을 가능하게 한다. 더욱이, NoC 상호접속 시스템은 디바이 스 레벨 및 블록 레벨 프로그램 가능 상호접속보다 더 높은 데이터 송신 속도와 더 낮은 오류율을 갖는 고성능 신호 라우팅 네트워크를 제공함으로써 프로그램 가능 디바이스의 처리 능력과 데이터 처리량을 (다른 프로 그램 가능 디바이스와 비교하여) 증가시킬 수 있다. 하나의 예에서, NoC 상호접속 시스템은 도 1 및 도 2 와 관련하여 앞서 설명된 DBI 프로세스를 사용한다. 예를 들어, NoC 상호접속 시스템은 도 1 및 도 2와 관련하여 앞서 설명한 바와 같이 현재 데이터 워드를 송신하기 전에 이전 데이터 워드에 기초하여 현재 데이터 워드를 반전할지 여부를 결정한다. 전용 회로부는 프로세서, 직렬 트랜시버, 디지털 신호 프로세서(DSP), 아날로그-디지털 변환기(ADC), 디지 털-아날로그 변환기(DAC), 디바이스 관리 리소스, 디바이스 모니터링 리소스, 디바이스 테스트 관리 리소스 등 을 포함하지만 이에 제한되지 않는 임의의 적절한 하드와이어드 회로를 포함할 수 있다. 전용 회로부는PS(processing system) 및 PMC(platform management controller)를 포함할 수 있다. PS는 프로그램 가능 디바 이스의 I/O 핀에 직접 결합되도록 구성 가능한 다수의 프로세서 코어, 캐시 메모리, 단방향 및/또는 양방 향 인터페이스를 포함할 수 있다. 일부 양태에서, 각각의 프로세서 코어는 순차적 데이터 처리에 사용될 수 있 는 중앙 처리 유닛(CPU) 또는 스칼라 프로세서를 포함할 수 있다. PMC는 외부 메모리로부터 제공되는 구성 데 이터(예컨대, 구성 비트스트림)에 기초하여 프로그램 가능 디바이스를 부팅하고 구성하는 데 사용될 수 있 다. PMC는 또한 PL을 구성하고 프로그램 가능 디바이스의 다양한 암호화, 인증, 시스템 모니터링 및 디버그 기능을 제어하는 데 사용될 수 있다. CCIX 및 PCIe 모듈(CPM)은 프로그램 가능 디바이스와 다수의 주변 컴포넌트(예컨대, 외부 디바이스 또는 칩) 사이의 연결을 제공하는 다수의 인터페이스를 포함할 수 있다. CPM은 트랜시버를 통해 다 른 디바이스 또는 칩에 대한 연결을 제공하는 다수의 PCIe(peripheral interconnect express) 인터페이스와 CCIX(cache coherent interconnect for accelerator) 인터페이스를 포함할 수 있다. 일부 양태에서, PCIe 및 CCIX 인터페이스는 트랜시버의 일부이다. 프로그램 가능 상호접속 패브릭(간결성을 위해 도시되지 않음)은 대응 구성 레지스터에 로딩된 구성 데이터를 기초로 프로그램 가능 패브릭의 인근 구역에 있는 회로 및 서브시스템을 선택적으로 상호접속할 수 있는 블록 레벨 및/또는 디바이스 레벨 신호 라우팅 리소스를 제공할 수 있다. 프로그램 가능 상호접속 패브릭은 반복 가 능한 타일을 포함하고 프로그램 가능 디바이스에 걸쳐 분산된 복수의 패브릭 하위 구역(FSR)을 포함할 수 있다. 일부 양태에서, FSR은 PL의 다양한 프로그램 가능 로직 회로(CLB, DSP 및 BRAM과 같은)와 연관된 프로그램 가능 상호접속 요소의 부분을 포함할 수 있다. 트랜시버는 프로그램 가능 디바이스에 연결된 하나 이상의 다른 디바이스 또는 칩(간결성을 위해 도 시되지 않음)과의 신호 연결을 제공할 수 있다. 트랜시버는 예를 들어 기가비트 직렬 트랜시버와 같은 다 수의 서로 다른 SERDES를 포함할 수 있다. 트랜시버는 도 3에 도시된 바와 같이 프로그램 가능 디바이스 의 우측 및 좌측 측면을 따라 다양한 위치에 위치된 다수의 반복 가능한 타일을 포함한다. 다른 예에서, 트랜시버는 프로그램 가능 디바이스의 다른 적절한 위치에 위치될 수 있다. I/O 블록은 디바이스의 I/O 핀(간결성을 위해 도시되지 않음)에 결합되고 프로그램 가능 디바이스에 I/O 기능을 제공할 수 있다. 예를 들어, I/O 블록은 하나 이상의 다른 디바이스로부터 데이터를 수신할 수 있고, 수신된 데이터를 프로그램 가능 디바이스의 다수의 목적지로 구동할 수 있다. I/O 블록은 또한 프로그램 가능 디바이스의 다수의 소스로부터 데이터를 수신할 수 있고, 수신된 데이터를 디바이스의 I/O 핀을 통해 하나 이상의 다른 디바이스로 구동할 수 있다. I/O 블록은 반복 가능한 타일을 포함한다. 프로그램 가능 디바이스는 임의의 적절한 수의 I/O 블록을 포함할 수 있으며, 따라서, 도 3에 도시된 예는 단지 예시적인 것일 뿐이다. I/O 블록은 임의의 수의 적절한 I/O 회로 또는 디바이스를 포함할 수 있다. I/O 블록은 XPIO(extremely high-performance I/O) 회로, HDIO(high density I/O) 회로, MIO(multiplexed I/O) 회로를 포 함할 수 있다. XPIO 회로는 메모리 제어기에 고속, 낮은 레이턴시 인터페이스를 제공하는 것과 같은 고성 능 통신에 최적화될 수 있다. HDIO 회로는 XPIO 회로와 비교하여 더 낮은 속도와 더 높은 전압 I/O 기능을 지 원하는 비용 효율적인 해결책을 제공할 수 있다. MIO 회로는 예를 들어 PL, 전용 회로부 및 CPM과 같은 다양한 서브시스템에 의해 액세스될 수 있는 범용 I/O 리소스를 제공할 수 있다. I/O 블록의 제1 행은 프로그램 가능 디바이스의 하단 에지를 따라 위치하는 반복 가능한 타일을 포함 하고, I/O 블록의 제2 행은 프로그램 가능 디바이스의 상단 에지를 따라 위치하는 반복 가능한 타일 을 포함한다. 일부 양태에서, I/O 블록의 반복 가능한 타일은 서로 상이할 수 있다. 예를 들어, 일부 I/O 블록은 XPIO 회로이고, 다른 I/O 블록은 HDIO 회로이고, 다른 I/O 블록은 MIO 회로이다. 메모리 제어기는 프로그램 가능 디바이스 내부 및/또는 외부에 제공되는 다양한 메모리 리소스에 대 한 액세스를 제어하는 데 사용될 수 있다. 메모리 제어기는 DDR4(double data rate v4) 메모리 제어기, DDR5(double data rate v5) 메모리 제어기, HBM(high bandwidth memory) 제어기, 및/또는 다른 적절한 메모리 제어기를 포함할 수 있다. 메모리 제어기 중 일부 또는 전부는 메모리 액세스 효율을 개선시킬 수 있는 트랜잭션 재정렬 기능을 갖는 스케줄러를 포함할 수 있다. 메모리 제어기의 제1 행은 프로그램 가능 디바이스의 하단 에지를 따라 위치하는 반복 가능한 타일을 포함하고, 메모리 제어기의 제2 행은 프로그램 가능 디바이스의 상단 에지를 따라 위치하는 반복 가능한 타일을 포함한다. 일부 양태에서, 메모리 제어기의 반복 가능한 타일은 서로 상이할 수 있다. 예를 들어, 제1 수의 메모리 제어기는 DDR4 메모리 제어기이고, 제2 수의 메모리 제어기는 LPDDR4 메모리 제어기이고, 그리고 제3 수의 메모리 제어기는 HBM 제어기이다. I/O 블록 및 메모리 제어기의 반복 가능한 타일은 예를 들어 도 3의 예에 도시된 바와 같이 서로에 대해 교대로 위치되거나 분포될 수 있다. 프로그램 가능 디바이스는 임의의 수의 I/O 블록 및 메모리 제어기를 포함할 수 있으며, 따라서, 도 3에 도시된 I/O 블록 및 메모리 제어기의 수 및 위치는 단지 예시일 뿐이다. 간결성을 위해 도 3에 도시되지는 않았지만, 프로그램 가능 디바이스는 I/O 블록과 PL 내에 제 공된 프로그램 가능 상호접속 사이의 연결을 제공하는 BLI(Boundary Logic Interface)를 포함할 수 있다. 일부 양태에서, BLI는 크고 복잡한 외부 디바이스(예컨대, HBM)가 프로그램 가능 디바이스의 프로그램 가능 패 브릭에서 훨씬 더 작은 블록(예컨대, CLB)으로 나타나도록 허용할 수 있다. BLI는 프로그램 가능 패브릭의 상 단 및 하단 경계 또는 에지에 위치된 행으로 배열될 수 있다. 이러한 방식으로, BLI는 열형 로직 구조(CLB 열 또는 DSP 열과 같은)와 I/O 리소스 행(I/O 블록과 같은) 사이에 신호를 라우팅하는 데 사용될 수 있다. 다양한 예에서, 앞서 설명된 DBI 프로세스를 사용하면 송신된 데이터 워드의 비트 중 50% 미만이 이전에 송신된 데이터 워드를 참조하여 반전되는 것이 보장된다. 그러나, 높은 데이터 레이트를 사용하는 인터페이스에서는 여전히 오류가 발생할 수 있다. 따라서, 데이터 워드 사이의 비트 반전 수를 더욱 감소시키면 인터페이스의 BER이 감소되고, 인터페이스를 통해 통신할 때 발생하는 오류가 더욱 감소한다. 도 4는 하나 이상의 예에 따른 예시적인 인터페이스 시스템을 예시한다. 인터페이스 시스템은 도 1 의 인터페이스 또는 도 3의 NoC 상호접속 시스템과 유사하게 구성될 수 있다. 예를 들어, 인터페이 스 시스템은 도 1의 인터페이스와 유사하게 IC 칩 사이에서 통신하도록 구현된다. 다른 예에서, 인 터페이스 시스템은 도 3의 NoC 상호접속 시스템과 유사한 프로그램 가능 디바이스의 요소 사이에서 통신하도록 구현된다. 인터페이스 시스템은 송신기 회로부, 인터페이스 회로부, 수신기 회로부, 인터페이스 회로 부 및 채널을 포함한다. 송신기 회로부는 인터페이스 회로부, 채널 및 인터페이스 회로부를 통해 수신기 회로부와 통신한다. 하나의 예에서, 인터페이스 회로부(420 및 440)는 생략될 수 있고 송신기 회로부는 채널을 통해 수신기 회로부와 직접 통신한다. 또한, 송신기 회로부 및/또는 수신기 회로부는 트랜시버 회로부의 일부이다. 송신기 회로부, 인터페이스 회로부, 인터페이스 회로부 및 수신기 회로부는 단일 IC 칩 또 는 다수의 IC 칩의 일부이다. 하나의 예에서, 송신기 회로부, 인터페이스 회로부, 인터페이스 회로 부 및 수신기 회로부는 프로그램 가능 디바이스, 예를 들어 도 3의 프로그램 가능 디바이스의 일부일 수 있다. 다른 예에서, 송신기 회로부 및 인터페이스 회로부는 제1 IC 칩(예를 들어, 도 1의 메인 IC 칩)의 일부이고, 인터페이스 회로부 및 수신기 회로부는 제2 IC 칩(예를 들어, 도 1의 보조 IC 칩)의 일부이다. 송신기 회로부는 처리 회로부, 선택 회로부 및 메모리를 포함한다. 처리 회로부는 데이터 워드를 수신하고 데이터 워드, 변환된 데이터 워드 및 하나 이상의 변환 데이터 워드 (424 및 426)를 출력한다. 처리 회로부는 데이터 워드의 각각의 비트의 값을 반전시켜 변환된 데이 터 워드를 생성한다. 또한, 처리 회로부는 데이터 워드 및 이전 데이터 워드에 대응하는 반전 가능 변환 연산을 수행하여 변환 데이터 워드(424 및 426)를 생성한다. 반전 가능 변환 연산은 특히 비트 별 XOR 연산, 비트별 XNOR 연산을 포함한다. 이전 데이터 워드는 데이터 워드 이전 기간 동안 송신 되는 데이터 워드이다. 다른 실시예에서, 이전 데이터 워드는 데이터 워드 직전에 송신되는 데이터 워드이다. 선택 회로부는 처리 회로부로부터 데이터 워드, 변환된 데이터 워드, 변환 데이터 워드 및 변환 데이터 워드를 수신한다. 선택 회로부는 데이터 워드, 변환된 데이터 워드 , 변환 데이터 워드 및 변환 데이터 워드 각각의 비트를 이전 데이터 워드의 비트와 비교 한다. 선택 회로부는 데이터 워드, 변환된 데이터 워드, 변환 데이터 워드 및 변환 데이 터 워드 중 어느 것이 이전 데이터 워드의 비트로부터의 값을 토글(예를 들어, 반전)하는 비트의 수 가 최소인지를 결정한다. 선택 회로부는 데이터 워드, 변환된 데이터 워드, 변환 데이터 워드 및 변환 데이터 워드 중 선택된 하나를 데이터 워드로서 인터페이스 회로부에 출력하고 인터페이스 회로부는 채널을 통해 데이터 워드로서 데이터 워드를 출력한다.선택 회로부는 데이터 워드(402, 422, 424, 426)로부터 출력할 데이터 워드를 선택하고 데이터 워드(402, 422, 424, 426) 중 어느 것이 이전 데이터 워드를 참조하여 가장 작은 비트 반전 수와 연관되는 지를 결정 하는 하나 이상의 멀티플렉서 및 프로세서를 포함한다. 처리 회로부는 반전 회로부, 변환 회로부 및 변환 회로부를 포함한다. 하나의 예에서, 변 환 회로부(414 및 416) 중 하나는 생략되거나 추가적인 하나 이상의 변환 회로부가 처리 회로부 내에 포함 된다. 변환 회로부(414 및 416) 중 하나가 생략되는 실시예에서, 대응하는 변환된 데이터 워드(424 및 426)는 생략되고 선택 회로부에 의해 수신 및 처리되지 않는다. 반전 회로부는 데이터 워드의 각각의 비트의 값을 반전(예를 들어, 토글링)시켜 변환된 데이터 워드 를 생성한다. 예를 들어, 반전 회로부는 데이터 워드의 각각의 비트를 제1 값(예를 들어, 0 또 는 1)에서 제2 값(예를 들어, 1 또는 0)으로 반전시킨다. 하나의 예에서, 반전 회로부는 반전된 버퍼 및 다른 회로 요소를 포함한다. 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 반전 가능 변환을 수행한다. 반전 가 능 변환은 원래 입력(예를 들어, 데이터 워드)을 복구하기 위해 반전될 수 있는 출력을 생성하는 변환이다. 하 나의 예에서, 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 비트별 XOR 연산을 수행 한다. 비트별 XOR 연산에 대한 입력은 데이터 워드의 비트와 이전 데이터 워드의 비트이다. 비트별 XOR 연산은 데이터 워드의 각각의 비트를 데이터 워드의 대응 비트와 비교하여 변환 데이터 워드 의 비트를 결정한다. 예를 들어, 데이터 워드의 비트와 이전 데이터 워드의 비트가 다른 값(예 를 들어, 0과 0 또는 1과 1)을 가질 때, 변환 데이터 워드의 비트는 1의 값을 갖는다. 또한, 데이터 워드 의 비트와 이전 데이터 워드의 비트가 동일한 값(예를 들어, 0 또는 1)을 갖는 경우, 변환 데이터 워 드의 비트는 0의 값을 갖는다. 하나의 예에서, 변환 회로부는 XOR 로직 게이트 및 기타 회로 요소를 포함한다. 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 반전 가능 변환을 수행한다. 변환 회 로부에 의해 수행되는 반전 가능 변환은 변환 회로부의 것과 다르다. 하나의 예에서, 변환 회로부 는 데이터 워드 및 이전 데이터 워드에 대해 비트별 XNOR 연산을 수행한다. 비트별 XNOR 연산 에 대한 입력은 데이터 워드의 비트와 이전 데이터 워드의 비트이다. 비트별 XNOR 연산은 데이터 워 드의 각각의 비트를 데이터 워드의 대응 비트와 비교하여 변환 데이터 워드의 비트를 결정한다. 예를 들어, 데이터 워드의 비트와 이전 데이터 워드의 비트가 동일한 값(예를 들어, 0과 0, 또는 1과 1)을 가질 때, 변환 데이터 워드의 비트는 1의 값을 갖는다. 또한, 데이터 워드의 비트와 이전 데이 터 워드의 비트가 다른 값(예를 들어, 0 또는 1)을 갖는 경우, 변환 데이터 워드의 비트는 0의 값을 갖는다. 반전 회로부, 변환 회로부 및 변환 회로부 중 적어도 2개는 적어도 부분적으로 중첩되는 기간 동안 대응하는 변환된 데이터 워드(422, 424, 426)를 생성한다. 다른 예에서, 변환 회로부 및 변환 회로 부는 비중첩 기간 동안 대응하는 변환된 데이터 워드(422, 424, 426)를 생성한다. 메모리는 데이터 워드를 저장하고 이전 데이터 워드를 변환 회로부 및 변환 회로부로 출력한다. 이전 데이터 워드는 이전 기간 동안 송신된 데이터 워드이다. 수신기 회로부는 처리 회로부, 선택 회로부 및 메모리를 포함한다. 처리 회로부는 데이터 워드를 수신하고 데이터 워드(441, 444, 446, 448)를 출력한다. 처리 회로부는 데이터 워드의 각각의 비트의 값을 반전시켜 데이터 워드를 생성한다. 또한, 처 리 회로부는 데이터 워드 및 이전 데이터 워드에 대응하는 반전 가능 변환 연산을 수행하여 변 환 데이터 워드(446 및 448)를 생성한다. 반전 가능 변환 연산은 특히 비트별 XOR 연산, 비트별 XNOR 연산을 포함한다. 데이터 워드를 생성하기 위해 수행된 반전 가능 변환은 변환된 데이터 워드를 생성하기 위해 수행된 반전 가능 변환과 동일하다. 데이터 워드를 생성하기 위해 수행된 반전 가능 변환은 변환된 데이터 워드를 생성하기 위해 수행된 반전 가능 변환과 동일하다. 선택 회로부는 데이터 워드(441, 444, 446, 448)를 수신하고 데이터 워드(441, 444, 446, 448) 중 하나를 선택하여 데이터 워드로 출력한다. 하나의 예에서, 선택 회로부는 데이터 워드(441, 444, 446, 44 8)를 수신하고, 데이터 워드를 출력할 때 송신기 회로부에 의해 수행되는 연산에 기초하여 데이터 워 드(441, 444, 446, 448) 중 하나를 선택한다. 하나의 예에서, 선택 회로부는 데이터 워드(441, 444,446, 448) 중 어느 것을 선택할 것인지를 나타내는 제어 신호를 수신한다. 제어 신호는 데이터 워드 가 변환되었는지 그리고 어떤 변환이 송신되기 전에 데이터 워드에 적용되었는지를 나타낸다. 예를 들어, 제어 신호는 데이터 워드가 변환되지 않았는지(예를 들어, 데이터 워드가 데이터 워드임), 반전되었는지(예를 들어, 데이터 워드가 변환된 데이터 워드임), 또는 반전 가능 변환으로 변환되었 는지(예를 들어, 데이터 워드가 변환된 데이터 워드(424 또는 426)임)를 표시한다. 선택된 데이터 워드 (441, 444, 446, 또는 448)가 데이터 워드로서 출력된다. 선택 회로부는 데이터 워드(441, 444, 446, 448)로부터 출력할 데이터 워드를 선택하는 하나 이상의 멀티 플렉서를 포함한다. 처리 회로부는 반전 회로부, 변환 회로부 및 변환 회로부를 포함한다. 하나의 예에서, 변 환 회로부 및 변환 회로부 중 하나가 생략되거나 추가적인 하나 이상의 변환 회로부가 처리 회로부 내에 포함된다. 반전 회로부는 데이터 워드의 각각의 비트의 값을 반전(예를 들어, 토글링)시켜 데이터 워드를 생성한다. 예를 들어, 반전 회로부는 1의 값을 갖는 데이터 워드의 각각의 비트를 0의 값으로 반전 시키고, 0의 값을 갖는 각각의 비트를 1의 값으로 반전시킨다. 반전 회로부는 반전된 버퍼 및 기타 회로 요소를 포함한다. 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 반전 가능 변환을 수행한다. 변환 회 로부에 의해 수행되는 반전 가능 변환은 변환 회로부에 의해 수행되는 것과 동일하다. 하나의 예에 서, 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 비트별 XOR 연산을 수행한다. 비 트별 XOR 연산에 대한 입력은 데이터 워드의 비트와 이전 데이터 워드의 비트이다. 비트별 XOR 연산 은 데이터 워드의 각각의 비트를 이전 데이터 워드의 대응 비트와 비교하여 변환 데이터 워드의 비트를 결정한다. 예를 들어, 데이터 워드의 비트와 이전 데이터 워드의 비트가 다른 값(예를 들어, 0과 1)을 갖는 경우, 변환 데이터 워드의 비트는 1의 값을 갖는다. 또한, 데이터 워드의 비트와 이 전 데이터 워드의 비트가 동일한 값(예를 들어, 0과 0, 또는 1과 1)을 갖는 경우, 변환 데이터 워드 의 비트는 0의 값을 갖는다. 변환 회로부는 XOR 로직 및 기타 회로 요소를 포함한다. 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 반전 가능 변환을 수행한다. 변환 회 로부에 의해 수행되는 반전 가능 변환은 변환 회로부의 것과 다르다. 변환 회로부에 의해 수행 되는 반전 가능 변환은 변환 회로부에 의해 수행되는 것과 동일하다. 하나의 예에서, 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 비트별 XNOR 연산을 수행한다. 비트별 XNOR 연산에 대한 입력은 데이터 워드의 비트와 이전 데이터 워드의 비트이다. 비트별 XNOR 연산은 데이터 워드 의 각각의 비트를 이전 데이터 워드의 대응 비트와 비교하여 변환 데이터 워드의 비트를 결정한다. 예를 들어, 데이터 워드의 비트와 이전 데이터 워드의 비트가 동일한 값(예를 들어, 0과 0, 또는 1과 1)을 갖는 경우, 변환 데이터 워드의 비트는 1의 값을 갖는다. 또한, 데이터 워드의 비트와 이전 데 이터 워드의 비트가 다른 값(예를 들어, 0과 1)을 갖는 경우, 변환 데이터 워드의 비트는 0의 값을 갖는다. 하나의 예에서, 반전 회로부, 변환 회로부 및 변환 회로부 각각은 각각의 수신된 데이터 워드를 처리하여 대응하는 데이터 워드(444, 446, 448)를 생성한다. 다른 예에서, 반전 회로부, 변환 회로부 및 변환 회로부 중 하나는 데이터 워드를 처리하여 데이터 워드(444, 446, 448) 중 각각의 워 드를 결정한다. 예를 들어, 처리 회로부에 적용된 변환 기술에 대응하는 반전 회로부, 변환 회로부 및 변환 회로부 중 하나는 각각의 데이터 워드(444, 446, 448)를 생성하는 데 사용된다. 또한, 반 전 회로부, 변환 회로부 및 변환 회로부 중 적어도 2개는 적어도 부분적으로 중첩되는 기간 동 안 데이터 워드를 처리한다. 다른 예에서, 반전 회로부, 변환 회로부 및 변환 회로부는 비중첩 기간 동안 데이터 워드를 처리한다. 메모리는 데이터 워드를 저장하고 이전 데이터 워드를 변환 회로부 및 변환 회로부로 출력한다. 하나의 예에서, 이전 데이터 워드는 데이터 워드가 수신되기 전의 기간 동안 수신된 데이 터 워드이다. 이전 데이터 워드는 데이터 워드가 수신되는 기간 직전의 기간 동안 수신될 수 있다. 또한, 이전 데이터 워드는 이전 데이터 워드와 동일하다. 비반전 데이터 워드와 반전된 데이터 워드를 사용하는 DBI 프로세스에 비교하여, 위의 DBI 프로세스에서는 변환 된 데이터 워드를 하나 이상 추가적으로 사용한다. 변환된 데이터 워드의 사용은 현재 데이터 워드와 이전 데 이터 워드 사이에서 토글(반전)되는 비트 수를 더욱 감소시킨다. 현재 데이터 워드의 비트가 111111111이고 이 전 데이터 워드의 비트가 000001111인 예에서, 현재 데이터 워드의 처음 5 비트가 이전 데이터 워드의 처음 5 비트와 다르므로 현재 데이터 워드와 이전 데이터 워드 사이에서 토글되는 비트는 총 5 비트와 같다. 현재 데 이터 워드를 반전시키면 비트가 000000000인 반전된 데이터 워드가 생성된다. 변환된 데이터 워드를 변환된 데 이터 워드와 비교하는 것은 변환된 데이터 워드의 4 비트가 이전 데이터 워드로부터 토글된다는 것을 나타낸다. 반전된 데이터 워드에는 비반전 현재 데이터 워드에 비교하여 토글되는 비트가 하나 더 적다. 그러나, 현재 데 이터 워드와 이전 데이터 워드에 비트별 XNOR 연산을 적용하면 이전 데이터 워드의 비트와 동일한 비트 000001111을 갖는 변환된 데이터 워드가 생성된다. 따라서, 변환된 데이터 워드를 송신할 때 비트가 토글되지 않는다. 현재 데이터 워드의 비트가 000000000이고 이전 데이터 워드의 비트가 000001111인 또 다른 예에서, 현재 데이 터 워드의 마지막 4 비트는 이전 데이터 워드의 마지막 4 비트와 다르므로 현재 데이터 워드와 이전 데이터 워 드 사이에서 토글되는 비트는 총 4 비트와 같다. 현재 데이터 워드를 반전시키면 비트가 111111111인 반전된 데이터 워드가 생성된다. 반전된 데이터 워드를 이전 데이터 워드와 비교하면 반전된 데이터 워드의 5 비트가 이전 데이터 워드에서 토글된다는 것을 나타낸다. 반전된 데이터 워드는 비반전 현재 데이터 워드에 비교하여 토글되는 비트가 1개 많다. 그러나, 현재 데이터 워드와 이전 데이터 워드에 비트별 XOR 연산을 적용하면 이전 데이터 워드의 비트와 동일한 비트 000001111을 갖는 변환된 데이터 워드가 생성된다. 따라서, 변환된 데이터 워드를 송신할 때 비트가 토글되지 않는다. 위의 예로부터 알 수 있는 바와 같이, 반전 가능 변환 연산(특히, 예를 들어, 비트별 XOR 연산 및/또는 비트별 XNOR 연산)을 포함하는 DBI 프로세스를 사용하면 이전 데이터 워드를 참조하여 데이터 워드를 송신할 때 토글되 는 비트 수가 감소한다. 따라서, 토글되는 비트 수가 감소함에 따라, 대응 인터페이스 시스템을 통해 통신할 때 발생하는 오류가 더욱 완화된다. 도 5는 하나 이상의 예에 따라 데이터 워드를 출력하기 위한 방법의 흐름도를 예시한다. 방법은 도 4를 참조하여 설명된다. 블록 502에서 데이터 워드가 송신기 회로부의 처리 회로부에 의해 수신된다. 하나의 예에서, 데이터 워드는 처리 회로부에 의해 수신된다. 블록 504에서, 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드가 생성된다. 예를 들어, 데이터 워드의 비트는 반전 회로부에 의해 반전되어 변환된 데이터 워드를 생성한다. 블록 506에서, 제1 데이터 워드 및 제2 데이터에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드 가 생성된다. 제2 데이터 워드는 이전에 송신된 데이터 워드이다. 제2 데이터 워드는 제1 데이터 워드 직전 기간 동안 송신되는 데이터 워드일 수 있다. 하나의 예에서, 제1 데이터 워드가 기간 N 동안 송신되어야 한다 면, 제2 데이터 워드는 기간 N-1 동안 송신되었다. 반전 가능 변환은 비트별 XOR 연산 또는 비트별 XNOR 연산 이다. 하나의 예에서, 데이터 워드의 비트와 이전 데이터 워드의 비트는 변환 회로부에 의해 변환되어 변환된 데이터 워드를 생성한다. 변환 회로부 또는 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 반전 가능 변환을 수행하여 변환된 데이터 워드를 생성한다. 하나의 예 에서, 변환 회로부는 데이터 워드 및 이전 데이터 워드에 대해 비트별 XOR 연산을 수행하여 변 환된 데이터 워드를 생성한다. 다른 예에서, 변환 회로부는 데이터 워드 및 이전 데이터 워드 에 대해 비트별 XNOR 연산을 수행하여 변환된 데이터 워드를 생성한다. 블록 508에서, 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수가 결정되고, 제1 변환된 데이터 워 드와 제2 데이터 워드 사이의 제2 비트 반전 수가 결정되고, 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수가 결정된다. 선택 회로부는 데이터 워드의 비트 값을 이전 데이터 워드의 값 과 비교하여 데이터 워드와 이전 데이터 워드 사이에서 값이 토글(예를 들어, 비트 반전)되는 비트 수를 결정한다. 또한, 선택 회로부는 변환된 데이터 워드의 비트 값을 이전 데이터 워드의 값 과 비교하여 변환된 데이터 워드와 이전 데이터 워드 사이에서 값이 토글(예를 들어, 비트 반전)되는 비트 수를 결정한다. 선택 회로부는 또한 변환된 데이터 워드(424 또는 426)의 비트 값을 이전 데이터 워 드의 값과 비교하여 변환된 데이터 워드와 이전 데이터 워드 사이에서 값이 토글(예를 들어, 비 트 반전)되는 비트 수를 결정한다. 블록 510에서, 제1 데이터 워드, 제1 변환된 데이터 워드, 또는 제2 변환된 데이터 워드는 제1, 제2, 및 제3 전 이 수에 기초하여 선택된다. 예를 들어, 선택 회로부는 블록 508에서 결정된 대응하는 비트 반전 수에 기 초하여 데이터 워드, 변환된 데이터 워드 및 변환된 데이터 워드(424 또는 426) 중 하나를 선택한다. 선택 회로부는 블록 508에서 결정된 데이터 워드에 대응하는 비트 반전 수가 블록 508에서 결정된 변 환된 데이터 워드 및 변환된 데이터 워드(424 또는 426)에 대응하는 비트 반전 수보다 더 적은 것에 기초 하여 데이터 워드를 선택한다. 선택 회로부는 블록 508에서 결정된 변환된 데이터 워드에 대응 하는 비트 반전 수가 블록 508에서 결정된 데이터 워드 및 변환된 데이터 워드(424 또는 426)에 대응하는 비트 반전 수보다 더 적다는 것에 기초하여 변환된 데이터 워드를 선택한다. 또한, 선택 회로부는 블록 508에서 결정된 변환된 데이터 워드(424 또는 426)에 대응하는 비트 반전 수가 블록 508에서 결정된 데이 터 워드 및 변환된 데이터 워드에 대응하는 비트 반전 수보다 더 적다는 것에 기초하여 변환된 데이 터 워드(424 또는 426)를 선택한다. 하나의 예에서, 선택 회로부는 어느 데이터 워드가 선택되었는지를 나타내는 표시 신호를 출력한다. 표시 신호는 추가적으로 또는 대안적으로 데이터 워드에 변환 프로세스가 적용되었는지 여부와 데이터 워드에 어떤 변환 프로세스가 적용되었는지를 나타낼 수 있다. 블록 512에서, 선택된 데이터 워드가 출력된다. 예를 들어, 선택 회로부는 데이터 워드를 인터페이 스 회로부로 출력하고, 인터페이스 회로부는 데이터 워드를 채널 및 인터페이스 회로부 를 통해 수신기 회로부로 출력한다. 상기 개시에서 설명한 바와 같이, 현재 데이터 워드와 이전에 송신된 데이터 워드 사이의 비트 반전 수를 제한 하면 송신 프로세스의 오류가 완화되어 인터페이스의 비트 오류율이 감소된다. 비트 반전 수를 감소시키기 위 해 하나 이상의 반전 가능 연산을 현재 데이터 워드와 이전에 송신된 데이터 워드에 사용 및 적용한다. 하나 이상의 반전 가능 연산은 특히 비트별 XOR 연산, 비트별 XNOR 연산을 포함한다. 현재 데이터 워드와 이전 데이 터 워드에 반전 가능 연산을 적용하여 변환된 데이터 워드를 생성한다. 이전 데이터 워드보다 비트 반전 수가 가장 작은 데이터 워드(예를 들어, 변환되지 않은 데이터 워드 또는 변환된 데이터 워드)를 선택하여 송신함으 로써 대응 인터페이스 시스템의 비트 오류율을 감소시킨다. 개시된 기술의 일부 비제한적인 예는 다음과 같이 표현될 수 있다: 예 1. 송신기 회로부에 있어서, 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하도록 구성된 반전 회 로부; 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성하 도록 구성된 제1 변환 회로부; 및 선택 회로부로서, 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택하고; 선택한 데이터 워드를 출력하도록 구성된, 상기 선택 회로부를 포함한다. 예 2. 예 1의 송신기 회로부에 있어서, 제1 데이터 워드 및 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행 하여 제3 변환된 데이터 워드를 생성하도록 구성된 제2 변환 회로부를 더 포함하고, 제2 반전 가능 연산은 제1 반전 가능 연산과 다르다. 예 3. 예 1 또는 2의 송신기 회로부에 있어서, 제2 반전 가능 연산은 비트별 XNOR 연산이다. 예 4. 예 1의 송신기 회로부에 있어서, 선택 회로부는, 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수를 결정하도록 추 가로 구성된다. 예 5. 예 1의 송신기 회로부에 있어서, 제1 데이터 워드, 제1 변환된 데이터 워드, 및 제2 변환된 데이터 워드 중 하나를 선택하는 단계는,제1 비트 반전 수가 제2 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 데이터 워드를 선택 하는 단계; 제2 비트 반전 수가 제1 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 변환된 데이터 워드 를 선택하는 단계; 및 제3 비트 반전 수가 제1 비트 반전 수 및 제2 비트 반전 수보다 더 작은 것에 기초하여 제2 변환된 데이터 워드 를 선택하는 단계를 포함한다. 예 6. 예 1의 송신기 회로부에 있어서, 제2 데이터 워드를 저장하고 출력하도록 구성된 메모리를 더 포함한다. 예 7. 전자 디바이스에 있어서, 송신기 회로부를 포함하며, 송신기 회로부는, 처리 회로부로서, 복수의 비트를 포함하는 제1 데이터 워드를 수신하고; 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하고; 제1 데이터 워드 및 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성하 도록 구성되는, 상기 처리 회로부; 및 선택 회로부로서, 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택하도록 구성되고, 송신기 회로 부는 선택된 데이터 워드를 출력하도록 구성된, 상기 선택 회로부를 포함한다. 예 8. 예 7의 전자 디바이스에 있어서, 처리 회로부는, 제1 데이터 워드 및 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행하여 제3 변환된 데이터 워드를 생성하 도록 추가로 구성되고, 제2 반전 가능 연산은 제1 반전 가능 연산과 다르다. 예 9. 예 7 또는 예 8의 전자 디바이스에 있어서, 제2 반전 가능 연산은 비트별 XNOR 연산이다. 예 10. 예 7의 전자 디바이스에 있어서, 선택 회로부는, 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수를 결정하도록 추 가로 구성된다. 예 11. 예 7의 전자 디바이스에 있어서, 제1 데이터 워드, 제1 변환된 데이터 워드, 및 제2 변환된 데이터 워드 중 하나를 선택하는 단계는, 제1 비트 반전 수가 제2 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 데이터 워드를 선택 하는 단계; 제2 비트 반전 수가 제1 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 변환된 데이터 워드 를 선택하는 단계; 및 제3 비트 반전 수가 제1 비트 반전 수 및 제2 비트 반전 수보다 더 작은 것에 기초하여 제2 변환된 데이터 워드 를 선택하는 단계를 포함한다. 예 12. 예 7의 전자 디바이스에 있어서, 출력 데이터 워드를 수신하도록 구성된 수신기 회로부를 더 포함하고, 수신기 회로부는, 처리 회로부로서, 출력 데이터 워드의 하나 이상의 비트를 반전시켜 제1 수신된 데이터 워드를 생성하고; 제1 반전 가능 연산, 출력 데이터 워드 및 제2 데이터 워드에 기초하여 제2 수신된 데이터 워드를 생성하도록 구성된, 상기 처리 회로부를 포함한다. 예 13. 데이터 워드를 송신하는 방법에 있어서, 방법은, 복수의 비트를 포함하는 제1 데이터 워드를 수신하는 단계; 제1 데이터 워드의 복수의 비트 중 하나 이상을 반전시켜 제1 변환된 데이터 워드를 생성하는 단계; 제1 데이터 워드와 제2 데이터 워드에 대해 제1 반전 가능 연산을 수행하여 제2 변환된 데이터 워드를 생성하는 단계; 제1 데이터 워드와 제2 데이터 워드 사이의 제1 비트 반전 수, 제1 변환된 데이터 워드와 제2 데이터 워드 사이 의 제2 비트 반전 수, 및 제2 변환된 데이터 워드와 제2 데이터 워드 사이의 제3 비트 반전 수에 기초하여 제1 데이터 워드, 제1 변환된 데이터 워드 및 제2 변환된 데이터 워드 중 하나를 선택하는 단계; 및 선택한 데이터 워드를 출력하는 단계를 포함한다. 예 14. 예 13의 방법에 있어서, 제1 데이터 워드와 제2 데이터 워드에 대해 제2 반전 가능 연산을 수행하여 제3 변환된 데이터 워드를 생성하는 단계를 더 포함하고, 제2 반전 가능 연산은 제1 반전 가능 연산과 다르다. 예 15. 예 13 또는 14의 방법에 있어서, 제2 반전 가능 연산은 비트별 XNOR 연산이다. 예 16. 예 13의 방법에 있어서, 제1 데이터 워드, 제1 변환된 데이터 워드, 및 제2 변환된 데이터 워드 중 하나 를 선택하는 단계는, 제1 비트 반전 수가 제2 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 데이터 워드를 선택 하는 단계; 제2 비트 반전 수가 제1 비트 반전 수 및 제3 비트 반전 수보다 더 작은 것에 기초하여 제1 변환된 데이터 워드 를 선택하는 단계; 및 제3 비트 반전 수가 제1 비트 반전 수 및 제2 비트 반전 수보다 더 작은 것에 기초하여 제2 변환된 데이터 워드 를 선택하는 단계를 포함한다. 예 20. 예 13의 방법에 있어서, 출력 데이터 워드를 수신하는 단계; 출력 데이터 워드의 하나 이상의 비트를 반전시켜 제1 수신된 데이터 워드를 생성하는 단계; 및 제1 반전 가능 연산, 출력 데이터 워드 및 제2 데이터 워드에 기초하여 제2 수신된 데이터 워드를 생성하는 단 계를 더 포함한다. 앞서 설명한 내용은 특정 예에 관한 것이지만, 그 기본 범위를 벗어나지 않고 다른 추가적인 예가 안출될 수 있 으며, 그 범위는 다음의 청구범위에 의해 결정된다.도면 도면1 도면2 도면3 도면4 도면5"}
{"patent_id": "10-2024-7004166", "section": "도면", "subsection": "도면설명", "item": 1, "content": "위에 언급된 특징을 구체적으로 이해할 수 있는 방식으로, 위에 간단하게 요약되어 있는, 더 구체적인 설명이 예시적인 구현을 참조하여 이루어질 수 있으며, 이러한 예시적 구현 중 일부가 첨부 도면에 예시되어 있다. 그 러나, 첨부 도면은 단지 전형적인 예시적인 구현을 예시할 뿐이며, 따라서, 그 범위를 제한하는 것으로 고려되 어서는 안 된다는 점에 유의해야 한다. 도 1은 예에 따른 예시적인 전자 디바이스를 도시하는 블록도이다. 도 2는 예에 따른 예시적인 다중-칩 시스템을 도시하는 블록도이다. 도 3은 예에 따른 예시적인 프로그램 가능 디바이스를 도시하는 블록도이다. 도 4는 예에 따른 예시적인 인터페이스 시스템의 블록도이다. 도 5는 예에 따른 데이터 워드를 송신하는 방법의 흐름도를 예시한다.이해를 용이하게 하기 위해, 가능한 경우 도면에 공통된 동일한 요소를 지정하기 위해 동일한 참조 번호를 사용 한다. 하나의 예의 요소가 다른 예에서 유리하게 통합될 수 있는 것으로 고려된다."}
