{"patent_id": "10-2022-0041682", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0139800", "출원번호": "10-2022-0041682", "발명의 명칭": "머신 학습 모델 기반 비디오 압축", "출원인": "디즈니엔터프라이지즈,인크.", "발명자": "델로아, 압델아지즈"}}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "시스템으로서,머신 학습(ML) 모델 기반 비디오 압축 인코더 및 트레이닝된 이미지 압축 ML 모델을 저장하는 시스템 메모리 및처리 하드웨어를 포함하는 컴퓨팅 플랫폼을 포함하고;상기 처리 하드웨어는 상기 ML 모델 기반 비디오 압축 인코더를 실행하여:압축되지 않은 비디오 콘텐츠 및 상기 압축되지 않은 비디오 콘텐츠에 대응하는 모션 보상된 비디오 콘텐츠를수신하고;상기 압축되지 않은 비디오 콘텐츠에 대응하는 이미지 공간 잔차를 식별하기 위해 상기 압축되지 않은 비디오콘텐츠를 상기 모션 보상된 비디오 콘텐츠와 비교하고;상기 이미지 공간 잔차를 상기 이미지 공간 잔차의 잠재 공간 표현으로 변환하고;상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 상기 모션 보상된 비디오 콘텐츠를 수신하고;상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 상기 모션 보상된 비디오 콘텐츠를 상기 모션 보상된 비디오콘텐츠의 잠재 공간 표현으로 변환하고;인코딩된 잠재 잔차를 생성하기 위해 상기 이미지 공간 잔차의 잠재 공간 표현을 인코딩하고;인코딩된 잠재 비디오 콘텐츠를 생성하기 위해, 상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 상기 모션보상된 비디오 콘텐츠의 잠재 공간 표현을 인코딩하고; 그리고상기 인코딩된 잠재 잔차 및 상기 인코딩된 잠재 비디오 콘텐츠를 사용하여, 상기 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 생성하도록 구성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 인코딩된 잠재 잔차 및 상기 인코딩된 잠재 비디오 콘텐츠는 병렬로 생성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 처리 하드웨어는 상기 ML 모델 기반 비디오 압축 인코더를 실행하여, 상기 인코딩된 잠재 잔차와 상기 인코딩된 잠재 비디오 콘텐츠 간의 차이에 기반하여 상기 압축되지 않은 비디오 콘텐츠에 대응하는 상기 압축된비디오 콘텐츠를 생성하도록 구성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 트레이닝된 이미지 압축 ML 모델은 트레이닝된 인공 신경망(NN)을 포함하는,시스템.공개특허 10-2022-0139800-3-청구항 5 제4항에 있어서,상기 트레이닝된 NN은 적대적 손실을 포함하는 목적 함수를 사용하여 트레이닝되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서,상기 트레이닝된 NN은 생산적 적대 네트워크(GAN)를 포함하는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "머신 학습(ML) 모델 기반 비디오 압축 인코더 및 트레이닝된 이미지 압축 ML 모델을 저장하는 시스템 메모리 및처리 하드웨어를 갖는 컴퓨팅 플랫폼을 포함하는 시스템에 의한 사용 방법으로서,상기 처리 하드웨어에 의해 실행되는 상기 ML 모델 기반 비디오 압축 인코더에 의해, 압축되지 않은 비디오 콘텐츠 및 상기 압축되지 않은 비디오 콘텐츠에 대응하는 모션 보상된 비디오 콘텐츠를 수신하는 단계;상기 처리 하드웨어에 의해 실행되는 상기 ML 모델 기반 비디오 압축 인코더에 의해, 상기 압축되지 않은 비디오 콘텐츠와 상기 모션 보상된 비디오 콘텐츠를 비교하여, 상기 압축되지 않은 비디오 콘텐츠에 대응하는 이미지 공간 잔차를 식별하는 단계;상기 처리 하드웨어에 의해 실행되는 상기 ML 모델 기반 비디오 압축 인코더에 의해, 상기 이미지 공간 잔차를상기 이미지 공간 잔차의 잠재 공간 표현으로 변환하는 단계;상기 처리 하드웨어에 의해 실행되는 상기 트레이닝된 이미지 압축 ML 모델에 의해, 상기 모션 보상된 비디오콘텐츠를 수신하는 단계;상기 처리 하드웨어에 의해 실행되는 상기 트레이닝된 이미지 압축 ML 모델에 의해, 상기 모션 보상된 비디오콘텐츠를 상기 모션 보상된 비디오 콘텐츠의 잠재 공간 표현으로 변환하는 단계;상기 처리 하드웨어에 의해 실행되는 상기 ML 모델 기반 비디오 압축 인코더에 의해, 인코딩된 잠재 잔차를 생성하기 위해 상기 이미지 공간 잔차의 잠재 공간 표현을 인코딩하는 단계;인코딩된 비디오 콘텐츠를 생성하기 위해, 상기 처리 하드웨어에 의해 실행되는 상기 트레이닝된 이미지 압축ML 모델에 의해, 상기 모션 보상된 비디오 콘텐츠의 잠재 공간 표현을 인코딩하는 단계; 및상기 처리 하드웨어에 의해 실행되고, 상기 인코딩된 잠재 잔차 및 상기 인코딩된 잠재 비디오 콘텐츠를 사용하는 상기 ML 모델 기반 비디오 압축 인코더에 의해, 상기 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 생성하는 단계를 포함하는, 머신 학습(ML) 모델 기반 비디오 압축 인코더 및 트레이닝된 이미지 압축 ML 모델을 저장하는 시스템 메모리 및 처리 하드웨어를 갖는 컴퓨팅 플랫폼을 포함하는 시스템에 의한 사용 방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 인코딩된 잠재 잔차 및 상기 인코딩된 잠재 비디오 콘텐츠는 병렬로 생성되는,방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서,상기 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠는, 상기 인코딩된 잠재 잔차와 상기 인코공개특허 10-2022-0139800-4-딩된 잠재 비디오 콘텐츠의 차이에 기반하여 생성되는,방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제7항에 있어서,상기 트레이닝된 이미지 압축 ML 모델은 트레이닝된 인공 신경망(NN)을 포함하는,방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 트레이닝된 NN은 적대적 손실을 포함하는 목적 함수를 사용하여 트레이닝되는,방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제7항에 있어서,상기 트레이닝된 NN은 생산적 적대 네트워크(GAN)를 포함하는,방법."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "시스템으로서,머신 학습(ML) 모델 기반 비디오 압축 인코더 및 트레이닝된 이미지 압축 ML 모델을 저장하는 시스템 메모리 및처리 하드웨어를 포함하는 컴퓨팅 플랫폼을 포함하고;상기 처리 하드웨어는 상기 ML 모델 기반 비디오 압축 인코더를 실행하여:상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 압축되지 않은 비디오 콘텐츠 및 상기 압축되지 않은 비디오콘텐츠에 대응하는 모션 보상된 비디오 콘텐츠를 수신하고;상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 상기 압축되지 않은 비디오 콘텐츠를 상기 압축되지 않은 비디오 콘텐츠의 제1 잠재 공간 표현으로 변환하고;상기 트레이닝된 이미지 압축 ML 모델을 사용하여, 상기 모션 보상된 비디오 콘텐츠를 상기 압축되지 않은 비디오 콘텐츠의 제2 잠재 공간 표현으로 변환하고; 그리고상기 제1 잠재 공간 표현 및 상기 제2 잠재 공간 표현에 기반하여 상기 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 전송하기 위한 비트스트림을 생성하도록 구성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,상기 처리 하드웨어는 상기 ML 모델 기반 비디오 압축 인코더를 실행하여:상기 제1 잠재 공간 표현 및 상기 제2 잠재 공간 표현을 사용하여, 잠재 공간 잔차를 결정하도록 추가로 구성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,공개특허 10-2022-0139800-5-상기 처리 하드웨어는 상기 ML 모델 기반 비디오 압축 인코더를 실행하여:상기 잠재 공간 잔차를 사용하여 상기 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 전송하기 위한 비트스트림을 생성하도록 추가로 구성되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 잠재 공간 잔차는 상기 제1 잠재 공간 표현과 상기 제2 잠재 공간 표현 사이의 차이에 기반하는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서,상기 압축되지 않은 비디오 콘텐츠를 상기 제1 잠재 공간 표현으로 변환하는 것, 및 상기 모션 보상된 비디오콘텐츠를 상기 제2 잠재 공간 표현으로 변환하는 것은 병렬로 수행되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서,상기 트레이닝된 이미지 압축 ML 모델은 트레이닝된 인공 신경망(NN)을 포함하는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제13항에 있어서,상기 트레이닝된 NN은 적대적 손실을 포함하는 목적 함수를 사용하여 트레이닝되는,시스템."}
{"patent_id": "10-2022-0041682", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제13항에 있어서,상기 트레이닝된 NN은 생산적 적대 네트워크(GAN)를 포함하는,시스템."}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "시스템 처리 하드웨어는 머신 학습(ML) 모델 기반 비디오 압축 인코더를 실행하여, 압축되지 않은 비디오 콘텐츠 및 해당 모션 보상된 비디오 콘텐츠를 수신하고, 이미지 공간 잔차를 식별하기 위해 압축되지 않은 비디오 콘텐 츠와 모션 보상된 비디오 콘텐츠를 비교하고, 이미지 공간 잔차를 압축되지 않은 비디오 콘텐츠의 잠재 공간 표 (뒷면에 계속)"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 출원은 2021년 4월 8일에 출원된 \"신경망 기반 비디오 코덱(Neural Network Based Video Codecs)\"이라는 명 칭의 미국 가특허출원 제63/172,315호 및 2021년 10월 13일에 출원된 \"낮은 비트레이트 비디오 압축을 위한 마 이크로도싱(Microdosing For Low Bitrate Video Compression)\"이라는 명칭의 미국 가특허출원 제63/255,280호 에 대한 이익 및 우선권을 주장하며, 이들 문헌은 그 전체가 본원에 참고로 포함된다."}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "비디오 콘텐츠는 전체 인터넷 트래픽의 대부분을 나타내며, 공간 해상도 프레임 레이트와 비디오의 색 심도가 증가하고 보다 많은 사용자가 스트리밍 서비스를 채택함에 따라 더욱 더 증가할 것으로 예상된다. 기존 코덱이 인상적인 성능을 달성했지만, 기존 코덱은 작은 개선 사항을 더 추가해도 미래의 요구 사항을 충족할 수 없을 정도로 설계되었다. 결과적으로, 비디오 코딩을 수행하는 근본적으로 다른 방식을 탐색하게 되면 유리하게도 향상된 성능 및 유연성을 갖는 새로운 부류의 비디오 코덱으로 이어질 수 있다. 예를 들어, 신경망(neural network)(NN)과 같은 트레이닝된 머신 학습(machine learning)(ML) 모델을, 예를 들 어, 생산적 적대 네트워크(generative adversarial network)(GAN)의 형태로 사용하여 비디오 압축을 수행하는 한 가지 이점은 ML 모델이 데이터 전송 측면에서 획득하는 데 비용이 많이 들 수 있는 시각적 세부 사항을 유추 할 수 있게 한다는 것이다. 그러나, GAN과 같은 ML 모델을 트레이닝하는 것은 일반적으로 어려운 일인데, 그 이 유는 트레이닝이 손실 함수의 안장점(saddle point)으로 수렴하기 위해 최소화와 최대화 단계를 번갈아 가며 수 행하기 때문이다. 시간 도메인과 이로 인해 발생하는 복잡성의 증가를 고려할 때 작업은 더욱 어려워진다."}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다음의 설명은 본 개시 내용의 구현예에 관한 특정 정보를 포함한다. 본 기술 분야의 기술자는 본 개시 내용이 본원에 구체적으로 논의된 것과는 다른 방식으로 구현될 수 있음을 인식할 것이다. 본 출원의 도면 및 그 첨부 된 상세한 설명은 단지 예시적인 구현예에 불과하다. 달리 명시되지 않는 한, 도면들 중 유사하거나 대응하는 요소는 유사하거나 대응하는 참조 번호로 표시될 수 있다. 또한, 본 출원의 도면 및 예시는 일반적으로 축척대 로 도시된 것은 아니며, 실제 상대 치수와 일치하도록 의도되지 않는다. 위에서 언급한 바와 같이, 비디오 콘텐츠는 전체 인터넷 트래픽의 대부분을 나타내며, 공간 해상도 프레임 레이 트와 비디오의 색 심도가 증가하고 보다 많은 사용자가 스트리밍 서비스를 채택함에 따라 더욱 더 증가할 것으 로 예상된다. 기존 코덱이 인상적인 성능을 달성했지만, 기존 코덱은 작은 개선 사항을 더 추가해도 미래의 요 구 사항을 충족할 수 없을 정도로 설계되었다. 결과적으로, 비디오 코딩을 수행하는 근본적으로 다른 방식을 탐 색하게 되면 유리하게도 향상된 성능 및 유연성을 갖는 새로운 부류의 비디오 코덱으로 이어질 수 있다. 예를 들어, 그리고 위에서 추가로 언급한 바와 같이, 신경망(NN)과 같은 트레이닝된 머신 학습(machine learning)(ML) 모델을, 예를 들어, GAN(Generative Adversarial Network)의 형태로 사용하여 비디오 압축을 수 행하는 한 가지 이점은 ML 모델이 데이터 전송 측면에서 획득하는 데 비용이 많이 들 수 있는 시각적 세부 사항 을 유추할 수 있게 한다는 것이다. 그러나, GAN과 같은 ML 모델을 트레이닝하는 것은 일반적으로 어려운 일인데, 그 이유는 트레이닝이 손실 함수의 안장점으로 수렴하기 위해 최소화와 최대화 단계를 번갈아 가며 수 행하기 때문이다. 만일 시간 도메인과 이로 인해 발생하는 복잡성의 증가를 고려할 경우 증가된 데이터로 인해 작업은 더욱 어려워진다. 본 출원은 낮은 비트 레이트 비디오 압축을 목표로 할 때 특히 중요한 트레이닝된 GAN과 유사한 환각 능력을 갖 는 비디오 압축 코덱을 구축하기 위한 토대로서 임의의 적대적으로 트레이닝된 이미지 압축 ML 모델 (adversarially trained image compression ML model)을 사용하기 위해 지식 증류(knowledge distillation) 및 잠재 공간 잔차(latent space residual)에 기반한 프레임워크를 개시한다. 본원의 ML 모델 기반 비디오 압축 솔 루션으로부터 생성된 이미지는 높은 비트 레이트를 요구하지 않고도 시각적으로 만족스럽다. ML 모델 기반 비디 오 코덱을 사용할 때 합성된 일부 이미지 세부 정보는 실측 자료와는 약간 다르지만 사실적으로 보일 수 있다. 그럼에도 불구하고, 본원의 ML 모델 기반 이미지 압축 솔루션은 동일한 전송량의 데이터를 사용해서는 기존 접 근 방식에서는 불가능했을 이미지 품질을 제공할 수 있다. 더욱이, 일부 구현예에서, 본 ML 모델 기반 비디오압축 솔루션은 실질적으로 자동화된 시스템 및 방법으로 구현될 수 있다. 주목할 것은 본 출원에서 사용된 용어 \"자동화\", \"자동화된\", 및 \"자동화하는\"은 인간 편집자 또는 시스템 관리 자와 같은 인간 사용자의 참여를 필요로 하지 않는 시스템 및 프로세스를 지칭한다는 것이다. 일부 구현예에서 인간 시스템 관리자가 본원에 기술되는 자동화된 프로세스에 따라 동작하는 자동화 시스템의 성능을 검토할 수 있지만, 그러한 인간 개입은 선택 사항이다. 따라서, 본 출원에서 기술되는 프로세스는 개시된 시스템의 하드웨 어 처리 컴포넌트의 제어 하에 수행될 수 있다. 또한, 주목할 것은 본 출원에서 정의된 바와 같이, \"머신 학습 모델\"(이하 \"ML 모델\")이라는 표현은 트레이닝 데이터로 알려진, 신뢰된 알려진 매치 및 알려진 미스매치의 세트로부터 획득되는 데이터 샘플로부터 학습된 패 턴에 기반하여 미래 예측을 수행하기 위한 수학적 모델을 지칭한다는 것이다. 다양한 학습 알고리즘을 사용하여 입력 데이터와 출력 데이터 간의 상관 관계를 매핑할 수 있다. 이러한 상관 관계는 새로운 입력 데이터에 대한 미래 예측을 수행하는 데 사용될 수 있는 수학적 모델을 형성한다. 이러한 예측 모델은, 예를 들어, 하나 이상 의 로지스틱 회귀 모델, 베이지안 모델, 또는 NN을 포함할 수 있다. 또한, 머신 학습 모델은 특정 작업의 성능 을 점진적으로 개선하도록 설계될 수 있다. 심층 학습의 맥락에서 \"심층 신경망\"(심층 NN)은 입력 계층과 출력 계층 간의 다수의 은닉 계층을 활용하는 NN 을 지칭할 수 있으며, 이는 원시 데이터에 명시적으로 정의되지 않은 특징을 기반으로 하는 학습을 가능하게 할 수 있다. 본 출원에서 사용된 바와 같이, NN으로 라벨링된 특징은 심층 신경망을 지칭한다. 다양한 구현예에서, NN은 이미지 처리 또는 자연어 처리를 수행하는 데 활용될 수 있다. 본원의 신규성 및 진보성 원리가 GAN으로 알려진 예시적인 NN 클래스를 참조하여 아래에 설명되지만, 그러한 특성화는 단지 개념적 명확성을 위해 제공될 뿐이다. 보다 일반적으로, 본원의 ML 모델 기반 비디오 압축 솔루션은 다른 타입의 ML 모델을 사용하여 구현될 수 있으며, 트레이닝하는 데 번거롭고 비용이 많이 들거나 시간이 많이 걸리는 ML 모델과 함께 사용될 때 특히 유리할 수 있다. 도 1은 일 구현예에 따른 ML 모델 기반 비디오 압축을 수행하기 위한 예시적인 시스템을 도시한 것이다. 도 1에 도시된 바와 같이, 시스템은 처리 하드웨어 및 컴퓨터 판독 가능한 비일시적 저장 매체로서 구현된 시스템 메모리를 갖는 컴퓨팅 플랫폼을 포함한다. 본 예시적인 구현예에 따르면, 시스템 메모리(10 6)는 압축되지 않은 비디오 콘텐츠 및 ML 모델 기반 코덱 소프트웨어 리소스를 저장한다. 도 1에 추가로 도시된 바와 같이, 시스템은 통신 네트워크, 및 사용자가 사용하도록 구성되고 디스플레이를 포함한 사용자 시스템을 포함하는 사용 환경 내에서 구현된다. 또한, 도 1은 통신 네트 워크를 통해 사용자 시스템을 시스템과 쌍방향으로 연결하는 네트워크 통신 링크를 도시한 것이다. 도 1에는 또한 시스템에 의해 출력되고 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비 디오 콘텐츠가 도시되어 있다. 본 출원은 개념의 명확성을 위해 ML 모델 기반 코덱 소프트웨어 리소스가 시스템 메모리에 저장되는 것으로 언급하지만, 보다 일반적으로 시스템 메모리는 임의의 컴퓨터 판독 가능한 비일시적 저장 매체의 형태를 취할 수 있다. 본 출원에서 사용되는 \"컴퓨터 판독 가능한 비일시적 저장 매체\"라는 표현은 컴퓨팅 플랫 폼의 처리 하드웨어에 인스트럭션을 제공하는 반송파 또는 다른 일시적 신호를 제외한 임의의 매체를 지칭한다. 따라서, 컴퓨터 판독 가능한 비일시적 저장 매체는, 예를 들어, 휘발성 매체 및 비휘발성 매체와 같 은 다양한 타입의 매체에 해당할 수 있다. 휘발성 매체는 동적 랜덤 액세스 메모리(동적 RAM)와 같은 동적 메모 리를 포함할 수 있는 반면, 비휘발성 메모리는 광학, 자기, 또는 정전기 저장 디바이스를 포함할 수 있다. 컴퓨 터 판독 가능한 비일시적 저장 매체의 일반적인 형태는, 예를 들어, 광 디스크, RAM, 프로그래머블 판독 전용 메모리(PROM), 소거 가능한 PROM (EPROM), 및 플래시(FLASH) 메모리를 포함한다. 더욱이, 도 1은 ML 모델 기반 코덱 소프트웨어 리소스 그 전체가 시스템 메모리에 저장되는 것으로 도시하지만, 그 표현은 또한 단지 개념적 명확성에 대한 보조물로서만 제공될 뿐이다. 보다 일반적으로, 시스템 은, 예를 들어, 함께 배치될 수 있는 컴퓨터 서버와 같은 하나 이상의 컴퓨팅 플랫폼을 포함할 수 있 거나, 예를 들어, 클라우드 기반 시스템과 같이, 쌍방향으로 링크되어 있지만 분산된 시스템을 형성할 수 있다. 그 결과, 처리 하드웨어 및 시스템 메모리는 시스템 내에서 분산된 프로세서 및 메모리 리소스 에 대응할 수 있다. 결과적으로, 일부 구현예에서, 아래에 기술되는 ML 모델 기반 코덱 소프트웨어 리소스(13 0)의 특징 중 하나 이상은 시스템의 분산된 메모리 리소스 상에 서로 원격으로 저장될 수 있다. 처리 하드웨어는 다수의 하드웨어 처리 유닛, 예를 들어, 하나 이상의 중앙 처리 유닛, 하나 이상의 그래 픽 처리 유닛, 및 하나 이상의 텐서 처리 유닛(tensor processing unit), 하나 이상의 필드 프로그래머블 게이 트 어레이(FPGA), 머신 학습 트레이닝 또는 추론을 위한 커스텀 하드웨어(custom hardware), 및 애플리케이션 프로그래밍 인터페이스(application programming interface)(API) 서버를 포함할 수 있다. 본 출원에서 사용되 는 바와 같은 정의에 의해, \"중앙 처리 유닛\"(CPU), \"그래픽 처리 유닛\"(GPU), 및 \"텐서 처리 유닛\"(TPU)라는 용어는 본 기술 분야에서 그들의 통상적인 의미를 갖는다. 다시 말해서, CPU는 컴퓨팅 플랫폼의 산술 및 논리 연산을 수행하기 위한 산술 로직 유닛(Arithmetic Logic Unit)(ALU)과, 시스템 메모리로부터 ML 모 델 기반 코덱 소프트웨어 리소스와 같은 프로그램을 검색하기 위한 제어 유닛(Control Unit)(CU)을 포함하지만, GPU는 연산 집약적 그래픽 또는 다른 처리 작업을 수행함으로써 CPU의 처리 오버헤드를 감소시키도록 구현될 수 있다. TPU는 머신 학습과 같은 인공 지능(AI) 프로세스를 위해 특별히 구성된 주문형 집적 회로(ASIC)이다. 일부 구현예에서, 컴퓨팅 플랫폼은, 예를 들어, 인터넷과 같은 패킷 교환 네트워크의 형태의 통신 네트워 크를 통해 액세스 가능한 하나 이상의 웹 서버에 대응할 수 있다. 더욱이, 일부 구현예에서, 통신 네트워 크는 고성능 컴퓨팅(high performance computing)(HPC)에 적합한 고속 네트워크, 예를 들어, 10 GigE 네 트워크 또는 인피니밴드(Infiniband) 네트워크일 수 있다. 일부 구현예에서, 컴퓨팅 플랫폼은 사설 광역 네트워크(WAN) 또는 근거리 네트워크(LAN)를 지원하거나 다른 타입의 제한된 분배 또는 사설 네트워크에 포함될 수 있는 하나 이상의 컴퓨터 서버에 대응할 수 있다. 또 다른 대안으로서, 일부 구현예에서, 시스템은, 예 를 들어, 데이터 센터에서 가상으로 구현될 수 있다. 예를 들어, 일부 구현예에서, 시스템은 소프트웨어로, 또는 가상 머신으로서 구현될 수 있다. 도 1에 도시된 구현예에 따르면, 사용자는 사용자 시스템을 활용하여 통신 네트워크를 통해 시 스템과 상호 작용할 수 있다. 사용자 시스템 및 통신 네트워크를 통해, 사용자는 시스템 으로부터 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 획득할 수 있다. 사 용자 시스템이 도 1에서 데스크톱 컴퓨터로 도시되지만, 그 표현은 단지 예로서만 제공된다. 보다 일반적 으로, 사용자 시스템은 사용자 인터페이스를 제공하고, 통신 네트워크에 대한 연결을 지원하고, 본원 의 사용자 시스템에 할당된 기능을 구현하기에 충분한 데이터 처리 능력을 구현하는 임의의 적합한 모바일 또는 고정 컴퓨팅 디바이스 또는 시스템일 수 있다. 예를 들어, 일부 구현예에서, 사용자 시스템은, 예를 들어, 랩톱 컴퓨터, 태블릿 컴퓨터, 스마트폰, 또는 게임 콘솔의 형태를 취할 수 있다. 그러나, 다른 구현예에 서 사용자 시스템은 사용자가 키보드 또는 다른 입력 디바이스를 통해 입력을 제공할 뿐만 아니라 디 스플레이를 통해 비디오 콘텐츠를 제공할 수 있게 하는 시스템의 \"벙어리 단말기(dumb terminal)\" 주 변 컴포넌트일 수 있다. 이러한 구현예에서, 사용자 시스템 및 디스플레이는 시스템의 처리 하 드웨어에 의해 제어될 수 있다. 사용자 시스템의 디스플레이와 관련하여, 디스플레이는 사용자 시스템과 물리적으로 통합 될 수 있거나 사용자 시스템에 통신 가능하게 연결될 수 있지만 사용자 시스템으로부터 물리적으로 분리될 수 있다. 예를 들어, 사용자 시스템이 스마트폰, 랩톱 컴퓨터, 또는 태블릿 컴퓨터로 구현되는 경 우, 디스플레이는 일반적으로 사용자 시스템과 통합될 것이다. 대조적으로, 사용자 시스템이 데 스크톱 컴퓨터로 구현되는 경우, 디스플레이는 컴퓨터 타워의 형태로 사용자 시스템과 분리된 모니터 의 형태를 취할 수 있다. 또한, 디스플레이는 액정 디스플레이(LCD), 발광 다이오드(LED) 디스플레이, 유 기 발광 다이오드(OLED) 디스플레이, 양자점(QD) 디스플레이, 또는 광으로 신호의 물리적 변환을 수행하는 임의 의 다른 적합한 디스플레이 기술을 사용하는 디스플레이의 형태를 취할 수 있다. ML 모델 기반 코덱 소프트웨어 리소스는 도 2a, 도 2b, 및 도 2c를 참조하여 아래에서 추가로 설명된다. 도 2a를 참조하면, 도 2a는 일 구현예에 따른 예시적인 ML 모델 기반 비디오 코덱 아키텍처의 다이어그램 을 도시한 것이다. 도 2a에 도시된 바와 같이, ML 모델 기반 비디오 코덱 아키텍처는 인코더 역할을 하는 트레이닝된 이미지 압축 ML 모델, 및 ML 모델 기반 디코더를 포함한다. 도 2a에는 또한 압축되지 않 은 입력 이미지, 입력 이미지에 대한 잠재 공간 표현, 양자화된 잠재물, 및 압축되지 않은 입력 이미지에 대응하는 디코딩된 이미지가 도시되어 있다. 주목할 것은 도 2a에 도시된 ML 모델 기 반 비디오 코덱 아키텍처의 특징이 도 1의 ML 모델 기반 코덱 소프트웨어 리소스 사이에 포함될 수 있다는 것이다. 도 2a에 도시된 예시적인 구현예에 따르면, 병목 값이 잠재 표현을 구성하는 ML 모델 기반 비디오 코덱 아키텍 처로 이미지 공간에서 잠재 공간으로의 매핑이 실현된다. 함수 는 트레이닝된 이미지 압축 ML 모델 에 의해 수행되는 이미지 공간에서 잠재 공간으로의 매핑을 나타내고, 는 역 매핑을 나타낸다. 이미지 는먼저 잠재 표현 로 매핑된다. 양자화 후, 결과적인 양자화된 잠재물 는 도 2a에 도시된 바와 같이 이미지 로 디코딩될 수 있는 비트스트림으로 무손실 인코딩된다. 이미지 압축은 다음의 레이트 왜곡 목적 함수(rate-distortion objective function)를 최적화하는 것으로 공식 화된 원본과 비교하여, 비트스트림의 예상 길이와 재구성된 이미지의 예상 왜곡을 최소화하는 것으로 공식적으 로 표현될 수 있고: 수학식 1"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서: 는 레이트 항(rate term)이고, 는 왜곡 항(distortion term)이다. 주목할 것은 수학식 1에 사용된 표기법에서, 의 파라미터는 를 포함한다. 여기서 는 왜곡 척도를 나타내 며, , 구조적 유사성 지수 척도(structural similarity index measure)(SSIM), 학습된 지각 이미지 패치 유 사성(learned perceptual image patch similarity)(LPIPS) 등의 조합을 포함할 수 있다. 레이트는 알려지지 않 은 분포의 자연 이미지 에 대한 학습된 엔트로피 모델 에 기반하여, 양자화된 표현 을 인코딩하는 데 필 요한 비트스트림의 길이에 대응한다. 가중치 를 감소시키게 되면, 재구성된 이미지에 대한 더 큰 왜곡을 대가 로 더 나은 압축을 달성할 수 있다. 본원의 신규성 및 진보성 개념과 관련한 일 구현예에 따르면, 위에서 설명된 신경 이미지 압축 공식은 조건부 GAN 형태의 ML 모델로 증강될 수 있다. 이러한 적대적 트레이닝(adversarial training)의 경우, 는 잠재 표현 를 조건으로 실측 자료 와 디코딩된 이미지 를 구별하도록 학습하는 판별자 신경망으로 표시된다: 수학식 2"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "판별자의 트레이닝은 이미지 압축 ML 모델의 트레이닝과 교대로 수행되며, 이 경우 적대적 손실과 함께 증 강된 레이트 왜곡 목적 함수는 최적화된다: 수학식 3"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "여기서: 및 는 레이트 항 및 왜곡 항을 각각 유지하는 반면 는 적대적 손실이 된다. 비디오 인코딩에서 시간적 중복성을 활용하기 위해 비디오 압축은 모션 보상을 통한 정보 전달에 의존한다. 보 다 정확하게는, (참조 번호 217에 의해 도 2b 및 도 2c에서 식별되는) 다음 프레임 는 모션 정보를 고려함 으로써 그의 이전 프레임 로부터 예측될 수 있다. 본 출원에서 정의되는 바와 같이, \"모션 보상\"이라는 표현은 발생할 수 있는 임의의 후처리뿐만 아니라 모션 벡터를 계산하고 인코딩하는 전체 프로세스를 지칭한다. 모션 보상은 도 2b 및 도 2c에서 참조 번호 240에 의해 MC로 표시되며, 모션 보상된 프레임 를 생성하게 된다. 단순화를 위해, 모션 보상이 완료된 것으로 가정하고, 결과는 이미지 및 모션 벡터 필드 의 추 정치가 된다.그러나, 주목할 것은 도 2b 및 도 2c를 참조하여 아래에 설명된 비디오 압축 기법은 단일 선행 참조 프레임 가 모션 추정에 사용될 필요는 없다는 것이다. 다양한 사용 사례에서, 하나 또는 다수의 프레임을 모션 보상에 사 용할 수 있다. 더욱이, 모션 보상에 사용되는 그러한 프레임 또는 그들 프레임은 비디오의 인과 영역(causal region)에 배치될 필요가 없다. 예로서, 양방향 예측은 특정 프레임이 미래 프레임뿐만 아니라 선행 프레임으로 부터 모션 추정을 유도할 수 있도록 수행될 수 있으며, 이에 의해 재생 순서와 인코딩 순서를 효과적으로 분리 할 수 있게 된다. 트레이닝된 이미지 압축 ML 모델을 활용하여 현재 추정치 을 수정하는 데 필요한 잔차 정보를 압축하기 위 한 두 가지 전략이 아래에 설명된다. 제1 전략은 \"잠재 공간 잔차를 이용한 지식 증류\"라고 지칭되고, 제2 전략 은 \"이미지 공간 잔차를 이용한 지식 증류\"라고 지칭된다. 잠재 공간 잔차를 이용한 지식 증류: 도 2b는 다른 구현예에 따라 원본 프레임 의 잠재 공간 표현(234a) 과, 모션 보상된 프레임"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "의 잠재 공간 표현(234b) 을 이용하는 예시적인 ML 모델 기반 비디오 코덱 아키텍처의 다 이어그램을 도시한 것이다. 도 2b에 도시된 바와 같이, ML 모델 기반 비디오 코덱 아키텍처는 ML 모델 기 반 비디오 압축 인코더 및 이미지 압축 ML 모델을 포함한다. ML 모델 기반 비디오 압축 인코더 에 의해 수행되는 잔차 매핑과 그 역 매핑은 각각 및 로 표시된다. 잔차 매핑 는 두 개의 잠재 표현 및 로부터 잔차 정보 을 추출한다. 이 정보 은 잔차로 지칭되는데, 그 이유는 를 완료하고 를 복구하기 위해 가능한 한 적은 정보를 인코딩하는 것이 목적이기 때문이다. 주목할 것은 도 2b에 도시된 ML 모델 기반 비디오 코덱 아키텍처의 특징이 도 1의 ML 모델 기반 코덱 소프트웨어 리소스 사이에 포함될 수 있다는 것이다. 다시 말해서, 일부 구현예에서, ML 모델 기반 코덱 소프트웨어 리소스는 ML 모 델 기반 비디오 압축 인코더 및 이미지 압축 ML 모델을 포함할 수 있다. 잔차 매핑 함수 및 그 역 가 단일 인스턴트에 동작함에 따라, 다음 표기법에서 시간을 생략할 수 있다. 다음 정의가 수립된다: . 주목할 것은 이 모션 보상을 통해 획득되므로 이는 인코딩 시 및 디코딩 시 모두에서 이용 가능하다는 것이다. 이 솔루션은 적대적 손실로 트레이닝된 이미지 압축 ML 모델 를 활용하도록 설계되었다. 이미지 압축 ML 모델 의 파라미터는 변경되지 않은 상태로 유지된다. 이 잔차 압축을 달성하기 위해, 잔차 매핑 (그의 역 를 포함함)의 파라미터 및 확률 모델 의 파라미터는 트레이닝될 필요가 있다. 이것은 다음의 레이트 왜곡 손실을 최적화함으로써 수행될 수 있다: 수학식 4"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "여기서: 는 레이트 항이고, 는 왜곡 항이다. 주목할 것은 타겟 프레임이 더 이상 실측 자료 가 되지는 않지만, 이제는 이미지 압축 ML 모델 의 출력이 된다 는 것이다. 이것은 지식 증류의 수행을 가능하게 하고, 적대적으로 트레이닝된 이미지 압축 모델의 세부 환각 능력을 유지한다. 잔차 매핑 자체는 \"GAN 기반 비디오 코덱에 대한 지식 증류\"라는 제목의 첨부 논문에 자세히 설명된 바와 같이, 여러 기법의 조합으로 구현될 수 있으며, 이러한 논문은 그 전체가 본 출원에 참고로 포함된 다. 이미지 공간 잔차를 이용한 지식 증류: 이용 가능한 트레이닝된 이미지 압축 ML 모델 를 활용하는 다른 접근 방식은 도 2c의 예시적인 ML 모델 기반 비디오 코덱 아키텍처에 의해 표현되는 이미지 공간 잔차로 작업하는 것이다. 잠재 잔차의 경우와 유사하 게, 모션 보상이 완료된 것으로 가정하고, 도 2c에서 참조 번호 219로 식별되는 현재 프레임 와 모션 보상된 프레임 간의 차이만 인코딩하면 된다. 도 2c에 도시된 바와 같이, ML 모델 기반 비디오 코덱 아키텍처 는 ML 모델 기반 비디오 압축 인코더 및 이미지 압축 ML 모델을 포함한다. 주목할 것은 도 2c 도시된 ML 모델 기반 비디오 코덱 아키텍처의 특징이 도 1의 ML 모델 기반 코덱 소프트웨어 리소스 사이에 포함될 수 있다는 것이다. 다시 말해서, 일부 구현예에서, ML 모델 기반 코덱 소프트웨어 리소스는 ML 모델 기반 비디오 압축 인코더 및 이미지 압축 ML 모델을 포함할 수 있다. ML 모델 기반 비디오 코덱 아키텍처에 의해 묘사된 접근 방식의 차이점은 도 2c에 도시된 구현예에서 압축 되지 않은 프레임에 대응하고 프레임 으로 식별되는 이미지 공간 잔차가 인코딩된다는 것이다: 수학식 5"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "신경 인코더 함수 및 신경 디코더 함수는 각각 및 로 표시된다. 이들은 도 2a를 참조하여 위에서 설명한 대로 신경망 계층으로 구현될 수 있다. 함수 는 이미지 잔차를 로 표시된 그 잠재 공간 표현에 매 핑할 것이지만, 디코더 함수 는 이미지를 바로 디코딩할 것이다. 트레이닝된 이미지 압축 ML 모델 로부터의 특징을 활용하는 개시된 접근 방식에 따라, 병합 함수 이 설계되었다. 이 함수의 목적은 이미지 압축 ML 모델 로부터의 특징을 통합하는 것이다. 가장 간단한 형태로, 이 병합 함수는 어떤 특징을 사용할 지를 나타내 기 위해 이진 값 0, 1을 취하는 마스킹 메커니즘으로 구현될 수 있으며, 이러한 선택은 가능한 조합을 이용한 철저한 실험 후에 수행될 수 있다. 보다 정교한 설계에서, 마스크는 트레이닝 중에 학습될 수 있으며, 선택적으 로 이미지 자체에 대해 조건이 부여될 수 있다. 트레이닝 손실은 다음과 같이 표현될 수 있다: 수학식 6"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "여기서, 는 레이트 항이고, 는 왜곡 항이고, 그리고 는 적대적 손실이 된다. 주목할 것은 수학식 6으로 표현되는 트레이닝 손실이 에 대한 적대적 손실을 포함한다는 것이다. 이 는 트레이닝된 이미지 압축 ML 모델 를 이용하여 단일 프레임으로 압축된 이미지에 해당한다. 깜박임, 환각 세부 사항 간의 미스매치 등과 같은 시간적 불안정성은 위에서 설명한 두 개의 지식 증류 프로세 스의 모두에서 발생할 수 있다. 시간적으로 안정적인 결과를 유지하기 위해 시간 평활화 컴포넌트를 추가할 수 있다. 보다 공식적으로, 이전에 디코딩된 프레임 및 모션 벡터 가 주어지면, 프레임 을 처리하여 임 의의 시간적 아티팩트를 제거하는 것이 목적이다: 수학식 7"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "여기서, 위첨자 는 시간적으로 처리된 프레임을 나타낸다. 는 현재 프레임 을 매칭시키기 위해 모션 필드 를 사용하여 이전 프레임 를 와핑(warp)하는 이미지 와핑 함수이다. 주목할 것은 일부 구현예에서 는 이전에 디코딩된 단일 프레임보다는 다수의 프레임을 나타낼 수 있다는 것이다. 다수의 이전에 디코딩된 프 레임이 활용되는 구현예에서, 각각의 모션 벡터 는 변위와 참조 프레임 지수를 포함하는 데이터 포인트의 쌍 으로 취급될 수 있다.보정 함수 는 NN으로 구현될 수 있으며, 다음의 손실을 사용하여 트레이닝될 수 있다: 수학식 8"}
{"patent_id": "10-2022-0041682", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "여기서, 는 시간적 항이고, 는 선택적인 적대적 손실 항이며, 는 시간 적 안정성을 강화하기 위해 두 개의 연속적인 프레임 모양 간의 편차에 페널티를 부여하는 왜곡 오차이다(이는, 예를 들어, 손실일 수 있다). 은 모션이 올바르게 추정되는 영역으로 페널티를 제한하기 위해 모션 벡터 가 유효한 위치를 나타내는 이진 마스크로 구현될 수 있는 병합 함수이다. 마지막으로, 옵션으로서, 최종 출력 을 과도하게 평활화하는 것을 피하기 위해 적대적 손실을 추가할 수 있다. 도 2c의 예시적인 ML 모델 기반 비디오 코덱 아키텍처에 대응하는 이미지 공간 잔차 접근 방식을 이용한 지식 증류는 도 3을 참조하여 추가로 설명될 것이다. 도 3은 일 구현예에 따른 ML 모델 기반 비디오 압축을 수 행하기 위한 예시적인 방법을 나타내는 플로우차트를 도시한 것이다. 도 3에서 개요를 나타내는 방법과 관 련하여, 주목할 것은 본 출원에서 본 발명의 특징에 대한 논의를 모호하게 하지 않기 위해 특정 세부 사항 및 특징이 플로우차트에서 제외되었다는 것이다. 이제 도 1 및 도 2c와 함께 도 3을 참조하면, 플로우차트는 압축되지 않은 비디오 콘텐츠(예컨대, 압축되 지 않은 프레임) 및 압축되지 않은 비디오 콘텐츠에 대응하는 모션 보상된 비디오 콘텐츠(예컨대, 모션 보 상된 프레임)를 수신하는 단계(동작 351)를 포함한다. 도 2c에 도시된 바와 같이, 압축되지 않은 프레임 및 모션 보상된 프레임은 동작 351에서 ML 모델 기반 비디오 압축 인코더에 의해 수신될 수 있 다. 더욱이, 그리고 도 1을 추가로 참조하여 위에서 언급한 바와 같이, ML 모델 기반 비디오 압축 인코더 는 ML 모델 기반 코덱 소프트웨어 리소스 사이에 포함되고 시스템 메모리에 저장될 수 있다. 따라서, 압축되지 않은 프레임 및 모션 보상된 프레임은 동작 351에서 시스템의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코더에 의해 수신될 수 있다. 플로우차트는 압축되지 않은 비디오 콘텐츠에 대응하는 이미지 공간 잔차를 식별하기 위해 압축되지 않은 비디오 콘텐츠를 모션 보상된 비디오 콘텐츠와 비교하는 단계(동작 352)를 더 포함한다. 계속해서 도 1 및 도 2c를 함께 참조하면, 압축되지 않은 프레임 및 모션 보상된 프레임은 동작 352에서 시스템의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코더에 의해 비교되어 이미지 공간 잔차 가 식별될 수 있다. 플로우차트는 이미지 공간 잔차를 이미지 공간 잔차의 잠재 공간 표현으로 변환하는 단계 (동작 353)를 더 포함한다. 이미지 공간 잔차는 동작 353에서, 시스템의 처리 하드웨어에 의해 실행되고 신경 인코더 함수 를 사용하는 ML 모델 기반 비디오 압축 인코더에 의해, 이미지 공간 잔차 의 잠재 공간 표현으로 변환될 수 있다. 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용하여, 모션 보상된 비디오 콘텐츠(예컨대, 모션 보상된 프레임)를 수신하는 단계(동작 354)를 더 포함한다. 위에서 언급된 바와 같이, 트레이닝된 이미지 압축 ML 모델은, 예를 들어, 트레이닝된 GAN과 같은 트레이닝된 NN을 포함할 수 있다. 더욱이, 그리고 위 에서 언급한 바와 같이, 일부 구현예에서, 트레이닝된 이미지 압축 ML 모델은 적대적 손실을 포함하는 목 적 함수를 사용하여 트레이닝된 NN을 포함할 수 있다. 동작 354는 시스템의 처리 하드웨어에 의해 실 행되는 ML 모델 기반 비디오 압축 인코더에 의해 수행될 수 있다. 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용하여, 모션 보상된 프레임에 의해 표현되 는 모션 보상된 비디오 콘텐츠를 모션 보상된 비디오 콘텐츠의 잠재 공간 표현으로 변환하는 단계(동작 355)를 더 포함한다. 도 2c에 도시된 바와 같이, 모션 보상된 프레임은 트레이닝된 이미지 압축 ML 모델 , 즉 를 사용하여, ML 모델 기반 비디오 압축 인코더에 의해 그 잠재 공간 표현으로 변환될 수 있다. ML 모델 기반 비디오 압축 인코더는 시스템의 처리 하드웨어에 의해, 이미지 압축 ML 모 델을 사용하여 동작 355를 수행하도록 실행될 수 있다.주목할 것은 플로우차트가 동작 351, 352, 및 353에 이어지는 동작 354 및 355를 묘사하지만, 그 표현은 단지 예로서만 제공된다는 것이다. 일부 다른 구현예에서, 동작 354 및 355는 순차적으로 수행될 수 있지만, 동 작 351, 352, 및 353과 병렬로, 즉 실질적으로 동시에 수행될 수 있다. 또 다른 구현예에서, 동작 354, 또는 동 작 354 및 355는 동작 351, 352, 및 353 중 하나 이상에 선행할 수 있다. 플로우차트는 인코딩된 잠재 잔차를 생성하기 위해 이미지 공간 잔차의 잠재 공간 표현을 인코 딩하는 단계(동작 356)를 더 포함한다. 이미지 공간 잔차의 잠재 공간 표현은 동작 356에서 시스템 의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코더에 의해 인코딩된 잠재 잔 차를 생성하도록 인코딩될 수 있다. 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용하여, 인코딩된 잠재 비디오 콘텐츠를 생성하기 위해 모션 보상된 프레임의 잠재 공간 표현을 인코딩하는 단계(동작 357)를 더 포함한다. 모션 보상 된 프레임의 잠재 공간 표현은 동작 357에서 시스템의 처리 하드웨어에 의해 실행되고 트 레이닝된 이미지 압축 ML 모델을 사용하는 ML 모델 기반 비디오 압축 인코더에 의해 인코딩된 잠재 비디오 콘텐츠를 생성하도록 인코딩될 수 있다. 주목할 것은 플로우차트가 동작 356에 이어지는 동작 357을 묘사하지만, 그 표현은 단지 예로서만 제공된 다는 것이다. 동작 357의 타이밍에 적용된 유일한 제약은 동작 355를 따른다는 것이고 동작 356의 타이밍에 적 용된 유일한 제약은 동작 353을 따른다는 것이다. 따라서, 다양한 구현예에서, 동작 357은 동작 356에 후속될 수 있거나, 동작 356에 선행할 수 있거나, 동작 356과 병렬로, 즉, 실질적으로 동시에 수행될 수 있다. 즉, 일 부 구현예에서, 동작 356에서 생성된 인코딩된 잠재 잔차 및 동작 357에서 생성된 인코딩된 잠재 비디오 콘텐츠 가 병렬로 생성될 수 있다. 도 1 및 도 3을 함께 참조하면, 플로우차트는 동작 356에서 생성된 인코딩된 잠재 잔차 및 동작 357에서 생성된 인코딩된 잠재 비디오 콘텐츠를 사용하여, 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 생성하는 단계(동작 358)를 더 포함한다. 일부 구현예에서, 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠는 동작 356에서 생성된 인코딩된 잠재 잔차와 동작 357에서 생성된 인코딩 된 잠재 비디오 콘텐츠 간의 차이에 기반하여 생성될 수 있다. 도 2c를 추가로 참조하면, 압축된 비디오 콘텐츠 는 동작 358에서 시스템의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코더 에 의해 생성될 수 있다. 도 2b의 예시적인 ML 모델 기반 비디오 코덱 아키텍처에 대응하는 잠재 공간 잔차 접근 방식을 이용한 지 식 증류는 도 4를 참조하여 추가로 설명될 것이다. 도 4는 다른 구현예에 따른 ML 모델 기반 비디오 압축을 수 행하기 위한 예시적인 방법을 나타내는 플로우차트를 도시한 것이다. 도 4에서 개요를 나타내는 방법과 관 련하여, 주목할 것은 본 출원에서 본 발명의 특징에 대한 논의를 모호하게 하지 않기 위해 특정 세부 사항 및 특징이 플로우차트에서 제외되었다는 것이다. 이제 도 1 및 도 2b와 함께 도 4를 참조하면, 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용 하여, 압축되지 않은 비디오 콘텐츠(예컨대, 압축되지 않은 프레임) 및 압축되지 않은 비디오 콘텐츠에 대 응하는 모션 보상된 비디오 콘텐츠(예컨대, 모션 보상된 프레임)를 수신하는 단계(동작 461)를 포함한다. 도 2b에 도시된 바와 같이, 압축되지 않은 프레임 및 모션 보상된 프레임은 동작 461에서 트레이닝된 이미지 압축 ML 모델을 사용하여, ML 모델 기반 비디오 압축 인코더에 의해 수신될 수 있다. 위에서 언급된 바와 같이, 트레이닝된 이미지 압축 ML 모델은, 예를 들어, 트레이닝된 GAN과 같은 트레이닝된 NN 을 포함할 수 있다. 더욱이, 그리고 위에서 언급한 바와 같이, 일부 구현예에서, 트레이닝된 이미지 압축 ML 모 델은 적대적 손실을 포함하는 목적 함수를 사용하여 트레이닝된 NN을 포함할 수 있다. 더욱이, 그리고 도 1을 추가로 참조하여 위에서 언급한 바와 같이, ML 모델 기반 비디오 압축 인코더는 ML 모델 기반 코덱 소 프트웨어 리소스 사이에 포함되고 시스템 메모리에 저장될 수 있다. 따라서, 압축되지 않은 프레임 및 모션 보상된 프레임은 동작 461에서 시스템의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코더에 의해 수신될 수 있다. 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용하여, 압축되지 않은 프레임에 의해 표현 된 압축되지 않은 비디오 콘텐츠를 압축되지 않은 비디오 콘텐츠의 제1 잠재 공간 표현(234a)으로 변환하는 단 계(동작 462)를 더 포함한다. 도 2b에 도시된 바와 같이, 압축되지 않은 프레임은 트레이닝된 이미지 압축 ML 모델, 즉 를 사용하여, ML 모델 기반 비디오 압축 인코더에 의해 그 잠재 공간 표현(234a)으로변환될 수 있다. ML 모델 기반 비디오 압축 인코더는 시스템의 처리 하드웨어에 의해, 이미지 압축 ML 모델을 사용하여 동작 462를 수행하도록 실행될 수 있다. 플로우차트는 트레이닝된 이미지 압축 ML 모델을 사용하여, 모션 보상된 프레임에 의해 표현되 는 압축되지 않은 비디오 콘텐츠를 압축되지 않은 비디오 콘텐츠의 제2 잠재 공간 표현(234b)으로 변환하는 단 계(동작 463)를 더 포함한다. 도 2b에 도시된 바와 같이, 모션 보상된 프레임은 트레이닝된 이미지 압축 ML 모델, 즉 을 사용하여, ML 모델 기반 비디오 압축 인코더에 의해 잠재 공간 표현(234b)으로 변환 될 수 있다. ML 모델 기반 비디오 압축 인코더는 시스템의 처리 하드웨어에 의해, 이미지 압축 ML 모델을 사용하여 동작 463을 수행하도록 실행될 수 있다. 주목할 것은 플로우차트가 동작 462에 이어지는 동작 463을 묘사하지만, 그 표현은 단지 예로서만 제공된 다는 것이다. 다양한 구현예에서, 동작 463은 동작 462에 후속될 수 있거나, 동작 462에 선행할 수 있거나, 동 작 462와 병렬로, 즉, 실질적으로 동시에 수행될 수 있다. 다시 말해서, 일부 구현예에서, 압축되지 않은 비디 오 콘텐츠를 제1 잠재 공간 표현(234a)으로 변환하는 것, 및 모션 보상된 비디오 콘텐츠를 제2 잠재 공간 표현 (234b)으로 변환하는 것은 병렬로 수행될 수 있다. 플로우차트는 제1 잠재 공간 표현(234a) 및 제2 잠재 공간 표현(234b)에 기반하여 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 전송하기 위한 비트스트림을 생성하는 단계(동작 464)를 더 포함한다. 일부 구현예에서, 동작 464는 제1 잠재 공간 표현(234a) 및 제2 잠재 공간 표현(234b)을 사용하여 잠재 공간 잔차를 결정하는 단계를 포함할 수 있다. 예를 들어, 그러한 잠재 공간 잔차는 제1 잠재 공간 표현 (234a)과 제2 잠재 공간 표현(234b) 사이의 차이에 기반할 수 있다. 잠재 공간 잔차가 동작 464의 일부로서 결 정되는 구현예에서, 압축되지 않은 비디오 콘텐츠에 대응하는 압축된 비디오 콘텐츠를 전송하기 위한 비트스트림은 잠재 공간 잔차를 사용하여 생성될 수 있다. 동작 464에서 압축된 비디오 콘텐츠를 전송하기 위한 비트스트림의 생성은 시스템의 처리 하드웨어에 의해 실행되는 ML 모델 기반 비디오 압축 인코 더에 의해 수행될 수 있다. 도 3 및 도 4에 나타낸 동작과 관련하여, 주목할 것은 다양한 구현예에서 플로우차트의 동작 351, 352, 353, 354, 355, 356, 357, 및 358, 또는 플로우차트의 동작 461, 462, 463, 및 464는 인간 참여가 생략 될 수 있는 자동화된 프로세스로서 수행될 수 있다. 따라서, 본 출원은 낮은 비트 레이트 비디오 압축을 목표로 할 때 특히 중요한 트레이닝 GAN과 유사한 환각 능 력을 갖는 비디오 압축 코덱의 사용을 가능하게 하는 지식 증류 및 잠재 공간 잔차에 기반한 ML 모델 기반 비디 오 압축 솔루션을 포함하는 프레임워크를 개시한다. 본원의 ML 모델 기반 비디오 압축 솔루션은 높은 비트 레이 트를 요구하지 않고도 시각적으로 만족스러운 이미지를 제공함으로써 첨단 기술을 향상시킨다. ML 모델 기반 비 디오 코덱을 사용할 때 합성된 일부 이미지 세부 정보는 실측 자료와는 약간 다르지만 사실적으로 보일 수 있다. 그럼에도 불구하고, 본원의 ML 모델 기반 이미지 압축 솔루션은 유리하게도 동일한 전송량의 데이터를 사 용해서는 기존 접근 방식에서는 불가능했을 이미지 품질을 제공할 수 있다. 위의 설명으로부터 다양한 기법이 이러한 개념의 범위를 벗어나지 않고 본 출원에 설명된 개념을 구현하기 위해 사용될 수 있다는 것이 명백하다. 또한, 개념이 특정 구현예를 참조하여 설명되었지만, 본 기술 분야의 기술자 는 이러한 개념의 범위를 벗어나지 않고 형태 및 세부 사항이 변경될 수 있음을 인식할 것이다. 따라서, 설명된 구현예는 모든 면에서 예시적인 것으로 간주되어야 하며 제한적인 것은 아니다. 또한, 본 출원은 본원에 설명된 특정 구현예로 제한되지 않고, 본 개시 내용의 범위를 벗어나지 않고 많은 재배열, 수정 및 대체가 가능하다는 것을 이해해야 한다.도면 도면1 도면2a 도면2b 도면2c 도면3 도면4"}
{"patent_id": "10-2022-0041682", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 구현예에 따른 머신 학습(ML) 모델 기반 비디오 압축을 수행하기 위한 예시적인 시스템의 다이어그램 을 도시한 것이다. 도 2a는 일 구현예에 따른 예시적인 ML 모델 기반 비디오 코덱 아키텍처의 다이어그램을 도시한 것이다. 도 2b는 다른 구현예에 따른 예시적인 ML 모델 기반 비디오 코덱 아키텍처의 다이어그램을 도시한 것이다. 도 2c는 또 다른 구현예에 따른 예시적인 ML 모델 기반 비디오 코덱 아키텍처의 다이어그램을 도시한 것이다. 도 3은 일 구현예에 따른 ML 모델 기반 비디오 압축을 수행하기 위한 예시적인 방법의 개요를 나타내는 플로우 차트이다. 도 4는 다른 구현예에 따른 ML 모델 기반 비디오 압축을 수행하기 위한 예시적인 방법의 개요를 나타내는 플로 우차트이다."}
