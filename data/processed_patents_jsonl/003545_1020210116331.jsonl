{"patent_id": "10-2021-0116331", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0033403", "출원번호": "10-2021-0116331", "발명의 명칭": "데이터 처리 시스템 및 그 동작 방법과, 이를 이용한 컴퓨팅 시스템", "출원인": "에스케이하이닉스 주식회사", "발명자": "진영재"}}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "호스트 장치로부터 신경망 연산 처리 요청을 수신하는 컨트롤러; 및복수의 연산 처리부를 구비하고, 상기 컨트롤러로부터 입력 특징 맵 및 가중치 필터를 수신하며, 상기 입력 특징 맵으로부터 생성된 복수의 분할맵과 상기 가중치 필터에 기초하여 상기 복수의 연산 처리부에서 상기 신경망연산을 수행하되, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는상기 연산 처리부 간에 이동되지 않는 메모리 내 연산장치;를 포함하는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 재사용원소는 상기 연산 처리부 중 어느 하나로 한 번만 입력되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 메모리 내 연산장치는, 상기 복수의 분할맵 각각에 상기 가중치 필터를 적용하여 복수 사이클의 신경망 연산을 수행하고, 상기 재사용원소는 적어도 두 사이클의 신경망 연산에 이용되는 원소인 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 메모리 내 연산 장치는, 상기 가중치 필터의 크기 및 상기 가중치 필터의 이동 간격인 스트라이드에 기초하여 상기 입력 특징 맵을 구분하여 상기 복수의 분할맵을 생성하는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 메모리 내 연산장치는, 상기 입력 특징 맵 및 상기 가중치 필터가 저장되는 글로벌 버퍼;상기 복수의 연산 처리부를 포함하고, 상기 복수의 분할맵과 상기 가중치 필터를 수신하여 신경망 연산을 수행하는 연산 메모리; 및상기 연산 처리부 각각에 상기 가중치 필터의 모든 원소를 저장하고, 상기 연산 처리부 각각에 상기 분할맵에포함된 원소를 분산 제공하며, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산에 최초로 사용되는 신규원소는 상기 글로벌 버퍼로부터 상기 연산 처리부로 전송하고, 상기 재사용원소는 상기 연산 처리부 내에 유지되도록 하는 스케쥴러;를 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 복수의 연산 처리부 각각은 복수의 서브 어레이를 포함하고,상기 메모리 내 연산장치는, 상기 복수의 연산 처리부 중 상기 가중치 필터의 원소 수에 대응하는 수의 연산 처리부를 선택하여,선택된 연산 처리부 각각에 포함된 복수의 서브 어레이에 상기 가중치 필터를 구성하는 원소를 분산 저장하고,공개특허 10-2023-0033403-3-선택된 연산 처리부 각각에 상기 분할맵을 구성하는 원소를 분산 입력하는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 서브 어레이는 멤리스터 소자를 포함하는 메모리 셀 어레이로 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 메모리 내 연산장치는, 컨볼루션 윈도우를 상기 입력 특징 맵에 대해 일정한 간격으로 행방향 또는 열방향으로 이동시켜 생성한 상기 복수의 분할맵 각각에 대해 상기 신경망 연산을 수행하고,상기 재사용원소는 상기 행방향 및 열방향 중 적어도 어느 하나의 방향으로 재사용되는 원소인 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "입력 특징 맵 및 가중치 필터가 저장되는 글로벌 버퍼;복수의 연산 처리부를 포함하고, 상기 입력 특징 맵으로부터 생성된 복수의 분할맵과 상기 가중치 필터를 수신하여 복수 사이클의 신경망 연산을 수행하는 연산 메모리; 및상기 가중치 필터의 원소 수에 대응하는 수의 연산 처리부를 선택하여, 상기 선택된 연산 처리부 각각에 상기가중치 필터의 모든 원소를 저장하고, 상기 선택된 연산 처리부 각각에 상기 분할맵에 포함된 원소를 분산 저장하며, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 단일의 연산처리부 내에서 연산되도록 하는 스케쥴러;를 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 스케쥴러는, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산에 최초로 사용되는 신규원소는 상기 글로벌 버퍼로부터 상기 연산 처리부로 전송하고, 상기 재사용원소는 상기 연산 처리부 간에 이동되지 않도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9 항에 있어서,상기 복수의 연산 처리부 각각은 복수의 서브 어레이를 포함하고,상기 스케쥴러는, 상기 복수의 연산 처리부 중 상기 가중치 필터의 원소 수에 대응하는 수의 연산 처리부를 선택하여,선택된 연산 처리부 각각에 포함된 복수의 서브 어레이에 상기 가중치 필터를 구성하는 원소를 분산 저장하고,선택된 연산 처리부 각각에 상기 분할맵을 구성하는 원소를 분산 입력하는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 서브 어레이는 멤리스터 소자를 포함하는 메모리 셀 어레이로 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 9 항에 있어서,상기 스케쥴러는, 컨볼루션 윈도우를 상기 입력 특징 맵에 대해 일정한 간격으로 행방향 또는 열방향으로 이동시켜 생성한 상기 복수의 분할맵 각각을 상기 연산 메모리로 제공하고,공개특허 10-2023-0033403-4-상기 재사용원소는 상기 행방향 및 열방향 중 적어도 어느 하나의 방향으로 재사용되는 원소인 데이터 처리 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "컨트롤러가 호스트 장치로부터 신경망 연산 처리 요청을 수신하는 단계;복수의 연산 처리부를 구비하는 메모리 내 연산장치가 상기 컨트롤러로부터 입력 특징 맵 및 가중치 필터를 수신하는 단계;상기 메모리 내 연산장치가 상기 입력 특징 맵으로부터 복수의 분할맵을 생성하는 단계; 및상기 메모리 내 연산장치가 상기 복수의 분할맵 및 상기 가중치 필터를 상기 복수의 연산 처리부 중 적어도 일부에 제공하여 상기 신경망 연산을 수행하는 동안, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 상기 연산 처리부 간에 이동되지 않도록 제어하는 단계;를 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 재사용원소는 상기 연산 처리부 중 어느 하나로 한 번만 입력되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 14 항에 있어서,상기 메모리 내 연산장치는, 상기 복수의 분할맵 각각에 상기 가중치 필터를 적용하여 복수 사이클의 신경망 연산을 수행하고, 상기 재사용원소는 적어도 두 사이클의 신경망 연산에 이용되는 원소인 데이터 처리 시스템의동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 14 항에 있어서,상기 복수의 분할맵을 생성하는 단계는, 상기 가중치 필터의 크기 및 상기 가중치 필터의 이동 간격인 스트라이드에 기초하여 상기 입력 특징 맵을 구분하여 상기 복수의 분할맵을 생성하는 단계인 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 14 항에 있어서,상기 제어하는 단계는, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산에 최초로 사용되는 신규원소는 상기연산 처리부 외부의 버퍼로부터 상기 연산 처리부로 전송하고, 상기 재사용원소는 상기 연산 처리부 내에 유지되도록 하는 단계인 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 14 항에 있어서,상기 복수의 연산 처리부 각각은 복수의 서브 어레이를 포함하고,상기 제어하는 단계는, 상기 복수의 연산 처리부 중 상기 가중치 필터의 원소 수에 대응하는 수의 연산 처리부를 선택하는 단계;상기 선택된 연산 처리부 각각에 포함된 복수의 서브 어레이에 상기 가중치 필터를 구성하는 원소를 분산 저장하는 단계; 및상기 선택된 연산 처리부 각각에 상기 분할맵을 구성하는 원소를 분산 입력하는 단계;를 더 포함하는 데이터 처리 시스템의 동작 방법.공개특허 10-2023-0033403-5-청구항 20 제 14 항에 있어서,상기 제어하는 단계는 컨볼루션 윈도우를 상기 입력 특징 맵에 대해 일정한 간격으로 행방향 또는 열방향으로이동시켜 생성한 상기 복수의 분할맵 각각에 대해 상기 신경망 연산을 수행하는 단계를 포함하고,상기 재사용원소는 상기 행방향 및 열방향 중 적어도 어느 하나의 방향으로 재사용되는 원소인 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "호스트 장치; 및상기 호스트 장치의 신경망 연산 처리 요청에 응답하여 입력 특징 맵으로부터 복수의 분할맵을 생성하고, 가중치 필터와 상기 복수의 분할맵에 기초하여 복수의 연산 처리부에서 상기 신경망 연산을 수행하되, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 상기 연산 처리부 간에 이동되지 않는 데이터 처리 시스템;을 포함하는 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "제 21 항에 있어서,상기 재사용원소는 상기 연산 처리부 중 어느 하나로 한 번만 입력되는 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "제 21 항에 있어서,상기 데이터 처리 시스템은 상기 신경망 연산에 최초로 사용되는 신규원소는 상기 연산 처리부 외부의 버퍼로부터 상기 연산 처리부로 전송하고, 상기 재사용원소는 상기 연산 처리부 내에 유지되도록 하는 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "제 21 항에 있어서,상기 복수의 연산 처리부 각각은 복수의 서브 어레이를 포함하고,상기 데이터 처리 시스템은, 상기 복수의 연산 처리부 중 상기 가중치 필터의 원소 수에 대응하는 수의 연산 처리부를 선택하여,선택된 연산 처리부 각각에 포함된 복수의 서브 어레이에 상기 가중치 필터를 구성하는 원소를 분산 저장하고,선택된 연산 처리부 각각에 상기 분할맵을 구성하는 원소를 분산 입력하는 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_25", "content": "제 24 항에 있어서,상기 서브 어레이는 멤리스터 소자를 포함하는 메모리 셀 어레이로 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_26", "content": "제 21 항에 있어서,상기 데이터 처리 시스템은, 컨볼루션 윈도우를 상기 입력 특징 맵에 대해 일정한 간격으로 행방향 또는 열방향으로 이동시켜 생성한 상기 복수의 분할맵 각각에 대해 상기 신경망 연산을 수행하고,상기 재사용원소는 상기 행방향 및 열방향 중 적어도 어느 하나의 방향으로 재사용되는 원소인 컴퓨팅 시스템."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 의한 데이터 처리 시스템은 호스트 장치로부터 신경망 연산 처리 요청을 수신하는 컨트롤러 및, 복 수의 연산 처리부를 구비하고, 컨트롤러로부터 입력 특징 맵 및 가중치 필터를 수신하며, 입력 특징 맵으로부터 생성된 복수의 분할맵과 가중치 필터에 기초하여 복수의 연산 처리부에서 신경망 연산을 수행하되, 분할맵을 구 성하는 원소 중 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 연산 처리부 간에 이동되지 않는 메모리 내 연산장치를 포함할 수 있다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 기술은 데이터 처리 기술에 관한 것으로, 보다 구체적으로는 신경망 연산을 위한 데이터 처리 시스템 및 그 동작 방법과, 이를 이용한 컴퓨팅 시스템 에 관한 것이다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 어플리케이션 및 빅데이터 분석에 대한 관심과 중요성이 높아지면서, 대용량의 데이터를 효율적으로 처리할 수 있는 컴퓨팅 시스템에 대한 요구가 증가하고 있다. 인공 신경망은 인공지능을 구현하기 위한 하나의 방법이다. 인공 신경망의 목적은 학습을 통해 기계의 문제 해 결 능력, 즉 추론력을 키우는 데 있으나, 출력의 정확도가 높아질수록 연산량, 메모리 접근 횟수 및 데이터 이 동량이 증가하게 된다. 이는 속도 저하, 전력 소비 등을 유발하여 시스템 성능을 저하시키는 요인이 될 수 있다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 기술의 실시예는 연산에 사용되는 데이터의 이동량을 최소화할 수 있는 데이터 처리 시스템 및 그 동작 방법 과, 이를 이용한 컴퓨팅 시스템을 제공할 수 있다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 기술의 일 실시예에 의한 데이터 처리 시스템은 호스트 장치로부터 신경망 연산 처리 요청을 수신하는 컨트 롤러; 및 복수의 연산 처리부를 구비하고, 상기 컨트롤러로부터 입력 특징 맵 및 가중치 필터를 수신하며, 상기 입력 특징 맵으로부터 생성된 복수의 분할맵과 상기 가중치 필터에 기초하여 상기 복수의 연산 처리부에서 상기 신경망 연산을 수행하되, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용 원소는 상기 연산 처리부 간에 이동되지 않는 메모리 내 연산장치;를 포함할 수 있다. 본 기술의 일 실시예에 의한 데이터 처리 시스템은 입력 특징 맵 및 가중치 필터가 저장되는 글로벌 버퍼; 복수 의 연산 처리부를 포함하고, 상기 입력 특징 맵으로부터 생성된 복수의 분할맵과 상기 가중치 필터를 수신하여 복수 사이클의 신경망 연산을 수행하는 연산 메모리; 및 상기 가중치 필터의 원소 수에 대응하는 수의 연산 처 리부를 선택하여, 상기 선택된 연산 처리부 각각에 상기 가중치 필터의 모든 원소를 저장하고, 상기 선택된 연 산 처리부 각각에 상기 분할맵에 포함된 원소를 분산 저장하며, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 단일의 연산 처리부 내에서 연산되도록 하는 스케쥴러;를 포함하 도록 구성될 수 있다. 본 기술의 일 실시예에 의한 데이터 처리 시스템의 동작 방법은 컨트롤러가 호스트 장치로부터 신경망 연산 처 리 요청을 수신하는 단계; 복수의 연산 처리부를 구비하는 메모리 내 연산장치가 상기 컨트롤러로부터 입력 특 징 맵 가중치 필터를 수신하는 단계; 상기 메모리 내 연산장치가 상기 입력 특징 맵으로부터 복수의 분할맵을 생성하는 단계; 및 상기 메모리 내 연산장치가 상기 복수의 분할맵 및 상기 가중치 필터를 상기 복수의 연산 처 리부 중 적어도 일부에 제공하여 상기 신경망 연산을 수행하는 동안, 상기 분할맵을 구성하는 원소 중 상기 신 경망 연산 동안 적어도 2회 연산되는 재사용원소는 상기 연산 처리부 간에 이동되지 않도록 제어하는 단계;를 포함할 수 있다. 본 기술의 일 실시예에 의한 컴퓨팅 시스템은 호스트 장치; 및 상기 호스트 장치의 신경망 연산 처리 요청에 응 답하여 입력 특징 맵으로부터 복수의 분할맵을 생성하고, 가중치 필터와 상기 복수의 분할맵에 기초하여 복수의 연산 처리부에서 상기 신경망 연산을 수행하되, 상기 분할맵을 구성하는 원소 중 상기 신경망 연산 동안 적어도 2회 연산되는 재사용원소는 상기 연산 처리부 간에 이동되지 않는 데이터 처리 시스템;을 포함할 수 있다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 기술에 의하면 연산 장치 간에 이동되는 데이터의 양을 최소화하여 데이터 전송 오버헤드로 인한 속도 저하 및 병목 현상을 방지할 수 있고, 데이터 이동에 따른 전력 소모를 최소화할 수 있다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 기술의 실시예를 보다 구체적으로 설명한다. 도 1은 일 실시예에 의한 컴퓨팅 시스템의 구성도이다. 컴퓨팅 시스템은 호스트 장치 및 호스트 장치가 요청한 어플리케이션의 연산을 처리하는 데이터 처리 시스템을 포함할 수 있다. 호스트 장치는 적어도 메인 프로세서, RAM, 메모리, 입출력(IO) 장치 등의 IP(Intellectual Property) 블록 및, 도시하지 않은 다른 범용적인 구성요소들을 더 포함할 수 있다. 실시예에 있어서, 호스트 장치의 구성요소들은 하나의 반도체 칩으로 집적되어 시스템 온 칩(SoC)으로 구 현될 수 있으나 이에 한정되지 않으며, 복수의 반도체 칩으로 구현될 수도 있다. 메인 프로세서는 컴퓨팅 시스템의 전반적인 동작을 제어할 수 있으며, 예를 들어 중앙처리장치 (Central Processing Unit; CPU)일 수 있다. 메인 프로세서는 하나 또는 복수의 코어를 포함할 수 있다. 메인 프로세서는 RAM 및 메모리에 저장된 프로그램들, 데이터, 및/또는 명령어(instructions)를 처리 또는 실행할 수 있다. 예를 들어, 메인 프로세서는 메모리에 저장된 프로그램들을 실행함으로 써 컴퓨팅 시스템의 기능들을 제어할 수 있다. RAM은 프로그램들, 데이터, 또는 명령들을 일시적으로 저장할 수 있다. 메모리에 저장된 프로그램들 및/또는 데이터는 메인 프로세서의 제어 또는 부팅 코드에 따라 RAM에 일 시적으로 로딩될 수 있다. RAM은 DRAM(Dynamic RAM) 또는 SRAM(Static RAM) 등의 메모리를 이용하여 구현될 수 있다. 메모리는 데이터를 저장하기 위한 저장 장소로서, 예를 들어, OS(Operating System), 각종 프로그램들 및 각종 데이터를 저장할 수 있다. 메모리는 휘발성 메모리(volatile memory) 또는 비휘발성 메모리(non- volatile memory) 중 적어도 하나를 포함할 수 있다. 비휘발성 메모리는 ROM(Read Only Memory), PROM(Programmable ROM), EPROM(Electrically Programmable ROM), EEPROM(Electrically Erasable and Programmable ROM), 플래시 메모리, PRAM(Phase-change RAM), MRAM(Magnetic RAM), RRAM(Resistive RAM), FRAM(Ferroelectric RAM) 등에서 선택될 수 있다. 휘발성 메모리는 DRAM(Dynamic RAM), SRAM(Static RAM), SDRAM(Synchronous DRAM) 등에서 선택될 수 있다. 또한 일 실시 예에 있어서, 메모리는 HDD(Hard Disk Drive), SSD(Solid-State Drive), CF(Compact Flash), SD(Secure Digital), Micro-SD(Micro Secure Digital), Mini-SD(Mini Secure Digital), xD(extreme digital) 또는 메모리 스틱(Memory Stick) 등과 같은 저장 장치로 구현될 수 있다. 입출력 장치는 사용자 입력 또는 외부로부터의 입력 데이터를 수신하고, 컴퓨팅 시스템의 데이터 처리 결과를 출력할 수 있다. 입출력 장치는 터치 스크린 패널, 키보드, 다양한 종류의 센서 등으로 구현될 수 있다. 실시예에 있어서, 입출력 장치는 컴퓨팅 시스템 주변의 정보를 수집할 수 있다. 예를 들어 입 출력 장치는 촬상 장치와 이미지 센서를 포함하여 데이터 처리 시스템 외부로부터 이미지 신호를 센 싱 또는 수신할 수 있고, 센싱 또는 수신된 이미지 신호를 이미지 데이터로 변환하여 메모리에 저장하거나, 데이터 처리 시스템에 제공할 수 있다.데이터 처리 시스템은 호스트 장치의 요청에 응답하여, 인공 신경망을 기초로 입력 데이터를 분석하 여 유효한 정보를 추출하고, 추출된 정보를 기초로 상황을 판단하거나 데이터 처리 시스템이 탑재되는 전 자 장치의 구성들을 제어할 수 있다. 예를 들어, 데이터 처리 시스템은 드론(drone), 첨단 운전자 보조 시스템(Advanced Drivers Assistance System; ADAS), 스마트 TV, 스마트 폰, 의료 장치, 모바일 장치, 영상 표 시 장치, 계측 장치, IoT(Internet of Things) 장치 등에 적용될 수 있으며, 이외에도 다양한 종류의 컴퓨팅 시 스템중 하나에 탑재될 수 있다. 일 실시예에서, 호스트 장치는 신경망 연산을 데이터 처리 시스템에 오프로드할 수 있고, 이를 위한 초기 파라미터, 예를 들어 입력 데이터 및 가중치를 데이터 처리 시스템으로 제공할 수 있다. 일 실시예에서, 데이터 처리 시스템은 모바일 장치에 탑재되는 어플리케이션 프로세서일 수 있다. 데이터 처리 시스템은 적어도 신경망 프로세서를 포함할 수 있다. 신경망 프로세서는 입력 데이터를 훈련 또는 학습하여 신경망 모델을 생성하거나, 신경망 모델에 따라 입 력 데이터를 연산하여 정보 신호(information signal)를 생성하거나, 신경망 모델을 재훈련(retrain)할 수 있다. 신경망은 CNN(Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restricted Boltzmann Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Classification Network 등 다양한 종류의 신경망 모델들을 포함할 수 있으나 이에 한정되지 않는다. 도 2는 일 실시예에 의한 인공 신경망의 데이터 처리 개념을 설명하기 위한 도면으로, CNN의 데이터 처리 개념 을 나타낸다. CNN은 컨볼루션 레이어(convolution layer), 풀링 레이어(pooling layer) 및 완전연결 레이어(fully connected layer)로 구성될 수 있다. 컨볼루션 레이어는 입력 특징 맵(Input Feature Map; IFM)에 가중치 필터(커널, W)를 적용하여 출력 특징 맵 (Output Feature Map; OFM)을 생성할 수 있다. 풀링 레이어는 컨볼루션 레이어를 통해 추출한 특징에 공간불변성(Spatial invariance) 더해주는 레이어로, 컨 볼루션 레이어의 출력을 축소하는 역할을 한다. 컨볼루션 레이어와 풀링 레이어는 신경망의 모수를 비약적으로 줄여 주어 전체 모델의 복잡도를 감소시킨다. 완전연결 레이어는 풀링 레이어로부터 출력된 특징 추출 결과에 따라 입력 데이터를 분류하여 출력 데이터를 생 성할 수 있다. 도 3은 컨볼루션 레이어의 연산 개념을 설명하기 위한 도면이다. 입력 특징 맵(IFM)과 가중치 필터(W)는 행렬 형태로 제공될 수 있다. 이하의 설명에서 특별한 언급이 없는 한 입력 특징 맵(IFM)과 가중치 필터(W)는 각각 설정된 차원(행*열) 또는 크기를 갖는 행렬인 것으로 이해하여야 한다. 입력 특징 맵(IFM)에 가중치 필터(W)를 적용하기 위하여, 입력 특징 맵(IFM)은 가중치 필터(W)의 차원에 대응하 는 차원을 갖는 복수의 분할맵(IDIV = IDIV11, IDIV12, IDIV13, IDIV14)으로 구분될 수 있다. 예를 들어 입력 특징 맵(IFM)의 1행-1열 원소를 기준원소(REF)로 하여 가중치 필터(W)의 차원에 대응하는 컨볼루션 윈도우를 일 정한 간격(스트라이드)으로 슬라이딩함에 따라 입력 특징 맵(IFM)이 복수의 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)으로 구분되고, 분할맵(IDIV11, IDIV12, IDIV13, IDIV14) 각각에 순차적으로 가중치 필터(W)를 적용하 여, 즉 가중치 필터(W)의 원소와 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)의 원소별 곱셈 및 합산(multiply and accumulation, MAC) 연산을 수행하여 출력 특징 맵(OFM)이 계산될 수 있다. 도 3에는 입력 특징 맵(IFM)의 크기가 I*I(I=5), 가중치 필터(W)의 크기가 K*K(K=3), 스트라이드가 2인 경우를 도시하였다. 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)의 개수는 (I-K)*(I-K)로 결정된다. 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)의 개수에 대응하는 사이클만큼, 즉 각각의 분할맵(IDIV11, IDIV12, IDIV13, IDIV14) 을 가중치 필터(W)와 컨볼루션 연산하여 O*O(O=I-K) 크기의 출력 특징 맵(OFM)이 얻어진다. 컨볼루션 연산은 기준원소(REF)를 포함하는 제 1 분할맵(IDIV11)에 가중치 필터(W)를 적용하는 첫번째 컨볼루션 사이클을 시작으로, 컨볼루션 윈도우를 행방향 또는 열방향으로 스트라이드만큼 슬라이딩하면서 수행된다. 예 를 들어, 컨볼루션 윈도우가 슬라이딩하여 행방향 마지막 원소(A15)를 포함하는 분할맵(IDIV12)에 대한 컨볼루 션 연산까지 수행되면 윈도우를 열방향으로 슬라이딩한다. 이후 윈도우를 다시 행방향으로 슬라이딩하여 컨볼 루션 연산하는 과정을 반복함에 의해 모든 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)과 가중치 필터(W) 간의 컨 볼루션 연산이 수행되고 출력 특징 맵(OFM)이 획득된다. 도 3을 참조하면, 입력 특징 맵(IFM)의 분할맵(IDIV11, IDIV12, IDIV13, IDIV14) 각각에 대해 가중치 필터(W) 를 적용할 때, 가중치 필터(W)는 매 컨볼루션 연산 사이클에서 반복 사용되고, 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)의 적어도 일부 원소가 반복 사용되는 것을 알 수 있다. 예를 들어, 제 1 컨볼루션 사이클에서 제 1 분할맵(IDIV11)과 가중치 필터(W)간의 컨볼루션 연산을 수행한 후, 제 2 컨볼루션 사이클에서 제 2 분할맵(IDIV12)과 가중치 필터(W)를 컨볼루션 연산할 때 제 1 컨볼루션 사이클 에서 사용한 원소(A13, A23, A33)가 재사용된다. 제 3 컨볼루션 사이클에서 제 3 분할맵(IDIV13)과 가중치 필터(W)를 컨볼루션 연산할 때, 제 1 컨볼루션 사이클 에서 사용한 원소(A31, A32, A33) 및 제 2 컨볼루션 사이클에서 사용한 원소(A33)가 재사용된다. 제 4 컨볼루션 사이클에서 제 4 분할맵(IDIV14)과 가중치 필터(W)를 컨볼루션 연산할 때, 제 2 컨볼루션 사이클 에서 사용한 원소(A33, A34, A35) 및 제 3 컨볼루션 사이클에서 사용한 원소(A33, A43, A53)가 재사용된다. 컨볼루션 연산에 사용되는 데이터 즉, 가중치 필터 및 입력 특징 맵(IFM)은 외부의 버퍼에서 컨볼루션 연산 처 리부(Processing Element; PE)로 제공될 수 있다. 외부의 버퍼 및 연산 처리부(PE)에 대한 구체적인 설명은 후 술할 것이다. 일 실시예에서, 분할맵(IDIV11, IDIV12, IDIV13, IDIV14)의 원소별 컨볼루션 연산은 독립적인 연산 처리부(P E)에서 각각 처리될 수 있다. 이 때, 이전 컨볼루션 사이클에서 사용한 원소 중 후속 컨볼루션 사이클에서 재 사용되는 원소를 버퍼로부터 연산 처리부(PE)에 재입력하거나, 연산 처리부(PE) 간에 이동시키는 경우 전력 소 모량 및 레이턴시 특성을 담보하기 어렵다. 이에, 본 기술에서는 컨볼루션 연산 사이클에서 재사용되는 데이터들의 이동량을 최소화하는 방안을 제안한다. 도 4는 일 실시예에 의한 신경망 프로세서의 구성도이다. 도 4를 참조하면, 신경망 프로세서는 신경망 연산에 특화된 프로세서 또는 가속기일 수 있고, 메모리 내 연산장치, 컨트롤러 및 RAM을 포함할 수 있다. 일 실시예에서 신경망 프로세서는 하나의 반도체 칩으로 집적된 시스템 온 칩(SoC)으로 구현될 수 있으나 이에 한정되지 않으며, 복수의 반도체 칩으로 구현될 수도 있다. 컨트롤러는 신경망 프로세서의 전반적인 동작을 제어할 수 있다. 컨트롤러는 메모리 내 연산장 치가 신경망 연산을 정상적으로 실행할 수 있도록 신경망 연산과 관련된 파라미터들을 설정하고 관리할 수 있다. 컨트롤러는 하드웨어, 소프트웨어(또는 펌웨어) 또는 하드웨어와 소프트웨어의 조합으로 구현될 수 있다. 컨트롤러는 적어도 하나의 프로세서, 예컨대 CPU(central processing unit), 마이크로 프로세서 등으로 구 현될 수 있으며, RAM에 저장된 다양한 기능들을 구성하는 인스트럭션을 실행할 수 있다. RAM은 DRAM, SRAM 등으로 구현될 수 있으며, 컨트롤러의 동작을 위한 각종 프로그램들 및 데이터와, 컨트롤러에서 생성되는 데이터를 저장할 수 있다. 메모리 내 연산장치는 컨트롤러의 제어에 따라 신경망 연산을 수행하도록 구성될 수 있다. 메모리 내 연산장치는 연산 메모리, 글로벌 버퍼, 누적부(ACCU, 315), 활성화부(ACTIV, 317), 풀링부 (POOL, 319) 및 스케쥴러를 포함할 수 있다. 연산 메모리는 복수의 연산 처리부(Processing Element; PE)를 포함할 수 있다. 각 연산 처리부(PE)는 글로벌 버퍼로부터 제공되는 입력 특징 맵(IFM) 및 가중치 필터(W)에 대한 컨볼루션 연산, 예컨대 요소별 곱셈 및 합산을 수행할 수 있다. 글로벌 버퍼는 입력 특징 맵(IFM)과 가중치 필터(W)를 저장한 후 연산 메모리로 제공할 수 있고, 연 산 메모리로부터 연산 결과를 제공받아 저장할 수 있다. 글로벌 버퍼는 DRAM, SRAM 등으로 구현될수 있다. 누적부는 각 연산 처리부(PE)의 처리 결과를 누적하여 가중합을 도출하도록 구성될 수 있다. 활성화부는 누적부의 가중합 결과를 ReLU 등과 같은 활성화 함수에 적용하여 비선형성을 추가하도록 구성될 수 있다. 풀링부는 활성화부의 출력값을 샘플링하여 차원을 축소하고 최적화한다. 연산 메모리, 누적부, 활성화부 및 풀링부를 통한 처리 과정은 신경망 모델을 학습 또는 재학습하는 과정, 또는 입력 데이터를 추론하는 과정일 수 있다. 신경망 모델을 학습 또는 추론하는 과정에서 글로벌 버퍼로부터 연산 메모리 간의 데이터 이동, 연산 메모리 내 연산 처리부(PE) 간의 데이터 이동은 전력 소모량을 증가시키고 데이터 처리 속도를 저하시킬 수 있다. 본 기술에 의한 스케쥴러는 연산 메모리의 데이터 처리 과정에서 데이터 이동을 최소화하기 위하여, 연산 처리부(PE)에서 사용할 가중치 필터(W) 및 입력 특징 맵(IFM)의 전달 방식을 스케쥴링하도록 구성된다. 도 5는 일 실시예에 의한 스케쥴러의 구성도이다. 도 5를 참조하면, 일 실시예에 의한 스케쥴러는 가중치 필터 제공부, 분할맵 구성부 및 이동경 로 제어부를 포함할 수 있다. 각각의 단위 컨볼루션 사이클에서 각 분할맵(IDIV)과 가중치 필터(W) 간의 컨볼루션 연산을 동시에 독립적으로 수행하기 위하여, 분할맵(IDIV) 원소의 수 또는 가중치 필터(W) 원소의 수만큼의 연산 처리부(PE)가 필요하다. 가중치 필터 제공부는 매 컨볼루션 사이클에 필요한 개수의 연산 처리부(PE)를 선택하고, 선택된 연산 처 리부(PE)마다 가중치 필터(W)의 모든 원소를 제공할 수 있다. 즉, 선택된 연산 처리부(PE)마다 가중치 필터 (W)의 모든 원소가 저장될 수 있다. 분할맵 구성부는 입력 특징 맵(IFM)을 가중치 필터(W)의 크기에 대응하는 복수의 분할맵(IDIV)으로 구분될 수 있다. 일 실시예에서, 분할맵 구성부는 입력 특징 맵(IFM)에 포함된 특정 원소, 예를 들어 1행-1열 원 소를 기준원소(REF)로 하여 가중치 필터(W)의 크기에 대응하는 컨볼루션 윈도우를 일정한 간격(스트라이드)으로 슬라이딩함에 따라 복수의 분할맵(IDIV)을 획득할 수 있다. 입력 특징 맵(IFM)이 복수의 분할맵(IDIV)으로 구 분됨에 따라, 분할맵(IDIV)의 수에 대응하는 사이클만큼 컨볼루션 연산이 수행된다. 이동경로 제어부는 연산 메모리에서 컨볼루션 연산 사이클이 순차적으로 진행되는 동안 연산 메모리 에 분할맵(IDIV)의 원소를 제공하도록 구성된다. 매 컨볼루션 연산 사이클에 사용되는 분할맵(IDIV)의 각 원소는 가중치 필터 제공부에서 선택한 복수의 연산 처리부(PE)에 중복되지 않게 분산 제공된다. 특히, 이동경로 제어부는 연산 메모리에서 처음 사용되는 원소(신규 원소) 즉, 글로벌 버퍼에서 연산 메모리로 전송된 이력이 없는 원소는 글로벌 버퍼로부터 연산 메모리로 제공하도록 구성된 다. 아울러, 이동경로 제어부는 연산 메모리에서 재사용되는 원소(재사용 원소) 즉, 글로벌 버퍼에 서 연산 메모리로 전송된 이력이 있는 원소는 글로벌 버퍼로부터 연산 메모리로 이동하지 않도 록 함은 물론, 연산 메모리 내 연산 처리부(PE) 간에 이동되지 않도록 한다. 즉, 재사용 원소는 이전에 이를 사용한 연산 처리부(PE)에 유지된 상태로 연산되도록 한다. 특정 컨볼루션 사이클에 사용되는 분할맵(IDIV)의 원소는 신규 원소만을 포함하거나, 재사용 원소만을 포함하거 나, 신규 원소와 재사용 원소를 모두 포함할 수 있다. 본 기술에 의한 이동경로 제어부는 컨볼루션 사이클이 진행되는 동안 분할맵(IDIV)들의 각 원소에 대한 재 사용 상태(재사용 여부 및 재사용 사이클)를 판단할 수 있다. 이에 기초하여, 재사용 원소는 이전 사이클에서 이를 연산한 연산 처리부(PE), 또는 최초로 이를 연산한 연산 처리부(PE)에서 연산되도록 하여 재사용 원소의 이동량을 최소화할 수 있다. 일 실시예에서, 이동경로 제어부는 컨볼루션 윈도우가 행방향으로 슬라이딩할 때 재사용되는 원소 및/또는 열방향으로 슬라이딩할 때 재사용되는 원소에 대하여 이동경로를 제어할 수 있다.예를 들어, 행방향으로 재사용되는 원소에 대해서만 이전 사이클에서 이를 사용한 연산 처리부(PE)가 이를 유지 하고 있다가 후속 사이클에 재사용되도록 할 수 있다. 또는 열방향으로 재사용되는 원소에 대해서만 후속 사이 클에 재사용되도록 할 수 있다. 다른 실시예에서, 행방향 및 열방향으로 재사용되는 원소 모두를 이전 사이클 에 이를 사용한 연산 처리부(PE)에서 재사용되도록 할 수 있다. 도 6은 일 실시예에 의한 연산 메모리의 구성도이다. 도 6을 참조하면, 일 실시예에 의한 연산 메모리는 복수의 타일(Tile)을 포함할 수 있다. 각각의 타일(Tile)은 타일 입력 버퍼, 복수의 연산 처리부(PE) 및 타일 출력 버퍼를 포함할 수 있다. 각각의 연산 처리부(PE)는 PE 입력 버퍼, 복수의 서브 어레이(SA) 및 누적/PE 출력 버퍼를 포함할 수 있다. 서브 어레이(SA)는 시냅스(Synapse) 어레이라 칭할 수 있으며, 복수의 워드 라인들(WL1, WL2, ..., WLN), 복수 의 비트 라인들(BL1, BL2, ..., BLM) 및 복수의 메모리 셀들(MC)을 포함한다. 일 실시예에서, 메모리 셀들(M C)은 저항성 메모리 소자(RE), 바람직하게는 멤리스터(Memristor) 소자를 포함할 수 있으나 이에 한정되지 않는 다. 메모리 셀(MC)은 복수의 워드 라인들(WL1, WL2, ..., WLN) 또는 복수의 비트 라인들(BL1, BL2, ..., BL M)을 통해 인가되는 기입 전압에 의해 저장되는 데이터 값이 변화하며, 저항성 메모리 셀들은 이러한 저항 변화 에 의해 데이터를 저장할 수 있다. 일 실시예에서, 각 저항성 메모리 셀은 PRAM(Phase change Random Access Memory) 셀, RRAM(Resistance Random Access Memory) 셀, MRAM(Magnetic Random Access Memory) 셀, FRAM(Ferroelectric Random Access Memory) 셀 등과 같은 저항성 메모리 셀을 포함하여 구현될 수 있다. 저항성 메모리 셀을 구성하는 저항성 소자는 전류량에 따라 결정 상태가 변화하는 상변화 물질(phase-change material), 페로브스카이트(perovskite) 화합물들, 전이 금속 산화물(transition metal oxide), 자성체 물질 (magnetic materials), 강자성(ferromagnetic) 물질들 또는 반강자성(antiferromagnetic) 물질들을 포함할 수 도 있으나 이에 한정되지 않는다. 서브 어레이(SA)의 단위 셀이 멤리스터 소자인 경우, 연산 처리부(PE)는 멤리스터 소자에 가중치 필터(W)의 각 원소에 해당하는 데이터를 저장하고, 워드라인들(WL1, WL2, ..., WLN)에 분할맵(IDIV)의 각 원소에 대응하는 전 압들을 인가하여 키르히호프의 법칙, 옴의 법칙을 활용하여 컨볼루션 연산을 수행할 수 있다. 컨볼루션 연산 윈도우의 크기가 예를 들어 2*2인 경우 각 컨볼루션 사이클에서 분할맵(IDIV)의 각 원소 별로 컨 볼루션 연산을 수행하기 위해 4개의 연산 처리부(PE)가 필요하다. 연산 처리부(PE)에 포함되는 서브 어레이 (SA)는 재사용 원소의 재사용 횟수 및 가중치 필터(W)의 크기에 기초하여 적어도 부분적으로 활성화될 수 있다. 컨볼루션 연산을 위해 가중치 필터(W)의 각 원소는 선택된 모든 연산 처리부(PE)의 서로 다른 서브 어레이(SA) 에 저장될 수 있다. 분할맵(IDIV)의 각 원소는 선택된 연산 처리부(PE)에 분산 제공된다. 즉, 한 번의 컨볼루 션 사이클에 연산되는 분할맵(IDIV)의 원소는 서로 다른 연산 처리부(PE)에 저장된다. 이 때, 분할맵(IDIV) 내 의 신규 원소는 글로벌 버퍼로부터 연산 처리부(PE)로 전달되고, 재사용 원소는 이전 컨볼루션 사이클에서 이를 사용한 연산 처리부(PE)에 유지된 상태로 컨볼루션 연산이 수행된다. 즉, 특정 컨볼루션 사이클의 신규 원소는 재사용 원소가 저장되지 않은 연산 처리부(PE)에 저장될 수 있다. 아울러, 분할맵(IDIV)의 각 원소는 선택된 연산 처리부(PE) 내의 서브 어레이(SA) 중 이와 연산될 가중치 필터(W)가 저장된 서브 어레이(SA)에 제 공됨은 물론이다. 이에 따라, 연산 처리부(PE)는 컨볼루션 연산을 수행할 때, 입력 데이터로부터 생성된 분할맵(IDIV)의 원소를 다른 연산 처리부(PE)로 전송하지 않고, 한번 입력된 분할맵(IDIV)의 원소를 글로벌 버퍼로부터 전송받을 필요 가 없다. 도 6에 도시한 연산 메모리는 일 예일 뿐이며, 분할맵(IDIV)의 재사용 원소가 연산 처리부(PE) 간에 이동 되지 않으면서 가중치 필터(W)와 함께 컨볼루션 연산을 처리할 수 있는 구조라면 어느 것이든지 채택 가능하다. 도 7 내지 도 10은 일 실시예에 의한 데이터 재사용 개념을 설명하기 위한 도면이다. 도 7은 가중치 필터(W) 및 입력 특징 맵(IFM)을 나타낸다. 도 7을 참조하면, 가중치 필터(W)의 크기는 2*2이고 입력 특징 맵(IFM)의 크기는 8*8임을 알 수 있다. 도 7과 같은 가중치 필터(W)와 입력 특징맵(IFM)에 대하여 스트라이드를 1로 하여 컨볼루션 연산을 수행하는 경 우 {(8-1)*(8-1)}개의 분할맵(IDIV)에 대한 49회의 컨볼루션 사이클을 통해 컨볼루션 연산이 완료된다. 도 8은 도 7에 도시한 입력 특징 맵(IFM)의 일부 분할맵(IDIV0~IDIV13)을 나타낸다. 도 8에는 49회의 컨볼루션 사이클 중, 제 1 컨볼루션 사이클(T0)부터 제 13 컨볼루션 사이클(T14) 각각에 사용 되는 분할맵(IDIV0~IDIV13)을 도시하였다. 제 1 컨볼루션 사이클(T0)에 사용된 제 1 분할맵(IDIV0)의 원소 중 \"2\" 및 \"10\"이 제 2 컨볼루션 사이클(T1)에 재사용되고, 제 2 컨볼루션 사이클(T1)에 사용된 제 2 분할맵(IDIV1)의 원소 중 \"3\" 및 \"11\"이 제 3 컨볼루션 사이클(T2)에 재사용되는 등, 컨볼루션 윈도우가 행방향으로 스트라이드에 따라 이동하는 동안 분할맵들(IDIV) 의 적어도 일부 원소가 재사용된다. 도 9는 행방향으로 재사용되는 원소를 연산 처리부(PE)가 유지하고 있다가 후속 사이클에서 재사용하는 경우, 즉 행방향 재사용 방식의 데이터 이동량을 설명하기 위한 도면이다. 도 6에서 설명한 것과 같이, 각 연산 처리부(PE)는 복수의 서브 어레이(SA)를 포함할 수 있다. 가중치 필터 (W)의 각 원소는 컨볼루션 연산을 위해 선택된 모든 연산 처리부(PE1~PE4)의 서로 다른 서브 어레이(SA)에 분산 저장된다. 도 8 및 도 9를 참조하면, 제 1 컨볼루션 사이클(T0)에 사용되는 제 1 분할맵(IDIV0)의 원소 \"1\", \"9\", \"2\", \"10\"는 각각 신규 원소이므로, 글로벌 버퍼로부터 제 1 연산 처리부(PE1), 제 2 연산 처리부(PE2), 제 3 연산 처리부(PE3), 제 4 연산 처리부(PE4)에 저장될 수 있다. 신규 원소(1\", \"9\", \"2\", \"10\")는 선택된 연산 처리부(PE1~PE4) 각각에 분산 제공되되, 해당 연산 처리부(PE)의 서브 어레이(SA) 중 어느 하나에 저장될 수 있 다. 제 2 컨볼루션 사이클(T1)에 사용되는 제 2 분할맵(IDIV1)의 원소 \"2\", \"10\", \"3\", \"11\" 중 원소 \"3\" 및 \"11\" 은 신규 원소이므로 글로벌 버퍼로부터 제공된다. 이 때, 재사용 원소 \"2\" 및 \"10\"이 제 3 연산 처리부 (PE3) 및 제 4 연산 처리부(PE4)에 이미 저장되어 있으므로 글로벌 버퍼로부터 제공되거나 다른 연산 처리 부로 이동할 필요가 없고, 신규원소 \"3\" 및 \"11\"은 재사용 원소와 분산되도록 제 1 연산 처리부(PE1) 및 제 2 연산 처리부(PE2)에 저장될 수 있다. 제 3 컨볼루션 사이클(T2)에 사용되는 제 3 분할맵(IDIV2)의 원소 \"3\", \"11\", \"4\", \"12\" 중 원소 \"4\" 및 \"12\" 는 신규 원소이므로 글로벌 버퍼로부터 제공된다. 이 때, 재사용 원소 \"3\" 및 \"11\"이 제 1 연산 처리부 (PE1) 및 제 2 연산 처리부(PE2)에 이미 저장되어 있으므로 글로벌 버퍼로부터 제공되거나 다른 연산 처리 부로 이동할 필요가 없고, 신규원소 \"4\" 및 \"12\"는 제 3 연산 처리부(PE3) 및 제 4 연산 처리부(PE4)에 저장될 수 있다. 이와 같은 과정을 반복하여 제 7 컨볼루션 사이클(T6)을 수행한 후에는 컨볼루션 윈도우를 열방향으로 스트라이 드만큼 이동시키고, 컨볼루션 윈도우를 다시 행방향으로 이동시키면서 제 8 분할맵(IDIV7) 내지 제 14 분할맵 (IDIV13)에 대한 제 8 내지 제 14 컨볼루션 사이클이 진행된다. 49회의 컨볼루션 사이클을 진행하는 동안 행방향으로 재사용되는 원소를 재사용 원소가 당초 저장된 연산 처리 부(PE)에 유지시켜 두고 연산하는 경우 글로벌 버퍼로부터 데이터를 전송하는 횟수 및 PE 입력버퍼(도 6의 430) 갱신 횟수가 각각 112회임을 알 수 있다. 도 7에 도시한 가중치 필터(W) 및 입력 특징 벡터(IFM)를 스트라이드 1로 컨볼루션 연산할 때, 매 컨볼루션 사 이클마다 신규원소를 글로벌 버퍼로부터 리드하고 재사용 원소를 다른 연산 처리부(PE)로 전달하는 경우에 는 글로벌 버퍼로부터 데이터를 전송하는 횟수 및 PE 입력버퍼(도 6의 430) 갱신 횟수가 각각 112회, 196 회이다. 따라서, 본 기술과 같이 재사용 원소를 이동시키지 않는 경우 데이터 이동량을 현저히 줄일 수 있음을 알 수 있 다. 도 10은 행방향뿐 아니라 열방향으로 재사용되는 원소를 연산 처리부(PE)가 유지하고 있다가 후속 사이클에서 재사용하는 경우, 즉 행열방향 재사용 방식의 데이터 이동량을 설명하기 위한 도면이다. 도 8 및 도 10을 참조하면, 열방향 재사용이 일어나는 제 8 컨볼루션 사이클(T7)에 사용되는 제 8 분할맵 (IDIV7)의 원소 \"9\", \"17\", \"10\", \"18\" 중 원소 \"17\" 및 \"18\"은 신규 원소이므로 글로벌 버퍼로부터 제공된다. 이 때, 열방향 재사용 원소 \"9\" 및 \"10\"은 제 1 컨볼루션 사이클(T0)시 제 2 연산 처리부(PE2) 및 제 4 연산 처리부(PE4)에 이미 저장되어 있으므로, 제 8 컨볼루션 사이클의 신규원소 \"17\" 및 \"18\"은 제 1 연산 처리 부(PE1) 및 제 3 연산 처리부(PE3)에 저장될 수 있다. 또한, 제 1 연산 처리부(PE2) 및 제 4 연산 처리부(PE 4)는 각각 재사용 원소 \"9\" 및 \"10\"이 최초 입력된 시점인 제 1 컨볼루션 사이클(T0)부터 재사용되는 시점인 제 8 컨볼루션 사이클(T7)까지 재사용 원소 \"9\" 및 \"10\"을 계속 저장하여야 함은 물론이다. 제 9 컨볼루션 사이클(T8)에 사용되는 제 9 분할맵(IDIV8)의 원소 \"10\", \"18\", \"11\", \"19\" 중 원소 \"19\"는 신 규 원소이므로 글로벌 버퍼로부터 제공된다. 열방향 재사용 원소 \"10\" 및 \"11\"은 각각 제 1 컨볼루션 사 이클(T0) 및 제 2 컨볼루션 사이클(T1)에 제 4 연산 처리부(PE4) 및 제 2 연산 처리부(PE2)에 이미 저장되어 있 고, 행방향 재사용 원소 \"\"18\"은 제 8 컨볼루션 사이클(T7)에 제 3 연산 처리부(PE3)에 이미 저장되어 있으므로, 제 9 컨볼루션 사이클의 신규원소 \"19\"은 제 1 연산 처리부(PE1)에 저장될 수 있다. 또한, 제 4 연 산 처리부(PE4)는 원소 \"10\"이 최초 입력된 제 1 컨볼루션 사이클(T0)부터, 제 2 연산 처리부(PE2)는 원소 \"1 1\"이 최초 입력된 제 2 컨볼루션 사이클(T1)부터, 제 3 연산 처리부(PE3)는 원소\"18\"이 최초 입력된 제 8 컨볼 루션 사이클(T7)부터 각각의 재사용 원소를 계속 저장할 필요가 있다. 아울러, 제 1 연산 처리부(PE1)는 제 15 분할맵(IDIV15)에 포함된 원소 \"17\"이 재사용되는 제 15 컨볼루션 사이 클(T14)까지, 제 3 연산 처리부(PE3)는 제 16 분할맵(IDIV)에 포함된 원소 \"18\"이 재사용되는 제 16 컨볼루션 사이클(T15)까지 재사용 원소 \"17\" 및 \"18\"을 계속 저장하여야 함은 물론이다. 49회의 컨볼루션 사이클을 진행하는 동안 행열방향으로 재사용되는 원소를 단일의 연산 처리부(PE)에서 연산하 는 경우 글로벌 버퍼로부터 데이터를 전송하는 횟수 및 PE 입력버퍼(도 6의 430) 갱신 횟수가 각각 64회로, 행방향 재사용 방식보다 데이터 이동량을 줄일 수 있음을 알 수 있다. 따라서, 행방향 또는 열방향으로 재사용되는 원소의 이동을 제한함에 따라 데이터 이동량을 현저히 감소시킬 수 있다. 도 11a 및 11b는 데이터 재사용 방식에 따른 데이터 처리 효율을 설명하기 위한 도면이다. 도 11a는 연산 처리부(PE) 간에 데이터가 이동되는 종래 방식(Prior), 행방향 재사용 방식(A) 및 행열방향 재사 용 방식(B)별 성능요소의 측정값을 나타낸다. 성능요소는 TOPS/W(Tera-Operations Per Second per Watt), 전 력 소모량(Power) 및 데이터 처리 레이턴시(Latency)로 분류하였다. 도 11b는 도 11a에 나타낸 측정값을 종래 방식(Prior)을 기준으로 하여 비교한 상대값을 나타낸다. 행방향 재사용 방식(A)의 경우 종래 방식(Prior)에 비해 각 성능 요소가 개선된 것을 알 수 있다. 특히 레이턴 시는 10% 정도로 대폭 개선된다. 행열방향 재사용 방식(A)의 경우 종래 방식(Prior)뿐 아니라 행방향 재사용 방식(A)에 비해서도 현저한 성능 개 선이 이루어진 것을 확인할 수 있다. 방대한 양의 데이터를 처리하는 신경망 프로세서에서 본기술에서와 같이 데이터 이동을 제한함에 따라 전력 소 모량을 대폭 절감하고, 데이터 처리 속도를 향상시켜 효율적인 신경망 연산이 가능하게 된다."}
{"patent_id": "10-2021-0116331", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이와 같이, 본 발명이 속하는 기술분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고 서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들 은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 본 발명의 범위는 상기 상세 한 설명보다는 후술하는 특허청구범위에 의하여 나타내어지며, 특허청구범위의 의미 및 범위 그리고 그 등가개 념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2021-0116331", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 의한 컴퓨팅 시스템의 구성도이다. 도 2는 일 실시예에 의한 인공 신경망의 데이터 처리 개념을 설명하기 위한 도면이다. 도 3은 컨볼루션 레이어의 연산 개념을 설명하기 위한 도면이다. 도 4는 일 실시예에 의한 신경망 프로세서의 구성도이다. 도 5는 일 실시예에 의한 스케쥴러의 구성도이다. 도 6은 일 실시예에 의한 연산 메모리의 구성도이다. 도 7 내지 도 10은 일 실시예에 의한 데이터 재사용 개념을 설명하기 위한 도면이다. 도 11a 및 11b는 데이터 재사용 방식에 따른 데이터 처리 효율을 설명하기 위한 도면이다."}
