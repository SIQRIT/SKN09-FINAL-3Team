{"patent_id": "10-2021-0118488", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0036589", "출원번호": "10-2021-0118488", "발명의 명칭": "시스템-온-칩 및 그의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "박충훈"}}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제 1 코어 및 DVFS(Dynamic Voltage and Frequency Scaling) 모듈을 포함하는 프로세서 및 상기 제 1 코어로동작 클럭을 공급하는 CMU(Clock Management Unit)을 포함하는 SoC(System-on-Chip)의 동작 방법에 있어서:상기 제 1 코어의 요구 성능을 획득하는 단계;상기 요구 성능을 만족하는 가용 주파수들을 찾는 단계;상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계;상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계;상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하는 단계; 및상기 제 1 코어로 공급되는 동작 주파수를 상기 최적 주파수로 스케일링하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 제 1 코어의 상기 요구 성능을 획득하는 단계는 상기 제 1 코어의 상기 요구 성능에 대응하는 최소 주파수를 획득하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서, 상기 가용 주파수들을 찾는 단계는:상기 제 1 코어의 상기 동작 주파수로서 사용될 수 있는 주파수들의 리스트를 포함하는 주파수 테이블을 획득하는 단계; 및상기 주파수 테이블에 포함된 상기 리스트의 상기 주파수들 중, 상기 최소 주파수 이상의 주파수들을 상기 가용주파수들로서 결정하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계는:상기 제 1 코어로 공급되는 상기 동작 주파수로서 사용될 수 있는 주파수들의 정보를 획득하는 단계;상기 제 1 코어로 공급되는 동작 전압의 레벨로서 사용될 수 있는 전압 레벨들의 정보를 획득하는 단계; 및상기 제 1 코어의 온도 정보를 획득하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계는:상기 정보에 기반하여, 상기 가용 주파수들 중 제 1 주파수에 대한 동적 전력을 계산하는 단계; 및상기 정보에 기반하여, 상기 제 1 주파수에 대한 정적 전력을 계산하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2023-0036589-3-제 5 항에 있어서,상기 정보에 기반하여, 상기 제 1 주파수에 대한 정적 전력을 계산하는 단계는:상기 제 1 주파수에 대응하는 제 1 전압 및 상기 제 1 코어의 현재 온도에 대응하는 제 1 누설 전력을 누설 전력 테이블에서 찾는 단계를 포함하되,상기 정보는 상기 제 1 전압의 레벨 및 상기 제 1 코어의 상기 현재 온도를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 코어 및 제 2 코어를 포함하는 제 1 클러스터 그리고 DVFS(Dynamic Voltage and Frequency Scaling) 모듈을 포함하는 프로세서 및 상기 제 1 코어로 동작 클럭을 공급하는 CMU(Clock Management Unit)을 포함하는SoC(System-on-Chip)의 동작 방법에 있어서:상기 제 1 코어의 요구 성능을 획득하는 단계;상기 요구 성능을 만족하는 가용 주파수들을 찾는 단계;상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계;상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계;상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하는 단계; 및상기 제 1 코어로 공급되는 동작 주파수를 상기 최적 주파수로 스케일링하는 단계를 포함하되,상기 정보는 상기 제 1 클러스터에 포함된 제 2 코어의 동작 전압의 레벨을 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 제 1 코어의 상기 요구 성능을 획득하는 단계는 상기 제 1 코어에 의해 요구되는 최소 주파수를 획득하는단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서, 상기 가용 주파수들을 찾는 단계는:상기 제 1 코어에 의해 사용될 수 있는 주파수들의 리스트를 포함하는 주파수 테이블을 획득하는 단계; 및상기 리스트의 상기 주파수들 중, 상기 최소 주파수 이상의 주파수들을 상기 가용 주파수들로 결정하는 단계를포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 7 항에 있어서,상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계는:상기 제 1 코어로 공급되는 상기 동작 주파수로서 사용될 수 있는 주파수들의 정보를 획득하는 단계;상기 제 2 코어의 동작 전압의 레벨의 정보를 획득하는 단계; 및상기 제 1 코어의 온도 정보를 획득하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 7 항에 있어서,상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계는:상기 정보에 기반하여, 상기 가용 주파수들 중 제 1 주파수에 대한 동적 전력을 계산하는 단계; 및공개특허 10-2023-0036589-4-상기 정보에 기반하여, 상기 제 1 주파수에 대한 정적 전력을 계산하는 단계를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 정보에 기반하여, 상기 제 1 주파수에 대한 정적 전력을 계산하는 단계는:상기 제 1 주파수에 대응하는 제 1 전압 및 상기 제 1 코어의 현재 온도에 대응하는 제 1 누설 전력을 누설 전력 테이블에서 찾는 단계를 포함하되,상기 정보는 상기 제 1 전압의 레벨 및 상기 제 1 코어의 상기 현재 온도를 포함하는 SoC의 동작 방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 7 항에 있어서,상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계는:상기 가용 주파수들 중 제 1 주파수 및 상기 제 2 코어의 동작 전압의 레벨에 대응하는 제 1 동적 전력을 전력테이블에서 찾는 단계; 및상기 제 1 주파수, 상기 제 2 코어의 동작 전압의 레벨, 및 상기 제 1 코어의 현재 온도에 대응하는 제 1 누설전력을 상기 전력 테이블에서 찾는 단계를 포함하되,상기 전력 테이블은 미리 계산된 정적 전력 및 동적 전력의 리스트를 포함하고, 그리고상기 정보는 상기 제 2 코어의 동작 전압의 레벨, 및 상기 제 1 코어의 상기현재 온도를 포함하는 SoC의 동작방법."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "SoC(System-on-Chip)에 있어서:제 1 코어를 포함하는 프로세서;상기 프로세서의 제어 하에, 동작 클럭을 생성하고 그리고 상기 동작 클럭을 상기 제 1 코어로 공급하는CMU(Clock Management Unit); 및DVFS(Dynamic Voltage and Frequency Scaling) 프로그램을 저장하는 메모리를 포함하되,상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 제 1 코어의 요구 성능을 획득하고,상기 요구 성능을 만족하는 가용 주파수들을 찾고,상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하고,상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하고,상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하고, 그리고상기 제 1 코어로 공급되는 동작 주파수를 상기 최적 주파수로 스케일링하도록 야기하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14 항에 있어서,상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 제 1 코어의 상기 요구 성능에 대응하는 최소 주파수를 획득하고,상기 제 1 코어에 의해 사용될 수 있는 주파수들의 리스트를 포함하는 주파수 테이블을 획득하고, 그리고상기 리스트의 상기 주파수들 중, 상기 최소 주파수 이상의 주파수들을 상기 가용 주파수들로서 결정하도록 더야기하는 SoC.공개특허 10-2023-0036589-5-청구항 16 제 14 항에 있어서,상기 프로세서의 제어 하에, 상기 제 1 코어의 온도를 측정하는 온도 센서; 및상기 온도 센서의 측정에 기반하여, 상기 제 1 코어의 온도를 관리하는 TMU(Temperature Management Unit)를더 포함하고, 그리고상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 CMU로부터, 상기 제 1 코어로 공급되는 상기 동작 주파수로서 사용될 수 있는 주파수들의 정보를획득하고,상기 제 1 코어로 공급되는 동작 전압 레벨로서 사용될 수 있는 전압 레벨들의 정보를 획득하고, 그리고상기 TMU로부터 상기 제 1 코어의 온도 정보를 획득하도록 더 야기하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 14 항에 있어서,상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 정보에 기반하여, 상기 가용 주파수들 중 제 1 주파수에 대한 제 1 동적 전력 및 제 1 정적 전력을 계산하고,상기 제 1 동적 전력에 기반하여 상기 제 1 주파수에 대한 제 1 동적 에너지를 계산하고,상기 제 1 정적 전력에 기반하여 상기 제 1 주파수에 대한 제 1 정적 에너지를 계산하고, 그리고상기 제 1 동적 에너지 및 상기 제 1 정적 에너지에 기반하여 상기 제 1 주파수에 대한 제 1 에너지 소모를 계산하도록 더 야기하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17 항에 있어서,상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 제 1 주파수에 대응하는 제 1 전압 및 상기 제 1 코어의 현재 온도에 대응하는 제 1 누설 전력을 누설 전력 테이블에서 찾도록 더 야기하되,상기 정보는 상기 제 1 전압의 레벨 및 상기 제 1 코어의 상기 현재 온도를 포함하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 14 항에 있어서,상기 프로세서의 제어 하에, 상기 제 1 코어의 온도를 측정하는 온도 센서; 및상기 온도 센서의 측정에 기반하여, 상기 제 1 코어의 온도를 관리하는 TMU(Temperature Management Unit)를더 포함하고,상기 프로세서는 상기 제 1 코어 및 제 2 코어를 포함하는 제 1 클러스터를 더 포함하고, 그리고상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 CMU로부터, 상기 제 1 코어로 공급되는 상기 동작 주파수로서 사용될 수 있는 주파수들의 정보를획득하고,상기 제 2 코어의 동작 전압의 레벨의 정보를 획득하고, 그리고상기 TMU로부터 상기 제 1 코어의 온도 정보를 획득하도록 더 야기하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "공개특허 10-2023-0036589-6-제 19 항에 있어서,상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금:상기 제 2 코어의 동작 전압의 레벨에 기반하여, 상기 가용 주파수들 중 제 1 주파수에 대한 제 1 동적 전력을계산하고,상기 제 1 동적 전력에 기반하여, 상기 제 1 주파수에 대한 제 1 동적 에너지를 계산하고,상기 제 1 코어의 상기 온도 정보 및 상기 제 2 코어의 동작 전압의 레벨에 기반하여, 상기 제 1 주파수에 대한제 1 정적 전력을 계산하고,상기 제 1 정적 전력에 기반하여, 상기 제 1 주파수에 대한 제 1 정적 에너지를 계산하고, 그리고상기 제 1 동적 에너지 및 상기 제 1 정적 에너지에 기반하여, 상기 제 1 주파수에 대한 제 1 에너지 소모를 계산하도록 야기하는 SoC."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "SoC(System-on-Chip) 및 그의 동작 방법이 개시된다. 제 1 코어 및 DVFS(Dynamic Voltage and Frequency Scaling) 모듈을 포함하는 프로세서 및 상기 제 1 코어로 동작 클럭을 공급하는 CMU(Clock Management Unit)을 포함하는 SoC의 동작 방법은: 상기 제 1 코어의 요구 성능을 획득하는 단계; 상기 요구 성능을 만족하는 가용 주 파수들을 찾는 단계; 상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계; 상기 정보 에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계; 상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하는 단계; 및 상기 제 1 코어로 공급되는 동작 주파수를 상기 최 적 주파수로 스케일링하는 단계를 포함할 수 있다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 시스템-온-칩 및 그의 동작 방법에 관한 것으로, 좀 더 구체적으로는 시스템-온-칩에 의해 DVFS(Dynamic Voltage and Frequency Scaling)를 수행하는 방법에 관한 것이다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "시스템-온-칩(System-on-Chip; SoC)은 컴퓨팅 시스템 또는 다른 컴퓨팅 시스템을 구현하기 위해 CPU(central processing unit), 메모리, 인터페이스(interface), 디지털 신호 처리 회로, 및 아날로그 신호 처리 회로 등 다 양한 기능 블록들을 하나의 반도체 집적 회로에 집적하는 기술 또는 상기 기술에 따라 집적된 하나의 집적 회로 (integrated circuit; IC)를 지칭할 수 있다. 시스템-온-칩의 전력 관리를 위해 DVFS(dynamic voltage & frequency scaling) 기술이 적용될 수 있다. DVFS 기술은 동작 주파수(operating frequency) 및 동작 전압(operating voltage)을 동적으로 조절함으로써 전력 소 모를 감소시킬 수 있는 기술을 나타낸다. 예를 들어, 시스템-온-칩의 동작 주파수 또는 동작 전압이, 시스템의 동작에 필요한 성능에 기반하여 동적으로 스케일링될 수 있다. 모바일 장치에 탑재된 시스템-온-칩에 있어서, 컴퓨팅 시스템이 저전력으로 동작할 것이 요구되고 있다. 이에 따라, 컴퓨팅 시스템의 프로세서의 전력 소모가 감소될 필요가 있다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시의 목적은 DVFS(Dynamic Voltage and Frequency Scaling)를 수행하는 시스템-온-칩 및 그의 동작 방법 을 제공하는 데 있다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 몇몇 실시 예들에 따른 제 1 코어 및 DVFS(Dynamic Voltage Module) 모듈을 포함하는 프로세서 및 상 기 제 1 코어로 동작 클럭을 공급하는 CMU(Clock Management Unit)을 포함하는 SoC(System-on-Chip)의 동작 방 법은: 상기 제 1 코어의 요구 성능을 획득하는 단계; 상기 요구 성능을 만족하는 가용 주파수들을 찾는 단계; 상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보를 획득하는 단계; 상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계; 상기 가용 주파수들 중 그 에너지 소모가 최소인 주 파수를 최적 주파수로서 결정하는 단계; 및 상기 제 1 코어로 공급되는 동작 주파수를 상기 최적 주파수로 스케 일링하는 단계를 포함할 수 있다. 본 개시의 몇몇 실시 예들에 따른 제 1 코어 및 제 2 코어를 포함하는 제 1 클러스터 그리고 DVFS(Dynamic Voltage Module) 모듈을 포함하는 프로세서 및 상기 제 1 코어로 동작 클럭을 공급하는 CMU(Clock ManagementUnit)을 포함하는 SoC(System-on-Chip)의 동작 방법은: 상기 제 1 코어의 요구 성능을 획득하는 단계; 상기 요 구 성능을 만족하는 가용 주파수들을 찾는 단계; 상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정보 를 획득하는 단계; 상기 정보에 기반하여, 상기 가용 주파수들 각각에 대한 에너지 소모를 계산하는 단계; 상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하는 단계; 및 상기 제 1 코어로 공 급되는 동작 주파수를 상기 최적 주파수로 스케일링하는 단계를 포함하되, 상기 정보는 상기 제 1 클러스터에 포함된 제 2 코어의 동작 전압의 레벨을 포함할 수 있다 본 개시의 몇몇 실시 예들에 따른 SoC(System-on-Chip)는: 제 1 코어를 포함하는 프로세서; 상기 프로세서의 제 어 하에, 동작 클럭을 생성하고 그리고 상기 동작 클럭을 상기 제 1 코어로 공급하는 CMU(Clock Management Unit); 및 DVFS(Dynamic Voltage and Frequency Scaling) 프로그램을 저장하는 메모리를 포함하되, 상기 DVFS 프로그램은 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금: 상기 제 1 코어의 요구 성능을 획득하고, 상기 요구 성능을 만족하는 가용 주파수들을 찾고, 상기 가용 주파수들에 대한 에너지 소모를 계산하기 위한 정 보를 획득하고, 상기 정보에 기반하여, 에너지 소모를 계산하기 위한 정보를 계산하고, 상기 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하고, 그리고 상기 제 1 코어로 공급되는 동작 주파수 를 상기 최적 주파수로 스케일링하도록 야기할 수 있다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 몇몇 실시 예들에 따르면, DVFS가 수행될 때, 요구 성능을 만족하는 가용 주파수들 각각에 대해 에너 지 소모가 워크로드 수행 시간, 주파수 및 동작 전압 사이의 관계, 및 정적 전력에 영향을 미치는 다양한 요소 들에 기반하여 계산될 수 있다. 컴퓨팅 시스템에 포함된 특정 코어의 동작 주파수는 그 에너지 소모가 최소인 주파수로 스케일링될 수 있다. 이에 따라, 컴퓨팅 시스템의 워크로드 처리 시간 및 에너지 소모가 최소화될 수 있다."}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서, 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 용이하게 실시할 수 있을 정도로, 본 개시의 실시 예들이 명확하고 상세하게 기재될 것이다. 이하에서, 첨부한 도면들을 참조하여, 본 개시의 몇몇 실시 예들을 보다 상세하게 설명하고자 한다. 본 개시를 설명함에 있어 전체적인 이해를 용이하게 하기 위하여 도면상의 유사한 구성요소에 대해서는 유사한 참조부호가 사용되고, 그리고 유사한 구성요소에 대해서 중복된 설명은 생략된다. 도 1은 본 개시의 몇몇 실시 예들에 따라, 컴퓨팅 시스템의 블록도를 도시한다. 도 1을 참조하면, 컴퓨팅 시스템은 SoC(System-on-Chip; 100), PMIC(Power Management Integrated Circuit; 11) 및 스토리지 장치 를 포함할 수 있다. 몇몇 실시 예들에 있어서, 컴퓨팅 시스템은 컴퓨터, 노트북, 핸드폰, 스마트폰, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 디지털 TV, 디지털 카메라, 포터블 게 임 콘솔(portable game console), 네비게이션(navigation) 장치, 웨어러블(wearable) 장치, IoT(Internet of Things) 장치, IoE(Internet of Everything) 장치, E-book, VR(Virtual Reality) 장치, 또는 AR(AugmentedReality) 장치 등과 같은 다양한 전자 장치들 중 적어도 하나를 포함하는 컴퓨팅 시스템으로서 구현될 수 있다. SoC는 프로세서, RAM(Random Access Memory; 120), CMU(Clock Management Unit; 130), TMU(Temperature Management Unit; 140), GPU(Graphics Processing Unit; 150), 스토리지 컨트롤러, 및 버스를 포함할 수 있다. 프로세서는 SoC의 동작에 필요한 다양한 연산들을 수행할 수 있다. 예를 들어, 프로세서는 RAM에 로드된 소프트웨어, 펌웨어, 명령어, 또는 프로그램 코드 등을 실행할 수 있다. 프로세서는 CMU로부터 출력되는 동작 클럭에 응답하여, 상기 소프트웨어, 펌웨어, 명령어, 또는 프로그램 코드 등을 실행할 수 있다. 프로세서는 RAM에 로드되는 운영 체제(Operating System)를 실행할 수 있다. 프로세 서는 운영 체제 기반에서 구동되는 다양한 응용 프로그램들을 실행할 수 있다. 프로세서는 연산들의 결과를 RAM에 저장하거나, 또는 GPU로 전송할 수 있다. 예를 들어, 프로세서는 그래픽스 데이터 의 처리를 GPU로 요청할 수 있다. 프로세서는 하나 이상의 코어들 및 DVFS(Dynamic Voltage and Frequency Scaling; 동작 전압 주파수 스케일링) 모듈을 포함할 수 있다. 하나 이상의 코어들은 동종(homogeneous) 또는 이종 (heterogeneous)일 수 있다. 프로세서가 적어도 두 개의 코어들을 포함할 때, 프로세서는 멀티 코어 프로세서로서 지칭될 수 있고, 그리고 SoC는 멀티 코어 시스템으로서 지칭될 수 있다. 하나 이상의 코어들 각각은 독립적으로 구동 가능한 프로세서 코어로서 구현될 수 있다. 예를 들어, 하나 이상의 코어들 각각은 프로그램 명령어들을 독립적으로 읽고 그리고 실행할 수 있다. 하나 이상의 코어들은 독립된 동작 클럭 및/또는 독립된 공급 전원에 의해서 동작하는 복수의 클러스터들 로 그룹화될 수 있다. 동일한 클러스터에 속하는 코어들은 동일한 동작 클럭에 응답하여 동작하는 클럭 도메인 (clock domain) 및/또는 동일한 공급 전원에 응답하여 동작하는 파워 도메인(power domain; 또는 전압 도메인) 에 포함될 수 있다. 그룹화된 하나 이상의 코어들은 도 8을 참조하여 구체적으로 후술될 것이다. DVFS 모듈은 하나 이상의 코어들 각각의 동작 주파수(예를 들어, 하나 이상의 코어들 각각에 제 공되는 동작 클럭의 주파수) 또는 하나 이상의 코어들 각각의 동작 전압(예를 들어, 하나 이상의 코어들 각각에 제공되는 공급 전원의 전압 레벨)을 DVFS 방식으로 제어할 수 있다. DVFS 모듈은 대상 코어 의 요구 성능을 고려하여, 그 코어의 동작 주파수를 결정할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 대상 코어의 에너지 소모를 최소화하는 주파수를 코어의 동작 주파 수로서 결정할 수 있다. 예를 들어, DVFS 모듈은 코어의 워크로드(workload) 수행 시간, 코어의 동작 주파 수 및 동작 전압 사이의 관계, 온도 등과 같이 정적 전력의 크기에 영향을 미치는 다양한 요소들 등을 종합적으 로 고려하여, 코어의 요구 성능을 만족하는 가용 주파수들 각각에 대한 에너지 소모를 계산할 수 있다. DVFS 모 듈은 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정하고, 그리고 최적 주파수를 코어의 동작 주 파수로서 설정할 수 있다. 이에 따라, 코어의 워크로드 처리 시간 및 에너지 소모가 최소화(또는 최적화)될 수 있다. DVFS 모듈에 기반하여 수행되는 동작 주파수의 제어는 구체적으로 후술될 것이다. 몇몇 실시 예들에 있어서, DVFS 모듈은 RAM에 로드되고 프로세서에 의해 실행되는 소프트웨어 (또는 프로그램) 형태로서 구현될 수 있다. 이러한 실시 예들에 있어서, DVFS 모듈은 하나 이상의 코어들 , RAM, CMU, 또는 PMIC 중 적어도 하나를 제어할 수 있고, 이때 DVFS 모듈 및 각 구 성 요소 사이에는 운영 체제 및/또는 미들웨어(middleware)가 개입될 수 있다. 또는, 몇몇 실시 예들에 있어서, DVFS 모듈은 별개의 하드웨어 형태, 또는 하드웨어와 소프트웨어의 조합의 형태로서 구현될 수도 있다. RAM은 프로세서 및 GPU가 데이터를 처리하는 데 필요한 정보 또는 데이터를 저장할 수 있다. RAM은 프로세서 및 GPU에 의해 처리된 데이터를 저장할 수 있다. RAM은 프로세서 또 는 GPU에 의해 실행될 수 있는 소프트웨어, 펌웨어, 프로그램 코드, 또는 명령어들을 저장할 수 있다. 예 를 들어, RAM은 프로세서에 실행될 수 있는 DVFS 프로그램을 저장할 수 있다. RAM은 SRAM(Static Random Access Memory) 또는 DRAM(Dynamic Random Access Memory) 등과 같은 휘발성 메모리, 또는 플래시 메모리, PRAM(Phase-change RAM), MRAM(Magneto-resistive RAM), ReRAM(Resistive RAM), FRAM(Ferro- electric RAM) 등과 같은 불휘발성 메모리를 포함할 수 있다. 몇몇 실시 예들에 있어서, RAM은 버퍼 메모 리, 캐시 메모리, 또는 워킹 메모리로서 지칭될 수 있다. CMU는 동작 클럭을 생성할 수 있다. CMU에 의해 생성되는 동작 클럭은 SoC의 구성 요소들로 제 공될 수 있다. 예를 들어, 프로세서, GPU, 또는 스토리지 컨트롤러 등은 CMU로부터 제공되는 동작 클럭에 응답하여 동작할 수 있다. CMU에 의해 생성되는 동작 클럭의 주파수는 DVFS 모듈의 제어에 따라 조절될 수 있다. 몇몇 실시 예들에 있어서, CMU는 위상 동기 루프(Phase Locked Loop; PLL), 지연 동기 루프(Delayed Locked Loop; DLL), 또는 크리스탈 오실레이터 등과 같은 동작 클럭을 생성하기 위한 회로 또는 장치를 포함할 수 있다. TMU는 SoC의 온도를 제어할 수 있다. 예를 들어, SoC는 SoC 또는 그의 구성 요소들(예를 들어 프로세서, 또는 코어들 중 어느 하나)의 온도를 측정하기 위한 온도 센서(미도시)를 포함할 수 있다. TMU는 온도 센서로부터 제공되는 온도 정보에 기초하여 동적 열 관리(Dynamic Thermal Management; DTM)를 위한 제어 신호를 생성할 수 있다. 예를 들어, TMU는 온도 센서로부터 제공되는 온도 정보에 응답 하여, SoC의 성능 또는 SoC의 전력 레벨을 제한하기 위한 제어 신호를 생성할 수 있다. TMU에 의해 생성된 제어 신호에 응답하여, SoC의 온도가 하강할 수 있다. 몇몇 실시 예들에 있어서, TMU는 온도 센서로부터 제공되는 온도 정보를 DVFS 모듈로 제공할 수 있다. GPU는 프로세서로부터 전송된 데이터 및 RAM에 저장된 데이터를 이용하여 그래픽스 처리와 연관 된 다양한 연산들을 수행할 수 있다. 예를 들어, GPU는 RAM 또는 GPU의 내부 메모리(미도시)에 저장된 프로그램 코드들이나 명령어들, 또는 프로세서로부터 제공되는 컴파일된 코드들 등을 실행함으로써, 그래픽스 데이터를 처리(또는 생성)할 수 있다. 몇몇 실시예에서 GPU는 인공지능 (Artificial Intelligence) 또는 뉴럴 네트워크 (Neural Network) 구현을 위한 연산에 사용될 수 있다. 스토리지 컨트롤러는 프로세서의 제어 하에, 스토리지 장치를 액세스할 수 있다. 예를 들어, 프 로세서 또는 GPU에 의해 처리된 데이터는 스토리지 컨트롤러를 통해 스토리지 장치에 저장 될 수 있고, 그리고 스토리지 장치에 저장된 데이터는 스토리지 컨트롤러를 통해 프로세서 또는 GPU로 제공될 수 있다. PMIC(11; 전력 관리 집적 회로)는 SoC로 동작 전압을 제공할 수 있다. 예를 들어, PMIC는 DVFS 모듈 의 제어 하에, 프로세서의 하나 이상의 코어들 각각에서 사용되기 위한 동작 전압을 생성하고, 그리고 생성된 동작 전압을 하나 이상의 코어들 각각으로 제공할 수 있다. 도 1의 실시 예에서, PMIC는 SoC의 외부에 구현되나, 다른 실시 예들에 있어서, PMIC는 SoC(10 0)의 내부에 포함될 수 있다. 스토리지 장치는 SoC의 저장 매체(Storage Medium)으로서 제공될 수 있다. 스토리지 장치는 응용 프로그램들, 운영 체제 이미지, 및 다양한 데이터를 저장할 수 있다. 스토리지 장치는 MMC, eMMC, SD, MicroSD 등과 같은 메모리 카드로서 제공될 수 있다. 또는, 스토리지 장치는 NAND 플래시 메모리, NOR 플래 시 메모리, PRAM, MRAM, ReRAM, FRAM 등과 같은 불휘발성 메모리를 포함할 수 있다. 몇몇 실시 예들에 있어서, 도시된 실시 예와 달리, 스토리지 장치는 SoC의 내부에 구비되는(또는 내장되는) 메모리로서 구현될 수 있다. 도 2는 본 개시의 몇몇 실시 예들에 따라, 도 1의 컴퓨팅 시스템에 구현되는 DVFS 모듈을 도시한다. 도 1 및 도 2를 참조하면, 도 2는 도 1의 컴퓨팅 시스템의 예시적인 소프트웨어 구조를 도시할 수 있다. 도 2에 도시된 실시 예에서, DVFS 모듈은 RAM에 로드되고 프로세서에 의해 실행되는 소프트웨어 형 태로서 도시되었다. RAM에 로드되고 프로세서에 의해서 구동되는 컴퓨팅 시스템의 소프트웨어 계층 구조는 간략히 응 용 프로그램들(APP) 및 운영 체제(OS)의 커널(Kernel; KER)을 포함할 수 있다. 몇몇 실시 예들에 있어서, 운영 체제(OS)에는 메모리나 모뎀, 이미지 처리 장치 등과 같은 다양한 장치들을 관리하는 장치 드라이버(Device Driver)가 더 포함될 수 있다. 응용 프로그램들(APP)은 기본적인 서비스로서 구동되거나, 사용자의 요청에 의해서 구동되는 상위 계층의 소프 트웨어일 수 있다. 사용자로 다양한 서비스를 제공하기 위하여, 동시에 복수의 응용 프로그램들(예를 들어, 응 용 프로그램들(APP0, APP1, APP2))이 실행될 수 있다. 실행되는 응용 프로그램들(APP0, APP1, APP2) 각각은 RAM에 로드된 후 프로세서에 의해서 실행될 수 있다. 예를 들어, 사용자에 의해서 동영상 파일의 재 생이 요청되면, 동영상을 재생하기 위한 응용 프로그램(예를 들면, 비디오 플레이어)이 실행된다. 그러면, 실행 된 플레이어는 사용자가 요청한 동영상 파일을 재생하기 위한 스토리지 장치로의 읽기 요청(Read request) 또는 쓰기 요청(Write request)을 생성할 것이다. 커널(KER)은 운영 체제(OS)의 구성으로, 응용 프로그램들(APP) 및 하드웨어(Hardware) 사이에서 제어 동작을 수 행할 수 있다. 커널(KER)은 프로그램의 실행, 인터럽트, 멀티 태스킹, 메모리 관리, 파일 시스템, 그리고 장치 드라이버 등을 포함할 수 있다. 도시된 실시 예에서, 커널(KER)은 DVFS 모듈 및 태스크 스케줄러(SCH) 등 을 포함할 수 있다. 태스크 스케줄러(SCH)는 프로세서에 포함된 코어들 각각에 대한 태스크 큐들을 모니터링하고 관리할 수 있다. 태스크 큐들은 복수의 태스크들이 동시에 수행될 때, 활성화된 태스크(Active task)들의 대기 열을 지 칭할 수 있다. 예를 들어, 태스크 큐들에 존재하는 태스크들은 다른 태스크들에 비해서 프로세서에 의해 곧(또는 다른 태스크들에 우선하여) 처리될 태스크들일 수 있다. 태스크 스케줄러(SCH)는 태스크 큐들에 로드된 태스크 정보를 참조하여 현재의 후속되는 프로세스를 결정할 수 있다. 태스크 스케줄러(SCH)는 태스크 큐들에 저장된 우선 순위 값들에 따라 컴퓨팅 자원(computing resources)의 우선 순위를 결정할 수 있다. 몇몇 실시 예 들에 있어서, 운영 체제(OS)가 리눅스(Linux)에 기반할 때, 리눅스 기반 커널(KER) 상의 태스크 큐들은 코어들 에 각각 대응할 수 있다. 태스크 스케줄러(SCH)는 태스크 큐들의 각각에 대응하는 태스크들을 해당하는 코 어에 할당할 수 있다. 몇몇 실시 예들에 있어서, 태스크 스케줄러(SCH)는 프로세서에 포함된 코어들 각각을 추적(또는 모니 터링)할 수 있다. 태스크 스케줄러(SCH)는 추적 결과에 기반하여, 코어들 각각에 대한 요구 성능을 계산할 수 있다. 예를 들어, 한 코어의 요구 성능은 그 코어의 현재 워크로드(또는 그 코어로 할당된 태스크)를 처리하 는 데 필요한 성능일 수 있다. 해당 코어의 요구 성능은 그 코어에 의한 서비스 처리를 지연시키지 않기 위한 최소 동작 주파수를 포함할 수 있다. 최소 태스크 스케줄러(SCH)는 계산된 요구 성능을 DVFS 모듈로 제공 할 수 있다. DVFS 모듈은 DVFS 알고리즘을 수행할 수 있다. DVFS 모듈은 태스크 스케줄러(SCH), SoC의 다른 구성 요소들(예를 들어, TMU 또는 CMU), 또는 PMIC로부터 제공되는 정보에 기반하여 DVFS 알고리 즘을 수행함으로써, 프로세서로 제공되는 동작 전압의 레벨 또는 동작 주파수를 결정할 수 있다. DVFS 모듈은 주파수가 조절되고자 하는 코어의 요구 성능, 각 코어로 제공될 수 있는 동작 클럭의 주파수 테이블, 각 코어로 공급될 수 있는 동작 전력의 전압 레벨 테이블, 현재 SoC 또는 프로세서의 온도 정보, 및 누설 전력 정보 등과 같은 다양한 정보를 획득할 수 있다. DVFS 모듈은 획득된 정보에 기반하여 주파수가 조절되고자 하는 상기 코어의 가용 주파수들 각각에 대해 에너지 소모를 계산할 수 있다. DVFS 모듈 은 계산 결과에 기반하여 동작 클럭의 최적 주파수를 결정할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모 듈은 프로세서로 제공되는 동작 전압의 레벨 또는 동작 주파수를 조절하기 위한 소프트웨어 또는 하 드웨어 등을 더 포함할 수 있다. 도 3은 본 개시의 몇몇 실시 예들에 따라, DVFS를 수행하는 방법의 순서도를 도시한다. 도 1 내지 도 3을 참조 하면, SoC의 프로세서는 S101 내지 S105 단계들을 수행함으로써, 하나 이상의 코어들 중 DVFS의 대상인 제 1 코어로 제공되는 동작 주파수를 선택할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 프로 세서로부터의 요청에 응답하여, S101 내지 S105 단계들을 수행할 수 있다. 예를 들어, 프로세서는 DVFS 모듈로 제 1 코어의 DVFS의 수행을 요청할 수 있다. 다른 예를 들어, 프로세서는 DVFS 모듈 을 통해(또는 DVFS 모듈을 실행하거나 제어함으로써), S101 내지 S105 단계들을 수행할 수 있다. S101 단계에서, DVFS 모듈은 제 1 코어의 요구 성능을 획득할 수 있다. 요구 성능은 제 1 코어에 의해 현 재 수행되고자 하는 연산(또는 태스크, 서비스, 워크로드, 소프트웨어, 응용 프로그램 등)을 지연 없이(또는 주 어진 처리 시간 내에) 수행하기 위한 최소한의 성능일 수 있다. 요구 성능은 제 1 코어로 제공되는 동작 주파수 의 최소 주파수 또는 제 1 코어로 제공되는 동작 전압의 최소 레벨 등을 포함할 수 있다. 몇몇 실시 예들에 있어, DVFS 모듈은 클라이언트(client)로부터 요구 성능을 획득할 수 있다. 클라이언트 는 태스크 스케줄러(SCH) 또는 프로세서를 포함할 수 있다. 클라이언트는 제 1 코어(또는 제 1 코어가 속 한 도메인)의 상황(예를 들어, 워크로드)을 추적(또는 모니터링)할 수 있다. 클라이언트는 추적에 기반하여, 제 1 코어(또는 제 1 코어가 속한 도메인)가 요구하는 성능을 만족시킬 수 있는(또는 그러한 성능을 제공할 수 있 는) 최소 주파수 등을 계산할 수 있다. 클라이언트는 계산된 최소 주파수를 DVFS 모듈로 제공할 수 있다. S102 단계에서, DVFS 모듈은 요구 성능을 만족하는 가용 주파수들을 찾을 수 있다. 예를 들어, DVFS 모듈 은 CMU로부터 제 1 코어로 공급되는 동작 주파수로서 사용될 수 있는 주파수들의 리스트(예를 들어, 도 4의 주파수 테이블(TBF))를 획득할 수 있다. DVFS 모듈은 상기 리스트의 주파수들 중 제 1 코어의 요구 성능을 만족하는 최소 주파수 이상의 주파수들을 가용 주파수들로서 결정할 수 있다.S103 단계에서, DVFS 모듈은 에너지 소모를 계산하기 위한 정보를 획득할 수 있다. 예를 들어, 상기 정보 는 CMU로부터 제 1 코어로 제공되는 동작 주파수로서 사용될 수 있는 주파수들의 정보(예를 들어, 도 4의 주파수 테이블(TBF)), PMIC로부터 제 1 코어로 공급되는 동작 전압(예를 들어, 동작 전력의 전압) 레벨로서 사용될 수 있는 전압 레벨들의 정보(예를 들어, 도 5의 전압 테이블(TBV)), TMU에 의해 온도 센서로부터 획득되는 현재 제 1 코어의 온도 정보, 또는 누설 전력 정보(예를 들어, 도 6의 누설 전력 테이블(TBL)) 등을 포함할 수 있다. DVFS 모듈은 제 1 코어로 공급되는 동작 주파수로서 사용될 수 있는 주파수들의 정보를 CMU로부터 획 득할 수 있다. DVFS 모듈은 제 1 코어로 공급되는 동작 전압 레벨로서 사용될 수 있는 전압 레벨들의 정보 를 PMIC로부터 획득할 수 있다. DVFS 모듈은 현재 제 1 코어(또는 프로세서, 또는 SoC)의 온도 정보를 TMU로부터 획득할 수 있다. DVFS 모듈은 주파수 정보, 전압 정보, 및 온도 정보에 기반 하여 누설 전력을 계산하거나, 또는 미리 계산된 누설 전력을 포함하는 테이블을 스토리지 장치로부터 RAM으로 로드할 수 있다. S104 단계에서, DVFS 모듈은 각각의 가용 주파수들에 대한 에너지 소모를 계산할 수 있다. 예를 들어, DVFS 모듈은 S103 단계에서 획득된 정보에 기반하여, 각각의 가용 주파수들에 대한 동적 전력(Dynamic Power) 및 정적 전력(Static Power; 또는 누설 전력(Leakage Power))을 계산할 수 있다. DVFS 모듈은 계 산된 동적 전력에 기반하여 동적 에너지를 계산하고, 계산된 정적 전력에 기반하여 정적 에너지를 계산하고, 그 리고 동적 에너지 및 정적 에너지를 합함으로써, 각각의 가용 주파수들에 대한 에너지 소모를 계산할 수 있다. 동적 전력은 수학식 1에 기반하여 계산될 수 있다. 수학식 1"}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "수학식 1에서, Pdynamic은 동적 전력을 나타낼 수 있다. C는 회로의 정전 용량(capacitance)의 값으로, 제 1 코어 의 부하에 따라 결정될 수 있다. f는 제 1 코어의 동작 주파수(예를 들어, 가용 주파수들 중 어느 하나)를 나타 낼 수 있다. V는 코어의 동작 전압의 레벨을 나타낼 수 있다. DVFS 모듈은 가용 주파수들 각각에 대해, 현 재 제 1 코어로 공급되는(또는 공급될 예정인) 동작 전압의 레벨에 기반하여, 동적 전력을 계산할 수 있다. DVFS 모듈은 계산된 동적 전력에, 제 1 주파수의 동작 클럭이 인가될 시간(예를 들어, 워크로드 처리 시간)을 곱하여, 동적 에너지를 계산할 수 있다. 정적 전력은 제 1 코어의 온도 및 제 1 코어의 동작 전압의 레벨에 비례할 수 있다. DVFS 모듈은 가용 주 파수들 각각에 대해, 현재 제 1 코어로 공급되는(또는 공급될 예정인) 동작 전압의 레벨 및 TMU로부터 제 공된 온도 정보에 기반하여, 정적 전력을 계산할 수 있다. DVFS 모듈은 계산된 정적 전력에, 제 1 코어에 전원이 인가되는 시간을 곱하여, 정적 에너지를 계산할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 미리 계산된 동적 전력 및 미리 계산된 정적 전력을 참조함으로써, 에너지 소모를 계산할 수도 있다. 예를 들어, DVFS 모듈은 각각의 가용 주파수들에 대해, 현재 제 1 코어 로 공급되는(또는 공급될 예정인) 동작 전압의 레벨에 기반하여, 미리 계산된 동적 전력을 찾을 수 있다. DVFS 모듈은 각각의 가용 주파수들에 대해, 현재 제 1 코어로 공급되는(또는 공급될 예정인) 동작 전압의 레벨 및 TMU로부터 제공된 온도 정보에 기반하여, 미리 계산된 정적 전력을 찾을 수 있다. DVFS 모듈은 미 리 계산된 동적 전력 및 미리 계산된 정적 전력에 기반하여, 동적 에너지 및 정적 에너지를 계산하고, 계산된 동적 에너지 및 정적 에너지를 합함으로써, 제 1 코어의 현재 태스크를 처리하는 데 필요한 에너지 소모를 계산 할 수 있다. 몇몇 실시 예들에 있어서, 워크로드 처리 시간 또는 전원 인가 시간 등을 예측(또는 측정)하기 어려운 경우에, DVFS 모듈은 계산된 동적 전력 및 계산된 정럭 전력 각각에 대해 미리 정해진 단위 시간 등을 곱함으로써 단위 에너지 소모(또는 순간 에너지 소모)를 계산할 수 있다. 예를 들어, DVFS 모듈은 계산된 동적 전력에 단위 워크로드 처리 시간 또는 평균 워크로드 처리 시간 등과 같이, 미리 정해진 상수 시간을 곱함으로써, 단위 동적 에너지를 계산할 수 있다. 유사한 방식으로, DVFS 모듈은 계산된 누설 전력에 단위 전원 공급 시간, 최소 전원 공급 시간, 또는 평균 전원 공급 시간 등과 같이, 미리 정해진 상수 시간을 곱함으로써, 단위 정적에너지를 계산할 수 있다. S105 단계에서, DVFS 모듈은 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정할 수 있다. 예를 들어, DVFS 모듈은 S104 단계의 계산 결과에 기반하여, 가용 주파수들 중 그 에너지 소모가 최소인 주파수를 최적 주파수로서 결정할 수 있다. 이후, DVFS 모듈은 제 1 코어의 동작 주파수(예를 들어, CMU로부터 제 1 코어로 제공되는 동작 클럭의 주파수)를 최적 주파수로 스케일링할 수 있다. 몇몇 실시 예들에 있어서, 제 1 코어의 동작 주파수를 최적 주파수로 스케일링함과 동시에, DVFS 모듈은 제 1 코어의 동작 전압을 최적 전압으로 스케일링할 수 있다. 예를 들어, DVFS 모듈은 가용 주파수들 중 제 1 주파수에 대해 사용될 수 있는 제 1 가용 전압들을 PMIC로부터 제공된 전압 정보에 기반하여 찾을 수 있다. DVFS 모듈은 제 1 가용 전압들 각각에 대해, 제 1 주파수 하에서의 에너지 소모를 계산할 수 있다. 유사한 방식으로, DVFS 모듈은 가용 주파수들 각각에 대해 가용 전압들을 계산하고 그리고 가용 전압들 각 각에 대해, 대응하는 주파수 하에서의 에너지 소모를 계산할 수 있다. DVFS 모듈은 그 에너지 소모가 최소 인 주파수 및 전압의 쌍을 최적 주파수 및 최적 전압의 쌍으로서 선택할 수 있다. DVFS 모듈은 제 1 코어 의 동작 주파수를 최적 주파수로 스케일링하고, 그리고 제 1 코어의 동작 전압을 최적 전압으로 스케일링할 수 있다. 몇몇 실시 예들에 있어서, 제 1 코어의 동작 주파수를 최적 주파수로 스케일링한 후에, DVFS 모듈은 제 1 코어의 동작 전압을 최적 전압으로 스케일링할 수 있다. 예를 들어, DVFS 모듈은 최적 주파수와 함께 제 1 코어의 동작 전압으로 인가될 수 있는 가용 전압들을 PMIC로부터 제공된 전압 정보에 기반하여 찾을 수 있 다. DVFS 모듈은 가용 전압들 각각에 대해 에너지 소모를 계산하고, 그리고 그 에너지 소모가 최소인 전압 을 최적 전압으로 결정할 수 있다.도 3에 도시된 실시 예에서, DVFS 모듈은 제 1 코어에 의해 처리되는 태 스크가 요구하는 성능을 만족하는 가장 낮은 주파수 대신에, 제 1 코어에 의해 소모되는 에너지가 최소인 주파 수를 제 1 코어의 동작 주파수로 설정할 수 있다. 이때, DVFS 모듈은 정적 전력의 크기에 영향을 주는 다 양한 요소들을 고려하여 에너지 소모를 계산하고, 그리고 그 에너지 소모가 최소인 주파수를 제 1 코어의 동작 주파수로 설정할 수 있다. 이에 따라, 제 1 코어의 에너지 소모가 최소화될 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 S101 단계 내지 S105 단계들을 주기적으로 수행할 수 있다. 예를 들어, DVFS 모듈은 미리 결정된 주기로, 제 1 코어에 대해 S101 내지 S105 단계들을 수행할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 S101 내지 S105 단계들을, TMU로부터 제공되는 온도 정보에 응답하여 수행할 수 있다. 예를 들어, SoC의 온도 또는 프로세서의 온도가 미리 결정된 범위를 벗어 나는 것에 응답하여, DVFS 모듈은 코어들 각각에 대해 S101 내지 S105 단계들을 수행할 수 있다. 다 른 예를 들어, 제 1 코어의 온도가 미리 결정된 범위를 벗어나는 것에 응답하여, DVFS 모듈은 제 1 코어에 대해 S101 내지 S105 단계들을 수행할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 S101 내지 S105 단계들을, 제 1 코어의 동작 전압의 변화에 응답하 여 수행할 수 있다. 예를 들어, 제 1 코어의 동작 전압이 미리 결정된 단위 시간 동안 미리 결정된 값 이상으로 변하는 것에 응답하여, DVFS 모듈은 S101 내지 S105 단계들을 수행할 수 있다. 몇몇 실시 예들에 있어서, DVFS 모듈은 제 1 코어에 의해 새로운 태스크가 처리되기 시작하는 것에 응답하 여(또는 제 1 코어로 새로운 태스크가 할당되는 것에 응답하여) S101 내지 S105 단계들을 수행할 수 있다. 도 4는 본 개시의 몇몇 실시 예들에 따라, 주파수 테이블(TBF)을 도시한다. 도 1 내지 4를 참조하면, 주파수 테 이블(TBF)은 CMU에 의해 프로세서의 코어들 각각으로 제공되는 동작 주파수로서 사용될 수 있는 주파수들의 리스트일 수 있다. 예를 들어, CMU에 의해 생성되는 동작 주파수는 주파수들(f1, f2, …fn) 중 어느 하나일 수 있다(n은 자연수). 주파수 테이블(TBF)은 스토리지 장치에 저장될 수 있고, 그리고 프로세서의 요청에 응답하여 RAM(12 0)으로 로드될 수 있다. DVFS 모듈은 RAM으로 로드된 주파수 테이블(TBF)을 참조하여, 가용 주파수들 을 찾고 그리고 가용 주파수들 각각에 대해 에너지를 계산할 수 있다. 예를 들어, DVFS 모듈은 주파수들 (f1, f2, …fn) 중 요구 성능을 만족하는 최소 주파수 이상인 주파수들을 가용 주파수들로서 판단할 수 있다. 도 5는 본 개시의 몇몇 실시 예들에 따라, 전압 테이블(TBV)을 도시한다. 도 1, 3, 4, 및 5를 참조하면, 전압 테이블(TBV)은 PMIC로부터 프로세서로 공급되는 동작 전압 레벨로서 사용될 수 있는 전압 레벨들의 리 스트일 수 있다. 예를 들어, PMIC로부터 프로세서의 각 코어로 공급되는 동작 전압 레벨은 전압들(V1,V2, …Vm; m은 자연수) 중 어느 하나일 수 있다. 몇몇 실시 예들에 있어서, 동작 전압 레벨은 해당 코어의 동작 주파수에 맵핑될 수 있다. 예를 들어, 동작 주파 수에 따라, 동작 전압 레벨이 전압들(V1, V2, …Vm) 중 적어도 하나로 결정될 수 있다. 즉, 하나의 동작 주파수 에 대한 가용 전압들은 미리 결정될 수 있고, 그리고 하나의 동작 주파수에 대한 가용 전압의 개수는 하나 이상 일 수 있다. 전압 테이블(TBV)은 동작 전압 레벨 및 동작 주파수 사이의 맵핑 관계와 관련된 정보를 더 포함할 수 있다. 이에 따라, 동작 주파수 및 동작 전압 사이의 관계가 DVFS를 수행할 때 고려될 수 있다. 결과적으로, 에너지 소모 계산의 정확도가 개선되고, 그리고 DVFS의 성능이 개선될 수 있다. 전압 테이블(TBV)은 프로세서의 요청에 응답하여 RAM으로 로드될 수 있다. 예를 들어, 전압 테이블 (TBV)은 PMIC로부터 제공되거나, 또는 스토리지 장치에 미리 저장되어 있을 수 있다. DVFS 모듈은 RAM으로 로드된 전압 테이블(TBV)을 참조하여, 가용 주파수들 각각에 대해 에너지 소모를 계산할 수 있다. 도 6은 본 개시의 몇몇 실시 예들에 따라, 누설 전력 테이블(TBL)을 도시한다. 도 1, 도 3, 도 4, 도 5, 및 도 6을 참조하면, 누설 전력 테이블(TBL)은 PMIC로부터 프로세서로 공급되는 동작 전압 레벨로서 사용될 수 있는 전압 레벨 및 프로세서의 온도에 기반하여, 각각의 상태에 대해 미리 계산된 누설 전력의 리스트 일 수 있다. 몇몇 실시 예들에 있어서, 누설 전력을 매번 연산하는 대신에, DVFS 모듈은 누설 전력 테이블(TBL)을 참조 하여 가용 주파수들 각각에 대해 누설 전력을 찾을 수 있다. 예를 들어, 가용 주파수들 각각에 대해, DVFS 모듈 은 테이블(TBV)을 참조하여 대응하는 동작 전압의 레벨을 찾고, TMU로부터 제공되는 온도 정보에 기 반하여, 대응하는 누설 전력을 누설 전력 테이블(TBL)으로부터 찾을 수 있다. 예를 들어, 동작 전압의 레벨이 'V1' 이고 온도가 'tmp1'일 때, 누설 전력은 'PL1'일 수 있다. 동작 전압의 레 벨이 'V1' 이고 온도가 'tmp2'일 때, 누설 전력은 'PL2'일 수 있다. DVFS 모듈은 누설 전력 테이블(TBL) 에 포함된, 미리 계산된 누설 전력을 주어진 전압 정보 및 온도 정보에 기반하여 찾을 수 있다. 다른 예를 들어, 해당 코어(또는 프로세서, 또는 SoC)의 현재 온도 또는 해당 코어로 전달되는 동작 전압의 레벨이 누설 전력 테이블(TBL)의 인덱스들에 포함되지 않을 때, DVFS 모듈은 누설 전력 테이블 (TBL)에 기반하여 보간 연산을 수행함으로써, 대응하는 누설 전력을 계산할 수 있다. 예를 들어, 해당 코어의 현재 온도 'tmpcurr'가 수학식 2를 만족할 때, DVFS 모듈은 내분 연산을 수행함으로써, 해당 코어의 현재 온도 'tmpcurr'에 대응하는 누설 전력 PLcurr을 수학식 3과 같이 계산할 수 있다(a는 0 이상 1 이하의 실수). 유사 한 방식으로, DVFS 모듈은 누설 전력 테이블(TBL)의 인덱스들에 포함되지 않은 전압 레벨에 대해서도, 대 응하는 누설 전력을 계산할 수 있다. 수학식 2"}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "수학식 3"}
{"patent_id": "10-2021-0118488", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "몇몇 실시 예들에 있어서, 누설 전력 테이블(TBL)은 스토리지 장치에 저장되고 그리고 RAM으로 로드될 수 있다. 누설 전력 테이블(TBL)은 외부 장치에 의해 미리 생성되어 스토리지 장치에 저장될 수 있다. 또는, 누설 전력 테이블(TBL)은 프로세서에 의해 미리 생성되어 스토리지 장치에 저장될 수 있다. 도 7은 본 개시의 몇몇 실시 예들에 따라, 전력 테이블(TBP)을 도시한다. 도 1 내지 도 7을 참조하면, 전력 테 이블(TBP)은 CMU로부터 프로세서로 공급되는 동작 주파수, PMIC로부터 프로세서로 공급되는 동작 전압 레벨로서 사용될 수 있는 전압 레벨, 프로세서의 온도, 및 누설 전력에 기반하여, 각각의 상태 에 대해 미리 계산된 정적 전력 및 동적 전력의 리스트일 수 있다. 전력 테이블(TBP)은 다차원 테이블로서 구현 될 수 있다.몇몇 실시 예들에 있어서, 동적 전력 및 정적 전력을 매번 계산하는 대신에, DVFS 모듈은 전력 테이블 (TBP)을 참조하여 가용 주파수들 각각에 대해 에너지 소모를 계산할 수 있다. 예를 들어, DVFS 모듈은 가 용 주파수들 각각에 대해, PMIC로부터 제공되는 전압 정보 및 TMU로부터 제공되는 온도 정보에 기반하 여, 대응하는 누설 전력 및 동적 전력을 전력 테이블(TBP)으로부터 찾을 수 있다. DVFS 모듈은 찾은 누설 전력 및 동적 전력에 기반하여, 에너지 소모를 계산할 수 있다. 예를 들어, 동작 주파수가 'f1'이고, 동작 전압의 레벨이 'V1' 이고, 온도가 'tmp1'일 때, 누설 전력은 'PL1'이 고, 그리고 동적 전력은 'PD1'일 수 있다. 동작 전압의 레벨이 'V1' 이고 온도가 'tmp2'일 때, 누설 전력은 'PL2'이고, 그리고 동적 전력은 'PD1'일 수 있다. DVFS 모듈은 전력 테이블(TBP)에 포함된, 미리 계산된 누설 전력 및 동적 전력을 주어진 전압 정보 및 온도 정보에 기반하여 찾을 수 있다. DVFS 모듈은 찾은 누 설 전력에, 해당 코어에 전원이 인가되는 시간을 곱하여, 정적 에너지를 계산할 수 있다. DVFS 모듈은 찾 은 동적 전력에, 해당 주파수의 동작 클럭이 인가될 시간을 곱하여, 동적 에너지를 계산할 수 있다. 다른 예를 들어, 해당 코어(또는 프로세서, 또는 SoC)의 현재 온도 또는 해당 코어의 동작 전압의 레 벨 등이 전력 테이블(TBP)의 인덱스들에 포함되지 않을 때, DVFS 모듈은 전력 테이블(TBP)에 기반하여 보 간 연산을 수행함으로써, 해당 코어의 현재 온도에 대응하는 누설 전력을 계산할 수 있다. 예를 들어, DVFS 모 듈은 도 6을 참조하여 상술된 방식과 유사한 방식으로, 전력 테이블(TBP)의 인덱스들에 포함되지 않는 동 작 전압의 레벨 또는 온도에 대응하는 누설 전력 및 동적 전력을 계산할 수 있다. 몇몇 실시 예들에 있어서, 전력 테이블(TBP)은 스토리지 장치에 저장되고 그리고 RAM으로 로드될 수 있다. 전력 테이블(TBP)은 외부 장치에 의해 미리 생성되어 스토리지 장치에 저장될 수 있다. 또는, 전력 테이블(TBP)은 프로세서에 의해 미리 생성되어 스토리지 장치에 저장될 수 있다. 도 8은 본 개시의 몇몇 실시 예들에 따라, 프로세서의 블록도를 도시한다. 도 1, 2, 및 8을 참조하면, SoC는 도 1의 프로세서 대신에 도 8의 프로세서를 포함할 수 있다. 프로세서는 코어들 (CR1~CR5)을 포함하는 멀티 코어 프로세서로서 이해될 수 있다. 프로세서에 포함된 코어들의 개수는 도시 된 실시 예에 한정되지 아니한다. 프로세서는 코어들(CR1~CR5) 및 DVFS 모듈을 포함할 수 있다. DVFS 모듈은 도 1의 DVFS 모듈과 유사하게 구현될 수 있고, 그리고 그와 유사하게 동작할 수 있다. 상술된 바와 같이, 코어들(CR1~CR5)은 독립된 동작 블록 및/또는 독립된 공급 전원에 의해서 동작하는 복수의 클러스터들(CL1, CL2)로 그룹화될 수 있다. 도시된 실시 예에서, 클러스터(CL1)는 코어들(CR1, CR2, CR3)을 포 함할 수 있고, 그리고 클러스터(CL2)는 코어들(CR4, CR5)을 포함할 수 있다. 프로세서에 포함된 클러스터 들의 개수는 도시된 실시 예에 한정되지 아니한다. 동일한 클러스터에 속하는 코어들은 동일한 동작 클럭에 응답하여 동작하는 클럭 도메인 및/또는 동일한 공급 전원에 응답하여 동작하는 파워 도메인에 종속될 수 있다. 예를 들어, 클러스터(CL1)에 포함된 코어들(CR1, CR2, CR3)은 모두 제 1 클럭 및/또는 제 1 전원에 응답하여 동작할 수 있다. 클러스터(CL2)에 포함된 코어들 (CR4, CR5)는 모두 제 2 클럭 및/또는 제 2 전원에 응답하여 동작할 수 있다. 몇몇 실시 예들에 있어서, 하나의 전압 도메인에 종속된 코어들 중 어느 하나에 대해 DVFS를 수행할 때, DVFS 모듈은 다른 코어들의 동작 전압의 레벨을 고려할 수 있다. 예를 들어, DVFS 모듈은 코어(CR1)에 대 해 도 3의 순서도에 기반하여 DVFS를 수행할 때, PMIC로부터 코어(CR1)가 종속된 전압 도메인의 현재 전압 레벨(예를 들어, 코어들(CR2, CR3)의 현재 공급 전원의 전압 레벨)을 포함하는 전압 정보를 더 획득할 수 있다. DVFS 모듈은 획득된 전압 정보에 기반하여, 가용 주파수들 각각에 대해 코어(CR1)의 에너지 소모를 계산하 고, 그리고 에너지 소모가 최소인 주파수를 최적 주파수로서 결정할 수 있다. 이에 따라, DVFS 모듈에 의 해 계산되는 에너지 소모의 정확도가 상승하고, 결과적으로 코어(CR1)의 에너지 소모가, 코어(CR1)의 워크로드 처리 속도를 고려하면서, 최소화될 수 있다. 도 9는 본 개시의 몇몇 실시 예들에 따라, 전자 장치의 블록도를 도시한다. 도 9를 참조하면, 본 발명의 실시 예에 따른 전자 장치는 이미지 처리부, 무선 송수신부, 오디오 처리부, 이미지 파일 생성부, 불휘발성 메모리 장치, 사용자 인터페이스, 그리고 컨트롤러를 포함한다. 이미지 처리부는 렌즈, 이미지 센서, 이미지 프로세서, 그리고 디스플레이부를 포함한다. 무선 송수신부는 안테나, 트랜시버, 모뎀을 포함한다. 오디오 처리부(130 0)는 오디오 프로세서, 마이크, 그리고 스피커를 포함한다. 여기서, 불휘발성 메모리 장치는 본 발명의 실시 예에 따른 메모리 카드(MMC, eMMC, SD, micro SD) 등으 로 제공될 수 있다. 더불어, 컨트롤러는 응용 프로그램, 운영 체제 등을 구동하는 시스템 온 칩(SoC)으로 제공될 수 있다. 시스템 온 칩(SoC)에서 구동되는 운영 체제의 커널(Kernel)에는 본 발명의 실시 예에 따라 DVFS를 수행할 수 있는 모듈(예를 들어, 도 1의 DVFS 모듈 또는 도 8의 DVFS 모듈)이 포함될 수 있다. 상술된 내용은 본 개시를 실시하기 위한 구체적인 실시 예들이다. 본 개시는 상술된 실시 예들뿐만 아니라, 단 순하게 설계 변경되거나 용이하게 변경할 수 있는 실시 예들 또한 포함할 것이다. 또한, 본 개시는 실시 예들을 이용하여 용이하게 변형하여 실시할 수 있는 기술들도 포함될 것이다. 따라서, 본 개시의 범위는 상술된 실시 예들에 국한되어 정해져서는 안 되며 후술하는 특허청구범위뿐만 아니라 이 발명의 특허청구범위와 균등한 것들 에 의해 정해져야 할 것이다."}
{"patent_id": "10-2021-0118488", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 몇몇 실시 예들에 따라, 컴퓨팅 시스템의 블록도를 도시한다. 도 2는 본 개시의 몇몇 실시 예들에 따라, 도 1의 컴퓨팅 시스템에 구현되는 DVFS 모듈을 도시한다. 도 3은 본 개시의 몇몇 실시 예들에 따라, DVFS를 수행하는 방법의 순서도를 도시한다. 도 4는 본 개시의 몇몇 실시 예들에 따라, 주파수 테이블을 도시한다. 도 5는 본 개시의 몇몇 실시 예들에 따라, 전압 테이블을 도시한다. 도 6은 본 개시의 몇몇 실시 예들에 따라, 누설 전력 테이블을 도시한다. 도 7은 본 개시의 몇몇 실시 예들에 따라, 전력 테이블을 도시한다. 도 8은 본 개시의 몇몇 실시 예들에 따라, 프로세서의 블록도를 도시한다. 도 9는 본 개시의 몇몇 실시 예들에 따라, 전자 장치의 블록도를 도시한다."}
