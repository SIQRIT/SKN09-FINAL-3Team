{"patent_id": "10-2024-0115244", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0033022", "출원번호": "10-2024-0115244", "발명의 명칭": "API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템", "출원인": "주식회사 소프트프릭", "발명자": "김동철"}}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템에 있어서,대상 시스템 내 API 엔드포인트를 탐색하고, 상기 탐색 결과를 기초로 API 인벤토리를 자동 생성하며, 상기 API인벤토리에 대해 서비스별 또는 애플리케이션별 자동 그룹핑을 수행하는 API 탐색부;상기 API의 보안 취약점, 잘못된 구성, 상기 API의 로직을 파고드는 공격, 또는 상기 API의 설계 결함을 식별하고, 상기 식별된 결과에 기초하여 상기 API의 보안과 관련된 하나 이상의 기능을 수행하는 적응형 AI 모듈; 및 API의 잘못된 구성을 식별하고 알려진 취약점을 탐지하는 API 구성 관리부를 포함하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 적응형 AI 모듈은,세션 식별자를 기반으로 식별된 API 트래픽과 비-API 트래픽을 분석하여 수집된 데이터셋을 이용하여 학습된 모델을 이용하여 API 트래픽을 식별하고, 식별된 API 트래픽으로부터 API 엔드포인트를 식별하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2 항에 있어서,상기 데이터셋은 HTTP(HyperText Transfer Protocol) 요청(request) 및 응답(response)의 컨텐츠 유형(content-type), 파일 확장(file extension) 및 인증(authorization)에 기초하여 생성되는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2 항에 있어서,상기 적응형 AI 모듈은,상기 식별된 API 트래픽 중 성공적인 요청을 식별하고, 상기 API 엔드포인트에 대한 각 요청의 서로 다른 입력매개변수를 위치와 유형에 따라 구문 분석을 수행하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2 항에 있어서,상기 적응형 AI 모듈은,API에 예상되는 입력 매개변수와 유형을 정의하는 입력 스키마를 자동 생성하여 공통된 매개 변수를 준수하도록입력을 제한하며, 상기 입력 스키마와 일치하지 않는 API 요청을 제한하고, API 요청에 대한 스키마 검증을 수행하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2025-0033022-3-제1 항에 있어서,상기 적응형 AI 모듈은,정규 표현식, 개체명 인식, 유효성 검사, 구문 분석을 적용하여 API에서 제공되는 민감정보 및 개인정보를 자동으로 탐지하여 비식별화하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6 항에 있어서,상기 개체명은 사전 훈련된 자연어 처리 모델을 기반으로 전이학습(Transfer Learning)한 모델을 통해탐지되며,상기 비식별화는 암호화, 대체, 마스킹, 삭제 중 적어도 하나의 방법을 통해 수행되는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1 항에 있어서,상기 적응형 AI 모듈은,API의 로그 시퀀스를 기반으로 엔드포인트의 이상징후를 탐지하는,API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8 항에 있어서,상기 적응형 AI 모듈은,API 콜 시퀀스의 의미 정보와 순서 정보를 결합하여 특징 생성 방법을 정의하고, 어텐션(attention) 메커니즘을통해 상기 API 콜 시퀀스 내 각 API 콜의 가중치를 계산하여 악성행위를 탐지 및 분류하는, API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8 항에 있어서,상기 적응형 API 모듈은상기 API 콜 시퀀스에 대한 워드 임베딩(word embedding)을 수행하고, 상기 API 콜 시퀀스의 의미적 정보를 추출하여 상기 악성 행위의 패턴을 분석하며, 각 시간 단계에서 입력된 API 콜의 의미적 정보를 포함하는 임베딩벡터를 기반으로 각 API 콜 사이의 호출 관계를 학습하고, 학습된 API 콜 사이의 호출 관계를 이용하여 API 콜시퀀스 내의 악성 행위를 위한 특정 API 콜을 인식하는, API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1 항에 있어서,상기 적응형 AI 모듈은,SR(Spectral Residual) 모델 및 CNN(Convolution Neural Network) 모델을 기반으로 API 트래픽의 시계열 이상을 탐지하되,상기 CNN 모델은 상기 SR 모델을 통해 시계열 데이터로부터 생성된 합성 데이터를 이용하여 학습되는,공개특허 10-2025-0033022-4-API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템이 제공된다. 본 발명의 일 실시예에 따른 지능형 통합 API 보안 시스템은 대상 시스템 내 API 엔드포인트를 탐색하고, 상기 탐색 결과를 기초로 API 인벤토리를 자동 생성하며, 상기 API 인벤토리에 대해 서비스별 또는 애플리케이션별 자동 그룹핑을 수행하는 API 탐색부; 상기 API의 보안 취약점, 잘못된 구성, 상기 API의 로직을 파고드는 공격, 또는 상기 API의 설계 결함을 식별하 고, 상기 식별된 결과에 기초하여 상기 API의 보안과 관련된 하나 이상의 기능을 수행하는 적응형 AI 모듈; 및 API의 잘못된 구성을 식별하고 알려진 취약점을 탐지하는 API 구성 관리부를 포함할 수 있다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 API 보안 시스템에 관한 것으로, 더욱 상세하게는 적응형 인공지능을 기반으로 다양한 환경에서 API 보안을 수행할 수 있는 API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템에 관한 것이다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "API(Application Programming Interface)란 프로그램 간 상호작용을 지원하는 매개체로, 개발자들의 코딩 과정 을 표준화 및 간소화함으로써 빠른 프로세스 처리와 시스템간 협업을 용이하게 하는 소프트웨어 툴이다. 최근 마이크로서비스가 활성화되면서 소프트웨어 솔루션에 있어 API 활용이 급증하고 있으며, 클라우드 마이그 레이션으로 서비스 제공 영역이 증가하면서 API 보안 기술의 중요성 또한 커지고 있다. 미국 등 선진국에서는 API 보안 솔루션 시장이 이미 활성화되어 있으나 국내에서는 API 보안 자체에 대한 인지 도가 매우 낮으며, 유력한 API 보안 솔루션이 부재하여 외산 솔루션에 대한 의존도가 높은 상황이다. 가령, 국내에서는 많은 기업들이 웹 방화벽 방식을 이용하여 API 보안을 커버하고 있으나, 이러한 웹 방화벽은 범용적인 보안 솔루션이기 때문에, 개별 애플리케이션의 기능과 목적에 맞는 최적화된 보안 기능을 제공하지 못 하는 한계가 있다. 한편, 전세계적으로 API 공격유형이 다양화되고 API 보안 취약점을 대상으로 하는 공격이 증가하면서 막대한 사 회적, 경제적 손실 발생이 발생하고 있는 바 이를 방지할 수 있는 솔루션이 필요한 상황이다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허공보 제10-1722868호 (2017.04.05 공개)"}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예들을 통해 해결하고자 하는 기술적 과제는, API 보안 패러다임 및 시장 니즈에 대응하여, 다양 한 API 운영 환경에서 API 보안을 수행할 수 있는 API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템 을 제공하는 것이다. 본 발명의 실시예들을 통해 해결하고자 하는 다른 기술적 과제는, 개별 애플리케이션의 기능과 목적에 맞는 최 적화된 보안 기능을 제공하고, 다양한 API 공격 유형과 API 보안 취약점에 효과적으로 대응할 수 있는 API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템을 제공하는 것이다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 기술적 과제를 해결하기 위한, 본 발명의 실시예들에 따른 API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템은 대상 시스템 내 API 엔드포인트를 탐색하고, 상기 탐색 결과를 기초로 API 인벤토리를 자동 생성하며, 상기 API 인벤토리에 대해 서비스별 또는 애플리케이션별 자동 그룹핑을 수행하는 API 탐색부; 상기 API의 보안 취약점, 잘못된 구성, 상기 API의 로직을 파고드는 공격, 또는 상기 API의 설계 결함을 식별하고, 상기 식별된 결과에 기초하여 상기 API의 보안과 관련된 하나 이상의 기능을 수행하는 적응형 AI 모듈; 및 API 의 잘못된 구성을 식별하고 알려진 취약점을 탐지하는 API 구성 관리부를 포함할 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은 세션 식별자를 기반으로 식별된 API 트래픽과 비-API 트래픽을 분석하여 수집된 데이터셋을 이용하여 학습된 모델을 이용하여 API 트래픽을 식별하고, 식별된 API 트래픽으로부터 API엔드포인트를 식별할 수 있다. 일 실시예로서, 상기 데이터셋은 HTTP(HyperText Transfer Protocol) 요청(request) 및 응답(response)의 컨텐 츠 유형(content-type), 파일 확장(file extension) 및 인증(authorization)에 기초하여 생성될 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은,상기 식별된 API 트래픽 중 성공적인 요청을 식별하고, 상기 API 엔드포 인트에 대한 각 요청의 서로 다른 입력 매개변수를 위치와 유형에 따라 구문 분석을 수행할 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은, API에 예상되는 입력 매개변수와 유형을 정의하는 입력 스키마를 자동 생성하여 공통된 매개 변수를 준수하도록 입력을 제한하며, 상기 입력 스키마와 일치하지 않는 API 요청을 제한 하고, API 요청에 대한 스키마 검증을 수행할 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은, 정규 표현식, 개체명 인식, 유효성 검사, 구문 분석을 적용하여 API에 서 제공되는 민감정보 및 개인정보를 자동으로 탐지하여 비식별화할 수 있다. 일 실시예로서, 상기 개체명은 사전 훈련된 자연어 처리 모델을 기반으로 전이학습(Transfer Learning)한 모델 을 통해 탐지되며, 상기 비식별화는 암호화, 대체, 마스킹, 삭제 중 적어도 하나의 방법을 통해 수행될 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은 API의 로그 시퀀스를 기반으로 엔드포인트의 이상징후를 탐지할 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은 API 콜 시퀀스의 의미 정보와 순서 정보를 결합하여 특징 생성 방법을 정의하고, 어텐션 메커니즘을 통해 상기 API 콜 시퀀스 내 각 API 콜의 가중치를 계산하여 악성행위를 탐지 및 분류할 수 있다. 일 실시예로서, 상기 적응형 API 모듈은 상기 API 콜 시퀀스에 대한 워드 임베딩(word embedding)을 수행하고, 상기 API 콜 시퀀스의 의미적 정보를 추출하여 상기 악성 행위의 패턴을 분석하며, 각 시간 단계에서 입력된 API 콜의 의미적 정보를 포함하는 임베딩 벡터를 기반으로 각 API 콜 사이의 호출 관계를 학습하고, 학습된 API 콜 사이의 호출 관계를 이용하여 API 콜 시퀀스 내의 악성 행위를 위한 특정 API 콜을 인식할 수 있다. 일 실시예로서, 상기 적응형 AI 모듈은 SR(Spectral Residual) 모델 및 CNN(Convolution Neural Network) 모델 을 기반으로 API 트래픽의 시계열 이상을 탐지하되, 상기 CNN 모델은 상기 SR 모델을 통해 시계열 데이터로부터 생성된 합성 데이터를 이용하여 학습될 수 있다. 일 실시예로서, 상기 API 구성 관리부는 상기 대상 시스템의 API 인벤토리의 잘못된 구성을 확인하고, 상기 잘 못된 구성의 심각성, 취약점을 확인하여 상기 잘못된 구성에 대한 권장사항을 제공할 수 있다. 일 실시예로서, API의 행위와 관련된 데이터를 수집하고, 상기 수집된 데이터를 기초로 상기 API의 행위와 관련 된 위협을 탐지하는 런타임 위협 분석부를 더 포함할 수 있다. 일 실시예로서, 상기 런타임 위협 분석부는 상기 데이터를 기초로, 규칙 기반 이상 행위를 탐지하거나, 로그 또 는 이벤트 기반 이상징후를 탐지하거나, 콜 시퀀스 기반 악성행위를 탐지하거나, 트래픽 이상 징후를 탐지하거 나, OWASP API 보안 취약점을 탐지하거나,CVE 취약점을 탐지하거나, DDoS공격 또는 Brute Force 공격을 탐지할 수 있다. 일 실시예로서, 소프트웨어 개발 수명 주기(SDLC)의 일부로서 API의 보안을 테스트하는 API 테스팅부를 더 포함 할 수 있다. 일 실시예로서, 상기 API 테스팅부는 API 유형별 테스트 사례를 저장하고, 상기 테스트 사례를 기초로 적어도 하나의 테스트 시나리오를 생성하고, 상기 테스트 시나리오에 기초한 테스트를 실행하고, 상기 테스트의 결과를 출력하며, 상기 테스트는 블랙박스 테스트 또는 화이트박스 테스트를 포함할 수 있다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상기한 본 발명의 실시예들에 따르면, 변화하는 API 보안 패러다임 및 시장 니즈에 대응할 수 있고, 다양한 API 운영 환경에서 API 보안을 수행할 수 있는 API 보안 위협에 대응하기 위한 지능형 통합 API 보안 시스템이 제공 된다. 또한, 개별 애플리케이션의 기능과 목적에 맞는 최적화된 보안 기능을 제공할 수 있으며, 다양한 API 공격 유형 과 API 보안 취약점에도 효과적으로 대응할 수 있게 된다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 발명의 실시예들을 상세히 설명한다. 본 발명의 이점 및 특징, 그리고 그것들 을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시예들을 참조하면 명확해질 것이다. 그러 나 본 발명의 기술적 사상은 이하의 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으"}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "며, 단지 이하의 실시예들은 본 발명의 기술적 사상을 완전하도록 하고, 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 본 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명의 기술적 사상은 청구 항의 범주에 의해 정의될 뿐이다. 각 도면의 구성요소들에 참조부호를 부가함에 있어서, 동일한 구성요소들에 대해서는 비록 다른 도면상에 표시 되더라도 가능한 한 동일한 부호를 가지도록 하고 있음에 유의해야 한다. 또한, 본 발명을 설명함에 있어, 관련 된 공지 구성 또는 기능에 대한 구체적인 설명이 본 발명의 요지를 흐릴 수 있다고 판단되는 경우에는 그 상세 한 설명은 생략한다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있다. 또 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니 다. 본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 또한, 본 발명의 구성 요소를 설명하는 데 있어서, 제1, 제2, A, B, (a), (b) 등의 용어를 사용할 수 있다. 이 러한 용어는 그 구성 요소를 다른 구성 요소와 구별하기 위한 것일 뿐, 그 용어에 의해 해당 구성 요소의 본질 이나 차례 또는 순서 등이 한정되지 않는다. 어떤 구성 요소가 다른 구성요소에 \"연결\", \"결합\" 또는 \"접속\"된 다고 기재된 경우, 그 구성 요소는 그 다른 구성요소에 직접적으로 연결되거나 또는 접속될 수 있지만, 각 구성 요소 사이에 또 다른 구성 요소가 \"연결\", \"결합\" 또는 \"접속\"될 수도 있다고 이해되어야 할 것이다. 이하, 본 발명의 몇몇 실시예들에 대하여 첨부된 도면에 따라 상세하게 설명한다. 도 1은 본 발명의 일 실시예에 따른, 적응형 인공지능 기반의 API 보안 시스템을 나타내는 개요도이다. 도 1에 도시된 바와 같이, API 보안 시스템은 외부 환경(10, 20)과 네트워크를 통해 연결되어, 외부 환경 (10, 20)의 API를 분석하여 보안 취약점을 탐지하고 그에 대한 대응 조치를 수행할 수 있다. 본 발명의 실시예에서 외부 환경(10, 20)은 클라우드 환경 또는 온프레미스 환경을 포함할 수 있으며, 상기 외부 환경(10, 20)이 구동되는 장치는 서버 장치로 한정되지 않는다. 예를 들어, 상기 외부 환경(10, 20)은 사용자 단말에서 구동될 수도 있으며, 상기 사용자 단말은 모바일 어플리 케이션을 구동 가능한 모바일 디바이스로서, 퍼스널 컴퓨터(PC), 노트북, 태블릿, 휴대폰, 스마트폰, 웨어러블 디바이스(예를 들어, 워치형 단말기)등을 포함한 다양한 전자 장치를 포함할 수 있다.API 보안 시스템의 상세 구성 및 이를 이용한 구체적인 동작방식에 대해서는 도 2 이하를 참조하여 상세히 설명한다. 도 2는 도 1에 도시된 API 보안 시스템의 상세 구성을 예시적으로 나타내는 블록도이다. 도 2를 참조하면, API 보안 시스템은 적응형 AI 모듈, API 탐색부, API 구성 관리부, 런타임 위협 분석부 , 및/또는 API 테스팅부를 포함할 수 있다. 다만, 이는 API 보안 시스템의 핵심 구성만을 나열 한 것이며, API 보안 시스템의 구성요소는 그에 한정되지 않는다. 예를 들어, API 보안 시스템은 대 시보드, UI, 백엔드, 3nd 파티 연동, 데이터 수집 어댑터, 및/또는 API 데이터 레이크를 더 포함할 수 있다. API 보안 시스템은 도 2에 도시된 각 구성들을 통해 API 보안을 위한 다양한 동작들을 수행할 수 있다. 예를 들어, API 보안 시스템은 API 탐색을 목적으로, API 가시성 확보를 위해 조직이 생성하고 사용하는 API 의 인벤토리를 자동으로 생성하고, 보안 및 개인 정보 유출 문제에 대한 취약점을 가질 수 있는 Unmanaged API, Unsecured API 를 자동으로 탐색하고, HTTP, RESTful, GraphQL, SOAP, gRPC 의 API 를 자동으로 탐색할 수 있다. 또는, API 보안 시스템은 API 구성 관리를 목적으로, API 의 잘못된 구성의 심각성 및 위험한 부분이 있는 지 확인, 평가하고 해결 방법에 대한 권장 사항을 제공하고, API 에서 사용되는 개인 및 민감 정보에 대한 자동 분류 및 데이터 플로우 탐지하고, OWASP API Top 10 을 포함하는 API 취약점 탐지할 수 있다. 또는, API 보안 시스템은 런타임 위협 분석을 목적으로, API 의 행위와 행위와 관련된 데이터(로그, 트래 픽, 설정 등)를 수집 및 모니터링하고, 적응형 AI를 적용하여 높은 정확도로 데이터 유출 및 위조, 잘못된 구성, 정책 위반, 의심스러운 행위 및 공격 등 광범위한 API 취약점을 탐지할 수 있다. 또는, API 보안 시스템은 자동화된 API 테스팅을 목적으로, 소프트웨어 개발 수명 주기의 일부로써 API의 보안을 테스트하여 운영 전 취약점을 식별하고, CI/CD 파이프라인과 통합하여 API가 보안 취약점을 가지고 구현 되지 않도록 하고, OWASP API Top 10 을 포함한 API 중심의 자동화된 테스트 케이스를 제공할 수 있다. 이를 통해, API 보안 시스템은 온프라미스 및 클라우드 등 다양한 환경의 API 보안을 위한 통합 플랫폼을 제공할 수 있으며, 적응형 AI 를 활용한 API 탐색, API 구성관리, 개인 및 민감정보 유출 방지, API 행위 분석, 자동화된 API 테스팅 기능을 구현하고, Zero-Trust 기반 클라우드 보안위협 플랫폼 기술을 제공할 수 있 다. 이하에서는, 도 2에 도시된 각 주요 요소(110, 120, 130, 140, 150)의 상세 구성 및 동작을 설명하기로 한다. 도 3 내지 도 5는 도 2에 도시된 적응형 API 모듈을 이용한 API 오토 디스커버리 기능을 설명하기 위한 도 면들이다. 적응형 API 모듈은 API 오토 디스커버리를 위해, 세션(session)에서 발생한 트래픽 정보를 바탕으로 데이 터셋을 구성하고, 빠른 추론이 가능한 Catboost 모델을 통해 세션 ID 없이 모든 API 트래픽을 자동으로 탐색하 여 기존 세션 ID 기반 API 디스커버리(Discovery) 문제점을 개선하며, 성공적인 API 요청에 대한 매개변수를 파 싱하여 입력 스키마를 생성하고, API 공격 보호를 위한 스키마 유효성 검사를 수행한다. 도 3은 적응형 API 모듈의 API 트래픽 수집 및 특징 추출 방법을 나타낸다. 적응형 API 모듈은 관리 자(manager)로부터 입력받은 세션 ID를 통해 선별된 API 트래픽과 과적합(overfitting) 방지를 위해 비 API 트 래픽을 수집하여 HTTP(HyperText Transfer Protocol) 요청(request) 및 응답(response)의 컨텐츠 유형 (content-type) 특징, 파일 확장(file extension) 특징, 인증(authorization) 등의 특징을 기반으로 데이터셋 을 생성할 수 있다. 도 4는 적응형 API 모듈의 API 엔드포인트 자동 탐색 방법을 나타낸다. 적응형 API 모듈은 수집된 데 이터셋을 이용하여 모델을 학습하고, 학습된 모델을 이용하여 세션 ID 없이 모든 API 트래픽을 API 트래픽 또는 비-API 트래픽으로 분류할 수 있다. 이때, 적응형 API 모듈은 분류 알고리즘으로 그래디언트 부스팅 (Gradient Boosting) 모델인 캣부스트(CatBoost)를 사용하여 API 트래픽을 분류할 때 높은 분류 성능과 빠른 추 론이 가능하게 할 수 있다. 적응형 API 모듈은 분류된 API 트래픽에 기초하여 API 엔드포인트를 식별할 수 있다. 이러한 방식으로, API 모듈은 세션 ID 기반 API 디스커버리의 문제점인 세션 ID 탐색의 어려움, 인증되지 않은 API 탐색의 불가능 및 API 탐색을 위해 많은 시간이 소요되는 단점을 개선할 수 있다. 도 5는 적응형 API 모듈의 API 엔드포인트 입력 스키마 생성 방법을 나타낸다. 적응형 API 모듈은 API 엔드포인트에 대한 스키마 자동 생성 및 유효성 검사를 수행한다. 이때, 적응형 API 모듈은 CatBoost 모델로부터 API 트래픽으로 분류된 것 중, 성공적인 요청을 식별하고, API 엔드 포인트에 대한 각 요청의 서로 다른 입력 매개 변수를 위치와 유형에 따라 구문 분석을 수행한다. 이때, 적응형 API 모듈은 스키마 학습 을 통해 각 API에 예상되는 입력 매개변수와 유형을 정의하는 입력 스키마(OpenAPI formatted schema)를 자동 생성하여 공통된 매개 변수를 준수하도록 입력을 제한하고, API 요청의 body, path, query 등의 스키마 검증을 통해 OWASP 상위 10개의 API 공격을 보호할 수 있다. 한편, 적응형 API 모듈은 민감정보 및 개인정보를 탐지하고 비식별화할 수 있다. 적응형 API 모듈은 정규 표현식, 개체명 인식, 유효성 검사, 구문 분석을 적용하여 API에서 제공되는 민감 정보, 개인정보를 자동으로 탐지하고 비식별화 처리할 수 있다. 이때, 개체명 인식을 위해 spaCy, Stanza, Transformer 등의 사전 훈련된 자연어 처리 모델을 기반으로 전이학습(Transfer Learning)한 모델을 통해 신용 카드, 전화번호, 이름, 주민등록번호, 이메일 주소, 국적, 위치, 금융 데이터, 운전면허번호, 여권번호 등의 개 인정보 및 민감정보를 탐지하고, 암호화, 대체, 마스킹, 삭제 방법으로 비식별화를 수행할 수 있다. 또한, 적응형 API 모듈은 로그 이벤트 기반으로 API 엔드포인트의 이상 징후를 탐지할 수 있다. 적응형 API 모듈은 로그 메시지를 구조화된 형식으로 변환하여 로그 데이터의 불안정성과 변동성에 대응할 수 있다. 적응형 API 모듈은 인코딩된 고정길이의 파스 트리(Parse Tree)를 생성하여 로그 메시지를 구문 분석하며, 로그 내 IP 주소, 파일 이름 등과 같은 다양한 특정 정보를 추상화하여 정확성과 효율성을 고려한 로 그 분석법을 수행할 수 있다. 적응형 API 모듈은 로그 시퀀스를 기반으로 엔드포인트의 이상징후를 탐지하여, 엔드포인트의 위협을 예방 하고 관리할 수 있다. 적응형 API 모듈은 로그 데이터를 구조화된 형식으로 변경하고, 로그에 포함된 의미 정보(Semantic information)를 추출하여 고정 차원의 벡터로 변환하고, 전처리(pre-processing), 워드 벡터화 (word Vectorization), TF-IDF (Term Frequency - Inverse Document Frequency)의 3가지 단계를 수행하여 시멘 틱 벡터(Semantic vector)를 생성한다. 이 때, 적응형 API 모듈은로그 시퀀스의 변화에 민감하지 않은 Attention based Bi-LSTM 모델을 사용하여 로그 시퀀스 내 각 로그 이벤트의 중요성을 학습하고 이상 탐지를 수 행한다. 또한, 적응형 API 모듈은 API 콜 시퀀스 기반으로 악성행위 탐지 및 분류를 수행할 수 있다. 적응형 API 모듈은 API 콜 시퀀스(Call Sequence)의 의미 정보(Semantic information)와 순서 정보 (Sequence Information)를 결합한 특징 생성 방법을 정의하고, Attention 매커니즘을 통해 시퀀스 내 각 API Call의 가중치를 계산하여 모델의 악성코드 분류 성능을 높이며, Ransomware, DDos attack, Work, Infectious virus, Mining program, Backdoor 등의 악성행위 탐지 및 분류를 수행할 수 있다. 이를 위한 적응형 API 모듈에서 수행되는 구체적인 방법이 도 6에 도시된다. 도 6을 참조하면, 데이터 준비 단계에서, API 콜 시퀀스(Call Sequence)를 추출하고, 분류 모델에 적용하기 위 한 데이터 전처리 과정이 수행된다. 이때, 악성 행위는 탐지를 피하기 위해서 정상 API 콜 시퀀스에 삽입되거나, 무의미한 API Call을 사용하는 난독화 기술로 인해 샘플링되는 API 콜 시퀀스의 길이가 다르기 때 문에 잘라내기(truncation) 또는 패딩(padding) 작업을 통해 고정 차원의 벡터를 생성할 수 있다. API2Vec 단계에서 API 콜 시퀀스를 벡터화하기 위해서 API2Vec을 이용하여 워드 임베딩(word embedding)이 수 행된다. API2Vec은 원-핫 인코딩(One-hot encoding)을 통해 API 콜 시퀀스를 고차원의 희소 벡터로 변환하고, Skip-Gram 모델을 기반으로 API 호출 간의 관계를 학습하여 입력층과 은닉층의 가중치를 계산한 출력 벡터를 생 성한다. 이때, 출력 벡터는 API 호출 간의 의미적 유사성을 반영한 워드 벡터(word vector)이며, 유사한 기능을 가진 API 호출은 가까운 벡터 공간에 위치한다. 최종적으로, 생성된 저차원의 워드 벡터는 사전 형태로 저장되 어 모델 훈련 과정에서 API 호출의 패턴 학습 및 예측에 사용된다. 의미정보 추출 단계에서 API 콜 시퀀스의 의미적 정보를 추출하여 악성 행위의 패턴을 분석한다. API 콜은 행동 을 나타내는 작업(Operation) 및 자원이나 범주를 나타내는 유형(Type)으로 표현되며, API 콜에서 \"connect\", \"download\", \"search\", \"decrypt\"등의 작업과 \"file\", \"process\", \"network\" 등의 유형 세트를 구축하여 각 API 콜의 쌍을 연결한 의미적 체인(Semantic Chain)을 생성하고, 특징 매핑을 통해 모델에 입력될 수 있는 형태 로 변환한다. 이 과정을 통해 API 콜의 의미적 정보를 활용하여 악성 코드의 행동 패턴을 분석한다.순서정보 추출 단계에서, API 콜 시퀀스의 복잡한 호출 관계를 Bi-LSTM(Bidirectional Long Short-Term Memory)을 이용하여 학습한다. Bi-LSTM은 각 시간 단계에서 입력된 API 콜의 의미적 정보를 포함하는 임베딩 벡 터를 기반으로 시퀀스의 현재 상태를 나타내는 은닉 상태(hidden state)를 갱신하고, 최종 출력은 각 시간에서 은닉 상태를 기반으로 생성되며, 시퀀스의 마지막 API 콜에 대한 예측을 포함하고, 각 API 콜 간의 관계를 반영 한다. API 시퀀스 인식 단계에서, API 콜 시퀀스 내 악성 행위를 위한 특정 API 콜을 효과적으로 인식하기 위해 어텐 션(Attention) 메커니즘을 활용하여 어텐션 값을 구한다. 각 API 호출 간의 상관관계를 평가하기 위해 내적(dot product)을 사용하여 유사도를 계산하고, 소프트맥스(Sofxmax) 함수를 통해 정규화를 수행하고, API 호출의 가 중합을 계산한다. 이때 중요 API 콜은 더 높은 가중치를 갖기 때문에 최종 출력에 더 큰 영향을 미치게 되어 악 성 행위 식별 및 분류 성능을 향상시킨다. 또한, 적응형 API 모듈은 API 트래픽 이상 징후를 탐지할 수 있다. 이에 대해 도 7을 참조하여 설명하면, 적응형 API 모듈은 Spectral Residual(SR), Convolutional Neural Network(CNN) 알고리즘을 결합하여 API 트래픽 이상 징후를 탐지할 수 있다. 적응형 API 모듈은 시계열 데 이터를 기반으로 퓨리에 변환, SR 모델을 통해 Saliency map을 생성하여 인조 데이터(Synthetic data)를 구성하 고, 이를 이용하여 CNN 모델을 학습함으로써 높은 탐지 성능을 확보하며, 시계열 데이터 기반의 이상 탐지 서비 스의 문제점인 라벨링 데이터의 부족 및 일반화, 효율의 문제점(Lack of Labels, Generalization, Efficienc y)을 해결할 수 있다. 도 8은 도 2에 도시된 API 탐색부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 8을 참조하면, API 탐색부는 API 디펜던시 Visulaizer, API 자동 그룹핑, API 변경내역 및 버전 관리, API Auto Discovery, 3nd 파티 API 관리 모듈, 프로토콜 인터프리터, 및/또는 데이터 수집의 기능들을 수행할 수 있 다. API 탐색부는 API의 가시성 확보를 위해 조직 내에서 생성하고 사용하고 있는 레거시 API, 관리되지 않는 API, Zombie API, Shadow API 를 포함한 모든 API 를 찾아 인벤토리를 자동으로 생성하고, 보안 및 개인 정보 유출 사고에 대한 취약점을 증가 시킬 수 있는 Unmanaged API, Unsecured API 에 대한 보안 문제를 해결할 수 있다. 또한, API 탐색부는 시스템 내의 모든 API 엔드포인트를 자동으로 탐색하여 인벤토리 생성, API 명세를 통 한 API 엔드포인트 탐색, API Auto Discovery 를 통한 API 엔트포인트 탐색, 발견된 API 인벤토리에 대한 서비 스/애플리케이션 별 자동 그룹핑, REST, SOAP, gRPC, GraphQL 프로토콜 인터프리터 제공, API 변경내역 및 버전 확인, API 디펜던시를 탐색, 및/또는 3nd 파티 API 사용 및 설정 확인 등의 기능을 수행할 수 있다. 도 9는 도 2에 도시된 API 구성 관리부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 9를 참 조하면, API 구성 관리부는 API 취약점 분석, API 구성관리, 개인 및 민감정보 탐지, 데이터프롤우 Visualizer, 엔드포인트 Risk 스코어링, 및/또는 데이터 수집의 기능들을 수행할 수 있다. API 구성 관리부는 API 보안 평가를 위해 API 의 잘못된 구성을 식별, 알려진 취약점을 탐지한다. 또한, API 에서 사용되는 개인 및 민감 정보에 대한 분류 및 데이터 플로우를 탐지하고, API 의 잘못된 구성으로 인한 보안 취약점 해결하고, API 에서 사용되는 개인 및 민감정보에 대한 관리를 통한 개인정보보호법, GDPR 규정 준 수할 수 있다. 또한, API 구성 관리부는 API 인벤토리의 잘못된 구성 확인, 잘못된 구성의 심각성, 취약점이 있는지 확인 하고 해결 방법에 대한 권장사항을 제공, API 에서 사용되는 개인 및 민감 데이터에 대한 탐지 및 분류, API 에 서 사용되는 개인 및 민감 데이터에 대한 마스킹, API 에서 사용되는 개인 및 민감 데이터에 데이터 플로우 분 석, API 엔드포인트의 Risk 스코어링, 및/또는 OWASP API / Web Top 10 취약점 분석 등의 기능을 수행할 수 있 다. 도 10은 도 2에 도시된 런타임 위협 분석부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 10 을 참조하면, 런타임 위협 분석부는 취약점 분석, IP기반 평판분석, 정적 행위 분석, 동적 행위 분석, CVE 탐지, 페이로드 분석, 로그/이벤트 기반 탐지, 콜 시퀀스 기반 탐지/분류, 트래픽 이상징후 탐지, 및/또는 데이 터 수집의 기능들을 수행할 수 있다. 런타임 위협 분석부는 API 의 행위와 행위와 관련된 데이터(로그, 트래픽, 설정 등)을 수집하여 Adaptive AI 를 통해 높은 정확도로 데이터 유출 및 위조, 의심스러운 행위 및 공격 등 API 취약점을 탐지하고, API 가 요청을 운영하고 관리하는 동안 악의적인 API 호출을 탐지하고 방지할 수 있다. 또한, 런타임 위협 분석부는 API 행위와 행위와 관련된 데이터(로그, 트래픽, 설정 등) 를 수집 및 모니터 링, API 의 정적, 동적 행위 분석을 통한 위협 탐지, Rule 기반 이상 행위 탐지, 로그/이벤트 기반 이상징후 탐 지, 콜 시퀀스 기반 악성행위 탐지 및 분류, 트래픽 이상 징후 탐지, OWASP API / WEB Top 10 보안 취약점 탐지, 신규 발견된 CVE 취약점 탐지, 및/또는 DDoS 공격, Brute Force 공격 탐지 등의 기능을 수행할 수 있다. 도 11은 도 2에 도시된 API 테스팅부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 11을 참 조하면, API 테스팅부는 테스트 케이스 관리, 테스트 실행/결과 관리, CI/CD 관리, 및/또는 데이터 수집의 기능들을 수행할 수 있다. API 테스팅부는 소프트웨어 개발 수명 주기(SDLC)의 일부로써 API 의 보안을 테스트하여 운영 전 취약점을 식별하고, CI/CD 파이프라인과 통합하여 API 가 보안 취약점을 가지고 구현되지 않도록 할 수 있다. 또한, API 테스팅부는 CI / CD 파이프라인과 통합, 다양한 CI / CD 플랫폼 지원, Black / White Box 테스 트, 테스트 케이스 관리, API 타입 별 테스트 케이스 관리, OWASP API / Web Top 10 취약점 테스트 케이스를 포 함한 다양한 테스트 시나리오 생성, 및/또는 테스트 실행 / 결과 관리 등의 기능을 수행할 수 있다. 지금까지 설명한 본 발명의 실시예들에 따르면, 변화하는 API 보안 패러다임 및 시장 니즈에 대응할 수 있고, 다양한 API 운영 환경에서 API 보안을 수행할 수 있는 적응형 인공지능 기반의 API 보안 시스템이 제공된다. 또한, 개별 애플리케이션의 기능과 목적에 맞는 최적화된 보안 기능을 제공할 수 있으며, 다양한 API 공격 유형 과 API 보안 취약점에도 효과적으로 대응할 수 있게 된다. 이하에서는, 도 12를 참조하여 본 발명의 다양한 실시예에서 설명된 방법들이 구현되는 예시적인 컴퓨팅 장치 에 대하여 설명하도록 한다. 예를 들어, 컴퓨팅 장치는 도 1의 API 보안 시스템일 수 있다. 도 12는 컴퓨팅 장치를 나타내는 예시적인 하드웨어 구성도이다. 도 12에 도시된 바와 같이, 컴퓨팅 장치는 하나 이상의 프로세서, 버스, 통신 인터페이스, 프로세서에 의하여 수행되는 컴퓨터 프로그램을 로드(load)하는 메모리와, 컴퓨터 프로그램 를 저장하는 스토리지를 포함할 수 있다. 다만, 도 12에는 본 발명의 실시예와 관련 있는 구성요소들"}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "만이 도시되어 있다. 따라서, 본 발명이 속한 기술분야의 통상의 기술자라면 도 12에 도시된 구성요소들 외에 다른 범용적인 구성 요소들이 더 포함될 수 있음을 알 수 있다. 프로세서는 컴퓨팅 장치의 각 구성의 전반적인 동작을 제어한다. 프로세서는 CPU(Central Processing Unit), MPU(Micro Processor Unit), MCU(Micro Controller Unit), GPU(Graphic Processing Unit) 또는 본 발명의 기술 분야에 잘 알려진 임의의 형태의 프로세서 중 적어도 하나를 포함하여 구성될 수 있다. 또 한, 프로세서는 본 발명의 다양한 실시예들에 따른 방법/동작을 실행하기 위한 적어도 하나의 애플리케이 션 또는 프로그램에 대한 연산을 수행할 수 있다. 컴퓨팅 장치는 하나 이상의 프로세서를 구비할 수 있다. 메모리는 각종 데이터, 명령 및/또는 정보를 저장한다. 메모리는 본 발명의 다양한 실시예들에 따른 방법/동작들을 실행하기 위하여 스토리지로부터 하나 이상의 프로그램을 로드(load) 할 수 있다. 메 모리의 예시는 RAM이 될 수 있으나, 이에 한정되는 것은 아니다. 버스는 컴퓨팅 장치의 구성 요소 간 통신 기능을 제공한다. 버스는 주소 버스(Address Bus), 데 이터 버스(Data Bus) 및 제어 버스(Control Bus) 등 다양한 형태의 버스로 구현될 수 있다. 통신 인터페이스는 컴퓨팅 장치의 유무선 인터넷 통신을 지원한다. 통신 인터페이스는 인터넷 통신 외의 다양한 통신 방식을 지원할 수도 있다. 이를 위해, 통신 인터페이스는 본 발명의 기술 분야에 잘 알려진 통신 모듈을 포함하여 구성될 수 있다. 스토리지는 하나 이상의 컴퓨터 프로그램을 비임시적으로 저장할 수 있다. 스토리지는 ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리 등과 같은 비휘발성 메모리, 하드 디스크, 착탈형 디스크, 또는 본 발명이 속하는 기술 분야에서 잘 알 려진 임의의 형태의 컴퓨터로 읽을 수 있는 기록 매체를 포함하여 구성될 수 있다. 컴퓨터 프로그램은 본 발명의 다양한 실시예들에 따른 방법/동작들이 구현된 하나 이상의 인스트럭션 (Instruction)들을 포함할 수 있다. 컴퓨터 프로그램이 메모리에 로드 되면, 프로세서는 상기 하나 이상의 인스트럭션들을 실행시킴으로써 본 발명의 다양한 실시예들에 따른 방법/동작들을 수행할 수 있다. 지금까지 설명된 본 발명의 기술적 사상은 컴퓨터가 읽을 수 있는 매체 상에 컴퓨터가 읽을 수 있는 코드로 구 현될 수 있다. 상기 컴퓨터로 읽을 수 있는 기록 매체는, 예를 들어 이동형 기록 매체(CD, DVD, 블루레이 디스 크, USB 저장 장치, 이동식 하드 디스크)이거나, 고정식 기록 매체(ROM, RAM, 컴퓨터 구비 형 하드 디스크)일 수 있다. 상기 컴퓨터로 읽을 수 있는 기록 매체에 기록된 상기 컴퓨터 프로그램은 인터넷 등의 네트워크를 통 하여 다른 컴퓨팅 장치에 전송되어 상기 다른 컴퓨팅 장치에 설치될 수 있고, 이로써 상기 다른 컴퓨팅 장치에 서 사용될 수 있다."}
{"patent_id": "10-2024-0115244", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이상 첨부된 도면을 참조하여 본 발명의 실시예들을 설명하였지만, 본 발명이 속하는 기술분야에서 통상의 지식 을 가진 자는 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 본 발명이 다른 구체적인 형태로도 실시될 수 있다는 것을 이해할 수 있다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로 이해해야만 한다. 본 발명의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기술 사상은 본 발명에 의해 정의되는 기술적 사상의 권리범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2024-0115244", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른, 적응형 인공지능 기반의 API 보안 시스템을 나타내는 개요도이다. 도 2는 도 1에 도시된 API 보안 시스템의 상세 구성을 예시적으로 나타내는 블록도이다. 도 3 내지 도 7은 도 2에 도시된 적응형 API 모듈의 상세 구성 및 동작을 구체적인 예를 들어 부연설명하 기 위한 도면들이다. 도 8은 도 2에 도시된 API 탐색부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 9는 도 2에 도시된 API 구성 관리부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 10은 도 2에 도시된 런타임 위협 분석부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 11은 도 2에 도시된 API 테스팅부의 상세 구성 및 동작을 예시적으로 나타내는 도면이다. 도 12는 본 발명의 다양한 실시예에서 설명된 방법들이 구현되는 예시적인 컴퓨팅 장치를 나타내는 도면이 다."}
