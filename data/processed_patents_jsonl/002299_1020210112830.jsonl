{"patent_id": "10-2021-0112830", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0030768", "출원번호": "10-2021-0112830", "발명의 명칭": "인공지능 모델의 유출을 방지하기 위한 인공지능 모델 변환 방법, 인공지능 모델 변환 장치,", "출원인": "티에스엔랩 주식회사", "발명자": "김성민"}}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공지능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된인공지능 모델을 취득하는 메타 데이터 삭제 단계;메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하는 난독화 처리 단계; 및공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득하는 암호화 처리단계를 포함하는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 메타 데이터는 인공지능 모델을 개발자가 유지 및 보수하는 경우에 필요한 인공지능 모델의 해석과 관련된데이터이고, 상기 메타 데이터는 인공지능 모델의 명칭, 버전 정보, 오퍼레이터의 명칭 중 하나 이상을 포함하는 인공지능모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 난독화 알고리즘은 상기 인공지능 모델에 포함되는 문자열을 복수의 숫자 또는 랜덤한 다른 문자열로 변환하는 문자열 변환 알고리즘을 포함하는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 난독화 알고리즘은 상기 인공지능 모델을 구성하는 복수의 구성 요소의 배치 순서를 변경하는 순서 변경알고리즘을 포함하는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 난독화 처리 단계에서는, 상기 순서 변경 알고리즘에 의해 변경되기 전의 복수의 구성 요소의 배치 순서에관한 순서 변경 정보가 생성되는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 순서 변경 정보는 변경전의 실행 순서를 직접 나타내는 숫자 데이터에 의해 생성되거나, 미리 정해진 숫자열을 이용한 변환 알고리즘을 이용하여 생성되거나, 또는 해시 함수를 적용한 해시 알고리즘을 이용하여 생성되는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 난독화 알고리즘은 상기 인공지능 모델의 실행 결과에 영향을 주지 않는 더미 구성을 상기 인공지능 모델공개특허 10-2023-0030768-3-에 추가하는 더미 추가 알고리즘을 포함하는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 인공지능 모델의 암호화는 비대칭 암호화 방식에 의해 수행되고,상기 공개키는 암호화된 상기 인공지능 모델이 구동되는 구동 장치에 대하여 고유하게 부여되는 비밀키에 대응하여 생성되는 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 인공지능 모델은 ONNX(Open Neural Network eXchange) 또는 NNEF(Neural Network Exchange Format)를 포함하는 표준화된 인공지능 모델인 인공지능 모델 변환 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "인공지능 모델을 구동하기 위한 구동 방법으로서,입력 데이터를 인공지능 모델에서 해석가능한 텐서로 변환하는 입력 변환 단계;암호화된 인공지능 모델을 구동 장치에 대하여 고유하게 부여되는 비밀키를 이용하여 복호화하여 복호화된 인공지능 모델을 취득하는 모델 복호화 단계;복호화된 상기 인공지능 모델부터 인공지능 모델의 아키텍처 및 파라미터를 메모리 상에 로딩하고, 로딩된 상기인공지능 모델을 해석하는 모델 해석 단계;상기 입력 데이터로 변환된 상기 텐서에 대하여 해석된 인공지능 모델을 구동하여 출력 데이터를 생성하는 모델구동 단계; 및상기 출력 데이터를 액추에이터에서 해석 가능한 데이터 형태로 변환하여 출력하는 출력 변환 단계를 포함하는 인공지능 모델 구동 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상이한 구동 장치에 대하여 상이한 비밀키가 부여되는 인공지능 모델 구동 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 모델 구동 단계는 인터프리터, FPGA 또는 ASIC에 의해 수행되는 인공지능 모델 구동 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,상기 복호화 처리 단계, 상기 모델 해석 단계 및 상기 모델 구동 단계는 하나의 칩(chip) 내에서 수행되고, 복호화된 상기 인공지능 모델이 상기 복호화 처리 단계, 상기 모델 해석 단계 및 상기 모델 구동 단계가 수행되는 상기 하나의 칩의 외부로 출력되지 않도록 구성되는 인공지능 모델 구동 방법."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "인공지능 모델 변환 장치로서,적어도 하나의 프로그램이 기록된 메모리; 및프로그램을 실행하는 프로세서를 포함하며,공개특허 10-2023-0030768-4-상기 프로그램은,인공지능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된인공지능 모델을 취득하는 메타 데이터 삭제 단계;메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하는 난독화 처리 단계; 및공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득하는 암호화 처리단계를 포함하는 단계들을 수행하는 인공지능 모델 변환 장치."}
{"patent_id": "10-2021-0112830", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "인공지능 모델을 구동하기 위한 구동 장치로서,적어도 하나의 프로그램이 기록된 메모리; 및프로그램을 실행하는 프로세서를 포함하며,상기 프로그램은,입력 데이터를 인공지능 모델에서 해석가능한 텐서로 변환하는 입력 변환 단계;암호화된 인공지능 모델을 구동 장치에 대하여 고유하게 부여되는 비밀키를 이용하여 복호화하여 복호화된 인공지능 모델을 취득하는 복호화 처리 단계;복호화된 상기 인공지능 모델부터 인공지능 모델의 아키텍처 및 파라미터를 메모리 상에 로딩하고, 로딩된 상기인공지능 모델을 해석하는 모델 해석 단계;상기 입력 데이터로 변환된 상기 텐서에 대하여 해석된 인공지능 모델을 구동하여 출력 데이터를 생성하는 모델구동 단계; 및상기 출력 데이터를 액추에이터에서 해석 가능한 데이터 형태로 변환하여 출력하는 출력 변환 단계를 포함하는 단계들을 수행하는 인공지능 모델 구동 장치."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 일 실시예에 의하면, 인공지능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된 인공지능 모델을 취득하는 메타 데이터 삭제 단계; 메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하 는 난독화 처리 단계; 및 공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델 을 취득하는 암호화 처리 단계를 포함하는 인공지능 모델 변환 방법이 제공될 수 있다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 모델에 관한 것으로, 보다 상세하게는 인공지능 모델의 유출을 방지하기 위한 인공지능 모 델 변환 방법, 인공지능 모델 변환 장치, 인공지능 모델 구동 방법 및 인공지능 모델 구동 방법에 관한 것이다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "선행기술문헌으로 기재한 인공 지능 추론 장치 및 방법은 다양한 하드웨어 환경을 가지는 임베디드 시스템에서 인공지능 응용의 구현을 용이하게 하고, 딥러닝을 가속시키는 추론 엔진을 개발함에 있어서 하드웨어 변경에 따 른 추론 엔진의 변경을 최소화한다. 선행기술문헌은 미리 학습된 신경망을 기반으로 하는 응용을 학습 프레임워크에 독립적인 상위 레벨 언어의 실 행 코드로 변환하고, 실행 코드를 가속 연산 필요 여부에 따라 범용 언어 코드와 도메인 특정 언어 코드로 분리 하며, 분리된 코드를 배포 타겟의 하드웨어의 CPU에서 실행되는 타겟 코드로 생성하고, 생성된 타겟 코드를 배 포 타겟의 하드웨어 시스템에 제공한다. 선행기술문헌 특허문헌"}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "(특허문헌 0001) 공개특허공보 제10-2021-0042012호 인공 지능 추론 장치 및 방법 발명의 내용"}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "인공지능 모델은 크게 아키텍처와 파라미터로 구성된다. 아키텍처는 인공지능의 신경망이 서로 어떻게 연결 되 어있는지 그 내부 구조에 대한 것이고, 파라미터는 학습 과정을 통해 얻어진 숫자의 집합으로 인공신경망이 어 떻게 동작할지를 결정한다. 인공지능의 아키텍처와 파라미터 모두 인공지능 모델을 배포하는 입장에선 매우 중 요한 자산에 해당된다. 선행기술문헌과 같이 인공지능 모델을 배포 타겟의 사용자에게 실행 코드 형태로 배포할 때는 인공지능 모델이 유출될 가능성이 매우 높다. 또한, 인공지능 모델이 유출되었을 경우 자산의 유출로 이어진다. 본 발명은 상술한 종래기술의 문제점을 해결하기 위한 것으로, 인공지능 모델을 사용자에게 배포할 때에 인공지 능 모델이 유출되거나 불법 복제, 불법 사용되지 못하도록 방어하기 위한 장치 및 방법을 제공하는 것에 그 목 적이 있다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 과제를 해결하기 위한 수단으로서, 본 발명의 일 실시예에 따르면, 인공지능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된 인공지능 모델을 취득하는 메타 데이 터 삭제 단계; 메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하는 난독화 처리 단계; 및 공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득하는 암호화 처리 단계를 포함하는 인공지능 모델 변환 방법 이 제공될 수 있다. 일 실시예에서, 상기 메타 데이터는 인공지능 모델을 개발자가 유지 및 보수하는 경우에 필요한 인공지능 모델 의 해석과 관련된 데이터이고, 상기 메타 데이터는 인공지능 모델의 명칭, 버전 정보, 오퍼레이터의 명칭 중 하 나 이상을 포함할 수 있다. 일 실시예에서, 상기 난독화 알고리즘은 상기 인공지능 모델에 포함되는 문자열을 복수의 숫자 또는 랜덤한 다 른 문자열로 변환하는 문자열 변환 알고리즘을 포함할 수 있다. 일 실시예에서, 상기 난독화 알고리즘은 상기 인공지능 모델을 구성하는 복수의 구성 요소의 배치 순서를 변경 하는 순서 변경 알고리즘을 포함할 수 있다. 일 실시예에서, 상기 난독화 처리 단계에서는, 상기 순서 변경 알고리즘에 의해 변경되기 전의 복수의 구성 요 소의 배치 순서에 관한 순서 변경 정보가 생성될 수 있다. 일 실시예에서, 상기 순서 변경 정보는 변경전의 실행 순서를 직접 나타내는 숫자 데이터에 의해 생성되거나, 미리 정해진 숫자열을 이용한 변환 알고리즘을 이용하여 생성되거나, 또는 해시 함수를 적용한 해시 알고리즘을 이용하여 생성될 수 있다. 일 실시예에서, 상기 난독화 알고리즘은 상기 인공지능 모델의 실행 결과에 영향을 주지 않는 더미 구성을 상기 인공지능 모델에 추가하는 더미 추가 알고리즘을 포함할 수 있다. 일 실시예에서, 상기 인공지능 모델의 암호화는 비대칭 암호화 방식에 의해 수행되고, 상기 공개키는 암호화된 상기 인공지능 모델이 구동되는 구동 장치에 대하여 고유하게 부여되는 비밀키에 대응하여 생성될 수 있다. 일 실시예에서, 상기 인공지능 모델은 ONNX(Open Neural Network eXchange) 또는 NNEF(Neural Network Exchange Format)를 포함하는 표준화된 인공지능 모델일 수 있다. 상술한 과제를 해결하기 위한 수단으로서, 본 발명의 일 실시예에 따르면, 입력 데이터를 인공지능 모델에서 해 석가능한 텐서로 변환하는 입력 변환 단계; 암호화된 인공지능 모델을 구동 장치에 대하여 고유하게 부여되는 비밀키를 이용하여 복호화하여 복호화된 인공지능 모델을 취득하는 모델 복호화 단계; 복호화된 상기 인공지능 모델부터 인공지능 모델의 아키텍처 및 파라미터를 메모리 상에 로딩하고, 로딩된 상기 인공지능 모델을 해석하 는 모델 해석 단계; 상기 입력 데이터로 변환된 상기 텐서에 대하여 해석된 인공지능 모델을 구동하여 출력 데 이터를 생성하는 모델 구동 단계; 및 상기 출력 데이터를 액추에이터에서 해석 가능한 데이터 형태로 변환하여 출력하는 출력 변환 단계를 포함하는 인공지능 모델 구동 방법이 제공될 수 있다. 일 실시예에서, 상이한 구동 장치에 대하여 상이한 비밀키가 부여될 수 있다. 일 실시예에서, 상기 모델 구동 단계는 인터프리터, FPGA 또는 ASIC에 의해 수행될 수 있다. 일 실시예에서, 상기 복호화 처리 단계, 상기 모델 해석 단계 및 상기 모델 구동 단계는 하나의 칩(chip) 내에 서 수행되고, 복호화된 상기 인공지능 모델이 상기 복호화 처리 단계, 상기 모델 해석 단계 및 상기 모델 구동 단계가 수행되는 상기 하나의 칩의 외부로 출력되지 않도록 구성될 수 있다. 상술한 과제를 해결하기 위한 수단으로서, 본 발명의 일 실시예에 따르면, 인공지능 모델 변환 장치로서, 적어 도 하나의 프로그램이 기록된 메모리; 및 프로그램을 실행하는 프로세서를 포함하며, 상기 프로그램은, 인공지 능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된 인공지 능 모델을 취득하는 메타 데이터 삭제 단계; 메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하는 난독화 처리 단계; 및 공개키를 이 용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득하는 암호화 처리 단계를 포 함하는 단계들을 수행하는 인공지능 모델 변환 장치가 제공될 수 있다. 상술한 과제를 해결하기 위한 수단으로서, 본 발명의 일 실시예에 따르면,인공지능 모델을 구동하기 위한 구동 장치로서, 적어도 하나의 프로그램이 기록된 메모리; 및 프로그램을 실행하는 프로세서를 포함하며, 상기 프로 그램은, 입력 데이터를 인공지능 모델에서 해석가능한 텐서로 변환하는 입력 변환 단계; 암호화된 인공지능 모 델을 구동 장치에 대하여 고유하게 부여되는 비밀키를 이용하여 복호화하여 복호화된 인공지능 모델을 취득하는 복호화 처리 단계; 복호화된 상기 인공지능 모델부터 인공지능 모델의 아키텍처 및 파라미터를 메모리 상에 로 딩하고, 로딩된 상기 인공지능 모델을 해석하는 모델 해석 단계; 상기 입력 데이터로 변환된 상기 텐서에 대하 여 해석된 인공지능 모델을 구동하여 출력 데이터를 생성하는 모델 구동 단계; 및 상기 출력 데이터를 액추에이 터에서 해석 가능한 데이터 형태로 변환하여 출력하는 출력 변환 단계를 포함하는 단계들을 수행하는 인공지능 모델 구동 장치가 제공될 수 있다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따르면, 인공지능 모델의 실행과 관련이 없는 메타 데이터를 상기 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된 인공지능 모델을 취득하고, 메타 데이터가 삭제된 상기 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화를 수행하여 난독화된 인공지능 모델을 취득하며, 공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득함으로써, 인공지능 모델의 유출, 불 법 복제, 불법 사용을 방지할 수 있다. 또한, 본 발명의 일 실시예에 따르면, 암호화된 인공지능 모델을 구동 장치에 대하여 고유하게 부여되는 비밀키 를 이용하여 복호화하여 복호화된 인공지능 모델을 취득함으로써, 인공지능 모델의 유출, 불법 복제, 불법 사용 을 방지할 수 있다. 또한, 본 발명의 일 실시예에 따르면, 인공지능 모델의 복호화 처리, 인공지능 모델의 해석 및 인공지능 모델의 구동이 하나의 칩(chip) 내에서 수행되고, 복호화된 상기 인공지능 모델이 이러한 칩의 외부로 출력되지 않도록 구성됨으로써, 인공지능 모델의 유출, 불법 복제, 불법 사용을 방지할 수 있다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하여 본 발명의 바람직한 일실시예에 따른 저전력 인공지능 구현 시스템에 대하여 상세히 설 명하기로 한다. 이하에서 종래 주지된 사항에 대한 설명은 본 발명의 요지를 명확히 하기 위해 생략하거나 간단 히 한다. 본 발명의 설명에 포함된 구성은 개별 또는 복합 결합 구성되어 동작한다.도 1은 인공지능 모델이 생성되는 프로세스를 설명하는 개념도이다. 도 1을 참조하면, 인공지능 모델은 온도, 습도, 고도, 지문 등을 검출하는 각종 센서, 이미지 화상, 적외선 화 상 등을 취득하는 카메라, 라이더와 같은 입력 장치로부터 수집된 시계열 데이터로부터 특징량 선택, 알고리즘 선택을 통해 인공지능 모델을 선택하고, 학습, 성능 검증 과정에 의한 반복 시행 착오를 거쳐 모델 선택을 반복 한다. 성능 검증이 종료되면 최적의 인공지능 모델이 선택된다. 도 2는 도 2는 인공지능 오픈 플랫폼을 설명하는 예시도이다. 도 2를 참조하면 인공지능 오픈 플랫폼은 각종 트레이닝 플랫폼을 통합하고, 배포 타겟인 CPU, GPU, FPGA, NPU 에 인공지능 오픈 플랫폼의 실행 코드를 적용한다. 인공지능 모델은 복잡한 수학 공식과 수학 공식에서 사용되는 참고 값으로 이루어져 있다. 복잡한 구조로 되어 있는 수학 공식을 아키텍처라 부르고, 아키텍처가 참고하는 숫자의 집합을 파라미터(Parameter)라고 부른다. 최 근 몇 년 사이 인공지능이 급격히 발전하면서 인공지능 모델을 표준화된 방법으로 저장하고 교환해야 할 필요성 이 생겼고, Linux Foundation의 ONNX(Open Neural Network eXchange)과 Khronos Group의 NNEF(Neural Network Exchange Format)가 만들어지면서 인공지능 모델을 표준화된 형태로 교환할 수 있게 되었다. 2가지 표준 중 현재 대부분의 회사들은 ONNX을 따르고 있는데, ONNX은 Google에서 만든 Protocol Buffer라는 방 법을 활용해 인공지능 모델의 아키텍처와 파라미터를 저장한다. 즉, ONNX은 인공지능 모델의 아키텍처와 파라미 터의 구조를 정의하고, Protocol Buffer를 이용해 아키텍처와 파리미터를 바이너리 형태로 저장한다. ONNX은 현재 인공지능 모델의 표준으로써 역할을 하기 때문에 많은 회사에서 ONNX을 활용해 인공지능 모델을 구 동하는 기술을 선보이고 있다. 대표적인 예가 Microsoft의 ONNX Runtime으로 ONNX Runtime은 ONNX 형태로 저장 된 인공지능 모델을 실행시키는 엔진 역할을 한다. 사용자 입장에선 ONNX Runtime을 통해 ONNX 형태로 되어있는 어떤 인공지능 모델이든 구동시킬 수 있다. ONNX은 Protocol Buffer를 사용하여 인공지능 모델을 바이너리 형태 로 변환시킬 수 있다. ONNX 등의 인공지능 오픈 플랫폼은 파편화된 각종 트레이닝 플랫폼에 표준 가이드를 제공하고, 표준 가이드에 따라 통합된 인공지능 모델, 실행 코드, 사용법을 통해 다양한 제어부를 가지는 배포 타겟에 적합한 실행 코드 를 제공할 수 있다. 배포 타겟에 제공되는 실행 코드로부터 개발자는 인공지능 모델을 용이하게 파악할 수 있고, 실행 코드를 그대 로 다른 구동 장치에 복사하여 동일하게 사용할 수 있다. 이와 같이, 인공지능 모델의 실행 코드를 배포 타겟에 제공하는 종래 기술에서는 인공지능 모델이 유출될 위험이 높다. 본 발명은 인공지능 모델의 유출을 방지할 수 있는 인공지능 모델 변환 방법, 장치 및 인공지능 모델 구동 방법, 장치를 제공할 수 있다. 도 3은 본 발명의 일 실시예에 따른 인공지능 모델 변환 장치 및 방법을 나타내는 블록도이다. 도 3을 참조하면, 인공지능 모델 변환 장치(100: 컴퓨터)는 메타 데이터 삭제부, 난독화 처리부 및 암호화 처리부를 포함한다. 컴퓨터는 온도, 고도, 지문 등 각종 센서, 이미지, 적외선 등 카메라, 라이더와 같은 입력 장치로부터 수 집된 시계열 데이터인 입출력 데이터 포맷과, 배포 타겟인 CPU, GPU, FPGA, NPU를 포함하는 배포 타겟의 타겟 성능 지표를 입력받는다. 메타 데이터 삭제부는 인공지능 모델의 실행과 관련이 없는 메타 데이터를 인공지능 모델로부터 삭제하여 메타 데이터가 삭제된 인공지능 모델을 취득할 수 있다. 일 실시예에서, 메타 데이터는 인공지능 모델을 개발자가 유지 및 보수하는 경우에 필요한 인공지능 모델의 해 석과 관련된 데이터일 수 있다. 예를 들면, 메타 데이터는 인공지능 모델의 명칭, 버전 정보, 오퍼레이터의 명 칭 중 하나 이상을 포함할 수 있다.난독화 처리부는 메타 데이터가 삭제된 인공지능 모델을 하나 이상의 난독화 알고리즘을 이용하여 난독화 를 수행하여 난독화된 인공지능 모델을 취득할 수 있다. 일 실시예에서, 난독화 알고리즘은 문자열 변환 알고리 즘, 순서 변경 알고리즘 및 더미 추가 알고리즘 중 하나 이상을 포함할 수 있다. 문자열 변환 알고리즘은 인공지능 모델에 포함되는 문자열을 복수의 숫자 또는 랜덤한 다른 문자열로 변환할 수 있다. ONNX 모델은 conv_1, conv_2, fc_3, fc_4와 같이 개발자가 해당 모델의 기능을 이해하기 쉽도록 모델의 명칭 또는 아키텍처의 명칭을 설정한다. 예를 들면, conv_1은 인공지능 모델의 첫 번째 층으로 컨벌루션 (convolution) 연산을 수행하는 부분을 의미한다. fc_3은 fully connected layer로서 3번째 층을 의미한다. 개 발자는 이와 같이 해당 구성의 문자열로부터 인공지능 모델이 어떤 기능을 갖고, 어떤 연산을 수행하는지 등을 용이하게 파악할 수 있다. conv_1, conv_2, fc_3, fc_4를 각각 738, 13, 29, 106과 같은 임의의 숫자 또는 다 른 의미없는 문자열로 대체를 하면 다른 개발자가 해당 인공지능 모델을 해석하기 어렵다. 순서 변경 알고리즘은 인공지능 모델을 저장할 때 인공지능 모델의 각 구성 요소의 순서를 실행 순서가 아닌, 변경된 순서로 재배치하여 저장하는 방법이다. 인공지능 모델은 실행 순서 그대로 배치되는 것이 일반적이다. 예를 들면, [제1 처리] - [제2 처리] - [제3 처 리] - [제4 처리] 와 같이 실행되는 순서대로 처리 블록이 배치될 수 있다. ONNX도 실행되는 순서대로 블록을 저장하는 것이 일반적이기 때문에 개발자는 인공지능 모델을 순차적으로 읽어 실행 순서를 예측할 수 있다. 예를 들면, 인공지능 모델이 [제1 처리] - [제2 처리] - [제3 처리] - [제4 처리]의 실행 순서를 갖는 경우에, 이러한 인공지능 모델을 [제2 처리] - [제4 처리] - [제1 처리] - [제3 처리]과 같이 배치 순서를 변경한다면, 이러한 순서로 배치된 인공지능 모델로부터 개발자는 변경후의 배치 순서에 따라 실행 순서를 파악할 수 있다. 따라서, 개발자는 변경되기 전의 원래의 실행 순서를 파악하기 어렵다. 실행 순서의 변경과 관련된 순서 변경 정보가 인공지능 모델의 구동 장치에 별도의 데이터로 제공될 수 있고, 구동 장치에서의 실행은 변경 정보에 기 초하여 변경전의 실행 순서를 파악하고, 파악된 변경전의 원래의 실행 순서에 따라 인공지능 모델을 실행할 수 있다. 이와 같이 구성하면, 실행 순서가 변경된 인공지능 모델이 유출되더라도 원래의 순서가 파악될 수 없기 때문에, 인공지능 모델의 해석이 어렵고, 인공지능 모델의 불법 복제 및 불법 사용을 방지할 수 있다. 일 실시예에서, 실행 순서의 변경에 관한 순서 변경 정보는 변경전 실행 순서를 직접 나타내는 숫자 데이터를 포함할 수 있다. 인공지능 모델의 변경전의 실행 순서가 [제1 처리] - [제2 처리] - [제3 처리] - [제4 처리]이 고, 변경후의 실행 순서가 [제2 처리] - [제4 처리] - [제1 처리] - [제3 처리]인 경우에, 순서 변경 정보는 변 경전의 처리 순서를 직접 나타내는 복수의 숫자의 배열 데이터 “2, 4, 1, 3”을 포함할 수 있다. 여기서, “2 ”는 [제2 처리]가 2번째 실행 순서를 갖고, “4”는 [제4 처리]가 4번째 실행 순서를 갖고, “1”은 [제1 처리]가 1번째 실행 순서를 갖고, “3”은 [제3 처리]가 3번째 실행 순서를 갖는 것을 나타낸다. 일 실시예에서, 실행 순서의 변경에 관한 순서 변경 정보는 미리 정해진 숫자열을 이용한 변환 알고리즘을 이용 하여 생성될 수 있다. 자연수, 예를 들어 원주율(3.1415926……)과 같이 미리 정해져 있는 숫자의 배열(수열)을 이용하면 미리 정해진 숫자열을 모델에 저장하지 않더라도 수열을 이용하여 모델의 순서를 복구할 수 있다. 이러한 실시예에서, 변경후의 실행 순서가 [제2 처리] - [제4 처리] - [제1 처리] - [제3 처리]인 경우에 첫번 째의 [제2 처리]는 변경전의 2번째 처리이며, 이것은 원주율의 7번째 숫자, “2”에 대응한다. 두번째의 [제4 처리]는 변경전의 4번째 처리이며, 이것은 원주율의 3번째 숫자, “4”에 대응한다. [제1 처리]는 변경전의 1번 째 처리이며, 이것은 원주율의 2번째 숫자, “1”에 대응한다. [제3 처리]는 변경전의 3번째 처리이며, 이것은 원주율의 1번째 숫자, “3”에 대응한다. 이러한 경우에, 순서 변경 정보는 변경전의 처리 순서를 원주율과 소정 변환 알고리즘을 이용하여 표현할 수 있 는 복수의 숫자의 배열 데이터 “7, 3, 2, 1”을 포함할 수 있다. 순서 변경 정보, “7, 3, 2, 1”로부터 원주 율의 7번째, 3번째, 2번째, 1번째에 배열된 숫자의 배열인 “2, 4, 1, 3”(변경전의 원래의 실행 순서를 나타냄)이 도출될 수 있다. 일 실시예에서, 실행 순서의 변경에 관한 순서 변경 정보는 해시 알고리즘을 이용하여 생성될 수 있다. 해시 함 수는 임의의 길이를 갖는 임의의 데이터를 고정된 길이의 데이터로 매칭하는 함수이고, 해시 함수를 적용한 결 과로서 나온 고정된 길이의 값을 해시값이라고 한다. 해시 함수로서는 SHA(Secure Hash Algorithm, 안전한 해시 알고리즘) 함수 등 여러 종류가 존재하고, 본 발명의 기술적 사상은 특정 해시 함수로 제한되지 않는다. 예를 들면, “1234” 라는 4개의 문자열을 시드값(seed value)으로 사용할 경우 인공지능 모델에 “1234”라는 문자열만 저장해 놓는다. 순서 변경 정보를 얻기 위하여 시드값의 해시값을 구할 수 있다. 문자열 “1234”의 해시값은 “1be168ff837f043bde17c0314341c84271047b31”이다. 이렇게 생성된 해시값에서 1, 0xb, 0xe, 1, 6, 8 이라는 숫자를 활용하여 순서를 재배치할 수 있다. 해시값 “1be168ff837f043bde17c0314341c84271047b31”은 16진수로 표현된 것이다. 이 해시값의 첫번째에 위치 하는 “1”은 16진수로 표현된 것이고, 10진수의 “1”에 해당한다. 해시값의 두번째에 위치하는 “b”는 16진 수로 표현된 것이고, 10진수의 “11”에 해당한다. 해시값의 세번째에 위치하는 “e”는 16진수로 표시된 것이 고, 10진수의 “14”에 해당한다. 또한, 해시값의 네번째에 위치하는 “1”은 10진수의 “1”에 해당하고, 해시 값의 다섯번째에 위치하는 “6”은 10진수의 “6”에 해당한다. 이와 같이, 16진수로 표현된 해시값을 10진수의 숫자열로 변환할 수 있고, 변환된 숫자열을 이용하여 인공지능 모델의 구성요소의 배치 순서를 재구성할 수 있다. 일 실시예에서, n개의 AI 모델 요소를 List라는 자료 구조에 넣은 후, pop(list, number % len(list)) 명령어 등을 통해 구성요소의 순서를 재배치할 수 있다. 재배치된 구 성요소를 원래의 순서로 배치(복원)하기 위해서는 재배치에 사용된 시드값 또는 해시값이 필요하고, 인공지능 모델의 구동 장치가 이 시드값 또는 해시값 중 어느 하나의 값을 갖고 있는 경우에, 구성 요소의 원래의 순서를 정확하게 복원할 수 있다. 더미 추가 알고리즘은 인공지능 모델의 실행 결과에 영향을 주지 않는 더미 구성을 상기 인공지능 모델에 추가 할 수 있다. 예를 들면, [제1 처리] - [제2 처리] - [제3 처리] - [제4 처리]를 포함하는 모델 사이에 임의의 [제5 처리]와 같은 의미 없는 블록을 추가하는 경우, 인공 지능 모델의 실행 결과에는 영향을 주지 않으면서, 인공지능 모델의 해석이 어려워진다. 암호화 처리부는 공개키를 이용하여 난독화된 상기 인공지능 모델을 암호화하여 암호화된 인공지능 모델을 취득할 수 있다. 일 실시예에서, 암호화 처리부는 비대칭 암호화 방식(PKI : Public Key Infrastructur e)에 의해 인공지능 모델을 암호화할 수 있다. 이러한 경우에, 공개키는 암호화된 인공지능 모델이 구동되는 구 동 장치에 대하여 고유하게 부여되는 비밀키에 대응하여 생성될 수 있다. 비대칭 암호화는 서로 다른 공개키와 비밀키를 이용하여 암호화 및 복호화를 수행하는 방식이다. 비대칭 암호화 는 동일한 비밀키를 이용하여 암호화 및 복호화를 수행하는 대칭 암호화 방식과는 다른 방식이다. 비대칭 암호 화는 공개키(비밀키에 대응하여 생성됨)로 암호화를 수행하고, 공개키에 대응하는 비밀키에 의해서만 복호화가 가능하다. 후술하는 바와 같이 공개키로 암호화를 하고, 비밀키를 칩 내에 저장하고, 외부로 출력되지 않도록 구성하면, 칩 내에서만 복호화가 가능하여, 인공지능 모델의 외부 유출이 방지될 수 있다. 도 4a 및 4b는 인공지능 오픈 플랫폼 아키텍처를 나타내는 예시도이다. 도 4a 및 도 4b를 참조하면, 인공지능 오픈 플랫폼 아키텍처는 인공지능 오픈 플랫폼에서 요구되는 인공신경망 모델, 계산 그래프, 입출력 노드, 텐서, 오퍼레이터인 연산자, 변수를 정의한다. 본 발명의 일 실시예에 따른 인공지능 모델 변환 장치 및 인공지능 모델 구동 장치는 인공지능 오픈 플랫폼 아키텍처인 표준을 따르며, 표준 을 준수하는 인공지능 모델을 암호화 및 복호화할 수 있다. 도 4a는 ONNX 1.7에서 정의하는 인공지능 모델의 클래스 다이어그램이다. 도 4b는 도 4a에 도시된 각 구성요소 를 나타내는 표이다. 주요 구성 요소는 Proto라는 명칭을 갖는다. Proto는 Prototype의 약자로 Google의 Protocol Buffer라는 표준에서 객체를 정의할 때 사용하는 용어이다. “ModelProto”는 계산 그래프와 파라미터를 표현하는 인공신경망 모델이다. “GraphProto”는 계산 그래프를 표현하기 위한 최상위 노드이고, 입력, 출력, 노드에서 사용할 변수와 초기값을 표현한다. “NodeProto”는 계 산 그래프의 각 부분을 구성하는 노드이고, 입력, 출력, 사용할 오퍼레이터와 오퍼레이터의 속성을 표현한다. “TensorProto”는 각 노드에서 사용할 텐서를 표현한다. “AttributeProto”는 각 오퍼레이터에서 사용할 속성 을 표현한다. “ValueInfoProto”는 각 오퍼레이터에서 사용할 변수를 표현한다. “NodeProto”는 인공지능 모델의 핵심에 해당하고, “NodeProto”는 인공지능 모델의 필수 구성 요소로서 input, output, op_type, attribute를 포함한다. Name, domain의 경우는 사용자(개발자)를 위한 정보로 AI 모 델이 직접 실행되는데 필요 없는 정보이다. input, output, op_type의 경우도 사용자가 읽기 쉬운 “문자열” 형식으로 되어있는데, 단순한 숫자로 대체가 가능하다. 문자열을 단순한 숫자로 대체하면 AI 모델을 실행 하는데 필요한 정보는 유지하지만, 개발자 입장에서 필요한 메타데이터는 제거할 수 있다. 도 5는 본 발명의 일 실시예에 따른 인공지능 모델 구동 장치 및 방법을 나타내는 블록도이다. 도 5를 참조하면 배포 타겟은 입력부, 모델 구동부, 모델 복호화부, 모델 저장소, 모 델 해석부 및 출력부를 포함할 수 있다. 배포 타겟은 온도, 고도, 지문 등 각종 센서, 이미지, 적외선 등 카메라, 라이더와 같은 센서를 포함하는 입력 장치와, 모터, 공압, 유압 등 액추에이터를 포함하는 출력 장치와 상호 작용한다. 배포 타겟의 입력부는 센서로부터 시계열 데이터를 입력받고, 입력 받은 시계열 데이터를 인공 지능 모델에 입력할 수 있도록 텐서로 변환한다. 텐서는 행렬이 3차원 이상으로 쌓인 형태로 데이터를 처리한다. 입력부는 센서로부터 입력받은 이미지나 음성을 텐서 형태로 변환시켜준다. 모델 구동부는 텐서를 인공지능 모델에 적용해서 출력 데이터를 생성하고, 생성된 출력 데이터를 액추에이 터를 구동할 수 있도록 변환하여 출력값을 출력부에 제공한다. 모델 구동부는 소프트웨어인 경 우 인터프리터 형태이고, 하드웨어인 경우 FPGA나 ASIC 형태가 될 수 있다. 출력부는 출력값에 따라 액추에이터를 구동한다. 모델 저장소는 인공지능 모델 변환 장치로부터 암호화된 인공지능 모델을 저장할 수 있다. 모델 저장 소에 저장된 인공지능 모델은 비밀키에 대응하는 공개키로 암호화되어 있기 때문에, 비밀키와 함께 유출되 지 않는다면, 인공지능 모델의 불법 복제 및 불법 사용이 방지될 수 있다. 모델 복호화부는 모델 저장소에 저장된 암호화된 인공지능 모델을 구동 장치에 대하여 고유하게 부여되는 비밀키를 이용하여 복호화하여 복호화된 인공지능 모델을 취득할 수 있다. 모델 해석부는 모델 복호화부에 의해 복호화된 인공지능 모델의 아키텍처 및 파라미터를 메모리 상에 로딩하고, 로딩된 인공지능 모델을 해석할 수 있다. 모델 해석부에 의해 해석된 인공지능 모델은 모델 구 동부에 제공되어 인공지능 모델이 적용된 출력데이터가 생성될 수 있다. 본 발명의 실시예에서, 모델 암호화부는 비대칭 암호키인 공개키를 이용하여 인공지능 모델을 암호화하고, 공개키에 대응하는 비밀키를 갖는 모델 복호화부만이 암호화된 인공지능 모델을 복호화할 수 있다. 따라서, 암호화된 인공지능 모델이 유출되는 경우에도, 다른 구동 장치에서 복호화가 불가능하며, 해당 인공지 능 모델의 구동도 불가능하다. 모델 구동부, 모델 복호화부 및 모델 해석부는 하나의 칩(chip)으로 구현될 수 있다. 모델 복호 화부는 암호화된 인공지능 모델을 복호화하고, 복호화된 인공지능 모델은 모델 해석부에서 해석되며, 해석된 모델은 모델 구동부에서 구동된다. 인공지능 모델의 복호화 이후의 모든 과정이 하나의 칩(chip)에 서 실행됨으로써 복호화된 인공지능 모델이 물리적으로 외부 유출되는 것을 방지할 수 있다. 이상에서 설명된 단계 또는 프로세스는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합에 의해 실행될 수 있다. 예를 들어, 실시예들에서 설명된 단계 또는 프로세스는, 예를 들어, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPA(field programmable array), PLU(programmable logic unit), 마이크 로프로세서, 또는 명령(instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 실행될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에 서 수행되는 하나 이상의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가"}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "사용되는 것으로 설명된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처 리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세 서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(signal wave)에 영구적으로, 또는 일시적으로 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매 체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가능 기록 매체의 예에 는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD-ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto-optical media), 및 롬 (ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치 가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리 터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상기된 하드웨어 장치는 실시예 의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이 다."}
{"patent_id": "10-2021-0112830", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다."}
{"patent_id": "10-2021-0112830", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 인공지능 모델이 생성되는 프로세스를 설명하는 개념도이다. 도 2는 인공지능 오픈 플랫폼을 설명하는 예시도이다. 도 3은 본 발명의 일 실시예에 따른 인공지능 모델 변환 장치 및 방법을 나타내는 블록도이다. 도 4는 인공지능 오픈 플랫폼 아키텍처를 나타내는 예시도이다. 도 5는 본 발명의 일 실시예에 따른 인공지능 모델 구동 장치 및 방법을 나타내는 블록도이다."}
