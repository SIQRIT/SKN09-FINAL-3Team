{"patent_id": "10-2022-0002434", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0106819", "출원번호": "10-2022-0002434", "발명의 명칭": "저작툴을 이용한 자동화 프로세스 설계 방법", "출원인": "주식회사 이콜트리", "발명자": "장윤석"}}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "저작툴을 이용한 자동화 프로세스 설계방법에 있어서, 프로세서가,(a) 자동화 프로세스 설계를 위한 기능블록과 복수의 연산자를 포함하는 컴포넌트 모음 및 설계화면을 제공하는단계; (b) 상기 설계화면에 드래그 앤 드롭되는 컴포넌트에 대한 설정메뉴를 제공하여 컴포넌트 속성을 설정받는단계;(c) 상기 컴포넌트의 속성 및 드래그 앤 드롭된 위치에 따라, 다음 생성될 컴포넌트를 연결하기 위한 연결자를생성하여 표시하는 단계;를 포함하고,상기 (b)단계 및 (c)단계는, 운영자의 컴포넌트 선택에 따라 순차반복 수행되되, 순차 생성된 컴포넌트의 위치에 따라 상기 연결자에 의해 연결되어 동작순서가 정의된 비즈니스 프로세스를 생성하며, 상기 (b)단계에서 드래그 앤 드롭된 컴포넌트가 종료연산자이면 상기 (c)단계는 미수행되고,상기 (b)단계에서 드래그 앤 드롭된 컴포넌트가 기능블록이면, 기능블록에 설정된 속성으로부터 서비스 유형과,수행자 및 동작을 포함하는 네임명을 추출하여 해당 기능블록의 필드에 표시하는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 (b)단계는, 드래그 앤 드롭된 컴포넌트가 기능블록이면,(b-1) 기정의된 복수 개의 서비스 유형을 제공하여 어느 하나의 서비스 유형이 선택되면, 상기 기능블록의 제1필드에 상기 선택된 서비스 유형을 출력하여 표시하는 단계;(b-2) 상기 선택된 서비스 유형으로 분류된 복수 개의 서비스카드를 제공하여 어느 하나의 서비스 카드가 선택되면, 선택된 서비스 카드에 기설정된 커넥터에 연결된 자동화모듈에 대한 적어도 하나의 파라미터를 제공하여파라미터를 선택받는 단계; 및(b-3) 상기 선택된 서비스 카드에 대응되는 동작 및 상기 설정메뉴를 통해 입력되는 수행자를 상기 선택된 기능블록의 네임명으로 정의하여 상기 기능블록의 제2필드에 출력하여 표시하는 단계를 포함하는, 자동화 프로세스설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 기능블록은 상기 선택된 서비스 카드에 기설정된 커넥터에 연결된 자동화모듈을 통해 서비스 태스크를 수행하는 프로세스 모듈이 되고, 상기 동작은 자동화모듈에 함수 호출하여 수행되는 단위 태스크를 명명하며, 상기 수행자는 상기 동작을 수행하는 주체를 명명하는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 커넥터는, 연결된 자동화모듈의 리소스에 대한 정보 및 접속 정보를 포함하며, 적어도 하나의 서비스카드에 연결되는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2023-0106819-3-제2항에 있어서,기저장된 비즈니스 프로세스에 포함된 기능블록들의 위치를 기반으로 동작별 이웃하는 거리별 동작 시퀀스를 학습하여, 기준동작에 대한 거리별 동작을 예측하는 동작예측모델을 생성하는 단계;를 더 포함하고,상기 (b-2)단계는, 상기 복수 개의 서비스카드를, 상기 동작예측모델을 기반으로 예측된 동작에 대응되는 서비스카드 순서로 추천 제공하는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 (b-2)단계는,현재 드래그 앤 드롭된 기능블록의 서비스 유형이 선택되면, 상기 동작예측모델을 기반으로 상기 선택된 서비스유형으로 분류된 복수 개의 서비스카드에 대해, 상기 설계화면에서 이전 생성된 적어도 하나의 기능블록에 대응되는 동작을 기준동작으로 하여 상기 거리별 동작을 예측하고, 예측률이 높은 순의 동작에 대응되는 서비스 카드 순으로 추천 제공하는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 추천제공된 서비스 카드가 운영자 단말에 의해 선택되면, 추천에 이용된 동작 시퀀스의 이용횟수를 누적하고, 운영자별 추천횟수 대비 이용횟수를 산출하여 저장하는 단계;를 더 포함하고,상기 (b-2)단계는,상기 서비스 카드 추천시 동작 시퀀스별 누적 이용횟수에 따른 가중치를 상기 예측률에 적용하여 추천 우선순위를 결정하고, 운영자별 추천횟수 대비 이용횟수에 따라 운영자별 추천제공 여부를 결정하는, 자동화 프로세스설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제5항에 있어서,상기 비지니스 프로세스는 적어도 하나의 서브 프로세스를 포함하고, 상기 서브 프로세스는 복수의 프로세스 모듈을 포함하며, 상기 속성이 설정된 기능블록은 상기 프로세스 모듈이 되고, 상기 동작예측모델은, 상기 비지니스 프로세스의 전체 동작 시퀀스를 기반으로, 각 기능블록의 제2필드에 명명된 수행자 및 동작을 프로세스 모듈 단위로 구분하여 임베딩하는 프로세스 모듈 임베딩, 서브 프로세스 단위로 구분하는 서브 프로세스임베딩 및 상기 프로세스 모듈의 위치를 구분하기 위한 위치 임베딩을 병합하여 얻어진 각 단위벡터들을 이용하며, 일부 동작에 대해 마스킹 적용 및 다른 동작으로 변경하여 프로세스 모듈의 동작을 예측하고 이웃하는 서브프로세스의 동작 시퀀스를 학습하여 생성된, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 연산자는, 시작 연산자, 병합 또는 분기에 대한 게이트웨이 연산자, 종료 연산자를 포함하고,상기 서브 프로세스는, 상기 게이트웨이 연산자 및 종료 연산자에 의해 구분되는, 자동화 프로세스 설계방법."}
{"patent_id": "10-2022-0002434", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서,상기 동작예측모델은, 상기 비지니스 프로세스에 포함된 복수 개의 서브프로세스에 대해, 이어지는 동작 시퀀스인지 2개의 서브프로세스별로 학습하여 생성된, 자동화 프로세스 설계방법.공개특허 10-2023-0106819-4-"}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 저작툴을 이용한 자동화 프로세스 설계방법에 관한 것으로, 프로세서가, (a) 자동화 프로세스 설계를 위한 기능블록과 복수의 연산자를 포함하는 컴포넌트 모음 및 설계화면을 제공하는 단계. (b) 설계화면에 드래그 앤 드롭되는 컴포넌트에 대한 설정메뉴를 제공하여 컴포넌트 속성을 설정받는 단계, (c) 컴포넌트의 속성 및 드 (뒷면에 계속)"}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 저작툴을 이용한 자동화 프로세스 설계 방법에 관한 것으로서, 보다 상세하게는 저작툴을 이용하여 컴포넌트를 드래그앤 드롭시 선택가능한 속성들을 제공하여 선택받고, 기능블록에 대해 선택된 속성으로부터 서 비스 유형과, 수행자 및 동작을 포함하는 네임명을 추출하여 필드에 표시함으로써, 프로그래밍 배경이 없는 운 영자도 직관적으로 프로세스 모듈을 용이하게 생성할 수 있고, 프로세스 모듈을 직병렬 조합함으로써 자동화 프 로세스를 설계할 수 있는, 저작툴을 이용한 자동화 프로세스 설계 방법에 관한 것이다."}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "초자동화(Hyperautomation)는 사람이 반복적으로 처리해야 하는 단순 업무를 로봇 소프트웨어를 통해 자동화하 는 솔루션인 로봇 프로세스 자동화(RPA; Robot Process Automation)에서 시작된 개념으로, 다수의 머신러닝, 인 공지능, 패키징된 소프트웨어, 자동화 툴, 자동화 프로세스를 결합시켜 업무를 수행하는 것을 의미한다. 이 경 우, 자동화 프로세스는 감지, 분석, 설계, 자동화, 측정 모니터링, 재평가 등 다양한 자동화된 프로세스를 포함 할 수 있다. 이 때, 초자동화 기술은 자동화의 범위, 자동화 프로세스/툴 사이의 관계, 자동화 프로세스/툴이 결합되고 조직화되는 방법 등을 이해하는 것에 초점이 맞추어져 있다. 과거에도 ERP 시스템 등에 있어서, 일부 RPA를 통하여 재고 관리, 회계 등의 프로세스 또는 결제 프로세스 등이 일부 자동화된 방법으로 진행될 수 있었다. 단, 업무 담당자는 최초 업무 수행시에 각각의 RPA를 찾기 위하여 상당한 시간과 노력을 기울여야 했다. 특히, 큰 조직에서는 수없이 많은 레거시 프로그램들이 존재하기 때문에 이와 같은 레거시 시스템을 활용하기 위하여 많은 시간이 필요했고, 이에 따른 업무 효율성 저하가 상당했다. 이러한 과거의 문제점들을 이용하여, 일부 레거시 RPA들을 호출하여 연계하는 종래 기술들이 있었다. (특허문헌 1 참조) 그러나, 이러한 일부 RPA를 연계하는 수준의 시스템은 대규모 작업장에서 수천 수만가지 연계 비즈니스 프로세스가 존재하는 환경에서 사용자의 편의성을 제공하면서 챗봇이나 이메일을 통하여 정확한 프로세스를 트 리거 시키는 것이 매우 어려웠고, 따라서, 정확하고 효율적인 업무를 위하여 레거시 RPA들에 연계하여 사용자가 편리하게 활용할 수 있는 솔루션이 절실하게 요구되고 있는 상황이다. 또한, 자동화 프로세스의 설계를 위해서는, 운영자(설계자)가 설정하고자 하는 정보에 대하여 특정 언어로 직접 입력하고 코딩을 수행하여야 했다. 이에 따라 특정 언어의 사용 및 코딩이 가능한 운영자만이 설계가 가능하다 는 문제, 즉, 비지니스 프로세스 설계에 있어서 사용 가능 이용자가 제한적이라는 단점이 있었다. 이에, 광범위한 개발자 층을 끌어들이고, 프로그래밍 배경이 없는 운영자도 직관적으로 자동화 프로세스를 용이 하게 설계할 수 있는 기술 개발의 요구가 점차 증대되고 있다. 선행기술문헌 특허문헌 (특허문헌 0001) : 한국 공개특허 제10-2020-0127695호(2020.11.11.공개)"}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는 저작툴을 이용하여 컴포넌트를 드래그앤 드롭시 선택가능한 속성들을 제공하 여 선택받고, 기능블록에 대해 선택된 속성으로부터 서비스 유형과, 수행자 및 동작을 포함하는 네임명을 추출 하여 필드에 표시함으로써, 프로그래밍 배경이 없는 운영자도 직관적으로 프로세스 모듈을 용이하게 생성할 수 있고, 프로세스 모듈을 직병렬 조합함으로써 자동화 프로세스를 설계할 수 있는, 저작툴을 이용한 자동화 프로 세스 설계 방법을 제공하는 것이다. 특히, 서비스유형에 따라 복수 개의 서비스카드를 분류하고, 각각의 서비스카드에 기설정된 자동화모듈을 호출 할 수 있는 커넥터를 기정의하여, 운영자가 설계의도에 따라 저작툴을 통해 서비스유형 및 서비스카드를 선택하 고 파라미터값을 설정함으로써 자동화모듈을 호출할 수 있는 프로세스 모듈을 용이하게 생성할 수 있고, 프로세 스 모듈을 직병렬 조합함으로써 자동화 프로세스를 설계할 수 있는, 저작툴을 이용한 자동화 프로세스 설계 방 법을 제공하는 것이다. 또한, 본 발명은 비즈니스 프로세스의 설계시에 이전 프로세스모듈들의 필드명을 기반으로 다음 설계를 예측하 여 프로세스 모듈의 설정을 추천할 수 있는 저작툴을 이용한 자동화 프로세스 설계 방법을 제공하는 것이다."}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 해결하기 위하여 본 발명의 일 실시예에 따르면, 저작툴을 이용한 자동화 프로세스 설 계방법에 있어서, 프로세서가, (a) 자동화 프로세스 설계를 위한 기능블록과 복수의 연산자를 포함하는 컴포넌 트 모음 및 설계화면을 제공하는 단계, (b) 상기 설계화면에 드래그 앤 드롭되는 컴포넌트에 대한 설정메뉴를 제공하여 컴포넌트 속성을 설정받는 단계, (c) 상기 컴포넌트의 속성 및 드래그 앤 드롭된 위치에 따라, 다음 생성될 컴포넌트를 연결하기 위한 연결자를 생성하여 표시하는 단계를 포함할 수 있다. 이때, 상기 (b)단계 및 (c)단계는, 운영자의 컴포넌트 선택에 따라 순차반복 수행되되, 순차 생성된 컴포넌트의 위치에 따라 상기 연결자에 의해 연결되어 동작순서가 정의된 비즈니스 프로세스를 생성하며, 상기 (b)단계에서 드래그 앤 드롭된 컴포넌트가 종료연산자이면 상기 (c)단계는 미수행될 수 있다. 또한, 상기 (b)단계에서 드래그 앤 드롭된 컴포넌트가 기능블록이면, 기능블록에 설정된 속성으로부터 서비스 유형과, 수행자 및 동작을 포함하는 네임명을 추출하여 해당 기능블록의 필드에 표시할 수 있다. 또한, 상기 (b)단계는, 드래그 앤 드롭된 컴포넌트가 기능블록이면, (b-1) 기정의된 복수 개의 서비스 유형을 제공하여 어느 하나의 서비스 유형이 선택되면, 상기 기능블록의 제1필드에 상기 선택된 서비스 유형을 출력하 여 표시하는 단계, (b-2) 상기 선택된 서비스 유형으로 분류된 복수 개의 서비스카드를 제공하여 어느 하나의 서비스 카드가 선택되면, 선택된 서비스 카드에 기설정된 커넥터에 연결된 자동화모듈에 대한 적어도 하나의 파 라미터를 제공하여 파라미터를 선택받는 단계 및 (b-3) 상기 선택된 서비스 카드에 대응되는 동작 및 상기 설 정메뉴를 통해 입력되는 수행자를 상기 선택된 기능블록의 네임명으로 정의하여 상기 기능블록의 제2필드에 출 력하여 표시하는 단계를 포함할 수 있다. 또한, 상기 기능블록은 상기 선택된 서비스 카드에 기설정된 커넥터에 연결된 자동화모듈을 통해 서비스 태스크 를 수행하는 프로세스 모듈이 되고, 상기 동작은 자동화모듈에 함수 호출하여 수행되는 단위 태스크를 명명하며, 상기 수행자는 상기 동작을 수행하는 주체를 명명할 수 있다. 또한, 상기 커넥터는, 연결된 자동화모듈의 리소스에 대한 정보 및 접속 정보를 포함하며, 적어도 하나의 서비 스카드에 연결될 수 있다. 또한, 기저장된 비즈니스 프로세스에 포함된 기능블록들의 위치를 기반으로 동작별 이웃하는 거리별 동작 시퀀 스를 학습하여, 기준동작에 대한 거리별 동작을 예측하는 동작예측모델을 생성하는 단계를 더 포함할 수 있다. 이때, 상기 (b-2)단계는, 상기 복수 개의 서비스카드를, 상기 동작예측모델을 기반으로 예측된 동작에 대응되는 서비스카드 순서로 추천 제공할 수 있다. 또한, 상기 (b-2)단계는, 현재 드래그 앤 드롭된 기능블록의 서비스 유형이 선택되면, 상기 동작예측모델을 기 반으로 상기 선택된 서비스 유형으로 분류된 복수 개의 서비스카드에 대해, 상기 설계화면에서 이전 생성된 적 어도 하나의 기능블록에 대응되는 동작을 기준동작으로 하여 상기 거리별 동작을 예측하고, 예측률이 높은 동작 에 대응되는 서비스 카드 순으로 추천 제공할 수 있다. 또한, 상기 추천제공된 서비스 카드가 운영자 단말에 의해 선택되면, 추천에 이용된 동작 시퀀스의 이용횟수를 누적하고, 운영자별 추천횟수 대비 이용횟수를 산출하여 저장하는 단계를 더 포함할 수 있다. 이때, 상기 (b-2)단계는, 상기 서비스 카드 추천시 동작 시퀀스별 누적 이용횟수에 따른 가중치를 상기 예측률 에 적용하여 추천 우선순위를 결정하고, 운영자별 추천횟수 대비 이용횟수에 따라 운영자별 추천제공 여부를 결 정할 수 있다.또한, 상기 비지니스 프로세스는 적어도 하나의 서브 프로세스를 포함하고, 상기 서브 프로세스는 복수의 프로 세스 모듈을 포함하며, 상기 속성이 설정된 기능블록은 상기 프로세스 모듈이 될 수 있다. 또한, 상기 동작예측모델은, 상기 비지니스 프로세스의 전체 동작 시퀀스를 기반으로, 각 기능블록의 제2필드에 명명된 수행자 및 동작을 프로세스 모듈 단위로 구분하여 임베딩하는 프로세스 모듈 임베딩, 서브 프로세스 단 위로 구분하는 서브 프로세스 임베딩 및 상기 프로세스 모듈의 위치를 구분하기 위한 위치 임베딩을 병합하여 얻어진 각 단위벡터들을 이용하며, 일부 동작에 대해 마스킹 적용 및 다른 동작으로 변경하여 프로세스 모듈의 동작을 예측하고 이웃하는 서브 프로세스의 동작 시퀀스를 학습하여 생성될 수 있다. 또한, 상기 연산자는, 시작 연산자, 병합 또는 분기에 대한 게이트웨이 연산자, 종료 연산자를 포함하고, 상기 서브 프로세스는, 상기 게이트웨이 연산자 및 종료 연산자에 의해 구분될 수 있다. 또한, 상기 동작예측모델은, 상기 비지니스 프로세스에 포함된 복수 개의 서브프로세스에 대해, 이어지는 동작 시퀀스인지 2개의 서브프로세스별로 학습하여 생성될 수 있다."}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시 예에 따른 저작툴을 이용한 자동화 프로세스 설계 방법은, 저작툴을 이용하여 컴포넌트를 드 래그앤 드롭시 선택가능한 속성들을 제공하여 선택받고, 기능블록에 대해 선택된 속성으로부터 서비스 유형과, 수행자 및 동작을 포함하는 네임명을 추출하여 필드에 표시함으로써, 프로그래밍 배경이 없는 운영자도 직관적 으로 프로세스 모듈을 용이하게 생성할 수 있고, 프로세스 모듈을 직병렬 조합함으로써 자동화 프로세스를 설계 할 수 있다. 특히, 서비스유형에 따라 복수 개의 서비스카드를 분류하고, 각각의 서비스카드에 기설정된 자동화모듈을 호출 할 수 있는 커넥터를 기정의하여, 운영자가 설계의도에 따라 저작툴을 통해 서비스유형 및 서비스카드를 선택하 고 파라미터값을 설정함으로써 자동화모듈을 호출할 수 있는 프로세스 모듈을 용이하게 생성할 수 있고, 프로세 스 모듈을 직병렬 조합함으로써 자동화 프로세스를 설계할 수 있다. 또한, 본 발명은 비즈니스 프로세스의 설계 중에, 이전 프로세스모듈들의 필드명을 기반으로 다음 설계를 예측 하여 프로세스 모듈의 설정을 추천제공할 수 있다. 이때, 서비스 카드 추천시 동작 시퀀스별 누적 이용횟수에 따른 가중치를 적용하여 추천 우선순위를 결정할 수 있고, 운영자의 추천이용 성향에 따라 추천 설정을 제공할 수도 있다. 본 발명에 따른 효과는 이상에서 예시된 내용에 의해 제한되지 않으며, 더욱 다양한 효과들이 본 명세서 내에 포함되어 있다."}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0002434", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 도면에서 표시된 구성요소의 크기 및 상대적인 크기는 설명의 명료성을 위해 과장된 것일 수 있다. 명세서 전체 에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭하며, \"및/또는\"은 언급된 아이템들의 각각 및 하나 이상의 모 든 조합을 포함한다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 비록 제1, 제2 등이 다양한 소자나 구성요소들을 서술하기 위해서 사용되나, 이들 소자나 구성요소들은 이들 용 어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단지 하나의 소자나 구성요소를 다른 소자나 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 소자나 구성요소는 본 발명의 기술적 사상 내에서 제2 소자나 구성요소 일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해 석되지 않는다. 후술하는 상세한 설명은 한정적인 의미로써 취하려는 것이 아니며, 본 발명의 범위는, 적절하게 설명된다면, 그 청구항들이 주장하는 것과 균등한 모든 범위와 더불어 첨부된 청구항에 의해서만 한정된다. 도면에서 유사한 참 조부호는 여러 측면에 걸쳐서 동일하거나 유사한 기능을 지칭한다. 본 명세서의 해석의 명확함을 위해, 이하에서는 본 명세서에서 사용되는 용어들을 정의하기로 한다. 본 명세서에서 사용되는 용어 “BPM(Business Process Management)”은 비즈니스 프로세스를 발견, 모델링, 분 석, 측정, 개선, 최적화 및 자동화하기 위해 다양한 방법을 사용하는 운영 관리 기법을 의미하는 것이다. 또한, 좁은 의미에서 BPM은 업무 프로세스를 사전에 모델링하고 설계된 프로세스대로 업무 결재, 승인, 구매 등의 업 무 등이 자동화되어 흘러갈 수 있도록 도와주는 IT 시스템을 의미할 수 있다. 본 명세서에서 사용되는 용어 “RPA”는 로봇 프로세스 자동화(Robot Process Automation)의 약자로, 소프트웨 어 로봇 또는 인공지능(AI)을 기반으로 사람이 하는 단순 반복 업무를 자동화는 기술을 의미하는 것이다. 현재 RPA 플랫폼은 AI 기능을 제공하지만, RPA는 주로 규칙 기반(Rule base)의 업무를 수행하고, AI는 적응 및 예측 업무를 담당하며 각각 독립적인 역할을 수행하고 있다. 다시 말해, BPM은 프로세스 개선을 위해 프로세스 자체를 재설계하고 변경하는 방식이라면, RPA는 사람이 하던 현재 방식을 그대로 모방하여 소프트웨어로 대체하여 자동화하는 방식인 것으로 이해되는 것이 바람직하다. 본 명세서에서 사용되는 용어 “SAP”는 경영 활동 프로세스들을 통합적으로 연계해 관리하고 공유하는 ERP(전 사적 자원 관리) 시스템 중에 하나인 것을 의미한다. 이하에서는, 첨부된 도면을 참조하여 본 발명의 다양한 실시예들을 상세히 설명한다. 도 1은 본 발명의 실시 예에 따른 저작툴을 이용한 자동화 프로세스 설계를 설명하기 위한 프로세스 자동화 시 스템의 개략적인 구성을 나타내는 도면이다.도 1을 참조하면, 본 발명의 일 실시예에 따른 프로세스 자동화 시스템은, 프로세스 자동화 서버에 구현되 며, 운영자 단말 및 사용자 단말에 연결될 수 있다. 프로세스 자동화 서버는 단일 서버 또는 서 버군으로 구성되며, 운영자 단말을 통해 설계된 프로세스들이 저장되는 DB를 더 포함할 수 있다. 운영자 단말은 네트워크를 통하여 프로세스 자동화 서버에 구현될 웹 인터페이스에 의하여 자동 화 저작툴을 제공받게 되며, 제공된 자동화 저작툴을 이용하여 복수 개의 비지니스 프로세스를 설계 및 저장하 여 사용자에게 자동화 프로세스를 제공할 수 있다. 사용자 단말(300 및 330)은 자동화 저작툴을 통해 생성된 자동화 프로세스를 이용하여 업무를 수행할 수 있다. 이 경우, 사용자 단말(300 및 330)은 컴퓨팅 기능 및 통신 기능을 가지고 있는 단말이면 가능하며, 이메일 또는 챗봇 등을 통하여 프로세스 자동화 서버의 웹 인터페이스와 접속 가능한 단말이다. 사용자 단말(300 및 330)은 휴대폰, 태블릿 PC 등의 휴대가능한 단말도 가능하다. 이하에서는 도 2 및 도 3을 참조하여, 프로세스 자동화 서버의 구성 및 기능에 대하여 상세하게 설명한다. 도 2는 도 1의 서버의 개략적인 구성을 나타내는 블록도이다. 도 3은 본 발명의 일 실시예에 따른 프로세스 자 동화 방법을 설명하기 위한 흐름도이다. 도 2를 참조하면, 본 발명에 따른 프로세스 자동화 서버는 통신부, 디스플레이부, 입력부, 프로세서, 버스 및 메모리를 포함할 수 있다. 이 경우, 통신부는 네트워크를 통하여, 운영자 단말 및 사용자 단말(300 및 330)과 통신을 할 수 있다. 한편, 디스플레이부 및 입력부는 각각 본 발명의 일 실시예에 따른 프로세스 자동화 서버의 운 용 및 관리를 위한 표시 장치 및 입력 수단이다. 버스는 상술한 통신부, 디스플레이부, 입력부 , 프로세서 및 메모리 사이의 내부 통신을 담당하고 있으며, 프로세서는 메모리 상에 탑재된 소프트웨어 및/또는 소프트웨어 모듈들의 실행을 위한 마이크로프로세서 일 수 있다. 한편, 메모리는 저작툴, 수행부, 커넥팅 레이어, 학습부, 트리거링부 및 웹 인 터페이스를 포함할 수 있다. 본 실시예의 경우에는 하나의 서버 상에서 버스를 통해 통신하는 장치로 표현하였으나, 앞서 설명한 바와 같이, 서버군으로 구성되어 통신부에 의하여 연결되는 소프트웨어 및/또 는 소프트웨어 모듈일 수 있다. 예컨대, 학습부의 경우에는 큰 리소스를 필요로 할 수 있으므로, 별도의 외부 서버로 구현될 수 있다. 각 각의 저작툴, 수행부, 커넥팅 레이어, 학습부, 트리거링부 및 웹 인터페이스는 소프트웨어, 소프트웨어 모듈, 하드웨어 또는 소프트웨어 및 하드웨어의 결합으로 구현될 수 있다. 이하에서는 도 3 내지 도 10을 참조하여 메모리 상에 구현된 저작툴, 수행부, 커넥팅 레이어 , 학습부, 트리거링부 및 웹 인터페이스의 프로세스 자동화 수행 방법에 대하여 설명한다. 먼저, 도 3을 참조하면, 본 발명의 일 실시예에 따른 프로세스 자동화 수행 방법은 최초, 운영자 단말로부 터 입력을 통하여 비즈니스 프로세스를 설계하는 단계를 거친다(S310). 이때, 도 4 및 도 5를 통해 비지니스 프로세스 설계 단계를 구체적으로 설명할 수 있다. 또한, 도 6 내지 9를 참조하면 프로세스 운영자는 운영자 단말 및 웹 인터페이스를 통해서 도 6 및 7과 같은 GUI(Graphical User Interface)를 제공받을 수 있다. 이러한 GUI를 통하여, 운영자는 기능블록들 및 연산 자(421, 422, 423)들을 활용하여 비즈니스 프로세스를 설계할 수 있다. 이때, 비즈니스 프로세스는 인증된 복수의 운영자에 의해 설계될 수 있다. 이 경우, 운영자 단말의 입력에 따라 프로세서는 기능블록들의 속성을 설정하여 프로세스 모듈(속성이 설정된 기능블록)로 생 성하고, 연산자를 통해 결합시켜서 병렬 또는 순차 진행할 수 있는 비즈니스 프로세스를 생성할 수 있다. 구체적으로, 프로세서는 저작툴을 구동시켜 웹인터페이스를 통해 운영자단말로 도 6과 같 이, 컴포넌트 모음 및 설계화면을 포함하는 GUI를 제공할 수 있다(S311). 컴포넌트 모음은 자동화 프로세스 설계를 위한 연산자(시작 연산자, 병합, 분기 등의 게이트웨이 연산 자, 종료연산자) 및 기능블록 등의 생성 및 선택을 위한 컴포넌트들의 모음이 될 수 있고, 설계 화면은 운영자에 의해 컴포넌트 모음에서 선택되어 드래그 앤 드랍되는 연산자 및 기능블록 등을 표시할 수 있다. 이때, 운영자단말에 의해 드래그 앤 드롭되는 컴포넌트에 대한 설정메뉴를 제공하여 드래그 앤 드롭된 컴 포넌트에 대한 속성을 설정받을 수 있다(S312). 예컨데, 시작 연산자가 드래그 앤 드롭 되면 설정메뉴를 제공하여 시작 이벤트 등의 설정을 입력받을 수 있고, 게이트웨이 연산자가 드래그 앤 드롭되면 병합, 분기 등에 대응하는 조건 설정 등을 입력받을 수 있 으며, 기능블록이 드래그 앤 드롭되면 기능블록의 서비스 태스크 설정을 위한 속성을 입력받을 수 있 다. 이때, 기능블록에 속성이 설정되면, 기능블록은 설정된 속성에 따라 서비스태스크를 수행하는 하나의 프로세스 모듈이 될 수 있다. 또한, 기능블록은 도 6, 도 8 및 도 9와 같이 제1필드 및 제2필드(41 2)를 포함할 수 있고, 속성이 설정되는 경우 설정된 속성으로부터 서비스 유형(제1필드에 표시)과, 수행자 및 동작을 포함하는 네임명(제2필드에 표시)을 추출하여 해당 기능블록의 필드에 표시하여, 운영자가 직관적으로 설계되는 동작 시퀀스를 인지할 수 있게 한다. 다음으로, 드래그 앤 드롭된 컴포넌트가 종료연산자가 아니면, 다음 생성될 컴포넌트를 연결하기 위한 연 결자(도 6 및 도 8에서, 440)를 생성하여 설계화면에 표시할 수 있다(S314). 이때, 게이트웨이 연산자의 종류에 따라 연결자는 복수 개가 생성될 수도 있다. S312 내지 S314 단계는 운영자단말의 입력에 따라 반복 수행될 수 있으며, 종료연산자가 드래그 앤 드롭되면 S314단계가 미수행될 수 있다. 이때, 운영자단말의 입력에 따라, 도 6과 같이 종료연산자는 복수 개가 생성될 수도 있다. 이에 따라 종료 연산자가 입력되면(S313), 종료에 따른 저장여부를 문의하여 또는 문의없이 운영자단말로부터 저장 입력이 수신되는 경우(S315), 설계화면에 설계된 비즈니스 프로세스 를 DB에 저장할 수 있다(S316). 즉, 도 4와 같이 순차 생성된 컴포넌트의 위치에 따라 연결자에 의해 연결되어 동작시퀀스가 정의된 비즈니스 프로세스가 저장될 수 있다. 이때, 본 발명에서는 운영자(구체적으로 설계자)가 저작툴을 통해 시각적이고 직관적인 비지니스 프로세스 를 용이하게 설계할 수 있도록, 사전에 커넥터 및 시작이벤트, 서비스 카드 등을 기 정의하여 저장할 수 있다. 본 발명에서는, 서비스 유형에 따라 서비스 카드를 분류하고, 서비스 카드마다 하나의 커넥터를 기설정하여 저 장하고, 운영자단말에서 프로세스 설계시 속성 설정에 이용할 수 있도록 제공할 수 있다. 여기서, 서비스 유형은 자동화 프로세스를 위한 자동화 모듈의 종류가 될 수 있으며, 챗봇, 메일, OCR, RPA, SAP 등의 카테고리로 구분될 수 있고, 각 카테고리에 대해 세부적으로 구분(일 예로, 메일1, 메일2 등)될 수도 있다. 또한, 커넥터는 기설정된 자동화 모듈의 리소스에 대한 정보 및 접속 정보를 포함할 수 있다. 도 7을 참고하면, 커넥터는 커넥터 기본 정보, 자동화 모듈 리소스, 자동화 모듈 접속 정보를 포함할 수 있고, 복 수의 커넥터가 기저장될 수 있다. 또한, 시작 이벤트는 비지니스 프로세스 설계시 설정될 수도 있고, 기정의된 시작 이벤트를 운영자단말로 부터 선택받아 설정될 수도 있다. 시작 이벤트는 비지니스 프로세스를 실행시키는 조건이 될 수 있다. 또한, 서비스 카드는 서비스 유형별로 분류되고, 기정의된 서비스 태스크(동작)를 수행하기 위한 어느 하나의 자동화모듈에 연결된 커넥터가 매칭 설정되어 기저장될 수 있다. 이때, 서비스 카드는 기설정된 커넥터에 연결 된 자동화모듈에 함수 호출하여 수행되는 단위 태스크를 동작으로 명명하여 기저장될 수 있다. 일 예로, 서비스 카드는 도 8과 같이 단위 태스크에 대응되는 동작으로 명명되어 제공될 수 있다. 도 5 및 도 8을 참고하면, 프로세서는 저작툴 및 웹 인터페이스를 통해, S312단계에서 드래그 앤 드롭된 컴포넌트가 기능볼록이면(S3121), 기정의되어 저장된 복수 개의 서비스 유형(도 8에서, 31)을 제공하고, 어느 하나의 서비스 유형이 선택되면(S3123), 기능블록의 제1필드에 S3123에서 선택 된 서비스 유형을 출력하여 표시할 수 있다(S3124). 다음으로, 설정메뉴를 제공하여 S3123에서 선택된 서비스 유형으로 분류된 복수 개의 서비스카드를 제공하 여(S3125) 어느 하나의 서비스 카드가 선택되면(S3126), 선택된 서비스 카드에 기설정된 커넥터에 연결된 자동 화모듈에 대한 적어도 하나의 파라미터를 제공하여(S3127) 파라미터를 선택받을 수 있다(S3128).이때, S3125단계에서 서비스카드는 본 발명의 일 실시 예에 따른 동작예측모델을 기반으로 예측된 추천 서비스 카드 순으로 제공될 수 있다. 한편, 운영자 설정에 따라 추천을 원하지 않는 경우 기설정된 순서(일 예로, 문자 순)로 제공될 수도 있다. 다음으로, 선택된 서비스 카드에 대응되는 동작 및 설정메뉴를 통해 입력되는 수행자를 선택된 기능블록의 네임 명으로 정의하여 기능블록의 제2필드에 출력하여 표시할 수 있다(S3129). 한편, 도 4의 S316단계에서 비즈니스 프로세스가 저장되면, 비즈니스 프로세스에 포함된 기능블록들의 위치를 기반으로 동작별 이웃하는 거리별 동작 시퀀스를 학습하여, 기준동작에 대한 거리별 동작을 예측하는 동작예측 모델을 생성할 수 있다(S317). 또한, 동작예측모델을 기반으로, S312에서 현재 드래그 앤 드롭된 기능블록의 서비스 유형이 선택되면, 선택된 서비스 유형으로 분류된 복수 개의 서비스카드에 대해, 설계화면에서 이전 생성된 적어도 하나의 기능블록 에 대응되는 동작을 기준동작으로 하여, 거리별 동작을 예측하여 예측률(출현 확률)이 높은 동작에 대응되는 서 비스 카드 순으로 추천 제공하여 현재 드래그 앤 드롭된 기능블록에 대한 서비스카드 선택에 도움을 줄 수 있다. 또한, 추천 제공된 서비스 카드가 운영자단말에 의해 선택되면, 추천에 이용된 동작 시퀀스의 이용횟수를 누적하고, 운영자(운영자단말)별 추천횟수 대비 이용횟수를 산출하여 저장하고, 이를 이용하여 서비스 카드 추 천시 동작 시퀀스별 누적 이용횟수에 따른 가중치를 예측률에 적용하여 추천 우선순위를 결정할 수 있다. 또한, 운영자별 추천횟수 대비 이용횟수에 따라 운영자별 추천제공 여부를 결정할 수도 있다. 운영자별 추천횟 수 대비 이용횟수가, 기설정치 보다 높으면 추천정보를 제공하고, 기설정치 보다 낮으면 추천정보를 미제공하되 운영자의 설정에 따라 제공할 수도 있다. 프로세서는 학습부를 통해 DB에 저장되는 비지니스 프로세스들을 학습하여 동작예측모델을 생성 할 수 있다. 본 발명의 동작예측모델은 비지니즈 프로세스에 포함된 각 프로세스 모듈에 대응되는 서비스 유형, 위치 및 동작 시퀀스에 기초하여 프로세스모듈별, 서브 프로세스별 동작관계를 분석하여 현재 드래그 앤 드롭된 기능블록의 속성 설정시 운영자에게 확률기반의 서비스카드를 추천하여 제공할 수 있다. 본 발명의 동작예측모델은 도 10a 내지 도 10c를 통해 설명할 수 있다. 도 10a는 저작툴을 통해 설계된 후 DB에 저장된 비지니스 프로세스의 일 예이다. 도 10b는 본 발명의 일 실시 예에 따른 동작예측모델의 입력 이 될 수 있고, 도 10c는 동작예측모델의 프로세스모듈에 대한 동작 예측 및 복수 개의 서브프로세스의 이웃하 는 서브 프로세스의 동작 시퀀스를 학습을 설명하기 위한 도면이다. 도 10a를 참고하면, 본 발명에서 비지니스 프로세스는 적어도 하나의 서브 프로세스(250-1, 250-2)를 포함 하고, 서브 프로세스(250-1, 250-2)는 복수의 프로세스 모듈을 포함할 수 있다. 이때, 속성이 설정된 기능블록 은 프로세스 모듈이 될 수 있다. 예컨데, 동작예측모델은 비지니스 프로세스의 전체 동작 시퀀스를 기반으로, 각 기능블록의 제2필드(411-1 내지 411-5)에 명명된 수행자 및 동작을 프로세스 모듈 단위로 구분하여 임베딩하는 프로세스 모듈 임베딩, 서 브 프로세스 단위로 구분하는 서브 프로세스 임베딩 및 상기 프로세스 모듈의 위치를 구분하기 위한 위치 임베 딩을 병합하여 얻어진 각 단위벡터들을 이용하며, 일부 동작을 마스킹하여 마스킹된 프로세스 모듈의 동작을 예 측하고 이웃하는 서브 프로세스의 동작 시퀀스를 학습하여 생성할 수 있다. 도 10a의 비지니스 프로세스에 대해, 프로세서는 학습부를 통해, 도 10b와 같이 입력 \"[S] [결 제요청자가 비용 결제 요청] [챗봇이 영수증 요청] [담당자가 영수증 분류] [담당자가 결제문서 생성] [SP] [결 제관리자가 결제자검색 및 결제프로세스 생성] [결제관리자가 결제자1의 이메일로 결제요청] [결제관리자가 결 제자2의 이메일로 결제요청] [결제관리자가 결제완료 이메일 발송] [SP]\"으로, 프로세스모듈 임베딩, 서브 프로 세스 임베딩 및 위치 임베딩하여 각 벡터값을 합산하여 각 프로세스 모듈에 대한 단위벡터를 구할 수 있다. 여기서, S는 시작구분자로 시작이벤트로 구분할 수 있고, SP는 서브프로세스 구분자로 종료연산자에 의해 결과값이 발생되는 경우 SP에 의해 서브프로세스로 구분될 수 있다. 또한, 병합 또는 분기에 따른 게이트 웨이 연산자 이후 프로세스모듈부터 종료연산자 사이의 프로세스 모듈들을 서브프로세스로 구분할 수 있다. 이때, 도 10c와 같이 입력의 일부(기설정 비율의 동작)를 마스킹 및 다른 동작으로 랜덤 변경하여, 마스킹 및 변경된 동작에 대해 기저장된 비지니스 프로세스의 원본 동작을 예측 학습하고, 2개의 서브프로세스가 이어지는동작시퀀스인지 여부를 학습하여 동작예측모델을 생성할 수 있다. 일예로, 비지니스 프로세스에 포함된 프로세스 모듈 개수의 70~80%를 마스킹하고, 10~15%를 다른 동작으로 랜덤 변경하고, 10~15%를 유지시켜 예측을 사전학습할 수도 있다. 또한, 서브프로세스 2개단위로 동작 시퀀스가 이어지는지 50%확률로 가능 또는 불가능으로 구별하여 사전학습할 수 있다. 이때, 서브프로세스 개수에 따라 게이트웨이 연산자와 종료연산자를 기반으로 이웃하는 서브프로세스 (게이트웨이 연산자로부터 분기 또는 병합이 있는 서브프로세스)를 쌍으로 학습할 수 있고, 중복될 수도 있다. 즉, 마스킹 및 다른 동작으로 변경된 입력에 대해, 즉, 각 프로세스 모듈에 대한 단위벡터를 트랜스포머 인코딩 하고 인코딩된 각각의 단위벡터를 연산하여 마스킹 및 변경된 동작을 예측하고, 동작시퀀스가 이어지는 2개의 서브프로세스로 예측할 수 있다. 이러한 동작예측모델을 본 발명의 기능블록 속성 설정시 적용하여, 운영자 단말에 의해 선택된 기능블록의 서비스유형으로 분류된 서비스카드 중에서 예측되는 서비스카드를 추천제공함으로써 설계를 용이하게 할 수 있 다. 한편, 이와 같이 설계된 비즈니스 프로세스는 메모리 또는 별도의 프로세스 저장소에 저장되어 자동화 프로세스로 이용될 수 있다. 다시 도 3을 참조하면, 사용자 단말(300 또는 330)에서 트리거가 생성되어 프로세스 자동화 서버로 전달되 면, 트리거링부가 저장된 비즈니스 프로세스 중 해당되는 비즈니스 프로세스를 실행시킨다 (S320). 도 11의 실시예에서는 사용자가 사용자 단말의 챗봇 앱에 메시지를 보내면서 해당 비즈니스 프로세스 가 시작된다. 이 경우, 트리거링부는 메시지 를 파싱하여 자연어로 처리한 후, 메시지와 연관된 비즈 니스 프로세스를 시작시킬 수 있다. 한편, 해당 비즈니스 프로세스에서 처리하기에 필요한 데이터가 입력이 되지 않은 경우, 챗봇은 필요한 데이터 를 요청하는 메시지를 송부할 수 있으며, 요청에 따른 필요한 데이터(335, 336)가 입력되면, 챗봇은 비즈 니스 프로세스를 시작할 수 있다. 또는 비즈니스 프로세스가 시작된 후, 챗봇이 필요한 데이터를 요청하는 메시 지을 보내고, 요청에 따른 필요한 데이터(335, 336)가 입력되면, 해당 프로세스 모듈에 데이터를 전송할 수도 있다. 이 경우, 메시지의 파싱과 자연어 처리에 대해서는 도 13에 대한 설명을 통하여 상세하게 후술한다. 보다 상세하게 도 12를 참조하면, 사용자들 중 어느 하나가 사용자 단말을 통하여 웹 인터페이스 에 접속하여 메시지를 보내게 되면, 트리거링부는 이를 파싱하여, 수행부를 통하여 해당되 는 비즈니스 프로세스를 실행시키게 된다. 즉, 도 3에서와 같이 수행부가 해당 비즈니스 프로세스에 포함된 프 로세스 모듈을 순차적으로 수행시킨다(S330). 이때, 수행부는 트리거링부에서 실행시킨 비즈니스 프로세스의 각 프로세스 모듈을 운영자 단말 에서 설계한 순서대로 실행시킨다. 프로세스 모듈(162-1, …, 162-n)은 각각에 대응하는 커넥터(163-1, …, 163-n)를 통하여 연결된 각각에 대응하는 자동화 모듈(650-1, …, 650-n)에서 해당 업무를 수행시킨다. 이 경우, 자동화 모듈(650-1, …, 650-n)은 예를 들어, 레거시 RPA, 예컨대, SAP 등의 ERP 시스템이나, OCR 시 스템, 챗봇, 또는 이메일 시스템일 수 있다. 각각의 자동화 모듈(650-1, …, 650-n)은 기존에 자동화된 처리를 수행하던 레거시 RPA 모듈일 수 있으며, 별도의 시스템으로 프로세스 자동화 서버 외부에 구현된 것일 수 도 있고, 프로세스 자동화 서버 내부에 구현된 것일 수도 있다. 자동화 모듈은 트리거링부로부터 각 자동화 모듈(650-1)에 예컨대, SAP의 경우 ODATA, OCR 시스템인 경우 에는 사진 파일 등의 필요한 데이터를 수신하여 해당 프로세스를 수행한 후 결과를 다시 대응하는 프로세스 모 듈에 전송한다. 그리고, 운영자 단말에서 설계한 마지막 프로세스 모듈의 프로세스가 종료되면, 다시 트리 거링부 및 웹 인터페이스를 통하여 결과를 사용자에게 전달하게 된다. 즉, 도 3과 같이, 마지막 프로세스 모듈의 결과 수행 후, 사용자에게 전체 프로세스 완료를 통보할 수 있다(S340). 이 경우, 각 자동화 모듈(650-1, …, 650-n)에서 필요한 데이터들은 해당 비즈니스 프로세스에서 전단계에 있는 자동화 모듈에서 제공할 수도 있고, 또는 최초 사용자가 입력하여 트리거링부를 통해 제공된 것일 수도 있 다. 각 자동화 모듈(650-1, …, 650-n)은 별도의 데이터 베이스를 운용할 수도 있는데, 별도의 데이터 베이스 에서 해당 자동화 모듈에서 필요한 자료를 직접요청 및 수신할 수도 있다. 이하에서는 도 14를 참조하여, 본 발명의 일 실시예에 따른 트리거링부의 자연어 처리 과정에 대하여 기술 한다. 트리거링부에서, 도 11과 같이 챗봇을 통해 채팅 메시지 또는 이메일 메시지를 수신하게 되면, 수신 한 메시지의 단어들을 추출하여 문장들을 분해하게 된다. (S910) 이때, 영어 등 조사가 없는 언어의 경우에는 단어를 그대로 추출할 수 있으나, 한국어 등 조사가 있는 언어의 경우에는 형태소 분석을 통하여 단어들을 추출 하여 분해할 수 있다. 그리고, 분해된 단어에서 수행자 및 동작들을 추출한다. (S920) 예를 들어, 도 14 참조하면, 트리거링부는 전체 메시지 중, 연속된 n개의 단어를 d 차원의 벡터로 변환시 킨다.(S1010) n 및 d는 임의의 정수이다. 영어로 된 단어는 그대로 입력하고, 한글인 경우에는 형태소 분석 후 에 입력하게 된다. 이때, 예를 들어, 각 메시지 또는 이메일의 헤더까지 텍스트로서 전달하고, 연속된 n개의 단 어를 각각 d 차원의 벡터로 변환시킬 수 있다. 각 단어를 벡터로 변환시키는 것은 워드 임베딩을 활용하여, 예 컨대, word2vec의 워드 임베딩을 d 차원의 벡터로 변환시킬 수 있다. 이렇게 생성된 n*d 차원의 벡터를 가중치 벡터(weights vector) m 행렬과 와이드 컨볼루션할 수 있다. 1차원의 m 행렬의 m은 필터인 가중치 크기를 의미한다. (S1020) 와이드 컨볼루션 후에는 풀링(pooling) 단계를 거친다. 풀링에서는 예를 들어, 맥스 풀링(Max pooling)을 사용 할 수 있다.(S1030) 다시, 풀링 단계를 거친 벡터를 와이드 컨볼루션 한 뒤(S1040), 폴딩 단계(S1050)를 거친다. 위에서 사용한 벡 터가 1차원의 m 행렬을 사용하였는데, 풀링보다도 좀 더 행렬 사이즈를 줄이기 위하여 간단한 절차인 폴딩 방식 을 사용할 수도 있다. 폴딩 단계는 마지막 컨볼루션 단계에서 생성한 피쳐맵 중 홀수열 또는 짝수열 또는 전체 피처맵의 d/2열부터 d 열까지의 열을 생략하여 전체 피쳐맵을 1/2로 줄이는 단계를 말한다. 그리고, 마지막으로 풀링 단계를 한 번 더 거친 후(S1060), 마지막으로 풀리 커넥티드 레이어(Fully Connected Layer, S1070)를 획득하게 된다. 그리고, 이러한 풀리 커넥티드 레이어에서, 추가적인 은닉층(Hidden Layer)를 거친 후(S1080), 마지막으로 수행 자 및 동작에 대한 결과값을 획득하게 된다.(S1090) 다시 도 13을 참조하면, 수행자 및 동작에 대한 결과값을 획득한 후, 다시 수행자 및 동작을 결합하고(S940) 이 에 매칭되는 비즈니스 프로세스 또는 프로세스 모듈을 매칭하게 된다.(S950) 이렇게 입력된 채팅 메시지 또는 메일 메시지와 비즈니스 프로세스와 매칭 수행 결과 및 각 프로세스 모듈에서 의 실행 시간, 실행 결과들은 로그 파일에 타임 스템프와 함께 DB에 저장되게 된다. 또한, 학습부는 DB에 저장된 데이터에 기초하여 역전파를 이용하여 학습을 수행하고, 상술한 필터의 필터 값을 학습하게 된다. 이 때, 학습된 필터값에 의하여 비즈니스 프로세스 매칭은 더욱더 정확하고 정교해지 게 된다. 종래 기술에 따르면, 단순하게 챗봇을 통하여 연계된 RPA를 개별 실행시켜서 결과를 얻을 수 있었으나, 비즈니 스 프로세스가 많은 대기업들에서는 사용하기가 어려웠다. 특히, 대기업은 수백개의 부서들이 있으며, 각 부서 들마다도 수많은 프로세스가 있기 때문에, 종래 기술의 매칭 결과를 이용하여 프로세스를 진행하기는 매우 어려 웠고 부정확한 경우가 많았다. 그러나, 본 발명에 따르면, 아주 복잡한 조직에서도 간단하게 메일이나 챗봇을 통하여 정확한 비즈니스 프로세 스를 밟을 수 있게 되고, 전체적인 BPM의 자동화가 수행될 수 있게 되었다. 또한, 본 발명에 따르면, 운영자가 설계의도에 따라 저작툴을 통해 서비스유형 및 서비스카드를 선택하고, 파라 미터값을 설정함으로써 자동화모듈을 호출할 수 있는 프로세스 모듈을 용이하게 생성할 수 있고, 프로세스 모듈 을 직병렬 조합함으로써 자동화 프로세스를 설계할 수 있다. 특히, 자동화 프로세스 설계시 동작예측모델에 기반하여 동작을 예측하여 추천함으로써 운영자의 설계에 도움을 줄 수 있다.이상 첨부된 도면을 참조하여 본 발명의 실시예들을 더욱 상세하게 설명하였으나, 본 발명은 반드시 이러한 실 시예로 국한되는 것은 아니고, 본 발명의 기술사상을 벗어나지 않는 범위 내에서 다양하게 변형 실시될 수 있다. 따라서, 본 발명에 개시된 실시예들은 본 발명의 기술 사상을 한정하기 위한 것이 아니라 설명하기 위한 것이고, 이러한 실시예에 의하여 본 발명의 기술 사상의 범위가 한정되는 것은 아니다. 그러므로, 이상에서 기 술한 실시예들은 모든 면에서 예시적인 것이며 한정적이 아닌 것으로 이해해야만 한다. 본 발명의 보호 범위는 아래의 청구범위에 의하여 해석되어야 하며, 그와 동등한 범위 내에 있는 모든 기술 사상은 본 발명의 권리범위 에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2022-0002434", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시 예에 따른 저작툴을 이용한 자동화 프로세스 설계를 설명하기 위한 프로세스 자동화 시 스템의 개략적인 구성을 나타내는 도면이다. 도 2는 도 1의 서버의 개략적인 구성을 나타내는 블록도이다. 도 3은 본 발명의 일 실시예에 따른 프로세스 자동화 방법을 설명하기 위한 흐름도이다. 도 4는 도 3의 자동화 프로세스 설계 단계(S310)를 설명하기 위한 흐름도이다. 도 5는 도 4의 프로세서 모듈 설정(S312)을 설명하기 위한 흐름도이다. 도 6 내지 도9는 본 발명의 일 실시예에 따른 비즈니스 프로세스 설계 화면을 나타낸 도면이다. 도 10a 내지 도 10c는 본 발명의 일 실시 예에 따른 동작예측모델을 설명하기 위한 도면이다. 도 11은 본 발명의 일 실시예에 따른 챗봇 메시지를 예시한 도면이다. 도 12는 본 발명의 일 실시예에 따른 프로세스 자동화 시스템의 동작을 나타낸 도면이다.도 13 및 도 14는 본 발명의 일 실시예에 따른 비즈니스 프로세스 매칭 동작을 설명한 흐름도이다."}
