{"patent_id": "10-2021-0074859", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0166046", "출원번호": "10-2021-0074859", "발명의 명칭": "전자 장치 및 전자 장치의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "이준호"}}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "에 있어서,상기 인스트럭션들은, 실행 시, 상기 프로세서가,상기 전자 장치 및 상기 타겟 장치와 연결된 클라우드 서버를 통하여, 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치로 전송하도록하는 전자 장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 인스트럭션들은, 실행 시, 상기 프로세서가,상기 타겟 장치가 상기 음성 입력에 대응하는 동작을 수행한 결과를 상기 외부 전자 장치에 제공하도록 하는 전자 장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 1에 있어서,상기 인스트럭션들은, 실행 시, 상기 프로세서가,상기 사용자의 음성 입력에 기반하여 상기 음성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하고,상기 타겟 장치와 관련된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하도록 하는 전자 장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서,상기 타겟 장치와 관련된 정보는 상기 타겟 장치의 벤더 ID(vendor identification, VID), 상기 타겟 장치의 종류, 또는 상기 타겟 장치의 제조사 정보 중 적어도 하나를 포함하는 전자 장치.공개특허 10-2022-0166046-3-청구항 5"}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서,상기 인스트럭션들은, 실행 시, 상기 프로세서가,상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하고,상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하도록 하는 전자 장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 3에 있어서,상기 사용자 의도는 상기 음성 입력에 대응하는 동작과 관련된 보이스 캐퍼빌리티(voice capability) 정보, 보이스 액션(voice action) 정보, 및 파라미터 정보 중 적어도 하나를 포함하는 전자 장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서,상기 보이스 메타데이터는 상기 전자 장치와 연결된 외부 전자 장치 각각에 대하여 미리 설정되어 저장된, 전자장치."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "전자 장치의 동작 방법에 있어서,외부 전자 장치로부터 사용자의 음성 입력을 수신하는 동작;상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인식하는 동작;상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제조건(precondition)이 있는지 판단하는 동작;상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송하는 동작; 및상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2022-0166046-4-청구항 9에 있어서,상기 타겟 장치가 상기 음성 입력에 대응하는 동작을 수행한 결과를 상기 외부 전자 장치에 제공하는 동작을 더포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 9에 있어서,상기 보이스 메타데이터를 인식하는 동작은,상기 음성 입력에 기반하여 상기 음성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하는 동작; 및 상기 타겟 장치와 관련된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 9에 있어서,상기 타겟 장치와 관련된 정보는 상기 타겟 장치의 벤더 ID(vendor identification, VID), 상기 타겟 장치의 종류, 또는 상기 타겟 장치의 제조사 정보 중 적어도 하나를 포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 9에 있어서,상기 전자 장치 및 상기 타겟 장치와 연결된 클라우드 서버를 통하여, 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치로 전송하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 9에 있어서,상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작은,상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하는 동작; 및 상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 11에 있어서,상기 사용자 의도는 상기 음성 입력에 대응하는 동작과 관련된 보이스 캐퍼빌리티(voice capability) 정보, 보이스 액션(voice action) 정보, 및 파라미터 정보 중 적어도 하나를 포함하는 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 9에 있어서,공개특허 10-2022-0166046-5-상기 보이스 메타데이터는 상기 전자 장치와 연결된 외부 전자 장치 각각에 대하여 상기 전자 장치의 메모리에미리 저장되어 있는, 방법."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "컴퓨터로 읽을 수 있는 인스트럭션들을 저장하고 있는 기록 매체에 있어서, 상기 인스트럭션들은 전자 장치에 의해 실행 시, 상기 전자 장치가:외부 전자 장치로부터 사용자의 음성 입력을 수신하는 동작;상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인식하는 동작;상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제조건(precondition)이 있는지 판단하는 동작;상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송하는 동작; 및상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 수행하도록 하는기록 매체."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 17에 있어서,상기 인스트럭션들은 전자 장치에 의해 실행 시, 상기 전자 장치가,상기 타겟 장치가 상기 음성 입력에 대응하는 동작을 수행한 결과를 상기 외부 전자 장치에 제공하는 동작을 수행하도록 하는 기록 매체."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 17에 있어서,상기 보이스 메타데이터를 인식하는 동작은,상기 사용자의 음성 입력에 기반하여 상기 음성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하는 동작; 및 상기 타겟 장치와 관련된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하는 동작을 포함하는 기록 매체."}
{"patent_id": "10-2021-0074859", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 17에 있어서,상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작은,상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하는 동작; 및 상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함하는 기록 매체."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 본 개시의 일 실시예에 따른 전자 장치는, 통신 회로, 메모리, 및 상기 통신 회로, 및 상 기 메모리에 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 메모리는, 실행 시, 상기 프로세서가, 외부 전자 장치로부터 사용자의 음성 입력을 상기 통신 회로를 이용하여 수신하고, 상기 음성 입력 (뒷면에 계속)"}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서에서 개시되는 다양한 실시 예들은, 사용자의 음성 입력을 처리하는 기술과 관련된다."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 들어, 음성 인식 기술이 발전함에 따라 마이크를 포함하는 다양한 전자 장치에서 음성 인식 기능이 구현될 수 있다. 예를 들어, 최근에는 음성 인식을 통하여 복수의 전자 장치들 사이의 동작을 제어할 수 있는 음성 어 시스턴트 서비스가 개발되고 있다. 예를 들어, 음성 어시스턴트 서비스에 의해 다수의 전자 장치들 사이에서 음성 인식을 통하여 유기적으로 상호간에 정보를 송수신하고, 발화에 대응하는 동작을 수행할 수 있다. 예를 들어, 사용자는 모바일 장치에 음성 입력(예: 음성 명령)을 입력함으로써, 원하는 IoT(internet of things) 장 치의 동작을 제어할 수 있다."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시의 다양한 실시예들은, 사용자의 음성 입력에 대응하는 동작을 수행하기 위하여 필요한 전제 조건이 있 는지 판단하고, 전제 조건이 있는 경우 음성 입력에 대응하는 동작을 수행하기 이전에 전제 조건에 대응하는 동 작을 수행할 수 있는 전자 장치 및 전자 장치의 동작 방법을 제공하고자 한다."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 문서에 개시되는 일 실시 예에 따른 전자 장치는, 통신 회로, 메모리, 및 상기 통신 회로, 및 상기 메모리에 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 메모리는, 실행 시, 상기 프로세서가, 외부 전자 장치로부터 사용자의 음성 입력을 상기 통신 회로를 이용하여 수신하고, 상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인식하고, 상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단하고, 상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 통 신 회로를 이용하여 타겟 장치에 전송하고, 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 통 신 회로를 이용하여 상기 타겟 장치에 전송하도록 하는 인스트럭션들(instructions)을 저장할 수 있다. 또한, 본 개시의 일 실시예에 따른 전자 장치의 동작 방법은, 외부 전자 장치로부터 사용자의 음성 입력을 수신 하는 동작, 상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인식하는 동작, 상기 보 이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제 조건 (precondition)이 있는지 판단하는 동작, 상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상 기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송하는 동작, 및 상기 음성 입력에 대 응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴퓨터로 읽을 수 있는 인스트럭션들을 저장하고 있는 기록 매체(저장 매 체)에 있어서, 상기 인스트럭션들은 전자 장치에 의해 실행 시, 상기 전자 장치가: 외부 전자 장치로부터 사용 자의 음성 입력을 수신하는 동작, 상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인 식하는 동작, 상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단하는 동작, 상기 전제 조건이 있는 경우, 상기 보이스 메타데이 터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송하는 동작, 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 수행하도록 할 수 있 다."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 문서에 개시되는 실시예들에 따르면, 사용자의 음성 입력에 따른 동작을 수행하기 위한 전제 조건이 있는지 판단할 수 있다. 본 문서에 개시되는 실시예들에 따르면, 음성 입력에 따른 동작을 수행하기 위한 전제 조건이 있는 경우, 전제 조건에 대응하는 동작을 자동으로 수행할 수 있다. 본 문서에 개시되는 실시예들에 따르면, 사용자의 의도(intent)를 판단하고, 사용자의 의도에 부합하는 타겟 장 치의 기능을 제어 또는 제공하기 위한 일련의 동작들을 수행할 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2021-0074859", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모 듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가 입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈) 은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다.센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다.안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테나 들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통 신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통 신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 2를 참조하면, 일 실시예의 통합 지능 시스템은 사용자 단말, 지능형 서버, 및 서비스 서버 를 포함할 수 있다. 일 실시 예의 사용자 단말(예: 도 1의 전자 장치)은, 인터넷에 연결 가능한 단말 장치(또는, 전자 장 치)일 수 있으며, 예를 들어, 휴대폰, 스마트폰, PDA(personal digital assistant), 노트북 컴퓨터, TV(television), 백색 가전, 웨어러블 장치, HMD (head mounted device), 또는 스마트 스피커일 수 있다. 도시된 실시 예에 따르면, 사용자 단말은 통신 인터페이스, 마이크, 스피커, 디스플레이 , 메모리, 및/또는 프로세서를 포함할 수 있다. 상기 열거된 구성요소들은 서로 작동적으로 또 는 전기적으로 연결될 수 있다. 통신 인터페이스(예: 도 1의 통신 모듈)는 외부 장치와 연결되어 데이터를 송수신하도록 구성될 수 있다. 마이크(예: 도 1의 오디오 모듈)는 소리(예: 사용자 발화)를 수신하여, 전기적 신호로 변환할 수 있다. 스피커(예: 도 1의 음향 출력 모듈)는 전기적 신호를 소리(예: 음성)로 출력할 수 있다. 디 스플레이(예: 도 1의 디스플레이 모듈)는 이미지 또는 비디오를 표시하도록 구성될 수 있다. 일 실시예의 디스플레이는 또한 실행되는 앱(app)(또는, 어플리케이션 프로그램(application program))의 그래픽 사용자 인터페이스(graphic user interface, GUI)를 표시할 수 있다. 일 실시 예의 메모리(예: 도 1의 메모리)는 클라이언트 모듈, SDK(software development kit), 및 복수의 어플리케이션들(예: 355a, 355b)을 저장할 수 있다. 상기 클라이언트 모듈, 및 SDK는 범용적인 기능을 수행하기 위한 프레임워크(framework)(또는, 솔루션 프로그램)를 구성할 수 있다. 또한, 클라이언트 모듈 또는 SDK는 음성 입력을 처리하기 위한 프레임워크를 구성할 수 있다. 상기 복수의 어플리케이션들(예: 355a, 355b)은 지정된 기능을 수행하기 위한 프로그램일 수 있다. 일 실시 예 에 따르면, 복수의 어플리케이션들은 제1 앱(235a), 및/또는 제2 앱(235b)을 포함할 수 있다. 일 실시 예에 따 르면, 복수의 어플리케이션들 각각은 지정된 기능을 수행하기 위한 복수의 동작들을 포함할 수 있다. 예를 들 어, 상기 어플리케이션들은, 알람 앱, 메시지 앱, 및/또는 스케줄 앱을 포함할 수 있다. 일 실시 예에 따르면, 복수의 어플리케이션들은 프로세서에 의해 실행되어 상기 복수의 동작들 중 적어도 일부를 순차적으로 실 행할 수 있다. 일 실시 예의 프로세서는 사용자 단말의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로세서(22 0)는 통신 인터페이스, 마이크, 스피커, 및 디스플레이와 전기적으로 연결되어 연결되어 지정된 동작을 수행할 수 있다. 예를 들어, 프로세서는 적어도 하나의 프로세서를 포함할 수 있다. 일 실시 예의 프로세서는 또한 상기 메모리에 저장된 프로그램을 실행하여 지정된 기능을 수행할 수 있다. 예를 들어, 프로세서는 클라이언트 모듈 또는 SDK 중 적어도 하나를 실행하여, 음성 입 력을 처리하기 위한 이하의 동작을 수행할 수 있다. 프로세서는, 예를 들어, SDK를 통해 복수의 어플 리케이션들의 동작을 제어할 수 있다. 클라이언트 모듈 또는 SDK의 동작으로 설명된 이하의 동작들 은 프로세서의 실행에 의하여 수행되는 동작일 수 있다. 일 실시 예의 클라이언트 모듈은 음성 입력을 수신할 수 있다. 예를 들어, 클라이언트 모듈은 마이크 를 통해 감지된 사용자 발화에 대응되는 음성 신호를 수신할 수 있다. 상기 클라이언트 모듈은 수신 된 음성 입력(예: 음성 신호)을 지능형 서버로 송신할 수 있다. 클라이언트 모듈은 수신된 음성 입력 과 함께, 사용자 단말의 상태 정보를 지능형 서버로 송신할 수 있다. 상기 상태 정보는, 예를 들어, 앱의 실행 상태 정보일 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 음성 입력에 대응되는 결과를 지능형 서버로부터 수신할 수 있다. 예를 들어, 클라이언트 모듈은 지능형 서버에서 상기 수신된 음성 입력에 대응되는 결과를 산 출할 수 있는 경우, 수신된 음성 입력에 대응되는 결과를 수신할 수 있다. 클라이언트 모듈은 상기 수신된 결과를 디스플레이에 표시할 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 음성 입력에 대응되는 플랜을 수신할 수 있다. 클라이언트 모듈 은 플랜에 따라 앱의 복수의 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 클라이언트 모듈 은, 예를 들어, 복수의 동작의 실행 결과를 순차적으로 디스플레이에 표시할 수 있다. 사용자 단말은, 다른 예를 들어, 복수의 동작을 실행한 일부 결과(예: 마지막 동작의 결과)만을 디스플레이에 표 시할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 지능형 서버로부터 음성 입력에 대응되는 결과를 산출하기 위해 필요한 정보를 획득하기 위한 요청을 수신할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 상기 요청에 대응하여 상기 필요한 정보를 지능형 서버로 송신할 수 있다. 일 실시 예의 클라이언트 모듈은 플랜에 따라 복수의 동작을 실행한 결과 정보를 지능형 서버로 송신 할 수 있다. 지능형 서버는 상기 결과 정보를 이용하여 수신된 음성 입력이 올바르게 처리된 것을 확인할 수 있다. 일 실시 예의 클라이언트 모듈은 음성 인식 모듈을 포함할 수 있다. 일 실시 예에 따르면, 클라이언트 모 듈은 상기 음성 인식 모듈을 통해 제한된 기능을 수행하는 음성 입력을 인식할 수 있다. 예를 들어, 클라 이언트 모듈은 지정된 음성 입력(예: 웨이크 업!)에 대응하여 유기적인 동작을 수행함으로써 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있다. 일 실시 예의 지능형 서버는 네트워크(예: 도 1의 제1 네트워크 및/또는 제2 네트워크)를 통해 사용자 단말로부터 사용자 음성 입력과 관련된 정보를 수신할 수 있다. 일 실시 예에 따르면, 지능형서버는 수신된 음성 입력과 관련된 데이터를 텍스트 데이터(text data)로 변경할 수 있다. 일 실시 예에 따르면, 지능형 서버는 상기 텍스트 데이터에 기초하여 사용자 음성 입력과 대응되는 태스크(task)를 수행 하기 위한 적어도 하나의 플랜(plan)을 생성할 수 있다 일 실시 예에 따르면, 플랜은 인공 지능(artificial intelligent)(AI) 시스템에 의해 생성될 수 있다. 인공지능 시스템은 룰 베이스 시스템(rule-based system) 일 수도 있고, 신경망 베이스 시스템(neural network-based system)(예: 피드포워드 신경망(feedforward neural network(FNN)), 및/또는 순환 신경망(recurrent neural network(RNN))) 일 수도 있다. 또는, 전술한 것의 조합 또는 이와 다른 인공지능 시스템일 수도 있다. 일 실시 예에 따르면, 플랜은 미리 정의된 플랜들의 집합에서 선택될 수 있거나, 사용자 요청에 응답하여 실시간으로 생 성될 수 있다. 예를 들어, 인공지능 시스템은 미리 정의 된 복수의 플랜들 중 적어도 하나의 플랜을 선택할 수 있다. 일 실시 예의 지능형 서버는 생성된 플랜에 따른 결과를 사용자 단말로 송신하거나, 생성된 플랜을 사용자 단말로 송신할 수 있다. 일 실시 예에 따르면, 사용자 단말은 플랜에 따른 결과를 디스플레이 에 표시할 수 있다. 일 실시 예에 따르면, 사용자 단말은 플랜에 따른 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 일 실시 예의 지능형 서버는 프론트 엔드(front end), 자연어 플랫폼(natural language platform), 캡슐 데이터베이스(capsule database), 실행 엔진(execution engine), 엔드 유저 인터페이스(end user interface), 매니지먼트 플랫폼(management platform), 빅 데이터 플랫폼(big data platform), 또는 분석 플랫폼(analytic platform)을 포함할 수 있다. 일 실시 예의 프론트 엔드는 사용자 단말에 의하여 수신된 음성 입력을 사용자 단말로부터 수신 할 수 있다. 프론트 엔드는 상기 음성 입력에 대응되는 응답을 사용자 단말로 송신할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼은 자동 음성 인식 모듈(automatic speech recognition module)(ASR module), 자연어 이해 모듈(natural language understanding module)(NLU module), 플래너 모듈 (planner module), 자연어 생성 모듈(natural language generator module)(NLG module), 및/또는 텍 스트 음성 변환 모듈(text to speech module)(TTS module)을 포함할 수 있다. 일 실시 예의 자동 음성 인식 모듈은 사용자 단말로부터 수신된 음성 입력을 텍스트 데이터로 변환할 수 있다. 일 실시 예의 자연어 이해 모듈은 음성 입력의 텍스트 데이터를 이용하여 사용자의 의도를 파악 할 수 있다. 예를 들어, 자연어 이해 모듈은 문법적 분석(syntactic analyze) 및/또는 의미적 분석 (semantic analyze)을 수행하여 사용자의 의도를 파악할 수 있다. 일 실시 예의 자연어 이해 모듈은 형태 소 또는 구의 언어적 특징(예: 문법적 요소)을 이용하여 음성 입력으로부터 추출된 단어의 의미를 파악하고, 상 기 파악된 단어의 의미를 의도에 매칭시켜 사용자의 의도를 결정할 수 있다. 일 실시 예의 플래너 모듈은 자연어 이해 모듈에서 결정된 의도 및 파라미터를 이용하여 플랜을 생성 할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 의도에 기초하여 태스크를 수행하기 위해 필요한 복수의 도메인을 결정할 수 있다. 플래너 모듈은 상기 의도에 기초하여 결정된 복수의 도메인 각각 에 포함된 복수의 동작을 결정할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 복수의 동작 을 실행하는데 필요한 파라미터나, 상기 복수의 동작의 실행에 의해 출력되는 결과 값을 결정할 수 있다. 상기 파라미터, 및 상기 결과 값은 지정된 형식(또는, 클래스)의 컨셉으로 정의될 수 있다. 이에 따라, 플랜은 사용 자의 의도에 의해 결정된 복수의 동작, 및/또는 복수의 컨셉을 포함할 수 있다. 상기 플래너 모듈은 상기 복수의 동작, 및 상기 복수의 컨셉 사이의 관계를 단계적(또는, 계층적)으로 결정할 수 있다. 예를 들어, 플래 너 모듈은 복수의 컨셉에 기초하여 사용자의 의도에 기초하여 결정된 복수의 동작의 실행 순서를 결정할 수 있다. 다시 말해, 플래너 모듈은 복수의 동작의 실행에 필요한 파라미터, 및 복수의 동작의 실행에 의 해 출력되는 결과에 기초하여, 복수의 동작의 실행 순서를 결정할 수 있다. 이에 따라, 플래너 모듈는 복 수의 동작 및 복수의 컨셉 사이의 연관 정보(예: 온톨로지(ontology))가 포함된 플랜을 생성할 수 있다. 상기 플래너 모듈은 컨셉과 동작의 관계들의 집합이 저장된 캡슐 데이터베이스에 저장된 정보를 이용하여 플랜을 생성할 수 있다. 일 실시 예의 자연어 생성 모듈은 지정된 정보를 텍스트 형태로 변경할 수 있다. 상기 텍스트 형태로 변경 된 정보는 자연어 발화의 형태일 수 있다. 일 실시 예의 텍스트 음성 변환 모듈은 텍스트 형태의 정보를 음성 형태의 정보로 변경할 수 있다.일 실시 예에 따르면, 자연어 플랫폼의 기능의 일부 기능 또는 전체 기능은 사용자 단말에서도 구현 가능 할 수 있다. 예를 들어, 사용자 단말이 자동 음성 인식 모듈 및/또는 자연어 이해 모듈을 포함할 수 있다. 사용자 단말이 사용자 음성 명령을 인식한 뒤, 인식된 음성 명령에 대응하는 텍스트 정보를 지능형 서버로 송신할 수 있다. 예를 들어, 사용자 단말이 텍스트 음성 변환 모듈을 포함할 수 있다. 사용자 단말이 지능형 서버로부터 텍스트 정보를 수신하고, 수신된 텍스트 정보를 음성으로 출력할 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인에 대응되는 복수의 컨셉과 동작들의 관계에 대한 정보를 저장할 수 있다. 일 실시예에 따른 캡슐은 플랜에 포함된 복수의 동작 오브젝트(action object)(또는 동작 정보) 및/또 는 컨셉 오브젝트(concept object)(또는 컨셉 정보)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이 스는 CAN(concept action network)의 형태로 복수의 캡슐을 저장할 수 있다. 일 실시 예에 따르면, 복수 의 캡슐은 캡슐 데이터베이스에 포함된 기능 저장소(function registry)에 저장될 수 있다. 상기 캡슐 데이터베이스는 음성 입력에 대응되는 플랜을 결정할 때 필요한 전략 정보가 저장된 전략 레지 스트리(strategy registry)를 포함할 수 있다. 상기 전략 정보는 음성 입력에 대응되는 복수의 플랜이 있는 경 우, 하나의 플랜을 결정하기 위한 기준 정보를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 지정된 상황에서 사용자에게 후속 동작을 제안하기 위한 후속 동작의 정보가 저장된 후속 동작 레지스트리 (follow up registry)를 포함할 수 있다. 상기 후속 동작은, 예를 들어, 후속 발화를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자 단말을 통해 출력되는 정보의 레이아웃(layout) 정보를 저 장하는 레이아웃 레지스트리(layout registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 캡슐 정보에 포함된 어휘(vocabulary) 정보가 저장된 어휘 레지스트리(vocabulary registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자와의 대화(dialog)(또는, 인터렉션 (interaction)) 정보가 저장된 대화 레지스트리(dialog registry)를 포함할 수 있다. 상기 캡슐 데이터베이스 는 개발자 툴(developer tool)을 통해 저장된 오브젝트를 업데이트(update)할 수 있다. 상기 개발자 툴은, 예를 들어, 동작 오브젝트 또는 컨셉 오브젝트를 업데이트하기 위한 기능 에디터(function editor)를 포함할 수 있다. 상기 개발자 툴은 어휘를 업데이트하기 위한 어휘 에디터(vocabulary editor)를 포함할 수 있다. 상기 개 발자 툴은 플랜을 결정하는 전략을 생성 및 등록 하는 전략 에디터(strategy editor)를 포함할 수 있다. 상기 개발자 툴은 사용자와의 대화를 생성하는 대화 에디터(dialog editor)를 포함할 수 있다. 상기 개발자 툴은 후 속 목표를 활성화하고, 힌트를 제공하는 후속 발화를 편집할 수 있는 후속 동작 에디터(follow up editor)를 포 함할 수 있다. 상기 후속 목표는 현재 설정된 목표, 사용자의 선호도 또는 환경 조건에 기초하여 결정될 수 있 다. 일 실시 예에서는 캡슐 데이터베이스가 사용자 단말 내에도 구현될 수 있다. 일 실시 예의 실행 엔진은 상기 생성된 플랜을 이용하여 결과를 산출할 수 있다. 엔드 유저 인터페이스 는 산출된 결과를 사용자 단말로 송신할 수 있다. 이에 따라, 사용자 단말은 상기 결과를 수신 하고, 상기 수신된 결과를 사용자에게 제공할 수 있다. 일 실시 예의 매니지먼트 플랫폼은 지능형 서버 에서 이용되는 정보를 관리할 수 있다. 일 실시 예의 빅 데이터 플랫폼은 사용자의 데이터를 수집할 수 있다. 일 실시 예의 분석 플랫폼을 지능형 서버의 QoS(quality of service)를 관리할 수 있다. 예를 들어, 분석 플랫폼은 지능형 서버의 구성 요소 및 처리 속도(또는, 효율성)를 관리할 수 있다. 일 실시 예의 서비스 서버는 사용자 단말에 지정된 서비스(예: 음식 주문 또는 호텔 예약)를 제공할 수 있다. 일 실시 예에 따르면, 서비스 서버는 제3 자에 의해 운영되는 서버일 수 있다. 일 실시 예의 서 비스 서버는 수신된 음성 입력에 대응되는 플랜을 생성하기 위한 정보를 지능형 서버에 제공할 수 있 다. 상기 제공된 정보는 캡슐 데이터베이스에 저장될 수 있다. 또한, 서비스 서버는 플랜에 따른 결 과 정보를 지능형 서버에 제공할 수 있다. 서비스 서버는 네트워크를 통하여 지능형 서버 및/또는 사용자 단말과 통신할 수 있다. 서비스 서버는 별도의 연결을 통하여 지능형 서버와 통 신할 수 있다. 도 2에는 서비스 서버가 하나의 서버로 도시되어 있으나, 본 문서의 실시예들이 이에 제한 되는 것은 아니다. 서비스 서버의 각각의 서비스(401, 402, 및 403)들 중 적어도 하나는 별도의 서버로 구 현될 수 있다. 위에 기술된 통합 지능 시스템에서, 상기 사용자 단말은, 사용자 입력에 응답하여 사용자에게 다양한 인텔 리전트 서비스를 제공할 수 있다. 상기 사용자 입력은, 예를 들어, 물리적 버튼을 통한 입력, 터치 입력 또는 음성 입력을 포함할 수 있다. 일 실시 예에서, 상기 사용자 단말은 내부에 저장된 지능형 앱(또는, 음성 인식 앱)을 통해 음성 인식 서 비스를 제공할 수 있다. 이 경우, 예를 들어, 사용자 단말은 상기 마이크를 통해 수신된 사용자 발화(utterance) 또는 음성 입력(voice input)을 인식하고, 인식된 음성 입력에 대응되는 서비스를 사용자에게 제공 할 수 있다. 일 실시 예에서, 사용자 단말은 수신된 음성 입력에 기초하여, 단독으로 또는 상기 지능형 서버 및/또는 서비스 서버와 함께 지정된 동작을 수행할 수 있다. 예를 들어, 사용자 단말은 수신된 음성 입력에 대응되 는 앱을 실행시키고, 실행된 앱을 통해 지정된 동작을 수행할 수 있다. 일 실시 예에서, 사용자 단말이 지능형 서버 및/또는 서비스 서버와 함께 서비스를 제공하는 경우에 는, 상기 사용자 단말은, 상기 마이크를 이용하여 사용자 발화를 감지하고, 상기 감지된 사용자 발화에 대 응되는 신호(또는, 음성 데이터)를 생성할 수 있다. 상기 사용자 단말은, 상기 음성 데이터를 통신 인터페이스 를 이용하여 지능형 서버로 송신할 수 있다. 일 실시 예에 따른 지능형 서버는 사용자 단말로부터 수신된 음성 입력에 대한 응답으로써, 음성 입 력에 대응되는 태스크(task)를 수행하기 위한 플랜, 또는 상기 플랜에 따라 동작을 수행한 결과를 생성할 수 있 다. 상기 플랜은, 예를 들어, 사용자의 음성 입력에 대응되는 태스크(task)를 수행하기 위한 복수의 동작 및/또 는 상기 복수의 동작과 관련된 복수의 컨셉을 포함할 수 있다. 상기 컨셉은 상기 복수의 동작의 실행에 입력되 는 파라미터나, 복수의 동작의 실행에 의해 출력되는 결과 값을 정의한 것일 수 있다. 상기 플랜은 복수의 동작 및/또는 복수의 컨셉 사이의 연관 정보를 포함할 수 있다. 일 실시 예의 사용자 단말은, 통신 인터페이스를 이용하여 상기 응답을 수신할 수 있다. 사용자 단말 은 상기 스피커를 이용하여 사용자 단말 내부에서 생성된 음성 신호를 외부로 출력하거나, 디스 플레이를 이용하여 사용자 단말 내부에서 생성된 이미지를 외부로 출력할 수 있다. 도 3은 일 실시 예에 따른, 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 상기 지능형 서버의 캡슐 데이터베이스(예: 캡슐 데이터베이스)는 CAN (concept action network) 형 태로 캡슐을 저장할 수 있다. 상기 캡슐 데이터베이스는 사용자의 음성 입력에 대응되는 태스크를 처리하기 위 한 동작, 및 상기 동작을 위해 필요한 파라미터를 CAN(concept action network) 형태로 저장될 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인(예: 어플리케이션) 각각에 대응되는 복수의 캡슐(캡슐A, 캡슐 B)을 저장할 수 있다. 일 실시 예에 따르면, 하나의 캡슐(예: 캡슐A)은 하나의 도메인(예: 위치 (geo), 어플리케이션)에 대응될 수 있다. 또한, 하나의 캡슐에는 캡슐과 관련된 도메인에 대한 기능을 수행하기 위한 적어도 하나의 서비스 제공자의 캡슐(예: CP 1, CP 2 , CP3 , 및/또는 CP4 )이 대응 될 수 있다. 일 실시 예에 따르면, 하나의 캡슐은 지정된 기능을 수행하기 위한 적어도 하나 이상의 동작(330a) 및 적어도 하나 이상의 컨셉(330b)을 포함할 수 있다. 상기, 자연어 플랫폼은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 수신된 음성 입력에 대응하는 태스크를 수행하기 위한 플랜을 생성할 수 있다. 예를 들어, 자연어 플랫폼의 플래너 모듈은 캡슐 데이터 베이스에 저장된 캡슐을 이용하여 플랜을 생성할 수 있다. 예를 들어, 캡슐 A의 동작들(331a, 332a) 과 컨 셉들(331b, 332b) 및 캡슐 B의 동작(334a)과 컨셉(334b)을 이용하여 플랜을 생성할 수 있다. 도 4는 일 실시 예에 따른 사용자 단말이 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면이 다. 사용자 단말은 지능형 서버를 통해 사용자 입력을 처리하기 위해 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 제1 화면에서, 사용자 단말은 지정된 음성 입력(예: 웨이크 업!)을 인식하거나 하드웨어 키(예: 전용 하드웨어 키)를 통한 입력을 수신하면, 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있다. 사용자 단말은, 예를 들어, 스케줄 앱을 실행한 상태에서 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 사용자 단말은 지능형 앱에 대응되는 오브젝트(예: 아이콘)를 디스플레이에 표시 할 수 있다. 일 실시 예에 따르면, 사용자 단말은 사용자 발화에 의한 음성 입력을 수신할 수 있다. 예를 들어, 사용자 단말은 “이번주 일정 알려줘!”라는 음성 입력을 수신할 수 있다. 일 실시 예에 따르면, 사 용자 단말은 수신된 음성 입력의 텍스트 데이터가 표시된 지능형 앱의 UI(user interface)(예: 입력 창)를 디스플레이에 표시할 수 있다.일 실시 예에 따르면, 제2 화면에서, 사용자 단말은 수신된 음성 입력에 대응되는 결과를 디스플레이 에 표시할 수 있다. 예를 들어, 사용자 단말은 수신된 사용자 입력에 대응되는 플랜을 수신하고, 플랜에 따라 ‘이번주 일정’을 디스플레이에 표시할 수 있다. 도 5는 일 실시예에 따른 전자 장치의 블록도이다. 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치 또는 서버, 또는 도 2의 지능형 서버 및/또는 서비스 서버)는 통신 회로(예: 도 1의 통신 모듈), 메모리(예: 도 1의 메모리 ), 및/또는 프로세서(예: 도 1의 프로세서)를 포함할 수 있다. 일 실시예에 따르면, 통신 회로는 외부 전자 장치(예: 도 1의 전자 장치(101, 102, 104) 또는 도 2 내지 4 의 사용자 단말)와 통신을 연결할 수 있다. 예를 들어, 통신 회로는 외부 전자 장치와 데이터를 송 수신할 수 있다. 예를 들어, 통신 회로는 외부 전자 장치(예: 사용자 단말)로부터 사용자의 음성 입력(예: 음성 명령)을 수신하거나(전달 받거나), 외부 전자 장치(예: 타겟 장치)가 지정된 동작을 수행하도록 하는 명령을 전송할 수 있다. 예를 들어, 통신 회로는 외부 전자 장치(예: 타겟 장치 및/또는 타겟 장치 와 연결된 클라우드 서버)의 상태와 관련된 정보 및/또는 외부 전자 장치가 음성 입력에 대응하는 동작을 수행 한 결과에 관련된 정보를 수신할 수 있다. 일 실시예에 따르면, 메모리는 프로세서에 의해 실행 시 전자 장치의 동작을 제어하도록 하는 인스트럭션들을 저장할 수 있다. 일 실시예에 따르면, 메모리는 전자 장치의 동작을 수행하는데 사 용되는 데이터를 적어도 일시적으로 저장할 수 있다. 일 실시예에 따르면, 메모리는 보이스 메타데이터를 저장할 수 있다. 예를 들어, 메모리는 다양한 장치 및 기능에 대응하는 적어도 하나의 보이스 메타데이터 를 미리 저장하고 있을 수 있다. 예를 들어, 보이스 메타데이터는 장치 개발자(제조사)로부터 미리 설정 또는 제작되어 배포될 수 있다. 일 실시예에 따르면, 메모리는 보이스 메타데이터를 오브젝트의 형태(예: JSON 파일)로 저장할 수 있다. 일 실시예에 따르면, 프로세서는 통신 회로를 통하여 외부 전자 장치(예: 사용자 단말)로부터 사용자 의 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 프로세서는 음성 입력에 대하여 음성 인식(예: 자 연어 이해(natural language understanding, NLU))을 수행할 수 있다. 예를 들어, 프로세서는 NLU 처리 를 통하여 음성 입력에 기반하여 타겟 장치와 관련된 정보(예: 타겟 장치의 ID, VID, 명칭, 및/또는 종류) 및 사용자 의도를 인식할 수 있다. 예를 들어, 프로세서는 NLU 처리를 통해 음성 입력으로부터 사용자 의도 를 추출할 수 있다. 일 실시예에 따르면, 프로세서는 사용자의 음성 입력을 기반으로 음성 입력에 대응하는 동작을 수행할 타 겟 장치 및 사용자 의도(intent)를 인식할 수 있다. 예를 들어, 프로세서는 음성 입력에 기반하여 타겟 장치의 정보를 인식할 수 있다. 일 실시예에 따르면, 타겟 장치의 정보는 타겟 장치의 종류, 타겟 장치의 명칭, 타겟 장치의 ID, 타겟 장치의 제조사 정보, 또는 타겟 장치의 벤더(vendor) ID 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 사용자 의도는 음성 입력에 대응하는 동작과 관련된 보이스 캐퍼빌리티(voice capability) 정보, 보이스 액션(voice action) 정보, 및 파라미터 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 사용자 의도는 보이스 캐퍼빌리티, 보이스 액션, 및/또는 파라미터 정보를 포함하는 문자열의 형태를 가질 수 있다. 예를 들어, 보이스 캐퍼빌리티 정보는 장치의 기능을 나타내는 정보를 포함할 수 있고, 보이스 액션 정보는 장치의 기능을 어떻게 동작시킬 지와 관련된 정보를 포함할 수 있다. 예를 들어, 파라미터 정보는 기기를 동작시키기 위한 부가 정보를 포함할 수 있으며, 사용자 의도에서 생략될 수 있다. 예를 들어, 표 1은 타겟 장치가 TV인 경우의 사용자 의도의 일 예시를 나타내나, 사용자 의도는 이에 한정되는 것은 아니다. 표 1 voice capability voice action Parameter 설명 PowerSwitch On 없음 전원 켜기 PowerSwitch Off 없음 전원 끄기 Channel Set 11 채널 설정(11번)일 실시예에 따르면, 프로세서는 지정된 포맷(예: JSON(JavaScript Object Notation))으로 사용자 의도를 생성 및/또는 변환할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 의도를 처리(handle)하여 타겟 장치에 음성 입력에 대응하는 동작 을 수행하도록 하는 명령(예: IoT(internet of things) 명령)을 전송할 수 있다. 예를 들어, 프로세서는 타겟 장치의 정보 및 사용자 의도에 기반하여 타겟 장치 및/또는 타겟 장치와 연결된 클라우드 서버에 명령을 전송할 수 있다. 일 실시예에 따르면, 프로세서는 타겟 장치와 관련된 정보 및/또는 사용자 의도에 기반하여 보이스 메타데 이터를 인식할 수 있다. 예를 들어, 프로세서는 사용자의 음성 입력에 대응하는 보이스 메타데이터를 인식 할 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 프로세서에 의해 실행 가능하도록 구성된 지정된 포맷(예: JSON 포맷)의 파일일 수 있다. 예를 들어, 보이스 메타데이터는 프로세서에 의해 실행되어 음성 명령을 처리하도록 하는 코드를 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 보이스 메타데이터 가 사용될 장치의 정보(예: VID), 보이스 캐퍼빌리티, 및/또는 보이스 액션의 정보를 포함할 수 있다. 일 실시 예에 따르면, 보이스 메타데이터는 JSON 텍스트로 구성될 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 기능을 수행하는 최소의 논리 단위인 복수의 노드(node)들로 구성될 수 있다. 일 실시예에 따르면, 프로세서는 보이스 메타데이터에 기반하여 음성 입력에 대응하는 동작(action)을 수 행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단할 수 있다. 예를 들어, 사용자의 음성 입력이 “ 에어컨 급속 냉방 설정해줘”인 경우, 사용자의 음성 입력에 대응하는 ‘에어컨을 급속 냉방 기능으로 설정하는 동작’을 수행하기 위해서는 에어컨의 전원을 켜는 전제 조건이 필요할 수 있다. 일 실시예에 따르면, 프로세서는 음성 입력에 대응하는 동작을 수행하기 위하여 필요한 전제 조건이 있는 경우, 전제 조건과 관련된 타겟 장치의 상태를 확인할 수 있다. 예를 들어, 전자 장치는 타겟 장치에 전 제 조건과 관련된 상태 정보를 요청하고, 타겟 장치로부터 상태 정보를 수신할 수 있다. 예를 들어, 전자 장치 는 타겟 장치가 연결된 클라우드 서버를 통하여 타겟 장치의 상태 정보를 획득할 수 있다. 예를 들어, 전 자 장치는 에어컨을 급속 냉방으로 설정하기 위한 전제 조건(예: ‘에어컨 전원이 켜진 상태’)과 관련하 여, 타겟 장치(예: 에어컨)로부터 타겟 장치의 전원 상태에 대한 정보를 획득할 수 있다. 예를 들어, 전자 장 치는 타겟 장치의 전원이 켜져 있는 상태인지 또는 꺼져 있는 상태인지를 나타내는 상태 정보를 획득할 수 있다. 일 실시예에 따르면, 프로세서는 타겟 장치의 상태가 전제 조건을 만족하는지 판단할 수 있다. 예를 들어, 프로세서는 타겟 장치(예: 에어컨)의 상태 정보를 기반으로 에어컨의 전원이 꺼져 있음을 인식한 경우 전 제 조건을 만족하지 않는 것으로 판단하고, 에어컨의 전원이 켜져 있음을 인식한 경우 전제 조건을 만족하는 것으로 판단할 수 있다. 일 실시예에 따르면, 프로세서는, 타겟 장치의 상태가 전제 조건을 만족하지 않는 것으로 판단한 경우, 보 이스 메타데이터에 기반하여 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 타겟 장치는 클라우드 서버에 연결된 IoT 장치를 포함할 수 있다. 일 실시예에 따 르면, 프로세서는 클라우드 서버에 타겟 장치가 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전 송하고, 클라우드 서버는 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전달할 수 있다. 일 실시예에 따르면, 프로세서는, 타겟 장치의 상태가 전제 조건을 만족하는 것으로 판단한 경우, 음성 입 력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 프로세서 는 클라우드 서버에 타겟 장치가 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 전송하고, 클라우 드 서버는 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전달할 수 있다. 일 실시예에 따 르면, 프로세서는 음성 입력에 대응하는 동작을 수행하기 위하여 필요한 전제 조건이 없는 경우, 프로세서 는 타겟 장치의 상태를 확인하지 않고 바로 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장 치에 전송할 수 있다. 일 실시예에 따르면, 타겟 장치가 명령에 대응하는 동작(예: 전제 조건에 대응하는 동작 및/또는 음성 입력에 대응하는 동작)을 수행한 경우, 프로세서는 동작 수행 결과를 외부 전자 장치에 제공할 수 있다. 예를 들 어, 프로세서는 통신 회로를 통하여 타겟 장치로부터 동작 수행 결과를 나타내는 응답을 수신할 수 있다. 예를 들어, 프로세서는 통신 회로를 통하여 타겟 장치의 동작 수행 결과를 나타내는 응답을 외부 전자 장치에 제공할 수 있다. 일 실시예에 따르면, 전자 장치는 도 1의 전자 장치, 도 1의 서버, 도 2의 지능형 서버, 또는 도 2의 서비스 서버의 구성 중 적어도 일부를 더 포함할 수 있다. 본 개시의 일 실시예에 따른 전자 장치는, 사용자의 음성 입력에 대응하는 동작을 수행하기 위하여 전제 조건에 대응하는 동작의 수행이 필요한 경우, 사용자의 추가 입력이 없이도 전제 조건에 대응하는 조건을 수행 한 후 음성 입력에 대응하는 동작을 수행하도록 함으로써, 사용자의 의도에 부합하는 음성 어시스턴트 서비스를 원활하게 제공할 수 있다. 도 6은 일 실시예에 따른 인공지능 어시스턴트 시스템을 나타내는 도면이다. 일 실시예에 따르면, 인공지능 어시스턴트 시스템(예: 도 2의 통합 지능 시스템)은 외부 전자 장치(예: 사 용자 단말(예: 도 1의 전자 장치, 도 2 내지 도 4의 사용자 단말), 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서버 및/또는 서비스 서버, 또는 도 5의 전자 장치 ), 클라우드 서버(예: 도 1의 서버), 및/또는 타겟 장치를 포함할 수 있다. 일 실시예에 따르면, 외부 전자 장치는 마이크를 통하여 사용자의 음성 입력을 수신할 수 있다. 일 실시 예에 따르면, 외부 전자 장치는 사용자의 음성 입력을 전자 장치에 전달할 수 있다. 예를 들어, 외부 전자 장치는 마이크를 통하여 수신한 사용자의 음성을 음성 데이터로 변환하여 전자 장치(62 0)에 전송할 수 있다. 일 실시예에 따르면, 음성 인식 모듈은 NLU 모듈을 포함할 수 있다. 예를 들어, 음성 인식 모듈(예: NLU 모듈)은 사용자의 음성 입력을 분석하여 타겟 장치와 관련된 정보(예: 타겟 장치의 ID, 타겟 장치의 명칭, 및/또는 타겟 장치의 종류) 및/또는 사용자 인텐트를 인식할 수 있다. 예를 들 어, 음성 인식 모듈은 사용자의 음성 입력으로부터 사용자 인텐트를 추출할 수 있다. 일 실시예에 따르면, 음성 인식 모듈은 인텐트 핸들러 모듈에 타겟 장치와 관련된 정보 및/또는 사용자 인텐 트를 전달할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 보이스 메타데이터 실행 엔진을 포함할 수 있다. 일 실 시예에 따르면, 인텐트 핸들러 모듈의 보이스 메타데이터 실행 엔진은 런타임(runtime)에 보이스 메 타데이터의 내용(예: 보이스 메타데이터의 코드)을 실행하는 라이브러리 모듈을 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 사용자의 음성 입력(예: 음성 입력으로부터 추출한 사용자 인텐트)으로부터 획득하기 어려운 추가 정보를 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 장치 개발자에 의해 기 생성된 데이터일 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 지정된 포맷(예: JSON 포맷)의 실행 파일을 포함할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 보이스 메타데이터 실행 엔진 을 이용하여 사용자의 음성 입력(예: 사용자 인텐트)에 대응하는 보이스 메타데이터를 실행함으로써, 사용 자의 음성 입력에 대응하는 동작을 수행하기 위한 전제 조건을 판단하고, 전제 조건을 수행하도록 하는 명령 및 /또는 사용자 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 보이스 메타데이터 실행 엔진을 이용하여 런타임에서 보이스 메타데이터를 실 행할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 음성 인식 모듈로부터 수신한 사용자 인텐트에 적어도 일 부 기반하여 사용자의 음성 입력에 대응하는 기능을 수행하기 위한 명령을 결정할 수 있다. 일 실시예에 따르 면, 인텐트 핸들러 모듈은 사용자 인텐트에 적어도 일부 기반하여 타겟 장치를 결정할 수 있다. 예 를 들어, 인텐트 핸들러 모듈은 사용자의 음성 입력에 대응하는 타겟 장치 및 명령을 결정할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 타겟 장치와 연결된 클라우드 서버를 인식할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 타겟 장치와 연결된 클라우드 서버에 타겟 장치 가 사용자의 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 전송할 수 있다. 일 실시예에 따르면, 클라우드 서버는 타겟 장치에 사용자의 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 전송할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 사용자 인텐트에 적어도 일부 기반하여 사용자의 음성 입력에 대응하는 동작을 수행하기 위하여 전제 조건이 필요한지 여부를 판단할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 보이스 메타데이터 모듈로부터 사용자 인텐트에 대응하는 보이스 메타데이터를 획득할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 보이스 메타데이터를 기반으로 음성 입력에 대응하 는 동작을 수행하기 위하여 전제 조건이 필요한지 여부를 판단할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 전제 조건이 필요한 경우 타겟 장치와 연결된 클라우드 서버에 전제 조건에 대응하는 동 작을 수행하도록 하는 명령을 전송할 수 있다. 일 실시예에 따르면, 클라우드 서버는 전제 조건에 대응하 는 동작을 수행하도록 하는 명령을 타겟 장치에 전달할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모 듈은 클라우드 서버를 통하지 않고 타겟 장치에 직접 사용자의 음성 입력에 대응하는 동작을 수 행하도록 하는 명령 및/또는 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전송할 수 있다. 이하, 도 7 및 도 8에서 인텐트 핸들러 모듈의 동작에 대하여 보다 상세하게 설명한다. 일 실시예에 따르면, 보이스 메타데이터 모듈은 보이스 메타데이터 편집기 및 보이스 메타데이터 저 장소(storage)를 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 편집기는 보이스 메타 데이터 모듈이 제공하는 다양한 사용자 인터페이스(예: 인터넷 사이트, 어플리케이션, 프로그램, 및/또는 보이스 메타데이터 편집 툴)를 포함할 수 있다. 이하, 도 13a 내지 13g 에서 보이스 메타데이터 편집기 를 이용하여 보이스 메타데이터를 생성하는 동작에 대해서 보다 상세히 설명한다. 일 실시예에 따르면, 보이스 메타데이터 저장소는 보이스 메타데이터 모듈의 메모리에 포함될 수 있다. 다양한 실시예에 따르면, 전자 장치의 각 구성(예: 음성 인식 모듈, 인텐트 핸들러 모듈, 또는 보이스 메타데이터 모듈) 중 적어도 일부는 별도의 서버로 구현될 수 있으며, 또는 통합된 하나의 서버로 서 구현될 수도 있다. 일 실시예에 따르면, 음성 인식 모듈, 인텐트 핸들러 모듈, 또는 보이스 메타 데이터 모듈 중 적어도 일부는 전자 장치의 프로세서(예: 도 1의 프로세서 또는 도 5의 프로세 서)로 통합되어 구현될 수 있다. 예를 들어, 상술한 음성 인식 모듈, 인텐트 핸들러 모듈, 또 는 보이스 메타데이터 모듈의 동작들은 전자 장치의 프로세서에 의해 수행될 수 있다. 일 실시예에 따르면, 외부 전자 장치(예: 사용자 단말)와 전자 장치는 일체로 구현될 수 있다. 예를 들어, 단일 의 장치가 외부 전자 장치의 사용자의 음성 입력을 수신하는 동작 및 전자 장치의 인공지능 어시스턴 트 동작을 모두 수행하도록 구현될 수도 있다. 도 7은 일 실시예에 따른 인텐트 핸들러 모듈의 동작을 설명하기 위한 도면이다. 일 실시예에 따르면, 인텐드 핸들러 모듈(예: 도 6의 인텐트 핸들러 모듈)은 음성 인식 모듈(미도 시)(예: 도 6의 음성 인식 모듈)로부터 사용자 인텐트를 수신할 수 있다. 일 실시예에 따르면, 인텐 트 핸들러 모듈은 음성 인식 모듈로부터 타겟 장치의 정보를 수신할 수 있다. 일 실시예에 따르면, 인텐 트 핸들러 모듈은 사용자 인텐트에 기반하여 타겟 장치(예: 도 6의 타겟 장치)에 전송할 명령을 결정 할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 사용자 인텐트에 기반하여 타겟 장치의 종류, 타겟 장치의 기능, 설정 값, 타겟 장치와 연결된 클라우드 서버의 정보, 또는 타겟 장치에 전송할 명령어 중 적어도 하나를 결정할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 장치의 정보(device), 장치의 기능(function), 설정 값(value), 타겟 장치(타겟 장치와 연결된 IoT 클라우드 서버)(target), 및/또는 명령어(command)를 결정할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 결정된 정보에 기반하여, 타겟 장치(또는, 타겟 장치와 연결된 클라우드 서버)에 사용자의 음성 입력에 대응하는 동작(즉, 사용자 인텐트에 대응하는 동작)을 수행하도 록 하는 명령을 전송할 수 있다. 일 실시예에 따르면, 사용자의 음성 입력에 대응하는 사용자 인텐트에 대응하는 동작을 수행하기 위하여 전제 조건이 필요할 수 있다. 예를 들어, 사용자가 TV 채널을 변경하기 위한 음성 입력을 발화한 경우, 사용자의 음 성 입력에 대응하는 동작(예: TV 채널을 변경)을 수행하기 위해서 전제 조건(예: TV의 전원을 켬)이 필요할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈(예: 보이스 메타데이터 실행 엔진)은 사용자의 음성 입력 에 대응하는 동작을 수행하기 위하여 전제 조건이 필요한지 여부를 판단할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 보이스 메타데이터 모듈(예: 도 6의 보이스 메타데이터 모듈)로부터 사용자 인텐트에 대응하 는 보이스 메타데이터를 획득하고, 보이스 메타데이터를 기반으로 음성 입력에 대응하는 동작을 수행하기 위하 여 전제 조건이 필요한지 여부를 판단할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 전제 조건 이 필요한 경우 전제 조건에 대응하는 동작을 수행하기 위한 타겟 장치의 정보(device), 장치의 기능(function), 설정 값(value), 타겟 장치(타겟 장치와 연결된 IoT 클라우드 서버)(target), 및 명령어(command) 중 적어도 하나를 결정할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 결정한 정보에 기반하여 타겟 장치(또는, 타겟 장치와 연결된 클라우드 서버)에 전제 조건에 대응하는 동작을 수행하도록 하는 명령 을 전송할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 사용자의 음성 입력에 대응하는 동 작을 수행하기 위하여 필요한 전제 조건이 있는 경우, 타겟 장치가 전제 조건에 대응하는 동작을 먼저 수행한 이후에 사용자의 음성 입력에 대응하는 동작을 수행하도록 할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모 듈은 타겟 장치의 상태를 인식하고, 사용자의 음성 입력에 대응하는 동작을 수행하기 위한 전제 조건이 없 거나(예: 사용자가 “TV 켜줘”와 같이 전제 조건이 필요 없은 음성 입력을 발화한 경우), 또는 전제 조건이 이 미 만족된 경우(예: 사용자가 “에어컨 온도 낮춰줘”의 음성 입력을 발화한 경우, 전제 조건인 ‘에어컨이 켜 진 상태’가 이미 만족된 경우)에는 사용자의 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치 에 전송할 수 있다. 도 8은 일 실시예에 따른 인텐트 핸들러 모듈의 동작을 설명하기 위한 도면이다. 일 실시예에 따르면, 인텐트 핸들러 모듈(intent handler module)(예: 도 6의 인텐트 핸들러 모듈 또는 도 7의 인텐트 핸들러 모듈)은 보이스 메타데이터 실행 엔진(voice metadata execution engine)(예: 도 6의 보이스 메타데이터 실행 엔진)을 포함할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈의 보이스 메타데이터 실행 엔진은 런타임(runtime)에 보이스 메타데이터의 내용(예: 보 이스 메타데이터의 코드)을 실행하는 라이브러리 모듈을 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터와 관련하여 다음의 표 2의 용어들이 정의될 수 있다. 표 2 * 장치(device) - 기기(예: IoT 장치, 타겟 장치)를 지칭함. 예) 에어컨, 청소기, 조명, 블라인드 * 캐퍼빌리티(capability) (보이스 캐퍼빌리티와는 상이한 개념) - 장치가 가진 기능 속성을 의미함. 예1) 볼륨(volume): 볼륨 속성, TV, 라디오, 스피커, 모바일 장치에 대하여 볼륨 캐퍼빌리티가 설정될 수 있음. 예2) 채널(channel): 1개의 장치에서 n개의 방송을 시청 또는 청취할 수 있을 때 각 방송을 나타내기 위해 사용하는 값. 예를 들어, TV 또는 라디오는 채널 캐퍼빌리티는 설정할 수 있으나, 스피커 또는 모바일 장치는 채널 캐퍼빌리티 속성을 설정할 수 없을 수 있음. - 캐퍼빌리티는 표준화 스펙(spec)으로 특정 장치에 종속되지 않음. 예를 들어, 디밍 레벨(dimming level) 캐퍼빌리티는 조명의 밝기 또는 블라인드의 접힘 정도를 나타내는데 사용될 수 있음. * 액션(action) - 1개의 캐퍼빌리티는 n개의 액션을 포함할 수 있음. 예1) 볼륨(volume): up(볼륨 높이기), down(볼륨 낮추기), 및 set(특정 값으로 설정)의 액션을 포함할 수 있음. 예2) 채널(channel): up(다음 채널로 이동), down(이전 채널로 이동), 및 set(특정 채널로 설정)의 액 션을 포함할 수 있음. * VID - vendor ID - 보이스 메타데이터를 실행하는 시점에 전자 장치(예: 보이스 메타데이터 실행 엔진)은 사용자 정보 를 기반으로 사용자가 소유한 장치의 VID를 검색할 수 있음. - VID는 기 저장된 보이스 메타데이터 중 1개의 특정 메타데이터를 식별하기 위하여 이용될 수 있음. * 보이스 메타데이터(voice metadata) - 장치의 실행 로직을 구현하기 위한 JSON 텍스트를 포함함 - 1개의 장치는 1개의 보이스 메타데이터를 사용할 수 있음 - 1개이 보이스 메타데이터는 n개의 장치에서 사용 가능함. 예를 들어, 동일한 시기에 출시되어 동일 한 VID(예: VD-STD-2021 VID)를 가지는 TV는 VID에 대응하는 동일한 보이스 메타데이터를 사용할 수 있음. * 노드(node) - 보이스 메타데이터를 구성하는 단위로서, 기능을 수행하는 최소의 논리 단위. - 사용자 인터페이스(예: 보이스 메타데이터 편집기)에서는 지정된 형태의 오브젝트로 표현될 수 있음. 예1) 시작 노드(start node): 보이스 메타데이터(예: 그래프(graph)) 실행 시 최초 실행되는 노드. 예2) 캐퍼빌리티 커맨드 노드(capability command node): IoT 캐퍼빌리티 스펙 기반으로 장치 제어 명 령을 장치에 전송하는 노드 * 그래프(graph) - n개의 노드의 실행 순서를 선으로 이어서 표현한 논리 단위. 일 실시예에 따르면, 보이스 메타데이터와 관련하여 다음의 표 3과 같은 스펙이 참조될 수 있다. 예를 들어, 보이스 메타데이터는 하기의 표 3과 같은 JSON 텍스트로서 구현될 수 있다. 일 실시예에 따르면, 하기는 보이 스 메타데이터의 스펙(spec)을 위한 예시로서, 이에 한정되는 것은 아니다.표 3 { \"n\": \"Samsung TV Resource\", // 보이스 메타데이터 파일의 이름. 기기 개발자가 보이스 메타데이터 의 용도를 식별하기 위해 자유롭게 입력하는 값 \"version\": \"0.0.1\", // 보이스 메타데이터 파일의 버전. 보이스 메타데이터 수정 시마다 버전 업데 이트(버전을 올려서 기재함) \"mnmn\": \"Samsung Electronics\", // 제조사 정보 \"vid\": \"VD-STV-2021\", // 제조사의 제품(장치) ID, Vendor ID(VID) \"dalias\": \"Samsung Airpurifier\", // 장치의 별칭 \"dtype\": \"AirPurifier\", // 장치의 타입 \"schemaVersion\": \"2.0\", // 현재 보이스 메타데이터 파일의 문법의 스펙 버전 \"sml\": [ // 장치의 capability 별 action과 graph 정의 { \"capability\": \"Volume\", // TV 볼륨 관련 capability \"voiceActions\": [ { \"action\": \"Set\", // TV 볼륨 설정 action ...(생략)... } ] }, { \"capability\": \"Channel\", // TV 채널 관련 capability \"voiceActions\": [ { \"action\": \"Set\", // TV 채널 n번 설정 action \"graph\": { \"graph\": { \"graphId\": \"14c5bcaf-9cad-49ed-94da-847f976f5da8\", // 그래프 고유 ID \"version\": \"0.0.1\", // 보이스 메타데이터가 실행되는 엔진(예: 보이스 메타데이터 실 행 엔진) 버전 \"userAgent\": { \"id\": \"IntelligenceDesigner\", // 그래프를 작성한 툴(tool)(예: 보이스 메타데이 터 편집기) 명칭. \"version\": \"1.0.0\" // 툴의 버전 }, \"nodes\": [ // graph 내부의 node 리스트 { \"nodeId\": \"cdcd0333-1af5-4d65-b014-6d96feeb59e8\", // node의 고유 ID. graph 상에서 모든 node는 자신이 실행된 후 다음에 실행할 node를 고유 ID를 사용하여 나타냄. \"nodeVer\": \"1.0\", // node의 스펙 버전 \"nodeType\": \"start\", // node의 타입. start node는 맨 처음 실행되는 node로서, 특별한 동작은 하지 않고 start node가 지목하는 다음 node가 실행됨. \"isStateful\": true, // node가 실행된 결과 값을 저장했다가 다음에 graph를 다 시 실행할 때 참고함. \"isTriggerOnChange\": false, // node의 실행 후 이전 실행 결과 값과 현재 실행 결과 값이 다를 경우만 다음 노드 실행. \"group\": null, // node들을 그룹화 할 때 사용 \"inputPorts\": {}, // 해당 node를 실행할 때 입력으로 사용할 다른 node의 고유 ID를 기재함. \"triggerPorts\": { // 해당 node가 실행되고 난 후 실행될 다음 node의 고유 ID를 기재함. \"main\": { // default 설정. 기본 값을 main이라고 표현함. \"nodes\": [ \"713fed18-a99a-4413-9426-879055a84dc5\" // 713fed18-a99a-4413-9426- 879055a84dc5 는 현재의 graph에 포함된 다른 node 중 하나의 고유 ID ] } }, \"styles\": { // editor(보이스 메타데이터 편집기)의 사용자 인터페이스(UI) 상의 node의 위치 값. 다른 사람이 해당 보이스 메타데이터를 editor에서 로딩했을 때 똑같은 배치 형태로 UI를 보여주기 위한 값. \"x\": 215, \"y\": 480 } }, { \"nodeId\": \"713fed18-a99a-4413-9426-879055a84dc5\", \"nodeVer\": \"1.0\", \"nodeType\": \"capabilityAttribute\", // \"capabilityAttribute\"는 IoT 기기의 현 재 상태 값을 가져오는(호출하는) node. \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": {}, \"triggerPorts\": { // 하기 기재된 \"success\", \"failure\"와 같은 포트 이름은 특 정 node에서만 사용 가능함. \"success\": { // IoT 기기의 현재 값을 정상적으로 가져왔을 때 실행할 node의 고유 ID. \"success\" port는 \"capabilityAttribute\" 에만 존재함. \"nodes\": [ \"5567c7d9-7566-45ea-8aab-1361b7271d83\" ] }, \"failure\": { // IoT 기기의 현재 값을 정상적으로 가져오지 못했을 때 실행할 node의 고유 ID. \"nodes\": [] } }, \"configurations\": { // node의 설정 값. Node Type에 따라 사용할 수 있는 configuration 이 상이함. \"attribute\", \"required\"은 configuration의 명칭. \"attribute\": { // 해당 node를 실행할 때 어떤 형태로 IoT 명령어를 만들어 기 기의 상태 값을 가져오는 기능을 수행할지에 대한 정보를 포함함. 하기는, 기기의 전원 값을 가져올때 사용하는 configuration \"dataType\": \"datatype.schema.AFCapabilityAttribute\", // 실행 엔진(예: 보 이스 메타데이터 실행 엔진)에서 실행될 때 사용할 데이터 타입. \"dataValue\": { // datatype.schema.AFCapabilityAttribute 라는 자료 타입 에 저장될 값 \"component\": \"main\", // 기기가 가진 기능의 그룹 \"capability\": \"switch\", // 기기 전원 스위치 capability \"attribute\": \"switch\", // 기기 전원 스위치 capability의 속성 \"property\": { \"name\": \"value\", \"dataType\": \"datatype.primitive.AFString\" // capability의 속성 값이 어떤 데이터 타입인지 \"on\", \"off\" 라는 문자열로 정의되어 있어 datatype.primitive.AFString 사용. } } }, \"required\": { // capabilityAttribute node의 required 설정 값은 node가 실행 되었을 때 IoT 기기의 현재 값을 가져오지 못하면 에러를 발생할 것인지 여부 \"dataType\": \"datatype.primitive.AFBoolean\", \"dataValue\": true } }, \"styles\": { \"x\": 465, \"y\": 262.1953125 } }, { \"nodeId\": \"5567c7d9-7566-45ea-8aab-1361b7271d83\", \"nodeVer\": \"1.0\", \"nodeType\": \"equalComparison\", \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null,2dd18211-3178-412c-a581-04f16465086d \"inputPorts\": {2dd18211-3178-412c-a581-04f16465086d \"leftValue\": { // \"equalComparison\" 은 입력으로 들어온 두 값을 비교하는 기 능을 수행하므로 \"leftValue\" 라는 input port와 \"rightValue\" 라는 input port 가 있음. \"nodes\": [ \"713fed18-a99a-4413-9426-879055a84dc5\" // \"capabilityAttribute\"의 node의 고유 ID이므로, 여기서는 기기의 현재 전원 상태에 대한 값을 사용함. ] }, \"rightValue\": { \"nodes\": [ \"2dd18211-3178-412c-a581-04f16465086d\" // 뒤쪽에 정의된 \"constant\" node의 고유 ID, 고정된 \"on\" 이라는 값이 저장되어 있음. ] } }, \"triggerPorts\": { \"true\": { // equalComparison 가 실행된 후 결과 값이 true이면 여기에 실행된 node를 실행함. \"nodes\": [ \"c6030f81-127a-4340-a70c-49c42cf2dc5c\" ] }, \"false\": { // equalComparison 가 실행된 후 결과 값이 false이면 여기에 실행 된 node를 실행함. \"nodes\": [ \"d02fcd27-c178-4ff6-8a6a-b43ecdf5d157\" ] } }, \"configurations\": { \"operator\": { // equalComparison 이 어떤 기능을 수행할지 나타냄. equalTo (같다) 또는 notEqualTo(다르다)를 수행할 수 있음. \"dataType\": \"datatype.operator.EqualComparisonOperator\", \"dataValue\": \"equalTo\" } }, \"styles\": { \"x\": 695, \"y\": 349.72265625 } }, { \"nodeId\": \"2dd18211-3178-412c-a581-04f16465086d\", \"nodeVer\": \"1.0\", \"nodeType\": \"constant\", \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": {}, \"triggerPorts\": { // \"constant\" node는 다음에 실행할 node가 없지만 다른 node 에서 이 node의 값을 input으로 사용하면 참조 시에 실행됨. \"main\": { \"nodes\": [] } }, \"configurations\": { // 고정된 상수 값의 데이터 타입(문자,숫자,불린,..)은 문 자열임. 저장된 값은 \"on\" 임. \"value\": { \"dataType\": \"datatype.primitive.AFString\", \"dataValue\": \"on\" } }, \"styles\": { \"x\": 475, \"y\": 440 } }, { \"nodeId\": \"c6030f81-127a-4340-a70c-49c42cf2dc5c\", \"nodeVer\": \"1.0\", \"nodeType\": \"capabilityCommand\", // 기기 제어 명령을 보내는 기능 수행하는 node \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": { \"tvChannel\": { \"nodes\": [ \"4ef5e297-f6a1-436d-b977-cb8b0238051c\" // \"parameter\" node의 결과 값을 channel 번호로 사용함. \"parameter\" node는 사용자 발화에서 추출된 값을 저장하는데 \"채널 11로 변경해줘\" 에서 \"11\" 값이 런타임에 node의 값으로 채워짐. ], \"portInfo\": { // port 정보. 입력으로 n개의 노드의 결과 값을 참고할 수 있 으며, 아래 정의에 따라 1개 (4ef5e297-f6a1-436d-b977-cb8b0238051c) 만을 정의할 수 있게 함. \"dataTypes\": [ \"undefined\" ], \"minItems\": 1, \"maxItems\": 1 } } }, \"triggerPorts\": { \"success\": { \"nodes\": [ \"8b0e703d-94b1-4fc2-8dbd-6e5bd8bfe475\" // 채널 변경 명령을 수행하면 실 행할 다음 노드 고유 ID. ] }, \"failure\": { \"nodes\": [] } }, \"configurations\": { \"command\": { // \"capabilityCommand\" node가 어떤 IoT 명령어를 보낼지를 configuration으로 입력 받음. \"dataType\": \"datatype.schema.AFCapabilityCommand\", \"dataValue\": { \"component\": \"main\", // 기기가 가진 기능의 그룹 \"capability\": \"tvChannel\", // 채널 capability \"command\": \"setTvChannel\", // 채널 변경 \"arguments\": [ // 채널 번호를 정의 { \"dataType\": \"datatype.schema.AFCommandArgument\", \"dataValue\": { \"name\": \"tvChannel\", \"optional\": false, \"dataType\": \"datatype.primitive.AFString\" } } ] } } }, \"styles\": { \"x\": 1180, \"y\": 336.640625 } }, { \"nodeId\": \"d02fcd27-c178-4ff6-8a6a-b43ecdf5d157\", \"nodeVer\": \"1.0\", \"nodeType\": \"capabilityCommand\", // 앞과 마찬가지로 기기 제어 명령을 보내는 기능 수행하는 node. 해당 graph에서는 \"capabilityCommand\" node가 2번 사용되었는데 하나는 TV 전원 을 \"on\"하기 위한 용도, 하나는 채널을 \"11\"로 변경하기 위한 용도임. // \"capabilityCommand\" 라는 node의 input이 나 configuration을 바꿔주는 것 만으로 다른 명령을 수행하기 할 수 있음. \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": {}, // 전원 스위치 조작은 별도의 input을 가지지 않음. \"triggerPorts\": { \"success\": { \"nodes\": [ \"c6030f81-127a-4340-a70c-49c42cf2dc5c\" ] }, \"failure\": { \"nodes\": [] } }, \"configurations\": { \"command\": { \"dataType\": \"datatype.schema.AFCapabilityCommand\", \"dataValue\": { \"component\": \"main\", \"capability\": \"switch\", \"command\": \"on\", // 채널 \"on\" 명령을 실행하도록 설정되어 있음. \"arguments\": [] } } }, \"styles\": { \"x\": 920, \"y\": 156.640625 } }, { \"nodeId\": \"8b0e703d-94b1-4fc2-8dbd-6e5bd8bfe475\", \"nodeVer\": \"1.0\", \"nodeType\": \"response\", // 사용자에게 음성 응답을 보내는 node. \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": { \"Channel\": { \"nodes\": [ \"4ef5e297-f6a1-436d-b977-cb8b0238051c\" // \"parameter\" node의 결과 값을 channel 번호로 사용함. 아래 정의된 \"네, #{Channel}(을)를 틀게요.\" // 음성 응답에 #{Channel} 대신 \"parameter\" node의 결과 값. 즉 \"11\"을 사용하여 \"네, 11(을)를 틀게요.\" 라고 실행되게 함. ], \"portInfo\": { // #{Channel} 에 사용될 수 있는 데이터 타입의 종류를 정의 함. \"dataTypes\": [ \"datatype.util.AFList\", \"datatype.primitive.AFString\", \"datatype.primitive.AFInteger\", \"datatype.primitive.AFNumber\", \"datatype.primitive.AFBoolean\", \"datatype.primitive.AFTime\", \"datatype.smartthings.AFVocab\", \"datatype.smartthings.AFNumberVocab\" ], \"minItems\": 0, \"maxItems\": 1 } } }, \"triggerPorts\": { \"main\": { \"nodes\": [] } }, \"configurations\": { \"handsOnDialogue\": { // handsFreeDialogue(스피커용 Response), handsOnDialogue(모바일용 Response) \"dataType\": \"datatype.schema.AFDialogue\", \"dataValue\": { \"parameters\": { \"Channel\": { \"dataType\": \"datatype.schema.AFDialogueParameter\", \"dataValue\": { \"type\": \"string\", } } }, \"dialogueId\": \"Rev_SamsungIoT_13_42_SetValue_LiveTVOrSTB_YesOrNo_Yes\", // 아래 \"네, #{Channel}(을)를 틀게 요.\"는 일 예시임. tvChannel // 실제로는 Rev_SamsungIoT_13_42_SetValue_LiveTVOrSTB_YesOrNo_Yes 값과 위의 \"11\" 값을 음성 인식 서버에 리턴하고, // 음성 인식 서버에서 Rev_SamsungIoT_13_42_SetValue_LiveTVOrSTB_YesOrNo_Yes Response를 사용하여 자연어 처리를 하도록 유도함. \"template\": \"네, #{Channel}(을)를 틀게요.\" // 음성 응답에 대한 일 예시 이며 #{Channel}에 해당하는 parameter 값이 필요함을 나타냄. } } }, \"styles\": { \"x\": 1475, \"y\": 500 } }, { \"nodeId\": \"4ef5e297-f6a1-436d-b977-cb8b0238051c\", \"nodeVer\": \"1.0\", \"nodeType\": \"parameter\", // 사용자 음성 명령에 포함된 파라미터 값을 저장하고 있음. 여기서는 \"11\" \"isStateful\": true, \"isTriggerOnChange\": false, \"group\": null, \"inputPorts\": {}, \"triggerPorts\": {}, \"configurations\": { \"key\": { \"dataType\": \"datatype.primitive.AFString\", // \"11\"은 문자열 데이터 타입 으로 표현됨. \"dataValue\": \"string\" // 파라미터 Key 이름 } }, \"styles\": { \"x\": 0, \"y\": 0capabilityCommand } } ] } }, \"href\": \"/capability/tvChannel/main/0\" // 해당 보이스 메타데이터가 최종 수행하고자 하는 역할을 IoT spec으로 표현함. // 예를 들어, 해당 보이스 메타데이터는 TV의 채널을 변경하는 일 을 하기 위해 작성되었으므로 \"capabilityCommand\" node의 configuration에 있는 \"component\": \"main\", \"capability\": \"tvChannel\"을 IoT spec대로 표현하여 저장함. // 이 값은 사용자 발화가 실 행되었을 때 실행 엔진이 어떤 보이스 메타데이터를 실행할지 결정하는데 참고됨. } ] } ] }일 실시예에 따르면, 보이스 메타데이터 실행 엔진은 보이스 메타데이터 로더(voice metadata loader), 보이스 메타데이터 파서(voice metadata parser), 실행 결정 모듈(execution decision module) 및/또는 커맨드 전송기(command sender)를 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 로더는 외부 전자 장치(예: 사용자 단말(예: 도 1의 전자 장치 , 도 2 내지 4의 사용자 단말, 또는 도 6의 외부 전자 장치) 또는 음성 인식 모듈(예: 도 6의 음성 인식 모듈)로부터 수신한 정보(예: 타겟 장치(예: 도 6의 타겟 장치)의 정보(예: 타겟 장 치의 종류, 타겟 장치의 벤더 ID) 및/또는 사용자 의도)를 기반으로 대응되는 보이스 메타데이터를 인식할 수 있다. 예를 들어, 보이스 메타데이터 로더는 보이스 메타데이터 모듈(예: 도 6의 보이스 메타데이터 저장 소)에 저장된 보이스 메타데이터 중에서 타겟 장치의 정보에 대응하는 보이스 메타데이터를 검색 및 획득 할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 로더는 REST(representational state transfer) API의 형태로 보이스 메타데이터 모듈에 장치의 정보에 대응하는 보이스 메타데이터의 요청을 전송할 수 있고, 보이스 메타데이터 모듈로부터 요청에 대응하는 보이스 메타데이터를 다운로드할 수 있다. 일 실시예 에 따르면, 보이스 메타데이터 로더가 획득한 보이스 메타데이터는 인텐트 핸들러 모듈의 메모리 내 에 오브젝트의 형태(예: JSON 파일)로 저장될 수 있다. 일 실시예에 따르면, 오브젝트의 형태로 저장된 보이스 메타데이터는 보이스 메타데이터 실행 엔진에 포함된 다른 구성 요소들에 의해 접근이 허용될 수 있다. 일 실시예에 따르면, 보이스 메타데이터 파서는 보이스 메타데이터를 복수 개의 오브젝트로 분할할 수 있 다. 예를 들어, 보이스 메타데이터 파서는 하나의 오브젝트로 저장된 보이스 메타데이터를 더 작은 단위 의 복수 개의 오브젝트(예: 노드(node))로 분할할 수 있다. 일 실시예에 따르면, 노드(node)는 보이스 메타데 이터의 최소 실행 단위를 의미할 수 있다. 예를 들어, 보이스 메타데이터가 하나의 JSON 파일로 구성된 경우, 노드는 보이스 메타데이터의 최소 실행 단위가 되는 JSON 블록을 의미할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 파서는 보이스 메타데이터를 분할한 노드들을 실행 순서에 따라 재배치(재배열)할 수 있다. 예를 들어, 보이스 메타데이터 파서는 보이스 메타데이터의 각 노드들에 포함된 실행 순서(예: 해당 노드 이후에 실행할 노드의 정보)를 기반으로 노드들을 재배치할 수 있다. 일 실시예에 따르면, 실행 결정 모듈은 재배치된 보이스 메타데이터의 각 노드들(즉, 재배치된 JSON 블록 들)을 순서대로 실행할 수 있다. 예를 들어, 실행 결정 모듈은 재배치된 각 노드들의 내용을 기반으로 각 노드들의 실행 여부를 결정할 수 있다. 예를 들어, 실행 결정 모듈은 사용자의 음성 입력(또는, 사용자 의도)에 대응하는 동작에 대응하는 노드를 실행하거나, 또는 음성 입력(또는, 사용자 의도)에 대응하는 동작을 실행하기 위한 전제 조건이 되는 동작에 대응하는 노드를 실행할 수 있다. 일 실시예에 따르면, 실행 결정 모 듈은 노드를 순차적으로 실행함에 따라 사용자의 음성 입력(또는, 사용자 의도)에 대응하는 동작을 수행하 기 위한 전제 조건의 충족 여부를 판단하고, 이에 기반하여 다음에 실행할 노드를 결정할 수 있다. 일 실시예에 따르면, 커맨드 전송기는 타겟 장치를 제어하기 위한 명령을 타겟 장치에 전송할 수 있다. 예를 들어, 커맨드 전송기는 타겟 장치와 연결된 클라우드 서버(예: IoT 클라우드 서버)를 통하여 타겟 장 치에 명령을 전송할 수 있다. 예를 들어, 커맨드 전송기는 타겟 장치를 제어하기 위한 명령을 포함하는 노드로부터 명령을 추출하고, 추출한 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 커맨드 전송기 는 타겟 장치를 제어하기 위한 명령을 포함하는 노드에 기반하여 REST API의 형태로 명령을 생성 또는 변 환하고, 타겟 장치에 연결된 클라우드 서버를 호출하여 타겟 장치를 제어하기 위한 명령을 전달할 수 있다. 일 실시예에 따르면, 커맨드 전송기는 사용자의 음성 입력에 대응하는 동작을 수행하기 위한 전제 조건에 대 응하는 동작에 대응하는 명령 및/또는 사용자의 음성 입력에 대응하는 동작에 대응하는 명령을 타겟 장치에 전송할 수 있다. 다양한 실시예에 따르면, 보이스 메타데이터 실행 엔진의 구성은 도 8에 도시된 바에 한정되지 않으며, 보 이스 메타데이터 로더, 보이스 메타데이터 파서, 실행 결정 모듈, 및 커맨드 전송기 중 적 어도 하나가 하나의 모듈로서 구현되거나, 추가적인 구성을 포함하거나 또는 일부 구성이 생략될 수도 있다. 본 개시의 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서버 및/또는 서비스 서버, 도 5의 전자 장치, 또는 도 6의 전자 장치)는, 통신 회로(예: 도 1의 통신 모듈 또는 도 5의 통신 회로), 메모리(예: 도 1의 메모리 또는 도 5의 메모리), 및 상 기 통신 회로, 및 상기 메모리에 작동적으로(operatively) 연결되는 프로세서(예: 도 1의 프로세서 또는 도 5의 프로세서)를 포함하고, 상기 메모리는, 실행 시, 상기 프로세서가, 외부 전자 장치(예: 사용자 단 말(예: 도 1의 전자 장치, 도 2 내지 도 4의 사용자 단말, 또는 도 6의 외부 전자 장치)로부터 사용자의 음성 입력을 상기 통신 회로를 이용하여 수신하고, 상기 음성 입력에 기반하여 상기 음성 입력에 관련 된 보이스 메타데이터를 인식하고, 상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작 (action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단하고, 상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 통신 회로 를 이용하여 타겟 장치(예: 도 6의 타겟 장치)에 전송하고, 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 통신 회로를 이용하여 상기 타겟 장치에 전송하도록 하는 인스트럭션들(instructions)을 저장 할 수 있다. 일 실시예에 따르면, 상기 인스트럭션들은, 실행 시, 상기 프로세서가, 상기 타겟 장치가 상기 음성 입력에 대 응하는 동작을 수행한 결과를 상기 외부 전자 장치에 제공하도록 할 수 있다. 일 실시예에 따르면, 상기 인스트럭션들은, 실행 시, 상기 프로세서가, 상기 사용자의 음성 입력에 기반하여 상 기 음성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하고, 상기 타겟 장치와 관련 된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하도록 할 수 있다. 일 실시예에 따르면, 상기 타겟 장치와 관련된 정보는 상기 타겟 장치의 벤더 ID(vendor identification, VID), 상기 타겟 장치의 종류, 또는 상기 타겟 장치의 제조사 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 인스트럭션들은, 실행 시, 상기 프로세서가, 상기 전자 장치 및 상기 타겟 장치와 연 결된 클라우드 서버(예: 도 1의 서버, 도 6의 클라우드, 또는 도 9의 클라우드)를 통하여, 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명 령을 상기 타겟 장치로 전송하도록 할 수 있다. 일 실시예에 따르면, 상기 인스트럭션들은, 실행 시, 상기 프로세서가, 상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하고, 상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타 겟 장치에 전송하도록 할 수 있다. 일 실시예에 따르면, 상기 사용자 의도는 상기 음성 입력에 대응하는 동작과 관련된 보이스 캐퍼빌리티(voice capability) 정보, 보이스 액션(voice action) 정보, 및 파라미터 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 보이스 메타데이터는 상기 전자 장치와 연결된 외부 전자 장치 각각에 대하여 미리 설정되어 저장될 수 있다. 도 9는 일 실시예에 따른 인공지능 어시스턴트 시스템의 동작을 나타내는 흐름도이다. 일 실시예에 따르면, 인 공지능 어시스턴트 시스템(예: 도 2의 통합 지능 시스템)은 외부 전자 장치(예: 도 1의 전자 장치, 도 2 내지 4의 사용자 단말), 전자 장치(예: 도 1의 전자 장치 및/또는 서버, 도 2의 지능형 서 버 및/또는 서비스 서버, 도 5의 전자 장치, 또는 도 6의 전자 장치), 클라우드 서버 (예: 도 6의 클라우드 서버), 및/또는 타겟 장치(미도시)(예: 도 6의 타겟 장치)를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 음성 인식 모듈(예: 도 6의 음성 인식 모듈), 인텐트 핸들 러 모듈(예: 도 6의 인텐트 핸들러 모듈, 도 7의 인텐트 핸들러 모듈, 또는 도 8의 인텐트 핸들 러 모듈), 및 보이스 메타데이터 모듈(예: 도 6의 보이스 메타데이터 모듈)을 포함할 수 있다. 일 실시예에 따르면, 음성 인식 모듈, 인텐트 핸들러 모듈, 및/또는 보이스 메타데이터 모듈은 서로 독립된 서버 장치로 구현될 수 있다. 일 실시예에 따르면, 클라우드 서버(cloud) 는 복수의 장치들 을 관리하는 IoT 서버일 수 있다. 일 실시예에 따르면, 901 동작에서, 외부 전자 장치(예: 사용자 단말(예: 도 1의 전자 장치, 도 2 내 지 4의 사용자 단말, 또는 도 6의 외부 전자 장치))는 사용자로부터 음성 입력을 수신할 수 있 다. 예를 들어, 외부 전자 장치는 마이크를 통하여 사용자가 발화하는 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 외부 전자 장치는 사용자로부터 수신한 음성을 음성 데이터로 변환할 수 있다. 예를 들어, 외부 전자 장치는 사용자로부터 “TV 채널 11번으로 변경”의 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 903 동작에서, 외부 전자 장치는 음성 인식 모듈에 음성 입력을 전송할 수 있다. 일 실시예에 따르면, 외부 전자 장치는 사용자로부터 수신한 음성 입력에 대응하는 음성 데이 터를 음성 인식 모듈에 전송할 수 있다. 예를 들어, 외부 전자 장치는 “TV 채널 11번으로 변경”의 음성 입력(음성 입력에 대응하는 데이터)을 음성 인식 모듈에 전송할 수 있다. 일 실시예에 따르면, 905 동작에서, 음성 인식 모듈은 사용자의 음성 입력을 자연어 이해(NLU) 처리 할 수 있다. 예를 들어, 음성 인식 모듈은 사용자의 음성 입력에 기반하여 타겟 장치와 관련된 정보 (예: 타겟 장치의 종류) 및/또는 사용자 인텐트를 인식할 수 있다. 예를 들어, 음성 인식 모듈은 사 용자의 음성 입력으로부터 타겟 장치와 관련된 정보 및/또는 사용자 인텐트를 추출할 수 있다. 예를 들어, 음성 인식 모듈은 “TV 채널 11번으로 변경”의 사용자 입력에 기반하여 타겟 장치의 종류인 ‘TV’ 및 사용자 인텐트 ‘채널 11로 변경(예: channel-set, 11)’을 인식할 수 있다. 일 실시예에 따르면, 907 동작에서, 음성 인식 모듈은 인텐트 핸들러 모듈에 인식한 타겟 장치와 관 련된 정보 및 사용자 인텐트를 전송할 수 있다. 일 실시예에 따르면, 909 동작에서, 인텐트 핸들러 모듈은 타겟 장치와 관련된 정보 및 사용자 인텐 트에 기반하여 보이스 메타데이터 모듈에 대응하는 보이스 메타데이터를 요청할 수 있다. 예를 들어, 인 텐트 핸들러 모듈은 보이스 메타데이터 모듈에, 보이스 메타데이터 모듈에 저장된 보이스 메타 데이터 중 타겟 장치와 관련된 정보 및 사용자 인텐트에 대응하는 보이스 메타데이터의 검색 및 전송을 요 청할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 타겟 장치의 타입(종류)를 인식한 경우, 음성 입력(음성 명령)을 발화하는 사용자의 정보(예: 사용자의 계정 정보) 및/또는 외부 전자 장치(예: 사용자 단 말)의 정보)를 기반으로 음성 입력에 대응하는 타겟 장치를 인식할 수 있다. 일 실시예에 따르면, 인텐트 핸들 러 모듈은 인식한 타겟 장치 및/또는 사용자 인텐트를 기반으로 대응되는 보이스 메타데이터를 획득할 수 있다. 일 실시예에 따르면, 911 동작에서, 보이스 메타데이터 모듈은 타겟 장치와 관련된 정보 및 사용자 인텐트에 대응되는 보이스 메타데이터를 인텐트 핸들러 모듈에 제공할 수 있다. 예를 들어, 인텐트 핸들 러 모듈은 보이스 메타데이터 모듈로부터 타겟 장치와 관련된 정보 및 사용자 인텐트에 대응되는 보 이스 메타데이터를 다운로드할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 모듈은 다양한 장치 및 기능에 대응하는 적어도 하나의 보이스 메타데이터를 미리 저장하고 있을 수 있다. 예를 들어, 보이스 메타데 이터 모듈은 장치의 개발자(제조사)로부터 미리 설정된 보이스 메타데이터를 수신하여 저장할 수 있다. 일 실시예에 따르면, 보이스 메타데이터는 인텐트 핸들러 모듈에 의해 실행될 수 있는 지정된 포맷의 실행 파일(예: JSON 파일)로 구현될 수 있다. 일 실시예에 따르면, 913 동작에서, 인텐트 핸들러 모듈은 보이스 메타데이터 모듈로부터 획득한 보 이스 메타데이터를 실행할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 획득한 보이스 메타데이터에 기반하여 사용자의 음성 입 력에 대응하는 동작을 수행하기 위한 일련의 동작들(915 동작 내지 921 동작)을 수행할 수 있다. 일 실시예에 따르면, 915 동작에서, 인텐트 핸들러 모듈은 보이스 메타데이터에 기반하여 사용자의 음성 입력에 대응하는 동작(예: ‘TV 채널 11번으로 변경’)을 수행하기 위한 전제 조건이 있는지 판단할 수 있 다. 예를 들어, 인텐트 핸들러 모듈은 TV 채널을 11번으로 변경하기 위한 전제 조건(예: ‘TV 전원이 켜 진 상태’)을 인식할 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은 전제 조건을 만족하는지 여부 를 확인할 수 있다. 일 실시예에 따르면, 915 동작에서, 인텐트 핸들러 모듈은 타겟 장치에 연결된 클라 우드 서버에 타겟 장치의 상태 정보를 요청할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 클라우드 서버에 ‘TV의 전원 상태’에 대한 정보를 요청할 수 있다. 일 실시예에 따르면, 917 동작에서, 클라우드 서버는 타겟 장치의 상태 정보를 인텐트 핸들러 모듈에 제공할 수 있다. 예를 들어, 클라우드 서버는 ‘TV 전원 꺼져 있음’을 나타내는 정보를 인텐트 핸들러 모듈에 제공할 수 있다. 일 실시예에 따르면, 919 동작에서, 인텐트 핸들러 모듈은 타겟 장치의 상태 정보에 기반하여 사용자(90 0)의 음성 입력을 수행하기 위한 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 클라우드 서버에 전송할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 TV의 전원이 꺼져 있음을 인식한 경우, 사용자의음성 입력 ‘TV 채널 11번으로 변경’에 대응하는 동작을 수행하기 이전에 필요한 전제 조건에 대응하는 동작 (예: TV 전원 켬)을 수행하도록 하는 명령을 클라우드 서버에 전송할 수 있다. 일 실시예에 따르면, 클라 우드 서버는 인텐트 핸들러 모듈로부터 수신한 명령을 타겟 장치에 전송하고, 타겟 장치는 수신한 명 령에 대응하는 동작(예: TV의 전원을 켜는 동작)을 수행할 수 있다. 일 실시예에 따르면, 사용자의 음성 입력을 수행하기 위한 전제 조건이 없거나(예: 사용자의 음성 입력이 “TV 켜줘”와 같이 다른 전제 조건 을 필요로 하지 않는 경우), 또는 사용자의 음성 입력을 수행하기 위한 전제 조건이 이미 만족된 경우(예: TV의 전원이 이미 켜진 상태), 인텐트 핸들러 모듈은 919 동작을 생략할 수 있다. 일 실시예에 따르면, 921 동작에서, 인텐트 핸들러 모듈은 사용자의 음성 입력에 대응하는 동작을 수 행하도록 하는 명령을 클라우드 서버에 전송할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 TV 채널 을 11번으로 변경하도록 하는 명령을 클라우드 서버에 전송할 수 있다. 일 실시예에 따르면, 클라우드 서 버는 인텐트 핸들러 모듈로부터 수신한 명령을 타겟 장치에 전송하고, 타겟 장치는 수신한 명령에 대 응하는 동작(예: TV 채널을 11번으로 변경)을 수행할 수 있다. 다양한 실시예에 따르면, 919 동작 및 921 동작 에서는 클라우드 서버가 인텐트 핸들러 모듈로부터 명령을 수신하는 것으로 도시하였으나, 인텐트 핸 들러 모듈은 클라우드 서버를 통하지 않고 타겟 장치로 직접 명령을 전송할 수도 있다. 다양한 실시예에 따르면, 915 동작 내지 921 동작은 보이스 메타데이터에 기반한 동작들로 실행 순서 및 실행 동작들은 변경될 수 있다. 예를 들어, 인텐트 핸들러 모듈이 913 동작에서 실행하는 보이스 메타데이터에 따라 915 동작 내지 921 동작의 순서 및 내용은 변경될 수 있다. 일 실시예에 따르면, 923 동작에서, 인텐트 핸들러 모듈은 사용자의 음성 입력에 대응하는 동작의 수 행 결과를 음성 인식 모듈에 전송할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 음성 입력에 대응 하는 동작의 수행이 성공하였는지 또는 실패하였는지에 대한 응답을 음성 인식 모듈에 전송할 수 있다. 예를 들어, 인텐트 핸들러 모듈은 ‘채널 변경 성공’을 나타내는 응답을 음성 인식 모듈에 제공할 수 있다. 일 실시예에 따르면, 925 동작에서, 음성 인식 모듈은 외부 전자 장치에 사용자의 음성 입력에 대응하는 동작의 수행 결과를 전달할 수 있다. 예를 들어, 음성 인식 모듈은 음성 입력에 대응하는 동작의 수행이 성공하였는지 또는 실패하였는지에 대한 응답을 외부 전자 장치에 전달할 수 있다. 예를 들어, 음 성 인식 모듈은 ‘채널 변경 성공’을 나타내는 응답을 외부 전자 장치에 전달할 수 있다. 일 실시 예에 따르면, 사용자의 음성 입력에 대응하는 동작의 수행 결과는 음성 인식 모듈을 통하지 않고 인 텐트 핸들러 모듈로부터 외부 전자 장치로 직접 전송될 수도 있다. 일 실시예에 따르면, 927 동작에서, 외부 전자 장치는 사용자에게 사용자의 음성 입력에 대응하 는 동작의 수행 결과를 제공할 수 있다. 예를 들어, 외부 전자 장치는 시각적 및/또는 청각적으로 동작의 수행 결과를 제공할 수 있다. 예를 들어, 외부 전자 장치는 디스플레이를 통하여 음성 입력에 대응하는 동작 수행 결과를 표시하거나, 스피커를 통하여 음성 입력에 대응하는 동작 수행 결과를 출력할 수 있다. 예를 들어, 외부 전자 장치는 “채널이 정상적으로 변경되었습니다”와 같은 동작 수행 결과를 사용자에게 제공할 수 있다. 도 10은 일 실시예에 따른 보이스 메타데이터를 보이스 메타데이터 모듈(예: 보이스 메타데이터 저장소) 에 등록하는 동작을 나타내는 흐름도이다. 일 실시예에 따르면, 보이스 메타데이터 모듈(예: 도 6의 보이스 메타데이터 모듈 또는 도 9의 보이스 메 타데이터 모듈)은 보이스 메타데이터 편집기(예: 도 6의 보이스 메타데이터 편집기) 및 보이 스 메타데이터 저장소(예: 도 6의 보이스 메타데이터 저장소)를 포함할 수 있다. 일 실시예에 따 르면, 보이스 메타데이터 편집기는 보이스 메타데이터 모듈이 제공하는 다양한 사용자 인터페이스(예: 인 터넷 사이트, 어플리케이션, 프로그램, 및/또는 보이스 메타데이터 편집 툴)를 포함할 수 있다. 일 실시예에 따르면, 1001 동작에서, 사용자(예: 장치 개발자(device developer))는 보이스 메타데이터 편집기에 접속할 수 있다. 예를 들어, 사용자는 보이스 메타데이터 편집기와 관련된 사용자 인터페이스(예: 보이스 메타데이터 편집기의 사이트(site))에 접속할 수 있다. 일 실시예에 따르면, 1003 동작에서, 보이스 메타데이터 편집기는 계정 관리 모듈에 접속할 수 있 다. 일 실시예에 따르면, 계정 관리 모듈은, 사용자의 IoT 장치들을 관리하기 위한 계정을 관리하는 서버일 수 있다. 예를 들어, 보이스 메타데이터 편집기는 계정 관리 모듈에 등록된 사용자 계정에 로그인할 수 있다. 예를 들어, 보이스 메타데이터 편집기는 사용자로부터 입력 받 은 사용자 정보(예: 사용자 계정 정보)를 계정 관리 모듈에 전송할 수 있다. 일 실시예에 따르면, 1005 동작에서, 계정 관리 모듈은 수신한 사용자 정보를 기반으로 사용자의 계정을 인증할 수 있다. 일 실시예에 따르면, 계정 관리 모듈은 사용자의 계정이 인증된 경우, 보 이스 메타데이터 편집기에 인증 토큰(token)(예: IoT 스코프(scope) 인증 토큰)을 전송할 수 있다. 일 실시예에 따르면, 인증 토큰은 사용자의 계정이 관련된 IoT 장치를 제어할 수 있도록 하는 권한을 부여하 기 위한 것일 수 있다. 예를 들어, 사용자는 인증 토큰에 의해 권한을 부여 받은 경우, 보이스 메타데이 터 작성 시 사용자가 소유한 장치(예: IoT 장치) 또는 테스트 장치를 통하여 보이스 메타데이터를 실행 및 테스트할 수 있다. 일 실시예에 따르면, 1007 동작에서, 보이스 메타데이터 편집기는 사용자로부터 장치 정보(예: 장 치의 벤더 ID)를 입력 받을 수 있다. 일 실시예에 따르면, 1009 동작에서, 사용자는 보이스 메타데이터 편집기에 보이스 메타데이터 생 성을 위한 사용자 인텐트 목록을 요청할 수 있다. 일 실시예에 따르면, 사용자 인텐트 목록은 장치 별로 이용 가능한 적어도 하나의 사용자 인텐트들의 정보를 포함할 수 있다. 일 실시예에 따르면, 사용자 인텐트 목록은 장치 정보(예: 장치의 벤더 ID)에 따라 상이할 수 있다. 일 실시예에 따르면, 1011 동작에서, 보이스 메타데이터 편집기는 인텐트 핸들러 모듈(예: 도 6의 인텐트 핸들러 모듈, 도 7의 인텐트 핸들러 모듈, 도 8의 인텐트 핸들러 모듈, 또는 도 9의 인 텐트 핸들러 모듈)에 사용자 인텐트 목록을 요청할 수 있다. 예를 들어, 보이스 메타데이터 편집기(101 0)는 인텐트 핸들러 모듈에 장치 정보와 함께 사용자 인텐트 목록의 요청을 전송할 수 있다. 일 실시예 에 따르면, 인텐트 핸들러 모듈은 장치 별로 이용 가능한 사용자 인텐트들에 대한 정보를 기 저장하고 있 을 수 있다. 일 실시예에 따르면, 인텐트 핸들러 모듈은, 요청에 응답하여, 보이스 메타데이터 편집기 에 장치 정보에 대응하는 사용자 인텐트 목록을 제공할 수 있다. 일 실시예에 따르면, 1013 동작에서, 보이스 메타데이터 편집기는 사용자로부터 지정된 사용자 인 텐트를 선택하는 입력을 수신할 수 있다. 예를 들어, 보이스 메타데이터 편집기는 사용자로부터 사용자 인텐트 목록으로부터 지정된 사용자 인텐트를 선택하는 입력을 수신할 수 있다. 일 실시예에 따르면, 1015 동작에서, 보이스 메타데이터 편집기는 사용자 입력에 기반하여 보이스 메타데 이터를 생성할 수 있다. 예를 들어, 보이스 메타데이터 편집기는 사용자가 선택한 적어도 하나의 사용자 인텐트의 내용을 포함하는 보이스 메타데이터를 생성할 수 있다. 일 실시예에 따르면, 보이스 메타데이 터는 지정된 포맷(예: JSON)의 파일로 생성될 수 있다. 일 실시예에 따르면, 1017 동작에서, 보이스 메타데이터 편집기는 생성한 보이스 메타데이터를 보이스 메 타데이터 저장소에 저장할 수 있다. 다양한 실시예에 따르면, 보이스 메타데이터 모듈(예: 보이스 메타데이터 편집기 및/또는 보이스 메타데 이터 저장소), 계정 관리 모듈, 및 인텐트 핸들러 모듈 중 적어도 일부는 통합된 서버로 구 현될 수 있고, 각각이 별개의 서버 또는 인터페이스로서 구현될 수도 있다. 도 11은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 일 실시예에 따르면, 1110 동작에서, 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서 버 및/또는 서비스 서버, 도 5의 전자 장치, 도 6의 전자 장치)는 외부 전자 장치(예: 사 용자 단말(예: 도 1의 전자 장치, 도 2 내지 4의 사용자 단말, 도 6의 외부 전자 장치, 또는 도 9의 외부 전자 장치)로부터 사용자의 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 전자 장치는 음 성 입력을 자연어 이해 처리하여 사용자 의도(intent)를 인식할 수 있다. 일 실시예에 따르면, 1120 동작에서, 전자 장치는 음성 입력에 기반하여 음성 입력에 관련된 보이스 메타데이터 를 인식할 수 있다. 일 실시예에 따르면, 전자 장치는 타겟 장치(예: 도 6의 타겟 장치)의 정보(예: 타겟 장치의 종류, 타겟 장치의 벤더 ID) 및/또는 사용자 의도에 기반하여 음성 입력에 관련된 보이스 메타데이터를인식할 수 있다. 일 실시예에 따르면, 1130 동작에서, 전자 장치는 보이스 메타데이터에 기반하여 음성 입력에 대응하는 동작 (action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단할 수 있다. 예를 들어, 사용자의 음성 입력이 “TV 채널 10번으로 변경”인 경우, 사용자의 음성 입력에 대응하는 ‘TV 채널을 10번으로 변경하 는 동작’을 수행하기 위해서는 TV의 전원을 켜는 전제 조건이 필요할 수 있다. 다른 예로, 사용자의 음성 입 력이 “에어컨 온도 18도로 낮춰줘”인 경우, 사용자의 음성 입력에 대응하는 ‘에어컨의 온도를 18도로 낮추는 동작’을 수행하기 위해서는 에어컨의 전원을 켜는 전제 조건이 필요할 수 있다. 일 실시예에 따르면, 1140 동작에서, 전자 장치는 전제 조건이 있는 경우(동작 1140 ? ‘Yes’) 1150 동작을 수 행하고, 전제 조건이 없는 경우(동작 1140 ? ‘No’) 1160 동작을 수행할 수 있다. 일 실시예에 따르면, 1150 동작에서, 전자 장치는 보이스 메타데이터에 기반하여 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 타겟 장치는 클라우드 서버에 연결 된 IoT 장치를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 클라우드 서버(예: 도 6의 클라우드 서버 , 또는 도 9의 클라우드 서버)에 타겟 장치가 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전송하고, 클라우드 서버는 타겟 장치에 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전달할 수 있다. 일 실시예에 따르면, 사용자의 음성 입력을 수행하기 위한 전제 조건이 없거나, 또는 사용자의 음성 입력을 수 행하기 위한 전제 조건이 이미 만족된 경우, 전자 장치는 1150 동작을 생략할 수 있다. 일 실시예에 따르면, 1160 동작에서, 전자 장치는 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 전자 장치는 클라우드 서버에 타겟 장치가 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 전송하고, 클라우드 서버는 타겟 장치에 음성 입력에 대응하는 동작을 수행하도 록 하는 명령을 전달할 수 있다. 일 실시예에 따르면, 타겟 장치가 명령에 대응하는 동작(예: 전제 조건에 대응하는 동작 및/또는 음성 입력에 대응하는 동작)을 수행한 경우, 전자 장치는 동작 수행 결과를 외부 전자 장치에 제공할 수 있다. 예를 들어, 전자 장치는 타겟 장치의 동작 수행 결과를 나타내는 응답을 외부 전자 장치에 제공할 수 있다. 본 개시의 일 실시예에 따르면, 사용자의 음성 입력에 대응하는 동작을 수행하기 위하여 전제 조건에 대응하는 동작의 수행이 필요한 경우, 사용자의 추가 입력이 없이도 전제 조건에 대응하는 조건을 수행한 후 음성 입력에 대응하는 동작을 수행하도록 함으로써, 사용자의 의도에 부합하는 서비스를 원활하게 제공할 수 있다. 도 12는 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 이하에서, 도 11의 설명과 중복되는 부분은 생략하거나 간략히 설명한다. 일 실시예에 따르면, 1205 동작에서, 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서 버 및/또는 서비스 서버, 도 5의 전자 장치, 도 6의 전자 장치)는 외부 전자 장치(예: 사 용자 단말(예: 도 1의 전자 장치, 도 2 내지 4의 사용자 단말, 도 6의 외부 전자 장치, 또는 도 9의 외부 전자 장치)로부터 사용자의 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 1210 동작에서, 전자 장치는 음성 입력에 기반하여 음성 입력에 대응하는 동작을 수행할 타겟 장치와 관련된 정보(예: 타겟 장치의 ID, 명칭, VID, 및/또는 종류) 및 사용자 의도를 인식할 수 있다. 예를 들어, 전자 장치는 음성 입력을 자연어 이해 처리하여 타겟 장치와 관련된 정보 및/또는 사용자 의도 (intent)를 인식할 수 있다. 일 실시예에 따르면, 1220 동작에서, 전자 장치는 타겟 장치와 관련된 정보 및/또는 사용자 의도에 기반하여 보 이스 메타데이터를 인식할 수 있다. 예를 들어, 전자 장치는 사용자의 음성 입력에 대응하는 보이스 메타데이 터를 인식할 수 있다. 일 실시예에 따르면, 1225 동작에서, 전자 장치는 보이스 메타데이터에 기반하여 음성 입력에 대응하는 동작 (action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단할 수 있다. 예를 들어, 사용자의 음성 입력이 “TV 채널 12번으로 변경”인 경우, 사용자의 음성 입력에 대응하는 ‘TV 채널을 12번으로 변경하 는 동작’을 수행하기 위해서는 TV의 전원을 켜는 전제 조건이 필요할 수 있다. 일 실시예에 따르면, 1230 동작에서, 전자 장치는 전제 조건이 있는 경우(동작 1230 ? ‘Yes’) 1235 동작을 수 행하고, 전제 조건이 없는 경우(동작 1230 ? ‘No’) 1250 동작을 수행할 수 있다. 일 실시예에 따르면, 1235 동작에서, 전자 장치는 전제 조건과 관련된 타겟 장치의 상태를 확인할 수 있다. 예 를 들어, 전자 장치는 타겟 장치에 전제 조건과 관련된 상태 정보를 요청하고, 타겟 장치로부터 상태 정보를 수 신할 수 있다. 예를 들어, 전자 장치는 타겟 장치가 연결된 클라우드 서버를 통하여 타겟 장치의 상태 정보를 획득할 수 있다. 예를 들어, 전자 장치는 TV 채널을 12번으로 변경하기 위한 전제 조건(예: ‘TV 전원이 켜진 상태’)과 관련하여, 타겟 장치(예: TV)로부터 타겟 장치의 전원 상태에 대한 정보를 획득할 수 있다. 예를 들 어, 전자 장치는 타겟 장치의 전원이 켜져 있는 상태인지 또는 꺼져 있는 상태인지를 나타내는 상태 정보를 획 득할 수 있다. 일 실시예에 따르면, 1240 동작에서, 전자 장치는 타겟 장치의 상태가 전제 조건을 만족하는지 판단할 수 있다. 일 실시예에 따르면, 전자 장치는 타겟 장치의 상태가 전제 조건을 만족하지 않는 경우(동작 1240 ? ‘No’) 1245 동작을 수행하고. 전제 조건을 만족하는 경우(동작 1240 ? ‘Yes’) 1250 동작을 수행할 수 있다. 예를 들어, 전자 장치는 타겟 장치(예: TV)의 상태 정보를 기반으로 TV의 전원이 꺼져 있음을 인식한 경우 전제 조건 을 불만족하는 것으로 판단하여 1245 동작을 수행하고, TV의 전원이 켜져 있음을 인식한 경우 전제 조건을 만족 하는 것으로 판단하여 1250 동작을 수행할 수 있다. 일 실시예에 따르면, 1245 동작에서, 전자 장치는 보이스 메타데이터에 기반하여 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 타겟 장치는 클라우드 서버에 연결 된 IoT 장치를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 클라우드 서버(예: 도 6의 클라우드 서버 , 또는 도 9의 클라우드 서버)에 타겟 장치가 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전송하고, 클라우드 서버는 타겟 장치에 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 전달할 수 있다. 일 실시예에 따르면, 1250 동작에서, 전자 장치는 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치에 전송할 수 있다. 일 실시예에 따르면, 전자 장치는 클라우드 서버에 타겟 장치가 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 전송하고, 클라우드 서버는 타겟 장치에 음성 입력에 대응하는 동작을 수행하도 록 하는 명령을 전달할 수 있다. 일 실시예에 따르면, 타겟 장치가 명령에 대응하는 동작(예: 전제 조건에 대응하는 동작 및/또는 음성 입력에 대응하는 동작)을 수행한 경우, 전자 장치는 동작 수행 결과를 외부 전자 장치에 제공할 수 있다. 예를 들어, 전자 장치는 타겟 장치의 동작 수행 결과를 나타내는 응답을 외부 전자 장치에 제공할 수 있다. 본 개시의 일 실시예에 따르면, 사용자의 음성 입력에 대응하는 동작을 수행하기 위하여 전제 조건에 대응하는 동작의 수행이 필요한 경우, 사용자의 추가 입력이 없이도 전제 조건에 대응하는 조건을 수행한 후 음성 입력에 대응하는 동작을 수행하도록 함으로써, 사용자의 의도에 부합하는 서비스를 원활하게 제공할 수 있다. 도 13a 내지 13g는 일 실시예에 따른 보이스 메타데이터 생성을 위한 사용자 인터페이스의 예시이다. 일 실시 예에 따르면, 사용자 인터페이스는 보이스 메타데이터 편집기(예: 도 6의 보이스 메타데이터 편집기 또는 도 10의 보이스 메타데이터 편집기)를 포함할 수 있다. 일 실시예에 따르면, 보이스 메타데이터 생성을 위한 사용자 인터페이스는 보이스 메타데이터를 생성 및/또는 편집할 수 있는 프로그램, 어플리케이션, 또는 웹 사이트 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 도 13a는 보이스 메타데이터 편집 화면의 일 예시를 나타낸다. 일 실시예에 따르면, 보이스 메타데이터 편집 화면은 보이스 메타데이터 정보를 제공하는 영역, 보이스 캐퍼빌 리티 정보를 제공하는 영역, 보이스 메타데이터를 구성하는데 사용되는 노드들을 제공하는 영역, 및/또는 노드들로 구성된 그래프(graph)를 표시하는 영역을 포함할 수 있다. 도 13b를 참조하면, 보이스 메타데이터 정보를 제공하는 영역은 보이스 메타데이터에 대응하는 장치 명칭 , 장치 제조사 정보, 장치 별칭, 장치(보이스 메타데이터) 버전, 장치 VID, 및 /또는 장치 타입의 정보를 포함할 수 있다. 도 13c를 참조하면, 사용자 인터페이스는 사용 가능한 보이스 캐퍼빌리티 리스트를 제공할 수 있다. 예 를 들어, 사용자 인터페이스는 편집 중인 보이스 메타데이터에 대응하는 장치 정보를 기반으로 해당 장치에서 사용 가능한 보이스 캐퍼빌리티 리스트를 제공할 수 있다. 일 실시예에 따르면, 사용자 인터페이스는 보이스 캐퍼빌리티 정보를 제공하는 영역을 통하여 보이스 캐퍼빌리티 리스트를 제공할 수 있다. 일 실시예에 따르면, 사용자 인텐트는 보이스 캐퍼빌리티 및 보이스 액션을 포함할 수 있다. 예를 들어, 사용자는 보이스 캐퍼빌리티 리스트로부터 편집 중인 보이스 메타데이터에서 사용하려는 사용자 인텐트에 대응하는 보이스 캐퍼빌리티를 선택할 수 있다. 예를 들어, 도 13c는 보이스 캐퍼빌리티 리스트에서 ‘Channel’ 이 선택된 경우를 도시한다. 도 13d를 참고하면, 사용자가 보이스 캐퍼빌리티를 선택한 경우, 사용자 인터페이스는 선택된 보이스 캐퍼빌리 티와 관련된 보이스 액션 리스트를 제공할 수 있다. 일 실시예에 따르면, 보이스 액션 리스트는 선택 박스, 보이스 액션 명칭, 열거(enumeration), 데이터 전송 방식(method), 및/또 는 설명(description)을 포함할 수 있다. 예를 들어, 사용자는 보이스 액션 리스트로부터 편집 중 인 보이스 메타데이터에서 사용하려는 사용자 인텐트에 대응하는 보이스 액션을 선택할 수 있다. 예를 들어, 도 13d는 보이스 액션 리스트에서 ‘set’이 선택된 경우를 도시한다. 예를 들어, 도 13c 및 도 13d를 참조하면, 사용자 입력에 따라 보이스 메타데이터에서 사용하려는 사용자 인텐트로서 ‘Channel-Set’이 선택될 수 있다. 도 13e를 참고하면, 사용자 인터페이스는 설정(선택)된 보이스 인텐트에 기반하여 전제 조건(precondition) 및 장치 제어 로직을 작성하기 위한 화면을 제공할 수 있다. 예를 들어, 사용자 인터페이스(예: 보이스 메 타데이터 편집기)는 노드(node) 그래프(graph) 기반의 드래그 앤 드롭 편집을 지원할 수 있다. 일 실시예에 따 르면, 노드는 보이스 메타데이터를 구성하는 최소의 논리 단위일 수 있다. 예를 들어, 노드는 기능 수행과 관 련된 최소의 논리 단위일 수 있다. 예를 들어, 화면은 사용 가능한 노드들의 리스트, 노드들로 구 성된 그래프를 표시하는 영역, 및/또는 노드 정보를 표시하는 영역을 포함할 수 있다. 예를 들어, 노드 정보를 표시하는 영역은 노드의 속성(attribute), 컴포넌트(component), 캐퍼빌리티(capability), 프로퍼티(property), 및 값 타입(value type) 중 적어도 하나에 대한 정보를 포함할 수 있다. 이하에서, 도 13f 및 13g를 참조하여 그래프를 구성하는 일 예시를 설명한다. 예를 들어, 도 13f 및 13g는 분 기(예: 점선 루트(1371, 1375) 및 실선 루트(1373, 1377))를 포함하는 그래프를 나타낸다. 예를 들어, 도 13f 및 13g에서 점선 루트(1371, 1375)는 장치 상태에 기반하여 노드가 실행되는 루트를 나타내고, 실선 루트(1373, 1377)는 노드가 실행되지 않는 루트를 나타낸다. 예를 들어, 제1 노드는 시작 노드(start node)로서, 사용자의 음성 입력 “채널 11로 설정해줘”에 대응 되는 것으로 설정될 수 있다. 예를 들어, 제2 노드는 장치의 상태를 반환하는 기능을 수행하도록 설정된 노드로서, 예를 들어, TV의 전 원 상태를 반환하도록 설정될 수 있다. 예를 들어, 제2 노드는 TV의 전원이 켜진 상태이면 ‘on’ 값을 반환하고, TV의 전원이 꺼진 상태이면 ‘off’ 값을 반환하도록 설정될 수 있다. 예를 들어, 제7 노드는 제2 노드의 반환 값과 비교하기 위한 상수 값을 설정한 노드일 수 있다. 예를 들 어, 제7 노드는 상수 값으로 ‘on’ 값이 설정된 경우를 가정한다. 예를 들어, 제3 노드는 값을 비교하기 위한 노드로서, 제2 노드의 값과 제7 노드의 값을 비 교하도록 설정될 수 있다. 예를 들어, 제3 노드는 제2 노드의 값과 제7 노드의 값을 비교한 결과에 따라 다음에 실행할 노드를 선택하도록 설정될 수 있다. 예를 들어, 제3 노드는 분기를 결정하는 노드일 수 있다. 예를 들어, 제3 노드는 제2 노드의 값과 제7 노드의 값이 동일한 경우 ‘ true’ 값을 반환하고, 제2 노드의 값과 제7 노드의 값이 상이한 경우 ‘false’ 값을 반환할 수 있다. 예를 들어, 제7 노드가 ‘on’을 나타내는 상수 값을 가지므로, ‘true’값이 반환되는 경우는 TV 의 전원이 on 상태인 것을 나타내고, ‘false’ 값이 반환되는 경우는 TV의 전원이 off 상태인 것을 나타낼 수 있다. 예를 들어, 제3 노드에서 ‘false’ 값이 반환되는 경우 제4 노드의 기능이 실행되고, ‘ true’ 값이 반환되는 경우 제5 노드의 기능이 실행될 수 있다. 예를 들어, 제3 노드는 장치의 상 태 정보가 사용자의 음성 입력에 대응하는 동작을 수행하기 위한 전제 조건을 만족하는지 여부를 판단하도록 설 정될 수 있다. 예를 들어, 제4 노드는 장치의 동작을 수행하도록 설정된 노드로서, 예를 들어, TV의 전원을 켜는 동작을 수행하도록 설정될 수 있다. 예를 들어, 제4 노드는 인텐트 핸들러 모듈(예: 보이스 메타데이터 실행 엔 진)에 의해 보이스 메타데이터가 런타임에서 실행되는 경우, 인텐트 핸들러 모듈(예: 보이스 메타데이터 실행 엔진)이 타겟 장치(TV)(예: 도 6의 타겟 장치)에 TV의 전원을 켜는 동작을 수행하도록 하는 명령을 전송하도록 설정될 수 있다. 예를 들어, 제4 노드는 사용자의 음성 명령에 대응하는 동작을 수행하기 위한 전 제 조건이 있고, 장치의 상태가 전제 조건을 만족하지 못하는 경우에 전제 조건에 대응하는 동작을 먼저 수행하 도록 설정된 노드일 수 있다. 예를 들어, 제5 노드는 장치의 동작을 수행하도록 설정된 노드로서, 예를 들어, TV의 채널을 변경하는 동 작을 수행하도록 설정될 수 있다. 예를 들어, 제5 노드는 인텐트 핸들러 모듈(예: 도 6의 인텐트 핸들러 모듈, 도 7의 인텐트 핸들러 모듈, 도 8의 인텐트 핸들러 모듈, 도 9의 인텐트 핸들러 모듈 , 또는 도 10의 인텐트 핸들러 모듈)(예: 보이스 메타데이터 실행 엔진(예: 도 6의 보이스 메타데이 터 실행 엔진 또는 도 8의 보이스 메타데이터 실행 엔진)에 의해 보이스 메타데이터가 런타임에서 실행되는 경우, 인텐트 핸들러 모듈(예: 보이스 메타데이터 실행 엔진)이 타겟 장치(TV)에 TV의 채널을 변경하 는 동작을 수행하도록 하는 명령을 전송하도록 설정될 수 있다. 예를 들어, 제8 노드는 제5 노드 와 관련하여 장치의 동작을 수행하기 위하여 파라미터 값이 필요한 경우, 파라미터 값을 나타내도록 설정된 노 드일 수 있다. 예를 들어, 제8 노드는 사용자의 음성 입력에 기반하여 파라미터 값인 ‘11’을 반환하도 록 설정될 수 있다. 예를 들어, 제6 노드는 장치의 동작 수행 결과를 제공하도록 설정된 노드를 나타낼 수 있다. 예를 들어, 제6 노드는 해당 노드가 실행될 경우 인텐트 핸들러 모듈(예: 보이스 메타데이터 실행 엔진)이 “네, 채 널 을/를 틀게요”와 같은 음성 응답을 제공하도록 설정될 수 있다. 예를 들어, 도 13f는 TV가 꺼져 있는 경우 점선 루트를 따라 노드가 실행되어 음성 입력에 대응하는 동작 (TV 채널 11로 변경)을 수행 하기 전에 전제 조건에 대응하는 동작(TV 전원 on)을 먼저 수행하도록 설정된 노드 그래프를 나타내고, 도 13g는 TV가 켜져 있는 경우 점선 루트를 따라 노드가 실행되어 전제 조건에 대응 하는 동작(TV 전원 on)을 수행하지 않고 바로 음성 명령에 대응하는 동작(TV 채널 11로 변경)을 수행하도록 설 정된 노드 그래프를 나타낸다. 일 실시예에 따르면, 사용자(예: 장치 개발자 및/또는 장치 제조사)는 사용자 인터페이스(예: 보이스 메타데이 터 편집기)를 통하여 사용자의 음성 입력을 수신한 경우에 대응되는 전제 조건 및/또는 장치의 상태를 인식하고, 이에 기반하여 필요한 경우 음성 입력에 대응하는 동작 수행에 필요한 전제 조건에 대응하는 동작을 먼저 수행하도록 설정된 보이스 메타데이터를 생성 및 편집할 수 있다. 일 실시예에 따르면, 사용자가 생성 또 는 편집한 보이스 메타데이터는 보이스 메타데이터 모듈(예: 도 6의 보이스 메타데이터 모듈)(예: 보이스 메타데이터 저장소(예: 도 6의 보이스 메타데이터 저장소 또는 도 10의 보이스 메타데이터 저장소(104 0))에 저장될 수 있다. 일 실시예에 따르면, 보이스 메타데이터 모듈에 저장된 보이스 메타데이터는 인텐트 핸 들러 모듈의 요청 시 인텐트 핸들러 모듈에 다운로드되고 실행될 수 있다, 도 13e 내지 도 13g에서는 노드들을 포함하는 그래프 형태로 보이스 메타데이터를 작성하는 것을 예시로 설명하 였으나, 다양한 실시예에 따르면 보이스 메타데이터 작성 방식은 이에 한정되지 않는다. 예를 들어, 보이스 메 타데이터는 그래프(graph) 방식에 한정되지 않고, 사용자 인터페이스를 통하여 사용자로부터 입력된 정보(예: 보이스 메타데이터에 포함시킬 사용자 인텐트 관련 정보)를 가공 및/또는 구현하는 다양한 방식으로 작성될 수 있다. 다양한 실시예에 따르면, 도 13a 내지 도 13g에 도시된 바는 보이스 메타데이터를 작성하는 일 예시로서 이에 한정되지 않으며, 사용자 인터페이스의 구체적인 구성 및/또는 배열은 변경될 수 있다. 본 개시의 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서버 및/또는 서비스 서버, 도 5의 전자 장치, 또는 도 6의 전자 장치)의 동작 방법은, 외부 전자 장 치(예: 도 1의 전자 장치, 도 2 내지 도 4의 사용자 단말, 또는 도 6의 외부 전자 장치)로부터 사용자의 음성 입력을 수신하는 동작, 상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터 를 인식하는 동작, 상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위 하여 필요한 전제 조건(precondition)이 있는지 판단하는 동작, 상기 전제 조건이 있는 경우, 상기 보이스 메타 데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치(예: 도 6의 타겟 장치 )에 전송하는 동작, 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송 하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 방법은, 상기 타겟 장치가 상기 음성 입력에 대응하는 동작을 수행한 결과를 상기 외 부 전자 장치에 제공하는 동작을 더 포함할 수 있다. 일 실시예에 따르면, 상기 보이스 메타데이터를 인식하는 동작은, 상기 음성 입력에 기반하여 상기 음성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하는 동작, 및 상기 타겟 장치와 관련된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 타겟 장치와 관련된 정보는 상기 타겟 장치의 벤더 ID(vendor identification, VID), 상기 타겟 장치의 종류, 또는 상기 타겟 장치의 제조사 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 방법은, 상기 전자 장치 및 상기 타겟 장치와 연결된 클라우드 서버(예: 도 1의 서버 , 도 6의 클라우드, 또는 도 9의 클라우드)를 통하여, 상기 전제 조건에 대응하는 동작을 수행 하도록 하는 명령 및/또는 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치로 전송할 수 있다. 일 실시예에 따르면, 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동 작은, 상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하는 동작, 및 상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 사용자 의도는 상기 음성 입력에 대응하는 동작과 관련된 보이스 캐퍼빌리티(voice capability) 정보, 보이스 액션(voice action) 정보, 및 파라미터 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 보이스 메타데이터는 상기 전자 장치와 연결된 외부 전자 장치 각각에 대하여 상기 전자 장치의 메모리에 미리 저장되어 있을 수 있다. 본 개시의 일 실시예에 따른 컴퓨터로 읽을 수 있는 인스트럭션들을 저장하고 있는 기록 매체에 있어서, 상기 인스트럭션들은 전자 장치(예: 도 1의 전자 장치 또는 서버, 도 2의 지능형 서버 및/또는 서비 스 서버, 도 5의 전자 장치, 또는 도 6의 전자 장치)에 의해 실행 시, 상기 전자 장치가: 외부 전자 장치(예: 도 1의 전자 장치, 도 2 내지 도 4의 사용자 단말, 또는 도 6의 외부 전자 장치(61 0))로부터 사용자의 음성 입력을 수신하는 동작, 상기 음성 입력에 기반하여 상기 음성 입력에 관련된 보이스 메타데이터를 인식하는 동작, 상기 보이스 메타데이터에 기반하여 상기 음성 입력에 대응하는 동작(action)을 수행하기 위하여 필요한 전제 조건(precondition)이 있는지 판단하는 동작, 상기 전제 조건이 있는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 타겟 장치(예: 도 6 의 타겟 장치)에 전송하는 동작, 및 상기 음성 입력에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 수행하도록 할 수 있다. 일 실시예에 따르면, 상기 인스트럭션들은 전자 장치에 의해 실행 시, 상기 전자 장치가, 상기 타겟 장치가 상 기 음성 입력에 대응하는 동작을 수행한 결과를 상기 외부 전자 장치에 제공하는 동작을 수행하도록 할 수 있다. 일 실시예에 따르면, 상기 보이스 메타데이터를 인식하는 동작은, 상기 사용자의 음성 입력에 기반하여 상기 음 성 입력에 대응하는 동작을 수행할 타겟 장치 및 사용자 의도(intent)를 인식하는 동작, 및 상기 타겟 장치와 관련된 정보 및 상기 사용자 의도에 기반하여 상기 보이스 메타데이터를 인식하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동 작은, 상기 전제 조건이 있는 경우, 상기 전제 조건과 관련된 상기 타겟 장치의 상태를 확인하는 동작, 및 상기 타겟 장치의 상태가 상기 전제 조건을 불만족하는 경우, 상기 보이스 메타데이터에 기반하여 상기 전제 조건에 대응하는 동작을 수행하도록 하는 명령을 상기 타겟 장치에 전송하는 동작을 포함할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어™)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨 터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같 은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13a 도면13b 도면13c 도면13d 도면13e 도면13f 도면13g"}
{"patent_id": "10-2021-0074859", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치를 나타낸다. 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 3은 일 실시예에 따른, 컨셉과 액션의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 도 4는 일 실시예에 따라, 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 표시하는 사용자 단말을 도시 하는 도면이다. 도 5는 일 실시예에 따른 전자 장치의 블록도이다. 도 6은 일 실시예에 따른 인공지능 어시스턴트 시스템을 나타내는 도면이다. 도 7은 일 실시예에 따른 인텐트 핸들러 모듈의 동작을 설명하기 위한 도면이다. 도 8은 일 실시예에 따른 인텐트 핸들러 모듈의 동작을 설명하기 위한 도면이다 도 9는 일 실시예에 따른 인공지능 어시스턴트 시스템의 동작을 나타내는 흐름도이다. 도 10은 일 실시예에 따른 일 실시예에 따른 보이스 메타데이터를 보이스 메타데이터 서버에 등록하는 동작을 나타내는 흐름도이다. 도 11은 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 도 12는 일 실시예에 따른 전자 장치의 동작 방법의 흐름도이다. 도 13a 내지 13g는 일 실시예에 따른 보이스 메타데이터 생성을 위한 사용자 인터페이스의 예시이다. 도면의 설명과 관련하여, 동일 또는 유사한 구성요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있다."}
