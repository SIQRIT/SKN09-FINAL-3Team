{"patent_id": "10-2023-0100872", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0019828", "출원번호": "10-2023-0100872", "발명의 명칭": "머신러닝을 이용하는 저장 장치 및 그것의 동작 방법", "출원인": "삼성전자주식회사", "발명자": "정기빈"}}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "적어도 하나의 비휘발성 메모리 장치; 및상기 적어도 하나의 비휘발성 메모리 장치를 제어하는 제어기를 포함하고,상기 제어기는 전력 상태별 내부 구성들의 각각의 클록 값을 지시하는 전력 파라미터를 저장하는 파라미터 저장기를 포함하고,상기 전력 파라미터는, 성능, 피크 전력, 및 평균 전력을 고려하여 머신러닝을 수행함으로써 도출된 값인 것을특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서, 상기 내부 구성들의 각각의 전력 상태는 활성(active) 상태, 백그라운드(background) 동작 상태, 아이들(IDLE)상태, 및 슬립(sleep) 상태 중에서 어느 하나인 것을 특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 클록 값은 클록 분주(division) 값, 클록 게이팅(gating) 값, 혹은 클록 기어링(gearing) 값을 이용하여제어되는 것을 특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 머신러닝은 상기 저장 장치의 외부 장치에서 수행되는 것을 특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4 항에 있어서,상기 외부 장치는,상기 저장 장치의 워크로드에 따라 상기 피크 전력 및 상기 평균 전력을 모니터링 하는 전력 모니터;상기 워크로드에 따른 상기 성능, 상기 피크 전력, 및 상기 평균 전력을 수신하고, 상기 성능, 상기 피크 전력,상기 평균 전력이 합성된 하나의 스칼라 값을 도출하는 목적 집계기; 및상기 스칼라 값을 수신하고, 상기 머신러닝을 수행함으로써 상기 전력 파라미터를 도출하는 파라미터 최적화기를 포함하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,공개특허 10-2025-0019828-3-상기 목적 집계기는 아래의 수학식:에 따라 상기 스칼라 값을 결정하는 것을 특징으로 하는 저장 장치,"}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 머신러닝은 상기 저장 장치의 내부에서 수행되는 것을 특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,호스트 장치의 요청에 응답하여 상기 머신러닝을 수행하는 파라미터 최적화 모듈을 포함하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 파라미터 최적화 모듈은,상기 저장 장치의 워크로드에 따라 상기 피크 전력 및 상기 평균 전력을 모니터링 하는 전력 모니터;상기 워크로드에 따른 상기 성능, 상기 피크 전력, 및 상기 평균 전력을 수신하고, 상기 성능, 상기 피크 전력,상기 평균 전력이 합성된 하나의 스칼라 값을 도출하는 목적 집계기; 및상기 스칼라 값을 수신하고, 상기 머신러닝을 수행함으로써 상기 전력 파라미터를 도출하는 파라미터 최적화기를 포함하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 내부 구성들은 제 1 코어와 제 2 코어를 포함하고,상기 제 1 코어가 활성 상태이고, 상기 제 2 코어가 비활성 상태일 때, 상기 제 1 코어의 클록 값은 고정되고,상기 제 2 코어의 값은 상기 전력 파라미터에 따라 가변되는 것을 특징으로 하는 저장 장치."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "저장 장치의 동작 방법에 있어서,머신러닝을 이용하여 전력 파라미터를 설정하는 단계; 및상기 전력 파라미터에 근거로 하여 적어도 하나의 활성/비활성 장치의 주파수를 조절하는 단계를 포함하고,상기 주파수를 조절하는 단계는,상기 주파수에 대응하는 클록을 분주하는 단계;상기 클록을 게이팅하는 단계; 혹은공개특허 10-2025-0019828-4-상기 클록을 기어링하는 단계를 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,외부 장치에서 상기 머신러닝을 이용하여 상기 전력 파라미터를 도출하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 전력 파라미터를 도출하는 단계는,워크로드에 따라 피크 전력 및 평균 전력을 모니터링 하는 단계;상기 워크로드에 따른 성능, 상기 피크 전력, 및 상기 평균 전력이 합성된 하나의 스칼라 값을 도출하는 단계;및상기 머신러닝을 수행함으로써 상기 전력 파라미터를 계산하는 단계를 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 머신러닝은 베이지안 최적화를 이용하는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 11 항에 있어서,호스트 장치의 요청에 응답하여 내부의 파라미터 최적화 모듈에서 상기 머신러닝을 수행하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "저장 장치의 동작 방법에 있어서,호스트 장치로부터 머신러닝 실행 요청을 수신하는 단계;상기 머신러닝 실행 요청에 응답하여 머신러닝을 수행하는 단계; 및상기 머신러닝의 수행 결과에 따른 파라미터를 설정하는 단계를 포함하는,상기 파라미터는 성능, 피크 전력, 및 평균 전력을 고려하여 도출된 값인 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16 항에 있어서,상기 파라미터는 상기 저장 장치의 내부 구성들의 각각의 클록 값을 지시하고,상기 클록 값은 클록 분주(division) 값, 클록 게이팅(gating) 값, 혹은 클록 기어링(gearing) 값을 이용한 조절되는 것을 특징으로 하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 16 항에 있어서,상기 파라미터는 서비스 품질을 결정하는 품질 파라미터들을 지시하고,상기 품질 파라미터들은 프로그램 동작 파라미터, 버퍼 크기, 코어 클록, 펌웨어 정책, 및 성능 마진 중에서 적어도 2 개를 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "공개특허 10-2025-0019828-5-제 16 항에 있어서,제 1 코어 및 제 2 코어의 전력 상태를 판별하는 단계; 및상기 제 1 코어가 활성 상태이고 상기 제 2 코어가 비활성 상태일 때, 상기 제 1 코어의 클록 값을 고정시키고,상기 파라미터에 따라 상기 제 2 코어의 클록 값을 가변시키는 단계를 더 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 16 항에 있어서,상기 저장 장치의 성능 및 소비 전력을 수신하는 단계;워크로드별 상기 성능과 상기 소비 전력이 합성된 하나의 스칼라 값을 도출하는 단계; 및상기 도출된 스칼라 값을 이용하여 머신러닝을 수행하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따른 저장 장치는, 적어도 하나의 비휘발성 메모리 장치, 및 상기 적어도 하나의 비휘발성 메모리 장 치를 제어하는 제어기를 포함하고, 상기 제어기는 전력 상태별 내부 구성들의 각각의 클록 값을 지시하는 전력 파라미터를 저장하는 파라미터 저장기를 포함하고, 상기 전력 파라미터는, 성능, 피크 전력, 및 평균 전력을 고 려하여 머신러닝을 수행함으로써 도출된 값인 것을 특징으로 한다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 머신러닝을 이용하는 저장 장치 및 그것의 동작 방법에 관한 것이다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 저장 장치의 경우, 전력 사용량을 최소화하면서도 성능을 유지하거나 향상시키는 것이 중요한 과제 이다. 머신러닝(machine learning)은 이러한 과제를 해결하는 데 도움이 될 수 있다. 머신러닝 알고리즘은 I/O(Input/Output) 요청의 패턴을 학습하고 예측하는 데 사용될 수 있다. 예를 들어, 사용자의 동작이나 어플리 케이션의 동작 패턴을 학습하여 미래의 I/O 요청을 예측할 수 있다. 이러한 예측은 불필요한 전력 소비를 줄이 는데 사용될 수 있다. 예를 들어, 머신러닝 알고리즘은 I/O 요청이 적은 시간을 파악하고, 이러한 시간 동안 저 장 장치를 저전력 모드로 전환할 수 있다. 또한, 머신러닝은 데이터 배치 및 프로비저닝 전략을 최적화하는 데 도 사용될 수 있다. 알고리즘은 데이터의 액세스 패턴을 학습하여 자주 액세스되는 데이터를 저장 장치의 효율 적인 영역에 배치하고, 자주 액세스되지 않는 데이터를 덜 효율적인 영역에 배치함으로써 전력 소비를 줄일 수 있다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 전력 효율을 개선하는 저장 장치 및 그것의 동작 방법을 제공하는데 있다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시 예에 따른 저장 장치는, 적어도 하나의 비휘발성 메모리 장치; 및 상기 적어도 하나의 비휘발성 메모리 장치를 제어하는 제어기를 포함하고, 상기 제어기는 전력 상태별 내부 구성들의 각각의 클록 값을 지시 하는 전력 파라미터를 저장하는 파라미터 저장기를 포함하고, 상기 전력 파라미터는, 성능, 피크 전력, 및 평균 전력을 고려하여 머신러닝을 수행함으로써 도출된 값인 것을 특징으로 한다. 본 발명의 실시 예에 따른 저장 장치의 동작 방법은, 머신러닝을 이용하여 전력 파라미터를 설정하는 단계; 및 상기 전력 파라미터에 근거로 하여 적어도 하나의 활성/비활성 장치의 주파수를 조절하는 단계를 포함하고, 상 기 주파수를 조절하는 단계는, 상기 주파수에 대응하는 클록을 분주하는 단계; 상기 클록을 게이팅하는 단계; 혹은 상기 클록을 기어링하는 단계를 포함할 수 있다. 본 발명의 다른 실시 예에 따른 저장 장치의 동작 방법은, 호스트 장치로부터 머신러닝 실행 요청을 수신하는 단계; 상기 머신러닝 실행 요청에 응답하여 머신러닝을 수행하는 단계; 및 상기 머신러닝의 수행 결과에 따른 파라미터를 설정하는 단계를 포함하는, 상기 파라미터는 성능, 피크 전력, 및 평균 전력을 고려하여 도출된 값 인 것을 특징으로 한다.본 발명의 다른 실시 예에 따른 저장 장치는, 적어도 하나의 비휘발성 메모리 장치; 및 상기 적어도 하나의 비 휘발성 메모리 장치를 제어하는 제어기를 포함하고, 상기 제어기는, 머신러닝을 수행하여 내부 구성들의 각각의 클록 값을 지시하는 전력 파라미터를 도출하는 인공지능 프로세서; 및 상기 전력 파라미터를 저장하는 파라미터 저장기를 포함할 수 있다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따른 저장 장치 및 그것의 동작 방법은, 머신러닝을 이용하여 전력 효율을 최적화할 수 있 다. 본 발명의 실시 예에 따른 저장 장치 및 그것의 동작 방법은, 클록 튜닝 과정에서 낭비되는 개발 인력을 절감할 수 있다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 도면들을 이용하여 본 발명의 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시 할 수 있을 정"}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "도로 본 발명의 내용을 명확하고 상세하게 기재할 것이다. 본 발명의 실시 예에 따른 저장 장치 및 그것의 동작 방법은, 머신러닝(machine learning)을 이용하여 전력 효 율을 개선할 수 있다. 본 발명의 저장 장치 및 방법은 성능과 소비 전력 간의 트레이드-오프(trade-off)를 고려 하여 성능 요구 사항을 충족하면서 소비전력을 최소화하도록 클럭을 최적화할 수 있다. 본 발명은 전력 관련 파라미터 값을 결정하는 머신러닝 모듈과 성능과 소비 전력을 입력으로 읽어, 합성된 하나의 스케일러(scalar) 값을 도출하는 집계기(aggregator)로 구현될 수 있다. 본 발명의 저장 장치 및 방법은. 파라미터 최적화에 낭비되는 휴먼 리소스(human resource)를 감소시키고, 성능 요구사항을 충족하며 소비전력 최소화 시킬 수 있다. 본 발명의 저장 장치 및 동작 방법은 머신러닝 모델을 이용하여 성능/전력 간의 트레이드-오프를 고려하여 클럭을 결정하고, 장치별 클럭을 다르게 설정할 수 있다. 일반적으로, 코어(core), 버스(bus), NAND 플래시 메모리와 같은 내부 장치들의 클록 값들에 따라 저장 장치의 전력 효율은 매우 달라진다. 클록 값의 변화에 따라 성능과 소비 전력이 크게 달라지고, 성능이 증가할수록 소 비 전력 역시 증가한다. 특히, 각 장치의 클록 조합에 따라 피크 전력(peak power)과 평균 전력(average powe r)가 크게 바뀐다. 클록 값의 결정에 따라 성능과 소비 전력이 크게 좌우되기 때문에, 성능과 소비 전력 간의 존재하는 트레이드-오프로 인하여, 성능 요구사항을 만족하며 소비 전력을 낮추는 것은 쉽지 않다. 또한, 서로 다른 워크로드(workload) 사이에도 트레이드-오프가 존재한다. 특정 워크로드에서 병목이 아닌 장치의 클록을 낮출 경우, 워크로드에서 저장 장치의 소비 전력은 낮아진다. 하지만, 해당 장치가 다른 워크로드에서 병목인 경우에 장치의 클록을 낮출 경우, 저장 장치의 성능이 저하될 수 있다. 본 발명은 머신러닝, 예를 들어, 베이지안 최적화(Bayesian Optimization)를 이용하여 트레이드-오프를 고려하 여 자동으로 장치별 클록의 최적 값을 결정할 수 있다. 이로써, 본 발명은 저장 장치의 전력 효율을 극대화하고, 클록 튜닝 과정에서 낭비되는 개발 인력을 절감할 수 있다. 도 1a은 본 발명의 실시 예에 따른 저장 장치(10; SSD)의 전력 효율 개선 과정을 개념적으로 보여주는 도면이다. 도 1a에 도시된 바와 같이 저장 장치의 외부에서 베이지안 최적화를 이용하여 트레이드-오프를 고려하여, 성능 요구사항을 충족하며 소비전력을 최소화하는 최적 클록 값이 결정될 수 있다. 저장 장치의 파라미터를 결정하는 과정은 다음과 같다. 초기에는 클록 값을 랜덤하게 결정하고, 결정된 클 록 값에 대응하는 파라미터가 저장 장치에 적용된다. 이후에, 저장 장치는 워크로드을 반복적으로 수행할 수 있다. 전력 모니터는 저장 장치의 소비전력을 실측할 수 있다. 목적 집계기(objective aggregator; 23)는 실측된 저장 장치의 처리량(throughput) 성능, 전력(평균 전력 혹은 피크 전력)을 수집 할 수 있다. 목적 집계기(objective aggregator;23)는 목적 함수를 포함할 수 있다. 여기서 목적 함수는 처리량 (throughput), 피크 전력(peak power), 평균 전력(average power)과 같은 복수의 목적들(objectives)로 구성될 수 있다. Multi-objective 베이지안 최적화를 이용하여 최적화를 수행하는 경우, multi-objectives를 집계 (aggregation) 할 필요는 없다. 하지만, Single-objective 베이지안 최적화를 이용하여 최적화를 수행하는 경우, 다수의 목적들을 하나의 스칼라(scalar) 값으로 수집할 필요가 있다. 즉, single-objective optimization은 성능 및 소비전력 수치를 직접적으로 사용하는 것이 아니라, 이들을 집계한 스칼라 값을 관찰하 며 파라미터를 최적화한다. 실시 예에 있어서, 전력 파라미터는 저장 장치의 내부 구성들의 각각의 전력 상태는 활성 상태, 백그라운드 동작 상태, 아이들(IDLE) 상태, 및 슬립 상태 중에서 어느 하나, 내부 구성들의 각각의 클록 값을 지시할 수 있 다. 여기서, 클록 값은 클록 분주(division) 값, 클록 게이팅(gating) 값, 혹은 클록 기어링(gearing) 값을 이 용하여 조절될 수 있다. 본 발명의 실시 예에 따른 파라미터 최적화 과정은 저장 장치의 전력을 최적화하는데 특화된 목적 집계기 를 사용할 수 있다. 아래의 수식은 본 발명의 목적 집계기에서 하나의 스칼라 값(f(clocks);ε)를 도출 하는 것을 나타낸다.수학식 1"}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "목적 집계기는 시방서(specification)을 고려하여 목적들(objectives) 사이의 우선권(priority)를 정의하 고, 목적들 사이의 트레이드-오프를 최소화하는 방식으로 복수의 목적들을 집계하고, 집계된 목적들을 이용하여 하나의 스칼라 값(ε)을 도출할 수 있다. 파라미터 최적화기는 실측한 수집 데이터에 대하여 베이지안 최적화를 이용하여 파라미터 값을 결정할 수 있다. 랜덤하게 결정된 클록 값과 이를 적용할 때의 성능/전력 값을 데이터로 축적하면, 베이지안 최적화의 서 로게이트 모델(surrogate model)은 클록의 입력에 따른 성능과 전력을 도출하는 목적 함수(objective function)를 예측할 수 있다. 파라미터 최적화기는 예측한 목적 함수에서 성능 요구사항을 만족하면서, 소 비전력을 최소화할 것으로 예상되는 클럭 값에 대응하는 파라미터들을 결정할 수 있다. 이렇게 결정된 파라미터 들은 저장 장치에 설정될 수 있다. 예를 들어, 저장 장치의 파라미터 저장기(10-1; PRMT)는 설정된 파 라미터들을 저장할 수 있다. 여기서 파라미터 저장기(10-1)는 비휘발성 메모리 혹은 휘발성 메모리로 구현될 수 있다. 이후에, 다시 밴치마크(benchmark) 워크로드를 수행함으로써, 저장 장치의 성능/전력 값이 관찰될 수 있다. 도 1b는 본 발명의 실시 예에 따른 파라미터 최적화기을 예시적으로 보여주는 도면이다. 도 1b를 참조하면, 파라미터 최적화기는 서로게이트 모델(24-1) 및 획득 함수(24-2)를 포함할 수 있다. 아래에서는 파라미터 최적화기가 베이지안 최적화를 이용한다고 하겠다. 본 발명의 파라미터 최적화기는 다음의 과정을 거쳐 서 목적 함수에서 최적 클록을 결정할 수 있다. 사전에 정의한 클록 값의 상한과 하한을 기준으로 n개 클록들이 랜덤 샘플링 될 수 있다. 서로게이트 모델(24-1)은 랜덤 샘플링한 클록들의 목적 함수 값(성능/전력)의 예측 값 과 표준편차 값을 도출할 수 있다. 획득 함수(24-2)는 예측 값과 표준편차에 근거하여 최적 클록 값을 결정할 수 있다. 예측 값의 소비전력이 낮을수록, 표준편차(불확실성)이 클수록 최적의 클록 값으로 결정될 수 있다. 새롭게 추가되는 데이터는 기존 데이터에 축적될 수 있다. 데이터가 업데이트 되면, 서로게이트 모델(24-1)은 다시 목적함수를 예측하고, 다시 최적 클록 값을 결정할 수 있다. 이러한 과정을 반복할수록 데이터가 증가함으 로써 목적 함수에 대한 예측 정확도가 높아질 수 있다. 점차적으로 최적 클록이 발견될 가능성이 높아진다. 한편, 저장 장치의 도메인에서 최적 파라미터는 고객의 시방서를 만족하는 파라미터들의 집합으로 정의할 수 있다. 실시 예에 있어서, Multi-objective 베이지안 최적화의 경우, 파라미터 최적화기는 목적들 사이의 우선권을 정의하지 않고 단순히 파레토 프론트(pareto front)를 찾을 수 있다. 여기서 파레토 프론트(pareto front)는 최적화된 솔루션 중에서 한 목적 함수의 값을 개선하기 위해 다른 목적 함수의 값을 희생해야 하는 경 우, 어떤 솔루션이 더 우수한지 비교할 수 있다. 파레토 프론트는 여러 개의 솔루션으로 이루어진 집합이다. 이 러한 솔루션들은 어떠한 솔루션도 더 개선되지 않는 상태로 각각의 목적 함수를 최대 또는 최소로 만족시키는 최적해를 갖는다. 다른 실시 예에 있어서, 파라미터 최적화기는 목적 집계기를 이용하여 목적들 사이의 우선권을 정의하고, 시방서 측면에서 최적 파라미터를 정의할 수 있다. 도 2는 본 발명의 실시 예에 따른 저장 장치를 예시적으로 보여주는 도면이다. 도 2를 참조하면, 저장 장치 는 적어도 하나의 비휘발성 메모리 장치(NVM(s); 100) 및 제어기(CTRL; 200)를 포함할 수 있다. 적어도 하나의 비휘발성 메모리 장치는 데이터를 저장하도록 구현될 수 있다. 비휘발성 메모리 장치 는 낸드 플래시 메모리(NAND flash memory), 수직형 낸드 플래시 메모리, 노아 플래시 메모리(NOR flashmemory), 저항성 램(resistive random access memory; RRAM), 상변화 메모리(phase-change memory; PRAM), 자 기저항 메모리(magnetoresistive random access memory; MRAM), 강유전체 메모리(ferroelectric random access memory; FRAM), 스핀주입 자화반전 메모리(spin transfer torque random access memory; STT-RAM) 등이 될 수 있다. 또한, 비휘발성 메모리 장치는 3차원 어레이 구조(three-dimensional array structure)로 구현될 수 있다. 또한, 비휘발성 메모리 장치는 복수의 메모리 블록들(BLK1 ~ BLKz, z는 2 이상의 정수)을 포함하도록 구현 될 수 있다. 복수의 메모리 블록들(BLK1 ~ BLKz)의 각각은, 복수의 페이지들(Page 1 ~ Page m, m은 2 이상의 정수)를 포함할 수 있다. 복수의 페이지들(Page 1 ~ Page m)의 각각은, 복수의 메모리 셀들을 포함할 수 있다. 복수의 메모리 셀들의 각각은 적어도 하나의 비트를 저장할 수 있다. 비휘발성 메모리 장치는 제어기 (CTRL; 200)로부터 커맨드 및 어드레스를 수신하고, 수신된 커맨드에 대응하는 동작(프로그램 동작, 리드 동작, 이레이즈 동작 등)을 어드레스에 대응하는 메모리 셀들에 수행하도록 구현될 수 있다. 제어기(CTRL; 200)는 제어 신호들(예를 들어, ALE, CE(s), WE, RE, 등)을 전송하는 복수의 제어 핀들을 통하여 적어도 하나의 비휘발성 메모리 장치에 연결될 수 있다. 또한, 제어 신호들(CE(s), WE, RE 등)을 이용하여 비휘발성 메모리 장치를 제어하도록 구현될 수 있다. 예를 들어, 리드 동작시 칩 인에이블 신호(CE)는 활 성화 되고, CLE는 커맨드의 전송 구간에 활성화 되고, ALE는 어드레스의 전송 구간에 활성화 되고, RE는 데이터 신호 라인(DQ)을 통해 데이터가 전송되는 구간에서 토글링 될 수 있다. 데이터 스트로브 신호(DQS)는 데이터 입 출력 속도에 대응하는 주파수로 토글링 할 수 있다. 리드 데이터는 데이터 스트로브 신호(DQS)에 동기화되어 순 차적으로 전송될 수 있다. 또한, 제어기는 파라미터 저장기(201; PRMT), 적어도 하나의 프로세서(CPU(Central Processing Unit)(s); 210), 버퍼 메모리, 및 에러 정정 회로(230; ECC)를 포함할 수 있다. 파라미터 저장기는 저장 장치의 최적의 성능/전력을 위한 파라미터를 저장할 수 있다. 여기서 파라미 터는 저장 장치의 출고시 혹은 저장 장치의 턴-온시 외부로부터 입력될 수 있다. 실시 예에 있어서, 파라미 터는 도 1에 도시된 파라미터 최적화기로부터 입력될 수 있다. 이러한 파라미터에 따라 저장 장치의 내 부 구성들 각각의 클록 값이 결정될 수 있다. 프로세서는 저장 장치의 전반적인 동작을 제어하도록 구현될 수 있다. 프로세서는 캐시/버퍼 관 리, 펌웨어 관리, 가비지 컬렉션 관리, 웨어 레벨링 관리, 데이터 중복 제거 관리, 리드 리프레쉬/리클레임 관 리, 배드 블록 관리, 멀티-스트림 관리, 호스트 데이터와 비휘발성 메모리의 맵핑 관리, QoS(Quality of Service) 관리, 시스템 리소스 할당 관리, 비휘발성 메모리 큐(queue) 관리, 리드 레벨 관리, 이레이즈/프로그 램 관리, 핫/콜드 데이터 관리, 전력 손실 보호 관리, 동적 열관리, 초기화 관리, RAID(Redundant Array of Inexpensive Disk) 관리 등과 같은 다양한 관리 동작들을 수행할 수 있다. 버퍼 메모리는 휘발성 메모리(예를 들어, SRAM(Static Random Access Memory), DRAM(Dynamic RAM), SDRAM(Synchronous RAM) 등) 혹은 비휘발성 메모리 (플래시 메모리, PRAM(Phase-change RAM), MRAM(Magneto- resistive RAM), ReRAM(Resistive RAM), FRAM(Ferro-electric RAM) 등)로 구현될 수 있다. 에러 정정 회로는 프로그램 동작시 에러 정정 코드(error correction code; ECC)를 생성하고, 리드 동작시 에러 정정 코드를 이용하여 데이터를 복구하도록 구현될 수 있다. 즉, 에러 정정 회로는 비휘발성 메모리 장치로부터 수신된 데이터의 페일 비트 혹은 에러 비트를 정정하기 위한 에러 정정 코드를 생성할 수 있다. 또한, 에러 정정 회로는 비휘발성 메모리 장치로 제공되는 데이터의 에러 정정 인코딩을 수행 함으로써, 패리티 비트가 부가된 데이터를 형성할 수 있다. 패리티 비트는 비휘발성 메모리 장치에 저장 될 수 있다. 또한, 에러 정정 회로는 비휘발성 메모리 장치로부터 출력된 데이터에 대하여 에러 정정 디코딩을 수행할 수 있다. 에러 정정 회로는 패리티를 사용하여 에러를 정정할 수 있다. 에러 정정 회로 는 LDPC(Low Density Parity Check) code, BCH code, turbo code, 리드-솔로몬 코드(Reed-Solomon code), convolution code, RSC(Recursive Systematic Code), TCM(Trellis-Coded Modulation), BCM(Block Coded Modulation) 등의 코디드 모듈레이션(coded modulation)을 사용하여 에러를 정정할 수 있다. 한편, 에러 정정 회로에서 에러 정정이 불가능할 때, 리드 리트라이(read retry) 동작이 수행될 수 있다. 본 발명의 실시 예에 따른 저장 장치는 파라미터 저장기에 저장된 파라미터를 이용하여 전력 상태에 따라 워크로드별 최적의 클록 값으로 구동함으로써, 전력 효율을 향상시킬 수 있다. 예를 들어, 저장 장치 는 파라미터를 이용하여 ACG(Adaptive Clock Gearing)을 실행할 수 있다. 여기서 ACG는 클록을 동적으로 조절함으로써 성능을 최적화하거나 전력 소비를 줄이다. 도 3은 도 2에 도시된 비휘발성 메모리 장치를 예시적으로 보여주는 도면이다. 도 3를 참조하면, 비휘발성 메모리 장치는 메모리 셀 어레이, 로우 디코더, 페이지 버퍼 회로, 입출력 버퍼 회로 , 제어 로직, 전압 발생기, 및 셀 카운터를 포함할 수 있다. 메모리 셀 어레이는 워드라인들(WLs) 혹은 선택 라인들(SSL, GSL)을 통해 로우 디코더에 연결될 수 있다. 메모리 셀 어레이는 비트라인들(BLs)을 통해서 페이지 버퍼 회로에 연결될 수 있다. 메모리 셀 어레이는 복수의 셀 스트링들(cell strings)을 포함할 수 있다. 셀 스트링들의 각각의 채널은 수직 혹은 수평 방향으로 형성될 수 있다. 셀 스트링들의 각각은 복수의 메모리 셀들을 포함할 수 있다. 여기서, 복수의 메모리 셀들은 비트라인(BLs)이나, 워드라인(WLs)으로 제공되는 전압에 의해서 프로그램 되거나, 이레이즈 되거 나, 읽혀질 수 있다. 일반적으로, 프로그램 동작은 페이지 단위로 수행되고, 이레이즈 동작은 블록단위로 수행 되고 있다. 메모리 셀에 대한 자세한 것은, 미국 등록 특허 US 7,679,133, US 8,553,466, US 8,654,587, US 8,559,235, 및 US 9,536,970에 설명될 것이다. 실시 예에 있어서, 메모리 셀 어레이는 3차원 메모리 셀 어 레이를 포함할 수 있고, 3차원 메모리 셀 어레이는 행 방향 및 열 방향을 따라 배치된 복수의 낸드 스트링들을 포함할 수 있다. 로우 디코더는 어드레스(ADD)에 응답하여 메모리 셀 어레이의 메모리 블록들(BLK1 ~ BLKz) 중 어느 하나를 선택하도록 구현될 수 있다. 로우 디코더는 어드레스(ADD)에 응답하여 선택된 메모리 블록의 워드 라인들 중 어느 하나를 선택할 수 있다. 로우 디코더는 선택된 메모리 블록의 워드라인에 동작 모드에 대 응하는 워드라인 전압(VWL)을 전달할 수 있다. 프로그램 동작시 로우 디코더는 선택 워드라인에 프로그램 전압과 검증 전압을 인가하고, 비선택 워드라인에 패스 전압을 인가할 수 있다. 리드 동작시 로우 디코더 는 선택 워드라인에 리드 전압을 인가하고, 비선택 워드라인에 리드 패스 전압을 인가할 수 있다. 페이지 버퍼 회로는 쓰기 드라이버로 혹은 감지 증폭기로 동작하도록 구현될 수 있다. 프로그램 동작시, 페이지 버퍼 회로는 메모리 셀 어레이의 비트라인들로 프로그램 될 데이터에 대응하는 비트라인 전압 을 인가할 수 있다. 리드 동작 혹은 검증 리드 동작시, 페이지 버퍼 회로는 선택된 메모리 셀에 저장된 데 이터를 비트라인(BL)을 통해서 감지할 수 있다. 페이지 버퍼 회로에 포함되는 복수의 페이지 버퍼들(PB1 ~ PBn, n은 2 이상의 정수)의 각각은 적어도 하나의 비트라인에 연결될 수 있다. 입출력 버퍼 회로는 외부에서 제공되는 데이터를 페이지 버퍼 회로로 제공한다. 입출력 버퍼 회로 는 외부에서 제공되는 커맨드(CMD)는 제어 로직에 제공할 수 있다. 입출력 버퍼 회로는 외부에 서 제공된 어드레스(ADD)를 제어 로직이나 로우 디코더에 제공할 수 있다. 또한, 입출력 버퍼 회로 는 페이지 버퍼 회로에 의해서 센싱 및 래치된 데이터를 외부로 출력할 수 있다. 제어 로직은 외부(제어기, 도 1 참조)로부터 전달되는 커맨드(CMD)에 응답하여 로우 디코더 및 페이지 버퍼 회로를 제어하도록 구현될 수 있다. 전압 발생기는 제어 로직의 제어에 따라 각각 의 워드라인들로 인가될 다양한 종류의 워드라인 전압들, 메모리 셀들이 형성된 벌크(예를 들어, 웰 영역)로 공 급될 웰 전압을 생성하도록 구현될 수 있다. 각각의 워드라인들로 인가되는 워드라인 전압들은, 프로그램 전압, 패스 전압, 리드 전압, 리드 패스 전압들 등을 포함할 수 있다. 셀 카운터는 페이지 버퍼 회로에 센 싱된 데이터로부터 특정 문턱 전압 범위에 해당하는 메모리 셀들을 카운트하도록 구현될 수 있다. 예를 들어, 셀 카운터는 복수의 페이지 버퍼들(PB1 ~ PBn) 각각에 센싱된 데이터를 처리함으로써, 특정 문턱 전압 범 위의 문턱 전압을 갖는 메모리 셀들의 수를 카운트할 수 있다. 도 4는 일반적으로 업체별 클록을 튜닝하는 과정을 예시적으로 보여주는 도면이다. 개발자는 통상적으로 워크로 드의 종류, 예를 들어, 연속 쓰기, 연속 읽기, 랜덤 쓰기, 랜덤 읽기에 따라 각 구성들의 전력 소비를 매뉴얼로 조정할 수 있다. 업체의 요구사항에 따라 성능, 평균 전력, 피크 전력의 트레이드-오프를 통하여, 개발자는 전 력 상태별 클록을 수작업으로 튜닝함으로써 최적의 클록 값을 찾는다. 도 5a 및 도 5b는 서로 다른 업체의 요구사항에 따른 최적화 과정을 예시적으로 보여주는 도면들이다. 도 5a를 참조하면, 업체 요구사항은 전력/성능에 관한 것으로 클록 최적화를 달성하는데 있다. 클록 인자는 구성들의 각 각의 클록 값의 퍼센트로 구성될 수 있다. 도 5b를 참조하면, 업체 요구사항은 성능/QoS/기능에 관하여 QoS 최 적화를 달성하는데 있다. QoS 영향 인자는 프로그램, 버퍼 크기, 코어 클록, 펌웨어 정책, 성능 마진으로 구성 될 수 있다. 일반적으로 저장 장치는 표 1과 같이 전력 상태를 지원할 수 있다. 표 1을 참조하면, 전력 상태는 활성 상태, 백그라운드 동작 상태, 아이들 상태, 슬립 상태를 포함한다. 표 1 Power State Description Active Device가 Command를 처리하는 State BackgroundCommand는 없으나 내부 Background 작업을 처리하는 단계 Idle 단계 Low Power Mode. 내부 구현은 주로 DFS 방식을 사용하기 때문에 DFS 라고도 한다. Sleep 2단계 Low Power Mode. 주요 모듈을 Off하는 DPM을 사용하고 있으며 H/W 관점에서 는 PG(Power Gating)라고도 이야기 한다. 표 2을 참조하면, 전력 상태 디스크립터는 non-operation state 여부 외에도 max power, entry latency, exit latency 등의 다양한 정보를 포함한다. 호스트 소프트웨어는 이러한 정보를 참고하여 전력 관리를 수행한다. PS0, PS1, PS2는 operational 전력 상태이며 I/O 커맨드를 처리하는 상태이지만, 뒤로 갈 수록 낮은 속도로 커 맨드를 처리한다. PS3, PS4는 non-operational 전력 상태로 I/O 커맨드를 처리하지 않는 low power mode이며, PS3의 경우 device 전력 상태의 idle과 대응하고 PS4의 경우 device 전력 상태의 sleep과 대응될 수 있다. 표 2 Power State Max PowerEntry LatencyExit LatencyNon-Operational State PS0 6W 0us 0us No PS1 5.0W 0us 0us No PS2 3.6W 0us 0us No PS3 40mW 210us 1500us Yes PS4 5mW 2200us 6000us Yes 도 6은 본 발명의 실시 예에 따른 저장 장치의 전력 상태 천이를 예시적으로 보여주는 도면이다. 전력 상태 디 스크립터의 NOPS(non-operation state)가 1로 설정될 경우, 해당 전력 상태가 non-operational 전력 상태라는 뜻이다. 따라서 해당 전력 상태에서는 I/O 커맨드가 처리 되지 않는다. 호스트 장치는 non-operational 전력 상 태로 천이하기 위해 set feature command를 발행하기 전에 pending된 I/O 커맨드가 없을 때까지 기다려야 한다. 이때, 호스트 장치는 새로운 I/O 커맨드를 발행하면 안된다. Non-operational 전력 상태인 경우, I/O submission queue tail doorbell이 write될 때 제어기는 가장 최근의 operational 전력 상태로 전환해야 한다. 전력 상태는 호스트 장치가 요청한 set feature command 혹은 APST (Autonomous Power State Transitions) 에 의해 천이 될 수 있다. APST란 NVMe 시방서에서 호스트 장치가 설정한 바에 따라 일정 시간 device가 idle 상태인 경우, 호스트 소프트웨어의 개입 없이 자동으로 non-operational 전력 상태로 상태 천이하는 feature이 다. APST data structure에는 각 전력 상태에서 non-operational 전력 상태로의 천이 조건(ITPS, ITPT)을 명세 하고 있다. Idle Time Prior to Transition(ITPT)는 전력 상태를 전환하기 위한 필요 idle time을 의미한다. Idle Transition 전력 상태(ITPS)는 해당 전력 상태에서 idle time이 ITPT를 초과할 경우 전환될 전력 상태를 나타낸다. APST가 활성화한 경우, 현재 전력 상태에서 ITPT 시간동안 idle 상태라면 자동으로 ITPS에 명시된 전 력 상태로 천이 해야 한다. 호스트 장치는 set feature command를 이용하여 ITPS와 ITPT를 변경할 수 있다. 표 3는 APST 데이터 구조 테이블을 예시적으로 보여주는 도면이다. 표 3 Power State Idle Time Prior to Transition(ITPT) Idle Transition Power State(ITPS) PS0 60ms PS3 PS1 60ms PS3 PS2 60ms PS3 PS3 9940ms PS4 PS4 0 0 한편, 본 발명의 실시 예에 따른 저장 장치는 파라미터가 지시하는 클록 분주(clock division), 클록 게이 팅(clock gating), 혹은 클록 기어링(clock gearing)에 의해 내부 구성들의 각각의 클록을 조절할 수 있다. 도 7a는 본 발명의 실시 예에 따른 저장 장치의 클록 분주(clock division)를 예시적으로 보여주는 도면이 다. 클록 분주는 클록을 나눈다는 의미이다. 내부 구성의 클록을 2의 제곱 단위로 나누어 적용하여 클록을 낮 춤으로써 전력 소비이 줄어들 수 있다. 클록 분주의 경우, 도 7a에 도시된 바와 같이, 2의 제곱 단위로 나누어 적용될 수 있다. 도 7b는 본 발명의 실시 예에 따른 저장 장치의 클록 게이팅(clock gating)을 예시적으로 보여주는 도면이 다. 도 7b를 참조하면, 클록 게이팅은 클록을 공급하는 게이트를 통제함으로써 전력 소비를 낮출 수 있다. 클 록 게이팅 기법은 클록을 제공하거나 차단하기 위한 부가적인 논리 회로가 필요하다. 특정 회로의 동작이 필요 하지 않는 경우 특정 회로에 클록을 공급하지 않음으로써 전력 소비가 줄어들 수 있다. 다만, 클록 게이팅을 사 용하기 위해서 CPU 내부 혹은 SoC(System-on-Chip)가 구조적으로 클록 게이팅을 지원해야 한다. 도 8은 본 발명의 실시 예에 따른 저장 장치의 클록 기어링(clock gearing)을 예시적으로 보여주는 도면이 다. 클록 기어링은 전력 소비를 줄이기 위하여 일부 펄스를 고의적으로 누락시킴으로써 클록을 낮출 수 있다. 클록 기어링은 클록 분주 및 클록 게이팅 보다 세밀할 클록 조절을 가능케 한다. 구현 방식은 클록 기어링을 제어하는 제어기에 따라 다르다. 제어기에서, 클록 분주는 클록 주파수를 낮추기 위하여 입력 단에서 2n-1개의 클록 사이클이 출력단의 1개의 엣지(Edge)를 구성한다. 반면에, 클록 기어링은 클록 주파수를 낮추기 위하여 입 력 단에서 들어온 클록 펄스 중 일부를 누락시킨다. 도 8에 도시된 바와 같이, 같은 50%라 할지라도 결과로 출 력되는 파형과 시점은 클록 분주 보다 클록 기어링 사용 경우가 다르다. 표 4는 본 발명의 실시 예에 따른 저장 장치의 클록 기어링을 예시적으로 보여주는 도면이다. 제어기 마다 적용되는 클록 기어링의 내부 방식에는 차이가 존재할 수 있다. 예를 들어, gearing count 값과 divider value 로 클록 기어링이 적용될 수 있다. 여기서 gearing count는 몇 번째의 클록 펄스를 누락할 지 결정하는 값이다. (Gearing Count + 1) 번째 클록 펄스가 누락된다. 여기서 divider value는 로 클록을 나누어 적용 한다. Clock Divider와 Gearing Count를 조합하여 클록 기어링을 적용한 결과로써, 약 5% 단위의 클록 조정이 가능하였다 표 4 Percent (%) Divider Value Gearing Count 95 0 19 90 0 9 85 0 6 80 0 4 75 0 3 66 0 2 50 0 1 45 1 9 40 1 4 37 1 3 33 1 2 25 1 1 20 2 4 16 2 2 10 3 4 5 4 4 한편, 본 발명의 저장 장치는 ACG(Adaptive Clock Gearing)을 지원할 수도 있다. 여기서 ACG는 1% 수준의 정밀한 클록 조정을 가능하게 한다. 한편, 베이지안 최적화는 목적함수의 관찰값만 구할 수 있으면, 해당 함수 의 closed-form을 정의할 수 없더라도 최적화가 가능하다. 이러한 특징 때문에 머신러닝 모델의 하이퍼 파라미 터를 최적화하는데 주로 사용되고 있다. 도 9는 본 발명의 실시 예에 따른 저장 장치는 코어별 주파수 제어 방법에 대한 실시 예를 보여주는 도면이 다. 도 9를 참조하면, 제 1 코어는 활성 상태에서 고정된 클록 값으로 제어되고, 제 2 코어는 전력 파라미터에따라 비활성 상태에서 가변되는 클록 값으로 제어될 수 있다. 여기서 클록 값은 설정된 전력 파라미터에 따라 클록 분주, 클록 게이팅, 혹은 클록 기어링을 적절하게 조절될 수 있다. 한편, 전력 상태에서 따라 제 1 및 제 2 코어의 활성화 여부 및, 클록 제어 방법을 다양하게 적용 가능하다고 이해되어야 할 것이다. 도 10은 본 발명의 실시 예에 따른 저장 장치의 동작 방법을 예시적으로 보여주는 흐름도이다. 도 1 내지 도 10 을 참조하면, 저장 장치의 동작 방법은 다음과 같이 진행될 수 있다. 머신러닝을 이용하여 전력 파라미터가 설 정될 수 있다(S110). 저장 장치는 전력 파라미터를 근거로 하여 활성/비활성 장치의 주파수를 조절할 수 있다 (S120). 실시 예에 있어서, 주파수에 대응하는 클록을 분주하거나, 클록을 게이팅 하거나, 클록을 기어링 함으 로써 주파수가 조절될 수 있다. 실시 예에 있어서, 외부 장치에서 머신러닝을 이용하여 전력 파라미터가 도출될 수 있다. 예를 들어, 워크로드 에 따라 피크 전력 및 평균 전력을 모니터링 하고; 워크로드에 따른 성능, 피크 전력, 및 평균 전력이 합성된 하나의 스칼라 값을 도출하고; 및 머신러닝을 수행함으로써 전력 파라미터를 계산함으로써, 전력 파라미터가 도 출될 수 있다. 실시 예에 있어서, 머신러닝은 베이지안 최적화를 이용할 수 있다. 다른 실시 예에 있어서, 호스 트 장치의 요청에 응답하여 내부의 파라미터 최적화 모듈에서 머신러닝이 수행될 수 있다. 한편, 본 발명의 파라미터 설정은 호스트 장치의 요청에 따라 실시간으로 저장 장치 내부에서 이루어질 수 있다. 도 11은 본 발명의 다른 실시 예에 따른 저장 장치(10a)을 예시적으로 보여주는 도면이다. 도 11은 참조하면, 호스트 장치는 환경 정보를 근거로 하여 저장 장치(10a)에 전력 최적화를 요청할 수 있다. 여기서 환경 정 보는 호스트 시스템, 저장 장치(10a)에 관련된 환경 정보(온도, 처리량, 워크로드, 서비스 관련 정보)일 수 있 다. 저장 장치(10a)는 파라미터 저장 저장기 및 파라미터 최적화 모듈을 포함할 수 있다. 파라미터 최 적화 모듈는 머신러닝을 이용하여 워크로드에 따른 최적화 파라미터를 찾아낼 수 있다. 최적화 파라미터는 파라미터 저장기에 저장될 수 있다. 도 12는 본 발명의 실시 예에 따른 저장 장치(10a)의 파라미터 최적화 모듈의 내부 동작을 예시적으로 보여 주는 도면이다. 도 12를 참조하면, 파라미터 최적화 모듈은 성능 모니터(14-1), 전력 모니터(14-2), 목적 집계기(14-3), 파라미터 최적화기(14-4)를 포함할 수 있다. 성능 모니터(14-1)는 워크로드 별 결정된 파라미터 에 의해 실행되는 저장 장치(10a)의 성능을 평가할 수 있다. 전력 모니터(14-2)는 워크로드 별 피크 전력 및 평 균 전력을 모니터링 할 수 있다. 목적 집계기(14-3)는 성능 정보 및 전력 정보를 수하고, 하나의 스칼라 값을 도출할 수 있다. 파라미터 최적화기(14-4)는 머신러닝을 이용하여 최적의 전력 파라미터를 계산할 수 있다. 도 13은 본 발명의 실시 예에 따른 저장 장치의 동작을 예시적으로 보여주는 래더 다이어그램이다. 도 13을 참 조하면, 호스트 장치는 전력 효율을 최적화 할 필요성을 판별할 수 있다(S10). 전력 효율의 최적화가 필요할 때, 호스트 장치는 머신러닝 활성화를 저장 장치에 요청할 수 있다(S20). 저장 장치는 이러한 머신러닝 수행 요 청에 따라 전력 최적화를 달성하는 머신러닝을 수행할 수 있다(S30). 저장장치는 머신러닝 수행에 따른 최적의 전력 파라미터를 설정할 수 있다(S40). 이후에 저장 장치는 머신러닝 수행 완료 정보를 호스트 장치로 전송할 수 있다(S50). 실시 예에 있어서, 파라미터는 저장 장치의 내부 구성들의 각각의 클록 값을 지시할 수 있다. 여기서 클록 값은 클록 분주(division) 값, 클록 게이팅(gating) 값, 혹은 클록 기어링(gearing) 값을 이용하여 적절하게 조절될 수 있다. 다른 실시 예에 있어서, 파라미터는 서비스 품질을 결정하는 품질 파라미터들을 지시할 수 있다. 여기 서 품질 파라미터들은 프로그램 동작 파라미터, 버퍼 크기, 코어 클록, 펌웨어 정책, 및 성능 마진 중에서 적어 도 2 개를 포함할 수 있다. 실시 예에 있어서, 제 1 코어 및 제 2 코어의 전력 상태를 판별하고; 및 제 1 코어가 활성 상태이고 제 2 코어 가 비활성 상태일 때, 제 1 코어의 클록 값을 고정시키고, 파라미터에 따라 제 2 코어의 클록 값은 가변 될 수 있다. 실시 예에 있어서, 저장 장치의 성능 및 소비 전력을 수신하고; 워크로드별 상기 성능과 상기 소비 전력 이 합성된 하나의 스칼라 값을 도출하고; 및 도출된 스칼라 값을 이용하여 머신러닝이 더 수행될 수 있다. 한편, 본 발명은 저장 장치 내부의 인공지능 프로세서에 의해 전력 효율성을 개선하도록 구현될 수 있다. 도 14는 본 발명의 또 다른 실시 예에 따른 저장 장치를 예시적으로 보여주는 도면이다. 도 14를 참조하면, 저장 장치는 적어도 하나의 비휘발성 메모리 장치(100a) 및 그것을 제어하는 제어기(200a)를 포함할 수 있다. 저장 장치는 도 2에 도시된 그것과 비교하여 머신러닝을 이용하여 파라미터 최적화를 수행하는 인공지 능 프로세서(215; AI-CPU)를 포함할 수 있다. 실시 예에 있어서, 머신러닝은 전력 상태별 피크 전력, 및 평균 전력을 고려하여 상기 전력 파라미터를 도출하 기 위하여 베이지안 최적화를 이용할 수 있다. 인공지능 프로세서는 워크로드에 따른 성능, 피크 전력, 및 평균 전력이 합성된 하나의 스칼라 값을 도출하고, 도출된 스칼라 값이 최대가 되도록 전력 파라미터를 결정할 수 있다. 한편, 본 발명은 NVMe 시스템에 적용 가능하다. 도 15는 본 발명의 실시 예에 따른 호스트 시스템을 예시적으로 보여주는 도면이다. 도 15를 참조하면, 호스트 시스템은 호스트 장치, 브릿지 장치 및 저장 장치를 포함할 수 있다. 호스트 장치는 적어도 하나의 서버, 데스크탑 컴퓨터, 핸드 헬드 장치, 멀티프로세서 시스템, 마이크로프 로세서 기반 프로그래머블 소비자 전자 장치, 랩탑, 네트워크 컴퓨터, 미니컴퓨터, 메인프레임 컴퓨터일 수 있 다. 호스트 시스템 내에서, 호스트 장치는 브릿지 장치과, 이더넷 패브릭과 같은 패브릭 인 터페이스 프로토콜(fabrics interface protocol)을 사용하여 통신할 수 있다. 패브릭 인터페이스 프로토콜은 적 어도 하나의 파이버 채널(fiber Channel)을 포함할 수도 있다. 브릿지 장치는 저장 장치와 PCIe와 같은 인터페이스 프로토콜을 사용하여 통신하도록 구현될 수 있 다. PCIe SSD(1206a)는 브릿지 장치과 PCIe 버스 인터페이스 프로토콜을 사용하여 통신할 수 있다. 여기 서 인터페이스 프로토콜은 적어도 하나의 ATA(Advanced Technology Attachment), SATA(Serial ATA), SAS(Serial Attached Small Computer System Interface)도 포함할 수 있다. 또한, 브릿지 장치은 RDMA 서브 모듈(1204a), NVMeoF-NVMe 서브 모듈(1204b), RC 서브 모듈(1204c), 프로세서(1204d), SQ 버퍼(1204e), 인-캡슐 라이트 데이터 버퍼(1204f) 및 ACQ(Administrative(Admin) Completion Queue) 버퍼(1204g)와 같은 서 브 모듈들을 포함할 수 있다. NVMeoF-NVMe 서브 모듈(1204b)은 가상 데이터 메모리(1204ba), 컨텍스트 메모리 (1204bb~1204bn)와 같은 적어도 하나의 서브 모듈들을 포함할 수 있다. SQ 버퍼(1204e)는 브릿지 장치의 제어기의 적어도 하나의 ASQ(Administrative(Admin) Submission Queue) 명령 및 IOSQ(Input/Output Submission Queue(s)) 명령과 같은 명령 세트들을 포함할 수 있다. ACQ 버퍼(1204g)는 저장 장치로부터 수신된 AQ(Admin queue)에 대응하는 완료 엔트리를 포함할 수 있다. ASQ 및 이어지는 ACQ는 각각 관리자 (administrative(Admin)) 명령들을 제출하고, 관리자 명령에 대응하는 완료를 수신하는데 사용될 수 있다. 저장 장치는 비휘발성 상태로 데이터를 저장하는 비휘발성 메모리 장치일 수 있다. 또한, 호스트 장치 은 패브릭(Fabric)들을 통해서 SQE를 브릿지 장치으로 전송하되, RDMA 서브 모듈(1204a)을 통해서 RDMA SEND 동작을 사용하여 전송할 수 있다. 저장 장치는, 메모리 라이트(Write) TLP 트랜잭션 또는 메모 리 리드(Read) TLP 트랜잭션을 브릿지 장치으로 PCIe 버스를 통해서 전송할 때, 리드/라이트 명령의 가상 데이터 메모리(1204ba)에 접근한다. 따라서, NVMeoF-NVMe 서브 모듈(1204b)은 데이터 버퍼에 접근한 후에 명령 토큰 번호를 가상 데이터 메모리(1204ba)의 가상 데이터 메모리 어드레스로부터 디코딩할 수 있다. 저장 장치는 PCIe 인터페이스에 따라 데이터를 송수신하는 PCIe SSD(1206a)를 포함할 수 있다. 여기서 PCIe SSD(1206a)는 도 1 내지 도 14에서 설명된 바와 같이, 성능/전력 사이의 최적의 클록 값을 지시하는 파라 미터(PRMT)를 저장할 수 있다. 여기서 파라미터(PRMT)는 PCIe SSD(1206a)의 내부 혹은 외부에서 머신러닝, 예를 들어, 베이지안 최적화에 의해 도출된 값이다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/혹은 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시 예에서 설명된 장치 및 구성요소는, 프로세서, 제어기, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 혹은 명령(instruction)을 실행 하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 혹은 특수 목적 컴퓨터를 이용하여 구 현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상의 소프트웨어 어플리 케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명된 경우도 있지만, 해당"}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 혹은 복수 유형 의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 혹은 하나의 프로세 서 및 하나의 제어기를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 혹은 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 혹은 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/혹은 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 혹은 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상장 치(virtual equipment), 컴퓨터 저장 매체 혹은 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연 결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 본 발명은 베이지안 최적화를 이용하여 trade-off를 고려하여, 성능 요구사항을 충족하며 소비전력을 최소화하 는 최적 clock 값을 결정한다. SSD 내부에서 파라미터를 결정하는 실시예도 있으나 외부에서 파라미터 정해서 제품에 탑재할 수도 있다. 본 발명의 최적화 알고리즘은 실측한 데이터를 바탕으로 베이지안 최적화(머신러닝 알고리즘)을 이용하여 parameter 값을 결정하는 Parameter optimizer 모듈과 spec을 고려하여 objective 간의 priority를 정의하고, objective들 간의 trade-off를 최소화하는 방식으로 다수의 objective를 aggregate하여 하나의 scalar 값을 도출하는 Objectives aggregator를 구비할 수 있다."}
{"patent_id": "10-2023-0100872", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "한편, 상술된 본 발명의 내용은 발명을 실시하기 위한 구체적인 실시 예들에 불과하다. 본 발명은 구체적이고 실제로 이용할 수 있는 수단 자체뿐 아니라, 장차 기술로 활용할 수 있는 추상적이고 개념적인 아이디어인 기술 적 사상을 포함 할 것이다."}
{"patent_id": "10-2023-0100872", "section": "도면", "subsection": "도면설명", "item": 1, "content": "이하에 첨부되는 도면들은 본 실시 예에 관한 이해를 돕기 위한 것으로, 상세한 설명과 함께 실시 예들을 제공 한다. 도 1a은 본 발명의 실시 예에 따른 저장 장치(10; SSD)의 전력 효율 개선 과정을 개념적으로 보여주는 도면이다. 도 1b는 본 발명의 실시 예에 따른 파라미터 최적화기을 예시적으로 보여주는 도면이다. 도 2는 본 발명의 실시 예에 따른 저장 장치를 예시적으로 보여주는 도면이다. 도 3은 도 2에 도시된 비휘발성 메모리 장치를 예시적으로 보여주는 도면이다. 도 4는 일반적으로 업체별 클록을 튜닝하는 과정을 예시적으로 보여주는 도면이다. 도 5a 및 도 5b는 서로 다른 업체의 요구사항에 따른 최적화 과정을 예시적으로 보여주는 도면들이다. 도 6은 본 발명의 실시 예에 따른 저장 장치의 전력 상태 천이를 예시적으로 보여주는 도면이다. 도 7a는 본 발명의 실시 예에 따른 저장 장치의 클록 분주를 예시적으로 보여주는 도면이다. 도 7b는 본 발명의 실시 예에 따른 저장 장치의 클록 게이팅을 예시적으로 보여주는 도면이다. 도 8은 본 발명의 실시 예에 따른 클록 기어링의 예를 예시적으로 보여주는 도면이다. 도 9는 본 발명의 실시 예에 따른 저장 장치는 코어별 주파수 제어 방법에 대한 실시 예를 보여주는 도면이다. 도 10은 본 발명의 실시 예에 따른 저장 장치의 동작 방법을 예시적으로 보여주는 흐름도이다. 도 11은 본 발명의 다른 실시 예에 따른 저장 장치을 예시적으로 보여주는 도면이다. 도 12는 본 발명의 실시 예에 따른 저장 장치(10a)의 파라미터 최적화 모듈의 내부 동작을 예시적으로 보여 주는 도면이다. 도 13은 본 발명의 실시 예에 따른 저장 장치의 동작을 예시적으로 보여주는 래더 다이어그램이다. 도 14는 본 발명의 또 다른 실시 예에 따른 저장 장치를 예시적으로 보여주는 도면이다. 도 15는 본 발명의 실시 예에 따른 호스트 시스템을 예시적으로 보여주는 도면이다."}
