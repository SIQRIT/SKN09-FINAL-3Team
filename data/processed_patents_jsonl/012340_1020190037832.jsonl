{"patent_id": "10-2019-0037832", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0116268", "출원번호": "10-2019-0037832", "발명의 명칭": "버퍼 메모리, 이를 이용하는 연산 장치 및 시스템", "출원인": "에스케이하이닉스 주식회사", "발명자": "박용상"}}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제 1 내지 제 n 메모리를 포함하고, 복수의 피쳐를 포함하는 제 1 내지 제 n 입력 피쳐 묶음을 상기 제 1 내지제 n 메모리에 각각 나누어 저장시키며, 하나의 입력 피쳐 묶음의 복수의 피쳐들을 상기 제 1 내지 제 n 메모리에 나누어 저장시키되 상기 제 1 내지 제 n 입력 피쳐 묶음의 동일한 순번의 피쳐를 상기 제 1 내지 제 n 메모리에 하나씩 저장시키고, n은 2 이상의 정수인 버퍼 메모리; 및상기 버퍼 메모리에 저장된 제 1 내지 제 n 입력 피쳐 묶음을 수신하여 수신된 입력 피쳐 묶음에 대한 연산 동작을 수행하는 연산 유닛을 포함하는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 버퍼 메모리는 제 k 입력 피쳐 묶음의 제 1 피쳐를 제 k 메모리에 저장시키고, k는 1과 n 사이의 정수인연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 버퍼 메모리는 제 k 입력 피쳐 묶음의 제 n+1 피쳐를 상기 제 k 메모리에 저장시키는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 버퍼 메모리는 상기 제 1 입력 피쳐 묶음의 제 1 내지 제 l 피쳐를 상기 제 1 내지 제 l 메모리에 각각 동시에 저장하고, l은 2와 n 사이의 정수인 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 버퍼 메모리는 한 번의 리드 동작 중에 상기 제 1 내지 제 n 입력 피쳐 묶음의 상기 동일한 순번의 피쳐를동시에 출력하는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 내지 제 4 메모리를 포함하고, 적어도 제 1 내지 제 4 피쳐를 갖는 제 1 내지 제 4 입력 피쳐 묶음을 상기제 1 내지 제 4 메모리에 저장시키며, 하나의 입력 피쳐 묶음의 제 1 내지 제 4 피쳐를 상기 제 1 내지 제 4 메모리에 나누어 저장시키되 상기 제 1 내지 제 4 입력 피쳐 묶음의 동일한 순번의 피쳐를 상기 제 1 내지 제 4메모리에 겹치지 않게 나누어 저장시키는 버퍼 메모리; 및상기 버퍼 메모리에 저장된 상기 제 1 내지 제 4 입력 피쳐 묶음을 수신하여 수신된 입력 피쳐 묶음에 대한 연산 동작을 수행하는 연산 유닛을 포함하는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 제 1 입력 피쳐 묶음의 제 1 피쳐는 상기 제 1 메모리의 제 1 저장 영역에 저장되고, 상기 제 1 입력 피쳐묶음의 제 2 피쳐는 상기 제 2 메모리의 제 1 저장 영역에 저장되며, 상기 제 1 입력 피쳐 묶음의 제 3 피쳐는상기 제 3 메모리의 제 1 저장 영역에 저장되고, 상기 제 1 입력 피쳐 묶음의 제 4 피쳐는 상기 제 4 메모리의제 1 저장 영역에 저장되는 연산 장치.공개특허 10-2020-0116268-3-청구항 8 제 7 항에 있어서,상기 제 2 입력 피쳐 묶음의 제 1 피쳐는 상기 제 2 메모리의 제 2 저장 영역에 저장되고, 상기 제 2 입력 피쳐묶음의 제 2 피쳐는 상기 제 3 메모리의 제 2 저장 영역에 저장되며, 상기 제 2 입력 피쳐 묶음의 제 3 피쳐는상기 제 4 메모리의 제 2 저장 영역에 저장되고, 상기 제 2 입력 피쳐 묶음의 제 4 피쳐는 상기 제 1 메모리의제 2 저장 영역에 저장되는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 제 3 입력 피쳐 묶음의 제 1 피쳐는 상기 제 3 메모리의 제 3 저장 영역에 저장되고, 상기 제 3 입력 피쳐묶음의 제 2 피쳐는 상기 제 4 메모리의 제 3 저장 영역에 저장되며, 상기 제 3 입력 피쳐 묶음의 제 3 피쳐는상기 제 1 메모리의 제 3 저장 영역에 저장되고, 상기 제 3 입력 피쳐 묶음의 제 4 피쳐는 상기 제 2 메모리의제 3 저장 영역에 저장되는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 제 4 입력 피쳐 묶음의 제 1 피쳐는 상기 제 4 메모리의 제 4 저장 영역에 저장되고, 상기 제 4 입력 피쳐묶음의 제 2 피쳐는 상기 제 1 메모리의 제 4 저장 영역에 저장되며, 상기 제 4 입력 피쳐 묶음의 제 3 피쳐는상기 제 2 메모리의 제 4 저장 영역에 저장되고, 상기 제 4 입력 피쳐 묶음의 제 4 피쳐는 상기 제 3 메모리의제 4 저장 영역에 저장되는 연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 6 항에 있어서,상기 버퍼 메모리는 제 1 리드 동작 중에 상기 제 1 내지 제 4 입력 피쳐 묶음의 제 1 피쳐를 동시에 출력하는연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 버퍼 메모리는 제 2 리드 동작 중에 상기 제 1 내지 제 4 입력 피쳐 묶음의 제 2 피쳐를 동시에 출력하는연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 버퍼 메모리는 제 3 리드 동작 중에 상기 제 1 내지 제 4 입력 피쳐 묶음의 제 3 피쳐를 동시에 출력하는연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 버퍼 메모리는 제 4 리드 동작 중에 상기 제 1 내지 제 4 입력 피쳐 묶음의 제 4 피쳐를 동시에 출력하는연산 장치."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "시스템 버스를 통해 제 1 입력 데이터를 전송하는 호스트 장치; 및상기 제 1 입력 데이터를 수신하고, 상기 제 1 입력 데이터에 대한 연산 동작을 수행하는 연산 장치를포함하고,공개특허 10-2020-0116268-4-상기 연산 장치는 상기 제 1 입력 데이터를 각각 적어도 제 1 내지 제 n 피쳐를 갖는 제 1 내지 제 n 입력 피쳐묶음으로 분류하여 저장하고, n은 2 이상의 정수인 버퍼;제 1 내지 제 n 메모리를 포함하고, 상기 제 1 내지 제 n 입력 피쳐 묶음의 제 1 내지 제 n 피쳐를 상기 제 1내지 제 n 메모리에 각각 저장시키며, 하나의 입력 피쳐 묶음의 제 1 내지 제 n 피쳐는 상기 제 1 내지 제 n 메모리로 분할 저장되는 버퍼 메모리; 및상기 제 1 내지 제 n 입력 피쳐 묶음에 대한 연산 동작을 수행하는 연산 유닛을 포함하는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15 항에 있어서,상기 버퍼는 제 1 내지 제 n 입력 피쳐 묶음을 각각 저장하는 적어도 n개의 FIFO (First-In First-Out) 회로를포함하는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15 항에 있어서,상기 버퍼 메모리는 상기 제 1 내지 제 n 입력 피쳐 묶음의 동일한 순번의 피쳐를 상기 제 1 내지 제 n 메모리에 하나씩 저장시키는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 15 항에 있어서,상기 제 1 내지 제 n 입력 피쳐 묶음은 각각 제 n+1 피쳐를 더 포함하고, 상기 버퍼 메모리는 상기 제 1 내지 제 n 입력 피쳐 묶음의 상기 제 n+1 피쳐를 상기 제 1 내지 제 n 입력 피쳐묶음의 상기 제 1 피쳐가 저장된 메모리에 각각 저장시키는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 15 항에 있어서,상기 버퍼 메모리는 한번의 리드 동작 중에 상기 제 1 내지 제 n 입력 피쳐 묶음의 동일한 순번의 피쳐를 동시에 출력하는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 15 항에 있어서,상기 호스트 장치는 상기 시스템 버스를 통해 제 2 입력 데이터를 더 전송하고,상기 연산 장치는 상기 제 2 입력 데이터를 저장하고, 상기 연산 유닛으로상기 제 2 입력 데이터를 웨이트 데이터로서 출력하는 동적 메모리를 더 포함하는 시스템."}
{"patent_id": "10-2019-0037832", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 20 항에 있어서,상기 연산 장치는 상기 제 1 내지 제 n 입력 피쳐 묶음과 상기 웨이트 데이터에 대해 MAC (Multiply andAccumulation) 연산을 수행하는 시스톨릭 어레이(Systolic Array)를 포함하는 시스템."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "연산 장치는 연산 유닛으로 제 1 내지 제 n 입력 피쳐 묶음을 제공하는 버퍼 메모리를 포함할 수 있다. 상기 버 퍼 메모리는 제 1 내지 제 n 메모리를 포함하고, 복수의 피쳐를 갖는 상기 제 1 내지 제 n 입력 피쳐 묶음을 상 기 제 1 내지 제 n 메모리에 저장시킬 수 있다. 하나의 입력 피쳐 묶음에 포함되는 복수의 피쳐는 상기 제 1 내 지 제 n 메모리에 나누어 저장될 수 있고, 상기 제 1 내지 제 n 입력 피쳐 묶음의 동일한 순번의 피쳐는 서로 다 른 메모리에 각각 저장될 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 집적 회로 기술에 관한 것으로, 더 상세하게는 버퍼 메모리, 이를 이용하는 연산 장치 및 시스템에 관한 것이다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "4차 산업 혁명이 진행되면서 사물 인터넷(Internet of Things), 모바일(Mobile), 클라우드(Cloud), 빅 데이터 (Big Data) 및 인공지능(Artificial Intelligence)과 관련된 기술이 계속적으로 발전하고 있다. 인공 지능을 구현하기 위해 머신 러닝(Machine Learning)과 딥 러닝(Deep Learning)과 같은 기술이 개발되었다. 머신 러닝과 딥 러닝은 수신된 입력을 연산 또는 분류하여 출력을 생성하는 점에서 유사하지만, 머신 러닝은 인간이 입력한 알고리즘을 통해 데이터를 분석 및 추론하는데 비해, 딥 러닝은 인공 신경망(Deep Neural Network)을 통해 데이 터를 분석 및 추론할 수 있다. 인공 신경망(Deep Neural Network) 회로는 수신된 입력에 대해 연산을 수행하여 출력을 생성하는 회로로서 수신 된 입력에 대해 곱셈 (Multiply)과 합산 (Accumulation)을 수행하여 출력을 생성하는 매트릭스 연산 회로를 포 함할 수 있다. 상기 매트릭스 연산 회로는 콘볼루션(convolution) 연산이 가능한 회로로서 일반적으로 시스톨릭 어레이(Systolic array)일 수 있다. 상기 시스톨릭 어레이는 활성화 입력과 같은 입력 피쳐 묶음(set of input feature)과 웨이트(weight) 데이터에 대한 곱셈 연산 및 뎃셈 연산을 수행하여 출력을 생성할 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예는 복수의 입력 피쳐 묶음의 각각의 피쳐를 복수의 메모리에 분할하여 저장시키고, 상기 복수 의 입력 피쳐 묶음의 동일한 순번의 피쳐를 서로 다른 메모리에 저장시킬 수 있는 버퍼 메모리, 이를 이용하는 연산 장치 및 시스템을 제공할 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시예에 따른 연산 장치는 제 1 내지 제 n 메모리를 포함하고, 복수의 피쳐를 포함하는 제 1 내지 제 n 입력 피쳐 묶음을 상기 제 1 내지 제 n 메모리에 각각 나누어 저장시키며, 하나의 입력 피쳐 묶음의 복수 의 피쳐를 상기 제 1 내지 제 n 메모리에 나누어 저장시키되 상기 제 1 내지 제 n 입력 피쳐 묶음의 동일한 순 번의 피쳐를 상기 제 1 내지 제 n 메모리에 하나씩 저장시키고, n은 2 이상의 정수인 버퍼 메모리; 및 상기 버 퍼 메모리에 저장된 제 1 내지 제 n 입력 피쳐 묶음을 수신하여 수신된 입력 피쳐 묶음에 대한 연산 동작을 수 행하는 연산 유닛을 포함할 수 있다. 본 발명의 실시예에 따른 연산 장치는 제 1 내지 제 4 메모리를 포함하고, 적어도 제 1 내지 제 4 피쳐를 갖는 제 1 내지 제 4 입력 피쳐 묶음을 상기 제 1 내지 제 4 메모리에 저장시키며, 하나의 입력 피쳐 묶음의 제 1 내 지 제 4 피쳐를 상기 제 1 내지 제 4 메모리에 나누어 저장시키되 상기 제 1 내지 제 4 입력 피쳐 묶음의 동일 한 순번의 피쳐를 상기 제 1 내지 제 4 메모리에 겹치지 않게 나누어 저장시키는 버퍼 메모리; 및 상기 버퍼 메 모리에 저장된 상기 제 1 내지 제 4 입력 피쳐 묶음을 수신하여 수신된 입력 피쳐 묶음에 대한 연산 동작을 수 행하는 연산 유닛을 포함할 수 있다. 본 발명의 실시예에 따른 시스템은 시스템 버스를 통해 제 1 입력 데이터를 전송하는 호스트 장치; 및 상기 제 1 입력 데이터를 수신하고, 상기 제 1 입력 데이터에 대한 연산 동작을 수행하는 연산 장치를 포함하고, 상기 연산 장치는 상기 제 1 입력 데이터를 각각 적어도 제 1 내지 제 n 피쳐를 갖는 제 1 내지 제 n 입력 피쳐 묶음 으로 분류하여 저장하고, n은 2 이상의 정수인 버퍼; 제 1 내지 제 n 메모리를 포함하고, 상기 제 1 내지 제 n 입력 피쳐 묶음의 제 1 내지 제 n 피쳐를 상기 제 1 내지 제 n 메모리에 각각 저장시키며, 하나의 입력 피쳐 묶 음의 제 1 내지 제 n 피쳐는 상기 제 1 내지 제 n 메모리로 분할 저장되는 버퍼 메모리; 및 상기 제 1 내지 제 n 입력 피쳐 묶음에 대한 연산 동작을 수행하는 연산 유닛을 포함할 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예는 버퍼 메모리의 사용 효율을 증가시킬 수 있고, 연산 장치의 제조 비용을 감소시킬 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 시스템의 구성을 보여주는 도면이다. 도 1에서, 상기 시스템은 호스트 장치 및 연산 장치를 포함할 수 있다. 상기 호스트 장치는 상기 연산 장치로 데이터를 제공 하고, 상기 연산 장치로부터 출력된 데이터를 수신할 수 있다. 상기 호스트 장치는 시스템 버스(10 3)를 통해 상기 연산 장치와 연결될 수 있다. 상기 호스트 장치는 상기 시스템 버스를 통해 상기 연 산 장치로 입력 데이터(IND1, IND2)를 전송할 수 있다. 상기 호스트 장치는 상기 연산 장치가 상기 입력 데이터(IND1, IND2)에 대한 연산 동작을 수행하여 생성한 출력 데이터(OD)를 상기 시스템 버스를 통 해 수신할 수 있다. 또한, 상기 호스트 장치는 상기 연산 장치가 연산 동작을 수행할 수 있도록 다양 한 제어 신호를 상기 시스템 버스를 통해 상기 연산 장치로 제공할 수 있다. 상기 입력 데이터는 제 1 입력 데이터(IND1) 및 제 2 입력 데이터(IND2)를 포함할 수 있다. 예를 들어, 상기 제 1 입력 데이터(IND1)는 입력 피쳐 묶음(set of input feature)과 관련된 정보를 포함할 수 있다. 상기 제 2 입력 데이터(IND2)는 웨이 트(weight) 데이터와 관련된 정보를 포함할 수 있다. 상기 연산 장치는 상기 시스템 버스를 통해 상기 호스트 장치와 연결될 수 있다. 상기 연산 장 치는 상기 시스템 버스를 통해 상기 호스트 장치로부터 전송된 입력 데이터(IND1, IND2)를 수신 할 수 있다. 상기 연산 장치는 상기 입력 데이터(IND1, IND2)를 수신하여, 상기 입력 데이터(IND1, IND2) 에 대한 연산 동작을 수행할 수 있다. 상기 연산 장치는 상기 연산 동작을 수행하여 생성된 출력 데이터 (OD)를 상기 시스템 버스를 통해 상기 호스트 장치로 전송할 수 있다. 상기 연산 장치는 뉴럴 네트워크(neural network) 연산 장치일 수 있다. 상기 연산 장치는 상기 호스트로부터 제 1 및 제 2 입력 데이터(IND1, IND2)를 수신하고, 입력 피쳐 묶음과 웨이트 데이터에 대한 연산 동작을 수행할 수 있다. 상 기 연산 동작은 상기 입력 피쳐 묶음과 상기 웨이트 데이터에 대한 콘볼루션(convolution) 연산일 수 있고, MAC (Multiply and Accumulation) 연산일 수 있다. 상기 연산 장치는 호스트 인터페이스, 버퍼링 회로, 동적 메모리 및 연산 유닛을 포 함할 수 있다. 상기 호스트 인터페이스는 상기 시스템 버스와 연결되어 상기 호스트 장치로부터 전송된 상기 입력 데이터(IND1, IND2)를 수신하고, 수신된 입력 데이터(IND1, IND2)를 상기 연산 장치의 내부 회로로 제공할 수 있다. 또한, 상기 호스트 인터페이스는 상기 연산 장치로부터 생성된 상기 출 력 데이터(OD)를 상기 시스템 버스를 통해 상기 호스트 장치로 전송할 수 있다. 상기 호스트 인터페 이스는 상기 시스템 버스를 통해 상기 제 1 및 제 2 입력 데이터(IND1, IND2)를 수신할 수 있다. 상 기 호스트 인터페이스는 수신된 제 1 입력 데이터(IND1)를 상기 버퍼링 회로로 제공하고, 수신된 제 2 입력 데이터(IND2)를 상기 동적 메모리로 제공할 수 있다. 상기 호스트 인터페이스는 상기 연산 유 닛으로부터 출력된 연산 결과 데이터(CRD)를 상기 버퍼링 회로를 통해 수신할 수 있다. 상기 호스트 인터페이스는 상기 연산 유닛으로부터 생성된 연산 결과 데이터(CRD)에 기초하여 상기 시스템 버스 를 구동하여 상기 호스트 장치로 상기 출력 데이터(OD)를 전송할 수 있다. 상기 버퍼링 회로는 상기 호스트 인터페이스로부터 제 1 입력 데이터(IND1)를 수신할 수 있다. 상기 버퍼링 회로는 상기 제 1 입력 데이터(IND1)를 복수의 입력 피쳐 묶음(FD)으로 분류하여 저장할 수 있다. 복수의 입력 피쳐 묶음(FD)은 각각 복수의 피쳐를 포함할 수 있다. 상기 피쳐는 임의의 비트 수를 포함할 수 있 는 입력 피쳐 묶음(FD)의 단위 데이터일 수 있다. 상기 시스템 버스의 데이터 대역폭(data bandwidth)은 하나의 피쳐의 사이즈와 상이할 수 있다. 상기 시스템 버스의 데이터 대역폭은 하나의 피쳐의 사이즈보다 클 수 있다. 상기 제 1 데이터는 클럭 신호에 동기하여 상기 시스템 버스를 통해 전송될 수 있고, 상기 시스템 버스를 통해 한번에 전송되는 제 1 입력 데이터(IND1)의 비트 수는 하나의 피쳐의 비트 수보다 많을 수 있 고, 상기 시스템 버스를 통해 한번에 전송되는 제 1 입력 데이터(IND1)는 복수의 피쳐에 대한 정보를 포함 할 수 있다. 따라서, 상기 버퍼링 회로는 상기 제 1 입력 데이터(IND1)를 복수의 입력 피쳐 묶음(FD)으로 분류하고, 분류된 각각의 입력 피쳐 묶음(FD)을 저장할 수 있다. 상기 버퍼링 회로는 상기 복수의 입력 피 쳐 묶음(FD)을 상기 연산 유닛으로 제공할 수 있다. 상기 버퍼링 회로는 상기 연산 유닛의 연산 효율을 증가시키기 위해 상기 복수의 입력 피쳐 묶음(FD)을 상기 연산 유닛으로 동시에 제공할 수 있는 배 치(batch) 동작을 수행할 수 있다. 상기 버퍼링 회로는 상기 연산 유닛이 연산 동작을 수행하여 생성 한 상기 연산 결과 데이터(CRD)를 수신하고, 상기 연산 결과 데이터(CRD)를 상기 호스트 인터페이스로 제 공할 수 있다.상기 버퍼링 회로는 버퍼 및 버퍼 메모리를 포함할 수 있다. 상기 버퍼는 상기 제 1 입력 데이터(IND1)를 수신하여 저장할 수 있다. 상기 버퍼는 상기 제 1 입력 데이터(IND1)를 복수의 입력 피쳐 묶음(FD)으로 분류하여 상기 복수의 입력 피쳐 묶음(FD)을 개별적으로 저장할 수 있다. 상기 버퍼는 복수 의 FIFO (First-In First-Out) 회로를 포함할 수 있다. 적어도 상기 FIFO 회로의 개수는 상기 제 1 입력 데이 터(IND1)에 포함될 수 있는 상기 입력 피쳐 묶음(FD)의 개수에 대응할 수 있다. 상기 복수의 FIFO 회로는 상기 복수의 입력 피쳐 묶음(FD)의 복수의 피쳐를 각각 저장할 수 있다. 상기 버퍼 메모리는 상기 버퍼로부터 출력된 입력 피쳐 묶음(FD)을 저장하고, 저장된 입력 피쳐 묶음 (FD)을 상기 연산 유닛으로 출력할 수 있다. 상기 버퍼 메모리는 상기 복수의 입력 피쳐 묶음(FD)을 저장하고, 상기 복수의 입력 피쳐 묶음(FD)의 각각의 피쳐가 동시에 상기 연산 유닛으로 출력될 수 있도록 배치 동작을 수행할 수 있다. 상기 버퍼 메모리는 복수의 메모리를 포함할 수 있다. 상기 버퍼 메모리 가 포함하는 메모리의 개수는 적어도 상기 입력 피쳐 묶음(FD)의 개수에 대응할 수 있다. 상기 버퍼 메모 리는 상기 복수의 입력 피쳐 묶음(FD)의 각각의 피쳐를 상기 복수의 메모리에 나누어 저장시킬 수 있다. 상기 복수의 메모리는 각각 상기 복수의 입력 피쳐 묶음(FD)의 하나 이상의 피쳐를 저장할 수 있다. 상기 복수 의 메모리에 저장된 복수의 입력 피쳐 묶음(FD)의 피쳐의 순번은 서로 다를 수 있다. 상기 복수의 입력 피쳐 묶 음(FD)의 동일한 순번의 피쳐는 동일한 메모리에 저장되지 않을 수 있다. 예를 들어, 하나의 입력 피쳐 묶음 (FD)의 제 l 피쳐를 저장한 메모리는 다른 입력 피쳐 묶음(FD)의 제 l 피쳐를 저장하지 않을 수 있다. 상기 l은 1과 하나의 입력 피쳐 묶음에 포함되는 피쳐의 개수 사이의 정수일 수 있다. 상기 버퍼 메모리는 상기 복 수의 입력 피쳐 묶음(FD)의 각각의 피쳐를 동시에 출력하여 상기 연산 유닛으로 제공할 수 있다. 상기 버 퍼 메모리는 한번의 리드 동작 중에 상기 복수의 피쳐의 동일한 순번의 피쳐를 동시에 출력할 수 있다. 예 를 들어, 상기 버퍼 메모리는 한번의 리드 동작 중에 상기 복수의 입력 피쳐 묶음의 제 l 피쳐를 동시에 출력할 수 있다. 상기 버퍼 및 버퍼 메모리에 관한 상세한 설명은 후술하기로 한다. 일 실시예에서, 상기 복수의 메모리는 각각 듀얼 포트 SRAM (Static Random Access Memory)일 수 있다. 상기 복수의 메모리는 각각 적어도 하나의 피쳐가 포함하는 비트 수에 대응하는 저장 깊이(depth)를 가질 수 있다. 예를 들어, 상기 복수의 메모리는 복수의 저장 영역을 구비할 수 있고, 하나의 저장 영역은 각각 하나의 피쳐의 비트 수에 대응하는 개수 이상의 비트를 저장할 수 있다. 상기 복수의 저장 영역은 서로 다른 어드레스에 기초 하여 접근될 수 있다. 상기 동적 메모리는 상기 호스트 인터페이스로부터 제 2 입력 데이터(IND2)를 수신할 수 있다. 상기 동적 메모리는 상기 제 2 입력 데이터(IND2)를 복수의 웨이트 데이터(WD)로 분류하여 저장할 수 있다. 상 기 동적 메모리는 상기 제 2 입력 데이터(IND2)를 복수의 웨이트 데이터(WD)로 분류하고, 분류된 각각의 웨이트 데이터(WD)를 저장할 수 있다. 상기 동적 메모리는 상기 복수의 웨이트 데이터(WD)를 상기 연산 유 닛으로 제공할 수 있다. 하나의 웨이트 데이터(WD)는 복수의 웨이트를 포함할 수 있다. 상기 웨이트는 임 의의 비트 수를 포함할 수 있는 웨이트 데이터(WD)의 단위 데이터일 수 있다. 일 실시예에서, 상기 동적 메모리 는 DRAM (Dynamic Random Access Memory)일 수 있다. 상기 연산 유닛은 상기 버퍼링 회로로부터 출력된 상기 복수의 입력 피쳐 묶음(FD)을 수신할 수 있다. 상기 연산 유닛은 상기 동적 메모리로부터 출력된 복수의 웨이트 데이터(WD)를 수신할 수 있다. 상기 연산 유닛은 상기 입력 피쳐 묶음(FD)과 상기 웨이트 데이터(WD)에 대한 연산 동작을 수행할 수 있다. 예를 들어, 상기 연산 유닛은 상기 입력 피쳐 묶음(FD)과 상기 웨이트 데이터(WD)에 대한 콘볼루 션 연산을 수행할 수 있다. 상기 연산 유닛은 복수의 연산 회로(141, 142, ..., 14n)를 포함할 수 있다. 상기 복수의 연산 회로(141, 142, 쪋, 14n)는 서로 동일한 구조를 갖는 MAC 연산 회로일 수 있다. 상기 복수의 연산 회로(141, 142, ..., 14n)는 각각 상기 입력 피쳐 묶음(FD)과 상기 웨이트 데이터(WD)에 대한 연산 동작을 수행하고, 연산 동작 결과를 상기 호스트 인터페이스로 출력할 수 있다. 상기 연산 회로(141, 142, 쪋, 14n)는 각각 복수의 단위 처리기(processing element)를 포함하고, 상기 단위 처리기는 클럭 신호에 동기하여 상기 입력 피쳐 묶음(FD) 및 상기 웨이트 데이터(WD)를 수신하고, 수신된 입력 피쳐 묶음(FD) 및 상기 웨이트 데이터(WD)에 대한 MAC 연산을 수행할 수 있다. 상기 복수의 연산 회로(141, 142, ..., 14n)는 각각 입력 피쳐 묶음(FD)와 웨이트 데이터(WD)에 대한 MAC 연산을 수행하는 시스톨릭 어레이(systolic array)를 포함할 수 있다. 도 2a 및 도 2b는 본 발명의 실시예에 따른 연산 회로의 구성 및 연산 동작을 보여주는 도면이다. 도 2a에 서, 상기 연산 회로는 복수의 단위 처리기(processing element, PE)를 포함하는 시스톨릭 어레이일 수 있 다. 상기 연산 회로는 도 1에 도시된 상기 복수의 연산 회로(141, 142, ..., 14n)로 각각 적용될 수 있다.도 2a에서, 상기 연산 회로는 3개의 피쳐를 갖는 3개의 입력 피쳐 묶음과 3개의 웨이트를 갖는 3개의 웨이 트 데이터를 수신하고, 3개의 피쳐를 갖는 3개의 입력 피쳐 묶음과 3개의 웨이트를 갖는 3개의 웨이트 데이터에 대한 MAC 연산을 수행할 수 있도록 9개의 단위 처리기를 구비하는 것은 예시하였다. 하지만, 입력 피쳐 묶음의 개수, 하나의 입력 피쳐 묶음이 포함하는 피쳐의 개수, 웨이트 데이터의 개수, 하나의 웨이트 데이터가 포함하 는 웨이트의 개수는 3개보다 적거나 많을 수 있고, 이에 따라 상기 연산 회로에 포함되는 상기 단위 처리 기의 개수도 감소하거나 증가될 수 있다. 상기 연산 회로는 제 1 내지 제 9 단위 처리기(PE1-PE9)을 포함 할 수 있다. 각각의 프로세싱 유닛은 클럭 신호(CLK)에 동기하여 상기 입력 피쳐 묶음 및 웨이트 데이터 각각의 피쳐 및 웨이트를 순차적으로 수신하고, 수신된 피쳐 및 웨이트에 대해 MAC 연산을 수행할 수 있다. 상기 제 1 내지 제 9 단위 처리기(PE1-PE9)는 각각 곱셈 로직(multiply logic), 합산 로직(accumulation logic) 및 레지 스터를 포함할 수 있다. 도 2b는 입력 피쳐 묶음(FD)과 웨이트 데이터(WD)를 행렬로 표현한 것이고, 상기 입력 피쳐 묶음(FD)과 웨이트 데이터(WD)를 콘볼루션 연산한 결과(FD X WD)를 보여준다. 첫 번째 클럭 신호(CLK1)가 토글하면, 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 1 피쳐 (F11) 및 상기 제 1 웨이트 데이터(W11)의 제 1 웨이트를 수신할 수 있다. 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 1 피쳐(F11)와 상기 제 1 웨이트 데이터의 제 1 웨이트(W11)를 곱하여 F11W11을 생성 할 수 있다. 두 번째 클럭 신호(CLK2)가 토글하면, 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 2 피쳐 (F12)를 수신하고, 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 수신할 수 있다. 상기 제 1 단위 처리기 (PE1)는 상기 제 1 입력 피쳐 묶음의 제 1 피쳐(F11)를 제 2 단위 처리기(PE2)로 출력하고, 상기 제 1 웨이트 데이터의 제 1 웨이트(W11)를 제 3 단위 처리기(PE3)로 출력할 수 있다. 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)와 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 곱하여 F12W21를 생성하 고, 이전에 계산된 F11W11과 F12W21을 합산할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 두 번째 클럭 신호 (CLK2)에 동기하여 상기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 수신하고, 상기 제 1 단위 처리기(PE1)로부 터 상기 제 1 입력 피쳐 묶음의 제 1 피쳐(F11)를 수신할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 제 1 입 력 피쳐 묶음의 제 1 피쳐(F11)와 상기 제 1 웨이트 데이터 제 2 웨이트(W12)를 곱하여 F11W12를 생성할 수 있 다. 상기 제 3 단위 처리기(PE3)는 상기 두 번째 클럭 신호(CLK2)에 동기하여 상기 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)를 수신하고, 상기 제 1 단위 처리기(PE1)로부터 상기 제 1 웨이트 데이터의 제 1 웨이트(W11)를 수신 할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 제 2 입력 피쳐 묶음의 제 1 피쳐(W21)와 상기 제 1 웨이트 데 이터 제 1 웨이트(W11)를 곱하여 F21W11을 생성할 수 있다. 세 번째 클럭 신호(CLK3)가 토글하면, 상기 제 1 단위 처리기(PE1)는 제 1 입력 피쳐 묶음의 제 3 피쳐(F13)와 상기 제 3 웨이트 데이터의 제 1 웨이트(W31)를 수신할 수 있다. 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)를 상기 제 2 단위 처리기(PE2)로 출력하고, 상기 제 2 웨이트 데이터의 제 1 웨이 트(W21)를 상기 제 3 단위 처리기(PE3)로 출력할 수 있다. 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 3 피쳐(F13)와 상기 제 3 웨이트 데이터 제 1 웨이트(W31)를 곱하여 F13W31을 생성하고, 이전에 계산 된 F11W11+F12W21과 F13W31을 합산하여 연산 결과 (F11W11+F12W21+F13+W31)를 저장할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 세 번째 클럭 신호(CLK3)에 동기하여 상기 제 2 웨이트 데이터의 제 2 웨이트(W22)를 수신 하고, 상기 제 1 단위 처리기(PE1)로부터 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)를 수신할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 제 1 입력 피쳐 묶음의 제 1 피쳐(F11)를 제 4 단위 처리기(PE4)로 출력하고, 상 기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 제 5 단위 처리기(PE5)로 출력할 수 있다. 상기 제 2 단위 처리기 (PE2)는 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)와 상기 제 2 웨이트 데이터의 제 2 웨이트(W22)를 곱하여 F12W22를 생성하고, 이전에 계산된 F11W12와 F12W22를 합산할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 세 번째 클럭 신호(CLK3)에 동기하여 상기 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)를 수신하고, 상기 제 1 단위 처 리기(PE1)로부터 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 수신할 수 있다. 상기 제 3 단위 처리기(PE3) 는 상기 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)를 상기 제 5 단위 처리기(PE5)로 출력하고, 상기 제 1 웨이트 데이터의 제 1 웨이트(W11)를 제 6 단위 처리기(PE6)로 출력할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)와 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 곱하여 F22W21를 생성하 고, 이전에 계산된 F21W11과 F22W21를 합산할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 3 클럭 신호 (CLK3)에 동기하여 상기 제 1 웨이트 데이터의 제 3 웨이트(W13)를 수신하고, 상기 제 2 단위 처리기(PE2)로부 터 제 1 입력 피쳐 묶음의 제 1 피쳐(F11)를 수신할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 1 입력 피 쳐 묶음의 제 1 피쳐(F11)와 상기 제 1 웨이트 데이터의 제 3 웨이트(W13)를 곱하여 F11W13을 생성할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 단위 처리기(PE2)으로부터 상기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)를 수신할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)와 상기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 곱하여 F21W12를 생성할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 세 번째 클럭 신호 (CLK6)에 동기하여 상기 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 상기 제 1 웨이트 데이터의 제 1 웨이트(W11)를 수신할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)와 상기 제 1 웨이트 데이터의 제 1 피쳐(W11)를 곱하여 F31W11을 생성할 수 있다. 네 번째 클럭 신호(CLK4)가 토글하면, 상기 제 1 단위 처리기(PE1)는 상기 제 1 입력 피쳐 묶음의 제 3 피쳐 (F13)를 상기 제 2 단위 처리기(PE2)로 출력하고, 상기 제 3 웨이트 데이터의 제 1 피쳐(W31)를 상기 제 3 단위 처리기(PE3)로 출력할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 네 번째 클럭 신호(CLK4)에 동기하여 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 수신하고, 상기 제 1 단위 처리기(PE1)로부터 상기 제 1 입력 피쳐 묶음의 제 3 피쳐(F13)를 수신할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 제 1 입력 피쳐 묶음의 제 2 피 쳐(F12)를 상기 제 4 단위 처리기(PE4)로 출력하고, 상기 제 2 웨이트 데이터의 제 2 웨이트(W22)를 상기 제 5 단위 처리기(PE5)로 출력할 수 있다. 상기 제 2 단위 처리기(PE2)는 상기 제 1 입력 피쳐 묶음의 제 3 피쳐 (F13)와 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 곱하여 F13W32를 생성하고, 이전에 계산된 F11W12+F12W22와 F13W32를 합산하여 연산 결과 (F11W12+F12W22+F13W32)를 저장할 수 있다. 상기 제 3 단위 처 리기(PE3)는 상기 네 번째 클럭 신호(CLK4)에 동기하여 상기 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)를 수신하고, 상기 제 1 단위 처리기(PE1)로부터 상기 제 3 웨이트 데이터의 제 1 웨이트(W31)를 수신할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)를 상기 제 5 단위 처리기(PE5)로 출 력하고, 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 상기 제 6 단위 처리기(PE6)로 출력할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)와 상기 제 3 웨이트 데이터의 제 1 웨이 트(W31)를 곱하여 F23W31을 생성하고, 이전에 계산된 F21W11+F22W21과 F23W31을 합산하여 연산 결과 (F21W11+F22W21+F23W31)를 저장할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 네 번째 클럭 신호(CLK4)에 동 기하여 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)를 수신하고, 상기 제 2 단위 처리기(PE2)으로부터 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)를 수신할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 1 웨이트 데이터 의 제 3 비트(W13)를 제 7 단위 처리기(PE7)로 출력할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 1 입력 피쳐 묶음의 제 2 피쳐(F12)와 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)를 곱하여 F12W23을 생성하고, 이전 에 계산된 F11W13과 F12W23을 합산할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 단위 처리기(PE2)로부 터 제 2 웨이트 데이터의 제 2 웨이트(W22)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 제 2 입력 피쳐 묶 음의 제 2 피쳐(F22)를 수신할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 입력 피쳐 묶음의 제 1 피쳐 (F21)를 상기 제 7 단위 처리기(PE7)로 출력하고, 상기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 제 8 단위 처 리기(PE8)로 출력할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)와 상 기 제 2 웨이트 데이터의 제 2 웨이트(W22)를 곱하여 F22W22를 생성하고, 이전에 계산된 F21W12와 F22W22를 합 산할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 네 번째 클럭 신호(CLK6)에 동기하여 상기 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 제 2 웨이트 데이터의 제 1 웨이트(W2 1)를 수신할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)를 상기 제 8 단위 처리기(PE8)로 출력할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 2 피쳐 (F32)와 상기 제 2 웨이트 데이터의 제 1 웨이트(W21)를 곱하여 F32W21를 생성하고, 이전에 계산된 F31W11과 F32W21을 합산할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 4 단위 처리기(PE4)으로부터 상기 제 1 웨이 트 데이터의 제 3 웨이트(W13)를 수신하고, 상기 제 5 단위 처리기(PE5)으로부터 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)를 수신할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 2 입력 피쳐 묶음의 제 1 피쳐(F21)와 상 기 제 1 웨이터 데이터의 제 3 웨이트(W13)를 곱하여 F21W13을 생성할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 5 단위 처리기(PE5)로부터 제 1 웨이트 데이터의 제 2 웨이트(W12)를 수신하고, 제 6 단위 처리기(PE 6)로부터 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)를 수신할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)와 상기 제 1 웨이트 데이터의 제 2 웨이트(W12)를 곱하여 F31W12를 생성할 수 있다. 다섯 번째 클럭 신호(CLK5)가 토글하면, 상기 제 2 단위 처리기(PE2)는 상기 제 1 입력 피쳐 묶음의 제 3 피쳐 (F13)를 상기 제 4 단위 처리기(PE4)로 출력하고, 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 상기 제 5 단 위 처리기(PE5)로 출력할 수 있다. 상기 제 3 단위 처리기(PE3)는 상기 제 2 입력 피쳐 묶음의 제 3 피쳐(F23) 를 상기 제 5 단위 처리기(PE5)로 출력하고, 상기 제 3 웨이트 데이터의 제 1 웨이트(W31)를 제 6 단위 처리기 (PE6)로 출력할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 다섯 번째 클럭 신호(CLK5)에 동기하여 상기 제 3웨이트 데이터의 제 3 웨이트(W33)를 수신하고, 상기 제 2 단위 처리기(PE2)로부터 상기 제 1 입력 피쳐 묶음의 제 3 피쳐(F13)를 수신할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 2 웨이트 데이터의 제 3 웨이트(W2 3)를 상기 제 7 단위 처리기(PE7)로 출력할 수 있다. 상기 제 4 단위 처리기(PE4)는 상기 제 1 입력 피쳐 묶음 의 제 3 피쳐(F13)와 상기 제 3 웨이트 데이터의 제 3 웨이트(W33)를 곱하여 F13W33을 생성하고, 이전에 계산된 F11W13+F12W23과 F13W33을 합산하여 연산 결과 (F11W13+F12W23+F13W33)를 저장할 수 있다. 상기 제 5 단위 처 리기(PE5)는 상기 제 2 단위 처리기(PE2)로부터 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)를 수신할 수 있다. 상기 제 5 단위 처리기 (PE5)는 상기 제 7 단위 처리기(PE7)로 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)를 출력하고, 상기 제 8 단위 처 리기(PE8)로 제 2 웨이트 데이터의 제 2 웨이트(W22)를 출력할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)와 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 곱하여 F23W32를 생성하 고, 이전에 계산된 F21W12+F22W22와 F23W32를 합산하여 연산 결과 (F21W12+F22W22+F23W32)를 저장할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 다섯 번째 클럭 신호(CLK6)에 동기하여 상기 제 3 입력 피쳐 묶음의 제 3 피쳐(F33)를 수신하고, 상기 제 3 단위 처리기(PE3)로부터 제 3 웨이트 데이터의 제 1 웨이트(W31)를 수신할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)를 상기 제 8 단위 처리기 (PE8)로 출력할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 3 피쳐(F33)와 상기 제 3 웨이트 데이터의 제 1 웨이트(W31)를 곱하여 F33W31을 생성하고, 이전에 계산된 F31W11+F32W21과 F33W31을 합산하여 연산 결과 (F31W11+F32W21+F33W31)를 저장할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 4 단위 처리기(PE4)로부터 제 2 웨이트 데이터의 제 3 웨이트(W23)를 수신하고, 상기 제 5 단위 처리기(PE5)로부터 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)를 수신할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 1 웨이트 데이터 의 제 3 웨이트(W13)를 상기 제 9 단위 처리기(PE9)로 출력할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 2 입력 피쳐 묶음의 제 2 피쳐(F22)와 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)를 곱하여 F22W23을 생성하 고, 이전에 계산된 F21W13과 F22W23을 합산할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 5 단위 처리기 (PE5)로부터 제 2 웨이트 데이터의 제 2 웨이트(W22)를 수신하고, 상기 제 6 단위 처리기(PE6)로부터 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)를 수신할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 3 입력 피쳐 묶음의 제 1 피쳐(F31)를 상기 제 9 단위 처리기(PE9)로 출력할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)와 상기 제 2 웨이트 데이터의 제 2 웨이트(W22)를 곱하여 F32W22를 생성하고, 이전 에 계산된 F31W12와 F32W22를 합산할 수 있다. 상기 제 9 단위 처리기(PE9)는 상기 제 7 단위 처리기(PE7)로부 터 제 1 웨이트 데이터의 제 3 웨이트(W13)를 수신하고, 상기 제 8 단위 처리기(PE8)로부터 제 3 입력 피쳐 묶 음의 제 1 피쳐(F31)를 수신할 수 있다. 상기 제 9 단위 처리기(PE9)는 상기 제 3 입력 피쳐 묶음의 제 1 피쳐 (F31)와 상기 제 1 웨이트 데이터의 제 3 웨이트(W13)를 곱하여 F31W13을 생성할 수 있다. 여섯 번째 클럭 신호(CLK6)가 토글하면, 상기 제 4 단위 처리기(PE4)는 상기 제 3 웨이트 데이터의 제 3 웨이트 (W33)를 상기 제 7 단위 처리기(PE7)로 출력할 수 있다. 상기 제 5 단위 처리기(PE5)는 상기 제 2 입력 피쳐 묶 음의 제 3 피쳐(F23)를 제 7 단위 처리기(PE7)로 출력하고, 제 3 웨이트 데이터의 제 2 비트(W32)를 상기 제 8 단위 처리기(PE8)로 출력할 수 있다. 상기 제 6 단위 처리기(PE6)는 상기 제 3 입력 피쳐 묶음의 제 3 피쳐 (F33)를 상기 제 8 단위 처리기(PE8)로 출력할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 4 단위 처리기 (PE4)로부터 제 3 웨이트 데이터의 제 3 웨이트(W33)를 수신하고, 상기 제 5 단위 처리기(PE5)로부터 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)를 수신할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)를 상기 제 9 단위 처리기(PE9)로 출력할 수 있다. 상기 제 7 단위 처리기(PE7)는 상기 제 2 입력 피쳐 묶음의 제 3 피쳐(F23)와 상기 제 3 웨이트 데이터의 제 3 웨이트(W33)를 곱하여 F23W33을 생성하고, 이전 에 계산된 F21W13+F22W23과 F23W33을 합산하여 연산 결과 (F21W13+F22W23+F23W33)를 저장할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 5 단위 처리기(PE5)로부터 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 수신 하고, 상기 제 6 단위 처리기(PE6)로부터 제 3 입력 피쳐 묶음의 제 3 피쳐(F33)를 수신할 수 있다. 상기 제 8 단위 처리기(PE8)는 상기 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)를 상기 제 9 단위 처리기(PE9)로 출력할 수 있 다. 상기 제 8 단위 처리기(PE8)는 상기 제 3 입력 피쳐 묶음의 제 3 피쳐(F33)와 상기 제 3 웨이트 데이터의 제 2 웨이트(W32)를 곱하여 F33W32를 생성하고, 이전에 계산된 F31W12+F32W22와 F33W32를 합산하여 연산 결과 (F31W12+F32W22+F33W32)를 저장할 수 있다. 상기 제 9 단위 처리기(PE9)는 상기 제 7 단위 처리기(PE7)로부터 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)를 수신하고, 상기 제 8 단위 처리기(PE8)로부터 제 3 입력 피쳐 묶음의 제 2 피쳐(F32)를 수신할 수 있다. 상기 제 9 단위 처리기(PE9)는 상기 제 3 입력 피쳐 묶음의 제 2 피 쳐(F32)를 상기 제 2 웨이트 데이터의 제 3 웨이트(W23)와 곱하여 F32W23을 생성하고, 이전에 계산된 F31W13과 F32W23을 합산할 수 있다.일곱 번째 클럭 신호(CLK7)가 토글하면, 상기 제 7 단위 처리기(PE7)는 상기 제 3 웨이트 데이터의 제 3 웨이트 (W33)를 상기 제 9 단위 처리기(PE9)로 출력하고, 상기 제 8 단위 처리기(PE8)는 제 3 입력 피쳐 묶음의 제 3 피쳐(F33)를 상기 제 9 단위 처리기(PE9)로 출력할 수 있다. 상기 제 9 단위 처리기(PE9)는 상기 제 3 입력 피 쳐 묶음의 제 3 피쳐(F33)와 상기 제 3 웨이트 데이터의 제 3 웨이트(W33)를 곱하여 F33W33을 생성하고, 이전에 계산된 F31W13+F32W23과 F33W33을 합산하여 연산 결과 (F31W13+F32W23+F33W33)을 저장할 수 있다. 여덟 번째 클럭 신호(CLK8)가 토글하면, 상기 제 1 내지 제 9 단위 처리기(PE1-PE9)의 연산 결과가 출력될 수 있고, 도 2b 에 도시된 것과 같이 제 1 내지 제 3 입력 피쳐 묶음(FD)과 제 1 내지 제 3 웨이트 데이터(WD)가 콘볼루션 연산 된 결과(FD X WD)가 상기 제 1 내지 제 9 단위 처리기(PE1-PE9)로부터 출력될 수 있다. 도 3은 본 발명의 실시예에 따른 시스템에서 데이터의 흐름을 보여주는 도면이다. 도 1 및 도 3을 참조하면, 상 기 호스트 장치는 상기 시스템 버스를 통해 제 1 입력 데이터(IND1)를 전송할 수 있다. 상기 제 1 입 력 데이터(IND1)는 복수의 입력 피쳐 묶음을 포함할 수 있다. 상기 시스템 버스의 데이터 대역폭은 하나의 피쳐의 사이즈보다 클 수 있고, 상기 시스템 버스를 통해 한번에 전송되는 데이터 비트는 복수의 피쳐를 포함할 수 있다. 예를 들어, 상기 시스템 버스의 데이터 대역폭이 32 비트이고, 하나의 피쳐의 사이즈가 8 비트라면, 상기 시스템 버스를 통해 4개의 피쳐가 한번에 전송될 수 있다. 상기 제 1 입력 데이터(IND1)가 256 비트일 때, 상기 제 1 입력 데이터(IND1)는 각각 8개의 피쳐를 포함하는 4개의 입력 피쳐 묶음을 포함할 수 있다. 도 3에서, 상기 시스템 버스의 데이터 대역폭은 32 비트인 것을 예시하였으나, 16 비트 이하일 수 도 있고, 64 비트 이상일 수도 있다. 또한, 하나의 피쳐의 사이즈는 8 비트인 것을 예시하였으나, 4 비트 이하 가 될 수도 있고, 16 비트 이상일 수도 있다. 상기 시스템 버스는 복수의 버스를 포함할 수 있다. 이하에서는, 설명의 명확성을 위해 상기 시스템 버스 를 통해 4개의 피쳐가 한번에 전송될 수 있다고 가정하기로 한다. 상기 시스템 버스는 제 1 내지 제 4 버스(311-314)를 포함할 수 있다. 상기 제 1 내지 제 4 버스(311-314)는 각각 복수의 신호 전송 라인을 포함 할 수 있다. 하나의 신호 전송 라인은 상기 제 1 입력 데이터(IND1)의 1 비트를 전송하기 위한 것일 수 있다. 하나의 버스는 하나의 피쳐에 대응하는 복수의 비트를 전송할 수 있는 신호 전송 라인들을 의미할 수 있다. 하 나의 버스는 8개의 신호 전송 라인을 포함하고, 하나의 피쳐는 8 비트를 포함하는 것으로 예시하기로 한다. 상기 제 1 내지 제 4 버스(311-314)는 상기 제 1 입력 데이터(IND1)의 비트들을 직렬 전송할 수 있다. 상기 제 1 입력 데이터(IND1)는 상기 제 1 내지 제 4 버스(311-314)를 통해 클럭 신호에 동기하여 8번에 걸쳐 전송될 수 있고, 총 256 비트를 포함할 수 있다. 제 1 버스는 클럭 신호에 동기하여 순차적으로 제 1 입력 데이터의 제 1 내지 제 8 비트(I11), 제 33 내지 제 40 비트(I15), 제 65 내지 제 72 비트(I21), 제 97 내지 제 104 비 트(I25), 제 129 내지 제 136 비트(I31), 제 161 내지 제 168 비트(I35), 제 193 내지 제200 비트(I41), 제 225 내지 제 232 비트(I45)를 전송할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 1 내지 제 8 비트(I11)는 상 기 제 1 입력 피쳐 묶음(FD1)의 제 1 피쳐(F11)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 33 내지 제 40 비트(I15)는 상기 제 1 입력 피쳐 묶음(FD1)의 제 5 피쳐(F15)에 대응할 수 있다. 상기 제 1 입력 데이터 (IND1)의 제 65 내지 제 72 비트(I21)는 제 2 입력 피쳐 묶음(FD2)의 제 1 피쳐(F21)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 97 내지 104 비트(I25)는 제 2 입력 피쳐 묶음(FD2)의 제 5 피쳐(F25)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 129 내지 136 비트(I31)는 제 3 입력 피쳐 묶음(FD3)의 제 1 피쳐 (F31)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 161 내지 168 비트(I35)는 제 3 입력 피쳐 묶음 (FD3)의 제 5 피쳐(F35)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 193 내지 제 200 비트(I41)는 제 4 입력 피쳐 묶음(FD4)의 제 1 피쳐(F41)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 225 내지 제 232 비트(I45)는 제 4 입력 피쳐 묶음(FD4)의 제 5 피쳐(F45)에 대응할 수 있다. 제 2 버스는 클럭 신호에 동기하여 순차적으로 제 1 입력 데이터(IND1)의 제 9 내지 제 16 비트(I12), 제 41 내지 제48 비트(I16), 제 73 내지 제 80 비트(I22), 제 105 내지 제 112 비트(I26), 제 137 내지 제 144 비 트(I32), 제 169 내지 제 176 비트(I36), 제 201 내지 제 208 비트(I42), 제 233 내지 제 240 비트(I46)을 전 송할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 9 내지 제 16 비트(I12)는 상기 제 1 입력 피쳐 묶음(FD1)의 제 2 피쳐(F12)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 41 내지 제 48 비트(I16)는 상기 제 1 입 력 피쳐 묶음(FD1)의 제 6 피쳐(F16)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 73 내지 제 80 비트 (I22)는 제 2 입력 피쳐 묶음(FD2)의 제 2 피쳐(F22)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 105 내지 제 112 비트(I26)는 제 2 입력 피쳐 묶음(FD2)의 제 6 피쳐(F26)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 137 내지 144 비트(I32)는 제 3 입력 피쳐 묶음(FD3)의 제 2 피쳐(F32)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 169 내지 176 비트(I36)는 제 3 입력 피쳐 묶음(FD3)의 제 6 피쳐(F36)에대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 201 내지 제 208 비트(I42)는 제 4 입력 피쳐 묶음(FD4)의 제 2 피쳐(F42)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 233 내지 제 240 비트(I46)는 제 4 입력 피쳐 묶음(FD4)의 제 6 피쳐(F46)에 대응할 수 있다. 제 3 버스는 클럭 신호에 동기하여 순차적으로 제 1 입력 데이터(IND1)의 제 17 내지 제 24 비트(I13), 제 49 내지 제 56 비트(I17), 제 81 내지 제 88 비트(I23), 제 113 내지 제 120 비트 (I27), 제 145 내지 제 152 비트(I33), 제 177 내지 제 184 비트(I37), 제 209 내지 제 216 비트(I43), 제 241 내지 제 248 비트(I47)를 전송할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 17 내지 제 24 비트(I13)는 상기 제 1 입력 피쳐 묶음(FD 1)의 제 3 피쳐(F13)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 49 내지 제 56 비트(I17)는 상기 제 1 입력 피쳐 묶음(FD1)의 제 7 피쳐(F17)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 81 내지 제 88 비트(I23)는 제 2 입력 피쳐 묶음(FD2)의 제 3 피쳐(F23)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 113 내지 제 120 비트(I27)는 제 2 입력 피쳐 묶음(FD2)의 제 7 피쳐(F27)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 145 내지 152 비트(I33)는 제 3 입력 피쳐 묶음(FD3)의 제 3 피쳐(F33)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 177 내지 184 비트(I37)는 제 3 입력 피쳐 묶음(FD3)의 제 7 피쳐(F37)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 209 내지 제 216 비트(I43)는 제 4 입력 피쳐 묶음(FD4)의 제 3 피쳐(F43)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 241 내지 제 248 비트(I47)는 제 4 입력 피쳐 묶음(FD4)의 제 7 피쳐(F47)에 대응할 수 있다. 제 4 버스는 클럭 신호에 동기하여 순차적으로 제 1 입력 데이터(IND1)의 제 25 내지 제 32 비트(I14), 제 57 내지 제 64 비트(I18), 제 89 내지 제 96 비트(I24), 제 121 내지 제 128 비트(I28), 제 153 내지 제 160 비트(I34), 제 185 내지 제 192 비트(I38), 제 217 내지 제 224 비트(I44), 제 249 내지 제 256 비트(I48)를 전송할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 25 내지 제 32 비트(I14)는 상기 제 1 입력 피쳐 묶음(FD 1)의 제 4 피쳐(F14)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 57 내지 제 64 비트(I18)는 상기 제 1 입력 피쳐 묶음(FD1)의 제 8 피쳐(F18)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 89 내지 제 96 비트(I24)는 제 2 입력 피쳐 묶음(FD2)의 제 4 피쳐(F24)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 121 내지 제 128 비트(I28)는 제 2 입력 피쳐 묶음(FD2)의 제 8 피쳐(F28)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 153 내지 160 비트(I34)는 제 3 입력 피쳐 묶음(FD3)의 제 4 피쳐(F34)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 185 내지 192 비트(I38)는 제 3 입력 피쳐 묶음(FD3)의 제 8 피쳐(F38)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 217 내지 제 224 비트(I44)는 제 4 입력 피쳐 묶음(FD4)의 제 4 피쳐(F44)에 대응할 수 있다. 상기 제 1 입력 데이터(IND1)의 제 249 내지 제 256 비트(I48)는 제 4 입력 피쳐 묶음(FD4)의 제 8 피쳐(F48)에 대응할 수 있다. 상기 연산 장치는 상기 제 1 입력 데이터(IND1)를 복수의 입력 피쳐 묶음으로 분류하고, 상기 연산 유닛 으로 상기 복수의 입력 피쳐 묶음(FD)을 제공하기 위해 상기 버퍼링 회로를 구비할 수 있다. 상기 버 퍼링 회로의 상기 버퍼는 복수의 FIFO 회로를 포함할 수 있다. 제 1 FIFO 회로(FIFO1)는 상기 제 1 입력 데이터(IND1)의 제 1 내지 제 64 비트(I11-I18)를 저장할 수 있고, 상기 제 1 FIFO 회로(FIFO1)에 저장된 정보는 제 1 입력 피쳐 묶음(FD1)에 대응할 수 있다. 제 2 FIFO 회로(FIFO2)는 상기 제 1 입력 데이터(IND1)의 제 65 내지 제 128 비트(I21-I28)를 저장할 수 있고, 상기 제 2 FIFO 회로(FIFO2)에 저장된 정보는 제 2 입력 피쳐 묶음(FD2)에 대응할 수 있다. 제 3 FIFO 회로(FIFO3)는 상기 제 1 입력 데이터(IND1)의 제 129 내지 제 192 비트(I31-I38)를 저장할 수 있고, 상기 제 3 FIFO 회로(FIFO3)에 저장된 정보는 제 3 입력 피쳐 묶음(FD 3)에 대응할 수 있다. 제 4 FIFO 회로(FIFO4)는 상기 제 1 입력 데이터(IND1)의 제 193 내지 제 256 비트(I41- I48)를 저장할 수 있고, 상기 제 4 FIFO 회로(FIFO4)에 저장된 정보는 제 4 입력 피쳐 묶음(FD4)에 대응할 수 있다. 상기 버퍼링 회로의 상기 버퍼 메모리는 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)을 상기 연산 유닛으로 동시에 제공할 수 있도록 상기 배치 동작을 수행할 수 있다. 입력 피쳐 묶음의 개수가 4개이므로, 상기 버퍼 메모리는 적어도 4개의 메모리를 포함할 수 있다. 도 3에 도시된 것과 같이, 상기 버퍼 메모리는 제 1 입력 피쳐 묶음 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 각 피쳐들(F11-F18, F21-F28, F31-F38, F41-F48)이 동시에 출력될 수 있도록 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 각 피쳐들 (F11-F18, F21-F28, F31-F38, F41-F48)를 4개의 메모리에 분할 저장시킬 필요가 있다. 이 때, 하나의 입력 피 쳐 묶음을 하나의 메모리에 저장시키는 경우, 상기 배치 동작이 충분히 수행될 수 있다. 하지만, 상기 입력 피 쳐 묶음의 사이즈는 데이터의 종류 및 특성 또는 어플리케이션에 따라 다양하게 변화될 수 있다. 하지만, 상기 메모리는 고정된 사이즈 및/또는 깊이(depth)를 갖는다. 따라서, 너무 작은 사이즈를 갖는 메모리를 사용하는경우 다양한 사이즈를 갖는 입력 피쳐 묶음을 저장하지 못할 수 있고, 너무 큰 사이즈를 갖는 메모리를 사용하 는 경우 메모리의 저장 공간 중 낭비되는 저장 공간이 너무 많아질 수 있다. 따라서, 최소한의 사이즈를 갖는 메모리를 사용하여 상기 입력 피쳐 묶음을 저장할 수 있는 효율적인 방식이 필요할 수 있다. 도 4는 본 발명의 실시예에 따른 버퍼 메모리의 구성 및 복수의 입력 피쳐 묶음을 버퍼 메모리에 저 장하는 방식을 보여주는 도면이다. 상기 버퍼 메모리는 도 1에 도시된 버퍼 메모리로 적용될 수 있다. 도 4에서, 상기 버퍼 메모리는 제 1 내지 제 4 메모리(410, 420, 430, 440)를 포함할 수 있다. 상 기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 각 피쳐들(F11-F18, F21-F28, F31-F38, F41-F48)은 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 나누어 저장될 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 동일한 순번의 피쳐를 저장하지 않을 수 있다. 하나의 입력 피쳐 묶음의 각 피쳐들은 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 나누어 저장될 수 있다. 상 기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 동일한 순번의 피쳐들은 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 하나씩 나누어 저장될 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 동일한 순번의 피 쳐들은 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 겹치지 않게 나누어 저장될 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 각 피쳐들(F11-F18, F21-F28, F31-F38, F41-F48)이 상기 제 1 내지 제 4 메모리(410-440)에 저장되는 순서는 서로 다를 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1- FD4)의 각 피쳐들(F11-F18, F21-F28, F31-F38, F41-F48)은 서로 쉬프팅된 순서로 상기 제 1 내지 제 4 메모리 (410-440)에 나누어 저장될 수 있다. 예를 들어, 제 k 입력 피쳐 묶음의 제 1 피쳐는 제 k 메모리에 저장될 수 있다. k는 1과 4 사이의 정수일 수 있다. 상기 제 1 입력 피쳐 묶음(FD1)의 제 1 내지 제 4 피쳐(F11, F12, F13, F14)는 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 각각 순서대로 저장될 수 있고, 상기 제 1 입 력 피쳐 묶음(FD1)의 제 5 내지 제 8 피쳐(FD5, FD6, FD7, FD8)는 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 각각 순서대로 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 1 내지 제 8 피쳐(F21-F28)가 저장 되는 메모리의 순서는 쉬프팅될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 1 내지 제 3 피쳐(F21, F22, F23)는 상기 제 2 내지 제 3 메모리(420, 430, 440)에 각각 순서대로 저장되고, 상기 제 2 입력 피쳐 묶음(FD 2)의 제 4 피쳐(F24)는 상기 제 1 메모리에 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 5 내지 제 7 피쳐(F25, F26, F27)는 상기 제 2 내지 제 3 메모리(420, 430, 440)에 각각 순서대로 저장되고, 상기 제 2 입력 피쳐 묶음(FD2)의 제 8 피쳐(F28)는 상기 제 1 메모리에 저장될 수 있다. 상기 제 3 입력 피쳐 묶 음(FD3)의 제 1 내지 제 8 피쳐(F31-F38)가 저장되는 메모리의 순서는 쉬프팅될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 1 및 제 2 피쳐(F31, F32)는 상기 제 3 및 제 4 메모리(430, 440)에 각각 순서대로 저장되고, 상기 제 3 입력 피쳐 묶음(FD3)의 제 3 및 제 4 피쳐(F33, F34)는 상기 제 1 및 제 2 메모리(410, 420)에 각각 순서대로 저장될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 5 및 제 6 피쳐(F35, F36)는 상기 제 3 및 제 4 메모리(430, 440)에 각각 순서대로 저장되고, 상기 제 3 입력 피쳐 묶음(FD3)의 제 7 및 제 8 피쳐(F37, F38)는 상기 제 1 및 제 2 메모리(410, 420)에 각각 순서대로 저장될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 1 내지 제 8 피쳐(F41-F48)가 저장되는 메모리의 순서는 쉬프팅될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 1 피쳐(F41)는 상기 제 4 메모리에 저장되고, 상기 제 4 입력 피쳐 묶음(FD4)의 제 2 내지 제 4 피쳐(F42, F43, F44)는 상기 제 1 내지 제 3 메모리(410, 420, 430)에 각각 순서대로 저장될 수 있다. 상기 제 4 입력 피 쳐 묶음(FD4)의 제 5 피쳐(F45)는 상기 제 4 메모리에 저장되고, 상기 제 4 입력 피쳐 묶음(FD4)의 제 6 내지 제 8 피쳐(F46, F47, F48)는 상기 제 1 내지 제 3 메모리(410, 420, 430)에 각각 순서대로 저장될 수 있 다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 각각 복수의 저장 영역을 포함할 수 있다. 상기 복수의 저 장 영역은 각각 하나의 피쳐를 저장할 수 있다. 상기 복수의 저장 영역의 개수는 하나의 입력 피쳐 묶음이 포함 하는 피쳐의 개수 이상일 수 있다. 도 4에서, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 각각 8개의 저장 영역을 포함하는 것을 예시하였으나, 더 많은 개수의 피쳐를 포함하는 입력 피쳐 묶음을 저장할 수 있도록 더 많은 개수의 저장 영역을 포함할 수 있다. 상기 복수의 저장 영역에는 서로 다른 어드레스가 할당 및/또는 맵핑되고, 할당 및/또는 맵핑된 어드레스에 기초하여 접근될 수 있다. 구체적으로, 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)이 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)에 저장되는 방식을 설명하면 다음과 같다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 라이트 동 작을 수행하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 각 피쳐들(F11-F18, F21-F28, F31-F38, F41- F48)을 저장할 수 있다. 상기 제 1 입력 피쳐 묶음(FD1)의 제 1 피쳐(F11)는 상기 제 1 메모리의 제 1 저 장 영역에 저장될 수 있다. 상기 제 1 입력 피쳐 묶음(FD1)의 제 2 피쳐 내지 제 4 피쳐(F12, F13, F14)는 제 2 내지 제 4 메모리(420, 430, 440)의 제 1 저장 영역(421, 431, 441)에 각각 저장될 수 있다. 상기 제 1 입력 피쳐 묶음(FD1)의 제 5 내지 제 8 피쳐(F15, F16, F17, F18)는 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 2 저장 영역(412, 422, 432, 442)에 각각 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 1 피쳐(F21)는 상기 제 2 메모리의 제 3 저장 영역에 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2) 의 제 2 및 제 3 피쳐(F22, F23)는 상기 제 3 및 제 4 메모리(430, 440)의 제 3 저장 영역(433, 443)에 각각 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD4)의 제 4 피쳐(F24)는 상기 제 1 메모리의 제 3 저장 영역 에 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 5 내지 제 7 피쳐(F25, F26, F27)는 상기 제 2 내지 제 4 메모리(420, 430, 440)의 제 4 저장 영역(424, 434, 444)에 각각 저장될 수 있고, 상기 제 2 입력 피쳐 묶음(FD2)의 제 8 피쳐(F28)는 상기 제 1 메모리의 제 4 저장 영역에 저장될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 1 피쳐(F31)는 상기 제 3 메모리의 제 5 저장 영역에 저장될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 2 피쳐(F32)는 상기 제 4 메모리의 제 5 저장 영역에 저장될 수 있고, 상기 제 3 입력 피쳐 묶음(FD3)의 제 3 및 제 4 피쳐(F33, F34)는 상기 제 1 및 제 2 메모리(410, 420) 의 제 5 저장 영역(415, 425)에 각각 저장될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 5 및 제 6 피쳐 (F35, F36)는 상기 제 3 및 제 4 메모리(430, 440)의 제 6 저장 영역(436, 446)에 각각 저장될 수 있고, 상기 제 3 입력 피쳐 묶음(FD3)의 제 7 및 제 8 피쳐(F37, F38)는 상기 제 1 및 제 2 메모리(410, 420)의 제 6 저장 영역(416, 426)에 각각 저장될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 1 피쳐(F41)는 상기 제 4 메모리 의 제 7 저장 영역에 저장될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 2 내지 제 4 피쳐(F42, F43, F44)는 상기 제 1 내지 제 3 메모리(410, 420, 430)의 제 7 저장 영역(417, 427, 437)에 각각 저장될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 5 피쳐(F45)는 상기 제 4 메모리의 제 8 저장 영역에 저 장될 수 있고, 상기 제 4 입력 피쳐 묶음(FD4)의 제 6 내지 제 8 피쳐(F46, F47, F48)는 상기 제 1 내지 제 3 메모리(410, 420, 430)의 제 8 저장 영역(418, 428, 438)에 각각 저장될 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 1 어드레스(ADD1)에 기초하여 상기 제 1 입력 피쳐 묶 음(FD1)의 제 1 내지 제 4 피쳐(F11, F12, F13, F14)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 1 저장 영역(411, 421, 431, 441)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 2 어드레스(ADD2)에 기초하여 상기 제 1 입력 피쳐 묶음(FD1)의 제 5 내지 제 8 피쳐(F15, F16, F17, F18)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 2 저장 영역(412, 422, 432, 442)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 3 어드레스(ADD3)에 기초하여 상기 제 2 입력 피쳐 묶음(FD2)의 제 1 내지 제 4 피쳐(F21, F22, F23, F24)를 상기 제 1 내지 제 4 메모리 (410, 420, 430, 440)의 제 3 저장 영역(413, 423, 433, 443)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 4 어드레스(ADD4)에 기초하여 상기 제 2 입력 피쳐 묶음(FD2)의 제 5 내지 제 8 피쳐(F25, F26, F27, F28)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 4 저장 영역 (414, 424, 434, 444)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 5 어드레스(ADD5)에 기초하여 상기 제 3 입력 피쳐 묶음(FD3)의 제 1 내지 제 4 피쳐(F31, F32, F33, F34)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 5 저장 영역(415, 425, 435, 445)에 각각 동시에 저장 할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 6 어드레스(ADD6)에 기초하여 상기 제 3 입력 피쳐 묶음(FD3)의 제 5 내지 제 8 피쳐(F35, F36, F37, F38)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 6 저장 영역(416, 426, 436, 446)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리 (410, 420, 430, 440)는 제 7 어드레스(ADD7)에 기초하여 상기 제 4 입력 피쳐 묶음(FD4)의 제 1 내지 제 4 피 쳐(F41, F42, F43, F44)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 7 저장 영역(417, 427, 437, 447)에 각각 동시에 저장할 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 8 어드레스(ADD 8)에 기초하여 상기 제 4 입력 피쳐 묶음(FD4)의 제 5 내지 제 8 피쳐(F45, F46, F47, F48)를 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 제 8 저장 영역(418, 428, 438, 448)에 각각 동시에 저장할 수 있다. 일 실시예에서, 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1)이 8개보다 적은 개수의 피쳐를 포함할 때, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)의 일부 저장 영역은 사용되지 않을 수 있다. 예를 들어, 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)이 각각 3개의 피쳐를 포함할 때, 상기 제 1 입력 피쳐 묶음(FD1)의 제 1 내지 제 3 피쳐(F11, F12, F13)는 상기 제 1 내지 제 3 메모리(410, 420, 430)의 제 1 저장 영역(411, 421, 431)에 각 각 저장될 수 있다. 상기 제 2 입력 피쳐 묶음(FD2)의 제 1 내지 제 3 피쳐(F21, F22, F23)는 상기 제 2 내지 제 4 메모리(420, 430, 440)의 제 2 저장 영역(422, 432, 442)에 각각 저장될 수 있다. 상기 제 3 입력 피쳐 묶음(FD3)의 제 1 내지 제 2 피쳐(F31, F32)는 상기 제 3 및 제 4 메모리(430, 440)의 제 3 저장 영역(433, 443)에 각각 저장되고, 상기 제 3 입력 피쳐 묶음(FD3)의 제 3 피쳐(F33)는 상기 제 1 메모리의 제 3 저장영역에 저장될 수 있다. 상기 제 4 입력 피쳐 묶음(FD4)의 제 1 피쳐(F41)는 상기 제 4 메모리의 제 4 저장 영역에 저장되고, 상기 제 4 입력 피쳐 묶음(FD4)의 제 2 및 제 3 피쳐(F42, F43)는 상기 제 1 및 제 2 메모리(410, 420)의 제 4 저장 영역(414, 424)에 각각 저장될 수 있다. 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 한 번의 리드 동작 중에 상기 제 1 내지 제 4 입력 피쳐 묶 음(FD1-FD4)의 동일한 순번의 피쳐를 동시에 출력할 수 있다. 제 1 리드 동작 중에, 상기 제 1 내지 제 4 메모 리(410, 420, 430, 440)는 제 1 어드레스(ADD1), 제 3 어드레스(ADD3), 제 5 어드레스(ADD5) 및 제 7 어드레스 (ADD7)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 1 피쳐(F11, F21, F31, F41)를 동 시에 출력할 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 1 피쳐(F11, F21, F31, F41)는 상기 연산 유닛의 4개의 연산 회로로 각각 제공될 수 있다. 제 2 리드 동작 중에, 상기 제 1 내지 제 4 메모리 (410, 420, 430, 440)는 제 7 어드레스(ADD7), 제 1 어드레스(ADD1), 제 3 어드레스(ADD3) 및 제 5 어드레스 (ADD5)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 2 피쳐(F12, F22, F32, F42)를 동 시에 출력할 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 2 피쳐(F12, F22, F32, F42)는 상기 4개의 연산 회로로 각각 제공될 수 있다. 제 3 리드 동작 중에, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 5 어드레스(ADD5), 제 7 어드레스(ADD7), 제 1 어드레스(ADD1) 및 제 3 어드레스(ADD3)에 각각 기초 하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 3 피쳐(F13, F23, F33, F43)를 동시에 출력할 수 있 다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 3 피쳐(F13, F23, F33, F43)는 상기 연산 유닛의 4개의 연산 회로로 각각 제공될 수 있다. 제 4 리드 동작 중에, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 3 어드레스(ADD3), 제 5 어드레스(ADD5), 제 7 어드레스(ADD7) 및 제 1 어드레스(ADD1)에 각각 기초 하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 4 피쳐(F14, F24, F34, F44)를 동시에 출력할 수 있 다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 4 피쳐(F14, F24, F34, F44)는 상기 4개의 연산 회로 로 각각 제공될 수 있다. 제 5 리드 동작 중에, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 2 어드 레스(ADD2), 제 4 어드레스(ADD4), 제 6 어드레스(ADD6) 및 제 8 어드레스(ADD8)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 5 피쳐(F15, F25, F35, F45)를 동시에 출력할 수 있다. 상기 제 1 내 지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 5 피쳐(F15, F25, F35, F45)는 상기 4개의 연산 회로로 각각 제공될 수 있다. 제 6 리드 동작 중에, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 8 어드레스(ADD8), 제 2 어드레스(ADD2), 제 4 어드레스(ADD4) 및 제 6 어드레스(ADD6)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD6)의 제 6 피쳐(F16, F26, F36, F46)를 동시에 출력할 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶 음(FD1-FD4)의 제 6 피쳐(F16, F26, F36, F46)는 상기 4개의 연산 회로로 각각 제공될 수 있다. 제 7 리드 동 작 중에, 상기 제 1 내지 제 4 메모리(410, 420, 430, 440)는 제 6 어드레스(ADD6), 제 8 어드레스(ADD8), 제 2 어드레스(ADD2) 및 제 4 어드레스(ADD4)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 7 피쳐(F17, F27, F37, F47)를 동시에 출력할 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 7 피쳐(F17, F27, F37, F47)는 상기 4개의 연산 회로로 각각 제공될 수 있다. 제 8 리드 동작 중에, 상기 제 1 내 지 제 4 메모리(410, 420, 430, 440)는 제 4 어드레스(ADD4), 제 6 어드레스(ADD6), 제 8 어드레스(ADD8) 및 제 2 어드레스(ADD2)에 각각 기초하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 8 피쳐(F18, F28, F38, F48)를 동시에 출력할 수 있다. 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 8 피쳐(F18, F28, F38, F48)는 상기 4개의 연산 회로로 각각 제공될 수 있다. 상기 연산 유닛은 상기 버퍼 메모리로부 터 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)의 제 1 내지 제 8 피쳐(F11-F18, F21-F28, F31-F38, F41- F48)를 순차적으로 수신하여 상기 제 1 내지 제 4 입력 피쳐 묶음(FD1-FD4)에 대한 연산 동작을 동시에 수행할 수 있다. 본 발명의 실시예는 작은 사이즈를 갖는 메모리를 사용하여 복수의 입력 피쳐 묶음에 대한 배치 동작 을 가능하게 하여 시스템의 동작 효율을 증가시키고, 연산 장치의 제조 비용을 감소시킬 수 있다."}
{"patent_id": "10-2019-0037832", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 발명이 속하는 기술분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고서 다른 구 체적인 형태로 실시될 수 있으므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 본 발명의 범위는 상기 상세한 설명보다는 후술하는 특허청구범위에 의하여 나 타내어지며, 특허청구범위의 의미 및 범위 그리고 그 등가개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2a 도면2b 도면3 도면4"}
{"patent_id": "10-2019-0037832", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시예에 따른 시스템의 구성을 보여주는 도면, 도 2a 및 도 2b는 본 발명의 실시예에 따른 연산 회로의 구성 및 연산 동작을 보여주는 도면, 도 3은 본 발명의 실시예에 따른 시스템에서 데이터의 흐름을 보여주는 도면, 도 4는 본 발명의 실시예에 따른 버퍼 메모리의 구성 및 복수의 입력 피쳐 묶음을 버퍼 메모리에 저장하는 방식을 보여주는 도면이다."}
