{"patent_id": "10-2019-0016490", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2020-0098856", "출원번호": "10-2019-0016490", "발명의 명칭": "전자 장치에서 스케줄 관리 방법 및 장치", "출원인": "삼성전자주식회사", "발명자": "정주희"}}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,디스플레이; 및상기 디스플레이와 연결된 적어도 하나의 프로세서를 포함하고, 상기 프로세서는,사용자로부터 디바이스의 운영과 연관된 스케줄 정보를 획득하고,상기 스케줄 정보에 기반하여 적어도 하나의 제1 스케줄을 생성하고, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하고,상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보를 비교하여, 상기 제1 스케줄과 상기 제2 스케줄간의 시간 정보가 적어도 일부 겹치는 구간을 식별하고,상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이스의 운영을 변경할 수 있는 옵션을 출력하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 프로세서는, 상기 캘린더 어플리케이션에 기반하여 상기 제1 스케줄의 디바이스와 연계하여 사용된 다른 디바이스를 식별하고,상기 다른 디바이스의 운영과 연관된 스케줄 정보를 획득하고, 상기 스케줄 정보에 기반하여 적어도 하나의 제3 스케줄을 생성하고, 상기 제3 스케줄을 포함하는 옵션을 출력하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 프로세서는, 상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 경우, 상기 캘린더 어플리케이션에기반하여 적어도 한 명의 다른 사용자와 관련된 스케줄 정보를 식별하고, 상기 식별된 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 제어를 위한 사용자를 선택하고, 상기 선택된 사용자에게 상기 디바이스와 관련된 운영을 요청하는 옵션을 출력하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 프로세서는,상기 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 운영이 가능한 후보 사용자를 검색하고, 공개특허 10-2020-0098856-3-상기 후보 사용자에서 상기 디바이스를 사용하는 빈도 순위에 따라 상기 디바이스의 제어를 위한 상기 사용자를선택하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 캘린더 어플리케이션은 적어도 하나의 디바이스와 관련된 스케줄과 다중 사용자와 관련된 스케줄을 포함하고, 상기 다중 사용자 간에 스케줄 공유가 가능한 어플리케이션인 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 프로세서는,상기 통신 회로를 이용하여, 상기 제1 스케줄과 관련된 상기 스케줄 정보를 외부 서버로 전송하고,상기 외부 서버로부터 상기 캘린더 어플리케이션에 저장되어 있는 상기 적어도 하나의 제2 스케줄과 관련된 스케줄 정보를 획득하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 프로세서는,상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보 간에 겹치지 않는 시간 정보를 식별하고,상기 식별된 시간 정보에 기반하여 상기 디바이스의 동작 모드를 식별하고,상기 동작 모드에 기반하여 상기 디바이스의 작동 소요시간을 변경하는 옵션을 출력하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 프로세서는,상기 옵션과 관련된 사용자 입력을 획득하고,상기 사용자 입력이 상기 디바이스의 운영을 변경하는 응답인 경우, 상기 제1 스케줄의 상기 시간 정보를 변경하고, 상기 변경된 시간 정보에 기반하여 상기 제1 스케줄을 상기 캘린더 어플리케이션에 등록하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 프로세서는,상기 사용자 입력이 상기 디바이스와 관련된 운영을 요청하는 응답인 경우, 선택된 다른 사용자의 응답을 획득하고,상기 다른 사용자의 응답에 기반하여 상기 제1 스케줄의 상기 시간 정보를 상기 캘린더 어플리케이션에 등록하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "공개특허 10-2020-0098856-4-제8항에 있어서,상기 사용자 입력은, 음성 입력 또는 매뉴얼 입력의 적어도 하나를 포함하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 상기 프로세서는,인공 지능 알고리즘을 이용하여 학습된 학습 모델(learning model)을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득하도록 하는 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서, 상기 프로세서는,상기 인공 지능 알고리즘으로서, 기계 학습(machine learning), 신경망(neural network), 유전자(genetic), 딥러닝(deep learning), 또는 분류 알고리즘(classification algorithm) 중 적어도 하나를 이용하여 학습된 학습모델을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고,상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득하도록 하는 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "전자 장치에 있어서,통신 회로; 출력 장치; 및상기 통신 회로 및 출력 장치와 연결된 적어도 하나의 프로세서를 포함하고,상기 프로세서는,사용자로부터 상기 전자 장치의 운영과 연관된 스케줄 정보를 획득하고,상기 스케줄 정보에 기반하여 스케줄을 생성하고,상기 통신 회로를 이용하여, 상기 스케줄 정보를 외부 서버로 전송하고,상기 스케줄과 관련된 상기 전자 장치의 운영을 변경할 수 있는 옵션을 획득하고,상기 출력 장치를 이용하여, 상기 옵션을 출력하고,사용자 입력에 기반하여 상기 옵션 중 어느 하나의 옵션을 선택하고, 상기 선택된 옵션의 스케줄 정보에 기반하여 상기 스케줄을 변경하도록 설정된 전자 장치."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "전자 장치의 동작 방법에 있어서,사용자로부터 디바이스의 운영과 연관된 스케줄 정보를 획득하는 동작,상기 스케줄 정보에 기반하여, 적어도 하나의 제1 스케줄을 생성하는 동작,캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하는 동작,상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보를 비교하여, 상기 제1 스케줄과 상기 제2 스케줄간의 시간 정보가 적어도 일부 겹치는 구간을 식별하는 동작,공개특허 10-2020-0098856-5-상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이스의 운영을 변경할 수 있는 옵션을 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 출력하는 동작은,상기 캘린더 어플리케이션에 기반하여 상기 제1 스케줄의 디바이스와 연계하여 사용된 다른 디바이스를 식별하는 동작,상기 다른 디바이스의 운영과 연관된 스케줄 정보를 획득하는 동작, 상기 스케줄 정보에 기반하여 적어도 하나의 제3 스케줄을 생성하는 동작, 상기 제3 스케줄을 포함하는 옵션을 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서, 상기 출력하는 동작은,상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 경우, 상기 캘린더 어플리케이션에기반하여 적어도 한 명의 다른 사용자와 관련된 스케줄 정보를 식별하는 동작, 상기 식별된 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 제어를 위한 사용자를 선택하는 동작, 상기 선택된 사용자에게 상기 디바이스와 관련된 운영을 요청하는 옵션을 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 상기 출력하는 동작은,상기 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 운영이 가능한 후보 사용자를 검색하는 동작, 상기 후보 사용자에서 상기 디바이스를 사용하는 빈도 순위에 따라 상기 디바이스의 제어를 위한 상기 사용자를선택하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제14항에 있어서, 상기 출력하는 동작은,상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보 간에 겹치지 않는 시간 정보를 식별하는 동작,상기 식별된 시간 정보에 기반하여 상기 디바이스의 동작 모드를 식별하는 동작,상기 동작 모드에 기반하여 상기 디바이스의 작동 소요시간을 변경하는 옵션을 출력하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제14항에 있어서, 상기 옵션과 관련된 사용자 입력을 획득하는 동작,상기 사용자 입력이 상기 디바이스의 운영을 변경하는 응답인 경우, 상기 제1 스케줄의 상기 시간 정보를 변경하고, 상기 변경된 시간 정보에 기반하여 상기 제1 스케줄을 상기 캘린더 어플리케이션에 등록하는 동작,공개특허 10-2020-0098856-6-상기 사용자 입력이 상기 디바이스와 관련된 운영을 요청하는 응답인 경우, 선택된 다른 사용자의 응답을 획득하고, 상기 다른 사용자의 응답에 기반하여 상기 제1 스케줄의 상기 시간 정보를 상기 캘린더 어플리케이션에등록하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제14항에 있어서, 상기 출력하는 동작은,인공 지능 알고리즘을 이용하여 학습된 학습 모델(learning model)을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득하는 동작을 포함하는 방법."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예들은 스케줄을 관리하는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에 따르면, 전자 장치는, 디스플레이, 및 상기 디스플레이와 연결된 적어도 하나의 프로세서를 포함하고, 상기 프로세서는, 사용 자로부터 디바이스의 운영과 관련된 스케줄 정보를 획득하고, 상기 스케줄 정보에 기반하여 적어도 하나의 제1 스케줄을 생성하고, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하고, 상기 제1 스케 줄의 시간 정보와 상기 제2 스케줄의 시간 정보를 비교하여, 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간을 식별하고, 상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이스의 운영을 변경할 수 있는 옵션을 출력할 수 있다. 다양한 실시예들이 가능하다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 다양한 실시예들은 전자 장치에서 스케줄을 관리하는 방법 및 장치에 관하여 개시한다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 디지털 기술의 발달과 함께 이동통신 단말기, 스마트폰(smart phone), 태블릿(tablet) PC(personal computer), 노트북(notebook), 웨어러블 장치(wearable device), 디지털 카메라(digital camera), 개인용 컴퓨 터(personal computer), 또는 사물 인터넷(IoT, internet of things) 장치 등과 같은 다양한 유형의 전자 장치 가 널리 사용되고 있다. 전자 장치는, 사용자의 스케줄(schedule) 관리를 위한 캘린더 어플리케이션(calendar application)을 제공하며, 사용자는 캘린더 어플리케이션을 이용하여 사용자의 스케줄을 등록 및 관리할 수 있다. 예를 들면, 사용자는 전 자 장치에서 캘린더 어플리케이션을 실행하고, 캘린더 어플리케이션을 이용하여, 사용자가 필요로 하는 스케줄 을 등록(또는 스케줄과 관련된 정보 입력)할 수 있다. 전자 장치는 캘린더 어플리케이션을 통해 사용자의 스케 줄이 등록되는 경우, 등록된 스케줄에 대한 스케줄 관리(예: 스케줄링(scheduling))을 수행하고, 해당 스케줄에 서 스케줄에 관련된 입력 정보를 사용자에게 피드백(feedback)(예: 정보 표시, 또는 효과음 출력) 할 수 있다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "하지만, 종래의 전자 장치에서 스케줄 관리는, 전자 장치의 사용자가 캘린더 어플리케이션을 이용하여 등록한 사용자의 스케줄과 관련된 스케줄링을 수행하고, 스케줄링 결과에 기반하여 해당 스케줄에 대한 단순한 피드백 만을 제공하고 있다. 다양한 실시예들에서는, 전자 장치에서 캘린더 어플리케이션(calendar application)에 기반하여 복수의 사용자 들에 관련된 사용자 별 스케줄(schedule)과, 디바이스와 연관된 스케줄을 등록하여 관리할 수 있는 방법 및 장 치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 사용자 별 사용자 스케줄과 디바이스 스케줄(예: 디바이스의 운영 스케 줄(operating schedule))에 기반하여 디바이스와 관련된 피드백(feedback)을 제공하는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 사용자 스케줄과 디바이스 스케줄이 충돌(conflict)하는 경우, 디바이스 의 동작 시간(예: 동작 완료 시간), 사용 기능, 및/또는 스케줄이 충돌되지 않는 디바이스 운영과 관련된 옵션 을 추천하는 방법 및 장치에 관하여 개시한다. 다양한 실시예들에서는, 전자 장치에서 다중 사용자의 스케줄과 연계하여 사용자 별 사용 패턴(또는 컨텍스트 (context))에 따라 디바이스 스케줄에 관련된 추천을 제공하거나, 디바이스를 제어하는 지능(intelligent) 스케줄 관리 방법 및 장치에 관하여 개시한다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치는, 디스플레이, 및 상기 디스플레이와 연결된 적어도 하나의 프로세서를 포 함하고, 상기 프로세서는, 사용자로부터 디바이스의 운영과 연관된 스케줄 정보를 획득하고, 상기 스케줄 정보 에 기반하여 적어도 하나의 제1 스케줄을 생성하고, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하고, 상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보를 비교하여, 상기 제1 스케줄 과 상기 제2 스케줄간의 시간 정보가 적어도 일부 겹치는 구간을 식별하고, 상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이스의 운영을 변경할 수 있는 옵션을 출력할 수 있다. 다양한 실시예들에 따른 전자 장치는, 통신 회로, 출력 장치, 및 상기 통신 회로 및 출력 장치와 연결된 적어도 하나의 프로세서를 포함하고, 상기 프로세서는, 사용자로부터 상기 전자 장치의 운영과 연관된 스케줄 정보를 획득하고, 상기 스케줄 정보에 기반하여 스케줄을 생성하고, 상기 통신 회로를 이용하여, 상기 스케줄 정보를 외부 서버로 전송하고, 상기 스케줄과 관련된 상기 전자 장치의 운영을 변경할 수 있는 옵션을 획득하고, 상기 출력 장치를 이용하여, 상기 옵션을 출력하고, 사용자 입력에 기반하여 상기 옵션 중 어느 하나의 옵션을 선택 하고, 상기 선택된 옵션의 스케줄 정보에 기반하여 상기 스케줄을 변경할 수 있다. 다양한 실시예들에 따른 전자 장치의 동작 방법은, 사용자로부터 디바이스의 운영과 연관된 스케줄 정보를 획득 하는 동작, 상기 스케줄 정보에 적어도 하나의 제1 스케줄을 생성하는 동작, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하는 동작, 상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보 를 비교하여, 상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간을 식별하는 동작, 상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이 스의 운영을 변경할 수 있는 옵션을 출력하는 동작을 포함할 수 있다. 상기와 같은 과제를 해결하기 위하여 본 발명의 다양한 실시예들에서는, 상기 방법을 프로세서에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 판독 가능한 기록 매체를 포함할 수 있다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예들에 따른 전자 장치 및 그의 동작 방법에 따르면, 스마트 홈(smart home) 환경에서 증가하는 디 바이스들에 대해, 다중 사용자의 스케줄과 연계하여 사용자 별 사용 패턴에 따라 디바이스를 지능적으로 제어할 수 있는 인텔리전트 시스템을 제공할 수 있다. 다양한 실시예들에 따르면, 사용자 입력에 따른 디바이스 스케줄 (예: 신규 스케줄) 및 디바이스 스케줄과 인접한 사용자 스케줄이 충돌하는 경우, 디바이스의 작동 소요시간과 관련된 변경 옵션(예: 디바이스 사용 및/또는 제어와 관련된 옵션)을 제안할 수 있다. 일 실시예에 따르면, 디 바이스의 작동 완료 시간을 사용자 스케줄에 맞추기 위해 디바이스의 작동 소요시간을 변경하는 옵션을 제안할 수 있다. 일 실시예에 따르면, 다른 사용자의 스케줄을 참조하여 해당 디바이스의 자동 완료 시간에 대응 가능 한 사용자를 검색하고, 해당 디바이스를 사용하는 빈도 순위에 따라 최상위 사용자를 추출하여 태스크를 요청하 는 옵션을 제안할 수 있다. 일 실시예에 따르면, 사용자의 스케줄 정보를 분석하여 식별 태그를 생성하고, 식별 태그와 관련된 추가 디바이스의 작동을 제안할 수 있다. 다양한 실시예들에 따르면, 디바이스 스케줄과 사용자 스케줄이 충돌하는 경우에도, 사용자의 사용자 스케줄을 가능하도록 하면서도 디바이스 스케줄을 병행할 수 있 어, 사용자의 편의성을 향상할 수 있다."}
{"patent_id": "10-2019-0016490", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 장치, 음향 출력 장치, 표시 장치, 오디오 모듈, 센서 모듈, 인터페이스, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈 , 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성 요소들 중 적어도 하나(예: 표시 장치 또는 카메라 모듈)가 생략되거나, 하나 이상의 다른 구성 요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성 요소들 중 일부들은 하나의 통합된 회로로 구현될 수 있다. 예를 들면, 센서 모듈(예: 지문 센서, 홍채 센서, 또는 조도 센서)은 표시 장치(예: 디스플레이)에 임베디드 (embedded)된 채 구현될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성 요소(예: 하드웨어 또는 소프트웨어 구성 요소)를 제어할 수 있고, 다양한 데 이터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로 세서는 다른 구성 요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발 성 메모리(volatile memory)에 로드(load)하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하 고, 결과 데이터를 비휘발성 메모리(non-volatile memory)에 저장할 수 있다. 일 실시예에 따르면, 프로세 서는 메인 프로세서(예: 중앙 처리 장치(CPU, central processing unit) 또는 어플리케이션 프로세 서(AP, application processor)), 및 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래 픽 처리 장치(GPU, graphic processing unit), 이미지 시그널 프로세서(ISP, image signal processor), 센서 허브 프로세서(sensor hub processor), 또는 커뮤니케이션 프로세서(CP, communication processor))를 포함할 수 있다. 추가적으로 또는 대체적으로, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 또 는 지정된 기능에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일 부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(inactive)(예: 슬립(sleep)) 상태에 있는 동 안 메인 프로세서를 대신하여, 또는 메인 프로세서가 액티브(active)(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서와 함께, 전자 장치의 구성 요소들 중 적어도 하나의 구성 요소(예: 표시 장 치, 센서 모듈, 또는 통신 모듈)과 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으 로 관련 있는 다른 구성 요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성 요소(예: 프로세서 또는 센서모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제(OS, operating system), 미들웨어(middleware) 또는 어플리케이션을 포함할 수 있다. 입력 장치는, 전자 장치의 구성 요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 장치는, 예를 들면, 마이크, 마우스, 키보드, 또는 디지털 펜(예: 스타일러스 펜) 등을 포함할 수 있다. 음향 출력 장치는 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 장치는, 예를 들 면, 스피커(speaker) 또는 리시버(receiver)를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같 이 일반적인 용도로 사용될 수 있고, 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 표시 장치는 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 표시 장치는, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로를 포함할 수 있다. 일 실시예에 따르면, 표시 장치는 터치를 감지하도록 설정된 터치 회로(touch circuitry), 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 센서 회로(예: 압력 센서(pressure sensor))를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 장치를 통해 소리를 획득하거나, 음향 출력 장치, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰))를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서(gesture sensor), 자이로 센서(gyro sensor), 기압 센서(barometer sensor), 마그네틱 센서(magnetic sensor), 가속도 센서(acceleration sensor), 그립 센서(grip sensor), 근접 센서(proximity sensor), 컬러 센서(color sensor)(예: RGB(red, green, blue) 센서), IR(infrared) 센서, 생 체 센서(biometric sensor), 온도 센서(temperature sensor), 습도 센서(humidity sensor), 또는 조도 센서 (illuminance sensor) 등을 포함할 수 있다. 인터페이스는 전자 장치의 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜(protocol)들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스 는, 예를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD(secure digital) 카드 인터페이스, 또는 오디오 인터페이스 등을 포함할 수 있다. 연결 단자(connection terminal)는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치) 와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터) 등을 포함할 수 있다. 햅틱 모듈(haptic module)은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계 적인 자극(예: 진동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈 은, 예를 들면, 모터(motor), 압전 소자(piezoelectric element), 또는 전기 자극 장치(electrical stimulation device) 등을 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성 요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지(fuel cell)를 포함 할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제1 네트워크(예: 블 루투스, Wi-Fi direct 또는 IrDA(infrared data association) 같은 근거리 통신 네트워크) 또는 제2 네트워크 (예: 셀룰러 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN(wide area network))와 같은 원 거리 통신 네트워크)를 통하여 외부 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성 요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI, international mobile subscriber identity))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 및 인증할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루 어진 방사체를 포함하는 하나의 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안 테나들을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크에서 사 용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나 들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모듈과 외 부 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC)가 추가로 안테나 모듈의 일부로 형성될 수 있다. 상기 구성 요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))를 통해 서로 연결되고, 신호(예: 명령 또는 데이터)를 상호 간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치 간에 송신 또는 수신될 수 있다. 전자 장치(102, 104) 각각은 전자 장치와 동일한 또 는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부 전자 장치들(102, 104 또는 108) 중 하나 이상의 외부 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부 전자 장치들(102, 104)에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부 전 자 장치들(102, 104)은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비 스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전자 장치는 상기 결과를, 그대로 또 는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅(cloud computing), 분산 컴퓨팅(distributed computing), 또는 클라이언트-서버 컴퓨팅 (client-server computing) 기술이 이용될 수 있다. 본 발명의 다양한 실시예들을 서술하기에 앞서, 본 발명의 일 실시예가 적용될 수 있는 통합 지능화 시스템에 대해 설명한다. 도 2는 다양한 실시예들에 따른 통합 지능화(integrated intelligence) 시스템을 나타낸 블록도이다. 도 2를 참조하면, 일 실시예의 통합 지능화 시스템(또는, 인공 지능(AI, artificial intelligent) 시스템)(2 0)은 사용자 단말(예: 도 1의 전자 장치), 지능형 서버, 및 서비스 서버를 포함할 수 있다. 일 실시예의 사용자 단말은, 인터넷에 연결 가능한 단말 장치(또는, 전자 장치)일 수 있으며, 예를 들어, 휴대폰, 스마트폰, PDA(personal digital assistant), 노트북 컴퓨터, TV(television), 백색 가전(major appliance or domestic appliance), 웨어러블 장치, HMD(head mounted display), 또는 스마트 스피커(smart speaker)일 수 있다. 일 실시예에 따르면, 사용자 단말은 통신 인터페이스, 마이크, 스피커, 디스플레이, 메모리, 및 프로세서를 포함할 수 있다. 상기 열거된 구성 요소들은 서로 작동적으로 또는 전기적으 로 연결될 수 있다. 일 실시예에 따르면, 통신 인터페이스는 외부 장치와 연결되어 데이터를 송수신하도록 구성될 수 있다. 일 실시예에 따르면, 마이크는 소리(예: 사용자 발화)를 수신하여, 전기적 신호로 변환할 수 있다. 일 실 시예에 따르면, 스피커는 전기적 신호를 소리(예: 음성)로 출력할 수 있다. 일 실시예에 따르면, 디스플레 이는 이미지 또는 비디오를 표시하도록 구성될 수 있다. 일 실시예에 따르면, 디스플레이는 실행되는앱(app)(또는, 어플리케이션 프로그램(application program))의 그래픽 사용자 인터페이스(GUI, graphic user interface)를 표시할 수 있다. 일 실시예에 따르면, 메모리는 클라이언트 모듈, SDK(software development kit), 및 복수의 앱들을 저장할 수 있다. 상기 클라이언트 모듈, 및 SDK는 범용적인 기능을 수행하기 위한 프레 임워크(framework)(또는, 솔루션 프로그램(solution program))를 구성할 수 있다. 또한, 클라이언트 모듈 또는 SDK는 음성 입력을 처리하기 위한 프레임워크를 구성할 수 있다. 일 실시예에 따르면, 상기 복수의 앱들은 지정된 기능을 수행하기 위한 프로그램일 수 있다. 일 실시예에 따르면, 복수의 앱들은 제1 앱(255_1), 제2 앱(255_3)을 포함할 수 있다. 일 실시예에 따르면, 복수의 앱 들 각각은 지정된 기능을 수행하기 위한 복수의 동작들을 포함할 수 있다. 예를 들어, 복수의 앱들 은, 알람 앱, 메시지 앱, 또는 스케줄 앱 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 복수의 앱들 은 프로세서에 의해 실행되어 상기 복수의 동작들 중 적어도 일부를 순차적으로 실행할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 단말의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로 세서는 통신 인터페이스, 마이크, 스피커, 디스플레이, 및 메모리와 전기적으로 연결되어 지정된 동작을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 상기 메모리에 저장된 프로그램을 실행시켜 지정된 기능을 수행할 수 있다. 예를 들어, 프로세서는 클라이언트 모듈 또는 SDK 중 적어도 하나를 실행하여, 음성 입력을 처리하기 위한 이하의 동작을 수행할 수 있다. 프로세서는, 예를 들어, SDK를 통해 복수의 앱들의 동작을 제어할 수 있다. 클라이언트 모듈 또는 SDK의 동작으로 설명된 이하의 동작은 프로세서의 실행에 의한 동작일 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 음성 입력을 수신할 수 있다. 예를 들어, 클라이언트 모듈 은 마이크를 통해 감지된 사용자 발화에 대응되는 음성 신호를 생성할 수 있다. 클라이언트 모듈은 수신된 음성 입력을 지능형 서버로 송신할 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 수신된 음성 입력과 함께, 사용자 단말의 상태 정보를 지능형 서버로 송신할 수 있다. 상기 상태 정보는, 예 를 들어, 앱의 실행 상태 정보일 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 수신된 음성 입력에 대응되는 결과를 수신할 수 있다. 예를 들어, 클라이언트 모듈은 지능형 서버로부터 음성 입력에 대응되는 결과를 수신할 수 있다. 클라이언트 모 듈은 상기 수신된 결과를 디스플레이에 표시할 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 수신된 음성 입력에 대응되는 플랜(plan)을 수신할 수 있다. 클 라이언트 모듈은 플랜에 따라 앱의 복수의 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 예 를 들어, 클라이언트 모듈은 복수의 동작의 실행 결과를 순차적으로 디스플레이에 표시할 수 있다. 다른 예를 들어, 사용자 단말은 복수의 동작을 실행한 일부 결과(예: 마지막 동작의 결과)만을 디스플레이(24 0)에 표시할 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 지능형 서버로부터 음성 입력에 대응되는 결과를 산출하기 위해 필요한 정보를 획득하기 위한 요청을 수신할 수 있다. 상기 결과를 산출하기 위해 필요한 정보는, 예를 들 어, 사용자 단말의 상태 정보일 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 상기 요청에 대응 하여 상기 필요한 정보를 지능형 서버로 송신할 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 플랜에 따라 복수의 동작을 실행한 결과 정보를 지능형 서버(30 0)로 송신할 수 있다. 지능형 서버는 상기 결과 정보를 통해 수신된 음성 입력이 올바르게 처리된 것을 확인할 수 있다. 일 실시예에 따르면, 클라이언트 모듈은 음성 인식 모듈을 포함할 수 있다. 일 실시예에 따르면, 클라이 언트 모듈은 상기 음성 인식 모듈을 통해 제한된 기능을 수행하는 음성 입력을 인식할 수 있다. 예를 들 어, 클라이언트 모듈은 지정된 입력(예: 웨이크 업)을 통해 유기적인 동작을 수행하기 위한 음성 입력을 처리하기 위한 지능형 앱을 수행할 수 있다. 일 실시예에 따르면, 지능형 서버는 통신 망을 통해 사용자 단말로부터 사용자 음성 입력과 관련된 정보를 수신할 수 있다. 일 실시예에 따르면, 지능형 서버는 수신된 음성 입력과 관련된 데이터를 텍스트 데이터(text data)로 변경할 수 있다. 일 실시예에 따르면, 지능형 서버는 상기 텍스트 데이터에 기초하여 사용자 음성 입력과 대응되는 태스크(task)를 수행하기 위한 플랜(plan)을 생성할 수 있다 일 실시예에 따르면, 플랜은 인공 지능(AI, artificial intelligent) 시스템에 의해 생성될 수 있다. 인공 지 능 시스템은 룰 베이스 시스템(rule-based system) 일 수도 있고, 신경망 베이스 시스템(neural network-based system)(예: 피드포워드 신경망(FNN, feedforward neural network), 순환 신경망(RNN, recurrent neural network))일 수도 있다. 또는, 전술한 것의 조합 또는 이와 상이한 인공 지능 시스템일 수도 있다. 일 실시예 에 따르면, 플랜은 미리 정의된 플랜의 집합에서 선택될 수 있거나, 사용자 요청에 응답하여 실시간으로 생성될 수 있다. 예를 들어, 인공 지능 시스템은 미리 정의된 복수의 플랜 중 적어도 하나의 플랜을 선택할 수 있다. 일 실시예에 따르면, 지능형 서버는 생성된 플랜에 따라 산출된 결과를 사용자 단말로 송신하거나, 생성된 플랜을 사용자 단말로 송신할 수 있다. 일 실시예에 따르면, 사용자 단말은 플랜에 따라 산 출된 결과를 디스플레이에 표시할 수 있다. 일 실시예에 따르면, 사용자 단말은 플랜에 따른 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 일 실시예의 지능형 서버는 프론트 엔드(front end), 자연어 플랫폼(natural language platform), 캡슐 데이터베이스(capsule DB), 실행 엔진(execution engine), 엔드 유저 인터페 이스(end user interface), 매니지먼트 플랫폼(management platform), 빅 데이터 플랫폼(big data platform), 및 분석 플랫폼(analytic platform)을 포함할 수 있다. 일 실시예에 따르면, 프론트 엔드는 사용자 단말로부터 수신된 음성 입력을 수신할 수 있다. 프론트 엔드는 상기 음성 입력에 대응되는 응답을 송신할 수 있다. 일 실시예에 따르면, 자연어 플랫폼은 자동 음성 인식 모듈(automatic speech recognition module)(ASR module), 자연어 이해 모듈(natural language understanding module)(NLU module), 플래너 모듈 (planner module), 자연어 생성 모듈(natural language generator module)(NLG module), 및 텍스트 음성 변환 모듈(text to speech module)(TTS module)를 포함할 수 있다. 일 실시예에 따르면, 자동 음성 인식 모듈은 사용자 단말로부터 수신된 음성 입력을 텍스트 데이터로 변환할 수 있다. 일 실시예에 따르면, 자연어 이해 모듈은 음성 입력의 텍스트 데이터를 이용하여 사용자 의 의도를 파악할 수 있다. 예를 들어, 자연어 이해 모듈은 문법적 분석(syntactic analyze) 또는 의미적 분석(semantic analyze)을 수행하여 사용자의 의도를 파악할 수 있다. 일 실시예에 따르면, 자연어 이해 모듈 은 형태소 또는 구의 언어적 특징(예: 문법적 요소)을 이용하여 음성 입력으로부터 추출된 단어의 의미를 파악하고, 상기 파악된 단어의 의미를 의도에 매칭시켜 사용자의 의도를 결정할 수 있다. 일 실시예에 따르면, 플래너 모듈은 자연어 이해 모듈에서 결정된 의도 및 파라미터를 이용하여 플랜 을 생성할 수 있다. 일 실시예에 따르면, 플래너 모듈은 상기 결정된 의도에 기초하여 태스크를 수행하기 위해 필요한 복수의 도메인(domain)을 결정할 수 있다. 플래너 모듈은 상기 의도에 기초하여 결정된 복수 의 도메인 각각에 포함된 복수의 동작을 결정할 수 있다. 일 실시예에 따르면, 플래너 모듈은 상기 결정 된 복수의 동작을 실행하는데 필요한 파라미터나, 상기 복수의 동작의 실행에 의해 출력되는 결과 값을 결정할 수 있다. 상기 파라미터 및 상기 결과 값은 지정된 형식(또는, 클래스)과 관련된 컨셉(concept)으로 정의될 수 있다. 이에 따라, 플랜은 사용자의 의도에 의해 결정된 복수의 동작(action), 및 복수의 컨셉을 포함할 수 있 다. 상기 플래너 모듈은 상기 복수의 동작, 및 상기 복수의 컨셉 사이의 관계를 단계적(또는, 계층적)으 로 결정할 수 있다. 예를 들어, 플래너 모듈은 복수의 컨셉에 기초하여 사용자의 의도에 기초하여 결정된 복수의 동작의 실행 순서를 결정할 수 있다. 다시 말해, 플래너 모듈은 복수의 동작의 실행에 필요한 파 라미터, 및 복수의 동작의 실행에 의해 출력되는 결과에 기초하여, 복수의 동작의 실행 순서를 결정할 수 있다. 이에 따라, 플래너 모듈은 복수의 동작, 및 복수의 컨셉 사이의 연관 정보(예: 온톨로지(ontology))가 포 함된 플랜을 생성할 수 있다. 상기 플래너 모듈은 컨셉과 동작의 관계들의 집합이 저장된 캡슐 데이터베 이스에 저장된 정보를 이용하여 플랜을 생성할 수 있다. 일 실시예에 따르면, 자연어 생성 모듈은 지정된 정보를 텍스트 형태로 변경할 수 있다. 상기 텍스트 형 태로 변경된 정보는 자연어 발화의 형태일 수 있다. 일 실시예의 텍스트 음성 변환 모듈은 텍스트 형태의 정보를 음성 형태의 정보로 변경할 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 복수의 도메인에 대응되는 복수의 컨셉과 복수의 동작의 관계에 대한 정보를 저장할 수 있다. 예를 들어, 캡슐 데이터베이스는 플랜의 복수의 동작 오브젝트(action object)(또는, 동작 정보) 및 컨셉 오브젝트(concept object)(또는, 컨셉 정보)를 포함하는 복수의 캡슐을 저장할 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 CAN(concept action network)의 형태로 상기 복 수의 캡슐을 저장할 수 있다. 일 실시예에 따르면, 복수의 캡슐은 캡슐 데이터베이스에 포함된 기능 저장 소(function registry)에 저장될 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 음성 입력에 대응되는 플랜을 결정할 때 필요한 전략 정보가 저 장된 전략 레지스트리(strategy registry)를 포함할 수 있다. 상기 전략 정보는 음성 입력에 대응되는 복수의 플랜이 있는 경우, 하나의 플랜을 결정하기 위한 기준 정보를 포함할 수 있다. 일 실시예에 따르면, 캡슐 데이 터베이스는 지정된 상황에서 사용자에게 후속 동작을 제안하기 위한 후속 동작의 정보가 저장된 후속 동작 레지스트리(follow up registry)를 포함할 수 있다. 상기 후속 동작은, 예를 들어, 후속 발화를 포함할 수 있 다. 일 실시예에 따르면, 캡슐 데이터베이스는 사용자 단말을 통해 출력되는 정보의 레이아웃 (layout) 정보를 저장하는 레이아웃 레지스트리(layout registry)를 포함할 수 있다. 일 실시예에 따르면, 캡 슐 데이터베이스는 캡슐 정보에 포함된 어휘(vocabulary) 정보가 저장된 어휘 레지스트리(vocabulary registry)를 포함할 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 사용자와의 대화(dialog)(또는, 인터랙션(interaction)) 정보가 저장된 대화 레지스트리(dialog registry)를 포함할 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 개발자 툴(developer tool)을 통해 저장된 오브젝트를 업데이트 (update)할 수 있다. 상기 개발자 툴은, 예를 들어, 동작 오브젝트 또는 컨셉 오브젝트를 업데이트하기 위한 기능 에디터(function editor)를 포함할 수 있다. 상기 개발자 툴은 어휘를 업데이트하기 위한 어휘 에디터 (vocabulary editor)를 포함할 수 있다. 상기 개발자 툴은 플랜을 결정하는 전략을 생성 및 등록하는 전략 에 디터(strategy editor)를 포함할 수 있다. 상기 개발자 툴은 사용자와의 대화를 생성하는 대화 에디터(dialog editor)를 포함할 수 있다. 상기 개발자 툴은 후속 목표를 활성화하고, 힌트를 제공하는 후속 발화를 편집할 수 있는 후속 동작 에디터(follow up editor)를 포함할 수 있다. 상기 후속 목표는 현재 설정된 목표, 사용자 의 선호도 또는 환경 조건에 기초하여 결정될 수 있다. 일 실시예에 따르면, 캡슐 데이터베이스는 사용자 단말 내에도 구현될 수 있다. 다시 말해, 사용자 단말은 음성 입력에 대응되는 동작을 결정하기 위한 정보를 저장하는 캡슐 데이터베이스를 포함할 수 있다. 일 실시예에 따르면, 실행 엔진은 상기 생성된 플랜을 이용하여 결과를 산출할 수 있다. 일 실시예에 따 르면, 엔드 유저 인터페이스는 산출된 결과를 사용자 단말로 송신할 수 있다. 이에 따라, 사용자 단 말은 상기 결과를 수신하고, 상기 수신된 결과를 사용자에게 제공할 수 있다. 일 실시예에 따르면, 매니 지먼트 플랫폼은 지능형 서버에서 이용되는 정보를 관리할 수 있다. 일 실시 예에 따르면, 빅 데이 터 플랫폼은 사용자의 데이터를 수집할 수 있다. 일 실시예에 따르면, 분석 플랫폼은 지능형 서버 의 QoS(quality of service)를 관리할 수 있다. 예를 들어, 분석 플랫폼은 지능형 서버의 구 성 요소 및 처리 속도(또는, 효율성)를 관리할 수 있다. 일 실시예에 따르면, 서비스 서버는 사용자 단말에 지정된 서비스(예: 음식 주문 또는 호텔 예약)를 제공할 수 있다. 일 실시예에 따르면, 서비스 서버는 제3 자에 의해 운영되는 서버일 수 있다. 예를 들 어, 서비스 서버는 서로 다른 제3 자에 의해 운영되는 제1 서비스 서버, 제2 서비스 서버, 및/ 또는 제3 서비스 서버를 포함할 수 있다. 일 실시예에 따르면, 서비스 서버는 수신된 음성 입력에 대응되는 플랜을 생성하기 위한 정보를 지능형 서버에 제공할 수 있다. 상기 제공된 정보는, 예를 들어, 캡슐 데이터베이스에 저장될 수 있다. 또한, 서비스 서버는 플랜에 따른 결과 정보를 지능형 서버 에 제공할 수 있다. 상기에 기술된 통합 지능화 시스템에서, 상기 사용자 단말은, 사용자 입력에 응답하여 사용자에게 다 양한 인텔리전트 서비스를 제공할 수 있다. 상기 사용자 입력은, 예를 들어, 물리적 버튼을 통한 입력, 터치 입력 또는 음성 입력을 포함할 수 있다. 일 실시예에 따르면, 상기 사용자 단말은 내부에 저장된 지능형 앱(또는, 음성 인식 앱)을 통해 음성 인식 서비스를 제공할 수 있다. 이 경우, 예를 들어, 사용자 단말은 상기 마이크를 통해 수신된 사용자 발화(utterance) 또는 음성 입력(voice input)을 인식하고, 인식된 음성 입력에 대응되는 서비스를 사용자에게 제공할 수 있다. 일 실시예에 따르면, 사용자 단말은 수신된 음성 입력에 기초하여, 단독으로 또는 상기 지능형 서버 및/또는 서비스 서버와 함께 지정된 동작을 수행할 수 있다. 예를 들어, 사용자 단말은 수신된 음성입력에 대응되는 앱을 실행시키고, 실행된 앱을 통해 지정된 동작을 수행할 수 있다. 일 실시예에 따르면, 사용자 단말이 지능형 서버 및/또는 서비스 서버와 함께 서비스를 제공하 는 경우에는, 상기 사용자 단말은, 상기 마이크를 이용하여 사용자 발화를 감지하고, 상기 감지된 사 용자 발화에 대응되는 신호(또는, 음성 데이터)를 생성할 수 있다. 상기 사용자 단말은, 상기 음성 데이 터를 통신 인터페이스를 이용하여 지능형 서버로 송신할 수 있다. 일 실시예에 따르면, 지능형 서버는 사용자 단말로부터 수신된 음성 입력에 대한 응답으로써, 음성 입력에 대응되는 태스크(task)를 수행하기 위한 플랜, 또는 상기 플랜에 따라 동작을 수행한 결과를 생성할 수 있다. 상기 플랜은, 예를 들어, 사용자의 음성 입력에 대응되는 태스크(task)를 수행하기 위한 복수의 동작, 및 상기 복수의 동작과 관련된 복수의 컨셉을 포함할 수 있다. 상기 컨셉은 상기 복수의 동작의 실행에 입력되 는 파라미터나, 복수의 동작의 실행에 의해 출력되는 결과 값을 정의한 것일 수 있다. 상기 플랜은 복수의 동 작, 및 복수의 컨셉 사이의 연관 정보를 포함할 수 있다. 일 실시예의 사용자 단말은, 통신 인터페이스를 이용하여 상기 응답을 수신할 수 있다. 사용자 단말 은 상기 스피커를 이용하여 사용자 단말 내부에서 생성된 음성 신호를 외부로 출력하거나, 디스 플레이를 이용하여 사용자 단말 내부에서 생성된 이미지를 외부로 출력할 수 있다. 도 3은 다양한 실시예들에 따른 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 상기 지능형 서버의 캡슐 데이터베이스(예: 캡슐 데이터베이스)는 CAN(concept action network) 형태로 복수의 캡슐을 저장할 수 있다. 상기 캡슐 데이터베이스는 사용자의 음성 입력에 대응되 는 태스크를 처리하기 위한 동작, 및 상기 동작을 위해 필요한 파라미터(parameter)를 CAN(concept action network) 형태로 저장할 수 있다. 상기 CAN은 동작(action)과 상기 동작을 수행하는데 필요한 파라미터를 정의 한 컨셉(concept) 사이의 유기적인 관계를 나타낸 것일 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인(예: 어플리케이션) 각각에 대응되는 복수의 캡슐(예: Capsule A, Capsule B)을 저장할 수 있다. 일 실시예에 따르면, 하나의 캡슐(예: Capsule A)은 하나의 도메인 (예: 어플리케이션)에 대응될 수 있다. 또한, 하나의 캡슐은 캡슐과 관련된 도메인의 기능을 수행하기 위한 적 어도 하나의 서비스 제공자(예: CP 1, CP 2, CP 3, 또는 CP 4)에 대응될 수 있다. 일 실 시예에 따르면, 하나의 캡슐은 지정된 기능을 수행하기 위한 적어도 하나 이상의 동작 및 적어도 하나 이 상의 컨셉을 포함할 수 있다. 일 실시예에 따르면, 자연어 플랫폼은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 수신된 음성 입력에 대응하는 태스크를 수행하기 위한 플랜을 생성할 수 있다. 예를 들어, 자연어 플랫폼(예: 자연어 플랫폼) 의 플래너 모듈은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 플랜을 생성할 수 있다. 예를 들어, Capsule A의 동작들(5011, 5013)과 컨셉들(5012, 5014) 및 Capsule B의 동작과 컨셉들 을 이용하여 플랜을 생성할 수 있다. 도 4는 다양한 실시예들에 따른 사용자 단말이 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나 타낸 도면이다. 일 실시예에 따르면, 사용자 단말은 지능형 서버를 통해 사용자 입력을 처리하기 위해 지능형 앱을 실행할 수 있다. 일 실시예에 따르면, 410 화면에서, 사용자 단말은 지정된 음성 입력(예: 웨이크 업!)을 인식하거나 하드 웨어 키(예: 전용 하드웨어 키)를 통한 입력을 수신하면, 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있 다. 사용자 단말은, 예를 들어, 스케줄 앱을 실행한 상태에서 지능형 앱을 실행할 수 있다. 일 실시예에 따르면, 사용자 단말은 지능형 앱에 대응되는 오브젝트(예: 아이콘)를 디스플레이에 표시할 수 있다. 일 실시예에 따르면, 사용자 단말은 사용자 발화에 의한 음성 입력을 수신할 수 있다. 예를 들어, 사용자 단말은 “이번 주 일정 알려줘!”라는 음성 입력을 수신할 수 있다. 일 실시예에 따르면, 사용자 단말은 수신된 음성 입력의 텍스트 데이터가 표시된 지능형 앱의 UI(user interface)(예: 입력창)를 디스플레이에 표시할 수 있다.일 실시예에 따르면, 420 화면에서, 사용자 단말은 수신된 음성 입력에 대응되는 결과를 디스플레이 에 표시할 수 있다. 예를 들어, 사용자 단말은 수신된 사용자 입력에 대응되는 플랜을 수신하고, 플랜에 따라 ‘이번 주 일정’을 디스플레이에 표시할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치(10 1)는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨어 러블 장치(wearable device), 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전 술한 기기들에 한정되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경(modifications), 균등물(equivalents), 또는 대체물 (alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성 요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다 르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", “A 또는 B 중 적어도 하나”, \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\" 및 “A, B, 또는 C 중 적어도 하나”와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성 요소를 다른 해당 구성 요소와 구분하기 위해 사용될 수 있으며, 해당 구성 요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제1) 구성 요소 가 다른(예: 제2) 구성 요소에 \"기능적으로” 또는 “통신적으로\"라는 용어와 함께 또는 이런 용어 없이, “커 플드” 또는 “커넥티드”라고 언급된 경우, 그것은 상기 어떤 구성 요소가 상기 다른 구성 요소에 직접적으로 (예: 유선으로), 무선으로, 또는 제3 구성 요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어(firmware)로 구현된 유닛(unit)을 포함할 수 있으며, 예를 들면, 로직(logic), 논리 블록(logic block), 부품(component), 또는 회로(circuit) 등의 용 어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부가 될 수 있다. 일 실시예에 따르면, 모듈은 ASIC(application- specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치)에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들(instructions)을 포함하 는 소프트웨어(예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서)는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운 영되는 것을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러(compiler) 생성된 코드 또는 인터프리터 (interpreter)에 의해 실행될 수 있는 코드(code)를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시 적(non-transitory) 저장 매체의 형태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible) 하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저 장 매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: CD-ROM, compact disc read only memory)의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성 요소들의 각각의 구성 요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있다. 다양한 실시예들에 따르면, 전술한 해당 구성 요소들 중 하나 이상의 구성 요소 들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구성 요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성 요소들(예: 모듈 또는 프로그램)은 하나의 구성 요소로 통합될 수 있다. 이런 경우, 통합된 구성 요소는 상기 복수의 구성 요소들 각각의 구성 요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성 요소들 중 해당 구성 요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱(heuristic)하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 5는 다양한 실시예들에 따른 스케줄 관리를 위한 시스템을 도시하는 도면이다. 일 실시예에 따라, 도 5는, 전자 장치(또는 도 2의 사용자 단말)가 스케줄 관리를 위한 어플리케이션 (예: 캘린더 어플리케이션(calendar application), 그룹(또는 패밀리) 캘린더 어플리케이션, 또는 디바이스 캘 린더 어플리케이션)을 이용한 사용자 입력(예: 스케줄 등록)에 기반하여, 스케줄(예: 사용자와 연관된 스케줄 (이하, ‘사용자 스케줄’이라 한다) 및/또는 디바이스와 연관된 스케줄(이하, ‘디바이스 스케줄’이라 한 다))을 생성하고, 생성된 스케줄에 다른 스케줄과 충돌하는 경우 디바이스의 운영(예: 사용 및/또는 제어)과 관 련된 추천을 제공하기 위한 시스템 구조(system architecture)의 예를 나타낼 수 있다. 다양한 실시예들에 따르 면, 시스템은, 예를 들어, 스마트 홈(smart home) 환경에서, 사용자의 캘린더 일정 입력을 수신하여 디바이 스를 작동시키는 디바이스와 관련된 스케줄 관리를 제공할 수 있다. 일 실시예에 따르면, 시스템은, 디바이 스 스케줄 및 디바이스 스케줄과 인접한 사용자 스케줄이 충돌하는 경우, 디바이스의 운영(예: 사용 및/또는 제 어)과 관련된 다양한 추천(예: 디바이스의 기능 또는 동작 옵션 변경)을 제공할 수 있으며, 이러한 동작은, 실 시예에 따라, 전자 장치에 의해 동작하거나, 또는 외부 서버에 의해 동작할 수 있다. 도 5를 참조하면, 다양한 실시예들에 따른 시스템은, 전자 장치(또는, 도 2의 사용자 단말), 외 부 서버, 및 디바이스(또는, 주변 장치, 외부 장치)를 포함할 수 있다. 일 실시예에 따라, 전자 장치는 프로세서, 메모리, 및 통신 모듈을 포함할 수 있다. 일 실시예에 따라, 전자 장치의 메모리는 사용자와 관련된 스케줄(예: 사용자 스케줄, 디바이스 스케 줄) 생성 및 관리를 위한 어플리케이션(예: 캘린더 어플리케이션)과 사용자 입력에 기반하여 어플리케이션 에 의해 생성되는 스케줄 정보에 기반한 스케줄 데이터를 저장할 수 있다. 일 실시예에 따라, 사용자 의 스케줄과 관련된 서비스를 전자 장치와 작동적으로 연결된 외부 서버에 의해 수행하는 경우, 전자 장치의 어플리케이션은 외부 서버의 메모리에 저장된 어플리케이션과 연동될 수 있으 며, 스케줄 데이터는 외부 서버의 메모리에 저장될 수 있다. 일 실시예에 따라, 전자 장치의 통신 모듈은 통신 처리(communication processing)를 위한 회로를 포함하는 커뮤니케이터(communicator)일 수 있다. 일 실시예에 따라, 통신 모듈은 프로세서의 제어에 기반하여 사용자 입력에 따른 스케줄 정보를 외부 서버로 전송할 수 있다. 일 실시예에 따라, 통신 모듈 은 외부 서버로부터 디바이스의 옵션과 관련된 추천 정보, 디바이스의 제어와 관련된 정보(또는, 커 맨드(command)), 다중 사용자와 관련된 스케줄 정보를 포함하는 사용자 인터페이스와 같은 데이터를 수신할 수 있다. 일 실시예에 따라, 통신 모듈은 직접(예: 유선) 통신 채널 또는 무선 통신 채널 중 적어도 하나의 통신 채널에 기반하여 디바이스와 연결할 수 있고, 연결된 통신 채널을 통해 다양한 데이터(또는, 커맨 드)를 제공할 수 있다. 일 실시예에 따라, 전자 장치의 프로세서는 어플리케이션(예: 캘린더 어플리케이션)을 실행하고, 캘린더 어플리케이션과 관련된 사용자 인터페이스를 통해 사용자 입력을 수신하여 디바이스와 관련된 디바이스 스케줄을 생성할 수 있다. 일 실시예에 따라, 프로세서는 사용자 입력에 따른 디바이스 스케줄 (예: 신규 스케줄) 및 디바이스 스케줄과 인접한 사용자 스케줄이 충돌하는 경우, 디바이스 작동 소요시간과 관 련된 변경 옵션을 제안할 수 있다. 예를 들면, 프로세서는 디바이스의 작동 완료 시간을 사용자 스케줄에 맞추기 위해 디바이스의 작동 소요시간을 변경하는 옵션을 제안할 수 있다. 일 실시예에 따라, 프로세서는 다른 사용자의 스케줄을 참조하여 해당 디바이스의 자동 완료 시간에 대응 가능한 사용자를 검색하고, 해당 디 바이스를 사용하는 빈도 순위에 따라 최상위 사용자를 추출하여 태스크를 요청하는 옵션을 제안할 수 있다. 일 실시예에 따라, 프로세서는 사용자의 스케줄 정보를 분석하여 식별 태그를 생성하고, 식별 태그와 관련된 추가 디바이스의 작동을 제안할 수 있다. 일 실시예에 따라, 전자 장치(또는, 프로세서)의 동작에 관 하여 후술하는 도면들을 참조하여 설명된다. 다양한 실시예들에 따르면, 전자 장치는, 스마트 홈 환경에서 주변의 디바이스를 관리하는 중앙 제어 기기(central control equipment), 허브(hub), 인공 지능 장치(예: AI 스피커 등), 또는 중앙 서버(central server)(또는 통합 서버(integration server)) 역할을 할 수 있다. 일 실시예에 따르면, 전자 장치는 캘린더 어플리케이션이 아닌, 전자 장치의 조작(예: 모드 설정)과 관련된 사용자 입력에 기반하여, 스케줄 관리에 관련된 동작을 처리할 수도 있다. 일 실시예에 따르면, 전자 장 치의 프로세서는 사용자로부터 디바이스 스케줄(예: 전자 장치의 운영 모드)과 관련된 스케줄 정보(예: 모드 설정)를 입력 받을 수 있다. 예를 들면, 사용자는 사용하고자 하는 전자 장치(예: 세탁기) 에서 원하는 모드를 설정할 수 있고, 프로세서는 모드 설정과 관련된 사용자 입력을 스케줄 정보로서 획득 할 수 있다. 일 실시예에 따라, 프로세서는 디바이스 스케줄과 관련된 동작을 실행(예: 설정 모드를 실 행)하기 전에, 사용자와 관련되고, 디바이스 스케줄과 인접한 다른 스케줄(예: 인접 스케줄)과의 충돌 여부를 식별할 수 있다. 일 실시예에 따라, 디바이스는 스케줄 간에 충돌을 판단하는 경우, 디바이스 스케줄과 관 련된 다른 스케줄 정보(예: 다른 모드 설정 값)를 추천할 수 있다. 일 실시예에 따라, 외부 서버는 프로세서, 메모리, 및 통신 회로를 포함할 수 있다. 일 실 시예에 따르면, 외부 서버는, 예를 들면, 캘린더 관리 서버, 서비스 서버, 디바이스 관리 서버, 또는 클라 우드 서버를 포함할 수 있다. 일 실시예에 따라, 외부 서버의 메모리는 사용자와 관련된 스케줄(예: 사용자 스케줄, 디바이스 스케 줄) 생성 및 관리를 위한 어플리케이션(예: 캘린더 어플리케이션)과 사용자 입력에 기반하여 어플리케이션 에 의해 생성되는 스케줄 정보에 기반한 스케줄 데이터를 저장할 수 있다. 일 실시예에 따라, 사용자 의 스케줄과 관련된 서비스를 외부 서버에 의해 수행하는 경우, 어플리케이션은 전자 장치의 메 모리에 저장된 어플리케이션과 작동적으로 연동될 수 있다. 일 실시예에 따라, 외부 서버의 통신 회로는 통신 처리(communication processing)를 위한 회로를 포함하는 커뮤니케이터(communicator)일 수 있다. 일 실시예에 따라, 통신 회로는 프로세서의 제어에 기반하여 사용자 입력에 따른 스케줄 정보를 전자 장치로 전송할 수 있다. 일 실시예에 따라, 통신 회로 는 디바이스의 옵션과 관련된 추천 정보, 디바이스의 제어와 관련된 정보(또는, 커맨드(command)), 다중 사용자와 관련된 스케줄 정보를 포함하는 사용자 인터페이스와 같은 데이터를 전자 장치로 전송할 수 있다. 일 실시예에 따라, 통신 회로는 무선 통신 채널에 기반하여 전자 장치 및/또는 디바이스 와 연결할 수 있고, 연결된 통신 채널을 통해 다양한 데이터(또는, 커맨드)를 제공할 수 있다. 일 실시예에 따라, 외부 서버의 프로세서는 다양한 실시예들에 따른 스케줄 관리가 외부 서버에 서 수행하는 경우, 관련된 동작을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 전자 장치로부터 스케줄 정보를 수신하고, 수신된 스케줄 정보에 기반하여 스케줄(예: 전자 장치의 사용자와 관련된 사용자 스케줄, 또는 액세스가 허용된 계정(account)의 사용자와 관련된 사용자 스케줄)을 생성할 수 있다. 일 실시예 에 따르면, 프로세서는 스케줄 정보를 분석하여 스케줄 정보가 디바이스 스케줄을 포함하는 경우 디바이스 스케줄을 생성할 수 있다. 일 실시예에 따라, 프로세서는 스케줄 간의 충돌 여부를 식별할 수 있다. 일 실 시예에 따르면, 프로세서는 사용자와 관련된 다른 스케줄(또는 신규 스케줄과 인접(예: 시간적으로 인접) 한 인접 스케줄) 간에 충돌 여부를 식별하고, 스케줄 간에 충돌하는 경우, 추천 정보를 생성하여 전자 장치 에 제공할 수 있다. 일 실시예에 따라, 프로세서는 사용자 입력에 따른 디바이스 스케줄(예: 신규 스 케줄) 및 디바이스 스케줄과 인접한 사용자 스케줄이 충돌하는 경우, 디바이스 작동 소요시간과 관련된 변경 옵 션을 제안할 수 있다. 예를 들면, 프로세서는 디바이스의 작동 완료 시간을 사용자 스케줄에 맞추기 위해 디바이스의 작동 소요시간을 변경하는 옵션을 제안할 수 있다. 일 실시예에 따라, 프로세서는 다른 사용자 의 스케줄을 참조하여 해당 디바이스의 자동 완료 시간에 대응 가능한 사용자를 검색하고, 해당 디바이스를 사 용하는 빈도 순위에 따라 최상위 사용자를 추출하여 태스크를 요청하는 옵션을 제안할 수 있다. 일 실시예에 따 라, 프로세서는 사용자의 스케줄 정보를 분석하여 식별 태그를 생성하고, 식별 태그와 관련된 추가 디바이 스의 작동을 제안할 수 있다. 일 실시예에 따라, 외부 서버(또는, 프로세서)의 동작에 관하여 후술하 는 도면들을 참조하여 설명된다. 다양한 실시예들에 따르면, 도 5에서는 외부 서버의 동작을 도시하였으나, 외부 서버는, 예를 들면, 캘린더 관리 서버, 서비스 서버, 또는 연결 디바이스 관리 서버와 같이 복수의 서버를 포함할 수 있고, 복수의 서버에 기반하여 외부 서버의 동작은 분산 처리될 수 있다. 일 실시예에 따라, 디바이스는 다중 사용자(예: 사용자 및/또는 다른 사용자)에 의해 사용 및/또는 제어될 수 있는 다양한 종류의 주변 장치(예: 가전 장치(581, 582, 583, 584, 585))를 포함할 수 있다. 일 실시 예에따라, 디바이스에 대해 도 5에서 개략적으로 도시하였으나, 디바이스는 도 1에 도시된 전자 장치 의 구성 요소들의 일부 또는 전부를 포함할 수 있다. 예를 들면, 디바이스는 도 1에 도시된 전자 장 치와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 디바이스는 직접(예: 유선) 통신 채널 또는 무선 통신 채널 중 적어도 하나의 통신 채널에 기반하여 전자 장치와 연결될 수 있다. 일 실시예에 따르면, 디바이스는 무선 통신 채널에 기 반하여 외부 서버와 연결될 수 있다. 다양한 실시예들에 따르면, 디바이스는, 전자 장치 또는 외부 서버로부터 제어 정보 및/또는 커맨드를 수신하고, 수신된 제어 정보 및/또는 커맨드에 기반하여 동 작할 수 있다. 일 실시예에 따르면, 디바이스는 사용자로부터 디바이스 스케줄과 관련된 스케줄 정보(예: 모드 설정)를 입력 받을 수 있다. 예를 들면, 사용자는 사용하고자 하는 디바이스(예: 세탁기)에서 원하는 모드를 설정 할 수 있고, 디바이스는 모드 설정과 관련된 사용자 입력을 스케줄 정보로서 획득할 수 있다. 일 실시예에 따라, 디바이스는 디바이스 스케줄과 관련된 동작을 실행(예: 설정 모드를 실행)하기 전에, 사용자와 관련 되고, 디바이스 스케줄과 인접한 다른 스케줄(예: 인접 스케줄)과의 충돌 여부를 식별할 수 있다. 일 실시예에 따라, 디바이스는 외부 서버를 통해 스케줄 간의 충돌 여부를 확인 받을 수 있다. 일 실시예에 따라, 디바이스는 스케줄 간에 충돌을 판단하는 경우, 디바이스 스케줄과 관련된 다른 스케줄 정보(예: 다른 모 드 설정 값)를 추천할 수 있다. 일 실시예에 따르면, 디바이스는 통신 회로를 이용하여, 디바이스 스케줄 과 관련된 스케줄 정보를 외부 서버로 전송하고, 외부 서버로부터 다른 스케줄 정보를 수신하고, 상 기 수신된 다른 스케줄 정보를 사용자에게 제공할 수 있다. 일 실시예에 따르면, 디바이스는 서버(예: 내부 서버(예: 전자 장치), 또는 외부 서버)와 각각 연결될 수 있다. 예를 들면, 디바이스 스케줄에 따른 디바이스 제어와 관련된 모든 처리 동작이 특정 서버에 의 해 제어되는 중앙 집중 제어(centralized control) 시스템으로 동작할 수 있다. 일 실시예에 따라, 특정 서버는, 디바이스와 동일한 공간에 배치되는 내부 서버(예: 전자 장치), 또는 외부에 배치되는 외부 서버를 포함할 수 있다. 예를 들면, 내부 서버는, 중앙 서버로서, 예를 들면, 별도의 중앙 제어 기기, 또 는 어느 일 전자 장치를 이용할 수 있다. 예를 들면, 외부 서버는, 외부(예: 인터넷 상)의 어딘가에 존재하는 서버로서, 예를 들면, 클라우드 서버, 계정 서버, 서비스 서버, 또는 웹 서버 등을 포함할 수 있다. 이상에서 살펴본 바와 같이, 다양한 실시예들에 따른 전자 장치는, 디스플레이, 및 상기 디스플레이와 연 결된 적어도 하나의 프로세서를 포함하고, 상기 프로세서는, 사용자로부터 디바이스의 운영과 연관된 스케줄 정 보를 획득하고, 상기 스케줄 정보에 기반하여 적어도 하나의 제1 스케줄을 생성하고, 캘린더 어플리케이션에 저 장되어 있는 적어도 하나의 제2 스케줄을 식별하고, 상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정 보를 비교하여, 상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간을 식별하고, 상 기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반하여, 상기 제1 스케줄과 관련된 상기 디바이스 의 운영을 변경할 수 있는 옵션을 출력할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 캘린더 어플리케이션에 기반하여 상기 제1 스케줄의 디바이 스와 연계하여 사용된 다른 디바이스를 식별하고, 상기 다른 디바이스의 운영과 연관된 스케줄 정보를 획득하고, 상기 스케줄 정보에 기반하여 적어도 하나의 제3 스케줄을 생성하고, 상기 제3 스케줄을 포함하는 옵 션을 출력할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어도 일 부 겹치는 경우, 상기 캘린더 어플리케이션에 기반하여 적어도 한 명의 다른 사용자와 관련된 스케줄 정보를 식 별하고, 상기 식별된 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 제어를 위 한 사용자를 선택하고, 상기 선택된 사용자에게 상기 디바이스와 관련된 운영을 요청하는 옵션을 출력할 수 있 다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하 여 상기 디바이스의 운영이 가능한 후보 사용자를 검색하고, 상기 후보 사용자에서 상기 디바이스를 사용하는 빈도 순위에 따라 상기 디바이스의 제어를 위한 상기 사용자를 선택할 수 있다. 다양한 실시예들에 따르면, 상기 캘린더 어플리케이션은 적어도 하나의 디바이스와 관련된 스케줄과 다중 사용 자와 관련된 스케줄을 포함하고, 상기 다중 사용자 간에 스케줄 공유가 가능한 어플리케이션인 것을 특징으로할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 통신 회로를 이용하여, 상기 제1 스케줄과 관련된 상기 스케 줄 정보를 외부 서버로 전송하고, 상기 외부 서버로부터 상기 캘린더 어플리케이션에 저장되어 있는 상기 적어 도 하나의 제2 스케줄과 관련된 스케줄 정보를 획득할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정보 간 에 겹치지 않는 시간 정보를 식별하고, 상기 식별된 시간 정보에 기반하여 상기 디바이스의 동작 모드를 식별하 고, 상기 동작 모드에 기반하여 상기 디바이스의 작동 소요시간을 변경하는 옵션을 출력할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 옵션과 관련된 사용자 입력을 획득하고, 상기 사용자 입력이 상기 디바이스의 운영을 변경하는 응답인 경우, 상기 상기 제1 스케줄의 상기 시간 정보를 변경하고, 상기 변경 된 시간 정보에 기반하여 상기 제1 스케줄을 상기 캘린더 어플리케이션 등록할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 사용자 입력이 상기 디바이스와 관련된 운영을 요청하는 응 답인 경우, 선택된 다른 사용자의 응답을 획득하고, 상기 다른 사용자의 응답에 기반하여 상기 제1 스케줄의 상 기 시간 정보를 상기 캘린더 어플리케이션에 등록할 수 있다. 다양한 실시예들에 따르면, 상기 사용자 입력은, 음성 입력 또는 매뉴얼 입력의 적어도 하나를 포함할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 인공 지능 알고리즘을 이용하여 학습된 학습 모델(learning model)을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득할 수 있다. 다양한 실시예들에 따르면, 상기 프로세서는, 상기 인공 지능 알고리즘으로서, 기계 학습(machine learning), 신경망(neural network), 유전자(genetic), 딥러닝(deep learning), 또는 분류 알고리즘(classification algorithm) 중 적어도 하나를 이용하여 학습된 학습 모델을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영 과 관련된 추천 정보를 획득할 수 있다. 이상에서 살펴본 바와 같이, 다양한 실시예들에 따른 전자 장치는, 통신 회로, 출력 장치, 및 상기 통신 회로 및 출력 장치와 연결된 적어도 하나의 프로세서를 포함하고, 상기 프로세서는, 사용자로부터 상기 전자 장 치의 운영과 연관된 스케줄 정보를 획득하고, 상기 스케줄 정보에 기반하여 스케줄을 생성하고, 상기 통신 회로 를 이용하여, 상기 스케줄 정보를 외부 서버로 전송하고, 상기 스케줄과 관련된 상기 전자 장치의 운영을 변경 할 수 있는 옵션을 획득하고, 상기 출력 장치를 이용하여, 상기 옵션을 출력하고, 사용자 입력에 기반하여 상기 옵션 중 어느 하나의 옵션을 선택하고, 상기 선택된 옵션의 스케줄 정보에 기반하여 상기 스케줄을 변경할 수 있다. 다양한 실시예들에 따라, 이하에서 설명하는 전자 장치(또는 도 2의 사용자 단말)에서 수행하는 동작 들은, 전자 장치의 적어도 하나의 프로세서(예: 프로세싱 회로를 포함하는 적어도 하나의 프로세서로서, 예를 들면, 도 1 또는 도 5의 프로세서서, 또는 도 2의 프로세서)(이하, ‘프로세서’라 한다) 에 의해 실행될 수 있다. 일 실시예에 따라, 전자 장치에서 수행하는 동작들은, 메모리(예: 도 1 또는 도 5의 메모리)에 저장되고, 실행 시에, 프로세서가 동작하도록 하는 인스트럭션들(instructions)에 의 해 실행될 수 있다. 다양한 실시예들에 따르면, 전자 장치는, 디스플레이(예: 도 1의 표시 장치, 도 2의 디스플레이), 디스플레이와 작동적으로 연결된 적어도 하나의 프로세서, 및 프로세서에 작 동적으로 연결된 메모리(예: 도 1 또는 도 5의 메모리)(이하, ‘메모리’이라 한다)를 포함할 수 있 다. 일 실시예에 따라, 메모리는, 사용자 인터페이스를 포함하는 어플리케이션(예: 캘린더 어플리케이션) 및 스케줄 데이터(예: 도 5의 스케줄 데이터)을 저장하도록 구성될 수 있다. 다양한 실시예들에 따르면, 프로세서는 인공 지능(AI) 알고리즘을 이용하여 학습된 학습 모델(learning model)을 이용하여, 캘린더 어플리케이션에서 스케줄들(예: 사용자 스케줄, 디바이스 스케줄)을 구성하여 제공 하는 것에 관련된 동작을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 인공 지능 알고리즘을 이용하 여 학습된 학습 모델(learning model)을 이용하여, 사용자의 의도를 판단(또는 예측)하고, 사용자의 의도에 따 른 스케줄 및 스케줄에 관련된 정보를 판단(또는 예측)할 수 있다. 일 실시예에 따르면, 프로세서는 인공 지능 알고리즘으로서, 예를 들면, 기계 학습(machine learning), 신경망(neural network), 유전자(genetic),딥러닝(deep learning), 또는 분류 알고리즘(classification algorithm) 중 적어도 하나를 이용하여, 스케줄 및 스케줄에 관련된 정보를 구성하여 제공하는 것에 관련된 동작을 수행할 수 있다. 도 6은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 6을 참조하면, 동작 601에서, 프로세서는 캘린더 어플리케이션을 실행할 수 있다. 일 실시예에 따르면, 프로세서는 캘린더 어플리케이션을 실행하는 사용자 입력을 수신할 수 있다. 일 실시예에 따라, 프로세서 는 사용자 입력(예: 제1 사용자 입력)에 기반하여, 캘린더 어플리케이션을 실행하고, 캘린더 어플리케이션 과 관련된 사용자 인터페이스(예: 캘린더 실행 화면)를 디스플레이(예: 도 1의 표시 장치)에 표시할 수 있 다. 동작 603에서, 프로세서는 스케줄 정보를 입력하는 사용자 입력(예: 제2 사용자 입력)에 기반하여 스케줄 (예: 신규 스케줄, 또는 신규 이벤트)(이하, ‘제1 스케줄’이라 한다)을 생성할 수 있다. 일 실시예에 따라, 스케줄은 사용자 입력에 따른 스케줄 정보에 따라 사용자 스케줄 및/또는 디바이스 스케줄과 관련된 적어도 하 나의 정보를 포함할 수 있다. 일 실시예에 따르면, 프로세서는 사용자로부터 디바이스의 운영과 연관된 스 케줄 정보를 획득하고, 획득된 스케줄 정보에 기반하여 적어도 하나의 제1 스케줄을 생성할 수 있다. 일 실시예 에 따르면, 프로세서는 사용자 입력에 따라 입력되는 스케줄 정보를 사용자 인터페이스에 표시하여 사용자 에게 제공할 수 있다. 동작 605에서, 프로세서는 스케줄 정보에 기반하여 스케줄을 분류할 수 있다. 일 실시예에 따르면, 프로세 서는 스케줄 정보를 분석하여 디바이스 스케줄을 관리하기 위한 스케줄 타입(또는 이벤트 타입)(예: 제1 스케줄 타입, 제2 스케줄 타입, 또는 제3 스케줄 타입)을 식별하고, 식별된 스케줄 타입에 따라 스케줄을 분류 할 수 있다. 다양한 실시예들에 따라, 프로세서가 스케줄을 분류하는 동작에 관하여 후술하는 도면들을 참 조하여 설명된다. 동작 607에서, 프로세서는 스케줄 분류에 기반하여 디바이스와 관련된 식별 태그(이하, ‘제1 식별 태그’ 라 한다)를 생성할 수 있다. 일 실시예에 따르면, 프로세서는 스케줄 분류에 기반하여 디바이스 제어에 관 련된 제1 식별 태그를 생성할 수 있다. 다양한 실시예들에 따라, 프로세서가 식별 태그를 생성하는 동작에 관하여 후술하는 도면들을 참조하여 설명된다. 동작 609에서, 프로세서는 사용자와 관련된 다른 스케줄(또는 제1 스케줄과 인접(예: 시간적으로 인접)한 인접 스케줄)(이하, ‘제2 스케줄’이라 한다)의 식별 태그(이하, ‘제2 식별 태그’라 한다)를 획득(또는, 호 출)할 수 있다. 일 실시예에 따르면, 프로세서는 제1 스케줄과 인접한 제2 스케줄을 탐색하고, 제2 스케줄 의 식별 태그를 호출할 수 있다. 일 실시예에 따르면, 프로세서는 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별할 수 있다. 동작 611에서, 프로세서는 스케줄 간의 충돌 여부를 판단할 수 있다. 일 실시예에 따르면, 프로세서 는 제1 스케줄(예: 신규 스케줄)과 제2 스케줄(예: 인접 스케줄)의 식별 태그(예: 제1 식별 태그와 제2 식별 태 그)(예: 시간에 관련된 태그 정보)에 기반하여 제1 스케줄과 제2 스케줄 간의 충돌 여부를 식별할 수 있다. 일 실시예에 따르면, 프로세서는 제1 스케줄의 시간 정보와 제2 스케줄의 시간 정보를 비교할 수 있다. 일 실 시예에 따르면, 프로세서는 제1 스케줄과 제2 스케줄 간의 시간 정보의 비교에 기반하여, 제1 스케줄과 제 2 스케줄 간의 시간 정보가 적어도 일부 겹치는(또는 중첩되는) 구간(또는 오버랩 정보(overlap information)) 을 식별할 수 있다. 동작 611에서, 프로세서는 스케줄 간의 충돌이 없는 경우(또는 시간 정보가 겹치지 않는 경우)(예: 동작 611의 ‘아니오’), 동작 613에서, 스케줄을 등록(또는, 스케줄 확정)할 수 있다. 일 실시예에 따르면, 프로세 서는 제1 스케줄에 따른 디바이스 스케줄을 스케줄 정보에 따른 스케줄로 등록(또는, 확정)할 수 있다. 동작 611에서, 프로세서는 스케줄 간의 충돌이 있는 경우(또는 시간 정보가 겹치는 경우)(예: 동작 611의 ‘예’), 동작 615에서, 변경 옵션을 식별할 수 있다. 일 실시예에 따르면, 프로세서는 스케줄 정보에 기 반하여 사용자가 디바이스의 제어가 가능한(예: 사용자 스케줄과 충돌을 회피할 수 있는) 동작(또는 모드)을 식 별하거나, 또는 캘린더 어플리케이션에 등록된 다른 사용자 별 스케줄 정보에 기반하여 디바이스와 관련된 제어 가 가능한 다른 사용자를 식별할 수 있다. 일 실시예에 따르면, 프로세서는 스케줄 간에 충돌이 발생하는 경우, 충돌 타입 식별 및/또는 키워드 유추에 기반하여, 충돌 타입 및/또는 유추된 키워드에 따른 스케줄 변경옵션을 판단할 수 있다. 동작 617에서, 프로세서는 추천 정보를 제공할 수 있다. 일 실시예에 따르면, 프로세서는 제1 스케줄 과 제2 스케줄 간의 겹치는 구간에 기반하여, 제1 스케줄과 관련된 디바이스의 운영을 변경할 수 있는 옵션을 출력할 수 있다. 일 실시예에 따르면, 프로세서는 식별된 적어도 하나의 변경 옵션에 기반하여 추천 정보 를 생성하고, 추천 정보를 사용자 인터페이스의 적어도 일부 영역을 통해 제공할 수 있다. 일 실시예에 따르면, 프로세서는 사용자 인터페이스의 적어도 일부 영역에 팝업 윈도우에 기반한 팝업을 통해 추천 정보를 중첩 (또는 오버레이)하여 표시할 수 있다. 다른 실시예에 따르면, 프로세서는 사용자 인터페이스의 화면 전환 을 통해 추천 정보를 사용자에게 제공할 수 있다. 일 실시예에 따라, 추천 정보는 해당 디바이스의 동작(또는 모드)의 변경 옵션에 따라 변경할 것을 제안하는 정보, 해당 디바이스의 제어를 적절한 다른 사용자에게 요청할 것을 제안하는 정보, 또는 추천 정보에 따른 변경 없이 그대로 진행할 것을 제안하는 정보와 관련된 적어도 하 나의 정보를 포함할 수 있다. 동작 619에서, 프로세서는 스케줄을 등록하는 사용자 입력(예: 제3 사용자 입력)에 기반하여 스케줄을 등 록할 수 있다. 일 실시예에 따르면, 프로세서는 추천 정보와 관련하여 확인하는 사용자 입력을 제3 사용자 입력으로 식별할 수 있다. 일 실시예에 따르면, 프로세서는 제3 사용자 입력에 응답하여, 추천 정보에 대 한 적용 여부를 식별할 수 있다. 예를 들면, 프로세서는 제3 사용자 입력이 추천 정보에 따라 디바이스 스 케줄의 변경을 승인(또는 적용)하는 입력인 경우, 변경된 옵션에 따라 디바이스 스케줄(예: 제1 스케줄 중 디바 이스 스케줄)을 변경하여 캘린더 어플리케이션에 등록할 수 있다. 다른 예를 들면, 프로세서는 제3 사용자 입력이 추천 정보에 따라 다른 사용자에게 디바이스 스케줄과 관련된 디바이스의 운영(예: 디바이스의 관리 및/ 또는 제어)을 요청하는 입력인 경우, 스케줄 정보를 캘린더 어플리케이션에 등록하면서(예: 추천 정보에 따른 변경 없이), 해당 전자 장치에게 디바이스 스케줄과 관련된 스케줄 정보를 전송하여, 해당 전자 장치의 사용자 에게 디바이스의 제어를 요청할 수 있다. 다른 예를 들면, 프로세서는 제3 사용자 입력이 추천 정보에 따 라 다른 사용자에게 디바이스 스케줄과 관련된 디바이스의 운영(예: 디바이스의 관리 및/또는 제어)을 요청하는 입력인 경우, 다른 사용자의 응답을 획득하고, 다른 사용자의 응답(예: 수락 응답)에 기반하여 스케줄 정보를 캘린더 어플리케이션에 등록할 수 있다. 다른 예를 들면, 프로세서는 제3 사용자 입력이 추천 정보에 따른 디바이스 스케줄의 변경을 취소(또는, 거절)하는 입력인 경우, 옵션의 변경 없이 사용자에 의해 입력된 스케줄 정보에 따라 디바이스 스케줄을 등록할 수 있다. 동작 621에서, 프로세서는 스케줄링을 수행할 수 있다. 일 실시예에 따르면, 프로세서는 캘린더 어플 리케이션에 등록된 적어도 하나의 스케줄에 대한 스케줄링을 통해, 각 스케줄과 관련된 알람 및/또는 제어 시점 을 모니터링 할 수 있다. 동작 623에서, 프로세서는 해당 스케줄에 해당 기능을 수행할 수 있다. 일 실시예에 따르면, 프로세서 는 스케줄링의 결과(또는, 모니터링의 결과)에 기반하여, 특정 스케줄에 관련된 알람 및/또는 제어 시점에, 해당 스케줄에 관련된 기능을 수행할 수 있다. 예를 들면, 프로세서는 해당 스케줄이 디바이스 스 케줄에 따른 디바이스 제어인 경우, 해당 디바이스를 제어할 수 있는 장치(예: 중앙 제어 장치)(또는 장치 관리 어플리케이션(예: smart things application))로 제어 정보를 전송할 수 있다. 다른 예를 들면, 프로세서(12 0)는 전자 장치가 디바이스를 직접 제어할 수 있는 경우, 해당 디바이스에 디바이스의 동작 제어(예: 설정 된 옵션에 따른 동작 제어)와 관련된 커맨드(command)를 해당 디바이스로 직접 전송할 수 있다. 다른 예를 들면, 프로세서는 해당 스케줄이 특정 사용자 스케줄과 관련된 알람인 경우, 해당 사용자의 전자 장치로 제어 정보(예: 스케줄과 관련된 알람(예: 스케줄 정보 및/또는 알람음)을 발생(또는, 출력)하도록 하는 제어 정 보)를 전송할 수 있다. 다양한 실시예들에 따르면, 도 6을 참조한 설명 부분에서 설명한 바와 같이, 프로세서는 캘린더 어플리케 이션에 기반하여 입력된 제1 스케줄(예: 사용자 스케줄 관련 이벤트)과 제2 스케줄(예: 디바이스 예약 설정 이 벤트)의 식별 태그를 생성하고, 이를 통해 제1 스케줄과 제2 스케줄 간에 충돌 조건을 식별하고, 충돌이 발생하 는 경우 그의 해결에 관련된 추천을 사용자에게 제공할 수 있다. 도 7은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 8a, 도 8b, 및 도 8c는 다양한 실시예들에 따른 스케줄 타입의 예를 설명하기 위한 도면들이다.일 실시예에 따라, 도 7은 디바이스 스케줄 관리를 위한 스케줄을 스케줄 타입에 따라 분류하고 그에 따른 식별 태그를 생성하는 동작(예: 도 6의 동작 605, 동작 607)의 예를 나타낼 수 있다. 도 7을 참조하면, 동작 701에서, 프로세서는 스케줄 정보를 분석할 수 있다. 일 실시예에 따르면, 프로세 서는 사용자 입력에 기반하여 입력된 신규 스케줄에 관련된 스케줄 정보를 분석할 수 있다. 동작 703에서, 프로세서는 스케줄 정보(예: 옵션(option)(또는, 디바이스(Device) 항목)에 디바이스와 관 련된 설정(예: 디바이스 이름, 디바이스를 유추 가능한 키워드)이 있는지 여부를 식별할 수 있다. 일 실시예에 따르면, 프로세서는 스케줄 정보의 옵션(또는, 디바이스) 항목을 분석하고, 옵션 항목에서 디바이스 지정 정보(예: 디바이스 이름)와 관련된 컨택스트(context)(예: 디바이스가 유추 가능한 키워드 또는 텍스트)를 분석 하고, 분석하는 결과에 기반하여 디바이스와 관련된 설정 유무를 판단할 수 있다. 동작 703에서, 프로세서는 옵션에 디바이스와 관련된 설정이 식별되는 경우(예: 동작 703의 ‘예’), 동작 705에서, 제1 스케줄 타입(예: 디바이스 스케줄)으로 분류할 수 있다. 일 실시예에 따라, 동작 713에서, 프로세 서는 제1 스케줄 타입(예: 디바이스 스케줄)에 따른 식별 태그를 생성할 수 있다. 일 실시예에 따르면, 프 로세서는 신규 스케줄에 따른 스케줄 정보와, 신규 스케줄을 등록한 사용자가 캘린더 어플리케이션에 이전 에 등록한 적어도 하나의 스케줄 정보를 분석하여 해당 디바이스와 관련된 식별 태그를 생성할 수 있다. 이의 예시가 도 8a에 도시된다. 도 8a를 참조하면, 프로세서는 스케줄 정보에서 옵션 항목을 참조하 여 “디바이스 정보(예: Washing machine)”와 디바이스와 관련된 “동작 제어 정보(예: 모드(불림), 온도(60도), 탈수(강))”를 식별할 수 있고, 이에 기반하여 제1 스케줄 타입(예: 디바이스 스케줄)으로 분류할 수 있다. 일 실시예에 따라, 프로세서는 스케줄 정보와 해당 사용자가 이전에 등록한 스케줄 정보에 서 해당 디바이스(예: Washing machine)와 관련된 스케줄 정보(예: 사용 패턴)를 분석하여 디바이스에 관련된 디바이스 식별 태그를 추출할 수 있다. 예를 들면, 프로세서는 스케줄을 등록한 사용자(예: #사용자A), 디 바이스(예: #세탁기), 사용자의 디바이스 사용 패턴(예: #사용자A_세탁패턴, #세탁 주 사용시간_오전, #세탁 주 사용요일_월, #세탁시간_long), 디바이스 동작 옵션(예: #세탁옵션_모드-불림_온도-60도_탈수-강), 또는 연관 디바이스(예: #후속기기_건조기)와 같은 식별 태그를 생성할 수 있다. 동작 703에서, 프로세서는 옵션에 디바이스와 관련된 설정이 식별되지 않는 경우(예: 동작 703의 ‘아니오 ’), 동작 707에서, 스케줄 정보(예: 옵션)에 위치(location)(또는, 장소)와 관련된 설정(예: 위치 지정)이 있 는지 여부를 식별할 수 있다. 일 실시예에 따르면, 프로세서는 스케줄 정보의 옵션 항목을 분석하고, 옵션 항목에서 위치(또는, 장소)에 관련된 컨택스트(예: 키워드 또는 텍스트)를 분석하고, 분석하는 결과에 기반하여 위치와 관련된 설정 유무를 판단할 수 있다. 동작 707에서, 프로세서는 옵션에 위치와 관련된 설정이 식별되는 경우(예: 동작 707의 ‘예’), 동작 709 에서, 제2 스케줄 타입(예: 위치(또는, 장소) 기반 사용자 스케줄)으로 분류할 수 있다. 일 실시예에 따라, 동 작 713에서, 프로세서는 제2 스케줄 타입(예: 장소 기반 스케줄)에 따른 식별 태그를 생성할 수 있다. 일 실시예에 따르면, 프로세서는 신규 스케줄에 따른 스케줄 정보와, 신규 스케줄을 등록한 사용자가 캘린더 어플리케이션에 이전에 등록한 적어도 하나의 스케줄 정보를 분석하여 해당 디바이스와 관련된 식별 태그를 생 성할 수 있다. 이의 예시가 도 8b에 도시된다. 도 8b를 참조하면, 프로세서는 스케줄 정보에서 옵션 항목을 참조하여 “장소 정보(예: 250 West Kenwood Ave. Calmness Studio)”를 식별할 수 있고, 이에 기 반하여 제2 스케줄 타입(예: 장소 기반 스케줄)으로 분류할 수 있다. 일 실시예에 따라, 프로세서는 스케 줄 정보와 해당 사용자가 이전에 등록한 스케줄 정보에서 해당 장소와 관련된 스케줄 정보(예: 스케줄(예: 요가 수업), 또는 장소(예: 250 West Kenwood Ave. Calmness Studio)에 관련된 패턴)를 분석하여 디바이스에 관련된 디바이스 식별 태그를 추출할 수 있다. 예를 들면, 프로세서는 스케줄을 등록한 사용자(예: #사용 자A), 부재 여부(예: #부재#외출), 사용자의 부재 패턴(예: #사용자A_부재패턴, #부재요일_수요일, #부재시간_ 수요일_오전), 사용자의 부재 시 디바이스 사용 정보(예: #외출 시 기기사용_설정정보)와 같은 식별 태그를 생 성할 수 있다. 동작 707에서, 프로세서는 옵션에 위치와 관련된 설정이 식별되지 않는 경우(예: 동작 707의 ‘아니오’), 동작 711에서, 제3 스케줄 타입(예: 제1 스케줄 타입과 제2 스케줄 타입 이외의 다른(또는, 일반) 스케줄 타 입)로 분류할 수 있다. 일 실시예에 따라, 동작 713에서, 프로세서는 제3 스케줄 타입에 따른 식별 태그를 생성할 수 있다. 일 실시예에 따르면, 프로세서는 신규 스케줄에 따른 스케줄 정보와, 신규 스케줄을 등록 한 사용자가 캘린더 어플리케이션에 이전에 등록한 적어도 하나의 스케줄 정보를 분석하여 해당 디바이스와 관 련된 식별 태그를 생성할 수 있다. 이의 예시가 도 8c에 도시된다. 도 8c를 참조하면, 프로세서는 스케줄정보에서 옵션 항목을 참조하여, 디바이스 또는 장소와 관련된 정보가 아닌, “링크된 태스크(linked Task)(예: 원피스 에어드레서에 오전 중에 돌리기)”를 식별할 수 있고, 이에 기반하여 제3 스케줄 타입으로 분 류할 수 있다. 일 실시예에 따라, 프로세서는 스케줄 정보와 해당 사용자가 이전에 등록한 스케줄 정 보에서 해당 링크된 태스크와 관련된 스케줄 정보(예: 원피스 및/또는 에어드레서에 관련된 패턴)를 분석하여 디바이스에 관련된 디바이스 식별 태그를 추출할 수 있다. 예를 들면, 프로세서는 스케줄을 등록한 사용자 (예: #사용자A), 태스크 품목(예: #의류), 디바이스(예: #디바이스이름_에어드레서), 사용자의 디바이스 사용 패턴(예: #기기시간_10월8일_오전), 주 사용 동작 모드(예: #추천모드_구분인자_원피스), 부재 여부(예: #부재 예정#외출예정, #부재요일_월요일, #부재시간_월요일_저녁)과 같은 식별 태그를 생성할 수 있다. 일 실시예에 따라, 도 7에서는 새롭게 입력되는 스케줄(예: 신규 스케줄)을, 예를 들면, 3가지 스케줄 타입(예: 제1 스케줄 타입, 제2 스케줄 타입, 및 제3 스케줄 타입)으로 분류하고, 스케줄 정보에, 디바이스와 관련된 설 정, 위치와 관련된 설정, 또는 태스크와 관련된 설정을 식별하는 것을 예로 도시하였으나, 이에 한정하는 것은 아니다. 예를 들면, 스케줄 정보에는, 디바이스와 관련된 설정, 위치와 관련된 설정, 또는 태스크와 관련된 설 정 중 적어도 둘의 조합이 포함될 수 있고, 프로세서는 제1 스케줄 타입, 제2 스케줄 타입, 또는 제3 스케 줄 타입의 적어도 둘의 조합에 기반하여 스케줄 타입에 따른 각각의 식별 태그 또는 연관 식별 태그(또는 통합 식별 태그)를 생성할 수 있다. 도 9는 다양한 실시예들에 따른 스케줄 타입에 관련된 식별 태그를 설명하기 위한 도면이다. 일 실시예에 따라, 도 9는 캘린더 어플리케이션에 기반하여 다중 사용자들의 사용자 별 디바이스 제어 관련 식 별 태그를 생성하는 예를 나타낼 수 있다. 예를 들면, 도 9는 도 7 및 도 8a를 참조한 설명 부분에서 설명한 바 와 같은, 제1 스케줄 타입(예: 디바이스 스케줄)과 관련된 식별 태그 타입의 예를 나타낼 수 있다. 도 9를 참조하면, 전자 장치는 사용자의 신규 스케줄에 관련된 스케줄 정보를 위한 사용자 입력을 수신하 고, 신규 스케줄의 스케줄 정보와 사용자의 이전 스케줄의 스케줄 정보에 적어도 기반하여 디바이스와 관련된 식별 태그를 생성할 수 있다. 일 실시예에 따라, 화면 910의 예시(예: 예시1)는, 사용자가 스케줄 정보로서, 예 를 들면, 타이틀(Tile)로 ‘세탁하기’, 날짜(Date)로 ‘Oct. 08’, 시간(Time)으로 ‘08:30 ~ 10:30’, 옵션 (예: 디바이스(Device)) 항목으로 ‘Washing machine’와 그의 동작 모드(또는 동작 제어 정보)로 ‘모드:불림, 온도:60도, 탈수:강’을 입력하는 예를 나타낼 수 있다. 일 실시예에 따라, 화면 920의 예시(예: 예시2)는, 사 용자가 스케줄 정보로서, 예를 들면, 타이틀(Tile)로 ‘청소하기’, 날짜(Date)로 ‘Oct. 08’, 시간(Time)으로 ‘09:00 ~ 11:00’, 옵션(예: 디바이스) 항목으로 ‘Robot Cleaner’와 그의 동작 모드(또는 동작 제어 정보)로 ‘모드:꼼꼼’을 입력하는 예를 나타낼 수 있다. 예를 들면, 도 9에서는 사용자가 옵션(또는, 디바이스) 항목에 디바이스와 관련된 설정(예: ‘Washing machine’, ‘Robot Cleaner’)을 포함하는 예를 나타낼 수 있다. 일 실시예에 따르면, 전자 장치는 화면 910의 예시(예: 예시1) 또는 화면 920의 예시(예: 예시2)와 같이 스케줄 정보에서 디바이스와 관련된 설정이 포함되는 경우, 스케줄 타입을 제1 스케줄 타입(예: 디바이스 스케 줄)으로 분류할 수 있고, 신규 스케줄에 따른 스케줄 정보와 캘린더 어플리케이션에서 사용자에 관련된 스케줄 정보를 분석하여, 디바이스 식별 태그를 추출할 수 있다. 예를 들면, 전자 장치는 식별 태그 타입 별로 관 련 식별 태그를 추출할 수 있으며, 이의 예가 아래 <표 1>에 개시된다. 표 1 식별 태그 유형 예시1 예시2 이벤트 타입 디바이스 스케줄 디바이스 스케줄 디바이스 세탁기 로봇청소기 관련 사용자 User A User C 날짜 및 시간 2018.10.10 08:30-10:30 2018.10.08 09:00-11:00 사용자 선호 옵션 {모드: 불림}{온도: 60} {탈수: 강}{모드: 꼼꼼} 추출된 키워드 세탁 청소 관련 디바이스 {후속기기: 건조기} {상충기기: 써큘레이터, 공기청정기} 사용자 개입 필요 여부 Y{사전 : Y}, {사후 : Y} N도 10은 다양한 실시예들에 따른 스케줄 타입에 관련된 식별 태그를 설명하기 위한 도면이다. 일 실시예에 따라, 도 10은 캘린더 어플리케이션에 기반하여 다중 사용자들의 사용자 별 디바이스 제어 관련 식 별 태그를 생성하는 예를 나타낼 수 있다. 예를 들면, 도 10은 도 7 및 도 8b를 참조한 설명 부분에서 설명한 바와 같은, 제2 스케줄 타입(예: 장소 기반 사용자 스케줄)과 관련된 식별 태그 타입의 예를 나타낼 수 있다. 도 10을 참조하면, 전자 장치는 사용자의 신규 스케줄에 관련된 스케줄 정보를 위한 사용자 입력을 수신하 고, 신규 스케줄의 스케줄 정보와 사용자의 이전 스케줄의 스케줄 정보에 적어도 기반하여 디바이스와 관련된 식별 태그를 생성할 수 있다. 일 실시예에 따라, 화면 1010의 예시(예: 예시3)는, 사용자가 스케줄 정보로서, 예를 들면, 타이틀(Tile)로 ‘연주회 참석’, 날짜(Date)로 ‘Mon. Oct. 08’, 시간(Time)으로 ‘18:00 ~ 22:00’, 옵션(예: 위치(Location)) 항목(예: 옵션1)으로 ‘Mozart Music Hall’, 옵션(예: 메모(Memo)) 항목 (예: 옵션2)으로 ‘원피스 에어드레서에 오전 중에 돌리기’를 입력하는 예를 나타낼 수 있다. 일 실시예에 따 라, 화면 1020의 예시(예: 예시4)는, 사용자가 스케줄 정보로서, 예를 들면, 타이틀(Tile)로 ‘가족 저녁 식사 ’, 날짜(Date)로 ‘Tue. Oct. 09’, 시간(Time)으로 ‘18:00 ~ 22:00’, 옵션(예: 위치) 항목으로 ‘At Home ’을 입력하는 예를 나타낼 수 있다. 예를 들면, 도 10에서는 사용자가 옵션(또는, 위치) 항목에 위치와 관련된 설정(예: ‘Mozart Music Hall’, ‘At Home’)을 포함하는 예를 나타낼 수 있다. 일 실시예에 따르면, 전자 장치는 화면 1010의 예시(예: 예시3) 또는 화면 1020의 예시(예: 예시4)와 같이 스케줄 정보에서 위치와 관련된 설정이 포함되는 경우, 스케줄 타입을 제2 스케줄 타입(예: 장소 기반의 사용자 스케줄)으로 분류할 수 있고, 신규 스케줄에 따른 스케줄 정보와 캘린더 어플리케이션에서 사용자에 관련된 스 케줄 정보를 분석하여, 디바이스 식별 태그를 추출할 수 있다. 예를 들면, 전자 장치는 식별 태그 타입 별 로 관련 식별 태그를 추출할 수 있으며, 이의 예가 아래 <표 2>에 개시된다. 표 2 식별 태그 유형 예시3 예시4 이벤트 타입 사용자 스케줄 (장소 기반) 사용자 스케줄 (장소 기반) 사용자 User B User A, B, C, D 날짜 및 시간 2018.10.08 18:00-22:00 2018.10.09 18:00-22:00 장소 Mozart Music Hall At home 추출된 키워드 연주회, 원피스 가족, 식사, 다이닝룸 관련 디바이스 의류관리기 Dining room A/C, 공기청정기 우선 순위 User B 디바이스 옵션 User C 디바이스 옵션 도 11은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 일 실시예에 따라, 도 11은 사용자 입력에 기반하여 새로 입력된 제1 스케줄(예: 신규 스케줄)과 미리 등록된 다른 제2 스케줄(예: 인접 스케줄)의 식별 태그 간 충돌하는 경우에, 디바이스 스케줄과 관련된 추천을 제안하 는 동작(예: 도 6의 동작 615, 동작 617)의 예를 나타낼 수 있다. 도 11을 참조하면, 동작 1101에서, 프로세서는 스케줄 정보를 입력할 수 있다. 일 실시예에 따르면, 프로 세서는 신규 스케줄을 위한 사용자 입력에 기반하여, 신규 스케줄에 관련된 스케줄 정보를 입력할 수 있다. 동작 1103에서, 프로세서는 스케줄 정보에 기반하여, 디바이스 스케줄에 따른 디바이스가 사용자의 개입을 필요로 하는지 여부를 판단할 수 있다. 일 실시예에 따르면, 프로세서는 <표 1>에 예시한 바와 같이, 스케 줄 정보에 적어도 기반하여 스케줄 타입에 따라 추출된(또는 생성된) 식별 태그를 참조하여, 디바이스와 관련된 사용자 개입이 필요한지 여부를 식별할 수 있다. 동작 1103에서, 프로세서는 사용자 개입이 필요하지 않은 것으로 판단하는 경우(예: 동작 1103의 ‘아니오 ’), 동작 1113으로 진행하여, 동작 1113 이하의 동작을 수행할 수 있다.동작 1103에서, 프로세서는 사용자 개입이 필요한 것으로 판단하는 경우(예: 동작 1103의 ‘예’), 동작 1105에서, 디바이스 스케줄을 처리 가능한 다른 사용자(또는 다중 사용자와 관련된 스케줄)가 존재하는지 여부 를 판단할 수 있다. 일 실시예에 따르면, 프로세서는 디바이스 스케줄이 사용자의 개입이 필요한 경우, 캘 린더 어플리케이션에 기반하여 다른 사용자의 스케줄이 존재하는지 여부를 판단할 수 있다. 예를 들면, 프로세 서는 캘린더 어플리케이션에 기반하여 다중 사용자 별 스케줄 정보를 식별할 수 있고, 다중 사용자와 관련 된 스케줄 정보에 기반하여 적어도 하나의 다른 사용자에 의해 디바이스 스케줄을 관리하도록 하는 옵션을 추천 할 수 있다. 일 실시예에 따르면, 프로세서는 캘린더 어플리케이션에 등록된 다중 사용자들의 스케줄 정보 를 분석하고, 스케줄 정보에 기반하여, 디바이스 스케줄(예: 디바이스 제어에 관련된 시간)에 다중 사용자들이 외부에 존재하는지, 또는 방해 금지에 해당하는 스케줄을 포함하는지를 식별할 수 있다. 예를 들면, 프로세서 는 캘린더의 다중 사용자 별 스케줄을 분석하여, 디바이스 제어가 가능한 다른 사용자가 존재하는지 여부 를 식별할 수 있다. 동작 1105에서, 프로세서는 다른 사용자가 존재하지 않는 경우(예: 동작 1105의 ‘아니오’), 동작 1107에 서, 디바이스 옵션 변경을 제안할 수 있다. 일 실시예에 따라, 디바이스 옵션 변경을 제안하는 동작과 관련하여 후술하는 도면을 참조하여 설명된다. 동작 1105에서, 프로세서는 다른 사용자가 존재하는 경우(예: 동작 1105의 ‘예’), 동작 1109에서, 다중 사용자 우선순위에 기반하여 선호 옵션을 결정할 수 있다. 일 실시예에 따라, 다중 사용자 우선순위에 기반하여 선호 옵션을 결정하여 제안(또는, 추천)하는 동작과 관련하여 후술하는 도면을 참조하여 설명된다. 동작 1111에서, 프로세서는 다른 디바이스의 운영 가능 여부를 판단할 수 있다. 일 실시예에 따르면, 프로 세서는 캘린더 어플리케이션에 기반하여 사용자의 다른 스케줄을 참조하여, 사용자 패턴을 분석하고, 사용 자 패턴에 기반하여 추가적인 디바이스의 운영과 연관된 제안 여부를 결정할 수 있다. 예를 들면, 프로세서 는 디바이스와 연계하여 다른 디바이스의 추가 운영이 가능한지 여부를 식별할 수 있다. 동작 1111에서, 프로세서는 다른 디바이스의 운영이 가능하지 않은 경우(예: 동작 1111의 ‘아니오’), 동 작 1115에서, 스케줄을 등록할 수 있다. 동작 1111에서, 프로세서는 다른 디바이스의 운영이 가능한 경우(예: 동작 1111의 ‘예’), 동작 1113에서, 추가 디바이스 운영을 제안하고, 동작 1115에서, 스케줄을 등록할 수 있다. 일 실시 예에 따라, 추가 디바이스의 운영을 제안하는 동작과 관련하여 후술하는 도면을 참조하여 설명된다. 도 12는 다양한 실시예들에 따른 전자 장치에서 디바이스 스케줄에 관한 추천을 제공하는 동작 방법을 도 시하는 흐름도이다. 일 실시예에 따라, 도 12는 제1 스케줄(예: 신규 스케줄)과 제2 스케줄(예: 인접 스케줄)의 식별 태그 간에 충 돌 여부를 판단하고, 충돌이 발생하는 경우에, 디바이스 옵션 변경을 제안하는 동작(예: 도 11의 동작 1107)의 예를 나타낼 수 있다. 도 12를 참조하면, 동작 1201에서, 프로세서는 다른 모드 및 소요시간을 조회할 수 있다. 일 실시예에 따 르면, 프로세서는 신규 스케줄에 따른 디바이스 스케줄과 인접 스케줄 간에 충돌이 발생하는 경우, 디바이 스가 동작 가능한 다양한 모드를 분석하고, 분석하는 결과에 기반하여 디바이스와 관련된 다른 모드 및 소요시 간으로 변경이 가능한지 여부를 판단할 수 있다. 일 실시예에 따라, 디바이스 스케줄에서 디바이스에 관해 설정 된(또는, 선택된) 모드(또는, <표 1>에서 예시1에 예시한 바와 같은 사용자 선호 옵션)이 아래 <표 3>인 것을 예로 하며, 디바이스가 동작 가능한 다양한 모드가 아래 <표 4>와 같이 포함되는 것을 예로 할 수 있다. 일 실 시예에 따라, <표 3>의 소요시간 항목에 예시한 바와 같이, 신규 스케줄에 따른 사용자 스케줄로 인하여, 디바 이스의 동작이 완료되어야 하는 시간(또는, 제한 시간 또는 기준 시간)이 “77분”인 것을 예로 할 수 있다. 표 3 모드 온도 헹굼 탈수 소요시간 (분) 불림 60 2 강 90(제한시간: 77분)표 4 모드 온도 헹굼 탈수 소요시간 (분) 표준 60 3 강 80 표준 40 3 강 70 표준 30 3 강 65 퀵 30 2 중 45 퀵 40 2 중 55 ... ... ... ... ... 동작 1203에서, 프로세서는 조건을 만족하는 모드를 추출할 수 있다. 일 실시예에 따르면, 프로세서 는 디바이스의 동작 시간(예: 완료 시간)과 사용자 스케줄에 따른 사용자의 부재 시간(예: 부재 시작 시간)에 기반하여, 사용자 부재 이전(예: 사용자 스케줄과 충돌되지 않는 시간)까지의 조건을 만족(예: 소요시간 < TimeLimit (예: t < 77))하는 모드를 추출할 수 있다. 일 실시예에 따라, <표 4>를 참조하면, 프로세서는 디바이스와 관련된 다양한 모드 중, 소요시간이 77분 이상을 가지는 모드(예: 소요시간: 80을 가지는 모드)는 선택 대상 모드에서 제외하고, 소요시간이 77분 미만을 가지는 모드(예: 소요시간: 70, 65, 45, 55를 가지는 모 드)를 선택 대상 모드로 추출할 수 있다. 동작 1205에서, 프로세서는 추출된 해당 모드들을 정렬(sorting)할 수 있다. 일 실시예에 따르면, 프로세 서는 설정된 기준(예: 각 모드의 세부 옵션들이 사용자가 디바이스 스케줄로 선택한 모드와 가장 유사한 순서)에 따라 추출된 모드들을 정렬할 수 있다. 예를 들면, 소요시간이 가장 근접한 시간을 가지는 모드(예: 소 요시간: 70을 가지는 옵션)의 순서로 정렬할 수 있다. 동작 1207에서, 프로세서는 최상위 모드(예: 사용자가 선택한 모드와 가장 유사한 모드)를 추천 옵션으로 제안할 수 있다. 예를 들면, 프로세서는 <표 4>의 예시와 같이 정렬된 모드 중에서, 최상위 모드(예: 모드:표준, 온도:40, 헹굼:3, 탈수:강, 소용시간:70)를 옵션으로 제안할 수 있다. 동작 1209에서, 프로세서는 스케줄을 반영할 수 있다. 일 실시예에 따르면, 프로세서는 옵션 제안에 대한 사용자 입력에 기반하여 디바이스 스케줄을 변경할 수 있다. 도 13은 다양한 실시예들에 따른 전자 장치에서 디바이스 스케줄과 관련된 추천을 제공하는 동작 방법을 도시하는 흐름도이다. 도 14는 다양한 실시예들에 따른 전자 장치에서 태스크를 분리하는 동작을 설명하기 위한 도면이다. 일 실시예에 따라, 도 13 및 도 14는 제1 스케줄(예: 신규 스케줄)과 제2 스케줄(예: 인접 스케줄)의 식별 태그 간에 충돌 여부를 판단하고, 충돌이 발생하는 경우에, 다중 사용자 운선순위를 참조하여 선호 옵션을 결정하여 제안하는 동작(예: 도 11의 동작 1109)의 예를 나타낼 수 있다. 도 13을 참조하면, 동작 1301에서, 프로세서는 태스크(task)를 단계화 할 수 있다. 일 실시예에 따르면, 프로세서는 신규 스케줄에 따른 디바이스 스케줄과 인접 스케줄 간에 충돌이 발생하고, 캘린더 어플리케이 션에 다중 사용자가 존재하는 경우, 캘린더 어플리케이션에서 디바이스 스케줄의 태스크를 단계화(예: 태스크 분리)할 수 있다. 예를 들어, 도 14를 참조하면, 엘리먼트 1410에 예시한 바와 같이, 사용자(예: 사용자A)의 디 바이스 스케줄에 따른 ‘세탁하기’ 스케줄과 관련된 시간이 “4:00 ~ 6:30”이고, 사용자(예: 사용자A)의 사용 자 스케줄에 따른 ‘북클럽’ 스케줄과 관련된 시간이 “5:10”인 것과 같이, 세탁하기 스케줄과 북클럽 스케줄 이 “5:10”부터 충돌될 수 있다. 일 실시예에 따라, 프로세서는 충돌이 발생하는 경우, 디바이스 스케줄 에 따른 각 태스크를 분리하여 단계화 할 수 있다. 예를 들어, 도 14를 참조하면, 엘리먼트 1420에 예시한 바와 같이, “4:00 ~ 6:30”의 세탁하기 스케줄은, 예를 들면, 제1 태스크(예: Washer: 세탁 중), 제2 태스크(예: Washer: 세탁 픽업), 및 제3 태스크(예: Drying Machine: 표준 건조)로 단계화(또는, 분리)될 수 있다. 동작 1303에서, 프로세서는 사용자(예: 사용자A)에 의한 디바이스 제어가 불가능한 태스크 시간을 계산할 수 있다. 일 실시예에 따르면, 프로세서는 태스크 단계화에 따른 제1 태스크, 제2 태스크, 및 제3 태스크 에서 사용자 스케줄과 충돌하는 태스크 및 그에 따른 태스크 시간을 계산할 수 있다. 일 실시예에 따라, 도 14 의 엘리먼트 1420 예시에서, 제1 태스크의 일부 시간과, 제2 태스크 및 제3 태스크의 모든 시간에서 충돌이 있 으며, 프로세서는 제1 태스크의 일부 시간과, 제2 태스크 및 제3 태스크의 모든 시간에 기반하여 불가능한태스크 시간을 식별할 수 있다. 동작 1305에서, 프로세서는 사용자(예: 사용자A)에 의한 디바이스 제어가 불가능한 태스크 시간에, 디바이 스 제어가 가능한 다른 사용자를 검색할 수 있다. 일 실시예에 따라, 도 14의 엘리먼트 1420에 예시한 바와 같 이, 캘린더 어플리케이션에 사용자A, 사용자B, 사용자C, 및 사용자D의 스케줄이 존재하고, 사용자A에 관하여 디 바이스 스케줄과 사용자 스케줄이 충돌하는 예시일 수 있다. 일 실시예에 따르면, 프로세서는 캘린더 어플 리케이션에 등록된 다른 사용자(예: 사용자B, 사용자C, 사용자D)의 스케줄 정보를 분석하고, 스케줄 정보에 기 반하여 다른 사용자의 각 스케줄 상태(또는, 현황)를 분석할 수 있다. 일 실시예에 따라, 프로세서는 다른 사용자의 스케줄과 디바이스 스케줄(예: 디바이스 제어에 관련된 시간)에 디바이스 제어가 가능한 다른 사용자 (또는, 스케줄의 충돌이 없는 사용자)를 검색할 수 있다. 일 실시예에 따라, 엘리먼트 1420에서, 사용자B와 사 용자D가 디바이스 제어가 가능한 사용자일 수 있다. 동작 1307에서, 프로세서는 검색된 다른 사용자들을 정렬(sorting)할 수 있다. 일 실시예에 따르면, 프로 세서는 설정된 기준(예: 사용자 별 디바이스 사용 빈도)에 따라 검색된 사용자들을 정렬할 수 있다. 일 실 시예에 따라, 아래 <표 5>에 예시한 바와 같이, 디바이스 별로 사용자 별 사용 빈도에 기초한 우선순위가 설정 될 수 있으며, 프로세서는 디바이스와 관련된 사용 빈도가 높은 사용자의 순서로 정렬할 수 있다. 예를 들 어, <표 5>를 참조하면, 디바이스 스케줄에 따른 디바이스(예: 세탁기)의 사용 빈도가, 사용자A, 사용자C, 사용 자B, 사용자D의 순서로 높을 수 있다. 예를 들면, 디바이스(예: 세탁기)와 관련하여, 사용자A, 사용자C, 사용자 B, 사용자D의 순서로 우선순위가 결정될 수 있다. 표 5 디바이스 1순위 2순위 3순위 4순위 세탁기 A C B D 건조기 A C B D 식기세척기 B A C D 에어컨 D B A C ... ... ... ... ... 동작 1309에서, 프로세서는 최상위 사용자를 추출할 수 있다. 일 실시예에 따라, <표 5>와 도 14의 엘리먼 트 1420 예시를 참조하면, 디바이스(예: 세탁기)에 대해 사용자A를 제외한, 다른 사용자(예: 사용자B, 사용자C, 사용자D) 중 사용자C가 최우선 순위를 가질 수 있는 반면, 사용자C의 경우 일부 스케줄이 디바이스 스케줄과 충 돌이 발생할 수 있다. 일 실시예에 따라, 프로세서는 사용자C는 디바이스 제어가 가능한 대상 사용자에서 제외할 수 있고, 차 순위의 사용자B를 최상위 사용자로 추출될 수 있다. 동작 1311에서, 프로세서는 최상위 사용자에게 태스크를 요청하는 옵션을 추천 옵션으로 결정할 수 있다. 예를 들면, 프로세서는 최상위 사용자로 추출된 사용자B에게 태스크를 요청(예: 디바이스 제어 요청)하는 옵션을 추천 옵션으로 결정하여 제안할 수 있다. 동작 1313에서, 프로세서는 추천 옵션에 기반한 추천 정보를 사용자에게 제공할 수 있다. 일 실시예에 따 르면, 프로세서는 사용자B에게 태스크를 요청(예: 디바이스 제어 요청)하는 추천 정보를 디스플레이(예: 도 1의 표시 장치)에 표시할 수 있다. 일 실시예에 따르면, 프로세서는 최상위 사용자로 추출된 사용자B에게 태스크를 요청하는 옵션을 제안하고, 제안된 옵션과 관련된 사용자 입력(예: 승인)에 기반하여, 추천 정보에 관련된 요청(예: 디바이스 스 케줄에 따른 디바이스 관리 요청)을 통신 모듈(예: 도 1의 통신 모듈)을 통해 사용자B(또는, 사용자B의 전 자 장치)에게 전달하는 동작을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 사용자B로부터 수락 또는 거절의 응답을 수신할 수 있고, 수신된 응답에 기반하여 디바이스 스케줄과 관련된 추가적인 옵션을 더 제안하 는 동작을 포함할 수 있다. 이러한 예시에 대하여, 후술하는 도면들을 참조하여 설명된다. 도 15는 다양한 실시예들에 따른 전자 장치에서 디바이스에 관한 추천을 제공하는 동작을 설명하기 위한 도면이다. 일 실시예에 따라, 도 15는 디바이스 스케줄에 따른 디바이스 외에, 디바이스와 연계하여 추가적으로 운영 가능 한 추가 디바이스를 제안하는 동작(예: 도 11의 동작 1113)의 예를 나타낼 수 있다. 도 15를 참조하면, 엘리먼트 1510의 예시와 같이, 사용자(예: 사용자A, 사용자B, 사용자C, 사용자D)는 ‘가족 저녁 식사’와 관련된 스케줄을 등록할 수 있고, 전자 장치는 엘리먼트 1520의 예시와 같이, 캘린더 어플 리케이션에 다중 사용자들에 대한 공통적인 사용자 스케줄(예: 가족 저녁 식사)을 생성하여 등록할 수 있다. 일 실시예에 따르면, 전자 장치는 엘리먼트 1510의 예시한 바와 같은, 사용자 스케줄이 등록되는 경우, 스 케줄과 관련된 스케줄 정보를 분석하여, 식별 키워드(또는, 식별 태그)를 유추(또는, 추출)할 수 있다. 일 실시 예에 따르면, 전자 장치는 사용자 스케줄에 연계하여 추가적인 디바이스를 제안할 수 있으며, 이를 위해 스케줄 정보에 기반하여 식별 키워드를 식별할 수 있다. 일 실시예에 따라, 식별 키워드는 아래 <표 6>에 예시 한 바와 같이, 미리 정의된 카테고리 별로 키워드가 정의될 수 있다. 다양한 실시예들에 따르면, 식별 키워드는 사전 정의되어 제공될 수 있으며, 사용자 별로 개별 추가에 의해 정의될 수 있다. 일 실시예에 따르면, 식별 키 워드는 인공 지능 알고리즘을 이용하여 학습된 학습 모델을 이용하여, 자동적으로 추가될 수 있다. 표 6 카테고리 (구 분)식별 키워드 소리 #영화 #공부 #수업 #수면 온도 #영화 #식사 #어린이 #초대 #수면 #여행 #운동 #질병 #단풍 #첫눈 #장마 보안 #초대 #택배 #방문 #시터 #여행 #휴가 #발표 공조 #식사 #요리 #어린이 #초대 #여행 #운동 조도 #영화 #초대 #파티 청정 #여행 #운동 #어린이 #요가 #야간 #연주회 #공연 비고 사전 정의되어 있고 사용자의 개별 추가 또는 AI에 의한 자동 추가 가능 일 실시예에 따르면, 전자 장치는 엘리먼트 1510의 예시에 따른 스케줄 정보에서, 예를 들면, “#식사”, “#요리”와 같은 식별 키워드를 유추할 수 있고, 식별 키워드에 기반하여, “온도”, “공조”의 카테고리를 식별할 수 있다. 예를 들면, 전자 장치는 유추된 식별 키워드를 포함하는 카테고리를 식별할 수 있다. 일 실시예에 따르면, 식별 키워드에 기반한 카테고리 별로 작동 가능한 디바이스가 설정(또는, 매핑)될 수 있다. 일 실시예에 따라, 전자 장치는 식별 키워드에 따른 카테고리(또는, 조건)에 부합하는 적어도 하나의 디바 이스(또는, 디바이스 리스트)를 사용자에게 제공하고, 디바이스의 작동에 관련된 사용자 인터페이스를 사용자에 게 제공할 수 있다. 일 실시예에 따르면, 전자 장치는, 엘리먼트 1510의 사용자 스케줄과 관련하여 엘리먼트 1530의 예시와 같 이, 연관된 디바이스 스케줄을 생성하여 제공할 수 있다. 예를 들면, 전자 장치는 ‘가족 저녁 식사’와 관련하여 유추된 식별 키워드(예: #식사)에 부합하는 디바이스 기능으로, ‘공기 청정’과 ‘온도 제어’를 식 별하고, 그에 대응하는 디바이스(예: 공기 청정기, 에어컨)를 추가 디바이스로 제안할 수 있다. 예를 들면, 전 자 장치는 식별 키워드(예: #식사) 기반 디바이스 작동을 제안할 수 있다. 일 실시예에 따라, 전자 장치 는 추가 디바이스 작동 제안에 대한 사용자 입력에 응답하여, 사용자 스케줄과 연관지어 디바이스 스케줄 을 추가적으로 등록할 수 있다. 예를 들면, 엘리먼트 1520의 예시와 같이, 캘린더 어플리케이션에 등록된 사용 자 스케줄(예: 가족 저녁 식사)에 연관지어, 대응하는 시간에 디바이스 스케줄(예: 식사 환경 세팅)을 추가 등 록할 수 있다. 다양한 실시예들에 따르면, 디바이스 스케줄 관리 제어는, 이상에서 살펴본 바와 같이 전자 장치에 의해 동작할 수 있다. 다양한 실시예들이 이에 한정하는 것은 아니면, 디바이스 스케줄 관리 제어는 전자 장치 와 외부 서버에 의해 동작할 수 있다. 이러한 예가 도 16에 도시된다. 도 16은 다양한 실시예들에 따른 전자 장치와 외부 서버 간의 동작을 도시하는 도면이다. 일 실시예에 따라, 전자 장치에서 수행하는 동작들은, 전자 장치의 적어도 하나의 프로세서(예: 프로세싱 회로를 포함하는 적어도 하나의 프로세서), 또는 메모리에 저장되고, 실행 시에, 프로세서 가 동작하도록 하는 인스트럭션들에 의해 실행될 수 있다. 일 실시예에 따라, 외부 서버에서 수행하는 동 작들은, 외부 서버의 적어도 하나의 프로세서(예: 프로세싱 회로를 포함하는 적어도 하나의프로세서), 또는 메모리에 저장되고, 실행 시에, 프로세서가 동작하도록 하는 인스트럭션들에 의해 실행될 수 있다. 도 16을 참조하면, 동작 1601에서, 전자 장치는 캘린더 어플리케이션을 실행할 수 있다. 일 실시예에 따르 면, 전자 장치는 캘린더 어플리케이션을 실행하는 사용자 입력을 수신할 수 있다. 일 실시예에 따라, 전자 장치는 사용자 입력에 기반하여, 캘린더 어플리케이션을 실행하고, 캘린더 어플리케이션과 관련된 사용자 인터페이스(예: 캘린더 실행 화면)를 디스플레이(예: 도 1의 표시 장치)에 표시할 수 있다. 동작 1603에서, 전자 장치는 사용자 인터페이스에 기반하여 스케줄 정보를 입력하는 사용자 입력(이하, ‘ 제1 사용자 입력’이라 한다)을 수신할 수 있다. 동작 1605에서, 전자 장치는 제1 사용자 입력에 기반하여 입력된 스케줄 정보를 외부 서버에 전송할 수 있다. 일 실시예에 따르면, 전자 장치는 제1 사용자 입력에 따라 입력되는 스케줄 정보를 사용자 인터 페이스에 표시하여 사용자에게 제공할 수 있다. 동작 1607에서, 외부 서버는 스케줄을 생성할 수 있다. 일 실시예에 따르면, 외부 서버는 전자 장치 로부터 스케줄 정보를 수신하고, 수신된 스케줄 정보에 기반하여 스케줄(예: 전자 장치의 사용자와 관련된 사용자 스케줄, 또는 액세스가 허용된 계정(account)의 사용자와 관련된 사용자 스케줄)을 생성할 수 있 다. 일 실시예에 따르면, 외부 서버는 스케줄 정보를 분석하여 스케줄 정보가 디바이스 스케줄인 경우 동 작 1607은 수행하지 않고 생략할 수 있다. 동작 1609에서, 외부 서버는 스케줄 정보에 기반하여 스케줄을 분류할 수 있다. 일 실시예에 따르면, 외부 서버는 스케줄 정보를 분석하여 디바이스 스케줄을 관리하기 위한 스케줄 타입(또는 이벤트 타입)(예: 제1 스케줄 타입, 제2 스케줄 타입, 또는 제3 스케줄 타입)을 식별하고, 식별된 스케줄 타입에 따라 스케줄을 분류 할 수 있다. 일 실시예에 따라, 외부 서버의 스케줄을 분류하는 동작은, 예를 들면, 전자 장치를 참 조한 설명 부분에서 설명한 바와 같은 전자 장치의 스케줄을 분류하는 동작에 대응하는 동작으로 수행될 수 있다. 동작 1611에서, 외부 서버는 스케줄 분류에 기반하여 디바이스와 관련된 식별 태그를 생성할 수 있다. 일 실시예에 따라, 외부 서버의 식별 태그를 생성하는 동작은, 예를 들면, 전자 장치를 참조한 설명 부 분에서 설명한 바와 같은 전자 장치의 식별 태그를 생성하는 동작에 대응하는 동작으로 수행될 수 있다. 동작 1613에서, 외부 서버는 디바이스 스케줄을 생성할 수 있다. 일 실시예에 따르면, 외부 서버는 식별 태그에 기반하여 스케줄 대상의 적어도 하나의 디바이스를 식별하고, 식별 태그에 기반하여 식별된 디바이 스와 관련된 스케줄을 생성할 수 있다. 동작 1615에서, 외부 서버는 스케줄 간의 충돌 여부를 식별할 수 있다. 일 실시예에 따르면, 외부 서버 는 사용자와 관련된 다른 스케줄(또는 제1 스케줄과 인접(예: 시간적으로 인접)한 인접 스케줄)(이하, ‘ 제2 스케줄’이라 한다)의 식별 태그를 호출할 수 있다. 일 실시예에 따르면, 외부 서버는 제1 스케줄과 인접한 제2 스케줄을 탐색하고, 제2 스케줄의 식별 태그를 호출할 수 있다. 일 실시예에 따르면, 외부 서버 는 제1 스케줄(예: 신규 스케줄)과 제2 스케줄(예: 인접 스케줄)의 식별 태그(예: 시간에 관련된 태그 정 보)에 기반하여 제1 스케줄과 제2 스케줄의 식별 태그(예: 시간에 관련된 태그 정보) 간의 충돌(예: 시간 기반 으로 충돌되는지) 여부를 식별할 수 있다. 일 실시예에 따라, 외부 서버의 스케줄 간 충돌 여부를 식별하 는 동작은, 예를 들면, 전자 장치를 참조한 설명 부분에서 설명한 바와 같은 전자 장치의 스케줄 간 충돌 여부를 식별하는 동작에 대응하는 동작으로 수행될 수 있다. 동작 1617에서, 외부 서버는 추천 정보를 생성할 수 있다. 일 실시예에 따르면, 외부 서버는 스케줄 간의 충돌이 있는 경우, 디바이스와 관련된 변경 옵션을 식별할 수 있다. 일 실시예에 따르면, 외부 서버 는 스케줄 정보에 기반하여 사용자가 디바이스의 제어가 가능한(예: 사용자 스케줄과 충돌을 회피할 수 있는) 동작(또는 모드)을 식별하거나, 또는 캘린더 어플리케이션에 등록된 다른 사용자 별 스케줄 정보에 기반하여 디 바이스와 관련된 제어가 가능한 다른 사용자를 식별할 수 있다. 일 실시예에 따르면, 외부 서버는 스케줄 간에 충돌이 발생하는 경우, 충돌 타입 식별 및/또는 키워드 유추에 기반하여, 충돌 타입 및/또는 유추된 키워 드에 따른 스케줄 변경 옵션을 판단할 수 있다. 일 실시예에 따라, 외부 서버는 판단하는 결과에 따른 변 경 옵션에 기반하여 추천 정보를 생성할 수 있다. 일 실시 예에 따라, 외부 서버의 추천 정보를 생성하는 동작은, 예를 들면, 전자 장치를 참조한 설명 부분에서 설명한 바와 같은 변경 옵션을 추천하는 동작에 대 응하는 동작으로 수행될 수 있다.동작 1619에서, 외부 서버는 추천 정보를 전자 장치로 제공할 수 있다. 일 실시예에 따르면, 외부 서 버는 통신 회로를 통해 추천 정보를 전자 장치로 전송할 수 있다. 동작 1621에서, 전자 장치는 추천 정보를 디스플레이(예: 도 1의 표시 장치, 도 2의 디스플레이 )에 표시할 수 있다. 일 실시예에 따르면, 전자 장치는 통신 모듈을 통해 외부 서버로부터 추천 정보를 수신하고, 수신된 추천 정보를 사용자 인터페이스의 적어도 일부 영역에 중첩(또는 오버레이) 또는 팝업을 통해 표시할 수 있다. 동작 1623에서, 전자 장치는 추천 정보와 관련하여 확인하는 사용자 입력(이하, ‘제2 사용자 입력’이라 한다)을 수신할 수 있다. 일 실시예에 따르면, 전자 장치는 제2 사용자 입력에 응답하여, 추천 정보에 대 한 적용 여부를 식별할 수 있다. 예를 들면, 전자 장치는 제2 사용자 입력이 추천 정보에 따라 디바이스 스케줄의 변경을 승인(또는, 적용)하는 것인지, 또는 디바이스 스케줄의 변경을 취소하는 것인지 식별할 수 있 다. 일 실시예에 따라, 제2 사용자 입력이 디바이스 스케줄을 변경을 승인(또는, 적용)하는 입력인 것을 예로 한다. 동작 1625에서, 전자 장치는 제2 사용자 입력에 기반하여 응답 정보를 외부 서버로 전송할 수 있다. 일 실시예에 따르면, 전자 장치는 제2 사용자 입력에 기반하여 디바이스 스케줄을 변경 옵션에 따라 변경 (또는, 적용)할 것을 요청하는 응답 정보(예: ACK 신호)를, 통신 모듈을 통해 외부 서버로 전송할 수 있다. 동작 1627에서, 외부 서버는 디바이스 스케줄을 변경할 수 있다. 일 실시예에 따르면, 외부 서버는 통신 회로를 통해 전자 장치로부터 응답 정보를 수신할 수 있다. 일 실시예에 따라, 외부 서버 는 응답 정보가 디바이스 스케줄의 변경(또는, 적용)을 요청하는 응답 정보인 경우, 디바이스 스케줄을 추천된 변경 옵션에 따라 변경하여 적용할 수 있다. 일 실시예에 따르면, 추천된 변경 옵션에 따른 변경 동작은, 예를 들면, 다른 사용자에게 디바이스 스케줄과 관련된 디바이스의 운영(예: 디바이스의 관리 및/또는 제어)을 요청 하는 옵션을 포함할 수 있고, 외부 서버는 해당 다른 전자 장치에게 디바이스 스케줄과 관련된 요청을 전 송하는 동작을 포함할 수 있다. 동작 1629에서, 외부 서버는 스케줄링을 수행할 수 있다. 일 실시예에 따르면, 외부 서버는 캘린더 어플리케이션에 등록된 스케줄들에 대한 스케줄링을 통해, 각 스케줄과 관련된 알람 및/또는 제어 시점을 모니 터링 할 수 있다. 동작 1631에서, 외부 서버는 해당 스케줄에 해당 기능을 수행할 수 있다. 일 실시예에 따르면, 외부 서버 는 스케줄링의 결과(또는, 모니터링의 결과)에 기반하여, 특정 스케줄에 관련된 알람 및/또는 제어 시점에, 해당 스케줄에 관련된 기능을 수행할 수 있다. 예를 들면, 외부 서버는 해당 스케줄이 디바이스 스케줄에 따른 디바이스 제어인 경우, 해당 디바이스를 제어할 수 있는 장치(예: 전자 장치 또는 중앙 제 어 장치)(또는 해당 전자 장치의 장치 관리 어플리케이션(예: smart thing application))로 제어 정보를 전송할 수 있다. 다른 예를 들면, 외부 서버가 디바이스를 직접 제어할 수 있는 경우, 외부 서버는 해당 디 바이스에 디바이스의 동작 제어(예: 설정된 옵션에 따른 동작 제어)와 관련된 커맨드를 해당 디바이스로 전송할 수 있다. 다른 예를 들면, 외부 서버는 해당 스케줄이 특정 사용자 스케줄과 관련된 알람인 경우, 해당 사 용자의 전자 장치(예: 전자 장치)로 제어 정보(예: 스케줄과 관련된 알람(예: 스케줄 정보 및/또는 알람음)을 발생(또는, 출력)하도록 하는 제어 정보)를 전송할 수 있다. 다양한 실시예들에 따르면, 도 16에서는 외부 서버의 동작을 도시하였으나, 외부 서버는, 예를 들면, 캘린더 관리 서버, 서비스 서버, 또는 연결 디바이스 관리 서버와 같이 복수의 서버를 포함할 수 있고, 복수의 서버에 기반하여 외부 서버의 동작은 분산 처리될 수 있다. 예를 들면, 도 16의 예시에서, 스케줄을 분류 하는 동작에 대응하는 동작 A(예: 동작 1607 내지 동작1609)는 캘린더 관리 서버에 의해 처리하고, 추천 정보를 제공하는 동작에 대응하는 동작 B(예: 동작 1611 내지 동작 1619)은 서비스 서버에 의해 처리하고, 스케줄링에 따른 디바이스와 관련된 제어 동작에 대응하는 동작 1627 내지 동작 1631은 연결 디바이스 관리 서버에 의해 처 리할 수도 있다. 도 17a는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 17a는 다중 사용자 스케줄에 기반한 디바이스의 세부 기능 및 디바이스 동작을 추천하는 예를 나타낼 수 있다. 도 17a에 도시한 바와 같이, 다양한 실시예들에 따른 캘린더 어플리케이션의 사용자 인터페이스는, 다중 사용자 와 다중 사용자 별 디바이스와 관련된 스케줄을 등록 및 관리할 수 있다. 일 실시예에 따라, 화면 1701의 예시를 참조하면, 사용자 인터페이스는 스케줄과 관련된 날짜를 지정(또는, 확 인)하기 위한 제1 영역, 스케줄과 관련된 사용자 또는 디바이스를 식별할 수 있는 관련 정보를 제공하기 위한 제2 영역, 및 사용자 별 스케줄 정보를 제공하고, 사용자의 스케줄을 입력할 수 있는 제3 영역 을 포함할 수 있다. 일 실시예에 따라, 제2 영역은 다중 사용자(예: 제1 사용자(“Susan”), 제2 사용자(“Ted”), 제3 사용자(“Mark”), 제4 사용자(“Kate”))에 대한 사용자 스케줄 구분과 사용자 별 디바 이스 스케줄(예: “Device”)과 관련된 구분의 용이성을 위한 다양한 객체에 기반하여 관련 정보를 제공할 수 있다. 일 실시예에 따르면, 제2 영역은 다중 사용자 및 디바이스 별 스케줄을 각각의 다른 컬러로 구분하 여, 사용자 별 및/또는 사용자 별 디바이스와 관련된 스케줄의 사용자 식별의 용이성을 제공할 수 있다. 일 실시예에 따라, 화면 1701의 예시에서, 사용자(예: 제1 사용자(“Susan”))는 자신의 스케줄을 기반으로 디 바이스와 관련된 추천을 받기 위해 자신의 스케줄 영역 중 신규 스케줄을 위한 입력 영역(예: 영역)에서 세탁을 위한 예약 스케줄을 생성할 수 있다. 예를 들면, 사용자는 영역을 선택하여 세탁에 관련된 스케줄 정보를 입력할 수 있다. 일 실시예에 따라, 전자 장치는 스케줄 정보에 관련된 입력을 수신하면, 입력된 스케줄 정보(예: “Susan”의 스케줄 정보)를 분석하고, 디바이스 스케줄과 사용자 스케줄(예: “Susan”의 사 용자 스케줄) 간에 충돌되는 정보(예: 식별 태그)가 있는지 판단할 수 있다. 예를 들면, 전자 장치는 사용 자의 스케줄 영역에 기반하여 사용자와 관련된 제1 스케줄 정보(예: PM2:00~PM3:00의 Yoga Class 스케줄, PM5:00~PM6:00의 Pick up 스케줄)(예: 인접 스케줄)를 획득하고, 영역을 통해 입력된 디바이스와 관련된 제2 스케줄 정보(예: PM4:00부터 디바이스(예: 세탁기)의 표준 세탁 모드 스케줄)를 획득하고, 상호 간에 충돌 여부를 판단할 수 있다. 일 실시예에 따라, 세탁기의 표준 세탁 모드의 경우 1시간 20분이 소요(예: 세탁 종료 시간 PM5:20)되는 것을 예로 설명한다. 이러한 경우, 제1 스케줄 정보 중 PM5:00~PM6:00의 Pick up 스케줄의 일 부(예: PM5:00~PM5:20)와 제2 스케줄 정보의 일부(예: PM5:00~PM5:20)가 충돌할 수 있다. 예를 들면, 디바이스 스케줄 일부가 사용자의 부재에 해당하는 시간 동안 충돌될 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄(예: 신규 스케줄)과 사용자 스케줄(예: 인접 스케줄)이 충돌하는 경우, 스케줄 간 충돌을 사용자에게 알리고, 디바이스의 변경 옵션과 관련된 추천 정보를 제공할 수 있다. 예를 들면, 전자 장치는 사용자 인터페이스에 적어도 일부 영역 중첩(또는, 팝업) 또는 화면 전환을 통해, 화면 1703의 예시와 같이, 추천 정보를 제공할 수 있다. 일 실시예에 따라, 화면 1703의 예시와 같이, 전 자 장치는 스케줄 충돌과 관련된 정보(예: 현재 설정된 표준세탁 모드 사용시 종료 시간이 5:20분으로 외 부 일정과 시간이 겹칩니다.)와, 적어도 하나의 변경 옵션(예: 제1 옵션(예: 그대로 진행), 제2 옵션, 제 3 옵션)을 제공할 수 있다. 일 실시예에 따라, 제2 옵션은 사용자의 스케줄을 고려하여, 사용자 스 케줄과 디바이스 스케줄이 충돌되지 않도록 디바이스의 동작 모드를 변경할 것을 제안하는 옵션으로, 예를 들면, “퀵 모드로 변경 시 4시30분에 세탁이 종료됩니다. 퀵 모드로 변경하시겠습니까?”와 같이 충돌을 회피 할 수 있는 디바이스의 동작 모드의 변경을 제안하는 옵션을 포함할 수 있다. 일 실시예에 따라, 제3 옵션 은 캘린더 어플리케이션에 등록된 다른 사용자의 스케줄을 고려하여, 디바이스의 관리를 다른 사용자에게 요청을 제안하는 옵션으로, 예를 들면, “제2 사용자(“Ted”)에게 해당 스케줄을 요청하겠습니까?”와 같이 디 바이스의 관리를 다른 사용자에게 요청할 것을 제안하는 옵션을 포함할 수 있다. 도 17a의 예시에서는 사용자가 제2 옵션을 선택하는 것을 예로 할 수 있다. 일 실시예에 따라, 전자 장치는 제1 옵션을 선택하는 사용자 입력에 기반하여, 디바이스 스케줄을 변경(예: 디바이스의 동작 모드를 추천된 옵션에 따라 변경(예: 표준세탁 모드 -> 퀵 모드)하고, 이를 캘린더 어플리케이션에 적용(또는, 반영)할 수 있다. 일 실시예에 따라, 화면 1705의 예시와 같이, 전자 장치는 캘린더 어플리케이션에서 디바이스 스케줄 영역 중, 변경된 디바이스 스케줄에 대응하는 영역(예: 영역) 에 생성할 수 있다. 예를 들면, 전자 장치는 퀵 모드로 설정 값을 변경하고, 디바이스 스케줄에 반영하여 나타낼 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄을 생성하여 표시할 때, 컬러에 기반하 여 디바이스 조작 관련 사용자(또는, 책임자(예: 제1 사용자(“Susan”))를 구분하여 표시할 수 있다. 도 17b는 다양한 실시예들에 따른 디바이스의 운영을 변경하는 예를 설명하기 위해 도시하는 도면이다. 일 실시예에 따라, 도 17b는 사용자가 사용(예: 디바이스 스케줄을 생성)하고자 하는 디바이스(예: 세탁 기)와 관련된 디바이스 스케줄을, 캘린더 어플리케이션이 아닌, 해당 디바이스를 통해 직접 등록하는 예 를 나타낼 수 있다. 일 실시예에 따라, 도 17b에서는 디바이스 운영과 연관된 스케줄 정보(예: 동작 모드)에 기반한 디바이스 스케줄(예: 제1 스케줄)과 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 사용 자 스케줄(예: 제2 스케줄) 간의 시간 정보에 기반하여 디바이스의 운영과 관련된 옵션을 출력하는 예를 나타낼 수 있다. 도 17b를 참조하면, 동작 1711에서, 사용자는 사용하고자 하는 디바이스에서 원하는 모드를 설정할 수 있 다. 예를 들면, 사용자는 디바이스에서 스케줄 정보에 연관된 동작 모드를 입력할 수 있다. 일 실시예에 따라, 사용자는 디바이스의 모드 설정에 관련된 조작 패널을 조작하는 사용자 입력에 기반하여, 동 작 1713과 같이, 디바이스의 동작 모드를 제1 모드(예: 5번 모드)로 설정할 수 있다. 일 실시예에 따르면, 디바이스는 사용자로부터 디바이스 운영과 연관된 스케줄 정보(예: 제1 모드 의 설정에 연관된 정보)(이하, ‘스케줄 정보’라 한다)를 입력하는 사용자 입력을 수신할 수 있다. 일 실시예에 따라, 디바이스는 스케줄 정보에 기반하여, 디바이스의 모드(예: 세탁 모 드)를 제1 모드로 설정할 수 있다. 예를 들면, 디바이스는 스케줄 정보에 기반하여 제1 모드로 동 작하는 제1 스케줄(예: 디바이스 스케줄)을 생성할 수 있다. 일 실시예에 따라, 사용자는 디바이스와 관련된 스케줄 정보를 입력하고, 사용자 입력에 기 반하여, 디바이스가 스케줄 정보에 따른 제1 스케줄을 시작(또는 예약 수행)하도록 할 수 있다. 일 실시예에 따라, 디바이스는 제1 스케줄을 시작하도록 하는 사용자 입력을 수신할 수 있고, 사용자 입력에 기반하여 스케줄 정보에 기반한 제1 스케줄을 수행(또는 예약 스케줄 관리)할 수 있다. 다양한 실시예들에 따르면, 디바이스는 제1 스케줄을 시작(예: 사용자에 의해 설정된 세탁 모드를 실행) 하기 전에, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄(예: 제1 스케줄과 인접된 사용자 스케줄)에 기반하여, 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는(또는 중첩되는) 구간(또는 오버랩 정보(overlap information))을 식별할 수 있다. 일 실시예에 따라, 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간의 식별은, 예를 들면, 디바이스 또는 외부 서버를 통해 수행될 수 있다. 일 실시예에 따르면, 디바이스는 제1 스케줄을 실행하기 전에, 캘린더 어플리케이션에 저장되어 있는 적 어도 하나의 제2 스케줄에 연관된 스케줄 정보를 식별할 수 있다. 일 실시예에 따르면, 디바이스는 제1 스케줄을 실행하기 전에, 설정된(또는 액세스가 허용된) 계정(account)에 기반하여 외부 서버에 접속하여 캘린더 어플리케이션에 접근하고, 외부 서버로부터 제2 스케줄에 연관된 스케줄 정보를 수신할 수도 있다. 일 실시예에 따라, 디바이스는 제1 스케줄의 스케줄 정보와 제2 스케줄의 스케줄 정보에 기반하여, 제1 스케줄의 시간 정보와 제2 스케줄의 시간 정보를 식별할 수 있고, 제1 스케줄과 제2 스케줄의 시간 정보를 비교할 수 있다. 일 실시예에 따라, 디바이스는 제1 스케줄과 제2 스케줄 간의 시간 정보를 비교하는 결 과에 기반하여, 제1 스케줄과 제2 스케줄 간에 적어도 일부 겹치는 구간(예: 시간 정보가 충돌되는 구간(또는 오버랩 정보))이 있는지 여부를 식별할 수 있다. 예를 들면, 디바이스는 오버랩 정보에 적어도 기반하여 스케줄 간의 충돌 여부를 식별할 수 있다. 일 실시예에 따라, 디바이스는 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간이 있 는 경우(예: 충돌이 있는 경우), 동작 1715에서, 제1 스케줄과 관련된 디바이스의 운영을 변경할 수 있는 옵션 을 출력할 수 있다. 예를 들면, 디바이스는 “현재 세팅하신 5번 모드는 OOO 일정과 충돌이 있습니 다. 세탁이 더 빨리 끝나는 2번 모드로 변경하시겠습니까? 혹은 가족 A에게 세탁물 건조를 요청하시겠습니까?” 와 같이 적어도 하나의 옵션을 출력할 수 있다. 일 실시예에 따라, 디바이스는 구비된 출력 장치(예: 디스플레이, 및/또는 스피커)에 기반하여, 시각적 출력(예: 디스플레이 표시) 및/또는 청각적 출력(예: 음성 출력)을 통해 사용자에게 옵션과 관련된 정보를 제공할 수 있다. 일 실시예에 따라, 사용자는 디바이스에 의해 출력된 옵션에 기반하여, 어느 하나의 옵션을 선택하 는 입력을 수행할 수 있다. 예를 들면, 사용자는 음성 입력(예: “응, 2번 모드로 변경해줘”)을 통해 어느 하 나의 옵션을 선택할 수 있다. 일 실시예에 따라, 옵션을 선택하는 입력은, 예를 들면, 음성 입력을 비롯하여, 매뉴얼 입력(예: 노브(knob) 입력, 버튼 입력, 또는 터치 입력)을 포함할 수 있고, 사용자는 음성 입력 또는 매 뉴얼 입력을 통해 어느 하나의 옵션을 선택할 수 있다. 디바이스는 선택된 옵션에 기반하여 제1 스케줄과 관련된 동작을 수행할 수 있다. 예를 들면, 디바이스는 옵션을 선택하는 입력(예: 음성 입력 또는 매뉴얼입력)에 기반하여, 기 생성된 제1 스케줄에 연관된 제1 모드를 제2 모드(예: 2번 모드)로 변경하고, 변경 된 제2 모드에 기반하여 제1 스케줄을 수행할 수 있다. 다른 예를 들면, 디바이스는 옵션을 선택하 는 입력(예: 음성 입력 또는 매뉴얼 입력)에 기반하여, 캘린더 어플리케이션의 다른 사용자(예: 가족 A)의 전자 장치로, 제1 스케줄에 관련된 요청 정보를 전송할 수 있다. 다른 실시예에 따라, 디바이스는 제1 스케줄에 연관된 스케줄 정보를 외부 서버로 전송할 수 있다. 일 실시예에 따르면, 디바이스는 제1 스케줄을 실행하기 전에, 설정된(또는 액세스가 허용된) 계정 (account)에 기반하여 외부 서버에 접속하여 캘린더 어플리케이션에 접근할 수 있다. 일 실시예에 따라, 외부 서버는 디바이스로부터 제1 스케줄에 연관된 스케줄 정보를 수신하고, 제1 스케줄의 스 케줄 정보와 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄에 연관된 스케줄 정보에 기 반하여, 제1 스케줄의 시간 정보와 제2 스케줄의 시간 정보를 식별할 수 있고, 제1 스케줄과 제2 스케줄의 시간 정보를 비교할 수 있다. 일 실시예에 따라, 외부 서버는 제1 스케줄과 제2 스케줄 간의 시간 정보를 비교 하는 결과에 기반하여, 제1 스케줄과 제2 스케줄 간에 적어도 일부 겹치는 구간(예: 시간 정보가 충돌되는 구간 (또는 오버랩 정보))이 있는지 여부를 식별할 수 있다. 예를 들면, 외부 서버는 오버랩 정보에 적어도 기 반하여 스케줄 간의 충돌 여부를 식별할 수 있다. 일 실시예에 따르면, 외부 서버는 스케줄 간의 충돌 여 부를 식별할 수 있다. 일 실시예에 따라, 외부 서버는 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간이 있 는 경우(예: 충돌이 있는 경우), 제1 스케줄과 관련된 디바이스의 운영을 변경할 수 있는 옵션을 식별하 고, 충돌을 통지하는 충돌 정보와 식별된 옵션(예: ACK 응답)을 포함하여 디바이스에 전송할 수 있 다. 일 실시예에 따라, 외부 서버는 제1 스케줄과 제2 스케줄 간의 시간 정보가 적어도 일부 겹치는 구간 이 없는 경우(예: 충돌이 없는 경우), 비충돌(non-conflict) 정보(예: NACK 응답)를 디바이스에 전송할 수 있다. 일 실시예에 따라, 디바이스는 외부 서버로부터의 응답(예: ACK 응답 또는 NACK 응답)에 기반하여, 전술한 바와 같은 변경된 옵션을 출력하거나, 기 생성된 제1 스케줄과 관련된 동작을 수행할 수 있다. 도 18은 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 18은, 예를 들면, 도 17a의 예시에서 사용자가 제3 옵션을 선택하는 경우의 일 예 를 나타낼 수 있다. 도 18을 참조하면, 전자 장치는 사용자의 제3 옵션을 선택하는 사용자 입력에 기반하여, 대상 전자 장치(예: 제2 사용자(“Ted”)의 전자 장치)로 디바이스 스케줄에 관련된 요청 정보를 전송할 수 있다. 일 실시 예에 따라, 대상 전자 장치는, 전자 장치로부터 디바이스 스케줄에 관련된 요청을 수신하고, 화면 1801의 예시와 같이, 수신된 요청 정보를 디스플레이(예: 도 1의 표시 장치)에 표시할 수 있다. 일 실시예에 따라, 요청 정보는 화면 1801의 예시와 같이, 제1 사용자(“Susan”)로부터 디바이스 스케줄(예: 세탁 스케줄) 이 요청되었으며, 디바이스 스케줄에 따른 스케줄 정보(예: 시작 시간, 종료 시간)와 디바이스 스케줄과 관련된 상태 정보(예: 상태보기, 수락, 거절)를 제공할 수 있다. 일 실시예에 따라, 대상 전자 장치는 제2 사용자(“Ted”)의 사용자 입력에 기반하여, 디바이스 스케줄과 관련 된 상태보기를 제공하거나, 디바이스 스케줄을 수락하거나, 또는 디바이스 스케줄을 거절할 수 있다. 일 실시예 에 따라, 대상 전자 장치는, 사용자 입력에 기반하여 수락 또는 거절과 관련된 응답을 전자 장치(또는 실 시예에 따라 외부 서버)로 전송할 수 있다. 일 실시예에 따라, 도 18의 예시에서는 제2 사용자(“Ted”)가 디바이스 스케줄을 수락하는 예를 나타낼 수 있다. 일 실시예에 따라, 전자 장치(또는 실시예에 따라 외부 서버)는 대상 전자 장치(또는 제2 사용자(“ Ted”)의 디바이스 스케줄의 요청과 관련된 수락에 기반하여, 디바이스 스케줄을 변경(예: 디바이스의 동작 모 드를 추천된 옵션에 따라 변경(예: 표준세탁 모드 -> 퀵 모드)하지 않고, 제1 사용자(예”Susan”)가 입력(또는 설정)한 스케줄 정보(예: 표준세탁 모드)에 기반하여 캘린더 어플리케이션에 적용(또는, 반영)할 수 있다. 일 실시예에 따라, 화면 1803의 예시와 같이, 전자 장치는 캘린더 어플리케이션에서 디바이스 스케줄 영역 중, 설정된 디바이스 스케줄에 대응하는 영역(예: 영역)에 디바이스 스케줄을 생성할 수 있다. 예를 들면, 전자 장치는 표준세탁 모드로 설정 값을 유지하고, 디바이스 스케줄에 반영하여 나타낼 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄을 생성하여 표시할 때, 컬러에 기반하여 디바이스 조작 관련 사용자(또는, 책임자(예: 제2 사용자(“Ted”))를 구분하여 표시할 수 있다. 일 실시예에 따르면, 도 17a에서 디바이스 스케줄과 관련된 영역과 같이, 디바이스 스케줄은 “ PM4:00~PM4:30”(예: 변경된 옵션에 따른 시간)으로 생성되고, 디바이스 조작 관련 사용자가 제1 사용자(“ Susan”)임을 지시하는 해당 컬로로 제공될 수 있다. 일 실시예에 따르면, 도 18에서 디바이스 스케줄과 관련된 영역과 같이, 디바이스 스케줄은 “PM4:00~PM5:20”(예: 제1 사용자(“Susan”)가 입력한 디바이스 스케 줄과 관련된 시간)으로 생성되고, 디바이스 조작 관련 사용자가 제2 사용자(“Ted”)임을 지시하는 해당 컬러로 제공될 수 있다. 도 19는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 19는 다중 사용자 스케줄에 기반한 디바이스의 세부 기능 및 디바이스 동작을 추천하는 다른 예를 나타낼 수 있다. 도 19에 도시한 바와 같이, 화면 1901의 예시에서, 다중 사용자(예: 제1 사용자(“Susan”), 제2 사용자(“Ted ”), 제3 사용자(“Mark”), 제4 사용자(“Kate”))는 가족 공통의 스케줄을 기반으로 추천을 받기 위해 공통 스케줄 영역(예: “Family Dinner”)에서 에어컨을 위한 예약 스케줄을 생성할 수 있다. 예를 들면, 다중 사용 자 중 적어도 일 사용자는 공통 스케줄 영역을 선택하여 에어컨에 관련된 스케줄 정보를 입력할 수 있다. 일 실 시예에 따라, 전자 장치는 스케줄 정보에 관련된 입력을 수신하면, 입력된 스케줄 정보를 분석하고, 공통 스케줄과 관련된 사용자의 정보를 식별하고, 세부 기능 설정 값 선택을 사용자에게 요청할 수 있다. 예를 들면, 전자 장치는 공통 스케줄 영역에 기반하여 다중 사용자 별로 해당 디바이스(예: 에어컨)와 관련된 스케줄 정보(또는 사용 패턴)(예: 사용자 별 에어컨 온도)를 획득하고, 다중 사용자 별 디바이스와 관련된 설정 값을 제공하여, 적정한 설정 값의 선택을 요청할 수 있다. 일 실시예에 따라, 화면 1903의 예시와 같이, 전자 장치는 해당 디바이스(예: 에어컨)와 관련하여 다중 사 용자 별 상이한 설정 값에 대한 정보를 제공하고, 그에 관한 선택을 요청하는 정보를 제공할 수 있다. 예를 들 면, 전자 장치는 해당 디바이스와 관련된 사용자 별 상이한 설정 값의 존재에 관한 정보(예: 현재 선택하 신 디바이스의 경우, 3건의 사용자 별 맞춤 온도가 있습니다.)와, 사용자 별 설정 값에 관한 정보(예: Ted 23도, Susan 28도, Kate 26도) 및 어느 일 설정 값을 선택할 것을 요청하는 정보(예: 아래에서 원하시는 맞춤 온도를 선택해 주시길 바랍니다.)를 제공할 수 있다. 일 실시예에 따르면, 전자 장치는 선택된 설정 값을 해당 디바이스(예: 에어컨)의 공통 스케줄 일정 예약 시 우선적으로 적용할 지 여부를 설정할 수 있는 추가 옵션을 더 제공할 수 있다. 예를 들면, 공통 스케 줄과 관련하여 스케줄이 요청된 디바이스가 에어컨인 것을 예로 하면, 전자 장치는 에어컨을 공통 스케줄 에 예약할 시 선택된 해당 맞춤 온도를 우선적으로 사용할 지를 확인하는 옵션을 제공하며, 만약 옵션에 대한 사용자 선택 시, 이후 관련 공통 스케줄에서 해당 디바이스(예: 에어컨)의 설정 값을 지정된 설정 값으로 자동 설정하여 제공할 수 있다. 일 실시예에 따라, 전자 장치는 어느 일 설정 값(예: Kate 26 도)를 선택하는 사용자 입력에 기반하여, 디 바이스 스케줄을 공통 스케줄과 연관지어 적용(예: 디바이스의 동작 모드를 설정 값에 따라 스케줄 등록)하고, 이를 캘린더 어플리케이션에 적용(또는, 반영)할 수 있다. 일 실시예에 따라, 화면 1905의 예시와 같이, 전자 장치는 캘린더 어플리케이션에서 디바이스 스케줄 영역 중, 다중 사용자와 관련된 공통 스케줄에 대응하는 영역(예: 영역)에 생성할 수 있다. 예를 들면, 전자 장치는 에어컨 스케줄을 등록하고 에어컨의 동 작 모드(예: 동작 온도)로 지정된 설정 값(예: Kate 27 도)으로 변경됨을 반영하여 나타낼 수 있다. 일 실시예 에 따르면, 전자 장치는 디바이스 스케줄을 생성하여 표시할 때, 컬러에 기반하여 디바이스 조작 관련 사 용자(또는, 책임자(예: “Kate”))를 구분하여 표시할 수 있다. 도 20a는 다양한 실시예들에 따른 디바이스 스케줄을 추가하는 다른 예를 도시하는 도면이다. 도 20b는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 20a와 도 20b는 캘린더 어플리케이션에 기반한 직접 입력이 아닌, 연계된 다른 어플리케 이션(예: 리마인더(reminder) 어플리케이션)을 통해 디바이스 제어 스케줄을 캘린더 어플리케이션 추가하는 예 를 나타낼 수 있다.도 20a를 참조하면, 화면 2001의 예시는, 디바이스 제어 스케줄을 추가할 수 있는 다른(또는 연관) 어플리케이 션(예: 리마인더 어플리케이션)의 사용자 인터페이스의 예를 나타낼 수 있다. 일 실시예에 따라, 전자 장치 는 리마인더 어플리케이션을 실행하는 사용자 입력을 수신하고, 사용자 입력에 기반하여 리마인더 어플리 케이션을 실행할 수 있다. 일 실시예에 따라, 화면 2001의 예시에서, 전자 장치는 리마인더 어플리케이션 과 관련된 사용자 인터페이스를 디스플레이(예: 도 1의 표시 장치)에 표시할 수 있다. 사용자는 화면 2001 의 예시와 같은 사용자 인터페이스에 기반하여 할일 리스트(예: To-Do 리스트)를 생성할 수 있다. 예를 들면, 사용자는 다른 사용자(예: “Ted”)에게 디바이스 스케줄을 할당(assign)하기 위해 기능을 설정(또는, 활성화) 할 수 있다. 예를 들면, 화면 2001의 예시에서, 엘리먼트 2010의 예시와 같이 “Device Calendar” 설정을 온 (On) 할 수 있다. 일 실시예에 따르면, 전자 장치는 사용자의 “Device Calendar”을 설정하는 사용자 입력에 기반하여, 대 상 전자 장치(예: “Ted”의 전자 장치)로 디바이스 스케줄에 관련된 요청 정보를 전송할 수 있다. 일 실시예에 따라, 대상 전자 장치는, 전자 장치로부터 디바이스 스케줄에 관련된 요청을 수신하고, 화면 2003의 예시 와 같이, 수신된 요청 정보를 디스플레이에 표시할 수 있다. 일 실시예에 따라, 요청 정보는 화면 2003의 예시 와 같이, 전자 장치의 사용자(예: “Susan”)로부터 디바이스 스케줄(예: 세탁 스케줄)이 요청되었으며, 디바이스 스케줄과 관련된 상태 정보(예: 상태보기, 수락, 거절)를 제공할 수 있다. 일 실시예에 따라, 대상 전자 장치는 사용자(예: “Ted”)의 사용자 입력에 기반하여, 디바이스 스케줄과 관련 된 상태보기를 제공하거나, 디바이스 스케줄을 수락하거나, 또는 디바이스 스케줄을 거절할 수 있다. 일 실시예 에 따라, 대상 전자 장치는, 사용자 입력에 기반하여 수락 또는 거절과 관련된 응답을 전자 장치(또는 실 시예에 따라 외부 서버)로 전송할 수 있다. 일 실시예에 따라, 도 20의 예시에서는 사용자(예: “Ted”)가 디바이스 스케줄을 수락하는 예를 나타낼 수 있다. 일 실시예에 따라, 전자 장치(또는 실시예에 따라 외부 서버, 또는 사용자(“Ted”)의 전자 장치)는 디바이스 스케줄의 요청과 관련된 수락에 기반하여, 디바이스 스케줄을 캘린더 어플리케이션에 등록할 수 있다. 일 실시예에 따르면, 디바이스 스케줄을 등록할 때, 대상 사용자(예: “Ted”)의 전체 스케줄 및/또는 특정 조 건(예: 디바이스 운영에 최적화된 옵션(예: 전기료가 싼 구간(또는 시간대))을 고려하여, 디바이스 스케줄과 관 련된 대상 사용자(예: “Ted”)의 스케줄로 등록할 수 있다. 이의 예가 도 20b에 도시된다. 일 실시예에 따라, 화면 2005의 예시와 같이, 캘린더 어플리케이션에서 디바이스 스케줄 영역 중, 설정된 디바 이스 스케줄에 대응하는 영역(예: 영역)에 디바이스 스케줄을 생성할 수 있다. 예를 들면, 전자 장치 는 에코 모드로 디바이스 스케줄에 반영하여 나타낼 수 있다. 일 실시예에 따르면, 전자 장치는 디바 이스 스케줄을 생성할 때, 대상 사용자(예: “Ted”)의 전체 스케줄과 디바이스 운영과 관련된 최적의 조건(예: 전기료가 싼 구간)을 식별하여 옵션으로 제안할 수 있다. 예를 들면, 화면 2007의 예시와 같이, 추천과 관련된 정보(예: 당신의 스케줄과 에너지 효율이 높은 시간을 반영하여 세탁 일정을 추천 드립니다.)와 관련 옵션들(예: 제1 옵션(예: 에콘 모드 4:00~5:00PM), 제2 옵션(예: 다른 시간 추천), 제3 옵션(예: 직접 선택))을 제공할 수 있다. 도 21은 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 21은 디바이스가 설정된 조건(예: 센서 기반 측정(또는, 센싱 값)에 기반하여 작동하도록, 디바이스와 관련된 예약 스케줄을 설정하는 예를 나타낼 수 있다. 도 21을 참조하면, 화면 2101의 예시에서, 사용자(예: “Kate”)는 자신의 스케줄을 기반으로 디바이스와 관련 된 추천을 받기 위해 자신의 스케줄 영역 중 신규 스케줄을 위한 입력 영역(예: 영역)에서 공기청정기 (air purifier)와 관련된 예약 스케줄을 생성할 수 있다. 일 실시예에 따르면, 화면 2103의 예시와 같이, 사용 자는 디바이스(예: 공기청정기)와 관련된 디바이스 스케줄을 위한 시간 구간을 설정하고, 디바이스가 작동 하기 위한 조건(또는 임계 값 모드(threshold mode))을 설정할 수 있다. 예를 들면, 사용자는 디바이스 내 센서에 의 한 측정 값이 특정 수치(예: 실내 미세먼지 농도 35)가 넘는 경우에만 작동하도록 설정할 수 있다. 일 실시예에 따라, 화면 2105의 예시에서, 전자 장치는 디바이스와 관련된 스케줄을 등록하는 사용자 입력 에 기반하여, 디바이스 스케줄을 디바이스 내 센서가 특정 설정 값에 도달하면 디바이스가 동작하도록 하는 디 바이스 스케줄(예: “Air Purifier, 설정 값 모드”)을 디바이스 스케줄 영역 중 해당 영역(예: 영역)에 생성하여 표시할 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄을 생성하여 표시할 때, 컬러에 기반하여 디바이스 조작 관련 사용자(또는, 책임자(예: “Kate”))를 구분하여 표시할 수 있다. 일 실시예에 따르면, 사용자는 자신의 사용자 스케줄 영역 또는 디바이스 스케줄 영역에서 디바이스와 관련된 디바이스 스케줄을 입력할 수 있다. 화면 2101의 예시와 같이, 사용자가 사용자 스케줄을 통해 디바이스 스케줄 을 설정하는 경우, 전자 장치는 사용자 입력에 따라 입력된 스케줄 정보에서 디바이스 스케줄을 식별하고, 화면 2105의 예시와 같이 식별된 디바이스 스케줄을 디바이스 스케줄 영역에 표시할 수 있다. 일 실시예에 따르 면, 사용자 입력에 따른 스케줄 정보에 사용자 스케줄이 포함되는 경우, 전자 장치는 화면 2105의 예시에 서, 사용자의 사용자 스케줄 영역 중 해당하는 영역(예: 화면 2101의 예시에서 선택된 영역)에 해당 스케줄 정 보를 표시할 수 있다. 도 22는 다양한 실시예들에 따른 사용자 인터페이스와 관련된 인터페이스 설정 예를 도시하는 도면이다. 도 23 은 다양한 실시예들에 따른 사용자 인터페이스의 다른 예를 도시하는 도면이다. 도 22를 참조하면, 도 22는 캘린더 어플리케이션과 관련된 설정을 위한 인터페이스(예: Calendar Settings)의 예를 나타낼 수 있다. 도 22에 도시한 바와 같이, 사용자는 캘린더 어플리케이션의 설정 메뉴에서, 캘린더 어플 리케이션을 통해 스케줄 관리할 대상 항목을 선택 설정할 수 있다. 일 실시예에 따르면, 설정 메뉴를 통해, 캘 린더 어플리케이션을 통해 스케줄을 관리할 대상(예: 디바이스, 다중 사용자)과 관련된 온/오프(예: 활성화/비 활성화)를 설정할 수 있다. 예를 들면, 사용자는 온/오프 토글 버튼을 이용하여, 디바이스 스케줄 과, 다중 사용자 별 사용자 스케줄(2220, 2230, 2240)에 관한 온/오프(예: 캘린더 어플리케이션을 통한 표시 여 부)를 설정할 수 있다. 예를 들면, 사용자는 토글 버튼에 기반하여, 캘린더 어플리케이션의 사용자 인터 페이스의 타입(예: 캘린더 타입)을 설정할 수 있다. 예를 들면, 디바이스 스케줄에 연관된 토글 버튼 의 온에 기반하여 사용자 인터페이스를 디바이스 스케줄을 위한 캘린더 타입으로 제공할 수 있다. 일 실시예에 따르면, 캘린더 어플리케이션과 관련된 사용자 인터페이스에서, 디바이스 스케줄과 관련된 영역을 선택적으로 제공할 수 있다. 예를 들면, 도 22에서, 사용자가 디바이스 관리(Device Management) 탭에서 토글 버튼을 오프로 설정하는 경우, 도 23에 예시한 바와 같이, 캘린더 어플리케이션과 관련된 사용자 인터페 이스에서 디바이스 스케줄 영역을 제외하고, 다중 사용자와 관련된 스케줄 영역을 제공할 수 있다. 일 실시예에 따르면, 도 23에 예시한 바와 같이, 디바이스 스케줄 영역이 제외되는 경우, 전자 장치는 적 어도 하나의 사용자에 의한 디바이스 스케줄과 관련하여, 사용자 인터페이스에 디바이스의 상태와 사용 스케줄 을 하나의 스케줄(또는 이벤트)로 표시하여, 다중 사용자와 관련된 하나의 스케줄(예: 공통 스케줄)(예: Robot Vacuum - (Auto Clean))로 등록 및 관리할 수 있다. 일 실시예에 따르면, 공통 스케줄에 관련된 스케줄 박스는, 적어도 일 사용자의 사용자 입력(예: 드래그 앤 드롭(drag & drop))에 기반하여, 다른 시간 대의 영역으로 자유롭게 이동될 수 있으며, 전자 장치는 이 동되는 스케줄 영역에 기반하여 디바이스의 작동(예: 동작 시간) 스케줄을 변경하여 관리할 수 있다. 도 24 및 도 25는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다. 일 실시예에 따라, 도 24와 도 25는, 예를 들면, 도 23에 예시한 바와 같은 사용자 인터페이스의 예시에서, 사 용자의 보기 방식 선택에 따라 스케줄 정보를 제공하는 예를 나타낼 수 있다. 도 24를 참조하면, 도 24의 화면 예시에서, 엘리먼트 2410은 캘린더 어플리케이션이 포함하는 사용자 인터페이 스의 보기 방식(예: Dashboard View)을 선택할 수 있는 객체(예: 제1 객체(“Day”), 제2 객체(“Week”), 제3 객체(“Agenda”))를 나타낼 수 있다. 예를 들면, 사용자는 보기 방식과 관련된 객체를 선택하여, 사용자 인터페이스의 스케줄 정보와 관련된 보기 방식을 변경할 수 있다. 일 실시예에 따라, 도 24는 보기 방식과 관련 된 객체 중 일(Day) 객체의 선택에 기반하여, 다중 사용자와 디바이스와 관련된 스케줄 정보를 일 단위 보기로 제공하는 예를 나타낼 수 있다. 일 실시예에 따라, 사용자는 보기 방식과 관련된 객체 중 주 (Week) 객체의 선택에 기반하여, 다중 사용자와 디바이스와 관련된 스케줄 정보를 주 단위로 보기로 변경하거나, 어젠다(agenda) 객체의 선택에 기반하여, 다중 사용자와 디바이스와 관련된 상세 스케줄 정보 보기 로 변경할 수 있다. 일 실시예에 따르면, 도 24의 예시에서, 디바이스 스케줄과 관련하여, 보기 방식의 선택에 따라, 디바이 스 스케줄(예: “Robot Vacuum - (Auto Clean))에 관하여 제어할 수 있는 기능 범주가 변화될 수 있다.예를 들면, 전자 장치는 도 24의 예시와 같은 상태에서, 어젠다(agenda) 객체가 선택되는 경우, 도 25에 예시한 바와 같은 사용자 인터페이스를 사용자에게 제공할 수 있다. 도 25를 참조하면, 도 25의 화면 예시와 같이, 다중 사용자와 디바이스와 관련된 상세 스케줄 정보를 포함하는 사용자 인터페이스가 제공될 수 있다. 일 실시예에 따라, 상세 스케줄 정보는, 예를 들면, 다중 사용자와 관련 된 사용자 스케줄의 상세 스케줄 정보와 다중 사용자와 연관된 디바이스 스케줄 또는 공통 디바이스 스케줄의 상세 스케줄 정보가 제공될 수 있다. 일 실시예에 따라, 도 25의 예시에서, 도 24의 디바이스 스케줄과 관련된 상세 스케줄 정보(예: 기 능 범주)가 제공될 수 있다. 일 실시예에 따르면, 디바이스 스케줄과 관련된 상세 스케줄 정보는, 예를 들면, 디바이스 스케줄과 관련된 구체적 정보(예: 동작 시간 정보)와 디바이스에 대해 제어할 수 있는 기능 범 주에 대한 정보(예: 모드 설정 값)를 포함할 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄 과 관련된 상세 스케줄 정보를 선택하여, 디바이스의 제어와 관련된 기능 범주를 사용자 입력에 따 라 변경 설정할 수 있다. 예를 들면, 사용자는 상세 스케줄 정보을 선택(예: 터치)하여, 디바이스의 제어 에 관련된 편집 모드로 전환할 수 있고, 편집 모드에서 디바이스와 관련된 제어에 관련된 모드(또는, 설정 값) 을 설정하여, 디바이스 스케줄을 변경할 수 있다. 도 26은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 26을 참조하면, 전자 장치는 사용자 입력에 기반하여 디바이스 스케줄을 생성할 시, 사용자가 주로 사 용하는 디바이스의 기능을 기본 설정 값으로 추천하여 제공할 수 있다. 일 실시예에 따라, 전자 장치는 사용자 입력에 따른 스케줄 정보를 분석하고, 스케줄 정보에 기반하여 디 바이스 스케줄과 관련된 디바이스를 식별할 수 있다. 일 실시예에 따라, 전자 장치는 식별된 디바이스와 관련된 사용자의 사용 패턴을 분석할 수 있고, 사용 패턴에 기반하여 사용자가 해당 디바이스에 관하여 주로 사 용한 기능의 설정 값을 기본 설정 값으로 추천하여 제공할 수 있다. 도 27은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 27을 참조하면, 전자 장치는 사용자 입력에 기반하여 디바이스 스케줄을 생성하거나 변경할 수 있다. 일 실시예에 따라, 전자 장치는 디바이스 스케줄을 생성하거나 변경할 시, 디바이스의 상태 및/또는 사용 자의 사용자 스케줄에 기반하여 디바이스와 관련된 설정 옵션을 제안할 수 있다. 일 실시예에 따라, 화면 2701의 예시에서, 사용자는 디바이스 스케줄과 관련된 영역에 기반하여 디바이스 와 관련된 디바이스 스케줄을 입력할 수 있다. 일 실시예에 따르면, 화면 2703의 예시와 같이, 사용자는 세탁기 의 동작과 관련된 동작 모드(예: 모드-불림, 온도-90도, 탈수-강)를 설정(또는, 변경)할 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄이 생성되거나, 또는 변경되는 경우, 디바이스의 상태 및 사용자의 사용자 스케줄을 분석할 수 있다. 예를 들면, 전자 장치는 영역을 통해 입력된 디바이스 스케줄과 인접 스케줄(예: 인접한 사용자 스케줄)(예: 영역의 사용자 스케줄(예: Soccer Class)) 간의 충돌 여부를 식별할 수 있다. 일 실시예에 따라, 전자 장치는 디바이스 스케줄과 인접 스케줄이 충돌하는 경우, 충돌을 회피할 수 있는 기능 범위 내의 옵션을 식별하고, 충돌과 관련된 정보와 식별된 옵션과 관련된 정보를 사용자에게 제공할 수 있 다. 일 실시예에 따르면, 화면 2703의 예시에서, 전자 장치는, 엘리먼트 2750에 예시한 바와 같이 충돌과 관련된 정보(예: “경고: 불림을 선택 시 2시간 소요 예정. Soccer Class의 스케줄과 중복되어 변경 필요”)와 변경 옵션과 관련된 정보(예: “모드를 표준으로 변경하시거나, 시간을 앞당겨 주세요.”)를 제공할 수 있다. 예를 들면, 전자 장치는 디바이스의 상태 및/또는 사용자의 사용자 스케줄에 기반하여 디바이스와 관련된 옵션(또는, 설정 값)(예: 엘리먼트 2750)을 추천할 수 있다. 도 28 및 도 29는 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천 하는 예를 도시하는 도면들이다. 도 28 및 도 29를 참조하면, 전자 장치는 사용자 입력에 기반하여 디바이스 스케줄을 생성하거나 변경할 수 있다. 일 실시예에 따라, 전자 장치는 디바이스 스케줄을 생성하거나 변경할 시, 디바이스와 연계된 연 계 정보와, 연계 정보에 기반하여 기 설정된 설정 값의 변경과 관련된 추천을 제공할 수 있다. 일 실시예에 따라, 도 28의 화면 예시에서, 사용자는 디바이스(예: Air Conditioner)와 관련된 디바이스 스케줄 을 생성할 수 있다. 일 실시예에 따라, 전자 장치는 디바이스와 관련된 디바이스 스케줄이 생성되는 경우, 디바이스에 연계된 다른 어플리케이션(또는, 다른 서비스)(예: 3rd party 서비스)의 연계 정보를 제공할 수 있다. 일 실시예에 따르면, 전자 장치는 디바이스 스케줄을 생성하는 경우, 해당 디바이스의 사용과 관 련하여 사용자가 관심 있는 다른 서비스(예: 디바이스 사용 패턴 제공 서비스)를 사용자의 사용 패턴에 기반하 여 식별할 수 있다. 일 실시예에 따라, 전자 장치는 다른 서비스의 연계 정보를 분석하고, 연계 정 보를 기반으로 디바이스에 기 설정된 설정 값의 변경을 추천할 수 있다. 일 실시예에 따라, 전자 장치는 다른 서비스에 기반하여 디바이스와 관련된 설정을 변경할 수 있는 객체 를 제공할 수 있다. 일 실시예에 따라, 객체는 연계 정보를 기반으로 추천된 옵션(예: Power-saving mode 전환)에 대한 온/오프(또는, 활성화/비활성)를 선택할 수 있는 객체(예: 온/오프 버튼)를 포 함할 수 있다. 일 실시예에 따라, 전자 장치는 객체와 관련된 사용자 입력(예: 추천된 옵션 적용)(예: 객체 에 기반한 온 설정)에 기반하여 디바이스와 관련된 기 설정된 설정 값을 변경하여 사용자에게 제공할 수 있다. 이러한 예가 도 29에 도시된다. 도 29의 화면 예시에서, 전자 장치는 디바이스와 관련된 기 설정 값 (예: Mode: Turbo)을 추천된 옵션에 따른 설정 값(예: Mode: Power Saving)으로 변경하여 제공할 수 있다. 예를 들면, 전자 장치는 연계 정보에 기반하여 추천된 설정 값을 적용하는 사용자 입력(예: 객체 활성화)에 기반하여, 디바이스(예: Air Conditioner)의 기 설정 값 중 “Turbo mode”를 “Power Saving mode”로 변경하여 사용자에게 제공할 수 있다. 도 30 및 도 31은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천 하는 예를 도시하는 도면들이다. 도 30 및 도 31을 참조하면, 전자 장치는 디바이스(예: 제1 디바이스)와 연속하여 사용된 다른 디바이스 (예: 제2 디바이스)의 사용 패턴을 분석하고, 제1 디바이스와 제2 디바이스 중 어느 일 디바이스와 관련된 디바 이스 스케줄이 생성되거나 변경되는 경우, 해당 디바이스(예: 제1 디바이스 또는 제2 디바이스)와 연속적으로 사용된 다른 디바이스(예: 제2 디바이스 또는 제1 디바이스)와 관련된 스케줄 예약 및/또는 추천을 제공할 수 있다. 일 실시예에 따라, 도 30의 화면 예시에서, 전자 장치는 사용자 입력에 기반하여 제1 디바이스(예: Robot Vacuum)와 관련된 디바이스 스케줄을 생성할 수 있다. 일 실시예에 따라, 전자 장치는 제1 디바이스 와 관련된 디바이스 스케줄을 생성할 때, 캘린더 어플리케이션에 기반하여 제1 디바이스와 연속적으로 사 용된 제2 디바이스(예: Air Purifier)를 식별하고, 제2 디바이스의 사용 패턴을 분석할 수 있다. 일 실시예에 따라, 전자 장치는 제2 디바이스의 사용 패턴에 기반하여, 제2 디바이스와 관련된 디바이스 스케줄 을 생성하여 사용자에게 추천(또는, 제공)할 수 있다. 일 실시예에 따라, 전자 장치는 캘린더 어플리케이 션에 기반하여 제1 디바이스와 연계(또는, 연동)하여 연속적으로 사용된 적어도 하나의 다른 디바이스의 이력 (예: 제1 디바이스의 스케줄과 연계하여 등록(또는, 사용)된 다른 디바이스의 스케줄)을 식별할 수 있고, 식별 된 이력에 기반하여 제1 디바이스와 연계(또는, 연동)하여 연속적으로 운영 가능한 적어도 하나의 다른 디바이 스를 식별할 수 있다. 일 실시예에 따라, 전자 장치는 제2 디바이스의 디바이스 스케줄과 관련된 사용자 입력에 기반하여, 제2 디바이스의 디바이스 스케줄과 관련된 상세 정보을 사용자 인터페이스에 중첩(또는, 팝업)하여 제공할 수 있다. 일 실시예에 따라, 도 31은 사용자의 보기 방식 선택에 따라, 사용자 스케줄과 디바이스 스케 줄과 관련된 상세 페이지로 전환된 예를 나타낼 수 있다. 도 31의 화면 예시에서, 전자 장치는 사용자 입 력에 기반하여 생성된 제1 디바이스와 관련된 디바이스 스케줄에, 제1 디바이스와 연속적으로 사용된 제2 디바 이스와 관련된 디바이스 스케줄과 관련된 상세 정보를 추가(예: 예약/추천)하여 사용자에게 제공할 수 있 다.도 32는 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 32를 참조하면, 전자 장치는 다중 사용자 스케줄에 기반하여 디바이스 스케줄과 관련된 설정을 추천할 수 있다. 일 실시예에 따르면, 전자 장치는 다중 사용자와 관련된 다중 사용자 스케줄과 다중 디바이스의 복합적인 요소에 기반하여 디바이스 스케줄과 관련된 설정을 추천할 수 있다. 예를 들면, 전자 장치는 제1 디바이스에 기 설정된 디바이스 스케줄 및/또는 제1 디바이스의 동작을 고려하여 제2 디바이스에 기 설정된 디 바이스 스케줄과 관련된 설정을 추천할 수 있다. 일 실시예에 따라, 도 32의 화면 예시에서, 제1 디바이스(예: Washing Machine)와 관련된 제1 디바이스 스케줄 (예: Laundry: Normal Drive Mode)과 제2 디바이스(예: Dryer)와 관련된 제2 디바이스 스케줄(예: Dryer: Quick Dry Mode)이 설정된 상태일 수 있다. 일 실시예에 따라, 전자 장치는 사용자 스케줄(예: Soccer Game, Family Dinner) 및/또는 제1 디바이스와 제2 디바이스와 관련된 기 설정된 디바이스 스케줄들을 고려하여, 적어도 하나의 디바이스와 관련된 디바이스 스케줄의 옵션 변경을 추천할 수 있다. 일 실시예에 따라, 도 32의 화면 예시에서, 전자 장치는 사용자 스케줄(예: Family Dinner), 제1 디바이스 스케줄, 및 제2 디바이스 스케줄을 분석하여, 제1 디바이스 스케줄과 제2 디바이스 스케줄 로 제1 디바이스와 제2 디바이스를 동작할 시, 사용자 스케줄(예: Family Dinner)과 디바이스 스케줄 간 의 충돌 여부를 판단할 수 있다. 일 실시예에 따라, 전자 장치는 스케줄 간에 충돌이 발생하는 경우, 제1 디바이스와 제2 디바이스의 동작 상태를 고려하여 적어도 하나의 디바이스와 관련된 옵션 변경을 추천할 수 있 다. 일 실시예에 따라, 전자 장치는 사용자 스케줄(예: Family Dinner) 이전에 제1 디바이스와 제2 디바이 스와 관련된 디바이스 스케줄을 완료할 수 있는 옵션을 제안할 수 있다. 예를 들면, 도 32의 화면 예시에서, 전 자 장치는 제1 디바이스(예: Laundry)의 추천 옵션(예: Quick Drive Mode) 및/또는 제2 디바이스의 추천 옵션(예: Dryer)과 관련된 추천 옵션(예: Quick Dry Mode)을 사용자 입력에 기반하여 사용자 인터페 이스에 중첩(또는, 팝업)하여 제공할 수 있다. 일 실시예에 따라, 추천 옵션(3220, 3240)은 디바이스의 동작(또 는, 디바이스 스케줄)을 중지(또는, 취소)하는 객체(예: 온/오프 객체)를 포함할 수 있다. 도 33은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 33을 참조하면, 전자 장치는 다중 사용자 스케줄에 기반하여 디바이스 스케줄과 관련된 설정을 추천할 수 있다. 일 실시예에 따르면, 전자 장치는 다중 사용자와 관련된 다중 디바이스 스케줄과 다중 디바이스 의 복합적인 요소에 기반하여 디바이스 스케줄과 관련된 설정을 추천할 수 있다. 예를 들면, 전자 장치는 다중 사용자 간 공통 디바이스 스케줄에 대해, 우선순위(priority)를 반영하여 디바이스와 관련된 설정을 추천 할 수 있다. 일 실시예에 따라, 도 33의 화면 예시에서, 전자 장치는 다중 사용자 간 공통 스케줄에서 다중 디바 이스(예: Air Conditioner, Air Purifier, Circulator, Digital Door Lock)와 관련된 기본(또는, 공통) 설정 값(예: 다중 디바이스의 Family Mode로 동작)으로 다중 디바이스의 기능을 설정할 수 있다. 일 실시예에 따라, 전자 장치는 공통 스케줄과 관련된 사용자의 정보를 식별하고, 우선순위의 사용자와 관련된 다중 디 바이스의 기본 설정 값(예: 다중 디바이스의 Kids Mode로 동작)을 식별할 수 있다. 일 실시예에 따라, 전자 장 치는 디바이스와 관련된 기본 설정 값과, 다중 사용자 중 우선순위의 사용자의 디바이스와 관련된 기본 설 정 값이 다른 경우, 디바이스와 관련된 기본 설정 값을 우선순위 사용자의 디바이스와 관련된 기본 설정 값으로 추천하여 제공할 수 있다. 일 실시예에 따라, 도 33의 화면 예시와 같이, 다중 사용자와 관련된 다중 디바이스의 기본 설정 값이 “Family Mode”이고, 우선순위의 사용자와 관련된 다중 디바이스의 기본 설정 값이 “Kids Mode”인 경우, 전자 장치 는 우선순위 사용자의 우선순위를 반영하여 디바이스의 설정을 “Kids Mode”로 변경을 추천하는 추천 정 보를 제공할 수 있다. 일 실시예에 따라, 전자 장치는 사용자 인터페이스에서, 공통 스케줄에 기반 한 “Family Mode”에 따른 기본 설정 값과, 우선순위 사용자에 기반한 “Kids Mode”에 따른 기본 설정 값 간 의 설정 변화에 대한 정보(3351, 3353, 3355, 3357)를 각 디바이스 별로 사용자에게 제공할 수 있다.일 실시예에 따라, 도 33의 화면 예시에서, 전자 장치는 디바이스 스케줄의 설정 값과 관련하여, 사용자가 추천을 적용할 지 여부를 선택할 수 있는 객체(예: 기능 온/오프 버튼)를 제공할 수 있고, 사용자는 객체 에 기반하여 추천된 기본 설정 값의 적용 여부를 선택할 수 있다. 도 34a, 도 34b, 및 도 34c는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다. 일 실시예에 따라, 도 34a, 도 34b, 및 도 34c는 디바이스 스케줄을 생성하는 설정 메뉴(또는 설정 인터페이 스)와, 설정 메뉴에 기반하여 디바이스 스케줄을 생성하는 예를 설명하기 위한 도면이다. 도 34a에 도시한 바와 같이, 다양한 실시예들에 따른 캘린더 어플리케이션의 사용자 인터페이스(또는 설정 메뉴)는, 디바이스 스케줄과 관련된 제목(또는 디바이스 이름, 스케줄 이름)이 표시되는 타이틀 영역, 디 바이스의 운영과 관련된 시간 정보(예: 시작 시간, 완료 시간)의 설정을 위한 시간 설정 영역, 디바이스 스케줄의 적용/비적용 선택을 위한 스케줄 객체, 디바이스 선택을 위한 디바이스 제어(Device Control) 메뉴, 디바이스 스케줄과 관련된 알림 피드백 시간 설정을 위한 알림 시간 메뉴(예: 10 mins before), 스케줄의 반복 설정을 위한 반복 메뉴(예: Repeat), 위치 설정을 위한 메뉴(예: Location), 및/또는 부가적인 정보(예: 메모)를 입력하기 위한 메뉴(예: Memo)를 포함할 수 있다. 일 실시예에 따라, 사용자는 디바이스 스케줄을 생성(또는 활성화)하기 위한 스케줄 객체를 선택(예: 터 치)할 수 있다. 다른 실시예에 따르면, 사용자는 디바이스 스케줄을 적용(또는 활성화)하고자 하는 경우 디바이스 제어 메뉴를 선택(예: 터치)할 수 있다. 일 실시예에 따라, 전자 장치)는 스케줄 객체 또는 디바이스 제어 메뉴를 선택하는 사용자 입 력에 기반하여, 도 34b의 예시와 같이, 스케줄 객체에 시각적 객체(V)를 표시하여 디바이스 스케줄이 활 성화 됨을 지시하고, 적어도 하나의 디바이스와 관련된 정보(예: 디바이스 이름 또는 종류)(예: Washer, Air Conditioner, Robot cleaner, Air dresser)를 포함하는 디바이스 리스트를 디바이스 제어 메뉴와 연관된 서브 메뉴를 통해 표시할 수 있다. 예를 들면, 디바이스 리스트를 포함하는 서브 메뉴는 프레임 인 (frame in) 방식으로 디바이스 제어 메뉴의 하단에 나타날 수 있다. 일 실시예에 따라, 전자 장치는 서브 메뉴에 기반하여 어느 일 디바이스를 선택하는 사용자 입력 (예: 터치)을 수신할 수 있다. 예를 들면, 도 34b의 예시에 따라, 사용자는 서브 메뉴의 디바이스 와 관련된 정보 항목들 중 “Washer” 항목을 선택할 수 있다. 일 실시예에 따라, 전자 장치는 서브 메뉴 에서 특정 항목(예: ‘Washer’ 항목)을 선택하는 사용자 입력을 수신할 수 있고, 사용자 입력에 기반하 여, 선택된 항목에 연관된 디바이스를 식별할 수 있다. 일 실시예에 따라, 도 34c에 도시한 바와 같이, 전자 장치는 선택된 항목에 연관하여 식별된 디바이스와 관련된 정보와 옵션을 사용자 인터페이스를 통해 표시할 수 있다. 예를 들면, 전자 장치는 “Washer” 항 목에 연관된 디바이스(예: Washer)를 식별하고, 타이틀 영역에 해당 디바이스와 관련된 스케줄 이름 (예: Laundry)을 표시하고, 해당 디바이스와 관련된 옵션(예: 동작 모드와 관련된 정보(예: ‘ Mode:불림, Temp:90도, 탈수:강’))을 옵션 영역을 통해 표시할 수 있다. 도 35는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 일 실시예에 따라, 도 35는 디바이스 스케줄을 생성하는 설정 메뉴(또는 설정 인터페이스)와, 설정 메뉴에 기반 하여 디바이스 스케줄을 생성하는 다른 예를 설명하기 위한 도면이다. 다양한 실시예들에 따르면, 전자 장치는 설정 메뉴에서 해시태그(hash tags)(#)를 이용한 키워드에 기반하 여 디바이스 스케줄을 생성(또는 추천)할 수 있다. 일 실시예에 따르면, 도 35에 도시한 바와 같이, 사용자는 타이틀 영역에서 해시태그(예: 해시 기호 ‘#’)와 사용자가 디바이스 스케줄을 생성하고자 하는 디바이 스에 연관된 정보(또는 키워드(또는 단어))(예: ‘Wash’))의 조합을 입력할 수 있다. 예를 들면, 사용자 는 타이틀 영역에 ‘#Wash’를 입력할 수 있다. 일 실시예에 따라, 전자 장치는 해시태그(#)와 키워드(예: ‘#Wash’) 형식(예: 키워드(또는 단어) 에 해시 기호 ‘#’을 붙이는 형태)의 입력에 기반하여, 해시태그(#)를 키워드 검색을 위한 커맨드(command)로인식할 수 있고, 해당 키워드(예: ‘Wash’)에 연관된 디바이스(예: ‘Washer’)를 식별할 수 있다. 일 실시예 에 따라, 전자 장치는 키워드에 연관하여 식별된 디바이스와 관련된 정보와 옵션을 도 34c의 예시와 같이, 사용자 인터페이스를 통해 표시할 수 있다. 예를 들면, 전자 장치는 “Wash” 키워드에 연관된 디바이스 (예: Washer)를 식별하고, 타이틀 영역에 해당 디바이스와 관련된 스케줄 이름(예: Laundry)을 표 시하고, 해당 디바이스와 관련된 옵션(예: 동작 모드와 관련된 정보(예: ‘Mode:불림, Temp:90도, 탈수: 강’)를 옵션 영역을 통해 표시할 수 있다. 도 36a 및 도 36b는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다. 일 실시예에 따라, 도 36a 및 도 36b는 디바이스 스케줄을 생성하는 설정 메뉴(또는 설정 인터페이스)와, 설정 메뉴에 기반하여 디바이스 스케줄을 생성하는 다른 예를 설명하기 위한 도면이다. 다양한 실시예들에 따르면, 전자 장치는 설정 메뉴에서 키워드(또는 단어) 인식에 기반하여 디바이스 스케 줄을 생성(또는 추천)할 수 있다. 일 실시예에 따르면, 도 36a에 도시한 바와 같이, 사용자는 타이틀 영역 에서 사용자가 디바이스 스케줄을 생성하고자 하는 디바이스에 연관된 정보(또는 키워드(또는 단어))(예: ‘Do the laundry’)를 입력할 수 있다. 예를 들면, 사용자는 타이틀 영역에 ‘Do the laundry’를 입력할 수 있다. 일 실시예에 따라, 전자 장치는 키워드(예: ‘Do the laundry’)에 관한 단어 인식을 수행할 수 있 고, 단어 인식에 기반하여 키워드에 연관된 디바이스(예: ‘Washer’)를 식별할 수 있다. 일 실시예에 따라, 전 자 장치는 키워드에 연관하여 식별된 디바이스와 관련된 정보와 옵션을 도 34c의 예시와 같이, 사용자 인 터페이스를 통해 표시할 수 있다. 예를 들면, 전자 장치는 “Wash” 키워드에 연관된 디바이스(예: Washer)를 식별하고, 타이틀 영역에 해당 디바이스와 관련된 스케줄 이름(예: Laundry)을 표시하고, 해당 디바이스와 관련된 옵션(예: 동작 모드와 관련된 정보(예: ‘Mode:불림, Temp:90도, 탈수:강’))을 옵션 영역을 통해 표시할 수 있다. 이상에서 살펴본 바와 같이, 다양한 실시예들에 따른 전자 장치의 동작 방법은, 사용자로부터 디바이스의 운영과 연관된 스케줄 정보를 획득하는 동작, 상기 스케줄 정보에 기반하여, 적어도 하나의 제1 스케줄을 생성 하는 동작, 캘린더 어플리케이션에 저장되어 있는 적어도 하나의 제2 스케줄을 식별하는 동작, 상기 제1 스케줄 의 시간 정보와 상기 제2 스케줄의 시간 정보를 비교하여, 상기 제1 스케줄과 상기 제2 스케줄의 시간 정보가 적어도 일부 겹치는 구간을 식별하는 동작, 상기 제1 스케줄과 상기 제2 스케줄 간의 상기 겹치는 구간에 기반 하여, 상기 제1 스케줄과 관련된 상기 디바이스의 운영을 변경할 수 있는 옵션을 출력하는 동작을 포함할 수 있 다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 상기 캘린더 어플리케이션에 기반하여 상기 제1 스케줄의 디 바이스와 연계하여 사용된 다른 디바이스를 식별하는 동작, 상기 다른 디바이스의 운영과 연관된 스케줄 정보를 획득하는 동작, 상기 스케줄 정보에 기반하여 적어도 하나의 제3 스케줄을 생성하는 동작, 상기 제3 스케줄을 포함하는 옵션을 출력하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 상기 제1 스케줄과 상기 제2 스케줄 간의 시간 정보가 적어 도 일부 겹치는 경우, 상기 캘린더 어플리케이션에 기반하여 적어도 한 명의 다른 사용자와 관련된 스케줄 정보 를 식별하는 동작, 상기 식별된 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 제어를 위한 사용자를 선택하는 동작, 상기 선택된 사용자에게 상기 디바이스와 관련된 운영을 요청하는 옵션을 출력하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 상기 적어도 한 명의 다른 사용자와 관련된 스케줄 정보에 기반하여 상기 디바이스의 운영이 가능한 후보 사용자를 검색하는 동작, 상기 후보 사용자에서 상기 디바이스를 사용하는 빈도 순위에 따라 상기 디바이스의 제어를 위한 상기 사용자를 선택하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 상기 제1 스케줄의 시간 정보와 상기 제2 스케줄의 시간 정 보 간에 겹치지 않는 시간 정보를 식별하는 동작, 상기 식별된 시간 정보에 기반하여 상기 디바이스의 동작 모 드를 식별하는 동작, 상기 동작 모드에 기반하여 상기 디바이스의 작동 소요시간을 변경하는 옵션을 출력하는 동작을 포함할 수 있다.다양한 실시예들에 따르면, 상기 전자 장치의 동작 방법은, 상기 옵션과 관련된 사용자 입력을 획득하는 동작, 상기 사용자 입력이 상기 디바이스의 운영을 변경하는 응답인 경우, 상기 제1 스케줄의 상기 시간 정보를 변경하고, 상기 변경된 시간 정보에 기반하여 상기 제1 스케줄을 상기 캘린더 어플리케이션에 등록하는 동작, 상기 사용자 입력이 상기 디바이스와 관련된 운영을 요청하는 응답인 경우, 선택된 다른 사용자의 응답을 획득 하고, 상기 다른 사용자의 응답에 기반하여 상기 제1 스케줄의 상기 시간 정보를 상기 캘린더 어플리케이션에 등록하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 인공 지능 알고리즘을 이용하여 학습된 학습 모델(learning model)을 이용하여, 캘린더 어플리케이션에서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 출력하는 동작은, 상기 인공 지능 알고리즘으로서, 기계 학습(machine learning), 신경망(neural network), 유전자(genetic), 딥러닝(deep learning), 또는 분류 알고리즘 (classification algorithm) 중 적어도 하나를 이용하여 학습된 학습 모델을 이용하여, 캘린더 어플리케이션에 서 스케줄들 간의 시간 정보가 적어도 일부 겹치는 구간을 예측하고, 상기 적어도 일부 겹치는 구간에 기반하여 디바이스의 운영과 관련된 추천 정보를 획득하는 동작을 포함할 수 있다. 본 명세서와 도면에 개시된 본 발명의 다양한 실시예들은 본 발명의 기술 내용을 쉽게 설명하고 본 발명의 이해 를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 발명의 범위를 한정하고자 하는 것은 아니다. 따라서 본 발명 의 범위는 여기에 개시된 실시예들 이외에도 본 발명의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형 된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2019-0016490", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예들에 따른 통합 지능화(integrated intelligence) 시스템을 나타낸 블록도이다. 도 3은 다양한 실시예들에 따른 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다.도 4는 다양한 실시예들에 따른 사용자 단말이 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면이다. 도 5는 다양한 실시예들에 따른 스케줄 관리를 위한 시스템을 도시하는 도면이다. 도 6은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 7은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 8a, 도 8b, 및 도 8c는 다양한 실시예들에 따른 스케줄 타입의 예를 설명하기 위한 도면들이다. 도 9는 다양한 실시예들에 따른 스케줄 타입에 관련된 식별 태그를 설명하기 위한 도면이다. 도 10은 다양한 실시예들에 따른 스케줄 타입에 관련된 식별 태그를 설명하기 위한 도면이다. 도 11은 다양한 실시예들에 따른 전자 장치의 동작 방법을 도시하는 흐름도이다. 도 12는 다양한 실시예들에 따른 전자 장치에서 디바이스 스케줄에 관한 추천을 제공하는 동작 방법을 도시하는 흐름도이다. 도 13은 다양한 실시예들에 따른 전자 장치에서 디바이스 스케줄에 관한 추천을 제공하는 동작 방법을 도시하는 흐름도이다. 도 14는 다양한 실시예들에 따른 전자 장치에서 태스크를 분리하는 동작을 설명하기 위한 도면이다. 도 15는 다양한 실시예들에 따른 전자 장치에서 디바이스에 관한 추천을 제공하는 동작을 설명하기 위한 도면이 다. 도 16은 다양한 실시예들에 따른 전자 장치와 외부 서버 간의 동작을 도시하는 도면이다. 도 17a는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 17b는 다양한 실시예들에 따른 디바이스의 운영을 변경하는 예를 설명하기 위해 도시하는 도면이다. 도 18은 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 19는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 20a는 다양한 실시예들에 따른 디바이스 스케줄을 추가하는 다른 예를 도시하는 도면이다. 도 20b는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 21은 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 22는 다양한 실시예들에 따른 사용자 인터페이스에 관한 인터페이스 설정 예를 도시하는 도면이다. 도 23은 다양한 실시예들에 따른 사용자 인터페이스의 다른 예를 도시하는 도면이다. 도 24 및 도 25는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다. 도 26은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 27은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 28 및 도 29는 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천 하는 예를 도시하는 도면들이다. 도 30 및 도 31은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천 하는 예를 도시하는 도면들이다. 도 32는 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다. 도 33은 다양한 실시예들에 따른 사용자 인터페이스에 기반하여 디바이스 스케줄에 관한 설정을 추천하는 예를 도시하는 도면이다.도 34a, 도 34b, 및 도 34c는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다. 도 35는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면이다. 도 36a 및 도 36b는 다양한 실시예들에 따른 사용자 인터페이스가 제공되는 예를 도시하는 도면들이다."}
