{"patent_id": "10-2023-0111041", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0009878", "출원번호": "10-2023-0111041", "발명의 명칭": "전자 장치 및 서버 장치가 메시지를 처리하는 방법", "출원인": "삼성전자주식회사", "발명자": "한규진"}}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "서버 장치(200)에 있어서,통신 인터페이스(230);메모리(220); 및상기 통신 인터페이스(230) 및 상기 메모리(220)와 작동적으로 연결되는 프로세서(210)를 포함하고,상기 프로세서(210)는,제1전자 장치(300)를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는대화 히스토리 폴더(1022)를 생성하여 상기 메모리(220) 상에 저장하고,상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트(1060)를 생성하여, 상기 대화 히스토리 폴더(1022)에 저장하고, 및상기 제1전자 장치(300) 및 상기 제1전자 장치(300)에 대응하는 제2전자 장치(400)에, 상기 통신 인터페이스(230)를 통해, 상기 생성된 컨퍼런스 정보 오브젝트(1060)를 전송하도록 설정된 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 컨퍼런스 정보 오브젝트(1060)는,세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함하는 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항 또는 제 2항에 있어서,상기 컨퍼런스 정보 오브젝트(1060)는,그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보에 대응하는 정보를 포함하고,상기 프로세서(210)는,상기 이벤트에 대응하여, 상기 그룹 상태 오브젝트 및 상기 세션 정보 오브젝트는 생성하지 않도록 설정된 서버장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항 내지 제 3항 중 어느 한 항에 있어서,상기 대화 히스토리 폴더(1022)는,상기 제1전자 장치(300)에서 송수신되는 메시지 정보를 저장하는 사용자 폴더의 아래(1010)에 생성되는 서버 장치.공개특허 10-2025-0009878-3-청구항 5 제 1항 내지 제 4항 중 어느 한 항에 있어서,상기 프로세서(210)는,상기 그룹 채팅에서 생성되는 복수의 세션 구간 동안 발생하는 이벤트들 각각의 정보를 포함하는 복수의 컨퍼런스 정보 오브젝트들을 상기 대화 히스토리 폴더(1022)에 저장하도록 설정된 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1항 내지 제 5항 중 어느 한 항에 있어서,상기 프로세서(210)는,상기 이벤트가 발생하는 경우, 미리 정의된 모든 속성 정보를 포함하는 상기 컨퍼런스 정보 오브젝트(1060)를생성하도록 설정된 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1항 내지 제 6항 중 어느 한 항에 있어서,상기 그룹 채팅은 RCS(rich communication services)에 기반한 그룹 채팅이고,상기 프로세서(210)는,상기 이벤트의 발생 시, 상기 통신 인터페이스(230)를 통해, 외부의 RCS 서버(500)로부터 이벤트 정보를 수신하도록 설정된 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1항 내지 제 7항 중 어느 한 항에 있어서,상기 이벤트는,상기 그룹 채팅 상에서 메시지의 전송, 및 상기 그룹 채팅의 참여자의 변경을 포함하는 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1항 내지 제 8항 중 어느 한 항에 있어서,상기 제1전자 장치(300)는 상기 RCS를 지원하는 네이티브 클라이언트(native client)(360)를 포함하고,상기 제2전자 장치(400)는 상기 네이티브 클라이언트를 포함하지 않는 서버 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1항 내지 제 9항 중 어느 한 항에 있어서,상기 프로세서(210)는,상기 생성된 컨퍼런스 정보 오브젝트(1022)를, 상기 통신 인터페이스(230)를 통해, 외부의 푸시 서버(560)로 전송하도록 설정되고,상기 푸시 서버(560)에서 전송되는 푸시 메시지에 포함된 정보를 이용하여 상기 제2전자 장치(400)가 상기 컨퍼런스 정보 오브젝트(1022)를 획득하는 서버 장치.공개특허 10-2025-0009878-4-청구항 11 서버 장치(200)의 메시지 처리 방법에 있어서,제1전자 장치(300)를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는대화 히스토리 폴더를 생성하여 저장하는 동작(1320);상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를생성하여, 상기 대화 히스토리 폴더에 저장하는 동작(1340); 및상기 제1전자 장치(300) 및 상기 제1전자 장치(300)에 대응하는 제2전자 장치(400)에 상기 생성된 컨퍼런스 정보 오브젝트를 전송하는 동작(1360)을 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11항에 있어서,상기 컨퍼런스 정보 오브젝트는,세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 11항 또는 제 12항에 있어서,상기 컨퍼런스 정보 오브젝트는,그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보에 대응하는 정보를 포함하고,상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성하는 동작은,상기 이벤트에 대응하여, 상기 그룹 상태 오브젝트 및 상기 세션 정보 오브젝트는 생성하지 않는 동작을 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11항 내지 제 13항 중 어느 한 항에 있어서,상기 대화 히스토리 폴더는,상기 제1전자 장치에서 송수신되는 메시지 정보를 저장하는 사용자 폴더의 아래에 생성되는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 1항 내지 제 4항 중 어느 한 항에 있어서,상기 컨퍼런스 정보 오브젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하는 동작은, 상기 그룹 채팅에서 생성되는 복수의 세션 구간 동안 발생하는 이벤트들 각각의 정보를 포함하는 복수의 컨퍼런스 정보 오브젝트들을 상기 대화 히스토리 폴더에 저장하는 동작을 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "공개특허 10-2025-0009878-5-제 11항 내지 제 15항 중 어느 한 항에 있어서,상기 컨퍼런스 정보 오브젝트를 생성하는 동작은,상기 이벤트가 발생하는 경우, 미리 정의된 모든 속성 정보를 포함하는 상기 컨퍼런스 정보 오브젝트를 생성하는 동작을 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 11항 내지 제 16항 중 어느 한 항에 있어서,상기 그룹 채팅은 RCS(rich communication services)에 기반한 그룹 채팅이고,상기 이벤트의 발생 시, 상기 통신 인터페이스를 통해, 외부의 RCS 서버로부터 이벤트 정보를 수신하는 동작을더 포함하는 방법."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "전자 장치(400)에 있어서,디스플레이(440);통신 모듈(430);메모리(420); 및상기 디스플레이(440), 상기 통신 모듈(430) 및 상기 메모리(420)와 작동적으로 연결되는 프로세서(410)를 포함하고,상기 프로세서(410)는,상기 메모리(420)에 저장된 클라이언트를 이용해 그룹 채팅 기능을 실행하고,상기 통신 모듈(430)을 통해, 외부의 메시지 서버로부터 상기 그룹 채팅에 관련된 이벤트의 발생에 따라 생성되는 컨퍼런스 정보 오브젝트를 획득하고, 상기 컨퍼런스 정보 오브젝트에 대응하여, 상기 그룹 채팅의 정보를 업데이트 하고, 및상기 업데이트 된 그룹 채팅의 정보를 상기 디스플레이(440) 상에 표시하도록 설정된 전자 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18항에 있어서,상기 프로세서(410)는,상기 통신 모듈(430)을 통해, 외부의 푸시 서버로부터 상기 이벤트에 대응하는 푸시 메시지를 수신하고,상기 푸시 메시지에 포함된 정보를 이용하여 상기 메시지 서버로부터 상기 컨퍼런스 정보 오브젝트를 획득하도록 설정된 전자 장치."}
{"patent_id": "10-2023-0111041", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 18항 또는 제 19항에 있어서,상기 컨퍼런스 정보 오브젝트는,세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함하는 전자 장치.공개특허 10-2025-0009878-6-"}
{"patent_id": "10-2023-0111041", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 문서의 다양한 실시예에 따른 서버 장치는, 통신 인터페이스, 메모리, 및 상기 통신 인터페이스 및 상기 메모 리와 작동적으로 연결되는 프로세서를 포함할 수 있다. 상기 프로세서는, 제1전자 장치를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 상기 메모리 상에 저장하고, 상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하고, 및 상기 제1전자 장치 및 상기 제1전자 장치에 대응하는 제2전자 장치에, 상기 통신 인터페이스를 통해, 상기 생성된 컨퍼런스 정보 오브젝트를 전송하도록 설 정될 수 있다. 그 외에 다양한 실시예가 가능하다."}
{"patent_id": "10-2023-0111041", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서의 다양한 실시예들은 전자 장치 및 서버 장치에 관한 것이며, 예를 들어 사용자가 작성한 메시지를 송 수신할 수 있는 전자 장치 및 다양한 전자 장치로부터 송수신되는 메시지들을 송수신 및 저장할 수 있는 서버 장치에 관한 것이다."}
{"patent_id": "10-2023-0111041", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이동통신 기술의 발전에 따라 휴대용 전자 장치(이하, 전자 장치)는 다양한 데이터 통신 기능을 통해 사용자 경 험을 제공할 수 있다. 전자 장치는 사용자가 작성한 메시지를 상대방에게 전송할 수 있는 SMS(short message service), 또는 MMS(multimedia message service)와 같은 메시지 서비스를 제공할 수 있으며, 최근에는 SMS, 또는 MMS와 같은 레거시 서비스를 대체할 수 있는 RCS(rich communication service)에 기반한 메시지 서비스가 제공되고 있다. RCS는 셀룰러 무선 통신을 통한 메시지 서비스의 표준으로써, IMS(internet protocol multimedia subsystem)를 기반으로 하는 통신 프로토콜을 포함한다. RCS는 SMS, 또는 MMS와 같은 레거시 서비스와 비교할 때, 메시지 길 이의 증가, 읽음 확인 기능 제공, 또는 다른 어플리케이션과 연동 용이성과 같은 다양한 장점이 있어, 넓게 활 용되는 추세이다. 또한, RCS는 다수의 사용자가 실시간으로 참여할 수 있는 그룹 채팅을 제공할 수 있으며, 대 용량 파일의 전송도 제공할 수 있다. 전자 장치에서 RCS에 기반한 그룹 채팅을 사용하는 경우, 전자 장치의 플랫폼(또는 운영 체제)에서 RCS의 지원 이 요구되는데, RCS를 지원하지 않는 장치에서도 그룹 채팅 정보의 동기화가 요구될 수 있다. 예를 들어, 전자 장치의 사용자는 RCS를 지원하지 않는 다른 장치(예: 랩탑 PC)에서 그룹 채팅의 정보를 확인하고자 할 수 있다. 이를 위해, 네트워크 상에서 메시지 스토어 서버(message store server)에 의한 그룹 채팅 동기화가 제공될 수 있다. 메시지 스토어 서버는 RCS 서버와 연동되어 RCS를 지원하지 않는 장치에 그룹 채팅 정보를 제공할 수 있 다. 메시지 스토어 서버는 그룹 채팅 동기화를 위해 그룹 채팅에서 발생한 이벤트의 정보를 포함하는 다양한 오브젝 트들을 생성하고, 생성된 오브젝트들을 저장하고, 다른 서버 및/또는 전자 장치에 전송할 수 있다. RCS 표준에 서는 다양한 타입의 오브젝트와 오브젝트가 저장되는 폴더의 구조가 복잡하게 정의되어 있다. 이와 같은 RCS 표 준에서는 그룹 채팅 동기화를 위해 사용하는 폴더와 오브젝트의 종류가 많기 때문에, 구조가 복잡해지고 구현 난이도가 높아질 수 있다. 또한, 오브젝트의 생성 및 교환을 위한 트랜잭션이 빈번하게 발생하고, 오브젝트의 생성을 위해 필요한 데이터의 종류와 양이 많아질 수 있다. 본 문서에서 이루고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또"}
{"patent_id": "10-2023-0111041", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "다른 기술적 과제들은 아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다. 본 개시(disclosure)(또는 명세서(specification), 발명(invention))에 따른 서버 장치는, 통신 인터페이스, 메모리, 및 상기 통신 인터페이스 및 상기 메모리와 작동적으로 연결되는 프로세서를 포함할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 제1전자 장치를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 상기 메모리 상에 저장하고, 상기 그룹 채팅 에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성하여, 상 기 대화 히스토리 폴더에 저장하고, 및 상기 제1전자 장치 및 상기 제1전자 장치에 대응하는 제2전자 장치에, 상기 통신 인터페이스를 통해, 상기 생성된 컨퍼런스 정보 오브젝트를 전송하도록 설정될 수 있다. 본 문서의 다양한 실시예에 따른 서버 장치의 메시지 처리 방법은, 제1전자 장치를 포함하는 그룹의 그룹 채팅 이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 저장하는 동작, 상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하는 동작, 및 상기 제1전자 장치 및 상기 제1전자 장치에 대응하는 제2전자 장치에 상기 생성된 컨퍼런스 정보 오브젝트를 전송하는 동작을 포함할 수 있다.본 문서의 다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 모듈, 메모리, 및 상기 디스플레이, 상기 통신 모듈 및 상기 메모리와 작동적으로 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 메모리에 저장된 클 라이언트를 이용해 그룹 채팅 기능을 실행하고, 상기 통신 모듈을 통해, 외부의 메시지 서버로부터 상기 그룹 채팅에 관련된 이벤트의 발생에 따라 생성되는 컨퍼런스 정보 오브젝트를 획득하고, 상기 컨퍼런스 정보 오브젝 트에 대응하여, 상기 그룹 채팅의 정보를 업데이트 하고, 및 상기 업데이트 된 그룹 채팅의 정보를 상기 디스플 레이 상에 표시하도록 설정될 수 있다. 본 문서의 다양한 실시예에 따르면, 그룹 채팅의 동기화 기능을 구현 시에, 오브젝트 및 폴더의 구조를 단순화 하여, 전자 장치 및 서버 장치 상에서 데이터의 양을 줄이고 트랜잭션을 감소시킬 수 있는 메시지 처리 방법을 제공할 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은 아래의 기재로부터 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0111041", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 문서의 다양한 실시예에 대하여 당해 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 문서에 개시되는 발명은 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 도면의 설명과 관련하여, 동일하거나 유사한 구성 요소에 대해서는 동일하거나 유사한 참조 부호가 사용될 수 있다. 또한, 도면 및 관련된 설명에서는, 잘 알려 진 기능 및 구성에 대한 설명이 명확성과 간결성을 위해 생략될 수 있다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전 자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 일 실시예에 따른 메시지 송수신 시스템의 블록도이다. 도 2를 참조하면, 메시지 송수신 시스템은 프라이머리 장치(primary device), 세컨더리 장치(secondary device), 메시지 스토어 서버(message store server), RCS AS(rich communication services application server), 및 xMS 인프라스트럭쳐(xMS infrastructure)를 포함할 수 있다. 각각의 장치 는 네트워크를 통해 서로 연결될 수 있다. 일 실시예에 따르면, 프라이머리 장치 및 세컨더리 장치는 사용자에 의해 사용되는 다양한 형태의 전 자 장치(예: 도 1의 전자 장치)일 수 있다. 예를 들어, 프라이머리 장치 및 세컨더리 장치는 휴 대용 통신 장치(예: 스마트 폰, 또는 태블릿 PC), 컴퓨팅 장치(예: 데스크탑 PC, 또는 랩탑 PC), 또는 웨어러블 장치(예: 스마트 와치, 또는 헤드 마운트 장치)로 구현될 수 있으며, 이에 한정되지는 않는다. 이하에서는, 프 라이머리 장치 및 세컨더리 장치 모두 전자 장치로 지칭될 수도 있다. 도 2에서, 프라이머리 장치 및 세컨더리 장치는 동일한 사용자의 장치로써, 동일한 또는 연동된 식별정보(예: IMEI, 또는 계 정)를 이용함으로써 네트워크 상에서 동일한 사용자의 장치로 인식될 수 있다. 일 실시예에 따르면, 프라이머리 장치는 RCS(rich communication service)를 지원하는 네이티브 클라이언 트(native client)를 포함하는 장치일 수 있다. 프라이머리 장치는 네이티브 클라이언트는 RCS 를 지원하는 어플리케이션의 네이티브 버전으로, 프라이머리 장치의 제조 시에 및/또는 펌웨어 업데이트 시에 설치될 수 있다. 프라이머리 장치는 기본 메시지 어플리케이션을 RCS로 구현할 수 있다. 일 실시예에 따르면, 세컨더리 장치는 네이티브 클라이언트를 포함하지 않고, RCS를 지원하는 다운로 드 가능한 클라이언트(downloadable client)를 포함할 수 있다. 예를 들어, 세컨더리 장치의 플랫폼 (또는 운영 체제)은 기본적으로 RCS를 지원하지 않을 수 있으며, 사용자는 RCS를 지원하는 다운로드 가능한 클 라이언트를 어플리케이션 마켓에서 다운로드 및 설치하여 실행할 수 있다. 일 실시예에 따르면, 하나의 프 라이머리 장치에 대응하는 복수의 세컨더리 장치가 이용될 수 있다. 본 문서에서 네이티브 클라이언트는 RCS AS 또는 xMS 인프라스트럭쳐를 통해 실제 메시지를 송 수신하는 주체일 수 있다. 또한, 다운로드 가능한 클라이언트는 네이티브 클라이언트를 통해 송수신 된 메시지를 동기화 하여 저장 및 사용자에게 제공할 수 있으며, 메시지 스토어 서버를 통해 메시지를 전 송할 수도 있다. 일 실시예에 따르면, RCS AS는 GSMA(global system for mobile communications association) 규격의 RCS 메시지의 송수신을 담당하는 어플리케이션 서버일 수 있다. RCS AS는 RCS와 관련된 사용자 등록 및 인증, 메시지 라우팅, 그룹 채팅, 및/또는 파일 전송과 같은 다양한 RCS 기능을 제공할 수 있다. 일 실시예에 따르면, xMS 인프라스트럭쳐는 3GPP 규격의 레거시 메시지의 송수신을 담당하는 인프라스트럭 쳐일 수 있다. 본 문서에서는 SMS(short message service), MMS(multimedia message service), 또는 LMS(long message service)와 같은 RCS 이전의 레거시 메시지 서비스를 xMS로 지칭할 수 있다. 일 실시예에 따르면, 프라이머리 장치의 네이티브 클라이언트에서 송수신되는 RCS 메시지(또는 RCS MO(mobile originated) / MT(mobile terminated)는 RCS AS를 통해 다른 모바일 단말(또는 상대방 장치)과 송수신되고, 송수신되는 xMS 메시지(또는 xMS MO / MT)는 xMS 인프라스트럭쳐를 통해 다른 모바일 단말과 송수신될 수 있다. 세컨더리 장치의 다운로드 가능한 클라이언트는 RCS AS 및 xMS 인프라스트럭 쳐에 직접 액세스 하지 못할 수 있다. 세컨더리 장치에서 송수신되는 RCS 메시지 또는 xMS 메시지는 메시지 스토어 서버(예: API 서버)를 통해 다른 모바일 단말과 송수신될 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 OMA CPM(open mobile alliance converged IP messaging) 서비 스 환경을 제공하는 서버일 수 있다. 메시지 스토어 서버는 RCS 메시지 및/또는 xMS 메시지와 관련된 데이 터의 라우팅 및 저장과 같은 다양한 동작을 수행할 수 있다. 메시지 스토어 서버는 네이티브 클라이언트 가 송수신한 메시지를 다운로드 가능한 클라이언트에 제공할 수 있다. 또한, 메시지 스토어 서버 는 다운로드 가능한 클라이언트에서 전송되는 메시지를 실제 메시지 서버를 통해 전송하도록 할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 커먼 메시지 스토어(common message store) 및 API(application programming interface) 서버를 포함할 수 있다. 커먼 메시지 스토어는 각 전자 장치(예: 프라이머리 장치, 세컨더리 장치)에서 메시지 스토어 서버를 거쳐 송수신되는 메시지를 저장할 수 있다. API 서버는 다운로드 가능한 클라이언트에서 전송 요청한 RCS 메시지를 RCS AS(50 0)를 거쳐 다른 모바일 단말로 전송하고, 및/또는 전송 요청한 xMS 메시지를 xMS 인프라스트럭쳐를 거쳐 다른 모바일 단말로 전송할 수 있다. 일 실시예에 따르면, 프라이머리 장치의 네이티브 클라이언트에서 다른 모바일 단말로 RCS 메시지를 전송하는 경우, RCS AS로 전송될 수 있다. RCS AS는 RCS 메시지를 메시지 스토어 서버의 커먼 메시지 스토어에 forking 할 수 있다. 메시지 스토어 서버는 커먼 메시지 스토어에 forking 된 RCS 메시지에 대해, 세컨더리 장치의 다운로드 가능한 클라이언트에 동기화 할 수 있다. 또한, 네이 티브 클라이언트에서 다른 모바일 단말로 xMS 메시지를 전송하는 경우, xMS 인프라스트럭쳐로 전송될 수 있다. xMS 인프라스트럭쳐는 xMS 메시지를 메시지 스토어 서버의 커먼 메시지 스토어에 forking 할 수 있다. 메시지 스토어 서버는 커먼 메시지 스토어에 forking 된 xMS 메시지에 대해, 세 컨더리 장치의 다운로드 가능한 클라이언트에 동기화 할 수 있다. 일 실시예에 따르면, 세컨더리 장치의 다운로드 가능한 클라이언트에서 다른 모바일 단말로 RCS 메시 지 또는 xMS 메시지를 전송하는 경우, 메시지 스토어 서버의 API 서버로 전송될 수 있다. API 서버 는 수신되는 RCS 메시지 또는 xMS 메시지를 저장하고, 저장된 RCS 메시지 또는 xMS 메시지를 커먼 메시지 스토어에 동기화 할 수 있다. 메시지 스토어 서버는 커먼 메시지 스토어에 동기화 되어 저장된 RCS 메시지 또는 xMS 메시지에 대해 프라이머리 장치의 네이티브 클라이언트에 동기화 할 수 있다. 도 3은 일 실시예에 따른 메시지 송수신 시스템에서 프라이머리 장치에 의해 메시지의 발신 시 각 엔터티의 동 작을 나타낸 도면이다. 도 3에서 프라이머리 장치(primary device, PD)는 네이티브 클라이언트(native client)(예: 도 2의 네이 티브 클라이언트)를 포함하는 장치로써, 사용자가 전송 요청한 메시지는 네이티브 클라이언트를 통해 네트 워크로 전송될 수 있다. 세컨더리 장치(secondary device, SD)는 다운로드 가능한 클라이언트 (downloadable)(예: 도 2의 다운로드 가능한 클라이언트)를 포함하는 장치로써, 프라이머리 장치와 동일한 사용자의 계정을 통해 네트워크에 액세스할 수 있다. 프라이머리 장치를 이용해 RCS(rich communication services) 기반의 그룹 채팅을 제공할 수 있으며, RCS 네이티브 클라이언트를 포함하는 적어도 하나의 다른 모바일 단말(MT1, MT2)이 참여할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 RCS 메시지와 관련된 데이터의 라우팅 및 저장과 같은 다양한 동작을 수행할 수 있다. 예를 들어, 메시지 스토어 서버는 프라이머리 장치에서 송수신되는 메시지를 세컨더리 장치에서도 동기화 하기 위한 다양한 동작을 수행할 수 있다. 메시지 스토어 서버는 RCS 메 시지의 사용자(예: 발신자, 또는 수신자)의 인증을 수행하는 인증 서버 및 사용자의 계정 정보를 관리하는 계정 서버와 통신할 수 있다. 일 실시예에 따르면, 프라이머리 장치는 사용자 입력에 기초하여, 그룹 채팅 상에서 전송할 메시지를 생성 할 수 있다. 프라이머리 장치는 생성된 그룹 채팅 메시지를 RCS AS로 전송할 수 있다. 프라이머리 장 치의 네이티브 클라이언트는 그룹 채팅 메시지를 RCS 방식을 이용하여 전송할 수 있다. 일 실시예에 따르면, RCS AS는 프라이머리 장치로부터 전송되는 그룹 채팅 메시지를 다른 모바일 단 말(MT1, MT2)로 전송할 수 있다. RCS AS와 프라이머리 장치 또는 다른 모바일 단말 (MT1, MT2) 사이의 인터페이스는 RCS 인터페이스로 구성될 수 있으며, 프라이머리 장치 및 다른 모바일 단말(MT1, MT2)은 RCS 계정으로 RCS AS에 접속할 수 있다. 일 실시예에 따르면, RCS AS는 프라이머리 장치에서 전송되는 그룹 채팅 메시지를 메시지 스토어 서 버로 전달할 수 있다. 예를 들어, RCS AS는 그룹 채팅 RCS 메시지를 메시지 스토어 서버의 커먼 메시지 스토어(예: 도 2의 커먼 메시지 스토어)로 forking할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 수신되는 그룹 채팅 메시지에서 연결된 클라이언트를 확인할 수 있다. 예를 들어, 메시지 스토어 서버는, 계정 서버와의 통신을 통해, 그룹 채팅의 참여자의 계정 정보를 이용하여, 발신자의 계정 또는 수신자의 계정으로 접속한 적어도 하나의 클라이언트(예: 네이티브 클라 이언트, 및/또는 다운로드 가능한 클라이언트)를 확인할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 확인된 클라이언트의 장치로 푸시 메시지(또는 푸시 노티피케 이션)를 전송하도록 푸시 서버로 푸시 메시지(또는 푸시 노티피케이션)을 전송할 수 있다. 이 경우, 메시지 스토어 서버는 푸시 서버에 푸시 메시지의 수신자의 정보(예: 계정, IMEI, 및/또는 IP 주소)를 제 공하고, 푸시 서버에서 수신자의 클라이언트로 푸시 메시지를 전송할 수 있다. 예를 들어, 메시지 스토어 서버는 푸시 서버를 통해 그룹 채팅 메시지의 발신자의 계정으로 접속한 클라이언트를 포함하는 프라 이머리 장치 및 세컨더리 장치에 푸시 메시지를 전송할 수 있다. 푸시 메시지는 그룹 채팅의 ID, 발 신자, 및/또는 메시지를 획득할 수 있는 경로(예: URL)와 같은 정보를 포함할 수 있다. 일 실시예에 따르면, 프라이머리 장치는 푸시 메시지를 수신하는 경우, 푸시 메시지가 자신이 전송한 그룹 채팅 메시지와 관련된 것임을 확인할 수 있다. 프라이머리 장치는 자신이 전송한 그룹 채팅 메시지로 인해 업데이트 사유가 발생했으므로, 푸시 메시지의 수신에 대응하여 별도의 동작을 수행하지 않을 수 있다. 일 실시예에 따르면, 세컨더리 장치는 푸시 메시지를 수신하는 경우, 푸시 메시지에 포함된 정보를 이용하 여, 메시지 스토어 서버에서 그룹 채팅 메시지를 확인할 수 있다. 예를 들어, 푸시 메시지는 그룹 채팅 메 시지를 획득할 수 있는 URL 정보를 포함할 수 있으며, 세컨더리 장치는 해당 URL 정보를 이용하여 메시지 스토어 서버에 접속하여 그룹 채팅 메시지를 획득할 수 있다. 일 실시예에 따르면, 세컨더리 장치는 획득한 그룹 채팅 메시지를 저장하고, 메시지 어플리케이션의 UI를 업데이트 할 수 있다. 도 4는 일 실시예에 따른 메시지 송수신 시스템에서 참여자가 그룹 채팅에서 나간 경우 각 엔터티의 동작을 나 타낸 도면이다. 일 실시예에 따르면, 메시지 스토어 서버는 그룹 채팅 상에서 발생하는 이벤트에 대응하여, 그룹 채팅의 참여자의 클라이언트에 이벤트에 대응하는 정보를 전송할 수 있다. 여기서, 이벤트는 그룹 채팅의 참여자에 대 한 변경 사항으로써, 예를 들어, 새로운 참여자가 그룹 채팅에 참가하는 이벤트 또는 참여자가 그룹 채팅에서 나가는 이벤트를 포함할 수 있다. 도 4를 참조하면, 프라이머리 장치, 3개의 다른 모바일 단말(이하, MT1, MT2, MT3)이 참 여하여 그룹 채팅을 생성한 상태에서, MT3 해당 그룹 채팅에서 나가는 상황일 수 있다. 여기서, 프라이머 리 장치, MT1, MT2 및 MT3은 RCS를 지원하는 네이티브 클라이언트(예: 도 2의 네이티브 클라이언트)를 포함하는 장치일 수 있다. 세컨더리 장치는 다운로드 가능한 클라이언트(예: 도 2의 다운로드 가능한 클라이언트)를 포함하며, 프라이머리 장치와 동일한 사용자의 계정으로 접속한 장치 일 수 있다. 일 실시예에 따르면, MT3이 그룹 채팅에서 나가는 경우, MT3은 RCS AS로 그룹 채팅을 나가는 이 벤트에 관련된 정보를 전송할 수 있다. RCS AS는 그룹 채팅에 속한 참여자(예: 프라이머리 장치, MT1, MT2)의 클라이언트에 해당 이벤트에 관련된 정보를 전송할 수 있다. 예를 들어, RCS AS는 RCS 인터페이스를 통해 프라이머리 장치, MT1, 및 MT2에 그룹 채팅의 변경 사항을 포함하는 정 보를 전송할 수 있다. 일 실시예에 따르면, RCS AS는 MT3이 그룹 채팅에서 나감에 따라 발생된 그룹 채팅의 변경 사항을 메 시지 스토어 서버에 전달할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 상기 변경 사항에 대해서 연결된 클라이언트에 푸시 메시지(또 는 푸시 노티피케이션)를 전달하도록 푸시 서버로 푸시 메시지(또는 푸시 노티피케이션)를 전송할 수 있다. 이 경우, 메시지 스토어 서버는 푸시 서버에 푸시 메시지의 수신자의 정보(예: 계정, IMEI, 및 /또는 IP 주소)를 제공하고, 푸시 서버에서 수신자의 클라이언트(예: 네이티브 클라이언트, 및/또는 다운 로드 가능한 클라이언트)로 푸시 메시지를 전송할 수 있다. 일 실시예에 따르면, 프라이머리 장치는 푸시 메시지를 수신하는 경우, RCS AS를 통해 전달 받은 정 보와 동일한 것을 확인하고, 푸시 메시지의 수신에 대응하여 별도의 동작을 수행하지 않을 수 있다. 일 실시예에 따르면, 세컨더리 장치는 푸시 메시지를 수신하는 경우, 푸시 메시지에 포함된 정보를 이용하 여, 메시지 스토어 서버에서 해당 변경 사항의 정보를 획득할 수 있다. 세컨더리 장치는 메시지 스토 어 서버에서 획득한 정보를 저장하고, 메시지 어플리케이션의 UI를 업데이트 할 수 있다. 도 5는 일 실시예에 따라 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 일 실시예에 따르면, 메시지 스토어 서버(예: 도 2 내지 도 4의 메시지 스토어 서버)는 OMA CPM(open mobile alliance converged IP messaging) 서비스 환경을 제공하는 서버일 수 있다. 메시지 스토어 서버는 RCS 또는 xMS(예: SMS, MMS, 또는 LMS) 메시지와 관련된 정보를 지정된 포맷에 따라 저장할 수 있다. 도 5는 메시지 스토어 서버에 저장되는 사용자 폴더 스토리지 모델(user folder storage model)의 계층적 구조를 도시하고 있 다. 일 실시예에 따르면, 사용자 폴더(user folder)는 각 사용자의 루트 폴더(root folder)일 수 있다. 예를 들어, 사용자 폴더의 아래에는 동일한 계정을 이용한 하나 이상의 클라이언트에서 송수신되는 메시지와 관 련된 정보가 저장될 수 있다. 일 실시예에 따르면, 대화 히스토리 폴더(conversation history folder)(621, 622)는 사용자 폴더의 아래 에 저장되며, 해당 사용자가 속한 각각의 대화방의 정보를 저장하는 폴더일 수 있다. 대화 히스토리 폴더(621, 622)는 사용자가 속한 1:1 채팅 또는 그룹 채팅 마다 별개로 생성될 수 있다. 예를 들어, 사용자가 속한 각각의 1:1 채팅의 대화 히스토리 폴더 및 그룹 채팅의 대화 히스토리 폴더가 생성되고, 해당 대화방 내에서 교환되는 메시지와 관련된 오브젝트가 대화 히스토리 폴더(621, 622)에 저장될 수 있다. 일 실시예에 따르면, 대화 히스토리 폴더의 아래에 메시지 오브젝트(message object), 및 stand- alone 미디어 오브젝트가 저장될 수 있다. 세션 히스토리 폴더(631, 632)의 아래에 저장되지 않고 대화 히 스토리 폴더의 아래에 바로 저장되는 상기 오브젝트들은 레거시 메시지 서비스(또는 xMS)의 메시지와 관련 된 오브젝트일 수 있다. 일 실시예에 따르면, 세션 히스토리 폴더(session history folder)(631, 632)는 하나의 대화방에서 각각의 세션 에서 송수신되는 메시지와 관련된 정보를 저장하는 폴더일 수 있다. 예를 들어, 특정 사용자가 다른 사용자와 1:1 대화방 또는 복수의 다른 사용자와 그룹 채팅 대화방을 생성하는 경우, 대화방에 참여한 클라이언트의 사이 에 세션(session)이 생성될 수 있다. 이러한 세션은 정해진 시간이 경과 하거나, 정해진 시간동안 전송되는 메 시지가 없거나, 및/또는 대화방 내에서 발생하는 이벤트가 없는 경우에 종료될 수 있다. 즉, 하나의 대화방은 생성부터 종료 시까지 적어도 하나의 세션을 구성할 수 있으며, 각각의 세션에서 송수신되는 메시지와 관련된 정보는 각각의 세션 히스토리 폴더의 아래에 저장될 수 있다. 일 실시예에 따르면, 세션 히스토리 폴더의 아래에는 RCS 기반의 메시지와 관련된 오브젝트들이 저장될 수 있다. 예를 들어, 세션 히스토리 폴더에는 각각의 세션에서 송수신되는 메시지와 관련된 메시지 오브젝트 (message object), 파일 전송 히스토리 오브젝트(file transfer history object), 컨퍼런스 정보 오 브젝트(conference information object), 세션 정보 오브젝트(session history object), 및/또는 그 룹 상태 오브젝트(group state object)가 저장될 수 있다. 일 실시예에 따르면, 메시지 오브젝트는 CPM에서 정의된 기본 오브젝트로써, 메시지의 타입 및 포맷을 식 별하는 컨텐츠 타입과 같은 헤더 속성(또는 메타 데이터)을 포함하는 MIME(multipurpose internet mail extensions) 오브젝트를 포함할 수 있다. 메시지 오브젝트는 클라이언트 사이에서 실제로 주고 받은 메시 지의 정보를 포함할 수 있다. 예를 들어, 메시지 오브젝트는 발신자 및 수신자 정보, 시간 정보, subject, conversation ID, contribution ID, P-Asserted-service, IMDN-message-ID, 또는 컨텐츠 타입과 같은 정보를 포함할 수 있다. 일 실시예에 따르면, 파일 전송 히스토리 오브젝트는 클라이언트 사이에서 송수신되는 파일과 관련된 정보 를 포함하는 오브젝트일 수 있다. 일 실시예에 따르면, 그룹 상태 오브젝트는 그룹 채팅과 관련된 정보를 포함하는 오브젝트일 수 있다. 예 를 들어, 그룹 상태 오브젝트는 그룹 채팅의 subject, max user count, policy, 또는 참여자 이름과 같은 그룹 채팅에 관련된 정보를 포함할 수 있다. 그룹 상태 오브젝트는 메시지 오브젝트에 정의된 MIME 헤더의 정보를 포함할 수 있다. 일 실시예에 따르면, 컨퍼런스 정보 오브젝트는 그룹 채팅의 변경 사항과 관련된 정보를 포함하는 오브젝 트일 수 있다. 예를 들어, 컨퍼런스 정보 오브젝트는 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주 제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 세션 정보 오브젝트는 대화방의 세션에 관련된 정보를 포함하는 오브젝트일 수 있다. 세션 정보 오브젝트는 개별 세션의 상태와 관련된 정보를 유지 및 관리할 수 있으며, 각 메시지의 세션 정 보 변경 값을 포함할 수 있다.일 실시예에 따르면, 메시지 스토어 서버는 메시지 서비스의 타입에 따라 정해진 컴포넌트(예: 폴더 및 오브젝 트)를 이용하여 대화 정보를 기록할 수 있다. 예를 들어, 레거시 메시지 서비스(예: SMS, MMS)에 기반한 1:1 채 팅 또는 그룹 채팅 시에는 도 5에 도시된 컴포넌트(예: 폴더 및 오브젝트) 중 대화 히스토리 폴더가 생성 되고, 대화 히스토리 폴더에 저장되는 메시지 오브젝트 및 stand-alone 미디어 오브젝트가 사용 될 수 있다. 또한, RCS에 기반한 1:1 채팅 또는 그룹 채팅 시에는 대화 히스토리 폴더 아래에 각 세션에 대응하는 세션 히스토리 폴더들(631, 632)이 생성될 수 있다. 세션 히스토리 폴더 내에, RCS 메시지와 관 련된 그룹 상태 오브젝트, 컨퍼런스 정보 오브젝트, 세션 정보 오브젝트, 메시지 오브젝트 , 파일 전송 히스토리 오브젝트가 저장될 수 있다. 상기에서 설명한 각 오브젝트에 포함된 정보들은 일 실시예에 해당하며, 각 오브젝트에 포함되는 정보가 설명한 예에 한정되지는 않는다. 도 6은 일 실시예에 따라 세션 히스토리 폴더 내에 저장된 데이터의 예를 도시한 도면이다. 일 실시예에 따르면, 세션 히스토리 폴더(session history folder)는 특정 대화방에 대응하는 대화 히스토 리 폴더(conversation history folder)의 아래에 저장되며, 각각의 세션 별로 생성될 수 있다. 예를 들어, 특정 사용자가 다른 사용자와 1:1 대화방 또는 복수의 다른 사용자와 그룹 채팅 대화방을 생성하는 경우, 대화방에 참여한 클라이언트의 사이에 세션(session)이 생성될 수 있다. 이러한 세션은 정해진 시간이 경과 하거나, 정해 진 시간동안 전송되는 메시지가 없거나, 및/또는 대화방 내에서 발생하는 이벤트가 없는 경우에 종료될 수 있다. 도 6을 참조하면, 세션 히스토리 폴더에는 세션 정보 오브젝트, 그룹 상태 오브젝트(675, 676), 메시 지 오브젝트(652, 653), 및 파일 전송 히스토리 오브젝트가 저장될 수 있다. 일 실시예에 따르면, 세션 히스토리 폴더의 명칭은 세션 정보 오브젝트의 contribution ID에 기반하 여 결정될 수 있다. 일 실시예에 따르면, 세션 정보 오브젝트는 메시지의 발신자, 시간, subject, conversation ID, contribution ID, 및/또는 컨텐츠 타입과 관련된 정보가 저장될 수 있다. 그룹 상태 오브젝트(675, 676)에는 그 룹 채팅의 참여자 정보가 저장될 수 있다. 일 실시예에 따르면, 메시지 오브젝트(652, 653)는 클라이언트 사이에서 실제로 주고 받은 메시지의 정보를 포 함할 수 있다. 파일 전송 히스토리 오브젝트는 특정 클라이언트에서 전송한 파일과 관련된 정보를 포함할 수 있다. 도 7은 일 실시예에 따른 대화 히스토리 폴더 및 세션 히스토리 폴더의 구조를 도시한 것이다. 일 실시예에 따르면, 전자 장치를 포함하는 그룹 채팅이 개시되는 경우, 그룹 채팅의 대화방이 생성되고, 해당 대화방 내에서 송수신되는 데이터가 대화 히스토리 폴더 내에 저장될 수 있다. 대화 히스토리 폴더 (conversation history folder)는 사용자 폴더의 아래에 저장될 수 있다. 일 실시예에 따르면, 각각의 대화방은 적어도 하나의 CPM 세션으로 구성될 수 있다. 예를 들어, 특정 사용자가 다른 사용자와 1:1 대화방 또는 복수의 다른 사용자와 그룹 채팅 대화방을 생성하는 경우, 대화방에 참여한 클 라이언트의 사이에 CPM 세션(session)이 생성될 수 있다. 이러한 CPM 세션은 정해진 시간이 경과하거나, 정해진 시간동안 전송되는 메시지가 없거나, 및/또는 대화방 내에서 발생하는 이벤트가 없는 경우에 종료될 수 있다. 일 실시예에 따르면, CPM 세션은 SIP(session initiation protocol) 세션을 포함할 수 있다. SIP 세션에서 정 의된 속성 정보는 그룹 상태 오브젝트에 저장될 수 있다. 일 실시예에 따르면, SIP 세션은 하위 세션으로 SIP invite 세션 및 MSRP(message session relay protocol) 세 션을 포함할 수 있다. SIP invite 세션은 SIP를 이용하여 그룹 채팅의 개시 시에 사용자 사이에 연결을 설정하 고 제어하는 데 사용될 수 있다. MSRP는 실시간 메시징 서비스를 위한 프로토콜로 MSRP 세션은 그룹 채팅의 참 여자 사이에서 실시간으로 교환되는 메시지에 사용될 수 있다. 일 실시예에 따르면, SIP invite 세션은 대화 ID(conversation ID) 및 contribution ID가 정의될 수 있다. 일 실시예에 따르면, 대화 히스토리 폴더는 대화 ID를 포함되고, 세션 히스토리 폴더는 contribution ID 를 포함할 수 있다. 예를 들어, 세션 히스토리 폴더의 명칭은 해당 SIP 세션의 contribution ID를 포함할 수 있다.일 실시예에 따르면, MSRP 세션을 통해 그룹 채팅의 참여자가 전송한 메시지가 전송될 수 있으며, 전송되는 메 시지의 정보는 메시지 오브젝트로 생성되어 세션 히스토리 폴더의 아래에 저장될 수 있다. 도 5 내지 도 7을 통해 설명한 폴더 및 오브젝트 저장 구조에 따르면, 그룹 채팅 메시지를 동기화하기 위해서 사용하는 폴더 및 오브젝트의 종류가 많을 수 있다. 이에 따라, 서버 및 클라이언트 측의 구조가 복잡해지고 구 현 난이도가 높을 수 있다. 또한, 하나의 메시지 송수신 시에 생성되는 폴더와 오브젝트의 개수가 많기 때문에, 오브젝트 생성을 위한 서버들 사이 또는 서버와 클라이언트 사이에서 트랜잭션이 빈번하게 발생할 수 있다. 또 한, 초기 동기화 시에 클라이언트가 오브젝트를 생성해서 서버에 업로드 하도록 동작하는데, 이 때 각각의 메시 지를 처리하기 위해서 생성해야 하는 오브젝트의 수가 많아지고, 이 오브젝트를 생성하기 위해 필요한 데이터를 클라이언트에서 항상 저장하고 있어야 하는 문제가 있다. 이하에서는 도 8 내지 도 13을 통해 그룹 채팅의 동기화 기능 구형 시 꼭 필요한 정보를 가지고 있는 오브젝트 및 폴더만 사용함으로써, 간단한 구조로 구현 가능하고, 트랜잭션 및 저장되는 데이터를 감소시킬 수 있는 실시 예들에 대해 설명하기로 한다. 도 8은 일 실시예에 따른 서버 장치의 블록도이다. 도 8을 참조하면, 일 실시예에 따른 서버 장치는 통신 인터페이스, 프로세서 및 메모리를 포함할 수 있다. 도시된 구성 중 일부가 생략 또는 치환되더라도 본 문서의 다양한 실시예들을 구현할 수 있다. 도시된(또는 도시되지 않은) 서버 장치의 각 구성 중 적어도 일부는 상호 작동적으로(operatively), 기능 적으로(functionally) 및/또는 전기적으로 (electrically) 연결될 수 있다. 일 실시예에 따르면, 서버 장치는 OMA CPM(open mobile alliance converged IP messaging) 서비스 환경을 제공하는 메시지 스토어 서버(message store server)(예: 도 2 내지 도 4의 메시지 스토어 서버)일 수 있 다. 일 실시예에 따르면, 통신 인터페이스는 네트워크를 통한 다양한 전자 장치와의 통신을 지원할 수 있다. 통신 인터페이스는 HTTP(hypertext transfer protocol), REST(representational state transfer), MQTT(message queuing telemetry transport), 또는 소켓(socket)과 같은 다양한 인터페이스를 제공할 수 있다. 서버 장치는 네트워크 상의 클라이언트들(예: 도 2의 프라이머리 장치, 세컨더리 장치), 및/또 는 서버들(예: 도 2의 RCS AS, 푸시 서버)과 통신 인터페이스를 통해 통신할 수 있다. 일 실시예에 따르면, 메모리는 다양한 데이터를 일시적 또는 비일시적으로 저장할 수 있다. 메모리는 RAM(random access memory), 가상 메모리, 캐시 메모리, 및/또는 플래시 메모리와 같은 다양한 종류의 메모리 를 포함할 수 있다. 일 실시예에 따르면, 프로세서는 서버 장치의 각 구성 요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성으로써, 하나 이상의 프로세서들로 구성될 수 있다. 프로세서가 서버 장치 상에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한정됨이 없을 것이나, 이하에서는 그룹 채팅 에서 발생한 이벤트를 전자 장치(예: 프라이머리 장치 및 세컨더리 장치)에서 동기화 할 수 있도록 하는 다양한 실시예에 대해 설명하기로 한다. 후술할 프로세서의 동작들은 메모리에 저장된 인스트럭션들을 로딩 함으로써 수행될 수 있다. 일 실시예에 따르면, 프로세서는 제1전자 장치(또는 프라이머리 장치)를 포함하는 그룹의 그룹 채팅이 개 시됨을 확인할 수 있다. 여기서, 그룹 채팅은 RCS(rich communication service)에 기반하여 다수의 참여자 사이 에서 메시지를 송수신할 수 있는 그룹 채팅일 수 있다. 제1전자 장치는 네이티브 클라이언트를 포함하는 프라이 머리 장치(예: 도 2 내지 도 4의 프라이머리 장치)일 수 있다. 예를 들어, 네이티브 클라이언트는 RCS를 지원하 는 어플리케이션의 네이티브 버전으로, 프라이머리 장치의 제조 시에 및/또는 펌웨어 업데이트 시에 설치될 수 있다. 제1전자 장치는 기본 메시지 어플리케이션을 RCS로 구현할 수 있다. 일 실시예에 따르면, 제1전자 장치의 사용자는 동일한 계정을 이용해 제2전자 장치를 통해서도 그룹 채팅을 사 용할 수 있다. 여기서, 제2전자 장치는 네이티브 클라이언트를 포함하지 않고, RCS를 지원하는 다운로드 가능한 클라이언트(downloadable client)를 포함하는 세컨더리 장치(예: 도 2 내지 도 4의 세컨더리 장치)일 수 있다. 제2전자 장치는 제1전자 장치와는 다른 플랫폼(또는 운영 체제)으로 동작할 수 있다. 일 실시예에 따르면, 프로세서는 제1전자 장치를 포함하는 그룹 채팅이 개시되는 경우, 그룹 채팅에 관련 된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 메모리 상에 저장할 수 있다. 대화 히스토리 폴더(conversation history folder)는 사용자 폴더의 아래에 저장되며, 해당 사용자가 속한 각각의 대화방의 정보를 저장하는 폴더일 수 있다. 예를 들어, 프로세서는 제1전자 장치의 사용자 계정에 대해 루트 폴더인 사용자 폴더를 생성하고, 사용자 폴더의 아래에 제1전자 장치가 속하는 각각의 대화방에 대응하는 대화 히스토리 폴더 를 생성할 수 있다. 대화 히스토리 폴더는 1:1 채팅 및 그룹 채팅 각각에 대해 생성될 수 있다. 일 실시예에 따르면, 프로세서는 그룹 채팅에서 생성되는 복수의 세션 구간동안 발생하는 이벤트의 정보를 포함하는 오브젝트들을 대화 히스토리 폴더 내에 저장할 수 있다. 예를 들어, 대화 히스토리 폴더에는 메시지 오브젝트, 컨퍼런스 정보 오브젝트, 파일 전송 히스토리 오브젝트가 저장될 수 있다. 일 실시예에 따르면, 프로세서는 대화 히스토리 폴더 아래에 각 세션에 대응하는 세션 히스토리 폴더를 생 성하지 않고, 모든 오브젝트들을 대화 히스토리 폴더의 아래에 직접적으로(directly) 저장할 수 있다. 예를 들 어, 그룹 채팅 대화방이 생성되는 경우, 대화방에 참여한 클라이언트와의 사이에 세션이 생성될 수 있으며, 이 러한 세션은 정해진 시간이 경과하거나, 정해진 시간동안 전송되는 메시지가 없거나, 및/또는 대화방 내에서 발 생하는 이벤트가 없는 경우에 종료될 수 있다. 도 5의 실시예에서는 각 세션에서 생성되는 오브젝트들을 각 세 션에 대응하는 세션 히스토리 폴더의 아래에 저장하였으나, 일 실시예에 따른 서버 장치는 오브젝트의 저 장 시 세션 단위로 별도의 세션 히스토리 폴더로 구분하지 않고, 대화 히스토리 폴더의 아래에 모든 오브젝트들 을 저장할 수 있다. 일 실시예에 따르면, 프로세서는 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 발생한 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성할 수 있다. 여기서, 그룹 채팅에 관련된 이벤트는 특정 참여자로부터 의 메시지의 발신, 참여자가 대화방에서 나가는 경우, 또는 새로운 참여자가 대화방에 들어오는 경우와 같이, 그룹 채팅에서 발생하는 다양한 이벤트를 포함할 수 있다. 일 실시예에 따르면, 컨퍼런스 정보 오브젝트는 그룹 채팅의 변경 사항과 관련된 정보를 포함하는 오브젝트일 수 있다. 예를 들어, 컨퍼런스 정보 오브젝트는 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 표 1은 컨퍼런스 정보 오브젝트에 포함되는 속성 정보의 예를 도시한 것이다. 표 1 Attribute Type Description message context StringInformation about the context and characteristics of a message contribution-ID StringThe entity that stores the message. timestamp StringThe time when the change was made. Nanoseconds entity String Group chat session ID conference- descriptionsubject String Unique ID subject-exttimestamp StringThe time when the change was made participant String The participant that made the change icon icon-uri String URL pointing to the image file-infoIconFileInfo Icon File Information timestamp StringThe time when the change was made participant String The participant that made the change maximum-user-count Int Maximum number of participants allowed policy list of stringCPM Controlling Function Policy users User entity StringURI for the user in the conference display-text String Display text yourown Boolean The CPM User to which the conference info object is sent roles String User roles endpoin tentityString Entity key for each endpoint statusString \"connected\", \"disconnected\"일 실시예에 따르면, 프로세서는 컨퍼런스 정보 오브젝트는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보에 대응하는 정보를 포함할 수 있다. 여기서, 그룹 상태 오브젝트는 그룹 채팅 의 subject, max user count, policy, 또는 참여자 이름과 같은 그룹 채팅에서 변경된 내역에 관련된 정보를 포 함하는 오브젝트일 수 있다. 세션 정보 오브젝트는 각 메시지의 세션 정보 변경 값을 포함하는 오브젝트 일 수 있다. 표 2는 그룹 상태 오브젝트에 포함되는 속성 정보의 예를 도시한 것이다. 표 2 Attribute Type Description lastfocussessionid anyURI CPM Group Session Identity, timestamp dateTime Time when the event occurred group-type String type of CPM Group Session iw-number anyURI the unique interworking number status CPM User’s status removed participant CPM User has been removed participan tparticipant information name String current participant comm-addr anyURI communication address yourown String current user own role String role of the CPM User subject Group chat subject text String the subject data participant participant Participant that has made the change timestamp dateTime the date and time when the change icon icon information source icon source information icon-uri anyURI URI pointing to the icon image file-info String content-ID of the icon image participant participant Participant that has made the change timestamp dateTime the date and time when the change max-user-count unsignedInt the maximum of users policy string the CPM Controlling Function Policy 표 3은 세션 정보 오브젝트에 포함되는 속성 정보의 예를 도시한 것이다. 표 3 Attribute Type Description session session information session-type String type of CPM Session. session-replaces String Contribution-ID invited-participants participantlist of addresses the invited participants 일 실시예에 따르면, 프로세서는 그룹 채팅에서 이벤트 발생 시 그룹 상태 오브젝트 및 세션 정보 오브젝 트를 생성하지 않고, 이벤트에 대응하는 정보를 컨퍼런스 정보 오브젝트를 이용해서 저장할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함되는 속성 정보에 대응하는 정보를 포함할 수 있으며, 그룹 상태 오브젝트 및 세션 정보 오브젝트를 생성하지 않고도, 컨퍼런스 정보 오브젝트에 정의된 속성 정보를 이용하여 그룹 채팅에서 발생한 이벤트의 정보를 저장할 수 있다. 표 4는 그룹 상태 오브젝트의 속성 정보와 이를 대체할 수 있는 컨퍼런스 정보 오브젝트의 속성 정보를 매칭하 여 나타낸 것이다.표 4 Attribute replace method lastfocussessionid Entity timestamp Timestamp group-type message context iw-number the entity of the yourown is true. status removed User > endpoint > status participant name User > display-text comm-addr User > entity yourown User > yourown role User > roles subject text conference-description > subject participant conference-description > subject-ext > participant timestamp conference-description > subject-ext > timestamp icon source icon-uri conference-description > icon > icon-uri file-info conference-description > icon > file-info participant conference-description > participant timestamp conference-description > timestamp max-user-count conference-description > maximum-user-count policy conference-description > policy 표 5는 세션 정보 오브젝트의 속성 정보와 이를 대체할 수 있는 컨퍼런스 정보 오브젝트의 속성 정보를 매칭하 여 나타낸 것이다. 표 5 Attribute replace method session session-type message context session-replaces Contribution-ID invited-participants Users 예를 들어, 그룹 채팅 대화방에서 특정 참여자가 나간 경우, 그룹 상태 오브젝트의 status 속성에 removed 항목 이 추가되는 것으로 기록될 수 있다. 또한, 그룹 채팅 대화방에서 특정 참여자가 나간 경우, 컨퍼런스 정보 오 브젝트에서 삭제된 참여자의 status를 disconnected로 변경할 수 있고. 또는, 해당 참여자의 이전 status가 connected인 경우, remove로 처리할 수 있다. 프로세서는 이와 같이 동일한 이벤트에 대한 정보를 그룹 상 태 오브젝트를 이용하지 않고, 컨퍼런스 정보 오브젝트만 이용하여 저장할 수 있다. 일 실시예에 따르면, 프로세서는 그룹 채팅에서 이벤트가 발생하는 경우, 미리 정의된 모든 속성 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성할 수 있다. 즉, 프로세서는 이벤트 발생에 따라 변경되는 정보만 포함하지 않고, 컨퍼런스 정보 오브젝트를 모든 속성 정보를 포함하는 full notify 형태로 저장할 수 있다. 일 실시예에 따르면, 서버 장치는 데이터의 저장과 관련하여 데이터의 유효 기간을 나타내는 TTL(time to live)을 포함할 수 있다. 서버 장치는 생성 및 저장 후 정해진 시간이 경과된 오브젝트는 삭제할 수 있다. 이에 따라, TTL을 그대로 적용하는 경우, 그룹 채팅의 생성 시점에서 TTL 기간이 지난 이후의 그룹 채팅의 경우 동기화 동작이 불가능할 수 있다. 이에, 프로세서는 각각의 그룹 채팅 내에서 가장 최근에 생성된 컨퍼런 스 정보 오브젝트는 TTL 기간이 지나더라도 삭제하지 않을 수 있다. 프로세서는 그룹 채팅 내에서 이벤트 발생에 따라 새로운 컨퍼런스 정보 오브젝트가 생성되는 경우, 대화 히스토리 폴더의 최상단에(또는 가장 최근 시간으로) 생성된 컨퍼런스 정보 오브젝트를 저장하도록 설정할 수 있다. 대화 히스토리 폴더의 최상단에 저장된 컨퍼런스 정보 오브젝트는 TTL 기간이 지나도 삭제되지 않으며, 클라이언트(예: 제2전자 장치)에서 그룹 채 팅의 정보를 최초 획득 시에 최근 생성된 시간 순으로 오브젝트를 확인할 수 있도록 설정되어, 대화 히스토리 폴더의 최상단에 저장된 가장 최근에 생성된 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 프로세서는 통신 인터페이스를 통해, 제2전자 장치에 생성된 컨퍼런스 정보 오 브젝트를 전송할 수 있다. 예를 들어, 서버 장치는 푸시 서버를 통해 제1전자 장치 및 제2전자 장치에 이 벤트 발생에 대응하는 푸시 메시지를 전송할 수 있다. RCS 네이티브 클라이언트를 포함하는 제1전자 장치는 다 른 서버(예: 도 2 내지 도 4의 RCS AS)를 통해 이벤트 정보를 획득할 수 있으므로, 푸시 메시지의 수신에 대응하는 동작은 수행하지 않을 수 있다. 네이티브 클라이언트를 포함하지 않는 제2전자 장치는 푸시 메시지의 수신에 대응하여, 푸시 메시지에 포함된 경로를 이용하여 서버 장치에 액세스 하고, 서버 장치의 메 모리에 저장된 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 제2전자 장치는 서버 장치로부터 컨퍼런스 정보 오브젝트를 획득하고, 이로부터 그룹 채팅의 정보를 업데이트 할 수 있다. 제2전자 장치는 그룹 채팅과 관련된 UI에 이벤트 관련 내용을 반영할 수 있다. 도 9는 일 실시예에 따른 전자 장치의 블록도이다. 도 9를 참조하면, 일 실시예에 따른 전자 장치는 디스플레이, 통신 모듈, 프로세서 및 메 모리를 포함할 수 있다. 도시된 구성 중 일부가 생략 또는 다른 구성으로 치환되더라도 본 문서의 다양한 실시예를 구현할 수 있다. 전자 장치는 도시된 구성 이외에도 도 1의 전자 장치의 구성 및/또는 기능 중 적어도 일부를 더 포함할 수 있다. 도시된(또는 도시되지 않은) 전자 장치의 각 구성 중 적어도 일부는 상호 작동적으로(operatively), 기능적으로(functionally) 및/또는 전기적으로 (electrically) 연결될 수 있다. 일 실시예에 따르면, 전자 장치는 도 2 내지 도 4의 세컨더리 장치(secondary device)일 수 있다. 예를 들어, 전자 장치는 네이티브 클라이언트를 포함하지 않고, RCS를 지원하는 다운로드 가능한 클라이언 트(downloadable client)를 포함할 수 있다. 예를 들어, 세컨더리 장치의 플랫폼(또는 운영 체제)은 기본적으로 RCS를 지원하지 않으며, 사용자는 RCS를 지원하는 다운로드 가능한 클라이언트를 어플리케이션 마켓에서 다운로 드 및 설치하여 실행할 수 있다. 전자 장치는 메시지 서버(예: 도 2 내지 도 4의 메시지 스토어 서버 , 도 9의 서버 장치)를 통해 그룹 채팅에 관련된 정보를 획득할 수 있다. 일 실시예에 따르면, 전자 장치는 다른 전자 장치(예: 도 2 내지 4의 프라이머리 장치)와 동일한 사 용자의 장치로써 동일한 계정을 통해 그룹 채팅 서비스에 접속할 수 있다. 예를 들어, 다른 전자 장치에서 그룹 채팅에 참여하고, 메시지를 전송하는 경우, 전자 장치는 메시지 서버로부터 해당 이벤트 정보를 획득하여, 그룹 채팅 정보를 업데이트 할 수 있다. 일 실시예에 따르면, 디스플레이는 액정 디스플레이(liquid crystal display(LCD)), 발광 다이오드 (light-emitting diode(LED)) 디스플레이, 유기 발광 다이오드(organic light-emitting diode(OLED)) 디스플레 이 중 어느 하나로 구현될 수 있으며, 이에 한정되지는 않는다. 디스플레이는 사용자의 신체 일부(예: 손 가락) 또는 입력 장치(예: 스타일러스 펜)를 이용한 터치 및/또는 근접 터치(또는 호버링) 입력을 감지하는 터 치 스크린으로 구성될 수 있다. 디스플레이는 도 1의 디스플레이 모듈의 구성 및/또는 기능 중 적어 도 일부를 포함할 수 있다. 일 실시예에 따르면, 통신 모듈은 외부 장치(예 도 8의 서버 장치)와의 무선 통신을 지원하기 위한 다양한 하드웨어 및/또는 소프트웨어 구성을 포함할 수 있다. 통신 모듈은 근거리 무선 통신(예: Wi-Fi, 또는 Bluetooth) 및 셀룰러 무선 통신(예: 4G LTE, 또는 5G NR)을 지원할 수 있다. 통신 모듈은 도 1의 통신 모듈의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 일 실시예에 따르면, 메모리는 휘발성 메모리 및 비휘발성 메모리를 포함하여, 다양한 데이터들을 일시적 또는 영구적으로 저장할 수 있다. 메모리는 도 1의 메모리의 구성 및/또는 기능 중 적어도 일부를 포 함하고, 도 1의 프로그램의 적어도 일부를 저장할 수 있다. 일 실시예에 따르면, 메모리는 프로세서에서 수행될 수 있는 다양한 인스트럭션(instruction)들을 저 장할 수 있다. 이와 같은 인스트럭션들은 프로세서에 의해 인식될 수 있는 산술 및 논리 연산, 데이터 이 동, 또는 입출력과 같은 제어 명령을 포함할 수 있다. 일 실시예에 따르면, 프로세서는 전자 장치의 각 구성 요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성으로써, 하나 이상의 프로세서들로 구성될 수 있다. 프로세서는 디스플레이, 통신 모듈 및 메모리를 포함하는 전자 장치의 각 구성 요소와 전기적으로, 기 능적으로, 및/또는 작동적으로 연결될 수 있다. 프로세서는 도 1의 프로세서의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 일 실시예에 따르면, 프로세서가 전자 장치 상에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한 정됨이 없을 것이나, 이하에서는 그룹 채팅과 관련된 이벤트 정보를 외부의 메시지 서버로부터 수신하고, 이에 기초하여 그룹 채팅 정보를 업데이트 하는 다양한 실시예에 대해 설명하기로 한다. 후술할 프로세서의 동 작들은 메모리에 저장된 인스트럭션들을 로딩(loading)함으로써 수행될 수 있다. 일 실시예에 따르면, 프로세서는 메모리에 저장된 클라이언트를 이용해 그룹 채팅 기능을 실행할 수 있다. 전자 장치는 RCS를 지원하는 다운로드 가능한 클라이언트를 어플리케이션 마켓에서 다운로드 및 설 치하여 실행할 수 있다. 프로세서는 그룹 채팅을 나타내는 UI(user interface)를 디스플레이를 통해 표시할 수 있다. 일 실시예에 따르면, 프로세서는 통신 모듈을 통해 외부의 메시지 서버(예: 도 2 내지 도 4의 메시지 스토어 서버, 도 8의 서버 장치)로부터 그룹 채팅에 관련된 이벤트의 발생에 따라 생성되는 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 메시지 서버는 그룹 채팅에 관련된 이벤트(예: 메시지의 발신, 또는 참여자의 변경)의 발생에 응답하여, 발생한 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생 성할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보, 예를 들어, 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세 션 정보 중 적어도 하나를 포함할 수 있다. 메시지 서버는 그룹 상태 오브젝트 및 세션 정보 오브젝트를 생성하 지 않고 컨퍼런스 정보 오브젝트에 정의된 속성 정보를 이용하여 그룹 채팅에서 발생한 이벤트의 정보를 저장할 수 있다. 일 실시예에 따르면, 프로세서는 푸시 서버(예: 도 4의 푸시 서버)로부터 이벤트에 대응하는 푸시 메 시지를 수신할 수 있으며, 푸시 메시지에 포함된 정보(예: URL)를 이용하여 메시지 서버에 접속하여 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 메시지 서버는 생성되는 컨퍼런스 정보 오브젝트를 대화 히스토리 폴더의 최상단에 저장할 수 있으며, 전자 장치는 대화 히스토리 폴더에서 최상단에 저장된, 즉 가장 최근에 저장된 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 프로세서는 획득한 컨퍼런스 정보 오브젝트에 기초하여, 그룹 채팅의 정보를 업데이 트 할 수 있다. 프로세서는 이전에 저장된 그룹 채팅의 정보와 컨퍼런스 정보 오브젝트의 정보를 비교하여, 그룹 채팅의 정보를 업데이트 할 수 있다. 예를 들어, 클라이언트를 통해 프라이머리 장치에서 발신된 메시지를 기록하거나, 참여자가 대화방에서 나가거 나 또는 새로운 참여자가 대화방에 들어온 경우 참여자 정보를 변경할 수 있다. 일 실시예에 따르면, 프로세서는 업데이트 된 그룹 채팅의 정보를 디스플레이 상에 표시할 수 있다. 프로세서는 그룹 채팅 UI에서 업데이트 된 정보를 변경할 수 있다. 도 10은 일 실시예에 따라 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 일 실시예에 따르면, 메시지 스토어 서버는 OMA CPM(open mobile alliance converged IP messaging) 서비스 환 경을 제공하는 서버일 수 있다. 메시지 스토어 서버는 RCS 또는 xMS(예: SMS, MMS, 또는 LMS) 메시지와 관련된 정보를 지정된 포맷에 따라 저장할 수 있다. 도 10은 메시지 스토어 서버(예: 도 2의 메시지 스토어 서버, 도 8의 서버 장치)에 저장되는 사용자 폴더 스토리지 모델(user folder storage model)의 계층적 구조를 도시하고 있으며, 도 5의 구조와 일부 차이가 있다. 일 실시예에 따르면, 메시지 스토어 서버는 그룹 채팅에 참여한 각 사용자에 대응하는 사용자 폴더(user folder)를 생성할 수 있다. 사용자 폴더는 각 사용자의 루트 폴더(root folder)로써, 사용자 폴더 의 아래에는 동일한 계정을 이용한 하나 이상의 클라이언트에서 송수신되는 메시지와 관련된 정보가 저장 될 수 있다. 일 실시예에 따르면, 사용자 폴더 아래에는 해당 사용자가 속한 각각의 대화방의 정보를 저장하는 적어도 하나의 대화 히스토리 폴더(conversation history folder)(1021, 1022)가 저장될 수 있다. 대화 히스토리 폴더 는 사용자가 속한 1:1 채팅 또는 그룹 채팅 별로 각각 생성될 수 있다. 예를 들어, 사용자가 하나의 1:1 채팅 및 하나의 그룹 채팅에 속한 상태인 경우, 1:1 채팅에 대한 대화 히스토리 폴더 및 그룹 채팅에 대한 대 화 히스토리 폴더가 각각 생성되고, 해당 대화방 내에서 교환되는 메시지와 관련된 오브젝트가 대화 히스 토리 폴더(1021, 1022)에 저장될 수 있다. 일 실시예에 따르면, 제1대화 히스토리 폴더의 아래에는 1:1 채팅에서 생성되는 메시지 오브젝트(1051, 1052) 및 파일 전송 히스토리 오브젝트가 저장될 수 있다. 메시지 오브젝트(1051, 1052)는 실제 주고받은 메시지의 정보를 포함할 수 있으며 각 사용자가 그룹 채팅 내에서 전송하는 메시지 각각에 대해 메시지 오브젝 트가 생성될 수 있다. 예를 들어, 메시지 오브젝트는 사용자가 전송한(또는 수신한) 제1메시지의 정보를 저장하고, 메시지 오브젝트는 사용자가 이후에 전송한(또는 수신한) 제2메시지의 정보를 저장할 수 있다. 파일 전송 히스토리 오브젝트는 송수신되는 파일의 정보를 포함할 수 있다. 일 실시예에 따르면, 제2대화 히스토리 폴더의 아래에는 그룹 채팅에서 생성되는 메시지 오브젝트 및 컨퍼런스 정보 오브젝트가 저장될 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 발생한 이벤트의 정 보를 포함하는 컨퍼런스 정보 오브젝트를 생성할 수 있다. 여기서, 그룹 채팅에 관련된 이벤트는 특정 참 여자로부터의 메시지의 발신, 참여자가 대화방에서 나가는 경우, 또는 새로운 참여자가 대화방에 들어오는 경우 와 같이, 그룹 채팅에서 발생하는 다양한 이벤트를 포함할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 채팅 의 변경 사항과 관련된 정보를 포함하는 오브젝트일 수 있다. 예를 들어, 컨퍼런스 정보 오브젝트는 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포 함할 수 있다. 도 5의 구조와 비교하면, 메시지 스토어 서버는 대화 히스토리 폴더(1021, 1022)의 아래에 세션 히스토리 폴더 (예: 도 5의 세션 히스토리 폴더(631, 632))를 생성하지 않고, 해당 그룹 채팅과 관련된 오브젝트들을 대화 히 스토리 폴더(1021, 1022)의 아래에 직접적으로 저장할 수 있다. 도 5의 실시예에서는 각 세션에서 생성되는 오 브젝트들을 각 세션에 대응하는 세션 히스토리 폴더의 아래에 저장하였으나, 본 실시예에 따르면, 메시지 스토 어 서버는 오브젝트의 저장 시 세션 단위로 별도의 세션 히스토리 폴더로 구분하지 않고, 대화 히스토리 폴더의 아래에 모든 오브젝트들을 저장할 수 있다. 도 5의 구조와 비교하면, 메시지 스토어 서버는 그룹 채팅에서 이벤트 발생 시 그룹 상태 오브젝트(예: 도 5의 그룹 상태 오브젝트) 및 세션 정보 오브젝트(예: 도 5의 세션 정보 오브젝트)를 생성하지 않고, 이벤 트에 대응하는 정보를 컨퍼런스 정보 오브젝트를 이용해서 저장할 수 있다. 컨퍼런스 정보 오브젝트 는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함되는 속성 정보에 대응하는 정보를 포함할 수 있으 며, 그룹 상태 오브젝트 및 세션 정보 오브젝트를 생성하지 않고도, 컨퍼런스 정보 오브젝트에 정의된 속 성 정보를 이용하여 그룹 채팅에서 발생한 이벤트의 정보를 저장할 수 있다. 컨퍼런스 정보 오브젝트를 통해 그룹 상태 오브젝트 및 세션 정보 오브젝트의 속성 정보를 대체하는 방법 에 대해서는 앞서 표 1 내지 표 5를 통해 설명한 바 있다. 도 11은 일 실시예에 따른 그룹 상태 정보 오브젝트의 정보를 컨퍼런스 정보 오브젝트의 정보를 이용해 대체하 는 방법을 도시한 도면이다. 일 실시예에 따르면, 메시지 스토어 서버(예: 도 2 내지 도 4의 메시지 스토어 서버, 도 8의 서버 장치 )는 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 발생한 이벤트의 정보를 포함하는 컨퍼런스 정보 오브 젝트를 생성할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 채팅의 변경 사항과 관련된 정보를 포함하 는 오브젝트일 수 있다. 예를 들어, 컨퍼런스 정보 오브젝트는 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 컨퍼런스 정보 오브젝트 는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보에 대응하는 정보 를 포함할 수 있다. 도 11을 참조하면, 그룹 상태 정보 오브젝트는 속성 정보로써 참여자 상태를 포함할 수 있다. 예를 들어, 특정 참여자가 대화방에서 나간 경우 그룹 상태 오브젝트에서는 해당 참여자의 status가 removed로 기록될 수 있다. 참여자가 대화방에서 나가는 이벤트에 대해, 컨퍼런스 정보 오브젝트에서는 user - endpoint - status에서 disconnect로 기록될 수 있다.또한, 그룹 상태 정보 오브젝트는 속성 정보로써 대화방의 subject 정보를 포함할 수 있다. 컨퍼런스 정보 오브 젝트에서는 대화방의 subject의 세부 정보 중 text는 conference description - subject에 기록되고, participant는 conference description - subject text - participant에 기록되고, timestamp는 conference description - subject text - timestamp에 기록될 수 있다. 이와 같이, 메시지 스토어 서버는 동일한 이벤트에 대한 정보를 그룹 상태 오브젝트를 이용하지 않고, 컨 퍼런스 정보 오브젝트에 중복되어 기록된 정보를 이용할 수 있다. 도 12는 일 실시예에 따른 컨퍼런스 정보 오브젝트를 대화 히스토리 폴더의 최상단에 위치하도록 처리하는 방법 을 도시한 도면이다. 일 실시예에 따르면, 메시지 스토어 서버(예: 도 2 내지 도 4의 메시지 스토어 서버, 도 8의 서버 장치 )는 데이터의 저장과 관련하여 데이터의 유효 기간을 나타내는 TTL(time to live)을 포함할 수 있다. 메시 지 스토어 서버는 생성 및 저장 후 정해진 시간이 경과된 오브젝트는 삭제할 수 있다. 이에 따라, TTL을 그대로 적용하는 경우, 그룹 채팅의 생성 시점에서 TTL 기간이 지난 이후의 그룹 채팅의 경우 동기화 동작이 불가능할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 각각의 그룹 채팅 내에서 가장 최근에 생성된 컨퍼런스 정보 오브젝 트는 TTL 기간이 지나더라도 삭제하지 않을 수 있다. 프로세서는 그룹 채팅 내에서 이벤트 발생에 따라 새로운 컨퍼런스 정보 오브젝트가 생성되는 경우, 대화 히스토리 폴더의 최상단에(또는 가장 최근 시간으로) 생성된 컨 퍼런스 정보 오브젝트를 저장하도록 설정할 수 있다. 도 12를 참조하면, 3월 1일에 생성된 컨퍼런스 정보 오브젝트 및 메시지 오브젝트가 대화 히스토리 폴더에 기록되고, 3월 2일에 생성된 메시지 오브젝트가 대화 히스토리 폴더에 기록될 수 있다. 메시지 스 토어 서버에서 각 오브젝트들의 TTL은 7일로 지정될 수 있다. 이 경우, TTL을 그대로 적용하면 3월 1일에 생성 된 컨퍼런스 정보 오브젝트 및 메시지 오브젝트는 7일이 경과한 3월 9일에는 삭제될 수 있다. 일 실시예에 따라, 메시지 스토어 서버는 컨퍼런스 정보 오브젝트를 대화 히스토리 폴더에서 가장 최상단 에 기록하므로, 3월 2일에 메시지 오브젝트가 기록되는 경우 컨퍼런스 정보 오브젝트의 생성 시점 도 3월 2일로 업데이트 될 수 있다. 이에 따라, TTL이 경과한 3월 9일에 3월 1일에 생성된 메시지 오브젝트 가 삭제되더라도, 컨퍼런스 정보 오브젝트는 삭제되지 않을 수 있다. 일 실시예에 따르면, 클라이언트(예: 도 2 내지 도 4의 세컨더리 장치, 도 9의 전자 장치)는 그룹 채 팅의 정보를 최초 획득 시에 최근 생성된 시간 순으로 오브젝트를 확인할 수 있도록 설정되어, 대화 히스토리 폴더의 최상단에 저장된 가장 최근에 생성된 컨퍼런스 정보 오브젝트를 획득할 수 있다. 일 실시예에 따르면, 컨퍼런스 정보 오브젝트와 SIP notify의 처리를 위한 새로운 고유 ID가 필요할 수 있다. 예를 들어, 프라이머리 장치는 푸시 서버로부터 전송되는 푸시 메시지 및 SIP 메시지를 모두 수신하게 되고, 이 두 메시지가 동일한 오브젝트에 대한 메시지인 지 여부를 확인할 수 있어야 한다. 또한, 푸시 메시지가 SIP 메 시지가 정해진 순서대로 오지 않기 때문에, 메시지 스토어 서버에서 각 메시지의 ordering이 필요할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 메시지의 ordering 및 중복 처리에 사용 가능한 타임스탬프를 메시 지의 고유 ID로 추가할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 컨퍼런스 정보 오브젝트와 SIP notify에 저장되는 타임스탬프를 낮은 단위(예: nano second)로 생성하여, 타임스탬프의 중복 가능성을 줄일 수 있다. 도 13은 일 실시예에 따른 서버 장치가 메시지를 처리하는 방법의 흐름도이다. 도시된 방법은 서버 장치(예: 도 2 내지 도 4의 메시지 스토어 서버, 도 8의 서버 장치)에 의해 수행 될 수 있으며, 앞서 설명한 바 있는 기술적 특징에 대해서는 이하에서 그 설명을 생략할 수 있다. 일 실시예에 따르면, 동작 1310에서, 서버 장치는 제1전자 장치(또는 프라이머리 장치)를 포함하는 그룹의 그룹 채팅이 개시됨을 확인할 수 있다. 여기서, 그룹 채팅은 RCS(rich communication service)에 기반하여 다수의 참 여자 사이에서 메시지를 송수신할 수 있는 그룹 채팅일 수 있다. 일 실시예에 따르면, 동작 1320에서, 서버 장치는 제1전자 장치를 포함하는 그룹 채팅이 개시되는 경우, 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더(예: 도 10의 대화 히스토리 폴더)를 생성하여 메모 리 상에 저장할 수 있다. 대화 히스토리 폴더(conversation history folder)는 사용자 폴더(예: 도 10의 사용자 폴더)의 아래에 저장되며, 해당 사용자가 속한 각각의 대화방의 정보를 저장하는 폴더일 수 있다. 일 실시예에 따르면, 동작 1330에서, 서버 장치는 그룹 채팅에서 발생한 이벤트를 확인할 수 있다. 여기서, 그 룹 채팅에 관련된 이벤트는 특정 참여자로부터의 메시지의 발신, 참여자가 대화방에서 나가는 경우, 또는 새로 운 참여자가 대화방에 들어오는 경우와 같이, 그룹 채팅에서 발생하는 다양한 이벤트를 포함할 수 있다. 일 실시예에 따르면, 동작 1340에서, 서버 장치는 이벤트 정보를 포함하는 컨퍼런스 정보 오브젝트(예: 도 10의 컨퍼런스 정보 오브젝트)를 생성할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 채팅의 변경 사항과 관련된 정보를 포함하는 오브젝트일 수 있다. 예를 들어, 컨퍼런스 정보 오브젝트는 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 컨퍼런스 정보 오브젝트는 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적어도 하나의 속성 정보에 대응하는 정보를 포함할 수 있다. 컨퍼런스 정보 오브젝트가 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 속성 정보를 포함하기 때문에, 서버 장치는 그룹 상태 오브젝트 및 세션 정보 오브젝트는 생성하지 않을 수 있다. 일 실시예에 따르면, 동작 1350에서, 서버 장치는 컨퍼런스 오브젝트를 제2전자 장치(또는 세컨더리 장치)에 전 송할 수 있다. 제2전자 장치는 서버 장치로부터 컨퍼런스 정보 오브젝트를 획득하고, 이로부터 그룹 채팅의 정 보를 업데이트 할 수 있다. 제2전자 장치는 그룹 채팅과 관련된 UI에 이벤트 관련 내용을 반영할 수 있다. 일 실시예에 따르면, 도 13에 도시된 각 동작의 순서가 변경되거나, 및/또는 일부 동작들이 적어도 일부 동시에 병렬적으로 수행될 수도 있다. 도 14는 일 실시예에 따른 메시지 송수신 시스템에서 프라이머리 장치에 의해 파일 전송 시 각 엔터티의 동작을 나타낸 도면이다. 도 14에 도시된 각각의 엔터티는 도 3 및 도 4에서 설명한 엔터티와 그 구성 및/또는 기능이 동일할 수 있다. 일 실시예에 따르면, 프라이머리 장치(primary device)는 파일을 포함하는 메시지를 전송할 수 있다. 프라 이머리 장치의 네이티브 클라이언트(native client)는 파일 메시지를 RCS 방식을 이용하여 RCS AS(rich communication service application server)로 전송할 수 있다. 일 실시예에 따르면, RCS AS는 프라이머리 장치로부터 전송되는 파일 메시지를 다른 모바일 단말(예: MT1)로 전송할 수 있다. RCS AS와 프라이머리 장치 또는 다른 모바일 단말 사이의 인터페이스는 RCS 인터페이스로 구성될 수 있으며, 프라이머리 장치 및 다른 모바일 단말은 각각의 RCS 계정으로 RCS AS에 접속할 수 있다. 일 실시예에 따르면, RCS AS는 프라이머리 장치에서 전송되는 파일 메시지를 메시지 스토어 서버 로 전달할 수 있다. 일 실시예에 따르면, RCS AS는 파일을 메시지 스토어 서버로 copy 하거나, 또는 파일의 URL을 프록시(proxy) 처리한 RCS AS의 링크를 전달할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 수신되는 파일 메시지에서 연결된 클라이언트를 확인할 수 있 다. 메시지 스토어 서버는 확인된 클라이언트의 장치로 푸시 메시지를 전송하도록 푸시 서버로 푸시 메시지(또는 푸시 노티피케이션)을 전송할 수 있다. 이 경우, 메시지 스토어 서버는 푸시 서버에 푸 시 메시지의 수신자의 정보(예: 계정, IMEI, IP 주소 등)를 제공하고, 푸시 서버에서 수신자의 클라이언트 (예: 네이티브 클라이언트, 및/또는 다운로드 가능한 클라이언트)로 푸시 메시지를 전송할 수 있다. 일 실시예에 따르면, 프라이머리 장치는 푸시 메시지를 수신하는 경우, 푸시 메시지가 자신이 전송한 파일 메시지와 관련된 것임을 확인할 수 있다. 프라이머리 장치는 자신이 전송한 파일 메시지로 인해 업데이트 사유가 발생했으므로, 푸시 메시지의 수신에 대응하여 별도의 동작을 수행하지 않을 수 있다. 일 실시예에 따르면, 세컨더리 장치는 푸시 메시지를 수신하는 경우, 푸시 메시지에 포함된 정보를 이용하 여, 메시지 스토어 서버에서 파일 메시지를 확인할 수 있다. 예를 들어, 푸시 메시지는 파일 메시지를 획 득할 수 있는 URL 정보를 포함할 수 있으며, 세컨더리 장치는 해당 URL 정보를 이용하여 메시지 스토어 서 버에 접속하여 파일 메시지를 획득할 수 있다. 도 15는 일 실시예에 따른 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 도 15에 도시된 구조는 도 5의 구조와 실질적으로 동일할 수 있으며, 이하에서는 파일 전송과 관련된 오브젝트 에 대해서 설명하기로 한다.일 실시예에 따르면, 파일 전송 히스토리 오브젝트는 클라이언트 사이에서 송수신되는 파일과 관련된 정보 를 포함하는 오브젝트일 수 있다. 표 6은 파일 전송 히스토리 오브젝트에 포함되는 속성 정보의 예를 도시한 것이다. 표 6 Attribute Description From Set to the address of the initiator of the CPM request or response, or legacy message. Message-Context Information about the way the user expects to interactwith the message Date The date and time when the recording of the CPMrequest was started. To Set to the address of the recipient of the CPM request or response, or of the legacy message. Direction ”In” is set for incoming traffic; ”Out” is set for traffic outgoing from the CPM User. Conversation-ID The ID that identifies the CPM Conversation Identity that is associated with CPM Messages. Contribution-ID The ID that identifies the CPM Contribution Identity ofan CPM Messages. InReplyTo-Contribution-IDThe ID that, in case of a reply to an earlier received CPMMessages, identifies the Contribution-ID of the CPM Messages. correlationId Key ID for message duplication check RCS: IMDN ID, MMS: MMS ID. 일 실시예에 따르면, 파일 전송 히스토리 오브젝트는 실제 썸네일 파일과 관련된 정보를 포함하며, 썸네일 파일이 raw data의 형태로 포함될 수 있다. 또한, 파일 전송 히스토리 오브젝트는 실제 original 파일과 관련된 정보를 포함하며, original 파일이 raw data의 형태로 포함될 수 있다. 일 실시예에 따르면, stand-alone 미디어 오브젝트(691, 692, 693)는 실제 파일을 포함하고 있는 오브젝트일 수 있다. 예를 들어, stand-alone 미디어 오브젝트(691, 692, 693)는 IMAP4의 메시지 컨셉에 의해 실현되고, IMAP4 메시지(예: 음성 메일 메시지)에 맞추기 위해 MIME 형식의 오브젝트로 생성될 수 있다. 일 실시예에 따르면, 사용자 폴더의 아래에 특정 대화방에 대응하는 대화 히스토리 폴더가 생성될 수 있다. 대화 히스토리 폴더의 아래에는 메시지 오브젝트, 및 stand-alone 미디어 오브젝트가 저장될 수 있다. 세션 히스토리 폴더의 아래에 저장되지 않고 대화 히스토리 폴더의 아래에 바로 저장되는 상기 오브젝트들은 레거시 메시지 서비스(또는 xMS)의 메시지와 관련된 오브젝트일 수 있다. 일 실시예에 따르면, 대화 히스토리 폴더의 아래에 세션 히스토리 폴더가 생성될 수 있다. 세션 히스 토리 폴더의 아래에는 파일 전송 히스토리 오브젝트가 생성될 수 있다. 세션 히스토리 폴더의 아래에 저장된 오브젝트들은 해당 대화방에서 생성되는 세션 구간 동안 발생하는 이벤트의 정보를 포함하며, RCS 방식의 메시지 송수신 시 세션 히스토리 폴더의 아래에 오브젝트가 생성될 수 있다. 도 14 및 도 15에 개시된 메시지 스토어 서버의 파일 처리 방법은 다음과 같이 설명할 수 있다. 일 실시예에 따르면, 클라이언트(예: 프라이머리 장치의 네이티브 클라이언트) 또는 RCS AS에서 주고 받은 CPIM 파일 메시지가 존재하는 경우, 클라이언트 및/또는 RCS AS는 메시지 스토어 서버에 해당 메시지를 저장하기 위 해 post를 시도할 수 있다. 여기서, 전송되는 파일은 메시지 스토어 서버에 요청하는 post 구문 내에 binary의 형태로 저장될 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 요청 받은 post의 정보를 오브젝트로 생성하여 저장할 수 있다. 이 후, 클라이언트(예: 세컨더리 장치의 다운로드 가능한 클라이언트)가 메시지 동기화를 위해 메시지 스토어 서버 에 오브젝트 get을 시도할 수 있다. 이에 대응하여, 메시지 스토어 서버는 저장된 오브젝트 정보를 클라이언트 에 전달할 수 있다. 일 실시예에 따르면, 클라이언트는 획득한 메시지 오브젝트의 정보를 이용하여 메시지 정보를 업데이트 할 수 있다. 이 경우, 파일에 대한 정보는 파일 전송 태그(file transfer tag)의 정보를 이용할 수 있다. 또한, 클라 이언트는 실제 파일은 컨텐츠 ID를 이용하여 boundary로 분리되어 있는 각 binary 형태의 파일을 다운로드 할 수 있다. 이와 같이, post 구문 내에 binary의 형태로 파일을 포함해서 전송하는 경우, 다음과 같은 문제가 있을 수 있다. Post 구문 내에 binary의 형태로 파일을 전송해서 포함하므로, 전송 가능한 파일의 크기가 제한될 수 있다. 예 를 들어, 100MB 내지 300MB와 같이 파일 크기에 제한이 요구될 수 있다. 이를 초과하는 대용량 파일의 경우, 오 브젝트의 크기가 너무 커지기 때문에 post body 내에 binary 형태의 파일을 첨부하기 어려울 수 있다. 또한, post 하는 오브젝트의 body의 크기가 너무 큰 경우, http 프로토콜 상에서 request 처리 시 문제가 발생할 수 있고, post를 request 하는 과정에서 에러가 발생하는 경우, post request를 처음부터 다시 올려야 하는 문제가 있을 수 있다. 또한, 파일 메시지와 채팅 메시지는 서버의 용량 관리 측면에서 보관 기간(또는 TTL)에 차이를 둘 수 있다. 예 를 들어, 용량이 작은 채팅 메시지는 7일, 파일 메시지는 3일과 같이 파일 메시지는 더 짧은 보관 기간을 설정 할 수 있다. 상기 방식에 따르면, 메시지 오브젝트에서 실제 파일의 정보를 포함하고 있기 때문에, 보관 기간의 경과로 파일이 삭제되는 경우 메시지도 함께 삭제되어, 이 후 동기화 동작이 불가능할 수 있다. 또한, 파일 전송과 관련된 모든 request가 메시지 스토어 서버를 통해서 이루어지므로, 메시지 스토어 서버의 로드가 증가될 수 있다. 파일 전송에 대해서는 개별 정책을 적용하는 것이 어렵기 때문에, 메시지 스토어 서버 에서 유연한 서버 정책을 적용하는 것이 어려울 수 있다. 상술한 문제를 해결하기 위한 실시예들에 대해서 도 16 내지 도 19를 통해 보다 상세히 설명하기로 한다. 도 16은 일 실시예에 따른 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 것이다. 일 실시예에 따르면, 사용자 폴더(user folder)의 아래에 특정 대화방의 정보를 저장하기 위한 대화 히스 토리 폴더(conversation history folder)가 생성될 수 있다. 대화 히스토리 폴더는 송수신되는 메 시지와 관련된 다양한 오브젝트를 저장할 수 있으며, 예를 들어, 파일 전송과 관련된 정보를 포함하는 파일 전 송 메시지 오브젝트(file transfer message object)를 저장할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 기존의 파일 전송 히스토리 오브젝트(예: 도 15의 파일 전송 히스토 리 오브젝트)에 존재하던 오브젝트 파트와 파일 전송 파트를 변형하여, 파일 전송 메시지 오브젝트 로 저장할 수 있다. 표 7은 파일 전송 히스토리 오브젝트의 오브젝트 파트의 일 예를 나타낸 것이다. 표 7 POST /nms/v1/base/tel:+12021308085/objects HTTP/1.1 ... --LH6uxl4xe5sJ93i57iJLOyNl Content-Disposition: form-data; name=root-fields Content-Type: application/json; charset=UTF-8 { \"object\": { \"parentFolder\": \"http://server/nms/v1/base/tel:+12021308085/folders/UGZa5FY4o1S1oTSQSQC\", \"attributes\": { \"attribute\": [{ \"name\": \"From\", \"value\": [\"+1818118181\"] }, { \"name\": \"Message-Context\", \"value\": [\"file-message\"] }, { \"name\": \"Date\", \"value\": [\"1997-11-21T15:55:06Z\"] }, { \"name\": \"To\", \"value\": [\"+1818118181\"] }, { \"name\": \"Direction\", \"value\": [\"IN\"] }, { \"name\": \"Conversation-Id\", \"value\": [\"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"] }, { \"name\": \"Contribution-Id\", \"value\": [\"abcdef-1234-5678-90ab-cdef01234567\"] }, { \"name\": \"InReplyTo-Contribution-Id\", \"value\": [\"01234567-89ab-cdef-0123-456789abcdef\"] }] }, \"correlationId\": \"654131a654131a131bfrufh37846r44tcbrfb94656\" } } 표 8은 파일 전송 히스토리 오브젝트의 파일 전송 파트의 일 예를 나타낸 것이다. 표 8 --LH6uxl4xe5sJ93i57iJLOyNl Content-Disposition: form-data; name=message Content-Type: multipart/related; boundary=4vImznJai6jqZFelH2zuHe+P; type=\"Application/X-CPM- File-Transfer\" --4vImznJai6jqZFelH2zuHe+P Content-Disposition: attachment; filename=sms; name=sms Content-Type: Application/X-CPM-File-Transfer; charset=utf-8 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <file-transfer> <file-transfer-type>1-1</file-transfer-type> <sdp> i=This is my latest picture a=sendonly a=file-selector:name:\"My picture.jpg\" type:image/jpeg size:4092 a=file-disposition:render a=file-date:creation:\"Mon, 15 May 2006 15:01:31 +0300\" a=file-icon:cid:mythumbnail@example.com </sdp> <file-object> <cid>cid:1234@example.com</cid> </file-object> </file-transfer> 일 실시예에 따르면, 파일 전송 메시지 오브젝트는 표 7의 파일 전송 히스토리 오브젝트의 오브젝트 파트 및 표 8의 파일 전송 히스토리 오브젝트의 파일 전송 파트를 포함할 수 있다. 표 9는 파일 전송 메시지 오브젝트에서 포함하는 속성 정보의 예를 나타낸 것이다. 표 9 Attribute Description From Set to the address of the initiator of the CPM request or response, or legacy message. Message-Context Information about the way the user expects to interactwith the message Date The date and time when the recording of the CPMrequest was started. To Set to the address of the recipient of the CPM request or response, or of the legacy message. Direction ”In” is set for incoming traffic; ”Out” is set for traffic outgoing from the CPM User. P-Asserted-Service The information that is derived service identification urn:urn-7:3gpp-service.ims.icsi.oma.cpm.session(Identifies in SIP INVITE a request for CPM chat) urn:urn-7:3gpp-service.ims.icsi.oma.cpm.filetransfer(Identifies in SIP INVITE a request for CPM File Transfer) urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg(Identifies in a SIP MESSAGE a CPM Standalone Message) Content-Type MIME-type for file(e.g. image/png) 표 10 및 표 11은 파일 전송 메시지 오브젝트의 예 및 그 설명에 대한 것이다. 표 10 \"resourceURL\":\"https://oasis-endpoint/nms/v1/os/tel%3A%2B821022223333/objects/1124b7c8- 1929- 11ed-861d-0242ac120002\", \"path\": \"/main/tel:+821022224444/1124b7c8-1929-11ed-861d-0242ac120002\", \"payloadPart\": [ { \"contentType\": \"image/png\", \"contentDisposition\": \"attachment; filename=some_photo.png\", \"disposition\": \"attachment\", \"size\": \"1234\", \"href\": \"https://oasis-endpoint/file-store/40RGMWzwve6m\", \"fileIcon\": \"cid:thumbnail_1\" }, { \"contentType\": \"image/png\", \"contentDisposition\": \"icon\", \"disposition\": \"attachment\", \"contentId\": \"thumbnail_1\", \"size\": \"123\", \"href\": \"https://oasis-endpoint/file-store/qVzLGkbertL5\" } ], \"correlationId\": \"1124b7c8-1929-11ed-861d-0242ac120002\", \"lastModSeq\": 48 } 표 11 Name Description payloadPart Information about individual payload parts. contentType MIME-type for file(e.g. image/png) contentDisposition The Content-Disposition of this part. For example: \"attachment\", \"icon\". size Indicates the size of the stored content in bytes. href Link to the stored content. fileIcon The File-Icon of this payload part, i.e., its thumbnail or icon disposition One of \"attachment\", \"render\". playingLength The length of audio file. correlationId Unique correlation ID associated with the object, if any. lastModSeq Last mod-sequence value associated with the object 일 실시예에 따르면, 메시지 스토어 서버는 다양한 설정 정보(configuration)를 이용하여 저장되는 각각의 데이 터를 관리할 수 있다. 예를 들어, 메시지 스토어 서버는 파일 크기에 따라서 클라이언트에서 처리 가능하도록 configuration을 추가할 수 있다. 또한, 클라이언트에서 처리가 가능하도록 다양한 서버 루트에 관련된 configuration을 추가할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 실제 파일과 오브젝트를 분리하여 저장할 수 있다. 예를 들어, 메시 지 스토어 서버는 하나의 오브젝트에 메시지와 파일을 모두 포함하지 않고 각자 분리하여, 관련 정보를 포함하 는 방식으로 저장할 수 있다. 이 경우, 파일은 미리 지정된 서버의 위치 상에 저장하고, 저장된 파일의 위치와 메시지 내용을 포함하는 오브젝트를 별도로 생성하여 저장할 수 있다. 이를 통해서, 파일과 메시지를 개별적으 로 처리할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버 및 클라이언트는 대용량 파일에 대해서는 소용량 파일과 다른 파일 업 로드 방식을 적용할 수 있다. 예를 들어, 클라이언트는 post 구문 내에 binary의 형태로 파일을 그대로 전송하지 않고, 클라이언트에서 지정된 서버의 경로에 파일을 직접 업로드 할 수 있다. 이 경우, 메시지 스토어 서버 는 파일 업로드 및 다운로드 시에 재전송 및 일시 중단 기능을 지원할 수 있다. 일 실시예에 따르면, 서버 정책에 따라 다양한 configuration을 적용하여 서버 관리가 가능할 수 있다. 예를 들 어, 파일 크기에 따라서 클라이언트에서 처리가 가능하도록 file size based configuration이 추가될 수 있다. File size based configuration의 예인 max_small_file_size는 소용량 파일로 처리 가능한 최대 크기를 나타낼 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 클라이언트에서 처리가 가능하도록 다양한 서버 루트 관련 configuration인 file server based configuration을 추가할 수 있다. 예를 들어, small_file_server_root는 소용량 파일을 저장하는 서버의 루트로 정의되고, large_file_server_root는 대용량 파일을 저장하는 서버의 루 트로 정의되고, 및 free_file_server_root는 무과금 파일을 저장하는 서버의 루트로 정의될 수 있다. 일 실시예에 따르면, 클라이언트는 파일의 업로드 시에 업로드 할 파일의 크기와 정의된 configuration을 비교 하여, 파일을 저장할 루트를 결정할 수 있다. 예를 들어, 파일 크기가 max_small_file_size보다 작은 파일의 경 우, small_file_server_root를 통해 해당 파일을 저장하고, 파일 크기가 max_small_file_size보다 큰 파일의 경우, large_file_server_root를 통해 해당 파일을 저장하고, 및 무과금 정책이 적용되는 파일인 경우에는 free_file_server_root를 통해 해당 파일을 저장할 수 있다. 이에 따라, 서버의 로드 분산, 트래픽 조절 및 과 금 정책을 용이성이 향상될 수 있다. 도 17은 일 실시예에 따른 파일 전송 히스토리 오브젝트에서 파일 파트를 분리하는 방법을 도시한 도면이다. 일 실시예에 따르면, 메시지 스토어 서버는 파일 전송 히스토리 오브젝트의 메시지 파트 및 파일 파트를 분리하 여, 별도의 파일 폴더에 저장할 수 있다. 도 17을 참조 하면, 파일 전송 히스토리 오브젝트는 썸네일 파일의 데이터 및 original 파일의 데 이터를 포함할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 용량이 작은 썸네일 파일의 데이터 는 소용량 파일 폴더의 아래에 저장하고, 용량이 큰 original 파일의 데이터는 대용량 파일 폴더의 아래에 저장할 수 있다. 도 18은 일 실시예에 따른 클라이언트에서 소용량 파일의 업로드 시에 송수신되는 메시지를 도시한 것이다. 일 실시예에 따르면, 클라이언트는 파일 크기가 max_small_file_size보다 작은 파일의 경우, small_file_server_root를 통해 해당 파일을 저장할 수 있다. 클라이언트는 소용량 파일에 대해서는 post request에 포함하여 전송할 수 있다. 도 18은 소용량 파일의 업로드 시에 클라이언트에서 전송하는 post request 및 메시지 스토어 서버에서 클라이 언트에 전송하는 response의 예를 도시하고 있다. 일 실시예에 따르면, 클라이언트는 소용량 파일로 판단되는 경우, post request를 통해 파일을 업로드 할 수 있다. 이 경우, 여러 개의 파일을 같이 업로드 하는 경우에는 boundary를 통해서 각 파일을 구분할 수 있다. 클라이언트는 실제 파일의 binary raw data를 post request 안에 포함하여 메시지 스토어 서버에 전송할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 수신한 파일을 소용량 파일 서버에 저장할 수 있다. 메시지 스토어 서버는 파일을 저장한 후 저장된 파일의 위치 및 정보를 포함하는 response를 클라이언트에 전송할 수 있 다. 클라이언트는 수신한 response의 내용을 기반으로 이후 오브젝트의 생성 시에 사용할 수 있다. 도 19는 일 실시예에 따른 대용량 파일의 업로드 시 클라이언트와 메시지 스토어 서버의 동작을 도시한 것이다. 일 실시예에 따르면, 동작 1910에서, 클라이언트는 대용량 파일의 등록 요청을 메시지 스토어 서버로 전송할 수 있다. 클라이언트는 전송할 파일 크기가 max_small_file_size보다 큰 경우, 대용량 파일로 결정할 수 있다. 클 라이언트는 파일 관련 정보를 포함하여 메시지 스토어 서버에 post request(PostLargeFile)를 전송할 수 있다. Post request는 컨텐츠 타입, 파일 이름 및 메시지의 길이를 포함할 수 있다. 일 실시예에 따르면, 동작 1920에서, 메시지 스토어 서버는 클라이언트의 post request에 응답하여, post response(PostLargeFile)를 전송할 수 있다. Post response는 파일의 업로드에 사용할 키(예: uploadkeyID) 및 파일을 분할 전송할 최소 및 최대 용량을 포함할 수 있다.일 실시예에 따르면, 클라이언트는 수신한 post response의 정보를 이용하여, 파일을 분할할 수 있다. 이 경우, 클라이언트는 post response에 포함된 최소 및 최대 용량 사이의 크기로 대용량 파일을 분할할 수 있다. 클라이 언트는 분할된 각 파트에 대해 파트 넘버를 부여할 수 있다. 일 실시예에 따르면, 동작 1930에서, 클라이언트는 파일에서 분할된 파트 중 1번 파트를 포함하는 post request(PostLargeFilePart)를 메시지 스토어 서버로 전송할 수 있다. 여기서, post request는 수신한 업로드 키, 전송하는 파일 파트의 넘버, 및 해당 파트의 컨텐츠를 포함할 수 있다. 클라이언트는 분할된 각 파트 별로 API를 호출해서 메시지 스토어 서버에 업로드 할 수 있다. 일 실시예에 따르면, 동작 1940에서, 메시지 스토어 서버는 1번 파트의 업로드가 완료되는 경우, 완료된 Tag 값 을 포함하는 post response(PostLargeFilePart)를 클라이언트에 전송할 수 있다. 일 실시예에 따르면, 클라이언트는 분할된 각 파트 n개에 대해 동작 1930을 수행하고, 메시지 스토어 서버는 각 파트 n개의 수신에 응답하여 동작 1940을 수행할 수 있다. 일 실시예에 따르면, 모든 파트의 업로드가 완료되는 경우, 동작 1950에서, 클라이언트는 업로드 키 (uploadjeyID), 파트 넘버 및 파트 태그를 포함하는 정보를 post request(PostLargeFileComplete)를 통해 메시 지 스토어 서버에 전송할 수 있다. 일 실시예에 따르면, 메시지 스토어 서버는 분할되어 전송된 각 파트를 결합하여 하나의 대용량 파일로 복원한 후 저장할 수 있다. 동작 1960에서, 메시지 스토어 서버는 저장된 대용량 파일의 액세스 URL을 포함하는 정보를 post response(PostLargeFileComplete)를 통해 클라이언트에 전달할 수 있다. 클라이언트는 수신한 액세스 URL 을 통해 이후 오브젝트 생성에 사용할 수 있다. 표 12는 대용량 파일의 모든 파트의 업로드 후 클라이언트가 동작 1950에서 전송하는 post request 및 메시지 스토어 서버가 동작 1960에서 전송하는 post response의 예를 나타낸 것이다. 표 12 -Request- \"uploadedPartInfos\": [ { \"partNum\": 1, \"partTag\": \"9d70af76bb64738c2e962bb75be76df4\" }, { \"partNum\": 2, \"partTag\": \"d80a1e1d67ae73c0cbc0b66c145022c6\" } ] -Response- {\"accessURL\":\"https://[large_file_server_root]/oapi/v1/large- file?fileId=media_%2B821015003144_a33bf92b-5f15-4fe1-929d-bcc5ab23238b\"} 본 문서의 다양한 실시예에 따른 서버 장치는, 통신 인터페이스, 메모리, 및 상기 통신 인터페 이스 및 상기 메모리와 작동적으로 연결되는 프로세서를 포함할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 제1전자 장치를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 상기 메모리 상에 저장 하고, 상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브 젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하고, 및 상기 제1전자 장치 및 상기 제1전 자 장치에 대응하는 제2전자 장치에, 상기 통신 인터페이스를 통해, 상기 생성된 컨퍼런스 정보 오브젝트를 전송하도록 설정될 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트는, 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트는, 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함 된 적어도 하나의 속성 정보에 대응하는 정보를 포함하고, 상기 프로세서는, 상기 이벤트에 대응하여, 상 기 그룹 상태 오브젝트 및 상기 세션 정보 오브젝트는 생성하지 않도록 설정될 수 있다. 일 실시예에 따르면, 상기 대화 히스토리 폴더는, 상기 제1전자 장치에서 송수신되는 메시지 정보를 저장하는 사용자 폴더의 아래에 생성될 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 그룹 채팅에서 생성되는 복수의 세션 구간 동안 발생하는 이 벤트들 각각의 정보를 포함하는 복수의 컨퍼런스 정보 오브젝트들을 상기 대화 히스토리 폴더에 저장하도 록 설정될 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 이벤트가 발생하는 경우, 미리 정의된 모든 속성 정보를 포함 하는 상기 컨퍼런스 정보 오브젝트를 생성하도록 설정될 수 있다. 일 실시예에 따르면, 상기 그룹 채팅은 RCS(rich communication services)에 기반한 그룹 채팅이고, 상기 프로 세서는, 상기 이벤트의 발생 시, 상기 통신 인터페이스를 통해, 외부의 RCS 서버로부터 이벤트 정보를 수신하도록 설정될 수 있다. 일 실시예에 따르면, 상기 이벤트는, 상기 그룹 채팅 상에서 메시지의 전송, 및 상기 그룹 채팅의 참여자의 변 경을 포함할 수 있다. 일 실시예에 따르면, 상기 제1전자 장치는 상기 RCS를 지원하는 네이티브 클라이언트(native client)(36 0)를 포함하고, 상기 제2전자 장치는 상기 네이티브 클라이언트를 포함하지 않을 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 생성된 컨퍼런스 정보 오브젝트를, 상기 통신 인터페이 스를 통해, 외부의 푸시 서버로 전송하도록 설정되고, 상기 푸시 서버에서 전송되는 푸시 메시 지에 포함된 정보를 이용하여 상기 제2전자 장치가 상기 컨퍼런스 정보 오브젝트를 획득할 수 있다. 본 문서의 다양한 실시예에 따른 서버 장치의 메시지 처리 방법은, 제1전자 장치를 포함하는 그룹의 그룹 채팅이 개시되는 경우, 상기 그룹 채팅에 관련된 데이터를 포함하는 대화 히스토리 폴더를 생성하여 저장 하는 동작, 상기 그룹 채팅에 관련된 이벤트의 발생에 응답하여, 상기 이벤트의 정보를 포함하는 컨퍼런 스 정보 오브젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하는 동작, 및 상기 제1전자 장치 및 상기 제1전자 장치에 대응하는 제2전자 장치에 상기 생성된 컨퍼런스 정보 오브젝트를 전송하는 동작 을 포함할 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트는, 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트는, 그룹 상태 오브젝트 및 세션 정보 오브젝트에 포함된 적 어도 하나의 속성 정보에 대응하는 정보를 포함하고, 상기 이벤트의 정보를 포함하는 컨퍼런스 정보 오브젝트를 생성하는 동작은, 상기 이벤트에 대응하여, 상기 그룹 상태 오브젝트 및 상기 세션 정보 오브젝트는 생성하지 않는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 대화 히스토리 폴더는, 상기 제1전자 장치에서 송수신되는 메시지 정보를 저장하는 사용자 폴더의 아래에 생성될 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트를 생성하여, 상기 대화 히스토리 폴더에 저장하는 동작은, 상기 그룹 채팅에서 생성되는 복수의 세션 구간 동안 발생하는 이벤트들 각각의 정보를 포함하는 복수의 컨퍼런 스 정보 오브젝트들을 상기 대화 히스토리 폴더에 저장하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트를 생성하는 동작은, 상기 이벤트가 발생하는 경우, 미리 정 의된 모든 속성 정보를 포함하는 상기 컨퍼런스 정보 오브젝트를 생성하는 동작을 포함할 수 있다. 일 실시예에 따르면, 상기 그룹 채팅은 RCS(rich communication services)에 기반한 그룹 채팅이고, 상기 이벤 트의 발생 시, 상기 통신 인터페이스를 통해, 외부의 RCS 서버로부터 이벤트 정보를 수신하는 동작을 더 포함할 수 있다. 본 문서의 다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 모듈, 메모리, 및 상기 디스플레이, 상기 통신 모듈 및 상기 메모리와 작동적으로 연결되는 프로세서를 포함할 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 메모리에 저장된 클라이언트를 이용해 그룹 채팅 기능을 실행하고, 상기 통신 모듈을 통해, 외부의 메시지 서버로부터 상기 그룹 채팅에 관련된 이벤트의 발생에 따라 생성되는 컨퍼런스 정보 오브젝트를 획득하고, 상기 컨퍼런스 정보 오브젝트에 대응하여, 상기 그룹 채팅 의 정보를 업데이트 하고, 및 상기 업데이트 된 그룹 채팅의 정보를 상기 디스플레이 상에 표시하도록 설 정될 수 있다. 일 실시예에 따르면, 상기 프로세서는, 상기 통신 모듈을 통해, 외부의 푸시 서버로부터 상기 이벤트 에 대응하는 푸시 메시지를 수신하고, 상기 푸시 메시지에 포함된 정보를 이용하여 상기 메시지 서버로부터 상 기 컨퍼런스 정보 오브젝트를 획득하도록 설정될 수 있다. 일 실시예에 따르면, 상기 컨퍼런스 정보 오브젝트는, 세션 ID, 타임 스탬프, 그룹 타입, 참여자 정보, 주제, 아이콘, 최대 사용자 수, 및 세션 정보 중 적어도 하나를 포함할 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제3구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다."}
{"patent_id": "10-2023-0111041", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 일 실시예에 따른 메시지 송수신 시스템의 블록도이다. 도 3은 일 실시예에 따른 메시지 송수신 시스템에서 프라이머리 장치에 의해 메시지의 발신 시 각 엔터티의 동 작을 나타낸 도면이다. 도 4는 일 실시예에 따른 메시지 송수신 시스템에서 참여자가 그룹 채팅에서 나간 경우 각 엔터티의 동작을 나 타낸 도면이다. 도 5는 일 실시예에 따라 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 도 6은 일 실시예에 따라 세션 히스토리 폴더 내에 저장된 데이터의 예를 도시한 도면이다. 도 7은 일 실시예에 따른 대화 히스토리 폴더 및 세션 히스토리 폴더의 구조를 도시한 것이다. 도 8은 일 실시예에 따른 서버 장치의 블록도이다. 도 9는 일 실시예에 따른 전자 장치의 블록도이다. 도 10은 일 실시예에 따라 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 도 11은 일 실시예에 따른 그룹 상태 정보 오브젝트의 정보를 컨퍼런스 정보 오브젝트의 정보를 이용해 대체하 는 방법을 도시한 도면이다. 도 12는 일 실시예에 따른 컨퍼런스 정보 오브젝트를 대화 히스토리 폴더의 최상단에 위치하도록 처리하는 방법 을 도시한 도면이다. 도 13은 일 실시예에 따른 서버 장치가 메시지를 처리하는 방법의 흐름도이다. 도 14는 일 실시예에 따른 메시지 송수신 시스템에서 프라이머리 장치에 의해 파일 전송 시 각 엔터티의 동작을 나타낸 도면이다. 도 15는 일 실시예에 따른 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 도면이다. 도 16은 일 실시예에 따른 메시지 스토어 서버에서 저장되는 폴더 및 오브젝트의 구조를 도시한 것이다. 도 17은 일 실시예에 따른 파일 전송 오브젝트에서 파일 파트를 분리하는 방법을 도시한 도면이다. 도 18은 일 실시예에 따른 클라이언트에서 소용량 파일의 업로드 시에 송수신되는 메시지를 도시한 것이다. 도 19는 일 실시예에 따른 대용량 파일의 업로드 시 클라이언트와 메시지 스토어 서버의 동작을 도시한 것이다."}
