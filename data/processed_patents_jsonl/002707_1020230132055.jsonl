{"patent_id": "10-2023-0132055", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0049119", "출원번호": "10-2023-0132055", "발명의 명칭": "딥러닝에 기반한 균열 두께 측정 방법 및 장치", "출원인": "포항공과대학교 산학협력단", "발명자": "이수민"}}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "영상 처리 장치가 촬영 영상을 입력 받는 단계; 상기 영상 처리 장치가 상기 촬영 영상에서 균열 픽셀을 분할하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀에 대하여 골격화(Skeleton)을 하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산하는 단계; 상기 영상 처리 장치가 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택하는 단계; 상기 영상 처리 장치가 상기 선택된 균열 픽셀과 상기 골격화된 픽셀 사이의 교점을 파악하는 단계; 및상기 영상 처리 장치가 상기 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균열의 두께를 측정하는 단계;를 포함하는, 딥러닝에 기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 촬영 영상은 픽셀 값을 기준으로 균열의 두께를 측정할 때 기준이 되는 기준 스티커가 촬영된 영상을 포함하는, 딥러닝에 기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 균열 픽셀을 분할하는 것은 분할된 균열 픽셀을 이진 마스크(Binary Mask)형태로 표현한 것인, 딥러닝에기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 균열 픽셀을 분할하는 것은 딥러닝 기반의 분할 모델(Segmentation Model)을 이용하여 균열 픽셀을 분할하는 것인, 딥러닝에 기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 분할 모델은 균열 픽셀에 대한 라벨링 데이터가 포함된 학습 데이터를 기반으로 학습된 모델이되,상기 라벨링 데이터는 사용자가 균열 픽셀이라고 설정한 픽셀의 색상과 위치를 기반으로 주변 픽셀과의 관계를파악 한 뒤 파악된 관계를 기반으로 하나의 클러스터(Cluster)에 속하는 픽셀을 균열 픽셀로 라벨링한데이터인, 딥러닝에 기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 골격화는 거리 변환(Distance Transform) 알고리즘을 기반으로 수행되는, 딥러닝에 기반한 균열 두께 측정방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 공개특허 10-2025-0049119-3-상기 영상 처리 장치가 상기 측정된 균열 두께를 기준으로 시설물의 상태를 평가하는 단계를 더 포함하는, 딥러닝에 기반한 균열 두께 측정 방법."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "촬영 영상을 입력 받는 입력장치; 상기 촬영 영상에서 균열 픽셀을 분할하고, 상기 분할된 균열 픽셀에 대하여 골격화(Skeleton)을 하고, 상기 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산하고, 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을선택하고, 상기 선택된 균열 픽셀과 상기 골격화된 픽셀 사이의 교점을 파악하고 상기 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균열의 두께를 측정하는 연산장치; 및상기 촬영 영상을 저장하는 저장장치;를 포함하는, 딥러닝에 기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 촬영 영상은 픽셀 값을 기준으로 균열의 두께를 측정할 때 기준이 되는 기준 스티커가 촬영된 영상을 포함하는, 딥러닝에 기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8항에 있어서, 상기 균열 픽셀을 분할하는 것은 분할된 균열 픽셀을 이진 마스크(Binary Mask)형태로 표현한 것인, 딥러닝에기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8항에 있어서, 상기 균열 픽셀을 분할하는 것은 딥러닝 기반의 분할 모델(Segmentation Model)을 이용하여 균열 픽셀을 분할하는 것인, 딥러닝에 기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 분할 모델은 균열 픽셀에 대한 라벨링 데이터가 포함된 학습 데이터를 기반으로 학습된 모델이되,상기 라벨링 데이터는 사용자가 균열 픽셀이라고 설정한 픽셀의 색상과 위치를 기반으로 주변 픽셀과의 관계를파악 한 뒤 파악된 관계를 기반으로 하나의 클러스터(Cluster)에 속하는 픽셀을 균열 픽셀로 라벨링한데이터인, 딥러닝에 기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제8항에 있어서, 상기 골격화는 거리 변환(Distance Transform) 알고리즘을 기반으로 수행되는, 딥러닝에 기반한 균열 두께 측정장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제8항에 있어서, 상기 연산장치는 상기 측정된 균열 두께를 기준으로 시설물의 상태를 평가하는, 딥러닝에 기반한 균열 두께 측정 장치."}
{"patent_id": "10-2023-0132055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제1항에 딥러닝에 기반한 균열 두께 측정 방법을 실행하기 위한 프로그램을 기록한 컴퓨터로 읽을 수 있는 기록매체. 공개특허 10-2025-0049119-4-"}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "딥러닝에 기반한 균열 두께 측정 방법은 영상 처리 장치가 촬영 영상을 입력 받는 단계; 상기 영상 처리 장치가 상기 촬영 영상에서 균열 픽셀을 분할하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀에 대하여 골격화 (Skeleton)을 하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산하는 단계; 상기 영상 처리 장치가 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택하는 단계; 상기 영상 처리 장치가 상기 선택된 균열 픽셀과 상기 골격화된 픽셀 사이의 교점을 파악하는 단계; 및 상기 영상 처리 장 치가 상기 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균열의 두께를 측정하는 단계; 를 포함한다."}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "이하 설명하는 기술은 딥러닝에 기반한 모델을 이용하여 균열의 두께를 측정하는 방법에 대한 것이다."}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대한민국의 건물 중 30년 이상 노후된 건물은 약 40%에 해당한다. 노후된 건물은 안전 점검 및 관리가 중요하다. 노후된 건물은 구조가 어긋나거나 누적된 외부 충격으로 약화되기 때문이다. 최근에는 딥러닝(Deep learning) 기반의 인공지능 기술이 발전되기 시작하고 있다. 이에 딥러닝 기반의 인공지능 모델을 이용해서 촬 영 영상으로부터 균열을 자동으로 측정하는 기술들이 개발되고 있다. 건물 안전 점검 및 관리에 있어서 균열에 대한 안전검사는 중요하다. 균열에 대한 안전검사는 균열의 유무 및 진행 수준 등을 검사하는 것을 말한다. 이 중 균열의 두께는 균열 규모의 대표성을 정의하는데 사용된다. 따라 서 균열의 두께를 정확히 측정하는 것은 중요하다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국 공개특허 10-2021-0083865"}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "종래 균열의 두께를 측정하기 위하여 열화상 이미지 또는 깊이 카메라를 이용하는 방법이 있었다. 또는 딥러닝 기반의 인공지능 모델을 이용하여 균열의 유무를 분석하는 기술, 균열의 위치를 찾아주는 기술 또는 균열을 분 할(Segmentation)해주는 기술들이 있었다. 균열의 두께를 측정하기 위해 균열을 분할하는 기술이 활용될 수 있 다. 하지만 균열을 분할하는 모델을 구축하기 위하여 신뢰성 있는 라벨링 데이터를 확보하는 것은 어렵다. 또한 균열 분할 모델을 구축하기 위하여 신뢰성 있는 라벨링 데이터를 확보하는 것은 많은 시간과 노력이 필요하다. 또한 균열 분할 모델의 성능을 향상시킬 필요도 있다. 이하 설명하는 기술은 전술한 문제점을 해결하기 위한 방법을 개시하고자 한다."}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "딥러닝에 기반한 균열 두께 측정 방법은 영상 처리 장치가 촬영 영상을 입력 받는 단계; 상기 영상 처리 장치가 상기 촬영 영상에서 균열 픽셀을 분할하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀에 대하여 골격 화(Skeleton)을 하는 단계; 상기 영상 처리 장치가 상기 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산하 는 단계; 상기 영상 처리 장치가 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택하는 단계; 상기 영 상 처리 장치가 상기 선택된 균열 픽셀과 상기 골격화된 픽셀 사이의 교점을 파악하는 단계; 및 상기 영상 처리 장치가 상기 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균열의 두께를 측정하는 단계; 를 포함한다."}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이하 설명하는 기술을 이용하면 촬영 상으로부터 균열을 분할할 수 있다. 또한 이하 설명하는 기술을 활용하면 분할된 균열로부터 균열의 두께를 측정할 수 있다. 이하 설명하는 기술을 이용하면 분할모델을 구축하는데 필요한 신뢰성 있는 라벨링 데이터를 쉽게 획득할 수 있 다. 이를 통해 분할 모델의 성능을 향상시킬 수 있다. 이하 설명하는 기술을 이용하면 측정된 균열의 두께를 기반으로 시설물의 상태를 파악할 수 있다. 이를 통해 시 설물 안전 점검하는 시간을 대폭 감소시킬 수 있다."}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 설명하는 기술은 다양한 변경을 가할 수 있고 여러 가지 실시예를 가질 수 있다. 명세서의 도면에 이하 설 명하는 기술의 특정 실시 형태가 기재될 수 있다. 그러나, 이는 이하 설명하는 기술의 설명을 위한 것이며 이하 설명하는 기술을 특정한 실시 형태에 대해 한정하려는 것이 아니다. 따라서 이하 설명하는 기술의 사상 및 기술 범위에 포함되는 모든 변경 물, 균등 물 내지 대체 물이 이하 설명하는 기술에 포함하는 것으로 이해되어야 한 다. 이하 사용되는 용어에서 단수의 표현은 문맥상 명백하게 다르게 해석되지 않는 한 복수의 표현을 포함하는 것으 로 이해되어야 하고, \"포함한다\" 등의 용어는 기재된 특징, 개수, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함을 의미하는 것이지, 하나 또는 그 이상의 다른 특징들이나 개수, 단계 동작 구성요소, 부분 품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 배제하지 않는 것으로 이해되어야 한다. 도면에 대한 상세한 설명을 하기에 앞서, 본 명세서에서의 구성부들에 대한 구분은 각 구성부가 담당하는 주기 능 별로 구분한 것에 불과함을 명확히 하고자 한다. 즉, 이하에서 설명할 2개 이상의 구성부가 하나의 구성부로 합쳐지거나 또는 하나의 구성부가 보다 세분화된 기능별로 2개 이상으로 분화되어 구비될 수도 있다. 그리고 이 하에서 설명할 구성 부 각각은 자신이 담당하는 주기능 이외에도 다른 구성부가 담당하는 기능 중 일부 또는 전 부의 기능을 추가적으로 수행할 수도 있으며, 구성부 각각이 담당하는 주기능 중 일부 기능이 다른 구성부에 의 해 전담되어 수행될 수도 있음은 물론이다. 또, 방법 또는 동작 방법을 수행함에 있어서, 상기 방법을 이루는 각 과정들은 문맥상 명백하게 특정 순서를 기 재하지 않은 이상 명기된 순서와 다르게 일어날 수 있다. 즉, 각 과정들은 명기된 순서와 동일하게 일어날 수도 있고 실질적으로 동시에 수행될 수도 있으며 반대의 순서대로 수행될 수도 있다. 이하 영상 처리 장치가 딥러닝에 기반한 균열 두께 측정 방법(이하 균열 두께 측정 방법)을 수행하는 전체적인 과정을 설명한다. 도1은 영상 처리 장치가 균열 두께 측정방법을 수행하는 전체적인 과정을 보여준다. 영상 처리 장치는 촬영 영상을 입력 받을 수 있다. 영상 처리 장치는 촬영 영상에서 균열 픽셀을 분 할(Segmentation0할 수 있다. 영상 처리 장치는 분할된 균열 픽셀에 대하여 골격화(Skeleton)을 할 수 있 다. 영상 처리 장치는 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산할 수 있다. 영상 처리 장치 는 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택할 수 있다. 영상 처리 장치는 선택된 균열 픽셀과 골격화된 픽셀 사이의 교점을 파악할 수 있다. 영상 처리 장치는 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균열의 두께를 측정할 수 있다. 이하 균열 두께 측정 방법을 구체적으로 설명한다. 도2는 균열 두께 측정 방법의 일 실시예중 하나의 순서도이다. 영상 처리 장치는 촬영 영상을 입력 받을 수 있다. 촬영 영상은 균열을 촬영한 영상을 포함할 수 있다. 촬영 영상은 시설물에 생긴 균열을 촬영한 영상을 포함할 수 있다. 시설물은 교량, 육교, 터널, 지차도, 교각, 가로보, 세로보, 건축물 지하도상가, 난간, 연석, 옹벽 및 촉대 중 적어도 하나일 수 있다. 촬영 영상은 기준 스티커가 촬영된 영상을 포함할 수 있다. 기준 스티커는 픽셀값을 기준으로 정확한 균열의 두 께를 측정할 때 기준이 되는 스티커일 수 있다. 기준 스티커는 균열의 두께가 영상을 확대/축소 촬영함에 따라 달라지는 문제점을 해결하기 위하여 이용된다. 따라서 영상 촬영 장치는 사전에 기준 스티커의 크기와 모양의 정보를 저장하고 이를 이용할 수 있다 영상 처리 장치는 촬영 영상에서 균열 픽셀을 분할(Segmentation)할 수 있다. 촬영 영상에서 균열 픽셀을 분할하는 것은 촬영 영상의 각 픽셀을 균열 픽셀 및 배경 픽셀 중 하나로 분할하는 것을 포함할 수 있다. 촬영 영상에서 균열 픽셀을 분할하는 것은 분할된 균열 픽셀을 이진 마스크(Binary Mask)형태로 표현할 것일 수 있다. 일 실시예로 영상 처리 장치는 촬영 영상의 픽셀이 균열에 속하면 1, 균열에 속하지 않으면 0의 값을 가 지도록 균열 픽셀을 표현할 수 있다. 촬영 영상에서 균열 픽셀을 분할하는 것은 분할 모델(Segmentation Model)을 이용하여 균열 픽셀을 분할하는 것 을 포함할 수 있다. 분할 모델은 인공지능 기반 딥러닝 모델일 수 있다. 구체적으로 분할 모델은 인공 신경망 (Artificial Neural Network)기반의 모델일 수 있다. 분할 모델은 학습 데이터를 기반으로 촬영 영상에서 균열을 분할하도록 학습된 모델일 수 있다. 학습 데이터는 매직 완드 툴(Magic Wand Tool)을 기반으로 구축된 데이터일 수 있다. 매직 완드 툴은 사용자가 클릭한 지점의 픽셀의 색상과 위치를 기반으로 주변 픽셀과의 관계를 파악 한 뒤, 파악한 관계를 기반으로 하나의 클러스터 (Cluster)에 속한다고 판단되는 영역을 선택하여 윤곽선을 제시하는 방법일 수 있다. 분할 모델의 구조 및 학습 과정에 대해서는 이하에서 좀더 구체적으로 설명한다. 영상 처리 장치는 분할된 균열 픽셀에 대하여 골격화(skeleton)를 할 수 있다. 골격화는 촬영 영상 내 형상의 위상학적 구조와 특징을 담아 촬영 영상을 뼈대와 비슷한 형태로 변환해주는 것 을 의미한다. 골격화는 위상학적 모양(Topological shape)이 보존되어야 한다. 골격화를 위해 거리 변환(Distance Transform) 알고리즘이 이용될 수 있다. 거리 변환 알고리즘은 이진 이미지 에서 각 픽셀과 배경 픽셀까지의 거리를 계산 한 뒤, 계산된 거리값을 기반으로 각 픽셀의 값을 결정하는 알고 리즘을 의미할 수 있다. 즉 거리 변환은 배경으로부터 멀리 떨어져 있는 곳의 픽셀은 높은 픽셀 값을, 배경으로 부터 가까이 떨어져 있는 곳의 픽셀은 낮은 픽셀값을 설정하는 방법일 수 있다. 이렇게 결정된 픽셀 값을 기준 으로 골격화를 할 수 있다. 골격화를 위해 유클리드 거리 변환(Euclidean Distance Transform, EDT) 알고리즘이 이용될 수도 있다. 유클리 드 거리 변환은 거리 변환 기법의 한 종류일 수 있다. 영상 처리 장치는 균열 픽셀과 경계까지의 거리를 계산 한 뒤, 이를 기반으로 플럭스(Flux)맵을 생성할 수 있다. 영상 처리 장치는 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산할 수 있다. 거리 값은 골격화 과정에서 파악된 값을 기준으로 계산될 수 있다. 예를 들어 유클리드 거리 변환(EDT)을 기반 으로 골격화를 진행한 경우, EDT값을 기반으로 거리 값을 계산할 수 있다. 거리 값은 균열 픽셀이 분할한 이진 마스크를 이용하여 계산될 수 있다. 구체적으로 이진 마스크를 내 각 픽셀 과 이진 마스크의 경계까지의 거리를 기반으로 거리 값을 계산할 수 있다. 거리 값은 이미지 형태로 표현될 수 있다. 구체적으로 거리 값에 따라 에너지를 계산 한 뒤, 계산된 에너지 값 을 기반으로 플럭스를 계산하고, 플럭스 값을 기반으로 플럭스 맵을 완성할 수 있다. 계산된 플럭스 맵은 이진 마스크의 위상학적 구조를 담을 수 있다. 영상 처리 장치는 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택할 수 있다. 미리 설정된 값은 이미지 내 마스킹 된 전체 균열에 대한 픽셀 수를 기준으로 계산된 값일 수 있다. 예를 들어 미리 설정된 값은 균열에 대한 픽셀 중 상위 10%에 해당하는 균열 픽셀이 가지는 거리 값일 수 있다. 또는 미리 설정된 값은 균열에 대한 픽셀 중 상위 20%에 해당하는 균열 픽셀이 가지는 거리 값일 수 있다. 영상 처리 장치는 선택된 균열 픽셀과 골격화된 픽셀 사이의 교점을 파악할 수 있다. 일 실시예로 영상 처리 장치는 선택된 균열 픽셀 및 골격화된 픽셀에 모두 속하는 픽셀을 교점으로 파악할 수도 있다. 영상 처리 장치는 파악된 교점과 배경 픽셀까지의 거리 값을 기반으로 균열의 두께를 측정할 수 있다. 일 실시예로 영상 처리 장치는 선택된 균열 픽셀과 플럭스 맵의 교점 중 가장 큰 EDT값을 가지는 좌표를 기준 좌표로 삼을 수 있다. 영상 처리 장치는 기준 좌표와 배경 픽셀까지의 거리를 기반으로 균열의 두께를 측정할 수 있다. 일 실시예로 영상 처리 장치는 교점과 배경 픽셀까지의 거리 중 가장 큰 거리 값을 파악 한 뒤, 해당 값에 2배 를 취하여 균열의 두께를 측정할 수 있다. 일 실시예로 영상 처리 장치는 계산된 거리 값과 기준 스티커를 비교함으로써 균열의 두께를 측정할 수 있다. 예를 들어 기준 스티커의 폭이 3cm인 경우, 스티커의 폭에 해당하는 픽셀의 개수와 균열에 속하는 픽셀의 개수 를 비교하여 균열의 두께를 정확하게 측정할 수 있다. 더 나아가 상기 영상 처리 장치는 상기 측정된 균열 두께를 기준으로 시설물의 상태를 평가할 수 있다. 일 실시예로 영상 처리 장치는 측정된 균열의 두께를 기준으로 시설물을 우수, 양호, 보통, 미흡 또는 불량으로 평가할 수 있다. 이하 분할 모델을 구축하기 위한 학습 데이터에 대해 설명한다. 도3은 학습 데이터에 포함된 시설물의 균열 이미지의 일 실시예이다. 학습 데이터에 포함된 균열 이미지는 넓은 범위에 포함된 도메인의 범위를 가진다. 구체적으로 학습 데이터에 포함된 균열 이미지는 벽면 재질, 균열 종류 또는 두께가 서로 다른 균열에 대한 이미지를 포함할 수 있다. 학습 데이터에 포함된 균열 이미지는 서로 간 낮은 유사도를 가질 수 있다. 학습 데이터에 포함된 균열 이미지는 흐리지 않는 날씨에서 햇빛과 그림자만이 허용된 상태에서 촬영된 이미지 일 수 있다. 학습 데이터에 포함된 균열 이미지는 번호판, 얼굴, 위치 특정 가능 정보 등 민감한 정보를 제외한 이미지일 수 있다. 학습 데이터에 포함된 균열 이미지는 기준 스티커가 촬영된 이미지일 수 있다. 도4 및 도5는 학습 데이터에 포함된 균열 이미지에 대한 라벨링 결과이다. 도4는 매직 완드 툴을 이용해서 라벨 링 하는 과정을 보여준다. 도5는 라벨링된 결과를 보여준다. 학습 데이터에 포함된 시설물의 균열 이미지는 매직 완드 툴을 이용하여 균열이 라벨링되었다. 매직 완드 툴은 사용자가 클릭한 지점의 픽셀의 색상과 위치를 기반으로 주변 픽셀과의 관계를 파악 한 뒤, 파 악한 관계를 기반으로 하나의 클러스터(Cluster)에 속한다고 판단되는 영역을 선택하여 윤곽선을 제시하는 바업 이다. 매직 완드 툴은 사용자가 직접 허용치(Tolerance)와 연결성(Connectiveity)을 조절하여 선택할 영역에 대해 정 의할 수 있다. 매직 완드 툴은 필요한 영역을 반자동(Semi-Auto)으로 선택할 때 이용된다. 매직 완드 툴은 선택하고자 하는 영역 전부를 지정할 필요가 없다. 따라서 매직 완드 툴은 불규칙적인 형태를 선택하는데 이용된다. 사용자는 매직 완드 툴을 통해 균열이라고 생각되는 하나의 픽셀을 선택할 수 있다. 이 경우 해당 픽셀과 같은 클러스터에 속할 것으로 판단되는 영역에 포함된 픽셀을 균열 픽셀로 라벨링 할 수 있다. 다시 말해 라벨링 데 이터는 사용자가 균열 픽셀이라고 설정한 하나의 픽셀의 색상과 위치를 기반으로 주변 픽셀과의 관계를 파악 한 뒤, 파악된 관계를 기반으로 하나의 클러스터(Cluster)에 속하는 픽셀을 균열 픽셀을 라벨링한 데이터일 수 있 다. 실제로 도5와 같이 매직 완드 툴을 이용한 라벨링 결과는 실제 정답값과 매우 유사한 것을 확인할 수 있다. 이하 분할 모델의 일 실시예 중 하나의 구조를 살펴본다. 도6은 분할 모델의 일 실시예를 보여준다. 분할 모델은 U-net 기반의 모델일 수 있다. 분할 모델은 인코더(Encoder) 및 디코더(Decoder)을 포함할 수 있다. 인코더는 채널을 확대하고 데이터의 차원 을 축소하여 이미지의 특징을 학습한다. 디코더는 인코딩된 특징 맵의 채널을 압축하고 데이터의 차원을 복원하 여 이미지를 재구성한다. 더 나아가 분할 모델은 인코더-디코더를 연결하는 스킵 커넥션(Skip Connection)을 포함할 수 있다. 스킵 커넥 션은 각 U-net에 포함된 각 단계의 인코더의 출력값을 디코더에 전달한다. 스킵 커넥션은 인코더-디코더 간 특 징 맵 정보 손실로 인한 성능 저하를 방지한다. 분할 모델은 256 x 256 사이즈로 크롭(Crop)된 촬영 영상을 입력 받을 수 있다. 촬영 영상은 RGB 3개의 채널로 이루어져있을 수 있다. 분할 모델의 인코더는 6, 12, 48 및 32개의 Dense 레이어를 포함할 수 있다. 분할 모델의 인코더의 Dense 레이어에서 출력하는 특징 맵은 최초의 특징맵 채널 뒷부분에 이어 붙여 인코딩 과 정에서 생성된 시점별 특징을 저장할 수 있다. 이를 통해 시점별 이미지의 특징 정보가 누락되는 것을 최소화하 여 정밀한 분할을 가능케 한다. 분할 모델의 디코더는 인코더가 추출한 값을 기반으로 이미지의 크기를 복원할 수 있다. 분할 모델의 디코더는 스킵 커넥션을 통해 인코더의 Dense 레이어로부터 인코딩 시점별 특징맵을 전달 받을 수 있다. 분할 헤드(Segmentation Head)는 디코더의 출력값을 기반으로 이진 마스크를 생성한다. 이진 마스크는 입력 이 미지에서 균열을 분할할 때 이용된다. 분할 모델은 생성된 이진 마스크와 정답 데이터(Ground Truth) 사이의 손실 값이 최소가 되도록 학습된다. 손실 값으로는 Dice Loss가 이용될 수 있다. 이하 학습 데이터를 생성한 뒤, 생성된 학습 데이터를 이용해 분할 모델을 구축하고, 구축된 분할 모델을 이용 해서 균열의 두께를 측정한 실험 결과에 대해 살펴 본다. 도7은 라벨링의 성능을 대조군과 비교한 실험결과를 보여준다. 왼쪽부터 원본 균열 이미지(Original), 대조군 라벨 이미지(Crackseq9k) 및 전술한 라벨링 방법(매직 완드 기법)을 이용한 라벨 이미지(Ours)이다. 균열 픽셀로 라벨링된 부분은 초록색으로 표시되었다. 대조군 라벨 이미지의 문제점을 살펴 보면 다음과 같다. 도7(A)와 같이 대조군 라벨 이미지는 패인 부분을 균열로 간주했다. 이에 대조군 라벨 이미지는 현장 점검 지침 상 균열로 볼 수 없는 패인부분을 균열 픽셀로 마스킹 하였다. 도7(B)와 같이 대조군 라벨 이미지는 좌측의 균열은 마스킹을 해주었으나 중앙 하단은 마스킹하지 않았다. 이에 대조군 라벨 이미지는 라벨에 일관성이 없는 것을 확인할 수 있다. 도7(C)와 같이 대조군 라벨 이미지는 실제 균열의 두께보다 넓게 균열을 마스킹 하였다. 이에 대조군 라벨 이미 지는 균열 두께를 과대 측정할 위험이 있는 것을 확인할 수 있다. 도7(D)와 같이 대조군 라벨 이미지는 균열이 아닌 부분에 대하여 삼각형 형태로 마스킹 하였다. 이에 대조군 라 벨 이미지는 잘못된 영역을 균열로 라벨링하는 것을 확인할 있다. 정리하면 종래 라벨링 기법은(Crackseg9k) 균열의 정의가 현장 점검 지침과 일치하지 않으며 일관성 없는 라벨링이 다수 존재하고 실제 균열의 두께를 정교하게 마스킹하지 못하며 마스킹의 오류 이미지로 구성되 는 한계를 가졌다. 반면에 전술한 라벨링 방법을 이용한 라벨 이미지는 위와 같은 문제가 발생하지 않는 것을 확인할 수 있다. 즉 패임과 균열을 분할하였으며 균열을 분할하는데 일관적이고 같은 미세 균열에 대해 표면까지 균열로 마스킹 하지 않고 균열 영역만을 세밀하게 라벨링 하였고 오라벨링도 수정하였다. 즉 전술한 라벨링 방법을 이용하면 균열이 불규칙 하여도 윤곽선을 따라 깔끔하게 정답 라벨을 생성할 수 있다. 분할 모델의 성능을 평가하기 위한 지표로 PA(Pixel Accuracy), IoU(Intersection over Union)와 F1-Score가 이용되었다. 지표들은 혼동 행렬(Confusion Matrix)을 통해 계산될 수 있다. 수학식1은 혼동행렬을 보여준다. 수학식 1"}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "혼동 행렬에서 T는 예측과 정답값이 같은 경우를 의미한다. 혼동 행렬에서 F는 예측과 정답값과의 다른 경우를 의미한다. 혼동행렬에서 P는 예측을 참으로 했을때를 의미한다. 혼동행렬에서 N는 예측을 거짓으로 했을때를 의 미한다. 혼동행렬을 기반으로 TP, FP, FN, TN을 파악할 수 있다. PA(True Positives)는 전체 픽셀 중 옳게 예측한 픽셀의 비율을 의미한다. 수학식2는 PA을 계산할 때 이용하는 식이다. 수학식 2"}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "IoU(Intersection over Union)는 GT(Ground Truth)와 분할 모델이 예측한 이진 마스크의 교집합을 두 영역의 합집합으로 나누는 것을 의미한다. IoU는 GT와 분할 모델이 예측한 마스크의 일치하는 정도를 비교하여 성능을 직관적으로 판단하기 적합하다. 수학식3은 IoU을 계산할 때 이용하는 식이다. 수학식 3 F1-Score는 정밀도(Precision)와 재현율(Recall)의 조화평균을 통해 계산될 수 있다. 정밀도는 참이라 예측한 것 중 실제 참인 비율이며, 재현율은 실제 참인 것 중 참으로 예측한 비율이다. 수학식4는 F1-score을 계산할 때 이용하는 식이다. 수학식 4"}
{"patent_id": "10-2023-0132055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "F1-Score는 불균형 데이터에 적합한 평가 지표이나 수치에 대한 직관적인 판단이 어려워 Crack IoU를 주 지표로 삼되 F1-Score를 참고하였다. 도8은 분할 모델의 Backbone에 따른 성능을 평가한 실험결과이다. 성능 평가를 위하여 SegFormer, Xception, VGG19, ResNet50, EfficientNet 및 DenseNet201이 이용되었다. 성능 평가를 위한 지표로는 Crack IoU가 이용되었다. 순서대로 Crack IoU값이 78.00, 79.90, 80.03, 80.11, 80.58 및 80.70인 것을 확인할 수 있다. 6개의 네트워크 중 DenseNet201이 가장 높은 성능을 보이는 것을 확인할 수 있다. 이는 DenseNet구조가 다른 네 트워크와는 달리 학습한 신경망의 특징맵 정보들을 직접 연결하여 예측 과정에서 과거의 모든 정보에 대해 접근 할 수 있기 때문이다. 도9는 분할 모델(Ours)의 성능을 대조군(DeepCrack)과 비교한 평가한 실험 결과이다. 분할 모델의 성능 평가는 2종류의 테스트 데이터 셋을 통해 진행되었다. 첫번째는 종래 균열 두께를 측정하는 모델을 구축할 때 이용되는 DeepCrack 데이터 세트이다. 두번째는 전술한 라벨링 기법(매직 완드툴)을 이용하여 구축된 데이터(Pohang Crack, POC)이다. 테스트 데이터가 POC일 때 분할 모델의 CrackIoU가 84.53로 매우 높은 것을 확인할 수 있다. 또한 테스트 데이 터가 POC일 때 분할 모델의 PA, 정밀도, 재현율 및 F1-score은 높은 수치를 가지는 것을 확인할 수 있다. 테스트 데이터가 DeepCrack 일때 분할 모델의 PA는 대조군보다 0.91 높은 것을 확인할 수 있다 또한 정밀도 재 현율 및 F1-Score가 12.31, 11.51 및 11.91 높은 것을 확인할 수 있다. 도10 은 분할 모델이 균열 픽셀을 분할한 결과를 보여준다. 도10(A)는 검은 반점 무늬가 있는 경우이다. 도10(B)는 울퉁불퉁한 벽면으로 어두운 패임이 있는 경우이다. 도 10(C)는 균열과 비슷한 무늬가 포함된 경우이다. 도10(D)는 균열과 박리가 존재하는 경우이다. 도10(A) 내지 도10(C)는 각각 균열로 혼동될 수 있는 특징이 나타난 이미지이다. 따라서 도10(A) 내지 도10(C) 는 일반적인 이미지 프로세싱 기법에서는 처리하기 어려운 사례이다. 하지만 분할 모델은 정답값(GT)와 매우 비 슷하게 이진 마스크를 예측(prediction)한 것을 확인할 수 있다. 즉 분할 모델은 균열 및 균열과 흡사한 특징인 어두운 색상, 단순 패임 및 유사 무늬를 구별되도록 학습된 것을 확인할 수 있다. 균열을 분석하는 경우 균열과 박리/박락은 구별될 필요가 있다. 표면 코팅이 벗겨지는 박리와 외벽이 탈락하는 박락은 균열과는 위험 정도가 상이하기 때문이다. 도10(D)을 보면 분할 모델은 균열과 박리/박락을 구별하는 것 을 확인할 수 있다. 이에 분할 모델은 건물 안전점검 모델로 적합함을 확인할 수 있다. 도11 은 영상 처리 장치가 균열의 두께를 측정하는 과정을 표현한 실험결과이다. 도11(A)는 원본 촬영 영상이다. 도11(B)는 정답 이미지(Ground Truth)이다. 도11(C)는 예측 모델이 예측한 균열 픽셀을 이진 마스크로 표현한 것이다. 도11(D)는 유클리드 거리 변환(EDT) 적용 후의 이진 마스크를 보여준다. 도11(E)는 x축방향에 대한 EDT 맵을 보여준다. 도11(F)는 y축 방향에 대한 EDT맵을 보여준다. 도11(G)는 플럭스 (Flux) 맵을 보여준다. 도11(H)는 프루닝(Pruning) 맵을 보여준다. 도11(I)는 균열의 두께를 측정한 결과(빨간 선)를 보여준다. 영상 처리 장치는 도11(D)와 같이 예측한 균열 픽셀 마스크를 기준으로 유클리드 거리 변환(EDT)을 적용하여, 균열 픽셀과 경계까지의 거리를 이미지 형태로 표현할 수 있다. 픽셀이 밝을수록 당 픽셀의 EDT값이 높은 것을 보여준다. 영상 처리 장치는 도11(G)와 같이 경계까지 거리가 먼 픽셀들이 높은 에너지를 가지게 되며 이를 기반으로 플럭 스를 계산하여 마스크의 위상학적 구조를 담은 플럭스 맵을 제작할 수 있다. 영상 처리 장치는 도11(H)와 같이 임계치를 기준으로 플럭스 맵을 프루닝(Pruning)하여 골격화맵을 계산할 수 있다. 영상 처리 장치는 골격화 맵 계산 후 가장 두꺼운 균열의 지점을 찾는다. 이를 위하여 영상 처리 장치는 사전에 계산했던 EDT값을 활용할 수 있다. 더 나아가 영상 처리 장치는 알고리즘의 유연성 고도화를 위하여 이미지 내 마스킹 된 전체 균열의 픽셀 수를 구하고, 픽셀수에 맞춰 상위 비율에 대한 임계치를 지정해 균열의 거리 좌표 를 가져올 픽셀의 수를 설정할 수 있다. 영상 처리 장치는 도11(I)와 같이 설정된 픽셀과 도11(H)의 플럭스맵(파란색)의 교점 중 가장 큰 EDT값(거리 값)을 가지는 좌표를 기준 좌표로 삼을 수 있다. 영상 처리 장치는 기준 좌표와 배경 픽셀 까지의 거리 값에 2 배를 하여 균열의 두께(빨간 선)을 측정할 수 있다. 최종적으로 영상 처리 장치는 측정된 균열의 두께와 기준 스티커(도11(A)에서의 파란점)를 비교하여 정확한 균 열의 크기를 계산할 수 있다. 도12는 분할 모델(Ours)이 균열 두께를 측정한 실험결과이다. 도12에서 확인할 수 있듯이 예측 모델이 예측한 균열의 위치(노란선)이 실제 정답의 위치(빨간선)과 상당부분 일치하는 것을 확인할 수 있다. 즉 분할 모델은 균열의 두께를 정확히 측정할 수 있다는 것을 보여준다. 이하 도13을 통해 딥러닝에 기반한 균열 두께 측정 장치에 대해 설명한다. 도13은 딥러닝에 기반한 균열 두께 측정 장치의 실시예 중 하나의 구성이다. 딥러닝에 기반한 균열 두께 측정 장치는 도1에서 설명한 영상 처리 장치에 해당할 수 있다. 즉 딥러 닝에 기반한 균열 두께 측정 장치는 전술한 균열 두께 측정 방법을 수행하는 장치일 수 있다. 딥러닝에 기반한 균열 두께 측정 장치는 물리적으로 다양한 형태로 구현될 수 있다. 예를 들어 딥러닝에 기반한 균열 두께 측정 장치는 PC, 노트북, 스마트기기, 서버 또는 데이터처리 전용 칩셋 등의 형태를 가 질 수 있다. 딥러닝에 기반한 균열 두께 측정 장치는 입력장치, 저장장치, 연산장치, 출력장치, 인터페이스 장치 및 통신장치를 포함할 수 있다. 입력장치는 일정한 명령 또는 데이터를 입력 받는 인터페이스 장치(키보드, 마우스, 터치스크린 등)를 포 함할 수도 있다. 입력장치는 별도의 저장장치(USB, CD, 하드디스크 등)를 통하여 정보를 입력 받는 구성을 포함할 수도 있다. 입력장치는 입력 받는 데이터를 별도의 측정장치를 통하여 입력 받거나, 별도의 DB를 통하여 입력 받을 수도 있다. 입력장치는 통신장치을 통해 데이터를 유선 또는 무선 통신으로 입력 받을 수도 있다. 입력장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 정보를 입력 받을 수 있다. 입력장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 모델을 입력 받을 수 있다. 입력장치는 촬영 영상을 입 력 받을 수 있다. 입력장치는 분할 모델을 입력 받을 수도 있다.저장장치는 일정한 정보를 저장하는 장치가 될 수도있다. 저장장치는 입력장치를 통해 입력 받 은 정보를 저장할 수 있다. 저장장치는 연산장치가 연산하는 과정에서 생성되는 정보를 저장할 수 있 다. 즉 저장장치는 메모리를 포함할 수 있다. 저장장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 정보를 저장할 수 있다. 저장장치는 전 술한 균열 두께 측정 방법을 수행하는데 필요한 모델을 저장할 수 있다. 저장장치는 촬영 영상을 저장할 수 있다. 저장장치는 분할 모델을 저장할 수 있다. 연산장치는 데이터를 처리하고, 일정한 연산을 처리하는 프로세서, AP, 프로그램이 임베디드된 칩과 같은 장치일 수 있다. 연산치는 딥러닝에 기반한 균열 두께 측정 장치를 제어하는 제어신호를 생성할 수 있다. 연산장치는 딥러닝에 기반한 균열 두께 측정 장치에 포함된 입력장치, 저장장치, 출력장치, 인터페이스 장치 및 통신장치을 제어하는 제어신호를 생성할 수 있다. 연산장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 연산을 할 수 있다. 연산장치는 촬영 영상에서 균열 픽셀을 분할할 수 있다. 연산장치는 분할된 균열 픽셀에 대하여 골격화(Skeleton)를 할 수 있다. 연산장치는 분할된 균열 픽셀과 배경 픽셀까지의 거리 값을 계산할 수 있다. 연산장치는 미리 설정된 값 이상의 거리 값을 가지는 균열 픽셀을 선택할 수 있다. 연산장치는 선택된 균열 픽셀과 골격화 된 픽셀 사이의 교점을 파악할 수 있다. 연산장치는 파악된 교점과 배경 픽셀까지의 거리값을 기반으로 균 열의 두께를 측정할 수 있다. 출력장치는 일정한 정보를 출력하는 장치가 될 수도 있다. 출력장치는 데이터 과정에 필요한 인터페 이스, 입력된 데이터, 분석결과 등을 출력할 수도 있다. 출력장치는 디스플레이, 문서를 출력하는 장치, 스피커등과 같이 물리적으로 다양한 형태로 구현될 수도 있다. 출력장치는 저장장치에 저장된 정보를 출력할 수 있다. 출력장치는 연산장치가 연산하는 과정에서 생성된 정보를 출력할 수 있다. 출력장치 는 연산장치가 연산한 결과를 출력할 수 있다. 인터페이스 장치는 외부로부터 일정한 명령 및 데이터를 입력 받는 장치일 수 있다. 인터페이스 장치(35 0)는 딥러닝에 기반한 균열 두께 측정 장치를 제어하기 위한 제어신호를 입력 받을 수 있다. 인터페이스 장치는 딥러닝에 기반한 균열 두께 측정 장치가 분석한 결과를 출력할 수 있다. 인터페이스 장치 는 물리적으로 연결된 입력 장치 또는 외부 저장장치로부터 전술한 균열 두께 측정 방법을 수행하는데 필 요한 정보를 입력 받을 수 있다. 통신장치는 유선 또는 무선 네트워크를 통해 일정한 정보를 수신하고 전송하는 구성을 의미할 수 있다. 통 신장치는 Wi-Fi(Wireless Fidelity), Wi-Fi Direct, 블루투스(Bluetooth), UWB(Ultra-Wide Band) 또는 NFC(Near Field Communication), USB(Universal Serial Bus), 혹은 HDMI(High Definition Multimedia Interface), LAN(Local Area Network) 등과 같은 네트워크 통신을 수행할 수 있다. 통신장치는 딥러닝에 기반한 균열 두께 측정 장치를 제어하는데 필요한 제어 신호를 수신할 수 있다. 통신장치는 딥러닝에 기반한 균열 두께 측정 장치가 분석한 결과를 전송할 수 있다. 통신장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 정보를 수신받을 수 있다. 통신장치는 전술한 균열 두께 측정 방법을 수행하는데 필요한 모델을 수신 받을 수 있다. 전술한 딥러닝에 기반한 균열 두께 측정 방법은 컴퓨터에서 실행될 수 있는 실행가능한 알고리즘을 포함하는 프로그램(또는 어플리케이션)으로 구현될 수 있다. 상기 프로그램은 일시적 또는 비일시적 판독 가능 매체(non-transitory computer readable medium)에 저장되어 제공될 수 있다. 상기 일시적 판독 가능 매체는 스태틱 램(Static RAM，SRAM), 다이내믹 램(Dynamic RAM，DRAM), 싱크로너스 디 램 (Synchronous DRAM，SDRAM), 2배속 SDRAM(Double Data Rate SDRAM，DDR SDRAM), 증강형 SDRAM(Enhanced SDRAM，ESDRAM), 동기화 DRAM(Synclink DRAM，SLDRAM) 및 직접 램버스 램(Direct Rambus RAM，DRRAM) 과 같은 다양한 RAM을 의미한다. 상기 비일시적 판독 가능 매체는 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 구체적으로는, 상술한 다양한 어플리케이션 또는 프로그램들은 CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM(read-only memory), PROM (programmable read only memory), EPROM(Erasable PROM, EPROM) 또는 EEPROM(Electrically EPROM) 또는 플래시 메모리 등과 같은 비일시적 판독 가능 매체에 저장되어 제공될 수 있 다. 본 실시예 및 본 명세서에 첨부된 도면은 전술한 기술에 포함되는 기술적 사상의 일부를 명확하게 나타내고 있 는 것에 불과하며, 전술한 기술의 명세서 및 도면에 포함된 기술적 사상의 범위 내에서 당업자가 용이하게 유추 할 수 있는 변형 예와 구체적인 실시예는 모두 전술한 기술의 권리범위에 포함되는 것이 자명하다고 할 것이다."}
{"patent_id": "10-2023-0132055", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도1은 영상 처리 장치가 균열 두께 측정방법을 수행하는 전체적인 과정을 보여준다. 도2는 균열 두께 측정 방법의 일 실시예 중 하나의 순서도이다. 도3은 학습 데이터에 포함된 시설물의 균열 이미지의 일 실시예이다. 도4 및 도5는 학습 데이터에 포함된 균열 이미지에 대한 라벨링 결과이다. 도4는 매직 완드 툴을 이용해서 라벨 링 하는 과정을 보여준다. 도5는 라벨링된 결과를 보여준다. 도6은 분할 모델의 일 실시예를 보여준다. 도7은 라벨링의 성능을 대조군과 비교한 실험결과를 보여준다. 도8은 분할 모델의 Backbone에 따른 성능을 평가한 실험결과이다. 도9는 분할 모델(Ours)의 성능을 대조군(DeepCrack)과 비교한 평가한 실험 결과이다. 도10 은 분할 모델이 균열 픽셀을 분할한 결과를 보여준다. 도11 은 영상 처리 장치가 균열의 두께를 측정하는 과정을 표현한 실험결과이다. 도12는 분할 모델(Ours)이 균열 두께를 측정한 실험결과이다. 도13은 딥러닝에 기반한 균열 두께 측정 장치의 실시예 중 하나의 구성이다."}
