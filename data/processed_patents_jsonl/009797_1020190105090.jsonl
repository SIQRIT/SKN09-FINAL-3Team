{"patent_id": "10-2019-0105090", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0106860", "출원번호": "10-2019-0105090", "발명의 명칭": "애플리케이션 모듈 공유 방법 및 이를 이를 이용한 장치", "출원인": "엘지전자 주식회사", "발명자": "이철희"}}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에서 정보 처리 방법에 있어서, OS(operating system) 상에 논리적으로 도킹되는 컨테이너를 확인하는 단계; 상기 컨테이너에 대응하는 애플리케이션을 확인하는 단계; 상기 애플리케이션의 구동과 관련된 이벤트를 확인하는 단계; 및상기 이벤트에 관련된 제1데이터를 기반으로 생성된 제1변경 블록에 대한 제1식별정보 및 상기 컨테이너에 대한제2식별 정보를 포함하는 상기 제1변경 블록에 대한 정보를 다른 노드에 전송하는 단계를 포함하는 정보 처리방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제2식별 정보는 상기 컨테이너가 상기 전자 장치에 도킹되기 전에 상기 컨테이너에 포함된 데이터 중 적어도 일부를 기반으로 생성되는 것을 특징으로 하는 정보 처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 추가적인 이벤트와 관련된 제2데이터를 기반으로 생성된 제2변경 블록에 대한 제3식별정보를 포함하는 상기 제2변경 블록에 대한 정보를 다른 노드에 전송하는 단계; 및 상기 제1데이터 및 상기 제2데이터를 포함하는 새로운 컨테이너에 대한 제4식별정보를 확인하는 단계를 더 포함하며, 상기 제4식별정보는 상기 제1식별정보, 상기 제2식별정보 및 상기 제3식별정보를 기반으로 확인되는 것을 특징으로 하는 정보 처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 다른 노드로부터 상기 제4식별정보에 대한 확인 응답을 수신하는 단계를 더 포함하며, 상기 확인 응답은 상기 다른 노드에 전송된 적어도 하나의 변경 블록에 대한 정보 중 적어도 일부를 기반으로결정되는 것을 특징으로 하는 정보 처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서, 상기 제1변경 블록에 대한 정보는 상기 전자 장치에 대한 정보, 상기 변경 블록 이전에 생성된 변경 블록에 대한 식별 정보, 상기 변경블록이 생성된 이벤트에 대한 정보 및 상기 전자 장치에 대한 정보 중 적어도 하나를포함하는 것을 특징으로 하는 정보 처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 컨테이너의 도킹에 대응하여 상기 컨테이너의 상태와 관련된 정보를 상기 다른 노드에 전송하는 단계를 더포함하는 것을 특징으로 하는 정보 처리 방법. 공개특허 10-2019-0106860-3-청구항 7 제1항에 있어서, 상기 제1데이터 및 상기 컨테이너에 포함된 정보를 기반으로 새로운 컨테이너를 생성하는 단계; 및 상기 새로운 컨테이너에 대한 정보를 상기 다른 노드에 전송하는 단계를 더 포함하는 것을 특징으로 하는 정보처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 새로운 컨테이너를 전송하기 위한 요청 정보를 수신 장치에 전송하는 단계; 상기 요청 정보에 대응한 응답 정보를 수신하는 단계; 및 상기 응답 정보를 기반으로 상기 새로운 컨테이너를 상기 수신 장치에 전송하는 단계를 더 포함하는 것을 특징으로 하는 정보 처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서, 상기 제2식별 정보를 저장하는 단계; 및 상기 새로운 컨테이너 생성에 대응하여 제2식별 정보를 삭제하는 단계를 더 포함하는 것을 특징으로 하는 정보처리 방법."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "전자 장치에 있어서, 다른 전자 장치와 통신할 수 있는 통신부; 및 상기 통신부를 제어하고, OS(operating system) 상에 논리적으로 도킹되는 컨테이너를 확인하고, 상기 컨테이너에 대응하는 애플리케이션을 확인하고, 상기 애플리케이션의 구동과 관련된 이벤트를 확인하고, 상기 이벤트에관련된 제1데이터를 기반으로 생성된 제1변경 블록에 대한 제1식별정보 및 상기 컨테이너에 대한 제2식별 정보를 포함하는 상기 제1변경 블록에 대한 정보를 다른 노드에 전송하는 제어부를 포함하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 제2식별 정보는 상기 컨테이너가 상기 전자 장치에 도킹되기 전에 상기 컨테이너에 포함된 데이터 중 적어도 일부를 기반으로 생성되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서, 상기 제어부는 추가적인 이벤트와 관련된 제2데이터를 기반으로 생성된 제2변경 블록에 대한 제3식별정보를 포함하는 상기 제2변경 블록에 대한 정보를 다른 노드에 전송하고, 상기 제1데이터 및 상기 제2데이터를 포함하는새로운 컨테이너에 대한 제4식별정보를 확인하고, 상기 제4식별정보는 상기 제1식별정보, 상기 제2식별정보 및 상기 제3식별정보를 기반으로 확인되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 제어부는 상기 다른 노드로부터 상기 제4식별정보에 대한 확인 응답을 수신하고, 공개특허 10-2019-0106860-4-상기 확인 응답은 상기 다른 노드에 전송된 적어도 하나의 변경 블록에 대한 정보 중 적어도 일부를 기반으로결정되는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 제1변경 블록에 대한 정보는 상기 전자 장치에 대한 정보, 상기 변경 블록 이전에 생성된 변경 블록에 대한 식별 정보, 상기 변경블록이 생성된 이벤트에 대한 정보 및 상기 전자 장치에 대한 정보 중 적어도 하나를포함하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제10항에 있어서, 상기 제어부는 상기 컨테이너의 도킹에 대응하여 상기 컨테이너의 상태와 관련된 정보를 상기 다른 노드에 전송하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서, 상기 제어부는 상기 제1데이터 및 상기 컨테이너에 포함된 정보를 기반으로 새로운 컨테이너를 생성하고, 상기 새로운 컨테이너에 대한 정보를 상기 다른 노드에 전송하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 상기 제어부는 상기 새로운 컨테이너를 전송하기 위한 요청 정보를 수신 장치에 전송하고, 상기 요청 정보에 대응한 응답 정보를 수신하고, 상기 응답 정보를 기반으로 상기 새로운 컨테이너를 상기 수신 장치에 전송하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서, 상기 제어부는 상기 제2식별 정보를 저장하고, 상기 새로운 컨테이너 생성에 대응하여 제2식별 정보를 삭제하는 것을 특징으로하는 전자 장치."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제1항의 방법에 실행하기 위한 인스트럭션을 포함하는 비 휘발성 저장매체."}
{"patent_id": "10-2019-0105090", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제1항에 있어서, 상기 제1변경 블록에 대한 정보는 차량 대 차량 통신을 위한 채널 및 차량 대 사물을 위한 채널 중 적어도 하나를 위해 할당된 채널 상에서 전송되며, 상기 제1변경 블록에 대한 정보는 전송되는 채널 상에서 상기 전자 장치를 식별하기 위한 식별자를 포함하는 것을 상기 5G 네트워크를 통해 다른 노드에 전송되는 것을 특징으로 하는 정보 처리 방법. 공개특허 10-2019-0106860-5-"}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 자율 주행차량, 사용자 단말기 및 서버 중 하나 이상이 인공지능(Artificial Intelligence) 모듈, 드 론(Unmanned Aerial Vehicle, UAV), 로봇, 증강 현실(Augmented Reality, AR) 장치, 가상 현실(Virtual Reality, VR) 장치, 5G 서비스와 관련된 장치 등과 연계될 수 있다. 본 명세서의 일 실시 예에 따르는 전자 장치 에서 정보 처리 방법은 OS(operating system) 상에 논리적으로 도킹되는 컨테이너를 확인하는 단계; 상기 컨테이 너에 대응하는 애플리케이션을 확인하는 단계; 상기 애플리케이션의 구동과 관련된 이벤트를 확인하는 단계; 및 상기 이벤트에 관련된 제1데이터를 기반으로 생성된 제1변경 블록에 대한 제1식별정보 및 상기 컨테이너에 대한 제2식별 정보를 포함하는 상기 제1변경 블록에 대한 정보를 다른 노드에 전송하는 단계를 포함한다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 명세서의 실시 예는 애플리케이션을 모듈화 하여 전자 장치간에 공유하기 위한 방법 및 장치에 관한 것이다. 또한 본 명세서의 실시 예에는 모듈화된 애플리케이션 전자 장치 사이에 송수신되고, 이에 대한 유효성을 검증 하기 위한 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "사용자가 다수의 전자 기기를 사용함에 따라 전자 기기 사이에 데이터를 동기화 하기 위한 기술의 필요성이 높 아졌다. 특히 복수의 전자기기에서 동일한 애플리케이션을 설치하는 경우에도 사용자의 추가 사용에 따른 데이 터의 추가나 변경을 반영하기 위한 별도의 절차기 필요했다. 최근 클라우드를 통한 애플리케이션을 공유가 가능 해지면서, 애플리케이션은 클라우드 서버에서 구동되고, 각 전자 장치는 클라우드 서버와의 통신을 통해 데이터 를 송수신하는 방식으로 복수개의 전자 장치 사이에 애플리케이션 및 데이터의 동기화 수행하였다. 그러나 이와 같이 클라우드 등을 활용할 경우 각 전자 장치가 클라우드와 통신하기 위해 네트워크와 연결되어야 한다. 특히 최근의 경우 사용자 데이터의 크기가 증가함에 따라 고속 통신이 가능한 네트워크와 각 전자장치가 연결되어야 이와 같은 데이터의 동기화가 가능하게 된다. 또한 별도의 클라우드 서버를 구비함에 따른 인프라 확충 비용이 추가로 필요하게 되며, 송수신되는 정보의 유효성을 획득하기 위한 추가적인 절차기 필요하게 된다. 그리고 각 전자 장치에 클라우드와 대응되는 저장공간이 필요하여, 전자 장치를 구현하기 위한 비용이 증 가하게 되는 문제점이 있었다. 이와 같은 문제점을 해결하고, 복수개의 전자 장치에서 사용자가 애플리케이션을 구동하고, 애플리케이션에 사 용에 따른 데이터를 동기화 하며, 이에 대한 유효성을 검증하기 위한 방법 및 장치가 요구된다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 명세서의 실시 예는 상술한 문제점을 해결하기 위하여 제안된 것으로 복수개의 전자 장치에서 애플리케이션 을 구동하기 위한 방법 및 장치가 개시된다. 또한 본 명세서의 실시 예에서 애플리케이션을 모듈화하여 각 전자 장치 사이에서 교환하고, 전송된 애플리케이 션 모듈을 설치하여 구동할 때 변경 및 추가되는 데이터에 대한 유효성을 검증하기 위해 복수의 다른 노드와의 통신을 수행하는 방법 및 장치가 개시된다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 과제를 달성하기 위하여, 본 명세서의 일 실시 예에 따르는 전자 장치에서 정보 처리 방법은 OS(operating system) 상에 논리적으로 도킹되는 컨테이너를 확인하는 단계; 상기 컨테이너에 대응하는 애플리 케이션을 확인하는 단계; 상기 애플리케이션의 구동과 관련된 이벤트를 확인하는 단계; 및 상기 이벤트에 관련 된 제1데이터를 기반으로 생성된 제1변경 블록에 대한 제1식별정보 및 상기 컨테이너에 대한 제2식별 정보를 포 함하는 상기 제1변경 블록에 대한 정보를 다른 노드에 전송하는 단계를 포함한다. 본 명세서의 다른 실시 예에 따르는 전자 장치는 다른 전자 장치와 통신할 수 있는 통신부; 및 상기 통신부를 제어하고, OS(operating system) 상에 논리적으로 도킹되는 컨테이너를 확인하고, 상기 컨테이너에 대응하는 애 플리케이션을 확인하고, 상기 애플리케이션의 구동과 관련된 이벤트를 확인하고, 상기 이벤트에 관련된 제1데이 터를 기반으로 생성된 제1변경 블록에 대한 제1식별정보 및 상기 컨테이너에 대한 제2식별 정보를 포함하는 상 기 제1변경 블록에 대한 정보를 다른 노드에 전송하는 제어부를 포함한다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 명세서의 실시 예에 따르면, 애플리케이션을 모듈화 하여 복수의 장치 사이에서 교환함에 따라 각 장치가 별 도의 네트워크에 연결되지 않은 경우에도 장치 사이에서 애플리케이션을 교환할 수 있다. 또한 애플리케이션의 사용에 따라 변경 및 추가된 데이터의 유효성을 효과적으로 검증할 수 있다. 또한 각 전자 장치 사이에서 사용 자 데이터를 포함한 애플리케이션 모듈을 이동시키는 것에 무결성을 보장할 수 있다."}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 실시 예를 첨부된 도면을 참조하여 상세하게 설명한다. 실시 예를 설명함에 있어서 본 발명이 속하는 기술 분야에 익히 알려져 있고 본 발명과 직접적으로 관련이 없는 기술 내용에 대해서는 설명을 생략한다. 이는 불필요한 설명을 생략함으로써 본 발명의 요지를 흐리지 않고 더 욱 명확히 전달하기 위함이다. 마찬가지 이유로 첨부 도면에 있어서 일부 구성요소는 과장되거나 생략되거나 개략적으로 도시되었다. 또한, 각 구성요소의 크기는 실제 크기를 전적으로 반영하는 것이 아니다. 각 도면에서 동일한 또는 대응하는 구성요소에 는 동일한 참조 번호를 부여하였다. 본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시 예들에 한정되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시 예들은 본 발명의 개시가 완전하도록 하고, 본 발명이"}
{"patent_id": "10-2019-0105090", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "속하는 기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다.이 때, 처리 흐름도 도면들의 각 블록과 흐름도 도면들의 조합들은 컴퓨터 프로그램 인스트럭션들에 의해 수행 될 수 있음을 이해할 수 있을 것이다. 이들 컴퓨터 프로그램 인스트럭션들은 범용 컴퓨터, 특수용 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비의 프로세서에 탑재될 수 있으므로, 컴퓨터 또는 기타 프로그램 가 능한 데이터 프로세싱 장비의 프로세서를 통해 수행되는 그 인스트럭션들이 흐름도 블록(들)에서 설명된 기능들 을 수행하는 수단을 생성하게 된다. 이들 컴퓨터 프로그램 인스트럭션들은 특정 방식으로 기능을 구현하기 위해 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 지향할 수 있는 컴퓨터 이용 가능 또는 컴퓨터 판독 가능 메모리에 저장되는 것도 가능하므로, 그 컴퓨터 이용가능 또는 컴퓨터 판독 가능 메모리에 저장된 인스트 럭션들은 흐름도 블록(들)에서 설명된 기능을 수행하는 인스트럭션 수단을 내포하는 제조 품목을 생산하는 것도 가능하다. 컴퓨터 프로그램 인스트럭션들은 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에 탑재 되는 것도 가능하므로, 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비 상에서 일련의 동작 단계들이 수행되어 컴퓨터로 실행되는 프로세스를 생성해서 컴퓨터 또는 기타 프로그램 가능한 데이터 프로세싱 장비를 수행하는 인스트럭션들은 흐름도 블록(들)에서 설명된 기능들을 실행하기 위한 단계들을 제공하는 것도 가능하 다. 또한, 각 블록은 특정된 논리적 기능(들)을 실행하기 위한 하나 이상의 실행 가능한 인스트럭션들을 포함하는 모듈, 세그먼트 또는 코드의 일부를 나타낼 수 있다. 또, 몇 가지 대체 실행 예들에서는 블록들에서 언급된 기 능들이 순서를 벗어나서 발생하는 것도 가능함을 주목해야 한다. 예컨대, 잇달아 도시되어 있는 두 개의 블록들 은 사실 실질적으로 동시에 수행되는 것도 가능하고 또는 그 블록들이 때때로 해당하는 기능에 따라 역순으로 수행되는 것도 가능하다. 이 때, 본 실시 예에서 사용되는 '~부'라는 용어는 소프트웨어 또는 FPGA또는 ASIC과 같은 하드웨어 구성요소를 의미하며, '~부'는 어떤 역할들을 수행한다. 그렇지만 '~부'는 소프트웨어 또는 하드웨어에 한정되는 의미는 아 니다. '~부'는 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재 생시키도록 구성될 수도 있다. 따라서, 일 예로서 '~부'는 소프트웨어 구성요소들, 객체지향 소프트웨어 구성 요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저 들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌웨어, 마이크로코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들, 및 변수들을 포함한다. 구성요소들과 '~부'들 안에서 제공 되는 기능은 더 작은 수의 구성요소들 및 '~부'들로 결합되거나 추가적인 구성요소들과 '~부'들로 더 분리될 수 있다. 뿐만 아니라, 구성요소들 및 '~부'들은 디바이스 또는 보안 멀티미디어카드 내의 하나 또는 그 이상의 CPU들을 재생시키도록 구현될 수도 있다. 인공 지능은 인공적인 지능 또는 이를 만들 수 있는 방법론을 연구하는 분야를 의미하며, 머신 러닝(기계 학습, Machine Learning)은 인공 지능 분야에서 다루는 다양한 문제를 정의하고 그것을 해결하는 방법론을 연구하는 분야를 의미한다. 머신 러닝은 어떠한 작업에 대하여 꾸준한 경험을 통해 그 작업에 대한 성능을 높이는 알고리 즘으로 정의하기도 한다. 본 명세서의 실시 예에 따른 인공지능 장치는 애플리케이션을 포함하는 컨테이너의 이 동에 따른 정보를 교환하기 위한 절차를 수행할 수 있으며, 이와 관련된 정보 교환을 하기 위한 외부 노드를 적 응적으로 식별할 수 있다. 인공 신경망(ANN: Artificial Neural Network)은 머신 러닝에서 사용되는 모델로써, 시냅스의 결합으로 네트워 크를 형성한 인공 뉴런(노드)들로 구성되는, 문제 해결 능력을 가지는 모델 전반을 의미할 수 있다. 인공 신경 망은 다른 레이어의 뉴런들 사이의 연결 패턴, 모델 파라미터를 갱신하는 학습 과정, 출력값을 생성하는 활성화 함수(Activation Function)에 의해 정의될 수 있다. 인공 신경망은 입력층(Input Layer), 출력층(Output Layer), 그리고 선택적으로 하나 이상의 은닉층(Hidden Layer)를 포함할 수 있다. 각 층은 하나 이상의 뉴런을 포함하고, 인공 신경망은 뉴런과 뉴런을 연결하는 시냅 스를 포함할 수 있다. 인공 신경망에서 각 뉴런은 시냅스를 통해 입력되는 입력 신호들, 가중치, 편향에 대한 활성 함수의 함수값을 출력할 수 있다. 모델 파라미터는 학습을 통해 결정되는 파라미터를 의미하며, 시냅스 연결의 가중치와 뉴런의 편향 등이 포함된 다. 그리고, 하이퍼파라미터는 머신 러닝 알고리즘에서 학습 전에 설정되어야 하는 파라미터를 의미하며, 학습 률(Learning Rate), 반복 횟수, 미니 배치 크기, 초기화 함수 등이 포함된다. 인공 신경망의 학습의 목적은 손실 함수를 최소화하는 모델 파라미터를 결정하는 것으로 볼 수 있다. 손실 함수 는 인공 신경망의 학습 과정에서 최적의 모델 파라미터를 결정하기 위한 지표로 이용될 수 있다.머신 러닝은 학습 방식에 따라 지도 학습(Supervised Learning), 비지도 학습(Unsupervised Learning), 강화 학습(Reinforcement Learning)으로 분류할 수 있다. 지도 학습은 학습 데이터에 대한 레이블(label)이 주어진 상태에서 인공 신경망을 학습시키는 방법을 의미하며, 레이블이란 학습 데이터가 인공 신경망에 입력되는 경우 인공 신경망이 추론해 내야 하는 정답(또는 결과 값)을 의미할 수 있다. 비지도 학습은 학습 데이터에 대한 레이블이 주어지지 않는 상태에서 인공 신경망을 학습시키 는 방법을 의미할 수 있다. 강화 학습은 어떤 환경 안에서 정의된 에이전트가 각 상태에서 누적 보상을 최대화 하는 행동 혹은 행동 순서를 선택하도록 학습시키는 학습 방법을 의미할 수 있다. 인공 신경망 중에서 복수의 은닉층을 포함하는 심층 신경망(DNN: Deep Neural Network)으로 구현되는 머신 러닝 을 딥 러닝(심층 학습, Deep Learning)이라 부르기도 하며, 딥 러닝은 머신 러닝의 일부이다. 이하에서, 머신 러닝은 딥 러닝을 포함하는 의미로 사용된다. 도 1은 본 발명의 일 실시 예에 따른 AI 장치를 나타낸다. AI 장치는 TV, 프로젝터, 휴대폰, 스마트폰, 데스크탑 컴퓨터, 노트북, 디지털방송용 단말기, PDA(personal digital assistants), PMP(portable multimedia player), 네비게이션, 태블릿 PC, 웨어러블 장치, 셋톱박스(STB), DMB 수신기, 라디오, 세탁기, 냉장고, 데스크탑 컴퓨터, 디지털 사이니지, 로봇, 차량 등 과 같은, 고정형 기기 또는 이동 가능한 기기 등으로 구현될 수 있다. 실시 예에서 AI 장치는 컨테이너와 관련 된 연산장치에 포함될 수 있다. 도 1을 참조하면, 단말기는 통신부, 입력부, 러닝 프로세서, 센싱부, 출력부, 메모리 및 프로세서 등을 포함할 수 있다. 통신부는 유무선 통신 기술을 이용하여 다른 AI 장치(100a 내지 100e)나 AI 서버 등의 외부 장치들과 데이터를 송수신할 수 있다. 예컨대, 통신부는 외부 장치들과 센서 정보, 사용자 입력, 학습 모델, 제어 신호 등을 송수신할 수 있다. 이때, 통신부가 이용하는 통신 기술에는 GSM(Global System for Mobile communication), CDMA(Code Division Multi Access), LTE(Long Term Evolution), 5G, WLAN(Wireless LAN), Wi-Fi(Wireless-Fidelity), 블 루투스(Bluetooth), RFID(Radio Frequency Identification), 적외선 통신(Infrared Data Association; IrDA), ZigBee, NFC(Near Field Communication) 등이 있다. 입력부는 다양한 종류의 데이터를 획득할 수 있다. 이때, 입력부는 영상 신호 입력을 위한 카메라, 오디오 신호를 수신하기 위한 마이크로폰, 사용자로부터 정보를 입력 받기 위한 사용자 입력부 등을 포함할 수 있다. 여기서, 카메라나 마이크로폰을 센서로 취급하여, 카메라나 마이크로폰으로부터 획득한 신호를 센싱 데이터 또는 센서 정보라고 할 수도 있다. 입력부는 모델 학습을 위한 학습 데이터 및 학습 모델을 이용하여 출력을 획득할 때 사용될 입력 데이터 등을 획득할 수 있다. 입력부는 가공되지 않은 입력 데이터를 획득할 수도 있으며, 이 경우 프로세서 또는 러닝 프로세서는 입력 데이터에 대하여 전처리로써 입력 특징점(input feature)을 추출할 수 있다. 러닝 프로세서는 학습 데이터를 이용하여 인공 신경망으로 구성된 모델을 학습시킬 수 있다. 여기서, 학습 된 인공 신경망을 학습 모델이라 칭할 수 있다. 학습 모델은 학습 데이터가 아닌 새로운 입력 데이터에 대하여 결과 값을 추론해 내는데 사용될 수 있고, 추론된 값은 어떠한 동작을 수행하기 위한 판단의 기초로 이용될 수 있다. 이때, 러닝 프로세서는 AI 서버의 러닝 프로세서과 함께 AI 프로세싱을 수행할 수 있다. 이때, 러닝 프로세서는 AI 장치에 통합되거나 구현된 메모리를 포함할 수 있다. 또는, 러닝 프로세서 는 메모리, AI 장치에 직접 결합된 외부 메모리 또는 외부 장치에서 유지되는 메모리를 사용하 여 구현될 수도 있다. 센싱부는 다양한 센서들을 이용하여 AI 장치 내부 정보, AI 장치의 주변 환경 정보 및 사용자 정보 중 적어도 하나를 획득할 수 있다. 이때, 센싱부에 포함되는 센서에는 근접 센서, 조도 센서, 가속도 센서, 자기 센서, 자이로 센서, 관성 센 서, RGB 센서, IR 센서, 지문 인식 센서, 초음파 센서, 광 센서, 마이크로폰, 라이다, 레이더 등이 있다.출력부는 시각, 청각 또는 촉각 등과 관련된 출력을 발생시킬 수 있다. 이때, 출력부에는 시각 정보를 출력하는 디스플레이부, 청각 정보를 출력하는 스피커, 촉각 정보를 출력하 는 햅틱 모듈 등이 포함될 수 있다. 메모리는 AI 장치의 다양한 기능을 지원하는 데이터를 저장할 수 있다. 예컨대, 메모리는 입력 부에서 획득한 입력 데이터, 학습 데이터, 학습 모델, 학습 히스토리 등을 저장할 수 있다. 프로세서는 데이터 분석 알고리즘 또는 머신 러닝 알고리즘을 사용하여 결정되거나 생성된 정보에 기초하 여, AI 장치의 적어도 하나의 실행 가능한 동작을 결정할 수 있다. 그리고, 프로세서는 AI 장치(10 0)의 구성 요소들을 제어하여 결정된 동작을 수행할 수 있다. 이를 위해, 프로세서는 러닝 프로세서 또는 메모리의 데이터를 요청, 검색, 수신 또는 활용할 수 있고, 상기 적어도 하나의 실행 가능한 동작 중 예측되는 동작이나, 바람직한 것으로 판단되는 동작을 실행 하도록 AI 장치의 구성 요소들을 제어할 수 있다. 이때, 프로세서는 결정된 동작을 수행하기 위하여 외부 장치의 연계가 필요한 경우, 해당 외부 장치를 제 어하기 위한 제어 신호를 생성하고, 생성한 제어 신호를 해당 외부 장치에 전송할 수 있다. 프로세서는 사용자 입력에 대하여 의도 정보를 획득하고, 획득한 의도 정보에 기초하여 사용자의 요구 사 항을 결정할 수 있다. 이때, 프로세서는 음성 입력을 문자열로 변환하기 위한 STT(Speech To Text) 엔진 또는 자연어의 의도 정 보를 획득하기 위한 자연어 처리(NLP: Natural Language Processing) 엔진 중에서 적어도 하나 이상을 이용하여, 사용자 입력에 상응하는 의도 정보를 획득할 수 있다. 이때, STT 엔진 또는 NLP 엔진 중에서 적어도 하나 이상은 적어도 일부가 머신 러닝 알고리즘에 따라 학습된 인 공 신경망으로 구성될 수 있다. 그리고, STT 엔진 또는 NLP 엔진 중에서 적어도 하나 이상은 러닝 프로세서 에 의해 학습된 것이나, AI 서버의 러닝 프로세서에 의해 학습된 것이거나, 또는 이들의 분산 처리에 의해 학습된 것일 수 있다. 프로세서는 AI 장치의 동작 내용이나 동작에 대한 사용자의 피드백 등을 포함하는 이력 정보를 수집 하여 메모리 또는 러닝 프로세서에 저장하거나, AI 서버 등의 외부 장치에 전송할 수 있다. 수 집된 이력 정보는 학습 모델을 갱신하는데 이용될 수 있다. 프로세서는 메모리에 저장된 응용 프로그램을 구동하기 위하여, AI 장치의 구성 요소들 중 적어 도 일부를 제어할 수 있다. 나아가, 프로세서는 상기 응용 프로그램의 구동을 위하여, AI 장치에 포 함된 구성 요소들 중 둘 이상을 서로 조합하여 동작시킬 수 있다. 도 2는 본 발명의 일 실시 예에 따른 AI 서버를 나타낸다. 도 2를 참조하면, AI 서버는 머신 러닝 알고리즘을 이용하여 인공 신경망을 학습시키거나 학습된 인공 신 경망을 이용하는 장치를 의미할 수 있다. 여기서, AI 서버는 복수의 서버들로 구성되어 분산 처리를 수행 할 수도 있고, 5G 네트워크로 정의될 수 있다. 이때, AI 서버는 AI 장치의 일부의 구성으로 포함되어, AI 프로세싱 중 적어도 일부를 함께 수행할 수도 있다. AI 서버는 통신부, 메모리, 러닝 프로세서 및 프로세서 등을 포함할 수 있다. 통신부는 AI 장치 등의 외부 장치와 데이터를 송수신할 수 있다. 메모리는 모델 저장부를 포함할 수 있다. 모델 저장부는 러닝 프로세서을 통하여 학습 중 인 또는 학습된 모델(또는 인공 신경망, 231a)을 저장할 수 있다. 러닝 프로세서는 학습 데이터를 이용하여 인공 신경망(231a)을 학습시킬 수 있다. 학습 모델은 인공 신경 망의 AI 서버에 탑재된 상태에서 이용되거나, AI 장치 등의 외부 장치에 탑재되어 이용될 수도 있다. 학습 모델은 하드웨어, 소프트웨어 또는 하드웨어와 소프트웨어의 조합으로 구현될 수 있다. 학습 모델의 일부 또는 전부가 소프트웨어로 구현되는 경우 학습 모델을 구성하는 하나 이상의 명령어(instruction)는 메모리 에 저장될 수 있다. 프로세서는 학습 모델을 이용하여 새로운 입력 데이터에 대하여 결과 값을 추론하고, 추론한 결과 값에 기 초한 응답이나 제어 명령을 생성할 수 있다. 도 3은 본 발명의 일 실시 예에 따른 AI 시스템을 나타낸다. 도 3을 참조하면, AI 시스템은 AI 서버, 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스마트폰 (100d) 또는 가전(100e) 중에서 적어도 하나 이상이 클라우드 네트워크와 연결된다. 여기서, AI 기술이 적 용된 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스마트폰(100d) 또는 가전(100e) 등을 AI 장치(100a 내지 100e)라 칭할 수 있다. 클라우드 네트워크는 클라우드 컴퓨팅 인프라의 일부를 구성하거나 클라우드 컴퓨팅 인프라 안에 존재하는 네트워크를 의미할 수 있다. 여기서, 클라우드 네트워크는 3G 네트워크, 4G 또는 LTE(Long Term Evolution) 네트워크 또는 5G 네트워크 등을 이용하여 구성될 수 있다. 즉, AI 시스템을 구성하는 각 장치들(100a 내지 100e, 200)은 클라우드 네트워크를 통해 서로 연결될 수 있다. 특히, 각 장치들(100a 내지 100e, 200)은 기지국을 통해서 서로 통신할 수도 있지만, 기지국을 통하지 않 고 직접 서로 통신할 수도 있다. AI 서버는 AI 프로세싱을 수행하는 서버와 빅 데이터에 대한 연산을 수행하는 서버를 포함할 수 있다. AI 서버는 AI 시스템을 구성하는 AI 장치들인 로봇(100a), 자율 주행 차량(100b), XR 장치(100c), 스 마트폰(100d) 또는 가전(100e) 중에서 적어도 하나 이상과 클라우드 네트워크을 통하여 연결되고, 연결된 AI 장치들(100a 내지 100e)의 AI 프로세싱을 적어도 일부를 도울 수 있다. 이때, AI 서버는 AI 장치(100a 내지 100e)를 대신하여 머신 러닝 알고리즘에 따라 인공 신경망을 학습시킬 수 있고, 학습 모델을 직접 저장하거나 AI 장치(100a 내지 100e)에 전송할 수 있다. 이때, AI 서버는 AI 장치(100a 내지 100e)로부터 입력 데이터를 수신하고, 학습 모델을 이용하여 수신한 입력 데이터에 대하여 결과 값을 추론하고, 추론한 결과 값에 기초한 응답이나 제어 명령을 생성하여 AI 장치 (100a 내지 100e)로 전송할 수 있다. 또는, AI 장치(100a 내지 100e)는 직접 학습 모델을 이용하여 입력 데이터에 대하여 결과 값을 추론하고, 추론 한 결과 값에 기초한 응답이나 제어 명령을 생성할 수도 있다. 이하에서는, 상술한 기술이 적용되는 AI 장치(100a 내지 100e)의 다양한 실시 예들을 설명한다. 여기서, 도 3에 도시된 AI 장치(100a 내지 100e)는 도 1에 도시된 AI 장치의 구체적인 실시 예로 볼 수 있다. 실시 예에서 방법을 수행하는 장치는 AI 장치를 포함하는 연산 장치일 수 있으며, AI 장치와 통신을 수행할 수 있는 연산장 치로도 본 명세서의 실시 예의 방법이 구현될 수 있음은 자명하다. 실시 예에서 단말은 연산장치를 포함할 수 있으며, 사용자의 개인 단말과 공용 단말이 개시된다. 실시 예의 단 말에서 애플리케이션이 구동될 수 있으며, 단말은 애플리케이션을 모듈화하여 다른 단말에 전송할 수 있다. 실 시 예에서 모듈화된 단말은 개인 단말 사이에서 송수신될 수 있으며, 개인 단말 및 공용 단말 사이 또는 공용 단말 사이에서도 송수신 될 수 있다. 또한 실시 예에서 애플리케이션이 모듈화되어 전송될 때 컨테이너에 포함되어 전송 될 수 있다. 실시 예에서 컨 테이너는 모듈화 된 애플리케이션과 그에 대응하는 데이터를 포함하는 논리적인 데이터 구조일 수 있다. 일 예 로 컨테이너는 애플리케이션과 그에 대응하는 데이터를 포함하는 파일을 포함할 수 있으나 이에 제한되지 않으 며, 하나 이상의 데이터 형태로 구성될 수 있다. 또한 시스템에서 컨테이너는 가상 파일 시스템, 가상 메모리 등을 포함할 수 있다. 컨테이너의 파일 시스템 상 에 애플리케이션이 포함될 수 있으며, 컨테이너의 상태 정보를 포함하는 블록체인과 관련된 정보 역시 저장될 수 있다. 또한 실시 예에서 단말에서 사용자의 애플리케이션 사용에 따라 애플리케이션과 관련된 데이터의 추가 및 변경 중 적어도 하나가 일어날 수 있다. 실시 예에서 데이터의 변경으로 언급하는 경우에도 이는 데이터의 추가 및 변경 중 적어도 하나를 포함할 수 있다. 또한 실시 예에서 컨테이너는 단말의 제어부에 의해서 호스트 OS(operation system) 상에서 구동될 수 있다. 도 4는 본 명세서의 일 실시 예에 따른 애플리케이션 컨테이너가 이동되어 설치되고, 이에 대한 상태 정보가 공 유되는 시스템을 나타낸다.도 4를 참조하면, 사용자의 사용자 단말와 자동차와 같은 공통 단말 사이에 실시 예의 사용자 단말에 컨테이너 및 컨테이너 상태 블록체인이 저장될 수 있다. 컨테이너 및 컨테이너 상태 블록체인은 단말의 저장부에 저장될 수 있다. 실시 예의 컨테이너는 하 나 이상의 애플리케이션을 포함할 수 있다. 사용자가 차량에 탑승하게 되고, 상기 하나 이상의 애플리케이션을 차량 SoC(system on chip) 상에서 구동하기 위해 컨테이너를 단말에서 차량으로 전송할 수 있으며, 이는 차량의 연산장치 저 장부의 저장공간상에 저장될 수 있다. 또한 연산장치 저장부 하나 차량과 관련된 컨테이너 상태 블록체인 를 저장할 수 있다. 또한 실시 예에서 컨테이너가 이동되는 경우와 같이 컨테이너와 관련된 상태의 변경이 있을 경우 이에 대 응하는 컨테이너 상태 블록 체인이 생성될 수 있으며, 이는 하나 이상의 다른 노드(432, 434, 436)에 전송 될 수 있다. 이와 같이 다른 노드(432, 434, 436)에 전송된 컨테이너 상태 블록 체인을 기반으로 연산장치 는 컨테이너의 이동, 패키징 및 갱신의 과정에서 변복조 여부를 확인할 수 있다. 보다 구체적으로 블록 체인 형 태로 컨테이너의 상태를 여러 노드에 저장하고, 이를 기반으로 해당 상태의 변복조 여부를 확인할 수 있다. 또한 실시 예에서 단말, 차량 및 다른 노드(432, 434, 436)에 모두 컨테이너 상태 블록을 저장하고, 이를 기반으로 두 노드 사이의 컨테이너 이동시 이에 대한 변복조 여부를 확인할 수 있다. 실시 예에서 단말은 컨테이너를 차량에 전송하고, 전송된 컨테이너와 관련된 정보를 백업할 수 있다. 이후 실시 예에서 단말이 자신이 저장하는 컨테이너 상태 블록 및 다른 노드(432, 434, 436)에 저장된 컨 테이너 상태 블록을 기반으로 변복조가 일어났다고 판단될 경우, 백업한 컨테이너 정보를 원상복구하여 사용할 수 있다. 이와 같이 연산장치는 호스트 OS상에서 애플리케이션을 컨테어너 도 5는 본 명세서의 시스템 구조를 나타내는 나타낸다. 도 5를 참조하면, 실시 예에 따른 시스템 상에 컨테이너가 구성될 수 있다. 보다 구체적으로 시스템은 하드웨어상에 호스트 OS 커널이 구성될 수 있다. 호스트 OS 커널상에 호스트 OS가 구성될 수 있다. 실시 예에서 호스트 OS는 파일 시스템, 라이브러리, 메모리 및 가상 CPU 중 적어도 하나를 포함할 수 있다. 이와 같은 호스트 OS에서 애플리케이션이 구동될 수 있다. 실시 예에서 호스트 OS 상에 하나 이상의 컨테이너(540, 550)이 구성될 수 있다. 컨테이너(540, 550)는 각 각 가상적인 파일 시스템, 메모리 및 네트워크 중 적어도 하나를 포함할 수 있으며, 각 컨테이너에 애플리케이 션이 포함될 수 있다. 이와 같이 각 애플리케이션이 컨테이너에 포함되는 형식으로 설치됨으로써 애플리케이션 을 용이하게 사용할 수 있으며, 다른 연산장치로 편리하게 이동할 수 있다. 또한 각 컨테이너는 해당 컨테이너의 상태 블록 채인 정보 역시 같이 저장될 수 있다. 이와 같이 애플리케이션 이 컨테이너 구조 상에 저장됨에 따라 패키징을 통해 다른 연산 장치로 이동될 수 있으며, 이동된 컨테이너는 상기 다른 연산 장치의 호스트 OS 상에서 구동될 수 있다. 또한 컨테이너의 상태 변경에 따라 각 컨테이너에 포함된 컨테이너 상태 블록이 생성되고 이것이다른 노드들과 공유되고, 차후 컨테이너 상태 블록을 기반으로 변복조 여부를 검증할 수 있다. 도 6은 본 명세서의 실시 예에 따라 생성되는 상태 블록 체인을 나타낸다. 도 6을 참조하면, 본 명세서에 따른 컨테이너 블록체인의 구성이 개시된다. 실시 예에서 컨테이너 블록은 블록 체인의 형식으로 컨테이너의 상태 변경 이력에 대한 정보를 포함할 수 있다. 일 예로 컨테어너가 다른 디바이스로 이동되는 경우 및 컨테이너가 설치된 디바이스의 동작에 의해 컨테이너에 포함된 애플리케이션에 대한 정보가 변경될 경우에 이에 대한 상태 변경 정보를 기록 할 수 있다. 컨테이너 상태 블록은 해당 컨테이너에 대응하는 이벤트 발생에 따라 생성될 수 있다. 실시 예에서 컨테이너 블 록 1 내지 3(610, 620, 630)이 순차적으로 생성될 수 있다. 각 컨테이너 블록은 블록 식별 정보, 컨테이너 식별 정보, 이전 블록 식별 정보, 컨테이너와 관련된 장치 정보, 컨테이너와 관련된 상태 정보 및 컨테이너에 대응하 는 상태 정보 중 적어도 하나를 포함할 수 있다. 블록 식별 정보는 해당 블록을 식별하기 위한 정보로 블록 식별 정보는 다음 블록이 생성될 때 이전 블록 식별 정보로 저장될 수 있다. 일 예로 실시 예에서 컨테이너 상태 블록 1 이후에 컨테이너 상태 블록 2가 생성되는 경우 컨테이너 상태 블록 2의 이전 블록 식별 정보는 컨테이너 상태 블록 1의 블록 식별 정 보일 수 있다. 이와 같이 블록 체인의 형태로 컨테이너 상태 블록을 형성함으로써 변복조를 감지하고, 무결성을 유지할 수 있다. 컨테이너 식별 정보는 대응하는 컨테이너의 정보를 포함할 수 있으며, 컨테이너에 포함되는 애플리케이션, 파일 시스템, 네트워크 및 메모리 중 적어도 하나를 기반으로 생성될 수 있다. 다른 예로 컨테이너 식별 정보는 해당 컨테이너를 식별할 수 있는 임의의 문자열일 수 있다. 장치 식별 정보는 해당 컨테이너와 관련된 장치를 식별하기 위한 정보일 수 있다. 상기 관련된 정치는 해당 컨 테이너가 생성되거나, 해당 컨테이너에 대응되는 애플리케이션이 실행되는 장치를 포함할 수 있다. 시용자 식별 정보는 상기 컨테이너에 대응하는 애플리케이션을 사용하는 사용자를 식별하기 위한 정보를 포함할 수 있다. 실시 예에서 블록 식별 정보는 사용자 식별 정보의 적어도 일부를 포함하여 생성될 수 있으며, 블록 식별 정보를 기반으로 포함된 사용자의 정보를 확인할 수도 있다. 일 예로 블록 식별 정보는 사용자를 식별하기 위한 문자열을 포함하도록 구성될 수 있다. 상태 정보는 해당 상태 블록이 생성된 이벤트에 대응되는 정보를 포함할 수 있다. 일 예로 컨테이너를 이동하기 위핸 패키징 절차, 이동되어 설치된 절차, 구동되는 절차 등 해당 컨테이너와 관련된 이벤트의 구체적인 정보를 포함할 수 있따. 상태 정보를 기반으로 컨테이너 상태 블록이 생성된 이벤트의 종류를 확인할 수 있다. 이와 같이 생성된 컨테이너 상태 블록은 식별 번호 640과 같이 블록 체인의 형태로 저장될 수 있으며, 이와 같 은 블록 체인이 복수의 노드에 저장됨으로써 변복조 여부를 검증할 수 있다. 도 7은 본 명세서의 실시 예에 따라 장치간 컨테이너가 이동되고 이에 따라 생성되는 상태 블록 체인을 나타낸 다. 도 7을 참조하면 장치 식별 정보가 1234인 개인 장치에서 장치 식별 정보가 5678인 공용 장치로 이동 되어서, 공용장치에서 애플리케이션이 구동되고, 이후 다시 공용장치에서 개인 장치로 이동되는 과정에서 생성되는 컨테이너 상태 블록의 컨테이너 식별 정보와 장치 식별 정보가 도시된다. 제1스텝에서 컨테이너는 개인장치에 위치하고, 공용장치으로 이동하기 위해서 패키징 될 수 있다. 패 키징에 대응하는 컨테이너 상태 블록에서 컨테이너 식별 정보를 해당 컨테이너에 포함된 정보 중 하나를 기반으 로 생성될 수 있으며, 실시 예에서 ABCD이다. 이때 장치 식별 정보는 대응되는 이벤트가 일어난 개인장치 의 장치 식별 정보인 1234이다. 제2스텝에서 컨테이너가 개인장치에서 공용장치으로 이동하고, 공용장치에 설치될 수 있다. 이 에 대응한 이벤트에 따라 생성된 컨테이너 상태 블록에서 컨테이너 식별 정보는 컨테이너의 변경이 없는바 ABCD 로 유지되고, 장치 식별 정보는 대응되는 이벤트가 공용장치에서 일어난바, 5678일 수 있다. 제3스텝에서 컨테이너가 공용장치에서 설치되고, 애플리케이션 사용에 따라서 변경된 데이터 부분이 생성 될 수 있다. 이때 변경된 부분은 diff로 표시되고, 이는 애플리케이션의 시스템 데이터 및 사용자 데이터 중 적 어도 하나를 기반으로 생성될 수 있다. 이와 같이 추가적인 데이터가 생성된 이벤트에 대응한 컨테이너 상태 블 록에서 컨테이너 식별 정보는 역시 컨테이너의 변경이 없는바 ABCD로 유지되고, 장치 식별 정보는 추가 데이터 가 생성된 이벤트가 공용장치에서 일어난바, 5678일 수 있다. 제4스텝에서 공용장치에서 개인장치으로 이동을 위해 새롭게 컨테이너를 생성할 수 있다. 새로운 컨 테이너의 식별 정보는 기존의 컨테이너와 변경된 데이터 정보 중 적어도 하나를 기반으로 생성될 수 있다. 이와 같이 새롭게 컨테이너를 만드는 이벤트에 대응한 컨테이너 상태 블록에서 컨테이너 식별 정보는 역시 새롭게 생 성된 컨테이너의 식별정보인 EFGH로 생성되고, 장치 식별 정보는 새로운 컨테이너가 생성된 이벤트가 공용장치 에서 일어난바, 5678일 수 있다. 제5스텝에서 새롭게 생성된 컨테이너가 개인장치로 이동되어 설치될 수 있다. 이와 같이 컨테이너가 이동 한 경우 생성된 컨테이너 상태 블록에서 컨테이너 식별 정보는 새롭게 생성된 컨테이너의 식별정보인 EFGH로 결 정되고, 장치 식별 정보는 새로운 컨테이너가 개인장치에 설치된바, 1234일 수 있다. 이와 같이 실시 예에서 컨테이너의 이동, 설치 등의 과정에 대응하는 컨테이너 상태 블록에서 컨테이너 식별 정 보와 장치 식별 정보를 설정함으로써 컨테이너 상태 블록을 통해 대응되는 이벤트를 확인하고, 차후 이 정보를 확인함으로써 컨테이너의 변복조를 확인할 수 있다. 한편 실시 예에서 설명의 편의를 위해 컨테이너 상태 블록에서 컨테이너 식별 정보와 장치 식별 정보에 대해서 설명하였으나, 이외의 정보 역시 컨테이너 상태 블록에 포함되어 있음은 자명하다. 도 8은 본 명세서의 실시 예에 따라 장치간 컨테이너 이동 및 이에 대응한 외부 노드와의 정보 교환을 나타낸다. 도 8을 참조하면, 개인장치와 공용장치사이 컨테이너가 이동되고, 각 장치 중 하나에 컨테이너가 설 치되어 컨테이너에 대응하는 애플리케이션이 구동될 수 있다. 이 때 컨테이너의 상태 변경에 따른 컨테이너 상 태 블록이 생성될 수 있다. 실시 예에서 컨테이너 상태 블록은 대응되는 이벤트가 일어난 장치에서 생성될 수 있다. 일 예로 개인장치(81 0)에서 공용장치으로 컨테이너가 이동되는 경우, 개인장치에서 컨테이너 상태 블록이 생성될 수 있다. 생성된 컨테이너 상태 블록은 해당 장치에 저장될 수 있다. 또한 컨테이너와 관련된 다른 장치 및 외부 노드들(830, 840, 850) 중 적어도 하나에 컨테이너 상태 블록이 전송될 수 있다. 실시 예에서 컨테이너 상태 블록이 전송될 수 있는 외부 노드의 개수가 특정 개수 이하일 경우, 각 장치는 추가 노드를 검색하는 동작을 수행할 수 있다. 일 예로 차량과 관련된 장치에서 컨테이너가 설치된 경우, 브로드캐스 트를 통해 컨테이너 상태 블록을 공유할 차량을 찾을 수 있다. 실시 예에서 외부 노드를 찾기 위한 브로드캐스 트 정보에는 컨테이너 상태 블록에 포함되는 정보 중 적어도 하나가 포함될 수 있다. 또한 브로드캐스트 정보를 수신한 외부 노드는 수신한 정보를 기반으로 컨테이너 상태 정보를 공유하는 노드로 동작할지 여부를 결정할 수 있다. 이와 같이 여러 노드에서 컨테이너 상태 블록을 블록 체인의 형태로 저장하고, 차후 복수의 외부 노드의 블록 체인에 포함된 정보를 비교함으로써 변복조 여부를 용이하게 검증할 수 있다. 도 9는 본 명세서의 실시 예에 따른 컨테이너의 변경에 따른 변복조를 검증하기 위한 방법을 설명하기 위한 도 면이다. 도 9를 참조하면 컨테이너가 특정 디바이스에 설치되고, 사용자가 해당 컨테이너에 포함되는 애플리케이션을 사 용하여 추가 데이터가 생성될 때 생성된 데이터에 대한 hash 값을 생성하고, 새로운 컨테이너를 식별하기 위한 방법이 도시된다. 실시 예에서 컨테이너가 특정 장치에 설치되고, 해당 컨테이너에 포함된 애플리케이션의 구동에 따라 추가적인 데이터가 생성될 수 있다. 생성된 데이터는 기존의 데이터 값에서 변경된 값을 포함할 수 있으며, 실 시 예에서 총 3개의 추가된 데이터(932, 934, 936)이 개시된다. 이와 같이 변경된 데이터 값들은 분할되어 저장 될 수 있고, 이와 같이 변경된 데이터를 별도의 변경 데이터 합으로 저장할 수 있다. 변경 데이터 합은 특 정 이벤트에 따라 생성된 데이터를 분할하여 저장할 수 있다. 실시 예에서 hash 값은 특정 hash 함수에 입력 데이터를 넣어서 도출되는 결과 값으로, hash 함수는 통상적으로 사용되는 hash 함수 혹은 그것을 일부 변형한 hash 함수일 수 있다. 이와 같은 hash 함수를 사용함으로써 입력 데이터의 사이즈가 큰 경우에도 그에 대응하는 문자열인 hash 값을 용이하게 도출할 수 있다. 실시 예에서 기존의 컨테이너의 식별정보는 컨테이너에 포함된 데이터 값들을 기반으로 도출된 값을 포함 할 수 있다. 일 예로 컨테이너의 데이터 전체를 hash 함수를 돌려서 도출된 값이 컨테이너의 식별 정 보에 포함될 수 있다. 또한 컨테이너의 식별 정보는 일부의 컨테이너 내 데이터의 제1부분 집합의 hash 값 및 제2부분 집합의 hash 값을 기반으로 도출된 hash 값일 수 있다. 일 예로 사용자 데이터를 제외한 부분의 hash 값과 사용자에 의해서 추가로 생성된 데이터 값의 hash 값을 직렬적으로 연결하고, 연결된 값에 대응되는 hash 값을 컨테이너의 식별 정보에 포함시킬 수 있다. 실시 예에서 hash 함수에 대한 결과 값은 컨테이너 에 포함된 데이터에 대응되는 값일 수 있으며, 설명의 용이성을 위해 hash 함수를 예시로 들었으나 이에 제한되지는 않는다. 실시 예에서 추가된 데이터(932, 934, 936)에 대한 각각의 hash 값이 도출된다. 이 때 기존의 컨테이너의 hash 값과 추가된 데이터(932, 934, 936)에 대한 각각의 hash 값을 직렬적으로 연결한 값의 hash 값인 97434e쪋이 도 출될 수 있다. 이는 새로운 컨테어너의 hash 값일 수 있으며, 이와 같이 컨테이너 식별 정보를 생성하여 컨테이너와 기존의 컨테이너의 관계를 살필 수 있다. 이와 같이 컨테이너에 포함된 각 부분 정보들의 hash 값을기반으로 새로운 컨테이너의 식별 정보를 생성함으로써 사용자가 애플리케이션을 사용함에 따라 데이터가 추가 되더라도 이를 용이하게 확인할 수 있다. 일 예로 새로운 컨테이너를 특정 장치가 수신하면, 새로운 컨테이너의 식별 정보, 기존의 컨테이너의 식별 정보 및 추가된 데이터에 대한 식별 정보를 기반으로 hash 값을 도출하여 이 정보와 새로운 컨테이너의 식별 정보와 비교함으로써 새로운 컨테이너 및 사용자 조작에 의해 변경된 데이터를 확인할 수 있다. 도 10은 본 명세서의 실시 예에 따른 변경 블록의 생성 방법을 설명하기 위한 도면이다. 도 10을 참조하면 각 스텝에서 생성되는 변경 블록이 도시된다. 변경 블록은 각 스텝에서 생성된 데이터를 기반 으로 생성된 hash 값을 식별 정보로 사용하여 블록 체인의 형태로 저장될 수 있다. 실시 예에 따르면 변경 블록은 변경된 데이터에 대한 hash 값 정보, 해당 데이터가 생성된 컨테이너의 식 별 정보, 이전 블록의 hash 값 정보, 생성된 변경 블록의 인덱스 정보, 변경 데이터가 생성된 것과 관련된 상태 정보 및 변경된 데이터가 생성된 장치 정보 중 적어도 하나를 포함할 수 있다. 제1스텝에서 해당 장치에 식별 정보 B7288F인 컨테이너가 설치되어 실행되고, 이에 따라 변경 블록이 생성될 수 있다. 변경된 데이터를 기반으로 생성된 hash 값은 54BD3E이고, 이전 hash 값이 없는바 이에 대응되는 정보는 0 으로 설정될 수 있다. 최초 컨테이너 생성과 관련된 변경 블록의 생성으로 상태 정보는 설정될 수 있다. 제2스텝에서 사용자의 데이터 사용에 따라 변경된 데이터가 발생할 수 있다. 상기 변경된 데이터를 기반으로 생 성된 hash 값이 70CD55이며, 이전 블록의 hash 정보는 54BD3E이다. 인덱스 정보는 이전 블록에서 하나 증가한 값일 수 있으며, 상태 정보는 컨테이너에 대응하는 애플리케이션의 동작에 의해 생성된 것으로 설정될 수 있다. 제3스텝에서 제2스텝과 같이 변경된 데이터를 기반으로 생성된 hash 값이 3C9C12이며 이전 블록의 hash 정보는 70CD55이다. 인덱스 정보는 이전 블록에서 하나 증가한 값일 수 있으며, 상태 정보는 컨테이너에 대응하는 애플 리케이션의 동작에 의해 생성된 것으로 설정될 수 있다. 제4스텝에서 제3스텝과 같이 변경된 데이터를 기반으로 생성된 hash 값이 FC92EE이며 이전 블록의 hash 정보는 B7288F이다. 인덱스 정보는 이전 블록에서 하나 증가한 값일 수 있으며, 상태 정보는 컨테이너에 대응하는 애플 리케이션의 동작에 의해 생성된 것으로 설정될 수 있다. 제5스텝에서 다시 컨테이너를 다른 장치로 옮기기 위해 패키징을 수행할 수 있다. 이에 따라 상태 정보는 패키 징과 관련되게 설정될 수 있다. 또한 제패키징과 관련해서 생성된 데이터를 기반으로 생성된 Hash 값이 97434E 이며 이전 블록의 hash 정보는 FC92EE이다. 인덱스 정보는 이전 블록에서 하나 증가한 값일 수 있다. 이후 스텝 6에서 패키징이 완료되었고, 이에 따라 상태 정보는 패키징 완료에 대응하는 값으로 설정될 수 있다. 패키징 완료에 따라 생성된 추가적인 데이터가 없는바, hash 값은 0이고, 나머지 정보는 이전 변경 블록의 값을 기반으로 생성될 수 있다. 이와 같이 컨테이너가 특정 연산 장치에 설치되고, 컨테이너에 대응하는 애플리케이션의 구동 및 상태 변경 중 적어도 하나를 기반으로 생성된 데이터에 대응한 변경블록을 생성하고, 이와 같은 변경 블록을 저장 및 공유 할 수 있다. 이와 같이 변경 블록을 공유함에 따라 컨테이너가 다른 장치에서 설치되어 실행되는 경우에도 데이터 변경 히스토리에 대한 정보를 확인하고, 변복조 여부를 확인할 수 있다. 일 예로 상태 정보가 Packaging인 변경 블록을 특정 노드가 수신할 경우, 이에 대응하여 이전에 수신한 변경 블 록 정보를 기반으로 해당 블록에 대응하는 검증 결과를 발신 노드에 회신할 수 있다. 일 예로 회신되는 정보는 수신한 블록에 대한 검증 결과 정보를 포함할 수 있으며, 검증 결과는 이전에 수신한 블록을 기반으로 생성된 새로운 컨테이너 식별 정보를 포함할 수 있다. 보다 구체적으로 특정 노드는 기존 컨테이너 식별 정보, 변경된 데이터에 대한 hash 값들을 순차적으로 수신하고 있으며, 이를 기반으로 새로운 컨테이너 식별 정보를 도출할 수 있다. 이와 같이 도출한 새로운 컨테이너 정보를 회신하여, 새롭게 생성된 컨테이너의 변복조 여부를 확인할 수 있다. 이와 같이 회신을 통해 검증 과정이 완료될 경우 이에 대응하는 변경 블록 체인을 삭제할 수 있다. 그 러나 삭제는 선택적으로 이루어 질 수 있으며, 이에 대한 블록 체인 정보를 다른 노드에 전달할 수도 있다. 또한 실시 예에서 특정 노드가 발신 노드의 변경 블록을 수신하지 못한 경우 인덱스 값을 기반으로 발신 노드에 재전송을 요청하거나 또 다른 노드에게 해당 블록의 전송을 요청할 수 있다. 또한 실시 예에서 특정 노드가 다른 노드의 변경 블록을 수신한 뒤 일정 시간동안 종료와 관련된 상태 정보를 포함하는 변경 블록을 수신하지 못한 경우 해당 블록 체인을 만료로 판단하여, 이를 삭제할 수 있다. 또한 실시 예에서 변경 블록에 대한 정보 중 일부만 다른 노드로 전송할 수 있다. 일 예로 hash 값만을 순차적 으로 다른 노드와 공유할 수 있으며, 이와 같은 경우 다른 노드에서 수신되는 hash 값의 누락이 없게 하기 위해 서, hash 값을 다른 노드가 성공적으로 수신하였는지 확인 절차를 거치고 다른 노드가 hash 값을 수신하지 못한 경우 재전송 절차를 수행할 수 있다. 도 11a 내지 11e는 본 명세서의 실시 예에 따른 컨테이너 이동에 따른 상태 블록 및 변경 블록의 생성을 설명하 기 위한 도면이다. 도 11a 내지 11e를 참조하면, 개인 장치에서 공용 장치로 컨테이너가 이동하고, 공용 장치에 서 사용자가 대응되는 애플리케이션을 사용함에 따른 상태 블록 및 변경 블록의 생성이 도시된다. 도 11a에서 장치 식별자가 A인 개인 장치에서 장치 식별자가 B인 공용장치으로 컨테이너가 이동될 수 있다. 이 때 외부 노드 1 내지 3(1132, 1134, 1136)과 블록 체인 정보를 공유할 수 있다. 실시 예에서 개인장치에서 다른 장치로 이동하기 위한 절차가 완료되면 상태 블록이 생성될 수 있 다. 해당 블록을 생성하기 위한 블록 식별 정보가 상태 블록에 포함될 수 있으며, 블록 식별 정보는 블록에 포 함되는 정보, 블록이 생성되는 시간 정보 및 컨테이너에 포함되는 정보 중 적어도 하나를 기반으로 생성될 수 있다. 또한 실시 예에서 블록 식별 정보는 생성되는 순서를 기반으로 시리얼하게 증가하도록 설정될 수도 있다. 실시 예에서 컨테이너 식별 정보는 컨테이너에 포함되는 데이터 중 적어도 일부를 기반으로 생성될 수 있다. 이전 블록 식별 정보는 해당 블록이 생성되기 이전에 생성된 블록의 식별 정보를 포함할 수 있다. 장치 식별 정보는 해당 블록의 생성 시 컨테이너와 관련된 장치에 대한 정보를 포함할 수 있다. 사용자 식별 정보는 컨테이너의 사용과 관련된 사용자의 식별 정보를 포함할 수 있다. 상태 정보는 블록이 생성된 이벤트와 대응되는 정보를 포함할 수 있으며, 실시 예에서 이동이 완료된 상태로 설 정될 수 있다. 도 11b에서 컨테이너가 개인장치에서 공용장치으로 이동될 수 있으며, 이에 따라 상태 블록 이 생성될 수 있다. 실시 예에서 상태 블록의 블록 식별 정보는 이전 블록 식별 정보를 기반으로 생성될 수 있다. 컨테이너 식별 정보는 동일한 컨테이너인바, 동일하게 유지될 수 있다. 이전 블록 식별 정보는 상태 블록의 블록 식별 정보를 포함할 수 있다. 장치 식별 정보는 컨테이너가 공용장치으로 이동한바 B로 설정될 수 있다. 사용자 식별 정보는 동일한 사용자이므로 이전 블록의 정보와 동일하게 설정될 수 있다. 상태 정보는 공용장치 에 컨테이너가 도킹된 바, 이에 대응한 정보로 설정될 수 있다. 한편 실시 예에서 생성되는 상태 블록 정보는 외부 노드 1 내지 3(1132, 1134, 1136)에 공유될 수 있다. 도 11c에서 컨테이너가 공용장치에 도킹되고, 사용자에 사용에 의해서 변경된 데이터가 생성될 수 있다. 이와 같이 변경된 데이터가 생성되는 경우 이와 관련된 정보를 포함하는 변경 블록을 생성하고, 다른 노 드에 공유할 수 있다. 실시 예에서 변경 블록은 개인 장치 및 외부 노드 1 내지 3(1132, 1134, 1136) 중 적어도 하나에 공유될 수 있으며, 공유된 정보는 각 장치에서 변경 블록체인(1112, 1133, 1135, 1137)의 형태로 저장될 수 있다. 구체적인 변경 블록 체인에 대한 정보는 식별번호 1150과 같이 저장될 수 있다. 또한 실시 예 에서 변경 블록에 관한 절차는 도 10에서 설명된 실시 예와 같이 수행될 수 있다. 이와 같이 공용 장치에서 컨테이너에 대응하는 애플리케이션의 사용에 따라 데이터 변경이 생기는 이벤트 에 대응해서 변경 블록이 생성 및 공유될 수 있다. 이와 같이 사용자 동작에 따라 발생된 변경된 데이터에 대응하는 Hash 값을 다른 노드에 브로드캐스트 함으로써 사용자의 동작에 따라 새롭게 생성된 데이터에 대한 정보를 다른 노드들이 공유할 수 있게 된다. 이와 같이 네 트워크를 이루는 노드들은 해당 컨테이너에 대한 블록 체인을 보유하게 된다. 도 11d에서 사용자가 공용장치에서 사용을 종료하고 다시 다른 장치로 이동하기 위해 패키징을 수행할 수 있다. 이 때 생태 블록이 생성될 수 있다. 블록 식별 정보는 이전 블록 식별 정보를 기반으로 생성될 수 있다. 컨테이너 식별 정보는 공용장치에서 생성된 새로운 데이터를 포함하는 컨테이너가 패키징 되어야 하는바, 기존 컨테이너와 관련된 정보 및 새롭게 생성된 데이터에 대응하는 정보 중 적어도 하나를 기반으로 컨 테이너 식별 정보를 생성할 수 있다. 일 예에서 새로운 컨테이너 식별 정보인 96423E는 이전 컨테이너 식별 정보 B7288F 및 변경 블록 체인 상에 기록된 값들 중 적어도 하나를 기반으로 생성될 수 있다. 또한 패키징에 대 응하여 생성되는 변경 블록의 경우, 패키징에 따라 패키징 되는 컨테이너의 식별 정보를 포함할 수 있다. 또한 새롭게 생성된 변경 블록의 hash 값을 기반으로 새롭게 패키징 되는 컨테이너의 식별 정보를 결정할 수 있 다. 실시 예에서 변경 블록의 hash 값인 96423E 가 새로운 컨테이너 식별 정보로 설정되는 것으로 기재되나 이에 제한되지 않고, 기존의 컨테이너 식별 정보인 B7288F 및 변경된 데이터들의 Hash 값들을 직렬적으로 병합 한 문자열의 hash 값을 새로운 컨테이너 식별 정보로 설정할 수도 있음은 자명하다. 이는 도 9에 설명된 실시 예와 대응될 수 있다. 또한 실시 예에서 새로운 컨테이너가 생성되고 이에 대응한 식별 정보가 생성될 경우 이에 대응한 상태 블록 정 보를 다른 노드에 브로드캐스트 할 수 있다. 이와 같은 브로드캐스트 정보를 수신한 다른 노드는 이에 대한 검 증 정보를 다시 회신하거나 브로드캐스트 할 수 있다. 이와 같은 노드들 사이의 장치들은 변경 블록 정보 및 기 존 컨테이너 식별 정보를 기반으로 새롭게 생성된 컨테이너 식별 정보를 검증하고, 사용자가 수행한 동작 이외 의 다른 변경점이 있는지 여부를 확인하여 이에 대한 정보를 회신하거나 브로드캐스트할 수 있다. 이와 같이 공 유된 정보를 기반으로 변복조 가능성을 검증할 수 있다. 도 11e에서 컨테이너는 다시 개인 장치에 도킹 된 상태이며 이에 대응한 상태 블록이 생성될 수 있 다. 블록 식별 정보는 이전 블록 식별 정보를 기반으로 생성될 수 있다. 컨테이너 식별 정보는 공용장치 에서 패키징된 새로운 컨테이너의 식별자를 포함할 수 있다. 장치 식별 정보는 개인 장치에 대응되는 값 으로 설정될 수 있으며, 사용자 식별 정보는 이전과 동일하게 설정될 수 있다. 상태 정보는 개인장치에 도킹된 바, 이에 대응되는 정보로 설정될 수 있다. 또한 이와 같이 장치가 이동한 경우 다른 노드에 공유된 상태 블록 정보 및 변경 블록 정보 중 적어도 하나를 기반으로 수신한 컨테이너의 변복조 여부를 검증할 수 있다. 공용장치에서 애플리케이션의 실행에 대응하 여 변경된 데이터가 발생할 경우 이에 대응한 변경 블록 정보가 다른 노드들에 공유되었고, 기존 컨테이너 정보 및 변경 블록 정보를 기반으로 새로운 컨테이너 식별 정보가 생성되는바, 수신한 컨테이너 식별 정보 및 공유된 정보를 비교하여 컨테이너의 변복조 여부를 감지할 수 있다. 실시 예에서 변복조 여부 검증은 이동하기 전 장치 및 이동된 장치 중 적어도 하나에서 수행될 수 있다. 한편 실시 예에서 컨테이너 상태 블록은 컨테이너가 장치 사이에 이동되거나 상태의 변경과 같은 이력에 대한 정보를 기록하기 위해 사용될 수 있으며, 변경 블록은 해당 컨테이너에서 데이터 변경 및 추가 중 적어도 하나 를 기록하기 위해 사용될 수 있다. 도 12는 본 명세서의 실시 예에 따른 컨테이너 이동에 대응하여 장치간에 교환되는 정보와 그에 따른 상태 블록 을 설명하기 위한 도면이다. 도 12를 참조하면 개인장치에서 공용장치로 컨테이너가 이동하고, 이와 관련된 정보를 외무노드와 공유하는 방 법이 개시된다. 단계 1205에서 개인장치에서 공용장치로 컨테이너를 이동하기 위해 개인장치가 공용장치에 컨테이너 공간 요청 메시지를 전송할 수 있다. 실시 예에서 컨테이너 공간 요청 메시지는 컨테이너에 대한 정보 및 요청되는 공간에 대한 정보 중 적어도 하나를 포함할 수 있다. 실시 예에서 컨테이너에 대한 정보는 컨테이너에 대응되는 애플리 케이션에 대한 정보를 포함할 수 있다. 또한 컨테이너와 관련된 상태 정보에 포함되는 정보 중 하나가 컨테이너 공간 요청 메시지에 포함될 수 있다. 실시 예에서 공용장치는 컨테이너 공간 요청 메시지를 기반으로 공간 할당 여부를 결정하기 위한 인증 절차를 수행할 수 있다. 단계 1210에서 공용장치는 컨테이너 공간 요청 메시지에 따라 컨테이너가 도킹될 수 있는 공간을 할당하고, 공 간 할당 응답 메시지를 개인장치로 전송할 수 있다. 단계 1215에서 개인장치는 공간 할당 응답에 대응해서 컨테이너를 이동 시키기 위한 절차를 수행할 수 있고, 이 에 대응한 정보를 포함하는 컨테이너 상태 블록 정보를 브로드캐스트 할 수 있다. 실시 예에서 상태 블록 정보 는 장치 식별 정보 및 상태 정보 중 적어도 하나를 포함할 수 있다. 또한 실시 예에 따라 상태 블록 정보는 도 6의 실시 예에서 설명한 정보 중 적어도 하나를 포함할 수 있다. 본 실시 예에서 장치 식별 정보는 개인 장치의 식별 정보인 A로 설정될 수 있으며, 상태 정보는 이동 준비가 된 것으로 설정될 수 있다. 또한 실시 예에서 브 로드캐스트 되는 정보 중 적어도 일부는 브로드캐스트하는 장치에 저장될 수 있다. 단계 1220에서 외부노드는 브로드캐스트 정보를 수신하였다는 응답 메시지를 전송할 수 있으며, 단계 1225에서 공용장치 역시 브로드캐스트 정보를 수신하였다는 응답메시지를 개인 장치에 전송할 수 있다. 한편 실시 예에서 공용장치 및 외부노드 중 적어도 하나는 일부 상태 블록 정보를 수신하지 못한 경우 이에 대한 재전송을 개인장 치에 요청할 수 있다. 단계 1230에서 개인장치는 공용장치로 컨테이너를 전송할 수 있다. 일 예로 개인장치는 특정 숫자 이상의 노드 로부터 브로드케스트에 대한 응답을 수신한 경우에 컨테이너를 전송할 수 있다. 상기 특정 숫자는 기 설정된 숫 자일 수 있으며, 변복조 여부를 검증하기 위해 필요한 노드의 숫자를 기반으로 설정될 수 있다. 또한 실시 예에 따라 특정 숫자는 개인 장치와 관련된 통신 환경을 기반으로 변경될 수 있다. 브로드캐스트 정보를 수신할 수 있는 노드의 숫자를 기반으로 상기 특정 숫자는 변경될 수 있다. 단계 1235에서 공용장치는 컨테이너를 수신하여 도킹하고, 이와 관련된 정보를 다른 노드에 브로드캐스트 할 수 있다. 일 예로 실시 예에서 브로드캐스트 되는 정보에서 장치 식별 정보는 공용장치의 식별정보인 B로 설정될 수 있고, 상태 정보는 공용장치에 도킹되었음을 나타내는 정보로 설정될 수 있다. 단계 1245 및 단계 1240에서 개인장치 및 외부노드는 브로드캐스트에 대한 정보를 수신하고, 이를 수신하였음을 나타내는 응답 메시지를 공용장치로 전송할 수 있다. 실시 예에서 브로드캐스트 된 정보들은 블록 체인 형태로 각 노드에 저장될 수 있으며, 이후 검증 등의 절차에 서 활용될 수 있다. 도 13은 본 명세서의 실시 예에 따라 이동된 컨테이너의 상태 변경이 있을 경우 그에 따른 변경 블록의 생성과 이에 대한 정보를 교환하기 위한 방법을 설명하기 위한 도면이다. 도 13을 참조하면 공용장치에 컨테이너가 도킹되고, 컨테이너에 대응되는 애플리케이션의 실행으로 인한 변경 블록이 생성되어 다른 노드들과 공유되는 방법이 도시된다. 단계 1305에서 공용장치에 도킹된 컨테이너에 대응되는 애플리케이션에서 파일열기 이벤트가 발생할 수 있다. 공용장치는 이에 대응하는 정보를 포함하는 변경 블록 정보를 단계 1310 및 1315에서 다른 노드에 브로드캐스트 할 수 있다. 실시 예에서 상태 정보는 발생한 이벤트를 나타낼 수 있는 정보로 설정될 수 있다. 실시 예에서 공 용장치는 브로드캐스트 되는 정보 중 적어도 일부를 저장할 수 있다. 실시 예에서 변경 블록은 도 10에 대응하 는 실시예에서 설명되는 변경 블록의 정보 중 적어도 일부를 포함할 수 있다. 단계 1320 및 단계 1325에서 공용장치는 개인장치 및 외부노드로부터 브로드캐스트에 대한 응답 정보를 수신할 수 있다. 단계 1330에서 공용장치에 도킹된 컨테이너에 대응되는 애플리케이션에서 파일 생성 이벤트가 발생할 수 있다. 공용장치는 이에 대응하는 정보를 포함하는 변경 블록 정보를 단계 1335및 1340에서 다른 노드에 브로드캐스트 할 수 있다. 실시 예에서 상태 정보는 발생한 이벤트를 나타낼 수 있는 정보로 설정될 수 있다. 단계 1345및 단계 1350에서 공용장치는 개인장치 및 외부노드로부터 브로드캐스트에 대한 응답 정보를 수신할 수 있다. 단계 1355에서 공용장치에 도킹된 컨테이너에 대응되는 애플리케이션에서 파일 읽기 이벤트가 발생할 수 있다. 공용장치는 이에 대응하는 정보를 포함하는 변경 블록 정보를 단계 1360및 1365에서 다른 노드에 브로드캐스트 할 수 있다. 실시 예에서 상태 정보는 발생한 이벤트를 나타낼 수 있는 정보로 설정될 수 있다. 단계 1370및 단계 1375에서 공용장치는 개인장치 및 외부노드로부터 브로드캐스트에 대한 응답 정보를 수신할 수 있다. 이와 같이 공용장치에 도킹된 컨테이너에 대응하는 애플리케이션의 실행에 따라 각 이벤트에 대응하는 변경 블 록 정보를 다른 노드와 공유함으로써 차후 컨테이너와 관련된 변복조가 있는지 여부를 검증할 수 있다. 도 14는 본 명세서의 실시 예에 따라 애플리케이션 사용에 따라 변경된 정보를 포함하는 컨테이너를 생성하기 위한 방법을 설명하기 위한 도면이다. 도 14를 참조하면, 공용장치에서 다른 장치로 이동을 위해 새롭게 컨테이너를 생성하기 위한 과정이 도시된다. 단계 1405에서 공용장치는 도킹되어 있는 컨테이너에 대응하는 애플리케이션의 동작과 관련해서 변경된 데이터 를 포함하는 새로운 컨테이너를 패키징하기 위한 시도를 할 수 있다. 실시 예에서 공용장치는 새로운 컨테이너를 위한 식별 정보를 생성할 수 있다. 실시 예에서 새로운 식별 정보는 컨테이너에 포함된 정보 중 적어도 하나 를 기반으로 생성될 수 있다. 일 예로 변경된 데이터 정보를 기반으로 새로운 식별 정보를 결정할 수 있다. 또 한 기존의 컨테이너 식별 정보 및 변경된 데이터 정보를 기반으로 컨테이너 식별 정보를 결정할 수 있다. 또한 실시 예에서 패키징 시도를 하는 경우 변경 hash 정보를 기본 컨테이너 식별 정보 및 생성되었던 변경 hash 정 보를 직렬적으로 연결한 문자열에 대한 hash 값으로 설정할 수 있다. 이는 패키징시 생성되는 변경 hash 정보를 기반으로 새로운 컨테이너의 식별 정보를 결정할 수 있기 때문이다. 패키징과 관련되어서 생성되는 변경 블록은 변경 hash 값을 포함하고, 기존 컨테이너 식별 정보, 기존 변경 hash, 인덱스 정보, 상태정보 및 장치 정보 중 적어도 하나를 포함할 수 있다. 단계 1410 및 1415에서 생성된 변경 블록 정보가 다른 노드에 브로드케스트 될 수 있다. 단계 1420 및 1425에서 개인장치 및 외부 노드는 각각 수신한 변경 블록 정보를 기반으로 변경 블록 체인의 검 증을 수행할 수 있다. 실시 예에서 각 노드는 수신한 변경 블록의 상태 정보를 기반으로 검증을 수행할 수 있으 며, 일 예로 패키징과 관련된 상태 정보를 포함하는 변경 블록이 수신되는 경우 기존에 수신한 변경 블록 정보 를 기반으로 검증 절차를 수행할 수 있다. 일 예로 기존에 수신한 변경 블록의 변경 hash 값 및 기존 컨테이너 식별 정보를 기반으로 새로운 컨테이너 식별 정보를 생성하고, 이를 기반으로 수신한 변경 hash 정보와 비교할 수 있다. 단계 1430 및 1435에서 개인장치 및 외부노드는 검증 결과에 대한 응답 정보를 공용장치에 전송할 수 있다. 단계 1440에서 공용장치는 브로드캐스트에 대한 응답정보를 기반으로 새로운 컨테이너를 생성하고 이에 대응한 변경 블록을 생성할 수 있다. 실시 예에서 변복조가 없다는 정상적인 응답정보를 수신하면 공용장치는 변경된 데이터 정보를 포함하는 새로운 컨테이너를 생성할 수 있고, 이에 대응한 변경 블록 정보를 생성할 수 있다. 일 예로 변경 블록에서 변경 hash 값은 0으로 설정하고, 이전 컨테이너 식별 정보를 컨테이너 식별 정보로 유지하 고, 이전 변경 hash 값을 설정할 수 있다. 인덱스 정보는 기존의 인덱스 정보에서 1이 증가된 값으로 설정될 수 있다. 상태 정보는 패키징이 완료되었음을 나타내는 정보로 설정될 수 있으며, 장치 식별 정보는 공용장치에 대 응되는 정보로 설정될 수 있다. 단계 1445 및 1450에서 변경 블록 정보가 개인장치 및 외부노드로 브로드캐스트 될 수 있다. 단계 1455 및 1460에서 개인장치 및 외부노드는 수신된 변경 블록에 변경 hash 값 및 상태 정보 중 적어도 하나 를 기반으로 기존에 저장하던 변경 블록 체인을 삭제할 수 있다. 이와 같이 패키징 단계에서 다른 노드의 변경 블록체인을 기반으로 검증을 수행함으로써 변복조 여부를 검토할 수 있으며, 절차의 무결성을 보장할 수 있다. 도 15는 본 명세서의 실시 예에 따른 연산장치를 설명하기 위한 도면이다. 도 15를 참조하면 연산장치는 통신부, 저장부 및 제어부을 포함할 수 있다. 실시 예에서 설 명된 개인 장치, 공용장치 및 외부 노드 중 적어도 하나는 이와 같은 연산장치를 포함할 수 있다. 통신부는 다른 노드와 정보를 송수신할 수 있다. 통신부는 유선 및 무선 통신 중 적어도 하나를 수 행할 수 있으며, 다른 장치, 서버 및 네트워크와 정보를 송수신할 수 있다. 저장부는 연산장치와 관련된 정보를 저장할 수 있다. 또한 통신부를 통해 송수신되는 데이터 중 적 어도 일부를 저장할 수 있다. 실시 예에서 저장부는 비 휘발성 메모리를 포함할 수 있다. 한편 실시 예에 서 통신부를 통해 연결되는 외부의 서버를 저장부로 활용할 수 있다. 제어부는 실시 예에 따른 연산 장치의 동작을 제어할 수 있다. 제어부는 적어도 하나의 프로세서를 포함할 수 있으며, 통신부 및 저장부의 동작을 제어하고, 위의 실시 전반에서 설명되는 장치의 동 작을 제어할 수 있다. 도 16은 5G 통신 시스템에서 자율 주행 차량과 5G 네트워크의 기본동작의 일 예를 나타낸다. 단계 S1에서 자율 주행 차량(Autonomous Vehicle)은 특정 정보 전송을 5G 네트워크로 전송한다(S1). 실시 예는 자율 주행 차량을 기준으로 설명하나, 이는 일반적인 연산 장치를 통해서도 구현될 수 있으며, 본 실시 예의 자 율 주행 차량의 동작은 명세서 전반의 실시 예의 연산 장치가 수행하는 동작에 대응될 수 있다. 또한 실시 예에 서 자율 주행 차량은 5G 네트워크에 접속하기 위해 자율 주행 차량의 식별 정보를 포함하는 메시지를 5G 네트워 크에 미리 전송할 수 있다. 상기 특정 정보는, 자율 주행 관련 정보를 포함할 수 있다. 또한 실시 예에서 상기 특정 정보는 컨테이너 상태 블록 정보 및 변경 블록 정보 중 적어도 하나를 포함할 수 있으며, 위 실시 예에서 각 노드 사이에 교환되는 정 보 중 적어도 일부를 포함할 수 있다. 상기 자율 주행 관련 정보는, 차량의 주행 제어와 직접적으로 관련된 정보일 수 있다. 예를 들어, 자율 주행 관련 정보는 차량 주변의 오브젝트를 지시하는 오브젝트 데이터, 맵 데이터(map data), 차량 상태 데이터, 차량 위치 데이터 및 드라이빙 플랜 데이터(driving plan data) 중 하나 이상을 포함할 수 있다. 단계 S2에서 상기 자율 주행 관련 정보는 자율 주행에 필요한 서비스 정보 등을 더 포함할 수 있다. 예를 들어, 상기 특정 정보는, 사용자 단말기를 통해 입력된 목적지와 차량의 안정 등급에 관한 정보를 포함할 수 있 다. 그리고, 상기 5G 네트워크는 차량의 원격 제어 여부를 결정할 수 있다 (S2). 또한 실시 예에서 차량의 원격 제어 여부에 대한 정보는 연산 장치의 컨테이너와 관련된 정보를 포함할 수 있다. 일 예로 컨테이너 생성시 변 복조 검증과 관련된 정보를 전송에 대응한 결정을 5G 네트워크가 수행하고, 결정 결과를 기반으로 이에 관련된 정보를 다시 연산 장치에 전송할 수 있다. 여기서, 상기 5G 네트워크는 자율 주행 관련 원격 제어를 수행하는 서버 또는 모듈을 포함할 수 있다. 또한 실 시 예에서 5G 네트워크는 송수신되는 정보를 저장할 수 있는 저장소를 포함할 수 있다. 그리고, 단계 S3에서 상기 5G 네트워크는 원격 제어와 관련된 정보(또는 신호)를 상기 자율 주행 차량으로 전송 할 수 있다(S3). 전술한 바와 같이, 상기 원격 제어와 관련된 정보는 자율 주행 차량에 직접적으로 적용되는 신호일 수도 있고, 나아가 자율 주행에 필요한 서비스 정보를 더 포함할 수 있다. 본 발명의 일 실시 예에서는 자율 주행 차량은, 상기 5G 네트워크에 연결된 서버를 통해 주행 경로 상에서 선택된 구간별 보험과 위험 구간 정보 등의 서비스 정보를 수신함으로써, 자율 주행과 관련된 서비스를 제공할 수 있다. 또한 실시 예에서 연산장치에서 결정된 위 치 정보가 5G 네트워크를 통해 차량에 제공되고, 차량은 제공 받은 정보를 기반으로 자율 주행을 수행할 수 있 다. 또한 자율 주행 중에 주행 관련 정보를 사용자에게 제공할 수 있다. 또한 실시 예에서 5G 네트워크는 실시 예에서 획득한 컨테이너와 관련된 정보를 자율 주행 차량에 전송할 수 있 다. 보다 구체적으로 연산 장치가 컨테이너 생성시 이에 대한 검증을 5G 네트워크에 요청하고, 5G 네트워크는 요청에 대응하여 저장된 컨테이너와 관련된 정보를 기반으로 검증을 수행하고, 수행된 검증 결과를 다시 연산 장치에 제공할 수 있다. 실시 예에서 이와 같은 자율 주행 차량과 5G 네트워크는 5G 통신을 통해 정보를 송수신할 수 있으며, V2V(vehicle to vehicle), V2X(vehicle to everything), URLLC (ultra-reliable, low latency communications) 및 eMBB(enhanced mobile broadband) 통신 중 적어도 하나를 통해 통신을 수행할 수 있다. 또한 실시 예에서 V2V 및 V2X 통신 중 적어도 하나를 수행하는 자율 주행 차량은 해당 통신에 대응하는 채널 상 에서 정보를 송수신할 수 있다. 일 예로 V2V 및 V2X 통신을 위해 해당 통신 방법에 대응되는 sidelink를 위한 채널이 할당될 수 있으며, 자율주행 차량은 서버 혹은 다른 차량과 해당 채널 상에서 정보를 송수신 할 수 있다. 일 예로 sidelink를 위한 공유 채널(shared channel)이 할당될 수 있으며, 해당 채널 상에서 V2V 및 V2X 통신 중 적어도 하나를 위한 신호가 송수신될 수 있다. 이와 같은 V2V 및 V2X 통신 중 적어도 하나를 수행하기 위해 자율 주행차량은 해당 통신에 대응하는 별도의 식별자를 기지국, 네트워크 및 다른 차량 중 적어도 하나로 부터 획득할 수 있다. 자율주행 차량은 획득한 별도의 식별자 정보를 기반으로 V2V 및 V2X 통신을 수행할 수 있 다. 또한 실시 예에서 브로드케스트로 전송되는 정보는 브로드케스트를 위한 별도의 채널에서 송신될 수 있으며, 노 드와 노드 사이의 통신은 브로드케스트를 위한 채널과 다른 채널 상에서 수행될 수 있다. 또한 자율주행 차량을 제어하기 위한 정보는 URLLC를 위한 채널 상에서 전송될 수 있다. 도 17을 참고하면, UE는 전원이 켜지거나 새로이 셀에 진입한 경우 BS와 동기를 맞추는 등의 초기 셀 탐색 (initial cell search) 작업을 수행한다(S201). 이를 위해, UE는 BS로부터 1차 동기 채널(primary synchronization channel, P-SCH) 및 2차 동기 채널(secondary synchronization channel, S-SCH)을 수신하여 BS와 동기를 맞추고, 셀 ID 등의 정보를 획득할 수 있다. LTE 시스템과 NR 시스템에서 P-SCH와 S-SCH는 각각 1 차 동기 신호(primary synchronization signal, PSS)와 2차 동기 신호(secondary synchronization signal, SSS)로 불린다. 초기 셀 탐색 후, UE는 BS로부터 물리 브로드캐스트 채널(physical broadcast channel, PBCH)를 수신하여 셀 내 브로드캐스트 정보를 획득할 수 있다. 한편, UE는 초기 셀 탐색 단계에서 하향링크 참조 신 호(downlink reference Signal, DL RS)를 수신하여 하향링크 채널 상태를 확인할 수 있다. 초기 셀 탐색을 마 친 UE는 물리 하향링크 제어 채널(physical downlink control channel, PDCCH) 및 상기 PDCCH에 실린 정보에 따라 물리 하향링크 공유 채널(physical downlink shared Channel, PDSCH)을 수신함으로써 좀더 구체적인 시스 템 정보를 획득할 수 있다(S202). 한편, BS에 최초로 접속하거나 신호 전송을 위한 무선 자원이 없는 경우 UE는 BS에 대해 임의 접속 과정(random access procedure, RACH)을 수행할 수 있다(단계 S203 내지 단계 S206). 이를 위해, UE는 물리 임의 접속 채널 (physical random access Channel, PRACH)을 통해 특정 시퀀스를 프리앰블로서 전송하고(S203 및 S205), PDCCH 및 대응하는 PDSCH를 통해 프리앰블에 대한 임의 접속 응답(random access response, RAR) 메시지를 수신할 수 있다(S204 및 S206). 경쟁 기반 RACH의 경우, 추가적으로 충돌 해결 과정(contention resolution procedure)를 수행할 수 있다. 상술한 바와 같은 과정을 수행한 UE는 이후 일반적인 상향링크/하향링크 신호 전송 과정으로서 PDCCH/PDSCH 수 신(S207) 및 물리 상향링크 공유 채널(physical uplink shared Channel, PUSCH)/물리 상향링크 제어 채널 (physical uplink control channel, PUCCH) 전송(S208)을 수행할 수 있다. 특히 UE는 PDCCH를 통하여 하향링크 제어 정보(downlink control information, DCI)를 수신한다. UE는 해당 탐색 공간 설정(configuration)들에 따 라 서빙 셀 상의 하나 이상의 제어 요소 세트(control element set, CORESET)들에 설정된 모니터링 기회 (occasion)들에서 PDCCH 후보(candidate)들의 세트를 모니터링한다. UE가 모니터할 PDCCH 후보들의 세트는 탐색 공간 세트들의 면에서 정의되며, 탐색 공간 세트는 공통 탐색 공간 세트 또는 UE-특정 탐색 공간 세트일 수 있 다. CORESET은 1~3개 OFDM 심볼들의 시간 지속기간을 갖는 (물리) 자원 블록들의 세트로 구성된다. 네트워크는 UE가 복수의 CORESET들을 갖도록 설정할 수 있다. UE는 하나 이상의 탐색 공간 세트들 내 PDCCH 후보들을 모니 터링한다. 여기서 모니터링이라 함은 탐색 공간 내 PDCCH 후보(들)에 대한 디코딩 시도하는 것을 의미한다. UE 가 탐색 공간 내 PDCCH 후보들 중 하나에 대한 디코딩에 성공하면, 상기 UE는 해당 PDCCH 후보에서 PDCCH를 검 출했다고 판단하고, 상기 검출된 PDCCH 내 DCI를 기반으로 PDSCH 수신 혹은 PUSCH 전송을 수행한다. PDCCH는 PDSCH 상의 DL 전송들 및 PUSCH 상의 UL 전송들을 스케줄링하는 데 사용될 수 있다. 여기서 PDCCH 상의 DCI는 하향링크 공유 채널과 관련된, 변조(modulation) 및 코딩 포맷과 자원 할당(resource allocation) 정보를 적어 도 포함하는 하향링크 배정(assignment)(즉, downlink grant; DL grant), 또는 상향링크 공유 채널과 관련된, 변조 및 코딩 포맷과 자원 할당 정보를 포함하는 상향링크 그랜트(uplink grant; UL grant)를 포함한다. 도 17을 참고하여, 5G 통신 시스템에서의 초기 접속(Initial Access, IA) 절차에 대해 추가적으로 살펴본다. UE는 SSB에 기반하여 셀 탐색(search), 시스템 정보 획득, 초기 접속을 위한 빔 정렬, DL 측정 등을 수행할 수 있다. SSB는 SS/PBCH(Synchronization Signal/Physical Broadcast channel) 블록과 혼용된다. SSB는 PSS, SSS와 PBCH로 구성된다. SSB는 4개의 연속된 OFDM 심볼들에 구성되며, OFDM 심볼별로 PSS, PBCH, SSS/PBCH 또는 PBCH가 전송된다. PSS와 SSS는 각각 1개의 OFDM 심볼과 127개의 부반송파들로 구성되고, PBCH는 3개의 OFDM 심볼과 576개의 부반송파들로 구성된다. 셀 탐색은 UE가 셀의 시간/주파수 동기를 획득하고, 상기 셀의 셀 ID(Identifier)(예, Physical layer Cell ID, PCI)를 검출하는 과정을 의미한다. PSS는 셀 ID 그룹 내에서 셀 ID를 검출하는데 사용되고, SSS는 셀 ID 그 룹을 검출하는데 사용된다. PBCH는 SSB (시간) 인덱스 검출 및 하프-프레임 검출에 사용된다. 336개의 셀 ID 그룹이 존재하고, 셀 ID 그룹 별로 3개의 셀 ID가 존재한다. 총 1008개의 셀 ID가 존재한다. 셀 의 셀 ID가 속한 셀 ID 그룹에 관한 정보는 상기 셀의 SSS를 통해 제공/획득되며, 상기 셀 ID 내 336개 셀들 중 상기 셀 ID에 관한 정보는 PSS를 통해 제공/획득된다 SSB는 SSB 주기(periodicity)에 맞춰 주기적으로 전송된다. 초기 셀 탐색 시에 UE가 가정하는 SSB 기본 주기는 20ms로 정의된다. 셀 접속 후, SSB 주기는 네트워크(예, BS)에 의해 {5ms, 10ms, 20ms, 40ms, 80ms, 160ms} 중 하나로 설정될 수 있다. 다음으로, 시스템 정보 (system information; SI) 획득에 대해 살펴본다. SI는 마스터 정보 블록(master information block, MIB)와 복수의 시스템 정보 블록(system information block, SIB)들로 나눠진다. MIB 외의 SI는 RMSI(Remaining Minimum System Information)으로 지칭될 수 있다. MIB는 SIB1(SystemInformationBlock1)을 나르는 PDSCH를 스케줄링하는 PDCCH의 모니터링을 위한 정보/파라미터 를 포함하며 SSB의 PBCH를 통해 BS에 의해 전송된다. SIB1은 나머지 SIB들(이하, SIBx, x는 2 이상의 정수)의가용성(availability) 및 스케줄링(예, 전송 주기, SI-윈도우 크기)과 관련된 정보를 포함한다. SIBx는 SI 메시 지에 포함되며 PDSCH를 통해 전송된다. 각각의 SI 메시지는 주기적으로 발생하는 시간 윈도우(즉, SI-윈도우) 내에서 전송된다. 도 17을 참고하여, 5G 통신 시스템에서의 임의 접속(Random Access, RA) 과정에 대해 추가적으로 살펴본다. 임의 접속 과정은 다양한 용도로 사용된다. 예를 들어, 임의 접속 과정은 네트워크 초기 접속, 핸드오버, UE-트 리거드(triggered) UL 데이터 전송에 사용될 수 있다. UE는 임의 접속 과정을 통해 UL 동기와 UL 전송 자원을 획득할 수 있다. 임의 접속 과정은 경쟁 기반(contention-based) 임의 접속 과정과 경쟁 프리(contention free) 임의 접속 과정으로 구분된다. 경쟁 기반의 임의 접속 과정에 대한 구체적인 절차는 아래와 같다. UE가 UL에서 임의 접속 과정의 Msg1로서 임의 접속 프리앰블을 PRACH를 통해 전송할 수 있다. 서로 다른 두 길 이를 가지는 임의 접속 프리앰블 시퀀스들이 지원된다. 긴 시퀀스 길이 839는 1.25 및 5 kHz의 부반송파 간격 (subcarrier spacing)에 대해 적용되며, 짧은 시퀀스 길이 139는 15, 30, 60 및 120 kHz의 부반송파 간격에 대 해 적용된다. BS가 UE로부터 임의 접속 프리앰블을 수신하면, BS는 임의 접속 응답(random access response, RAR) 메시지 (Msg2)를 상기 UE에게 전송한다. RAR을 나르는 PDSCH를 스케줄링하는 PDCCH는 임의 접속(random access, RA) 무선 네트워크 임시 식별자(radio network temporary identifier, RNTI)(RA-RNTI)로 CRC 마스킹되어 전송된다. RA-RNTI로 마스킹된 PDCCH를 검출한 UE는 상기 PDCCH가 나르는 DCI가 스케줄링하는 PDSCH로부터 RAR을 수신할 수 있다. UE는 자신이 전송한 프리앰블, 즉, Msg1에 대한 임의 접속 응답 정보가 상기 RAR 내에 있는지 확인한 다. 자신이 전송한 Msg1에 대한 임의 접속 정보가 존재하는지 여부는 상기 UE가 전송한 프리앰블에 대한 임의 접속 프리앰블 ID가 존재하는지 여부에 의해 판단될 수 있다. Msg1에 대한 응답이 없으면, UE는 전력 램핑 (power ramping)을 수행하면서 RACH 프리앰블을 소정의 횟수 이내에서 재전송할 수 있다. UE는 가장 최근의 경 로 손실 및 전력 램핑 카운터를 기반으로 프리앰블의 재전송에 대한 PRACH 전송 전력을 계산한다. 상기 UE는 임의 접속 응답 정보를 기반으로 상향링크 공유 채널 상에서 UL 전송을 임의 접속 과정의 Msg3로서 전송할 수 있다. Msg3은 RRC 연결 요청 및 UE 식별자를 포함할 수 있다. Msg3에 대한 응답으로서, 네트워크는 Msg4를 전송할 수 있으며, 이는 DL 상에서의 경쟁 해결 메시지로 취급될 수 있다. Msg4를 수신함으로써, UE는 RRC 연결된 상태에 진입할 수 있다. 한편, 본 명세서와 도면에는 본 발명의 바람직한 실시 예에 대하여 개시하였으며, 비록 특정 용어들이 사용되었 으나, 이는 단지 본 발명의 기술 내용을 쉽게 설명하고 발명의 이해를 돕기 위한 일반적인 의미에서 사용된 것 이지, 본 발명의 범위를 한정하고자 하는 것은 아니다. 여기에 개시된 실시 예 외에도 본 발명의 기술적 사상에 바탕을 둔 다른 변형 예들이 실시 가능하다는 것은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 자명한 것이다."}
{"patent_id": "10-2019-0105090", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 명세서의 일 실시 예에 따른 AI 장치를 나타낸다. 도 2는 본 명세서의 일 실시 예에 따른 AI 서버를 나타낸다. 도 3은 본 명세서의 일 실시 예에 따른 AI 시스템을 나타낸다. 도 4는 본 명세서의 일 실시 예에 따른 애플리케이션 컨테이너가 이동되어 설치되고, 이에 대한 상태 정보가 공 유되는 시스템을 나타낸다. 도 5는 본 명세서의 시스템 구조를 나타내는 나타낸다. 도 6은 본 명세서의 실시 예에 따라 생성되는 상태 블록 체인을 나타낸다. 도 7은 본 명세서의 실시 예에 따라 장치간 컨테이너가 이동되고 이에 따라 생성되는 상태 블록 체인을 나타낸 다. 도 8은 본 명세서의 실시 예에 따라 장치간 컨테이너 이동 및 이에 대응한 외부 노드와의 정보 교환을 나타낸다. 도 9는 본 명세서의 실시 예에 따른 컨테이너의 변경에 따른 변복조를 검증하기 위한 방법을 설명하기 위한 도 면이다. 도 10은 본 명세서의 실시 예에 따른 변경 블록의 생성 방법을 설명하기 위한 도면이다. 도 11a 내지 11e는 본 명세서의 실시 예에 따른 컨테이너 이동에 따른 상태 블록 및 변경 블록의 생성을 설명하 기 위한 도면이다. 도 12는 본 명세서의 실시 예에 따른 컨테이너 이동에 대응하여 장치간에 교환되는 정보와 그에 따른 상태 블록 을 설명하기 위한 도면이다. 도 13은 본 명세서의 실시 예에 따라 이동된 컨테이너의 상태 변경이 있을 경우 그에 따른 변경 블록의 생성과 이에 대한 정보를 교환하기 위한 방법을 설명하기 위한 도면이다. 도 14는 본 명세서의 실시 예에 따라 애플리케이션 사용에 따라 변경된 정보를 포함하는 컨테이너를 생성하기 위한 방법을 설명하기 위한 도면이다. 도 15는 본 명세서의 실시 예에 따른 연산장치를 설명하기 위한 도면이다. 도 16은 5G 통신 시스템에서 자율 주행 차량과 5G 네트워크의 기본동작의 일 예를 나타낸다. 도 17은 무선 통신 시스템에서 신호 송/수신 방법의 일례를 나타낸 도이다."}
