{"patent_id": "10-2020-0029547", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0019378", "출원번호": "10-2020-0029547", "발명의 명칭": "자원 관리용 방법, 장치, 전자 기기 및 저장매체", "출원인": "베이징 바이두 넷컴 사이언스 앤 테크놀로지 코.,", "발명자": "렁 샹룬"}}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "자원 관리 방법에 있어서, 지원해야하는 복수의 가상기능을 확정하는 단계 - 상기 복수의 가상기능 중 각각의 가상기능은 컴퓨팅 설비에서가동되는 가상머신과 서로 대응됨 - ;물리자원 집합을 설정비율에 따라 복수의 물리자원 서브 집합으로 분할하는 단계 - 상기 물리자원 서브 집합의개수와 상기 가상기능의 개수가 서로 동일함 - ; 및상기 복수 물리자원 서브 집합을 상기 복수 가상기능에 할당하는 단계를 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 물리자원 집합을 복수의 물리자원 서브 집합으로 분할하는 단계는,상기 물리자원 집합이 복수의 물리유닛에 의해 제공됨에 응답하여, 상기 복수의 물리유닛 집합을 상기 설정비율에 따라 복수의 물리유닛 서브 집합으로 분할하는 단계 - 상기 복수의 물리유닛 서브 집합은 상기 복수의 물리자원 서브 집합에 각각 대응됨 - 를 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 복수의 물리자원 서브 집합을 상기 복수의 가상기능에 할당하는 단계는,상기 복수의 물리유닛 서브 집합 중 각각의 물리유닛 서브 집합에 대해,상기 물리유닛 서브 집합이 할당되어야 하는 가상기능의 식별자를 확정하는 단계; 및상기 식별자를 상기 물리유닛 서브 집합 중 각각의 물리유닛과 서로 연관시키는 단계를 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 복수 물리유닛 중 각각의 물리유닛에 대해,상기 물리유닛과 서로 연관된 식별자가 나타내는 가상기능을 확정하는 단계; 및상기 물리유닛을 상기 가상기능을 지원하는데 활용하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 물리자원 집합을 복수의 물리자원 서브 집합으로 분할하는 단계는,상기 물리자원이 하나의 물리유닛에 의해 제공됨에 응답하여, 상기 물리유닛의 상기 물리자원을 상기 설정비율에 따라 복수의 자원 부분으로 분할하는 단계 - 상기 복수의 자원 부분은 상기 복수의 물리자원 서브 집합에 각각 대응됨 - 를 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 복수의 물리자원 서브 집합을 상기 복수의 가상기능에 할당하는 단계는,공개특허 10-2021-0019378-3-상기 물리유닛 내에서 상기 복수의 자원 부분의 복수의 어드레스 범위를 확정하는 단계; 및상기 복수의 어드레스 범위를 상기 복수의 가상기능에 각각 할당하는 단계를 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서, 상기 복수의 가상기능 중 가상기능을 기반으로 상기 물리유닛의 액세스 요청에 대해, 상기 가상기능이 액세스하려는 상기 물리유닛 내 어드레스를 확정하는 단계; 및상기 어드레스가 상기 가상기능에 할당된 어드레스 범위 내에 있음에 응답하여, 상기 가상기능이 상기 어드레스에 액세스하는 것을 허용하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 복수의 가상기능과 서로 대응되는 복수의 가상머신의 물리자원의 수요량, 부하수준 및 서비스 품질 수준중 적어도 한 항을 바탕으로 상기 설정비율을 확정하는 단계를 더 포함하는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 방법은 상기 컴퓨팅 설비와 통신적으로 결합된 시스템 온 칩(SoC)에서 실행되는 방법."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "자원 관리 장치에 있어서,지원해야 하는 복수의 가상기능을 확정하는 가상기능 확정 모듈 - 상기 복수의 가상기능 중 각각의 가상기능은컴퓨팅 설비에서 가동되는 가상머신과 서로 대응됨 - ;물리자원 집합을 설정비율에 따라 복수의 물리자원 서브 집합으로 분할하는 자원집합 분할 모듈 - 상기 물리자원 서브 집합의 개수는 상기 가상기능의 개수와 동일함 - 및상기 복수의 물리자원 서브 집합을 상기 복수의 가상기능에 각각 할당하는 자원 서브 집합 할당 모듈을 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서, 상기 자원집합 분할 모듈은,상기 물리자원 집합이 복수의 물리유닛에 의해 제공됨에 응답하여, 상기 복수의 물리유닛 집합을 상기 설정비율에 따라 복수의 물리유닛 서브 집합으로 분할하는 물리유닛 분할 모듈 - 상기 복수 물리유닛 서브 집합은 상기복수의 물리자원 서브 집합에 각각 대응됨 - 을 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 복수의 물리유닛 서브 집합 중 각각의 물리유닛 서브 집합에 대해, 상기 자원 서브 집합 할당 모듈은,상기 물리유닛 서브 집합이 할당되어야 하는 가상기능의 식별자를 확정하는 식별자 확정 모듈; 및상기 식별자와 상기 물리유닛 서브 집합 중 각각의 물리유닛과 서로 연관시키는 연관 모듈을 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 복수의 물리유닛 중 각각의 물리유닛에 대해, 상기 장치는,공개특허 10-2021-0019378-4-상기 물리유닛과 서로 연관된 식별자가 나타내는 가상기능을 확정하는 연관기능 확정 모듈; 및상기 물리유닛을 상기 가상기능을 지원하는데 활용하는 가상기능 지원 모듈을 더 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제10항에 있어서, 상기 자원집합 분할 모듈은,상기 물리자원이 하나의 물리유닛에 의해 제공됨에 응답하여, 상기 물리유닛의 상기 물리자원을 상기 설정비율에 따라 복수의 자원 부분으로 분할하는 물리자원 분할 모듈 - 상기 복수의 자원 부분은 상기 복수의 물리자원서브 집합에 각각 대응됨 - 을 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서, 상기 자원 서브 집합 할당 모듈은,상기 물리유닛 내에서 상기 복수의 자원 부분의 복수의 어드레스 범위를 확정하는 어드레스 범위 확정 모듈; 및상기 복수의 어드레스 범위를 상기 복수의 가상기능에 각각 할당하는 어드레스 범위 할당 모듈을 포함하는장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항의 상기 장치는,상기 복수의 가상기능 중 가상기능을 기반으로 상기 물리유닛의 액세스 요청에 대해, 상기 가상기능이 액세스하려는 상기 물리유닛 내 어드레스를 확정하는 액세스 어드레스 확정 모듈; 및상기 어드레스가 상기 가상기능에 할당된 어드레스 범위 내에 있음에 응답하여, 상기 가상기능이 상기 어드레스에 액세스하는 것을 허용하는 액세스 허용 모듈을 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항에 있어서,상기 복수의 가상기능과 서로 대응되는 복수의 가상머신 물리자원의 수요량, 부하수준 및 서비스 품질 수준 중적어도 한 항을 바탕으로 상기 설정비율을 확정하는 설정비율 확정 모듈을 더 포함하는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제10항에 있어서,상기 장치는 상기 컴퓨팅 설비와 통신적으로 결합이 된 시스템 온 칩 상에 있는 장치."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "전자 기기에 있어서,하나 또는 복수의 프로세서; 및하나 또는 복수의 프로그램을 저장하는 저장유닛을 포함하되,상기 하나 또는 복수의 프로그램이 상기 하나 또는 복수의 프로세서에 의해 실행될 때, 상기 하나 또는 복수의프로세서가 청구항 제1항 내지 제9항 중 어느 한 항의 방법을 구현하는 전자 기기."}
{"patent_id": "10-2020-0029547", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨터 프로그램이 저장된 컴퓨터 판독 가능한 저장매체에 있어서,프로세서가 상기 프로그램을 실행할 때 청구항 제1항 내지 제9항 중 어느 한 항의 방법을 구현하는 저장매체.공개특허 10-2021-0019378-5-"}
{"patent_id": "10-2020-0029547", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 출원의 실시예에서는 자원 관리 방법, 장치, 전자 기기 및 컴퓨터 판독 가능한 저장매체를 제시한다. 상기 방 법은 지원해야 하는 복수의 가상기능을 확정하는 단계를 포함하되, 복수의 가상기능 중 각각의 가상기능이 컴퓨 팅 설비에서 가동되는 가상머신과 서로 대응된다. 상기 방법은 물리자원 집합을 설정비율에 따라 복수의 물리자 원 서브 집합으로 배분하는 단계를 더 포함하되, 물리자원 서브 집합의 개수가 가상기능의 개수와 동일하다. 상 기 방법은, 복수의 물리자원 서브 집합을 복수의 가상기능에 각각 할당하는 단계를 더 포함한다. 본 출원의 실시 예는 공간 분할 다중화 방식으로 물리자원의 가상화를 구현하고, 비교적 적은 하드웨어 및 소프트웨어 지출이 가 능함과 동시에 시스템 안전성과 신뢰성을 향상시킨다."}
{"patent_id": "10-2020-0029547", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 출원은 일반적으로 컴퓨터 기술 영역에 해당하며, 더 구체적으로 자원을 관리하는데 활용되는 방법, 장치, 전자 기기 및 컴퓨터 판독 가능한 저장매체에 관한 것이다."}
{"patent_id": "10-2020-0029547", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "클라우드 컴퓨팅의 비약적인 발전에 따라, 현대 데이터 센터는 주로 가상화 기술을 통해 서버의 물리자원 이용 률을 높인다. 가상머신의 소프트웨어와 하드웨어의 분리로 소프트웨어 관리, 고장검출 및 시스템 유지 등의 조 작이 더 원활하게 진행될 수 있다. 가상화 기술은 한 대의 물리 서버가 복수의 가상 서버를 운영하도록 함으로 써, 물리서버의 이용률을 높이고, 클라우드 컴퓨팅의 배치에 소요되는 비용을 낮추었다. 인공지능(AI) 연산이 클라우드 컴퓨팅에 광범위하게 응용됨에 따라 다양한 그래픽 처리장치(GPU) 또는 AI 가속 기에도 대량으로 배치되고 있다. 싱글루트 I/O 가상화(SR-IOV) 기술을 통해 이와 같은 가속기가 빠른 속도로 가 상화를 지원할 수 있다. 하지만 가속기를 통해 가상머신을 지원하는 종래 방안에는 여전히 해결해야 하는 과제 들이 많다. 본 출원은 자원을 관리하는데 활용되는 일종의 방법, 장치, 전자 기기 및 컴퓨터 판독 가능한 저장매체에 관한 것이다. 본 출원의 제1 양태로, 자원 관리 방법을 제시한다. 상기 방법은 지원해야 하는 복수의 가상기능을 확정하는 단 계를 포함하며, 복수의 가상기능 중 각각의 가상기능은 컴퓨터 설비에서 가동되는 가상머신과 서로 대응된다. 상기 방법은 물리자원 집합을 설정비율에 따라 복수의 물리자원 서브 집합으로 분할하는 단계를 더 포함한다. 물리자원 서브 집합의 개수는 가상기능의 개수와 동일하다. 상기 방법은 복수의 물리자원 서브 집합을 복수의 가상기능에 각각 할당하는 단계를 더 포함한다. 본 출원의 제2 양태로 자원 관리 장치를 제시한다. 상기 장치는 지원해야 하는 복수의 가상기능을 확정하는 가 상기능 확정 모듈을 포함하고, 복수의 가상기능 중 각각의 가상기능은 컴퓨터 설비에서 가동되는 가상머신과 서 로 대응된다. 상기 장치는 물리자원 집합을 설정비율에 따라 복수의 물리자원 서브 집합으로 분할하는 자원집합 분할 모듈을 더 포함하되, 물리자원 서브 집합의 개수는 가상기능의 개수와 동일한다. 상기 장치는 복수의 물리 자원 서브 집합을 복수의 가상기능에 할당하는 자원 서브 집합 할당 모듈을 포함한다. 본 출원의 제3 양태로 전자 기기를 제시한다. 상기 전자 기기는 하나 또는 복수의 프로세서 및 저장유닛을 포함 한다. 상기 저장유닛는 하나 또는 복수의 프로그램을 저장한다. 하나 또는 복수의 프로그램이 하나 또는 복수의 프로세서에 의해 실행될 때, 하나 또는 복수의 프로세서가 제1 양태의 방법을 구현한다. 본 출원의 제4 양태로 컴퓨터 프로그램이 저장된 컴퓨터 판독 가능한 저장매체를 제시한다. 프로세서에서 상기 컴퓨터 프로그램이 실행될 때, 제1 양태의 방법이 구현된다."}
{"patent_id": "10-2020-0029547", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "발명의 내용에서 상술한 내용은 본 출원 실시예의 핵심 또는 중요 특징을 제한하려는 것이 아니고, 또한 본 출 원의 범위를 제한하고자 하는 것도 아니라고 이해되어야 한다. 본 출원의 기타 특징은 후문 설명으로 더 쉽게 이해될 것이다."}
{"patent_id": "10-2020-0029547", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "후문에서는 도면에서 도시한 일부 예시 실시예를 참조하여 본 출원의 원리와 사상을 설명하고자 한다. 일부 구 체적인 실시예를 설명하는 것은 해당 분야의 기술자가 본 출원을 더 잘 이해하고 구현할 수 있도록 하기 위함이 며, 본 출원의 범위를 어떠한 방식으로도 제한하는 것이 아니라고 이해되어야 한다. 전술한 바와 같이, AI 연산은 클라우드 컴퓨팅에 광범위하게 응용되고 있고, 다양한 GPU 또는 AI 가속기 또한 대량으로 배치되고 있다. 하지만 종래에는 일반적으로 시분할 다중화 방식으로 물리 자원을 가상화한다. 예를 들어, 컴퓨팅 자원에 있어서 GPU 또는 AI 가속기는 보통 타임 슬라이스를 바탕으로 배분하는 방식으로 컴퓨팅 자원을 가상머신에 배분한다. 보통 어떤 가상머신에 배분되는 각 타임 슬라이스를 6ms로 설정할 수 있다. 일단 상기 가상머신에 배분된 타임 슬라이스를 다 쓰면, 컴퓨팅 자원에 대한 사용에서 다음 가상머신으로 전환된다. 각각의 타임 슬라이스 내에, 현재 작동되는 가상머신은 전체 컴퓨팅 자원(명세서에서 처리능력으로 줄여 지칭) 을 점용할 수 있다. 하지만 이러한 시분할 다중화 방식은 비용이 비교적 많이든다. 예를 들어 일반적인 GPU 컨 택스트 스위칭에 0.2ms-0.5ms와 같이 몇 백 마이크로 초에 달하는 시간이 필요한데, 이는 6ms의 타임 슬라이스 에 있어서 3.33%-8.33%를 소비한다는 것을 의미한다. 뿐만 아니라, 종래 방안에서 GPU와 호스트의 데이터 교환은 기본적으로 직접 메모리 액세스(DMA) 유닛을 거쳐야 한다. 가상화를 할 때도 직접 메모리 액세스 유닛은 가상머신 사이에서 시분할 다중화를 한다. 이는 매우 복잡 하고 막대한 소프트웨어 지출을 야기한다. 첫째, 가상머신 사이의 안전한 격리를 위해서, 직접 메모리 액세스 유닛의 조작 명령은 가상머신 매니저(VMM) 또는 관리 프로그램(Hypervisor)을 거쳐 전달되므로, 시스템 성능을 저하시킨다. 이는 가상머신의 진입 또는 종료(VM_Entry 및 VM_Exit) 조작을 실행할 때 소프트웨어 소비가 비교 적 크기 때문이다. 둘째, 가상머신의 진입 및 종료 조작을 줄이기 위해서 시스템 소프트웨어는 가상 그림자 기 술(virtual-shadow) 등과 같은 복잡한 기술로 시스템의 성능을 보장해야 한다. 이렇게 생성된 다수의 명령어 대 기열과 복잡한 명령어 링크가 시스템 소프트웨어의 복잡도를 가중시킨다. 종래방안의 상술한 문제점과 잠재적 다른 문제를 고려하여, 본 출원의 실시예에서는 자원을 관리하는데 활용하 는 방법, 장치, 전자 기기 및 컴퓨터 판독 가능한 저장매체를 제시하고, 그 목적은 안전하고, 공간 분할 다중화 로 물리자원 가상화를 구현하는 것이다. 명세서에서 말한 공간 분할 방식은 물리자원(예, 컴퓨팅 자원)을 일정 한 비율로 다른 가상기능(또는 대응되는 가상머신)에 할당하는 것으로, 이를 통해 종래의 시분할 다중화 방식이 가지고 있던 다양한 문제들을 피한다. 또 다른 방면으로, 본 출원의 실시예에서는 가상기능(또는 대응하는 가상머신)간에 하드웨어 격리 매커니즘을 실행하여, 각각의 가상머신의 실행에 있어서 다른 가상머신의 영향을 받지 않으므로, 시스템을 더 안전하고 신 뢰할 수 있게 하였다. 예를 들어, 본 출원의 실시예는 복수 채널의 직접 메모리 액세스 유닛을 사용하여, 가상 액세스 컨트롤러 유닛을 통해 하드웨어 격리를 실현하는 것과 같이 하드웨어에 의해 채널간 격리가 가능하다. 이로써 각각의 가상머신의 액세스 명령은 직접 메모리 액세스 유닛을 직접 조작하여, 가상머신 매니저의 인터셉 트와 전달을 거칠 필요가 없고, 복잡한 소프트웨어 대기열도 필요가 없으므로 이는 시스템의 소프트웨어 소비를 크게 줄여주었다. 그 밖에 본 출원의 실시예에서 가상머신 매니저(또는 관리 프로그램)는 간단한 구현이 가능하 다. 왜냐하면 시스템이 초기화할 때만 가상머신의 개수와 자원 할당 상황에 따라, 상응하는 컨트롤러 유닛을 배 치하면 되기 때문이다. 자원 할당정보를 기록하는 레지스터에 상응하는 배치를 하는 것을 그 예로 들수 있다. 즉, 본 출원의 실시예는 필요한 하드웨어 자원이 비교적 적기 때문에, 하드웨어 비용도 비교적 낮다. 그리고 소 프트웨어 비용도 비교적 적기 때문에 시분할 다중화 방식의 복잡한 배분과 배분 비용을 피하였고, 이로써 구현, 유지 및 배치가 용이하다. 또한 본 출원의 실시예는 가상기능 간에 하드웨어 격리가 이루어지므로 시스템의 안 전성과 신뢰성을 높여준다. 본 출원의 실시예에서 가상머신의 구동 프로그램은 가상화를 지원하지 않는 상황과 동일하므로 바꿀 필요가 없다. 이로 미루어 보아, 본 출원의 실시예는 종래의 물리자원 가상화 방안의 다양한 문제를 효과적으로 해결할 수 있어서 물리자원(예, AI 가속기)의 가상화를 더 잘 구현하고, 특히 클라우드 컴퓨 팅의 기술적 환경에 적용된다. 후문에서는 도면을 참조하여 본 출원의 일부 실시예를 설명하고자 한다.도 1은 본 출원의 일부 실시예가 구현될 수 있는 예시 환경을 도시한 설명도이다. 도 1에 도시한 것처럼, 예시 환경은 컴퓨팅 설비와 시스템 온 칩(SoC)의 칩를 포함할 수 있다. 컴퓨팅 설비는 가 상머신을 가동하는 다양한 유형의 컴퓨팅 설비일 수 있고, 그 예로 개인 컴퓨터, 서버 컴퓨터, 휴대용 또는 랩 탑식 설비, 이동 설비(예, 이동전화, 개인정보 단말기(PDA), 미디어 플레이어 등), 멀티프로세서 시스템, 전자 제품, 소형 컴퓨터, 대형 컴퓨터, 상술한 시스템 또는 설비 중 어느 하나를 포함하는 분산 컴퓨팅 환경 등을 포 함하되 국한되지 않는다. 일부 실시예에서 컴퓨팅 설비는 PCI 익스프레스(PCIe) 인터페이스 기능을 지원함 으로써 시스템 온 칩과 통신 및 상호연결을 이루었다. 또한 컴퓨팅 설비는 싱글루트 I/O 가상화(SR- IOV) 기능을 통해 I/O 설비를 지원함으로써 I/O설비의 이용률을 높였다. 도시한 바와 같이, 컴퓨팅 설비에서 복수의 가상머신(106-1, 106-2, ……, 106-N)(후문에서는 가상머신 106으로 통칭)을 가동할 수 있고, 그 중 N은 자연수이며, 컴퓨팅 설비에서 어떤 수의 가상머신을 가 동할 수 있음을 의미한다. 일반적으로 가상머신은 특정 응용 프로그램으로 물리적 기계의 하드웨어 플랫폼에서 만들어낸 응용 실행 환경을 의미하고, 유저는 상기 환경을 통해 물리적 기계를 사용하는 것처럼, 애플리케이션 을 가동하고 또 그것과 인터렉션을 이룰 수 있다. 가상머신을 만들 때, 컴퓨팅 설비는 통상적으로 관 리자를 통해 상기 가상머신을 위탁하는 컴퓨팅 설비로부터 일정 수의 물리 자원을 할당받아서 가상머 신이 작업 중에 사용하도록 한다. 상기 물리 자원은 가상머신을 가동하는데 쓰이는 사용 가능한 어떤 물리 자원일 수 있고, 컴퓨팅 자원(예, CPU, GPU, FPGA 등), 저장 자원(예, 메모리, 디스크 스토리지 등), 네트 워크 자원(예, 랜 카드 등) 등을 포함하되 국한되지 않는다. 예시 환경에서, 시스템 온 칩과 컴퓨팅 설비는 통신적으로 결합되어 있다. 일반적으로 시스템 온 칩은 단일 칩에 하나의 완전한 시스템을 집적한 것을 말하며, 구체적으로는 복수의 특정 기능을 가진 집적회 로가 하나의 칩에 조합되어 형성된 시스템 또는 상품이고, 여기에는 완전한 하드웨어 시스템과 그것이 탑재하는 임베디드 소프트웨어를 포함한다. 예를 들어, AI 가속기 또는 각종 GPU는 시스템 온 칩을 통해 구현된다. 하지만 AI 가속기와 GPU외에, 시스템 온 칩은 수요에 따라 어떠한 적합한 시스템 또는 기능을 구현할 수 있다고 이해되어야 한다. 일부 실시예에서, 시스템 온 칩은 싱글루트 I/O 가상화를 지원할 수 있고, 이는 시스템 온 칩이 마치 복수의 독립된 물리 설비처럼 보이게 한다. 다시 말하면, 시스템 온 칩은 물리기능(PF)과 가상기능(VF)를 지원할 수 있다. 예를 들어 물리기능은 최대 성능의 PCIe일 수 있고, 이는 싱글루트 I/O 가상화를 지원한다. 물 리기능은 일반적인 PCIe 설비처럼 발견, 관리, 및 배치될 수 있다. 이에 비해 가상기능은 버전이 낮은 PCIe 기 능이고, 물리기능과 서로 연관될 수 있다. 예를 들면, 각각의 가상기능은 물리기능에서 분리될 수 있고 가상머 신에 할당될 수 있다. 도 1의 예시에서 컴퓨팅 설비에서 가동되는 N개의 가상머신과 시스템 온 칩은 가상기능(106-1, 106-2, ……, 106-N)(후문에서는 가상머신 106으로 통칭)을 지원할 수 있고, 그 중 가상기능의 각각의 가 상기능은 가상머신 중의 하나의 가상머신에 대응된다. 도 1에서 가상기능을 가상머신과 일일이 대응된다고 설명하였지만, 가상기능과 가상머신의 대응관계는 여기에 국한되지 않는다. 다른 실시예 에서 가상머신과 가상기능간에는 어떤 적합한 대응 관계를 가질 수 있다. 시스템 온 칩은 가상기능을 지원하는데 필요한 각종 물리 유닛도 포함하는데, 예를 들면 연산 유닛 (108-1, 108-2, ……, 108-M)(후문에서는 연산 유닛로 통칭, 그 중 M은 자연수) 과 직접 메모리 액세스 유 닛이 있다. 연산 유닛은 연산자원(또는 연산능력)일 수 있고, 따라서 가상기능에 가상 연산능력 을 제공할 수 있다. 직접 메모리 액세스 유닛은 메모리에 액세스 채널 자원을 제공하는데 활용될 수 있으 므로, 가상기능에 메모리에 대한 가상 액세스 능력을 제공할 수 있다. 시스템 온 칩은 다양한 작업과 다양한 기능을 컨트롤하는 컨트롤 유닛도 포함한다. 컨트롤 유닛(11 2)은 컨트롤 기능을 구현하는 어떠한 설비일 수 있고, 전용 컴퓨터, 범용 컴퓨터, 범용 프로세서, 마이크로 프 로세서, 마이크로 컨트롤러 또는 상태 기계를 포함하되 국한되지 않는다. 컨트롤 유닛은 개체의 컴퓨팅 설 비 또는 컴퓨팅 설비의 조합을 실행할 수 있다. 예를 들어, DSP와 마이크로 프로세서의 조합, 복수의 마이크로 프로세서, 한 개 또는 복수의 마이크로 프로세서가 DSP 코어를 결합 또는 이와 유사한 어떠한 다른 배치이다. 시스템 온 칩은 연산 유닛, 직접 메모리 액세스 유닛 및 컨트롤 유닛과 통신적으로 결합하 는데 활용되는 통신 링크도 포함한다. 통신 링크는 시스템 온 칩의 부품 간에 통신과 상호연결 을 해주는 어떠한 형식의 연결 또는 결합일 수 있고, 다양한 유형의 버스를 포함하되 국한되지 않는다. 일부 실시예에서 통신 링크는 네트워크 온 칩(NoC)을 포함할 수 있다. 도 1은 예시 환경 중에 본 출원의 실시예와 연관된 유닛, 모듈 또는 부품을 예시적으로 설명한 것에 불과 하다고 이해되어야 한다. 구체적인 구현 과정에서 예시 환경은 기타 기능에 활용되는 유닛, 모듈 또는 부 품을 포함할 수 있다. 또한 도 1에서 특정 개수의 다양한 유닛, 모듈 또는 부품을 설명하고 있지만, 이러한 특 정 개수는 단지 예시를 위한 것이고 본 출원의 범위를 어떠한 방식으로도 제한하지 않는다. 다른 실시예에서 예 시 환경은 어떤 적당한 개수의 다양한 유닛, 모듈 및 부품을 포함할 수 있다. 따라서 본 출원의 실시예는 도 1에서 설명하고 있는 구체적인 설비, 칩, 유닛, 모듈 또는 부품에 국한되지 않고, 가상머신과 가상기능을 구 현하는데 활용되는 컴퓨팅 시스템 환경에 일반적으로 적용이 된다. 아래에서는 도 2와 결합하여 본 출원 실시예 에 따른 자원 관리의 예시 방법을 설명하고자 한다. 도 2는 본 출원의 실시예에 따라 자원을 관리하는데 활용되는 방법을 도시한 흐름도이다. 일부 실시예에서 방법은 컴퓨팅 설비와 통신적으로 결합된 시스템 온 칩에서 실행된다. 예를 들어, 방법은 시스템 온 칩의 컨트롤 유닛에 의해 구현이 된다. 이러한 상황에서 방법은 컨트롤 유닛의 프로세서 또는 처리 장치에 의해 구현이 된다. 기타 실시예에서, 방법의 전부 또는 부분은 예시 환경(10 0)에서 독립된 컴퓨팅 설비에 의해서도 구현될 수 있고, 혹은 예시 환경 중 기타 유닛에 의해 구현될 수도 있다. 용이한 설명을 위해 도 1과 결합하여 방법을 설명하고자 한다. 전술한 바와 같이, 물리기능의 가상화를 통해 시스템 온 칩은 컴퓨팅 설비에서 가동되는 복수의 가상 머신에 가상기능을 제공할 수 있다. 통상적으로 컴퓨팅 설비에서 가동되는 하나의 가상머신(예, 가상머신 106-1)은 시스템 온 칩의 하나의 가상기능(예, 가상기능 116-1)과 대응될 수 있다. 하지만 기타 실시예에서는, 컴퓨팅 설비에서 가동되는 하나의 가상머신이 시스템 온 칩 중 복수의 가상기능과도 대응될 수 있고, 또는 컴퓨팅 설비에서 가동되는 복수의 가상머신이 시스템 온 칩 중 하나의 가상기 능에 대응될 수 있다. 즉, 본 출원의 실시예에서 컴퓨팅 설비에서 가동되는 가상머신과 시스템 온 칩 이 지원하는 가상기능은 어떤 적합한 대응 관계를 가질 수 있다. 따라서, 블록에서는 컴퓨팅 설비에서 가동되는 가상머신에 더 원할하게 가상기능을 제공하기 위 해서, 시스템 온 칩의 컨트롤 유닛은 우선 시스템 온 칩이 지원해야 하는 복수의 가상기능(11 6)을 확정한다. 복수의 가상기능 중 각각의 가상기능은 컴퓨팅 설비에서 가동되는 가상머신과 서로 대응되기 때문에, 컨트롤 유닛은 가상머신과 가상기능의 대응 관계에 따라 복수의 가상기 능을 확정한다. 예를 들어, 도 1에서 도시한 실시예에서, 하나의 가상머신은 하나의 가상기능에 대응 되는 상황에서 컨트롤 유닛은 시스템 온 칩이 지원해야하는 N개의 가상머신에 각각 대응되는 N 개의 가상 유닛을 확정할 수 있다. 이와 같이, 가상머신과 가상기능간의 대응 관계가 어떻든, 컨트롤 유닛은 시스템 온 칩이 지원해야 하는 복수의 가상기능을 확정할 수 있다. 한편, 컨트롤 유닛은 상기 방식으로 복수의 가상기능을 확정하는데 국한되지 않는다. 다른 실시예에 서 컨트롤 유닛은 시스템 온 칩 물리 자원의 총량에 따라 적합한 개수의 가상기능을 확정한 후, 이러한 가상기능을 컴퓨팅 설비에서 가동되는 가상머신에 대응시킬 수 있다. 대안으로 컨트롤 유닛은 시스템 온 칩 사용자 또는 관리자로부터 명령을 수신하고, 상기 명령에 따라 복수의 가상기능 을 확정할 수도 있다. 즉, 시스템 온 칩 이 지원해야 하는 복수의 가상기능은 시스템 온 칩 사용자 또는 관리자에 의해 설정될 수 있다. 일반적으로 컨트롤 유닛은 어떤 적당한 방식으로 시스 템 온 칩 이 지원해야 하는 복수의 가상기능을 확정할 수 있다. 블록에서는, 컨트롤 유닛은 시스템 온 칩 물리자원 집합을 설정비율에 따라 복수의 물리자원 서 브 집합으로 분할하고, 그 중 물리자원 서브 집합의 개수는 가상기능의 개수와 동일하다. 다시 말하면, 시 스템 온 칩이 N개의 가상기능을 지원하는 상황에서, 컨트롤 유닛이 시스템 온 칩 물리자원 집합을 N개의 물리자원 서브 집합으로 분할하는데, 상기 분할은 설정비율을 기초로 진행이 된다. 구체적으로 설명하면, 컨트롤 유닛은 물리자원 집합을 공급하는 물리 유닛의 특징을 바탕으로 물리자원 집 합을 N개의 물리자원 서브 집합으로 분할한다. 예시로써, 일부 상황에서 시스템 온 칩 물리자원 집합은 복 수의 물리 유닛에 의해 제공된다. 예를 들면, 도 1 실시예에서 시스템 온 칩 컴퓨팅 자원 집합은 M개의 연 산 유닛에 의해 제공된다. 이러한 상황에서 컨트롤 유닛은 M개의 연산 유닛을 N개의 물리자원 서브 집합으로 분할한다. 또 다른 상황으로 비교하면, 시스템 온 칩 물리자원 집합은 하나의 물리 유닛에 의해 제공된다. 예를 들어 도 1 예시에서, 시스템 온 칩 중 직접 메모리 액세스 자원집합은 하나의 직접 메모리 액세스 유닛에 의해 제공된 것이다. 이러한 상황에서 컨트롤 유닛은 직접 메모리 액세스 유닛의 내부자원을 N개의 물리자원 서브 집합으로 분할할 수 있다. 후문에서는 도 3과 결합하여 다른 상황에서 물리자원 집합을 분할하는 일종의 예시를 설명하고자 한다. 도 3은 본 출원 실시예에 따라 물리자원 집합을 분할하고 할당하는 예시 과정을 도시한 흐름도이다. 과정 은 방법의 일종의 실시예로 볼 수 있다. 따라서 일부 실시예에서, 과정은 컴퓨팅 설비와 통신적 결합이 된 시스템 온 칩에서 실행될 수 있다. 예를 들어, 과정은 시스템 온 칩 중 컨트 롤 유닛으로 구현될 수 있다. 이러한 상황에서 과정은 컨트롤 유닛의 프로세서 또는 처리장치에 의해 구현될 수 있다. 다른 실시예에서 과정의 전부 또는 부분은 예시 환경에서 독립된 컴퓨팅 설비 에 의해 구현되거나 예시 환경 중 다른 유닛에 의해 구현될 수도 있다. 도 3에서 도시한 바와 같이, 블록에서는 컨트롤 유닛이 시스템 온 칩 물리자원 집합이 하나의 물리 유닛으로 제공되는 것 또는 복수의 물리 유닛으로 제공되는 것을 확정할 수 있음을 설명하고 있다. 만약 물리자원 집합이 복수의 물리 유닛에 의해 제공된다면, 블록에서와 같이, 컨트롤 유닛은 복수의 물리 유닛으로 구성된 집합을 설정비율에 따라 복수의 물리 유닛 서브 집합으로 분할할 수 있고, 그 중 분할된 복수 의 물리 유닛 서브 집합은 복수의 물리자원 서브 집합에 각각 대응될 수 있다. 예를 들어, 도 1에서 설명한 예시에서 N의 값이 3이라고 가정하면, 컴퓨팅 설비에서 3개의 가상머신(106- 1, 106-2 및 106-3)을 가동하고, 시스템 온 칩은 3개의 가상기능(116-1, 116-2 및 116-3)을 지원한다. 이 와 동시에 M의 값이 8이라고 가정하면, 시스템 온 칩은 8개의 연산 유닛(108-1 내지 108-8)을 구성한다. 더불어 물리자원 집합을 배분하는 설정비율이 1:2:1이라고 가정하면, 물리자원 집합은 1:2:1의 비율로 3개의 가 상기능(116-1, 116-2 및 116-3)과 이에 대응되는 3개의 가상머신(106-1, 106-2 및 106-3)에 할당된다. 이러한 상황에서, 컨트롤 유닛은 8개의 연산 유닛(108-1 내지 108-8)을 3개의 물리자원 서브 집합으로 분 할할 수 있다. 이 3개의 물리자원 서브 집합은 각각 3개의 가상기능(116-1, 116-2 및 116-3)에 대응된다. 일종 의 예시로써, 제1 물리자원 서브 집합은 2개의 연산 유닛을 포함할 수 있고, 연산 유닛 108-1과 108-2를 예로 들 수 있다. 제2 물리자원 서브 집합은 4개의 연산 유닛, 예를 들어 108-3, 108-4, 108-5 및 108-6의 연산 유닛 을 포함할 수 있다. 제2 물리자원 서브 집합은 108-7과 108-8과 같은 2개의 연산 유닛을 포함할 수 있다. 이와 같은 분할 방식을 통해 단일 물리 유닛이 어떤 가상기능에서 전체적으로 사용되도록 보장함으로써, 가상기능간 의 격리도를 높였다. 여기서 설명한 구체적인 개수의 연산 유닛, 구체적인 개수의 가상기능, 각가의 물리자원 서브 집합이 포함하는 연산 유닛의 개수와 구체적인 연산 유닛 및 구체적인 설정비율은 단지 설명과 해석을 하기 위함이며, 어떠한 방 식으로도 본 출원의 범위를 제한하지 않는다고 이해되어야 한다. 다른 실시예에서 시스템 온 칩은 어떤 개 수의 연산 유닛, 어떤 개수의 가상기능, 각각의 물리자원 서브 집합이 포함할 수 있는 어떤 개수의 연산 유닛과 어떤 구체적인 연산 유닛을 포함할 수 있으며, 물리자원 집합의 분할에 있어서 어떤 설정비율을 사용할 수 있다. 또 한편으로 만약 블록에서, 컨트롤 유닛이 시스템 온 칩 물리자원 집합이 하나의 물리 유닛으 로 제공되는 것을 확정한다면, 블록에서처럼, 컨트롤 유닛은 물리 유닛의 물리자원을 설정비율에 따 라 복수의 자원 부분으로 분할하고, 그 중 복수의 자원 부분은 복수의 물리자원 서브 집합에 각각 대응될 수 있 다. 예를 들어, 시스템 온 칩 중 직접 메모리 액세스 자원이 하나의 직접 메모리 액세스 유닛으로 제 공되면, 이는 모든 가상기능에 의해 사용될 수 있다. 이러한 상황에서 컨트롤 유닛은 직접 메모리 액 세스 유닛 내부의 직접 메모리 액세스 자원을 설정 비율에 따라 복수의 자원 부분으로 분할할 수 있다. 구체적으로 보면, 직접 메모리 액세스 유닛 내부에 8개의 액세스 채널(아래에서는 CH1 내지 CH8로 지칭)이 있다고 가정하면, 8개 통로로 병렬 실행하는 직접 메모리 액세스를 지원할 수 있지만, 8개 채널은 할당된 하나 의 인터페이스(예, APB 인터페이스)를 공유한다. 또한 물리자원 집합을 분할하는 설정비율이 여전히 1:2:1이라 고 가정하면, 컨트롤러는 직접 메모리 액세스 유닛 내부의 8개 채널을 3개의 자원 부분으로 분할할 수 있다. 3개의 자원 부분은 각각 3개의 가상기능(116-1, 116-2 및 116-3)에 대응된다. 일종의 예로써, 제1 자 원 부분은 2개의 채널 예를 들어 CH1과 CH2를 포함할 수 있다. 제2 자원 부분은 CH3、CH4、CH5 및 CH6과 같은 4 개의 채널을 포함할 수 있다. 제3 자원 부분은 CH7과 CH8과 같은 2개의 채널을 포함할 수 있다. 이러한 분할 방 식을 통해 물리자원을 제공하는 물리유닛의 개수가 나눌 수 없는 상황에서도, 서로 다른 가상기능간에 여전히 물리자원의 분할을 구현할 수 있다.컨트롤 유닛이 하나 또는 복수의 물리 유닛에 따라 물리자원 서브 집합을 분할하는 실시예를 앞에서 설명 하였다. 하지만 본 출원의 실시예는 여기에 국한되지 않고, 다른 실시예에서 컨트롤 유닛은 다른 방식을 통해 물리자원의 서브 집합을 분할할 수도 있다. 예를 들어, 복수의 물리 유닛이 존재하는 상황에서, 컨트롤 유 닛은 각각의 물리 유닛을 설정비율에 따라 복수의 자원 부분으로 분할할 수 있다. 다시 예를 들면, 복수의 물리 유닛이 존재하는 상황에서, 컨트롤 유닛은 일부분의 물리 유닛을 단일 물리 유닛으로 물리 유닛 서브 집합으로 분할할 수 있고, 또 다른 일부분의 물리 유닛의 각 물리유닛을 복수의 자원 부분으로 분할할 수 있다. 일반적으로 컨트롤 유닛은 어떠한 적당한 방식을 통해, 물리자원 집합을 설정비율에 따라 물리자원 서브 집합으로 분할할 수 있다. 뿐만 아니라, 물리자원 집합을 분할하는 설정비율은 컨트롤 유닛에 의해 다양한 상관 요소를 바탕으로 합 리적으로 확정된다. 예를 들어 컨트롤 유닛은 복수의 가상기능과 대응되는 가상머신의 물리 자 원 수요량을 바탕으로 설정비율을 확정할 수 있다. 이로써 컨트롤 유닛은 가상머신의 실제 수요량을 바탕으로 시스템 온 칩 물리자원 집합을 합리적으로 분할할 수 있다. 추가적으로 또는 대안으로, 컨트롤 유닛은 가상머신의 부하 수준을 바탕으로 설정비율을 확정할 수 있다. 따라서 시스템 온 칩의 물리자원 집합은 현재 부하 수준이 더 높은 가상머신에 더 많이 할당될 수 있다. 추가적으로 또는 대안으 로, 컨트롤 유닛은 가상머신의 서비스 품질 수준을 바탕으로 설정비율을 확정할 수 있다. 예를 들어, 컨트롤 유닛은 서비스 품질 수준이 더 높은 가상머신에 더 많은 비율의 물리 자원을 분할할 수 있다. 일반적으로, 컨트롤 유닛은 자원 할당에 영향을 줄 수 있는 어떠한 상관 요소를 바탕으로 설정비율을 확정 하여, 시스템 온 칩 물리자원 집합을 N개의 물리자원 서브 집합으로 합리적 분할을 할 수 있다. 또한 상기 설정비율을 설정 및 조정을 통해, 시스템 온 칩은 다른 물리자원의 할당비율 즉 다양한 모델을 지원할 수 있다. 예를 들어 모델 1은 1/4, 1/4 및 1/2의 비율로 물리자원을 분할하고, 모델2는 1/2, 1/2의 비율로 물리자 원을 분할하며, 모델3은 1/1 비율로 물리자원을 분할할 수 있는데, 이는 물리자원 집합을 분할하지 않는다는 의 미이다. 이처럼 시스템 온 칩은 가상기능 사이에서 탄력적인 물리자원 할당을 구현할 수 있다. 다시 도 2로 돌아가 블록을 보면, 컨트롤 유닛은 분할한 복수의 물리자원 집합을 복수의 가상기능으 로 할당한다고 설명하고 있다. 예를 들어, 도 1에서 설명한 예시에서 컨트롤 유닛은 분할하여 얻은 N개의 물리자원 서브 집합을 N개의 가상기능(116-1 내지 116-N)에 할당하여, 가상기능에 물리 자원을 할당하는 동시에 서로 다른 가상기능 사이에서 물리 자원의 격리를 실현한다. 후문에서는 도 3을 결합하여 다른 상황에서 물리자 원 서브 집합을 할당하는 일종의 예시를 설명하고자 한다. 도 3에서 도시한 바와 같이, 복수의 물리 유닛이 물리자원 집합을 제공하는 상황에서, 블록에서는 컨트롤 유닛이 복수의 물리유닛 서브 집합 중 각각의 물리 유닛에 대해 물리유닛 서브 집합이 할당되어야 하는 가 상기능의 식별자를 확정할 수 있다. 예를 들어, 8개의 연산 유닛으로 가정한 전문의 구체적인 예시를 계속해서 적용하면, 컨트롤 유닛은 제1 물리자원 서브 집합인 연산 유닛(108-1과 108-2)에 대해 할당되어야 하는 가 상기능(116-1)의 식별자가 116-1이라고 확정할 수 있다. 이와 같이, 컨트롤 유닛은 제2 물리자원 서브 집 합인 연산 유닛(108-3 내지 108-6)에 할당되어야 하는 가상기능(116-2)의 식별자가 116-2라고 확정할 수 있다. 마찬가지로 컨트롤 유닛은 제2 물리자원 서브 집합인 연산 유닛(108-7과 108-8)에 대해 할당되어야 하는 가상기능(116-3)의 식별자가 116-3이라고 확정할 수 있다. 블록에서는 컨트롤 유닛은 가상기능의 식별자와 물리유닛 서브 집합 중 각각의 물리유닛을 서로 연관 지을 수 있다. 예를 들어 컨트롤 유닛은 연산 유닛(108-1과 108-2)과 가상기능(116-1)의 식별자(116-1)를 서로 연관짓고, 연산 유닛(108-3 내지 108-6)과 가상기능(116-2)의 식별자(116-2)를 서로 연관 지으며, 연산 유 닛(108-7과 108-8)과 가상기능(116-3)의 식별자(116-3)를 서로 연관 지을 수 있다. 이러한 방식을 통해 컨트롤 유닛은 직접적이고 명확한 방식으로 어떤 연산 유닛이 어느 가상기능에 할당될 것인지를 나타낼 수 있다. 일부 실시예에서 각각의 물리 유닛과 서로 연관되는 가상기능 식별자는 물리 유닛 내부의 레지스터에 저장되는 것과 같이 물리 유닛 내부에 저장될 수 있다. 예시로써, 연산 유닛(108-1)에 대응되는 가상기능(116-1)의 식별 자(116-1)는 연산 유닛(108-1)의 내부 레지스터에 저장될 수 있다. 아래 표 1은 상술한 구체적 예시 중의 연산 유닛, 가상기능 및 가상머신의 대응 관계를 나타내고 있다. 표 1 연산 유닛 가상기능 가상머신 108-1 116-1 106-1108-2 116-1 108-3 116-2 106-2 108-4 116-2 108-5 116-2 108-6 116-2 108-7 116-3 106-3 108-8 116-3 위 표 1에서 나타낸 연관관계에 따라, 컨트롤 유닛은 각각의 연산 유닛을 그에 대응하는 가상기능을 지원 하는데 쓸 수 있다. 예시로써, 복수의 연산 유닛 중 연산 유닛(108-1)과 같은 각각의 연산 유닛에 대해서, 컨트롤 유닛은 연산 유닛(108-1)과 서로 연관된 식별자를 116-1이라고 확정할 수 있다. 상기 식별자가 나 타내는 가상기능은 가상기능 116-1이다. 그런 다음 컨트롤 유닛은 연산 유닛(108-1)을 가상기능(116-1)을 지원하는데 쓸 수 있다. 이처럼, 컨트롤 유닛은 연산 유닛(108-2)도 가상기능(116-1)을 지원하는데 쓸 수 있고, 연산 유닛(108-3 내지 108-6)을 가상기능(116-2)을 지원하는데 쓸 수 있으며, 연산 유닛(108-7과 108-8)을 가상기능(116-3)을 지 원하는데 쓸 수 있다. 이러한 방식으로 컨트롤 유닛은 간단하고 명확한 방식으로 어떤 연산 유닛이 어느 가상기능에 할당될 것인지를 확정할 수 있고, 상기 연산 유닛으로 상기 가상기능을 지원한다. 계속해서 도 3을 참조하면, 물리자원 집합이 하나의 물리 유닛으로 제공되는 상황에서, 블록에서는 컨트롤 유닛이 상기 물리 유닛 중 복수의 자원 부분에 대해서 물리 유닛 내 복수의 어드레스 범위를 확정할 수 있 음을 설명하고 있다. 예를 들어, 직접 메모리 액세스 유닛에 8개의 액세스 채널이 있다고 가정한 전문의 예시를 계속 사용하면, 컨트롤 유닛은 직접 메모리 액세스 유닛의 제1 자원 부분(즉, 채널 CH1과 CH2)의 제1 어드레스 범위를 확정할 수 있고, 직접 메모리 액세스 유닛의 제2 자원 부분(즉, 채널 CH3 내 지 CH6)의 제2 어드레스 범위를 확정할 수 있으며, 직접 메모리 액세스 유닛의 제3 자원 부분(즉, 채널 CH7과 CH8)의 제3 어드레스 범위를 확정할 수 있다. 블록에서는 컨트롤 유닛은 확정한 복수의 어드레스 범위를 복수의 가상기능에 할당할 수 있음을 설명 하고 있다. 예를 들어, 컨트롤 유닛은 제1 어드레스 범위를 가상기능(116-1)에, 제2 어드레스 범위를 가상 기능(116-2)에, 제3 어드레스 범위를 가상기능(116-3)에 할당할 수 있다. 이와 같은 방식으로 컨트롤 유닛(11 2)은 다른 어드레스 범위가 나타내는 다른 자원 부분을 복수의 가상기능에 각각 할당함으로써, 단일 물리 유닛 내 서로 다른 자원 부분에 액세스이 가능한 방식으로 서로 다른 가상기능간 하드웨어 격리를 실현하였다. 후문 에서는 도 4를 결합하여, 어드레스 범위를 통해 단일 물리 유닛 중 다른 자원 부분에 액세스하는 예시를 설명하 고자 한다. 도 4는 본 출원의 실시예에 따라 어드레스 범위를 관리하는데 활용되는 레지스터를 도시한 블록도이다. 도 4에서 도시한 바와 같이, 시스템 온 칩은 가상기능 중 각각의 가상기능에 대해서 대응하는 레지스터 을 설치할 수 있다. 레지스터는 액세스 가능한 한 단락의 어드레스 범위에 대해서 유효 자릿수, 기점 어드레스(base) 필드 및 주소공간 크기(size) 필드를 포함할 수 있다. 유효 자릿수는 상기 어드레스에 검사가 필요한지 여부를 나타낼 수 있는데, 다시말해 레지스터에 설 정된 어드레스 범위가 상기 가상기능에 액세스를 해도 되는지 안되는지를 의미한다. 예를 들어, 만약 레지스터 에 기록된 어드레스 범위가 가상기능(116-1)에 대해서 유효 자릿수가 0으로 설정되어 있으면, 가상기 능(116-1)이 상기 어드레스 범위에 액세스를 할 수 있다는 것을 나타낸다. 반대로, 만약 레지스터에 기록 된 어드레스 범위가 가상기능(116-1)에 대해서 유효 자릿수가 1로 설정되어 있으면, 가상기능(116-1)이 상 기 어드레스 범위에 액세스를 할 수 없다는 것을 나타낸다. 여기서 유효 자릿수의 구체적인 값은 단지 예 시를 위한 것이고, 어떤 방식으로도 본 출원의 범위를 제한하는 것이 아니라고 이해되어야 한다. 다른 실시예에 서, 유효 자릿수는 다른 구체적인 값을 적용하여 특정 함의를 나타낼 수 있고, 심지어 복수의 비트로 표시 할 수도 있다. 기점 어드레스 필드는 레지스터에 설정된 어드레스 범위의 기점 어드레스를 나타내고, 주소공간 크기 필드는 레지스터에 설정된 어드레스 범위의 주소공간의 크기를 나타낸다. 따라서 일부 실시예에서, 특정 가상기능에 합법적으로 액세스한 어드레스 범위를 다음과 같이 나타낼 수 있다(유효 자릿수 폭을 26자리로 가정). {base，8자리0}<=어드레스[25：0]< {base，8자리0}+ size. 또한 일부 실시예에서, 레지스터는 32자리의 비트 길이로 설정될 수 있는데, 예를 들면 0 내지 32자리로 표시한다. 이러한 상황에서 주소공간 크기 필드는 비트 0 내지 12를 포함할 수 있고, 기점 어드레스 필드는 비트 13 내지 30을 포함할 수 있으 며, 유효 자릿수는 비트 31을 포함할 수 있다. 한편 다른 실시예에서, 레지스터는 어떤 개수의 비트 를 구성할 수 있고, 그 중 각각의 필드도 어떤 적합한 비트 개수를 포함할 수 있다. 또한 일부 실시예에서 직접 메모리 액세스 유닛의 어드레스 범위 최소 할당 크기를 256 바이트로 설정할 수 있다. 하지만 본 출원의 실시예에서 다른 크기 또한 가능하다고 이해되어야 한다. 일부 실시예에서 레지스터는 가상 액세스 컨트롤러(VAC)에 설치될 수 있다. 예를 들어, 상기 가상 액세스 컨트롤러는 시스템 온 칩에 설치된 액세스 컨트롤 모듈이고, 주요 기능은 물리기능과 가상기능에 대한 액 세스 컨트롤을 포함할 수 있다. 시스템의 안정을 위해, 가상화 과정에서 서로 다른 가상머신에 하드웨어 격리를 해야한다. 그래야만 물리기능과 가상기능이 액세스할 수 있는 채널이 다를 수 있다. 일반적으로 물리기능은 시 스템 온 칩 상의 모든 채널에 액세스할 수 있지만, 가상기능은 그 중의 일부분의 채널에만 액세스이 가능 하다. 예를 들어, 물리기능은 도 4에서 도시한 레지스터에 액세스할 수 있지만 가상기능은 레지스터 에 액세스할 수 없다. 따라서 물리자원 집합을 제공하는 단일 물리 유닛에 액세스를 할 때, 컨트롤 유닛은 물리 유닛에 대한 복 수의 가상기능 중 가상기능의 액세스 요청에 따라, 가상기능이 액세스 하고자하는 물리 유닛 안의 어드레스를 확정할 수 있다. 만약 확정한 어드레스가 가상기능에 할당된 어드레스 범위 안에 있으면, 컨트롤 유닛은 가상기능이 상기 어드레스에 액세스하는 것을 허용하고, 그렇지 않다면 컨트롤 유닛은 가상기능의 상기 어 드레스에 대한 액세스를 허용하지 않는다. 이와 같은 방식으로 컨트롤 유닛은 가상기능이 할당되지 않은 자원 부분에 액세스하는 것을 방지할 수 있고, 이로써 서로 다른 가상기능이 단일 물리 유닛 내부의 액세스 가 능한 서로 다른 자원 부분 사이에서의 하드웨어 격리를 보장한다. 일종의 예시로써, 도 1의 직접 메모리 액세스 유닛 내부 자원의 기점 어드레스가 0xDADA_0000이고, 각각의 채널이 0x200의 레지스터 공간이 필요하며, 1:2:1의 비율로 3개의 가상기능(116-1, 116-2 및 116-3)(대응되는 가상머신 106-1, 106-2 및 106-3)에 할당되어 사용된다고 가정하면, 이에 따른 레지스터의 설정은 아래 표 2와 같이 표시할 수 있고, 그 중 부호 '0x'는 뒤의 숫자가 16진법이라는 것을 나타낸다. 표 2 채널 가상 기능가상머신 기점 어드레스주소공간 크기레지스터 값 합법 어드레스 범위 CH1116-1106-10x2DA_000x4000xDB40_0400 0xDADA_0000~ 0xDADA_03FF CH3116-2106-20x2DA_040x8000xDB40_8800 0xDADA_0400~ 0xDADA_0BFF CH4116-2 CH5116-2 CH6116-2 CH7116-3106-30x2DA_0C0x4000xDB41_8400 0xDADA_0C00~ 0xDADA_0FFF CH8116-3 이와 같은 상황에서, 가상기능(116-1)(가상머신 106-1에 대응)이 어드레스 0xDADA_0200에 액세스를 요청한다고 가정한다. 상기 어드레스가 0xDB40_0400로 정의한 어드레스 범위(0xDADA_0000 ~ 0xDADA_03FF) 안에 있으므로, 상기 액세스는 합법적인 것이다. 이와 같은 상황에서, 컨트롤 유닛은 가상기능(116-1)이 상기 어드레스로 정상 액세스하도록 허용할 수 있다. 또 예를 들면, 가상기능(116-1)이 어드레스 0xDADA_0500에 액세스를 요청한 다고 가정한다. 상기 어드레스는 0xDB40_0400로 정의한 어드레스 범위(0xDADA_0000 ~ 0xDADA_03FF) 안에 없으 므로, 상기 액세스는 불법이다. 이와 같은 상황에서, 컨트롤 유닛은 (예, 가상 액세스 컨트롤러를 통해) 액세스 오류 메시지를 다시 보내어, 가상기능(116-1)의 상기 어드레스에 대한 액세스를 막는다. 이러한 방식을 통해서, 컨트롤 유닛은 가상기능(또는 가상머신)이 다른 가상기능(또는 가상머신)에 할당된 자원에 액세스하는 것을 효과적으로 막을 수 있고, 이로써 가상머신 사이의 하드웨어 격리를 실현한다. 일부 실 시예에서 시스템 온 칩은 단독적인 레지스터를 배치한 채널을 설치하여, 가상기능(116-1 내지 116-N)이 직 접 메모리 액세스 유닛에 액세스하는 것을 컨트롤하는데 활용할 수 있다. 도 5는 본 출원의 실시예에 따라 자원을 관리하는데 활용되는 장치를 도시한 블록도이다. 일부 실시예에서 장치는 도 1의 컴퓨팅 설비에 포함될 수 있고, 또는 컴퓨팅 설비로 구현될 수도 있다. 도 5에서 도시한 바와 같이, 장치는 가상기능 확정 모듈, 자원집합 분할 모듈 및 자원 서브 집 합 할당 모듈을 포함한다. 가상기능 확정 모듈은 지원해야 하는 복수의 가상기능을 확정하고, 그 중 복수의 가상기능 중 각각의 가상기능과 컴퓨팅 설비에서 가동되는 가상머신은 서로 대응된다. 자원집합 분할 모 듈은 물리자원 집합을 설정비율에 따라 복수의 물리자원 서브 집합으로 분할하고, 물리자원 서브 집합의 개수와 가상기능의 개수는 동일하다. 자원 서브 집합 할당 모듈은 복수의 물리자원 서브 집합을 복수의 가 상기능에 할당한다. 일부 실시예에서 자원집합 분할 모듈은 복수의 물리 유닛으로 물리자원 집합이 제공됨에 따라서, 복수의 물리 유닛의 집합을 설정비율에 따라 복수의 물리 유닛 서브 집합으로 분할하는 물리 유닛 분할 모듈을 포함할 수 있다. 일부 실시예에서, 복수의 물리 유닛 서브 집합 중 각각의 물리 유닛 서브 집합에 설정되는 자원 서브 집합 할당 모듈은, 물리 유닛 서브 집합이 할당되어야 하는 가상기능의 식별자를 확정하는 식별자 확정 모듈; 및 식 별자와 물리 유닛 서브 집합 중 각각의 물리 유닛을 서로 연관시키는 연관 모듈을 포함할 수 있다. 일부 실시예에서 복수의 물리 유닛 중 각각의 물리 유닛에 대한 장치는 물리 유닛과 서로 연관되는 식별자 가 나타내는 가상기능을 확정하는 연관 기능 확정 모듈; 및 물리 유닛으로 가상기능을 지원하는 가상기능 지원 모듈을 포함할 수 있다. 일부 실시예에서 자원 집합 배분 모듈은 물리 자원이 하나의 물리 유닛으로 제공됨에 따라, 물리 유닛의 물리 자원을 설정비율에 따라 복수의 자원 부분으로 분할하는 물리자원 분할 모듈을 포함할 수 있고, 복수의 자 원 부분은 복수의 물리자원 서브 집합에 각각 대응한다. 일부 실시예에서 자원 서브 집합 할당 모듈은 복수의 자원 부분이 물리 유닛 안의 복수 어드레스 범위를 확정하도록 하는 어드레스 범위 확정 모듈; 및 복수의 어드레스 범위를 복수의 가상기능에 각각 할당하는 어드 레스 범위 할당 모듈을 포함할 수 있다. 일부 실시예에서 장치는 복수의 가상기능 중 가상기능이 물리 유닛에 대한 액세스 요청에 따라, 가상기능 이 액세스하려고 하는 물리 유닛 내부의 어드레스를 확정하는 액세스 어드레스 확정 모듈; 및 어드레스가 가상 기능의 어드레스 범위 내로 할당됨에 따라, 가상기능의 어드레스 액세스를 허용하는 액세스 허용 모듈도 포함할 수 있다. 일부 실시예에서 장치는 복수의 가상기능과 서로 대응된 복수의 가상머신의 물리자원 수요량, 부하수준 및 서비스 품질 수준 중 적어도 하나의 항목을 기준으로 설정비율을 확정하는 설정비율 확정 모듈도 포함할 수 있 다. 일부 실시예에서 장치는 컴퓨팅 설비와 통신적으로 결합된 시스템 온 칩 상에 있을 수 있다. 도 6은 본 출원의 실시예를 구현하는데 쓰이는 설비를 도시한 블록도이다. 도 6에서 도시한 바와 같이, 설 비는 중앙 처리장치(CPU)를 포함하고, 읽기 전용 메모리(ROM)에 저장된 컴퓨터 프로그램 명령 또는 저장 유닛에서 랜덤 액세스 메모리(RAM)로 로딩한 컴퓨터 프로그램 명령을 기반으로, 각종 적당 한 동작과 처리를 실행한다. 설비 작업에 필요한 각종 프로그램과 데이터를 RAM에 저장할 수도 있다. CPU, ROM 및 RAM은 버스로 서로 연결이 되어 있다. 입/출력(I/O) 인터페이스도 버스 에 연결되어 있다. 설비 중의 복수 부품은 I/O 인터페이스에 연결되어 있고, 부품은 키보드, 마우스 등의 입력유닛 ; 각종 유형의 디스플레이, 스피커 등의 출력유닛; 자기 디스크, 콤팩트 디스크 등의 저장유닛; 및 랜 카드, 모뎀, 무선통신 송수신기 등의 통신유닛을 포함한다. 통신유닛은 설비가 인터넷과 같은 컴퓨터 네트워크 및/또는 각종 전기통신망과 기타 설비를 통해 정보/데이터를 교환하도록 한다. 전문에서 상술한 방법(200 및 300)과 같이, 각각의 과정과 처리는 처리장치에 의해 실행이 될 수 있다. 예 를 들어, 일부 실시예에서 예시 방법(200 및 300)은 컴퓨터 소프트웨어 프로그램으로 구현될 수 있고, 저장유닛 처럼 기계 판독 가능한 저장매체에 유형적으로 포함될 수 있다. 일부 실시예에서 컴퓨터 프로그램의 부분 또는 전부는 ROM 및/또는 통신유닛에 의해 로딩 및/또는 설비에 설치될 수 있다. 컴퓨터 프로그 램이 RAM에 로딩되고 CPU로 실행이 될 때, 상술한 예시 방안(200 및 300)의 하나 또는 복수의 단계를실행할 수 있다. 명세서에 사용한 용어 '포함' 및 유사한 용어는 개방적으로 포함한다는 의미, 즉 '포함하되 국한되지 않는'이라 고 해석되어야 한다. 용어 '기초하여'는 '적어도 부분적으로 기초하여'로 해석되어야 한다. 용어 '일 실시예' 또는 '상기 실시예'는 '적어도 일 실시예'로 해석되어야 한다. 용어 '일부 실시예'는 '적어도 일부 실시예'로 해석되어야 한다. 후문에는 기타 명확하고 함축적인 정의를 포함할 수 있다. '제1', '제2' 등등의 용어는 다른 또는 같은 대상을 지칭할 수 있다. 명세서에서는 다른 명확하고 함축적인 정의를 포함할 수 있다. 명세서에서 사용한 것처럼, 용어 '확정'은 다양한 동작을 포괄한다. 예를 들어, '확정'은 연산, 컴퓨팅, 처리, 도출, 조사, 검색(예, 도표, 데이터베이스 또는 또 다른 데이터 구조에서의 검색), 조사 등을 포함할 수 있다. 뿐만 아니라 '확정'은 수신(예, 메시지 수신), 액세스(예, 메모리의 데이터에 액세스) 등을 포함할 수 있다. 또 한 '확정'은 해석, 선택, 선발, 건립 등을 포함할 수 있다. 본 출원 실시예는 하드웨어, 소프트웨어 및 소프트웨어와 하드웨어의 결합으로 구현될 수 있음을 주의해야 한다. 하드웨어 부분은 전용 로직으로 구현될 수 있고; 소프트웨어 부분은 메모리에 저장되어 적당한 명령에 의 해 시스템을 실행할 수 있으며, 예를 들어 마이크로 프로세서 또는 전용 설계 하드웨어로 실행될 수 있다. 상술 한 설비와 방법은 컴퓨터 실행가능 명령 및/또는 프로세서에 포함된 컨트롤 코드로 상술한 설비와 방법을 구현 할 수 있고, 프로그래머블 메모리 또는 광학 혹은 전자신호를 저장하고 있는 데이터 캐리어에서 이러한 코드를 제공함을 해당 분야에 종사하는 기술자는 이해할 수 있을 것이다. 비록 도면에서 특정한 순서로 본 출원의 방법에 대한 조작을 설명하였지만, 반드시 상기 특정 순서로 이러한 조 작을 해야한다고 요구하거나 암시, 또는 설명한 모든 조작을 실행해야만 기대하는 결과를 구현한다고 의미하는 것이 아니다. 추가적 또는 대안으로, 일부 단계를 생략할 수 있고, 복수 단계를 하나의 단계로써 실행할 수 있 으며, 및/또는 하나의 단계를 복수의 단계로 분해하여 실행할 수 있다. 또한 본 출원의 두 개 또는 더 많은 장 치의 특징과 기능을 바탕으로 하나의 장치에서 구체화될 수 있음을 주의하여야 한다. 역으로 전술한 하나의 장 치의 특징과 기능은 더 나눠져서 복수 장치에 의해서 구체화될 수 있다. 비록 일부 구체적인 실시예를 참조하여 본 출원을 설명하였지만, 본 출원이 공개한 구체적인 실시예에 한정되지 않는다고 이해되어야 할 것이다. 본 출원의 목적은 청구항에 포함된 사상과 범위 내에 있는 각종 수정과 등가배 치를 포함하기 위함이다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2020-0029547", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도면을 참조하여 후술되는 상세 설명을 보면, 본 출원 실시예의 상술한 목적과 기타 목적, 특징 및 장점이 더 쉽게 이해될 것이다. 도면에서는 예시로써 그리고 제한적이지 않은 방식으로 본 출원의 일부 실시예를 도시하였 다. 도 1은 본 출원의 일부 실시예가 구현될 수 있는 예시 환경을 도시한 설명도이다. 도 2는 본 출원의 실시예에 따라 자원을 관리하는데 활용한 방법을 도시한 흐름도이다. 도 3은 본 출원의 실시예에 따라 물리자원 집합을 분할 및 할당하는 예시과정을 도시한 흐름도이다.도 4는 본 출원의 실시예에 따라 어드레스 범위를 관리하는데 활용되는 레지스터를 도시한 블록도이다. 도 5는 본 출원의 실시예에 따라 자원을 관리하는데 활용된 장치를 도시한 블록도이다. 도 6은 본 출원의 실시예를 구현하는데 활용된 설비를 도시한 블록도이다. 전체 도면에서 같거나 유사한 참조부호는 같거나 유사한 부품을 나타낸다."}
