{"patent_id": "10-2023-0071001", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0172546", "출원번호": "10-2023-0071001", "발명의 명칭": "인공 지능 기반 프로그래밍 교육용 피어 리뷰 장치 및 방법", "출원인": "고려대학교 산학협력단", "발명자": "최승윤"}}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "사용자의 코드 실행 요청에 응답하여, 제시된 예제에 대하여 상기 사용자가 작성한 코드(code)를 컴파일(compile)하여 상기 코드의 실행 결과를 도출하는 컴파일러 모듈;상기 사용자의 코드 체크 요청에 응답하여, 상기 코드의 정답 여부를 판단하는 코드 체크 모듈; 및상기 실행 결과에 대한 피드백을 생성하고, 상기 사용자의 질의에 대한 응답을 생성하는 피어 리뷰 모듈을 포함하는 피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 사용자의 힌트 제공 요청에 응답하여, 상기 예제에 대한 힌트를 제공하는 힌트 제공 모듈을 더 포함하는,피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 피어 리뷰 모델은 사전 학습된 거대 언어모델(Large Language Model, LLM)을 이용하여 상기 피드백과 상기응답을 생성하는,피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 거대 언어모델은 GPT(Generative Pre-trained Transformer) 모델인,피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 LLM 모델은 상기 예제, 상기 피어 리뷰 모듈의 역할, 상기 피어 리뷰 모듈의 출력에 대한 제한사항, 및 쿼리를 포함하는 프롬프트(prompt)를 이용하여 설정되고,상기 역할은 상기 피드백의 생성과 상기 응답의 생성을 포함하고,상기 제한사항은 상기 피드백의 분량과 정답 코드 생성의 제한을 포함하고,상기 쿼리는 상기 피드백의 생성에 대한 요청과 상기 응답의 생성에 대한 요청을 포함하는,피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 피어 리뷰 모듈은 상기 코드, 상기 코드 체크 모듈이 출력과 상기 컴파일러 모듈의 출력 중 적어도 하나,상기 제한사항, 및 상기 피드백의 생성에 대한 요청을 포함하는 프롬프트를 이용하여 상기 피드백을 생성하는,피어 리뷰 장치.공개특허 10-2024-0172546-3-청구항 7 제6항에 있어서,상기 피어 리뷰 모듈은 상기 사용자의 질의, 상기 제한사항, 및 상기 응답의 생성에 대한 요청을 포함하는 프롬프트를 이용하여 상기 응답을 생성하는,피어 리뷰 장치."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공 지능 기반의 프로그래밍 교육용 피어 리뷰 장치 및 방법이 개시된다. 상기 피어 리뷰 장치는 사용자의 코드 실행 요청에 응답하여, 제시된 예제에 대하여 상기 사용자가 작성한 코드(code)를 컴파일(compile)하여 상기 코 드의 실행 결과를 도출하는 컴파일러 모듈, 상기 사용자의 코드 체크 요청에 응답하여, 상기 코드의 정답 여부를 판단하는 코드 체크 모듈, 및 상기 실행 결과에 대한 피드백을 생성하고, 상기 사용자의 질의에 대한 응답을 생 성하는 피어 리뷰 모듈을 포함한다."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 프로그래밍 교육용 시스템에 관한 것으로, 특히 프로그램 코드 리뷰가 가능한 프로그래밍 학습 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 급격한 ICT의 발달은 디지털 전환(Digital transformation)을 야기하였고, 이에 따라 디지털 역량은 가장 주요한 역량 중 하나로 간주되고 있다. 15개 국가에서 18,000여 명을 대상으로 연구한 매킨지의 보고서에서는 디지털 역량이 인지 능력, 대인관계, 자기 리더십과 더불어 가장 주요한 직업 역량으로 자리매김하였음을 확인 하였다. 이처럼, 일상적인 업무에 ICT 도구를 다루는 능력이나 역량은 필수사항이 되었고, 점점 더 많은 업무에 서 데이터 처리, 분석, SW 개발 등과 같은 상대적으로 높은 수준의 디지털 역량도 점점 더 요구되고 있다. 이러한 디지털 역량 교육의 일환으로 프로그래밍 교육에 대한 수요와 그 필요성은 점점 더 증대되고 있으며, 효 과적인 교육을 위한 연구들과 정책들이 뒷받침되고 있다. 선행 연구에 따르면, 프로그래밍 학습이 효과적으로 이루어지기 위해서는 배운 개념을 적용하여 문제를 해결하는 활동이 필요하며, 배운 개념을 문제에 적용하지 않 거나 단순히 사실을 암기하는 등의 활동만으로는 학습이 제대로 이루어지지 않는다. 그런데 프로그래밍은 그 특 성상 학습 시 다양한 풀이가 가능하다. 학습자마다 작성한 코드가 서로 다르고 접근하는 방식이 다르므로 학습 자 맞춤형 피드백이 필요하며, 동료 학습자나 전문가 등에게 리뷰를 받는 피어 리뷰(Peer review)가 효과적인 접근이 될 수 있다. 피어 리뷰는 코드를 작성할 때 막히는 부분에 대한 직접적인 질문 및 작성한 코드의 에러를 수정할 때 전문적인 도움이 된다는 점에서 전문 소프트웨어 개발자뿐만 아니라 프로그래밍 학습에도 매우 중요 한 부분이라고 할 수 있다. 하지만, 이에 대하여 피어 리뷰를 받을 수 있는 환경이 매우 제한적이기 때문에 프로그래밍 학습의 진입장벽이 높다는 문제가 있다. 특히, 학교 현장에서 학습자는 대부분 교사에게 의존하여 질의응답과 피드백을 받고 있다. 하지만 많은 학생을 관리해야 하는 학교의 특성상 교사가 개별적으로 피드백을 제공해 주기란 매우 어려운 실정 이다. 또한, 스스로 학습하는 경우에도 마찬가지로 도움을 요청할 만한 사람이 마땅치 않다. 이를 보완하기 위하여 인공 지능(Artificial Intelligence, AI) 기반의 자동 피드백 제공 시스템에 관한 연구가 진행됐다. 하지만, 이러한 시스템들은 보통 논리 오류와 관련한 피드백은 제공되기 어려웠고, 코드의 변화되는 양상을 고려한 피드백을 제공해 주기 어려운 한계가 있었다. 또한, 코드와 관련한 질문에 대한 응답을 제공해 주기 어려웠다. 거대 언어모델(Large language model, LLM)은 이러한 한계를 보완하는 효과적인 접근법일 수 있다. LLM은 대량 의 텍스트 데이터로 훈련되어 인간과 유사한 텍스트를 생성하고, 질문에 답변하며, 언어 관련 작업을 높은 정확 도로 수행할 수 있다. LLM은 텍스트뿐 아니라 프로그래밍 코드의 분석 및 생성에도 좋은 성능을 보여주고 있어 서, 학습용 피어 리뷰 시스템 개발에 유용한 접근 방법이 될 수 있다. 하지만, LLM을 기반으로 한 프로그래밍 학습용 피어 리뷰 시스템에 관한 연구는 매우 미흡하며 이에 따라 LLM을 활용한 교육용 피어 리뷰 시스템에서 프롬프트의 설계는 어떻게 구성되어야 하는지도 잘 연구되지 않았다. 특히, 프롬프트의 설계에 따라 그 성능과 활용 목적이 바뀌는 LLM의 특성에 근거하였을 때 효과적인 프롬프트 구축에 관한 연구는 필수적이라고 볼 수 있다. 따라서 본 발명은 프로그래밍 학습을 위한 피어 리뷰 시스템 개발에 있어 LLM을 활용할 때의 적절한 프롬프트 디자인과 프로토콜을 구축하고 이를 바탕으로 통합적 프로그래밍 교육 플랫폼을 개발하고자 한다.선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허 제2013955호 (2019.08.23. 공고) (특허문헌 0002) 대한민국 공개특허 제2019-0078849호 (2019.07.05. 공개) (특허문헌 0003) 대한민국 공개특허 제2020-0071413호 (2020.06.19. 공개)"}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 이루고자 하는 기술적인 과제는 인공 지능 기반의 프로그래밍 교육용 피어 리뷰 장치 및 방법을 제공 하는 것이다."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 인공 지능 기반 프로그래밍 교육용 피어 리뷰 장치는 사용자의 코드 실행 요청에 응답하여, 제시된 예제에 대하여 상기 사용자가 작성한 코드(code)를 컴파일(compile)하여 상기 코드의 실행 결 과를 도출하는 컴파일러 모듈, 상기 사용자의 코드 체크 요청에 응답하여, 상기 코드의 정답 여부를 판단하는 코드 체크 모듈, 및 상기 실행 결과에 대한 피드백을 생성하고, 상기 사용자의 질의에 대한 응답을 생성하는 피 어 리뷰 모듈을 포함한다."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 의할 경우, 인공 지능 기반 피어 리뷰 시스템을 제시하여 학생들의 프로그래밍 교육의 효 과성을 제고할 수 있다. 또한, 제안하는 시스템은 학교 현장에서 프로그래밍 수업 도구로서 사용이 가능할 뿐 아니라, 프로그래밍을 배 우고자 하는 모든 사람들이 효과적으로 배울 수 있는 환경을 제공할 수 있다."}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에 개시되어 있는 본 발명의 개념에 따른 실시예들에 대해서 특정한 구조적 또는 기능적 설명들은 단 지 본 발명의 개념에 따른 실시예들을 설명하기 위한 목적으로 예시된 것으로서, 본 발명의 개념에 따른 실시예 들은 다양한 형태들로 실시될 수 있으며 본 명세서에 설명된 실시예들에 한정되지 않는다. 본 발명의 개념에 따른 실시예들은 다양한 변경들을 가할 수 있고 여러 가지 형태들을 가질 수 있으므로 실시예 들을 도면에 예시하고 본 명세서에서 상세하게 설명하고자 한다. 그러나, 이는 본 발명의 개념에 따른 실시예들 을 특정한 개시 형태들에 대해 한정하려는 것이 아니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경,균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 상기 구성 요소들은 상기 용어 들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으로 만, 예컨대 본 발명의 개념에 따른 권리 범위로부터 벗어나지 않은 채, 제1 구성 요소는 제2 구성 요소로 명명 될 수 있고 유사하게 제2 구성 요소는 제1 구성 요소로도 명명될 수 있다. 어떤 구성 요소가 다른 구성 요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성 요소 에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성 요소가 존재할 수도 있다고 이해되어야 할 것이다. 반면에, 어떤 구성 요소가 다른 구성 요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는 중간에 다른 구성 요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성 요소들 간의 관계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등 도 마찬가지로 해석되어야 한다. 본 명세서에서 사용한 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로서, 본 발명을 한정하려는 의 도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 본 명세서에 기재된 특징, 숫자, 단계, 동작, 구성 요소, 부분품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구 성 요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가진다. 일반적 으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의 미로 해석되지 않는다. 이하, 본 명세서에 첨부된 도면들을 참조하여 본 발명의 실시예들을 상세히 설명한다. 그러나, 특허출원의 범위 가 이러한 실시예들에 의해 제한되거나 한정되는 것은 아니다. 각 도면에 제시된 동일한 참조 부호는 동일한 부 재를 나타낸다. 우선, 본 발명의 이론적 배경에 대하여 설명한다. 피어 리뷰(Peer review) 시스템 학습자의 학습에 있어 실시간 피드백은 중요한 역할을 하며, 특히 프로그래밍과 같이 다양한 접근이 가능한 과 목의 경우 이러한 맞춤형 지원은 더욱 필요하다. 하지만, 피어 리뷰를 통한 실시간 피드백은 교육 자원이 제한 적인 상황에서 개별적인 수준에서 제공되기 어렵다. 이를 보완하기 위하여 개인화된 피드백을 자동으로 생성하는 다양한 시스템이 개발되어 학습자들을 지원하고자 하는 연구가 진행되었다. 프로그래밍 학습과 관련하여서는 학습자의 코드를 검토하고 자동으로 피드백을 줄 수 있는 시스템들이 제시되었다. 이 시스템들은 기계학습, 탐색과 같은 AI 기법을 주로 사용하였고, 학습자의 코드 를 기준 코드와의 유사성을 비교하여 피드백을 제공하였으며, 학습자의 학습을 지원한다. 하지만, 이러한 접근은 단순히 오류를 지적하는 것으로 학습자가 교착 상태에서 해결책을 찾아 나가는 데 실질 적인 도움이 되기 어렵고, 다양한 접근방법에 대한 맞춤형 피드백을 제공하는 데 한계가 있다. 따라서 학습자의 다양한 접근과 변화되는 코드의 양상을 고려한 피드백이 필요하며, 코드와 관련된 학습자의 질문에 대한 응답을 제공할 수 있는 환경에 관한 연구가 필요하다. LLM의 교육적 활용 가능성과 프롬프트 엔지니어링의 필요성 LLM은 방대한 양의 텍스트 데이터를 학습하여 생성되며, 다양한 언어와 주제에 대한 이해를 바탕으로 텍스트 생 성, 질문에 대한 답변, 감정 분석 등 다양한 작업을 수행할 수 있다. 이러한 LLM은 기계 번역, 챗봇, 추천 시스 템 등 다양한 분야에서 활용되며, 더 많은 분야에서의 활용 가능성이 증가하고 있다. 최근 교육 분야에서 AI 기 술을 접목하는 시도들이 점점 활발해지면서 LLM의 교육 분야에서의 활용도 화두가 되고 있으며, 특히 LLM을 기 반으로 한 생성적 AI 챗봇인 ChatGPT가 가져올 교육의 변화에 관심이 집중되고 있다. 이와 같은 LLM은 설정한 프롬프트에 따라서 생성되는 산출물의 결과가 매우 상이하다. 따라서, LLM을 교육적으 로 유의미하게 활용하기 위해서는 목적에 맞는 프롬프트 엔지니어링이 필요하다. LLM은 텍스트뿐 아니라 프로그 래밍 코드와 관련한 태스크에서도 좋은 성능을 보여주어 프로그래밍 수업에 효과적으로 적용될 수 있지만, 적절 한 프롬프트 설정이 이루어지지 않으면 답을 바로 제시하거나 학습 내용과 관련 없는 피드백을 제공하는 등 교 육적인 효과를 얻기 어렵다. 하지만, 이와 같은 LLM 기술을 실제로 어떻게 활용할 수 있을지에 관한 연구는 미 흡한 상태이며, 따라서 학습용 피어 리뷰 시스템 개발에 유용한 프롬프트 프로토콜에 관한 연구가 필요하다. 이하에서는, 본 발명에 대하여 구체적인 설명을 기재한다. 본 발명은 선행 연구 분석, 설계 원리 도출, 설계 및 개발, 사용자 평가 및 개선, 피드백 및 응답의 검증 단계 로 진행되었으며 도 1에 본 발명의 절차가 묘사되어 있다. 연구 방법 우선 선행 연구 분석 단계에서는 피어 리뷰 시스템과 LLM의 교육적 활용에 관한 연구를 분석하였고, 이를 토대 로 설계 원리를 도출하였다. 다음으로 설계와 개발 단계에서는 개발 환경 구축, 모듈 기능 설계 및 구현, UI 설 계 및 기능 통합을 절차에 따라 진행하였다. 다음으로, 개발된 시스템의 유효성을 총 세 차례의 사용자 평가를 통해 검증하였고, 반복적 재설계를 통하여 시스템을 개선하였다. 이후 본 발명에서 제안하는 시스템에서 제공되 는 피드백 및 응답의 적절성을 검증하였다. 설계 원리 도출 LLM 기반 피어 리뷰 프로그래밍 학습 환경을 개발하기 위하여 문헌 연구를 통해 여섯 가지 설계 원리를 도출하 였다. 첫째, \"대화형 피드백 환경의 제공\"이다. 대화형 AI 챗봇 시스템은 익숙한 인터페이스로 학습자들이 쉽게 사용 할 수 있다는 장점이 있다. 따라서, 피어 리뷰 모듈(peer review module)은 챗봇과 채팅하는 형식으로 학습자의 학습을 지원하도록 설계되었다. 둘째, \"일상적인 프로그래밍 환경의 제공\"이다. 학습자들이 본 시스템에서 학습한 이후 전문적인 개발 환경을 접할 때 간극을 느끼지 않도록 비슷한 환경이 구축되어야 한다. 셋째, \"정답 코드 생성 제한\"이다. 정답 코드를 학습자에게 제시한다면 학습자가 스스로 시도할 기회가 제한되 어 학습이 저해될 수 있다. 따라서 피드백 중 정답 코드가 포함되지 않도록 하며, 학습자가 정답을 요청하더라 도 정답 생성이 제한되어야 한다. 넷째, \"문제 풀이 확인 기능 제공\"이다. 풀어본 문제에 대하여 정 오답 여부를 확인하는 과정은 학습에서 중요 한 단계이므로 이를 고려한 설계가 필요하다. 다섯째, \"논리 오류 관련 피드백과 코딩 습관 형성 관련 피드백 제공\"이다. 논리 오류는 에러의 위치를 찾기가 쉽지 않고 수정하기도 어려운 일이다. 학습자는 이러한 로직에 대해 특히나 어려움을 갖고 있을 수 있으며, 이 에 대한 피드백이 제공되면 학습에 더욱 유의미할 것이다. 또한, 적절한 변수 이름의 설정 등과 같은 코딩 습관 이 가능한 피드백이 제공될 수 있도록 설계된다면 효과적인 코딩 습관 형성에 도움이 될 수 있다. 마지막으로, \"단순하고 쉬운 조작이 가능한 구성\"이다. 직관적이고 쉽게 조작할 수 있게 시스템이 설계된다면 학습자들은 별다른 노력 없이도 사용법을 익힐 수 있을 것이다. 설계 및 개발 상술한 바와 같이 도출한 개발 원리를 기반으로 본 시스템을 구축하였다. 개발된 시스템은 백 엔드(Back-end)부 터 프런트 엔드(Front-end)까지 통합적으로 구축되었으며 다양한 개발 환경이 사용되었다. 이와 관련하여, 도 2 에는 본 발명에서 제안하는 시스템 구성과 환경이 도시되어 있다. 백 엔드 부분에는 본 시스템의 핵심 기능을 담당하는 세 가지의 모듈이 포함된다. 먼저, 컴파일러 모듈 (Compiler module)은 가상 환경의 파이썬(Python)을 활용하여 구축될 수 있으며, 학습자가 작성한 코드를 실행 실행시킬 수 있는 모듈이다. 학습자의 코드를 컴파일하고, 결과를 학습자에게 제공하는 일상적인 코드 환경을 제공한다. 코드 체크 모듈(Code check module)은 학습자가 작성한 코드가 잘 작성이 되었는지 채점해 주는 기능을 하며, 미리 입력해둔 테스트 데이터 셋으로 채점이 된다. 코드의 정 오답의 여부는 시각적 도구가 팝업되어 표시될 수 있다.피어 리뷰 모듈(Peer review module)은 대화형 챗봇 형태로 설계되었으며, 소정의 챗봇 모델(예컨대, GPT(Generative Pre-trained Transformer))를 기반으로 프롬프트 엔지니어링을 통해 구축될 수 있다. 이 모듈 은 학습자의 코드에 대한 피드백을 제공하거나 학습자의 질문에 대한 응답을 제공하는 기능을 제공한다. 이 모 듈은 학습자가 정답을 요구할 때는 예시 답안을 제공하지 않도록 설계되었으며, 대화 맥락이 반영되어 학습자의 코드의 변화 양상이 고려된 피드백 및 질의 응답을 제공한다. 데이터베이스 구축에는 MYSQL 등이 활용되어 학습자의 로그데이터를 수집하고 보관할 수 있게 구성될 수 있다. 수집되는 데이터는 학습자가 작성한 코드, 피드백 내용, 질문과 응답 등이 포함된다. 프론트 엔드에서 서버는 가상 머신 환경(예시적으로, google cloud platform의 가상 머신 환경), VPC 네트워크, 인증(authorization)과 방화벽(firewall) 기능 등을 통해 구축될 수 있으며, 웹(Web) 환경 설계에는 React를 이용한 반응형 웹 환경을 기반으로, Antd 기반의 open source를 통해 구축될 수 있다. 사용자 평가 및 개선 본 발명에서 시스템을 검증하기 위하여 사용자 평가를 진행하였다. 총 3차례에 걸친 사용자의 평가가 진행되었 으며, 1차 사용자 평가에는 대학생 4인, 2차 평가에서는 컴퓨터 교육 전공 박사 3인 및 박사과정 2인, 3차 평가 에서는 고등학교 정보 교사 3인으로 총 12인이 참여하였다. 평가는 참여자들이 본 학습 환경을 사용해 본 뒤 개 선 사항에 대한 인터뷰를 통해 진행되었으며, 결과는 시스템 품질, 서비스 품질, 정보 품질 세 가지 영역에 정 리하였고 이에 따라서 본 발명의 시스템 재설계 방향을 정리하였다. 아래 표 1은 사용자 평가 및 개선 방향을 나타낸다. [표 1]"}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "시스템 품질과 관련하여서는 동시접속 문제와 컴파일 할 때마다 피드백과 코드 체크가 자동으로 되어서 오래 기 다려야 하는 문제가 있었다. 이를 개선하기 위하여 학습자가 각 모듈을 개별적으로 사용할 수 있도록 각각의 모 듈을 분리하였다. 또한, 각 모듈을 작동시키는 버튼들이 특정 조건에서만 동작할 수 있도록 재구성하였다. 코드 체크 모듈(code check module)을 활성화하는 버튼과 피어 리뷰 모듈(peer review module)의 피드백 기능을 활 성화하는 버튼은 학습자가 코드를 작성했을 때만 활성화되게 수정되었으며, 코드가 실행되고 있는 동안에는 다 시 비활성화된다. 사용자의 입력을 받는 버튼은 input 함수(input())가 사용되는 경우에만 활성화되도록 수정되 었다.서비스 품질과 관련하여서는 학습자 친화적인 UI로의 개선이 필요하다는 의견이 있었다. 이를 개선하기 위하여 피어 리뷰 모듈(peer review module)로 구현된 대화형 챗봇에 학습자의 친밀감을 유도하기 위한 이미지를 삽입 하였고, 학습자의 채팅 부분에는 학습자의 이름이 표시되도록 수정하였다. 또한, 챗봇이 응답을 생성할 때까지 표시해 주는 로딩 화면을 추가하였다. 국문과 영어가 혼재되어 있던 UI의 언어를 국문으로 통일하였고, 대화형 챗봇 부분은 영어로 변경할 수 있는 옵션을 추가하였다. 그리고 학습 가이드가 더 명확히 될 수 있도록 문제가 잘 보일 수 있는 부분으로 위치를 옮겼으며, 문제에 대한 예시 입력 예시 출력과 예시 코드 구조를 보여주는 팝 업창을 추가하였다. 정보 품질과 관련하여서는 피어 리뷰 모듈(peer review module)이 문법 오류에 대한 피드백이 정확하지 않은 것 을 확인하였고, 피드백의 길이가 너무 길어 가독성이 떨어지는 문제점을 파악하였다. 이를 개선하기 위하여 모 듈의 프롬프트를 수정하였다. 도 3은 개선된 시스템의 구성과 프롬프트 프로토콜을 묘사하고 있다. 먼저, 이 모듈의 역할을 부여하는 프롬프트가 입력될 수 있다. 여기에서 연습 문제(예제)와 예시 답안이 입력되 고, 그 다음으로 이 모듈의 역할과 제한사항이 입력된다. 모듈의 역할로 코드 리뷰와 질의응답이 설정되었으며, 학습자가 이 기능들을 요청할 때까지 대기상태로 기다린다. 각각의 기능은 별도의 프롬프트가 입력되어 응답이 생성된다. 학습자가 코드 작성을 하고 컴파일 및 코드 체크 를 실행하다가 코드 리뷰가 필요하여 이를 요청하는 버튼을 활성화하는 경우, 코드 리뷰를 생성하기 위한 프롬 프트가 자동으로 입력된다. 이 프롬프트에는 먼저 학습자의 코드가 입력되며, 컴파일러 모듈(compiler module) 을 통한 컴파일 결과 혹은 코드 체크 모듈(code check module)을 통해 확인된 정 오답 여부가 입력된다. 그리고 피드백 생성 시 제한사항이 입력되며 마지막으로 이를 요청하는 프롬프트가 입력된다. 제한사항으로 학습자가 문제를 스스로 풀어볼 수 있도록 정답 코드 생성의 제한과 가독성을 위한 미리 정해진(예컨대 3~4줄)의 적절한 분량의 피드백 등이 입력되었다. 또한, 학습자가 코드를 작성하기 전이나 작성하는 중에 궁금한 사항이 있어서 질문을 작성하고 이를 입력하는 버튼을 활성화하는 경우 질문에 대한 응답을 생성하기 위한 프롬프트가 자동으로 입력된다. 이 프롬프트에는 학 습자의 질문이 먼저 입력이 되며, 학습자의 수준을 고려한 응답이 가능하도록 응답에 대한 난이도가 제한사항으 로 입력되고 이에 대한 응답을 요청하는 프롬프트가 입력될 수 있다. 이 모듈은 각각의 응답을 마친 뒤 다시 대기상태로 돌아가는데, 이때 학습자와의 이전 대화 맥락이 계속 반영되 어 학습자의 코드의 변화 양상과 질문 양상이 고려된 응답을 제공하게 된다. 수정된 시스템에 대하여 사용자들은 시스템이 학교 현장 안팎에서 프로그래밍 교육에 적합하다고 평가하였다. 또한, 본 시스템에서 제공하는 피드백과 응답이 프로그래밍 학습에 유용하다고 평가하였으며, LLM을 교육에 접 목하는 데 가이드라인이 될 수 있다고 평가하였다. 피드백 및 응답의 검증과 예시 개발한 시스템의 피드백 및 응답의 적절성을 평가하였다. 평가한 항목은 코드의 오류와 관련하여서는 \"문법 오 류\", \"런타임 오류\", 및 \"논리 오류\"가 포함되었다. 이 오류들에 대한 피드백을 검증하기 위해 각각의 에러가 의도적으로 포함된 코드를 실행시키고 피드백 생성을 하였다. 학습자의 프로그래밍 습관과 관련한 피드백은 \"변수명\", 및 \"불필요한 코드\"가 포함되었으며, \"학습자 질문에 대한 응답\"도 평가되었다. 각각의 피드백 및 응답은 \"적절성\", \"구체성\", \"명확성\", 및 \"유용성\"의 네 가지 평가 준거에 대하여 평가되었 다. \"적절성\"은 학습자가 개선해야 할 부분이나 학습자의 질문 내용과 관련된 적절한 내용의 응답을 하는지 확 인하는 준거이며, \"구체성\"은 피드백과 응답이 구체적으로 제시되어 학습자의 학습을 효과적으로 지원하는지 확 인하는 준거이다. \"명확성\"은 시스템에서 제공하는 피드백 및 응답이 명확하게 제시되어 학습자가 쉽게 읽고 이 해할 수 있는지 확인하는 구인이며, \"유용성\"은 학습자의 학습에 도움이 되는지 확인하는 구인이다. 각각의 구 인은 리커트 5점 척도로 1점 \"전혀 그렇지 않다\", 2점 \"그렇지 않다\", 3점 \"보통이다\", 4점 \"그렇다\", 및 5점 \"매우 그렇다\"로 구성되었다. 사용자 평가에 참여한 교사 3인이 평가를 진행하였으며, 베이스가 된 GPT 모델의 생성적 성격에 따라 항목별로 10회 평가하여 점수의 평균을 구하였다. 표 2에는 이와 같은 방법으로 진행된 평가 결과와 시스템의 응답 예시 가 제시되어 있다.[표 2]"}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "UI 및 실행 예시 도 4는 제안하는 시스템의 UI를 나타내고 있으며, 각 부분의 역할과 기능은 아래와 같다. 학습자가 코드를 작성할 수 있는 공간이다. 주어진 연습문제에 세부 정보를 확인할 수 있는 공간이다. 예시 입력, 예시 출력, 예시 코드의 구조 등이 표시된다. 학습자가 작성한 코드를 실행시키고 중단할 수 있는 버튼이다. 학습자가 작성한 코드의 컴파일 결과를 확인할 수 있는 공간이다. 코드 실행 결과 에러가 발생한다면 발생 한 에러가 출력된다. 학습자가 input() 함수를 사용하는 경우 입력값을 작성하고 제출할 수 있는 기능을 한다. input 함수가 실 행될 때만 해당 기능이 활성화되며 일정 시간이 지나면 자동으로 종료되고 다시 비활성화된다. 코드 체크 모듈(code check module)을 활성화하는 버튼으로 학습자가 작성한 코드를 채점해 주는 기능을 한 다. 피어 리뷰 모듈(peer review module)의 피드백 제공 기능을 활성화하는 버튼이다. 의 \"코드 실행\" 버튼 을 클릭하여 코드 실행이 완료되면 활성화되며, 코드가 실행되고 있는 동안에는 다시 비활성화된다. 피어 리뷰 모듈(peer review module)의 피드백, 학습자의 질문과 그에 대한 응답이 표시되는 공간이다. 그 동안의 누적된 대화 내용이 모두 제시된다. 학습자와 인공지능의 채팅 내용은 구분되어 표기된다. 학습자가 질문을 입력하는 공간이다. 피어 리뷰 모듈(peer review module)의 질의응답 기능을 활성화하는 기능을 하는 버튼이다. 채팅 및 피드백의 언어를 선택하는 기능을 하는 버튼이다. 한편, 도 5는 문제 풀이 및 채점 예시를 나타내고 있으며, 도 6은 대화형 챗봇과의 응답 예시를 나타내고 있다. 도 7은 본 발명의 일 실시예에 따른 피어 리뷰 장치의 기능 블럭도이다. 도 7을 참조하면, 적어도 프로세서(processor) 및/또는 메모리(memory)를 포함하는 컴퓨팅 장치로 구현될 수 있 는 피어 리뷰 장치는 컴파일러 모듈, 코드 체크 모듈, 및 피어 리뷰 모듈을 포함한다. 실시 예에 따라 피어 리뷰 장치는 힌트 제공 모듈 및/또는 저장부를 더 포함할 수 있다. 컴파일러 모듈은, 사용자(또는 학습자)의 요청에 응답하여, 제시된 예제(또는 연습 문제)에 대한 응답으로 사용자로부터 수신된 코드(사용자가 작성한 코드)를 실행하고, 실행 결과를 제공할 수 있다. 즉, 컴파일러 모듈 은 사용자의 코드를, 임의의 컴파일러를 이용하여, 컴파일하고, 컴파일 결과를 피어 리뷰 장치에 포함 될 수 있는 영상 출력 장치를 통하여 출력할 수 있다. 이때, 컴파일 모듈은 소정의 입출력 장치를 통하여 수신된 사용자의 요청(예컨대, 작성한 코드에 대한 실행 요청)에 응답하여 동작할 수 있다. 또한, 작성된 코드 에 input() 함수가 사용된 경우, 컴파일러 모듈은 소정의 입출력 장치를 통해 사용자로부터 입력값을 수신 하고, 컴파일 동작을 수행할 수 있다. 코드 체크 모듈은 사용자의 요청에 응답하여 사용자가 작성한 코드의 정답 여부를 판단하고, 판단 결과를 제공할 수 있다. 즉, 코드 체크 모듈은 사용자의 코드와, 미리 저장되어 있는 예제에 대한 정답을 비교하 고, 비교 결과에 따라 작성된 코드의 정답 여부를 판단할 수 있다. 정답 여부는 영상 출력 장치를 통하여 출력 될 수 있다. 이때, 코드 체크 모듈은 소정의 입출력 장치를 통하여 수신된 사용자의 요청(예컨대, 작성한 코드에 대한 체점 요청)에 응답하여 동작할 수 있다. 피어 리뷰 모듈은 사용자가 작성한 코드에 대한 피드백 및/또는 사용자의 질의에 대한 응답을 생성하고, 생성된 피드백 및/또는 응답을 제공할 수 있다. 구체적으로, 피어 리뷰 모듈은, 사용자의 요청에 응답하여, 컴파일 결과 및/또는 코드 체크의 결과에 대한 피드백을 제공할 수 있다. 일 예로, 컴파일 결과가 \"Error: name 'foat' is not defined, <class 'NameError'>\"일 경우, 사용자는 컴파일 결과에 대한 피드백(상 세 설명, 쉬운 설명, 서술형 설명 등을 의미할 수 있음)을 요청할 수 있다. 이때, 피어 리뷰 모듈은 거대 언어모델(Large Language Model, LLM), 예컨대 GPT를 이용하여 피드백을 생성할 수 있다. 이를 위해, 피어 리뷰 모듈은, 소정의 입출력 장치를 통해 수신되는 사용자의 피드백 요청에 응답하여, <작성된 코드(student's code)>, <컴파일 결과 또는 코드 체크 결과(result)>, <제한사항(restriction)>, 및 <쿼리(query)> 중 적어도 하나 이상으로 구성되는 프롬프트(prompt)를 생성하고, 생성된 프롬프트에 대응하는 LLM의 응답을 도출할 수 있 다. 여기서, <제한사항>은, 사용자가 문제를 스스로 풀어볼 수 있도록, 정답 코드 생성의 제한 및/또는 피드백 에 대한 미리 정해진 분량(예컨대, 3~4줄 분량의 피드백)일 수 있다. 또한, <쿼리>는 작성한 코드에 대한 리뷰 (피드백)에 대한 요청을 의미할 수 있다. 피드백은 피어 리뷰 장치의 영상 출력 장치를 통해 제공될 수 있 다. 또한, 피어 리뷰 모듈은, 사용자의 요청(질의에 대한 응답 요청으로, 사용자의 질의를 포함할 수 있음)에 응답하여, 사용자의 질의에 대한 응답을 생성하고, 생성된 응답을 제공할 수 있다. 이 경우, 피어 리뷰 모듈 은 LLM(예컨대, GPT)를 기반으로 응답을 생성할 수 있다. 이를 위해, 피어 리뷰 모듈은 <질의 (student's question)>, <제한사항(restriction)>, 및 쿼리(query)> 중 적어도 하나 이상으로 구성되는 프롬프 트를 생성하고, 생성된 프롬프트에 대응하는 LLM의 응답을 도출할 수 있다. 여기서, <제한사항>은 사전에 설정 된 응답에 대한 난이도일 수 있으며, <쿼리>는 질의에 대한 응답 요청을 의미할 수 있다. 응답은 피어 리뷰 장 치의 영상 출력 장치를 통해 제공될 수 있다. 피어 리뷰 모듈은 사전학습되고 미세조정된 LLM(예컨대, GPT)를 이용하여 피드백 및/또는 응답을 생성할 수 있다. 실시예에 따라, 피어 리뷰 모듈의 설정 동작을 포함할 수 있다. 예컨대, <예제(exercise)>, <역 할(role)>, <제한사항(restriction)>, 및 <쿼리(query)> 중 적어도 하나를 포함하는 프롬프트를 생성나, 및/또 는 생성된 프롬프트를 LLM에 입력함으로써, LLM에 대한 설정 동작을 수행할 수 있다. 여기서, <예제>는 예제 뿐 만 아니라 예시 답안을 포함하는 개념으로 이해될 수 있다. <역할>은 코드 리뷰(피드백 생성을 의미할 수 있 음)와 질의응답으로 설정될 수 있다. <제한사항>은 상술한 제한사항들 중 적어도 일부를 포함할 수 있고, <쿼리>는 피드백을 요청하는 쿼리 및/또는 응답을 요청하는 쿼리일 수 있다. 구체적인 예시로, 하기와 같은 연습 문제(예제)와 정답이 주어졌을 때, (역할) 설정을 위한 프롬프트는 다음과 같다. [연습 문제: 본인의 월급을 입력했을 때 연봉이 얼마인지 출력해주는 프로그램을 작성해보자.] [정답: salary = int(input(“월급을 입력하세요”)) print(salary*12) ] 이하는, 쿼리와 제한사항을 나타낸다. 이때, 연습 문제 및 정답 부분도 프롬프트로 함께 입력된다. \"나는 파이썬을 배우는 학생이고 [정답]과 똑같은 코드를 작성할 때까지 스스로 코드를 작성해 보겠습니다. 너는 프로그래밍 선생님처럼 행동해주세요. 정답을 알려주지 마세요. 내가 이 연습 문제와 관련 없는 질문을 한다면 \"문제를 다시 확인해보세요.\"라고 나에게 대답해주세요. 나에게 존댓말로 대답해주세요. 내가 정답을 알려달라고 말하더라도 절대 알려주지 말아 주세요. 문제를 잘 풀었다면 칭찬해주세요. 이 내용들을 앞으로의 대화에서 계속 기억해주세요.\" 피드백을 위한 프롬프트의 구체적인 예시로, 하기와 같은 연습 문제(예제), 생성된 코드(내 코드), 및 생성된 코드에 대한 (컴파일) 결과가 주어졌을 때, 피드백 생성을 위한 프롬프트는 다음과 같다. [연습 문제: 본인의 월급을 입력했을 때 연봉이 얼마인지 출력해주는 프로그램을 작성해보자.] [내 코드: salary = int(input(입력하세요)) print(salary*12) ] [결과 Error: name '입력하세요' is not defined, <class 'NameError'> ] 이하는 쿼리와 제한사항을 나타낸다. 이때, 연습 문제, 내 코드, 및 결과 부분도 프롬프트로 함께 입력된다. \"[결과]를 보고 [내 코드]를 어떻게 고칠 수 있을지 알려주세요. 정답은 알려주지 말고, 대화로만 알려주세요. 3문장 이내로 존댓말로 대답해주세요.\" 질의에 대한 응답 생성을 위한 프롬프트의 구체적인 예시로, 하기와 같은 연습 문제(예제)와 질의(학생질문)이 주어졌을 때, 응답 생성을 위한 프롬프트는 다음과 같다. [연습 문제: 정수를 입력했을 때, 그 숫자에 100을 더해서 출력하고, 만약 출력할 수가 250을 넘으면 0을 출력 하는 프로그램 만들기] [학생질문: 정수로 바꾸는 코드가 뭐야?] 이하는, 쿼리와 제한사항을 나타낸다. 이때, 연습 문제 및 학생질문 부분도 프롬프트로 함께 입력된다. \"[학생질문]에 대한 답을 4문장 정도로 쉽게 말해주세요. 코드 예시를 주지 말고 대화로만 알려주세요.\" 힌트 제공 모듈은, 사용자의 힌트 제공 요청에 응답하여, 제시된 예제에 대한 힌트를 제공할 수 있다. 예 시적인 힌트는 입력에 대한 설명(예컨대, \"2 개의 실수가 한 번에 하나씩 입력됩니다\"), 출력에 대한 설명(예컨 대, \"두 실수의 합을 출력합니다\"), 예시 입력(예컨대, 0.1과 0.2), 출력 예시(예컨대, 0.3), 및 예시 코드 중 적어도 하나를 포함할 수 있다.저장부에는 피어 리뷰 장치의 동작에 필요한 운영체제(Operating System, OS), 프로그램, 소스코드, 어플리케이션 등이 저장될 수 있다. 또한, 저장부에는 제시되는 예제, 예제에 대한 정답 코드, 예제에 대 한 힌트, 컴파일러 모듈에 의한 컴파일의 결과, 코드 체크 모듈에 의한 코드 체크의 결과, 피어 리뷰 모듈이 이용하는 LLM, 피어 리뷰 모듈에 의해 생성된 피드백, 응답 등이 저장될 수 있다. 도 7에 도시된 피어 리뷰 장치의 구성들 각각은 기능 및 논리적으로 분리될 수 있음으로 나타내는 것이며, 반드시 각각의 구성이 별도의 물리적 장치로 구분되거나 별도의 코드로 작성됨을 의미하는 것이 아님을 본 발명"}
{"patent_id": "10-2023-0071001", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "의 기술분야의 평균적 전문가는 용이하게 추론할 수 있을 것이다. 또한, 본 명세서에서 \"~ 모듈\" 이나 \"~ 부\"라 함은, 본 발명의 기술적 사상을 수행하기 위한 하드웨어 및 상기 하드웨어를 구동하기 위한 소프트웨어의 기능적, 구조적 결합을 의미할 수 있다. 예컨대, 상기 모듈은 소정의 코드와 상기 소정의 코드가 수행되기 위한 하드웨어 리소스의 논리적인 단위를 의미할 수 있으며, 반드시 물리 적으로 연결된 코드를 의미하거나, 한 종류의 하드웨어를 의미하는 것이 아니다. 이상에서 설명된 장치는 하드웨어 구성 요소, 소프트웨어 구성 요소, 및/또는 하드웨어 구성 요소 및 소프트웨 어 구성 요소의 집합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성 요소는, 예를 들어, 프로세서, 콘트롤러, ALU(Arithmetic Logic Unit), 디지털 신호 프로세서(Digital Signal Processor), 마이크 로컴퓨터, FPA(Field Programmable array), PLU(Programmable Logic Unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(Operation System, OS) 및 상기 운영 체제 상에서 수행되는 하나 이상의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응 답하여, 데이터를 접근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사 용되는 것으로 설명된 경우도 있지만, 해당 기술 분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처 리 요소(Processing Element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서 (Parallel Processor)와 같은, 다른 처리 구성(Processing Configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(Computer Program), 코드(Code), 명령(Instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (Collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성 요소(Component), 물리적 장치, 가상 장치(Virtual Equipment), 컴퓨터 저장 매체 또는 장치, 또는 전송되는 신호 파(Signal Wave)에 영구적으로, 또는 일시적으로 구체화(Embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매 체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(Magnetic Media), CD- ROM, DVD와 같은 광기록 매체(Optical Media), 플롭티컬 디스크(Floptical Disk)와 같은 자기-광 매체 (Magneto-optical Media), 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계 어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다. 상 기된 하드웨어 장치는 실시예의 동작을 수행하기 위해 하나 이상의 소프트웨어 모듈로서 작동하도록 구성될 수 있으며, 그 역도 마찬가지이다. 본 발명은 도면에 도시된 실시예를 참고로 설명되었으나 이는 예시적인 것에 불과하며, 본 기술 분야의 통상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시예가 가능하다는 점을 이해할 것이다. 예를 들어, 설명된 기술들이 설명된 방법과 다른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성 요소들이 설명된 방법과 다른 형태로 결합 또는 조합되거나, 다른 구성 요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 따라서, 본 발명의 진정한 기술적 보호 범위는 첨부된 등록청구범 위의 기술적 사상에 의해 정해져야 할 것이다.부호의 설명 10 : 피어 리뷰 장치 110 : 컴파일러 모듈 120 : 코드 체크 모듈 130 : 피어 리뷰 모듈 140 : 힌트 제공 모듈 150 : 저장부"}
{"patent_id": "10-2023-0071001", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 상세한 설명에서 인용되는 도면을 보다 충분히 이해하기 위하여 각 도면의 상세한 설명이 제공된다. 도 1은 본 발명을 위한 연구의 절차를 도시한다. 도 2는 본 발명에서 제안하는 시스템 구성과 환경을 도시한다. 도 3은 개선된 시스템의 구성과 프롬프트 프로토콜을 묘사하고 있다. 도 4는 제안하는 시스템의 UI를 도시한다. 도 5는 문제 풀이 및 채점 예시를 도시한다. 도 6은 대화형 챗봇과의 응답 예시를 도시한다. 도 7은 본 발명의 일 실시예에 따른 피어 리뷰 장치의 기능 블럭도이다."}
