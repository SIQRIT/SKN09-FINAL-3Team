{"patent_id": "10-2020-0097391", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0017193", "출원번호": "10-2020-0097391", "발명의 명칭": "전자 장치 및 전자 장치가 외부 장치 디스플레이 상에 어플리케이션 화면을 제공하는 방법", "출원인": "삼성전자주식회사", "발명자": "이경렬"}}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,디스플레이;통신 인터페이스;메모리; 및상기 디스플레이, 상기 통신 인터페이스, 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고,상기 프로세서는,상기 통신 인터페이스를 통해 외부 장치와의 연결을 확인하고,상기 외부 장치로부터 제1태스크의 실행 요청을 수신하고,상기 제1태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크를 실행하고, 상기 제1태스크의 실행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외부 장치에 전송하고, 및상기 제1태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신하고,상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크를 실행하고, 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외부 장치에 전송하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1항에 있어서,상기 프로세서는,상기 제1태스크에서 생성되는 제1이미지 정보를 압축하는 제1인코더, 상기 제1이미지 정보를 기록하는 제1입력서피스 및 상기 제1가상 화면을 제1컨테이너로 구성하고,상기 제2태스크에서 생성되는 제2이미지 정보를 압축하는 제2인코더, 상기 제2이미지 정보를 기록하는 제2입력서피스 및 상기 제2가상 화면을 제2컨테이너로 구성하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1항에 있어서,상기 프로세서는,상기 제1가상 화면의 식별 정보를 생성하여, 상기 제1가상 화면과 같이 상기 외부 장치에 전송하고, 및상기 제2가상 화면의 식별 정보를 생성하여, 상기 제2가상 화면과 같이 상기 외부 장치에 전송하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2022-0017193-3-제 3항에 있어서,상기 프로세서는,상기 외부 장치로부터 가상 화면에 대한 입력 이벤트가 수신되는 경우, 상기 입력 이벤트에 포함된 식별 정보를이용하여 상기 제1태스크 또는 상기 제2태스크에서 상기 입력 이벤트를 처리하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1항에 있어서,상기 프로세서는,상기 외부 장치로부터 상기 제1가상 화면에서 제3태스크를 실행 시키는 인텐트(intent)가 수신되는 경우, 상기제3태스크에 대응하는 가상 화면을 확인하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5항에 있어서,상기 프로세서는,상기 제3태스크에 대응하는 가상 화면이 생성되지 않은 경우, 상기 제3태스크의 실행 화면을 포함하는 제3가상화면을 생성하여 상기 외부 장치에 전송하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5항에 있어서,상기 프로세서는,상기 제3태스크에 대응하는 가상 화면이 생성되어 있는 경우, 상기 제3태스크를 포그라운드에서 동작시키도록설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 5항에 있어서,상기 프로세서는,상기 제3태스크의 실행 화면이 상기 디스플레이 상에 표시되고 있는 경우, 상기 디스플레이 상에서 상기 제3태스크의 실행 화면의 표시를 중단하고, 상기 제3태스크의 실행 화면을 포함하는 제3가상 화면을 생성하여 상기외부 장치에 전송하거나, 또는상기 디스플레이 상에 표시 중인 상기 제3태스크의 실행 화면을 상기 외부 장치에 전송하도록 설정된 전자장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1항에 있어서,상기 프로세서는,상기 외부 장치로부터 제3태스크의 실행 요청을 수신하는 경우, 상기 제1가상 화면 및 상기 제2가상 화면을 포함하는 생성된 가상 화면의 개수를 확인하고,공개특허 10-2022-0017193-4-상기 가상 화면의 개수가 최대 개수를 초과하는 경우, 상기 생성된 가상 화면 중 적어도 하나를 종료 하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9항에 있어서,상기 가상 화면의 최대 개수는,상기 프로세서 및 상기 메모리에 대응하여 미리 할당 되거나, 또는상기 프로세서가 상기 프로세서 및 상기 메모리의 가용 리소스, 상기 전자 장치의 온도, 상기 통신 인터페이스를 통해 상기 외부 장치에 전송하는 데이터의 전송 속도 중 적어도 하나에 기반하여 결정하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9항에 있어서,상기 프로세서는,상기 가상 화면의 개수가 상기 최대 개수를 초과하는 경우, 상기 가상 화면을 구성하는 태스크 중 비활성화 된 시간이 가장 오래된 태스크에 대응하는 가상 화면을 종료 하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 9항에 있어서,상기 프로세서는,상기 가상 화면 중 적어도 하나를 종료 시키는 경우,상기 태스크의 종료 원인 정보를 상기 외부 장치에 전송하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 1항에 있어서,상기 통신 인터페이스는,Wi-Fi Direct를 통해 상기 외부 장치와 무선 연결을 수립하도록 설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "전자 장치가 외부 장치의 디스플레이 상에 화면을 제공하는 방법에 있어서,상기 외부 장치와의 연결을 확인하는 동작;상기 외부 장치로부터 제1태스크의 실행 요청을 수신하는 동작;상기 제1태스크의 실행 요청에 응답하여, 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크를실행하고, 상기 제1태스크의 실행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외부장치에 전송하는 동작;공개특허 10-2022-0017193-5-상기 제1태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신하는 동작; 및상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크를 실행하고, 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외부 장치에 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 14항에 있어서,상기 제1가상 화면을 생성하는 동작은,상기 제1태스크에서 생성되는 제1이미지 정보를 압축하는 제1인코더, 상기 제1이미지 정보를 기록하는 제1입력서피스 및 상기 제1가상 화면을 제1컨테이너로 구성하는 동작을 포함하는 방법."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 15항에 있어서,상기 제1가상 화면을 상기 외부 장치에 전송하는 동작은상기 제1가상 화면의 식별 정보를 생성하여, 상기 제1가상 화면과 같이 상기 외부 장치에 전송하는 동작을 포함하고,상기 제2가상 화면을 상기 외부 장치에 전송하는 동작은상기 제2가상 화면의 식별 정보를 생성하여, 상기 제2가상 화면과 같이 상기 외부 장치에 전송하는 동작을 포함하는 방법."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 16항에 있어서,상기 외부 장치로부터 가상 화면에 대한 입력 이벤트가 수신되는 경우, 상기 입력 이벤트에 포함된 식별 정보를이용하여 상기 제1태스크 또는 상기 제2태스크에서 상기 입력 이벤트를 처리하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 14항에 있어서,상기 외부 장치로부터 제3태스크의 실행 요청을 수신하는 경우, 상기 제1가상 화면 및 상기 제2가상 화면을 포함하는 생성된 가상 화면의 개수를 확인하는 동작; 및상기 가상 화면의 개수가 최대 개수를 초과하는 경우, 상기 생성된 가상 화면 중 적어도 하나를 종료 하는 동작을 포함하는 방법."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "전자 장치에 있어서,디스플레이;통신 인터페이스; 및상기 디스플레이 및 상기 통신 인터페이스와 작동적으로(operatively) 연결되는 프로세서를 포함하고,공개특허 10-2022-0017193-6-상기 프로세서는,상기 통신 인터페이스를 통해 외부 장치와 연결을 확인하고,상기 외부 장치에서 실행될 수 있는 제1태스크를 실행하기 위한 제1사용자 입력에 응답하여, 상기 제1태스크의실행 요청을 상기 외부 장치에 전송하고,상기 외부 장치로부터 상기 제1태스크의 실행 화면을 포함하는 제1가상 화면을 수신하고,상기 외부 장치에서 실행될 수 있는 제2태스크를 실행하기 위한 제2사용자 입력에 응답하여, 상기 제2태스크의실행 요청을 상기 외부 장치에 전송하고,상기 외부 장치로부터 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 수신하고, 및상기 디스플레이 상에서, 상기 제1가상 화면 및 상기 제2가상 화면을 서로 다른 윈도우 상에 표시하도록 설정된전자 장치."}
{"patent_id": "10-2020-0097391", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19항에 있어서,상기 프로세서는,상기 제1가상 화면의 윈도우 상에서 제3사용자 입력이 감지되는 경우,상기 제1가상 화면의 식별 정보와 함께 상기 제3사용자 입력에 대응하는 이벤트를 상기 외부 장치에 전송하도록설정된 전자 장치."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 인터페이스, 메모리, 및 상기 디스플레이, 상기 통신 인터 페이스, 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 통신 인터페이스를 통해 외부 장치와의 연결을 확인하고, 상기 외부 장치로부터 제1태스크의 실행 요청을 수신하고, (뒷면에 계속)"}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 문서는 전자 장치에 관한 것이며, 예를 들어 전자 장치가 어플리케이션을 실행하여 외부 장치의 디스플레이 상에 어플리케이션의 화면을 제공할 수 있는 방법에 대한 것이다."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "무선통신 기술 및 프로세서 기술의 발달에 따라, 스마트폰으로 대표 되는 휴대용 전자 장치(이하, 전자 장치)는 통화 기능에서 나아가 다양한 기능을 탑재하게 되었다. 예를 들어, 전자 장치는 다양한 어플리케이션을 실행하 여 전자 장치의 디스플레이를 통해 어플리케이션 화면을 제공할 수 있다. 전자 장치는 사용자가 휴대 가능하도록 하기 위해 비교적 작은 크기의 디스플레이를 가질 수 있다. 이에, 전자 장치는 전자 장치에서 실행된 어플리케이션 화면을 보다 큰 디스플레이를 갖는 외부 장치에 전송하여, 외부 장 치의 디스플레이에서 어플리케이션 화면을 제공하도록 하는 미러링(mirroring) 기능을 구비할 수 있다. 또한, 어플리케이션의 실행 화면을 단순히 외부 장치의 디스플레이로 전송하는 것 이외에, PC(personal computer) 환 경에서 전자 장치의 어플리케이션에 대한 사용자 인터페이스를 제공하고, PC 환경에서 사용자 입력으로 전자 장 치의 어플리케이션 실행과 같은 동작을 제어하는 서비스도 개발되고 있다."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "종래의 화면 공유 서비스들은 전자 장치에 표시 중인 화면을 외부 장치의 디스플레이 상에 그대로 표시하거나, 외부 장치에서 제공하는 하나의 윈도우 상에서 전자 장치의 어플리케이션 화면을 제공할 수 있다. 본 문서의 다양한 실시예들은 전자 장치에서 실행되는 복수 개의 태스크(task) 또는 어플리케이션 화면을 동시 에 외부 장치의 디스플레이 상에서 제공할 수 있도록 하는데 그 목적이 있다."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 인터페이스, 메모리, 및 상기 디스플레이, 상기 통신 인 터페이스, 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 통신 인터페이스를 통해 외부 장치와의 연결을 확인하고, 상기 외부 장치로부터 제1태스크의 실행 요청을 수신 하고, 상기 제1태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크 를 실행하고, 상기 제1태스크의 실행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외 부 장치에 전송하고, 및 상기 제1태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신 하고, 상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크 를 실행하고, 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외 부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따른 전자 장치가 외부 장치의 디스플레이 상에 화면을 제공하는 방법은, 상기 외부 장치와의 연결을 확인하는 동작, 상기 외부 장치로부터 제1태스크의 실행 요청을 수신하는 동작, 상기 제1태스크의 실행 요청에 응답하여, 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크를 실행하고, 상기 제1태스크의 실 행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외부 장치에 전송하는 동작, 상기 제1 태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신하는 동작, 및 상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크를 실행하고, 상기 제2태 스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외부 장치에 전송하는 동작 을 포함할 수 있다. 다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 인터페이스, 및 상기 디스플레이 및 상기 통신 인터페이 스와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 통신 인터페이스를 통해 외부 장치와 연결을 확인하고, 상기 외부 장치에서 실행될 수 있는 제1태스크를 실행하기 위한 제1사용자 입력 에 응답하여, 상기 제1태스크의 실행 요청을 상기 외부 장치에 전송하고, 상기 외부 장치로부터 상기 제1태스크 의 실행 화면을 포함하는 제1가상 화면을 수신하고, 상기 외부 장치에서 실행될 수 있는 제2태스크를 실행하기 위한 제2사용자 입력에 응답하여, 상기 제2태스크의 실행 요청을 상기 외부 장치에 전송하고, 상기 외부 장치로 부터 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 수신하고, 및 상기 디스플레이 상에서, 상기 제1 가상 화면 및 상기 제2가상 화면을 서로 다른 윈도우 상에 표시하도록 설정될 수 있다."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 문서의 다양한 실시예에 따르면, 전자 장치에서 실행되는 복수 개의 태스크(task) 또는 어플리케이션 화면을 동시에 외부 장치의 디스플레이 상에서 제공할 수 있다. 또한, 본 문서의 다양한 실시예들은 복수 개의 태스크 또는 어플리케이션 화면을 외부 장치 상에서 제공하기 위 해, 화면 생성 및 제어, 실행되는 어플리케이션의 관리, 사용자 입력의 처리 및/또는 전자 장치의 리소스 관리 를 위한 방법을 제공할 수 있다. 이 외에, 본 문서를 통해 직접적으로 또는 간접적으로 파악되는 다양한 기술적 효과들이 제공될 수 있다."}
{"patent_id": "10-2020-0097391", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 1, "content": "도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또 는 서버와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출 력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈 , 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에 서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성 요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메 모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자 체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공 지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워 크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지 능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다.상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용 한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되 지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적 으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 이하 본 문서에서는 어플리케이션을 실행하고 어플리케이션 화면을 전송하는 장치를 제1전자 장치 또는 소스 장 치로 정의하고, 어플리케이션 화면을 수신하여 자신의 디스플레이 또는 연결된 다른 디스플레이 장치 상에 출력 하는 장치를 제2전자 장치 또는 싱크 장치로 정의하기로 한다. 실제 구현 형태에 따라 동일한 장치가 본 문서 상의 제1전자 장치로 동작할 수도 있고, 제2전자 장치로 동작할 수도 있다. 도 2는 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치의 예를 도시한 것이다. 본 문서의 다양한 실시예에서 제1전자 장치(예: 도 1의 전자 장치)는 스마트 폰, 태블릿 PC와 같은 휴대용 전자 장치로 구현될 수 있고, 제2전자 장치는 데스크톱(desktop) PC, 랩톱 PC와 같은 컴퓨팅 장치 로 구현될 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 메모리에 어플리케이션을 저장 및 실행할 수 있다. 예를 들어, 제1전자 장치는 인터넷 브라우저, 갤러리, 메시지, 게임과 같은 다양한 어플리케이션을 실행하고, 어플리 케이션의 실행 화면을 제1전자 장치의 디스플레이 상에 제공할 수 있다. 다양한 실시예에 따르면, 제2전자 장치는 제1전자 장치와 독립적인 프로세서, 메모리 및 운영 체제를 통해 어플리케이션을 실행할 수 있다. 제2전자 장치는 데스크톱 PC와 같이 별도의 디스플레이(예: 모니 터)를 통해 어플리케이션 화면을 출력하거나, 랩톱 PC와 같이 디스플레이와 일체형으로 마련될 수 있다. 다양한 실시예에 따르면, 제1전자 장치와 제2전자 장치는 유선 또는 무선 통신을 통해 서로 연결될 수 있다. 예를 들어, 제1전자 장치 및 제2전자 장치는 HDMI(high definition multimedia interface), USB(universal serial bus)와 같은 유선 인터페이스를 통해 서로 연결될 수 있고, Wi-Fi direct, Bluetooth와 같은 근거리 무선 통신 네트워크를 통해 서로 연결될 수 있다. 다양한 실시예에 따르면, 제1전자 장치 및 제2전자 장치가 유선 또는 무선 통신으로 연결되는 경우, 화면 공유 서비스를 제공할 수 있다. 본 문서에서 설명하는 화면 공유 서비스는 제1전자 장치의 어플리케 이션을 제1전자 장치에서 실행하되, 제2전자 장치는 가상화 기술을 이용하여 제1전자 장치의 어 플리케이션을 제2전자 장치의 디스플레이 상에 표시하고, 어플리케이션에 대한 사용자 입력을 제1전자 장 치 상에 제공하는 방식의 서비스 또는 기능 일 수 있다. 예를 들어, 화면 공유 서비스는 DeX(desktop experience), MS Link to Windows와 같이 휴대용 전자 장치의 어플리케이션을 PC 환경에서 사용할 수 있도록 하 는 서비스 또는 기능일 수 있다. 다양한 실시예에 따르면, 제1전자 장치와 제2전자 장치가 유선 또는 무선 인터페이스를 통해 연결되 는 경우, 제1전자 장치는 제1전자 장치의 프로세서 및 메모리에 의해 생성된 어플리케이션 실행 화면을 제2전자 장치로 전송할 수 있다. 제2전자 장치는 제1전자 장치로부터 수신한 어플리케이션 실행 화면을 표시하고, 어플리케이션에 대한 사용자 입력을 제1전자 장치에 전송할 수 있다. 예를 들 어, 제1전자 장치와 제2전자 장치가 연결되는 경우, 제2전자 장치는 화면 공유 서비스를 위한 어플리케이션을 실행하고, 제1전자 장치로부터 어플리케이션 리스트 정보를 수신하여 제1전자 장치의 어플리케이션에 대응하는 아이콘들을 제2전자 장치의 디스플레이(또는 제2전자 장치와 연결된 디스플 레이) 상에 표시할 수 있다. 제2전자 장치는 아이콘에 대한 사용자 입력을 제1전자 장치로 전송하고, 제1전자 장치는 사용자 입력에 따라 해당 어플리케이션을 실행하여, 어플리케이션 실행 화면을 제2전자 장 치에 전송할 수 있다. 제2전자 장치의 디스플레이 상에 어플리케이션 화면이 표시되는 동안, 제 2전자 장치는 어플리케이션 화면이 제공되는 윈도우 상의 사용자 입력을 제1전자 장치에 실시간으로 전송하고, 제1전자 장치는 수신한 사용자 입력에 기반하여 어플리케이션을 제어할 수 있다. 다양한 실시예에 따르면, 제1전자 장치에서 복수의 어플리케이션 또는 태스크(task)가 실행되는 경우, 제2 전자 장치의 디스플레이 상에서 각각의 어플리케이션 또는 태스크의 실행 화면이 별도의 윈도우를 통해 제 공될 수 있다. 도 3a 다양한 실시예에 따른 화면 공유 시 가상 화면을 생성하는 데 사용되는 제1전자 장치의 구성을 도시한 것 이다. 다양한 실시예에 따르면, 제1전자 장치는 어플리케이션에서 생성된 화면을 제2전자 장치에 전송하기 위해 가상 화면(virtual display)을 구성할 수 있다. 도 3a를 참조 하면, 제1전자 장치는 가상 화면 을 구성하기 위한 소프트웨어 컴포넌트로 서피스 플린저(surface flinger), 비디오 인코더 (video encoder), 입력 서피스(input surface) 및 디스플레이 매니저(display manager)를 포함 할 수 있다. 다양한 실시예에 따르면, 디스플레이 매니저는 화면 공유 서비스를 위해 어플리케이션에서 생성되는 데이 터를 가상 화면으로 구성하는 역할을 수행할 수 있다. 가상 화면은 가상의 디스플레이 장치로서, 하 나의 서피스(surface)를 가질 수 있고, 서피스에는 화면의 정보가 그려질 수 있다. 비디오 인코더는 전송 효율을 높이기 위해 어플리케이션에서 생성되는 데이터를 압축할 수 있다. 다양한 실시예에 따르면, 화면 공유 서비스가 개시되면, 디스플레이 매니저는 가상 화면을 생성한다. 디스플레이 매니저는 비디오 인코더를 생성하고, 비디오 인코더의 입력 서피스를 가상 화 면의 서피스로 지정할 수 있다. 여기서, 가상 화면의 서피스는 비디오 인코더의 입력 서피스 이기 때문에, 이 서피스에 내용이 업데이트 되면, 이 데이터가 비디오 형태로 압축되어, 출력 버퍼를 통 해 출력될 수 있다. 제1전자 장치는 이와 같이 비디오 인코딩 된 데이터를 제2전자 장치에 전송할 수 있다. 도 3b는 다양한 실시예에 따른 화면 공유 시 가상 화면을 수신하여 출력하는 데 사용되는 제2전자 장치의 구성 을 도시한 것이다. 도 3a를 참조 하면, 제2전자 장치는 제1전자 장치로부터 수신되는 가상 화면을 출력하는데 사용 되는 소프트웨어 컴포넌트로 서피스 뷰(surface view), 비디오 디코더(video decoder), 출력 서피스 (output surface)를 포함할 수 있다. 다양한 실시예에 따르면, 제1전자 장치로부터 화면 공유 데이터가 전송되는 경우, 제2전자 장치는 컨 텐츠의 재생을 위해 서피스 뷰(surface view)를 생성할 수 있다. 제1전자 장치로부터 전송되는 데이 터는 압축 된 데이터이기 때문에, 제2전자 장치는 이를 다시 원본 데이터로 변경하기 위해 비디오 디코더 를 생성하고, 비디오 디코더로부터 출력 서피스를 획득할 수 있다. 제1전자 장치로부터 전송되는 데이터가 비디오 디코더의 입력 버퍼로 입력되면, 구성된 파이프라인 (pipeline)을 통해 화면 데이터가 서피스 뷰에 그려질 수 있으며, 이에 따라 제1전자 장치에서 전송 되는 어플리케이션 화면이 제2전자 장치 상에서 출력될 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 복수의 어플리케이션 또는 태스크(task)의 실행 화면을 독립적으 로 제공하기 위해, 각 어플리케이션 또는 태스크에 의해 생성되는 가상 화면을 구성하기 위한 비디오 인코 더, 입력 서피스, 가상 화면을 하나의 컨테이너(container)로 구성할 수 있다. 또한, 제2전자장치는 이에 대응하여, 비디오 디코더, 출력 서피스, 서피스 뷰를 하나의 컨테이너로 구성 할 수 있다. 제1전자 장치 및 제2전자 장치에서 각 어플리케이션 또는 태스크 별로 독립적인 컨테이 너를 구성하는 특징에 대해서는 도 8을 통해 보다 상세히 설명하기로 한다. 도 4는 다양한 실시예에 따른 제1전자 장치의 블록도이다. 도 4를 참조 하면, 제1전자 장치(예: 도 2의 제1전자 장치)는 제1디스플레이, 제1통신 인터페이 스, 제1메모리, 제1프로세서를 포함하며, 도시된 구성 중 적어도 일부가 생략 및/또는 치환되더 라도 본 문서의 다양한 실시예들을 구현할 수 있다. 제1전자 장치는 도 1의 전자 장치의 구성 및/또 는 기능 중 적어도 일부를 더 포함할 수 있다. 도 4에 도시된 구성 및/또는 도시되지 않은 제1전자 장치의 다른 구성 중 일부 구성(예: 제1프로세서 , 메모리, 제1통신 인터페이스)는 제1전자 장치의 하우징(housing)(미도시) 내부에 배치될 수 있고, 일부 구성(예: 제1디스플레이, 제1통신 인터페이스)은 그 적어도 일부가 하우징의 외부로 노출될 수 있다. 다양한 실시예에 따르면, 제1디스플레이는 영상을 표시하며, 액정 디스플레이(liquid crystal display(LCD)), 발광 다이오드(light-emitting diode(LED)) 디스플레이, 유기 발광 다이오드(organic light- emitting diode(OLED)) 디스플레이, 또는 마이크로 전자기계 시스템(micro electro mechanical systems(MEMS)) 디스플레이, 또는 전자종이(electronic paper) 디스플레이 중 어느 하나로 구현될 수 있으나, 이에 한정되 지는 않는다. 다양한 실시예에 따르면, 제1디스플레이는 적어도 일부가 접힐 수 있는 폴더블(foldable) 디 스플레이(예: 인-폴더블(in-foldable) 디스플레이, 아웃-폴더블(out-foldable) 디스플레이)이거나, 적어도 일부 가 감길 수 있는 롤러블(rollable) 디스플레이일 수 있다. 또는 제1전자 장치는 서로 독립적인 2 이상의 디스플레이를 포함할 수 있다. 제1디스플레이는 도 1의 디스플레이 모듈의 구성 및/또는 기능 중 적 어도 일부를 포함할 수 있다. 다양한 실시예에 따르면, 제1통신 인터페이스는 외부 장치(예: 도 2의 제2전자 장치)와의 유선 또는 무선 통신 연결을 지원할 수 있으며, 제1전자 장치는 유선 통신 인터페이스 또는 무선 통신 인터페이스 중 하나만 포함할 수도 있다. 예를 들어, 제1통신 인터페이스는 유선 통신 인터페이스(예: 도 1의 인터페이스)의 예로써, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스를 포함할 수 있다. 또한, 제1통신 인터페이스는 외부 장치와 근거리 통신 모듈을 지원하는 무선 통신 모듈(예: 도 1의 무선 통신 모듈)을 포함할 수 있다. 무선 통신 모듈은 다양한 근거리 무선 통신 방식(예: Wi-Fi, 블루투스 (bluetooth), BLE(bluetooth low energy))을 지원할 수 있으며, 각각의 무선 통신 방식을 지원하기 위한 독립 적인 하드웨어 및/또는 소프트웨어 구성을 포함할 수 있다. 다양한 실시예에 따르면, 제1메모리는 한정되지 않은 디지털 데이터들을 일시적 또는 영구적으로 저장하기 위한 것으로써, 도 1의 메모리의 구성 및/또는 기능 중 적어도 하나를 포함할 수 있다. 제1메모리는 OTPROM(one time programmable ROM), PROM(programmable ROM), EPROM(erasable and programmable ROM), EEPROM(electrically erasable and programmable ROM), mask ROM, flash ROM, 플래시 메모리(예: NAND flash 또는 NOR flash), 하드 드라이브, 또는 솔리드 스테이트 드라이브(solid state drive(SSD))와 같은 비휘발성 메모리 및 DRAM(dynamic RAM), SRAM(static RAM), 또는 SDRAM(synchronous dynamic RAM)와 같은 휘발성 메모리 를 포함할 수 있다. 제1메모리는 제1프로세서에서 수행될 수 있는 다양한 인스트럭션(instruction)들을 저장할 수 있다. 이와 같은 인스트럭션들은 제1프로세서에 의해 인식될 수 있는 산술 및 논리 연산, 데이터 이동, 및/또는 입출력을 포함하는 다양한 제어 명령을 포함할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1전자 장치의 각 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성(예: application processor)으로써, 도 1의 프로세서의 구성 및/또는 기능 중 적어도 일부를 포함할 수 있다. 제1프로세서는 제1디스플레이, 제1통신 인터페이스 , 제1메모리를 포함하는 제1전자 장치의 각 구성요소와 작동적으로(operatively), 기능적으로 (functionally) 및/또는 전기적으로(electrically) 연결될 수 있다. 다양한 실시예에 따르면, 제1프로세서가 제1전자 장치 상에서 구현할 수 있는 연산 및 데이터 처리 기능에는 한정됨이 없을 것이나, 본 문서에서는 화면 공유 서비스에서 복수의 어플리케이션 또는 태스크의 실행 화면을 생성 및 제어, 실행되는 어플리케이션의 관리, 사용자 입력의 처리, 제1전자 장치의 리소스의 관리 와 관련된 다양한 실시예들에 대해 설명하기로 한다. 후술하는 제1프로세서의 동작은 제1메모리에 저 장된 인스트럭션들을 실행함으로써 수행될 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1통신 인터페이스를 통해 제2전자 장치와 연결되는 경우, 제1전자 장치에 설치된 어플리케이션 리스트를 제2전자 장치에 전송할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1통신 인터페이스를 통해 제2전자 장치로부터 제1태스크의 실행 요청을 수신할 수 있다. 예를 들어, 제2전자 장치는 수신한 어플리케이션 리스트를 기반으로, 각 어플리케 이션에 대응하는 아이콘을 제2전자 장치의 디스플레이 상에 표시하고, 아이콘에 대한 사용자 입력에 따라 해당 어플리케이션 또는 태스크의 실행 요청을 제1전자 장치로 전송할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 실행 요청에 응답하여, 메모리에 저장된 어플리케이션에 기반하여 제1태스크를 실행할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1태스크의 실행 화면을 포함하는 제1가상 화면을 생성할 수 있 다. 제1프로세서는 제1태스크에서 생성되는 제1이미지 정보를 압축하는 제1인코더, 제1이미지 정보를 기록 하는 제1입력 서피스 및 상기 제1가상 화면을 제1컨테이너(예: App execution container)로 구성할 수 있다. 여 기서, 컨테이너는 각 가상 화면을 관리하는 프로그램 상 객체(또는 클래스, 인스턴스)를 의미하며, 다른 명칭으 로 정의될 수도 있다. 예를 들어, 제1컨테이너는 제1가상 화면 관리 그룹, 제2컨테이너는 제2가상 화면 관리 그 룹 등과 같이, 다른 명칭으로 정의될 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1태스크의 실행 요청에 따라 비디오 인코더를 생성하고, 비디오 인코더의 입력 서피스를 제1가상 화면의 서피스로 지정할 수 있다. 제1프로세서는 실행되는 어플리케이션 또는 태스크를 수행하는 컴포넌트들을(예: 가상 화면, 입력 서피스, 비디오 인코더) 컨테이너로 관리할 수 있고, 각각의 어플리케이션 또는 태스크에 대해 별도의 컨테이너를 생성할 수 있다. 각각의 컨테이너는 ID를 가 지고, ID를 통해 제2전자 장치의 컨테이너와 맵핑될 수 있다. 또한, 각각의 컨테이너는 ID, 디스플레이 ID, 어 플리케이션 패키지 명칭, 디스플레이 관련 정보, 태스크 ID, 태스크 종료 원인 정보, 타임 스탬프 정보 중 적어 도 일부를 더 포함할 수 있다. 제1프로세서에서 구성하는 컨테이너에 대해서는 도 6을 통해 보다 상세히 설명하기로 한다. 다양한 실시예에 따르면, 제1전자 장치 및 제2전자 장치는 태스크 또는 어플리케이션 단위로 독립적인 컨 테이너를 구성할 수 있다. 다양한 실시예에 따르면, 제1전자 장치 및 제2전자 장치는 각각 대응되는 컨테이너를 구성할 수 있다. 예 를 들어, 제1전자 장치에서 태스크(또는 어플리케이션) 실행에 따라 App execution container 1가 생성되 고 관련 정보를 제2전자 장치에 전송하는 경우, 제2전자 장치는 이와 대응되는 Remote App container 1을 생성 할 수 있다. 이 후, 제2전자 장치에서 새로운 태스크(또는 어플리케이션) 실행에 따라 App execution container 2가 생성되는 경우, 제2전자 장치는 이와 대응되는 Remote App container 2를 생성할 수 있다. 다양한 실시예에 따르면, 서로 대응되는 컨테이너는 하나의 미러링 세션(mirroring session)을 형성하며, 다른 컨테이너 사이에 형성되는 미러링 세션과 서로 독립적일 수 있다. 예를 들어, App execution container 1 및 Remote App container 1 사이에 형성된 미러링 세션과 App execution container 2 및 Remote App container 2 사이에 형성 된 미러링 세션은 서로 독립적일 수 있다. 제1전자 장치 및 제2전자 장치는 가상 화면 또는 컨테이너의 ID에 따 라 각 미러링 세션을 구분할 수 있다. 다양한 실시예에 따르면, 대응되는 컨테이너 사이에 형성되는 미러링 세션들은 서로 독립적인 통신 채널로 연결 될 수 있다. 예를 들어, 제1전자 장치와 제2전자 장치가 USB 인터페이스로 연결되는 경우, 각 컨테이너들 이 형성하는 미러링 세션들은 서로 독립된 USB 채널(논리적 채널)을 통해 통신할 수 있고, 제1전자 장치와 제2전자 장치가 Wi-Fi (또는 WFD)로 연결되는 경우, 각 미러링 세션들은 서로 독립된 Wi-Fi 채널을 형성하여 통 신할 수 있다. 다양한 실시예에 따르면, 생성된 제1가상 화면을 외부 장치에 전송할 수 있다. 예를 들어, 제1가상 화면을 포함 하는 제1컨테이너를 외부 장치에 전송할 수 있다. 제2전자 장치는 제1컨테이너에 대응하는 컨테이너를 생성하여 가상 화면을 수신할 수 있으며, 제1전자 장치의 컨테이너와 제2전자 장치의 대응하는 컨테이너가 미러링세션을 구성할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1태스크가 실행되는 동안 외부 장치로부터 제2태스크의 실행 요 청을 수신할 수 있다. 여기서, 제2태스크는 제1태스크의 어플리케이션과 동일한 어플리케이션이거나 다른 어플 리케이션에 의해 실행되는 태스크 일 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제2태스크의 실행 요청에 응답하여, 제2태스크를 실행하고, 제2태 스크의 실행 화면을 포함하는 제2가상 화면을 생성할 수 있다. 예를 들어, 제1프로세서는 제2가상 화면을 구성하는 컴포넌트들을 제2컨테이너로 구성할 수 있다. 제2컨테이너는 제1컨테이너의 구성과 동일할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제2전자 장치로부터 가상 화면에 대한 입력 이벤트가 수신되는 경 우, 수신된 입력 이벤트에 포함된 식별 정보를 이용하여 맵핑되는 제1태스크 또는 제2태스크에서 상기 입력 이 벤트를 처리하도록 할 수 있다. 예를 들어, 제2전자 장치에서 제1가상 화면 상에서 사용자 입력(예: 마우스 클 릭, 터치 입력)이 발생하는 경우, 제2전자 장치는 입력 이벤트 정보 및 제1가상 화면의 ID(또는 컨테이너의 I D)를 제1전자 장치에 전송할 수 있다. 제1프로세서는 수신되는 ID와 맵핑되는 가상 화면을 확인하고, 해당 가상 화면을 구성하는 어플리케이션에 입력 이벤트를 전달할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제1가상 화면에서 제3태스크를 실행 시키는 인텐트가 수신되는 경 우, 제3태스크에 대응하는 가상 화면을 확인하도록 설정될 수 있다. 제1프로세서는 제3태스크에 대응하는 가상 화면이 생성되지 않은 경우, 제3태스크의 실행 화면을 포함하는 제3가상 화면을 생성하여 외부 장치에 전 송할 수 있다. 제1프로세서는 제3태스크에 대응하는 가상 화면이 생성되어 있는 경우, 제3태스크를 포그라 운드에서 동작시키도록 할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 제3태스크의 실행 화면이 제1디스플레이 상에 표시되고 있는 경우, 제1디스플레이 상에서 상기 제3태스크의 실행 화면의 표시를 중단하고, 제3태스크의 실행 화면을 포 함하는 제3가상 화면을 생성하여 상기 외부 장치에 전송하거나, 또는 제1디스플레이 상에 표시 중인 제3태 스크의 실행 화면을 외부 장치에 전송하도록 설정될 수 있다. 이 경우, 제1프로세서는 실행 중인 태스크의 실행 위치를 제2전자 장치의 디스플레이로 이동 시킬 것인지 를 확인하기 위한 다이얼로그를 표시할 수 있다. 사용자가 다이얼로그 상에서 태스크의 실행 위치 이동을 허용 하는 경우, 제1프로세서는 제1디스플레이에서 실행 중인 어플리케이션을 종료 시키고, 새로 생성된 제3가상 화면 상에서 제3태스크를 실행할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 외부 장치로부터 새로운 태스크의 실행 요청을 수신하는 경우, 현 재 생성된 가상 화면의 개수를 확인하고, 가상 화면의 개수가 최대 개수를 초과하는 경우, 생성된 가상 화면 중 적어도 하나를 종료 시킬 수 있다. 제1프로세서는 생성된 지 가장 오래된 가상 화면(또는 컨테이너) 또는 비활성화 된 지 가장 오래된 가상 화면(또는 컨테이너)를 종료 시킬 수 있다. 일 실시예에 따르면, 동시에 실행할 수 있는 가상 화면의 최대 개수는 제1전자 장치에 포함된 프로세서 및 /또는 메모리에 대응하여 미리 할당될 수 있다. 예를 들어, 가상 화면의 최대 개수는 전자 장치의 각 칩셋(예: 제1프로세서, 및/또는 제1메모리) 별로 미리 정의된 개수로 결정될 수 있다. 예를 들어, 가상 화면의 최대 개수는 제1프로세서의 종류(예: 프로세서의 이름, ID(identification), 및/또는 클럭(clock)), 및/ 또는 제1메모리의 크기 별로 정의된 개수로 결정될 수 있다. 일 실시예에 따르면, 제1프로세서는 제1프로세서 및/또는 제1메모리의 가용 리소스에 기초하여 가상 화면의 최대 개수를 결정할 수 있다. 여기서, 가용 리소스는 제1프로세서 및/또는 제1메모리에 할당된 인코더 리소스의 크기(또는 면적) 및 현재 가상 화면의 전송을 위해 필요한 리소스의 크기에 따라 결정 될 수 있다. 예를 들어, 제1프로세서는 제1메모리 상에 구현할 수 있는 인코더 서피스의 면적을 가상 화면으로 제공되는 최대 해상도로 나눈 값을 가상 화면의 최대 개수로 결정할 수 있다. 일 실시예에 따르면, 제1프로세서는 제1전자 장치의 온도를 감지하고, 감지된 온도에 따라 가상 화면 의 최대 개수를 결정할 수 있다. 예를 들어, 제1전자 장치는 써미스터(thermistor)와 같은 소자를 통해 제 1전자 장치 내부의 하나 이상의 영역에 대한 온도를 측정할 수 있으며, 측정된 온도의 구간에 따라서 가상 화면의 최대 개수를 결정할 수 있다. 일 실시예에 따르면, 제1프로세서는 제1통신 인터페이스를 통해 제2외부 장치에 전송하는 데이터의 전송 속도에 기초하여 가상 화면의 최대 개수를 결정할 수 있다. 예를 들어, 제1프로세서는 데이터의 평균전송 속도의 구간에 따라서 가상 화면의 최대 개수를 결정할 수 있다. 다양한 실시예에 따르면, 제1프로세서는 특정 태스크가 종료되는 경우, 태스크 종료 원인 정보(예: 실행된 지 오래되어서 종료, 새로운 태스크 실행에 따라 종료)를 제2전자 장치에 전송할 수 있다. 제2전자 장치는 태스 크 종료 원인 정보를 수신하는 경우, 이에 대응하여 해당 컨테이너를 종료 하고, 디스플레이 상에서 해당 컨테 이너의 가상 화면을 표시하는 윈도우를 제거할 수 있다. 도 5는 다양한 실시예에 따른 제2전자 장치의 블록도이다. 도 5를 참조 하면, 제2전자 장치(예: 도 2의 제2전자 장치))는 제2디스플레이, 제2통신 인터페 이스, 제2메모리, 제2프로세서를 포함하며, 도시된 구성 중 적어도 일부가 생략 및/또는 치환되 더라도 본 문서의 다양한 실시예들을 구현할 수 있다. 일 실시예에 따르면, 도시된 구성 중 일부는 제2전자 장 치와 분리되고 유선 또는 무선 통신 인터페이스로 연결되는 다른 장치 상에 마련될 수 있다. 예를 들어, 제2전자 장치는 디스플레이를 포함하지 않는 데스크톱 PC로 구현될 수 있으며, 이 경우 제2디스플레이 는 별도의 디스플레이 장치 상에서 구현될 수 있다. 다양한 실시예에 따르면, 제2디스플레이는 영상을 표시할 수 있다. 예를 들어, 제2디스플레이는 화면 공유 서비스를 통해 제1전자 장치(예: 도 4의 제1전자 장치)에서 실행된 태스크에서 생성된 가상 화면을 표시할 수 있다. 제2디스플레이는 제2전자 장치와 독립적인 외부 디스플레이 장치로 구현될 수 있다. 다양한 실시예에 따르면, 제2통신 인터페이스는 제1전자 장치의 제1통신 인터페이스와 유선 또는 무선 연 결을 지원할 수 있다. 제2통신 인터페이스가 유선 인터페이스로 구현되는 경우, 케이블이 연결되는 인터페 이스 단자들은 제2전자 장치 상에 마련되거나, 또는 외부 디스플레이 장치 상에 마련될 수도 있다. 다양한 실시예에 따르면, 제2메모리는 비휘발성 메모리 및 휘발성 메모리를 포함할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 제2전자 장치의 각 구성요소들의 제어 및/또는 통신에 관한 연산이나 데이터 처리를 수행할 수 있는 구성으로써, 제2디스플레이, 제2통신 인터페이스, 제2메모리 를 포함하는 제2전자 장치의 각 구성요소와 작동적으로(operatively), 기능적으로(functionally) 및 /또는 전기적으로(electrically) 연결될 수 있다. 제2프로세서는 제1전자 장치와 독립적인 운영 체제(예: Windows)를 통해 여러 어플리케이션들을 실행할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 제2통신 인터페이스를 통해 제1전자 장치와 연결을 확인할 수 있다. 제2프로세서는 연결된 제1전자 장치로부터 제1전자 장치에 설치된 어플리케이션 리스트를 수신하 고, 해당 리스트를 기반으로 각 어플리케이션에 대응하는 아이콘을 제2디스플레이 상에 표시할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 제2디스플레이 상에 표시된 아이콘에 대한 사용자 입력에 따 라, 해당 아이콘에 대응하는 제1태스크의 실행 요청을 외부 장치에 전송할 수 있다. 여기서, 사용자 입력은 마 우스 클릭, 터치/호버링 입력을 포함할 수 있다. 제1전자 장치는 상기 실행 요청에 따라 제1태스크를 실행하고, 제1가상 화면을 생성하여 제2전자 장치에 전송할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 제1전자 장치로부터 제1가상 화면을 수신하고, 제1가상 화면을 제 2디스플레이 상에 표시할 수 있다. 제1전자 장치는 각각의 태스크에 대한 가상 화면, 인코더, 입력 서피스 를 각각의 컨테이너로 구성할 수 있으며, 제2프로세서는 제1전자 장치에서 생성된 컨테이너(예: App execution container)에 대응되는 컨테이너(예: remote App container)를 생성할 수 있다. 각각의 컨테이너는 ID를 가지고, ID를 통해 제1전자 장치의 컨테이너와 맵핑될 수 있다. 제1전자 장치와 제2전자 장치 사이에서 서 로 대응되는 컨테이너는 하나의 미러링 세션(mirroring session)을 형성하며, 다른 컨테이너 사이에 형성되는 미러링 세션과 서로 독립적일 수 있다. 또한, 대응되는 컨테이너 사이에 형성되는 미러링 세션들은 다른 미러링 세션들과 서로 독립적인 통신 채널(예: USB 채널, Wi-Fi 채널)로 연결될 수 있다. 제2프로세서에서 구성하 는 컨테이너에 대해서는 도 7을 통해 보다 상세히 설명하기로 한다. 다양한 실시예에 따르면, 제2프로세서는 가상 화면 또는 컨테이너와 관련된 정보가 전송될 때, 복수의 태 스크의 가상 화면을 전송하는 것임을 지시하는 flag가 포함되어 있는 지 확인하고, 해당 flag가 포함되는 경우, 수신되는 각 가상 화면을 서로 다른 미러링 세션으로 구성하고, 서로 독립적인 윈도우 상에 표시할 수 있다. 다 양한 실시예에 따르면, 제2프로세서는 제1가상 화면을 표시하는 동안 제2태스크를 실행하기 위한 제2사용 자 입력에 응답하여, 제2태스크의 실행 요청을 제1전자 장치에 전송할 수 있다. 제2프로세서는 제1전자 장치로부터 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 수신할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 수신되는 제1가상 화면 및 제2가상 화면을 서로 다른 윈도우 상에 표시할 수 있다. 예를 들어, 화면 공유 서비스 시에 공유 되는 각 화면(또는 윈도우)에는 하나의 어플리케이션, 태스크 또는 액티비티의 내용이 미러링 될 수 있다. 제2프로세서는 각 컨테이너가 그리는 서피스 뷰를 서 로 다른 윈도우로 구성하여 각 태스크의 실행 화면이 서로 다른 윈도우 상에 표시되도록 할 수 있다. 다양한 실시예에 따르면, 제2프로세서는 제1가상 화면 및 제2가상 화면이 표시된 상태에서 사용자 입력을 수신할 수 있다. 제2프로세서는 사용자 입력이 수신된 가상 화면의 ID 및 입력 이벤트 정보를 제1전자 장 치로 전송하고, 제1전자 장치는 ID에 맵핑되는 가상 화면에 대해 수신되는 입력 이벤트를 처리할 수 있다. 도 6은 다양한 실시예에 따른 화면 공유 서비스를 제공하기 위한 제1전자 장치의 블록도이다. 도 6에 도시된 각 구성은 화면 공유 서비스를 위해 제1전자 장치(예: 도 4의 제1전자 장치)에서 저장 및 실행될 수 있는 소프트웨어 컴포넌트이다. 각 컴포넌트의 명칭은 프로그램 상에서 관련 동작을 수행하기 위 한 클래스의 명칭을 정의한 것으로써, 각 컴포넌트의 명칭이 수행하는 동작을 한정하지 않는다. 도 6을 참조 하면, 제1전자 장치는 전송 매니저(transfer manager), 입력 매니저(input manager), 앱 실행 컨테이너 매니저(App execution container manager), 시스템 서비스 컴포넌트 (system services component)를 포함할 수 있다. 시스템 서비스 컴포넌트는 시스템 레벨에서 실행되 는 서비스 컴포넌트들의 집합으로써, 리모트 앱 모드 서비스(remote App mode service), 디스플레이 매니 저(display manager), 액티비티 태스크 매니저(activity task manager), 태스크 와쳐(task watcher) 및 로테이션 매니저(rotation manager)를 포함할 수 있다. 도시된 구성 중 적어도 일부(예: 전송 매니 저, 입력 매니저, 디스플레이 매니저, 액티비티 태스크 매니저)는 안드로이드 프레임워크 (Android framework) 상에 구현된 컴포넌트일 수 있으나, 다양한 실시예의 구현을 위해 일부 기능이 추가될 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 실행되는 어플리케이션 또는 태스크를 수행하는 컴포넌트들을(예: 가상 화면, 입력 서피스, 비디오 인코더) 컨테이너로 관리할 수 있고, 각각의 어플리케이션 또는 태스크에 대해 별도의 컨테이너를 생성할 수 있다. 다양한 실시예에 따르면, 앱 실행 컨테이너(612, 614)(App execution container)는 제1전자 장치에서 각 가상 화면을 생성 및 제어하는 역할을 수행할 수 있다. 앱 실행 컨테이너(612, 614)는 식별자인 ID를 가지며, 상기 ID를 통해 제2전자 장치의 지정된 리모트 앱 컨테이너(예: 도 7의 remote App container(772, 774))와 맵 핑될 수 있다. 다양한 실시예에 따르면, 화면 공유 서비스 시에 공유 되는 각 화면(또는 윈도우)에는 하나의 어플리케이션, 태 스크 또는 액티비티의 내용이 미러링 될 수 있으며, 이에 따라 앱 실행 컨테이너(612, 614)는 어플리케이션의 패키지 명칭(package name) 또는 태스크 ID를 가질 수 있다. 아래의 표 1은 앱 실행 컨테이너(612, 614)가 소유 및/또는 관리하는 데이터의 예를 나타낸 것이다. 표 1 정보 설명 ID 컨테이너(또는 앱 실행 컨테이너)의 식별자 제2외부 장치로부터 수신되는 요청 및 이벤트의 처리 시 ID를 기준으로 처리 할 컨테이너를 찾을 수 있다. Display ID 컨테이너에 맵핑된 어플리케이션이 실행되고 있는 가상 화면의 식별자 가상 화면 정보의 변경 또는 관련 이벤트 발생 시 Display ID로 요청을 보내 거나, 이 가상 화면에 맵핑된 컨테이너를 검색할 수 있다. App Package Name컨테이너에 맵핑된 어플리케이션의 패키지 이름 컨테이너 상에 어플리케이션을 실행할 때, 이 패키지 정보로 어플리케이션을 실행 시킬 수 있다. Display 관련 정보가상 화면에 할당된 서피스(surface) 서피스의 크기, DPI(dots per inch), 오리엔테이션 상태 정보 를 저장할 수 있다.Task ID 컨테이너 상에 실행된 태스크의 식별자 태스크가 실행 또는 종료 되었을 때, 이 값을 기준으로 컨테이너를 찾는 데 쓰일 수 있다. Task 종료 원인 정보태스크가 종료 되었을 때, 종료된 원인 관련 정보 사용자에 의한 종료, 일반 종료, 장치의 과열에 의한 종료, 또는 어플리케이 션 런칭(lunching) 직후 종료의 값을 가질 수 있다. 태스크가 종료 되었을 때 Task 종료 원인 정보에 따라 제2전자 장치에서 GUI를 처리할 수 있다. Timestamp 정보컨테이너의 생성 시간, 태스크 시작 시간, 태스크 종료 시간, 및/또는 컨테이 너의 활성화 및 비활성화 시간의 시간 정보 최대 개수보다 더 많은 어플리케이션이 실행 되었을 때, 최근 사용한 어플리 케이션의 검출 또는 어플리케이션 종료 원인을 판단할 때 사용될 수 있다. 다양한 실시예에 따르면, 앱 실행 컨테이너 매니저는 제1전자 장치에서 화면 공유 서비스와 관련된 전체적인 로직의 제어를 수행할 수 있다. 예를 들어, 앱 실행 컨테이너 매니저는 통신 인터페이스(예: 도 4의 제1통신 인터페이스)를 통해 연결된 제2전자 장치(예: 도 5의 제2전자 장치)로부터 어플리케이션 (또는 태스크) 실행 요청을 수신하여, 앱 실행 컨테이너(App execution container)를 생성, 소유 및 관리 할 수 있다. 앱 실행 컨테이너 매니저는 제2전자 장치로부터 어플리케이션과 관련된 요청을 받을 경우, 앱 실행 컨테이너의 ID를 이용하여, 지정된 앱 실행 컨테이너에 수신된 요쳥을 분배할 수 있다. 또한, 앱 실행 컨테이너 매니저는 제1전자 장치의 시스템 상에서 이벤트의 발생 시 가상 화면의 ID 또는 태스크 ID를 이용하 여 앱 실행 컨테이너를 지정하여, 해당 앱 실행 컨테이너로 이벤트를 보내거나, 제2전자 장치의 리모트 앱 컨테 이너 매니저(예: 도 7의 remote app container manager로 전달하는 역할을 수행할 수 있다. 다양한 실시예에 따르면, 전송 매니저는 앱 실행 컨테이너에 의해 인코딩 된 화면 데이터, 사용자 입력 정 보, 각종 요청 및/또는 이벤트 정보를 제2전자 장치에 전송할 수 있다. 다양한 실시예에 따르면, 입력 매니저는 제2전자 장치로부터 전달되는 입력 이벤트를 시스템에 인젝션 (injection)하는 컴포넌트일 수 있다. 입력 매니저는 제2전자 장치의 입력 리스너에서 사용자 입력을 감지 하는 경우, 리모트 앱 컨테이너로 리포트 되고, 제2전자 장치의 전송 매니저를 거쳐 제1전자 장치의 대응되는 앱 실행 컨테이너로 입력 이벤트가 전달될 수 있다. 앱 실행 컨테이너는 입력 매니저를 통해 들 어오는 입력 이벤트를 시스템에 인젝션 할 수 있다. 다양한 실시예에 따르면, 시스템 서비스 컴포넌트는 시스템 레벨에서 실행되는 서비스 컴포넌트들을 포함 할 수 있다. 다양한 실시예에 따르면, 리모트 앱 모드 서비스는 시스템 권한이 필요한 기능의 수행 및 각 시스템 서비 스의 기능을 직접 호출하는 기능을 수행할 수 있다. 예를 들어, 리모트 앱 모드 서비스는 앱 실행 컨테이 너 매니저로부터 요청을 받아 디스플레이 매니저, 또는 액티비티 태스크 매니저에 직접 요청을 보내거나, 시스템 서비스 컴포넌트(예: 액티비티 태스크 매니저, 태스크 와쳐, 로테이션 와쳐 , 또는 스타트 액티비티 인터셉터(start activity intercepter))로부터 각종 이벤트에 대한 콜백 (callback)을 받아서 앱 실행 컨테이너 매니저로 전달하는 역할을 수행할 수 있다. 다양한 실시예에 따르면, 디스플레이 매니저는 어플리케이션의 실행에 따라 가상 화면(virtual display)을 생성하는 역할을 수행할 수 있다. 다양한 실시예에 따르면, 액티비티 태스크 매니저는 액티비티와 태스크를 관리하는 역할을 수행할 수 있다. 액티비티 태스크 매니저는 하나의 미러링 세션에 하나의 어플리케이션 또는 태스크를 실행 시키기 위해 스타트 액티비티 인터셉트 관련 동작을 수행할 수 있다. 다양한 실시예에 따르면, 태스크 와쳐는 태스크의 실행 또는 종료 이벤트를 수신하여, 어플리케이션의 실 행 또는 종료 처리, 태스크 실행 패턴 감지 및 사용자에게 알림을 제공하는 데 사용될 수 있다. 다양한 실시예에 따르면, 로테이션 와쳐는 가상 화면의 회전 이벤트를 감지하여, 제2전자 장치에서 동일하 게 회전된 미러링 컨텐츠를 제공하는 데 사용될 수 있다. 도 7은 다양한 실시예에 따른 화면 공유 서비스를 제공하기 위한 제2전자 장치의 블록도이다. 도 7에 도시된 각 구성은 화면 공유 서비스를 위해 제2전자 장치(예: 도 5의 제2전자 장치)에서 저장 및 실행될 수 있는 소프트웨어 컴포넌트이다. 각 컴포넌트의 명칭은 프로그램 상에서 관련 동작을 수행하기 위 한 클래스의 명칭을 정의한 것으로써, 각 컴포넌트의 명칭이 수행하는 동작을 한정하지 않는다. 다양한 실시예에 따르면, 전송 매니저는 제1전자 장치의 전송 매니저(예: 도 6의 전송 매니저) 에 대응되며, 가상 화면 데이터, 사용자 입력 정보, 각종 요청 및/또는 이벤트 정보를 제1전자 장치와 송수신 하는 기능을 수행할 수 있다. 다양한 실시예에 따르면, 입력 리스너(input listener)는 가상 화면 상에서 입력되는 사용자 입력을 모니 터링 할 수 있다. 입력 리스너는 사용자 입력을 감지하는 경우, 사용자 입력이 발생한 가상 화면의 리모트 앱 컨테이너(772, 774)로 리포트 하고, 전송 매니저를 거쳐 제1전자 장치에 입력 이벤트가 전달될 수 있다. 다양한 실시예에 따르면, 리모트 앱 컨테이너(772, 774)는 제2전자 장치에서 지정된 어플리케이션 또는 태 스크를 표시하기 위한 것으로써, 각 리모트 앱 컨테이너(772, 774)는 미러링 되는 하나의 가상 화면에 대응될 수 있다. 리모트 앱 컨테이너(772, 774)는 ID를 가지며, 지정된 ID를 갖는 제1전자 장치의 앱 실행 컨테이너(예: 도 5의 App execution container 612, 614)와 맵핑될 수 있다. 리모트 앱 컨테이너(772, 774)의 기능이 호출되면, 리모트 앱 컨테이너 매니저, 전송 매니저, 앱 실행 컨테이너 매니저를 거쳐, 호출한 리모트 앱 컨테이너에 대응되는 제1전자 장치의 앱 실행 컨테이너의 기능이 호출될 수 있다. 다양한 실시예에 따르면, 리모트 앱 컨테이너 매니저는 제2전자 장치에서 각 가상 화면에 대응되는 리모트 앱 컨테이너(772, 774)를 생성 및 제어 할 수 있다. 리모트 앱 컨테이너(772, 774)는 입력 리스너 및/또는 제1전자 장치로부터 들어오는 이벤트를 받아서 각 리모트 앱 컨테이너(772, 774)에 내줄 수 있다. 도 8은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치에서 구성되는 컨테이너의 예를 도시한 것이다. 다양한 실시예에 따르면, 제1전자 장치(예: 도 4의 제1전자 장치)는 실행된 태스크에서 생성되는 이미지 정보를 압축하는 인코더(예: 제1인코더, 제2인코더)(video encoder), 이미지 정보를 기록하는 입력 서피스(예: 제1입력 서피스, 제2입력 서피스)(input surface) 및 가상 화면(예: 제1가상 화면, 제2가상 화면)(virtual)을 컨테이너 단위로 구성할 수 있다. 예를 들어, 제1전자 장치는 화면 공유 서비스 와 관련하여, 실행 중인 어플리케이션 또는 태스크의 개수만큼 대응되는 앱 실행 컨테이너(810, 820)를 생성 및 관리할 수 있다. 다양한 실시예에 따르면, 앱 실행 컨테이너(810, 820)는 제1전자 장치에서 각 가상 화면을 생성 및 제어하는 역 할을 수행할 수 있으며, 각 앱 실행 컨테이너(810, 820)는 ID를 가지고 상기 ID를 통해 제2전자 장치의 지정된 리모트 앱 컨테이너(860, 870)와 맵핑될 수 있다. 다양한 실시예에 따르면, 제1전자 장치의 앱 실행 컨테이너(810, 820)와 제2전자 장치의 리모트 앱 컨테이너 (860, 870)는 서로 대응되는 컴포넌트로 구성될 수 있다. 예를 들어, 화면 공유 서비스가 개시된 상태에서 하나 의 어플리케이션 또는 태스크가 실행되는 경우, 제1전자 장치는 제1앱 실행 컨테이너를 생성하고 제2전자 장치는 제1리모트 앱 컨테이너를 생성할 수 있다. 이 후, 새로운 어플리케이션 또는 태스크가 실행되는 경 우, 제1전자 장치는 새로운 제2앱 실행 컨테이너를 생성하고 제2전자 장치는 제2리모트 앱 컨테이너 를 생성할 수 있다. 서로 대응되는 앱 실행 컨테이너와 리모트 앱 컨테이너가 미러링 세션을 구성할 수 있다. 다양한 실시예에 따르면, 서로 대응되는 컨테이너들은 독립적인 미러링 세션을 구성할 수 있다. 예를 들어, 제1 앱 실행 컨테이너와 제1리모트 앱 컨테이너이 제1미러링 세션을 구성하고, 제2앱 실행 컨테이너(82 0)와 제2리모트 앱 컨테이너이 제2미러링 세션을 구성할 수 있다. 여기서, 서로 대응되는 컨테이너 사이에 형성된 미러링 세션들은 서로 독립적인 통신 채널로 연결될 수 있다. 예를 들어, 제1전자 장치와 제2전자 장치 가 USB 인터페이스로 연결되는 경우, 제1미러링 세션과 제2미러링 세션은 서로 독립된 USB 채널(논리적 채널)로 구성될 수 있고, 제1전자 장치와 제2전자 장치가 Wi-Fi (또는 WFD)로 연결되는 경우, 제1미러링 세션과 제2미러 링 세션은 서로 독립된 Wi-Fi 채널로 구성될 수 있다. 다양한 실시예에 따르면, 각각의 앱 실행 컨테이너(810, 820)로부터 수신되는 데이터는 ID를 이용해 대응되는 각각의 리모트 앱 컨테이너(860, 870)로 제공되고, 리모트 앱 컨테이너는 수신되는 데이터를 디코딩 하고 서피 스 뷰에 그릴 수 있다. 리모트 앱 컨테이너 매니저는 각 리모트 앱 컨테이너(860, 870)가 그리는 서피스뷰(864, 874)를 서로 다른 윈도우로 구성하여 디스플레이(예: 도 5의 제2디스플레이) 상에 표시할 수 있다. 다양한 실시예에 따르면, 앱 실행 컨테이너(810, 820) 및 리모트 앱 컨테이너(860, 870)는 서로의 ID를 통해 사 용자 입력, 이벤트 정보를 서로 송수신 할 수 있다. 예를 들어, 제2전자 장치의 특징 태스크 실행 화면 상에서 사용자 입력이 수신되는 경우, 앱 실행 컨테이너 매니저는 사용자 입력과 함께 수신되는 ID에 기반하여 사 용자 입력이 감지된 앱 실행 컨테이너를 확인하여 수신되는 사용자 입력을 분배할 수 있다. 도 9는 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 화면 공유 서비스를 제공하는 방법의 흐름도이다. 도 9는 제1전자 장치(예: 도 4의 제1전자 장치) 및 제2전자 장치(예: 도 5의 제2전자 장치 )가 유선 또는 무선 인터페이스를 통해 서로 연결되고, 화면 공유 서비스 어플리케이션을 실행한 이후에 제1전자 장치에서 생성된 가상 화면을 제2전자 장치 상에서 표시하는 동작들을 도시하고 있다. 다양한 실시예에 따르면, 제1전자 장치 및 제2전자 장치는 블루투스, Wi-Fi, Wi-Fi Direct와 같은 근 거리 무선 통신으로 연결되거나, USB, HDMI와 같은 유선 인터페이스로 연결될 수 있으며, 또는 클라우드 서비스 를 통해 TCP/IP, UDP와 같은 다양한 방식으로 연결될 수 있다. 제1전자 장치 및 제2전자 장치는 다수 개의 전송 채널을 생성하여, 어플리케이션의 제어 데이터, 비디오 데이터 및 오디오 데이터를 각각 다른 채널로 전송할 수 있다. 예를 들어, 제1전자 장치 및 제2전자 장치에서 TCP/IP 소켓 3개를 서버-클라이언트 로 열고, 소켓이 연결된 뒤 각각의 소켓 통신 채널을 각각 제어 채널, 비디오 데이터 채널 및 오디오 데이터 채 널로 사용할 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 설치된 어플리케이션의 패키지 명칭, 아이콘, 및/또는 어플리케 이션 명칭의 정보를 제2전자 장치로 전송하고, 제2전자 장치는 수신한 정보를 파싱하여 제2전자 장치 의 화면에 표시할 수 있다. 다양한 실시예에 따르면, 동작 960에서, 제2전자 장치는 제1전자 장치의 어플리케이션을 실행하기 위 한 사용자 입력을 수신할 수 있다. 다양한 실시예에 따르면, 동작 962에서, 제2전자 장치는 리모트 앱 컨테이너 매니저(예: 도 7의 remote app container manager)를 생성 및/또는 초기화 할 수 있다. 다양한 실시예에 따르면, 동작 964에서, 리모트 앱 컨테이너 매니저는 어플리케이션 실행 이벤트에 따라 새로운 리모트 앱 컨테이너(remote App container)를 생성하고, 사용자 입력에 따라 선택된 어플리케이션의 정보를 생 성된 리모트 앱 컨테이너에 설정할 수 있다. 리모트 앱 컨테이너 매니저는 어플리케이션 사용 시 사용자의 입력 (예: 마우스 클릭, 터치/호버링 입력)을 수신하기 위한 가상 터치 입력 패널을 리모트 앱 컨테이너에 설정하고, 입력 리스너(예: 도 7의 input listener)에 연결할 수 있다. 다양한 실시예에 따르면, 동작 966에서, 리모트 앱 컨테이너 매니저는 964 동작에서 생성된 리모트 앱 컨테이너 를 실행할 수 있다. 다양한 실시예에 따르면, 동작 968에서, 제2전자 장치는 전송 매니저(예: 도 7의 transfer manager(76 0))를 통해 어플리케이션 실행 요청을 제1전자 장치의 앱 실행 컨테이너 매니저(예: 도 6의 App execution container manager)에 전달할 수 있다. 일 실시예에 따르면, 어플리케이션(또는 태스크) 실행 요청은 실행 할 어플리케이션의 패키지 명칭 정보를 포함할 수 있다. 다양한 실시예에 따르면, 동작 970에서, 제2전자 장치는 어플리케이션 미러링 동작을 준비할 수 있다. 예 를 들어, 제2전자 장치는 제1전자 장치로부터 수신되는 가상 화면을 미러링 하기 위한 리소스를 할당 하고 초기화 할 수 있다. 제2전자 장치는 가상 화면을 표시하기 위한 윈도우를 생성하고, 서피스 뷰 (surface view)를 생성할 수 있다. 제2전자 장치는 디코더 매니저(decoder manager)로부터 인코딩 된 가 상 화면 데이터를 디코딩 하기 위한 디코더를 할당 받고, 디코더의 출력 서피스(output surface)를 서피스 뷰에 연결 할 수 있다. 다양한 실시예에 따르면, 동작 972에서, 제2전자 장치는 할당 받은 디코더를 실행 시킬 수 있다. 상술한 제2전자 장치에서 수행되는 동작 970 및/또는 972는 후술할 제1전자 장치에서 수행되는 동작 974 내지 동작 984와 적어도 일부 동시에 수행되거나, 이후에 수행될 수도 있다. 다양한 실시예에 따르면, 동작 974에서, 제1전자 장치는 제2전자 장치로부터 어플리케이션(또는 태스 크) 실행 요청이 수신되는 경우, 앱 실행 컨테이너 매니저(예: 도 6의 App execution container manager(61 0))를 생성 및/또는 초기화 할 수 있다. 이미 앱 실행 컨테이너 매니저가 생성 및/또는 초기화 된 경우에는 동 작 974는 생략될 수 있다. 제1전자 장치는 제2전자 장치로부터 전송 매니저를 통해 실행할 어플리케 이션의 패키지 명칭 정보, 컨테이너 ID를 포함하는 실행 요청을 수신할 수 있다. 다양한 실시예에 따르면, 앱 실행 컨테이너 매니저를 생성 및/또는 초기화 하는 과정에서 앱 실행 컨테이너 매 니저는 어플리케이션 또는 태스크 실행 시에 필요한 on start activity intercepted, on task played / on task removed, on rotation changed와 같은 콜백(callback)을 등록할 수 있다. 먼저 on start activity intercepted에 대해 설명하면, 하나의 미러링 세션에 하나의 어플리케이션 또는 태스크를 실행시키기 위해, 또 는 불필요한 어플리케이션 종료 상황을 줄이기 위해서는 on start activity를 인터셉트 해야 하는 상황이 있을 수 있다. 이를 위해 앱 실행 컨테이너 매니저는 리모트 앱 모드 서비스(예: 도 6의 remote App mode service)에 이벤트 구독 등록을 요청할 수 있다. 리모트 앱 모드 서비스는 액티비티 태스크 매니저(예: 도 6의 activity task manager)에 이벤트 구독을 등록 하고, 이벤트 발생 시 이를 앱 실행 컨테이너 매니저로 전달할 수 있다. 태스크가 실행되거나 종료되면, 이 이벤트가 앱 실행 컨테이너 매니저로 전달되고, 각 장치에서 이벤트가 처리 될 수 있다. on task played / on task removed 콜백은 어플리케이션 또는 태스크가 실행되거나 종료될 때, 제 1전자 장치 및 제2전자 장치에서 이벤트 처리를 위해 필요한 정보이다. 이를 위해, 리모트 앱 모드 서비스에서 태스크 와쳐(예: 도 6의 task watcher)를 생성하여 이벤트 구독을 등록할 수 있다. on rotation changed는 미러링 용 가상 화면이 회전 될 때 제1전자 장치 및 제2전자 장치에서 화면 회전 및 입력 좌표 보정을 위해 필요한 정보이다. 이를 위해 로테이션 와쳐(예: 도 6의 rotation watcher)를 리 모트 앱 모드 서비스(도 6의 remote App mode service에서 생성하고 이벤트 구독을 등록할 수 있다. 가상 화면의 로테이션 정보가 변경되면, 앱 실행 컨테이너 매니저로 로테이션 이벤트가 전달되고 제1전자 장치 및 제2전자 장치에서 로테이션 이벤트가 처리될 수 있다. 다양한 실시예에 따르면, 동작 976에서, 앱 실행 컨테이너 매니저는 미러링을 수행하기 위한 인코더, 가상 화면 을 생성하고 초기화 할 수 있다. 이 때, 생성할 가상 화면을 다른 용도의 가상 화면과 구분하기 위해 flag를 추 가할 수 있다. 여기서, flag는 복수의 태스크의 가상 화면을 제2전자 장치의 전송하는 것임을 지시할 수 있다. 앱 실행 컨테이너 매니저는 새로운 인코더를 생성하고 생성된 인코더로부터 입력 서피스를 획득할 수 있 다. 이 후 리모트 앱 모드 서비스에 가상 화면의 생성을 요청하고, 인코더의 입력 서피스를 가상 화면의 서피스 로 설정할 수 있다. 다양한 실시예에 따르면, 동작 978에서, 앱 실행 컨테이너 매니저는 새로운 앱 실행 컨테이너느 생성하고, 실행 할 어플리케이션의 패키지 명칭, 가상 화면, 인코더, 서피스와 같은 정보를 저장할 수 있다. 다양한 실시예에 따르면, 동작 980에서, 앱 실행 컨테이너 매니저가 인코더 매니저에 요청을 보내서 동작 976에 서 생성된 인코더를 실행할 수 있다. 다양한 실시예에 따르면, 동작 982에서, 앱 실행 컨테이너 매니저는 동작 978에서 생성된 앱 실행 컨테이너를 실행 시킬 수 있다. 앱 실행 컨테이너는 제2전자 장치에서 수신되는 실행 요청에 포함된 어플리케이션 패 키지 명칭으로부터 어플리케이션 시작 인텐트(intent)를 추출하고, 이 인텐트의 액티비티 옵션(activity option)에 실행될 화면의 ID를 저장할 수 있다. 이 인텐트를 실행 시키면 어플리케이션의 기본 액티비티가 가상 화면 상에서 실행될 수 있다. 다양한 실시예에 따르면, 동작 984에서, 가상 화면 상에서 어플리케이션이 실행되어 어플리케이션의 컨텐츠가 서피스 상에 그려지면, 어플리케이션의 화면 정보가 비디오 인코더를 통해 비디오 형태로 변환되어, 바이트 버 퍼(byte buffer) 형태로 출력될 수 있다. 다양한 실시예에 따르면, 동작 986에서 앱 실행 컨테이너는 출력되는 버퍼 데이터의 메타 데이터에 앱 실행 컨 테이너의 ID를 추가하여 전송 매니저로 전달하고, 전송 매니저는 가상 화면 데이터를 제2전자 장치에 전송 할 수 있다. 다양한 실시예에 따르면, 동작 988에서, 제2전자 장치의 전송 매니저는 인코딩 된 비디오 데이터를 수신하 면, 이를 리모트 앱 컨테이너 매니저로 전달할 수 있다. 리모트 앱 컨테이너 매니저는 비디오 데이터의 메타 데 이터로부터 ID를 추출하고 이를 이용해 대응되는 리모트 앱 컨테이너를 확인할 수 있다. 리모트 앱 컨테이너 매니저가 확인된 리모트 앱 컨테이너로 데이터를 전달 하면, 리모트 앱 컨테이너는 데이터를 디코더에 입력할 수 있다. 디코더를 통해 가상 화면의 정보가 디코딩 되면, 디코더에 연결된 서피스 뷰에 화면 정보가 그려지고, 제 2전자 장치의 디스플레이 상에서 지정된 윈도우 내에 표시될 수 있다. 도 10은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 이벤트 및 사용자 입력을 처리하는 방법의 흐름 도이다. 도 10에 도시된 방법은 앞서 설명한 제1전자 장치(예: 도 4의 제1전자 장치 및 제2전자 장치 (예: 도 5의 제2전자 장치)에 의해 수행될 수 있으며, 도시된 동작들은 도 9에서 설명한 제1전자 장치에서 생성된 가상 화면 데이터가 제2전자 장치에서 표시되는 이후 수행될 수 있다. 동작 1060 및 1062와 동작 1070 및 1072는 서로 독립적인 동작으로써, 그 순서가 변경될 수 있고, 이 중 일부만 이 수행될 수도 있다. 다양한 실시예에 따르면, 동작 1060에서, 제2전자 장치는 사용자의 입력 이벤트를 감지하여, 제1전자 장 치에 전송할 수 있다. 예를 들어, 제2전자 장치에 표시된 가상 화면 상에서 사용자의 마우스 클릭, 키보드 입력, 및/또는 터치/호버링 입력이 수신되면, 형성된 제어 채널을 통해 입력 데이터가 입력 리스너(예: 도 7의 input listener)를 통해 감지될 수 있다. 제2전자 장치는 입력 데이터에 가상 화면에 대응되는 리모트 앱 컨테이너의 ID를 추가 하여, 전송 가능한 형태로 변조한 후, 전송 매니저를 통해 제1전자 장치로 전송할 수 있다. 다양한 실시예에 따르면, 동작 1062에서, 제1전자 장치는 전송 매니저를 통해 사용자 입력 데이터가 전달 되면, 전달된 데이터의 ID를 통해 앱 실행 컨테이너(App execution container)를 확인할 수 있다. 앱 실행 컨테 이너 매니저(예: 도 6의 App execution container manager)는 입력 데이터를 처리 가능한 입력으로 복원 후, 입력 매니저(예: 도 6의 input manager)를 통해 매칭되는 앱 실행 컨테이너에 사용자 입력을 입력할 수 있다. 일 실시예에 따르면, 입력 이벤트에 제2전자 장치의 가상 화면의 ID가 설정되어 가상 화면의 ID 를 이용하여 사용자 입력을 적용할 제1전자 장치의 가상 화면을 확인할 수 있다. 다양한 실시예에 따르면, 동작 1070에서 제1전자 장치는 제1전자 장치의 시스템 또는 어플리케이션 상에서 발생하는 이벤트를 확인할 수 있다. 예를 들어, 이벤트는 제1전자 장치의 오리엔테이션 변경(예: 세로 모드에서 가로 모드로 변경)일 수 있다. 제1전자 장치는 이벤트 발생 시 앱 실행 컨테이너 매니저를 생성 및/또는 초기화 하는 과정에서 등록된 콜백을 통해 앱 실행 컨테이너 매니저로 이벤트가 전달될 수 있다. 앱 실행 컨테이너 매니저는 이벤트를 직접 처리 하거나, 제2전자 장치로 전송할 수 있다. 일 실시예에 따 르면, 앱 실행 컨테이너 매니저는 전달되는 가상 화면 ID, 태스크 ID를 통해 이벤트를 처리해야 하는 앱 실행 컨테이너를 확인하여 전달하고, 해당 앱 실행 컨테이너에서 이벤트가 처리될 수 있다. 다양한 실시예에 따르면, 동작 1072에서, 제2전자 장치는 제1전자 장치로부터 수신한 이벤트를 처 리할 수 있다. 제1전자 장치가 발생한 이벤트를 제2전자 장치로 전송하는 경우, 제2전자 장치 의 전송 매니저를 통해 이벤트 데이터를 수신할 수 있다. 이벤트가 수신되는 경우, 리모트 앱 컨테이너 매니저는 이벤트를 직접 처리 하거나, ID를 통해 이벤트를 처리할 리모트 앱 컨테이너를 결정하고, 해당 컨테이 너에 이벤트를 전달할 수 있다. 이벤트를 전달 받은 리모트 앱 컨테이너는 수신한 이벤트를 처리할 수 있다. 예 를 들어, 제1전자 장치의 오리엔테이션이 세로 모드에서 가로 모드로 변경되어 회전 이벤트가 발생하는 경우, 리모트 앱 컨테이너 매니저는 ID를 통해 회전 시킬 리모트 앱 컨테이너를 결정하고, 오리엔테이션 정보를 전달할 수 있다. 리모트 앱 컨테이너는 오리엔테이션 정보에 따라 화면을 회전 시키고, 사용자 입력을 받는 가 상 터치 입력 패널도 회전 시킬 수 있다. 도 11은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 어플리케이션 종료 시에 수행하는 방법의 흐름 도이다. 도 11에 도시된 방법은 앞서 설명한 제1전자 장치(예: 도 4의 제1전자 장치 및 제2전자 장치 (예: 도 5의 제2전자 장치)에 의해 수행될 수 있으며, 도시된 동작들은 도 9에서 설명한 제1전자 장치에서 생성된 가상 화면 데이터가 제2전자 장치에서 표시되는 이후 수행될 수 있다.다양한 실시예에 따르면, 동작 1160에서, 사용자가 가상 화면이 표시되는 윈도우 중 하나를 종료하는 경우, 제2 전자 장치의 리모트 앱 컨테이너 매니저(예: 도 7의 remote app container manager)는 가상 화면에 대응하는 리모트 앱 컨테이너(remote App container)를 종료 시킬 수 있다. 다양한 실시예에 따르면, 동작 1162에서, 리모트 앱 컨테이너 매니저는 전송 매니저(예: 도 7의 transfer manager)를 통해 제1전자 장치의 앱 실행 컨테이너 매니저(예: 도 6의 App execution container manager)에 해당 어플리케이션 또는 태스크의 종료 요청을 전송할 수 있다. 여기서, 종료 요청은 해당 컨 테이너 또는 가상 화면의 ID를 포함할 수 있다. 다양한 실시예에 따르면, 동작 1164에서, 제1전자 장치의 앱 실행 컨테이너 매니저는 종료 요청에 포함된 ID를 통해 대응되는 앱 실행 컨테이너를 확인하고, 종료 원인을 기록할 수 있다. 앱 실행 컨테이너 매니저는 확 인된 앱 실행 컨테이너에 설정된 어플리케이션 또는 태스크를 종료할 수 있다. 다양한 실시예에 따르면, 동작 1166에서, 태스크가 종료되는 경우, 액티비티 태스크 매니저(예: 도 6의 activity task manager)로부터 태스크가 종료 되었다는 콜백이 발생하고, 앱 실행 컨테이너 매니저가 이를 받아 종료된 앱 실행 컨테이너를 제거할 수 있다. 다양한 실시예에 따르면, 동작 1168에서, 앱 실행 컨테이너 매니저는 태스크가 종료되고 컨테이너가 제거되면, 종료 이벤트 및 종료 원인을 리모트 앱 컨테이너에 전송할 수 있다. 다양한 실시예에 따르면, 동작 1170에서, 리모트 앱 컨테이너는 종료 된 어플리케이션 또는 태스크와 맵핑되는 리모트 앱 컨테이너를 종료 시킬 수 있다. 다양한 실시예에 따르면, 동작 1172에서, 제2전자 장치는 어플리케이션 또는 태스크가 종료되면 관련 자 원을 모두 해제할 수 있다. 또한, 제2전자 장치는 종료 된 가상 화면의 윈도우를 닫고 가상 화면 데이터 를 디코딩 하는 디코더를 중지 및 해제할 수 있다. 도 12a 및 도 12b는 다양한 실시예에 따라 제2전자 장치의 디스플레이 상에 제공되는 화면을 도시한 것이다. 도 12a를 참조 하면, 제2전자 장치(예: 도 5의 제2전자 장치)는 제1전자 장치(예: 도 4의 제1전자 장치 )와 연결된 상태에서 제1전자 장치로부터 전송되는 가상 화면을 디스플레이(예: 도 5의 제2디스플레 이) 상에 표시할 수 있다. 제2전자 장치는 제1전자 장치로부터 어플리케이션 리스트 정보를 수신하여 제1전자 장치의 어플리케이션 에 대응하는 아이콘(1202, 1204)들을 디스플레이 상에 표시하고, 아이콘에 대한 사용자 입력에 기초하여 어플리 케이션의 실행 요청을 제1전자 장치에 전송할 수 있다. 도 12b를 참조 하면, 제2전자 장치는 제1전자 장치로부터 복수의 가상 화면이 동시에 수신되는 경우, 각 가상 화면(1230, 1232, 1234)을 서로 다른 윈도우로 구성하여 표시할 수 있다. 도시된 각각의 윈도우는 서로 다 른 태스크의 실행에 따라 생성된 가상 화면일 수 있다. 제2전자 장치는 각 윈도우에서 사용자 입력이 감지되는 경우, 해당 윈도우에 표시된 가상 화면(또는 컨테 이너) (1230, 1232, 1234)의 ID 및 입력 이벤트 정보를 제1전자 장치에 전송할 수 있다. 도 13은 다양한 실시예에 따른 제1전자 장치가 화면 공유 서비스 중 새로운 태스크의 실행 시 실행 화면을 처리 하는 방법의 흐름도이다. 도 13에 도시된 방법은 앞서 설명한 제1전자 장치(예: 도 4의 제1전자 장치에 의해 수행될 수 있으며, 도 시된 동작들은 도 9에서 설명한 제1전자 장치에서 생성된 가상 화면 데이터가 제2전자 장치에서 표시되는 이후 수행될 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 하나의 미러링 세션에 하나의 어플리케이션 또는 태스크만 구동하여, 제2전자 장치가 각 미러링 세션을 통해 전달되는 가상 화면을 독립적인 윈도우 상에 표시하도록 할 수 있다. 예 를 들어, 제1전자 장치의 어플리케이션은 사용자 입력에 따라 실행되는 것 이외에, 어플리케이션이 다른 어플리 케이션을 실행 시킬 수 있다. 예를 들어, 사용자가 메신저 어플리케이션을 사용 하다가 채팅창의 URL을 눌렀을 때, 인터넷 브라우저 어플리케이션이 실행될 수 있다. 다양한 실시예들은 이와 같이, 새로운 어플리케이션 또는태스크가 실행 되었을 때, 별도의 컨테이너를 통해 새로운 어플리케이션 또는 태스크의 가상 화면을 제공할 수 있다. 다양한 실시예에 따르면, 동작 1310에서, 앱 실행 컨테이너에서 실행 중인 어플리케이션에서 발생한 이벤트에 따라 새로운 어플리케이션을 실행하는 인텐트(intent)가 발생할 수 있다. 예를 들어, 제1가상 화면에서 메신저 어플리케이션이 실행 중이고 사용자가 메신저 어플리케이션에서 인터넷 URL을 선택하는 경우, URL과 함께 ACTION_VIEW 인텐트가 발생할 수 있다. 다양한 실시예에 따르면, 동작 1315에서, 액티비티 태스크 매니저(예: 도 6의 activity task manager)는 해당 인텐트에서 대응되는 액티비티를 확인할 수 있다. 액티비티 태스크 매니저는 해당 인텐트로부터 사용자 설 정 또는 어플리케이션 설치 현황에 따라 적절한 액티비티를 실행할 수 있다. 예를 들어, ACTION_VIEW 인텐트에 따라 인터넷 브라우저 어플리케이션의 브라우저 액티비티를 실행 시키는 인텐트가 실행될 수 있다. 다양한 실시예에 따르면, 동작 1320에서, 액티비티 태스크 매니저는 인텐트가 발생한 가상 화면을 확인하고, 해 당 가상화면의 컨테이너에 flag가 붙어 있는지 확인할 수 있다. 여기서, flag는 복수의 태스크의 가상 화면을 제2전자 장치의 전송하는 것임을 지시할 수 있다. 예를 들어, 액티비티 태스크 매니저는 인텐트가 발생한 제1가 상 화면에 플래그(flag)가 설정되어 있는지 확인할 수 있다. 다양한 실시예에 따르면, 동작 1325에서, 액티비티 태스크 매니저는 플래그에 따라 해당 인텐트가 발생한 가상 화면이 멀티 스크린 미러링으로 설정되었는지 확인할 수 있다. 다양한 실시예에 따르면, 멀티 스크린 미러링으로 설정되지 않은 경우, 동작 1330에서, 해당 어플리케이션을 동 일한 가상 화면 상에서 실행할 수 있다. 예를 들어, 제1가상 화면 상에서 인터넷 브라우저가 포 그라운드 상에 서 동작할 수 있다. 다양한 실시예에 따르면, 멀티 스크린 미러링으로 설정되지 않은 경우, 동작 1335에서, 인텐트가 발생한 가상 화면 상에 이미 실행 중인 어플리케이션 또는 태스크가 있는 지 확인할 수 있다. 예를 들어, 제1가상 화면에 이 미 메신저 어플리케이션이 실행 중인 경우, APP_TO_APP_LAUNCHED flag와 함께 on start activity intercepted 콜백을 발생 시킬 수 있다. 다양한 실시예에 따르면, 해당 가상 화면 상에 이미 실행 중인 어플리케이션 또는 태스크가 있는 경우, 동작 1340에서, 액티비티 태스크 매니저는 on start activity intercepted 콜백을 호출할 수 있다. 다양한 실시예에 따르면, 동작 1345에서, 앱 실행 컨테이너 매니저는 상기 콜백을 받고, 새로운 앱 실행 컨테이 너를 생성할 수 있다. 새로운 앱 실행 컨테이너는 제2가상 화면을 포함할 수 있다. 다양한 실시예에 따르면, 동작 1350에서, 앱 실행 컨테이너 매니저는 인터셉트 한 인텐트를 새로운 앱 실행 컨 테이너에 설정할 수 있다. 다양한 실시예에 따르면, 동작 1355에서, 앱 실행 컨테이너 매니저는 생성된 앱 실행 컨테이너를 실행할 수 있 다. 앱 실행 컨테이너 매니저는 앱 실행 컨테이너에 대응되는 제2가상 화면을 인텐트의 preferred display로 설 정 후 인텐트를 실행 시킬 수 있다. 이 경우, 이전에 실행 중이던 앱 실행 컨테이너와 다른 앱 실행 컨테이너에 어플리케이션이 실행되면서, 제1가상 화면에서 실행 중인 메신저 어플리케이션과 독립적으로 제2가상 화면 상에 인터넷 브라우저 어플리케이션이 실행될 수 있다. 이에 따라, 제1가상 화면을 통해 메신저 어플리케이션이 제2 전자 장치로 미러링 되고, 제2가상 화면을 통해 인터넷 브라우저 어플리케이션이 제2전자 장치로 미러링 될 수 있다. 도 14a 및 도 14b는 다양한 실시예에 따라 새로운 태스크 실행 시 제1전자 장치 및 제2전자 장치에서 제공하는 화면을 도시한 것이다. 일 실시예에 따르면, 제1전자 장치의 디스플레이(예: 도 4의 제1디스플레이) 상에서 태스크가 실행되고 있 는 동안, 제2전자 장치의 사용자 입력 또는 이벤트에 따라 해당 태스크의 실행 인텐트가 감지될 수 있다. 도 14a를 참조 하면, 제1전자 장치의 디스플레이에 캘린더 어플리케이션이 표시되고, 제2전자 장치 에는 메신저 어플리케이션의 가상 화면이 제공되고 있는 상태에서, 어플리케이션 아이콘에 대한 사 용자 입력 또는 메신저 어플리케이션의 요청에 따라 캘린더 어플리케이션의 실행 요청이 제1전자 장치로 수신될 수 있다.이 경우, 도 14b에 도시된 바와 같이 제1전자 장치는 어플리케이션의 실행 위치를 제1전자 장치의 디스플 레이에서 제2전자 장치의 디스플레이로 이동 시킬 것인지 확인하기 위한 다이얼로그를 제1전자 장 치의 디스플레이에 표시할 수 있다. 사용자가 다이얼로그 상에서 어플리케이션의 이동을 허용하는 경우, 제1전자 장치는 메인 디스플레이에서 실행 중인 어플리케이션을 종료하고, 캘린더 어플리케이션을 새로운 가상 화면 상에서 실행할 수 있다. 도 15는 다양한 실시예에 따른 제1전자 장치가 새로운 가상 화면 상에서 태스크를 처리하는 방법의 흐름도이다. 다양한 실시예에 따르면, 동작 1510에서, 제1전자 장치는 제2전자 장치로부터 수신되는 태스크 실행 요청에 따 라, 새로운 앱 실행 컨테이너(App execution container)를 생성할 수 있다. 다양한 실시예에 따르면, 동작 1515에서, 제1전자 장치는 생성된 컨테이너에 어플리케이션 또는 인터셉트 된 인 텐트를 실행할 수 있다. 다양한 실시예에 따르면, 실행 요청 된 어플리케이션 또는 태스크가 다른 디스플레이에서 이미 실행되고 있을 때의 처리는 on start activity intercepted 콜백을 통해 구현할 수 있다. 예를 들어, 동일한 어플리케이션의 태스크가 이미 실행되고 있는 경우, 액티비티 태스크 매니저가 이를 검출하여 지정된 flag와 함께 앱 실행 컨테 이너 매니저에 알려줄 수 있다. 앱 실행 컨테이너 매니저는 매칭되는 앱 실행 컨테이너를 확인하여 제2전자 장 치에 전달할 수 있다. 제2전자 장치는 이 이벤트를 받아서 매칭되는 리모트 앱 컨테이너를 포 그라운드로 올려 줄 수 있다. 표 2는 액티비티 태스크 매니저가 체크하는 조건, 발생 flag 및 이를 받았을 때 앱 실행 컨테이너의 동작을 나 타낸 것이다. 표 2 조건 발생 flag 동작 가상 화면에 새로운 어플리 케이션 또는 태스크를 실행 시키는 인텐트가 실행 되었 으나, 해당 가상 화면이 이 미 다른 어플리케이션 또는 태스크가 실행 중일 때APP_TO_APP_LAUNCHE D새로운 앱 실행 컨테이너 생성 후 해당 컨테이너 상 에서 어플리케이션 실행 resolved 액티비티가 이미 다른 가상 화면에서 돌아가 고 있을 때RUNNING_ON_VIRTUAL DISPLAY실행 중인 리모트 앱 컨테이너를 포 그라운드로 올 림 resolved 액티비티가 메인 디스플레이에서 돌아가고 있을 때RUNNING_ON_MAIN DISPLAY앱을 가상 화면으로 옮길지 사용자에게 확인. 또는 Main Display를 미러링 함. Notification의 pending intent에 다중 스크린 미러 링 전용 플래그가 설정되어 있는 경우NOTIFICATION_INTEN T_ SENT신규 앱 실행 컨테이너 생성 후 해당 컨테이너에 notification의 pending intent를 실행 시켜 줌 다양한 실시예에 따르면, 동작 1520에서, 제1전자 장치는 on start activity intercepted 조건을 확인할 수 있 다. 예를 들어, 앱 실행 컨테이너 매니저는 초기화 과정에서 on start activity intercepted 콜백을 등록할 수 있으며, 이는 지정된 상황에서 on start activity를 인터셉트 해야 함을 지시할 수 있다. 다양한 실시예에 따르면, on start activity intercepted 조건을 만족하는 경우, 동작 1525에서, 앱 실행 컨테 이너 매니저는 on start activity intercepted 콜백을 호출할 수 있다. 다양한 실시예에 따르면, 동작 1530에서, 제1전자 장치는 인터셉트 된 인텐트와 관련하여, 실행 중인 어플리케 이션의 위치를 확인할 수 있다. 다양한 실시예에 따르면, 어플리케이션이 가상 화면 상에서 실행 중인 경우, 동작 1535에서, 제1전자 장치는 제 2전자 장치가 실행 중인 어플리케이션을 포 그라운드로 올리도록 하고, 동작 1540에서, 생성했던 앱 실행 컨테 이너를 종료 시킬 수 있다. 예를 들어, 제1전자 장치의 앱 실행 컨테이너 매니저는 실행 중인 어플리케이션과 매칭되는 앱 실행 컨테이너를 확인하여 제2전자 장치로 전달할 수 있다. 제2전자 장치는 이 이벤틀르 받아서 매칭되는 리모트 앱 컨테이너를 포 그라운드로 올려줄 수 있다. 다양한 실시예에 따르면, 어플리케이션이 제1전자 장치의 메인 디스플레이에서 실행 중인 경우, 동작 1545에서, 제1전자 장치는 메인 디스플레이 상에 어플리케이션의 실행 위치를 제2전자 장치의 디스플레이로 이동 시킬 것 인지를 확인하기 위한 다이얼로그를 표시할 수 있다. 다양한 실시예에 따르면, 동작 1550에서, 사용자가 다이얼로그 상에서 어플리케이션의 이동을 허용하는 경우, 동작 1550에서, 제1전자 장치의 메인 디스플레이에서 실행 중인 어플리케이션을 종료 시키고, 동작 1560에서, 인터셉트 되었던 인텐트를 새로운 가상 화면 상에서 실행할 수 있다. 일 실시예에 따르면, 사용자가 어플리케이션 또는 태스크를 실행 시키거나 어플리케이션으로부터 인텐트가 발생 하여, 새로운 어플리케이션 또는 태스크가 실행될 때, 해당 어플리케이션이 이미 다른 디스플레이(예: 제1전자 장치의 메인 디스플레이 또는 가상 화면)에서 실행 중인 경우가 발생할 수 있다. 이 경우, 어플리케이션이 어떤 디스플레이 상에서 실행 중인지에 따라서 다음과 같이 구현할 수 있다. 먼저, 어플리케이션이 제1전자 장치의 메인 디스플레이에서 실행 중인 경우, 어플리케이션을 가상 화면으로 옮기게 되면 사용자 데이터가 유실될 수 있기 때문에, 사용자에게 가상 화면으로 어플리케이션을 이동 시킬 것인지 확인한 후에 옮길 수 있다. 또는, 어 플리케이션이 다른 가상 화면에서 실행 중인 경우, 인텐트에 따라 생성된 컨테이너를 종료 하고, 이전에 실행 중인 컨테이너를 확인하여 포 그라운드로 올려줄 수 있다. 다양한 실시예에 따르면, 동작 1520의 확인 결과, on start activity intercepted 조건을 충족하지 않는 경우, 동작 1560에서, 제1전자 장치는 해당 인텐트의 어플리케이션을 실행할 수 있다. 다양한 실시예에 따르면, 동작 1570에서, 제1전자 장치는 on task played 콜백을 호출할 수 있다. 다양한 실시예에 따르면, 동작 1575에서, 제1전자 장치는 실행 중인 컨테이너의 개수를 확인할 수 있다. 다양한 실시예에 따르면, 실행 중인 컨테이너의 개수가 기준 개수보다 큰 경우, 동작 1580에서, 제1전자 장치는 실행 중인 컨테이너 중 종료할 컨테이너를 추출하고, 동작 1585에서, 선택된 컨테이너를 종료할 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 제2전자 장치에 제공할 가상 화면(또는 컨테이너)의 최대 개수를 결정 할 수 있다. 여기서, 최대 개수는 프로세서 및 메모리에 대응하여 미리 할당되거나, 제1전자 장치가 프로세서 및/또는 메모리의 가용 리소스, 제1전자 장치의 온도, 통신 인터페이스를 통해 외부 장치에 전송하는 데이터의 전송 속도 중 적어도 하나에 기반하여 결정할 수 있다. 예를 들어, 전자 장치의 리소스가 제한적일 경우, 동시에 미러링 할 수 있는 가상 화면의 개수를 산정하여 제한 할 필요가 있다. 일 실시예에 따르면, 제1전자 장치는 동시에 미러링 할 수 있는 최대 개수를 다음과 같이 구할 수 있다. N = 총 인코더 서피스의 면적 / 미러링 최대 해상도 크기 예를 들어, 총 인코더 서피스의 면적이 23,760,000이고, 미러링 최대 해상도가 제1전자 장치의 해상도와 동일한 FHD+ (2200*1080)인 경우, 동시에 미러링 가능한 가상 화면의 최대 개수는 23,760,000 / (2200*1080)으로 10이 될 수 있다. 다른 실시예에 따르면, 미러링 중 카메라 녹화 인코딩을 지원하는 경우, 인코더 서피스의 일부를 사용하기 때문 에, 제1전자 장치는 동시에 미러링 할 수 있는 최대 개수를 다음과 같이 구할 수 있다. N = (총 인코더 서피스의 면적 - chleo 촬영 해상도) / 미러링 최대 해상도 크기 예를 들어, 카메라 어플리케이션이 동영상을 최대 촬영 해상도 3840*2160으로 촬영 중인 경우, N = 6.50으로 계 산되어, 동시에 최대 6개의 가상 화면을 미러링 할 수 있다. 일 실시예에 따르면, 동시에 미러링 할 수 있는 가상 화면의 최대 개수는 각 칩셋(예: 제1전자 장치의 프로세서, 메모리) 별로 미리 정의된 개수로 결정될 수 있다. 예를 들어, 제1전자 장치는 제1전자 장치에 포함 된 칩셋의 종류에 따라서 고정된 최대 개수를 가지고 가상 화면을 제어할 수 있다. 일 실시예에 따르면, 제1전자 장치는 제1전자 장치의 과열 상태에 따라 동시에 미러링 할 수 있는 최대 개수를 결정할 수 있다. 예를 들어, 제1전자 장치는 온도가 45도 미만인 경우 최대 개수를 5개로 결정하고, 45도 이상 60도 미만인 경우 최대 개수를 1개로 결정하고, 60도 이상인 경우 제2전자 장치에 가상 화면을 제공하지 않을 수 있다.일 실시예에 따르면, 제1전자 장치는 평균 전송 속도에 따라 동시에 미러링 할 수 있는 최대 개수를 결정할 수 있다. 예를 들어, 제1전자 장치는 평균 전송 속도가 5MB/s 이상인 경우 5개, 3MB/s - 5MB/s 인 경우 3개, 1MB/s - 3MB/s 인 경우 1개로 최대 개수를 결정할 수 있다. 다양한 실시예에 따르면, 제1전자 장치는 최대 세션 개수 N개보다 많은 미러링 세션(또는 가상 화면, 컨테이 너)이 생성되는 경우, 초과되는 개수만큼의 세션을 종료 시킬 수 있다. 일 실시예에 따르면, 제1전자 장치는 사 용자가 사용한 지 가장 오래 된 미러링 세션을 종료시킬 수 있다. 앱 실행 컨테이너는 컨테이너의 생성 시간, 활성화, 비활성화 시간에 대한 타임 스탬프를 저장할 수 있으며, 사용자가 제2전자 장치 상에서 하나의 윈도우 를 선택하는 경우 해당 가상 화면의 컨테이너 외의 나머지 컨테이너는 비활성화 될 수 있다. 앱 실행 컨테이너 매니저는 각 앱 실행 컨테이너의 타임 스탬프에 기초하여 비활성화 된 지 가장 오래 된 미러링 세션을 종료 시 킬 수 있다. 일 실시예에 따르면, 제1전자 장치에서 앱 실행 컨테이너를 생성한 후 실행 중인 앱 실행 컨테이너의 개수가 최 대 개수를 초과 하면 가장 오래 된 앱 실행 컨테이너를 종료하게 되는데, 이 경우 의도하지 않게 앱 실행 컨테 이너가 종료될 수 있다. 예를 들어, N개의 미러링 세션이 실행 중이고, 1번 컨테이너가 가장 오래된 컨테이너인 경우, 제2전자 장치 상의 사용자 입력에 의해 새로운 어플리케이션이 실행되면 N+1번 컨테이너가 생성되고, 가 장 오래된 1번 컨테이너가 종료될 수 있다. 이 때, 사용자가 실행한 어플리케이션 또는 태스크가 이미 제1전자 장치의 메인 디스플레이 또는 가상 화면 상에서 실행 중이고, 사용자가 다른 디스플레이로 이동을 원하지 않는 경우에는 N+1 번째 컨테이너는 어플리케이션 또는 태스크의 실행 없이 종료될 수 있다. 이 경우, 1번 컨테이너 의 종료에 따라 N-1개의 컨테이너만이 실행될 수 있다. 이러한 경우는 사용자가 어플리케이션을 실행하는 시점 에는 정확히 어떠한 어플리케이션이나 태스크가 수행될 지 알 수 없다는 것에서 기인할 수 있다. 예를 들어, 이 메일 어플리케이션이 inbox 태스크와 composer 태스크를 동시에 구동 시킬 수 있는 경우, 사용자가 이메일 어플 리케이션을 실행 하면, 이메일 어플리케이션의 main launcher 액티비티를 실행 시키는 인텐트를 얻어올 수는 있 으나, 이 인텐트를 시작 시킬 때 어떠한 태스크가 생성될 지는 알 수 없고, 이 인텐트를 실행 시킨 이후에 확인 이 가능할 수 있다. 이러한 경우를 해결하기 위해, 다양한 실시예에 따르면, 동시에 실행 중인 앱 실행 컨테이 너의 개수가 최대 개수를 초과 하여 어느 하나의 앱 실행 컨테이너를 종료하는 루틴을 새로운 앱 실행 컨테이너 의 생성 시점에 수행하지 않고, 태스크가 앱 실행 컨테이너 상에서 실제 실행되는 시점에 수행할 수 있다. 이를 위해 리모트 앱 모드 서비스의 태스크 와쳐는 새로운 태스크가 수행된다는 이벤트를 받았을 때 최대 개수보다 초과된 개수만큼의 태스크를 종료 시킬 수 있다. 도 16은 다양한 실시예에 따른 제1전자 장치가 런칭 후 바로 종료되는 태스크의 실행 시 이를 처리하는 방법의 흐름도이다. 일 실시예에 따르면, 태스크 단위로 가상 화면을 미러링 할 때, 일부 어플리케이션의 예상치 못한 런칭 동작이 발생할 수 있다. 예를 들어, 일부 어플리케이션은 실행 시 첫번째 태스크가 생성 및 실행되고, 이 태스크가 두 번째 태스크를 실행 시킨 후에 바로 종료되는 경우가 있을 수 있다. 이 경우, 바로 종료되는 첫번째 태스크에 대한 가상 화면의 생성 이후 바로 종료 시켜야 하는 상황이 발생할 수 있다. 이러한 상황을 방지하기 위해, 제1 전자 장치는 태스크의 실행 패턴을 앱 실행 컨테이너에 설정하고, 태스크가 종료될 때 설정된 패턴을 감지하여 제2전자 장치 상에서 가상 화면이 종료 처리 될 수 있도록 구현할 수 있다. 다양한 실시예에 따르면, 동작 1610에서, 제1전자 장치는 가상 화면 상에서 실행 중인 태스크의 종료를 감지할 수 있다. 다양한 실시예에 따르면, 동작 1615에서, 태스크 와쳐(예: 도 6의 task watcher)에서 on task removed 콜백이 발생할 수 있다. 다양한 실시예에 따르면, 동작 1620에서, 앱 실행 컨테이너 매니저는 on task removed 콜백을 받으면, 태스크 ID를 통해 앱 실행 컨테이너를 확인할 수 있다. 다양한 실시예에 따르면, 동작 1625에서, 해당 앱 실행 컨테이너는 신규 태스크의 런칭 여부 및 실행된 시간을 체크할 수 있다. 예를 들어, 앱 실행 컨테이너 매니저는 가상 화면 상에서 제1태스크의 실행 후 바로 제2태스크 가 실행되는 지 여부 및 제1태스크가 실행 후 종료된 시간을 확인할 수 있다. 앱 실행 컨테이너 매니저는 해당 앱 실행 컨테이너에서 제2태스크의 런칭이 감지되면, 태스크가 런칭 되었다는 flag를 true로 설정할 수 있다. 이 후 task가 바로 종료 되면 task 런칭 플래그 및 task의 실행 시간을 검사할 수 있다.다양한 실시예에 따르면, 동작 1630에서, 앱 실행 컨테이너 매니저는 해당 앱 실행 컨테이너 상에서 실행 후 종 료된 제1태스크의 실행 시간이 기준 시간(예: 2초)보다 작은 지 확인할 수 있다. 다양한 실시예에 따르면, 실행 후 종료된 제1태스크의 실행 시간이 기준 시간보다 작은 경우, 동작 1635에서, 해당 앱 실행 컨테이너에 종료 원인을 신규 태스크 런칭 후 종료로 기록할 수 있다. 다양한 실시예에 따르면, 동작 1640에서, 앱 실행 컨테이너 매니저는 해당 앱 실행 컨테이너를 삭제할 수 있다. 다양한 실시예에 따르면, 실행 후 종료된 제1태스크의 실행 시간이 기준 시간보다 큰 경우, 앱 실행 컨테이너에 종료 원인을 어플리케이션 종료로 기록할 수 있다. 제2전자 장치는 태스크의 종료 원인 값을 받아서, 해당 태스크가 실행되는 가상 화면을 처리할 수 있다. 다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 인터페이스, 메모리, 및 상기 디스플레이, 상기 통신 인 터페이스, 및 상기 메모리와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 통신 인터페이스를 통해 외부 장치와의 연결을 확인하고, 상기 외부 장치로부터 제1태스크의 실행 요청을 수신 하고, 상기 제1태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크 를 실행하고, 상기 제1태스크의 실행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외 부 장치에 전송하고, 및 상기 제1태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신 하고, 상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크 를 실행하고, 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외 부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1태스크에서 생성되는 제1이미지 정보를 압축하는 제1인코더, 상기 제1이미지 정보를 기록하는 제1입력 서피스 및 상기 제1가상 화면을 제1컨테이너로 구성하고, 상기 제2태스크에서 생성되는 제2이미지 정보를 압축하는 제2인코더, 상기 제2이미지 정보를 기록하는 제2입력 서피스 및 상기 제2가상 화면을 제2컨테이너로 구성하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1가상 화면의 식별 정보를 생성하여, 상기 제1가상 화면과 같이 상기 외부 장치에 전송하고, 및 상기 제2가상 화면의 식별 정보를 생성하여, 상기 제2가상 화면과 같이 상 기 외부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 외부 장치로부터 가상 화면에 대한 입력 이벤트가 수신되는 경 우, 상기 입력 이벤트에 포함된 식별 정보를 이용하여 상기 제1태스크 또는 상기 제2태스크에서 상기 입력 이벤 트를 처리하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 외부 장치로부터 상기 제1가상 화면에서 제3태스크를 실행 시 키는 인텐트(intent)가 수신되는 경우, 상기 제3태스크에 대응하는 가상 화면을 확인하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제3태스크에 대응하는 가상 화면이 생성되지 않은 경우, 상기 제3태스크의 실행 화면을 포함하는 제3가상 화면을 생성하여 상기 외부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제3태스크에 대응하는 가상 화면이 생성되어 있는 경우, 상기 제3태스크를 포그라운드에서 동작시키도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제3태스크의 실행 화면이 상기 디스플레이 상에 표시되고 있는 경우, 상기 디스플레이 상에서 상기 제3태스크의 실행 화면의 표시를 중단하고, 상기 제3태스크의 실행 화면을 포함하는 제3가상 화면을 생성하여 상기 외부 장치에 전송하거나, 또는 상기 디스플레이 상에 표시 중인 상기 제3태스크의 실행 화면을 상기 외부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 외부 장치로부터 제3태스크의 실행 요청을 수신하는 경우, 상 기 제1가상 화면 및 상기 제2가상 화면을 포함하는 생성된 가상 화면의 개수를 확인하고, 상기 가상 화면의 개 수가 최대 개수를 초과하는 경우, 상기 생성된 가상 화면 중 적어도 하나를 종료 하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 가상 화면의 최대 개수는, 상기 프로세서 및 상기 메모리에 대응하여 미리 할당 되거나, 또는 상기 프로세서가 상기 프로세서 및 상기 메모리의 가용 리소스, 상기 전자 장치의 온도, 상기 통 신 인터페이스를 통해 상기 외부 장치에 전송하는 데이터의 전송 속도 중 적어도 하나에 기반하여 결정하도록설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 가상 화면의 개수가 상기 최대 개수를 초과하는 경우, 상기 가 상 화면을 구성하는 태스크 중 비활성화 된 시간이 가장 오래된 태스크에 대응하는 가상 화면을 종료 하도록 설 정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 가상 화면 중 적어도 하나를 종료 시키는 경우, 상기 태스크의 종료 원인 정보를 상기 외부 장치에 전송하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 통신 인터페이스는, Wi-Fi Direct를 통해 상기 외부 장치와 무선 연결을 수립하 도록 설정될 수 있다. 다양한 실시예에 따른 전자 장치가 외부 장치의 디스플레이 상에 화면을 제공하는 방법은, 상기 외부 장치와의 연결을 확인하는 동작, 상기 외부 장치로부터 제1태스크의 실행 요청을 수신하는 동작, 상기 제1태스크의 실행 요청에 응답하여, 메모리에 저장된 어플리케이션에 기반하여 상기 제1태스크를 실행하고, 상기 제1태스크의 실 행 화면을 포함하는 제1가상 화면을 생성하고, 상기 제1가상 화면을 상기 외부 장치에 전송하는 동작, 상기 제1 태스크가 실행되는 동안, 상기 외부 장치로부터 제2태스크의 실행 요청을 수신하는 동작, 및 상기 제2태스크의 실행 요청에 응답하여, 상기 메모리에 저장된 어플리케이션에 기반하여 상기 제2태스크를 실행하고, 상기 제2태 스크의 실행 화면을 포함하는 제2가상 화면을 생성하고, 상기 제2가상 화면을 상기 외부 장치에 전송하는 동작 을 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1가상 화면을 생성하는 동작은, 상기 제1태스크에서 생성되는 제1이미지 정보 를 압축하는 제1인코더, 상기 제1이미지 정보를 기록하는 제1입력 서피스 및 상기 제1가상 화면을 제1컨테이너 로 구성하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 제1가상 화면을 상기 외부 장치에 전송하는 동작은 상기 제1가상 화면의 식별 정 보를 생성하여, 상기 제1가상 화면과 같이 상기 외부 장치에 전송하는 동작을 포함하고, 상기 제2가상 화면을 상기 외부 장치에 전송하는 동작은 상기 제2가상 화면의 식별 정보를 생성하여, 상기 제2가상 화면과 같이 상기 외부 장치에 전송하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 상기 외부 장치로부터 가상 화면에 대한 입력 이벤트가 수신되는 경우, 상기 입력 이 벤트에 포함된 식별 정보를 이용하여 상기 제1태스크 또는 상기 제2태스크에서 상기 입력 이벤트를 처리하는 동 작을 더 포함할 수 있다. 다양한 실시예에 따르면, 상기 외부 장치로부터 제3태스크의 실행 요청을 수신하는 경우, 상기 제1가상 화면 및 상기 제2가상 화면을 포함하는 생성된 가상 화면의 개수를 확인하는 동작, 및 상기 가상 화면의 개수가 최대 개 수를 초과하는 경우, 상기 생성된 가상 화면 중 적어도 하나를 종료 하는 동작을 포함할 수 있다. 다양한 실시예에 따른 전자 장치는, 디스플레이, 통신 인터페이스, 및 상기 디스플레이 및 상기 통신 인터페이 스와 작동적으로(operatively) 연결되는 프로세서를 포함하고, 상기 프로세서는, 상기 통신 인터페이스를 통해 외부 장치와 연결을 확인하고, 상기 외부 장치에서 실행될 수 있는 제1태스크를 실행하기 위한 제1사용자 입력 에 응답하여, 상기 제1태스크의 실행 요청을 상기 외부 장치에 전송하고, 상기 외부 장치로부터 상기 제1태스크 의 실행 화면을 포함하는 제1가상 화면을 수신하고, 상기 외부 장치에서 실행될 수 있는 제2태스크를 실행하기 위한 제2사용자 입력에 응답하여, 상기 제2태스크의 실행 요청을 상기 외부 장치에 전송하고, 상기 외부 장치로 부터 상기 제2태스크의 실행 화면을 포함하는 제2가상 화면을 수신하고, 및 상기 디스플레이 상에서, 상기 제1 가상 화면 및 상기 제2가상 화면을 서로 다른 윈도우 상에 표시하도록 설정될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1가상 화면의 윈도우 상에서 제3사용자 입력이 감지되는 경 우, 상기 제1가상 화면의 식별 정보와 함께 상기 제3사용자 입력에 대응하는 이벤트를 상기 외부 장치에 전송하 도록 설정될 수 있다.도면 도면1 도면2 도면3a 도면3b 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12a 도면12b 도면13 도면14a 도면14b 도면15 도면16"}
{"patent_id": "10-2020-0097391", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치의 예를 도시한 것이다. 도 3a 및 도 3b는 다양한 실시예에 따른 화면 공유 시 가상 화면을 생성하는 데 사용되는 제1전자 장치 및 제2 전자 장치의 구성을 도시한 것이다. 도 4는 다양한 실시예에 따른 제1전자 장치의 블록도이다.도 5는 다양한 실시예에 따른 제2전자 장치의 블록도이다. 도 6은 다양한 실시예에 따른 화면 공유 서비스를 제공하기 위한 제1전자 장치의 블록도이다. 도 7은 다양한 실시예에 따른 화면 공유 서비스를 제공하기 위한 제2전자 장치의 블록도이다. 도 8은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치에서 구성되는 컨테이너의 예를 도시한 것이다. 도 9는 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 화면 공유 서비스를 제공하는 방법의 흐름도이다. 도 10은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 이벤트 및 사용자 입력을 처리하는 방법의 흐름 도이다. 도 11은 다양한 실시예에 따른 제1전자 장치 및 제2전자 장치가 어플리케이션 종료 시에 수행하는 방법의 흐름 도이다. 도 12a 및 도 12b는 다양한 실시예에 따라 제2전자 장치의 디스플레이 상에 제공되는 화면을 도시한 것이다. 도 13은 다양한 실시예에 따른 제1전자 장치가 화면 공유 서비스 중 새로운 태스크의 실행 시 실행 화면을 처리 하는 방법의 흐름도이다. 도 14a 및 도 14b는 다양한 실시예에 따라 새로운 태스크 실행 시 제1전자 장치 및 제2전자 장치에서 제공하는 화면을 도시한 것이다. 도 15는 다양한 실시예에 따른 제1전자 장치가 새로운 가상 화면 상에서 태스크를 처리하는 방법의 흐름도이다. 도 16은 다양한 실시예에 따른 제1전자 장치가 런칭 후 바로 종료되는 태스크의 실행 시 이를 처리하는 방법의 흐름도이다."}
