{"patent_id": "10-2021-0066833", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0131796", "출원번호": "10-2021-0066833", "발명의 명칭": "프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하는 가속기", "출원인": "리벨리온 주식회사", "발명자": "오진욱"}}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "N 비트 가중치들을 저장하는 가중치 레지스터; N 비트 입력 활성화들을 저장하는 입력 활성화 레지스터;상기 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 상기 입력 활성화 레지스터로부터 상기 N 비트입력 활성화들을 수신하고, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M비트 입력 활성화들로 나누고, 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때,상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 2 x M 비트 가중치들과 2 xM 비트 입력 활성화들로 변환하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생성하는 오버플로우감지기; 각각이 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 M 비트 부분 곱들을 생성하는 제1복수의부분 곱 생성기들(partial product generators); 각각이 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 2 x M 비트 부분곱들을 생성하는 제2복수의 부분 곱 생성기들; 및상기 선택 신호에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어느 하나를 선택하는 선택기를포함하는 프로세싱 엘리먼트."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 오버플로우 감지기는, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누는 제1 M 비트 가중치 컨버터; 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누는 제1 M 비트 입력 활성화 컨버터; 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하는 제2 M 비트 가중치컨버터; 상기 허용 최대값을 넘어가는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하는 제2 M비트 입력 활성화 컨버터; 상기 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들을 선택적으로 상기 제2 M 비트 가중치 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제1스위치; 상기 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 선택적으로 상기 제2 M 비트입력 활성화 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제2스위치; 및상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하여, 상기 제1스위치와 상기 제2스위치를 제어하기 위한 스위칭 신호를 생성하는 스위치 컨트롤러를 포함하는 프로세싱엘리먼트. 공개특허 10-2022-0131796-3-청구항 3 제2항에 있어서, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 제1스위치는 상기 스위칭 신호에 따라 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하도록 제어되며, 상기 제2스위치는 상기 스위칭 신호에 따라 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하도록 제어되는 프로세싱 엘리먼트."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성하는 프로세싱 엘리먼트."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서, 상기 프로세싱 엘리먼트는, 상기 선택기로부터 출력되는 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들을 가산하여 부분 합(partialsum)과 부분 자리올림(partial carry)를 생성하는 CSA 어레이; 상기 CSA 어레이로부터 출력되는 상기 부분 합과 상기 부분 자리올림을 저장하기 위한 래치들(latches); 및상기 래치들에서 출력되는 상기 부분 합과 상기 부분 자리올림을 합산하고, 합산 값에 따라 상기 합산 값, 또는포화값이 출력되는 포화 가산기(saturating adder)를 포함하는 프로세싱 엘리먼트."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 선택기로부터 출력되는 부분 곱들은, K개의 부호 비트(sign bit)와 K개의 크기 비트들(magnitude bits)을 포함하며, 상기 부호 비트는 1 비트이며, 상기 크기 비트들은 ((4 x M)-1) 비트들인 프로세싱 엘리먼트."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "프로세싱 엘리먼트는 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, N 비트 입력 활성화들을 복수의 K개의 M 비트 가중치들로 나누는 단계; 상기 프로세싱 엘리먼트는 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하는 단계; 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때,상기 프로세싱 엘리먼트는 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들 각각을 2 x M 비트 가중치들과 2 x M 비트 입력 활성화들 각각으로 변환하는 단계; 상기 프로세싱 엘리먼트는 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생성하는 단계; 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 프로세싱 엘리먼트는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들에 대해 M 비트 부분 곱들을 생성하는단계; 상기 프로세싱 엘리먼트는 상기 2 x M 비트 가중치들과 상기 2 x M 비트 입력 활성화들에 대해 2 x M 비트 부분 곱들을 생성하는 단계; 및 상기 프로세싱 엘리먼트는 상기 선택 신호에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어공개특허 10-2022-0131796-4-느 하나를 선택하는 단계를 포함하는 프로세싱 엘리먼트의 동작 방법."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성하는 프로세싱 엘리먼트의 동작 방법."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제2항에 있어서, 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제2 M 비트 가중치컨버터로 전송하기 위해 상기 제2 M 비트 가중치 컨버터를 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하기 위해 상기 제2M 비트 입력 활성화 컨버터를 선택할 때, 상기 제2 M 비트 가중치 컨버터는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하며, 상기 제2 M 비트 입력 활성화 컨버터는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하며, 상기 제2복수의 부분 곱 생성기들은 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 상기 2 x M 비트 부분 곱들을 생성하는 프로세싱 엘리먼트의 동작 방법."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제2항에 있어서, 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제1복수의 부분 곱생성기들로 전송하기 위해 상기 제1복수의 부분 곱 생성기들을 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제1복수의 부분 곱 생성기들로 전송하기 위해 상기 제1복수의 부분곱 생성기들을 선택할 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 상기 M 비트부분 곱들을 생성하는 프로세싱 엘리먼트의 동작 방법."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제7항에 있어서, 상기 선택기로부터 출력되는 부분 곱들은, K개의 부호 비트(sign bit)와 K개의 크기 비트들(magnitude bits)을 포함하며, 상기 부호 비트는 1 비트이며, 상기 크기 비트들은 ((4 x M)-1) 비트들인 프로세싱 엘리먼트의 동작 방법."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "복수의 프로세싱 엘리먼트들을 포함하는 프로세싱 엘리먼트 어레이; 및상기 복수의 프로세싱 엘리먼트들로부터 출력되는 부분 합들을 저장하고, 부분 합들을 더하여 곱셈 가중치 합(weighted sum)을 출력하는 누산기를 포함하며, 상기 복수의 프로세싱 엘리먼트들 각각은, N 비트 가중치들을 저장하는 가중치 레지스터; N 비트 입력 활성화들을 저장하는 입력 활성화 레지스터;상기 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 상기 입력 활성화 레지스터로부터 상기 N 비트입력 활성화들을 수신하고, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M비트 입력 활성화들로 나누고, 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수공개특허 10-2022-0131796-5-행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때,상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 2 x M 비트 가중치들과 2 xM 비트 입력 활성화들로 변환하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생성하는 오버플로우감지기; 각각이 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 M 비트 부분 곱들을 생성하는 제1복수의부분 곱 생성기들(partial product generators); 각각이 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 2 x M 비트 부분곱들을 생성하는 제2복수의 부분 곱 생성기들; 및상기 선택 신호에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어느 하나를 선택하는 선택기를포함하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 오버플로우 감지기는, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누는 제1 M 비트 가중치 컨버터; 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누는 제1 M 비트 입력 활성화 컨버터; 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하는 제2 M 비트 가중치컨버터; 상기 허용 최대값을 넘어가는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하는 제2 M비트 입력 활성화 컨버터; 상기 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들을 선택적으로 상기 제2 M 비트 가중치 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제1스위치; 상기 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 선택적으로 상기 제2 M 비트입력 활성화 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제2스위치; 및상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하여, 상기 제1스위치와 상기 제2스위치를 제어하기 위한 스위칭 신호를 생성하는 스위칭 컨트롤러를 포함하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 제1스위치는 상기 스위칭 신호에 따라 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하도록 제어되며, 상기 제2스위치는 상기 스위칭 신호에 따라 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하도록 제어되는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항에 있어서, 상기 복수의 프로세싱 엘리먼트들 각각은, 상기 선택기로부터 출력되는 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들을 가산하여 부분 합(partial공개특허 10-2022-0131796-6-sum)과 부분 자리올림(partial carry)를 생성하는 CSA 어레이; 상기 CSA 어레이로부터 출력되는 상기 부분 합과 상기 부분 자리올림을 저장하기 위한 래치들(latches); 및상기 래치들에서 출력되는 상기 부분 합과 상기 부분 자리올림을 합산하고, 합산 값에 따라 상기 합산 값, 또는포화값이 출력되는 포화 가산기(saturating adder)를 포함하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제13항에 있어서, 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제2 M 비트 가중치컨버터로 전송하기 위해 상기 제2 M 비트 가중치 컨버터를 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하기 위해 상기 제2M 비트 입력 활성화 컨버터를 선택할 때, 상기 제2 M 비트 가중치 컨버터는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하며, 상기 제2 M 비트 입력 활성화 컨버터는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하며, 상기 제2복수의 부분 곱 생성기들은 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 상기 2 x M 비트 부분 곱들을 생성하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제13항에 있어서, 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제1복수의 부분 곱생성기들로 전송하기 위해 상기 제1복수의 부분 곱 생성기들을 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제1복수의 부분 곱 생성기들로 전송하기 위해 상기 제1복수의 부분곱 생성기들을 선택할 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 상기 M 비트부분 곱들을 생성하는 가속기."}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "프로세싱 엘리먼트이 개시된다. 상기 프로세싱 엘리먼트는 N 비트 가중치들을 저장하는 가중치 레지스터, N 비트 입력 활성화들을 저장하는 입력 활성화 레지스터, 상기 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 상기 입력 활성화 레지스터로부터 상기 N 비트 입력 활성화들을 수신하고, 상기 N 비트 가중치들을 복 (뒷면에 계속)"}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하는 가속기에 관한 것으로, 상세하게는 빠른 곱셈 연산을 수행하기 위한 프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하는 가속기에 관한 것이다."}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 신경망(artificial neural network)은 컴퓨터 비전(computer vision), 자연어 처리, 및 음성 인식과 같은 다양한 인공 지능 어플리케이션들에서 사용된다. 인공 신경망은 훈련 단계와 추론 단계로 나뉠 수 있다. 훈련 단계에서 훈련 데이터를 이용하여 인공 신경망의 파라미터들이 학습된다. 추론 단계에서 새로운 입력 데이터를 훈련된 인공 신경망에 적용하여 인공 신경망의 예측 결과가 출력된다. 훈련 동작은 CPU, 또는 GPU에서 수행된다. 추론 동작은 인공 지능 어플리케이션들을 가속시키기 위해 특별히 고 안된 하드웨어인 AI 가속기에서 수행된다. AI 가속기는 복수의 프로세싱 엘리먼트들을 포함한다. AI 가속기의 프로세싱 엘리먼트는 인공 신경망의 가중치 들과 입력 활성화들(input activations)을 곱하는 연산을 수행한다. 프로세싱 엘리먼트는 2 비트 가중치들과 2 비트 입력 활성화들을 곱셈할 때, 4 비트 가중치들과 4 비트 입력 활 성화들의 곱셈보다 연산 속도가 더 빠르다는 장점이 있다. 2 비트 가중치들과 2 비트 입력 활성화들의 곱셈은 4 비트로 표현된다. 2 비트 가중치들과 2 비트 입력 활성화 들의 곱셈의 값이 4 비트를 넘을 때, 최대 허용 값을 넘는 오버플로우(overflow) 문제가 발생할 수 있다. 예컨 대, 2 비트 가중치들 '00', '01', '10', 및 '11'이 십진수 1, 5, 7, 및 9를 나타내고, 2 비트 입력 활성화들'00', '01', '10', 및 '11'이 십진수 1, 5, 7, 9를 나타낸다고 가정할 때, 2 비트 가중치 '11'과 2 비트 입력 활성화 '11'의 곱은 십진수로 81이어야 한다. 하지만, 2 비트 가중치 '11'과 2 비트 입력 활성화 '11'의 곱은 4 비트로 표현될 수 없는 오버플로우 문제가 발생한다. 십진수 81은 2 진수로 '1010001'로 표현된다. 즉, 십진수 81은 4 비트로 표현될 수 없으며, 7 비트 이상으로 표현되어야한다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국 등록특허공보 제10-1981109호(2019.05.16.)"}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 이루고자 하는 기술적인 과제는 상기와 같은 종래의 문제점을 해결하기 위한 것으로, 곱셈 연산의 속 도는 빠르게 하면서도 오버플로우 문제는 해결할 수 있는 프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하 는 가속기를 제공하는 것이다."}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시 예에 따른 프로세싱 엘리먼트는 N 비트 가중치들을 저장하는 가중치 레지스터, N 비트 입력 활 성화들을 저장하는 입력 활성화 레지스터, 상기 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 상기 입력 활성화 레지스터로부터 상기 N 비트 입력 활성화들을 수신하고, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누고, 상기 복 수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하며, 상기 곱셈 연 산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 허용 최 대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 2 x M 비트 가중치들과 2 x M 비트 입력 활성화들로 변환하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생성하는 오버플로우 감지기, 각각이 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 M 비트 부분 곱들을 생성하는 제1복수의 부분 곱 생성기들, 각각이 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 2 x M 비트 부분 곱들을 생성하는 제2복수의 부분 곱 생성기들, 및 상기 선택 신 호에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어느 하나를 선택하는 선택기를 포함한다. 상기 오버플로우 감지기는 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누는 제1 M 비트 가중치 컨버터, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누는 제1 M 비트 입력 활성화 컨 버터, 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하는 제2 M 비트 가중치 컨버터, 상기 허용 최대값을 넘어가는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하는 제2 M 비트 입력 활성화 컨버터, 상기 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들 을 선택적으로 상기 제2 M 비트 가중치 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위 해 구현되는 제1스위치, 상기 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 선택 적으로 상기 제2 M 비트 입력 활성화 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제2스위치, 및 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하여, 상기 제1스위치와 상기 제2스위치를 제어하기 위한 스위칭 신호를 생성하는 스위치 컨트롤러 를 포함한다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 제1스위치는 상기 스위칭 신호에 따라 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하도 록 제어되며, 상기 제2스위치는 상기 스위칭 신호에 따라 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하도록 제어된다. 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복 수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성한다. 상기 프로세싱 엘리먼트는 상기 선택기로부터 출력되는 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들을 가산하여 부분 합(partial sum)과 부분 자리올림(partial carry)를 생성하는 CSA 어레이, 상기 CSA 어레이로부 터 출력되는 상기 부분 합과 상기 부분 자리올림을 저장하기 위한 래치들(latches), 및 상기 래치들에서 출력되 는 상기 부분 합과 상기 부분 자리올림을 합산하고, 합산 값에 따라 상기 합산 값, 또는 포화값이 출력되는 포 화 가산기(saturating adder)를 포함한다. 상기 선택기로부터 출력되는 부분 곱들은 K개의 부호 비트(sign bit)와 K개의 크기 비트들(magnitude bits)을 포함한다. 상기 부호 비트는 1 비트이며, 상기 크기 비트들은 ((4 x M)-1) 비트들이다. 본 발명의 실시 예에 따른 프로세싱 엘리먼트의 동작 방법은 프로세싱 엘리먼트는 N 비트 가중치들을 복수의 K 개의 M 비트 가중치들로 나누고, N 비트 입력 활성화들을 복수의 K개의 M 비트 가중치들로 나누는 단계, 상기 프로세싱 엘리먼트는 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대 해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하는 단계, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들 이 있다고 판단될 때, 상기 프로세싱 엘리먼트는 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들 각각을 2 x M 비트 가중치들과 2 x M 비트 입력 활성화들 각각으로 변환하는 단계, 상기 프 로세싱 엘리먼트는 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생 성하는 단계, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 프로세싱 엘리먼트는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들에 대해 M 비트 부분 곱들을 생성하는 단계, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 있다고 판단될 때, 상기 프로세싱 엘리먼트는 상기 2 x M 비트 가중치들과 상기 2 x M 비트 입력 활성화들에 대해 2 x M 비트 부분 곱들을 생성하는 단계, 및 상기 프로세싱 엘리먼트는 상기 선택 신호에 따라 상기 M 비트 부분 곱들과 상 기 2 x M 비트 부분 곱들 중 어느 하나를 선택하는 단계를 포함한다. 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복 수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성한다. 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하기 위해 상기 제2 M 비트 가중치 컨버터를 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하기 위해 상기 제2 M 비트 입력 활성화 컨버터를 선택할 때, 상기 제2 M 비트 가중치 컨버터는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하며, 상기 제2 M 비트 입력 활성화 컨버터는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하며, 상기 제2복수의 부분 곱 생 성기들은 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 상기 2 x M 비트 부분 곱들을 생성한다. 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제1복수의 부분 곱 생성기들로 전송하 기 위해 상기 제1복수의 부분 곱 생성기들을 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제 1복수의 부분 곱 생성기들로 전송하기 위해 상기 제1복수의 부분곱 생성기들을 선택할 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 상기 M 비트 부분 곱들을 생성한다. 상기 선택기로부터 출력되는 부분 곱들은 K개의 부호 비트(sign bit)와 K개의 크기 비트들(magnitude bits)을 포함한다. 상기 부호 비트는 1 비트이며, 상기 크기 비트들은 ((4 x M)-1) 비트들이다. 본 발명의 실시 예에 따른 가속기는 복수의 프로세싱 엘리먼트들을 포함하는 프로세싱 엘리먼트 어레이; 및 상 기 복수의 프로세싱 엘리먼트들로부터 출력되는 부분 합들을 저장하고, 부분 합들을 더하여 곱셈 가중치 합 (weighted sum)을 출력하는 누산기를 포함한다. 상기 복수의 프로세싱 엘리먼트들 각각은 N 비트 가중치들을 저장하는 가중치 레지스터, N 비트 입력 활성화들 을 저장하는 입력 활성화 레지스터, 상기 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 상기 입력 활성화 레지스터로부터 상기 N 비트 입력 활성화들을 수신하고, 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누고, 상기 복수의 K 개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하며, 상기 곱셈 연산들 의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 허용 최대값 을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 2 x M 비트 가중치들과 2 x M 비트 입력 활 성화들로 변환하며, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신호를 생 성하는 오버플로우 감지기, 각각이 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 M 비트 부분 곱들을 생성하는 제1복수의 부분 곱 생성기들, 각각이 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 2 x M 비트 부분 곱들을 생성하는 제2복수의 부분 곱 생성기들, 및 상기 선택 신 호에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어느 하나를 선택하는 선택기를 포함한다. 상기 오버플로우 감지기는 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누는 제1 M 비트 가중치 컨버터, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나누는 제1 M 비트 입력 활성화 컨 버터, 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하는 제2 M 비트 가중치 컨버터, 상기 허용 최대값을 넘어가는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하는 제2 M 비트 입력 활성화 컨버터, 상기 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들 을 선택적으로 상기 제2 M 비트 가중치 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위 해 구현되는 제1스위치, 상기 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 선택 적으로 상기 제2 M 비트 입력 활성화 컨버터와 상기 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현되는 제2스위치, 및 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하여, 상기 제1스위치와 상기 제2스위치를 제어하기 위한 스위칭 신호를 생성하는 스위칭 컨트롤러 를 포함한다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 상기 제1스위치는 상기 스위칭 신호에 따라 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하도 록 제어되며, 상기 제2스위치는 상기 스위칭 신호에 따라 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하도록 제어된다. 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 상기 제1복 수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성한다. 상기 복수의 프로세싱 엘리먼트들 각각은 상기 선택기로부터 출력되는 상기 M 비트 부분 곱들과 상기 2 x M 비 트 부분 곱들을 가산하여 부분 합(partial sum)과 부분 자리올림(partial carry)를 생성하는 CSA 어레이, 상기 CSA 어레이로부터 출력되는 상기 부분 합과 상기 부분 자리올림을 저장하기 위한 래치들, 및 상기 래치들에서 출력되는 상기 부분 합과 상기 부분 자리올림을 합산하고, 합산 값에 따라 상기 합산 값, 또는 포화값이 출력되 는 포화 가산기를 포함한다. 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제2 M 비트 가중치 컨버터로 전송하기 위해 상기 제2 M 비트 가중치 컨버터를 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제2 M 비트 입력 활성화 컨버터로 전송하기 위해 상기 제2 M 비트 입력 활성화 컨버터를 선택할 때, 상기 제2 M 비트 가중치 컨버터는 상기 M 비트 가중치들을 상기 2 x M 비트 가중치들로 변환하며, 상기 제2 M 비트 입력 활성화 컨버터는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환하며, 상기 제2복수의 부분 곱 생 성기들은 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 상기 2 x M 비트 부분 곱들을 생성한다. 상기 스위칭 신호에 의해 상기 제1스위치가 상기 M 비트 가중치들을 상기 제1복수의 부분 곱 생성기들로 전송하 기 위해 상기 제1복수의 부분 곱 생성기들을 선택하고, 상기 제2스위치가 상기 M 비트 입력 활성화들을 상기 제 1복수의 부분 곱 생성기들로 전송하기 위해 상기 제1복수의 부분곱 생성기들을 선택할 때, 상기 제1복수의 부분 곱 생성기들은 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 상기 M 비트 부분 곱들을 생성한다. 상기 선택기로부터 출력되는 부분 곱들은 K개의 부호 비트(sign bit)와 K개의 크기 비트들(magnitude bits)을 포함한다. 상기 부호 비트는 1 비트이며, 상기 크기 비트들은 ((4 x M)-1) 비트들이다."}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시 예에 따른 프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하는 가속기는 가중치들과 입력 활 성화들을 2 비트 곱셈 동작을 수행함으로써 곱셈 연산 속도의 향상시킬 수 있고, 소비 전력을 감소시킬 수 있는 효과가 있다. 본 발명의 실시 예에 따른 프로세싱 엘리먼트, 이의 동작 방법, 및 이를 포함하는 가속기는 가중치들과 입력 활 성화들의 2 비트 곱셈 동작이 오버플로우될 때, 가중치들과 입력 활성화들을 4 비트 곱셈 동작으로 수행하게 함 으로써 오버플로우 문제를 해결할 수 있는 효과가 있다."}
{"patent_id": "10-2021-0066833", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에 개시되어 있는 본 발명의 개념에 따른 실시 예들에 대해서 특정한 구조적 또는 기능적 설명들은 단 지 본 발명의 개념에 따른 실시 예들을 설명하기 위한 목적으로 예시된 것으로서, 본 발명의 개념에 따른 실시 예들은 다양한 형태들로 실시될 수 있으며 본 명세서에 설명된 실시 예들에 한정되지 않는다. 본 발명의 개념에 따른 실시 예들은 다양한 변경들을 가할 수 있고 여러 가지 형태들을 가질 수 있으므로 실시 예들을 도면에 예시하고 본 명세서에 상세하게 설명하고자 한다. 그러나, 이는 본 발명의 개념에 따른 실시 예 들을 특정한 개시 형태들에 대해 한정하려는 것이 아니며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물, 또는 대체물을 포함한다. 제1 또는 제2 등의 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 상기 구성 요소들은 상기 용어 들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으로 만, 예컨대 본 발명의 개념에 따른 권리 범위로부터 이탈되지 않은 채, 제1구성요소는 제2구성요소로 명명될 수 있고, 유사하게 제2구성요소는 제1구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관 계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 본 명세서에서 사용한 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 설시된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 나타낸다. 일반 적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미를 갖는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 이하, 첨부한 도면을 참조하여 본 발명의 바람직한 실시 예를 설명함으로써, 본 발명을 상세히 설명한다. 도 1은 본 발명의 실시 예에 따른 시스템의 블록도를 나타낸다. 도 2는 도 1에 도시된 프로세싱 유닛의 동작을 설명하기 위한 인공 신경망의 블록도를 나타낸다. 도 1과 도 2를 참고하면, 시스템은 인공 신경망의 가중치들(weights)과 활성화들(activations)의 곱 셈 연산을 보다 빠르게 하고 소비 전력을 감소시키기 위한 시스템이다. 시스템은 스마트 폰, 노트북, 태블 릿 PC, PC, 또는 서버와 같은 전자 장치이다. 시스템은 CPU(Central Processing Unit; 10), GPU(Graphics Processing Unit; 20), 메모리, 및 가속기를 포함한다. 도 1에 도시된 시스템은 본 발명을 설명 하기 위한 일 실시 예를 나타낸다. 실시 예에 따라 시스템은 다양하게 구현될 수 있다. 예컨대, 시스템 은 입력 장치(미도시), 또는 송수신기(transceiver; 미도시)를 더 포함할 수 있다. CPU, GPU, 메 모리, 및 가속기는 버스에 접속된다. CPU, GPU, 메모리, 및 가속기는 버스 를 통해 명령들과 데이터를 주고 받는다. CPU는 인공 신경망의 가중치들과 편향 벡터들(bias vectors)인 파라미터들을 훈련시키기 위한 명령들 을 실행한다. 실시 예에 따라 인공 신경망의 훈련은 GPU에서 수행될 수 있다. 메모리는 CPU, 또는 GPU에서 실행되는 명령들을 저장한다. 본 발명에서 프로세싱 유닛은 CPU, 또는 GPU를 의미한다. 가속기는 인공 신경망의 훈련이 끝난 뒤인 인공 신경망의 추론이 수행된다. 실시 예에 따라 가 속기는 AI 가속기로 호칭될 수 있다. 또한, 실시 예에 따라 가속기는 가속 하드웨어로 호칭될 수 있 다. 도 2를 참고하면, 인공 신경망은 입력 레이어(input layer; 105), 은닉 레이어(hidden layer; 107), 및 출력 레이어(output layer; 109)를 포함한다. 입력 레이어는 각 값(each value)을 수신한다. 입력 레이어는 각 값을 복제(duplicate)하고, 복제된 각 값을 은닉층으로 전송한다. 상기 각 값은 입력 활성화(input activations)라고 호칭될 수 있다. 메모리 는 각 값을 저장한다. 은닉 레이어는 각 값과 가중치들을 곱하고, 가중치 합(weighted sum)을 출력한다. 상기 가중치 합은 출력 활성화(output activations)라고 호칭될 수 있다. 메모리는 가중치들과 가중치 합을 저장한다. 실시 예에 따라 은닉 레이어는 가중치 합을 활성화 함수에 적용할 수 있다. 인공 신경망의 훈련 단계 에서 각 값과 가중치들의 곱은 CPU, 또는 GPU에서 수행된다. 인경 신경망의 추론 단계에서 각 값 과 가중치들의 곱은 가속기에서 수행된다. 출력 레이어는 은닉 레이어로부터 수신된 가중치 합을 활성화 함수(activation function)에 적용하여 출력 값을 생성한다. 입력 레이어, 은닉 레이어, 및 출력 레이어 각각은 노드들을 포함한다. 실시 예에 따라 입력 레 이어, 은닉 레이어, 및 출력 레이어의 노드들의 수와, 은닉 레이어의 레이어 수는 다양할 수 있다. 도 3은 도 1에 도시된 가속기의 블록도를 나타낸다. 도 1과 도 3을 참고하면, 가속기는 컨트롤러, 입력 활성화 버퍼, 가중치 버퍼, 출력 버퍼 , 제1레지스터, 제2레지스터, 복수의 프로세싱 엘리먼트들(processing elements; 270), 및 누 산기(accumulator; 280)를 포함한다. 컨트롤러는 CPU, 또는 GPU로부터 가속기의 동작을 실행시키기 위한 명령들을 수신한다. 예컨 대, 상기 명령들은 로드(load) 명령, 곱셈 명령, 합산 명령, 및 저장 명령을 포함할 수 있다. 컨트롤러가 상기 로드 명령을 수신할 때, 컨트롤러는 제1레지스터에 저장된 입력 활성화들, 또는 제2레지스터 에 저장된 가중치들을 복수의 프로세싱 엘리먼트들에 로드(load)하기 위해 제1레지스터, 또는 제2레지스터를 제어한다. 컨트롤러는 CPU, 또는 GPU로부터 수신된 명령들에 따라 가속기 의 각 구성요소들(220, 230, 240, 250, 260, 270, 및 280)의 동작들을 제어한다. 입력 활성화 버퍼는 메모리로부터 입력 활성화들을 수신하여 저장한다. 가중치 버퍼는 메모리 로부터 가중치들을 수신하여 저장한다. 출력 버퍼는 누산기로부터 출력되는 결과 값을 저장하고, 결과 값을 CPU, GPU, 또는 메모리 로 전송한다. 제1레지스터는 입력 활성화 버퍼로부터 입력 활성화들을 수신하고 저장한다. 제2레지스터는 가 중치 버퍼로부터 가중치들을 수신하고 저장한다. 제1레지스터와 제2레지스터는 FIFO(First In First Out) 레지스터일 수 있다. 복수의 프로세싱 엘리먼트들 각각은 제1레지스터로부터 수신된 입력 활성화들과 제2레지스터로 부터 수신된 가중치들을 곱하는 곱셈 연산을 수행하고, 부분 합(partial sum)을 생성한다. 복수의 프로세싱 엘 리먼트들은 프로세싱 엘리먼트 어레이로 호칭될 수 있다. 누산기는 복수의 프로세싱 엘리먼트들로부터 출력되는 부분 합들을 저장하고, 부분 합들을 더하여 곱 셈 가중치 합(weighted sum)을 업데이트한다. 실시 예에 따라 가속기의 구조는 다양하게 구현될 수 있다. 도 4는 도 3에 도시된 프로세싱 엘리먼트(processing element)의 내부 블록도를 나타낸다. 도 1 내지 도 4를 참고하면, 복수의 프로세싱 엘리먼트들은 모두 같은 구조를 가진다. 도 4에 대표적으로 복수의 프로세싱 엘리먼트들 중 어느 하나의 프로세싱 엘리먼트가 도시된다. 프로세싱 엘리먼트는 가중치 레지스터, 입력 활성화 레지스터, 오버플로우 감지기, 제1복 수의 부분 곱 생성기들, 제2복수의 부분 곱 생성기들, 선택기, CSA 어레이, 래치들 (latches; 283), 및 포화 가산기를 포함한다. 가중치 레지스터는 제2레지스터에 저장된 N 비트 가중치들을 수신하고, N 비트 가중치들을 저장한다. 상기 N은 양수이다. 예컨대, 상기 N은 32일 수 있다. 실시 예에 따라 상기 N은 다양한 값을 가질 수 있다. 상기 N 비트 가중치들은 가중치 시퀀스(sequence)를 나타낸다. 입력 활성화 레지스터는 제1레지스터에 저장된 N 비트 입력 활성화들을 수신하고, N 비트 입력 활성 화들을 저장한다. 상기 N은 양수이다. 예컨대, 상기 N은 32일 수 있다. 실시 예에 따라 상기 N은 다양한 값을 가질 수 있다. 상기 N 비트 입력 활성화들은 가중치 시퀀스를 나타낸다. 각 비트 값은 0, 또는 1이다. 오버플로우 감지기는 가중치 레지스터로부터 상기 N 비트 가중치들을 수신하고, 입력 활성화 레지스 터로부터 상기 N 비트 입력 활성화들을 수신한다. 오버플로우 감지기는 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 가중치들로 나눈다. 상기 M은 양수이다. 예컨대, 상기 M은 2일 수 있다. 상기 N이 32이고, 상기 M은 2일 때, 오버플로우 감지기는 32 비트 가중치들을 16개의 2 비트 가중치들로 나누고, 32 비트 입력 활성화들을 16개의 2 비트 가중치들로 나눈다. 실시 예에 따라 상기 M은 4일 수 있다. 또 한, 실시 예에 따라 상기 M은 2의 배수일 수 있다. 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나 누고, 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 가중치들로 나누는 이유는 M 비트 가중치들과 M 비트 입력 활성화들을 곱하기 위함이다. 각각의 가중치들은 M 비트로 표현된다. 각각의 입력 활성화들은 M 비트로 표 현된다. 오버플로우 감지기는 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각 에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과 들이 있는지 판단한다. 예컨대, 오버플로우 감지기는 16개의 2 비트 가중치들과 16개의 2 비트 입력 활성 화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산 들의 결과들이 있는지 판단한다. 상기 허용 최대값은 임의의 값을 가진다. 16개의 2 비트 가중치들과 16개의 2 비트 입력 활성화들은 양자화(quantization)된다. 예컨대, 2 진수 \"00\"은 10 진수로 1을, 2 진수 \"01\"는 10 진 수로 5를, 2 진수 \"10\"는 10 진수로 7을, \"11\"은 10 진수로 9를 나타낼 수 있다. 2 비트 가중치 \"11\"과 2 비트 입력 활성화 \"11\"에 대해 곱셈 연산을 한다고 가정할 때, 곱셈 연산의 결과는 10 진수로 9와 9의 곱인 81이다. 하지만, 2 비트 가중치 \"11\"과 2 비트 입력 활성화 \"11\"의 곱은 4 비트로 표현될 수 없는 오버플로우 문제가 발 생한다. 십진수 81은 2 진수로 \"1010001\"로 표현된다. 즉, 십진수 81은 7 비트 이상으로 표현된다. 따라서 2 비트 가중치 \"11\"과 2 비트 입력 활성화 \"11\"에 대해 곱셈 연산은 임의의 값인 상기 허용 최대값(예컨대, 15)을 초과하게 된다. 15는 \"1111\"의 십진수 값이다. 오버플로우 감지기는 2 비트 가중치 \"11\"과 2 비트 입력 활 성화 \"11\"에 대해 곱셈 연산은 허용 최대값을 넘어간다고 판단한다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 오버플로우 감지기는 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 2 x M 비트 가중치들과 2 x M 비트 입력 활성화들로 변환한다. 여기서 \"x\"는 곱하기를 의미한다. 예컨대, 상기 M이 2일 때, 상기 허용 최대값을 넘어가는 2 비트 가중치들과 2 비트 입력 활성화들은 4 비트 가중치들과 4 비 트 입력 활성화들로 변환된다. 실시 예에 따라 상기 M이 4일 때, 상기 허용 최대값을 넘어가는 4 비트 가중치들 과 4 비트 입력 활성화들은 8 비트 가중치들과 8 비트 입력 활성화들로 변환된다. 오버플로우 감지기는 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신 호(SEL)를 생성한다. 예컨대, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 있을 때, 선 택 신호(SEL)는 비트 1을 포함할 수 있다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때, 선택 신호(SEL)는 비트 0을 포함할 수 있다. 도 5는 도 4에 도시된 오버플로우 감지기(overflow detector)의 내부 블록도를 나타낸다. 도 4와 도 5를 참고하면, 오버플로우 감지기는 제1 M 비트 가중치 컨버터, 제1 M 비트 입력 활성화 컨버터, 스위치 컨트롤러, 제1스위치, 제2 M 비트 가중치 컨버터, 제2스위치, 및 제 2 M 비트 입력 활성화 컨버터를 포함한다. 제1 M 비트 가중치 컨버터는 상기 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나눈다. 상기 N 비 트 가중치들은 가중치 시퀀스이다. 즉, 상기 N 비트 가중치들은 복수의 가중치들을 포함한다. 예컨대, 상기 N이 32일 때, 상기 N 비트 가중치들은 \"A1~A32\"로 표현될 수 있다. 여기서 \"A1~B32\"의 값은 0, 또는 1의 비트를 가 진다. 상기 M이 2일 때, 상기 N 비트 가중치들은 16개의 2 비트 가중치들로 나뉠 수 있다. 예컨대, 2 비트 가중 치들은 \"A1, A2\", \"A3, A4\",..., 및 \"A31, A32\"로 표현될 수 있다. 임의의 가중치의 값은 \"A1, A2\", \"A3, A4\",..., 또는 \"A31, A32\"와 같이 2 비트 가중치로 표현될 수 있다. 제1 M 비트 입력 활성화 컨버터는 상기 N 비트 입력 활성화들을 복수의 K개의 M 비트 입력 활성화들로 나 눈다. 상기 N 비트 가중치들은 가중치 입력 활성화들이다. 즉, 상기 M 비트 입력 활성화들은 복수의 입력 활성 화들을 포함한다. 예컨대, 상기 N이 32일 때, 상기 N 비트 입력 활성화들은 \"B1~B32\"로 표현될 수 있다. 여기서 \"B1~32\"의 값은 0, 또는 1의 비트를 가진다. 상기 M이 2일 때, 상기 N 비트 입력 활성화들은 16개의 2 비트 입 력 활성화들로 나뉠 수 있다. 예컨대, 2 비트 입력 활성화들은 \"B1, B2\", \"B3, B4\",..., 및 \"B31, B32\"로 표현 될 수 있다. 임의의 입력 활성화의 값은 \"B1, B2\", \"B3, B4\",..., 또는 \"B31, B32\"와 같이 2 비트 입력 활성화 로 표현될 수 있다. 스위치 컨트롤러는 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단하여, 제1스위치와 제2스위치를 제어하기 위한 스위칭 신호(SW)를 생성한다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 제1스위치 는 스위칭 신호(SW)에 따라 상기 M 비트 가중치들을 제2 M 비트 가중치 컨버터로 전송하도록 제어되 며, 제2스위치는 스위칭 신호(SW)에 따라 상기 M 비트 입력 활성화들을 제2 M 비트 입력 활성화 컨버터 로 전송하도록 제어된다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 없다고 판단될 때, 제1스위치는 스위칭 신호(SW)에 따라 상기 M 비트 가중치들을 제1복수의 부분 곱 생성기들로 전송하 도록 제어하며, 제2스위치는 스위칭 신호(SW)에 따라 상기 M 비트 입력 활성화들을 제2복수의 부분 곱 생 성기들로 전송하도록 제어된다. 예컨대, 스위치 컨트롤러은 16개의 2 비트 가중치들과 16개의 2 비트 입력 활성화들 각각에 대해 곱셈 연 산들을 수행하여 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과들이 있는지 판단한 다. 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\"를 제외한 나머지 15개의 2 비트 가중치들과, 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\"를 제외한 나머지 15개의 2 비트 입력 활성화들의 곱셈 연 산들의 결과들은 허용 최대값을 넘어가지 않는다. 하지만, 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\" 와 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\"의 곱셈 연산의 결과가 허용 최대값을 넘어갈수 있다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 있을 때, 스위치 신호(SW)는 비트 1을 포함 할 수 있다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때, 스위치 신호(SW)는 비트 0을 포함할 수 있다. 또한, 스위치 컨트롤러는 선택기의 동작을 제어하기 위한 선택 신호(SEL) 을 생성할 수 있다. 선택 신호(SEL)는 스위치 신호(SW)와 유사하다. 즉, 상기 곱셈 연산들의 결과들 중 상기 허 용 최대값을 넘어가는 결과가 있을 때, 선택 신호(SEL)는 비트 1을 포함할 수 있다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때, 선택 신호(SEL)는 비트 0을 포함할 수 있다. 제1스위치는 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들을 선택적으로 제2 M 비트 가중치 컨버터와 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현된다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 있을 때, 제1스위치는 스위칭 신호 (SW)에 따라 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들을 제2 M 비트 가중치 컨버터 로 전송하도록 스위치된다. 예컨대, 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\"와 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\"의 곱셈 연산의 결과가 허용 최대값을 넘어갈 때, 제1스위치 는 제1 M 비트 가중치 컨버터에서 출력되는 2 비트 가중치들(\"A1, A2\", \"A3, A4\", ..., 및 \"A31, A32\") 중 2 비트 가중치 \"A1, A2\"를 제2 M 비트 가중치 컨버터로 전송하도록 스위치된다. 실시 예에 따라 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\", 2 비트 가중치 \"A3, A4\"와 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\", 2 비트 입력 활성화 \"B3, B4\"의 곱셈 연산의 결과가 허용 최대값을 넘어갈 때, 제1스위치는 제1 M 비트 가중치 컨버터에서 출력되는 2 비트 가중치들(\"A1, A2\", \"A3, A4\", ..., 및 \"A31, A32\") 중 2 비트 가중치 \"A1, A2\"와 2 비트 가중치 \"A3, A4\"를 제2 M 비트 가중치 컨버터 로 전송하도록 스위치될 수 있다. 스위칭 신호(SW)가 비트 1일 때, 제1스위치는 제1 M 비트 가중치 컨버터 에서 출력되는 상기 M 비트 가중치들을 제2 M 비트 가중치 컨버터로 전송하도록 스위치된다. 제2 M 비트 가중치 컨버터는 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들을 상기 2 x M 비트 가중 치들로 변환한다. 예컨대, 제2 M 비트 가중치 컨버터는 상기 허용 최대값을 넘어가는 2 비트 가중치(예컨 대, \"A1, A2\")를 상기 4 비트 가중치(예컨대, \"0, 0, A1, A2\")로 변환한다. 상기 4 비트 가중치로 변환하기 위 해 임의의 제로들(zero)이 삽입되었으나, 실시 예에 따라 상기 4 비트 가중치들은 다양한 방법들로 변환될 수 있다. 실시 예에 따라 제2 M 비트 가중치 컨버터는 상기 허용 최대값을 넘어가는 상기 2 비트 가중치들(예 컨대, \"A1, A2\",\"A3, A4\")을 상기 4 비트 가중치들(예컨대, \"0, 0, A1, A2\", \"0, 0, A3, A4\")로 변환할 수 있 다. 제2 M 비트 가중치 컨버터는 변환된 상기 2 x M 비트 가중치들을 2 x M 비트 곱셈을 위해 제2복수의 부분 곱 생성기들에 전송한다. 예컨대, 상기 2 비트 가중치(예컨대, \"A1, A2\")는 제2복수의 부분 곱 생성기들 로 전송된다. 실시 예에 따라 4 비트 가중치들(예컨대, \"0, 0, A1, A2\", \"0, 0, A3, A4\")은 제2복수의 부 분 곱 생성기들로 전송된다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때 제1스위치의 동작에 대해 설 명한다. 제1스위치는 제1 M 비트 가중치 컨버터에서 출력되는 2 비트 가중치들(\"A1, A2\", \"A3, A4\", ..., 및 \"A31, A32\") 중 2 비트 가중치 \"A1, A2\" 제외한 나머지 2 비트 가중치들(\"A3, A4\",..., 및 \"A31, A32\")을 제1복수의 부분 곱 생성기들로 전송하도록 스위치된다. 실시 예에 따라 제1스위치는 제1 M 비트 가중치 컨버터에서 출력되는 2 비트 가중치들(\"A1, A2\", \"A3, A4\", ..., 및 \"A31, A32\") 중 2 비트 가중치 \"A1, A2\", 2 비트 가중치 \"A3, A4\"를 제외한 나머지 2 비트 가중치들(\"A5, A6\",..., 및 \"A31, A32\")을 제1복수의 부분 곱 생성기들로 전송하도록 스위치될 수 있다. 스위칭 신호(SW)가 비트 0일 때, 제1스위치 는 제1 M 비트 가중치 컨버터에서 출력되는 상기 M 비트 가중치들을 제1복수의 부분 곱 생성기들 로 전송하도록 스위치된다. 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 선택적으로 제2 M 비트 입력 활성화 컨버터와 제1복수의 부분 곱 생성기들 중 어느 하나에 전송하기 위해 구현된 다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 있을 때, 제2스위치는 선택 신호(SE L)에 따라 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 제2 M 비트 입력 활 성화 컨버터로 전송하도록 스위치된다. 예컨대, 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\"와 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\"의 곱셈 연산의 결과가 허용 최대값을 넘어갈 때, 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 2 비트 입력 활성화들(\"B1, B2\", \"B3, B4\", ..., 및 \"B31, B32\") 중 2 비트 입력 활성화 \"B1, B2\"를 제2 M 비트 입력 활성화 컨버터로 전송하도 록 스위치된다. 실시 예에 따라 16개의 2 비트 가중치들 중 2 비트 가중치 \"A1, A2\", 2 비트 가중치 \"A3, A4\"와 16개의 2 비트 입력 활성화들 중 2 비트 입력 활성화 \"B1, B2\", 2 비트 입력 활성화 \"B3, B4\"의 곱셈 연산의 결 과가 허용 최대값을 넘어갈 때, 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 2 비트 입 력 활성화들(\"B1, B2\", \"B3, B4\", ..., 및 \"B31, B32\") 중 2 비트 입력 활성화 \"B1, B2\"와 2 비트 입력 활성화 \"B3, B4\"를 제2 M 비트 입력 활성화 컨버터로 전송하도록 스위치될 수 있다. 스위칭 신호(SW)가 비트 1일 때, 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 제2 M 비트 입력 활성화 컨버터로 전송하도록 스위치된다. 제2 M 비트 입력 활성화 컨버터는 상기 허용 최대값을 넘어가는 상기 M 비트 입력 활성화들을 상기 2 x M 비트 입력 활성화들로 변환한다. 예컨대, 제2 M 비트 입력 활성화 컨버터는 상기 허용 최대값을 넘어가는 2 비트 입력 활성화들(예컨대, \"B1, B2\")를 상기 4 비트 입력 활성화(예컨대, \"0, 0, B1, B2\")로 변환한다. 상 기 4 비트 입력 활성화로 변환하기 위해 임의의 제로들(zero)이 삽입되었으나, 실시 예에 따라 상기 4 비트 입 력 활성화들은 다양한 방법들로 변환될 수 있다. 실시 예에 따라 제2 M 비트 입력 활성화 컨버터는 상기 허용 최대값을 넘어가는 상기 2 비트 입력 활성화들(예컨대, \"B1, B2\", \"B3, B4\")을 상기 4 비트 입력 활성화들 (예컨대, \"0, 0, B1, B2\", \"0, 0, B3, B4\")로 변환할 수 있다. 제2 M 비트 입력 활성화 컨버터는 변환된 상기 2 x M 비트 입력 활성화들을 2 x M 비트 곱셈을 위해 제2복 수의 부분 곱 생성기들에 전송한다. 예컨대, 상기 2비트 입력 활성화(예컨대, \"0, 0, B1, B2\")는 제2복수 의 부분 곱 생성기들로 전송된다. 실시 예에 따라 4 비트 입력 활성화들(예컨대, \"0, 0, B1, B2\", \"0, 0, B3, B4\")은 제2복수의 부분 곱 생성기들로 전송된다 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때 제2스위치의 동작에 대해 설 명한다. 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 2 비트 입력 활성화들(\"B1, B2\", \"B3, B4\", ..., 및 \"B31, B32\") 중 2 비트 입력 활성화 \"B1, B2\" 제외한 나머지 2 비트 입력 활성화들(\"B3, B4\",..., 및 \"B31, B32\")을 제1복수의 부분 곱 생성기들로 전송하도록 스위치된다. 실시 예에 따라 제2스 위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 2 비트 입력 활성화들(\"B1, B2\", \"B3, B4\", ..., 및 \"B31, B32\") 중 2 비트 입력 활성화 \"B1, B2\", 2 비트 입력 활성화 \"B3, B4\"를 제외한 나머지 2 비트 입력 활성화들(\"B5, B6\",..., 및 \"B31, B32\")을 제1복수의 부분 곱 생성기들로 전송하도록 스위치될 수 있 다. 스위칭 신호(SW)가 비트 0일 때, 제2스위치는 제1 M 비트 입력 활성화 컨버터에서 출력되는 상기 M 비트 입력 활성화들을 제1복수의 부분 곱 생성기들로 전송하도록 스위치된다. 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 제1복수의 부분 곱 생성기들은 상기 M 비트 부분 곱들을 생성한다. 제1복수의 부분 곱 생성기들은 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들을 곱하여 M 비트 부분 곱들을 생성한다. 예컨대, 제1복수의 곱셈기들 은 제1 M 비트 가중치 컨버터에서 출력되는 2 비트 가중치들(\"A1, A2\", \"A3, A4\", ..., 및 \"A31, A32\") 중 2 비트 가중치 \"A1, A2\", 2 비트 가중치 \"A3, A4\"를 제외한 나머지 2 비트 가중치들(\"A5, A6\",..., 및 \"A31, A32\")와, 제1 M 비트 입력 활성화 컨버터에서 출력되는 2 비트 입력 활성화들(\"B1, B2\", \"B3, B4\", ..., 및 \"B31, B32\") 중 2 비트 입력 활성화 \"B1, B2\" 제외한 나머지 2 비트 입력 활성화들(\"B3, B4\",..., 및 \"B31, B32\")을 곱하여 M 비트 부분 곱들을 생성한다. 즉, 2 비트 가중치(\"A3, A4\")와 2 비트 입 력 활성화(\"B3, B4\")를 곱하여 2 비트 부분 곱이 생성된다. 또한, 2 비트 가중치(\"A5, A6\")와 2 비트 입력 활성 화(\"B5, B6\")를 곱하여 2 비트 부분 곱이 생성된다. 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 있다고 판단될 때, 제2복수의 부분 곱 생성기들은 상기 변환된 2 x M 비트 가중치들과 상기 변환된 2 x M 비트 입력 활성화들을 곱하여 2 x M 비트 부분 곱들을 생성한다. 예컨대, 제2복수의 곱셈기은 4 비트 가중치들과 4 비트 입력 활성화들 에 대해 곱셈 동작을 수행한다. 제2복수의 곱셈기은 4 비트 가중치들(예컨대, \"0, 0, A1, A2\", \"0, 0, A3, A4\")와 4 비트 입력 활성화들(예컨대, \"0, 0, B1, B2\", \"0, 0, B3, B4\")을 곱하여 4 비트 부분 곱을 생성 한다. 선택기는 선택 신호(SEL)에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어느 하나를 선 택한다. 예컨대, 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 있을 때, 선택 신호(SEL)는 비트 1을 포함할 수 있다. 선택 신호(SEL)가 비트 1일 때, 선택기는 2 x M 비트 부분 곱들을 선택한다. 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 결과가 없을 때, 선택 신호(SEL)는 비트 0을 포함 할 수 있다. 선택 신호(SEL)가 비트 0일 때, 선택기는 M 비트 부분 곱들을 선택한다. 선택기로부터 출력되는 부분 곱들은 K개의 부호 비트(sign bit; SB)와 K개의 크기 비트들(magnitude bits; MB)을 포함한다. 부호 비트(SB)는 1 비트이며, 크기 비트들(MB)은 ((4 x M)-1) 비트들이다. 예컨대, 선택 기로부터 출력되는 부분 곱들은 16개의 부호 비트(SB)와 16개의 크기 비트들(magnitude bits; MB)을 포함 한다. 부호 비트(SB)는 1 비트이며, 크기 비트들(MB)은 7 비트들일 수 있다. 크기 비트들(MB)은 제로(zero)들을 삽입함으로써 7 비트들이 생성될 수 있다. 예컨대, 상기 2 비트 부분 곱들은 4 비트들로 표현될 수 있다. 상기 4 비트들에 3개의 제로들을 삽입함으로써 7 비트들이 생성될 수 있다. CSA 어레이는 선택기로부터 출력되는 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들을 가산하 여 부분 합(partial sum)과 부분 자리올림(partial carry)을 생성한다. 상기 부분 합은 19 비트이며, 상기 부분 자리올림은 19 비트일 수 있다. 래치들은 CSA 어레이로부터 출력되는 상기 부분 합과 상기 부분 자리올림을 저장한다. 포화 가산기는 래치들에서 상기 부분 합과 상기 부분 자리올림을 합산하고, 합산 값에 따라 상기 합 산 값, 또는 포화값이 출력된다. 포화 가산기로부터 출력되는 값은 16 비트일 수 있다. 누산기는 포화 가산기로부터 출력되는 부분 합들을 저장하고, 부분 합들을 더하여 곱셈 가중치 합 (weighted sum)을 출력한다. 도 6은 도 1에 도시된 시스템의 동작 방법을 설명하기 위한 흐름도를 나타낸다. 도 1 내지 도 6을 참고하면, 프로세싱 엘리먼트는 N 비트 가중치들을 복수의 K개의 M 비트 가중치들로 나 누고, N 비트 입력 활성화들을 복수의 K개의 M 비트 가중치들로 나눈다(S10). 프로세싱 엘리먼트는 상기 복수의 K개의 M 비트 가중치들과 상기 복수의 K개의 M 비트 입력 활성화들 각각 에 대해 곱셈 연산들을 수행할 때, 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 곱셈 연산들의 결과 들이 있는지 판단한다(S20). 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는 상기 곱셈 연산들의 결과들이 있다고 판단될 때, 프로세싱 엘리먼트는 상기 허용 최대값을 넘어가는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들 각 각을 2 x M 비트 가중치들과 2 x M 비트 입력 활성화들 각각으로 변환한다(S30). 프로세싱 엘리먼트는 상기 곱셈 연산들의 결과들 중 상기 허용 최대값을 넘어가는지 여부에 따른 선택 신 호(SEL)를 생성한다(S40). 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 없다고 판단될 때, 프로세싱 엘리먼트는 상기 M 비트 가중치들과 상기 M 비트 입력 활성화들에 대해 M 비트 부분 곱들을 생성한다 (S50). 상기 곱셈 연산들의 결과들 중 허용 최대값을 넘어가는 상기 곱셈 연산의 결과가 있다고 판단될 때, 프로세싱 엘리먼트는 상기 2 x M 비트 가중치들과 상기 2 x M 비트 입력 활성화들에 대해 2 x M 비트 부분 곱들을 생성한다(S60). 프로세싱 엘리먼트는 선택 신호(SEL)에 따라 상기 M 비트 부분 곱들과 상기 2 x M 비트 부분 곱들 중 어 느 하나를 선택한다(S70). 본 발명은 도면에 도시된 일 실시 예를 참고로 설명되었으나 이는 예시적인 것에 불과하며, 본 기술 분야의 통 상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시 예가 가능하다는 점을 이해할 것이다. 따라 서 본 발명의 진정한 기술적 보호 범위는 첨부된 등록청구범위의 기술적 사상에 의해 정해져야 할 것이다."}
{"patent_id": "10-2021-0066833", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 상세한 설명에서 인용되는 도면을 보다 충분히 이해하기 위하여 각 도면의 상세한 설명이 제공된다. 도 1은 본 발명의 실시 예에 따른 시스템의 블록도를 나타낸다. 도 2는 도 1에 도시된 프로세싱 유닛의 동작을 설명하기 위한 인공 신경망의 블록도를 나타낸다. 도 3은 도 1에 도시된 가속기의 블록도를 나타낸다. 도 4는 도 3에 도시된 프로세싱 엘리먼트(processing element)의 내부 블록도를 나타낸다. 도 5는 도 4에 도시된 오버플로우 감지기(overflow detector)의 내부 블록도를 나타낸다. 도 6은 도 1에 도시된 시스템의 동작 방법을 설명하기 위한 흐름도를 나타낸다."}
