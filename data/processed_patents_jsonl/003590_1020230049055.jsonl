{"patent_id": "10-2023-0049055", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0152698", "출원번호": "10-2023-0049055", "발명의 명칭": "PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코", "출원인": "한국과학기술원", "발명자": "손진혁"}}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "입력 PDF 파일을 분석하여 악성 코드 탐지와 관련된 특징을 추출하는 단계;복수의 입력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 단계;상기 트레이닝 데이터로부터 PDF 파일의 악성코드 탐지 모델을 생성하는 단계;상기 PDF 파일의 악성코드 탐지 모델을 이용하여 대상 PDF 파일의 악성코드 여부를 진단하는 단계; 및상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝데이터의 결과를 비교하여 상기 진단의 해석 결과를 출력하는 단계를 포함하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝 데이터의 결과를 비교하여 상기 진단의 해석 결과를 출력하는 단계는,상기 선택된 특징에 대한 상기 대상 PDF 파일의 결과값과, 상기 트레이닝 데이터의 결과값의 평균값을 비교하여상기 대상 PDF 파일의 선택된 특징이 어느 분류와 유사한지 여부를 비교하는 단계를 포함하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2항에 있어서, 상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징은,상기 악성코드 탐지 모델에 SAHP(Shapley Additive exPlanations) 기법을 적용하여 산출된 기여도를 기준으로선택되는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1항에 있어서,상기 악성 코드 탐지와 관련된 특징을 추출하는 단계는,상기 입력 PDF 파일에 포함된 자바스크립트를 탐색하는 단계;상기 자바스크립트 중 적어도 하나를 우회 실행하여 실행 결과로 생성된 코드를 추출하는 단계;상기 추출된 코드 및 상기 대상 PDF 파일에 포함된 데이터로부터 위협을 추출하는 단계를 포함하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4항에 있어서,상기 입력 PDF 파일에 포함된 자바스크립트를 탐색하는 단계는,상기 입력 PDF 파일을 로딩하는 단계;공개특허 10-2024-0152698-3-로딩된 입력 PDF 파일을 파싱하고, 파싱된 데이터로부터 위협 인자(element) 영역를 수집하는 단계;상기 위협 인자 영역에 포함된 압축된 데이터의 압축을 해제하고, 해제된 데이터에 포함된 자바스크립트를 탐색하는 단계; 및상기 자바스크립트에 포함된 eval, getAnnots, for 중 어느 하나의 예약어를 탐색하는 단계를 포함하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "입력 PDF 파일을 분석하여 악성 코드 탐지와 관련된 특징을 추출하는 특징 추출부;복수의 입력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 데이터 수집부;상기 트레이닝 데이터로부터 PDF 파일의 악성코드 탐지 모델을 생성하는 모델 생성부;상기 PDF 파일의 악성코드 탐지 모델을 이용하여 대상 PDF 파일의 악성코드 여부를 진단하는 악성코드 진단부;및상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝데이터의 결과를 비교하여 상기 진단의 해석 결과를 출력하는 진단 결과 평가부를 포함하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6항에 있어서,상기 진단 결과 평가부는,상기 선택된 특징에 대한 상기 대상 PDF 파일의 결과값과, 상기 트레이닝 데이터의 결과값의 평균값을 비교하여상기 대상 PDF 파일의 선택된 특징이 어느 분류와 유사한지 여부를 비교하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7항에 있어서,상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징은,상기 악성코드 탐지 모델에 SAHP(Shapley Additive exPlanations) 기법을 적용하여 산출된 기여도를 기준으로선택되는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 6항에 있어서,상기 특징 추출부는,상기 입력 PDF 파일에 포함된 자바스크립트를 탐색하고,상기 자바스크립트 중 적어도 하나를 우회 실행하여 실행 결과로 생성된 코드를 추출하고,상기 추출된 코드 및 상기 대상 PDF 파일에 포함된 데이터로부터 위협을 추출하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구."}
{"patent_id": "10-2023-0049055", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9항에 있어서,상기 특징 추출부는,공개특허 10-2024-0152698-4-상기 입력 PDF 파일을 로딩하고,로딩된 입력 PDF 파일을 파싱하고, 파싱된 데이터로부터 위협 인자(element) 영역를 수집하고,상기 위협 인자 영역에 포함된 압축된 데이터의 압축을 해제하고, 해제된 데이터에 포함된 자바스크립트를 탐색하고,상기 자바스크립트에 포함된 eval, getAnnots, for 중 어느 하나의 예약어를 탐색하는,PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구가 제공 된다. 상기 도구는 입력 PDF 파일을 분석하여 악성 코드 탐지와 관련된 특징을 추출하는 특징 추출부; 복수의 입 력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 데이터 수집부; 상기 트레이닝 데이터로 부터 PDF 파일의 악성코드 탐지 모델을 생성하는 모델 생성부; 상기 PDF 파일의 악성코드 탐지 모델을 이용하여 대상 PDF 파일의 악성코드 여부를 진단하는 악성코드 진단부; 및 상기 악성코드 탐지 모델에 XAI 기반 분석을 적 용하여 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝 데이터의 결과를 비교하여 상기 진단의 해석 결 과를 출력하는 진단 결과 평가부를 포함한다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구에 관한 것으로, 더욱 구체적으로는 PDF 파일에 삽입된 악성코드의 위협 인자의 분석 및 탐지에 있어 XAI(eXplainable Artifical Intelligence)를 이용해 산출된 기여도에 기초하여 PDF 파일 내 악성코드의 탐지를 효과적으로 수행할 수 있는 도구에 관한 것이다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "대표적인 문서 파일 형식인 PDF(Portable Document Format)은 도 1a와 같이 버전 정보를 확인할 수 있는 Header, PDF 문서의 내용이 들어있는 Body, 객체들이 참조할 때 사용되는 정보가 저장된 Xref Table 및 파일의 구조를 추적할 수 있는 File Trailer로 구분된다. 또한 PDF의 내용을 구성하는 Object Elements는 도 1b와 같 이 구분될 수 있고, 지금까지 알려져 있는 PDF에 삽입된 악성 코드들은 Names와 Streams 내에서 동작할 수 있으 며, 특히 Names에서 특정한 Object가 수행될 때 악의적인 행위를 수행하는 것이 대부분이다. 이와 같이 PDF 파일에 삽입된 악성코드 중에 대표적인 유형은 악의적인 자바스크립트(Javascript) 실행을 통해 오버플로우를 발생시킴으로써 또 다른 명령어를 실행하거나 멀웨어(Malware)를 실행시키는 형태로, PDF 문서가 열릴 때 또는 클릭 시 동작하도록 PDF 파일 내에 은닉되어 삽입될 수 있다. PDF 문서 파일 내에서 압축 또는 난독화되어 저장되어 있는 악성코드는 기존의 시그니처 기반 탐지 솔루션에 의 한 효과적 탐지가 어려운 한계점이 존재하며, 따라서 머신러닝 및 딥러닝 등 인공지능(Artificial Intelligence, AI)에 기반한 탐지 솔루션이 지속적으로 연구되고 있다. 다만 머신러닝 및 딥러닝 기반의 악성코 드 탐지 도구는 기존 방식의 솔루션보다 탐지율은 높지만 블랙박스 모델의 특성 상 악성코드의 해석의 난이도 또한 높아진다. 따라서 PDF 파일 내의 악성코드 탐지에 대한 신뢰성을 확보할 수 있는 방안이 요구되고 있다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 기술적 과제는, PDF 파일에 삽입된 악성코드의 위협 인자의 분석 및 탐지에 있어 XAI(eXplainable Artifical Intelligence)를 이용해 산출된 기여도에 기초하여 탐지 모델을 생성, 평가하며, 상기 탐지 모델을 이용하여 PDF 파일 내의 악성코드를 탐지하는 도구를 제공하는 것이다. 본 발명의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과 제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 기술적 과제를 해결하기 위한 본 발명의 몇몇 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구의 동작 방법은, 입력 PDF 파일을 분석하여 악성 코드 탐지와 관련된 특징을 추출 하는 단계; 복수의 입력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 단계; 상기 트레 이닝 데이터로부터 PDF 파일의 악성코드 탐지 모델을 생성하는 단계; 상기 PDF 파일의 악성코드 탐지 모델을 이 용하여 대상 PDF 파일의 악성코드 여부를 진단하는 단계; 및 상기 악성코드 탐지 모델에 XAI 기반 분석을 적용 하여 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝 데이터의 결과를 비교하여 상기 진단의 해석 결 과를 출력하는 단계를 포함한다.본 발명의 몇몇 실시예에서, 상기 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝 데이터의 결과를 비 교하여 상기 진단의 해석 결과를 출력하는 단계는, 상기 선택된 특징에 대한 상기 대상 PDF 파일의 결과값과, 상기 트레이닝 데이터의 결과값의 평균값을 비교하여 상기 대상 PDF 파일의 선택된 특징이 어느 분류와 유사한 지 여부를 비교하는 단계를 포함할 수 있다. 본 발명의 몇몇 실시예에서, 상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징은, 상기 악성코 드 탐지 모델에 SAHP(Shapley Additive exPlanations) 기법을 적용하여 산출된 기여도를 기준으로 선택될 수 있다. 본 발명의 몇몇 실시예에서, 상기 악성 코드 탐지와 관련된 특징을 추출하는 단계는, 상기 입력 PDF 파일에 포 함된 자바스크립트를 탐색하는 단계; 상기 자바스크립트 중 적어도 하나를 우회 실행하여 실행 결과로 생성된 코드를 추출하는 단계; 상기 추출된 코드 및 상기 대상 PDF 파일에 포함된 데이터로부터 위협을 추출하는 단계 를 포함할 수 있다. 본 발명의 몇몇 실시예에서, 상기 입력 PDF 파일에 포함된 자바스크립트를 탐색하는 단계는, 상기 입력 PDF 파 일을 로딩하는 단계; 로딩된 입력 PDF 파일을 파싱하고, 파싱된 데이터로부터 위협 인자(element) 영역를 수집 하는 단계; 상기 위협 인자 영역에 포함된 압축된 데이터의 압축을 해제하고, 해제된 데이터에 포함된 자바스크 립트를 탐색하는 단계; 및 상기 자바스크립트에 포함된 eval, getAnnots, for 중 어느 하나의 예약어를 탐색하 는 단계를 포함할 수 있다. 상술한 기술적 과제를 해결하기 위한 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 악성코드 탐지 도구는, 입력 PDF 파일을 분석하여 악성 코드 탐지와 관련된 특징을 추출하는 특징 추출부; 복수의 입력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 데이터 수집부; 상기 트레이 닝 데이터로부터 PDF 파일의 악성코드 탐지 모델을 생성하는 모델 생성부; 상기 PDF 파일의 악성코드 탐지 모델 을 이용하여 대상 PDF 파일의 악성코드 여부를 진단하는 악성코드 진단부; 및 상기 악성코드 탐지 모델에 XAI 기반 분석을 적용하여 선택된 특징에 대한 상기 대상 PDF 파일과 상기 트레이닝 데이터의 결과를 비교하여 상기 진단의 해석 결과를 출력하는 진단 결과 평가부를 포함한다. 본 발명의 몇몇 실시예에서, 상기 진단 결과 평가부는, 상기 선택된 특징에 대한 상기 대상 PDF 파일의 결과값 과, 상기 트레이닝 데이터의 결과값의 평균값을 비교하여 상기 대상 PDF 파일의 선택된 특징이 어느 분류와 유 사한지 여부를 비교할 수 있다. 본 발명의 몇몇 실시예에서, 상기 특징 추출부는, 상기 입력 PDF 파일에 포함된 자바스크립트를 탐색하고, 상기 자바스크립트 중 적어도 하나를 우회 실행하여 실행 결과로 생성된 코드를 추출하고, 상기 추출된 코드 및 상기 대상 PDF 파일에 포함된 데이터로부터 위협을 추출할 수 있다. 본 발명의 몇몇 실시예에서, 상기 특징 추출부는, 상기 입력 PDF 파일을 로딩하고, 로딩된 입력 PDF 파일을 파 싱하고, 파싱된 데이터로부터 위협 인자(element) 영역를 수집하고, 상기 위협 인자 영역에 포함된 압축된 데이 터의 압축을 해제하고, 해제된 데이터에 포함된 자바스크립트를 탐색하고, 상기 자바스크립트에 포함된 eval, getAnnots, for 중 어느 하나의 예약어를 탐색할 수 있다. 기타 실시예들의 구체적인 사항들은 상세한 설명 및 도면들에 포함되어 있다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 도구 및 이를 이용한 악성코드 탐지 도구에 의하면, 복수의 대상 PDF 파일을 이용하여 PDF 파일에 포함된 악성코드 진단을 위한 인공 지능 모델을 생성하는 한편, 악성코드 진단 결과에 XAI 기반 분석을 적용한 해석 결과를 출력함으로써 악성코드 탐지에 대한 신뢰성을 확보할 수 있다. 특히 기존 방식의 악성코드 탐지율보다 높은 머신러닝 또는 딥러닝 기반의 악성코드 탐지 모델이 본 시스템에 의해 이용되지만 블랙박스 모델의 특성 상 악성코드의 해석이 어려운 문제와 관련하여 진단 결과 평가부가 진단 의 해석 결과를 각 특징에 대한 Shapely 값과 같이 수치화하여 출력할 수 있기 때문에 대상 PDF 파일의 진단 결 과의 판단 근거를 확보할 수 있으며, 오진단 등의 문제에 대해 효과적으로 대처할 수 있다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급한 효과들로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 청구범위의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 하나의 구성 요소가 다른 구성 요소와 \"연결된(connected to)\" 또는 \"커플링된(coupled to)\" 이라고 지칭되는 것은, 다른 구성 요소와 직접 연결 또는 커플링된 경우 또는 중간에 다른 구성 요소를 개재한 경우를 모두 포함 한다. 반면, 하나의 구성 요소가 다른 구성 요소와 \"직접 연결된(directly connected to)\" 또는 \"직접 커플링된 (directly coupled to)\"으로 지칭되는 것은 중간에 다른 구성 요소를 개재하지 않은 것을 나타낸다. \"및/또는\" 은 언급된 아이템들의 각각 및 하나 이상의 모든 조합을 포함한다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성 요소, 단계, 동작 및/또는 소자는 하나 이상의 다 른 구성 요소, 단계, 동작 및/또는 소자의 존재 또는 추가를 배제하지 않는다. 비록 제1, 제2 등이 다양한 구성 요소들을 서술하기 위해서 사용되나, 이들 구성 요소들은 이들 용어에 의해 제 한되지 않음은 물론이다. 이들 용어들은 단지 하나의 구성 요소를 다른 구성 요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성 요소 일 수도 있 음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해 석되지 않는다. 본 실시예에서 사용되는 '부' 또는 '모듈'이라는 용어는 소프트웨어 또는 FPGA또는 ASIC과 같은 하드웨어 구성 요소를 의미하며, '부' 또는 '모듈'은 어떤 역할들을 수행한다. 그러나 '부' 또는 '모듈'은 소프트웨어 또는 하 드웨어에 한정되는 의미는 아니다. '부' 또는 '모듈'은 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있 고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서 '부' 또는 '모듈'은 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소과, 함수들, 서브루틴들, 프로그램 코드의 세그먼트들, 마이크로코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들, 및 변수들을 포함할 수 있다. 구성요소들과 '부' 또는 '모듈'들 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 '부' 또는 '모듈'들로 결합되거나 추가적인 구성요소들과 '부' 또는 '모듈'들로 더 분리될 수 있다. 도 2는 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 및 악성코드 탐지 시스템을 설명하기 위한 도면이다. 시스템은 본 발명의 실시예에서 설명하는 PDF 파일에 포함된 악성코드의 탐지를 수행하는 컴퓨팅 장치일 수 있으며, 예를 들어 개인용 컴퓨터(PC), 서버 컴퓨터, 워크 스테이션, 랩탑 컴퓨터 등의 다양한 컴퓨터 시스템을 포함할 수 있으나 위에서 서술한 장치에 제한되는 것은 아니다. 시스템은 메모리에 일시적 또는 비일시적으로 명령어들을 저장하고, 저장된 명령어들을 실행하는 하나 이 상의 프로세서를 포함할 수 있다. 또한 시스템은 상기 명령어들의 실행 결과 및 데이터를 저장하는 스토리 지 장치를 포함할 수 있다. 도 2를 참조하면, 시스템은 특징 추출부, 데이터 수집부, 모델 생성부, 악성코드 진단부 , 진단 결과 평가부 등을 포함할 수 있다. 특징 추출부는 입력 PDF 파일을 분석하고, 입력 PDF 파일의 내용 중 악성코드 탐지와 관련된 특징을 추출 할 수 있다. 구체적으로, 특징 추출부는 입력 PDF 파일을 파싱하여 위협 인자 영역을 수집하고, 위협 인자 영역에 포함된 key feature를 추출할 수 있다. 입력 PDF 파일은 정상(benign) 파일 또는 악성코드 파일로 나누 어져 라벨링되어 있을 수 있다. 도 3은 본 발명의 특징 추출부에 의해 추출될 수 있는 PDF 파일 내의 특징을 예시적으로 도시한 도면이다. 도 3을 참조하면, 특징 추출부는 바이너리 단위로 로딩된 입력 PDF 파일을 이루는 구성 요소(elements) 중 에서 /FlateDecode, Decompress 개수, /AA, /JS, /GoToE 등의 특징을 추출할 수 있다. 예를 들어 /FlateDecode와 Decompress의 경우 악성코드를 PDF 파일에 숨기기 위하여 압축시켰는지를 파악할 수 있으며, /AA, /JS의 경우 스크립트에서 악성 오브젝트(예를 들어 /GoToE, /OpenAction, /Page, /Extends, /EmbeddedFile, /Launch, /F, /Xobject)를 사용하는지 여부를 파악할 수 있다. 또한 /URL 또는 /RichMedia를 이용하여 악성 파일을 다운받거나 악성 동영상 등을 이용하는지 여부가 파악될 수 있으며, 특정 영역의 크기의 경우 내용에 비해 그 크기가 크거나 매우 작은 경우 악의적인 행위가 이루어질 수 있다. 본 발명의 몇몇 실시예에서, 특징 추출부는 수집된 위협 인자 영역에 포함된 압축된 데이터의 압축을 해제 하고, 압축 해제된 데이터 중 자바스크립트, 구체적으로 악성 동작을 유발하는 eval, getAnnots, for 등의 예약 어를 추출할 수 있다. 필요에 따라 특징 추출부는 악성코드와 관련된 특징을 추출하기 위해 상기 자바스크 립트에 포함된 함수들을 직접 또는 우회적으로 실행하고 그 결과로 생성된 코드를 특징으로 추출할 수도 있다. 특징 추출부가 추출한 악성코드 탐지와 관련된 특징의 데이터는 예를 들어 CSV(comma-sepearated values) 파일 형식으로 저장될 수 있으나 본 발명이 이에 제한되는 것은 아니며, 특징 추출부는 사용자의 설정에 따라 txt, json, xml 등 다양한 형식을 갖는 특징 데이터를 생성할 수 있다. 특징 추출부는 하나의 입력 PDF 파일로부터 악성코드 탐지와 관련된 특징의 추출이 완료되면, 다음 입력 PDF 파일을 처리함으로써 복수의 입력 PDF 파일로부터 특징을 추출할 수 있다. 데이터 수집부는 복수의 입력 PDF 파일로부터 추출된 악성코드 탐지와 관련된 특징을 이용하여 트레이닝 데이터를 생성할 수 있다. 데이터 수집부는 특징 추출부가 복수의 입력 PDF 파일을 분석하여 추출한 악성코드 탐지와 관련된 특징 데이터를 모아 하나의 트레이닝 데이터 파일로 저장할 수 있으며, 예를 들어 특징 추출부가 csv 파일 형식으로 각각의 입력 PDF 파일의 특징 데이터를 저장하였다면 데이터 수집부는 통합된 csv 파일에 복수의 입력 PDF 파일의 특징 데이터를 저장할 수 있다. 모델 생성부는 데이터 수집부에 의해 생성된 트레이닝 데이터에 대하여 미리 정해진 기계학습 알고리 즘을 이용하여 악성코드 탐지 모델을 생성할 수 있다. 모델 생성부는 딥러닝(Deep Learning)과 같은 기계학습을 이용하여 악성코드 탐지 모델을 생성할 수 있으 나 본 발명이 이에 제한되는 것은 아니다. 모델 생성부는 여러 개의 약한 결정 트리를 조합하여 학습 에러 에 가중치를 두고 강한 예측 모형을 만드는 Boosting을 이용한 모델 중 하나인 XGBoost와 같이 딥러닝에 비하여 모델의 복잡도가 작고 연산이 간단한 기계학습 알고리즘을 이용하여 분류 모델을 생성할 수도 있다. 이 경우 모 델 생성부는 병렬 학습을 이용하여 기존의 Boosting 모델보다 빠르게 분류 모델을 생성할 수 있다. 한편, 본 발명의 몇몇 실시예에서, 모델 생성부는 입력 PDF 파일과 유사하게 정상(benign) 파일 또는 악성 코드 파일로 나누어져 라벨링되어 있는 테스트 데이터를 이용하여 악성코드 탐지 모델을 최적화할 수 있다. 모 델 생성부는 예를 들어 하이퍼 파라미터(hyper parameter)와 같이 사용자가 설정 가능한 입력값을 통해 최 적의 변수를 설정하기 위한 튜닝을 수행할 수 있다. 이때 모델 생성부는 사용자가 미리 설정한 파라미터 범위에 기초하여 파라미터들의 조합을 만들고, 교차 검증(cross validation)을 이용하여 정확도(accuracy, 전체 데이터 중 정확하게 예측한 데이터의 수), 정밀도(악성 PDF 파일로 예측한 파일 중 실제 악성 파일에 해당하는비율), 재현율(실제 악성 PDF 팡리 중 모델이 악성 파일로 예측한 비율) 또는 f1-score(정밀도와 재현율을 결합 한 지표) 등이 높은 모델을 선택하여 해당 모델의 파라미터 정보를 가져와 악성코드 탐지 모델을 최적화할 수 있다. 악성코드 진단부는 대상 PDF 파일을 입력받고, 모델 생성부가 생성한 악성코드 탐지 모델을 이용하여 대상 PDF 파일의 악성코드 포함 여부를 진단할 수 있다. 악성코드 진단부는 예를 들어 대상 PDF 파일가 악 성코드 포함 여부를 확률로써 출력할 수 있으며, 대상 PDF 파일에 포함된 특징, 예를 들어 도 3에서 예시로 설 명된 key feature들의 등장 빈도를 저장할 수도 있다. 진단 결과 평가부는 악성코드 탐지 모델에 XAI 기반 분석을 적용하고, 복수의 특징 중 기여도가 높은 특징 을 선택할 수 있다. 또한 진단 결과 평가부는 선택된 특징에 대한 대상 PDF 파일과, 악성코드 탐지 모델 생성에 사용된 트레이닝 데이터의 사이의 결과를 비교하여 악성코드 진단부에 의한 악성코드 진단의 해석 결과를 출력할 수 있다. XAI는 기계학습 모델이나 AI 모델이 결정을 내린 원인과 원리를 파악할 수 있는 기술로서, 복잡도가 증가한 모 델을 이용한 기계학습의 신뢰성과 안정성을 보장하고자 결과에 대한 분석을 수행하기 위해 활용되고 있다. XAI 를 통하여 분류 모델을 분석하는 경우 각각의 속성, 즉 본 발명에서는 각각의 특징의 기여도를 알 수 있거나 데 이터 단위로 분류 결과에 대한 이유를 파악할 수 있다. 진단 결과 평가부는 XAI의 대표적인 알고리즘인 SHAP(Shapley Additive exPlanations)을 적용함으로써 악 성코드 탐지 모델에 대한 각각의 특징들의 기여도를 산출할 수 있다. SHAP은 모든 기계학습 모델의 결과를 설명 하기 위한 게임 이론적인 접근 방식으로 가능한 모든 조합을 고려하여 속성의 평균 예상 기여도인 Shapely 값을 계산할 수 있다. 진단 결과 평가부가 SHAP을 이용하여 특징을 학습한 악성코드 탐지 모델을 분석하는 경우, 기여도가 높은 특징을 선택할 수 있다. 한편 본 발명의 진단 결과 평가부가 진단 결과 해석을 위해 SHAP 이외에도 LIME, Deep SHAP 등 다양한 알 고리즘을 이용할 수 있음은 물론이다. 도 4a 및 4b는 본 발명의 실시예에 따른 시스템에 포함된 진단 결과 평가부에 의한 악성코드 진단 결과의 평가 화면의 예시적인 도면이다. 도 4a 및 4b를 참조하면, 진단 결과 평가부는 트레이닝 데이터 중 악성코드 데이터에 대한 각 특징들의 Shapely 값의 평균값(Malware Mean)과, 정상 파일의 평균(Benign Mean)값을 구하는 한편, 대상 PDF 파일의 각 특징에 대한 Shapely 값을 산출할 수 있다. 이때 진단 결과 평가부는 대상 PDF 파일의 각 특징에 대한 Shapely 값을 트레이닝 데이터의 평균값을 비교할 수 있으며, 비교 결과 대상 PDF 파일의 Shapely 값이 어느 값 에 가까운지 여부를 기준으로 악성코드 진단의 해석 결과를 출력할 수 있다. 예를 들어 진단 결과 평가부는 도 4a 및 4b에 도시된 것과 같이 대상 PDF 파일의 /JS, unescape, asci, file_size /OpenAction 등에 대한 Shapely 값을 산출할 수 있으며, 이를 악성코드 데이터 정상파일 데이터와 비 교한다. 이와 함께 진단 결과 평가부는 대상 PDF 파일이 각각의 특징에 대하여 악성코드 또는 정상파일 어 느 쪽에 가까운지를 그래픽화하여 출력할 수도 있으며, 각 특징에 대하여 미리 정한 개수 이상 악성코드에 가까 운 Shapely 값을 갖는 경우 대상 PDF 파일을 악성코드로 판단하고, 그 반대로 미리 정한 개수 이상 정상파일에 가까운 Shapely 값을 갖는 경우 대상 PDF 파일을 정상파일로 판단한 결과를 의미할 수 있다. 도 4a의 경우 각각의 특징에 대하여 대상 PDF 파일이 악성코드 파일의 Shapely 평균에 가까운 값을 가짐으로써 악성코드에 가까운 확률을 갖는 해석 결과가 출력되며, 도 4b의 경우 각 특징에 대하여 대상 PDF 파일이 정상 파일의 Shapely 평균에 가까운 값을 가짐으로써 정상파일에 가까운 확률을 갖는 해석 결과가 출력된 것이 도시 된다. 이와 같이, 본 발명의 실시예에 따른 시스템은 복수의 대상 PDF 파일을 이용하여 PDF 파일에 포함된 악성 코드 진단을 위한 인공지능 모델을 생성하는 한편, 악성코드 진단 결과에 XAI 기반 분석을 적용한 해석 결과를 출력함으로써 악성코드 탐지에 대한 신뢰성을 확보할 수 있다. 특히 기존 방식의 악성코드 탐지율보다 높은 머 신러닝 또는 딥러닝 기반의 악성코드 탐지 모델이 본 시스템에 의해 이용되지만 블랙박스 모델의 특성 상 악성코드의 해석이 어려운 문제와 관련하여 진단 결과 평가부가 진단의 해석 결과를 각 특징에 대한 Shapely 값과 같이 수치화하여 출력할 수 있기 때문에 대상 PDF 파일의 진단 결과의 판단 근거를 확보할 수 있 으며, 오진단 등의 문제에 대해 효과적으로 대처할 수 있다.도 5는 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 및 악성코드 탐지 시스템의 동작 방법을 설명하기 위한 순서도이다. 도 5를 참조하면, 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 및 악성코드 탐지 시스템의 동작 방법은, 입력 PDF 파일을 분석하여 악성코드 탐지와 관련된 특징을 추출하는 단계 (S110), 복수의 입력 PDF 파일로부터 추출된 특징을 이용하여 트레이닝 데이터를 생성하는 단계(S120), 트레이 닝 데이터로부터 PDF 파일의 악성코드 탐지 모델을 생성하는 단계(S130), PDF 파일의 악성코드 탐지 모델로 대 상 PDF 파일의 악성코드 여부를 진단하는 단계(S140) 및 XAI 기반 분석을 적용하여 진단의 해석 결과를 출력하 는 단계(S150)를 포함한다. 본 발명은 또한 컴퓨터로 읽을 수 있는 기록매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨터가 읽을 수 있는 기록매체는 컴퓨터 장치에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록 장치를 포함한다. 컴퓨터가 읽을 수 있는 기록매체의 예로는 하드디스크, ROM, RAM, CD-ROM, 하드 디스크, 자기 테이프, 플로피 디스크, 광 데이터 저장장치 등을 포함할 수 있다."}
{"patent_id": "10-2023-0049055", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상 첨부된 도면을 참조하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있 다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한정적 이 아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2023-0049055", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1a 및 1b는 PDF 파일의 구조를 설명하기 위한 도면들이다. 도 2는 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 및 악성코드 탐지 시스템을 설명하기 위한 도면이다. 도 3은 본 발명의 특징 추출부에 의해 추출될 수 있는 PDF 파일 내의 특징을 예시적으로 도시한 도면이다. 도 4a 및 4b는 본 발명의 실시예에 따른 시스템에 포함된 진단 결과 평가부에 의한 악성코드 진단 결과의 평가 화면의 예시적인 도면이다. 도 5는 본 발명의 실시예에 따른 PDF 파일에 포함된 악성코드의 탐지를 위한 XAI 기반 모델 생성 및 악성코드 탐지 시스템의 동작 방법을 설명하기 위한 순서도이다."}
