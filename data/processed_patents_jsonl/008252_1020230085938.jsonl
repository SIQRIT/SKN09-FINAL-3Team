{"patent_id": "10-2023-0085938", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0106563", "출원번호": "10-2023-0085938", "발명의 명칭": "프로그래밍 가능 활성화 함수 생성 방법 및 이를 이용하는장치", "출원인": "주식회사 딥엑스", "발명자": "김녹원"}}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로그래머블 활성화 함수 생성기가 활성화 함수를 프로그래밍하는 방법에 있어서,상기 프로그래머블 활성화 함수 생성기가 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하는 단계;상기 프로그래머블 활성화 함수 생성기가 상기 생성된 세그먼트 데이터를 이용하여 상기 활성화 함수를 복수의세그먼트들로 세그먼팅하는 단계; 및상기 프로그래머블 활성화 함수 생성기가 상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블세그먼트로 근사화 하는 단계를 포함하고,상기 생성된 세그먼트 데이터를 이용하여 상기 활성화 함수를 상기 복수의 세그먼트들로 세그먼팅하는 단계는,상기 생성된 세그먼트 데이터를 기초로 상기 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하는 단계를 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 복수의 세그먼트들 중 각각의 세그먼트는 상기 생성된 세그먼트 데이터를 기초로 폭이 결정되는, 활성화함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 생성된 세그먼트 데이터를 이용하여 상기 활성화 함수를 상기 복수의 세그먼트들로 세그먼팅하는 단계는,상기 세그먼트 데이터를 기초로 상기 복수의 세그먼트들의 개수 및 폭을 결정하는 단계를 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수의 미분 데이터(derivative data)를 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수가 처리될 하드웨어의 정보를 포함하는, 활성화 함수 프로그래밍방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수의 미분 데이터를 포함하고,상기 생성된 세그먼트 데이터를 이용하여 상기 활성화 함수를 상기 복수의 세그먼트들로 세그먼팅하는 단계는,상기 활성화 함수의 상기 미분 데이터를 기초로 상기 활성화 함수의 상기 실질적 선형 구간 및 상기 비선형 구간을 결정하는 단계를 포함하는, 활성화 함수 프로그래밍 방법.공개특허 10-2023-0106563-3-청구항 7 제 1 항에 있어서,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는, 상기 적어도 하나의 세그먼트를 특정 기울기 및 특정 오프셋 값으로 근사화 하는 단계인, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 미리결정된 비선형 근사식을 이용하여 근사화 하는 단계를 더 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는,상기 적어도 하나의 세그먼트를 상기 프로그래머블 세그먼트로 근사화하기 위한 기울기 및 오프셋을 결정하는단계;상기 적어도 하나의 세그먼트와 상기 결정된 기울기 및 오프셋을 갖는 적어도 하나의 후보 세그먼트(candidatesegment) 사이의 에러값을 결정하는 단계; 및상기 결정된 에러값에 기초하여 상기 적어도 하나의 후보 세그먼트 중 상기 프로그래머블 세그먼트를 결정하는단계를 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 1 항에 있어서,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는,상기 프로그래머블 세그먼트와 대응되는 상기 활성화 함수의 세그먼트 사이의 적어도 하나의 최소 에러값을 탐색(search)하는 단계; 및상기 탐색된 적어도 하나의 최소 에러값에 기초하여 상기 프로그래머블 세그먼트의 기울기 및 오프셋을 결정하는 단계를 포함하는, 활성화 함수 프로그래밍 방법."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "프로그래머블 활성화 함수 생성기를 포함하는 장치로서, 상기 프로그래머블 활성화 함수 생성기는,활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하고;상기 생성된 세그먼트 데이터를 기초로 상기 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하고;상기 결정된 실질적 선형 구간 및 비선형 구간에 따라 상기 활성화 함수를 복수의 세그먼트들로 세그먼팅하고,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화하도록 구성되는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 복수의 세그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 상이한 폭을 갖는, 장치"}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "공개특허 10-2023-0106563-4-제 11 항에 있어서,상기 프로그래머블 활성화 함수 생성기는, 상기 세그먼트 데이터를 기초로 상기 복수의 세그먼트들의 개수 및 폭를 결정하고; 그리고상기 결정된 개수 및 폭에 기초하여 상기 활성화 함수를 복수의 세그먼트들로 세그먼팅하도록 구성되는, 상기복수의 세그먼트들로 세그먼팅 되는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 11 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수의 미분 데이터를 포함하는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 11 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수가 처리될 수 있는 하드웨어의 정보를 포함하는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 11 항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수의 미분 데이터를 포함하고,상기 프로그래머블 활성화 함수 생성기는,상기 활성화 함수의 상기 미분 데이터를 기초로 상기 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하고; 그리고상기 결정된 실질적 선형 구간 및 상기 비선형 구간에 따라 상기 활성화 함수를 복수의 세그먼트들로 세그먼팅하도록 구성되는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 11 항에 있어서,상기 프로그래머블 활성화 함수 생성기는,상기 적어도 하나의 세그먼트를 상기 프로그래머블 세그먼트로 근사화하기 위한 기울기 및 오프셋을 결정하고;그리고상기 결정된 기울기 및 오프셋에 따라 상기 적어도 하나의 세그먼트를 상기 프로그래머블 세그먼트로 근사화하도록 구성되는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 11 항에 있어서,상기 장치는 프로그래머블 활성화 함수 유닛을 더 포함하고,상기 프로그래머블 활성화 함수 유닛은 복수의 세그먼트들 중 적어도 하나의 세그먼트를 미리결정된 비선형 근사식을 이용하여 근사화하도록 구성되는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 11 항에 있어서,상기 복수의 프로그래머블 세그먼트들 중 적어도 두개의 인접한 세그먼트들 사이에는 불연속점이 존재하는, 장치.공개특허 10-2023-0106563-5-청구항 20 제 11항에 있어서,상기 세그먼트 데이터는 상기 활성화 함수의 불연속성 정보, 미분 데이터, 활성화 함수가 처리되는 하드웨어의정보, 이들을 가공한 데이터 중 적어도 하나를 포함하는, 장치."}
{"patent_id": "10-2023-0085938", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제 11항에 있어서,상기 프로그래머블 활성화 함수 생성기는,손실함수(loss function)를 적용한 머신 러닝을 이용하여 상기 프로그래머블 세그먼트를 결정하는, 장치."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법이 제공된다. 상기 방법은 활성화 함수를 세그먼팅하 기 위한 세그먼트 데이터를 생성하는 단계; 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트 들로 세그먼팅하는 단계; 및 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계를 포함한다."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 프로그래밍 가능 활성화 함수 생성 방법 및 이를 이용하는 장치에 관한 것이다."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인간은 인식(recognition), 분류(classification), 추론(inference), 예측(predict), 조작/의사결정 (control/decision making) 등을 할 수 있는 지능을 갖추고 있다. 인공지능(Artificial Intelligence, AI)은 인간의 지능을 인공적으로 모방하는 것을 의미한다. 인간의 뇌는 뉴런(Neuron)이라는 수많은 신경세포로 이루어져 있다. 각각의 뉴런은 시냅스(synapse)라고 불리 는 연결부위를 통해 수백 개에서 수천 개의 다른 뉴런들과 연결되어 있다. 인간의 지능을 모방하기 위하여, 생 물학적 뉴런의 동작원리와 뉴런 간의 연결 관계를 모델링한 것을, 인공신경망(Artificial Neural Network, ANN) 모델이라고 한다. 즉, 인공신경망모델은 뉴런들을 모방한 노드들을 레이어(layer: 계층) 구조로 연결시킨 시스 템이다. 선행기술문헌 특허문헌 (특허문헌 0001) 일본 공개특허공보 특개평07-282038호 (특허문헌 0002) 일본 공표특허공보 특표2016-501397호 비특허문헌 (비특허문헌 0001) Wang and Li. \"Research on approximate fitting method of activation function based on gradient equalization in deep learning.\" Journal of Physics: Conference Series. Vol. 1693. No. 1. 2020."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "인공신경망모델은 레이어 수에 따라 '단층 신경망'과 '다층 신경망'으로 구분된다. 일반적인 다층 신경망은 입 력 레이어와 은닉 레이어, 출력 레이어로 구성된다. 입력 레이어(input layer)는 입력 데이터를 받아들이 는 레이어로서, 입력 레이어의 수는 입력되는 변수의 수와 동일하다. 은닉 레이어(hidden layer)는 입력 레이어와 출력 레이어 사이에 위치하며 입력 레이어로부터 신호를 받아 특징을 추출하여 출력층으로 전달하는레이어이다. 출력 레이어(output layer)는 은닉 레이어로부터 신호를 받아 외부로 출력하는 레이어이다. 인간의 뇌에서 뉴런 간에 신호가 전달될 때, 신호의 전달 강도가 달라진다. 이를 모방하여, 인공신경망모델에서 활성화 함수(activation function)에 의해 레이어 간에 전달되는 신호의 전달 강도, 즉 활성화 여부가 결정된다. 활성화 함수의 특성에 따라 인공신경망모델의 추론 특성 및 정확도가 달라질 수 있다. 즉, 활성화 함수의 특성 에 따라 인공신경망모델의 성능 및 효율이 결정된다. 또한 복잡한 수식의 활성화 함수를 처리하는 인공신경망 을 하드웨어, 예를 들면 인공신경망 전용 프로세서로 구현 시 상당한 칩 면적(즉, 다수의 로직 게이트 개수)이 요구되고 전력소모가 상당할 수 있다. 다층 신경망에서 보다 높은 인공 지능을 구현하기 위해 은닉 레이어의 개수를 늘린 심층신경망(Deep Neural Network, DNN)에서, 활성화 함수는 가중치(weight)와 바이아스(bias)가 적용된 입력값에 대한 전달 강도를 결정 하기 위해 사용된다. DNN에는 여러 종류가 있으나, 합성곱 신경망(Convolutional Neural Network, CNN)이 입력 데이터의 특징들을 추출하고, 추출된 특징들의 패턴을 파악하기에 용이한 것으로 알려져 있다. CNN은 합성곱 연산, 활성화 함수 연산, 풀링(pooling) 연산 등이 특정 순서로 처리되는 형태로 구성된다. 예를 들어, CNN의 레이어 각각에서, 입력 데이터와 가중치 커널(kernel)은 복수의 채널로 구성된 행렬일 수 있 다. 입력 데이터와 커널의 합성곱 연산이 수행되며, 각 채널에서 입력 데이터(사진, 영상 등)의 특징을 추출한 특징맵(feature map)이 생성되고, 특징맵에 활성화 함수를 적용하여 해당 채널의 활성화맵(activation map)이 생성된다. 이후, 활성화맵에 대한 풀링이 적용될 수 있다. 활성화 함수는 입력 데이터에 대응되는 X-축 값과 출력 데이터에 대응되는 Y-축 값을 포함하도록 구성될 수 있 다. 활성화 함수는 합성곱 값들의 수학적 선형 결합을 다양한 형태의 선형 또는 비선형 결합으로 변환하는 역 할을 수행한다. 따라서, 다층구조의 인공신경망모델은 각각의 레이어마다 적절한 활성화 함수를 적용하여 다양 한 추론 기능을 수행하도록 설계될 수 있다. 인공신경망에서 해결하고자 하는 복잡한 기능들은 대부분 비선형성을 갖고, 이러한 문제를 해결하기 위해 활성 화 함수는 대부분 비선형성을 가지는 함수(function having non-linearity)이다. 인공신경망모델에 적용되는 활성화 함수의 비선형성의 특징에 따라 하드웨어에서 처리되는 인공신경망의 모델의 성능 및 효율이 달라질 수 있다. 활성화 함수는 합성곱이 완료된 특징맵 데이터의 특정 영역의 특징을 더 부각하고 다른 영역의 특징을 덜 부각 시킴으로써 추론 정확도를 향상시키거나 또는 저하시킬 수 있다. 다양한 활성화 함수들 중 적어도 일부의 활성화 함수의 비선형성은 로그(log) 연산, 지수(exponential) 연산 등 을 포함한다. 이러한 로그 및 지수 연산이 포함된 활성화 함수를 하드웨어로 구현하는 것은 디지털 로직 설계 측면에서 매우 복잡하다. 예를 들면, 로그 및 지수 연산을 위해서는 하드웨어 연산기의 구성이 매우 복잡하게 된다. 따라서, 하드웨어의 소비전력이 증가하고 연산속도가 느려질 수 있다는 사실을 본 개시의 발명자들은 인 식하였다. 또한, 하드-와이어(hardwired)된 프로세서는 하드-와이어된 각각의 전용 활성화 함수 처리 로직 유닛들을 이용 하여 미리정의된 활성화 함수들만 처리할 수 있고, 활성화 함수의 연산 복잡도에 따라 하드-와이어된 프로세서 에서 게이트 개수가 급격하게 증가하는 단점이 있다는 사실을 본 개시의 발명자들은 인식하였다. 하드-와이어된 프로세서는 하드웨어 수정 없이 새로운 활성화 함수를 독립적으로 처리할 수 없으며, 하드-와이 어된 프로세서가 처리할 수 없는 활성화 함수는 별도의 소프트웨어로 연산할 수 밖에 없다. 예를 들어, 하드- 와이어된 프로세서는 인공지능 전용 ASIC(Application Specific Integrated Circuit)일 수 있다. 다양한 종류의 활성화 함수들을 하드-와이어된 프로세서에서 처리하기 위해, 종래에는 룩업 테이블(Look-Up Table, LUT)을 이용하는 방법, 비선형 근사식을 이용하는 방법, 다항식 근사(polynomial approximation)를 이 용하는 방법 등이 활용되었다. 하지만, 다항식 근사 등을 이용하여 하드웨어에서 활성화 함수를 처리하는 종래의 활성화 함수 근사화 방법은 정확도 향상을 위해 프로세서에게 많은 계산량을 요구하는 문제를 본 개시의 발명자들은 인식하였다.이에, 종래의 활성화 함수 근사화 기술이 적용된 인공신경망모델의 추론 정확도 열화 문제, 프로세서의 활성화 함수 처리부의 게이트 개수 증가 문제, 및 프로세서의 소비 전력 증가 문제를 개선해야 한다는 사실을 본 개시 의 발명자들은 인식하였다. 더 나아가서, 종래의 활성화 함수 처리 방법을 활용하는 프로세서가 처리할 수 없는 룩업 테이블 등 미리결정된 데이터에 포함되지 않은 활성화 함수, 신규 활성화 함수, 또는 종래의 일부가 수정된 활성화 함수들을 프로세서 가 독립적으로 처리하기 위해서 어떠한 활성화 함수도 근사화 할 수 있는 프로그래밍 방법이 필요하다는 사실을 본 개시의 발명자들은 인식하였다. 더 나아가서, 이러한 프로그래밍 방법에 최적화된 하드웨어가 제공되면 하드웨어에서 효율적이고 유연하게 프로 그래밍된 활성화 함수를 처리할 수 있다는 사실을 본 개시의 발명자들은 인식하였다. 더 나아가서, 프로그래밍하고자 하는 활성화 함수의 형태에 기초하여 각 영역을 설정하고 설정된 영역 별로 프 로그래밍된 활성화 함수의 근사화 에러를 고려하면, 활성화 함수를 보다 효율적이고 낮은 근사화 에러를 갖게 프로그래밍 할 수 있다는 사실을 본 개시의 발명자들은 인식하였다. 이에, 본 개시가 해결하고자 하는 과제는 종래의 근사화 방법보다 상대적으로 우수하고 다양한 비선형 활성화 함수를 하드웨어에서 처리 가능하게 프로그래밍할 수 있는 방법을 제공하는 것이다. 나아가, 본 개시가 해결하고자 하는 과제는 다양한 비선형 활성화 함수를 근사화 하면서 활성화 함수 자체의 특 성, 근사화 에러, 하드웨어의 정보 등을 고려하여 보다 효율적이거나 사용자에 의해 보다 커스터마이즈된 (customized) 방식으로 비선형 활성화 함수를 근사화 하는 방법을 제공하는 것이다. 다만, 본 개시의 과제들은 이상에서 언급한 과제들로 제한되지 않으며, 언급되지 않은 또 다른 과제들은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시에 따른 활성화 함수 프로그래밍 방법이 제공된다. 상기 방법은 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하는 단계; 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트들 로 세그먼팅하는 단계; 및 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하 는 단계를 포함한다. 본 개시의 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 상이한 폭을 가질 수 있다. 본 개시의 다른 특징에 따르면, 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트들로 세그먼 팅하는 단계는 세그먼트 데이터를 기초로 복수의 세그먼트들의 개수 및 폭을 결정하는 단계를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수가 처리될 하드웨어의 정보를 포함 할 수 있 다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함하고, 생성된 세그먼트 데이터를 기초를 이용하여 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 단계는 활성화 함수의 미분 데이터 를 기초로 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하는 단계를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는 적어도 하나의 세그먼트를 특정 기울기 및 특정 오프셋 값으로 근사화 하는 단계를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 상기 방법은 복수의 세그먼트들 중 적어도 하나의 세그먼트를 미리결정된 비 선형 근사식을 이용하여 근사화 하는 단계를 더 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하기 위한 기울기 및 오프셋을 결정하는 단계, 적어도 하나의 세그먼트와 결정된 기울기 및 오프셋을 갖는 적어도 하나의 후보 세그먼트 사이 의 에러값을 결정하는 단계, 및 결정된 에러값에 기초하여 적어도 하나의 후보 세그먼트 중 프로그래머블 세그먼트를 결정하는 단계를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계는 프로그래머블 세그먼트와 활성화 함수의 대응되는 세그먼트 사이의 적어도 하나의 최소 에 러값을 탐색(search)하는 단계, 및 탐색된 적어도 하나의 최소 에러값에 기초하여 프로그래머블 세그먼트의 기 울기 및 오프셋을 결정하는 단계를 포함할 수 있다. 본 개시의 다른 예시에 따른 활성화 함수 프로그래밍 방법이 제공된다. 상기 방법은 인공신경망 연산을 위한 활성화 함수를 선택하는 단계, 및 활성화 함수를 프로그래머블 활성화 함수로 변환하는 단계를 포함하도록 구성 되고, 프로그래머블 활성화 함수는 미리결정된 폭을 갖는 복수의 세그먼트들을 포함하고, 미리결정된 폭은 임계 값을 기초로 결정될 수 있다. 본 개시의 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 상이한 특정 폭을 가질 수 있다. 본 개시의 또 다른 예시에 따른 프로그래머블 활성화 함수 생성기를 포함하는 장치가 제공된다. 상기 장치는 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하고, 생성된 세그먼트 데이터를 이용하여 활성화 함 수를 복수의 세그먼트들로 세그먼팅하고, 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼 트로 근사화 하도록 구성된다. 본 개시의 다른 특징에 따르면, 복수의 세그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 상이한 폭을 가질 수 있다. 본 개시의 또 다른 특징에 따르면, 프로그래머블 활성화 함수 생성기는 세그먼트 데이터를 기초로 복수의 세그 먼트들의 개수 및 폭을 결정하고, 결정된 개수 및 폭에 기초하여 활성화 함수를 복수의 세그먼트들로 세그먼팅 하도록 구성될 수 있다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함할 수 있다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수가 처리될 수 있는 하드웨어의 정보를 포함할 수 있다. *본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함하고, 프로그래머블 활성화 함수 생성기는 활성화 함수의 미분 데이터를 기초로 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하고, 결정된 실질적 선형 구간 및 비선형 구간에 따라 활성화 함수를 복수의 세그먼트들로 세그먼팅 하도 록 구성될 수 있다. 본 개시의 또 다른 특징에 따르면, 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함하고, 프로그래머블 활 성화 함수 생성기는 활성화 함수의 미분 데이터를 기초로 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결 정하고, 결정된 실질적 선형 구간 및 비선형 구간에 따라 활성화 함수를 복수의 세그먼트들로 세그먼팅 하도록 구성될 수 있다. 본 개시의 또 다른 특징에 따르면, 상기 장치는 장치는 프로그래머블 활성화 함수 유닛을 더 포함하고, 프로그 래머블 활성화 함수 유닛은 복수의 세그먼트들 중 적어도 하나의 세그먼트를 미리결정된 비선형 근사식을 이용 하여 근사화 하도록 구성될 수 있다. 기타 실시예의 구체적인 사항들은 상세한 설명 및 도면들에 포함된다."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 따르면, 세그먼트 데이터를 이용함으로써, 다양한 비선형 활성화 함수, 특히 새롭게 제안되거나 알려 졌으나 일부가 수정된 활성화 함수들을 하드웨어에서 처리 가능하게 프로그래밍할 수 있다. 또한, 본 개시에 따르면, 다양한 비선형 활성화 함수를 근사화 하면서 활성화 함수 자체의 특성, 근사화 에러, 하드웨어의 정보 등이 고려된 세그먼트 데이터를 이용함으로써, 인공신경망모델의 높은 성능 및 높은 효율을 확 보하면서 또는 보다 커스터마이즈된 방식으로 비선형 활성화 함수를 프로그래밍할 수 있다. 또한, 본 개시에 따르면, 다양한 비선형 활성화 함수를 근사화 하면서 활성화 함수 자체의 특성, 근사화 에러, 하드웨어의 정보 등이 고려된 세그먼트 데이터를 이용함으로써, 하드웨어 비용을 최소화하면서 근사화 에러를 최소화할 수 있다. 개시에 따른 효과는 이상에서 예시된 내용에 의해 제한되지 않으며, 더욱 다양한 효과들이 본 개시 내에 포함된 다."}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서 또는 출원에 개시되어 있는 본 개시의 개념에 따른 실시 예들에 대해서 특정한 구조적 내지 단계적 설명들은 단지 본 개시의 개념에 따른 실시 예를 설명하기 위한 목적으로 예시된 것이다. 본 개시의 개념에 따른 실시 예들은 다양한 형태로 실시될 수 있으며 본 개시의 개념에 따른 실시 예들은 다양 한 형태로 실시될 수 있으며 본 명세서 또는 출원에 설명된 실시 예들에 한정되는 것으로 해석되어서는 아니 된 다. 본 개시의 개념에 따른 실시 예는 다양한 변경을 가할 수 있고 여러 가지 형태를 가질 수 있으므로 특정 실시 예들을 도면에 예시하고 본 명세서 또는 출원에 상세하게 설명하고자 한다. 그러나, 이는 본 개시의 개념에 따 른 실시 예를 특정한 개시 형태에 대해 한정하려는 것이 아니며, 본 개시의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제 1 및/또는 제 2 등의 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 상기 구성 요소들은 상기 용어들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으로만, 예컨대 본 개시의 개념에 따른 권리 범위로부터 이탈되지 않은 채, 제 1 구성요소는 제 2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소 는 제 1 구성요소로도 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직 접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 본 문서에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\" 등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 개시에서 사용된 \"제 1,\" \"제 2,\" \"첫째,\" 또는 \"둘째,\" 등의 표현들은 다양한 구성요소들을, 순서 및/또는 중요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들 을 한정하지 않는다. 예를 들면, 제 1 사용자 기기와 제 2 사용자 기기는, 순서 또는 중요도와 무관하게, 서로 다른 사용자 기기를 나타낼 수 있다. 예를 들면, 본 문서에 기재된 권리범위를 벗어나지 않으면서 제 1 구성요 소는 제 2 구성요소로 명명될 수 있고, 유사하게 제 2 구성요소도 제 1 구성요소로 바꾸어 명명될 수 있다. 본 개시에서 사용된 용어들은 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 다른 예시의 범위를 한정하 려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인"}
{"patent_id": "10-2023-0085938", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "용어를 포함해서 여기서 사용되는 용어들은 본 문서에 기재된 기술분야에서 통상의 지식을 가진 자에 의해 일반 적으로 이해되는 것과 동일한 의미를 가질 수 있다. 본 개시에 사용된 용어들 중 일반적인 사전에 정의된 용어들은, 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미로 해석될 수 있으며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의 미로 해석되지 않는다. 경우에 따라서, 본 문서에서 정의된 용어일지라도 본 문서의 실시 예들을 배제하도록 해 석될 수 없다. 본 개시에서 사용한 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 본 개시를 한정하려는 의도가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 서술된 특징, 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것이 존재함 을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 다르게 정의되지 않는 한, 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가지고 있다. 일 반적으로 사용되는 사전에 정의되어 있는 것과 같은 용어들은 관련 기술의 문맥상 가지는 의미와 일치하는 의미 를 가지는 것으로 해석되어야 하며, 본 명세서에서 명백하게 정의하지 않는 한, 이상적이거나 과도하게 형식적 인 의미로 해석되지 않는다. 본 개시의 여러 예시들의 각각 특징들이 부분적으로 또는 전체적으로 서로 결합 또는 조합 가능하며, 당업자가 충분히 이해할 수 있듯이 기술적으로 다양한 연동 및 구동이 가능하며, 각 예시들이 서로에 대하여 독립적으로 실시 가능할 수도 있고 연관 관계로 함께 실시 가능할 수도 있다. 각 예시를 설명함에 있어서 본 개시가 속하는 기술 분야에 익히 알려져 있고 본 개시와 직접적으로 관련이 없는 기술 내용에 대해서는 설명을 생략한다. 이는 불필요한 설명을 생략함으로써 본 개시의 요지를 흐리지 않고 더 욱 명확히 전달하기 위함이다.이하, 첨부한 도면을 참조하여 본 개시의 실시예를 상세하게 설명한다. 도 1은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법을 수행하기 위한 장치를 설명하는 개략적인 개념도이다. 도 1을 참조하면, 활성화 함수 프로그래밍 방법을 수행하기 위한 장치(A)는 신경 프로세싱 유닛(Neural Processing Unit, NPU), 및 프로그래머블 활성화 함수 생성기(Programmable Activation Function Generator, PAF 생성기)를 포함할 수 있다. 장치(A)는 프로세서(Processor), 메인 메모리(Main Memory), 이미지 센서(Image Sensor), 및 디코더(Decoder)를 더 포함하여 다양한 인공신경망 추론 기능을 수행하도록 구성될 수 있다. 장치(A)에 포함될 수 있는 각각의 구성요소들은 버스를 통해 통신하여 데이터를 주고받을 수 있다. NPU는 프로세서와 별개로 인공신경망모델을 위한 동작을 위해 특화된 프로세서이다. 특히, NPU는 인공신경망모델에서 대부분의 연산량을 차지하는 합성곱 연산을 위해 특화될 수 있다. NPU는 제어기(Controller), DMA(Direct Memory Access, DMA), 메모리(Memory), 프로세싱 엘리먼트 어레이(Processing Element Array, PE Array), 및 프로그래머블 활성화 함수 유닛(Programmable Activation Function Unit, PAF Unit)을 포함할 수 있다. 제어기는 DMA, 메모리, PE 어레이, 및 PAF 유닛과 동작 가능하게 연결될 수 있다. 제어기는 NPU에서 인공신경망모델의 연산과 관련된 동작을 제어하도록 구성될 수 있다. 단, 본 개시는 이에 제한되지 않으며, 본 개시의 다양한 예시들에 따른 PE 어레이는 적어도 하나의 프로세 싱 엘리먼트로 변형 실시될 수 있다. DMA는 NPU가 NPU 외부의 메인 메모리 등에 직접 접근하여 읽기/쓰기를 하도록 구성된다. NPU는 DMA을 통해 메인 메모리로부터 인공신경망모델과 관련된 다양한 데이터를 읽어올 수 있다. 메모리는 NPU의 온칩 영역에 배치된 메모리로 온칩 영역에서 처리되는 데이터를 캐싱(caching)하거 나 저장하기 위한 메모리일 수 있다. 메모리는 메인 메모리로부터 인공신경망모델의 연산에 필요한 데이터를 읽어 들여 저장할 수 있다. 메모리는 ROM, SRAM, DRAM, Resistive RAM, Magneto-resistive RAM, Phase-change RAM, Ferroelectric RAM, Flash Memory, HBM 등과 같은 메모리 중 하나의 메모리를 포함할 수 있다. 메모리는 적어도 하나의 메모리 유닛으로 구성될 수 있다. 메모리는 단일(homogeneous) 메 모리 유닛 또는 이종(heterogeneous) 메모리 유닛으로 구성될 수 있다. PE 어레이는 인공신경망의 노드 데이터와 연결망의 가중치 데이터를 연산하도록 구성된 복수의 프로세싱 엘리먼트들을 포함하도록 구성된다. 각각의 프로세싱 엘리먼트는 MAC(Multiply And Accumulate) 연산기, ALU(Arithmetic Logic Unit) 연산기 등을 포함할 수 있다. PAF 유닛은 활성화 함수를 근사화 한 프로그래머블 활성화 함수에 대한 데이터를 수신하도록 구성된다. 프로그래머블 활성화 함수에 대한 데이터는 다양한 활성화 함수에 대응하여 PAF 생성기에서 생성된 데이 터이다. 프로그래머블 활성화 함수 데이터는 적어도 하나의 프로그램 된 활성화 함수를 포함하도록 구성될 수 있다. 즉, PAF 유닛은 PAF 생성기에서 생성된 적어도 하나의 활성화 함수 데이터를 제공받도록 구 성될 수 있다. 부연 설명하면, 프로그래밍된 활성화 함수는 프로그래머블 세그먼트로 구성될 수 있으며 프로그 래머블 세그먼트는 프로그래머블 파라미터를 포함할 수 있다. NPU는 활성화 함수와 관련하여 프로그래머블 활성화 함수에 대한 데이터를 수신해서 인공신경망모델의 연 산을 수행할 수 있다. PAF 유닛은 PE 어레이의 프로세싱 엘리먼트에서 계산된 입력값, 즉 특징맵에 PAF 생성기에서 생성된 프로그래머블 활성화 함수를 적용하여 출력값, 즉 활성화맵을 생성할 수 있다. PAF 유닛은 다양한 활성화 함수에 대응하여 생성된 프로그래머블 활성화 함수를 이용함으로써, 다양한 활 성화 함수, 특히 새롭게 제안되거나 알려졌으나 일부가 수정된 활성화 함수들을 NPU에서 처리 가능하게 한다. PAF 생성기는 프로세서에 의해서 동작될 수 있으나 이에 제한되지 않는다. 프로세서는 본 발명에서 개시된 활성화 함수 프로그래밍 방법을 수행할 수 있는 CPU(Central Processing Unit),AP(Application Processor)와 같은 연산 장치일 수 있다. PAF 생성기는 하드웨어에 포함된 펌웨어 또는 소프트웨어로 구현될 수 있다. PAF 생성기 구동을 위해서 별도의 컴퓨팅 시스템과 오퍼레이팅 시스템이 제공될 수 있다. PAF 생성기는 PAF 유닛이 포 함된 NPU동작을 위한 프로그램일 수 있다. PAF 생성기는 활성화 함수 프로그래밍 방법을 수행하도 록 구성될 수 있다. PAF 생성기는 프로세서 또는 장치(A) 외부의 프로세서에 의해 실행될 수 있다. PAF 생성기는 장치(A) 내에서 인공신경망모델을 컴파일하도록 구성된 컴파일러와 별개로 또는 통 합되어 구성될 수 있다. PAF 생성기는 특정 활성화 함수를 선택하여 NPU에서 동작 가능하도록 선택된 활성화 함수를 프로그 래밍 할 수 있다. PAF 생성기는 적어도 하나의 활성화 함수를 프로그래밍 하도록 구성될 수 있다. PAF 생성기는 적 어도 하나의 프로그래밍된 활성화 함수 데이터를 PAF 유닛에 제공하도록 구성될 수 있다. 프로그래밍된 활성화 함수 데이터는 적어도 하나의 프로그래머블 세그먼트에 대응되는 프로그래머블 파라미터를 포함할 수 있 다. PAF 생성기는 NPU가 처리하고자 하는 인공신경망모델에 포함된 활성화 함수 정보를 제공받도록 구 성될 수 있다. PAF 생성기는 제공받은 활성화 함수 정보에 기초하여 NPU가 처리할 모든 활성화 함 수에 대한 정보를 획득할 수 있다. 따라서, PAF 생성기는 NPU가 처리할 인공신경망모델에 필요한 활성화 함수를 프로그래밍할 수 있다. 다양한 예시들에서, PAF 생성기는 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하고, 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트들로 세그먼팅하고, 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 할 수 있다. 프로그래머블 세그먼트는 프로그래머블 파라 미터들을 값을 설정하여 프로그래머블 세그먼트의 근사화 수준을 결정할 수 있다. PAF 생성기는 세그먼 트 데이터를 기초로 상기 복수의 세그먼트들의 개수 및 폭을 결정할 수 있다. PAF 생성기는 활성화 함수 의 특성을 분석하도록 구성될 수 있다. 예를 들면, PAF 생성기는 활성화 함수의 기울기 변화를 분석하도 록 구성될 수 있다. 예를 들면, PAF 생성기는 활성화 함수의 미분 데이터를 기초로 활성화 함수의 실질 적 선형 구간 및 비선형 구간을 결정할 수 있다. PAF 생성기는 적어도 하나의 세그먼트를 특정 기울기 및 특정 오프셋 값으로 근사화 할 수 있다. PAF 생성기는 복수의 세그먼트들 중 적어도 하나의 세그먼트 를 미리결정된 비선형 근사식을 이용하여 근사화 할 수 있다. PAF 생성기는 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하기 위한 기울기 및 오프셋을 결정하고, 적어도 하나의 세그먼트와 결정된 기 울기 및 오프셋을 갖는 적어도 하나의 후보 세그먼트 사이의 에러값을 결정하고, 결정된 에러값에 기초하여 적 어도 하나의 후보 세그먼트를 프로그래머블 세그먼트를 결정할 수 있다. PAF 생성기는 프로그래머블 세 그먼트와 활성화 함수의 대응되는 세그먼트 사이의 적어도 하나의 최소 에러값을 탐색하고, 탐색된 적어도 하나 의 최소 에러값에 기초하여 프로그래머블 세그먼트의 기울기 및 오프셋을 결정할 수 있다. PAF 생성기는 인공신경망 연산을 위한 활성화 함수를 선택하고, 활성화 함수를 프로그래머블 활성화 함수로 변환할 수 있다. 메인 메모리는 인공신경망모델의 연산에 필요한 데이터를 저장할 수 있다. 메인 메모리는 ROM, SRAM, DRAM, Resistive RAM, Magneto-resistive RAM, Phase-change RAM, Ferroelectric RAM, Flash Memory, HBM 등과 같은 메모리 중 하나의 메모리를 포함할 수 있다. 메인 메모리는 적어도 하나의 메모리 유닛으 로 구성될 수 있다. 메인 메모리는 단일(homogeneous) 메모리 유닛 또는 이종(heterogeneous) 메모리 유 닛으로 구성될 수 있다. 이미지 센서는 렌즈를 통해 들어오는 빛을 이미지 또는 영상 데이터로 생성하고, 생성된 이미지 또는 영 상 데이터는 인공신경망모델의 입력 특징맵 데이터로 사용될 수 있다. 디코더는 인코딩 된 비트 스트림의 특징맵 데이터를 디코딩하고, 디코딩 된 입력 특징맵 데이터는 인공신 경망모델의 입력으로 사용될 수 있다. 이하, 도 2 내지 도 4를 참조하여, 활성화 함수 프로그래밍 방법을 상세하게 설명한다. 도 2는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법을 설명하는 개략적인 순서도이다. 도 2를 참조하면, 활성화 함수 프로그래밍 방법은 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하 는 단계(S200), 생성된 세그먼트 데이터를 이용하여 상기 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 단계(S210), 및 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 단계 (S220)를 포함한다. 단계(S200)에서 세그먼트 데이터가 생성된다. 세그먼트 데이터는 활성화 함수를 복수의 세그먼트들로 세그먼팅 하기 위해 생성되는 데이터이다. 세그먼트 데이터에 대해서는 후술한다. 단계(S210)에서는 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트들로 세그먼팅한다. 본 개시에서, '세그먼트(segment)'라는 용어는 복수의 구간으로 나누어진 활성화 함수의 일부를 의미하고, 활성화 함수의 근사화와 관련된 용어인 '후보 세그먼트' 또는 '프로그래머블 세그먼트'와 구별된다. 다양한 예시들에서, 단계(S210)는 세그먼트 데이터를 기초로 복수의 세그먼트들의 개수 및 폭(width)을 결정하 는 단계를 포함할 수 있다. 단계(S210)에서 세그먼트 데이터를 이용하여 미리결정된 활성화 함수를 세그먼팅하 는 복수의 세그먼트들의 개수 및 복수의 세그먼트들 각각의 폭, 즉 구간의 길이가 결정될 수 있다. 복수의 세 그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 같거나 또는 상이한 폭을 갖을 수 있다. 본 개시에서, 복수의 세그먼트들의 구간을 X 축의 시점 및 종점의 좌표로 표현할 수 도 있다. 한편으로, 복수 의 세그먼트들의 개수와 복수의 세그먼트들 각각의 폭이 결정되면 복수의 세그먼트들의 구간의 좌표가 복수의 세그먼트들의 개수와 폭을 이용하여 획득될 수 있다는 것이 이해되어야 한다. 단계(S220)에서 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 한다. 프로 그래머블 세그먼트는 PAF 유닛의 하드웨어 구성에 따라 프로그램 될 수 있다. 즉, PAF 생성기는 PAF 유닛의 하드웨어 구성을 기초로 NPU에서 처리하고자 하는 활성화 함수를 프로그래밍 하도록 구 성될 수 있다. 예를 들면, PAF 유닛은 각 세그먼트를 특정 기울기 및 특정 오프셋으로 연산하도록 구성된 하드웨어를 가 지도록 구성될 수 있다. PAF 생성기는 PAF 유닛의 구성 정보를 제공받도록 구성될 수 있다. 이러한 경우, PAF 생성기는 기울기(slope) 및 오프셋(offset)을 갖는 1차 함수 또는 2차 함수 이상의 형 태로 대응하는 활성화 함수의 세그먼트를 프로그래밍할 수 있다. 구체적으로, 프로그래머블 세그먼트는 '(기울 기 a)*(입력값 x)+(오프셋 b)'의 형태로 표현되어 활성화 함수의 세그먼트를 근사화 할 수 있다. 단계(S220)는 복수의 세그먼트들 중 적어도 하나의 세그먼트를 특정 기울기 및 특정 오프셋 값으로 근사화 하는 단계를 포함 할 수 있다. 도 3은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에 의해 활성화 함수가 근사화 되는 과정을 설 명하는 그래프이다. 도 3(a)에 도시된 활성화 함수는 도 3(b)에 도시된 바와 같이 세그먼트 데이터를 이용하여 복수의 세그먼트들 (s1, s2, s3, s4)로 세그먼팅된다. 복수의 세그먼트들(s1, s2, s3, s4)은 도 3(c)에 도시된 바와 같이 프로그 래머블 세그먼트들(a1x+b1, a2x+b2, a3x+b3, a4x+b4)로 근사화 된다. 각 프로그래머블 세그먼트는 대응되는 프로그래머블 파라미터를 포함한다. 도 3(c)에서는 복수의 세그먼트들 모두가 프로그래머블 세그먼트들로 근사화 되었지만, 다양한 예시들에서 복수의 세그먼트들 중 일부 세그먼트만 이 선택적으로 프로그래머블 세그먼트로 근사화 될 수도 있다. 예를 들어, 세그먼트들(s1, s3, s4)만이 프로그래머블 세그먼트로 근사화 되고, 세그먼트(s2)는 활성화 함수가 처리될 장치에서 이용가능한 다양한 방식을 이용하여 근사화 될 수 있다. 구체적으로, 세그먼트(s2)의 구간에 서 미리결정되어 저장된 룩업 테이블, 비선형 근사식 등이 하드웨어에서 이용가능한 경우, 이러한 미리결정되어 저장된 룩업 테이블, 비선형 근사식 등을 이용하여 세그먼트(s2)가 근사화 될 수 있다. 다르게 설명하면, PAF 생성기는 각각의 세그먼트들(s1, s2, s3, s4)을 독립적으로 프로그래밍하도록 구성 될 수 있다. 이때, PAF 생성기는 각각의 세그먼트들(s1, s2, s3, s4)이 PAF 유닛의 하드웨어 구성 정보에 기초하여 세그먼트들(s1, s2, s3, s4) 각각에 대한 근사화 방법을 독립적으로 결정하도록 구성될 수 있 다. 예를 들면, PAF 유닛이 1차 함수 연산을 지원하도록 구성될 경우, PAF 생성기는 각각의 세그먼트들 (s1, s2, s3, s4)을 1차 함수의 형태로 프로그래밍 할 수 있다. 예를 들면, PAF 유닛이 1차 함수 및 2차 함수 연산을 지원하도록 구성될 경우, PAF 생성기는 각각의 세그먼트들(s1, s2, s3, s4)을 1차 함수 또는 2차 함수의 형태로 프로그래밍 할 수 있다. 예를 들면, PAF 유닛이 1차 함수, 2차 함수 및 로그(log) 함수 연산을 지원하도록 구성될 경우, PAF 생성 기는 각각의 세그먼트들(s1, s2, s3, s4)을 1차 함수, 2차 함수 또는 로그 함수의 형태로 선택적으로 프 로그래밍 할 수 있다. 예를 들면, PAF 유닛이 1차 함수, 2차 함수, 로그 함수 및 지수(exponential) 함수 연산을 지원하도록 구 성될 경우, PAF 생성기는 각각의 세그먼트들(s1, s2, s3, s4)을 1차 함수, 2차 함수, 로그 함수 또는 지 수 함수의 형태로 선택적으로 프로그래밍 할 수 있다. 예를 들면, PAF 유닛이 적어도 하나의 특정 함수 연산을 지원하도록 구성될 경우, PAF 생성기는 각 각의 세그먼트들(s1, s2, s3, s4)을 대응되는 특정 함수의 형태로 각각 프로그래밍 할 수 있다. 예를 들면, PAF 유닛은 하드웨어로 설계된 1차 함수 유닛, 2차 함수 유닛, 3차 함수 유닛, 로그 함수 유닛, 지수 함수 유닛 또는 이와 유사한 함수 유닛 중 적어도 하나를 포함하도록 구성될 수 있다. 도 4는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에 의해 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 다양한 경우를 설명하는 그래프이다. 도 4(a)를 참조하면, 프로그래밍되는 활성화 함수는 4개의 세그먼트 수를 가지고 균일한 폭을 갖게 세그먼팅 될 수 있다. 도 4(b)를 참조하면, 프로그래밍되는 활성화 함수는 4개의 세그먼트 수를 가지고 상이한 폭을 갖게 세그먼팅 될 수 있다. 도 4(c)를 참조하면, 프로그래밍되는 활성화 함수는 4개의 세그먼트 수를 가지고 상이한 폭을 갖게 세그먼팅 될 수 있다. 도 4(d)를 참조하면, 프로그래밍되는 활성화 함수는 6개의 세그먼트 수를 가지고 상이한 폭을 갖게 세그먼팅 될 수 있다. 복수의 세그먼트들의 개수 및 복수의 세그먼트들 각각의 폭은 세그먼트 데이터를 이용하여 결정될 수 있다. PAF 생성기는 활성화 함수의 비선형성을 분석하여 복수의 세그먼트들이 상이한 폭으로 세그먼팅 하도록 구성될 수 있다. 단, 본 개시는 이에 제한되지 않는다. PAF 생성기는 활성화 함수의 비선형성을 분석하여 복수의 세그먼트들 각각이 최적의 폭으로 세그먼팅 되 도록 구성될 수 있다. 단, 본 개시는 이에 제한되지 않는다. 본 개시에서 활성화 함수는 특징적인 구간들을 포함하는 다양한 형태로 실시될 수 있다. 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 경우, 활성화 함수가 갖는 다양한 형태에 따라 복수의 세그먼트의 개수와 폭이 다양 하게 결정될 수 있다. 예를 들어, 스위시(swish) 함수, Mish 함수, 시그모이드(sigmoid) 함수, 하이퍼볼릭 탄젠트(tanh) 함수, SELU 함수, GELU(Gaussian Error Linear Unit) 함수, SOFTPLUS 함수, ReLU 함수, Leaky ReLU 함수, Maxout 함수, ELU 함수 등과 같은 다양한 활성화 함수들은 (실질적) 선형 구간 및/또는 비선형 구간을 포함하는 복수의 특징 적인 구간들로 구분되는 다양한 형태를 가진다. 이에 따라, 비선형 활성화 함수를 하드웨어에서 처리 가능하게 근사화 할 때, 이러한 특징적인 구간들을 고려하여 세그먼팅하면, 즉 (실질적) 선형 구간, 비선형 구간 등을 고 려하여 세그먼트의 개수 및 폭을 결정하면, 각각의 활성화 함수의 특징에 대응하여 보다 효율적으로 활성화 함 수를 근사화 할 수 있다. 이에 따라, 본 개시에 따른 활성화 함수를 근사화 하는 방법에서는 활성화 함수의 이러한 특징적인 구간들을 고 려하여 활성화 함수를 세그먼팅하기 위해 세그먼트 데이터라는 개념을 제안한다. 세그먼트 데이터는 활성화 함 수의 불연속성 정보, 미분 데이터, 활성화 함수가 처리되는 하드웨어의 정보 등을 포함하고, 이들을 가공한 데 이터도 포함한다. 이하, 도 5 내지 도 7을 참조하여, 세그먼트 데이터 중 불연속성 정보를 이용하여 활성화 함수를 복수의 세그먼 트들로 세그먼팅하는 구체적인 과정을 설명한다. 도 5는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 미분 데이터를 이용하여 활성화 함수를 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 일 예시를 설명하는 그래프이다. 활성화 함수의 불연속 지점이란 활성화 함수의 기울기가 바뀌는 지점을 의미할 수 있다. 예를 들면, PAF 생성 기는 활성화 함수의 불연속 정보 분석을 위해서 미분 데이터를 생성하도록 구성될 수 있다. 단, 본 개시 의 불연속 정보는 미분 데이터에 제한되지 않는다. 본 개시의 예시들에 따른 미분 데이터는 활성화 함수의 n차 미분값, 예를 들어 1차 미분값, 2차 미분값, 3차 미 분값 등을 포함할 수 있다. 여기서 미분 데이터는 활성화 함수와 관련된 변화율 및 불연속 지점을 나타낼 수 있다. 이하 도 5(b)의 w2를 참조하여 설명한다. 예를 들면, PAF 생성기는 프로그래밍하고자 하는 활성화 함수 의 선형 구간을 특정 기울기와 특정 오프셋을 가지는 1차 함수로 세그먼트팅 할 수 있다. 선형 구간의 1차 미분 값은 0을 제외한 상수(constant)값일 수 있다. 이하 도 5(b)의 w3를 참조하여 설명한다. 예를 들면, PAF 생성기는 프로그래밍하고자 하는 활성화 함수 의 상한선 구간 또는 상수 구간을 특정 오프셋을 가지는 1차 함수로 프로그래밍 할 수 있다. 상한선 구간 또는 상수 구간의 1차 미분값은 0일 수 있다. 이하 도 5(b)의 w1를 참조하여 설명한다. 예를 들면, PAF 생성기는 활성화 함수의 1차 미분값이 상수 또 는 0이 아닌 구간을 2차 함수 이상 또는 곡선(비선형 함수)인 구간으로 판단하도록 구성될 수 있다. 본 개시에서, 미분 데이터와 관련하여 '선형 구간(linear interval)'이라는 용어는 활성화 함수의 1차 미분값이 정수 또는 0인 구간, 또는 활성화 함수가 1차 함수로 표현되는 구간을 의미하고, '비선형 구간(non-linear interval)'이라는 용어는 활성화 함수의 1차 미분값이 상수 또는 0이 아닌 구간을 의미할 수 있다. 단, 본 개 시의 예시들의 선형 구간의 판단은 미분값에 의해서만 결정되지 않는다. 즉, PAF 생성기는 활성화 함수 를 입력 받아 다양한 방식으로 선형 구간을 판단 또는 구분하도록 구성될 수 있다. 부연 설명하면, 본 개시의 예시들에서 설명하는 미분 데이터는 활성화 함수의 기울기를 계산하기 위한 하나의 수학적 계산 방법일 뿐이다. 따라서 본 개시는 미분값에 제한되지 않으며, 실질적으로 유사한 기울기 계산 방 법을 활용하는 것도 가능하다. 활성화 함수의 2차 미분값은 활성화 함수의 기울기의 변화율을 나타낼 수 있다. 활성화 함수의 2차 미분값이 상대적으로 큰 구간은 기울기의 변화율이 큰 구간이기 때문에, 이러한 구간에 대응하는 활성화 함수의 세그먼트 는 기울기가 크게 변화하여 증감의 폭이 큰 형태를 갖게 된다. 반대로, 활성화 함수의 2차 미분값이 상대적으 로 작은 구간은 기울기의 변화율이 작은 구간이기 때문에, 이러한 구간에 대응하는 활성화 함수의 세그먼트는 기울기가 작게 변화하여 증감의 폭이 작은 형태를 갖게 된다. 특히, 활성화 함수의 2차 미분값이 특정 임계값 이하로 매우 작은 구간은 기울기의 변화율이 매우 작은 구간이 다. 이에 따라, PAF 생성기는 이러한 구간의 활성화 함수를 기울기가 거의 변화하지 않는 실질적인 1차 함수 구간으로 판단하도록 구성될 수 있다. 예를 들면, PAF 생성기는 활성화 함수의 2차 미분값이 임계값 이하로 매우 작은 구간은 '실질적 선형 구 간(substantially linear interval)'으로 판단하도록 구성될 수 있다. 활성화 함수의 2차 미분값에 대한 임계 값에 대해서는 후술한다. 활성화 함수의 미분값이 0 또는 정수가 되는 미분차수는 활성화 함수의 기울기 변화의 정도를 나타낼 수 있다. 구체적으로, 일반적으로 함수의 최고차항의 차수가 높을수록 함수의 기울기 변화가 급격하기 때문에, 활성화 함 수의 최고차항의 차수가 높은 구간은 기울기 변화가 급격한 구간으로 다른 구간과 구별하여 보다 많은 세그먼트 의 수를 가지도록 세그먼팅될 수 있다. 특정 구간에서 활성화 함수의 최고차항의 차수는 특정 구간에서 미분값이 0 또는 정수가 되는 미분차수를 통해 결정될 수 있다. 예를 들어, 특정 구간에서 최고차항이 3차인 활성화 함수의 경우, 특정 구간에서 활성화 함수의 3차 미분값이 정수(즉, 최고차항의 계수)가 되고 활성화 함수의 4차 미분값이 0이 되기 때문에, 특정 구간에서 3차 미분값이 정수이거나 4차 미분값이 0이 되는 활성화 함수는 특정 구간에서 최고차항의 차수가 3차로 결정될 수 있다. 다양한 실시예에서 활성화 함수의 최고차항의 차수가 3차 이상인 구간은 다른 구간들과 구별하여 보다 많은 세 그먼트의 개수를 가지도록 세그먼팅될 수 있다. 예를 들어, 활성화 함수의 최고차항의 차수가 3차 이상인 구간 에서 세그먼트들의 개수는 활성화 함수가 처리될 하드웨어에서 해당 구간에 대해 세그먼팅가능한 최대 세그먼트 의 개수로 결정될 수 있다. 도 5(a)에 도시된 활성화 함수 f(x)에 대한 미분 데이터 중 1차 미분값 f'(x)가 도 5(b)에 도시된다. 도 5(b)를 참조하면, f'(x)가 상수나 0이 아닌 w1 구간에서 f(x)가 곡선(비선형 함수)이다. 도 5(b)를 참조하면, f'(x)가 0이 아닌 상수인 w2 구간에서 f(x)가 1차 함수이다. 도 5(b)를 참조하면, f'(x)가 0인 w3 구간에서 f(x)가 상수이다. 미분 데이터, 즉 1차 미분값 f'(x)를 이용하여, 활성화 함수 f(x)가 2개의 선형 구간(w2, w3)을 포함하는 3 개 의 구간들(w1, w2, w3)로 세그먼팅 될 수 있다. 즉, PAF 생성기는 프로그래밍하고자 하는 활성화 함수 f(x)의 미분 데이터를 이용하여 선형 구간(w2, w 3)과 비선형 구간(w3)을 결정하여 세그먼팅 할 수 있다. 즉, 활성화 함수 f(x)는 1차 미분값 f'(x)이 (0이 아닌) 상수, 0, 임계점 이하의 곡선(비선형 함수), 또는 곡선 (비선형 함수)인 지점 또는 구간에 따라 세그먼팅될 수 있다. 다르게 설명하면, 활성화 함수 f(x)는 활성화 함 수 f(x)가 미분가능하지 않은 지점 또는 1차 미분값 f'(x)이 불연속한 지점에 따라 세그먼팅될 수 있다. 도 5(b)에서 3개의 구간으로 세그먼팅 된 결과를 도시하나, 이는 선형 구간과 비선형 구간으로 세그먼팅 되는 과정을 간략하게 설명하기 위한 것으로, 활성화 함수 f(x)는 세그먼트 데이트를 이용하여 4개 이상의 구간, 즉 적어도 4개 이상의 세그먼트들로 세그먼팅 될 수 있음이 이해되어야 한다. 예를 들어, 비선형 구간(w3)은 본 발명에 개시된 활성화 함수 프로그래밍 방법에 따라 세그먼트 데이터를 이용 하여 복수의 구간으로 더 세그먼팅 될 수 있다. 비선형 구간(w3)의 추가적인 세그먼팅에 의해 활성화 함수가 보다 많은 개수의 세그먼트들로 세그먼팅되어 근사화 될 수 있어, 근사화 에러(approximation error)가 감소될 수 있다. 본 개시에서 '근사화 에러'라는 용어는 활성화 함수의 특정 세그먼트와 특정 세그먼트를 근사화 한 프로그래머블 세그먼트 사이의 차이를 의미한다. 도 6은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 미분 데이터를 이용하여 활성화 함수를 실질적 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 예시들을 설명하는 그래프이다. 도 6(a)에 도시된 활성화 함수 f(x)에 대한 미분 데이터 중 2차 미분값 f''(x)의 절대값이 도 6(b)에 도시된다. PAF 생성기는 2차 미분값 f”(x)에 특정 임계값을 설정하여 실질적 선형 구간을 결정하도록 구성될 수 있 다. 도 6(b)를 참조하면, 활성화 함수 f(x)의 2차 미분값 f''(x)의 절대값의 최대값(Max)은 0.5일 경우, 최대 값(Max)의 10%인 0.05가 임계값(Th)으로 설정될 수 있다. 즉, 임계값(Th)은 활성화 함수 f(x)의 2차 미분값 f''(x)의 절대값의 최대값(Max)에 대한 상대적인 비율로 결정 될 수 있다. 임계값(Th)은 선형 구간은 아니지만 선형으로 근사화 하는 경우 발생하는 에러가 인공신경망모델 에 있어서 허용가능한 정도인지를 기준으로 결정될 수 있다. 예를 들면, 임계값은 프로그램 된 활성화 함수가 적용되는 인공신경망모델의 정확도 열화 정도를 결정하는 각 세그먼트의 에러값의 수준에 따라 결정되는 것도 가능하다. 부연 설명하면, 임계값이 증가할수록 선형 구간의 세그먼트가 좀더 넓게 프로그램 될 수 있다. 한편 세그먼트의 폭이 넓어질수록 세그먼트의 개수는 저감될 수 있다. 즉, 임계값에 따라서 프로그래밍되는 활성화 함수의 세그 먼트의 총 개수와 폭이 상이해질 수 있다. 도 6(b)의 예시들에서는 상대적인 비율이 10%로 결정되나, 인공신경망모델의 허용가능한 에러에 따라 5%로 결정 될 수 있다. 미분 데이터, 즉 2차 미분값 f''(x)를 이용하여 활성화 함수 f(x)는 2차 미분값 f''(x)가 임계값 (Th) 이하인 구간(w1, w3) 및 2차 미분값 f''(x)가 임계값(Th) 이상인 구간(w2)으로 세그먼팅 될 수 있다. 활 성화 함수 f(x)에서 미분 데이터를 이용하여 실질적 선형(w1, w3) 구간 및 비선형 구간(w2)이 결정되어 세그먼 팅 될 수 있다. 도 6(b)에서 3개의 구간으로 세그먼팅 된 결과를 도시하나, 이는 실질적 선형 구간과 비선형 구간으로 세그먼팅 되는 과정을 간략하게 설명하기 위한 것으로, 활성화 함수 f(x)는 세그먼트 데이트를 이용하여 4개 이상의구간, 즉 4개 이상의 세그먼트들로 세그먼팅 될 수 있음이 이해되어야 한다. 예를 들어, 비선형 구간(w2)은 본 발명에 개시된 활성화 함수 프로그래밍 방법에 따라 세그먼트 데이터를 이용 하여 복수의 구간으로 더 세그먼팅 될 수 있다. 비선형 구간(w2)의 추가적인 세그먼팅에 의해 근사화 에러가 감소될 수 있다. 도 7은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 미분 데이터를 이용하여 활성화 함수를 실질적 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 예시들을 설명하는 그래프이다. 도 7을 참조하면, 활성화 함수 f(x)에서 비선형 구간이 세그먼트 데이터, 즉 2차 미분값 f''(x)의 절대값의 임 계값(Th)을 기준으로 결정될 수 있다. 즉, 임계값(Th) 이상의 영역은 비선형 구간으로 판단될 수 있다. 구체적 으로, 도 7(b)를 참조하면, PAF 생성기는 미분 데이터, 즉 2차 미분값 f''(x)를 이용하여 활성화 함수 f(x)를 실질적 선형 구간 및 비선형 구간으로 세그먼팅할 수 있고, 나아가 활성화 함수 f(x)의 비선형 구간을 예를 들어 2개의 구간들(s2, s3)로 세그먼팅 할 수 있다. 즉, 활성화 함수 f(x)는 미분 데이터를 이용하여 실질적 선형(w1, w4) 구간 및 비선형 구간(w2, w3)으로 세그먼 팅 될 수 있다. 도 7(b)에서 4개의 구간으로 세그먼팅 된 결과를 도시하나, 이는 실질적 선형 구간과 비선형 구간으로 세그먼팅 되는 과정을 간략하게 설명하기 위한 것으로, 활성화 함수 f(x)는 세그먼트 데이트를 이용하여 5개 이상의 구간, 즉 5개 이상의 세그먼트들로 세그먼팅 될 수 있음이 이해되어야 한다. 예를 들어, 비선형 구간들(w2, w3)은 본 발명에 개시된 활성화 함수 프로그래밍 방법에 따라 세그먼트 데이터를 이용하여 복수의 구간으로 더 세그먼팅 될 수 있다. 비선형 구간들(w2, w3)의 추가적인 세그먼팅에 의해 근사 화 에러가 감소될 수 있다. 도 5 내지 도 7에 도시된 바와 같이, 미분 데이터를 이용하여 활성화 함수를 세그먼팅하면, 활성화 함수를 근사 화 하기 전에 활성화 함수로부터 선형 구간 또는 실질적 선형 구간이 비선형 구간과 구별될 수 있다. 구별된 선형 구간 또는 실질적 선형 구간을 갖는 세그먼트는 '(기울기 a)*(입력값 x)+(오프셋 b)'의 형태로 표현된 프 로그래머블 세그먼트로 근사화 될 수 있다. 이때, 선형 구간 또는 실질적 선형 구간을 갖는 세그먼트는 1차 함수 또는 기울기가 거의 일정한 실질적인 1차 함수 형태이다. 따라서 활성화 함수를 기울기 및 오프셋으로 표현된 프로그래머블 세그먼트와 비교하면, 프로 그램 된 세그먼트는 근사화 에러가 없거나 또는 최소화 될 수 있다. 따라서, 미분 데이터를 이용하여 활성화 함수를 프로그래밍하면, 선형 구간 또는 실질적 선형 구간에 대한 계산 량이 매우 줄어들 수 있다. 따라서 본 개시의 예시들에 따른 선형 또는 실질적 선형 구간을 프로그래밍한 활성화 함수는 효율적이면서도 근 사화 에러가 최소화되어 NPU에서 처리되는 인공신경망모델의 연산 속도 향상, 추론 정확도 열화 최소화, 및 NPU의 소비 전력 저감을 제공할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 선형 구간을 결정하는 단 계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 비선형 구간을 결정하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 실질적 선형 구간을 결정 하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 선형 구간 및 비선형 구 간을 결정하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 실질적 선형 구간 및 비 선형 구간을 결정하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S210)은 활성화 함수의 미분 데이터를 기초로 활성화 함수의 선형 구간, 실질적 선형 구간 및 비선형 구간을 결정하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 세그먼트 데이터는 활성화 함수가 처리되는 하드웨어의 정보를 포함할 수 있다. 본 개시의 예시들에 따른 활성화 함수 프로그래밍 방법에서 하드웨어의 정보를 이용하여 활성화 함수를 세그먼팅 할 수 있 다. 하드웨어 데이터는 인공신경망모델에서 NPU의 비교기(comparator) 개수, 구현된 회로에 사용된 게이 트 개수, 구현된 회로 종류 (지수 회로, 로그 회로, 안티로그 회로 등) 등을 포함할 수 있다. 예를 들어, NPU의 PAF 유닛의 비교기의 개수에 따라 활성화 함수를 세그먼팅하는 복수의 세그먼트들 의 개수가 제한될 수 있다. 이에 활성화 함수는 활성화 함수가 처리될 NPU가 처리할 수 있는 세그먼트들 의 최대 개수 또는 할당된 NPU의 자원에 대응하는 세그먼트들의 개수로 세그먼팅 될 수 있다. 이에 따라, PAF 생성기는 미리결정된 하드웨어 자원을 보다 효율적이거나 보다 커스터마이즈된 방식으로 사용 하여 활성화 함수를 프로그래밍할 수 있다. 다양한 예시들에서, 단계는 불연속성에 기초하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그 래머블 세그먼트로 근사화 하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계는 에러값에 기초하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래 머블 세그먼트로 근사화 하는 단계를 더 포함할 수 있다. 본 개시에서, '에러값' 또는 '근사화 에러값'이라는 용어는 활성화 함수의 특정 세그먼트와 특정 세그먼트들 근 사화 된 프로그래머블 세그먼트 사이의 차이를 의미한다. 에러값과 관련하여, 다양한 활성화 함수들이 (실질적) 선형 구간 및/또는 비선형 구간을 포함하는 복수의 특징 적인 구간들로 구분될 수 있으며, 이러한 특징적인 구간들을 동일한 폭의 세그먼트로 세그먼팅하면 각 세그먼트 별로 에러값이 크게 달라지게 된다. 이에 따라, 본 개시의 예시들에 따른 활성화 함수 프로그래밍 방법에서, 근사화 에러를 감소시키기 위해 다양한 방식으로 이러한 특징적인 구간들 중 적어도 하나의 특징을 고려하여 프 로그래머블 세그먼트들로 근사화 할 수 있다. 특히, 활성화 함수의 프로그래밍 과정에서는, 프로그래머블 세그먼트들 사이에 불연속점(discontinuity)이 나타 날 수 있다. 본 개시의 예시들에 따른 활성화 함수 프로그래밍 방법에서 프로그래머블 세그먼트들 사이의 또는 일 프로그래머블 세그먼트의 시점 및/또는 종점에서 나타나는 이러한 불연속점을 활용하여 근사화 에러를 크게 감소시킬 수 있다. 이에 따라, 본 개시에서는 활성화 함수를 세그먼트 데이터를 이용하여 복수의 세그먼트들로 세그먼팅하고 에러 값에 기초하여 이러한 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 하는 과정에서, 프로그래머블 세그먼트들 사이의 불연속점을 허용함으로써 에러값을 크게 감소시킬 수 있다. 다양한 예시들에서, 단계(S220)는 프로그래머블 세그먼트의 기울기 및 오프셋과 활성화 함수의 대응되는 세그먼 트를 비교하여 에러값을 계산하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S220)는 활성화 함수의 적어도 하나의 세그먼트를 상기 프로그래머블 세그먼트로 변환 하기 위한 프로그래머블 파라미터를 결정하는 단계를 더 포함할 수 있다. 여기서 상기 프로그래머블 세그먼트 가 1차 함수일 경우, 프로그래머블 파라미터는 1차 함수에 대응되는 기울기 및 오프셋을 포함할 수 있다. 여기 서 상기 프로그래머블 세그먼트가 2차 함수일 경우, 프로그래머블 파라미터는 대응되는 2차 함수의 계수들 (Coefficients of the quadratic term)를 포함할 수 있다. 2차 함수의 계수들은 2차 계수, 선형 계수 및 상수 를 포함할 수 있다. 다양한 예시들에서, 단계(S220)는 활성화 함수의 적어도 하나의 세그먼트와 (임시) 기울기 및 (임시) 오프셋을 갖는 적어도 하나의 후보 세그먼트(candidate segment) 사이의 에러값을 계산하는 단계를 더 포함할 수 있다. 다양한 예시들에서, 단계(S220)는 계산된 에러값에 기초하여 적어도 하나의 후보 세그먼트의 파라미터를 프로그 래머블 세그먼트의 프로그래머블 파라미터로 결정하는 단계를 포함할 수 있다. 따라서, PAF 생성기는 프로그래밍된 활성화 함수 데이터를 NPU에 제공할 수 있다. 여기서 프로그 래밍된 활성화 함수 데이터는 적어도 하나의 프로그래밍된 활성화 함수를 포함할 수 있다. 여기서 프로그래밍 된 활성화 함수 데이터는 적어도 하나의 프로그래밍된 활성화 함수의 각각의 프로그래머블 세그먼트와 대응되는 프로그래머블 파라미터를 포함할 수 있다. 이하, 도 8 내지 도 10을 참조하여, 에러값에 기초하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그 래머블 세그먼트로 근사화 하는 과정을 구체적으로 설명한다. 도 8을 참조하면, 비선형 활성화 함수의 세그먼트(s)에 대한 복수의 후보 세그먼트들(Sc1, Sc2, Sc3)이 도시된 다. 본 개시의 예시들에서, '후보 세그먼트'라는 용어는 활성화 함수 프로그래밍 방법을 이용하여 '프로그래머블 파 라미터'에 의해 표현된 프로그래머블 세그먼트가 될 수 있는 함수를 의미한다. 예를 들어, 프로그래머블 세그먼트가 1차 함수로 표현되는 경우, 프로그래머블 세그먼트는 '(기울기 a)*(입력값 x)+(오프셋 b)'로 표현될 수 있다. 여기서 프로그래머블 파라미터는 기울기 a 및 오프셋 b를 포함한다. 예를 들어, 프로그래머블 세그먼트가 2차 함수로 표현될 경우, 프로그래머블 세그먼트는 '(2차 계수 a)*(입력값 x2)+(선형 계수 b)*(입력값 x)+(상수 c)'로 표현될 수 있다. 여기서 프로그래머블 파라미터는 2차 계수 a, 선형 계수 b, 및 상수 c를 포함한다. 이하, 1차 함수를 예를 들어 설명한다. 후보 세그먼트는 세그먼트 데이터를 이용하여 세그먼팅 된 프로그래머 블 세그먼트에 대응하는 1차 함수의 형태일 수 있다. 일 세그먼트에 대한 후보 세그먼트는 일 세그먼트의 시점 및 종점을 지나는 1차 함수로 결정될 수 있다. 예를 들면, 일 세그먼트에 대한 후보 세그먼트는 일 세그먼트의 시점 및 종점을 지나는 1차 함수와 같은 기울기 를 가지면서 오프셋이 조정된 1차 함수일 수 있다. 예를 들면, 일 세그먼트에 대한 후보 세그먼트는 일 세그먼트의 시점 및 종점을 지나는 1차 함수와 상이한 기울 기를 가지면서 오프셋이 조정된 1차 함수일 수 있다. 예를 들면, 일 세그먼트에 대한 후보 세그먼트는 일 세그먼트의 접선들 중 하나로 결정될 수 있다. 도 8에서는 복수의 후보 세그먼트들 중 프로그래머블 세그먼트를 결정하는 과정을 간략하게 설명하기 위해, 세 그먼트(s)의 시점과 종점을 지나는 기울기를 공통으로 갖는 3개의 후보 세그먼트들이 도시된다. 제1 후보 세그 먼트(Sc1)는 세그먼트(s)의 시점 및 종점을 지나는 1차 함수이고, 제2 후보 세그먼트(Sc2) 및 제3 후보 세그먼트 (Sc3)는 제1 후보 세그먼트(Sc1)와 공통된 기울기를 가지면서 오프셋이 조정된 1차 함수이고, 제3 후보 세그먼트 (Sc3)는 후보 세그먼트(Sc3)가 세그먼트(s)의 접선이 되게 하는 오프셋을 갖는다. 도 8에 도시된 후보 세그먼트 들은 근사화 된 프로그래머블 세그먼트가 될 수 있는 세그먼트들을 간략하게 설명하기 위한 것으로, 실제 후보 세그먼트들은 에러값을 감소시키기 위해 다양한 방식으로 기울기 및/또는 오프셋이 조정될 수 있다. 다양한 예시들에서, 에러값(△y)을 이용하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세 그먼트로 근사화 할 수 있다. 이때, PAF 생성기는 복수의 세그먼트들 각각의 폭을 균일한 폭으로 결정하 고, 균일한 폭을 기초로 에러값(△y)을 이용하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 할 수 있다. 단, 본 개시는 이에 제한되지 않는다. 도 9는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 에러값(△y) 중 가장 큰 값인 최대 에러 값(max(△y))을 이용하여 일 세그먼트를 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 9(a)는 활성화 함수 f(x)를 세그먼팅하는 세그먼트들(s1, s2), 제1 세그먼트(s1)에 대응하는 제1 후보 세그 먼트(sc1(x)), 및 제2 세그먼트(s2)에 대응하는 제2 후보 세그먼트(sc2(x))를 도시한다. 도 9(a)에서는 일 예시 로서 간략하게 설명하기 위해 각각의 후보 세그먼트들(sc1(x), sc2(x))이 각각의 세그먼트들(s1, s2)의 시점 및 종점을 지나는 각각의 1차 함수가 되게 기울기 및 오프셋이 결정될 수 있다. 여기서 각각의 프로그래머블 세그 먼트의 프로그래머블 파라미터는 기울기와 오프셋을 포함하게 된다. 실제 제2 후보 세그먼트(sc2(x))는 제2 세그 먼트(s2)의 시점 및 종점을 지나는 1차 함수와 같은 기울기를 가지면서 오프셋이 조정될 수 있고, 제2 세그먼트 (s2)의 시점 및 종점을 지나는 1차 함수와 상이한 기울기를 가지면서 오프셋이 조정될 수 있다. 도 9(a)에 도시된 일 예시와 같이, PAF 생성기는 제2 세그먼트(s2)와 제2 후보 세그먼트(sc2(x)) 사이에 에러값(△y), 즉 'f(x)-sc2(x)'의 절대값( )을 계산하고, 에러값(△y) 중에서 가장 큰 값인 최대 에러값(max(△y))도 계산할 수 있다. 제2 세그먼트(s2)의 최대 에러값을 감소시키기 위해, 도 9(b)에 도시된 바와 같이 후보 세그먼트(sc2(x))를 최대 에러값(max(△y))의 절반인 max(△y)/2 값만큼 y축 방향으로 조정(즉, 오프셋 조정)한 제2 후보 세그먼트가 제2 세그먼트(s2)를 근사화한 제2 프로그래머블 세그먼트(sp2(x))로 결정될수 있다. 제1 세그먼트(s1)를 근사화한 제1 프로그래머블 세그먼트(sp1(x))가 도 9(b)에서와 같이 도시되면, 제1 프로그래 머블 세그먼트(sp1(x))와 제2 프로그래머블 세그먼트(sp2(x)) 사이에는 불연속점이 나타날 수 있다. 도 9(b)에서 이러한 불연속점은 활성화 함수 f(x)의 제2 세그먼트(s2)를 에러값( )에 기초하여 프 로그래머블 세그먼트로 근사화 하는 과정에서 의도적으로 유도된 것일 수 있다. 즉, 특정 프로그래머블 세그먼 트 내의 최대 에러값을 감소시키도록 특정 프로그래머블 세그먼트를 근사화하는 과정에서 인접한 프로그래머블 세그먼트들 사이의 접점에 불연속점을 발생될 수 있다. 부연 설명하면, 프로그램 된 활성화 함수의 근사화 에러값이 증가할수록, 프로그래머블 활성화 함수를 활용하는 NPU의 추론 정확도의 열화가 증가될 수 있다. 이와 반대로, 프로그램 된 활성화 함수의 근사화 에러값이 감소할수록, 프로그래머블 활성화 함수를 활용하는 NPU의 추론 정확도의 열화가 저감될 수 있다. 다양한 예시들에서, 에러값에 대한 적분값(∫[sc(x)-f(x)]dx)을 이용하여 복수의 세그먼트들 중 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화 할 수 있다. 부연 설명하면, 제1 프로그래머블 세그먼트(sp1(x))와 제2 프로그래머블 세그먼트(sp2(x))는 각각 다른 방법으로 프로그래밍 될 수 있다. 즉, 각각의 프로그래머블 세그먼트는 1차 함수, 2차 함수, 로그 함수, 지수 함수 등의 방법을 각각 선택하여 프로그램 될 수 있다. 따라서, 각각의 프로그래머블 세그먼트는 동일한 함수로 프로그램 되거나 또는 상이한 함수로 프로그램 될 수 있다. 도 10은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 에러값에 대한 적분값(∫[sc(x)f(x)]d x)을 이용하여 일 세그먼트를 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 10(a)는 활성화 함수 f(x)를 세그먼팅하는 세그먼트들(s1, s2), 제1 세그먼트(s1)에 대응하는 제1 후보 세그 먼트(sc1(x)), 및 제2 세그먼트(s2)에 대응하는 제2 후보 세그먼트(sc2(x))를 도시한다. 도 10(a)에서는 일 예 시로서 간략하게 설명하기 위해, 각각의 후보 세그먼트들(sc1(x), sc2(x))이 각각의 세그먼트들(s1, s2)의 시점 및 종점을 지나는 1차 함수가 되게 기울기 및 오프셋이 결정된다. 실제 제2 후보 세그먼트(sc2(x))는 제2 세그 먼트(s2)의 시점 및 종점을 지나는 1차 함수와 같은 기울기를 가지면서 오프셋이 조정될 수 있고, 제2 세그먼트 (s2)의 시점 및 종점을 지나는 1차 함수와 상이한 기울기를 가지면서 오프셋이 조정될 수 있다. 도 10(a)에 도시된 바와 같이, PAF 생성기는 제2 세그먼트(s2)와 후보 세그먼트(sc1(x)) 사이에 적분값 ( )을 에러값으로 계산하고, 적분값( ) 중에서 가장 크기가 작은, 즉 적분 값( )의 절대값이 가장 작은 후보 세그먼트를 탐색한다. 에러값을 감소시키기 위해, 도 10(b)에 도시된 바와 같이, 적분값( 의 절대값이 가장 작은, 즉 min( )인 후보 세그먼트가 제2 프로그래머블 세그먼트(sp2(x))로 결정될 수 있다. 제1 세그먼트(s1)을 근사화한 제1 프로그래머블 세그먼트(sp1(x))가 도 10(b)에서와 같이 도시되면, 제1 프로그 래머블 세그먼트(sp1(x))와 제2 프로그래머블 세그먼트(sp2(x)) 사이에는 불연속점이 나타날 수 있다. 도 10 (b)에서 이러한 불연속점은 활성화 함수 f(x)의 제2 세그먼트(s2)를 에러값( )에 기초하여 제 2 프로그래머블 세그먼트(sp2(x))로 근사화 하는 과정에서 발생할 수 있다. 하지만 불연속점이 존재하더라도 각 각의 프로그래머블 세그먼트의 근사화 에러값이 최소화되면 프로그래머블 활성화 함수를 활용하는 NPU의 추론 정확도의 열화가 저감될 수 있다. 다양한 예시들에서, 단계(S220)은 프로그래머블 세그먼트와 대응되는 활성화 함수의 세그먼트 사이의 최소 에러 값을 탐색(search)하는 단계를 더 포함할 수 있다. 예를 들면, 단계(S220)은 적어도 하나의 프로그래머블 세그먼트와 대응되는 적어도 하나의 활성화 함수의 세그 먼트 사이의 적어도 하나의 최소 에러값을 탐색(search)하는 단계를 더 포함할 수 있다. 예를 들면, 단계(S220)은 탐색된 적어도 하나의 최소 에러값에 기초하여 프로그래머블 세그먼트의 기울기 및 오 프셋을 결정하는 단계를 더 포함할 수 있다. 예를 들면, 단계(S220)은 결정된 기울기 및 오프셋에 따라 상기 적어도 하나의 세그먼트를 상기 프로그래머블 세그먼트로 근사화 하는 단계를 포함할 수 있다. 다양한 예시들에서, 단계(S220)는 손실함수(loss function)를 이용한 머신 러닝을 이용하여 프로그래머블 세그 먼트를 결정하는 단계를 더 포함할 수 있다. 도 11은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 머신 러닝을 이용하여 일 세그먼트를 최 적 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 11을 참조하면, PAF 생성기는 활성화 함수 f(x)에 대한 후보 세그먼트(sc(x))를 손실함수의 초기값으 로 설정하고, 머신 러닝을 통해 손실 함수의 값이 가장 작은 후보 세그먼트를 최적 프로그래머블 세그먼트 (sop(x))로 결정할 수 있다. 이에 따라, 최적화된 프로그래머블 파라미터가 탐색될 수 있다. 손실함수는 MSE(Mean Squared Error), RMSE(Root Mean Squared Error) 등이 사용될 수 있으나 이에 제한되지 않는다. 본 개시에서 손실함수에 초기값으로 이용되는 후보 세그먼트는 예시적으로 세그먼트 데이터를 이용하여 세그먼팅 된 세그먼트들에 대응하여 근사화 된 1차 함수일 수 있다. 단, 본 개시에 따른 예시들은 1차 함수에 제한되지 않는다. 즉, 손실함수는 활성화 함수 f(x)가 세그먼트 데이터를 이용하여 복수의 세그먼트들로 세그먼팅 된 이 후에 사용될 수 있다. 이에 따라, 손실함수를 이용한 머신 러닝은 활성화 함수의 (실질적) 선형 구간 및/또는 비선형 구간을 포함하는 복수의 특징적인 구간과 같은 활성화 함수 자체의 특성, 근사화 에러 등이 이미 고려된 이후에 수행될 수 있다. 따라서 최적화된 프로그래머블 파라미터 탐색의 계산량이 저감될 수 있으며 프로그램 된 활성화 함수 사용에 따 른 NPU의 추론 정확도 열화를 최소화 할 수 있다. 또한 본 개시의 예시들에 따르면, 불필요한 세그먼트의 개수를 저감할 수 있는 효과도 제공할 수 있다. 즉, 본 개시의 예시들에 따르면, 세그먼트 개수를 최소화 하는 것도 가능하다. 다양한 예시들에서, 단계(S210)는 활성화 함수의 2차 미분값의 적분값(누적값)을 이용하여 활성화 함수를 복수 의 세그먼트들로 세그먼팅하는 단계를 더 포함할 수 있다. 여기서 2차 미분값의 누적값이 세그먼트 데이터로 이용될 수 있다. 예를 들면, 단계(S210)는 활성화 함수의 2차 미분값의 누적값을 계산하는 단계를 더 포함할 수 있다. 예를 들면, 단계(S210)은 2차 미분값의 누적값의 임계값을 기초로 활성화 함수를 복수의 세그먼트들로 세그먼팅 하는 단계를 더 포함할 수 있다. 나아가, 본 개시에 따른 활성화 함수 프로그래밍 방법은 일차적으로 2차 미분값의 누적값을 이용하여 활성화 함 수를 복수의 세그먼트들로 세그먼팅하여 결정된 복수의 세그먼트들의 개수가 목표 개수보다 많거나 적은 경우, 2차 미분값의 누적값의 임계값을 조정하고, 조정된 임계값을 기초로 다시 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 단계를 포함할 수 있다. 구체적으로, 결정된 복수의 세그먼트들의 개수가 목표 개수보다 많 은 경우, 임계값이 증가되게 조정되고, 결정된 복수의 세그먼트들의 개수가 목표 개수보다 적은 경우, 임계 값이 감소되게 조정될 수 있다. 다양한 실시예에서, PAF 생성기는 2차 미분값의 누적값의 임계값을 기초로 활성화 함수를 복수의 세그먼 트들로 세그먼팅할 수 있다. 이때, PAF 생성기는 활성화 함수의 모든 구간을 2차 미분값의 누적값의 임 계값을 기초로 세그먼팅하거나 또는 활성화 함수의 일부 구간을 2차 미분값의 누적값의 임계값을 기초로 세그먼 팅할 수 있다. 특히, PAF 생성기는 활성화 함수의 일부 구간을 (실질적) 선형 구간이 아닌 비선형 구간 으로 결정하고, 비선형 구간인 일부 구간에 대해서만 2차 미분값의 누적값의 임계값을 기초로 세그먼팅할 수 있 다. PAF 생성기는 본 개시의 다양한 예시에서 기술된 활성화 함수 프로그래밍 방법에 의해 비선형 구간 이 아닌 나머지 구간들을 세그먼팅할 수 있다. 도 12는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 활성화 함수의 2차 미분값의 누적값 및 임계값을 이용하여 활성화 함수를 세그먼팅하는 예시를 설명하는 그래프이다. 도 12을 참조하면, 활성화 함수 f(x)의 2차 미분값의 누적값, 즉 ∫f''(x)dx을 이용하여 활성화 함수 f(x)가 세 그먼팅 될 수 있다. 활성화 함수 f(x)의 X축의 최소값(min) 지점이 시작 지점으로 결정되거나 또는 X축의 최대 값(max) 지점이 시작 지점으로 결정될 수 있다. 단, 본 개시는 이에 제한되지 않으며, 시작 지점은 특점 지점이 되는 것도 가능하다. 시작 지점으로부터 활성화 함수 f(x)의 2차 미분값의 누적값이 임계값(ETh)에 도달하는 구간마다, 활성화 함수 f(x)를 세그먼팅한다. 예를 들면, PAF 생성기는 =ETh가 되게 w1을 결정하고, =ETh가 되게 w2를 결정하고, =ETh가 되게 w3를 결정하고, =ETh가 되게 w4를 결정하고, =ETh가 되 게 w5를 결정하고, =ETh가 되게 w6를 결정할 수 있다. 부연 설명하면, 인공신경망 연산에 활용되는 프로그래머블 활성화 함수는 한정된 범위의 입력값만 처리하도록 구성되는 것도 가능하다. 예를 들면, 프로그래머블 활성화 함수의 입력값인 X축의 최소값(min)이 -6이 될 수 있고, 최대값(max)은 6이 될 수 있다. 상술한 구성에 따르면, 프로그래밍된 활성화 함수의 데이터 크기를 저감 할 수 있는 효과가 있다. 단, 본 개시는 이에 제한되지 않는다. 도 12를 참조하면, 활성화 함수의 2차 미분값의 누적값은 활성화 함수의 기울기의 변화율이기 때문에, 활성 화 함수 f(x)에서 기울기의 변화율이 상대적으로 큰 구간들에 대응하는 세그먼트들의 폭들(w2, w3, w4)은 상대 적으로 좁게 결정되고, 활성화 함수 f(x)에서 기울기의 변화율이 없는 1차 함수인 부분을 포함하는 세그먼 트들의 폭들(w1, w6)은 상대적으로 넓게 결정될 수 있다. 도 13, 14은 ELU 활성화 함수 및 Hardswish 활성화 함수를 도시하는 그래프이다. ELU 활성화 함수 f(x)는 x>0인 경우 x이고, x≤0 경우 α(ex-1)이다(α는 하이퍼파리미터). 도 13에 도시된 바와 같이, ELU 활성화 함수는 x값이 0 이상인 경우 선형 구간에 갖고, x값이 0 미만인 경우 비 선형 구간을 갖는다. 즉, ELU 활성화 함수는 선형 구간과 비선형 구간으로 구분되는 특징을 갖는다. Hardswish 활성화 함수 f(x)는 x≤-3인 경우 0이고, x≥+3인 경우 x이고, -3<x<+3인 경우 x·(x+3)/6이다. 도 14에 도시된 바와 같이, Hardswish 활성화 함수는 x값이 -3보다 작거나 +3보다 큰 경우 선형 구간을 갖고, 그렇지 않은 경우 비선형 구간을 갖는다. 즉, Hardswish 활성화 함수는 선형 구간과 비선형 구간으로 구분되는 특징을 갖는다. 단, 본 개시는 ELU 활성화 함수 및 Hardswish 활성화 함수에 제한되지 않고, 선형 구간 및 비선형 구간으로 구 분되는 특징을 갖는 다양한 활성화 함수가 존재한다. 특히, 인공신경망의 영역에서는 인공신경망의 정확도 향상을 위해서 다양한 선형 함수와 비선형 함수가 조합된 다양한 맞춤형 활성화 함수가 제시되고 있다. 이러한 경우, 본 개시의 예시들에 따른 활성화 함수 프로그래밍 방법이 더욱 더 효과적일 수 있다. 본 개시에 따른 활성화 함수 프로그래밍 방법에서는 PAF 생성기가 활성화 함수의 선형 구간 및 비선형 구 간, 나아가 실질적 선형 구간 및 비선형 구간을 구분하여, 활성화 함수를 복수의 세그먼트들로 선택적으로 세그 먼팅할 수 있다. 이에 따라, 본 개시에 따른 활성화 함수 프로그래밍 방법은 특히 (실질적) 선형 구간 및 비선 형 구간을 갖는 활성화 함수를 근사화하는 프로그래밍에 있어서 효율적이면서도 근사화 에러가 최소화되어 NPU에서 처리되는 인공신경망모델의 연산 속도 향상, 추론 정확도 열화 최소화, 및 NPU의 소비 전 력 저감을 제공할 수 있다.본 개시에 따른 활성화 함수 프로그래밍 방법에서는 PAF 생성기가 적어도 하나 의 세그먼트의 프로그래머블 파라미터를 생성할 수 있다. NPU는 상기 정보를 기초로 적어도 하나의 프로 그래밍된 활성화 함수를 처리할 수 있다.다양한 예시들에서, 본 개시에 따른 활성화 함수 프로그래밍 방법은 상기 복수의 세그먼트들 중 적어도 하나의 세그먼트를 미리결정된 룩업 테이블, 비선형 근사식 등을 이용하여 근사화 하는 단계를 더 포함할 수 있다. 본 개시에 따른 활성화 함수 프로그래밍 방법에서는 세그먼트 데이터를 이용하여 복수의 세그먼트들이 세그먼팅 되고, 세그먼팅 된 복수의 세그먼트들은 선택적으로 프로그래머블 세그먼트로 근사화가 가능하기 때문에, 프로 그래머블 활성화 함수로 근사화하지 않기로 결정된 구간이 존재할 수 있다. 이러한 구간에 대해서 미리결정되 어 저장된 룩업 테이블, 비선형 근사식 등이 하드웨어에서 이용가능한 경우라면, 이러한 구간은 미리결정되어 저장된 룩업 테이블, 비선형 근사식 등을 이용하여 근사화 될 수 있다. 다양한 예시들에서, 본 개시에 따른 활성화 함수 프로그래밍 방법은 복수의 세그먼트들 중 적어도 하나의 세그 먼트를 프로그래머블 세그먼트로 근사화하지 않기로 결정하는 단계를 더 포함할 수 있다. 예를 들어, 매우 복 잡한 형태를 갖는 세그먼트나 인공신경망모델에서 중요도가 낮은 세그먼트는 프로그래머블 세그먼트로 근사화하 지 않기로 결정될 수 있다. 이러한 세그먼트는 미리결정된 다른 방식으로 처리되거나 이러한 세그먼트의 개수가 많은 경우라면 통합되어 미리결정된 다른 방식으로 처리될 수 있다. 다양한 예시들에서, 본 개시에 따른 활성화 함수 프로그래밍 방법은 각각의 세그먼트에 대한 프로그래밍 방법을 개별적인 방식으로 처리할 수 있다. 본 개시의 예시들에 따른 활성화 함수 프로그래밍 방법은 인공신경망 연산을 위한 활성화 함수를 선택하는 단계, 및 활성화 함수를 프로그래머블 활성화 함수로 변환하는 단계를 포함할 수 있다. 도 12를 참조하면, 예 시적으로 프로그래밍 된 활성화 함수는 특정 폭을 갖는 복수의 세그먼트들을 포함하고, 특정 폭은 특정 임계값 을 기초로, 즉 선택된 활성화 함수의 2차 미분값의 누적값이 임계값에 도달하는 구간마다 결정될 수 있다. 본 개시의 다른 실시예에 따른 프로그래머블 활성화 함수 생성기를 포함하는 장치가 제공될 수 있다. 프로그래 머블 활성화 함수 생성기는, 활성화 함수를 세그먼팅하기 위한 세그먼트 데이터를 생성하고, 생성된 세그먼트 데이터를 이용하여 활성화 함수를 복수의 세그먼트들로 세그먼팅하고, 복수의 세그먼트들 중 적어도 하나의 세 그먼트를 프로그래머블 세그먼트로 근사화하도록 구성될 수 있다. 복수의 세그먼트들 중 적어도 하나의 세그먼트는 다른 세그먼트와 상이한 폭을 갖을 수 있다. 프로그래머블 활성화 함수 생성기는 세그먼트 데이터를 기초로 복수의 세그먼트들의 개수 및 폭를 결정하고, 결 정된 개수 및 폭에 기초하여 상기 활성화 함수를 복수의 세그먼트들로 세그먼팅하도록 구성될 수 있다. 세그먼트 데이터는 활성화 함수의 미분 데이터를 포함할 수 있다. 세그먼트 데이터는 활성화 함수가 처리될 수 있는 하드웨어의 정보를 포함할 수 있다. 프로그래머블 활성화 함수 생성기는 활성화 함수의 미분 데이터를 기초로 상기 활성화 함수의 실질적 선형 구간 및 비선형 구간을 결정하고, 결정된 실질적 선형 구간 및 비선형 구간에 따라 활성화 함수를 복수의 세그먼트들 로 세그먼팅하도록 구성될 수 있다. 프로그래머블 활성화 함수 생성기는 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화하기 위한 기울 기 및 오프셋을 결정하고, 결정된 기울기 및 오프셋에 따라 적어도 하나의 세그먼트를 프로그래머블 세그먼트로 근사화하도록 구성될 수 있다. 장치는 프로그래머블 활성화 함수 유닛을 더 포함하고, 프로그래머블 활성화 함수 유닛은 적어도 하나의 세그먼 트를 미리결정된 비선형 근사식을 이용하여 근사화하도록 구성될 수 있다. 본 명세서와 도면에 게시된 본 개시의 예시들은 본 개시의 기술내용을 쉽게 설명하고 본 개시의 이해를 돕기 위 해 특정 예를 제시한 것뿐이며, 본 명세서의 범위를 한정하고자 하는 것은 아니다. 여기에 게시된 예시들 이외 에도 발명의 기술적 사상에 바탕을 둔 다른 변형 예들이 실시 가능하다는 것은 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 자명한 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14"}
{"patent_id": "10-2023-0085938", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법을 수행하기 위한 장치를 설명하는 개략적인 개념도이다. 도 2는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법을 설명하는 개략적인 순서도이다. 도 3은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에 의해 활성화 함수가 근사화 되는 과정을 설 명하는 그래프이다. 도 4은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에 의해 활성화 함수를 복수의 세그먼트들로 세그먼팅하는 다양한 경우를 설명하는 그래프이다. 도 5는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 세그먼트 데이터 중 미분 데이터를 이용 하여 활성화 함수를 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 일 예시를 설명하는 그래프이다. 도 6는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 세그먼트 데이터 중 미분 데이터를 이용 하여 활성화 함수를 실질적 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 일 예시를 설명하는 그래프이다. 도 7는 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 세그먼트 데이터 중 미분 데이터를 이용 하여 활성화 함수를 실질적 선형 구간과 비선형 구간을 구분해서 세그먼팅하는 다른 예시를 설명하는 그래프이 다. 도 8은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 에러값을 이용하여 일 세그먼트를 프로그 래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 9은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 최대 에러값을 이용하여 일 세그먼트를 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 10은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 에러값에 대한 적분값을 이용하여 일 세 그먼트를 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 11은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 머신 러닝(Machine Learning)을 이용하 여 일 세그먼트를 최적 프로그래머블 세그먼트로 근사화 하는 예시를 설명하는 그래프이다. 도 12은 본 개시의 일 실시예에 따른 활성화 함수 프로그래밍 방법에서 활성화 함수의 2차 미분값의 누적값 및 임계값을 이용하여 활성화 함수를 세그먼팅하는 예시를 설명하는 그래프이다. 도 13, 14은 ELU 활성화 함수 및 Hardswish 활성화 함수를 도시하는 그래프이다."}
