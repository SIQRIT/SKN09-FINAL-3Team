{"patent_id": "10-2022-0132462", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0069815", "출원번호": "10-2022-0132462", "발명의 명칭": "엣지 컴퓨팅 환경의 자원 할당 방법 및 장치", "출원인": "한국전자통신연구원", "발명자": "최현화"}}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "지능형 엣지 서비스 요청을 수신하는 단계;입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 단계;상기 워커 서버의 토폴로지 정보에 기반하여 자원들을 할당하는 단계; 및상기 할당된 자원들에 기반하여 가상환경을 구성하는 단계;를 포함하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서,상기 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사용 대역폭의 비율에 상응하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서,상기 워커 서버를 선정하는 단계는입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기반하여 상기 서비스를 실행할 워커 서버를 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 1에 있어서,상기 워커 서버를 선정하는 단계는상기 서비스의 실행에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서,상기 자원들을 할당하는 단계는상기 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하는 단계;상기 선정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하는 단계; 및기선정된 사용 자원과의 연결 정보에 기반하여 추가 사용 자원을 선정하는 단계;를 포함하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "에 있어서,상기 사용 자원을 추가로 선정하는 단계는상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 나머지 자원 중 기설정된 조건에 상응하는 자원을 추가 사용 자원으로 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 7에 있어서,상기 사용 자원을 추가로 선정하는 단계는상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 나머지 자원 중 직전에 선정된자원과 가장 먼 거리에 있는 자원을 추가 사용 자원으로 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 7에 있어서,상기 기설정된 연결 관계는 제1 연결 관계보다 높은 대역폭을 지원하는 제2 연결 관계에 상응하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 방법."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "지능형 엣지 서비스 요청을 수신하고, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 전역스케줄러; 및 워커 서버들의 입출력 혼잡도 및 가용 자원 정보를 관리하는 전역 자원 관리부;를 포함하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 10에 있어서,상기 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사용 대역폭의 비율에 상응하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "청구항 11에 있어서,상기 전역 스케줄러는입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기반하여 상기 서비스를 실행할 워커 서버를 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 10에 있어서,상기 전역 스케줄러는상기 서비스의 실행에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "입출력 장치의 혼잡도를 모니터링하는 혼잡도 관리부;공개특허 10-2023-0069815-4-마스터 서버의 지능형 엣지 서비스 요청을 수신하고, 가상환경 설정 정보를 구성하는 지역 스케줄러; 및토폴로지 정보에 기반하여 자원들을 할당하는 토폴로지 관리부;를 포함하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 14에 있어서,상기 토폴로지 관리부는요청된 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하고, 상기 선정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하고, 기선정된 사용 자원과의 연결 정보에 기반하여 추가 사용 자원을 선정하는 것을특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 15에 있어서,상기 토폴로지 관리부는상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하면 상기 기설정된 연결 관계를 갖는 자원을 추가 사용 자원으로 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 16에 있어서,상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 나머지 자원 중 기설정된 조건에 상응하는 자원을 추가 사용 자원으로 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원 할당 장치."}
{"patent_id": "10-2022-0132462", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "청구항 17에 있어서,상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 나머지 자원 중 직전에 선정된자원과 가장 먼 거리에 있는 자원을 추가 사용 자원으로 선정하는 것을 특징으로 하는 엣지 컴퓨팅 환경의 자원할당 장치."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 방법은 지능형 엣지 서비스 요청을 수신하는 단계, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 단계, 상기 워커 서버의 토폴로지 정보에 기반 하여 자원들을 할당하는 단계, 및 상기 할당된 자원들에 기반하여 가상환경을 구성하는 단계를 포함한다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 기술에 엣지 컴퓨팅 환경에서 지능형 엣지 서비스의 고속 실행을 제공하기 위한 방법에 관한 기술이 다. 구체적으로, 본 발명은 지능형 엣지 서비스의 자원을 할당하여 서비스 실행 성능을 높이는 기술에 관한 것이다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근, 4차 산업혁명에 따른 사물 인터넷 기기가 기하급수적으로 증가하면서 2025년까지 410억 개 이상의 IoT(Internet of Things) 장치가 인터넷에 연결되고, 2025년에는 전 세계의 데이터 총량이 현재보다 5배 정도 늘어난 174 ZB에 달할 것으로 추정된다. 현재, 기존의 중앙 집중형 클라우드 컴퓨팅은 기기(device)-서버(computing server) 간 먼 거리에 따른 긴 지연 시간(high end-to-end latency), 데이터 폭증에 따른 네트워크 대역폭의 한계, 그리고 개인 정보 노출 등의 문제를 해결하기 위하여 엣지 컴퓨팅을 도입하고 있다. 엣지 컴퓨팅은 모바일 장치나 센서에 가장 근접한 인터넷 엣지에서 데이터를 저장하고 처리하는 새로운 컴퓨팅 패러다임이다. 엣지 컴퓨팅은 DNN(Deep Neural Network)을 포함한 인공지능 모듈을 가지는 지능형 서비스를 제공하고자 많은 연구와 노력이 진행 중에 있다. 인공지능 모듈을 기반으로 음성, 얼굴, 동작, 상황(context) 인식은 가상 현실 (virtual reality)/증강 현실(augmented reality)과 같은 지능형 엣지 서비스의 사용자 몰입감을 증대할 수 있 고, 사용자별 맞춤형 서비스를 제공할 수 있다는 이점을 가진다. 지능형 엣지 서비스는 데이터의 폭증과 서비스의 업데이트에 유연하게 대응하기 위하여 가상 머신(virtual Machine)이나 컨테이너(container)와 같은 가상화 기술을 바탕으로 제공되고 있다. 한편, 빠른 지능형 엣지 서 비스를 제공하기 위하여, 대부분의 컴퓨팅 서버들이 NUMA(Non-Uniform Memory Access) 구조를 가지는 것을 고려 하여 자원을 할당한다. 최근, GPU의 경우 NVLink와 같은 높은 대역폭을 지원하는 기술이 도입되면서, 지능형 엣지 서비스의 처리 성능 을 보장하기 위한 특화된 자원 할당 방법에 대한 필요성이 절실히 대두된다. 선행기술문헌 특허문헌 (특허문헌 0001) 국내 공개특허공보 제10-2021-0056655호(발명의 명칭: 클라우드 엣지 환경에서 예측 기반 마이 그레이션 후보 및 대상 선정 방법)"}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 목적은 가상환경에서 컴퓨팅 집중형, 입출력 집중형 특징을 갖는 지능형 엣지 서비스의 자원을 최적 할당하여 서비스 실행 성능을 높이는 것이다. 또한, 본 발명의 목적은 데이터 혼잡도를 바탕으로 입력 자원을 할당하여 높은 대역폭을 가지는 입력데이터를 사용하는 서비스의 성능을 보장하는 것이다. 또한, 본 발명의 목적은 자원 간 토폴로지 정보를 바탕으로 자원을 할당하여 높은 대역폭을 보장하는 것이다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기한 목적을 달성하기 위한 본 발명의 일 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 방법은 지능형 엣지 서비스 요청을 수신하는 단계, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 단계, 상기 워 커 서버의 토폴로지 정보에 기반하여 자원들을 할당하는 단계, 및 상기 할당된 자원들에 기반하여 가상환경을 구성하는 단계를 포함한다. 이때, 상기 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사 용 대역폭의 비율에 상응할 수 있다. 이때, 상기 워커 서버를 선정하는 단계는 입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기반하여 상기 서비스를 실행할 워커 서버를 선정할 수 있다. 이때, 상기 워커 서버를 선정하는 단계는 상기 서비스의 실행에 필요한 가용 자원 및 기설정된 혼잡도 조건을 만족하는 워커 서버들을 포함하는 리스트를 수신하는 단계, 및 상기 리스트에서 기설정된 조건에 상응하는 입출 력 혼잡도를 갖는 워커 서버를 선정하는 단계를 포함할 수 있다. 이때, 상기 기설정된 조건에 상응하는 입출력 혼잡도를 갖는 워커 서버를 선정하는 단계는 상기 서비스의 실행 에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정할 수 있다. 이때, 상기 자원들을 할당하는 단계는 상기 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하는 단계, 상 기 선정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하는 단계, 및 기선정된 사용 자원과의 연결 정보에 기반하여 사용 자원을 추가로 선정하는 단계를 포함할 수 있다.이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하면 상기 기설정된 연결 관계를 갖는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 기설정된 조건에 상응하는 자 원을 사용 자원으로 선정할 수 있다. 이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 직전에 선정된 자원과 가장 먼 거리에 있는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 기설정된 연결 관계는 제1 연결 관계보다 높은 대역폭을 지원하는 제2 연결 관계에 상응할 수 있다. 또한, 상기한 목적을 달성하기 위한 본 발명의 일 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치는 지능형 엣지 서비스 요청을 수신하고, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 전역 스케줄러, 및 워커 서버들의 입출력 혼잡도 및 가용 자원 정보를 관리하는 전역 자원 관리부를 포함한다. 이때, 상기 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사 용 대역폭의 비율에 상응할 수 있다. 이때, 상기 전역 스케줄러는 입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기반하여 상기 서비스 를 실행할 워커 서버를 선정할 수 있다. 이때, 상기 전역 자원 관리부는 상기 서비스의 실행에 필요한 가용 자원 및 기설정된 혼잡도 조건을 만족하는 워커 서버들을 포함하는 리스트를 생성하고, 상기 전역 스케줄러는 상기 리스트에서 기설정된 조건에 상응하는 입출력 혼잡도를 갖는 워커 서버를 선정할 수 있다. 이때, 상기 전역 스케줄러는 상기 서비스의 실행에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정 할 수 있다. 또한, 상기한 목적을 달성하기 위한 본 발명의 다른 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치는 입출 력 장치의 혼잡도를 모니터링하는 혼잡도 관리부, 마스터 서버의 지능형 엣지 서비스 요청을 수신하고, 가상환 경 설정 정보를 구성하는 지역 스케줄러, 및 토폴로지 정보에 기반하여 자원들을 할당하는 토폴로지 관리부를 포함한다. 이때, 상기 토폴로지 관리부는 요청된 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하고, 상기 선정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하고, 기선정된 사용 자원과의 연결 정보에 기반하여 사 용 자원을 추가로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하면 상기 기 설정된 연결 관계를 갖는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 기설정된 조건에 상응하는 자원을 사용 자원으 로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 직전에 선정된 자원과 가장 먼 거리에 있는 자 원을 사용 자원으로 선정할 수 있다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 가상환경에서 컴퓨팅 집중형, 입출력 집중형 특징을 갖는 지능형 엣지 서비스의 자원을 최적 할당하여 서비스 실행 성능을 높일 수 있다. 또한, 본 발명은 데이터 혼잡도를 바탕으로 입력 자원을 할당하여 높은 대역폭을 가지는 입력데이터를 사용하는 서비스의 성능을 보장할 수 있다. 또한, 본 발명은 자원 간 토폴로지 정보를 바탕으로 자원을 할당하여 높은 대역폭을 보장할 수 있다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 비록 \"제1\" 또는 \"제2\" 등이 다양한 구성요소를 서술하기 위해서 사용되나, 이러한 구성요소는 상기와 같은 용 어에 의해 제한되지 않는다. 상기와 같은 용어는 단지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사 용될 수 있다. 따라서, 이하에서 언급되는 제1 구성요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있다. 본 명세서에서 사용된 용어는 실시예를 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세 서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 또는 \"포함하는(comprising)\"은 언급된 구성요소 또는 단계가 하나 이상의 다른 구성요소 또는 단 계의 존재 또는 추가를 배제하지 않는다는 의미를 내포한다."}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어는 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 해석될 수 있다. 또한, 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예들을 상세히 설명하기로 하며, 도면을 참조하여 설명할 때 동일 하거나 대응하는 구성 요소는 동일한 도면 부호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 이하, 본 명세서에서 엣지 서버를 예시로 실시예에 따른 자원 할당 방법을 설명할 수 있으나, 본 발명의 범위가 이에 한정되는 것은 아니며 실시예에 따른 방법은 다양한 분산 클라우드 환경에서 동일하게 적용될 수 있다. 또한, 본 발명의 실시예에 따라 할당되는 자원은 CPU, NIC, HDD, SSD 등을 포함한다. 그리고, GPU(Graphics Processing Unit), TPU(Tensor Processing Unit), NPU(Neural Processing Unit), 및 다른 하드웨어 가속기를모두 포함하는 개념일 수 있으며, 할당되는 자원의 종류에 따라 본 발명의 범위가 한정되는 것은 아니다. 도 1은 하나의 컴퓨팅 서버에서 자원을 할당한 것을 예시적으로 나타내는 도면이다. 도 1을 참조하면, 자원 요구사항 {CPU: 2, Memory: 20GB, GPU: 2}을 바탕으로 지능형 엣지 서비스 고속 실행을 제공하기 위한 NUMA(Non-Uniform Memory Access) 구조 기반 서버의 자원 할당 방법을 볼 수 있다. 도 1에서는 NUMA 구조 기반 서버를 예시로 실시예에 따른 자원 할당 방법을 설명하나, 본 발명의 범위가 이에 한정되는 것은 아니며 NUMA, CC_NUMA 등 거리 측정이 가능한 자원 연결 토폴로지에서 동일하게 적용될 수 있다. 도 1에서 보이는 것과 같이 동일한 NUMA node #0에 속한 자원들을 할당하여, 데이터 전송 패스(path)와 데이터 의 복사 횟수를 줄여 서비스의 성능을 향상시킬 수 있다. 대표적인 예로, 컨테이너 가상화 기술을 바탕으로 서비스(application)를 실행하는 쿠버네티스(Kubernetes)는 토폴로지 매니저(Topology Manager)가 활성화(enable)되면, 4가지 정책 'none', 'best-effort', 'restricted', 'single-numa-node' 중에 하나를 선택하여 자원을 할당한다. 특히, 서비스의 고속 실행을 위해서는 'single- numa-node' 정책 선택을 권장하고 있다. 'None' 정책은 기본 정책으로 토폴로지 매니저 비활성 상태와 동일하며, 자원들을 정렬(배열)하는 것을 시도하 지 않는다. 'Best-effort' 정책은 토폴로지 매니저가 NUMA 노드에 최대한 자원을 할당하려 시도하나, 그렇지 못한 경우에도 포드(Pod)는 실행된다. 'Restricted' 정책은 'Best-effort' 정책으로 할당된 자원들을 제대로 정렬할 수 없는 경우 포드 승인에 실패한 다. 단일 NUMA 노드에서 할당할 수 없는 경우, 여러 NUMA에 일부가 할당될 수 있다. 'Single-numa-node' 정책은 모든 CPU와 장치가 정확히 하나의 NUMA 노드에서 할당되는 경우에만 포드를 실행한 다. 기존의 자원 할당 방법은 NUMA 구조에 기반한 이종의 자원들이, 가장 짧은 거리를 가지도록 자원을 할당함으로 써 데이터 전송 시간을 줄여 서비스의 실행 성능을 높인다. 그러나, 네트워크, 스토리지, 가속기들 간에 데이터 전송을 담당하는 공유 자원 PCIe의 경우 NUMA effect는 큰 사이즈의 데이터 처리가 여러 자원 간의 전송을 바탕으로 이뤄지는 경우 데이터 처리 성능에 영향을 못 미치지 는 것으로 알려져 있다. 한편, GPU의 경우 NVLink와 같은 높은 대역폭을 지원하는 기술이 소개되면서, 자원 할 당에 있어 자원들 간의 다른 종류의 데이터 전송 버스 연결에 대한 고려도 필요하다. 특히, 지능형 엣지 서비스는 CCTV와 같은 큰 사이즈의 동영상(video) 데이터가 네트워크를 바탕으로 전송되고, GPU 기반으로 다양한 인공지능 모듈을 사용한 추론이 수행되며 GPU 간에는 이종 타입의 연결을 가진다. 데이터 처리에서 PCIe와 같은 공유 자원의 높은 대역폭을 사용하는 지능형 엣지 서비스를 처리 성능을 보장하기 위한 특화된 자원 할당 방법이 필요하다. 지능형 엣지 서비스는 모바일 장치 혹은 다양한 센서로부터 네트워크를 통해 데이터를 입력 받아, DNN 과 같은 인공지능 모듈들을 바탕으로 데이터를 분석하여 추론(Inferencing) 결과를 반환하거나, 추론 결과를 응용을 통 해 제공한다. 이때, 다수개의 다른 종류의 인공지능 모듈은 파이프라인(pipeline) 형태로 실행되며, 각 인공지능 모듈 기반 분석을 위해서 데이터는 CPU를 바탕으로 전처리와 후처리 과정이 필요할 수 있다. 한편, 동일한 인공지능 모듈 이 다수의 GPU에 올려져 병렬 실행도 가능하다. 도 2는 본 발명의 일실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 방법을 나타낸 흐름도이다. 도 2를 참조하면, 엣지 컴퓨팅 환경의 자원 할당 장치(마스터 서버, 워커 서버)에서 수행되는 엣지 컴퓨팅 환경 의 자원 할당 방법은 사용자의 지능형 엣지 서비스 요청을 수신한다(S110). 다음으로, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정한다(S120). 이때, 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사용 대 역폭의 비율에 상응할 수 있다. 컴퓨팅 서버 x의 입출력 혼잡도 cx는 서버에 장착된 입출력 장치(네트워크, 저장소 등)의 혼잡도를 바탕으로 계 산할 수 있다. 예를 들어, 혼잡도 cx는 하기 [수학식 1]과 같이 계산할 수 있다. [수학식 1]"}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이때, Dk,m은 입출력 장치 k의 최대 대역폭을 나타내며, Dk,a는 입출력 장치 k의 ti동안의 평균 사용 대역폭을 나 타낸다. 즉, 컴퓨팅 서버 입출력 혼잡도 cx는 n개의 입출력 장치의 혼잡도에 대한 평균값에 상응할 수 있다. 평 균 사용 대역폭 Dk,a는 [수학식 2]와 같이 계산할 수 있다. [수학식 2]"}
{"patent_id": "10-2022-0132462", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "이때, S는 타입 스텝(time step)의 집합이며, 한 타임 스텝 i는 연속적인 시간 이벤트 Ti, Ti+1 사이의 시간 주 기로 정의한다. 이때, 상기 워커 서버를 선정하는 단계(S120)는 입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기 반하여 상기 서비스를 실행할 워커 서버를 선정할 수 있다. 즉, 네트워크 혼잡도, 저장소 혼잡도 등 보다 세분화된 혼잡도를 이용하여 적합한 워커 서버를 선정할 수 있다. 이때, 상기 워커 서버를 선정하는 단계(S120)는 상기 서비스의 실행에 필요한 가용 자원 및 기설정된 혼잡도 조 건을 만족하는 워커 서버들을 포함하는 리스트를 수신하는 단계, 및 상기 리스트에서 기설정된 조건에 상응하는 입출력 혼잡도를 갖는 워커 서버를 선정하는 단계를 포함할 수 있다. 이때, 상기 기설정된 조건에 상응하는 입출력 혼잡도를 갖는 워커 서버를 선정하는 단계는 기 서비스의 실행에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정하는 것에 상응할 수 있다. 다음으로, 상기 워커 서버의 토폴로지 정보에 기반하여 자원들을 할당한다(S130). 이때, 상기 자원들을 할당하는 단계(S130)는 상기 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하는 단 계, 상기 선정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하는 단계, 및 기선정된 사용 자원과의 연결 정보에 기반하여 사용 자원을 추가로 선정하는 단계를 포함할 수 있다. 이때, 상기 기선정된 사용 자원과의 연결 정보에 기반하여 사용 자원을 추가로 선정하는 단계는 요청된 자원의 개수와 선정된 사용 자원의 개수가 동일할 때까지 반복할 수 있다. 이때, 상기 입력 자원을 선정하는 단계는 입력 자원 후보가 2개 미만이면 입력 자원 후보를 입력 자원으로 선정 할 수 있다. 이때, 상기 입력 자원을 선정하는 단계는 입력 자원 후보가 2개 이상이면 낮은 대역폭 사용률을 갖는 입력 자원 을 선정할 수 있다. 이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하면 상기 기설정된 연결 관계를 갖는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 기설정된 조건에 상응하는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 사용 자원을 추가로 선정하는 단계는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 직전에 선정된 자원과 가장 먼 거리에 있는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 기설정된 연결 관계는 제1 연결 관계보다 높은 대역폭을 지원하는 제2 연결 관계에 상응할 수 있다. 이때, 상기 제1 연결 관계는 PCIe에 상응하고, 상기 제2 연결 관계는 NVLink에 상응할 수 있으나, 본 발명의 범 위가 이에 한정되는 것은 아니며 상기 연결 관계는 다양하게 구성될 수 있다. 본 발명에 따른 자원 할당 방법은 컴퓨팅 서버에 장착된 여러 장치들(저장소, 네트워크, 가속기)의 토폴로지에 기반한 거리 정보와 입출력 혼잡도를 활용한다. 이하, 토폴로지에 기반한 거리 정보와 입출력 혼잡도에 대해 상세히 설명한다. 컴퓨팅 서버에 장착된 장치는 보통 PCIe를 통해서 연결되며, GPU의 경우에는 PCIe 뿐만 아니라 NVLink로도 연결 될 수 있다. 컴퓨팅 서버 장치들의 토폴로지는 HDD, SSD 등의 저장소, GPU와 같은 가속기, 네트워크 카든 벤더 등 가상화 기 술 적용 시에 필요한 장치의 세부 타입 정보를 함께 포함할 수 있다. 장치 간 연결 정보는 아래와 같이 정의할 수 있다. - NV: 여러 NVLink로 연결 - PIX: 최대 1개의 PCIe bridge 연결 - PXB: Host bridge 연결 없이, 여러 PCIe bridge를 거쳐 연결 - PHB: 하나의 PCIe Host Bridge와 PCIe bridge를 거쳐 연결 - NODE: 하나의 NUMA node 안에서 여러 host bridges 간의 interconnect와 PCIe를 거쳐 연결 - SYS: NUMA nodes (Inter-socket) 사이의 interconnect (QPI, HT)를 거쳐 연결 해당 장치 간 연결 정보를 바탕으로 거리는 NV, PCIe, PCIe bridge, Host bridge, 소켓 interconnect(QPI혹은 HT 사이)를 홉(hop)으로 하여 계산한다. 한 예로, 도 1의 컴퓨팅 서버의 자원 토폴로지에 기반한 거리 정보를 나타내면 아래 [표 1]과 같다. 표 1 NICGPU0 (Dist)GPU1 (Dist)GPU2 (Dist)SSD (Dist)GPU3 (Dist)GPU4 (Dist)GPU5 (Dist)CPU Affinity NUMA Affinity NICXPIX NODE NODE SYS SYS SYS SYS 0,2,4,6, 8,10,12,14 0 GPU0PIX XPXB PXB SYS SYS SYS SYS 0,2,4,6, 8,10,12,14 0 GPU1PXB PXB XPIX SYS SYS SYS SYS 0,2,4,6, 8,10,12,14 0 GPU2PXB PXB PIX XSYS SYS SYS SYS 0,2,4,6, 8,10,12,14 0 SSDSYS SYS SYS SYS XPIX PXB PXB 1,3,5,7,9,11,13,15 1 GPU3SYS SYS SYS SYS PIX XPXB PXB 1,3,5,7,9,11,13,15 1 GPU4SYS SYS SYS SYS PXB PXB XPIX 1,3,5,7,9,11,13,15 1 GPU4SYS SYS SYS SYS PXB PXB PIX X1,3,5,7,9,11,13,15 1컴퓨팅 서버 x의 입출력 혼잡도 cx는 서버에 장착된 입출력 장치(네트워크, 저장소)의 혼잡도를 바탕으로 계산한 다. , 여기서 S는 타임 스텝(time step)의 집합이라고 한다. 한 타임 스텝 i는 연속 적인 시간 이벤트 Ti, Ti+1 사이의 시간 주기라 정의할 수 있다. 즉, ti = Ti+1 - Ti이다. 입출력 장치 k의 혼잡도는 최대 대역폭(Dk,m)과 대비하여 ti 동안 평균 사용 대역폭(Dk,a)의 비율로 정의한다. 따 라서, 컴퓨팅 서버 입출력 혼잡도 cx는 n개의 입출력 장치의 혼잡도에 대한 평균값이라 할 수 있다. 이를 상기 [수학식 1] 및 [수학식 2]와 같이 나타낼 수 있다. 컴퓨팅 서버 x의 입출력 혼잡도는 네트워크 혼잡도, 저장소 혼잡도로 좀 더 세분화된 혼잡도를 더 포함할 수 있 다. 이는 상기 혼잡도 계산과 같은 방식으로 산출할 수 있다. 도 3은 본 발명의 일실시예에 따른 방법에서 지능형 엣지 서비스의 자원 요구사항을 예시적으로 나타낸 도면이 다. 가상환경을 바탕으로 서비스를 실행하기 위해서는 환경변수, 인증 등 많은 정보를 필요로 하나 도 3에서는 자원 할당 방법의 설명에 집중하기 위하여 생략하였다. 지능형 엣지 서비스의 자원 요구사항에는 추론 대상 데이터의 입력 장치(inputDev)를 명시하도록 한다. 입력 장 치는 가상환경 설정에 사용된 장치의 이름(name)을 사용하도록 하며, 일반적으로 네트워크는 자원 요청을 하지 않아도 1개의 네트워크 카드가 존재함을 가정하여 NIC로 표현한다. 한편, NFS와 같이 네트워크를 통한 스토리지 에 접근하는 경우에도 NIC로 표현한다. 도 4는 지능형 엣지 서비스의 자원 할당을 위한 시스템을 나타낸 블록도이다. 도 4를 참조하면, 마스터 서버는 전역 스케줄러(Global Scheduler, 110)와 전역 자원 관리자(Global Resource Manager, 120) 모듈을 포함한다. 전역 자원 관리자는 각 워커 서버의 할당 자원 정보와 가용 자원 정보, 입출력 혼잡도 정보를 관리한다. 전역 스케줄러는 자원 요구사항을 바탕으로 지능형 엣지 서비스의 실행을 요청받아 처리한다. 이때, 전역 스케줄러는 전역 자원 관리자로부터 워커 별 가용 자원과 입출력 혼잡도 정보를 바탕으로 실행할 워커 서버를 선정하고, 해당 워커 서버의 지역 스케줄러에게 지능형 엣지 서비스의 실행을 요청한 다. 전역 스케줄러는 지역 스케줄러로부터 지능형 엣지 서비스의 실행이 성공하였을 경우 전역 자원 관리자를 통해 해당 워커 서버의 가용 자원 정보를 변경한다. 워커 서버(200-1, …, 200-N)의 혼잡 모니터(Congestion Monitor, 230)는 앞에서 설명한 입출력 혼잡도, 네트 워크 혼잡도, 저장소 혼잡도를 모니터링하여 주기적으로 전역 자원 관리자에게 전송한다. 토폴로지 관리자는 워커 서버의 장치 토폴로지 정보를 바탕으로, 할당된 자원(allocated resources)과 가 용 자원(available resources)을 관리한다. 지역 스케줄러로부터 자원 요구사항을 받은 토폴로지 관리자 는 혼잡도, 거리, GPU 연결 특징 등을 바탕으로 가용 자원을 선정하여 반환한다. 지역 스케줄러는 전역 스케줄러부터 지능형 엣지 서비스의 실행 요청을 받아 처리한다. 먼저 지역 스 케줄러는 토폴로지 관리자로부터 할당 가능한 자원 후보를 받아, 가상환경 설정 정보를 구성하여 런 타임에 요청하고, 결과를 전역 스케줄러에 전송한다. 런타임(Runtime, 240)은 지역 스케줄러로부터 받은 가상환경 정보를 바탕으로 가상환경을 구성하고 지능형 엣지 서비스를 구동한다. 또한, 워커 서버(200-1, …, 200-N)는 자원으로 CPU, 메모리, 네트워크 인터페이스 컨트롤러, 디스크, 가속기 등을 포함할 수 있다. 도 5는 마스터 서버에서 수행되는 자원 할당 방법을 나타낸 흐름도이다. 마스터 서버의 전역 스케줄러는 자원 요구사항을 포함하여, 가상환경에서 응용을 실행하기 위해 필요한 정보를 입력 받아 지능형 엣지 서비스의 실행 요청을 받는다(S210). 전역 스케줄러는 전역 자원 관리자에게 지능형 엣지 서비스 실행에 요구되는 가용 자원을 가지고 있는 워커 서 버들로 구성된 제1 후보 리스트를 요청한다(S220). 이때, 제1 후보 리스트는 가용한 요청 자원과 입출력 혼잡도가 가장 낮은 워커 서버들로 구성된다. 이때, 입출력 혼잡도 정보에는 워커 서버 전체의 입출력 혼잡도뿐 아니라 네트워크 혼잡도 정보, 저장소 혼잡도 정보를 포함할 수 있다. 전역 스케줄러는 제1 후보 리스트에서 입출력 혼잡도가 가장 낮은 워커 서버를 선정한다(S230). 만약 제1 후보 리스트에 1개 이상의 워커 서버가 존재하는 경우에는 자원 요구사항에서 데이터 입력 장치가 무엇인지 확인하여, 관련 장치의 혼잡도가 가장 낮은 워커 서버를 선택한다. 예를 들어, 서비스 데이터의 입력 장치가 저장소인 경우에는 저장소 혼잡도가 가장 낮은 서버를 선정한다. 전역 스케줄러는 선정된 워커 서버에 지능형 엣지 서비스 실행을 요청한다(S240). 도 6은 워커 서버에서 수행되는 자원 할당 방법을 나타낸 흐름도이다. 도 6을 참조하면, 지역 스케줄러는 전역 스케줄러로부터 지능형 엣지 서비스 실행 요청을 받는다(S310). 이때, 지역 스케줄러는 토폴로지 관리자에게 자원 요구사항에 맞는 가용 자원 정보를 요청한다. 토폴로지 관리자는 가용 자원을 대상으로 자원 간 거리와 연결 특징, 그리고 혼잡도를 고려하여 자원들을 선정 한다(S320). 지역 스케줄러는 토폴로지 관리자로부터 받은 가용 자원을 바탕으로 가상환경 설정 정보를 구성하고, 런타임에 서비스 실행을 요청한다(S330). 런타임은 설정 정보를 바탕으로 가상환경을 구성하고, 지능형 엣지 서비스를 실행한다(S340). 지역 스케줄러는 가상환경이 생성되어 동작(running) 상태임이 확인되거나, 런타임으로부터 실행 성공의 메시지 를 받으면 토폴로지 관리자와 전역 스케줄러에게 지능형 엣지 서비스가 성공적으로 실행되었음을 알린다(S350). 그렇지 못한 경우에는 전역 스케줄러에게 실행 실패를 알린다. 마지막으로, 지역 스케줄러로부터 지능형 엣지 서비스 실행 성공 결과를 받은 토폴로지 관리자는 할당 자원과 가용 자원에 대한 정보를 업데이트하고, 전역 스케줄러는 할당된 자원 정보를 전역 자원 관리자를 통해 업데이 트한다(S360). 도 7은 토폴로지 관리자가 요청된 자원을 선정하는 과정을 간략하게 나타낸 흐름도이다. 본 발명에 따른 토폴로지 관리자는 데이터의 입력에서 GPU까지의 데이터 혼잡을 피하고, GPU 간의 연결의 특징 을 반영하여 자원을 할당한다. NVLink는 대역폭과 지연시간이 NUMA 구조를 그대로 반영하는 한편, PCIe의 경우 대역폭 활용률이 높을수록 NUMA 구조에 크게 영향을 받지 않음을 반영한다. 도 7을 참조하면, 토폴로지 관리자는 자원 요구사항에 명시된 입력 자원이 무엇인지 확인하고, 가용 자원을 검 색한다(S410). 다음으로, 자원 요구사항에 기반하여 입력 자원을 선정하고(S420), 자원 요구사항에 기반하여 해당 자원을 선정 한다(S430). 이하, 도 8 및 도 9를 참조하여 단계(S420) 내지 단계(S430)를 상세히 설명한다. 도 8은 입력 자원을 선정하는 단계를 상세히 나타낸 흐름도이다. 도 8을 참조하면, 입력 자원 후보가 2개 이상인지를 판별한다(S510). 입력 자원 후보가 1개이면, 해당 자원을 먼저 선정한다(S530). 판별 결과 입력 자원 후보가 2개 이상이면, 혼잡도 모니터를 통해 입력 자원의 대역폭 사용률을 비교하여 가장 낮은 자원을 선택한다(S520). 도 9는 자원의 한 예로 GPU를 선정하는 단계를 상세히 나타낸 흐름도이다. 도 9를 참조하면, 요청된 GPU의 개수를 확인한다(S602). 요청 GPU 개수가 1개인 경우, 가용 GPU를 검색한다 (S604). 가용 GPU가 1개이면 이를 선정한다(S608). 가용 GPU가 복수개인 경우(S604), 상기 선정한 입력 자원과 거리가 가장 짧은 GPU를 임의 선정한다(S606). 요청된 GPU의 개수를 확인하여 2개 이상인 경우(S602), 상기 선정한 입력 자원과 가장 거리가 짧은 GPU를 선정 한다(S610). 기선정된 GPU들을 대상으로 NVLink로 연결된 가용 GPU를 검색한다(S612). NVLink 로 연결도 가용 GPU가 존재한 다면, 미할당 GPU 개수(요청된 GPU 개수- 선정된 GPU 개수)에 가까운 수만큼의 가용 GPU들을 최대로 선정한다 (S616). 한편, NVLink로 연결된 가용 GPU가 존재하지 않는 경우(S612), PCIe 연결을 통해 데이터의 전송이 이뤄지므로, 바로 직전에 선정된 GPU와 가장 먼 거리의 가용 GPU를 선정한다(S614). 그리고, 요청 개수의 GPU들이 모두 선정되었는지 확인한다(S614). 이는 요청 GPU수와 기선정된 GPU수가 동일한 지 비교하여 이뤄질 수 있다. 비교 결과 동일하다면, 입력 장치와 GPU를 이외의 다른 자원을 NUMA 노드들을 대상으로 되도록 공정하게 할당한 다. 비교 결과 동일하지 않다면, 단계(S612)부터 반복한다. 도 10은 도 3의 자원 요구사항을 갖는 지능형 엣지 서비스의 자원 할당의 예시를 나타낸 도면이다. 도 10을 참조하면, 서버 입출력 혼잡도를 바탕으로 서비스를 실행할 워커로 worker1이 선정된다. 입력 자원으로 네트워크를 선정하였으므로, NIC을 포함하는 NUNA node #0의 GPU 중의 하나인 GPU#0이 선정되고, PCIe로 연결된 GPU 중에서 가장 거리가 먼 GPU #3, GPU #4, GPU #5 중에 임의의 하나가 선정되며, 도 10에서는 GPU #4가 선정 된 모습이다. 그리고, CPU와 Memory는 다중 NUMA 노드에서 특정 NUMA 노드에 치우치지 않게 할당된다. 도 11은 본 발명의 일실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치를 나타낸 블록도이다. 도 11을 참조하면, 본 발명의 일실시예에 따른 장치는 지능형 엣지 서비스 요청을 수신하고, 입출력 혼잡도에 기반하여 서비스를 실행할 워커 서버를 선정하는 전역 스케줄러, 및 워커 서버들의 입출력 혼잡도 및 가용 자원 정보를 관리하는 전역 자원 관리부를 포함한다. 이때, 상기 입출력 혼잡도는 기설정된 시간 동안 상기 워커 서버 내 입출력 장치들의 최대 대역폭 대비 평균 사 용 대역폭의 비율에 상응할 수 있다. 이때, 상기 전역 스케줄러는 입출력 혼잡도, 네트워크 혼잡도, 및 저장소 혼잡도 정보에 기반하여 상기 서 비스를 실행할 워커 서버를 선정할 수 있다. 이때, 상기 전역 자원 관리부는 상기 서비스의 실행에 필요한 가용 자원 및 기설정된 혼잡도 조건을 만족 하는 워커 서버들을 포함하는 리스트를 생성하고, 상기 전역 스케줄러는 상기 리스트에서 기설정된 조건에 상응하는 입출력 혼잡도를 갖는 워커 서버를 선정할 수 있다. 이때, 상기 전역 스케줄러는 상기 서비스의 실행에 상응하는 입력 장치의 혼잡도가 가장 낮은 워커 서버를 선정할 수 있다. 도 12는 본 발명의 다른 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치를 나타낸 블록도이다. 도 12를 참조하면, 본 발명의 다른 실시예에 따른 장치는 입출력 장치의 혼잡도를 모니터링하는 혼잡도 관리부 , 마스터 서버의 지능형 엣지 서비스 요청을 수신하고, 가상환경 설정 정보를 구성하는 지역 스케줄러 , 및 토폴로지 정보에 기반하여 자원들을 할당하는 토폴로지 관리부를 포함한다. 이때, 상기 토폴로지 관리부는 요청된 서비스의 자원 요구사항에 기반하여 입력 자원을 선정하고, 상기 선 정된 입력 자원과의 거리 정보에 기반하여 사용 자원을 선정하고, 기선정된 사용 자원과의 연결 정보에 기반하 여 사용 자원을 추가로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하면 상 기 기설정된 연결 관계를 갖는 자원을 사용 자원으로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않 으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 기설정된 조건에 상응하는 자원을 사용 자 원으로 선정할 수 있다. 이때, 상기 토폴로지 관리부는 상기 기선정된 사용 자원과 기설정된 연결 관계를 갖는 자원이 존재하지 않 으면 상기 기설정된 연결 관계를 갖는 자원을 제외한 나머지 자원 중 직전에 선정된 자원과 가장 먼 거리에 있 는 자원을 사용 자원으로 선정할 수 있다. 도 13은 실시예에 따른 컴퓨터 시스템의 구성을 나타낸 도면이다. 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치는 컴퓨터로 읽을 수 있는 기록매체와 같은 컴퓨터 시스템 에서 구현될 수 있다. 컴퓨터 시스템은 버스를 통하여 서로 통신하는 하나 이상의 프로세서, 메모리, 사용자 인터페이스 입력 장치, 사용자 인터페이스 출력 장치 및 스토리지를 포함할 수 있다. 또한, 컴퓨터 시스템은 네트워크에 연결되는 네트워크 인터페이스를 더 포함할 수 있다. 프로세서 는 중앙 처리 장치 또는 메모리나 스토리지에 저장된 프로그램 또는 프로세싱 인스트럭션들 을 실행하는 반도체 장치일 수 있다. 메모리 및 스토리지는 휘발성 매체, 비휘발성 매체, 분리형 매체, 비분리형 매체, 통신 매체, 또는 정보 전달 매체 중에서 적어도 하나 이상을 포함하는 저장 매체일 수 있 다. 예를 들어, 메모리는 ROM이나 RAM을 포함할 수 있다. 본 발명에서 설명하는 특정 실행들은 실시예들로서, 어떠한 방법으로도 본 발명의 범위를 한정하는 것은 아니다. 명세서의 간결함을 위하여, 종래 전자적인 구성들, 제어시스템들, 소프트웨어, 상기 시스템들의 다른 기능적인 측면들의 기재는 생략될 수 있다. 또한, 도면에 도시된 구성 요소들 간의 선들의 연결 또는 연결 부재 들은 기능적인 연결 및/또는 물리적 또는 회로적 연결들을 예시적으로 나타낸 것으로서, 실제 장치에서는 대체 가능하거나 추가의 다양한 기능적인 연결, 물리적인 연결, 또는 회로 연결들로서 나타내어질 수 있다. 또한, “ 필수적인”, “중요하게” 등과 같이 구체적인 언급이 없다면 본 발명의 적용을 위하여 반드시 필요한 구성 요 소가 아닐 수 있다. 따라서, 본 발명의 사상은 상기 설명된 실시예에 국한되어 정해져서는 아니되며, 후술하는 특허청구범위뿐만 아 니라 이 특허청구범위와 균등한 또는 이로부터 등가적으로 변경된 모든 범위는 본 발명의 사상의 범주에 속한다 고 할 것이다."}
{"patent_id": "10-2022-0132462", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 하나의 컴퓨팅 서버에서 자원을 할당한 것을 예시적으로 나타내는 도면이다. 도 2는 본 발명의 일실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 방법을 나타낸 흐름도이다. 도 3은 본 발명의 일실시예에 따른 방법에서 지능형 엣지 서비스의 자원 요구사항을 예시적으로 나타낸 도면이 다. 도 4는 지능형 엣지 서비스의 자원 할당을 위한 시스템을 나타낸 블록도이다. 도 5는 마스터 서버에서 수행되는 자원 할당 방법을 나타낸 흐름도이다. 도 6은 워커 서버에서 수행되는 자원 할당 방법을 나타낸 흐름도이다. 도 7은 토폴로지 관리자가 요청된 자원을 선정하는 과정을 간략하게 나타낸 흐름도이다. 도 8은 입력 자원을 선정하는 단계를 상세히 나타낸 흐름도이다. 도 9는 GPU를 선정하는 단계를 상세히 나타낸 흐름도이다. 도 10은 도 3의 자원 요구사항을 갖는 지능형 엣지 서비스의 자원 할당의 예시를 나타낸 도면이다. 도 11은 본 발명의 일실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치를 나타낸 블록도이다. 도 12는 본 발명의 다른 실시예에 따른 엣지 컴퓨팅 환경의 자원 할당 장치를 나타낸 블록도이다. 도 13은 실시예에 따른 컴퓨터 시스템의 구성을 나타낸 도면이다."}
