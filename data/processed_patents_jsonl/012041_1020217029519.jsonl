{"patent_id": "10-2021-7029519", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0120111", "출원번호": "10-2021-7029519", "발명의 명칭": "서로 다른 지식 그래프들의 링크 및 처리", "출원인": "인터내셔널 비지네스 머신즈 코포레이션", "발명자": "라비자, 슈테판"}}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제3 지식 그래프가 존재하는 상황에서, 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 컴퓨터-구현 방법에 있어서, 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함하고, 상기 방법은:제1 지식 그래프로부터 노드들의 컨텐츠를 제2 지식 그래프로부터 노드들의 컨텐츠와 비교하는 단계;상기 제1 지식 그래프의 노드- 상기 노드는 제1 노드 ID를 가짐-가 상기 제2 지식 그래프의 관련된 노드-상기관련된 노드는 제2 노드 ID를 가짐-에 대한 컨텐츠 관계를 갖는 것에 응답하여, 제1 엣지를 메타-계층 지식 그래프에 저장하는 단계- 상기 제1 엣지는 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 제1 튜플과, 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 제2 튜플에 의해서 식별됨-; 제3 지식 그래프로부터 노드들의 컨텐츠를 상기 제1 지식 그래프로부터 노드들의 컨텐츠 및 상기 제2 지식 그래프로부터 노드들의 컨텐츠와 비교하는 단계;상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서, 제4 노드 ID를 갖는,제4 노드와 관련된다는 것과, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 상기 제3 지식 그래프에서의 제6 노드에 대해 컨텐츠 관계를 가진다는 것을 결정하는 단계-상기 제6 노드는 상기 제4 노드와 컨텐츠 관계를 가짐-; 상기 결정하는 것에 응답하여, 상기 제3 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 제3 튜플과, 상기제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 제4 튜플에 의해서 식별 가능한 제2 엣지를 상기 메타-계층 지식 그래프에 저장하는 단계; 및상기 메타-계층 지식 그래프의 적어도 모든 노드들 및 엣지들을 저장하는 단계를 포함하는방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제3 지식 그래프는 비어 있는(empty)방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는직접 엣지(a direct edge)인방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "이전의 항들 중 어느 한 항에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠관계는 상기 제3 지식 그래프의 상기 제4 노드와 적어도 하나의 링크하는 노드 사이의 엣지, 및 상기 링크하는노드와 상기 제6 노드 사이의 엣지에 의해 표현되는(represented)방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "이전의 항들 중 어느 한 항에 있어서, 컨텐츠 관계를 갖는, 다른 지식 그래프들의 노드들은, 동일 컨텐츠(identical content)를 포함하는방법.공개특허 10-2021-0120111-3-청구항 6 이전의 항들 중 어느 한 항에 있어서, 컨텐츠 관계를 갖는, 다른 지식 그래프들의 노드들은, 컨텐츠 관계가 퍼지 평등(fuzzy equality)을 사용하여 결정되는 노드들인 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "이전의 항들 중 어느 한 항에 있어서, 컨텐츠 관계를 갖는, 다른 지식 그래프들의 노드들은, 상기 관련된 노드들의 컨텐츠가 동의어들(synonyms)이 되는 노드들인방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "이전의 항들 중 어느 한 항에 있어서, 상기 제1 지식 그래프는 제1 지식 그래프 관리 툴에 의해 관리되고 상기제2 지식 그래프는 제2 지식 그래프 관리 툴에 의해 관리되는방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서, 상기 제2 지식 그래프는 상기 제1 지식 그래프 관리 툴에 의해 판독-전용(read-only) 모드로액세스할 수 있는 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "이전의 항들 중 어느 한 항에 있어서, 상기 방법은 규칙적인 시간 간격들로(in regular time intervals) 실행되는방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "이전의 항들 중 어느 한 항에 있어서, 상기 방법은 상기 제1 지식 그래프, 상기 제2 지식 그래프 및 상기 제3지식 그래프 중 적어도 하나에서 다수의 변경들의 함수인 변경 인덱스에 기초하여 결정된 간격들로 실행되는 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "시스템에 있어서, 상기 시스템은:비교 유닛(comparison unit)-상기 비교 유닛은 제1 지식 그래프로부터 노드들의 컨텐츠를 제2 지식 그래프로부터 노드들의 컨텐츠와 비교하기 위해 구성되고(adapted), 상기 비교 유닛은 제3 지식 그래프로부터 노드들의 컨텐츠를 상기 제1 지식 그래프로부터 노드들의 컨텐츠 및 상기 제2 지식 그래프로부터 노드들의 컨텐츠와 비교하기 위해 구성됨-;스토리지 유닛-상기 스토리지 유닛은, 상기 제1 지식 그래프의 노드-상기 노드는 제1 노드 ID를 가짐-가 상기제2 지식 그래프의 관련된 노드-상기 관련된 노드는 제2 노드 ID를 가짐-에 대해 컨텐츠 관계를 갖는 경우에,상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 제1 튜플과 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 제2 튜플에 의해서 식별되는 제1엣지를 메타-계층 메모리 유닛에 있는 메타-계층 데이터의 메타-계층 지식 그래프에 저장하기 위해 구성됨-;프로세서;상기 프로세서에 통신가능 하게 결합되고, 상기 프로세서에 의해서 실행될 때 상기 프로세서가 방법을 수행하게공개특허 10-2021-0120111-4-하도록 구성된, 프로그램 명령을 저장하는 컴퓨터-판독가능 스토리지 매체를 포함하고, 상기 방법은:제1 메모리 유닛에 있는 제1 데이터 구조의 제1 지식 그래프와 제2 메모리 유닛의 제2 데이터 구조의 제2 지식그래프를, 제3 메모리 유닛에 있는 제3 데이터 구조의 제3 지식 그래프가 존재하는 상황에서, 링크하는 단계-상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함함-;상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서, 제4 노드 ID를 갖는,제4 노드와 관련된다는 것과, 그리고 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5노드가, 상기 제3 지식 그래프에서 제4 노드 및 제6 노드 사이에 컨텐츠 관계가 존재하는 상황에서, 제6 노드 ID를 갖는 제6 노드에대해 컨텐츠 관계를 갖는다는 것을, 결정 및 스토리지 모듈에 의해서, 결정하는 단계; 및 상기 결정하는 것에 응답하여, 제2엣지를, 상기 결정 및 스토리지 모듈에 의해서, 저장 단계- 상기 제2엣지는제3 튜플-상기 제3튜플은 상기 제3 노드 ID와 상기 제1 지식 그래프의 ID를 포함함- 및 제4 튜플-상기 제4 튜플은 상기 제5 노드 ID와 상기 제2 지식 그래프의 ID를 포함함-을 포함함-; 및상기 메타-계층 지식 그래프의 적어도 모든 노드들과 엣지들을, 상기 결정 및 스토리지 모듈에 의해서, 저장하는 단계를 포함하는시스템."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 제3 지식 그래프는 비어 있는시스템."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항 또는 제13항에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는직접 엣지인시스템."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항 내지 제14항의 항들 중 어느 한 항에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드사이의 컨텐츠 관계는 상기 제3 지식 그래프의 상기 제4 노드와 적어도 하나의 링크하는 노드 사이의 엣지 및상기 링크하는 노드와 상기 제6 노드 사이의 엣지에 의해 표현되는시스템."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항 내지 제15항의 항들 중 어느 한 항에 있어서, 컨텐츠 관계를 갖는, 다른 지식 그래프들의 노드들은, 동일 컨텐츠를 포함하는 시스템."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "컴퓨터-구현 방법(CIM)에 있어서, 상기 컴퓨터-구현 방법은:제1 그래프와 제2 그래프를 포함하는 복수의 객체 인식 그래프들을 각각 표현하는 복수의 객체 인식 그래프 데이터 세트들을 수신하는 단계- 상기 복수의 객체 인식 그래프들의 각 객체 인식 그래프는: (i) 이미지(들)에서인식될 수 있는 물리적 객체들의 유형 또는 범주를 각각 표현하는 복수 객체 유형 노드들, 및 (ii) 상기 객체인식 그래프의 객체 유형 노드들을 각각 연결하는 복수의 엣지들을 포함하고, 각각의 엣지는 상기 엣지에 의해서 연결되는 상기 객체 유형 노드들의 쌍 사이의 관계를 표현함-; 상기 제1 그래프의 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기 제2 그래프의 제2객체 유형 노드로서 표현한다고 결정하는 단계; 및상기 제1 그래프의 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기 제2 그래프의 제2공개특허 10-2021-0120111-5-객체 유형 노드로서 표현한다고 결정하는 것에 응답하여, 제1 인터링크를 메타데이터 계층 데이터 세트에 추가하는 단계- 상기 제1 인터링크는 상기 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기제2 그래프의 제2 객체 유형 노드로서 표현한다는 것을 표시함-를 포함하는컴퓨터-구현 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서, 상기 컴퓨터-구현 방법은: 메타 객체 인식 그래프를 표현하는 메타 객체 인식 그래프 데이터 세트를 집합하는 단계(assembling)- 상기 메타 객체 인식 그래프는: (i) 상기 복수의 객체 인식 그래프들의 각 객체 인식 그래프로부터 복수의 객체 유형노드들, (ii) 상기 복수의 객체 인식 그래프들의 각 객체 인식 그래프로부터 복수의 엣지들, 및 (iii) 상기 메타데이터 계층 데이터 세트에 포함된 복수의 인터링크들을 포함하고, 상기 복수의 인터링크들의 각 인터링크는상기 복수의 객체 인식 그래프들의 두 개의 서로 다른 객체 인식 그래프들로부터 한 쌍의 각각 객체 유형 노드들을 각각 연결함-를 더 포함하는컴퓨터-구현 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항 또는 제18항에 있어서, 상기 컴퓨터-구현 방법은: 제1 소셜 미디어 사이트로부터 제1 복수의 이미지들을 수신하는 단계;상기 제1 복수의 이미지들에 포함된 제1 복수의 객체 유형(들) 및/또는 범주(들)를 획득하기 위해 상기 제1 복수의 이미지들 상에서 이미지 인식 수행하는 단계;상기 제1 복수의 객체 유형(들) 및/또는 범주(들)에 기초하여 상기 제1 그래프의 복수의 객체 유형 노드들을 정의하는 단계;제2 소셜 미디어 사이트로부터 제2 복수의 이미지들을 수신하는 단계;상기 제2 복수의 이미지들에 포함된 제2 복수의 객체 유형(들) 및/또는 범주(들)을 획득하기 위해 상기 제2 복수의 이미지들 상에서 이미지 인식 수행하는 단계; 및상기 제2 복수의 객체 유형(들) 및/또는 범주(들)에 기초하여 상기 제2 그래프의 복수의 객체 유형 노드들을 정의하는 단계를 더 포함하는컴퓨터-구현 방법."}
{"patent_id": "10-2021-7029519", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항 내지 제19항의 항들 중 어느 한 항에 있어서,상기 제1 복수의 이미지들은 스틸 이미지들과 비디오 이미지들을 포함하고; 그리고상기 제2 복수의 이미지들은 스틸 이미지들과 비디오 이미지들을 포함하는컴퓨터-구현 방법."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "제3 KG가 존재하는 상황에서 제1 지식 그래프(KG) 및 제2 KG를 링크하기 위한 방법이 제공된다. 상기 제1 KG의 노드들의 컨텐츠는 상기 제2 KG의 노드들과 비교된다. 만일 제1 KG 노드가 관련된 제2 KG 노드에 대해 컨텐츠 관 계를 갖는다면, 상기 제1 KG 및 상기 제1 KG 노드를 식별하는 튜플과 상기 제2 KG 및 상기 제2 KG 노드를 식별하 는 튜플에 의해서 식별되는 엣지는 메타-계층 KG에 저장된다. 상기 방법은 상기 제3 KG로부터 상기 노드들의 컨 텐츠를 상기 제1 및 제2 KG로부터 노드들의 컨텐츠를 비교하는 단계를 포함하고, 관계들이 식별되는 경우에, 상 기 메타-계층에서 이러한 관계를 설정하는 더 복잡한 튜플들이 저장된다. 마지막으로, 상기 방법은 또한 상기 메 타-계층 지식 그래프의 적어도 모든 노드들과 엣지들을 저장하는 단계를 포함한다."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 일반적으로 지식 그래프들을 조합하는 방법과 관련되고, 더 구체적으로는, 제3 지식 그래프가 존재하는 상황에서 제1 지식 그래프 및 제2 지식 그래프를 링크하기 위한 컴퓨터-구현(computer-implemented) 방법과 관련된다. 본 발명은 제1 지식 그래프 및 제2 지식 그래프를 링크하기 위한 관련된 시스템 및 관련된 컴 퓨터 프로그램 제품과 추가로 관련된다."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(AI), 머신러닝(ML), 및 유사한 기술들은 기업 컴퓨팅 환경들에서 높은 수요가 있다. 현재, 대 부분의 기업 애플리케이션들은, 분석 능력들이나 사용자 인터페이스들에서, AI 지원 시스템들에 의해서 향상되 었다. 마찬가지로, 검색엔진들 및 관련된 시스템들도 AI의 분야에서 사용된 기술들에 크게 의존한다. 이들 기술 들 중 하나는 지식 그래프들의 사용(knowledge graphs)이다. 지식 그래프들은 정보를 저장하고 처리하는 데 사 용된다. 하나의 지식 그래프는 사실들(다양한 소스들로부터 수집됨)을 포함하고, 상기 사실들은 버텍스들 (vertices) (또한 \"노드들\"로 알려짐)에 저장되며, 상기 버텍스들은 상기 노드들 사이에서 관계를 저장하는 엣 지들(edges)의 매시(또한 \"링크들\"로 알려짐)를 통해 연결된다."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "전형적인 지식 그래프들은 약 100만 개에서 1억 개 이상의 범위의 버텍스들을 포함할 수 있다. 지식 그 래프들을 저장하고 관리하는 것은 고성능(high-performance) 서버들 및 스토리지 시스템들에 의해서 전형적으로 제공되는, 상당한 양의 스토리지를 필요로 할 수 있다. 학습 단계(phase) 동안과 정상 운영 동안에, 노드들은 일관되게 추가되고 엣지들이 상기 노드들 사이에 서 생성되어서 상기 지식 그래프는 계속적으로 확장된다. 현재, 1차 지식 그래프로 하나 또는 그 이상의 2차 지식 그래프들을 통합하거나 또는 그들을 동등한 파 트너들로서 링크하는 방법은 알려져 있다. 그러나, 병합된 지식 그래프들의 액세스 권한들 및 기타 메타데이터 는 항상 일관되게 관리되지 않거나 또는 완전히 실종되었다(missing). 지식 그래프 관리와 관련한 기술들을 공개하는 여러 문헌들이 있다. 미국 특허 제 9,792,530호는 이미지들을 분류하기위해 지식 베이스가 생성되고 사용되는 방법을 공개한 다. 상기 지식 베이스는 명시된 범주의 다수의 서브 범주들(subcategories)을 포함한다. 단지 범주 이름에만 기 초하여 이미지들을 획득하는 대신, 구조화된 및 비-구조화된(structured and unstructured) 데이터 소스들이 상 기 범주의 서브 범주들을 식별하는 데 사용된다. 미국 특허 출원 공보 2018/0052855는 하나 또는 그 이상의 이미지들의 메타데이터에 기초하여 잠재 관심 사들(latent interests)을 학습하는 기술들을 공개한다. 분석 도구는 지식 그래프에 대해서 각 디지털 멀티미디 어 객체와 관련된 메타데이터를 평가하고, 상기 지식 그래프는 상기 디지털 멀티미디어 객체들에 대한 외부 정 보를 포함하는 데이터로부터 구축되며(built), 상기 지식 그래프는 복수의 속성들을 제공한다."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시 예 따라, 제3 지식 그래프가 존재하는 상황에서, 제1 지식 그래프와 제2 지식 그래프 를 링크하기 위한 컴퓨터-구현 방법이 제공될 수 있다. 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함할 수 있다. 상기 방법은 제1 지식 그래프로부터 노드들의 컨텐츠를 제2 지식 그래프로부터 노드 들의 컨텐츠와 비교하는 단계, 및, 만일 상기 제1 지식 그래프의 노드- 상기 노드는 제1 노드 ID를 가짐-가 상 기 제2 지식 그래프의 관련된 노드-상기 관련된 노드는 제2 노드 ID를 가짐-에 대해 컨텐츠 관계를 갖는다면, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제2 노드 ID 및 상기 제2 지식 그래 프의 ID를 포함하는 튜플에 의해서 식별되는 엣지를 메타-계층 지식 그래프에 저장하는 단계를 포함할 수 있다. 상기 방법은 상기 제3 지식 그래프의 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프의 노드들의 컨텐츠 및 상기 제2 지식 그래프의 노드들의 컨텐츠와 비교하는 단계 더 포함한다. 상기 방법은 상기 제1 지식 그래프 에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서, 제4 노드 ID를 갖는, 제4 노드와 관련된다 는 것과, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 상기 제3 지식 그래프에서 상기 제4노드 및 제6 노드 사이의 컨텐츠 관계가 존재하는 상황에서, 제6 노드 ID를 갖는, 제6 노드에 대해 컨텐츠 관계를 가 진다는 것을 결정하는 것에 따라, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제 5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 제2 엣지를 상기 메타-계층 지 식 그래프에 저장하는 단계를 더 포함한다. 마지막으로, 상기 방법은 또한 상기 메타-계층 지식 그래프의 적어도 모든 노드들 및 엣지들을 저장하는 단계를 포함할 수 있다. 본 발명의 다른 실시 예 따라, 제3 메모리 유닛에 있는 제3 데이터 구조의 제3 지식 그래프가 존재하는 상황에서 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 시스템이 제공될 수 있다. 또한, 여기서, 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함할 수 있다. 상기 시스템은 제1 지식 그래프의 노드들의 컨텐츠를 제2 지식 그래프의 노드들의 컨텐츠와 비교하기 위해 구성되는(adapted) 비교 유닛 (comparison unit)을 포함할 수 있다. 또한, 상기 시스템은 만일 상기 제1 지식 그래프의 노드-상기 노드는 제1 노드 ID를 갖고, 제2 지식 그 래프의 관련된 노드에 대해 컨텐츠 관계를 가지며, 상기 관련된 노드는 제2 노드 ID를 가짐-가 존재한다면,상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID 를 포함하는 제2 튜플에 의해서 식별되는 엣지를 메타-계층 메모리 유닛에 있는 메타-계층 데이터의 메타-계층 지식 그래프에 저장하기 위해 구성된 스토리지 유닛을 포함할 수 있다. 이에 의해서, 상기 비교 유닛은 또한 상기 제3 지식 그래프로부터 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프로부터 노드들의 컨텐츠 및 (b) 상기 제2 지식 그래프로부터 노드들의 컨텐츠를 비교하기 위해 구성될 수 있다. 더 나아가, 상기 시스템은, 상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서 제4 노드 ID 를 갖는, 제4 노드와 관련된다는 것과, 상기 제3 지식 그래프에서 제4 노드 및 제6 노 드 사이에 컨텐츠 관계가 존재하는 상황에서, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 제6 노드 ID를 갖는, 제6 노드에 대해 컨텐츠 관계를 갖는다는 것을, 결정 및 스토리지 모듈에 의해서, 결정함에 따 라, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 상기 메타-계층 지식 그래프에 저장하기 위해 구성 된 결정 및 스토리지 모듈을 포함할 수 있다. 상기 결정 및 스토리지 모듈은 또한 상기 메타-계층 지식 그래프 의 적어도 모든 노드들 및 엣지들을 저장하기 위해 구성될 수 있다. 제1 지식 그래프와 제2 지식 그래프를 링크하기 위해 제안된 컴퓨터-구현 방법은 다수의 장점들과 기술 적 효과들을 제공할 수 있다. 상기 메타-계층 지식 그래프는 상기 제1 지식 그래프 및/또는 상기 제2 지식 그래프의 어느 쪽에도 필수 부분이 되지는 않기 때문에, 상기 제1 지식 그래프 및 상기 제2 지식 그래프는 서로 완전히 독립적으로 남아있 을 수 있다. 상기 두 개의 지식 그래프들 각각은 완전히 자동적으로 관리될 수 있고 다른 주체들(법적 주체들) 에 의해서 소유될 수 있다. 상기 두 개의 지식 그래프들 중 하나의 관점에서 보면, 상기 제2 지식 그래프는 판 독 전용 모드에 있을 수 있다. 따라서, 이 제2 지식 그래프는 상기 제1 지식 그래프 소유자에 의한 추가의 노드 들 또는 엣지들에 대한 변경들의 측면에서 변경될 수 없다. 따라서, 상기 제안된 아이디어에 따라 상기 링크된 지식 그래프의 사용자들은 제2 지식 그래프를 집적적으로 액세스 하는 대신 상기 메타-계층을 주로 액세스 할 수 있다. 상기 메타-계층은 또한 주어진 사용자의 액세스 권리들을 관리하기 위해 구성될 수 있다. 더 나아가, 만일 지식 그래프의 소유자가 자신의 지식 그래프에 액세스함으로써 인에이블된 통찰력들을 판매하고자 한다면, 그 것은 상기 인터링크된 지식 그래프들 통해 여전히 가능할 것이다. 상기 메타-계층은 사 용자가 인에이블되어 있고 수수료가 포함된 지식 그래프의 엔트리 노드들이 보이지 않는 경우에만 수수료를 지 불하는 추가 지식 그래프의 통과를 허용한다. 그러나, 두 개의 지식 그래프들의 사용자는 타인의 지식 그래프에 액세스함으로써 이익을 얻을 수 있다. 따라서, 노드들에서 더 많은 관계들와 더 많은 사실들 및 컨텐츠가 더 많은 사용자에게 보여 질 수 있고 액세스 가능하게 될 수 있다. 더 간단한 경우들에서, 메타-계층에 있는 노드들에 대해 상기 링크의 노드 ID들에 대한 상기 지식 그래 프들의 식별자들을 추가하는 것만 요구될 수 있다. 또한, 제3 지식 그래프에서 이용 가능한 정보를 반영하는 복 잡한 간접 관계들이 원래의 제1 지식 그래프와 제2 지식 그래프를 독립적으로 유지하면서 해결될 수 있다. 추가 및 상위-레벨의 관계들을 표현하는 정보에 대한 소스로서 모든 종류의 정보 소스가 사용될 수 있고, 이는: 제3 지식 그래프, 사전, 자료실, 관련 용어의 단순 목록 등을 포함할 수 있다. 기본적으로, 컨텐츠 항목들 간의 관 계들을 보여주는 모든 정보 소스가 제1 및 제2 지식 그래프를 연결하는 촉매 도구로 사용될 수 있다. 또한, 이 정보의 제3 소스가 메타 계층이나 또는 제1 및 제2 지식 그래프 중 어느 하나의 필수적인 직접 컴포넌트가 되지 않을 수 있다는 점을 유의해야 할 것이다. 따라서, 제3자의 지식과 관계 소스들은 완전히 변경없이 남아있을 수 있다. 동일 상황이 원래 제1 및 제2 지식 그래프에도 적용될 수 있습니다. 제1 지식 그래프와 제2 지식 그래프 사이의 완전한 인터링크하는 정보는 메타-계층에서 유지될 수 있다. 상기 인터링크하는 방법을 정기적 또는 동적인 일정에 따라 수행하도록 선택함으로써, 그러한 주체들의 사용자들은 항상 제1 및 제2 지식 그래프에 걸쳐 최신 상호- 참조 정보에 접근할 수 있도록 할 수 있다. 그래프 연산들을 수행하는 데 필요한 계산 노력을 최소화하기 위해 제안된 개념들도 또한 개발되었다. 실제로, 지식 그래프들을 하나의 매크로 실체로 병합하는 대신 지식 그래프를 분리된 상태로 놓아둠으로써, 지 식 그래프의 검색(traversal)을 수행하는 데 필요한 연산들 수가 감소된다. 예를 들어, 노드들의 수가 각각 N1, N2, N3인 세 개의 지식 그래프들이 있다고 가정한다. 만일 이들그래프들이 하나로 병합된다면, 작업되는 노드들 의 수는 N = N1 + N2 + N3 - N Ninterlinks 된다. 잘 알려진 바와 같이, 그래프 검색은 순서 O(N)을 가지며, 여기 서 N은 그래프의 노드들의 수이므로, 병합된 그래프에서 모든 검색 연산은 O(N1 + N2 + N3 - Ninterlinks)가 된다. 여기서 제안된 인터링크하는 엣지들(즉, 인터링크들)을 사용하는 접근 방식으로, 대부분의 지식 협력이 적어도 하나의 지식 그래프의 검색을 피할 수 있다. 이에 의해서, 다음이 가정될 수 있다: (i) 시작하는 지식 그래프 1의 검색에서 지식 그래프 2와 인터링크하는 것이 발견될 것이다; 상기 인터링크하는 것을 통해 지식 그 래프 2에서 대응 노드에 도달할 수 있다; 지식 그래프 2를 검색함으로써 검색 결과에 도달할 수 있다. 따라서, 이들 연산들의 순서는 O(N1 + Ninterlinks + N2)가 된다. 이에 의해서, N3 >> Ninterlinks 가 되고, 이 에 의해서 계산 노력이 크게 감소될 수 있다. 더 많은 지식 그래프들이 상호 연결될수록, 이 접근방식은 계산적 으로 더 유리하다는 것에 주목해야 할 수도 있다. 왜냐하면 고전적 접근방식에서는 모든 노드들에 대해서 검색 됨에 반해서 이 접근 방식에서는 관련된 지식 그래프들만 검색하면 되기 때문이다. 다음에서, 방법 및 시스템 모두에 대해 적용할 수 있는 본 발명의 개념의추가 실시 예들이 설명될 것이다. 상기 방법의 일 허용가능 실시 예에 따르면, 상기 제3 지식 그래프는 비어 있다. 따라서, 그 것은 존재 하지 않는다. 이 경우, 메타 계층을 통한 단순 통합은 사용되지 않을 것이다. 상기 제1 지식 그래프의 노드의 컨텐츠 및 상기 제1 지식 그래프의 노드의 컨텐츠의 단순 식별의 경우는 존재하지 않을 것이고, 오직 상기 두 개의 지식 그래프들- 및 잠재적으로 제3 지식 그래프- 사이의 더 복잡한 관계가 여기 제안된 개념에 적용될 수 있을 것이다. 상기 방법의 일 바람직한 실시 예에 따르면, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는 직접 엣지, 특히 상기 제4 노드와 상기 제6 노드-즉, 상기 제3 지식 그래프에 포함된 두 개의 노드들-를 링크하는 엣지일 수 있다. 다른 실시 예에서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드는 간접적으로, 즉 하나 또는 그 이상의 중간 노드들을 통해 링크될 수 있다. 그러나, 이 것은 상기 제 4 노드와 상기 제6 노드 사이의 컨텐츠 관계를 약화시킬 수 있다. 그러한 실시 예는, 예를 들어, 상기 제4 노드 와 상기 제6 노드 및 하나 또는 그 이상의 중간 노드들 사이에 가중치들이 제3 지식 그래프에서 다른 주변 엣지 들과 비교하여 상당히 높을 때 사용될 수 있다. 상기 방법의 일 바람직한 실시 예에 따르면, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는 상기 제3 지식 그래프의 상기 제4 노드와 적어도 하나의 링크하는 노드 사이의 엣지 및 상기 링크하는 노드와 상기 제6 노드 사이의 엣지에 의해 표현된다. 상기 방법의 일 실시 예에 따르면, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 동일 컨 텐츠를 포함할 수 있다. 이 옵션은 관계의 가장 단순한 예가 될 수 있다. 더 복잡한 관계들은, 조건들에 따라, 동의어들에 의해서, 또는 간접 설명들에 의해서 표현될 수 있다. 상기 방법의 일부 실시 예들에 따르면, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 컨텐 츠 관계가 퍼지 평등(fuzzy equality)을 사용하여 결정될 수 있는데, 즉 상기 컨텐츠가 유사할 수 있다. 이것은 상대적 임계값 보다 작은 에지 거리를 갖는 단어들 또는 단어들의 세트들로 표현될 수 있는데, 예를 들어, 단어 의 80%는 임베드된 공간에 포함되며, 예를 들어 이용 가능한 텍스트 코퍼스로 훈련된다. 수많은 알려진 유사성 앨고리즘들, 지원 자료실들 또는 텍스트 말뭉치들이 사용될 수 있다. 따라서, 상기 방법의 다른 실시 예에 따르면, 컨텐츠 관계를 갖는, 다른 지식 그래프들의 노드들은, 상 기 관련된 노드들의 컨텐츠가 동의어들(synonyms)이다. 일반적으로, 일반적으로 이러한 동의어는 상기 제3 및 또한 상기 제4 지식 그래프에 의해 정의될 수 있으며, 상기 제1 지식 그래프와 상기 제2 지식 그래프를 링크하 는 촉매로서 기능한다. 상기 방법의 일부 실시 예들에 따르면, 상기 제1 지식 그래프는 제1 지식 그래프 관리 툴에 의해 관리될 수 있고 상기 제2 지식 그래프는 제2 지식 그래프 관리 툴에 의해 관리될 수 있다. 상기 제1 및 제2 지식 그래 프의 컨텐츠 소유권뿐만 아니라 두 개의 독립적인 지식 그래프 관리 툴들이 서로 다른 주체들, 예를 들어 서로 다른 법적 실체들에 속할 수 있다. 그러한 경우에, 제1 지식 그래프는 오직 제1 법적 실체(제1 기업)의 사용자 들에 의해서만 변경될 수 있고 제2 지식 그래프는 오직 제2 법적 실체(제2 기업)의 사용자들에 의해서만 변경될 수 있다. 따라서, 서로 다른 지식 그래프들의 책임 소재가 명확히 정의될 수 있다. 상기 방법의 일부 실시 예들에 따르면, 상기 제2 지식 그래프는 상기 제1 지식 그래프 관리 툴에 의해 판독-전용(read-only) 모드로 액세스할 수 있다. 따라서, 제안된 준-통합-“또한 링크하는 것”으로 의미하기 전-이 제1 지식 그래프 관리 툴 소유자에 의해 컨트롤되는 관리 툴만을 사용하여 수행될 수 있다. 그 결과, 제2 주체에 의해 소유된 지식 그래프에 대한 제1 주체로부터 어떠한 부정적 영향도 기대될 수 없다. 상기 방법의 일부 실시 예들에 따르면, 상기 방법은 규칙적인 시간 간격들 지나서 또는 후에(in or after regular time intervals) 실행될 수 있다. 따라서, 제1 지식 그래프와 제2 지식 그래프 간에 링크하는 것은 최신 상태를 유지할 수 있다. 시간 간격들은 사전 정의된 길이를 가질 수 있거나, 또는 시간 간격들의 길 이는, 예를 들어 제1 및/또는 제2 지식 그래프의 변화율을 표현하는 파라미터에 기초하여 동적으로 결정될 수 있다. 제3 지식 그래프에도 동일한 원리를 적용할 수 있다. 이것은 또한 다음과 같이 표현될 수 있다: 추가의 실시 예에 따르면, 상기 방법은 제1 지식 그래프, 상기 제2 지식 그래프 및/또는 상기 제3 지식 그래프 중 적어 도 하나에서 다수의 변경들의 함수일 수 있는 변경 인덱스에 기초하여 결정된 시간 간격들에 따라 실행될 수 있 다. 더 나아가, 실시 예들은 컴퓨터 또는 임의의 명령 실행 시스템에 의해서또는 연결하여 사용하기 위한 프 로그램 코드를 제공하는 컴퓨터-사용가능 또는 컴퓨터-판독가능 매체로부터 액세스할 수 있는 관련된 컴퓨터 프 로그램 제품의 형태를 취할 수 있다. 본 명세서의 목적상, 컴퓨터-사용가능 또는 컴퓨터-판독가능 매체는 명령 실행 시스템, 장치 또는 디바이스에 의해 또는 연결하여 사용하기 위한 프로그램을 저장, 통신, 전파 또는 운송 하기 위한 수단을 포함할 수 있는 모든 장치일 수 있다. 본 발명의 추가 실시 예에 따르면, 컴퓨터-구현 방법(CIM), 컴퓨터 프로그램 제품(CPP) 및/또는 컴퓨터 시스템은 다음 연산들을 수행한다(반드시 다음의 순서로 수행할 필요는 없다): (a) 제1 그래프와 제2 그래프를 포함하는 복수의 객체 인식 그래프들을 각각 표현하는 복수의 객체 인식 그래프 데이터 세트들을 수신하는 단계 - 상기 복수의 객체 인식 그래프들의 각 객체 인식 그래프는: (i) 이미지(들)에서 인식될 수 있는 물리적 객체 들의 유형 또는 범주를 각각 표현하는 복수 객체 유형 노드들, 및 (ii) 상기 객체 인식 그래프의 객체 유형 노 드들을 각각 연결하는 복수의 엣지들을 포함하고, 각각의 엣지는 상기 엣지에 의해서 연결되는 상기 객체 유형 노드들의 쌍 사이의 관계를 표현함-; (b) 상기 제1 그래프의 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기 제2 그래프의 제2 객체 유형 노드로서 표현한다고 결정하는 단계; 및 (c) 상기 제1 그래 프의 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기 제2 그래프의 제2 객체 유형 노 드로서 표현한다고 결정하는 것에 응답하여, 제1 인터링크를 메타데이터 계층 데이터 세트에 추가하는 단계- 상 기 제1 인터링크는 상기 제1 객체 유형 노드가 상기 물리적 객체들의 동일 유형 또는 범주를 상기 제2 그래프의 제2 객체 유형 노드로서 표현한다는 것을 표시함."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 일부 실시 예들은 현재의 기술 상태에 관하여 다음과 같은 하나, 또는 그 이상의, 문제들, 결 점들, 개선을 위한 기회들 및/또는 도전들을 인식할 수 있다: (i)제3 지식 그래프가 존재하는 상황에서 두 개의 지식 그래프들을 조합할 때 기존의 어려움들을 극복해야 할 추가의 필요성이 있을 수 있다- 일종의 현실을 표현 함-; 및/또는 (ii)지식 그래프 환경의 서로 다른 임차인들에 의한 노드들에 대한 액세스 권한들을 유지관리 할 때 기존 어려움들을 극복해야 할 필요가 있을 수 있다. 본 명세서의 컨텍스트에서, 다음 관례들, 용어들 및/또는 표현들이 사용될 수 있다. \"지식 그래프\"(\"KG\"로 축약될 수 있다)라는 용어는 노드 식별자들(노드 ID들)을 갖는 노드들을 포함하는 데이터 구조- 또한 하드웨어로도 구현 가능한-를 나타낼 수 있다. 상기 노드들은 컨텐츠 또는 사실들을 포함할 수 있고 이들은 노드들 사이의 관계들을 표현하는 엣지들에 의해서 링크될 수 있고, 상기 엣지들은 링크들로 또 한 알려져 있다. 상기 노드들은 또한 버티스들(vertices) 또는 버텍스들(vertexes)로도 표시될 수 있다. 상기 엣지들은 두 개의 서로 다른 노드들 사이에서 관계의 강도(strength) 값을 표현하는 관련된 가중치 계수 값들 (related weighting factor values)을 가질 수 있다. 본 명세서의 컨텍스트에서, 독립 지식 그래프들이, 예를 들어, 제1 지식 그래프, 제2 지식 그래프 및 적어도 하나 이상의 제3 지식 그래프로 참조된다. \"존재하는 상황에서(in the presence)\"라는 용어는 어떤 사물이 존재하는 곳에서 발생하는 주제-예를 들 어, 상기 제1 및 상기 제2 지식 그래프를 링크하는 것-가 최종 산물, 즉 링크된 지식 그래프의 일부가 되지 않 으면서 상기 제1 및 상기 제2 지식 그래프를 링크하는 것을 용이하게 위해 일종의 촉매로서 또는 도움을 주는 구조로서 작용할 수 있다는 것을 의미한다. \"제3 지식 그래프\"라는 용어는 소위(so-called) 촉매 지식 그래프를 의미할 수 있다. 이 표현은 상기 제 3 지식 그래프가 상기 제1 및 상기 제2 지식 그래프가 링크된 후에도 상기 제1 및 상기 제2 지식 그래프로부터 독립적으로 남아있을 수 있기 때문에 사용된다. \"메타-계층 지식 그래프\"-또는 짧게는 \"메타-계층\"-이라는 용어는 상기 제1, 상기 제2, 및 상기 제3 지 식 그래프로부터 독립적인 지식 그래프를 의미할 수 있다. 상기 메타-계층 지식 그래프는 상기 제1 및 상기 제2 지식 그래프를 링크하는 것을 인에이블 할 수 있다. 오직 상기 제3 지식 그래프에서만 이용할 수 있는 정보에 대한 필요성 없이 상기 제1 및 상기 제2 지식 그래프를 링크하는 것이 가능한 실시 예들에서, 상기 메타-계층은 오직 상기 제1 지식 그래프의 노드들을 상기 제2 지식 그래프의 노드들에 링크하는 엣지들만 포함한다. 그러나, 메타-계층에도 노드들이 포함되는 것이 또한 가능할 수도 있다. 이것은 상기 제3 지식 그래프의 노드들을 위해 유용할 수 있는데, 그 이유는 상기 제3 지식 그래프에서의 정보를 사용하는 것-노드들 및 관련 엣지들의 형태로-은 상기 제1 지식 그래프 및 상기 제2 지식 그래프의 노드들 사이에서 간접적인 링크들을 결정 하는 데 도움이 될 수 있기 때문이다. 일부 실시 예들에서, 상기 메타-계층 지식 그래프는 상기 제1 지식 그래프와 상기 제2 지식 그래프로부 터 독립적으로- 예를 들어, 분리된 스토리지 유닛에서-존재한다. 따라서, 서로 다른 지식 그래프들은 서로 다른 보안 메커니즘들 하에 서로 다른 하드웨어 환경들 상에서 관리 및 유지될 수 있는데, 이는 상기 제1, 상기 제2 및 상기 제3 지식 그래프에 대한 완전히 분리된 소유권 및 관리 접근 권한들을 용이하게 할 수 있다. \"직접 엣지\"라는 용어는 두 개의 관련 노드들을 직접 접속하는 엣지를 의미할 수 있다. 반대로, 간접 관 계는 상기 제1 노드와 상기 제2 노드 사이에서 하나 또는 그 이상의 중간 노드들에 의해서 표현될 수 있다. 직 접 엣지는 한 튜플의 노드 ID들(a tuple of node IDs)에 의해서 식별될 수 있고, 상기 노드 ID들 각각은 상기 엣지에 의해서 링크된 노드들 중 하나를 나타낸다. 다음에서, 도면들의 상세 설명이 제시될 것이다. 도면들의 모든 명령들은 개략적이다. 먼저, 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 본 발명의 컴퓨터-구현 방법의 실시 예의 블록도가 제시된다. 그 다 음에, 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 시스템의 실시 예들 뿐만 아니라, 다른 실시 예들이 기술될 것이다. 도 1은 본 발명의 컴퓨터-구현 방법의 실시 예의 블록도를 도시한 것이고, 상기 방법의 실시 예는, 촉매가 되는, 제3 지식 그래프이 존재하는 상황에서, 상기 지식 그래프의 독립적인 소유권자들인, 서로 주체들 (constituents)에 의해서 잠재적으로 소유될 수 있는 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 컴퓨 터-구현 방법의 실시 예이다. 상기 지식 그래프들 각각은 엣지들에 의해 연결되는 노드들을 포함한다. 상기 방 법은 상기 제1 지식 그래프로부터 노드들의 컨텐츠를 상기 제2 지식 그래프로부터 노드들의 컨텐츠를 비교하는 단계를 포함한다. 또한, 상기 방법은, 만일 제1 노드 ID를 갖는, 상기 제1 지식 그래프의 노드가 상기 제2 지식 그래 프의, 제2 노드 ID를 갖는 관련된 노드-특히 동일한 컨텐츠 또는 퍼지 유사 컨텐츠-와 컨텐츠 관계를 갖는다면, 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해 식별되는 엣지를 메타-계층 지식 그래프에 저장하는 단계를 포함한다, 상기 방법은 상기 제3 지식 그래프의 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프의 노드들의 컨 텐츠 및 (b) 상기 제2 지식 그래프의 노드들의 컨텐츠를 비교하는 단계를 더 포함한다. 상기 제1 지식 그 래프에서 제3 노드 ID를 갖는 제3 노드가, 상기 제3 지식 그래프에서 제4 노드 ID를 갖는 제4 노드와 관련된다 고 결정하는 것과 그리고 상기 제2 지식 그래프에서 제5 노드 ID를 갖는 제5 노드가, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계-중간 노드들을 통해 직접 엣지 간접 엣지에 의해서 표현된- 가 존재하는 상황에서 제6 노드에 대해 컨텐츠 관계를 갖는다고 결정하는 것에 따라, 상기 방법은 제1 노 드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 메타-계층 지식 그래프에 저장하는 단계를 포함한다. 상기 방법은 또한 상기 메타-계층 지식 그래프의 적어도 모든 노드들 및 엣지들을 저장하는 단계 포함한다. 도 2는 두 개의 독립된 지식 그래프들(202, 204) 및 메타-계층에 링크된 지식 그래프들(202, 20 4)을 포함하는 실시 예의 블록도를 도시한다. 상기 제1 지식 그래프 A는, 예를 들어, 4개의 노드들을 포함하는데, 이들은 \"안장\"에 링크된 \"말, \"가죽\"에 링크된 \"안장\", 그리고 \"안장\"에 링크된 \"등자\"를 포함한다. 상기 제2 지식 그래프 B는, 예를 들어, 노드 \"무스탕\"에 링크된 노드 \"말\"를 포함한다. 화살은 상기 두 개의 지식 그래프들(202, 204)을 링크하는 프로세스를 표현한다. 만일 지식 그래프 A의 노드(\"말\")의 컨텐츠가 지식 그래프 B의 노드와 동일하다고 결정된다면, 링크(linkage)는 두 노드들 사이에서, 따라서 두 개의 지식 그래프들 사이에서-참조 번호에 의해서 표현되는- 관계를 정의하는 메타-계층에 링크하는 엣지을 정의함에 의해서 설정될 수 있다. 여기서 주목할 것은 상기 원래 지식 그래프들(202, 204)이 완전히 독립적으로 남아있고 서로 다른 운영 관계자 들(주체들)에 의한 독립적인 지식 그래프 관리 툴들에 의해서 또한 관리될 수 있다는 점이다. 메타-계층에서 링크하는 엣지는 제1 지식 그래프 A를 위한 식별자 및 노드의 노드 ID를 일 측 상에 포함하는 제1 튜플과, 그리고 제2 지식 그래프 B의 식별자 및 노드의 노드 ID를 타 측 상에 포함하는 다른 튜플에 의해서 정의될 수 있다. 도 3은 도 2와 유사한 셋업을 포함하는 실시 예의 블록도를 도시하며, 도 2와 차이점은 일반 지식 이 사용된다는 점이다. 제2 지식 그래프 B 대신, 또 다른 제2 지식 그래프 C가 사용되고, 상기 그래 프 C는 노드\"세틀랜드\"에 링크된 노드 \"조랑말\"을 포함한다. 인간의 마음에, 제1 지식 그래프 A와 제2 지식 그래프 C에서 상기 노드들 \"말\"과 \"조랑말\"이 링크되는 것은 자명(obvious)하며, 이는 조랑말도 또한 말이기 때문이다. 이 관계는 상기 두 개의 지식 그래프들(202 또는 302) 중 하나에서 이용 가능하거나 또는 사용자 입력과 대화하는(interactive) 단계에서 상기 방법에 이용될 수 있다. 한편, 말/조랑말 관 계에 관한 정보는 자료실, 사전 또는 그러한 또는 유사한 관계를 표현하는 튜플들(tuples)의 목록으로부터 또한 이용가능 할 수도 있다. 상기 링크하는 프로세스의 결과는 도 2의 결과와 유사하다. 링크하는 엣지는 메타-계층 에 구축되며, 상기 링크 엣지(상기 관계을 정의하는)는 제1 지식 그래프를 위한 식별자 및 노드 을 위한 노드 ID를 포함하는 튜플과, 그리고 제2 지식 그래프를 위한 식별자 및 노드의 노드 ID 를 포함하는 튜플에 의해서 정의된다. 도 2와 비교할 때, 나머지 조건들(conditions)은 변경이 없다. 도 4는 제3 지식 그래프의 노드들의 관계를 사용하여 두 개의 지식 그래프들(202, 402)을 병합하는 실시 예인, 블록도를 도시한다. 제1 지식 그래프의 컨텐츠는 이전 예들과 비교했을 때 변경되지 않는 다. 제2 지식 그래프 D는 노드\"사막\"에 링크된 노드들 \"낙타\"을 이제 포함한다. 도시된 바와 같이, 제1 지식 그래프 A와 제2 지식 그래프 D의 노드들 사이에서 직접적으로 가시적이고 분명한 관 계는 없다. 그러나, 이 관계 정보는 노드 \"안장\"에 링크하는 노드 \"낙타\"을 포함하는 제3 지식 그래 프 E에 의해 전달된다. 따라서, 안장들은 낙타들에게도 또한 사용될 수 있다. 이 경우에, 메타-계층은 보다 복잡한 데이터, 즉: 제1 지식 그래프 A를 위한 식별자, 노드 \"안장\"을 위한 노드 ID 및 메타-계층 표현 \"낙타\"을 가리키는 인덱스를 포함하는 하나의 튜플; 및 제 2 지식 그래프 D를 위한 식별자, 노드 \"낙타\"을 위한 노드 ID 및 메타-계층 표현 \"안장\"을 가리키는 인덱스를 포함하는 제2 튜플을 포함한다. 이러한 보다 복잡한 관계는 참조 번호에 의해 식별되는 파 선들(dashed lines)에 의해 표현된다. 앞의 예들에서와 같이, 제1 지식 그래프와 제2 지식 그래프는 독립적으로 남아있고, 상기 링크하는 정보는 메타-계층에 관련된다. 도 5는 제1 지식 그래프, 제2 지식 그래프 및 제3 지식 그래프를 갖는 실시 예에 대한 단순화된 블록도 을 도시한다. 상기 제안된 방법의 이러한 확장은 외부 데이터의 사용을 다음과 같이 이용한다: 인터링크하 는(interlinking) 엣지가 생성되고, 다른 관련된 개념들이 아직 어떠한 지식 그래프들에도 존재하지 않은 이용 가능한 데이터(예를 들어, 해석된 이미지들)에서 발견될 때, 하나의 노드가 상기 인터링크하는 엣지(들)에 대한 정보를 포함하는 동일 메타-계층에 추가된다. 이 경우에, 상기 인터링크하는 엣지는 상기 두 개의 지식 그 래프들을 직접적으로 연결하지 않지만 메타-계층 노드(들)를 통해 연결할 것이다. 또한, 만일 개념들 사이에서 관계들-즉, 의미론적 관계들-이 데이터에서 발견되고, 상기 개념들 중 어떠 한 것도 상기 지식 그래프들 중 어디에서도 발견되지 않지만 상기 개념들 중 적어도 하나가 메타-계층에서 발견된다면, 상기 다른 개념들은 메타-계층 엣지들을 통해 메타-계층에서 연결된다. 이러한 접근방식은 검 색 중에 상기 지식 그래프들 사이에서 인터링크 하는 엣지들이 사용될 뿐만 아니라 메타-계층에 저장된 간 접 연결들도 사용되는 장점을 가져오며, 추가적인 통찰력을 제공하고 추가적인 지식 그래프들에 연결할 수 있게 한다. 이러한 개념은 도 5에 도시되며, 여기서 노드들 S와 R은 제3 소스에서는 발견되지만 상기 존재하는 지식 그래프들 중 어디에도 포함되지 않는다. 따라서, 상기 노드들 S와 R은 메타-계층에 저장되고, 본 발명의 다양한 실시 예들에서, 제1 지식 그래프와 제2 지식 그래프의 이미 존재하는 노드들 사이에서 자동 관계들, 예를 들어 A-R-S-G 이 가능하다. 도 5의 컨텐츠는 이전의 도면들을 이해한 후에 당업자에 의해 이해될 수 있을 것이다. 제1 지식 그래프 는 도시된 엣지들과 함께 노드들 A, B, C 및 D를 가지며, 제2 지식 그래프는 도시된 엣지들과 함께 노드들 E, F, G 및 H를 포함한다. 노드들 A와 F뿐만 아니라 B와 F 사이에도 단순한 메타-계층 엣지들이 있 다. 제1 지식 그래프로부터 제2 지식 그래프까지의 다른 간접 링크들은, 도시된 바와 같이, 메타-계 층 노드들 S 및 R을 통해 용이하게 된다. 활성 지식 그래프(502 및 504)의 노드들과 메타-계층 노드들-여 기서, S와 R-사이에서 상기 관계들을 결정하는 단계는 이전의 도면들에서 설명된 상기 원리들에 따라 수행되는 데, 예를 들어 동일한 컨텐츠의 개념 또는 노드 컨텐츠의 퍼지 정체성(fuzzy identity)의 개념에 의해서 수행된 다. 일부 실시 예들에서, 상기 방법을 수행하는 단계는, 도 2-5를 참조하면, 입력들을 링크하는 데이터 의 새로운 세트(a new set of linking data)로 변환할 수 있다. 일부 실시 예들에서, 상기 변환의 상기 결과는 메타-계층이다. 어떤 실시 예들에서, 상기 변환의 상기 결과는 링크하는 엣지가 될 수 있다. 일부 실시 예들에서, 상기 링크하는 데이터는 다양한 지식 그래프들의 동일 노드들을 인터링크하는 노드들을 포함할 수 있다. 도 6은 제1 지식 그래프와 제2 지식 그래프를 링크하기 위해 시스템을 링크하는 지식 그래프의 실 시 예의 블록도를 도시한다. 상기 제1 지식 그래프는 제1 메모리 유닛(도시되지 않음)의 제1 데이터 구조에 유 지되고, 상기 제2 지식 그래프는 제2 메모리 유닛(도시되지 않음)의 제2 데이터 구조에 유지된다. 상기 제1 지 식 그래프와 상기 제2 지식 그래프를 링크하는 것은 제3 메모리 유닛(도시되지 않음)의 제3 데이터 구조에 있는 제3 지식 그래프가 존재하는 상황에서 용이하게 된다. 상기 지식 그래프들 각각은 엣지들에 의해 연결된 노드들 을 포함한다. 상기 시스템은 상기 제1 지식 그래프의 노드들의 컨텐츠를 상기 제2 지식 그래프의 노드들의 컨텐츠와 비교하기 위해 구성된(adapted) 비교 유닛을 포함한다. 스토리지 유닛은, 만일 상기 제1 지식 그래프(도 2의 202와 비교)의, 제1 노드 ID를 갖는 노드(도 2의 206과 비교)가 제2 지식 그래프(도 2의 204와 비교)의, 제2 노드 ID를 갖는 관련된 노드(도 2의 214와 비교)에 대해 컨텐츠 관계를 갖는 것이 존재한다면, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하 는 튜플과 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별되는 엣지(도 2의 220과 비교)를 메타-계층 메모리 유닛(도시되지 않음)에 있는 메타-계층 데이터의 메타-계층(도 2의 218과 비교) 지식 그래프에 저장하기 위해 구성된다. 비교 유닛은 또한, 상기 제3 지식 그래프(도 4의 404와 비교)의 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프(도 4의 202와 비교)의 노드들의 컨텐츠 및 (b) 상기 제2 지식 그래프의 노드들의 컨텐츠와 비교하 기 위해 구성된다. 더 나아가, 상기 시스템은 다음을 위해 구성된 결정 및 스토리지 모듈을 포함하고: 상기 제1 지식 그래프(도 4의 202와 비교)에서 제3 노드 ID를 갖는 제3 노드(도4의 208과 비교)가, 상기 제3 지식 그래프(도 4 의 404와 비교)에서 제4 노드 ID를 갖는 제4 노드(도 4의 412와 비교)와 관련됨을, 그리고 상기 제2 지식 그래 프(도4의 402와 비교)에서, 제5 노드 ID를 갖는 제5노드(도 4의 406과 비교)가, 상기 제3 지식 그래프(도 4의 404와 비교)에서 제4 노드와 제6 노드 사이에 컨텐츠 관계가 존재하는 상황에서, 제6 노드 ID를 갖는 제6 노드 (도 4의 410과 비교)와 콘텐츠 관계를 가짐을 결정하는 것에 따라, 결정 및 스토리지 모듈은, 상기 제1 노 드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포 함하는 튜플에 의해서 식별 가능한 엣지를 상기 메타-계층 지식 그래프에 저장하기 위해 구성된다. 여기서, 상 기 제1 노드는 상기 제1 노드 및 상기 제1 지식 그래프에서 링크되는 상기 제3 노드에 기초하여 상기 제5 노드 에 링크될 수 있다. 일부 실시 예들에서, 엣지는, 비록 몇 몇의 노드들에 의해서 분리되었더라도, 링크된 튜플 들의 모든 세트를 포함할 수 있다(예: 도 5의 A.R.S.G). 일부 실시 예들에서, 결정 및 스토리지 모듈은 상 기 제3 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프 의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 저장하기 위해 구성된다. 또한, 결정 및 스토리지 모듈은 상기 메타-계층 지식 그래프의 적어도 모든 노드들과 엣지들을 저 장할 수 있도록 구성된다. 본 발명의 실시 예들은 프로그램 코드를 저장 및/또는 실행하기에 적합한 거의 모든 유형의 컴퓨터와 함 께 구현될 수 있다. 도 7은, 예로서, 제안된 방법과 관련된 프로그램 코드를 실행하는 데 적합한 컴퓨팅 시스템 을 도시한다. 컴퓨터 시스템은 적합한 컴퓨터 시스템의 하나의 예일뿐이며 여기에 설명된 본 발명의 실시예들의 사용 또는 기능의 범위에 관하여 어떠한 제한을 암시하려고 의도된 것이 아니다. 컴퓨터 시스템에는, 다수 의 다른 범용 또는 특수 목적 컴퓨팅 환경들 또는 구성들과 함께 운영되는, 컴포넌트들이 존재한다. 컴퓨터 시 스템/서버와 함께 사용하기에 적합할 수 있는 잘 알려진 컴퓨팅 시스템들, 환경들, 및/또는 구성들의 예들 은, 개인용 컴퓨터 시스템들, 서버 컴퓨터 시스템들, 씬 클라이언트들, 씩 클라이언트들, 핸드헬드 또는 랩탑 디바이스들, 멀티-프로세서 시스템들, 마이크로프로세서-기반 시스템들, 셋톱 박스들, 프로그래밍 가능한 소비 자 전자 제품들, 네트워크 PC들, 미니 컴퓨터 시스템들, 메인프레임 컴퓨터 시스템들, 및 상기 시스템들 또는 디바이스들 중 하나를 포함하는 분산 클라우드 컴퓨팅 환경들, 등을 포함하나, 이에 국한하는 것은 아니다. 컴 퓨터 시스템/서버는, 컴퓨터 시스템에 의해 실행되는, 프로그램 모듈들과 같은, 컴퓨터 시스템-실행 가능한 명령들의 일반적인 컨텍스트로 기술될 수 있다. 일반적으로 프로그램 모듈들은 특정 작업들을 수행하거나 또는 특정 추상 데이터 유형들을 구현하는 루틴들, 프로그램들, 객체들, 컴포넌트들, 논리, 데이터 구조들 등을 포함할 수 있다. 컴퓨터 시스템/서버는 통신 네트워크를 통해 링크되는 원격 처리 디바이스들에 의 해 작업들이 수행되는 분산 클라우드 컴퓨팅 환경에서 실시될 수 있다. 분산 클라우드 컴퓨팅 환경에서, 프로 그램 모듈들은 메모리 스토리지 디바이스들을 포함하는 로컬 및 원격 컴퓨터 시스템 스토리지 매체 모두에 위치 할 수 있다. 도면에서 도시된 바와 같이, 컴퓨터 시스템/서버는 범용 컴퓨팅 디바이스의 형태로 도시된다. 컴 퓨터 시스템/서버의 컴포넌트들은 하나 또는 그 이상의 프로세서들 또는 처리 유닛들, 시스템 메모리 , 및 시스템 메모리를 포함하는 다양한 시스템 컴포넌트를 프로세서에 연결하는 버스를 포 함할 수 있지만, 이에 국한되지 않는다. 버스는, 다양한 버스 아키텍처들 중 하나를 사용하는, 메모리 버 스 또는 메모리 컨트롤러, 주변 버스, 가속 그래픽 포트, 및 프로세서 또는 로컬 버스를 포함하는, 버스 구조들 의 여러 유형들 중 하나 또는 그 이상을 나타낸다. 예를 들어, 그러한 아키텍처들은 ISA(Industry Standard Architecture) 버스, MCA(Micro Channel Architecture) 버스, EISA(Enhanced ISA) 버스, VESA(Video Electronics Standards Association) 로컬 버스 및 PCI(Peripheral Component Interconnect) 버스를 포함하나, 이에 국한되지는 않는다. 컴퓨터 시스템/서버는 일반적으로 다양한 컴퓨터 시스템 판독 가능한 매체를 포 함한다. 그러한 매체는 컴퓨터 시스템/서버에 의해 액세스 가능한 모든 이용 가능한 매체일 수 있으며 , 휘발성 및 비휘발성 매체, 착탈식 및 비-착탈식 매체를 모두 포함한다. 시스템 메모리은, 예컨대 랜덤 액세스 메모리(RAM) 및/또는 캐시 메모리와 같은, 휘발 성 메모리의 형태의 컴퓨터 시스템 판독 가능한 매체를 포함할 수 있다. 컴퓨터 시스템/서버는 또한, 다른 착탈식/비-착탈식, 휘발성/비휘발성 컴퓨터 시스템 스토리지 매체를 포함할 수 있다. 단지 예로서, 스토리지 시 스템이 비착탈식, 비휘발성 자기 매체(도시되지 않고 일반적으로 \"하드 드라이브\"라고 함)로부터 읽고 쓰 기 위해 제공될 수 있다. 도시되지는 않았지만, 착탈가능 비휘발성 자기 디스크( 예: \"플로피 디스크\") 에 서 읽고 쓰기 위한 자기 디스크 드라이브 및, CD-ROM, DVD-ROM 또는 기타 광학 매체와 같은, 착탈가능 비휘발성 광학 디스크에서 읽거나 쓰기 위한 광학 디스크 드라이브가 제공될 수 있다. 그러한 경우에, 각각은 하나 또 는 그 이상의 데이터 매체 인터페이스들에 의해 버스에 연결될 수 있다. 아래에서 추가로 도시되고 설명 되는 바와 같이, 메모리는 본 발명의 실시예들의 기능들을 수행하도록 구성된 프로그램 모듈들의 세트(예 를 들어, 적어도 하나)를 갖는 적어도 하나의 프로그램 제품을 포함할 수 있다. 운영 체제, 하나 또는 그 이상의 애플리케이션 프로그램들, 기타 프로그램 모듈들 및 프로그램 데이터 뿐만 아니라, 프로그램 모듈들의 (적어도 하나)세트를 갖는, 프로그램/유틸리티가, 예를 들어, 메모리 에 저장될 수 있지만, 이에 국한되는 것은 아니다. 각각의 운영 체제, 하나 또는 그 이상의 애플리케이션 프로그램들, 기타 프로그램 모듈들, 및 프로그램 데이터 또는 이들의 조합은 네트워킹 환경의 구현을 포함할 수 있다. 프로그램 모듈은 일반적으로 본 명세서에 기술된 바와 같은 본 발명의 실시예의 기능들 및/또는 방 법들을 수행한다. 컴퓨터 시스템/서버는 키보드, 포인팅 디바이스, 디스플레이 등과 같은, 하나 또는 그 이상 의 외부 디바이스들; 사용자가 컴퓨터 시스템/서버와 상호작용할 수 있게 하는 하나 또는 그 이상의 디바이스들; 및/또는 컴퓨터 시스템/서버가 하나 또는 그 이상의 다른 컴퓨팅 디바이스들과 통신할 수 있게 하는 모든 디바이스들(예를 들어, 네트워크 카드, 모뎀 등)과 통신 할 수 있다. 그러한 통신은 입/출력 (I/O) 인터페이스를 통해 발생할 수 있다. 또한, 컴퓨터 시스템/서버는 근거리 통신망(LAN), 일반 광 역 통신망(WAN), 및/또는 네트워크 어댑터를 통한 공중 네트워크(예를 들어, 인터넷)와 같은, 하나 또는 그 이상의 네트워크들과 통신할 수 있다. 도시된 바와 같이, 네트워크 어댑터는 버스를 통해 컴퓨터 시 스템/서버의 다른 컴포넌트들과 통신한다. 도시되지는 않았지만, 다른 하드웨어 및/또는 소프트웨어 컴포 넌트들이 컴퓨터 시스템/서버와 함께 사용될 수 있음을 이해해야 한다. 이들의 예들에는: 마이크로코드, 디바이스 드라이버들, 리던던트 처리 유닛들, 외부 디스크 드라이브 어레이들, RAID 시스템들, 테이프 드라이브 들 및 데이터 아카이벌 스토리지 시스템들이 포함되지만 이에 국한되지는 않는다. 일부 실시 예들에서, 컴퓨터 시스템/서버은 하드웨어 및/또는 소프트웨어 컴포넌트들을 추가하거나 설치할 수 있다. 이들 실시 예들에서, 상기 추가들은 상기 컴퓨팅 플랫폼을 특정 방식으로 전문화하고 특정 작 업들을 수행할 수 있게 하여 상기 컴퓨팅 플랫폼을 전문화된 머신이 되게 한다. 또한, 제1 지식 그래프 및 제2 지식 그래프를 링크하기 위한 시스템은 버스 시스템에 부착될 수 있다. 시스템과 컴퓨터 시스템을 링크하면 전문화된 머신이 될 수 있다. 본 발명의 다양한 실시 예들에 대한 설명은 예시를 목적으로 제시되었으며, 개시된 실시 예들이 전부라 거나 이들에 국한하는 것은 아니다. 기술된 실시 예들의 범위와 정신에서 벗어나지 않고 많은 변형과 변형이 만 들어질 수 있음은 당업자들에게 명백할 것이다. 본 명세서에 사용된 용어는 상기 실시 예들의 원리들, 시장에서 발견된 기술에 대한 실제 적용 또는 기술 개선을 가장 잘 설명하거나, 당업자들이 여기에 공개된 실시 예들을 이해할 수 있도록 하기 위해 선택되었다. 본 발명은 시스템, 방법 및/또는 컴퓨터 프로그램 제품으로 구체화될 수 있다. 컴퓨터 프로그램 제품에 는 프로세서가 본 발명의 실시 예들을 수행하도록 하기 위한 컴퓨터 판독 프로그램 명령들 갖는 컴퓨터 판독 가 능 저장 매체(또는 미디어)가 포함될 수 있다. 상기 매체는 전파 매체를 위한 전자, 자기, 광학, 전자기, 적외선 또는 반도체 시스템일 수 있다. 컴퓨 터 판독가능 매체의 예들은 반도체 또는 솔리드 스테이트 메모리, 마그네틱 테이프, 이동식 컴퓨터 디스켓, RAM(Random Access Memory), ROM(Read-only Memory), 강체 자기 디스크 및 광학 디스크를 포함할 수 있다. 광 디스크들의 현재 예들은 CD-ROM(콤팩트 디스크 읽기 전용 메모리), CD-R/W(콤팩트 디스크 읽기/쓰기), DVD 및 Blu-Ray-Disk를 포함한다. 상기 컴퓨터 판독 가능 스토리지 매체는 명령 실행 장치에 의해 사용될 명령들을 유지 및 저장할 수 있 는 유형의(tangible) 디바이스일 수 있다. 상기 컴퓨터 판독 가능 스토리지 매체는, 예를 들면, 전자 스토리지 디바이스, 자기 스토리지 디바이스, 광 스토리지 디바이스, 전자기 스토리지 디바이스, 반도체 스토리지 디바이 스, 또는 전술한 것들의 모든 적절한 조합일 수 있으며, 그러나 이에 한정되지는 않는다. 컴퓨터 판독 가능 스 토리지 매체의 더 구체적인 예들의 비포괄적인 목록에는 다음이 포함될 수 있다: 휴대용 컴퓨터 디스켓, 하드 디스크, 랜덤 액세스 메모리(RAM), 판독-전용 메모리(ROM), 소거 및 프로그램가능 판독-전용 메모리(EPROM 또는 플래시 메모리), 정적 랜덤 액세스 메모리(SRAM), 휴대용 컴팩트 디스크 판독-전용 메모리(CD-ROM), 디지털 다 용도 디스크(DVD), 메모리 스틱, 플로피 디스크, 천공-카드들 또는 명령들이 히스토리된 홈에 있는 융기된 구조 들 같이 기계적으로 인코드 된 디바이스, 및 전술한 것들의 모든 적절한 조합. 본 명세서에서 사용될 때, 컴퓨 터 판독 가능 스토리지 매체는 무선 전파들이나 다른 자유롭게 전파되는 전자기파들, 도파관이나 기타 전송 매 체(예를 들어, 광섬유 케이블을 통해 전달되는 광 펄스들)를 통해 전파되는 전자기파들, 또는 선(wire)을 통해 전송되는 전기 신호들 같이 그 자체로 일시적인(transitory) 신호들로 해석되지는 않는다. 본 명세서에 기술되는 컴퓨터 판독 가능 명령들은, 예를 들어, 인터넷, 근거리 통신망, 광역 통신망 및/ 또는 무선 네트워크 등의 통신망(네트워크)을 통해 컴퓨터 판독 가능 스토리지 매체로부터 각각 컴퓨팅/처리 디 바이스들로 또는 외부 스토리지 디바이스로부터 외부 컴퓨터로 다운로드 될 수 있다. 상기 통신망은 구리 전송 케이블들, 광 전송 섬유들, 무선 전송, 라우터들, 방화벽들, 스위치들, 게이트웨이 컴퓨터들 및/또는 엣지 서버 들을 포함할 수 있다. 각 컴퓨팅/처리 장치 내 네트워크 어댑터 카드 또는 네트워크 인터페이스는 상기 통신망 으로부터 컴퓨터 판독 가능 프로그램 명령들을 수신하고 그 컴퓨터 판독 가능 프로그램 명령들을 각각의 컴퓨팅 /처리 디바이스 내의 컴퓨터 판독 가능 스토리지 매체에 저장하기 위해 포워드 한다. 본 발명의 연산들을 실행하기 위한 컴퓨터 판독 가능 프로그램 명령들은 Smalltalk, C++ 또는 그와 유사 언어 등의 객체 지향 프로그래밍 언어와 \"C\" 프로그래밍 언어 또는 그와 유사한 언어 등의 종래의 절차적 프로 그래밍 언어들을 포함하여, 하나 또는 그 이상의 프로그래밍 언어들을 조합하여 작성된(written) 어셈블러 명령 들, 명령-세트-아키텍처(ISA) 명령들, 머신 명령들, 머신 종속 명령들, 마이크로코드, 펌웨어 명령들, 상태-셋 팅 데이터, 집적회로를 위한 구성 데이터, 또는 소스 코드나 목적 코드일 수 있다. 상기 컴퓨터 판독 가능 프로 그램 명령들은 전적으로 사용자의 컴퓨터상에서, 부분적으로 사용자의 컴퓨터상에서, 독립형(stand-alone) 소프 트웨어 패키지로서, 부분적으로 사용자의 컴퓨터상에서 그리고 부분적으로 원격 컴퓨터상에서 또는 전적으로 원 격 컴퓨터나 서버상에서 실행될 수 있다. 위에서 마지막의 경우에, 원격 컴퓨터는 근거리 통신망(LAN) 또는 광 역 통신망(WAN)을 포함한 모든 종류의 네트워크를 통해서 사용자의 컴퓨터에 접속될 수 있고, 또는 이 접속은 (예를 들어, 인터넷 서비스 제공자를 이용한 인터넷을 통해서) 외부 컴퓨터에 이루어질 수도 있다. 일부 실시 예들에서, 예를 들어 프로그램 가능 로직 회로, 필드-프로그램 가능 게이트 어레이들(FPGA),또는 프로그램 가능 로직 어레이들(PLA)을 포함한 전자 회로는 본 발명의 실시 예들을 수행하기 위해 전자 회로를 맞춤화 하도록 상 기 컴퓨터 판독 가능 프로그램 명령들의 상태 정보를 활용하여 상기 컴퓨터 판독 가능 프로그램 명령들을 실행 할 수 있다. 본 명세서에서는 본 발명의 실시 예들에 따른 방법들, 장치들(시스템들), 및 컴퓨터 프로그램 제품들의 플로 차트 예시도들 및/또는 블록도들을 참조하여 본 발명의 실시 예들을 기술한다. 플로 차트 예시도들 및/또는 블록도들의 각 블록과 플로 차트 예시도들 및/또는 블록도들 내 블록들의 조합들은 컴퓨터 판독 가능 프로그 램 명령들에 의해 구현될 수 있다는 것을 이해할 수 있을 것이다. 이들 컴퓨터 판독 가능 프로그램 명령들은 범용 컴퓨터, 특수목적용 컴퓨터, 또는 기타 프로그램가능 데 이터 처리 장치의 프로세서에 제공되어 머신(machine)을 생성하고, 그렇게 하여 그 명령들이 상기 컴퓨터 또는 기타 프로그램가능 데이터 처리 장치의 프로세서를 통해서 실행되어, 상기 플로 차트 및/또는 블록도의 블록 또 는 블록들에 명시된 기능들/동작들을 구현하기 위한 수단을 생성할 수 있다. 이들 컴퓨터 판독 가능 프로그램 명령들은 또한 컴퓨터 판독 가능 스토리지 매체에 저장될 수 있으며, 컴퓨터, 프로그램가능 데이터 처리 장치 및/또는 기타 디바이스들에 지시하여 명령들이 저장된 상기 컴퓨터 판독 가능 스토리지 매체가 상기 플로 차트 및/또는 블록도의 블록 또는 블록들에 명시된 기능/동작의 특징들을 구현하는 명령들을 포함하는 제조품(an article of manufacture)을 포함하도록 특정한 방식으로 기능하게 할 수 있다. 상기 컴퓨터 판독 가능 프로그램 명령들은 또한 컴퓨터, 기타 프로그램가능 데이터 처리 장치, 또는 다 른 디바이스에 로드 되어, 상기 컴퓨터, 기타 프로그램가능 장치 또는 다른 디바이스에서 일련의 동작 단계들이 수행되게 하여 컴퓨터 구현 프로세스를 생성하며, 그렇게 하여 상기 컴퓨터, 기타 프로그램가능 장치, 또는 다 른 디바이스 상에서 실행되는 명령들이 플로 차트 및/또는 블록도의 블록 또는 블록들에 명시된 기능들/동작들 을 구현할 수 있다. 도면들 내 플로 차트 및 블록도들은 본 발명의 여러 실시 예들에 따른 시스템들, 방법들 및 컴퓨터 프로 그램 제품들의 가능한 구현들의 아키텍처, 기능(functionality), 및 연산(operation)을 예시한다. 이와 관련하 여, 상기 플로 차트 또는 블록도들 내 각 블록은 상기 명시된 논리적 기능(들)을 구현하기 위한 하나 또는 그 이상의 실행 가능한 명령들을 포함한 모듈, 세그먼트 또는 명령들의 일부분을 나타낼 수 있다. 일부 다른 구현 들에서, 상기 블록에 언급되는 기능들은 도면들에 언급된 순서와 다르게 일어날 수도 있다. 예를 들면, 연속으 로 도시된 두 개의 블록들은 실제로는 사실상 동시에 실행될 수도 있고, 또는 이 두 블록들은 때때로 연관된 기 능에 따라서는 역순으로 실행될 수도 있다. 블록도들 및/또는 순서 예시도의 각 블록, 및 블록도들 및/또는 순 서 예시도 내 블록들의 조합들은 특수목적용 하드웨어 및 컴퓨터 명령들의 명시된 기능들 또는 동작들, 또는 이 들의 조합들을 수행하는 특수목적용 하드웨어-기반 시스템들에 의해 구현될 수 있다는 것에 또한 주목해야 한다. 본 명세서에서 사용된 용어는 단지 특정한 실시 예들을 설명하기위한 것이며 제한을 의도한 것이 아니 다. 본 명세서에 사용된 바와 같이, 단수 형태 \"a\", \"an\" 및 \"the\"는 문맥이 명백하게 달리 나타내지 않는 한 복수 형태도 포함하는 것으로 의도된다. 본 명세서에서 사용될 때, \"포함하다\" 및/또는 \"포함하는\"이라는 용어 는 명시된 특징들, 정수들, 단계들, 연산들, 엘리멘트들 및/또는 컴포넌트들의 존재를 명시하지만, 하나 또는 그 이상의 특징들, 정수들, 단계들, 연산들, 엘리멘트들 및/또는 컴포넌트들 및/또는 이들의 그룹들의 존재 또 는 추가를 배제하지 않는다는 것이 추가로 이해될 것이다. 아래의 청구항들에 기재된 대응하는 구조들, 재료들, 동작들, 및 모든 수단들 또는 단계들 플러스 엘리 멘트들은, 구체적으로 청구된, 다른 청구항들의 엘리멘트들과 함께 본 발명의 기능을 수행하기 위한 모든 구조, 재료, 또는 동작을 포함하도록 의도된 것이다. 본 발명의 하나 또는 그 이상의 실시 예들에 대한 설명은 예시와 설명의 목적으로 제공되는 것이며, 개시되는 형태로 빠짐없이 총 망라하거나 한정하려는 의도가 있는 것은 아니 다. 이 기술 분야에서 통상의 지식을 가진 자들에게 기술된 실시 예들의 범위와 정신을 벗어남이 없이 많은 수 정들 및 변형들이 있을 수 있다는 것이 명백하다. 본 발명의 실시 예들은 본 발명의 원리들 및 실제 응용을 가 장 잘 설명하기 위해 그리고 고려되는 구체적인 용도에 적합하게 여러 수정들을 갖는 다양한 실시 예들을 이 기 술 분야에서 통상의 지식을 가진 자들이 이해할 수 있도록 하기 위해, 선택되고 기술되었다."}
{"patent_id": "10-2021-7029519", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "요약하면, 다양한 실시 예들이 논의되었고, 이들은 다음의 번호가 매겨진조항들에서 다시 명시된다. 조항 1은 다음과 같다. 제3 지식 그래프가 존재하는 상황에서, 제1 지식 그래프와 제2 지식 그래프를 링 크하기 위한 컴퓨터-구현 방법에 있어서, 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함 하고, 상기 방법은: 제1 지식 그래프로부터 노드들의 컨텐츠를 제2 지식 그래프로부터 노드들의 컨텐츠와 비교 하는 단계; 만일 상기 제1 지식 그래프의 노드-상기 노드는 제1 노드 ID를 갖고, 상기 제2 지식 그래프의 관련 된 노드에 대해 컨텐츠 관계를 가지며, 상기 관련된 노드는 제2 노드 ID를 가짐-가 존재한다면, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함 하는 튜플에 의해서 식별되는 엣지를 메타-계층 지식 그래프에 저장하는 단계; 제3 지식 그래프로부터 상기 노 드들의 컨텐츠를 (a) 상기 제1 지식 그래프로부터 상기 노드들의 컨텐츠 및 (b) 상기 제2 지식 그래프로부터 상기 노드들의 컨텐츠를 비교하는 단계; 상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서 제4 노드 ID 를 갖는, 제4 노드와 관련된다는 것과, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 상기 제3 지식 그래프에서 제4 노드 및 제6 노드 사이에 컨텐츠 관계가 존재하는 상황에서, 제6 노드 ID를 갖는, 제6 노드에 대해 컨텐츠 관계를 갖는다는 것을 결정함에 따라, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 상기 메타-계층 지식 그래프에 저장하는 단계; 및 상기 메타-계층 지식 그래프의 적 어도 모든 노드들 및 엣지들을 저장하는 단계를 포함한다. 조항 2는 다음과 같다. 조항 1의 방법에 있어서, 상기 제3 지식 그래프가 비어 있다(empty). 조항 3은 다음과 같다. 조항 1 또는 2의 방법에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상 기 제6 노드 사이의 컨텐츠 관계는 직접 엣지(a direct edge)이다. 조항 4는 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는 상기 제3 지식 그래프의 상기 제4 노드와 적어도 하나의 링크 하는 노드 사이의 엣지, 및 상기 링크하는 노드와 상기 제6 노드 사이의 엣지에 의해 표현되는(represented) 조항 5항는 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 동일 컨텐츠(identical content)를 포함한다. 조항 6은 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 컨텐츠 관계가 퍼지 평등(fuzzy equality)을 사용하여 결정되는 노드들이다. 조항 7은 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 관련된 노드들의 컨텐츠가 동의어들(synonyms)이다. 조항 8은 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 상기 제1 지식 그래프는 제1 지식 그래프 관리 툴에 의해 관리되고 상기 제2 지식 그래프는 제2 지식 그래프 관리 툴에 의해 관리된다. 조항 9는 다음과 같다. 조항 8의 방법에 있어서, 상기 제2 지식 그래프는 상기 제1 지식 그래프 관리 툴 에 의해 판독-전용(read-only) 모드로 액세스할 수 있다. 조항 10은 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 상기 방법은 규칙적인 시간 간격 들로(in regular time intervals) 실행된다. 조항 11은 다음과 같다. 이전의 조항들 중 어느 하나의 방법에 있어서, 상기 방법은 상기 제1 지식 그래 프, 상기 제2 지식 그래프 및 상기 제3 지식 그래프 중 적어도 하나에서 다수의 변경들의 함수인 변경 인덱스에 기초하여 결정된 간격들로 실행된다. 조항 12는 다음과 같다. 제1 메모리 유닛에 있는 제1 데이터 구조의 제1 지식 그래프와 제2 메모리 유닛 에 있는 제2 데이터 구조의 제2 지식 그래프를, 제3 메모리 유닛에 있는 제3 데이터 구조의 제3 지식 그래프가 존재하는 상황에서, 링크하고, 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함하는 지식 그래프 링크 시스템에 있어서, 상기 시스템은: 상기 제1 지식 그래프로부터 노드들의 컨텐츠를 상기 제2 지식 그래프로부터의 노드들의 컨텐츠와 비교하기 위 해 구성되는(adapted) 비교 유닛(comparison unit); 만일 상기 제1 지식 그래프의 노드-상기 노드는 제1 노드 ID를 갖고, 제2 지식 그래프의 관련된 노드에 대해 컨텐츠 관계를 가지며, 상기 관련된 노드는 제2 노드 ID를 가짐-가 존재한다면,상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 제2 튜플에 의해서 식별되는 엣지를 메타-계층 메모리 유닛에 있는 메타 -계층 데이터의 메타-계층 지식 그래프에 저장하기 위해 구성된 스토리지 유닛을 포함하고; 상기 비교 유닛은 또한 상기 제3 지식 그래프로부터 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프로부터 노드들의 컨텐츠 및 (b) 상기 제2 지식 그래프로부터 노드들의 컨텐츠를 비교하기 위해 구성되고; 상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서 제4 노드 ID 를 갖는, 제4 노드와 관련된다는 것과, 상기 제 3 지식 그래프에서 제4 노드 및 제6 노드 사이에 컨텐츠 관계가 존재하는 상황에서, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 제6 노드 ID를 갖는, 제6 노드에 대해 컨텐츠 관계를 갖는다는 것을, 결정 및 스토리지 모듈에 의해서, 결정함에 따라, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 상기 메타-계층 지식 그래프에 저장하는 단계; 및 상기 메타-계층 지식 그래프의 적어도 모든 노드들 및 엣지들을 저장하는 단계를 포함한다. 조항 13은 다음과 같다. 조항 12의 시스템에 있어서, 상기 제3 지식 그래프는 비어 있다. 조항 14조는 다음과 같다. 조항 12 또는 조항13의 시스템에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는 직접 엣지이다. 조항 15는 다음과 같다. 조항12항 내지 조항14항의 조항들 중 어느 하나의 시스템에 있어서, 상기 제3 지식 그래프에서 상기 제4 노드와 상기 제6 노드 사이의 컨텐츠 관계는 상기 제3 지식 그래프의 상기 제4 노드 와 적어도 하나의 링크하는 노드 사이의 엣지 및 상기 링크하는 노드와 상기 제6 노드 사이의 엣지에 의해 표현 된다. 조항 16조은 다음과 같다. 조항 12항 내지 조항 15의 조항들 중 어느 하나의 시스템에 있어서, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 동일 컨텐츠를 포함한다. 조항 17조은 다음과 같다. 조항 12항 내지 조항 16의 조항들 중 어느 하나의 시스템에 있어서, 컨텐츠 관계를 갖는, 서로 다른 지식 그래프들의 노드들은, 컨텐츠 관계가 퍼지 평등(fuzzy equality)을 사용하여 결정 되는 노드들이다. 조항 18은 다음과 같다. 조항 12항 내지 조항 17의 조항들 중 어느 하나의 시스템에 있어서, 컨텐츠 관 계를 갖는, 다른 지식 그래프들의 노드들은, 상기 관련된 노드들의 컨텐츠가 동의어들(synonyms)이다. 조항 19는 다음과 같다. 조항 12항 내지 조항 18의 조항들 중 어느 하나의 시스템에 있어서, 상기 제1 지식 그래프는 제1 지식 그래프 관리 툴에 의해 관리되고 상기 제2 지식 그래프는 제2 지식 그래프 관리 툴에 의해 관리된다. 조항 20은 다음과 같다. 조항 19의 시스템에 있어서, 상기 제2 지식 그래프는 상기 제1 지식 그래프 관 리 툴에 의해 판독-전용(read-only) 모드로 액세스할 수 있다. 조항 21은 다음과 같다. 조항 12항 내지 조항 20의 조항들 중 어느 하나의 시스템에 있어서, 상기 시스 템은 규칙적인 시간 간격들 후에(after regular time intervals) 실행된다. 조항 22는 다음과 같다. 조항 12항 내지 조항 21의 조항들 중 어느 하나의 시스템에 있어서, 상기 시스 템은 상기 제1 지식 그래프, 상기 제2 지식 그래프 및/또는 상기 제3 지식 그래프 중 적어도 하나에서 다수의 변경들의 함수인 변경 인덱스에 기초하여 실행된다. 조항 23은 다음과 같다. 제1 메모리 유닛에 있는 제1 데이터 구조의 제1 지식 그래프와 제2 메모리 유닛 에 있는 제2 데이터 구조의 제2 지식 그래프를, 제3 메모리 유닛에 있는 제3 데이터 구조의 제3 지식 그래프가 존재하는 상황에서, 링크하고, 상기 지식 그래프들 각각은 엣지들에 의해서 연결되는 노드들을 포함하는, 컴퓨 터 프로그램 제품에 있어서, 상기 컴퓨터 프로그램 제품은 구현된 프로그램 명령들을 갖는 컴퓨터 판독가능 스 토리지 매체를 포함하고, 상기 프로그램 명령들은 하나 또는 그 이상의 컴퓨팅 시스템들 또는 컨트롤러들에 의 해서 실행가능 하며, 상기 프로그램 명령들은 하나 또는 그 이상의 컴퓨팅 시스템들이: 상기 제1 지식 그래프로 부터 노드들의 컨텐츠를 상기 제2 지식 그래프로부터의 노드들의 컨텐츠와 비교하고; 만일 상기 제1 지식 그래 프의 노드-상기 노드는 제1 노드 ID를 갖고, 제2 지식 그래프의 관련된 노드에 대해 컨텐츠 관계를 가지며, 상 기 관련된 노드는 제2 노드 ID를 가짐-가 존재한다면,상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하 는 튜플과 상기 제2 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 제2 튜플에 의해서 식별되는 엣지를 메 타-계층 메모리 유닛에 있는 메타-계층 데이터의 메타-계층 지식 그래프에 저장하며; 상기 비교 유닛은 또한 상 기 제3 지식 그래프로부터 노드들의 컨텐츠를 (a) 상기 제1 지식 그래프로부터 노드들의 컨텐츠 및 (b) 상기 제 2 지식 그래프로부터 노드들의 컨텐츠를 비교하고; 상기 제1 지식 그래프에서, 제3 노드 ID를 갖는, 제3 노드가, 상기 제3 지식 그래프에서 제4 노드 ID 를 갖는, 제4 노드와 관련된다는 것과, 상기 제3 지식 그래프에 서 제4 노드 및 제6 노드 사이에 컨텐츠 관계가 존재하는 상황에서, 상기 제2 지식 그래프에서, 제5 노드 ID를 갖는, 제5 노드가, 제6 노드 ID를 갖는, 제6 노드에 대해 컨텐츠 관계를 갖는다는 것을, 결정 및 스토리지 모듈 에 의해서, 결정함에 따라, 상기 제1 노드 ID 및 상기 제1 지식 그래프의 ID를 포함하는 튜플과, 상기 제5 노드 ID 및 상기 제2 지식 그래프의 ID를 포함하는 튜플에 의해서 식별 가능한 엣지를 상기 메타-계층 지식 그래프에 저장하며; 그리고 상기 메타-계층 지식 그래프의 적어도 모든 노드들 및 엣지들을 저장하도록 한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2021-7029519", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 실시 예들은 다른 주제들에 대한 참조로 설명됨에 주목해야 한다. 특히, 일부 실시 예들은 방 법 유형의 청구항들에 대한 참조로 설명되지만, 다른 실시 예들은 장치 유형의 청구항들에 대한 참조로 설명된 다. 그러나, 당업자는 전술한 그리고 아래의 설명으로부터, 달리 통지되지 않는 한, 한 유형의 주제에 속하는 모든 특징들의 모든 조합에 추가하여, 다른 주제들과 관련되는 특징들 사이의 모든 조합이 또한 본 명세서 내에 개시되는 것으로 고려됨을 이해할 것이다. 위에서 정의한 상기 특징들, 및 본 발명의 추가 특징들은, 이후 기술되는 실시 예들의 예들로부터 명백 하고 실시 예들의 예들을 참조하여 설명되지만, 이에 본 발명이 제한되지는 않는다. 본 발명의 실시 예들은, 오직 예로서, 그리고 다음 도면들을 참조하여, 기술될 것이다. 도 1은 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 본 발명의 컴퓨터-구현(computer- implemented) 방법의 실시 예의 블록도를 도시한다. 도 2는 두 개의 독립된 지식 그래프들과 메타-계층(meta-layer)과 링크된 지식 그래프들로 포함된 실시 예의 블록도를 도시한다. 도 3은 도 2의 실시 예와 유사한 실시 예의 블록도를 도시하며, 차이는 일반 지식이 사용된다는 것이다. 도 4는 제3 지식 그래프의 버텍스들의 관계를 사용하여 두 개의 지식 그래프들을 병합하는 실시 예의 블 록도를 도시한다. 도 5는 상기 제1 지식 그래프, 제2 지식 그래프 및 제3 지식 그래프를 포함하는 실시 예에 대한 단순화 된 블록도를 도시한다. 도 6은 제1 지식 그래프와 제2 지식 그래프를 링크하기 위한 시스템의 실시 예의 블록도를 도시한다. 도 7은 도 6에 따른 시스템을 포함하는 컴퓨팅 시스템의 실시 예를 도시한다."}
