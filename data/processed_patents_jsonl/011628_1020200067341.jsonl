{"patent_id": "10-2020-0067341", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0150233", "출원번호": "10-2020-0067341", "발명의 명칭": "이미지 처리 알고리즘의 최적화 방법 및 이를 구비한 전자 장치", "출원인": "삼성전자주식회사", "발명자": "임종화"}}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,멀티 태스크 러닝(multi task learning, MTL)을 지원하는 인공 지능 알고리즘이 저장되는 메모리;상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는상기 인공 지능 알고리즘의 제1 태스크를 메인 태스크(main task)로 결정하고,상기 인공 지능 알고리즘의 제2 태스크를 보조 태스크(auxiliary task)로 결정하고,상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들을 결정하고,제1 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하고,제2 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실을 결정하고,상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나의 가중치를 업데이트하는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "청구항 1에 있어서, 상기 제1 태스크는 뎁스 리그레션(depth regression)이고, 상기 제2 태스크는 시맨틱 세그멘테이션(semantic segmentation)인, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "청구항 2에 있어서, 상기 제2 태스크에서 정의된 상기 적어도 하나의 클래스는, 이미지에서 식별이 가능한 적어도 하나의 객체를 포함하는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "청구항 3에 있어서, 상기 적어도 하나의 객체는, 사람, 도로, 자동차, 건물 중 적어도 하나를 포함하는, 전자장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "청구항 1에 있어서, 상기 제1 학습 세트는 복수 개의 제1 이미지들을 포함하고 상기 제2 학습 세트는 상기 제1 이미지들과 다른 복수 개의 제2 이미지들을 포함하는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "청구항 1에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 학습 세트의 상기 제2 태스크의 수행에 대한 기대 값과 측정 값의 차이에 기반하여, 상기 제1 학습 세공개특허 10-2021-0150233-3-트에 대한 상기 제1 손실을 획득하도록 더 구성되고,상기 적어도 하나의 가중치는 상기 제1 학습 세트에 대한 손실을 보정하기 위한 가중치 중 상기 제2 손실을 상기 제1 손실보다 감소시키는 적어도 하나의 파라미터의 가중치에 해당하는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "청구항 6에 있어서, 상기 제1 학습 세트에 대한 제1 손실은, 상기 적어도 하나의 클래스에 대한 가중치에 기반하여 결정되는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "청구항 1에 있어서, 상기 적어도 하나의 프로세서는,상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들에 기반하여, 상기 제1 손실의경사도(gradient) 및 상기 제2 손실의 경사도를 결정하도록 더 구성되는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "청구항 5에 있어서, 상기 적어도 하나의 프로세서는,상기 제1 손실과 상기 제2 손실의 차이, 및 근사 알고리즘을 이용하여 상기 제2 손실의 경사도를 획득하는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "청구항 9에 있어서, 상기 근사 알고리즘은, 이고, 상기 N은 입력된 학습 세트의 픽셀 수에 해당하고, 상기 yi는 상기 입력된 학습 세트의 i번째 위치에서의 트루(true) 값에 해당하고, 상기 oi는 상기 입력된 학습 세트의 i번째 위치에서의 예측 값에 해당하고, 상기 Ld는상기 메인 태스크의 손실 값을 의미하고, 상기 Ls는 상기 보조 태스크의 손실 값을 의미하고, 상기 ws(c)는 상기보조 태스크의 복수의 클래스별 가중치를 의미하고, 상기 c는 상기 보조 태스크의 복수의 클래스에 해당하는,전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "청구항 1에 있어서, 상기 적어도 하나의 프로세서는,공개특허 10-2021-0150233-4-상기 제1 손실과 상기 제2 손실의 차이가 임계 값 이하인지 여부를 결정하도록 더 구성되는, 전자 장치."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "멀티 태스크 러닝(multi task learning, MTL)의 동작 방법에 있어서,인공 지능 알고리즘의 제1 태스크를 메인 태스크(main task)로 결정하는 동작,상기 인공 지능 알고리즘의 제2 태스크를 보조 태스크(auxiliary task)로 결정하는 동작,상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들을 결정하는 동작,제1 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하는 동작,제2 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실을 결정하는 동작, 및상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나의 가중치를 업데이트하는 동작을 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "청구항 12에 있어서, 상기 제1 태스크는 뎁스 리그레션(depth regression)이고, 상기 제2 태스크는 시맨틱 세그멘테이션(semantic segmentation)인 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "청구항 13에 있어서, 상기 제2 태스크에서 정의된 상기 적어도 하나의 클래스는, 이미지에서 식별이 가능한 적어도 하나의 객체를 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "청구항 14에 있어서, 상기 적어도 하나의 객체는, 사람, 도로, 자동차, 건물 중 적어도 하나를 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "청구항 12에 있어서, 상기 제1 학습 세트는 복수 개의 제1 이미지들을 포함하고 상기 제2 학습 세트는 상기 제1 이미지들과 다른 복수 개의 제2 이미지들을 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "청구항 12에 있어서, 상기 제1 학습 세트의 상기 제2 태스크의 수행에 대한 기대 값과 측정 값의 차이에 기반하여, 상기 제1 학습 세트에 대한 상기 제1 손실을 획득하는 동작을 더 포함하고,상기 적어도 하나의 가중치는 상기 제1 학습 세트에 대한 손실을 보정하기 위한 가중치 중 상기 제2 손실을 상기 제1 손실보다 감소시키는 적어도 하나의 파라미터의 가중치에 해당하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "공개특허 10-2021-0150233-5-청구항 17에 있어서, 상기 제1 학습 세트에 대한 제1 손실은, 상기 적어도 하나의 클래스의 가중치에 기반하여결정되는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "청구항 12에 있어서, 상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들에 기반하여, 상기 제1 손실의경사도(gradient) 및 상기 제2 손실의 경사도를 결정하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "청구항 16에 있어서, 상기 제2 손실과 상기 제1 손실의 차이, 및 근사 알고리즘을 이용하여 상기 제2 손실의 경사도를 획득하는 동작을 더 포함하는 방법."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 상기 전자 장치는 뉴럴(neural) 네트워크에 의한 학습에 따라 생성된 복수의 필터에서 선 정된 주요 패턴의 필터 별로, 뉴럴 네트워크의 입력 데이터를 필터링하기 위한 연산 명령어를 확인하고, 확인된 연산 명령어를 메모리에 저장하는 프로세서를 포함한다. 상기 서버의 학습 방법 중 적어도 일부는 인공 지능 알 (뒷면에 계속)"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 이미지 처리를 수행하는 전자 장치 및 이미지 처리에 이용되는 신경망 알고리즘의 최적화에 관한 것 이다."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공 지능 기술은 기계학습(딥러닝) 및 기계학습을 활용한 요소 기술들로 구성된다. 기계학습은 입력 데이터들 의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소 기술은 딥러닝 등의 기계학습 알고리즘을 활용하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공 지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화 시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술 로서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간의 경험정보 를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함 한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주행), 조 작 제어(행동 제어) 등을 포함한다. 인공지능의 한 분야인 머신 러닝(machine learning)은 대규모의 빅데이터를 수집 및 분석하여 미래를 예측하고 스스로의 성능을 향상시키는 시스템과 이를 위한 알고리즘을 연구하고 구축하는 기술을 의미한다. 최근, 하드웨어 기술의 발전에 힘입어 빅데이터의 수집과 저장이 가능해지고, 이를 분석하는 컴퓨터의 처리 능 력이 비약적으로 향상됨에 따라, 인간처럼 사물을 인식하고 정보를 이해할 수 있는 알고리즘인 머신러닝에 대한"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "연구가 활발히 진행되고 있다. 특히, 머신 러닝 기술분야에서도 뉴럴 네트워크(neural network)를 이용한 자율 학습 방식의 딥 러닝에 대한 연구가 활발하다. 뉴럴 네트워크는 인간의 뇌의 기능을 적극적으로 모방하려는 의도에 기초하여, 복수의 입력에 가중치를 곱한 총 합에 대하여 활성 함수가 특정 경계값과 비교하여 최종 출력을 결정하는 알고리즘으로, 일반적으로 복수의 레이 어로 구성되어 있다. 이미지 인식에 많이 이용되는 컨볼루셔널 뉴럴 네트워크(convolutional neural network, CNN), 음성 인식에 많이 이용되는 리커런트 뉴럴 네트워크(recurrent neural network, RNN) 등이 대표적이다. 멀티 태스크 러닝(multi-task learning, MTL)이란 여러 학습 과제를 동시에 해결하는 머신 러닝(machine learning)의 한 종류이다. 일반적으로 머신 러닝 모델을 트레이닝(training)하는 경우, 특정한 태스크를 최적화하는 것에 집중하는 방식으로 트레이닝이 수행된다. 이로 인해, 상기 특정한 태스크 이외에 도움이 될 여지가 있는 정보를 고려하지 않는 경우가 있다. 관련이 있는 태스크를 함께 트레이닝하고 이를 공유함으로써, 모델을 향상된 성능을 갖도록 최적화할 수 있는데, 이를 멀티 태스크 러닝이라고 한다. 즉, 하나보다 많은 손실 함수 (loss function)을 최적화하고자 할 때, 이를 멀티 태스크 러닝이라고 할 수 있다."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "멀티 태스크 러닝을 통해서 신경망 알고리즘의 함수가 배우는 정보량을 증가시키고 일반화를 도움으로써 성능을 더 좋게 할 수 있으나, 태스크 간에 필연적으로 발생하는 충돌(task conflict)로 인하여 각 태스크에 도움이 되 는 방향으로만 알고리즘을 구현하는 것에 한계가 존재한다. 즉 2 이상의 태스크를 트레이닝 함에 있어서, 어느 하나의 태스크로부터 도출되는 결과가, 다른 태스크의 학습에 대해 부정적으로 작용하는 경우가 존재한다. 상술한 바와 같은 논의를 바탕으로, 본 개시(disclosure) 높은 정확도의 신경망 알고리즘을 갖는 멀티 태스크 러닝 모델을 획득하기 위한 방법 및 장치를 제공한다. 구체적으로, 본 개시의 목적은 보조 태스크(auxiliary task)를 이용하여 메인 태스크(main task)의 학습 성능을 크게 향상시키기 위한 전자 장치 및 머신 러닝 수행 방법을 제공함에 있다."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 다양한 실시 예들에 따른 전자 장치는 멀티 태스크 러닝(multi task learning, MTL)을 지원하는 신경 망 알고리즘이 저장되는 메모리, 상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함할 수 있다. 상기 적어도 하나의 프로세서는 상기 신경망 알고리즘의 제1 태스크를 메인 태스크로 결정하고, 상기 신경망 알 고리즘의 제2 태스크를 보조 태스크로 결정하고, 상기 제2 태스크에서 정의된 복수의 클래스에 대응하는 복수의 가중치들을 결정하고, 제1 학습 이미지 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하고, 제2 학습 이미지 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실 을 결정하고, 상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나를 업데이트 할 수 있다. 일 실시 예에 따른 방법은, 상기 인공지능 알고리즘의 제1 태스크를 메인 태스크(main task)로 결정하는 동작, 상기 인공지능 알고리즘의 제2 태스크를 보조 태스크(auxiliary task)로 결정하는 동작, 상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들을 결정하는 동작, 제1 학습 세트에 대해 상기 제1 태 스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하는 동작, 제2 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실을 결정하는 동작, 및 상기 제1 손실과 상기 제2 손실에 기반하여, 상 기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나의 가중치를 업데이트하는 동작을 포함할 수 있다."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 다양한 실시 예에 따르면, 멀티 태스크 러닝의 성능을 효과적으로 향상시킬 수 있는 효과가 있다. 또 한 머신 러닝의 수행 목적에 따라 적응적으로 태스크의 가중치를 조절하여, 효과적인 신경망 알고리즘 모델을 얻을 수 있는 효과가 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은 아래의 기재로부터 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 다양한 실시 예가 첨부된 도면을 참조하여 기재된다. 그러나, 이는 본 발명을 특정한 실시 형 태에 대해 한정하려는 것이 아니며, 본 발명의 실시 예의 다양한 변경(modification), 균등물(equivalent), 및/ 또는 대체물(alternative)을 포함하는 것으로 이해되어야 한다. 도 1은, 다양한 실시 예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버와 통신할 수 있다. 일 실시 예에 따르면, 전자 장치는 서버를 통하여 전자 장치(10 4)와 통신할 수 있다. 일 실시 예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연결 단자 , 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시 예에서는, 전자 장치에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시 예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시 예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시 예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시 예에 따르 면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다 른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시 예에 따르면, 보 조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시 예에 따르면, 리시버는 스피커 와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시 예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시 예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시 예에 따르면, 인터페이스는, 예를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인 터페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시 예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시 예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시 예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시 예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다.배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시 예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시 예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시 예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운 링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시 예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시 예에 따르면, 안테나 모듈은 복수의 안테 나들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통 신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시 예에 따르면, 방사체 이외에 다 른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시 예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시 예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시 예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시 예에 따르면, 전자 장치에서 실행되는 동작들 의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또 는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청 할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있 다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로 서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시 예에 있어서, 외부 의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망 을 이용한 지능형 서버일 수 있다. 일 실시 예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워 크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 메모리는 머신 러닝의 수행을 위한 태스크들 및 상기 태스크를 수행하기 위한 신경망 알고리즘, 목표 함수 및, 이와 관련된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 예를 들면, 전자 장치의 적어도 하나의 다른 구성요소에 관계된 명령어 또는 데이터를 저 장할 수 있다. 상기 명령어는 상기 프로세서 또는 상기 이미지 처리 모듈 중 적어도 하나에 의하여 실행될 수 있다. 상기 명령어는 후보 이미지 수집과 관련한 수집 명령어, 후보 이미지 표시와 관련한 표시 명령어, 선택된 후보 이미지 분석과 관련한 분석 명령어,또는 분석 결과 기반으로 한 적어도 하나의 추천 이미지 생성 및 제공 과 관련한 제공 명령어, 또는 선택 이미지 제공과 관련한 제공 명령어 중 적어도 하나를 포함할 수 있다. 상기 수집 명령어는 예컨대, 통신 모듈 또는 카메라 중 적어도 하나를 이용하여 후보 이미지를 수집하는 동작에 이용되는 명령어일 수 있다. 예컨대, 수집 명령어는 스케줄링된 설정 또는 사용자 입력에 따라 서버 또는 외부 전자 장치 (102, 104) 접속을 수행하는 명령어, 접속된 서버 또는 외부 전자 장치의 후보 이미지 목록 수신과 관련 명령어, 사용자 입력에 따라 선택된 후보 이미지를 요청하여 수집하는 명령어 등을 포 함할 수 있다. 상기 분석 명령어는 예컨대, 주요 특징 객체(ROI) 중심 이미지 분석 명령어, 사용자 Context 기 반 이미지 분석 명령어 등을 포함할 수 있다. 상술한 분석 명령어에 포함된 적어도 하나의 명령어는 설정에 따 라 또는 사용자 입력에 따라 후보 이미지 적용에 이용될 수 있다. 상기 제공 명령어는 주요 특징 객체(region of interest, ROI) 중심 이미지 추천 및 프리뷰(preview) 제공 명령어, 설정될 화면 속성에 기반하여 이미지를 추천하도록 하는 명령어, 실제 이미지를 초과하여 추천하도록 하는 명령어, 수정된 이미지에 여백이 포함된 경 우 여백을 표시하도록 하는 명령어, 전자장치의 화면 형태에 기반하여 이미지 추천하도록 하는 명령어, 또는 이 미지 추천 시 지정된 필터를 적용하도록 하는 명령어 중 적어도 하나를 포함할 수 있다. 도면에는 도시되지 않았으나, 메모리은 분석 데이터베이스, 이미지 데이터베이스를 저장할 수 있다. 상기 분석 데이터베이스는 후보 이미지 분석과 관련한 적어도 하나의 명령어 또는 적어도 하나의 프로그램을 저장할 수 있다. 상기 분석 데이터베이스는 예컨대, 후보 이미지를 객체별로 구분 및 분류하는 분석 알고리즘을 저장할 수 있다. 상기 분석 알고리즘은 예컨대, 후보 이미지의 배경 객체, 사람 객체, 사물 객체, 동물 객체 등을 구분 할 수 있다. 이와 관련하여, 상기 분석 데이터베이스는 사람, 사물, 동물 등을 구분할 수 있는 텍스처 정보 또 는 특징점 정보를 저장할 수 있다. 또한, 분석 데이터베이스는 사람의 얼굴, 동물의 얼굴 등을 구분할 수 있는 특징점 정보 또는 텍스처 정보를 저장할 수 있다. 상기 이미지 데이터베이스는 적어도 하나의 후보 이미지를 저 장할 수 있다. 예컨대, 상기 이미지 데이터베이스는 잠금 화면, 홈 화면, 지정된 어플리케이션 실행 화면 등에 적용되는 적어도 하나의 후보 이미지를 저장할 수 있다. 상기 이미지 데이터베이스에 저장된 후보 이미지는 앞 서 설명한 바와 같이 카메라를 통해 수집되거나, 외부 전자 장치 또는 서버로부터 수신될 수 있다. 다양한 실시 예에 따르면, 상기 이미지 데이터베이스는 특정 후보 이미지를 기반으로 생성된 추천 이미지를 저장할 수 있다. 상기 이미지 데이터베이스는 전자 장치 또는 외부 전자 장치(예: 제1 외부 전자 장치)의 장치 정보를 저장할 수 있다. 또한, 이미지 데이터베이스는 전자 장치 또는 외부 전자 장치에 적용된 선택 이미지들의 정보를 저장할 수 있다.도 2은 본 개시의 다양한 실시 예에 따른 전자 장치의 멀티 태스크 러닝(multi-task learning, MTL) 수행 과정의 예를 도시한다. 본 개시의 실시 예에 따르면, 전자 장치는 인코더, 제1 태스크 모듈, 제2 태스크 모듈 및 디코더를 포함할 수 있다. 도 2을 참고하면, 이미지는 인코더로 전달될 수 있다. 도면에는 도시 되지 않았으나, 전자 장치의 입력 장치로 이미지가 입력되는 과정이 이에 선행될 수 있다. 이미지의 형식에는 제한이 없으며, jpg, mpeg, 및 gif를 포함할 수 있다. 일 실시 예에서, 인코더, 제1 태스크 모듈, 제2 태스크 모듈 및 디코더의 적어도 일부는 하드웨어 모듈로 구현될 수 있다. 일 실시 예에서, 전자 장치의 프로세서(예: 도 1의 프로세서)는 메 모리에 저장된 명령어들을 실행함으로써, 인코더, 제1 태스크 모듈, 제2 태스크 모듈 및 디코더의 전부 또는 일부를 구현할 수 있다. 일 실시 예에서, 적어도 하나의 프로세서는 입력된 이미지가 수행할 태스크를 결정할 수 있다. 도 2을 참 고하면, 적어도 하나의 프로세서는 시맨틱(semantic) 태스크를 보조 태스크로, 뎁스(depth) 태스크를 메인 태스크로 결정할 수 있다. 시맨틱 태스크는 이미지에 포함된 객체들을 분류하는 시맨틱 세그멘테이션 (semantic segmentation)일 수 있고, 뎁스 태스크는 이미지에 포함된 객체들 사이 또는 이미지의 경계와 객체 사이의 거리를 추정하는 뎁스 리그레션(depth regression) 또는 거리 측정일 수 있다. 인코더는 이미 지의 시맨틱 태스크에 관련된 적어도 하나의 클래스 및 상기 적어도 하나의 클래스에 대응하는 가중 치를 결정할 수 있다. 적어도 하나의 프로세서, 또는 인코더는 메모리에 포함된 분석 데이터 베이스 및 이미지 데이터 베이스에 포함된 정보에 기초하여 상기 메인 태스크, 상기 보조 태스크 및 상기 적어도 하나 의 클래스를 결정할 수 있다. 본 문서에서 인코더가 결정/처리하는 내용은 적어도 하나의 프로세서에 의해 수행되는 것으로 이해될 수 있다. 일 실시 예에서, 시맨틱 태스크가 메인 태스크가, 뎁스 태스크가 보조 태스크가 될 수 있다. 다양한 실시 예에서, 제1 태스크가 메인 태스크로 결정되고 제제 태스크가 보조 태스크로 결정될 수 있다. 보조 태스크 는 하나 이상으로 결정될 수 있다. 예를 들어 제2 태스크 밑 제3 태스크가 보조 태스크(들)로 결정될 수 있다. 일 실시 예에서, 인코더가 상기 메인 태스크, 상기 보조 태스크 및 상기 적어도 하나의 클래스를 결정한 후, 이미지는 제1 태스크 모듈 및 제2 태스크 모듈으로 전달될 수 있다. 제1 태스크 모듈 에서, 입력된 이미지에 대하여 시맨틱 태스크가 수행되고, 제2 태스크 모듈에서, 입력된 이미지 에 대하여 뎁스 태스크가 수행될 수 있다. 상기 시맨틱 태스크 및 뎁스 태스크는 메모리에 포함된 분석 데이터 베이스 및 이미지 데이터 베이스에 저장된 분석 알고리즘을 이용하여 수행될 수 있다. 일 실시 예에서, 분석 알고리즘은 멀티 태스크 러닝의 목표 함수(objective function)로 참조될 수 있다. 전자 장치는 입력된 이미지에 대하여 목표 함수에 기반하여 연산을 수행하고, 이를 통해 손실(loss)을 결 정할 수 있다. 손실(loss)은 입력된 이미지의 태스크 수행과 관련하여, 기대 값과 실측 값의 차이를 의미할 수 있으며, 이는 '오차'와 같은 의미로 해석될 수 있다. 상기 손실은 목표 함수와 같이, 소정의 손실 함수를 통해 획득될 수 있다. 상기 목표 함수에 기반하여 연산을 수행함에 있어서, 전자 장치는 메모리에 저장된 신경망 알고리즘 및 목표 함수에 기반하여 연산을 수행할 수 있다. 도 2을 참고하면, 전자 장치는 시맨틱 태스크를 수행하고, 시맨틱 태스크에 대한 손실 값(Ls)을 획득할 수 있다. 또한 전자 장치(10 0)는 뎁스 태스크를 수행하고, 뎁스 태스크에 대한 손실 값(Ld)을 획득할 수 있다. 디코더는 상기 과정에서 획득한 손실 값(Ld, Ls)에 기반하여, 멀티 태스크 러닝의 손실(Lmultitask)을 계산할 수 있다. 일 실시 예에서, 멀티 태스크 러닝의 손실(Lmultitask)은 하기의 수학식 1과 같이 표현될 수 있다. 수학식 1 ws는 시맨틱(semantic) 태스크의 클래스 별 가중치를 의미하고, wd는 뎁스(depth) 태스크의 가중치를 의미한다. 즉, 다시 말해 멀티 태스크 러닝의 수행 결과 획득되는 손실은 각 태스크의 가중치와 각 태스크 수행 결과의 곱 의 합으로 표현될 수 있다. 일 실시 예에서, 디코더는 상기 수학식 1에 기반하여 전자 장치의 멀티 태스크 러닝의 손실 값 (Lmultitask)을 계산할 수 있다. 디코더에서 획득한 손실 값(Lmultitask)은 역전파(back-propagation)를 통하여 손실 값을 최소화하는 방향으로 각 태스크의 가중치를 갱신하는 과정에 활용될 수 있다. 역전파란 태스크 수행 에 대한 예측 결과와 실측 값의 차이를 최소화하는 방향으로 태스크가 포함하는 연산과 관련된 가중치를 갱신하 는 것을 의미한다. 역전파 학습에는 다양한 형태의 경사 강하(gradient descent) 알고리즘이 사용될 수 있다. 경사 강하 알고리즘의 예로는 SGD(stochastic gradient descent) 알고리즘 및 ADAM(adaptive moment estimation) 알고리즘이 있다. 이외에도 다른 종류의 알고리즘이 존재할 수 있으며, 본 개시에 실시 예들은 상 기 예시에 한정되지 않는다. 도 3는 본 개시의 다양한 실시 예에 따른 입력 값에 대한 클래스(class)의 구분의 예를 도시한다. 도 3를 참조 하면, 이미지는 3개의 클래스, 즉 클래스 1, 클래스 2, 클래스 3를 포함할 수 있다. 일 실시 예에서, 클래스란, 입력되는 데이터(예: 이미지)에 포함된 객체의 종류를 의미할 수 있다. 입력되는 데 이터 및 태스크의 종류에 따라 다양한 클래스가 존재할 수 있다. 도면에는 도시되지 않았으나, 하나의 이미지에 복수의 클래스가 존재할 수 있으며, 동일한 이미지라고 하더라도, 태스크의 종류에 따라 상이한 종류의 클래스 를 가질 수 있다. 예를 들어, 숫자를 포함하는 데이터의 경우, 0, 1, 2, 3, 4, 5 등의 숫자의 종류가 각각 클래 스가 될 수도 있다. 다른 예로, 동물들을 포함하는 이미지의 경우, 강아지, 고양이 등 동물의 종(species)이 클 래스가 될 수도 있다. 또 다른 예로, 다수의 언어를 갖는 텍스트의 경우, 한국어, 영어, 일본어 등 언어의 종류 가 클래스가 될 수도 있다. 도면에는 도시되지 않았으나, 태스크의 종류에 따라서, 특정 클래스는 멀티 태스크 러닝에 도움이 되는 방향으 로 작용할 수도 있고, 도움이 되지 않는 방향으로 작용할 수도 있다. 태스크 수행 결과에 따라 역전파 알고리즘 을 사용하여 가중치를 갱신하는 과정에서, 각 태스크의 손실 값을 최소화하기 위한 방향으로 가중치가 변화할 수 있다. 그러나, 태스크 별로 연산 알고리즘, 클래스 및 가중치가 상이하기 때문에, 태스크 별 손실 값을 최소 화하기 위한 역전파 과정에서 태스크 간의 충돌(task conflict)이 발생할 수 있다. 본원 발명은 상술한 태스크 간의 충돌로 인해 발생하는 문제점을 해결하기 위하여, 메인 태스크의 손실 값을 최소화하기 위한 방향으로 보 조 태스크의 가중치를 변화시키는 방법을 제안한다. 예를 들어, 보조 태스크의 Class 1 및 Class 2에 관련된 파라미터가 멀티 태스크 러닝의 태스크 최적화, 즉 메인 태스크의 결과(정확도) 향상에 도움이 되는 것 이고, Class 3의 경우 멀티 태스크 러닝의 태스크 최적화에 도움이 되지 않는 경우, 알고리즘을 학습시키는 전 자 장치는, 알고리즘, 특히 Class 1에 대응하는 가중치 및 Class 2에 대응하는 가중치는 증가시키고, Class 3에 대응하는 가중치는 감소시킬 수 있다. 도 4는 본 개시의 다양한 실시 예에 다른 전자 장치의 프로세서의 구성을 도시한다. 프로세서는 도 1의 프로세서일 수 있다. 도 4를 참조하면, 프로세서는 인코더, 제1 태스크 모듈, 제2 태스크 모듈 및 디코더 로 구성될 수 있다. 제1 태스크 모듈은 연산부와 손실 검출부를 포함할 수 있다. 제2 태스크 모 듈은 연산부와 손실 검출부를 포함할 수 있다. 도면에는 도시되지 않았으나, 연산부(426, 436) 는 복수의 층(layer)을 포함할 수 있다. 인코더는 메모리에 저장된 복수의 태스크 중 하나를 메인 태 스크(main task)로, 다른 하나를 보조 태스크(auxiliary task)로 결정할 수 있다. 멀티 태스크 러닝의 장점을 활용하기 위하여, 일반적으로 메인 태스크의 최적화에 도움이 되는 적합한 보조 태 스크를 찾는 것이 요구된다. 예를 들어, 메인 태스크와 관련이 되는 태스크를 사용하는 방법이 있을 수 있다. 예를 들어, 방향을 예측하기 위하여 도로의 특성을 예측하거나, 얼굴 탐지를 위하여, 포즈를 감지하고 얼굴의 구성 요소(눈, 코, 입 등)을 추론하는 경우가 있다. 또는 메인 태스크의 목적과 반대되는 태스크를 보조 태스크 로 사용하는 방법이 있다. 즉, 메인 태스크와 보조 태스크를 적대적(adversarial)으로 경쟁시키며 최적화하는 방법이 있을 수 있다. 상술한 바와 같이, 인코더은 메모리에 저장된 복수의 태스크들 중 어느 하나를 메인 태스크로, 다른 하나를 보조 태스크로 결정할 수 있다. 메모리에 저장된 복수의 태스크의 예에는 시맨틱 세그멘 테이션(semantic segmentation) 및 뎁스 리그레션(depth regression) 이 있을 수 있다. 이외에도 개체명 인식(named entity recognition), 품사 분류(part-of speech tagging)이 있을 수 있다. 상술한 메모리에 저장된 복 수의 태스크의 예들은 예시에 불과하며, 다른 목적 및 수단을 갖는 태스크를 포함할 수 있다. 이하의 발명의 설 명 및 청구 범위의 해석에 있어서, 상술한 예들은 예시로서만 해석되어야 하며, 이로써 한정되어 해석되지 않는 다. 일 실시 예에서, 시맨틱 세그멘테이션(semantic segmentation), 또는 의미론적 분할이란, 입력된 데이터가 이미 지인 경우를 예로 들면, 이미지 또는 영상의 모든 픽셀을 분류하여, 클래스 별로 분할된 이미지를 산출하는 기 법을 의미할 수 있다. 예를 들어, 거리 풍경 이미지의 의미론적 분할은 풍경 내 각 자동차와 연관된 모든 픽셀 들을 \"자동차\"로 레이블링(labeling)할 수 있고, 자전거에 탄 사람과 관련된 모든 픽셀들을 \"자전거\"로 레이블 링할 수 있으며, 풍경 내 걸어가는 사람들과 관련된 모든 픽셀들을 \"보행자\"로 레이블링할 수 있다. 또한, 의미 론적 분할 태스크는 객체의 개별 클래스 레이블에 대응하는 이미지의 픽셀들을 식별하는 개별 클래스 레이블을 이미지 내 객체의 개별 클래스 각각(예: 풍경 내 자동차 각각)에 대하여 생성할 수 있다. 예를 들어, 의미론적 분할 태스크가 이미지에서 3대의 자동차와 2명의 보행자를 검출하는 경우, 5개의 개별 클래스 레이블들이 출력 된다. 각 자동차 별로 하나의 개별 클래스 레이블을 출력하고 각 보행자 별로 하나의 개별 클래스 레이블을 출 력하는 것이다. 일 실시 예에서, 뎁스 리그레션(depth regression)이란 입력된 데이터가 이미지인 경우를 예로 들면, 입력된 이 미지의 깊이 정보를 이용하여, 깊이 이미지 내 객체들의 위치 및 객체의 수를 탐지하는 기법을 의미할 수 있다. 입력되는 이미지의 깊이 정보를 기반으로 다양한 깊이 정보를 기반으로 학습되어 모델링된 모델링 값에 따라 객 체들의 위치 및 객체의 수를 탐지한 후, 탐지된 객체들에 대한 좌표 값을 획득할 수 있다. 깊이 예측은 거리 측 정이라고도 표현될 수 있으며, 거리 측정은 주행 로봇을 비롯하여 카메라를 탑재한 드론(drone) 및 증강 현실, 가상 현실과 같은 콘텐츠 분야와 자율주행 등 다양한 분야에서 활용될 수 있다. 딥러닝에 기반한 거리 측정기술 은 사용되는 입력 영상의 수에 따라 양안 영상기반 방법 과 단안 영상기반 방법으로 나뉠 수 있고, 지면 진실 (ground truth)을 사용하는지 여부에 따라 지도학습방법(supervised method)과 비지도학습방법(unsupervised method) 등으로 구별할 수 있다. 또한, 이미지 복원을 통한 자기지도학습(self-supervised method)의 방법도 존 재할 수 있다. 일 실시 예에서, 인코더는 메모리에 저장된 복수의 태스크들 중, 어느 하나를 메인 태스크, 다른 하나를 보조 태스크로 결정한 후, 입력된 데이터와 보조 태스크의 종류에 기반하여 입력된 데이터에 대한 적어도 하나 의 클래스를 결정할 수 있다. 일 실시 예에서, 제1 태스크 모듈은 인코더에서 결정된 메인 태스크를 수행하기 위한 구성일 수 있다. 제1 태스크 모듈은 인코더로부터 데이터를 전달받고, 제1 태스크를 수행할 수 있다. 전자 장치 는 제1 태스크를 수행함에 있어, 메모리에 저장되어 있는 데이터 베이스에 기반하여 제1 태스크를 수 행할 수 있다. 제1 태스크 모듈은 연산부 및 손실 검출부를 포함할 수 있다. 연산부는 제1 태스크를 수행하기 위한 신경망 알고리즘을 이용하여, 입력된 데이터에 대한 연산을 수행할 수 있다. 손실 검출 부는 연산 결과에 따른 손실을 검출할 수 있다. 일 실시 예에서, 제2 태스크 모듈은 인코더에서 결정된 보조 태스크를 수행하기 위한 구성일 수 있다. 제2 태스크 모듈은 인코더로부터 데이터를 전달받고, 제2 태스크를 수행할 수 있다. 전자 장치(40 0)는 제2 태스크를 수행함에 있어, 메모리에 저장되어 있는 데이터 베이스에 기반하여 제2 태스크를 수행 할 수 있다. 제2 태스크 모듈은 연산부 및 손실 검출부를 포함할 수 있다. 연산부는 제2 태스크 를 수행에 사용되는 신경망 알고리즘을 이용하여, 입력된 데이터에 대한 연산을 수행할 수 있다. 손실 검출부 는 연산 결과에 따른 손실을 검출할 수 있다. 도 5는 본 개시의 실시 예에 따른 멀티 태스크 러닝을 위한 전자 장치의 동작을 도시한다. 도 5는 메인 태스크 성능을 향상시키는 방향으로 멀티 태스크 러닝 모델을 최적화하는 과정을 도시한 것이다. 일 실시 예에 따르면, 동작 501에서, 전자 장치는 제1 태스크를 메인 태스크(main task)로 결정하고, 제2 태스크를 보조 태스크(auxiliary task)로 결정할 수 있다. 상기 메인 태스크와 보조 태스크는 고정된 것은 아니 며, 경우에 따라 제2 태스크가 메인 태스크로, 제1 태스크가 보조 태스크로 결정될 수도 있다. 이는 입력되는 데이터 및 머신 러닝 모델의 수행 목적에 따라 결정될 수 있다. 도면에는 도시되지 않았으나, 전자 장치는 데이터를 입력 장치를 통하여 입력 받는 과정이 더 수행할 수 있다. 일 실시 예에서, 메모리에 저장된 복수의 태스크의 예에는 시맨틱 세그멘테이션(semantic segmentation) 및 뎁 스 리그레션(depth regression) 이 있을 수 있다. 이외에도 개체명 인식(named entity recognition), 품사 분 류(part-of speech tagging)가 있을 수 있다. 상술한 메모리에 저장된 복수의 태스크의 예들은 예시에 불과하며, 다른 목적 및 수단을 갖는 태스크를 포함할 수 있다. 이하의 발명의 설명 및 청구 범위의 해석에 있 어서, 상술한 예들은 예시로서만 해석되어야 하며, 이로써 한정되어 해석되지 않는다. 일 실시 예에 따르면, 전자 장치가 메인 태스크 및 보조 태스크를 결정한 후, 동작 503에서, 전자 장치 는 제2 태스크에서 정의된 복수의 클래스에 대응하는 복수의 가중치를 결정할 수 있다. 도면에는 도시되지 않았으나, 전자 장치는 보조 태스크에 대하여, 복수의 클래스를 결정하는 동작을 수행 할 수 있다. 전자 장치는 메인 태스크에 대하여도 복수의 클래스를 결정할 수 있다. 태스크의 목적, 수행 되는 연산 및 입력되는 데이터의 종류에 기반하여 상술한 보조 태스크의 복수의 클래스의 결정 및 메인 태스크 의 복수의 클래스가 결정될 수 있다. 전자 장치는 메인 태스크 및 보조 태스크에 대한 복수의 클래스에 대 응하는 복수의 가중치를 결정하는 동작을 더 수행할 수 있다. 태스크의 목적, 수행되는 연산 및 입력되는 데이 터의 종류에 기반하여 상술한 보조 태스크의 복수의 클래스 및 메인 태스크의 복수의 클래스에 대응하는 복수의 가중치가 결정될 수 있다. 또한 상기 보조 태스크의 복수의 클래스에 대응하는 복수의 가중치는 멀티 태스크 러 닝의 수행에 따라 일부가 증가, 유지 또는 감소될 수 있다. 더하여, 상기 메인 태스크의 복수의 클래스에 대응 하는 복수의 가중치 및 보조 태스크의 복수의 클래스에 대응하는 복수의 가중치의 전부 또는 일부만이 증가, 유 지 또는 감소될 수 있다. 일 실시 예에 따르면, 동작 505에서 전자 장치는 제1 학습 세트에 대해 제1 태스크 및 제2 태스크를 수행 하여, 제1 손실을 결정할 수 있다. 동작 507에서 전자 장치는 제2 학습 세트에 대해 제1 태스크 및 제2 태 스크를 수행하여 제2 손실을 결정할 수 있다. 상기 제1 학습 세트와 상기 제2 학습 세트는 예를 들어, 이미지의 묶음(batch)일 수 있으며, 다른 형태의 복수의 데이터의 세트일 수 있다. 상기 제1 학습 세트와 상기 제2 학습 세트는 전부 상이하거나, 일부만이 상이하거나, 동일한 것일 수 있다. 일 실시 예에서, 전자 장치는 상기 제1 학습 세트에 대하여 제1 태스크 및 제2 태스크를 수행한 이후에 상기 제2 학습 세트를 수행할 수 있다. 이하에서는, 일 실시 예에 따른 손실의 구체적인 결정 방법을 설명한다. 시맨틱 세그멘테이션(semantic segmentation) 태스크의 손실(loss)을 Ls, 뎁스 리그레션(depth regression) 태 스크의 손실을 Ld로 두었을 때, 기존의 알려진 멀티 태스크 러닝은 하기와 같은 수학식을 이용하여 손실을 결정 할 수 있다. 수학식 2"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "상기 수학식 2에서, ws는 시맨틱 세그멘테이션 태스크의 가중치를 의미한다. ws는 클래스 별로 대응하여 정의된 가중치를 의미하는 것은 아니다. 다만, 본 개시의 실시 예에 따르면, ws를 클래스 별로 나누고, 이를 레이블링하 여, ws(c)로 클래스 레이블의 개수만큼 설정하는 방법을 통해 손실을 결정할 수 있다. 이에 따라, 시맨틱 세그멘 테이션의 손실(Ls)은 하기와 같은 수학식 3을 통해 표현될 수 있다. 수학식 3"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "상기 수학식 3에서, 'N'은 입력된 이미지(I)의 총 픽셀들의 수를 지시한다. yi는 픽셀의 i번째 위치에서의 트루 (true) 레이블을 지시하고, oi는 i번째 위치에서의 예측 레이블(predicted label)을 지시한다. C는 시맨틱 세 그멘테이션 태스크의 모든 클래스 레이블들의 집합을 의미한다. Ds는 yi와 oi의 거리를 계산하기 위한 함수를 의 미하고, ws(c)는 클래스 c의 가중치를 의미한다. 뎁스 리그레션의 손실(Ld)은 아래의 수학식 4에 의하여 계산될 수 있다. 수학식 4"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "dit는 i번째 위치에서의 트루(true) 뎁스를 지시하고, di는 i번째 위치에서의 예측(predicted) 뎁스를 지시한다. Dd의 경우, dit 와 di의 거리를 계산하는 함수를 의미한다. 이 경우, 시맨틱 세그멘테이션을 보조 태스크로 두고, 뎁스 리그레션을 메인 태스크로 두어, 뎁스 리그레션의 성능을 향상시키기 위하여, 경사도 강하(gradient descent) 알고리즘을 사용할 수 있다. 구체적으로, 을 유도할 수 있는 방향으로 보조 태스크의 클래스 레이블별 가중치를 갱신할 수 있다. 't'는 멀 티 태스크 러닝의 반복(iteration)을 지시할 수 있다. 을 갱신하기 위한 방법으로, 경사 스텝(gradient step)을 구할 수 있다. 이 때, 경사 강하(gradient descent) 알고리즘의 수식은 하기와 같을 수 있다. 수학식 5"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "α 값은 상수에 해당할 수 있다. 상기 수학식 5에서, 값은 직접 구하는 것이 불가능할 수 있다. 이 문제를 해결하기 위하여, 본 개시의 실 시 예는 입력되는 이미지 묶음(batch) 각각의 손실 값을 사용한 미분 값의 근사화를 이용할 수 있다. 구체적으 로, 은 하기와 체인 룰(chain rule)을 사용하여 하기의 수학식 6과 같이 나타낼 수 있다.수학식 6"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "수학식 6의 값은 직접 미분할 수 있지만, 값은 미분이 불가능하다. 따라서 입력된 이미지 묶음 (batch) 각각의 값으로 하기의 수학식 7과 같은 근사화 방식을 이용할 수 있다. 수학식 7"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "상기 수학식 7에서 't'는 이미지 묶음의 입력 시간/순서를 의미한다. 최종적으로, 상술한 수학식들에 기초하여, 경사 강하 알고리즘은 하기와 같이 나타낼 수 있다. 수학식 8"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "상기 수학식 8에서, 초기 시맨틱 세그멘테이션 태스크와 뎁스 태스크의 손실 값을 의미한다. 상술한 방식을 통하여 을 업데이트하면 메인 태스크인 뎁스 예측 태스크에만 도움이 되는 방향으로 멀티 태스크 러닝을 수행할 수 있다. 상술한 방식을 사용하여 동작 509에서, 전자 장치는 상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나를 갱신할 수 있다. 도 6은 본 개시의 다양한 실시 예에 따른 이미지 묶음의 입력에 대한 멀티 태스크 러닝을 수행의 예를 도시한다. 일 실시 예에서, 전자 장치는 메인 태스크와 보조 태스크를 결정하는 과정을 수행할 수 있다. 본 개시의 실시 예에 따르면, 학습 이미지 세트이 전자 장치에 입력될 수 있다. 학습 이미지 세트는 일 예 시에 불과하며, 이미지 뿐아니라 다른 종류의 데이터가 전자 장치에 입력될 수 있다. 620-1 내지 620-N은 학습 이미지 세트에서 입력되는 이미지 묶음을 시간의 순서대로 나타낸 것이다. 일 실시 예에서, 이미지 묶음의 수신 후, 전자 장치는 메인 태스크와 보조 태스크를 결정할 수 있다. 멀티 태스크 러닝의 장점을 활용하기 위하여, 일반적으로 메인 태스크의 최적화에 도움이 되는 적합한 보조 태스크를 찾는 것이 요구된다. 예를 들어, 전자 장치는 메인 태스크와 관련이 되는 태스크를 보조 태스크로 결정할 수 있다. 예를 들어, 전자 장치는 방향을 예측하기 위하여 도로의 특성을 예측하거나, 얼굴 탐지를 위하여, 포즈를 감지하고 얼굴의 구성 요소(눈, 코, 입 등)를 추론할 수 있다. 다른 예를 들어, 전자 장치(60 0)는 메인 태스크의 목적과 반대되는 태스크를 보조 태스크로 결정할 수 있다. 즉, 메인 태스크와 보조 태스크 를 적대적(adversarial)으로 경쟁시키며 최적화하는 방법이 있을 수 있다. 상술한 바와 같이, 전자 장치는 메모리에 저장된 복수의 태스크들 중 어느 하나를 메인 태스크로, 다른 하나를 보조 태스크로 결정할 수 있다. 도 6에 따른 실시 예에 따르면, 결정된 보조 태스크는 멀티 태스크 러닝 과정에서 메인 태스크의 성능을 향상시키는 양 순환(positive transfer)만을 유도하는 목적을 가질 수 있다. 일 실시 예에서, 전자 장치는 이미지 묶음(620-1)에 대하여, 메인 태스크 및 보조 태스크를 수행할 수 있 다. 입력된 이미지 묶음에 대하여, 메인 태스크 및 보조 태스크를 수행하기 위한 함수 또는 신경망 알고리즘이 존재할 수 있다. 상기 함수 또는 신경망 알고리즘은 전자 장치 의 메모리에 저장된 데이터 베이스에 포함 될 수 있다. 일 실시 예에서, 전자 장치는 보조 태스크에 대해 복수의 클래스를 결정할 수 있다. 또한, 전자 장치(60 0)는 상기 복수의 클래스들 각각에 상응하는 레이블(label)을 결정할 수 있다. 전자 장치는 상기 복수의 클래스들 각각의 클래스 레이블에 따라 가중치(weight)를 결정할 수 있다. 예를 들어, 시맨틱 세그멘테이션이 보조 태스크인 경우, 전자 장치는 클래스 레이블에 따라, 사람, 자동차, 차도, 인도, 하늘, 건물 및 신호 등에 각각 다른 가중치를 부여할 수 있다. 일 실시 예에서. 전자 장치는 이미지 묶음(620-1)에 대하여 메인 태스크 및 보조 태스크를 수행하여, 손실 값(Lmain(t-1), Laux(t-1))을 구할 수 있다. 이 때, 손실 값을 계산하는데 연산(630-1)이 사용될 수 있다. 예를 들어, 전자 장치는 함수 또는 신경망 알고리즘에 이미지 묶음(620-1)을 일정 개수만큼(예: 64개) 입력하고, 630-1을 사용하여 상기 메인 태스크 및 보조 태스크의 수행 결과에 대한 손실 값(출력 값과 기대 값 과의 차이)을 계산할 수 있다. 이후에 손실 값을 시간 t에 할당할 수 있다. 이 경우에, 이미 시간 t에 할당된 손실 값이 존재하는 경우, 기존에 t에 할당된 값은 손실 값은 t-1에 할당될 수 있다. 일 실시 예에서, 연산(630-1)이 수행된 후, 이미지 묶음(620-2)에 대하여, 메인 태스크 및 보조 태스크가 수행 될 수 있다. 이에 따라, 손실 값(Lmain(t), Laux(t))이 획득될 수 있다. 이 때, 손실 값을 계산하는데 연산(630- 2)이 사용될 수 있다. 상기 계산된 손실 값(Lmain(t-1), Laux(t-1), Lmain(t), Laux(t))에 기반하여 다음 입력될 이 미지 묶음(620-3)의 메인 태스크 및 보조 태스크의 수행에 사용되는 연산의 가중치(w(t+1))이 결정될 수 있다. 일 실시 예에서, 결정된 w(t+1)을 사용하여, 이미지 묶음(630-3)에 대하여 메인 태스크 및 보조 태스크가 수행되 고, 이에 따라 손실 값(Lmain(t+1), Laux(t+1))가 결정될 수 있다. 결정된 Lmain(t), Laux(t), Lmain(t+1), Laux(t+ 1))에 기반하여, 이미지 묶음(620-t+1)의 메인 태스크 및 보조 태스크에 사용될 연산(630-3)의 가중치(w(t+2))가 결정될 수 있다. 일 실시 예에서, 보조 태스크의 클래스 별 가중치와 관련하여, 메인 태스크의 손실의 그라디언트(gradient)를 결정하는 과정이 함께 수행될 수 있다. 구체적으로, 메인 태스크의 손실 값(Lmain)의 그라디언트를 시맨틱 세그멘 테이션의 클래스별 가중치의 그라디언트에 관하여 계산할 수 있다. 이 때, 연산 630-1 및 630-2에서 구해진 손 실 값에 기반하여 Lmain(t) - Lmain(t-1)를 계산하고, 이를 이용하여 Lmain(t) 값을 근사화 할 수 있다. 근사화 과 정은 상술한 수학식 8에 기반하여 수행될 수 있다. 상술한 연산 과정은 Lmain이 수렴할 때까지 반복될 수 있다. Lmain이 수렴되는지 여부는 Lmain 값이 특정 임계 값 이하로 측정되는지 여부에 따라 결정될 수 있다. 상기 특정 임계 값은 전자 장치에 의하여 미리 정해진 값 일 수 있다. 도 7은 본 개시의 다양한 실시 예에 따른 이미지 묶음의 입력에 대한 전자 장치의 멀티 태스크 러닝을 수행 과 정의 예를 도시한다. 일 실시 예에 따르면, 동작 710에서, 전자 장치는 이미지 묶음을 수신할 수 있다. 도 7은 이미지를 예로 들어 작성되었으나, 이미지 외에 다른 종류의 데이터 묶음이 입력될 수 있다. 이미지 묶음을 수신한 후, 전자 장치는 제1 태스크와 제2 태스크의 수행 이전에, 제1 태스크를 메인 태스크로, 제2 태스크를 보조 태스크 로 결정할 수 있다. 제1 태스크와 제2 태스크는 전자 장치의 메모리에 저장된 복수의 태스크들 중 어느 하 나일 수 있다. 일 실시 예에서, 전자 장치는 상기 제2 태스크에 복수의 클래스를 결정할 수 있다. 전자 장치는 결정 된 복수의 클래스 각각에 대응하는 복수의 가중치를 결정할 수 있다. 이 후 동작 720에서, 전자 장치는 입 력된 이미지 묶음에 대하여, 제1 태스크와 제2 태스크를 수행하고, 태스크 수행 결과에 대한 측정 값과 태스크수행에 대한 기대 값과의 차이에 상응하는 손실 값을 결정할 수 있다. 일 실시 예에 따르면, 동작 730에서, 전자 장치는 제1 태스크의 손실 값에 대한 경사도(gradient)를 결정 할 수 있다. 상기 제1 태스크의 손실 값에 대한 경사도는 보조 태스크의 클래스 별 가중치에 기반하여 결정될 수 있다. 일 실시 예에 따르면, 동작 740에서, 전자 장치는 제2 태스크의 클래스 별 가중치를 결정할 수 있다. 제1 태스크의 손실 값이 감소하도록 제2 태스크의 클래스 별 가중치를 결정할 수 있다. 구체적으로, 동작 730에서 결정된 제1 태스크의 손실 값에 대한 경사도(gradient)에 기반하여 제2 태스크의 클래스 별 가중치를 결정할 수 있다. 경사도(gradient)는 경사 강하(gradient descent) 방식 또는 상술한 수학식 8에 의하여 계산될 수 있다. 일 실시 예에 따르면, 동작 750에서, 전자 장치는 제1 태스크의 손실 값이 임계 값에 수렴하는지 여부를 결정할 수 있다. 구체적으로, 제1 태스크의 손실 값이 전자 장치에 의하여 미리 정해진 값 이하인지 여부 를 결정할 수 있다. 만약 제1 태스크의 손실 값이 임계 값에 수렴한다고 판단한 경우, 전자 장치는 멀티 태스크 러닝 동작을 종료할 수 있다. 만약 제1 태스크의 손실 값이 임계 값에 수렴하지 않는다고 판단한 경우, 전자 장치는 동작 710 동작으로 돌아가, 도 7의 과정을 반복할 수 있다. 도 8은 본 개시의 다양한 실시 예에 따른 입력된 이미지에 대한 멀티 태스크 러닝 수행 결과의 예를 도시한다. 도 8은 보조 태스크에서 정의된 복수의 클래스 각각의 영향력에 따른 메인 태스크의 손실 값을 분석하여, 보조 태스크의 클래스별 가중치를 업데이트하고, 향후 보조 태스크에서 발생하는 복수의 클래스 각각의 영향력을 조 절하는 과정의 예를 도시한 것이다. 동작 810-1의 경우, 시간 (t-1)에서 전자 장치에 입력된 이미지 묶음에 대하여 메인 태스크가 수행되는 것 을 도시한다. 동작 810-2의 경우, 시간(t-1)에서 전자 장치에 입력된 이미지 묶음에 대하여 보조 태스크가 수행되는 것을 도시한다. 이 때, 보조 태스크에는 복수의 클래스(c)가 포함될 수 있으며, wc는 복수의 클래스 별 가중치를 의미한다. 도 8과 관련된 설명에서 \"시간\"은 \"횟수\" 또는 \"차수\" 등으로 대체될 수 있다. 동작 820-1의 경우, 시간(t)에서 전자 장치에 입력된 이미지 묶음에 대하여 메인 태스크가 수행되는 것을 도시한다. 동작 820-2의 경우, 시간 (t)에서 전자 장치에 입력된 이미지 묶음에 대하여 보조 태스크가 수 행되는 것을 도시한다. 이 경우 아직 보조 태스크에 대한 업데이트가 수행되기 전이므로, 보조 태스크가 포함하 고 있는 복수의 클래스 별 가중치는 wc로 동일하다. 동작 830은 동작 810-1, 810-2, 820-1, 820-2의 메인 태스크 및 보조 태스크의 수행 결과에 따라 획득된 메인 태스크의 손실 값을 최소화하기 위하여, 경사 강하 방법을 사용하여 보조 태스크의 가중치를 업데이트 하는 것 을 개략적으로 도시한 것이다. 동작 830의 연산에 따라, 보조 태스크에 포함된 복수의 클래스 별 가중치는 업데 이트 되고, 업데이트된 가중치는 wc new와 같다. 업데이트된 보조 태스크에 포함된 복수의 클래스 별 가중치는 이후 시간(t+1)에서 전자 장치에 입력 되는 이미지 묶음에 대하여 수행되는 메인 태스크 및 보조 태스크에 사용될 수 있다. 상술한 과정은 메인 태스 크의 손실 값이 임계 값 이하로 수렴할 때까지 반복될 수 있다. 상술한 바와 같은 본 개시의 일 실시 예에 따른 전자 장치는, 멀티 태스크 러닝(multi task learning, MTL)을 지원하는 인공 지능 알고리즘이 저장되는 메모리, 상기 메모리와 전기적으로 연결된 적어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는 상기 인공지능 알고리즘의 제1 태스크를 메인 태스크(main task)로 결정하고, 상기 인공지능 알고리즘의 제2 태스크를 보조 태스크(auxiliary task)로 결정하고, 상기 제2 태스크 에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들을 결정하고, 제1 학습 세트에 대해 상기 제1 태 스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하고, 제2 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실을 결정하고, 상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중치들 중 적어도 하나의 가중치를 업데이트할 수 있다. 일 실시 예에 있어서, 상기 제1 태스크는 뎁스 리그레션(depth regression)이고, 상기 제2 태스크는 시맨틱 세 그멘테이션(semantic segmentation)일 수 있다. 일 실시 예에 있어서, 상기 제2 태스크에서 정의된 상기 적어도 하나의 클래스는, 이미지에서 식별이 가능한 적 어도 하나의 객체를 포함할 수 있다. 일 실시 예에 있어서, 상기 적어도 하나의 객체는, 사람, 도로, 자동차, 건물 중 적어도 하나를 포함할 수 있다. 일 실시 예에 있어서, 상기 제1 학습 세트는 복수 개의 제1 이미지들을 포함하고 상기 제2 학습 세트는 상기 제 1 이미지들과 다른 복수 개의 제2 이미지들을 포함할 수 있다. 일 실시 예에 있어서, 전자 장치는, 상기 제1 학습 세트의 상기 제2 태스크의 수행에 대한 기대 값과 측정 값의 차이에 기반하여, 상기 제1 학습 세트에 대한 상기 제1 손실을 획득하도록 더 구성되고, 상기 적어도 하나의 가 중치는 상기 제1 학습 세트에 대한 손실을 보정하기 위한 가중치 중 상기 제2 손실을 상기 제1 손실보다 감소시 키는 적어도 하나의 파라미터의 가중치에 해당할 수 있다. 일 실시 예에 있어서, 상기 제1 학습 세트에 대한 제1 손실은, 상기 적어도 하나의 클래스 각각에 대한 손실에 기반하여 결정될 수 있다. 일 실시 예에 있어서, 전자 장치는 상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중 치들에 기반하여, 상기 제1 손실의 경사도(gradient) 및 상기 제2 손실의 경사도를 결정하도록 구성될 수 있다. 일 실시 예에 있어서, 전자 장치는 상기 제2 손실과 상기 제1 손실의 차이, 및 근사 알고리즘을 이용하여 상기 제2 손실의 경사도를 획득할 수 있다. 일 실시 예에 있어서, 상기 근사 알고리즘은,"}
{"patent_id": "10-2020-0067341", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "이고, 상기 N은 입력된 학습 세트의 픽셀 수에 해당하고, 상기 yi는 상기 입력된 학습 세트의 i번째 위치에서의 트루 (true) 값에 해당하고, 상기 oi는 상기 입력된 학습 세트의 i번째 위치에서의 예측 값에 해당하고, 상기 Ld는 상기 메인 태스크의 손실 값을 의미하고, 상기 Ls는 상기 보조 태스크의 손실 값을 의미하고, 상기 ws(c)는 상기 보조 태스크의 복수의 클래스별 가중치를 의미하고, 상기 c는 상기 보조 태스크의 복수의 클래스에 해당할 수 있다. 일 실시 예에 있어서, 전자 장치는 상기 제1 손실 값과 상기 제2 손실 값의 차이가 임계 값 이하인지 여부를 결 정하도록 더 구성될 수 있다. 상술한 바와 같은 본 개시의 일 실시 예에 따른 전자 장치의 동작 방법은, 상기 인공지능 알고리즘의 제1 태스 크를 메인 태스크(main task)로 결정하는 동작, 상기 인공지능 알고리즘의 제2 태스크를 보조 태스크(auxiliary task)로 결정하는 동작, 상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들을 결정 하는 동작, 제1 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제1 손실을 결정하는 동 작, 제2 학습 세트에 대해 상기 제1 태스크 및 상기 제2 태스크를 수행함으로써 제2 손실을 결정하는 동작, 및 상기 제1 손실과 상기 제2 손실에 기반하여, 상기 제2 손실이 상기 제1 손실보다 감소하도록 상기 복수의 가중 치들 중 적어도 하나의 가중치를 업데이트하는 동작을 포함할 수 있다. 일 실시 예에 있어서, 상기 제1 태스크는 뎁스 리그레션(depth regression)이고, 상기 제2 태스크는 시맨틱 세 그멘테이션(semantic segmentation)일 수 있다. 일 실시 예에 있어서, 상기 제2 태스크에서 정의된 상기 적어도 하나의 클래스는, 이미지에서 식별이 가능한 적 어도 하나의 객체를 포함할 수 있다. 일 실시 예에 있어서, 상기 적어도 하나의 객체는, 사람, 도로, 자동차, 건물 중 적어도 하나를 포함할 수 있다. 일 실시 예에 있어서, 상기 제1 학습 세트는 복수 개의 제1 이미지들을 포함하고 상기 제2 학습 세트는 상기 제 1 이미지들과 다른 복수 개의 제2 이미지들을 포함할 수 있다. 일 실시 예에 있어서, 상기 제1 학습 세트의 상기 제2 태스크의 수행에 대한 기대 값과 측정 값의 차이에 기반 하여, 상기 제1 학습 세트에 대한 상기 제1 손실을 획득하는 동작을 더 포함할 수 있고, 상기 적어도 하나의 가 중치는 상기 제1 학습 세트에 대한 손실을 보정하기 위한 가중치 중 상기 제2 손실을 상기 제1 손실보다 감소시 키는 적어도 하나의 파라미터의 가중치에 해당할 수 있다. 일 실시 예에 있어서, 상기 제1 학습 세트에 대한 제1 손실은, 상기 적어도 하나의 클래스 각각에 대한 손실에 기반하여 결정될 수 있다. 일 실시 예에 있어서, 상기 제2 태스크에서 정의된 적어도 하나의 클래스에 대응하는 복수의 가중치들에 기반하 여, 상기 제1 손실의 경사도(gradient) 및 상기 제2 손실의 경사도를 결정하는 동작을 더 포함할 수 있다. 일 실시 예에 있어서, 상기 제2 손실 값과 상기 제1 손실 값의 차이, 및 근사 알고리즘을 이용하여 상기 제2 손 실의 경사도를 획득하는 동작을 더 포함할 수 있다. 본 문서에 개시된 다양한 실시 예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨 어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시 예에 따른 전자 장치는 전술한 기기들에 한정 되지 않는다. 본 문서의 다양한 실시 예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시 예들로 한정하려는 것이 아니며, 해당 실시 예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한 다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아 이템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구 들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \" 제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분 하기 위해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤 (예: 제 1) 구성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이 런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시 예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포 함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부가 될 수 있다. 예를 들면, 일 실시 예에 따르면, 모듈은 ASIC(application-specific integrated circui t)의 형태로 구현될 수 있다. 본 문서의 다양한 실시 예들은 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, ‘비일시적’은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전 자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경 우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시 예에 따르면, 본 문서에 개시된 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래 될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD- ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시 예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시 예들에 따르면, 모듈, 프로그램 또는 다른 구 성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2020-0067341", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 다양한 실시 예에 따른 전자 장치의 구성을 도시한다. 도 2는 본 개시의 다양한 실시 예에 다른 전자 장치의 프로세서의 구성을 도시한다. 도 3은 본 개시의 다양한 실시 예에 따른 멀티 태스크 러닝(multi-task learning, MTL)의 태스크 수행 과정의 예를 도시한다.도 4는 본 개시의 다양한 실시 예에 따른 입력 값에 대한 클래스(class)의 구분의 예를 도시한다. 도 5는 본 개시의 다양한 실시 예에 따른 멀티 태스크 러닝을 위한 전자 장치의 동작을 도시한다. 도 6은 본 개시의 다양한 실시 예에 따른 이미지 묶음의 입력에 대한 전자 장치의 멀티 태스크 러닝을 수행의 예를 도시한다. 도 7은 본 개시의 다양한 실시 예에 따른 이미지 묶음의 입력에 대한 전자 장치의 멀티 태스크 러닝을 수행 과 정의 예를 도시한다. 도 8은 본 개시의 다양한 실시 예에 따른 입력된 이미지에 대한 멀티 태스크 러닝 수행 결과의 예를 도시한다."}
