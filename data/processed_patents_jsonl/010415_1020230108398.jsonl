{"patent_id": "10-2023-0108398", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0018343", "출원번호": "10-2023-0108398", "발명의 명칭": "동반지식의 추출을 통한 결합지식의 생성방법", "출원인": "박종배", "발명자": "박종배"}}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "(a) 지식데이터베이스에서 사용자단말로부터 입력된 키워드를 포함하는 지식데이터인 피검색지식데이터들을 추출하는 단계(b) 상기 피검색지식데이터들에 대한 동반지식데이터들을 추출하는 단계(c) 상기 추출된 지식데이터들의 중복을 제거하는 단계(d) 상기 중복이 제거된 지식데이터들을 결합하여 결합지식을 생성하는 단계를 포함하되,(e)상기 지식데이터베이스는 상기 지식데이터와 이에 대응하는 상기 동반지식데이터들을 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서 상기 (d)단계는,(f)상기 중복이 제거된 지식데이터들을 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계를 포함하며,상기 (e)는,(g)상기 지식데이터베이스는 지식데이터와 이에 대응하는 체계정보데이터 및 동반정보데이터를 데이터베이스화한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서 상기 (f)단계는,(h)상기 중복이 제거된 지식데이터들을 수형도 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계를 포함하며,상기 (g)는,(i)상기 지식데이터베이스는 지식데이터와 이에 대응하는 수형도 방식의 체계정보데이터 및 동반정보데이터를데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서 상기 (h)단계는,(j)상기 중복이 제거된 지식데이터들을 목차(TOC, Table of Contents) 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계를 포함하며,상기 (i)는,(k)상기 지식데이터베이스는 지식데이터와 이에 대응하는 목차(TOC, Table of Contents) 방식의 체계정보데이터및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서 공개특허 10-2025-0018343-3-상기 (h)단계는,(l)상기 중복이 제거된 지식데이터들을 JSON(JavaScript Object Notation) 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계를 포함하며,상기 (i)는,(m)상기 지식데이터베이스는 지식데이터와 이에 대응하는 JSON(JavaScript Object Notation) 방식의 체계정보데이터 및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 (b)단계는,(n)상기 피검색지식데이터들에 대한 동반지식데이터들을 연속적으로 추출하는 단계를 포함하는 것을 특징으로하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서 상기 (e)는,(o)상기 지식데이터베이스는 상기 지식데이터와 이에 대응하는 자체완결적 동반정보데이터들을 데이터베이스화한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "지식데이터베이스에는 모든 지식데이터 하나하나마다 다른 지식데이터들과의 동반출력에 관한 정보를 보유하고 있다. 보다 진보된 형태로는 동반정보 뿐만 아니라 체계정보까지도 보유하고 있다. 이를 기초로 사용자가 단말을 통하여 검색어를 입력하면 프로그램은 해당 검색어를 포함하고 있는 지식데이터를 추출한다. 이렇게 추출된 데이 (뒷면에 계속)"}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 질문에 대하여 답변을 하는 인공지능 분야에 있어서의 발명이다. 모든 지식 분야에서 변호사 수준의 답변을 논리정연하게 하면서도 특히 오류없는 답변을 하는 것을 주된 목적으로 하고 있다. 이로써 챗GPT의 태생 적인 오류발생 문제를 해결하려 한다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인류의 지식은 의외로 그 개수가 많지 않다. 특히 고도화된 지식으로 갈 수록 지식의 숫자는 적다. 고도로 체계 화되어 있을 뿐이다. 이러한 지식들을 정제하여 한 권의 책으로 만들어 놓은 것이 바로 교과서라 불리는 서적이 다. 대부분의 교과서는 중복을 최대한 제거하고 체계화시켜서 지식들을 나열한다.어느 한 분야의 교과서에는 그 분야의 모든 지식을 포함시키는 것이 원칙이다. 물론 잡다한 자료, 즉 지식이라기 보다는 데이터 수준 정도의 것들은 교과서의 내용에 포함시키지 않고 별도의 데이터 저장 매체에 따로 저장시키는 것이 보통이다. 이 때 교과서의 내용이 되는 수준 높고 중복없이 정제된 지식들을 효율적으로 다루는 기술이 필요하게 된다. 대 부분의 전문서적들은 일반인이 읽기에 어렵다. 즉 자신이 집을 샀는데 그 땅에 문제가 존재하는 경우 이 문제를 헤쳐나가려면 책 한권을 다 읽어도 그 상황에 제대로 대처하기 힘들다. 그러나 변호사는 즉각 그 상황에 대한"}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "알기 쉬운 요약과 적절한 대응책까지 곧바로 답변해 준다. 이처럼 일반인을 상대하는 변호사의 역할을 하는, 나 아가 모든 분야에서 해당 교과서를 완벽히 이해하고 숙달된 자가 제공하는 답변을 출력하는 지식 프로그램은 아 직까지 등장한 바 없다. 챗GPT는 머신러닝에 온갖 잡다한 기술들을 섞어 놓은 프로그램으로서 기존에 웹상에 존 재하는 데이터들을 바탕으로 그저 말을 풀어서 내뱉는 수준 이상도 이하도 아니다. 그 결과 오류가 발생할 수 밖에 없다. 이 오류 문제는 GPT프로그램의 태생적 한계로서 결국 GPT는 한 순간 반짝 하다가 결국은 사라질 수 밖에 없는 프로그램에 지나지 않는다는 것을 시사받을 수 있다. 오류 없는 GPT가 필요한 시점이다. 그러나 GPT는 그저 언어 기반의 프로그램이므로 해당 언어의 조합에 오류가 존재하는 지를 스스로 검증하지 못한다. 반면 본 발명에서의 프로그램(앞으로 이를 K엔진이라 부른다. 이는 Knowledge Engine의 약칭어이다) 은 애당초부터 정제된 지식을 사용하며 이들 지식을 체계적인 방식에 의하여결합하므로 개별 지식 차원에서의 오류가 없을 뿐만 아니라 지식들간의 결합관계에서도 논리적 모순이 존재하지 않게 된다.(참고로 K엔진은 청구항4 방식에 의하여 가장 구체적으로 구현되고 있다.) K엔진의 결과물은 외관상으로는 챗GPT와 유사하며 특히 목차 방식을 사용하지 않고 평문의 연속으로 출력되는 경우에는 사실상 완전히 같은 외관을 나타내게 된다. 그러나 그 내용적인 측면에서 챗GPT는 오류가 존재하지만 K엔진에서는 오류가 완벽하게 제거되어 있다. 즉 K엔진은 챗GPT의 궁극적인 목적을 실현하고 있는 셈이다. 챗 GPT는 언어에서부터 출발하므로 오류를 감지하지 못한다. 반면 K엔진은 지식에서 출발하므로 애당초 오류가 제 거되어 있다. 이러한 목적을 달성하기 위해서는 데이터베이스가 언어가 아닌 지식 기반으로 구축되어 있어야 하며 당연히 그 지식데이터는 오류가 미리 제거되어 있어야 하고 그 지식들의 결합물들을 추출해 내는 과정에서도 체계적인 방 법을 사용하여 오류가 발생하지 않도록 되어 있어야 하는 바 이들 조건을 만족시키는 것이 바로 K엔진이다. K엔 진에서는 오류가 100% 제거되어 있다. K엔진은 오류없는 GPT를 탄생시키기 위하여 이 세상에 등장했다고 하여도 과언이 아니지만 아이러니컬하게도 GPT가 아닌 것으로서 등장하게 되었다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "본 발명의 배경기술은 온라인 보다는 오프라인 상의 교과서 체계라 할 수 있다. 이는 널리 알려진 교과서 서술 기법이다. 그러나 교과서 내부의 지식들 중에서 그들 상호간의 관련성에 따라 지식을 추적하는 방법을 제시하는 것은 본 발명이 최초라 할 수 있다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "모든 전문분야 나아가 일상적인 지식이라 할 지라도 그에 관한 질문에 대하여 즉각 오류없는 답변을 제공하는 범용 프로그램은 현재까지 등장한 바 없었으며 이는 인류의 염원이기도 하다. 본 발명은 그 어떤 질문에 대하여 서도 정제된 지식데이터를 바탕으로 변호사 수준의 답변을 즉각 제공해 준다. 챗GPT는 섣불리 이 과제에 도전했 지만 오류라는 치명적인 문제를 태생적으로 그 DNA속에 담고 있다. 본 발명은 이러한 기존 프로그램, 특히 GPT 프로그램들이 지니고 있는 태생적인 한계를 극복하고 오류가 완전 배제된 댭변을 도출한다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기와 같은 목적을 달성하기 위하여 본 발명에 따른 동반지식의 추출을 통한 결합지식의 생성방법은, 지식데이터와 이에 대응하는 동반정보데이터들을 데이터베이스화한 지식데이터베이스에서, 사용자단말로부터 입력된 키워드를 포함하는 지식데이터인 피검색지식데이터들을 추출하는 단계 상기 피검색지식데이터들에 대한 동반지식데이터들을 추출하는 단계 상기 추출된 지식데이터들의 중복을 제거하는 단계 상기 중복이 제거된 지식데이터들을 결합하여 생성된 결합지식을 출력하도록 한다. 또한, 상기 중복이 제거된 지식데이터들을 체계정보를 바탕으로 결합하여 결합지식을 생성하고 이를 출력하도록 하며 상기 지식데이터베이스는 지식데이터와 이에 대응하는 체계정보데이터 및 동반정보데이터를 데이터베이스화 한 다. 또한, 상기 중복이 제거된 지식데이터들을 수형도 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하고 이를 출 력하도록 하며 상기 지식데이터베이스는 지식데이터와 이에 대응하는 수형도 방식의 체계정보데이터 및 동반정 보데이터를 데이터베이스화 한다. 또한, 상기 중복이 제거된 지식데이터들을 목차(TOC, Table of Contents) 방식의 체계정보를 바탕으로 결합하여 결합 지식을 생성하고 이를 출력하도록 하며 상기 지식데이터베이스는 지식데이터와 이에 대응하는 목차(TOC, Table of Contents) 방식의 체계정보데이터 및 동반정보데이터를 데이터베이스화 한다.또한, 상기 중복이 제거된 지식데이터들을 JSON(JavaScript Object Notation) 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하고 이를 출력하도록 하며 상기 지식데이터베이스는 지식데이터와 이에 대응하는 JSON(JavaScript Object Notation) 방식의 체계정보데이터 및 동반정보데이터를 데이터베이스화 한다. 또한, 상기 피검색지식데이터들에 대한 동반지식데이터들을 추출함에 있어서 1회성에 그치지 않고 연속적으로 추출하 는 것을 바탕으로 위 전과정을 진행한다. 또한 상기 지식데이터베이스는 상기 지식데이터와 이에 대응하는 자체완결적 동반정보데이터들을 데이터베이스화 하 여 1회의 추출만으로 자체완결적인 추출이 가능하도록 한다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "기존의 지식생성 프로그램들은 단순한 검색이나 언어생성 모형에 지나지 않았으며 모든 질문에 대하여 변호사 수준의 정확한 답변을 제공한다는 염원은 현재까지는 달성되지 않고 있는 상황이다. 본 발명으로 인하여 매끄러 우면서도 오류없는 변호사 수준의 답변이 모든 분야에서 제공될 수 있게 되었다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "먼저 지식데이터베이스의 구축에 관한 설명을 하기로 한다. 즉 청구항1의 말미에 서술되어 있는 다음 문구부터 먼저 검토한다. (e)상기 지식데이터베이스는 상기 지식데이터와 이에 대응하는 상기 동반지식데이터들을 데이터베이스화 한 것 을 특징으로 하는. 설염 : 먼저 지식이란 예를 들어 \"블록체인이란 해싱을 바탕으로 연결된 블록의 연속체\" 라던가 \"사과에는 비타 민C가 풍부하게 함유되어 있다\" 와 같이 일반적으로 우리가 생각하는 의미의 지식을 의미한다. 통상 지식은 문 장으로 표현되어 있으며 그 문장정보가 데이터화 되어 데이터베이스에 저장된다. 그리고 이들 지식들이 서로 모 여 하나의 결합지식을 이루게 된다. 예를 들어 \"사과에는 비타민C가 풍부하게 함유되어 있다\" 라는 지식과 \"사 과는 피부미용에 좋다\"라는 지식이 서로 결합하여 \"사과에는 비타민C가 풍부하게 함유되어 있다. 따라서 사과는 피부미용에 좋다.\" 라는 결합지식이 생성된다. 지식데이터베이스에 저장되어 있는 개별 지식데이터들은 반드시 그에 대응하는 동반정보를 가지고 있다. 동반정보란 개별 지식데이터가 선택되는 경우 그와 동반하여 함께 추출되도록 미리 설정되어 있는 데이터 또는 데이터를 추적하는 로직을 의미한다. 도1이나 도2에서 보면 위쪽 반원 내부의 숫자들은 각 지식데이터의 고유번 호, 즉 아이디를 나타내고 있으며 아래쪽 반원의 내부 숫자들은 동반지식데이터들의 아이디를 나타내고 있음을 발견할 수 있다. 동반의 이유에는 제한이 없다. 문맥상 필수적으로 동반되어야 할 지식도 있을 수 있지만 다른 한편 필연적이라고 할 수는 없으나 함께 등장하는 것이 바람직하기에 동반데이터로 지정해 놓는 경우도 있을 수 있다. 즉 이 역시 데이터베이스 구축자의 자유일 뿐이다. 동반정보는 반드시 특정된 숫자나 기호에 한정되는 것 만은 아니며 로직을 통하여 동반정보를 추적하도록 설계될 수도 있다. 대부분의 범용 데이터베이스 프로그램은 함수나 트리거 등을 통하여 로직적으로 데이터들을 연동시킬 수 있는 기능을 탑재하고 잇다. 이상을 바탕으로 청구항들을 구체적으로 설명한다. (a) 지식데이터베이스에서 사용자단말로부터 입력된 키워드를 포함하는 지식데이터인 피검색지식데이터들을 추 출하는 단계 설명 : 이는 일반적인 내용이며 특별한 설명은 필요없을 것이다. 다만 이 경우 \"포함\"에는 정확한 단어의 일치 를 요구하는 경우 뿐만 아니라 이미 널리 상용화되어 있는 자연어나 풀텍스트 검색 방식에 의한 경우 등도 포함 될 수 있음은 물론이다. (b) 상기 피검색지식데이터들에 대한 동반지식데이터들을 추출하는 단계 설명 : 이미 언급했듯이 각 지식데이터들은 동반지식데이터들에 관한 정보를 보유하고 있다. 즉 도1에서 6번 지 식데이터의 동반지식데이터는 10번과 12번 지식데이터임을 알 수 있다. (c) 상기 추출된 지식데이터들의 중복을 제거하는 단계 설명 : 사용자단말로부터 입력된 키워드를 포함하는 피검색지식데이터가 6번과 10번이라고 가정한다. 이 때 그 각각의 동반지식데이터들을 중복 없이 추출한 결과는 4, 6, 10, 12 가 된다. 그 결과를 도시한 것이 도2이다. (d) 상기 중복이 제거된 지식데이터들을 결합하여 결합지식을 생성하는 단계를 포함하되, 설명 : 도2처럼 추출된 지식데이터들은 다양한 방법으로 결합되거나 가공될 수 있다. 즉 각 지식데이터들에 대 하여 목차를 생성시킬 수도 있고 그대로 하나로 붙여서 챗GPT처럼 평문으로 출력할 수도 있다. 이러한 방식으로 출력하는 것에는 논리적 비약이나 문맥상의 어색함이 나타날 수 있지만 적어도 개별 지식데이터들은 애당초 오 류가 배제된 데이터들이므로 이것만으로도 챗GPT보다는 내용적 정확도 측면에서 향상된 결과를 나타내게 된다."}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "특히 이러한 출력은 일종의 요약본의 출력으로서의 역할을 하게 되는 것이 보통인데 해당 분야의 전문가들이라"}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "면 오히려 이러한 방식의 출력을 선호할 수도 있다. 요약문은 현재 뉴스기사의 앞머리에 거의 반드시 등장하며"}
{"patent_id": "10-2023-0108398", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이 요약문을 작성하는 프로그램이 바로 요약봇이다. 본 발명의 청구항1만으로도 훌륭한 요약봇이 만들어질 수 있는 것이다. (f)상기 중복이 제거된 지식데이터들을 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계를 포함하며, (g)상기 지식데이터베이스는 지식데이터와 이에 대응하는 체계정보데이터 및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 설명 : (f)(g)와 (d)(e)의 차이는 지식데이터베이스를 구축하는 단계와 결합지식을 출력시키는 단계에서 체계정 보를 사용한다는 점에 있다. 즉 도3에서 지식데이터들을 잇는 선들이 부모자식 관계를 나타내고 있으며 이 부모 자식관계를 바탕으로 하여 각 지식데이터 원 외부 우상방에 위치하는 괄호 속의 숫자들이 해당 지식데이터에 대 한 체계정보를 나타내고 있다. 괄호 속의 앞쪽 숫자는 체계상의 레벨(level depth)정보를 나타내고 있고 뒤쪽 숫자는 해당 레벨에서 수평적 형제관계에서의 순서값(list number)를 나타내고 있다. 이상과 같은 정보를 바탕으로 지식데이터베이스가 구축되어 있을 때 청구항 1에서의 동반정보에 따른 지식데이 터 추출이 이루어지고 다시 청구항2에서의 체계정보에 따른 추출지식들의 결합이 이루어지면 그 출력물은 체계 적으로 보다 진보된 형태로 생산될 수 있게 된다. 그 모습은 도4처럼 나타나게 된다. 지금까지의 설명, 즉 청구항2에 관한 설명((f)(g)에 대한 설명)은 체계정보의 가장 대표적인 모습인 수형도 방 식을 사례로 하여 설명하고 있다. 그러나 체계정보를 이용하는 방식은 이론상 수형도에만 국한되지 않으며 부모 자식관계 이외의 형태를 바탕으로 하는 체계정보 역시 얼마든지 개발될 수 있다.(h)상기 중복이 제거된 지식데이터들을 수형도 방식의 체계정보를 바탕으로 결합하여 결합지식을 생성하는 단계 를 포함하며, (i)상기 지식데이터베이스는 지식데이터와 이에 대응하는 수형도 방식의 체계정보데이터 및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법 설명 : (h)(i)와 (f)(g)의 차이는 체계정보를 보다 구체화하여 이를 수형도 구조로 특정한 점에 있다. 수형도 방식은 부모자식관계를 바탕으로 하여 다양한 유형으로 상용화되고 있다. 그 중 가장 대표적인 것이 목차(TOC, Table of Contents)와 JSON(JavaScript Object Notation)등이다. TOC는 교과서의 집필에서 일반적으로 사용되 는 방식으로서 레벨과 순서 모두를 내부정보 요소로 포함하고 있다. 반면 JSON은 Key-Value 쌍으로 이루어진 정 보결합 방식이며 레벨은 필수요소로 포함하고 있으나 순서값(list number)는 그 요소로 포함하지 않는다. (j)상기 중복이 제거된 지식데이터들을 목차(TOC, Table of Contents) 방식의 체계정보를 바탕으로 결합하여 결 합지식을 생성하는 단계를 포함하며, (k)상기 지식데이터베이스는 지식데이터와 이에 대응하는 목차(TOC, Table of Contents) 방식의 체계정보데이터 및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법. 설명 : (j)(k)와 (h)(i)의 차이는 수형도 구조를 보다 구체화하여 이를 목차(TOC, Table of Contents) 구조로 특정한 점에 있다. 도3에서 볼 수 있는 것처럼 목차구조정보를 바탕으로 하여 지식데이터들이 결합되는 경우는 목차 레벨과 목차 번호가 모두 나타나게 된다. 즉 도3의 지식데이터 원 우상방 괄호 안의 2종류의 숫자 모두가 지식데이터베이스에 저장되고 또한 결합지식의 출력물에서도 두가지 정보가 모두 반영되어 다음과 같이 나타나 게 된다. 1. … 2. 1) … 2) ... 이를 도표로 표시하면 도5와 같다. 도5에서 예를 들어 10번 지식데이터의 위치정보는 원천데이터에서는 도3에서 나와 있는 것처럼 (3,1)이었으나 도5에서는 (2,1)로 변화되어 나타나게 된다. 하지만 이는 원천데이터의 기본적 인 위치정보를 바탕으로 이루어진 결과이며 여전히 원천데이터의 위치정보를 활용하고 있음을 알 수 있다. (l)상기 중복이 제거된 지식데이터들을 JSON(JavaScript Object Notation) 방식의 체계정보를 바탕으로 결합하 여 결합지식을 생성하는 단계를 포함하며, (m)상기 지식데이터베이스는 지식데이터와 이에 대응하는 JSON(JavaScript Object Notation) 방식의 체계정보데 이터 및 동반정보데이터를 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법. 설명 : (l)(m)와 (h)(i)의 차이는 수형도 구조를 보다 구체화하여 이를 JSON(JavaScript Object Notation) 구 조로 특정한 점에 있다. JSON은 주로 컴퓨터 간의 통신에서 데이터를 경량화하여 전송하는 데 많이 쓰이고 있다. JSON구조정보를 바탕으로 하여 지식데이터들이 결합되는 경우는 목차 레벨은 나타나지만 목차 번호는 나 타나지 않게 된다. 즉 도3에서의 지식데이터 원 우상방 괄호 안의 2종류의 숫자 중 앞쪽 숫자만이 지식데이터베 이스에 저장되고 또한 결합지식의 출력물에서도 나타나게 된다. 에를 들어 결합지식의 출력물에서는 아래의 목 차식과는 달리 아래와 같은 형태로 나타나게 된다. 즉 레벨(level depth)은 나타나지만 순서값(list number)은 나타나지 않는다. ● … ● … O … O ... (n)상기 피검색지식데이터들에 대한 동반지식데이터들을 연속적으로 추출하는 단계를 포함하는 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법. 설명 : 도1에서 사용자단말로부터 입력된 키워드를 포함하는 피검색지식데이터가 6번과 10번이라고 가정한다. 이 경우 단 한번의 추출만이 아니라 두개의 지식데이터에 대한 동반지식데이터들을 추출하면 내용적으로도 유의 미한 연관을 가진 데이터들이 보다 풍부하게 추출될 것이다. 이러한 추적과정은 통상 별도의 서버 프로그램에 의해 실행되는 것이 보통이지만 데이터베이스 프로그램 자체 내에서 행해지는 것도 물론 가능하다. 먼저 10번지식데이터의 동반지식데이터를 추적해 본다면 4번과 6번이 선택된다. 그 둘 중에서 먼저 4번 지식데 이터의 동반지식데이터를 다시 추출한다면 3번과 8번이 추출된다. 이에 또다시 3번을 추출하게 되면 1번이 그에 대한 동반지식데이터가 된다. 그런데 1번은 3번과 4번 지식데이터를 동반지식데이터로 삼고 있는데 이들은 이미 추출된 것이므로 중복이다. 따라서 1번에 대한 동반지식데이터는 더 이상 추적하지 않아도 된다. 또한 8번의 경 우에는 특별히 그에 대한 동반지식데이터가 존재하지 않는다. 그러므로 이 경우 역시 더 이상의 추적은 없다. 이제 남은 일은 6번 지식데이터의 동반지식데이터를 추출하는 것이다. 그런데 10번은 이미 추출되었으므로 고려 할 필요는 없다. 이처럼 상호순환관계에 있는 지식데이터들이라 할 지라도 중복을 가려내어 이를 배제하는 작업 은 용이하다. 이제 남는 것은 12번 지식데이터인데 12번에 대한 동반지식데이터는 존재하지 않는다. 이로써 모 든 추적과정이 끝난다. 최종적으로 1, 3, 4, 6, 8, 10, 12 번의 총 7개 지식데이터들이 추출되었다. 그 결과가 도6이다. (o)상기 지식데이터베이스는 상기 지식데이터와 이에 대응하는 자체완결적 동반정보데이터들을 데이터베이스화 한 것을 특징으로 하는 동반지식의 추출을 통한 결합지식의 생성방법. 설명 : (o)와 (e)의 차이는 동반정보데이터의 자체완결성에 있다. 즉 도2나 도4에서 추출된 지식데이터들은 최 총 결합지식에 있어서 문맥이나 논리적인 완결성이 100% 보장되어 있지 않다. 예를 들어, \"그 나무는 쓰러질 수 밖에 없었다.\"와 같은 지식은 그 자체로서는 무언가 막연한 느낌을 준다. 여기에 대해 \" 어제 태풍이 초속 50미터의 강풍을 동반했다.\"라는 지식이 합쳐지면 이제 그 의미가 명확해진다. 이처럼 특별히 다른 지식데이터의 동반지식의 도움을 받지 않더라도 자체 보유하고 있는 동반지식들만으로 의미의 완결성을 확 보할 수 있도록 데이터베이스를 구성한 것이 자체완결적 동반정보데이터베이스이다. 도7과 도1을 비교해 보면 각 지식데이터들의 동반정보데이터의 구성이 다소 달라져 있음을 발견할 수 있다. 예 룰 들어 4번 지식데이터는 도1에서는 3,8번만의 동반지식데이터를 보유하고 있지만 도7에서는 1번 데이터를 더 추가하고 있음을 알 수 있다. 이는 1번을 합쳐야만 1,3,4,8 이 전체적으로 자체완결적인 의미구축을 할 수 있기 때문이다. 그리하여 앞서도 언급했던 사례, 즉 6번과 10번이 검색된 사례의 경우 그 최종적인 지식결합의 결과 는 1, 2, 4, 6, 10, 12가 되며 도8에서 그 결과가 나타나 있다. 이는 도2의 결과(4, 6, 10, 12)와 다를 뿐만 아니라 연속적 추출의 결과인 도6에서의 결과 (1, 3, 4, 6, 8, 10, 12)와도 다르다. 일반적으로 볼 때 미리부터 자체완결적인 동반지식 조합을 사람의 손에 의하여 선택해 놓는 것이 단지 로직을 사용하여 동반지식을 연속적으로 추출하는 것보다는 그 문맥의 흐름이나 의미완결성에 있어서 더 나은 경우가 많을 것이다. 물론 이 경우에도 데이터의 중복을 제거하는 작업은 마찬가지로 행해진다. 또한 이러한 자체완결적 데이터베이스 구축방식의 장점은 단 한번만으로 의미완결적 데이터 추출을 할 수 있으 며 나아가 불필요한 지식을 배제할 수 있다는 점에서도 장점이 있다. 부호의 설명도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2023-0108398", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도1은 지식데이터베이스 내부에서 단지 동반정보만을 포함하고 있는 지식데이터들의 원초적인 전체 모습을 나타 내고 있다. 도2는 도1의 데이터베이스 전체 지식데이터들 중에서 동반정보에 따라 출력된 지식데이터들을 나타내고 있다. 도3은 동반정보 뿐만 아니라 체계정보까지 포함된 지식데이터베이스 전체 모습을 나타내고 있다. 도4는 도3의 데이터베이스 전체 지식데이터들 중에서 동반정보와 체계정보를 바탕으로 추출된 지식데이터들을 나타내고 있다. 도5는 도3의 데이터베이스 전체 지식데이터들 중에서 동반정보와 목차(TOC)방식의 체계정보를 바탕으로 추출된 지식데이터들을 나타내고 있다. 도6은 도1의 데이터베이스 전체 지식데이터들 중에서 동반정보를 바탕으로 연속적인 추출 결과를 나타내고 있다. 도7은 지식데이터베이스 내부에서 자체완결적인 동반정보만을 포함하고 있는 지식데이터들의 원초적인 전체 모 습을 나타내고 있다. 도8은 도7의 데이터베이스 전체 지식데이터들 중에서 동반정보에 따라 자체완결적으로 출력된 지식데이터들을 나타내고 있다."}
