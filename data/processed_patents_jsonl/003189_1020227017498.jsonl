{"patent_id": "10-2022-7017498", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0080198", "출원번호": "10-2022-7017498", "발명의 명칭": "오디오 데이터 프로세싱 방법, 서버, 및 저장 매체", "출원인": "텐센트 테크놀로지", "발명자": "우, 자핑"}}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "클라우드 애플리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함하는서버에서 수행되는 오디오 데이터 프로세싱 방법으로서,상기 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 상기 시스템 프레임워크에 입력하는 단계;상기 시스템 프레임워크를 사용하여 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고, 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램으로부터의 상기 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계 ― 상기 오디오 캡처링 프로그램은상기 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성됨 ―를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계는,상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램이 통신 연결을 확립하였다는 결정에 따라 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았다는 결정에 따라:상기 포워딩 프로그램을 제어하여 상기 오디오 캡처링 프로그램에 대한 통신 연결을 확립하는 단계, 및상기 포워딩 프로그램 및 상기 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립한 후 상기 제2 오디오데이터를 상기 포워딩 프로그램에 송신하는 단계를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 시스템 프레임워크를 사용하여 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하는 단계는,상기 시스템 프레임워크를 통해 상기 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오데이터를 획득하는 단계; 및상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 제2 오디오 데이터를 획득하기 위해, 상기 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계는,상기 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 레이트에 따라 상기 시스템 프레임워크를 통해 상기 제3오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 상기 타깃 샘플링 레이트를 포함함 ―;상기 제2 오디오 데이터를 획득하기 위해, 타깃 채널 수량에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터에 대해 채널 수량 수정 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 상기 타깃 채널 수량공개특허 10-2022-0080198-3-을 포함함 ―; 및상기 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 깊이에 따라 상기 시스템 프레임워크를 통해 상기 제3오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 타깃 샘플링 깊이를 포함함 ―중 적어도 하나를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서, 상기 시스템 프레임워크는 프로세싱 스레드를 포함하고,상기 시스템 프레임워크를 통해 상기 제1 오디오 데이터에 대해 상기 오디오 믹싱 프로세싱을 수행하여 상기 제3 오디오 데이터를 획득하는 단계는,상기 프로세싱 스레드를 통해 상기 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 상기 제3 오디오 데이터를 획득하는 단계를 포함하고,상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계는,상기 제2 오디오 데이터를 획득하기 위해, 상기 오디오 파라미터에 따라 상기 프로세싱 스레드를 통해 상기 제3오디오 데이터를 프로세싱하는 단계를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서, 상기 포워딩 프로그램은 하드웨어 추상화 계층이고,상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계 전에, 상기 방법은,상기 하드웨어 추상화 계층으로부터 상기 시스템 프레임워크를 통해 상기 오디오 파라미터를 획득하는 단계를더 포함하고, 상기 하드웨어 추상화 계층은 상기 오디오 파라미터를 저장하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 상기 포워딩 프로그램은 하드웨어 추상화 계층이고,상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계는,상기 제2 오디오 데이터를 상기 하드웨어 추상화 계층에 기입하기 위해, 상기 시스템 프레임워크를 통해 상기하드웨어 추상화 계층의 기입 인터페이스를 호출하는 단계를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서, 상기 포워딩 프로그램은 리샘플링 프로그램이고,상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램을 통해상기 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계는프로세싱된 제2 오디오 데이터를 획득하기 위해, 상기 리샘플링 프로그램을 통해 상기 제2 오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 단계; 및상기 리샘플링 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 리샘플링 프로그램을 통해 상기 프로세싱된 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계를 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 포워딩 프로그램은 리샘플링 프로그램이며, 상기 시스템 프레임워크는 기록 스레드를 포함하고,상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계 후, 상기 방법은,공개특허 10-2022-0080198-4-상기 리샘플링 프로그램을 통해 상기 제2 오디오 데이터를 상기 기록 스레드에 송신하는 단계;상기 기록 스레드를 통해 상기 제2 오디오 데이터를 기록하여 제3 오디오 데이터를 획득하는 단계; 및상기 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 상기 기록 스레드로부터 상기 제3 오디오 데이터를 판독하는 단계를 더 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 오디오 캡처링 프로그램을 통해 상기 제3 오디오 데이터를 폐기하고 상기 제2 오디오 데이터를 상기 단말의 로컬 애플리케이션 프로그램에 송신하는 단계를 더 포함하는, 오디오 데이터 프로세싱 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "검출 애플리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함하는 서버에서 수행되는 지연 획득 방법으로서,상기 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 상기 시스템 프레임워크에 입력하고, 상기 제1검출 오디오 데이터의 송신 순간을 기록하는 단계;상기 시스템 프레임워크를 통해 상기 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고, 상기 제2 검출 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램을 통해상기 제2 검출 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하고, 상기 오디오 캡처링 프로그램이 상기제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하는 단계 ― 상기 오디오 캡처링 프로그램은 상기 제2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성됨 ―; 및상기 송신 순간과 상기 제1 수신 순간 사이의 제1 시간차를 획득하는 단계 ― 상기 제1 시간차는 상기 검출 애플리케이션 프로그램에서부터 상기 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타냄 ―를 포함하는, 지연 획득 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서, 상기 제2 검출 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계 후, 상기 방법은,상기 포워딩 프로그램이 상기 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기록하는 단계; 및상기 송신 순간과 상기 제2 수신 순간 사이의 제2 시간차를 획득하는 단계 ― 상기 제2 시간차는 상기 검출 애플리케이션 프로그램에서부터 상기 포워딩 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타냄 ―를 더 포함하는, 지연 획득 방법."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "애플리케이션 러닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 및 캡처링 모듈을 포함하는 서버로서,상기 애플리케이션 러닝 모듈은 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 상기 프레임워크 러닝모듈에 입력하도록 구성되며;상기 프레임워크 러닝 모듈은 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고 상기 제2오디오 데이터를 상기 포워딩 모듈에 송신하도록 구성되며;상기 포워딩 모듈은 상기 포워딩 모듈과 상기 캡처링 모듈 사이의 통신 연결에 따라 상기 제2 오디오 데이터를상기 캡처링 모듈에 송신하도록 구성되고;상기 캡처링 모듈은 상기 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성되는, 서버.공개특허 10-2022-0080198-5-청구항 14 애플리케이션 러닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 캡처링 모듈, 기록 모듈, 및 획득 모듈을 포함하는 서버로서,상기 애플리케이션 러닝 모듈은 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 상기 프레임워크 러닝모듈에 입력하도록 구성되며;상기 기록 모듈은 상기 제1 검출 오디오 데이터의 송신 순간을 기록하도록 구성되며;상기 프레임워크 러닝 모듈은 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고 상기제2 검출 오디오 데이터를 포워딩 모듈에 송신하도록 구성되며;상기 포워딩 모듈은 상기 포워딩 모듈과 상기 캡처링 모듈 사이의 통신 연결에 따라 상기 제2 검출 오디오 데이터를 상기 캡처링 모듈에 송신하도록 구성되며, 상기 캡처링 모듈은 상기 제2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성되며;상기 기록 모듈은 상기 캡처링 모듈이 상기 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하도록 추가로 구성되며;상기 획득 모듈은 상기 송신 순간과 상기 제1 수신 순간 사이의 제1 시간차를 획득하도록 구성되고, 상기 제1시간차는 상기 애플리케이션 러닝 모듈에서부터 상기 캡처링 모듈까지의 검출 오디오 데이터의 송신 지연을 나타내는, 서버."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 저장 매체로서,상기 컴퓨터 프로그램은 제1항 내지 제10항 중 어느 한 항에 따른 오디오 데이터 프로세싱 방법을 수행하도록구성되거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하도록 구성되는, 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "서버로서,프로세서, 통신 인터페이스, 메모리, 및 통신 버스를 포함하며,상기 프로세서, 상기 통신 인터페이스, 및 상기 메모리는 상기 통신 버스를 통해 서로 통신하며; 상기 통신 인터페이스는 통신 모듈의 인터페이스이며;상기 메모리는 프로그램 코드를 저장하고 상기 프로그램 코드를 상기 프로세서에 송신하도록 구성되며;상기 프로세서는 상기 메모리의 프로그램 코드의 명령어들을 호출하여 제1항 내지 제10항 중 어느 한 항에 따른오디오 데이터 프로세싱 방법을 수행하거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하도록 구성되는, 서버."}
{"patent_id": "10-2022-7017498", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "명령어들을 포함하는 컴퓨터 프로그램 제품으로서,컴퓨터상에서 실행될 때, 상기 컴퓨터로 하여금 제1항 내지 제10항 중 어느 한 항에 따른 오디오 데이터 프로세싱 방법을 수행하게 하거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하게 하는, 컴퓨터 프로그램 제품."}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 출원의 실시예들은 컴퓨터들의"}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것이다. 오디오 데이터 프로세싱 방법, 서버, 및 저장 매체 가 개시된다. 이 방법은 서버에 적용된다. 서버는 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 전송 프로그램, 및 오디오 수집 프로그램을 포함한다. 이 방법은, 클라우드 애플리케이션 프로그램의 제1 오디오 데 (뒷면에 계속) 대 표 도 - 도4"}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2022-0080198 이터를 시스템 프레임워크에 입력하는 단계; 시스템 프레임워크를 통해 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고, 제2 오디오 데이터를 전송 프로그램에 송신하는 단계; 및 전송 프로그램과 오디오 수 집 프로그램 사이의 통신 연결에 따라 전송 프로그램을 통해 제2 오디오 데이터를 오디오 수집 프로그램에 송신 하는 단계를 포함하며, 오디오 수집 프로그램은 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신 하는 데 사용된다. 클라우드 서버에서, 시스템 프레임워크에 의해 프로세싱된 제2 오디오 데이터는 전송 프로그 램을 통해 오디오 수집 프로그램에 직접 송신되어, 오디오 데이터의 송신 링크를 단축시키고 클라우드 서버에 의 한 오디오 데이터의 송신 지연을 감소시킨다.명 세 서 청구범위 청구항 1 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함하는 서버에서 수행되는 오디오 데이터 프로세싱 방법으로서, 상기 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 상기 시스템 프레임워크에 입력하는 단계; 상기 시스템 프레임워크를 사용하여 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고, 상 기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및 상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램으로부터 의 상기 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계 ― 상기 오디오 캡처링 프로그램은 상기 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성됨 ― 를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 2 제1항에 있어서, 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계는, 상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램이 통신 연결을 확립하였다는 결정에 따라 상기 제2 오디 오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및 상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았다는 결정에 따라: 상기 포워딩 프로그램을 제어하여 상기 오디오 캡처링 프로그램에 대한 통신 연결을 확립하는 단계, 및 상기 포워딩 프로그램 및 상기 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립한 후 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계 를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 3 제1항에 있어서, 상기 시스템 프레임워크를 사용하여 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이 터를 획득하는 단계는, 상기 시스템 프레임워크를 통해 상기 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터를 획득하는 단계; 및 상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오 디오 데이터를 프로세싱하는 단계 를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 4 제3항에 있어서, 상기 제2 오디오 데이터를 획득하기 위해, 상기 오디오 파라미터에 따라 상기 시스템 프레임워 크를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계는, 상기 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 레이트에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 상기 타깃 샘플링 레이트 를 포함함 ―; 상기 제2 오디오 데이터를 획득하기 위해, 타깃 채널 수량에 따라 상기 시스템 프레임워크를 통해 상기 제3 오 디오 데이터에 대해 채널 수량 수정 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 상기 타깃 채널 수량을 포함함 ―; 및 상기 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 깊이에 따라 상기 시스템 프레임워크를 통해 상기 제3 오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 단계 ― 상기 오디오 파라미터는 타깃 샘플링 깊이를 포함 함 ― 중 적어도 하나를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 5 제3항에 있어서, 상기 시스템 프레임워크는 프로세싱 스레드를 포함하고, 상기 시스템 프레임워크를 통해 상기 제1 오디오 데이터에 대해 상기 오디오 믹싱 프로세싱을 수행하여 상기 제 3 오디오 데이터를 획득하는 단계는, 상기 프로세싱 스레드를 통해 상기 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 상기 제3 오디 오 데이터를 획득하는 단계를 포함하고, 상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오 디오 데이터를 프로세싱하는 단계는, 상기 제2 오디오 데이터를 획득하기 위해, 상기 오디오 파라미터에 따라 상기 프로세싱 스레드를 통해 상기 제3 오디오 데이터를 프로세싱하는 단계를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 6 제3항에 있어서, 상기 포워딩 프로그램은 하드웨어 추상화 계층이고, 상기 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 상기 시스템 프레임워크를 통해 상기 제3 오 디오 데이터를 프로세싱하는 단계 전에, 상기 방법은, 상기 하드웨어 추상화 계층으로부터 상기 시스템 프레임워크를 통해 상기 오디오 파라미터를 획득하는 단계를 더 포함하고, 상기 하드웨어 추상화 계층은 상기 오디오 파라미터를 저장하는, 오디오 데이터 프로세싱 방법. 청구항 7 제1항에 있어서, 상기 포워딩 프로그램은 하드웨어 추상화 계층이고, 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계는, 상기 제2 오디오 데이터를 상기 하드웨어 추상화 계층에 기입하기 위해, 상기 시스템 프레임워크를 통해 상기 하드웨어 추상화 계층의 기입 인터페이스를 호출하는 단계를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 8 제1항에 있어서, 상기 포워딩 프로그램은 리샘플링 프로그램이고, 상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램을 통해 상기 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계는 프로세싱된 제2 오디오 데이터를 획득하기 위해, 상기 리샘플링 프로그램을 통해 상기 제2 오디오 데이터에 대 해 리샘플링 프로세싱을 수행하는 단계; 및 상기 리샘플링 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 리샘플링 프로그램을 통 해 상기 프로세싱된 제2 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하는 단계 를 포함하는, 오디오 데이터 프로세싱 방법. 청구항 9 제1항에 있어서, 상기 포워딩 프로그램은 리샘플링 프로그램이며, 상기 시스템 프레임워크는 기록 스레드를 포 함하고, 상기 제2 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계 후, 상기 방법은,상기 리샘플링 프로그램을 통해 상기 제2 오디오 데이터를 상기 기록 스레드에 송신하는 단계; 상기 기록 스레드를 통해 상기 제2 오디오 데이터를 기록하여 제3 오디오 데이터를 획득하는 단계; 및 상기 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 상기 기록 스레드로부터 상기 제3 오 디오 데이터를 판독하는 단계 를 더 포함하는, 오디오 데이터 프로세싱 방법. 청구항 10 제9항에 있어서, 상기 오디오 캡처링 프로그램을 통해 상기 제3 오디오 데이터를 폐기하고 상기 제2 오디오 데이터를 상기 단말 의 로컬 애플리케이션 프로그램에 송신하는 단계를 더 포함하는, 오디오 데이터 프로세싱 방법. 청구항 11 검출 애플리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함하는 서 버에서 수행되는 지연 획득 방법으로서, 상기 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 상기 시스템 프레임워크에 입력하고, 상기 제1 검출 오디오 데이터의 송신 순간을 기록하는 단계; 상기 시스템 프레임워크를 통해 상기 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하 고, 상기 제2 검출 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계; 및 상기 포워딩 프로그램과 상기 오디오 캡처링 프로그램 사이의 통신 연결에 따라 상기 포워딩 프로그램을 통해 상기 제2 검출 오디오 데이터를 상기 오디오 캡처링 프로그램에 송신하고, 상기 오디오 캡처링 프로그램이 상기 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하는 단계 ― 상기 오디오 캡처링 프로그램은 상기 제 2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성됨 ―; 및 상기 송신 순간과 상기 제1 수신 순간 사이의 제1 시간차를 획득하는 단계 ― 상기 제1 시간차는 상기 검출 애 플리케이션 프로그램에서부터 상기 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타냄 ― 를 포함하는, 지연 획득 방법. 청구항 12 제11항에 있어서, 상기 제2 검출 오디오 데이터를 상기 포워딩 프로그램에 송신하는 단계 후, 상기 방법은, 상기 포워딩 프로그램이 상기 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기록하는 단계; 및 상기 송신 순간과 상기 제2 수신 순간 사이의 제2 시간차를 획득하는 단계 ― 상기 제2 시간차는 상기 검출 애 플리케이션 프로그램에서부터 상기 포워딩 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타냄 ― 를 더 포함하는, 지연 획득 방법. 청구항 13 애플리케이션 러닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 및 캡처링 모듈을 포함하는 서버로서, 상기 애플리케이션 러닝 모듈은 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 상기 프레임워크 러닝 모듈에 입력하도록 구성되며; 상기 프레임워크 러닝 모듈은 상기 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고 상기 제2 오디오 데이터를 상기 포워딩 모듈에 송신하도록 구성되며; 상기 포워딩 모듈은 상기 포워딩 모듈과 상기 캡처링 모듈 사이의 통신 연결에 따라 상기 제2 오디오 데이터를 상기 캡처링 모듈에 송신하도록 구성되고; 상기 캡처링 모듈은 상기 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성되는, 서 버.청구항 14 애플리케이션 러닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 캡처링 모듈, 기록 모듈, 및 획득 모듈을 포함하 는 서버로서, 상기 애플리케이션 러닝 모듈은 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 상기 프레임워크 러닝 모듈에 입력하도록 구성되며; 상기 기록 모듈은 상기 제1 검출 오디오 데이터의 송신 순간을 기록하도록 구성되며; 상기 프레임워크 러닝 모듈은 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고 상기 제2 검출 오디오 데이터를 포워딩 모듈에 송신하도록 구성되며; 상기 포워딩 모듈은 상기 포워딩 모듈과 상기 캡처링 모듈 사이의 통신 연결에 따라 상기 제2 검출 오디오 데이 터를 상기 캡처링 모듈에 송신하도록 구성되며, 상기 캡처링 모듈은 상기 제2 검출 오디오 데이터를 단말의 로 컬 애플리케이션 프로그램에 송신하도록 구성되며; 상기 기록 모듈은 상기 캡처링 모듈이 상기 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하도록 추 가로 구성되며; 상기 획득 모듈은 상기 송신 순간과 상기 제1 수신 순간 사이의 제1 시간차를 획득하도록 구성되고, 상기 제1 시간차는 상기 애플리케이션 러닝 모듈에서부터 상기 캡처링 모듈까지의 검출 오디오 데이터의 송신 지연을 나 타내는, 서버. 청구항 15 컴퓨터 프로그램을 저장하는 컴퓨터 판독가능 저장 매체로서, 상기 컴퓨터 프로그램은 제1항 내지 제10항 중 어느 한 항에 따른 오디오 데이터 프로세싱 방법을 수행하도록 구성되거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하도록 구성되는, 컴퓨터 판독가능 저장 매 체. 청구항 16 서버로서, 프로세서, 통신 인터페이스, 메모리, 및 통신 버스를 포함하며, 상기 프로세서, 상기 통신 인터페이스, 및 상기 메모리는 상기 통신 버스를 통해 서로 통신하며; 상기 통신 인 터페이스는 통신 모듈의 인터페이스이며; 상기 메모리는 프로그램 코드를 저장하고 상기 프로그램 코드를 상기 프로세서에 송신하도록 구성되며; 상기 프로세서는 상기 메모리의 프로그램 코드의 명령어들을 호출하여 제1항 내지 제10항 중 어느 한 항에 따른 오디오 데이터 프로세싱 방법을 수행하거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하도록 구 성되는, 서버. 청구항 17 명령어들을 포함하는 컴퓨터 프로그램 제품으로서, 컴퓨터상에서 실행될 때, 상기 컴퓨터로 하여금 제1항 내지 제10항 중 어느 한 항에 따른 오디오 데이터 프로세 싱 방법을 수행하게 하거나; 또는 제11항 또는 제12항에 따른 지연 획득 방법을 수행하게 하는, 컴퓨터 프로그 램 제품. 발명의 설명 기 술 분 야 관련 출원에 대한 상호 참조 본 출원은 발명의 명칭이 \"AUDIO DATA PROCESSING METHOD, SERVER, AND STORAGE MEDIUM\"이고 2020년 7월 23일 자로 중국 국가 지적 재산권 관리국에 출원된 중국 특허출원 제202010716978.3호를 우선권 주장하며, 이는 그 전부가 참조로 본 개시에 포함된다. 기술 분야 본 출원은 컴퓨터 기술들의 분야에 관한 것이고, 특히, 오디오 데이터 프로세싱에 관한 것이다."}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "클라우드 애플리케이션 프로그램은 서버 상에서 실행되고 있는 애플리케이션 프로그램이다. 서버는 클라우드 애플리케이션 프로그램을 실행하여 대응하는 오디오 데이터를 생성하고, 그 오디오 데이터를 단말의 로컬 애플 리케이션 프로그램에 재생을 위해 전달한다. 단말의 로컬 애플리케이션 프로그램은 오디오 데이터를 재생하는 것만 필요하다. 현재, 서버는 오디오 캡처링 프로그램을 위한 오디오 기록 인터페이스를 제공한다. 클라우드 애플리케이션 프 로그램이 실행될 때, 서버는 기록 스레드(record thread)를 통해 오디오 데이터를 기록한다. 오디오 캡처링 프 로그램은 오디오 기록 인터페이스를 호출하여 기록 스레드로부터 기록된 오디오 데이터를 판독한 다음, 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송할 수 있다. 하나의 양태에 따르면, 본 출원의 일 실시예는 서버에서 수행되는 오디오 데이터 프로세싱 방법을 제공한다. 서버는 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함한다. 이 방법은, 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 시스템 프레임워크에 입력하는 단계; 시스템 프레임워크를 사용하여 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고, 제2 오 디오 데이터를 포워딩 프로그램에 송신하는 단계; 및 포워딩 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 포워딩 프로그램으로부터의 제2 오디오 데이터를 오디오 캡처링 프로그램에 송신하는 단계 ― 오디 오 캡처링 프로그램은 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성됨 ― 를 포 함한다. 다른 양태에 따르면, 본 출원의 일 실시예는 서버에서 수행되는 지연 획득 방법을 제공한다. 서버는 검출 애플 리케이션 프로그램, 시스템 프레임워크, 포워딩 프로그램, 및 오디오 캡처링 프로그램을 포함한다. 이 방법은, 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 시스템 프레임워크에 입력하고, 제1 검출 오디오 데이 터의 송신 순간을 기록하는 단계; 시스템 프레임워크를 통해 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고, 제2 검출 오디오 데이터를 포워딩 프로그램에 송신하는 단계; 포워딩 프로그램과 오 디오 캡처링 프로그램 사이의 통신 연결에 따라 포워딩 프로그램을 통해 제2 검출 오디오 데이터를 오디오 캡처 링 프로그램에 송신하고, 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록 하는 단계 ― 오디오 캡처링 프로그램은 제2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신 하도록 구성됨 ―; 및 송신 순간과 제1 수신 순간 사이의 제1 시간차를 획득하는 단계 ― 제1 시간차는 검출 애 플리케이션 프로그램에서부터 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타냄 ― 를 포함한다. 다른 양태에 따르면, 본 출원의 일 실시예는 서버를 제공한다. 서버는 애플리케이션 러닝 모듈, 프레임워크 러 닝 모듈, 포워딩 모듈, 및 캡처링 모듈을 포함한다. 애플리케이션 러닝 모듈은 클라우드 애플리케이션 프로그 램의 제1 오디오 데이터를 프레임워크 러닝 모듈에 입력하도록 구성된다. 프레임워크 러닝 모듈은 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고 제2 오디오 데이터를 포워딩 모듈에 송신하도록 구성된다. 포워딩 모듈은 포워딩 모듈과 캡처링 모듈 사이의 통신 연결에 따라 제2 오디오 데이터를 캡처링 모 듈에 송신하도록 구성된다. 캡처링 모듈은 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하 도록 구성된다. 하나의 양태에 따르면, 본 출원의 일 실시예는 서버를 제공한다. 서버는 애플리케이션 러닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 캡처링 모듈, 기록 모듈, 및 획득 모듈을 포함한다. 애플리케이션 러닝 모듈은 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 프레임워크 러닝 모듈에 입력하도록 구성된다. 기록 모듈 은 제1 검출 오디오 데이터의 송신 순간을 기록하도록 구성된다. 프레임워크 러닝 모듈은 제1 검출 오디오 데 이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고 제2 검출 오디오 데이터를 포워딩 모듈에 송신하도록 구성된다. 포워딩 모듈은 포워딩 모듈과 캡처링 모듈 사이의 통신 연결에 따라 제2 검출 오디오 데이터를 캡처링 모듈에 송신하도록 구성된다. 캡처링 모듈은 제2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램 에 송신하도록 구성된다. 기록 모듈은 캡처링 모듈이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기 록하도록 추가로 구성된다. 획득 모듈은 송신 순간과 제1 수신 순간 사이의 제1 시간차 ― 제1 시간차는 애플 리케이션 러닝 모듈에서부터 캡처링 모듈까지의 검출 오디오 데이터의 송신 지연을 나타냄 ― 를 획득하도록 구 성된다. 다른 양태에 따르면, 본 출원의 일 실시예는 컴퓨터 판독가능 저장 매체를 제공한다. 컴퓨터 판독가능 저장 매 체는 컴퓨터 프로그램을 저장한다. 컴퓨터 프로그램은 전술한 양태에 따라 오디오 데이터 프로세싱 방법을 수 행하도록 구성되거나, 또는 전술한 양태에 따라 지연 획득 방법을 수행하도록 구성된다. 또 다른 양태에 따르면, 본 출원의 일 실시예는 컴퓨터 프로그램 제품 또는 컴퓨터 프로그램을 제공한다. 컴퓨 터 프로그램 제품 또는 컴퓨터 프로그램은 컴퓨터 프로그램 코드를 포함하고, 컴퓨터 프로그램 코드는 컴퓨터 판독가능 저장 매체에 저장된다. 컴퓨터 디바이스의 프로세서가 컴퓨터 판독가능 저장 매체로부터 컴퓨터 프로 그램 코드를 판독하고, 컴퓨터 프로그램 코드를 실행하여, 컴퓨터 디바이스로 하여금 전술한 양태에 따라 오디 오 데이터 프로세싱 방법을 수행하게 하거나, 또는 전술한 양태에 따라 지연 획득 방법을 수행하게 한다. 또 다른 양태에 따르면, 본 출원의 일 실시예는 다음을 포함하는 서버를 제공한다: 프로세서, 통신 인터페이스, 메모리, 및 통신 버스. 프로세서, 통신 인터페이스, 및 메모리는 통신 버스를 사용하여 서로 통신한다. 통신 인터페이스는 통신 모듈 의 인터페이스이다. 메모리는 프로그램 코드를 저장하고, 프로그램 코드를 프로세서에 송신하도록 구성된다. 프로세서는 메모리의 프로그램 코드의 명령어들을 호출하여 전술한 양태에 따라 오디오 데이터 프로세싱 방법을 수행하거나, 또는 전술한 양태에 따라 지연 획득 방법을 수행하도록 구성된다."}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 출원의 목적들, 기술적 해법들, 및 장점들을 더 명확하게 하기 위해, 다음에서는 첨부 도면들을 참조하여 추 가로 본 출원의 구현예들을 상세히 설명한다. 본 출원에서 사용되는 \"제1\", \"제2\" 등과 같은 용어들은 이 명세서에서 다양한 개념들을 설명하기 위해 사용될 수 있다는 것이 이해되어야 한다. 그러나, 그 개념들은 달리 특정되지 않는 한 용어들에 의해 제한되지 않는다. 그 용어들은 하나의 개념을 다른 개념으로부터 구별하는 데에만 사용된다. 예를 들어, 제1 오디오 데 이터는 제2 오디오 데이터라고 지칭될 수 있고 제2 오디오 데이터는 본 출원의 범위로부터 벗어남 없이 제1 오 디오 데이터라고만 지칭될 수 있다. 본 출원의 실시예들이 상세히 설명되기 전에, 관련된 개념들이 아래에서 먼저 설명된다. 1. 클라우드 애플리케이션 프로그램: 서버 상에서 실행되고 있는 애플리케이션 프로그램. 일부 실시예들에서, 클라우드 애플리케이션 프로그램은 게임 애플리케이션 프로그램, 오디오 프로세싱 애플리케이션 프로그램 등이 다. 2. 컨테이너: 컨테이너에는 애플리케이션 프로그램, 이를테면 운영 체제를 실행하는데 필요한 관련 세부사항들 이 캡슐화된다. 하나의 서버는 다수의 컨테이너들을 실행할 수 있고, 클라우드 애플리케이션 프로그램과 운영 체제는 각각의 컨테이너에서 실행될 수 있다. 운영 체제는 임의의 운영 체제, 이를테면 안드로이드 운영 체제 또는 iPhone 운영 체제(iOS)이다. 3. 하드웨어 추상화 계층(AudioHal): 시스템 프레임워크와 하드웨어 드라이버 사이에 위치되고 시스템 프레임워 크에 의해 전달되는 오디오 데이터를 수신하고 그 오디오 데이터를 하드웨어 드라이버를 통해 하드웨어에 출력 하는 것을 담당한다. 4. 시스템 프레임워크: 운영 체제에서 제공되는 프레임워크. 일부 실시예들에서, 프레임워크는 운영 체제에서 의 오디오 프로세싱 프레임워크(AudioFlinger)이다. 5. 리샘플링 프로그램(RemoteSubmix): 운영 체제에서 오디오에 대해 오디오 믹싱 프로세싱을 수행한 다음 프로 세싱된 오디오를 네트워크를 통해 원격 단으로 전송하도록 구성되는, 운영 체제에서의 모듈. 6. 오디오 캡처링 프로그램: 서버의 운영 체제로부터 오디오 데이터를 캡처하도록 구성되는 프로그램. 이 프로 그램은 캡처된 오디오 데이터를 인코딩 모듈(WebrtcProxy)에 전송할 수 있고, 인코딩 모듈은 오디오 데이터를 인코딩한 다음 인코딩된 오디오 데이터를 단말의 애플리케이션 프로그램에 전달한다. 일부 실시예들에서, 클라 우드 애플리케이션 프로그램이 클라우드 게임 프로그램일 때, 오디오 캡처링 프로그램은 클라우드 게임 백엔드 이다. 7. 오디오 기록 인터페이스(AudioRecord): 운영 체제에서 오디오 데이터를 캡처하기 위한 인터페이스. 오디오 데이터의 소스가 마이크로폰, RemoteSubmix 등이다. 8. 오디오 믹싱 스레드(MixerThread): 시스템 프레임워크에서 오디오 믹싱을 담당하는 스레드. 9. 기록 스레드(RecordThread): 시스템 프레임워크에서 기록하는 것을 담당하는 스레드. 도 1은 본 출원의 일 실시예에 따른 구현 환경의 개략도이다. 도 1을 참조하면, 구현 환경은 단말과 서버 를 포함한다. 단말과 서버는 유선 또는 무선 통신을 통해 직접적으로 또는 간접적으로 연결될수 있다. 이는 본 출원에서 이것으로 제한되지 않는다. 단말은 스마트폰, 태블릿 컴퓨터, 노트북 컴퓨터, 데스크톱 컴퓨터, 스마트 스피커, 스마트워치 등일 수 있지만 그것으로 제한되지 않는다. 일부 실시예들에서, 서버는 독립적인 물리적 서버일 수 있다. 일부 실시예들에서, 서버는 다수의 물리적 서버들 또는 분산 시스템을 포함하는 서버 클러스터이다. 일부 실시 예들에서, 서버는 클라우드 서비스, 클라우드 데이터베이스, 클라우드 컴퓨팅, 클라우드 기능(cloud function), 클라우드 스토리지, 네트워크 서비스, 클라우드 통신, 미들웨어 서비스, 도메인 이름 서비스, 보안 서비스, 콘텐츠 전달 네트워크 (CDN), 그리고 빅 데이터 및 인공지능 플랫폼과 같은 기본 클라우드 컴퓨팅 서비 스들을 제공하기 위한 것이다. 클라우드 애플리케이션 프로그램이 서버 상에서 실행된다. 클라우드 애플리케이션 프로그램이 실행될 때, 클라우드 애플리케이션 프로그램은 오디오 데이터를 생성한다. 서버는 오디오 데이터를 단말에 전송 하여서, 단말은, 애플리케이션 프로그램을 실행하는 일 없이, 애플리케이션 프로그램에 의해 생성된 오디 오 데이터를 재생할 수 있다. 일부 실시예들에서, 단말에는 로컬 애플리케이션 프로그램이 설치된다. 사용자가 로컬 애플리케이션 프로 그램을 통해 제어 명령어를 서버에 전송할 수 있다. 서버의 클라우드 애플리케이션 프로그램이 제어 명령어에 따라 실행되고, 제어 명령어에 대응하는 오디오 데이터를 생성한다. 서버는 오디오 데이터를 단 말에 전달하여서, 사용자는 단말의 로컬 애플리케이션 프로그램을 통해 오디오 데이터를 재생할 수 있다. 일부 실시예들에서, 본 출원의 실시예들에서의 단말 및 서버는 분산 시스템을 형성하도록 연결된다. 예를 들어, 분산 시스템은 블록체인 시스템이다. 도 2를 참조하면, 도 2는 본 출원의 일 실시예에 따른 블록체인 시 스템에 적용되는 분산 시스템의 개략적 구조도이다. 분산 시스템은 복수의 노드들(액세스 네트워크 에서 임의의 형태의 컴퓨팅 디바이스들, 이를테면 서버들 및 단말들)과 클라이언트로 형성된다. 피어 투 피어(P2P) 네트워크가 노드들 사이에 형성된다. P2P 프로토콜은 송신 제어 프로토콜(Transmission Control Protocol)(TCP)을 통해 실행되는 애플리케이션 계층 프로토콜이다. 서버 또는 단말과 같은 임의의 머신이 노드 가 되기 위해 분산 시스템에 추가될 수 있다. 도 2에 도시된 블록체인 시스템의 각각의 노드의 기능들을 참조하면, 관련 기능들은 다음을 포함한다: 라우팅: 이는 노드의 기본 기능이고, 노드들 사이의 통신을 지원하는데 사용된다. 라우팅 기능 외에도, 노드는 다음 기능들을 추가로 가질 수 있다: 애플리케이션: 이는 블록체인에서 전개되고, 실제 서비스 요건에 따라 특정 서비스를 구현하며, 기록된 데 이터를 형성하기 위해 기능 구현에 관련된 데이터를 기록하며, 태스크 데이터의 소스에 지시하기 위해 디지털 서명을 기록된 데이터에 추가하고, 기록된 데이터를 블록체인 시스템에서의 다른 노드에 송신하는데 사용되어서, 다른 노드는 기록된 데이터의 소스 및 무결성을 성공적으로 검정할 때 기록된 데이터를 임시 블록 에 추가한다. 예를 들어, 클라우드 애플리케이션 프로그램들은 다수의 서버들에서 각각 실행되며, 각각의 서버는 블록체인에 서의 노드이고, 다수의 서버들에서 클라우드 애플리케이션 프로그램들을 실행함으로써 획득된 데이터는 동기화 된다. 본 출원의 실시예들은 클라우드 게임 시나리오에 적용될 수 있다. 예를 들어, 사용자가 단말 상의 클라우드 게임의 실행을 제어한다. 본 출원의 실시예들에서 제공되는 오디오 데이터 프로세싱 방법에서, 클라우드 게임이 실행될 때 생성된 오디오 데이터는 단말에 전송되고, 단말은 오디 오 데이터를 재생하여서, 사용자는 게임 중에 오디오 데이터를 청취할 수 있다. 본 출원의 실시예들에서 제공되는 오디오 데이터 프로세싱 방법에서, 서버는 오디오 데이터를 단말에 더 빠르게 전송할 수 있다. 이는 오디오 데이터의 지연을 줄이고 사용자가 오디오 데이터를 더 빠르게 청취하는 것을 가 능하게 한다. 본 출원의 실시예들은 클라우드 애플리케이션 프로그램이 서버 상에서 실행되는 다른 시나리오들에 또한 적용될 수 있다. 애플리케이션 시나리오가 본 출원의 실시예들로 제한되지 않는다. 도 3은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 본 출원의 이 실시예는 서버 에 의해 수행된다. 도 3을 참조하면, 그 방법은 다음 단계들을 포함한다. 301: 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 시스템 프레임워크에 입력한다. 클라우드 애플리케이션 프로그램은 서버 상에서 실행되고 있는 임의의 애플리케이션 프로그램이다. 일부 실시 예들에서, 클라우드 애플리케이션 프로그램은 게임 애플리케이션 프로그램, 오디오 프로세싱 애플리케이션 프로 그램 등이다. 클라우드 애플리케이션 프로그램의 유형은 본 출원의 이 실시예로 제한되지 않는다. 제1 오디오 데이터는 클라우드 애플리케이션 프로그램이 실행될 때 생성된 오디오 데이터. 302: 시스템 프레임워크를 사용하여 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고, 제2 오 디오 데이터를 포워딩 프로그램에 전송한다. 시스템 프레임워크는 서버의 운영 체제에서의 프레임워크이고 오디오 데이터를 프로세싱하도록 구성된다. 포워 딩 프로그램은 시스템 프레임워크와 오디오 캡처링 프로그램 사이의 프로그램이고, 시스템 프레임워크를 통해 프로세싱된 후에 획득된 오디오 데이터를 오디오 캡처링 프로그램에 송신하도록 구성된다. 포워딩 프로그램은 오디오 데이터를 포워딩하는 기능을 갖는다. 일부 실시예들에서, 포워딩 프로그램은 다른 기능들을 또한 가질 수 있다. 이는 본 출원의 이 실시예로 제한되지 않는다. 303: 포워딩 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 포워딩 프로그램을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 송신하고, 오디오 캡처링 프로그램은 제2 오디오 데이터를 단말의 로컬 애 플리케이션 프로그램에 송신하도록 구성된다. 포워딩 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하였고, 포워딩 프로그램은 통신 연결을 통해 제 2 오디오 데이터를 오디오 캡처링 프로그램에 직접 전송할 수 있다. 단말에는 로컬 애플리케이션 프로그램이 설치되고, 로컬 애플리케이션 프로그램은 단말과 서버 사이의 상호작용 을 지원하는 애플리케이션 프로그램이다. 제2 오디오 데이터를 수신한 후, 오디오 캡처링 프로그램은 제2 오디 오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하여서, 단말은 제2 오디오 데이터를 재생한다. 로컬 애플리케이션 프로그램은 단계 303의 단말의 로컬 애플리케이션 프로그램이다. 본 출원의 이 실시예에서 제공되는 오디오 데이터 프로세싱 방법에서, 포워딩 프로그램은 시스템 프레임워크와 오디오 캡처링 프로그램 사이에 배치되고, 포워딩 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하였 다. 시스템 프레임워크를 통해 프로세싱한 후에 획득된 오디오 데이터는 통신 연결을 통해 오디오 캡처링 프로 그램에 직접 전송될 수 있다. 오디오 캡처링 프로그램이 오디오 기록 인터페이스를 호출하여 기록 스레드로부 터 오디오 데이터를 판독하는 솔루션과 비교하여, 통신 연결을 통해 오디오 데이터를 직접 전송하는 전술한 방 법은 오디오 데이터의 송신 링크를 줄이고 오디오 캡처링 프로그램에 의해 오디오 데이터를 획득하는데 소요되 는 시간과 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 단축시킨다. 단계 302 및 303에서의 포워딩 프로그램은 하드웨어 추상화 계층; 또는 운영 체제에서의 원래의 리샘플링 프로 그램; 또는 다른 프로그램이다. 이는 본 출원의 이 실시예로 제한되지 않는다. 먼저, 본 출원의 일 실시예에서, 포워딩 프로그램은, 예를 들어, 하드웨어 추상화 계층이고, 서버가 설명된다. 도 4에서 도시된 바와 같이, 서버는 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 하드 웨어 추상화 계층, 및 오디오 캡처링 프로그램을 포함한다. 클라우드 애플리케이션 프로그램은 시스템 프레임워크의 인터페이스를 호출하여 오디오 데이터를 시 스템 프레임워크 안으로, 예를 들어, 오디오 믹싱 스레드를 통해 기입할 수 있다. 시스템 프레임워크 는 하드웨어 추상화 계층의 인터페이스를 호출하여 오디오 데이터를 하드웨어 추상화 계층 안으 로 기입할 수 있다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램은 통신 연결을 확립하여서, 오 디오 데이터는 오디오 캡처링 프로그램에 전송될 수 있다. 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 하드웨어 추상화 계층, 및 오디오 캡처링 프로그램 모두는 서버의 운영 체제 컨테이너에서 실행된다. 일부 실시예들에서, 서버는 인코딩 프로그램을 또한 포함한다. 오디오 캡처링 프로그램은 오디 오 데이터를 인코딩 프로그램에 전송하고, 인코딩 프로그램은 오디오 데이터를 인코딩하고 인코딩된 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송한다. 도 4에 도시된 서버에 기초하여, 본 출원의 일 실시예는 오디오 데이터 프로세싱 방법을 추가로 제공한다. 도 5은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 본 출원의 이 실시예는 도 4에 도시된 서버에 의해 수행된다. 도 5를 참조하면, 그 방법은 다음 단계들을 포함한다. 501: 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 시스템 프레임워크에 입력한다. 클라우드 애플리케이션 프로그램은 서버 상에서 실행되고 있는 애플리케이션이다. 로컬 애플리케이션 프로그램 이 단말 상에 설치된 애플리케이션 프로그램이고, 단말과 서버 사이의 상호작용을 지원하는 애플리케이션 프로 그램이다. 서버는 클라우드 애플리케이션 프로그램이 실행될 때 생성되는 데이터를 단말의 로컬 애플리케이션 프로그램에 전송할 수 있어서, 단말은 데이터를 디스플레이할 수 있다. 그러므로, 단말은, 클라우드 애플리케 이션 프로그램을 실행하는 일 없이, 클라우드 애플리케이션 프로그램에 의해 생성된 데이터를 획득할 수 있다. 일부 실시예들에서, 사용자가 단말의 로컬 애플리케이션 프로그램을 통해 서버에 명령어를 또한 전송할 수 있다. 서버는 그 명령어에 따라 클라우드 애플리케이션 프로그램을 실행하고, 클라우드 애플리케이션 프로그램 에 의해 생성된 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하여서, 단말은 서버 상의 클라우드 애플리 케이션 프로그램의 동작을 제어할 수 있다. 단말은 클라우드 애플리케이션 프로그램이 실행된 후에 생성되는 데이터를 또한 획득할 수 있다. 그러므로, 단말은 클라우드 애플리케이션 프로그램을 설치하고 실행하는 일 없 이 클라우드 애플리케이션 프로그램을 사용할 수 있다. 예를 들어, 사용자가 단말의 로컬 애플리케이션 프로그램에서 가상 캐릭터 A에 의해 스킬 a를 실행하는 동작을 트리거한다. 단말의 로컬 애플리케이션 프로그램은 그 동작에 응답하여 스킬 실행 명령어를 서버의 클라우드 애플리케이션 프로그램에 전송한다. 스킬 실행 명령어는 가상 캐릭터 A의 가상 식별자와 스킬 a에 대응하는 스 킬 식별자를 운반한다. 스킬 실행 명령어를 수신한 후, 클라우드 애플리케이션 프로그램은, 스킬 실행 명령어 에 따라, 가상 캐릭터 A에 의해 스킬 a를 실행하는 비디오 데이터를 렌더링하고, 그 비디오 데이터를 단말의 로 컬 애플리케이션 프로그램에 전송한다. 단말의 로컬 애플리케이션 프로그램은 그 비디오 데이터를 디스플레이 하여서, 사용자는 가상 캐릭터 A에 의해 스킬 a를 실행하는 픽처들을 볼 수 있다. 알 수 있는 바와 같이, 본 출원의 이 실시예에서, 서버의 클라우드 애플리케이션 프로그램과 단말의 로컬 애플리케이션 프로그램은 서로 협력하여, 가상 캐릭터 A에 의해 스킬 a를 실행하는 동작을 수행한다. 클라우드 애플리케이션 프로그램이 실행될 때, 클라우드 애플리케이션 프로그램은 오디오 데이터를 생성한다. 서버는 그 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하여서, 단말은 그 오디오 데이터를 재생 또는 저장할 수 있다. 예를 들어, 클라우드 애플리케이션 프로그램은 스킬 실행 명령어에서의 가상 식별자 및 스킬 식별자에 따라 제1 오디오 데이터를 획득하고, 제1 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송한다. 제1 오디오 데이터는 가상 캐릭터 A에 의한 스킬 a의 실행에 대응하는 스킬 실행 오디오이다. 제1 오디오 데이터를 수신한 후, 단말의 로컬 애플리케이션 프로그램은 제1 오디오 데이터를 재생하여서, 사용자는 가상 캐릭터 A에 의한 스 킬 a의 실행을 보면서 대응하는 스킬 실행 오디오를 청취할 수 있다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램은 다양한 유형들의 오디오 데이터를 저장하고, 오디오 데 이터의 다양한 유형들은 다음 유형들을 포함한다. 배경 음악: 배경 음악은 클라우드 애플리케이션 프로그램이 실행될 때 재생되는 오디오 데이터이다. 일부 실시 예들에서, 클라우드 애플리케이션 프로그램은 클라우드 애플리케이션 프로그램이 실행함에 따라 루프 재생(loop playback)을 구현하는 배경 음악을 저장한다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램은 배경 음 악의 다수의 피스들을 저장하고, 배경 음악의 다수의 피스들은 클라우드 애플리케이션 프로그램이 실행됨에 따 라 루프 재생을 구현한다. 대안적으로, 배경 음악의 상이한 피스들은 상이한 러닝 스테이지들에 적합하고, 클 라우드 애플리케이션 프로그램은 러닝 스테이지에 따라 배경 음악의 다수의 피스들로부터 러닝 스테이지에 대응 하는 배경 음악을 선택하여, 루프 재생을 구현한다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램은 추 가로 실행 중에 비디오 데이터를 렌더링하고, 렌더링된 비디오 데이터에 따라, 배경 음악의 다수의 피스들로부 터 비디오 데이터에 대응하는 배경 음악을 선택하여 루프 재생을 구현할 수 있다. 오디오 시스템 통지: 오디오 시스템 통지가 클라우드 애플리케이션 프로그램이 실행될 때 단말에 전송되는 오디 오 통지 메시지이다. 예를 들어, 클라우드 애플리케이션 프로그램이 게임 애플리케이션 프로그램일 때, 오디오 시스템 통지는 \"적이 XX 초 내에 도착한다\", \"우리 팀원 XXX는 포위되었다\" 등이다. 오디오 시스템 통지를 수 신한 후, 단말은 오디오 시스템 통지를 디스플레이한다. 동작 오디오(operation audio): 동작 오디오는 동작 중에 재생되는 오디오 데이터라서, 사용자가 몰입 경험을 갖게 한다. 예를 들어, 사용자가 가상 캐릭터 A를 조작하여 스킬을 실행하면, 그 스킬을 실행하는 오디오가 재 생되어서, 사용자는 스킬을 실행하는 동작을 명확하게 인지하고 몰입 경험을 가질 수 있다. 배경 음악, 오디오 시스템 통지, 및 동작 오디오는 다양한 유형들의 오디오 데이터의 예들일 뿐이고 오디오 데 이터의 다양한 유형들을 제한하지 않는다. 클라우드 애플리케이션 프로그램이 실행될 때, 클라우드 애플리케이션 프로그램은 현재 실행 상태에 따라 다양 한 유형들의 오디오 데이터로부터 현재 실행 상태에 대응하는 오디오 데이터를 선택하고 그 오디오 데이터를 단 말에 전송할 수 있다. 제1 오디오 데이터는 현재 실행 상태에 대응하는 오디오 데이터이다. 클라우드 애플리 케이션 프로그램의 실행 상태는, 클라우드 애플리케이션 프로그램의 스타트업 상태, 클라우드 애플리케이션 프 로그램에 의한 동작 명령어를 실행하는 상태, 클라우드 애플리케이션 프로그램의 로딩 장면 상태 등을 포함한다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램의 스타트업 프로세스에서, 클라우드 애플리케이션 프로그 램은 다양한 유형들의 오디오 데이터로부터 스타트업 상태에 대응하는 오디오 데이터를 선택한다. 그 오디오 데이터는 제1 오디오 데이터이다. 클라우드 애플리케이션 프로그램의 스타트업 프로세스는 클라우드 애플리케 이션 프로그램이 시작되었지만, 스타트업이 완료되지 않았음을 의미한다. 이 경우, 클라우드 애플리케이션 프 로그램은 일부 기능들, 이를테면 오디오 데이터를 획득하는 기능과 오디오 데이터를 전달하는 기능을 수행할 수 있다. 일부 실시예들에서, 스타트업 상태에 대응하는 오디오 데이터는 배경 음악의 오디오 데이터이다. 예를 들어, 클라우드 애플리케이션 프로그램은 게임 애플리케이션 프로그램이다. 일부 큰 게임 애플리케이션 프로그램들의 경우, 스타트업 프로세스에는 얼마간의 시간이 걸린다. 그러므로, 클라우드 애플리케이션 프로그 램의 스타트업 프로세스에서, 오디오 데이터는 단말에 전송되고, 단말은 오디오 데이터를 재생하여서, 사용자는 기다릴 때 지루함을 느끼지 않는다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램의 러닝 프로세스에서, 클라우드 애플리케이션 프로그램은 단말의 로컬 애플리케이션 프로그램에 의해 전송된 동작 명령어를 수신하며, 동작 명령어에 응답하여, 동작 명 령어에 대응하는 동작을 수행하고, 다양한 유형들의 오디오 데이터로부터 동작 명령어에 대응하는 오디오 데이 터를 선택한다. 그 오디오 데이터는 제1 오디오 데이터이다. 예를 들어, 클라우드 애플리케이션 프로그램은 게임 애플리케이션 프로그램이다. 러닝 프로세스에서, 클라우드 애플리케이션 프로그램은 단말에 의해 전송된 스킬 실행 명령어를 수신한다. 스킬 실행 명령어는 가상 캐릭터 식별자와 스킬 식별자를 운반한다. 클라우드 애플리케이션 프로그램은 스킬 실행 명령어에서의 가상 캐릭터 식 별자 및 스킬 식별자에 따라 스킬 실행 명령어에 응답하여 대응하는 가상 캐릭터를 제어하여 대응하는 스킬을 실행하고, 다양한 유형들의 오디오 데이터로부터 그 스킬의 실행에 대응하는 오디오 데이터를 선택한다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램은 하나 이상의 오디오 소스들을 포함하고, 다수의 유형들 의 오디오 데이터는 하나 이상의 오디오 소스들에 저장된다. 일부 실시예들에서, 각각의 오디오 소스는 하나의 유형의 오디오 데이터를 저장하고 상이한 오디오 소스들은 상이한 유형들의 오디오 데이터를 저장한다. 대응하여, 클라우드 애플리케이션 프로그램은 현재 실행 상태에 따라 다양한 유형들의 오디오 데이터로부터 현 재 실행 상태에 대응하는 제1 오디오 데이터를 선택하고 제1 오디오 데이터를 단말에 전송할 수 있다. 이는, 클라우드 애플리케이션 프로그램이, 임의의 오디오 소스로부터, 현재 실행 상태에 대응하는 제1 오디오 데이터 를 판독하고 제1 오디오 데이터를 단말에 전송하는 것; 또는 클라우드 애플리케이션 프로그램이 현재 실행 상태 에 따라 타깃 오디오 소스를 결정하며, 타깃 오디오 소스로부터 현재 실행 상태에 대응하는 제1 오디오 데이터 를 판독하고, 제1 오디오 데이터를 단말에 전송하는 것을 포함한다. 그밖에, 제1 오디오 데이터를 단말에 전달할 때, 클라우드 애플리케이션 프로그램은 먼저 제1 오디오 데이터를 시스템 프레임워크에 프로세싱을 위해 입력한다. 502: 시스템 프레임워크를 사용하여 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데 이터를 획득한다. 시스템 프레임워크는 운영 체제에서의 프레임워크이고, 운영 체제는 안드로이드 시스템, iOS 등이다. 일부 실 시예들에서, 시스템 프레임워크는 오디오 프로세싱 프레임워크(AudioFlinger)이다. 일부 실시예들에서, 제1 오디오 데이터는 다수의 채널들의 오디오 데이터를 포함한다. 제1 오디오 데이터에 대 해 오디오 믹싱 프로세싱을 수행하는 것은 다수의 채널들의 오디오 데이터를 하나의 채널의 오디오 데이터에 믹싱하는 것이다. 그러므로, 오디오 믹싱 프로세싱을 통해 획득된 제3 오디오 데이터는 하나의 채널의 오디오 데 이터이다. 예를 들어, 제1 오디오 데이터는 배경 음악에 대응하는 오디오 데이터와 동작 오디오에 대응하는 오디오 데이터 를 포함하며, 다시 말하면, 제1 오디오 데이터는 두 개의 채널들의 오디오 데이터를 포함한다. 배경 음악에 대 응하는 오디오 데이터와 동작 오디오에 대응하는 오디오 데이터는 제3 오디오 데이터를 획득하기 위해 하나의 채널의 오디오 데이터 안으로 믹싱되어서, 단말은 오디오 데이터를 더 원활하게 재생하고 사용자는 후속하여 제 3 오디오 데이터를 더 원활하게 청취하여 사용자의 청각 효과(hearing effect)를 보장한다. 추가적으로, 제1 오디오 데이터가 다수의 채널들의 오디오 데이터를 포함하면, 사용자는 특정 채널의 오디오 데 이터에 더 많은 주의를 기울일 수 있다. 예를 들어, 제1 오디오 데이터는 배경 음악에 대응하는 오디오 데이터 와 동작 오디오에 대응하는 오디오 데이터를 포함한다. 배경 음악은 클라우드 애플리케이션 프로그램이 실행될 때 지속적으로 재생되는 오디오 데이터이고 동작 오디오는 사용자가 동작시킬 때 재생되는 오디오 데이터이다. 그러므로, 사용자는 동작 오디오에 대응하는 오디오 데이터에 더 많은 주의를 기울일 수 있다. 그러므로, 제1 오디오 데이터는 다수의 채널들의 오디오 데이터를 포함하고, 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱 을 수행하여 제3 오디오 데이터를 획득하는 단계는, 제1 오디오 데이터에 오디오 데이터의 각각의 채널의 가중 값을 결정하는 단계와, 제3 오디오 데이터를 획득하기 위해, 오디오 데이터의 각각의 채널의 가중값에 따라 다 수의 채널들의 오디오 데이터를 하나의 채널의 오디오 데이터 안으로 믹싱하는 단계를 포함한다. 일부 실시예들에서, 오디오 데이터의 각각의 채널의 가중값은 오디오 데이터의 유형에 따라 결정된다. 예를 들 어, 시스템 통지의 가중값은 최대이며, 동작 오디오의 가중값은 중간이고, 배경 음악의 가중값은 최소이다. 대 안적으로, 동작 오디오의 가중값은 최대이며, 시스템 통지의 가중값은 중간이고, 배경 음악의 가중값은 최소이 다. 일부 실시예들에서, 시스템 프레임워크가 프로세싱 스레드를 포함하면, 시스템 프레임워크를 통해 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터를 획득하는 단계는, 프로세싱 스레드를 통 해 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터를 획득하는 단계를 포함한다. 일부 실시예들에서, 프로세싱 스레드는 오디오 믹싱 스레드이다. 503: 하드웨어 추상화 계층으로부터 시스템 프레임워크를 통해 오디오 파라미터를 획득하고, 하드웨어 추상화 계층은 오디오 파라미터를 저장한다. 본 출원의 이 실시예에서, 하드웨어 추상화 계층은 맞춤화된다. 그 하드웨어 추상화 계층은 단말 상의 그것과 는 상이하다. 단말 상의 하드웨어 추상화 계층은 스피커와 같은 하드웨어의 인터페이스를 호출하고 오디오 데 이터를 하드웨어에 재생을 위해 입력하도록 구성된다. 본 출원의 이 실시예에서의 하드웨어 추상화 계층은 하 드웨어에 연결되지 않고, 대신에 오디오 캡처링 프로그램과 통신 연결을 확립하고 오디오 데이터를 오디오 캡처 링 프로그램에 전송한다. 오디오 캡처링 프로그램은 오디오 파라미터로 구성된다. 오디오 파라미터는 오디오 캡처링 프로그램에 의해 수 신될 오디오 데이터가 오디오 파라미터를 충족시킬 필요가 있다는 것을 나타낸다. 예를 들어, 오디오 파라미터 가 24 킬로헤르츠(KHz) 듀얼 채널이면, 이는 오디오 캡처링 프로그램이 24 KHz 듀얼 채널의 오디오 데이터를 수 신하도록 구성된다는 것을 나타낸다. 하드웨어 추상화 계층에 의해 전송된 오디오 데이터의 오디오 파라미터가 오디오 캡처링 프로그램의 요건을 충 족하지 않으면, 오디오 캡처링 프로그램은 오디오 데이터를 원활하게 수신하지 못할 수 있다. 일부 실시예들에 서, 하드웨어 추상화 계층은 오디오 파라미터를 저장하고, 오디오 파라미터는 오디오 캡처링 프로그램의 요건에 따라 설정된다. 이런 식으로, 시스템 프레임워크는 하드웨어 추상화 계층으로부터 오디오 파라미터를 획득하고 오디오 파라미터를 충족시키는 오디오 데이터를 생성할 수 있어서, 하드웨어 추상화 계층은 오디오 데이터를 오 디오 캡처링 프로그램에 성공적으로 전송할 수 있다. 예를 들어, 오디오 캡처링 프로그램은 24 KHz의 오디오 데이터를 수신하고, 오디오 파라미터는 샘플링 레이트 24 KHz를 포함한다. 일부 실시예들에서, 오디오 파라미터는 타깃 샘플링 레이트, 타깃 채널 수량, 또는 타깃 샘플링 깊이 중 적어도 하나를 포함한다. 추가적으로, 일부 실시예들에서, 단계 503은 단계 502 전에 수행되거나, 또는 단계 503 및 단계 502는 동시에 수행되거나, 또는 단계 503은 단계 502 후에 수행된다. 일부 실시예들에서, 클라우드 애플리케이션 프로그램의 러닝 프로세스에서, 단계 503은 단지 한 번만 실행되거 나, 또는 시스템 프레임워크가 오디오 데이터를 프로세싱할 때마다, 단계 503은 수행될 필요가 있다. 이는 본 출원의 이 실시예로 제한되지 않는다. 504: 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 시스템 프레임워크를 통해 제3 오디오 데이 터를 프로세싱한다. 제3 오디오 데이터는 제2 오디오 데이터를 획득하기 위해 하드웨어 추상화 계층의 오디오 파라미터에 따라 프로 세싱될 수 있어서, 시스템 프레임워크에 의해 출력된 제2 오디오 데이터의 오디오 파라미터는 오디오 캡처링 프 로그램의 요건을 충족시킬 수 있다. 이런 식으로, 제2 오디오 데이터의 오디오 파라미터는 하드웨어 추상화 계 층의 오디오 파라미터와 일치하고 오디오 캡처링 프로그램의 요건을 충족시킨다. 다시 말하면, 제2 오디오 데 이터를 획득하기 위해, 오디오 파라미터에 따라 시스템 프레임워크를 통해 제3 오디오 데이터를 프로세싱하는 것은 오디오 데이터의 오디오 파라미터를 조정하는 것과 동등하다. 일부 실시예들에서, 오디오 파라미터는 타깃 샘플링 레이트, 타깃 채널 수량, 또는 타깃 샘플링 깊이 중 적어도 하나를 포함한다. 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 시스템 프레임워크를 통해 제3 오디오 데이터를 프로세싱하는 것은 다음 내지 중 적어도 하나를 포함한다. 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 레이트에 따라 시스템 프레임워크를 통해 제3 오디오 데 이터에 대해 리샘플링 프로세싱을 수행하는 것 ― 오디오 파라미터는 타깃 샘플링 레이트를 포함함 ―. 예를 들어, 만약 타깃 샘플링 레이트가 24 KHz이고 제3 오디오 데이터의 샘플링 레이트가 48 KHz이면, 리샘플링 프로세싱은 샘플링 레이트 24 KHz를 갖는 제2 오디오 데이터를 획득하기 위해 제3 오디오 데이터에 대해 수행된 다. 제2 오디오 데이터를 획득하기 위해, 타깃 채널 수량에 따라 시스템 프레임워크를 통해 제3 오디오 데이터 에 대해 채널 수량 수정 프로세싱을 수행하는 것 ― 오디오 파라미터는 타깃 채널 수량을 포함함 ―. 예를 들어, 만약 타깃 채널 수량이 듀얼 채널들이고 제3 오디오 데이터가 단일 채널 오디오 데이터이면, 채널 수량 수정 프로세싱은 듀얼 채널 제2 오디오 데이터를 획득하기 위해 제3 오디오 데이터에 대해 수행된다. 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 깊이에 따라 시스템 프레임워크를 통해 제3 오디오 데이 터에 대해 리샘플링 프로세싱을 수행하는 것 ― 오디오 파라미터는 타깃 샘플링 깊이를 포함함 ―. 예를 들어, 만약 타깃 샘플링 깊이가 8개 비트들이고 제3 오디오 데이터의 샘플링 깊이가 16개 비트들이면, 리 샘플링 프로세싱은 샘플링 깊이 8개 비트들을 갖는 제2 오디오 데이터를 획득하기 위해 제3 오디오 데이터에 대 해 수행된다. 일부 실시예들에서, 시스템 프레임워크는 프로세싱 스레드를 포함하고, 제2 오디오 데이터를 획득하기 위해, 오 디오 파라미터에 따라 시스템 프레임워크를 통해 제3 오디오 데이터를 프로세싱하는 것은, 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 프로세싱 스레드를 통해 제3 오디오 데이터를 프로세싱하는 것을 포함 한다. 시스템 프레임워크에서 오디오 파라미터에 따른 제3 오디오 데이터의 프로세싱과 제1 오디오 데이터의 오디오 믹싱 프로세싱은 모두가 동일한 스레드를 통해 수행되고, 다수의 스레드들을 통해 각각 수행될 필요는 없다. 이는 프로세싱 프로세스에서 오디오 데이터의 송신들을 줄이고 오디오 데이터의 프로세싱을 가속화한다. 일부 실시예들에서, 프로세싱 스레드는 오디오 믹싱 스레드이다. 505: 시스템 프레임워크를 통해 하드웨어 추상화 계층에 제2 오디오 데이터를 전송한다. 제2 오디오 데이터는 시스템 프레임워크를 통해 하드웨어 추상화 계층에 전송되고, 하드웨어 추상화 계층은 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송한다. 그러나, 만약 오디오 캡처링 프로그램이 시작되지 않거 나 또는 하드웨어 추상화 계층 및 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았으면, 제2 오디오 데이 터가 하드웨어 추상화 계층에 전송되더라도, 하드웨어 추상화 계층은 제2 오디오 데이터를 오디오 캡처링 프로 그램에 전송할 수 없다. 그러므로, 제2 오디오 데이터는 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통 신 연결을 성공적으로 확립할 때 시스템 프레임워크를 통해 하드웨어 추상화 계층에 전송된다. 가능한 구현예에서, 시스템 프레임워크를 통해 제2 오디오 데이터를 하드웨어 추상화 계층에 전송하는 것은, 하 드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하였을 때 시스템 프레임워크를 통해 하드웨 어 추상화 계층에 제2 오디오 데이터를 전송하는 것; 또는 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았을 때, 하드웨어 추상화 계층을 제어하여 오디오 캡처링 프로그램에 대한 통신 연결 을 확립하고, 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립했을 때, 시스템 프레임워크를 통해 제2 오디오 데이터를 하드웨어 추상화 계층에 전송하는 것을 포함한다. 하드웨어 추상화 계층을 제어하여 오디오 캡처링 프로그램에 대한 통신 연결을 확립하는 것은, 하드웨어 추상화 계층을 제어하여 통신 연결 확립 요청을 오디오 캡처링 프로그램에 전송하는 것과, 오디오 캡처링 프로그램이 청취를 통해 통신 연결 확립 요청을 검출하면, 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연 결을 확립하는 것을 포함한다. 그러나, 오디오 캡처링 프로그램이 하드웨어 추상화 계층에 의해 전송된 통신 연결 확립 요청을, 청취를 통해, 검출하지 못하면, 하드웨어 추상화 계층 및 오디오 캡처링 프로그램은 통신 연결을 성공적으로 확립하지 않았고, 제2 오디오 데이터는 시스템 프레임워크를 통해 폐기되고 제2 오디오 데이터는 하드웨어 추상화 계층에 더 이상 전송되지 않는다. 오디오 캡처링 프로그램이 하드웨어 추상화 계층에 의해 전송된 통신 연결 확립 요청을 청취를 통해 검출하지 못했다는 것은 오디오 캡처링 프로그램이 성공적으로 시작되지 않았기 때문일 수 있다. 가능한 구현예에서, 오 디오 캡처링 프로그램은 클라우드 애플리케이션 프로그램에 의해 생성된 오디오 데이터를 단말의 로컬 애플리케 이션 프로그램에 전송하도록 구성될 뿐 아니라, 또한 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데 이터를 단말의 로컬 애플리케이션 프로그램에 전송하도록 구성된다. 오디오 캡처링 프로그램이 성공적으로 시 작되지 않으면, 오디오 캡처링 프로그램은 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데이터를 단 말의 로컬 애플리케이션에 전송할 수 없다. 그 결과, 단말은 비디오 데이터에 따라 클라우드 애플리케이션 프 로그램의 픽처를 렌더링할 수 없다. 이 경우, 클라우드 애플리케이션 프로그램의 제2 오디오 데이터가 폐기되 더라도, 사용자가 영향을 받지 않는다. 일부 실시예들에서, 하드웨어 추상화 계층은 기입 인터페이스를 포함하고, 제2 오디오 데이터를 하드웨어 추상 화 계층에 전송하는 것은, 시스템 프레임워크를 통해 하드웨어 추상화 계층의 기입 인터페이스를 호출하여, 제2 오디오 데이터를 하드웨어 추상화 계층에 기입하는 것을 포함한다. 예를 들어, 시스템 프레임워크는 하드웨어 추상화 계층의 기입 인터페이스를 주기적으로 호출하고, 기입 인터페 이스에서, 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하였는지의 여부를 결정한다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하였으면, 시스템 프레임워크는 제2 오디오 데이터를 하드웨어 추상화 계층에 기입하거나, 또는 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연 결을 확립하지 않았으면, 하드웨어 추상화 계층을 제어하여 오디오 캡처링 프로그램에 대한 통신 연결을 확립하 고 시도한다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립하였으면, 제2 오디오 데이터는 시스템 프레임워크를 통해 하드웨어 추상화 계층에 기입되거나, 또는 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립함에 실패하면, 제2 오디오 데이터는 폐기된다. 506: 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 하드웨어 추상화 계층을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송하고, 오디오 캡처링 프로그램은 제2 오디오 데이터를 단말 의 로컬 애플리케이션 프로그램에 송신하도록 구성된다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램은 통신 연결을 확립하였고, 통신 연결은 임의의 형태의 통신 연결일 수 있다. 일부 실시예들에서, 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결은 소켓 연결이다. 도 6에서 도시된 바와 같이, 하드웨어 추상화 계층은 소켓의 클라이언트로서 역할을 하고, 오디오 캡처링 프로그램은 소켓의 서빙 단(serving end)으로서 역할을 한다. 오디오 캡처링 프로그램은 소켓에 바 인딩되는 별도의 스레드를 포함하고 그 스레드에서 청취한다. 소켓의 수락 기능의 호출은 호출을 차단하고, 오 디오 캡처링 프로그램은 소켓의 클라이언트가 연결되기까지 기다린다. 하드웨어 추상화 계층과 오디 오 캡처링 프로그램이 소켓 연결을 확립한 후, 오디오 캡처링 프로그램은 소켓의 판독 기능을 호출하 며, 판독 기능은 블로킹 기능으로서 구성되고, 하드웨어 추상화 계층이 오디오 데이터를 전송하기까지 기 다린다. 하드웨어 추상화 계층 및 오디오 캡처링 프로그램 둘 다가 동일한 컨테이너에서 실행되기 때문에, 하드웨어 추상화 계층을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 것은제2 오디오 데이터를 국부적으로 전송하는 것과 동등하고, 지연이 마이크로초로 측정된다. 이는 제2 오디오 데 이터의 송신 시간과 서버에 의해 오디오 데이터를 획득함에 있어서의 지연을 크게 줄인다. 일부 실시예들에서, 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결은 공유 메모리 연결이다. 프로그램 A와 프로그램 B가 일 예로서 사용된다. 공유 메모리 연결은, 프로그램 A와 프로그램 B가 메모리를 공유하며, 프로그램 A는 그 메모리에 데이터를 저장하고, 프로그램 B는 그 메모리로부터 데이터를 판 독할 수 있다는 것을 의미한다. 이는 프로그램 A와 프로그램 B 사이의 연결과 프로그램 A에서부터 프로그램 B 로의 데이터 송신을 구현한다. 가능한 구현예에서, 시스템 프레임워크를 통해 제2 오디오 데이터를 하드웨어 추상화 계층에 전송하는 것은 시 스템 프레임워크를 통해 제2 오디오 데이터를 하드웨어 추상화 계층의 타깃 메모리에 전송하는 것을 포함하며, 여기서 타깃 메모리는 하드웨어 추상화 계층 및 오디오 캡처링 프로그램의 공유 메모리이다. 그러므로, 하드웨 어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 하드웨어 추상화 계층을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 것은, 오디오 캡처링 프로그램에 의해, 타깃 메모리로부터 제2 오 디오 데이터를 판독하는 것을 포함한다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램은 임의의 통신 연결을 확립할 수 있다. 그것들 간에 형성된 통신 연결은 본 출원의 이 실시예로 제한되지 않는다. 그밖에, 본 출원의 이 실시예에서, 소켓 연결과 공유 메 모리 연결은 그것들 간에 형성된 통신 연결을 제한하는 일 없이 일 예로서 사용된다. 일부 실시예들에서, 제2 오디오 데이터를 획득한 후, 오디오 캡처링 프로그램은 제2 오디오 데이터를 인코딩 프 로그램에 전송하고, 인코딩 프로그램은 제2 오디오 데이터를 인코딩한 다음 인코딩된 제2 오디오 데이터를 단말 의 로컬 애플리케이션 프로그램에 전송한다. 일부 실시예들에서, 인코딩 프로그램과 단말은 통신 연결을 확립할 수 있다. 인코딩 프로그램은 그 통신 연결 에 따라 인코딩된 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하고, 단말의 로컬 애플리케 이션 프로그램은 인코딩된 제2 오디오 데이터를 디코딩하고 재생한다. 일부 실시예들에서, 통신 연결은 WebRTC 피어 투 피어 연결이다. 본 출원의 이 실시예는, 오디오 데이터를 프로세싱하고 서버의 다수의 프로그램들 사이에 송신하는 프로세스를 예시하기 위해, 클라우드 애플리케이션 프로그램이 제1 오디오 데이터를 출력하고 오디오 캡처링 프로그램이 제 2 오디오 데이터를 획득하는 일 예만을 사용한다. 가능한 구현예에서, 클라우드 애플리케이션 프로그램의 러닝 프로세스에서, 클라우드 애플리케이션 프로그램은 오디오 데이터를 항시 생성하거나, 또는 오디오 데이터를 다 수 회 생성할 수 있다. 클라우드 애플리케이션 프로그램에서부터 오디오 캡처링 프로그램으로 오디오 데이터를 송신하는 각각의 프로세스는 단계 501 내지 단계 506의 것과 동일하다. 세부사항들은 본 출원의 이 실시예에서 반복되지 않는다. 클라우드 애플리케이션 프로그램이 오디오 데이터를 지속적으로 출력하면, 클라우드 애플리케이션 프로그램은 타깃 사이즈의 오디오 데이터를 주기적으로 출력한다. 일부 실시예들에서, 오디오 데이터의 타깃 사이즈는 단 말의 오디오 데이터 캐시의 사이즈에 따라 달라진다. 일부 실시예들에서, 오디오 데이터의 타깃 사이즈는 시스 템 프레임워크의 캐시의 사이즈, 하드웨어 추상화 계층, 또는 오디오 캡처링 프로그램에 따라 달라진다. 예를 들어, 오디오 데이터는 10 ms(밀리초)의 플레이백 지속기간을 갖는 오디오 데이터이다. 본 출원의 이 실시예에서 제공되는 오디오 데이터 프로세싱 방법에서, 포워딩 프로그램은 시스템 프레임워크와 오디오 캡처링 프로그램 사이에 배치되고, 포워딩 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하였 다. 시스템 프레임워크를 통해 프로세싱한 후에 획득된 오디오 데이터는 통신 연결을 통해 오디오 캡처링 프로 그램에 직접 전송될 수 있다. 오디오 캡처링 프로그램이 오디오 기록 인터페이스를 호출하여 기록 스레드로부 터 오디오 데이터를 판독하는 솔루션과 비교하여, 통신 연결을 통해 오디오 데이터를 직접 전송하는 전술한 방 법은 오디오 데이터의 송신 링크를 줄이고 오디오 캡처링 프로그램에 의해 오디오 데이터를 획득하는데 소요되 는 시간과 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 단축시킨다. 추가적으로, 오디오 믹싱 프로세싱을 위한 스레드와 시스템 프레임워크에서 오디오 파라미터에 따라 프로세싱하 기 위한 스레드는 둘 다가 프로세싱 스레드이고, 하나의 스레드는 프로세싱을 두 번 수행할 수 있다. 이는 오 디오 데이터의 송신들을 감소시킴으로써, 하드웨어 추상화 계층에 의해 오디오 데이터를 획득하는데 소요된 시 간과 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 단축시킨다. 추가적으로, 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하는데 실패하면, 하드웨어 추 상화 계층은 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송할 수 없다. 그러므로, 제2 오디오 데이터를 하드웨어 추상화 계층에 전송할 때, 시스템 프레임워크는 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통 신 연결을 확립하였는지의 여부를 결정한다. 예를 들어, 도 6에 도시된 바와 같이, 하드웨어 추상화 계층과 오 디오 캡처링 프로그램이 통신 연결을 확립하지 않았으면, 시스템 프레임워크는 하드웨어 추상화 계층을 제어하 여 오디오 캡처링 프로그램에 대한 통신 연결을 확립하려고 시도한다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립하였다고 결정될 때, 제2 오디오 데이터는 시스템 프레임워크를 통해 하드웨어 추상화 계층에 전송되고, 하드웨어 추상화 계층과 오디오 캡처링 프로그램이 통신 연결을 확립하는데 실패하면, 제2 오디오 데이터는 시스템 프레임워크를 통해 폐기된다. 이는 불필요한 데이터의 송신들과 서버 상의 부하를 줄인다. 가능한 구현예에서, 포워딩 프로그램은 리샘플링 프로그램이다. 도 7에서 도시된 바와 같이, 서버는 클라 우드 애플리케이션 프로그램, 시스템 프레임워크, 리샘플링 프로그램, 및 오디오 캡처링 프로그 램을 포함한다. 클라우드 애플리케이션 프로그램은 시스템 프레임워크의 인터페이스를 호출하여 오디오 데이터를 시 스템 프레임워크에 기입할 수 있고, 시스템 프레임워크는 그 오디오 데이터를 프로세싱한 다음 획득 된 오디오 데이터를 리샘플링 프로그램에 전송한다. 리샘플링 프로그램과 오디오 캡처링 프로그램 은 통신 연결을 확립하여서, 오디오 데이터는 오디오 캡처링 프로그램에 직접 전송될 수 있다. 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 리샘플링 프로그램, 및 오디오 캡처링 프 로그램 모두는 서버의 운영 체제 컨테이너에서 실행된다. 일부 실시예들에서, 서버는 인코딩 프로그램을 또한 포함한다. 오디오 캡처링 프로그램은 오디 오 데이터를 인코딩 프로그램에 전송하고, 인코딩 프로그램은 오디오 데이터를 인코딩하고 인코딩된 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송한다. 도 7에 도시된 서버에 기초하여, 본 출원의 일 실시예가 오디오 데이터 프로세싱 방법을 추가로 제공한다. 도 8은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 본 출원의 이 실시예는 도 7에 도시된 서버에 의해 수행된다. 도 8을 참조하면, 그 방법은 다음 단계들을 포함한다. 801: 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 시스템 프레임워크에 입력한다. 단계 801은 단계 501과 유사하고 여기서 반복되지 않는다. 802: 시스템 프레임워크를 통해 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터 를 획득한다. 단계 802는 단계 502와 유사하고 여기서 반복되지 않는다. 803: 시스템 프레임워크를 통해 리샘플링 프로그램으로부터 오디오 파라미터를 획득한다. 리샘플링 프로그램은 오디오 파라미터로 구성된다. 오디오 파라미터는 리샘플링 프로그램에 의해 수신될 오디 오 데이터가 오디오 파라미터를 충족시킬 필요가 있다는 것을 나타낸다. 예를 들어, 오디오 파라미터가 48 KHz 듀얼 채널이면, 이는 리샘플링 프로그램이 48 KHz 듀얼 채널의 오디오 데이터를 수신하도록 구성된다는 것을 나 타낸다. 그러므로, 시스템 프레임워크는 리샘플링 프로그램의 요건을 충족시키는 오디오 데이터를 생성하기 위 해 리샘플링 프로그램으로부터 오디오 데이터를 획득한다. 804: 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 시스템 프레임워크를 통해 제3 오디오 데이 터를 프로세싱한다. 단계 804는 단계 504와 유사하고 여기서 반복되지 않는다. 805: 시스템 프레임워크를 통해 제2 오디오 데이터를 리샘플링 프로그램에 전송한다. 제2 오디오 데이터는 시스템 프레임워크를 통해 리샘플링 프로그램에 전송되고, 리샘플링 프로그램은 제2 오디 오 데이터를 오디오 캡처링 프로그램에 전송한다. 그러나, 만약 오디오 캡처링 프로그램이 시작되지 않거나 또 는 리샘플링 프로그램과 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았으면, 제2 오디오 데이터가 리샘 플링 프로그램에 전송되더라도, 리샘플링 프로그램은 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송할 수 없다. 일부 실시예들에서, 리샘플링 프로그램과 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립하였다는 결정에 따라, 제2 오디오 데이터는 시스템 프레임워크를 통해 리샘플링 프로그램에 전송된다. 가능한 구현예에서, 시스템 프레임워크를 통해 제2 오디오 데이터를 리샘플링 프로그램에 전송하는 것은, 리샘 플링 프로그램과 오디오 캡처링 프로그램이 통신 연결을 확립하였을 때 시스템 프레임워크를 통해 제2 오디오 데이터를 리샘플링 프로그램에 전송하는 것; 또는 리샘플링 프로그램과 오디오 캡처링 프로그램이 통신 연결을 확립하지 않았을 때 리샘플링 프로그램을 제어하여 오디오 캡처링 프로그램에 대한 통신 연결을 확립하는 것과, 리샘플링 프로그램과 오디오 캡처링 프로그램이 통신 연결을 성공적으로 확립하였을 때 시스템 프레임워크를 통 해 제2 오디오 데이터를 리샘플링 프로그램에 전송하는 것을 포함한다. 리샘플링 프로그램을 제어하여 오디오 캡처링 프로그램에 대한 통신 연결을 확립하는 것은, 리샘플링 프로그램 을 제어하여 통신 연결 확립 요청을 오디오 캡처링 프로그램에 전송하는 것과, 오디오 캡처링 프로그램이 청취 를 통해 통신 연결 확립 요청을 검출하면, 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결을 확 립하는 것을 포함한다. 그러나, 오디오 캡처링 프로그램이 리샘플링 프로그램에 의해 전송된 통신 연결 확립 요청을 청취를 통해 검출 하지 못하면, 리샘플링 프로그램과 오디오 캡처링 프로그램은 통신 연결을 성공적으로 확립하지 않았고, 제2 오 디오 데이터는 시스템 프레임워크를 통해 폐기되고 제2 오디오 데이터는 리샘플링 프로그램에 더 이상 전송되지 않는다. 오디오 캡처링 프로그램이 리샘플링 프로그램에 의해 전송된 통신 연결 확립 요청을 청취를 통해 검출하지 못했 다는 것은 오디오 캡처링 프로그램이 성공적으로 시작되지 않았기 때문일 수 있다. 가능한 구현예에서, 오디오 캡처링 프로그램은 클라우드 애플리케이션 프로그램에 의해 생성된 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하도록 구성될 뿐 아니라, 또한 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데이터 를 단말의 로컬 애플리케이션 프로그램에 전송하도록 구성된다. 오디오 캡처링 프로그램이 성공적으로 시작되 지 않으면, 오디오 캡처링 프로그램은 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데이터를 단말의 로컬 애플리케이션에 전송할 수 없다. 그 결과, 단말은 비디오 데이터에 따라 클라우드 애플리케이션 프로그램 의 픽처를 렌더링할 수 없다. 이 경우, 클라우드 애플리케이션 프로그램의 제2 오디오 데이터가 폐기되더라도, 사용자가 영향을 받지 않는다. 본 출원의 이 실시예는, 서버에서의 오디오 데이터의 송신 프로세스를 예시하기 위해, 리샘플링 프로그램과 오 디오 캡처링 프로그램이 통신 연결을 성공적으로 확립하였을 때 시스템 프레임워크가 제2 오디오 데이터를 리샘 플링 프로그램에 전송하는 일 예만을 사용한다. 다른 실시예에서, 리샘플링 프로그램과 오디오 캡처링 프로그 램이 통신 연결을 확립하였는지의 여부에 상관없이, 시스템 프레임워크는 제2 오디오 데이터를 리샘플링 프로그 램에 전송한다. 일부 실시예들에서, 가능한 구현예에서, 리샘플링 프로그램은 수신 스레드를 포함하고, 시스템 프레임워크를 통 해 제2 오디오 데이터를 하드웨어 추상화 계층에 전송하는 것은, 시스템 프레임워크를 통해 제2 오디오 데이터 를 리샘플링 프로그램의 수신 스레드에 전송하는 것을 포함한다. 일부 실시예들에서, 시스템 프레임워크는 제2 오디오 데이터를 획득하기 위해, 프로세싱 스레드를 통해 제1 오 디오 데이터를 프로세싱한다. 그러므로, 가능한 구현예에서, 시스템 프레임워크를 통해 제2 오디오 데이터를 리샘플링 프로그램의 수신 스레드에 전송하는 것은, 프로세싱 스레드를 통해 제2 오디오 데이터를 리샘플링 프 로그램의 수신 스레드에 전송하는 것을 포함한다. 806: 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 리샘플링 프로그램을 통해 제2 오 디오 데이터를 오디오 캡처링 프로그램에 전송하고, 오디오 캡처링 프로그램은 제2 오디오 데이터를 단말의 로 컬 애플리케이션 프로그램에 전송하도록 구성된다. 리샘플링 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하였고, 통신 연결은 임의의 형태의 통신 연결 이다. 일부 실시예들에서, 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결은 소켓 연결이다. 리샘플 링 프로그램은 소켓의 클라이언트로서 역할을 하고, 오디오 캡처링 프로그램은 소켓의 서빙 단으로서 역할을 한 다. 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 소켓 연결에 따라 리샘플링 프로그램에 의해 제2 오 디오 데이터를 오디오 캡처링 프로그램에 전송하는 방식이, 단계 506에서 하드웨어 추상화 계층과 오디오 캡처 링 프로그램 사이의 소켓 연결에 따라 하드웨어 추상화 계층에 의해 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 것과 유사하다. 세부사항들은 여기서 반복되지 않는다. 일부 실시예들에서, 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결은 공유 메모리 연결이다. 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 공유 메모리 연결에 따라 리샘플링 프로그램에 의해 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 방식이, 단계 506에서 하드웨어 추상화 계층과 오디오 캡 처링 프로그램 사이의 공유 메모리 연결에 따라 하드웨어 추상화 계층에 의해 제2 오디오 데이터를 오디오 캡처 링 프로그램에 전송하는 것과 유사하다. 세부사항들은 여기서 반복되지 않는다. 일부 실시예들에서, 리샘플링 프로그램은 수신 스레드를 포함하고, 리샘플링 프로그램과 오디오 캡처링 프로그 램 사이의 통신 연결은 수신 스레드와 오디오 캡처링 프로그램 사이의 통신 연결이거나; 또는 리샘플링 프로그 램은 수신 스레드와 제1 전송 스레드를 포함하며, 여기서 수신 스레드는 시스템 프레임워크에 의해 전송된 제2 오디오 데이터를 수신하도록 구성되고, 제1 전송 스레드는 수신 스레드에 의해 수신된 제2 오디오 데이터를 오 디오 캡처링 프로그램에 전송하도록 구성된다. 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결 은, 제1 전송 스레드와 오디오 캡처링 프로그램 사이의 통신 연결이다. 추가적으로, 단계 803에서 알 수 있는 바와 같이, 제2 오디오 데이터의 오디오 파라미터는 리샘플링 프로그램의 요건을 충족시킨다. 제2 오디오 데이터의 오디오 파라미터가 또한 오디오 캡처링 프로그램의 요건을 충족시키 면, 리샘플링 프로그램은 제2 오디오 데이터를 오디오 캡처링 프로그램에 직접 전송할 수 있다. 제2 오디오 데 이터의 오디오 파라미터가 오디오 캡처링 프로그램의 요건을 충족시키지 못하면, 리샘플링 프로그램은 제2 오디 오 데이터에 대해 리샘플링 프로세싱을 수행할 필요가 있어서, 프로세싱된 제2 오디오 데이터는 오디오 캡처링 프로그램의 요건을 충족시키고, 그때 프로세싱된 제2 오디오 데이터를 오디오 캡처링 프로그램에 전송한다. 예를 들어, 리샘플링 프로그램에 대해 구성된 오디오 파라미터는 48 KHz 듀얼 채널이다. 오디오 캡처링 프로그 램의 오디오 파라미터가 48 KHz 듀얼 채널이면, 리샘플링 프로그램은 제2 오디오 데이터에 대해 리샘플링 프로 세싱을 수행할 필요가 없고, 제2 오디오 데이터를 오디오 캡처링 프로그램에 직접 전송한다. 오디오 캡처링 프 로그램의 오디오 파라미터가 16 KHz 듀얼 채널이면, 리샘플링 프로그램은 제2 오디오 데이터에 대해 리샘플링 프로세싱을 수행할 필요가 있어서, 프로세싱된 제2 오디오 데이터의 샘플링 레이트가 16 KHz이다. 리샘플링 프로그램은 리샘플링 프로그램에 대해 구성된 오디오 파라미터가 오디오 캡처링 프로그램에 대해 구성 된 것과 동일할 때 리샘플링 프로세싱을 수행할 필요가 없다. 그러므로, 리샘플링 프로그램은 오디오 캡처링 프로그램에 대해 구성된 오디오 파라미터에 따라 구성될 수 있어서, 리샘플링 프로그램에 대해 구성된 오디오 파라미터는 오디오 캡처링 프로그램에 대해 구성된 것과 동일하다. 가능한 구현예에서, 시스템 프레임워크는 기록 스레드와 검출 스레드를 더 포함한다. 시스템 프레임워크에서의 검출 스레드는 다른 프로그램이 기록 스레드로부터 데이터를 현재 판독할지의 여부를 검출한다. 다른 프로그램 이 기록 스레드로부터 데이터를 판독하지 않으면, 데이터는 시스템 프레임워크를 통해 리샘플링 프로그램에 더 이상 전송되지 않는다. 검출 스레드는 불필요한 동작들과 소비 전력을 줄이도록 설계된다. 추가적으로, 시스템 프레임워크가 기록 스레드를 더 포함하면, 서버는 추가로 다음 단계 807 내지 단계 810을 수행할 필요가 있다. 시스템 프레임워크가 기록 스레드를 포함하지 않으면, 제2 오디오 데이터를 획득한 후, 오디오 캡처링 프로그램은 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송한다. 807: 리샘플링 프로그램을 통해 제2 오디오 데이터를 기록 스레드에 송신한다. 제2 오디오 데이터는 리샘플링 프로그램을 통해 기록 스레드에 전송되고, 기록 스레드는 수신된 제2 오디오 데 이터를 기록한다. 기록 스레드는 제2 오디오 데이터를 수신하는 동안 제2 오디오 데이터를 기록하여, 기록 프 로세스는 시간을 소요한다. 그 결과, 리샘플링 프로그램은 또한 제2 오디오 데이터를 기록 스레드에 전송하는 데 시간을 소요한다. 일부 실시예들에서, 리샘플링 프로그램은 수신 스레드와 제2 전송 스레드를 포함한다. 수신 스레드는 시스템 프레임워크로부터 제2 오디오 데이터를 수신하도록 구성되고, 제2 전송 스레드가 가용 캐 시를 가질 때, 제2 오디오 데이터를 제2 전송 스레드에 전송한다. 제2 오디오 데이터를 수신한 후, 제2 전송 스레드는, 기록 스레드에 대해 구성된 오디오 파라미터에 따라, 제2 오디오 데이터에 대해 리샘플링 프로세싱을 수행할지의 여부를 결정한다. 리샘플링 프로세싱이 제2 오디오 데이터에 대해 수행될 필요가 있으면, 제2 전송 스레드는 기록 스레드에 대해 구성된 오디오 파라미터에 따라 제2 오디오 데이터에 대해 리샘플링 프로세싱을 수행하여, 프로세싱된 제2 오디오 데이터를 획득하고, 프로세싱된 제2 오디오 데이터를 기록 스레드에 전송한다. 리샘플링 프로세싱이 제2 오디오 데이터에 대해 수행될 필요가 없으면, 제2 전송 스레드는 제2 오디 오 데이터를 기록 스레드에 직접 전송한다.제2 전송 스레드가 가용 캐시를 가질 때, 제2 전송 스레드는 리샘플링 프로그램에 의해 이전에 수신된 모든 오 디오 데이터를 기록 스레드에 전송한다. 추가적으로, 제2 오디오 데이터의 오디오 파라미터가 기록 스레드에 대해 구성된 것과 동일하면, 리샘플링 프로 그램은 제2 오디오 데이터를 기록 스레드에 직접 전송하고, 기록 스레드는 제2 오디오 데이터를 기록할 수 있다. 만약 제2 오디오 데이터의 오디오 파라미터가 기록 스레드에 대해 구성된 것과는 상이하고 리샘플링 프 로그램이 제2 오디오 데이터를 기록 스레드에 직접 전송하면, 기록 스레드는 제2 오디오 데이터를 순차적으로 수신하지 못할 수 있다. 기록 스레드에 대해 구성된 오디오 파라미터에 따라 제2 전송 스레드에 의해, 제2 오 디오 데이터에 대해 리샘플링 프로세싱을 수행할지의 여부를 결정하는 것은, 제2 전송 스레드에 의해, 제2 오디 오 데이터의 오디오 파라미터가 기록 스레드에 대해 구성된 것과 동일한지의 여부를 결정하는 것과, 제2 오디오 데이터의 오디오 파라미터가 기록 스레드에 대해 구성된 것과 동일하면, 리샘플링 프로세싱이 제2 오디오 데이 터에 대해 수행될 필요가 없다고 결정하는 것; 또는 제2 오디오 데이터의 오디오 파라미터가 기록 스레드에 대 해 구성된 것과 상이하면, 리샘플링 프로세싱은 제2 오디오 데이터에 대해 수행될 필요가 있다고 결정하는 것을 포함한다. 808: 기록 스레드를 통해 제2 오디오 데이터를 기록하여 제3 오디오 데이터를 획득한다. 시스템 프레임워크는 기록 스레드에 대응하는 캐시를 더 포함한다. 기록 스레드를 통해 제2 오디오 데이터를 기록하여 제3 오디오 데이터를 획득하는 것은, 제3 오디오 데이터를 획득하기 위해, 기록 스레드를 통해 제2 오 디오 데이터를 대응하는 캐시에 복사하는 것을 포함한다. 제3 오디오 데이터의 콘텐츠는 제2 오디오 데이터의 그것과 동일하다. 809: 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 기록 스레드로부터 제3 오디오 데이터 를 판독한다. 기록 스레드는 제3 오디오 데이터를 대응하는 캐시에 복사한다. 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 기록 스레드로부터 제3 오디오 데이터를 판독하는 것은, 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 기록 스레드에 대응하는 캐시로부터 제3 오디오 데이터를 판독하는 것을 포 함한다. 일부 실시예들에서, 오디오 기록 인터페이스는 판독 기능을 포함한다. 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출하여 기록 스레드로부터 제3 오디오 데이터를 판독하는 것은, 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스의 판독 기능을 호출하여 기록 스레드에 대응하는 캐시로부터 제3 오디오 데이터를 판독하는 것; 및 기록 스레드에 대응하는 캐시가 제3 오디오 데이터를 포함하지 않으면, 오디오 캡처링 프로그 램에 의해, 기록 스레드가 제3 오디오 데이터를 캐시에 복사하기까지 기다린 다음, 제3 오디오 데이터를 판독하 는 것을 포함한다. 810: 오디오 캡처링 프로그램을 통해 제3 오디오 데이터를 폐기하고 제2 오디오 데이터를 단말의 로컬 애플리케 이션 프로그램에 송신한다. 제2 오디오 데이터의 콘텐츠는 제3 오디오 데이터의 그것과 동일하지만, 제2 오디오 데이터는 리샘플링 프로그 램에 의해 오디오 캡처링 프로그램에 직접 전송되고 제3 오디오 데이터는 리샘플링 프로그램에 의해 기록 스레 드에 전송된 다음 오디오 캡처링 프로그램에 의해 기록 스레드로부터 판독된다. 그러므로, 제2 오디오 데이터 는 제3 오디오 데이터보다 빠르게 오디오 캡처링 프로그램에 도달할 수 있다. 서버에 의해 오디오 데이터를 전 송함에 있어서 지연을 줄이기 위해, 제2 오디오 데이터는 단말의 로컬 애플리케이션 프로그램에 전송되고 제3 오디오 데이터는 오디오 캡처링 프로그램을 통해 폐기된다. 추가적으로, 오디오 캡처링 프로그램과 리샘플링 프로그램은 통신 연결을 확립하였고 제2 오디오 데이터는 통신 연결에 따라 획득되지만, 제3 오디오 데이터는 오디오 캡처링 프로그램을 통해 오디오 기록 인터페이스를 호출 함으로써 획득된다. 그러므로, 제2 오디오 데이터와 제3 오디오 데이터를 획득하는 방법들은 상이하다. 일부 실시예들에서, 제2 오디오 데이터와 제3 오디오 데이터는 획득 방법들에 따라 서로 구별된다. 제2 오디오 데이 터는 단말의 로컬 애플리케이션 프로그램에 전송된다. 예를 들어, 오디오 캡처링 프로그램은 제1 캡처링 스레드와 제2 캡처링 스레드를 포함한다. 제1 캡처링 스레드 는 제2 오디오 데이터를 캡처하도록 구성된다. 제1 캡처링 스레드와 리샘플링 프로그램은 통신 연결을 확립하 였다. 리샘플링 프로그램은 리샘플링 프로그램과 제1 캡처링 스레드 사이의 통신 연결에 따라 제2 오디오 데이터를 제1 캡처링 스레드에 전송한다. 제2 캡처링 스레드는 제3 오디오 데이터를 캡처하고 오디오 기록 인터페 이스를 호출하여 기록 스레드로부터 제3 오디오 데이터를 판독하도록 구성된다. 서버는 제1 캡처링 스레드에 의해 캡처된 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 전송하고, 제2 캡처링 스레드에 의해 캡처 된 오디오 데이터를 폐기한다. 본 출원의 이 실시예에서의 리샘플링 프로그램은 운영 체제에서의 프로그램이며, 다시 말하면, 리샘플링 프로그 램은 운영 체제에 갖추어지는 프로그램이다. 본 출원에서, 운영 체제에서의 원래의 프로그램은 위의 오디오 데 이터 프로세싱 방법을 구현하도록 개선된다. 본 출원의 이 실시예는, 오디오 데이터를 프로세싱하고 서버의 다수의 프로그램들 사이에 송신하는 프로세스를 예시하기 위해, 클라우드 애플리케이션 프로그램이 제1 오디오 데이터를 출력하고 오디오 캡처링 프로그램이 제 2 오디오 데이터를 획득하는 일 예만을 사용한다. 가능한 구현예에서, 클라우드 애플리케이션 프로그램의 러닝 프로세스에서, 클라우드 애플리케이션 프로그램은 오디오 데이터를 항시 생성하거나, 또는 오디오 데이터를 다 수 회 생성할 수 있다. 클라우드 애플리케이션 프로그램에서부터 오디오 캡처링 프로그램으로 오디오 데이터를 송신하는 각각의 프로세스는 단계 801 내지 단계 810의 것과 동일하다. 세부사항들은 본 출원의 이 실시예에서 반복되지 않는다. 클라우드 애플리케이션 프로그램이 오디오 데이터를 지속적으로 출력하면, 클라우드 애플리케이션 프로그램은 타깃 사이즈의 오디오 데이터를 주기적으로 출력한다. 일부 실시예들에서, 오디오 데이터의 타깃 사이즈는 단 말의 오디오 데이터 캐시의 사이즈에 따라 달라진다. 일부 실시예들에서, 오디오 데이터의 타깃 사이즈는 시스 템 프레임워크의 캐시의 사이즈, 리샘플링 프로그램, 또는 오디오 캡처링 프로그램에 따라 달라진다. 예를 들 어, 오디오 데이터는 10 ms의 플레이백 지속기간을 갖는 오디오 데이터이다. 본 출원의 이 실시예에서 제공되는 오디오 데이터 프로세싱 방법에서, 운영 체제에서의 리샘플링 프로그램은 개 선된다. 리샘플링 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하여서, 리샘플링 프로그램은 통신 연결을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 직접 전송할 수 있다. 오디오 캡처링 프로그램이 오디오 기록 인터페이스를 호출하여 기록 스레드로부터 오디오 데이터를 판독하는 솔루션과 비교하여, 통신 연 결을 통해 오디오 데이터를 직접 전송하는 전술한 방법은 오디오 데이터의 송신 링크를 줄이고 오디오 캡처링 프로그램에 의해 오디오 데이터를 획득하는데 소요되는 시간과 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 단축시킨다. 추가적으로, 리샘플링 프로그램은 추가로 오디오 데이터를 기록 스레드에 전송하고, 오디오 캡처링 프로그램은 기록 스레드로부터 오디오 데이터를 판독하여, 시스템 프레임워크가 오디오 데이터를 리샘플링 프로그램에 지속 적으로 전송하는 것을 보장하고 오디오 데이터의 연속 프로세싱과 전송을 보장한다. 추가적으로, 오디오 캡처 링 프로그램은 리샘플링 프로그램에 의해 전송된 오디오 데이터를 전송하고 기록 스레드로부터 판독한 오디오 데이터를 폐기하여, 오디오 데이터를 전달함에 있어서의 짧은 지연을 보장한다. 추가적으로, 본 출원의 일 실시예가 추가로 지연 획득 방법을 제공한다. 지연 획득 방법은 위의 오디오 데이터 프로세싱 방법에서 서버에 의해 오디오 데이터를 획득함에 있어서 지연을 획득하는데 사용된다. 도 9는 본 출 원의 일 실시예에 따른 지연 획득 방법의 흐름도이다. 본 출원의 이 실시예는 서버에 의해 수행된다. 도 9를 참조하면, 그 방법은 다음 단계들을 포함한다. 901: 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 시스템 프레임워크에 입력하고, 제1 검출 오디오 데이터의 송신 순간을 기록한다. 검출 애플리케이션 프로그램은 서버에서 실행되고 있는 그리고 서버에 의해 오디오 데이터를 전달함에 있어서 지연을 검출하도록 구성되는 애플리케이션 프로그램이다. 검출 애플리케이션 프로그램은 검출 오디오 데이터를 출력하고, 서버에서의 다른 프로그램이 검출 오디오 데이터를 수신하는 순간이 후속하여 획득되어서, 검출 오디 오 데이터를 다른 프로그램에 송신하는데 소요되는 시간을 획득할 수 있다. 서버의 다른 프로그램은 검출 애플 리케이션 프로그램과는 다른 프로그램이다. 제1 검출 오디오 데이터는 검출 애플리케이션 프로그램에 의해 출력되는 임의의 검출 오디오 데이터이다. 일부 실시예들에서, 검출 애플리케이션 프로그램은 오디오 데이터를 지속적으로 출력할 수 있고, 검출 오디오 데이터 를 출력하는 것 외에도, 또한 다른 오디오 데이터를 출력할 수 있다. 검출 오디오 데이터는 검출 오디오 데이 터를 다른 오디오 데이터로부터 구별하여 프로그램이 검출 오디오 데이터를 수신하는 순간을 획득하도록 다른 오디오 데이터와는 상이하다.902: 시스템 프레임워크를 통해 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고, 제2 검출 오디오 데이터를 포워딩 프로그램에 전송한다. 시스템 프레임워크는 운영 체제에서의 프레임워크이고 오디오 데이터를 프로세싱하도록 구성된다. 포워딩 프로 그램은 시스템 프레임워크와 오디오 캡처링 프로그램 사이의 프로그램이고, 시스템 프레임워크를 통해 프로세싱 된 후에 획득된 오디오 데이터를 오디오 캡처링 프로그램에 송신하도록 구성된다. 포워딩 프로그램은 오디오 데이터를 포워딩하는 기능을 갖는다. 일부 실시예들에서, 포워딩 프로그램은 다른 기능들을 또한 갖는다. 이 는 본 출원의 이 실시예로 제한되지 않는다. 제2 검출 오디오 데이터는 제1 검출 오디오 데이터가 시스템 프레임워크를 통해 프로세싱된 후에 획득된 오디오 데이터이지만, 제2 검출 오디오 데이터와 제1 검출 오디오 데이터는 모두 다른 오디오 데이터로부터 구별할 수 있는 오디오 데이터이다. 그러므로, 제1 검출 오디오 데이터가 프로세싱되어 제2 검출 오디오 데이터가 획득되 더라도, 제2 검출 오디오 데이터는 다른 오디오 데이터로부터 구별되어 프로그램이 제2 검출 오디오 데이터를 수신하는 순간을 획득할 수 있다. 903: 포워딩 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 포워딩 프로그램을 통해 제2 검출 오 디오 데이터를 오디오 캡처링 프로그램에 송신하고, 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신 하는 제1 수신 순간을 기록하고, 오디오 캡처링 프로그램은 제2 검출 오디오 데이터를 단말의 로컬 애플리케이 션 프로그램에 송신하도록 구성된다. 오디오 캡처링 프로그램은 서버에서 오디오 데이터를 캡처하고 오디오 데이터를 단말에 전송하도록 구성되는 프 로그램이다. 포워딩 프로그램과 오디오 캡처링 프로그램은 통신 연결을 확립하였고, 포워딩 프로그램은 통신 연결을 통해 제2 오디오 데이터를 오디오 캡처링 프로그램에 직접 전송한다. 904: 송신 순간과 제1 수신 순간 사이의 제1 시간차를 획득하고, 제1 시간차는 검출 애플리케이션 프로그램에서 부터 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 송신 순간은 검출 애플리케이션 프로그램이 검출 오디오 데이터를 출력하는 순간이고, 제1 수신 순간은 오디오 캡처링 프로그램이 검출 오디오 데이터를 수신하는 순간이다. 추가적으로, 오디오 캡처링 프로그램은 서버에서 오디오 데이터를 캡처하고 오디오 데이터를 단말에 전송하도록 구성되는 프로그램이다. 그러므로, 오디오 캡처 링 프로그램이 검출 오디오 데이터를 수신하는 순간은 서버가 오디오 데이터를 획득하는 순간으로서 간주될 수 있다. 그러므로, 송신 순간과 제1 수신 순간 사이의 제1 시간차는 또한 서버에 의해 오디오 데이터를 획득하는 데 소용되는 시간, 다시 말하면, 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 나타낸다. 본 출원의 이 실시예에서 제공되는 지연 획득 방법에서, 검출 애플리케이션 프로그램은 검출 오디오 데이터를 전송하고, 오디오 캡처링 프로그램이 검출 오디오 데이터를 수신하는 수신 순간이 획득된다. 검출 애플리케이 션 프로그램에서부터 오디오 캡처링 프로그램으로 오디오 데이터를 송신하는데 소요되는 시간이, 송신 순간과 수신 순간 사이의 시간차, 다시 말하면, 서버에 의해 오디오 데이터를 획득하는데 소요되는 시간에 따라 정확하 게 획득될 수 있다. 그 시간은 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 나타낼 수 있다. 그 뒤에, 그 시간에 따라, 서버에 의해 오디오 데이터를 획득함에 있어서의 지연이 오디오 데이터의 재생 효과에 영향을 미치고 단말의 사용자의 청각 효과에 영향을 미치는지가, 서버를 계속 개선할지의 여부를 결정하기 위해, 결정될 수 있다. 이는 개발자들에 바람직한 개선 기준을 제공한다. 단계 902 및 903에서의 포워딩 프로그램은 하드웨어 추상화 계층; 또는 운영 체제에서의 원래의 리샘플링 프로 그램; 또는 다른 프로그램이다. 이는 본 출원의 이 실시예로 제한되지 않는다. 일부 실시예들에서, 포워딩 프로그램은 하드웨어 추상화 계층이다. 도 4에서 도시된 바와 같이, 서버는 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 하드웨어 추상화 계층, 및 오디오 캡처링 프로그램을 포함한다. 도 4에 도시된 서버에 기초하여, 본 출원의 일 실시예가 지연 획득 방법을 추가로 제공하여, 도 4에 도시된 서버에 의해 오디오 데이터를 전달함에 있어서 지연을 검출한다. 도 10은 본 출원의 일 실시예에 따른 지연 획득 방법의 흐름도이다. 본 출원의 이 실시예는 도 4에 도시된 서버에 의해 수행된다. 도 10을 참조하면, 그 방법은 다음 단계들을 포함한다. 1001: 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 시스템 프레임워크에 입력하고, 제1 검출 오디 오 데이터의 송신 순간을 기록한다. 검출 애플리케이션 프로그램은 서버에서 실행되고 있는 그리고 서버에 의해 오디오 데이터를 전달함에 있어서 지연을 검출하도록 구성되는 애플리케이션 프로그램이다. 검출 애플리케이션 프로그램은 검출 데이터를 출력하 고, 서버에서의 다른 프로그램이 검출 데이터를 수신하는 순간이 후속하여 획득되어서, 검출 데이터를 다른 프 로그램에 송신하는데 소요되는 시간을 획득할 수 있다. 서버의 다른 프로그램은 검출 애플리케이션 프로그램과 는 다른 프로그램이다. 서버에서 다수의 프로그램들 사이에 오디오 데이터를 송신하는데 소요되는 시간을 더 정확하게 획득하기 위해, 검출 애플리케이션 프로그램에 의해 출력되는 검출 데이터는 검출 오디오 데이터이다. 검출 오디오 데이터가 오디오 데이터이기 때문에, 검출 오디오 데이터가 시스템 프레임워크와 같은 다른 프로그램에 출력된 후, 다른 프로그램은 실제 오디오 데이터 프로세싱 프로세스를 시뮬레이션할 수 있다. 그러므로, 다른 프로그램이 검출 오디오 데이터를 수신하는 순간을 획득함으로써 지연을 후속하여 결정하는 것이 더 정확하다. 일부 실시예들에서, 검출 애플리케이션 프로그램은 단계 501의 클라우드 애플리케이션 프로그램과 상이하다. 클라우드 애플리케이션 프로그램은 수신된 동작 명령어에 따라 오디오 데이터를 출력하지만, 검출 애플리케이션 프로그램은 구성된 검출 로직에 따라 오디오 데이터를 출력한다. 일부 실시예들에서, 구성된 검출 로직은 제1 기간의 간격으로 검출 오디오 데이터를 전송하고 있다. 제1 기간은 4초 또는 5초와 같은 임의의 기간일 수 있 다. 제1 검출 오디오 데이터는 검출 애플리케이션 프로그램에 의해 출력되는 임의의 검출 오디오 데이터이다. 일부 실시예들에서, 검출 애플리케이션 프로그램은 오디오 데이터를 지속적으로 출력할 수 있고, 검출 오디오 데이터 를 출력하는 것 외에도, 또한 다른 오디오 데이터를 출력할 수 있다. 검출 오디오 데이터는 검출 오디오 데이 터를 다른 오디오 데이터로부터 구별하여 프로그램이 검출 오디오 데이터를 수신하는 순간을 획득하도록 다른 오디오 데이터와는 상이하다. 일부 실시예들에서, 제1 검출 오디오 데이터는 태그를 운반하는 오디오 데이터이고, 제1 검출 오디오 데이터에 의해 운반되는 태그에 따라, 제1 검출 오디오 데이터가 수신되는지의 여부가 후속하여 결정될 수 있다. 일부 실시예들에서, 제1 검출 오디오 데이터는 고정된 값을 갖는 오디오 데이터이고, 제1 검출 오디오 데이터는 검출 애플리케이션 프로그램에 의해 출력되는 다른 오디오 데이터와는 상이하다. 예를 들어, 제1 검출 오디오 데이터의 값은 0xffff이고(0x는 16진수를 나타내고 ffff는 16진수 값을 나타냄), 검출 애플리케이션 프로그램에 의해 출력된 다른 오디오 데이터의 값은 0이다. 도 11에서 도시된 바와 같이, 검출 애플리케이션 프로그램은 값이 0인 오디오 데이터를 출력하고, 값이 0xffff인 검출 오디오 데이터를 주기적으로 출력한다. 일부 실시예들에서, 서버는 기록 프로그램을 더 포함한다. 기록 프로그램은 검출 애플리케이션 프로그램이 제1 검출 오디오 데이터를 시스템 프레임워크에 입력하는 현재 순간을 기록한다. 현재 순간은 제1 검출 오디오 데 이터의 송신 순간이다. 일부 실시예들에서, 제1 검출 오디오 데이터를 시스템 프레임워크에 입력할 때, 검출 애플리케이션 프로그램은 메시지를 기록 프로그램에 전송한다. 그 메시지는 검출 애플리케이션 프로그램이 제1 검출 오디오 데이터를 시스템 프레임워크에 입력함을 나타낸다. 기록 프로그램은 메시지가 제1 검출 오디오 데 이터의 송신 순간으로서 수신되는 순간을 기록한다. 기록 프로그램은 검출 애플리케이션 프로그램이 아닌 프로그램, 또는 검출 애플리케이션 프로그램에 기록 기능 이 있는 프로그램이다. 일부 실시예들에서, 기록 프로그램은 다른 프로그램을 모니터링하는 기능을 더 갖는다. 기록 프로그램은 시스 템 프레임워크에서 데이터를 검출할 수 있고, 시스템 프레임워크가 검출 오디오 데이터를 포함함을 검출할 때, 현재 순간을 기록한다. 현재 순간은 제1 검출 오디오 데이터의 송신 순간이다. 1002: 시스템 프레임워크를 통해 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고, 제2 검출 오디오 데이터를 하드웨어 추상화 계층에 전송한다. 시스템 프레임워크를 통해 제1 검출 오디오 데이터를 프로세싱하는 방식은 단계 502에서 시스템 프레임워크를 사용하여 제1 오디오 데이터를 프로세싱하는 것과 유사하고, 시스템 프레임워크를 통해 제2 검출 오디오 데이터 를 하드웨어 추상화 계층에 전송하는 방식은 단계 505에서 시스템 프레임워크를 통해 제2 오디오 데이터를 하드 웨어 추상화 계층에 전송하는 것과 유사하다. 세부사항들은 여기서 반복되지 않는다. 제1 검출 오디오 데이터가 시스템 프레임워크를 통해 프로세싱된 후에 획득된 제2 검출 오디오 데이터는 제1 검 출 오디오 데이터와 유사하다. 제2 검출 오디오 데이터 및 제1 검출 오디오 데이터 둘 다는 다른 오디오 데이 터로부터 구별될 수 있다.예를 들어, 제1 검출 오디오 데이터가 태그를 운반하는 오디오 데이터이면, 제2 검출 오디오 데이터는 또한 태 그를 운반한다. 제1 검출 오디오 데이터의 값이 0xffff이고 다른 오디오 데이터의 값이 0이면, 제2 검출 오디 오 데이터의 값은 영이 아닌 값이다. 다른 오디오 데이터의 값은 프로세싱 후에 여전히 0이다. 다시 말하면, 검출 오디오 데이터의 프로세싱은 검출 오디오 데이터의 검출 기능을 무효화하지 않는다. 1003: 하드웨어 추상화 계층이 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기록하고, 송신 순간과 제2 수신 순간 사이의 제2 시간차를 획득하고, 제2 시간차는 검출 애플리케이션 프로그램에서부터 하드웨어 추상화 계층까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 기록 프로그램은 하드웨어 추상화 계층이 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기록하고, 제2 수신 순간을 기록하기 전, 먼저, 하드웨어 추상화 계층이 제2 검출 오디오 데이터를 수신하는 것으로 결정하도 록 추가로 구성된다. 일부 실시예들에서, 제2 검출 오디오 데이터를 수신한 후, 하드웨어 추상화 계층은 메시 지를 기록 프로그램에 보고하여 제2 검출 오디오 데이터가 수신되었음을 기록 프로그램에게 알린다. 보고된 메 시지를 수신할 때, 기록 프로그램은 현재 순간을 기록한다. 현재 순간은 하드웨어 추상화 계층이 제2 검출 오 디오 데이터를 수신하는 제2 수신 순간이다. 일부 실시예들에서, 기록 프로그램은 다른 프로그램을 모니터링하는 기능을 더 갖는다. 예를 들어, 기록 프로 그램은 하드웨어 추상화 계층의 코드가 제2 검출 오디오 데이터를 포함하는지를 검출하고, 제2 검출 오디오 데 이터가 검출되는 현재 순간을 기록한다. 현재 순간은 하드웨어 추상화 계층이 제2 검출 오디오 데이터를 수신 하는 제2 수신 순간이다. 1004: 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 하드웨어 추상화 계층을 통해 제2 검출 오디오 데이터를 오디오 캡처링 프로그램에 송신하고, 오디오 캡처링 프로그램이 제2 검출 오디오 데 이터를 수신하는 제1 수신 순간을 기록하고, 오디오 캡처링 프로그램은 제2 검출 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성된다. 하드웨어 추상화 계층과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 하드웨어 추상화 계층에 의해 제2 검 출 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 것은, 단계 506에서 하드웨어 추상화 계층과 오디오 캡 처링 프로그램 사이의 통신 연결에 따라 하드웨어 추상화 계층에 의해 제2 오디오 데이터를 오디오 캡처링 프로 그램에 전송하는 것과 유사하다. 세부사항들은 여기서 반복되지 않는다. 기록 프로그램은 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하고, 제1 수신 순간을 기록하기 전, 먼저, 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신한 것으로 결정하도 록 추가로 구성된다. 일부 실시예들에서, 제2 검출 오디오 데이터를 수신한 후, 오디오 캡처링 프로그램은 메 시지를 기록 프로그램에 보고하여 제2 검출 오디오 데이터이 수신되었음을 기록 프로그램에게 알린다. 보고된 메시지를 수신할 때, 기록 프로그램은 현재 순간을 기록한다. 현재 순간은 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간이다. 일부 실시예들에서, 기록 프로그램은 다른 프로그램을 모니터링하는 기능을 더 갖는다. 예를 들어, 기록 프로 그램은 오디오 캡처링 프로그램의 코드가 제2 검출 오디오 데이터를 포함하는지의 여부를 검출하고, 제2 검출 오디오 데이터가 검출되는 현재 순간을 기록한다. 현재 순간은 오디오 캡처링 프로그램이 제2 검출 오디오 데 이터를 수신하는 제1 수신 순간이다. 1005: 송신 순간과 제1 수신 순간 사이의 제1 시간차를 획득하고, 제1 시간차는 검출 애플리케이션 프로그램에 서부터 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 본 출원의 이 실시예는 서버에 의해 오디오 데이터를 전달함에 있어서 지연의 획득을 예시하기 위해, 검출 애플 리케이션 프로그램이 제1 검출 오디오 데이터를 출력하는 일 예만을 사용하여 서버에서 다수의 프로그램들 사이 에 제1 검출 오디오 데이터를 송신하는데 소요되는 시간을 획득한다. 가능한 구현예에서, 검출 애플리케이션 프로그램이 실행될 때, 검출 애플리케이션 프로그램은 오디오 데이터를 다수 회 출력할 수 있으며, 예컨대, 검 출 오디오 데이터를 규칙적인 간격으로 출력할 수 있고, 서버에 의해 오디오 데이터를 전달함에 있어서의 지연 은 검출 오디오 데이터의 각각의 피스에 따라 획득될 수 있다. 일부 실시예들에서, 통계적 수집 프로세싱이 서 버에 의해 오디오 데이터를 전달함에 있어서 타깃 지연을 획득하기 위해 다수의 지연들에 대해 수행된다. 검출 오디오 데이터의 다수의 피스들의 송신 프로세스들이 타깃 지연에 대해 고려되기 때문에, 타깃 지연은 더 정확 하다. 일부 실시예들에서, 통계적 수집 프로세싱은 평균화 프로세싱이다.예를 들어, 검출 애플리케이션 프로그램은 규칙적인 간격으로 검출 오디오 데이터를 전송하고, 다수의 제1 시간 차들과 다수의 제2 시간차들이 그 뒤에 획득될 수 있다. 다수의 제1 시간차들에 대해 통계적 수집 프로세싱을 수행함으로써 획득된 시간차는 검출 애플리케이션 프로그램에서부터 오디오 캡처링 프로그램으로 검출 오디오 데이터를 송신함에 있어서의 지연을 더 정확하게 나타낼 수 있다. 다수의 제2 시간차들에 대해 통계적 수집 프 로세싱을 수행함으로써 획득된 시간차는 검출 애플리케이션 프로그램에서부터 하드웨어 추상화 계층으로 검출 오디오 데이터를 송신함에 있어서의 지연을 더 정확하게 나타낼 수 있다. 검출 오디오 데이터의 인접한 두 개의 피스들이 서로로부터 명확하게 구별될 수 있는 것을 보장하기 위해, 4초 또는 5초와 같은 큰 시간 간격이 설정될 수 있다. 도 12에서 도시된 바와 같이, 지연을 정확하게 획득하는 프로세스에서, 검출 애플리케이션 프로그램이 제 1 검출 오디오 데이터를 전송하는 송신 순간은 t0이고, 하드웨어 추상화 계층이 제2 검출 오디오 데이터 를 수신하는 제2 수신 순간은 t1이다. t0 및 t1에 따르면, 검출 애플리케이션 프로그램에서부터 하드웨 어 추상화 계층까지의 검출 오디오 데이터의 지연은 약 40 ms(밀리초)인 것으로 학습될 수 있다. 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신하는 순간이 t2이다. t1 및 t2에 따르면, 하드웨어 추 상화 계층에서부터 오디오 캡처링 프로그램까지의 제2 검출 오디오 데이터의 지연은 약 0 ms인 것으로 학습될 수 있다. 그러므로, 서버에 의해 운영 체제로부터 오디오 데이터를 획득하는데 소용되는 시간이 약 40 ms가 되도록 제어된다. 이는 서버에 의해 오디오 데이터를 획득하는데 소요되는 시간을 크게 단축시킨다. 가능한 구현예에서, 서버는 클라우드 애플리케이션 프로그램에 의해 생성된 오디오 데이터를 단말에 전송할 뿐 아니라, 또한 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데이터를 단말에 전송한다. 단말에 의해 재생되는 오디오와 비디오 사이의 지연이 검출되고, 그 오디오 및 비디오는 동기화되지 않고 비디오를 재생하는 것에서부터 그 비디오에 대응하는 오디오를 재생하는 것까지의 지연이 약 0.37초임이 확인되었다. 비디오와 오 디오 사이의 지연이 0.3초보다 클 때, 인간의 귀는 명백한 지연을 인지하여, 사용자 경험에 영향을 미칠 수 있 다. 본 출원의 이 실시예에서 제공되는 오디오 데이터 프로세싱 방법이 사용되면, 서버에 의해 오디오 데이터 를 전달함에 있어서의 지연은 감소될 수 있고 비디오와 오디오 사이의 지연이 약 0.242초로 감소될 수 있어서, 인간의 귀는 명백한 지연을 인지할 수 없어, 사용자 경험을 개선시킬 수 있다. 본 출원의 이 실시예에서 제공되는 지연 획득 방법에서, 검출 애플리케이션 프로그램은 검출 오디오 데이터를 전송하고, 오디오 캡처링 프로그램이 검출 오디오 데이터를 수신하는 수신 순간이 획득된다. 검출 애플리케이 션 프로그램에서부터 오디오 캡처링 프로그램으로 오디오 데이터를 송신하는데 소요되는 시간이, 송신 순간과 수신 순간 사이의 시간차, 다시 말하면, 서버에 의해 오디오 데이터를 획득하는데 소요되는 시간에 따라 정확하 게 획득될 수 있다. 그 시간은 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 나타낼 수 있다. 그 뒤에, 그 시간에 따라, 서버에 의해 오디오 데이터를 획득함에 있어서의 지연이 오디오 데이터의 재생 효과에 영향을 미치는지와 단말의 사용자의 청각 효과에 영향을 미치는지가, 서버를 계속 개선할지의 여부를 결정하기 위해, 결정될 수 있다. 이는 개발자들에 바람직한 개선 기준을 제공한다. 추가적으로, 하드웨어 추상화 계층이 검출 오디오 데이터를 수신하는 수신 순간은 추가로 획득되어, 검출 애플 리케이션 프로그램에서부터 하드웨어 추상화 계층으로 검출 오디오 데이터를 송신하는데 소요된 시간과, 하드웨 어 추상화 계층에서부터 오디오 캡처링 프로그램으로 검출 오디오 데이터 송신하는데 소요되는 시간을 추가로 획득할 수 있다. 이런 식으로, 오디오 데이터의 각각의 송신 스테이지에서 소요되는 시간은 정확하게 획득될 수 있어, 후속하여 개발자들은 서버를 타깃 방식으로 개선할 수 있다. 일부 실시예들에서, 서버의 포워딩 프로그램은 리샘플링 프로그램이다. 도 7에서 도시된 바와 같이, 서버(70 0)는 클라우드 애플리케이션 프로그램, 시스템 프레임워크, 리샘플링 프로그램, 및 오디오 캡처 링 프로그램을 포함한다. 도 7에 기초하여, 본 출원의 일 실시예가 지연 획득 방법을 추가로 제공하여, 도 7에 도시된 서버에 의해 오디오 데이터를 전달함에 있어서 지연을 검출한다. 도 13은 본 출원의 일 실시예 에 따른 지연 획득 방법의 흐름도이다. 본 출원의 이 실시예는 도 7에 도시된 서버에 의해 수행된다. 도 13을 참조하면, 그 방법은 다음 단계들을 포함한다. 1301: 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 시스템 프레임워크에 입력하고, 제1 검출 오디 오 데이터의 송신 순간을 기록한다. 1302: 시스템 프레임워크를 통해 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고, 제2 검출 오디오 데이터를 리샘플링 프로그램에 전송한다. 1303: 리샘플링 프로그램이 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기록하고, 송신 순간과 제2 수 신 순간 사이의 제2 시간차를 획득하고, 제2 시간차는 검출 애플리케이션 프로그램에서부터 하드웨어 추상화 계 층까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 1304: 리샘플링 프로그램과 오디오 캡처링 프로그램 사이의 통신 연결에 따라 리샘플링 프로그램을 통해 제2 검 출 오디오 데이터를 오디오 캡처링 프로그램에 송신하고, 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하고, 오디오 캡처링 프로그램은 제2 검출 오디오 데이터를 단말의 로컬 애플리 케이션 프로그램에 송신하도록 구성된다. 1305: 송신 순간과 제1 수신 순간 사이의 제1 시간차를 획득하고, 제1 시간차는 검출 애플리케이션 프로그램에 서부터 오디오 캡처링 프로그램까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 단계 1301 내지 1305는 단계 1101 내지 1105와 유사하다. 유일한 차이는 단계 1101 내지 1105에서, 제2 검출 오디오 데이터가 하드웨어 추상화 계층에 전송되지만, 단계 1301 내지 1305에서, 제2 검출 오디오 데이터가 리 샘플링 프로그램에 전송된다는 것이다. 도 14에서 도시된 바와 같이, 지연을 실제로 획득하는 프로세스에서, 검출 애플리케이션 프로그램이 제1 검출 오디오 데이터를 전송하는 송신 순간은 t0이고, 리샘플링 프로그램이 제2 검출 오디오 데이터를 수 신하는 제2 수신 순간은 t1이다. 검출 애플리케이션 프로그램에서부터 리샘플링 프로그램까지의 오디오 데이터의 지연은 약 40 ms(밀리초)이다. 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수 신하는 제1 수신 순간은 t2이다. 리샘플링 프로그램에서부터 오디오 캡처링 프로그램까지의 오디 오 데이터의 지연은 약 0 ms이다. 그러므로, 서버에 의해 운영 체제로부터 오디오 데이터를 획득하는데 소용되 는 시간이 약 40 ms가 되도록 제어된다. 이는 서버에 의해 오디오 데이터를 획득하는데 소요되는 시간을 크게 단축시킨다. 가능한 구현예에서, 리샘플링 프로그램은 제2 검출 오디오 데이터를 기록 스레드에 전송하도록 추가로 구성된다. 기록 스레드는 제3 검출 오디오 데이터를 획득하기 위해 제2 검출 오디오 데이터를 기록하고, 오디 오 캡처링 프로그램은 기록 스레드로부터 제3 검출 오디오 데이터를 판독한다. 가능한 구현예에서, 기록 프로그램은 오디오 캡처링 프로그램이 제3 오디오 데이터를 수신하는 제3 수신 순간을 기록하도록 추가로 구성되고, 서버는 송신 순간과 제3 수신 순간 사이의 제3 시간차를 획득한다. 제3 시간차는 리샘플링 프로그램 및 기록 스레드를 통해 검출 애플리케이션 프로그램에서부터 오디오 캡처링 프로그램으로 검 출 오디오 데이터를 송신함에 있어서의 지연을 나타낸다. 기록된 제3 수신 순간을 더 정확하게 하기 위해, 일부 실시예들에서, 리샘플링 프로그램과 오디오 캡처링 프로 그램이 통신 연결을 확립하지 못했을 때, 오디오 데이터가 검출 애플리케이션 프로그램에 의해 출력되고 리샘플 링 프로그램 및 기록 스레드를 통과한 후 오디오 캡처링 프로그램으로 오디오 데이터를 송신함에 있어서 지연이 획득된다. 이런 식으로, 오디오 캡처링 프로그램은 제3 검출 오디오 데이터만을 수신하고, 제2 검출 오디오 데 이터를 수신할 수 없다. 그러므로, 획득된 제3 수신 순간은 더 정확하다. 도 15에서 도시된 바와 같이, 지연을 실제로 획득하는 프로세스에서, 검출 애플리케이션 프로그램이 제1 검출 오디오 데이터를 전송하는 송신 순간은 t0이고, 리샘플링 프로그램이 제2 검출 오디오 데이터를 수 신하는 제2 수신 순간은 t1이다. 검출 애플리케이션 프로그램에서부터 리샘플링 프로그램까지의 오디오 데이터의 지연은 약 40 ms(밀리초)이다. 오디오 캡처링 프로그램이 제2 검출 오디오 데이터를 수 신하는 제3 수신 순간은 t2이다. 리샘플링 프로그램에서부터 오디오 캡처링 프로그램까지의 오디 오 데이터의 지연은 약 90 ms이다. 가능한 구현예에서, 서버는 클라우드 애플리케이션 프로그램에 의해 생성된 오디오 데이터를 단말에 전송할 뿐 아니라, 또한 클라우드 애플리케이션 프로그램에 의해 생성된 비디오 데이터를 단말에 전송한다. 단말에 의해 재생되는 오디오와 비디오 사이의 지연이 검출되고, 그 오디오 및 비디오는 동기화되지 않고 비디오를 재생하는 것에서부터 그 비디오에 대응하는 오디오를 재생하는 것까지의 지연이 약 0.37초임이 확인되었다. 비디오와 오 디오 사이의 지연이 0.3초보다 클 때, 인간의 귀는 명백한 지연을 인지하여, 사용자 경험에 영향을 미칠 수 있 다. 본 출원의 이 실시예에서 제공되는 오디오 데이터 프로세싱 방법이 사용되면, 서버에 의해 오디오 데이터 를 전달함에 있어서의 지연은 감소될 수 있고 비디오와 오디오 사이의 지연이 약 0.242초로 감소될 수 있어서,인간의 귀는 명백한 지연을 인지할 수 없어, 사용자 경험을 개선시킬 수 있다. 본 출원의 이 실시예에서 제공되는 지연 획득 방법에서, 검출 애플리케이션 프로그램은 검출 오디오 데이터를 전송하고, 오디오 캡처링 프로그램이 검출 오디오 데이터를 수신하는 수신 순간이 획득된다. 검출 애플리케이 션 프로그램에서부터 오디오 캡처링 프로그램으로 오디오 데이터를 송신하는데 소요되는 시간이, 송신 순간과 수신 순간 사이의 시간차, 다시 말하면, 서버에 의해 오디오 데이터를 획득하는데 소요되는 시간에 따라 정확하 게 획득될 수 있다. 그 시간은 서버에 의해 오디오 데이터를 전달함에 있어서의 지연을 나타낼 수 있다. 그 뒤에, 그 시간에 따라, 서버에 의해 오디오 데이터를 획득함에 있어서의 지연이 오디오 데이터의 재생 효과에 영향을 미치는지와 단말의 사용자의 청각 효과에 영향을 미치는지가, 서버를 계속 개선할지의 여부를 결정하기 위해, 결정될 수 있다. 이는 개발자들에 바람직한 개선 기준을 제공한다. 추가적으로, 리샘플링 프로그램이 검출 오디오 데이터를 수신하는 수신 순간은 추가로 획득되어, 검출 애플리케 이션 프로그램에서부터 리샘플링 프로그램으로 검출 오디오 데이터를 송신하는데 소요된 시간과, 리샘플링 프로 그램에서부터 오디오 캡처링 프로그램으로 검출 오디오 데이터 송신하는데 소요되는 시간을 추가로 획득할 수 있다. 이런 식으로, 오디오 데이터의 각각의 송신 스테이지에서 소요되는 시간은 정확하게 획득될 수 있어, 후 속하여 개발자들은 서버를 타깃 방식으로 개선할 수 있다. 본 출원의 실시예들에서 제공되는 두 가지 오디오 데이터 프로세싱 방법들은 서버에 의해 오디오 데이터를 전달 함에 있어서 지연을 감소시키는데 거의 동일한 효과를 갖는다. 표 1은 본 출원의 실시예들에서 제공되는 임의 의 오디오 데이터 프로세싱 방법을 사용하여 획득된 비디오들과 오디오 사이의 지연들과 관련 기술에서 다른 오 디오 데이터 프로세싱 방법을 사용하여 획득된 비디오들과 오디오 사이의 지연들을 도시한다. 표 1은 다음과 같다: 표 1"}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "본 출원의 실시예들에서 제공되는 오디오 데이터 프로세싱 방법은 제품 A에 사용되는 한편, 다른 오디오 데이터 프로세싱 방법은 제품 B 및 제품 C에 사용된다. 제품 A, 제품 B, 및 제품 C는 적어도 하나의 유형의 게임을 제 공한다. 적어도 하나의 유형의 게임의 애플리케이션 프로그램이 서버에서 실행되며, 다시 말하면, 적어도 하나 의 유형의 클라우드 애플리케이션 프로그램이 서버에서 실행된다. 도 16은 본 출원의 일 실시예에 따른 서버의 개략적 구조도이다. 도 16을 참조하면, 서버는, 애플리케이션 러 닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 및 캡처링 모듈을 포함한다. 애플리케이션 러닝 모듈은 클라우드 애플리케이션 프로그램의 제1 오디오 데이터를 프레임워크 러닝 모듈 에 입력하도록 구성된다.프레임워크 러닝 모듈은 제1 오디오 데이터를 프로세싱하여 제2 오디오 데이터를 획득하고 제2 오디오 데 이터를 포워딩 모듈에 송신하도록 구성된다. 포워딩 모듈은 포워딩 모듈과 캡처링 모듈 사이의 통신 연결에 따라 제2 오디오 데이터를 캡 처링 모듈에 송신하도록 구성되며, 캡처링 모듈은 제2 오디오 데이터를 단말의 로컬 애플리케이션 프로그램에 송신하도록 구성된다. 일부 실시예들에서, 프레임워크 러닝 모듈은 포워딩 모듈과 캡처링 모듈이 통신 연결을 확립 하였다는 결정에 따라 제2 오디오 데이터를 포워딩 모듈에 송신하도록 구성된다. 프레임워크 러닝 모듈은 포워딩 모듈을 제어하여, 포워딩 모듈과 캡처링 모듈이 통신 연결을 확립하지 않았다는 결정에 따라 캡처링 모듈에 대한 통신 연결을 확립하고, 포워딩 모듈과 캡처링 모듈이 통신 연결을 성공적으로 확립하였다는 결정에 따라 제2 오디오 데이터를 포워딩 모듈 에 송신하도록 구성된다. 일부 실시예들에서, 프레임워크 러닝 모듈은 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터를 획득하고, 오디오 파라미터에 따라 제3 오디오 데이터를 프로세싱하여, 제2 오디오 데이터 를 획득하도록 구성된다. 일부 실시예들에서, 프레임워크 러닝 모듈은 다음 중 적어도 하나를 수행하도록 구성된다: 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 레이트에 따라 제3 오디오 데이터에 대해 리샘플링 프로세싱 을 수행하는 것 ― 오디오 파라미터는 타깃 샘플링 레이트를 포함함 ―; 제2 오디오 데이터를 획득하기 위해, 타깃 채널 수량에 따라 제3 오디오 데이터에 대해 채널 수량 수정 프로세 싱을 수행하는 것 ― 오디오 파라미터는 타깃 채널 수량을 포함함 ―; 및 제2 오디오 데이터를 획득하기 위해, 타깃 샘플링 깊이에 따라 제3 오디오 데이터에 대해 리샘플링 프로세싱을 수행하는 것 ― 오디오 파라미터는 타깃 샘플링 깊이를 포함함 ―. 도 17에서 도시된 바와 같이, 일부 실시예들에서, 프레임워크 러닝 모듈은 프로세싱 유닛을 포함하 고, 프로세싱 유닛은 제1 오디오 데이터에 대해 오디오 믹싱 프로세싱을 수행하여 제3 오디오 데이터를 획득하도록 구성된다. 프로세싱 유닛은 제2 오디오 데이터를 획득하기 위해, 오디오 파라미터에 따라 제3 오디오 데이터를 프로 세싱하도록 구성된다. 일부 실시예들에서, 포워딩 모듈은 하드웨어 추상화 계층 러닝 모듈이고, 프레임워크 러닝 모듈 은 하드웨어 추상화 계층 러닝 모듈으로부터 오디오 파라미터를 획득하도록 구성된다. 하드웨어 추상화 계층 러닝 모듈은 오디오 파라미터를 저장한다. 일부 실시예들에서, 포워딩 모듈은 하드웨어 추상화 계층 러닝 모듈이고, 프레임워크 러닝 모듈 은 하드웨어 추상화 계층 러닝 모듈의 기입 인터페이스를 호출하여 제2 오디오 데이터를 하드웨어 추상화 계층 러닝 모듈에 기입하도록 구성된다. 도 18에서 도시된 바와 같이, 일부 실시예들에서, 포워딩 모듈은 리샘플링 모듈이고, 프레임워크 러닝 모듈은 리샘플링 모듈로부터 오디오 파라미터를 획득하도록 추가로 구성된다. 리샘플링 모듈 은 오디오 파라미터로 구성된다. 일부 실시예들에서, 포워딩 모듈은 리샘플링 모듈이다. 리샘플링 모듈은 프로세싱된 제2 오디오 데이터를 획득하기 위해, 제2 오디오 데이터에 대해 리샘플링 프 로세싱을 수행하도록 추가로 구성된다. 리샘플링 모듈은 리샘플링 모듈과 캡처링 모듈 사이의 통신 연결에 따라 프로세싱된 제2 오 디오 데이터를 캡처링 모듈에 전송하도록 구성된다. 일부 실시예들에서, 프레임워크 러닝 모듈은 기록 유닛을 포함한다. 리샘플링 모듈은 제2 오디오 데이터를 기록 유닛에 전송하도록 구성된다. 기록 유닛은 제3 오디오 데이터를 획득하기 위해 제2 오디오 데이터를 기록하도록 구성된다. 캡처링 모듈은 오디오 기록 인터페이스를 호출하여 기록 유닛에서부터 제3 오디오 데이터를 판독하 도록 구성된다. 일부 실시예들에서, 캡처링 모듈은 제3 오디오 데이터를 폐기하고 제2 오디오 데이터를 단말의 로컬 애플 리케이션 프로그램에 송신하도록 구성된다. 도 19는 본 출원의 일 실시예에 따른 서버의 개략적 구조도이다. 도 19를 참조하면, 서버는, 애플리케이션 러 닝 모듈, 프레임워크 러닝 모듈, 포워딩 모듈, 캡처링 모듈, 기록 모듈, 및 획 득 모듈을 포함한다. 애플리케이션 러닝 모듈은 검출 애플리케이션 프로그램의 제1 검출 오디오 데이터를 프레임워크 러닝 모 듈에 입력하도록 구성된다. 기록 모듈은 제1 검출 오디오 데이터의 송신 순간을 기록하도록 구성된다. 프레임워크 러닝 모듈은 제1 검출 오디오 데이터를 프로세싱하여 제2 검출 오디오 데이터를 획득하고 제2 검출 오디오 데이터를 포워딩 모듈에 송신하도록 구성된다. 포워딩 모듈은 포워딩 모듈과 캡처링 모듈 사이의 통신 연결에 따라 제2 검출 오디오 데이터 를 캡처링 모듈에 송신하도록 구성되며, 캡처링 모듈은 제2 검출 오디오 데이터를 단말의 로컬 애 플리케이션 프로그램에 송신하도록 구성된다. 기록 모듈은 캡처링 모듈이 제2 검출 오디오 데이터를 수신하는 제1 수신 순간을 기록하도록 추가 로 구성된다. 획득 모듈은 송신 순간과 제1 수신 순간 사이의 제1 시간차를 획득하도록 구성되고, 제1 시간차는 애플리 케이션 러닝 모듈에서부터 캡처링 모듈까지의 검출 오디오 데이터의 송신 지연을 나타낸다. 일부 실시예들에서, 기록 모듈은 포워딩 모듈이 제2 검출 오디오 데이터를 수신하는 제2 수신 순간을 기 록하도록 추가로 구성된다. 획득 모듈은 송신 순간과 제2 수신 순간 사이의 제2 시간차를 획득하도록 구성되고, 제2 시간차는 애플리 케이션 러닝 모듈에서부터 포워딩 모듈에 검출 오디오 데이터를 송신함에 있어서의 지연을 나타낸 다. 일부 실시예들에서, 포워딩 모듈은 하드웨어 추상화 계층 러닝 모듈이다. 대안적으로, 포워딩 모듈(90 3)은 리샘플링 모듈이다. 도 20은 본 출원의 일 실시예에 따른 단말의 구조적 블록도이다. 단말은 전술한 실시예에서 단말에 의해 수행되는 단계들을 수행하도록 구성된다. 일부 실시예들에서, 단말은 휴대용 모바일 단말, 예를 들어, 스마트폰, 태블릿 컴퓨터, 동 화상 전문가 그룹 오디오 계층(Moving Picture Experts Group Audio Layer) III(MP3) 플레이어, 동 화상 전문가 그룹 오디오 계층 IV(MP4) 플레이어, 노트북 컴퓨터, 또는 데스크톱 컴퓨터 이다. 단말은 또한 사용자 장비, 휴대용 단말, 랩톱 단말, 데스크톱 단말, 또는 다른 이름에 의해 지칭 될 수 있다. 일반적으로, 단말은 프로세서와 메모리를 포함한다. 프로세서는 하나 이상의 프로세싱 코어들을 포함할 수 있고, 예를 들어, 4-코어 프로세서 또는 8-코어 프 로세서일 수 있다. 프로세서는 디지털 신호 프로세서(digital signal processor)(DSP), 필드 프로그램 가능 게이트 어레이(field-programmable gate array)(FPGA), 또는 프로그램가능 로직 어레이(programmable logic array)(PLA) 중 적어도 하나의 하드웨어 형태를 사용하여 구현될 수 있다. 프로세서는 대안적으로 메인 프로세서와 코프로세서를 포함할 수 있다. 중앙 프로세싱 유닛(central processing unit)(CPU)이라고도 지칭되는 메인 프로세서는 깨어 있는 상태에서 데이터를 프로세싱하도록 구성된다. 코프로세서는 스탠바이 상 태에서 데이터를 프로세싱하도록 구성되는 저전력 프로세서이다. 일부 실시예들에서, 프로세서는 그래픽 프로세싱 유닛(graphics processing unit)(GPU)과 통합될 수 있다. GPU는 디스플레이 스크린 상에 디스플레이 될 필요가 있는 콘텐츠를 렌더링하고 그리도록 구성된다. 일부 실시예들에서, 프로세서는 AI 프로세서를 더 포함할 수 있다. AI 프로세서는 머신 러닝에 관련된 컴퓨팅 동작을 프로세싱하도록 구성된다.메모리는 하나 이상의 컴퓨터 판독가능 저장 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 비일 시적일 수 있다. 메모리는 고속 랜덤 액세스 메모리(random access memory)(RAM)와 비휘발성 메모리, 예를 들어, 하나 이상의 디스크 저장 디바이스들 또는 플래시 저장 디바이스들을 더 포함할 수 있다. 일부 실 시예들에서, 메모리에서의 비일시적 컴퓨터 판독가능 저장 매체가 프로그램 코드의 적어도 하나의 피스를 저장하도록 구성된다. 프로그램 코드의 적어도 하나의 피스는 본 출원의 방법 실시예들에서 제공되는 오디오 데이터 프로세싱 방법 또는 지연 획득 방법을 수행하기 위해 프로세서에 의해 실행된다. 일부 실시예들에서, 단말은 주변 인터페이스와 적어도 하나의 주변기기를 포함할 수 있다. 프로세 서, 메모리, 및 주변 인터페이스는 버스 또는 신호선에 의해 연결될 수 있다. 각각의 주변 기기는 버스, 신호 케이블, 또는 회로 보드를 사용하여 주변 인터페이스에 연결될 수 있다. 구체적으로, 주변 디바이스는 라디오 주파수(radio frequency)(RF) 회로, 디스플레이 스크린, 카메라 컴포넌트 , 오디오 회로, 위치결정 컴포넌트, 및 전력 공급부 중 적어도 하나를 포함한다."}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "본 기술분야의 통상의 기술자가, 도 20에 도시된 구조는 단말에 대해 제한을 구성하지 않고, 단말은 그 도면에 도시된 것들보다 더 많거나 더 적은 컴포넌트들을 포함할 수 있거나, 또는 일부 컴포넌트들은 결합될 수 있거나, 또는 상이한 컴포넌트 전개가 사용될 수 있다는 것을 이해할 수 있다. 도 21은 본 출원의 일 실시예에 따른 서버의 개략적 구조도이다. 서버는 상이한 구성들 또는 성능으로 인해 크게 변할 수 있고, 하나 이상의 중앙 프로세싱 유닛들(CPU)과 하나 이상의 메모리들을 포함 할 수 있다. 메모리는 프로그램 코드의 적어도 하나의 피스를 저장하며, 프로그램 코드의 적어도 하나의 피스는 전술한 방법 실시예들에서 제공되는 방법들을 구현하기 위해 프로세서에 의해 로딩되고 실행된다. 확실히, 그 디바이스는 유선 또는 무선 네트워크 인터페이스, 키보드, I/O 인터페이스 및 I/O를 용이하게 하기 위한 다른 컴포넌트들을 또한 가질 수 있다. 그 디바이스는 디바이스 기능들을 구현하기 위한 다른 컴포넌트들 을 또한 포함할 수 있다. 세부사항들은 여기서 다시 설명되지 않는다. 서버는 전술한 오디오 데이터 프로세싱 방법에서 서버에 의해 수행되는 단계들을 수행하도록 구성될 수 있거나; 또는 전술한 지연 획득 방법에서 서버에 의해 수행되는 단계들을 수행하도록 구성될 수 있다. 본 출원의 실시예가 컴퓨터 디바이스를 추가로 제공한다. 컴퓨터 디바이스는 프로세서와 메모리를 포함한다. 메모리는 프로그램 코드의 적어도 하나의 피스를 저장한다. 프로그램 코드의 적어도 하나의 피스는 전술한 실 시예들에서 오디오 데이터 프로세싱 방법의 동작들을 수행하기 위해; 또는 전술한 실시예들에서 지연 획득 방법 의 동작들을 수행하기 위해 프로세서에 의해 로딩되고 실행된다. 추가적으로, 본 출원의 일 실시예가 저장 매체를 추가로 제공한다. 저장 매체는 컴퓨터 프로그램을 저장하도록 구성된다. 컴퓨터 프로그램은 전술한 실시예들에서 제공되는 방법들을 수행하도록 구성된다. 본 출원의 실시예가 명령어들을 포함하는 컴퓨터 프로그램 제품을 추가로 제공한다. 컴퓨터 프로그램 제품이 컴퓨터 상에서 실행될 때, 컴퓨터는 전술한 실시예들에서 제공되는 방법들을 수행하게 된다."}
{"patent_id": "10-2022-7017498", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "본 기술분야의 통상의 기술자가, 전술한 실시예들의 단계들의 모두 또는 일부는 하드웨어에 의해 구현될 수 있 거나, 또는 관련 하드웨어에게 지시하는 프로그램으로 구현될 수 있다는 것을 이해할 수 있다. 프로그램은 컴 퓨터 판독가능 저장 매체에 저장될 수 있다. 저장 매체는 ROM, 자기 디스크, 또는 광학적 디스크일 수 있다. 앞서의 설명들은 단지 본 출원의 예시적인 실시예들일 뿐이고, 본 출원을 제한할 의도는 아니다. 본 출원의 정 신 및 원리 내에서 이루어진 임의의 수정, 동등물 대체, 또는 개선은 본 출원의 보호 범위 내에 속한다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14 도면15 도면16 도면17 도면18 도면19 도면20 도면21"}
{"patent_id": "10-2022-7017498", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 출원의 일 실시예에 따른 구현 환경의 개략도이다. 도 2는 본 출원의 일 실시예에 따른 블록 체인 시스템에 적용되는 분산 시스템의 개략적 구조도이다. 도 3은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 도 4는 본 출원의 일 실시예에 따른 서버가 오디오 데이터를 단말에 전달할 때 오디오 데이터를 송신하는 흐름 도이다. 도 5는 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 도 6은 본 출원의 일 실시예에 따른 하드웨어 추상화 계층에 의해 오디오 데이터를 오디오 캡처링 프로그램에 전송하는 흐름도이다. 도 7은 본 출원의 일 실시예에 따른 서버가 오디오 데이터를 단말에게 전달할 때 오디오 데이터를 송신하는 흐 름도이다. 도 8은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 방법의 흐름도이다. 도 9는 본 출원의 일 실시예에 따른 지연 획득 방법의 흐름도이다. 도 10은 본 출원의 일 실시예에 따른 지연 획득 방법의 흐름도이다. 도 11은 본 출원의 일 실시예에 따른 검출 애플리케이션 프로그램에 의해 출력된 오디오 데이터의 다수의 피스 들의 개략도이다. 도 12는 본 출원의 일 실시예에 따른 서버에서 다수의 프로그램들에 의해 오디오 데이터를 획득하는 지연들의 개략도이다. 도 13은 본 출원의 일 실시예에 따른 지연 획득 방법의 흐름도이다. 도 14는 본 출원의 일 실시예에 따른 서버에서 다수의 프로그램들에 의해 오디오 데이터를 획득함에 있어서 지 연의 개략도이다.도 15는 본 출원의 일 실시예에 따른 서버에서 다수의 프로그램들에 의해 오디오 데이터를 획득함에 있어서 지 연의 개략도이다. 도 16은 본 출원의 일 실시예에 따른 오디오 데이터 프로세싱 장치의 개략적 구조도이다. 도 17은 본 출원의 일 실시예에 따른 다른 오디오 데이터 프로세싱 장치의 개략적 구조도이다. 도 18은 본 출원의 일 실시예에 따른 다른 오디오 데이터 프로세싱 장치의 개략적 구조도이다. 도 19는 본 출원의 일 실시예에 따른 지연 획득 장치의 개략적 구조도이다. 도 20은 본 출원의 일 실시예에 따른 단말의 구조적 블록도이다. 도 21은 본 출원의 일 실시예에 따른 서버의 개략적 구조도이다."}
