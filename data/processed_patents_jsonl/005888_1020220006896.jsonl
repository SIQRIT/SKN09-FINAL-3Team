{"patent_id": "10-2022-0006896", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0111099", "출원번호": "10-2022-0006896", "발명의 명칭": "딥러닝 모델의 튜닝 방법 및 시스템", "출원인": "네이버 주식회사", "발명자": "이기창"}}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "사용자 단말의 적어도 하나의 프로세서에 의해 수행되는, 정보 처리 시스템에 포함된 백본 모델을 이용한 딥러닝 모델의 튜닝 방법에 있어서,상기 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계;상기 서비스 요청의 응답으로써, 상기 정보 처리 시스템으로부터 상기 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하는 단계;상기 튜닝 데이터를 이용하여 상기 딥러닝 모델을 업데이트하는 단계를 포함하고,상기 튜닝 데이터는 상기 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 튜닝 데이터를 이용하여 상기 딥러닝 모델을 업데이트하는 것과 연관하여 상기 학습 상태 정보를 업데이트하는 단계를 더 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 학습 상태 정보는, 상기 딥러닝 모델의 학습률(learning rate), 옵티마이저 상태(optimizer states), 가중치 감쇠 계수(weight decay factor), 그래디언트 클리핑 계수(gradient clipping factor), 및 손실 스케일값(loss scale) 중 적어도 하나를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 서비스 요청을 상기 정보처리시스템으로 전송하는 단계는,상기 백본 모델과 연동되어 있는 API 서버로, 상기 딥러닝 모델의 상기 입력 데이터와 연관된 정보, 상기 튜닝대상 층과 연관된 정보 및 상기 학습 상태 정보 중 적어도 하나를 파라미터로 포함하는 API의 호출을 전송하는단계를 포함하고,상기 서비스 요청의 응답으로써, 상기 정보 처리 시스템으로부터 상기 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하는 단계는,상기 API의 호출의 응답으로써, 상기 API 서버로부터, 상기 딥러닝 모델의 상기 입력 데이터와 연관된 정보, 상기 튜닝 대상 층과 연관된 정보 및 상기 학습 상태 정보 중 적어도 하나에 기초한 상기 백본 모델의 실행 결과를 수신하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 백본 모델은, 상기 딥러닝 모델의 복수의 층 중 상기 튜닝 대상 층을 제외한 하나 이상의 층을 포함하는,딥러닝 모델의 튜닝 방법.공개특허 10-2023-0111099-2-청구항 6 제1항에 있어서,상기 백본 모델은, 상기 딥러닝 모델의 튜닝 전에, 학습 데이터에 기초하여 사전 학습되어 있는, 딥러닝 모델의튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 입력층이며,상기 서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계는, 상기 입력층의 출력을 포함하는 서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 출력층이며,상기 서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계는, 상기 딥러닝 모델의 입력 데이터를 포함하는서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8항에 있어서,상기 튜닝 데이터를 이용하여 상기 딥러닝 모델을 업데이트하는 단계는, 상기 백본 모델의 순전파 계산 출력을 상기 출력층에 입력하여 출력 확률을 산출하는 단계;상기 출력 확률을 레이블과 비교하여 손실을 계산하는 단계; 및상기 손실에 기초하여 상기 출력층을 업데이트하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 중간층이며,상기 서비스 요청을 상기 정보처리시스템으로 전송하는 단계는, 상기 딥러닝 모델의 입력 데이터 및, 상기 중간층에 대한 정보를 포함하는 서비스 요청을 상기 정보 처리 시스템으로 전송하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 서비스 요청의 응답으로써, 상기 정보 처리 시스템으로부터 상기 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하는 단계는, 상기 백본 모델의 순전파 계산 결과 및 역전파 계산 결과 중 적어도 하나를 수신하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "백본 모델을 포함하는 정보 처리 시스템의 적어도 하나의 프로세서에 의해 수행되는, 딥러닝 모델의 튜닝 방법에 있어서,상기 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 수신하는 단계; 상기 서비스 요청에 따라 상기 백본 모델의 실행 결과를 산출하는 단계; 및공개특허 10-2023-0111099-3-상기 서비스 요청의 응답으로써, 상기 백본 모델의 실행 결과를 포함하는 튜닝 데이터를 상기 딥러닝 모델이 포함된 사용자 단말로 전송하는 단계를 포함하고,상기 튜닝 데이터는 상기 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 입력층이며, 상기 서비스 요청은 상기 입력층의 출력, 레이블 및 상기딥러닝 모델의 상태 정보를 포함하며,상기 서비스 요청에 따라 상기 백본 모델의 실행 결과를 산출하는 단계는, 상기 입력층의 출력을 상기 백본 모델에 순전파하여 출력 확률을 획득하는 단계;상기 출력 확률을 상기 레이블과 비교하여 손실을 계산하는 단계; 상기 손실을 최소화 하는 방향으로 상기 백본 모델을 업데이트 하기 위한 그래디언트를 산출하는 단계; 및상기 그래디언트를 상기 백본 모델에 역전파하여 상기 입력층의 그래디언트를 획득하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 출력층이며, 상기 서비스 요청은 입력 데이터를 포함하며,상기 서비스 요청에 따라 상기 백본 모델의 실행 결과를 산출하는 단계는,상기 입력 데이터를 상기 백본 모델에 순전파하여 순전파 계산 출력을 산출하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서,상기 튜닝 대상 층은 상기 딥러닝 모델의 중간층이며, 상기 서비스 요청은 상기 중간층과 연관된 정보, 입력 데이터, 레이블 및 상기 딥러닝 모델의 상태 정보를 포함하며,상기 서비스 요청에 따라 상기 백본 모델의 실행 결과를 산출하는 단계는,상기 중간층과 연관된 정보를 기초로 상기 백본 모델의 중간층과 연관된 정보를 결정하는 단계;상기 입력 데이터를 상기 백본 모델에 순전파하여 출력 확률을 획득하는 단계; 상기 출력 확률과 상기 레이블을 비교하여 손실을 계산하는 단계; 상기 손실을 최소화 하는 방향으로 상기 백본 모델을 업데이트 하기 위한 그래디언트를 산출하는 단계; 및상기 그래디언트를 상기 백본 모델에 역전파하여 상기 중간층의 그래디언트를 획득하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항에 있어서,상기 서비스 요청의 응답으로써, 상기 백본 모델의 실행 결과를 포함하는 튜닝 데이터를 상기 딥러닝 모델이 포함된 사용자 단말로 전송하는 단계는, 상기 백본 모델의 순전파 계산 결과 및 역전파 계산 결과 중 적어도 하나를 상기 딥러닝 모델이 포함된 사용자 단말로 전송하는 단계를 포함하는, 딥러닝 모델의 튜닝 방법.공개특허 10-2023-0111099-4-청구항 17 클라우드 컴퓨팅 시스템의 적어도 하나의 프로세서에 의해 수행되는, 백본 모델을 이용한 딥러닝 모델의 튜닝방법에 있어서,사용자 가상 머신에 의해, 상기 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 가상 서버로 전송하는 단계;상기 가상 서버에 의해, 상기 서비스 요청의 응답으로써, 상기 백본 모델을 이용하여 튜닝 데이터를 산출하여상기 사용자 가상 머신으로 전송하는 단계; 및상기 사용자 가상 머신에 의해, 상기 튜닝 데이터를 이용하여 상기 딥러닝 모델을 업데이트하는 단계를 포함하고,상기 튜닝 데이터는 상기 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함하는, 딥러닝 모델의 튜닝 방법."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제1항 내지 제17항 중 어느 한 항에 따른 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2022-0006896", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "사용자 단말로서,메모리; 및상기 메모리와 연결되고, 상기 메모리에 포함된 컴퓨터 판독 가능한 적어도 하나의 프로그램을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로그램은,딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를포함하는 서비스 요청을 백본 모델을 포함하는 정보 처리 시스템으로 전송하고,상기 서비스 요청의 응답으로써, 상기 정보 처리 시스템으로부터 상기 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하고,상기 튜닝 데이터를 이용하여 상기 딥러닝 모델을 업데이트하기 위한 명령어들을 포함하며,상기 튜닝 데이터는 상기 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함하는, 사용자 단말."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 사용자 단말의 적어도 하나의 프로세서에 의해 수행되는, 정보 처리 시스템에 포함된 백본 모델을 이 용한 딥러닝 모델의 튜닝 방법을 제공한다. 이 방법은, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층 과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 정보 처리 시스템으로 전송하는 단 계, 서비스 요청의 응답으로써, 정보 처리 시스템으로부터 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하는 단계, 튜닝 데이터를 이용하여 딥러닝 모델을 업데이트하는 단계를 포함한다. 또한, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함한다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 딥러닝 모델의 튜닝 방법 및 시스템에 관한 것으로, 구체적으로, 다양한 태스크를 실행하기 위해 사 전 학습된 딥러닝 모델의 튜닝을 사용자 단말을 이용하여 실행할 수 있는 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 이미지 또는 영상을 이용한 객체 인식 또는 식별 작업, 음성 합성 및 인식, 자연어 처리 등과 같은 다양한 작업의 실행에 인공신경망에 기반한 딥러닝 모델이 광범위하게 사용되고 있다. 일반적으로, 특정 태스크 또는 작업의 실행을 위해서 해당 태스크의 목적이나 용도에 맞는 딥러닝 모델이 선택되고, 선택된 딥러닝 모델은 특 정 태스크의 실행에 적합하도록 다량의 데이터를 이용하여 학습된다. 한편, 다양한 태스크들의 공통적인 작업을 실행하도록 구성 및 학습된 백본(backbone) 모델을 기반으로 각 태스 크에 맞도록 백본 모델을 다른 모델과 연결하거나 백본 모델의 일부 구성을 튜닝하는 기법이 사용되고 있다. 하 지만, 최근 딥러닝 모델의 크기가 증가하면서 백본 모델의 튜닝에 필요한 컴퓨팅 리소스도 막대하게 커지고 있 다. 이에 따라, 딥러닝 기반의 백본 모델을 튜닝해서 특정 작업을 실행하고자 하는 개별 연구자 또는 사용자도 로컬 컴퓨팅 장치에서 대규모의 백본 모델을 설치하고 실행하는데 많은 시간과 비용을 투여해야 하는 문제점이 있다. 또한, 종래 기술에 따른 백본 모델 튜닝 방법에 따르면, 동일한 컴퓨팅 리소스를 사용하여 1개의 특정 백 본 모델의 튜닝만 가능하기 때문에, 다양한 사용자의 요구사항을 동시에 만족시키기 어렵다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상기와 같은 문제점을 해결하기 위한 딥러닝 모델의 튜닝 방법, 기록매체에 저장된 컴퓨터 프로그램 및 장치(시스템)를 제공한다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시는 방법, 장치(시스템) 또는 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 포함한 다양한 방식으로 구현될 수 있다. 본 개시의 일 실시예에 따르면, 사용자 단말의 적어도 하나의 프로세서에 의해 수행되는, 정보 처리 시스템에 포함된 백본 모델을 이용한 딥러닝 모델의 튜닝 방법은, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 정보 처리 시스템으로 전송하는 단계, 서비스 요청의 응답으로써, 정보 처리 시스템으로부터 백본 모델을 이용하여 산출된 튜닝 데이터를 수신 하는 단계, 튜닝 데이터를 이용하여 딥러닝 모델을 업데이트하는 단계를 포함하며, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함한다. 본 개시의 다른 실시예에 따르면, 백본 모델을 포함하는 정보 처리 시스템의 적어도 하나의 프로세서에 의해 수 행되는, 딥러닝 모델의 튜닝 방법은, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 수신하는 단계, 서비스 요청에 따라 백본 모델의 실행 결과를 산출하는 단계, 및 서비스 요청의 응답으로서, 백본 모델의 실행 결과를 포함하는 튜닝 데이터를 딥러닝 모델이 포함된 사용자 단말로 전송하는 단계를 포함하고, 튜닝 데이터는 백본 모델의 파라미터, 특정 층 에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함한다. 본 개시의 또 다른 실시예에 따르면, 클라우드 컴퓨팅 시스템의 적어도 하나의 프로세서에 의해 수행되는, 백본 모델을 이용한 딥러닝 모델의 튜닝 방법은, 사용자 가상 머신에 의해, 딥러닝 모델의 입력 데이터와 연관된 정 보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 가상 서버로 전 송하는 단계, 가상 서버에 의해, 서비스 요청의 응답으로서, 백본 모델을 이용하여 튜닝 데이터를 산출하여 사 용자 가상 머신으로 전송하는 단계, 및 사용자 가상 머신에 의해, 튜닝 데이터를 이용하여 딥러닝 모델을 업데 이트하는 단계를 포함하고, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함한다. 본 개시의 또 다른 실시예에 따르면, 사용자 단말, 정보 처리 시스템 또는 클라우드 컴퓨팅 시스템의 적어도 하 나의 프로세서에 의해 수행되는, 딥러닝 모델의 튜닝 방법을 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기 록 매체에 저장된 컴퓨터 프로그램이 제공된다. 본 개시의 또 다른 실시예에 따르면, 사용자 단말은, 메모리, 및 메모리와 연결되고, 메모리에 포함된 컴퓨터 판독 가능한 적어도 하나의 프로그램을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 적어도 하나의 프로그램은, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적 어도 하나를 포함하는 서비스 요청을 정보 처리 시스템으로 전송하고, 서비스 요청의 응답으로써, 정보 처리 시 스템으로부터 백본 모델을 이용하여 산출된 튜닝 데이터를 수신하고, 튜닝 데이터를 이용하여 딥러닝 모델을 업 데이트하기 위한 명령어들을 포함하며, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층 의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함한다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 일부 실시예에 따르면, 백본 모델의 구성이나 파라미터를 변경하지 않고, 하나 이상의 사용자 단말 또는 사용자 공간에 저장된 로컬 사용자 모델을 튜닝할 수 있기 때문에, 다양한 사용자들의 요구사항에 맞추어 복수의 딥러닝 모델을 동시에 튜닝할 수 있다. 본 개시의 일부 실시예에 따르면, 사용자 모델의 튜닝을 위해 API 호출과 같은 원격 요청을 통해 백본 모델의 실행 결과를 제공받을 수 있으므로, 백본 모델을 보유하고 관리하는 서버 또는 플랫폼의 외부에 백본 모델의 내 부 구성을 노출하지 않고 사용자의 다양한 요구사항에 맞는 딥러닝 모델의 튜닝 서비스를 제공할 수 있다. 따라 서, 대규모의 백본 모델의 보안성 및 신뢰성을 확보한 상태에서 고품질의 딥러닝 모델 튜닝 서비스의 제공이 가 능하다. 본 개시의 일부 실시예에 따르면, 딥러닝 모델 학습 또는 튜닝에 필요한 학습률, 옵티마이저 상태 등과 같은 상 태 정보를 사용자 단말 또는 사용자 공간 측에서만 저장 및 관리할 수 있다. 따라서, 딥러닝 모델의 튜닝에 필 요한 요청을 무상태 프로토콜(stateless protocol)로 진행할 수 있으며, 사전 정의된 원격 요청을 통해 다수의 사용자 단말의 모델 튜닝 요청을 처리할 수 있다. 또한, 다수의 사용자 단말로부터의 모델 튜닝 요청 트래픽이 급증하는 경우에도, 백본 모델에 접근하는 서버의 스케일링도 용이 해진다. 본 개시의 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급되지 않은 다른 효과들은 청구범위의 기재로부"}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자(“통상의 기술자”라 함)에게 명확하게 이해될 수 있 을 것이다."}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 개시의 실시를 위한 구체적인 내용을 첨부된 도면을 참조하여 상세히 설명한다. 다만, 이하의 설명에 서는 본 개시의 요지를 불필요하게 흐릴 우려가 있는 경우, 널리 알려진 기능이나 구성에 관한 구체적 설명은 생략하기로 한다. 첨부된 도면에서, 동일하거나 대응하는 구성요소에는 동일한 참조부호가 부여되어 있다. 또한, 이하의 실시예 들의 설명에 있어서, 동일하거나 대응되는 구성요소를 중복하여 기술하는 것이 생략될 수 있다. 그러나, 구성 요소에 관한 기술이 생략되어도, 그러한 구성요소가 어떤 실시예에 포함되지 않는 것으로 의도되지는 않는다.개시된 실시예의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 후술되어 있는 실시예 들을 참조하면 명확해질 것이다. 그러나, 본 개시는 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 개시가 완전하도록 하고, 본 개시가 통상의 기술 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것일 뿐이다. 본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 개시된 실시예에 대해 구체적으로 설명하기로 한다. 본 명세서에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 관련 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 발명의 설명 부분에서 상세히 그 의미를 기재할 것이다. 따라서, 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어 가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 명세서에서의 단수의 표현은 문맥상 명백하게 단수인 것으로 특정하지 않는 한, 복수의 표현을 포함한다. 또한, 복수의 표현은 문맥상 명백하게 복수인 것으로 특정하지 않는 한, 단수의 표현을 포함한다. 명세서 전체 에서 어떤 부분이 어떤 구성요소를 포함한다고 할 때, 이는 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있음을 의미한다. 또한, 명세서에서 사용되는 '모듈' 또는 '부'라는 용어는 소프트웨어 또는 하드웨어 구성요소를 의미하며, '모 듈' 또는 '부'는 어떤 역할들을 수행한다. 그렇지만, '모듈' 또는 '부'는 소프트웨어 또는 하드웨어에 한정되 는 의미는 아니다. '모듈' 또는 '부'는 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서, '모듈' 또는 '부'는 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌웨어, 마이 크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 또는 변수들 중 적어도 하나를 포 함할 수 있다. 구성요소들과 '모듈' 또는 '부'들은 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 '모듈' 또는 '부'들로 결합되거나 추가적인 구성요소들과 '모듈' 또는 '부'들로 더 분리될 수 있다. 본 개시의 일 실시예에 따르면, '모듈' 또는 '부'는 프로세서 및 메모리로 구현될 수 있다. '프로세서'는 범용 프로세서, 중앙 처리 장치(CPU), 마이크로프로세서, 디지털 신호 프로세서(DSP), 제어기, 마이크로제어기, 상태 머신 등을 포함하도록 넓게 해석되어야 한다. 몇몇 환경에서, '프로세서'는 주문형 반도체(ASIC), 프로그램가 능 로직 디바이스(PLD), 필드 프로그램가능 게이트 어레이(FPGA) 등을 지칭할 수도 있다. '프로세서'는, 예를 들어, DSP와 마이크로프로세서의 조합, 복수의 마이크로프로세서들의 조합, DSP 코어와 결합한 하나 이상의 마 이크로프로세서들의 조합, 또는 임의의 다른 그러한 구성들의 조합과 같은 처리 디바이스들의 조합을 지칭할 수 도 있다. 또한, '메모리'는 전자 정보를 저장 가능한 임의의 전자 컴포넌트를 포함하도록 넓게 해석되어야 한 다. '메모리'는 임의 액세스 메모리(RAM), 판독-전용 메모리(ROM), 비-휘발성 임의 액세스 메모리(NVRAM), 프 로그램가능 판독-전용 메모리(PROM), 소거-프로그램가능 판독 전용 메모리(EPROM), 전기적으로 소거가능 PROM(EEPROM), 플래쉬 메모리, 자기 또는 광학 데이터 저장장치, 레지스터들 등과 같은 프로세서-판독가능 매체 의 다양한 유형들을 지칭할 수도 있다. 프로세서가 메모리로부터 정보를 판독하고/하거나 메모리에 정보를 기 록할 수 있다면 메모리는 프로세서와 전자 통신 상태에 있다고 불린다. 프로세서에 집적된 메모리는 프로세서 와 전자 통신 상태에 있다. 본 개시에서, '시스템'은 서버 장치와 클라우드 장치 중 적어도 하나의 장치를 포함할 수 있으나, 이에 한정되 는 것은 아니다. 예를 들어, 시스템은 하나 이상의 서버 장치로 구성될 수 있다. 다른 예로서, 시스템은 하나 이상의 클라우드 장치로 구성될 수 있다. 또 다른 예로서, 시스템은 서버 장치와 클라우드 장치가 함께 구성되 어 동작될 수 있다. 본 개시에서, '딥러닝 모델(deep-learning model)'은 다중 또는 복수의 비선형 변환 기법 또는 모델의 조합을 통해 높은 수준의 추상화(abstraction)를 실행할 수 있는 기계 학습 알고리즘 또는 모델을 지칭할 수 있다. 딥 러닝 모델은 복잡한 비선형 관계를 모델링할 수 있는 심층 신경망(deep neural network)으로 구현될 수 있으며, 심층 신경망은 입력층과 출력층 사이에 복수의 은닉층을 포함하는 인공신경망(artificial neural network)을 나 타낼 수 있다. 본 개시에서, '백본 모델(backbone model)'은 다양한 종류의 태스크(또는 작업)를 수행하기 위해 공통적으로 필 요한 기능을 실행하도록 구성되거나 학습된 딥러닝 모델을 지칭할 수 있다. 백본 모델은, 다양한 종류의 태스크 를 실행하기 위해 해당 모델의 일부분 또는 일부 층의 구조 또는 파라미터를 변경하거나 해당 태스크의 목적에맞도록 구성된 추가의 모델 또는 모듈과 연결될 수 있다. 예를 들어, 백본 모델은 일반적인 시각적 패턴 분류 (classification)를 위해 구성 또는 학습된 모델로서, 객체 감지(object detection), 세그멘테이션 (segmentation), 자세 추정(pose estimation) 등을 위해 입력 데이터로부터 특징(feature)만을 추출하도록 구 성되며, 추출된 특징은 각 태스크의 목적에 맞게 구성된 다른 모델로 전달될 수 있다. 예를 들어, 백본 모델은 ResNet, Inception, Mobile Net 등과 같은 모델을 지칭할 수 있다. 특히, 본 개시에서의 백본 모델은 대량의 파라미터와 학습데이터를 이용하여 종합적이고 고차원의 추론이 가능한 초거대 인공지능 모델을 포함할 수 있다. 본 개시에서, '튜닝(tuning)'은 사전에 학습된 딥러닝 모델을 기반으로 좀 더 개선된 성능을 목적으로 하거나 새로운 목적을 위해 해당 모델의 구성 또는 파라미터 등을 조정하는 과정을 지칭할 수 있다. 예를 들어, 튜닝 은, 추가의 학습 데이터를 이용하여 딥러닝 모델에 포함된 일부 층의 가중치 또는 파라미터 등을 업데이트하는 것을 포함할 수 있다. 본 개시에서, '복수의 A의 각각' 또는 '복수의 A 각각'은 복수의 A에 포함된 모든 구성 요소의 각각을 지칭하거 나, 복수의 A에 포함된 일부 구성 요소의 각각을 지칭할 수 있다. 도 1은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 시스템의 구성을 나타낸다. 도시된 바와 같이, 딥러닝 모델의 튜닝 시스템은 네트워크를 통해 연결된 복수의 사용자 단말(110, 120) 및 서버를 포함할 수 있다. 일 실시예에 따르면, 사용자는 사용자 단말(110, 120)을 통해 사용자 모델(112, 122)이 특정 작업(task)을 실행하기 적합하도록 구성하거나 특정 작업에 대해 개선된 성능을 갖도록 하기 위하여, 사용자 모 델(112, 122)을 튜닝할 수 있다. 구체적으로, 사용자는 일반적인 작업(task)을 수행할 수 있도록 사전 학습된 (pre-trained) 모델을 이용하여 사용자 모델(112, 122)을 설계한 후, 특정 작업(예: 감성 분석, 질의 응답, 정 보 검색, 기계 번역 등)에서 최적의 성능을 내는 모델을 구현하기 위하여, 사용자 단말(110, 120)을 통해 사용 자 모델(112, 122) 각각의 일부 또는 전부를 튜닝할 수 있다. 사용자 단말(110, 120)에 설치되어 튜닝되는 사 용자 모델(112, 122)은, 각 모델의 모든 구성요소들(예를 들어, 모델을 구성하는 복수의 층, 각 층과 연관된 가 중치 또는 파라미터, 상태 정보 등)의 일부(114, 124)를 포함하고, 나머지 일부(116, 126)는 네트워크를 통해 접근 가능한 서버에 설치된 백본 모델의 구성요소(157, 158)로 대체될 수 있다. 여기서, 백본 모델 은, 사용자 모델(112, 122)의 튜닝 전에, 학습 데이터에 기초하여 사전 학습될 수 있다. 또한, 도 1에 도 시된 사용자 모델(112, 122) 및 백본 모델은 딥러닝 모델일 수 있다. 일 실시예에 따르면, 사용자 단말(110, 120)은 서버 및 백본 모델과 같은 외부 리소스(resource) 또 는 독립된 외부 장치를 이용하여 사용자 모델(112, 122)을 튜닝할 수 있다. 일반적으로, 딥러닝 모델의 튜닝에 사용되는 리소스는 해당 모델의 스케일이 클수록 증가하므로, 사용자 단말(110, 120)과 같은 제한적인 컴퓨팅 환경에서 대규모의 모델을 튜닝하는 데에는 어려움이 따른다. 이러한 컴퓨팅 자원의 제한에 따른 문제점을 해 결하기 위해, 사용자 단말(110, 120)은 네트워크를 통해 연결되는 서버 및 백본 모델의 기능을 이용하여 사용자 모델(112, 122)을 튜닝할 수 있다. 이 때, 사용자 단말이 제1 사용자 모델을 튜닝 하는 과정에서 서버의 백본 모델의 구성은 변화하지 않으므로, 백본 모델은 사용자 단말이 제2 사용자 모델을 튜닝하는데 재사용될 수 있다. 또한, 사용자 단말(110, 120)이 사용자 모델(112, 12 2)을 튜닝하는 과정에서 업데이트되는 상태 정보(예를 들어, 학습률(learning rate), 옵티마이저 상태 (optimizer states), 가중치 감쇠 계수(weight decay factor), 그래디언트 클리핑 계수(gradient clipping factor), 손실 스케일값(loss scale) 등)는, 사용자 단말(110, 120)에 저장 및 관리될 수 있다. 도 1에서는 2 개의 사용자 단말(110, 120)이 사용자 모델(112, 122)을 튜닝하는 예를 도시하고 있지만, 이에 한정되는 것은 아니며, 3개 이상의 사용자 단말이 하나의 백본 모델을 이용하여 각각 독립적으로 상이한 사용자 모델을 튜닝할 수도 있다. 일 실시예에 따르면, 사용자 단말(110, 120)은 백본 모델을 이용하여 사용자 모델(112, 122)의 튜닝을 위 해 필요한 기능이나 데이터를 얻을 수 있다. 여기에서, 사용자 모델의 튜닝에 필요한 데이터는 해당 모델의 파 라미터 값, 특정 층에 입력되거나 특정 층에서 출력되는 데이터, 및 파라미터의 변동분(예를 들어, 그래디언트 (gradient) 또는 그래디언트를 이용하여 계산된 모멘텀 등) 중 적어도 하나가 될 수 있다. 일반적으로 딥러닝 모델은, 해당 모델의 출력과 정답(또는 레이블(label)) 사이의 차이(loss)를 최소화 하는 방향으로 파라미터를 업데이트 또는 학습할 수 있다. 이러한 사용자 모델의 학습 과정의 매 단계(step)에서 모델 파라미터를 업데이 트 하기 위한 변동분은 다양한 방식(예를 들어, 그레디언트디센트(gradient descent), 모멘텀(momentum), ADAM 등의 방식 등)을 이용하여 산출할 수 있다. 이하 본 개시의 실시예들에서는, 설명의 편의를 위해, 일반적으로 널리 알려진 그레디언트디센트 방법을 예시로 하여 사용자 모델의 튜닝과 파라미터 업데이트 방법을설명하지만, 이에 한정되지 않고, 사용자 모델을 튜닝하거나 파라미터를 업데이트할 수 있는 다른 다양한 방식 을 사용할 수 있음은 물론이다. 일 실시예에 따르면, 사용자 단말(110, 120)은 서버가 제공하는 모델 튜닝을 위한 서비스 호출을 이용하여 백본 모델의 기능을 이용할 수 있다. 예를 들어, 사용자 단말(110, 120)은 서버가 제공하는 API(Application Programming Interface)를 호출함으로써, 백본 모델에 접근할 수 있다. 이 경우 서버 는 API 호출 및 이에 대한 응답 절차를 실행할 수 있는 API 서버를 추가적으로 포함할 수 있다. 구체적으 로, API 호출에 따라 사용자 단말(110, 120)과 API 서버가 연결되고, API 서버는 해당 API 호출에 대한 응답을 제공하기 위해 백본 모델의 적어도 일부 기능을 실행할 수 있다. 예를 들어, 사용자는 사용자 단말 을 이용하여 API를 호출함으로써, API 서버로 사용자 모델에 의해 산출된 데이터를 전송하여, 백본 모델 에 의해 해당 데이터를 입력으로 산출한 결과를 제공받을 수 있다. 또한, 사용자는 사용자 단말을 이용하여 API를 호출함으로써, API 서버로부터 백본 모델에서 산출된 데이터를 전달받아, 사용자 모델 에 입력할 수 있다. 이와 같이 사용자 단말(110, 120)이 API 호출을 통해 백본 모델의 일부 기능을 이용함으로써, 백본 모델의 구성이 은닉된 상태에서 사용자 단말(110, 120)은 사용자 모델(112, 122)의 튜 닝을 위해 필요한 기능이나 데이터를 제공받을 수 있다. 이상 실시예에서, 서버가 제공하는 모델 튜닝을 위한 서비스 호출의 예로 API를 설명하였으나, 이에 한정되는 것은 아니며, RPC(remote procedure call), RMI(remote method invocation) 등과 같은 다양한 서비스 요청 또는 호출 방식이 사용될 수 있다. 일 실시예에 따르면, 사용자 단말(110, 120)은 백본 모델을 이용하여 사용자 모델(112, 122)의 특정 층을 튜닝할 수 있다. 예를 들어, 사용자 단말은, 서버로부터 백본 모델의 실행 결과를 제공받고, 그 실행 결과에 기초하여 산출된 그래디언트(gradient)를 사용자 모델(예를 들어, 제1 사용자 모델의 출력 층)에 적용할 수 있다. 다른 예에서, 사용자 단말은, 서버로부터 백본 모델에서 산출된 그래디언트를 사용자 모델(예를 들어, 제2 사용자 모델의 입력층)에 적용할 수 있다. 한편, 도 1은 사용자 모델(112, 122) 각각의 출력층 또는 입력층을 튜닝하는 예시가 도시되었으나, 이에 한정되지 않는다. 예를 들어, 사용자 단 말(110, 120)은 백본 모델을 이용하여 사용자 모델(112, 122)의 중간층을 튜닝할 수도 있다. 일 실시예에 따르면, 사용자 단말은 출력층을 제외한 제1 백본 모델을 이용하여 제1 사용자 모 델의 출력층을 튜닝할 수 있다. 구체적으로, 사용자 단말은 입력을 제1 백본 모델의 입력 층에 전송하고, 해당 입력이 제1 백본 모델을 순전파(forward-propagate)하여 생성된 데이터(예를 들 어, 백본 모델의 출력층에 대한 입력 데이터)를 수신할 수 있다. 사용자 단말은 수신한 데이터 를 제1 사용자 모델의 출력층에 입력하여 출력을 산출한 후 이를 이용하여 출력층에 대한 그래 디언트를 계산한다. 예를 들면, 손실 함수(loss function)을 이용하여 사용자 모델의 입력에 대한 레이블 과의 차이를 구하고, 이 차이를 최소화할 수 있는 방향으로의 그래디언트를 계산할 수 있다. 사용자 단말(11 0)은, 이와 같이 계산된 출력층에 대한 그래디언트를 이용하여 출력층을 튜닝할 수 있다. 추가적으로 또는 대안적으로, 사용자 단말은 입력층을 제외한 제2 백본 모델을 이용하여 제2 사 용자 모델의 입력층을 튜닝할 수 있다. 구체적으로, 사용자 단말은 입력에 대해 제2 사용자 모 델의 입력층이 산출한 결과를 제2 백본 모델에 전송함으로써, 해당 산출 결과와 제2 백본 모델 을 이용하여 생성된 입력층에 대한 그래디언트 데이터를 수신할 수 있다. 예를 들어, 입력층에 대한 그래 디언트 데이터는 제2 사용자 모델의 입력층의 결과를 제2 백본 모델의 입력으로 하여 순전파 및 역전파 과정을 거쳐 생성될 수 있다. 사용자 단말은 수신된 그래디언트를 이용하여 제2 사용자 모델(12 2)의 입력층을 튜닝할 수 있다. 이에 관한 상세한 설명은 도 6 및 7을 참조하여 후술된다. 일 실시예에 따르면, 사용자 단말(110, 120)은 이상 설명한 방법에 따라 튜닝된 사용자 모델(112, 122) 및 백본 모델을 이용하여 추론(inference)을 수행할 수 있다. 사용자 모델(112, 122)이 대규모인 경우, 사용자 단 말(110, 120)과 같은 제한적인 환경에서 사용자 모델(112, 122)의 모든 구성요소들을 이용하여 추론(inferenc e)을 수행하는 것은 비효율적일 수 있다. 따라서, 사용자 단말(110, 120)은 자신이 보유한 사용자 모델(112, 122)의 튜닝된 층(114, 124)의 실행 결과와 서버로부터 제공되는 백본 모델의 일부 실행 결과를 함께 이용하여 추론을 수행할 수 있다. 이상 설명한 실시예들에서, 사용자 모델(112, 122) 및 백본 모델은 사용자 단말(110, 120) 및 이에 네트워 크를 통해 연결된 서버에 각각 설치되거나 연결된 것으로 설명되었으나, 이에 한정되는 것은 아니다. 일 실시예에서, 백본 모델은 클라우드 컴퓨팅 시스템 또는 분산 컴퓨팅 시스템에서 할당된 보안 저장영역에 설치될 수 있다. 사용자 모델(112, 122)은, 클라우드 컴퓨팅 시스템 또는 분산 컴퓨팅 시스템 상에서 클라이 언트(또는 사용자 단말)에게 할당된 사용자 공간에 저장되어 접근될 수 있다. 클라이언트는 클라우드 컴퓨팅 시 스템 또는 분산 컴퓨팅 시스템에 접속하여 백본 모델을 이용함으로써 사용자 모델(112, 122)을 튜닝하도록 구성될 수 있다. 도 2는 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝을 실행하기 위해, 정보 처리 시스템이 복수의 사 용자 단말(210_1, 210_2, 210_3)과 통신 가능하도록 연결된 구성을 나타내는 개요도이다. 정보 처리 시스템 은 딥러닝 모델의 튜닝을 위한 시스템 및/또는 장치(들)를 포함할 수 있다. 예를 들어, 정보 처리 시스템 은, 이상 도 1을 참조하여 설명한 서버에 대응할 수 있다. 일 실시예에서, 정보 처리 시스템은 딥러닝 모델의 튜닝과 관련된 컴퓨터 실행 가능한 프로그램(예를 들어, 다운로드 가능한 어플리케이션) 및 데이 터를 저장, 제공 및 실행할 수 있는 하나 이상의 서버 장치 및/또는 데이터베이스, 또는 클라우드 컴퓨팅 서비 스 기반의 하나 이상의 분산 컴퓨팅 장치 및/또는 분산 데이터베이스를 포함할 수 있다. 정보 처리 시스템 은 어플리케이션을 통해 입력되는 신호에 대응하는 정보를 제공하거나 대응하는 처리를 수행할 수 있다. 예를 들어, 정보 처리 시스템은 딥러닝 모델의 튜닝과 관련된 서비스를 제공하도록 구성된 임의의 어플리 케이션을 통해 복수의 사용자 단말(210_1, 210_2, 210_3)을 제어할 수 있다. 정보 처리 시스템은 네트워크를 통해 복수의 사용자 단말(210_1, 210_2, 210_3)과 통신할 수 있다. 네트워크는 복수의 사용자 단말(210_1, 210_2, 210_3)과 정보 처리 시스템 사이의 통신이 가능하도록 구성될 수 있다. 네트워크는 설치 환경에 따라, 예를 들어, 이더넷(Ethernet), 유선 홈 네트워크(Power Line Communication), 전화선 통신 장치 및 RS-serial 통신 등의 유선 네트워크, 이동통신망, WLAN(Wireless LAN), Wi-Fi, Bluetooth 및 ZigBee 등과 같은 무선 네트워크 또는 그 조합으로 구성될 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방 송망, 위성망 등)을 활용하는 통신 방식 뿐만 아니라 복수의 사용자 단말(210_1, 210_2, 210_3) 사이의 근거리 무선 통신 역시 포함될 수 있다. 도 2에서 휴대폰 단말기(210_1), 태블릿 단말기(210_2) 및 PC 단말기(210_3)가 사용자 단말의 예로서 도시되었 으나, 이에 한정되지 않으며, 사용자 단말(210_1, 210_2, 210_3)은 유선 및/또는 무선 통신이 가능하고 딥러닝 모델의 튜닝과 관련된 서비스를 제공하도록 구성된 어플리케이션 등이 설치되어 실행될 수 있는 임의의 컴퓨팅 장치일 수 있다. 예를 들어, 사용자 단말은, 스마트폰(smart phone), 휴대폰, 내비게이션, 컴퓨터, 노트북, 디 지털방송용 단말, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC, 게임 콘 솔(game console), 웨어러블 디바이스(wearable device), IoT(internet of things) 디바이스, VR(virtual reality) 디바이스, AR(augmented reality) 디바이스 등을 포함할 수 있다. 또한, 도 2에는 3개의 사용자 단 말(210_1, 210_2, 210_3)이 네트워크를 통해 정보 처리 시스템과 통신하는 것으로 도시되어 있으나, 이에 한정되지 않으며, 상이한 수의 사용자 단말이 네트워크를 통해 정보 처리 시스템과 통신하도록 구성될 수도 있다. 일 실시예에서, 사용자 단말(210_1, 210_2, 210_3)은 네트워크를 통해 딥러닝 모델의 튜닝과 연관된 데이 터 요청 또는 서비스 요청을 정보 처리 시스템으로 전송하고, 정보 처리 시스템으로부터 이와 관련된 데이터(예를 들어, 백본 모델의 전부 또는 일부에 의한 실행 결과로서, 해당 모델의 파라미터 값, 특정 층에 입 력되거나 특정 층에서 출력되는 데이터, 및 파라미터의 변동분 등)를 수신할 수 있다. 일 실시예에서, 사용자 단말(210_1, 210_2, 210_3)은 API 호출과 같은 서비스 요청을 통해 딥러닝 모델의 튜닝 과 연관된 데이터 요청을 정보 처리 시스템으로 전송하고, 정보 처리 시스템으로부터 이와 관련된 데 이터를 해당 서비스 요청에 대한 응답으로 수신할 수 있다. 도 3은 본 개시의 일 실시예에 따른 사용자 단말 및 정보 처리 시스템의 내부 구성을 나타내는 블록 도이다. 사용자 단말은 딥러닝 모델의 튜닝과 연관된 서비스를 제공하는 임의의 어플리케이션 등이 실행 가능하고 유/무선 통신이 가능한 임의의 컴퓨팅 장치를 지칭할 수 있으며, 예를 들어, 도 2의 휴대폰 단말기 (210_1), 태블릿 단말기(210_2) 및 PC 단말기(210_3) 등을 포함할 수 있다. 도시된 바와 같이, 사용자 단말 은 메모리, 프로세서, 통신 모듈 및 입출력 인터페이스를 포함할 수 있다. 이와 유 사하게, 정보 처리 시스템은 메모리, 프로세서, 통신 모듈 및 입출력 인터페이스를 포함할 수 있다. 도 3에 도시된 바와 같이, 사용자 단말 및 정보 처리 시스템은 각각의 통신 모듈 (316, 336)을 이용하여 네트워크를 통해 정보 및/또는 데이터를 통신할 수 있도록 구성될 수 있다. 또한, 입출력 장치는 입출력 인터페이스를 통해 사용자 단말에 정보 및/또는 데이터를 입력하거나 사용자 단말로부터 생성된 정보 및/또는 데이터를 출력하도록 구성될 수 있다. 메모리(312, 332)는 비-일시적인 임의의 컴퓨터 판독 가능한 기록매체를 포함할 수 있다. 일 실시예에 따르면, 메모리(312, 332)는 RAM(random access memory), ROM(read only memory), 디스크 드라이브, SSD(solid state drive), 플래시 메모리(flash memory) 등과 같은 비소멸성 대용량 저장 장치(permanent mass storage device) 를 포함할 수 있다. 다른 실시예에서, ROM, SSD, 플래시 메모리, 디스크 드라이브 등과 같은 비소멸성 대용량 저장 장치는 메모리와는 구분되는 별도의 영구 저장 장치로서 사용자 단말 및/또는 정보 처리 시스템(23 0)에 포함될 수 있다. 또한, 메모리(312, 332)에는 운영체제와 적어도 하나의 프로그램 코드(예를 들어, 사용 자 단말에 설치되어 구동되는 딥러닝 모델의 튜닝과 연관된 서비스를 제공하는 어플리케이션 등을 위한 코 드)가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리(312, 332)와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독가능한 기록매체는 이러한 사용자 단말 및 정보 처리 시스템 에 직접 연결가능한 기록 매체를 포함할 수 있는데, 예를 들어, 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 예로서, 소 프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신 모듈을 통해 메모리(312, 332)에 로딩될 수도 있다. 예를 들어, 적어도 하나의 프로그램은 개발자들 또는 어플리케이션의 설치 파일을 배포하는 파일 배포 시스템이 네트워크를 통해 제공하는 파일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 메모리 (312, 332)에 로딩될 수 있다. 프로세서(314, 334)는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하 도록 구성될 수 있다. 명령은 메모리(312, 332) 또는 통신 모듈(316, 336)에 의해 프로세서(314, 334)로 제공 될 수 있다. 예를 들어, 프로세서(314, 334)는 메모리(312, 332)와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행하도록 구성될 수 있다. 통신 모듈(316, 336)은 네트워크를 통해 사용자 단말과 정보 처리 시스템이 서로 통신하기 위한 구성 또는 기능을 제공할 수 있으며, 사용자 단말 및/또는 정보 처리 시스템이 다른 사용자 단말 및/ 또는 다른 시스템(일례로 별도의 클라우드 시스템 등)과 통신하기 위한 구성 또는 기능을 제공할 수 있다. 일 례로, 사용자 단말의 프로세서가 메모리 등과 같은 기록 장치에 저장된 프로그램 코드에 따라 생성한 요청 또는 데이터(예를 들어, 딥러닝 모델 또는 딥러닝 모델의 튜닝과 연관된 데이터 등)는 통신 모듈 의 제어에 따라 네트워크를 통해 정보 처리 시스템으로 전달될 수 있다. 역으로, 정보 처리 시 스템의 프로세서의 제어에 따라 제공되는 제어 신호나 명령이 통신 모듈과 네트워크를 거 쳐 사용자 단말의 통신 모듈을 통해 사용자 단말에 수신될 수 있다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 일 예로서, 입력 장치는 가속도 센서, 자이로스코프(즉, 각속도 센서) 등의 관성 센서, 광학 카메라, IR 카메라 등의 광학 센서, ToF, LiDAR 센서, Depth 카메라 등의 거리 감지 센서를 포함할 수 있다. 추가적으로 입력 장치는 오디오 센서 및/또 는 이미지 센서를 포함한 카메라, 키보드, 마이크로폰, 마우스 등의 장치를 포함하고, 출력 장치는 디스플레이, 스피커, 햅틱 피드백 디바이스(haptic feedback device) 등과 같은 장치를 포함할 수 있다. 다른 예로서, 입출 력 인터페이스는 터치스크린 등과 같이 입력과 출력을 수행하기 위한 구성 또는 기능이 하나로 통합된 장 치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 사용자 단말의 프로세서가 메모리에 로 딩된 컴퓨터 프로그램의 명령을 처리함에 있어서 정보 처리 시스템이 제공하는 정보 및/또는 데이터를 이 용하여 구성되는 서비스 화면 등이 입출력 인터페이스를 통해 디스플레이에 표시될 수 있다. 도 3에서는 입출력 장치가 사용자 단말에 포함되지 않도록 도시되어 있으나, 이에 한정되지 않으며, 사용자 단말 과 하나의 장치로 구성될 수 있다. 또한, 정보 처리 시스템의 입출력 인터페이스는 정보 처리 시스템과 연결되거나 정보 처리 시스템이 포함할 수 있는 입력 또는 출력을 위한 장치(미도시)와의 인터페이스를 위한 수단일 수 있다. 도 3에서는 입출력 인터페이스(318, 338)가 프로세서(314, 334)와 별도로 구성된 요소로서 도시되었으나, 이에 한정되지 않으며, 입출력 인터페이스(318, 338)가 프로세서(314, 334)에 포함되도록 구성될 수 있다. 사용자 단말 및 정보 처리 시스템은 도 3의 구성요소들보다 더 많은 구성요소들을 포함할 수 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 일 실시예에 따르면, 사용자 단말 은 상술된 입출력 장치 중 적어도 일부를 포함하도록 구현될 수 있다. 또한, 사용자 단말은 트 랜시버(transceiver), GPS(Global Positioning system) 모듈, 카메라, 각종 센서, 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수 있다. 예를 들어, 사용자 단말은 카메라 모듈, 터치패널, 입출력 포트 등 의 다양한 구성요소들이 사용자 단말에 더 포함되도록 구현될 수 있다. 일 실시예에 따르면, 사용자 단말의 프로세서는 사용자 단말을 동작하거나 제어할 수 있는 임의 의 어플리케이션을 동작하도록 구성될 수 있다. 예를 들어, 사용자 단말의 프로세서는 딥러닝 모델 의 튜닝과 연관된 서비스를 제공하는 어플리케이션 등이 동작하도록 구성될 수 있다. 이 때, 해당 어플리케이 션 및/또는 프로그램과 연관된 코드가 사용자 단말의 메모리에 로딩될 수 있다. 어플리케이션 및/또 는 프로그램이 동작되는 동안에, 사용자 단말의 프로세서는 입출력 장치로부터 제공된 정보 및/ 또는 데이터를 입출력 인터페이스를 통해 수신하거나 통신 모듈을 통해 정보 처리 시스템으로부 터 정보 및/또는 데이터를 수신할 수 있으며, 수신된 정보 및/또는 데이터를 처리하여 메모리에 저장할 수 있다. 또한, 이러한 정보 및/또는 데이터는 통신 모듈을 통해 정보 처리 시스템에 제공할 수 있다. 딥러닝 모델의 튜닝과 연관된 서비스를 제공하는 어플리케이션 등을 위한 프로그램이 동작되는 동안에, 프로세 서는 입출력 인터페이스와 연결된 터치 스크린, 키보드, 오디오 센서 및/또는 이미지 센서를 포함한 카메라, 마이크로폰 등의 입력 장치를 통해 입력되거나 선택된 텍스트, 이미지, 영상, 음성 등을 수신할 수 있 으며, 수신된 텍스트, 이미지, 영상 및/또는 음성 등을 메모리에 저장하거나 통신 모듈 및 네트워크 를 통해 정보 처리 시스템에 제공할 수 있다. 정보 처리 시스템의 프로세서는, 사용자 단말을 포함한 복수의 사용자 단말 및/또는 복수의 외 부 시스템으로부터 수신된 정보 및/또는 데이터를 관리, 처리 및/또는 저장하도록 구성될 수 있다. 프로세서 에 의해 처리된 정보 및/또는 데이터는 통신 모듈 및 네트워크를 통해 사용자 단말에 제공 할 수 있다. 일 실시예에서, 정보 처리 시스템의 프로세서는 통신 모듈 및 네트워크를 통 해 사용자 단말로부터 딥러닝 모델의 튜닝을 위한 서비스 요청을 수신할 수 있다. 도 4는 본 개시의 일 실시예에 따른 사용자 단말의 프로세서의 내부 구성을 나타내는 도면이다. 도시된 바와 같이, 사용자 단말의 프로세서는 모델 튜닝부, 상태 관리부 및 추론부를 포함할 수 있다. 또한, 프로세서는 사용자 모델 데이터베이스와 연결될 수 있다. 여기서, 사용자 모델 데이터 베이스는 튜닝 대상(예를 들어, 사용자 모델(112, 122))에 대응하는 백본 모델의 파라미터(예를 들어, 하 나 이상의 층의 가중치)를 정보 처리 시스템(또는 서버)으로부터 수신한 결과 혹은 같은 크기의 파라미터를 랜 덤으로 초기화한 값, 튜닝이 완료된 모델 등 사용자 모델과 관련된 데이터베이스를 지칭할 수 있다. 또한, 사 용자 모델 데이터베이스는 딥러닝 모델의 튜닝(또는 학습) 및/또는 추론에 이용되는 데이터 셋이 저장된 데이터베이스를 지칭할 수 있다. 일 실시예에 따르면, 모델 튜닝부는 사용자 모델 데이터베이스로부터 복수의 층을 포함하는 딥러닝 모델의 일부 또는 전부를 수신할 수 있다. 예를 들어, 튜닝 대상 층이 입력층인 경우, 모델 튜닝부는 사 용자 모델 데이터베이스로부터 딥러닝 모델의 입력층을 수신할 수 있다. 다른 예에서, 튜닝 대상 층이 출 력층인 경우, 모델 튜닝부는 사용자 모델 데이터베이스로부터 딥러닝 모델의 출력층을 수신할 수 있 다. 또 다른 예에서, 튜닝 대상 층이 중간층인 경우, 모델 튜닝부는 사용자 모델 데이터베이스로부 터 딥러닝 모델의 중간층(또는, 중간층의 일부 구성 요소)을 수신할 수 있다. 일 실시예에 따르면, 모델 튜닝부는 딥러닝 모델의 튜닝 대상 층과 연관된 정보 및 딥러닝 모델의 학습 상 태 정보 중 적어도 하나를 파라미터로 갖는 서비스 요청(예를 들어, API)을 호출할 수 있다. 예를 들어, 모델 튜닝부는 딥러닝 모델의 백본 모델이 설치된 서버로 서비스 요청을 전송할 수 있다. 그리고 나서, 모델 튜닝부는, 서비스 요청의 응답으로써 서버로부터 제공되는 백본 모델의 실행 결과를 수신할 수 있다. 예 를 들어, 모델 튜닝부는, 서비스 요청의 응답으로써, 서버로부터 튜닝 대상 층과 연관된 정보 및 딥러닝 모델의 학습 상태 정보 중 적어도 하나에 기초한 백본 모델의 실행 결과를 수신할 수 있다. 이 때, 백본 모델 의 실행 결과는 튜닝 대상 층의 종류(예를 들어, 입력층, 중간층, 출력층 등)에 따라 상이할 수 있다. 이에 관 한 상세한 설명은 도 6 내지 8을 참조하여 후술된다. 일 실시예에 따르면, 모델 튜닝부는 백본 모델의 실행 결과에 기초하여 그래디언트(gradient)를 산출할 수 있다. 다른 실시예에 따르면, 모델 튜닝부는, 서비스 요청의 응답으로써, 서버로부터 백본 모델에 의해 산출된 그래디언트를 수신할 수 있다. 그리고 나서, 모델 튜닝부는 그래디언트를 딥러닝 모델의 튜닝 대 상 층에 적용할 수 있다. 이에 따라, 딥러닝 모델의 손실 또는 손실 함수 값이 최소화되는 방향으로 딥러닝 모 델이 업데이트될 수 있다. 즉, 모델 튜닝부가 백본 모델의 실행 결과에 기초하여 산출된 그래디언트를 딥 러닝 모델의 튜닝 대상 층에 적용함으로써, 딥러닝 모델의 특정 태스크에 대한 성능이 개선될 수 있다.일 실시예에 따르면, 모델 튜닝부는 사용자 모델 데이터베이스로부터 튜닝 대상인 딥러닝 모델의 학 습 상태 정보를 수신할 수 있다. 여기서, 학습 상태 정보는 튜닝 대상 층의 파라미터(예를 들어, 가중치)의 업 데이트의 강도 또는 정도를 결정하는 계수일 수 있다. 구체적으로, 학습 상태 정보는, 튜닝 대상 층의 가중치가 업데이트되는 정도를 나타내는 그래디언트를 산출하는데 이용되는 정보를 지칭할 수 있다. 예를 들어, 딥러닝 모델의 학습 상태 정보는 딥러닝 모델의 학습률, 옵티마이저 상태, 가중치 감쇠 계수, 그래디언트 클리핑 계수, 및 손실 스케일값 중 적어도 하나를 포함할 수 있다. 일 실시예에 따르면, 상태 관리부는 그래디언트를 튜닝 대상 층에 적용하는 것과 연관하여 딥러닝 모델의 학습 상태 정보를 업데이트할 수 있다. 여기서, 그래디언트를 튜닝 대상 층에 적용하는 것은 그래디언트를 튜 닝 대상 층에 역전파(backward propagation)하는 것을 포함할 수 있다. 일 실시예에 따르면, 추론부는 튜닝이 완료된 딥러닝 모델을 이용하여 추론을 수행할 수 있다. 예를 들어, 사용자 단말에 있는 딥러닝 모델의 일부가 입력층인 경우, 추론부는 입력 데이터를 입력층에 입력하 여 중간 데이터를 획득하고, 서비스 요청을 통해 중간 데이터를 서버의 백본 모델로 전송할 수 있다. 이러한 서비스 요청에 따라, 서버는 중간 데이터를 백본 모델에 입력하여 출력 데이터를 획득할 수 있다. 서버가 획득 한 백본 모델의 출력 데이터는, 서비스 요청의 응답으로써, 추론부에 제공될 수 있다. 이 경우, 백본 모 델은 사용자 단말에 설치되지 않은 딥러닝 모델의 나머지 일부를 대체하기 위한 중간층 및 출력층을 포함할 수 있다. 다른 예에서, 사용자 단말에 설치된 딥러닝 모델의 일부가 출력층인 경우, 추론부는 입력 데이터를 서비스 요청을 통해 서버의 백본 모델로 전송할 수 있다. 이 때, 서버는, 서비스 요청을 통해 수신한 입력 데이터를 백본 모델에 입력하여 중간 데이터를 획득하여 추론부에 전송할 수 있다. 그리고 나서, 추론부는, 서버로부터 수신한 중간 데이터를 사용자 단말에 설치된 출력층에 입력하여 출력 데이터를 획득할 수 있다. 이 경우, 백본 모델은 사용자 단말에 설치되지 않은 딥러닝 모델의 나머지 일부를 대체하기 위한 입력층 및 중간층 을 포함할 수 있다. 또 다른 예에서, 사용자 단말에 설치된 딥러닝 모델의 일부가 중간층인 경우, 추론부는 입력 데이터를 서 비스 요청을 통해 서버의 백본 모델로 전송할 수 있다. 이 때, 서버는 서비스 요청을 통해 수신된 입력 데이터 를 백본 모델에 입력하여 출력 데이터를 획득하고, 획득된 출력 데이터를 추론부로 전송할 수 있다. 추론 부는, 수신된 출력 데이터를 중간층에 입력하여 중간 데이터를 획득한 후, 중간 데이터를 다른 서비스 요 청을 통해 서버의 백본 모델로 다시 전송할 수 있다. 서버는 서비스 요청을 통해 수신된 중간 데이터를 백본 모 델로 입력하여 최종 출력 데이터를 획득한 후 추론부로 전송할 수 있다. 이 경우, 백본 모델은 사용자 단 말에 설치되지 않은 딥러닝 모델의 나머지 일부를 대체하기 위한 입력층 및 출력층을 포함할 수 있다. 사용자 단말에 설치된 딥러닝 모델의 일부가 중간층인 경우일지라도 추론부와 서버 사이의 통신은 1회에 완료될 수 있다. 이 때, 추론부는 입력 데이터와 함께 사용자 단말에 설치된 튜닝이 완료된 딥러닝 모델의 가중치를 전송한다. 서버는 서비스 요청을 통해 수신된 입력데이터와 사용자 모델의 가중치를 함께 백본 모델에 입력하여 최종 출력 데이터를 한번에 획득한 후 추론부로 전송할 수 있다. 이 경우, 백본 모델은 사용자 단말에 설치되지 않은 딥러닝 모델의 나머지 일부를 대체하기 위한 입력층 및 출력층을 포함할 수 있다. 도 5는 본 개시의 일 실시예에 따른 정보 처리 시스템의 프로세서의 내부 구성을 나타내는 도면이다. 도 시된 바와 같이, 정보 처리 시스템의 프로세서는 모델 사전 학습부, 서비스 요청 처리부 및 모 델 실행부를 포함할 수 있다. 또한, 프로세서는 백본 모델 데이터베이스와 연결될 수 있다. 여기서, 백본 모델 데이터베이스는 딥러닝 모델(예를 들어, 사용자 모델(112, 122))의 튜닝에 이용되는 백 본 모델을 저장할 수 있다. 추가적으로, 백본 모델 데이터베이스는 백본 모델의 사전 학습에 이용되는 학 습 데이터 셋을 저장할 수 있다. 일 실시예에 따르면, 모델 사전 학습부는 학습 데이터 셋을 이용하여 다양한 종류의 태스크(또는, 작업)를 수행하기 위해 공통적으로 필요한 기능을 실행하도록 구성된 백본 모델을 학습시킬 수 있다. 추가적으로 또는 대안적으로, 모델 사전 학습부는 이미 사전 학습되어 백본 모델 데이터베이스에 저장된 백본 모델을 수신할 수도 있다. 일 실시예에 따르면, 서비스 요청 처리부는 사용자 단말로부터 수신된 서비스 요청을 처리할 수 있다. 예 를 들어, 서비스 요청 처리부는, 사용자 단말로부터 수신된 서비스 요청의 응답으로써, 백본 모델을 이용 한 결과 데이터(예를 들어, 백본 모델에 의해 실행된 결과인 입력 데이터, 중간 데이터, 출력 데이터, 파라미터변동분 등)를 사용자 단말로 전송할 수 있다. 이에 따라 사용자 단말은 수신된 데이터에 기초하여 사용자 모델 의 적어도 일부 구성요소(예를 들어, 입력층, 중간층 또는 출력층)를 튜닝할 수 있다. 일 실시예에 따르면, 모델 실행부는 사용자 단말로부터 수신된 데이터에 기초하여 백본 모델을 이용하여 추론을 실행할 수 있다. 예를 들어, 사용자 단말로부터 수신된 서비스 요청에 따라, 모델 실행부는, 백본 모델을 이용하여 추론 절차를 실행할 수 있다. 또한, 모델 실행부는, 사용자 단말로부터 수신된 서비스 요 청의 응답으로써, 백본 모델로부터 수신된 실행 결과를 사용자 단말로 전송할 수 있다. 일 실시예에 따르면, 서비스 요청 처리부는, API 호출을 처리하기 위한 API 서버를 포함할 수 있다. 예를 들어, API 서버는 REST(representational state transfer) 또는 SOAP(simple object access protocol)기반의 API 호출을 처리할 수 있는 서버일 수 있으나, 이에 한정되는 것은 아니다. 서비스 요청 처리부가 API 서 버를 포함하는 경우, 서비스 요청 처리부는, 사용자 단말로부터 수신된 API 호출의 응답으로써, 백본 모델 을 이용한 결과 데이터를 사용자 단말로 전송할 수 있다. 또한, 모델 실행부는, 사용자 단말로부터 수신 된 API 호출에 따라, 백본 모델을 이용하여 추론 절차를 실행하거나 백본 모델로부터 수신된 실행 결과를 사용 자 단말로 전송할 수 있다. 도 6은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 입력층을 튜닝하 는 예시를 나타낸다. 도 6 내지 8은 딥러닝 모델의 예로서 트랜스포머(Transformer)를 튜닝하는 방법을 도시하 고 있으나, 이에 한정되지 않는다. 예를 들어, 딥러닝 모델은 VGGNet, AlexNet, ResNet, Inception 등과 같은 다양한 유형의 딥러닝 모델 중 하나일 수 있다. 한편, 도 6 내지 8에서는 설명의 편의를 위해 '입력 데이터' 및 '출력 데이터'가 각각 '입력' 및 '출력'으로 기재된다. 일 실시예에 따르면, 사용자 단말은 입력을 입력층에 입력하여 입력층 출력을 획득할 수 있다. 그리 고 나서, 사용자 단말은 입력층과 연관된 정보(예를 들어, 획득된 입력층의 출력) 및 딥러닝 모델의 (학습) 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 실행할 수 있다. 서비스 요청의 실행에 따라 입력 층과 연관된 정보는 사용자 단말로부터 정보 처리 시스템으로 전송될 수 있다. 이 때, 사용자 단말은 입력층과 연관된 정보와 함께, 입력에 대한 레이블(label) 및 딥러닝 모델의 상태 정보를 정 보 처리 시스템으로 전송할 수 있다. 여기서, 입력에 대한 레이블은 딥러닝 모델에 대한 예상 추론 결과 를 의미할 수 있다. 즉, 입력에 대한 레이블은 사용자가 딥러닝 모델을 통해 획득하고자 하는 정답을 의미할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 사용자 단말로부터 수신된 입력층과 연관된 정보를 백 본 모델에 입력(즉, 순전파(forward propagation))하여 출력 확률을 획득할 수 있다. 여기서, 백본 모델 은 딥러닝 모델의 전체 구성 요소에서 입력층을 제외한 딥러닝 모델의 나머지 부분을 대체할 수 있는 중간층 및 출력층을 포함할 수 있다. 또한, 출력 확률은 업데이트되기 전 딥러닝 모델로부터 획득되는 출력일 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 출력 확률을 사용자 단말로부터 수신한 레이블과 비교하여 손실 (또는 손실 함수)을 계산(또는 산출)할 수 있다. 여기서, 손실은 딥러닝 모델이 추론한 출력 확률과 정답(또는 레이블) 사이의 오차를 나타내는 값을 지칭할 수 있다. 예를 들어, 손실은 크로스 엔트로피(Cross Entropy), 평균 제곱근 편차(Mean Square Error) 등을 이용하여 계산할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 손실을 최소화 하는 방향으로 딥러닝 모델을 업데이트 하기 위한 그래디언트를 산출할 수 있다. 즉, 정보 처리 시스템은 백본 모델의 역전파 (backward propagation)과정을 통하여 입력층 그래디언트를 획득할 수 있다. 이에 따라, 정보 처리 시스템은 서비스 요청의 응답으로써, 획득된 입력층 그래디언트를 사용자 단말로 전송할 수 있다. 일 실시예에 따르면, 사용자 단말은 수신된 입력층 그래디언트를 입력층에 적용할 수 있다. 예를 들 어, 사용자 단말은 입력층 그래디언트를 이용하여 입력층 파라미터를 업데이트함으로써, 입력층(61 0)을 튜닝할 수 있다. 이 때, 사용자 단말에 저장된 딥러닝 모델의 상태 정보도 업데이트될 수 있다. 이상 설명한 입력층의 튜닝 과정은, 입력층을 포함한 딥러닝 모델의 전체 튜닝 과정의 일부분 또는 하나의 단계(step), 또는 에포크(epoch)에 해당할 수 있다. 따라서, 이상 설명한 입력층의 튜닝 과정은 반 복적으로 수행될 수 있으며, 각 튜닝 과정의 단계마다 딥러닝 모델의 상태 정보가 업데이트될 수 있다. 도 7은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 출력층을 튜닝하는 예시를 나타낸다. 일 실시예에 따르면, 사용자 단말은 입력과 연관된 정보(예를 들어 입력 데이터, 레이블 등),출력층과 연관된 정보 및 딥러닝 모델의 (학습) 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 실행 할 수 있다. 서비스 요청의 실행에 따라, 입력이 사용자 단말로부터 정보 처리 시스템 으로 전송될 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 사용자 단말로부터 수신된 입력을 백본 모델에 입력하 여 순전파 계산 출력을 산출할 수 있다. 여기서, 백본 모델은 딥러닝 모델의 전체 구성 요소에서 출력층 을 제외한 딥러닝 모델의 나머지 부분을 대체할 수 있는 입력층 및 중간층을 포함할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 서비스 요청의 응답으로써 순전파 계산 출력을 사용자 단말(21 0)로 전송할 수 있다. 그리고 나서, 사용자 단말은 순전파 계산 출력을 출력층에 입력하여 출력 확 률을 획득할 수 있다. 여기서, 출력 확률은 업데이트되기 전 딥러닝 모델로부터 획득되는 출력과 연관된 데이 터를 지칭할 수 있다. 일 실시예에 따르면, 사용자 단말은 획득된 출력 확률과 레이블을 비교하여 손실을 계산할 수 있다. 여기 서, 손실은 딥러닝 모델이 추론한 답과 정답(즉, 레이블) 사이의 오차를 나타내는 값을 지칭할 수 있다. 예를 들어, 손실은 크로스 엔트로피 또는 평균 제곱근 편차 등을 이용하여 계산할 수 있다. 일 실시예에 따르면, 사용자 단말은 손실을 최소화 하는 방향으로 딥러닝 모델을 업데이트 하기 위한 출력 층 그래디언트를 산출할 수 있다. 그리고 나서, 사용자 단말은 출력층 그래디언트를 이용하여 출력층(71 0)을 튜닝할 수 있다. 이 때, 사용자 단말에 저장된 딥러닝 모델의 상태 정보도 업데이트될 수 있다. 이상 설명한 출력층의 튜닝 과정은, 출력층을 포함한 딥러닝 모델의 전체 튜닝 과정의 일부분 또는 하나의 단계에 해당할 수 있다. 따라서, 이상 설명한 출력층의 튜닝 과정은 반복적으로 수행될 수 있으며, 각 튜닝 과정의 단계마다 딥러닝 모델의 상태 정보가 업데이트될 수 있다. 도 8은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 중간층(810_1 내지 810_N)을 튜닝하는 예시를 나타낸다. 이하에서는 도 8을 참고하여 딥러닝 모델인 트랜스포머의 일부 층(예를 들 어, LoRA(Low-Rank Adaptation) 가중치)를 업데이트함으로써 딥러닝 모델을 튜닝하는 예시에 대하여 설명 하지만, 이에 한정되지 않는다. 예를 들어, 도 8에 도시된 LoRA, Prefix(Pk) 또는 Adapter 중 적어도 하나를 업데이트 함으로써 딥러닝 모델을 튜닝할 수도 있다. 일 실시예에 따르면, 사용자 단말은 사용자 단말에 저장된 중간층(810_1 내지 810_N)과 연관된 정보 (예를 들어, 중간층(810_1 내지 810_N) 각각의 LoRA) 및 딥러닝 모델의 (학습) 상태 정보 중 적어도 하나를 포 함하는 서비스 요청을 실행할 수 있다. 서비스 요청의 실행에 따라, 중간층(810_1 내지 810_N)과 연관된 정보 가 사용자 단말로부터 정보 처리 시스템 으로 전송될 수 있다. 이 때, 중간층(810_1 내지 810_N)과 연관된 정보와 함께, 입력, 입력에 대한 레이블 및 딥러닝 모델의 상태 정보가 정보 처리 시스템으로 전송 될 수 있다. 여기서, 입력에 대한 레이블은 딥러닝 모델에 대한 예상 추론 결과를 의미할 수 있다. 즉, 입력 에 대한 레이블은 사용자가 딥러닝 모델을 통해 획득하고자 하는 정답을 의미할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 사용자 단말로부터 수신한 중간층(810_1 내지 810_N)과 연관된 정보를 기초로 백본 모델의 중간층과 연관된 정보를 결정할 수 있다. 즉, 사용자 단말로부터 수신한 중간층(810_1 내지 810_N) 각각의 LoRA를 백본 모델의 중간층의 LoRA로 결정할 수 있다. 그리고 나 서, 정보 처리 시스템은 사용자 단말로부터 수신된 입력을 백본 모델에 입력(즉, 순전파)하여 출력 확률을 획득할 수 있다. 여기서, 백본 모델은 기존 백본 모델의 중간층 일부를 사용자로부터 수신된 중간 층 정보로 대체할 수 있다. 위의 예에서, 백본 모델은 백본 모델의 LoRA weight 대신 사용자로부터 수신한 LoRA Weight를 이용하여 포워드 연산을 수행하여 출력 확률을 획득할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 획득된 출력 확률과 레이블을 비교하여 손실을 계산할 수 있다. 여기서, 손실은 딥러닝 모델이 추론한 출력 확률과 정답(즉, 레이블) 사이의 오차를 나타내는 값을 지칭할 수 있다. 예를 들어, 손실은 크로스 엔트로피 또는 평균 제곱근 편차 등을 이용하여 계산될 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 손실을 최소화 하는 방향으로 딥러닝 모델을 업데이트 하기 위한 그래디언트를 산출할 수 있다. 그리고 나서, 정보 처리 시스템은 산출된 그래디언트를 백본 모델에 역방향으로 입력(즉, 역전파)하는 과정에서, 중간층 각각의 그래디언트를 획득할 수 있다. 일 실시예에 따르면, 정보 처리 시스템은 서비스 요청의 응답으로써, 획득된 중간층 각각의 그래디언트를 사용자 단말로 전송할 수 있다. 그리고 나서 사용자 단말은 수신된 중간층 각각의 그래디언트를 이용하여, 중간층(810_1 내지 810_N)을 튜닝할 수 있다. 이 때, 사용자 단말에 저장된 딥러닝 모델의 상태 정보도 업데이트될 수 있다. 이상 설명한 중간층(810_1 내지 810_N)의 튜닝 과정은, 중간층(810_1 내지 810_N)을 포함한 딥러닝 모델의 전체 튜닝 과정의 일부분 또는 하나의 단계에 해당할 수 있다. 따라서, 이상 설명한 중간층(810_1 내지 810_N)의 튜 닝 과정은 반복적으로 수행될 수 있으며, 각 튜닝 과정의 단계마다 딥러닝 모델의 상태 정보가 업데이트될 수 있다. 도 9는 본 개시의 일 실시예에 따른 클라우드 컴퓨팅 기반의 딥러닝 모델의 튜닝 시스템의 구성을 나타내는 도 면이다. 도시된 바와 같이, 딥러닝 모델의 튜닝 시스템은 클라우드 컴퓨팅 시스템 상에 구현된 복수 의 사용자 가상 머신(910, 920) 및 가상 서버를 포함할 수 있다. 일 실시예에 따르면, 사용자 또는 클라 이언트(902, 904)는 클라우드 컴퓨팅 시스템이 제공하는 서비스 UI(user interface)(906, 908)을 통해 각 사용자에게 할당된 사용자 가상 머신(910, 920)을 사용할 수 있다. 사용자 가상 머신(910, 920)은, 사용자 모델 (912, 922)이 특정 작업을 실행하기 적합하도록 구성하거나 특정 작업에 대해 개선된 성능을 갖도록 하기 위하 여, 사용자 모델(912, 922)을 튜닝할 수 있다. 사용자 가상 머신(910, 920)에 설치되어 튜닝되는 사용자 모델 (912, 922)은, 각 모델의 모든 구성요소들(예를 들어, 모델을 구성하는 복수의 층, 각 층과 연관된 가중치 또는 파라미터, 상태 정보 등)의 일부(914, 924)를 포함하고, 나머지 일부(916, 926)는 사용자 가상 머신(910, 920) 과 독립적으로 운영되는 가상 서버에 설치된 백본 모델의 구성요소(957, 958)로 대체될 수 있다. 여 기서, 백본 모델은, 사용자 모델(912, 922)의 튜닝 전에, 학습 데이터에 기초하여 사전 학습될 수 있다. 본 개시에서, '클라우드(cloud)' 또는 '클라우드 컴퓨팅 시스템(cloud computing system)'은, 네트워크 상에서 서비스로서 확장 가능한 컴퓨팅 자원들을 제공하는 클라우드 컴퓨팅 시스템 또는 클라우드 컴퓨팅 인프라스트럭 쳐(cloud computing infrastructure)를 지칭할 수 있다. 구체적으로, 클라우드 컴퓨팅은, 컴퓨팅 자원과 그 내 부의 기술적인 구조(예를 들어, 서버, 저장소, 네트워크 등) 사이의 추상화(abstraction)를 제공하는 컴퓨팅 능 력을 의미할 수 있으며, 이를 이용하여, 서비스 제공자와의 상호 작용이나 관리 노력을 최소화하면서 신속하게 제공될 수 있는 구성 가능한 컴퓨팅 자원의 공유 풀에 대한 온디맨드(on-demand) 네트워크 엑세스를 제공할 수 있다. 이에 따라 사용자 또는 클라이언트는, 클라우드에서, 컴퓨팅 자원을 제공하는데 사용되는 물리적 시스템 (또는 시스템의 위치) 등을 알 필요 없이, 가상의 컴퓨팅 자원들(예를 들어, 저장소, 데이터, 애플리케이션, 가 상 머신, 가상 서버 등)에 접근할 수 있다. 일 실시예에 따르면, 사용자 가상 머신(910, 920)은 가상 서버 및 백본 모델과 같은 외부 리소스 또 는 독립된 가상 머신을 이용하여 사용자 모델(912, 922)을 튜닝할 수 있다. 이 때, 사용자 가상 머신이 제 1 사용자 모델을 튜닝하는 과정에서 가상 서버의 백본 모델의 구성은 변화하지 않으므로, 백본 모델은 사용자 가상 머신이 제2 사용자 모델을 튜닝하는데 재사용될 수 있다. 또한, 사용자 가 상 머신(910, 920)이 사용자 모델(912, 922)을 튜닝하는 과정에서 업데이트되는 상태 정보는, 사용자 가상 머신 (910, 920)에 저장 및 관리될 수 있다. 도 9에서는 2개의 사용자 가상 머신(910, 920)이 사용자 모델(912, 922)을 튜닝하는 예를 도시하고 있지만, 이에 한정되는 것은 아니며, 3개 이상의 사용자 가상 머신이 하나의 백 본 모델을 이용하여 각각 독립적으로 상이한 사용자 모델을 튜닝할 수도 있다. 일 실시예에 따르면, 사용자 가상 머신(910, 920)은 가상 서버가 제공하는 모델 튜닝을 위한 서비스 요청 을 이용하여 백본 모델의 기능을 이용할 수 있다. 예를 들어, 사용자 가상 머신(910, 920)은 가상 서버 가 제공하는 API, RPC, RMI 등을 호출함으로써, 백본 모델에 접근할 수 있다. 이와 같이 사용자 가상 머신(910, 920)이 서비스 요청을 통해 백본 모델의 일부 기능을 이용함으로써, 백본 모델의 구성이 은닉된 상태에서 사용자 가상 머신(910, 920)은 사용자 모델(912, 922)의 튜닝을 위해 필요한 기능이나 데이터 를 제공받을 수 있다. 일 실시예에 따르면, 사용자 가상 머신(910, 920)은 백본 모델을 이용하여 사용자 모델(912, 922)의 특정 층을 튜닝할 수 있다. 예를 들어, 사용자 가상 머신은, 가상 서버로부터 백본 모델의 실행 결 과를 제공받고, 그 실행 결과에 기초하여 산출된 그래디언트를 사용자 모델(예를 들어, 제1 사용자 모델의 출력층)에 적용할 수 있다. 다른 예에서, 사용자 가상 머신은, 가상 서버로부터 백본 모델에서 산출된 그래디언트를 사용자 모델(예를 들어, 제2 사용자 모델의 입력층)에 적용할 수 있다. 한편, 도 9는 사용자 모델(912, 922) 각각의 출력층 또는 입력층을 튜닝하는 예시가 도시되었으나, 이에 한정되지 않는다. 예를 들 어, 사용자 가상 머신(910, 920)은 백본 모델을 이용하여 사용자 모델(912, 922)의 중간층을 튜닝할 수도있다. 일 실시예에 따르면, 사용자 가상 머신은 출력층을 제외한 제1 백본 모델을 이용하여 제1 사용 자 모델의 출력층을 튜닝할 수 있다. 구체적으로, 사용자 가상 머신은 입력을 제1 백본 모델 의 입력층에 전송하고, 해당 입력이 제1 백본 모델을 순전파하여 생성된 데이터(예를 들어, 백 본 모델의 출력층에 대한 입력 데이터)를 수신할 수 있다. 사용자 가상 머신은 수신한 데이터를 제1 사용자 모델의 출력층에 입력하여 출력을 산출한 후 이를 이용하여 출력층에 대한 그래디언 트를 계산한다. 사용자 가상 머신은, 이와 같이 계산된 출력층에 대한 그래디언트를 이용하여 출력층 을 튜닝할 수 있다. 추가적으로 또는 대안적으로, 사용자 가상 머신은 입력층을 제외한 제2 백본 모델을 이용하여 제2 사용자 모델의 입력층을 튜닝할 수 있다. 구체적으로, 사용자 가상 머신은 입력에 대해 제 2 사용자 모델의 입력층이 산출한 결과를 제2 백본 모델에 전송함으로써 해당 산출 결과가 제2 백본 모델을 통해 생성된 입력층에 대한 그래디언트 데이터를 수신할 수 있다. 사용자 가상 머신은 수신된 그래디언트를 이용하여 제2 사용자 모델의 입력층을 튜닝할 수 있다. 일 실시예에 따르면, 사용자 가상 머신(910, 920)은 이상 설명한 방법에 따라 튜닝된 사용자 모델(912, 922) 및 백본 모델을 이용하여 추론을 수행할 수 있다. 즉, 사용자 가상 머신(910, 920)은 자신이 보유한 사용자 모델(912, 922)의 튜닝된 층(914, 924)의 실행 결과와 가상 서버로부터 제공되는 백본 모델의 일부 실행 결과를 함께 이용하여 추론을 수행할 수 있다. 도 10은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법의 예시를 나타내는 흐름도이다. 방법은 사 용자 단말의 적어도 하나의 프로세서(예를 들어, 프로세서)에 의해 수행될 수 있다. 도시된 바와 같이, 방법은 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적 어도 하나를 포함하는 서비스 요청을 정보 처리 시스템으로 전송하는 단계(S1010)로 개시될 수 있다. 여기서, 학습 상태 정보는, 딥러닝 모델의 학습률, 옵티마이저 상태, 가중치 감쇠 계수, 그래디언트 클리핑 계수, 및 손 실 스케일값 중 적어도 하나를 포함할 수 있다. 또한, 프로세서는, 서비스 요청의 응답으로써, 정보 처리 시스템으로부터 백본 모델을 이용하여 산출된 튜닝 데 이터를 수신할 수 있다(S1020). 그리고 나서, 프로세서는 튜닝 데이터를 이용하여 딥러닝 모델을 업데이트할 수 있다(S1030). 여기서, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파라미터의 변동분 중 적어도 하나를 포함할 수 있다. 또한, 프로세서는 튜닝 데이터를 이용하여 딥러닝 모델을 업데이트하는 것과 연관하여 학습 상태 정보를 업데이트할 수 있다. 일 실시예에 따르면, 프로세서는 백본 모델과 연동되어 있는 API 서버로, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 파라미터로 포함하는 API의 호출을 전 송할 수 있다. 그 후, 프로세서는 API의 호출의 응답으로써, API 서버로부터 딥러닝 모델의 입력 데이터와 연 관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나에 기초한 백본 모델의 실행 결과를 수신할 수 있다. 추가적으로, 프로세서는 API의 호출의 응답으로써, 백본 모델의 순전파 계산 결과 및 역전파 계산 결과 중 적어도 하나를 수신할 수 있다. 일 실시예에 따르면, 백본 모델은 딥러닝 모델의 복수의 층 중 튜닝 대상 층을 제외한 하나 이상의 층을 포함할 수 있다. 또한, 백본 모델은 딥러닝 모델의 튜닝 전에, 학습 데이터에 기초하여 사전 학습될 수 있다. 일 실시예에 따르면, 튜닝 대상 층은 딥러닝 모델의 입력층이고, 프로세서는 입력층의 출력, 레이블 및 딥러닝 모델의 학습 상태 정보를 포함하는 서비스 요청을 정보 처리 시스템으로 전송할 수 있다. 다른 실시예에 따르 면, 튜닝 대상 층은 딥러닝 모델의 출력층이고, 프로세서는 딥러닝 모델의 입력 데이터를 포함하는 서비스 요청 을 정보 처리 시스템으로 전송할 수 있다. 이 경우, 프로세서는 백본 모델의 순전파 계산 출력을 출력층에 입 력하여 출력 확률을 산출하고, 출력 확률을 레이블과 비교하여 손실을 계산하고, 손실에 기초하여 출력층의 그 래디언트를 산출할 수 있다. 또 다른 실시예에 따르면, 튜닝 대상 층은 딥러닝 모델의 중간층이고, 프로세서는 딥러닝 모델의 입력, 레이블, 중간층의 가중치 및 딥러닝 모델의 학습 상태 정보를 포함하는 서비스 요청을 정 보 처리 시스템으로 전송할 수 있다. 도 11은 본 개시의 다른 실시예에 따른 딥러닝 모델의 튜닝 방법의 예시를 나타내는 흐름도이다. 방법은 정보 처리 시스템의 적어도 하나의 프로세서(예를 들어, 프로세서)에 의해 수행될 수 있다. 도시된 바와 같이, 방법은, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 포함하는 서비스 요청을 수신하는 단계(S1110)로 개시될 수 있다. 또한, 프로세서는, 서비스 요청에 따라 백본 모델의 실행 결과를 산출할 수 있다(S1120). 프로세서는, 서비스 요청의 응답으로써, 백본 모델의 실행 결과를 포함하는 튜닝 데이터를 딥러닝 모델이 포함된 사용자 단말로 전 송할 수 있다. 여기서, 튜닝 데이터는 백본 모델의 파라미터, 특정 층에 대한 입력값, 특정 층의 출력값 및 파 라미터의 변동분 중 적어도 하나를 포함할 수 있다. 또한, 백본 모델은, 딥러닝 모델의 복수의 층 중 튜닝 대 상 층을 제외한 하나 이상의 층을 포함할 수 있다. 백본 모델은, 딥러닝 모델의 튜닝 전에, 학습 데이터에 기 초하여 사전 학습될 수 있다. 일 실시예에 따르면, 프로세서는 백본 모델과 연동되어 있는 API 서버를 포함할 수 있다. 이 경우, API 서버는, 딥러닝 모델의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나를 파라미터로 포함하는 API의 호출을 수신할 수 있다. 또한, API의 호출의 응답으로써, API 서버는, 딥러닝 모델 의 입력 데이터와 연관된 정보, 튜닝 대상 층과 연관된 정보 및 학습 상태 정보 중 적어도 하나에 기초한 백본 모델의 실행 결과를 사용자 단말로 전송할 수 있다. 일 실시예에서, 튜닝 대상 층은 딥러닝 모델의 입력층일 수 있다. 이 경우, 서비스 요청은, 입력층의 출력, 레 이블 및 상기 딥러닝 모델의 상태 정보를 포함할 수 있다. 또한, 프로세서는, 서비스 요청에 따라 백본 모델의 실행 결과를 산출하기 위해, 입력층의 출력을 백본 모델에 순전파하여 출력 확률을 획득하고, 출력 확률을 레이 블과 비교하여 손실을 계산하고, 손실을 최소화 하는 방향으로 백본 모델을 업데이트 하기 위한 그래디언트를 산출하고, 그래디언트를 백본 모델에 역전파하여 입력층의 그래디언트를 획득할 수 있다. 일 실시예에서, 튜닝 대상 층은 딥러닝 모델의 출력층일 수 있다. 이 경우, 서비스 요청은 입력 데이터를 포함 할 수 있다. 또한, 프로세서는, 서비스 요청에 따라 백본 모델의 실행 결과를 산출하기 위해, 입력 데이터를 백 본 모델에 순전파하여 순전파 계산 출력을 산출할 수 있다. 일 실시예에서, 튜닝 대상 층은 딥러닝 모델의 중간층일 수 있다. 이 경우, 서비스 요청은 중간층과 연관된 정 보, 입력 데이터, 레이블 및 딥러닝 모델의 상태 정보를 포함할 수 있다. 또한, 프로세서는, 서비스 요청에 따 라 백본 모델의 실행 결과를 산출하기 위해, 중간층과 연관된 정보를 기초로 백본 모델의 중간층과 연관된 정보 를 결정하고, 입력 데이터를 백본 모델에 순전파하여 출력 확률을 획득하고, 출력 확률과 레이블을 비교하여 손 실을 계산하고, 손실을 최소화 하는 방향으로 백본 모델을 업데이트 하기 위한 그래디언트를 산출하고, 그래디 언트를 백본 모델에 역전파하여 상기 중간층의 그래디언트를 획득할 수 있다. 일 실시예에서, 프로세서는, 서비스 요청의 응답으로써, 백본 모델의 실행 결과를 포함하는 튜닝 데이터로서, 백본 모델의 순전파 계산 결과 및 역전파 계산 결과 중 적어도 하나를 딥러닝 모델이 포함된 사용자 단말로 전 송할 수 있다. 도 10 및 11에서 도시한 흐름도 및 상술한 설명은 일 예시일 뿐이며, 일부 실시예에서는 다르게 구현될 수 있다. 예를 들어, 일부 실시예에서는 각 단계의 순서가 바뀌거나, 일부 단계가 반복 수행되거나, 일부 단계가 생략되거나, 일부 단계가 추가될 수 있다. 상술한 방법은 컴퓨터에서 실행하기 위해 컴퓨터 판독 가능한 기록 매체에 저장된 컴퓨터 프로그램으로 제공될 수 있다. 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하 는 것일수도 있다. 또한, 매체는 단일 또는 수개 하드웨어가 결합된 형태의 다양한 기록 수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워크 상에 분산 존재하는 것일 수 도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD 와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체(magneto optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체 의 예시로, 애플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다. 본 개시의 방법, 동작 또는 기법들은 다양한 수단에 의해 구현될 수도 있다. 예를 들어, 이러한 기법들은 하드 웨어, 펌웨어, 소프트웨어, 또는 이들의 조합으로 구현될 수도 있다. 본원의 개시와 연계하여 설명된 다양한 예시적인 논리적 블록들, 모듈들, 회로들, 및 알고리즘 단계들은 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양자 의 조합들로 구현될 수도 있음을 통상의 기술자들은 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 대 체를 명확하게 설명하기 위해, 다양한 예시적인 구성요소들, 블록들, 모듈들, 회로들, 및 단계들이 그들의 기능 적 관점에서 일반적으로 위에서 설명되었다. 그러한 기능이 하드웨어로서 구현되는지 또는 소프트웨어로서 구현되는 지의 여부는, 특정 애플리케이션 및 전체 시스템에 부과되는 설계 요구사항들에 따라 달라진다. 통상의 기술자들은 각각의 특정 애플리케이션을 위해 다양한 방식들로 설명된 기능을 구현할 수도 있으나, 그러한 구현 들은 본 개시의 범위로부터 벗어나게 하는 것으로 해석되어서는 안된다. 하드웨어 구현에서, 기법들을 수행하는 데 이용되는 프로세싱 유닛들은, 하나 이상의 ASIC들, DSP들, 디지털 신 호 프로세싱 디바이스들(digital signal processing devices; DSPD들), 프로그램가능 논리 디바이스들 (programmable logic devices; PLD들), 필드 프로그램가능 게이트 어레이들(field programmable gate arrays; FPGA들), 프로세서들, 제어기들, 마이크로제어기들, 마이크로프로세서들, 전자 디바이스들, 본 개시에 설명된 기능들을 수행하도록 설계된 다른 전자 유닛들, 컴퓨터, 또는 이들의 조합 내에서 구현될 수도 있다. 따라서, 본 개시와 연계하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 및 회로들은 범용 프로세서, DSP, ASIC, FPGA나 다른 프로그램 가능 논리 디바이스, 이산 게이트나 트랜지스터 로직, 이산 하드웨어 컴포넌트들, 또는 본원에 설명된 기능들을 수행하도록 설계된 것들의 임의의 조합으로 구현되거나 수행될 수도 있다. 범용 프로세서는 마이크로프로세서일 수도 있지만, 대안으로, 프로세서는 임의의 종래의 프로세서, 제어기, 마이크로 제어기, 또는 상태 머신일 수도 있다. 프로세서는 또한, 컴퓨팅 디바이스들의 조합, 예를 들면, DSP와 마이크 로프로세서, 복수의 마이크로프로세서들, DSP 코어와 연계한 하나 이상의 마이크로프로세서들, 또는 임의의 다 른 구성의 조합으로서 구현될 수도 있다. 펌웨어 및/또는 소프트웨어 구현에 있어서, 기법들은 랜덤 액세스 메모리(random access memory; RAM), 판독 전 용 메모리(read-only memory; ROM), 비휘발성 RAM(non-volatile random access memory; NVRAM), PROM(programmable read-only memory), EPROM(erasable programmable read-only memory), EEPROM(electrically erasable PROM), 플래시 메모리, 컴팩트 디스크(compact disc; CD), 자기 또는 광학 데이 터 스토리지 디바이스 등과 같은 컴퓨터 판독가능 매체 상에 저장된 명령들로서 구현될 수도 있다. 명령들은 하나 이상의 프로세서들에 의해 실행 가능할 수도 있고, 프로세서(들)로 하여금 본 개시에 설명된 기능의 특정 양태들을 수행하게 할 수도 있다. 소프트웨어로 구현되는 경우, 상기 기법들은 하나 이상의 명령들 또는 코드로서 컴퓨터 판독 가능한 매체 상에 저장되거나 또는 컴퓨터 판독 가능한 매체를 통해 전송될 수도 있다. 컴퓨터 판독가능 매체들은 한 장소에서 다른 장소로 컴퓨터 프로그램의 전송을 용이하게 하는 임의의 매체를 포함하여 컴퓨터 저장 매체들 및 통신 매 체들 양자를 포함한다. 저장 매체들은 컴퓨터에 의해 액세스될 수 있는 임의의 이용 가능한 매체들일 수도 있 다. 비제한적인 예로서, 이러한 컴퓨터 판독가능 매체는 RAM, ROM, EEPROM, CD-ROM 또는 다른 광학 디스크 스 토리지, 자기 디스크 스토리지 또는 다른 자기 스토리지 디바이스들, 또는 소망의 프로그램 코드를 명령들 또는 데이터 구조들의 형태로 이송 또는 저장하기 위해 사용될 수 있으며 컴퓨터에 의해 액세스될 수 있는 임의의 다 른 매체를 포함할 수 있다. 또한, 임의의 접속이 컴퓨터 판독가능 매체로 적절히 칭해진다. 예를 들어, 소프트웨어가 동축 케이블, 광섬유 케이블, 연선, 디지털 가입자 회선 (DSL), 또는 적외선, 무선, 및 마이크로파와 같은 무선 기술들을 사용하여 웹사이트, 서버, 또는 다른 원격 소스로부터 전송되면, 동축 케 이블, 광섬유 케이블, 연선, 디지털 가입자 회선, 또는 적외선, 무선, 및 마이크로파와 같은 무선 기술들은 매 체의 정의 내에 포함된다. 본원에서 사용된 디스크(disk) 와 디스크(disc)는, CD, 레이저 디스크, 광 디스크, DVD(digital versatile disc), 플로피디스크, 및 블루레이 디스크를 포함하며, 여기서 디스크들(disks)은 보통 자기적으로 데이터를 재생하고, 반면 디스크들(discs) 은 레이저를 이용하여 광학적으로 데이터를 재생한다. 위의 조합들도 컴퓨터 판독가능 매체들의 범위 내에 포함되어야 한다. 소프트웨어 모듈은, RAM 메모리, 플래시 메모리, ROM 메모리, EPROM 메모리, EEPROM 메모리, 레지스터들, 하드 디스크, 이동식 디스크, CD-ROM, 또는 공지된 임의의 다른 형태의 저장 매체 내에 상주할 수도 있다. 예시적인 저장 매체는, 프로세가 저장 매체로부터 정보를 판독하거나 저장 매체에 정보를 기록할 수 있도록, 프로세서에 연결될 수 있다. 대안으로, 저장 매체는 프로세서에 통합될 수도 있다. 프로세서와 저장 매체는 ASIC 내에 존 재할 수도 있다. ASIC은 유저 단말 내에 존재할 수도 있다. 대안으로, 프로세서와 저장 매체는 유저 단말에서 개별 구성요소들로서 존재할 수도 있다. 이상 설명된 실시예들이 하나 이상의 독립형 컴퓨터 시스템에서 현재 개시된 주제의 양태들을 활용하는 것으로 기술되었으나, 본 개시는 이에 한정되지 않고, 네트워크나 분산 컴퓨팅 환경과 같은 임의의 컴퓨팅 환경과 연계 하여 구현될 수도 있다. 또 나아가, 본 개시에서 주제의 양상들은 복수의 프로세싱 칩들이나 장치들에서 구현 될 수도 있고, 스토리지는 복수의 장치들에 걸쳐 유사하게 영향을 받게 될 수도 있다. 이러한 장치들은 PC들,"}
{"patent_id": "10-2022-0006896", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "네트워크 서버들, 및 휴대용 장치들을 포함할 수도 있다.본 명세서에서는 본 개시가 일부 실시예들과 관련하여 설명되었지만, 본 개시의 발명이 속하는 기술분야의 통상 의 기술자가 이해할 수 있는 본 개시의 범위를 벗어나지 않는 범위에서 다양한 변형 및 변경이 이루어질 수 있 다. 또한, 그러한 변형 및 변경은 본 명세서에 첨부된 특허청구의 범위 내에 속하는 것으로 생각되어야 한다."}
{"patent_id": "10-2022-0006896", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 개시의 실시예들은, 이하 설명하는 첨부 도면들을 참조하여 설명될 것이며, 여기서 유사한 참조 번호는 유사 한 요소들을 나타내지만, 이에 한정되지는 않는다. 도 1은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 시스템의 구성을 나타낸다. 도 2는 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝을 실행하기 위해, 정보 처리 시스템이 복수의 사용자 단말과 통신 가능하도록 연결된 구성을 나타내는 개요도이다. 도 3은 본 개시의 일 실시예에 따른 사용자 단말 및 정보 처리 시스템의 내부 구성을 나타내는 블록도이다. 도 4는 본 개시의 일 실시예에 따른 사용자 단말의 프로세서의 내부 구성을 나타내는 도면이다. 도 5는 본 개시의 일 실시예에 따른 정보 처리 시스템의 프로세서의 내부 구성을 나타내는 도면이다. 도 6은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 입력층을 튜닝하는 예시를 나타낸다. 도 7은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 출력층을 튜닝하는 예시를 나타낸다. 도 8은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법에 따라 사용자 단말이 중간층을 튜닝하는 예시를 나타낸다. 도 9는 본 개시의 일 실시예에 따른 클라우드 컴퓨팅 기반의 딥러닝 모델의 튜닝 시스템의 구성을 나타내는 도 면이다. 도 10은 본 개시의 일 실시예에 따른 딥러닝 모델의 튜닝 방법의 예시를 나타내는 흐름도이다. 도 11은 본 개시의 다른 실시예에 따른 딥러닝 모델의 튜닝 방법의 예시를 나타내는 흐름도이다."}
