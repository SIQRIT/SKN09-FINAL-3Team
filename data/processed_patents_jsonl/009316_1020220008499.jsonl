{"patent_id": "10-2022-0008499", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0112353", "출원번호": "10-2022-0008499", "발명의 명칭": "데이터 처리 시스템 및 그 동작 방법과, 이를 이용한 컴퓨팅 시스템", "출원인": "에스케이하이닉스 주식회사", "발명자": "제상은"}}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리;호스트 장치로부터 수신된 행렬에 음수 원소가 포함되어 있는 경우, 상기 행렬을 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여, 상기 양수 행렬을 제 1 서브 어레이에 저장하고상기 음수 행렬을 제 2 서브 어레이에 저장하는 행렬 분리부;상기 호스트 장치로부터 수신된 벡터에 음수 원소가 포함되어 있는 경우, 상기 벡터의 원소 중 절대값이 최대인음수 원소를 0 또는 양수로 변환하기 위한 오프셋을 상기 벡터의 각 원소에 가산하여 오프셋 벡터를 생성하고상기 제 1 서브 어레이 및 상기 제 2 서브 어레이 각각의 로우라인에 인가하는 벡터 변환부; 및상기 오프셋과 상기 양수 행렬 간의 곱셈 결과로부터 상기 오프셋과 상기 음수 행렬 간의 곱셈 결과를 차감하여오프셋 보정값을 생성하고, 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이로부터 출력되는 연산값으로부터상기 오프셋 보정값을 감산하는 오프셋 보정부;를 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 연산값은, 상기 양수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 1 서브 어레이로부터 출력되는 양수연산값으로부터, 상기 음수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 2 서브 어레이로부터 출력되는 음수 연산값을 감산하여 생성되는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 연산 메모리는, 상기 양수 연산값과 상기 음수 연산값 각각을 디지털값으로 변환하는 아날로그-디지털 변환기; 및디지털화된 상기 양수 연산값으로부터 디지털화된 상기 음수 연산값을 감산하여 상기 연산값을 출력하는 디지털감산기;를 더 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2 항에 있어서,상기 연산 메모리는, 상기 양수 연산값으로부터 상기 음수 연산값을 감산하는 아날로그 감산기; 및상기 아날로그 감산기의 출력을 디지털값으로 변환하여 상기 연산값을 출력하는 아날로그-디지털 변환기;를 더 포함하도록 구성되는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 오프셋 벡터를 구성하는 원소 각각은 복수 비트로 구성되고, 상기 오프셋 벡터를 자릿값에 따라 1비트 단위로 분리하여 적어도 하나의 부분 오프셋 벡터를 포함하는 순차 벡터를 생성하고, 상기 부분 오프셋 벡터를 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이의 로우라인에 순차적으로 인가하는 오프셋 벡터 분리부를 더 포공개특허 10-2023-0112353-3-함하는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 연산 메모리는, 상기 부분 오프셋 벡터와 상기 양수 행렬 간의 곱셈 결과인 부분 양수 연산값 및, 상기 부분 오프셋 벡터와 상기 음수 행렬 간의 곱셈 결과인 부분 음수 연산값 각각을 상기 부분 오프셋 벡터의 자릿값에 따라 정렬하고, 정렬된 상기 부분 양수 연산값을 모두 합산하여 양수 연산값을 도출하고 상기 부분 음수 연산값을 모두 합산하여 음수 연산값을 도출하도록 구성되는 자릿값 정렬부를 더 포함하는 데이터 처리 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리가 제공되는 단계;호스트 장치로부터 수신된 행렬에 음수 원소가 포함되어 있는 경우, 음수연산 제어부가 상기 행렬을 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여, 상기 양수 행렬을 제 1 서브어레이에 저장하고 상기 음수 행렬을 제 2 서브 어레이에 저장하는 단계;상기 호스트 장치로부터 수신된 벡터에 음수 원소가 포함되어 있는 경우, 상기 음수연산 제어부가 상기 벡터의원소 중 절대값이 최대인 음수 원소를 0 또는 양수로 변환하기 위한 오프셋을 상기 벡터의 각 원소에 가산하여오프셋 벡터를 생성하고 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이 각각의 로우라인에 인가하는 단계;및상기 음수연산 제어부가 상기 오프셋과 상기 양수 행렬 간의 곱셈 결과로부터 상기 오프셋과 상기 음수 행렬 간의 곱셈 결과를 차감하여 상기 오프셋 보정값을 생성하는 단계; 및상기 음수연산 제어부가 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이로부터 출력되는 연산값으로부터 상기오프셋 보정값을 감산하여 보정하는 단계;를 포함하도록 구성되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 연산값은, 상기 양수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 1 서브 어레이로부터 출력되는 양수연산값으로부터, 상기 음수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 2 서브 어레이로부터 출력되는 음수 연산값을 감산하여 생성되는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 연산 메모리가, 상기 양수 연산값과 상기 음수 연산값 각각을 디지털값으로 변환하는 단계; 및상기 연산 메모리가, 디지털화된 상기 양수 연산값으로부터 디지털화된 상기 음수 연산값을 감산하여 상기 연산값을 출력하는 단계;를 더 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 8 항에 있어서,상기 연산 메모리가, 상기 양수 연산값으로부터 상기 음수 연산값을 감산하는 단계; 및상기 연산 메모리가, 상기 아날로그 감산기의 출력을 디지털값으로 변환하여 상기 연산값을 출력하는 단계;를 더 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "공개특허 10-2023-0112353-4-제 7 항에 있어서,상기 오프셋 벡터를 구성하는 원소 각각은 복수 비트로 구성되고,상기 오프셋 벡터를 인가하는 단계는, 상기 오프셋 벡터를 자릿값에 따라 1비트 단위로 분리하여 적어도 하나의부분 오프셋 벡터를 포함하는 순차 벡터를 생성하는 단계; 및상기 부분 오프셋 벡터를 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이의 로우라인에 순차적으로 인가하는단계;를 더 포함하는 데이터 처리 시스템의 동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 11 항에 있어서,상기 연산 메모리는, 상기 부분 오프셋 벡터와 상기 양수 행렬 간의 곱셈 결과인 부분 양수 연산값 및, 상기 부분 오프셋 벡터와 상기 음수 행렬 간의 곱셈 결과인 부분 음수 연산값 각각을 상기 부분 오프셋 벡터의 자릿값에 따라 정렬하고, 정렬된 상기 부분 양수 연산값을 모두 합산하여 양수 연산값을 도출하고 상기 부분 음수 연산값을 모두 합산하여 음수 연산값을 도출하도록 구성되는 자릿값 정렬부를 더 포함하는 데이터 처리 시스템의동작 방법."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "호스트 장치;상기 호스트 장치의 요청에 따라 어플리케이션의 연산을 처리하는 데이터 처리 시스템에 구비되고, 복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산메모리; 및상기 호스트 장치로부터 수신된 음수를 포함하는 행렬을 양수 행렬 및 음수 행렬로 분리하고, 상기 호스트 장치로부터 수신된 음수를 포함하는 벡터에 오프셋을 가산하여 오프셋 벡터를 생성하며, 상기 오프셋에 기초하여 생성한 오프셋 보정값에 따라 상기 연산 메모리로부터 출력되는 연산값을 보정하도록 구성되는 음수연산 제어부;를 포함하도록 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 13 항에 있어서,상기 연산 메모리는, 상기 양수 행렬이 저장되고 상기 오프셋 벡터가 로우라인에 인가되는 제 1 서브 어레이;및상기 음수 행렬이 저장되고 상기 오프셋 벡터가 로우라인에 인가되는 제 2 서브 어레이;를 포함하는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 13 항에 있어서,상기 음수연산 제어부는, 상기 오프셋과 상기 양수 행렬 간의 곱셈 결과로부터 상기 오프셋과 상기 음수 행렬간의 곱셈 결과를 차감하여 상기 오프셋 보정값을 생성하도록 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제 13 항에 있어서,상기 연산값은, 상기 양수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 1 서브 어레이로부터 출력되는 양수연산값에서, 상기 음수 행렬과 상기 오프셋 벡터의 곱셈 결과로 상기 제 2 서브 어레이로부터 출력되는 음수 연산값을 감산하여 생성되는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "공개특허 10-2023-0112353-5-제 13 항에 있어서,상기 음수연산 제어부는, 상기 연산값으로부터 상기 오프셋 보정값을 감산하도록 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 13 항에 있어서,상기 오프셋 벡터를 구성하는 원소 각각은 복수 비트로 구성되고,상기 음수연산 제어부는, 상기 오프셋 벡터를 자릿값에 따라 1비트 단위로 분리하여 적어도 하나의 부분 오프셋벡터를 포함하는 순차 벡터를 생성하고, 양수 행렬 및 상기 음수 행렬이 각각 저장된 서브 어레이의 로우라인에상기 부분 오프셋 벡터를 순차적으로 인가하는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 18 항에 있어서,상기 연산 메모리는, 상기 부분 오프셋 벡터와 상기 양수 행렬 간의 곱셈 결과인 부분 양수 연산값 및, 상기 부분 오프셋 벡터와 상기 음수 행렬 간의 곱셈 결과인 부분 음수 연산값 각각을 상기 부분 오프셋 벡터의 자릿값에 따라 정렬하고, 정렬된 상기 부분 양수 연산값으로부터 상기 부분 음수 연산값을 감산하도록 구성되는 컴퓨팅 시스템."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 의한 데이터 처리 시스템은 복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리, 호스트 장치로부터 수신된 행렬에 음수 원소가 포함 되어 있는 경우, 행렬을 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분 (뒷면에 계속)"}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 기술은 데이터 처리 기술에 관한 것으로, 보다 구체적으로는 데이터 처리 시스템 및 그 동작 방법과, 이를 이용한 컴퓨팅 시스템 에 관한 것이다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 어플리케이션 및 빅데이터 분석에 대한 관심과 중요성이 높아지면서, 대용량의 데이터를 효율적으로 처리할 수 있는 컴퓨팅 시스템에 대한 요구가 증가하고 있다. 인공 신경망은 인공지능을 구현하기 위한 하나의 방법이다. 인공지능 어플리케이션이 처리하는 연산은 행렬과 벡터의 곱셈 연산이 주를 이루며, 방대한 양의 데이터를 고속으로 정확하게 연산하기 위한 다양한 방법이 연구 되고 있다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 기술의 실시예는 아날로그 방식의 메모리 내 연산 장치에서 음수를 포함하는 피연산자를 연산할 수 있는 데 이터 처리 시스템 및 그 동작 방법과, 이를 이용한 컴퓨팅 시스템을 제공할 수 있다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 기술의 일 실시예에 의한 데이터 처리 시스템은 복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메 모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리; 호스트 장치로부터 수신된 행렬에 음수 원소가 포함되어 있는 경우, 상기 행렬을 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여, 상기 양수 행렬을 제 1 서브 어레이에 저장하고 상기 음수 행렬을 제 2 서브 어레이에 저장하는 행렬 분리부; 상기 호스트 장치로부터 수신된 벡터에 음수 원소가 포함되어 있는 경우, 상기 벡터의 원소 중 절대값이 최대인 음수 원소를 0 또는 양수로 변환하기 위한 오프셋을 상기 벡터의 각 원소에 가산하여 오프셋 벡터를 생성하고 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이 각각의 로우라인에 인가하는 벡터 변 환부; 및 상기 오프셋과 상기 양수 행렬 간의 곱셈 결과로부터 상기 오프셋과 상기 음수 행렬 간의 곱셈 결과를 차감하여 오프셋 보정값을 생성하고, 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이로부터 출력되는 연산값 으로부터 상기 오프셋 보정값을 감산하는 오프셋 보정부;를 포함하도록 구성될 수 있다.본 기술의 일 실시예에 의한 데이터 처리 시스템의 동작 방법은 복수의 로우라인 및 복수의 컬럼라인 간에 접속 된 복수의 메모리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리가 제공되는 단계; 호스트 장 치로부터 수신된 행렬에 음수 원소가 포함되어 있는 경우, 음수연산 제어부가 상기 행렬을 양수 원소로 이루어 진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여, 상기 양수 행렬을 제 1 서브 어레이에 저장하고 상기 음수 행렬을 제 2 서브 어레이에 저장하는 단계; 상기 호스트 장치로부터 수신된 벡터에 음수 원 소가 포함되어 있는 경우, 상기 음수연산 제어부가 상기 벡터의 원소 중 절대값이 최대인 음수 원소를 0 또는 양수로 변환하기 위한 오프셋을 상기 벡터의 각 원소에 가산하여 오프셋 벡터를 생성하고 상기 제 1 서브 어레 이 및 상기 제 2 서브 어레이 각각의 로우라인에 인가하는 단계; 및 상기 음수연산 제어부가 상기 오프셋과 상 기 양수 행렬 간의 곱셈 결과로부터 상기 오프셋과 상기 음수 행렬 간의 곱셈 결과를 차감하여 상기 오프셋 보 정값을 생성하는 단계; 및 상기 음수연산 제어부가 상기 제 1 서브 어레이 및 상기 제 2 서브 어레이로부터 출 력되는 연산값으로부터 상기 오프셋 보정값을 감산하여 보정하는 단계;를 포함하도록 구성될 수 있다. 본 기술의 일 실시예에 의한 컴퓨팅 시스템은 호스트 장치; 상기 호스트 장치의 요청에 따라 어플리케이션의 연 산을 처리하는 데이터 처리 시스템에 구비되고, 복수의 로우라인 및 복수의 컬럼라인 간에 접속된 복수의 메모 리 셀을 포함하는 서브 어레이를 적어도 하나 구비하는 연산 메모리; 및 상기 호스트 장치로부터 수신된 음수를 포함하는 행렬을 양수 행렬 및 음수 행렬로 분리하고, 상기 호스트 장치로부터 수신된 음수를 포함하는 벡터에 오프셋을 가산하여 오프셋 벡터를 생성하며, 상기 오프셋에 기초하여 생성한 오프셋 보정값에 따라 상기 연산 메모리로부터 출력되는 연산값을 보정하도록 구성되는 음수연산 제어부;를 포함하도록 구성될 수 있다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 기술에 의하면 낮은 복잡도로 음수를 포함하는 벡터-행렬 곱셈 연산을 정확하게 수행할 수 있다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 기술의 실시예를 보다 구체적으로 설명한다. 도 1은 일 실시예에 의한 컴퓨팅 시스템의 구성도이다. 도 1을 참조하면, 일 실시예에 의한 컴퓨팅 시스템은 호스트 장치 및 데이터 처리 시스템을 포함 할 수 있다. 데이터 처리 시스템은 호스트 장치의 요청에 따라 어플리케이션의 연산을 처리하는 신 경망 프로세서를 포함할 수 있다. 호스트 장치는 적어도 메인 프로세서, RAM, 메모리, 입출력(IO) 장치 및, 도시하지 않은 다른 범용적인 구성요소들을 더 포함할 수 있다. 실시예에 있어서, 호스트 장치의 구성요소들은 하나의 반도체 칩으로 집적되어 시스템 온 칩(SoC)으로 구 현될 수 있으나 이에 한정되지 않으며, 복수의 반도체 칩으로 구현될 수도 있다. 메인 프로세서는 컴퓨팅 시스템의 전반적인 동작을 제어할 수 있으며, 예를 들어 중앙처리장치 (Central Processing Unit; CPU)일 수 있다. 메인 프로세서는 하나 또는 복수의 코어를 포함할 수 있다. 메인 프로세서는 RAM 및 메모리에 저장된 프로그램들, 데이터, 및/또는 명령어(instructions)를 처리 또는 실행할 수 있다. 예를 들어, 메인 프로세서는 메모리에 저장된 프로그램들을 실행함으로 써 컴퓨팅 시스템의 기능들을 제어할 수 있다. RAM은 프로그램들, 데이터, 또는 명령들을 일시적으로 저장할 수 있다. 메모리에 저장된 프로그램들 및/또는 데이터는 메인 프로세서의 제어 또는 부팅 코드에 따라 RAM에 일 시적으로 로딩될 수 있다. RAM은 DRAM(Dynamic RAM) 또는 SRAM(Static RAM) 등의 메모리를 이용하여 구현될 수 있다. 메모리는 데이터를 저장하기 위한 저장 장소로서, 예를 들어, OS(Operating System), 각종 프로그램들 및 각종 데이터를 저장할 수 있다. 메모리는 휘발성 메모리(volatile memory) 또는 비휘발성 메모리(non- volatile memory) 중 적어도 하나를 포함할 수 있다. 비휘발성 메모리는 ROM(Read Only Memory), PROM(Programmable ROM), EPROM(Electrically Programmable ROM), EEPROM(Electrically Erasable and Programmable ROM), 플래시 메모리, PRAM(Phase-change RAM), MRAM(Magnetic RAM), RRAM(Resistive RAM), FRAM(Ferroelectric RAM) 등에서 선택될 수 있다. 휘발성 메모리는 DRAM(Dynamic RAM), SRAM(Static RAM), SDRAM(Synchronous DRAM) 등에서 선택될 수 있다. 또한 일 실시 예에 있어서, 메모리는 HDD(Hard Disk Drive), SSD(Solid-State Drive), CF(Compact Flash), SD(Secure Digital), Micro-SD(Micro Secure Digital), Mini-SD(Mini Secure Digital), xD(extreme digital) 또는 메모리 스틱(Memory Stick) 등과 같은 저장 장치로 구현될 수 있다. 입출력 장치는 사용자 입력 또는 외부로부터의 입력 데이터를 수신하고, 컴퓨팅 시스템의 처리 결과를 출력할 수 있다. 입출력 장치는 터치 스크린 패널, 키보드, 다양한 종류의 센서 등으로 구현될 수 있다. 실시예에 있어서, 입출력 장치는 컴퓨팅 시스템 주변의 정보를 수집할 수 있다. 예를 들어 입출력 장 치는 촬상 장치와 이미지 센서를 포함하여 데이터 처리 시스템 외부로부터 이미지 신호를 센싱 또는 수신할 수 있고, 센싱 또는 수신된 이미지 신호를 이미지 데이터로 변환하여 메모리에 저장하거나, 데이터 처리 시스템에 제공할 수 있다. 데이터 처리 시스템은 호스트 장치의 요청에 응답하여 어플리케이션의 연산을 처리할 수 있다. 특히, 데이터 처리 시스템은 인공 신경망을 기초로 입력 데이터를 분석하여 유효한 정보를 추출하고, 추출 된 정보를 기초로 상황을 판단하거나 데이터 처리 시스템이 탑재되는 전자 장치의 구성들을 제어할 수 있 다. 예를 들어, 데이터 처리 시스템은 드론(drone), 첨단 운전자 보조 시스템(Advanced Drivers Assistance System; ADAS), 스마트 TV, 스마트 폰, 의료 장치, 모바일 장치, 영상 표시 장치, 계측 장치, IoT(Internet of Things) 장치 등에 적용될 수 있으며, 이외에도 다양한 종류의 컴퓨팅 시스템 중 하나에 탑재될 수 있다. 일 실시예에서, 호스트 장치는 신경망 연산을 데이터 처리 시스템에 오프로드할 수 있고, 이를 위한 초기 파라미터, 예를 들어 입력 벡터 및 가중치 행렬을 데이터 처리 시스템으로 제공할 수 있다. 일 실시예에서, 데이터 처리 시스템은 모바일 장치에 탑재되는 어플리케이션 프로세서일 수 있다. 데이터 처리 시스템은 적어도 신경망 프로세서를 포함할 수 있다. 신경망 프로세서는 입력 데이터를 훈련 또는 학습하여 신경망 모델을 생성하거나, 신경망 모델에 따라 입 력 데이터를 추론하여 정보 신호(information signal)를 생성하거나, 신경망 모델을 재훈련(retrain)할 수 있다. 신경망은 CNN(Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restricted Boltzmann Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Classification Network 등 다양한 종류의 신경망 모델들을 포함할 수 있으나 이에 한정되지 않는다. 도 2는 일 실시예에 의한 신경망 프로세서의 구성도이다. 신경망 프로세서는 신경망 연산에 특화된 프로세서 또는 가속기일 수 있고, 도 2에 도시한 것과 같이 메모 리 내 연산장치, 컨트롤러 및 RAM을 포함할 수 있다. 일 실시예에서 신경망 프로세서는하나의 반도체 칩으로 집적된 시스템 온 칩(SoC)으로 구현될 수 있으나 이에 한정되지 않으며, 복수의 반도체 칩으로 구현될 수도 있다. 컨트롤러는 신경망 프로세서의 전반적인 동작을 제어할 수 있다. 컨트롤러는 메모리 내 연산장 치가 신경망 연산을 정상적으로 실행할 수 있도록 신경망 연산과 관련된 파라미터들을 설정하고 관리할 수 있다. 컨트롤러는 하드웨어, 소프트웨어(또는 펌웨어) 또는 하드웨어에서 실행되는 소프트웨어가 조합된 형태로 구현될 수 있다. 컨트롤러는 적어도 하나의 프로세서, 예컨대 CPU(central processing unit), 마이크로 프로세서 등으로 구 현될 수 있으며, RAM에 저장된 다양한 기능들을 구성하는 인스트럭션을 실행할 수 있다. 호스트 장치가 신경망 프로세서로 벡터 및 행렬을 포함하는 피연산자를 전송하여 신경망 연산을 오프 로드함에 따라, 컨트롤러는 메모리 내 연산 장치로 피연산자 및 이를 저장할 어드레스를 전송할 수 있다. RAM은 DRAM, SRAM 등으로 구현될 수 있으며, 컨트롤러의 동작을 위한 각종 프로그램들 및 데이터와, 컨트롤러에서 생성되는 데이터를 일시 저장할 수 있다. 메모리 내 연산장치는 컨트롤러의 제어에 따라 신경망 연산을 수행하도록 구성될 수 있다. 메모리 내 연산장치는 연산 메모리, 글로벌 버퍼, 누적부(ACCU, 315), 활성화부(ACTIV, 317), 풀링부 (POOL, 319) 및 음수연산 제어부를 포함할 수 있다. 연산 메모리는 복수의 연산 처리부(Processing Element; PE)를 포함할 수 있다. 각 연산 처리부(PE)는 글로벌 버퍼로부터 벡터 및 행렬을 피연산자로 제공받아 벡터-행렬 곱셈(Vector-Matrix Multiplication; VMM) 연산을 수행할 수 있다. 일 실시예에서, 벡터는 신경망 연산의 입력 특징 맵일 수 있고, 행렬은 가중치 행렬일 수 있다. 연산 처리부(PE) 각각은 복수의 서브 어레이를 포함할 수 있다. 각 서브 어레이는 복수의 로우라인과 복수의 컬럼라인 간에 접속된 복수의 메모리 셀을 포함할 수 있다. 신경망 연산을 위해 제 1 피연산자인 가중치 행렬 이 서브 어레이의 메모리 셀에 저장되고, 제 2 피연산자인 입력 특징맵에 대응하는 벡터가 서브 어레이의 로우 라인에 인가됨에 따라 메모리 내 연산, 예를 들어 VMM 연산이 수행될 수 있다. VMM 연산은 컨볼루션 연산, 예컨 대 요소별 곱셈 및 합산 연산일 수 있다. 일 실시예에서, 제 1 피연산자는 NㅧM 크기의 행렬일 수 있고, 제 2 피연산자는 Nㅧ1 크기의 벡터일 수 있다. 여기에서 N 및 M은 각각 양의 정수이다. 일 실시예에서, 서브 어레이는 멤리스터 소자를 포함하는 메모리 소자의 크로스바 어레이일 수 있다. 크로스바 어레이의 교차점에 배치된 멤리스터 메모리 셀이 행렬의 원소값에 대응하는 컨덕턴스를 갖도록 서브 어레이를 프로그래밍할 수 있고, 벡터의 각 원소를 아날로그 입력 전압으로 변환하여 로우라인에 인가할 수 있다. 따라 서, 크로스바 어레이의 각 로우라인에 인가된 입력 전압은 멤리스터 메모리 셀의 컨덕턴스에 의해 가중되고 컬 럼 라인 별로 전류값으로 누적되어 출력된다. 글로벌 버퍼는 피연산자를 저장한 후 연산 메모리로 제공할 수 있고, 연산 메모리로부터 연산 결과를 제공받아 저장할 수 있다. 글로벌 버퍼는 DRAM, SRAM 등으로 구현될 수 있다. 누적부는 각 연산 처리부(PE)의 처리 결과를 누적하여 가중합을 도출하도록 구성될 수 있다. 활성화부는 누적부의 가중합 결과를 ReLU 등과 같은 활성화 함수에 적용하여 비선형성을 추가하도록 구성될 수 있다. 풀링부는 활성화부의 출력값을 샘플링하여 차원을 축소하고 최적화한다. 연산 메모리, 누적부, 활성화부 및 풀링부를 통한 처리 과정은 신경망 모델을 학습 또는 재학습하는 과정, 또는 입력 데이터를 추론하는 과정일 수 있다. 한편, 호스트 장치로부터 전송된 피연산자 또는 신경망 연산의 중간 과정에서 생성되는 피연산자가 음수 원소를 포함하는 경우, 음수연산 제어부는 피연산자를 음수가 아닌 수(non-negative number) 즉, 0 또는 양수로 변환하여 글로벌 버퍼에 저장할 수 있다. 일 실시예에서, 제 1 피연산자인 행렬에 음수 원소가 포함되어 있는 경우, 음수연산 제어부는 행렬을 구성 하는 원소를 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여 글로벌버퍼에 저장할 수 있다. 글로벌 버퍼에 저장된 양수 행렬과 음수 행렬은 각각 제 1 서브 어레이 및 제 2 서브 어레이에 분리 저장할 수 있다. 일 실시예에서, 제 2 피연산자인 벡터에 음수 원소가 포함되어 있는 경우, 음수연산 제어부는 벡터의 원소 중 절대값이 최대인 음수 원소를 음수가 아닌 수로 변환시킬 수 있는 오프셋을 벡터의 각 원소에 가산하여 오프 셋 벡터를 생성하고, 양수 행렬 및 음수 행렬이 각각 저장된 제 1 및 제 2 서브 어레이의 로우라인에 오프셋 벡 터를 인가할 수 있다. 연산 메모리는 음수가 아닌 수로 변환된 피연산자에 대한 VMM 연산을 수행하고 그 결과를 글로벌 버퍼 에 저장할 수 있다. 음수가 포함된 행렬 및 음수가 포함된 벡터를 VMM 연산하는 경우를 가정하면, 연산 처리부(PE)의 제 1 서브 어 레이에 양수 행렬을 저장하고 제 1 서브 어레이의 로우라인에 오프셋 벡터를 인가하여 양수 연산값이 출력되고, 제 2 서브 어레이에 음수 행렬을 저장하고 제 2 서브 어레이의 로우라인에 오프셋 벡터를 인가하여 음수 연산값 이 출력될 수 있다. 행렬에 포함된 음수 원소의 절대값에 대해 VMM 연산이 이루어졌으므로, 양수 연산값에서 음수 연산값을 감산함에 의해 연산 결과를 통합한다. 벡터에 오프셋을 적용한 오프셋 벡터에 의해 VMM 연산이 수행된 경우, 음수연산 제어부는 오프셋에 따라 VMM 연산 결과를 보정하여 최종 연산 결과를 도출할 수 있다. 예를 들어, 음수연산 제어부는 오프셋과 양 수 행렬의 VMM 연산 결과인 제 1 보정값 및, 오프셋과 음수 행렬의 VMM 연산 결과인 제 2 보정값을 연산하고, 제 1 보정값에서 제 2 보정값을 차감함에 의해 오프셋 보정값을 도출할 수 있다. 그리고, 통합된 연산 결과로 부터 오프셋 보정값을 차감하여 최종 연산 결과를 획득할 수 있다. 멤리스터 메모리 셀을 이용한 크로스바 어레이로 구성되는 연산 메모리는 행렬을 메모리 셀에 컨덕턴스 형태로 저장하고 벡터를 로우라인에 전압으로 인가하여, 전압과 컨덕턴스의 곱에 해당하는 전류가 컬럼 라인 별로 합산 되는 원리를 이용하여 VMM 연산을 수행한다. 즉, 컨덕턴스와 전압으로 아날로그 연산이 수행되는 특성상 음수 원소에 대한 VMM 연산이 불가능하다. 하지만, 본 기술에 의하면 음수 원소가 포함된 행렬을 양수 행렬과 음수의 절대값인 음수 행렬로 분리하고, 음 수 원소가 포함된 벡터를 오프셋에 따라 음수가 아닌 수로 변환하여 VMM 연산을 수행하고 그 결과를 통합 및 보 정한다. 따라서, 피연산자에 음수가 포함되어 있는 경우에도 아날로그 방식의 메모리 내 연산이 가능하게 된다. 도 3은 일 실시예에 의한 연산 메모리의 구성도이다. 도 3을 참조하면, 일 실시예에 의한 연산 메모리는 복수의 타일(Tile)로 구분될 수 있다. 각각의 타일(Tile)은 타일 입력 버퍼, 복수의 연산 처리부(PE) 및 타일 출력 버퍼를 포함할 수 있다. 각각의 연산 처리부(PE)는 PE 입력 버퍼, 복수의 서브 어레이(SA) 및 누적/PE 출력 버퍼를 포함할 수 있다. 서브 어레이(SA)는 시냅스(Synapse) 어레이라 칭할 수 있으며, 복수의 워드 라인들(WL1, WL2, ..., WLN), 복수 의 비트 라인들(BL1, BL2, ..., BLM) 및 복수의 메모리 셀들(MC)을 포함한다. 워드라인(WL1, WL2, ..., WLN) 은 로우라인, 비트 라인들(BL1, BL2, ..., BLM)은 컬럼라인이라 칭할 수 있다. 일 실시예에서, 메모리 셀들 (MC)은 저항성 메모리 소자(RE), 바람직하게는 멤리스터(Memristor) 소자를 포함할 수 있으나 이에 한정되지 않 는다. 메모리 셀(MC)은 복수의 워드 라인들(WL1, WL2, ..., WLN) 또는 복수의 비트 라인들(BL1, BL2, ..., BLM)을 통해 인가되는 기입 전압에 의해 컨덕턴스 즉, 저장되는 데이터 값이 변화하며, 저항성 메모리 셀들은 이러한 저항 변화에 의해 데이터를 저장할 수 있다. 일 실시예에서, 각 저항성 메모리 셀은 PRAM(Phase change Random Access Memory) 셀, RRAM(Resistance Random Access Memory) 셀, MRAM(Magnetic Random Access Memory) 셀, FRAM(Ferroelectric Random Access Memory) 셀 등과 같은 저항성 메모리 셀을 포함하여 구현될 수 있다. 저항성 메모리 셀을 구성하는 저항성 소자는 전류량에 따라 결정 상태가 변화하는 상변화 물질(phase-change material), 페로브스카이트(perovskite) 화합물들, 전이 금속 산화물(transition metal oxide), 자성체 물질 (magnetic materials), 강자성(ferromagnetic) 물질들 또는 반강자성(antiferromagnetic) 물질들을 포함할 수 도 있으나 이에 한정되지 않는다.서브 어레이(SA)의 단위 셀이 멤리스터 소자로 구성됨에 따라, 연산 처리부(PE)는 멤리스터 소자에 가중치 행렬 의 각 원소에 해당하는 데이터를 저장하고, 워드라인들(WL1, WL2, ..., WLN)에 입력 특징맵의 각 원소에 대응하 는 전압들을 인가하여 키르히호프의 법칙, 옴의 법칙을 활용하여 VMM 연산을 수행할 수 있다. 각 비트라인(BL1, BL2, ..., BLM)은 출력 채널로도 지칭될 수 있으며, 통합 및 디지털 변환기(COMB/ADC)에 접속 될 수 있다. 통합 및 디지털 변환기(COMB/ADC)는 비트라인(BL1, BL2, ..., BLM)에 인가된 VMM 연산 결과를 센 싱하여 디지털 값으로 출력할 수 있다. 특히, 음수가 포함된 행렬을 양수 행렬 및 음수 행렬로 분리하여 각기 다른 서브 어레이(SA)에서 연산한 경우, 양수 연산값과 음수 연산값은 각각 통합 및 디지털 변환기(COMB/ADC)에 의해 디지털값으로 변환된 후 디지털 감 산기에 의해 감산함으로써 통합될 수 있다. 구체적으로, 음수 연산값을 2의 보수로 변환하고 음수 연산값과 합 산하여 통합할 수 있다. 다른 실시예에서, 통합 및 디지털 변환기(COMB/ADC)는 양수 연산값과 음수 연산값을 아날로그 감산기에 의해 감 산한 다음 디지털 값으로 변환하는 것도 가능하다. 도 4는 일 실시예에 의한 음수연산 제어부의 구성도이다. 도 4를 참조하면, 음수연산 제어부는 행렬 분리부, 벡터 변환부 및 오프셋 보정부를 포함 할 수 있다. 행렬 분리부는 호스트 장치 또는 연산 메모리의 중간 연산 결과로 생성된 행렬인 제 1 피연산자 가 음수 원소를 포함하는 경우, 행렬을 구성하는 원소를 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값 으로 이루어진 음수 행렬로 구분하여 글로벌 버퍼에 저장할 수 있다. 벡터 변환부는 제 2 피연산자인 벡터에 음수 원소가 포함되어 있는 경우, 벡터의 원소 중 절대값이 최대인 음수 원소를 음수가 아닌 수로 변환시킬 수 있는 오프셋을 결정하고 벡터의 각 원소에 오프셋을 가산하여 오프 셋 벡터를 생성할 수 있다. 오프셋 보정부는 벡터 변환부에서 오프셋이 결정됨에 따라, 양수 행렬과 오프셋의 VMM 연산 결과인 제 1 보정값 및, 음수 행렬과 오프셋의 VMM 연산 결과인 제 2 보정값을 연산하고, 제 1 보정값에서 제 2 보정값 을 차감하여 오프셋 보정값을 도출할 수 있다. 그리고, 연산 메모리에서 양수 행렬과 오프셋 벡터에 의한 양수 연산값 및, 음수 행렬과 오프셋 벡터에 의한 음수 연산값이 통합되어 출력됨에 따라, 통합된 연산 결과로 부터 오프셋 보정값을 차감하여 최종 연산 결과를 산출할 수 있다. 도 5는 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 데이터 처리 시스템의 신경망 프로세서에 제 1 피연산자 및 제 2 피연산자가 제공됨에 따라(S101), 음수연산 제어부는 제 1 피연산자 및/또는 제 2 피연산자에 음수 원소가 포함되어 있는지 확인할 수 있다 (S103). 제 1 피연산자인 행렬에 음수 원소가 포함되어 있는 경우(S103:Y(행렬)), 음수연산 제어부는 행렬을 구성 하는 원소를 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여 글로벌 버퍼에 저장할 수 있다(S105). 글로벌 버퍼에 저장된 양수 행렬과 음수 행렬은 각각 제 1 서브 어레 이 및 제 2 서브 어레이에 분리 저장될 수 있다. 제 2 피연산자인 벡터에 음수 원소가 포함되어 있는 경우(S103:Y(벡터)), 음수연산 제어부는 벡터의 원소 중 절대값이 최대인 음수 원소를 음수가 아닌 수 즉, 0 또는 양수로 변환시킬 수 있는 오프셋을 결정하고 벡터 의 각 원소에 가산하여 오프셋 벡터를 생성할 수 있다(S107). 오프셋 벡터는 양수 행렬 및 음수 행렬이 각각 저장된 제 1 및 제 2 서브 어레이의 로우라인에 인가될 수 있다. 제 1 및 제 2 서브 어레이에 행렬값이 저장되고 로우라인에 오프셋 벡터가 인가됨에 따라, 행렬(컨덕턴스)과 벡 터(전압)의 곱에 해당하는 전류가 컬럼 라인 별로 합산되는 메모리 내 VMM 연산이 수행된다(S109). VMM 연산이 수행 결과로 제 1 서브 어레이로부터 양수 연산값이 출력되고, 제 2 서브 어레이로부터 음수 연산값 이 출력될 수 있다. 행렬에 포함된 음수 원소의 절대값에 대해 VMM 연산이 이루어졌으므로, 양수 연산값에서 음수 연산값을 감산함에 의해 연산 결과를 통합한다(S111). 일 실시예에서, 연산 결과를 통합하기 위하여, 양수 연산값과 음수 연산값을 각각 디지털값으로 변환한 후 디지 털 감산기에 의해 감산할 수 있다. 다른 실시예에서, 연산 결과를 통합하기 위하여, 양수 연산값과 음수 연산 값을 아날로그 감산기에 의해 감산한 후 디지털 값으로 변환할 수 있다. 한편, 벡터에 오프셋을 적용한 오프셋 벡터에 의해 VMM 연산이 수행된 경우, 음수연산 제어부는 오프셋에 따라 VMM 연산 결과를 보정하여 최종 연산 결과를 도출할 수 있다(S113). 예를 들어, 음수연산 제어부는 오프셋과 양수 행렬의 VMM 연산 결과인 제 1 보정값 및, 오프셋과 음수 행렬의 VMM 연산 결과인 제 2 보정값을 연산하고, 제 1 보정값에서 제 2 보정값을 차감함에 의해 오프셋 보정값을 도출할 수 있다. 그리고, 단계 S111 에서 통합한 연산 결과로부터 오프셋 보정값을 차감하여 최종 연산 결과를 획득할 수 있다. 최종 연산 결과는 글로벌 버퍼로 출력될 수 있다(S115). 제 1 피연산자 및 제 2 피연산자 모두 음수 원소를 포함하지 않는 경우(S103:N), 피연산자가 연산 메모리 에 제공되어 VMM 연산이 이루어지고(S117) 글로벌 버퍼로 출력될 수 있다(S115). 도 6 및 일 실시예에 의한 음수를 포함하는 벡터-행렬 곱셈 방법을 설명하기 위한 개념도이다. 도 6에는 설명의 편의를 위하여 피연산자, 중간 연산 결과값 및 최종 연산 결과를 10진수로 나타내었으나, 데이 터 처리 시스템 내에서 실제 연산은 2진수 또는 16진수로 수행됨은 물론이다. 도 6은 (a)와 같은 제 1 피연산자(MAT)와 제 2 피연산자(VEC)에 대한 VMM 연산을 수행하는 과정을 나타낸다. 제 1 피연산자인 행렬(MAT)에 음수 원소가 포함되어 있으므로, 음수연산 제어부는 이를 (b)와 같이 양수 원소로 이루어진 양수 행렬(PMAT)과 음수 원소의 절대값으로 이루어진 음수 행렬(NMAT)로 구분하여 글로벌 버퍼 에 저장할 수 있다. 글로벌 버퍼에 저장된 양수 행렬(PMAT)과 음수 행렬(NMAT)은 각각 제 1 서브 어 레이 및 제 2 서브 어레이에 분리 저장할 수 있다. 제 2 피연산자인 벡터(VEC)에 음수 원소가 포함되어 있는 경우, 음수연산 제어부는 벡터의 원소 중 절대값 이 최대인 음수 원소(-3)를 음수가 아닌 수 즉, 0 또는 양수로 변환시킬 수 있는 오프셋을 결정한다. (b)와 같 이 오프셋(OFS)을 4로 결정할 수 있고, 벡터의 각 원소에 오프셋을 가산하여 오프셋 벡터(OFS_VEC)를 생성할 수 있다. 오프셋 벡터는 양수 행렬 및 음수 행렬이 각각 저장된 제 1 및 제 2 서브 어레이의 로우라인에 인가될 수 있다. 제 1 및 제 2 서브 어레이에 행렬값이 저장되고 로우라인에 오프셋 벡터가 인가됨에 따라, (c)와 같이 행렬(컨 덕턴스)과 벡터(전압)의 곱에 해당하는 전류가 컬럼 라인 별로 합산되는 메모리 내 VMM 연산이 수행된다. (d)는 제 1 서브 어레이로부터 VMM 연산 결과로 출력되는 양수 연산값(PVMM)으로부터 제 2 서브 어레이로부터 VMM 연산 결과로 출력되는 음수 연산값(NVMM)을 감산하여 통합 연산 결과(UVMM)을 도출한 것을 나타낸다. 한편, 벡터(VEC)에 오프셋(OFS)을 부가한 오프셋 벡터(OFS_VEC)에 의해 VMM 연산이 수행되었으므로, 음수연산 제어부는 (e)와 같이 통합 연산 결과(UVMM)로부터 오프셋 보정값(COF)을 차감하여 최종 연산 결과(OUT)를 도출한다. 도 7은 일 실시예에 의한 오프셋 보정값 생성 방법을 설명하기 위한 개념도이다. 오프셋 보정값(COF)을 생성하기 위하여, 음수연산 제어부는 오프셋(OFS)과 양수 행렬(PMAT)의 VMM 연산 결 과인 제 1 보정값(PCOFS) 및, 오프셋(OFS)과 음수 행렬(NMAT)의 VMM 연산 결과인 제 2 보정값(NCOFS)을 연산한 다. 그리고, 제 1 보정값(PCOFS)에서 제 2 보정값(NCOFS)을 차감함에 의해 오프셋 보정값(COFS)을 도출할 수 있다. 그리고, 도 6의 (e)와 같이 통합 연산 결과(UVMM)로부터 오프셋 보정값(COF)을 차감하여 최종 연산 결과 (OUT)를 도출한다. 도 8은 일 실시예에 의한 음수 연산 제어부의 구성도이다. 도 8을 참조하면, 일 실시예에 의한 음수연산 제어부(500-1)는 행렬 분리부, 벡터 변환부, 오프셋 벡 터 분리부 및 오프셋 보정부를 포함할 수 있다. 행렬 분리부는 호스트 장치 또는 연산 메모리의 중간 연산 결과로 생성된 행렬인 제 1 피연산자 가 음수 원소를 포함하는 경우, 행렬을 구성하는 원소를 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값 으로 이루어진 음수 행렬로 구분하여 글로벌 버퍼에 저장할 수 있다. 벡터 변환부는 제 2 피연산자인 벡터에 음수 원소가 포함되어 있는 경우, 벡터의 원소 중 절대값이 최대인 음수 원소를 음수가 아닌 수로 변환시킬 수 있는 오프셋을 결정하고 벡터의 각 원소에 오프셋을 가산하여 오프셋 벡터를 생성할 수 있다. 오프셋 보정부는 벡터 변환부에서 오프셋이 결정됨에 따라, 양수 행렬과 오프셋의 VMM 연산 결과인 제 1 보정값 및, 음수 행렬과 오프셋의 VMM 연산 결과인 제 2 보정값을 연산하고, 제 1 보정값에서 제 2 보정값 을 차감하여 오프셋 보정값을 도출할 수 있다. 그리고, 연산 메모리에서 양수 행렬과 오프셋 벡터에 의한 양수 연산값 및, 음수 행렬과 오프셋 벡터에 의한 음수 연산값이 통합되어 출력됨에 따라, 통합된 연산 결과로 부터 오프셋 보정값을 차감하여 최종 연산 결과를 산출할 수 있다. 오프셋 벡터 분리부는 오프셋 벡터를 구성하는 원소를 자릿값에 따라 1비트 단위로 분리하여, 적어도 하나 의 부분 오프셋 벡터를 포함하는 순차 벡터(VEC_SEQ)를 생성할 수 있다. 부분 오프셋 벡터는 제 1 및 제 2 서브 어레이에 순차적으로 제공되어, 양수 행렬 및 음수 행렬과 각각 VMM 연 산될 수 있다. 도 9는 일 실시예에 의한 연산 처리부의 구성도이다. 도 9를 참조하면, 일 실시예에 의한 연산 처리부(PE)는 1비트 디지털-아날로그 변환기, 제 1 서브 어레이 , 제 2 서브 어레이, 디지털-아날로그 변환기, 자릿값 정렬부, 감산기 및 출력 버퍼 를 포함할 수 있다. 1비트 디지털-아날로그 변환기는 오프셋 벡터 분리부에 의해 생성된 부분 오프셋 벡터를 아날로그값으 로 변환하여 제 1 서브 어레이 및 제 2 서브 어레이 각각의 로우라인에 인가하도록 구성된다. 제 1 서브 어레이에는 양수 행렬이 저장되고, 제 2 서브 어레이에는 음수 행렬이 저장될 수 있다. 제 1 서브 어레이로부터는 차례로 인가되는 부분 오프셋 벡터와 양수 행렬 간의 부분 양수 연산값이 차례 로 출력된다. 제 2 서브 어레이로부터는 차례로 인가되는 부분 오프셋 벡터와 음수 행렬 간의 부분 음수 연산값이 차례로 출력된다. 아날로그-디지털 변환기(ADC, 640)는 제 1 서브 어레이로부터 차례로 출력되는 부분 양수 연산값을 디지털 값으로 변환하는 한편, 제 2 서브 어레이로부터 차례로 출력되는 부분 음수 연산값을 디지털 값으로 변환 할 수 있다. 자릿값 정렬부는 아날로그-디지털 변환기에서 차례로 출력되는 부분 양수 연산값 및 부분 음수 연산 값 각각을 부분 오프셋 벡터의 자릿값에 따라 정렬하고, 자릿값이 정렬된 연산 결과를 합산할 수 있다. 예를 들어, 오프셋 벡터의 각 원소가 X비트(X는 양의 정수)로 이루어진 경우, 오프셋 벡터의 2M 자리(M은 0 또 는 1~X 사이의 양의 정수)에 해당하는 부분 오프셋 벡터에 대한 부분 양수 연산값 및 부분 음수 연산값을 2M 자 릿값으로 변환하고, 자릿값이 정렬된 모든 부분 양수 연산값을 합산하여 양수 연산값을 출력하는 한편, 자릿값 이 정렬된 모든 부분 음수 연산값을 합산하여 음수 연산값을 출력할 수 있다. 감산기는 양수 연산값에서 음수 연산값을 감산하여 출력 버퍼에 저장할 수 있다. 일 실시예에서, 감 산기는 음수 연산값을 2의 보수로 변환하여 음수화하고 양수 연산값과 합산할 수 있다. 도 10은 일 실시예에 의한 오프셋 벡터 제공 방법을 설명하기 위한 개념도이다. 도 6의 (b)와 같이 생성된 오프셋 벡터(OFS_VEC)의 각 원소(7, 1, 5)는 도 10의 (a)와 같이 4비트의 2진수로 표 현될 수 있고, 오프셋 벡터 분리부는 오프셋 벡터(OFS_VEC)를 각 자릿값에 따라 1비트씩 분리하여 순차 벡 터(VEC_SEQ)를 구성한다. 즉, 순차 벡터(VEC_SEQ)는 복수의 부분 오프셋 벡터(SOFS_VEC1, SOFS_VEC2, SOFS_VEC3, SOFS_VEC4)로 구성될 수 있다. 순차 벡터(VEC_SEQ)를 구성하는 부분 오프셋 벡터(SOFS_VEC1, SOFS_VEC2, SOFS_VEC3, SOFS_VEC4)는 양수 행렬 (PMAT) 및 음수 행렬(NMAT)이 각각 저장된 제 1 서브 어레이 및 제 2 서브 어레이에 순차적으로 제공 된다. 자릿값 정렬부는 부분 오프셋 벡터(SOFS_VEC1, SOFS_VEC2, SOFS_VEC3, SOFS_VEC4) 각각과 양수 행렬 간의 부분 양수 연산값 및 부분 오프셋 벡터(SOFS_VEC1, SOFS_VEC2, SOFS_VEC3, SOFS_VEC4) 각각과 음수 행렬 간의 부분 음수 연산값을 부분 오프셋 벡터(SOFS_VEC1, SOFS_VEC2, SOFS_VEC3, SOFS_VEC4)의 자릿값에 따라 정렬할 수 있다.도 10의 (b)와 같이 제 1 시점(t1)에 제 1 부분 오프셋 벡터(SOFS_VEC1)가 제 1 서브 어레이 및 제 2 서 브 어레이의 로우라인에 각각 인가되어 VMM 연산이 수행된다. 제 1 부분 오프셋 벡터(SOFS_VEC1)는 오프 셋 벡터(OFS_VEC)의 23 자리에 해당하므로, 자릿값 정렬부는 제 1 부분 오프셋 벡터(SOFS_VEC1)에 대한 부 분 양수 연산값 및 부분 음수 연산값을 23 자리에 해당하는 값으로 정렬한다. 도 10의 (c)와 같이 제 2 시점(t2)에 제 2 부분 오프셋 벡터(SOFS_VEC2)가 제 1 서브 어레이 및 제 2 서 브 어레이의 로우라인에 각각 인가되어 VMM 연산이 수행된다. 제 2 부분 오프셋 벡터(SOFS_VEC2)는 오프 셋 벡터(OFS_VEC)의 22 자리에 해당하므로, 자릿값 정렬부는 제 2 부분 오프셋 벡터(SOFS_VEC2)에 대한 부 분 양수 연산값 및 부분 음수 연산값을 22 자리에 해당하는 값으로 정렬한다. 도 10의 (d)와 같이 제 3 시점(t3)에 제 3 부분 오프셋 벡터(SOFS_VEC3)가 제 1 서브 어레이 및 제 2 서 브 어레이의 로우라인에 각각 인가되어 VMM 연산이 수행된다. 제 3 부분 오프셋 벡터(SOFS_VEC3)는 오프 셋 벡터(OFS_VEC)의 21 자리에 해당하므로, 자릿값 정렬부는 제 3 부분 오프셋 벡터(SOFS_VEC3)에 대한 부 분 양수 연산값 및 부분 음수 연산값을 21 자리에 해당하는 값으로 정렬한다. 도 10의 (e)와 같이 제 4 시점(t4)에 제 4 부분 오프셋 벡터(SOFS_VEC4)가 제 1 서브 어레이 및 제 2 서 브 어레이의 로우라인에 각각 인가되어 VMM 연산이 수행된다. 제 4 부분 오프셋 벡터(SOFS_VEC4)는 오프 셋 벡터(OFS_VEC)의 20 자리에 해당하므로, 자릿값 정렬부는 제 4 부분 오프셋 벡터(SOFS_VEC4)에 대한 부 분 양수 연산값 및 부분 음수 연산값을 20 자리에 해당하는 값으로 정렬한다. 자릿값이 정렬된 후, 자릿값 정렬부는 양수행렬에 대한 모든 부분 양수 연산값을 합산하여 양수 연산값을 출력하고, 음수 행렬에 대한 모든 부분 음수 연산값을 합산하여 음수 연산값을 출력할 수 있다. 상술하였듯이, 양수 연산값 및 음수 연산값은 통합된 후, 통합된 연산 결과로부터 오프셋 보정값을 차감하여 최 종 연산 결과가 산출될 수 있다. 도 11은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 데이터 처리 시스템의 신경망 프로세서에 제 1 피연산자 및 제 2 피연산자가 제공됨에 따라(S201), 음수연산 제어부는 제 1 피연산자 및/또는 제 2 피연산자에 음수 원소가 포함되어 있는지 확인할 수 있다 (S203). 제 1 피연산자인 행렬에 음수 원소가 포함되어 있는 경우(S203:Y(행렬)), 음수연산 제어부는 행렬을 구성 하는 원소를 양수 원소로 이루어진 양수 행렬과 음수 원소의 절대값으로 이루어진 음수 행렬로 구분하여 글로벌 버퍼에 저장할 수 있다(S205). 글로벌 버퍼에 저장된 양수 행렬과 음수 행렬은 각각 제 1 서브 어레 이 및 제 2 서브 어레이에 분리 저장될 수 있다. 제 2 피연산자인 벡터에 음수 원소가 포함되어 있는 경우(S203:Y(벡터)), 음수연산 제어부는 벡터의 원소 중 절대값이 최대인 음수 원소를 음수가 아닌 수 즉, 0 또는 양수로 변환시킬 수 있는 오프셋을 결정하고 벡터 의 각 원소에 가산하여 오프셋 벡터를 생성할 수 있다(S207). 음수연산 제어부는 오프셋 벡터를 구성하는 원소를 자릿값에 따라 1비트 단위로 분리하여 적어도 하나의 부분 오프셋 벡터로 구성되는 순차 벡터를 생성할 수 있다(S209). 부분 오프셋 벡터는 예를 들어 최상위 비트(Most Significant Bit; MSB)부터 차례로 제 1 및 제 2 서브 어레이 에 순차적으로 제공되어, 양수 행렬 및 음수 행렬과 각각 VMM 연산될 수 있다(S211). 차례로 제공되는 부분 오프셋 벡터가 양수 행렬 및 음수 행렬과 각각 VMM 연산되고 디지털 변환됨에 따라, 자릿 값 정렬부는 차례로 출력되는 부분 양수 연산값 및 부분 음수 연산값을 부분 오프셋 벡터의 자릿값에 따라 정렬한다(S213). 음수연산 제어부는 아직 입력되지 않은 부분 오프셋 벡터가 남아 있는지, 즉 이전 시점에 연산된 부분 오 프셋 벡터가 마지막 부분 오프셋 벡터인지 확인한다(S215). 확인 결과, 마지막 부분 오프셋 벡터에 대한 연산 이 이루어지지 않은 경우(S215:N), 다음 자릿값의 부분 오프셋 벡터를 제 1 서브 어레이 및 제 2 서브 어 레이에 인가하여 메모리 내 연산이 수행되도록 한다(S211). 마지막 부분 오프셋 벡터에 대한 연산값이수행된 경우(S215:Y), 자릿값이 정렬된 부분 양수 연산값을 모두 합산하여 양수 연산값을 도출하고, 자릿값이 정렬된 부분 음수 연산값을 모두 합산하여 음수 연산값을 도출한 후 양수 연산값과 음수 연산값을 통합한다 (S217). 일 실시예에서, 연산 결과를 통합하기 위하여, 양수 연산값과 음수 연산값을 각각 디지털값으로 변환하고 음수 연산값을 2의 보수로 변환한 다음 양수 연산값과 합산할 수 있다. 다른 실시예에서, 연산 결과를 통합하기 위 하여, 양수 연산값과 음수 연산값을 아날로그 감산기에 의해 감산한 후 디지털 값으로 변환할 수 있다. 한편, 벡터에 오프셋을 적용한 오프셋 벡터에 의해 VMM 연산이 수행된 경우, 음수연산 제어부는 오프셋에 따라 VMM 연산 결과를 보정하여 최종 연산 결과를 도출할 수 있다(S219). 예를 들어, 음수연산 제어부는 오프셋과 양수 행렬의 VMM 연산 결과인 제 1 보정값 및, 오프셋과 음수 행렬의 VMM 연산 결과인 제 2 보정값을 연산하고, 제 1 보정값에서 제 2 보정값을 차감함에 의해 오프셋 보정값을 도출할 수 있다. 그리고, 단계 S217 에서 통합한 연산 결과로부터 오프셋 보정값을 차감하여 최종 연산 결과를 획득할 수 있다. 최종 연산 결과는 글로벌 버퍼로 출력될 수 있다(S221). 제 1 피연산자 및 제 2 피연산자 모두 음수 원소를 포함하지 않는 경우(S203:N), 피연산자가 연산 메모리 에 제공되어 VMM 연산이 이루어지고(S223) 글로벌 버퍼로 출력될 수 있다(S221). 저항과 전압으로 아날로그 연산이 수행되는 크로스바 어레이에서, 피연산자인 벡터 또는 행렬이 음수 원소를 포 함하는 경우에도 시스템 복잡도를 증가시키지 않고 간단한 방식으로 음수 연산을 수행할 수 있어, 효율적인 신 경망 연산이 가능하게 된다."}
{"patent_id": "10-2022-0008499", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이와 같이, 본 발명이 속하는 기술분야의 당업자는 본 발명이 그 기술적 사상이나 필수적 특징을 변경하지 않고 서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들 은 모든 면에서 예시적인 것이며 한정적인 것이 아닌 것으로서 이해해야만 한다. 본 발명의 범위는 상기 상세 한 설명보다는 후술하는 특허청구범위에 의하여 나타내어지며, 특허청구범위의 의미 및 범위 그리고 그 등가개 념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석되어야 한다."}
{"patent_id": "10-2022-0008499", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 의한 컴퓨팅 시스템의 구성도이다. 도 2는 일 실시예에 의한 신경망 프로세서의 구성도이다. 도 3은 일 실시예에 의한 연산 메모리의 구성도이다. 도 4는 일 실시예에 의한 음수 연산 제어부의 구성도이다. 도 5는 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다. 도 6은 일 실시예에 의한 음수를 포함하는 벡터-행렬 곱셈 방법을 설명하기 위한 개념도이다. 도 7은 일 실시예에 의한 오프셋 보정값 생성 방법을 설명하기 위한 개념도이다. 도 8은 일 실시예에 의한 음수 연산 제어부의 구성도이다. 도 9는 일 실시예에 의한 연산 처리부의 구성도이다. 도 10은 일 실시예에 의한 오프셋 벡터 제공 방법을 설명하기 위한 개념도이다. 도 11은 일 실시예에 의한 데이터 처리 시스템의 동작 방법을 설명하기 위한 흐름도이다."}
