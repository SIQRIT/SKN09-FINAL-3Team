{"patent_id": "10-2020-0184579", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0093653", "출원번호": "10-2020-0184579", "발명의 명칭": "전자 장치 및 그 제어 방법", "출원인": "삼성전자주식회사", "발명자": "한효정"}}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치의 제어 방법에 있어서,복수의 입력 토큰을 포함하는 제1 언어의 입력 문장을 획득하는 단계;상기 복수의 입력 토큰 중 제1 시점까지 식별된 적어도 하나의 제1 입력 토큰과 상기 적어도 하나의 제1 입력토큰을 번역하여 생성된 적어도 하나의 제1 출력 토큰을 획득하는 단계;상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에입력하여, 상기 복수의 입력 토큰 중 상기 적어도 하나의 제1 입력 토큰을 제외한 적어도 하나의 제2 입력 토큰을 식별하는 제1 동작 및 상기 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나의 제2 출력 토큰을 생성하는 제2 동작 중 상기 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 상기 식별된 동작에 대응되는 토큰의 개수를 획득하는 단계; 및상기 식별된 동작 및 상기 획득된 토큰의 개수를 바탕으로 상기 입력 문장에 대한 번역을 수행하여 상기 제1 언어와 상이한 제2 언어의 출력 문장을 획득하는 단계;를 포함하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1 항에 있어서,상기 제2 동작 및 제2 개수가 식별된 경우, 상기 제2 개수를 바탕으로 입력 토큰을 번역하여 출력 토큰을 생성하도록 학습된 제2 신경망 모델의 파라미터를 업데이트하는 단계;를 더 포함하고,상기 출력 문장을 획득하는 단계는,상기 적어도 하나의 제1 입력 토큰을 상기 제2 신경망 모델에 입력하여 상기 제2 개수의 출력 토큰을 획득하는단계를 포함하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1 항에 있어서,상기 제1 동작 및 제1 개수가 식별된 경우, 상기 적어도 하나의 제2 입력 토큰 중 상기 제1 개수의 제2 입력 토큰을 식별하여 저장하는 단계;를 더 포함하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1 항에 있어서,상기 제1 신경망 모델은, 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 상기 제1 동작 및 상기 제2 동작 중 하나를 식별하도록 학습된 동작 결정 모델, 및 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 토큰의 개수를 획득하도록학습된 토큰 개수 결정 모델을 포함하는제어 방법.공개특허 10-2022-0093653-3-청구항 5 제4 항에 있어서,상기 토큰 개수 결정 모델은,상기 제1 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제1 모델 및 상기 제2 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제2 모델을 포함하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1 항에 있어서,상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 레이블 데이터를 획득하는단계; 및상기 제1 신경망 모델의 출력값과 상기 레이블 데이터의 차이가 기 설정된 값보다 작아지도록 상기 제1 신경망모델을 업데이트하는 단계;를 더 포함하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6 항에 있어서,상기 레이블 데이터를 획득하는 단계는,상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 미리 저장된 신경망 모델에 입력하여 획득된 출력값을 바탕으로 상기 레이블 데이터를 획득하는제어 방법."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "전자 장치에 있어서,복수의 입력 토큰을 포함하는 제1 언어의 입력 문장을 획득하기 위한 입력부;적어도 하나의 인스트럭션을 저장하는 메모리; 및프로세서;를 포함하고,상기 프로세서는,상기 복수의 입력 토큰 중 제1 시점까지 식별된 적어도 하나의 제1 입력 토큰과 상기 적어도 하나의 제1 입력토큰을 번역하여 생성된 적어도 하나의 제1 출력 토큰을 획득하고,상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에입력하여, 상기 복수의 입력 토큰 중 상기 적어도 하나의 제1 입력 토큰을 제외한 적어도 하나의 제2 입력 토큰을 식별하는 제1 동작 및 상기 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나의 제2 출력 토큰을 생성하는 제2 동작 중 상기 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 상기 식별된 동작에 대응되는 토큰의 개수를 획득하고,상기 식별된 동작 및 상기 획득된 토큰의 개수를 바탕으로 상기 입력 문장에 대한 번역을 수행하여 상기 제1 언어와 상이한 제2 언어의 출력 문장을 획득하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제8 항에 있어서,상기 프로세서는,공개특허 10-2022-0093653-4-상기 제2 동작 및 제2 개수가 식별된 경우, 상기 제2 개수를 바탕으로 입력 토큰을 번역하여 출력 토큰을 생성하도록 학습된 제2 신경망 모델의 파라미터를 업데이트하고,상기 적어도 하나의 제1 입력 토큰을 상기 제2 신경망 모델에 입력하여 상기 제2 개수의 출력 토큰을 획득하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제8 항에 있어서,상기 프로세서는,상기 제1 동작 및 제1 개수가 식별된 경우, 상기 적어도 하나의 제2 입력 토큰 중 상기 제1 개수의 제2 입력 토큰을 식별하여 상기 메모리에 저장하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제8 항에 있어서,상기 제1 신경망 모델은, 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 상기 제1 동작 및 상기 제2 동작 중 하나를 식별하도록 학습된 동작 결정 모델, 및 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 토큰의 개수를 획득하도록학습된 토큰 개수 결정 모델을 포함하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11 항에 있어서,상기 토큰 개수 결정 모델은,상기 제1 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제1 모델 및 상기 제2 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제2 모델을 포함하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제8 항에 있어서,상기 프로세서는,상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 바탕으로 레이블 데이터를획득하고,상기 제1 신경망 모델의 출력값과 상기 레이블 데이터의 차이가 기 설정된 값보다 작아지도록 상기 제1 신경망모델을 업데이트하는전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13 항에 있어서,상기 프로세서는,상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 미리 저장된 신경망 모델에 입력하여 획득된 출력값을 바탕으로 상기 레이블 데이터를 획득하는공개특허 10-2022-0093653-5-전자 장치."}
{"patent_id": "10-2020-0184579", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제8 항 내지 제14 항 중에 어느 한 항의 방법을 컴퓨터에서 실행시키기 위한 프로그램을 기록한 컴퓨터로 읽을수 있는 비일시적인(non-transitory) 기록매체."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치가 개시된다. 전자 장치는, 입력부; 메모리; 및 프로세서;를 포함하고, 프로세서는, 복수의 입력 토큰 중 제1 시점까지 식별된 제1 입력 토큰과 제1 입력 토큰을 번역하여 생성된 제1 출력 토큰을 획득하고, 제1 입력 토큰 및 제1 출력 토큰을 학습된 제1 신경망 모델에 입력하여, 제2 입력 토큰을 식별하는 제1 동작 및 제2 출력 토큰을 생성하는 제2 동작 중 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 식별된 동작에 대응되는 토큰의 개수를 획득하고, 식별된 동작 및 획득된 토큰의 개수를 바탕으로 입력 문장에 대한 번역을 수행하여 제1 언어와 상이한 제2 언어의 출력 문장을 획득한다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 전자 장치 및 그 제어 방법으로, 보다 상세하게는, 입력 문장에 대한 기계 번역을 수행하여 출력 문 장을 획득하는 전자 장치 및 그 제어 방법에 관한 것이다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence, AI) 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템이며, 기존 Rule 기반 스마트 시스템과 달리 기계가 스스로 학습하고 판단하며 똑똑해지는 시스템이다. 인공지능 시스템은 사용 할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 Rule 기반 스마트 시스템은 점차 딥러닝 기반 인공지능 시스템으로 대체되고 있다. 최근에는, 인공지능을 이용한 신경망 기계 번역(NMT: Neural Machine Translation)에 대한 연구가 활발히 진행 되고 있다. 특히, 완성된 입력 문장에 대한 번역을 하는 것이 아닌 실시간으로 입력되는 단어(또는 토큰)를 번 역하는 스트리밍 NMT 에 대한 연구가 활발히 진행되고 있다. 한편, 스트리밍 NMT에서는, 입력 토큰을 메모리로 로딩하는 읽기 동작과 로딩된 입력 토큰을 번역하여 출력 토큰을 생성하는 쓰기 동작이 있으며, 시점 별로 읽기 동작 및 쓰기 동작 중 어떤 동작을 수행하느냐에 따라 번역 성능이나 번역 속도가 결정될 수 있다. 따라서, 번역 성능 및 번역 속도를 향상시키기 위해서는, 읽기 동작 및 쓰기 동작 중 어떤 동작을 수행할 지를 결정하는 동작 즉, 의사 결정(decision making) 방법에 대한 기술의 필요성이 대두된다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 일 기술적 과제는, 번역 정확도를 최대화하며 번역 속도를 최소화할 수 있는 기계 번역 모델을 제공하는 것이다. 본 발명의 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급되지 않은 또 다른 기술적"}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "과제들은 아래의 기재로부터 본 발명의 기술분야에서의 통상의 기술자에게 명확하게 이해 될 수 있을 것이다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 기술적 과제를 해결하기 위한 본 개시의 예시적인 일 실시 예에 따르면, 전자 장치의 제어 방법에 있어 서, 복수의 입력 토큰을 포함하는 제1 언어의 입력 문장을 획득하는 단계; 상기 복수의 입력 토큰 중 제1 시점 까지 식별된 적어도 하나의 제1 입력 토큰과 상기 적어도 하나의 제1 입력 토큰을 번역하여 생성된 적어도 하나 의 제1 출력 토큰을 획득하는 단계; 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에 입력하여, 상기 복수의 입력 토큰 중 상기 적어도 하나의 제1 입력 토큰을 제외한 적 어도 하나의 제2 입력 토큰을 식별하는 제1 동작 및 상기 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나 의 제2 출력 토큰을 생성하는 제2 동작 중 상기 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 상기 식별된 동작에 대응되는 토큰의 개수를 획득하는 단계; 및 상기 식별된 동작 및 상기 획득된 토큰의 개수를 바 탕으로 상기 입력 문장에 대한 번역을 수행하여 상기 제1 언어와 상이한 제2 언어의 출력 문장을 획득하는 단계;를 포함하는 제어 방법이 제공될 수 있다. 상술한 기술적 과제를 해결하기 위한 본 개시의 예시적인 다른 일 실시 예에 따르면, 전자 장치에 있어서, 복수 의 입력 토큰을 포함하는 제1 언어의 입력 문장을 획득하기 위한 입력부; 적어도 하나의 인스트럭션을 저장하는 메모리; 및 프로세서;를 포함하고, 상기 프로세서는, 상기 복수의 입력 토큰 중 제1 시점까지 식별된 적어도 하나의 제1 입력 토큰과 상기 적어도 하나의 제1 입력 토큰을 번역하여 생성된 적어도 하나의 제1 출력 토큰을 획 득하고, 상기 적어도 하나의 제1 입력 토큰 및 상기 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에 입력하여, 상기 복수의 입력 토큰 중 상기 적어도 하나의 제1 입력 토큰을 제외한 적어도 하나의 제2 입력 토큰 을 식별하는 제1 동작 및 상기 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나의 제2 출력 토큰을 생성하 는 제2 동작 중 상기 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 상기 식별된 동작에 대응되는 토 큰의 개수를 획득하고, 상기 식별된 동작 및 상기 획득된 토큰의 개수를 바탕으로 상기 입력 문장에 대한 번역 을 수행하여 상기 제1 언어와 상이한 제2 언어의 출력 문장을 획득하는 전자 장치가 제공될 수 있다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 2, "content": "본 개시의 과제의 해결 수단이 상술한 해결 수단들로 제한되는 것은 아니며, 언급되지 아니한 해결 수단들은 본"}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 3, "content": "명세서 및 첨부된 도면으로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "이상과 같은 본 개시의 다양한 실시 예에 따르면, 전자 장치는 번역 성능 및 번역 속도를 최대화하면서 번역된 문장을 생성 및 출력할 수 있다. 이에 따라, 사용자의 만족감 및 편의성이 향상될 수 있다. 그 외에 본 개시의 실시 예로 인하여 얻을 수 있거나 예측되는 효과에 대해서는 본 개시의 실시 예에 대한 상세 한 설명에서 직접적 또는 암시적으로 개시하도록 한다. 예컨대, 본 개시의 실시 예에 따라 예측되는 다양한 효 과에 대해서는 후술될 상세한 설명 내에서 개시될 것이다."}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 본 개시에 대해 구체적으로 설명하기로 한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시의 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는바, 특정 실시 예들을 도 면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하 려는 것이 아니며, 개시된 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이 해되어야 한다. 실시 예들을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 구성요소들은 용어들에 의해 한정되 어서는 안 된다. 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또 는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 아래에서는 첨부한 도면을 참고하여 본 개시의 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식 을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 개시는 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시 예에 한정되지 않는다. 그리고 도면에서 본 개시를 명확하게 설명하기 위해 서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도1 은 간단한 규칙을 기반으로 의사 결정을 수행하는 기존의 기계 번역 모델을 설명하기 위한 도면이다. 소위 wait-k 모델이라 불리는 종래의 동시 기계 번역 모델(Simultaneous Machine Translation Model)은 미리 정 해진 값(k)을 바탕으로 의사 결정을 수행하였다. 본 개시에서, 의사 결정은, 읽기(read) 동작 및 쓰기(write) 동작 중 어떤 동작을 수행할 지를 결정하는 동작을 의미한다. Wait-k 모델은 미리 정해진 값만큼 읽기 동작 을 수행하고 미리 정해진 값만큼 쓰기 동작을 순차적으로 수행하였다. 예를 들어, k가 1인 경우, 도 1에 도시된 바와 같이, wait-k 모델은 제1 입력 토큰(x1)을 읽고 제1 출력 토큰(y1)을 생성하고, 제2 입력 토큰(x2)을 읽고 제2 출력 토큰(y2)을 생성하였다. 이와 같이 Wait-k 모델은 미리 정해진 값을 바탕으로 의사 결정을 수행하므로, 의사 결정을 위한 처리 시간 (또는, 오버헤드)이 상대적으로 작다는 장점을 갖는다. 그러나, wait-k 모델은 입력된 토큰과 기출력된 토 큰을 고려하지 않고 정해진 규칙에 기초하여 출력 토큰을 생성하므로, 번역 성능이 다소 낮다는 단점을 갖는다. 예로, 도 1에서, 제1 입력 토큰(x1) 및 제2 입력 토큰(x2)만을 바탕으로 제2 출력 토큰(y2)을 생성하게 되면 다 소 부정확한 토큰으로 번역될 수 있다. 이러한 단점을 보완하기 위해, 소위 MILK(Monotonic Infinite Lookback)라 지칭되는 기계 번역 모델(이하, MILK 모델이라 함)이 개발되었다. 도 2는 MILK 모델을 설명하기 위한 도면이다. MILK 모델은 새로운 입력 토큰이 획득될 때마다 의사 결정을 수행하여 읽기 동작 및 쓰기 동작 중 어떤 동작을 수행할 지를 결정한다. 이 때, MILK 모델은 지금까지 식별된 입력 토큰 및 생성된 출력 토큰에 대한 정보를 바탕으로 의사 결정을 수 행하므로 wait-k 모델과는 다르게 적응적으로 의사 결정을 수행할 수 있다. 예를 들어, 도 2에 도시된 바와 같이, MILK 모델은 제1 입력 토큰(x1)을 읽고 곧바로 제1 출력 토큰(y1)을 쓰는 것이 아니라, 제1 입력 토 큰(x1)을 읽은 후 제2 입력 토큰(x2)을 추가로 읽고 제1 출력 토큰(y1)을 쓸 수 있다. MILK 모델은 Wait-k 모델과 달리 제2 입력 토큰(x2)까지 읽고 난 후 제1 출력 토큰(y1)을 쓰기 때문에, wait-k 모델에 비해 번역 성능이 뛰어날 수 있다. 그러나, MILK 모델은 새로운 입력 토큰이 획득될 때마다 의사 결정을 수행하고, 다양한 정보(예로, 지금까 지 식별된 입력 토큰 및 생성된 출력 토큰에 대한 정보)를 바탕으로 의사 결정을 수행하므로 wait-k 모델에 비해 번역 시간이 크다는 단점을 갖는다. 또한, MILK 모델은 회귀적 번역 모델(Autoregressive Translation Model)로서, 읽기 동작 또는 쓰기 동작을 수행할 때, 하나의 타임 스텝(time step)에 하나의 토큰 씩만 읽거나 쓸 수 있으며, 하나의 동작이 완료되면 다시 의사 결정을 수행하기 때문에 전체 번역 시간이 크다 는 단점을 갖는다. 예로, 도 2를 참조하면, MILK 모델은 하나의 타임 스텝에 제2 출력 토큰(y2), 제3 출력 토큰(y3), 제4 출력 토큰(y4) 및 제5 출력 토큰(y5)을 동시에 생성할 수 없으며, 하나의 토큰이 생성되면 또다 시 의사 결정을 수행한 후에야 다음 출력 토큰을 생성할 수 있다. 본 개시에 따른 번역 모델은 상술한 종래의 번역 모델의 단점을 보완한 것으로 wait-k 모델에 비해 번역 정 확도가 우수하며, MILK 모델에 비해 번역 속도가 빠를 수 있다. 이하 본 개시에 따른 번역 모델에 대해 설 명하도록 한다. 도 3은 본 개시의 일 실시 예에 따른 번역 모델을 설명하기 위한 도면이다. 번역 모델은 의사 결정 시, 읽 기 동작 및 쓰기 동작 중 어떤 동작을 수행할 지를 결정하는 것뿐만 아니라, 결정된 동작에 대응되는 토큰의 개 수를 획득할 수 있다. 여기서, 읽기 동작이 식별된 경우 결정된 동작에 대응되는 토큰의 개수는, 현재 시점에서 식별해야 할(또는 읽어야 할) 입력 토큰의 개수를 의미한다. 또한, 쓰기 동작이 식별된 경우 결정된 동작에 대응되는 토큰의 개수는, 현재 시점에서 생성해야 할 출력 토큰의 개수를 의미한다. 예를 들어, 번역 모델은 제1 출력 토큰(y1)을 생성한 후 의사 결정을 수행하여 읽기 동작을 식별하고 읽기 동작에 대응되는 토큰의 개수(예로, 3)를 획득할 수 있다. 이 때, 번역 모델은 제3 입력 토큰(x3), 제4 입 력 토큰(x4) 및 제5 입력 토큰(x5)을 식별할 수 있다. 이 과정에서, 번역 모델은 추가적인 의사 결정을 수 행할 필요가 없다. 즉, MILK 모델과 달리 제3 입력 토큰(x3)을 읽은 후 의사 결정 없이 곧바로 제4 입력 토 큰(x4)을 읽을 수 있다. 또한, 번역 모델은 제5 입력 토큰(x5)을 읽은 후 의사 결정을 수행하여 쓰기 동작을 식별하고 쓰기 동작에 대응되는 토큰의 개수(예로, 4)를 획득할 수 있다. 이 때, 번역 모델은 제1 입력 토큰 내지 제5 입력 토큰 (x1 내지 x5)을 바탕으로 제2 출력 토큰(y2), 제3 출력 토큰(y3), 제4 출력 토큰(y4) 및 제5 출력 토큰(y5)을 생성할 수 있다. 이 과정에서, 번역 모델은 추가적인 의사 결정 없이 하나의 타임 스텝에서 4개의 출력 토 큰을 생성할 수 있다. 번역 모델은 MILK 모델 모델과 달리 하나의 타임 스텝에 여러 개의 출력 토큰을 생성할 수 있다. 이와 같이, 번역 모델은 의사 결정을 통해 현재 시점에서 수행할 동작뿐만 아니라 수행할 동작에 대응되는 토큰의 개수까지 획득할 수 있다. 따라서, 번역 모델은 종래의 번역 모델에 비해 의사 결정의 빈도가 낮아 번역 속도가 빠르다는 이점을 갖는다. 이하에서는, 번역 모델이 의사 결정을 수행하는 방법에 대해 설명하 도록 한다. 도 4a 및 도 4b는 본 개시의 일 실시 예에 따른 번역 모델의 의사 결정 방법을 설명하기 위한 도면이다. 번역 모델은 제1 신경망 모델을 이용하여 의사 결정을 수행할 수 있다. 예를 들어, 번역 모델은 현재 시 점( ) 전까지 식별된(또는 읽혀진) 입력 토큰과 생성된 출력 토큰을 제1 신경망 모델에 입력하여 현재 시점 ( )에서 수행할 동작과 수행할 동작에 대응되는 토큰의 개수를 획득할 수 있다. 제1 신경망 모델은 동작 결 정 모델 및 토큰 개수 결정 모델을 포함할 수 있다. 동작 결정 모델은 현재 시점( )에서 수행할 동작을 출력하도록 학습될 수 있다. 예를 들어, 동작 결정 모델은 현재 시점( ) 전까지 식별된 입력 토큰과 생성된 출력 토큰을 바탕으로 읽기 동작 및 쓰기 동작 중 적어도 하나에 대응되는 값을 출력하도록 학습될 수 있다. 또한, 토큰 개수 결정 모델은 현재 시점( ) 전까지 식별된 입력 토큰과 생성된 출력 토큰을 바탕으로 토큰 의 개수를 출력하도록 학습될 수 있다. 번역 모델은 동작 결정 모델의 출력값을 바탕으로 현재 시점 ( )에서 수행할 동작을 식별하며, 토큰 개수 결정 모델의 출력값을 바탕으로 토큰의 개수를 획득할 수 있다. 한편, 토큰 개수 결정 모델은 읽기 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제1 모델과 쓰 기 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제2 모델을 포함할 수 있다. 이 때, 번역 모델은 동 작 결정 모델의 출력값을 바탕으로 식별된 동작에 대응되는 모델을 식별하고, 식별된 모델의 출력값을 식별 된 동작에 대응되는 토큰의 개수로 획득할 수 있다. 한편, 도 4a에서는 동작 결정 모델 및 토큰 개수 결정 모델이 각각 존재하는 것으로 도시하였으나 이는 일 실시 예에 불과할 뿐, 동작 결정 모델 및 토큰 개수 결정 모델은 하나의 모델로 통합될 수 있다. 예 로, 도 4b를 참조하면, 제1 신경망 모델은 각 동작에 대한 토큰의 개수를 출력할 수 있다. 구체적으로, 제1 신경망 모델이 (3, 0)을 출력한 경우, 번역 모델은 현재 시점( )에서 3개의 입력 토큰을 읽을 수 있다. 이와 같이, 의사 결정이 완료되면, 번역 모델은 의사 결정 결과를 바탕으로 동작을 수행할 수 있다. 도 5a 는 본 개시의 일 실시 예에 따른 읽기 동작을 설명하기 위한 도면이다. 번역 모델은 현재 시점( ) 전까지 제1 입력 토큰(x1) 및 제2 입력 토큰(x2)을 식별하여 메모리에 로딩할 수 있다. 그리고, 번역 모델은 제1 신경망 모델을 이용하여 읽기 동작을 식별하고, 토큰의 개수(즉, 3)를 획득할 수 있다. 이 때, 번역 모델 은 입력 문장에 포함된 토큰 중 아직 식별되지 않은 3개의 입력 토큰 즉, 제3 입력 토큰(x3), 제4 입력 토 큰(x4) 및 제5 입력 토큰(x5)을 식별하여 메모리에 로딩할 수 있다. 도 5b는 본 개시의 일 실시 예에 따른 쓰기 동작을 설명하기 위한 도면이다. 번역 모델은 제2 신경망 모델 을 이용하여 출력 토큰을 생성할 수 있다. 예를 들어, 번역 모델은 제2 신경망 모델에 현재 시점( )까지 식별된 입력 토큰(x1, x2, x3, x4, x5)을 입력하여 출력 토큰(y2, y3, y4, y5)을 획득할 수 있다. 이 때, 제2 신경망 모델은 출력 토큰의 개수에 대한 파라미터를 포함할 수 있다. 번역 모델은 제1 신경망 모델을 바탕으로 획득된 토큰의 개수(예로, 4)를 바탕으로 토큰의 개수에 대한 파라미터를 설정 또는 업데 이트할 수 있다. 한편, 제1 신경망 모델의 출력 값은 다양한 방법으로 제2 신경망 모델에 반영될 수 있으며, 제2 신경망 모델은 제1 신경망 모델의 출력 값인 토큰의 개수만큼의 출력 토큰을 출력할 수 있다. 일 예로, 제1 신 경망 모델에 의해 출력된 토큰의 개수는 제2 신경망 모델에 입력될 수 있다. 즉, 번역 모델은 현재 시점( )까지 식별된 입력 토큰(x1, x2, x3, x4, x5)과 함께 제1 신경망 모델에 의해 출력된 토큰의 개수를 제2 신경망 모델에 입력하여, 입력된 토큰의 개수만큼의 출력 토큰을 획득할 수 있다. 한편, 도 4a에서는, 제1 신경망 모델에 의해 현재 시점에서 수행되어야 할 동작에 대한 정보와 토큰의 개수 가 출력되는 것으로 설명하였으나, 이는 일 실시 예에 불과하며, 제1 신경망 모델은 현재 시점에서 수행되 어야 할 동작에 대한 정보만을 출력할 수 있다. 이 때, 토큰의 개수는 제2 신경망 모델 내부에서 산출될 수 있으며, 제2 신경망 모델은 산출된 토큰의 개수, 현재 시점 전까지 식별된 입력 토큰 및 생성된 출력 토큰 을 바탕으로 산출된 토큰의 개수만큼의 출력 토큰을 출력할 수 있다. 또한, 제2 신경망 모델은 제1 신경망 모델과 통합되어 하나의 모델로 구현될 수 있다. 예를 들어, 제2 신경망 모델은 제1 신경망 모델을 포함할 수 있다. 이 때, 제2 신경망 모델은 현재 시점 전까지 식 별된 입력 토큰 및 생성된 출력 토큰을 입력 받아 현재 시점에서 수행되어야 할 동작과 토큰의 개수를 산출하고, 산출된 토큰의 개수만큼의 출력 토큰을 출력할 수 있다. 한편, 제2 신경망 모델은 인코더 및 디코더를 포함할 수 있다. 인코더 및 디코더 각각은 어텐션 레이어 (attention layer) 및 순방향 네트워크(Feed-Forward Network, FNN)를 포함할 수 있다. 제2 신경망 모델은 종래의 신경망 기계 번역 기술을 적용하여 구현될 수 있는 바, 그 상세한 구성에 대한 설명은 생략하도록 한다. 한편, 본 개시에 따른 번역 모델은 소위 비-회귀적 번역 모델(Non-Autoregressive Translation Model)로 구현될 수 있다. 이 때, 번역 모델은 하나의 타임 스텝에서 여러 개의 출력 토큰을 생성할 수 있다. 반면에, 도 2에 도시된 바와 같이 회귀적 번역 모델(Autoregressive Translation Model)은 하나의 타임 스텝에 하나의 출력 토큰만 생성할 수 있다. 따라서, 본 개시에 따른 번역 모델의 번역 처리 시간은 기존의 회귀적 번역 모델(Autoregressive Translation Model)(예로, MILK 모델)에 비해 작을 수 있다. 도 6a는 본 개시의 일 실시 예에 따른 제1 신경망 모델의 학습 방법을 설명하기 위한 도면이다. 제1 신경망 모 델은 제1 시점까지 식별된 입력 토큰과 생성된 출력 토큰을 바탕으로 제1 시점 이후인 제2 시점에서 수행할 동작과 동작에 대응되는 토큰의 개수를 출력하도록 학습될 수 있다. 이 때, 제1 신경망 모델에 포함된 가중 치들은 제1 신경망 모델의 출력값과 레이블의 차이가 기 설정된 값보다 작아지도록 업데이트될 수 있다. 한편, 레이블은 다양한 방법으로 획득될 수 있다. 일 예로, 읽기 동작에 대응되는 레이블( )은 아래의 [수학식 1]을 바탕으로 획득되며, 쓰기 동작에 대응되는 레이블( )은 아래의 [수학식 2]를 바탕으로 획득 될 수 있다. [수학식 1]"}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "[수학식 2]"}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "[수학식 1] 및 [수학식 2]에서, j는 입력 토큰에 대한 타임 스텝, i는 출력 토큰에 대한 타임 스텝을 의미한다. 또한, 는 특정 시점에서 출력 토큰을 생성할 확률에 대한 기대 값을 의미하며, 입력 토큰 및 출력 토큰을 바탕 으로 산출될 수 있다. 도 6b를 참조하면, 입력 토큰 및 출력 토큰은 매트릭스 형태로 표현될 수 있으며, 각각의입력 토큰 및 출력 토큰의 위치에 대응되는 가 산출될 수 있다. 예로, 은 제1 입력 토큰(x1)을 읽은 상태 에서 제1 출력 토큰(y1)을 생성할 확률의 기대 값을 의미한다. 다른 예로, 는 제1 입력 토큰(x1) 및 제2 입 력 토큰(x2)을 읽은 상태에서 제1 출력 토큰(y1)을 생성할 확률의 기대 값을 의미한다. 다른 일 예로, 읽기 동작 및 쓰기 동작 각각에 대응되는 레이블은 기 학습된 번역 모델을 바탕으로 획득될 수도 있다. 예를 들어, 도 2를 다시 참조하면, MILK 모델이 수행한 읽기 동작 및 쓰기 동작에 대한 경로를 바탕 으로 레이블이 획득될 수 있다. 구체적으로, 제3 입력 토큰(x3), 제4 입력 토큰(x4) 및 제5 입력 토큰(x5)이 연 속적으로 식별된 정보를 바탕으로, 레이블(즉, )이 획득될 수 있다. 도 7은 본 개시의 일 실시 예에 따른 전자 장치의 구성을 도시한 블록도이다. 전자 장치는 입력부, 통신 인터페이스, 출력부, 메모리 및 프로세서를 포함할 수 있다. 예로, 전자 장치는 스마트 폰일 수 있으나, 이에 한정되는 것은 아니며, 태블릿 PC 및 웨어러블 장치를 비롯한 다양한 장치로 구현 될 수 있다. 입력부는 사용자가 전자 장치를 제어하기 위한 데이터를 입력하는 수단을 의미한다. 입력부는 번역의 대상이 되는 문장을 입력하는 사용자의 입력을 획득할 수 있다. 예를 들어, 입력부에는 키 패드 (key pad), 돔 스위치 (dome switch), 터치 패드(접촉식 정전 용량 방식, 압력식 저항막 방식, 적외선 감지 방 식, 표면 초음파 전도 방식, 적분식 장력 측정 방식, 피에조 효과 방식 등), 조그 휠, 조그 스위치 등이 있을 수 있으나 이에 한정되는 것은 아니다. 프로세서는 입력부를 통해 사용자가 입력하는 적어도 하나의 문장에 대응되는 텍스트를 획득할 수 있다. 입력부는 마이크를 포함할 수 있다. 이 때, 프로세서는 입력부를 통해 획득되는 사용자의 음성 신호를 획득하고, 음성 신호에 대응되는 텍스트를 획득할 수 있다. 통신 인터페이스는 적어도 하나의 회로를 포함하며 다양한 유형의 통신 방식에 다라 다양한 유형의 외부 기기와 통신을 수행할 수 있다. 통신 인터페이스는 무선 혹은 유선으로 데이터 통신을 수행할 수 있다. 무 선 통신 방식으로 외부 기기와 통신을 수행할 경우, 통신 인터페이스는 와이파이 통신 모듈, 셀룰러 통신 모듈, 3G(3세대) 이동통신 모듈, 4G(4세대) 이동통신 모듈, 4세대 LTE(Long Term Evolution) 통신 모듈, 5G(5 세대) 이동통신 모듈 중 적어도 하나를 포함할 수 있다. 한편, 본 개시의 일 실시 예에 따른, 통신 인터페이스 는 무선 통신 모듈로 구현될 수 있으나, 이는 일 실시 예에 불과할 뿐, 유선 통신 모듈(예를 들어, LAN 등)로 구현될 수 있다. 출력부는 전자 장치를 통해 획득된 번역된 문장을 출력하여 사용자에게 제공하기 위한 구성이다. 예 로, 출력부는 디스플레이 및 스피커를 포함할 수 있다. 출력부가 디스플레이인 경우, 출력부는 번역된 문장(또는 출력 문장)을 디스플레이할 수 있다. 출력부가 스피커인 경우, 출력부는 번역된 문 장에 대응되는 음성 신호를 출력할 수 있다. 메모리는 전자 장치의 구성요소들의 전반적인 동작을 제어하기 위한 운영체제(OS: Operating System) 및 전자 장치의 구성요소와 관련된 명령 또는 데이터를 저장할 수 있다. 이를 위해 메모리는 비휘발 성 메모리(ex: 하드 디스크, SSD(Solid state drive), 플래시 메모리), 휘발성 메모리 등으로 구현될 수 있다. 메모리는 입력 문장을 번역하기 위한 번역 모델을 저장할 수 있다. 프로세서는 전자 장치의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로세서는 복수의 입력 토큰을 포함하는 제1 언어의 입력 문장을 획득할 수 있다. 프로세서는 복수의 입력 토큰 중 제1 시점까지 식별된 적어도 하나의 제1 입력 토큰과 적어도 하나의 제1 입력 토큰을 번역하여 생성된 적어도 하나의 제1 출력 토큰을 획득할 수 있다. 프로세서는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에 입 력하여, 제1 동작 및 제2 동작 중 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 식별된 동작에 대응 되는 토큰의 개수를 획득할 수 있다. 여기서, 제1 동작(또는 읽기 동작)은 복수의 입력 토큰 중 적어도 하나의 제1 입력 토큰을 제외한 적어도 하나의 제2 입력 토큰을 식별하는 동작을 의미한다. 또한, 제2 동작(또는 쓰기 동작)은 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나의 제2 출력 토큰을 생성하는 동작을 의미한다. 한편, 프로세서는 식별된 동작 및 획득된 토큰의 개수를 바탕으로 입력 문장에 대한 번역을 수행하여 제1 언어와 상이한 제2 언어의 출력 문장을 획득할 수 있다. 일 예로, 제1 동작 및 제1 개수가 식별된 경우, 프로세 서는 적어도 하나의 제2 입력 토큰 중 제1 개수의 제2 입력 토큰을 식별하여 메모리에 저장할 수 있 다. 다른 일 예로, 제2 동작 및 제2 개수가 식별된 경우, 프로세서는 제2 개수를 바탕으로 입력 토큰을 번 역하여 출력 토큰을 생성하도록 학습된 제2 신경망 모델의 파라미터를 업데이트할 수 있다. 그리고, 프로세서 는 적어도 하나의 제1 입력 토큰을 제2 신경망 모델에 입력하여 제2 개수의 출력 토큰을 획득할 수 있다. 한편, 제1 신경망 모델은 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 제1 동작 및 상기 제2 동작 중 하나를 식별하도록 학습된 동작 결정 모델을 포함할 수 있다. 또한, 제1 신경망 모델은 적 어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 토큰의 개수를 획득하도록 학습된 토큰 개수 결정 모델을 포함할 수 있다. 토큰 개수 결정 모델은, 제1 동작에 대응되는 토큰의 개수를 출력하도록 학 습된 제1 모델 및 제2 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제2 모델을 포함할 수 있다. 한편, 프로세서는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 레이블 데이 터를 획득할 수 있다. 그리고, 프로세서는 제1 신경망 모델의 출력 값과 레이블 데이터의 차이가 기 설정 된 값보다 작아지도록 제1 신경망 모델을 업데이트할 수 있다. 또한, 프로세서는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 미리 저장된 신경망 모델에 입력하여 획득된 출력값을 바탕으로 레이블 데이터를 획득할 수 있다. 한편, 본 개시에 따른 인공지능과 관련된 기능은 프로세서와 메모리를 통해 동작된다. 프로세서(75 0)는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU, AP, DSP(Digital Signal Processor) 등과 같은 범용 프로세서, GPU, VPU(Vision Processing Unit)와 같은 그래픽 전용 프로세서 또는 NPU와 같은 인공지능 전용 프로세서일 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기 정의된 동작 규칙 또는 인공지능 모델에 따라, 입력 데이터를 처리하도록 제어한다. 또는, 하나 또는 복수의 프 로세서가 인공지능 전용 프로세서인 경우, 인공지능 전용 프로세서는, 특정 인공지능 모델의 처리에 특화된 하 드웨어 구조로 설계될 수 있다. 기 정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만 들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로 써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미 한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버 및/ 또는 시스템을 통해 이루어 질 수도 있다. 학습 알고리즘의 예로는, 지도형 학습(supervised learning), 비지도 형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또는 강화 학습(reinforcement learning)이 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 학습을 통해 만들어 질 수 있다. 여기서, 학습을 통해 만들어진다는 것은, 기본 인공지능 모델 이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로써, 원하는 특성(또는, 목적)을 수행하 도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 복수의 신경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 복수의 신경 망 레이어들이 갖고 있는 복수의 가중치들은 인공지능 모델의 학습 결과에 의해 최적화될 수 있다. 예를 들어, 학습 과정 동안 인공지능 모델에서 획득한 로스(loss) 값 또는 코스트(cost) 값이 감소 또는 최소화되도록 복수 의 가중치들이 갱신될 수 있다. 본 개시에 따른 전자 장치는 입력 문장에 대한 기계 번역을 수행하여 출력 문장을 획득할 수 있다. 예로, 전자 장치는 마이크를 통해 아날로그 신호인 음성 신호를 수신하고, ASR(Automatic Speech Recognition) 모델을 이용하여 음성 부분을 컴퓨터로 판독 가능한 텍스트로 변환할 수 있다. 자연어 이해(Natural Language Understanding, NLU) 모델을 이용하여 변환된 텍스트를 해석하여, 사용자의 발화 의도를 획득할 수 있다. 여기 서 ASR 모델 또는 NLU 모델은 인공지능 모델일 수 있다. 인공지능 모델은 인공지능 모델의 처리에 특화된 하드 웨어 구조로 설계된 인공지능 전용 프로세서에 의해 처리될 수 있다. 인공지능 모델은 학습을 통해 만들어 질 수 있다. 여기서, 학습을 통해 만들어진다는 것은, 기본 인공지능 모델이 학습 알고리즘에 의하여 다수의 학습 데이터들을 이용하여 학습됨으로써, 원하는 특성(또는, 목적)을 수행하도록 설정된 기 정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 복수의 신 경망 레이어들 각각은 복수의 가중치들(weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 복수의 가중치들 간의 연산을 통해 신경망 연산을 수행한다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리하는 기술로서, 자연어 처리(Natural Language Processing), 기계 번역(Machine Translation), 대화 시스템(Dialog System), 질의 응답(Question Answering), 음성 인식/합성(Speech Recognition/Synthesis) 등을 포함한다. 인공 신경망은 심층 신경망(DNN:Deep Neural Network)를 포함할 수 있으며, 예를 들어, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), GAN (Generative Adversarial Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 또는 심층 Q-네트워크 (Deep Q-Networks) 등이 있으나, 전술한 예에 한정되지 않는다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 도시한 순서도이다. 전자 장치는 복수의 입 력 토큰을 포함하는 제1 언어의 입력 문장을 획득할 수 있다(S810). 전자 장치는 복수의 입력 토큰 중 제 1 시점까지 식별된 적어도 하나의 제1 입력 토큰과 적어도 하나의 제1 입력 토큰을 번역하여 생성된 적어도 하 나의 제1 출력 토큰을 획득할 수 있다. 여기서, 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰은 메모리에 저장되어 있을 수 있다. 전자 장치는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 학습된 제1 신경망 모델에 입력하여, 복수의 입력 토큰 중 적어도 하나의 제1 입력 토큰을 제외한 적어도 하나의 제2 입력 토큰을 식별하 는 제1 동작 및 적어도 하나의 제1 입력 토큰을 바탕으로 적어도 하나의 제2 출력 토큰을 생성하는 제2 동작 중 제1 시점의 이후인 제2 시점에서 수행할 동작을 식별하고 식별된 동작에 대응되는 토큰의 개수를 획득할 수 있 다(S830). 일 예로, 제1 동작 및 제1 개수가 식별된 경우, 전자 장치는 적어도 하나의 제2 입력 토큰 중 제1 개수의 제2 입력 토큰을 식별하여 메모리에 저장할 수 있다. 다른 일 예로, 제2 동작 및 제2 개수가 식별된 경우, 전자 장치는 제2 개수를 바탕으로 입력 토큰을 번역하여 출력 토큰을 생성하도록 학습된 제2 신경망 모델의 파라미터를 업데이트할 수 있다. 전자 장치는 식별된 동작 및 획득된 토큰의 개수를 바탕으로 입력 문장에 대한 번역을 수행하여 제1 언어 와 상이한 제2 언어의 출력 문장을 획득할 수 있다(S840). 전자 장치는 적어도 하나의 제1 입력 토큰을 제 2 신경망 모델에 입력하여 출력 토큰을 획득할 수 있다. 또한, 제2 입력 토큰을 식별된 후 제2 동작이 식별된 경우, 전자 장치는 제1 입력 토큰 및 제2 입력 토큰을 제2 신경망 모델에 입력하여 출력 토큰을 획득할 수 있다. 이 때, 제2 개수가 식별된 경우, 전자 장치는 제2 개수의 제2 출력 토큰을 획득할 수 있다. 한편, 제1 신경망 모델은 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 제1 동작 및 상기 제2 동작 중 하나를 식별하도록 학습된 동작 결정 모델을 포함할 수 있다. 또한, 제1 신경망 모델은 적 어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 토큰의 개수를 획득하도록 학습된 토큰 개수 결정 모델을 포함할 수 있다. 토큰 개수 결정 모델은, 제1 동작에 대응되는 토큰의 개수를 출력하도록 학 습된 제1 모델 및 제2 동작에 대응되는 토큰의 개수를 출력하도록 학습된 제2 모델을 포함할 수 있다. 한편, 전자 장치는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 바탕으로 레이블 데이 터를 획득할 수 있다. 그리고, 전자 장치는 제1 신경망 모델의 출력 값과 레이블 데이터의 차이가 기 설정 된 값보다 작아지도록 제1 신경망 모델을 업데이트할 수 있다. 또한, 전자 장치는 적어도 하나의 제1 입력 토큰 및 적어도 하나의 제1 출력 토큰을 미리 저장된 신경망 모델에 입력하여 획득된 출력값을 바탕으로 레이블 데이터를 획득할 수 있다. 한편, 이상에서 설명된 다양한 실시 예들은 소프트웨어(software), 하드웨어(hardware) 또는 이들의 조합을 이 용하여 컴퓨터(computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 일부 경우 에 있어 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨어 모듈들로 구현될 수 있다. 소프트 웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 작동을 수행할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 처리 동작을 수행하기 위한 컴퓨터 명령어(computer instructions)는 비일시적 컴퓨터 판독 가능 매체(non-transitory computer-readable medium) 에 저장될 수 있 다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어는 프로세서에 의해 실행되었을 때 상술한 다양한 실시 예에 따른 처리 동작을 특정 기기가 수행하도록 할 수 있다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체 가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 비일시적컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등 이 있을 수 있다. 한편, 기기로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, ‘비일시적 저장매체'는 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구 분하지 않는다. 예로, '비일시적 저장매체'는 데이터가 임시적으로 저장되는 버퍼를 포함할 수 있다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두개의 사용자 장치들(예: 스 마트폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품(예: 다운로더블 앱(downloadable app))의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2020-0184579", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술적 사상이나 전망으로부터 개별적으로 이해되어져서는 안될 것이다."}
{"patent_id": "10-2020-0184579", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 종래의 번역 모델을 설명하기 위한 도면이다. 도 2는 다른 종래의 번역 모델을 설명하기 위한 도면이다. 도 3은 본 개시의 일 실시 예에 따른 번역 모델을 설명하기 위한 도면이다. 도 4a는 본 개시의 일 실시 예에 따른 번역 모델의 의사 결정 방법을 설명하기 위한 도면이다. 도 4b 본 개시의 다른 일 실시 예에 따른 번역 모델의 의사 결정 방법을 설명하기 위한 도면이다. 도 5a는 본 개시의 일 실시 예에 따른 읽기 동작을 설명하기 위한 도면이다. 도 5b는 본 개시의 일 실시 예에 따른 쓰기 동작을 설명하기 위한 도면이다. 도 6a는 본 개시의 일 실시 예에 따른 제1 신경망 모델의 학습 방법을 설명하기 위한 도면이다. 도 6b는 본 개시의 일 실시 예에 따른 학습 데이터를 획득하는 방법을 설명하기 위한 도면이다. 도 7은 본 개시의 일 실시 예에 따른 전자 장치의 구성을 도시한 블록도이다. 도 8은 본 개시의 일 실시 예에 따른 전자 장치의 제어 방법을 도시한 순서도이다."}
