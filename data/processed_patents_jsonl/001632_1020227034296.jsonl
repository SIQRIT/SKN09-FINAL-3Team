{"patent_id": "10-2022-7034296", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0140869", "출원번호": "10-2022-7034296", "발명의 명칭": "마이크로서비스 구성 방법, 장치, 전자 기기, 시스템 및 저장 매체", "출원인": "베이징 바이두 넷컴 사이언스 테크놀로지 컴퍼니", "발명자": "류 차오"}}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법으로서,메인 클러스터로부터 구성 데이터를 수신하고, 또한 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로결정한 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 상기 메인 클러스터로부터 서비스 데이터를 수신하는 단계; 및상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 단계는,필요한 서비스 데이터를 결정하는 단계;상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 상기 필요한 서비스 데이터와 비교하여, 비교결과를 획득하는 단계; 및상기 비교결과가 소정의 조건에 부합되는 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 방식은,상기 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링하는 단계; 및전후 2회의 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 상기 메인 클러스터 중의 서비스 데이터가변경된 것으로 결정하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계는,상기 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정하는 단계;상기 구성 데이터를 이용하여 상기 서비스 인스턴스의 파라미터를 결정하는 단계; 및상기 각 마이크로서비스 프로그램의 서비스 인스턴스 및 상기 서비스 인스턴스의 파라미터에 따라, 상기 각 마이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중 어느 한 항에 있어서,상기 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며, 각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일한 마이크로서비스 구성 방법.공개특허 10-2022-0140869-2-청구항 6 메인 클러스터에 응용되는 마이크로서비스 구성 방법으로서,구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 단계; 및적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계는,수신된 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응처리 결과를 획득하는 단계;상기 적응 처리 결과에 따라, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하는 단계; 및상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계; 를포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 단계는,수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득하는 단계;비교결과가 상기 수신된 구성 데이터와 상기 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 상기이미 저장된 구성 데이터를 상기 수신된 구성 데이터로 업데이트하는 단계; 및상기 수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 상기 변경된 구성 데이터를 송신하는 단계; 를 포함하는 마이크로서비스 구성 방법."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "메인 클러스터로부터 구성 데이터를 수신하는 제어 평면 컴포넌트;상기 메인 클러스터 중의 서비스 데이터가 변경된 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 상기 메인 클러스터로부터 서비스 데이터를 수신하는 데이터 평면 컴포넌트; 를 포함하며,상기 데이터 평면 컴포넌트는 또한 상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를실행하는 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며,상기 사이드카 컴포넌트는,필요한 서비스 데이터를 결정하는 서비스 데이터 결정 유닛;상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 상기 필요한 서비스 데이터와 비교하여, 비교결과를 획득하는 서비스 데이터 비교 유닛; 및상기 비교결과가 소정의 조건에 부합되는 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 서비스 데이터 획득 요청 송신 유닛; 을 더 포함하는 마이크로서비스 구성 장치.공개특허 10-2022-0140869-3-청구항 11 제10항에 있어서,상기 서비스 데이터 비교 유닛은 구체적으로,상기 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링하고;전후 2회 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 것인 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며,상기 사이드카 컴포넌트는,상기 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정하는 서비스 인스턴스 결정 유닛;상기 구성 데이터를 이용하여 상기 서비스 인스턴스의 파라미터를 결정하는 파라미터 결정 유닛; 및상기 각 마이크로서비스 프로그램의 서비스 인스턴스 및 상기 서비스 인스턴스의 파라미터에 따라, 상기 각 마이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행하는 서비스 거버넌스 태스크 실행 유닛; 을 더포함하는 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제9항에 있어서,상기 마이크로서비스 구성 장치는 트랜잭션 클러스터이고,상기 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며,각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일한 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 구성 센터 컴포넌트; 및적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 레지스트리 컴포넌트; 를 포함하는 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 레지스트리 컴포넌트는,수신된 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응처리 결과를 획득하는 레지스트리 프록시 유닛;상기 적응 처리 결과에 따라, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하는 서비스 데이터 결정 유닛; 및상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 서비스 데이터 송신 유닛; 을 포함하는 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,공개특허 10-2022-0140869-4-상기 구성 센터 컴포넌트는,수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득하는 구성 데이터 비교 유닛;비교결과가 상기 수신된 구성 데이터와 상기 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 상기이미 저장된 구성 데이터를 상기 수신된 구성 데이터로 업데이트하는 구성 데이터 업데이트 유닛; 및상기 수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 상기 변경된 구성 데이터를 송신하는 구성 데이터 송신 유닛; 을 포함하는 마이크로서비스 구성 장치."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제1항 내지 제5항 중 어느 한 항에 따른 방법을 실행하는 적어도 하나의 트랜잭션 클러스터;제6항 내지 제8항 중 어느 한 항에 따른 방법을 실행하는 메인 클러스터; 를 포함하는 마이크로서비스 시스템."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신연결되는 메모리; 를 포함하며,상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저장되어 있고, 상기 명령어는 상기 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서가 제1항 내지 제8항 중 어느 한 항에 따른 방법을 실행할 수 있도록 하는 것을 특징으로 하는 전자 기기."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "컴퓨터 명령어가 저장된 비휘발성 컴퓨터 판독가능 저장 매체로서,상기 컴퓨터 명령어는 컴퓨터가 제1항 내지 제8항 중 어느 한 항에 따른 방법을 실행하도록 하는 컴퓨터 명령어가 저장된 비휘발성 컴퓨터 판독가능 저장 매체."}
{"patent_id": "10-2022-7034296", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "컴퓨터 프로그램을 포함하는 컴퓨터 프로그램 제품으로서,상기 컴퓨터 프로그램은 프로세서에 의해 실행될 경우, 제1항 내지 제8항 중 어느 한 항에 따른 방법을 실현하는 컴퓨터 프로그램 제품."}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시는 컴퓨터"}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "에 관한 것으로, 특히 클라우드 컴퓨팅, 사물인터넷 등 분야에 관한 마이크로서비스 구성 방법, 장치, 전자 기기, 시스템 및 저장 매체에 관한 것이다. 구체적인 실현 방안은, 메인 클러스터로부터 구성 데이터를 수신하고, 또한 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 메인 클러스터 로 서비스 데이터 획득 요청을 송신하며, 메인 클러스터로부터 서비스 데이터를 수신하고, 구성 데이터 및 서비 스 데이터에 따라, 서비스 거버넌스 태스크를 실행한다. 본 개시의 상기 해결수단에 따르면, 트랜잭션 클러스터 는 능동적으로 획득하는 방식를 이용하여 서비스 데이터를 획득할 수 있다. 그 장점은 메인 클러스터의 부하를 감소시킬 수 있는 것이며, 특히 트랜잭션 클러스터의 개수가 많은 장면에서는, 메인 클러스터의 안정성을 크게 향상시킬 수 있는 것이다. 대 표 도 - 도1"}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 2, "content": "공개특허10-2022-0140869 명 세 서 청구범위 청구항 1 트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법으로서, 메인 클러스터로부터 구성 데이터를 수신하고, 또한 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 상기 메인 클러스터로부터 서비스 데 이터를 수신하는 단계; 및 상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계; 를 포함하는 마이 크로서비스 구성 방법. 청구항 2 제1항에 있어서, 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 상기 메인 클러스터로 서비스 데이터 획 득 요청을 송신하는 단계는, 필요한 서비스 데이터를 결정하는 단계; 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 상기 필요한 서 비스 데이터와 비교하여, 비교결과를 획득하는 단계; 및 상기 비교결과가 소정의 조건에 부합되는 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 단 계; 를 포함하는 마이크로서비스 구성 방법. 청구항 3 제2항에 있어서, 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 방식은, 상기 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링하는 단계; 및 전후 2회의 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 단계; 를 포함하는 마이크로서비스 구성 방법. 청구항 4 제1항에 있어서, 상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계는, 상기 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정하는 단계; 상기 구성 데이터를 이용하여 상기 서비스 인스턴스의 파라미터를 결정하는 단계; 및 상기 각 마이크로서비스 프로그램의 서비스 인스턴스 및 상기 서비스 인스턴스의 파라미터에 따라, 상기 각 마 이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행하는 단계; 를 포함하는 마이크로서비스 구성 방 법. 청구항 5 제1항 내지 제4항 중 어느 한 항에 있어서, 상기 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며, 각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일한 마이크로서비스 구성 방법.청구항 6 메인 클러스터에 응용되는 마이크로서비스 구성 방법으로서, 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 단계; 및 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요 청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계; 를 포함하는 마이크로서비스 구 성 방법. 청구항 7 제6항에 있어서, 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요 청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계는, 수신된 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응 처리 결과를 획득하는 단계; 상기 적응 처리 결과에 따라, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하는 단계; 및 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계; 를 포함하는 마이크로서비스 구성 방법. 청구항 8 제6항에 있어서, 상기 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 단계는, 수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득하는 단계; 비교결과가 상기 수신된 구성 데이터와 상기 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 상기 이미 저장된 구성 데이터를 상기 수신된 구성 데이터로 업데이트하는 단계; 및 상기 수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 상기 변경된 구성 데이터를 송 신하는 단계; 를 포함하는 마이크로서비스 구성 방법. 청구항 9 메인 클러스터로부터 구성 데이터를 수신하는 제어 평면 컴포넌트; 상기 메인 클러스터 중의 서비스 데이터가 변경된 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신 하며, 상기 메인 클러스터로부터 서비스 데이터를 수신하는 데이터 평면 컴포넌트; 를 포함하며, 상기 데이터 평면 컴포넌트는 또한 상기 구성 데이터 및 상기 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 마이크로서비스 구성 장치. 청구항 10 제9항에 있어서, 상기 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며, 상기 사이드카 컴포넌트는, 필요한 서비스 데이터를 결정하는 서비스 데이터 결정 유닛; 상기 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 상기 필요한 서 비스 데이터와 비교하여, 비교결과를 획득하는 서비스 데이터 비교 유닛; 및 상기 비교결과가 소정의 조건에 부합되는 경우, 상기 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 서 비스 데이터 획득 요청 송신 유닛; 을 더 포함하는 마이크로서비스 구성 장치.청구항 11 제10항에 있어서, 상기 서비스 데이터 비교 유닛은 구체적으로, 상기 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링하고; 전후 2회 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 상기 메인 클러스터 중의 서비스 데이터가 변 경된 것으로 결정하는 것인 마이크로서비스 구성 장치. 청구항 12 제9항에 있어서, 상기 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며, 상기 사이드카 컴포넌트는, 상기 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정하는 서비스 인스턴스 결 정 유닛; 상기 구성 데이터를 이용하여 상기 서비스 인스턴스의 파라미터를 결정하는 파라미터 결정 유닛; 및 상기 각 마이크로서비스 프로그램의 서비스 인스턴스 및 상기 서비스 인스턴스의 파라미터에 따라, 상기 각 마 이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행하는 서비스 거버넌스 태스크 실행 유닛; 을 더 포함하는 마이크로서비스 구성 장치. 청구항 13 제9항에 있어서, 상기 마이크로서비스 구성 장치는 트랜잭션 클러스터이고, 상기 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며, 각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일한 마이크로서비스 구성 장치. 청구항 14 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 구성 센터 컴포넌트; 및 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 상기 서비스 데이터 획득 요 청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 레지스트리 컴포넌트; 를 포함하는 마 이크로서비스 구성 장치. 청구항 15 제14항에 있어서, 상기 레지스트리 컴포넌트는, 수신된 적어도 하나의 상기 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응 처리 결과를 획득하는 레지스트리 프록시 유닛; 상기 적응 처리 결과에 따라, 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하는 서비스 데이 터 결정 유닛; 및 상기 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 서비스 데 이터 송신 유닛; 을 포함하는 마이크로서비스 구성 장치. 청구항 16 제14항에 있어서,상기 구성 센터 컴포넌트는, 수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득하는 구성 데이터 비교 유닛; 비교결과가 상기 수신된 구성 데이터와 상기 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 상기 이미 저장된 구성 데이터를 상기 수신된 구성 데이터로 업데이트하는 구성 데이터 업데이트 유닛; 및 상기 수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 상기 변경된 구성 데이터를 송 신하는 구성 데이터 송신 유닛; 을 포함하는 마이크로서비스 구성 장치. 청구항 17 제1항 내지 제5항 중 어느 한 항에 따른 방법을 실행하는 적어도 하나의 트랜잭션 클러스터; 제6항 내지 제8항 중 어느 한 항에 따른 방법을 실행하는 메인 클러스터; 를 포함하는 마이크로서비스 시스템. 청구항 18 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신연결되는 메모리; 를 포함하며, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저장되어 있고, 상기 명령어는 상 기 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서가 제1항 내지 제8항 중 어느 한 항 에 따른 방법을 실행할 수 있도록 하는 것을 특징으로 하는 전자 기기. 청구항 19 컴퓨터 명령어가 저장된 비휘발성 컴퓨터 판독가능 저장 매체로서, 상기 컴퓨터 명령어는 컴퓨터가 제1항 내지 제8항 중 어느 한 항에 따른 방법을 실행하도록 하는 컴퓨터 명령어 가 저장된 비휘발성 컴퓨터 판독가능 저장 매체. 청구항 20 컴퓨터 프로그램을 포함하는 컴퓨터 프로그램 제품으로서, 상기 컴퓨터 프로그램은 프로세서에 의해 실행될 경우, 제1항 내지 제8항 중 어느 한 항에 따른 방법을 실현하 는 컴퓨터 프로그램 제품. 발명의 설명 기 술 분 야 관련 출원에 대한 상호 참조 본 출원은 2021년 02월 10일자로 국제사무국(international bureau, IB)에 국제출원을 한 출원번호가 202110185215.5이며, 발명의 명칭이 \"마이크로서비스 구성 방법, 장치, 전자 기기, 시스템 및 저장 매체\"인 중 국 특허 출원의 우선권을 주장하며, 그 전부의 내용은 인용을 통해 본 출원에 결합된다. 본 출원은 컴퓨터 분야에 관한 것으로, 더 구체적으로는 마이크로서비스 구성 방법, 장치, 전자 기기, 시스템 및 저장 매체에 관한 것이다."}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "클라우드 네이티브 기술이 신속하게 발전하고 마이크로서비스가 대규모로 실행됨에 따라, 서비스 메시(Service Mesh) 기술은 점점 더 많은 관심과 주목을 받고 있다. 모놀리식 애플리케이션과 비교하면, 마이크로서비스 아키텍처는 책임이 명확한 목표에 따라 모놀리식 애플리케 이션을 복수의 마이크로서비스 어셈블리로 분할한다. 마이크로서비스 어셈블리 개수가 많을 경우, 마이크로서비 스의 구성이 실시간적이지 않거나 구성 오류 등 문제가 발생한다. 이로 인해 마이크로서비스 아키텍처 실행의"}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "안정성에 영향을 미친다.발명의 내용 본 개시는 마이크로서비스 구성 방법, 장치, 전자 기기, 시스템 및 저장 매체를 제공한다. 본 개시의 일 측면에 따르면, 트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법으로서, 메인 클러스터로부터 구성 데이터를 수신하고, 또한 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 메인 클러스터로부터 서비스 데이터를 수신하는 단계; 및 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계; 를 포함할 수 있는 마이크로 서비스 구성 방법을 제공한다. 본 개시의 다른 일 측면에 따르면, 메인 클러스터에 응용되는 마이크로서비스 구성 방법으로서, 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 단계; 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 서비스 데이터 획득 요청과 대응 되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계; 를 포함할 수 있는 마이크로서비스 구성 방법을 제공한다. 본 개시의 제3 측면에 따르면, 메인 클러스터로부터 구성 데이터를 수신하는 제어 평면 컴포넌트; 메인 클러스터 중의 서비스 데이터가 변경된 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 메인 클러스터로부터 서비스 데이터를 수신하는 데이터 평면 컴포넌트; 를 포함할 수 있으며, 데이터 평면 컴포넌트는 또한 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 마이 크로서비스 구성 장치를 제공한다. 본 개시의 제4 측면에 따르면, 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 구성 센터 컴포넌트; 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 서비스 데이터 획득 요청과 대응 되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 레지스트리 컴포넌트; 를 포함할 수 있는 마이크 로서비스 구성 장치를 제공한다. 본 개시의 제5 측면에 따르면, 트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법을 실행하는 적어도 하나의 트랜잭션 클러스터; 메인 클러스터에 응용되는 마이크로서비스 구성 방법을 실행하는 메인 클러스터; 를 포함할 수 있는 마이크로서 비스 시스템을 제공한다. 본 개시의 다른 일 측면에 따르면, 적어도 하나의 프로세서; 및 상기 적어도 하나의 프로세서와 통신연결되는 메모리; 를 포함하며, 상기 메모리에는 상기 적어도 하나의 프로세서에 의해 실행 가능한 명령어가 저장되어 있고, 상기 명령어는 상 기 적어도 하나의 프로세서에 의해 실행되어, 상기 적어도 하나의 프로세서가 본 개시의 어느 한 실시예 중의 방법을 실행할 수 있도록 하는 전자 기기를 제공한다. 본 개시의 다른 일 측면에 따르면, 컴퓨터가 본 개시의 어느 한 실시예 중의 방법을 실행하도록 하는 컴퓨터 명 령어가 저장된 비휘발성 컴퓨터 판독가능 저장 매체를 제공한다. 본 개시의 다른 일 측면에 따르면, 컴퓨터 프로그램을 포함하는 컴퓨터 프로그램 제품으로서, 상기 컴퓨터 프로그램은 프로세서에 의해 실행될 경우, 본 개시의 어느 한 실시예 중의 방법을 실현하는 컴퓨터 프로그램 제품을 제공한다. 본 개시의 상기 해결수단에 따르면, 트랜잭션 클러스터는 능동적으로 획득하는 방식를 이용하여 서비스 데이터 를 획득할 수 있다. 그 장점은 메인 클러스터의 부하를 감소시킬 수 있는 것이며, 특히 트랜잭션 클러스터의 개 수가 많은 장면에서는, 메인 클러스터의 안정성을 크게 향상시킬 수 있는 것이다. 이해해야 할 것은, 본 부분에서 설명되는 내용은 본 개시의 실시예의 핵심적인 특징 또는 중요한 특징을 표시하 는 것이 아니며, 본 개시의 범위를 한정하는 것도 아니다. 본 개시의 다른 특징은 이하의 명세서를 통해 쉽게 이해하게 될 것이다."}
{"patent_id": "10-2022-7034296", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하면서 본 개시의 예시적인 실시예에 대해 설명한다. 이해를 돕기 위해, 상기 설명에는 본 개 시 실시예의 다양한 세부사항을 포함하며, 이를 단지 예시적인 것으로 간주해야 한다. 따라서, 당업자는 본 개 시의 범위 및 사상을 벗어나는 않고, 여기에서 설명되는 실시예에 대해 다양한 변경 및 수정을 진행할 수 있음 을 인식해야 한다. 마찬가지로, 명확하고 간명한 설명을 위해, 이하의 설명에서 공지의 기능 및 구조에 대한 설 명은 생략한다. 도 1에 도시된 바와 같이, 본 개시는 트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법을 제공한다. 상 기 방법은 하기 단계 S101, S102를 포함할 수 있다. S101에서는, 메인 클러스터로부터 구성 데이터를 수신하고, 또한 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 메인 클러스터로부터 서비스 데이 터를 수신한다. S102에서는, 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행한다. 본 개시에 언급되는 마이크로서비스 아키텍처에는, 하나의 메인 클러스터 및 적어도 하나의 트랜잭션 클러스터 가 포함될 수 있다. 트랜잭션 클러스터는 능독적인 획득 방식 및 수동적인 획득 방식을 통해, 메인 클러스터로 부터 데이터를 획득하여, 획득한 데이터를 이용하여 서비스 거버넌스 태스크를 실행할 수 있다. 트랜잭션 클러스터에는 적어도 업스트림 통신 로직 및 다운스트림 통신 로직을 구비하는 제어 평면 컴포넌트 및 데이터 평면 컴포넌트가 포함될 수 있다. 여기서, 제어 평면 컴포넌트는 데이터 평면 컴포넌트로 서비스 데이터 및 구성 데이터를 푸쉬한다. 제어 평면 컴포넌트는 파일럿(Pilot) 컴포넌트를 포함할 수 있다. 데이터 평면 컴포넌트는 사이드카(Sidecar) 컴포넌트 및 마이크로서비스 프로그램을 포함할 수 있으며, 사이드 카 컴포넌트는 마이크로서비스 프로그램과 함께 배치될 수 있다. 즉 하나의 마이크로서비스 프로그램에 하나의 사이드카 컴포넌트가 대응되게 배치된다. 사이드카 컴포넌트는 서비스 거버넌스 트랜잭션을 실행하도록, 마이크로서비스 프로그램에서 들어오고 나가는 모든 트래픽을 관리한다. 예를 들면, 서비스 거버넌스 트랜잭션은 서비스 라우팅, 서비스 제한, 서비스 브레이 커, 오류 주입 및 트래픽 재생 등을 포함할 수 있다. 구성 데이터는 롱 커넥션의 형태를 이용하여 획득될 수 있다. 즉, 구성 데이터가 변경된 경우, 트랜잭션 클러스 터는 메인 클러스터가 능동적으로 보낸 변경 후의 구성 데이터를 획득한다. 다른 일 측면에서는, 트랜잭션 클러스터는 능동적 폴링의 방식를 이용하여, 메인 클러스터에서 서비스 데이터가 변경되는 상황이 발생했는지 여부를 결정할 수 있다. 서비스 데이터 변경은 사용자가 서비스 데이터에 대한 수 정, 삭제 및/또는 업그레이드 업데이트 등을 포함할 수 있다. 변경을 결정하는 구체적인 형태는 사용자의 변경 동작에 대한 실시간 검출, 서비스 데이터에 대한 실시간 비교 검출, 및 사용자가 능독적으로 알린 서비스 데이터 변경에 대한 획득 등을 포함할 수 있다. 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 트랜잭션 클러스터는 능동적으로 메인 클러스 터로 서비스 데이터 획득 요청을 송신할 수 있다. 메인 클러스터는 서비스 데이터 획득 요청을 수신한 경우, 서 비스 데이터 획득 요청의 컨텐츠에 따라, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정할 수 있다. 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 트랜잭션 클러스터에 송신한다. 트랜잭션 클러스터는 메인 클러스터에서 송신한 서비스 데이터를 수신한 경우, 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행할 수 있다. 메인 클러스터를 통해 구성 데이터 및 트랜잭션 데이터를 전부 능동적으로 보내는 경우에 비해, 본 출원의 상기 해결수단을 통해, 트랜잭션 클러스터는 능동적으로 획득하는 방식를 이용하여 서비스 데이터를 획득할 수 있다. 그 장점은 메인 클러스터의 부하를 감소시킬 수 있는 것이며, 특히 트랜잭션 클러스터의 개수가 많은 장면에서 는, 메인 클러스터의 안정성을 크게 향상시킬 수 있는 것이다. 도 2에 도시된 바와 같이, 일 실시형태에서는, 단계 S101에 따른 메인 클러스터 중의 서비스 데이터가 변경된 것이 검출될 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 단계는, 구체적으로는 하기 단계 S201, S202, S203을 포함할 수 있다. S201에서는, 필요한 서비스 데이터를 결정한다. S202에서는, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 필요한 서비스 데이터와 비교하여, 비교결과를 획득한다. S203에서는, 비교결과가 소정의 조건에 부합되는 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신한다. 필요한 서비스 데이터는 사용자가 사전에 제정한 구성 정보에 따라 결정할 수 있거나, 또는 사용자가 사전에 내 린 명령에 따라 결정할 수 있다. 예를 들면, 마이크로서비스 프로그램의 개수 및 각 마이크로서비스 프로그램에 대응되는 기능에 따라, 각 마이크로서비스 프로그램에서 필요한 서비스 데이트를 결정할 수 있다. 각 마이크로 서비스 프로그램에서 필요한 서비스 데이터는 트랜잭션 클러스터에서 필요한 서비스 데이터로 할 수 있다. 복수의 트랜잭션 클러스터가 있을 경우, 각 트랜잭션 클러스터는 필요한 서비스 데이터를 각각 결정할 수 있다. 트랜잭션 클러스터는 정기적으로 메인 클러스터로 트랜잭션 데이터 변경 문의 정보를 송신하여, 메인 클러스터 중의 서비스 데이터가 변경된 지 여부를 결정할 수 있다. 예를 들면, 트랜잭션 클러스터는 메인 클러스터로부터 \"트랜잭션 데이터가 변경되었습니다\" 또는 \"XX 유형의 트랜잭션 데이터가 변경되었습니다\"라는 응답을 수신한 경우, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정할 수 있다. 또는 메인 클러스터로 트랜잭션 데 이터 리스트 획득 요청을 송신할 수도 있으며, 전후로 2회 수신된 트랜잭션 데이터 리스트 중의 컨텐츠에 차이 가 존재할 경우, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정할 수 있다. 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 필요한 서비스 데이 터와 비교하여, 비교결과를 획득한다. 비교결과가 소정의 조건에 부합되는 경우, 메인 클러스터로 서비스 데이 터 획득 요청을 송신한다. 상기 메인 클러스터 중의 트랜잭션 데이터가 변경된 지 여부를 확인하는 과정의 경우, 트랜잭션 클러스터 중의 사이드카 컴포넌트를 통해 실행할 수 있다. 예를 들면, A 지역의 트랜잭션 클러스터에는 총 3개의 사이드카 컴포넌트 A1, A2, A3이 포함된다. 제1 사이드카 컴포넌트 A1은 APP1과 함께 배치되고, 제2 사이드카 컴포넌트 A2는 APP2와 함께 배치되며, 제3 사이드카 컴포넌트 A3은 APP3과 함께 배치된다. 제1 사이드카 컴포넌트 A1은 A1 유형의 데이터가 APP1에 필요한 서비스 데이터 인 것으로 결정할 수 있고, 제2 사이드카 컴포넌트 A2는 A2 유형의 데이터가 APP2에 필요한 서비스 데이터인 것으로 결정할 수 있으며, 제3 사이드카 컴포넌트 A3은 A3 유형의 데이터가 APP3에 필요한 서비스 데이터인 것으 로 결정할 수 있다. 3개의 사이드카 컴포넌트가 A2 유형의 서비스 데이터만 변경된 것으로 결정한 경우, 제2 사 이드카 컴포넌트 A2만 메인 클러스터로 서비스 데이터 획득 요청을 송신하여, A2 유형의 서비스 데이터를 획득 하도록 요청할 수 있다. 또 예를 들면, A1, A2, A3의 3개 유형의 서비스 데이터 모두가 변경된 경우, 제1 사이드카 컴포넌트 A1은 메인 클러스터로 서비스 데이터 획득 요청을 송신하여, A1 유형의 서비스 데이터를 획득하도록 요청하고, 제2 사이드 카 컴포넌트 A2는 메인 클러스터로 서비스 데이터 획득 요청을 송신하여, A2 유형의 서비스 데이터를 획득하도 록 요청하며, 제3 사이드카 컴포넌트 A3은 메인 클러스터로 서비스 데이터 획득 요청을 송신하여, A3 유형의 서 비스 데이터를 획득하도록 요청한다. 상기 해결수단을 통해, 서비스 데이터가 변경된 경우, 트랜잭션 클러스터는 필요한 서비스 데이터에 대해 서비 스 데이터의 획득 요청을 진행할 수 있다. 매번 서비스 데이터가 업데이트될 때마다 전부 업데이트 데이터를 획 득하는 관련 기술에 비해, 상기 해결수단은 데이터의 전송량을 감소시킬 수 있다. 특히 다중 클러스터의 장면의 경우, 마이크로서비스 시스템의 안정성을 향상시킬 수 있다. 도 3에 도시된 바와 같이, 일 실시형태에서는, 단계 S202에 따른 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 방식는, 하기 단계 S301, S302를 더 포함할 수 있다. S301에서는, 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링한다. S302에서는, 전후 2회 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 메인 클러스터 중의 서비스 데이 터가 변경된 것으로 결정한다. 트랜잭션 클러스터 중의 각 사이드카 컴포넌트는 정기적으로 메인 클러스터로 폴링 정보를 송신하여, 메인 클러 스터에서 피드백한 폴링 결과를 획득할 수 있다. 전후 2회 폴링 결과의 차이가 대응되는 임계값을 초과하는 경 우, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정할 수 있다. 예시적으로, 대응되는 임계값은 10%일 수 있다. 또는, 서비스 데이터에서 서로 다른 파라미터의 가중치를 설정 할 수 있으며, 가중치가 높은 파라미터가 변경된 경우, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결 정할 수 있다. 상기 해결수단을 통해, 서비스 데이터의 변경 상황을 유연하고 빠르게 결정할 수 있다. 도 4에 도시된 바와 같이, 일 실시형태에서는, 단계 S102에 따른 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행하는 단계는, 하기 서브 단계 S401, S402, S403을 포함할 수 있다. S401에서는, 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정한다. S402에서는, 구성 데이터를 이용하여 서비스 인스턴스의 파라미터를 결정한다. S403에서는, 각 마이크로서비스 프로그램의 서비스 인스턴스 및 서비스 인스턴스의 파라미터에 따라, 각 마이크 로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행한다. 서비스 데이터는 트랜잭션 클러스터에서 마이크로서비스 프로그램의 서비스 인스턴스를 표시한다. 서비스 인스 턴스는 마이크로서비스 프로그램에 의해 실행되는 구체적인 기능일 수 있다. 마이크로서비스 아키텍처가 쇼핑 장면인 것을 예로 들면, 수신된 서비스 데이터에 따라, 마이크로서비스 프로그램의 서비스 인스턴스는 상품 정 보 조회, 장바구니(결제할 상품), 계산서 결제 및 물류 조회 등을 포함하는 것으로 결정할 수 있다. 하나의 트랜잭션 클러스터에는, 복수의 마이크로서비스 프로그램이 포함될 수 있으며, 각 마이크로서비스 프로 그램은 하나의 서비스 인스턴스에 대응될 수 있다. 구성 데이터는 서비스 인스턴스의 파라미터에 대응될 수 있으며, 예를 들면, 계산서 결제 마이크로서비스 프로 그램이 장바구니 마이크로서비스 프로그램에서 데이터를 호출할 수 있지만 물류 마이크로서비스 프로그램에서 데이터를 호출할 수 없도록 명확하게 할 수 있다. 또 예를 들면, 구성 데이터는 장바구니 마이크로서비스 프로 그램과 계산서 결제 마이크로서비스 프로그램의 통신연결 시도 시간 임계값 등일 수 있다. 예시적으로, 물류 마이크로서비스 프로그램과 함께 배치된 사이드카 컴포넌트는 물류 마이크로서비스 프로그램 이 계산서 결제 마이크로서비스 프로그램 중의 결제된 물품의 정보를 호출함으로써, 물류 마이크로서비스 프로 그램에서 결제된 물품의 물류 상태를 조회할 수 있도록 제어할 수 있다. 또 예를 들면, 사이드카 컴포넌트는 장 바구니 마이크로서비스 프로그램과 계산서 결제 마이크로서비스 프로그램의 통신연결 시도 시간이 통신연결 시 도 시간 임계값을 초과할 시, 통신연결 시도를 재시도하거나 통신연결 시도를 정지하도록 제어할 수 있다. 이상의 내용은 단지 서비스 데이터 및 구성 데이터에 포함된 객체를 예시적으로 설명할 뿐이며, 이것으로 보호 내용을 제한하는 것은 아니다. 사이드카 컴포넌트는 서비스 데이터 및 구성 데이터에 따라, 그와 함께 배치된 마이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실현할 수 있다. 일 실시형태에서는, 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며, 각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일하다. 서로 다른 지역의 트랜잭션 클러스터를 통해, 사용자의 근거리 액세스 원칙을 만족하여, 사용자의 사용 체험을 향상시킬 수 있다. 여전히 쇼핑 장면을 예로 들 경우, 예를 들면, 베이징에 거주하는 사용자는 베이징에 설치된 트랜잭션 클러스터에 우선적으로 액세스할 수 있어, 베이징에 거주하는 사용자가 빠른 액세스 응답을 획득할 수 있다. 또한, 서로 다른 지역의 트랜잭션 클러스터는 서로 다른 지역 중의 멀티 활동을 구성할 수 있어, 어느 한 트랜 잭션 클러스터에 고장이 발생하더라도, 마이크로서비스 아키텍처의 전반적인 원활한 운영은 여전히 보장될 수 있다. 본 출원은 트랜잭션 클러스터에서 서비스 데이터를 능동적으로 획득하는 방식를 이용하므로, 다중 클러스터의 장면의 경우라 하더라도, 대규모의 서비스 인스턴스의 수요를 만족시킬 수 있다. 도 5에 도시된 바와 같이, 본 개시는 메인 클러스터에 응용되는 마이크로서비스 구성 방법에 관한 것이며, 이 방법은 하기 단계 S501, S502를 포함할 수 있다. S501에서는, 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신한다. S502에서는, 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신한다. 메인 클러스터의 주요기능은 사용자의 트랜잭션 데이터 및 구성 데이터를 수신하고, 이를 각 트랜잭션 클러스터 에 송신하는 것이다. 구성 데이터의 경우, 메인 클러스터는 구성 센터 컴포넌트를 이용하여 능동적 폴링 검출 또는 수동적 알림 수신 등 방식를 이용하여 구성 데이터가 변경된 지 여부를 결정할 수 있다. 변경에는 에디터, 삭제 또는 업데이트 등 이 포함될 수 있다. 구성 데이터가 변경된 경우, 구성 데이터를 각 트랜잭션 클러스터에 능동적으로 보낸다. 상기 해결수단을 통해, 각 트랜잭션 클러스터 간에 구성 데이터를 공유할 수 있으며, 각 트랜잭션 클러스터의 상호 연결 및 공통 서비 스 거버넌스를 실현할 수 있다. 여기서, 구성 데이터는 커스텀 리소스 정의(CRD，Custom Resource Definition) 데이터를 포함할 수 있다. 또한, 메인 클러스터는 레지스트리 컴포넌트를 이용하여 트랜잭션 클러스터의 요청을 수신할 수 있다. 어느 한 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대한 해석을 통해, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정할 수 있다. 또한, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신한다. 상기 해결수단을 통해, 메인 클러스터는 트랜잭션 클러스터의 요청을 수신한 경우에만, 요청에 따라 대응되는 서비스 데이터를 결정한다. 메인 클러스터에서 능동적으로 보내는 형태에 비해, 본 출원의 해결수단은 서비스 데이터의 중복 송신을 최대한 방지할 수 있다. 이에 기반하여, 메인 클러스터의 부하를 감소시킬 수 있으며, 특 히 트랜잭션 클러스터의 개수가 많은 장면에서는, 메인 클러스터의 안정성을 크게 향상시킬 수 있다. 도 6에 도시된 바와 같이, 일 실시형태에서는, S502에 따른 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 단계는, 하기 단계 S601, S602, S603을 포함한다.S601에서는, 수신된 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응 처리 결과를 획득한다. S602에서는, 적응 처리 결과에 따라, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정한다. S603에서는, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신한다. 메인 클러스터는 레지스트리 컴포넌트를 이용하여 사용자에 의해 편집된 트랜잭션 데이터를 수신할 수 있다. 자 주 쓰는 서비스 데이터를 획득하는 마이크로서비스의 레지스트리 컴포넌트는, 예를 들면, ZK(ZooKeeper), Eureka, Consul, Nacos 등 여러가지를 포함한다. 이러한 레지스트리 컴포넌트는 서로 다른 업체에서 개발하여 실현하므로, 현재 상응하는 데이터 모델 기준이 없 다. 이에 따라 서로 다른 레지스트리 컴포넌트에 대해 서로 다른 도킹방안을 실현해야 한다. 여러가지 레지스트 리 컴포넌트의 데이터 모델 차이성을 보호하기 위해, 본 개시는 레지스트리 프록시 유닛(Registry Proxy) 컴포 넌트를 도입한다. 레지스트리 프록시 유닛 컴포넌트에는, 서로 다른 레지스트리 컴포넌트의 데이터 모델이 사전 에 저장될 수 있다. 이에 기반하여, 메인 클러스터는, 어느 한 트랜잭션 클러스터에서 송신된 서비스 데이터 획 득 요청을 수신한 경우, 레지스트리 프록시 유닛 컴포넌트를 이용하여 서비스 데이터 획득 요청에 대해 적응(어 댑테이션)을 진행할 수 있다. 적응 처리 결과에 따라, 서로 다른 레지스트리 컴포넌트와의 도킹을 실현하여, 대응되는 레지스트리 컴포넌트는 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정할 수 있다. 서비스 데이터 획득 요청과 대응되는 서비스 데이터가 결정된 경우, 서비스 데이터 획득 요청과 대응되는 서비 스 데이터를 대응되는 트랜잭션 클러스터에 송신할 수 있다. 상기 해결수단을 통해, 레지스트리 프록시 유닛을 이용할 경우 서로 다른 레지스트리의 차이성을 극복할 수 있 다. 도 7에 도시된 바와 같이, 일 실시형태에서는, S501에 따른 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터 로 변경된 구성 데이터를 송신하는 단계는, 구체적으로 하기 단계 S701, S702, S703을 포함할 수 있다. S701에서는, 수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득한다. S702에서는, 비교결과가 수신된 구성 데이터와 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 이 미 저장된 구성 데이터를 수신된 구성 데이터로 업데이트한다. S703에서는, 수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신한다. 구성 센터 컴포넌트는 매번 구성 데이터를 수신할 때마다, 이미 저장된 구성 데이터를 호출할 수 있고, 수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득할 수 있다. 비교결과가 양자에 차이가 나타난 것일 경우, 사용자가 구성 데이터를 변경한 것으로 결정할 수 있다. 이에 따 라, 이미 저장된 구성 데이터를 수신된 구성 데이터로 업데이트할 수 있으며, 수신된 구성 데이터를 변경된 구 성 데이터로 하여, 트랜잭션 클러스터에 보낼 수 있다. 비교결과가 변경된 지 여부는, 차이가 나타난지 여부를 판정 기준으로 할 수도 있고, 차이 정도를 판정 기준으 로 할수 도 있으며, 중요한 데이터 또는 가중치가 높은 데이터에 차이가 나타난지 여부를 판정 기준으로 할 수 도 있다. 상기 해결수단을 통해, 구성 데이터가 변경하는 경우에만 보낼 수 있다. 일정한 정도에서 구성 데이터를 보내는 회수를 감소시킨다. 도 8에 도시된 바와 같이, 본 출원은 마이크로서비스 구성 장치를 제공하며, 상기 장치는 트랜잭션 클러스터에 대해, 구체적으로 메인 클러스터로부터 구성 데이터를 수신하는 제어 평면 컴포넌트; 메인 클러스터 중의 서비스 데이터가 변경된 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하며, 메인 클러스터로부터 서비스 데이터를 수신하는 데이터 평면 컴포넌트; 를 포함할 수 있고,데이터 평면 컴포넌트는 또한 구성 데이터 및 서비스 데이터에 따라, 서비스 거버넌스 태스크를 실행한다. 일 실시형태에서는, 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며, 사이드카 컴포넌트는 필요한 서비스 데이터를 결정하는 서비스 데이터 결정 유닛; 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정한 경우, 변경된 서비스 데이터를 필요한 서비스 데이 터와 비교하여, 비교결과를 획득하는 서비스 데이터 비교 유닛; 비교결과가 소정의 조건에 부합되는 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하는 서비스 데이터 획득 요청 송신 유닛; 을 더 포함할 수 있다. 일 실시형태에서는, 서비스 데이터 비교 유닛은 구체적으로, 메인 클러스터 중의 서비스 데이터를 정기적으로 폴링하고, 전후 2회 폴링 결과의 차이가 대응되는 임계값을 초과하는 경우, 메인 클러스터 중의 서비스 데이터가 변경된 것으로 결정하는 것에 사용될 수 있다. 일 실시형태에서는, 데이터 평면 컴포넌트는 사이드카 컴포넌트를 포함하며, 사이드카 컴포넌트는 서비스 데이터를 이용하여 각 마이크로서비스 프로그램의 서비스 인스턴스를 결정하는 서비스 인스턴스 결정 유 닛; 구성 데이터를 이용하여 서비스 인스턴스의 파라미터를 결정하는 파라미터 결정 유닛; 각 마이크로서비스 프로그램의 서비스 인스턴스 및 서비스 인스턴스의 파라미터에 따라, 각 마이크로서비스 프 로그램에 대한 서비스 거버넌스 태스크를 실행하는 서비스 거버넌스 태스크 실행 유닛; 을 더 포함할 수 있다. 일 실시형태에서는, 트랜잭션 클러스터는 복수 개이고, 서로 다른 지역에 각각 설치되며, 각 지역의 트랜잭션 클러스터에 의해 실행되는 서비스 거버넌스 태스크는 동일하다. 도 9에 도시된 바와 같이, 본 출원은 마이크로서비스 구성 장치를 제공하며, 상기 장치는 메인 클러스터에 대해 구체적으로 구성 데이터가 변경된 경우, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 구성 센터 컴포넌트; 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청을 수신한 경우, 서비스 데이터 획득 요청과 대응 되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 레지스트리 컴포넌트; 를 포함할 수 있다. 일 실시형태에서는, 레지스트리 컴포넌트는 수신된 적어도 하나의 트랜잭션 클러스터의 서비스 데이터 획득 요청에 대해 적응 처리를 진행하여, 적응 처리 결과를 획득하는 레지스트리 프록시 유닛; 적응 처리 결과에 따라, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하는 서비스 데이터 결정 유 닛; 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 대응되는 트랜잭션 클러스터에 송신하는 서비스 데이터 송신 유닛; 을 더 포함할 수 있다. 일 실시형태에서는, 구성 센터 컴포넌트는 수신된 구성 데이터를 이미 저장된 구성 데이터와 비교하여, 비교결과를 획득하는 구성 데이터 비교 유닛; 비교결과가 수신된 구성 데이터와 이미 저장된 구성 데이터 사이에 차이가 존재하는 것일 경우, 이미 저장된 구 성 데이터를 수신된 구성 데이터로 업데이트하는 구성 데이터 업데이트 유닛;수신된 구성 데이터를 변경된 구성 데이터로 하여, 각 트랜잭션 클러스터로 변경된 구성 데이터를 송신하는 구 성 데이터 송신 유닛; 더 포함할 수 있다. 도 10에 도시된 바와 같이, 본 개시는 마이크로서비스 시스템을 제공하며, 상기 시스템은 적어도 하나의 트랜잭 션 클러스터 및 메인 클러스터를 포함할 수 있다. 적어도 하나의 트랜잭션 클러스터는, 각 트랜잭션 클러스터가 상술한 트랜잭션 클러스터에 응용되는 마이크로서 비스 구성 방법을 실행한다. 메인 클러스터는, 상술한 메인 클러스터에 응용되는 마이크로서비스 구성 방법을 실행한다. 트랜잭션 클러스터는 도 10 중의 트랜잭션 클러스터 1 내지 트랜잭션 클러스터 N에 대응되게 복수 개 있을 수 있다. 여기서, N은 양의 정수이다. 각 트랜잭션 클러스터에는, 하나의 제어 평면 컴포넌트 및 적어도 하나의 데이터 평면 컴포넌트가 더 포함될 수 있다. 여기서, 제어 평면 컴포넌트는 메인 클러스터에서 송신한 구성 데이터를 획득하고, 구성 데이터를 데이터 평면 컴포넌트에 송신하며, 메인 클러스터의 구성 센터에 통신연결될 수 있다. 송신 형태는 웹훅(Webhook) 메커 니즘을 기반으로 할 수 있다. 데이터 평면 컴포넌트는 공통 배치된 마이크로서비스 프로그램(도 10 중의 APP) 및 사이드카 컴포넌트(도 10 중 의 Sidecar)를 포함할 수 있다. 여기서, 사이드카 컴포넌트는 메인 클러스터 중의 서비스 데이터가 변경된 것이 검출된 경우, 메인 클러스터로 서비스 데이터 획득 요청을 송신하고, 메인 클러스터에서 송신한 서비스 데이터 를 수신하며, 수신된 구성 데이터 및 서비스 데이터에 따라, 마이크로서비스 프로그램에 대한 서비스 거버넌스 태스크를 실행한다. 메인 클러스터 중의 레지스트리 컴포넌트는, 한편으로는 사용자측에 구성된 서비스 데이터를 수신하여 저장하는 것이고, 다른 한편으로는 수신된 트랜잭션 클러스터의 데이터 평면 컴포넌트에서 송신한 서비스 데이터 획득 요 청에 따라, 서비스 데이터 획득 요청과 대응되는 서비스 데이터를 결정하고, 서비스 데이터 획득 요청에 대응되 는 서비스 데이터를 트랜잭션 클러스터 중의 데이터 평면 컴포넌트에 송신한다. 여기서, 구성 데이터는 커스텀 리소스 정의(CRD，Custom Resource Definition) 데이터를 포함할 수 있다. 서비스 데이터를 획득하는 마이크로서비스의 레지스트리 컴포넌트는, 예를 들면, 도 10 중의 ZK(ZooKeeper), Eureka, Consul 등 여러가지를 포함한다. 이러한 레지스트리는 서로 다른 업체에서 개발하여 실현하므로, 현재 상응하는 데이터 모델 기준이 없다. 이에 따라 서로 다른 레지스트리에 대해 서로 다른 도킹방안을 실현해야 한다. 여러가지 레지스트리의 데이터 모델 차이성을 보호하기 위해, 본 개시는 레지스트리 프록시 유닛(Registry Proxy)을 도입한다. 레지스트리 프록시 유닛에는, 서로 다른 레지스트리의 데이터 모델이 사전에 저장된다. 이에 기반하여, 메인 클러스터는 어느 한 트랜잭션 클러스터의 데이터 평면 컴포넌트에서 송신된 서비스 데이터 획득 요청을 수신한 경우, 레지스트리 프 록시 유닛을 이용하여 서비스 데이터 획득 요청에 대해 적응을 진행할 수 있다. 본 개시의 실시예에 따르면, 본 개시는 전자 기기, 판독가능 저장 매체 및 컴퓨터 프로그램 제품을 더 제공한다. 도 11은 본 개시의 실시예를 실현할 수 있는 전자 기기의 예시적인 블록도를 도시한다. 전자 기기는 랩톱 컴퓨터, 데스크톱 컴퓨터, 워크 스테이션, 개인 휴대 정보 단말기, 서버, 블레이드 서버, 메인 프레임 컴퓨터 및 기타 적합한 컴퓨터 등 다양한 형태의 디지털 컴퓨터를 의미한다. 전자 기기는 개인 디지털 프로세서, 셀룰 러 전화, 스마트 폰, 웨어러블 디바이스 및 기타 유형의 컴퓨팅 장치 등 다양한 형태의 이동 장치를 의미할 수 도 있다. 본 명세서에 개시되는 부품, 이들의 연결과 관계 및 이들의 기능은 오직 예시일 뿐이고, 본 명세서에 서 설명 및/또는 요구되는 본 개시의 실현을 제한하는 것은 아니다. 도 11에 도시된 바와 같이, 전자 기기에는 리드 온리 메모리(ROM, 1120)에 저장된 컴퓨터 프로그램 또는 저장 유닛으로부터 랜덤 액세스 메모리(RAM, 1130)로 로딩되는 컴퓨터 프로그램에 근거하여 여러가지 적 합한 동작과 처리를 실행할 수 있는 컴퓨팅 유닛이 포함된다. RAM에는, 전자 기기의 동작에 필요한 다양한 프로그램 및 데이터가 더 저장될 수 있다. 컴퓨팅 유닛, ROM 및 RAM은 버스를 통해 서로 연결된다. 입력출력(I/O) 인터페이스도 버스에 연결된다. 전자 기기 중의 복수의 부품은 I/O 인터페이스에 연결되며, 상기 부품에는, 예를 들면 키보드, 마 우스 등과 같은 입력 유닛, 예를 들면 다양한 유형의 디스플레이, 스피커 등과 같은 출력 유닛, 예 를 들면 디스크, 광 디스크 등과 같은 저장 유닛; 및 예를 들면 네트워크 카드, 모뎀(modem), 무선통신 송수신기 등과 같은 통신 유닛이 포함된다. 통신 유닛은 전자 기기가 인터넷과 같은 컴퓨터 네트워크 및/또는 다양한 텔레콤 네트워크를 통해 기타 기기와 정보/데이터를 교환할 수 있도록 한다. 컴퓨팅 유닛은 처리 능력과 컴퓨팅 능력을 갖는 다양한 범용 및/또는 전용 처리 컴포넌트일 수 있다. 컴 퓨팅 유닛의 일부 예시에는, 중앙 처리 유닛(CPU), 그래픽 처리 유닛(GPU), 다양한 전용 인공지능(AI) 컴 퓨팅 칩, 머신 러닝 모델 알고리즘을 실행하는 다양한 컴퓨팅 유닛, 디지털 신호 프로세서(DSP) 및 임의의 적합 한 프로세서, 컨트롤러, 마이크로 컨트롤러 등이 포함되지만 이에 한정되는 것은 아니다. 컴퓨팅 유닛은, 예를 들면, 마이크로서비스 구성 방법과 같은 위에서 설명된 각 방법과 처리를 실행한다. 예를 들면, 일부 실시 예에서는, 마이크로서비스 구성 방법은 컴퓨터 소프트웨어 프로그램으로 구현되어, 저장 유닛과 같은 기 계 판독가능 매체에 유형적으로 포함될 수 있다. 일부 실시예에서는, 컴퓨터 프로그램의 일부 또는 전부는 ROM 및/또는 통신 유닛을 거쳐 전자 기기에 로딩 및/또는 설치될 수 있다. 컴퓨터 프로그램 이 RAM에 로딩되어 컴퓨팅 유닛에 의해 실행될 경우, 위에서 설명한 마이크로서비스 구성 방법의 하나 또는 복수의 단계를 실행할 수 있다. 선택적으로, 기타 실시예에서는, 컴퓨팅 유닛은 기타 임의의 적합한 방식(예를 들면, 펌웨어를 이용함)을 통해 마이크로서비스 구성 방법을 실행하도록 구성될 수 있다. 본 문에서 상기 설명한 시스템 및 기술의 다양한 실시형태는 디지털 전자 회로 시스템, 집적 회로 시스템, 현장 프로그래밍 가능 게이트 어레이(FPGA), 전용 집적 회로(ASIC), 전용 표준 제품(ASSP), 시스템 온 칩 시스템 (SOC), 복합 프로그래밍 가능 로직 디바이스(CPLD), 컴퓨터 하드웨어, 펌웨어, 소프트웨어 및/또는 이들의 조합 에서 실현될 수 있다. 상기 다양한 실시형태는 다음과 같은 내용을 포함할 수 있다. 하나 또는 복수의 컴퓨터 프로그램에서 실시되고, 상기 하나 또는 복수의 컴퓨터 프로그램은 적어도 하나의 프로그래밍 가능 프로세서를 포함하는 프로그래밍 가능 시스템에서 실행 및/또는 해석될 수 있다. 상기 프로그래밍 가능 프로세서는 전용 또 는 범용 프로그래밍 가능 프로세서일 수 있으며, 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치로부터 데이터 및 명령어를 수신하며, 또한 상기 저장 시스템, 적어도 하나의 입력 장치 및 적어도 하나의 출력 장치에 데이터 및 명령어를 전송할 수 있다. 본 개시의 방법을 실시하는 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 조합을 적용하여 작성 할 수 있다. 프로그램 코드가 프로세서 또는 컨트롤러에 의해 실행될 시 흐름도 및/또는 블록도에서 규정된 기 능/동작이 실시되도록, 이러한 프로그램 코드를 범용 컴퓨터, 전용 컴퓨터 또는 기타 프로그래밍 가능 데이터 처리 장치의 프로세서 또는 컨트롤러에 제공할 수 있다. 프로그램 코드는 완전히 기계에서 실행되거나, 부분적 으로 기계에서 실행되거나, 개별적인 소프트웨어 패키지(Software Package)로서 부분적으로 기계에서 실행되며, 부분적으로 원격 기계에서 실행되거나, 완전히 원격 기계 또는 서버에서 실행될 수 있다. 본 개시의 콘텍스트에서는, 기계 판독가능 매체는 유형적인 매체일 수 있다. 상기 기계 판독가능 매체에는, 명 령어 실행 시스템, 장치 또는 기기에 사용되거나 또는 명령어 실행 시스템, 장치 또는 기기와 결합하여 사용되 게금 제공되는 프로그램이 포함되거나 저장될 수 있다. 기계 판독가능 매체는 기계 판독가능 신호 매체 또는 기 계 판독가능 저장 매체일 수 있다. 기계 판독가능 매체에는, 전자, 자성, 광학, 전자기, 적외선 또는 반도체 시 스템, 장치 또는 기기, 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있지만 이에 한정되는 것은 아니다. 기계 판독가능 저장 매체의 더 구체적인 예시에는 하나 또는 복수의 와이어에 의한 전기적인 연결, 휴대용 컴퓨 터 디스크, 하드디스크, 랜덤 액세스 메모리(RAM), 리드 온리 메모리(ROM), 소거 가능 및 프로그램 가능 리드 온리 메모리(EPROM 또는 플래시 메모리), 광섬유，휴대용 콤팩트 디스크 리드 온리 메모리(CD-ROM), 광학 저장 장치, 자기 저장 장치 또는 상기 내용의 임의의 적합한 조합이 포함될 수 있다. 사용자와의 인터랙션을 제공하기 위해, 여기에서 설명하는 시스템과 기술을 컴퓨터에서 실행할 수 있다. 상기 컴퓨터는 사용자에게 정보를 표시하는 디스플레이 장치(예를 들면, CRT(음극선관) 또는 LCD(액정 디스플레이) 모니터) 및 키보드, 포인팅 장치(예를 들면, 마우스 또는 트랙 볼)를 포함한다. 사용자는 상기 키보드 및 포인 팅 장치를 통해 입력을 컴퓨터에 제공한다. 기타 종류의 장치는 사용자와의 인터랙션을 제공하기 위해 사용될 수도 있다. 예를 들면, 사용자에게 제공하는 피드백은 임의의 형태의 센싱 피드백(예를 들면, 시각 피드백, 청 각 피드백 또는 촉각 피드백)일 수 있으며, 또한 사용자로부터의 입력은 임의의 형태(소리 입력, 음성 입력, 또 는 촉각 입력을 포함)로 수신될 수 있다. 여기에서 설명하는 시스템 및 기술을 백그라운드 부품을 포함하는 컴퓨팅 시스템(예를 들면, 데이터 서버), 또 는 미들웨어 부품을 포함하는 컴퓨팅 시스템(예를 들면, 애플리케이션 서버), 또는 프론트 부품을 포함하는 컴 퓨팅 시스템(예를 들면, 그래픽 유저 인터페이스 또는 웹 브라우저를 구비하는 사용자 컴퓨터, 사용자는 상기 그래픽 유저 인터페이스 또는 웹 브라우저를 통해 여기에서 설명하는 시스템 및 기술의 실시형태와 인터랙션을 진행할 수 있음), 또는 상기 백그라운드 부품, 미들웨어 부품 또는 프론트 부품의 임의의 조합을 포함하는 컴퓨 팅 시스템에서 실행할 수 있다. 임의의 형태 또는 매체의 디지털 데이터 통신(예를 들면, 통신 네트워크)을 통 해 시스템의 부품을 서로 연결할 수 있다. 통신 네트워크의 예시는 근거리 통신망（LAN）, 광대역 통신망(WAN) 및 인터넷을 포함한다. 컴퓨터 시스템은 클라이언트 및 서버를 포함한다. 클라이언트 및 서버는 일반적으로 서로 멀리 떨어져 있으며, 통신망을 통해 인터랙션을 진행한다. 해당 컴퓨터에서 실행되고, 또한 서로 클라이언트-서버 관계를 갖는 컴퓨 터 프로그램을 통해 클라이언트 및 서버의 관계를 생성한다. 상기의 다양한 형태의 프로세스를 이용하여, 단계를 다시 순서 배열, 추가 또는 삭제할 수 있음을 이해해야 한 다. 예를 들면, 본 개시에 기재된 각 단계는 병행하여 실행할 수 있고, 순서대로 실행할 수도 있으며, 서로 다 른 순서로 실행할 수도 있는데, 본 개시에 의해 개시되는 해결수단이 기대하는 결과를 실현할 수만 있다면, 이 에 대해 제한하지 않는다. 상기 구체적인 실시형태는 본 개시의 보호 범위에 대해 제한하지 않는다. 당업자는 설계 요구와 기타 요인에 따 라 다양한 수정, 조합, 서브 조합 및 대체를 진행할 수 있음을 이해해야 한다. 본 개시의 사상 및 원칙 내에서 진행되는 수정, 균등한 교체 및 개선 등은 모두 본 개시의 보호 범위에 포함되어야 한다."}
{"patent_id": "10-2022-7034296", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시에 따른 트랜잭션 클러스터에 응용되는 마이크로서비스 구성 방법의 흐름도이다. 도 2는 본 개시에 따른 서비스 데이터 획득 요청을 송신하는 흐름도이다. 도 3은 본 개시에 따른 서비스 데이터가 변경된 지 여부를 결정하는 흐름도이다. 도 4는 본 개시에 따른 서비스 거버넌스 태스크를 실행하는 흐름도이다. 도 5는 본 개시에 따른 메인 클러스터에 응용되는 마이크로서비스 구성 방법의 흐름도이다. 도 6은 본 개시에 따른 서비스 데이터를 송신하는 흐름도이다. 도 7은 본 개시에 따른 구성 데이터를 송신하는 흐름도이다. 도 8은 본 개시에 따른 트랜잭션 클러스터에 대응되는 마이크로서비스 구성 장치의 예시도이다. 도 9는 본 개시에 따른 메인 클러스터에 대응되는 마이크로서비스 구성 장치의 예시도이다. 도 10은 본 개시에 따른 마이크로서비스 시스템의 예시도이다. 도 11은 본 개시 실시예의 마이크로서비스 구성 방법을 실현하는 전자 기기의 블록도이다."}
