{"patent_id": "10-2023-0033143", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0139308", "출원번호": "10-2023-0033143", "발명의 명칭": "소프트웨어 품질검사 항목을 자동으로 설정하기 위해 인공지능을 이용하여 품질검사 범위를", "출원인": "라인플러스 주식회사", "발명자": "김영재"}}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 장치에서 실행되는 소프트웨어의 품질검사 범위 검출 방법에 있어서,상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를포함하고,상기 품질검사 범위 검출 방법은, 상기 적어도 하나의 프로세서에 의해, 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기설정된 품질검사 항목 중 상기 소스코드를 위한 품질검사 항목을 설정하는 단계를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 인공지능 모델은, 소스코드 또는 소스코드의 변경사항을 학습함에 따라 상기 기설정된 품질검사 항목마다소스코드와의 관계 정보를 확률값으로 출력하도록 구축된 것을 특징으로 하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 설정하는 단계는,상기 소프트웨어의 소스코드와 상기 기설정된 품질검사 항목을 인공지능 모델에 입력하는 단계를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 설정하는 단계는,상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과데이터에 기초하여 상기 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품질검사 항목을 설정하여상기 소프트웨어를 위한 품질검사 범위를 추출하는 단계 를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 설정하는 단계는,상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과데이터를 획득하는 단계; 및상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시하는 단계를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,공개특허 10-2024-0139308-3-상기 표시하는 단계는,상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터에 기초하여 개별 품질검사 항목의 중요도 또는기 설정된 척도를 표시하는 것을 특징으로 하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제5항에 있어서,상기 표시하는 단계는, 소스코드의 변경사항이 있는 품질검사 항목에 시각적 표현을 표시하는 것을 특징으로 하는 품질검사 범위 검출방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 설정하는 단계는, 상기 기설정된 품질검사 항목에 대응하지 않는 소스코드에 대해 새로운 품질검사 항목의 추가를 제안하는 단계를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 소스코드 또는 변경사항이 발생한 소스코드마다 소스코드 참조 식별자가 부여되는 것을 특징으로 하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 설정하는 단계는, 상기 기설정된 품질검사 항목 각각에 대응되는 소스코드의 소스코드 참조 식별자에 소스코드의 변경 여부를 나타내는 표식을 추가하는 단계 를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서,상기 기설정된 품질검사 항목마다 품질검사 참조 식별자가 부여되는 것을 특징으로 하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제1항에 있어서,상기 설정하는 단계는, 상기 기설정된 품질검사 항목을 구성하는 각 단계 중 소스코드의 변경사항과 관련있는 단계를 소스코드 참조 식별자로 표시하는 단계 를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,공개특허 10-2024-0139308-4-상기 설정하는 단계는, 상기 표시된 소스코드 참조 식별자가 선택됨에 따라 상기 소스코드의 변경사항과 관련된 단계에 대응되는 소스코드를 포함하는 링크를 제공하는 단계를 더 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제1항에 있어서,상기 설정하는 단계는, 상기 인공지능 모델로부터 출력된 확률 결과 데이터에 대한 피드백 정보를 입력하기 위한 유저 인터페이스를 제공하는 단계; 및상기 제공된 유저 인터페이스를 통해 사용자로부터 입력된 피드백 정보를 반영하여 상기 소프트웨어를 위한 품질검사 항목을 설정하는 단계를 포함하는 품질검사 범위 검출 방법."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제1항 내지 제14항 중 어느 한 항의 품질검사 범위 검출 방법을 상기 컴퓨터 장치에 실행시키기 위해 비-일시적인 컴퓨터 판독가능한 기록 매체에 저장되는 컴퓨터 프로그램."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제1항 내지 제14항 중 어느 한 항의 품질검사 범위 검출 방법을 컴퓨터에 실행시키기 위한 프로그램이 기록되어있는 비-일시적인 컴퓨터 판독 가능한 기록매체."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "컴퓨터 장치에 있어서, 상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를포함하고,상기 적어도 하나의 프로세서는, 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기설정된 품질검사 항목 중 상기 소스코드를 위한 품질검사 항목을 설정하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 인공지능 모델은, 소스코드 또는 소스코드의 변경사항을 학습함에 따라 상기 기설정된 품질검사 항목마다소스코드와의 관계 정보를 확률값으로 출력하도록 구축된 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서,상기 소스코드를 위한 품질검사 항목을 설정하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과데이터에 기초하여 상기 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품질검사 항목을 설정하여상기 소프트웨어를 위한 품질검사 범위를 추출하는 것공개특허 10-2024-0139308-5-을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0033143", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서,상기 소스코드를 위한 품질검사 항목을 설정하기 위해, 상기 적어도 하나의 프로세서에 의해,상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과데이터를 획득하고,상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "소프트웨어 품질검사 항목을 자동으로 설정하기 위해 인공지능을 이용하여 품질검사 범위를 검출하는 방법, 컴퓨 터 장치, 및 컴퓨터 프로그램이 개시된다. 일 실시예에 따른 컴퓨터 장치에서 실행되는 소프트웨어의 품질검사 범위 검출 방법은, 상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 상기 품질검사 범위 검출 방법은, 상기 적어도 하나의 프로세서에 의해, 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기설정된 품질검사 항목 중 상기 소스코드를 위한 품질검사 항 목을 설정하는 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 품질검사의 효율을 향상시키는 기술에 관한 것이다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "현대 사회에서의 소프트웨어 개발 과정은 소프트웨어 개발자가 구현 목록을 보며 소스코드를 작성하고 형상관리 도구에 저장하면, 품질검사자가 구현 목록에 따른 품질검사 항목을 보며 기대하는 결과대로 소스코드로부터 변 환된 산출물이 동작하는지를 검사하고, 의도대로 동작하면 통과를, 그렇지 않으면 실패를 통보한다. 소프트웨어 개발자는 실패한 품질검사 항목이 통과할 수 있도록 소스코드를 수정하고, 다시 형상관리 도구에 저장한 후, 산 출물을 품질검사자에게 전달한다. 품질검사자는 새로운 산출물로 품질검사를 수행한 후에, 통과 기준에 합당하 면 품질검사에 통과되었음을 결과로 통보한다. 한편, 대한민국 등록특허 제10-2145821(등록일 2020.08.12.)호에 인공지능을 이용하여 서비스 플랫폼을 테스트 하는 기술이 개시되어 있다. 그러나, 종래의 기술은 작은 변경사항이 발생하였을 경우에도 모든 품질검사 항목 에 대해 품질검사를 수행해야 하므로 품질검사 항목을 테스트하는 시간과 프로세싱 비용을 절감하지 못한다는 한계가 있다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 품질검사 항목을 자동으로 설정할 수 있다. 모든 품질검사 항목에 대한 소스코드의 품질검사를 수행하지 않고도, 인공지능 모델을 통해 설정된 품질검사 항 목에 대해서만 소스코드의 품질검사를 수행할 수 있다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "컴퓨터 장치에서 실행되는 소프트웨어의 품질검사 범위 검출 방법에 있어서, 상기 컴퓨터 장치는 메모리에 포함 된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 상기 품질검사 범위 검 출 방법은, 상기 적어도 하나의 프로세서에 의해, 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기 설정된 품질검사 항목 중 상기 소스코드를 위한 품질검사 항목을 설정하는 단계를 포함할 수 있다. 상기 인공지능 모델은, 소스코드 또는 소스코드의 변경사항을 학습함에 따라 상기 기설정된 품질검사 항목마다 소스코드와의 관계 정보를 확률값으로 출력하도록 구축된 것일 수 있다. 상기 설정하는 단계는, 상기 소프트웨어의 소스코드와 상기 기설정된 품질검사 항목을 인공지능 모델에 입력하 는 단계를 포함할 수 있다. 상기 설정하는 단계는, 상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과 데이터에 기초하여 상기 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품 질검사 항목을 설정하여 상기 소프트웨어를 위한 품질검사 범위를 추출하는 단계를 포함할 수 있다. 상기 설정하는 단계는, 상기 인공지능 모델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과 데이터를 획득하는 단계; 및 상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시하는 단계를 포함할 수 있다. 상기 표시하는 단계는, 상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터에 기초하여 개별 품질 검사 항목의 중요도 또는 기 설정된 척도를 표시하는 것일 수 있다. 상기 표시하는 단계는, 소스코드의 변경사항이 있는 품질검사 항목에 시각적 표현을 표시하는 것일 수 있다. 상기 설정하는 단계는, 상기 기설정된 품질검사 항목에 대응하지 않는 소스코드에 대해 새로운 품질검사 항목의 추가를 제안하는 단계를 포함할 수 있다. 상기 소스코드 또는 변경사항이 발생한 소스코드마다 소스코드 참조 식별자가 부여되는 것일 수 있다. 상기 설정하는 단계는, 상기 기설정된 품질검사 항목 각각에 대응되는 소스코드의 소스코드 참조 식별자에 소스 코드의 변경 여부를 나타내는 표식을 추가하는 단계를 포함할 수 있다. 상기 기설정된 품질검사 항목마다 품질검사 참조 식별자가 부여되는 것일 수 있다. 상기 설정하는 단계는, 상기 기설정된 품질검사 항목을 구성하는 각 단계 중 소스코드의 변경사항과 관련있는 단계를 소스코드 참조 식별자로 표시하는 단계를 포함할 수 있다. 상기 설정하는 단계는, 상기 표시된 소스코드 참조 식별자가 선택됨에 따라 상기 소스코드의 변경사항과 관련된 단계에 대응되는 소스코드를 포함하는 링크를 제공하는 단계를 포함할 수 있다. 상기 설정하는 단계는, 상기 인공지능 모델로부터 출력된 확률 결과 데이터에 대한 피드백 정보를 입력하기 위 한 유저 인터페이스를 제공하는 단계; 및 상기 제공된 유저 인터페이스를 통해 사용자로부터 입력된 피드백 정 보를 반영하여 상기 소프트웨어를 위한 품질검사 항목을 설정하는 단계를 포함할 수 있다. 품질검사 범위 검출 방법을 상기 컴퓨터 장치에 실행시키기 위해 비-일시적인 컴퓨터 판독가능한 기록 매체에 저장되는 컴퓨터 프로그램을 포함할 수 있다. 품질검사 범위 검출 방법을 컴퓨터에 실행시키기 위한 프로그램이 기록되어 있는 비-일시적인 컴퓨터 판독 가능 한 기록매체를 포함할 수 있다. 컴퓨터 장치에 있어서, 상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적 어도 하나의 프로세서를 포함하고, 상기 적어도 하나의 프로세서는, 인공지능 모델을 이용한 소스코드의 변경사 항 분석을 통해 기설정된 품질검사 항목 중 상기 소스코드를 위한 품질검사 항목을 설정하는 것일 수 있다. 상기 인공지능 모델은, 소스코드 또는 소스코드의 변경사항을 학습함에 따라 상기 기설정된 품질검사 항목마다 소스코드와의 관계 정보를 확률값으로 출력하도록 구축된 것일 수 있다. 상기 소스코드를 위한 품질검사 항목을 설정하기 위해, 상기 적어도 하나의 프로세서에 의해, 상기 인공지능 모 델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과 데이터에 기초하 여 상기 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품질검사 항목을 설정하여 상기 소프트웨 어를 위한 품질검사 범위를 추출하는 것일 수 있다. 상기 소스코드를 위한 품질검사 항목을 설정하기 위해, 상기 적어도 하나의 프로세서에 의해, 상기 인공지능 모 델이 출력하는 상기 소스코드와 상기 기설정된 품질검사 항목간의 관계 정보에 대한 확률 결과 데이터를 획득하 고, 상기 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시하는 것일 수 있다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 필요한 품질검사 항목만을 설정함으로써 품질검사에 소요되는 시간과 비용을 절감하여 품질검사 효율을 향상시킬 수 있다. 품질검사자는 소스코드에 접근할 수 없는 상황에서도 소스코드의 변경으로 인한 오류를 소스코드 참조 식별자를 이용하여 보고할 수 있으며, 소프트웨어 개발자는 소스코드 참조 식별자를 통해 보다 빠르게 오류의 원인을 파 악할 수 있다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예를 첨부한 도면을 참조하여 상세히 설명한다. 실시예에서는 품질검사 항목을 자동으로 설정하는 기술에 대하여 설명하기로 한다. 본 명세서에서 구체적으로 개시되는 것들을 포함하는 실시예들은 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기설정된 품질검사 항목 중 소스코드를 위한 품질검사 항목을 자동으로 설정할 수 있다. 본 발명의 실시예들에 따른 품질검사 범위 검출 시스템은 적어도 하나의 컴퓨터 장치에 의해 구현될 수 있으며, 본 발명의 실시예들에 따른 품질검사 범위 검출 방법은 품질검사 범위 검출 시스템에 포함되는 적어도 하나의 컴퓨터 장치를 통해 수행될 수 있다. 이때, 컴퓨터 장치에는 일 실시예에 따른 컴퓨터 프로그램이 설치 및 구동 될 수 있고, 컴퓨터 장치는 구동된 컴퓨터 프로그램의 제어에 따라 실시예들에 따른 품질검사 범위 검출 방법을 수행할 수 있다. 상술한 컴퓨터 프로그램은 컴퓨터 장치와 결합되어 품질검사 범위 검출 방법을 컴퓨터에 실행 시키기 위해 컴퓨터 판독 가능한 기록매체에 저장될 수 있다. 도 1은 일 실시예에 있어서, 네트워크 환경의 예를 도시한 도면이다. 도 1의 네트워크 환경은 복수의 전자 기기 들(110, 120, 130, 140), 복수의 서버들(150, 160) 및 네트워크를 포함하는 예를 나타내고 있다. 이러한 도 1은 발명의 설명을 위한 일례로 전자 기기의 수나 서버의 수가 도 1과 같이 한정되는 것은 아니다. 또한, 도 1의 네트워크 환경은 본 실시예들에 적용 가능한 환경들 중 하나의 예를 설명하는 것일 뿐, 본 실시예들에 적용 가능한 환경이 도 1의 네트워크 환경으로 한정되는 것은 아니다. 복수의 전자 기기들(110, 120, 130, 140)은 컴퓨터 장치로 구현되는 고정형 단말이거나 이동형 단말일 수 있다. 복수의 전자 기기들(110, 120, 130, 140)의 예를 들면, 스마트폰(smart phone), 휴대폰, 내비게이션, 컴퓨터, 노트북, 디지털방송용 단말, PDA(Personal Digital Assistants), PMP(Portable Multimedia Player), 태블릿 PC 등이 있다. 일례로 도 1에서는 전자 기기의 예로 스마트폰의 형상을 나타내고 있으나, 실시예들에서 전자 기기는 실질적으로 무선 또는 유선 통신 방식을 이용하여 네트워크를 통해 다른 전자 기기들(120, 130, 140) 및/또는 서버(150, 160)와 통신할 수 있는 다양한 물리적인 컴퓨터 장치들 중 하나를 의미할 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망)을 활용하는 통신 방식뿐만 아니라 기기들 간의 근거리 무선 통신 역시 포함될 수 있다. 예를들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus area network), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네트워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포함하는 네트 워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으나, 이에 제한되지 않는다. 서버(150, 160) 각각은 복수의 전자 기기들(110, 120, 130, 140)과 네트워크를 통해 통신하여 명령, 코드, 파일, 콘텐츠, 서비스 등을 제공하는 컴퓨터 장치 또는 복수의 컴퓨터 장치들로 구현될 수 있다. 예를 들 어, 서버는 네트워크를 통해 접속한 복수의 전자 기기들(110, 120, 130, 140)로 서비스(일례로, 품질 검사 범위 검출 서비스 등)를 제공하는 시스템일 수 있다. 도 2는 일 실시예에 있어서, 컴퓨터 장치의 예를 도시한 블록도이다. 앞서 설명한 복수의 전자 기기들(110, 120, 130, 140) 각각이나 서버들(150, 160) 각각은 도 2를 통해 도시된 컴퓨터 장치에 의해 구현될 수 있 다. 이러한 컴퓨터 장치는 도 2에 도시된 바와 같이, 메모리, 프로세서, 통신 인터페이스 그리 고 입출력 인터페이스를 포함할 수 있다. 메모리는 컴퓨터에서 판독 가능한 기록매체로서, RAM(random access memory), ROM(read only memory) 및 디스크 드라이브와 같은 비소멸성 대용량 기록장치 (permanent mass storage device)를 포함할 수 있다. 여기서 ROM과 디스크 드라이브와 같은 비소멸성 대용량 기록장치는 메모리와는 구분되는 별도의 영구 저장 장치로서 컴퓨터 장치에 포함될 수도 있다. 또한, 메모리에는 운영체제와 적어도 하나의 프로그램 코드가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로부터 메모리로 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 플로피 드라이브, 디스크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 실시예에서 소프트웨어 구성요소들은 컴퓨터에서 판 독 가능한 기록매체가 아닌 통신 인터페이스를 통해 메모리에 로딩될 수도 있다. 예를 들어, 소프트 웨어 구성요소들은 네트워크를 통해 수신되는 파일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 컴퓨터 장치의 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 인터페이스에 의해 프로세서로 제공될 수 있다. 예를 들어 프로세서는 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행하도 록 구성될 수 있다. 통신 인터페이스는 네트워크를 통해 컴퓨터 장치가 다른 장치(일례로, 앞서 설명한 저장 장치들)와 서로 통신하기 위한 기능을 제공할 수 있다. 일례로, 컴퓨터 장치의 프로세서가 메모리 와 같은 기록 장치에 저장된 프로그램 코드에 따라 생성한 요청이나 명령, 데이터, 파일 등이 통신 인터페 이스의 제어에 따라 네트워크를 통해 다른 장치들로 전달될 수 있다. 역으로, 다른 장치로부터의 신 호나 명령, 데이터, 파일 등이 네트워크를 거쳐 컴퓨터 장치의 통신 인터페이스를 통해 컴퓨터 장치로 수신될 수 있다. 통신 인터페이스를 통해 수신된 신호나 명령, 데이터 등은 프로세서나 메모리로 전달될 수 있고, 파일 등은 컴퓨터 장치가 더 포함할 수 있는 저장 매체(상술한 영구 저장 장치)로 저장될 수 있다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 입력 장치는 마이크, 키보드 또는 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피커와 같은 장치를 포함할 수 있 다. 다른 예로 입출력 인터페이스는 터치스크린과 같이 입력과 출력을 위한 기능이 하나로 통합된 장치와 의 인터페이스를 위한 수단일 수도 있다. 입출력 장치는 컴퓨터 장치와 하나의 장치로 구성될 수도 있다. 또한, 다른 실시예들에서 컴퓨터 장치는 도 2의 구성요소들보다 더 적은 혹은 더 많은 구성요소들을 포함 할 수도 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 예를 들어, 컴퓨터 장치는 상술한 입출력 장치 중 적어도 일부를 포함하도록 구현되거나 또는 트랜시버(transceiver), 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수도 있다. 이하에서는 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 품질검사가 필요한 품질검사 항목만 추출 하여 품질검사에 소요되는 시간과 비용을 절감하고 효율을 증가시키기 위한 품질검사 범위 검출 방법 및 장치의구체적인 실시예를 설명하기로 한다. 컴퓨터 장치의 프로세서는 이하의 품질검사 범위 검출 방법을 수행하기 위한 구성요소로 구현될 수 있다. 실시예에 따라 프로세서의 구성요소들은 선택적으로 프로세서에 포함되거나 제외될 수도 있다. 또한, 실시예에 따라 프로세서의 구성요소들은 프로세서의 기능의 표현을 위해 분리 또는 병합될 수 도 있다. 이러한 프로세서 및 프로세서의 구성요소들은 이하의 품질검사 범위 검출 방법이 포함하는 단계들을 수행하도록 컴퓨터 장치를 제어할 수 있다. 예를 들어, 프로세서 및 프로세서의 구성요소들은 메모리가 포함하는 운영체제의 코드와 적어도 하나의 프로그램의 코드에 따른 명령(instruction)을 실행하 도록 구현될 수 있다. 여기서, 프로세서의 구성요소들은 컴퓨터 장치에 저장된 프로그램 코드가 제공하는 명령에 따라 프로 세서에 의해 수행되는 서로 다른 기능들(different functions)의 표현들일 수 있다. 프로세서는 컴퓨터 장치의 제어와 관련된 명령이 로딩된 메모리로부터 필요한 명령을 읽어들일 수 있다. 이 경우, 상기 읽어들인 명령은 프로세서가 이후 설명될 단계들을 실행하도록 제어하기 위한 명 령을 포함할 수 있다. 이후 설명될 품질검사 범위 검출 방법을 포함하는 단계들은 도시된 순서와 다른 순서로 수행될 수 있으며, 단계 들 중 일부가 생략되거나 추가의 과정이 더 포함될 수 있다. 도 3은 일 실시예에 있어서, 컴퓨터 장치가 수행할 수 있는 방법의 일례를 도시한 흐름도이다. 단계(S310)에서 프로세서는 인공지능 모델을 이용한 소스코드의 변경사항 분석을 통해 기설정된 품질검사 항목 중 소스코드를 위한 품질검사 항목을 설정할 수 있다. 프로세서는 소프트웨어의 소스코드와 기설정된 품질검사 항목을 인공지능 모델에 입력할 수 있다. 프로세서는 인공지능 모델이 출력하는 소스코드와 기설 정된 품질검사 항목간의 관계 정보에 대한 확률 결과 데이터에 기초하여 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품질검사 항목을 설정하여 소프트웨어를 위한 품질검사 범위를 자동으로 추출할 수 있다. 또한, 프로세서는 인공지능 모델이 출력하는 소스코드와 기설정된 품질검사 항목간의 관계 정보에 대한 확 률 결과 데이터를 획득하고, 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시하여 수동으로 품질검사 범위를 조절하도록 할 수 있다. 예를 들면, 프로세서는 품질검사 항목의 추가, 삭제 및 필터링을 수행할 수 있다. 프로세서는 소스코드에 변경사항이 존재하지 않을 경우 품질검사가 필요하지 않는 품질검 사 항목을 소거할 수 있고, 소스코드에 변경사항이 존재할 경우 소스코드에 변경사항이 존재하는 품질검사 항목 만을 필터링할 수 있고, 기설정된 품질검사 항목에 대응하지 않는 소스코드 변경사항에 대해서 새로운 품질검사 항목을 추가하도록 제안할 수 있다. 프로세서는 품질검사 항목을 추가하기 위한 유저 인터페이스를 제공하 고, 제공된 유저 인터페이스를 통한 품질검사자의 품질검사 항목명의 입력을 통해 새로운 품질검사 항목을 추가 할 수 있다. 이에, 설정된 품질검사 항목과 관련하여 소스코드로부터 변환된 산출물(예를 들면, 소프트웨어 프 로그램)을 이용하여 품질검사가 수행됨으로써, 보다 짧은 시간 내에 품질검사를 수행되고 품질검사 결과의 정확 도가 향상될 수 있다. 도 4는 일 실시예에 있어서, 인공지능 모델의 학습 동작을 설명하기 위한 흐름도이다. 인공지능 기술은 21세기부터 통계학에서 출발한 분류 기술의 성능을 뛰어넘어서 이미지 인식, 음성 인식, 자연 어 처리에서 높은 성능이 입증되었다. 인공지능 기술에서 데이터를 학습(training)하는 방식을 모델이라고 하며, 다양한 알고리즘(예를 들면, ANN, CNN, DNN, GAN, RNN 등)으로 구성될 수 있다. 인공지능 모델은 데이터 를 이용하여 학습하기 위해 함수 층과 파라미터, 에포크(epoch)를 수정하면서 최적값을 탐색하는 과정을 수행함 에 따라 가장 높은 성능을 거두면 모델 데이터로 보존하여 유사한 목적의 데이터 처리에 활용할 수 있다. 프로 세서는 인공지능 모델을 파라미터와 역치로 이루어진 복수 개의 함수를 층(layer)으로 중첩하여 구성하고, 여러 차례 정답과 오답이 있는 데이터 셋으로 학습시키면서 각 함수의 고유값을 최적화할 수 있다. 프로세서는 소스코드 또는 소스코드의 변경사항을 학습할 수 있다(S410). 프로세서는 인공지능 모델 에 설정된 파라미터와 실행조건을 이용하여 소스코드 또는 소스코드의 변경사항을 학습할 수 있다. 프로세서 는 기 설정된 품질검사 항목마다 소스코드와의 관계 정보를 확률값으로 출력할 수 있다(S420). 이때, 프로 세서는 인공지능 모델에 입력 데이터를 입력하기 전에 전처리 과정을 수행할 수 있다. 예를 들면, 프로세 서는 인공지능 모델에 입력할 수 있는 데이터로 변환하기 위해 모든 입력 데이터를 0과 1사이의 범위로 조 정하는 정규화 과정을 수행할 수 있다. 또한, 프로세서는 인공지능 모델을 통해 출력된 결과 데이터에 대해 별도의 가공 방법을 적용하여 후처리 과정을 수행할 수 있다. 프로세서는 전처리 과정과 후처리 과정을 통해 결과의 정확도를 향상시킬 수 있다. 또한, 프로세서는 인공지능 모델이 지속적으로 발전하여 정확도 와 속도가 향상되는 것을 고려하여 인공지능 모델의 관리와 인공지능 모델을 실행하는 컴퓨터 자원을 관리할 수 도 있다. 실시예에서는 품질검사 항목을 자동으로 설정하기 위한 인공지능 모델을 자체적으로 학습시키는 동작에 대하여 설명하였으나, 또한, 별도로 외부에서 학습된 인공지능 모델을 적용할 수도 있다. 도 5는 일 실시예에 있어서, 인공지능 모델을 이용하여 품질검사 범위를 추출하는 동작을 설명하기 위한 도면이 다. 프로세서는 형상관리 도구로부터 소스코드를 입력받을 수 있다. 프로세서는 품질검사의 대상이 되는 소스코드를 판독 가능한 형태로 가공할 수 있다. 프로세서는 소스코드에 대해 기계어로 번역되어 컴 퓨터에서 실행할 수 있는 형태로 산출물을 변환할 수 있다. 프로세서는 소스코드에 숫자, 문자, 기호를 포 함하는 기 설정된 자리로 이루어진 소스코드 참조 식별자를 부여할 수 있다. 이에, 소스코드 참조 식별자는 소 스코드를 참조하도록 부여된 것일 수 있다. 예를 들면, 프로세서는 소스코드 또는 소스코드의 변경사항을 입력받을 수 있다. 프로세서는 소스코드 또는 변경사항이 있는 소스코드에 소스코드 참조 식별자를 부여할 수 있다. 이때, 소스코드 참조 식별자는 형상관리 도구로부터 입력된 식별자를 그대로 복 제하여 사용될 수 있고, 또는, 프로세서에서 생성한 고유값이 식별자로 사용될 수 있다. 프로세서는 형상관리 도구로부터 품질검사 항목을 입력받을 수 있다. 프로세서는 품질검사 항목 을 시스템 내부에 고유의 데이터 구조로 관리할 수 있다. 프로세서는 품질검사 항목에 숫자, 문자, 기호를 포함하는 기 설정된 자리로 이루어진 품질검사 참조 식별자를 부여할 수 있다. 이에, 품질검사 참조 식별자는 품질검사 항목을 참조하도록 부여된 것일 수 있다. 이때, 품질검사 참조 식별자는 품질검사 항목에서 미리 부여 된 식별자가 존재하는 경우, 동일한 식별자가 사용될 수 있고, 프로세서에서 생성한 고유값이 식별자로 사 용될 수 있다. 프로세서는 소스코드와 기설정된 품질검사 항목을 인공지능 모델에 입력할 수 있다. 프로 세서는 소스코드와 기설정된 품질검사 항목을 인공지능 모델에 입력 가능한 형태로 가공하 고, 가공된 소스코드와 기설정된 품질검사 항목을 인공지능 모델에 입력할 수 있다. 예를 들면, 인공지능 모델은 하나의 모델 또는 둘 이상의 모델로 구성되어 있을 수 있다. 프로세서는 하나의 모 델로 구성된 인공지능 모델을 통해 기설정된 품질검사 항목과 소스코드와의 관계 정보에 대한 확률 결과 데이터를 출력할 수 있다. 또는, 둘 이상의 모델로 구성된 인공지능 모델의 경우, 프로세 서는 각각의 모델로부터 기설정된 품질검사 항목과 소스코드와의 관계 정보에 대한 결과 데이터를 취합하 여 최종의 확률 결과 데이터를 출력할 수 있다. 프로세서는 출력된 확률 결과 데이터에 기초하여 소 스코드가 해당하는 기설정된 품질검사 범위를 도출할 수 있다. 프로세서는 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터를 표시할 수 있다. 프로 세서는 기 설정된 품질검사 항목 각각에 인공지능 모델로부터 출력된 기설정된 품질검사 항목 과 소스코드와의 관계 정보를 나타내는 확률 결과 데이터를 표시할 수 있다. 프로세서는 인공지능 모델에서 출력된 확률 결과 데이터에 기초하여 소스코드에 변경사항이 존재하는지 여 부를 판단할 수 있다. 예를 들면, 프로세서는 인공지능 모델에서 출력된 확률 결과 데이터(54 0)에 기초하여 소스코드 및 기설정된 품질검사 항목과 비교하여 소스코드에 변경사항이 존재하 는지 여부를 판단할 수 있다. 프로세서는 프로세서는 기설정된 품질검사 항목이 소스코드 의 어느 지점과 연관되어 있는지 관계 정보를 파악할 수 있다. 프로세서는 기설정된 품질검사 항목 중 소스코드의 변경사항에 대응하는 품질검사 항목을 설정할 수 있다. 프로세서는 소프트 웨어를 위한 포함하는 품질검사 범위를 추출할 수 있다. 실시예에서 인공지능 모델을 이용하여 품질검사 항목과 소스코드와의 관계 정보에 기초하여 소스코드 변경사항 을 판단하는 것은 일종의 정적분석 부류에 속한다고 볼 수 있으나, 동적분석의 경우에도 적용 가능하다. 예를 들면, 특정 품질검사 항목을 실행하였을 때 과거의 버전과는 달리 새로운 버전에서 과도하게 컴퓨터 리소스가 사용되었다면 품질검사 항목과 연계된 소스코드의 변경지점이 기인으로 간주되어 품질검사 결과 보고서에 원인 이 설명될 수 있다. 도 6은 일 실시예에 있어서, 소스코드의 변경사항 분석을 통해 출력되는 결과 데이터를 설명하기 위한 도면이다. 기설정된 품질검사 항목마다 대응되는 소스코드 참조 식별자가 존재할 수 있다. 소스코드 참조 식별 자는 적어도 하나 이상의 소스코드를 참조할 수 있다. 프로세서는 기설정된 품질검사 항목 각각에 대응되는 소스코드의 소스코드 참조 식별자에 소스코드의 변경 여부를 나타내는 표식을 추가 할 수 있다. 프로세서는 소스코드 참조 식별자에 대한 표식을 통해 소스코드의 변경 여부를 표 시할 수 있다. 예를 들면, 프로세서는 '*' 표식을 통해 소스코드가 이전의 품질검사에서 변경되었음을 표 시할 수 있다. 프로세서는 소스코드를 참조하는 소스코드 참조 식별자를 통해 소소코드 를 품질검사자에게 미노출할 수 있다. 프로세서는 인공지능 모델이 출력하는 소스코드와 기설정된 품질검사 항목간의 관계 정보에 대 한 확률 결과 데이터를 획득할 수 있다. 프로세서는 기 설정된 품질검사 항목 각각에 대응되는 확률 결과 데이터를 표시할 수 있다. 프로세서는 확률 결과 데이터에 기초하여 품질검사의 수행 여부를 제공할 수 있다. 예를 들면, 프로세서는 품질검사 1의 확률 결과 데이터를 99.9%, 품질검사 3의 확률 결과 데이터를 1.3%로 표시할 수 있다. 프로세서는 품질검사 1의 경우, 소스코드에 대부분 변경 사항이 존재하는 것으로 판단하여 품질검사를 수행해야 함을 통보할 수 있고, 품질검사 3의 경우 소스코드 에 변경사항이 거의 존재하지 않는 것으로 판단하여 품질검사를 수행할 필요가 없음을 통보할 수 있다. 또 한, 프로세서는 소스코드에 변경사항이 존재하지만, 기 설정된 품질검사 항목에 대응하지 않는 소스코드에 대해 품질검사 누락과 관련된 정보를 제공할 수 있다. 프로세서는 품질검사자에게 품질검사 항목을 보강하도록 새로운 품질검사 항목의 추가를 제안할 수 있다. 예를 들면, 프로세서는 품질 검사자에게 새로운 품질검사 항목을 추가하도록 메시지를 출력할 수 있다. 도 7은 일 실시예에 있어서, 품질검사 항목에 출력되는 결과 데이터를 설명하기 위한 도면이다. 실시예에서는 '이메일로 로그인이 가능하다'와 회원가입 버튼을 누르면 회원가입 서식을 출력한다'는 각각의 품 질검사 항목을 예를 들어 설명하기로 한다. 이하, '이메일로 로그인이 가능하다'는 품질검사 항목을 품질검사 항목 A, '회원가입 서식을 출력한다'는 품질검사 항목을 품질검사 항목 B라고 기재하기로 한다. 품질검사 항목의 각각에는 적어도 하나 이상의 품질검사 단계를 포함하며, 각 단계는 품질검사자 또는 기계나 자동화 소프트웨어에 의해 수행될 수 있다. 프로세서는 품질검사 항목의 각각에 품질검사 참조 식별자 을 부여할 수 있다. 예를 들면, 품질검사 항목 A에는 이메일로 로그인을 수행하기 위한 각 단계별 절차가 설정되어 있을 수 있다. 간략하게, 품질검사 항목 A은 페이지로 이동하는 1단계, 이메일 주소를 입력하는 2단계, 패스워 드를 입력하는 3단계, 로그인 버튼을 누르는 4단계 및 로그인 성공 유무를 출력하는 결과로 구성될 수 있다. 또한, 품질검사 항목 B에는 회원가입 버튼을 누르는 회원가입 서식을 출력하기 위한 각 단계별 절차가 설 정되어 있을 수 있다. 간략하게, 품질검사 항목 B은 페이지로 이동하는 1단계, 회원가입 버튼을 클릭하는 2단계, 회원가입 페이지를 출력하는 3단계 및 회원가입 페이지의 표시 유무를 출력하는 결과로 구성될 수 있다. 프로세서는 품질검사 항목의 일부 영역에 품질검사 참조 식별자, 소스코드의 변경사항 여부 및 확률 결과 데이터를 제공할 수 있다. 프로세서는 기설정된 품질검사 항목이 소스코드의 변경사항과 얼마나 관계 있는지 확률 결과 데이터로 표시할 수 있다. 또한, 프로세서는 품질검사 항목 각각과 대 응하는 확률 결과 데이터에 기초하여 개별 품질검사 항목의 중요도 또는 기 설정된 척도를 표시할 수 있다. 예 를 들면, 프로세서는 확률 결과 데이터와 기 설정된 기준과의 비교를 통해 있음/없음으로 표현하거나, 확 률 결과 데이터가 포함되는 기 설정된 단계(예를 들면, 3단계)에 따라 신호등과 같이 서로 다른 색상으로 표현 하여 품질검사가 필요한 품질검사 항목을 제공할 수 있다. 품질검사자는 기설정된 품질검사 항목에 설정된 각 단계에 대해 품질검사를 기계적으로 수행할 수 있다. 프로세서는 기설정된 품질검사 항목을 구성하는 각 단계 중 소스코드의 변경사항과 밀접한 관련이 있는 단계를 소스코드의 소스코드 참조 식별자로 표시할 수 있다. 이러한 소스코드 참조 식별자로 인해 품질검사자는 소스코드를 모르는 상황(블랙박스 테스트)에서도 프로그램 개발자와 원활하게 커뮤니케이션할 수 있다. 또한, 프로세서는 소스코드 식별자를 클릭하였을 때 소스코드를 보이는 링크를 제공함으로써 화이트박스 테스트도 가능하도록 제공할 수 있다. 또한, 프로세서는 소스코드의 변경사항이 있는 품질검사 항목의 경우, 소스코드의 변경사항이 있는 품질검 사 항목에 시각적 표현을 표시할 수 있다. 프로세서는 소스코드의 변경사항이 있는 품질검사 항목에 배경 정보를 변경하거나 별도의 시각적 표현을 추가할 수 있다. 프로세서는 소스코드의 변경사항이 있는 품질검사 항목의 배경 정보와 소스코드의 변경사항이 없는 품질검사 항목의 배경 정보를 다르게 표시할 수 있다. 예를 들면, 프로세서는 품질검사 항목 A와 품질검사 항목 B의 배경 색상을 다르게 표시할 수 있다. 또는, 소스코드의 변경사항이 있는 품질검사 항목이 품질검사 항목 A이라면, 프로세서는 품질검사 항 목 A에 이모지, 블록 정보 등의 시각적 표현을 표시할 수 있다. 예를 들면, 프로세서는 품질검사 항 목 A에 블록 개수를 통해 중요도를 나타내는 블록 정보를 표시할 수 있다. 프로세서는 기설정된 품질 검사 항목 각각과 대응하는 확률 결과 데이터에 기초하여 중요도를 판단하고, 판단된 중요도에 대응되는 블록 개수를 포함하는 블록 정보를 품질검사 항목 A에 표시할 수 있다. 마찬가지로, 프로세서는 기설정된 품질검사 항목 각각과 대응하는 확률 결과 데이터에 기초하여 중요도를 판단하고, 판단된 중요도에 대응되는 이 모지 표정 또는 기 설정된 이모지 표정의 개수를 품질검사 항목 A에 표시할 수 있다. 이로 인해, 품질검사 자가 의미있는 품질검사 항목에 집중하게 함으로써 전체적인 품질검사의 작업 효율을 향상시킬 수 있다. 또한, 프로세서는 소스코드의 변경사항이 없는 이유 또한 확률적으로 표시할 수 있다. 프로세서는 품질검사 항목의 일부 영역에 유저 인터페이스를 제공할 수 있다. 인공지능 모델로 부터 출력된 확률 결과 데이터가 수치적으로만 표현되기 때문에 부정확한 결과가 존재할 수 있다. 프로세서 는 인공지능 모델로부터 출력된 확률 결과 데이터에 대한 피드백 정보를 입력하기 위한 유저 인터페이스 를 제공하고, 제공된 유저 인터페이스를 통해 사용자(예를 들면, 소프트웨어 개발자, 품질검사자 등)로부터 입력된 피드백 정보를 반영하여 인공지능 모델의 정확도를 향상시키는데 도움을 제공할 수 있다. 프 로세서는 피드백 정보를 반영하여 소프트웨어를 위한 품질검사 항목을 설정할 수 있다. 도 8은 일 실시예에 있어서, 품질검사 항목에 시각적 표현을 표시하는 동작을 설명하기 위한 도면이다. 프로세서는 소스코드의 변경사항이 있는 품질검사 항목의 경우, 소스코드의 변경사항이 있는 품질검사 항 목에 시각적 표현을 표시할 수 있다. 프로세서는 소스코드의 변경사항이 있는 품질검사 항목에 배경 정보를 변경하거나 별도의 시각적 표현을 추가할 수 있다. 프로세서는 품질검사 항목의 일부에 시각 적 표현을 추가하기 위한 별도의 영역을 구성할 수 있고, 구성된 별도의 영역에 시각적 표현을 추가적으로 표시할 수 있다. 또는, 프로세서는 소스코드의 변경사항이 있는 품질검사 항목을 시각적 표현으로 대 체하여 표시할 수 있다. 예를 들면, 프로세서는 소스코드의 변경사항이 있는 품질검사 항목에 특정 표시 (예를 들면, 아이콘)가 오버레이되는 시각적 표현을 추가할 수 있다. 프로세서는 사용자로부터 오버레이된 특정 표시에 위치됨에 따라 소스코드의 변경사항과 관련된 추가 상세 정보를 제공할 수 있다. 프로세서는 소스코드의 변경사항과 관련된 추가 상세 정보로서 소스코드 또는 확률 결과 데이터 제공 할 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 예를 들어, 프로세 서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨 터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 애플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 가상 장치(virtual equipment), 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터 는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 상기 컴퓨터 판독 가능 매체는 프로그램 명령, 데이터 파일, 데이터 구조 등을 단독으로 또는 조합하여 포함할 수 있다. 상기 매체에 기록되는 프로그램 명령은 실시예를 위하여 특별히 설계 되고 구성된 것들이거나 컴퓨터 소프트웨어 당업자에게 공지되어 사용 가능한 것일 수도 있다. 컴퓨터 판독 가 능 기록 매체의 예에는 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체(magnetic media), CD- ROM, DVD와 같은 광기록 매체(optical media), 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical media), 및 롬(ROM), 램(RAM), 플래시 메모리 등과 같은 프로그램 명령을 저장하고 수행하도 록 특별히 구성된 하드웨어 장치가 포함된다. 프로그램 명령의 예에는 컴파일러에 의해 만들어지는 것과 같은 기계어 코드뿐만 아니라 인터프리터 등을 사용해서 컴퓨터에 의해서 실행될 수 있는 고급 언어 코드를 포함한다."}
{"patent_id": "10-2023-0033143", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다."}
{"patent_id": "10-2023-0033143", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 있어서, 네트워크 환경의 예를 도시한 도면이다. 도 2는 일 실시예에 있어서, 컴퓨터 장치의 예를 도시한 블록도이다. 도 3은 일 실시예에 있어서, 컴퓨터 장치가 수행할 수 있는 방법의 일례를 도시한 흐름도이다. 도 4는 일 실시예에 있어서, 인공지능 모델의 학습 동작을 설명하기 위한 흐름도이다. 도 5는 일 실시예에 있어서, 인공지능 모델을 이용하여 품질검사 범위를 추출하는 동작을 설명하기 위한 도면이 다. 도 6은 일 실시예에 있어서, 소스코드의 변경사항 분석을 통해 출력되는 결과 데이터를 설명하기 위한 도면이다. 도 7은 일 실시예에 있어서, 품질검사 항목에 출력되는 결과 데이터를 설명하기 위한 도면이다. 도 8은 일 실시예에 있어서, 품질검사 항목에 시각적 표현을 표시하는 동작을 설명하기 위한 도면이다."}
