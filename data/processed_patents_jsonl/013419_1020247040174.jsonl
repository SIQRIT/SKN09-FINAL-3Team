{"patent_id": "10-2024-7040174", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0044184", "출원번호": "10-2024-7040174", "발명의 명칭": "캠리스 왕복 엔진 제어 시스템", "출원인": "어댑티브 캠리스 테크놀로지, 엘엘씨", "발명자": "신샤이머, 피터"}}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "캠리스 왕복 엔진에 있어서:왕복 피스톤을 수용하는 실린더;상기 실린더와 연관된 엔진 구성요소로서, 흡기 밸브, 배기 밸브, 점화 플러그, 연료 분사기 및 가변 압축 메커니즘으로 구성된 그룹에서 선택되는 상기 엔진 구성요소; 상기 엔진 구성요소에 연결된 액추에이터로서, 상기 엔진 구성요소의 작동을 제어하도록 구성된 상기 액추에이터;실린더 작동 속성에 대한 센서 데이터를 생성하도록 구성된 광학 센서; 및상기 광학 센서 및 액추에이터에 연결되는 제어기로서:상기 광학 센서로부터 상기 센서 데이터를 수신하고;원하는 엔진 작동 최적화와 연관된 액추에이터 명령 데이터를 생성하도록 훈련된 신경망을 사용하여 상기 센서데이터를 처리하고; 그리고상기 액추에이터 명령 데이터에 적어도 부분적으로 기반하여 상기 액추에이터의 작동을 개시하도록 구성된 상기제어기를 포함하는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 센서 데이터는 상기 실린더의 특정 사이클 동안 생성되고, 상기 액추에이터의 작동 개시는 상기 실린더의 상기 특정 사이클 동안 발생하는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 센서 데이터는 상기 실린더의 특정 4행정 사이클의 특정 행정 동안 생성되고, 상기 액추에이터의 작동 개시는 상기 실린더의 상기 특정 4행정 사이클의 상기 특정 행정 동안 발생하는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서, 상기 광학 센서는 레이저 흡수 분광 센서인, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서, 상기 센서 데이터는 레이저 흡수 분광 센서 데이터를 포함하고, 상기 센서 데이터가 나타내는상기 속성은 연료 조성, 에너지 함량, 온도, NOx 함량, UHC 함량, CO 함량, CO2 함량 및 H2O 함량으로 구성된그룹에서 선택되는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 광학 센서를 포함하는 복수의 광학 센서를 더 포함하고, 상기 복수의 광학 센서는:공개특허 10-2025-0044184-3-상기 실린더의 흡기구 내의 위치에 배치되어 상기 흡기구 내의 하나 이상의 유체 파라미터를 측정하는 제1 광학센서;상기 실린더 내의 위치에서 하나 이상의 유체 파라미터를 측정하도록 배치된 제2 광학 센서; 및상기 실린더의 배기구 내의 위치에 배치되어 상기 배기구 내의 하나 이상의 유체 파라미터를 측정하는 제3 광학센서를 포함하는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서, 네트워크를 통해 컴퓨팅 시스템으로 상기 센서 데이터를 전송하도록 구성된 네트워크 인터페이스를 더 포함하는, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서, 상기 네트워크 인터페이스는 상기 네트워크를 통해 상기 컴퓨팅 시스템으로부터 제2 신경망을수신하도록 더 구성되고, 상기 제어기는 상기 제어기의 메모리에서 상기 신경망을 상기 제2 신경망으로 대체하도록 더 구성된, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서, 상기 신경망을 사용하여 상기 센서 데이터를 처리하기 위해, 상기 제어기는:상기 센서 데이터에 변환을 적용하여 변환된 센서 데이터를 생성하되, 상기 변환된 센서 데이터는 특정 시점에서 상기 캠리스 왕복 엔진 상태의 특징을 나타내고; 상기 변환된 센서 데이터를 사용하여 입력 벡터를 생성하고; 그리고상기 신경망을 사용하여 상기 입력 벡터에 대한 포워드 패스를 수행하여 출력 벡터를 생성하며, 출력 벡터는 액추에이터 명령 데이터를 포함하도록 구성된, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서, 상기 제어기는:상기 액추에이터 명령 데이터를 기반으로 상기 엔진 구성요소의 파라미터에 대한 변경을 결정하고;상기 파라미터에 대한 상기 변경은 작동의 타이밍, 위상 및 지속시간으로 구성된 그룹에서 선택되고, 그리고상기 액추에이터의 작동 개시는 상기 엔진 구성요소의 상기 파라미터를 기반으로 하도록 더 구성된, 캠리스 왕복 엔진."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제1항에 있어서, 상기 제어기는:상기 광학 센서로부터 제2 센서 데이터를 수신하되, 상기 제2 센서 데이터는 상기 제어기가 상기 액추에이터 명령 데이터에 적어도 부분적으로 기반하여 상기 액추에이터의 작동을 개시한 후에 상기 광학 센서에 의해 생성되고; 상기 제2 센서 데이터를 기반으로 보상 값을 결정하고; 그리고상기 보상 값을 기반으로 상기 신경망의 파라미터를 수정하도록 더 구성된, 캠리스 왕복 엔진.공개특허 10-2025-0044184-4-청구항 12 시스템에 있어서:실행 가능한 명령어를 저장하는 컴퓨터 판독가능 메모리; 및상기 컴퓨터 판독가능 메모리와 통신하고 상기 실행 가능한 명령어에 의해 적어도:복수의 훈련 데이터 입력 벡터 및 복수의 참조 데이터 출력 벡터를 포함하는 훈련 데이터를 획득하되, 상기 복수의 훈련 데이터 입력 벡터의 훈련 데이터 입력 벡터는 캠리스 엔진의 작동 속성에 대한 센서 데이터를 나타내고, 상기 복수의 참조 데이터 출력 벡터의 참조 데이터 출력 벡터는 상기 훈련 데이터 입력 벡터로부터 머신 러닝 모델에 의해 생성될 액추에이터 명령 데이터를 나타내고;상기 훈련 데이터 및 목적 함수를 사용하여 상기 머신 러닝 모델을 훈련시키되, 상기 목적 함수는 엔진 기능의최적화와 연관되고; 그리고 훈련된 상기 머신 러닝 모델을 하나 이상의 캠리스 엔진에 제공하도록 프로그래밍된 하나 이상의 컴퓨터 프로세서를 포함하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서, 상기 엔진 기능의 최적화는 배출물의 측정값 최소화, 출력의 측정값 최대화, 및 온도의 측정값 유지로 구성된 그룹에서 선택되는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제12항에 있어서, 상기 센서 데이터는 레이저 흡수 분광 센서 데이터를 포함하고, 상기 센서 데이터가 나타내는상기 속성은 연료 조성, 에너지 함량, 온도, NOx 함량, UHC 함량, CO 함량, CO2 함량 및 H2O 함량으로 구성된그룹에서 선택되는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항에 있어서, 상기 머신 러닝 모델은 신경망을 포함하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제12항에 있어서, 상기 캠리스 엔진을 더 포함하고, 상기 캠리스 엔진은: 왕복 피스톤을 수용하는 실린더;상기 실린더와 연관된 엔진 구성요소로서, 흡기 밸브, 배기 밸브, 점화 플러그, 연료 분사기 및 가변 압축 메커니즘으로 구성된 그룹에서 선택되는 상기 엔진 구성요소; 상기 엔진 구성요소에 연결된 액추에이터로서, 상기 엔진 구성요소의 작동을 제어하도록 구성된 상기 액추에이터;실린더 작동 속성에 대한 센서 데이터를 생성하도록 구성된 광학 센서; 및상기 광학 센서 및 액추에이터에 연결되는 제어기로서:상기 광학 센서로부터 상기 센서 데이터를 수신하고;원하는 엔진 작동 최적화와 연관된 액추에이터 명령 데이터를 생성하도록 훈련된 신경망을 사용하여 상기 센서데이터를 처리하고; 그리고상기 액추에이터 명령 데이터에 적어도 부분적으로 기반하여 상기 액추에이터의 작동을 개시하도록 구성된 상기공개특허 10-2025-0044184-5-제어기를 포함하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서, 상기 센서 데이터는 상기 실린더의 특정 사이클 동안 생성되고, 상기 액추에이터의 작동 개시는 상기 실린더의 상기 특정 사이클 동안 발생하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제16항에 있어서, 상기 센서 데이터는 상기 실린더의 특정 4행정 사이클의 특정 행정 동안 생성되고, 상기 액추에이터의 작동 개시는 상기 실린더의 상기 특정 4행정 사이클의 상기 특정 행정 동안 발생하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제16항에 있어서, 상기 캠리스 엔진은 네트워크를 통해 컴퓨팅 시스템으로 상기 센서 데이터를 전송하도록 구성된 네트워크 인터페이스를 더 포함하는, 시스템."}
{"patent_id": "10-2024-7040174", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서, 상기 네트워크 인터페이스는 상기 네트워크를 통해 상기 컴퓨팅 시스템으로부터 제2 신경망을수신하도록 더 구성되고, 상기 제어기는 상기 제어기의 메모리에서 상기 신경망을 상기 제2 신경망으로 대체하도록 더 구성된, 시스템."}
{"patent_id": "10-2024-7040174", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "레이저 흡수 분광(LAS) 센서와 인공 지능/머신 러닝을 활용하여 엔진 작동을 최적화하는 캠리스 왕복 엔진 제어 시스템에 대한 시스템 및 방법이 제공된다. 이 제어 시스템은 흡기 밸브, 배기 밸브, 연료 분사기, 점화 플러그 및 가변 압축 메커니즘과 같은 캠리스 엔진 구성요소의 동적 관리를 통해 엔진 작동을 최적화하기 위해 실시간 또는 거의 실시간으로 LAS 데이터를 평가한다."}
{"patent_id": "10-2024-7040174", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 일반적으로 왕복 엔진에 관한 것으로서, 보다 구체적으로는 센서 피드백을 사용하는 실시간 적응형 모든 연료 엔진에 관한 것이다."}
{"patent_id": "10-2024-7040174", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "왕복 엔진은 다양한 엔진 구성요소의 타이밍, 지속시간 및 위상과 같은 엔진 기능에 대한 파라미터를 사용한다. 기계식 캠축을 갖는 종래의 왕복 엔진에서는, 이러한 파라미터가 고정되어 있어 높고 낮은 엔진 부하 사이에서 최적의 흡기 및 배기 타이밍이 절충된다. 캠리스 엔진의 특징은 기계식 캠축을 제거하여 흡기구 및 배기구를 제 어하는 밸브의 전자기 또는 유압 작동을 통해 가변 밸브 타이밍(VVT)을 가능하게 하는 것이다. 일부 양태에서, 본 명세서에 설명된 기술은 왕복 피스톤을 수용하는 실린더; 상기 실린더와 연관된 엔진 구성요 소로서, 흡기 밸브, 배기 밸브, 점화 플러그, 연료 분사기 및 가변 압축 메커니즘으로 구성된 그룹에서 선택되 는 상기 엔진 구성요소; 상기 엔진 구성요소에 연결된 액추에이터로서, 상기 엔진 구성요소의 작동을 제어하도 록 구성된 상기 액추에이터; 실린더 작동 속성에 대한 센서 데이터를 생성하도록 구성된 광학 센서; 상기 광학 센서 및 액추에이터에 연결된 제어기로서: 상기 광학 센서로부터 상기 센서 데이터를 수신하고; 원하는 엔진 작 동 최적화와 연관된 액추에이터 명령 데이터를 생성하도록 훈련된 신경망을 사용하여 상기 센서 데이터를 처리 하고; 그리고 상기 액추에이터 명령 데이터에 적어도 부분적으로 기반하여 상기 액추에이터의 작동을 개시하도 록 구성된 상기 제어기를 포함하는 캠리스 왕복 엔진과 관련된다. 일부 양태에서, 본 명세서에 설명된 기술은 실행 가능한 명령어를 저장하는 컴퓨터 판독가능 메모리; 및 상기 컴퓨터 판독가능 메모리와 통신하며 상기 실행 가능한 명령어에 의해 적어도: 복수의 훈련 데이터 입력 벡터 및 복수의 참조 데이터 출력 벡터를 포함하는 훈련 데이터를 획득하되, 상기 복수의 훈련 데이터 입력 벡터의 훈련 데이터 입력 벡터는 캠리스 엔진의 작동 속성에 대한 센서 데이터를 나타내고, 상기 복수의 참조 데이터 출력벡터의 참조 데이터 출력 벡터는 상기 훈련 데이터 입력 벡터로부터 머신 러닝 모델에 의해 생성될 액추에이터 명령 데이터를 나타내고; 상기 훈련 데이터 및 목적 함수를 사용하여 상기 머신 러닝 모델을 훈련시키되, 상기 목적 함수는 엔진 기능의 최적화와 연관되고; 그리고 훈련된 상기 머신 러닝 모델을 하나 이상의 캠리스 엔진에 제공하도록 프로그래밍된 하나 이상의 컴퓨터 프로세서:를 포함하는 시스템과 관련된다."}
{"patent_id": "10-2024-7040174", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명은 레이저 흡수 분광(LAS) 센서 및 인공 지능/머신 러닝을 사용하여 엔진 작동을 최적화하는 캠리스 왕 복 엔진 제어 시스템에 관한 것이다. 이 제어 시스템은 LAS 센서 데이터를 실시간 또는 거의 실시간으로 평가하 여 흡기 밸브, 배기 밸브, 연료 분사기, 점화 플러그 및 가변 압축 메커니즘과 같은 캠리스 엔진 구성요소의 동 적 관리를 통해 엔진 작동을 최적화한다. 유리하게는, 실시간 또는 거의 실시간의 평가 및 최적화는 일부 구현 예에서 엔진 상태에 대한 최대 밀리초 단위의 LAS 센서 데이터를 기반으로 할 수 있으며, 이는 LAS 센서 데이터 평가 후 수 밀리초 또는 수 마이크로초 이내에 엔진 구성요소의 작동 변경으로 이어질 수 있다. 따라서, 제어 시스템은 단일 엔진 사이클 내에서 또는 엔진 사이클의 단일 행정 내에서(예를 들어, 2행정 또는 4행정 엔진 사 이클의 단일 행정 내) 엔진 구성요소의 작동 변경을 구현할 수 있다. 일부 종래의 왕복 엔진은 다양한 특징 및 구성요소(예를 들어, 타이밍, 지속시간, 위상 등)에 대해 고정된 파라 미터를 사용한다. 상기 고정된 파라미터는 일반적으로 밸브당 로브가 하나만 있는 기계식 캠축을 사용하여 구현 될 수 있다. 따라서, 종래의 밸브 작동은 시간 경과에 따라서 및 사이클 간에 걸쳐 고정된 지속시간, 리프트 및 전체 프로파일을 수반한다. 상기 고정된 파라미터는 높고 낮은 엔진 부하 간 또는 예상되는 환경 조건의 극단 간 최적의 흡기 및 배기 타이밍 간의 절충 결과일 수 있다. 경우에 따라 상기 고정된 파라미터는 특정 연료의 사용 또는 제한된 수명 동안 엔진 구성요소의 성능 변화가 예상되지 않는 사용과 같은, 엔진에 대한 사전 결정 된 제한의 결과이거나 원인일 수 있다. 무엇보다도, 캠리스 엔진은 작동 파라미터의 동적 조정을 통해 위에서 언급한 문제 중의 일부 또는 전부를 해결 할 수 있다. 보다 구체적으로, 캠리스 엔진은 기계식 캠축에 의존하지 않기 때문에, 캠리스 엔진은 시간 경과에 따라서 및/또는 사이클 간에 걸쳐 엔진 구성요소를 동적으로 제어할 수 있다. 예를 들어, 캠리스 엔진은 전자기 또는 유압 작동을 통해 흡기구와 배기구를 제어하는 포펫 밸브에 가변 밸브 타이밍(VVT)을 구현할 수 있다. 캠리스 엔진은 다양한 엔진 위치(예를 들어, 실린더 내, 실린더의 흡기구 상류 및/또는 배기구 하류)에 배치된 LAS 센서와 같은 광학 센서를 사용하여 연료, 엔진 작동 등의 특성(예를 들어, 연소 중의 온도, 화학종 농도 등)을 측정할 수 있다. 이러한 센서는 센서 데이터를 빠르게 생성할 수 있으며, 어떤 경우에는 엔진 구성요소의 작동 파라미터가 수정될 수 있는 속도보다 훨씬 더 빠르게 센서 데이터를 생성할 수 있다. 예를 들어, LAS 센서는 센서 데이터(예를 들어, 흡기구로부터 수신한 연료 조성 및 에너지 함량 데이터, 배기구로부터 수신한 NOx, CO, UHC, CO2 데이터, 또는 실린더로부터 수신한 온도, CO, H2O, UHC, CO2 데이터)를 사이클당 수십 번 제공할 수 있다. 이러한 양 및/또는 빈도의 센서 데이터를 처리하고 데이터의 패턴을 감지하도록 구성된 제어 시스템은 전자적으로 제어되는 기계 장치(예를 들어, 흡기 밸브, 배기 밸브, 점화 플러그, 연료 분사기 및 가변 압축 메 커니즘)의 신속한 작동을 적극적으로 관리하여 최적의 또는 원하는 목표를 달성하는 데 사용될 수 있다. 유리하게는, 인공 지능/머신 러닝(AI/ML)을 사용함으로써, 캠리스 엔진 제어 시스템은 작동 LAS 센서 데이터를 기반으로 실시간 또는 거의 실시간으로 엔진 작동을 최적화하도록 구성될 수 있다. 또한, 상기 제어 시스템은 연료, 속도, 부하, 온도 등의 다양한 조합과 같은 다양한 조건하에서 엔진 작동을 최적화하도록 구성될 수 있다. 엔진 작동의 최적화와 본 명세서에서 설명되는 기타 특징은 캠리스 엔진이 제공하는 동적 제어, LAS 센서 가 제공하는 실시간 또는 거의 실시간의 센서 데이터 및 AI/ML의 적용을 통해 학습된 데이터 기반 인사이트의 조합 없이는 어렵거나, 비실용적이거나, 불가능할 수 있다. 본 발명의 일부 양태는 엔진 구성요소 액추에이터에 대한 명령을 생성하기 위하여 머신 러닝 모델의 훈련 및 사 용을 통해 다양한 최적화 및 특징의 실현을 가능하게 한다. 일부 구현예에서, LAS 센서 데이터(예를 들어, 흡기 구로부터 수신한 연료 조성 및 에너지 함량 데이터; 배기구로부터 수신한 온도, NOx, CO, UHC, CO2 데이터; 실 린더로부터 수신한 온도, CO, H2O, UHC, CO2 데이터; 또는 이들의 일부 조합)는 특정 최적화 목표 또는 기타 특 징을 달성하기 위해 구현될 해당 액추에이터 명령과 함께 레이블링될 수 있다. 머신 러닝 모델은 엔진 작동 중 에 수신된 LAS 센서 데이터를 기반으로 액추에이터 명령 또는 이에 대한 조정을 생성하도록 훈련될 수 있다. 본 발명의 여러 양태에서 사용될 수 있는 머신 러닝 모델의 예시는 인공 신경망(딥 신경망, 순환 신경망, 합성곱 신경망 등을 포함), 선형 회귀 모델, 로지스틱 회귀 모델, 의사결정 트리, 랜덤 포레스트, 서포트 벡터 머신, 나이브 또는 비-나이브 베이지안 네트워크, k-평균 클러스터링, 기타 모델 또는 알고리즘, 또는 이들의 앙상블 을 포함한다. 본 발명의 추가적인 양태는 엔진 구성요소 액추에이터에 대한 명령을 생성하도록 머신 러닝 모델을 훈련하기 위 한 강화학습의 사용과 관련된다. 일부 구현예에서, 보상 구조는 머신 러닝 모델의 훈련을 특정 정책으로 유도하 기 위해 구현될 수 있다. 예를 들어, 만일 정책이 특정 배출량의 최소화를 목표로 하는 경우, 해당 배출량의 센 서 판독값이 그러한 센서 판독값의 사전 결정된 또는 동적으로 결정된 양에 대한 임계값의 미만으로 떨어질 때 보상 단위가 제공될 수 있다. 본 발명의 양태와 함께 사용할 수 있는 강화학습 방법의 예시는 Q-학습, 상태-행 동-보상-상태-행동(SARSA) 및 시간차(TD) 방법을 포함한다. 본 발명에 개시된 하나 이상의 엔진 제어 시스템은 다양한 유형의 엔진에 사용될 수 있지만, 특히 내연기관에 적합하다. 예를 들어, 그리고 제한 없이, 개시된 엔진 제어 시스템 중의 일부 또는 전부는 그러한 엔진에 사용 되는 연료 유형에 관계없이 2행정 엔진, 4행정 엔진, 로터리 엔진 및 그 변형에 사용될 수 있다. 또한, 엔진 제 어 시스템은 다음 중 적어도 하나를 포함하는 모든 내연기관에 사용될 수 있다: 흡기 및/또는 배기 흐름을 제어 하는 하나 이상의 밸브, 하나 이상의 연료 분사기, 또는 하나 이상의 연료 점화기(예를 들어, 점화 플러그 또는 글로우 플러그). 본 발명의 다양한 양태는 이제 특정 예시 및 구현예와 관련하여 설명될 것이고, 이는 발명을 설명하기 위한 것 이지 제한하기 위한 것은 아니다. 본 명세서에 설명된 예시 및 구현예는 설명의 목적으로 특정 엔진, 엔진 구성 요소, 계산 및 알고리즘에 초점을 맞추겠지만, 당업자는 이 예시들이 단지 설명을 위한 것이고 제한하려는 의도 가 아님을 이해할 것이다. 또한, 본 명세서에 설명 및/또는 도시된 모든 구현예의 모든 특징, 프로세스, 장치 또는 구성요소는 단독으로 또는 본 명세서에 설명 및/또는 도시된 다른 구현예의 다른 특징, 프로세스, 장치 또 는 구성요소와 함께 또는 대신 사용될 수 있다. 예시적 캠리스 왕복 엔진 본 발명에 기술된 제어 시스템 및 관련 특징이 특정 캠리스 엔진으로 한정되지는 않지만, 제어 시스템 및 관련 특징이 사용될 수 있는 캠리스 엔진의 한 예시가 2019년 8월 8일에 공개된 PCT 국제 공개 번호 WO 2019/152886 에 기술되어 있고, 이는 본 명세서에 참조로 포함되어 본 발명의 일부를 형성한다. 도 1은 PCT 국제 공개 번호 WO 2019/152886에 기술된 캠리스 엔진의 구현예를 도시한다. 도시된 바와 같이, 엔진은 왕복 피스톤을 수용하는 실린더를 포함하며, 흡기/배기 밸브 타이밍, 압축비, 스파크 점화 및 연료 분사를 포함한 기능을 관리하는 전자적으로 제어 가능한 하나 이상의 밸브(22, 28), 스파크 점화 장치 (예를 들어, 점화 플러그) 및 연료 분사 장치 형태의 액추에이터를 통합한다. LAS 센서(34, 36, 38)와같은 하나 이상의 센서가 다양한 엔진 위치에 제공된다. 예를 들어, 흡기구 LAS 센서(LAS1이라고도 함), 실 린더 내 LAS 센서(LAS2라고도 함) 및 배기구 LAS 센서(LAS3이라고도 함)가 엔진의 작동과 관련된 다양한 속성을 측정한다. 제어 시스템은 프로세서, 메모리 및 소프트웨어를 포함할 수 있다. 제어 시스템은 제어기 라고도 하며, 센서 입력 데이터(예를 들어, 흡기구 및 LAS1로부터 수신한 연료 조성 및 에너지 함 량 데이터, 배기구 및 LAS3로부터의 온도, NOx, CO, UHC, CO2 데이터, 또는 실린더 및 LAS2로부터의 온도, CO, H2O, UHC, CO2 데이터)를 처리하여 엔진 구성요소(예를 들어, 흡기구, 배기구, 점화 플러그, 연료 분사기, 가변 압축 메커니즘)의 빠른 작동을 적극적으로 관리할 수 있다. 아래에서 더 자세 히 기술되는 바와 같이, 소프트웨어는 모델 및/또는 알고리즘의 사용을 통해 AI/ML을 활용하여 다양한 엔진 부하 및 연료 또는 연료 혼합물에 대해 실시간으로 엔진을 최적화하도록 구성될 수 있다. 일부 구현예에서, 제어기는 또는 엔진의 다른 모듈이나 구성요소는 통합 Wi-Fi 안테나, Bluetooth® 안테나, 또는 셀룰러 /모바일 전화 네트워크 안테나가 있는 네트워크 인터페이스 카드(NIC)와 같은 네트워크 인터페이스(미도시)를 포함할 수 있다. 네트워크 인터페이스는 네트워크 외부의 컴퓨팅 시스템과의 통신을 용이하게 할 수 있다. 예를 들어, 센서 데이터 및/또는 액추에이터 명령 데이터가 네트워크 인터페이스를 통해 컴퓨팅 시스템으로 전송될 수 있다. 또 다른 예로서, 머신 러닝 모델 또는 실행 가능한 코드가 네트워크 인터페이스를 통해 수신될 수 있 으며, 이는 이전에 제어기에 제공된 머신 러닝 모델 및/또는 코드를 보완하거나 대체할 수 있다. 도 1에 도시된 구현예에서, 하나 이상의 레이저(LAS1, LAS2 또는 LAS3)가 분광학적 기술(예를 들어, 흡수)을 통 해 특정 유형의 가스 특성 데이터(예: 연소 중의 온도, 화학종 농도)를 수집하고 그 정보를 적응형 제어기 로 전송하는 데 사용될 수 있다. 이 정보는 특정한 전자 제어 기계 장치(예를 들어, 흡기 밸브, 배기 밸브 , 점화 플러그 및 연료 분사기)의 작동에 대한 타이밍, 위상 및 지속시간과 같은 하나 이상의 기능 을 수정하고 전달하는 데 사용된다. 또한, 다양한 제어 파라미터가 피스톤 압축을 위한 기어 박스를 제 어하는 데 사용될 수 있다(예를 들어, 가변 압축 메커니즘을 통해). 제어 파라미터는 이러한 장치의 하나 이상의 시간적 특성(예를 들어, 타이밍, 지속시간, 시퀀스, 또는 깊이)을 포함할 수 있다. 마지막으로, 레이저 분광 센서(LAS1, LAS2, LAS3)는 이후에 이러한 수정의 영향을 판독하고 제어기에 빠른 피드백을 제공함으로써 엔진 출력, 연료 투입, 배출 및 엔진 부하 변화에 지속적으로 적응할 수 있다. 전체 프 로세스는 마이크로초에서 밀리초 단위로 수행될 수 있다. 레이저 분광 센서(LAS1, LAS2, LAS3)는 특히 가혹한 연소 환경에서 측정을 수행하고 화학 반응(밀리초에서 마이 크로초 단위) 및 기타 유동장 역학의 시간 척도를 해석하기 위해 구현된다. 이러한 LAS 광학 측정은 엔진 벽에 배치된(예를 들어, 센서 위치의 안쪽 벽과 같은 높이로 장착된) 작은 창을 통해 현장에서 수행되므로 엔진 의 연소 역학에 비침습적이다. 일부 구현예에서, LAS1, LAS2 및 LAS3은 중적외선 파장 영역의 반도체 레이저를 포함하여 비용과 크기를 줄 임으로써 배치 가능한 양식을 가능케 한다. 도 1에 도시된 센서 LAS1, LAS2 및 LAS3의 특정 위치는 단지 예시를 위한 것이며, 임의의 수의 위치, 센서 및 센서 유형이 사용될 수 있음이 이해될 것이다. 예를 들어, 이러한 광 학 센서에 대한 세 개의 일반적인 대상 엔진 위치는 제어 및 작동을 위한 정보를 제공하기 위해 다음과 같이 배 치될 수 있다: 1) 연료 조성을 위한 상류; 2) 온도 및 주요 화학종을 위한 실린더 내부; 3) 미량 배출 감지를 위한 하류 배기구. 상류(예를 들어, LAS1을 사용)에서 측정된 연료 조성은 과도하게 농축되거나 희박한 조건을 방지하기 위해 연소 전에 연료-공기 비율을 최적화하는 데 사용될 수 있다. 실린더 내부(예를 들어, LAS2를 사 용)에서의 온도 및 화학종 측정은 NOx 형성을 방지하기 위해 압축비 및 배기 가스 재순환을 최적화하는 데 사용 될 수 있다. 배기 스트림 측정(예를 들어, LAS3을 사용)은 일산화탄소, 미연소 탄화수소, NOx와 같은 주요 배출 물을 식별하는 데 사용되어 다른 밸브 타이밍을 즉시 미세 조정하는 데 활용될 수 있다. 일부 구현예에서, 엔진의 현재 상태는 각 실린더의 현재 행정(예를 들어, 흡기 행정, 압축 행정, 동력 행정, 배기 행정), 엔진이 크랭크축에 적용하는 현재 분당 회전수(RPM), 엔진이 크랭크축에 적용하는 토크, 그리고 엔진의 LAS 센서의 각각에 의해 생성된 LAS 센서 데이터로 설명될 수 있다. 주어진 시점에서 각 실린더의 상태는 각 실린더의 현재 엔진 사이클 행정에 따라 달라질 수 있다. 흡기 행정의 경우, 흡기 밸브가 열려 있는지, 배기 밸브가 닫혀 있는지 및/또는 실린더로 유입되는 공기 및/또 는 연료의 양으로 상태가 설명될 수 있다. 일부 구현예에서, 흡기 밸브에 또는 그 근처에 위치한 센서(LAS1)는 연료 조성, 에너지 함량(예를 들어, BTU) 등에 대해 50개 이상의 측정값(3.2K rpm에서)을 생성할 수 있다.압축 행정의 경우, 흡기 밸브가 닫혀 있는지, 배기 밸브가 닫혀 있는지, 연료 분사기 포트가 열려 있는지, 공기 /연료 혼합물의 균질성, 실린더의 압축비 및/또는 점화 방식으로 상태가 설명될 수 있다. 일부 구현예에서, 실 린더에 또는 그 근처에 위치한 센서(LAS2)는 온도, NOx, CO, UHC 등에 대해 50개 이상의 측정값(3.2K rpm에서) 을 생성할 수 있다. 동력 행정의 경우, 흡기 밸브가 닫혀 있는지 및/또는 배기 밸브가 닫혀 있는지로 상태가 설명될 수 있다. 일부 구현예에서, 실린더에 또는 그 근처에 위치한 센서(LAS2)는 온도, NOx, CO, UHC 등에 대해 50개 이상의 측정값 (3.2K rpm에서)을 생성할 수 있다. 배기 행정의 경우, 흡기 밸브가 닫혀 있는지, 배기 밸브가 열려 있는지 및/또는 배기 가스 재순환(EGR)이 사용 되고 있는지로 상태가 설명될 수 있다. 일부 구현예에서, 배기 밸브에 또는 그 근처에 위치한 센서(LAS3)는 온 도, NOx, CO, UHC 등에 대해 50개 이상의 측정값(3.2K rpm에서)을 생성할 수 있다. 일부 구현예에서, 제어기에 의해 동적으로 관리될 수 있는 엔진 구성요소 파라미터는 다음의 일부, 전부 또 는 일부 하위 집합을 포함할 수 있다: 흡기 밸브 작동 속도, 타이밍, 리프트, 위상동기 중 및/또는 주파수; 배 기 밸브 작동 속도, 타이밍, 지속시간, 리프트, 위상동기 및/또는 주파수; 연료-공기 비율; 스파크 점화(SI) 연 료 분사 타이밍 및/또는 지속시간; 스파크 점화 타이밍, 강도, 지속시간 및/또는 주파수; 연료 분사 타이밍, 양 및/또는 주파수; 및/또는 압축비 가변 밸브 타이밍. 제어기는 엔진 구성요소 파라미터를 설정, 수정, 또는 구현하는 데 사용되는 액추에이터 명령 데이터를 생성할 수 있다. 본 명세서에 설명된 예시적 엔진 구성요소 파 라미터는 단지 예시일 뿐이며, 제한적이거나 필수적이거나 포괄적인 것으로 의도되지 않는다. 일부 구현예에서, 제어기는 추가적인, 더 적은 및/또는 대안적인 엔진 구성요소 파라미터를 설정, 수정, 또는 구현하는 데 사 용되는 액추에이터 명령 데이터를 생성할 수 있다. 도 1에서 도시된 구현예는 캠리스 엔진 구성에 관한 것이지만, 하나 이상의 LAS 센서가 캠축 엔진 내의 다양한 위치에 구현되어 하나 이상의 액추에이터(예를 들어, 스파크 점화, 연료 분사 가변 압축 등)의 피드백 및 제어 를 제공할 수도 있음이 이해될 것이다. 예시적 AI/ML 기반 캠리스 엔진 최적화 시스템 도 2는 AI/ML 기반 캠리스 엔진 최적화 시스템의 예시를 도시하며, 이하 설명에서는 간단히 AI/ML 시스템 이라 칭한다. 일부 구현예에서, AI/ML 시스템은 도 7에 도시되고 아래에서 더 자세히 설명되는 컴퓨 팅 시스템과 같은 하나 이상의 컴퓨팅 시스템을 사용하여 구현될 수 있다. AI/ML 시스템은 주어진 캠리스 엔진 상태가 엔진과 같은 캠리스 엔진의 최적 성능을 생성할 액추에이 터 명령의 패턴을 나타낼 가능성을 예측하도록 구성될 수 있다. 일부 시나리오에서, 캠리스 엔진의 제어기 를 구현하기 위해 AI/ML을 사용하면 기존의 사전 프로그래밍된 규칙 기반 제어 시스템에 비해 상당한 기술 적 개선을 제공할 수 있다. 예를 들어, AI/ML 시스템은, 제어기에 의해 사용될 때, 종래의 제어기에 의해 제공되는 명령보다 더 효율적인 엔진 성능(예를 들어, 더 적은 오탐지, 더 적은 미탐지)을 제공하는 액추에이터 명령을 생성하는 모델을 생성할 수 있다. 더욱이, AI/ML 시스템은 AI/ML 훈련, LAS 센서에 의해 제공되는 빠른 센서 데이터, 그리고 캠리스 엔진에 의해 제공되는 동적 작동이 없이는 달성하기 어렵거나, 비실용적이거 나, 불가능할 수 있는 방식으로 최대 밀리초 단위의 센서 데이터를 기반으로 특정 최적화를 목표로 하는 모델을 생성할 수 있다. 설명적인 예시를 참조하면, 고정식 및 비고정식 엔진 배치는 엔진의 성능에 직접적인 영향을 미치는 매우 다양한 환경 조건을 생성할 것으로 예상된다. 사전 구성되고 수작업으로 제작된 액추에이터 명령하에서는, 다양 한 환경 요인에 대한 적응을 실시간으로 최적화하는 것이 불가능했으며, 상당한 프로그래밍 노력이 필요했음에 도 불구하고 위에서 논의한 대로 높은 오탐지 및 미탐지로 인해 여전히 어려움을 겪었다. 이와 대조적으로, AI/ML 훈련 메커니즘은 시스템을 크게 재코딩할 필요 없이 다양한 엔진 조건에 신속하고 효과 적으로 적응할 수 있는 강력한 기능을 제공한다. 새로운 훈련 데이터가 제공됨에 따라 재훈련함으로써, 지속적 인 엔진 작업 부하 및 환경 조건을 포함하되 이에 국한되지 않는 내부 및 외부 요인의 조합에 의해 생성될 수 있는 이전에 보지 못했던 엔진 상태 및 센서 판독 패턴에 적응함에 있어서 본 발명의 시스템은 매우 확장 가능 하다. AI/ML 시스템은 훈련 데이터를 반복적으로 처리하여 캠리스 엔진의 제어기와 같은 실행 시스 템에서 사용할 훈련된 분류 모델을 계산할 수 있다. 실행 시스템은 엔진 LAS 센서 데이터를 처리하여 훈련된 분류 모델을 기반으로 액추에이터 명령을 분류하고, 액추에이터 명령이 최적의 엔진 성능을 나타낼 가 능성을 나타내는 분류를 공식화한다. 도 2의 위쪽 상자는 일부 구현예에서 통계 분석 및 시각화 기술을 사용하여 가치 있는 수작업 특징을 생성한 후 이러한 특징을 머신 러닝 분류 또는 회귀 모델에서 사용할 수 있는 다양한 구성요소 및 머신 러닝 기술을 설명 하기 위한 목적으로 사용된다. 반면, 도 2의 아래쪽 상자는 명시적인 수작업 특징 없이 데이터로부터 패턴, 상 관관계 및 연결을 일반적으로 도출할 수 있는 신경망 분류기를 설명하기 위한 목적으로 사용된다. 그러나, 도 2에 도시된 AI/ML 시스템의 요소에 대한 이러한 특성화는 제한적이거나 필수적인 것은 아니다. 예를 들 어, 일부 구현예에서 신경망 분류기는 특징 엔지니어링 서브시스템 및 특징 생성 서브시스템에 의해 생성된 특징, 또는 특징 저장소에 저장된 특징을 사용할 수 있다. AI/ML 시스템 및 실행 시스템은 하나 이상의 컴퓨팅 머신에 배치될 수 있음이 이해되어야 한다. 따라서, 예시적 구현예에서, 제1 프로세서(또는 프로세서 세트)는 AI/ML 시스템으로 기능하는 코드를 실행할 수 있 고, 제2 프로세서(또는 프로세서 세트)는 제어기로 기능하는 코드를 실행할 수 있다. 이러한 프로세서는 네 트워크를 통해 서로 통신하는 컴퓨터 시스템에 배치될 수 있으며, 여기서 AI/ML 시스템은 훈련된 분류 모 델(120, 164)을 나타내는 데이터 구조를 네트워크를 통해 실행 시스템으로 전달한다. 더 나아가, 이러한 네트워 크로 연결된 컴퓨터 시스템들은 서로 다른 개체에 의해 작동될 수 있다. 따라서 AI/ML 시스템은 잘 조정된 분류 모델의 개발과 관련하여 \"마스터\" 또는 \"전문가\" 역할을 하는 제1 당사자에 의해 작동될 수 있고, 서로 다 른 캠리스 엔진에 의해 작동되는 하나 이상의 실행 시스템은 액추에이터 명령으로부터 도출된 최적의 엔진 성능 을 테스트할 때 이 분류 모델에 액세스할 수 있다. 그러나, 또 다른 예시적 구현예에서는 동일한 프로세서(또는 프로세서 세트)가 AI/ML 시스템과 실행 시스템 모두에 대한 코드를 실행할 수 있음이 이해되어야 한다. 일부 구현예에서, 엔진 상태 데이터 및/또는 엔진 상태 데이터는 다양한 외부 조건에서 정지 또는 비 정지 배치된 하나 이상의 엔진과 관련된 엔진 사이클 시퀀스를 나타낼 수 있다. 이어지는 설명에서는, 엔진 상 태 데이터(104, 154)가 활성 사용 수명 동안 다양한 환경 조건에서 정지 또는 비정지 사용 사례에 대한 엔진 사 이클 시퀀스와 관련된 데이터를 포함한다고 가정한다. 엔진 상태 데이터 및/또는 엔진 상태 데이터는 엔진이 이러한 판독값을 센서 로그로 전송할 수 있는 다양한 배치된 엔진에 걸친 일련의 엔진 사이클로부터 도출될 수 있다. 엔진 상태 데이터(104, 154)는 또한 정 지 또는 비정지 시나리오에서 작동하는 동안 엔진에 의해 생성된 실시간 엔진 사이클 스트림으로부터 얻을 수 있다. 엔진 상태 데이터 및/또는 엔진 상태 데이터는 다음 중 하나 이상을 나타내는 센서 데이터를 포 함할 수 있다: 흡기구에 또는 그 근처에 위치한 하나 이상의 센서로부터 수신한 연료 조성 및 에너지 함량 데이 터; 배기구에 또는 그 근처에 위치한 하나 이상의 센서로부터 수신한 NOx, CO, UHC, CO2 데이터; 및/또는 실린 더에 또는 그 근처에 위치한 하나 이상의 센서로부터 수신한 온도, CO, H2O, UHC, CO2 데이터. 엔진 사이클에 의해 생성된 이러한 센서 데이터 및/또는 센서 데이터의 시퀀스의 이러한 예시와 함께 현재 작동 중인 액추에이터 명령에 관한 액추에이터 명령 데이터 및/또는 액추에이터 명령 데이터는 더 효율적인 엔진 성능을 생성하는 것으로 긍정적으로 레이블링되어 AI/ML 시스템이 모델을 훈련하는 데 사용될 수 있다. 일부 구현예에서, 부정적으로 레이블링된 훈련 데이터는 모델을 훈련하는 데 사용될 수 있으며, 이 경우 AI/ML 시스템은 액추에이터 명령의 양성 예시와 액추에이터 명령의 음성 예시를 기반으로 모델 이 훈련되는 지도 학습 프로세스를 사용할 수 있다. 그러나, 액추에이터 명령의 음성 예시는 광범위하게 이용 가능하지 않을 수 있다. 따라서 또 다른 예시적 구현 예에서, AI/ML 시스템은 효율적인 엔진 성능을 생성하는 것으로 긍정적으로 레이블링된 센서 데이터 및 명령 데이터의 시퀀스와, 개선되고 효율적인 엔진 성능을 생성하는지 여부에 대해 레이블링 되지 않은 센서 데이터 및 명령 데이터의 시퀀스를 모두 기반으로 하여 모델을 훈련시키는 반지 도 학습 프로세스를 사용할 수 있다. 또한, 새로운 훈련 데이터가 이용 가능해짐에 따라, AI/ML 시스템은 이 새로운 훈련 데이터를 사용하여 모델을 추가로 훈련시켜 그 식별 기능을 개선할 수 있다. 따라서, AI/ML 시스템에 의해 생성된 모델은 시간이 지남에 따라 센서 데이터를 적절하게 분류하여 최적의 액추에이터 명령을 생성하는 능력이 향상될 것으로 예상되며, 이는 결과적으로 캠리스 엔진의 성능을 개선할 것이다. AI/ML 시스템은 이러한 데이터의 소스와 관계없이 훈련 데이터(102, 152)를 공통 형식으로 정규화하기 위 해 전처리할 수 있다. 엔진의 다양한 센서는 서로 다른 형식의 센서 데이터를 생성할 수 있으며, 이러한 데 이터를 공통 형식으로 변환하기 위해 전처리 작업(도 1에는 미도시)이 사용될 수 있다. 예를 들어, 배기구의 LAS 센서의 온도 값은 섭씨온도를 나타낼 수 있는 반면 실린더의 LAS 센서의 온도 값은 화씨온도를 나타낼 수 있다. 마찬가지로, 서로 다른 제조업체의 센서는 각각이 나타내는 다양한 판독값에 대해 서로 다른 형식과 측정 단위를 사용할 수 있다. AI/ML 시스템이 \"동일 비교(like for like)\" 처리를 수행할 수 있도록, 정규화 전처리를 사용하여 센서 데 이터(106, 156) 및 훈련 데이터(102, 152)가 해당 데이터의 소스와 관계없이 공통 형식을 나타내도록 보장할 수 있다. 일부 구현예에서, 특징 엔지니어링 서브시스템 및/또는 특징 생성 서브시스템이 사용될 수 있다. 유 리하게는, 이러한 서브시스템은 결합하여 다양한 지도 및 비지도 머신 러닝 기술에 효과적으로 사용될 수 있는 특징 저장소를 채울 수 있다. 특징 엔지니어링 서브시스템은 자동 또는 대화형으로(예를 들어, 데이터 과학자의 제어하에) 다양한 통계 기술을 수행하여 센서 데이터를 명령 데이터와 연관시키는 데이터 내의 가치 있는 신호를 찾는 데 사용될 수 있 다. 예를 들어, 데이터 과학자, 캠리스 엔진 전문가, 기타 실무자, 또는 이들의 조합은 가치가 있을 수 있는 데 이터 내의 예비 패턴을 식별할 수 있다. 이러한 분석은 종종 초기 엔진 센서 데이터를 넘어서는 추가적인 가치 있는 특징을 생성한다. 예를 들어, 분석 중에, 데이터 과학자는 엔진 LAS 센서 데이터에 대해 다양한 상관 계수를 실행하여 특정 시간 간격으로 스파크 점화 타이밍과 압축비 사이에 강력한 관계가 있음을 발견할 수 있으며, 이는 새로운 복합 특징 을 형성한다. 이 특징은 해당 센서 데이터와 함께 특징 저장소에 저장되어 모델 및/또는 모델이 명령 데이터 및/또는 명령 데이터를 각각 생성하기 위해 수행하는 것과 같은 다운스트림 분류 작업에 서 사용된다. 또한, 특징 저장소는 추가적인 특징 엔지니어링 및 가치 탐색에 여러 번 사용되어 지속적으로 더 강력한 통계적 신호를 생성할 수 있다. 이러한 새로운 특징은 데이터의 차원 수를 줄임으로써 분류에서 더 나은 정확도 를 생성할 수 있다. 일부 구현예에서, AI/ML 시스템은 클러스터링 엔진을 통해 특징 저장소의 훈련 데이터에 대한 클러스터링을 수행할 수 있다. 예를 들어, 센서 데이터는 임의의 수의 기준에 따라 클러스터로 그룹화될 수 있 다. 일부 구현예에서, 클러스터링은 엔진 사이클을 엔진 상태 데이터의 서브그룹으로 분할하여 특정 액추에이터 명 령으로부터 발생하는 잠재적인 엔진 성능 최적화를 평가하는 데 사용될 수 있다. 평가를 위해 엔진 사이클별로 엔진 상태 데이터를 분할함으로써, 대규모 데이터 세트가 독립적으로 분석 가능한 작업 단위로 나뉘어 액추에이 터 명령 패턴을 평가할 수 있으며 필요시 여러 프로세서에 분산시킬 수 있다. 이러한 서브그룹은 엔진 사이클 클러스터라고 할 수 있으며, 최적의 액추에이터 명령으로부터 도출된 잠재적 엔진 성능 개선을 평가하기 위해 함께 검토할 때 맥락상 및 집합적으로 관련성이 있다고 간주되는 엔진 상태 데이터 그룹을 나타낸다. 클러스터는 \"사이클 세트\"로 간주될 수 있는데, 이는 각 클러스터가 개별 엔진 사이클이 아닌 특정 기간 동안 최상의 엔진 성능을 생성하는 액추에이터 명령의 이상적인 조합을 집합적으로 보여주는 엔진 사이클 그룹을 포 함할 수 있기 때문이다. 원하는 최적화는 단일 엔진 사이클과 같이 일시적일 수도 있고, 환경, 내부 엔진 상태 및 관련 액추에이터 명령 의 변화에 따라 엔진 성능이 변동하는 동안에 특정 기간 동안의 엔진 센서 판독값을 점진적으로 분석하는 것과 같이 보다 복잡한 전략을 포함할 수도 있다. 이러한 엔진 사이클 클러스터를 생성하기 위해 k-평균 클러스터링, 노이즈가 있는 적용에서의 밀도 기반 공간 클러스터링(DBSCAN) 등 다양한 클러스터링 기술이 사용될 수 있다. 상기한 바와 같이, AI/ML 시스템은 머신 러닝을 사용하여 훈련 데이터 세트를 처리함으로써 엔진 성 능 최적화와 엔진 성능 저하를 구별하는 분류 모델을 훈련시킬 수 있다. 훈련 데이터는 센서 데이터 시퀀스의 형태를 취할 수 있으며, 훈련 시스템은 복수의 머신 러닝 기술 중 어느 것이라도 사용하여 이 훈련 데이터로부터 분류 모델을 훈련시킬 수 있다. 예를 들어, AI/ML 시스템은 지도, 비지도, 또는 반지도 머신 러닝을 사용할 수 있을 것이다. 지도 또는 반 지도 머신 러닝 프로세스에서, 훈련 데이터는 이러한 훈련 데이터가 액추에이터 명령 세트로부터 도 출된 엔진 성능을 개선하는 데 적합한 것으로 간주되는지 여부에 따라 레이블링된다. 훈련 데이터는 다양한 환경에서 수집될 수 있다. 예를 들어, 엔진은 일정한 작업 부하를 가진 고정된 위치 에 배치될 수 있으며, 이 경우 최적의 액추에이터 명령이 수명을 연장시킨다. 또 다른 예로는 다양한 환경 조건 에서 매우 변동이 심한 작업 부하를 가지며 즉각적인 엔진 성능 향상을 위한 액추에이터 명령을 사용하는 일관 된 이동 모터 차량에 배치된 엔진이 있을 수 있다. 클러스터링 엔진은 엔진 사이클 간격 파라미터에 따라 시간 근접성을 기준으로 수집된 센서 데이터를 클러 스터로 그룹화할 수 있다. 일부 구현예에서, 엔진 사이클 간격 파라미터는 서로 다른 클러스터로 분할되어야 하 는 연속 엔진 사이클의 수를 정의하는 데 사용될 수 있다. 따라서, 연속 엔진 사이클 간의 카운트가 엔진 사이 클 간격보다 적은 경우, 이러한 엔진 센서 판독값들은 동일한 클러스터로 그룹화된다. 연속된 두 개의 센서 데 이터 항목(예를 들어, 동일한 센서 또는 센서 세트로부터 연속된 두 시점에 걸쳐 출력된 센서 데이터)이 엔진 사이클 간격을 초과할 때마다 새 클러스터가 시작되며, 이 경우 두 개의 연속된 센서 데이터 항목 중 가장 최근 항목이 새 클러스터의 첫 번째 센서 데이터 항목이 된다. 엔진 사이클 간격 파라미터의 값은 원하는 기준에 따라 결정될 수 있다. 일반적으로, 엔진 사이클 간격 파라미 터의 값이 너무 작으면 충분한 데이터를 캡쳐하지 못하는 클러스터가 형성되어 감지 성능이 저하될 수 있다. 마 찬가지로, 엔진 사이클 간격 파라미터의 값이 너무 크면 너무 많은 데이터를 캡쳐하는 클러스터가 형성되어 감 지 성능이 저하될 수 있다. 예시적 구현예에서, 엔진 사이클 간격 파라미터는 엔진 센서 데이터 및 그 선형 조합의 통계적 분석을 기반으로 사전 결정된 정적 값일 수 있다. 또 다른 예시적 구현예에서, 엔진 사이클 간격 파라미터는 여러 엔진 사이클 및/또는 센서 데이터의 이상치와 같은 지표에 따라 변하는 동적 값일 수 있다. 예를 들어, 엔진 사이클의 수가 증가함에 따라, 엔진 사이클 카운트는 더 짧은 엔진 사이클 활동을 최적으로 분할하기 위해 감소될 수 있다. 반 면에, 엔진 작업 부하가 감소함에 따라, 엔진 사이클 카운트가 증가되어 일관된 엔진 사이클 작업 부하를 최적 으로 분할할 수 있다. 엔진 사이클 간격 값의 결정은 매일 또는 다른 간격을 기준으로 수행될 수 있다. AI/ML 시스템은 머신 러닝 분류 서브시스템에 의해 수행되는 하나 또는 다수의 지도 머신 러닝 분류 프로세스에 대한 입력으로 클러스터를 활용하여, 센서 판독값 세트를 기반으로 엔진 성능을 개선하기 위한 최적 의 명령 데이터(예를 들어, 액추에이터 명령, 액추에이터 명령에 대한 변경, 또는 액추에이터 명령이 달리 파생될 수 있는 데이터)를 예측할 수 있는 정확한 분류 모델을 생성할 수 있다. 예시적 구현예에서, 클러스터는 XGBoost와 같은 분산 그래디언트 부스팅 머신에 대한 훈련 입력으로 인코딩되어, 미래의 새로운(unseen) 비정상(out-of-distribution) 센서 데이터에 대해 정확한 모델을 훈련 시킨다. 그런 다음 이 모델은 엔진의 제어기에 배치되어 최적의 엔진 성능을 낼 수 있는 액추에이 터 명령에 대한 실시간 지시를 제공할 수 있다. 어떤 경우에는, 엔진 LAS 센서 데이터의 양 때문에, 실무자가 최적의 액추에이터 명령을 생성할 수 있는 이상적 인 센서 데이터 값이나 엔진 사이클 간격을 분석하고 정확하게 식별하는 것이 불가능할 수 있다. 이러한 경우에 는, AI/ML 시스템은 다층 레이어 퍼셉트론 또는 피드포워드 신경망 분류기를 활용하여 명시적 특징 엔지니어링(예를 들어, 특징 엔지니어링 서브시스템과 관련하여 위에서 설명한 바와 같은)의 필요성 없이 분류를 생성할 수 있다. 신경망 분류기는 추가적인 클러스터링 또는 특징 엔지니어링에 대한 명시적 필요성 없이 센서 데이터의 전 체 로그에 더하여 특징 저장소를 유리하게 활용할 수 있다. 예시적 구현예에서, 훈련 데이터는 특징 임베딩 엔진과 같은 임베딩 레이어에 의해 인코딩된다. 이 임베딩 레이어는 개별 센서 데이터 항목을 엔진 사이클 및 시간 또는 엔진 사이클에 따른 해당 기여로 맥락화하는 값 지향적 벡터화된 표현으로 센서 데이터를 변환할 수 있다. 임베딩 레이어는 변환기와 같은 신경망 아키텍처의 일부를 형성할 수 있으며, 이는 긴 엔진 사 이클 시퀀스에 걸쳐 개별 센서 데이터 항목의 영향을 효과적으로 모델링할 수 있다. 그런 다음 신경망 분류기 는 최적의 엔진 성능을 나타내는 사이클의 개수를 식별하고 관련 없는 센서 데이터를 삭제할 수 있다. 예시적 신경망 기반 캠리스 엔진 제어 시스템 도 3은 LAS 센서(예를 들어, LAS1, LAS2, LAS3)로부터의 데이터를 처리하고 엔진 기능의 하나 이 상의 측면을 최적화하거나 하나 이상의 특징을 구현하기 위해 액추에이터 명령을 생성하도록 구성된 예시 적인 머신 러닝 모델의 도면이다. 일부 구현예에서, 도시된 바와 같이, 모델은 신경망으로 구현되며, 본 명세서에서는 간단히 신경망(NN)이 라고도 지칭된다. 일반적으로 설명하자면, NN(딥 신경망(DNN), 합성곱 신경망(CNN), 순환 신경망(RNN), 기타 NN 및 이들의 조합을 포함)은 \"뉴런\"이라고도 하는 다중 레이어의 노드를 갖는다. 예시적으로, NN은 입력 레이어, 출력 레이어 및 입력 레이어와 출력 레이어 사이에 있는 임의의 개수의 중간, 내부, 또는 \"숨겨진\" 레이어를 포 함할 수 있다. 개별 레이어는 임의의 개수의 개별 노드를 포함할 수 있다. 인접한 레이어의 노드는 서로 논리적 으로 연결될 수 있으며, 인접한 레이어의 다양한 노드 간의 각 논리적 연결은 해당 가중치와 연관될 수 있다. 개념적으로, 노드는 다양한 입력 값의 함수로 출력 값을 계산하는 계산 유닛으로 간주될 수 있다. 현재 노드와 연관된 함수에 대한 입력 값에 이전 레이어의 노드와 연관된 함수의 출력이 포함된 경우 노드는 \"연결된\" 것으 로 간주될 수 있고, 현재 노드와 이전 레이어의 노드 간의 개별 \"연결\"과 연관된 가중치가 곱해질 수 있다. NN 이 입력 벡터 또는 입력 벡터 행렬(예를 들어, 시점 시퀀스에서의 일 시점에서의 개별 센서 판독값과 같은 센서 데이터)의 형태로 입력 데이터를 처리하는 데 사용되는 경우, NN은 각각 출력 벡터 또는 출력 벡터 행렬을 생성 하기 위해 \"포워드 패스(forward pass)\"를 수행할 수 있다. 입력 벡터는 각각 n개의 개별 데이터 요소 또는 \"차 원\"을 포함할 수 있으며, 이는 NN 입력 레이어의 n개 노드에 대응한다(여기서 n은 양의 정수이고, 예를 들어 LAS 센서(34, 36, 38)에 의해 시간 t에 생성된 총 센서 데이터 포인트 수). 각 데이터 요소는 센서 데이터(20 2)로부터의 값일 수 있고, 예를 들어 부동 소수점 숫자 또는 정수(예를 들어, 온도 측정, CO2 측정 등)일 수 있 다. 일부 구현예에서, 센서 데이터는 전처리기에 의해 평가되어 입력 벡터를 생성할 수 있다. 예를 들어, 전처리기는 모델에 의해 처리될 센서 데이터로부터 특징을 추출하거나 그렇지 않으 면 도출할 수 있다. 포워드 패스는 일반적으로 입력 레이어의 노드와 다음 레이어의 노드 간의 연결과 관련된 가중치를 나타내는 행 렬로 입력 벡터를 곱하고, 바이어스 항을 적용하고, 그 결과에 활성화 함수를 적용하는 것을 포함한다. 일부 구 현예에서, 비선형성이 뉴런을 활성화하는 데 적용되어, 네트워크 파라미터가 최소값으로 수렴하게 할 수 있다. 그런 다음 그 프로세스가 각 후속 NN 레이어에 대해 반복된다. 일부 NN은 수십만 또는 수백만 개의 노드와, 모 든 인접 레이어의 노드 간의 연결에 대한 수백만 개의 가중치를 갖는다. 도 4는 센서 데이터로부터 액추에이터 명령을 생성하도록 머신 러닝 모델을 훈련하기 위해 실행될 수 있는 예시적인 루틴의 흐름도이다. 루틴은 블록에서 시작한다. 루틴은 어떤 이벤트에 대응 하여, 예를 들어 훈련 시스템이 작동을 시작할 때 또는 기타 이벤트나 트리거에 대응하여 시작될 수 있다. 루틴 이 시작되면, 하나 이상의 비일시적 컴퓨터 판독가능 매체(예를 들어, 하드 드라이브, 플래시 메모리, 이 동식 매체 등)에 저장된 실행 가능한 프로그램 명령어 세트가 도 7에 도시되고 아래에서 더 자세히 설명되는 컴 퓨팅 시스템과 같은 컴퓨팅 시스템의 메모리(예를 들어, 랜덤 액세스 메모리 또는 RAM)에 로드될 수 있다. 일부 구현예에서, 루틴 또는 그 일부는 여러 프로세서에서 직렬 또는 병렬로 구현될 수 있다. 블록에서, 컴퓨팅 시스템은 훈련 데이터를 생성할 센서 데이터를 획득할 수 있다. 예시적으로, 엔진 은 하나 이상의 조건 세트하에서 작동될 수 있다. 작동 과정 동안, LAS 센서(34, 36 및/또는 38)는 모델을 훈련하는 데 사용될 센서 데이터를 생성할 수 있다. 일부 구현예에서, 추가 센서 데이터가 모델을 훈 련하는 데 사용하기 위해 하나 이상의 다른 소스로부터 획득될 수 있다. 예를 들어, 엔진은 LAS 센서(34, 36 및/또는 38) 이외의 센서, 예를 들어, 다른 LAS 센서 및/또는 종래의 엔진에서 사용되는 센서(예를 들 어, 크랭크축 각도 및/또는 속도, 산소 등을 감지하는 데 사용)를 포함할 수 있다. 일부 구현예에서, 센서 데이터(및, 선택적으로, 센서 데이터)는 머신 러닝 모델을 훈련하기 위한 훈 련 데이터를 생성하는 프로세스의 일부로서 또는 그 이전에 전처리될 수 있다(예를 들어, 전처리기에 의해). 예를 들어, 센서 데이터는 개별 센서의 데이터 포인트에서 특징을 추출하거나, 여러 센서로부터의 데이터를 특징으로 결합하거나, 일부 센서로부터의 데이터를 필터링하거나, 일부 또는 모든 센서로부터의 데이 터에 변환을 적용하거나, 다른 작업을 수행하거나, 그 조합을 수행하기 위해 처리될 수 있다. 전처리 작업의 출 력은 모델에 대한 입력 벡터의 세트일 수 있다. 블록에서, 컴퓨팅 시스템은 센서 데이터, 센서 데이터 및/또는 이로부터 파생된 데이터의 일부에 레이블링할 수 있다. 일부 구현예에서, 컴퓨팅 시스템은 엔지니어 또는 다른 전문가를 위한 사용자 인터 페이스를 제공할 수 있다. 사용자 인터페이스는 웹 페이지, 모바일 애플리케이션 인터페이스, 데스크톱 애플리케이션 인터페이스, 또는 기타 전달 메커니즘을 통해 제공되는 그래픽 사용자 인터페이스일 수 있다. 사용자는 인터페이스를 사용하여 센서 데이터, 센서 데이터 및/또는 이로부터 파생된 데이터(예를 들어, 입력 벡터)를 보고 데이터에 따라 구현할 하나 이상의 엔진 액추에이터 명령을 표시할 수 있다. 레이블링된 훈 련 데이터 항목은 모델을 훈련하는 데 사용하기 위해 컴퓨팅 시스템에 의해 저장될 수 있다. 블록에서 컴퓨팅 시스템은 머신 러닝 모델을 훈련하기 위해 루틴의 현재 인스턴스 동안 사용될 훈련 데이터를 선택할 수 있다. 일부 구현예에서, 컴퓨팅 시스템은 레이블링된 훈련 데이터 입력을 훈련 세트와 테스트 세트로 분리할 수 있다. 훈련 세트는 아래에서 더 자세히 설명되는 바와 같이 머신 러닝 모델 을 훈련하는 데 사용될 수 있다. 테스트 세트는 훈련된 머신 러닝 모델을 테스트하는 데 사용될 수 있다. 유리하게는, 레이블링된 입력의 별도 테스트 세트를 사용하여 머신 러닝 모델의 성능을 테스트하면 훈련된 머신 러닝 모델이 훈련 중(또는 테스트 반복 중) 머신 러닝 모델에 제공되지 않은 새로운 센서 데 이터로 훈련을 일반화할 수 있는지 여부를 판별하는 데 도움이 될 수 있다. 블록에서, 컴퓨팅 시스템은 훈련될 머신 러닝 모델의 파라미터를 초기화할 수 있다. 일부 구현 예에서, 머신 러닝 모델은 NN으로 구현될 수 있다. NN의 훈련 가능한 파라미터에는 포워드 패스 중에 적용되는 각 레이어에 대한 가중치(및 일부 구현예에서는 바이어스 항)가 포함된다. 일부 구현예에서, 머신 러닝 모델의 파라미터를 초기화하기 위해 컴퓨팅 시스템은 의사 난수 생성기를 사용하여 파라미터에 의사 난수 값을 할당할 수 있다. 일부 구현예에서, 파라미터는 다른 방법을 사용하여 초기화될 수 있다. 예를 들어, 루틴 또는 다 른 프로세스를 사용하여 이전에 훈련된 머신 러닝 모델은 루틴의 현재 반복을 위한 시작점으로 사용 될 수 있다. 블록에서, 컴퓨팅 시스템은 모델을 사용하여 훈련 데이터 입력을 분석해서 훈련 데이터 출력을 생성할 수 있다. 예시적으로, 훈련 데이터 출력은 액추에이터 명령, 액추에이터 명령에 대한 조정, 또는 액추에 이터 명령이나 이에 대한 조정이 도출될 수 있는 데이터 형태의 벡터에 해당할 수 있다. 단순화를 위해, 그 출 력은 본 명세서에서 액추에이터 명령으로 지칭될 것이다. 루틴의 후속 블록에서, 훈련 데이터 출력은 모델의 성능을 평가하고 훈련 가능한 파라미터에 업데이트를 적용하는 데 사용된다. 블록에서 컴퓨팅 시스템은 모델을 사용하여 하나 이상의 훈련 데이터 입력을 처리한 결과를 평 가할 수 있다. 훈련 입력이 도출되는 훈련 데이터에는 참조 데이터 출력 벡터도 포함될 수 있다. 각 참조 데이 터 출력 벡터는 액추에이터 명령, 액추에이터 명령에 대한 조정, 또는 액추에이터 명령이나 이에 대한 조정이 도출될 수 있는 데이터 형태의 벡터에 해당할 수 있다. 예를 들어, 참조 데이터 출력 벡터는 흡기구 값, 배기구 값, 점화 플러그, 연료 분사기, 다른 엔진 구성요소, 또는 이들의 일부 조합의 작동에 대한 조정을 나타내는 데 이터를 포함할 수 있다. 훈련의 목표는 모델에 의해 출력된 액추에이터 명령과 해당 참조 데이터 출 력 벡터 간의 차이를 최소화하는 것일 수 있다. 일부 구현예에서, 컴퓨팅 시스템은 엔진 속성, 작동, 또는 기능의 특정한 원하는 최적화와 관련된 목적 함수를 사용하여 결과를 평가할 수 있다. 목적 함수는 손실 함수라고도 지칭될 수 있다. 일부 구현예에서, 손실 함수는 이진 교차 엔트로피 손실 함수, 가중 교차 엔트로피 손실 함수, 제곱 오차 손실 함수, 소프트맥스 손실 함수, 기타 손실 함수, 또는 이들 손실 함수의 조합일 수 있다. 손실 함수는 모델을 사용하여 생성된 훈 련 데이터 출력 벡터가 해당 훈련 데이터 입력에 대한 원하는 출력(예를 들어, 참조 데이터 출력 벡터)과 얼마 나 다른지 평가할 수 있다. 블록에서, 컴퓨팅 시스템은 모델을 사용하여 하나 이상의 훈련을 처리한 결과의 평가를 기반으 로 모델의 파라미터를 업데이트할 수 있다. 동일한 훈련 데이터 입력이 다시 처리되는 경우 모델에 의해 생성된 출력이 훈련 데이터 입력에 해당하는 참조 데이터 출력 벡터로 표현되는 원하는 출력에 더 가까워 지도록 파라미터가 업데이트될 수 있다. 일부 구현예에서, 컴퓨팅 시스템은 훈련 데이터 출력 벡터와 참 조 데이터 출력 벡터 간의 차이를 기반으로 기울기를 계산할 수 있다. 예를 들어, 손실 함수의 기울기(예를 들 어, 도함수)가 계산될 수 있다. 이 기울기는 모델 출력을 개선하기 위해(예를 들어, 주어진 입력에 대해 정확하 거나 원하는 출력에 더 가까운 출력을 생성하기 위해) 모델의 개별 파라미터를 조정할 방향을 결정하는 데 사용될 수 있다. 개별 파라미터가 조정되는 정도는 미리 결정되거나 동적으로 결정될 수 있다(예를 들어, 기울 기 및/또는 하이퍼 파라미터에 따라). 예를 들어, 학습률과 같은 하이퍼 파라미터는 모델의 개별 파라미터 에 적용할 조정의 크기를 지정하거나 결정하는 데 사용될 수 있다. 일부 구현예에서, 컴퓨팅 시스템은 전체 훈련 데이터 세트가 아닌 훈련 데이터 하위 집합에 대한 기울기 를 계산할 수 있다. 따라서, 이 기울기는 전체 훈련 데이터 코퍼스를 기반으로 하지 않기 때문에 \"부분 기울기\"라고 할 수 있다. 대신에, 특정한 훈련 데이터 하위 집합만 처리할 때의 훈련 데이터 출력 벡터와 참조 데이터 출력 벡터 간의 차이를 기반으로 한다. 예시적인 구현예를 참조하면, 컴퓨팅 시스템은 역전파를 사용하는 경사 하강법을 통해 머신 러닝 모델 의 일부 또는 모든 파라미터(예를 들어, 모델의 가중치)를 업데이트할 수 있다. 역전파에서는 손실 함수를 사용하여 훈련 오차가 결정된다(예를 들어, 위에서 설명한 바와 같이). 이 훈련 오차는 훈련 오차를 줄이기 위 해 모델의 개별 파라미터를 업데이트하는 데 사용될 수 있다. 예를 들어, 가중치 행렬의 가중치를 조정하 여 오차를 줄이는 방법을 결정하기 위해 손실 함수에 대한 기울기를 계산할 수 있다. 이러한 조정은 모델 을 통해 레이어별로 역전파될 수 있다. 결정 블록에서, 컴퓨팅 시스템은 일부 구현예에서 하나 이상의 중지 기준이 충족되는지 여부를 결정 할 수 있다. 예를 들어, 중지 기준은 손실 함수, 테스트 세트, 또는 둘 다를 사용하여 결정된 머신 러닝 모델 의 정확도에 기반할 수 있다. 또 다른 예로, 중지 기준은 수행된 훈련의 반복 횟수(예를 들어, \"에포크\"), 경과된 훈련 시간, 또는 이와 유사한 것에 기반할 수 있다. 하나 이상의 중지 기준이 충족되면, 루틴은 블 록으로 진행할 수 있고; 그렇지 않으면, 루틴은 블록 또는 루틴의 다른 이전 블록으로 돌 아갈 수 있다. 블록에서, 컴퓨팅 시스템은 훈련된 모델을 저장 및/또는 배포할 수 있다. 훈련된 모델은 작동의 관리 및 최적화에 사용하기 위해 하나 이상의 엔진에 배포될 수 있다. 루틴은 블록에서 종료될 수 있다. 캠리스 엔진 제어 시스템을 위한 예시적 강화학습 도 5는 강화학습을 통해 정책을 학습하는 예시적인 제어기의 도면이다. 일반적으로 설명하자면, 강화 학습은 레이블링된 훈련 데이터가 필요하지 않기 때문에 지도 학습과 다르다. 대신에, 강화학습의 초점은 특정 한 현재 상태에 대한 현재 \"최선의 이용 가능한\" 행동이 알려져 있더라도 현재 상태에 주어진 다양한 행동의 효 과를 때때로 탐색하는 것이다. 이러한 탐색은 현재 상태에 대해 잠재적으로 최적인 행동을 발견하는 데 도움이 될 수 있다. 따라서, 강화학습은 특정 상태가 주어졌을 때 행동을 선택하기 위한 최적의 또는 실질적으로 최적 의 정책을 학습하는 데 사용될 수 있다. 최적의 정책은 다양한 행동을 수행함으로써 누적되는 \"보상\"을 최대화 하여 학습되며, 각 상태(또는 그의 일부 하위 집합)에서의 각 행동은 특정 보상 값과 연관된다. 일부 구현예에서, 도시된 바와 같이, 제어기는 정책을 구현하도록 구성된다. 제어기는 엔진의 현 재 상태에 대한 정책의 적용을 기반으로 액추에이터 명령(또는 액추에이터 명령이 도출될 수 있 는 데이터)을 생성할 수 있다. 제어기의 각 행동(예를 들어, 액추에이터 명령의 생성) 또는 그의 하위 집합 후에, 제어기는 보상 값을 결정하거나 제공받을 수 있다. 강화학습 프로세스의 과정에서, 제어기 는 정책을 업데이트하여 정책이 제어기가 수신하거나 적용하기로 결정한 보상 값을 기 반으로 최적의 정책에 수렴하도록 할 수 있다. 일부 구현예에서, 보상은 π* = argmax E(R|π)로 표기되는 최적 정책의 관점에서 공식적으로 정의될 수 있으며, 여기서 E(R|π)는 주어진 정책 π로부터의 보상 R의 예상 합계 E이다. 정책은 맵 또는 함수일 수 있으 며, 가능한 정책 집합이 이용 가능할 수 있다. 따라서, 최적 정책 π*는 예상 보상의 함수로서 가능한 정책 집 합에 대한 argmax(최대값을 선택)이다. 일부 구현예에서, Q-함수와 같은 가치 함수는 주어진 엔진 상태에서 행 동을 취하는 것에 대한 보상 값을 결정하는 데 사용될 수 있다. 예를 들어, Qπ: (s|a) → E(R|a,s,π): Qπ는 정책 π를 사용하여 상태 s와 행동 a의 쌍 (s, a)를 상태 s에서 행동 a를 취했을 때의 예상 보상에 매핑하는 함 수이다. 강화학습의 목표는 주어진 상태에서 행동을 취하는 것에 대한 예상 보상의 정확한 추정치를 생성하는 모델을 훈련시키는 것이다. 도 6은 강화학습을 구현하기 위한 예시적인 루틴의 흐름도이다. 루틴은 블록에서 시작한다. 루 틴은 어떤 이벤트에 대응하여, 예를 들어 제어기가 작동을 시작할 때, 강화학습을 수행하도록 지시받 았을 때, 또는 기타 이벤트나 트리거에 대응하여 시작될 수 있다. 블록에서, 제어기는 엔진의 현재 상태에 대한 데이터를 획득할 수 있다. 일부 구현예에서, 현재 엔진 상태는 가장 최근에 생성된 LAS 센서 데이터 세트, 기타 센서 데이터, 현재 액추에이터 명령 세트, 기타 데이터, 또는 이들의 일부 조합으로 표현될 수 있다. 결정 블록에서, 제어기는 현재 상태에 대해 선택될 행동이 탐색 또는 활용에 의해 선택될지를 결정할 수 있다. 활용의 경우, 현재 정책에 따라 현재 엔진 상태에 대해 최선의 이용 가능한 행동이 선택된다. 탐색의 경우, 행동은 의사 난수 생성기(PRNG)를 사용하는 것과 같이 랜덤 또는 의사 랜덤 선택 방법을 사용하여 선택될 수 있다. 행동을 랜덤하게 또는 의사 랜덤하게 선택함으로써, 현재 최선의 이용 가능한 행동보다 원하는 최적화 측면에서 잠재적으로 더 나은 행동을 발견할 수 있다. 일부 구현예에서, 탐색/활용 결정은 사전 결정되 거나 동적으로 결정된 탐색 및 활용 행동의 비율에 기반할 수 있다. 예를 들어, 제어기는 특정 비율(예를 들어, 10%)의 시간 동안 랜덤하게 또는 의사 랜덤하게 탐색을 선택하도록 구성될 수 있다. 제어기가 활용을 선택하면, 루틴은 블록으로 진행될 수 있다. 그렇지 않고, 제어기가 탐색을 선택하면, 루틴(50 0)은 블록으로 진행될 수 있다. 블록에서, 활용을 위해, 제어기는 현재 엔진 상태에 대한 현재 최선의 이용 가능한 행동을 선택할 수 있다. 일부 구현예에서, 정책은 각 엔진 상태 또는 그 하위 집합에 대해 현재 최선의 이용 가능한 행동을 나타낼 수 있다. 예를 들어, 루틴이 Q-학습 기반 강화 루틴인 경우, 정책은 각 엔진 상태와 이용 가 능한 행동에 \"Q 값\"을 할당하는 테이블을 포함할 수 있다. 더 높은 Q 값은 더 낮은 Q 값보다 더 바람직한 행동 을 나타낼 수 있다(예를 들어, 바람직한지의 여부가 현재 엔진 상태에서 특정 행동이 수행되는 경우에 예상되는 후속 엔진 상태와 관련된 경우). 따라서, 제어기는 현재 엔진 상태에 대해 가장 높은 Q 값을 갖는 행동을 결정할 수 있다. 블록에서, 탐색을 위해, 제어기는 주어진 현재 엔진 상태에서의 이용 가능한 모든 행동 중에서 PRNG를 사용하여 선택하는 것과 같이, 랜덤 또는 의사 랜덤 선택 방법을 사용하여 행동을 선택할 수 있다. 블록에서, 제어기는 선택된 행동의 결과를 평가할 수 있다. 일부 구현예에서, 선택된 행동의 결과 평가는 선택된 행동을 수행한 후 엔진의 상태를 나타내는 엔진 상태 데이터와 같은 피드백 데이터를 기반으로 한다. 블록에서, 제어기는 선택된 행동을 적용한 결과에 기반하여 보상 값을 적용할 수 있다. 일부 구현예 에서, 특정 LAS 센서에 의해 결정된 온도가 특정 측정 횟수 또는 기간(예를 들어, 행정, 사이클, 또는 사이클 세트) 동안 특정 범위(1,800°K ~ 2,200°K) 내에 유지되는 경우 보상 값이 생성될 수 있다. 일부 구현예 에서, 유체 파라미터(예를 들어, NOx 및/또는 CO의 측정값)가 특정 측정 횟수 또는 기간(예를 들어, 행정, 사이 클, 또는 사이클 세트) 동안 임계값 미만으로 유지되는 경우 보상 값이 생성될 수 있다. 일부 구현예에서, 보상 값은 성능 수준(예를 들어, NOx, CO 배출량이 설정된 임계값 미만인 상태에서의 전기 효율)을 달성 및/또는 유지하는 것에 기반하여 생성될 수 있다. 일부 구현예에서, 보상 값은 행동-가치 함수를 사용하여 결정된다. 블록의 주어진 반복에 대한 보상 값은 양수 또는 음수일 수 있다. 강화학습 루틴의 목표는 시간이 지남에 따라 총 보상 값을 최대화하 는 것이다. 제어기는 엔진 상태 s(t)에서 행동 a(t)를 취하여 새로운 엔진 상태 s(t + 1)로 이어지는 것에 기반하여 특정 보상 값을 수신한다. 예시적으로, a(t)는 시간 t에서 제어기에 의해 생성된 액추에이터 명령 데이터를 기반으로 하는 액추에이터 명령의 개시일 수 있고, 엔진 상태 s(t)는 시간 t에서 또는 그 이전에 생성된 최신 LAS 센서 데이터로 표현될 수 있으며, 엔진 상태 s(t + 1)은 시간 t + 1에서 또는 그 이전에 생성된 최신 LAS 센서 데이터로 표현될 수 있다. 보상 값은 s(t)에서 s(t + 1)로의 상태 전이 및 강 화학습 루틴의 원하는 최적화를 기반으로 할 수 있다. 예를 들어, 보상 값은 s(t)부터 s(t + 1)까지의 관 찰된 배출량 감소, s(t)부터에서 s(t + 1)까지의 온도 유지, s(t) 부터에서 s(t + 1)로까지의 에너지 출력 증가 또는 이와 유사한 것에 기반할 수 있다. 예시적인 비제한적 예를 참조하면, 원하는 최적화 또는 목표는 실린더에서 측정된 온도를 1,800°K에서 2,200° K 범위 내로 유지하는 것일 수 있다. LAS 센서(LAS2)는 시간 t에서 측정된 온도 2,400°K를 나타내는 LAS 센서 데이터를 생성할 수 있다. 행동 a(t)를 수행한 후, LAS 센서는 시간 t + 1에서 측정된 온도 2,300°K 를 나타내는 LAS 센서 데이터를 생성할 수 있다. 이 경우, 보상 값은 원하는 범위로의 이동을 보상하기 위 해 양수일 수 있다. 반면에, LAS 센서 데이터가 시간 t + 1에서 측정된 온도 2,500°K를 나타내는 경우, 보상 값은 원하는 범위에서 벗어나는 이동에 대해 불이익을 주기 위해 음수일 수 있다. 일부 구현예에서, 보상 값은 선택된 행동 및 이전 엔진 상태에 대한 업데이트된 Q 값을 결정하기 위한 계 산에서 사용될 수 있다. 예를 들어, Q 값은 보상 값, 최적의 미래 값의 추정치(예를 들어, 미래 엔진 상태에 대 한 최적의 행동을 적용함으로써 예상되는 보상에 기반함) 및 할인 계수를 사용하여 중간 값을 계산함으로써 업 데이트될 수 있다. 예시적으로, 할인 계수는 0.0과 1.0 사이(포함)일 수 있으며, 미래 행동 시퀀스에서 더 나중 에 수신하는 보상 값보다 더 일찍 수신하는 보상 값에 더 큰 가중치를 부여하는 데 사용될 수 있다. 학습률이 중간 값에 적용될 수 있으며, 그 결과 산출된 곱이 엔진 상태 및 선택된 행동에 대한 기존 Q 값에 더해져 업데이트된 Q 값에 도달할 수 있다. 예시적으로, 학습률은 0.0과 1.0 사이(포함)일 수 있으며 업데이트마다 Q 값이 변경될 수 있는 정도를 제어하는 데 사용될 수 있다. 블록에서, 제어기는 선택된 행동에 대해 수정된 Q 값으로 Q 테이블을 업데이트할 수 있다. 그 후 업데 이트된 Q 값은 후속 활용 결정에 사용될 수 있다. 결정 블록에서, 제어기는 일부 구현예에서 하나 이상의 중지 기준이 충족되었는지 여부를 결정할 수 있다. 예를 들어, 중지 기준은 수행된 행동 수, 수신된 보상, 경과된 시간, 또는 이와 유사한 것에 기반할 수 있다. 또 다른 예로서, 중지 기준은 Q 값이 업데이트되는 정도(예를 들어, 업데이트가 임계 크기 미만으로 떨어 짐)에 기반할 수 있다. 하나 이상의 중지 기준이 충족되면, 루틴은 블록으로 진행할 수 있고; 그렇지 않으면, 루틴은 블록 또는 루틴의 다른 이전 블록으로 돌아갈 수 있다. 블록에서, 제어기는 학습된 정책을 저장 및/또는 배포할 수 있다. 정책은 작동의 관리 및 최적화에 사용하기 위해 하나 이상의 엔진에 배포될 수 있다. 루틴은 블록에서 종료될 수 있다. 예시적 컴퓨팅 시스템 도 7은 상기 설명된 특징을 구현하고 루틴을 실행하는 데 일부 구현예에서 사용될 수 있는 예시적 컴퓨팅 시스 템을 도시한다. 일부 구현예에서, 컴퓨팅 시스템은 다음을 포함할 수 있다: 하나 이상의 컴퓨터 프 로세서, 예를 들어 물리적 중앙 처리 장치(CPU) 또는 그래픽 처리 장치(GPU); 하나 이상의 네트워크 인터 페이스, 예를 들어 네트워크 인터페이스 카드(NIC); 하나 이상의 컴퓨터 판독가능 매체 드라이브, 예를 들어 고밀도 디스크(HDD), 솔리드 스테이트 드라이브(SSD), 플래시 드라이브 및/또는 기타 영구적 비일시 적 컴퓨터 판독가능 매체; 및 하나 이상의 컴퓨터 판독가능 메모리, 예를 들어 랜덤 액세스 메모리(RAM) 및/또는 기타 휘발성 비일시적 컴퓨터 판독가능 매체. 네트워크 인터페이스는 하나 이상의 네트워크 또는 컴퓨팅 장치에 연결을 제공할 수 있다. 컴퓨터 프로세서는 네트워크 인터페이스를 통해 다른 컴퓨 팅 장치 또는 서비스로부터 정보와 명령을 수신할 수 있다. 네트워크 인터페이스는 또한 데이터를 컴퓨터 판독가능 메모리에 직접 저장할 수 있다. 컴퓨터 프로세서는 컴퓨터 판독가능 메모리와 통신 하고, 컴퓨터 판독가능 메모리에서 명령어를 실행하고 데이터를 처리하는 등 기타 작업을 수행할 수 있다. 컴퓨터 판독가능 메모리는 컴퓨터 프로세서가 하나 이상의 구현예를 구현하기 위해 실행하는 컴퓨 터 프로그램 명령어를 포함할 수 있다. 컴퓨터 판독가능 메모리는 컴퓨팅 시스템의 일반적인 관리 및 작동에서 컴퓨터 프로세서에 의해 사용될 컴퓨터 프로그램 명령어를 제공하는 운영 체제를 저장 할 수 있다. 컴퓨터 판독가능 메모리는 또한 머신 러닝 모델의 훈련을 구현하기 위한 훈련 데이터 및 머신 러닝 모델 훈련 명령어를 포함할 수 있다. 용어 구현예에 따라, 본 명세서에 설명된 프로세스 또는 알고리즘의 특정 행위, 이벤트, 또는 기능은 다른 시퀀스로 수행되거나, 추가되거나, 병합되거나, 또는 완전히 생략될 수 있다(예를 들어, 모든 설명된 작동 또는 이벤트가 알고리즘의 실행에 반드시 필요한 것은 아님). 더욱이, 특정 구현예에서, 작동 또는 이벤트는 순차적이지 않은 방식, 예를 들어 다중 스레드 처리, 인터럽트 처리, 또는 다중 프로세서나 프로세서 코어 또는 기타 병렬 아키 텍처를 통해 동시에 수행될 수 있다. 본 명세서에 개시된 구현예들과 관련하여 설명된 다양한 예시적인 논리 블록, 모듈, 루틴 및 알고리즘 단계들은 전자 하드웨어 또는 전자 하드웨어와 컴퓨터 소프트웨어의 조합으로 구현될 수 있다. 이러한 상호교환성을 명확 하게 예시하기 위해, 다양한 예시적 구성요소, 블록, 모듈 및 단계들이 그 기능 측면에서 일반적으로 상기에서 설명되었다. 이러한 기능이 하드웨어로 구현되는지 또는 하드웨어에서 실행되는 소프트웨어로 구현되는지는 특 정 응용 분야와 전체 시스템에 부과된 설계 제약에 따라 달라진다. 설명된 기능은 각 특정 응용 분야에 대해 다 양한 방식으로 구현될 수 있지만, 그러한 구현 결정이 본 발명의 범위를 벗어나는 것으로 해석되어서는 안 된다. 또한, 본 명세서에서 개시된 구현예와 관련하여 설명된 다양한 예시적 논리 블록 및 모듈들은 프로세서 장치, 디지털 신호 프로세서(DSP), 응용 주문형 집적 회로(ASIC), 필드 프로그램 가능 게이트 어레이(FPGA), 또는 기 타 프로그램 가능 논리 소자, 이산 게이트 또는 트랜지스터 논리, 개별 하드웨어 구성요소, 또는 여기에 설명된 기능들을 수행하도록 설계된 이들의 임의의 조합과 같은 기계에 의해 구현되거나 수행될 수 있다. 프로세서 장 치는 마이크로프로세서일 수 있지만, 대안적으로 프로세서 장치는 제어기, 마이크로제어기, 또는 상태 머신, 이들의 조합, 또는 이와 유사한 것일 수 있다. 프로세서 장치는 컴퓨터 실행 가능 명령을 처리하도록 구성된 전기 회로를 포함할 수 있다. 다른 구현예에서, 프로세서 장치는 컴퓨터 실행 가능 명령을 처리하지 않고 논리 연산 을 수행하는 FPGA 또는 기타 프로그래밍 가능 장치를 포함한다. 프로세서 장치는 또한 컴퓨팅 장치들의 조합(예 컨대, DSP 및 마이크로프로세서의 조합, 복수의 마이크로프로세서, DSP 코어와 결합된 하나 이상의 마이크로프 로세서, 또는 기타 그러한 구성)으로 구현될 수 있다. 본 명세서에서는 주로 디지털 기술과 관련하여 설명되었 지만, 프로세서 장치는 주로 아날로그 구성요소를 포함할 수도 있다. 예를 들어, 본 명세서에서 설명된 알고리 즘의 일부 또는 전부가 아날로그 회로 또는 아날로그 및 디지털이 혼합된 회로로 구현될 수 있다. 컴퓨팅 환경 은, 몇 가지 예를 들자면, 마이크로프로세서 기반 컴퓨터 시스템, 메인프레임 컴퓨터, 디지털 신호 프로세서, 휴대용 컴퓨팅 장치, 장치 제어기, 또는 가전제품 내의 계산 엔진을 포함하되 이에 국한되지 않는 모든 유형의 컴퓨터 시스템을 포함할 수 있다. 본 명세서에 개시된 구현예와 관련하여 설명된 방법, 프로세스, 루틴, 또는 알고리즘의 요소는 하드웨어에 직접 구현되거나, 프로세서 장치에서 실행되는 소프트웨어 모듈로 구현되거나, 또는 그 두 가지의 조합으로 구현될 수 있다. 소프트웨어 모듈은 RAM 메모리, 플래시 메모리, ROM 메모리, EPROM 메모리, EEPROM 메모리, 레지스터, 하드 디스크, 이동식 디스크, CD-ROM, 또는 기타 형태의 비일시적 컴퓨터 판독가능 저장 매체에 상주할 수 있다. 예시적인 저장 매체는 프로세서 장치가 저장 매체로부터 정보를 읽고 저장 매체에 정보를 쓸 수 있도록 프로세서 장치에 결합될 수 있다. 대안적으로, 저장 매체는 프로세서 장치에 통합될 수 있다. 프로세서 장치와 저장 매체는 ASIC에 상주할 수 있다. ASIC는 사용자 단말기에 상주할 수 있다. 대안적으로, 프로세서 장치와 저 장 매체는 사용자 단말기의 개별 구성요소로 상주할 수 있다. 본 명세서에서 사용된 조건부 언어, 예를 들어 \"할 수 있다\", \"할 수 있을 것이다\", \"예를 들어\" 등은, 달리 명 시되지 않는 한 또는 사용된 맥락상 달리 이해되지 않는 한, 일반적으로 특정 구현예들이 특정 특징, 요소 및/ 또는 단계를 포함하지만 다른 구현예는 이를 포함하지 않음을 나타내기 위한 것이다. 따라서, 이러한 조건부 언 어는 일반적으로, 특정 특징, 요소 및/또는 단계가 하나 이상의 구현예를 위해 어떤 방식으로든 요구되거나, 하 나 이상의 구현예가 기타 입력 또는 지시 여부와 관계없이 반드시 이러한 특징, 요소 및/또는 단계를 특정 구현 예에 포함시키거나 수행할지 여부를 결정하는 논리를 포함한다는 것을 의미하지 않는다. \"포함하는\", \"갖는\" 등 의 용어는 동의어이며 포괄적으로, 개방적인 방식으로 사용되고, 추가적인 요소, 특징, 행위, 작업 등을 배제하 지 않는다. 또한, \"또는\"이라는 용어는 포괄적인 의미로 사용되며(배타적인 의미가 아님), 따라서 예를 들어 요 소 목록을 연결하는 데 사용될 때 \"또는\"이라는 용어는 목록의 요소 중 하나, 일부 또는 모두를 의미한다. \"X, Y, Z 중 적어도 하나\"라는 문구와 같은 선언적 언어는, 특별히 달리 명시되지 않는 한, 일반적으로 맥락상 항목, 용어 등이 X, Y, 또는 Z 중 하나이거나 이들의 조합일 수 있음(예를 들어, X, Y 및/또는 Z)을 나타내는 데 사용되는 것으로 이해된다. 따라서, 이러한 선언적 언어는 일반적으로 특정 구현예에서 X 중 적어도 하나, Y 중 적어도 하나, 또는 Z 중 적어도 하나가 각각 존재해야 함의 함축을 의도하지 않으며 그렇게 함축해서는 안 된다. 달리 명시적으로 언급되지 않는 한, \"하나의\"와 같은 단수는 일반적으로 하나 이상의 설명된 항목을 포함하는 것으로 해석되어야 한다. 따라서, \"구성된 장치\" 등의 문구는 하나 이상의 언급된 장치를 포함하는 것으로 의도 된다. 이러한 하나 이상의 언급된 장치는 또한 명시된 작업을 수행하도록 집합적으로 구성될 수 있다. 예를 들 어, \"A, B 및 C 작업을 수행하도록 구성된 프로세서\"는 A 작업을 수행하도록 구성된 제1 프로세서가 B 및 C 작 업을 수행하도록 구성된 제2 프로세서와 함께 작동하는 방식을 포함할 수 있다. 상기 상세한 설명은 다양한 구현예에 적용된 새로운 특징을 보여주고, 설명하고, 지적했지만, 본 발명의 정신을 벗어나지 않는 범위 내에서 설명된 장치 또는 알고리즘의 형태 및 세부 사항에 있어 다양한 생략, 대체 및 변경 이 이루어질 수 있음이 이해될 수 있다. 인식할 수 있듯이, 본 명세서에 설명된 특정 구현예는 일부 특징이 다 른 특징과 별도로 사용되거나 실행될 수 있으므로 본 명세서에 명시된 모든 특징 및 이점을 제공하지 않는 형태 로 구현될 수 있다. 본 명세서에 개시된 특정 구현예의 범위는 앞선 설명이 아닌 첨부된 청구범위에 의해 표시 된다. 청구범위의 의미와 동등성 범위 내에 속하는 모든 변경 사항은 해당 범위 내에 포함되는 것으로 간주된다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7"}
{"patent_id": "10-2024-7040174", "section": "도면", "subsection": "도면설명", "item": 1, "content": "본 발명의 다양한 특징의 구현예들이 이제 다음의 도면을 참조하여 설명될 것이다. 도면 전체에서, 참조 번호는 참조된 요소 간의 대응관계를 나타내기 위해 재사용될 수 있다. 도면은 본 명세서에 설명된 예시적인 구현예들 을 도시하기 위해 제공되는 것이며, 본 발명의 범위를 제한하려는 것은 아니다. 도 1은 일부 구현예에 따른 센서 및 제어 시스템을 갖는 캠리스 엔진의 단일 실린더 단면도이다. 도 2는 일부 구현예에 따라 캠리스 엔진 제어기에서 사용하기 위한 머신 러닝 모델이 훈련될 수 있는 훈련 환경 을 예시하는 도면이다. 도 3은 일부 구현예에 따라 머신 러닝 모델을 사용하여 엔진 작동에 관한 센서 데이터의 평가에 기반한 엔진 구 성요소 액추에이터 명령의 생성을 예시하는 도면이다. 도 4는 일부 구현예에 따라 엔진 작동에 관한 센서 데이터를 사용하여 머신 러닝 모델을 훈련시키기 위한 예시 적 프로세스의 흐름도이다. 도 5는 일부 구현예에 따라 엔진 작동에 관한 센서 데이터의 평가에 기반하여 엔진 구성요소 액추에이터 명령을 생성하기 위한 강화학습의 도면이다. 도 6은 일부 구현예에 따라 엔진 작동에 관한 센서 데이터를 사용하는 강화학습의 예시적 프로세스의 흐름도이 다. 도 7은 일부 구현예에 따라 본 발명의 양태들을 구현하도록 구성된 예시적인 컴퓨팅 시스템의 블록도이다."}
