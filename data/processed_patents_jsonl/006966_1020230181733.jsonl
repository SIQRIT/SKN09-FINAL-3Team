{"patent_id": "10-2023-0181733", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0035413", "출원번호": "10-2023-0181733", "발명의 명칭": "전력 제어를 수행하는 전자 장치 및 그 동작 방법", "출원인": "삼성전자주식회사", "발명자": "신성국"}}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치(101)에 있어서,그래픽 프로세싱 유닛(graphic processing unit: GPU)(213) 또는 멀티미디어 블록(215) 중 적어도 하나;프로세서(120; 200; 211); 및명령어(instruction)들을 저장하는 메모리(130)를 포함하고, 상기 명령어들은, 상기 프로세서에 의해 실행될때, 상기 전자 장치가, 상기 프로세서의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하고,상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하고,상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 상기 메모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하고, 및상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 상기 GPU 또는 상기 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는QoS 값 보다 높게 조정하도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수행하는 중에 캐시 미스(cachemiss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레이트(miss rate)가 임계 미스레이트를 초과하는 조건 중 적어도 하나를 포함하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항 또는 제2항에 있어서,상기 메모리에 액세스하는 것과 관련되는 적어도 하나의 추가적인 회로(217; 219)를 포함하며, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 프로세서의 트랜잭션에 적용되는 QoS 값을 조정한 후, 상기 프로세서 사이클에 대한 제2 스톨 비율을 검출하고,상기 제2 스톨 비율이 제2 임계 값 미만인지 여부를 확인하고,상기 제2 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 전력 예산 룸(power budget room)이 제3임계 값 이상인지 여부를 확인하고, 및 상기 전력 예산 룸이 상기 제3 임계 값 이상임을 확인함에 기반하여, 상기 적어도 하나의 추가적인 회로의 동작전압 및 동작 주파수를 증가시키도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2025-0035413-3-제3항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 적어도 하나의 추가적인 회로의 동작 전압을 설정 전압 만큼 증가시키고, 상기 적어도 하나의 추가적인 회로의 동작 주파수를 설정 주파수 만큼 증가시키도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 전력 예산 룸이 상기 제3 임계 값 미만임을 확인함에 기반하여, 상기 적어도 하나의 프로세서의 동작 전압및 동작 주파수를 감소시키고, 및상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시키도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항 내지 제5항 중 어느 한 항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시킨 후, 상기 프로세서 사이클에 대한제3 스톨 비율을 검출하고,상기 제3 스톨 비율이 상기 제2 임계 값 미만인지 여부를 확인하고,상기 제3 스톨 비율이 상기 제2 임계 값 미만임을 확인함에 기반하여, 상기 조정된 상기 프로세서의 트랜잭션에적용되는 QoS 값을 상기 조정 전의 상기 QoS 값으로 복원하는 제1 동작, 또는 상기 프로세서의 동작 전압 및 동작 주파수를 상기 감소 전의 동작 전압 및 동작 주파수로 복원하거나, 또는 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 상기 증가 전의 상기 동작 전압 및 동작 주파수로 복원하는 제2 동작 중 적어도하나를 수행하도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 제1 동작 또는 상기 제2 동작 중 적어도 하나를 수행한 후, 동적 전압 및 주파수 스케일링(dynamicvoltage and frequency scaling: DVFS) 방식에 기반하여 동작하도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항 내지 제7항 중 어느 한 항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 제1 스톨 비율이 상기 제1 임계 값 이하임을 확인함에 기반하여, 또는 상기 조건을 만족하지 않음을 확인함에 기반하여, 동적 전압 및 주파수 스케일링(dynamic voltage and frequency scaling: DVFS) 방식에 기반하여 동작하도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "공개특허 10-2025-0035413-4-제6항에 있어서,상기 인스트럭션들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가:상기 제3 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 상기 제1 동작을 수행하도록 야기하는 상기 전자 장치."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "방법에 있어서,프로세서(120; 200; 211)의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하는 동작;상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하는 동작;상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 메모리(130)에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하는 동작; 및상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphic processing unit: GPU)(213) 또는 멀티미디어블록(215) 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다 높게 조정하는 동작을 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수행하는 중에 캐시 미스(cachemiss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레이트(miss rate)가 임계 미스레이트를 초과하는 조건 중 적어도 하나를 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항 또는 제11항에 있어서,상기 프로세서의 트랜잭션에 적용되는 QoS 값을 조정한 후, 상기 프로세서 사이클에 대한 제2 스톨 비율을 검출하는 동작;상기 제2 스톨 비율이 제2 임계 값 미만인지 여부를 확인하는 동작;상기 제2 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 전력 예산 룸(power budget room)이 제3임계 값 이상인지 여부를 확인하는 동작; 및 상기 전력 예산 룸이 상기 제3 임계 값 이상임을 확인함에 기반하여, 적어도 하나의 추가적인 회로(217; 219)의동작 전압 및 동작 주파수를 증가시키는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 조정하는 동작은, 상기 적어도 하나의 추가적인 회로의 동작 전압을 설정 전압 만큼 증가시키고, 상기 적어도 하나의 추가적인 회로의 동작 주파수를 설정주파수 만큼 증가시키는 동작을 포함하는 상기 방법.공개특허 10-2025-0035413-5-청구항 14 제12항에 있어서,상기 전력 예산 룸이 상기 제3 임계 값 미만임을 확인함에 기반하여, 상기 적어도 하나의 프로세서의 동작 전압및 동작 주파수를 감소시키는 동작; 및상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시키는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제12항 내지 제14항 중 어느 한 항에 있어서,상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시킨 후, 상기 프로세서 사이클에 대한제3 스톨 비율을 검출하는 동작;상기 제3 스톨 비율이 상기 제2 임계 값 미만인지 여부를 확인하는 동작;상기 제3 스톨 비율이 상기 제2 임계 값 미만임을 확인함에 기반하여, 상기 조정된 상기 프로세서의 트랜잭션에적용되는 QoS 값을 상기 조정 전의 상기 QoS 값으로 복원하는 제1 동작, 또는 상기 프로세서의 동작 전압 및 동작 주파수를 상기 감소 전의 동작 전압 및 동작 주파수로 복원하거나, 또는 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 상기 증가 전의 상기 동작 전압 및 동작 주파수로 복원하는 제2 동작 중 적어도하나를 수행하는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제15항에 있어서,상기 제1 동작 또는 상기 제2 동작 중 적어도 하나를 수행한 후, 동적 전압 및 주파수 스케일링(dynamicvoltage and frequency scaling: DVFS) 방식에 기반하여 동작하는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제10항 내지 제16항 중 어느 한 항에 있어서,상기 제1 스톨 비율이 상기 제1 임계 값 이하임을 확인함에 기반하여, 또는 상기 프로세서 스톨이 상기 조건을만족하지 않음을 확인함에 기반하여, 동적 전압 및 주파수 스케일링(dynamic voltage and frequency scaling:DVFS) 방식에 기반하여 동작하는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제15항에 있어서,상기 제3 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 상기 제1 동작을 수행하는 동작을 더 포함하는 상기 방법."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "컴퓨터로 독출 가능한 적어도 하나의 명령어 및 데이터를 저장하는 저장 매체에 있어서, 상기 적어도 하나의 명령어 및 데이터는 전자 장치(101)의 프로세서(120; 200; 211)에 의하여 실행 시에, 상기 전자 장치(101)로 하여금 적어도 하나의 동작을 수행하도록 야기하고,상기 적어도 하나의 동작은:공개특허 10-2025-0035413-6-상기 프로세서의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하는 동작;상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하는 동작;상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 메모리(130)에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하는 동작; 및상기 프로세서 스톨이 상기 메모리 액세스 지연에 의한 것임을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphicprocessing unit: GPU)(213) 또는 멀티미디어 블록(215) 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다높게 조정하는 동작을 포함하는 상기 저장 매체."}
{"patent_id": "10-2023-0181733", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제19항에 있어서,상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수행하는 중에 캐시 미스(cachemiss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레이트(miss rate)가 임계 미스레이트를 초과하는 조건 중 적어도 하나를 포함하는 상기 저장 매체."}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시 예에 따르면, 전자 장치는, 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나, 프로세서(120; 200; 211), 및 명령어(instruction)들을 저장하는 메모리를 포함하고, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 프로세서 (뒷면에 계속)"}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 일 실시 예는 전력 제어를 수행하는 전자 장치 및 그 동작 방법에 관한 것이다."}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "전자 장치(예: 스마트 폰과 같은 휴대용 장치)의 성능 및 기능은 지속적으로 향상되고 있다. 반면에, 전자 장치 는, 사용자 편의성을 위해 전자 장치의 사이즈는 작아지고, 무게는 가벼워지는 형태로 진화하고 있다. 이와 같 은 전자 장치의 소형화 및 경량화로 인해, 전자 장치의 배터리 용량이 제한될 수 있고, 따라서 전자 장치의 사 용 시간에 직접적인 영향을 줄 수 있는 소모 전류에 대한 관리의 중요성이 더욱 크게 부각되고 있다. 전자 장치에서 사용되는 어플리케이션 프로세서(application processor: AP)는 소모 전류를 제어하기 위해 IP(intellectual property) 블록들(예: 중앙 프로세싱 유닛(central processing unit: CPU), 그래픽 프로세싱 유닛(graphic processing unit: GPU), 신경망 처리 장치(Neural Processing Unit: NPU), 멀티미디어 블록, 및 /또는 메모리 제어기(memory controller))을 분리된 전력 도메인(power domain)들로 구성하고, 전자 장치의 동 작 상황에 따라 각 전력 도메인의 동작 전압과 동작 주파수를 동적으로 변경하는 동적 전압 및 주파수 스케일링 (dynamic voltage and frequency scaling: DVFS) 방식을 적용하고 있다. AP는 소모 전류를 제어하기 위해 정규 화된 CPU 성능(예: DMIPS(Dhrystone Million Instructions Per Second) 기반 CPU 성능)에 기반하여, 전자 장치의 동작 상황에 따른 CPU 로드(load)(예: 실행 가능한 태스크(runnable task)들의 로드 값들의 합)의 변화 에 따라 적합한 CPU를 선택하는 코어 선택(core selection) 방식 역시 적용하고 있다. AP는 시스템 온 칩(system on chip: SoC) 형태로 구현될 수 있으며, SoC 아키텍처(architecture)에서는, 서비 스 품질(quality of service: QoS) 신호를 지원하는 것이 요구되고 있다. 인터커넥트(interconnect) 블록은 IP 블록들(예: CPU, GPU, 및/또는 멀티미디어 블록)로부터 전달되는 트랜잭션(transaction)들에 대한 라우팅 (routing) 수행 시 QoS 값에 기반하여, 각 트랜잭션에 대한 우선 순위를 결정할 수 있고, 결정된 우선 순위에 기반하여 해당 트랜잭션을 메모리 제어기로 전달할 수 있다. 메모리 제어기 또한 읽기/쓰기 명령(read/write command)을 통해 메모리(예: 동적 랜덤 액세스 메모리(dynamic random access memory: DRAM))에 액세스하는 동 작에서 QoS 값에 기반하여 스케줄링(scheduling) 우선 순위를 결정할 수 있다. IP 블록들 중 CPU의 경우, CPU 사이클(cycle) 중 대부분을 CPU 스톨(stall) 구간(duration)이 점유하게 됨에도 불구하고, 종전 DVFS 방식의 경우 이런 CPU 스톨 구간을 고려하지 않기 때문에, CPU 스톨 구간 동안에도 CPU는불필요하게 높은 동작 주파수를 유지하며 비교적 큰 전류를 소모할 수 있다. 상술한 정보는 본 개시에 대한 이해를 돕기 위한 목적으로 하는 배경 기술(related art)로 제공될 수 있다. 상 술한 내용 중 어느 것도 본 개시와 관련된 종래 기술(prior art)로서 적용될 수 있는지에 대하여 어떠한 주장이 나 결정이 제기되지 않는다."}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시의 일 실시 예에 따르면, 전자 장치는, 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나, 프로세서(120; 200; 211), 및 명령어(instruction)들을 저장하는 메모리를 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 프로세서의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 상기 메 모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 상기 GPU 또는 상기 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보 다 높게 조정하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 방법은, 프로세서(120; 200; 211)의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하 는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기 반하여, 상기 프로세서의 프로세서 스톨이 메모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는 지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜 잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다 높게 조정하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 컴퓨터로 독출 가능한 적어도 하나의 명령어 및 데이터를 저장하는 저장 매체 가 제공될 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 명령어 및 데이터는 전자 장치의 프로세서(120; 200; 211)에 의하여 실행 시에, 상기 전자 장치로 하여금 적어도 하나의 동작을 수행하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 프로세서의 프로세서 사이클에 대한 제1 스 톨(stall) 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함 을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 메모리에 대한 메모리 액세스 지연과 관련되는조건을 만족하는지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 프로세서 스톨이 상기 메모리 액세스 지연에 의한 것임을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다 높게 조정하는 동작을 포함할 수 있다."}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하 본 개시의 일 실시 예를 첨부된 도면을 참조하여 상세히 설명한다. 그리고, 본 개시의 일 실시 예를 설명 함에 있어서, 관련된 공지 기능 또는 구성에 대한 구체적인 설명이 본 개시의 일 실시 예의 요지를 불필요하게 흐릴 수 있다고 판단된 경우 그 상세한 설명은 생략한다. 그리고 후술되는 용어들은 본 개시의 일 실시 예에서 의 기능을 고려하여 정의된 용어들로서 이는 사용자, 운용자의 의도 또는 관례 등에 따라 달라질 수 있다. 그러 므로 그 정의는 본 명세서 전반에 걸친 내용을 토대로 내려져야 할 것이다. 본 명세서에서 사용되는 기술적 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 본 개시의 일 실 시 예를 한정하려는 의도가 아님을 유의해야 한다. 또는, 본 명세서에서 사용되는 기술적 용어는 본 명세서에서 특별히 다른 의미로 정의되지 않는 한, 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에 의해 일반적 으로 이해되는 의미로 해석되어야 하며, 과도하게 포괄적인 의미로 해석되거나, 과도하게 축소된 의미로 해석되 지 않아야 한다. 또는, 본 명세서에서 사용되는 기술적인 용어가 본 개시의 사상을 정확하게 표현하지 못하는 잘못된 기술적 용어일 때에는, 당업자가 올바르게 이해할 수 있는 기술적 용어로 대체되어 이해되어야 할 것이다. 또는, 본 개시의 일 실시 예에서 사용되는 일반적인 용어는 사전에 정의되어 있는 바에 따라, 또는 전후 문 맥상에 따라 해석되어야 하며, 과도하게 축소된 의미로 해석되지 않아야 한다. 또는, 본 명세서에서 사용되는 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"구성된다\" 또는 \"포함한다\" 등의 용어는 명세서 상에 기재된 여러 구성 요소들, 또는 여러 동작들을 반드시 모두 포함하는 것으로 해석되지 않아야 하며, 그 중 일부 구성 요소들 또는 일부 동작들 은 포함되지 않을 수도 있고, 또는 추가적인 구성 요소 또는 동작들을 더 포함할 수 있는 것으로 해석되어야 한 다. 또는, 본 명세서에서 사용되는 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성 요소들을 설명하는데 사용될 수 있지만, 상기 구성 요소들은 상기 용어들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성 요소를 다른 구성 요소로부터 구별하는 목적으로만 사용된다. 예를 들어, 본 개시의 권리 범위를 벗어나지 않으 면서 제1 구성 요소는 제2 구성 요소로 명명될 수 있고, 유사하게 제2 구성 요소도 제1 구성 요소로 명명될 수 있다. 어떤 구성 요소가 다른 구성 요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성 요소 에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성 요소가 존재할 수도 있다. 반면에, 어떤 구성 요소가 다른 구성 요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있다고 언급된 때에는,중간에 다른 구성 요소가 존재하지 않는 것으로 이해되어야 할 것이다. 이하, 첨부된 도면을 참조하여 본 개시에 따른 일 실시 예를 상세히 설명하되, 도면 부호에 관계없이 동일하거 나 유사한 구성 요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 또는, 본 개 시의 일 실시 예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 개시의 요지를 흐릴 수 있다 고 판단되는 경우 그 상세한 설명을 생략한다. 또는, 첨부된 도면은 본 개시의 사상을 쉽게 이해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 개시의 사상이 제한되는 것으로 해석되어서는 아니 됨에 유의하여야 만 한다. 본 개시의 사상은 첨부된 도면들 외에 모든 변경들, 균등물들 내지 대체물들에 까지도 확장되는 것으 로 해석되어야 한다. 이하, 본 개시의 일 실시 예에서는 전자 장치(electronic device)를 일 예로 하여 설명할 것이나, 전자 장치는 단말(terminal), 이동국(mobile station), 이동 장비(mobile equipment: ME), 사용자 장비(user equipment: UE), 사용자 단말(user terminal: UT), 가입자국(subscriber station: SS), 무선 장치(wireless device), 휴대 장치(handheld device), 또는 액세스 단말(access terminal: AT)로 칭해질 수 있다. 또는, 본 개시의 일 실시 예에서, 전자 장치는 예를 들어 휴대폰, 개인용 디지털 기기(personal digital assistant: PDA), 스마트 폰 (smart phone), 무선 모뎀(wireless MODEM), 또는 노트북과 같이 통신 기능을 갖춘 장치가 될 수 있다. 도 1은 일 실시 예에 따른 네트워크 환경 내의 전자 장치를 개략적으로 도시한 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워 크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하 여 전자 장치 또는 서버와 통신할 수 있다. 일 실시 예에 따르면, 전자 장치는 서버를 통 하여 전자 장치와 통신할 수 있다. 일 실시 예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스 , 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈 , 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시 예에서는, 전자 장치(10 1)에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가 될 수 있다. 어떤 실시 예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테 나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시 예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비 휘발성 메모리에 저장할 수 있다. 일 실시 예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시 예에 따르 면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다 른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시 예에 따르면, 보 조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시 예에 따르면, 리시버는 스피커 와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시 예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시 예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시 예에 따르면, 인터페이스는, 예를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인 터페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시 예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시 예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시 예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시 예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다.배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시 예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시 예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, 와이파이(Wi-Fi: wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인 터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치(10 4)와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크 와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 복수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시 예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운 링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시 예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시 예에 따르면, 안테나 모듈은 복수의 안테 나들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통 신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시 예에 따르면, 방사체 이외에 다 른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 일 실시 예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시 예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗면 또 는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시 예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시 예에 따르면, 전자 장치에서 실행되는 동작들 의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또 는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청 할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있 다. 전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로 서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 일 실시 예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시 예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술에 기반하여 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 일 실시 예에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시 예에 따른 전자 장치는 전술한 기기들에 한정되지 않 는다. 본 문서의 일 실시 예 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시 예로 한정하려 는 것이 아니며, 일 실시 예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템에 대응 하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당 하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위해 사 용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구 성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 일 실시 예에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 두 개 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일 부가 될 수 있다. 예를 들면, 일 실시 예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 일 실시 예는 기기(machine)(예: 전자 장치) 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매체의 형 태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장되는 경우 와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시 예에 따르면, 본 문서에 개시된 일 실시 예에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD-ROM))의형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 일 실시 예에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 일 실시 예에 따르 면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상의 다른 구 성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로 그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구 성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 일 실시 예에 따르면, 모듈, 프로그램 또는 다른 구성요소에 의해 수 행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이 상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 전자 장치에서 사용되는 어플리케이션 프로세서(application processor: AP)는 소모 전류를 제어하기 위해 IP(intellectual property) 블록들(예: 중앙 프로세싱 유닛(central processing unit: CPU), 그래픽 프로세싱 유닛(graphic processing unit: GPU), 신경망 처리 장치(Neural Processing Unit: NPU) 멀티미디어 블록, 및/ 또는 메모리 제어기(memory controller))을 분리된 전력 도메인(power domain)들로 구성하고, 전자 장치의 동작 상황에 따라 각 전력 도메인의 동작 전압과 동작 주파수를 동적으로 변경하는 동적 전압 및 주파수 스케일링 (dynamic voltage and frequency scaling: DVFS) 방식을 적용할 수 있다. AP는 소모 전류를 제어하기 위해 정 규화된 CPU 성능(예: DMIPS(Dhrystone Million Instructions Per Second) 기반 CPU 성능)에 기반하여, 전 자 장치의 동작 상황에 따른 CPU 로드(load)(예: 실행 가능한 태스크(runnable task)들의 로드 값들의 합)의 변 화에 따라 적합한 코어(core)를 선택하는 코어 선택(core selection) 방식 역시 적용할 수 있다. 예를 들어, 코 어 선택 방식이 사용될 경우, AP는 게임과 같이 로드가 비교적 큰 어플리케이션에 대해서는, 최적의 사용자 경 험(user experience: UX)을 제공하기 위해, 소모 전류가 비교적 크게 증가할 지라도 성능이 비교적 좋은 코어를 선택하여 고속 동작을 가능하게 할 수 있다. 이와는 달리, 동영상 공유 서비스와 같이 로드가 비교적 적은 어플 리케이션에 대해서는, AP는 동작 전압을 감소시키고, 동작 주파수를 낮춤으로써, 성능 측면 보다는 효율 측면에 서 이점이 있는 코어를 선택하여 소모 전류를 제어할 수 있다. 일반적으로, 시스템 온 칩(system on chip: SoC) 아키텍처(architecture)에서는, 서비스 품질(quality of service: QoS) 신호를 지원하는 것이 요구되고 있다. 인터커넥트(interconnect) 블록은 IP 블록들(예: CPU, GPU, 및/또는 멀티미디어 블록 등)로부터 전달되는 트랜잭션(transaction)들에 대한 라우팅(routing) 수행 시 QoS 값에 기반하여, 각 트랜잭션에 대한 우선 순위를 결정할 수 있고, 결정된 우선 순위에 기반하여 해당 트랜 잭션을 메모리 제어기로 전달할 수 있다. 트랜잭션은 각 IP 블록이 인터커넥트와 송수신하는 읽기/쓰기의 기본 단위를 나타낼 수 있다. 메모리 제어기 또한 읽기/쓰기 명령(read/write command)을 통해 메모리(예: 동적 랜덤 액세스 메모리(dynamic random access memory: DRAM))에 액세스하는 동작에서 QoS 값에 기반하여 스케줄링(scheduling) 우선 순위를 결정할 수 있다. 실제 동작 시나리오에서는, CPU 사이클(cycle) 중 대부분을 프론트엔드 스톨(frontend stall) 또는 백엔드 스톨 (backend stall)이 점유하여 CPU의 사이클 당 수행 명령어 수(instructions per cycle: IPC)가 급격하게 감소 하는 상황이 발생할 수 있다. CPU 스톨은 CPU 동작에 지연이 발생하는 상황을 나타낼 수 있으며, CPU 바운드 스 톨(CPU bound stall), 메모리 바운드 스톨(memory bound stall), 프론트엔드 스톨(frontend stall), 및/또는 백엔드 스톨(backend stall)을 포함할 수 있다. CPU 바운드 스톨은 명령어(instruction)를 처리하는 CPU 내부 실행 엔진(execution engine)에서 발생하는 스톨 을 나타낼 수 있다. 메모리 바운드 스톨은 CPU 내부 캐시(cache) 및 DRAM을 포함한 메모리 액세스 동작에서 발생하는 스톨을 나타낼 수 있다. 메모리 바운드 스톨은 프론트엔드 스톨을 초래할 수 있는 L1 명령어 캐시 미스(L1 instruction cache miss)와 백엔드 스톨을 초래할 수 있는 L1 데이터 캐시 미스(L1 data cache miss)를 포함할 수 있다. 프론트엔드 스톨은 CPU 가 수행할 명령어를 읽어오는 동작에서 발생하는 스톨을 나타낼 수 있다. 프론트엔드 스 톨은 L1 명령어 캐시 미스에 의해 발생할 수 있으며, 그렇다고 이에 제한되는 것은 아닐 수 있다. 프론트엔드 스톨은 명령어를 가져오는(fetch) 동작에서 캐시 미스(cache miss)가 발생하거나, 또는 분기 예측 오류(branch misprediction)에 의한 CPU 파이프라인 플러쉬(pipeline flush) 동작으로 인해 지연이 발생하는 경우를 포함할 수 있다. 백엔드 스톨은 CPU 가 읽기/쓰기 명령어를 처리하는 동작에서 발생하는 스톨을 나타낼 수 있다. 백엔드 스톨은 L1 데이터 캐시 미스에 의해 발생할 수 있으며, 그렇다고 이에 제한되는 것은 아닐 수 있다. 백엔드 스톨은 데 이터 읽기/쓰기 동작 중 발생하는 캐시 미스로 인해 외부 자원인 DRAM에 대한 액세스가 필요한 경우를 포함할 수 있다. IPC는 클럭 당 수행 명령어 수(instructions per clock)이라고도 칭해질 수 있으며, 각 클록 사이클에 대해 실행되는 명령어들의 평균 개수일 수 있으며, 프로세서의 성능의 한 측면일 수 있다. 주소 변환 캐시(translation lookaside buffer: TLB)의 사이즈가 AP에서 실행되는 어플리케이션의 WSS(working set size) 보다 작을 경우, 또는 프리페처(prefetcher)의 부정확한 예측으로 인해 캐시/TLB 미스 레이트(miss rate)가 임계 값 이상으로 설정 시간 이상 유지될 경우, CPU가 DRAM에 액세스할 때, 인터커넥트 블록에서 발생 하는 다른 IP 들에 의한 트랜잭션들과 CPU에 의한 트랜잭션과의 경쟁(contention)으로 인해 혹은 동작 중인 대 역폭(bandwidth) 자체의 부족으로 인해 CPU가 수신할 필요가 있는 응답에 대한 수신은 지연될 수 있다. 프리페 처는 메모리 액세스 지연을 방지하기 위하여 프리페칭(prefetching) 동작을 수행할 수 있다.프리페칭 동작은 실 행중인 어플리케이션의 메모리 액세스 패턴(memory access pattern)을 모니터링하고, 실행중인 어플리케이션이 다음에 액세스할 데이터가 어떤 데이터인지 예측하고, 예측된 데이터를 미리 가져올 수 있다. 하지만, 소모 전류 제어를 위해 정규화된 CPU 성능(예: DMIPS 기반 CPU 성능)에 기반하여 동작 상황에 따른 작 업 로드(workload)만 고려하는 DVFS 방식에서는, 동작 주파수와 동작 전압의 동적 제어를 위해 CPU stall(예, front end stall, back end stall) 상황을 고려하지 않고 있고, 따라서 CPU는 인터커넥트 블록을 통해 DRAM 에 서 데이터를 가져오는 CPU stall 구간 동안 CPU 는 불필요하게 높은 동작 주파수를 유지하며 불필요하게 많은 전류를 소모하게 되는 비효율적인 동작을 할 수 있다. 이런 비효율적인 동작을 방지하기 위해, 인터커넥트 블록 과 DRAM의 동작 주파수 및 동작 전압을 높이는 방식을 적용하는 것을 시도할 수 있으나, AP가 이미 최대 전력을 사용하고 있을 경우, 인터커넥트 블록과 DRAM의 동작 주파수 및 동작 전압을 높이는 방식을 적용하는 것은 어려 울 수 있고, 따라서 CPU의 불필요한 전류 소모를 방지하는 것은 어려울 수 있다. 본 개시의 일 실시 예는 전력 제어를 수행하는 전자 장치 및 그 동작 방법을 제공할 수 있다. 본 개시의 일 실시 예는 CPU stall 정보에 기반하여 전력 제어를 수행하는 전자 장치 및 그 동작 방법을 제공할 수 있다. 본 개시의 일 실시 예는 CPU 트랜잭션에 대한 QoS를 조정하거나 동작 주파수 및 동작 전압을 제어하는 전자 장 치 및 그 동작 방법을 제공할 수 있다. 도 2는 일 실시 예에 따른 AP를 개략적으로 도시한 블록도이다. 도 2를 참조하면, AP는 CPU, GPU, 멀티미디어 블록, 인터커넥트 블록, 및/또는 메모 리(예, DRAM, SRAM, CXL(Compute Express Link) memory 등) 제어기를 포함할 수 있다. AP는 도 1의 프로세서에 상응할 수 있다. 도 2에서는 AP가 CPU, GPU, 멀티미디어 블록, 인터커넥 트 블록, 및/또는 메모리 제어기를 포함하는 형태로 도시하였으나, 이에 제한되는 것은 아니며, AP는 NPU와 같은 추가적인 다양한 IP 블록들을 포함할 수 있다. 일 실시 예에서, CPU는 프로세서일 수 있다.일 실시 예에 따르면, AP는 SoC 형태로 구현될 수 있다. 일 실시 예에 따르면, CPU는 성능 모니터링 유닛(performance monitoring unit: PMU)에서 제공되는 정보(예: PMU에서 제공되는 이벤트)를 수집 및 분석할 수 있다. CPU는 설정 주기(예: 1초)로 PMU에서 제공되는 정보를 수집 및 분석할 수 있다. PMU에 서 제공되는 정보를 수집 및 분석하는데 사용되는 설정 주기는 상황에 따라 가변적일 수 있다. PMU에서 제공되 는 정보에 대해서는 하기 도 3에서 설명될 것이므로, 여기서는 그 상세한 설명을 생략하기로 한다. 일 실시 예에 따르면, CPU는 CPU 및/또는 다른 IP 블록들(예: GPU 및/또는 멀티미디어 블록 )로부터의 트랜잭션에 대한 QoS 값을 제어할 수 있다. CPU는 DVFS 동작을 제어할 수 있다. 일 실시 예에 따르면, CPU는 다른 IP 블록들(예: GPU, 멀티미디어 블록, 인터커넥트 블록, 및/또 는 메모리 제어기)에 대한 동작 전압 및/또는 동작 주파수를 제어할 수 있다(또는 조정할 수 있다). 일 실시 예에 따르면, CPU는 PMU에서 제공되는 정보에 기반하여, CPU 사이클의 스톨 비율(stall_ratio)을 검출할 수 있다. 일 실시 예에서, CPU 사이클의 스톨 비율은 CPU 사이클(cycle) 중 CPU 스톨 발생 구간이 점유하는 비율을 나타낼 수 있다. 일 실시 예에 따르면, CPU 사이클의 스톨 비율은 설정 시간(예: 1초) 동안 PMU에 서 제공되는 정보에 기반하여 검출될 수 있다. 일 실시 예에서, 설정 시간은 CPU의 동작 상황을 검출하여 적절한 전력 제어를 수행하기 위해 필요한 최적의 시간을 나타낼 수 있다. 일 실시 예에서, 설정 시간은 1개의 CPU 사이클에 상응하는 기간, 또는 설정된, 복수의 CPU 사이클들에 상응하는 시간이 될 수 있으며, CPU 사이클 의 스톨 비율을 검출하기 위한 설정 시간은 상황에 따라 가변적일 수 있다. 일 실시 예에 따르면, CPU는 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제1 임계 값(예: 제1 임계 스 톨 비율(stall_ratio_rise))을 초과하는지 여부를 확인할 수 있다. CPU 사이클의 스톨 비율이 제1 임계 값을 초 과할 경우, CPU는 CPU 스톨이 메모리 바운드 스톨인지 또는 CPU 바운드 스톨인지 확인할 수 있다. 일 실시 예에서, 메모리 바운드 스톨은 메모리 액세스 지연(예: DRAM과 같이 CPU의 외부 메모리에 대한 액세스 지 연)으로 발생한 스톨일 수 있다. CPU 스톨이 CPU 바운드 스톨일 경우, CPU는 전력 예산 룸(power budget room)이 설정된 임계 값(예: 제3 임계값) 이상일 경우, CPU는 DVFS 방식에 기반하여 CPU의 동작 전압 및 동작 주파수를 조정하여(예를 들어, 증가시켜) CPU 스톨 상황을 벗어날 수 있도록 할 수 있다. CPU 스톨이 메모리 바운드 스톨일 경우, CPU는 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 설정 값(예: 1)만큼 증가시킬 수 있다. 일 실시 예에서는, 트랜잭션에 대한 QoS 값이 클수록 우선 순위가 높다고 가정하여 설명할 것이나, 이와는 달리, 트랜잭 션에 대한 QoS 값이 작을수록 우선 순위가 높을 수도 있다. CPU의 트랜잭션들에 대해 적용되는 QoS 값을 설정 값만큼 증가시킨 CPU는, CPU 사이클의 스톨 비율을 검출할 수 있다. CPU는 QoS 값을 설정 값만큼 증가시킨 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되 어 있는 제2 임계 값(예: 제2 임계 스톨 비율(stall_ratio_fall)) 미만인지 여부를 확인할 수 있다. CPU 사이클 의 스톨 비율이 제2 임계 값 미만일 경우, CPU는 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원시킬 수 있다. QoS 값을 설정 값만큼 증가시킨 후 검출된 CPU 사이클의 스톨 비율이 제2 임계값 또는 제 1 임계값 이상일 경우, CPU는 전력 예산 룸(power budget room)이 제3 임계 값 이상인지 여부를 확인할 수 있다. 일 실시 예에서, 전력 예산 룸이 제3 임계 값 이상일 경우, 사용 가 능한 전력이 비교적 충분함을 나타낼 수 있다. 전력 예산 룸이 제3 임계 값 이상일 경우, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동 작 전압 및 동작 주파수를 조정할 수 있다. 일 실시 예에 따르면, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 높일 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 전력 예산 룸이 제3 임계 값 이상일 경우, CPU는 CPU의 동작 전압 및 동작 주파수를 유지할 수 있다. 이렇게, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후, CPU 사이클의 스톨 비율을 검출할 수 있다. CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 제2 임계 값 또는 제 1 임계 값 미만인지 여부를 확인할 수 있다. CPU는 인터커 넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스 톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원 래의 값(예, 설정 값만큼 감소된 값)으로 복원시킬 수 있다. 인터커넥트 블록 및 메모리 제어기 각각 의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 원 래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 일 실시 예에서, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 낮출 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 낮출 수 있다. 전력 예산 룸이 제3 임계 값 미만일 경우, CPU는 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정할 수 있다. 일 실시 예에 따르면, CPU는 CPU의 동작 전압을 설정 전압 만큼 낮출 수 있고, CPU의 동작 주파수를 설정 주파수 만큼 낮출 수 있을 뿐만 아니라, 동시에 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 높일 수 있고, 인터커넥트 블 록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 이렇게, 전력 예산 룸이 제3 임계 값 미만일 경우(예를 들어, 전력 예산이 부족할 경우)에는, CPU는, CPU 사이클의 대부분을 메모 리 액세스로 인한 CPU 스톨이 차지함에 따라 명령어를 빠르게 처리할 수 없음에도 불구하고, 높은 동작 주파수를 유지하고 있는 CPU의 동작 주파수와 동작 전압을 낮추고, 이로 인해 절약된 전력 예산을 인터커넥트 블 록 및 메모리 제어기의 동작 주파수와 동작 전압을 높이는데 사용함으로써 가능한 빨리 CPU 스톨 상 황에서 벗어날 수 있도록 할 수 있다. 이렇게, CPU는 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수 를 조정한 후, CPU 사이클의 스톨 비율을 검출할 수 있다. CPU는 CPU, 인터커넥트 블록 및 메모 리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 제2 임계 값 미만인지 여부를 확인할 수 있다. CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원시킬 수 있다. CPU는 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU는 인터커 넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 일 실시 예에서, CPU, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 낮출 수 있고, 인 터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 낮출 수 있다. CPU, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클 의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, CPU는 CPU의 동작 전압 및 동작 주파 수를 원래의 동작 전압 및 동작 주파수로 복원할 수 있다. 일 실시 예에서, CPU는 CPU의 동작 전압을 설정 전압 만큼 높일 수 있고, CPU의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 도 3은 일 실시 예에 따른 CPU를 개략적으로 도시한 블록도이다. 도 3을 참조하면, CPU(예: 도 2의 CPU)는 AP(예: 도 1의 프로세서 또는 도 2의 AP)에 포 함될 수 있다. CPU는 PMU 모니터, QoS 관리기(QoS governor), 및/또는 DVFS 관리기(DVFS governor)를 포함할 수 있다. 도 3에서는 PMU 모니터, QoS 관리기, 및/또는 DVFS 관리기 가 별도의 블록들로 구현된 경우를 일 예로 하여 설명하고 있으나, PMU 모니터, QoS 관리기, 및/또는 DVFS 관리기 중 적어도 두 개는 하나의 블록으로 통합될 수 있다. 일 실시 예에 따르면, PMU 모니터는 PMU에서 제공되는 정보를 수집 및 분석할 수 있다. 일 실시 예에 따르 면, PMU 모니터는 PMU에서 제공되는 정보를 수집 및 분석하여 하기 표 1과 같은 메트릭(metric)들을 결정 할 수 있다(예를 들어, 계산할 수 있다). <표 1>"}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "표 1에서, IPC는 CPU의 IPC를 나타낼 수 있다. 예를 들어, IPC는 INST_RETIRED/CPU_CYCLES와 같이 결정될 수 있다. 표 1에서, Stall Ratio는 CPU의 스톨 비율을 나타낼 수 있으며, STALL/CPU_CYCLES, STALL_FRONTEND/CPU_CYCLES, 및/또는 STALL_BACKED/CPU_CYCLES 중 어느 하나로 결정될 수 있다. 표 1에서, Cache Miss Rate은 CPU의 총 캐시 액세스 횟수 중 미스가 발생한 캐시 액세스 횟수의 비율을 나 타낼 수 있으며, L1I_CACHE_REFILL/L1I_CACHE, L1D_CACHE_REFILL/L1D_CACHE, L2D_CACHE_REFILL/L2D_CACHE, 및/또는 L3D_CACHE_REFILL/L3D_CACHE 중 어느 하나로 결정될 수 있다. 표 1에서, TLB Miss Rate은 총 TLB 액세스 횟수 중 미스가 발생한 TLB 액세스 횟수의 비율을 나타낼 수 있으며, L1I_TLB_REFLL/L1I_TLB, L1D_TLB_REFILL/L1D_TLB, 및/또는 L2D_TLB_REFILL/L2D_TLB 중 어느 하나로 결정될 수 있다. 표 1에서, Branch Misprediction Rate는 CPU에 의해 수행된 전체 분기 명령어(branch instruction)들 중 잘못 예측 수행된 분기 명령어의 비율을 나타낼 수 있고, BR_MIS_PRED_RETIRED/BR_RETIRED로 결정될 수 있다. QoS 관리기는 CPU, GPU, 및/또는 멀티미디어 블록으로부터의 트랜잭션에 대한 QoS 값을 제어할 수 있다. DVSF 관리기는 DVFS 동작을 제어할 수 있다. 일 실시 예에 따르면, DVSF 관리기는 CPU와 다른 IP 블록들(예: GPU(예: GPU), 멀티미디어 블록(예: 멀티미디어 블록), 인터커넥트 블록(예: 인터커넥트 블록), 및/또는 메모리 제어기(예: 메모리 제어기))에 대한 동작 전압 및/또는 동작 주파수를 제어할 수 있다(또는 조정할 수 있다). 일 실시 예에 따르면, PMU 모니터는 PMU로부터 수집한 정보에 기반하여, CPU 사이클의 스톨 비율을 검출하 고, CPU, GPU, 및/또는 멀티미디어 블록으로부터의 트랜잭션에 대한 QoS 값을 제어하기 위한 명 령을 QoS 관리기로 전달할 수 있다. 일 실시 예에서, CPU 사이클의 스톨 비율은 CPU 사이클 중 CPU 스톨 구간이 점유하는 비율을 나타낼 수 있다. 표 1에서, Stall Ratio가 사이클의 스톨 비율에 상응할 수 있다. 일 실시 예에 따르면, CPU 사이클의 스톨 비율은 설정 시간(예: 1초) 동안 PMU에서 제공되는 정보에 기반하여 검출 될 수 있다. 일 실시 예에서, 설정 시간은 CPU 동작 상황을 검출하여 적절한 전력 제어를 수행하기 위해 필요한 최적의 시간을 나타낼 수 있으며, CPU 사이클의 스톨 비율을 검출하기 위한 설정 시간은 상황에 따라 가변적일 수 있다. 일 실시 예에 따르면, PMU 모니터는 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제1 임계 값(예: 제1 임계 스톨 비율(stall_ratio_rise))을 초과하는지 여부를 확인할 수 있다. CPU 사이클의 스톨 비율이 제1 임계 값을 초과할 경우, PMU 모니터는 CPU 스톨이 메모리 액세스 지연(예: DRAM 액세스 지연)에 의해 발생한 CPU 스톨인지 여부를 확인할 수 있다. 일 실시 예에 따르면, 메모리 액세스 지연에 의해 발생한 CPU 스톨은 메 모리 바운드 스톨(memory bound stall)일 수 있다. 일 실시 예에서, 메모리 바운드 스톨은 메모리 액세스 지연 (예: DRAM과 같이 프로세서(예: CPU)의 외부 메모리에 대한 액세스 지연)으로 발생한 스톨일 수 있다. CPU 스톨 이 DRAM 액세스 지연에 의해 발생한 CPU 스톨이 아닐 경우, PMU 모니터는 CPU 스톨이 CPU 바운드 스톨(CPU bound stall)인지 여부를 확인할 수 있다. CPU 스톨이 메모리(예, DRAM, SRAM, CXL(Compute Express Link) memory 등) 액세스 지연에 의해 발생한 스톨일 경우, PMU 모니터는 QoS 관리기에게 명령(command)를 전달하여 CPU의 트랜잭션들에 대해 적용되 는 QoS 값을 설정 값(예: 1)만큼 증가시킬 수 있다. 일 실시 예에서는, 트랜잭션에 대한 QoS 값이 클수록 우선 순위가 높다고 가정하여 설명할 것이나, 이와는 달리, 트랜잭션에 대한 QoS 값이 작을수록 우선 순위가 높을 수 도 있다. CPU의 트랜잭션들에 대해 적용되는 QoS 값을 설정 값만큼 증가시킨 후, PMU 모니터는, CPU 사이클의 스톨 비율을 검출하고, 이를 기반으로 QoS 관리기 및 DVFS 관리기에게 명령을 전달할 수 있다. PMU 모니터는 QoS 관리기는 명령을 전달하여 QoS 값을 설정 값만큼 증가시킨 후 검출된 CPU 사이클의 스 톨 비율이 미리 설정되어 있는 제2 임계 값(예: 제2 임계 스톨 비율(stall_ratio_fall)) 미만인지 여부를 확인 할 수 있다. CPU 사이클의 스톨 비율이 제2 임계 값 미만일 경우, PMU 모니터는 QoS 관리기에게 명령 을 전달하여 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원 시킬 수 있다. QoS 값을 설정 값만큼 증가시킨 후 검출된 CPU 사이클의 스톨 비율이 제2 임계값 또는 제 1 임계 값 이상일 경우, PMU 모니터는 전력 예산 룸이 제3 임계 값 이상인지 여부를 확인할 수 있다. 일 실시 예 에서, 전력 예산 룸이 제3 임계 값 이상일 경우, 사용 가능한 전력이 비교적 충분함을 나타낼 수 있다. 전력 예산 룸이 제3 임계 값 이상일 경우, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 인터커넥 트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정할 수 있다. 일 실시 예에 따르면, PMU 모니 터는 DVFS 관리기에게 명령을 전달하여 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 높일 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 전력 예산 룸이 제3 임계 값 이상일 경우, PMU 모니터는 DVFS 관리기에게 별도의 명령을 전달 하지 않고 CPU의 동작 전압 및 동작 주파수를 유지할 수 있다. 이렇게, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후, PMU 모니터는 CPU 사이클의 스톨 비율을 검출하고, 이를 기반으로 QoS 관리기 및 DVFS 관리기에 게 명령을 전달할 수 있다. PMU 모니터는 DVFS 관리기에게 명령을 전달하여 인터커넥트 블록 및 메모 리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 제2 임계 값 미만인 지 여부를 확인할 수 있다. PMU 모니터는 DVFS 관리기에게 명령을 전달하여 인터커넥트 블록 및 메모 리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, PMU 모니터는 QoS 관리기에게 명령을 전달하여 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원시킬 수 있다. 인터커넥트 블록 및 메 모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있 는 제2 임계 값 미만일 경우, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 인터커넥트 블록 및 메 모리 제어기 각각의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 일 실 시 예에서, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이 클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, PMU 모니터는 DVFS 관리기에게 명령 을 전달하여 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 낮출 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 낮출 수 있다. 전력 예산 룸이 제3 임계 값 미만일 경우, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정할 수 있다. 일 실시 예에 따르면, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 CPU의 동작 전압을 설정 전압만큼 낮출 수 있고, CPU의 동작 주파수를 설정 주파수만큼 낮출 수 있는 동시에, 인터커넥트 블록 및 메모리 제어기 각 각의 동작 전압을 설정 전압 만큼 높일 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 이렇게, DVFS 관리기가 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후, PMU 모니터는 CPU 사이클의 스톨 비율을 검출하고, 이를 기반으로 QoS 관리기 및 DVFS 관 리기에게 명령을 전달할 수 있다. PMU 모니터는 DVFS 관리기에게 명령(command)을 전달하여 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이 클의 스톨 비율이 제2 임계 값 미만인지 여부를 확인할 수 있다. PMU 모니터는 DVFS 관리기에게 명령 (command)을 전달하여 CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정 한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, QoS 관리기에게 명 령을 전달하여 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복 원시킬 수 있다. 일 실시 예에 따르면, CPU, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, PMU 모니터는 DVFS 관 리기에게 명령을 전달하여 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 일 실시 예에서, CPU, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 CPU, 인터커넥트 블록, 및 메 모리 제어기 각각의 동작 전압을 설정 전압 만큼 낮출 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 낮출 수 있다. CPU, 인터커넥트 블록, 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제2 임계 값 미만일 경우, PMU 모니터는 DVFS 관리기에게 명령을 전달하여 CPU의 동작 전압 및 동작 주파수를 원래의 동작 전 압 및 동작 주파수로 복원할 수 있다. 일 실시 예에서, PMU 모니터는 DVFS 관리기에게 명령을 전달하 여 CPU의 동작 전압을 설정 전압 만큼 높일 수 있고, CPU의 동작 주파수를 설정 주파수 만큼 높일 수 있다. 도 4는 일 실시 예에 따른 AP의 소프트웨어 아키텍처를 개략적으로 도시한 블록도이다. 도 4를 참조하면, AP(예: 도 2의 AP)는 소프트웨어 아키텍처로 구현될 수 있으며, AP의 소프트웨어 아키텍 처는 사용자 인터페이스(user interface) 계층, 관리자(governor) 계층, 장치 드라이버(device driver) 계층, 및/또는 운영 시스템(operating system: OS) 계층을 포함할 수 있다. 일 실시 예에 따르면, 사용자 인터페이스 계층은 복수의 애플리케이션들을 포함할 수 있다. 일 실시 예에 따르면, 관리자(governor) 계층은 PMU 모니터(예: 도 3의 PMU 모니터), QoS 관리기(예: 도 3의 QoS 관리기), 및/또는 DVFS 관리기(예: 도 3의 DVFS 관리기)를 포함할 수 있다. PMU 모니터, QoS 관리기, 및/또는 DVFS 관리기는 도 3에서 설명한 바와 유사하거나, 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 일 실시 예에 따르면, 장치 드라이버 계층은 CPU 주파수 드라이버(CPUfreq) 및/또는 장치 주파수 드라이버 (Devfreq)를 포함할 수 있다. 일 실시 예에 따르면, OS 계층은 커널(Kernel)을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 전자 장치는, 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나, 프로세서(120; 200; 211), 및 명령어(instruction)들을 저장하는 메모리를 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 프로세서의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 상기 메 모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은, 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 상기 GPU 또는 상기 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보 다 높게 조정하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수 행하는 중에 캐시 미스(cache miss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수 행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레 이트(miss rate)가 임계 미스 레이트를 초과하는 조건 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 전자 장치는, 상기 메모리에 액세스하는 것과 관련되는 적어도 하나의 추 가적인 회로(217; 219)를 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 프 로세서의 트랜잭션에 적용되는 QoS 값을 조정한 후, 상기 프로세서 사이클에 대한 제2 스톨 비율을 검출하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 2 스톨 비율이 제2 임계 값 미만인지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 2 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 전력 예산 룸(power budget room)이 제3 임계 값 이상인지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 전 력 예산 룸이 상기 제3 임계 값 이상임을 확인함에 기반하여, 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시키도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 적 어도 하나의 추가적인 회로의 동작 전압을 설정 전압 만큼 증가시키고, 상기 적어도 하나의 추가적인 회로의 동 작 주파수를 설정 주파수 만큼 증가시키도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 전 력 예산 룸이 상기 제3 임계 값 미만임을 확인함에 기반하여, 상기 적어도 하나의 프로세서의 동작 전압 및 동 작 주파수를 감소시키도록 야기할 수 있다.본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 적 어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시키도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 적 어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 증가시킨 후, 상기 프로세서 사이클에 대한 제3 스톨 비율을 검출하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 3 스톨 비율이 상기 제2 임계 값 미만인지 여부를 확인하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 3 스톨 비율이 상기 제2 임계 값 미만임을 확인함에 기반하여, 상기 조정된 상기 프로세서의 트랜잭션에 적용되 는 QoS 값을 상기 조정 전의 상기 QoS 값으로 복원하는 제1 동작, 또는 상기 프로세서의 동작 전압 및 동작 주 파수를 상기 감소 전의 동작 전압 및 동작 주파수로 복원하거나, 또는 상기 적어도 하나의 추가적인 회로의 동 작 전압 및 동작 주파수를 상기 증가 전의 상기 동작 전압 및 동작 주파수로 복원하는 제2 동작 중 적어도 하나 를 수행하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 1 동작 또는 상기 제2 동작 중 적어도 하나를 수행한 후, 동적 전압 및 주파수 스케일링(dynamic voltage and frequency scaling: DVFS) 방식에 기반하여 동작하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 1 스톨 비율이 상기 제1 임계 값 이하임을 확인함에 기반하여, 또는 상기 조건을 만족하지 않음을 확인함에 기 반하여, 동적 전압 및 주파수 스케일링(dynamic voltage and frequency scaling: DVFS) 방식에 기반하여 동작 하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 명령어들은 상기 프로세서에 의해 실행될 때, 상기 전자 장치가, 상기 제 3 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반하여, 상기 제1 동작을 수행하도록 야기할 수 있다. 도 5는 일 실시 예에 따른 전자 장치의 동작 방법을 도시한 흐름도이다. 도 5를 참조하면, 전자 장치(예: 도 1의 전자 장치)(예: 도 2 의 AP 또는 도 2, 또는 도 3의 CPU)는 동작 511에서 프로세서(예: 도 2, 또는 도 3의 CPU)의 프로세서 사이클에 대한 제1 스톨 비율 을 검출할 수 있다. 프로세서 사이클은 CPU 사이클을 나타낼 수 있으며, 스톨 비율을 검출하는 방식은 도 2 또 는 도 3에서 설명한 바와 유사하거나 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 프로세서의 제1 스톨 비율을 검출한 전자 장치는, 동작 513에서, 제1 스톨 비율이 제1 임계 값을 초과하는지 여 부를 확인할 수 있다. 예를 들어, 제1 임계 값은 제1 임계 스톨 비율일 수 있다. 제1 임계 값은 도 2 또는 도 3 에서 설명한 바와 유사하거나 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 제1 스톨 비율이 제1 임계 값을 초과할 경우(동작 513-예), 전자 장치는 동작 515에서, 프로세서의 프로세서 스톨이 메모리(예: 도 1의 메모리)에 대한 메모리 액세스 지연에 의한 것인지 여부를 확인할 수 있다. 일 실시 예에서, 프로세서 스톨은 \"CPU 스톨\"을 나타낼 수 있으며, 이하 설명의 편의상 프로세서 스톨과 CPU 스톨 을 혼용하여 사용할 수 있음에 유의하여야만 할 것이다. CPU 스톨은 도 2 내지 도 4에서 설명한 바와 유사할 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 일 실시 예에서, 메모리 액세스 지연에 의해 발생 한 프로세서 스톨은 메모리 바운드 스톨일 수 있다. 일 실시 예에서, 메모리 바운드 스톨은 메모리 액세스 지연 (예: DRAM과 같이 프로세서(예: CPU)의 외부 메모리에 대한 액세스 지연)으로 발생한 스톨일 수 있다. 프로세서 스톨이 메모리 액세스 지연에 의한 것일 경우(동작 515-예), 전자 장치는 동작 517에서, 프로세서의 명령어 트랜잭션(instruction transaction)에 적용되는 QoS 값을 조정할 수 있다. 일 실시 예에서, 전자 장치는 프로세서의 명령어 트랜잭션에 적용되는 QoS 값을 GPU의 명령어 트랜잭션에 적용되는 QoS 값 보다 높게 조정할 수 있다. 프로세서의 명령어 트랜잭션에 적용되는 QoS 값을 조정한 후, 전자 장치는, 프로세서 사이클에 대한 제2 스톨 비율을 검출하고, 제2 스톨 비율이 제2 임계 값 미만인지 여부를 확인하고, 제2 스톨 비율이 제2 임계 값 또는 제 1 임계 값 이상임을 확인할 경우, 전력 예산 룸이 제3 임계 값 이상인지 여부를 확인하고, 전력 예산 룸이제3 임계 값 이상임을 확인함에 기반하여, 적어도 하나의 IP 블록(또는 회로)(예: 도 2 또는 도 3의 GPU, 도 2 또는 도 3의 멀티미디어 블록, 도 2 또는 도 3의 인터커넥트 블록, 및/또는 도 2 또는 도 3의 메모리 제어기)의 동작 전압 및 동작 주파수를 조정할 수 있다. 도 5에서는 적어도 하나의 IP 블록(또는 회로)이 CPU, GPU, 멀티미디어 블록, 인터커넥트 블록, 및/또는 메모리 제어기를 포함하는 형태로 설명하였으나, 이에 제한되는 것은 아니며, NPU와 같은 추가적인 다양한 IP 블록들을 포함할 수 있다. 전자 장 치는 적어도 하나의 IP 블록의 동작 전압 및 동작 주파수를 조정한 후, 프로세서 사이클의 제3 스톨 비율을 검 출하고, 제3 스톨 비율이 제2 임계 값 미만인지 여부를 확인하고, 제3 스톨 비율이 제2 임계 값 미만임을 확인 함에 기반하여, 조정된 적어도 하나의 프로세서의 트랜잭션에 적용되는 QoS 값을 조정 전의 QoS 값으로 복원하 는 제1 동작, 또는 조정된 적어도 하나의 프로세서 또는 적어도 하나의 IP 블록의 동작 전압 및 동작 주파수를 조정 전의 동작 전압 및 동작 주파수로 복원하는 제2 동작 중 적어도 하나를 수행할 수 있다. 제1 스톨 비율이 제1 임계 값 이하일 경우(동작 513-아니오), 전자 장치는 동작 519에서, QoS 조정 없이 DVFS 방식에 기반하여 동작할 수 있다(예를 들어, QoS 조정 없이 기존 DVFS 방식에 기반하여 동작하는 동작 모드를 유지할 수 있다). 프로세서 스톨이 메모리 액세스 지연에 의해 발생한 프로세서 스톨이 아닐 경우(동작 515-아 니오), 전자 장치는 동작 519에서, QoS 조정 없이 DVFS 방식에 기반하여 동작할 수 있다 (예를 들어, QoS 조정 없이 기존 DVFS 방식에 기반하여 동작하는 동작 모드를 유지할 수 있다). 도 6은 일 실시 예에 따른 CPU 사이클의 스톨 비율을 결정하는 방식을 설명하기 위한 도면이다. 도 6을 참조하면, AP(예: 도 2의 AP)는 CPU(예: 도 2 또는 도 3의 CPU), GPU(예: 도 2의 GPU), 멀티미디어 블록(예: 도 2의 멀티미디어 블록), 인터커넥트 블록(예: 도 2의 인터커넥트 블록), 및/또는 메모리 제어기(예: 도 2의 메모리 제어기)를 포함할 수 있다. AP는 도 1의 프로세서에 상응할 수 있다. 일 실시 예에서, CPU는 프로세서일 수 있다. 도 2에서 는, 메모리 제어기를 일 예로 하여 설명하고 있으나, AP는 DRAM 뿐만 아니라 메모리를 제어할 수 있 는 IP 블록을 포함할 수 있다. 일 실시 예에 따르면, AP는 SoC 형태로 구현될 수 있다. 일 실시 예에 따르면, CPU는 PMU에서 제공되는 정보를 수집 및 분석할 수 있다. CPU는 설정 주기(예: 1초)로 PMU에서 제공되는 정보를 수집 및 분석할 수 있다. PMU에서 제공되는 정보를 수집 및 분석하는데 사용되 는 설정 주기는 상황에 따라 가변적일 수 있다. PMU에서 제공되는 정보에 대해서는 도 3에서 설명된 바와 유사 하거나 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 일 실시 예에 따르면, CPU는 PMU에서 제공되는 정보(예: PMU에서 제공되는 이벤트)에 기반하여, CPU 사이 클의 스톨 비율(stall_ratio)을 검출할 수 있다. 일 실시 예에서, CPU 사이클의 스톨 비율은 CPU 사이클(cycle) 중 CPU 스톨 구간이 점유하는 비율을 나타낼 수 있다. 일 실시 예에 따르면, CPU 사이클의 스톨 비율은 설정 시 간(예: 1초) 동안 PMU에서 제공되는 정보에 기반하여 검출될 수 있다. 일 실시 예에서, 설정 시간은 CPU 동작 상황을 검출하여 적절한 전력 제어를 수행하기 위해 필요한 최적의 시간을 나타낼 수 있으며, CPU 사이클의 스 톨 비율을 검출하기 위한 설정 시간은 상황에 따라 가변적일 수 있다. 일 실시 예에 따르면, CPU는 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제1 임계 값(예: 제1 임계 스 톨 비율(stall_ratio_rise))을 초과하는지 여부를 확인할 수 있다. CPU 사이클의 스톨 비율이 제1 임계 값을 초 과할 경우, CPU는 CPU 스톨이 메모리 액세스 지연(예: DRAM 액세스 지연)에 의해 발생한 CPU 스톨(예: 메 모리 바운드 스톨)인지 여부를 확인할 수 있다. CPU 스톨이 DRAM 액세스 지연에 의해 발생한 CPU 스톨이 아닐 경우, CPU는 CPU 스톨이 CPU 바운드 스톨인지 여부를 확인할 수 있다. 일 실시 예에 따르면, CPU는 PMU에 의해 제공되는 정보에 기반하여 CPU 스톨이 메모리 바운드 스톨인지 또는 CPU 바운드 스톨인지를 확인할 수 있다. 일 실시 예에 따르면, CPU 스톨이 메모리 바운드 스톨인지 확인하기 위해 사용되는, PMU에서 제공되는 정보는 STALL_FRONTEND_MEMBOUND 및/또는 STALL_BACKEND_MEMBOUND를 포함할 수 있다. 일 실시 예에서, STALL_FRONTEND_MEMBOUND는 명령어를 가져오는 동작에서 캐시 미스(cache miss)가 발생하는 경우를 포함할 수 있다. 일 실시 예에서, STALL_BACKEND_MEMBOUND는 읽기/쓰기 동작 중 발생하는 캐시 미스로 인해 외부 자원인 메모리(예: DRAM)에 대한 액세스가 필요한 경우를 포함할 수 있다. 일 실시 예에 따르면, CPU 스톨이 CPU 바운드 스톨인지 확인하기 위해 사용되는, PMU에서 제공되는 정보는 STALL_FRONTEND_CPUBOUND 및/또는 STALL_BACKEND_CPUBOUND를 포함할 수 있다. 일 실시 예에서, STALL_BACKEND_CPUBOUND 는 CPU 내부 실행 엔진(execution engine)의 자원 부족으로 인해 명령어가 실행되지못하고 지연이 발생하는 경우를 포함할 수 있다. 일 실시 예에서, STALL_FRONTEND_CPUBOUND는 분기 예측 오류(branch misprediction)에 의한 CPU 파이프라인 플 러쉬(pipeline flush) 동작으로 인해 지연이 발생하는 경우를 포함할 수 있다. 일 실시 예에 따르면, CPU는 STALL_FRONTEND_MEMBOUND, STALL_BACKEND_MEMBOUND, STALL_FRONTEND_CPUBOUND 및/또는 STALL_BACKEND_CPUBOUND와 같은 정보를 PMU로부터 획득할 수 있을 경우, CPU 스톨이 메모리 바운드 스톨인지 또는 CPU 바운드 스톨인지 확인할 수 있다. STALL_FRONTEND_MEMBOUND, STALL_BACKEND_MEMBOUND, STALL_FRONTEND_CPUBOUND 및/또는 STALL_BACKEND_CPUBOUND와 같은 정보가 PMU로부터 제공되지 않을 경우, CPU는 CPU 스톨이 메모리 바운드 스톨인지 또는 CPU 바운드 스톨인지 확인하기 위해 cache miss rate(예: L1 I$ miss rate 및/또는 L1 D$ miss rate), branch misprediction rate, 및/또는 TLB miss rate 중 적어도 하나를 사용할 수 있다. 표 1에서 설명한 바와 같이, branch misprediction rate은 CPU에 의해 수행된 전체 분기 명령어(branch instruction)들 중 잘못 예측 수행된 분기 명령어의 비율을 나타낼 수 있고, BR_MIS_PRED_RETIRED/BR_RETIRED 로 결정될 수 있다. branch misprediction rate가 높아질수록 빈번한 예측 오류로 인한 파이프라인 플러쉬 (pipeline flush) 동작으로 인해 CPU 바운드 스톨이 발생할 수 있다. 일 실시 예에서, CPU는 branch misprediction rate가 제4 임계 값을 초과할 경우, CPU 스톨이 CPU 바운드 스톨이라고 확인할 수 있다. 표 1에서 설명한 바와 같이, cache miss rate은 CPU의 총 캐시 액세스 횟수 중 미스가 발생한 캐시 액세스 횟수의 비율을 나타낼 수 있으며, L1I_CACHE_REFILL/L1I_CACHE, L1D_CACHE_REFILL/L1D_CACHE, L2D_CACHE_REFILL/L2D_CACHE, 및/또는 L3D_CACHE_REFILL/L3D_CACHE 중 어느 하나로 결정될 수 있다. 표 1에서 설명한 바와 같이, TLB miss rate은 총 TLB 액세스 횟수 중 미스가 발생한 TLB 액세스 횟수의 비율을 나타낼 수 있으며, L1I_TLB_REFLL/L1I_TLB, L1D_TLB_REFILL/L1D_TLB, 및/또는 L2D_TLB_REFILL/L2D_TLB 중 어느 하나로 결 정될 수 있다. cache miss rate, 및/또는 TLB miss rate는 외부 메모리(예: DRAM) 액세스와 관련될 수 있다. 일 실시 예에서, CPU는 cache miss rate가 제5 임계 값을 초과할 경우, CPU 스톨이 메모리 바운드 스톨이라고 확인할 수 있 다. 일 실시 예에서, CPU는 TLB miss rate가 제6 임계 값을 초과할 경우, CPU 스톨이 메모리 바운드 스톨 이라고 확인할 수 있다. 일 실시 예에서, CPU는 인터커넥트 블록과 연결되는 캐시 레벨(cache level)의 미스 레이트(miss rate)에 기반하여 CPU 스톨이 메모리 바운드 스톨인지 여부를 확인할 수 있다. 일 실시 예에서, CPU 클러스터 (cluster) 내의 마지막 레벨 캐시(last level cache)로 공유 L2 캐시(shared L2 cache)를 가질 경우, L2$ 미스 레이트(L2$ miss rate)가 캐시 레벨의 미스 레이트일 수 있고, CPU는 L2$ 미스 레이트에 기반하여 CPU 스 톨이 메모리 바운드 스톨인지 여부를 확인할 수 있다. CPU는 L2$ 미스 레이트가 제5 임계 값을 초과할 경 우, CPU 스톨이 메모리 바운드 스톨이라고 확인할 수 있다. 일 실시 예에서, CPU 클러스터 내의 마지막 레벨 캐 시로 공유 L3 캐시(shared L2 cache)를 가질 경우, L3$ 미스 레이트(L3$ miss rate)가 캐시 레벨의 미스 레이 트일 수 있고, CPU는 L3$ 미스 레이트에 기반하여 CPU 스톨이 메모리 바운드 스톨인지 여부를 확인할 수 있다. CPU는 L3$ 미스 레이트가 제5 임계 값을 초과할 경우, CPU 스톨이 메모리 바운드 스톨이라고 확인할 수 있다. 도 6에 도시되어 있는 바와 같이, CPU는 복수의 L1 명령어 캐시(instruction cache: I$)들(611, 613, 615, 617), 복수의 L1 데이터 캐시(data cache: D$)들(621, 623, 625, 627), 복수의 L2 캐시들(631, 633, 635, 637), 및/또는 L3 캐시을 포함할 수 있다. 이 경우, CPU는 L3 캐시에 대한 L3$ 미스 레이트에 기반하여 CPU 스톨이 메모리 바운드 스톨인지 여부를 확인할 수 있다. 일 실시 예에서, CPU 스톨이 메모리 바운 드 스톨인지 여부를 확인하기 위해 사용하는 제5 임계 값은 캐시 사이즈(cache size)와 같은 다양한 파라미터들 에 기반하여 변경될 수 있다. 도 7은 일 실시 예에 따른 전자 장치의 동작 방법을 도시한 흐름도이다. 도 7을 참조하면, 전자 장치(예: 도 1의 전자 장치)(예: 도 2 또는 도 6의 AP, 또는 도 2, 도 3, 또 는 도 6의 CPU)는 동작 711에서 PMU에서 제공되는 정보(예: PMU에서 제공되는 이벤트)에 기반하여 CPU 사 이클의 스톨 비율을 검출할 수 있다. 일 실시 예에서, 전자 장치는 설정 주기(예: 1초)로 PMU에서 제공되는 정 보를 수집 및 분석하여 CPU 사이클의 스톨 비율을 검출할 수 있다. PMU에서 제공되는 정보를 수집 및 분석하는 데 사용되는 설정 주기는 상황에 따라 가변적일 수 있다. PMU에서 제공되는 정보는 도 3에서 설명된 바와 유사하거나, 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. CPU 사이클의 스톨 비율을 결정하는 동작은 도 3에서 설명된 바와 유사하거나, 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. CPU 사이클의 스톨 비율을 검출한 전자 장치는, 동작 713에서, 검출한 CPU 사이클의 스톨 비율이 미리 설정되어 있는 제1 임계 값(예: 제1 임계 스톨 비율(stall_ratio_rise))을 초과하는지 여부를 확인할 수 있다. 제1 임계 값은 도 2, 도 3, 또는 도 5에서 설명한 바와 유사하거나, 또는 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. CPU 사이클의 스톨 비율이 제1 임계 값을 초과할 경우(동작 713-예), 전자 장치는 동작 715에서 CPU 스톨이 메 모리 액세스 지연(예: DRAM 액세스 지연)에 의해 발생한 CPU 스톨인지 여부를 확인할 수 있다. CPU 스톨이 메모 리 액세스 지연에 의해 발생한 CPU 스톨인지 여부를 확인하는 동작은 도 3에서 설명한 바와 유사하거나 또는 실 질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. CPU 스톨이 메모리 액세스 지연에 의해 발생한 CPU 스톨일 경우(동작 715-예), 전자 장치는 동작 717에서 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 설정 값(예: 1)만큼 증가시킬 수 있다. 일 실시 예에서는, 트랜잭션에 대 한 QoS 값이 클수록 우선 순위가 높다고 가정하여 설명할 것이나, 이와는 달리, 트랜잭션에 대한 QoS 값이 작을 수록 우선 순위가 높을 수도 있다. CPU의 트랜잭션들에 대해 적용되는 QoS 값을 설정 값만큼 증가시킨 전자 장치는, 동작 719에서 PMU에서 제공되 는 정보에 기반하여 CPU 사이클의 스톨 비율을 검출할 수 있다. CPU 사이클의 스톨 비율을 검출하는 동작은 동 작 711과 유사하거나 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기 로 한다. CPU 사이클의 스톨 비율을 검출한 전자 장치는, 동작 721에서, 검출된 CPU 사이클의 스톨 비율(예: CPU의 트랜 잭션들에 대해 적용되는 QoS 값을 설정 값만큼 증가시킨 후 검출된 CPU 사이클의 스톨 비율)이 미리 설정되어 있는 제2 임계 값(예: 제2 임계 스톨 비율(stall_ratio_fall)) 미만인지 여부를 확인할 수 있다. 제2 임계 값은 도 2, 도 3, 또는 도 5에서 설명한 바와 유사하거나, 또는 동일하게 구현될 수 있으며, 따라서 여기서는 그 상 세한 설명을 생략하기로 한다. CPU 사이클의 스톨 비율이 제2 임계 값 미만일 경우(동작 721-예), 전자 장치는 동작 733에서 복원 동작을 수행 할 수 있다. 일 실시 예에 따르면, 복원 동작은 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설 정 값만큼 감소된 값)으로 복원시키는 동작을 포함할 수 있다. CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원 래의 값으로 복원시킨 전자 장치는, 동작 735에서, 제2 동작 모드로 동작하고 동작 711로 되돌아갈 수 있다. 일 실시 예에서, 제2 동작 모드는 일반적인 DVFS 방식에 기반하여 동작하는 동작 모드일 수 있다. CPU 사이클의 스톨 비율이 제2 임계 값 또는 제 1 임계 값 이상일 경우(동작 721-아니오), 전자 장치는 동작 723에서 전력 예산 룸이 미리 설정되어 있는 제3 임계 값 이상인지 여부를 확인할 수 있다. 일 실시 예에서, 전 력 예산 룸이 제3 임계 값 이상일 경우, 사용 가능한 전력이 비교적 충분함을 나타낼 수 있다. 제3 임계 값은 도 2, 도 3, 또는 도 5에서 설명한 바와 유사하거나, 또는 동일하게 구현될 수 있으며, 따라서 여기서는 그 상 세한 설명을 생략하기로 한다. 전력 예산 룸이 제3 임계 값 이상일 경우(동작 723-예), 전자 장치는 동작 727에서 인터커넥트 블록(예: 도 2 또는 도 6의 인터커넥트 블록) 및 메모리 제어기(예: 도 2 또는 도 6의 메모리 제어기) 각각의 동작 전압 및 동작 주파수를 조정할 수 있다. 도 7에서는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동 작 주파수를 조정하는 경우를 일 예로 하여 설명하지만, 동작 727은 인터커넥트 블록 및 메모리 제어기 뿐만 아 니라 CPU와 관련되는 IP 블록들 중 적어도 하나에 대해 적용 가능할 수 있다. 일 실시 예에 따르면, 전자 장치 는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설정 전압 만큼 높이고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 높임으로써 인터커넥트 블록 및 메모리 제어기 각각의 동작 전 압 및 동작 주파수를 조정할 수 있다. 전력 예산 룸이 제3 임계 값 이상일 경우, 동작 727에서 전자 장치는 CPU 의 동작 전압 및 동작 주파수를 유지할 수 있다. 전력 예산 룸이 제3 임계 값 미만일 경우(동작 723-아니오), 전자 장치는 동작 725에서 CPU의 동작 전압 및 동 작 주파수를 조정할 수 있다. 일 실시 예에서, 전자 장치는 동작 725에서 CPU의 동작 전압을 설정 전압 만큼 낮 추고, CPU의 동작 주파수를 설정 주파수 만큼 낮춤으로써 CPU의 동작 전압 및 동작 주파수를 조정할 수 있다. CPU의 동작 전압 및 동작 주파수를 조정한 전자 장치는 동작 727로 진행하여 인터커넥트 블록 및 메모리 제어기각각의 동작 전압 및 동작 주파수를 조정할 수 있다. 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후, 전자 장치는 동작 729에서 PMU에서 제공되는 정보에 기반하여 CPU 사이클의 스톨 비율을 검출할 수 있다. CPU 사이클의 스톨 비율을 검출 하는 동작은 동작 711과 유사하거나 또는 실질적으로 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. CPU 사이클의 스톨 비율을 검출한 전자 장치는, 동작 731에서, 검출된 CPU 사이클의 스톨 비율이 제2 임계 값 미만인지 여부를 확인할 수 있다. 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정 한 후 검출된 CPU 사이클의 스톨 비율이 제2 임계 값 미만일 경우(동작 731-예), 전자 장치는 동작 733으로 진 행하여 복원 동작을 수행할 수 있다. 일 실시 예에 따르면, 복원 동작은 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원시키고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수, 및 CPU의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시키는 동 작을 포함할 수 있다. 일 실시 예에서, 전자 장치는 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압을 설 정 전압 만큼 낮출 수 있고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 주파수를 설정 주파수 만큼 낮춤으 로써 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수 로 복원시킬 수 있다. 일 실시 예에 따르면, 복원 동작은 CPU의 트랜잭션들에 대해 적용되는 QoS 값을 원래의 값(예, 설정 값만큼 감소된 값)으로 복원시키고, 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시키고, CPU의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 일 실시 예에서, 전자 장치는 CPU의 동작 전압을 설정 전압 만큼 높일 수 있고, CPU의 동작 주파수를 설정 주파수 만큼 높임으로써 CPU의 동작 전압 및 동작 주파수를 원래의 동작 전압 및 동작 주파수로 복원시킬 수 있다. 인터커넥트 블록 및 메모리 제어기 각각의 동작 전압 및 동작 주파수를 조정한 후 검출된 CPU 사이클의 스톨 비 율이 제2 임계 값 이상일 경우(동작 731-아니오), 전자 장치는 동작 729로 되돌아갈 수 있다. 도 8은 일 실시 예에 따른 CPU 사이클의 스톨 비율에 기반하는 전력을 제어하기 위해 사용되는 임계 값들을 결 정하는 방식을 설명하기 위한 도면이다. 도 8을 참조하면, CPU 트랜잭션에 대한 QoS 값을 제어하고(예를 들어, 조정하고), 및/또는 CPU(예: 도 2, 도 3, 또는 도 6의 CPU) 및 CPU와 관련되는 IP 블록들에 대한 동작 전압들 및 동작 주파수들을 제어하기 위해(예 를 들어, 조정하기 위해) 사용되는 임계 값들은 제1 임계 값(예: 제1 임계 스톨 비율(stall_ratio_rise)) 및/또 는 제2 임계 값(예: 제2 임계 스톨 비율(stall_ratio_fall))을 포함할 수 있다. 제1 임계 값 및 제2 임계 값은 도 2, 도 3, 도 5, 또는 도 7에서 설명한 바와 유사하거나, 또는 동일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 도 8에서 세로축은 동작 모드(operation mode)를 나타낼 수 있고, 가로축은 CPU 사이클의 스톨 비율을 나타낼 수 있다. 도 8에서, 제1 동작 모드는 본 개시의 일 실시 예에서 제안하는 CPU 사이클의 스톨 비율에 기반하여 QoS, 동작 전압, 및/또는 동작 주파수를 제어하는 동작 모드일 수 있으며, 제2 동작 모드는 일반적인 DVFS 방식 에 기반하여 동작하는 동작 모드일 수 있다. 제1 임계 값 및 제2 임계 값은 제1 동작 모드에서 적용될 수 있으 며, 제1 임계 값, 제2 임계 값, 및/또는 제1 동작 모드는 도 2 내지 도 7에서 설명한 바와 유사하거나 또는 동 일하게 구현될 수 있으며, 따라서 여기서는 그 상세한 설명을 생략하기로 한다. 일 실시 예에 따르면, CPU는 제1 임계 값 및/또는 제2 임계 값을 설정할 경우, 도 8에 도시되어 있는 바와 같이 히스테리시스(hysteresis)를 적용함으로써, 제1 동작 모드에 기반하여 동작할 경우 핑퐁(ping pong) 현상이 발 생하는 것을 방지할 수 있다(예를 들어, 감소시킬 수 있다 또는 최소화할 수 있다). 일 실시 예에서는, CPU 사 이클의 스톨 비율이 제1 임계 값이 초과될 경우 제1 동작 모드가 적용될 수 있는데, 제1 임계 값은 일 예로 제1 값(예: 50%)으로 설정될 수 있다. 일 실시 예에서는, CPU 사이클의 스톨 비율이 제2 임계 값 미만일 경우 제2 동작 모드가 적용될 수 있는데(예를 들어, 제1 동작 모드에서 제2 동작 모드로 천이할 수 있는데), 제2 임계 값 은 일 예로 제2 값(예: 30%)로 설정될 수 있다. 이렇게, 제1 임계 값이 50%로 설정되고, 제2 임계 값이 30%로 설정될 경우, CPU는 CPU 사이클의 스톨 비율이 30%~50%인 구간 내에서 변동하는 동안은 안정적으로 제1 동작 모 드 혹은 제2 동작 모드로 동작하는 것을 보장할 수 있다. 본 개시의 일 실시 예에 따르면, CPU 스톨이 발생될 경우 PMU에서 제공하는 정보(예를 들어, PMU에서 제공하는 다양한 이벤트들)에 기반하여 CPU의 QoS를 제어하거나(예를 들어, 조정하거나), CPU와 관련되는 IP 블록들(예를들어, 인터커넥트 블록, 및/또는 DRAM 제어기)의 동작 전압 및 동작 주파수를 제어함으로써(예를 들어, 조정함 으로써) 보다 빠르게 CPU의 스톨 상황에서 벗어나는 것을 가능하게 할 수 있다. 이는 불필요한 전류 소모를 개 선하여 전자 장치의 사용 시간을 증가시키는데(예를 들어, 최대화시키는데) 기여할 수 있다. 본 개시의 일 실시 예에 따르면, 방법은, 프로세서(120; 200; 211)의 프로세서 사이클에 대한 제1 스톨(stall) 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하 는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함을 확인함에 기 반하여, 상기 프로세서의 프로세서 스톨이 메모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는 지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 조건을 만족함을 확인함에 기반하여, 상기 프로세서의 트랜 잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다 높게 조정하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수 행하는 중에 캐시 미스(cache miss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수 행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레 이트(miss rate)가 임계 미스 레이트를 초과하는 조건 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 프로세서의 트랜잭션에 적용되는 QoS 값을 조정한 후, 상기 프로세서 사이클에 대한 제2 스톨 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제2 스톨 비율이 제2 임계 값 미만인지 여부를 확인하는 동 작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제2 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반 하여, 전력 예산 룸(power budget room)이 제3 임계 값 이상인지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 전력 예산 룸이 상기 제3 임계 값 이상임을 확인함에 기반 하여, 적어도 하나의 추가적인 회로(217; 219)의 동작 전압 및 동작 주파수를 증가시키는 동작을 포함할 수 있 다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 조정하는 동 작은, 상기 적어도 하나의 추가적인 회로의 동작 전압을 설정 전압 만큼 증가시키고, 상기 적어도 하나의 추가 적인 회로의 동작 주파수를 설정 주파수 만큼 증가시키는 동작을 할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 전력 예산 룸이 상기 제3 임계 값 미만임을 확인함에 기반 하여, 상기 적어도 하나의 프로세서의 동작 전압 및 동작 주파수를 감소시키는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수 를 증가시키는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수 를 증가시킨 후, 상기 프로세서 사이클에 대한 제3 스톨 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제3 스톨 비율이 상기 제2 임계 값 미만인지 여부를 확인하 는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제3 스톨 비율이 상기 제2 임계 값 미만임을 확인함에 기반 하여, 상기 조정된 상기 프로세서의 트랜잭션에 적용되는 QoS 값을 상기 조정 전의 상기 QoS 값으로 복원하는 제1 동작, 또는 상기 프로세서의 동작 전압 및 동작 주파수를 상기 감소 전의 동작 전압 및 동작 주파수로 복원 하거나, 또는 상기 적어도 하나의 추가적인 회로의 동작 전압 및 동작 주파수를 상기 증가 전의 상기 동작 전압 및 동작 주파수로 복원하는 제2 동작 중 적어도 하나를 수행하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제1 동작 또는 상기 제2 동작 중 적어도 하나를 수행한 후, 동적 전압 및 주파수 스케일링(dynamic voltage and frequency scaling: DVFS) 방식에 기반하여 동작하는 동작 을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제1 스톨 비율이 상기 제1 임계 값 이하임을 확인함에 기반 하여, 또는 상기 프로세서 스톨이 상기 조건을 만족하지 않음을 확인함에 기반하여, 동적 전압 및 주파수 스케 일링(dynamic voltage and frequency scaling: DVFS) 방식에 기반하여 동작하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 방법은, 상기 제3 스톨 비율이 상기 제2 임계 값 이상임을 확인함에 기반 하여, 상기 제1 동작을 수행하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 컴퓨터로 독출 가능한 적어도 하나의 명령어 및 데이터를 저장하는 저장 매체 가 제공될 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 명령어 및 데이터는 전자 장치의 프로세서(120; 200; 211)에 의하여 실행 시에, 상기 전자 장치로 하여금 적어도 하나의 동작을 수행하도록 야기할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 프로세서의 프로세서 사이클에 대한 제1 스 톨(stall) 비율을 검출하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 제1 스톨 비율이 제1 임계 값을 초과하는지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 제1 스톨 비율이 상기 제1 임계 값을 초과함 을 확인함에 기반하여, 상기 프로세서의 프로세서 스톨이 메모리에 대한 메모리 액세스 지연과 관련되는 조건을 만족하는지 여부를 확인하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 적어도 하나의 동작은, 상기 프로세서 스톨이 상기 메모리 액세스 지연에 의한 것임을 확인함에 기반하여, 상기 프로세서의 트랜잭션(transaction)에 적용되는 서비스 품질(quality of service: QoS) 값을 그래픽 프로세싱 유닛(graphic processing unit: GPU) 또는 멀티미디어 블록 중 적어도 하나의 트랜잭션에 적용되는 QoS 값 보다 높게 조정하는 동작을 포함할 수 있다. 본 개시의 일 실시 예에 따르면, 상기 조건은 상기 프로세서가 캐시(cache)로부터 명령어를 가져오는 동작을 수 행하는 중에 캐시 미스(cache miss)가 발생하는 조건, 상기 프로세서가 상기 캐시에 대한 읽기/쓰기 동작을 수 행하는 중에 발생하는 캐시 미스로 인해 상기 메모리에 대한 액세스가 필요한 조건, 또는 상기 캐시의 미스 레 이트(miss rate)가 임계 미스 레이트를 초과하는 조건 중 적어도 하나를 포함할 수 있다. 본 문서에서 이루고자 하는 기술적 과제는 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또"}
{"patent_id": "10-2023-0181733", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다른 기술적 과제들은 아래의 기재로부터 본 문서에 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은 아래의 기재로부터 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2023-0181733", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시 예에 따른 네트워크 환경 내의 전자 장치를 개략적으로 도시한 블록도이다. 도 2는 일 실시 예에 따른 AP를 개략적으로 도시한 블록도이다. 도 3은 일 실시 예에 따른 CPU를 개략적으로 도시한 블록도이다. 도 4는 일 실시 예에 따른 AP의 소프트웨어 아키텍처를 개략적으로 도시한 블록도이다. 도 5는 일 실시 예에 따른 전자 장치의 동작 방법을 도시한 흐름도이다. 도 6은 일 실시 예에 따른 CPU 사이클의 스톨 비율 및 메모리 액세스 지연에 의해 발생한 프로세서 스톨인지 여 부를 결정하는 방식을 설명하기 위한 도면이다. 도 7은 일 실시 예에 따른 전자 장치의 동작 방법을 도시한 흐름도이다. 도 8은 일 실시 예에 따른 CPU 사이클의 스톨 비율에 기반한 동작 모드 변경을 설명하기 위한 도면이다."}
