{"patent_id": "10-2022-0187916", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0105073", "출원번호": "10-2022-0187916", "발명의 명칭": "다양한 응용을 위한 경량 인공지능 연산 처리 장치 및 그 동작 방법", "출원인": "한국전자기술연구원", "발명자": "김병수"}}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공지능 엔진 컨트롤러; 및컨텍스트가 지정된 복수의 뉴런 셀 모듈;을 포함하고,상기 인공지능 엔진 컨트롤러는 제1 특징점 벡터, 상기 제1 특징점 벡터의 컨텍스트 정보 및 상기 제1 특징점벡터의 클래스 정보를 포함하는 학습용 데이터셋을 입력받고, 상기 복수의 뉴런 셀 모듈 중에서 상기 제1 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈에 상기 제1 특징점 벡터를 전송하고,상기 제1 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈은,자신의 중심값 벡터와 상기 제1 특징점 벡터 간의 제1 거리 정보를 생성하고, 상기 제1 거리 정보가 자신의 반경 이하인 경우, 상기 제1 거리 정보와 자신의 클래스 정보를 상기 인공지능 엔진 컨트롤러에 전송하며,상기 인공지능 엔진 컨트롤러는,상기 제1 거리 정보를 전송한 뉴런 셀 모듈의 클래스 정보가 상기 제1 특징점 벡터의 클래스 정보와 일치하지않는 경우, 상기 제1 거리 정보를 전송한 뉴런 셀 모듈에 반경 조정 신호를 전송하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,최소 거리 검출 모듈을 더 포함하고,상기 인공지능 엔진 컨트롤러는 제2 특징점 벡터, 상기 제2 특징점 벡터의 컨텍스트 정보를 포함하는 판별용 데이터셋을 입력받고, 상기 복수의 뉴런 셀 모듈 중에서 상기 제2 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런셀 모듈에 상기 제2 특징점 벡터를 전송하고,상기 제2 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈은,자신의 중심값 벡터와 상기 제2 특징점 벡터 간의 제2 거리 정보를 생성하고, 상기 제2 거리 정보가 자신의 반경 이하인 경우, 상기 제2 거리 정보와 자신의 클래스 정보를 상기 인공지능 엔진 컨트롤러에 전송하며,상기 최소 거리 검출 모듈은,상기 제2 거리 정보의 최소값을 산출하며,상기 인공지능 엔진 컨트롤러는,상기 제2 거리 정보의 최소값에 해당하는 거리 정보를 전송한 뉴런 셀 모듈의 클래스 정보를 상기 제2 특징점벡터의 클래스 정보로 판별하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서, 상기 뉴런 셀 모듈은,자신의 중심값 벡터와 상기 제1 특징점 벡터 간의 제1 거리 정보를 생성하는 거리 계산부;상기 제1 거리 정보가 자신의 반경 이하인지 판단하는 비교기; 및상기 제1 거리 정보가 자신의 반경 이하인 경우, 상기 제1 거리 정보와 자신의 클래스 정보를 상기 인공지능 엔공개특허 10-2024-0105073-3-진 컨트롤러에 전송하는 뉴런 제어부를 포함하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서, 상기 뉴런 제어부는,상기 뉴런 셀 모듈의 컨텍스트 정보를 저장하는 컨텍스트 레지스터를 포함하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서, 상기 뉴런 제어부는,상기 뉴런 셀 모듈의 클래스 정보를 저장하는 클래스 레지스터를 포함하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서, 상기 뉴런 제어부는,상기 뉴런 셀 모듈의 학습 상태 정보를 저장하는 상태 레지스터를 포함하는 것인 다양한 응용을 위한 경량 인공지능 연산 처리 장치."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "인공지능 엔진 컨트롤러가 특징점 벡터, 상기 특징점 벡터의 컨텍스트 정보 및 상기 특징점 벡터의 용도 정보를포함한 데이터셋을 입력받고, 상기 컨텍스트 정보에 부합하는 뉴런 셀 모듈을 판단하는 단계;상기 뉴런 셀 모듈에 상기 특징점 벡터를 전달하는 단계; 및상기 용도 정보가 '학습'인 경우, 상기 인공지능 엔진 컨트롤러가 상기 특징점 벡터와 상기 뉴런 셀 모듈의 중심값 벡터 간의 거리 정보, 상기 뉴런 셀 모듈의 클래스 정보 및 상기 데이터셋에 포함된 상기 특징점 벡터의클래스 정보를 기초로 상기 뉴런 셀 모듈의 반경을 학습시키는 단계;를 포함하는 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법."}
{"patent_id": "10-2022-0187916", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 용도 정보가 '판별'인 경우, 상기 인공지능 엔진 컨트롤러가 상기 특징점 벡터와 상기 뉴런 셀 모듈의 중심값 벡터 간의 거리 정보 및 상기 뉴런 셀 모듈의 클래스 정보를 기초로 상기 특징점 벡터의 클래스 정보를 판별하는 단계;를 더 포함하는 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 다양한 응용을 위한 경량 인공지능 연산 처리 장치 및 그 동작 방법에 관한 것이다. 본 발명에 따른 경량 인공지능 연산 처리 장치는, 인공지능 엔진 컨트롤러 및 복수의 뉴런 셀 모듈을 포함한다. 인공지능 엔진 컨트롤러는 특징점 벡터와 그 컨텍스트 정보를 포함하는 데이터셋을 입력받고, 특징점 벡터의 컨 텍스트 정보에 부합하는 뉴런 셀 모듈에 특징점 벡터를 전송한다. 뉴런 셀 모듈은, 자신의 중심값 벡터와 특징점 벡터 간의 거리 정보를 생성하고, 거리 정보가 자신의 반경 이하인 경우, 거리 정보와 자신의 클래스 정보를 인 공지능 엔진 컨트롤러에 전송한다. 인공지능 엔진 컨트롤러는, 거리 정보와 뉴런 셀 모듈의 클래스 정보를 기초 로 학습 또는 판별 과정을 수행한다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 경량 인공지능 연산 처리 장치 및 그 동작 방법에 관한 것이다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "빅 데이터의 처리 및 인식을 위하여, 과거에는 역전파 학습 기반의 딥러닝 인공지능 기술이 주로 적용되었으나, 최근에는 저전력, 소형 임베디드 시스템에 최적화된 인공지능 기술에 관한 연구 개발이 급격히 늘어나고 있는 추세이다.기존의 딥러닝 기반의 인공지능 시스템은 심층 구조를 갖추어야 하므로, 많게는 수천억에서 수조개의 파라미터 가 필요하다(GPT-3의 경우, 1750억개의 파라미터를 활용함). 즉, 딥러닝 기반의 인공지능 시스템은 막대한 메모 리를 요구하므로 하드웨어 설치 공간과 전력의 문제가 발생한다. 따라서, 하드웨어의 면적 및 가용 전력에 제한 이 있는 환경에서는 다양한 사용자 애플리케이션을 수행할 수 있는 인공지능에 대한 하드웨어 설계가 어려운 실 정이다. 막대한 파라미터 메모리가 요구되므로 인공지능 하드웨어는 특정 데이터셋을 중심으로 설계되며, 결국 기존 하드웨어의 응용은 한정될 수밖에 없다. 또한, 학습용 메모리를 탑재하기 어려운 인공지능 하드웨어는 전적으로 서버에서 학습된 파라미터를 바탕으로 추론(inference)만을 수행할 수 있기 때문에, 사용자 환경에 따른 유동적인 온 칩 학습을 할 수 없고, 환경에 따라 인공지능 처리 성능이 떨어질 수 있다는 문제가 있다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 다양한 응용을 처리하기 위하여, 컨텍스트 별로 뉴런을 할당하여 인공지능 학습 및 판별을 수행하는, 경량 인공지능 연산 처리 장치 및 그 동작 방법을 제공하는 것을 그 목적으로 한다. 또한, 본 발명은 다양한 유형의 데이터셋을 실시간으로 학습하기 위하여, 특징점 데이터의 컨텍스트에 따라 학 습을 수행할 뉴런 셀을 실시간으로 지정하여 학습하는, 경량 인공지능 연산 처리 장치 및 그 동작 방법을 제공 하는 것을 그 목적으로 한다. 본 발명의 목적은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 또 다른 목적들은 아래의 기재로 부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치는, 인공지능 엔진 컨트롤러; 및 컨텍스트가 지정된 복수의 뉴런 셀 모듈을 포함한다. 상기 인공지능 엔진 컨트롤러는 제1 특징점 벡터, 상기 제1 특징점 벡터의 컨텍스트 정보 및 상기 제1 특징점 벡터의 클래스 정보를 포함하는 학습용 데이터셋을 입력받고, 상기 복수의 뉴런 셀 모듈 중에서 상기 제1 특징 점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈에 상기 제1 특징점 벡터를 전송한다. 상기 제1 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈은, 자신의 중심값 벡터와 상기 제1 특징점 벡 터 간의 제1 거리 정보를 생성하고, 상기 제1 거리 정보가 자신의 반경 이하인 경우, 상기 제1 거리 정보와 자 신의 클래스 정보를 상기 인공지능 엔진 컨트롤러에 전송한다. 상기 인공지능 엔진 컨트롤러는, 상기 제1 거리 정보를 전송한 뉴런 셀 모듈의 클래스 정보가 상기 제1 특징점 벡터의 클래스 정보와 일치하지 않는 경우, 상기 제1 거리 정보를 전송한 뉴런 셀 모듈에 반경 조정 신호를 전 송한다. 본 발명의 일 실시예에서, 상기 경량 인공지능 연산 처리 장치는, 최소 거리 검출 모듈을 더 포함할 수 있다. 상기 인공지능 엔진 컨트롤러는 제2 특징점 벡터, 상기 제2 특징점 벡터의 컨텍스트 정보를 포함하는 판별용 데 이터셋을 입력받고, 상기 복수의 뉴런 셀 모듈 중에서 상기 제2 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈에 상기 제2 특징점 벡터를 전송한다. 상기 제2 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈은, 자신의 중심값 벡터와 상기 제2 특징점 벡 터 간의 제2 거리 정보를 생성하고, 상기 제2 거리 정보가 자신의 반경 이하인 경우, 상기 제2 거리 정보와 자 신의 클래스 정보를 상기 인공지능 엔진 컨트롤러에 전송한다. 상기 최소 거리 검출 모듈은, 상기 제2 거리 정보의 최소값을 산출한다. 상기 인공지능 엔진 컨트롤러는, 상기 제2 거리 정보의 최소값에 해당하는 거리 정보를 전송한 뉴런 셀 모듈의 클래스 정보를 상기 제2 특징점 벡터의 클래스 정보로 판별한다.본 발명의 일 실시예에서, 상기 뉴런 셀 모듈은, 자신의 중심값 벡터와 상기 제1 특징점 벡터 간의 제1 거리 정 보를 생성하는 거리 계산부; 상기 제1 거리 정보가 자신의 반경 이하인지 판단하는 비교기; 및 상기 제1 거리 정보가 자신의 반경 이하인 경우, 상기 제1 거리 정보와 자신의 클래스 정보를 상기 인공지능 엔진 컨트롤러에 전송하는 뉴런 제어부를 포함할 수 있다. 본 발명의 일 실시예에서, 상기 뉴런 제어부는, 상기 뉴런 셀 모듈의 컨텍스트 정보를 저장하는 컨텍스트 레지 스터를 포함할 수 있다. 본 발명의 일 실시예에서, 상기 뉴런 제어부는, 상기 뉴런 셀 모듈의 클래스 정보를 저장하는 클래스 레지스터 를 포함할 수 있다. 본 발명의 일 실시예에서, 상기 뉴런 제어부는, 상기 뉴런 셀 모듈의 학습 상태 정보를 저장하는 상태 레지스터 를 포함할 수 있다. 그리고, 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법은, 인공지 능 엔진 컨트롤러가 특징점 벡터, 상기 특징점 벡터의 컨텍스트 정보 및 상기 특징점 벡터의 용도 정보를 포함 한 데이터셋을 입력받고, 상기 컨텍스트 정보에 부합하는 뉴런 셀 모듈을 판단하는 단계; 상기 뉴런 셀 모듈에 상기 특징점 벡터를 전달하는 단계; 및 상기 용도 정보가 '학습'인 경우, 상기 인공지능 엔진 컨트롤러가 상기 특징점 벡터와 상기 뉴런 셀 모듈의 중심값 벡터 간의 거리 정보, 상기 뉴런 셀 모듈의 클래스 정보 및 상기 데 이터셋에 포함된 상기 특징점 벡터의 클래스 정보를 기초로 상기 뉴런 셀 모듈의 반경을 학습시키는 단계를 포 함한다. 본 발명의 일 실시예에서, 상기 경량 인공지능 연산 처리 장치의 동작 방법은, 상기 용도 정보가 '판별'인 경우, 상기 인공지능 엔진 컨트롤러가 상기 특징점 벡터와 상기 뉴런 셀 모듈의 중심값 벡터 간의 거리 정보 및 상기 뉴런 셀 모듈의 클래스 정보를 기초로 상기 특징점 벡터의 클래스 정보를 판별하는 단계를 더 포함할 수 있다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 일 실시예에 따른 경량 인공지능 연산 처리 장치 및 그 동작 방법을 통해, 제한된 하드웨어 리소스 상에서 다양한 응용에 관한 학습과 판별이 가능하다는 효과가 있다. 또한, 본 발명의 일 실시예에 따른 경량 인공지능 연산 처리 장치 및 그 동작 방법을 통해, 응용에 따라 인공지 능 하드웨어 장치를 변경할 필요가 없어진다는 효과가 있다. 또한, 본 발명의 일 실시예에 따른 경량 인공지능 연산 처리 장치 및 그 동작 방법을 통해, 사용자 환경에 따른 새로운 데이터셋의 실시간 학습이 가능하고, 사용자 중심의 다양한 애플리케이션 운용이 가능하다는 효과가 있 다. 본 발명에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0187916", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 한편, 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포 함한다. 명세서에서 사용되는 \"포함한다(comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성소자, 단계, 동작 및/또는 소자는 하나 이상의 다른 구성소자, 단계, 동작 및/또는 소자의 존재 또는 추가를 배제하지 않는다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의 해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로 사용될 수 있다. 예를 들어, 본 발명의 권리 범위로부터 이탈되지 않은 채 제1 구성요소는 제2 구성요소로 명명될 수 있고, 유사하게 제2 구성요소도 제1 구성요소로 명명될 수 있다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 구성요소들 간의 관 계를 설명하는 다른 표현들, 즉 \"~사이에\"와 \"바로 ~사이에\" 또는 \"~에 이웃하는\"과 \"~에 직접 이웃하는\" 등도 마찬가지로 해석되어야 한다. 본 발명에서 '응용(application)'은 본 발명에 따른 경량 인공지능 연산 처리 장치가 특정한 목적을 위하여 수 행하는 기능을 의미한다. 예를 들어, 얼굴 인식은 본 발명에 따른 경량 인공지능 연산 처리 장치가 수행하는 하 나의 '응용(application)'이 될 수 있다. 본 발명에서 '컨텍스트(context)'는 응용(application)에 포함되는 작업 단위를 의미한다. 예를 들어, '얼굴 인 식'이라는 응용(application)에서, '얼굴 인식'이 색상(color) 특징 추출, 질감(texture) 특징 추출, 모양 (shape) 특징 추출 및 특징의 조합 등의 작업을 통하여 이루어지는 경우, 상술한 각각의 작업은 컨텍스트 정보 에 의해 구분된다. 본 발명에서 뉴런 셀 모듈(neuron cell module)은 컨텍스트에 따라 그 역할이 구분되고, 하나의 컨텍스트에 해 당하는 복수의 뉴런 셀 모듈이 조합되어 서브 네트워크를 형성할 수 있다. 본 발명에 따른 경량 인공지능 연산 처리 장치에 포함된 뉴런 셀 모듈은 각각 동일한 학습 방법을 사용하더라도, 컨텍스트별로 별도의 서브 네트워 크를 형성한다. 그리고, 뉴런 셀 모듈은 컨텍스트에 따라 학습과 판별(recognition) 과정을 수행한다. 하나의 응용은 복수의 컨텍스트에 대응될 수 있으며, 하나의 응용에 대응되는 복수의 컨텍스트의 서브 네트워크가 조합 되어 해당 응용의 필요한 산출물을 생성하는 네트워크를 구성한다. 본 발명을 설명함에 있어서, 관련된 공지 기술에 대한 구체적인 설명이 본 발명의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 이하, 본 발명의 실시예를 첨부한 도면들을 참조하여 상세히 설명한다. 본 발명을 설명함에 있어 전체적인 이해 를 용이하게 하기 위하여 도면 번호에 상관없이 동일한 수단에 대해서는 동일한 참조 번호를 사용하기로 한다.도 1은 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 구성을 나타낸 블록도 이다. 도 1은 다양한 응용 처리가 가능한 인공지능 연산 장치의 하드웨어 아키텍처에 관한 것이다. 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치(1000, 이하 '경량 인공지능 연 산 처리 장치'로 약칭)는 RCE-NN 알고리즘 연산을 처리한다. 경량 인공지능 연산 처리 장치는 버스 인터 페이스(Bus Interface, 100)를 통해 외부와 데이터 패킷을 송수신하며, 인공지능 엔진 컨트롤러(AI Engine Controller, 1100), 최소 거리 검출 모듈(Minimum Distance Detection Module, 1200) 및 n개의 뉴런 셀 모듈 (Neuron Cell Module, 1300-1 내지 1300-n)을 포함한다. 이하 경량 인공지능 연산 처리 장치에 포함된 복수의 뉴런 셀 모듈(1300-1 내지 1300-n) 중 임의의 어느 하나의 뉴런 셀 모듈을 '뉴런 셀 모듈'과 같이 표기한다. 도 1에 도시된 경량 인공지능 연산 처리 장치는 일 실시예에 따른 것이고, 본 발명에 따른 경량 인공지능 연산 처리 장치의 구성요소들이 도 1에 도시된 실시예에 한정되는 것은 아니며, 필요에 따라 부가, 변경 또는 삭제될 수 있다. 본 발명에서 '데이터셋' 또는 '입력데이터셋'은 버스 인터페이스를 통해 인공지능 엔진 컨트롤러에 입력되는 데이터의 집합을 의미한다. 데이터셋(입력데이터셋)은 특징점 데이터, 특징점 데이터의 컨텍스트 정보, 특징점 데이터의 용도 정보 및 반경 변경 범위(또는 비율)를 포함한다. 학습용 데이터셋인 경우, 특징점 데이터의 클래스 정보를 더 포함한다. 판별용 데이터셋에는 특징점 데이터의 클래스 정보가 포함되지 않는다. 인공지능 엔진 컨트롤러(AI Engine Controller, 1100)는 입력데이터셋에 대하여 각 뉴런 셀 모듈의 중심 값(벡터인 경우 '중심값 벡터'로 호칭함)과 특징점 간의 최소 거리를 기초로 각 뉴런 셀 모듈의 반경을 학습한다. 인공지능 엔진 컨트롤러는 각 뉴런 셀 모듈의 반경의 학습에 있어서 동일한 학습 방법을 사용하지만, 컨텍스트 별로 별도의 서브 네트워크를 생성한다. 본 발명에서 반경(半徑, radius)은 뉴런 셀 모듈의 영향력 크기를 나타내는 수치로서, AIF(Active Influence Field)와 같은 의미로 사용된다. 인공지능 엔진 컨트롤러는 버스 인터페이스를 통해 특징점 데이터, 특징점 데이터의 컨텍스트 정보 및 특징점 데이터의 용도 정보(학습(learning) 또는 판별(recognition))를 입력받는다. 인공지능 엔진 컨트롤러 는 학습 과정에서는 버스 인터페이스를 통해 특징점 데이터의 클래스 정보를 더 입력받는다. 본 발명에서 '특징점 벡터(feature vector)'는 특징점 데이터(feature data)가 벡터의 형태를 가지는 경우를 의 미한다. 인공지능 엔진 컨트롤러는 특징점 벡터를 멀티캐스트 방식을 통해 뉴런 셀 모듈에 전송한다. 이때 인공지능 엔진 컨트롤러는 특징점 벡터의 컨텍스트 정보를 기초로 특징점 벡터를 전송할 뉴런 셀 모듈 을 선정할 수 있다. 즉, 인공지능 엔진 컨트롤러는 뉴런 셀 모듈의 컨텍스트를 지정할 수 있 다. 이 경우, 인공지능 엔진 컨트롤러는 이후의 학습 과정과 판단 과정을 수행함에 있어서 특징점 벡터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈에만 특징점 벡터를 전송할 수 있다. 특징점 벡터를 전송받은 뉴 런 셀 모듈은 특징점 벡터를 기초로 뉴런 셀 모듈이 가지고 있는 고유의 중심값 벡터와 상기 특징 점 벡터 간의 거리 정보를 생성한다. 뉴런 셀 모듈은 인공지능 엔진 컨트롤러에 거리 정보 및 뉴런 셀 모듈의 클래스 정보를 전송한다. 인공지능 엔진 컨트롤러는 경량 인공지능 연산 처리 장치 에 포함된 각 뉴런 셀 모듈에서 거리 정보와 뉴런 셀 모듈의 클래스 정보를 수집한다. 인공 지능 엔진 컨트롤러는 각 뉴런 셀 모듈에서 수집한 거리 정보를 최소 거리 검출 모듈에 전달 한다. 최소 거리 검출 모듈은 각 뉴런 셀 모듈의 거리 정보의 최소값을 구한다. 즉, 최소 거리 검출 모듈 은 각 뉴런 셀 모듈의 거리 정보를 기초로 최소 거리값을 생성한다. 인공지능 엔진 컨트롤러는 최소 거리값을 기초로 인공지능 판단 동작을 수행한다. 또한, 인공지능 엔진 컨트롤러는 최소 거리값과 특징점 벡터의 클래스 정보 및 뉴런 셀 모듈의 클래스 정보를 기초로 뉴 런 셀 모듈에 대한 인공지능 학습 동작을 수행한다. RCE-NN 알고리즘에 따라 뉴런 셀 모듈의 학습은 순차적으로 이루어지며, 한 번에 하나의 뉴런 셀 모듈 이 학습된다. 학습이 시작되지 않은 뉴런 셀 모듈은 'Idle'의 상태 정보를 가지며, 학습 중인 뉴런셀 모듈은 'Learning'의 상태 정보를 가지며, 학습이 완료된 뉴런 셀 모듈은 'Committed'의 상태 정보를 가진다. 즉, 최초에 'Idle' 상태였던 뉴런 셀 모듈은, 'Learning' 상태를 거쳐, 학습이 종료되면 'Committed' 상태로 전환된다. 도 2는 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 뉴런 셀 모듈의 구성 을 나타낸 블록도이다. 도 2에 도시한 바와 같이, 본 발명의 일 실시예에 따른 뉴런 셀 모듈은 뉴런 제어부(Neuron Control Unit, 1310), 거리 계산부(Distance Calculation Unit, 1320), AIF 계산부(Active Influence Field Computation Unit, 1330), 비교기(Comparator, 1340) 및 특징 메모리(Feature Memory, 1350)를 포함한다. 도 2 에 도시된 뉴런 셀 모듈은 일 실시예에 따른 것이고, 본 발명에 따른 뉴런 셀 모듈의 구성요소들이 도 2에 도시된 실시예에 한정되는 것은 아니며, 필요에 따라 부가, 변경 또는 삭제될 수 있다. 인공지능 엔진 컨트롤러는 버스 인터페이스를 통해 공통 상수 설정 데이터를 입력받는다. 공통 상수 설정 데이터는 모든 뉴런 셀 모듈에 공통으로 적용되는 상수(constant)에 관한 데이터이다. 예를 들어, 공통 상수 설정 데이터는 거리 계산 기준(예: L1 Norm 또는 L-infinity Norm), 특징점 데이터의 용도(예: 학습, 판별), 뉴런 셀 모듈이 최초로 설정하는 반경의 값(이하 '초기 반경') 등을 포함한다. 뉴런 셀 모듈의 학습이 진행되기 전에, 인공지능 엔진 컨트롤러는 뉴런 셀 모듈의 동작 결정 부에 공통 상수 설정 데이터를 전송하고, 동작 결정부는 뉴런 셀 모듈의 각 구성 요소에 공 통 상수 설정 데이터를 전달한다. 예를 들어, 동작 결정부는 거리 계산 기준을 거리 계산부에 전달 한다. 만약 'L1 Norm'으로 거리 계산 기준이 정해진 경우, 추후 학습 과정 또는 판별 과정에서 거리 계산부 의 멀티플렉서는 누산기에서 생성된 L1 Norm 거리 정보를 비교기에 전달하게 된다. 또 한, 동작 결정부는 뉴런 셀 모듈의 중심값 벡터가 정해지는 시점에, 공통 상수 설정 데이터에 포함 된 초기 반경을 해당 뉴런 셀 모듈의 반경으로 설정한다. 학습 과정에서, 뉴런 셀 모듈은 인공지능 엔진 컨트롤러에서 특징점 벡터를 전송받고, 특징 메모리 에 저장된 중심값 벡터와 특징점 벡터 간의 거리를 계산한다. 즉, 뉴런 셀 모듈은 중심값 벡터와 특징점 벡터를 기초로 중심값 벡터와 특징점 벡터 간의 거리 정보를 생성한다. 뉴런 셀 모듈은 거리 정보 와 뉴런 셀 모듈의 반경을 비교하며, 그 비교 결과와 특징점 벡터의 클래스 정보와의 클래스 정보 일치 여부를 기초로 반경을 학습한다. 판별(recognition) 과정에서, 뉴런 셀 모듈은 인공지능 엔진 컨트롤러에서 특징점 벡터를 전송받고, 특징 메모리에 저장된 중심값 벡터와 특징점 벡터 간의 거리를 계산한다. 즉, 뉴런 셀 모듈 은 중심값 벡터와 특징점 벡터를 기초로 중심값 벡터와 특징점 벡터 간의 거리 정보를 생성한다. 뉴런 셀 모듈은 거리 정보와 뉴런 셀 모듈의 반경을 비교하며, 거리 정보가 반경 이하인 경우 활성화되며 (firing 또는 activated), 인공지능 엔진 컨트롤러에 뉴런 셀 모듈의 클래스 정보를 전송한다. 뉴런 제어부는 뉴런 셀 모듈의 각 구성요소를 제어한다. 뉴런 제어부는 컨텍스트 레지스터 (Context Register, 1311), 클래스 레지스터(Class Register, 1312), 상태 레지스터(Status Register, 1313) 및 동작 결정부(Operation Decision Unit, 1314)를 포함한다. 컨텍스트 레지스터는 각 뉴런 셀 모듈이 특정 컨텍스트에 대해서만 동작을 하도록 고유의 컨텍스트 를 지정하기 위한 구성 요소이다. 컨텍스트 레지스터는 뉴런 셀 모듈 고유의 컨텍스트 정보를 저장 한다. 인공지능 엔진 컨트롤러가 뉴런 셀 모듈의 컨텍스트를 지정한 경우, 인공지능 엔진 컨트롤러 는 해당 뉴런 셀 모듈에 컨텍스트 정보를 전송하며, 뉴런 제어부는 컨텍스트 레지스터(131 1)에 컨텍스트 정보를 저장한다. 뉴런 셀 모듈은 컨텍스트 레지스터에 저장된 컨텍스트 정보를 기 초로 현재 연산 중인 응용(데이터셋, 특징점)을 구분하여 거리 정보를 연산한다. 각 뉴런 셀 모듈은 하나 의 컨텍스트에 대해서만 동작할 수 있으며, 서로 다른 컨텍스트에 대해서 학습된 뉴런 셀 모듈은 해당 컨 텍스트가 관련된 응용에 대해서만 동작할 수 있다. 클래스 레지스터는 뉴런 셀 모듈 고유의 클래스 정보를 저장한다. 뉴런 셀 모듈은 최초에는 중심값 벡터와 고유의 클래스 정보를 가지고 있지 않고 있다가, 인공지능 엔진 컨트롤러에서 특징점 벡터 와 특징점 벡터의 클래스 정보를 입력받으면, 상기 특징점 벡터를 중심값 벡터로 설정하여 특징 메모리에 저장하고, 상기 특징점 벡터의 클래스 정보를 뉴런 셀 모듈의 클래스 정보로 설정하여 클래스 레지스터에 저장한다. 한편, 뉴런 셀 모듈의 최초 반경은 인공지능 엔진 컨트롤러에 의해 설정되며, 특징 메모리에 저장된다. 각 뉴런 셀 모듈은 고유의 중심값 벡터, 반경, 클래스를 가진다. 뉴런 셀 모듈은 중심값 벡터로 표 현된 중심에서 반경 이내의 특징값 벡터에 해당 클래스의 영향력을 행사할 수 있다. 상태 레지스터는 현재 뉴런 셀 모듈의 학습 상태 정보(이하 '상태 정보'로 지칭될 수 있음)를 저장 한다. 즉, 상태 레지스터는 뉴런 셀 모듈의 학습 과정을 나타낸다. 뉴런 셀 모듈은 중심값 및 클래스가 결정되면 학습이 가능한 상태가 된다. 예를 들어, 상태 레지스터가 저장하는 학습 상태 정보 는 'Idle', 'Learning', 'Committed'의 3가지로 구성될 수 있다. 상태 레지스터는 해당 뉴런 셀 모듈 의 학습이 시작되지 않은 경우 'Idle'의 상태 정보를 가지며, 학습 중인 경우 'Learning'의 상태 정보를 가지며, 학습이 완료된 경우 'Committed'의 상태 정보를 가진다. 뉴런 셀 모듈의 학습 과정에서, 동작 결정부는 뉴런 제어부의 다른 구성 요소가 가지고 있는 정보, 비교기의 비교 결과 및 다른 뉴런 셀 모듈의 비교기의 비교 결과를 바탕으로 현재 뉴런의 반경(즉, AIF) 변경에 대한 명령(반경 조정 신호)을 결정한다. 동작 결정부는 인공지능 엔진 컨트롤러에서 반경 조정 신호와 특징점 벡터의 클래스 정보를 수신할 수 있다. 또한, 동작 결정부는 인공지능 엔진 컨트롤러에서 최소 거리값을 더 수신할 수 있다. 동작 결정부는 인공지능 엔진 컨트롤러에서 반경 조정 신호를 수신하는 경우, 특징점 벡터의 클래 스 정보와 뉴런 셀 모듈의 클래스 정보를 비교하고, 두 클래스 정보가 일치하지 않는 경우, 반경 조정 신 호를 AIF 계산부에 전달한다. 동작 결정부가 최소 거리값을 더 수신하는 경우, 동작 결정부 는 뉴런 셀 모듈의 반경을 하한까지 축소할 것을 요구하는 반경 조정 신호를 AIF 계산부에 전달할 수 있다. 거리 계산부는 특징점 벡터와 뉴런 셀 모듈의 중심값 벡터 간의 거리 정보를 생성한다. 거리 계산 부는 특징점 벡터와 뉴런 셀 모듈의 중심값 벡터 간의 L1 Norm 거리 정보 및 L-Infinity Norm 거 리 정보 중 어느 하나의 거리 정보를 생성한다. 거리 계산부는 감산기(Subtractor, 1321), 절대값 계산기 (Absolute Value Calculator, 1322), 누산기(Accumulator, 1323), 최대 거리 검출기(Maximum Distance Detector, 1324) 및 멀티플렉서(Multiplexer, 1325)를 포함한다. 감산기는 특징점 벡터와 중심값 벡터 간의 차를 계산한다. 절대값 계산기는 특징점 벡터와 중심값 벡터 간의 차의 절대값을 구한다. 누산기는 절대값 계산기에서 계산한 절대값을 특징에 따라 합산 한다. 즉, 누산기는 절대값 계산기에서 계산한 절대값을 기초로 특징점 벡터와 중심값 벡터 간의 L1 Norm 거리 정보를 생성한다. 최대 거리 검출기는 절대값 계산기에서 계산한 절대값 중 최대값을 구한다. 즉, 최대 거리 검출기는 절대값 계산기에서 계산한 절대값을 기초로 특징점 벡터와 중심값 벡터 간의 L-Infinity Norm 거리 정보를 생성한다. 멀티플렉서는 설정에 따라 누산기가 생성한 절 대값의 합산 결과(L1 Norm 거리 정보) 또는 최대 거리 검출기가 구한 절대값의 최대값(L-infinity Norm 거리 정보)을 비교기에 전달한다. 예를 들어, 특징점 벡터가 (2,2)이고, 중심값 벡터가 (4,6)이면, 감산기는 특징점 벡터와 중심값 벡터 간 의 차인 (-2,-4)를 구한다. 그리고, 절대값 계산기는 차의 절대값인 (2,4)를 구한다. 누산기는 차 의 절대값을 특징에 따라 합산하여 6을 구한다(이것이 L1 Norm 거리 정보). 최대 거리 검출기는 차의 절 대값의 최대값인 4를 구한다(이것이 L-Infinity Norm 거리 정보). 멀티플렉서는 설정에 따라 L1 Norm 거 리 정보 또는 L-infinity Norm 거리 정보 중 어느 하나를 비교기에 전달한다. 비교기는 거리 계산부가 생성한 거리 정보와 뉴런 셀 모듈의 반경(AIF)을 비교한다. 구체적 으로, 비교기는 거리 계산부가 생성한 거리 정보가 뉴런 셀 모듈의 반경 이하인지 여부를 판 단한다. 즉, 비교기는 현재 특징점 입력에 대한 뉴런 셀 모듈의 영향력 행사 여부를 판단한다. 비교기는 만약 거리 정보가 뉴런 셀 모듈의 반경보다 크다면 해당 뉴런 셀 모듈은 현재의 특 징점 벡터에 대해서 영향력이 없다고 판단한다.또한, 비교기는 거리 정보가 뉴런 셀 모듈의 반경보다 작거나 같은 경우 해당 뉴런 셀 모듈 은 현재의 특징점 벡터에 대해서 영향력이 있다고(영향력을 행사할 수 있다고) 판단한다. 즉, 각 뉴런 셀 모듈 은 자신의 중심값에서 자신의 반경(AIF) 만큼의 영향력을 행사할 수 있다. 이 경우, 특징점 벡터의 클래 스 정보가 뉴런 셀 모듈의 클래스 정보와 다르다면, 인공지능 엔진 컨트롤러의 제어에 따라 뉴런 셀 모듈의 반경은 감소하게 된다. 즉, 인공지능 엔진 컨트롤러는 특징점 벡터에 대해 영향력이 있 는 뉴런 셀 모듈 중에서 특징점 벡터와 클래스 정보가 다른 뉴런 셀 모듈의 영향력 크기를 줄이는 방식으로 학습을 진행한다. AIF 계산부는 학습 과정에서 뉴런 제어부의 동작 결정부의 판단 결과에 따라 뉴런 셀 모듈 의 반경(AIF)을 변경한다. AIF 계산부는 반경 조정 신호를 전달받은 경우, 뉴런 셀 모듈의 반경에서 기 설정된 반경 변경 범위(거리)를 차감하여 뉴런 셀 모듈의 반경을 갱신할 수 있다. 다른 예로, AIF 계산부는 뉴런 셀 모듈의 반경에 기 설정된 반경 변경 비율(예:0.8)을 곱하여 뉴런 셀 모듈의 반경을 갱신할 수 있다. 또 다른 예로, AIF 계산부는 반경 조정 신호에 따라 뉴런 셀 모듈 의 반경을 하한까지 축소할 수도 있다. 특징 메모리는 뉴런 셀 모듈의 연산에 필요한 데이터가 저장된다. 예를 들어, 특징 메모리는 뉴런 셀 모듈의 중심값 벡터와 반경(AIF) 및 특징점 벡터를 저장한다. 도 3은 컨텍스트별로 지정된 뉴런 셀 모듈을 표시한 도면이다. 도 3에 도시한 바와 같이 경량 인공지능 연산 처 리 장치에 64개의 뉴런 셀 모듈이 있는 경우, 컨텍스트 별로 복수의 뉴런 셀 모듈이 지정되 며, 각 뉴런 셀 모듈은 컨텍스트에 따라 각각의 응용에 대해서만 학습되고 동작이 가능하다. 예를 들어, 응용 1에 대하여 컨텍스트 #1이 대응되는 경우, 응용 1에 대하여 16개의 뉴런 셀 모듈이 학습되고 동작한 다. 또한, 응용 2에 대하여 컨텍스트 #2이 대응되는 경우, 응용 2에 대하여 14개의 뉴런 셀 모듈이 학습 되고 동작한다. 그리고, 응용 3에 대하여 컨텍스트 #3이 대응되는 경우, 응용 3에 대하여 25개의 뉴런 셀이 학 습되고 동작한다. 도 4는 컨텍스트별 뉴런 셀 모듈의 학습 상태 정보를 나타낸 도면이다. 인공지능 엔진 컨트롤러는 RCE-NN 알고리즘에 따라 뉴런 셀 모듈의 학습을 순차적으로 진행한다. 인공지능 엔진 컨트롤러는 한번에 하나의 뉴런 셀 모듈을 학습시킨다. 인공지능 엔진 컨트롤러는 컨텍스트별로 학습을 진행한다. 따 라서, 도 4에 도시된 바와 같이, 컨텍스트 #1에 해당하는 데이터셋이 입력되는 경우, 인공지능 엔진 컨트롤러 는 4번째 뉴런 셀 모듈(1300-4)에 대한 학습을 진행하고, 컨텍스트 #2에 해당하는 데이터셋이 입력되는 경우, 인공지능 엔진 컨트롤러는 27번째 뉴런 셀 모듈(1300-27)에 대한 학습을 진행한다. 또한, 컨텍스트 #1 내지 #3 이외에 새로운 컨텍스트에 따른 데이터셋이 입력되는 경우, 인공지능 엔진 컨트롤러는 56번째 뉴런 셀 모듈(1300-56)에 대한 학습을 진행하게 된다. 도 5a 및 도 5b는 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법 을 설명하기 위한 흐름도이다. 도 5a 및 도 5b의 흐름도는 다양한 응용(데이터셋)에 대한 경량 인공지능 연산 처리 장치의 학습 및 판별 동작 방법의 실시예를 나타낸다. 도 5a의 흐름도와 도 5b의 흐름도는 전반적으로 유사하나, 도 5a의 경우 하나의 응용(데이터셋)에 대해서 학습 이 끝난 이후에 새로운 응용(데이터셋)에 대해서 학습하는 방식으로 진행되고, 도 5b의 경우 하나의 응용을 한 번 학습 및 판단 동작을 수행하고, 이후 다른 응용에 대해서 학습 및 판단 동작을 수행하며 교차로 응용을 바꿔 가면서 학습하는 방식으로 진행된다. 도 5a에 도시된 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법은 S210 단계 내지 S300 단계를 포함한다. S210 단계는 공통 상수 설정 단계이다. 인공지능 엔진 컨트롤러는 버스 인터페이스를 통해 공통 상 수 설정 데이터를 입력받는다. 공통 상수 설정 데이터는 모든 뉴런 셀 모듈에 공통으로 적용되는 상수 (constant)에 관한 데이터이다. 예를 들어, 공통 상수 설정 데이터는 거리 계산 기준(예: L1 Norm 또는 L- infinity Norm), 특징점 데이터의 용도(예: 학습, 판별), 뉴런 셀 모듈의 초기 반경 등을 포함한다. 인공지능 엔진 컨트롤러는 뉴런 셀 모듈의 동작 결정부에 공통 상수 설정 데이터를 전송하고, 동작 결정부는 뉴런 셀 모듈의 각 구성 요소에 공통 상수 설정 데이터를 전달한다. 예를 들어, 동작 결정부는 거리 계산 기준을 거리 계산부에 전달한다. 만약 'L1 Norm'으로 거리 계산 기 준이 정해진 경우, 추후 학습 과정 또는 판별 과정에서 거리 계산부의 멀티플렉서는 누산기 에서 생성된 L1 Norm 거리 정보를 비교기에 전달하게 된다. 또한, 동작 결정부는 뉴런 셀 모듈의 중심값 벡터가 정해지는 시점에, 공통 상수 설정 데이터에 포 함된 초기 반경을 해당 뉴런 셀 모듈의 반경으로 설정한다. 또한, 인공지능 엔진 컨트롤러는 공통 상수 설정 데이터에 포함된 특징점 데이터의 용도 정보(예: 학습, 판별)에 따라서, 추후 입력되는 특징점 데이터를 기초로 뉴런 셀 모듈을 학습시킬 것인지, 판별 작업을 수행할 것인지 결정할 수 있다. S220 단계는 컨텍스트 결정 단계이다. 인공지능 엔진 컨트롤러는 버스 인터페이스를 통해 데이터셋 을 입력받는다. 데이터셋(입력데이터셋)은 특징점 데이터, 특징점 데이터의 컨텍스트 정보, 특징점 데이터의 용 도 정보 및 반경 변경 범위(또는 비율)를 포함하며, 학습용 데이터셋인 경우, 판별용 데이터셋과 달리, 특징점 데이터의 클래스 정보를 더 포함한다. 인공지능 엔진 컨트롤러는 특징점 데이터의 컨텍스트 정보를 기초 로 현재 입력되는 특징점 데이터의 컨텍스트를 결정한다. 그리고 인공지능 엔진 컨트롤러는 특징점 데이 터의 컨텍스트 정보에 부합하는 뉴런 셀 모듈을 판단한다. 본 단계에서 인공지능 엔진 컨트롤러는 특징점 데이터의 용도 정보(예: '학습', '판별')를 기초로 상기 특징점 데이터를 기초로 학습을 수행할 것인지 판별을 수행할 것인지 판단할 수 있다. S230 단계는 반경 변경 범위 설정 단계이다. 인공지능 엔진 컨트롤러는 데이터셋에 포함된 반경 변경 범 위(또는 비율) 정보를 각 뉴런 셀 모듈의 동작 결정부에 전달한다. 반경 변경 범위(또는 비율)은 뉴런 셀 모듈의 학습 과정에서 반경(AIF)의 최대 변경 범위(거리) 또는 최대 변경 비율을 의미한다. 반경 변경 범위는 반경의 상한이나 하한 중 어느 하나 또는 이들의 조합된 정보를 포함할 수 있다. 반경 변경 비율은 반경의 축소 비율(예:0.8)일 수 있다. 동작 결정부는 AIF 계산부에 반경 변경 범위 또는 반경 변경 비율을 전달한다. AIF 계산부는 추후 학습 과정에서 반경(AIF) 변경 시 전달받은 반경 변경 범위 또는 반 경 변경 비율을 적용하게 된다. S240 단계는 특징점 벡터 전달 단계이다. 입력받은 데이터셋에 포함된 특징점 데이터는 특징점 벡터일 수 있다. 인공지능 엔진 컨트롤러는 데이터셋에 포함된 특징점 벡터의 입력을 결정하고, 특징점 벡터를 각 뉴런 셀 모듈로 멀티캐스트 방식으로 전송한다. 이때 인공지능 엔진 컨트롤러는 특징점 벡터의 컨텍스트 정 보에 부합하는 컨텍스트를 가진 뉴런 셀 모듈에만 특징점 벡터를 전송한다. S250 단계는 특징점 벡터의 용도를 판단하는 단계이다. 인공지능 엔진 컨트롤러는 특징점 벡터의 용도 정 보를 기초로 특징점 벡터의 용도를 판단한다. 즉, 인공지능 엔진 컨트롤러는 입력된 특징점 벡터가 학습 용으로 입력된 것인지 판별용으로 입력된 것인지 판단한다. 인공지능 엔진 컨트롤러는 특징점 벡터의 용 도 정보가 '학습(Training)'인 경우 S260 단계를 진행하고, 특징점 벡터의 용도 정보가 '판별(Recognition)'인 경우 S270 단계를 진행한다. S260 단계는 학습 단계이다. 인공지능 엔진 컨트롤러의 제어에 의하여 뉴런 셀 모듈이 학습을 수행 한다. 이 경우 뉴런 셀 모듈의 반경(AIF)이 변경될 수 있다. 뉴런 제어부는 특징점 벡터를 거리 계산부에 전달한다. 거리 계산부는 특징점 벡터와 뉴런 셀 모듈의 중심점 벡터 간의 거리 정보를 생성한다(L1 Norm 또는 L-Infinity Norm). 비교기는 거리 계산부가 생성한 거리 정보와 뉴런 셀 모듈의 반경(AIF)을 비교한다. 비교기 는 거리 정보가 뉴런 셀 모듈의 반경보다 큰 경우, 해당 뉴런 셀 모듈은 현재의 특징점 벡터 에 대해서 영향력이 없다고 판단한다. 따라서 뉴런 셀 모듈은 해당 특징점 벡터에 대해 활성화되지 않는 다. 또한, 비교기는 거리 정보가 뉴런 셀 모듈의 반경 이하인 경우, 해당 뉴런 셀 모듈은 현 재의 특징점 벡터에 대해서 영향력이 있다고(영향력을 행사할 수 있다고) 판단한다. 이 경우 비교기는 판 단 결과를 동작 결정부에 전달하며, 동작 결정부는 거리 정보와 뉴런 셀 모듈의 클래스 정보 를 인공지능 엔진 컨트롤러에 전송한다. 인공지능 엔진 컨트롤러는 각 뉴런 셀 모듈에서 전송된 거리 정보를 최소 거리 검출 모듈에 전달한다. 최소 거리 검출 모듈은 각 뉴런 셀 모듈의 거리 정보를 기초로 최소 거리값을 선정한다. 인공지능 엔진 컨트롤러는 특징점 벡터의 클래스 정보와 거리 정보를 송신한 뉴런 셀 모듈의 클래 스 정보를 비교하고, 클래스 정보가 일치하지 않는 뉴런 셀 모듈에 반경 조정 신호와 특징점 벡터의 클래 스 정보를 전송한다. 이때 인공지능 엔진 컨트롤러는 최소 거리값을 뉴런 셀 모듈에 더 전송할 수 있다. 뉴런 셀 모듈의 동작 결정부는 반경 조정 신호를 수신하는 경우, 특징점 벡터의 클래스 정보와 뉴 런 셀 모듈의 클래스 정보를 비교하고, 두 클래스 정보가 일치하지 않는 경우, 반경 조정 신호를 AIF 계 산부에 전달한다. 동작 결정부가 최소 거리값을 더 수신하는 경우, 동작 결정부는 뉴런 셀 모듈의 반경을 하한까지 축소할 것을 요구하는 반경 조정 신호를 AIF 계산부에 전달할 수 있다. AIF 계산부는 반경 조정 신호를 전달받은 경우, 뉴런 셀 모듈의 반경에서 기 설정된 반경 변경 범 위(거리)를 차감하여 뉴런 셀 모듈의 반경을 갱신할 수 있다. 다른 예로, AIF 계산부는 뉴런 셀 모 듈의 반경에 기 설정된 반경 변경 비율(예:0.8)을 곱하여 뉴런 셀 모듈의 반경을 갱신할 수 있다. 또 다른 예로, AIF 계산부는 반경 조정 신호에 따라 뉴런 셀 모듈의 반경을 하한까지 축소할 수도 있다. S270 단계는 판별 단계이다. 인공지능 엔진 컨트롤러의 제어에 의하여 뉴런 셀 모듈이 판별 작업을 수행한다. 이 경우 뉴런 셀 모듈의 반경(AIF)이 변경되지 않는다. 뉴런 제어부는 특징점 벡터를 거리 계산부에 전달한다. 거리 계산부는 특징점 벡터와 뉴런 셀 모듈의 중심점 벡터 간의 거리 정보를 생성한다(L1 Norm 또는 L-Infinity Norm). 비교기는 거리 계산부가 생성한 거리 정보와 뉴런 셀 모듈의 반경(AIF)을 비교한다. 비교기 는 거리 정보가 뉴런 셀 모듈의 반경보다 큰 경우, 해당 뉴런 셀 모듈은 현재의 특징점 벡터 에 대해서 영향력이 없다고 판단한다. 따라서 뉴런 셀 모듈은 해당 특징점 벡터에 대해 활성화되지 않는 다. 또한, 비교기는 거리 정보가 뉴런 셀 모듈의 반경 이하인 경우, 해당 뉴런 셀 모듈은 현 재의 특징점 벡터에 대해서 영향력이 있다고(영향력을 행사할 수 있다고) 판단한다. 이 경우 비교기는 판 단 결과를 동작 결정부에 전달하며, 동작 결정부는 거리 정보와 뉴런 셀 모듈의 클래스 정보 를 인공지능 엔진 컨트롤러에 전송한다. 인공지능 엔진 컨트롤러는 각 뉴런 셀 모듈에서 전송된 거리 정보를 최소 거리 검출 모듈에 전달한다. 최소 거리 검출 모듈은 각 뉴런 셀 모듈의 거리 정보를 기초로 최소 거리값을 선정한다. 만약, 거리 정보를 전송한 뉴런 셀 모듈이 없는 경우, 인공지능 엔진 컨트롤러는 해당 특징점 벡터 에 대해서 '미지(unknown)'로 판별한다. 인공지능 엔진 컨트롤러는 최소 거리값을 가지는 뉴런 셀 모듈의 클래스를 해당 특징점 벡터가 속 하는 클래스로 판별한다. 인공지능 엔진 컨트롤러는, 만약 최소 거리값을 산출한 뉴런 셀 모듈이 복수 개인 경우, 해당 특징점 벡터에 대해서 '불확실(uncertainty)'로 판별한다. S280 단계는 해당 컨텍스트의 특징점 벡터가 모두 입력되었는지 판단하는 단계이다. 인공지능 엔진 컨트롤러 는 특정 컨텍스트에 대한 특징점 데이터(특징점 벡터)의 샘플이 모두 입력되었다면 S290 단계를진행하고, 그렇지 않은 경우 S240 단계를 진행한다. S290 단계는 반복 완료 여부를 판단하는 단계이다. 인공지능 엔진 컨트롤러는 특정 컨텍스트에 대한 특징 점 데이터(특징점 벡터)의 샘플 모음에 대한 추가 반복 입력이 있는지 판단한다. 인공지능 엔진 컨트롤러(110 0)는 반복(Iteration)이 완료된 경우 S300 단계를 진행하고, 완료되지 않은 경우 S220 단계를 진행한다. S300 단계는 다른 컨텍스트의 특징점 벡터의 입력이 있는지 판단하는 단계이다. 인공지능 엔진 컨트롤러 는 현재의 컨텍스트와 다른 컨텍스트에 해당하는 특징점 데이터(특징점 벡터)의 입력이 있다면 S220 단계를 진 행하고, 그렇지 않은 경우 프로세스를 종료한다. 도 5a를 참조하면, 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법 은 S210 단계 내지 S300 단계로 구성된다. 도 5a에 도시된 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법은 일 실시예에 따른 것이고, 본 발명에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동 작 방법의 단계들이 도 5a에 도시된 실시예에 한정되는 것은 아니며, 필요에 따라 부가, 변경 또는 삭제될 수 있다. 도 5b에 도시된 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법은 S210 단계 내지 S280 단계 및 S290' 단계 내지 S300' 단계를 포함한다. S290' 단계는 도 5a의 S300 단계와 동 일하며, S300' 단계는 도 5b의 S290 단계와 동일하므로, 설명을 생략한다. 요컨대 도 5b는 도 5a의 S290과 S300 의 순서를 서로 바꾼 것이다. 도 5b에 도시된 경량 인공지능 연산 처리 장치의 동작 방법은, 도 5a와 달리, 하나의 응용을 한 번 학습 및 판 단 동작을 수행하고, 이후 다른 응용에 대해서 학습 및 판단 동작을 수행하며 교차로 응용을 바꿔가면서 학습하 는 방식으로 진행된다는 것을 차이점으로 한다. 전술한 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법은 도면에 제시된 흐름도를 참조로 하여 설명되었다. 간단히 설명하기 위하여 상기 방법은 일련의 블록들로 도시되고 설명되었으나, 본 발명은 상기 블 록들의 순서에 한정되지 않고, 몇몇 블록들은 다른 블록들과 본 명세서에서 도시되고 기술된 것과 상이한 순서 로 또는 동시에 일어날 수도 있으며, 동일한 또는 유사한 결과를 달성하는 다양한 다른 분기, 흐름 경로, 및 블 록의 순서들이 구현될 수 있다. 또한, 본 명세서에서 기술되는 방법의 구현을 위하여 도시된 모든 블록들이 요 구되지 않을 수도 있다. 한편 도 5a 내지 도 5b를 참조한 설명에서, 각 단계는 본 발명의 구현예에 따라서, 추가적인 단계들로 더 분할 되거나, 더 적은 단계들로 조합될 수 있다. 또한, 일부 단계는 필요에 따라 생략될 수도 있고, 단계 간의 순서 가 변경될 수도 있다. 아울러, 기타 생략된 내용이라 하더라도 도 1 내지 도 4의 내용은 도 5a 내지 도 5b의 내 용에 적용될 수 있다. 또한, 도 5a 내지 도 5b의 내용은 도 1 내지 도 4의 내용에 적용될 수 있다. 도 6a 및 도 6b는 본 발명에 따른 경량 인공지능 연산 처리 장치를 이용하여 다양한 응용을 위한 학습 및 판별 실험을 수행한 결과를 나타낸 도면이다. 도 6a의 실험 결과는 도 5a의 동작 방법에 따른 학습 및 판별 결과이고, 도 6b의 실험 결과는 도 5b의 동작 방 법에 따른 학습 및 판별 결과를 나타낸 것이다. 'ITER'는 반복 횟수(Iteration)를 의미하며, 'N_Count'는 학습 과정에 사용된 뉴런 셀 모듈의 개수이다. 즉 'N_Count'는 Committed 상태의 뉴런 셀 모듈의 개수를 나타낸 것이다. 'IRIS'의 전체 샘플 수는 150개이고, 'WINE'의 전체 샘플 수는 178개이다. 'Accuracy'는 정확도(%)로서, 전체 샘플 수 대비 정확하게 판별된 샘플 수 (Correct Samples)의 비율을 나타낸다. 도 6a 및 도 6b를 비교해 보면, 두 동작 방법이 동일한 실험 결과(정확도)를 나타낸다. 따라서, 실시간 학습 및 판별 시에 데이터셋에 포함된 데이터가 컨텍스트로 구별이 된다면, 각 데이터셋의 순서에 상관없이 쉽게 학습 및 판단이 가능하며, 동일한 결과 값을 얻을 수 있음을 알 수 있다. 상기에서는 본 발명의 바람직한 실시예를 참조하여 설명하였지만, 해당 기술 분야의 숙련된 당업자는 하기의 특 허 청구의 범위에 기재된 본 발명의 사상 및 영역으로부터 벗어나지 않는 범위 내에서 본 발명을 다양하게 수정 및 변경시킬 수 있음을 이해할 수 있을 것이다."}
{"patent_id": "10-2022-0187916", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 구성을 나타낸 블록도. 도 2는 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 뉴런 셀 모듈의 구성을 나타낸 블록도. 도 3은 컨텍스트별로 지정된 뉴런 셀 모듈을 표시한 도면. 도 4는 컨텍스트별 뉴런 셀 모듈의 학습 상태 정보를 나타낸 도면. 도 5a 및 도 5b는 본 발명의 일 실시예에 따른 다양한 응용을 위한 경량 인공지능 연산 처리 장치의 동작 방법 을 설명하기 위한 흐름도. 도 6a 및 도 6b는 본 발명에 따른 경량 인공지능 연산 처리 장치를 이용하여 다양한 응용을 위한 학습 및 판별 실험을 수행한 결과를 나타낸 도면."}
