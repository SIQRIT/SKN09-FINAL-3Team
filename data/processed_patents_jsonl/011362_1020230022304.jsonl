{"patent_id": "10-2023-0022304", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0129462", "출원번호": "10-2023-0022304", "발명의 명칭": "인공 신경망을 위한 양자 행렬 연산기 및 양자 행렬 연산 방법", "출원인": "엘지전자 주식회사", "발명자": "박찬신"}}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "메모리에 저장된 가중치 값과 입력 데이터들을 양자 상태로 변환하는 양자 임베딩 회로;양자화된 값들을 이용하여 행렬곱 연산을 수행하는 양자 내적 회로 및행렬곱 연산된 결과를 양자화되기 전의 값으로 변환하여 상기 가중치 값을 반영하는 양자 활성함수 회로를 포함하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 양자 임베딩 회로는, 메모리에 저장된 가중치 값과 입력 데이터들을 양자 연산이 가능하도록 양자 중첩상태로 변환하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 1 항에 있어서,상기 양자 내력 회로는,양자화된 값들에 대하여 행렬곱 연산을 수행하여 확률분포 형태로 결과를 출력하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 양자 활성함수 회로는,인공신경망의 비선형 활성화 함수를 적용하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 양자 활성함수 회로는,RUS(Repeat Until Success)회로를 이용하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 1 항에 있어서,상기 양자 임베딩 회로는,공개특허 10-2024-0129462-3-인공신경망 모델의 가중치 행렬을 레이어별로 분리하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 6 항에 있어서,상기 양자 임베딩 회로는,분리된 각 레이어별로 가중치 행렬을 양자 임베딩 처리하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 양자 임베딩 회로는,상기 양자 임베딩 처리해야 하는 레이어가 마지막 레이어인지 판단하고, 마지막 레이어인지 여부에 따라 서로다른 처리를 수행하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 8 항에 있어서,상기 양자 임베딩 회로는,양자 임베딩 처리해야 하는 레이어가 마지막 레이어가 아닌 경우, 이전 레이어의 결과값을 양자 임베딩 처리하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 8 항에 있어서,상기 양자 임베딩 회로는,양자 임베딩 처리해야 하는 레이어가 마지막 레이어인 경우, 최종 결과를 저장하는 것을 특징으로 하는 양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9 항에 있어서,양자 연산처리를 통해 측정된 결과값을 처리하는 후처리 모듈을 더 포함하며,상기 후처리 모듈은,상기 양자 연산처리를 통해 측정된 결과값을 처리하여 상기 양자 활성함수 회로로 전송하는 것을 특징으로 하는양자 행렬 연산기."}
{"patent_id": "10-2023-0022304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제 1 항에 있어서,상기 양자 활성함수 회로에서 가중치가 반영된 행렬 데이터를 메모리에 인가하는 버퍼부를 더 포함하는 양자 행렬 연산기.공개특허 10-2024-0129462-4-"}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 인공 신경망을 위한 양자 행렬 연산기 및 양자 행렬 연산 방법에 대한 것으로, 메모리에 저장된 가중 치 값과 입력 데이터들을 양자 상태로 변환하는 양자 임베딩 회로, 양자화된 값들을 이용하여 행렬곱 연산을 수 행하는 양자 내적 회로 및 행렬곱 연산된 결과를 양자화되기 전의 값으로 변환하여 상기 가중치 값을 반영하는 양자 활성함수 회로를 포함한다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공 신경망을 위한 양자 행렬 연산기 및 양자 행렬 연산 방법에 대한 것이다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 인간의 두뇌가 패턴을 인식하는 방법을 모사하여 두뇌와 비슷한 방식으로 여러 정보를 처리하도록 구성되 는 인공 신경망(artificial neural network)이 다양한 분야에 적용되어 사용되고 있다. 이러한 인공 신경망은 방대한 데이터를 바탕으로 학습을 필요로 하며, 이과정에서 대량의 덧셈 및 곱셈 연산을 수행해야 하며, 이에 인공 신경망을 위한 연산을 수행하는 칩 구조에서는 MAC 연산기(Multiply-accumulate operater)와 같은 다수의 연산 회로가 구비되어야 한다. 따라서 최근에는 인공 신경망의 딥러닝에 특화된 새로운 종류의 하드웨어 가속기 분야가 큰 주목을 받고 있다. 딥러닝 가속기는 사용 환경 및 목적에 따라 서로 다른 형태로 제시되었다. 일예로 성능을 중시하는 서버나 워크 스테이션 등에는 GPU(Graphics Processing Unit)가 주로 사용되고, 저전력을 우선시 하는 스마트폰과 같은 엣지 디바이스에서는 FPGA(Field Programmable Gate Array) 또는 ASIC(application specific integrated circuit) 을 이용하여 설계한 전용 하드웨어, 즉 NPU(Neural Processing Unit)가 주로 사용되고 있다. 그러나 현재까지 나온 많은 가속기들은 전용 하드웨어 특성상 다양한 인공신경망에서 사용하는 다양한 형태의 레이어(layer) 또는 텐서(tensor)에 대응할 유연성이 부족하다. 이러한 단점은 현재 매우 다양하게 사용되고 있 는 딥러닝 어플리케이션 및 모델들을 대응하기 힘들다는 점에서 문제가 있다. 한편, 다수의 연산 장치를 가변적으로 사용하기 위해서는 제어 회로가 복잡해지며, 이에 인공 신경망의 연산 수 행 과정에서 일부 연산 장치가 이용되지 않고 유휴 상태에 머물러 있는 경우가 발생하게 되어 비효율성이 유발 되며, 불필요한 전력이 추가로 소모될 수 있다. 선행문헌 1(공개번호 10-2021-0014897, 2021년 2월 10일 공개)은 인공 신경망을 위한 행렬 연산기 및 행렬 연산 방법에 관한 것이다. 선행문헌 1은 곱셈연산과 덧셈 연산을 파이프라인 기법에 따라 병렬로 동시에 수행하여 연산 효율성을 높이고 전력 소모를 줄일 수 있는 행렬 연산기 및 행렬 연산 방법을 제공하여 누산기를 통해 덧셈 연산횟수를 줄이는 것을 특징으로 한다. 그러나, 선행문헌 1에 따르면, 인공신경망의 파라미터(parameter) 수가 증가할 수록 이에 비례해서 연산에 필요 한 행렬의 크기가 커지게 되고, 결국 병렬처리에 필요한 행렬의 원소 수가 증가함에 따라 PE의 개수와 누산기가 커져야 하고, 파이프라인(SIMDL)의 개수 또한 증가되게 된다. 천 억개 단위의 파라미터를 처리하기 위해서는 최 소 수 천에서 수 만개 단위의 행렬연산이 필요하고 이를 위한 병렬 연산 과정에서 병목이 발생하거나 병렬처리 라고 할지라도 단위 처리횟숙가 많아짐으로 인해서 전체 연산시간이 늘어나는 것을 피할 수 없다는 단점을 가진 다. 선행문헌 1은 행렬 곱셈 연산을 병렬연산(알고리즘)을 통해 가속할 뿐이지만, 본원발명은, 양자 중첩과 양자 내 적회로를 통한 행렬곱 연산 기법을 이용하여, 기존의 고전 컴퓨터의 곱셈기/덧셈기/누산기와 같은 하위모듈이 필요없는 양자고유의 특성을 이용한 새로운 연산 방법으로 회로실행만으로 고차원의 병렬 행렬 가중치합 (weighted sum)을 구하는 새로운 행렬 연산 방법을 제공할 수 있다. 선행문헌 2(공개번호 10-2021-0137772, 2021년 11월 18일 공개)는 양자 계산 최적화 장치 및 방법에 관한 것이다. 선행문헌 2는, 임의의 문제에 대한 양자 계산(quantum computation)에 대한 최적화 과정(process)을 정의한다. 임의의 문제(코드)가 주어질 때, 해당 연산 과정을 블록화 하고 양자 연산이 가능한 블록모듈을 분류하여 재사 용할 수 있다. 분류된 양자 연산 블록은 TEPTc(양자컴퓨터의 프로세싱 예측시간), TEPTs(양자 시뮬레이터의 프 로세싱 예측시간), TEEA(양자 컴퓨터의 오류 예측량) 등의 metric과 기준 값을 바탕으로 양자 시뮬레이션으로 처리할 지, 양자 컴퓨터로 처리할 지를 양자 계산 식별 모듈이 결정하여 처리한다. 그러나, 선행문헌 2는, 실제 양자 계산의 구체적인 과정(process)들이 생략되어 있고, 추상적으로 정의되어 있 을 뿐이다. 또한, 선행문헌 1은 구체적으로 양자컴퓨터로 계산할 수 있는 문제의 형태나 해결효과가 구체적으로 명시되지 않다. 선행문헌 2는 단순히 연산 단위를 블록으로 나누어 재사용성을 높이고, 시뮬레이터와 하드웨어 연산을 분류해주 는 기법인 반면에, 본 발명은 연산 기법에 대한 구체적인 명시가 이루어짐으로 양자 컴퓨팅의 효과나 영향으로 인한 진보성을 확보할 수 있고, 시뮬레이터나 하드웨어에 상관없이 범용적으로 어느 양자환경에서나 사용 가능 하다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 전술한 문제 및 다른 문제를 해결하는 것을 목적으로 하는 것으로, 최적화된 방법으로 양자 행렬곱을 수행하는 것이 가능한 인공신경망을 위한 행렬 연산기 및 행렬 연산 방법을 제공하는 것을 목적으로 한다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 또는 다른 목적을 달성하기 위해 본 발명의 일 측면에 따르면, 본 발명의 실시 예에 따른 양자 행렬 연산 기는, 메모리에 저장된 가중치 값과 입력 데이터들을 양자 상태로 변환하는 양자 임베딩 회로, 양자화된 값들을 이용하여 행렬곱 연산을 수행하는 양자 내적 회로 및 행렬곱 연산된 결과를 양자화되기 전의 값으로 변환하여 상기 가중치 값을 반영하는 양자 활성함수 회로를 포함한다. 실시 예에 있어서, 상기 양자 임베딩 회로는, 메모리에 저장된 가중치 값과 입력 데이터들을 양자 연산이 가능 하도록 양자 중첩상태로 변환하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 내력 회로는, 양자화된 값들에 대하여 행렬곱 연산을 수행하여 확률분포 형태로 결과를 출력하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 활성함수 회로는, 인공신경망의 비선형 활성화 함수를 적용하는 것을 특징으로 한 다. 실시 예에 있어서, 상기 양자 활성화 함수 회로는, RUS(Repeat Until Success)회로를 이용하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 임베팅 회로는, 인공신경망 모델의 가중치 행렬을 레이어별로 분리하는 것을 특징 으로 한다. 실시 예에 있어서, 상기 양자 임베팅 회로는, 분리된 각 레이어별로 가중치 행렬을 양자 임베딩 처리하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 임베딩 회로는, 상기 양자 임베딩 처리해야 하는 레이어가 마지막 레이어인지 판 단하고, 마지막 레이어인지 여부에 따라 서로 다른 처리를 수행하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 임베딩 회로는, 양자 임베딩 처리해야 하는 레이어가 마지막 레이어가 아닌 경우, 이전 레이어의 결과값을 양자 임베딩 처리하는 것을 특징으로 한다. 실시 예에 있어서, 상기 양자 임베딩 회로는, 양자 임베딩 처리해야 하는 레이어가 마지막 레이어인 경우, 최종 결과를 저장하는 것을 특징으로 한다. 실시 예에 있어서, 양자 연산처리를 통해 측정된 결과값을 처리하는 후처리 모듈을 더 포함하며, 상기 후처리 모듈은, 상기 양자 연산처리를 통해 측정된 결과값을 처리하여 상기 양자 활성함수 회로로 전송하는 것을 특징 으로 한다. 실시 예에 있어서, 상기 양자 활성함수 회로에서 가중치가 반영된 행렬 데이터를 메모리에 인가하는 버퍼부를 더 포함한다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명에 따르면, 본 발명은 양자 행렬곱의 경우, 데이터와 인공신경망(행렬)의 크기가 기하급수적(지수적)으 로 증가하더라도 선형(Linear)개의 큐빗 수로 처리가 가능하여, 대용량 병렬 처리에 효과적이다. 특히 최근에 다양한 형태로 확장되고 있는 초거대 인공지능 개발의 필수적인 요소가 될 것으로 기대한다."}
{"patent_id": "10-2023-0022304", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 사용되는 기술적 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 본 발명을 한정하 려는 의도가 아님을 유의해야 한다. 또한, 본 명세서에서 사용되는 단수의 표현은 문맥상 명백하게 다르게 뜻하 지 않는 한, 복수의 표현을 포함한다. 이하의 설명에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 명 세서 작성의 용이함만이 고려되어 부여되거나 혼용되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다 본 명세서에서, \"구성된다.\" 또는 \"포함한다.\" 등의 용어는 명세서상에 기재된 여러 구성 요소들, 또는 여러 단 계를 반드시 모두 포함하는 것으로 해석되지 않아야 하며, 그 중 일부 구성 요소들 또는 일부 단계들은 포함되 지 않을 수도 있고, 또는 추가적인 구성 요소 또는 단계들을 더 포함할 수 있는 것으로 해석되어야 한다. 또한, 본 명세서에 개시된 기술을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 명세서에 개시 된 기술의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부된 도면은 본 명세서에 개시된 실시 예를 쉽게 이해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명세서에 개시된 기술적 사상이 제한되지 않으며, 본 발명의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 또한 이하에서 설명되는 각각의 실시 예들 뿐만 아니 라, 실시 예들의 조합은 본 발명의 사상 및 기술 범위에 포함되는 변경, 균등물 내지 대체물로서, 본 발명의 사 상 및 기술 범위에 해당될 수 있음은 물론이다.. 이하 본 발명과 관련된 다수의 도면을 참조하여, 상술한 본 발명의 구성 및 동작을 보다 자세히 설명하기로 한 다. 도 1은 본 발명의 실시 예에 따른 양자 행렬 연산기를 설명하기 위한 블록도이다. 도 1을 참조하면, 본 발명의 양자 행렬 연산기는, 컴퓨터(또는 컴퓨팅 장치) 및 양자 컴퓨터(또는 양 자 컴퓨팅 장치)를 포함할 수 있다. 본 명세서에서는 설명의 편의를 위해, 양자 행렬 연산기가 컴퓨터 및 양자 컴퓨터를 각각 포함하는 것으로 설명 하지만, 양자 행렬 연산기가 컴퓨터 및 양자 컴퓨터의 구성을 포함하는 하나의 장치로 구현될 수 있다. 초거대 인공지능의 등장으로 인공신경망 학습/처리에 있어서 핵심적인 요소로 부각되고 있는 것은, 인공지능 모 델의 복잡도 증가에 따른 파라미터 수의 증가에 맞추어 수행 가능한 시간을 확보할 수 있는 연산기법이다. 양자 컴퓨팅은 기존의 고전컴퓨팅의 틀 안에서 발전된 기법들(GPU, TPU(ASIC소자))등과 같은 가속기와는 다른 양자 고유의 특성을 반영한 혁신적인 정보처리기법으로 수 십개의 큐빗으로 수억개의 데이터를 병렬로 처리할 수 있는 확장성을 가지고 있다. 종래에는, 인공 신경망의 딥러닝을 가속하기 위한 특화된 다양한 종류의 하드웨어 가속기(GPU, TPU 등등)와 병 렬처리 기법들이 소개되고 있으나, 여전히 기하급수적으로 커지고 있는 파라미터 수와 데이터 확장에 따른 활용 가능한 수준의 학습 및 추론 시간 확보가 어려운 상황이다. 기존의 병렬 행렬연산 처리기법들은 아키텍처적으로 회로를 확장하여 병렬처리를 지원하거나 알고리즘 적으로 누산기를 통해 계산량을 줄이는데 초점을 맞추고 있지만, 지수적인 연산량 증가에 대응하기에는 역부족이다. 양자 컴퓨팅을 활용한 새로운 차원의 연산기법에 대한 연구가 활발하나 구체적인 활용 방법을 명시하지 못하고 다소 추상적인 기법 정의에 그치고 있다. 본 발명은 이러한 양자 컴퓨팅을 활용하여 데이터와 인공신경망(행렬)의 크기가 기하급수적(지수적)으로 증가하 더라도 선형(Linear)개의 큐빗 수로 처리가 가능하여 대용량 병렬 처리를 수행할 수 있는 양자 행렬 연산기 및 양자 행렬 연산 방법을 제공할 수 있다. 본 명세서에서 설명하는 인공 신경망(artificial neural network)은 대표적으로, 컨볼루션 신경망(Convolution Neural Network: CNN)을 포함할 수 있다. 이를 위해, 본 발명의 양자 행렬 연산기에 포함된 컴퓨터는, 연산 제어부, 제1 버퍼부, 제2 버 퍼부, 연산회로 생성기 및 후처리부를 포함할 수 있다. 또한, 본 발명의 양자 행렬 연산기에 포함된 양자 컴퓨터는, 연산회로 수행기 및 활성함수 수행기 를 포함할 수 있다. 앞서 설명한 구성들은, 인공 신경망의 모듈로서 이용될 수 있다. 연산 제어부는 인공 신경망의 각 레이어에서 연산이 수행되어야 할 다수의 행렬을 인가받는다. 여기서 연 산이 수행되어야 하는 다수의 행렬은 레이어로 인가되는 적어도 하나의 특징맵(또는 입력 이미지)과 각각의 레 이어에 지정된 적어도 하나의 커널일 수 있다. 연산 제어부는 인가된 다수의 행렬 중 연산이 수행되어야 하는 2개의 행렬을 선택하고, 선택된 2개의 행렬 을 연산 명령과 함께 제1 버퍼부 및 제2 버퍼부로 전달한다. 일 예로, 제1 버퍼부로는 인공 신경망의 레이어로 인가되는 적어도 하나의 특징맵에 대한 피승수 행렬을 인가하고, 제2 버퍼부로는 인공 신경망의 레이어에 지정된 커널에 대한 승수 행렬을 인가할 수 있다. 그리고 연산 제어부는 연산회로 생성기으로부터 행렬 연산 수행 결과를 인가받아 메모리(미도시) 등 으로 전송하여 저장할 수 있다. 연산 제어부가 선택된 행렬을 연산 명령과 함께 인가하는 것은 후술하는 본 실시예에 따른 행렬의 곱셈 알 고리즘에 기반하여, 각 행렬의 원소를 선택하여 행렬 곱셈 연산을 수행할 수 있도록 하기 위함이다. 제1 버퍼부는 연산 명령에 따라 연산 제어부에서 인가된 피승수 행렬에서 열 단위로 원소를 선택하여 연산회로 생성기로 전달한다. 그리고 제2 버퍼부는 연산 명령에 따라 인가된 승수 행렬에서 행 단위 로 원소를 선택하여 연산회로 생성기로 전달한다. 일 예로, 연산회로 생성기는 다수의 연산 처리 레인(SIMDL)을 포함할 수 있다. 그리고 다수의 연산 처리 레인(SIMDL) 각각은 다수의 프로세스 소자(PE)와 SIMD 유닛(SIMDU)을 포함할 수 있다. 최근 행렬 연산기는 연산 효율성을 높이기 위해, 복잡한 연산을 단일 명령으로 일괄 처리할 수 있도록 SIMD(Single Instruction Multiple Data) 기법을 이용하는 것이 일반적이다. SIMD 기법은 다수의 프로세스 소 자(PE)들이 동일(또는 유사)한 연산을 다수의 데이터에 적용하여 동시에 처리하는 방식으로, 주로 백터(vector) 프로세서에서 이용되는 기술이다. SIMD 기법에서는 명령의 효율성을 극대화 하기 위해, 단일 명령으로 다중 데이터를 처리할 수 있는 다수의 명령 어 집합을 저장하고 있다. 그리고 저장된 명령어 집합 각각은 다수의 프로세스 소자(PE)에 대해 데이터 수준 병 렬성(Data Level Parallelism; DLP)을 이용하여 동시에 병렬로 연산을 수행하도록 한다. 즉 SIMD 유닛(SIMDU) 은 제1 및 제2 버퍼부(120, 130)에서 행 또는 열 단위로 인가되는 원소들에 다수의 프로세스 소자(PE)가 지정된 동일한 연산을 병렬로 수행하도록 한다. 여기서 SIMD 유닛(SIMDU)은 연산회로 생성기내의 하드웨어로 구현될 수도 있으나 연산회로 생성기에 서 수행되는 동작을 지정하는 소프트웨어로 구현될 수도 있다. 또한 경우에 따라서는 연산 제어부 내에 구 현될 수도 있다. 다수의 프로세스 소자(PE) 각각은 제1 및 제2 버퍼부(120, 130)로부터 피승수 행렬과 승수 행렬의 원소들 중 서 로 연산되어야 하는 원소들을 인가받아 곱셈 또는 덧셈 연산을 수행한다. 그리고 다수의 프로세스 소자(PE) 각 각은 MAC 연산기(Multiply-accumulate operater)로 구현될 수 있다. 한편, 본 발명에서는, 인공신경망의 가중치 값과 입력데이터(이전 단계의 결과값 포함)를 양자 상태로 변환하는 양자 임베딩 회로와 양자 행렬곱을 수행하는 양자 내적 회로, 양자 활성함수 회로를 포함할 수 있다. 양자 임베딩 회로는, 연산회로 생성기(또는 연산회로 수행기)에서 생성될 수 있다. 양자 임베딩 회로는 메모리에 있는 가중치 값들과 입력 데이터들을 양자 연산이 가능하도록 양자 중첩상태로 변 환하는 역할을 수행할 수 있다. 연산회로 수행기는, 양자회된 값들을 이용하여 행렬곱 연산을 수행하는 양자 내적 회로(또는 양자 행렬곱 회로)를 생성 및 실행시킬 수 있다. 양자 내적 회로는, 연산회로 수행기(또는 연산회로 생성기)에서 생성될 수 있다. 양자 내적 회로는 양자화된 값들을 바탕으로 행렬곱 연산을 수행하는 회로로 측정을 통해 확률분포 형태 혹은 특정 상태로 결과를 반환할 수 있다. 또한, 양자 내적 회로는, 연산결과(확률 분포형태)를 원래의 값으로 변환한 이후에 양자 활성함수 회로(또는 양자 활성화 회로)를 통과 시켜서, 원래 학습된 가중치의 특성을 그대로 반영할 수 있다. 양자 활성함수 회로는, 활성함수 수행기에 의해 생성 및/또는 실행될 수 있으며, 행렬곱 연산된 결과를 양 자화되기 전의 값으로 변환하여 가중치 값을 반영하는 역할을 수행할 수 있다. 연산 제어부는, 전체 회로 구성을 제어할 수 있다. 버퍼부(120, 130)는, 행렬 데이터를 메모리에서 인가할 수 있다. 후처리부(또는 후처리 모듈)는, 양자 연산처리를 통해 측정된 결과값을 처리할 수 있다. 양자 임베딩 회로는, 메모리에 저장된 가중치 값과 입력 데이터들을 양자 연산이 가능하도록 양자 중첩상 태로 변환할 수 있다. 상기 양자 내력 회로는, 양자화된 값들에 대하여 행렬곱 연산을 수행하여 확률분포 형태로 결과를 출력할 수 있다 상기 양자 활성함수 회로는, 인공신경망의 비선형 활성화 함수를 적용할 수 있다. 일 예로, 상기 양자 활 성함수 회로는, RUS(Repeat Until Success)회로를 이용할 수 있다. 도 2는 본 발명의 일 실시 예에 따른 양자 행렬 연산 방법을 설명하기 위한 흐름도이다. 도 2를 참조하면, 본 발명의 일 실시 예에 따른 양자 행렬 연산 방법은, 양자 임베딩 회로가 인공신경망 모델의 가중치 행렬을 레이어별로 분리하는 단계를 포함할 수 있다(S210). 상기 양자 임베딩 회로는, 분리된 각 레이어별로 가중치 행렬을 양자 임베딩 처리를 수행할 수 있다(S220). 이후, 양자 임베딩 회로는, 상기 양자 임베딩 처리해야 하는 레이어가 마지막 레이어인지 판단하고, 마지막 레 이어인지 여부에 따라 서로 다른 처리를 수행할 수 있다(S230). 예를 들어, 상기 양자 임베딩 회로는, 양자 임베딩 처리해야 하는 레이어가 마지막 레이어가 아닌 경우, 이전 레이어의 결과값을 양자 임베딩 처리할 수 있다(S240). 이후, 연산회로 수행기(또는 연산회로 생성기)는, 양자 내적 회로(양자 행렬곱 회로)를 생성하고 (S250), 양자 임베딩 처리된 레이어에 대하여 양자 회로를 수행(실행)할 수 있다(S260). 앞서 설명한 바와 같이, 본 발명의 양자 행렬 연산기는, 양자 연산처리를 통해 측정된 결과값을 처리하는 후처 리 모듈을 더 포함할 수 있다. 후처리 모듈은, 상기 양자 연산처리를 통해 측정된 결과값을 처리하여 상기 양자 활성함수 회로로 전 송할 수 있다(S270). 활성함수 수행기에 포함된 양자 활성함수 회로는, 전송된 결과값에 대하여 활성화 함수 회로를 수행 (실행)하고(S280), 최종 결과를 메모리에 저장할 수 있다(S290). 반면, 상기 양자 임베딩 회로는, 양자 임베딩 처리해야 하는 레이어가 마지막 레이어인 경우, 최종 결과를 저장 할 수 있다(S290). 버퍼부(구체적으로, 제2 버퍼부)는, 양자 활성함수 회로에서 가중치가 반영된 행렬 데이터를 메모리에 인 가할 수 있다. 도 3, 도 4, 도 5, 도 6, 도 7 및 도 8은 도 2에서 살펴본 양자 행렬 연산 방법을 설명하기 위한 개념도이다. 도 3은 인공신경망 예제와 연산과정을 나타낸 도면이다. 도 4는 가중치 행렬의 양자 임베딩을 수행하는 회로를 나타낸 도면이다. 도 5는 입력(데이터) 행렬의 양자 임베딩을 수행하는 회로를 나타낸 도면이다. 도 6은 양자 내적 회로(양자 행렬곱 회로)의 예제(Quantaum Inner Product)를 나타낸 개념도이다. 도 7은 후처리(PostProcessing) 결과값을 나타낸 도면이다. 도 8은 양자 활성함수 회로(양자 활성화 회로)의 예제를 나타낸 것이며, 도 8의 회로는, 일 예로, (Quantum Activation Function: RUS회로)를 나타낸 것이다. 도 9는, 본 발명의 양자 행렬곱 연산을 도식화한 것이다. 본 발명에 따르면, 본 발명은 A행렬(a_0,0, a_1,0, …, a_0,m)과 B행렬(b_0,0, …, b_m,0)에 대하여 양자 임베 딩 처리(Quantum Embedding) 처리를 수행한 후, 양자 행렬곱을 수행하는 양자 회로(Quantum Circuit)의 양자 내적 회로(Quantum Inner Product)에서 양자화된 값들을 이용하여 행렬곱 연산을 수행하고, 후처리(Post- Processing) 및 양자 활성함수회로를 통해 가중치가 반영된 결과값(C_0,0)을 결과값으로 출력할 수 있다. 이전 “인공 신경망을 위한 행렬 연산기 및 행렬 연산 방법 “특허의 경우, 인공신경망의 크기(파라미터 수)에 비례해서 회로의 크기와 복잡도가 증가하는 형태인데 반해, 본 발명의 양자 컴퓨터를 이용한 기법의 경우 n개의 큐비트로 2n의 지수승의 데이터를 병렬로 동시에 처리할 수 있기 때문에 확장과 처리복잡도 면에서 획기적인 구 조임을 알 수 있다. 또한 이전 “양자 계산 최적화 장치 및 방법”과 비교해서는 입력을 임의의 코드로 받아서 블록단위로 분류하여 재사용성을 높이고, 양자 시뮬레이션(SW)과 컴퓨터(HW)를 구분하여 처리한다는 추상적인 정의인 반면에, 본 발 명은 양자 시뮬레이션(SW)이냐 양자 컴퓨터(HW)이냐 구분 없이 범용적으로 적용할 수 있는 기법제공할 수 있다. 정리하면, 본 발명의 양자 행렬곱을 수행하는 과정은 1) Amplitude/Basic Embedding 2) Quantum Inner Product (SWAP test)/Quantum arithmetic with the Quantum Fourier Transform 3) 양자 활성화 회로(RUS(Repeat- until-success))에 있어서 특징을 가진다. 첫번째 양자 임베딩을 수행하는 기법은 Amplitude Embedding으로, 측정을 통한 확률분포(Amplitude)와 입력데이 터의 크기를 그대로 양자 상태(Quantum State)로 mapping하는 기법으로 지수승의 대규모 데이터의 양자 산술 (Arithmetic) 연산을 수행할 수 있다. 두번째, 양자 내적 회로(양자 행렬곱 연산회로)의 경우, Quantum Inner Product(내적) 회로를 활용한 방법(측정 결과의 확률 분포를 이용)과 Discrete Fourier Transform을 양자의 phase를 활용하여 적용한 기법인 Quantum Fourier Transformation을 활용한 행렬곱(Weighted Sum) 기법이 활영될 수 있다. 세번재, 양자 활성함수 회로(양자 활성화 회로)의 경우, 인공 신경망의 비선형 활성화 함수(non-linear activation function)를 양자회로(RUS(Repeat-until-success))를 통해 연산이 가능하다. 이에 따라, 본 발명의 경우, 양자 행렬곱의 경우, 데이터와 인공신경망(행렬)의 크기가 기하급수적(지수적)으로 증가하더라도 선형(Linear)개의 큐빗 수로 처리가 가능하여 대용량 병렬 처리에 효과적일 것으로 기대된다. 특 히 최근에 다양한 형태로 확장되고 있는 초거대 인공지능 개발의 필수적인 요소가 될 것으로 기대한다. 전술한 본 발명은, 프로그램이 기록된 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨터 가 읽을 수 있는 매체는, 컴퓨터 시스템에 의하여 읽혀질 수 있는 데이터가 저장되는 모든 종류의 기록장치를 포함한다. 컴퓨터가 읽을 수 있는 매체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있으며, 또한 캐리어 웨이브(예를 들어, 인터넷을 통한 전송)의 형태로 구현되는 것도 포함한다. 또한, 상기 컴퓨터는 본 발명의 실 시 예에 따른 양자 행렬 연산기의 제어부를 포함할 수도 있다. 따라서 상기의 상세한 설명은 모든 면에서 제한적으로 해석되어서는 아니되고 예시적인 것으로 고려되어야 한다. 본 발명의 범위는 첨부된 청구항의 합리적 해석에 의해 결정되어야 하고, 본 발명의 등가적 범위 내에서 의 모든 변경은 본 발명의 범위에 포함된다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8 도면9"}
{"patent_id": "10-2023-0022304", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 실시 예에 따른 양자 행렬 연산기를 설명하기 위한 블록도이다. 도 2는 본 발명의 일 실시 예에 따른 양자 행렬 연산 방법을 설명하기 위한 흐름도이다. 도 3, 도 4, 도 5, 도 6, 도 7, 도 8 및 도 9는 도 2에서 살펴본 양자 행렬 연산 방법을 설명하기 위한 개념도 이다."}
