{"patent_id": "10-2018-0137595", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2019-0128980", "출원번호": "10-2018-0137595", "발명의 명칭": "데이터 압축 및 복원을 위한 전자 장치 및 그 압축 방법", "출원인": "삼성전자주식회사", "발명자": "이동수"}}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "인공 지능 모델의 가중치(Weight) 파라미터 압축을 위한 전자 장치의 데이터 압축 방법에 있어서,복수의 가중치 파라미터를 포함하는 원본 데이터를 프루닝(pruning)하는 단계;상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 의해 값이 변경되지 않은 가중치 파라미터를 판단하고, 상기 값이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를 획득하는단계;상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 의해 값이 변경된 가중치 파라미터를판단하고, 상기 값이 변경된 가중치 파라미터를 돈케어(don't care) 파라미터로 치환하는 단계;상기 값이 변경되지 않은 가중치 파라미터 및 상기 돈케어 파라미터를 포함하는 제1 데이터를 n비트로 양자화하고, 상기 n 비트로 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득하는 단계; 및상기 획득된 n개의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개의 압축 데이터를 획득하는 단계; 를 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 제1 데이터는 매트릭스의 형태이며,상기 n 비트로 양자화된 데이터는,상기 매트릭스에 포함된 상기 값이 변경되지 않은 가중치 파라미터와 상기 돈케어 파라미터 각각을 n 비트로 양자화한 데이터인 것을 특징으로 하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 n 개의 제2 데이터는,상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 첫번째 비트값과 상기 n 비트로 양자화된상기 돈케어 파라미터의 첫번째 비트값으로 구성된 제2-1데이터와,상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 두번째 비트값과 상기 n 비트로 양자화된상기 돈케어 파라미터의 두번째 비트값으로 구성된 제2-2 데이터를 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 압축 데이터를 획득하는 단계는,적어도 하나의 압축 후보 데이터를 입력값으로 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된데이터와 상기 획득된 n개의 제2 데이터를 비교하는 단계; 및상기 획득된 n개의 제2 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 압축 데이터로 획득하는 단계; 를 더 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 4항에 있어서,공개특허 10-2019-0128980-3-상기 비교하는 단계는,상기 n개의 제2 데이터 각각에 포함된 데이터 중, 상기 값이 변경되지 않은 가중치 파라미터에 대응되는 데이터만을 상기 출력 데이터와 비교하는 것을 특징으로 하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서, 상기 인덱스 데이터를 획득하는 단계는, 상기 인덱스 데이터를 비터비 알고리즘에 적용하여 압축된 인덱스 데이터를 획득하는 단계; 를 더 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 인덱스 데이터를 획득하는 단계는,적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된데이터와 상기 인덱스 데이터를 비교하는 단계; 및상기 인덱스 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한입력값을 상기 압축된 인덱스 데이터로 획득하는 단계; 를 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 압축 방법은, 상기 압축된 인덱스 데이터, 상기 n개의 압축 데이터 및 상기 양자화에 필요한 테이블 데이터를 저장하는 단계;를 포함하는 압축 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "인공 지능 모델의 가중치(Weight) 파라미터 압축을 위한 전자 장치에 있어서,메모리; 및복수의 가중치 파라미터를 포함하는 원본 데이터를 프루닝(pruning)하고,상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 의해 값이 변경되지 않은 가중치 파라미터를 판단하고, 상기 값이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를획득하고,상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 의해 값이 변경된 가중치 파라미터를판단하고, 상기 값이 변경된 가중치 파라미터를 돈케어(don't care) 파라미터로 치환하고,상기 값이 변경되지 않은 가중치 파라미터 및 상기 돈케어 파라미터를 포함하는 제1 데이터를 n비트로 양자화하고, 상기 n 비트로 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득하고,상기 획득된 n개의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개의 압축 데이터를 획득하는 프로세서; 를포함하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 제1 데이터는 매트릭스의 형태이며,상기 n 비트로 양자화된 데이터는,상기 매트릭스에 포함된 상기 값이 변경되지 않은 가중치 파라미터와 상기 돈케어 파라미터 각각을 n 비트로 양공개특허 10-2019-0128980-4-자화한 데이터인 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 n 개의 제2 데이터는,상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 첫번째 비트값과 상기 n 비트로 양자화된상기 돈케어 파라미터의 첫번째 비트값으로 구성된 제2-1데이터와,상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 두번째 비트값과 상기 n 비트로 양자화된상기 돈케어 파라미터의 두번째 비트값으로 구성된 제2-2 데이터를 포함하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 프로세서는,적어도 하나의 압축 후보 데이터를 입력값으로 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된데이터와 상기 획득된 n개의 제2 데이터를 비교하고,상기 획득된 n개의 제2 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 압축 데이터로 획득하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12항에 있어서,상기 프로세서는,상기 n개의 제2 데이터 각각에 포함된 데이터 중, 상기 값이 변경되지 않은 가중치 파라미터에 대응되는 데이터만을 상기 출력 데이터와 비교하는 것을 특징으로 하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제9항에 있어서, 상기 프로세서는, 상기 인덱스 데이터를 비터비 알고리즘에 적용하여 압축된 인덱스 데이터를 획득하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 프로세서는,적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된데이터와 상기 인덱스 데이터를 비교하고,상기 인덱스 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한입력값을 상기 압축된 인덱스 데이터로 획득하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 메모리는, 상기 압축된 인덱스 데이터, 상기 n개의 압축 데이터 및 상기 양자화에 필요한 테이블 데이터를 저장하는 전자장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "공개특허 10-2019-0128980-5-압축 데이터를 복원하기 위한 전자 장치의 복원 방법에 있어서,압축된 인덱스 데이터 및 n개의 압축 데이터를 수신하는 단계;상기 압축된 인덱스 데이터를 비터비 디 컴프레서에 적용하여 원본 데이터 복원을 위한 인덱스 데이터를 획득하는 단계;상기 n개의 압축 데이터 각각을 비터비 디 컴프레서에 적용하여 상기 원본 데이터 복원을 위한 n개의 제2 데이터를 획득하는 단계; 및상기 원본 데이터 복원을 위한 인덱스 데이터 및 상기 원본 데이터 복원을 위한 n개의 압축 데이터를 연산하여프루닝된 원본 데이터를 복원하는 단계; 를 포함하는 복원 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 17항에 있어서,상기 원본 데이터를 복원하는 단계는,상기 프루닝된 원본 데이터를 인공지능 모델에 입력하여 재학습 시키는 단계; 및상기 재학습된 결과를 바탕으로 인공 지능 모델에 적용되는 복수의 가중치 파라미터를 획득하는 단계; 를 포함하는 복원 방법."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "압축 데이터를 복원하기 위한 전자 장치에 있어서,메모리;통신부; 및압축된 인덱스 데이터 및 n개의 압축 데이터를 수신하여 상기 메모리에 저장하도록 제어하는 프로세서; 를 포함하고,상기 프로세서는,상기 압축된 인덱스 데이터를 비터비 디 컴프레서에 적용하여 원본 데이터 복원을 위한 인덱스 데이터를 획득하고,상기 n개의 압축 데이터 각각을 비터비 디 컴프레서에 적용하여 상기 원본 데이터 복원을 위한 n개의 제2 데이터를 획득하고,상기 원본 데이터 복원을 위한 인덱스 데이터 및 상기 원본 데이터 복원을 위한 n개의 압축 데이터를 연산하여프루닝된 원본 데이터를 복원하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19항에 있어서,상기 프로세서는,상기 프루닝된 원본 데이터를 인공지능 모델에 입력하여 재학습 시키고, 상기 재학습된 결과를 바탕으로 인공지능 모델에 적용되는 복수의 가중치 파라미터를 획득하는 전자 장치."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "데이터 압축 방법 및 복원 방법이 개시된다. 상기 목적을 달성하기 위한 본 개시의 일 실시예에 따른, 인공 지능 모델의 가중치(Weight) 파라미터 압축을 위한 전자 장치의 데이터 압축 방법은, 복수의 가중치 파라미터를 포함 하는 원본 데이터를 프루닝(pruning)하는 단계, 상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 (뒷면에 계속)"}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 데이터의 압축 및 복원 방법에 관한 것이다. 보다 상세하게는, 본 개시는 병렬적으로 압축을 수행할 수 있는 전자 장치에 관한 것이다. 또한, 본 개시는 기계학습 알고리즘을 활용하여 인간 두뇌의 인지, 판단 등의 기능을 모사하는 인공 지능 (Artificial Intelligence, AI) 시스템 및 그 응용에 관한 것이다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence, AI) 시스템은 인간 수준의 지능을 구현하는 컴퓨터 시스템이며, 기존 규칙 기반 스마트 시스템과 달리 기계가 스스로 학습하고 판단하며 똑똑해지는 시스템이다. 인공지능 시스템은 사용 할수록 인식률이 향상되고 사용자 취향을 보다 정확하게 이해할 수 있게 되어, 기존 규칙 기반 스마트 시스템은 점차 딥러닝 기반 인공지능 시스템으로 대체되고 있다. 인공지능 기술은 기계학습(딥러닝) 및 기계 학습을 활용한 요소 기술들로 구성된다. 기계 학습은 입력 데이터들의 특징을 스스로 분류/학습하는 알고리즘 기술이며, 요소 기술은 딥러닝 등의 기계 학습 알고리즘을 활용하는 기술로서, 언어적 이해, 시각적 이해, 추론/예측, 지식 표현, 동작 제어 등의 기술 분야로 구성된다. 인공지능 기술이 응용되는 다양한 분야는 다음과 같다. 언어적 이해는 인간의 언어/문자를 인식하고 응용/처리 하는 기술로서, 자연어 처리, 기계 번역, 대화 시스템, 질의 응답, 음성 인식/합성 등을 포함한다. 시각적 이해 는 사물을 인간의 시각처럼 인식하여 처리하는 기술로서, 객체 인식, 객체 추적, 영상 검색, 사람 인식, 장면 이해, 공간 이해, 영상 개선 등을 포함한다. 추론 예측은 정보를 판단하여 논리적으로 추론하고 예측하는 기술 로서, 지식/확률 기반 추론, 최적화 예측, 선호 기반 계획, 추천 등을 포함한다. 지식 표현은 인간의 경험 정보 를 지식데이터로 자동화 처리하는 기술로서, 지식 구축(데이터 생성/분류), 지식 관리(데이터 활용) 등을 포함 한다. 동작 제어는 차량의 자율 주행, 로봇의 움직임을 제어하는 기술로서, 움직임 제어(항법, 충돌, 주행), 조 작 제어(행동 제어) 등을 포함한다. 한편, 최근에는 인공 지능 분야인 딥러닝 기술에 대한 논의가 진행되고 있다. 일반적으로, 메모리 사이즈가 큰 딥러닝 모델의 경우, 메모리 사이즈의 한계로 인해 스마트폰과 같은 일반 전자 장치에서 사용되기 어려운 측면 이 존재하였다. 또한, 병렬 연산에 적합한 딥러닝 모델에 대하여 기존의 압축 방법을 적용하는 경우, 메모리 대역폭의 이용률 측면에서 많은 손해가 발생하였으며, 전력 소모 또한 크다는 문제점이 존재하였다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 상술한 문제점을 해결하기 위해 안출된 것으로, 원본 데이터를 병렬 연산이 가능한 압축기를 이용하 여 원본 데이터를 압축할 수 있는 전자 장치 및 그의 압축 방법에 관한 것이다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기 목적을 달성하기 위한 본 개시의 일 실시예에 따른, 인공 지능 모델의 가중치(Weight) 파라미터 압축을 위 한 전자 장치의 데이터 압축 방법은, 복수의 가중치 파라미터를 포함하는 원본 데이터를 프루닝(pruning)하는 단계, 상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 따라 값이 변경되지 않은 가중 치 파라미터를 판단하고, 상기 값이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를 획득하는 단계, 상기 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 상기 프루닝에 따라 값이 변경된 가 중치 파라미터를 판단하고, 상기 값이 변경된 가중치 파라미터를 돈케어(don’t care) 파라미터로 치환하는 단 계, 상기 값이 변경되지 않은 가중치 파라미터 및 상기 돈케어 파라미터를 포함하는 제1 데이터를 n비트로 양자 화 하고, 상기 n 비트로 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득하는 단계 및 상기 획득된 n개의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개의 압축 데이터를 획득하는 단계를 포함한다. 이때, 상기 제1 데이터는 매트릭스의 형태이며, 상기 n 비트로 양자화된 데이터는, 상기 매트릭스에 포함된 상 기 값이 변경되지 않은 가중치 파라미터와 상기 돈케어 파라미터 각각을 n 비트로 양자화한 데이터일 수 있다. 이때, 상기 n 개의 제2 데이터는, 상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 첫번째 비트값과 상기 n 비트로 양자화된 상기 돈케어 파라미터의 첫번째 비트값으로 구성된 제2-1 데이터와, 상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 두번째 비트값과 상기 n 비트로 양자화된 상기 돈 케어 파라미터의 두번째 비트값으로 구성된 제2-2 데이터를 포함할 수 있다. 이때, 상기 압축 데이터를 획득하는 단계는, 적어도 하나의 압축 후보 데이터를 입력값으로 비터비 디-컴프레서 (Viterbi-decompressor)에 입력하여 출력된 데이터와 상기 획득된 n개의 제2 데이터를 비교하는 단계 및 상기 획득된 n개의 제2 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 압축 데이터로 획득하는 단계를 더 포함할 수 있다. 이때, 상기 비교하는 단계는, 상기 n개의 제2 데이터 각각에 포함된 데이터 중, 상기 값이 변경되지 않은 가중 치 파라미터에 대응되는 데이터만을 상기 출력 데이터와 비교할 수 있다. 이때, 상기 인덱스 데이터를 획득하는 단계는, 상기 인덱스 데이터를 비터비 알고리즘에 적용하여 압축된 인덱 스 데이터를 획득하는 단계를 더 포함할 수 있다. 이때, 상기 인덱스 데이터를 획득하는 단계는, 적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디-컴프 레서(Viterbi-decompressor)에 입력하여 출력된 데이터와 상기 인덱스 데이터를 비교하는 단계 및 상기 인덱스 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 상기 압축된 인덱스 데이터로 획득하는 단계를 포함할 수 있다. 이때, 상기 압축 방법은, 상기 압축된 인덱스 데이터, 상기 n개의 압축 데이터 및 상기 양자화에 필요한 테이블 데이터를 저장하는 단계를 포함할 수 있다. 한편, 본 개시의 또 다른 실시예에 따른 인공 지능 모델의 가중치(Weight) 파라미터 압축을 위한 전자 장치는, 메모리 및 복수의 가중치 파라미터를 포함하는 원본 데이터를 프루닝(pruning)하고, 상기 프루닝된 원본 데이터 에 포함된 가중치 파라미터 중, 상기 프루닝에 따라 값이 변경되지 않은 가중치 파라미터를 판단하고, 상기 값 이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를 획득하고, 상기 프루닝된 원본 데 이터에 포함된 가중치 파라미터 중, 상기 프루닝에 따라 값이 변경된 가중치 파라미터를 판단하고, 상기 값이 변경된 가중치 파라미터를 돈케어(don’t care) 파라미터로 치환하고, 상기 값이 변경되지 않은 가중치 파라미 터 및 상기 돈케어 파라미터를 포함하는 제1 데이터를 n비트로 양자화 하고, 상기 n 비트로 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득하고, 상기 획득된 n개의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개 의 압축 데이터를 획득하는 프로세서를 포함할 수 있다. 이때, 상기 제1 데이터는 매트릭스의 형태이며, 상기 n 비트로 양자화된 데이터는, 상기 매트릭스에 포함된 상 기 값이 변경되지 않은 가중치 파라미터와 상기 돈케어 파라미터 각각을 n 비트로 양자화한 데이터일 수 있다. 이때, 상기 n 개의 제2 데이터는, 상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 첫번째 비트값과 상기 n 비트로 양자화된 상기 돈케어 파라미터의 첫번째 비트값으로 구성된 제2-1 데이터와, 상기 n 비트로 양자화된 상기 값이 변경되지 않은 가중치 파라미터의 두번째 비트값과 상기 n 비트로 양자화된 상기 돈 케어 파라미터의 두번째 비트값으로 구성된 제2-2 데이터를 포함할 수 있다. 이때, 상기 프로세서는, 적어도 하나의 압축 후보 데이터를 입력값으로 비터비 디-컴프레서(Viterbi- decompressor)에 입력하여 출력된 데이터와 상기 획득된 n개의 제2 데이터를 비교하고, 상기 획득된 n개의 제2 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 압축 데이터로 획득할 수 있다. 이때, 상기 프로세서는, 상기 n개의 제2 데이터 각각에 포함된 데이터 중, 상기 값이 변경되지 않은 가중치 파 라미터에 대응되는 데이터만을 상기 출력 데이터와 비교할 수 있다. 이때, 상기 프로세서는, 상기 인덱스 데이터를 비터비 알고리즘에 적용하여 압축된 인덱스 데이터를 획득할 수 있다. 이때, 상기 프로세서는, 적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디-컴프레서(Viterbi- decompressor)에 입력하여 출력된 데이터와 상기 인덱스 데이터를 비교하고, 상기 인덱스 데이터와 상기 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 상기 출력된 데이터에 대한 입력값을 상기 압축된 인덱스 데이터 로 획득할 수 있다. 이때, 상기 메모리는, 상기 압축된 인덱스 데이터, 상기 n개의 압축 데이터 및 상기 양자화에 필요한 테이블 데 이터를 저장할 수 있다. 한편, 본 개시의 또 다른 실시예에 따른 압축 데이터를 복원하기 위한 전자 장치의 복원 방법은 압축 데이터를 복원하기 위한 전자 장치의 복원 방법은 압축된 인덱스 데이터 및 n개의 압축 데이터를 수신하는 단계, 상기 압 축된 인덱스 데이터를 비터비 디 컴프레서에 적용하여 원본 데이터 복원을 위한 인덱스 데이터를 획득하는단계, 상기 n개의 압축 데이터 각각을 비터비 디 컴프레서에 적용하여 상기 원본 데이터 복원을 위한 n개의 제2 데이터를 획득하는 단계 및 상기 원본 데이터 복원을 위한 인덱스 데이터 및 상기 원본 데이터 복원을 위한 n개 의 압축 데이터를 연산하여 프루닝된 원본 데이터를 복원하는 단계를 포함할 수 있다. 이때, 상기 원본 데이터를 복원하는 단계는, 상기 프루닝된 원본 데이터를 인공지능 모델에 입력하여 재학습 시 키는 단계 및 상기 재학습된 결과를 바탕으로 인공 지능 모델에 적용되는 복수의 가중치 파라미터를 획득하는 단계를 포함할 수 있다. 한편, 본 개시의 또 다른 실시예에 따른 압축 데이터를 복원하기 위한 전자 장치는, 메모리, 통신부 및 압축된 인덱스 데이터 및 n개의 압축 데이터를 수신하여 상기 메모리에 저장하도록 제어하는 프로세서를 포함하고, 상 기 프로세서는, 상기 압축된 인덱스 데이터를 비터비 디 컴프레서에 적용하여 원본 데이터 복원을 위한 인덱스 데이터를 획득하고, 상기 n개의 압축 데이터 각각을 비터비 디 컴프레서에 적용하여 상기 원본 데이터 복원을 위한 n개의 제2 데이터를 획득하고, 상기 원본 데이터 복원을 위한 인덱스 데이터 및 상기 원본 데이터 복원을 위한 n개의 압축 데이터를 연산하여 프루닝된 원본 데이터를 복원할 수 있다. 이때, 상기 프로세서는, 상기 프루닝된 원본 데이터를 인공지능 모델에 입력하여 재학습 시키고, 상기 재학습된 결과를 바탕으로 인공 지능 모델에 적용되는 복수의 가중치 파라미터를 획득할 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "상기와 같은 본 개시의 다양한 실시예에 따라, 전자 장치는 병렬 연산을 통해 효율적으로 데이터를 압축할 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 명세서에서 사용되는 용어에 대해 간략히 설명하고, 본 개시에 대해 구체적으로 설명하기로 한다. 본 개시의 실시 예에서 사용되는 용어는 본 개시에서의 기능을 고려하면서 가능한 현재 널리 사용되는 일반적인 용어들을 선택하였으나, 이는 당 분야에 종사하는 기술자의 의도 또는 판례, 새로운 기술의 출현 등에 따라 달 라질 수 있다. 또한, 특정한 경우는 출원인이 임의로 선정한 용어도 있으며, 이 경우 해당되는 개시의 설명 부 분에서 상세히 그 의미를 기재할 것이다. 따라서 본 개시에서 사용되는 용어는 단순한 용어의 명칭이 아닌, 그 용어가 가지는 의미와 본 개시의 전반에 걸친 내용을 토대로 정의되어야 한다. 본 개시의 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는바, 특정 실시 예들을 도 면에 예시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하 려는 것이 아니며, 발명된 사상 및 기술 범위에 포함되는 모든 변환, 균등물 내지 대체물을 포함하는 것으로 이 해되어야 한다. 실시 예들을 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 구성요소들은 용어들에 의해 한정되 어서는 안 된다. 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또 는 \"구성되다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것 이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시에서 \"모듈\" 혹은 \"부\"는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되 거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\" 혹은 복수의 \"부\"는 특정한 하드 웨어로 구현될 필요가 있는 \"모듈\" 혹은 \"부\"를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하나의 프 로세서(미도시)로 구현될 수 있다. 아래에서는 첨부한 도면을 참고하여 본 개시의 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식 을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 개시는 여러 가지 상이한 형태로 구현될 수 있으며 여기에서 설명하는 실시 예에 한정되지 않는다. 그리고 도면에서 본 개시를 명확하게 설명하기 위해 서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도 1은 본 개시의 일 실시예에 따른 종래의 압축 방법을 설명하기 위한 예시도이다. 도 1에 도시된 바와 같이, 전자 장치는 원본 데이터를 프루닝(pruning) 하여 데이터의 크기를 줄일 수 있 다. 이때, 압축하고자 하는 데이터는 예를 들어, 학습된 뉴럴 네트워크의 뉴런(neuron)사이의 학습된 연결 강도 와 관련된 데이터 일 수 있다. 예를 들어, 압축하고자 하는 데이터는 DNN(Deep Neural Network), RNN(Recurrent Neural Network), BRDNN(Bidirectional Recurrent Deep Neural Network)과 같은 데이터 인식 모델에 포함된 뉴런 사이의 연결 강도일 수 있다. 이하, 전자 장치가 압축 하고자 하는 데이터를 가중치 파라미터라 한다. 원본 데이터는 복수의 가중치 파라미터를 포함할 수 있다.한편, 프루닝(Pruning)은 인공 지능 모델의 가중치 파라미터 중 의미 없는 가중치 파라미터 또는 출력값에 큰 영향을 주지 않는 가중치 파라미터를 삭제하는 압축 기법 중 하나이다. 예를 들어, 뉴런(neuron)사이의 학습된 연결 강도가 약하거나, 결과 값에 큰 영향을 주지 않는 경우, 전자 장치는 프루닝을 통해 뉴런(neuron)사이의 학습된 연결 강도를 삭제할 수 있 다. 전자 장치는 압축하고자 하는 가중치 파라미터 각각의 크기 값을 기초로, 특정 크기 값 이하인 데이터들은 프루닝(Pruning)하고, 남은 데이터를 이용하여 딥러닝 모델을 재훈련 시켜 딥러닝 모델의 정확도를 복구하는 방 식을 사용하였다. 예를 들어, 프루닝된 원본 데이터가 아래와 같이 행렬의 형태로 표시된다고 가정할 수 있다. 이때, 프루닝 및 재 훈련을 거친 원본 데이터는 다수의 0값을 가지게 된다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "즉, 전자 장치는 프루닝 과정을 거쳐 많은 0 값과 일부의 논-제로(non-zero)값을 획득할 수 있다. 이때, 전자 장치는 CSR(Compressed Sparse Row) format에 따라, 다수의 0 값을 제거하여 행렬의 크기를 줄일 수 있다. 예를 들어, 전자 장치는 상기 행렬을 하기와 같은 세개의 행렬로 변환하여 행렬의 크기를 줄일 수 있다. A=[5 8 3 6] IA=[0 0 2 3 4] JA=[0 1 2 1] 이때, 행렬 A는 프루닝된 원본 데이터에 대응되는 행렬 중, 논-제로 값에 대응되는 행렬이며, IA는 프루닝된 원 본 데이터에 대응되는 행렬 중 열(row)에 해당하는 논-제로 데이터의 수를 누적한 행렬이며, JA는 행렬 A의 각 각의 논-제로 값에 해당되는 행 인덱스(column index)의 값을 저장할 수 있는 행렬이다. 전자 장치는 행렬 A, IA, JA를 이용하여 프루닝된 원본 데이터에 대응되는 행렬을 획득할 수 있다. 다만, CSR format에 의한 압축 방법의 경우, 행렬 A에 대응되는 논-제로 데이터의 크기보다 인덱스의 크기가 항 상 더 크다. 따라서, 인덱스의 압축률을 높여야 전체 압축률이 높아질 수 있다는 문제점이 존재한다. 또한, CSRformat에 의한 압축 방법의 경우, 병렬 연산에 적합하지 않은 문제점이 존재하다. 따라서, 병렬 연산 처리를 이 용하는 딥러닝 모델을 압축하는 경우, 메모리 대역폭의 이용률이 떨어지고, 전력 소모가 크다는 단점이 존재한 다. 따라서, 기존의 프루닝 레이트를 유지하면서 병렬적으로 압축을 수행할 수 있는 압축 방법이 필요하다. 도 2는 본 개시의 일 실시예에 따른 전자 장치의 구성을 간략히 도시한 블록도이다. 이때, 전자 장치는 다양한 장치 일 수 있다. 전자 장치는 스마트 폰으로 구현될 수 있으나, 이는 일 실시예에 불과할 뿐, 스마트폰(smartphone), 태블릿 PC(tablet personal computer), 이동 전화기(mobile phone), 영상 전화기, 전자책 리더기(e-book reader), 데스크탑 PC (desktop PC), 랩탑 PC(laptop PC), 넷북 컴퓨터(netbook computer), 워크스테이션(workstation), 서버, PDA(personal digital assistant), PMP(portable multimedia player), MP3 플레이어 중 적어도 하나를 포함할 수 있다. 또 다른 실시 예로, 전자 장치는 가전 제품(home appliance)일 수 있다. 가전 제품은, 예를 들면, 텔레비 전, DVD 플레이어(Digital Video Disk player), 오디오, 냉장고, 에어컨, 청소기, 오븐, 전자레인지, 세탁기, 공기 청정기, 셋톱 박스(set-top box), 홈 오토매이션 컨트롤 패널(home automation control panel), 보안 컨 트롤 패널(security control panel), TV 박스(예: 삼성 HomeSync™, 애플TV™, 또는 구글 TV™), 게임 콘솔(예: Xbox™, PlayStation™), 전자 사전, 전자 키, 캠코더, 또는 전자 액자 중 적어도 하나를 포함할 수 있다. 또는, 전자 장치는 클라우딩 컴퓨팅 환경이 구축된 시스템 자체일 수도 있다. 본 개시에 따른 전자 장치는 메모리 및 프로세서를 포함한다. 다만, 상술한 다양한 전자 장치에 서의 필요에 따라, 디스플레이, 통신부, 입력부, 출력부, 감지부 등 다양한 구성이 추가되거나 생략될 수 있음 은 물론이다. 메모리는 다양한 소프트웨어 및/또는 프로그램을 저장할 수 있다. 프로그램은, 예를 들면, 커널, 미들웨 어, 어플리케이션 프로그래밍 인터페이스(API) 및/또는 어플리케이션 프로그램(또는 \"어플리케이션\") 등을 포함 할 수 있다. 커널, 미들웨어 또는 API의 적어도 일부는, 운영 시스템으로 지칭될 수 있다. 커널은, 예를 들면, 다른 프로그램들에 구현된 동작 또는 기능을 실행하는 데 사용되는 시스템 리소스들을 제어 또는 관리할 수 있 다. 또한, 커널은 미들웨어, API, 또는 어플리케이션 프로그램에서 전자 장치의 개별 구성요소에 접근함으 로써, 시스템 리소스들을 제어 또는 관리할 수 있는 인터페이스를 제공할 수 있다. 미들웨어는, 예를 들면, API또는 어플리케이션 프로그램이 커널과 통신하여 데이터를 주고받을 수 있도록 중개 역할을 수행할 수 있다. 또한, 미들웨어는 어플리케이션 프로그램으로부터 수신된 하나 이상의 작업 요청들을 우선 순위에 따라 처리할 수 있다. 예를 들면, 미들웨어는 어플리케이션 프로그램 중 적어도 하나에 전자 장치 의 시스템 리소스를 사용할 수 있는 우선 순위를 부여하고, 상기 하나 이상의 작업 요청들을 처리할 수 있 다. API는 어플리케이션이 커널 또는 미들웨어에서 제공되는 기능을 제어하기 위한 인터페이스로, 예를 들면, 파일 제어, 창 제어, 영상 처리, 또는 문자 제어 등을 위한 적어도 하나의 인터페이스 또는 함수(예: 명령어)를 포함할 수 있다. 또한, 메모리는, 내장 메모리 및 외장 메모리 중 적어도 하나를 포함할 수 있다. 내장 메모리는, 예를 들 면, 휘발성 메모리(예: DRAM, SRAM, 또는 SDRAM 등), 비휘발성 메모리(예: OTPROM(one time programmable ROM), PROM, EPROM, EEPROM, mask ROM, flash ROM, 플래시 메모리, 하드 드라이브, 또는 솔리드 스테이트 드라 이브(SSD) 중 적어도 하나를 포함할 수 있다. 외장 메모리는 플래시 드라이브(flash drive), 예를 들면, CF(compact flash), SD(secure digital), Micro-SD, Mini-SD, xD(extreme digital), MMC(multi-media card) 또는 메모리 스틱 등을 포함할 수 있다. 외장 메모리는 다양한 인터페이스를 통하여 전자 장치와 기능적으 로 또는 물리적으로 연결될 수 있다. 한편, 본 개시의 일 실시예에 따른 메모리는 다양한 인공지능 모델을 저장할 수 있다. 또한, 메모리 는 원본 데이터 및 압축된 데이터를 저장할 수 있다. 또한, 메모리는 원본 데이터를 압축 및 복원 하는 과 정에서 발생하는 에러 데이터를 저장할 수도 있음은 물론이다. 또한, 메모리는 원본 데이터를 압축하기 위 해 필요한, 압축된 중간 데이터, 압축된 인덱스 데이터 및 양자화에 필요한 테이블 데이터를 더 저장할 수 있다. 프로세서는 전자 장치를 제어하기 위한 구성이다. 구체적으로, 프로세서는 복수의 가중치 파라 미터를 포함하는 원본 데이터를 프루닝하고, 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 프루닝에 따 라 값이 변경되지 않은 가중치 파라미터를 판단하고, 프루닝에 따른 값이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를 획득할 수 있다. 프로세서는 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 프루닝에 따라 값이 변경된 가중치 파라미터를 판단하고, 프루닝에 따른 값이 변경된 가중치 파라 미터를 돈케어(don’t care) 파라미터로 치환할 수 있다. 이때, 양자화란, 가중치 파라미터의 크기를 경량화 하기 위한 압축 방법 중 하나이다. 즉, 전자 장치는 가 중치 파라미터의 크기를 경량화 하기 위하여, 기 설정된 비트수의 크기로 변환할 수 있다. 예를 들어, 각각의 가중치 파라미터가 32비트의 크기를 가지는 경우, 전자 장치는 가중치 파라미터의 크기를 경량화 하기 위 하여 기 설정된 3 비트의 크기로 가중치 파라미터를 양자화 할 수 있다. 본 개시에 따른 양자화는 다양한 양자 화 방법이 적용될 수 있으며, 양자화 방법에 따라 본 개시의 기술적 사상이 한정되는 것은 아니다. 한편, 돈케어 값이란, 특정 값으로 정의되지 않은 값을 의미한다. 예를 들어, 특정 값(0 또는 1)과 돈케어 값을 비교하여 참 또는 거짓을 판단하는 경우, 0 또는 1 어떤 값에 대하여도 돈 케어 값은 참의 결과를 가진다. 프루 닝에 의해 0의 값으로 변경된 가중치 파라미터를 돈케어 값으로 치환함으로써, 후술하는 바와 같이, 압축 후보 데이터를 입력값으로 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된 데이터와 상기 획득된 n개 의 제2 데이터를 비교할 때, 획득된 n개의 제2 데이터에 포함된 돈케어 값에 대응되는 출력된 데이터의 파라미 터 값이 어떤 값인지 여부와 무관하게 값이 변경되지 않은 가중치 파라미터 값과 출력된 데이터의 파라미터 값 만을 비교할 수 있는 효과가 있다. 프로세서는 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득할 수 있다. 프로세서는 획득된 n개 의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개의 압축 데이터를 획득할 수 있다. 구체적으로, 프로세서는 기존의 Test data compression 방법을 이용하여 획득된 n개의 제2 데이터 각각을 압축할 수 있다. 한편, 가중치 파라미터를 포함하는 원본 데이터는 매트릭스의 형태로 표현될 수 있다. 예를 들어, 원본 데이터 는 하기와 같은 매트릭스의 형태일 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다만, 원본 데이터의 매트릭스 표현은 상기와 같이 4*4의 형태 뿐만 아니라 다양한 m*m의 행렬로 표현될 수 있 음은 물론이다. 다만, 이하에서는 설명의 편의를 위해 원본 데이터가 4*4의 크기를 가지는 매트릭스의 형태인 경우에 대하여 설명한다. 원본 데이터가 프루닝된 경우, 프루닝된 원본 데이터는 하기와 같이 표현될 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이때, 프로세서는 프루닝된 원본 데이터에 포함된 가중치 파라미터 중, 프루닝에 따라 값이 변경된 가중치 파라미터를 판단하고, 프루닝에 따른 값이 변경된 가중치 파라미터를 돈케어(don't care) 파라미터로 치환할 수 있다. 돈케어 파라미터로 치환한다는 것은, 해당 값이 0 또는 1 중 어느 값이어도 무방하다는 것을 의미한다. 설명의 편의를 위해, 돈케어 파라미터로 처리된 데이터는 x로 표현한다. 돈케어 파라미터로 처리된 매트릭스는 하기와 같을 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "프로세서는 프루닝에 따라 값이 변경되지 않은 가중치 파라미터 및 돈케어 파라미터를 포함하는 제1 데이 터를 n 비트로 양자화 할 수 있다. 예를 들어, 제1 데이터를 3비트로 양자화 한 결과는 하기와 같을 수 있다. 프로세서는 n 비트로 양자화된 데이터를 바탕으로 n개의 제2 데이터를 획득할 수 있다. 이때, n개의 제2 데이터는 n 비트로 양자화된 프루닝에 따른 값이 변경되지 않은 가중치 파라미터의 첫번째 비트값과 n 비트로 양자화된 돈케어 파라미터의 첫번째 비트값으로 구성된 제2-1 데이터와, n 비트로 양자화된 프루닝에 따른 값이 변경되지 않은 가중치 파라미터의 두번째 비트값과 n 비트로 양자화된 상기 돈케어 파라미터의 두번째 비트값으 로 구성된 제2-2 데이터를 포함할 수 있다. 같은 방법으로 프로세서는 제 2-3 데이터 내지 제2-n 데이터를 획득할 수 있다. 예를 들어, 상기와 같이 3비트로 양자화된 경우, 프로세서는 제1 데이터 내지 제3 데이터를 하기와 같이 획득할 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 6, "content": "대응되는 비트별로 데이터를 획득함으로써, 프로세서는 독립된 데이터에 대한 매트릭스를 획득할 수 있다. 데이터에 포함된 각각의 파라미터가 독립적이므로(하나의 파라미터가 다른 파라미터의 값을 결정하는데 영향을 주지 않으므로) 후술하는 바와 같이 Test data Compression 방식으로 데이터를 압축할 수 있게 된다. 한편, 프로세서는 적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디- 컴프레서(Viterbi- decompressor)에 입력하여 출력된 데이터와 획득된 n개의 제2 데이터를 비교하고, 획득된 n개의 제2 데이터와 출력된 데이터가 기 설정된 비율 이상 매칭되는 경우, 출력된 데이터에 대한 입력값을 압축 데이터로 획득 할 수 있다. 이 경우, 압축 데이터는 n개 생성될 것이다. 한편, 프로세서는 n개의 제2 데이터 각각에 포함된 데이터 중, 프루닝에 따라 값이 변경되지 않은 가중치 파라미터에 대응되는 데이터만을 상기 출력 데이터와 비교할 수 있다. 즉, 압축 후보 데이터를 비터비 디 컴프 레서에 입력하여 출력된 값과 n개의 제2 데이터 중 제1 데이터를 비교하는 경우, 프로세서는 돈케어 파라 미터에 해당하는 데이터는 비교하지 않을 수 있다. 예를 들어, 압축 후보 데이터를 비터비 디 컴프레서에 입력하여 출력된 값이 하기 왼편과 같고, 제1 데이터가 하기 오른편과 같은 경우, 프로세서는 제1 데이터의 돈케어 파라미터를 제외한 나머지 파라미터의 값이 압 축 후보 데이터를 비터비 디 컴프레서에 입력하여 출력된 값과 동일하기 때문에, 비터비 디 컴프레서에 입력된 압축 후보 데이터를 제1 압축 데이터로 획득할 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "한편, 프로세서는 프루닝된 원본 데이터로부터 인덱스 데이터를 획득할 수 있다. 이때, 인덱스 데이터는 프루닝에 따라 값이 변경되지 않은 가중치 파라미터의 위치를 찾기 위한 데이터일 수 있다. 예를 들어, 인덱스 데이터가 하기와 같은 경우를 가정할 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 8, "content": "이때, 프로세서는 비터비 알고리즘을 이용하여 인덱스 데이터를 압축할 수 있다. 압축된 인덱스 데이터는 예를 들어 [0 1 1 0]일 수 있다. 구체적으로, 압축된 인덱스 데이터는, 상술한 n개의 압축 데이터를 획득하는 방법을 통해 획득될 수 있다. 예를 들어, 프로세서는 적어도 하나의 압축 후보 데이터를 입력 값으로, 비터비 디-컴프레서(Viterbi-decompressor)에 입력하여 출력된 데이터와 인덱스 데이터를 비교하고, 인덱스 데이터와 출력된 데이터가 기 설 정된 비율 이상 매칭되는 경우, 출력된 데이터에 대한 입력값을 압축된 인덱스 데이터로 획득할 수 있다. 상기와 같은 방법을 통해 프로세서는 원본 데이터를 압축하여, 압축된 n개의 압축된 데이터 및 압축된 인 덱스 데이터를 획득할 수 있다. 프로세서는 필요에 따라 압축된 데이터를 복원할 수 있다. 구체적으로, 프로세서는 압축된 n개의 압축된 데이터 및 압축된 인덱스 데이터를 복원하여 원본 데이터를 복원할 수 있 다. 이때, 프로세서는 돈케어 파라미터를 기 설정된 값(예를 들어 0)으로 치환할 수 있다. 즉, 프로세서 는 프루닝에 따라 값이 변경된 가중치 파라미터를 기 설정된 값으로 치환할 수 있다. 한편, 복원된 원본 데이터와 원래의 원본 데이터에 오차가 존재하면, 프로세서는 n 비트로 양자화된 데이 터를 바탕으로 획득된 n개의 제2 데이터를 입력 값으로 인공 지능 모델에 적용하여 오차를 재학습시킬 수 있다. 이때, 상술한 실시예에서는 비터비 디-컴프레서를 이용하여 n개의 데이터 및 인덱스 데이터를 압축하는 것으로 설명하였으나, 이에 한정되는 것은 아니다. 즉, 프로세서는 비터비 디-컴프레서 이외에도 병렬 연산이 가 능한 다양한 디코더를 이용하여 원본 데이터를 압축할 수 있음은 물론이다. 이때, 프로세서는 주문형 집적 회로(application specific integrated circuit, ASIC), 임베디드 프로세 서, 마이크로프로세서, 하드웨어 컨트롤 로직, 하드웨어 유한 상태 기계(hardware finite state machine, FSM), 디지털 신호 프로세서(digital signal processor, DSP), 중 적어도 하나로 구현될 수 있다. 도시하진 않 았으나, 프로세서는 각 구성들과 통신을 위한 버스(bus)와 같은 인터페이스를 더 포함할 수 있다. 프로세서는, 예를 들면, 운영 체제 또는 응용 프로그램을 구동하여 프로세서에 연결된 다수의 하드웨 어 또는 소프트웨어 구성요소들을 제어할 수 있고, 각종 데이터 처리 및 연산을 수행할 수 있다. 프로세서(12 0)는, 예를 들면, SoC(system on chip) 로 구현될 수 있다. 일 실시예에 따르면, 프로세서는 GPU(graphic processing unit) 및/또는 이미지 신호 프로세서를 더 포함할 수 있다. 프로세서는 다른 구성요소들(예: 비휘발성 메모리) 중 적어도 하나로부터 수신된 명령 또는 데이터를 휘발성 메모리에 로드하여 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 한편, 상술한 실시예에서는 원본 데이터를 압축하는 과정과 압축된 데이터를 복원하는 과정이 하나의 전자 장치 에서 수행되는 것으로 설명하였으나, 이에 한정되는 것은 아니다. 즉, 원본 데이터를 압축하는 전자 장치 와 압축된 데이터를 복원하는 전자 장치는 서로 상이할 수 있다. 예를 들어, 데이터 압축은 서버에서 수행되고, 데이터 복원은 사용자 단말에서 수행될 수 있음은 물론이다. 도 3은 본 개시의 일 실시예에 따른 인덱스 데이터를 압축하는 방법을 설명하기 위한 예시도이다. 도 3에 도시된 바와 같이, 인덱스 데이터의 압축은 비터비 디-컴프레서를 이용하여 수행될 수 있다. 구체적으로 상술한 바와 같이, 프루닝된 원본 데이터가 하기 왼쪽의 행렬의 형태일 경우, 논-제로 데이터를 프루닝된 원본 데이터로 복원하기 위한 인덱스 데이터는 하기 오른쪽 행렬의 형태일 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 9, "content": "이때, 프로세서는 도 3에 도시된 비터비 디-컴프레서의 출력값이 위에서부터 (0 0 0 0), (1 1 0 0), (0 0 1 0), (0 1 0 0)이 되는 비터비 디-컴프레서의 입력값을 획득할 수 있다. 예를 들어, (0 1 1 0)이 비터비 디-컴 프레서에 입력될 때의 출력 값이 위에서부터 (0 0 0 0), (1 1 0 0), (0 0 1 0), (0 1 0 0)일 수 있다. 이때, 프로세서는 입력값인 (0 1 1 0)을 압축된 인덱스 데이터로 판단할 수 있다. 즉, 프로세서는 (0 1 1 0)과 비터비 디-컴프레서를 이용하여 원본 인덱스 데이터를 획득할 수 있으므로, (0 1 0 0)을 압축된 인덱스 데이터로 판단할 수 있다. 나아가, 비터비 디-컴프레서를 이용할 경우, 프로세서 는 인덱스 데이터를 병렬적으로 압축할 수 있다. 도 4는 본 개시의 일 실시예에 따른 논-제로 데이터를 압축하기 위한 방법을 설명하기 위한 예시도이다. 효율적인 압축을 위해, 프로세서는 프루닝된 원본 데이터를 양자화(quantization)하여 데이터의 크기를 줄 일 수 있다. 프루닝된 데이터를 양자화 하는 방법은 다양한 양자화 기술이 적용될 수 있음은 물론이다. 일 실시 예로, 프로세서는 원본 데이터를 기 설정된 비트 단위로 양자화 할 수 있다. 설명의 편의를 위해, 프루닝된 원본 데이터가 3비트로 양자화된 경우를 가정한다. 이때, 3비트로 양자화된 데이 터는 하기와 같을 수 있다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 10, "content": "상술한 바와 같이, 프로세서는 3비트로 양자화된 데이터를 바탕으로 3개의 데이터를 획득할 수 있다. n비 트로 양자화된 경우 n개의 제2 데이터가 획득될 수 있음은 물론이다."}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 11, "content": "프로세서는 획득한 n개의 제2 데이터를 압축할 수 있다. 구체적으로, 프로세서는 기존의 Test data compression 방식을 이용하여 n개의 데이터를 압축할 수 있다. 구체적으로, 기존의 Test data compression 방식에서는 확인하고자 하는 타겟 데이터가 존재하는 경우, 타겟 데 이터 및 타겟 데이터 이외의 돈케어 파라미터를 포함하는 테스트 데이터를 생성할 수 있다. 테스트 장비는 매 클록 주기마다 타겟 데이터에 대응되는 비율의 입력을 입력하여 타겟 데이터를 복원할 수 있다. 즉, Test data compression 방식에서의 테스트 데이터는 돈케어 파라미터가 대부분인 데이터 구조를 가지고 있 으며, 테스트 장비는 매 클록 주기마다 주어진 비율만큼의 데이터를 주기적으로 입력해야 하므로, 병렬적 디코 딩 방식을 사용하게 된다는 장점이 있다. 구체적으로, 도 4에 도시된 바와 같이, 생성된 테스트 데이터는 예를 들어 95%~99%의 돈케어 파라미터와 나머지 돈케어 파라미터가 아닌 데이터로 구성되어 있다. 이때, 테스트 데이터 중 돈케어 파라미터가 아닌 데이터의 크 기의 데이터를 입력 받을 수 있는 디코더를 이용하여 테스트 데이터를 압축할 수 있다. 예를 들어, 테스트 데이 터의 크기가 1000비트이고 돈케어 파라미터가 900비트인 경우, 테스트 장치는 돈케어 파라미터가 아닌 100비트 에 대한 일정 비율의 비트를 입력 값으로 인가(예를 들어, 매 클록마다 10비트씩 10번을 입력값으로 인가하거나, 매 클록마다 1비트씩 100번을 입력값으로 인가)하여 돈케어 파라미터가 아닌 데이터를 정확하게 채 울 수 있다. 즉, 테스트 장치는 테스트 데이터 중 돈케어 파라미터에 대하여는 임의의 값으로 채우지만, 돈케어 파라미터가 아닌 값은 정확하게 채울 수 있다. 본 개시에서는 상기 특징을 만족하는 테스트 장치를 이용하여 n 개의 데이터를 압축할 수 있다. 결론적으로 프로세서는 프루닝에 따라 값이 변경된 가중치 파라미터를 0이 아닌 돈케어 파라미터로 변경하 고, Test data compression 방식을 이용하여 압축을 수행함으로써 압축 효율을 향상시킬 수 있다. 일 실시예로, 테스트 장치에서 사용되는 디코더가 도 3에 도시된 바와 같은 비터비 디-컴프레서인 경우, 4배의 압축 효율을 가지는 데이터 압축 장치를 구현할 수 있다. 전자 장치는 상술한 Test data compression방식을 이용하여 중간 데이터를 압축할 수 있다. 예를 들어, 상 기에서 설명한 바와 같이 전자 장치가 3개의 데이터를 획득한 경우, 획득된 3개의 데이터는 36개의 돈케어 파라미터와 12개의 돈케어 파라미터가 아닌 파라미터를 포함한다. 상술한 방법에 따라, 전자 장치는 12비 트에 대한 일정 비율의 비트를 입력값으로 입력할 수 있다. 예를 들어, 전자 장치는 1비트의 입력값을 12 번 입력하거나, 2비트의 입력값을 6번 입력하거나, 3비트의 입력값을 4번 입력할 수 있다. 결론적으로, 매 클록마다 인가된 입력 값에 대하여 n개의 제2 데이터 중 어느 하나가 출력되었다면, 전자 장치 는 인가된 입력 값을 압축된 n개의 제2 데이터 중 어느 하나로 획득할 수 있다. 결론적으로, 프로세서는 프루닝된 원본 데이터의 위치를 인덱스 데이터(또는 압축된 인덱스 데이터 또는 마스킹 비트 데이터)를 통해 알 수 있으므로, 프루닝된 원본 데이터의 값이 0(즉, 돈케어 파라미터)을 만족하도록 n개의 제2 데이터를 압축할 필요가 없다. 따라서, 프루닝된 원본 데이터의 위치에는 0 또는 1중 어떤 값이 입력되더라도 상관 없으므로(즉, 프루닝에 따라 값이 변경된 가중치 파라미터를 돈케어 파라미터로 치환함으로 써), 압축 효율을 높일 수 있다. 상술한 바와 같이, 원본 데이터를 압축할 때 비터비 디-컴프레서를 사용함으로써, 모든 cycle에서 고정된 압축 률을 가지는 압축 데이터를 생성할 수 있다. 따라서, 메모리 대역폭의 이용률을 향상시킬 수 있으며 압축 과정 에서 병렬 연산이 가능하다는 효과가 존재한다. 나아가, 비터비 디-컴프레서는 플립플롭(Flip/Flop) 및 XOR gate 만으로 구현될 수 있어 전자 장치의 하드웨어가 간단하게 구성될 수 있다는 장점이 있다. 한편, 상술한 방법을 통해 원본 데이터를 압축하는 경우에도, 에러가 발생할 수 있음은 물론이다. 구체적으로, 상술한 Test data compression방식에 의한 압축은 대략 96%~98% 정도의 정확도를 가질 수 있다. 이러한 확률을 encoding efficiency라 하며, 이때의 압축률은 1/(1-pruning rate)에 대응된다. 전자 장치는 발생한 에러 를 딥러닝의 재훈련 과정을 통해 정확도를 향상시키거나, 에러가 발생한 데이터를 메모리에 저장하여 원본 데이터를 복원하는데 사용할 수 있다. 도 5는 본 개시의 일 실시예에 따른 데이터 압축 방법을 설명하기 위한 예시도이다. 도 5에 도시된 바와 같이, 전자 장치는 원본 데이터를 프루닝 할 수 있다. 전자 장치는 프루닝 된 원본 데이터를 바탕으로 인덱스 데이터을 획득할 수 있다. 구체적으로, 전자 장치는 프루닝 된 원본 데이터 중 프루닝에 따라 값이 변경되지 않은 가중치 파라미터의 위치를 찾기 위한 인덱스 데이터 를 획득할 수 있다. 전자 장치는 인덱스 데이터을 비터비 디-컴프레서를 이용하여 압축할 수 있 다. 한편, 전자 장치는 프루닝된 원본 데이터을 3비트로 양자화 할 수 있다. 전자 장치는 프루닝된 원본 데이터을 n비트 단위로 양자화 할 수 있음은 물론이다. 이때, 프루닝에 따라 값이 변경된 가중치 파 라미터는 돈케어 파라미터로 치환될 수 있다. 구체적으로 프루닝에 따라 값이 변경된 가중치 파라미터는 3 비트 로 양자화 되기 전에 치환될 수 있다. 다만, 이에 한정되는 것은 아니며, 프루닝에 따라 값이 변경된 가중치 파 라미터는 3비트로 양자화 된 후 치환 될 수도 있음은 물론이다. 전자 장치는 3비트로 양자화된 데이터를 바탕으로 3개의 데이터를 획득할 수 있다. 구체적으로, 전자 장치는 3비트로 양자화된 데이터에 포함된 3비트로 구성된 각각의 파라미터 중 첫번째 비트값들로 구 성된 제1 데이터(560-1), 3비트로 양자화된 데이터에 포함된 3비트로 구성된 각각의 파라미터 중 두번째 비트값들로 구성된 제2 데이터(560-2) 및 3비트로 양자화된 데이터에 포함된 3비트로 구성된 각각의 파라 미터 중 세번째 비트값들로 구성된 제3 데이터(560-1)를 획득할 수 있다. 전자 장치는 획득된 제1 데이터 내지 제3 데이터(560-1 내지 560-3) 각각을, 비터비 디-컴프레서를 이용하 여 압축할 수 있다. 결론적으로, 전자 장치는 상술한 압축 방법을 통해 압축된 인덱스 데이터, 압축된 제1 데이터(570- 1), 압축된 제2 데이터(570-2) 및 압축된 제3 데이터(570-3)를 획득할 수 있다. 도 6 및 도 7은 본 개시의 일 실시예에 따른 원본 데이터를 복원하는 방법을 설명하기 위한 예시도이다. 구체적으로, 프로세서는 메모리로부터 압축된 n개의 데이터를 획득하고, 압축된 n개의 제2 데이터를 비터비 디-컴프레서에 입력할 수 있다. 프로세서는 비터비 디-컴프레서를 통해 출력된 데이터 및 인덱스 데이터(또는 마스킹 비트 데이터)를 이용하여 원본 데이터를 복원할 수 있다. 이때, 인덱스 데이터(또는 마스킹 비트 데이터)는 압축된 인덱스 데이터를 통해 생성된 데이터이다. 예를 들어, 인덱스 데이터는 압축된 인덱스 데이터를 비터비 디-컴프레서에 입력하여 출력된 결과일 수 있다. 인덱스 데이터는 프루닝에 따라 값이 변경된 가중치 파라미터와 프루닝에 따라 값이 변경되지 않은 가중치 파라미터를 구분하기 위한 데이터이다. 즉, 전자 장치는 인덱스 데이터를 이용하여 프루닝에 따라 값이 변경된 가중치 파라미터의 값을 0으로 치환할 수 있 다. 구체적으로, 전자 장치는 출력값과 인덱스 데이터를 연산하여 데이터를 복원할 수 있다. 결론적으로, 압축된 데이터는 비터비 디-컴프레서를 통해 1차적으로 복원되고, 비터비 디-컴프레서를 통해 복원 된 데이터 중 프루닝에 따라 값이 변경된 가중치 파라미터는 마스킹 비트를 이용하여 0의 값으로 치환되어 원본데이터와 동일한 데이터가 복원될 수 있다. 한편, 도 6에 도시된 회로 구조는 압축 과정에서 1비트로 양자화 된 경우의 압축된 데이터를 복원하는 방법을 설명한 예시도이다. 즉, 압축 과정에서 양자화가 몇 비트로 수행되었는지에 다라, 원본 데이터를 복원하는 회로 구조가 달라질 수 있다. 예를 들어 원본 데이터가 3 비트로 양자화 된 경우, 원본 데이터를 복원하기 위한 프로 세서는 도 7과 같이 구현될 수 있다. 한편, 상술한 실시예에서는 데이터의 압축 및 복원을 하나의 전자 장치가 수행하는 것으로 설명하였으나, 이에 한정되는 것은 아니다. 즉, 전자 장치는 원본 데이터를 압축하기 위한 전자 장치 또는 압축된 데이터를 복 원 하기 위한 전자 장치 중 어느 하나일 수 있다. 도 8은 본 개시의 일 실시예에 따른 데이터의 압축 방법을 설명하기 위한 흐름도이다. 먼저, 전자 장치는 복수의 가중치 파라미터를 포함하는 원본 데이터를 프루닝 할 수 있다. (S810). 이때 원본 데이터는 딥러닝에 사용되는 가중치 파라미터를 포함하는 데이터일 수 있다. 구체적으로, 원본 데이터는 가중치 파라미터의 크기 값에 대한 데이터일 수 있다. 전자 장치는 프루닝된 원본 데이터 중, 프루닝에 따라 값이 변경되지 않은 가중치 파라미터의 위치 정보를 포함하는 인덱스 데이터를 획득할 수 있다. (S820). 전자 장치는 획득된 인덱스 데이터를 비터비 알고리즘 을 이용하여 압축할 수 있다. 전자 장치는 프루닝된 원본 데이터 중, 프루닝에 따라 값이 변경된 가중치 파라미터를 돈케어 파라미터로 치환할 수 있다. (S830). 전자 장치는 치환된 데이터를 n 비트로 양자화 하고, n 비트로 양자화된 데이터를 바당으로 n개의 제2 데 이터를 획득할 수 있다. (S840) 전자 장치는 획득된 n개의 제2 데이터 각각을 비터비 알고리즘에 적용하여 n개의 압축 데이터를 획득할 수 있다(S850). 구체적으로, 전자 장치는 Test data compression 방법을 이용하여 프루닝에 따라 값이 변경되 지 않은 가중치 파라미터를 복원할 수 있는 입력 값을 압축된 데이터로 판단할 수 있다. 전자 장치는 압축된 데이터를 비터비 디-컴프레서에 입력하여 원본 데이터를 복원할 수 있으며, 복원된 데 이터와 원본 데이터에 오차가 존재하는 경우, 딥러닝 기반의 재학습을 통해 오류를 수정할 수 있다. 전자 장치 는 재학습된 데이터를 다시 양자화 하여 상술한 압축 과정을 수행할 수 있음은 물론이다. 도 9는 본 개시의 일 실시예에 따른 데이터 복원 방법을 설명하기 위한 흐름도이다. 전자 장치는 도 8에 설명된 실시예에 따라 압축된 n개의 제2 데이터 및 압축된 인덱스 데이터를 수신할 수 있다(S910). 전자 장치는 압축된 n개의 제2 데이터 각각을 비터비 디-컴프레서에 적용하여 원본 데이터 복원을 위한 인 덱스 데이터를 획득할 수 있다(S920). 전자 장치는 n개의 압축된 데이터 각각을 비터비 디-컴프레서에 적용하여 원본 데이터 복원을 위한 n개의 제2 데이터를 획득할 수 있다(S930). 전자 장치는 원본 데이터 복원을 위한 인덱스 데이터 및 원본 데이터 복원을 위한 n개의 압축 데이터를 연 상하여 프루닝된 원본 데이터를 복원할 수 있다(S940). 도 8 및 도 9는 데이터를 압축하는 전자 장치와 데이터를 복원하는 전자 장치가 별도의 독립된 전자 장치인 경 우로 한정하여 설명하였다. 이 경우, 데이터 압축을 위한 전자 장치는 저장 공간 및 연산량이 큰 서버일 수 있 으며, 데이터 복원을 위한 전자 장치는 서버에 비해 상대적으로 저장 공간 및 연산량이 작은 사용자 단말일 수 있다. 다만, 데이더 압축 및 복원은 하나의 전자 장치에서 수행될 수 있음은 물론이다. 한편, 본 개시의 실시 예를 구성하는 모든 구성 요소들이 하나로 결합하거나 결합하여 동작하는 것으로 설명되 었다고 해서, 본 발명이 반드시 이러한 실시 예에 한정되는 것은 아니다. 즉, 본 개시의 목적 범위 안에서라면,그 모든 구성 요소들이 하나 이상으로 선택적으로 결합하여 동작할 수도 있다. 또한, 그 모든 구성요소들이 각 각 하나의 독립적인 하드웨어로 구현될 수 있지만, 각 구성 요소들의 그 일부 또는 전부가 선택적으로 조합되어 하나 또는 복수 개의 하드웨어에서 조합된 일부 또는 전부의 기능을 수행하는 프로그램 모듈을 갖는 컴퓨터 프 로그램으로서 구현될 수도 있다. 다양한 실시예에 따른 장치(예: 모듈들 또는 그 기능들) 또는 방법(예: 동작들)의 적어도 일부는 프로그램 모듈 의 형태로 컴퓨터로 판독 가능한 비일시적 판독 가능 기록매체(non-transitory computer readable media)에 저 장된 명령어로 구현될 수 있다. 명령어가 프로세서(예: 프로세서)에 의해 실행될 경우, 프로세서가 상기 명령어에 해당하는 기능을 수행할 수 있다. 여기서, 프로그램은 컴퓨터가 읽을 수 있는 비일시적 기록매체에 저장되어 컴퓨터에 의하여 읽혀지고 실행됨으 로써, 본 개시의 실시 예를 구현할 수 있다. 여기서 비일시적 판독 가능 기록매체란, 반영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미할 뿐만 아니라 레지스터, 캐쉬, 버퍼 등을 포함하며, 신호(signal), 전류(current) 등과 같은 전송 매개체는 포함하지 않는다. 구체적으로, 상술한 프로그램들은 CD, DVD, 하드 디스크, 블루레이 디스크, USB, 내장 메모리, 메모리 카드, ROM 또는 RAM 등과 같은 비일시적 판독가능 기록매체에 저장되어 제공될 수 있다. 또한, 개시된 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)으로 제공될 수 있다. 컴퓨터 프로그램 제품은 S/W 프로그램, S/W 프로그램이 저장된 컴퓨터로 읽을 수 있는 저장 매체 또는 판매자 및 구매자 간에 거래되는 상품을 포함할 수 있다. 예를 들어, 컴퓨터 프로그램 제품은 전자 장치 또는 전자 장치의 제조사 또는 전자 마켓(예, 구글 플레이 스토 어, 앱 스토어)을 통해 전자적으로 배포되는 S/W 프로그램 형태의 상품(예, 다운로더블 앱)을 포함할 수 있다. 전자적 배포를 위하여, S/W 프로그램의 적어도 일부는 저장 매체에 저장되거나, 임시적으로 생성될 수 있다. 이 경우, 저장 매체는 제조사 또는 전자 마켓의 서버, 또는 중계 서버의 저장매체가 될 수 있다. 이상에서는 본 개시의 실시 예에 대하여 도시하고 설명하였지만, 본 발명은 상술한 특정의 실시 예에 한정되지"}
{"patent_id": "10-2018-0137595", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 12, "content": "아니하며, 청구범위에 청구하는 본 발명의 요지를 벗어남이 없이 당해 발명이 속하는 기술분야에서 통상의 지식 을 가진 자에 의해 다양한 변형 실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 발명의 기술적 사상이나 전망으로부터 개별적으로 이해되어서는 안 될 것이다."}
{"patent_id": "10-2018-0137595", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른 종래의 압축 방법을 설명하기 위한 예시도이다. 도 2는 본 개시의 일 실시예에 따른 전자 장치의 구성을 도시한 블록도이다. 도 3은 본 개시의 일 실시예에 따른 인덱스 데이터를 압축하는 방법을 설명하기 위한 예시도이다. 도 4는 본 개시의 일 실시예에 따른 논-제로 데이터를 압축하기 위한 방법을 설명하기 위한 예시도이다. 도 5는 본 개시의 일 실시예에 따른 데이터 압축 방법을 설명하기 위한 예시도이다. 도 6 및 도 7은 본 개시의 일 실시예에 따른 원본 데이터를 복원하는 방법을 설명하기 위한 예시도이다. 도 8은 본 개시의 일 실시예에 따른 데이터의 압축 방법을 설명하기 위한 흐름도이다. 도 9는 본 개시의 일 실시예에 따른 데이터 복원 방법을 설명하기 위한 흐름도이다."}
