{"patent_id": "10-2024-0123392", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0137539", "출원번호": "10-2024-0123392", "발명의 명칭": "인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램", "출원인": "주식회사 나니아랩스", "발명자": "김은지"}}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에 의해 수행되는 방법에 있어서,제품에 대한 설계를 생성하는 과정;상기 설계의 성능을 예측하는 과정; 및 상기 설계 중 최적 설계를 획득하는 과정을 포함하며, 상기 설계 중 최적 설계를 획득하는 과정은, 사용자가 원하는 타겟 제품의 성능 정보에 관한 제1 타겟 성능을 획득하는 과정; 상기 제1 타겟 성능을 역 설계 모델의 입력으로 제1 최적 설계안을 획득하고, 상기 제1 최적 설계안을 순 설계모델의 입력으로 상기 제1 타겟 성능과 동일한 제2 타겟 성능이 예측되도록 학습하는 과정;상기 제1 최적 설계의 불확실성을 고려한 적응형 샘플링으로 선정된 추가 샘플링된 설계안의 추가 해석 결과를통해 상기 설계 성능 예측 모델을 재 학습함으로써, 제2 최적 설계안을 획득하는 과정을 포함하는, 인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 제품에 대한 설계를 생성하는 과정은, 제1 참조 설계에 위상 최적화를 적용하여 제1 신규 설계를 획득하는 과정;상기 제1 참조 설계에 파라메트릭 설계를 적용하여 제2 신규 설계를 획득하는 과정;상기 제1 신규 설계에 상기 파라메트릭 설계를 적용하여 상기 제2 신규 설계를 추가로 획득하는 과정; 및상기 제2 신규 설계에 상기 위상 최적화를 적용하여 상기 제1 신규 설계를 추가로 획득하는 과정을 포함하는,인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 제품에 대한 설계를 생성하는 과정은, 설계 생성 모델을 이용하여 제1 신규 설계와 제2 신규 설계를 하나의 잠재공간에 매핑하는 과정; 및상기 설계 생성 모델로 생성된 제3 신규 설계를 상기 제2 참조 설계로 사용하는 과정을 포함하며, 상기 제1 신규 설계와 상기 제2 신규 설계는 서로 다른 표현 방식 및 포멧을 가질 수 있는 인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 설계의 성능을 예측하는 과정은, 성능 해석 모듈을 이용하여 상기 설계를 해석하는 과정;상기 설계의 해석 결과에 기초해 설계 성능 예측 모델을 학습시키는 과정;상기 설계 성능 예측 모델에 기초해 상기 설계의 성능을 예측하는 과정; 공개특허 10-2024-0137539-3-상기 예측된 설계 성능이 미리 설정된 기준 값을 만족하는 경우에 상기 학습된 설계 성능 예측 모델을 제공하는과정; 및상기 예측된 설계 성능이 미리 설정된 기준 값을 만족하지 않는 경우 적응형 샘플링을 통해 상기 설계에 대한추가 해석 결과를 수집하고, 상기 수집된 추가 해석 결과에 기초해 상기 설계 성능 예측 모델을 재 학습시키는과정을 포함하는, 인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 최적 설계를 평가하는 과정;상기 최적 설계 중 일부를 설계 데이터로 축적하는 과정;상기 설계 데이터를 분석하는 과정; 및상기 설계 데이터를 추천하는 과정을 더 포함하는, 인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 제1 타겟 성능을 역 설계 모델의 입력으로 제1 최적 설계안을 획득하고, 상기 제1 최적 설계안을 순 설계모델의 입력으로 상기 제1 타겟 성능과 동일한 제2 타겟 성능이 예측되도록 학습하는 과정은, 사용자 선호도 모델에서 예측한 설계에 대한 사용자 예측 선호도를 추가적으로 상기 제1 타겟 성능과 함께 상기역 설계 모델에 입력으로 상기 제1 최적 설계안을 획득하는 과정을 포함하는, 인공지능 기반 생성적 설계 방법."}
{"patent_id": "10-2024-0123392", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "프로세서; 네트워크 인터페이스; 메모리; 및 상기 메모리에 로드(load)되고, 상기 프로세서에 의해 실행되는 컴퓨터 프로그램을 포함하되,상기 컴퓨터 프로그램은,제품에 대한 설계를 생성하는 인스트럭션;상기 설계의 성능을 예측하는 인스트럭션; 및 상기 설계 중 최적 설계를 획득하는 인스트럭션을 포함하며, 상기 설계 중 최적 설계를 획득하는 인스트럭션은, 사용자가 원하는 타겟 제품의 성능 정보에 관한 제1 타겟 성능을 획득하는 과정; 상기 제1 타겟 성능을 역 설계 모델의 입력으로 제1 최적 설계안을 획득하고, 상기 제1 최적 설계안을 순 설계모델의 입력으로 상기 제1 타겟 성능과 동일한 제2 타겟 성능이 예측되도록 학습하는 과정;상기 제1 최적 설계의 불확실성을 고려한 적응형 샘플링으로 선정된 추가 샘플링된 설계안의 추가 해석 결과를통해 상기 설계 성능 예측 모델을 재 학습함으로써, 제2 최적 설계안을 획득하는 과정을 포함하는, 인공지능 기반 생성적 설계 장치."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명의 실시예는, 컴퓨팅 장치에 의해 수행되는 방법에 있어서, 제품에 대한 설계를 생성하는 과정; 상기 설 계의 성능을 예측하는 과정; 및 상기 설계 중 최적 설계를 획득하는 과정을 포함하는, 인공지능 기반 생성적 설 계 방법을 제공할 수 있다."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램에 관한 것이다."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "생성적 설계(generative design)는 인공지능 소프트웨어가 제안하는 설계 기술이다. 생성적 설계 기술은 제품개 발 초기 단계부터 고객의 요구 조건을 만족하는 최적의 설계안들을 컴퓨터로 자동생성하는 것을 특징으로 한다. 특히, 기능 및 성능이 중요한 제품에서 주로 사용되는 설계 기술인데, 이 방식을 도입하면 고객의 다양한 수요 에 대응하고 시제품 재검토 시간을 절약할 수 있어 납기를 단축할 수 있다. 종래의 생성적 설계 기술은 위상최적화 기술을 주로 이용하였으나, 위상최적화 기술은 과거 설계 데이터를 활용 하지 못하고, 외적 심미성이 뛰어난 설계를 하지 못하고, 고객의 선호도에 무관한 설계를 한다는 문제점을 가지 고 있다. 선행기술문헌 특허문헌 (특허문헌 0001) 등록특허공보 등록번호 제10-2079027호 (딥러닝 기술을 이용한 위상최적설계 방법)"}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예는, 인공지능을 기반으로 제품의 설계를 생성하고, 설계의 성능을 해석하고, 설계의 성능을 학 습 데이터로 학습한 설계 성능 예측 및 최적설계 모델을 제공할 수 있는, 인공지능 기반 생성적 설계 방법, 장 치 및 컴퓨터프로그램을 제공하는데 목적을 가진다. 본 발명의 실시예는, 소량의 참조 설계를 이용하여 인공지능 기반으로 제품에 적용 가능한 복수의 제품 설계안 을 자동으로 생성할 수 있는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공하는데 목적을 가진다. 본 발명의 실시예는, 사용자가 요구하는 제품의 타켓 성능에 대응하는 제품의 최적 설계안을 모델링하여 제공하 고, 최적 설계안의 성능을 해석한 해결 결과를 제공할 수 있는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨 터프로그램을 제공하는데 목적을 가진다."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 실시예는, 컴퓨팅 장치에 의해 수행되는 방법에 있어서, 제품에 대한 설계를 생성하는 과정; 상기 설 계의 성능을 예측하는 과정; 및 상기 설계 중 최적 설계를 획득하는 과정을 포함하는, 인공지능 기반 생성적 설 계 방법을 제공할 수 있다. 본 발명의 실시예에서, 상기 제품에 대한 설계를 생성하는 과정은, 제1 참조 설계에 위상 최적화를 적용하여 제 1 신규 설계를 획득하는 과정; 상기 제1 참조 설계에 파라메트릭 설계를 적용하여 제2 신규 설계를 획득하는 과 정; 상기 제1 신규 설계에 상기 파라메트릭 설계를 적용하여 상기 제2 신규 설계를 추가로 획득하는 과정; 및 상기 제2 신규 설계에 상기 위상 최적화를 적용하여 상기 제1 신규 설계를 추가로 획득하는 과정을 포함할 수 있다. 본 발명의 실시예에서, 상기 제품에 대한 설계를 생성하는 과정은, 설계 생성 모델을 이용하여 제1 신규 설계와 제2 신규 설계를 하나의 잠재공간에 매핑하는 과정; 및 상기 설계 생성 모델로 생성된 제3 신규 설계를 상기 제 2 참조 설계로 사용하는 과정을 포함하며, 상기 제1 신규 설계와 상기 제2 신규 설계는 서로 다른 표현 방식 및 포멧을 가질 수 있다. 본 발명의 실시예에서, 상기 설계의 성능을 예측하는 과정은, 성능 해석 모듈을 이용하여 상기 설계를 해석하는 과정; 상기 설계의 해석 결과에 기초해 설계 성능 예측 모델을 학습시키는 과정; 상기 설계 성능 예측 모델에 기초해 상기 설계의 성능을 예측하는 과정; 상기 예측된 설계 성능이 미리 설정된 기준 값을 만족하는 경우에 상기 학습된 설계 성능 예측 모델을 제공하는 과정; 및 상기 예측된 설계 성능이 미리 설정된 기준 값을 만족하 지 않는 경우 적응형 샘플링을 통해 상기 설계에 대한 추가 해석 결과를 수집하고, 상기 수집된 추가 해석 결과 에 기초해 상기 설계 성능 예측 모델을 재 학습시키는 과정을 포함할 수 있다. 본 발명의 실시예에서, 상기 설계 중 최적 설계를 획득하는 과정은, 사용자가 원하는 타겟 제품의 성능 정보에 관한 제1 타겟 성능을 획득하는 과정; 상기 제1 타겟 성능을 역 설계 모델의 입력으로 제1 최적 설계안을 획득하고, 상기 제1 최적 설계안을 순 설계 모델의 입력으로 상기 제1 타겟 성능과 동일한 제2 타겟 성능이 예측되 도록 학습하는 과정; 상기 제1 최적 설계의 불확실성을 고려한 적응형 샘플링으로 선정된 추가 샘플링된 설계안 의 추가 해석 결과를 통해 상기 설계 성능 예측 모델을 재 학습함으로써, 제2 최적 설계안을 획득하는 과정을 포함할 수 있다. 본 발명의 실시예는, 상기 최적 설계를 평가하는 과정; 상기 최적 설계 중 일부를 설계 데이터로 축적하는 과정; 상기 설계 데이터를 분석하는 과정; 및 상기 설계 데이터를 추천하는 과정을 더 포함하는, 인공지능 기반 생성적 설계 방법을 제공할 수 있다. 본 발명의 실시예에서, 상기 제1 타겟 성능을 역 설계 모델의 입력으로 제1 최적 설계안을 획득하고, 상기 제1 최적 설계안을 순 설계 모델의 입력으로 상기 제1 타겟 성능과 동일한 제2 타겟 성능이 예측되도록 학습하는 과 정은, 사용자 선호도 모델에서 예측한 설계에 대한 사용자 예측 선호도를 추가적으로 상기 제1 타겟 성능과 함 께 상기 역 설계 모델에 입력으로 상기 제1 최적 설계안을 획득하는 과정을 포함할 수 있다. 본 발명의 실시예는, 프로세서; 네트워크 인터페이스; 메모리; 및 상기 메모리에 로드(load)되고, 상기 프로세 서에 의해 실행되는 컴퓨터 프로그램을 포함하되, 상기 컴퓨터 프로그램은, 제품에 대한 설계를 생성하는 인스 트럭션; 상기 설계의 성능을 예측하는 인스트럭션; 및 상기 설계 중 최적 설계를 획득하는 인스트럭션을 포함하 는, 인공지능 기반 생성적 설계 장치를 제공할 수 있다. 본 발명의 실시예는, 컴퓨팅 장치와 결합되어, 제품에 대한 설계를 생성하는 과정; 상기 설계의 성능을 예측하 는 과정; 및 상기 설계 중 최적 설계를 획득하는 과정을 실행시키기 위하여 컴퓨터로 판독가능한 기록매체에 저 장된, 인공지능 기반 생성적 설계 컴퓨터 프로그램을 제공할 수 있다."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예는, 2D/3D 딥러닝 기반 생성적 설계 기술 기반으로 2D/3D 설계 데이터의 생성 기술을 제공하는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다. 본 발명의 실시예는, 설계 프로세스에서 인공지능 모델을 이용하여 공학적인 3D 설계 데이터의 대량 생성 시스 템을 구축하고, 실시간 최적 설계가 가능한 2D/3D 딥러닝 기반 역 설계 기술을 제공하는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다. 본 발명의 실시예는, 2D/3D 설계 데이터 세트에 대한 차원축소 피처 추출 및 클러스터링 기술 확보를 통한 설계 추천 시스템을 구축하는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다. 본 발명의 실시예는, 인공지능 기반 설계 검증 및 평가의 솔루션을 제공할 수 있는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다. 본 발명의 실시예는, 소량의 설계 데이터를 이용하여 인공지능 기반으로 다량의 설계 데이터를 생성할 수 있는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다. 본 발명의 실시예는, 유기적으로 연결된 설계 생성 인공지능 모델, 설계 평가 인공지능 모델, 설계 추천 인공지 능 모델을 제공함으로써, 제품의 설계에서 제작까지 이용 가능한 풀 스택(Full Stack) 기술을 제공할 수 있는, 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로그램을 제공할 수 있다."}
{"patent_id": "10-2024-0123392", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 실시예들은 다양한 변경들을 가할 수 있으므로 실시예들을 도면에 예시하고 본 명세서에서 상세하게 설명하고자 한다. 그러나, 이는 본 발명의 실시예들을 특정한 형태들로 한정하려는 것이 아니며, 본 발명의 사 상 및 기술 범위에 포함되는 모든 변경, 균등물, 또는 대체물을 포함한다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 명세서 전체에 걸쳐 동일한 도면 부호는 동일한 구성 요소를 지칭하며, \"및/또는\"은 언급된 구성요소들의 각각 및 하나 이상의 모든 조합을 포함한다. 비록 \"제1\", \"제2\" 등이 다양한 구성요소들을 서술하기 위해서 사용되나, 이들 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단 지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있음은 물론이다. 본 명세서에서 A, B, C, 및 D 중 적어도 하나를 포함한다는 의미는 A, B, C, 및 D 중 1개 혹은 2개 이상의 다양한 조합을 모두 포함하는 것으로 한다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야의 통상의 기술자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또한, 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 명세서에서 사용되는 \"부\" 또는 \"모듈\"이라는 용어는 소프트웨어, FPGA 또는 ASIC과 같은 하드웨어 구성요소를 의미하며, \"부\" 또는 \"모듈\"은 어떤 역할들을 수행한다. 그렇지만 \"부\" 또는 \"모듈\"은 소프트웨어 또는 하드웨 어에 한정되는 의미는 아니다. \"부\" 또는 \"모듈\"은 어드레싱할 수 있는 저장 매체에 있도록 구성될 수도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서 \"부\" 또는 \"모듈\"은 소 프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성 요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라이버들, 펌 웨어, 마이크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 및 변수들을 포함한다. 구성요소들과 \"부\" 또는 \"모듈\"들 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 \"부\" 또는 \"모듈\"들로 결합되거나 추가적인 구성요소들과 \"부\" 또는 \"모듈\"들로 더 분리될 수 있다. 공간적으로 상대적인 용어인 \"아래(below)\", \"아래(beneath)\", \"하부(lower)\", \"위(above)\", \"상부(upper)\" 등 은 도면에 도시되어 있는 바와 같이 하나의 구성요소와 다른 구성요소들과의 상관관계를 용이하게 기술하기 위 해 사용될 수 있다. 공간적으로 상대적인 용어는 도면에 도시되어 있는 방향에 더하여 사용시 또는 동작시 구성 요소들의 서로 다른 방향을 포함하는 용어로 이해되어야 한다. 예를 들어, 도면에 도시되어 있는 구성요소를 뒤 집을 경우, 다른 구성요소의 \"아래(below)\" 또는 \"아래(beneath)\"로 기술된 구성요소는 다른 구성요소의 \"위 (above)\"에 놓여질 수 있다. 따라서, 예시적인 용어인 \"아래\"는 아래와 위의 방향을 모두 포함할 수 있다. 구성 요소는 다른 방향으로도 배향될 수 있으며, 이에 따라 공간적으로 상대적인 용어들은 배향에 따라 해석될 수 있 다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법, 장치 및 컴퓨터프로 그램을 상세하게 설명한다. 도 1은 본 발명의 일 실시예에 따른 인공지능 기반 생성적 설계 장치의 하드웨어 구성도이다. 도 1을 참조하면, 본 발명의 일 실시예에 따른 인공지능 기반 생성적 설계 장치(이하, \"컴퓨팅 장치 \")는 하나 이상의 프로세서, 프로세서에 의하여 수행되는 컴퓨터 프로그램을 로드(Load)하 는 메모리, 통신 인터페이스 및 컴퓨터 프로그램을 저장하는 스토리지를 포함할 수 있다. 여기서, 본 발명의 일 실시예에 따른 인공지능 기반 생성적 설계 장치는 도 1에 도시된 구성요소들에 의해 한정될 것은 아니며, 다른 범용적인 구성요소들을 더 포함할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 적어도 하나의 프로세서를 포함하는 모든 종류의 하드웨어 장치를 의미하는 것이고, 실시 예에 따라 해당 하드웨어 장치에서 동작하는 소프트웨어적 구성도 포괄하는 의미로서 이 해될 수 있다. 컴퓨팅 장치는 서버, 스마트폰, 태블릿 PC, 데스크톱, 노트북 및 각 장치에서 구동되는 사용자 클라이언트 및 애플리케이션을 모두 포함하는 의미로서 이해될 수 있으며, 또한 이에 제한되는 것은 아니다. 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 각 과정들은 컴퓨팅 장치에 의하여 수행되는 것으로 설명되나, 각 과정의 주체는 이에 제한되는 것은 아니며, 실시 예에 따라 각 과정들의 적어도 일부가 서 로 다른 컴퓨팅 장치에서 수행될 수도 있다. 프로세서는 컴퓨팅 장치의 각 구성의 전반적인 동작을 제어한다. 프로세서는 CPU(Central Processing Unit), MPU(Micro Processor Unit), MCU(Micro Controller Unit), GPU(Graphic Processing Unit) 또는 본 발명의 기술 분야에 잘 알려진 임의의 형태의 프로세서를 포함하여 구성될 수 있다. 또한, 프로세서는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법을 실행하기 위한 적어도 하나 의 애플리케이션 또는 프로그램에 대한 연산을 수행할 수 있으며, 컴퓨팅 장치는 하나 이상의 프로세서를 구비할 수 있다. 또한, 프로세서는 내부에서 처리되는 신호(또는, 데이터)를 일시적 및/또는 영구적으로 저장하는 램(RAM: Random Access Memory, 미도시) 및 롬(ROM: Read-Only Memory, 미도시)을 더 포함할 수 있다. 또한, 프로세서 는 그래픽 처리부, 램 및 롬 중 적어도 하나를 포함하는 시스템온칩(SoC: system on chip) 형태로 구현될 수 있다. 메모리는 각종 데이터, 명령 및/또는 정보를 저장한다. 메모리는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법을 실행하기 위하여 스토리지로부터 컴퓨터 프로그램을 로드할 수 있다. 메모 리에 컴퓨터 프로그램이 로드되면, 프로세서는 컴퓨터 프로그램을 구성하는 하나 이상의 인스트럭션들을 실행함으로써 상기 방법을 수행할 수 있다. 메모리는 RAM과 같은 휘발성 메모리로 구현될 수 있을 것이나, 본 개시의 기술적 범위가 이에 한정되는 것은 아니다. 버스(BUS)는 컴퓨팅 장치의 구성 요소 간 통신 기능을 제공한다. 버스(BUS)는 주소 버스(address Bus), 데 이터 버스(Data Bus) 및 제어 버스(Control Bus) 등 다양한 형태의 버스로 구현될 수 있다. 통신 인터페이스는 컴퓨팅 장치의 유무선 인터넷 통신을 지원한다. 또한, 통신 인터페이스는 인 터넷 통신 외의 다양한 통신 방식을 지원할 수도 있다. 예를 들어, 통신 인터페이스는, 근거리 통신, 이동 통신, 방송 통신 방식 중 적어도 하나를 지원할 수 있다. 이를 위해, 통신 인터페이스는 본 발명의 기술 분야에 잘 알려진 통신 모듈을 포함하여 구성될 수 있다. 몇몇 실시예에서, 통신 인터페이스는 생략될 수 도 있다. 스토리지는 컴퓨터 프로그램을 비 임시적으로 저장할 수 있다. 스토리지는 ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모 리 등과 같은 비휘발성 메모리, 하드 디스크, 착탈형 디스크, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터로 읽을 수 있는 기록 매체를 포함하여 구성될 수 있다. 컴퓨터 프로그램은 메모리에 로드될 때 프로세서로 하여금 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법을 수행하도록 하는 하나 이상의 인스트럭션들을 포함할 수 있다. 즉, 프로세서는 상기 하나 이상의 인스트럭션들을 실행함으로써, 본 발명의 다양한 실시예에 따른 상기 방법을 수행할 수 있다.본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 과정들은 하드웨어로 직접 구현되거나, 하드웨어에 의해 실행되는 소프트웨어 모듈로 구현되거나, 또는 이들의 결합에 의해 구현될 수 있다. 소프트웨어 모듈은 RAM(Random Access Memory), ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리(Flash Memory), 하드 디스크, 착탈형 디스크, CD-ROM, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터 판독가능 기록매체에 상주할 수도 있다. 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 과정들은 하드웨어인 컴퓨터와 결합되어 실행되기 위해 프로그램(또는 애플리케이션)으로 구현되어 매체에 저장될 수 있다. 본 발명의 구성 요소들은 소프트웨어 프로그래밍 또는 소프트웨어 요소들로 실행될 수 있으며, 이와 유사하게, 실시 예는 데이터 구조, 프로세스들, 루틴들 또는 다른 프로그래밍 구성들의 조합으로 구현되는 다양한 알고리즘을 포함하여, C, C++, 자바(Java), 어셈블러(assembler) 등과 같은 프로그래밍 또는 스크립팅 언어로 구현될 수 있다. 기능적인 측면들은 하나 이 상의 프로세서들에서 실행되는 알고리즘으로 구현될 수 있다. 이하에서, 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에 대해 설명한다. 도 2는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 순서도이다. 도 3은 본 발명의 실시예에 따 른 인공지능 기반 생성적 설계 방법의 개념 블록도이다. 도 2 및 도 3을 참조하면, 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법은, 설계를 생성하는 과정 (S100), 설계 성능을 예측하는 과정(S200), 최적 설계안을 획득하는 과정(S300), 최적 설계안을 평가하는 과정 (S400), 설계 데이터를 축적하는 과정(S500), 설계 데이터를 분석하는 과정(S600), 설계 데이터를 추천하는 과 정(S700) 중 적어도 하나를 포함할 수 있다. 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법은, 인공지능에 기반하여 제품의 설계를 생성하고, 평 가하고, 추천할 수 있다. 여기서, 제품은 형상이나 외형을 가지는 어떠한 구조물도 될 수 있다. 예로, 자동차, 자동차의 바퀴, 자동차의 바퀴 휠, 시계, 스마트폰, 다리, 건축물 등이 있다. 설명의 편의를 위해, 본 명세서에서는 자동차의 바퀴 휠을 기준으로 설명한다. 다만, 본 발명의 권리범위가 자 동차의 바퀴 휠에 한정될 것은 아니며, 설계 가능한 모든 제품에 적용될 수 있다. 이하에서, 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계를 생성하는 과정(S100)을 설명한 다. 도 4은 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계를 생성하는 과정의 순서도이다. 도 5는 본 발명의 실시예에 따른 설계의 생성 과정에 대한 개념 블록도이다. 도 6은 본 발명의 실시예에 따른 설계 생성 모델의 개념 블록도를 도시한 것이다. S100 과정에서, 컴퓨팅 장치는 제1 참조 설계를 이용해서 제2 참조 설계를 생성할 수 있다. 컴퓨팅 장치 는 적은 개수의 제1 참조 설계를 이용해서 상대적으로 많은 개수의 제2 참조 설계를 생성할 수 있다. 도 4및 도 5를 참조하면, S100 과정은, 제1 참조 설계를 획득하는 과정(S110), 위상최적화에 의해 제1 신규 설 계를 획득하는 과정(S120), 파라메트릭 설계에 의해 제2 신규 설계를 획득하는 과정(S130), 설계 생성 모델을 학습하는 과정(S140), 설계 생성 모델을 이용해 제3 신규 설계를 획득하는 과정(S150), 제2 참조 설계를 획득하 는 과정(S160) 중 적어도 하나를 포함할 수 있다. S110 과정에서, 컴퓨팅 장치는 제품에 대한 제1 참조 설계를 획득할 수 있다. 컴퓨팅 장치는 통신 인 터페이스를 통해 제1 참조 설계를 수신하거나, 스토리지에 저장된 제1 참조 설계를 획득할 수 있다. 참조 설계(reference design)는 디자이너에 의해 도시되면서 엔지니어에 의해 설계되어 심미적으로 성능적으로 검증된 제품의 설계를 의미할 수 있다. 또는, 참조 설계는 시스템의 필수 요소가 포함된 기술 청사진을 말하며, 제3 자에 의해 복사될 수 있다. 제3자는 필요에 따라 참조 설계를 개선하거나 수정할 수 있다. 이하 명세서에서, 제품에 관한 설계 혹은 설계안의 용어는 컴퓨팅 장치의 입력 및 출력으로 표현될 수 있 는 데이터를 의미한다. 또한, 제품에 대한 설계 혹은 설계안은 2차원 혹은 3차원 설계 데이터일 수 있으며, 흑 백 혹은 칼라 설계 데이터일 수 있으며, 이미지 파일, 캐드 파일 혹은 모델링 파일과 같이 제품의 설계를 표현 하는 모든 파일 형식일 수 있다. S120 과정에서, 컴퓨팅 장치는 위상 최적화(Topology Optimization, TO)에 의해 제1 신규 설계를 획득할 수 있다. 도 5를 참조하면, 일 예로서, 컴퓨팅 장치는 제1 참조 설계에 위상 최적화를 적용하여 한 개 이 상의 제1 신규 설계를 획득할 수 있다. 다른 예로서, 컴퓨팅 장치는 후술할 S130 과정에서 획득한 제2 신 규 설계에 위상 최적화를 적용하여 한 개 이상의 제1 신규 설계를 획득할 수 있다. 위상 최적화는 물리기반으로 사용자의 설계 요구사항을 만족시킬 수 있는 참조 설계에 대한 최적화 문제로 정의 된다. 최적 설계는 물체의 모양이나 치수를 최적화하는 형상 최적설계(shape optimization), 재질을 최적화하는 물성 최적설계(material optimization) 그리고 물체의 구조를 최적화하는 위상 최적설계(topology optimization)로 구별될 수 있다. S130 과정에서, 컴퓨팅 장치는 파라메트릭 설계(Parametric Design, PD)에 의해 제2 신규 설계를 획득할 수 있다. 도 5를 참조하면, 일 예로서, 컴퓨팅 장치는 제1 참조 설계에 파라메트릭 설계를 적용하여 한 개 이상의 제2 신규 설계를 획득할 수 있다. 다른 예로서, 컴퓨팅 장치는 전술한 S120 과정에서 획득한 제1 신규 설계에 파라메트릭 설계를 적용하여 한 개 이상의 제2 신규 설계를 획득할 수 있다. 파라메트릭 설계는 규칙기반으로 사용자의 설계 요구사항을 만족시킬 수 있는 참조 설계에 대한 매개변수화 (Parameterization)를 수행하는 것이다. 다양한 실시예에서, 컴퓨팅 장치는 S120 과정에서 획득한 제1 신규 설계에 S130 과정을 수행하여 제2 신규 설계를 획득하고, 제2 신규 설계에 다시 S120 과정을 수행하여 제1 신규 설계를 획득할 수 있으며, 반복적으로 S120 과정 및 S130 과정을 수행할 수 있다. 이를 통해, 컴퓨팅 장치는 복수의 제1 및 제2 신규 설계를 획 득할 수 있다. 즉, S110 과정을 통해 획득한 제1 참조 설계의 수가 적더라도 S120 과정 및 S130 과정을 통해 상 대적으로 많은 수의 제1 신규 설계 및 제2 신규 설계를 획득할 수 있다. S140 과정에서, 컴퓨팅 장치는 설계 생성 모델(DGM)을 학습시킬 수 있다. 일 예로서, 컴퓨팅 장치는 제1 참조 설계, 제1 신규 설계, 제2 신규 설계 중 적어도 하나를 이용하여 새로운 제3 신규 설계를 생성할 수 있는 설계 생성 모델(DGM)을 학습시킬 수 있다. 여기서, 학습된 설계 생성 모델(DGM)은 제1 참조 설계, 제1 신규 설계, 제2 신규 설계 중 적어도 하나에 의해 학습된 잠재공간(Z)을 가질 수 있다. 잠재공간(Z)은 제1 참조 설계, 제1 신규 설계, 및 제2 신규 설계에 대비하 여 축소된 차원을 가지며, 제1 참조설계, 제1 신규 설계, 및 제2 신규 설계를 축소된 차원(저차원) 상에 매핑되 도록 표현할 수 있다. 위상 최적화로 생성된 제1 신규 설계와 파라메트릭 설계로 생성된 제2 신규 설계는 차원, 길이 등 표현방식이 달라서 물리(룰)기반으로 하나의 모델로 통합할 수 없다. 제1 신규 설계와 제2신규 설계를 설계 생성 모델(DG M)을 이용하여 저차원을 가지는 잠재공간(Z) 상에 제1 신규 설계의 특성과 제2 신규 설계의 특성을 추출하여 매 핑함으로써, 표현방식이 다른 제1 신규 설계 및 제2 신규 설계의 설계 데이터를 모두 사용할 수 있다. 다양한 실시예에서, 설계 생성 모델(DGM)은 설계 데이터를 추출하여 잠재공간(Z)에 매핑해 주면서, 잠재공간 (Z)을 이용해 새로운 설계를 할 수 있는 인공지능 모델로 구성될 수 있다. 설계 생성 모델(DGM)은 딥러닝을 이 용한 모든 Generative Model로 구성될 수 있고, 일 예로서, 설계 생성 모델은, Vanilla GAN, DCGAN, cGAN, WGAN, EBGAN, BEGAN, CycleGAN, DiscoGAN, StarGAN, SRGAN, SEGAN, SDF 기반 GAN, Shpae GAN, PolyGen 모델 중 적어도 하나로 구성될 수 있다. 그러나, 설계 생성 모델이 GAN 모델로 한정될 것은 아니며, 새로운 설계 데 이터를 생성할 수 있는 딥러닝 기반 모든 Generative Model을 사용할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 설계 생성 모델을 학습시키기 전에, 제1 참조 설계, 제1 신규 설계, 제 2 신규 설계의 설계 데이터에 전처리를 수행할 수 있다. 일 예로, 컴퓨팅 장치는 설계 데이터를 Mesh, SDF(Signed Distance Function) 등 형식으로 전처리 한 후에 각 전처리 형식에 맞는 딥러닝 모델로 학습할 수 있다. 설계 데이터의 전처리 방법은 복셀, 포인트클라우드 등을 적용할 수 있으나, 이에 한정할 것은 아니며 통 상 기술자에 의해 차용 가능한 모든 방법을 적용할 수 있다. 도 6을 참조하면, 일 예로서, 설계 생성 모델(DG M)은 입력된 설계의 참과 거짓을 분류하는 분류기(Discriminator)와, 잠재공간에 매핑된 벡터를 이용해 신규 설 계를 생성하는 생성기(Generator)를 포함할 수 있다. 분류기와 생성기는 서로의 성능을 개선하기 위해 적대적으 로 경쟁하며 학습하는 모델이다. 분류기는 진짜 데이터(real data)를 참으로 분류하고, 거짓 데이터(fake data)를 거짓으로 분류하도록 학습되며, 생성기는 분류기에 의해 진짜 데이터와 구별되지 않는 가짜 데이터(fake data)를 생성하도록 학습된 다. 분류기와 생성기의 학습이 완료되면, 생성기는 진짜 데이터의 확률분포를 학습하고 해당 확률분포를 따르는 가짜 데이터를 생성함으로써, 분류기가 생성기에 의해 생성된 가짜 데이터를 진짜 데이터와 구별할 수 없는 상태가 될 수 있다. 제1 참조 설계, 제1 신규 설계, 제2 신규 설계와 같이 고차원 데이터는 저차원을 가지는 생성기의 잠재공간(Z) 으로 맵핑될 수 있다. 이후, 저차원에 매칭된 제1 참조 설계의 특성, 제1 신규 설계의 특성, 제2 신규 설계의 특성을 이용해 새로운 제3 신규 설계가 생성될 수 있다. S150 과정에서, 컴퓨팅 장치는 학습된 설계 생성 모델(DGM)의 잠재공간(Z)을 이용하여 새로운 제3 신규 설 계를 생성할 수 있다. 제1 참조 설계의 특성, 제1 신규 설계의 특성, 제2 신규 설계의 특성들은 잠재공간(Z)에 매핑될 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 잠재공간(Z)에 매핑된 제1 참조 설계의 특성, 제1 신규 설계의 특성, 제2 신규 설계의 특성 정보들에 보간법(Interpolation method)를 적용하여 새로운 제3 신규 설계의 특성 정보를 생성하고, 제3 신규 설계의 특성 정보에 기초해 설계 생성 모델(DGM)을 활용하여 제3 신규 설계를 생성할 수 있 다. 여기서, 보간법으로는 제1 참조 설계의 특성, 제1 신규 설계의 특성, 제2 신규 설계의 특성 정보들 중 적어도 2 개 이상의 평균값, 중간값, 합, 차이, 최대값, 최소값, 최대 및 최소 사이의 임의 값의 선택 등을 적용하여 새 로운 제3 신규 설계의 특성 정보를 결정할 수 있다. 나아가, 도 5를 참조하면, 컴퓨팅 장치는 설계 생성 모델(DGM)으로 생성된 제3 신규 설계 중 이상 설계를 제외하기 위한 이상 필터링 과정을 수행할 수 있다. 또한, 컴퓨팅 장치는 제3 신규 설계 중 유사한 설계를 제외하기 위한 유사 필터링 과정을 수행할 수 있다. 여기서, 컴퓨팅 장치는 이상 필터링 과정 및 유사 필 터링 과정 중 적어도 하나를 수행할 수 있다. 또한, 다양한 실시예에서, 컴퓨팅 장치는 이상 필터링 과정 및 유사 필터링 과정 중 적어도 하나를 제1 참 조 설계, 제1 신규 설계, 제2 신규 설계, 및 제3 신규 설계 중 적어도 하나에도 적용할 수 있다. 컴퓨팅 장치는 이상 필터링 모듈(NAM)을 이용하여 이상 필터링 과정을 수행할 수 있다. 여기서, 이상 필터 링 모듈(NAM)은 입력으로 들어오는 설계(input design) 데이터를 정상(Normal, 1) 혹은 비정상(Abnormal, 0)으 로 분류하는 이진 분류기(Binary Classifier)이거나, 설계 데이터에 대해 비정상 정도를 복수의 클래스로 분류 하거나 확률로 나타내는 멀티 분류기(Multi Classifier)일 수 있다. 이상 필터링 모델은 지도 학습 모델 혹은 비지도 학습 모델일 수 있다. 지도 학습 기반 이상 필터링 모델은 정 상 혹은 비정상으로 라벨링된 입력 설계들의 학습 데이터로 학습될 수 있으며, 비지도 학습 기반 이상 필터링 모델은 라벨링되지 않은 입력 설계의 특징을 추출하고 추출된 특징에 기초해 입력 설계의 정상 혹은 비정상을 분류할 수 있다. 이상 필터링 모델은 입력 설계의 이미지를 이용해 특징을 추출하는 특징 추출부와, 추출된 특징을 분류하는 분 류기로 구성된 합성곱 신경망(Convolutional Neural Network, CNN)으로 구성될 수 있다. 도 4의 S160 과정에서, 컴퓨팅 장치는 제1 신규 설계, 제2 신규 설계, 제3 신규 설계 중 적어도 하나를 제 2 참조 설계로 획득할 수 있다. 나아가, 컴퓨팅 장치는 제2 참조 설계를 제1 참조 설계로 하여 S110 과정 을 포함한 이후 과정을 수행할 수 있으며, 복수의 과정들을 반복함으로써, 상대적으로 적은 개수의 제1 참조설 계를 이용해 많은 개수의 제2 참조설계를 생성할 수 있다. 도 5를 참조하면, 다양한 실시예의 S160 과정에서, 컴퓨팅 장치는 제1 신규 설계, 제2 신규 설계, 제3 신 규 설계 중 적어도 하나를 샘플링하여 기 설정된 소정 개수의 설계를 선택할 수 있다. 다양한 실시예에서, 컴퓨 팅 장치는 실험 설계(DOE, Design of Experiment)를 위해 컴퓨팅 장치의 성능을 고려해 후술할 S200 과정을 수행할 설계 갯수를 결정할 수 있다. 여기서, 기 설정된 소정 개수의 설계는 딥러닝을 위해서 최소 1000개 이상의 설계를 의미할 수 있다. 컴퓨팅 장치는 LHS(Latin Hypercube Sampling) 같은 샘플링 기법 을 통해 최적의 샘플링을 수행할 수 있으나, 이에 한정될 것은 아니다. 도 5를 참조하면, 다양한 실시예의 S160 과정에서, 컴퓨팅 장치는 제2 참조 설계가 2차원 설계 데이터인 경우 제2 참조 설계를 3차원 설계 데이터로 변경하는 후처리(Postprocessing) 과정을 수행할 수 있다. 2차원 설 계 데이터를 3차원 설계 데이터로 변경하는 후처리 방법으로는 3D Mesh, B-rep 등이 있으며, 당업자가 차용할 수 있는 다양한 방법이 적용될 수 있다. 상술한 제1 참조 설계, 제1 신규 설계, 제2 신규 설계, 제3 신규 설계, 제2 참조 설계는 단수로 표현되었지만, 복수의 개념을 당연히 포함한다. 이하에서, 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계를 예측하는 과정(S200)을 설명한 다. 도 7는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계의 성능을 예측하는 과정의 순서도이 다. 도 8은 본 발명의 실시예에 따른 설계 성능의 예측 과정에 대한 개념 블록도이다. S200 과정에서, 컴퓨팅 장치는 S100 과정에서 생성된 설계의 성능을 예측할 수 있다. 생성된 설계는 제2 참조 설계를 포함할 수 있다. 도 7 및 도 8을 참조하면, S200 과정은, 제2 참조 설계의 전처리 과정(S210), 제2 참조 설계를 해석하는 과정 (S220), 설계 성능 예측 모델을 학습하는 과정(S230), 제2 참조 설계의 성능을 예측하는 과정(S240), 설계 성능 의 예측 값이 기준에 만족하는지 판단하는 과정(S250), 학습된 설계 성능 예측 모델을 제공하는 과정(S260), 적 응 샘플링하는 과정(S270) 중 적어도 하나를 포함할 수 있다. 도 8를 참조하면, S210 과정에서, 컴퓨팅 장치는 S100 과정에서 생성된 설계인 제2 참조 설계에 전처리를 수행할 수 있다. 컴퓨팅 장치가 성능 해석 모듈을 이용해 설계 데이터를 해석하는데 높은 계산 비용이 요 구되기 때문에 모든 제2 참조 설계에 대해 해석을 수행할 수 없다. 그러므로, 컴퓨팅 장치는 제2 참조 설 계에 전처리를 수행하여 제2 참조 설계 중 기 설정된 개수의 제3 참조 설계를 선정할 수 있다. 제3 참조 설계의 개수는 제2 참조 설계의 개수 보다 적을 수 있다. 예를 들어, 컴퓨팅 장치는 전처리 과정 을 통해 제2 참조 설계 중 기 설정된 개수만큼 제3 참조 설계를 선정할 수 있다. 여기서, 전처리 과정은 도 5에 관한 설명에서 복수의 설계를 샘플링 기법을 적용하여 기 설정된 개수만큼의 설계를 샘플링하는 과정을 동일하 게 적용할 수 있다. 다만, S210 과정은 S200 과정에서 반드시 수행해야 할 과정은 아니며, 필요에 따라 제외하고 나머지 과정을 수 행할 수 있다. S220 과정에서, 컴퓨팅 장치는 성능 해석 모듈을 이용해 제3 참조 설계를 해석할 수 있다. 성능 해석 모듈 은 제3 참조 설계를 해석함으로써, 복수의 해석 결과를 제공할 수 있다. 여기서, 복수의 해석 결과는 사용자가 원하는 설계 요구 사항에 대응하는 제1 해석 결과, 설계에 대응하는 제품 의 물리적 성능에 대응하는 제2 해석 결과, 설계에 대응하는 제품을 제조할 때 고려되는 사항인 제조성에 대응 하는 제3 해석 결과 중 적어도 하나를 포함할 수 있다. 설계 요구 사항의 예시로서, 제품의 특정 부분 길이, 제품의 무게, 제품의 부피 등이 있을 수 있다. 제품의 물리적 성능의 예시로서, 구조물의 강성, 구조물의 강도, 구조물의 중량 등이 있을 수 있다. 제품의 제조시 고려 사항의 예시로서, 사출 성형 가부, 압출 성형 가부, 제조 단가, 제조 기간 등이 있을 수 있 다. 해석 결과는 절대적 수치(예로, 120, 45, 등), 상대적 수치(예로 확률, 백분율 등), 복수의 클래스로 분류(예로, 상/중/하 등), 이진 분류(예로, 0/1 등) 등으로 표현될 수 있다. 다양한 실시예의S220 과정에서, 컴퓨팅 장치는 제2 참조설계 혹은 제3 참조설계 중 하나에 복수의 해석결 과 중 적어도 하나를 오토 라벨링하여 해석데이터로 저장할 수 있다. 아래 표와 같이 제2/3 참조설계(X)는 성능 해석 모듈로 해석한 제1 내지 제3 해석 결과(Y1, Y2, Y3)를 매칭하여 해석데이터로 저장할 수 있다. 표 1 제2/3 참조설계(X) 제1 해석 결과(Y1)제2 해석 결과(Y2)제3 해석 결과(Y3) 설계 1 200 0.7 Pass 설계 2 57 0.2 Fail ... ... ... ... S230 과정에서, 컴퓨팅 장치는 설계 성능 예측 모델을 학습시킬 수 있다. 다양한 실시예에서, 컴퓨팅 장치 는 해석데이터를 학습데이터로 이용하여 설계 성능 예측 모델을 학습시킬 수 있다. 설계 성능 예측 모델은 제2 혹은 제3 참조 설계에 라벨링된 해석 결과를 이용하여 학습될 수 있으며, 학습된 설 계 성능 예측 모델은 제2 혹은 제3 참조 설계의 입력으로 예상되는 해석 결과를 출력할 수 있다. 설계 성능 예측 모델은 설계에 라벨링된 제1 해석 결과로 학습된 제1 설계 성능 예측 모델, 설계에 라벨링된 제 2 해석 결과로 학습된 제2 설계 성능 예측 모델, 설계에 라벨링된 제3 해석 결과로 학습된 제3설계 성능 예측 모델 중 적어도 하나를 포함할 수 있다. 여기서, 학습된 제1 설계 성능 예측 모델은 사용자가 원하는 설계 요구 사항을 출력할 수 있다. 또한, 학습된 제2 설계 성능 예측 모델은 설계에 대응하는 물리적 성능을 출력할 수 있다. 또한, 학습된 제3 설계 성능 예측 모델은 설계에 대응하는 제품을 제조할 때 고려되는 사항인 제조성을 출력할 수 있다. 설계 성능 예측 모델은 복수의 인공지능 모델을 포함할 수 있다. 복수의 인공지능 모델은 머신러닝 모델인 랜덤 포레스트(random forest) 모델, 서포트벡터머신(SVM, Support vector machine) 등 과, 딥러닝(Deep learning) 모델인 합성곱 신경망(CNN, Convolutional NN) 계열 모델, 순환 신경망(RNN, Recurrent Neural Network) 계열 모델 중 적어도 하나를 포함할 수 있으며, 3D 딥러닝에 특화된 PointNet계열 및 3D CNN계열과 그래픽 신경망 (Graph Neural Network, GNN) 중 하나로 구성될 수 있으며, 복수의 모델을 앙상블 할 수도 있다. 또한, 모든 모 델들은 2D와 3D 데이터를 모두 활용 가능하다. S240 과정에서, 컴퓨팅 장치는 학습된 설계 성능 예측 모델을 이용해 제2 혹은 제3 참조 설계의 성능을 예 측할 수 있다. 또는, 컴퓨팅 장치는 학습된 설계 성능 예측 모델에 제2 혹은 제3 참조 설계를 입력함으로 써, 해석 결과를 획득할 수 있다. 학습된 설계 성능 예측 모델은 사용자가 원하는 설계 요구 사항에 대응하는 제1 해석 결과, 설계에 대응하는 제 품의 물리적 성능에 대응하는 제2 해석 결과, 설계에 대응하는 제품을 제조할 때 고려되는 사항인 제조성에 대 응하는 제3 해석 결과 중 적어도 하나를 출력하여 제공할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제3 참조 설계를 입력함으로써, 제1 설계 성능 예측 모델을 이용해 제1 해석 결과를 제공할 수 있고, 제2 설계 성능 예측 모델을 이용해 제2 해석 결과를 제공할 수 있고, 제3 설계 성 능 예측 모델을 이용해 제3 해석 결과를 제공할 수 있다. S250 과정에서, 컴퓨팅 장치는 획득한 해석 결과가 미리 설정된 기준 값을 만족하는지 판단할 수 있다. 예 를 들어, 컴퓨팅 장치는 제1 내지 제3 해석 결과가 각각에 대응하는 기 설정된 기준 값들에 대비하여 기준 을 만족하는지 판단할 수 있다. 기 설정된 기준 값들은 제1 해석 결과에 대응하는 임계 설계 요구, 제2 해석 결 과에 대응하는 임계 물리적 성능, 제3 해석 결과에 대응하는 임계 제조성을 포함할 수 있다. S260 과정에서, 컴퓨팅 장치는 S250 과정의 기준을 제2 혹은 제3 참조 설계의 해석 결과가 기 설정된 기준 값을 만족한 경우에 학습된 설계 성능 예측 모델을 제공할 수 있다. 컴퓨팅 장치는 학습된 설계 성능 예측 모델을 스토리지에 저장할 수 있다. S270 과정에서, 컴퓨팅 장치는 S250 과정에서 기준을 만족하지 못한 경우 제2 혹은 제3 참조 설계에 적응 형 샘플링(Adaptive Sampling)을 적용하여 제4 참조 설계를 획득할 수 있다. 적응형 샘플링은 설계 데이터를 추 가했을 때 모델의 성능이 가장 높아질 것으로 예상되는 데이터의 위치를 알려주는 기법이다. 다양한 실시예에서, 컴퓨팅 장치는 설계 성능 예측 모델의 예측값(해석 결과)에 대한 불확실성(예, 해석결 과 값의 표준편차)이 높은 설계 데이터를 추가해서 설계 성능 예측 모델을 다시 학습하여 불확실성을 낮출 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제4 참조 설계에 대한 추가 해석을 실시하여 추가 해석 결과를 획득하 고, 추가 해석 결과에 기초해 설계 성능 예측 모델을 재 학습시킬 수 있다. 정리하면, 컴퓨팅 장치는 예측된 설계 성능이 미리 설정된 기준 값을 만족하지 않는 경우 적응형 샘플링을 통해S100 과정에서 새롭게 생성된 설계에 대한 추가 해석 결과를 수집하고, 수집된 추가 해석 결과에 기초해 설 계 성능 예측 모델을 재 학습시킬 수 있다. 도 9은 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 최적 설계를 획득하는 과정의 순서도이다. 도 10은 본 발명의 실시예에 따른 최적 설계의 획득 과정에 대한 개념 블록도이다. S300 과정에서, 컴퓨팅 장치는 사용자가 원하는 타켓 성능에 기초해 최적 설계를 획득할 수 있다. 도 9 및 도 10을 참조하면, S300 과정은, 제1 타켓 성능을 획득하는 과정(S310), 제1 최적 설계안을 획득하는 과정(S320), 제2 최적 설계안을 획득하는 과정(S330)중 적어도 하나를 포함할 수 있다. 도 10을 참조하면, S310 과정에서, 컴퓨팅 장치는 사용자가 원하는 타켓 제품의 성능 정보에 관한 제1 타 겟 성능을 획득할 수 있다. 여기서, 타겟 성능은 사용자가 원하는 제품에 대한 설계 요구 사항에 대응하는 제1 타겟 정보, 제품의 물리적 성능에 대응하는 제2 타켓 정보, 제품을 제조할 때 고려되는 사항인 제조성에 대응하는 제3 타겟 정보 중 적어 도 하나를 포함할 수 있다. 제1 타겟 정보 내지 제3 타겟 정보는 제1 해석 결과 내지 제3 해석 결과에 각각 대 응할 수 있다. S320 과정에서, 컴퓨팅 장치는 제1 타켓 성능에 기초해 제1 최적 설계안를 획득할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제1 타겟 성능을 역 설계 모델(IDM)의 입력으로 하여 출력으로 제1 최 적 설계안을 획득하고, 제1 최적 설계안을 순 설계 모델(FDM)의 입력으로 하여 출력으로 제1 타겟 성능과 동일 한 제2 타겟 성능이 예측되도록 역 설계 모델과 순 설계 모델을 학습시킬 수 있다. 이 과정에서, 컴퓨팅 장치 는 역 설계 모델의 출력으로 제1 타겟 성능에 대한 제1 최적 설계안을 실시간으로 획득할 수 있다. 여기서, 순 설계 모델은 S200 과정에서 학습된 설계 성능 예측 모델으로 구성될 수 있다. 여기서, 역 설계 모델과 순 설계 모델을 이용하여 타겟 성능에 대한 최적 설계안을 생성하므로, 역 설계 모델과 순 설계 모델을 모두 일컬어 최적 설계 모델이라 할 수 있다. 컴퓨팅 장치는 역 설계 모델을 전역 최적화의 목적으로 타켓 성능에 대한 최적 설계안을 실시간으로 획득 할 수 있다. 컴퓨팅 장치는 순 설계 모델을 지역 최적화의 목적으로 최적 설계안에 대한 타겟 성능을 획득 할 수 있다. 최적 설계 모델에 다양한 최적화 기법이 사용될 수 있으며, 일 예로서 Gradient-based methods (e.g. backpropagation, SQP 등)과 heuristic optimization method (e.g. GA 등)이 사용될 수 있다. 역 설계 모델(IDM) 및 순 설계 모델(FDM) 중 적어도 하나는 복수의 딥러닝 모델을 포함할 수 있다. 복수의 딥러 닝(Deep learning) 모델은 합성곱 신경망(CNN, Convolutional NN) 계열 모델, 및 순환 신경망(RNN, Recurrent Neural Network) 계열 모델 중 적어도 하나를 포함거나, 3D 딥러닝에 특화된 PointNet계열, 3D CNN계열, 및 그 래픽 신경망(Graph Neural Network, GNN) 중 적어도 하나를 포함할 수 있다. 또는, 복수의 모델은 앙상블 될 수 도 있다. 또한, 모든 모델들은 2D와 3D 데이터를 모두 활용 가능하다. 여기서, 최적 설계 모델은 딥러닝 기반의 역설계 방법론으로 학습된 모델일 수 있다. 딥러닝 기반의 역설계 방 법론은 대체 모델(Surrogate Model)로써 순방향 망(Forward Network)을 학습하고, 이를 바탕으로 최적해를 예측 하는 역방향 망(Inverse Network)을 다시 학습하여, 역방향 망에 입력 값을 주면 실시간으로 최적해를 출력하는 기술이다. 딥러닝 기반의 역설계 방법은 고차원의 설계 문제일수록 전통적인 최적설계 기법보다 우수한 성능을 나타낼 수 있다. 또한 딥러닝 기반의 역설계 방법은 지도 및 비지도학습을 선택적으로 사용할 수 있다. 다양한 실시예에서, 역 설계 모델은 제1 타겟 성능을 입력으로 받은 후 출력으로 제1 최적 설계를 도출하고, 순 설계 모델은 역 설계 모델에서 도출된 제1 최적 설계안을 입력으로 받은 후에 역 설계 모델의 입력인 제1 타겟 성능과 동일한 제2 타겟 성능이 그대로 예측되도록 학습된다. 다양한 실시예에서, 순 설계 모델의 출력인 제2 타겟 성능이 역 설계 모델의 입력인 제1 타겟 성능으로 예측되 도록, 순 설계 모델과 역 설계 모델 중 적어도 하나가 학습되며, 컴퓨팅 장치는 제1 타겟 성능에 기초해 학습된 역 설계 모델으로 부터 실시간으로 출력된 설계안을 제1 최적 설계안으로 획득할 수 있다. S330 과정에서, 컴퓨팅 장치는 제1 최적 설계안으로부터 제2 최적 설계안을 샘플링할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제1 최적 설계안과 이에 대한 성능 예측의 불확실성을 고려한 적응형 샘플링을 통한 추가 해석 결과의 수집을 통해 순 설계 모델을 재학습함으로써, 제2 최적 설계안을 획득할 수 있 다. 여기서, 불확실성 고려 적응형 샘플링(Adaptive Sampling)은 불확실성 정량화 모델을 통해 역 설계 모델에 의해 예측된 제1 최적 설계안의 불확실성을 정량화하고, 제1 최적 설계안의 타겟 성능이 기 설정된 성능 보다 높으면 서 동시에 정량화한 불확실성이 기 설정된 수치 보다 높은 제1 최적 설계안을 추가 샘플링하는 것을 의미한다.여기서, 불확실성 정량화 모델은 베이지안 신경망(Bayesian Neural Network) 및 가우시안 프로세스(Gaussian Process) 중 적어도 하나를 포함할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 불확실성 고려 적응형 샘플링을 제1 최적 설계안에 적용하여 제1 최적 설계안에서 추가 샘플링된 설계안을 획득할 수 있다. 추가 샘플링된 설계안은 제1-1 최적 설계안이라고 할 수도 있다. 다양한 실시예에서, 컴퓨팅 장치는 추가 샘플링된 설계안에 대해서 해석을 진행하고, 해석 결과로 라벨링 된 해석데이터를 기초로 S200 과정의 설계 성능 예측 모델을 재 학습시킬 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 재 학습된 설계 예측 모델을 활용하여 제1 타겟 성능에 대한 최적설계 를 재수행함으로써 기존 제1 최적 설계안의 전반적인 성능 영역 보다 향상된 성능 영역의 제2 최적 설계안을 도 출할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제1 최적 설계안 혹은 제2 최적 설계안을 S100 과정의 제1 참조 설계로 사용하여 새로운 설계를 생성할 수 있다. 도 11는 본 발명의 실시예에 따른 최적 설계안의 평가, 설계 데이터의 축적, 설계 데이터의 분석, 설계데이터의 추천 과정에 대한 개념 블록도이다. 다시 도 2 및 9를 참조하면, S400 과정에서, 컴퓨팅 장치는 최적 설계안을 평가할 수 있다. 최적 설계안은 S300 과정의 제1 최적 설계안과 제2 최적 설계안을 포함할 수 있다. 다양할 실시예에서, 컴퓨팅 장치는 최 적 설계안을 해석한 최적 설계안 성능이 기 설정된 요구 조건에 만족하는지 판단할 수 있다. 여기서, 최적 설계안 성능은 사용자가 원하는 설계 요구 사항에 대응하는 제1 해석 결과, 설계에 대응하는 제품 의 물리적 성능에 대응하는 제2 해석 결과, 설계에 대응하는 제품을 제조할 때 고려되는 사항인 제조성에 대응 하는 제3 해석 결과 중 적어도 하나를 포함할 수 있다. 이에 대응하여, 기 설정된 요구 조건은 기 설정된 설계 요구 사항에 대응하는 제1 요구 조건, 제품이 가져야할 최소한으로 가져야하는 기 설정된 물리적 성능에 대응하는 제2 요구 조건, 제품을 제조할 때 최소한으로 고려되 는 사항으로 기 설정된 제조성에 대응하는 제3 요구 조건 중 적어도 하나를 포함할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 최적 설계안의 제1 내지 제3 해석 결과 중 적어도 하나와 대응하는 제1 내지 제3 요구 조건 중 하나를 대비하여 요구 조건을 만족하는지 평가할 수 있다. S500 과정에서, 컴퓨팅 장치는 최적 설계안 중 기 설정된 요구 조건을 만족하는 설계 데이터를 축적할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 축적된 설계 데이터가 기 설정된 개수를 만족할 때까지 S100 과 정 내지 S300 과정을 반복적으로 수행할 수 있다. 기 설정된 개수는 5만~ 15만개 일 수 있으며, 바람직하게 대 략 10만개일 수 있다. S600 과정에서, 컴퓨팅 장치는 축적된 복수의 설계 데이터를 분석할 수 있다. 다양한 실시예의 S600 과정에서, 컴퓨팅 장치는 클러스터링 모델을 이용하여 복수의 설계 데이터의 특성 별로 설계 데이터를 분류할 수 있다. 컴퓨팅 장치는 복수의 클러스터로 분류된 복수의 설계 데이터들 중에 서 해당 클러스터를 대표하는 대표 설계를 선정할 수 있다. S600 과정에서, 다양한 실시예에서, 컴퓨팅 장치는 축적된 설계 데이터 중 이상 설계 데이터를 제외하기 위한 이상 필터링 과정을 수행할 수 있다. 또한, 컴퓨팅 장치는 축적된 설계 데이터 중 중복된 설계 데이 터를 제거하기 위한 유사 필터링 과정을 수행할 수 있다. 이상 필터링 과정은 상술한 S100 과정 내의 이상 필터 링 과정과 동일하게 적용될 수 있다. S600 과정에서, 다양한 실시예에서, 컴퓨팅 장치는 최적 설계안 성능 및 설계 데이터의 특성을 이용하여 대응하는 설계 데이터들을 시각화할 수 있다. 도 12은 본 발명의 실시예에 따른 설계 데이터에 대한 선호도 정보를 수집하고, 학습된 선호도 예측 모델을 이 용하여 선호 설계를 예측하는 방법의 개념 블록도이다. 도 12을 참조하면, 다양한 실시예의 S600 과정에서, 컴퓨팅 장치는 선호도 예측 모델을 이용하여 설계 데 이터에 대한 사용자 선호도를 예측할 수 있다. 또한, 컴퓨팅 장치는 예측된 설계 데이터의 사용자 선호도 에 기초해 설계 데이터를 사용자에게 추천할 수 있다. 도 12에서 상측도면을 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 선호도 예측 모델(preference Prediction Model)을 학습시키기 위한 학습 데이터를 수집하는 과정을 수행할 수 있다. 여기서, 컴퓨팅 장치 는 사용자와 문답 과정을 통해 사용자로부터 설계 데이터 자체에 대한 사용자 선호도를 획득하는 과정을 수행할 수 있다. 사용자 선호도를 획득하기 위한 사용자 평가 방법으로 랭크(rank), 상대평가, 레이팅(rating) 등 다양한 방법이 사용될 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 제품에 적용된 설계 데이터에 대한 사용자의 정확한 선호도를 획득하기 위해 설계 데이터에 대한 차원(2D->3D, 3D->2D), 칼라(흑백->칼라), 재질(예로, 금속 재질 등) 중 적어도 하나 를 변경한 후에 변형된 설계 데이터에 대한 사용자 선호도를 획득하는 과정을 수행할 수 있다. 여기서, 사용자 선호도는 설계에 대한 스타일, 설계에 대한 가격 등에 대한 정보를 포함할 수 있다. 도 12에서 하측 도면을 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 설계 데이터에 대한 사용자 선호도 정보(Preference Data)를 이용해 선호도 예측 모델(Preference Prediction Model)을 학습시킬 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 학습된 선호도 예측 모델을 이용하여 복수의 설계 데이터 중 사용자가 선호하 는 사용자 선호 설계를 예측할 수 있다. 일 예로서, 선호도 예측 모델은 설계(x)에 라벨링된 선호도(y)를 학습 데이터로 학습될 수 있으며, 학습된 선호도 예측 모델은 새로운 설계(x)에 대한 예측 선호도(y)를 출력할 수 있 다. 다양한 실시예에서, 컴퓨팅 장치는 상술한 모든 설계 혹은 설계안 중 적어도 하나에 대한 사용자 선호도 평가로 선호도 예측 모델을 학습시키고, 학습된 선호도 예측 모델로 예측된 설계에 대한 사용자 예측 선호도를 획득할 수 있다. 도 13은 본 발명의 실시예에 따른 딥러닝 기반 최적 설계 모델의 개념도를 도시한 것이다. 도 13을 참조하면, 컴퓨팅 장치는 최적 설계 모델을 이용해 제품의 타겟 성능(y)과 설계에 대한 사용자 선 호도(c)에 기초해 최적 설계안(x)을 획득할 수 있다. 다양한 실시예에서, 최적 설계 모델의 역 설계 모델은 제1 타겟 성능(y)과 사용자 선호도(c)를 입력으로 받은 후 출력으로 제1 최적 설계안(x)를 도출하고, 최적 설계 모델의 순 설계 모델은 역 설계 모델에서 도출된 제1 최적 설계안(x)을 입력으로 받은 후에 역 설계 모델의 입력인 제1 타겟 성능(y)과 동일한 제2 타겟 성능(y1, y2, ..., yn)이 그대로 예측되도록 학습된다. 다양한 실시예에서, 컴퓨팅 장치는 선호도 예측 모델에서 예측된 설계에 대한 사용자 예측 선호도와 타겟 성능을 최적 설계 모델의 입력으로 하여 최적 설계안을 획득할 수 있다. 즉, 선호도 예측 모델의 출력 값을 최 적 설계 모델의 입력으로 반영함으로써, 최적 설계 모델은 사용자 선호도가 높은 최적 설계안을 제공할 수 있다. 또한, 다양한 실시예에서, 컴퓨팅 장치는 설계 성능 예측 모델 혹은 성능 해석 모듈을 이용하여 예측된 사 용자 선호 설계에 대한 사용자 선호 설계 성능을 획득할 수 있다. 여기서, 사용자 선호 설계 성능은 사용자 설 계 요구사항에 관련된 제1 해석 결과, 제품의 물리적 성능에 대응하는 제2 해석 결과, 설계에 대응하는 제품을 제조할 때 고려되는 사항인 제조성에 대응하는 제3 해석 결과 중 적어도 하나를 포함할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 사용자 선호 설계 성능을 S300 과정에서 제품의 제1 타켓 성능으로 사 용자에게 제안할 수 있다. 이로써, S300 과정에서, 컴퓨팅 장치는 공학적인 성능을 만족할 뿐만 아니라 사 용자가 선호할 수 있는 심미성을 가지는 제1 최적 설계안을 제공할 수 있다. S700 과정에서, 컴퓨팅 장치는 설계 데이터 중 사용자 추천 설계를 제안할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 설계 추천 모델을 이용해 최적 설계안에서 선별된 사용자 추천 설계를 제안할 수 있다. 사 용자는 사용자 추천 설계를 공학 성능 및 심미성을 가지는 컨셉안으로 이후 상세한 설계를 통해 제조를 위한 설 계안을 도출할 수 있다. 상술한 모든 모델은 인공지능 모델을 의미할 수 있다. 여기서, 인공지능 모델은 하나 이상의 네트워크 함수로 구성되며, 하나 이상의 네트워크 함수는 일반적으로 '노드'라 지칭될 수 있는 상호 연결된 계산 단위들의 집합 으로 구성될 수 있다. 이러한 '노드'들은 '뉴런(neuron)'들로 지칭될 수도 있다. 하나 이상의 네트워크 함수는 적어도 하나 이상의 노드들을 포함하여 구성된다. 하나 이상의 네트워크 함수를 구성하는 노드(또는 뉴런)들은 하나 이상의 '링크'에 의해 상호 연결될 수 있다. 인공지능 모델 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 전술 한 바와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상 의 출력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드는 입력 노드에 입력된 데이터에 기초 하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 노드는 가중치(weight)를 가질 수 있다. 가중치는 가변적일 수 있으며, 인공지능 모델이 원하는 기능을 수행하기 위해, 사용자 또는 알고리즘 에 의해 가변될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연 결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응하 는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 전술한 바와 같이, 인공지능 모델은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호연결 되어 인공지능 모 델 내에서 입력 노드 및 출력 노드 관계를 형성한다. 인공지능 모델 내에서 노드들과 링크들의 개수 및 노드들 과 링크들 사이의 연관관계, 링크들 각각에 부여된 가중치의 값에 따라, 인공지능 모델의 특성이 결정될 수 있 다. 예를 들어, 동일한 개수의 노드 및 링크들이 존재하고, 링크들 사이의 가중치 값이 상이한 두 인공지능 모 델이 존재하는 경우, 두 개의 인공지능 모델들은 서로 상이한 것으로 인식될 수 있다. 인공지능 모델을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어 (layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거쳐야 하는 링크 들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 인공 지능 모델 내에서 레이어의 차수는 전술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어 는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 인공지능 모델 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되는 하나 이상의 노드들을 의미할 수 있다. 또는, 인공지능 모델 네트워크 내에서, 링크를 기준으로 한 노 드 간의 관계에 있어서, 링크로 연결된 다른 입력 노드들 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출력 노드는 인공지능 모델 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않 는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 인공지 능 모델을 구성하는 노드들을 의미할 수 있다. 본 발명의 일 실시예에 따른 인공지능 모델은 입력 레이어의 노 드가 출력 레이어에 가까운 히든 레이어의 노드보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 인공지능 모델일 수 있다. 인공지능 모델은 하나 이상의 히든 레이어를 포함할 수 있다. 히든 레이어의 히든 노드는 이전의 레이어의 출력 과 주변 히든 노드의 출력을 입력으로 할 수 있다. 각 히든 레이어 별 히든 노드의 수는 동일할 수도 있고 상이 할 수도 있다. 입력 레이어의 노드의 수는 입력 데이터의 데이터 필드의 수에 기초하여 결정될 수 있으며 히든 노드의 수와 동일할 수도 있고 상이할 수도 있다. 입력 레이어에 입력된 입력 데이터는 히든 레이어의 히든 노 드에 의하여 연산될 수 있고 출력 레이어인 완전 연결 레이어(FCL: fully connected layer)에 의해 출력될 수 있다. 컴퓨팅 장치는 학습 데이터를 이용하여 인공지능 모델을 학습시킬 수 있다. 컴퓨팅 장치는 학습 데이 터 세트를 이용하여 인공지능 모델을 구성하는 하나 이상의 네트워크 함수에 대한 학습을 수행할 수 있다. 일 실시예에서, 컴퓨팅 장치는 학습 입력 데이터 세트 각각을 하나 이상의 네트워크 함수에 입력시키고, 하나 이상의 네트워크 함수로 연산된 출력 데이터 값을 특징 값으로 추출하고, 추출된 특징 값을 기초로 인공지 능 모델을 학습시킬 수 있다. 다른 실시예로, 컴퓨팅 장치는 학습 입력 데이터 세트 각각을 하나 이상의 네트워크 함수에 입력시키고, 하나 이상의 네트워크 함수로 연산된 출력 데이터 각각과 학습 입력 데이터 세트 각각의 레이블에 해당하는 학 습 출력 데이터 세트 각각을 비교하여 오차를 도출할 수 있다. 인공지능 모델의 학습에서 학습 입력 데이터는 하나 이상의 네트워크 함수의 입력 레이어에 입력될 수 있으며, 학습 출력 데이터는 하나 이상의 네트워크 함수의 출력과 비교될 수 있다. 컴퓨팅 장치는 학습 입력 데이 터에 대한 하나 이상의 네트워크 함수의 연산 결과와 학습 출력 데이터(레이블)의 오차에 기초하여 인공지능 모 델을 학습시킬 수 있다. 또한, 컴퓨팅 장치는 오차에 기초하여 하나 이상의 네트워크 함수의 가중치를 역전파 방식으로 조정할 수 있다. 즉, 컴퓨팅 장치는 학습 입력 데이터에 대한 하나 이상의 네트워크 함수의 연산 결과와 학습 출력 데이터의 오차에 기초하여 하나 이상의 네트워크 함수의 출력이 학습 출력 데이터에 가까워지도록 가중치를 조 정할 수 있다. 컴퓨팅 장치는 하나 이상의 네트워크 함수의 학습이 사전 결정된 에폭 이상 수행된 경우, 검증 데이터를 이용하여 학습의 중단 여부를 결정할 수 있다. 사전 결정된 에폭은 전체 학습 목표 에폭의 일부일 수 있다. 검 증 데이터는 레이블링 된 학습 데이터 세트 중 적어도 일부로 구성될 수 있다. 즉, 컴퓨팅 장치는 학습 데 이터 세트를 통해 인공지능 모델의 학습을 수행하며, 인공지능 모델의 학습이 사전결정 된 에폭 이상 반복된 후, 검증 데이터를 이용하여 인공지능 모델의 학습 효과가 사전 결정된 수준 이상인지 여부를 판단할 수 있다. 예를 들어, 컴퓨팅 장치는 100개의 학습 데이터를 이용하여 목표 반복 학습 횟수가 10회인 학습을 수행하 는 경우, 사전결정 된 에폭인 10회의 반복 학습을 수행한 후, 10개의 검증 데이터를 이용하여 3회의 반복 학습 을 수행하여, 3회의 반복 학습 동안 인공지능 모델 출력의 변화가 사전결정 된 수준 이하인 경우 더 이상의 학 습이 무의미한 것으로 판단하고 학습을 종료할 수 있다. 즉, 검증 데이터는 인공지능 모델의 반복 학습에서 에 폭별 학습의 효과가 일정 이상인지 이하인지 여부에 기초하여 학습의 완료를 결정하는 데 이용될 수 있다. 전술 한 학습 데이터, 검증 데이터의 수 및 반복 횟수는 예시일 뿐이며 이에 한정되지 않는다. 컴퓨팅 장치는 테스트 데이터 세트를 이용하여 하나 이상의 네트워크 함수의 성능을 테스트하여 하나 이상 의 네트워크 함수의 활성화 여부를 결정함으로써, 인공지능 모델을 생성할 수 있다. 테스트 데이터는 인공지능 모델의 성능을 검증하기 위하여 사용될 수 있으며, 학습 데이터 세트 중 적어도 일부로 구성될 수 있다. 예를 들어, 학습 데이터 세트 중 70%는 인공지능 모델의 학습(즉, 레이블과 비슷한 결과값을 출력하도록 가중치를 조 정하기 위한 학습)을 위해 활용될 수 있으며, 30%는 인공지능 모델의 성능을 검증하기 위한 테스트 데이터로써 활용될 수 있다. 컴퓨팅 장치는 학습이 완료된 인공지능 모델에 테스트 데이터 세트를 입력하고 오차를 측정하여 사전 결정 된 성능 이상인지 여부에 따라 인공지능 모델의 활성화 여부를 결정할 수 있다. 컴퓨팅 장치는 학습이 완 료된 인공지능 모델에 테스트 데이터를 이용하여 학습 완료된 인공지능 모델의 성능을 검증하고 학습 완료된 인 공지능 모델의 성능이 사전결정 된 기준 이상인 경우 해당 인공지능 모델을 다른 어플리케이션에서 사용하도록 활성화할 수 있다. 또한, 인공지능 모델은 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 및 반교사학습 (semi supervised learning) 중 적어도 하나의 방식으로 학습될 수 있다. 인공지능 모델의 학습은 출력의 오류 를 최소화하기 위한 것이다. 인공지능 모델의 학습에서 반복적으로 학습 데이터를 인공지능 모델에 입력시키고 학습 데이터에 대한 인공지능 모델의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 인공지능 모델의 에러를 인공지능 모델의 출력 레이어에서부터 입력 레이어 방향으로 역전파(backpropagation)하여 인공 지능 모델의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 레이블링되어있는 학습 데이터를 사용하며(즉, 레이블링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 레이블링되어 있지 않을 수 있다. 즉, 예를 들어, 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 레이블링 된 데이터 일 수 있다. 학습 데이터가 인공지능 모델에 입력되고, 인공지능 모델의 출력(카테고리)과 학습 데이터의 레이블을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 인공지능 모델 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 인공지능 모델에서 역방향(즉, 출력 레이어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 인공지능 모델의 각 레이어의 각 노드들의 연결 가중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터 에 대한 인공지능 모델의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 인공지능 모 델의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 인공지능 모델의 학습 초기에는 높 은 학습률을 사용하여 인공지능 모델이 빠르게 일정 수준의 성능을 확보하도록 하여 효율성을 높이고, 학습 후 기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 인공지능 모델의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 인공지능 모델을 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원 인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양한 최적화 방법이 사용될 수 있다. 과적합을 막기 위 해서는 학습 데이터를 증가시키거나, 레귤라이제이션(regularization), 학습의 과정에서 네트워크의 노드 일부 를 생략하는 드롭아웃(dropout) 등의 방법이 적용될 수 있다. 다양한 실시예에서, 인공지능 모델은 복수의 인공지능 모델을 포함할 수 있다. 복수의 인공지능 모델은 머신러 닝 모델인 랜덤 포레스트(random forest) 모델, 서포트벡터머신(SVM, Support vector machine) 등과 딥러닝 (Deep learning) 모델인 합성곱 신경망(CNN, Convolutional NN) 계열 모델, 순환 신경망(RNN, Recurrent Neural Network) 계열 모델 중 적어도 하나를 포함할 수 있으며, 3D 딥러닝에 특화된 PointNet계열 및 3D CNN 계열과 그래픽 신경망(Graph Neural Network, GNN)으로 구성될 수 있으며, 복수의 모델을 앙상블 할 수도 있다. 또한, 모든 모델들은 2D와 3D 데이터를 모두 활용 가능하다. 본 발명은 도면에 도시된 실시예를 참고로 설명되었으나 이는 예시적인 것에 불과하며, 본 기술 분야의 통상의 지식을 가진 자라면 이로부터 다양한 변형 및 균등한 타 실시예가 가능하다는 점을 이해할 것이다. 따라서, 본 발명의 진정한 기술적 보호 범위는 첨부된 등록청구범위의 기술적 사상에 의해 정해져야 할 것이다."}
{"patent_id": "10-2024-0123392", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 인공지능 기반 생성적 설계 장치의 하드웨어 구성도이다. 도 2는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 순서도이다. 도 3은 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법의 개념 블록도이다. 도 4은 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계를 생성하는 과정의 순서도이다. 도 5는 본 발명의 실시예에 따른 설계의 생성 과정에 대한 개념 블록도이다. 도 6은 본 발명의 실시예에 따른 설계 생성 모델의 개념 블록도를 도시한 것이다. 도 7는 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 설계의 성능을 예측하는 과정의 순서도이 다. 도 8은 본 발명의 실시예에 따른 설계 성능의 예측 과정에 대한 개념 블록도이다. 도 9은 본 발명의 실시예에 따른 인공지능 기반 생성적 설계 방법에서 최적 설계를 획득하는 과정의 순서도이다. 도 10은 본 발명의 실시예에 따른 최적 설계의 획득 과정에 대한 개념 블록도이다. 도 11는 본 발명의 실시예에 따른 최적 설계의 평가, 설계 데이터의 축적, 설계 데이터의 분석, 설계데이터의 추천 과정에 대한 개념 블록도이다. 도 12은 본 발명의 실시예에 따른 설계 데이터에 대한 선호도 정보를 수집하고, 학습된 선호도 예측 모델을 이 용하여 선호 설계를 예측하는 방법의 개념 블록도이다. 도 13은 본 발명의 실시예에 따른 딥러닝 기반 최적 설계 모델의 개념도를 도시한 것이다."}
