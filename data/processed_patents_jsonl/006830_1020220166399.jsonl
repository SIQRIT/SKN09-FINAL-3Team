{"patent_id": "10-2022-0166399", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0082599", "출원번호": "10-2022-0166399", "발명의 명칭": "정보 모델을 편집하는 전자 장치", "출원인": "강원대학교산학협력단", "발명자": "박홍성"}}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "정보 모델을 편집하는 전자 장치의 제어 방법에 있어서,상기 전자 장치가, 사용자 입력에 따라 획득된 모듈 ID를 바탕으로 모듈의 유형(type)를 식별하는 단계;상기 전자 장치가, 복수의 항목 중 상기 식별된 유형에 매칭되는 적어도 하나의 항목을 선택하는 단계; 및상기 전자 장치가, 상기 선택된 항목에 매칭되는 데이터를 입력 받기 위한 적어도 하나의 UI(User Interface)를제공하는 단계;를 포함하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 모듈의 유형을 식별하는 단계는,사용자 입력에 따라 획득된 모듈 ID를 바탕으로 기본, 복합, 소프트웨어, 하드웨어, 안전 모드, 및 보안 모드중 적어도 하나와 관련된 상기 모듈의 유형을 식별하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 적어도 하나의 항목을 선택하는 단계는,상기 식별된 유형이 안전 모드 및 보안 모드 중 적어도 하나에 해당하는 경우, safesecure 항목을 선택하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제2항에 있어서,상기 모듈의 유형을 식별하는 단계는,상기 모듈 ID가 소프트웨어 및 하드웨어 중 어느 하나에도 해당되지 않는 경우, 에러를 식별하는, 전자 장치의제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 복수의 항목은,모듈에 대한 추가 정보와 관련된 “idntype”, 모듈에 사용되는 데이터의 속성과 관련된 “properties”, 모듈에 사용되는 입출력 변수들과 관련된 “variables”, 모듈에 사용되는 함수들에 대한 인터페이스와 매칭되는 “services”, 모듈이 운영되는 환경과 관련된 “infra”, 모듈의 시뮬레이션과 관련된 “modelling”, 및 모듈내 실행 가능한 파일과 관련된 “execform”을 포함하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 전자 장치의 제어 방법은,사용자 입력에 따라 복수의 정보 모델을 각각 생성하는 단계;상기 복수의 정보 모델 중 동일한 유형에 해당하는 정보 모델들을 식별하는 단계;공개특허 10-2024-0082599-3-항목 별로, 상기 식별된 정보 모델들을 구성하는 데이터를 비교하여 정보 모델들 간의 유사도를 산출하는 단계;적어도 하나의 항목에 대하여 상기 유사도가 임계치 이상인 제1 정보 모델 및 제2 정보 모델을 선택하는 단계;및상기 제1 정보 모델 및 상기 제2 정보 모델의 일체화를 위한 추천 정보를 제공하는 단계;를 포함하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 전자 장치의 제어 방법은,상기 추천 정보가 제공되었음에도 상기 제1 정보 모델 및 상기 제2 정보 모델에 대한 일체화를 위한 사용자 입력이 수신되지 않는 경우, 상기 유사도에 대한 상기 임계치를 증가 업데이트하는 단계;를 더 포함하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "전자 장치에 있어서,적어도 하나의 인스트럭션이 저장된 메모리; 및상기 인스트럭션을 실행함으로써 제1 항의 제어 방법을 수행하는, 프로세서;를 포함하는, 전자 장치."}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "전자 장치의 프로세서에 의해 실행되어, 상기 전자 장치로 하여금 제1항의 제어 방법을 수행하도록 하는, 컴퓨터 판독 가능 매체에 저장된 컴퓨터 프로그램"}
{"patent_id": "10-2022-0166399", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "정보 모델을 편집하는 전자 장치의 제어 방법에 있어서,상기 전자 장치가, 사용자가 데이터 유형을 임의로 만드는 단계;상기 전자 장치가, 복수의 항목 중 상기 식별된 유형에 매칭되는 적어도 하나의 항목을 선택하는 단계; 및상기 전자 장치가, 상기 선택된 항목에 매칭되는 데이터를 입력 받기 위한 적어도 하나의 UI(User Interface)를제공하는 단계;를 포함하는, 전자 장치의 제어 방법."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "정보 모델을 편집하는 전자 장치의 제어 방법이 개시된다. 본 제어 방법은, 사용자 입력에 따라 획득된 모듈 ID 를 바탕으로 모듈의 유형(type)를 식별하는 단계, 복수의 항목 중 상기 식별된 유형에 매칭되는 적어도 하나의 항목을 선택하는 단계, 선택된 항목에 매칭되는 데이터를 입력 받기 위한 적어도 하나의 UI(User Interface)를 제공하는 단계를 포함한다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 정보 모델을 편집하는 전자 장치에 관한 것으로, 보다 상세하게는, 사용자 입력에 따라 항목 별로 정 보 모델을 편집하는 편집 방법에 관한 것이다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "각 분야에서 사용되는 정보 모델이라는 용어의 정의를 살펴보면 다음과 같다: 빌딩 정보 모델(Building information model)에서는 “건설 자산에 대한 의사 결정을 지원하기 위해 추출, 교환 또는 네트워크화할 수 있는 컴퓨터 파일”로 정의하고 있다. https://en.wikipedia.org/wiki/Building_information_modeling 즉 빌딩 정보 모델을 자산(설계, 자재 수량과속성, 시간, 비용, 준공 상태 등)에 대해 구조화된 데이터를 보유 하고 있는 프로젝트별 가상 컴퓨터 공간으로 간주하여, 모델링 도구와 3D 시각화 도구를 활용하여 분석 및 제품 을 동시 개발하면서 제조 기술 프로세스에 중점을 둔 협업을 포함하는 소프트웨어 시스템에서 구현될 수 있다. OPC-UA에서는 “주어진 시스템 또는 시스템들의 집합의 정보 자원을 정의하고 특성화하고 관련시키는 조직적 프레임워크”로 정의하고, ISO TC299에서는 “엔티티들의 추상화 및 표현을 의미하며, 이 내용에는 관리되는 환경, 엔티티의 속성·특성·동작, 엔티티들이 서로 관련되는 방식”으로 정의되어 있다(ISO 22166-1). IEC TC57에서는 정보 모델을 “전력 유틸리티 운영과 일반적으로 관계된 유틸리티 기업내의 모든 주요 객체를 나타내는 추상 모델”로 정의하고 있다. IEC의 CIM을 통하여 전력 시스템 리소스를 객체 클래스 및 속성으로 표 현하는 표준 방법을 이들의 관계에 따라 제공함으로써, CIM은, 독립적으로 개발된 네트워크 응용 프로그램을 실 행하는 전체 시스템들간 혹은 네트워크 응용 프로그램을 실행하는 시스템과 발전 또는 배전 관리와 같은 전력 시스템 운영의 다른 측면과 관련된 다른 시스템 간, 서로 다른 공급업체가 독립적으로 개발한 네트워크 응용 프 로그램의 통합을 용이하게 한다. 하드웨어 로봇 정보 모델(Hardware Robot Information Model, HRIM)은 모듈기반 로봇을 만들기 위하여 다양한 하드웨어 모듈을 제공하는 공급 업체들간 상호 운용성을 용이하게 하는 공통 인터페이스로 정의하여, 로봇 하드 웨어 모듈간 논리적 인터페이스 표준화에 중점을 두고 있다. 여기서 논리적 인터페이스는 하드웨어 모듈이 만족 해야 하는 규칙 집합을 말한다. 주로 ROS(Robot Operating System) 기반에서 동작하는 센서와 구동기들에 대한 정보 모델로 인터페이스와 관련하여 ROS에 사용되는 메시지와 서비스들에 대한 표준 포맷을 정의하고 있다. 또한, 정보 모델을 디지털 제조(digital manufacturing)로 이해하여, 첨단 제조, 신소재, 새로운 정보 및 통신 기술, 빅데이터, 클라우드 기술을 기반으로 구현되는 설계에서 완성된 기능 제품 획득에 이르기까지 개발 및 생 산의 모든 단계를 포괄하는 것으로 정보 모델을 정의하기도 한다(Automation Of Machine-Building Production According To Industry 4.0). 독일에서 진행한 Industry 4.0의 목적은 산업의 자동화와 기술 혁신의 현 추세를 IT 기술이 적용된 장비를 생산 하거나 사용하도록 하는 것이다. Industry 4.0에서는 OPC UA의 information model을 활용하여 구현한 연구들이 많다. 디지털 트윈의 근본적 기반을 처리 작업 및 디지털 표현을 실현하는 데 요구되는 모든 관련 데이터 및 정 보의 속성과 관계를 기술한 정보 모델이라고 한 연구도 있다. 즉, 정보 모델은 상호운용성을 위하여 만들어졌고 사용하고 있다는 것을 알 수 있다. 이러한 상호운용성을 보장 하기 위해서는 당연히 사용하는 인터페이스들과 관련 설명들이 잘 정의되어 있어야 한다. 로봇용 정보 모델을 만들기 위한 로봇의 특성을 다음과 같다. C1. 로봇에 사용되는 모듈은 기구 모듈, 전기/전자 모듈, 소프트웨어 모듈로 구성되고, 이러한 모듈은 조합이 되어야 한다. 로봇도 모듈의 조합으로 이루어진 모듈로 간주한다. C2. 로봇에 동작하는 소프트웨어는 프로세스형과 스레드형이 있으며, 종류에 따라 동작시키는 방법이 다를 수 있으며, 사용되는 라이브러리도 다르다. C3. 가능한 모듈 개발시 창의성을 방해하지 않게 해야 한다. 즉, 인터페이스들을 고정하면 안된다. C4. 인터페이스들에 대해 제공하는지 제공받는지를 설정하여, 설계 시 이를 확인할 수 있게 한다. 여기서 사용 하는 인터페이스는 변수와 메서드(혹은 함수)를 말한다. C5. 모듈 혹은 시스템에서 제공하는 안전과 보안 수준을 정의하여야 한다. C6. 시뮬레이션에 활용할 수 있도록 모델링 관련 정보를 제공하여야 한다. 기존 연구들을 보면 BIM은 빌딩 특성상 하드웨어 면의 특성이 강조되어 설계에서부터 건축, 폐기까지 각 단계에 서 생성되는 데이터들의 상호운용성을 위하여 정보 모델을 개발하여 사용되고 있으며, OPC-UA는 제조 시스템 관 점에서 소프트웨어 측면에서 상호운용성을 위하여 정보 모델을 개발하여 사용하고 있다. IEC TC57에서도 전력시 스템을 정보 모델 관점에서 설계하여 상호운용성을 강조하였지만, 다른 정보 모델과의 특징은 전력시스템의 구 성 요소(변압기, 보호장치, 변전소 등) 들에 사용되는 데이터 관련 속성들을 정의하였다는 것이다. 이는 전력시 스템의 각 구성요소들의 기능이 정해져 있어 기능 관련 메서드(혹은 함수)들을 정할 필요가 없기 때문으로 생각 된다. 그러나 보안 및 기능 업데이트를 위해서라도 관련 메서드들을 정하는 것이 필요할 것으로 예상된다. HRIM은 주로 ROS 기반에서 동작하는 센서와 구동기들의 상호운용성을 위하여 ROS 기반 메시지와 서비스들에 대 하여 정의하고 있지만, 일반적인 소프트웨어 모듈에 대한 인터페이스 표준 포맷과 기계적 모듈에 대한 인터페이 스 표준은 정의하고 있지 않다. 즉, 로봇 특성들인 C1~C5를 모두 만족하는 정보 모델은 존재하고 있지 않다. 또 한 정보 모델을 활용하기 위해서는 필요한 정보들을 제공하여야 하는데, 이러한 도구(앞으로 이 도구 명을 정보 모델 편집기라 칭함)도 현재 존재하지 않는다. 정보 모델 편집기도 해당 정보 모델의 데이터 입력 항들을 모두"}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "나열하여 입력할 수 있지만, 이 경우 상호 모순이 되는 항들이 발생할 수 있다.발명의 내용"}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 사용자가 생성하고자 하는 정보 모델(: 모듈)의 유형에 따라 필요한 항목을 순차적으로 입력하도록 하는 UI(User Interface)를 제공하는 전자 장치에 대한 것이다. 본 개시의 목적들은 이상에서 언급한 목적으로 제한되지 않으며, 언급되지 않은 본 개시의 다른 목적 및 장점들 은 하기의 설명에 의해서 이해될 수 있고, 본 개시의 실시 예에 의해 보다 분명하게 이해될 것이다. 또한, 본 개시의 목적 및 장점들은 특허 청구 범위에 나타낸 수단 및 그 조합에 의해 실현될 수 있음을 쉽게 알 수 있을 것이다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시 예에 따라 정보 모델을 편집하는 전자 장치의 제어 방법은, 상기 전자 장치가, 사용자 입력 에 따라 획득된 모듈 ID를 바탕으로 모듈의 유형(type)를 식별하는 단계, 상기 전자 장치가, 복수의 항목 중 상 기 식별된 유형에 매칭되는 적어도 하나의 항목을 선택하는 단계, 상기 전자 장치가, 상기 선택된 항목에 매칭 되는 데이터를 입력 받기 위한 적어도 하나의 UI(User Interface)를 제공하는 단계를 포함한다. 상기 모듈의 유형을 식별하는 단계는, 사용자 입력에 따라 획득된 모듈 ID를 바탕으로 기본, 복합, 소프트웨어, 하드웨어, 안전 모드, 및 보안 모드 중 적어도 하나와 관련된 상기 모듈의 유형을 식별할 수 있다. 여기서, 상기 적어도 하나의 항목을 선택하는 단계는, 상기 식별된 유형이 안전 모드 및 보안 모드 중 적어도 하나에 해당하는 경우, safesecure 항목을 선택할 수 있다. 또한, 상기 모듈의 유형을 식별하는 단계는, 상기 모듈 ID가 소프트웨어 및 하드웨어 중 어느 하나에도 해당되 지 않는 경우, 에러를 식별할 수 있다. 상기 복수의 항목은, 모듈에 대한 추가 정보와 관련된 “idntype”, 모듈에 사용되는 데이터의 속성과 관련된 “properties”, 모듈에 사용되는 입출력 변수들과 관련된 “variables”, 모듈에 사용되는 함수들에 대한 인터 페이스와 매칭되는 “services”, 모듈이 운영되는 환경과 관련된 “infra”, 모듈의 시뮬레이션과 관련된 “ modelling”, 및 모듈 내 실행 가능한 파일과 관련된 “execform”을 포함할 수 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시에 따른 전자 장치는 정보 모델을 편집하는 과정에서 정보 모델의 유형을 먼저 선택한 뒤 항목 별로 데 이터를 입력 받음으로써 정보 모델의 새로운 표준 및 활용 방향을 제시한다. 본 개시에 따른 전자 장치는 정보 모델의 편집 과정에서 처음부터 모든 정보를 나열하여 모든 입력을 받는 것보 다는 필요한 정보를 먼저 입력 받아 가능한 사용자들이 필요한 정보만 입력하도록 함으로써, 내용을 줄이고 오 류를 줄이는 등의 장점이 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 개시에 대하여 구체적으로 설명하기에 앞서, 본 명세서 및 도면의 기재 방법에 대하여 설명한다. 먼저, 본 명세서 및 청구범위에서 사용되는 용어는 본 개시의 다양한 실시 예들에서의 기능을 고려하여 일반적 인 용어들을 선택하였다. 하지만, 이러한 용어들은 당해 기술 분야에 종사하는 기술자의 의도나 법률적 또는 기 술적 해석 및 새로운 기술의 출현 등에 따라 달라질 수 있다. 또한, 일부 용어는 출원인이 임의로 선정한 용어 도 있다. 이러한 용어에 대해서는 본 명세서에서 정의된 의미로 해석될 수 있으며, 구체적인 용어 정의가 없으 면 본 명세서의 전반적인 내용 및 당해 기술 분야의 통상적인 기술 상식을 토대로 해석될 수도 있다. 또한, 본 명세서에 첨부된 각 도면에 기재된 동일한 참조번호 또는 부호는 실질적으로 동일한 기능을 수행하는 부품 또는 구성요소를 나타낸다. 설명 및 이해의 편의를 위해서 서로 다른 실시 예들에서도 동일한 참조번호 또 는 부호를 사용하여 설명한다. 즉, 복수의 도면에서 동일한 참조 번호를 가지는 구성요소가 모두 도시되어 있다 고 하더라도, 복수의 도면들이 하나의 실시 예를 의미하는 것은 아니다. 또한, 본 명세서 및 청구범위에서는 구성요소들 간의 구별을 위하여 \"제1\", \"제2\" 등과 같이 서수를 포함하는 용어가 사용될 수 있다. 이러한 서수는 동일 또는 유사한 구성요소들을 서로 구별하기 위하여 사용하는 것이며 이러한 서수 사용으로 인하여 용어의 의미가 한정 해석되어서는 안 된다. 일 예로, 이러한 서수와 결합된 구성 요소는 그 숫자에 의해 사용 순서나 배치 순서 등이 제한되어서는 안 된다. 필요에 따라서는, 각 서수들은 서로 교체되어 사용될 수도 있다. 본 명세서에서 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함하다\" 또는 \"구성되다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이 들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성 요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 본 개시의 실시 예에서 \"모듈\", \"유닛\", \"부(Part)\" 등과 같은 용어는 적어도 하나의 기능이나 동작을 수행하는 구성요소를 지칭하기 위한 용어이며, 이러한 구성요소는 하드웨어 또는 소프트웨어로 구현되거나 하드웨어 및 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 \"모듈\", \"유닛\", \"부(Part)\" 등은 각각이 개별적인 특정 한 하드웨어로 구현될 필요가 있는 경우를 제외하고는, 적어도 하나의 모듈이나 칩으로 일체화되어 적어도 하나 의 프로세서로 구현될 수 있다. 또한, 본 개시의 실시 예에서, 어떤 부분이 다른 부분과 연결되어 있다고 할 때, 이는 직접적인 연결뿐 아니라, 다른 매체를 통한 간접적인 연결의 경우도 포함한다. 또한, 어떤 부분이 어떤 구성요소를 포함한다는 의미는, 특별히 반대되는 기재가 없는 한 다른 구성요소를 제외하는 것이 아니라 다른 구성요소를 더 포함할 수 있는 것 을 의미한다. 로봇용 정보 모델은 객체 지향 모델의 항목들로 구성되어 있지만, 이러한 항목들의 각 속성으로 들어가는 입력 은 XML 혹은 Json 포맷의 데이터로 입력된다. 입력의 내용이 많기 때문에 모듈의 종류에 따라 입력의 내용들을 줄이는 것이 필요하며, 특히 입력 데이터 중에는 모듈 ID를 생성할 때 필요한 내용도 있다. 도 1은 본 개시의 일 실시 예에 따른 정보 모델에 있어, 다양한 항목을 구분하여 도시한 도면이다. 정보 모델은 하나 이상의 기능을 수행할 수 있는 모듈에 대한 데이터 시트이며, 모듈의 사용에 관련한 모든 정 보가 포함되어 있다. 정보 모델은 로봇용 정보 모델, 빌딩 정보 모델 등과 같이 로봇의 설계, 개발, 운영, 유지 보수 및 폐기에도 활용될 수 있다. 도 1을 참조하면, moduleName(모듈 이름), description(설명), manufacturer(제조자), examples(예제), idnType(모듈 유형), properties(속성), ioVariables(입출력 변수), status(상태), services(서비스(기능)), infra(인프라), safeSecure(안전/보안), modelling(모델링), execForm(실행가능 형식) 등의 항목이 구비될 수 있다. 도 2는 본 개시의 일 실시 예에 따라 정보 모델(: 모듈)을 구성하는 하나 이상의 항목을 입력 받기 위한 전자 장치의 제어 방법을 설명하기 위한 흐름도이다. 도 2를 참조하면, 전자 장치는 사용자 입력에 따라 획득된 모듈 ID를 바탕으로 모듈의 유형(type)를 식별할 수 있다(S210).이때, 전자 장치는 사용자 입력에 따라 획득된 모듈 ID를 바탕으로 기본, 복합, 소프트웨어, 하드웨어, 안전 모 드, 및 보안 모드 중 적어도 하나와 관련된 모듈의 유형을 식별할 수 있다. 다만, 모듈 ID가 소프트웨어 및 하드웨어 중 어느 하나에도 해당되지 않는 경우, 전자 장치는 에러를 식별할 수 있다. 이 경우, 전자 장치는 사용자로 하여금 모듈 ID를 새롭게 입력하도록 요청하는 적어도 하나의 메시지를 제공할 수 있다. 모듈의 유형이 식별되면, 전자 장치는 복수의 항목 중 식별된 유형에 매칭되는 적어도 하나의 항목을 선택할 수 있다(S220). 관련하여, 도 3은 모듈의 ID 및 유형에 대한 정보를 예시적으로 표현한 것이다. 도 3을 참조하면, 모듈의 유형 은 Basic(기본) 모듈 혹은 Comp(조합) 모듈에 해당할 수 있고, SW Aspect(측면) 및/또는 HW Aspect를 포함할 수 있으며, Safety Mode를 포함할 수 있고, Security Mode를 포함할 수 있다. 그 결과, 이하 표 1과 같이 다양한 유형이 선택될 수 있다. 표 1 번호 BasicCompSW AspectHW AspectSafety ModeSecurity Mode설명 1 0 0 1 0 0Basic 모듈이면서, HW 측면만 있으며, Safety 및 Security를 지원하지 않음 2 0 0 1 0 1Basic 모듈이면서, HW 측면만 있으며, Safety는 지원하지 않지만 Security는 지 원함 3 0 0 1 1 0Basic 모듈이면서, HW 측면만 있으며, Safety는 지원하지만 Security는 지원하지 않음 4 0 0 1 1 1Basic 모듈이면서, HW 측면만 있으며, Safety 및 Security를 지원함 5 0 1 0 0 0Basic 모듈이면서, SW 측면만 있으며, Safety 및 Security를 지원하지 않 6 0 1 0 0 1Basic 모듈이면서, SW 측면만 있으며, Safety는 지원하지 않지만 Security는 지 원함 7 0 1 0 1 0Basic 모듈이면서, SW 측면만 있으며, Safety는 지원하지만 Security는 지원하지 않음 8 0 1 0 1 1Basic 모듈이면서, SW 측면만 있으며, Safety 및 Security를 지원함 9 0 1 1 0 0Basic 모듈이면서, HW 및 SW 측면이 동시 에 있으며, Safety 및 Security를 지원하 지 않 100 1 1 0 1Basic 모듈이면서, HW 및 SW 측면만 있으 며, Safety는 지원하지 않지만 Security는 지원함 110 1 1 1 0Basic 모듈이면서, HW 및 SW 측면만 있으 며, Safety는 지원하지만 Security는 지원 하지 않음 120 1 1 1 1Comp 모듈이면서, HW 및 SW 측면만 있으며, Safety 및 Security를 지원함 131 0 1 0 0Comp 모듈이면서, HW 측면만 있으며, Safety 및 Security를 지원하지 않음 141 0 1 0 1Comp 모듈이면서, HW 측면만 있으며, Safety는 지원하지 않지만 Security는 지 원함 151 0 1 1 0Comp 모듈이면서, HW 측면만 있으며, Safety는 지원하지만 Security는 지원하지 않음 161 0 1 1 1Comp 모듈이면서, HW 측면만 있으며, Safety 및 Security를 지원함 171 1 0 0 0Comp 모듈이면서, SW 측면만 있으며, Safety 및 Security를 지원하지 않181 1 0 0 1Comp 모듈이면서, SW 측면만 있으며, Safety는 지원하지 않지만 Security는 지 원함 191 1 0 1 0Comp 모듈이면서, SW 측면만 있으며, Safety는 지원하지만 Security는 지원하지 않음 201 1 0 1 1Basic 모듈이면서, SW 측면만 있으며, Safety 및 Security를 지원함 211 1 1 0 0Comp 모듈이면서, HW 및 SW 측면이 동시에 있으며, Safety 및 Security를 지원하지 않 221 1 1 0 1Comp 모듈이면서, HW 및 SW 측면만 있으며, Safety는 지원하지 않지만 Security는 지원함 231 1 1 1 0Comp 모듈이면서, HW 및 SW 측면만 있으며, Safety는 지원하지만 Security는 지원하지 않음 241 1 1 1 1Comp 모듈이면서, HW 및 SW 측면만 있으며, Safety 및 Security를 지원함 관련하여, 도 4a는 본 개시의 일 실시 예에 따른 전자 장치가 사용자 입력에 따라 모듈의 유형을 식별하는 동작 을 설명하기 위한 알고리즘이다. 도 4a를 참조하면, 전자 장치는 사용자 입력에 따라 Basic(기본) 모듈 여부, Comp(조합) 모듈 여부, SW Aspect(측면) 포함 여부, HW Aspect 포함 여부 등을 순차적으로 식별할 수 있다. 예 를 들어, SW 및 HW 모두에 해당하지 않는 경우(SW Aspect: 0, HW Aspect: 0) 에러가 유형 식별에 에러가 식별 될 수 있다. 또한, 도 4b 역시 본 개시의 일 실시 예에 따른 전자 장치가 사용자 입력에 따라 모듈의 유형을 식별하는 동작 을 설명하기 위한 알고리즘이다. 도 4b를 참조하면, 전자 장치는 사용자 입력에 따라 Safety Mode 포함 여부, Security Mode 포함 여부 등을 순차적으로 식별할 수 있다. 복수의 항목은, 도 1을 통해 도시된 다양한 항목들에 해당할 수 있다. 식별된 유형에 따라 정보 모델을 구성하는 항목의 구성이 달라질 수 있으므로, 전자 장치는 식별된 유형에 맞는 하나 이상의 항목을 선택할 수 있다. 즉, 전자 장치는 식별된 유형에 따라 다른 화면을 제공하면서 항목 별 데 이터를 입력 받을 수 있다. 구체적으로, 식별된 유형이 안전 모드 및 보안 모드 중 적어도 하나에 해당하는 경우, 전자 장치는 safesecure 항목을 선택할 수 있다. 기타, 유형 별로 Variables, Services, Infra 등의 항목을 선택할 수 있다. 그리고, 전자 장치는 선택된 항목에 매칭되는 데이터를 입력 받기 위한 적어도 하나의 UI(User Interface)를 제 공할 수 있다(S230). 여기서, UI는 각 항목에 매칭되는 데이터를 입력 받기 위한 적어도 하나의 입력 창으로 구 성되거나, 복수의 선택 항목으로 구성된 선택 창으로 구성되는 등 다양한 형태의 시각적 UI로서 디스플레이 될 수 있으나, 이에 한정되지 않는다. 유형에 따라 각 항목을 입력 받기 위한 UI(ex. 화면)의 구성이 달라질 수 있다. 예를 들어, 소프트웨어를 포함 하는 유형이 선택된 경우, Variables 및 Services 등의 항목을 입력 받는 과정에서, 소프트웨어와 관련된 클래 스형 및 열거형에 각각 해당하는 입력창이 제공될 수 있다. 예를 들어, 하드웨어를 포함하는 유형이 선택된 경우, Variables 및 Services 등의 항목을 입력 받는 과정에서, 하드웨어 구성과 관련된 입력 창이 제공될 수 있다. 구체적인 예로, 하드웨어 장치 내지는 기기로부터 입력되는 데이터의 종류 및 활용 동작에 대한 사용자 입력을 수신하기 위한 입력 창이 제공될 수 있다. 항목 별로 사용자 입력에 따라 데이터가 구축되면, 모듈에 대한 정보 모델이 구축될 수 있다. S210 내지 S230의 단계를 포함하는 일련의 과정은, 전자 장치 상에서 적어도 하나의 컴퓨터 프로그램 내지는 소프트웨어의 형태로 제공될 수 있으며, “편집기”와 같은 명칭으로 지칭되어 활용될 수도 있다. 관련하여, 도 5는 본 개시에 따른 전자 장치가 상술한 도 2의 과정을 바탕으로 구체적인 “편집기” 기능을 제 공하는 일 예를 도시한 흐름도이다. 도 5를 참조하면, 전자 장치는 사용자의 데이터 입력에 따라 모듈의 이름, 설명, 제작자, 예시 등을 입력 받을 수 있다. 해당 항목들에 대한 사용자 입력에 따라, 모듈의 유형이 식별될 수 있다. 앞서 도 3에 도시된 VID는 벤더 식별자인데, 도 5를 참조하면, 전자 장치는 벤더 이름 등을 활용하여 UUID 식별 자를 생성할 수 있다. 다만, 사용자가 벤더 이름 등을 다른 이름으로 넣어주면 다른 UUID가 나오게 되는 문제가 있다. 사용하는 UUID를 생성함에 있어서 Namespace와 Name값이 필요하다. 이에 따라 predefined UUID 혹은 Namespace와 Name값이 동일하다면 동일한 UUID가 생성되지만, 이러한 값들에 있어서 한 글자라도 틀리면 다른 UUID가 생성될 수 있다. 예를 들어, 회사 정식 이름이 “Company Ltd.”라고 가정하였을 때, 같은 이름을 넣어 주면 같은 UUID가 생성되지만, 문자 하나가 다른 이름으로 입력된 경우, 예로 “company Ltd.”, “Company ltd.”, “Company Ltd” 등이 입력되면 다른 UUID가 만들어지므로 이러한 오류를 줄이는 것이 필요하다. 이러한 오류를 없애기 위하여, 본 개시에 따른 전자 장치는 이하 알고리즘에 따라 동작을 수행할 수 있다. 일 실시 예로, 전자 장치는 1) 각 회사별로 맞춤형으로 구비된 정보 모델의 편집기를 포함할 수 있다. 이는 UUID v.5의 입력을 위하여 해당 회사용으로 기정의된 UUID(혹은 name space 등)와 회사 이름(혹은 URL)으로 프 로그램에 저장하여 프로그램된 편집기에 해당할 수 있다. 또는, 전자 장치는 2) UUID 정보 파일을 사용하여 일반화된 정보모델 편집기를 포함할 수도 있다. 이는 UUID v.5의 입력을 위하여 해당 회사용으로 기정의된 UUID(혹은 name space 등)과 회사 이름(혹은 URL)을 파일로 제 공하고, 해당 파일에는 검증 코드를 넣어서 기 입력된 데이터가 변경되었는지 확인할 수 있게 하는 방식이다. 다시 도 5를 참조하면, 모듈의 유형(IdnType)이 식별됨에 따라, 전자 장치는 해당 유형에 매칭되는 복수의 항목 (ex. variables, services, infra, safeSecure, modelling, exeform)에 대한 사용자 입력을 바탕으로 항목 별 데이터를 수집할 수 있다. 도 5의 경우, 수집되는 항목에 safeSecure가 포함되어 있으므로, 도 5에서 식별된 유 형(IdnType)은 Safety Mode 및 Security Mode 중 적어도 하나를 포함하는 것으로 확인된다. 한편, 이하 도 6a 내지 도 6g는 각 항목 별 구성을 예시적으로 도시한 것이다. 먼저, 도 6a는 항목 IDnType의 구성을 도시한 것이다. 모듈의 유형은, 모듈 ID, 정보 모델의 버전 등으로 구성 될 수 있다. '정보 모델 버전'은 정보 모델의 버전 번호이다. '모듈 ID'는 로봇 내 모듈의 고유 식별자이다. VID는 UUID v.5를 사용하고, PID의 Type 은 모듈 종류를 식별하기 위하여 사용한다. '하드웨어 측면'과 '소프트 웨어 측면'은 복합 모듈에 있어서만 관련된다. 다시 말하자면, 모듈 하나로만 구성된 기본 모듈에는 이러한 정 보를 사용하지 않고, 두 개 이상의 모듈들로 구성될 때 사용될 수 있다. 하드웨어 측면에서는 기구물 및 전기/ 전자 컴포넌트와 관련된 모듈들을 나열하고 소프트웨어 측면에서는 소프트웨어와 관련된 모듈들을 나열한다. 참 고로 하드웨어 모듈은 소프트웨어 속성을 가지고 있지 않으며, 소프트웨어 모듈 역시 하드웨어 속성을 가지지 않는다. 하드웨어-소프트웨어 모듈이 하드웨어와 소프트웨어 속성을 동시에 가질 수 있다. 참고로, 일부 소프트 웨어 내용을 가지더라도 통신 부분(전기적 신호들을 교환하는 것 포함)을 포함하지 않아 홀로 동작하는 모듈의 경우 하드웨어 모듈이라고 한다. 이러한 속성들은 IDnType의 속성이다. 도 6b는 Properties의 구성을 도시한 것이다. '모듈 속성'(properties)은 일반적으로 모듈 초기화에 사용되는 값들을 정의한다. 모듈을 만들 때 필요한 속성들을 알맞게 정의하여 사용하면 된다. 도 6b를 통해 확인되듯, 사 용자가 임의로 속성들을 만들 수 있다. 도 6c는 IOVariables의 구성을 도시한 것이다. '입력' 과 '출력'은 다른 모듈과 데이터를 송수신하기 위한 변수 의 이름을 기술한다. 이는 해당 모듈의 전역 변수일 수 있고, ROS 모듈에서는 발행자(publisher) 및 구독자 (subscriber)를 여기에서 정의할 수 있다. 즉, 다른 모듈에 공개한 변수 혹은 메모리 공간을 여기에 정의한다. 사용자 혹은 개발자들이 모듈을 만들어 사용할 때 필수적인 변수(향후 정의할 예정)들 외에 임의 변수들을 정의 하면, 어떤 변수들이 사용되는지를 다른 모듈들이 확인하여 사용할 수 있게 되어 있다. 이러한 입력과 출력 관 련 변수들은 모두 XML로 정의하여 사용하게 하므로, 임의의 이름을 가진 변수들을 정의할 수 있다. 한편, Status(상태)는 작동 중인 모듈의 상태를 표시하며, 실제 모듈이 동작 중이어야만 이 값이 변하게 된다. 도 6d는 Services의 구성을 도시한 것이다. '서비스(기능)'는 로봇 서비스를 위해 모듈이 제공하고 활용하는 인 터페이스들을 기술하며, IDL(Interface Definition Language) 및/혹은 XML로 정의할 수 있다. 따라서 사용자 혹은 개발자들이 임의로 인터페이스들을 정의하여 사용할 수 있다. 도 6e는 Infra의 구성을 도시한 것이다. '인프라'는 모듈에서 일반적으로 사용하거나 연결하는 하드웨어 및/또 는 소프트웨어를 나열한다. 이의 예에는 모듈이 사용하는 전원 종류, ROS와 OPRoS와 같은 미들웨어 종류, 모듈 이 사용하는 필드버스 등의 데이터 버스 종류, mySQL과 같은 DBMS의 종류들을 나열한다. 이에 따라 사용자 혹은개발자가 자신이 원하는 미들웨어를 사용할 수 있다. 특정 미들웨어를 사용할 때는 다른 미들웨어의 모듈과 데 이터 교환을 위한 브릿지 모듈 등을 제공하는 것이 필요할 수 있다. 도 2c에 Services의 구성도가 표시되어 있 다. ServiceProfile에 ifURL 속성이 있는데, 이 속성이 모듈이 사용하는 IDL 파일에 대한 경로를 가지고 있다. 나머지 속성들은 인터페이스들을 정의하는데 사용한다. 도 6f는 SafeSecure의 구성을 도시한 것이다. '안전/보안'은 모듈에서 제공하는 안전 관련 성능 수준과 보안 수 준 관련 정보를 기술한다. 안전 정보는 ISO 13849-1에 정의된 모듈에 대해 안전 관련 성능 수준을 사용하고, 보 안 수준은 보안 조치가 없음을 의미하는 '0'과 IEC 62443-4-2에 정의된 수준 '1' ~ '4'를 사용한다. 안전과 보 안은 동시에 제공되는 경우도 있지만 모듈별로 한 종류만 제공될 수 있고, 제공되지 않을 수 있다. modelling(모델링)은 모의실험을 위하여 2D/3D 객체의 형상을 포함하여 모의실험을 할 수 있게 하는 정보를 제 공한다. 형상 정보 뿐 아니라 모의실험을 위한 가상 장치 동작 프로그램 관련 정보도 제공한다. 모델링에는 하 나 이상의 시뮬레이터에 대한 정보를 제공할 수 있다. 도 6g는 ExecForm의 구성을 도시한 것이다. 'ExecutableForm'은 모듈의 설계 지원 혹은 모듈의 동작을 위하여 실행되는 프로그램 관련 정보를 제공하며, 해당 프로그램의 위치 및 이 프로그램의 수행에 필요한 라이브러리들 과 동작 방법 등을 제공한다. 한편, 일 실시 예로, 전자 장치는 사용자 정의 데이터형이 있는 폴더(: 저장 공간)를 관리할 수 있다. 이때, 다 양한 항목의 데이터를 입력하기 위한 사용자 입력은 해당 폴더 내에 수집되어 관리될 수 있다. 관련하여, 도 7a는 사용자 정의 데이터형이 있는 폴더를 관리하는 전자 장치의 동작을 설명하기 위한 흐름도이 다. 도 7a는 주로 서비스 및 변수 항목에 관련된 데이터를 관리하기 위한 동작일 수 있다. 정수형, 실수형 등의 기본적인 데이터 형은 정해져 있어 쉽게 제공할 수 있지만, 클래스형과 열거형은 사용자가 임의로 정하므로, 사용자가 원하는 형태로 제공할 수 있어야 한다. 일 예로, 사용자가 제공하는 클래스 혹은 열 거형 포맷을 json 혹은 XML 형태로 설정될 수 있다. 이하 내용은 열거형의 예시(ex. json)이며, 열거형의 이름은 PLSIL Type, MOType, InOutType 등일 수 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "또한, 이하 내용은 클래스형의 예시(ex. XML)이며, 클래스형의 이름은 PoseType, OrientationType 등일 수 있 다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "정보 모델에서 정의되고 사용되는 열거형과 클래스 형은 정보모델 편집기가 사용하는 지정된 디렉토리(혹은 URL)에서 저장되어 필요하면 활용할 수 있게 한다. 또한 사용자는 필요한 열거형과 클래스들을 json 혹은 XML로 정의하여 해당 디렉토리 혹은 사용자 정의 디렉토리에 저장하여 활용할 수 있다. 전자 장치는 이러한 클래스형과 열거형을 제공하는 형태로 해당 열거형 혹은 클래스형의 이름을 가진 파일명을 사용하여 제공하거나, 열거형 혹은 클래스 형을 가진 모두 저장하는 파일 명, 예로 열거형인 경우 enum.json, 클래스 형의 경우 class.xml로 정의하여 사용할 수 있다. 한편, 도 7b는 시스템 정의 데이터형이 있는 폴더를 관리하는 전자 장치의 동작을 설명하기 위한 흐름도이다. 시스템 정의 데이터형과 사용자 정의 데이터형은 시스템에서 제공하는 데이터형을 말하고 사용자 정의 데이터형 은 사용자가 정의하는 데이터형이다. 정수형, 실수형, 문자형, 스트링(String) 형 혹은 문자배열형은 기본적으 로 사용할 수 있는 데이터형이지만, 그림 1의 열거형과 그림 2의 클래스형은 시스템 혹은 사용자가 정의하여 사 용하여야 한다. 따라서 이들을 정의하여 쉽게 사용하도록 하는 것이 중요하다. 시스템 정의 형은 미리 시스템에서 JSON 혹은 XML로 정의되어 있으므로, 도 7b와 같이 하면, 화면에서 해당 내 용을 볼 수 있다. 즉, 도 7b에서 클래스형을 택하면, 시스템에서 정의된 클래스 유형 이름(예: PoseType, OrientationType) 들이 표시되고 PoseType을 선택하면 화면에 이하와 같이 선택한 클래스의 내용이 표시될 수 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이 경우, 사용자가 맞는 클래스 형인지 확인하여 선택하게 한다. 물론 열거형을 택하면, 시스템에서 정의된 열 거형 이름(예: PLSILType, MOType, InOutType)들이 표시되고, 이 중에서 MOType을 선택하면 이하와 같은 화면 이 표시되어 선택한 내용이 맞는지 확인한다. 참고로 이 예는 C++이고, 선택된 언어에 따라 다르게 표시될 수 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "만일 사용자가 시스템에서 제공하는 열거형 혹은 클래스형이 알맞지 않다고 하면 전자 장치를 통해 만들 수도 있다. 이러한 데이터들은 userdefinedclass.xml 혹은 userdefinedenum.json 에 정의할 수 있다. 전자는 클래스 를 저장하는 파일이고 후자는 열거형을 저장하는 파일이다. 열거형은 xml로도 저장할 수 있다. 예를 들어, 이하와 같이 열거형은 Direction, Shape이 추가되고, 클라스형은 RobotPose3, RobotPose6가 추가될 수 있다."}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "item": 6, "content": "도 7b에서와 같이 도 7a에서 같이 수행하면, 열거형인 경우 화면에 Direction, Shape가 표시되고, 클라스형인 경우 RobotPose3, RobotPose6가 표시된다. 이 내용을 확인하고 싶다면 해당 내용을 클릭하면 상세 내용이 표시 된다. 이러한 열거형과 클라스형은 서비스 및 변수 정의 시 사용하면 된다. 한편, 도 8은 본 개시의 다양한 실시 예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다. 도 8을 참조하면, 전자 장치는 메모리 및 프로세서를 포함한다. 전자 장치는 하나 이상의 컴퓨터로 구성된 장치 내지 시스템으로 구현될 수 있다. 전자 장치는 서버로 구현될 수도 있고, 데스크탑 PC, 노트북 PC, 태블릿 PC, 스마트폰 등 단말 기기로 구현될 수도 있다. 메모리는 전자 장치의 구성요소들의 전반적인 동작을 제어하기 위한 운영체제(OS: Operating System) 및 전자 장치의 구성요소와 관련된 적어도 하나의 인스트럭션 또는 데이터를 저장하기 위한 구성이다. 메모리는 ROM, 플래시 메모리 등의 비휘발성 메모리를 포함할 수 있으며, DRAM 등으로 구성된 휘발성 메모 리를 포함할 수 있다. 또한, 메모리는 하드 디스크, SSD(Solid state drive) 등을 포함할 수도 있다. 메모리는 전자 장치로 하여금 상술한 다양한 동작을 수행하도록 하는 컴퓨터 프로그램/소프트웨어를 저장할 수 있다. 프로세서는 전자 장치를 전반적으로 제어하기 위한 구성이다. 구체적으로, 프로세서는 메모리 와 연결되는 한편 메모리에 저장된 적어도 하나의 인스트럭션을 실행함으로써 본 개시의 다양한 실시 예들에 따른 동작을 수행할 수 있다. 프로세서는 CPU, AP, DSP(Digital Signal Processor) 등과 같은 범용 프로세서, GPU, VPU(Vision Processing Unit) 등과 같은 그래픽 전용 프로세서 또는 NPU와 같은 인공지능 전용 프로세서 등을 포함할 수 있 다. 인공지능 전용 프로세서는, 특정 인공지능 모델의 훈련 내지는 이용에 특화된 하드웨어 구조로 설계될 수 있다. 프로세서는 메모리에 저장된 컴퓨터 프로그램 등을 실행하여 상술한 다양한 동작을 수행할 수 있다. 전자 장치는 메모리 및 프로세서 외에 사용자 입력부, 통신부 등을 더 포함할 수 있 다. 사용자 입력부는 다양한 사용자 명령 내지는 정보를 입력 받기 위한 구성이다. 전자 장치가 사용자 등의 단말 기기로 구현된 경우, 사용자 입력부는 적어도 하나의 버튼, 터치 패드, 마이크, 카메라 등을 포 함할 수 있다. 또는, 전자 장치는 마우스, 키보드 등 다양한 사용자 입력 장치와 유무선으로 연결되어 사용자 입력을 수 신할 수도 있다. 통신부는 다양한 유무선 통신방식으로 적어도 하나의 외부 장치와 통신을 수행하기 위한 회로, 모듈, 칩 등을 포함할 수 있다. 통신부는 다양한 유무선 통신방식으로 적어도 하나의 외부 장치와 통신을 수행하기 위한 회로, 모듈, 칩 등을 포함할 수 있다. 통신부는 다양한 네트워크를 통해 외부 장치와 연결될 수 있다. 네트워크는 영역 또는 규모에 따라 개인 통신망(PAN; Personal Area Network), 근거리 통신망(LAN; Local Area Network), 광역 통신망(WAN; Wide Area Network) 등일 수 있으며, 네트워크의 개방성에 따라 인트라넷 (Intranet), 엑스트라넷(Extranet), 또는 인터넷(Internet) 등일 수 있다. 통신부는 LTE(long-term evolution), LTE-A(LTE Advance), 5G(5th Generation) 이동통신, CDMA(code division multiple access), WCDMA(wideband CDMA), UMTS(universal mobile telecommunications system), WiBro(Wireless Broadband), GSM(Global System for Mobile Communications), DMA(Time Division Multiple Access), WiFi(Wi-Fi), WiFi Direct, Bluetooth, NFC(near field communication), Zigbee 등 다양한 무선 통 신 방식을 통해 외부 장치들과 연결될 수 있다. 또한, 통신부는 이더넷(Ethernet), 광 네트워크(optical network), USB(Universal Serial Bus), 선더볼트 (ThunderBolt) 등의 유선 통신 방식을 통해 외부 장치들과 연결될 수도 있다. 일 실시 예로, 전자 장치는 통신부를 통해 상술한 컴퓨터 프로그램을 외부 장치로 전달하거나 또는 외부 장치로부터 상술한 컴퓨터 프로그램을 다운로드할 수 있다. 또한, 전자 장치는 적어도 하나의 웹 페 이지 내지는 애플리케이션의 형태로 하나 이상의 외부 장치와 연동되어 상술한 다양한 동작을 수행할 수도 있다. 상술한 실시 예들에 따라 전자 장치는 복수의 모듈에 대한 복수의 정보 모델을 생성할 수 있다. 이때, 전자 장 치는 복수의 정보 모델 중 동일한 유형에 해당하는 정보 모델들을 식별할 수 있다. 여기서, 전자 장치는 동일한 유형에 해당하는 정보 모델들의 일부 항목(ex. Variables, Services, Infra) 내 데 이터를 비교할 수 있다. 여기서, 적어도 하나의 항목에 대하여 각 정보 모델 간의 유사도가 비교될 수 있다. 유사도는, 데이터가 유사한 정도를 의미하며, 공통되는 단어의 수가 많거나 혹은 공통되는 개체(ex. 특정 데이 터)가 많을수록 높게 산출될 수 있다. 유사도는, 항목 별로 산출될 수 있다. 이때, 전자 장치는 적어도 하나의 항목에 대하여 유사도가 임계치 이상인 둘 이상의 정보 모델들을 선택하고, 선택된 정보 모델들에 대한 정보를 제공할 수 있다. 예를 들어, 제1 정보 모델과 제2 정보 모델의 입력(IOvariables)을 구성하는 개체들이 대부분 동일한 경우, 제1 정보 모델에 대한 정보와 제2 정보 모델에 대한 정보가 각각 사용자에게 제공될 수 있다. 이때, 전자 장치는 두 정보 모델의 일체화를 추천하는 추천 정보를 제공할 수 있으며, 구체적으로, 전자 장치는 유사도가 임계치 이상인 항목, 해당 항목 내에서 일치하는 단어 등에 대한 정보를 사용자에게 제공할 수 있다. 일체화는, 둘 이상의 정보 모델을 하나의 정보 모델로 통합하는 과정을 의미한다. 여기서, 두 정보 모델의 일체화를 위한 사용자의 요청이 수신되면, 전자 장치는 해당 항목과 관련한 편집 기능 을 제공할 수 있다. 예를 들어, 제1 정보 모델과 제2 정보 모델의 입력(IOvariables)을 구성하는 개체들이 대부 분 동일한 경우, 전자 장치는 제1 정보 모델의 IOvariables를 구성하는 제1 데이터 및 제2 정보 모델의 IOvariables를 구성하는 제2 데이터를 포함하는 데이터가 입력되어 있는 별도의 통합 입력 창을 제공할 수 있다. 그 결과, 사용자는 두 정보 모델의 IOvariables에 해당하는 정보를 비교하면서 데이터를 편집할 수 있다. 해당 항목(ex. IOvariables)의 편집이 완료되면, 전자 장치는 나머지 항목들에 대한 입력 창을 순차적으로 제공 할 수 있다. 한편, 상술한 추천 정보가 제공되었음에도 일체화를 위한 사용자의 요청이 수신되지 않은 경우, 전자 장치는 상 술한 유사도의 임계치를 증가하는 업데이트를 수행할 수 있다. 그 결과, 추천 정보의 제공 빈도가 점차 정제될 수 있으며, 사용자 스스로가 일체화를 합당하다고 여길 만큼 정보 모델들 간의 데이터가 유사한 상황에서만 일 체화에 대한 추천이 합리적으로 제공될 수 있다. 또한, 일 실시 예로, 전자 장치는 일체화 전의 제1 정보 모델 및 제2 정보 모델 각각의 데이터 크기가 더해진 제1 값을, 일체화가 수행된 통합 정보 모델의 데이터 사이즈에 해당하는 제2 값과 비교할 수 있다. 여기서, 만약 제1 값에서 임계 용량만큼 차감된 값보다 제2 값이 더 큰 경우, 전자 장치는 상술한 유사도의 임 계치를 증가하는 업데이트를 수행할 수 있다. 이는, 일체화를 통해 데이터 크기가 임계 용량 이상 줄어들 수 있 는 경우에만 일체화를 수행하기 위한 방안이다. 한편, 이상에서 설명된 다양한 실시 예들은 서로 저촉되지 않는 한 복수의 실시 예가 결합되어 구현될 수 있다. 한편, 이상에서 설명된 다양한 실시 예들은 소프트웨어(Software), 하드웨어(Hardware) 또는 이들의 조합된 것 을 이용하여 컴퓨터(Computer) 또는 이와 유사한 장치로 읽을 수 있는 기록 매체 내에서 구현될 수 있다. 하드웨어적인 구현에 의하면, 본 개시에서 설명되는 실시 예들은 ASICs(Application Specific Integrated Circuits), DSPs(Digital Signal Processors), DSPDs(Digital Signal Processing Devices), PLDs(Programmable Logic Devices), FPGAs(Field Programmable Gate Arrays), 프로세서(Processors), 제어기 (Controllers), 마이크로 컨트롤러(Micro-controllers), 마이크로 프로세서(Microprocessors), 기타 기능 수행 을 위한 전기적인 유닛(Unit) 중 적어도 하나를 이용하여 구현될 수 있다. 일부의 경우에 본 명세서에서 설명되는 실시 예들이 프로세서 자체로 구현될 수 있다. 소프트웨어적인 구현에 의하면, 본 명세서에서 설명되는 절차 및 기능과 같은 실시 예들은 별도의 소프트웨어 모듈들로 구현될 수 있다. 상술한 소프트웨어 모듈들 각각은 본 명세서에서 설명되는 하나 이상의 기능 및 작동을 수행할 수 있다. 한편, 상술한 본 개시의 다양한 실시 예들에 따른 각 장치에서의 처리동작을 수행하기 위한 컴퓨터 명령어 (Computer Instructions) 또는 컴퓨터 프로그램은 비일시적 컴퓨터 판독 가능 매체(Non-transitory Computer- readable Medium)에 저장될 수 있다. 이러한 비일시적 컴퓨터 판독 가능 매체에 저장된 컴퓨터 명령어 또는 컴 퓨터 프로그램은 전자 장치 등 특정 기기의 프로세서에 의해 실행되었을 때 상술한 다양한 실시 예에 따른 전자 장치의 동작을 상술한 특정 기기가 수행하도록 한다. 비일시적 컴퓨터 판독 가능 매체란 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체 가 아니라 반영구적으로 데이터를 저장하며, 기기에 의해 판독(Reading)이 가능한 매체를 의미한다. 비일시적컴퓨터 판독 가능 매체의 구체적인 예로는, CD, DVD, 하드 디스크, 블루레이 디스크, USB, 메모리카드, ROM 등 이 있을 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2022-0166399", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 7, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시에 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어서는 안 될 것이다."}
{"patent_id": "10-2022-0166399", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시 예에 따른 정보 모델에 있어, 다양한 항목을 구분하여 도시한 도면, 도 2는 본 개시의 일 실시 예에 따라 정보 모델(: 모듈)을 구성하는 하나 이상의 항목을 입력 받기 위한 전자 장치의 제어 방법을 설명하기 위한 흐름도, 도 3은 모듈의 ID 및 유형에 대한 정보를 예시적으로 표현한 도면, 도 4a 내지 도 4b는 모듈의 유형을 판단하는 과정을 설명하기 위한 알고리즘들, 도 5는 본 개시에 따른 전자 장치가 “편집기” 기능을 제공하는 일 예를 도시한 흐름도, 도 6a 내지 도 6g는 각 항목 별 구성을 예시적으로 도시한 도면들, 도 7a 내지 도 7b는 각각 사용자 정의 데이터형 및 시스템 정의 데이터형의 폴더를 관리하는 전자 장치의 동작 을 설명하기 위한 도면들, 그리고 도 8은 본 개시의 다양한 실시 예에 따른 전자 장치의 구성을 설명하기 위한 블록도이다."}
