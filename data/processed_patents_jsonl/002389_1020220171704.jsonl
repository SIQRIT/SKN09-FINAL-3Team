{"patent_id": "10-2022-0171704", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0086296", "출원번호": "10-2022-0171704", "발명의 명칭": "분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템 및 방법", "출원인": "한국전자기술연구원", "발명자": "오승택"}}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "분산 컴퓨팅 환경에서의 엣지 자원 운용 방법에 있어서,복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집하는 단계;상기 가속기 정보 및 위치 정보에 기초하여 복수의 엣지 디바이스의 성능을 측정하는 단계;상기 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위한 배포 대상 어플리케이션의 자원 요구 용량을 산출하는 단계;상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 단계; 및상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 단계를포함하는,분산 컴퓨팅 환경에서의 엣지 자원 운용 방법."}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집하는 단계는,각 엣지 디바이스 내 가속기의 개수, 가속기의 제조사명, 모델명, 메모리 용량 및 버전 정보를 포함하는 가속기정보를 수집하는 것인,분산 컴퓨팅 환경에서의 엣지 자원 운용 방법."}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 단계는,상기 엣지 디바이스의 위치 정보에 기초하여 배포 대상 테스트베드에 위치한 엣지 디바이스를 후보 엣지 디바이스로 선정하는 단계; 상기 선정된 후보 엣지 디바이스 중 성능 측정 결과가 자원 요구 용량을 만족하는지 여부를 판단하는 단계; 및상기 판단 결과에 기초하여 상기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계를포함하는,분산 컴퓨팅 환경에서의 엣지 자원 운용 방법."}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 복수의 엣지 디바이스 각각에 대한 대역폭 및 지연 시간을 포함하는 서비스 품질 정보를 수집하는 단계를더 포함하고,공개특허 10-2024-0086296-3-상기 판단 결과에 기초하여 상기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계는,상기 복수의 엣지 디바이스에 대한 상기 서비스 품질 정보가 소정의 대역폭 및 지연 시간을 포함하는 서비스 품질 제한 조건을 만족하는지 여부를 판단하는 단계; 및상기 판단 결과에 기초하여 상기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계를포함하는,분산 컴퓨팅 환경에서의 엣지 자원 운용 방법."}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 단계는,상기 선정된 엣지 디바이스에 기 배포되어 실행 중인 컨테이너가 존재하는 경우, 상기 성능 측정 결과 및 자원요구 용량에 기초한 우선순위 중 차순위 엣지 디바이스로 상기 컨테이너를 배포하는 것인,분산 컴퓨팅 환경에서의 엣지 자원 운용 방법."}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 단계는,상기 배포 대상 어플리케이션의 자원 요구 용량에 대한 소정의 긴급도를 더 고려하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 것인,"}
{"patent_id": "10-2022-0171704", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집하고, 상기 가속기 정보 및 위치정보에 기초하여 복수의 엣지 디바이스의 성능을 측정하는 성능 측정부,상기 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위한 배포 대상 어플리케이션의 자원 요구 용량을 산출하는 자원 요구사항 판단부,상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 엣지 노드 선정부 및 상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 컨테이너배포부를 포함하는,분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템이 제공된다. 상기 시스템은 복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집하고, 상기 가속기 정보 및 위치 정보에 기초하여 복수의 엣지 디바이 스의 성능을 측정하는 성능 측정부, 상기 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위한 배포 대 상 어플리케이션의 자원 요구 용량을 산출하는 자원 요구사항 판단부, 상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 엣지 노드 선정부 및 상기 배 포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 컨테이너 배포부 를 포함한다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템 및 방법에 관한 것이다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "스마트 팜, 스마트 팩토리 등 다양한 환경에서 딥러닝 기술이 적용되고 있다. 해당 환경에서는 성능이 제한적인 엣지 디바이스를 주로 사용한다. 딥러닝 기술이 엣지 디바이스에 적용되기 위해서는 클라우드나 서버에서 소정의 방식에 따라 모델을 학습하고 이를 각 엣지 디바이스에 효율적으로 배포하고 관리할 수 있어야 한다. 이와 같은 요구에 따라 쿠버네티스(Kubernetes)나 도커 스웜(Docker Swarm)과 같은 클라우드 내에서 자원 관리 를 할 수 있는 컨테이너 오케스트레이션(Container Orchestration) 도구들이 각광받고 있다. 컨테이너 오케스트 레이션은 여러 컨테이너의 배포 프로세스를 최적화하기 위한 자동화 도구로 서버 관리자의 역할을 대신 수행한 다. 이러한 컨테이너 오케스트레이션 도구는 엣지 디바이스의 가속기, 즉 GPU 자원에 대한 정형적인 표현을 하기 까 다롭다. 현재 널리 사용되고 있는 오케스트레이션 도구들은 특정 엣지 디바이스가 얼마만큼의 성능을 갖고 있는 지 고려되고 있지 않으며, 단지 GPU의 유무나 개수 정도의 정보를 제공하고 있는 수준이다. 엣지 디바이스의 구체적인 성능과 위치 정보를 알고 있다면 자원을 보다 효율적으로 관리하기에 용이하다. 따라 서, 엣지 디바이스의 성능 정보 및 위치 정보를 기반으로 배포하고자 하는 컨테이너의 모델에 따라 최적의 엣지 디바이스를 찾아 배포하여 효율적인 관리가 가능하도록 하는 기술이 필요하다. 선행기술문헌 특허문헌 (특허문헌 0001) 공개특허공보 제10-2021-0036226호 (2021.04.02)"}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 실시예는, 복수의 엣지 디바이스가 운용되는 분산 컴퓨팅 환경에서, 기존 오케스트레이션 기술과는 달리, 엣지 디바이스의 위치 정보 및 성능 정보와 배포 대상 어플리케이션의 자원 요구 정보를 고려하여 배포 대상 어플리케이션 운용이 가능한 최적의 엣지 디바이스를 선정하여, 해당 엣지 디바이스로 어플리케이션에 상 응하는 컨테이너를 배포하도록 하는, 분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템 및 방법을 제공한다. 다만, 본 실시예가 이루고자 하는 기술적 과제는 상기된 바와 같은 기술적 과제로 한정되지 않으며, 또 다른 기 술적 과제들이 존재할 수 있다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 기술적 과제를 달성하기 위한 기술적 수단으로서, 본 발명의 제1 측면에 따른, 분산 컴퓨팅 환경에서의 엣지 자원 운용 방법은 복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집하는 단계; 상기 가속기 정보 및 위치 정보에 기초하여 복수의 엣지 디바이스의 성능을 측정하는 단계; 상기 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위한 배포 대상 어플리케이션의 자원 요구 용량을 산출하는 단계; 상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 단계; 및 상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 단계를 포함한다. 본 발명의 일부 실시예에 있어서, 상기 복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하 여 수집하는 단계는, 각 엣지 디바이스 내 가속기의 개수, 가속기의 제조사명, 모델명, 메모리 용량 및 버전 정 보를 포함하는 가속기 정보를 수집할 수 있다. 본 발명의 일부 실시예에 있어서, 상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케 이션을 운용하기 위한 엣지 디바이스를 선정하는 단계는, 상기 엣지 디바이스의 위치 정보에 기초하여 배포 대 상 테스트베드에 위치한 엣지 디바이스를 후보 엣지 디바이스로 선정하는 단계; 상기 선정된 후보 엣지 디바이 스 중 성능 측정 결과가 자원 요구 용량을 만족하는지 여부를 판단하는 단계; 및 상기 판단 결과에 기초하여 상 기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계를 포함할 수 있다. 본 발명의 일부 실시예는, 상기 복수의 엣지 디바이스 각각에 대한 대역폭 및 지연 시간을 포함하는 서비스 품 질 정보를 수집하는 단게를 더 포함하고, 상기 판단 결과에 기초하여 상기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계는, 상기 복수의 엣지 디바이스에 대한 상기 서비스 품질 정보가 소정의 대역폭 및 지연 시간을 포함하는 서비스 품질 제한 조건을 만족하는지 여부를 판단하는 단계; 및 상기 판단 결 가에 기초하여 상기 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정하는 단계를 포함할 수 있 다. 본 발명의 일부 실시예에 있어서, 상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 단계는, 상기 선정된 엣지 디바이스에 기 배포되어 실행 중인 컨테이너가 존재하는 경우, 상기 성능 측정 결과 및 자원 요구 용량에 기초한 우선순위 중 차순위 엣지 디바이스로 상기 컨테이너를 배포할 수 있다. 본 발명의 일부 실시예에 있어서, 상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케 이션을 운용하기 위한 엣지 디바이스를 선정하는 단계는, 상기 배포 대상 어플리케이션의 자원 요구 용량에 대 한 소정의 긴급도를 더 고려하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정할 수 있 다. 또한, 본 발명의 제2 측면에 따른 분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템은 복수의 엣지 디바이스 각각 에 대한 가속기 정보 및 위치 정보를 호출하여 수집하고, 상기 가속기 정보 및 위치 정보에 기초하여 복수의 엣 지 디바이스의 성능을 측정하는 성능 측정부, 상기 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위 한 배포 대상 어플리케이션의 자원 요구 용량을 산출하는 자원 요구사항 판단부, 상기 성능 측정 결과와 자원 요구 용량에 기초하여 상기 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이스를 선정하는 엣지 노드 선정 부 및 상기 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 상기 선정된 엣지 디바이스로 배포하는 컨 테이너 배포부를 포함한다. 이 외에도, 본 발명을 구현하기 위한 다른 방법, 다른 시스템 및 상기 방법을 실행하기 위한 컴퓨터 프로그램을 기록하는 컴퓨터 판독 가능한 기록 매체가 더 제공될 수 있다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "전술한 본 발명의 일 실시예에 의하면, 엣지 디바이스의 가속기 정보와 위치 정보를 활용하여 최적의 엣지 디바 이스로 딥러닝 기반 어플리케이션을 배포함으로써 효율적인 엣지 자원 운용이 가능하다. 또한, 스마트 팜 또는 스마트 팩토리와 같은 다양한 환경에서 필요한 딥러닝 어플리케이션의 요구사항을 고려하 여 최적의 엣지 디바이스로 배포 가능하다는 장점이 있다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나, 본 발명은 이하에서 개시되는 실시예들에 제한되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술 분야의 통상의 기술자에게 본 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는추가를 배제하지 않는다. 명세서 전체에 걸쳐 동일한 도면 부호는 동일한 구성 요소를 지칭하며, \"및/또는\"은 언급된 구성요소들의 각각 및 하나 이상의 모든 조합을 포함한다. 비록 \"제1\", \"제2\" 등이 다양한 구성요소들을 서술하기 위해서 사용되나, 이들 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단 지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야의 통상의 기술자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또한, 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 도 1은 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템의 블록도이다. 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템은 성능 측정부, 자원 요구사항 판단부, 엣 지 노드 선정부 및 컨테이너 배포부를 포함한다. 성능 측정부는 복수의 엣지 디바이스 각각에 대한 가속기 정보(예를 들어, GPU 정보) 및 위치 정보를 호출 하여 수집한다. 그리고 가속기 정보 및 위치 정보에 기초하여 복수의 엣지 디바이스의 성능을 측정하고, 성능 측정 결과와 가속기 정보 및 위치 정보를 함께 저장한다. 일 실시예로, 성능 측정부는 가속기 정보로, 각 엣지 디바이스 내 가속기 개수, 가속기의 제조사명, 모델 명, 메모리 용량 및 버전 정보를 수집할 수 있다. 성능 측정부가 수집하는 가속기 정보 및 위치 정보의 일 예시는 다음 표 1과 같다. 표 1 이름 내용 가속기(GPU) Value : Integer 해당 자원에서 보유하고 있는 가속기(GPU) 자원의 개수를 표시한다. Model Value : String 형식 : {vendor_name}_{model_name}_{memory_size} 예 : nvidia_1080ti_32, nvidia_xavier_16 해당 자원에서 보유하고 있는 가속기(GPU) 자원의 정보를 표시한다. 각 이름은 제조 사명, 모델명 및 내장 메모리를 표시할 수 있도록 구성된다. Version Value : String 하드웨어에서 지원하는 버전을 표시한다. Host에서 지원하는 플랫폼의 버전 혹은 각 제조사에서 별도로 정의하는 proprietary version number를 기재할 수 있다. Location Value: String 형식: {Location_name}_{number} 예: factory_1, farm_3 자원 요구사항 판단부는 복수의 엣지 디바이스 중 최적의 엣지 디바이스로 배포하기 위한 배포 대상 어플 리케이션의 자원 요구 용량을 산출한다. 이때, 본 발명의 일 실시예는 컨테이너 오케스트레이션 도구인 쿠버네 티스를 이용하여 자원 요구 용량을 산출할 수 있다.이때, 본 발명에서의 어플리케이션의 일 예로 스마트 팩토리 의 경우, 다양한 공정 과정에 있어 불량품 검출을 위한 딥러닝 기반 어플리케이션일 수 있다. 또는, 스마트 팜 의 경우, 다양한 센서에서 취득한 데이터를 활용하여 작물의 생장을 위한 최적 환경 조성을 위한 어플리케이션 일 수 있다. 본 발명의 일 실시예에서, 배포 대상 어플리케이션은 추후 컨테이너로 생성되어 엣지 디바이스로 전송되며, 이 때 배포 대상 어플리케이션은 복수의 엣지 디바이스들에게 일괄적으로 배포되는 것이 아닌, 해당 어플리케이션 의 자원 요구 용량에 상응하는 성능을 가지는 최적의 엣지 디바이스에 대하여 선별적으로 배포된다. 이에 따라, 배포 대상 어플리케이션은 적어도 하나의 엣지 디바이스로 배포될 수 있으며, 이때 선정되는 엣지 디바이스는 복수의 엣지 디바이스 중 최고의 성능을 가지는 엣지 디바이스로 전송되는 것이 아닌 배포 대상 어 플리케이션의 자원 요구 용량에 적합한 성능을 갖는 엣지 디바이스로 전송된다. 즉, 제1 어플리케이션과 이보다 더 높은 자원 요구 용량을 갖는 제2 어플리케이션을 각각 배포하는 경우, 소정 의 조건에 따라 선정된 제1 엣지 디바이스에는 제1 어플리케이션이 배포되고, 제1 엣지 디바이스보다 조금 더 우월한 성능을 가지는 제2 엣지 디바이스에는 제2 어플리케이션이 배포된다. 이때, 분산 컴퓨팅 환경에서는 제1 및 제2 엣지 디바이스보다 더 우월한 성능을 가지는 제3 엣지 디바이스 또는 더 열악한 성능을 가지는 제4 엣지 디바이스가 존재할 수 있음은 물론이다. 한편, 본 발명의 일 실시예에서 배포 대상 어플리케이션은 소정의 긴급도를 더 고려하여 배포될 수 있다. 일 예 로, 배포 대상 어플리케이션은 긴급(high)/보통(middle)/여유(low)와 같은 등급으로 구분되어 관리될 수 있다. 이에 따라, 배포 대상 어플리케이션이 긴급인 경우에는 최적의 엣지 디바이스를 선정하는 과정에서 자원 요구 용량의 만족 여부에 대한 평가 가중치를 타 등급 대비 상대적으로 낮게 설정할 수 있다. 즉, 엣지 디바이스의 성능 측정 결과가 자원 요구 용량보다 반드시 여유가 있을 필요가 없이 소정의 임계 범위를 만족하면 대상 엣지 디바이스를 선정하여 어플리케이션 배포가 가능하다. 엣지 노드 선정부는 성능 측정 결과와 자원 요구 용량에 기초하여 배포 대상 어플리케이션을 운용하기 위 한 최적의 엣지 디바이스를 선정한다. 일 실시예로, 엣지 노드 선정부는 먼저 엣지 디바이스의 위치 정보에 기초하여, 배포 대상 테스트베드에 위치해 있는 엣지 디바이스들을 후보 엣지 디바이스로 선정한다. 그리고 엣지 노드 선정부는 후보 엣지 디바이스 중 성능 측정 결과가 자원 요구 용량을 만족하는, 즉 성능 측정 결과에 따른 성능이 분석 어플리케이션의 자원 요구 용량보다 더 여유가 있을 경우, 해당 엣지 디바이스를 배포 대상 어플리케이션을 배포하기 위한 최종 엣지 디바이스로 선정한다. 이때, 발명의 일 실시예에서 서비스 품질 정보 수집부는 복수의 엣지 디바이스 각각에 대한 대역폭 및 지 연 시간을 포함하는 서비스 품질 정보를 수집할 수 있다. 이에 따라, 엣지 노드 선정부는 복수의 엣지 디 바이스에 대한 서비스 품질 정보가 소정의 대역폭 및 시간 지연을 포함하는 서비스 품질 제한 조건을 만족하는 지 여부를 판단하고, 판단 결과에 기초하여 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정할 수 있다. 일 예로, 엣지 노드 선정부는 100mb/s의 대역폭, 2.0ms의 지연시간을 모든 통신 과정에 있어서의 서비스 품질 제한 조건으로 설정할 수 있다. 한편, 본 발명의 일 실시예에서 엣지 노드 선정부는 후보 엣지 디바이스 중 성능 측정 결과가 자원 요구 용량을 만족하는 후보 엣지 디바이스 중 적어도 하나의 엣지 디바이스를 최종 선정할 수 있음은 물론이며, 전술 한 소정의 등급에 따라 후보 엣지 디바이스로 선정되지 않은 엣지 디바이스 중에서 적어도 하나의 엣지 디바이 스를 최종 선정할 수도 있다. 컨테이너 배포부는 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 선정된 엣지 디바이스로 배포 한다. 이때, 컨테이너 배포부는 선정된 엣지 디바이스에 기 배포되어 실행 중인 컨테이너가 존재하는 경우, 성능 측정 결과 및 자원 요구 용량에 기초한 우선순위 중 차순위 엣지 디바이스로 컨테이너를 배포할 수 있다. 한편, 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템은 배포 대상 어플리케이션을 복수의 컨테이너로 분할하여 배포할 수 있다. 즉, 배포 대상 어플리케이션을 제1 및 제2 컨테이너로 분할하고, 제1 컨테이너는 제1 엣지 디바이스로, 제2 컨테이너는 제2 엣지 디바이스로 배포할 수 있다. 이때, 본 발명의 일 실시예는 엣지 노드 선정부가 분할되기 전 상태(미분할 상태)에서의 단일 상기 성능 측정 결과 및 자원 요구 용량에 따라 결정된 최종 엣지 디바이스로 배포하는 제1 케이스와, 제1 및 제2 컨테이 너로 분할 및 제1 및 제2 엣지 디바이스로 배포하는 제2 케이스에 대한 예상 성능 처리 결과를 비교하고, 비교 결과 분할 배포하는 제2 케이스에 대한 예상 성능 처리 결과가 미분할 상태보다 더 우월한(속도, 정확성, 지연 성, 에러율 등) 경우 분할 배포를 결정할 수 있다. 이때, 예상 성능 처리 결과는 성능 측정부에서 생성할 수 있다. 한편, 엣지 노드 선정부는 분산 컴퓨팅 환경에서의 전체 엣지 디바이스의 수, 배포된 컨테이너 또는 분할 배포된 컨테이너, 각 엣지 디바이스의 성능, 컨테이너 배포 후 성능 처리 결과를 각각 엣지 디바이스로부터 수 집하여 학습 데이터로 구성한 후 신경망 기반의 배포 알고리즘을 업데이트할 수 있다. 이때 성능 처리 결과의 경우, 제1 회차 컨테이너 배포 전 성능 처리 결과에 상응하는 배포 규칙 정보와, 배포 후 수집된 성능 처리 결과에 상응하는 배포 규칙 정보를 각각 학습 데이터로 구성하여 배포 알고리즘을 갱신할 수 있다. 이는 제N 회차까지 반복 수행되어 배포 알고리즘은 회차를 거듭할수록 최적화되어 최적의 엣지 디바이스를 선정 및 배포할 수 있게 된다. 다른 실시예로, 본 발명에 따른 엣지 자원 운용 시스템은 최적의 엣지 디바이스로 선정되어 컨테이너가 배 포된 이후, 해당 엣지 디바이스에서의 성능 처리 결과와 예상 성능 처리 결과를 비교하여 최적의 엣지 디바이스 를 재선정 및 재배포할 수 있다. 도 2a 및 도 2b는 본 발명의 일 실시예에서 엣지 디바이스의 재선정 과정을 설명하기 위한 도면이다. 일 예로, 엣지 노드 선정부는 제1 엣지 디바이스로 제1 컨테이너가 배포된 이후, 소정의 제1 시간 동안의 제1 성능 처리 결과를 수집한다. 그리고 엣지 노드 선정부는 제1 성능 처리 결과와 기 수집한 성능 측정 결과, 자원 요구 용량을 기반으로 소정의 제2 시간 동안의 제2 예상 성능 처리 결과를 산출한다. 그리고 엣지 디바이스로부터 제2 시간 동안의 제2 성능 처리 결과를 수집한다. 이후, 제2 성능 처리 결과와 제2 예상 성능 처리 결과를 비교한다. 그리고 비교 결과 제2 예상 성능 처리 결과 가 제2 성능 처리 결과보다 더 큰 수치 데이터를 갖는 경우, 성능 측정 결과 및 자원 요구 용량에 기초한 선정 대비 실제 성능이 더 열악한 것으로, 엣지 디바이스의 선정이 잘못된 것으로 판단하여 해당 컨테이너를 해당 엣 지 디바이스가 아닌 타 엣지 디바이스에서 동작되도록 재선정한다. 이와 달리, 제2 예상 성능 처리 결과가 제2 성능 처리 결과보다 더 작은 수치 데이터를 갖는 경우, 성능 측정 결과 및 자원 요구 용량에 기초한 선정 대비 실제 성능이 더 우월한 것이므로, 해당 컨테이너를 해당 엣지 디바 이스에서 동작되도록 유지한다. 다만, 비교 결과의 차이가 소정 비율 이상 차이가 나는 경우에는 엣지 디바이스 의 선정이 잘못된 것으로 판단, 즉 너무 고성능의 엣지 디바이스로 컨테이너를 배포한 것일 가능성이 있으므로, 엣지 디바이스의 재선정 과정을 수행할 수 있다. 이에 더 나아가, 본 발명의 일 실시예는 제2 시간 경과시 곧바로 엣지 디바이스의 재선정 여부를 결정하는 것이 아닌 소정 주기, 소정 횟수 경과시에 엣지 디바이스의 재선정 과정을 수행할 수 있다. 이는 도 2a에 도시된 실 시예와 같이 비교 결과에 따라 곧바로 엣지 디바이스를 재선정할 경우, 엣지 디바이스의 재선정 및 컨테이너의 재배포를 위한 소요 시간만큼 동작 수행이 불가하므로, 곧바로 재선정 및 재배포하는 것이 아닌 소정 시간, 주 기 경과 후 재선정 및 재배포되도록 할 수 있다. 구체적으로, 비교 결과 제2 예상 성능 처리 결과가 제2 성능 처리 결과 대비 소정 비율 이상의 결과 비율을 갖 는 경우, 제2 시간 이후의 제3 시간 범위를 상기 비율만큼 감소시킨다. 그리고 제3 시간 범위에서의 제3 예상 처리 결과와 제3 성능 처리 결과를 다시 비교하고, 비교 결과에 기초하여 제4 시간 범위의 증가 또는 감소를 결 정한다. 마찬가지로, 비교 결과 제2 성능 처리 결과가 제2 예상 성능 처리 결과 대비 소정 비율 이상의 결과 비율을 갖 는 경우, 제2 시간 이후의 제3 시간 범위를 상기 비율만큼 증가시킨다. 그리고 제3 시간 범위에서의 제3 예상 처리 결과와 제3 성능 처리 결과를 다시 비교하고, 비교 결과에 기초하여 제4 시간 범위의 증가 또는 감소를 결 정한다. 이후, 엣지 노드 선정부는 소정의 시간이나 주기 또는 소정 분석 횟수(제N 시간) 경과시, 상기 비교 분석 과정을 중단하고, 제1 시간 대비 제N 시간이 더 줄어든 경우에는 엣지 디바이스의 재선정 과정을 수행할 수 있 다. 또 다른 실시예로, 엣지 노드 선정부는 엣지 디바이스의 컨테이너 변경 이력 테이블을 생성 및 관리할 수 있다. 도 3는 본 발명의 일 실시예에서의 컨테이너 변경 이력 테이블을 설명하기 위한 도면이다. 일 실시예로, 컨테이너 변경 이력 테이블은 각 엣지 디바이스로 배포된 컨테이너의 이력, 동작 시간, 변경 사항 등의 정보를 포함할 수 있다. 참고로, 도 3는 각 엣지 디바이스마다 구분된 컨테이너 변경 이력 테이블을 도시 하고 있으나, 이는 설명의 편의를 위한 것으로, 컨테이너 변경 이력 테이블을 하나의 테이블로 구성될 수 있음 은 물론이며, 또는 데이터화되어 관리될 수 있음은 물론이다. 도 3를 참조하면, 제1 엣지 디바이스로 최초 제1-1 컨테이너가 배포되었고, 제1 시간 동안 동작한 후, 제2 시간 동안 재선정 및 재배포 과정이 수행된 후, 제3 시간 동안 제1-2 컨테이너가 재배포됨을 확인할 수 있다. 마찬가지로, 제2 엣지 디바이스로 최초 제2-1 컨테이너가 배포되었고, 제1 시간 동안 동작한 후, 제2 시간 동안 재선정 및 재배포 과정이 수행된 후, 제3 시간 동안 제2-2 컨테이너가 재배포됨을 확인할 수 있다.이때, 엣지 노드 선정부는 소정 시간이 경과한 후, 각 컨테이너가 배포된 엣지 디바이스마다 소정 시간 동 안 해당 컨테이너를 가장 오래 유지한 엣지 디바이스를 추출하여 해당 엣지 디바이스에 가중치를 부여할 수 있 다. 이때, 가중치는 최장 시간 유지한 엣지 디바이스 단독으로 가중치를 부여하거나, 또는 소정의 상위 우선순 위 엣지 디바이스에게 차등되도록 가중치를 부여할 수 있다. 도 3의 예시에서는 소정 시간동안 제3 엣지 디바이스가 컨테이너를 가장 오랫동안 유지하였으므로, 제3 엣지 디 바이스에게 가중치를 부여할 수 있다. 이러한 가중치는 전술한 도 2b의 실시예에 있어 재선정 및 재배포를 위한 다음 시간 범위에 대하여 감소 시간을 가중치만큼 덜 감소시키거나 증가 시간을 가중치만큼 더 증가시키도록 하 여, 최적화된 엣지 디바이스가 더욱 오래 유지될 수 있도록 한다. 도 4는 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템의 구성도이다. 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템는 입력부, 통신부, 표시부, 메모리 및 프로세서를 포함한다. 입력부는 엣지 자원 운용 시스템의 사용자 입력에 대응하여 입력데이터를 발생시킨다. 입력부는 적어도 하나의 입력수단을 포함한다. 입력부는 키보드(key board), 키패드(key pad), 돔 스위치(dome switch), 터치패널(touch panel), 터치 키(touch key), 마우스(mouse), 메뉴 버튼(menu button) 등을 포함할 수 있다. 통신부는 복수의 엣지 디바이스와 데이터를 송수신하며, 그밖에 외부 서버나 내부 구성요소 간의 통신을 수행한다. 이와 같은 통신부는 유선 통신 모듈 및 무선 통신 모듈을 모두 포함할 수 있다. 유선 통신 모듈 은 전력선 통신 장치, 전화선 통신 장치, 케이블 홈(MoCA), 이더넷(Ethernet), IEEE1294, 통합 유선 홈 네트워 크 및 RS-485 제어 장치로 구현될 수 있다. 또한, 무선 통신 모듈은 WLAN(wireless LAN), Bluetooth, HDR WPAN, UWB, ZigBee, Impulse Radio, 60GHz WPAN, Binary-CDMA, 무선 USB 기술 및 무선 HDMI 기술, 그밖에 5G(5th generation communication), LTE-A(long term evolution-advanced), LTE(long term evolution), Wi- Fi(wireless fidelity) 등의 기능을 구현하기 위한 모듈로 구성될 수 있다. 표시부는 엣지 자원 운용 시스템의 동작에 따른 표시 데이터를 표시한다. 일 예로 표시부는 복 수의 엣지 디바이스로의 컨테이너 배포 현황, 성능 측정 결과, 성능 처리 결과 등을 표시할 수 있다. 표시부 는 액정 디스플레이(LCD; liquid crystal display), 발광 다이오드(LED; light emitting diode) 디스플레 이, 유기 발광 다이오드(OLED; organic LED) 디스플레이, 마이크로 전자기계 시스템(MEMS; micro electro mechanical systems) 디스플레이 및 전자 종이(electronic paper) 디스플레이를 포함한다. 표시부는 입력 부와 결합되어 터치 스크린(touch screen)으로 구현될 수 있다. 메모리는 분산 컴퓨팅 환경에서의 복수의 엣지 디바이스를 대상으로 컨테이너를 배포 및 관리하기 위한 프 로그램들을 저장한다. 여기에서, 메모리는 전원이 공급되지 않아도 저장된 정보를 계속 유지하는 비휘발성 저장장치 및 휘발성 저장장치를 통칭하는 것이다. 예를 들어, 메모리는 콤팩트 플래시(compact flash; CF) 카드, SD(secure digital) 카드, 메모리 스틱(memory stick), 솔리드 스테이트 드라이브(solid-state drive; SSD) 및 마이크로(micro) SD 카드 등과 같은 낸드 플래시 메모리(NAND flash memory), 하드 디스크 드라이브 (hard disk drive; HDD) 등과 같은 마그네틱 컴퓨터 기억 장치 및 CD-ROM, DVD-ROM 등과 같은 광학 디스크 드 라이브(optical disc drive) 등을 포함할 수 있다. 프로세서는 프로그램 등 소프트웨어를 실행하여 엣지 자원 운용 시스템의 적어도 하나의 다른 구성요 소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이터 처리 또는 연산을 수행할 수 있 다. 한편, 본 발명의 일 실시예에서, 프로세서는 인공지능 알고리즘의 생성을 위해, 인공지능(Artificial Intelligence) 알고리즘으로서 기계학습, 신경망 네트워크(neural network), 또는 딥러닝 알고리즘 중 적어도 하나를 이용할 수 있다. 일 예로, 인공지능(Artificial Intelligence) 알고리즘으로서 기계학습, 신경망 네트워 크(neural network), 또는 딥러닝 알고리즘 중 적어도 하나를 이용할 수 있으며, 신경망 네트워크의 예로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network)과 같은 모델을 포함할 수 있다. 이하에서는 도 5를 참조하여 본 발명의 일 실시예에 따른 분산 컴퓨팅 환경에서의 엣지 자원 운용 시스템 에 의해 수행되는 방법을 설명하도록 한다.도 5는 본 발명의 일 실시예에 따른 엣지 자원 운용 방법의 순서도이다. 먼저, 복수의 엣지 디바이스 각각에 대한 가속기 정보 및 위치 정보를 호출하여 수집한다(S110). 다음으로, 가속기 정보 및 위치 정보에 기초하여 복수의 엣지 디바이스의 성능을 측정한다(S120). 다음으로, 복수의 엣지 디바이스 중 최적 엣지 디바이스로 배포하기 위한 배포 대상 어플리케이션의 자원 요구 용량을 산출한다(S130). 다음으로, 성능 측정 결과와 자원 요구 용량에 기초하여 배포 대상 어플리케이션을 운용하기 위한 엣지 디바이 스를 선정하고(S140), 배포 대상 어플리케이션에 상응하는 컨테이너를 생성하여 선정된 엣지 디바이스로 배포한 다(S150). 한편, 상술한 설명에서, 단계 S110 내지 단계 S150은 본 발명의 구현예에 따라서, 추가적인 단계들로 더 분할되 거나, 더 적은 단계들로 조합될 수 있다. 또한, 일부 단계는 필요에 따라 생략될 수도 있고, 단계 간의 순서가 변경될 수도 있다. 아울러, 기타 생략된 내용이라 하더라도 도 1 내지 도 4에 기술된 내용은 도 5에도 적용될 수 있다. 이상에서 전술한 본 발명의 일 실시예들은, 하드웨어인 서버와 결합되어 실행되기 위해 프로그램(또는 어플리케 이션)으로 구현되어 매체에 저장될 수 있다. 상기 전술한 프로그램은, 상기 컴퓨터가 프로그램을 읽어 들여 프로그램으로 구현된 상기 방법들을 실행시키기 위하여, 상기 컴퓨터의 프로세서(CPU)가 상기 컴퓨터의 장치 인터페이스를 통해 읽힐 수 있는 C, C++, JAVA, 기 계어 등의 컴퓨터 언어로 코드화된 코드(Code)를 포함할 수 있다. 이러한 코드는 상기 방법들을 실행하는 필요 한 기능들을 정의한 함수 등과 관련된 기능적인 코드(Functional Code)를 포함할 수 있고, 상기 기능들을 상기 컴퓨터의 프로세서가 소정의 절차대로 실행시키는데 필요한 실행 절차 관련 제어 코드를 포함할 수 있다. 또한, 이러한 코드는 상기 기능들을 상기 컴퓨터의 프로세서가 실행시키는데 필요한 추가 정보나 미디어가 상기 컴퓨 터의 내부 또는 외부 메모리의 어느 위치(주소 번지)에서 참조되어야 하는지에 대한 메모리 참조관련 코드를 더 포함할 수 있다. 또한, 상기 컴퓨터의 프로세서가 상기 기능들을 실행시키기 위하여 원격(Remote)에 있는 어떠 한 다른 컴퓨터나 서버 등과 통신이 필요한 경우, 코드는 상기 컴퓨터의 통신 모듈을 이용하여 원격에 있는 어 떠한 다른 컴퓨터나 서버 등과 어떻게 통신해야 하는지, 통신 시 어떠한 정보나 미디어를 송수신해야 하는지 등 에 대한 통신 관련 코드를 더 포함할 수 있다. 상기 저장되는 매체는, 레지스터, 캐쉬, 메모리 등과 같이 짧은 순간 동안 데이터를 저장하는 매체가 아니라 반 영구적으로 데이터를 저장하며, 기기에 의해 판독(reading)이 가능한 매체를 의미한다. 구체적으로는, 상기 저 장되는 매체의 예로는 ROM, RAM, CD-ROM, 자기 테이프, 플로피디스크, 광 데이터 저장장치 등이 있지만, 이에 제한되지 않는다. 즉, 상기 프로그램은 상기 컴퓨터가 접속할 수 있는 다양한 서버 상의 다양한 기록매체 또는 사용자의 상기 컴퓨터상의 다양한 기록매체에 저장될 수 있다. 또한, 상기 매체는 네트워크로 연결된 컴퓨터 시 스템에 분산되어, 분산방식으로 컴퓨터가 읽을 수 있는 코드가 저장될 수 있다. 본 발명의 실시예와 관련하여 설명된 방법 또는 알고리즘의 단계들은 하드웨어로 직접 구현되거나, 하드웨어에 의해 실행되는 소프트웨어 모듈로 구현되거나, 또는 이들의 결합에 의해 구현될 수 있다. 소프트웨어 모듈은 RAM(Random Access Memory), ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리(Flash Memory), 하드 디스크, 착탈형 디스크, CD-ROM, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터 판독가능 기록매체에 상주할 수도 있다."}
{"patent_id": "10-2022-0171704", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이상, 첨부된 도면을 참조로 하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야의 통상의 기술 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며, 제한적이 아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2022-0171704", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템의 블록도이다. 도 2a 및 도 2b는 본 발명의 일 실시예에서 엣지 디바이스의 재선정 과정을 설명하기 위한 도면이다. 도 3는 본 발명의 일 실시예에서의 컨테이너 변경 이력 테이블을 설명하기 위한 도면이다. 도 4는 본 발명의 일 실시예에 따른 엣지 자원 운용 시스템의 구성도이다. 도 5는 본 발명의 일 실시예에 따른 엣지 자원 운용 방법의 순서도이다."}
