{"patent_id": "10-2023-0133410", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0050415", "출원번호": "10-2023-0133410", "발명의 명칭": "연산 장치 및 방법", "출원인": "삼성전자주식회사", "발명자": "장재훈"}}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1 데이터 타입의 제1 입력 데이터 및 상기 제1 데이터 타입과 상이한 제2 데이터 타입의 제2 입력 데이터를수신하고, 상기 제1 데이터 타입을 나타내는 제1 신호, 상기 제2 데이터 타입을 나타내는 제2 신호, 및 상기 제1 입력 데이터와 상기 제2 입력 데이터의 비트(bit) 수에 기초한 클록 신호를 출력하는 제어기, 그리고상기 제1 신호, 상기 제2 신호, 및 상기 클록 신호에 기초하여 상기 제1 입력 데이터 및 상기 제2 입력 데이터에 대한 곱셈 연산을 수행하고 출력 데이터를 생성하는 연산 회로를 포함하는 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서, 상기 제1 입력 데이터는 부호 데이터 및 정수 데이터를 포함하고, 상기 제2 입력 데이터는 부호 데이터, 지수 데이터, 및 가수 데이터를 포함하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 연산 회로는, 상기 출력 데이터의 부호 데이터를 출력하는 제1 회로, 상기 제1 신호 및 상기 제2 신호에 기초하여 상기 출력 데이터의 지수 데이터를 출력하는 제2 회로, 그리고상기 클록 신호에 기초하여 상기 출력 데이터의 가수 데이터를 출력하는 제3 회로를 포함하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 제1 회로는 상기 제1 입력 데이터의 부호 데이터와 상기 제2 입력 데이터의 부호 데이터를 수신하고, 상기출력 데이터의 부호 데이터를 출력하는 배타적 논리합(Exclusive OR, XOR) 게이트를 포함하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제3항에 있어서,상기 제2 회로는, 상기 제2 입력 데이터의 지수 데이터를 출력하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제3항에 있어서,상기 제3 회로는,상기 제1 입력 데이터의 정수 데이터에 대응하는 제1 데이터와 상기 제2 입력 데이터의 가수 데이터에 대응하는제2 데이터를 수신하고, 상기 제1 데이터와 상기 제2 데이터에 대한 곱셈 연산을 수행하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1 비트의 제1 데이터와 상기 제1 비트와 상이한 제2 비트의 제2 데이터에 대한 곱셈 연산을 수행하는 연산 장공개특허 10-2025-0050415-3-치로서, 상기 제1 비트의 수에 기초한 클록 신호의 사이클 횟수를 카운팅하는 카운터의 출력 신호를 수신하는 선택 노드및 상기 제1 데이터의 각각의 비트 값을 수신하는 복수의 입력 노드를 포함하는 제1 멀티플렉서,상기 제1 멀티플렉서의 출력 데이터를 수신하는 선택 노드, 제1 값을 수신하는 제1 입력 노드, 및 상기 제2 데이터 또는 시프터로부터 상기 제2 데이터를 1 비트씩 시프트한 데이터를 수신하는 제2 입력 노드를 포함하는 제2 멀티플렉서, 그리고상기 클록 신호에 기초하여 상기 제2 멀티플렉서의 출력 데이터를 가산 연산하는 제1 가산기를 포함하는 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 제1 멀티플렉서는 상기 카운터의 출력 신호에 기초하여, 상기 제1 데이터의 비트 값 중 최하위 비트 값부터 순차적으로 1비트씩 출력하고,상기 제2 멀티플렉서는 상기 제1 멀티플렉서의 출력 데이터가 \"0\"이면 상기 제1 값을 출력하고, 상기 제1 멀티플렉서의 출력 데이터가 \"1\"이면 상기 제2 데이터 또는 상기 시프터의 출력 데이터를 출력하는, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제7항에 있어서,상기 제1 비트의 수는 상기 제2 비트의 수보다 적은, 연산 장치."}
{"patent_id": "10-2023-0133410", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "데이터를 저장하는 메모리, 그리고상기 메모리로부터 입력 데이터에 대응하는 입력 매트릭스 및 가중치 매트릭스를 수신하고, 상기 입력 매트릭스와 상기 가중치 매트릭스에 대한 행렬 내적 연산을 수행하며, 상기 행렬 내적 연산 수행 결과를 출력 매트릭스로서 출력하는 뉴럴 프로세싱 유닛을 포함하는 뉴럴 프로세싱 시스템으로서,상기 입력 매트릭스는 제1 데이터 타입의 원소들(elements)을 포함하고, 상기 가중치 매트릭스는 상기 제1 데이터 타입과 상이한 제2 데이터 타입의 원소들을 포함하며, 상기 뉴럴 프로세싱 유닛은 상기 제1 데이터 타입 및 상기 제2 데이터 타입에 기초하여 상기 입력 매트릭스의원소의 지수 데이터 또는 상기 가중치 매트릭스의 원소의 지수 데이터를 상기 출력 매트릭스의 원소의 지수 데이터로서 출력하는 연산 장치를 포함하는, 뉴럴 프로세싱 시스템."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "일 실시예에 따른 연산 장치는 제1 데이터 타입의 제1 입력 데이터 및 상기 제1 데이터 타입과 상이한 제2 데이 터 타입의 제2 입력 데이터를 수신하고, 상기 제1 데이터 타입을 나타내는 제1 신호, 상기 제2 데이터 타입을 나 타내는 제2 신호, 및 상기 제1 입력 데이터와 상기 제2 입력 데이터의 비트(bit) 수에 기초한 클록 신호를 출력 하는 제어기, 그리고 상기 제1 신호, 상기 제2 신호, 및 상기 클록 신호에 기초하여 상기 제1 입력 데이터 및 상 기 제2 입력 데이터에 대한 곱셈 연산을 수행하고 출력 데이터를 생성하는 연산 회로를 포함할 수 있다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "개시 내용은 연산 장치 및 방법에 관한 것이다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능(Artificial Intelligence)의 한 분야인 딥러닝(Deep Learning)은 복잡한 데이터의 패턴을 인식하고 정교한 예측을 가능하게 한다. 일반적으로 딥러닝은 학습용 데이터를 활용하여 뉴럴 네트워크 모델을 학습시키 는 학습 단계(training)와, 학습이 완료된 뉴럴 네트워크 모델에 새로운 데이터를 입력하여 출력을 얻는 추론 단계(inference)로 구성된다. 이러한 딥러닝은 뉴럴 네트워크를 깊게 구성할수록 더 정교한 예측이 가능하여 성 능을 향상시킬 수 있는 반면, 이는 막대한 연산량으로 인해 더 많은 전력을 필요로 하고, 속도가 저하되는 문제가 있다. 한편, 뉴럴 네트워크는 정교한 예측을 위해 많은 레이어를 포함할 수 있고, 이에 따라 연산의 복잡도가 증가할 수 있다. 따라서, 연산의 복잡도를 감소시키기 위해, 부동 소수점 데이터를 정수로 맵핑하는 등의 알고리즘 경 량화 기술이 사용되고 있다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "일 실시예는 상이한 데이터 타입을 갖는 입력 데이터들에 대한 곱셈 및 누적 연산을 수행할 수 있는 연산 장치 및 방법을 제공하고자 한다. 일 실시예는 상이한 정밀도(precision)를 갖는 입력 데이터들에 대한 곱셈 및 누적 연산을 수행할 수 있는 연산 장치 및 방법을 제공하고자 한다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "일 실시예에 따른 연산 장치는 제1 데이터 타입의 제1 입력 데이터 및 상기 제1 데이터 타입과 상이한 제2 데이 터 타입의 제2 입력 데이터를 수신하고, 상기 제1 데이터 타입을 나타내는 제1 신호, 상기 제2 데이터 타입을 나타내는 제2 신호, 및 상기 제1 입력 데이터와 상기 제2 입력 데이터의 비트(bit) 수에 기초한 클록 신호를 출 력하는 제어기, 그리고 상기 제1 신호, 상기 제2 신호, 및 상기 클록 신호에 기초하여 상기 제1 입력 데이터 및 상기 제2 입력 데이터에 대한 곱셈 연산을 수행하고 출력 데이터를 생성하는 연산 회로를 포함할 수 있다. 일 실시예에 따른 연산 장치는 제1 비트의 제1 데이터와 상기 제1 비트와 상이한 제2 비트의 제2 데이터에 대한 곱셈 연산을 수행하는 연산 장치로서, 상기 제1 비트의 수에 기초한 클록 신호의 사이클 횟수를 카운팅하는 카 운터의 출력 신호를 수신하는 선택 노드 및 상기 제1 데이터의 각각의 비트 값을 수신하는 복수의 입력 노드를 포함하는 제1 멀티플렉서, 상기 제1 멀티플렉서의 출력 데이터를 수신하는 선택 노드, 제1 값을 수신하는 제1 입력 노드, 및 상기 제2 데이터 또는 상기 제2 데이터를 1 비트씩 시프트한 데이터를 수신하는 제2 입력 노드를 포함하는 제2 멀티플렉서, 그리고 상기 클록 신호에 기초하여 상기 제2 멀티플렉서의 출력 데이터를 가산 연산 하는 제1 가산기를 포함할 수 있다. 일 실시예에 따른 뉴럴 프로세싱 시스템은 데이터를 저장하는 메모리, 그리고 상기 메모리로부터 입력 데이터에 대응하는 입력 매트릭스 및 가중치 매트릭스를 수신하고, 상기 입력 매트릭스와 상기 가중치 매트릭스에 대한 행렬 내적 연산을 수행하며며, 상기 행렬 내적 연산 수행 결과를 출력 매트릭스로서 출력하는 뉴럴 프로세싱 유 닛을 포함하는 뉴럴 프로세싱 시스템으로서, 상기 입력 매트릭스는 제1 데이터 타입의 원소들(elements)을 포함 하고, 상기 가중치 매트릭스는 상기 제1 데이터 타입과 상이한 제2 데이터 타입의 원소들을 포함하며, 상기 뉴 럴 프로세싱 유닛은 상기 제1 데이터 타입 및 상기 제2 데이터 타입에 기초하여 상기 입력 매트릭스의 원소의 지수 데이터 또는 상기 가중치 매트릭스의 원소의 지수 데이터를 상기 출력 매트릭스의 원소의 지수 데이터로서 출력하는 연산 장치를 포함할 수 있다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "아래에서는 첨부한 도면을 참고로 하여 본 발명의 실시예에 대하여 본 발명이 속하는 기술 분야에서 통상의 지 식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 그러나 본 발명은 여러 가지 상이한 형태로 구현 될 수 있으며 여기에서 설명하는 실시예에 한정되지 않는다. 그리고 도면에서 본 발명을 명확하게 설명하기 위해서 설명과 관계없는 부분은 생략하였으며, 명세서 전체를 통 하여 유사한 부분에 대해서는 유사한 도면 부호를 붙였다. 도면을 참고하여 설명한 흐름도에서, 동작 순서는 변 경될 수 있고, 여러 동작들이 병합되거나, 어느 동작이 분할될 수 있고, 특정 동작은 수행되지 않을 수 있다. 또한, 단수로 기재된 표현은 \"하나\" 또는 \"단일\" 등의 명시적인 표현을 사용하지 않은 이상, 단수 또는 복수로 해석될 수 있다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소를 설명하는데 사용될 수 있지만, 구성요소는 이러한 용어에 의해 한정되지는 않는다. 이들 용어는 하나의 구성요소를 다른 구성요소로부터 구별 하는 목적으로 사용될 수 있다. 도 1은 일 실시 예에 따른 뉴럴 프로세싱 시스템을 보여주는 블록도이다. 뉴럴 프로세싱 시스템은 뉴럴 네트워크를 훈련(train)(또는 학습(learn))하거나, 뉴럴 네트워크를 이용하여 입력 데이터를 분석함으로써 입 력 데이터에 포함된 정보를 추론(inference)할 수 있다. 뉴럴 프로세싱 시스템은 추론된 정보를 기초로 상황을 판단하거나 또는 뉴럴 프로세싱 시스템이 탑재되는 전자 장치의 구성들을 제어할 수 있다. 예컨 대, 뉴럴 프로세싱 시스템은 뉴럴 네트워크를 이용한 음성 인식, 영상 인식, 영상 분류 등을 수행하는 스마트 폰, 태블릿 디바이스, 스마트 TV, AR(Augmented Reality) 디바이스, IoT(Internet of Things) 디바이스, 자율주행 자동차, 로보틱스, 의료기기, 드론(drone), 첨단 운전자 보조 시스템(Advanced Drivers Assistance System; ADAS), 영상 표시 장치, 계측 장치 등에 적용될 수 있으며, 이 외에도 뉴럴 프로세싱 시 스템은 다양한 종류의 전자 장치 중 하나에 탑재될 수 있다. 도 1을 참조하면, 뉴럴 프로세싱 시스템은 중앙 처리 유닛(110; CENTRAL PROCESSING UNIT), 뉴럴 프로세 싱 유닛(120; NEURAL PROCESSING UNIT), 휘발성 메모리 장치(130; VOLATILE MEMORY DEVICE), 불휘발성 메모리 장치(140; NONVOLATILE MEMORY DEVICE), 및 사용자 인터페이스(150; USER INTERFACE)를 포함할 수 있다. 일 실 시예에 있어서, 뉴럴 프로세싱 시스템의 구성들(예컨대, 중앙 처리 유닛, 뉴럴 프로세싱 유닛 , 휘발성 메모리 장치, 및 불휘발성 메모리 장치) 중 일부 또는 전부는 하나의 반도체 칩에 형 성될 수 있다. 예컨대, 뉴럴 프로세싱 시스템은 시스템-온 칩(SoC)으로서 구현될 수 있다. 중앙 처리 유닛, 뉴럴 프로세싱 유닛, 휘발성 메모리 장치, 불휘발성 메모리 장치, 및 사용자 인터페 이스는 버스(BUS)를 통해 서로 연결될 수 있다. 중앙 처리 장치는 뉴럴 프로세싱 시스템의 제반 동작을 제어할 수 있다. 중앙 처리 장치는 하나 의 프로세서 코어(Single Core)를 포함하거나, 복수의 프로세서 코어들(Multi-Core)을 포함할 수 있다. 중앙 처 리 장치는 휘발성 메모리 장치 및 불휘발성 메모리 장치와 같은 저장 영역에 저장된 프로그램들 및/또는 데이터를 처리 또는 실행할 수 있다. 중앙 처리 유닛은 응용 프로그램(application)을 실행하고, 응용 프로그램의 실행에 따라 요구되는 뉴럴 네트워크 기반의 테스크들을 수행하도록 뉴럴 프로세싱 유닛을 제어할 수 있다. 뉴럴 네트워크는 CNN(Convolution Neural Network), R-CNN(Region with Convolution Neural Network), RPN(Region Proposal Network), RNN(Recurrent Neural Network), S-DNN(Stacking-based deep Neural Network), S-SDNN(State-Space Dynamic Neural Network), Deconvolution Network, DBN(Deep Belief Network), RBM(Restricted Boltzman Machine), Fully Convolutional Network, LSTM(Long Short-Term Memory) Network, Classification Network, Transformer 등 다양한 종류의 뉴럴 네트워크 모델들 중 적어도 하나를 포함할 수 있다. 뉴럴 네트워크 모델은 복수의 레이어를 포함할 수 있다. 복수의 레이어 각각은 레이어의 입력 데이터를 수신하 고, 레이어의 출력 데이터를 생성하도록 구현될 수 있다. 이 때 생성된 레이어의 출력 데이터는 다른 레이어의 입력 데이터로서 사용될 수 있다. 복수의 레이어 각각은 뉴럴 네트워크 연산을 통해 입력 데이터를 출력 데이터 로 변환(transform)할 수 있다. 예를 들어, 복수의 레이어 각각은 레이어의 입력 데이터에 대응하는 입력 매트 릭스에 가중치(weight) 매트릭스를 내적하여, 레이어의 출력 데이터에 대응하는 출력 매트릭스를 생성할 수 있 다. 그러나 본 개시의 범위는 이에 한정되지 않고, 복수의 레이어 각각은 레이어의 입력 데이터에 대응되는 입 력 매트릭스를 임의의 방식으로 변환하여 출력 데이터를 생성할 수 있다. 예를 들어, 복수의 레이어 각각은 레 이어의 입력 데이터에 대응되는 입력 매트릭스에 복수의 가중치 매트릭스를 순차적으로 곱하여 레이어의 출력 데이터를 생성하거나, 변환 파라미터에 기초하여 입력 매트릭스를 변환하여 레이어의 출력 데이터를 생성하도록 구현될 수도 있을 것이다. 뉴럴 네트워크 및 레이어에 대한 보다 상세한 설명은 도 2를 참조하여 설명한다. 뉴럴 프로세싱 유닛은 뉴럴 네트워크 연산을 실행하기 위해, 휘발성 메모리 장치에 액세스할 수 있다. 예를 들어, 뉴럴 프로세싱 유닛은 휘발성 메모리 장치에 저장된 파라미터를 독출하여 레이어 입력 데이터에 대한 연산을 수행하거나, 연산 중 생성되는 중간 데이터를 휘발성 메모리 장치에 임시적으 로 저장할 수 있다. 뉴럴 프로세싱 유닛은 뉴럴 네트워크 연산을 실행하기 위해, 불휘발성 메모리 장치에 액세스할 수 있 다. 예를 들어, 뉴럴 프로세싱 유닛은 불휘발성 메모리 장치에 저장된 뉴럴 네트워크를 위한 연산 파라미터(예컨대, 웨이트(weight) 값들, 바이어스(bias) 값들 등), 입력 데이터(예컨대, 입력 피처 맵(input feature map)) 등을 독출하여 뉴럴 네트워크 연산을 수행할 수 있다. 일 실시예에서, 뉴럴 프로세싱 유닛은 뉴럴 네트워크 연산을 수행하기 위한 연산 장치(121; COMPUTING DEVICE)를 포함할 수 있다. 예를 들어, 연산 장치는 각 레이어의 입력 매트릭스와 가중치 매트릭스에 대한 내적 연산을 수행할 수 있다. 연산 장치는 각 레이어의 입력 매트릭스와 가중치 매트릭스에 대한 내적 연 산을 수행하기 위한 곱셈 및 누적(Multiplication and Accumulation, MAC) 연산기를 포함할 수 있다. 연산 장 치는 입력 데이터에 대한 곱셈 및 누적 연산을 수행할 수 있다. 한편, 뉴럴 네트워크는 복잡한 아키텍처로 구현될 수 있으며, 뉴럴 네트워크 연산을 수행하는 뉴럴 프로세싱 유 닛의 연산 장치는 수억에서 수백억개 이상의 많은 연산을 수행하게 된다. 따라서, 뉴럴 네트워크 알 고리즘의 경량화를 위해 부동 소수점 데이터를 정수 데이터로 매핑하는 등의 경량화 기술이 사용되고 있다. 일 실시예에서, 연산 장치는 상이한 데이터 타입을 갖는 복수의 데이터를 입력 데이터로서 수신할 수 있다. 예를 들어, 연산 장치는 부동 소수점 데이터와 정수 데이터를 입력 데이터로서 수신할 수 있으나, 이에 제 한되는 것은 아니다. 일 실시예에서, 연산 장치는 상이한 정밀도(precision), 즉 상이한 비트의 복수의 데이터를 입력 데이터로 서 수신할 수 있다. 예를 들어, 연산 장치는 연산 장치가 연산할 수 있는 미리 결정된 비트 수 내의 임의의 비트의 데이터를 입력 데이터로 수신할 수 있다. 일 실시예에서, 휘발성 메모리 장치는 중앙 처리 유닛의 버퍼 메모리, 동작 메모리, 또는 캐시 메모 리로서 사용될 수 있다. 휘발성 메모리는 DRAM (Dynamic RAM), SRAM (Static RAM), SDRAM (Synchronous DRAM), PRAM (Phase-change RAM), MRAM (Magnetic RAM), RRAM (Resistive RAM), FeRAM (Ferroelectric RAM) 등을 포 함한다. 그러나 본 개시의 범위는 이에 한정되지 않는다. 불휘발성 메모리 장치는 뉴럴 프로세싱 시스템의 동작을 위한 데이터를 저장할 수 있다. 예를 들어, 불휘발성 메모리 장치 뉴럴 프로세싱 시스템의 OS(operating system), 뉴럴 네트워크를 위한 연산 파라미터(예컨대, 웨이트(weight) 값들, 바이어스(bias) 값들 등), 뉴럴 네트워크의 양자화를 위한 파라미터 (예컨대, 스케일 펙터(scale factor), 바이어스 값들 등), 입력 데이터(예컨대, 입력 피처 맵(input feature map)) 및 출력 데이터(예컨대 출력 피처 맵(output feature map)을 저장할 수 있다. 상기 연산 파라미터, 양자 화 파라미터, 입력 데이터 및 출력 데이터는 부동 소수점 데이터 또는 정수 데이터일 수 있다. 불휘발성 메모리 장치는 ROM (Read Only Memory), PROM (Programmable ROM), EPROM (Electrically Programmable ROM), EEPROM (Electrically Erasable and Programmable ROM), 플래시 메모리, PRAM (Phase-change RAM), MRAM (Magnetic RAM), RRAM (Resistive RAM), FRAM (Ferroelectric RAM) 등을 포함한다. 그러나 본 개시의 범위는 이에 한정되지 않는다. 중앙 처리 유닛은 사용자 인터페이스를 통해 사용자와 통신할 수 있다. 중앙 처리 유닛은 사용 자 인터페이스를 통해 사용자로부터 제공된 입력 데이터를 휘발성 메모리 장치 또는 뉴럴 프로세싱유닛에 제공할 수 있다. 중앙 처리 유닛은 인공지능 모델이 입력 데이터에 기초하여 생성한 출력 데 이터를 사용자 인터페이스를 통해 사용자에 반환할 수 있다. 도 2는 일 실시예에 따른 뉴럴 네트워크 연산을 설명하기 위한 도면이다. 도 2를 참조하면, 뉴럴 네트워크는 복수의 레이어를 포함할 수 있다. 예를 들어, 뉴럴 네트워크는 입 력 레이어, 하나 이상의 히든 레이어들 및 출력 레이어를 포함할 수 있다. 입력 레이어는 뉴럴 네트워크의 입력 데이터를 나타내는 벡터 및/또는 매트릭스에 대응할 수 있다. 예를 들어, 입력 데이터를 나타내는 벡터는 입력 레이어에 포함된 노드들의 개수에 대응하는 원소들(elements)을 가질 수 있다. 예를 들어, 입력 데이터를 나타내는 매트릭스에 포함된 원소들은, 입력 레이어에 포함된 노드들 각 각에 대응할 수 있다. 입력 데이터에 의해 발생된, 입력 레이어 내 노드들 각각에서 발생된 신호들은, 입력 레이어에서 히든 레이어들로 송신될 수 있다. 출력 레이어는 히든 레이어들 로부터 수신된 하나 이상의 신호들에 기반하여, 뉴럴 네트워크의 출력 데이터를 생성할 수 있다. 예를 들어, 상기 출력 데이터는 출력 레이어에 포함된 노드들의 개수에 대응하는 원소들을 가 지는 벡터 및/또는 매트릭스에 대응할 수 있다. 각각의 레이어에서 생성되는 데이터는, 한 레이어의 출력임과 동시에 다음 레이어에 포함된 노드들의 입력 파라 미터일 수 있다. 한편, 레이어 내의 각각의 노드들은 이전 레이어에 포함된 노드들로부터 수신한 데이터 및 가 중치(weight)에 기초하여 출력 데이터를 결정할 수 있다. 가중치는 각 노드에서의 출력 데이터를 계산하기 위해 이용되는 파라미터로서, 노드들 간의 연결관계에 할당되는 값일 수 있다. 레이어에 포함되는 노드들로부터 생성 되는 출력 데이터는 노드에 입력되는 데이터와 가중치의 내적 연산에 의해 생성된 데이터일 수 있다. 도 1에서 설명한 바와 같이, 각 레이어에 입력되는 데이터들은 복수의 데이터 타입일 수 있다. 일 실시예에 따 른 전자 장치는 상이한 데이터 타입을 갖는 복수의 데이터를 입력 데이터로서 수신하고, 입력 데이터들에 대한 내적 연산을 수행할 수 있다. 예를 들어, 일 실시예에 따른 전자 장치는 부동 소수점 데이터의 입력 매트릭스와 경량화를 위해 정수로 변환된 가중치 매트릭스에 대한 내적 연산을 수행할 수 있다. 도 1에서 설명한 바와 같이, 각 레이어에 입력되는 데이터들은 상이한 비트일 수 있다. 일 실시예에 따른 전자 장치는 상이한 비트의 복수의 데이터를 입력 데이터로서 수신하고, 입력 데이터들에 대한 내적 연산을 수 행할 수 있다. 예를 들어, 전자 장치는 3 비트 데이터와 2 비트 데이터에 대한 내적 연산을 수행할 수 있 다. 일 실시예에 따른 전자 장치는 입력 데이터의 비트에 기초한 클록 신호를 생성하고, 해당 클록 신호에 기 초하여 내적 연산을 수행할 수 있다. 예를 들어, 클록 신호에 기초하여 데이터를 시프트(shift)하고 가산함으로 써 입력 데이터에 대한 곱셈 결과를 도출할 수 있다. 일 실시예에 따른 전자 장치는 데이터의 정확도를 유지하면서, 입력 데이터의 감소에 기초한 연산 장치의 성능 향상 및 뉴럴 네트워크 모델 알고리즘의 경량화를 구현할 수 있다. 도 3은 입력 데이터 포맷을 설명하기 위한 도면이다. 구체적으로, 도 3의 (a)는 연산 장치에 의해 처리되는 부 동 소수점(floating point) 데이터 포맷을 설명하기 위한 도면이고, 도 3의 (b)는 정수 데이터를 설명하기 위한 도면이다. 도 3의 (a)를 참조하면, 부동 소수점 데이터는 정밀도에 따라 다양한 형태가 있을 수 있으나 가장 많이 활용되 는 것이 IEEE 754 표준 방식이다. IEEE 754 표준 방식은 실수를 부호(sign), 지수부(exponent), 가수부 (mantissa)로 구분하여 표시한다. 예를 들어, 부동 소수점 숫자는 수학식 1과 같이 표현될 수 있다. 수학식 1"}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "단일 정밀도(single precision)에서, 부동 소수점 데이터는 총 32비트를 사용한다. 구체적으로, 부호(sign)는 1 비트로서, 데이터의 부호를 나타내며, 양수일 때 0, 음수일 때 1이 된다. 지수부(exponent)는 8비트로서 지수를 나타내고, 가수부(mantissa)는 23비트로서, 가수 또는 유효 숫자를 나타낸다. 예를 들어, -314.625를 IEEE 754 부동 소수점 방식으로 표현하면 다음과 같다. 먼저, 부호(sign)는 음수이므로, s는 1이 된다. 가수부(mantissa)와 관련하여, 숫자의 절대값인 314.625를 2진수로 표현하면, 이 된다. 이 때, 소수점을 왼쪽으로 이동시켜 소수점 왼쪽에 1만 남도록 하면, 다음과 같이 표현될 수 있고, 이를 정규화된 표현 방식이라 한다."}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "여기서, 가수부는 소수점의 오른쪽 부분, 즉 00111010101이 된다. 지수부(exponent)와 관련하여, -314.625의 정규화된 표현 방식에서 지수는 8 이고, 지수 8에 바이어스(bias)값 인 127을 더해주면 135가 된다. 이 때, 135를 2진수로 변환하면 가 되며, 이 값이 지수부가 된다. 여기서는 단일 정밀도를 예로서 설명하지만, 절반 정밀도(half precision) 또는 이중 정밀도(double precisio n)에서, 지수부 및 가수부의 비트와 바이어스 값은 상이할 수 있다. 한편, 도 3의 (b)를 참조하면, 정수 데이터는 부호의 유무 및 데이터 사이즈(비트 수)에 따라서 다양한 타입으 로 표현될 수 있다. 일 예로서, 일반적으로 컴퓨팅 연산에 사용되는 정수는 도 3의 (b)에 도시된 바와 같이 부 호를 포함하는 8비트의 데이터(2의 보수)로 표현될 수 있으며, 이 때, 최상위 비트는 부호(sign)를 나타내고, 이후의 7비트는 정수부(integer)를 나타내고 그 크기는 가 된다. 무부호(unsigned) 수 인 경우에는 양수이며 그 크기는 가 된다. 도 4는 비교예에 따른 연산 회로를 나타내는 도면이다. 구체적으로, 비교예에 따른 연산 회로는 부동 소수 점 데이터에 대한 곱셈 및 누적 연산을 수행할 수 있다. 도 4를 참조하면, 비교예에 따른 연산 회로는, 제1 입력 데이터(IN1 [31:0]) 및 제2 입력 데이터 (IN2[31:0])를 수신하고, 입력 데이터들에 대한 곱셈 및 누적 연산을 수행할 수 있다. 일 예에서 제1 입력 데이 터(IN1[31:0]) 및 제2 입력 데이터(IN2[31:0])가 32비트의 부동 소수점 데이터인 경우, 제1 입력 데이터 (IN1[31:0]) 및 제2 입력데이터(IN2[31:0]) 각각은 1비트의 부호 데이터(S_IN1[31], S_IN2[31]), 8비트의 지수 데이터(E_IN1[30:23], E_IN2[30:23]), 및 23비트의 가수 데이터(M_IN1[22:0], M_IN2[22:0])로 구성될 수 있다. 비교예에 따른 연산 회로는 곱셈부 및 누적부를 포함할 수 있다. 곱셈부는 부호 연산부 , 지수 연산부, 그리고 가수 연산부를 포함하고, 누적부는 가산기 및 누적기를 포함할 수 있다. 곱셈부를 살펴보면, 부호 연산부는, 배타적 논리합(Exclusive OR; 이하 XOR)게이트를 포함할 수 있다. 부호 연산부는 제1 입력 데이터(IN1)의 제1 부호 데이터(S_IN1[31])와 제2 입력 데이터(IN2)의 제2 부호 데이터(S_IN2[31])를 수신할 수 있다. 제1 부호 데이터(S_IN1[31])와 제2 부호 데이터(S_IN2[31])가 모두 양수를 나타내는 \"0\"의 값을 갖거나, 음수를 나타내는 \"1\"의 값을 갖는 경우, 부호 연산부의 XOR게이트는 양수를 나타내는 \"0\"을 출력할 수 있다. 반면에 제1 부호 데이터(S_IN1[31])와 제2 부호 데이터(S_IN2[31]) 중 하나가 양수를 나타내는 \"0\"의 값을 갖고 나머지 하나가 음수를 나타내는 \"1\"의 값을 갖는 경우, 부호 연산부 의 XOR게이트는 음수를 나타내는 \"1\"을 출력할 수 있다. 부호 연산부는, XOR연산 결과 생성되는 데이 터를 출력 데이터(OUT)의 1비트의 부호 데이터(OUT[31])로 출력할 수 있다. 지수 연산부는 제1 지수 가산기 및 제2 지수 가산기를 포함할 수 있다. 제1 지수 가산기는 제1 입력 데이터(IN1)의 제1 지수 데이터(E_IN1[30:23])와 제2 입력 데이터(IN2)의 제2 지수 데이터 (E_IN2[30:23])를 수신할 수 있다. 제1 지수 가산기는 제1 지수 데이터(E_IN1[30:23])와 제2 지수 데이터 (E_IN2[30:23])에 대한 제1 가산 연산을 수행할 수 있다. 제1 지수 가산기는 제1 가산 연산 결과 생성된 제1 가산 결과 데이터를 출력할 수 있다. 제1 지수 데이터(E_IN1[30:23])와 제2 지수 데이터(E_IN2[30:23])는 각각 지수 바이어스 값, 예컨대 \"127\"이 더해진 상태이다. 제1 지수 가산기에서의 제1 가산 연산에 의해 지수 바이어스 값이 두배가 됨에 따라, 제1 가산 결과 데이터에 지수 바이어스 값을 감산할 필요가 있다. 따라 서, 제2 지수 가산기는 제1 지수 가산기로부터 출력되는 제1 가산 결과 데이터를 수신하고, 제1 가산 결과 데이터에 지수 바이어스 값(Bias), 예컨대 \"127\"을 감산하는 제2 가산 연산을 수행할 수 있다. 제2 지수가산기는 제2 가산 연산 결과 생성되는 데이터를 8비트의 지수 데이터(E_OUT[7:0])로 출력할 수 있다. 가수 연산부는 곱셈기를 포함할 수 있다. 곱셈기는, 제1 입력 데이터(IN1)의 제1 가수 데이터 (M_IN1[22:0])와 제2 입력 데이터(IN2)의 제2 가수 데이터(M_IN2[22:0])를 수신할 수 있다. 곱셈기는 제1 가수 데이터(M_IN1[22:0])와 제2 가수 데이터(M_IN2[22:0])에 대한 곱셈 연산을 수행할 수 있다. 곱셈기는, 곱셈연산 결과 생성되는 데이터를 48비트의 가수 데이터(M_OUT[47:0)로 출력할 수 있다. 정규화기는 지수 연산부에서 출력된 지수 데이터(E_OUT[7:0])와 가수 연산부에서 출력된 가수 데이터(M_OUT[47:0])를 정규화할 수 있다. 정규화란 최상위 비트가 1이 되도록, 계산한 데이터를 시프트하는 것 을 지칭할 수 있다. 정규화된 데이터(OUT[30:0])는 부호 처리 회로에서 출력된 부호 데이터(OUT[31])와 함 께 곱셈기 결과 값(OUT)으로 누적부로 출력될 수 있다. 누적부를 살펴보면, 가산기는 곱셈부로부터 수신한 데이터와 누적기로부터 수신한 데이터 를 가산함으로써 누적 연산을 수행한다. 상술한 바와 같이, 비교예에 따른 연산 회로는 매트릭스 형태의 입력 데이터들에 대해 곱셈 및 누적 연산 을 수행함으로써 매트릭스에 대한 내적 연산을 수행할 수 있다. 그러나, 비교예에 따른 연산 회로는 부동 소수점 데이터만을 입력 데이터로서 수신할 수 있다. 한편, 곱셈기가 입력 데이터로서 부동 소수점 데이터를 수신할 때, 부동 소수점 데이터는 미리 결정된 정 밀도로 구성되고, 부동 소수점 데이터의 가수 데이터의 크기, 즉 비트 수가 미리 결정된 가수부의 크기보다 작 은 경우, 나머지 비트는 \"0\"으로 채워진다. 이는 입력 데이터의 크기가 작아짐에도 불구하고 곱셈기는 가수부의 모든 값에 대한 연산을 수행하므로 곱셈기, 즉 연산 장치의 성능은 향상되지 않는 문제가 있다. 도 5는 일 실시예에 따른 뉴럴 프로세싱 유닛의 동작 방법을 설명하기 위한 순서도이다. 도 5는 뉴럴 네트워크 연산을 위한 뉴럴 프로세싱 유닛(도 1의 120)에서 수행될 수 있다. 도 5를 참조하면, 뉴럴 프로세싱 유닛 내의 제어기는 메모리 장치로부터 입력 데이터들을 수신할 수 있다(S510). 입력 데이터들은 뉴럴 네트워크 연산에 필요한 입력 피처 값들, 웨이트 값, 함수의 계수들 등을 포함할 수 있다. 또한, 뉴럴 네트워크 장치가 양자화된 뉴럴 네트워크를 처리하는 경우에는 입력 데이 터들은 양자화 파라미터들을 포함할 수 있다. 예컨대, 양자화 파라미터는 스케일 값(또는, 역스케일 값), 바이 어스 값 등을 포함할 수 있다. 일 실시예에서, 뉴럴 프로세싱 유닛 내의 제어기는 입력 데이터들의 데이터 타입을 나타내는 데이터 타입 정보를 출력할 수 있다(S520). 일 실시예에서, 입력 데이터들은 서로 동일하거나 상이한 데이터 타입일 수 있다. 예를 들어, 입력 데이터들은 부동 소수점 데이터일 수 있다. 입력 데이터들은 정수 데이터일 수 있다. 입 력 데이터들은 부동 소수점 데이터와 정수 데이터일 수 있으나, 이에 제한되지 않는다. 데이터 타입 정보에 관 해서는 도 6 내지 도 8을 참조하여 설명한다. 일 실시예에서, 뉴럴 네트워크 장치 내의 제어기는 입력 데이터들의 비트 수에 기초한 클록 신호를 출력할 수 있다(S530). 일 실시예에서, 뉴럴 네트워크 장치는 입력 데이터들을 수신하고, 입력 데이터들의 비트를 카운팅할 수 있다. 일 실시예에서, 뉴럴 네트워크 장치 내의 제어기는 입력 데이터들의 비트만큼의 클록 신호를 출력할 수 있다. 일 실시예에서, 뉴럴 네트워크 장치 내의 제어기는 입력 데이터들 중 하나의 입력 데이터의 비트만큼의 클록 신호를 출력할 수 있다. 일 실시예에서, 뉴럴 네트워크 장치는 입력 데이터들의 비트 정보에 기초하여 출력된 클록 사이클이 경과할 때 까지, 새로운 입력 데이터를 수신하지 않을 수 있다. 일 실시예에서, 뉴럴 네트워크 장치는 입력 데이터들에 대한 곱셈 및 누적 연산을 수행할 수 있다(S540). 뉴럴 네트워크 장치는 곱셈 연산을 수행하기 위해, 가산기 및 시프터를 포함할 수 있다. 뉴럴 네트워 크 장치는 데이터 타입 정보에 기초하여, 지수부 연산을 수행할 수 있다. 뉴럴 네트워크 장치는 클록 신호에 기초하여, 가수부 연산을 수행할 수 있다. 일 실시예에서, 뉴럴 네트워크 장치는 단계(S540)에서 생성된 최종 데이터를 메모리에 저장할 수 있 다(S550). 도 6은 일 실시예에 따른 연산 장치의 개략적인 블록도이다. 도 6의 연산 장치는 입력 데이터들에 대한 내 적 연산을 수행할 수 있다. 도 6의 연산 장치는 입력 데이터들에 대한 곱셈 및 누적 연산을 수행하기 위한 MAC 연산기일 수 있다. 일 실시예에서, 연상 장치는 제어기와 연산 회로를 포함할 수 있다. 일 실시예에서, 연산 장치는 동일하거나 상이한 타입의 입력 데이터(IN1, IN2)를 수신할 수 있다. 제어기 는 입력 데이터(IN1, IN2)의 데이터 타입을 나타내는 데이터 타입 신호(DS1, DS2)를 출력할 수 있다. 예를 들어, 제1 입력 데이터(IN1)가 정수 데이터인 경우 제1 데이터 타입 신호(DS1)는 \"로(low)\" 신호를 출력할 수 있고, 제2 입력 데이터(IN2)가 부동 소수점 데이터인 경우 제2 데이터 타입 신호(DS2)는 \"하이(high)\" 신호를 출력할 수 있으나, 이에 제한되지 않는다. 일 실시예에서, 연산 회로는 입력 데이터(IN1, IN2)의 데이터 타입 신호(DS1, DS2)에 기초하여 지수부 연산을 수행할 수 있다. 연산 회로의 지수부 연산에 관해서는 도 8을 참조하여 후술한다. 일 실시예에서, 제어기는 입력 데이터(IN, IN2)의 데이터 비트 수 정보에 기초하여 클록 신호(CLK)를 출력 할 수 있다. 예를 들어, 제1 입력 데이터(IN1)가 정수 데이터이고, 부호 비트를 포함하는 경우, 최상위 비트를 제외한 비트를 제1 입력 데이터(IN1)의 비트 수 정보로서 획득할 수 있다. 제2 입력 데이터(IN2)가 부동 소수점 데이터인 경우, 가수부의 비트 수를 제2 입력 데이터(IN2)의 비트 수 정보로서 획득할 수 있다. 일 실시예에서, 제어기는 입력 데이터(IN, IN2)의 데이터 비트의 수 정보에 기초하여 클록 신호(CLK)를 출 력할 수 있다. 제어기는 입력 데이터(IN1, IN2)의 비트 수만큼 사이클이 반복되는 클록 신호를 출력할 수 있다. 일 실시예에서, 제어기는 복수의 입력 데이터(IN1, IN2) 중 임의의 데이터의 비트 수에 기초한 클록 신호를 출력할 수 있다. 일 실시예에서, 제어기는 복수의 입력 데이터(IN1, IN2)의 비트 수를 비교하여, 적은 비트 수를 갖는 입력 데이터의 비트 수에 기초한 클록 신호를 출력할 수 있다. 일 실시예에서, 연산 회로 는 입력 데이터(IN1, IN2)의 데이터 비트의 수 정보에 기초한 클록 신호에 기초하여 가수부 연산을 수행할 수 있다. 연산 회로의 가수부 연산에 관해서는 도 9를 참조하여 후술한다. 일 실시예에서, 제어기는 클록 신호(CLK)가 모두 출력될 때까지 새로운 입력 데이터를 수신하지 않을 수 있다. 도 7은 일 실시예에 따른 연산 회로의 개략적인 블록도이다. 도 7을 참조하면, 연산 회로는 곱셈부 및 누적부를 포함할 수 있다. 일 실시예에서, 곱셈부 는 부호 연산부, 지수 연산부, 및 가수 연산부를 포함할 수 있다. 일 실시예에서, 부호 연산부는 제1 입력 데이터(IN1)의 제1 부호 데이터(S_IN1[A])와 제2 입력 데이터 (IN2)의 제2 부호 데이터(S_IN2[B])를 수신할 수 있다. 제1 부호 데이터(S_IN1[A])와 제2 부호 데이터 (S_IN2[B])가 모두 양수를 나타내는 \"0\"의 값을 갖거나, 음수를 나타내는 \"1\"의 값을 갖는 경우, 부호 연산부 의 XOR게이트는 양수를 나타내는 \"0\"을 출력할 수 있다. 반면에 제1 부호 데이터(S_IN1[A])와 제2 부호 데 이터(S_IN2[B]) 중 하나가 양수를 나타내는 \"0\"의 값을 갖고 나머지 하나가 음수를 나타내는 \"1\"의 값을 갖는 경우, 부호 연산부의 XOR게이트는 음수를 나타내는 \"1\"을 출력할 수 있다. 부호 연산부는, XOR연산 결과 생성되는 데이터를 1비트의 부호데이터(S_OUT)로서 출력할 수 있다. 지수 처리 회로는 제1 입력 데이터(IN1)의 제1 지수 데이터(E_IN1[A-1:a+1])와 제2 입력 데이터(IN2)의 제2 지수 데이터(E_IN2[B-1:b+1])를 수신할 수 있다. 일 실시예에서, 제1 입력 데이터(IN1)와 제2 입력 데이터 (IN2)는 모두 부동 소수점 데이터 또는 모두 정수 데이터일 수 있거나, 제1 입력 데이터(IN1)와 제2 입력 데이 터(IN2) 중 하나는 정수 데이터이고 나머지 하나는 부동 소수점 데이터일 수 있다. 한편, 입력 데이터가 모두 정수 데이터인 경우, 해당 입력 데이터에 대한 지수 데이터는 존재하지 않는다. 지수 처리 회로는 제어기 (도 6의 610)로부터 데이터 타입 신호(DS1, DS2)를 더 수신할 수 있다. 지수 처리 회로의 구성 요소 및 구 체적인 동작 방법과 관련하여 도 8을 참조하여 설명한다. 도 8은 일 실시예에 따른 지수 연산부를 나타내는 도면이다. 일 실시예에 따른 지수 연산부는 제1 지수 가산기 및 제2 지수 가산기를 포함하는 지수 처리 회 로와 각 가산기의 입력 노드에 연결된 멀티플렉서(MUX_E1, MUX_E2, MUX_E3)를 더 포함할 수 있다. 일 실시예에서, 제1 멀티플렉서(MUX_E1)는 제1 입력 데이터(IN1)의 제1 지수 데이터(E_IN1[A-1:a+1])를 수신하는 제1 입력 노드와 \"0\"을 수신하는 제2 입력 노드를 포함할 수 있다. 제1 멀티플렉서(MUX_E1)는 선 택 신호로서 제1 데이터 타입 신호(DS1)를 수신할 수 있다. 제1 멀티플렉서(MUX_E1)는 제1 데이터 타입 신 호(DS1)를 수신하는 선택 노드를 포함할 수 있다. 예를 들어, 제1 입력 데이터(IN1)가 정수 데이터인 경우, 제1 지수 데이터는 존재하지 않는다. 따라서, 제1 멀티플렉서는 제1 데이터 타입 신호(DS1)에 기초하여 \"0\"을출력할 수 있다. 일 실시예에서, 제2 멀티플렉서(MUX_E2)는 제2 입력 데이터(IN2)의 제2 지수 데이터(E_IN2[B-1:b+1])를 수신하는 제1 입력 노드와 \"0\"을 수신하는 제2 입력 노드를 포함할 수 있다. 제2 멀티플렉서(MUX_E2)는 선 택 신호로서 제2 데이터 타입 신호(DS2)를 수신할 수 있다. 제2 멀티플렉서(MUX_E2)는 제2 데이터 타입 신 호(DS2)를 수신하는 선택 노드를 포함할 수 있다. 예를 들어, 제2 입력 데이터(IN2)가 부동 소수점 데이터인 경 우, 제2 멀티플렉서는 제2 데이터 타입 신호(DS2)에 기초하여 제2 지수 데이터(E_IN2[B-1:b+1])를 출력할 수 있다. 일 실시예에 따르면, 제1 입력 데이터(IN1)와 제2 입력 데이터(IN2)는 부동 소수점 데이터일 수 있다. 제1 입력 데이터(IN1)와 제2 입력 데이터(IN2)가 부동 소수점 데이터이면, 제1 멀티플렉서는 제1 데이터 타입 신호 (DS1)에 기초하여 제1 지수 데이터(E_IN1[A-1:a+1])를 출력하고, 제2 멀티플렉서는 제2 데이터 타입 신호 (DS2)에 기초하여 제2 지수 데이터(E_IN2[B-1:b+1])를 출력할 수 있다. 제1 지수 가산기는 제1 지수 데이 터(E_IN1[A-1:a+1])와 제2 지수 데이터(E_IN2[B-1:b+1])를 수신하고, 제1 가산 연산을 수행할 수 있다. 제1 지 수 데이터(E_IN1[A-1:a+1])와 제2 데이터(E_IN2[B-1:b+1])는 각각 지수 바이어스 값, 예컨대 \"127\"이 더해진 상태이다. 제1 지수 가산기의 제1 가산 연산에 의해 지수 바이어스 값이 두배가 됨에 따라, 제1 가산 결과 데이터에 지수 바이어스 값을 감산할 필요가 있다. 한편, 제3 멀티플렉서(MUX_E3)는 음수의 지수 바이어스 값(-Bias)을 수신하는 제1 입력 노드와 \"0\"을 수신 하는 제2 입력 노드를 포함할 수 있다. 제3 멀티플렉서는 AND 연산기로부터 제1 데이터 타입 신호 (DS1)와 제2 데이터 타입 신호(DS2)를 AND 연산하여 생성된 신호를 선택 신호(SEL)로서 수신할 수 있다. 제3 멀 티플렉서는 AND 연산기로부터 제1 데이터 타입 신호(DS1)와 제2 데이터 타입 신호(DS2)를 AND 연산하 여 생성된 신호를 수신하는 선택 노드를 포함할 수 있다. 예를 들어, 제3 멀티플렉서는 제1 입력 데이터와 제2 입력 데이터가 모두 부동 소수점 데이터인 경우, 즉 선택 신호(SEL)가 \"1\"인 경우 음수의 지수 바이어스 값 을 출력할 수 있다. 제3 멀티플렉서는 제1 입력 데이터와 제2 입력 데이터 중 하나가 정수 데이터인 경우, 즉 선택 신호(SEL)가 \"0\"인 경우 \"0\"을 출력할 수 있다. 일 예에서, 제1 입력 데이터(IN1)와 제2 입력 데이터 (IN2)는 모두 부동 소수점 데이터이므로, 제3 멀티플렉서는 선택 신호(SEL)에 기초하여 음수의 지수 바이 어스 값, 예컨대 \"-127\"을 출력할 수 있다. 이에 따라 제2 지수 가산기는, 제1 지수 가산기로부터 출 력되는 제1 가산 결과 데이터를 수신하고, 제1 가산 결과 데이터에 지수 바이어스값(Bias), 예컨대 \"127\"을 감 산하는 제2 가산 연산을 수행할 수 있다. 제2 지수 가산기는 제2 가산 연산 결과 생성되는 데이터를 곱셈 데이터(OUT)의 지수데이터(E_OUT)로서 출력할 수 있다. 다른 실시예에 따르면, 제1 입력 데이터(IN1)는 부동 소수점 데이터일 수 있고, 제2 입력 데이터(IN2)는 정수 데이터일 수 있다. 제1 입력 데이터(IN1)가 부동 소수점 데이터이고 제2 입력 데이터(IN2)가 정수 데이터이면, 지수 연산부의 제1 멀티플렉서는 제1 데이터 타입 신호(DS1)에 기초하여 제1 지수 데이터(E_IN1[A- 1:a+1])를 출력하고, 제2 멀티플렉서는 제2 데이터 타입 신호(DS2)에 기초하여 \"0\"을 출력할 수 있다. 제1 지수 가산기는 제1 지수 데이터(E_IN1[A-1:a+1])와 \"0\"을 수신하고, 제1 가산 연산을 수행할 수 있다. 제1 지수 데이터(E_IN1[A-1:a+1])는 지수 바이어스 값, 예컨대 \"127\"이 더해진 상태이고, 제1 가산 결과 데이터에 지수 바이어스 값을 감산할 필요가 없다. 따라서, 제3 멀티플렉서는 선택 신호(SEL)에 기초하여 \"0\"을 출 력할 수 있다. 이에 따라 제2 지수 가산기는, 제1 지수 가산기로부터 출력되는 제1 가산 결과 데이터 를 수신하고, 제1 가산 결과 데이터에 \"0\"을 감산하는 제2 가산 연산을 수행할 수 있다. 제2 지수 가산기 는 제2 가산 연산 결과 생성되는 데이터를 곱셈데이터(OUT)의 지수데이터(E_OUT)로서 출력할 수 있다. 또 다른 실시예에 따르면, 제1 입력 데이터(IN1)와 제2 입력 데이터(IN2)는 정수 데이터일 수 있다. 제1 입력 데이터(IN1)와 제2 입력 데이터(IN2)가 정수 데이터이면, 지수 연산부의 제1 멀티플렉서는 제1 데이 터 타입 신호(DS1)에 기초하여 \"0\"을 출력하고, 제2 멀티플렉서는 제2 데이터 타입 신호(DS2)에 기초하여 \"0\"을 출력할 수 있다. 제1 지수 가산기는 제1 멀티플렉서의 출력 데이터와 제2 멀티플렉서의 출력 데이터를 수신하고, 제1 가산 연산을 수행할 수 있다. 제3 멀티플렉서는 선택 신호(SEL)에 기초하여 \"0\"을 출력할 수 있다. 이에 따라 제2 지수 가산기는, 제1 지수 가산기로부터 출력되는 제1 가산 결 과 데이터를 수신하고, 제1 가산 결과 데이터에 \"0\"을 감산하는 제2 가산 연산을 수행할 수 있다. 제2 지수 가 산기는 제2 가산 연산 결과 생성되는 데이터, 즉 \"0\"을 곱셈데이터(OUT)의 지수데이터(E_OUT)로서 출력할 수 있다. 도 7을 다시 참조하면, 가수 연산부는 제1 입력 데이터(IN1)의 제1 가수 데이터(M_IN1[a:0])와 제2 입력 데이터(IN2)의 제2 가수 데이터(M_IN2[b:0])를 수신할 수 있다. 입력 데이터가 부동 소수점 데이터인 경우 가수 데이터는 가수부를 지칭하고, 입력 데이터가 정수 데이터인 경우 가수 데이터는 정수부에 대응할 수 있다. 가수 연산부는 제어기(도 6의 610)로부터 클록 신호(CLK)를 더 수신할 수 있다. 가수 연산부의 구성 요소 및 구체적인 동작 방법과 관련하여 도 9를 참조하여 설명한다. 도 9는 일 실시예에 따른 가수 연산부를 나타내는 도면이다. 여기서는 설명의 편의를 위해 가수 연산부로 지칭 하였고, 입력 데이터가 정수 데이터인 경우 가수 연산부에 입력되는 데이터는 정수부일 수 있다. 일 실시예에 따른 가수 연산부는 제1 멀티플렉서, 제2 멀티플렉서, 카운터, 시프터, 가산기, 및 누적기를 포함할 수 있다. 일 실시예에 따른 가수 연산부는 입력 데이터에 대한 곱 셈 연산을 수행할 수 있다. 일 실시예에 따른 가수 연산부는 곱셈 연산을 수행하기 위해 시프터 및 가산기를 사용할 수 있다. 일 실시예에 따른 가수 연산부의 곱셈 연산은 가산 및 시프트 연산을 통해 수행될 수 있다. 도 10을 참조 하여, 가수 연산부의 연산 방법을 설명한다. 도 10은 도 9에 따른 가수 연산부의 연산 방법을 설명하기 위한 도면이다. 도 10을 참조하면, 곱셈에서, 는 피승수로, 는 승수로 지칭될 수 있다. 먼저, 승수의 최하위 비트 값이 \"1\"일 때, 피승수는 피승수 값( ) 그대로 출력 되고, 피승수는 왼쪽으로 1비트만큼 시프트될 수 있다( ). 다음으로, 승수의 다음 비트 값이 \"1\"이므로, 피승수는 그대로 출력되고( ), 이전 출 력값( )과 가산 연산을 수행할 수 있다. 가산 결과, 이 출력되고, 피승수는 왼쪽 으로 1비트만큼 시프트 될 수 있다( ). 다음으로, 승수의 다음 비트 값이 \"0\"이므로, 출력 값은 \"0\"이 되고, 이전 출력값 ( )과 가산 연산을 수행할 수 있다. 가산 결과, 이 출력되고, 피승수는 왼쪽으로 1비트만큼 시프트 될 수 있다. 상술한 방식으로 연산을 수행하면, 최종 출력 값은 이고, 이는 곱셈기로 연산을 수행한 결과와 동일하다. 즉, 이진수의 곱셈은 시프터 및 가산기로 수행할 수 있다. 도 9를 다시 참조하면, 일 실시예에 따른 가수 연산부의 연산은 도 10의 방법에 따라 수행될 수 있다. 일 실시예에서, 제1 입력 데이터(IN1)의 제1 가수 데이터(M_IN1[a:0])는 승수이고, 제2 입력 데이터(IN2)의 제2 가 수 데이터(M_IN2[b:0])는 피승수일 수 있다. 일 실시예에서, 제1 멀티플렉서는 제1 가수 데이터(M_IN1[a:0])를 입력 데이터로서 수신하는 복수의 입력 노드를 포함할 수 있다. 제1 멀티플렉서는 제1 가수 데이터(M_IN1[a:0])의 각각의 비트 값(M_IN1[a], …, M_IN1[1], M_IN1[0])을 입력 데이터로 수신할 수 있다. 제1 멀티플렉서는 선택 신호(SEL1)로서 카운터 의 출력 신호를 수신할 수 있다. 제1 멀티플렉서는 카운터의 출력 신호를 수신하는 선택 노드를 포함할 수 있다. 카운터는 제어기로부터 출력되는 클록 신호(CLK)가 활성화되는 횟수를 계수할 수 있 다. 즉, 카운터는 클록 신호(CLK)의 사이클을 카운팅할 수 있다. 제1 멀티플렉서는 카운터에서 출력되는 선택 신호(SEL1)에 기초하여 입력 데이터(M_IN1[a], …, M_IN1[1], M_IN1[0])를 최하위 비트부터 1 비트씩 순차적으로 출력할 수 있다. 클록 신호(CLK)의 사이클의 개수는 제1 가수 데이터(M_IN1[a:0])의 비트 개 수와 동일할 수 있다. 제1 멀티플렉서에서 출력되는 값은 제2 멀티플렉서의 선택 신호(SEL2)로 입력 될 수 있다. 일 실시예에서, 제2 멀티플렉서는 제2 가수 데이터(M_IN2[b:0])를 수신하는 제1 입력 노드와 \"0\"을 수신하 는 제2 입력 노드를 포함할 수 있다. 제2 멀티플렉서는 선택 신호(SEL2)로서 제1 멀티플렉서의 출력 값, 즉 제1 가수 데이터(M_IN1[a:0])의 각각의 비트 값(M_IN1[a], …, M_IN1[1], M_IN1[0])을 수신할 수 있다.제2 멀티플렉서는 제1 멀티플렉서의 출력 값, 즉 제1 가수 데이터(M_IN1[a:0])의 각각의 비트 값 (M_IN1[a], …, M_IN1[1], M_IN1[0])을 수신하는 선택 노드를 포함할 수 있다. 일 실시예에서, 제2 멀티플렉서 는 선택 신호(SEL2)가 \"0\"이면, 제2 멀티플렉서의 입력 데이터 중 \"0\"을 출력할 수 있다. 일 실시예 에서, 제2 멀티플렉서는 선택 신호(SEL2)가 \"1\"이면, 제2 멀티플렉서의 입력 데이터 중 제2 입력 데 이터(IN2)의 제2 가수 데이터(M_IN2[b:0])를 출력할 수 있다. 일 실시예에서, 가산기는 제2 멀티플렉서의 출력 데이터와 누적기로부터의 출력 데이터를 가산 하고, 가산된 데이터를 누적기로 전달할 수 있다. 일 실시예에서, 시프터는 제2 가수 데이터(M_IN2[b:0])를 1비트씩 왼쪽으로 시프트할 수 있다. 일 실시예 에서, 시프터는 시프트된 데이터를 제2 멀티플렉서의 제2 입력 노드로 전달할 수 있다. 일 실시예에서, 클록 신호(CLK)의 사이클의 개수는 제1 가수 데이터(M_IN1[a:0])의 비트 개수와 동일하므로, 제 1 가수 데이터(M_IN1[a:0])의 비트 수만큼 상술한 동작이 반복될 수 있다. 일 실시예에 따른 가수 연산부는 곱셈기를 포함하지 않고, 입력 데이터에 대한 시프트 및 가산 연산을 수 행하여 입력 데이터의 곱셈 값을 출력할 수 있다. 일 실시예에 따른 가수 연산부는 상이한 비트 수를 갖는 데이터들을 입력 데이터로서 수신하고, 입력 데이터에 대한 시프트 및 가산 연산을 수행할 수 있다. 일 실시예 에 따른 가수 연산부는 입력 데이터의 비트 수에 제한이 없고, 입력 데이터의 비트 수만큼 시프트 및 가산 연산을 수행하므로 비트 수의 감소에 따른 연산 장치의 성능을 향상할 수 있다. 도 7을 참조하면, 일 실시예에서, 제1 입력 데이터(IN1) 또는 제2 입력 데이터(IN2) 중 적어도 하나가 부동 소 수점 데이터이면, 정규화기는 지수 연산부에서 출력된 지수 데이터(E_OUT)와 가수 연산부에서 출력된 가수 데이터(M_OUT)를 정규화할 수 있다. 정규화기에서 출력된 출력 데이터(OUT)는 부호 연산부에 서 출력된 부호 데이터(S_OUT)와 함께 누적부로 출력될 수 있다. 다른 실시예에서, 제1 입력 데이터(IN1) 및 제2 입력 데이터(IN2)가 정수 데이터이면, 즉 지수 연산부에서 출력된 지수 데이터(E_OUT)가 \"0\"이면, 정규화기는 가수 연산부에서 출력된 가수 데이터(M_OUT)를 출력 데이터(OUT)로 출력할 수 있다. 정규 화기에서 출력된 출력 데이터(OUT)는 부호 연산부에서 출력된 부호 데이터(S_OUT)와 함께 누적부 로 출력될 수 있다. 도 7의 누적부에서, 가산기는 곱셈부로부터 수신한 데이터와 누적기로부터 수신한 데이터 를 가산함으로써 누적 연산을 수행할 수 있다. 도 11은 일 실시예에 따른 가수 연산부에서 수행되는 연산의 타이밍도를 나타낸다. 도 11을 참조하면, 제1 가수 데이터(M_IN1[5:0])는 6비트로서 이고, 제2 가수 데이터(M_IN2)는 4비트 로서 일 수 있다. 제1 가수 데이터(M_IN1)는 승수이고, 제2 가수 데이터(M_IN2)는 피승수이며, 클록 신 호(CLK)는 승수인 제1 가수 데이터(M_IN1)의 비트 수와 동일한 6 사이클(6 CYCLE) 동안 출력된다. 도 11의 타이 밍도와 관련하여, 도 9를 함께 참조하여 설명한다. 첫 번째 사이클(1 CYCLE)을 살펴보면, 카운터는 클록 신호(CLK)에 기초하여 제1 카운터 값( )을 출력 하고, 제1 멀티플렉서는 카운터의 출력 신호에 기초하여 승수인 제1 가수 데이터( 의 최하 위 비트 \"1\"을 출력할 수 있다. 제2 멀티플렉서는 입력 데이터로서 \"0\"과 피승수인 제2 가수 데이터 ( )를 수신할 수 있다. 제1 멀티플렉서의 출력 데이터(\"1\")는 제2 멀티플렉서의 선택 신호 (SEL2)로 입력되고, 제2 멀티플렉서는 선택 신호(SEL2)에 기초하여 제2 가수 데이터( )를 출력할 수 있다. 첫 번째 사이클에서 누적기는 아무 값도 출력하지 않으므로, 가산기(ADDER)는 제2 멀티플렉서 의 출력 데이터( )를 그대로 출력하고 누적기(ACC)로 전달할 수 있다. 두 번째 사이클(2CYCLE)을 살펴보면, 카운터는 클록 신호(CLK)에 기초하여 제2 카운터 값( )을 출력 하고, 제1 멀티플렉서는 카운터의 출력 신호에 기초하여 제1 가수 데이터( 의 두 번째 비 트 \"0\"을 출력할 수 있다. 제2 멀티플렉서는 입력 데이터로서 \"0\"과 제2 가수 데이터( )를 왼쪽으로 1 비트만큼 시프트한 을 수신할 수 있다. 제1 멀티플렉서의 출력 데이터(\"0\")는 제2 멀티플렉 서의 선택 신호(SEL2)로 입력되고, 제2 멀티플렉서는 선택 신호(SEL2)에 기초하여 \"0\"을 출력할 수 있다. 두 번째 사이클에서 누적기는 첫 번째 사이클에서 가산기의 출력 데이터( )를 출력하므 로, 가산기는 제2 멀티플렉서의 출력 데이터(\"0\")와 누적기의 출력 데이터( )를 가산한 데이터( )를 누적기로 전달할 수 있다. 세 번째 사이클(3CYCLE)을 살펴보면, 카운터는 클록 신호(CLK)에 기초하여 제3 카운터 값( )을 출력 하고, 제1 멀티플렉서는 카운터의 출력 신호에 기초하여 제1 가수 데이터( 의 세 번째 비 트 \"1\"을 출력할 수 있다. 제2 멀티플렉서는 입력 데이터로서 \"0\"과 제2 가수 데이터( )를 왼쪽으 로 2 비트만큼 시프트한 을 수신할 수 있다. 제1 멀티플렉서의 출력 데이터(\"1\")는 제2 멀티플 렉서의 선택 신호(SEL2)로 입력되고, 제2 멀티플렉서는 선택 신호(SEL2)에 기초하여 입력 데이터 ( 를 출력할 수 있다. 두 번째 사이클에서 누적기는 첫 번째 사이클에서 가산기의 출력 데 이터( )를 출력하므로, 가산기는 제2 멀티플렉서의 출력 데이터( )와 누적기의 출력 데이터( )를 가산한 데이터( )를 누적기로 전달할 수 있다. 상술한 방법으로 6 사이클이 수행되면, 누적기는 출력 데이터로서 가산기로부터 수신한 을 정규화기(도 7의 740)로 출력할 수 있다. 도 12는 다른 실시예에 따른 가수 연산부에서 수행되는 연산의 타이밍도를 나타낸다. 일 실시예에서, 연상 장치 내의 제어기는 입력 데이터(IN, IN2)의 데이터 비트 수 정보에 기초하여 클록 신호(CLK)를 출력할 수 있다. 이 때, 입력 데이터(IN1, IN2)의 데이터 비트 수는 상이할 수 있다. 따라서, 복수의 입력 데이터(IN1, IN2)의 비트 수를 비교하여, 적은 비트 수를 갖는 입력 데이터의 비트 수에 기초한 클 록 신호를 출력할 수 있다. 제어기는 복수의 입력 데이터(IN1, IN2) 중 비트 수가 적은 데이터를 승수로, 비트 수가 많은 데이터를 피승수로 결정할 수 있다. 도 12는 도 11의 실시예에서 승수와 피승수가 바뀐 실시예를 나타낸다. 구체적으로, 도 11의 승수인"}
{"patent_id": "10-2023-0133410", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "가 도 12에서 제2 가수 데이터(M_IN2)로서 피승수이고, 도 11의 피승수인 가 도 12에서 제1 가수 데이 터(M_IN1)로서 승수가 된다. 클록 신호(CLK)는 승수인 제1 가수 데이터(M_IN1)( )의 비트 수와 동일한 4 사이클 동안 출력된다. 도 12의 타이밍도와 관련하여, 도 9를 함께 참조하여 설명한다. 첫 번째 사이클(1CYCLE)을 살펴보면, 카운터는 클록 신호(CLK)에 기초하여 제1 카운터 값( )을 출력하 고, 제1 멀티플렉서는 카운터의 출력 신호에 기초하여 승수인 제1 가수 데이터( 의 최하위 비트 \"1\"을 출력할 수 있다. 제2 멀티플렉서는 입력 데이터로서 \"0\"과 피승수인 제2 가수 데이터 ( )를 수신할 수 있다. 제1 멀티플렉서의 출력 데이터(\"1\")는 제2 멀티플렉서의 선택 신호 (SEL2)로 입력되고, 제2 멀티플렉서는 선택 신호(SEL2)에 기초하여 제2 가수 데이터( )를 출력할 수 있다. 첫 번째 사이클에서 누적기는 아무 값도 출력하지 않으므로, 가산기는 제2 멀티플렉서(92 0)의 출력 데이터( )를 그대로 출력하고 누적기로 전달할 수 있다. 두 번째 사이클(2CYCLE)을 살펴보면, 카운터는 클록 신호(CLK)에 기초하여 제2 카운터 값( )을 출력하 고, 제1 멀티플렉서는 카운터의 출력 신호에 기초하여 제1 가수 데이터( 의 두 번째 비트 \"0\"을 출력할 수 있다. 제2 멀티플렉서는 입력 데이터로서 \"0\"과 제2 가수 데이터( )를 왼쪽으로1 비트만큼 시프트한 입력 데이터( )를 수신할 수 있다. 제1 멀티플렉서의 출력 데이터(\"0\")는 제2 멀티플렉서의 선택 신호(SEL2)로 입력되고, 제2 멀티플렉서는 선택 신호(SEL2)에 기초하여 \"0\"을 출력할 수 있다. 두 번째 사이클에서 누적기는 첫 번째 사이클에서 가산기의 출력 데이터 ( )를 출력하므로, 가산기는 제2 멀티플렉서의 출력 데이터(\"0\")와 누적기의 출력 데 이터( )를 가산한 데이터( )를 누적기로 전달할 수 있다. 상술한 방법으로 4 사이클이 수행되면, 누적기는 출력 데이터로서 가산기로부터 수신한 을 정규화기(도 7의 740)로 출력할 수 있다. 이와 같이, 가수 연산부로 입력되는 가수 데이터의 비트 수가 상이할 때, 입력 데이터 중 비트 수가 적은 데이 터를 승수, 즉 제1 멀티플렉서의 입력 데이터로 결정할 수 있다. 이는 클록 신호(CLK)의 사이클이 감소하 여 가수 연산부에서 수행되는 연산의 반복 횟수가 감소하므로 입력 데이터에 대한 연산에 소요되는 레이턴시 (latency)가 감소하는 이점이 있다. 도 13은 일 실시예에 따른 멀티 헤드 어텐션을 설명하기 위한 예시적인 도면이다. 멀티 헤드 어텐션은, 뉴럴 네트워크 모델 중 트랜스포머(Transformer) 모델, ASR(Automatic Speech Recognition) 모델 등에 이용되는 메커니즘으로, 스케일 내적 어텐션(1320; Scaled Dot-Product attention) 구조가 중첩(h)된 형태를 갖는다. 일 실시예에서 멀티 헤드 어텐션은 입력 데이터의 임베딩에 관한 셀프 어텐션(self-attention)을 수행할 수 있다. 임베딩은 인간이 쓰는 자연어를 기계가 이해할 수 있는 벡터 형태로 바꾼 결과 혹은 그 일련의 과정을 의미할 수 있다. 자연어와 같은 시퀀스 데이터를 처리할 경우 장기 의존성(long-term dependency)이 문제될 수 있다. 셀프 어텐 션은 이러한 장기 의존성을 해결하기 위한 것으로, 셀프 어텐션을 이용하면 문장 안에서 단어들 간의 관계를 측정할 수 있다. 구체적으로, 각 단어를 기준으로 다른 단어들과의 관계 값을 계산할 수 있고, 이 값을 어텐션 스코어(attention score)라 지칭한다. 관계도가 큰 단어 간의 어텐션 스코어는 높게 나올 수 있다. 어텐션 스코어를 하나의 테이블로 만든 것을 어텐션 맵이라 지칭한다. 멀티 헤드 어텐션은 어텐션 맵을 복 수개 만들어 다양한 특징 값에 대한 어텐션을 확인할 수 있다. 멀티 헤드 어텐션에서, 스케일 내적 어텐션 레이어의 입력은 쿼리(Query, Q), 키(Key, K), 밸류 (Value, V)를 포함한다. 예를 들어, 영어사전을 통해 특정 단어의 의미를 찾을 때, 특정 단어는 쿼리에 해당하 고, 사전에 등록된 단어는 키에 해당하며, 키의 의미는 밸류에 해당할 수 있다. 멀티-헤드 어텐션은 제1 선형 연산 레이어를 통해 밸류(V), 키(K), 및 쿼리(Q)의 차원을 감소시키 고, h개의 스케일 내적 어텐션 레이어를 통해 셀프 어텐션을 수행하며, 어텐션 결과에 관한 연쇄화 (concatenation) 및 제2 선형 연산 레이어를 통해 선형 연산을 수행할 수 있다. 일 실시예에서, 제1 선형 연산 레이어 및 제2 선형 연산 레이어에서 수행되는 선형 연산은 행렬 내적 연산을 지칭할 수 있다. 예를 들어, 제1 선형 연산은 입력 데이터의 임베딩 정보로부터 도출된 밸류 (V), 키(K), 및 쿼리(Q)의 차원을 감소시키기 위해, 입력 데이터의 임베딩 벡터와 특정 가중치를 곱하는 내적 연산을 수행할 수 있고, 제2 선형 연산 블록들은 연쇄화된 출력 매트릭스에 특정 가중치를 곱하는 내적 연산을 수행할 수 있다. 제1 선형 연산 레이어 및 제2 선형 연산 레이어는 일 실시예에 따른 연산 장치를 사용할 수 있다. 예를 들어, 제1 선형 연산 레이어 및 제2 선형 연산 레이어는 입력 데이터로서 입력 매트릭스와 가 중치 매트릭스를 수신할 수 있다. 일 실시예에서, 입력 매트릭스와 가중치 매트릭스의 원소들은 실수, 예컨대 부동 소수점으로 표현되는 부동 소수점 데이터 이거나 정수 데이터일 수 있다. 일 실시예에서, 입력 매트릭스와 가중치 매트릭스의 원소들은 상이한 정밀도, 즉 비트 일 수 있다. 일 실시예에 따른 연산 장치(도 1의 121)는 입력 매트릭스와 가중치 매트릭스에 대한 내적 연산을 수행할 수 있다. 도 14는 도 13의 스케일 내적 어텐션을 설명하기 위한 예시적인 도면이다. 스케일 내적 어텐션의 행렬 곱셈 레이어는 키(K)와 쿼리(Q)의 내적 연산을 수행하고, 유사도를 나타내는 어텐션 스코어(attention score)를 출력할 수 있다. 스케일링 레이어는 제1 행렬 곱셈 레이어 로부터 출력된 어텐션 스코어의 크기를 조절하기 위한 스케일링을 수행할 수 있다. 마스크 레이어는 마스킹을 통해 잘못된 연결의 어텐션을 막을 수 있다. 소프트맥스 연산 레이어는 어텐션 스코어에 기 초하여 가중치를 계산하고, 제2 행렬 곱셈 레이어는 소프트맥스 연산 레이어의 출력인 가중치와 밸류(V)에 대한 내적 연산을 수행할 수 있다. 제1 행렬 곱셈 레이어 및 제2 행렬 곱셈 레이어는 일 실시예에 따른 연산 장치를 사용할 수 있 다. 예를 들어, 제1 행렬 곱셈 레이어는 입력 데이터로서 키(K) 벡터와 쿼리(Q) 벡터를 수신할 수 있고, 제2 행렬 곱셈 레이어는 입력 데이터로서 밸류(V) 벡터와 가중치 매트릭스를 수신할 수 있다. 일 실시예에서, 제1 행렬 곱셈 레이어 및 제2 행렬 곱셈 레이어의 입력 데이터 벡터의 원소들은 실수, 예컨대 부동 소수점 수로 표현되는 부동 소수점 데이터 이거나 정수 데이터일 수 있다. 일 실시예에서, 제1 행렬 곱셈 레이어 및 제2 행렬 곱셈 레이어의 입력 데이터 벡터의 원소들은 상이한 정밀도, 즉 비트 일 수 있다. 일 실시예에 따른 연산 장치(도 1의 121)는 입력 벡터와 가중치 매트릭스에 대한 내적 연산을 수행할 수 있다. 이상에서 본 발명의 실시예에 대하여 상세하게 설명하였지만 본 발명의 권리범위는 이에 한정되는 것은 아니고 다음의 청구범위에서 정의하고 있는 본 발명의 기본 개념을 이용한 당업자의 여러 변형 및 개량 형태 또한 본 발명의 권리범위에 속하는 것이다."}
{"patent_id": "10-2023-0133410", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시 예에 따른 뉴럴 프로세싱 시스템을 보여주는 블록도이다. 도 2는 일 실시예에 따른 뉴럴 네트워크 연산을 설명하기 위한 도면이다. 도 3은 입력 데이터 포맷을 설명하기 위한 도면이다. 도 4는 비교예에 따른 연산 회로를 나타내는 도면이다. 도 5는 일 실시예에 따른 뉴럴 프로세싱 유닛의 동작 방법을 설명하기 위한 순서도이다. 도 6은 일 실시예에 따른 연산 장치의 개략적인 블록도이다. 도 7은 일 실시예에 따른 연산 회로의 개략적인 블록도이다. 도 8은 일 실시예에 따른 지수 연산부를 나타내는 도면이다. 도 9는 일 실시예에 따른 가수 연산부를 나타내는 도면이다.도 10은 도 9에 따른 가수 연산부의 연산 방법을 설명하기 위한 도면이다. 도 11은 일 실시예에 따른 가수 연산부에서 수행되는 연산의 타이밍도를 나타낸다. 도 12는 다른 실시예에 따른 가수 연산부에서 수행되는 연산의 타이밍도를 나타낸다. 도 13은 일 실시예에 따른 멀티 헤드 어텐션을 설명하기 위한 예시적인 도면이다. 도 14는 도 13의 스케일 내적 어텐션을 설명하기 위한 예시적인 도면이다."}
