{"patent_id": "10-2022-0000862", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0105460", "출원번호": "10-2022-0000862", "발명의 명칭": "마이크로서비스 기반의 지능형 지식 공유 방법 및 시스템", "출원인": "한국전자통신연구원", "발명자": "김영주"}}
{"patent_id": "10-2022-0000862", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "사용자에게 입력 화면을 제공하는 단계;상기 입력 화면에 입력된 사용자 요구사항, 마이크로서비스 및 지식 그래프 정보를 기초하여 AI 응용 명세를 생성하는 단계;상기 생성된 AI 응용 명세를 가상 자원 관리 플랫폼에 업로드하는 단계; 및상기 업로드된 마이크로서비스 기반의 응용 명세를 실행시키는 단계;를 포함하는 지능형 지식 공유 방법."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명에 따른 지능형 지식 공유 방법은 사용자에게 입력 화면을 제공하는 단계와, 상기 입력 화면에 입력된 사 용자 요구사항, 마이크로서비스 및 지식 그래프 정보를 기초하여 AI 응용 명세를 생성하는 단계와, 상기 생성된 AI 응용 명세를 가상 자원 관리 플랫폼에 업로드하는 단계와, 상기 업로드된 마이크로서비스 기반의 응용 명세를 실행시키는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 클라우드 컴퓨팅 환경과 임베디드 컴퓨팅 환경에서 최적의 수행 환경을 제공하기 위한 마이크로서비 스 기반의 지능형 지식 공유 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "일반적으로, 인공지능 응용 서비스들은 객체 탐지, 객체 추적, 상황 예측 등에서 좋은 성능을 보이고 있다. 이 러한 인공지능 서비스에 이용되는 다양한 센서들과 대규모 데이터들은 일반적으로 빠른 시간 내에 처리되어야 함으로 고성능 컴퓨팅 환경을 요구한다. 최근 들어, 저성능의 컴퓨팅 환경에서도 인공지능 서비스를 지원하기 위해서 다양한 학습 방법이나 경량화 방법 등이 지속적으로 연구되고 있다. 이러한 다양한 컴퓨팅 환경에서 인공지능 서비스들은 독립된(Standalone) 형태 의 응용에서 네트워크 기반 형태의 응용으로 변화되고 있다. 이는 네트워크 인프라의 규모가 커지고 서비스를 하는 대상의 규모도 커지고 있기 때문이다. 이로 인해 시스템 의 상황에 따라 최적의 수행 환경을 보장받기가 쉽지 않고, IT 환경이 거대해지고 복잡해지는 상황에서 제공되 는 서비스들의 특성과 변화 속도가 다르기 때문에 수정 및 배포 등의 어려움이 발생될 수 있다. 이를 해결하기 위한 방안으로 가용성 보장 기술, 가상화 기술, 그리고 서비스 공유 기술들이 각광을 받고 있다. 가용성 보장 기술은 응답시간 지연 및 시스템 중단으로 인한 운영 시스템의 고장을 정확하게 측정 분석하여 장 애를 최소화하는 기술이다. 가상화 기술은 물리적인 컴포넌트를 논리적인 객체로 추상화하는 것을 의미하며, 하 나의 장치를 여러 개의 장치처럼 동작시키거나 반대로 여러 개의 장치를 하나의 장치인 것처럼 동작시키는 기술 이다. 서비스 공유 기술은 모놀리식(Monolithic) 구조와 마이크로서비스(Microservice) 구조 방식이 있다. 마이크로서비스 구조는 서비스에 대해서 유연한 추가 및 변경이 가능하므로 변화에 강한 시스템 실현이 가능하 고 데이터 관리의 분권화로 인해 장애로 인한 서비스 중단이 거의 없다는 장점이 있다. 하지만, 마이크로서비스 간의 통신 방법이 어렵고 테스트 및 배포가 복잡하다는 문제가 있다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 다양한 AI 응용 서비스들에게 최적의 실행 환경을 제공하기 위한 지능형 지식 공유 방법 및 시스템을 제공하는 것을 그 목적으로 한다. 또한, 본 발명은 프로그램 개발자나 사용자가 보다 손쉽게 AI 응용을 개발하거나 서비스할 수 있는 지능형 지식 공유 방법 및 시스템을 제공하는 것을 다른 목적으로 한다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상기한 목적을 달성하기 위한 본 발명에 따른 지능형 지식 공유 방법은 사용자에게 입력 화면을 제공하는 단계 와, 상기 입력 화면에 입력된 사용자 요구사항, 마이크로서비스 및 지식 그래프 정보를 기초하여 AI 응용 명세 를 생성하는 단계와, 상기 생성된 AI 응용 명세를 가상 자원 관리 플랫폼에 업로드하는 단계와, 상기 업로드된 마이크로서비스 기반의 응용 명세를 실행시키는 단계를 포함할 수 있다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명은 AI 응용을 지원할 수 있는 다양한 학습 데이터와 학습 모델을 제공함과 동시에 AI 응용에 필요한 다 양한 형태의 마이크로서비스를 제공함으로서, 각 분야에서 원하는 서비스를 최적의 실행 환경에서 제공할 수 있 다. 또한, 본 발명에 따른 시스템은 시스템 자원의 제약을 받지 않고 다양한 응용 서비스를 제공할 수 있다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나 본 발명은 이하에서 개시되는 실시예들에 한정되는 것이 아니라 서로 다른 다양한 형태로 구현될 것이며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하며, 본 발명이 속하는"}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "기술분야에서 통상의 지식을 가진 자에게 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 명세서 전체에 걸쳐 동일 참조 부호는 동일 구성 요소를 지칭한다. 비록 \"제1\" 또는 \"제2\" 등이 다양한 구성요소를 서술하기 위해서 사용되나, 이러한 구성요소는 상기와 같은 용 어에 의해 제한되지 않는다. 상기와 같은 용어는 단지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사 용될 수 있다. 따라서, 이하에서 언급되는 제1 구성요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있다. 본 명세서에서 사용된 용어는 실시예를 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명세 서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 또는 \"포함하는(comprising)\"은 언급된 구성요소 또는 단계가 하나 이상의 다른 구성요소 또는 단 계의 존재 또는 추가를 배제하지 않는다는 의미를 내포한다."}
{"patent_id": "10-2022-0000862", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어는 본 발명이 속하는 기술분야에서 통상의 지식을 가진 자에게 공통적으로 이해될 수 있는 의미로 해석될 수 있다. 또한, 일반적으로 사용되는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예들을 상세히 설명하기로 하며, 도면을 참조하여 설명할 때 동일 하거나 대응하는 구성 요소는 동일한 도면 부호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다.도 1은 본 발명의 일실시예에 따른 지능형 지식 공유 시스템을 나타낸 블록도이다. 도 1을 참조하면, 실시예에 따른 지능형 지식 공유 시스템은 마이크로서비스 프로그래밍 UI와 워크플 로우 실행기와, 마이크로서비스 관리기와, 마이크로 서비스 관리 UI와, 지식 그래프 관리기 와 지식 그래프 관리 UI와 가상 지원 관리 플랫폼을 포함할 수 있다. 실시예에 따른 지능형 지식 공유 시스템은 명세 기반의 사용자 요구사항을 이용하여 마이크로서비스 기반 의 프로그램을 시작할 수 있다. 사용자 요구사항은 사용자가 직접 작성해야 하며, 마이크로서비스 프로그래밍 UI에서 입력 화면을 제공할 수 있다. 도 2는 마이크로서비스 프로그래밍 UI가 제공하는 화면에 대한 프로그래밍을 나타낸 도면이다. 도 2에 도시된 바와 같이, 마이크로서비스 프로그래밍 UI는 크게 프로그램 설정 영역과(111-1) 마이크로서 비스 설정 영역(111-2)을 포함하는 화면을 제공할 수 있다. 프로그램 설정 영역(111-1)은 프로그램 이름, 프로그램 형식, 프로그램 종류 및 프로그램에 대한 상세한 내용을 기록하는 영역을 포함할 수 있다. 마이크로서 비스 설정 영역(111-2)은 컴포넌트(Component) 기반의 마이크로서비스의 개수 및 각 마이크로서비스에 대한 상 세한 내용을 기록하는 영역을 포함할 수 있다. 사용자는 마이크로서비스 프로그래밍 UI가 제공하는 화면에 필요한 정보를 직접 입력할 수 있다. 마이크로서비스 프로그래밍 UI가 제공하는 화면은 웹 페이지 형태 또는 독립적(Standalone)인 형태로 제공할 수 있다. 마이크로서비스 프로그래밍 UI는 마이크로서비스 관리기와 지식 그래프 관리기에 입력된 마이크 로서비스 및 지식 그래프 정보를 이용하여 AI 응용 명세를 생성할 수 있다. 상기에서는 마이크로서비스 프로그래밍 UI가 AI 응용 명세를 생성하는 것으로 설명하였으나, AI 응용 명세를 생성하는 AI 응용 명세 생성부(미도시)가 마이크로서비스 프로그래밍 UI 내에 구비되거나 또 는 마이크로서비스 프로그래밍 UI와 별도로 구비될 수도 있다. 생성된 AI 응용 명세는 실행 가능한 파이썬(Python) 파일 또는 쿠버네티스와 같은 가상 자원 관리 플랫폼 에 실행 가능한 yaml 파일 형태일 수 있다. AI 응용 명세는 가상 자원 관리 플랫폼에 모두 업로드될 수 있으며, 업로드된 AI 응용은 워크플 로우 실행기에 의해 실행될 수 있다. 이때, 협업형 AI 응용 지원을 위한 파이프라인 기반의 마이크로서비스의 효과적인 구축과 사용을 위해 마이크로 서비스 관리 UI가 더 포함될 수 있다. 마이크로서비스 관리 UI는 웹(Web) 형태 또는 독립적 (Standalone) 형태의 서비스로 제공될 수 있다. 또한, 학습 및 추론 지원을 위해 코스 그레인드(Coarse-grained) 기반의 진화형 지식 그래프의 효과적인 구축과 사용을 위해 지식 그래프 UI가 더 포함될 수 있다. 지식 그래프 UI는 웹(Web) 형태 또는 독립적 (Standalone) 형태의 서비스로 제공될 수 있다. 이하에서는 실시예에 따른 지능형 지식 공유 시스템의 각 구성에 대해 보다 상세히 살펴보기로 한다. 도 3은 마이크로서비스 프로그래밍 UI의 구성을 나타낸 블록도이다. 도 3을 참조하면, 마이크로서비스 프로그래밍 UI는 프로그램 모델(Program Model) 메뉴, 응용 이름 (Application Name) 메뉴, 프로시져 이름(Procedure Name) 메뉴, 입력(Input) 메뉴, 출력 (Output) 메뉴, 데이터(Date) 메뉴 및 셔플리먼트(Supplement) 메뉴를 포함할 수 있다. 프로그램 모델(Program Model) 메뉴는 일반 응용 프로그램, ML 응용 프로그램, DL 응용 프로그램, 빅데이 터 관련 응용 프로그램을 구별하는 것일 수 있다. 응용 이름(Application Name) 메뉴는 응용 프로그램에 대한 고유한 이름을 부여하는 것일 수 있다. 프로시져 이름(Procedure Name) 메뉴는 각 마이크로서비스를 등록하는 것이며, Device input, Pre-Processing, Exeuction, Display 등을 포함할 수 있다. 입력(Input) 메뉴 및 출력(Output) 메뉴는 마이크로서비스에 해당하는 입력 및 출력을 정의하는 부분 이다. 데이터(Date) 메뉴는 마이크로서비스를 실제로 서비스하는 날짜를 기록하는 부분이다. 셔플리먼트 (Supplement) 메뉴는 프로시져 메뉴에 의존하는 메뉴일 수 있다. 즉, 셔플리먼트(Supplement) 메뉴는 프로시져 형태에 따라 달라질 수 있다. 도 4는 마이크로서비스 관리기의 구성을 나타낸 블록도이다. 도 4를 참조하면, 파이프 기반의 마이크로서비스 관리기는 입력 처리 부분(Input Process Part, 141), 전 처리 부분(Pre-Process Part, 142), 훈련 처리 부분(Training Process Part, 143), 추론 처리 부분(Inference Process Part, 144), 표시 처리 부분(Display Process Part, 145), 실행 처리 부분(Execution Process Part, 146), 셔플리먼트 처리 부분(Supplement Process Part, 147), 지식 그래프 처리 부분(Knowledge Graph Process Part, 148)을 포함할 수 있다. 각 부분은 개발자나 사용자가 마이크로서비스를 정의하고, 각각에 대한 입력과 출력을 정의할 수 있다. 마이크로서비스 관리 UI는 정의된 마이크로서비스의 생성, 삭제, 조회 및 검색 등을 사용자에게 제공할 수 있다. 마이크로서비스 프로그래밍 UI는 제공된 마이크로서비스를 기초로 AI 응용 명세를 생성할 수 있다. 도 5는 지식 그래프 관리기의 구성을 나타낸 블록도이다. 도 5를 참조하면, 지식 그래프 관리기는 노드 처리부, 노드의 관계 처리부, 노드의 명령어 처리 부를 포함할 수 있다. 노드 처리부는 노드 생성, 노드 삭제, 노드 수정 및 노드 검색을 수행할 수 있는 기능들로 정의될 수 있다. 노드 관계 처리부는 노드의 관계 생성, 노드의 관계 삭제, 노드의 관계 수정, 노드의 관계 등록을 수행할 수 있는 기능들로 정의될 수 있다. 노드의 명령어 처리부는 사용자가 지식 그래프에 질의하는 명령어 처리, 처리된 명령어에서 나온 결과들에 대한 추천 처리, 서비스 동작 후에 발생한 결과물이나 새로운 결과물의 등록시에 자동으로 관계를 설정하는 자 동 관계 처리, 지식 그래프 노드의 성능 개선 및 지속적인 모니터링을 위한 성능 테스트 처리를 수행할 수 있는 기능들로 정의될 수 있다. 한편, 종래의 지식 그래프들은 주로 개별 데이터에 대한 것을 저장하고 있다. 반면, 실시예에 따른 지식 그래프 는 개별 데이터에 대해서 한번 이상 가공된 데이터를 저장할 수 있다. 이에 추가적인 처리 과정이 생략될 수 있 기 때문에 개발자나 사용자가 AI 응용을 생성할 때 시간과 노력을 줄일 수 있다. 도 6은 지식 그래프 관리 UI에서 지식 그래프 형태를 표현한 모습을 나타낸 도면이다. 도 6을 참조하면, 실시예에 따른 지식 그래프는 학습 데이터, 학습 모델, 최적화기 및 디바이스로 구분하여 노 드를 설정할 수 있다. 상기와 같이 구분된 노드는 다른 노드들과 연결되고, 노드와 다른 노드 간의 관계를 생성 할 수 있다. 상기와 같이, 생성된 지식 그래프를 이용하게 되면 데이터의 복잡성이 줄어든 효과적인 추천 시스템을 만들 수 있다. 학습 데이터는 영상 이미지, 텍스트, 숫자 등으로 구분할 수 있다. 학습 모델은 지도 학습, 비지도 학습, 강화 학습 등으로 구분할 수 있다. 최적화기는 Adam, SGD 등으로 구분할 수 있다. 디바이스는 초고성능, 고성능, 범 용 저성능, 초저성능 등으로 구분할 수 있다. 실시예는 그래프 형태로 되어 있기 때문에 새로운 노드를 쉽게 추가할 수 있어 확장성이 좋다. 지식 그래프 관리 UI는 그래프 노드를 추가, 수정 조회 등의 기능을 개발자 또는 사용자에게 제공할 수 있 다. 도 7은 워크플로우 실행기를 중심으로 마이크로서비스의 전체 동작을 나타낸 도면이다. 도 7에 도시된 바와 같이, 사용자 요구사항이 입력되면 컴포넌트 저장소(Component Repository)에 저장되어 있 는 마이크로서비스들 중에서 사용자 요구사항에 적합한 마이크로서비스를 선택하여 main_pipeline.yaml 파일을 생성할 수 있다. 워크플로우 생성기는 생성된 main_pipeline.yaml 파일을 가상 자원 관리 플랫폼에 업로드 및 실행할 수 있 다. 파일이 실행되면, 각 마이크로서비스들은 각각 동작되고, 해당 결과를 다음 단계로 넘겨주면서 전체 프로그램이 동작될 수 있다. 도 8은 본 발명의 일실시예에 따른 지능형 지식 공유 시스템에서 수행되는 지능형 지식 공유 방법을 나타낸 순 서도이다. 도 8을 참조하면, 지능형 지식 공유 시스템은 입력 화면을 제공할 수 있다(S100). 사용자는 지능형 지식 공유 시스템에서 제공된 화면에 필요한 정보를 입력할 수 있다. 지능형 지식 공유 시스템은 사용자 입력에 기초하여 AI 응용 명세를 생성할 수 있다(S200). AI 응용 명세 는 사용자 요구사항과 함께 마이크로서비스 및 지식 그래프 정보를 고려하여 생성될 수 있다. 이를 위해 지능형 지식 공유 시스템은 마이크로서비스 및 지식 그래프 정보를 입력받을 수 있는 입력 화면 을 사용자에게 제공할 수 있다. 지능형 지식 공유 시스템은 생성된 AI 응용 명세를 가상 지원 관리 플랫폼에 업로드할 수 있다(S300). 지능형 지식 공유 시스템은 가상 지원 관리 플랫폼에 업로드된 AI 응용 명세를 실행할 수 있다(S400). 지능형 지식 공유 시스템은 AI 응용의 실행 결과를 사용자에게 제공할 수 있다. 도 9는 본 발명의 일실시예에 따른 컴퓨터 시스템의 구성을 나타낸 블록도이다. 실시예에 따른 지능형 지식 공유 시스템은 컴퓨터로 읽을 수 있는 기록매체와 같은 컴퓨터 시스템에서 구 현될 수 있다. 도 9를 참조하면, 실시예에 따른 컴퓨터 시스템은 버스를 통하여 서로 통신하는 하나 이상의 프로 세서, 메모리, 사용자 인터페이스 입력 장치, 사용자 인터페이스 출력 장치 및 스토리 지를 포함할 수 있다. 또한, 컴퓨터 시스템은 네트워크에 연결되는 네트워크 인터페이스를 더 포함할 수 있다. 프로세서는 중앙 처리 장치 또는 메모리나 스토리지에 저장된 프로그램 또는 프로세싱 인스트럭션들을 실 행하는 반도체 장치일 수 있다. 프로세서는 데이터를 처리할 수 있는 모든 종류의 장치를 포함할 수 있다. 여기서, '프로세서 (processor)'는 예를 들어 프로그램 내에 포함된 코드 또는 명령으로 표현된 기능을 수행하기 위해 물리적으로 구조화된 회로를 갖는, 하드웨어에 내장된 데이터 처리 장치를 의미할 수 있다. 이와 같이 하드웨어에 내장된 데이터 처리 장치의 일 예로써, 마이크로프로세서(microporcessor), 중앙처리장치(central processing unit: CPU), 프로세서 코어(processor core), 멀티프로세서(multiprocessor), ASIC(application-specific integrated circuit), FPGA(field programmable gate array) 등의 처리 장치를 망라할 수 있으나, 이에 한정되는 것은 아 니다. 메모리 및 스토리지는 휘발성 매체, 비휘발성 매체, 분리형 매체, 비분리형 매체, 통신 매체, 또는 정보 전달 매체 중에서 적어도 하나 이상을 포함하는 저장 매체일 수 있다. 예를 들어, 메모리는 ROM이나 RAM을 포함할 수 있다. 사용자 인터페이스 입력 장치는 사용자의 선택 정보를 입력받기 위한 입력 페이스 중 적어도 하나 이상을 포함할 수 있다. 사용자 인터페이스 입력 장치는 사용자로부터 마우스의 클릭 상태 또는 마우스의 드래그 로 인한 영역 지정을 통해 사용자의 선택 정보를 수신할 수 있다. 사용자 인터페이스 출력 장치는 사용자 인터페이스 입력 장치로부터 입력된 정보를 기초로 입력된 정보에 대응하는 화면들을 출력할 수 있다. 도시되지는 않았으나, 실시예에 따른 컴퓨터 시스템은 통신부를 더 포함할 수 있다. 통신부는 다른 네트워크 장치와 유무선 연결을 통해 제어 신호 및 데이터 신호와 같은 신호를 송수신하기 위해 필요한 하드웨어 및 소프트웨어를 포함하는 장치일 수 있다. 통신부는 유선 LAN(Local Area Network) 뿐만 아니라 WiFi 80211a/b/g/n 와 같은 무선 LAN을 이용한 통신 방법 을 이용하여 통신을 수행할 수 있다. 이외에도 통신부는 NFC, Bluetooth와 같은 통신 방법을 이용하여 외부 장치와 통신을 수행할 수도 있다. 통신부는 컴퓨터 시스템에 필수적인 구성이 아니며, 필요에 따라 컴퓨터 시스템에 장착 또는 비장착될 수 있다. 프로세서는 사용자에게 입력 화면을 제공하는 동작과, 상기 입력 화면에 입력된 사용자 요구사항, 마이크 로서비스 및 지식 그래프 정보를 기초하여 AI 응용 명세를 생성하는 동작과, 상기 생성된 AI 응용 명세를 가상 자원 관리 플랫폼에 업로드하는 동작과, 상기 업로드된 마이크로서비스 기반의 응용 명세를 실행시키는 동작을 포함하는 방법을 수행하기 위한 명령어를 포함할 수 있다. 이상에서와 같이 본 발명에 따른 마이크로서비스 기반의 지능형 지식 공유 방법 및 시스템은 상기한 바와 같이 설명된 실시예들의 구성과 방법이 한정되게 적용될 수 있는 것이 아니라, 상기 실시예들은 다양한 변형이 이루 어질 수 있도록 각 실시예들의 전부 또는 일부가 선택적으로 조합되어 구성될 수도 있다."}
{"patent_id": "10-2022-0000862", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일실시예에 따른 지능형 지식 공유 시스템을 나타낸 블록도이다. 도 2는 마이크로서비스 프로그래밍 UI가 제공하는 화면에 대한 프로그램을 나타낸 도면이다. 도 3은 마이크로서비스 프로그래밍 UI의 구성을 나타낸 블록도이다. 도 4는 마이크로서비스 관리기의 구성을 나타낸 블록도이다. 도 5는 지식 그래프 관리기의 구성을 나타낸 블록도이다. 도 6은 지식 그래프 관리 UI에서 지식 그래프 형태를 표현한 모습을 나타낸 도면이다. 도 7은 워크플로우 실행기를 중심으로 마이크로서비스의 전체 동작을 나타낸 도면이다. 도 8은 본 발명의 일실시예에 따른 지능형 지식 공유 시스템에서 수행되는 지능형 지식 공유 방법을 나타낸 순 서도이다. 도 9는 본 발명의 일실시예에 따른 컴퓨터 시스템의 구성을 나타낸 블록도이다."}
