{"patent_id": "10-2023-0172374", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0147922", "출원번호": "10-2023-0172374", "발명의 명칭": "참고서 내에 수록된 문항 컨텐츠에 대한 메타 데이터를 생성하고 연결하며 검색하기 위한 방", "출원인": "주식회사 테스트뱅크", "발명자": "최현욱"}}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "서버가 참고서를 생산하기 위한 PDF(Portable Document Format) 파일의 컨텐츠에 대한 메타 데이터를 생성하기위한 방법에 있어서,상기 PDF 파일의 목차와 관련된 페이지에 근거하여, 상기 컨텐츠와 관련된 트리 구조를 생성하는 단계;상기 PDF 파일의 페이지에서 컨텐츠와 관련된 메타 데이터를 추출하는 단계; 및상기 트리 구조에 근거하여, 상기 메타 데이터를 연결하는 단계;를 포함하며,상기 메타 데이터를 추출하는 단계는상기 PDF 파일의 페이지에서 문제영역을 제거하는 단계; 및상기 문제영역이 제거된 상기 PDF 파일의 페이지에서 상기 메타 데이터를 추출하는 단계;를 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 메타 데이터는Topic, 및 Children 쌍을 포함하는 재귀적인 트리 구조 형태인, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 메타 데이터를 연결하는 단계는상기 컨텐츠와 관련된 트리 구조의 하위 항목(item)으로, 상기 메타 데이터를 삽입하는 단계;를 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 메타 데이터에 근거하여, 상기 참고서의 문항과 관련된 키워드를 설정하는 단계;를 더 포함하는, 생성방법"}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 키워드를 통해, 상기 컨텐츠를 검색하는 단계;공개특허 10-2024-0147922-3-를 더 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제2항에 있어서,상기 컨텐츠에 포함된 이미지에 근거하여, 상기 Topic을 예측하는 단계;를 더 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 이미지와 유사한 이미지를 획득하는 단계; 및상기 유사한 이미지에 근거하여, 상기 Topic을 예측하는 단계;를 더 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 트리 구조를 생성하는 단계는 상기 목차와 관련된 페이지를 Block 별로 분리하는 단계; 상기 Block 별로 키워드를 추출하는 단계; 및 상기 키워드에 근거하여, 상기 트리 구조를 생성하는 단계;를 포함하는, 생성방법."}
{"patent_id": "10-2023-0172374", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "참고서를 생산하기 위한 PDF(Portable Document Format) 파일의 컨텐츠에 대한 메타 데이터를 생성하기 위한 서버에 있어서,인공지능 모델이 포함된 메모리; 및상기 메모리를 기능적으로 제어하는 프로세서; 를 포함하고,상기 프로세서는상기 PDF 파일의 목차와 관련된 페이지에 근거하여, 상기 컨텐츠와 관련된 트리 구조를 생성하고, 상기 PDF 파일의 페이지에서 컨텐츠와 관련된 메타 데이터를 추출하며, 상기 트리 구조에 근거하여, 상기 메타 데이터를 연결하고,상기 메타 데이터를 추출하기 위해, 상기 PDF 파일의 페이지에서 문제영역을 제거하며, 상기 문제영역이 제거된상기 PDF 파일의 페이지에서 상기 메타 데이터를 추출하는, 서버."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 명세서는 서버가 참고서를 생산하기 위한 PDF(Portable Document Format) 파일의 컨텐츠에 대한 메타 데이터 를 생성하기 위한 방법에 있어서, 상기 PDF 파일의 목차와 관련된 페이지에 근거하여, 상기 컨텐츠와 관련된 트 리 구조를 생성하는 단계; 상기 PDF 파일의 페이지에서 컨텐츠와 관련된 메타 데이터를 추출하는 단계; 및 상기 트리 구조에 근거하여, 상기 메타 데이터를 연결하는 단계; 를 포함하며, 상기 메타 데이터를 추출하는 단계는 상기 PDF 파일의 페이지에서 문제영역을 제거하는 단계; 및 상기 문제영역이 제거된 상기 PDF 파일의 페이지에서 상기 메타 데이터를 추출하는 단계; 를 포함할 수 있다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 명세서는 참고서 내에 수록된 문항 컨텐츠에 대한 메타 데이터를 생성하기 위한 방법 및 이를 위한 장치에 관한 것이다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "참고서의 생산을 위해서는 기획, 원고작성, 조판의 절차가 진행되는데 각 절차가 완료된 후, 출력을 위한 참고 서의 PDF 파일이 산출된다. 이러한 PDF 파일은 출력을 목적으로 산출된 파일로서, 이를 활용하여서는 디지털 디 바이스에서 디지털 컨텐츠를 사용하는데 필요한 저작권 보호, 보안 기능, 풀이 데이터 기록, 다양한 Interaction 구현 등이 불가능하다. 이러한 디지털 디바이스에서 필요한 기능을 구현하기 위해서는 PDF 형태를 직접 사용하는 것이 아닌 어플리케이 션 혹은 웹 서비스로의 개발이 필수적이며 이 과정에서 문항 데이터베이스 구축이 필수적으로 요구된다. 이 과 정에서 OCR(Optical Character Recognition)등을 이용하여 이미지에서 문자, 그림, 테이블 등을 인식하고 각각 문자는 text string으로, 그림은 이미지 파일로, 테이블은 테이블 형태로 추출이 필요하다. 이후 추출된 데이터 를 저장하고, 문자, 그림, 테이블 등을 본래 문항이 가진 스타일 형태로 복원하는 절차를 수행하여 디지털 디바 이스에서 각 문항의 의도된 레이아웃을 구현하고, Event를 구현하여 어플리케이션 및 웹 서비스에서 의도된 기 능을 구현할 수 있다. 그러나, 위 상술한 OCR에 기반한 추출 및 복원 방법은 추출 과정에서 이미지에서 각 요소를 검출하고, 이를 각 각의 형태로 치환하는데 결과에 대해 정확성이 100% 담보되지 않고, 문항 내 추출된 text string에 대해서 질문, 답안, 선택지 등의 맥락에 따라서 별도로 분리하여 저장을 위한 후처리를 진행하여야 한다. 추출된 text 를 맥락에 따라서 분리하여 각 Column 별로 저장하는 작업은 시간 및 자원이 과도하게 발생하며, 또한 추출 과 정에서 문항의 styling이 유실되어 어플리케이션 및 웹 서비스에서 사용하기 위해서는 문항의 스타일링 복원이 필요하다는 문제점이 있다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 명세서의 목적은, 참고서 내에 수록된 문항 컨텐츠에 대한 메타 데이터를 생성하기 위한 방법을 제안한다. 또한, 본 명세서의 목적은 각 문항의 검색성을 향상시키기 위해, 각 문항이 가지는 여러가지 속성값을 기록해둔, 문항의 과목, 평가항목, 난이도 등이 포함된 참고서 메타 데이터를 생성하기 위한 방법을 제안한다. 본 명세서가 이루고자 하는 기술적 과제들은 이상에서 언급한 기술적 과제들로 제한되지 않으며, 언급되지 않은"}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 2, "content": "또 다른 기술적 과제들은 이하의 명세서의 상세한 설명으로부터 본 명세서가 속하는 기술분야에서 통상의 지식 을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 명세서의 일 양상은, 서버가 참고서를 생산하기 위한 PDF(Portable Document Format) 파일의 컨텐츠에 대한 메타 데이터를 생성하기 위한 방법에 있어서, 상기 PDF 파일의 목차와 관련된 페이지에 근거하여, 상기 컨텐츠 와 관련된 트리 구조를 생성하는 단계; 상기 PDF 파일의 페이지에서 컨텐츠와 관련된 메타 데이터를 추출하는 단계; 및 상기 트리 구조에 근거하여, 상기 메타 데이터를 연결하는 단계; 를 포함하며, 상기 메타 데이터를 추 출하는 단계는 상기 PDF 파일의 페이지에서 문제영역을 제거하는 단계; 및 상기 문제영역이 제거된 상기 PDF 파 일의 페이지에서 상기 메타 데이터를 추출하는 단계; 를 포함할 수 있다. 또한, 상기 메타 데이터는 Topic, 및 Children 쌍을 포함하는 재귀적인 트리 구조 형태일 수 있다. 또한, 상기 메타 데이터를 연결하는 단계는 상기 컨텐츠와 관련된 트리 구조의 하위 항목(item)으로, 상기 메타 데이터를 삽입하는 단계; 를 포함할 수 있다. 또한, 상기 메타 데이터에 근거하여, 상기 참고서의 문항과 관련된 키워드를 설정하는 단계; 를 더 포함할 수 있다.또한, 상기 키워드를 통해, 상기 컨텐츠를 검색하는 단계; 를 더 포함할 수 있다. 또한, 상기 컨텐츠에 포함된 이미지에 근거하여, 상기 Topic을 예측하는 단계; 를 더 포함할 수 있다. 또한, 상기 이미지와 유사한 이미지를 획득하는 단계; 및 상기 유사한 이미지에 근거하여, 상기 Topic을 예측하 는 단계; 를 더 포함할 수 있다. 또한, 상기 트리 구조를 생성하는 단계는 상기 목차와 관련된 페이지를 Block 별로 분리하는 단계; 상기 Block 별로 키워드를 추출하는 단계; 및 상기 키워드에 근거하여, 상기 트리 구조를 생성하는 단계; 를 포함할 수 있 다. 본 명세서의 또 다른 일 양상은, 참고서를 생산하기 위한 PDF(Portable Document Format) 파일의 컨텐츠에 대한 메타 데이터를 생성하기 위한 서버에 있어서, 인공지능 모델이 포함된 메모리; 및 상기 메모리를 기능적으로 제 어하는 프로세서; 를 포함하고, 상기 프로세서는 상기 PDF 파일의 목차와 관련된 페이지에 근거하여, 상기 컨텐 츠와 관련된 트리 구조를 생성하고, 상기 PDF 파일의 페이지에서 컨텐츠와 관련된 메타 데이터를 추출하며, 상 기 트리 구조에 근거하여, 상기 메타 데이터를 연결하고, 상기 메타 데이터를 추출하기 위해, 상기 PDF 파일의 페이지에서 문제영역을 제거하며, 상기 문제영역이 제거된 상기 PDF 파일의 페이지에서 상기 메타 데이터를 추 출할 수 있다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 명세서의 실시예에 따르면, 참고서 내에 수록된 문항 컨텐츠에 대한 메타 데이터를 생성할 수 있다. 또한, 본 명세서의 실시예에 따르면, 각 문항이 가지는 여러가지 속성값을 기록해둔, 문항의 과목, 평가항목, 난이도 등이 포함된, 참고서 메타 데이터를 생성하여, 각 문항의 검색성을 향상시킬 수 있다. 본 명세서에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 명세서가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2023-0172374", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 첨부된 도면을 참조하여 본 명세서에 개시된 실시예를 상세히 설명하되, 도면 부호에 관계없이 동일하거 나 유사한 구성요소는 동일한 참조 번호를 부여하고 이에 대한 중복되는 설명은 생략하기로 한다. 이하의 설명 에서 사용되는 구성요소에 대한 접미사 \"모듈\" 및 \"부\"는 명세서 작성의 용이함만이 고려되어 부여되거나 혼용 되는 것으로서, 그 자체로 서로 구별되는 의미 또는 역할을 갖는 것은 아니다. 또한, 본 명세서에 개시된 실시 예를 설명함에 있어서 관련된 공지 기술에 대한 구체적인 설명이 본 명세서에 개시된 실시예의 요지를 흐릴 수 있다고 판단되는 경우 그 상세한 설명을 생략한다. 또한, 첨부된 도면은 본 명세서에 개시된 실시예를 쉽게 이 해할 수 있도록 하기 위한 것일 뿐, 첨부된 도면에 의해 본 명세서에 개시된 기술적 사상이 제한되지 않으며, 본 명세서의 사상 및 기술 범위에 포함되는 모든 변경, 균등물 내지 대체물을 포함하는 것으로 이해되어야 한다. 제1, 제2 등과 같이 서수를 포함하는 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소 들은 상기 용어들에 의해 한정되지는 않는다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목적으로만 사용된다. 어떤 구성요소가 다른 구성요소에 \"연결되어\" 있다거나 \"접속되어\" 있다고 언급된 때에는, 그 다른 구성요소에 직접적으로 연결되어 있거나 또는 접속되어 있을 수도 있지만, 중간에 다른 구성요소가 존재할 수도 있다고 이 해되어야 할 것이다. 반면에, 어떤 구성요소가 다른 구성요소에 \"직접 연결되어\" 있다거나 \"직접 접속되어\" 있 다고 언급된 때에는, 중간에 다른 구성요소가 존재하지 않는 것으로 이해되어야 할 것이다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 출원에서, \"포함한다\" 또는 \"가지다\" 등의 용어는 명세서상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부 품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되 어야 한다. 도 1은 본 명세서와 관련된 전자 기기를 설명하기 위한 블록도이다. 상기 전자 기기는 무선 통신부, 입력부, 센싱부, 출력부, 인터페이스부, 메모리 , 제어부 및 전원 공급부 등을 포함할 수 있다. 도 1에 도시된 구성요소들은 전자 기기를 구현 하는데 있어서 필수적인 것은 아니어서, 본 명세서 상에서 설명되는 전자 기기는 위에서 열거된 구성요소들 보 다 많거나, 또는 적은 구성요소들을 가질 수 있다. 보다 구체적으로, 상기 구성요소들 중 무선 통신부는, 전자 기기와 무선 통신 시스템 사이, 전자 기 기와 다른 전자 기기 사이, 또는 전자 기기와 외부서버 사이의 무선 통신을 가능하게 하는 하나 이상의 모듈을 포함할 수 있다. 또한, 상기 무선 통신부는, 전자 기기를 하나 이상의 네트워크에 연 결하는 하나 이상의 모듈을 포함할 수 있다. 이러한 무선 통신부는, 방송 수신 모듈, 이동통신 모듈, 무선 인터넷 모듈, 근거리 통신 모듈, 위치정보 모듈 중 적어도 하나를 포함할 수 있다. 입력부는, 영상 신호 입력을 위한 카메라 또는 영상 입력부, 오디오 신호 입력을 위한 마이크로폰 (microphone, 122), 또는 오디오 입력부, 사용자로부터 정보를 입력받기 위한 사용자 입력부(123, 예를 들어, 터치키(touch key), 푸시키(mechanical key) 등)를 포함할 수 있다. 입력부에서 수집한 음성 데이터나 이미지 데이터는 분석되어 사용자의 제어명령으로 처리될 수 있다. 센싱부는 전자 기기 내 정보, 전자 기기를 둘러싼 주변 환경 정보 및 사용자 정보 중 적어도 하나를 센싱 하기 위한 하나 이상의 센서를 포함할 수 있다. 예를 들어, 센싱부는 근접센서(141, proximity sensor), 조도 센서(142, illumination sensor), 터치 센서(touch sensor), 가속도 센서(acceleration sensor), 자기 센 서(magnetic sensor), 중력 센서(G-sensor), 자이로스코프 센서(gyroscope sensor), 모션 센서(motion sensor), RGB 센서, 적외선 센서(IR 센서: infrared sensor), 지문인식 센서(finger scan sensor), 초음파 센 서(ultrasonic sensor), 광 센서(optical sensor, 예를 들어, 카메라(121 참조)), 마이크로폰(microphone, 122 참조), 배터리 게이지(battery gauge), 환경 센서(예를 들어, 기압계, 습도계, 온도계, 방사능 감지 센서, 열 감지 센서, 가스 감지 센서 등), 화학 센서(예를 들어, 전자 코, 헬스케어 센서, 생체 인식 센서 등) 중 적어도 하나를 포함할 수 있다. 한편, 본 명세서에 개시된 전자 기기는, 이러한 센서들 중 적어도 둘 이상의 센서에서 센싱되는 정보들을 조합하여 활용할 수 있다. 출력부는 시각, 청각 또는 촉각 등과 관련된 출력을 발생시키기 위한 것으로, 디스플레이부, 음향 출 력부, 햅팁 모듈, 광 출력부 중 적어도 하나를 포함할 수 있다. 디스플레이부는 터치 센서 와 상호 레이어 구조를 이루거나 일체형으로 형성됨으로써, 터치 스크린을 구현할 수 있다. 이러한 터치 스크린 은, 전자 기기와 사용자 사이의 입력 인터페이스를 제공하는 사용자 입력부로써 기능함과 동시에, 전 자 기기와 사용자 사이의 출력 인터페이스를 제공할 수 있다. 인터페이스부는 전자 기기에 연결되는 다양한 종류의 외부 기기와의 통로 역할을 수행한다. 이러한 인터페이스부는, 유/무선 헤드셋 포트(port), 외부 충전기 포트(port), 유/무선 데이터 포트(port), 메모 리 카드(memory card) 포트, 식별 모듈이 구비된 장치를 연결하는 포트(port), 오디오 I/O(Input/Output) 포트 (port), 비디오 I/O(Input/Output) 포트(port), 이어폰 포트(port) 중 적어도 하나를 포함할 수 있다. 전자 기 기에서는, 상기 인터페이스부에 외부 기기가 연결되는 것에 대응하여, 연결된 외부 기기와 관련된 적 절할 제어를 수행할 수 있다. 또한, 메모리는 전자 기기의 다양한 기능을 지원하는 데이터를 저장한다. 메모리는 전자 기기 에서 구동되는 다수의 응용 프로그램(application program 또는 애플리케이션(application)), 전자 기기 의 동작을 위한 데이터들, 명령어들을 저장할 수 있다. 이러한 응용 프로그램 중 적어도 일부는, 무선 통 신을 통해 외부 서버로부터 다운로드 될 수 있다. 또한 이러한 응용 프로그램 중 적어도 일부는, 전자 기기 의 기본적인 기능(예를 들어, 전화 착신, 발신 기능, 메시지 수신, 발신 기능)을 위하여 출고 당시부터 전 자 기기상에 존재할 수 있다. 한편, 응용 프로그램은, 메모리에 저장되고, 전자 기기 상에 설치 되어, 제어부에 의하여 상기 전자 기기의 동작(또는 기능)을 수행하도록 구동될 수 있다. 제어부는 상기 응용 프로그램과 관련된 동작 외에도, 통상적으로 전자 기기의 전반적인 동작을 제어 한다. 제어부는 위에서 살펴본 구성요소들을 통해 입력 또는 출력되는 신호, 데이터, 정보 등을 처리하거 나 메모리에 저장된 응용 프로그램을 구동함으로써, 사용자에게 적절한 정보 또는 기능을 제공 또는 처리 할 수 있다. 또한, 제어부는 메모리에 저장된 응용 프로그램을 구동하기 위하여, 도 1과 함께 살펴본 구성요소들 중 적어도 일부를 제어할 수 있다. 나아가, 제어부는 상기 응용 프로그램의 구동을 위하여, 전자 기기 에 포함된 구성요소들 중 적어도 둘 이상을 서로 조합하여 동작시킬 수 있다. 전원공급부는 제어부의 제어 하에서, 외부의 전원, 내부의 전원을 인가받아 전자 기기에 포함된 각 구성요소들에 전원을 공급한다. 이러한 전원공급부는 배터리를 포함하며, 상기 배터리는 내장형 배터리 또는 교체가능한 형태의 배터리가 될 수 있다. 상기 각 구성요소들 중 적어도 일부는, 이하에서 설명되는 다양한 실시 예들에 따른 전자 기기의 동작, 제어, 또는 제어방법을 구현하기 위하여 서로 협력하여 동작할 수 있다. 또한, 상기 전자 기기의 동작, 제어, 또는 제 어방법은 상기 메모리에 저장된 적어도 하나의 응용 프로그램의 구동에 의하여 전자 기기 상에서 구현될 수 있다. 본 명세서에서 전자기기는 서버로 통칭될 수 있으며, 서버는 클라우드 서버를 포함할 수 있다. 도 2는 본 명세서의 일 실시예에 따른 AI 장치의 블록도이다. 상기 AI 장치는 AI 프로세싱을 수행할 수 있는 AI 모듈을 포함하는 전자 기기 또는 상기 AI 모듈을 포함하 는 서버 등을 포함할 수 있다. 또한, 상기 AI 장치는 도 1에 도시된 전자기기의 적어도 일부의 구성으 로 포함되어 AI 프로세싱 중 적어도 일부를 함께 수행하도록 구비될 수도 있다. 상기 AI 장치는 AI 프로세서, 메모리 및/또는 통신부를 포함할 수 있다. 상기 AI 장치는 신경망을 학습할 수 있는 컴퓨팅 장치로서, 서버, 데스크탑 PC, 노트북 PC, 태블릿 PC 등과 같은 다양한 전자 장치로 구현될 수 있다. AI 프로세서는 메모리에 저장된 프로그램을 이용하여 신경망을 학습할 수 있다. 특히, AI 프로세서(2 1)는 이미지에서 문제영역 검출, 원숫자(circle number), 문제영역 분해 등 다양한 이미지 분류 작업을 위한 인 공지능 모델을 생성할 수 있다. 또한, 인공지능 모델은 Semantic HTML 생성을 위한 Semantic Box Model을 포 함할 수 있다. 한편, 전술한 바와 같은 기능을 수행하는 AI 프로세서는 범용 프로세서(예를 들어, CPU)일 수 있으나, 인공 지능 학습을 위한 AI 전용 프로세서(예를 들어, GPU, graphics processing unit)일 수 있다. 메모리는 AI 장치의 동작에 필요한 각종 프로그램 및 데이터를 저장할 수 있다. 메모리는 비 휘발 성 메모리, 휘발성 메모리, 플래시 메모리(flash-memory), 하드디스크 드라이브(HDD) 또는 솔리드 스테이트 드 라이브(SDD) 등으로 구현할 수 있다. 메모리는 AI 프로세서에 의해 액세스되며, AI 프로세서에 의 한 데이터의 독취/기록/수정/삭제/갱신 등이 수행될 수 있다. 또한, 메모리는 본 명세서의 일 실시예에 따 른 데이터 분류/인식을 위한 학습 알고리즘을 통해 생성된 신경망 모델(예를 들어, 딥 러닝 모델)을 저장할 수 있다. 한편, AI 프로세서는 데이터 분류/인식을 위한 신경망을 학습하는 데이터 학습부를 포함할 수 있다. 예를 들어, 데이터 학습부는 학습에 이용될 학습 데이터를 획득하고, 획득된 학습데이터를 딥러닝 모델에 적용함으로 써, 딥러닝 모델을 학습할 수 있다. 통신부는 AI 프로세서에 의한 AI 프로세싱 결과를 외부 전자 기기로 전송할 수 있다. 여기서 외부 전자 기기는 다른 단말, 서버를 포함할 수 있다. 한편, 도 2에 도시된 AI 장치는 AI 프로세서와 메모리, 통신부 등으로 기능적으로 구분하여 설 명하였지만, 전술한 구성요소들이 하나의 모듈로 통합되어 AI 모듈 또는 인공지능(AI) 모델로 호칭될 수도 있다. 도 3은 본 명세서에 적용될 수 있는 PDF 생성방법의 예시이다. 도 3을 참조하면, PDF는 생성방법에 따라서, Scanned, 또는 Structured로 구분될 수 있다. Scanned PDF 는 특정 서책을 스캐너를 이용하여 이미지 형태로 스캔한 파일을 의미할 수 있고, Structured PDF는 컴퓨 터 소프트웨어를 이용하여 전자적으로 PDF로 생성된 파일을 의미할 수 있다. Scanned PDF와 Structured PDF의 큰 차이점으로는 페이지의 Element(예를 들어, Text, Image, Table)에 대해서 개별 요소에 대해서 컴퓨터에서 Drag가 가능한지 여부에 있다. 보다 자세하게, Structured PDF는 각 페이지에서 모든 Element들이 인식가능 한 형태로 구현되어 있어서, HTML 형태로 변환 시 각각 혹은 집합적으로 Class가 부여되어 있어서 특정 class javascript event 구현이 가능 하다. 그러나, Scanned PDF의 경우에는 전체 페이지의 이미지가 하나의 Element로 conversion 되기 때문 에 각 이미지에서 interaction이 필요한 부분을 발굴하여 overlay로 javascript event 구현이 필요한 point를 구현하는 작업이 선행되어야 한다. 도 4 및 도 5는 본 명세서가 적용될 수 있는 PDF 파일의 HTML 형태로의 변환에 대한 예시이다. 도 4 및 도 5를 참조하면, 예를 들어, 서버는 Structured PDF를 HTML 페이지로 변환하기 위해, Structured PDF에서 Embedded text object, Page Full image file, HTML, CSS, Font, 및 Background vector image 등이 포함된 요소를 추출할 수 있다. 또한, 서버는 Scanned PDF를 HTML 페이지로 변환하기 위해, OCR을 이용하여, Scanned PDF를 character 등의 추출이 가능한 형태로 Structure 복원 후, Embedded text object, Page Full image file, HTML, CSS, Font, 및 Background vector image 등이 포함된 요소를 추출할 수 있다.이후, 서버는 각 HTML 페이지에서 identified element에 대해, class id 값을 부여할 수 있다. 도 5를 참조하면, 서버는 도 4의 PDF 파일을 HTML 형태로 변환할 수 있다. 다만, 이러한 변환된 HTML에 포함된 div의 class id 값은 PDF가 HTML 형태로 변환하는 과정에서 PDF 페이지 내 의 상하좌우의 위치정보를 기반으로 생성된 것으로 문항의 영역정보 및 문항 내 구성요소에 대한 정보를 기반으 로 생성되지 않아, 실제 디지털 서비스에서 즉시 사용하기 어려운 결과물이다. 보다 자세하게, 이러한 class id는 문제영역을 기반으로 semantic하게 부여된 id 값이 아니므로, 서버가 특정 값을 통해서 문제 단위별로 접근하기는 어렵다. 본 명세서에서 서버는 이러한 위치값 id를 의미단위(예를 들어, 페이지/문제/보기) 단위로 grouping 하기 위해 후술하는 절차를 수행할 수 있다. 도 6은 본 명세서가 적용될 수 있는 Semantic Box 모델의 적용 방법이다. 도 6을 참조하면, 서버는 Semantic Box 모델에 PDF 파일의 각 페이지에 포함된 문제영역의 이미지 파일을 입력 할 수 있다. 서버는 Semantic Box 모델을 통해, 각 페이지별 이미지에서 문제영역을 둘러싼 바운딩 박스(bounding box)를 생성한다. 예를 들어, 서버는 바운딩 박스를 제외한 나머지 영역에 대해 opencv를 이용하여, 인접한 픽셀끼리의 팽창화를 통해, 다른 문제영역이 존재하는 지 판단할 수 있다. 또한, 서버는 페이지의 가로축의 중간점 x, 좌표(x half)보다, 바운딩 박스의 최좌측점 x 좌표, (x1) 및 최우측점 x 좌표, (x2)의 값이 더 큰 경우, 페이지의 레이아웃이 2 열인 것으로 판단할 수 있다. 서버는 바운딩 박스에 근거하여, 사용자와의 상호작용(interaction)이 요구되는 영역을 추출할 수 있다. 예를 들어, 서버는 바운딩 박스에서 선택지 영역을 먼저 추출하고, 선택지 영역에 포 함된 사용자와의 상호작용이 요구되는 영역을 추출할 수 있다. 이를 통해, 서버는 사용자와의 상호작용이 요구되는 영역을 선언하고, 사용자와의 상호작용이 요구되는 영역에서 상호작용 이벤트를 선언할 수 있다. 예를 들어, 서버는 선택지 영역에서 원숫자를 검출하므로써, 사용자와의 상호작용이 요구되는 영역(610 0)을 선언할 수 있다. 이후, 서버는 각 원숫자에 사용자가 당해 원숫자를 선택할 수 있는 상호작용 이벤트 를 선언할 수 있다. 디지털 디바이스에서 제공될 수 있는 참고서에서 사용자로부터 답안을 입력받을 수 있는, 상호작용이 요구되는 영역은, 학습자의 지식의 평가나 확인 등의 목적으로 사용될 수 있다. 이를 통해 학습자의 지식의 정도나 수준을 파악할 수 있으며, 강사나 교육기관에서는 학습자의 성취도를 추적하고 관리할 수 있다. 또한, 상호작용이 요구되는 영역을 통해, 학습자는 직접 참고서를 통해 문제를 풀고 해답을 입력하면서 실제로 학습할 수 있는 기회를 제공받을 수 있다. 이는 학습자의 공부 효율을 높이는데 도움이 될 수 있다. 즉, 상호작용이 요구되는 영역은 학습자의 지식 평가 및 확인, 학습 효율 향상 등을 위해 필요한 기능이 다. 또한, 서버는 상호작용이 요구되는 영역에 입력되는 학습자의 해답에 근거하여, 채점 이벤트를 발 생시킬 수 있다. 보다 자세하게, 사용자와의 상호작용이 요구되는 영역은 문제의 질문에 따라, 사용자의 답변을 위한 선택 지 요소들이 포함된 영역을 포함할 수 있다. 서버는 사용자의 답변에 따라, 당해 문제의 맞고 틀림을 나타나기 위한 채점 이벤트를 발생시킬 수 있다. 일 예로서, 서버는 일련의 연속된 원숫자 또는 괄호 숫자가 행의 최좌측에서 검출되고, 그 원숫자 또는 괄호 숫 자의 열의 아랫방향으로 증가하는 연속된 원숫자 또는 괄호 숫자가 검출되는 경우, 원숫자 또는 괄호 숫자가 포 함된 문장이 있는 영역을 사용자와의 상호작용이 요구되는 영역으로 추출할 수 있다. Semantic Box 모델은 전술한 동작을 수행하기 위해 학습될 수 있으며, 서버는 바운딩 박스 및 사용자와의 상호작용이 요구되는 영역에 대한 위치정보(예를 들어, Location, Size 등)를 획득할 수 있다. 이후, 서 버는 PDF를 html로 산출하는 절차를 통해서 산출된 semantic하지 않은 html 파일을 위의 위치정보와 결합하여각 영역 내 포함된 Div를 semantic한 의미 단위로 wrap 할 수 있다. 도 7은 본 명세서가 적용될 수 있는 사용자와의 상호작용 선언의 예시이다. 도 7을 참조하면, 서버는 참고서의 문제 유형으로서, 객관식, 단답형, 주관식(서술형), 선잇기, 빈 칸채우기, 및 O/X를 선언할 수 있다. 서버는 선언된 문제 유형에 근거하여, 문제영역에 포함된 문항의 유형을 판단할 수 있다. 예를 들어, Semantic Box 모델은 선언된 문제 유형을 판단하도록 학습될 수 있다. 서버는 문항의 유형에 근거하여, 답안이 입력되는 위치 및 사용자와의 상호작용을 선언할 수 있다. 표 1은 본 명세서가 적용될 수 있는 답안이 입력되는 위치 및 사용자와의 상호작용 선언의 예시이다. 표 1 구분 선언 객관식 원숫자에 Event 설정, 또는 Panel 형식의 객관식 답안 선택지를 구현 단답형 문제영역 내에 답안 입력 format 설정(예를 들어, text format) 주관식(서술형)문제영역 내에 답안 입력 format 설정(예를 들어, text format) 선잇기 Column 별로 특정 row 간에 연결될 수 있도록 특정 점에서의 입력설정, 양 점 간의 matching으로 interaction 구현 빈칸채우기 괄호 ( )에 text data를 입력 받을 수 있도록 위치 설정, 예를 들어, 입력 포맷은 Text format O/X 괄호 ( )에 text data를 입력 받을 수 있도록 위치 설정, 예를 들어, 입력 포맷은 Boolean format 도 8은 본 명세서가 적용될 수 있는 Block OCR의 예시이다.도 8을 참조하면, 서버는 Block OCR 기술을 이용하여, 의미론 단위에 근거하여, PDF 파일의 각 이미지 파일에서 추출한 text string data를 인접한 pixel에 따라 그루핑을 수행할 수 있다. Block OCR은 OCR 기술 중에서도 특히 텍스트 블록(Text block)을 인식하는 기술이다. 텍스트 블록은 문서의 일 정 부분이나 영역에 있는 텍스트 덩어리를 말하며, 일반적으로 문서 내에서의 위치나 레이아웃이 정해져 있을 수 있다. 예를 들어, Block OCR은 이러한 텍스트 블록의 위치와 크기를 먼저 인식한 다음, 그 안에 있는 텍스트를 인식할 수 있다. 이를 통해, 서버는 불필요한 영역이나 잡음을 제거하고, 텍스트 블록 내의 문자 인식 정확도를 높일 수 있다. 보다 자세하게, 서버는 주어진 이미지 파일에서 vision 기반에 기하학 정보를 이용하여, 인접 text끼리 병합하 여 text를 산출할 수 있다. 예를 들어, 서버는 Semantic Box 모델을 이용하여, 의미론 단위로 text 들을 grouping 하여 Box 형태로 추론할 수 있다. 예를 들어, 서버는 Block OCR을 통해서, 참고서 내 개념 설명 페이지 내의 의미있는 Keyword를 추출할 수 있다. 이를 통해서, 서버는 Keyword간의 관계성을 구현할 수 있다. 페이지 내 추출된 Block들은 (i)그 크기가 클 수록 (ii) 상단에 있을수록 의미론적으로 상위에 위치할 수 있다. 예를 들어, \"01 고대 국가의 지배체제\"는 \"국가의 형성\" 보다 상위개념이다. 또한, \"선사 문화의 발달\" 및 \"계 급 발생과 국가의 출현\"은 \"국가의 형성\"보다 하위 개념이다. 도 9는 본 명세서가 적용될 수 있는 해설 추출의 예시이다. 참고서의 문항들이 포함된 문제지 페이지는 일반적으로 Two column 형식으로 구성될 수 있다. 또한, 한 페이지 내에서 문항의 수는 4-8 문제를 포함할 수 있다. 또한, 대부분의 문항은 객관식 형태로 이루어지며, 단답형, 주 관식 형태의 문항의 빈도는 많지 않다. 따라서, 문제지 페이지에서 중요한 요소는 문제영역으로서, [문제 번호 + 문제 타이틀 + 선택지] 로 구성될 수 있으며, 과목 종류에 무관하게 유사한 형태를 갖을 수 있다. 도 9를 참조하면, 해설지 페이지는 Two column 구조 또는 Two row 구조, 및 이와 유사한 다양한 형태를 갖을 수 있다.해설지 페이지는 문제지 페이지와 달리, 공유될 수 있는 기하학적 특징이 적지만 동일 서책에 포함된 해설지의 모든 페이지와 요소들은 같은 레이아웃 디자인과 요소 형태를 갖을 수 있다. 특히, 참고서의 시리즈 별로 특유 의 폰트(font), 스타일링(styling), 레이아웃(layout)의 사용빈도가 높을 수 있다. 서버는 해설지 페이지에서 반복적으로 사용되는 폰트, 스타일링, 레이아웃에 근거하여, 해설지 페이지의 데이터 를 분류할 수 있다. 도 10은 본 명세서가 적용될 수 있는 해설지의 문항별 분해방법의 예시이다. 도 10을 참조하면, 서버는 해설지의 전체 페이지를 구분선에 근거하여 병합한다(S1010). 예를 들어, 서버는 해 설지 페이지가 Two column 구조를 갖는 경우, 좌/우 영역을 구분하는 중앙 세로선을 구분선으로 하여, 구 분선의 좌측 페이지 영역의 하단에 구분선의 우측 페이지 영역을 병합할 수 있다. 만일, 해설지 페이지가 Two row 구조를 갖는 경우, 상/하 영역을 구분하는 중앙 가로선을 구분선으로 하 여, 상단 페이지의 우측에 구분선의 하단 페이지 영역을 병합할 수 있다. 또한, 서버는 해설지의 각 페이지 또는 소단원 별로, 페이지를 병합하고 후술되는 절차를 진행할 수 있다. 이후, 서버는 전술한 문제영역 추출 방식과 유사하게, 병합된 페이지에서 해설영역을 추출할 수 있다. 서버는 병합된 페이지에서 구분자를 선택한다(S1020). 예를 들어, 구분자는 해설지의 요소에 따라 갖을 수 있는 특유의 폰트, 스타일링, 및 레이아웃등을 포함할 수 있다. 도 11은 본 명세서가 적용될 수 있는 구분자 선택의 예시이다. 도 11을 참조하면, 서버는 병합된 페이지에서 챕터를 구분하기 위한 제1 구분자, 정답세트를 구분하기 위 한 제2 구분자, 문제해답을 구분하기 위한 제3 구분자를 선택할 수 있다. 다시, 도 10을 참조하면, 서버는 구분자의 영역에서 구분자 정보를 획득한다(S1030). 예를 들어, 구분자 정보는 당해 구분자와 관련된 폰트, 스타일링, 및 레이아웃 등의 정보를 포함할 수 있다. 서버는 구분자 정보에 근거하여, 해설지를 문항 별로 분해한다(S1040). 도 12는 본 명세서가 적용될 수 있는 해설지의 문항 별 분해의 예시이다. 도 12를 참조하면, 서버는 제1 구분자로부터 획득된 구분자 정보에 근거하여, 유사성을 갖는 다른 제1 구 분자을 검출할 수 있다. 이를 위해, 서버는 computer vision 기술을 이용할 수 있다. 서버는 검출된 제1 구분자 들에 근거하여, 해설지를 챕터 별로 분해할 수 있다. 또한, 서버는 제2 구분자 및 제3 구분자 등에 대해서도, 각각의 구분자 정보에 근거하여, 다른 구분자 들을 검 출할 수 있고, 이를 통해, 해설지를 문항 별로 분해할 수 있다. 도 13은 본 명세서가 적용될 수 있는 데이터 바인딩의 예시이다. 서버는 전술한 절차들을 통해, 문제영역의 각 문항들을 Semantic HTML 화하고, 이를 이용하여, 각 페이지/문항 단위로 관련된 요소들을 저장하고 사용할 수 있으며, 문항의 유형에 따라, 최적화된 사용자와의 상호작용을 매 칭시킬 수 있다. 또한, 서버는 해설지를 문항 별로 분해하여, 문항 별 정답을 알 수 있으며, 각 문항 별 정답이 어떻게 도출되었 는지를 나타내는 해설(예를 들어, Text, Image 등)을 문항 단위로 분해할 수 있다. 도 13을 참조하면, 서버는 각 문항과 이에 대응될 수 있는 해설과의 관계성 설정을 위한 데이터 바인딩 (binding)을 수행할 수 있다. 예를 들어, 서버는 문제집 페이지의 문제영역에서 검출된 문항 수 및 해설지 페이지의 해설영역에서 검출된 문 항 수가 동일한지 검사할 수 있다. 이를 위해, 서버는 해설영역에서 추출되는 해답들을 이용하여, 챕터 별로 포 함된 문항 수를 검출하고, 이를 문제영역의 문항 수와 비교할 수 있다. 서버는 문제영역의 문항 수, 해설영역의 문항 수가 동일하다면 Sequential mapping 작업을 수행할 수 있다. 보 다 자세하게, 서버는 문제영역의 ID와 해설영역의 ID 사이에 관계성을 부여할 수 있다. 예를 들어, 서버는 추출한 바운딩 박스 및 사용자와의 상호작용이 요구되는 영역에 대한 위치정보 에 근거하여, 특정 문제영역 및 이와 매핑되는 해설영역을 특정값을 갖는 id로 Grouping할 수 있다.이를 통해, 서버는 사용자로부터, 각 문항에 대응되는 정답 정보를 입력받을 수 있고, 각 문항에 대응되는 해답 을 매칭할 수 있으며, 자동채점, 해설연동 기능을 구현할 수 있다. 또한, 서버는 묶음지문에 대응하여, 문제영역 및 해설영역에서 추출한 데이터를 binding 할 수 있고, 이에 대한 메타 데이터 정보를 입력할 수 있다. 예를 들어, 참고서 메타 데이터란 각 문항이 가지는 여러가지 속성값을 기록해둔 것으로, 문항의 과목, 평가항 목, 난이도 등을 포함할 수 있다. 이를 통해서, 서버는 각 문항의 검색성을 향상 시킬 수 있다. 또한, 서버는 참고서의 정보를 효율적으로 관리할 수 있으며, 사용자로부터 정확한 정보를 수신하고, 데이터 분 석 및 활용에 효율적으로 사용할 수 있다. 도 14는 본 명세서가 적용될 수 있는 서버의 일 실시예이다. 도 14를 참조하면, 서버는 참고서의 PDF을 입력받아 각 페이지의 HTML파일을 생성할 수 있다. 예를 들어, 참고 서의 각 페이지의 HTML 파일은 PDF를 클래스(Class) 정보에 기반한 격자형 HTML 형식일 수 있다.. 보다 자세하게, 이러한 HTML 형태는 격자를 기반으로 생성된 Class를 포함할 수 있다. 예를 들어, 서버는 전술 한 도 4 및/또는 도 5에 따라, 각 요소들의 위치값을 기반으로 하는 tag가 포함된 HTML 형태를 획득할 수 있다. 다만, 이러한 형태는, 사용자가 Web page에서 보는 화면의 구성과 동일한 화면을 나타내지만, 의미론(Semanti c)으로 그룹핑이 되어 있지 않아, 채점/해답연결 등의 이벤트 구현이 어렵다는 문제점이 있을 수 있다. 따라서, 본 명세서에서 서버는 참고서의 PDF 파일이 변환된 이미지에서 바운딩 박스 정보를 추출하여, 이를 격 자형 HTML 파일과 결합함으로써 의미론적 HTML 파일을 생성할 수 있다. 서버는 참고서 PDF 파일에서 생성된 이미지 파일에 근거하여, 문제영역과 관련된 바운딩 박스를 생성한다 (S1410). 예를 들어, 문제영역은 문항의 질문(문제) 및 답변 부분이 포함된 문항을 포함할 수 있다. 서버는 바운딩 박스에 근거하여, 사용자와의 상호작용(interaction)이 요구되는 영역을 추출한다(S1420). 예를 들어, 사용자와의 상호작용이 요구되는 영역은 문제영역의 질문에 따라, 사용자가 답변을 하기 위한 액션이 수 행될 수 있는 요소를 포함할 수 있다. 또한, 서버는 바운딩 박스 및 사용자와의 상호작용이 요구되는 영역에 대 한 위치정보를 획득할 수 있다. 서버는 상호작용이 요구되는 영역에 근거하여, 의미론적(Semantic) HTML 파일을 생성한다(S1430). 예를 들어, 의미론적 HTML 파일은 각 요소의 컨텐츠를 의미할 수 있는, 식별자를 포함할 수 있다. 요소들은 문제번호, 질문 text, 이미지, Sub 질문영역, Sub 영역 및 원숫자 등을 포함할 수 있다. 보다 자세하게, 서버는 선언된 문제 유형에 근거하여, 문제영역에 포함된 문항의 유형을 판단할 수 있다. 서버 는 문항의 유형에 근거하여, 답안이 입력되는 위치 및/또는 사용자와의 상호작용을 선언할 수 있다. 서버는 상호작용이 요구되는 영역에 근거하여, 문제영역에 포함된 각 요소들을 분류할 수 있다. 보다 자세하게, 의미론적 HTML 파일에서 상호작용이 요구되는 영역의 콘텐츠(예를 들어, div 요소)들을 나타내는 ID(예를 들어, Class id)는 문제영역 및/또는 사용자와의 상호작용과 관련된 의미를 나타낼 수 있다. 도 15는 본 명세서가 적용될 수 있는 의미론적 HTML의 예시이다. 도 15를 참조하면, 의미론적 HTML 파일에서 상호작용이 요구되는 영역의 콘텐츠들을 나타내는 class id는 사용 자와의 상호작용과 관련된 의미를 나타낼 수 있다. 예를 들어, 첫번째 div의 class id는 답안영역을 의미하고, 두번째 div의 class id는 답안 박스를 의미하며, 세번째 div의 class id는 선택 항목을 의미할 수 있다. 서버는 분류된 요소들에 근거하여, 의미론적 HTML을 생성할 수 있다. 예를 들어, 서버는 위치정보에 근거하여, 각 요소들의 위치값을 기반으로 하는 tag가 포함된 HTML 형태에 바운딩 박스와 관련된 각 영역들(예를 들어, 상 호작용이 요구되는 영역, 문제영역)과 관련된 정보들을 wrap하여, 의미론적 HTML을 생성할 수 있다. 전술한 절차를 통해, 서버는 PDF에 포함된 문제영역을 발굴하고 이에 매칭되는 해설을 연결할 수 있다. 다만, 이러한 절차는 각 문항에서의 interaction 구현을 위한 절차에 초점을 맞춘 것으로, 각 문항에 대한 대단 원/소단원 등의 구분 정보를 추출하기가 어렵다는 문제점이 있다. 또한, 서버는 이러한 각 문항별 데이터가 작 성되어 있지 않으면 각 문항들을 조회/검색해서 사용할 수가 없으므로, 데이터 기반의 문항 추천이 제약될 수 있다.본 명세서에서 이러한 문항별 정보는 메타 데이터라고 지칭될 수 있으며, 서버는 도서 형태에 근거하여, 메타 데이터 태그를 추출하고, 이를 tree 구조로 구현하여, 해당 영역에 속하는 문항에 할당하는 작업을 수행할 수 있다. 이를 통해, 서버는 문항에 단순한 interaction을 구현할 뿐만 아니라, 문항에 대한 풍부한 정보를 입력할 수 있다. 또한, 서버는 문항에 대한 정보를 기초로 하여, 검색, 개인화 학습, AI 를 활용한 추천 시스템 구축, 및/또는 기타 학습에 도움 될 수 있는 여러 기능을 구현 할 수 있다. 도 16은 본 명세서가 적용될 수 있는 참고서의 구성을 예시한다. 도 16을 참조하면, 참고서는 일반적으로 개념을 먼저 제시하고, 예시문제를 제시할 수 있다. 또한, Chapter 들은 구분이 되어 있고, Chapter 내부의 구성은 Chapter 사이에서 매우 유사할 수 있다. 예를 들어, Chapter 내부에서 쓰이는 구분자들은 다른 Chapter 에서도 유사하게 사용될 수 있다. 도 17은 본 명세서가 적용될 수 있는 메타 데이터의 연동방법을 예시한다. 도 17을 참조하면, 서버는 참고서의 목차(table of contents, ToC)를 활용하여, 컨텐츠의 Tree 구조를 생성할 수 있다. 이후, 서버는 각 영역(예를 들어, 개념, 문제, 지문, 해답)에서 Data를 추출 한 후, ToC에 맵핑할 수 있다. 도 18은 본 명세서가 적용될 수 있는 목차 활용방법의 예시이다. 도 18을 참조하면, 서버는 PDF의 목차 페이지에서 텍스트를 추출하여, 각 챕터들의 내용을 구성할 수 있다. 예 를 들어, 각 챕터는 하위 목차로서, \"5개년 수능 기출분석 & 출제예상\", \"수능잡는 핵심 개념 & 빈출 유형 분석\", \"2점 기출 확인하기\", \"3점 기출 확인하기\", 및 \"4점 기출 확인하기\"를 포함할 수 있다. 도 19는 본 명세서가 적용될 수 있는 개념, 문제, 및/또는 지문 영역의 활용방법의 예시이다. 도 19를 참조하면, 서버는 개념, 문제, 및/또는 지문 영역을 포함하는 모든 영역을 검출하는 과정에서 당해 페 이지의 Column의 개수를 산출해 낼 수 있다. 예를 들어, 서버는 검출되는 영역에 대응되는 Box가 두개의 Colomn 에 존재함에 근거하여, 당해 페이지가 2 Column 레이아웃을 갖는다고 예측할 수 있다. 서버는 당해 페이지의 background color를 추출한다. 이후, 서버는 검출된 문제영역을 당해 페이지의 background color로 채워서 제거할 수 있다. 이를 통해서, 서버는 페이지 내 각 요소의 (i)검출율을 향상시킬 수 있고, (ii) 각 요소의 검출 여부를 GUI 기 반으로 확인할 수 있으며, (iii) 개념과 문제가 혼재된 페이지에서는 검출된 문제영역 외의 영역을 Keyblock 추 출이 필요한 개념 영역으로 추론할 수 있다. 서버는 문제영역을 제외한 나머지 영역에서 메타 데이터를 검출한다. 또한, 서버는 2개의 Column을 페이지의 중앙선을 기준으로 잘라내고 1개의 Column을 갖는 형태로 병합시킬 수 있다. 서버는 Block OCR 기술을 이용하여, 병합된 페이지에서 keyblock(node)을 추출하고, 각 keyblock 들을 페이지 번호와 함께 저장할 수 있다. 예를 들어, Keyblock은 개념, 문제, 및/또는 지문 영역을 포함 할 수 있다. 이후, 서버는 책의 목차에 근거하여, Keyblock의 정보를 연결할 수 있다. 다음의 표 2는 개념영역(1910,1920)에서의 메타 데이터 추출을 예시한다. 표 2 [\"눈의 구조와 기능\", [\"수정체\", [...]], ... ]], [\"눈의 조절작용\", [\"각막\", [...]], ... ]], [\"빛의 양 조절\", [...]] ] 표 2를 참조하면, Data 깊이가 얼만큼이 될지는 참고서마다 다르기 때문에, 서버는 단일구조 [Topic, Children] 를 이용하여, Children 은 또 다시 복수의 [Topic, Children] 트리구조를 가지는 재귀적인 방법으로 메타 데이 터 추출을 수행할 수 있다.예를 들어, 서버는 각 소단원(예를 들어, 눈의 구조와 기능, 눈의 조절 작용)에서 개 념 설명 하위에서 Element들을 추출할 수 있다. 보다 자세하게, 서버는\"눈의 구조와 기능\" 하위에서 \"각막, 홍채, 수정채, 망막, 각막 등\"의 영역 내부에서 검 출된 모든 text를 의미단위로 분해하고, 이를 \"눈의 구조와 기능\"의 키워드에 연결할 수 있다. 또한, 서버는 그림영역을 추출하고 이를 이미지 파일로 저장하여, 이를 문제영역의 이미지와 비교할 수 있다. 유사하게, 서버는 \"눈의 조절작용\" 하위에서 \"수정체, 두께, 섬모체, 등\"의 영역 내부에서 검출된 모든 text를 의미단위로 분해하고 이를 \"눈의 조절 작용\"의 키워드에 연결할 수 있고, 그림영역을 추출하여 문제영역의 이미 지와 비교할 수 있다. 도 20은 본 명세서가 적용될 수 있는 데이터 바인딩 구조의 이용을 예시한다. 도 13을 참조하면, 서버는 문제영역 및 해설영역에서 추출한 데이터를 바인딩할 수 있다. 서버는 데이터 바인딩 구조에 근거하여, 각 문항에 대한 해답에서 OCR 기술을 이용하여, 키워드를 추출할 수 있으며, 각 문항에 대한 해답에서 추출된 키워드를 해당 문항의 메타 데이터로 활용할 수 있다. 도 19 및 도 20을 참조하면, 서버는 1번 문항에 대응하는 해설에서, 홍채, 동공, 빛의 양, 각막, 망막, 시각세포, 쪋등의 텍스트를 추출할 수 있다. 이때, 서버는 서비스 확장성을 고려하여, 모든 키워드를 저장할 수 있다. 서버는 검색의 성능과 아웃라이어 제거를 위한 비지도학습의 K-means 클러스터링, 고도화된 검색엔진을 위한 키 워드 클러스터링, 자연어처리 등의 기술을 활용할 수 있다. 예를 들어, 추출된 텍스트에 근거하여, 검수자는 취사 선택하여 keyword를 선별할 수 있다. 서버는 선별된 키워드를 각 문항에 연결하여 문항에 searchable keyword를 부여할 수 있다. 도 21은 본 명세서가 적용될 수 있는 검색 방법의 예시이다. 1. Keyword-based search 서버가 수행할 수 있는 키워드 기반의 검색 방법은 다음과 같다 : 1) 키워드, 자연어 검색: 구글, 네이버 검색창처럼 문장 및 단어를 입력하고 해당 문장에 연관성이 높은 데이터 부터 낮은 데이터까지 검색결과로 보여주는 기능 2) 카테고리 검색: 컨텐츠 검색을 위한 마스터 테이블을 구축하고 각 문항의 속성값을 마스터 테이블에 연동하 여, 사용자가 선택한 여러가지의 카테고리에 부합한 데이터를 불러오는 기능 3) 이미지 내 텍스트를 이용한 검색: 이미지에서 OCR 로 텍스트들을 추출하여 컨텐츠 DB에 해당 텍스트랑 매칭 되는 데이터가 있는지 판단하여 유사한 결과를 가져오는 기능 이를 통해, 서버는 각 문항과 관련된 다양한 keyword를 추출할 수 있고, 이를 우선적으로 문항의 searchable keywords로 배정할 수 있다. 이를 통해, 검색 및 선택 빈도에 따라서 노출/클릭을 개선시키면, 서버는 도출된 keyword를 더욱 의미론 단위로 정제할 수 있다. 또한, 서버는 각 문항에 최적화된 keyword의 구성이 가능하다. 2. Image-based search 도 21을 참조하면, 서버가 수행할 수 있는 이미지 기반의 검색 방법을 예시한다. 서버는 개념영역에 근거하여, 문항과 관련된 Topic을 예측할 수 있다. 예를 들어, 7번 및 8번 문항 (2120,2130)은 \"눈의 조절 작용\" 과 관련된 문항으로 예측될 수 있다. 이를 통해, 서버는 동일 과목의 타 서책 내 디자인의 확보를 통해서 이미지의 다양성을 확보할 수 있고, machine learning 모듈을 고도화하여 이미지 기반의 유사문제 추론이 가능할 수 있다. 특히, 이러한 기술은 문항 내 이미지가 많은 사회 및 과학 등의 과목에서 유효성이 높을 수 있다. 도 22는 본 명세서가 적용될 수 있는 메타 데이터 추출 및 매칭의 예시이다. 도 22를 참조하면, 서버는 참고서를 생산하기 위한 PDF 파일의 목차와 관련된 페이지에 근거하여, 참고서의 컨 텐츠와 관련된 트리 구조를 생성한다(S2210). 예를 들어, 서버는 목차 페이지에서 목차를 추출하고, 목차 구조 에 따라 트리 구조를 생성할 수 있다. 또한, 서버는 PDF 파일과 관련된 의미론적 HTML 파일을 생성할 수 있다. 예를 들어, 서버는 Block OCR을 이용하여, PDF 파일의 개념 설명 페이지를 Block 별로 분리하고, keyword를 추 출할 수 있다. 이후, 서버는 Block의 계층 및 순서에 근거하여, keyword를 이용하여, 트리 구조를 생성할 수 있 다. 도 23은 본 명세서가 적용될 수 있는 트리 구조 생성의 예시이다. 도 23을 참조하면, 서버는 목차와 관련된 페이지를 각 Block 별로 분리하고, keyword들을 추출할 수 있다. 서버는 추출된 keyword들을 이용하여, 트리 구조를 생성할 수 있다. 다시, 도 22를 참조하면, 서버는 PDF 파일의 각 페이지에서 페이지 내에 포함된 개념 설명, 문항, 해설등의 컨 텐츠와 관련된 메타 데이터를 추출한다(S2220). 여기서, 메타 데이터는 문항별 획득될 수 있는 정보를 포함할 수 있다. 서버는 PDF 파일의 각 페이지의 Column 개수를 예측할 수 있다. 서버는 페이지의 배경색을 추출하고, 배경색에 근거하여 문제영역과 관련된 데이터를 제거하고, 나머지 영역에서 메타 데이터를 추출할 수 있다. 또한, Column 개수가 2개 이상인 것에 근거하여, 서버는 페이지를 1개의 Column을 갖는 형태로 병합할 수 있다. 서버는 병합된 페이지의 keyblock을 추출하며, keyblock은 개념, 문제, 및/또는 지문 영역을 포함한다. 서버는 트리 구조에 근거하여, 메타 데이터를 연결한다(S2230). 예를 들어, 서버는 트리 구조에 근거하여, keyblock을 연결할 수 있다. 서버는 연결된 keyblock에 근거하여, 메타 데이터들을 연결할 수 있다. 예를 들어, 서버는 트리 구조의 하위 항목(item)으로서, 관련된 메타 데이터를 삽입할 수 있다. 보다 자세하게, 메타 데이터들은 상위 토픽에 포함된 하위 구성요소들의 구조로 연결될 수 있다. 또한, 서버는 해답에서 키워드를 추출하고, 추출된 키워드를 해답과 관련된 문항에 연결할 수 있다. 전술한 본 명세서는, 프로그램이 기록된 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨 터가 읽을 수 있는 매체는, 컴퓨터 시스템에 의하여 읽혀 질 수 있는 데이터가 저장되는 모든 종류의 기록장치 를 포함한다. 컴퓨터가 읽을 수 있는 매체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있으며, 또한 캐리어 웨이브(예를 들어, 인터넷을 통한 전송)의 형태로 구현되는 것도 포함한다. 따라서, 상기의 상세한 설명은 모든 면에서 제한적으로 해석되어서는 아니되고 예시적인 것으로 고려되어야 한다. 본 명세서의 범위는 첨부된 청구항의 합리적 해석에 의해 결정되어야 하고, 본 명세서의 등가적 범위 내에서의 모든 변경은 본 명세 서의 범위에 포함된다. 또한, 이상에서 서비스 및 실시 예들을 중심으로 설명하였으나 이는 단지 예시일 뿐 본 명세서를 한정하는 것이 아니며, 본 명세서가 속하는 분야의 통상의 지식을 가진 자라면 본 서비스 및 실시 예의 본질적인 특성을 벗어 나지 않는 범위에서 이상에 예시되지 않은 여러 가지의 변형과 응용이 가능함을 알 수 있을 것이다. 예를 들어, 실시 예들에 구체적으로 나타난 각 구성 요소는 변형하여 실시할 수 있는 것이다. 그리고 이러한 변형과 응용에관계된 차이점들은 첨부한 청구 범위에서 규정하는 본 명세서의 범위에 포함되는 것으로 해석되어야 할 것이다."}
{"patent_id": "10-2023-0172374", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 명세서와 관련된 전자 기기를 설명하기 위한 블록도이다. 도 2는 본 명세서의 일 실시예에 따른 AI 장치의 블록도이다. 도 3은 본 명세서에 적용될 수 있는 PDF 생성방법의 예시이다. 도 4 및 도 5는 본 명세서가 적용될 수 있는 PDF 파일의 HTML 형태로의 변환에 대한 예시이다. 도 6은 본 명세서가 적용될 수 있는 Semantic Box 모델의 적용 방법이다. 도 7은 본 명세서가 적용될 수 있는 사용자와의 상호작용 선언의 예시이다. 도 8은 본 명세서가 적용될 수 있는 Block OCR의 예시이다. 도 9는 본 명세서가 적용될 수 있는 해설 추출의 예시이다. 도 10은 본 명세서가 적용될 수 있는 해설지의 문항별 분해방법의 예시이다. 도 11은 본 명세서가 적용될 수 있는 구분자 선택의 예시이다. 도 12는 본 명세서가 적용될 수 있는 해설지의 문항 별 분해의 예시이다. 도 13은 본 명세서가 적용될 수 있는 데이터 바인딩의 예시이다. 도 14는 본 명세서가 적용될 수 있는 서버의 일 실시예이다. 도 15는 본 명세서가 적용될 수 있는 의미론적 HTML의 예시이다. 도 16은 본 명세서가 적용될 수 있는 참고서의 구성을 예시한다.도 17은 본 명세서가 적용될 수 있는 메타 데이터의 연동방법을 예시한다. 도 18은 본 명세서가 적용될 수 있는 목차 활용방법의 예시이다. 도 19는 본 명세서가 적용될 수 있는 개념, 문제, 및/또는 지문 영역의 활용방법의 예시이다 도 20은 본 명세서가 적용될 수 있는 데이터 바인딩 구조의 이용을 예시한다. 도 21은 본 명세서가 적용될 수 있는 검색 방법의 예시이다. 도 22는 본 명세서가 적용될 수 있는 메타 데이터 추출 및 매칭의 예시이다. 도 23은 본 명세서가 적용될 수 있는 트리 구조 생성의 예시이다."}
