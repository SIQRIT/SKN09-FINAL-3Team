{"patent_id": "10-2021-0126622", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0124934", "출원번호": "10-2021-0126622", "발명의 명칭": "모델 트레이닝 방법, 장치, 개발 시스템, 전자장비, 컴퓨터 판독 가능 저장 매체 및 컴퓨터", "출원인": "베이징 바이두 넷컴 사이언스 테크놀로지 컴퍼니", "발명자": "당, 칭칭"}}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "모델 트레이닝 방법에 있어서,트레이닝 준비 명령을 수신하였다고 확정할 경우, 트레이닝 준비 유닛을 호출하여 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하는 것;트레이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 상기 모델을 트레이닝하기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하는 것; 및상기 트레이닝 유닛을 통해 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여, 상기 모델을 트레이닝하는 것을 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 트레이닝 준비 유닛을 호출하여 도량 함수를 설정하는 것;평가 명령을 수신하였다고 확정할 경우, 평가 유닛을 호출하여 상기 트레이닝 데이터 세트와 다른 평가 데이터세트를 로드하도록 배치되는 제2 데이터 리드 유닛을 설정하는 것; 및상기 평가 유닛을 통해 트레이닝된 상기 모델과 상기 손실 함수 및 상기 도량 함수를 이용하여, 상기 제2 데이터 리드 유닛으로부터의 상기 평가 데이터 세트에 기초하여, 상기 모델을 평가하는 것을 더 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,예측 명령을 수신하였다고 확정할 경우, 예측 유닛을 호출하여 상기 트레이닝 데이터 세트와 다른 예측 데이터세트를 로드하도록 배치되는 제3 데이터 리드 유닛을 설정하는 것; 및상기 예측 유닛을 통해 트레이닝된 상기 모델을 이용하여, 상기 제3 데이터 리드 유닛으로부터의 상기 예측 데이터 세트의 예측 결과를 확정하는 것을 더 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 트레이닝 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하는 것;상기 개수에 기초하여, 상기 트레이닝 데이터 세트를 그루핑함으로써, 상기 트레이닝 데이터 세트 중의 트레이닝 데이터를 상기 제1 데이터 리드 유닛에 배치하는 것;상기 제1 데이터 리드 유닛에서 트레이닝 데이터가 결여된 위치를 확정하는 것; 및소정의 데이터를 상기 위치에 삽입하는 것을 더 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "공개특허 10-2021-0124934-3-제2항에 있어서,상기 평가 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하는 것;상기 개수에 기초하여, 상기 평가 데이터 세트를 그루핑함으로써, 상기 평가 데이터 세트 중의 평가 데이터를상기 제2 데이터 리드 유닛에 배치하는 것;상기 제2 데이터 리드 유닛에서 평가 데이터가 결여된 위치를 확정하는 것; 및소정의 데이터를 상기 위치에 삽입함으로써, 삽입 후의 상기 평가 데이터 세트를 형성하는 것을 더 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,트레이닝된 상기 모델과 설정된 상기 손실 함수 및 상기 도량 함수를 이용하여, 삽입 후의 상기 평가 데이터 세트에 기초하여, 상기 모델의 평가 결과를 확정하는 것; 및상기 평가 결과 중 평가 데이터가 결여된 상기 위치에 대응되는 무효 평가 결과의 가중치를 최소화함으로써, 상기 무효 평가 결과를 제거하는 것을 더 포함하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 트레이닝 유닛은 상기 손실 함수, 상기 최적화 함수 및 상기 제1 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제2항에 있어서,상기 평가 유닛은 상기 손실 함수, 상기 도량 함수 및 상기 제2 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델 트레이닝 방법."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "모델 트레이닝 장치에 있어서,트레이닝 준비 명령을 수신하였다고 확정할 경우, 트레이닝 준비 유닛을 호출하여 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하도록 배치되는 트레이닝 준비 유닛 호출 모듈;트레이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 상기 모델을 트레이닝하기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하도록 배치되는 트레이닝 유닛 호출 모듈;및상기 트레이닝 유닛을 통해 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여, 상기 모델을 트레이닝하도록 배치되는 트레이닝 실행 모듈을 포함하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제9항에 있어서,상기 트레이닝 준비 유닛 호출 모듈은 상기 트레이닝 준비 유닛을 호출하여 도량 함수를 설정하도록 배치되고,공개특허 10-2021-0124934-4-상기 모델 트레이닝 장치는,평가 명령을 수신하였다고 확정할 경우, 평가 유닛을 호출하여 상기 트레이닝 데이터 세트와 다른 평가 데이터세트를 로드하도록 배치되는 제2 데이터 리드 유닛을 설정하도록 배치되는 평가 유닛 호출 모듈; 및상기 평가 유닛을 통해 트레이닝된 상기 모델과 상기 손실 함수 및 상기 도량 함수를 이용하여, 상기 제2 데이터 리드 유닛으로부터의 상기 평가 데이터 세트에 기초하여, 상기 모델을 평가하도록 배치되는 평가 실행 모듈을 더 포함하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제9항에 있어서,예측 명령을 수신하였다고 확정할 경우, 예측 유닛을 호출하여 상기 트레이닝 데이터 세트와 다른 예측 데이터세트를 로드하도록 배치되는 제3 데이터 리드 유닛을 설정하도록 배치되는 예측 유닛 호출 모듈; 및상기 예측 유닛을 통해 트레이닝된 상기 모델을 이용하여, 상기 제3 데이터 리드 유닛으로부터의 상기 예측 데이터 세트의 예측 결과를 확정하도록 배치되는 예측 결과 확정 모듈을 더 포함하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제9항에 있어서,상기 트레이닝 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하도록 배치되는 개수 취득 모듈;상기 개수에 기초하여, 상기 트레이닝 데이터 세트를 그루핑함으로써, 상기 트레이닝 데이터 세트 중의 트레이닝 데이터를 상기 제1 데이터 리드 유닛에 배치하도록 배치되는 트레이닝 데이터 배치 모듈;상기 제1 데이터 리드 유닛에서 트레이닝 데이터가 결여된 위치를 확정하도록 배치되는 위치 확정 모듈; 및소정의 데이터를 상기 위치에 삽입하도록 배치되는 삽입 모듈을 더 포함하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제10항에 있어서,상기 평가 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하도록 배치되는 개수 취득 모듈;상기 개수에 기초하여, 상기 평가 데이터 세트를 그루핑함으로써, 상기 평가 데이터 세트 중의 평가 데이터를상기 제2 데이터 리드 유닛에 배치하도록 배치되는 트레이닝 데이터 배치 모듈;상기 제2 데이터 리드 유닛에서 평가 데이터가 결여된 위치를 확정하도록 배치되는 위치 확정 모듈; 및소정의 데이터를 상기 위치에 삽입함으로써, 삽입 후의 상기 평가 데이터 세트를 형성하도록 배치되는 삽입 모듈을 더 포함하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제13항에 있어서,트레이닝된 상기 모델과 설정된 상기 손실 함수 및 상기 도량 함수를 이용하여, 삽입 후의 상기 평가 데이터 세트에 기초하여 상기 모델의 평가 결과를 확정하도록 배치되는 예측 결과 확정 모듈; 및상기 평가 결과 중 평가 데이터가 결여된 상기 위치에 대응되는 무효 평가 결과의 가중치를 최소화함으로써, 상기 무효 평가 결과를 제거하도록 배치되는 가중치 최소화 모듈을 더 포함하는모델 트레이닝 장치.공개특허 10-2021-0124934-5-청구항 15 제9항에 있어서,상기 트레이닝 유닛은 상기 손실 함수, 상기 최적화 함수 및 상기 제1 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서,상기 평가 유닛은 상기 손실 함수, 상기 도량 함수 및 상기 제2 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델 트레이닝 장치."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "모델을 트레이닝하기 위한 개발 시스템에 있어서,트레이닝 준비 명령에 응답하여, 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하도록 배치되는 트레이닝 준비 유닛; 및트레이닝 명령에 응답하여, 상기 모델을 트레이닝하기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1데이터 리드 유닛을 설정하도록 배치되는 트레이닝 유닛을 포함하고,상기 트레이닝 유닛은, 설정된 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여 상기 모델을 트레이닝하도록 배치되는모델을 트레이닝하기 위한 개발 시스템."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 트레이닝 준비 유닛은 도량 함수를 설정하도록 배치되고,상기 모델을 트레이닝하기 위한 개발 시스템은,평가 명령에 응답하여, 상기 트레이닝 데이터 세트와 다른 평가 데이터 세트를 로드하도록 배치되는 제2 데이터리드 유닛을 설정하도록 배치되는 평가 유닛을 더 포함하고,상기 평가 유닛은, 트레이닝된 상기 모델과 상기 손실 함수 및 상기 도량 함수를 이용하여, 상기 제2 데이터 리드 유닛으로부터의 상기 평가 데이터 세트에 기초하여 상기 모델을 평가하도록 배치되는모델을 트레이닝하기 위한 개발 시스템."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서,예측 명령에 응답하여, 상기 트레이닝 데이터 세트와 다른 예측 데이터 세트를 로드하도록 배치되는 제3 데이터리드 유닛을 설정하도록 배치되는 예측 유닛을 더 포함하고,상기 예측 유닛은, 트레이닝된 상기 모델을 이용하여 상기 제3 데이터 리드 유닛으로부터의 상기 예측 데이터세트의 예측 결과를 확정하도록 배치되는모델을 트레이닝하기 위한 개발 시스템."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서,공개특허 10-2021-0124934-6-상기 트레이닝 유닛은 상기 손실 함수, 상기 최적화 함수 및 상기 제1 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델을 트레이닝하기 위한 개발 시스템."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_21", "content": "제18항에 있어서,상기 평가 유닛은 상기 손실 함수, 상기 도량 함수 및 상기 제2 데이터 리드 유닛 각각에 대한 호출 경로를 구비하는모델을 트레이닝하기 위한 개발 시스템."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_22", "content": "하나 또는 복수의 프로세서; 및하나 또는 복수의 프로그램을 저장하기 위한 저장장치를 포함하고,상기 하나 또는 복수의 프로그램이 상기 하나 또는 복수의 프로세서에 의해 실행될 경우, 상기 하나 또는 복수의 프로세서로 하여금 제1항 내지 제8항 중 어느 한 항의 방법을 실현하도록 하는전자장비."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_23", "content": "컴퓨터 프로그램이 저장되어 있는 비 일시적 컴퓨터 판독 가능 저장 매체에 있어서,상기 프로그램이 프로세서에 의해 실행 될 경우, 제1항 내지 제8항 중 어느 한 항의 방법을 실현하는비 일시적 컴퓨터 판독 가능 저장 매체."}
{"patent_id": "10-2021-0126622", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_24", "content": "컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서,상기 컴퓨터 프로그램의 명령이 프로세서에 의해 실행될 경우, 제1항 내지 제8항 중 어느 한 항의 방법을 실현하는컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램."}
{"patent_id": "10-2021-0126622", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 실시예는 딥 러닝 분야에 관한 것으로서, 모델 트레이닝 방법, 장치, 개발 시스템, 전자장비, 컴퓨터 판독 가능 저장 매체 및 컴퓨터 프로그램에 관한 것이다. 상기 방법은, 트레이닝 준비 명령을 수신하였다고 확정 할 경우, 트레이닝 준비 유닛을 호출하여 적어도 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하 는 것; 트레이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 모델을 트레이닝하기 위한 트레이 닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하는 것; 및 트레이닝 유닛을 통해 손실 함 수 및 최적화 함수를 이용하여, 제1 데이터 리드 유닛으로부터의 트레이닝 데이터 세트에 기초하여, 모델을 트레 이닝하는 것을 포함한다. 본 개시의 기술방안은 입력 코드를 감소시킬 수 있고, 개발자의 연구 개발 자원 및 시 간적 코스트를 현저하게 절감할 수 있다."}
{"patent_id": "10-2021-0126622", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시의 실시예는 주로 딥 러닝 분야에 관한 것으로서, 보다 구체적으로는, 모델 트레이닝 방법, 장치, 모델 을 트레이닝하기 위한 개발 시스템, 전자장비, 컴퓨터 판독 가능 저장 매체 및 컴퓨터 프로그램에 관한 것이다."}
{"patent_id": "10-2021-0126622", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "인공지능 기술의 신속한 발전에 따라, 딥 러닝 기술은 이미 인공지능 분야의 핵심 기술로 자리잡고 있다. 딥 러 닝 체계 개발 시스템은 개발자로 하여금 시스템 내에서 제공하는 기능 유닛을 이용하여, 주문형 신경망을 구축, 트레이닝 또는 평가함으로써, 자연 언어 처리, 이미지 인식, 음성 인식 등에 응용할 수 있도록 한다. 개발의 편 리를 위해, 딥 러닝 체계 개발 시스템은 대량의 애플리케이션 프로그래밍 인터페이스(AP)를 설계하였다. 예를 들어, 베테랑 개발자를 위해, 딥 러닝 체계 개발 시스템은 일반적으로 복잡한 장면 모델을 실현할 때 유연하게 활용할 수 있는 하위 층 API를 제공하고, 초급 개발자를 위해, 딥 러닝 체계 개발 시스템은 일반적으로 고정적 인 모드에 따르는 상위 층 API를 제공한다. 하지만, 상위 층 API의 모델 구축은 하위 층 API의 모델 구축과 완 전히 일치하지는 않는다. 이로 인해, 상위 층API를 응용 및 변경하기 위해 하위 층 API를 응용하여야 할 경우, 많은 코드 양이 필요하므로, 시스템 개발의 문턱은 높아진다."}
{"patent_id": "10-2021-0126622", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "발명의 내용본 개시의 예시적인 실시예에 의하면, 모델 트레이닝 방안을 제공한다. 본 개시의 제1 측면에 의하면, 모델 트레이닝 방법을 제공한다. 본 방법은, 트레이닝 준비 명령을 수신하였다고 확정할 경우, 트레이닝 준비 유닛을 호출하여 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수 를 설정하는 것; 트레이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 상기 모델을 트레이닝 하기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하는 것; 및 상기 트레이 닝 유닛을 통해 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여, 상기 모델을 트레이닝하는 것을 포함한다. 본 개시의 제2 측면에 의하면, 트레이닝 준비 명령을 수신하였다고 확정할 경우, 트레이닝 준비 유닛을 호출하 여 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하도록 배치되는 트레이닝 준비 유 닛 호출 모듈; 트레이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 상기 모델을 트레이닝하 기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하도록 배치되는 트레이닝 유닛 호출 모듈; 및 상기 트레이닝 유닛을 통해 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데 이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여, 상기 모델을 트레이닝하도록 배치되는 트레 이닝 실행 모듈을 포함하는 모델 트레이닝 장치를 제공한다. 본 개시의 제3 측면에 의하면, 트레이닝 준비 명령에 응답하여, 적어도 상기 모델을 트레이닝하기 위한 손실 함 수 및 최적화 함수를 설정하도록 배치되는 트레이닝 준비 유닛; 및 트레이닝 명령에 응답하여, 상기 모델을 트 레이닝하기 위한 트레이닝 데이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하도록 배치되는 트 레이닝 유닛을 포함하고, 상기 트레이닝 유닛은, 설정된 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으로부터의 상기 트레이닝 데이터 세트에 기초하여 상기 모델을 트레이닝하도록 배치되는 모델을 트레이닝하기 위한 개발 시스템을 제공한다. 본 개시의 제4 측면에 의하면, 하나 또는 복수의 프로세서; 및 하나 또는 복수의 프로그램을 저장하기 위한 저 장장치를 포함하고, 하나 또는 복수의 프로그램이 하나 또는 복수의 프로세서에 의해 실행 될 경우, 하나 또는 복수의 프로세서로 하여금 본 개시의 제1 측면에 따른 방법을 실현하도록 하는 전자장비를 제공한다. 본 개시의 제5 측면에 의하면, 컴퓨터 프로그램이 저장되어 있는 비 일시적 컴퓨터 판독 가능 저장 매체에 있어 서, 상기 프로그램이 프로세서에 의해 실행될 경우, 본 개시의 제1 측면에 따른 방법을 실현하는 비 일시적 컴 퓨터 판독 가능 저장 매체를 제공한다. 본 개시의 제6 측면에 의하면, 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램에 있어서, 컴퓨터 프로그 램의 명령이 프로세서에 의해 실행될 경우, 본 개시의 제1 측면에 따른 방법을 실현하는 컴퓨터 판독 가능 저장 매체에 저장된 컴퓨터 프로그램을 제공한다. 상기에서 기술된 내용은 그 목적이 본 개시의 실시예의 핵심 또는 중요한 특징을 한정하기 위한 것이 아니고, 또한, 본 개시의 범위는 이에 한정되지 아니함을 이해하여야 한다. 본 개시의 다른 특징들은 하기 설명으로부터 용이하게 이해할 수 있을 것이다."}
{"patent_id": "10-2021-0126622", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 도면을 참조하여 본 개시의 실시예를 보다 상세하게 설명한다. 도면에서는 본 개시의 일부 실시예를 도시 하였으나, 지적해두어야 할 것은, 본 개시는 다양한 형태로 실현될 수 있고, 본 명세서에서 설명한 실시예에 한 정되는 것으로 해석하여서는 안 되고, 반대로, 이러한 실시예를 제공한 것은 본 개시를 보다 전면적이고 투철하 게 이해하기 위해서이다. 지적해두어야 할 것은, 본 개시의 도면 및 실시예는 단지 예시적인 것으로서, 본 개시 의 보호범위를 한정하기 위한 것은 아니다. 본 개시의 실시예의 설명에 있어서, \"포함\"이란 용어 및 이와 비슷한 용어에 대해서는 개방적인 포함으로 이해 하여야 한다. 즉, \"포함하는데 이에 한정되지는 않는다\"는 의미로 이해하여야 한다. \"~에 기초하여\"라는 용어에 대해서는, \"적어도 부분적으로 기초하여\"라는 의미로 이해하여야 한다. \"일 실시예\" 또는 \"본 실시예\"라는 용어 에 대해서는 \"적어도 하나의 실시예\"로 이해하여야 한다. \"제1\", \"제2\" 등은 서로 다르거나 동일한 대상을 의미 할 수 있다. 이하의 설명에서는, 다른 명확한 또는 암묵적인 정의를 포함할 수 있다. 상기에서 언급한 바와 같이, 상위 층 API의 사용 편리성을 향상시키고, 상위 층 API를 사용하여 실현하는 알고 리즘의 코드 양을 감소하기 위해, 최적화된 모델을 트레이닝하기 위한 개발 시스템 및 해당 시스템에 기초한 모 델 트레이닝 방법 및 장치가 수요된다. 또한, 현재 주로 사용되는 모델 트레이닝 방식은, 통상적으로 복수의 계 산장비(즉, 전문 모델 트레이닝을 위한 컴퓨팅 노드, 예를 들어, CPU 또는 GPU 등)에 의해 트레이닝 데이트를 병행 처리함으로써, 병행 트레이닝을 실현한다. 하지만, 전통적인 상위 층 API는 데이터를 처리하기 위한 단일 계산장비 또는 복수의 계산장비의 설정을 실행할 때, 서로 다른 코드를 각각 입력하여야 하므로, 코드 양을 더 증가시키게 된다. 따라서, 상위 층 API를 설계할 때는 이 부분도 고려하여, 코드 양을 감소시켜야 한다. 본 개시의 실시예에 의하면, 모델 트레이닝 방안을 제공한다. 예를 들어, 상위 층 API를 설계 할 때, 상위 층 API중의 관련 유닛과 하위 층 API의 호출 경로를 구축함으로써, 손실 함수, 도량 함수, 최적화 함수 등의 하위 층 API 코드를 완전히 다중화할 수 있다. 개발자 또는 다른 사용자가 입력한 관련 명령을 수신한 후, 개발 시스 템은 해당 명령에 대응되는 상위 층 API유닛을 직접 호출할 수 있고, 해당 상위 층 API유닛에 의해 자동적으로 해당 명령을 완성하기 위한 하위 층 API를 호출할 수 있다. 이러한 방식에 의하면, 전통적인 상위 층 API에 비 해, 개발자가 입력하여야 할 코드 양이 현저하게 줄어들고, 또한, 상위 층 API는 사용자가 자체적으로 정의하거 나 또는 손실 함수, 도량 함수 등 하위 층 API를 선택하는 것을 지원하므로, 본 개시의 상위 층 API는 전통적인 상위 층 API에 비해 보다 유연하고 실용적이다. 또한, 본 개시의 모델 트레이닝 방법은, 자동적으로 데이터를 보완하고 선택적으로 대응되는 마스크 코드를 설 정하는 방식을 통해 개별 계산장비에 처리할 데이터가 없음으로 인해 멀티 계산장비의 병행 실패를 초래하는 문 제를 해결할 수 있고, 또한, 병행 처리후의 데이터를 먼저 병합한 다음, 평가 결과를 계산함으로써, 평가 결과 의 자동 병합 문제를 해결할 수 있다. 이하, 첨부 도면을 참조하여 본 개시의 실시예를 구체적으로 설명한다. 도 1은 본 개시의 복수의 실시예를 실현 할 수 있는 예시적인 환경의 예시도를 나타낸다. 도 1에 도시된 바와 같이, 예시적인 환경에는 모델 트레이닝을 위한 사용자 명령, 개발 시스템 및 모델이 포함된다. 도 1에 도시된 바와 같이, 개발 시스템은 사용자가 입력한 사용자 명령을 대기한다. 일부 실시예에 있어서, 사용자 명령은 개발자가 입력한 코드이다. 선택적으로 또는 추가적으로, 사용자 명령은 초급 개발자 심지어 초보자를 상대로 한 명령 키일 수도 있다. 예를 들어, 초보자가 모델 트레이닝에 필요한 특정 함 수(예를 들어, 최적화 함수)를 선택하고자 할 경우, 초보자는 초기 개발 인터페이스에서 트레이닝 준비 유닛을 선택하고, 트레이닝 준비 유닛의 하위 층으로부터 최적화 함수를 선택할 수 있는데, 예를 들어, Adam 옵티마이 저를 선택할 수 있다. 일부 실시예에 있어서, 개발 시스템은 개인용 컴퓨터, 서버 컴퓨터, 휴대식 또는 랩 탑식 장비, 이동장비(예를 들어, 이동전화기, 개인용 정보 단말기(PDA), 미디어 플레이어 등), 멀티 프로세서 시스템, 가전 제품, 미니 컴퓨터, 메인 프레임 컴퓨터, 상기 시스템 또는 장비 중 임의의 하나를 포함하는 분포 식 환경 등에 설치될 수 있는데, 이에 한정되지는 않는다. 개발 시스템이 개발자로부터의 사용자 명령을 수신하게 되면, 개발 시스템은 사용자 명령 에 관련된 유닛을 자동적으로 호출할 수 있다. 하나의 실예로서, 개발 시스템은 트레이닝 준비 유닛을 호 출하여 모델을 트레이닝하는데 필요한 관련 함수를 정의할 수 있다. 다른 하나의 실예로서, 개발 시스템 은 트레이닝 유닛을 호출하여 트레이닝 데이터를 읽는데 필요한 데이터 리드 유닛을 정의할 수 있다. 이를 통해, 모델은 선정된 트레이닝 데이터 및 관련 함수에 기초하여 자동적으로 트레이닝될 수 있다. 도 2는 본 개시의 실시예에 따른 모델을 트레이닝하기 위한 개발 시스템의 예시도를 나타낸다. 도 2 에 도시된 바와 같이, 상기 개발 시스템은 상위 층 API를 포함한다. 상위 층 API는 적어도 트레이닝 준비 유닛 및 트레이닝 유닛을 구비한다. 트레이닝 준비 유닛은 개발자로부터의 트레이닝 준비 명령을 수신한 후, 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정할 수 있다. 지적해두어야 할 것은, 트레이닝 준비 유닛은 모델을 트레이닝하는데 필요한 최적화 함수, 손 실 함수, 도량 함수, 트레이닝 데이터 세트 등을 정의할 수 있다. 트레이닝 유닛은 개발자로부터의 트레이 닝 명령을 수신한 후, 데이터 리드 유닛을 설정함으로써, 모델을 트레이닝하기 위한 트레이닝 데이터 , 즉, 트레이닝 데이터 세트를 로드하도록 한다. 다시 말하면, 트레이닝 유닛은 모델을 트레이 닝하는데 필요한 순환 대체 과정, 트레이닝의 횟수 및 트레이닝 데이터를 읽는 과정 등을 설정할 수 있다. 트레 이닝을 위한 관련 파라미터가 설정된 후, 트레이닝 유닛은 설정된 손실 함수 및 최적화 함수를 이용하여, 데이터 리드 유닛으로부터의 트레이닝 데이터에 기초하여 모델을 트레이닝하도록 배 치된다. 일부 실시예에 있어서, 트레이닝 준비 유닛은 도량 함수를 설정할 수도 있고, 또한, 상위 층 API는 평가 유닛을 구비할 수도 있다. 평가 유닛(미도시)은 평가 명령에 기초하여 데이터 리드 유닛 을 설정할 수 있고, 데이터 리드 유닛은 트레이닝 데이터와 다른 평가 데이터, 즉, 평가 데이터 세트 를 로드하도록 배치된다. 다시 말하면, 평가 유닛은 모델의 출력(즉, 예측 결과)과 평가 데이터 세트 중의 마킹된 결과 사이의 차이에 의해 모델을 평가할 수 있다. 예를 들어, 평가 유닛은 트레이닝된 모델과 손실 함수 및 도량 함수를 이용하여, 데이터 리드 유닛으로부터의 평가 데이터 세트에 기초하여 모델을 평가할 수 있다. 일부 실시예에 있어서, 상위 층 API는 데이터 리드 유닛을 설정함으로써, 트레이닝 데이터와 다 른 예측 데이터 세트를 로도하기 위한 예측 유닛을 구비할 수 있다. 예를 들어, 예측 유닛은 트레이닝된 모델 을 이용하여 데이터 리드 유닛으로부터의 예측 데이터 세트의 예측 결과를 확정할 수 있다. 도 2에 도시된 바와 같이, 상기 개발 시스템은 여러 개의 하위 층 API를 포함할 수 있는데, 예를 들어, 손 실 함수, 도량 함수, 최적화 함수, 데이터 리드 유닛 및 트레이닝 데이터를 포함할 수 있다. 하나의 실예로서, 손실 함수, 도량 함수, 최적화 함수, 데이터 리드 유닛은 모두 모델 트레이닝 개발 시스템 중의 하위 층 API이다. 예를 들어, 데이터 리드 유닛은 트레이닝 데이터 를 읽고, 트레이닝 데이터 중의 입력부분을 모델에 입력할 수 있는데, 모델의 출력은 바로 예측 결과이다. 손실 함수는 상기 예측 결과와 트레이닝 데이터 중의 마킹된 결과를 비교함으로써, 이들의 차이를 얻을 수 있다. 최적화 함수는 모델의 파라미터를 최적화함으로써, 차이를 감소할 수 있고, 모 델의 파라미터가 수렴될 때까지 상기 과정을 순환적으로 실행할 수 있다. 지적해두어야 할 것은, 상기의 각 유닛이 호출하는 데이터 리드 유닛은 서로 다른 시간에 서로 다른 임무 를 수행하기 위한 동일한 데이터 리드 유닛일 수도 있고, 서로 다른 데이터 리드 유닛일 수도 있다. 예를 들어, 트레이닝에 관한 사용자 명령을 수신하였을 경우, 데이터 리드 유닛은 트레이닝 데이터를 호출할 수 있고, 평가에 관한 사용자 명령을 수신하였을 경우, 데이터 리드 유닛은 평가 데이터를 호출할 수 있고, 예측에 관한 사용자 명령을 수신하였을 경우, 데이터 리드 유닛은 예측 데이터를 호출할 수 있다. 상기에서 설명한 기술방안은 단지 예시에 지나지 않으며, 본 발명을 한정하기 위한 것은 아니다. 지적해두어야 할 것은, 다른 형태 또는 연결관계에 따라 전체 개발 시스템을 배치할 수도 있다. 상기 방안의 원리를 보 다 명확하게 해석하기 위해, 하기에서는 도 3을 참조하여 모델 트레이닝의 과정을 보다 상세하게 설명한다. 도 3은 본 개시의 실시예에 따른 모델 트레이닝 과정의 흐름도를 나타낸다. 일부 실시예에 있어서, 과정은 도 1에 도시된 개발 시스템에서 실현될 수 있다. 도 3을 참조하여 본 개시의 실시예에 따른 모델을 트레이 닝하기 위한 과정을 설명한다. 이해를 쉽게 하기 위해, 하기의 설명에서 언급하는 구체적인 데이터는 모두 예시적인 것으로서, 본 개시의 보호범위를 한정하는 것은 아니다. 본 개시의 방안을 보다 명확하게 설명하기 위해, 본 개시는 데이터 세트에 기초한 모델 트레이닝을 예로 들어 도 3을 참조하여 모델 트레이닝의 구체적인 과정을 설명한다. 지적해두어야 할 것은, 본 개시의 모델 트레이닝 개발방안은 다른 개발 시스템 체계에도 동일하게 적용될 수 있다. 개발자가 입력되는 트레이닝 데이터의 포맷 및 트레이닝하고자 하는 모델의 네트워크 구조를 설정한 후, 모델 트레이닝을 위한 과정을 시작한다. 단계302에서, 개발 시스템은 실시간으로 사용자 명령의 입력이 있는지 모니터링할 수 있다. 트레이닝 준비 명령과 같은 사용자 명령을 수신하였다고 확정할 경우, 개발 시스템은 자동적으로 트레이닝 준비 유 닛을 호출하여 적어도 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정한다.지적해두어야 할 것은, 본 명세서에서 언급한 \"유닛\", \"함수\"는 사실 모두 앞에서 언급한 애플리케이션 프로그 래밍 인터페이스API이다. 단계304에서, 개발 시스템은 계속하여 사용자 명령의 입력이 있는지 모니터링할 수 있다. 트레이닝 명령과 같은 사용자 명령을 수신하였다고 확정할 경우, 개발 시스템은 자동적으로 트레이닝 유닛을 호 출하여 데이터 리드 유닛을 설정한다. 여기서, 데이터 리드 유닛은 모델을 트레이닝하기 위한 트레이닝 데이터, 즉, 트레이닝 데이터 세트를 로드하도록 배치된다. 일부 실시예에 있어서, 트레이닝 유 닛은 손실 함수, 최적화 함수 및 데이터 리드 유닛 각각에 대한 호출 경로를 구비할 수 있 다. 지적해두어야 할 것은, 트레이닝 데이터에 기초하여 모델을 트레이닝할 경우, 트레이닝 데이터 의 데이터 양이 방대하므로, 통상적으로 복수의 계산장비에 의해 병행 처리를 실행하는 방식을 사용하여 트레이 닝을 완성함으로써, 트레이닝 시간을 단축시킨다. 하지만, 트레이닝 데이터를 하나하나씩 각 계산장비에 분배할 때, 어느 계산장비에 처리할 데이터가 없는 상황이 발생할 수 있다. 예를 들어, 트레이닝 데이터 세트에 10개의 데이터가 포함될 경우, 4개의 계산장비에 의해 병행 처리를 실행하게 되면, 2개의 계산장비에서 데이터 가 결여되는 문제가 발생하게 되므로, 복수의 계산장비의 병행 트레이닝의 실패를 초래하게 된다. 따라서, 하기와 같은 과정을 통해 자동적으로 데이터 결여 문제를 해결할 수 있다. 이 과정을 명확하게 설명하 기 위해, 본 개시는 도 4를 참조하여 설명한다. 도 4는, 본 개시의 실시예에 따른 멀티 계산장비의 병행 트레이 닝에서의 데이터 분포의 데이터 리드 유닛 내부의 예시도를 나타낸다. 도 4에 도시된 바와 같이, 데이터 리드 유닛에는 대량의 트레이닝 데이터가 로드되어 있다. 트레이닝 데이터에는 적어도 첫 회분 및 마지막 회분(중간 회분은 도시하지 않음)이 포함된다. 각 회분의 트레이닝 데이터는 모두 복수의 그룹으로 나뉘어져, 복수의 계산장비에 로드됨으로써, 예를 들어 하기와 같은 트레이닝 프로세스를 병행 으로 실행한다. 우선, 개발 시스템은 트레이닝 데이터를 병행 처리하는 계산장비의 개수, 즉, 4를 취득할 수 있다. 지적해두어야 할 것은, 계산장비의 종류 및 개수는 모두 트레이닝 준비 유닛에서 설정하거나, 또는 개발자 가 직접 코드를 입력하여 간편하게 설정할 수 있다. 따라서, 개발 시스템은 그 후 해당 설정에 따라 계산 장비의 개수를 확정할 수 있다. 그 다음, 개발 시스템은 해당 개수에 기초하여 트레이닝 데이터 세트에 대 해 도 4에 도시된 바와 같은 그루핑을 실행함으로써, 트레이닝 데이터 세트 중의 데이터를 데이터 리드 유닛 에 배치하고, 데이터 리드 유닛에서 트레이닝 데이터가 결여된 위치, 즉, 빈 자리(421, 422)를 확정 할 수 있다. 마지막으로, 개발 시스템은 소정의 데이터로 이러한 위치를 채울 수 있다. 하나의 실예로서, 개발 시스템은 해당 트레이닝 데이터 세트 중의 임의의 데이터로 빈 자리(421, 422)를 채울 수 있다. 예를 들어, 데이터 세트 중의 첫 번째 데이터를 복제하여 빈 자리에 삽입하고, 데이터 세트 중의 두 번째 데이 터를 복제하여 빈 자리에 삽입할 수 있다. 이와 비슷한 처리를 통해, 트레이닝 데이터는 계산장비에 입력되어, 후속적인 과정에서 모델을 트레이닝할 수 있다. 단계306에서, 개발 시스템은 트레이닝 유닛을 통해 손실 함수 및 최적화 함수를 이용하여, 데이터 리드 유닛으로부터의 트레이닝 데이터에 기초하여, 모델을 트레이닝할 수 있다. 지적해 두어야 할 것은, 트레이닝 유닛은 손실 함수, 최적화 함수 및 데이터 리드 유닛 각각에 대 한 호출 경로를 구비하므로, 트레이닝 유닛은 자동적으로 데이터 리드 유닛을 호출하여, 트레이닝 데 이터를 읽을 수 있다. 또한, 트레이닝 데이터 중의 입력부분은 모델에 입력되고, 모델의 출력은 바로 예측 결과이다. 이를 통해, 트레이닝 유닛은 자동적으로 손실 함수를 호출하여, 해당 예 측 결과와 트레이닝 데이터 중의 마킹된 결과를 비교함으로써, 이들의 차이를 얻을 수 있다. 또한, 상기 차이에 기초하여, 트레이닝 유닛은 자동적으로 최적화 함수를 호출하여, 모델의 파라미터를 최 적화할 수 있다. 트레이닝 유닛에는, 이미 이중 순환 프로그램이 구축되어, 모델의 파라미터가 수렴 될 때까지, 또는 소정의 대체 횟수에 이를 때까지 상기 과정을 순환적으로 실행한다. 이러한 방식에 의하면, 본 개시는 개발자로 하여금 단지 수 라인의 코드만 입력함으로써 모델에 대해 유연한 트레이닝을 실행할 수 있도록 하여, 개발자의 연구 개발 코스트를 대폭 절감할 수 있다. 하기에서는 모델을 평가하기 위한 과정을 상세하게 설명한다. 상기 단계302와 유사하게, 개발 시스템은 개발자의사용자 명령에 기초하여 자동적으로 트레이닝 준비 유닛을 호출하여 모델을 평가하기 위한 도량 함수, 즉, 개발자가 입력한 코드 중 \"평가\"에 관련 되는 캐릭터 섹션을 설정할 수 있다. 이러한 방식에 의하면, 개발자는 단지 수 라인의 코드만 입력함으로써 모델을 평가하는데 필요한 함수를 선택하고 설정할 수 있다. 상기 단계304와 유사하게, 개발 시스템은 개발자의사용자 명령(여기서는, 평가 명령이다)에 기초하여 자동적으로 평가 유닛을 호출하여 데이터 리드 유닛을 설정할 수 있다. 여기서, 데이터 리드 유닛은 트레이닝 데이터와 다른 평가 데이터, 즉, 평가 데이터 세트를 로드하도록 배치된다. 평가 데이터 세트는 모델에 입력되어 모델을 평가하기 위해 사용된다. 일부 실시예에 있어서, 평가 유닛은 손실 함수 , 도량 함수 및 데이터 리드 유닛 각각에 대한 호출 경로를 구비할 수 있다. 상기 단계306과 유사하게, 개발 시스템은 평가 유닛을 통해 트레이닝된 모델과 손실 함수 및 도 량 함수를 이용하여, 데이터 리드 유닛으로부터의 평가 데이터 세트에 기초하여, 모델을 평가할 수 있는데, 예를 들어, 모델의 리콜율 및 정확율 등을 계산할 수 있다. 이러한 방식에 의하면, 본 개시는 개발자로 하여금 단지 수 라인의 코드만 입력함으로써 모델에 대해 유연한 평가를 실행하도록 할 수 있다. 상기에서는 도 4를 참조하여 자동적으로 데이터 결여 문제를 해결하는 과정을 설명하였다. 지적해두어야 할 것 은, 상기 과정은 단지 모델의 트레이닝에 대한 것이다. 트레이닝 데이터 세트는 통상적으로 대량의 데이터를 포 함하므로, 모델의 트레이닝 과정에서는 트레이닝 데이터에 대한 요구가 그리 높지 않고, 따라서, 빈 자리(421, 422)에 삽입된 트레이닝 데이터도 모델을 트레이닝하는데 사용될 수 있다. 하지만, 모델을 평가할 경 우, 만약 여전히 복수의 계산장비에 의해 병행적으로 트레이닝을 실행하는 방식을 사용하게 되면, 빈 자리(421, 422)에 삽입된 트레이닝 데이터는 평가 결과에 영향을 미칠 수 있다. 따라서, 하기와 같은 방식을 통해 자동적 으로 이와 같은 경우에 대응할 수 있다. 우선, 개발 시스템은 평가 데이터를 병행 처리하는 계산장비의 개수, 예를 들어, 4를 취득할 수 있다. 그 다음, 개발 시스템은 해당 개수에 기초하여 평가 데이터에 대해 도 4에 도시된 바와 같은 그루핑을 실행하 여, 평가 데이터 중의 데이터를 데이터 리드 유닛에 배치하고, 데이터 리드 유닛에서 평가 데이터가 결여된 위치, 즉, 빈 자리(421, 422)를 확정할 수 있다. 그 다음, 개발 시스템은 소정의 데이터로 이러한 위치를 채울 수 있다. 하나의 실예로서, 개발 시스템은 해당 평가 데이터 세트 중의 임의의 데이터로 빈 자리(421, 422)를 채울 수 있다. 예를 들어, 데이터 세트 중의 첫 번째 데이터를 복제하여 빈 자리에 삽입 하고, 데이터 세트 중의 두 번째 데이터를 복제하여 빈 자리에 삽입할 수 있다. 이를 통해, 상기 방식과 유사하게, 삽입 후의 데이터 세트 중의 각 회분은 모두 복수의 계산장비의 병행 처리에 사용될 수 있다. 다시 말하면, 트레이닝된 모델과 설정된 손실 함수 및 도량 함수을 이용하여, 삽입 후의 평가 데이터 세트에 기초하여 모델의 평가 결과를 확정할 수 있다. 확정된 평가 결과에 있어서, 빈 자리(421, 422)에 삽입된 평가 데이터의 평가 결과는 원하지 않는 것이므로, 개 발 시스템은 평가 결과 중 평가 데이터가 결여된 위치에 대응되는 무효 평가 결과의 가중치를 최소화함으 로써, 무효 평가 결과를 제거할 수 있다. 예를 들어, 평가 데이터가 결여된 위치에 대응되는 평가 결과의 가중 치를 0으로 설정하고, 다른 위치의 가중치를 1로 설정함으로써, 해당 결과를 차단할 수 있다. 또한, 개발 시스 템은 자동적으로 평가 결과를 병합하도록 배치될 수도 있다. 예를 들어, 개발 시스템은 트레이닝 유 닛을 호출하여 먼저 모델이 출력한 예측 결과를 병합한 다음, 도량 함수를 통해 평가 결과를 계산할 수 있 다. 이를 통해, 개발자는 별도의 코드를 입력하지 않고서도 평가 결과를 병합할 수 있다. 이러한 방식에 의하면, 단일 계산장비에 의해 처리를 실행하는 방식이든 복수의 계산장비에 의해 병행 처리를 실행하는 방식이 든, 모두 본 개시의 개발 시스템에서 실현할 수 있고, 입력하는 코드 양도 현저하게 감소할 수 있다. 또한, 일부 실시예에 있어서, 상기 트레이닝 및 평가의 기능 외에도, 개발 시스템은 사용자 명령에 기초하여 모델의 출력을 예측하도록 배치될 수 있다. 예를 들어, 개발 시스템은 예측 명령을 수신한 후, 예측 유닛을 호출하여 데이터 리드 유닛을 설정할 수 있다. 상기 데이터 리드 유닛은 트레이닝 데이터와 다른 예측 데이터를 로드하도록 배치된다. 여기서, 예측 데이터는 트레이닝 데이터 및 상기 평가 데이터와 비교하여, 트레이닝 데이터 및 평가 데이터가 모두 마크를 포함하는 데이터라는 점에서 구 별된다. 즉, 트레이닝 데이터 및 상기 평가 데이터가 모두 모델에 입력되는 입력 데이터 및 마킹된 결과를 포함하는데 비해, 예측 데이터는 마킹되지 않은 데이터이다. 즉, 예측 데이터는 모델에 입력되는 입력 데이터만 포함한다. 그 다음, 개발 시스템은 예측 유닛을 통해 트레이닝된 모델을 이용하여 데 이터 리드 유닛의 예측 데이터 세트의 예측 결과를 확정한다. 개발자가 특정 데이터 또는 한 그룹의 데이 터의 예측 결과를 조회하고자 할 경우, 수 라인의 코드만 입력함으로써 간편하게 예측 기능을 실현할 수 있고, 연구 개발 자원을 현저하게 절감할 수 있다. 상기 각 실시예에 의하면, 본 개시의 모델 트레이닝 방안, 모델 평가 방안 및 모델 예측 방안은 모두 입력 코드 를 감소시킬 수 있다. 전통적인 상위 층 API에 기초한 모델 트레이닝의 경우, 수십 라인 또는 그 이상의 코드 양이 필요한데, 이에 비해, 본 개시의 모델 트레이닝 방안, 모델 평가 방안 및 모델 예측 방안에 필요한 코드 양의 총합은 단지 수 라인에 지나지 않으므로, 개발자의 연구 개발 자원 및 시간적인 코스트를 현저하게 절감할 수 있다. 또한, 복수의 계산장비가 병행으로 트레이닝을 실행하는 경우에 대해, 본 개시의 각 실시예의 방안은 모두 별도의 코드를 입력할 필요가 없거나 입력하는 코드를 현저하게 감소할 수 있다. 도 5는 본 개시의 실시예에 따른 모델 트레이닝 장치의블록도를 나타낸다. 도 5에 도시된 바와 같이, 장치 는, 트레이닝 준비 명령을 수신하였다고 확정할 경우, 트레이닝 준비 유닛을 호출하여 적어도 상기 모델을 트레이닝하기 위한 손실 함수 및 최적화 함수를 설정하도록 배치되는 트레이닝 준비 유닛 호출 모듈; 트레 이닝 명령을 수신하였다고 확정할 경우, 트레이닝 유닛을 호출하여 상기 모델을 트레이닝하기 위한 트레이닝 데 이터 세트를 로드하도록 배치되는 제1 데이터 리드 유닛을 설정하도록 배치되는 트레이닝 유닛 호출 모듈; 및 상기 트레이닝 유닛을 통해 상기 손실 함수 및 상기 최적화 함수를 이용하여, 상기 제1 데이터 리드 유닛으 로부터의 상기 트레이닝 데이터 세트에 기초하여, 상기 모델을 트레이닝하도록 배치되는 트레이닝 실행 모듈 을 더 포함할 수 있다. 일부 실시예에 있어서, 트레이닝 준비 유닛 호출 모듈은, 상기 트레이닝 준비 유닛을 호출하여 도량 함수 를 설정하도록 배치될 수 있고, 장치는, 평가 명령을 수신하였다고 확정할 경우, 평가 유닛을 호출하여 상 기 트레이닝 데이터 세트와 다른 평가 데이터 세트를 로드하도록 배치되는 제2 데이터 리드 유닛을 설정하도록 배치되는 평가 유닛 호출 모듈; 및 상기 평가 유닛을 통해 트레이닝된 상기 모델과 상기 손실 함수 및 상기 도 량 함수를 이용하여, 상기 제2 데이터 리드 유닛으로부터의 상기 평가 데이터 세트에 기초하여, 상기 모델을 평 가하도록 배치되는 평가 실행 모듈을 더 포함할 수 있다. 일부 실시예에 있어서, 장치는, 예측 명령을 수신하였다고 확정할 경우, 예측 유닛을 호출하여 상기 트레 이닝 데이터 세트와 다른 예측 데이터 세트를 로드하도록 배치되는 제3 데이터 리드 유닛을 설정하도록 배치되 는 예측 유닛 호출 모듈; 및 상기 예측 유닛을 통해 트레이닝된 상기 모델을 이용하여, 상기 제3 데이터 리드 유닛으로부터의 상기 예측 데이터 세트의 예측 결과를 확정하도록 배치되는 예측 결과 확정 모듈을 더 포함할 수 있다. 일부 실시예에 있어서, 장치는, 상기 트레이닝 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하도 록 배치되는 개수 취득 모듈; 상기 개수에 기초하여, 상기 트레이닝 데이터 세트를 그루핑함으로써, 상기 트레 이닝 데이터 세트 중의 트레이닝 데이터를 상기 제1 데이터 리드 유닛에 배치하도록 배치되는 트레이닝 데이터 배치 모듈; 상기 제1 데이터 리드 유닛에서 트레이닝 데이터가 결여된 위치를 확정하도록 배치되는 위치 확정 모듈; 및 소정의 데이터를 상기 위치에 삽입하도록 배치되는 삽입 모듈을 더 포함할 수 있다. 일부 실시예에 있어서, 장치는, 상기 평가 데이터 세트를 병행 처리하는 계산장비의 개수를 취득하도록 배 치되는 개수 취득 모듈; 상기 개수에 기초하여, 상기 평가 데이터 세트를 그루핑함으로써, 상기 평가 데이터 세 트 중의 평가 데이터를 상기 제2 데이터 리드 유닛에 배치하도록 배치되는 트레이닝 데이터 배치 모듈; 상기 제 2 데이터 리드 유닛에서 평가 데이터가 결여된 위치를 확정하도록 배치되는 위치 확정 모듈; 및 소정의 데이터 를 상기 위치에 삽입함으로써, 삽입 후의 상기 평가 데이터 세트를 형성하도록 배치되는 삽입 모듈을 더 포함할 수 있다. 일부 실시예에 있어서, 장치는, 트레이닝된 상기 모델과 설정된 상기 손실 함수 및 상기 도량 함수를 이용 하여, 삽입 후의 상기 평가 데이터 세트에 기초하여 상기 모델의 평가 결과를 확정하도록 배치되는 예측 결과 확정 모듈; 및 상기 평가 결과 중 평가 데이터가 결여된 상기 위치에 대응되는 무효 평가 결과의 가중치를 최소 화함으로써, 상기 무효 평가 결과를 제거하도록 배치되는 가중치 최소화 모듈을 더 포함할 수 있다. 일부 실시예에 있어서, 트레이닝 유닛은 상기 손실 함수, 상기 최적화 함수 및 상기 제1 데이터 리드 유닛 각각 에 대한 호출 경로를 구비한다. 일부 실시예에 있어서, 평가 유닛은 상기 손실 함수, 상기 도량 함수 및 상기 제2 데이터 리드 유닛 각각에 대 한 호출 경로를 구비한다. 도 6은 본 개시의 복수의 실시예를 실시할 수 있는 계산장비의 블록도를 나타낸다. 장비는 도 1의 개 발 시스템을 실현할 수 있다. 도시된 바와 같이, 장비는 ROM (Read Only Memory)에 저장된 컴 퓨터 프로그램 명령 또는 저장수단으로부터 RAM (Random Access Memory)에 로드된 컴퓨터 프로그램 명령에 따라, 각종 적당한 동작 및 처리를 실행할 수 있는 중앙처리장치(CPU)를 포함한다. RAM에는,장비의 동작에 필요한 각종 프로그램 및 데이터가 저장될 수 있다. CPU, ROM 및 RAM은 버 스라인을 통해 서로 연결된다. 입력/출력(I/O) 인터페이스도 버스라인에 연결된다. 장비중의 복수의 부품은 I/O 인터페이스에 연결되고, 상기 부품에는, 예를 들어 키보드, 마우스 등과 같은 입력수단, 예를 들어 각종 유형의 디스플레이, 스피커 등과 같은 출력수단, 예를 들어 자기 디 스크, 광 디스크 등과 같은 저장수단, 및 예를 들어 네트워크 카드, 모뎀, 무선 통신 송수신기 등과 같은 통신수단이 포함된다. 통신수단에 의해, 장비는 인터넷과 같은 컴퓨터 네트워크 및/또는 각종 전자통신망을 통해 다른 장비와 정보/데이터를 교환할 수 있다. CPU는 앞에서 설명한 각 방법 및 처리를 실행하는데, 예를 들어 과정을 실행한다. 예를 들어, 일부 실시예에 있어서, 과정은 예를 들어 저장수단과 같은 기계 판독 가능 매체에 포함되는 컴퓨터 소프트 웨어 프로그램의 형태로 실현될 수 있다. 일부 실시예에 있어서, 컴퓨터 프로그램의 일부 또는 전부는 ROM 및/또는 통신수단을 거쳐 장비에 로드 및/또는 설치될 수 있다. 컴퓨터 프로그램이 RAM에 로드 되어 CPU에 의해 실행될 경우, 앞에서 설명한 과정의 하나 또는 복수의 단계를 실행할 수 있다. 선택 적으로, 다른 실시예에 있어서, CPU는 다른 임의의 적당한 방식을 통해(예를 들어, 펌웨어를 통해) 과정 을 실행하도록 배치될 수 있다. 상기에서 설명한 기능은 적어도 부분적으로 하나 또는 복수의 하드웨어 로직 부품에 의해 실행될 수 있다. 예를 들어, 사용 가능한 예시적인 하드웨어 로직 부품에는 FPGA(Field Programmable Gate Array), ASIC(Application Specific Integrated circuit), ASSP(Application Specific Standard Product), SOC(System on Chip), CPLD(Complex Programmable Logic Device) 등이 포함될 수 있는데, 이에 한정되지는 않는다. 본 개시의 방법을 실시하기 위한 프로그램 코드는 하나 또는 복수의 프로그래밍 언어의 임의의 조합을 통해 프 로그래밍을 실행할 수 있다. 이러한 프로그램 코드는 범용 컴퓨터, 전용 컴퓨터 또는 다른 프로그래밍 가능한 데이터 처리 장치의 프로세서 또는 컨트롤러에 제공되어, 프로그램 코드가 프로세서 또는 컨트롤러에 의해 실행 됨으로써, 흐름도 및/또는 블록도에서 규정한 기능/동작을 실시하도록 할 수 있다. 프로그램 코드는 전부 머신 에 의해 실행되거나 또는 부분적으로 머신에 의해 실행될 수 있고, 또는 독립적인 소프트웨어 패키지로서 부분 적으로 머신에 의해 실행됨과 동시에 부분적으로 원격 머신에 의해 실행되거나, 또는 전부 원격 머신 또는 서버 에 의해 실행될 수 있다. 본 명세서에 있어서, 기계 판독 가능 매체는 실체적인 매체일 수 있고, 상기 매체에는 명령 실행 시스템, 장치 또는 장비에 의해 사용되거나 또는 명령 실행 시스템, 장치 또는 장비와 결합하여 사용되는 프로그램이 포함되 거나 저장될 수 있다. 기계 판독 가능 매체는 기계 판독 가능 신호 매체 또는 기계 판독 가능 저장 매체일 수 있다. 기계 판독 가능 신호 매체는, 전자적, 자기적, 광학적, 전자기적, 적외선적 반도체 시스템, 장치 또는 장 비, 또는 이들의 임의의 적합한 조합을 포함할 수 있는데, 이에 한정되지는 않는다. 기계 판독 가능 저장 매체 의 보다 구체적인 실예로는, 하나 또는 복수의 라인에 의해 전기적으로 연결되는 휴대용 컴퓨터 디스크, 하드 디스크, RAM, ROM, EPROM(Erasable Programming ROM), 플래시 메모리, 광 파이버, CD-ROM, 광학적 저장 장비, 자기적 저장 장비, 또는 이들의 임의의 적합한 조합일 수 있다. 또한, 비록 특정한 순서에 따라 각 동작을 설명하였으나, 이러한 동작들이 반드시 상기 특정한 순서로 실행되거 나 또는 순차적으로 실행되어야 한다고 이해해서는 안 되고, 희망하는 결과를 얻기 위해 도시된 모든 동작이 전 부 실행되어야 한다고 이해해서도 안 된다. 일정한 환경에서는, 멀티 임무 및 병행 처리가 더 유리할 수도 있다. 또한, 상기의 설명에서는 일부 구체적인 세부사항이 포함되었지만, 본 개시의 범위가 이들에 한정되는 것으로 해석해서는 아니된다. 하나의 실시예에서 설명한 일부 특징은 조합하여 실현될 수도 있다. 반대로, 하나의 실시예에서 설명한 각종 특징은 단독적으로 또는 임의의 적합한 서브 조합의 형태로 복수의 실시예에서 실현할 수 있다. 비록 구조적 특징 및/또는 방법 로직 동작에 특화된 언어로 본 발명을 설명하였으나, 청구의 범위가 상기의 특 정 특징 또는 동작에 한정되는 것으로 이해해서는 안 된다. 반대로, 상기의 특정된 특징 및 동작은 단지 청구의 범위를 실현하기 위한 예시적인 형태에 지나지 않는다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2021-0126622", "section": "도면", "subsection": "도면설명", "item": 1, "content": "첨부 도면 및 하기의 상세한 설명을 참조함으로써, 본 개시의 각 실시예의 상기 및 다른 특징, 장점 및 측면은 보다 명확해질 것이다. 도면에서, 동일하거나 유사한 도면부호는 동일하거나 유사한 요소를 나타낸다. 도 1은 본 개시의 복수의 실시예를 실현할 수 있는 예시적인 환경의 예시도를 나타낸다. 도 2는 본 개시의 실시예에 따른 모델을 트레이닝하기 위한 개발 시스템 체계의 예시도를 나타낸다. 도 3은 본 개시의 실시예에 따른 모델 트레이닝 과정의 흐름도를 나타낸다. 도 4는 본 개시의 실시예에 따른 멀티 계산장비 병행 트레이닝의 데이터 분포의 예시도를 나타낸다. 도 5는 본 개시의 실시예에 따른 모델 트레이닝 장치의 블록도를 나타낸다. 도 6은 본 개시의 복수의 실시예를 실시할 수 있는 계산장비의 블록도를 나타낸다."}
