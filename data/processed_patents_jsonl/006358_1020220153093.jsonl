{"patent_id": "10-2022-0153093", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0071213", "출원번호": "10-2022-0153093", "발명의 명칭": "회로 설계 방법 및 장치", "출원인": "서울대학교산학협력단", "발명자": "전동석"}}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "프로세서를 포함한 회로 설계 장치에 의해 수행되는 회로 설계 방법으로서,프로세서에 의해, 회로 토폴로지 그래프와 연계된 유전자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하는 단계; 및상기 프로세서에 의해, 다중 공정 코너(multiple process corners) 분석 기반 강화 학습 알고리즘을 실행하여상기 후보 회로 구조의 트랜지스터 크기를 최적화하는 단계를 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,상기 유전자는, 상기 회로 토폴로지 그래프의 노드와 연계되고, 회로 구조의 노드 속성을 반영하는 노드 유전자(node gene) 및 상기 회로 토폴로지 그래프의 엣지와 연계되고, 회로 구조의 트랜지스터 속성을 반영하는 연결유전자(connection gene)를 포함하는회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 노드 유전자는 노드 타입, 노드의 상대 전압 및 노드 식별자를 포함하고,상기 연결 유전자는 소스, 드레인, 크기, 게이트 및 연결 식별자를 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 1 항에 있어서,상기 유전자는 상기 회로 토폴로지 그래프의 노드의 상대 전압을 포함하고,상기 방법은,상기 최적화된 후보 회로 구조를 나타내는 회로 토폴로지 그래프의 엣지의 양단 노드의 상대 전압을 기반으로상기 엣지의 상대 전압을 결정하는 단계; 및상기 엣지의 상대 전압에 따라 상기 최적화된 후보 회로 구조에서 상기 엣지와 연계된 트랜지스터를 PMOS 트랜지스터 또는 NMOS 트랜지스터로 변환하는 단계를 더 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,공개특허 10-2024-0071213-3-상기 후보 회로 구조를 생성하는 단계는, 상기 유전 알고리즘을 실행하는 단계를 포함하고,상기 유전 알고리즘을 실행하는 단계는, 현재 인구(population)에 속한 자손(offspring)으로부터 상기 자손이속한 종별로 새로운 자손을 생성하는 단계를 포함하고,상기 새로운 자손을 생성하는 단계는,상기 현재 인구에 속한 자손으로부터 상기 자손이 속한 종별로 각 종에 속한 자손의 적어도 일부를 포함한 부모풀(parent pool)에서 선택된 한 쌍의 자손을 교차(crossover)하여 새로운 자손을 생성하는 단계;상기 새로운 자손에 대한 변이(mutation)을 수행하는 단계; 및상기 변이된 자손을 다음 인구(next generation population)에 추가하는 단계를 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 변이를 수행하는 단계는,트랜지스터 크기 변경, 연결 제거, 추가, 게이트 변경 및 출력 포트 변경을 확률적으로 수행하는 단계를 포함하고,상기 추가는 연결 추가, 노드 추가, 및 PMOS 와 NMOS 추가 중 하나인,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 5 항에 있어서,상기 유전 알고리즘을 실행하는 단계는,상기 현재 인구(population)에 속한 자손(offspring)의 적합도를 기반으로 종별 적합도(fitness of species)를결정하는 단계;상기 종별 적합도를 기반으로 종별 재생산 크기를 결정하는 단계; 및상기 새로운 자손을 생성하는 단계를 상기 종별 재생산 크기만큼 반복하는 단계;상기 다음 인구에 속한 자손의 종을 분류하는 단계;상기 다음 인구를 상기 현재 인구로 하여, 상기 종별 적합도를 결정하는 단계, 상기 종별 재생산 크기를 결정하는 단계, 상기 반복하는 단계 및 상기 분류하는 단계를 최대 세대 수 만큼 반복하는 단계; 및종별로 최고 적합도를 가진 자손을 상기 후보 회로 구조로 추출하는 단계를 더 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 1 항에 있어서,상기 다중 공정 코너는 TT 코너, FF 코너, SS 코너, FS 코너 및 SF 코너를 포함하고,상기 트랜지스터 크기를 최적화하는 단계는,각 공정 코너에서 확인된 상기 후보 회로 구조의 성능 중 최악의 경우 성능(worst case performance)을 기반으로 상기 강화 학습 알고리즘을 실행하는 단계를 포함하는,공개특허 10-2024-0071213-4-회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 트랜지스터 크기를 최적화하는 단계는, 상기 강화 학습 알고리즘을 실행하는 단계를 포함하고, 상기 강화학습 알고리즘을 실행하는 단계는,상기 프로세서에 의해 학습자(Learner)를 실행하여, 강화 학습 네트워크를 기반으로 복수의 에이전트(Agent)를생성하고, 상기 복수의 에이전트로부터 수신한 샘플을 기반으로 상기 강화 학습 네트워크를 업데이트하는 단계;및상기 프로세서에 의해 상기 복수의 에이전트(Agent)를 실행하고, 상기 학습자에게 상기 샘플을 제공하는 단계를포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제 9 항에 있어서,상기 샘플을 제공하는 단계는, 상기 복수의 에이전트의 각 에이전트에 의해,현재 상태를 기반으로 상기 후보 회로 구조의 트랜지스터 크기 변경과 연계된 액션을 실행하는 단계;상기 액션에 의한 다음 상태 및 리워드를 결정하는 단계;상기 현재 상태, 상기 액션, 상기 다음 상태 및 상기 리워드를 기반으로 샘플을 생성하고 생성된 샘플을 상기학습자에게 전송하는 단계;상기 액션을 실행하는 단계, 상기 리워드를 결정하는 단계 및 상기 전송하는 단계를 소정의 반복 횟수만큼 반복하는 단계; 및소정의 인터벌마다 상기 반복 횟수를 증가시키는 단계를 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제 9 항에 있어서,상기 업데이트하는 단계는,상기 수신한 샘플 중에서 소정의 배치(Batch) 크기만큼의 샘플을 선택하는 단계;선택된 상기 샘플을 기반으로 상기 강화 학습 네트워크를 업데이트하는 단계; 및소정의 업데이트 횟수만큼 상기 샘플을 선택하는 단계 및 상기 업데이트하는 단계를 반복하는 단계를 포함하는,회로 설계 방법."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "회로 설계 장치로서,적어도 하나의 명령어를 저장하는 메모리; 및프로세서를 포함하고, 상기 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,공개특허 10-2024-0071213-5-회로 토폴로지 그래프와 연계된 유전자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하고,다중 공정 코너(multiple process corners) 분석 기반 강화 학습 알고리즘을 실행하여 상기 후보 회로 구조의트랜지스터 크기를 최적화하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제 12 항에 있어서,상기 유전자는, 상기 회로 토폴로지 그래프의 노드와 연계되고, 회로 구조의 노드 속성을 반영하는 노드 유전자(node gene) 및 상기 회로 토폴로지 그래프의 엣지와 연계되고, 회로 구조의 트랜지스터 속성을 반영하는 연결유전자(connection gene)을 포함하는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제 12 항에 있어서,상기 유전자는 상기 회로 토폴로지 그래프의 노드의 상대 전압을 포함하고,상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,상기 최적화된 후보 회로 구조를 나타내는 회로 토폴로지 그래프의 엣지의 양단 노드의 상대 전압을 기반으로상기 엣지의 상대 전압을 결정하고,상기 엣지의 상대 전압에 따라 상기 최적화된 후보 회로 구조에서 상기 엣지와 연계된 트랜지스터를 PMOS 트랜지스터 또는 NMOS 트랜지스터로 변환하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제 12 항에 있어서,상기 유전 알고리즘을 실행하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,현재 인구(population)에 속한 자손(offspring)으로부터 상기 자손이 속한 종별로 새로운 자손을 생성하도록 구성되고,상기 새로운 자손을 생성하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,상기 현재 인구에 속한 자손으로부터 상기 자손이 속한 종별로 각 종에 속한 자손의 적어도 일부를 포함한 부모풀(parent pool)에서 선택된 한 쌍의 자손을 교차(crossover)하여 새로운 자손을 생성하고,상기 새로운 자손에 대한 변이(mutation)를 수행하고,상기 변이된 자손을 다음 인구(next generation population)에 추가하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "공개특허 10-2024-0071213-6-제 15 항에 있어서,상기 변이를 수행하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로하여금,트랜지스터 크기 변경, 연결 제거, 추가, 게이트 변경 및 출력 포트 변경을 확률적으로 수행하도록 구성되고,상기 추가는 연결 추가, 노드 추가, 및 PMOS 와 NMOS 추가 중 하나인,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제 15 항에 있어서,상기 유전 알고리즘을 실행하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,상기 현재 인구(population)에 속한 자손(offspring)의 적합도를 기반으로 종별 적합도(fitness of species)를결정하고,상기 종별 적합도를 기반으로 종별 재생산 크기를 결정하고,상기 새로운 자손을 생성하는 단계를 상기 종별 재생산 크기만큼 반복하고,상기 다음 인구에 속한 자손의 종을 분류하고,상기 다음 인구를 상기 현재 인구로 하여, 상기 종별 적합도를 결정하는 단계, 상기 종별 재생산 크기를 결정하는 단계, 상기 반복하는 단계 및 상기 분류하는 단계를 최대 세대 수 만큼 반복하고,종별로 최고 적합도를 가진 자손을 상기 후보 회로 구조로 추출하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제 12 항에 있어서,상기 다중 공정 코너는 TT 코너, FF 코너, SS 코너, FS 코너 및 SF 코너를 포함하고,상기 트랜지스터 크기를 최적화하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,각 공정 코너에서 확인된 상기 후보 회로 구조의 성능 중 최악의 경우 성능(worst case performance)을 기반으로 상기 강화 학습 알고리즘을 실행하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제 12 항에 있어서,상기 강화 학습 알고리즘을 실행하기 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금,학습자(Learner)를 실행하여, 강화 학습 네트워크를 기반으로 복수의 에이전트(Agent)를 생성하고, 상기 복수의에이전트로부터 수신한 샘플을 기반으로 상기 강화 학습 네트워크를 업데이트하고,상기 업데이트를 위하여, 상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금, 상기 수신한 샘플 중에서 소정의 배치(Batch) 크기만큼의 샘플을 선택하는 동작 및 선택된 상기 샘플을 기공개특허 10-2024-0071213-7-반으로 상기 강화 학습 네트워크를 업데이트하는 동작을 소정의 업데이트 횟수만큼 반복하도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제 19 항에 있어서,상기 적어도 하나의 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금, 상기 샘플을 제공하기위하여, 상기 복수의 에이전트의 각 에이전트에 의해,현재 상태를 기반으로 상기 후보 회로 구조의 트랜지스터 크기 변경과 연계된 액션을 실행하는 동작,상기 액션에 의한 다음 상태 및 리워드를 결정하는 동작 및상기 현재 상태, 상기 액션, 상기 다음 상태 및 상기 리워드를 기반으로 샘플을 생성하고 생성된 샘플을 상기학습자에게 전송하는 동작을 소정의 반복 횟수만큼 반복하고,소정의 인터벌마다 상기 반복 횟수를 증가시키도록 구성되는,회로 설계 장치."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "후보 회로 구조 생성 및 트랜지스터 크기 최적화에 의해 자동으로 회로를 설계하는 회로 설계 방법 및 장치를 제 공한다. 이로써 회로 설계 시간 및 비용이 감축되고 회로의 성능이 제고된다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 회로 설계 방법 및 장치에 관한 것으로, 후보 회로 구조 생성 및 트랜지스터 크기 최적화에 의해 자 동으로 회로를 설계하는 방법 및 장치에 관한 것이다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "이하에서 기술되는 내용은 본 발명의 실시예와 관련되는 배경 정보를 제공할 목적으로 기재된 것일 뿐이고, 기 술되는 내용들이 당연하게 종래기술을 구성하는 것은 아니다. 최근 지속적인 공정의 미세화로 인해 IC 설계의 난이도가 기하급수적으로 증가하고 있으며, 공정 변이가 증가하 면서 최적의 성능을 얻기 위해 회로 구조 및 트랜지스터의 크기 최적화에 많은 시간이 소요되고 있다. 현재까지 개발된 회로 설계 자동화 알고리즘은 회로 구조 탐색(topology generation)과 트랜지스터 크기 최적화 (size optimization)의 두 과정 중 하나를 집중적으로 수행한다. 따라서 전 과정을 자동화하지 못하며, 전문가 가 직접 설계한 회로 대비 낮은 성능을 보인다. 기존의 회로 구조 탐색 알고리즘이 탐색한 회로 구조는 CMOS 공정의 특성(예를 들어 voltage가 높은 쪽에 PMOS, 낮은 쪽에 NMOS가 주로 배치되는 특성)을 반영하지 못하여 의미 없는 회로 구조가 다수 탐색되고, 탐색 속도 및 효율이 낮다. 또한, 대부분 기 구축된 library 또는 building block을 사용하기 때문에 특정 종류의 회로에만 적용 가능한 한계가 있다. 종래 트랜지스터 크기 최적화 알고리즘은 최적화 과정에서 공정 변이를 반영하지 않기 때문에, 최적화가 완료된 회로가 공정 변이 하에서 정상적으로 동작한다는 것을 보정할 수 없고, 목표 성능을 충족하기 어려운 문제점이 있다. 한편, 전술한 선행기술은 발명자가 본 발명의 도출을 위해 보유하고 있었거나, 본 발명의 도출 과정에서 습득한 기술 정보로서, 반드시 본 발명의 출원 전에 일반 공중에게 공개된 공지기술이라 할 수는 없다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명의 일 과제는 전술한 문제점을 해결하기 위하여 후보 회로 구조 생성 및 트랜지스터 크기 최적화에 의해 자동으로 회로를 설계하는 회로 설계 방법 및 장치를 제공하는 것이다. 본 발명의 일 과제는 유전 알고리즘 및 강화 학습에 의해 목표 성능을 충족하는 최적 회로 설계를 제공하는 회 로 설계 자동화 프레임워크를 제공하는 것이다. 본 발명의 목적은 이상에서 언급한 과제에 한정되지 않으며, 언급되지 않은 본 발명의 다른 목적 및 장점들은 하기의 설명에 의해서 이해될 수 있고, 본 발명의 실시 예에 의해 보다 분명하게 이해될 것이다. 또한, 본 발명 의 목적 및 장점들은 청구범위에 나타낸 수단 및 그 조합에 의해 실현될 수 있음을 알 수 있을 것이다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "실시예에 일 측면은, 프로세서를 포함한 회로 설계 장치에 의해 수행되는 회로 설계 방법으로서, 프로세서에 의 해, 회로 토폴로지 그래프와 연계된 유전자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하는 단계; 및 상기 프로세서에 의해, 다중 공정 코너(multiple process corners) 분석 기반 강화 학습 알고리즘을 실행하여 상기 후보 회로 구조의 트랜지스터 크기를 최적화하는 단계를 포함하는, 회로 설계 방법을 제공한다. 실시예의 일 측면은, 회로 설계 장치로서, 적어도 하나의 명령어를 저장하는 메모리; 및 프로세서를 포함하고, 상기 명령어는 상기 프로세서에 의해 실행될 때 상기 프로세서로 하여금, 회로 토폴로지 그래프와 연계된 유전 자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하고, 다중 공정 코너(multiple process corners) 분석 기반 강화 학습 알고리즘을 실행하여 상기 후보 회로 구조의 트랜지스터 크기를 최적화하도록 구 성되는, 회로 설계 장치를 제공한다. 전술한 것 외의 다른 측면, 특징, 및 이점이 이하의 도면, 청구범위 및 발명의 상세한 설명으로부터 명확해질 것이다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "실시예에 의하면, 회로 설계 과정을 자동으로 수행할 수 있고, 이를 통해 회로 설계에 필요한 비용과 시간을 큰 폭으로 절감할 수 있다. 또한, 단순히 자동화를 수행할 뿐만 아니라 설계 전문가가 직접 설계한 회로보다도 더 높은 성능을 달성할 수 있다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과는 이상에서 언급된 것들에 한정되지 않으며, 언급되지 아니한 다른 효과들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하에서는 도면을 참조하여 본 발명을 보다 상세하게 설명한다. 본 발명은 여러 가지 상이한 형태로 구현될 수 있으며, 여기에서 설명하는 실시 예들에 한정되지 않는다. 이하 실시 예에서는 본 발명을 명확하게 설명하기 위 해서 설명과 직접적인 관계가 없는 부분을 생략하지만, 본 발명의 사상이 적용된 장치 또는 시스템을 구현함에 있어서, 이와 같이 생략된 구성이 불필요함을 의미하는 것은 아니다. 아울러, 명세서 전체를 통하여 동일 또는 유사한 구성요소에 대해서는 동일한 참조번호를 사용한다. 이하의 설명에서 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소들은 상기 용어들에 의해 한정되어서는 안 되며, 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하는 목 적으로만 사용된다. 또한, 이하의 설명에서 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표 현을 포함한다. 이하의 설명에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요 소, 부분품 또는 이들을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요소, 부분품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 이하 도면을 참고하여 본 발명을 상세히 설명하기로 한다. 도 1은 실시예에 따른 회로 설계 프레임워크를 개략적으로 도시한다. 회로 설계(circuit design)는 회로 구조의 선택/개발(topology generation)(TG)과 각 트랜지스터의 크기 최적 화(size optimization)(SO) 과정으로 구성된다. 최근 인공지능 기술을 활용해 회로 설계를 자동화하려는 연구가 활발히 진행되고 있으나, 이 두 과정 중 하나만을 구현하고 있다. 본 발명에서는 회로 구조 생성(TG) 및 트랜지스터 크기 최적화(SO)를 모두 수행할 수 있는 회로 설계 자동화 프 레임워크를 제안한다. 사용자가 회로의 목표 성능(design constraints)을 제공하면, 실시예에 따른 회로 설계 프레임워크가 자동으로 최적의 회로 구조를 찾고, 이를 바탕으로 크기 최적화까지 수행함으로써 사용자의 개입 없이 회로 설계 과정의 전체를 자동화할 수 있다. 첫번째 단계인 회로 구조 생성 단계(TG)는 대략적으로 목표 성능을 달성할 수 있을 것으로 보이는 회로 구조의 후보군을 탐색한다. 이는 도 3을 참조하여 단계(S1)에 대응한다. 아직 각 트랜지스터의 크기가 최적화되지 않았기 때문에, 트랜지스터의 크기를 weak/medium/strong 등으로 대략 적으로 정할 수 있도록 하고, 유전 알고리즘이 자동으로 트랜지스터를 추가/삭제/변경하면서 정상적으로 동작하 는 회로들을 찾는다. 탐색 과정이 끝나면 확보한 회로 구조 후보군들을 두 번째 단계인 트랜지스터 크기 최적화 단계(SO)로 보낸다. 두 번째 단계에서는 각 후보 구조를 대상으로 강화 학습 알고리즘을 적용하여 트랜지스터의 크기를 최적화하는 과정을 수행한다. 이는 도 3을 참조하여 단계(S2)에 대응한다. 한편, 실시예에 따른 회로 설계 프레임워크는 단계(TG)에서 생성된 회로 구조의 적합도(fitness) 계산 및 단계 (SO)에서 변경된 트랜지스터 크기에 따른 리워드(reward) 계산을 위해 필요에 따라 시뮬레이션(예를 들어 SPICE Simulation) 결과를 이용할 수 있다. 도 2는 실시예에 따른 회로 설계 장치의 블록도이다. 실시예에 따른 회로 설계 장치는 프로세서 및 메모리를 포함할 수 있다. 이와 같은 구성은 예시 적인 것이고, 회로 설계 장치는 도 2에 도시된 구성 중 일부를 포함하거나, 도 2에 도시되지 않았으나 장 치의 작동을 위해 필요한 구성을 추가로 포함할 수 있다. 회로 설계 장치는 적어도 하나의 명령어를 저장하는 메모리 및 프로세서를 포함할 수 있다. 프로세서는 일종의 중앙처리장치로서, 메모리에 저장된 하나 이상의 명령어를 실행하여 실시예에 다 른 회로 설계 방법을 실행할 수 있다. 프로세서는 데이터를 처리할 수 있는 모든 종류의 장치를 포함할 수 있다. 프로세서는 예를 들어 프 로그램 내에 포함된 코드 또는 명령으로 표현된 기능을 수행하기 위해 물리적으로 구조화된 회로를 갖는, 하드 웨어에 내장된 데이터 처리 장치를 의미할 수 있다. 이와 같이 하드웨어에 내장된 데이터 처리 장치의 일 예로서, 마이크로프로세서(microprocessor), 중앙처리장치 (central processing unit: CPU), 프로세서 코어(processor core), 멀티프로세서(multiprocessor), ASIC(application-specific integrated circuit), FPGA(field programmable gate array) 등의 처리 장치를 망 라할 수 있으나, 이에 한정되는 것은 아니다. 프로세서는 적어도 하나의 프로세서를 포함할 수 있다. 프로세서는 복수의 컴퓨팅 장치에 배치된 적 어도 하나의 프로세서를 포함할 수 있다. 예를 들어 복수의 컴퓨팅 장치는 후술할 후보 회로 구조를 생성하기 위한 컴퓨팅 장치 및 트랜지스터 크기 최적 화를 위한 컴퓨팅 장치를 포함할 수 있다. 예를 들어 복수의 컴퓨팅 장치는 트랜지스터 크기 최적화를 위한 학 습자를 실행하는 컴퓨팅 장치 및 에이전트를 실행하는 컴퓨팅 장치를 포함할 수 있다.메모리는 적어도 하나의 명령을 포함하는 프로그램을 저장할 수 있다. 프로세서는 메모리에 저 장된 프로그램, 명령어들에 기반하여 실시예에 따른 회로 구조 설계 과정을 실행할 수 있다. 메모리는 실시예에 따른 회로 구조 설계 과정에서 유전 알고리즘 및 강화 학습 알고리즘의 연산 과정에서 발생하는 중간 데이터 및 연산 결과 등을 더 저장할 수 있다. 메모리는 내장 메모리 및/또는 외장 메모리를 포함할 수 있으며, DRAM, SRAM, 또는 SDRAM 등과 같은 휘발 성 메모리, OTPROM(one time programmable ROM), PROM, EPROM, EEPROM, mask ROM, flash ROM, NAND 플래시 메 모리, 또는 NOR 플래시 메모리 등과 같은 비휘발성 메모리, SSD, CF(compact flash) 카드, SD 카드, Micro-SD 카드, Mini-SD 카드, Xd 카드, 또는 메모리 스틱(memory stick) 등과 같은 플래시 드라이브, 또는 HDD와 같은 저장 장치를 포함할 수 있다. 메모리는 자기 저장 매체(magnetic storage media) 또는 플래시 저장 매체 (flash storage media)를 포함할 수 있으나, 이에 한정되는 것은 아니다. 실시예에 따른 회로 설계 장치는 적어도 하나의 명령어를 저장하는 메모리 및 프로세서를 포함 하고, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 회로 토폴로지 그래프와 연계된 유전자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하고, 다중 공정 코너(multiple process corners) 분석 기반 강화 학습 알고리즘을 실행하여 상기 후보 회로 구조의 트랜지 스터 크기를 최적화하도록 구성될 수 있다. 여기서 유전자는, 회로 토폴로지 그래프의 노드와 연계되고, 회로 구조의 노드 속성을 반영하는 노드 유전자 (node gene) 및 회로 토폴로지 그래프의 엣지와 연계되고, 회로 구조의 트랜지스터 속성을 반영하는 연결 유전 자(connection gene)을 포함할 수 있다. 유전자는 상기 회로 토폴로지 그래프의 노드의 상대 전압을 포함하고, 메모리에 저장된 적어도 하나의 명 령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 최적화된 후보 회로 구조를 나타내는 회로 토 폴로지 그래프의 엣지의 양단 노드의 상대 전압을 기반으로 엣지의 상대 전압을 결정하고, 엣지의 상대 전압에 따라 최적화된 후보 회로 구조에서 엣지와 연계된 트랜지스터를 PMOS 트랜지스터 또는 NMOS 트랜지스터로 변환 하도록 구성될 수 있다. 유전 알고리즘을 실행하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 현재 인구(population)에 속한 자손(offspring)으로부터 자손이 속한 종별로 새로 운 자손을 생성하도록 구성될 수 있다. 예를 들어 새로운 자손을 생성하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의 해 실행될 때 프로세서로 하여금, 현재 인구에 속한 자손으로부터 자손이 속한 종별로 각 종에 속한 자손 의 적어도 일부를 포함한 부모 풀(parent pool)에서 선택된 한 쌍의 자손을 교차(crossover)하여 새로운 자손을 생성하고, 새로운 자손에 대한 변이(mutation)를 수행하고, 변이된 자손을 다음 인구(next generation population)에 추가하도록 구성될 수 있다. 예를 들어 전술한 변이를 수행하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의 해 실행될 때 프로세서로 하여금, 트랜지스터 크기 변경, 연결 제거, 추가, 게이트 변경 및 출력 포트 변 경을 확률적으로 수행하도록 구성될 수 있다. 여기서, 추가는 연결 추가, 노드 추가, 및 PMOS 와 NMOS 추가 중 하나일 수 있다. 유전 알고리즘을 실행하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 현재 인구(population)에 속한 자손(offspring)의 적합도(fitness)를 기반으로 종 별 적합도(fitness of species)를 결정하고, 종별 적합도를 기반으로 종별 재생산 크기를 결정하고, 새로운 자 손을 생성하는 단계를 종별 재생산 크기만큼 반복하고, 다음 인구에 속한 자손의 종을 분류할 수 있다. 이어서, 다음 인구를 현재 인구로 하여, 종별 적합도를 결정하는 단계, 종별 재생산 크기를 결정하는 단계, 새 로운 자손을 생성하는 단계를 종별 재생산 크기만큼 반복하는 단계 및 종을 분류하는 단계를 최대 세대 수 만큼 반복하고, 종별로 최고 적합도를 가진 자손을 후보 회로 구조로 추출하도록 구성될 수 있다. 중복된 설명을 피하기 위하여 후보 회로 구조 생성의 구체적인 내용은 도 3 및 도 5를 참조하여 후술한다. 한편, 다중 공정 코너는 TT 코너, FF 코너, SS 코너, FS 코너 및 SF 코너를 포함하고, 후보 회로 구조의 트랜지 스터 크기를 최적화하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 각 공정 코너에서 확인된 후보 회로 구조의 성능 중 최악의 경우 성능(worst caseperformance)을 기반으로 강화 학습 알고리즘을 실행하도록 구성될 수 있다. 여기서 강화 학습 알고리즘을 실행하기 위하여, 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 학습자(Learner)를 실행하여, 강화 학습 네트워크를 기반으로 복수의 에이전트(Agent)를 생성하고, 복수의 에이전트로부터 수신한 샘플을 기반으로 강화 학습 네트워크를 업데이트하 도록 구성될 수 있다 여기서 강화 학습 네트워크 업데이트를 위하여, 메모리에 하여금, 복수의 에이전트로부터 수신한 샘 플 중에서 소정의 배치(Batch) 크기만큼의 샘플을 선택하는 동작 및 선택된 샘플을 기반으로 강화 학습 네트워 크를 업데이트하는 동작을 소정의 업데이트 횟수만큼 반복하도록 구성될 수 있다. 메모리에 저장된 적어도 하나의 명령어는 프로세서에 의해 실행될 때 프로세서로 하여금, 샘플 을 제공하기 위하여, 복수의 에이전트의 각 에이전트에 의해, 현재 상태를 기반으로 상기 후보 회로 구조의 트 랜지스터 크기 변경과 연계된 액션을 실행하는 동작, 액션에 의한 다음 상태 및 리워드를 결정하는 동작 및 현 재 상태, 액션, 다음 상태 및 리워드를 기반으로 샘플을 생성하고 생성된 샘플을 학습자에게 전송하는 동작을 소정의 반복 횟수만큼 반복하도록 구성될 수 있다. 여기서 상기 반복 횟수는 소정의 인터벌마다 소정의 크기만큼 증가하도록 구성될 수 있다. 중복된 설명을 피하기 위하여 트랜지스터 크기 최적화의 구체적인 내용은 도 3 및 도 6을 참조하여 후술한다. 이하에서 도 3 내지 도 6을 참조하여 실시예에 따른 회로 설계 과정에 대하여 구체적으로 살펴본다. 도 3은 실시예에 따른 회로 설계 방법의 흐름도이다. 실시예에 따른 회로 설계 방법은 프로세서를 포함한 회로 설계 장치에 의해 수행되는 회로 설계 방법 으로서, 프로세서에 의해, 회로 토폴로지 그래프와 연계된 유전자(gene) 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성하는 단계(S1) 및 프로세서에 의해, 다중 공정 코너(multiple process corners) 분석 기 반 강화 학습 알고리즘을 실행하여 후보 회로 구조의 트랜지스터 크기를 최적화하는 단계(S2)를 포함한다. 단계(S1)은 프로세서에 의해 회로 토폴로지 그래프와 연계된 유전자 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성한다. 단계(S1)은 유전 알고리즘을 적용하여 트랜지스터의 추가/삭제/크기 변경, 노드의 연결 변경 등을 자동으로 수 행하면서 적합한 회로 구조를 탐색한다. 이에 대하여는 도 5를 참조하여 구체적으로 살펴본다. 단계(S2)는 프로세서에 의해 다중 공정 코너 분석 기반 강화 학습 알고리즘을 실행하여 후보 회로 구조의 트랜지스터 크기를 최적화한다. 이에 대하여는 도 6을 참조하여 구체적으로 살펴본다. 일 예에서 단계(S1) 및 단계(S2)는 순차적으로 수행될 수 있다. 일 예에서 단계(S1)과 단계(S2)는 병렬적으로 수행될 수 있다. 일 예에서 회로 설계 장치는 적어도 하나의 프로세서를 포함하고, 단계(S1)과 단계 (S2)는 각각 별개의 프로세서에서 실행될 수 있다. 일 예에서 단계(S1)과 단계(S2)는 동일 컴퓨팅 장치 또는 서 로 다른 컴퓨팅 장치에서 실행될 수 있다. 실시예에 따른 회로 설계 방법을 구체적으로 살펴보기에 앞서 도 4의 예시를 참조하여 회로 토폴로지 그래프를 설명한다. 도 4는 실시예에 따른 회로 설계에서 사용하는 회로 토폴로지 그래프의 예시도이다. 단계(S1)은 유전 알고리즘 실행을 위해 각 회로의 구조를 회로 토폴로지 그래프로 표현한다. 회로 토폴로지 그래프의 노드는 실제 회로의 노드에 대응하고, 회로 토폴로지 그래프의 엣지는 실제 회로의 트 랜지스터를 나타낸다. 예를 들어 도 4에서 회로 토폴로지 그래프의 노드(예를 들어 N1)는 실제 회로의 노드에 대응하고, 노드와 연결 된 엣지는 트랜지스터에 대응한다. 한편 본 발명에서 제안한 그래프 표현 방식에서 회로 토폴로지 그래프의 엣지와 그래프의 노드는 상대 전압 (relative voltage)을 가진다. 엣지의 상대 전압은 엣지의 양단 노드의 상대 전압을 평균한 값으로 결정될 수 있다. 예를 들어, VDD의 상대 전압과 N1의 상대 전압을 평균한 값(0.5)을 VDD와 N1 간 엣지의 상대 전압(0.5)으 로 결정할 수 있다. 실시예에 따른 회로 설계 장치는 회로 토폴로지 그래프의 엣지의 상대 전압이 상대적으로 높으면(예: 양수) PMOS 트랜지스터로 변환하고, 엣지의 상대 전압이 상대적으로 낮으면(예: 0 또는 음수) NMOS 트랜지스터 로 변환할 수 있다. 이로써, CMOS 공정에서 설계하는 회로들은 디지털/아날로그 회로를 막론하고 voltage가 높은 쪽에 PMOS, 낮은 쪽에 NMOS를 배치하는 CMOS 회로의 설계 특성을 효과적으로 반영할 수 있다. 예를 들어 VDD와 N1 간 엣지(상대 전압 0.5)는 PMOS 트랜지스터로 변환하고 VSS와 N1 간 엣지(상대 전압 -0.5) 는 NMOS 트랜지스터로 변환할 수 있다. 한편, 도 4에 도시된 예시적인 회로 토폴로지 그래프는 도 5를 참조하여 후술할 단계(S1)의 초기 인구(P0)로 설 정되는 자손(offspring)(즉, 3개의 노드 유전자 및 2개의 연결 유전자를 가지는 회로 토폴로지 그래프)의 회로 구조에 대응한다. 말하자면, 초기 인구(P0)는 VDD, VSS 및 이들과 한 쌍의 PMOS 및 NMOS 로 연결된 하나의 내부 노드를 가지는 자손을 포함하고, 이를 출발점으로 유전 알고리즘을 실행한다. 도 5는 실시예에 따른 후보 회로 구조 생성 과정의 의사코드(pseudocode)이다. 단계(S1)은 사용자가 입력한 회로의 목표 성능 및 제약 조건에 따라 이를 달성할 수 있을 것으로 예상되는 회로 구조 후보군을 탐색한다. 이 때 탐색 속도를 극대화하기 위해서 각 트랜지스터의 크기는 정밀하게 최적화하지 않고, weak/medium/strong 등으로 크게 구분하여 coarse search를 수행한다. 단계(S1)은 프로세서에 의해, 회로 토폴로지 그래프와 연계된 유전자 기반 유전 알고리즘을 실행하여 후보 회로 구조를 생성한다. 후보 회로 구조를 생성하기 위한 유전 알고리즘은 회로 토폴로지 그래프와 연계된 유전자를 기반으로 교차, 변 이 등을 포함한 진화 연산을 수행한다. 여기서 유전자는, 회로 토폴로지 그래프의 노드와 연계되고, 회로 구조의 노드 속성을 반영하는 노드 유전자 (node gene) 및 회로 토폴로지 그래프의 엣지와 연계되고, 회로 구조의 트랜지스터 속성을 반영하는 연결 유전 자(connection gene)을 포함한다. 노드 유전자는 노드 타입(type), 노드의 상대 전압 및 노드 식별자를 포함한다. 노드 타입은 입력 포트, 출력 포트, 서플라이, 그라운드 또는 내부 네트(internal net)와 같은 노드의 유형을 나타내는 속성(property)이다. 노드의 상대 전압은 도 4를 참조하여 전술한 노드의 상대 전압으로, 예를 들어 [-1, 1] 범위를 가진다. 노드 식별자는 노드의 고유한 식별 번호이다. 연결 유전자는 소스(source), 드레인(drain), 크기(size), 게이트(gate) 및 연결 식별자를 포함한다. 소스(source) 및 드레인(drain)은 엣지의 양단 포인트로서 해당 엣지에 대응하는 트랜지스터의 소스(source) 및 드레인(drain)을 의미한다. 크기는 트랜지스터의 상대 세기(relative strength)를 나타내고 게이트는 트랜지스 터의 게이트가 연결된 노드를 나타낸다. 연결 식별자는 고유한 식별 번호를 의미한다. 도 5를 참조하여 단계(S1)의 회로 토폴로지 그래프와 연계된 유전자 기반 유전 알고리즘은 인구 크기(N), 최대 세대수(G), 변이 확률을 입력으로 하여 후보 회로 토폴로지를 출력한다. 단계(S1)은 현재 인구(population)(P)에 속한 자손(offspring)(C)의 적합도(Line 3)를 기반으로 종별 적합도 (fitness of species)를 결정하는 단계(Line 5), 결정된 종별 적합도를 기반으로 종별 재생산 크기(Rk)를 결정 하는 단계(Line 6); 및 새로운 자손을 생성하는 단계를 종별 재생산 크기(Rk)만큼 반복하는 단계(Lines 7-15), 다음 인구에 속한 자손의 종을 분류하는 단계(Line 16)를 포함한다. 여기서 새로운 자손을 생성하는 단계는, 현재 인구(population)에 속한 자손(offspring)으로부터 자손이 속한 종별로 새로운 자손을 생성하는 단계를 포함할 수 있다. 즉, 새로운 자손을 생성하는 단계는, 현재 인구(P)에 속한 자손(C)으로부터 자손(C)이 속한 종별(Sk)로 각 종 (Sk)에 속한 자손(C)의 적어도 일부를 포함한 부모 풀(parent pool)에서 선택된 한 쌍의 자손을 교차 (crossover)하여 새로운 자손을 생성하는 단계(Line 9, Line 11), 생성된 새로운 자손에 대한 변이(mutation) 을 수행하는 단계(Line 12) 및 변이된 자손(Cj)을 다음 인구(next generation population)(Pg+1)에 추가하는단계(Line 13)를 포함한다. 여기서 변이를 수행하는 단계(Line 12)는, 트랜지스터 크기 변경, 연결 제거, 추가, 게이트 변경 및 출력 포트 변경을 확률적으로 수행하는 단계를 포함하고, 상기 추가는 연결 추가, 노드 추가, 및 PMOS 와 NMOS 추가 중 하 나일 수 있다. 또한, 단계(S1)은 다음 인구(Pg+1)를 현재 인구(P)로 하여, 종별 적합도를 결정하는 단계(Line 5), 종별 재생산 크기를 결정하는 단계(Line 6), 반복하는 단계(Lines 7-15) 및 분류하는 단계(Line 16)를 최대 세대 수(G) 만큼 반복하는 단계(Line 2)를 포함한다. 추가적으로 단계(S1)은 도 5의 알고리즘 수행이 완료된 후 최종적으로 종별로 최고 적합도를 가진 자손(Best Candidate in sk)을 후보 회로 구조로 추출하는 단계를 더 포함한다. 도 5를 참조하여 의사코드의 라인별로 다시 살펴본다. 단계(S1)은 다음과 같은 유전 알고리즘을 실행하여 후보 회로 구조를 생성한다. 입력 : Population수(N), 최대 Generation수 (G), 각각의 Mutation 확률 초기화 단계에 N개의 Offspring(C)들을 최초 Population(P0)으로 생성한다(Line 1). 이 때, 모든 Offspring은 1개의 Species에 소속되어 있다. 각각의 Offspring은 Node와 Connection 정보를 가진 Gene을 가지고 있다. 매 세대(Generation)마다 다음의 과정(Line 2 내지 Line 17)을 실행한다. ---- Generation 때 마다 수행하는 단계 시작(Line 2) ---- 1) 각각의 자손(Ci)들을 Simulation하고, Simulation결과를 이용해서 자손의 적합도(Fitness)를 계산한다(Line 3). 예를 들어, 적합도는 다음의 수학식 1에 따라 계산할 수 있다. 수학식 1"}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "여기서 fitx는 자손 Cx의 적합도이고, qi,x는 i번째 제약조건과 연계된 시뮬레이션에 의해 예상된 회로 성능을 나 타내고, f(qi,x)는 각 제약조건에 대한 스코어 함수이고, αi는 i번째 제약조건의 가중치(weight)를 나타낸다. H 와 S는 각각 제 1 제약조건집합 및 제 2 제약조건집합을 나타낸다. 수학식 1의 적합도 함수(fitx)는 회로의 성능 및 신뢰도를 하나의 값으로 표현할 수 있다. 여기서 두 가지 유형 의 설계 제약조건이 고려되는데, 제 1 제약조건집합(H)은 회로가 반드시 만족해야할 설계 제약조건(예를 들어, 레벨 시프터 회로의 경우, rail-to-rail output swing)의 집합이고, 제 2 제약조건집합(S)은 설계 품질 제약조 건(예를 들어, 레벨 시프터 회로의 경우 power consumption, conversion delay)의 집합이다. 수학식 1에서 알 수 있듯이 제 2 제약조건집합(S)의 적합도에 대한 기여는 제 1 제약조건집합(H)와 관련된 스코 어들에 의해 정규화(regulate)된다. 이는 초기 세대에서, 대부분의 자손이 정상 기능하지 않을(fail to function properly) 수 있고, 이 경우 제 1 제약조건집합(H)과 연계된 점수는 매우 낮게 되고 수학식 1에 따라 계산된 적합도가 제 1 제약조건(H)에 의해 크게 지배되도록(largely dictated) 만든다. 따라서, 작동하는 토폴 로지를 찾는 것에 포커싱할 수 있고, 이상적인 후보를 찾을 가능성을 높여준다. 정상 동작하는 회로 토폴로지를 찾게 되면, 제 1 제약조건집합(H)과 연계된 점수는 포화(saturate)되고 적합도에 영향을 주지 않게 된다. 남은 유전 프로세스는 회로 성능(즉, 제 2 제약조건집합(S))을 개선하도록 회로 토폴로지를 더 변경하게 된다. 2) 각각의 종(Species)에 소속된 자손의 적합도를 확인해서 적합도가 발전이 있는지 여부를 확인한다(Line 4). 예를 들어, 특정 Generation 기간 동안 해당 Species에 속했던 Offspring의 max Fitness값이 발전이 없으면, Stagnate 됐다 판단하고, 해당 Species와 소속된 Offspring을 제거한다. 이 때, 제거하는 Species에서 우수한Fitness를 가진 Offspring은 단계(S2)를 위한 후보(Candidate)로 추출한다(Line 4). 3) 다음 Generation 분화를 위해 종의 적합도(Fitness of Species) 점수를 계산한다(Line 5). 예를 들어, 해당 점수는 Species에 소속된 Offspring의 Fitness 점수의 평균값에서 전체 Offspring 중 가장 작은 fitness값을 빼서 구한다. 4) 구해진 종의 적합도 값을 기반으로 각 Species마다 재생산(Reproduce)할 Offspring Size(Rk)를 계산한다 (Line 6). 단 모든 Species는 최소 2개 이상의 다음 Generation을 위한 Offspring을 반드시 생성해야 한다. ---- 각각의 Species 마다 진행하는 단계 시작(Line 7) ---- 5) Species에서 가장 좋은 Fitness를 가진 Offspring을 그대로 next Generation Population에 넣는다(Line 8). 6) Species에서 좋은 Fitness 순으로 N'개의 Offspring을 부모 풀(Parent Pool)에 넣는다(Line 9). 7) 교차(Crossover) 단계(Line 11). 예를 들어, 교차 단계는, Parent Pool에서 2개의 Offspring을 임의로 선택 하고, 더 좋은 Fitness값을 가진 Offspring의 형태를 새로 생성한 Offspring에 반영한다. 이 때, 낮은 Fitness 를 가진 Offspring의 여러 gene들이 각각 일정 확률로 더 좋은 Fitness를 가진 Offspring의 Gene에 추가되거나 값을 변경한다. 8) 변이(Mutation) 단계(Line 12). 교차 단계에서 새로 생성된 Offspring의 Gene을 Mutation을 통해서 변경한 다. 예를 들어, Mutation은 각각의 단계마다 일정 확률로 발생하며, 각각의 단계는 예시적으로 다음과 같다. Size 변경 Remove Connection Add Connection/ Add Node / Add P-channel MOSFET & N-channel MOSFET 중 1개를 택해서 수행 Gate 변경 Output port 변경 9) 만들어진 Offspring을 next Generation Population에 넣는다(Line 13). 10) 각각의 Species마다 5) ~ 9)의 과정을 Reproduce할 Offspring Size 만큼(Line 10, Line14) 반복한다(Line 7, Line15). 예를 들어, Rk개 만큼의 자손(Cj)를 다음 인구(Pg+1)에 추가할 때까지 7) 내지 9)을 반복한다 (Line 10, Line 14). ---- Species마다 하는 것 종료 ---- 11) Speciate (Line 16). 다음 세대 인구(next Generation Population)(Pg+1)의 Offspring들을 기존의 Species 의 대표 Offspring의 Gene과 비교해서 유사한 경우 기존 Species에 넣는다. 유사한 Species가 없는 경우에는 새 로운 Species를 만들고 해당 Offspring을 Species에 넣으며, 대표 Offspring으로 삼는다. 12) 분류가 완료되면 생성된 next Generation Population을 가지고 1)~11)과정을 최대 Generation 만큼 반복한 다 (Line 1, Line 17). 13) 마지막 최대 Generation이 끝나고 도 5의 알고리즘 실행이 끝나면, 모든 Species를 제거하면서 우수한 Fitness를 가진 Offspring을 후보 회로 구조(Candidate)로 추출한다 도 6은 실시예에 따른 트랜지스터 크기 최적화 과정의 의사코드이다. 단계(S1)에서 선택된 후보 회로 구조에 대하여 단계(S2)를 수행한다. 단계(S2)는 강화 학습 알고리즘을 실행하 여 정밀한 트랜지스터 크기 최적화를 수행한다. 이 과정에서 지속적으로 공정 변이를 반영하여 모든 공정 코너(process corner)에서 높은 성능을 보이도록 각 트랜지스터의 크기를 최적화한다. 즉, 지속적으로 회로의 성능을 각 공정 코너(process corner)(예를 들어 TT, SS, FF, SF, FS 등)에서 모두 확인하여 예상되는 최악의 성능(worst-case performance)를 확인하고, 이를 개선 하는 방향으로 최적화를 수행한다. 그 결과, 최종적으로 얻어진 회로는 모든 공정 코너(process corner)에서 정상적으로 동작하면서 높은 성능을 확보할 수 있다. 다중 공정 코너는 TT 코너, FF 코너, SS 코너, FS 코너 및 SF 코너를 포함하고, 단계(S2)는 각 공정 코너에서 확인된 후보 회로 구조의 성능 중 최악의 경우 성능(worst case performance)을 기반으로 강화 학습 알고리즘을 실행하는 단계를 포함한다.실시예에 따른 강화 학습 알고리즘의 상태(State)는 후보 회로 구조의 성능(circuit performance) 및 영역 (area)를 기반으로 한 벡터로 표현된다. 액션(Action)은 트랜지스터 크기 변경으로서 후보 회로 구조의 모든 트랜지스터에 대하여 상대 크기 변경을 나 타내는 벡터에 대응한다. 예를 들어 트랜지스터의 크기는 (width, length, multiplier)를 포함한다. 리워드(Reward)는 리워드 함수에 따라 결정될 수 있으며 예를 들어 리워드 함수는 수학식 1의 적합도 함수와 동 일한 함수를 사용할 수 있다. 여기서 리워드 함수의 스코어(수학식 1의 f(qi,x))는 서로 다른 공정 코너(예를 들어, 변이는 TT 코너, FF 코너, SS 코너, FS 코너 및 SF 코너 등을 포함한 모든 프로세스 코너)에서 획득되고, 이를 기반으로 리워드를 결정할 수 있다. 단계(S2)는 강화 학습 알고리즘을 실행하는 단계를 포함한다. 예를 들어, 강화 학습 알고리즘을 실행하는 단계는, 프로세서에 의해 학습자(Learner)를 실행하여, 강화 학습 네트워크를 기반으로 복수의 에이전트(Agent)를 생성하고, 복수의 에이전트로부터 수신한 샘플을 기반으로 강화 학습 네트워크를 업데이트하는 단계(Learner: Lines 3-9) 및 프로세서에 의해 복수의 에이전트 (Agent)를 실행하고, 학습자에게 샘플을 제공하는 단계(Agent: Lines 1-10)를 포함할 수 있다. 여기서 샘플을 제공하는 단계는, 복수의 에이전트의 각 에이전트에 의해, 현재 상태를 기반으로 후보 회로 구조 의 트랜지스터 크기 변경과 연계된 액션(Action)을 실행하는 단계(Agent: Line 5), 액션에 의한 다음 상태 State (s) 및 리워드 Reward (r)를 결정하는 단계(Agent: Line 6), 현재 상태, 액션, 다음 상태 및 리워드를 기반으로 샘플을 생성하고 생성된 샘플을 학습자에게 전송하는 단계(Agent: Line 7)를 포함할 수 있다. 여기서 학습자는 복수의 에이전트로부터 샘플이 도착하기를 기다린다(Learner: Line 4). 예를 들어 샘플은 메모 리(예를 들어 프로세서가 접근가능한 replay buffer)에 저장되며, 학습자는 샘플을 선택(Learner: Line 6)하고 강화 학습 네트워크 업데이트를 실행토록 할 수 있다. 한편, 단계(S2)는 에피소드 초기 정지(Episode Early stopping) 기법을 구현할 수 있다. 이를 위하여, 샘플을 제공하는 단계는, 액션을 실행하는 단계(Agent: Line 5), 다음 상태 및 리워드를 결정하는 단계(Agent: Line 6) 및 전송하는 단계(Agent: Line 7)를 소정의 반복 횟수(K)만큼 반복하는 단계(Agent: Line 4, 8) 및 소정의 인 터벌(T Episodes)마다 반복 횟수(K)를 증가시키는 단계(Agent: Line 9)를 포함할 수 있다. 에피소드 초기 정지 기법은 강화 학습의 초반부에 아직 알고리즘이 충분히 학습되지 않았기 때문에 매번 생성하 는 액션이 잘못된 방향으로 갈 확률이 높은 점을 해결하기 위하여, 학습 초반부에는 에피소드의 길이를 상대적 으로 짧게 만들어서 잘못된 학습의 결과가 너무 크게 반영되는 것을 방지할 수 있다. 강화 학습 네트워크를 업데이트하는 단계(Learner: Lines 3-9), 수신한 샘플 중에서 소정의 배치(Batch) 크기만 큼의 샘플을 선택하는 단계(Learner: Line 6), 선택된 샘플을 기반으로 강화 학습 네트워크를 업데이트하는 단 계(Learner: Lines 7-8)을 포함한다. 추가적으로, 단계(S2)는 다중 업데이트 기법을 구현할 수 있다. 이를 위하여, 강화 학습 네트워크를 업데이트하는 단계는 소정의 업데이트 횟수(U)만큼 샘플을 선택하는 단계 (Learner; Line 6) 및 업데이트하는 단계(Learner: Lines 7-8)를 반복하는 단계(Learner: Line 5, 9)를 포함할 수 있다. 다중 업데이트 기법은 시뮬레이션의 속도가 매우 느림으로 인해 시뮬레이션 결과로부터 샘플을 얻기까지 발생하 는 지연을 줄이기 위하여, 샘플을 메모리(예를 들어 replay buffer)에 추가할 때마다(Line 4) 미니 배치를 여러 번 샘플링(Learner: Lines 5-9)하여 학습 속도를 높일 수 있다. 도 6을 참조하여 의사코드의 라인별로 다시 살펴본다. 도 5를 참조하여 단계(S1)에서 생성된 후보 회로 구조에 대하여 단계(S2)는 강화 학습 알고리즘을 실행하여 트 랜지스터 크기 최적화를 수행한다. 예를 들어 강화 학습 네트워크는 1개의 Exploration Agent와 1개의 Critic, 그리고 1개의 exploitation Agent, 1개의 Target Critic으로 구성되는 D4PG(Distribute Distributional Deterministic Policy Gradients)를 사용 할 수 있다. ---- Learner의 동작 ---- 1) 회로를 분석해서 network의 input과 output Size를 결정한다(Learner: Line 1). 예를 들어, Agent가 action을 생성할 때 사용하는 Actor network는 state개수가 정해져 있으므로 output size 가 회로의 (Transistor 개수 x3)으로 된다. Critic network는 output은 고정되어 있으므로 input이 (state개수 + Transistor 개수 x3)으로 된다. 이후 exploitation Agent와 target Critic network를 생성한다. 예를 들어 Actor Network는 MLP(Multi-Layer Perceptron)을 사용할 수 있고, 이에 제한되지 않는다. 2) Kaiming Initialize를 통해서 Network의 weight를 초기화 한다(Learner: Line 2). 3) exploitation Agent를 복사해서 Exploration Agent를 만든다. target Critic network를 복사해서 Critic network를 만든다. Exploration Agent값을 복사하여 n개의 Agent를 만든다.(Learner: Line 2) 4) n개의 Agent들 중에서 비동기적으로(asynchronously) Sample을 보내주는 것을 대기한다(Learner: Line 4). 5) 1개의 Sample이 들어오면 Replay memory에 저장한다(Learner: Line 4). 6) Replay Memory에서 Batch size만큼 Sample을 랜덤으로 선택한다(Learner: Line 6). 7) Update를 계산한다.(Backpropagation) (Learner: Line 7) 8) Exploration Agent와 Critic 네트워크를 Update한다(Learner: Line 8). 이후 exploitation Agent와 target Critic network는 Exploration Agent와 Critic network의 weight값을 weighted moving average하여 반영한다. 9) 6)~9)의 과정을 Multi-update 횟수(U)만큼 반복한다(Learner: Line 5, 9). 10) 4)~9)의 과정을 Sample이 Update 횟수(N)만큼 반복될 때까지 반복한다(Learner: Line 3, 10). ---- Learner의 동작 끝 ---- ---- Agent의 동작 ----- 에이전트는 학습자(Learner)에 의해서 만들어진 후 Exploration Agent 값을 n개의 agent에 각각 복사해서 수행 된다. 1) Episode 초기화(Agent: Line 2): 회로를 초기 상태로 만든다. State도 초기 상태로 바꾼다. 2) Exploration Agent의 weight값을 복사해온다(Agent: Line 3). 3) State를 Actor network에 넣어서 Action 값을 구한다(Agent: Line 5). 4) Action 값을 통해서 Transistor size를 변(Change Size)한다(Agent: Line 5). 5) 바뀐 사이즈의 회로를 시뮬레이션한다(Agent: Line 6). 6) 회로 시뮬레이션 결과를 통해서 State와 Reward를 계산한다(Agent: Line 6). State는 예를 들어 다음의 표 1의 수식을 통해서 processing 한다. Reward는 표 1의 수식으로 processing하고 weight를 곱해서 구한다. 표 1"}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "7) {3)에서 Actor network에 넣은 state}와 {action}, {6)에서 구한 State} 그리고 {Reward}. 총 4가지 요소를 sample로 만들어서 Learner로 전달한다(Agent: Line 7). 8) 3)~7)의 과정을 K번 반복한다(Agent: Line 4, 8). 9) K번이 끝나면 1번의 Episode가 끝난다. Episode를 T번 반복할 때 마다 K를 증가시켜준다(Agent: Line 9). 10) Learner가 끝날 때까지 1) ~ 9) 과정을 반복한다(Agent: Line 1, 10). 한편, 도 5를 참조하여 전술한대로 유전자는 회로 토폴로지 그래프의 노드의 상대 전압을 노드 유전자의 일 속 성으로 포함하고, 실시예에 따른 회로 설계 방법은 최적화된 후보 회로 구조를 나타내는 회로 토폴로지 그래프 의 엣지의 양단 노드의 상대 전압을 기반으로 상기 엣지의 상대 전압을 결정하는 단계 및 엣지의 상대 전압에 따라 상기 최적화된 후보 회로 구조에서 상기 엣지와 연계된 트랜지스터를 PMOS 트랜지스터 또는 NMOS 트랜지스 터로 변환하는 단계를 더 포함할 수 있다. 전술한 본 발명의 일 실시예에 따른 방법은 프로그램이 기록된 비-일시적 기록 매체에 컴퓨터가 읽을 수 있는 코드로서 구현하는 것이 가능하다. 컴퓨터가 읽을 수 있는 비-일시적 기록 매체는, 컴퓨터 시스템에 의하여 읽 혀질 수 있는 데이터가 저장되는 모든 종류의 기록 장치를 포함한다. 컴퓨터가 읽을 수 있는 비-일시적 기록 매 체의 예로는, HDD(Hard Disk Drive), SSD(Solid State Disk), SDD(Silicon Disk Drive), ROM, RAM, CD-ROM, 자기 테이프, 플로피 디스크, 광 데이터 저장 장치 등이 있다. 본 발명에서 제안하는 프레임워크의 장점 및 기존 연구 대비 차별성은 아래와 같다. - 실시예에 따른 프레임워크는 회로 구조 탐색(topology generation)-트랜지스터 크기 최적화(size optimization)의 두 단계로 구성되어 있다. 따라서, 첫 단계에서 최적의 성능을 확보할 필요가 없고 단순히 상 대적으로 좋은 성능을 보이는 회로 구조의 후보군만 찾으면 되기에 topology generation 과정을 매우 빠르게 수 행할 수 있다는 장점이 있다. - 실시예에 따른 회로 설계 방법 및 장치는 회로 구조 탐색 과정에서 기존에 학계/산업계에 보고되지 않은 새로 운 회로 구조를 찾을 수 있는 가능성이 존재한다. 실제 실험 과정에서도 알려진 구조보다 더 높은 성능을 보이 는 새로운 회로 구조를 확인하였으며, 이 과정에 매우 빠르게 수행될 수 있기 때문에 차별화된 회로를 설계할 수 있다는 높은 잠재력이 있다. - 실시예에 따른 프레임워크의 회로 구조 탐색 과정은 각 회로를 회로 토폴로지 그래프(graph)로 표현하고, 회 로 토폴로지 그래프에 상대 전압을 도입하였다. 상대 전압이 높으면 PMOS, 낮으면 NMOS로 매핑(mapping)함으로 써 CMOS 공정에 최적화된 회로 구조를 자동으로 찾을 수 있도록 하였다. - 기존의 트랜지스터 크기 최적화 기법은 회로 구조가 고정된 상태에서 크기 최적화만을 수행하기 때문에 회로 성능의 개선폭이 상대적으로 작다. 하지만 실시예에 따른 프레임워크는 좋은 회로 구조를 찾는 과정부터 시작하 기 때문에 성능 개선의 여지가 훨씬 더 크다는 장점을 보인다. - 기존의 트랜지스터 크기 최적화 기법은 공정 변이(process variation)를 반영하지 않고, 따라서 실제로 IC로 제작했을 때 성능이 보장되지 못하는 한계가 있다. 그러나 실시예에 따른 프레임워크에서는 지속적으로 공정 코 너(process corner)를 반영하여 최적화를 수행하기 때문에 모든 process corner에서도 정상적으로 동작하는 것 을 보장한다. - 실시예에 따른 회로 설계 자동화 프레임워크를 디지털 회로에서 많이 쓰이는 level shifter에 적용해 실제로 설계 및 실험 결과 실시예에 따른 프레임워크가 전문가가 직접 설계한 level shifter 회로 대비 매우 뛰어난 성 능을 보인다는 것을 확인하였다. 또한, TSMC 180nm CMOS 공정으로 회로를 실제 IC로 제작하였으며, 측정 결과 학계에 보고된 level shifter 회로 대비 최소 2배에서 최대 5배 이상 개선된 성능을 확인하였다. - 실시예에 따른 회로 설계 자동화 프레임워크는 level shifter 뿐만 아니라 analog amplifier 등 다른 종류의 회로에도 직접적으로 적용 가능하다. 한편, 실시예에 따른 회로 설계 방법 및 장치는 회로 설계의 전 과정을 인공지능 알고리즘을 통해 자동화하였으 며, 적용된 기법이 회로 구조에 구애받지 않기 때문에 매우 다양한 종류의 회로 설계에 직접적으로 적용될 수 있다. 또한, 실시예에 따른 최적화 알고리즘은 강화 학습 알고리즘에 제한되지 않으며, 다른 형태의 인공지능 알고리즘을 적용할 수 있다. 또한, 실제 CMOS 공정에서 회로 설계에 적용하여 검증을 완료하였고, 기존에 보고된 회로 설계 결과 대비 뛰어 난 성능을 확인하였기에 높은 실용성을 보유하고 있다. 수요 기업에서 원하는 회로의 종류에 따른 비용 함수 (cost function)를 기반으로 실시예에 따른 회로 설계 방법 및 장치를 바로 사용 가능하다."}
{"patent_id": "10-2022-0153093", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "이상 설명된 본 발명의 실시예에 대한 설명은 예시를 위한 것이며, 본 발명이 속하는 기술분야의 통상의 지식을 가진 자는 본 발명의 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 쉽게 변형이 가 능하다는 것을 이해할 수 있을 것이다. 그러므로 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며 한 정적이 아닌 것으로 이해해야만 한다. 예를 들어, 단일형으로 설명되어 있는 각 구성 요소는 분산되어 실시될 수도 있으며, 마찬가지로 분산된 것으로 설명되어 있는 구성 요소들도 결합된 형태로 실시될 수 있다. 본 발명의 범위는 상기 상세한 설명보다는 후술하는 청구범위에 의하여 나타내어지며, 청구범위의 의미 및 범위 그리고 그 균등 개념으로부터 도출되는 모든 변경 또는 변형된 형태가 본 발명의 범위에 포함되는 것으로 해석 되어야 한다."}
{"patent_id": "10-2022-0153093", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 실시예에 따른 회로 설계 프레임워크를 개략적으로 도시한다. 도 2는 실시예에 따른 회로 설계 장치의 블록도이다. 도 3은 실시예에 따른 회로 설계 방법의 흐름도이다. 도 4는 실시예에 따른 회로 설계에서 사용하는 회로 토폴로지 그래프의 예시도이다. 도 5는 실시예에 따른 후보 회로 구조 생성 과정의 의사코드(pseudocode)이다. 도 6은 실시예에 따른 트랜지스터 크기 최적화 과정의 의사코드이다."}
