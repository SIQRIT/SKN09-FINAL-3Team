{"patent_id": "10-2021-0165234", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0077962", "출원번호": "10-2021-0165234", "발명의 명칭": "병렬 처리 PIPO 암호화 방법 이를 이용한 암호화 방법", "출원인": "한성대학교 산학협력단", "발명자": "서화정"}}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "각각 8바이트로 구성되는 복수 개 평문을 입력받은 후, 이를 각 평문을 구성하는 동일한 위치의 바이트들로 구성되는 8개 평문 데이터 셋으로 변환하는 제1단계와,SIMD 명령어를 이용하여 S-Layer 과정, R-Layer 과정 및 키 덧셈 과정을 반복적으로 수행하여 상기 8개 평문 데이터 셋을 8개 암호 데이터 셋으로 제공하는 제2단계 및상기 8개의 암호 데이터 셋을 구성하는 각 바이트를 이용하여 각각 8바이트로 이루어지는 복수 개 암호문으로출력하는 제3단계를 포함하는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법."}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상게 제1단계는 각각 8바이트로 구성되는 평문을 16개 입력받은 후, 상기 16개 평문에서 각 평문을 구성하는 동일한 위치의 바이트 16개로 구성되는 8개의 제1평문 데이터 셋으로 변환하는 제1-1단계 및상기 제1평문 데이터 셋을 구성하는 각 바이트 단위 데이터를 2 바이트 단위로 변환하여 제2평문 데이터 셋으로변환하는 제1-2단계을 포함하며,- 상기 제1-2단계에서 각 바이트 단위 데이터를 2바이트 단위로 변환할 때 상기 2바이트 중에서 상위 8비트는'0'으로 저장하고, 하위 비트는 상기 바이트 단위 데이터로 구성함 -- 제1평문 데이터 셋은 128 비트로 구성되며, 제2평문 데이터 셋은 256 비트로 구성됨 -상기 제2단계는 SIMD 명령어를 이용하여 S-Layer 과정, R-Layer 과정 및 키 덧셈 과정을 반복적으로 수행하여상기 8개의 제2평문 데이터 셋을 8개의 제2암호 데이터 셋으로 제공하며,상기 제3단계는상기 8개 제2암호 데이터 셋을 구성하는 각 2 바이트 단위 데이터를 1 바이트 단위 데이터로 변환하여 제1암호데이터 셋으로 변환하는 제3-1단계 및- 상기 제3-1단계에서 각 2 바이트 단위 데이터 중에서 상위 8비트는 버리고 하위 8비트를 상기 1바이트 단위데이터로 저장함 -상기 제1암호 데이터 셋으로부터 각각 동일한 위치의 바이트로 구성되는 16개 암호문으로 출력하는 제3-2단계를 포함하는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법."}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서, 상기 SIMD 명령어는 AVX2 명령어이며,상기 제2단계에서 S-Layer 과정은 ANDNOT 연산을 포함하는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법."}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "공개특허 10-2023-0077962-3-제3항에 있어서,상기 제2단계에서 R-Layer 과정은 16 비트 단위로 수행되는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법."}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항 내지 제4항 중에서 선택된 어느 한 항의 병렬 처리 PIPO 블록 암호화 방법을 사용하는 형태 보존 암호화방법."}
{"patent_id": "10-2021-0165234", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항 내지 제4항 중에서 선택된 어느 한 항의 병렬 처리 PIPO 블록 암호화 방법을 사용하는 카운터 모드 암호화 방법."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 발명은 병렬 처리 PIPO 암호화 방법 이를 이용한 암호화 방법에 관한 것이다. 본 발명에서는 복수 개 평문을 모아서 각 평문을 구성하는 동일한 바이트 단위로 데이터 셋을 형성하고, 상기 데 이터 셋을 병렬로 PIPO 블록 암호화 처리하는 병렬 처리 PIPO 암호화 방법이 제공된다. 종래 PIPO 암호화 방식은 16개의 평문을 암호화하기 위해서 16번의 동일한 암호화 과정을 반복 수행하여야 하였 다. 이에 비해 본 발명에 따른 병렬 처리 PIPO 암호화 방식 및 장치에 의하면 한 번의 암호화 과정을 통해서 16 개의 평문을 암호화 할 수 있게 되었다."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 병렬 처리 PIPO 암호화 방법 이를 이용한 암호화 방법에 관한 것으로서, 보다 구체적으로는 복수 개 평문을 모은 후 모여진 복수 개 평문에서 동일한 순번에 위치하는 바이트끼리 한꺼번에 병렬 처리하여 암호화 또는 복호화를 수행하는 병렬 처리 PIPO 암호화 방법 이를 이용한 암호화 방법에 관한 것이다."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "스마트 카드 및 IC(integrated circuit) 카드는 사용자에 관한 보안 정보를 포함하고, 사용자의 보안 정보가 유 출되는 것을 방지하기 위하여 그 보안 정보를 암호문으로 만들어서 송수신할 필요가 있다. 송신측에서는 평문을 암호화하여 암호문을 만들어 송신하고, 수신측에서는 수신된 암호문을 복호화하여 평문을 획득한다. 블록 암호 기법에는 DES(Data Encryption Standard), AES(Advanced Encryption Standard), SEED, ARIA, SM4 등이 있다. 특히, 근래 사물 인터넷(IoT; Internet of Things) 환경의 대부분의 기기들은 제한된 리소스(메모리, 속도, 하 드웨어 GE 등)를 가지기 때문에 암호학적 안전성을 요구하는 시스템에서 사용될 경우 리소스 부하가 적은 경량 블록 암호를 사용하기를 선호한다. 이러한 요구에 따라 국내 발명자가 경량 암호화의 하나인 PIPO 암호화 방식이 개발하였다. 개발된 PIPO 방식은 적은 량의 연산 처리만으로도 암호화 및 복호화가 가능하므로 IoT 기기와 같은 적은 리소스를 갖는 기기에도 사 용할 수 있는 이점이 있다. 그런데 PIPO는 입력되는 평문을 순차적으로 암호화하는 방식으로 진행되며, 하나의 평문을 암호화할 때도 해당 평문을 구성하는 바이트별로 순차적으로 암호화하는 방식을 사용하므로 암호화 속도 가 늦은 문제점을 지니고 있었다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국등록특허 제0-2169369호 (2020년10월19일 등록)"}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명은 상기와 같은 문제점을 해결하고자 하는 것으로서, 여러 개 평문을 모은 후 복수 개 평문을 구성하는 동일한 순번의 바이트를 한꺼번에 병렬로 암호화처리하는 병렬 처리 PIPO 암호화 방법 이를 이용한 암호화 방법을 제공하는 것을 목적으로 한다."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 발명의 상기 목적은 각각 8바이트로 구성되는 복수 개 평문을 입력받은 후, 이를 각 평문을 구성하는 동일한 위치의 바이트들로 구성되는 8개 평문 데이터 셋으로 변환하는 제1단계와, SIMD 명령어를 이용하여 S-Layer 과 정, R-Layer 과정 및 키 덧셈 과정을 반복적으로 수행하여 상기 8개 평문 데이터 셋을 8개 암호 데이터 셋으로 제공하는 제2단계 및 8개의 암호 데이터 셋을 구성하는 각 바이트를 이용하여 각각 8바이트로 이루어지는 복수 개 암호문으로 출력하는 제3단계를 포함하는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법에 의해 달성 가능 하다. 본 발명의 상기 목적은 각각 8바이트로 구성되는 평문을 16개 입력받은 후, 상기 16개 평문에서 각 평문을 구성 하는 동일한 위치의 바이트 16개로 구성되는 8개의 제1평문 데이터 셋으로 변환하는 제1-1단계와, 제1평문 데이 터 셋을 구성하는 각 바이트 단위 데이터를 2 바이트 단위로 변환하여 제2평문 데이터 셋으로 변환하는 제1-2단 계와, - 상기 제1-2단계에서 각 바이트 단위 데이터를 2바이트 단위로 변환할 때 상기 2바이트 중에서 상위 8비 트는 '0'으로 저장하고, 하위 비트는 상기 바이트 단위 데이터로 구성함 -, - 제1평문 데이터 셋은 128 비트로 구성되며, 제2평문 데이터 셋은 256 비트로 구성됨 -, SIMD 명령어를 이용하여 S-Layer 과정, R-Layer 과정 및 키 덧셈 과정을 반복적으로 수행하여 상기 8개의 제2평문 데이터 셋을 8개의 제2암호 데이터 셋으로 제공하는 제2단계와, 8개 제2암호 데이터 셋을 구성하는 각 2 바이트 단위 데이터를 1 바이트 단위 데이터로 변환하여 제 1암호 데이터 셋으로 변환하는 제3-1단계 및 - 상기 제3-1단계에서 각 2 바이트 단위 데이터 중에서 상위 8비트 는 버리고 하위 8비트를 상기 1바이트 단위 데이터로 저장함 -, 제1암호 데이터 셋으로부터 각각 동일한 위치의 바이트로 구성되는 16개 암호문으로 출력하는 제3-2단계를 포함하는 것을 특징으로 하는 병렬 처리 PIPO 암호화 방법에 의해서 달성 가능하다. 바람직하게는 SIMD 명령어는 AVX2 명령어이며, 제2단계에서 S-Layer 과정은 ANDNOT 연산을 포함하고, R-Layer 과정은 16 비트 단위로 수행되는 것이 바람직하다."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "종래 PIPO 암호화 방식은 16개의 평문을 암호화하기 위해서 16번의 동일한 암호화 과정을 반복 수행하여야 하였 다. 이에 비해 본 발명에 따른 병렬 처리 PIPO 암호화 방식 및 장치에 의하면 한 번의 암호화 과정을 통해서 16 개의 평문을 암호화 할 수 있게 되었다. 본 발명에 따른 PIPO 블록암호는 효율적이고 빠른 암호화가 가능하므로 대규모 데이터베이스 암호화의 속도 및 관리 측면에서 이점이 있다. 또한, 형태 보존 암호화에 응용함으로써 특정 부분 암호화를 통해 전체 이미지에서 필요한 부분만 암호화가 가능하므로 개인 식별 정보에 대한 부분만을 암호화할 수 있다. 본 발명에 의해 암호화 효율성을 증진시킬 수 있으며, 부분 암호화의 경우는 개인 정보 보호 외에도 다양한 분야로의 확장이 가능한 이 점을 제공할 수 있게 되었다."}
{"patent_id": "10-2021-0165234", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명에서 사용하는 용어는 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 본 발명을 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 명세서에서, \"포함하다\" 또는 \"가지다\" 등의 용어는 명세서 상에 기재된 특징, 숫자, 단계, 동작, 구성요소, 부품 또는 이들 을 조합한 것이 존재함을 지정하려는 것이지, 하나 또는 그 이상의 다른 특징들이나 숫자, 단계, 동작, 구성요 소, 부품 또는 이들을 조합한 것들의 존재 또는 부가 가능성을 미리 배제하지 않는 것으로 이해되어야 한다. 또한, 본 명세서에서, \"~ 상에 또는 ~ 상부에\" 라 함은 대상 부분의 위 또는 아래에 위치함을 의미하는 것이며, 반드시 중력 방향을 기준으로 상 측에 위치하는 것을 의미하는 것은 아니다. 또한, 영역, 판 등의 부분이 다른 부분 \"상에 또는 상부에\" 있다고 할 때, 이는 다른 부분 \"바로 상에 또는 상부에\" 접촉하여 있거나 간격을 두고 있는 경우뿐 아니라 그 중간에 또 다른 부분이 있는 경우도 포함한다. 또한, 본 명세서에서, 일 구성요소가 다른 구성요소와 \"연결된다\" 거나 \"접속된다\" 등으로 언급된 때에는, 상기 일 구성요소가 상기 다른 구성요소와 직접 연결되거나 또는 직접 접속될 수도 있지만, 특별히 반대되는 기재가 존재하지 않는 이상, 중간에 또 다른 구성요소를 매개하여 연결되거나 또는 접속될 수도 있다고 이해되어야 할 것이다. 또한, 본 명세서에서, 제1, 제2 등의 용어는 다양한 구성요소들을 설명하는데 사용될 수 있지만, 상기 구성요소 들은 상기 용어들에 의해 한정되어서는 안 된다. 상기 용어들은 하나의 구성요소를 다른 구성요소로부터 구별하 는 목적으로만 사용된다. 이하, 통상의 기술자가 본 발명을 용이하게 실시할 수 있도록 하기 위하여, 본 발명의 바람직한 실시 예들에 관 하여 첨부된 도면을 참조하여 상세히 설명하기로 한다. 도 1은 본 발명에 따른 데이터 암호화 방법 및/또는 데이터 복호화 방법을 수행하는 PIPO 암호화 및 복호화 장 치의 예시적 구성을 개략적으로 도시한 개념도이다. 도 1을 참조하면, 본 발명의 일 실시 예에 따른 PIPO 암호화 및 복호화 장치는, 입출력부 및 프로세 서를 포함하며, 상기 입출력부를 통하여 외부와 직간접적으로 데이터 신호를 송수신할 수 있다. 구체적으로, PIPO 암호화 및 복호화 장치는, 컴퓨터 하드웨어(예컨대, 컴퓨터 프로세서, 메모리, 스토리지, 입력 장치 및 출력 장치, 기타 양자 컴퓨터의 큐비트 정보 단위를 사용하는 연산 장치의 구성요소들 을 포함할 수 있는 장치; 라우터, 스위치 등과 같은 전자 통신 장치; 네트워크 부착 스토리지(NAS; network- attached storage) 및 스토리지 영역 네트워크(SAN; storage area network)와 같은 전자 정보 스토리지 시스템)와 컴퓨터 소프트웨어(즉, 연산 장치로 하여금 특정의 방식으로 기능하게 하는 명령어들)의 조합을 이용 하여 원하는 시스템 성능을 달성하는 것일 수 있다. 이와 같은 PIPO 암호화 및 복호화 장치의 입출력부는 요청과 응답을 송수신할 수 있는 바, 이러한 요청은 암호화의 대상인 평문 데이터 신호의 입력만으로, 응답은 그 평문 데이터 신호로부터 얻은 암호문의 출력만으로 구성될 수 있고(암호화의 경우), 반대로 요청이 복호화의 대상인 암호문 데이터 신호의 입력만으로, 응답은 그 암호문 데이터 신호로부터 얻은 평문의 출력만으로 구성될 수도 있다(복호화의 경우). 물론 상기 요청과 상기 응답이 오류 정정(error correction)과 모드 변환(암호화 모드, 복호화 모드 등) 등의 적절한 제어를 위한 다른 신호를 포함할 수 있음은 물론이다. 또한, 일 예시로서 그러한 요청과 응답이 동일한 TCP(Transmission Control Protocol) 세션(session)에 의하여 이루어질 수도 있고, UDP(User Datagram Protocol) 데이터그램(datagram)으로 송수신될 수도 있을 것이지만 이에 한정되지 않는다. 또한, PIPO 암호화 및 복호화 장치의 프로세서는 MPU(Micro Processing Unit), CPU(central processing unit), GPU(graphics processing unit), NPU(neural processing unit) 또는 TPU(tensor processing unit), 캐 시 메모리(cache memory), 데이터 버스(data bus) 등의 하드웨어 구성을 포함할 수 있다. 또한, 범용 컴퓨팅 장 치인 경우 운영체제, 특정 목적을 수행하는 애플리케이션의 소프트웨어 구성을 더 포함할 수도 있다.이하에서는 통상의 경량 PIPO 암호화 방식과 상이하게 본 발명에서는 AVX2 명령어를 이용하여 병렬 연산이 가능 한 PIPO 암호화 방법 및 이를 이용한 장치에 대해 설명하기로 한다. AVX2는 병렬 연산이 가능하도록 하는 SIMD 명령어이며, 이를 활용하면 대규모의 데이터를 한 번에 여러 개 연산 할 수 있기 때문에 빠른 속도로 연산할 수 있다. 도 2는 본 발명에 따른 병렬 PIPO 암호화 장치의 구성 블록도이다. 도 2 및 아래 제시되는 도면을 이용하여 본 발명에서 수행되는 병렬 PIPO 암호화 처리 방법 및 장치에 대해 설명하기로 한다. 1. 전처리 과정 도 3은 본 발명에 따른 평문 전처리부의 처리과정을 설명하는 설명도이다. 도 3(a)에 도시된 바와 같이 하나의 평문은 8바이트로 구성된다. 도 3(a)에서 plain[0][0] ~ plain[0][7]은 총 8 바이트로 구성된 첫번째 평문을 표 시하며, plain[15][0] ~ plain[15][7]은 총 8 바이트로 구성된 16번째 평문을 표시한다. 기존 PIPO 암호화는 입력되는 평문을 순차적으로 암호화한다. 예를 들어 첫번째 평문에 대한 암호화를 수행한 후 이를 마치면 두번 째 평문에 대한 암호화를 수행한다. 이에 비해 본 발명에서는 16개의 평문을 입력받은 후, 이를 동일한 위치의 바이트별로 임시 메모리(temp)에 저장하고, 모여진 16개의 평문을 구성하는 동일한 위치의 바이트별로 병렬로 암호화를 처리한다. 제1전처리부는 입출력부를 통해입력되는 복수 개 평문을 임시 저장한 후, 복수 개 평문에서 동일한 위치를 구성하는 바이트 별로 구성된 temp 데이터로 저장하는 기능을 수행한다. 도 3(b)는 16개 평문을 임시 메모리에 저장한 상태를 도시하며, 도 3(c)는 16개 평문의 첫번째 바이트만으로 구 성된 데이터를 temp[0]에 저장하고, 16개 평문의 두번째 바이트만으로 구성된 데이터를 temp[1], ...., 16개 평 문의 여덟번째 바이트만으로 구성된 데이터를 temp[7]에 저장한 제1전처리부의 출력 형태를 도시한 것이다. 각 temp[] 레지스터에 저장된 데이터는 128 비트로 구성된다. 도 3(c)에 도시된 바와 같이 제1전처리부는 8 바이트로 구성되는 16개 평문을 각 평문을 구성하는 동일한 위치 (순번)의 바이트를 하나의 데이터 셋으로 저장하여 8개의 데이터 셋(각 데이터 셋은 128비트로 구성됨)을 생성 하는 단계를 의미한다. 도 3(c)에서 temp[0] 부터 temp[7]을 각각 제1평문 데이터 셋이라 부를 경우, 제1평문 데이터 셋은 각각 8바이 트로 구성되는 평문을 16개 입력받은 후, 16개 평문에서 각 평문을 구성하는 동일한 위치의 바이트 16개를 모아 서 각각 128비트로 구성되는 8개의 데이터 셋을 의미한다. 다음으로 제2전처리부는 temp[]에 저장된 128 비트 데이터 셋을 256 비트 데이터로 변환하는 처리부이다. 도 4는 제2전처리부의 처리 과정을 설명하는 설명도이다. 도 4에 도시된 바와 같이 제2전처리부는 temp[] 레지스터에 저장된 각 평문을 구성하는 첫번째 바이트를 8비트에서 16비트로 확장하여 T256[] 레지스터로 저장 한다. 확장 방식은 16비트 중에서 상위 비트는 '0'으로 할당하고 하위 비트에 각 평문을 구성하는 첫번째 바이 트를 할당하는 방식을 취한다. T256[]를 제2평문 데이터 셋이라 명명하면, 제2평문 데이터 셋은 제1평문 데이터 셋을 구성하는 각 바이트 단위 데이터를 2 바이트 단위로 확장하여 형성됨을 알 수 있다. 2. 키 덧셈 과정 통상 PIPO는 128 비트(8비트 * 16개 평문)의 라운드 키를 생성하여 사용한다. PIPO 블록 암호화는 64 비트 평문 과 128 비트 키(key) 또는 256 비트 키(key)를 이용하여 64 비트 암호문을 출력하게 된다. 128 비트 키를 사용 할 경우에는 13 라운드(r = 13)를 반복하게 되며, 256 비트 키를 사용할 경우에는 17 라운드(r = 17)를 반복하 게 된다. 이에 비해 본 발명에서는 제2전처리 과정과 유사하게 상위 8비트를 '0'으로 할당하고 하위 8비트를 ' 해당 바이트의 라운드키'로 할당하여 256 비트로 라운드키를 생성하여 256비트 레지스터에 입력한다. 이후, 각 각의 T256[] 레지스터와 256 라운드키를 활용하여 AVX2의 XOR 명령어를 통해 연산하여 키 덧셈 과정을 수행한다. 3. S-layer 과정 암호화 방식은 'S-layer, R-layer 및 라운드 키 덧셈 과정'을 r번 반복적으로 수행한다. S-layer 연산은 룩업 테이블을 이용하지 않은 상태에서 바이트 레벨 연산(bytes-level operaton)으로 효율적으로 수행될 수 있다. 즉, 11 개의 비선형(nonlinear) 비트 단위 연산 및 23개의 선형(linear) 비트 연산(bitwiase operation)으로 수행될 수 있다. 도 5는 비트 연산으로 수행되는 S-layer의 C언어 코딩 예이다. 도 5에서 붉은 색 박스로 표시한 바와 같이 S-layer 과정 중에는 평문을 구성하는 3번째 바이트에 대해 NOT 연 산을 수행하는 단계가 수행되어야 한다. 그런데 AVX2 명령어는 NOT 연산을 지원하지 않는다. 이를 해결하고자 본 발명에서는 AVX2에서 지원하는 ANDNOT 연산을 활용하였다. 예를 들어, AVX2에서 지원하는 '(NOT A) AND b'로 구성되는 ANDNOT 연산을 활용하면서 b 레지스터는 모두 1로 채워 사용함으로써 결과 값에 영향을 주지 않는 마 스크로 활용하였다. 여기서, A 레지스터는 T256[2]와 라운드키의 AVX2의 XOR 명령어를 통해 연산한 결과로 출력되는 값이 저장된 레 지스터이다. 4. R-layer 과정 R 레이어는 회전 연산을 수행한다. 그런데 AVX2는 16비트에 대한 회전 연산은 제공하지만 8비트 회전 연산을 지 원하지 않는다. 이를 해결하기 위해서 제2전처리 과정 및 키 덧셈 과정에서는 128 비트로 구성되는 레지스터들 을 각각 256 비트의 레지스터로 변환하는 과정을 수행한 것이다. 따라서 R-layer 과정에서는 도 5에 도시된 바 와 같이 16비트 단위의 shift(시프트) 연산, AND 연산 및 OR 연산을 수행하여 회전 연산을 수행할 수 있게 되었 다. 5. 후처리 과정 전처리 과정의 반대 과정이 수행되어야 한다. 구체적으로는 제2전처리부와 반대 동작을 수행하는 제2후처리 과 정과 제1전처리부와 반대 동작을 수행하는 제1후처리 과정이 수행되어야 한다. r번의 'S-Layer 과정\" 및 \"R-layer 과정'을 완료하여 출력되는 데이터 셋을 제2암호 데이터 셋이라 부르면, 제2 전처리부는 8개 제2암호 데이터 셋을 구성하는 각 2 바이트 단위 데이터를 1 바이트 단위 데이터로 변환하여 8 개 제1암호 데이터 셋으로 변환 처리하는 블록이다. 이때, 각 2 바이트 단위 데이터 중에서 상위 8비트는 버리 고 하위 8비트를 1바이트 단위 데이터로 저장하게 된다. 제1후처리 과정은 8개 제1암호 데이터 셋으로부터 각각 동일한 위치의 바이트를 모아서 16개 암호문(64 비트)으 로 출력을 처리한다. 6. 응용 분야 형태 보존 암호 종래 형태 보존 암호는 라운드 함수를 사용하고 있으며, 라운드 함수는 의사 랜덤 함수와 암호화 함수로 구성되 며 AES-128 블록 암호를 사용하였다. 암호화 함수를 AES-128 블록 암호로 암호화하는 대신에 본 발명에 따른 병 렬 처리 PIPO를 적용할 수 있다. 종래에는 16개의 평문을 암호화하기 위해 16번의 암호화 과정을 필요로 하였으 나, 본 발명에 따른 병렬 처리 PIPO 블록 암호를 이용하면 한 번의 암호화로 수행할 수 있는 이점이 있다. 도 6 은 본 발명에 따른 병렬 처리 PIPO를 적용한 형태 보존 암호의 블록도이다. 본 발명에 따른 병렬 처리 PIPO를 적용한 형태 보존 암호를 사용하면 대용량의 데이터를 암호화하고 데이터베이 스에 저장할 수 있게 된다. 이를 통해 데이터베이스 관리와 빠른 암호호가 가능하다 도 7은 본 발명에 따른 병렬 처리 PIPO를 이용한 형태 보존 암호를 적용하여 객체 탐지 모델을 구현한 블록도이 다. 인공지능 모델 중 하나인 객체 탐지 모델을 통해 객체를 검출할 때 발생할 수 있는 개인 정보 노출을 방지 하기 위해 병렬 구현된 PIPO를 적용한 형태 보존 암호를 적용하는 과정이다. 딥 러닝에 의해 탐지된 객체에 해 당하는 부분의 좌표를 추출하여 개인 정보 식별 가능한 부분(암호화가 필요한 부분)만을 포맷 변경 없이 암호화 할 수 있으므로 효율적으로 암호화를 수행할 수 있다. 카운터모드 PIPO 도 8은 본 발명에 따른 병렬 처리 PIPO 블록 암호를 카운터 모드로 구현한 블록 구성도이다. 카운터 모드 블록 암호화에 의해 이미지 암호화, 비디오 암호화 등에 응용할 수 있으며 다양한 용도로 활용할 수 있는 확장성을 제공할 수 있게 되었다. 상기에서 본 발명의 바람직한 실시예가 특정 용어들을 사용하여 설명 및 도시되었지만 그러한 용어는 오로지 본 발명을 명확히 설명하기 위한 것일 뿐이며, 본 발명의 실시예 및 기술된 용어는 다음의 청구범위의 기술적 사상 및 범위로부터 이탈되지 않고서 여러가지 변경 및 변화가 가해질 수 있는 것은 자명한 일이다. 이와 같이 변형 된 실시예들은 본 발명의 사상 및 범위로부터 개별적으로 이해되어져서는 안되며, 본 발명의 청구범위 안에 속 한다고 해야 할 것이다."}
{"patent_id": "10-2021-0165234", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명에 따른 데이터 암호화 방법 및/또는 데이터 복호화 방법을 수행하는 PIPO 암호화 및 복호화 장 치의 예시적 구성을 개략적으로 도시한 개념도. 도 2는 본 발명에 따른 병렬 PIPO 암호화 장치의 구성 블록도. 도 3은 본 발명에 따른 평문 전처리부의 처리과정을 설명하는 설명도. 도 4는 제2전처리부의 처리 과정을 설명하는 설명도. 도 5는 비트 연산으로 수행되는 S-layer의 C언어 코딩 예. 도 6은 본 발명에 따른 병렬 처리 PIPO를 적용한 형태 보존 암호의 블록도. 도 7은 본 발명에 따른 병렬 처리 PIPO를 이용한 형태 보존 암호를 적용하여 객체 탐지 모델을 구현한 블록도.도 8은 본 발명에 따른 병렬 처리 PIPO 블록 암호를 카운터 모드로 구현한 블록 구성도."}
