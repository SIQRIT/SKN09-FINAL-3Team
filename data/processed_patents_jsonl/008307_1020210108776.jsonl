{"patent_id": "10-2021-0108776", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0026765", "출원번호": "10-2021-0108776", "발명의 명칭": "해석가능 모델을 활용한 IoT 네트워크 공격 탐지 및 차단 시스템", "출원인": "고려대학교 산학협력단", "발명자": "김휘강"}}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "IoT 네트워크에 대한 공격 차단 방법으로서, 상기 방법은,IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성하는 단계;상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격에 대한 주요 특징 정보를 생성하는 단계; 및공격 차단부에서 상기 주요 특징 정보에 기초하여 공격 차단 정보를 생성하는 단계;를 포함하고, 그리고상기 공격 판별부는 소프트맥스(softmax) 레이어를 포함하는 변형된 오토인코더(autoencoder) 구조의 인공 신경망 모델인, IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제 1 항에 있어서,전처리부에 학습용 패킷 데이터를 입력하여 사전 결정된 분석 시간의 특징 패킷 데이터를 생성하는 단계; 학습 데이터 생성부에서 상기 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데이터를 생성하는 단계; 및상기 1차 학습 데이터 및 상기 2차 학습 데이터를 이용하여 상기 공격 판별부를 학습시키는 단계;를 더 포함하고, 그리고상기 특징 패킷 데이터는 상기 학습용 패킷 데이터로부터 상기 분석 시간에 대해 추출된 하나 이상의 특징(feature)들을 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제 2 항에 있어서,상기 학습 데이터 생성부에서 상기 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데이터를 생성하는 단계는,상기 특징 패킷 데이터에 기초하여 정상 또는 공격 중 하나와 관련된 1차 학습 데이터를 생성하는 단계; 및상기 특징 패킷 데이터에 적어도 하나의 공격 유형을 라벨링 하여 2차 학습 데이터를 생성하는 단계;를 더 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제 2 항에 있어서,공개특허 10-2023-0026765-3-상기 1차 학습 데이터 및 상기 2차 학습 데이터를 이용하여 상기 공격 판별부를 학습시키는 단계는,상기 1차 학습 데이터를 오토인코더로 구성된 1차 판별 모델에 입력하여 1차 학습을 수행하는 단계; 상기 1차 학습이 완료된 상기 1차 판별 모델에 상기 소프트맥스 레이어를 부가하여 상기 공격 판별부를 구성하는 단계; 및상기 공격의 발생 여부 및 유형을 포함하는 상기 공격 상황 정보를 생성하기 위해 상기 공격 판별부에 상기 2차학습 데이터를 입력하여 2차 학습을 수행하는 단계;를 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제 1 항에 있어서,상기 IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성하는 단계는,상기 공격 판별부에서 상기 패킷 데이터에 대해 손실값을 하나 이상 산출하고 상기 패킷 데이터의 평균 손실값을 계산하는 단계; 상기 평균 손실값에 기초하여 공격 여부 또는 공격 유형 중 적어도 하나를 판별하는 단계; 및판별된 상기 공격 여부 또는 상기 공격 유형 중 적어도 하나를 포함하는 상기 공격 상황 정보를 생성하는 단계; 를 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제 5 항에 있어서,상기 평균 손실값에 기초하여 공격 여부 또는 공격 유형 중 적어도 하나를 판별하는 단계는,상기 평균 손실값을 사전 결정된 손실 임계값과 비교하여 상기 공격 여부를 판별하는 단계; 또는상기 평균 손실값을 상기 공격 판별부가 학습한 공격 유형들 각각의 기준 평균 손실값과 비교하여 상기 공격 유형을 판별하는 단계; 중 적어도 하나를 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제 1 항에 있어서,상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격과 관련이 높은 주요 특징 정보를 생성하는 단계는,상기 공격 분석부에서 상기 공격 상황 정보의 공격 여부에 기초하여 상기 공격이 발생한 것으로 식별한 경우,상기 공격 상황 정보의 공격 유형을 식별하는 단계;상기 공격 분석부에서 식별한 상기 공격 유형의 특징들에 대한 섀플리 값(Shapley Value)을 하나 이상 산출하는단계; 및상기 공격 분석부에서 상기 섀플리 값에 기초하여 상기 특징들 중 적어도 하나를 주요 특징으로 결정하고, 상기공개특허 10-2023-0026765-4-주요 특징을 하나 이상 포함하는 상기 주요 특징 정보를 생성하는 단계;를 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제 7 항에 있어서,상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격과 관련이 높은 주요 특징 정보를 생성하는 단계는,상기 공격 분석부에서 상기 특징들 각각의 상기 섀플리 값을 나타내는 시각화 분석 정보를 생성하는 단계; 를 더 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제 1 항에 있어서,상기 공격 차단 정보는,상기 주요 특징 정보에 포함된 주요 특징에 대한 조건 정보; 및 상기 조건 정보에 기초하여 네트워크 관련 제어 동작을 수행하기 위한 행동 정보; 를 포함하는,IoT 네트워크에 대한 공격 차단 방법."}
{"patent_id": "10-2021-0108776", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "IoT 네트워크에 대한 공격을 차단하기 위한 컴퓨팅 장치로서, 상기 컴퓨팅 장치는, 프로세서; 메모리; 및 네트워크부;를 포함하고, 그리고상기 프로세서는,IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성하고,상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격에 대한 주요 특징 정보를 생성하고,공격 차단부에서 상기 주요 특징 정보에 기초하여 공격 차단 정보를 생성하고, 그리고상기 공격 판별부는 소프트맥스 레이어를 포함하는 변형된 오토인코더 구조의 인공 신경망 모델인, IoT 네트워크에 대한 공격을 차단하기 위한 컴퓨팅 장치."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "본 개시의 일 실시예에 따라, IoT 네트워크에 대한 공격 차단 방법이 개시된다. 상기 방법은, IoT 네트워크에 대 한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성하는 단계; 상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격에 대한 주요 특징 정보를 생성하는 단계; 및 공격 차단부에서 상기 주요 특징 정보에 기초하여 공격 차단 정보를 생성하는 단계를 포함하고, 그리고 상기 공 격 판별부는 소프트맥스(softmax) 레이어를 포함하는 변형된 오토인코더(autoencoder) 구조의 인공 신경망 모델 일 수 있다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명은 IoT 네트워크 공격 탐지 및 공격을 차단하기 위한 방법 및 시스템에 관한 것으로, 구체적으로 인공지 능 모델을 이용하여 IoT 네트워크 공격 탐지 및 공격을 차단하기 위한 방법 및 시스템에 관한 것이다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "IoT란 Internet of Things의 줄임 말로 사물과 환경, 사물과 사물 등을 인터넷으로 연결하고 상호 통신을 통해 사람에게 편의성을 제공하는 디바이스(device)를 의미한다. 현재의 IoT 네트워크는 인터넷이 연결된 기존 네트 워크 또는 새로운 환경에 수많은 IoT가 연결되어 다양한 디바이스 구성들을 포함하는 네트워크 환경을 구성하고 있다. 이와 같이 구성된 IoT에 대한 보안 표준은 아직 구체적으로 제정되어 있지 않고 IoT 마다 다양한 연결 프 로토콜을 사용하고 있기 때문에 다양한 보안 위험 및 위협이 존재할 수 있다. 특히, IoT 네트워크가 생활에 밀 접화 되어있고, 자동화된 서비스를 제공하고 있기 때문에, IoT 네트워크에 대한 외부의 공격을 감지하면 사용자 에게 바로 알릴 필요성이 있다. 기존의 IoT 네트워크에 대한 공격탐지 기술은 인공지능 기술을 활용하여 사용자가 직접 개입하지 않고 컴퓨팅"}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 2, "content": "파워와 수학 알고리즘을 통해 수행되고 있다. 하지만 기존의 IoT 기술분야에서 네트워크에 대한 공격 탐지 방법 은 사용자에게 탐지 결과만 제공하고 탐지에 대한 근거 및 구체적인 분석 내용을 제공하지 않아 탐지 방법에 대"}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 3, "content": "한 신뢰성을 확인할 수 없다는 문제점이 존재한다. 또한, 기존의 IoT 기술분야에서는 네트워크 공격을 탐지한 이후에 자동으로 공격에 대응하는 시스템 및 방법을 제공하지 않는다. 따라서, IoT 네트워크에 대한 공격을 탐지한 이후에 탐지된 공격에 대해 분석하여 그 분석 결과를 사용자에게 제공하고, 또한 탐지된 공격을 자동으로 대응하는 방법 및 시스템에 대한 연구가 필요하다. 선행기술문헌 특허문헌 (특허문헌 0001) 대한민국 등록특허 제10-2135024호"}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 개시는 전술한 배경기술에 대응하여 안출된 것으로, IoT 네트워크 공격 탐지 및 공격을 차단하기 위한 방법 및 컴퓨팅 장치를 제공하기 위한 것이다. 본 개시의 기술적 과제들은 이상에서 언급한 기술적 과제로 제한되지 않으며, 언급되지 않은 또 다른 기술적 과 제들은 아래의 기재로부터 당업자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "전술한 바와 같은 과제를 실현하기 위한 본 개시의 일 실시예에 따라 IoT 네트워크에 대한 공격 차단 방법이 개 시된다. 상기 방법은, IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대 한 공격의 공격 상황 정보를 생성하는 단계; 상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격에 대 한 주요 특징 정보를 생성하는 단계; 및 공격 차단부에서 상기 주요 특징 정보에 기초하여 공격 차단 정보를 생 성하는 단계를 포함하고, 그리고 상기 공격 판별부는 소프트맥스(softmax) 레이어를 포함하는 변형된 오토인코 더(autoencoder) 구조의 인공 신경망 모델일 수 있다. 대안적으로, 전처리부에 학습용 패킷 데이터를 입력하여 사전 결정된 분석 시간의 특징 패킷 데이터를 생성하는 단계; 학습 데이터 생성부에서 상기 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데이터를 생성 하는 단계; 및 상기 1차 학습 데이터 및 상기 2차 학습 데이터를 이용하여 상기 공격 판별부를 학습시키는 단계 를 더 포함하고, 그리고 상기 특징 패킷 데이터는 상기 학습용 패킷 데이터로부터 상기 분석 시간에 대해 추출 된 하나 이상의 특징(feature)들을 포함할 수 있다. 대안적으로, 상기 학습 데이터 생성부에서 상기 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데 이터를 생성하는 단계는, 상기 특징 패킷 데이터에 기초하여 정상 또는 공격 중 하나와 관련된 1차 학습 데이터 를 생성하는 단계; 및 상기 특징 패킷 데이터에 적어도 하나의 공격 유형을 라벨링 하여 2차 학습 데이터를 생 성하는 단계를 더 포함할 수 있다. 대안적으로, 상기 1차 학습 데이터 및 상기 2차 학습 데이터를 이용하여 상기 공격 판별부를 학습시키는 단계는, 상기 1차 학습 데이터를 오토인코더로 구성된 1차 판별 모델에 입력하여 1차 학습을 수행하는 단계; 상 기 1차 학습이 완료된 상기 1차 판별 모델에 상기 소프트맥스 레이어를 부가하여 상기 공격 판별부를 구성하는 단계; 및 상기 공격의 발생 여부 및 유형을 포함하는 상기 공격 상황 정보를 생성하기 위해 상기 공격 판별부에 상기 2차 학습 데이터를 입력하여 2차 학습을 수행하는 단계를 포함할 수 있다. 대안적으로, 상기 IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공 격의 공격 상황 정보를 생성하는 단계는, 상기 공격 판별부에서 상기 패킷 데이터에 대해 손실값을 하나 이상 산출하고 상기 패킷 데이터의 평균 손실값을 계산하는 단계; 상기 평균 손실값에 기초하여 공격 여부 또는 공격 유형 중 적어도 하나를 판별하는 단계; 및 판별된 상기 공격 여부 또는 상기 공격 유형 중 적어도 하나를 포함 하는 상기 공격 상황 정보를 생성하는 단계를 포함할 수 있다. 대안적으로, 상기 평균 손실값에 기초하여 공격 여부 또는 공격 유형 중 적어도 하나를 판별하는 단계는, 상기 평균 손실값을 사전 결정된 손실 임계값과 비교하여 상기 공격 여부를 판별하는 단계; 또는 상기 평균 손실값을 상기 공격 판별부가 학습한 공격 유형들 각각의 기준 평균 손실값과 비교하여 상기 공격 유형을 판별하는 단계; 중 적어도 하나를 포함할 수 있다. 대안적으로, 상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격과 관련이 높은 주요 특징 정보를 생성 하는 단계는, 상기 공격 분석부에서 상기 공격 상황 정보의 공격 여부에 기초하여 상기 공격이 발생한 것으로 식별한 경우, 상기 공격 상황 정보의 공격 유형을 식별하는 단계; 상기 공격 분석부에서 식별한 상기 공격 유형 의 특징들에 대한 섀플리 값(Shapley Value)을 하나 이상 산출하는 단계; 및 상기 공격 분석부에서 상기 섀플리 값에 기초하여 상기 특징들 중 적어도 하나를 주요 특징으로 결정하고, 상기 주요 특징을 하나 이상 포함하는 상기 주요 특징 정보를 생성하는 단계를 포함할 수 있다. 대안적으로, 상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격과 관련이 높은 주요 특징 정보를 생성 하는 단계는, 상기 공격 분석부에서 상기 특징들 각각의 상기 섀플리 값을 나타내는 시각화 분석 정보를 생성하 는 단계를 더 포함할 수 있다. 대안적으로, 상기 공격 차단 정보는, 상기 주요 특징 정보에 포함된 주요 특징에 대한 조건 정보; 및 상기 조건 정보에 기초하여 네트워크 관련 제어 동작을 수행하기 위한 행동 정보를 포함할 수 있다. 본 발명의 다른 일 실시예에 따라 IoT 네트워크에 대한 공격을 차단하기 위한 컴퓨팅 장치가 제공될 수 있다. 상기 컴퓨팅 장치는 프로세서; 메모리; 및 네트워크부를 포함하고, 상기 프로세서는, IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성하고, 상기 공격 상황 정보에 기초하여 공격 분석부에서 상기 공격에 대한 주요 특징 정보를 생성하고, 공격 차단부에서 상 기 주요 특징 정보에 기초하여 공격 차단 정보를 생성하고, 그리고 상기 공격 판별부는 소프트맥스(softmax) 레 이어를 포함하는 변형된 오토인코더(autoencoder) 구조의 인공 신경망 모델일 수 있다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 개시의 일 실시예에 따르면, IoT 네트워크에 대한 공격 탐지하고, 탐지된 공격을 차단하기 위한 방법을 제공 할 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과로 제한되지 않으며, 언급하지 않은 또 다른 효과들은"}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "아래의 기재로부터 본 개시가 속하는 기술분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "다양한 실시예들이 이제 도면을 참조하여 설명된다. 본 명세서에서, 다양한 설명들이 본 개시의 이해를 제공하 기 위해서 제시된다. 그러나, 이러한 실시예들은 이러한 구체적인 설명 없이도 실행될 수 있음이 명백하다. 본 명세서에서 사용되는 용어 \"컴포넌트\", \"모듈\", \"시스템\" 등은 컴퓨터-관련 엔티티, 하드웨어, 펌웨어, 소프 트웨어, 소프트웨어 및 하드웨어의 조합, 또는 소프트웨어의 실행을 지칭한다. 예를 들어, 컴포넌트는 프로세서 상에서 실행되는 처리과정(procedure), 프로세서, 객체, 실행 스레드, 프로그램, 및/또는 컴퓨터일 수 있지만, 이들로 제한되는 것은 아니다. 예를 들어, 컴퓨팅 장치에서 실행되는 애플리케이션 및 컴퓨팅 장치 모두 컴포넌 트일 수 있다. 하나 이상의 컴포넌트는 프로세서 및/또는 실행 스레드 내에 상주할 수 있다. 일 컴포넌트는 하 나의 컴퓨터 내에 로컬화 될 수 있다. 일 컴포넌트는 2개 이상의 컴퓨터들 사이에 분배될 수 있다. 또한, 이러 한 컴포넌트들은 그 내부에 저장된 다양한 데이터 구조들을 갖는 다양한 컴퓨터 판독가능한 매체로부터 실행할 수 있다. 컴포넌트들은 예를 들어 하나 이상의 데이터 패킷들을 갖는 신호(예를 들면, 로컬 시스템, 분산 시스 템에서 다른 컴포넌트와 상호작용하는 하나의 컴포넌트로부터의 데이터 및/또는 신호를 통해 다른 시스템과 인 터넷과 같은 네트워크를 통해 전송되는 데이터)에 따라 로컬 및/또는 원격 처리들을 통해 통신할 수 있다. 더불어, 용어 \"또는\"은 배타적 \"또는\"이 아니라 내포적 \"또는\"을 의미하는 것으로 의도된다. 즉, 달리 특정되지 않거나 문맥상 명확하지 않은 경우에, \"X는 A 또는 B를 이용한다\"는 자연적인 내포적 치환 중 하나를 의미하는 것으로 의도된다. 즉, X가 A를 이용하거나; X가 B를 이용하거나; 또는 X가 A 및 B 모두를 이용하는 경우, \"X는 A 또는 B를 이용한다\"가 이들 경우들 어느 것으로도 적용될 수 있다. 또한, 본 명세서에 사용된 \"및/또는\"이라 는 용어는 열거된 관련 아이템들 중 하나 이상의 아이템의 가능한 모든 조합을 지칭하고 포함하는 것으로 이해 되어야 한다. 또한, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 해당 특징 및/또는 구성요소가 존재함을 의미하는 것으로 이해되어야 한다. 다만, \"포함한다\" 및/또는 \"포함하는\"이라는 용어는, 하나 이상의 다른 특징, 구성요소 및/또 는 이들의 그룹의 존재 또는 추가를 배제하지 않는 것으로 이해되어야 한다. 또한, 달리 특정되지 않거나 단수 형태를 지시하는 것으로 문맥상 명확하지 않은 경우에, 본 명세서와 청구범위에서 단수는 일반적으로 \"하나 또 는 그 이상\"을 의미하는 것으로 해석되어야 한다. 그리고, \"A 또는 B 중 적어도 하나\"이라는 용어는, \"A만을 포함하는 경우\", \"B 만을 포함하는 경우\", \"A와 B의 구성으로 조합된 경우\"를 의미하는 것으로 해석되어야 한다. 당업자들은 추가적으로 여기서 개시된 실시예들과 관련되어 설명된 다양한 예시적 논리적 블록들, 구성들, 모듈 들, 회로들, 수단들, 로직들, 및 알고리즘 단계들이 전자 하드웨어, 컴퓨터 소프트웨어, 또는 양쪽 모두의 조합 들로 구현될 수 있음을 인식해야 한다. 하드웨어 및 소프트웨어의 상호교환성을 명백하게 예시하기 위해, 다양 한 예시적 컴포넌트들, 블록들, 구성들, 수단들, 로직들, 모듈들, 회로들, 및 단계들은 그들의 기능성 측면에서 일반적으로 위에서 설명되었다. 그러한 기능성이 하드웨어로 또는 소프트웨어로서 구현되는지 여부는 전반적인 시스템에 부과된 특정 어플리케이션(application) 및 설계 제한들에 달려 있다. 숙련된 기술자들은 각각의 특정 어플리케이션들을 위해 다양한 방법들로 설명된 기능성을 구현할 수 있다. 다만, 그러한 구현의 결정들이 본 개 시내용의 영역을 벗어나게 하는 것으로 해석되어서는 안 된다. 제시된 실시예들에 대한 설명은 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 발명을 이용하거나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이다. 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실시예들 에 적용될 수 있다. 그리하여, 본 발명은 여기에 제시된 실시예 들로 한정되는 것이 아니다. 본 발명은 여기에 제시된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다. 본 개시에서 네트워크 함수와 인공 신경망 및 뉴럴 네트워크(neural network)는 상호교환가능하게 사용될 수 있 다. 본 개시의 IoT 네트워크는 복수의 디바이스들에 대한 네트워크일 수 있으며, 여기서 디바이스들은 가전 제품, 단말기 또는 웨어러블 디바이스 등 원격으로 제어 가능한 장치들을 포함할 수 있다. 예를 들어, IoT 네트워크에 서 사용되는 디바이스들은 스마트 스피커, 냉장고, TV, 스마트 폰 또는 스마트 워치 등일 수 있으나, 본 개시의 디바이스들은 전술한 예시들에 제한되지는 않는다. 본 개시의 패킷 데이터는 패킷(packet) 단위로 네트워크를 통해 전달되는 데이터 블록 또는 데이터 묶음일 수 있으며, 패킷 데이터는 일반적인 네트워크 패킷일 수도 있다. 또한, 본 개시의 패킷 데이터는 네트워크 환경과 관련하여 실시간으로 생성되는 데이터들을 포함할 수 있다. 본 개시의 패킷 데이터는 정상(normal) 네트워크와 관련된 데이터 또는 공격을 받은 네트워크와 관련된 데이터 중 적어도 하나를 포함할 수도 있다. 본 개시에서 특징(feature)은 패킷 데이터에 포함된 데이터들에서 추출될 수 있는 네트워크와 관련된 데이터의 일부 정보일 수 있다. 구체적으로, 특징은 전처리부에 패킷 데이터 또는 학습용 패킷 데이터를 입력하여 추출될 수 있으며, 본 개시의 특징은 기본 특징 및 통계적 특징을 포함할 수 있다. 본 개시의 기본 특징은 패킷 데이터의 네트워크와 관련된 기본 정보일 수도 있다. 예를 들어, 본 개시의 기본 특징은 패킷 데이터의 헤더에 있는 송신자 IP 주소(Source IP), 수신자 IP 주소(Destination IP), 송신자 포트 번호(Source Port), 수신자 포트 번호(Destination Port), 프로토콜 종류, 서비스 타입(Type of service, TOS), TCP 제어 플래그 또는 Length 등일 수 있으나, 본 개시의 기본 특징은 전술한 예시들로 제한되지 않는다. 또한, 본 개시의 통계적 특징은 사전 결정된 분석 시간동안 수집된 패킷 데이터들의 네트워크 관련 정보들 중 통계치를 계산할 수 있는 정보일 수 있다. 구체적으로, 전처리부에서 패킷 데이터들 각각의 타임 스탬프 (timestamp)에 기초하여 사전 결정된 분석 시간동안 수집된 패킷 데이터를 하나 이상 식별할 수 있다. 또한, 전 처리부에서 식별된 하나 이상의 패킷 데이터 각각에 포함된 데이터들에 대해서 통계치를 계산할 수 있는 통계적 특징을 하나 이상 식별할 수 있다. 또한, 전처리부에서 식별된 통계적 특징에 대한 통계치를 계산하고, 계산된 통계치들 각각과 관련된 통계적 특징을 매칭시킬 수 있다. 여기서 통계치를 계산하는 방법은 예를 들어 평균 또 는 총합 등과 같은 계산 방법일 수 있으나, 본 개시의 통계치는 전술한 계산 방법들에 제한되어 산출되지 않는 다. 통계적 특징은 사용자에 의해 사전 결정되거나, 전처리부에서 패킷 데이터에 포함된 데이터들의 정보들 중 통계치를 계산할 수 있는 정보를 식별하여 통계적 특징으로 결정할 수도 있다. 전술한 본 개시의 통계적 특징에 대해 예를 들면, 사전 결정된 분석 시간 동안 동일한 source IP에서 보낸 패킷 데이터의 개수, 사전 결정된 분석 시간 동안 동일한 destination IP에서 수신한 패킷 데이터의 개수, 사전 결정 된 분석 시간 동안 동일한 source IP 및 source port에서 보낸 패킷 데이터의 개수 또는 사전 결정된 분석 시간 동안 동일한 destination IP 및 destination port에서 수신한 패킷 데이터의 개수 등일 수도 있다. 전술한 통계 적 특징들은 예시들일 뿐이며, 전술한 예시들로 인해 본 개시의 통계적 특징이 제한되어 해석되지 않아야 할 것 이다 전술한 바와 같이, 본 개시의 전처리부에서 수행되는 전처리는 데이터로부터 특징을 추출하는 데이터 전처리일 수 있다. 또한, 본 개시의 전처리부에서 수행되는 전처리 방법은 전처리부에 입력된 데이터를 사전 결정된 시간 만큼 추출하는 단계 또는 입력된 데이터에서 전술한 특징인 기본 특징 또는 통계적 특징 중 적어도 하나를 추출하는 단계 중 적어도 하나의 단계를 포함할 수 있다. 본 개시에서 수행되는 전처리부의 전처리는 이후 도 1 내 지 도 3를 참조하여 자세히 설명한다. 본 개시의 학습용 패킷 데이터는 공격 판별부를 학습시키는데 사용되는 학습 데이터를 생성하기 위한 패킷 데이 터일 수 있다. 구체적으로, 학습용 패킷 데이터에 기초하여 본 개시의 공격 판별부의 학습을 위한 1차 학습 데 이터 및 2차 학습 데이터가 생성될 수 있다. 보다 구체적으로, 학습용 패킷 데이터는 전처리부에서 전처리 되어 특징 패킷 데이터로 생성되고, 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데이터가 생성될 수 있다. 본 개시의 1차 학습 데이터는 공격 판별부의 오토인코더 부분이 네트워크 공격 또는 정상 상태 중 하나와 관련 된 패킷 데이터에 대해 1차 학습하기 위한 학습 데이터일 수 있다. 또한, 본 개시의 2차 학습 데이터는 오토인 코더 및 소프트맥스 레이어를 포함하는 공격 판별부가 네트워크 공격 여부 및 공격 유형에 대해 2차 학습하기 위한 학습 데이터일 수 있다. 1차 학습 및 2차 학습에 대해서는 이후 도 4a 내지 도 4b를 참조하여 자세히 설명 한다. 본 개시의 특징 패킷 데이터는 학습용 패킷 데이터들이 전처리부에서 전처리 되어 추출된 특징을 하나 이상 포 함하는 데이터일 수 있다. 구체적으로, 전처리부를 통해 사전 결정된 분석 시간의 학습용 패킷 데이터로부터 특 징들이 추출되며, 추출된 특징들을 포함하는 특징 패킷 데이터가 생성될 수 있다. 학습용 패킷 데이터는 네트워 크 공격 또는 정상 상태 중 하나와 관련된 데이터일 수 있으며, 이에 따라 특징 패킷 데이터도 공격 또는 정상 상태 중 하나와 관련된 데이터일 수 있다. 또한, 본 개시에서는 특징 패킷 데이터에 기초하여 정상 또는 공격 중 하나와 관련된 1차 학습용 데이터를 생성 할 수 있다. 또한, 본 개시는 하나 이상의 특정 패킷 데이터 중 네트워크의 공격과 관련된 특정 패킷 데이터에 공격 유형을 라벨링 하여 2차 학습 데이터를 생성할 수 있다. 생성된 1차 학습용 데이터 및 2차 학습 데이터를 이용하여 공격 판별부를 학습시킬 수 있으며, 공격 판별부의 학습에 대한 내용은 이후 도 4a 내지 도 4b를 참조 하여 자세히 설명한다. 본 개시의 학습용 패킷 데이터는 실시간으로 수집되는 패킷 데이터이거나 또는 사전에 저장된 패킷 데이터 중 하나일 수 있다. 즉, 본 개시에서 네트워크에 대해 실시간으로 수집한 패킷 데이터를 학습용 패킷 데이터로 사 용하거나, 또는 사전에 사용자가 입력한 학습용 패킷 데이터가 사용될 수도 있다. 본 개시의 공격 판별부를 학 습시키는데 하나 이상의 학습용 패킷 데이터가 사용될 수도 있다. 본 개시의 공격은 네트워크에 대한 공격일 수 있으며, 구체적으로 사전 결정된 분석 시간에 대해 공격과 관련된 패킷 데이터가 존재하는 경우 공격이 존재한다고 인식될 수 있다. 네트워크에 대한 공격은 컴퓨터 및 컴퓨터 네 트워크에 상주하는 정보 또는 컴퓨터 네트워크 자체를 방해, 약화, 제거, 교란, 거부, 손상 또는 파괴하는 것 등을 의미할 수 있다. 여기서 네트워크에 상주하는 정보는 개인정보와 같이 중요한 정보일 수 있으며, 네트워크 공격으로 인해 개인 정보가 유출되거나 변경되는 일이 발생될 수도 있다. 예를 들어, 네트워크에 대한 공격은 서비스 거부(DoS, Danial of Service) 공격, 분산 서비스 거부(DDoS, Distributed Denial of Service) 공격, 스니핑(Sniffing), 스푸핑(Spoofing), 스위치 재밍(Switch Jamming), 랜드 어택(Land Attack) 또는 포트 스캐닝(PORT Scanning) 등일 수 있다. 전술한 네트워크에 대한 공격들은 예 시들인 뿐, 본 개시의 네트워크에 대한 공격은 전술한 예시들로 제한되지 않는다. 본 개시의 공격 상황 정보는 수집된 패킷 데이터에 기초하여 공격 판별부에서 생성되는 네트워크 공격에 대한 정보일 수 있다. 공격 상황 정보는 공격 여부 정보 또는 공격 유형 정보 중 적어도 하나를 포함할 수 있으며, 공격 판별부는 상이한 공격 상황 정보를 하나 이상 생성할 수도 있다. 예를 들어, 공격 판별부에서 제 1 공격 상황 정보 및 제 2 공격 상황 정보가 생성될 수 있다. 여기서 제 1 공격 상황 정보는 공격이 존재하지 않는 정상 상태 정보를 포함할 수 있고, 제 2 공격 상황 정보는 공격이 존재하는 공격 상태 정보 및 공격이 DDoS 공격 유형인 것에 대한 공격 유형 정보를 포함할 수 있다. 전술한 제 1 공격 상 황 정보, 제 2 공격 상황 정보 및 공격 유형은 예시일 뿐, 전술한 예시들로 인해 본 개시의 공격 판별부에서 생 성하는 공격 상황 정보의 개수 및 공격 유형이 제한되어 해석되지 않아야 할 것이다. 본 개시의 공격 유형은 네트워크에 대한 공격의 종류를 의미할 수 있다. 전술한 네트워크에 대한 공격의 예시들 과 같이, 본 개시의 공격 유형은 서비스 거부공격(DoS attack, Danial of Service attack), 분산 서비스 거부 (DDoS, Distributed Denial of Service) 공격, 스니핑(Sniffing), 스푸핑(Spoofing), 스위치 재밍(Switch Jamming), 랜드 어택(Land Attack) 또는 포트 스캐닝(PORT Scanning) 등일 수 있다. 전술한 공격 유형들은 예시들인 뿐, 본 개시의 공격 유형들은 전술한 예시들로 제한되지 않는다. 본 개시의 공격 유형은 수신한 패킷 데 이터에 기초하여 공격 판별부에서 결정될 수 있다. 본 개시의 주요 특징 정보는 공격 판별부에서 공격 유형을 결정하는데 큰 영향을 준 주요 특징들에 대한 정보일 수 있다. 여기서 공격 유형을 결정하는데 큰 영향을 준 주요 특징들은 공격 판별부에서 공격 유형을 결정하는데 결정적인 근거가 된 패킷 데이터의 특징들일 수 있다. 이와 같은 주요 특징들은 변수 중요도(feature importance)를 결정하는 섀플리 값(Shapley Value)에 기초하여 공격 분석부에서 결정될 수 있다. 즉, 섀플리 값 이 가장 큰 특징은 공격 유형을 결정하는데 가장 큰 원인이 되며, 주요 특징으로 결정될 수 있다. 이에 따라, 주요 특징 정보는 섀플리 값 및 섀플리 값에 매칭되는 주요 특징들을 포함하는 정보일 수 있다. 본 개시의 주요 특징은 섀플리 값이 사전 결정된 기준 섀플리 값보다 높은 섀플리 값을 가지는 특징일 수 있다. 또는, 가장 높은 섀플리 값의 순서대로 배열된 특징들 중 사전 결정된 기준 개수만큼 선택된 특징들이 주요 특 징으로 결정될 수도 있다. 예를 들어, A 공격 유형에 대해 주요 특징 정보는 제 1 특징 내지 제 3 특징을 포함하고, 제 1 특징에 매칭된 섀플리 값은 0.01이고, 제 2 특징에 매칭된 섀플리 값은 0.12이고, 그리고 제 3 특징에 매칭된 섀플리 값은 0.20일 수 있다. 여기서, 제 1 특징 내지 제 3 특징 중에서 제 3 특징이 가장 큰 영향을 준 특징이며 중요도가 가장 크다고 볼 수 있다. 기준 섀플리 값이 0.10인 경우, 제 2 특징 및 제 3 특징이 주요 특징일 수 있다. 다른 예를 들어, 제 1 특징의 섀플리 값이 0.01이고, 제 2 특징의 섀플리 값이 0.04이고, 제 3 특징의 섀플리 값이 0.5일 수 있다. 사전 결정된 기준 개수가 2인 경우, 공격 분석부는 섀플리 값에 기초하여 제 3 특징, 제 2 특징 및 제 1 특징 순으로 배열하고 제 2 특징 및 제 3 특징을 주요 특징으로 결정할 수도 있다. 이에 따라, 생 성된 주요 특징 정보는 제 2 특징 및 제 3 특징을 포함할 수 있다. 전술한 특징들 및 섀플리 값들은 예시들일 뿐이며, 전술한 예시들로 인해 본 개시의 특징들 및 섀플리 값들이 제한되어 해석되지 않아야 할 것이다. 본 개시의 시각화 분석 정보는 전술한 섀플리 값 및 특징들을 나타내는 시각화 정보를 의미할 수 있다. 또한, 본 개시의 시각화 분석 정보는 주요 특징 정보를 시각적으로 표현한 정보일 수 있다. 시각화 분석 정보에 대해 예를 들면, 도 5에 도시된 바와 같이, 특징들에 대한 섀플리 값을 막대 그래프와 같은 시각화 정보일 수 있으나, 본 개시의 시각화 분석 정보는 막대 그래프 및 도 5에 도시된 바에 제한되지 않는다. 본 개시의 시각화 분석 정보는 공격 분석부에서 생성될 수 있다. 본 개시의 공격 차단 정보는 공격 판별부에서 식별한 공격 유형에 기초하여 공격을 차단하기 위한 정보일 수 있 다. 구체적으로, 본 개시의 공격 차단 정보는 식별된 공격 유형의 공격을 차단하기 위해 해당 네트워크 또는 해 당 패킷 데이터를 어떻게 처리할지에 대한 정보일 수 있으며, 공격 차단 규칙에 대응하는 정보일 수 있다. 여기 서 공격 차단 규칙은 예를 들어, Snort rule일 수 있으나, 본 개시의 공격 차단 규칙은 snort rule에 제한되지 않는다. 본 개시의 공격 차단 정보는 전술한 주요 특징 정보에 포함된 주요 특징에 대한 조건 정보 및 조건 정 보에 기초하여 네트워크 관련 제어 동작을 수행하기 위한 행동 정보를 포함할 수 있다. 본 개시의 공격 차단 정 보는 이후 도 6을 참고하여 자세히 설명한다. 도 1은 본 개시의 일 실시예에 따라 IoT 네트워크에 대한 공격을 차단하기 위한 컴퓨팅 장치의 블록 구성도이다. 도 1에 도시된 컴퓨팅 장치의 구성은 간략화 하여 나타낸 예시일 뿐이다. 본 개시의 일 실시예에서 컴퓨팅 장치는 도 1에서 도시하는 구성들 외에 컴퓨팅 장치의 컴퓨팅 환경을 수행하기 위한 다른 추가 구성 요소들이 포함될 수 있고, 도 1에 개시된 구성 요소들 중 일부만이 컴퓨팅 장치를 구성할 수도 있다. 구체적으로, 본 개시의 컴퓨팅 장치는 프로세서, 메모리 및 네트워크부를 포함할 수 있다. 또한, 본 개시의 컴퓨팅 장치는 이후 도면들을 참조하여 자세히 설명되는 본 개시의 IoT 네트워크 공격을 차단하기 위한 방법의 적어도 일부 단계들을 수행하도록 공격 차단 시스템을 더 포함할 수 있다. 구체적으로, IoT 네트워크 공격을 차단하기 위한 공격 차단 시스템에 대해 도 2를 참조하여 설명하면 다음과 같다. 도 2는 본 개시의 일 실시예에 따라 IoT 네트워크 공격을 차단하기 위한 공격 차단 시스템을 예시적으로 나타낸 블록 구성도이다. 본 개시의 공격 차단 시스템은 전처리부, 학습 데이터 생성부, 공격 판별부, 공격 분 석부 또는 공격 차단부 중 적어도 하나를 포함할 수 있다. 본 개시의 전처리부, 학습 데이터 생성부, 공격 판별부, 공격 분석부 및 공격 차단부 는 컴퓨팅 장치에 포함될 수 있고, 그리고 프로세서에 의해 본 개시의 IoT 네트워크 공격을 차 단하기 위한 방법의 적어도 일부 단계들을 수행하도록 동작 및 제어될 수 있다. 이에 따라, 본 개시의 전처리부 , 학습 데이터 생성부, 공격 판별부, 공격 분석부 및 공격 차단부는 컴퓨팅 장 치에 포함될 수 있는 구성요소, 모델 또는 모듈로 구성될 수 있다. 또한, 본 개시의 전처리부, 학습 데이 터 생성부, 공격 판별부, 공격 분석부 또는 공격 차단부 중 적어도 하나는 별도의 프 로세서로 구성될 수도 있다. 프로세서는 하나 이상의 코어로 구성될 수 있으며, 컴퓨팅 장치의 중앙 처리 장치(CPU: central processing unit), 범용 그래픽 처리 장치 (GPGPU: general purpose graphics processing unit), 텐서 처리 장 치(TPU: tensor processing unit) 등의 데이터 분석, 딥러닝을 위한 프로세서를 포함할 수 있다. 프로세 서는 메모리에 저장된 컴퓨터 프로그램을 판독하여 본 개시의 일 실시예에 따른 기계 학습을 위한 데 이터 처리를 수행할 수 있다. 본 개시의 일실시예에 따라 프로세서는 신경망의 학습을 위한 연산을 수행할 수 있다. 프로세서는 딥러닝(DL: deep learning)에서 학습을 위한 입력 데이터의 처리, 입력 데이터에서의 피처 추출, 오차 계산, 역전파(backpropagation)를 이용한 신경망의 가중치 업데이트 등의 신경망의 학습을 위 한 계산을 수행할 수 있다. 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 네트워크 함수의 학습을 처 리할 수 있다. 예를 들어, CPU 와 GPGPU가 함께 네트워크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에서 복수의 컴퓨팅 장치의 프로세서를 함께 사용하여 네트워 크 함수의 학습, 네트워크 함수를 이용한 데이터 분류를 처리할 수 있다. 또한, 본 개시의 일 실시예에 따른 컴 퓨팅 장치에서 수행되는 컴퓨터 프로그램은 CPU, GPGPU 또는 TPU 실행가능 프로그램일 수 있다. 구체적으로, 프로세서는 신경망으로 구성된 공격 판별부의 학습을 위한 연산을 수행할 수 있으며, 전술한 바와 같이 프로세서의 CPU, GPGPU, 및 TPU 중 적어도 하나가 공격 판별부의 네트워크 함수에 대한 학습을 처리할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 프로세서가 생성하거나 결정한 임의의 형태의 정보 및 네트 워크부가 수신한 임의의 형태의 정보를 저장할 수 있다. 본 개시의 일 실시예에 따르면, 메모리는 플래시 메모리 타입(flash memory type), 하드디스크 타입(hard disk type), 멀티미디어 카드 마이크로 타입(multimedia card micro type), 카드 타입의 메모리(예를 들어 SD 또는 XD 메모리 등), 램(Random Access Memory, RAM), SRAM(Static Random Access Memory), 롬(Read-Only Memory, ROM), EEPROM(Electrically Erasable Programmable Read-Only Memory), PROM(Programmable Read-Only Memory), 자기 메모리, 자기 디스크, 광디스크 중 적어도 하나의 타입의 저장매체를 포함할 수 있다. 컴퓨팅 장 치는 인터넷(internet) 상에서 상기 메모리의 저장 기능을 수행하는 웹 스토리지(web storage)와 관련되어 동작할 수도 있다. 전술한 메모리에 대한 기재는 예시일 뿐, 본 개시는 이에 제한되지 않는다. 본 개시에서 네트워크부는 유선 및 무선 등과 같은 그 통신 양태를 가리지 않고 구성될 수 있으며, 단거 리 통신망(PAN: Personal Area Network), 근거리 통신망(WAN: Wide Area Network) 등 다양한 통신망으로 구성 될 수 있다. 또한, 상기 네트워크는 공지의 월드와이드웹(WWW: World Wide Web)일 수 있으며, 적외선(IrDA: Infrared Data Association) 또는 블루투스(Bluetooth)와 같이 단거리 통신에 이용되는 무선 전송 기술을 이용 할 수도 있다. 본 명세서에서 설명된 기술들은 위에서 언급된 네트워크들뿐만 아니라, 다른 네트워크들에서도 사용될 수 있다. 도 3은 본 개시의 일 실시예에 따른 예시적인 네트워크 함수를 나타낸 개략도이다. 본 명세서에 걸쳐, 연산 모델, 신경망, 인공 신경망, 네트워크 함수 및 뉴럴 네트워크(neural network)는 동일 한 의미로 사용될 수 있다. 본 개시의 공격 판별부와 관련된 신경망은 일반적으로 노드라 지칭될 수 있는 상호 연결된 계산 단위들의 집합으로 구성될 수 있다. 이러한 노드들은 뉴런(neuron)들로 지칭될 수도 있다. 신경망 은 적어도 하나 이상의 노드들을 포함하여 구성된다. 신경망들을 구성하는 노드(또는 뉴런)들은 하나 이상의 링 크에 의해 상호 연결될 수 있다.신경망 내에서, 링크를 통해 연결된 하나 이상의 노드들은 상대적으로 입력 노드 및 출력 노드의 관계를 형성할 수 있다. 입력 노드 및 출력 노드의 개념은 상대적인 것으로서, 하나의 노드에 대하여 출력 노드 관계에 있는 임의의 노드는 다른 노드와의 관계에서 입력 노드 관계에 있을 수 있으며, 그 역도 성립할 수 있다. 상술한 바 와 같이, 입력 노드 대 출력 노드 관계는 링크를 중심으로 생성될 수 있다. 하나의 입력 노드에 하나 이상의 출 력 노드가 링크를 통해 연결될 수 있으며, 그 역도 성립할 수 있다. 하나의 링크를 통해 연결된 입력 노드 및 출력 노드 관계에서, 출력 노드의 데이터는 입력 노드에 입력된 데이 터에 기초하여 그 값이 결정될 수 있다. 여기서 입력 노드와 출력 노드를 상호 연결하는 링크는 가중치(weigh t)를 가질 수 있다. 가중치는 가변적일 수 있으며, 신경망이 원하는 기능을 수행하기 위해, 사용자 또는 알고리 즘에 의해 가변 될 수 있다. 예를 들어, 하나의 출력 노드에 하나 이상의 입력 노드가 각각의 링크에 의해 상호 연결된 경우, 출력 노드는 상기 출력 노드와 연결된 입력 노드들에 입력된 값들 및 각각의 입력 노드들에 대응 하는 링크에 설정된 가중치에 기초하여 출력 노드 값을 결정할 수 있다. 상술한 바와 같이, 신경망은 하나 이상의 노드들이 하나 이상의 링크를 통해 상호 연결되어 신경망 내에서 입력 노드 및 출력 노드 관계를 형성한다. 신경망 내에서 노드들과 링크들의 개수 및 노드들과 링크들 사이의 연관관 계, 링크들 각각에 부여된 가중치의 값에 따라, 신경망의 특성이 결정될 수 있다. 예를 들어, 동일한 개수의 노 드 및 링크들이 존재하고, 링크들의 가중치 값이 상이한 두 신경망이 존재하는 경우, 두 개의 신경망들은 서로 상이한 것으로 인식될 수 있다. 신경망은 하나 이상의 노드들의 집합으로 구성될 수 있다. 신경망을 구성하는 노드들의 부분 집합은 레이어 (layer)를 구성할 수 있다. 신경망을 구성하는 노드들 중 일부는, 최초 입력 노드로부터의 거리들에 기초하여, 하나의 레이어(layer)를 구성할 수 있다. 예를 들어, 최초 입력 노드로부터 거리가 n인 노드들의 집합은, n 레 이어를 구성할 수 있다. 최초 입력 노드로부터 거리는, 최초 입력 노드로부터 해당 노드까지 도달하기 위해 거 쳐야 하는 링크들의 최소 개수에 의해 정의될 수 있다. 그러나, 이러한 레이어의 정의는 설명을 위한 임의적인 것으로서, 신경망 내에서 레이어의 차수는 상술한 것과 상이한 방법으로 정의될 수 있다. 예를 들어, 노드들의 레이어는 최종 출력 노드로부터 거리에 의해 정의될 수도 있다. 최초 입력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서 링크를 거치지 않고 데이터가 직접 입력되 는 하나 이상의 노드들을 의미할 수 있다. 또는, 신경망 네트워크 내에서, 링크를 기준으로 한 노드 간의 관계 에 있어서, 링크로 연결된 다른 입력 노드들을 가지지 않는 노드들을 의미할 수 있다. 이와 유사하게, 최종 출 력 노드는 신경망 내의 노드들 중 다른 노드들과의 관계에서, 출력 노드를 가지지 않는 하나 이상의 노드들을 의미할 수 있다. 또한, 히든 노드는 최초 입력 노드 및 최후 출력 노드가 아닌 신경망을 구성하는 노드들을 의 미할 수 있다. 본 개시의 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수와 동일할 수 있 으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하다가 다시 증가하는 형태의 신경망일 수 있다. 또한, 본 개시의 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수 보다 적을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 감소하는 형태의 신경망 일 수 있다. 또한, 본 개시의 또 다른 일 실시예에 따른 신경망은 입력 레이어의 노드의 개수가 출력 레이어의 노드의 개수보다 많을 수 있으며, 입력 레이어에서 히든 레이어로 진행됨에 따라 노드의 수가 증가하는 형태의 신경망일 수 있다. 본 개시의 또 다른 일 실시예에 따른 신경망은 상술한 신경망들의 조합된 형태의 신경망일 수 있다. 딥 뉴럴 네트워크(DNN: deep neural network, 심층신경망)는 입력 레이어와 출력 레이어 외에 복수의 히든 레이 어를 포함하는 신경망을 의미할 수 있다. 딥 뉴럴 네트워크를 이용하면 데이터의 잠재적인 구조(latent structures)를 파악할 수 있다. 즉, 사진, 글, 비디오, 음성, 음악의 잠재적인 구조(예를 들어, 어떤 물체가 사 진에 있는지, 글의 내용과 감정이 무엇인지, 음성의 내용과 감정이 무엇인지 등)를 파악할 수 있다. 딥 뉴럴 네 트워크는 컨볼루션 뉴럴 네트워크(CNN: convolutional neural network), 리커런트 뉴럴 네트워크(RNN: recurrent neural network), 오토인코더(auto encoder), GAN(Generative Adversarial Networks), 제한 볼츠만 머신(RBM: restricted boltzmann machine), 심층 신뢰 네트워크(DBN: deep belief network), Q 네트워크, U 네 트워크, 샴 네트워크, 적대적 생성 네트워크(GAN: Generative Adversarial Network) 등을 포함할 수 있다. 전 술한 딥 뉴럴 네트워크의 기재는 예시일 뿐이며 본 개시는 이에 제한되지 않는다. 본 개시의 일 실시예에서 네트워크 함수는 오토인코더(autoencoder)를 포함할 수도 있다. 오토인코더는 입력 데 이터와 유사한 출력 데이터를 출력하기 위한 인공 신경망의 일종일 수 있다. 오토인코더는 적어도 하나의 히든레이어를 포함할 수 있으며, 홀수 개의 히든 레이어가 입출력 레이어 사이에 배치될 수 있다. 각각의 레이어의 노드의 수는 입력 레이어의 노드의 수에서 병목 레이어(인코딩)라는 중간 레이어로 축소되었다가, 병목 레이어 에서 출력 레이어(입력 레이어와 대칭)로 축소와 대칭되어 확장될 수도 있다. 오토인코더는 비선형 차원 감소를 수행할 수 있다. 입력 레이어 및 출력 레이어의 수는 입력 데이터의 전처리 이후에 차원과 대응될 수 있다. 오 토인코더 구조에서 인코더에 포함된 히든 레이어의 노드의 수는 입력 레이어에서 멀어질수록 감소하는 구조를 가질 수 있다. 병목 레이어(인코더와 디코더 사이에 위치하는 가장 적은 노드를 가진 레이어)의 노드의 수는 너 무 작은 경우 충분한 양의 정보가 전달되지 않을 수 있으므로, 특정 수 이상(예를 들어, 입력 레이어의 절반 이 상 등)으로 유지될 수도 있다. 뉴럴 네트워크는 교사 학습(supervised learning), 비교사 학습(unsupervised learning), 반교사학습(semi supervised learning), 또는 강화학습(reinforcement learning) 중 적어도 하나의 방식으로 학습될 수 있다. 뉴럴 네트워크의 학습은 뉴럴 네트워크가 특정한 동작을 수행하기 위한 지식을 뉴럴 네트워크에 적용하는 과정 일 수 있다. 뉴럴 네트워크는 출력의 오류를 최소화하는 방향으로 학습될 수 있다. 뉴럴 네트워크의 학습에서 반복적으로 학 습 데이터를 뉴럴 네트워크에 입력시키고 학습 데이터에 대한 뉴럴 네트워크의 출력과 타겟의 에러를 계산하고, 에러를 줄이기 위한 방향으로 뉴럴 네트워크의 에러를 뉴럴 네트워크의 출력 레이어에서부터 입력 레이어 방향 으로 역전파(backpropagation)하여 뉴럴 네트워크의 각 노드의 가중치를 업데이트 하는 과정이다. 교사 학습의 경우 각각의 학습 데이터에 정답이 라벨링되어있는 학습 데이터를 사용하며(즉, 라벨링된 학습 데이터), 비교사 학습의 경우는 각각의 학습 데이터에 정답이 라벨링되어 있지 않을 수 있다. 즉, 예를 들어 데이터 분류에 관한 교사 학습의 경우의 학습 데이터는 학습 데이터 각각에 카테고리가 라벨링 된 데이터 일 수 있다. 라벨링된 학 습 데이터가 뉴럴 네트워크에 입력되고, 뉴럴 네트워크의 출력(카테고리)과 학습 데이터의 라벨을 비교함으로써 오류(error)가 계산될 수 있다. 다른 예로, 데이터 분류에 관한 비교사 학습의 경우 입력인 학습 데이터가 뉴럴 네트워크 출력과 비교됨으로써 오류가 계산될 수 있다. 계산된 오류는 뉴럴 네트워크에서 역방향(즉, 출력 레이 어에서 입력 레이어 방향)으로 역전파 되며, 역전파에 따라 뉴럴 네트워크의 각 레이어의 각 노드들의 연결 가 중치가 업데이트 될 수 있다. 업데이트 되는 각 노드의 연결 가중치는 학습률(learning rate)에 따라 변화량이 결정될 수 있다. 입력 데이터에 대한 뉴럴 네트워크의 계산과 에러의 역전파는 학습 사이클(epoch)을 구성할 수 있다. 학습률은 뉴럴 네트워크의 학습 사이클의 반복 횟수에 따라 상이하게 적용될 수 있다. 예를 들어, 뉴럴 네트워크의 학습 초기에는 높은 학습률을 사용하여 뉴럴 네트워크가 빠르게 일정 수준의 성능을 확보하도록 하 여 효율성을 높이고, 학습 후기에는 낮은 학습률을 사용하여 정확도를 높일 수 있다. 뉴럴 네트워크의 학습에서 일반적으로 학습 데이터는 실제 데이터(즉, 학습된 뉴럴 네트워크를 이용하여 처리하 고자 하는 데이터)의 부분집합일 수 있으며, 따라서, 학습 데이터에 대한 오류는 감소하나 실제 데이터에 대해 서는 오류가 증가하는 학습 사이클이 존재할 수 있다. 과적합(overfitting)은 이와 같이 학습 데이터에 과하게 학습하여 실제 데이터에 대한 오류가 증가하는 현상이다. 예를 들어, 노란색 고양이를 보여 고양이를 학습한 뉴 럴 네트워크가 노란색 이외의 고양이를 보고는 고양이임을 인식하지 못하는 현상이 과적합의 일종일 수 있다. 과적합은 머신러닝 알고리즘의 오류를 증가시키는 원인으로 작용할 수 있다. 이러한 과적합을 막기 위하여 다양 한 최적화 방법이 사용될 수 있다. 과적합을 막기 위해서는 학습 데이터를 증가시키거나, 레귤라이제이션 (regularization), 학습의 과정에서 네트워크의 노드 일부를 비활성화하는 드롭아웃(dropout), 배치 정규화 레 이어(batch normalization layer)의 활용 등의 방법이 적용될 수 있다. 본 명세서에 걸쳐, 연산 모델, 신경망, 네트워크 함수, 뉴럴 네트워크(neural network)는 동일한 의미로 사용될 수 있다. 이하에서는 신경망으로 통일하여 기술한다. 본 개시에서 IoT 네트워크 공격 탐지 및 공격 유형을 분류하는 공격 판별부는 오토인코더 및 소프트맥스 (softmax) 함수를 이용하는 신경망 구조를 가질 수 있다. 구체적으로, IoT 네트워크 공격 탐지 및 공격 유형을 분류하기 위해 본 개시의 학습 방법에 따라 적어도 2번 학습된 공격 판별부의 구조가 도 4b에 도시되어 있다. 도 4b에 도시된 바에 따르면, 본 개시의 공격 판별부는 도 4a에 도시된 오토인코더의 일부 및 소프 트맥스 함수의 레이어(layer)를 포함하는 신경망 구조를 가진다. 본 개시의 공격 판별부에 대한 학습 방 법 및 구조는 이후 도 4a 내지 도 4b를 참조하여 자세히 설명한다. 이후에서는 IoT 네트워크에 대한 공격을 차단하기 위한 방법에 대해 설명한다. 본 개시의 일 실시예에 따르면, 네트워크부를 통해 IoT 네트워크에 대한 하나 이상의 패킷 데이터를 수신 할 수 있다. 프로세서는 공격 상황 정보를 생성하도록 수신한 패킷 데이터를 공격 판별부에 입력할 수 있다. 본 개시의 일 실시예에 따르면, 공격 판별부에서 생성된 공격 상황 정보는 전술한 바와 같이 네트워크에 대한 공격 여부 정보 및 공격 유형 정보를 포함할 수 있다. 본 개시의 공격 판별부는 소프트맥스 (softmax) 레이어를 포함하는 변형된 오토인코더(autoencoder) 구조의 인공 신경망 모델일 수 있다. 본 개시의 공격 판별부는 공격 상황 정보를 생성하도록 1차 학습 및 2차 학습을 통해 학습될 수 있으며, 공격 판별부의 학습 방법 및 구조에 대해 구체적으로 설명하면 다음과 같다. 본 개시의 일 실시예에 따르면, 전처리부에 학습용 패킷 데이터를 입력하여 사전 결정된 분석 시간의 특 징 패킷 데이터를 생성할 수 있다. 구체적으로, 프로세서는 하나 이상의 학습용 패킷 데이터를 전처리하여 특징 패킷 데이터를 생성하도록 전처리부에 학습용 패킷 데이터를 입력할 수 있다. 전처리부는 입 력된 학습용 패킷 데이터를 사전 결정된 분석 시간만큼 추출하고, 사전 결정된 분석 시간의 학습용 패킷 데이터 로부터 전술한 기본 특징 또는 통계적 특징 중 적어도 하나를 추출할 수 있다. 또한, 전처리부는 학습용 패킷 데이터로부터 추출된 기본 특징 또는 통계적 특징 중 적어도 하나를 포함하는 특징 패킷 데이터를 생성할 수 있다. 따라서, 특징 패킷 데이터는 학습용 패킷 데이터로부터 분석 시간에 대해 추출된 하나 이상의 특징 (feature)들을 포함할 수 있다. 즉, 특징 패킷 데이터는 사전 결정된 분석 시간의 학습용 패킷 데이터로부터 추 출된 하나 이상의 특징들인 기본 특징 또는 통계적 특징 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따르면, 학습 데이터 생성부에서 특징 패킷 데이터에 기초하여 1차 학습 데이터 및 2차 학습 데이터를 생성할 수 있다. 구체적으로, 프로세서는 1차 학습 데이터 및 2차 학습 데이터를 생 성하도록 학습 데이터 생성부에 특징 패킷 데이터를 하나 이상 입력할 수 있다. 학습 데이터 생성부 는 특징 패킷 데이터에 기초하여 정상 또는 공격 중 하나와 관련된 1차 학습 데이터를 생성할 수 있다. 즉, 1차 학습 데이터는 정상 상태의 네트워크 또는 공격받은 네트워크 중 하나와 관련될 수 있다. 또한, 학습 데이터 생성부는 전처리부에서 전처리 되지 않은 학습용 패킷 데이터에 기초하여 1차 학습 데이터 를 생성할 수도 있다. 또한, 학습 데이터 생성부는 특징 패킷 데이터에 적어도 하나의 공격 유형을 라벨링 하여 2차 학습 데이 터를 생성할 수 있다. 즉, 학습 데이터 생성부는 공격과 관련된 특징 패킷 데이터에 대해 적어도 하나의 공격 유형을 라벨링 하여 2차 학습 데이터를 생성할 수 있다. 구체적으로, 학습 데이터 생성부는 네트워 크 공격과 관련된 특징 패킷 데이터를 식별하고, 해당 특징 패킷 데이터와 관련된 공격 유형을 식별할 수 있다. 학습 데이터 생성부는 식별된 공격 유형을 대응하는 특징 패킷 데이터에 공격 유형을 라벨링하여 2차 학 습 데이터를 생성할 수 있다. 예를 들어, 학습 데이터 생성부는 하나 이상의 특징 패킷 데이터 중 DOS 공격과 관련된 제 1 특징 패킷 데이터를 식별하고, 제 1 특징 패킷 데이터에 대해 DOS 공격을 라벨링하여 2차 학습 데이터로 생성할 수 있다. 전술한 특징 패킷 데이터 및 공격 유형은 예시일 뿐, 전술한 예시들로 인해 본 개시의 특징 패킷 데이터 및 공 격 유형이 제한되어 해석되지 않아야 할 것이다. 본 개시의 일 실시예에 따르면, 1차 학습 데이터 및 2차 학습 데이터를 이용하여 공격 판별부를 학습시킬 수 있다. 구체적으로, 프로세서는 1차 학습 데이터를 오토인코더로 구성된 1차 판별 모델에 입력하 여 1차 학습을 수행시킬 수 있다. 보다 구체적으로 본 개시의 1차 학습 판별 모델이 도시된 도 4a를 참조하여 설명하면 다음과 같다. 도 4a는 본 개시의 일 실시예에 따른 오토인코더로 구성된 1차 판별 모델을 예시적으로 나타낸 예시도이다. 도 4a에 도시된 바와 같이, 1차 판별 모델은 일반적인 오토인코더(autoencoder)로만 구성된 인공 신경망 모델이며, 입력 레이어, 인코더에 해당하는 제 1 히든 레이어 및 제 2 히든 레이어, 디코더에 해당하는 제 3 히든 레이어 및 제 4 히든 레이어, 그리고 출력 레이어를 포함할 수 있다. 프로 세서는 인코더에 해당되는 제 1 히든 레이어 및 제 2 히든 레이어에 대해 1차 학습 데이터를 입 력하여 학습시킬 수 있으며, 디코딩 과정에서 발생하는 차이를 계산하기 위해 초기 모델의 학습에 대해서는 손실 함수에 대해 정의할 필요가 있다. 정의될 수 있는 본 개시의 손실 함수에 대해 예를 들면, 평균 제곱 오차 (Mean Squared Error, MSE)를 이용한 예시가 있으며 구체적으로 다음과 같다."}
{"patent_id": "10-2021-0108776", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "위의 식에서 n은 분류 결과의 개수, 는 신경망이 추정한 값, 는 정답 레이블, i는 데이터의 차원수를 의미 한다. 전술한 평균 제곱 오차의 식은 예시일 뿐이며, 본 개시의 손실 함수는 위의 식으로 제한되지 않는다. 본 개시의 일 실시예에 따르면, 프로세서는 1차 학습이 완료된 1차 판별 모델에 소프트맥스 레이어를 부가 하여 공격 판별부를 구성할 수 있다. 또한, 프로세서는 공격의 발생 여부 및 유형을 포함하는 공격 상황 정보를 생성하기 위해 공격 판별부에 2차 학습 데이터를 입력하여 2차 학습을 수행시킬 수 있다. 구체적으로, 본 개시의 소프트맥스 레이어는 일반적인 소프트맥스 함수(Softmax Function)를 활성화 함수로 이용하는 신경망 레이어일 수 있다. 보다 구체적으로 본 개시의 공격 판별부를 도시한 도 4b를 참조하여 설명하면 다음과 같다. 도 4b는 본 개시의 일 실시예에 따라 오토인코더 및 소프트맥스 레이어를 포함하는 공격 판별부에 대해 예시적 으로 나타낸 예시도이다. 전술한 1차 학습이 완료된 1차 판별 모델에 소프트맥스 레이어를 부가하여 공격 판별부를 최종적으 로 구성할 수 있다. 구체적으로, 프로세서는 전술한 바와 같이 1차 학습이 완료된 도 4a의 1차 판별 모델 의 인코더에 해당하는 제 1 히든 레이어 및 제 2 히든 레이어를 추출하고, 소프트맥스 레이어 에 해당하는 제 5 히든 레이어를 연결하여 공격 판별부를 구성할 수 있다. 이에 따라, 공격 판별부 는 입력 레이어, 1차 학습된 인코더에 해당하는 제 1 히든 레이어 및 제 2 히든 레이어, 소프트맥스 레이어 및 출력 레이어를 포함할 수 있다. 이와 같이, 프로세서는 공격의 발생 여부 및 공격 유형을 포함하는 공격 상황 정보를 생성하도록 공격 판별부에 2차 학습 데이터를 입력하여 2차 학습을 수행시킬 수 있다. 이후에, 프로세서는 2차 학습이 완료된 공격 판별부에 패킷 데이터를 입 력하여 공격 상황 정보를 획득할 수 있다. 본 개시의 2차 학습은 바람직하게 지도 학습일 수도 있으나, 본 개시 의 2차 학습은 지도 학습으로 제한되지 않는다. 전술한 학습 방법의 1차 학습 및 2차 학습 각각은 한번 이상 반복될 수 있으며, 1차 학습 및 2차 학습의 학습 순서는 바뀔 수도 있다. 또한, 도 4a 내지 도 4b의 1차 학습 모델 및 공격 판별부에 포함된 히든 레이어들은 예 시일 뿐, 도 4a 내지 도 4b에 도시된 바에 따라 1차 학습 모델 및 공격 판별부에 포함되는 히든 레이어가 제한 되어 해석되지 않아야 할 것이다. 전술한 바와 같이, 오토인코더 및 소프트맥스 레이어를 포함하는 공격 판별부는 1차 학습 및 2차 학습을 통해 학습되어 오토인코더로만 구성된 일반적인 1차 판별 모델에 비해 높은 정확도로 공격 여부 및 공격 유형을 식별 및 예측할 수 있다. 본 개시의 일 실시예에 따르면, IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트워크에 대한 공격의 공격 상황 정보를 생성할 수 있다. 구체적으로, 프로세서는 네트워크에 대한 공격의 공격 상황 정보를 생성하도록 IoT 네트워크에 대한 하나 이상의 패킷 데이터를 2차 학습이 완료된 공격 판별부에 입력할 수 있다. 구체적으로, 공격 판별부(140 0)에서 패킷 데이터에 대해 손실값을 하나 이상 산출하고 패킷 데이터의 평균 손실값을 계산할 수 있다. 여기서 패킷 데이터는 사전 결정된 분석 시간동안 수신한 데이터일 수 있으며, 하나 이상의 패킷 데이터가 공격 판별부 에 입력될 수 있다. 이에 따라, 공격 판별부는 전술한 손실 함수를 이용하여 사전 결정된 분석 시 간에 대한 하나 이상의 패킷 데이터 각각에 대한 손실값을 계산할 수 있다. 여기서 손실 함수는 전술한 바와 같 이 평균 제곱 오차일 수도 있으나, 본 개시의 손실 함수는 평균 제곱 오차에 제한되어 해석되지 않아야 할 것이다. 또한, 패킷 데이터를 전처리부를 통해 전처리 하여 특징 패킷 데이터를 생성하고, 특징 공격 판별부 에 입력하여 특징 패킷 데이터에 대한 손실값을 하나 이상 계산할 수도 있다. 이후에 공격 판별부 는 공격 여부 또는 공격 유형을 판별하기 위해 손실 함수에 기초하여 계산된 손실값들의 평균을 계산하여 평균 손실값으로 결정할 수 있다. 또한, 공격 판별부는 평균 손실값에 기초하여 공격 여부 또는 공격 유형 중 적어도 하나를 판별할 수 있 다. 구체적으로, 공격 판별부는 평균 손실값을 사전 결정된 손실 임계값과 비교하여 공격 여부를 판별할 수 있다. 보다 구체적으로, 공격 판별부는 손실 임계값보다 높은 평균 손실값이 산출된 경우, 네트워크에 대한 공격이 존재하는 것으로 결정할 수 있다. 또한, 평균 손실값은 공격 유형에 기초하여 상이하게 도출될 수 있기 때문에, 공격 판별부는 평균 손실값 을 공격 판별부가 학습한 공격 유형들 각각의 기준 평균 손실값과 비교하여 공격 유형을 판별할 수 있다. 즉, 공격 판별부는 평균 손실값과 학습한 공격 유형들 각각의 평균 손실값인 기준 평균 손실값을 비교하여 해 당 패킷 데이터들에 대한 공격 유형을 결정할 수 있다. 예를 들어, 프로세서는 사전 결정된 분석 시간에 대해 제 1 패킷 데이터 내지 제 3 패킷 데이터를 수신하 여 공격 판별부에 입력할 수 있다. 공격 판별부는 제 1 패킷 데이터, 제 2 패킷 데이터 및 제 3 패 킷 데이터 각각에 대한 손실값들을 산출하고, 3개의 손실값들의 총합을 3으로 나누어 제 1 평균 손실값을 계산 할 수 있다. 공격 판별부는 결정된 제 1 평균 손실값이 손실 임계값보다 높은 경우 제 1 패킷 데이터 내 지 제 3 패킷 데이터에 대한 공격이 존재하는 것으로 결정할 수 있다. 또한, 제 1 평균 손실값이 학습한 공격 유형들 각각의 기준 평균 손실값과 비교하여 학습한 공격 유형들 중 DoS 공격에 해당된다는 것을 결정할 수도 있다. 전술한 패킷 데이터들 및 공격 유형은 예시들일 뿐, 전술한 예시들로 인해 본 개시의 패킷 데이터들 및 공격 유 형이 제한되어 해석되지 않아야 할 것이다. 또한, 공격 판별부는 판별된 공격 여부 또는 공격 유형 중 적어도 하나를 포함하는 공격 상황 정보를 생 성할 수 있다. 전술한 바와 같이, 공격 판별부는 평균 손실값에 기초하여 결정된 공격 존재 여부 또는 공 격 유형 중 적어도 하나를 포함하는 공격 상황 정보를 생성할 수 있다. 구체적으로, 공격이 존재하지 않는 경우 에는 공격 유형이 포함되지 않은 제 1 공격 상황 정보가 생성될 수 있고, 공격이 존재하는 경우에는 공격 유형 이 포함된 제 2 공격 상황 정보가 생성될 수 있다. 본 개시의 일 실시예에 따르면, 공격 상황 정보에 기초하여 공격 분석부에서 공격에 대한 주요 특징 정보 를 생성할 수 있다. 구체적으로, 프로세서는 주요 특징 정보를 생성하도록 공격 판별부에서 생성된 공격 상황 정보를 공격 분석부에 입력할 수 있다. 추가적으로, 전술한 바와 같이 전처리된 특징 패킷 데 이터가 공격 분석부에 입력되어 공격 상황 정보가 생성된 경우, 프로세서는 특징 패킷 데이터 및 공 격 상황 정보를 공격 분석부에 입력할 수도 있다. 또한, 공격 분석부에서 공격 상황 정보의 공격 여부에 기초하여 공격이 발생한 것으로 식별한 경우, 공격 상황 정보의 공격 유형을 식별할 수 있다. 또한, 공격 분석부는 식별한 공격 유형의 특징들에 대한 섀플 리 값(Shapley Value)을 하나 이상 산출할 수 있다. 구체적으로, 공격 분석부는 입력된 특징 패킷 데이터 또는 식별된 공격 유형과 관련된 2차 학습 데이터 중 적어도 하나에 기초하여 공격 유형에 대한 특징들을 결정 할 수 있다. 전술한 2차 학습 데이터를 기초하여 공격 유형에 대한 특징들을 결정하는 것에 대해 예를 들면 다음과 같다. 식 별된 공격 유형이 DoS 공격일 경우, 공격 분석부의 학습에 사용된 DoS 공격이 라벨링 된 2차 학습 데이터 를 참조하여 2차 학습 데이터에 포함된 기본 특징 또는 통계적 특징 중 적어도 하나를 DoS 공격에 대한 특징들 로 결정할 수 있다. 전술한 DoS 공격은 공격 유형의 예시일 뿐, 전술한 예시로 인해 본 개시의 공격 유형이 제 한되어 해석되지 않아야 할 것이다. 본 개시의 공격 분석부는 결정된 공격 유형에 대한 특징들을 하나씩 제외시켜 제외된 특징에 대한 섀플리 값을 계산할 수 있다. 예를 들어, 공격 유형에 대해 제 1 특징 내지 제 5 특징이 결정된 경우, 제 1 특징에 대 한 섀플리 값은 제 1 특징을 제외하고 계산될 수 있다. 전술한 특징들은 예시들일 뿐이며, 본 개시의 특징들은 전술한 예시들로 제한되지 않는다. 또한, 공격 분석부에서 섀플리 값에 기초하여 특징들 중 적어도 하나를 주요 특징으로 결정하고, 주요 특 징을 하나 이상 포함하는 주요 특징 정보를 생성할 수 있다. 구체적으로, 공격 분석부는 전술한 바와 같 이 사전 결정된 기준 섀플리 값보다 높은 섀플리 값을 가지는 특징들을 주요 특징으로 결정할 수 있다. 또한, 공격 분석부는 가장 높은 섀플리 값의 순서대로 특징들을 배열하고 사전 결정된 기준 개수만큼 추출하여 주요 특징으로 결정할 수도 있다. 추가적으로, 공격 분석부에서 특징들 각각의 섀플리 값을 나타내는 시각화 분석 정보를 생성할 수 있다. 구체적으로, 공격 분석부는 섀플리 값을 산출한 특징들 각각에 대해 시각적으로 표현한 시각화 분석 정보 를 생성할 수 있다. 또한, 공격 분석부는 특징들 중 주요 특징들의 섀플리 값을 시각화 분석 정보로 생성 할 수도 있다. 예를 들어 도 5을 참조하여 시각화 분석 정보에 대해 설명하면 다음과 같다. 도 5는 본 개시의 일 실시예에 따라 시각화 분석 정보를 예시적으로 나타낸 예시도이다. 도 5에 도시된 바에 따르면, 본 개시의 시각화 분석 정보는 왼쪽의 수직축은 주요 특징들인 flag(TCP 제어 플래 그), same_dip_icmp_ratio(N초간 수신자 IP의 ICMP 비율) 및 same_dip_dport_pkt_cnt(N초간 수신자 IP, 포트의 횟수)들을 나타내고, 아래의 수평축은 주요 특징들 각각의 섀플리 값을 나타내는 막대 그래프일 수 있다. 도 5 에 도시된 그래프는 시각화 분석 정보의 예시일 뿐, 본 개시의 시각화 분석 정보가 도 5에 도시된 바에 따라 제 한되어 해석되지 않아야 할 것이다. 이와 같이, 본 개시는 결정된 공격 유형에 대해 가장 중요도가 높은 특징을 용이하게 식별할 수 있는 시각화 분 석 정보를 제공할 수 있으며, 시각화 분석 정보를 통해 식별된 공격 유형에 대한 구체적인 근거를 제시함으로써 식별된 공격 유형에 대한 신뢰도 향상 및 정확한 분석을 도모할 수 있다. 본 개시의 일 실시예에 따르면, 공격 차단부에서 주요 특징 정보에 기초하여 공격 차단 정보를 생성할 수 있다. 구체적으로, 프로세서는 공격 차단 정보를 생성하도록 공격 분석부에서 생성한 주요 특징 정 보를 공격 차단부에 입력할 수 있다. 공격 차단부는 주요 특징 정보에 포함된 주요 특징에 대한 조 건 정보를 생성할 수 있다. 또한, 공격 차단부는 조건 정보에 기초하여 네트워크 관련 제어 동작을 수행 하기 위한 행동 정보를 생성할 수 있다. 여기서 네트워크 관련 제어 동작은 네트워크 차단 또는 연결 유지 등과 같은 네트워크 연결 또는 패킷 처리와 관련된 제어 동작일 수 있다. 이에 따라, 공격 차단부는 조건 정보 및 행동 정보를 포함하는 공격 차단 정보를 생성할 수 있다. 즉, 공격 차단 정보는 조건 정보의 조건들을 만족하는 주요 특징들을 포함하는 패킷 데이터 또는 네트워크에 대 해서, 행동 정보의 네트워크 제어 또는 패킷 데이터 처리 동작을 수행하도록 하는 정보일 수 있다. 예를 들어, 본 개시의 공격 차단 정보는 일반적인 IT 공격 차단 규칙인 snort rule에 대한 정보일 수 있으며, 도 6을 참조 하여 자세히 설명하면 다음과 같다. 도 6은 본 개시의 일 실시예에 따라 공격 차단 정보에 대해 예시적으로 나타낸 예시도이다. 구체적으로, 도 6은 snort rule에 대응하는 공격 차단 정보에 대해 예시적으로 나타내고 있다. 도 6에 도시된 바에 따르면, 공격 차단 정보의 행동 정보는 네트워크 차단(drop)에 대한 정보를 포함하고 있 다. 또한, 조건 정보는 주요 특징 정보에 포함된 주요 특징과 관련하여 수신자 및 송신자의 IP 주소, port 번호, 패킷 방향 및 프로토콜에 대한 정보를 포함하고 있다. 추가적으로, 공격 차단 정보는 옵션 정보를 더 포함할 수도 있다. 옵션 정보는 추가적인 기타 행동 정보이며, 주요 특징에서 [01..a5]의 문자열을 검색하고, 그리고\"DDoS Packet\"이라는 메시지를 출력하는 추가 행동 정보를 포함할 수 있다. 도 6에 도시된 바와 같이, 행동 정보 및 조건 정보는 룰 헤더 (rule header)에 대응하고, 옵션 정보는 snort rule의 룰 옵션(rule option)에 대응하는 것으로 볼 수 있 다. 전술한 도 6은 예시일 뿐, 전술한 도 6로 인해 본 개시의 공격 차단 정보가 제한되어 해석되지 않아야 할 것이다. 이와 같이, 본 발명은 IoT 네트워크에 대한 공격 유형을 식별할 뿐만 아니라, 식별된 공격 유형에 대한 구체적 인 패킷 데이터의 특징 정보를 제공할 수 있고, 그리고 식별된 공격 유형에 대응하는 공격 차단까지 자동으로 수행될 수 있다는 현저한 효과를 가진다. 도 7은 본 개시의 일 실시예에 따라 IoT 네트워크에 대한 공격을 차단 방법에 대한 순서도를 도시한다. 본 개시의 일 실시예에 따르면, IoT 네트워크에 대한 하나 이상의 패킷 데이터를 공격 판별부에 입력하여 네트 워크에 대한 공격의 공격 상황 정보를 생성할 수 있다. 본 개시의 일 실시예에 따르면, 공격 상황 정보에 기초하여 공격 분석부에서 공격에 대한 주요 특징 정보를 생 성할 수 있다. 본 개시의 일 실시예에 따르면, 공격 차단부에서 주요 특징 정보에 기초하여 공격 차단 정보를 생성할 수 있다 . 전술한 도 7에 도시된 단계들은 필요에 의해 순서가 변경될 수 있으며, 적어도 하나 이상의 단계가 생략 또는 추가될 수 있다. 즉, 전술한 단계는 본 개시의 일 실시예에 불과할 뿐, 본 개시의 권리 범위는 이에 제한되지 않는다 도 8은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도 시한다. 본 개시가 일반적으로 컴퓨팅 장치에 의해 구현될 수 있는 것으로 전술되었지만, 당업자라면 본 개시가 하나 이 상의 컴퓨터 상에서 실행될 수 있는 컴퓨터 실행가능 명령어 및/또는 기타 프로그램 모듈들과 결합되어 및/또는 하드웨어와 소프트웨어의 조합으로써 구현될 수 있다는 것을 잘 알 것이다. 일반적으로, 프로그램 모듈은 특정의 태스크를 수행하거나 특정의 추상 데이터 유형을 구현하는 루틴, 프로그램, 컴포넌트, 데이터 구조, 기타 등등을 포함한다. 또한, 당업자라면 본 개시의 방법이 단일-프로세서 또는 멀티프로세서 컴퓨터 시스템, 미니컴퓨터, 메인프레임 컴퓨터는 물론 퍼스널 컴퓨터, 핸드헬드(handheld) 컴퓨팅 장치, 마이크로프로세서-기반 또는 프로그램가능 가전 제품, 기타 등등(이들 각각은 하나 이상의 연관된 장치와 연결되어 동작할 수 있음)을 비롯한 다른 컴퓨터 시스템 구성으로 실시될 수 있다는 것을 잘 알 것이다. 본 개시의 설명된 실시예들은 또한 어떤 태스크들이 통신 네트워크를 통해 연결되어 있는 원격 처리 장치들에 의해 수행되는 분산 컴퓨팅 환경에서 실시될 수 있다. 분산 컴퓨팅 환경에서, 프로그램 모듈은 로컬 및 원격 메 모리 저장 장치 둘 다에 위치할 수 있다. 컴퓨터는 통상적으로 다양한 컴퓨터 판독가능 매체를 포함한다. 컴퓨터에 의해 액세스 가능한 매체는 그 어떤 것이든지 컴퓨터 판독가능 매체가 될 수 있고, 이러한 컴퓨터 판독가능 매체는 휘발성 및 비휘발성 매체, 일시 적(transitory) 및 비일시적(non-transitory) 매체, 이동식 및 비-이동식 매체를 포함한다. 제한이 아닌 예로서, 컴퓨터 판독가능 매체는 컴퓨터 판독가능 저장 매체 및 컴퓨터 판독가능 전송 매체를 포함할 수 있다. 컴퓨터 판독가능 저장 매체는 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터와 같은 정보를 저장하는 임의의 방법 또는 기술로 구현되는 휘발성 및 비휘발성 매체, 일시적 및 비-일시적 매체, 이동 식 및 비이동식 매체를 포함한다. 컴퓨터 판독가능 저장 매체는 RAM, ROM, EEPROM, 플래시 메모리 또는 기타 메 모리 기술, CD-ROM, DVD(digital video disk) 또는 기타 광 디스크 저장 장치, 자기 카세트, 자기 테이프, 자 기 디스크 저장 장치 또는 기타 자기 저장 장치, 또는 컴퓨터에 의해 액세스될 수 있고 원하는 정보를 저장하는 데 사용될 수 있는 임의의 기타 매체를 포함하지만, 이에 한정되지 않는다. 컴퓨터 판독가능 전송 매체는 통상적으로 반송파(carrier wave) 또는 기타 전송 메커니즘(transport mechanis m)과 같은 피변조 데이터 신호(modulated data signal)에 컴퓨터 판독가능 명령어, 데이터 구조, 프로그램 모듈 또는 기타 데이터 등을 구현하고 모든 정보 전달 매체를 포함한다. 피변조 데이터 신호라는 용어는 신호 내에 정보를 인코딩하도록 그 신호의 특성들 중 하나 이상을 설정 또는 변경시킨 신호를 의미한다. 제한이 아닌 예로 서, 컴퓨터 판독가능 전송 매체는 유선 네트워크 또는 직접 배선 접속(direct-wired connection)과 같은 유선 매체, 그리고 음향, RF, 적외선, 기타 무선 매체와 같은 무선 매체를 포함한다. 상술된 매체들 중 임의의 것의 조합도 역시 컴퓨터 판독가능 전송 매체의 범위 안에 포함되는 것으로 한다. 컴퓨터를 포함하는 본 개시의 여러가지 측면들을 구현하는 예시적인 환경이 나타내어져 있으며, 컴 퓨터는 처리 장치, 시스템 메모리 및 시스템 버스를 포함한다. 시스템 버스는 시스템 메모리(이에 한정되지 않음)를 비롯한 시스템 컴포넌트들을 처리 장치에 연결시킨다. 처리 장치는 다양한 상용 프로세서들 중 임의의 프로세서일 수 있다. 듀얼 프로세서 및 기타 멀티프로세서 아 키텍처도 역시 처리 장치로서 이용될 수 있다. 시스템 버스는 메모리 버스, 주변장치 버스, 및 다양한 상용 버스 아키텍처 중 임의의 것을 사용하는 로 컬 버스에 추가적으로 상호 연결될 수 있는 몇 가지 유형의 버스 구조 중 임의의 것일 수 있다. 시스템 메모리 는 판독 전용 메모리(ROM) 및 랜덤 액세스 메모리(RAM)를 포함한다. 기본 입/출력 시스템 (BIOS)은 ROM, EPROM, EEPROM 등의 비휘발성 메모리에 저장되며, 이 BIOS는 시동 중과 같은 때에 컴퓨터 내의 구성요소들 간에 정보를 전송하는 일을 돕는 기본적인 루틴을 포함한다. RAM은 또한 데이터를 캐싱하기 위한 정적 RAM 등의 고속 RAM을 포함할 수 있다. 컴퓨터는 또한 내장형 하드 디스크 드라이브(HDD)(예를 들어, EIDE, SATA)－이 내장형 하드 디스크 드라이브는 또한 적당한 섀시(도시 생략) 내에서 외장형 용도로 구성될 수 있음－, 자기 플로피 디스크 드라이브(FDD)(예를 들어, 이동식 디스켓으로부터 판독을 하거나 그에 기록을 하기 위한 것임), 및 광 디스크 드라이브(예를 들어, CD-ROM 디스크를 판독하거나 DVD 등의 기타 고용량 광 매체로부터 판독을 하거나 그에 기록을 하기 위한 것임)를 포함한다. 하드 디스크 드라이브, 자기 디스크 드라이브 및 광 디스크 드라이브는 각각 하드 디스크 드라이브 인터페이스, 자기 디스크 드라이브 인 터페이스 및 광 드라이브 인터페이스에 의해 시스템 버스에 연결될 수 있다. 외장형 드라이 브 구현을 위한 인터페이스는 USB(Universal Serial Bus) 및 IEEE 1394 인터페이스 기술 중 적어도 하나 또는 그 둘 다를 포함한다. 이들 드라이브 및 그와 연관된 컴퓨터 판독가능 매체는 데이터, 데이터 구조, 컴퓨터 실행가능 명령어, 기타 등 등의 비휘발성 저장을 제공한다. 컴퓨터의 경우, 드라이브 및 매체는 임의의 데이터를 적당한 디지털 형 식으로 저장하는 것에 대응한다. 상기에서의 컴퓨터 판독가능 매체에 대한 설명이 HDD, 이동식 자기 디스크, 및 CD 또는 DVD 등의 이동식 광 매체를 언급하고 있지만, 당업자라면 집 드라이브(zip drive), 자기 카세트, 플래 쉬 메모리 카드, 카트리지, 기타 등등의 컴퓨터에 의해 판독가능한 다른 유형의 매체도 역시 예시적인 운영 환 경에서 사용될 수 있으며 또 임의의 이러한 매체가 본 개시의 방법들을 수행하기 위한 컴퓨터 실행가능 명령어 를 포함할 수 있다는 것을 잘 알 것이다. 운영 체제, 하나 이상의 애플리케이션 프로그램, 기타 프로그램 모듈 및 프로그램 데이터 를 비롯한 다수의 프로그램 모듈이 드라이브 및 RAM에 저장될 수 있다. 운영 체제, 애플리케이션, 모듈 및/또는 데이터의 전부 또는 그 일부분이 또한 RAM에 캐싱될 수 있다. 본 개시가 여러가지 상업적으 로 이용가능한 운영 체제 또는 운영 체제들의 조합에서 구현될 수 있다는 것을 잘 알 것이다. 사용자는 하나 이상의 유선/무선 입력 장치, 예를 들어, 키보드 및 마우스 등의 포인팅 장치를 통 해 컴퓨터에 명령 및 정보를 입력할 수 있다. 기타 입력 장치(도시 생략)로는 마이크, IR 리모콘, 조이스 틱, 게임 패드, 스타일러스 펜, 터치 스크린, 기타 등등이 있을 수 있다. 이들 및 기타 입력 장치가 종종 시스 템 버스에 연결되어 있는 입력 장치 인터페이스를 통해 처리 장치에 연결되지만, 병렬 포트, IEEE 1394 직렬 포트, 게임 포트, USB 포트, IR 인터페이스, 기타 등등의 기타 인터페이스에 의해 연결될 수 있 다. 모니터 또는 다른 유형의 디스플레이 장치도 역시 비디오 어댑터 등의 인터페이스를 통해 시스템 버스에 연결된다. 모니터에 부가하여, 컴퓨터는 일반적으로 스피커, 프린터, 기타 등등의 기타 주 변 출력 장치(도시 생략)를 포함한다. 컴퓨터는 유선 및/또는 무선 통신을 통한 원격 컴퓨터(들) 등의 하나 이상의 원격 컴퓨터로의 논리 적 연결을 사용하여 네트워크화된 환경에서 동작할 수 있다. 원격 컴퓨터(들)는 워크스테이션, 컴퓨팅 디 바이스 컴퓨터, 라우터, 퍼스널 컴퓨터, 휴대용 컴퓨터, 마이크로프로세서-기반 오락 기기, 피어 장치 또는 기 타 통상의 네트워크 노드일 수 있으며, 일반적으로 컴퓨터에 대해 기술된 구성요소들 중 다수 또는 그 전 부를 포함하지만, 간략함을 위해, 메모리 저장 장치만이 도시되어 있다. 도시되어 있는 논리적 연결은 근 거리 통신망(LAN) 및/또는 더 큰 네트워크, 예를 들어, 원거리 통신망(WAN)에의 유선/무선 연결을 포함한다. 이러한 LAN 및 WAN 네트워킹 환경은 사무실 및 회사에서 일반적인 것이며, 인트라넷 등의 전사적 컴 퓨터 네트워크(enterprise-wide computer network)를 용이하게 해주며, 이들 모두는 전세계 컴퓨터 네트워크, 예를 들어, 인터넷에 연결될 수 있다. LAN 네트워킹 환경에서 사용될 때, 컴퓨터는 유선 및/또는 무선 통신 네트워크 인터페이스 또는 어댑터 를 통해 로컬 네트워크에 연결된다. 어댑터는 LAN에의 유선 또는 무선 통신을 용이하 게 해줄 수 있으며, 이 LAN은 또한 무선 어댑터와 통신하기 위해 그에 설치되어 있는 무선 액세스 포인트를 포함하고 있다. WAN 네트워킹 환경에서 사용될 때, 컴퓨터는 모뎀을 포함할 수 있거나, WAN 상의 통신 컴퓨팅 디바이스에 연결되거나, 또는 인터넷을 통하는 등, WAN을 통해 통신을 설정 하는 기타 수단을 갖는다. 내장형 또는 외장형 및 유선 또는 무선 장치일 수 있는 모뎀은 직렬 포트 인터 페이스를 통해 시스템 버스에 연결된다. 네트워크화된 환경에서, 컴퓨터에 대해 설명된 프로 그램 모듈들 또는 그의 일부분이 원격 메모리/저장 장치에 저장될 수 있다. 도시된 네트워크 연결이 예시 적인 것이며 컴퓨터들 사이에 통신 링크를 설정하는 기타 수단이 사용될 수 있다는 것을 잘 알 것이다.컴퓨터는 무선 통신으로 배치되어 동작하는 임의의 무선 장치 또는 개체, 예를 들어, 프린터, 스캐너, 데 스크톱 및/또는 휴대용 컴퓨터, PDA(portable data assistant), 통신 위성, 무선 검출가능 태그와 연관된 임의 의 장비 또는 장소, 및 전화와 통신을 하는 동작을 한다. 이것은 적어도 Wi-Fi 및 블루투스 무선 기술을 포함한 다. 따라서, 통신은 종래의 네트워크에서와 같이 미리 정의된 구조이거나 단순하게 적어도 3개의 장치 사이의 애드혹 통신(ad hoc communication)일 수 있다. Wi-Fi(Wireless Fidelity)는 유선 없이도 인터넷 등으로의 연결을 가능하게 해준다. Wi-Fi는 이러한 장치, 예를 들어, 컴퓨터가 실내에서 및 실외에서, 즉 기지국의 통화권 내의 아무 곳에서나 데이터를 전송 및 수신할 수 있 게 해주는 셀 전화와 같은 무선 기술이다. Wi-Fi 네트워크는 안전하고 신뢰성 있으며 고속인 무선 연결을 제공 하기 위해 IEEE 802.11(a, b, g, 기타)이라고 하는 무선 기술을 사용한다. 컴퓨터를 서로에, 인터넷에 및 유선 네트워크(IEEE 802.3 또는 이더넷을 사용함)에 연결시키기 위해 Wi-Fi가 사용될 수 있다. Wi-Fi 네트워크는 비 인가 2.4 및 5GHz 무선 대역에서, 예를 들어, 11Mbps(802.11a) 또는 54 Mbps(802.11b) 데이터 레이트로 동작하 거나, 양 대역(듀얼 대역)을 포함하는 제품에서 동작할 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 정보 및 신호들이 임의의 다양한 상이한 기술들 및 기법들을 이용하여 표현될 수 있다는 것을 이해할 것이다. 예를 들어, 위의 설명에서 참조될 수 있는 데이터, 지시들, 명 령들, 정보, 신호들, 비트들, 심볼들 및 칩들은 전압들, 전류들, 전자기파들, 자기장들 또는 입자들, 광학장들 또는 입자들, 또는 이들의 임의의 결합에 의해 표현될 수 있다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 여기에 개시된 실시예들과 관련하여 설명된 다양한 예시적인 논리 블록들, 모듈들, 프로세서들, 수단들, 회로들 및 알고리즘 단계들이 전자 하드웨어, (편의를 위해, 여기에 서 소프트웨어로 지칭되는) 다양한 형태들의 프로그램 또는 설계 코드 또는 이들 모두의 결합에 의해 구현될 수 있다는 것을 이해할 것이다. 하드웨어 및 소프트웨어의 이러한 상호 호환성을 명확하게 설명하기 위해, 다양한 예시적인 컴포넌트들, 블록들, 모듈들, 회로들 및 단계들이 이들의 기능과 관련하여 위에서 일반적으로 설명되 었다. 이러한 기능이 하드웨어 또는 소프트웨어로서 구현되는지 여부는 특정한 애플리케이션 및 전체 시스템에 대하여 부과되는 설계 제약들에 따라 좌우된다. 본 개시의 기술 분야에서 통상의 지식을 가진 자는 각각의 특정 한 애플리케이션에 대하여 다양한 방식들로 설명된 기능을 구현할 수 있으나, 이러한 구현 결정들은 본 개시의 범위를 벗어나는 것으로 해석되어서는 안 될 것이다. 여기서 제시된 다양한 실시예들은 방법, 장치, 또는 표준 프로그래밍 및/또는 엔지니어링 기술을 사용한 제조 물품(article)으로 구현될 수 있다. 용어 제조 물품은 임의의 컴퓨터-판독가능 저장장치로부터 액세스 가능한 컴퓨터 프로그램, 캐리어, 또는 매체(media)를 포함한다. 예를 들어, 컴퓨터-판독가능 저장매체는 자기 저장 장 치(예를 들면, 하드 디스크, 플로피 디스크, 자기 스트립, 등), 광학 디스크(예를 들면, CD, DVD, 등), 스마트 카드, 및 플래쉬 메모리 장치(예를 들면, EEPROM, 카드, 스틱, 키 드라이브, 등)를 포함하지만, 이들로 제한되 는 것은 아니다. 또한, 여기서 제시되는 다양한 저장 매체는 정보를 저장하기 위한 하나 이상의 장치 및/또는 다른 기계-판독가능한 매체를 포함한다. 제시된 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조는 예시적인 접근들의 일례임을 이해하도록 한 다. 설계 우선순위들에 기반하여, 본 개시의 범위 내에서 프로세스들에 있는 단계들의 특정한 순서 또는 계층 구조가 재배열될 수 있다는 것을 이해하도록 한다. 첨부된 방법 청구항들은 샘플 순서로 다양한 단계들의 엘리 먼트들을 제공하지만 제시된 특정한 순서 또는 계층 구조에 한정되는 것을 의미하지는 않는다. 제시된 실시예들에 대한 설명은 임의의 본 개시의 기술 분야에서 통상의 지식을 가진 자가 본 개시를 이용하거 나 또는 실시할 수 있도록 제공된다. 이러한 실시예들에 대한 다양한 변형들은 본 개시의 기술 분야에서 통상의 지식을 가진 자에게 명백할 것이며, 여기에 정의된 일반적인 원리들은 본 개시의 범위를 벗어남이 없이 다른 실 시예들에 적용될 수 있다. 그리하여, 본 개시는 여기에 제시된 실시예들로 한정되는 것이 아니라, 여기에 제시 된 원리들 및 신규한 특징들과 일관되는 최광의의 범위에서 해석되어야 할 것이다.도면 도면1 도면2 도면3 도면4a 도면4b 도면5 도면6 도면7 도면8"}
{"patent_id": "10-2021-0108776", "section": "도면", "subsection": "도면설명", "item": 1, "content": "다양한 양상들이 이제 도면들을 참조로 기재되며, 여기서 유사한 참조 번호들은 총괄적으로 유사한 구성요소들 을 지칭하는데 이용된다. 이하의 실시예에서, 설명 목적을 위해, 다수의 특정 세부사항들이 하나 이상의 양상들 의 총체적 이해를 제공하기 위해 제시된다. 그러나, 그러한 양상(들)이 이러한 구체적인 세부사항들 없이 실시 될 수 있음은 명백할 것이다. 도 1은 본 개시의 일 실시예에 따라 IoT 네트워크에 대한 공격을 차단하기 위한 컴퓨팅 장치의 블록 구성도이 다. 도 2는 본 개시의 일 실시예에 따라 IoT 네트워크 공격을 차단하기 위한 공격 차단 시스템을 예시적으로 나타낸 블록 구성도이다. 도 3은 본 개시의 일 실시예에 따른 예시적인 네트워크 함수를 나타낸 개략도이다. 도 4a는 본 개시의 일 실시예에 따른 오토인코더로 구성된 1차 판별 모델을 예시적으로 나타낸 예시도이다. 도 4b는 본 개시의 일 실시예에 따라 오토인코더 및 소프트맥스 레이어를 포함하는 공격 판별부에 대해 예시적 으로 나타낸 예시도이다. 도 5는 본 개시의 일 실시예에 따라 시각화 분석 정보를 예시적으로 나타낸 예시도이다. 도 6은 본 개시의 일 실시예에 따라 공격 차단 정보에 대해 예시적으로 나타낸 예시도이다. 도 7은 본 개시의 일 실시예에 따라 IoT 네트워크에 대한 공격을 차단 방법에 대한 순서도를 도시한다. 도 8은 본 개시의 일 실시예들이 구현될 수 있는 예시적인 컴퓨팅 환경에 대한 간략하고 일반적인 개략도를 도 시한다."}
