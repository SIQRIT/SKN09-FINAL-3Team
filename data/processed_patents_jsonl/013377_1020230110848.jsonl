{"patent_id": "10-2023-0110848", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2025-0029655", "출원번호": "10-2023-0110848", "발명의 명칭": "전자 장치 및 전자 장치의 제어 방법", "출원인": "삼성전자주식회사", "발명자": "강민영"}}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "제1 모델의 추론 결과를 이용하여 제2 모델을 학습하기 위한 전자 장치에 있어서,제1 모델 및 제2 모델에 대한 정보를 저장하는 메모리; 및적어도 하나의 프로세서;를 포함하고, 상기 적어도 하나의 프로세서는,상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를획득하고,상기 제1 처리율 정보 및 상기 제2 처리율 정보에 기초하여 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스와 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 식별하고,상기 식별된 제1 리소스를 상기 제1 모델의 추론 동작을 수행하기 위한 리소스로 할당하고 상기 식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하며, 상기 할당된 제1 및 제2 리소스를 통해 상기제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 적어도 하나의 프로세서는,복수의 리소스 할당 조합에 대한 정보를 식별하며, 상기 복수의 리소스 할당 조합 각각에 대해 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하고,상기 복수의 리소스 할당 조합 각각에 대한 제1 처리율 정보 및 제2 처리율 정보에 기초하여 상기 복수의 리소스 할당 조합 중 가장 빠른 처리율을 가지는 리소스 할당 조합을 식별하고, 상기 식별된 리소스 할당 조합에 기초하여 상기 제1 리소스와 상기 제2 리소스를 식별하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 적어도 하나의 프로세서는,상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하고,상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스 및 상기 제2 모델의 학습동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재식별하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제3항에 있어서,상기 적어도 하나의 프로세서는,상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작의 처리 속도를 개선하기 위하여 제1 리소스의 개수를공개특허 10-2025-0029655-3-증가시킬 수 있을지 여부를 식별하고,상기 제1 리소스의 개수를 증가시킬 수 있다고 판단되면, 상기 제1 리소스의 개수를 증가시켜 상기 제1 리소스를 재식별하며, 상기 제1 리소스의 개수를 증가시킬 수 없다고 판단되면, 상기 제2 리소스의 개수를 감소시켜상기 제2 리소스를 재식별하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제2항에 있어서,상기 적어도 하나의 프로세서는,상기 제1 모델 및 상기 제2 모델에 입력되는 데이터의 전처리 동작에 대한 제5 처리율 정보를 획득하고, 상기 제3 내지 제5 처리율 정보에 기초하여 상기 제1 모델의 추론 속도 및 제2 모델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠르다고 식별되면, 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시키는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제5항에 있어서,상기 적어도 하나의 프로세서는, 상기 제1 모델을 이용하여 추론 동작을 수행하거나 상기 제2 모델을 이용하여 학습 동작을 수행하기 위한GPU(Graphics Processing Unit); 및 상기 전처리 동작을 수행하기 위한 CPU(Central Processing Unit);를 포함하며,상기 적어도 하나의 프로세서는,상기 CPU 이외에 원격 CPU를 연결하여 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시키기 전자장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 적어도 하나의 프로세서는,상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하고,상기 제3 및 제4 처리율 정보에 기초하여 상기 제2 모델의 학습 속도가 상기 제1 모델의 추론 속도보다 느리고상기 제2 모델의 학습 속도가 임계 속도 미만이라고 판단되면, 상기 제2 모델에 포함된 파라미터를 조절하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제7항에 있어서,상기 적어도 하나의 프로세서는,상기 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 상기 제2 모델에 포함된 파라미터를 조절하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 제1 처리율 정보는,상기 제1 모델의 추론 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs(Floating-공개특허 10-2025-0029655-4-point operations per second), 상기 제1 모델의 추론 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보중 적어도 하나를 포함하며,제2 처리율 정보는,상기 제2 모델의 학습 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs, 상기 제2 모델의 학습 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함하는 전자 장치."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 전자 장치의 제어 방법에 있어서,상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를획득하는 단계;상기 제1 처리율 정보 및 상기 제2 처리율 정보에 기초하여 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스와 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 식별하는 단계; 및상기 식별된 제1 리소스를 상기 제1 모델의 추론 동작을 수행하기 위한 리소스로 할당하고 상기 식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하며, 상기 할당된 제1 리소스 및 제2 리소스를 통해 상기 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "제10항에 있어서,상기 제어 방법은,복수의 리소스 할당 조합에 대한 정보를 식별하는 단계;를 포함하며,상기 획득하는 단계는, 상기 복수의 리소스 할당 조합 각각에 대해 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하고,상기 식별하는 단계는,상기 복수의 리소스 할당 조합 각각에 대한 제1 처리율 정보 및 제2 처리율 정보에 기초하여 상기 복수의 리소스 할당 조합 중 가장 빠른 처리율을 가지는 리소스 할당 조합을 식별하는 단계; 및상기 식별된 리소스 할당 조합에 기초하여 상기 제1 리소스와 상기 제2 리소스를 식별하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제10항에 있어서,상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하는 단계; 및상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스 및 상기 제2 모델의 학습동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재식별하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 재식별하는 단계는,상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작의 처리 속도를 개선하기 위하여 제1 리소스의 개수를공개특허 10-2025-0029655-5-증가시킬 수 있을지 여부를 식별하는 단계; 및상기 제1 리소스의 개수를 증가시킬 수 있다고 판단되면, 상기 제1 리소스의 개수를 증가시켜 상기 제1 리소스를 재식별하며, 상기 제1 리소스를 증가시킬 수 없다고 판단되면, 상기 제2 리소스의 개수를 감소시켜 상기 제2리소스를 재식별하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 제1 모델 및 상기 제2 모델에 입력되는 데이터의 전처리 동작에 대한 제5 처리율 정보를 획득하는 단계;및상기 제3 내지 제5 처리율 정보에 기초하여 상기 제1 모델의 추론 속도 및 제2 모델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠르다고 식별되면, 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시키는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 전자 장치는,상기 제1 모델을 이용하여 추론 동작을 수행하거나 상기 제2 모델을 이용하여 학습 동작을 수행하기 위한GPU(Graphics Processing Unit); 및 상기 전처리 동작을 수행하기 위한 CPU(Central Processing Unit);를 포함하며,상기 증가시키는 단계는,상기 CPU 이외에 원격 CPU를 연결하여 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시키기 제어방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제10항에 있어서,상기 식별된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습하는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하는 단계; 및상기 제3 및 제4 처리율 정보에 기초하여 상기 제2 모델의 학습 속도가 상기 제1 모델의 추론 속도보다 느리고상기 제2 모델의 학습 속도가 임계 속도 미만이라고 판단되면, 상기 제2 모델에 포함된 파라미터를 조절하는 단계;를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 조절하는 단계는,상기 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 상기 제2 모델에 포함된 파라미터를 조절하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제10항에 있어서,상기 제1 처리율 정보는,상기 제1 모델의 추론 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs(Floating-point operations per second), 상기 제1 모델의 추론 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보중 적어도 하나를 포함하며,공개특허 10-2025-0029655-6-제2 처리율 정보는,상기 제2 모델의 학습 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs, 상기 제2 모델의 학습 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함하는 제어 방법."}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 전자 장치 및 이의 제어 방법이 제공된다. 본 개 시의 전자 장치는 제1 모델 및 제2 모델에 대한 정보를 저장하는 메모리 및 적어도 하나의 프로세서를 포함한다. 적어도 하나의 프로세서는, 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득한다. 적어도 하나의 프로세서는, 제1 처리율 정보 및 제2 처리율 정보에 기초하여 제1 모델 의 추론 동작을 수행하기 위한 제1 리소스와 제2 모델의 학습 동작을 수행하기 위한 제2 리소스의 식별한다. 적 어도 하나의 프로세서는, 식별된 제1 리소스를 제1 모델의 추론 동작을 수행하기 위한 리소스로 할당하고 식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하며, 할당된 제1 리소스 및 제2 리소스를 통 해 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시킬 수 있다."}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 개시는 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 전자 장치 및 이의 제어 방법에 관한 것으로, 더욱 상세하게는 제2 모델의 학습 속도를 개선시키기 위한 전자 장치 및 이의 제어 방법에 관한 것이다."}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "현재 인공지능 분야에서, 대규모의 인공지능 모델을 학습하기 위해, 많은 자원과 비용이 소요되는 상황이다. 이 러한 상황에서, 최소한의 자원 및 비용으로 높은 성능을 발휘할 수 있는 인공지능 모델의 학습 방법이 필요하다. 종래의 학습 기술은 트랜스포머(Transformer) 기반의 인공지능 모델을 중심으로 하는 병렬화 및 학습 최적화 기 술들이 중점적으로 이루어지고 있다. 이러한 학습 기술들은 특정 인공지능 모델에 대한 최적화를 위한 것으로서, 다양한 구조의 인공지능 모델에 적용하기에는 한계가 존재한다. 근래에는 지식 증류 방법과 같이, 선생 모델(teacher model)의 추론 결과를 바탕으로 학생 모델(student mode l)을 학습하는 방법이 개발되고 있다. 그러나, 지식 증류 방법의 경우, 전처리 동작, 선생 모델의 추론 동작 및 학생 모델의 학습 동작들의 처리 속도 차이로 인해 병목 현상이 발생하여 학생 모델의 학습이 늦어지는 문제가 발생하고 있다."}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "본 개시의 일 실시예에 따른, 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 전자 장치는 제1 모델 및 제2 모델에 대한 정보를 저장하는 메모리; 및 적어도 하나의 프로세서;를 포함한다. 상기 적어도 하나 의 프로세서는, 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득한다. 상기 적어도 하나의 프로세서는, 상기 제1 처리율 정보 및 상기 제2 처리율 정보에 기 초하여 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스와 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 식별한다. 상기 적어도 하나의 프로세서는, 상기 식별된 제1 리소스를 상기 제1 모델의 추론 동작 을 수행하기 위한 리소스로 할당하고 상기 식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스 로 할당하며, 상기 할당된 제1 리소스 및 제2 리소스를 통해 상기 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시킨다. 그리고, 상기 적어도 하나의 프로세서는, 복수의 리소스 할당 조합에 대한 정보를 식별하며, 상기 복수의 리소 스 할당 조합 각각에 대해 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하고, 상기 복수의 리소스 할당 조합 각각에 대한 제1 처리율 정보 및 제2 처리율 정보에 기초하여 상기 복수의 리소스 할당 조합 중 가장 높은 처리율을 가지는 리소스 할당 조합을 식별하고, 상기 식별된 리소스 할당 조합에 기초하여 상기 제1 리소스와 상기 제2 리소스를 식별할 수 있다. 또한, 상기 적어도 하나의 프로세서는, 상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시키는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하고, 상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델 의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작 을 수행하기 위한 제1 리소스 및 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재 식별할 수 있다. 그리고, 상기 적어도 하나의 프로세서는, 상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도 가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작의 처리 속도를 개선하기 위하여 제1 리소스의 개수를 증가시킬 수 있을지 여부를 식별하고, 상기 제1 리소스의 개수를 증가 시킬 수 있다고 판단되면, 상기 제1 리소스의 개수를 증가시켜 상기 제1 리소스를 재식별하며, 상기 제1 리소스 의 개수를 증가시킬 수 없다고 판단되면, 상기 제2 리소스의 개수를 감소시켜 상기 제2 리소스를 재색별할 수 있다. 또한, 상기 적어도 하나의 프로세서는, 상기 제1 모델 및 상기 제2 모델에 입력되는 데이터의 전처리 동작에 대 한 제5 처리율 정보를 획득하고, 상기 제4 및 제5 처리율 정보에 기초하여 상기 제2 모델의 학습 속도가 전처리 속도보다 임계 속도 이상 빠르다고 식별되면, 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시킬 수 있다. 그리고, 상기 적어도 하나의 프로세서는, 상기 제1 모델을 이용하여 추론 동작을 수행하거나 상기 제2 모델을 이용하여 학습 동작을 수행하기 위한 GPU(Graphics Processing Unit); 및 상기 전처리 동작을 수행하기 위한 CPU(Central Processing Unit);를 포함하며, 상기 적어도 하나의 프로세서는, 상기 CPU 이외에 원격 CPU를 연 결하여 상기 전처리 동작을 수행하기 위한 제3 리소스를 증가시킬 수 있다. 또한, 상기 적어도 하나의 프로세서는, 상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시키는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득하고, 상기 제3 및 제4 처리율 정보에 기초하여 상기 제2 모델 의 학습 속도가 상기 제1 모델의 추론 속도보다 느리고 상기 제2 모델의 학습 속도가 임계 속도 미만이라고 판 단되면, 상기 제2 모델에 포함된 파라미터를 조절할 수 있다. 그리고, 상기 적어도 하나의 프로세서는, 상기 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나 를 수행하여 상기 제2 모델에 포함된 파라미터를 조절할 수 있다. 또한, 상기 제1 처리율 정보는, 상기 제1 모델의 추론 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처 리 샘플 수, FLOPs(Floating-point operations per second), 상기 제1 모델의 추론 동작을 통해 메모리에 저장 된 데이터의 양에 대한 정보 중 적어도 하나를 포함하며, 제2 처리율 정보는, 상기 제2 모델의 학습 동작 과정 에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs, 상기 제2 모델의 학습 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따른, 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 전자 장치의 제어 방법은, 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하는 단계; 상기 제1 처리율 정보 및 상기 제2 처리율 정보에 기초하여 상기 제1 모델의 추론 동작 을 수행하기 위한 제1 리소스와 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 식별하는 단계; 및 상기 식별된 제1 리소스를 상기 제1 모델의 추론 동작을 수행하기 위한 리소스로 할당하고 상기 식별된 제2 리 소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하며, 상기 할당된 제1 리소스 및 제2 리소스를 통 해 상기 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시키는 단계;를 포함할 수 있다. 그리고, 복수의 리소스 할당 조합에 대한 정보를 식별하는 단계;를 포함하며, 상기 획득하는 단계는, 상기 복수 의 리소스 할당 조합 각각에 대해 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하고, 상기 식별하는 단계는, 상기 복수의 리소스 할당 조합 각각에 대한 제1 처리율 정보 및 제2 처리율 정보에 기초하여 상기 복수의 리소스 할당 조합 중 가장 높은 처리율을 가지는 리소스 할당 조합을 식별하는 단계; 및 상기 식별된 리소스 할당 조합에 기초하여 상기 제1 리소스와 상기 제2 리소스를 식별하는 단계;를 포함할 수 있다. 또한, 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시키는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리율 정 보를 획득하는 단계; 및 상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델 의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스 및 상기 제2 모델의 학습 동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재식별하는 단계;를 포함할 수 있 다. 그리고, 상기 재식별하는 단계는, 상기 제3 및 제4 처리율 정보에 기초하여 상기 제1 모델의 추론 속도가 상기 제2 모델의 학습 속도보다 임계속도 이상 느리다고 식별되면, 상기 제1 모델의 추론 동작의 처리 속도를 개선하 기 위하여 제1 리소스의 개수를 증가시킬 수 있을지 여부를 식별하는 단계; 및 상기 제1 리소스의 개수를 증가 시킬 수 있다고 판단되면, 상기 제1 리소스의 개수를 증가시켜 상기 제1 리소스를 재식별하며, 상기 제1 리소스의 개수를 증가시킬 수 없다고 판단되면, 상기 제2 리소스의 개수를 감소시켜 상기 제2 리소스를 재식별하는 단 계;를 포함할 수 있다. 또한, 상기 제1 모델 및 상기 제2 모델에 입력되는 데이터의 전처리 동작에 대한 제5 처리율 정보를 획득하는 단계; 및 상기 제4 및 제5 처리율 정보에 기초하여 상기 제2 모델의 학습 속도가 전처리 속도보다 임계 속도 이 상 빠르다고 식별되면, 상기 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시키는 단계;를 포함할 수 있다. 그리고, 상기 전자 장치는, 상기 제1 모델을 이용하여 추론 동작을 수행하거나 상기 제2 모델을 이용하여 학습 동작을 수행하기 위한 GPU(Graphics Processing Unit); 및 상기 전처리 동작을 수행하기 위한 CPU(Central Processing Unit);를 포함하며, 상기 증가시키는 단계는, 상기 CPU 이외에 원격 CPU를 연결하여 상기 전처리 동 작을 수행하기 위한 제3 리소스를 증가시킬 수 있다. 또한, 상기 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시 키는 동안, 상기 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제4 처리 율 정보를 획득하는 단계; 및 상기 제3 및 제4 처리율 정보에 기초하여 상기 제2 모델의 학습 속도가 상기 제1 모델의 추론 속도보다 느리고 상기 제2 모델의 학습 속도가 임계 속도 미만이라고 판단되면, 상기 제2 모델에 포함된 파라미터를 조절하는 단계;를 포함할 수 있다. 그리고, 상기 조절하는 단계는, 상기 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하 여 상기 제2 모델에 포함된 파라미터를 조절할 수 있다. 또한, 상기 제1 처리율 정보는, 상기 제1 모델의 추론 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처 리 샘플 수, FLOPs(Floating-point operations per second), 상기 제1 모델의 추론 동작을 통해 메모리에 저장 된 데이터의 양에 대한 정보 중 적어도 하나를 포함하며, 제2 처리율 정보는, 상기 제2 모델의 학습 동작 과정 에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, FLOPs, 상기 제2 모델의 학습 동작을 통해 메모리에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함할 수 있다. 본 개시의 일 실시예에 따른, 전자 장치의 제어 방법을 실행시키기 위한 프로그램을 포함하는 컴퓨터 판독가능 한 기록매체에 있어서, 상기 전자 장치의 제어 방법은, 상기 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 상기 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득하는 단계; 상기 제1 처리율 정보 및 상기 제2 처리 율 정보에 기초하여 상기 제1 모델의 추론 동작을 수행하기 위한 제1 리소스와 상기 제2 모델의 학습 동작을 수 행하기 위한 제2 리소스를 식별하는 단계; 및 상기 식별된 제1 리소스를 상기 제1 모델의 추론 동작을 수행하기 위한 리소스로 할당하고 상기 식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하며, 상기 할당된 제1 리소스 및 제2 리소스를 통해 상기 제1 모델의 추론 결과를 이용하여 상기 제2 모델을 학습시 키는 단계;를 포함할 수 있다."}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 실시 예들은 다양한 변환을 가할 수 있고 여러 가지 실시 예를 가질 수 있는바, 특정 실시 예들을 도면에 예 시하고 상세한 설명에 상세하게 설명하고자 한다. 그러나 이는 특정한 실시 형태에 대해 범위를 한정하려는 것 이 아니며, 본 개시의 실시 예의 다양한 변경(modifications), 균등물(equivalents), 및/또는 대체물 (alternatives)을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 구성요소에 대해서는 유 사한 참조 부호가 사용될 수 있다. 본 개시를 설명함에 있어서, 관련된 공지 기능 혹은 구성에 대한 구체적인 설명이 본 개시의 요지를 불필요하게 흐릴 수 있다고 판단되는 경우 그에 대한 상세한 설명은 생략한다. 덧붙여, 하기 실시 예는 여러 가지 다른 형태로 변형될 수 있으며, 본 개시의 기술적 사상의 범위가 하기 실시 예에 한정되는 것은 아니다. 오히려, 이들 실시 예는 본 개시를 더욱 충실하고 완전하게 하고, 당업자에게 본 개시의 기술적 사상을 완전하게 전달하기 위하여 제공되는 것이다. 본 개시에서 사용한 용어는 단지 특정한 실시 예를 설명하기 위해 사용된 것으로, 권리범위를 한정하려는 의도 가 아니다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함한다. 본 개시에서, \"가진다,\" \"가질 수 있다,\" \"포함한다,\" 또는 \"포함할 수 있다\" 등의 표현은 해당 특징(예: 수치, 기능, 동작, 또는 부품 등의 구성요소)의 존재를 가리키며, 추가적인 특징의 존재를 배제하지 않는다. 본 개시에서, \"A 또는 B,\" \"A 또는/및 B 중 적어도 하나,\" 또는 \"A 또는/및 B 중 하나 또는 그 이상\"등의 표현 은 함께 나열된 항목들의 모든 가능한 조합을 포함할 수 있다. 예를 들면, \"A 또는 B,\" \"A 및 B 중 적어도 하나,\" 또는 \"A 또는 B 중 적어도 하나\"는, 적어도 하나의 A를 포함, 적어도 하나의 B를 포함, 또는 적어도 하나의 A 및 적어도 하나의 B 모두를 포함하는 경우를 모두 지칭할 수 있다. 본 개시에서 사용된 \"제1,\" \"제2,\" \"첫째,\" 또는 \"둘째,\"등의 표현들은 다양한 구성요소들을, 순서 및/또는 중 요도에 상관없이 수식할 수 있고, 한 구성요소를 다른 구성요소와 구분하기 위해 사용될 뿐 해당 구성요소들을 한정하지 않는다. 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"(기능적으로 또는 통신적으로) 연결되 어((operatively or communicatively) coupled with/to)\" 있다거나 \"접속되어(connected to)\" 있다고 언급된 때에는, 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로 연결되거나, 다른 구성요소(예: 제3 구성요 소)를 통하여 연결될 수 있다고 이해되어야 할 것이다. 반면에, 어떤 구성요소(예: 제1 구성요소)가 다른 구성요소(예: 제2 구성요소)에 \"직접 연결되어\" 있다거나 \"직 접 접속되어\" 있다고 언급된 때에는, 상기 어떤 구성요소와 상기 다른 구성요소 사이에 다른 구성요소(예: 제3 구성요소)가 존재하지 않는 것으로 이해될 수 있다. 본 개시에서 사용된 표현 \"~하도록 구성된(또는 설정된)(configured to)\"은 상황에 따라, 예를 들면, \"~에 적합 한(suitable for),\" \"~하는 능력을 가지는(having the capacity to),\" \"~하도록 설계된(designed to),\" \"~하도 록 변경된(adapted to),\" \"~하도록 만들어진(made to),\" 또는 \"~를 할 수 있는(capable of)\"과 바꾸어 사용될 수 있다. 용어 \"~하도록 구성된(또는 설정된)\"은 하드웨어적으로 \"특별히 설계된(specifically designed to)\" 것만을 반드시 의미하지 않을 수 있다. 대신, 어떤 상황에서는, \"~하도록 구성된 장치\"라는 표현은, 그 장치가 다른 장치 또는 부품들과 함께 \"~할 수 있는\" 것을 의미할 수 있다. 예를 들면, 문구 \"A, B, 및 C를 수행하도록 구성된(또는 설정된) 프로세서\"는 해당 동작을 수행하기 위한 전용 프로세서(예: 임베디드 프로세서), 또는 메모리 장치에 저장된 하나 이상의 소프트 웨어 프로그램들을 실행함으로써, 해당 동작들을 수행할 수 있는 범용 프로세서(generic-purpose processor)(예: CPU 또는 application processor)를 의미할 수 있다. 실시 예에 있어서 '모듈' 혹은 '부'는 적어도 하나의 기능이나 동작을 수행하며, 하드웨어 또는 소프트웨어로 구현되거나 하드웨어와 소프트웨어의 결합으로 구현될 수 있다. 또한, 복수의 '모듈' 혹은 복수의 '부'는 특정 한 하드웨어로 구현될 필요가 있는 '모듈' 혹은 '부'를 제외하고는 적어도 하나의 모듈로 일체화되어 적어도 하 나의 프로세서로 구현될 수 있다. 한편, 도면에서의 다양한 요소와 영역은 개략적으로 그려진 것이다. 따라서, 본 발명의 기술적 사상은 첨부한 도면에 그려진 상대적인 크기나 간격에 의해 제한되지 않는다. 이하에서는 첨부한 도면을 참고하여 본 개시에 따른 실시 예에 대하여 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자가 용이하게 실시할 수 있도록 상세히 설명한다. 도 1은 본 개시의 일 실시예에 따른, 전자 장치의 구성을 나타내는 블록도이다. 도 1에 도시된 바와 같이, 전자 장치는 메모리 및 적어도 하나의 프로세서를 포함할 수 있다. 한편, 도 1에 도시된 전자 장치 의 구성은 일 실시예에 불과할 뿐, 전자 장치의 유형에 따라 일부 구성이 추가될 수 있음은 물론이다. 본 개시의 일 실시예에 따른 전자 장치는 서버로 구현될 수 있으나, 이는 일 실시예에 불과할 뿐, 스마트 폰, 태블릿 PC, 노트북 PC 등과 같은 사용자 단말로 구현될 수 있으며, 스마트 TV, 가전 장치, IoT 장치 등과 같은 다양한 장치 등으로 구현될 수 있다. 또한, 전자 장치가 서버로 구현되는 경우, 두 개 이상의 서버로 구현될 수 있음은 물론이다. 메모리는 전자 장치의 구성요소들의 전반적인 동작을 제어하기 위한 운영체제(OS: Operating System) 및 전자 장치의 구성요소와 관련된 인스트럭션 또는 데이터를 저장할 수 있다. 특히, 메모리는 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 기능을 수행하기 위해, 도 2에 도시된 바와 같이, 데 이터 전처리 모듈, 처리율 정보 획득 모듈, 리소스 할당 모듈 및 파라미터 조절 모듈을 포 함할 수 있다. 특히, 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 기능이 실행되면, 전자 장 치는 비휘발성 메모리에 저장되어 있는 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위한 다 양한 모듈에 대한 데이터를 휘발성 메모리로 로딩(loading)할 수 있다. 여기서, 로딩이란 적어도 하나의 프로세 서가 액세스할 수 있도록 비휘발성 메모리에 저장된 데이터를 휘발성 메모리에 불러들여 저장하는 동작을 의미한다. 또한, 메모리는 도 2에 도시된 바와 같이, 제1 모델 및 제2 모델을 저장할 수 있다. 이때, 제1 모델 및 제2 모델은 음성 인식, 자연어 이해 등과 같은 언어 모델일 수 있으나, 이는 일 실시예에 불"}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "과할 뿐, 객체 인식, 번역, 문서 요약 등과 같은 다양한 동작을 수행할 수 있는 신경망 모델일 수 있다. 특히, 제1 모델은 제2 모델보다 많은 학습 데이터를 이용하여 학습된 선생 모델(teacher model)로서, 제2 모델보다 많은 파라미터(예로, 레이어, 가중치 등)로 구성될 수 있다. 제2 모델은 제1 모델(21 0)에 비해 적은 학습 데이터를 이용하여 학습된 학생 모델(student)로서, 제1 모델보다 적은 파라미터로 구성될 수 있다. 제2 모델은 제1 모델의 추론 결과를 이용하여 학습되는 지식 증류 방법(Knowledge Distillation)을 통해 학습될 수 있다. 지식 증류 방법은 높은 예측 정확도를 가진 복잡한 선생 모델의 지식(추론 결과)을 단순 한 학생 모델에게 전달하여 학생 모델을 학습시킴으로써, 학생 모델을 선생 모델과 유사한 높은 성능을 내도록 하는 학습 방법 중 하나이다. 또한, 메모리는 제1 모델의 추론 결과를 이용하여 제2 모델을 학습시키기 위해 제1 모델 및 제2 모델에 입력하기 위한 입력 데이터를 저장할 수 있다. 한편, 메모리는 비휘발성 메모리(ex: 하드 디스크, SSD(Solid state drive), 플래시 메모리), 휘발성 메 모리(프로세서 내의 메모리도 포함할 수 있음.) 등으로 구현될 수 있다. 적어도 하나의 프로세서는 메모리에 저장된 적어도 하나의 인스트럭션에 따라 전자 장치를 제어 할 수 있다. 특히, 적어도 하나의 프로세서는 복수의 프로세서를 포함할 수 있다. 구체적으로, 복수의 프로세서는 CPU (Central Processing Unit), GPU (Graphics Processing Unit), APU (Accelerated Processing Unit), MIC (Many Integrated Core), DSP (Digital Signal Processor), NPU (Neural Processing Unit), 하드웨어 가속기 또는 머신 러닝 가속기 중 하나 이상을 포함할 수 있다. 하나 이상의 프로세서는 전자 장치의 다른 구성요소 중 하나 또는 임의의 조합을 제어할 수 있으며, 통신에 관한 동작 또는 데이터 처리를 수행할 수 있다. 하나 이상 의 프로세서는 메모리에 저장된 하나 이상의 프로그램 또는 명령어(instruction)을 실행할 수 있다. 예를 들어, 복수의 프로세서는 메모리에 저장된 하나 이상의 명령어를 실행함으로써, 본 개시의 일 실시 예에 따른 방법을수행할 수 있다. 본 개시의 일 실시예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 하나의 프로세서에 의해 수행 될 수도 있고, 복수의 프로세서에 의해 수행될 수도 있다. 즉, 일 실시예에 따른 방법에 의해 제 1 동작, 제 2 동작, 제 3 동작이 수행될 때, 제 1 동작, 제 2 동작, 및 제 3 동작 모두 제 1 프로세서에 의해 수행될 수도 있 고, 제 1 동작 및 제 2 동작은 제 1 프로세서(예를 들어, 범용 프로세서)에 의해 수행되고 제 3 동작은 제 2 프 로세서(예를 들어, 인공지능 전용 프로세서)에 의해 수행될 수도 있다. 예를 들어, 제1 모델 및 제2 모델 에 입력하기 위한 입력 데이터의 전처리 동작은 제1 프로세서(예로, CPU)에 의해 수행될 수 있으며, 제1 모델의 추론 동작 및 제2 모델의 학습 동작은 제2 프로세서(예로, GPU 혹은 NPU)에 의해 수행될 수 있다. 적어도 하나의 프로세서는 복수의 코어(예를 들어, 동종 멀티 코어 또는 이종 멀티 코어)를 포함하는 하나 이상의 멀티 코어 프로세서(multicore processor)로 구현될 수도 있다. 적어도 하나의 프로세서가 멀티 코 어 프로세서로 구현되는 경우, 멀티 코어 프로세서에 포함된 복수의 코어 각각은 캐시 메모리, 온 칩(On-chip) 메모리와 같은 프로세서 내부 메모리를 포함할 수 있으며, 복수의 코어에 의해 공유되는 공통 캐시가 멀티 코어 프로세서에 포함될 수 있다. 또한, 멀티 코어 프로세서에 포함된 복수의 코어 각각(또는 복수의 코어 중 일부) 은 독립적으로 본 개시의 일 실시예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있고, 복수의 코어 전체(또는 일부)가 연계되어 본 개시의 일 실시예에 따른 방법을 구현하기 위한 프로그램 명령을 판독하여 수행할 수도 있다. 본 개시의 일 실시예에 따른 방법이 복수의 동작을 포함하는 경우, 복수의 동작은 멀티 코어 프로세서에 포함된 복수의 코어 중 하나의 코어에 의해 수행될 수도 있고, 복수의 코어에 의해 수행될 수도 있다. 예를 들어, 일 실시예에 따른 방법에 의해 제 1 동작, 제 2 동작, 및 제 3 동작이 수행될 때, 제 1 동작, 제2 동작, 및 제3 동 작 모두 멀티 코어 프로세서에 포함된 제 1 코어에 의해 수행될 수도 있고, 제 1 동작 및 제 2 동작은 멀티 코 어 프로세서에 포함된 제 1 코어에 의해 수행되고 제 3 동작은 멀티 코어 프로세서에 포함된 제 2 코어에 의해 수행될 수도 있다. 본 개시의 실시예들에서, 프로세서는 하나 이상의 프로세서 및 기타 전자 부품들이 집적된 시스템 온 칩(SoC), 단일 코어 프로세서, 멀티 코어 프로세서, 또는 단일 코어 프로세서 또는 멀티 코어 프로세서에 포함된 코어를 의미할 수 있으며, 여기서 코어는 CPU, GPU, APU, MIC, DSP, NPU, 하드웨어 가속기 또는 기계 학습 가속기 등으 로 구현될 수 있으나, 본 개시의 실시예들이 이에 한정되는 것은 아니다 한편, 제2 모델을 학습하는 과정에서 제1 프로세서(예로, CPU)는 데이터 전처리를 수행하고, 제2 프로세서 (예로, GPU)는 제1 모델의 추론(inference) 동작 및 제2 모델의 학습(training) 동작을 수행할 수 있다. 특히, 지식 증류 방법을 이용하여 제2 모델을 학습할 때, 제2 프로세서는 제1 모델의 추론 동 작에도 사용되고 제2 모델의 학습 동작에도 사용되기 때문에, 제2 프로세서의 리소스를 할당하고, 제2 모 델의 크기를 조절하는 것이 중요하다. 본 개시의 하나 이상의 실시예에 따르면, 적어도 하나의 프로세서는 제1 모델의 추론 동작에 대한 제 1 처리율 정보 및 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득한다. 이때, 제1 처리율 정보는 제 1 모델이 추론 동작을 수행할 때 제1 모델의 추론 속도와 관련된 정보로서, 제1 모델의 추론 동 작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, 처리 능력을 수치로 나타낸 FLOPs(Floating- point operations per second), 제1 모델의 추론 동작을 통해 메모리(또는 버퍼)에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함할 수 있다. 제2 처리율 정보는 제2 모델이 학습 동작을 수행할 때 제2 모델의 학습 속도와 관련된 정보로서, 제2 모델의 학습 동작 과정에서 1 반복(iteration)당 소요시간, 시간당 처리 샘플 수, 처리 능력을 수치로 나타낸 FLOPs, 제2 모델의 학습 동작을 통해 메모리 (또는 버퍼)에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함할 수 있다. 이때, 처리율 정보는 처리 속도와 관련이 있을 수 있다. 예를 들어, 제1 모델의 추론 동작의 처리 속도가 제2 모델의 학습 동작의 처리 속도보다 빠른 경우, 제1 모델의 추론 동작의 1반복당 소요 시간이 제2 모델의 학습 동작의 1 반복당 소요 시간보다 짧거나, 제1 모델의 추론 동작의 시간당 처리 샘플 수가 제2 모델의 학습 동작의 시간당 처리 샘플 수보다 많거나, 제1 모델의 추론 동작의 FLOPs가 제2 모델 의 학습 동작의 FLOPs보다 크거나, 제1 모델의 추론 동작을 통해 메모리에 저장된 데이터 양이 제2 모 델의 학습 동작을 통해 메모리에 저장된 데이터 양보다 많을 수 있다. 그러나, 처리율 정보가 처리 속도와 관련이 있을 수 있으나, 이는 일 실시예에 불과할 뿐, 처리율 정보는 처리 성능과 관련이 있을 수 있음은 물론이다. 그리고, 적어도 하나의 프로세서는 제1 처리율 정보 및 제2 처리율 정보에 기초하여 제1 모델의 추론 동작 을 수행하기 위한 제1 리소스와 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 식별한다. 이때, 리소스는 특정 계산들 또는 태스크들과 같은 다양한 기능들을 수행하기 위한 연산 리소스(computing resource)를 포함하 며, 예로, 프로세서 또는 프로세서에 포함된 코어와 같은 하드웨어 등을 포함할 수 있다. 즉, 적어도 하나의 프 로세서는 제1 처리율 정보 및 제2 처리율 정보에 기초하여 제1 모델의 추론 동작을 수행하기 위한 프로세 서의 유형 및 개수에 대한 정보 및 제2 모델의 학습 동작을 수행하기 위한 프로세서의 유형 및 개수에 대한 정 보를 획득할 수 있다. 그리고, 적어도 하나의 프로세서는 식별된 제1 리소스 및 제2 리소스 각각을 제1 모델의 추론 동작을 수행 하기 위한 리소스 및 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당한다. 이때, 리소스를 할당하는 동작 은 리소스가 추론 동작 또는 학습 동작을 수행하기 위하여 배치되거나 구동(또는 할성화)되는 동작을 포함할 수 있다. 그리고, 적어도 하나의 프로세서는 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 제2 모델을 학습한다. 구체적으로, 적어도 하나의 프로세서는 식별된 제1 리소스를 이용하 여 제1 모델의 추론 동작을 수행할 수 있다. 또한, 적어도 하나의 프로세서는 할당된 제2 리소스를 이용하여 제2 모델의 학습 동작을 수행할 수 있다. 이때, 적어도 하나의 프로세서는 앞서 설명한 지 식 증류 방법을 이용하여 제2 모델을 학습시킬 수 있다. 하나 이상의 실시예에서, 적어도 하나의 프로세서는 제1 모델의 추론 결과를 이용하여 제2 모델(22 0)을 학습하는 동안 제1 모델 및 제2 모델의 처리율 정보를 모니터링하여 제1 모델 및 제2 모델 을 위한 리소스를 재식별할 수 있다. 구체적으로, 적어도 하나의 프로세서는 식별된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 제2 모델을 학습하는 동안, 제1 모델의 추 론 동작에 대한 제3 처리율 정보 및 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득할 수 있다. 이 때, 적어도 하나의 프로세서는 기설정된 주기로 제3 및 제4 처리율 정보를 획득할 수 있으나, 이는 일 실 시예에 불과할 뿐, 다른 이벤트에 따라 제3 및 제4 처리율 정보를 획득할 수 있다. 그리고, 적어도 하나의 프로 세서는 제3 및 제4 처리율 정보에 기초하여 제1 모델에 의해 병목 현상이 발생하였는지 여부를 식별 할 수 있다. 일 실시예로, 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계속도 이상 느리다 고 식별되면, 적어도 하나의 프로세서는 병목 현상을 해결하기 위하여 제1 모델의 추론 동작을 수행 하기 위한 제1 리소스 및 제2 모델의 학습 동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재식별할 수 있다. 하나 이상의 실시예에서, 적어도 하나의 프로세서는 제1 모델의 추론 결과를 이용하여 제2 모델(22 0)을 학습하는 동안 제1 모델 및 제2 모델의 처리율 정보를 모니터링하여 제2 모델의 학습량을 조절하기 위해, 제2 모델의 파라미터를 조절할 수 있다. 이때, 제2 모델의 파라미터는 제2 모델(22 0)을 구성하는 요소로서, 예를 들어, 가중치, 레이어 등을 포함할 수 있다. 구체적으로, 적어도 하나의 프로세 서는 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 제2 모델을 학 습하는 동안, 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 제2 모델의 학습 동작에 대한 제4 처 리율 정보를 획득할 수 있다. 그리고, 적어도 하나의 프로세서는 제3 및 제4 처리율 정보에 기초하여 제2 모델의 학습 동작이 느려지는 병목 현상이 발생하는지 여부를 식별할 수 있다. 예를 들어, 제2 모델 의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만이라고 식 별되면, 적어도 하나의 프로세서는 제2 모델에 포함된 파라미터를 조절할 수 있다. 이때, 적어도 하나의 프로세서는 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 상기 제2 모델에 포함된 파라미터를 조절할 수 있다. 이하에서는 도 2를 참조하여 본 개시에 대해 더욱 상세히 설명하기로 한다. 도 2에 도시된 바와 같이, 전자 장 치는 제1 모델, 제2 모델, 데이터 전처리 모듈, 처리율 정보 획득 모듈, 리소스 할 당 모듈 및 파라미터 조절 모듈을 포함할 수 있다. 이때, 도 2에 도시된 구성 중 적어도 하나는 전자 장치 이외의 외부 장치에 포함될 수 있다. 제1 모델는 제2 모델보다 많은 학습 데이터를 이용하여 이미 사전에 학습된 선생 모델(teacher model)이다. 이때, 제1 모델은 제2 모델보다 대용량이며 복잡한 신경망 모델일 수 있으나, 제1 모델 보다 정확한 추론 결과를 획득할 수 있다. 특히, 제1 모델은 순전파(forward propagation)를 통해 추론 동작을 수행하여 입력 데이터에 대한 결과값(또는 특징값 등)을 획득할 수 있다. 제2 모델은 제1 모델에 비해 적은 학습 데이터를 이용하여 학습된 학생 모델(student)이다. 이때, 제 2 모델은 제1 모델에 비해 낮은 정확도의 추론 결과를 획득할 수 있으나, 저용량이며 신속하게 추론 결과를 획득할 수 있다. 제2 모델은 순전파(forward propagation) 및 역전파(backword propagation)를 통 해 학습 동작을 수행할 수 있다. 이때, 제2 모델은 제1 모델의 추론 결과를 바탕으로 학습되는 지식 증류 방법을 통해 학습될 수 있다. 데이터 전처리 모듈은 제1 모델 및 제2 모델에 입력되는 입력 데이터에 대한 전처리 동작을 수 행할 수 있다. 구체적으로, 데이터 전처리 모듈은 제1 모델 및 제2 모델이 사용할 수 있도록 입 력 데이터에 대한 전처리를 수행할 수 있다. 예를 들어, 데이터 전처리 모듈은 데이터에 포함된 노이즈를 제거하거나 데이터의 크기, 형식 등을 전처리할 수 있다. 이때, 데이터 전처리 모듈은 범용 프로세서(예로, CPU)에 의해 전처리 동작을 수행할 수 있다. 처리율 정보 획득 모듈은 제1 모델이 추론 동작을 수행할 때의 처리율 정보, 제2 모델이 학습 동작을 수행할 때의 처리율 정보 및 데이터 전처리 모듈이 전처리 동작을 수행할 때의 처리율에 대한 정보 를 획득할 수 있다. 이때, 처리율 정보 획득 모듈은 제1 모델의 추론 동작을 이용하여 제2 모델을 학습시키기 이전 에 최초 리소스 식별을 위하여 처리율 정보를 획득할 수 있다. 즉, 처리율 정보 획득 모듈은 기 학습된 제 1 모델 및 제2 모델에 입력 데이터를 입력하여 기설정된 횟수 반복(iteration)동안 처리율 정보를 획 득할 수 있다. 또한, 처리율 정보 획득 모듈은 데이터 전처리 모듈에 대한 기설정된 횟수 반복동안 처리율 정보를 획득할 수 있다. 또한, 처리율 정보 획득 모듈은 제1 모델의 추론 동작을 이용하여 제2 모델을 학습시키는 동안 리소스 재식별 또는 제2 모델의 파라미터 조절을 위한 처리율 정보를 획득할 수 있다. 한편, 데이터 전처리 모듈에 의한 데이터를 전처리 동작은 입력 데이터 크기에 따라 소요 시간이 결정되며, 데이터 전처리가 끝난 후 제1 모델 및 제2 모델에 데이터를 전달하기 전에 다음 배치의 데 이터를 불러와 다시 전처리를 수행할 수 있다. 즉, 데이터 전처리 동작의 성능은 학습 속도에 매우 큰 영향을 줄 수 있다. 또한, 제1 모델의 추론 결과는 제2 모델의 학습에 이용되므로, 제1 모델의 추론 속 도(또는 추론 성능) 역시 학습 속도에 영향을 줄 수 있다. 뿐만 아니라, 제2 모델의 학습 동작은 순전파와 역전파를 과정을 통해 제2 모델의 가중치를 갱신하는 동작이다. 제2 모델의 학습 동작 역시 제2 모델 의 모델 구조 및 학습 데이터의 크기에 따라 상이한 학습 속도를 가질 수 있다. 즉, 데이터 전처리 동작, 제1 모델의 추론 동작 및 제2 모델의 학습 동작 중 적어도 하나의 처리 속 도가 낮아지면, 제2 모델의 학습 속도가 늦어지는 병목 현상이 발생할 수 있다. 예를 들어, 제2 모델(22 0)의 학습 속도에 비해 제1 모델의 추론 속도가 현저히 느리다면, 제2 모델을 학습하기 위한 데이터 의 제공 속도가 줄어들게 되므로, 제2 모델의 학습 속도가 감소하게 되는 병목 현상이 발생될 수 있다. 또 다른 예로, 제1 및 제2 모델(210,220)에 할당된 리소스가 최대이나 제2 모델의 구조에 의해 학습 속도가 임계값 이하로 감소하게 되면, 제2 모델의 학습 속도가 감소하게 되는 병목 현상이 발생될 수 있다. 또 다 른 예로, 데이터 전처리 속도가 학습 속도보다 느리면, 제2 모델의 학습 속도가 감소하게 되는 병목 현상 이 발생될 수 있다. 상술한 바와 같이, 다양한 병목 현상을 해결하기 위해 본 개시의 일 실시예에 따른 전자 장치는 리소스 할 당 모듈 및 파라미터 조절 모듈을 포함할 수 있다. 리소스 할당 모듈은 데이터 전처리 모듈, 제1 모델 및 제2 모델의 처리율 정보를 획득하여 데이터 전처리 모듈, 제1 모델 및 제2 모델의 리소스를 식별할 수 있다. 하나 이상의 실시예에서, 리소스 할당 모듈은 제2 모델의 학습 전에 기설정된 횟수 동안 반복을 통해 획득된 처리율 정보에 기초하여 제1 모델 및 제2 모델의 리소스를 식별할 수 있다. 이때, 리소스 할당 모듈은 복수의 리소스 할당 조합에 대한 정보를 식별할 수 있다. 이때, 리소스 할당 조 합은 데이터 전처리 모듈, 제1 모델 및 제2 모델에 대해 사전에 기할당된 리소스 조합으로서,예를 들어, 아래의 표 1과 같은 복수의 리소스 할당 조합이 저장될 수 있다. 표 1 리소스 할당 조합 데이터 전처리 모듈 제1 모델 제2 모델 First option CPU: 7 GPU: 1 GPU: 2 Second option CPU:7 GPU: 2 GPU: 3 Third option CPU: 6 GPU: 1 GPU: 2 … … … … 위의 표에 포함된 숫자는 프로세서의 사용된 개수일 수 있다.리소스 할당 모듈은 복수의 리소스 할당 조합 각각에 대해 데이터 전처리 동작에 대한 처리율 정보, 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 제2 모 델의 학습 동작에 대한 제2 처리율 정보를 획득할 수 있다. 예를 들어, 리소스 할당 모듈은 제1 리소스 할 당 조합에 대한 제1-1 처리율 정보 및 제2-1 처리율 정보를 획득할 수 있으며, 제2 리소스 할당 조합에 대한 제 1-2 처리율 정보 및 제2-2 처리율 정보를 획득할 수 있으며, 제3 리소스 할당 조합에 대한 제1-3 처리율 정보 및 제2-3 처리율 정보를 획득할 수 있다. 리소스 할당 모듈은 복수의 리소스 할당 조합 각각에 대한 전처리 동작에 대한 처리율 정보, 제1 처리율 정보 및 제2 처리율 정보에 기초하여 복수의 리소스 할당 조합 중 가장 빠른 처리율을 가지는 리소스 할당 조합 을 식별할 수 있다. 예를 들어, 리소스 할당 모듈은 상술한 제1 리소스 할당 조합 내지 제3 리소스 할당 조합 중 가장 빠른 처리율을 가지는 제2 리소스 할당 조합을 식별할 수 있다. 리소스 할당 모듈은 식별된 리소스 할당 조합에 기초하여 전처리 동작, 제1 모델의 추론 동작, 제2 모델의 학습 동작을 위한 리소스로 식별할 수 있다. 예를 들어, 리소스 할당 모듈은 제2 리소스 할당 조합에 포함된 리소스들을 데이터 전처리 동작, 제1 모델의 추론 동작, 제2 모델의 학습 동작을 위한 리소스로 식별할 수 있다. 리소스 할당 모듈은 리소스 할당 조합에서 식별된 리소스들 각각을 전처리 동작을 수행하기 위한 리소스, 제1 모델의 추론 동작을 위한 리소스 및 제2 모델의 학습 동작을 위한 리소스 로 할당할 수 있다. 하나 이상의 실시예에서, 리소스 할당 모듈은 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 제2 모델을 학습하는 동안, 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 제2 모델의 학습 동작에 대한 제4 처리율 정보를 획득할 수 있다. 그리고, 리소스 할당 모듈은 제3 및 제4 처리율 정보에 기초하여 제2 학습 속도가 느려지는 병목 현상이 발생하였는지 여부를 식별할 수 있다. 일 예로, 리소스 할당 모듈은 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계속도 이상 느린지 여부를 식별하여 제2 모델의 학습 속도가 느려지는 병목 현상이 발생하였는지 여부를 식별할 수 있 다. 다른 예로, 리소스 할당 모듈은 제1 모델의 추론 속도 또는 제2 모델의 학습 속도 중 적어 도 하나가 임계 속도 이하인지 여부를 식별하여 제2 모델의 학습 속도가 느려지는 병목 현상이 발생하였는 지 여부를 식별할 수 있다. 병목 현상이 발생하였다고 식별되면, 리소스 할당 모듈은 제1 모델의 추론 동작을 수행하기 위한 제1 리소스 및 제2 모델의 학습 동작을 수행하기 위한 제2 리소스 중 적어도 하나를 재식별할 수 있다. 일 예 로, 리소스 할당 모듈은 제1 모델의 추론 동작의 처리 속도를 개선하기 위하여 제1 리소스의 개수를 증가시킬 수 있을지 여부를 식별할 수 있다. 즉, 리소스 할당 모듈은 제1 리소스이 개수를 증가시키기 위 해 여분의 GPU가 존재하는지 여부를 식별할 수 있다. 제1 리소스의 개수를 증가시킬 수 있다고 식별되면, 리소 스 할당 모듈은 제1 리소스를 증가시켜 제1 리소스를 재식별할 수 있다. 다만, 제1 리소스의 개수를 증가 시킬 수 없다고 식별되면(즉, 제1 리소스를 증가시킬 여분의 GPU가 존재하지 않다고 식별되면), 리소스 할당 모 듈은 제2 리소스의 개수를 감소시켜 제2 리소스를 재식별할 수 있다. 리소스 할당 모듈은 재식별된 리소스들 각각을 제1 모델의 추론 동작을 수행하기 위한 리소스 및 제2 모델의 학습 동작을 수행하기 위한 리소스로 재할당할 수 있다. 그러나, 상술한 방법은 일 실시예에 불과할 뿐, 리소스 할당 모듈은 병목 현상을 해결하기 위하여, 제1 리 소스의 개수를 증가시키는 동시에 제2 리소스의 개수를 감소시킬 수 있다. 한편, 상술한 실시예에서는 리소스의 개수를 증가시키거나 감소시켜 리소스를 재식별하는 것으로 설명하였으나, 이는 일 실시예에 불과할 뿐, 리소스의 유형이나 성능을 변경하여 리소스를 재식별할 수 있다. 또한, 리소스 할당 모듈은 제1 모델 및 제2 모델에 입력되는 데이터의 전처리 동작에 대한 제5 처리율 정보를 획득할 수 있다. 그리고, 제3 내지 제5 처리율 정보에 기초하여 제1 모델의 추론 속도 및 제2 모 델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠르다고 식별되면, 리소스 할당 모듈 은 전처리 동작을 수행하기 위한 제3 리소스의 개수를 조절할 수 있다. 즉, 리소스 할당 모듈은 전처리 속 도를 증가시키기 위하여 제3 리소스의 개수를 증가시킬 수 있다. 이때, 리소스 할당 모듈은 적어도 하나의 프로세서 중 여분의 CPU를 이용하여 제3 리소스의 개수를 증가시킬 수 있으나, 이는 일 실시예에 불과할 뿐, 원격 CPU를 연결하여 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시킬 수 있다. 파라미터 조절 모듈은 제1 모델 및 제2 모델의 처리율 정보에 기초하여 제2 모델의 파라미 터를 조절할 수 있다. 파라미터 조절 모듈은 할당된 제1 리소스 및 제2 리소스를 통해 제1 모델의 추론 결과를 이용하여 제 2 모델을 학습하는 동안, 제1 모델의 추론 동작에 대한 제3 처리율 정보 및 제2 모델의 학습 동 작에 대한 제4 처리율 정보를 획득할 수 있다. 그리고, 파라미터 조절 모듈은 제3 및 제4 처리율 정보 중 적어도 하나를 이용하여 제2 모델의 학습 속도가 느려지는 병목 현상이 발생하였는지 여부를 식별할 수 있 다. 일 예로, 제3 및 제4 처리율 정보에 기초하여 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만이라고 식별되면, 파라미터 조절 모듈은 병목 현상이 발생하였다고 식별할 수 있다. 다른 예로, 제1 및 제2 리소스를 증가시킬 여분의 리소스가 존재하지 않으며, 제 2 모델의 학습 속도가 임계 속도 미만이라고 식별되면, 파라미터 조절 모듈은 병목 현상이 발생하였 다고 식별할 수 있다. 병목 현상이 발생하였다고 식별되면, 파라미터 조절 모듈은 제2 모델에 포함된 파라미터를 조절할 수 있다. 이때, 파라미터 조절 모듈은 제2 모델에 대한 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수 행하여 제2 모델에 포함된 파라미터를 조절할 수 있다. 일 예로, 파라미터 조절 모듈은 신경망 모델의 구 조나 파라미터를 조정하여 신경망 모델의 크기를 축소하는 프루닝을 수행할 수 있다. 특히, 프루닝은 신경망 모 델의 가중치들 중 중요도가 낮은 가중치 또는 그 가중치에 관한 연결을 제거하여 신경망 모델의 복잡성을 감소 시키고 연산의 효율성을 향상시킬 수 있다. 다른 예로, 파라미터 조절 모듈은 신경망 모델의 파라미터 중 일부를 고정하여 학습을 수행하는 프리징을 수행할 수 있다. 이하에서는 도 3 내지 도 9를 참조하여 본 개시의 다양한 실시예에 대해 설명하기로 한다. 도 3은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당을 설명하기 위한 흐름도이다. 이때, 정적 리소스 할당이라 함은 제2 모델의 학습 전에 제1 모델 및 제2 모델의 리소스를 식별하는 것을 의미할 수 있다. 우선, 전자 장치는 제1 모델의 제1 처리율 정보 및 제2 모델의 제2 처리율 정보를 획득한다 (S310). 구체적으로, 전자 장치는 복수의 리소스 할당 조합에 대한 정보를 식별할 수 있다. 예를 들어, 전 자 장치는 제1 리소스 할당 조합 내지 제N 리소스 할당 조합에 대한 정보를 식별할 수 있다. 복수의 리소 스 할당 조합 각각에는 전처리 동작을 수행하기 위한 리소스, 제1 모델의 추론 동작을 수행하기 위한 리소 스 및 제2 모델의 학습 동작을 수행하기 위한 리소스 정보가 포함될 수 있다. 그리고, 전자 장치는 복수의 리소스 할당 조합 각각에 대해 제1 모델의 추론 동작에 대한 제1 처리율 정보 및 제2 모델의 학습 동작에 대한 제2 처리율 정보를 획득할 수 있다. 이때, 전자 장치는 복수의 리소스 할 당 조합 각각에 대해 N 반복 동안 제1 모델의 추론 동작을 수행하여 제1 처리율 정보를 획득할 수 있으며, N 반 복 동안 제2 모델의 학습 동작을 수행하여 제2 처리율 정보를 획득할 수 있다. 그리고, 전자 장치는 제1 및 제2 처리율에 기초하여 제1 모델 및 제2 모델의 리소스를 식별한다(S320). 구 체적으로, 전자 장치는 복수의 리소스 할당 조합 각각에 대한 제1 처리율 정보 및 제2 처리율 정보에 기초 하여 복수의 리소스 할당 조합 중 가장 빠른 처리율을 가지는 리소스 할당 조합을 식별할 수 있다. 이때, 가장 빠른 처리율을 가지는 리소스 할당 조합은 제1 처리율 정보 및 제2 처리율 정보에 기초하여 제1 모델의 추 론 속도 및 제2 모델의 학습 속도가 가장 빠르다고 판단된 리소스 할당 조합을 의미할 수 있다. 한편, 하 나 이상의 실시예에 따르면, 제2 모델의 학습 속도가 제1 모델의 추론 속도에 비해 영향이 클 수 있 으므로, 전자 장치는 제2 모델의 학습 속도에 더욱 많은 가중치를 부여하여 가장 빠른 처리율을 가지는 리소스 할당 조합을 식별할 수 있다. 그리고, 전자 장치는 식별된 리소스 할당 조합에 기초하여 제1 리소스와 제2 리소스를 식별할 수 있다. 예 를 들어, 제1 내지 제N 리소스 할당 조합 중 제2 리소스 할당 조합이 가장 빠른 처리율을 가지는 리소스 할당 조합이라고 식별되면, 전자 장치는 제2 리소스 할당 조합에 포함된 제1 모델의 추론 동작을 수행하기 위한 리소스 및 제2 모델의 학습 동작을 수행하기 위한 리소스를 제1 리소스 및 제2 리소스로 식별할 수 있다. 전자 장치는 식별된 제1 리소스 및 제2 리소스 각각을 제1 모델의 추론 동작을 수행하기 위한 리소스 및 제2 모델의 학습 동작을 수행하기 위한 리소스로 할당하고, 할당된 리소스를 통해 제1 모델의 추 론 결과에 기초하여 제2 모델을 학습시킨다(S330). 즉, 전자 장치는 제1 모델의 추론 동작을 수 행하기 위한 제1 리소스 및 제2 모델의 학습 동작을 수행하기 위한 제2 리소스를 이용하여 지식 증류 방법 을 통해 제1 모델의 추론 결과에 기초하여 제2 모델을 학습시킬 수 있다. 도 4는 본 개시의 일 실시예에 따른, 처리율 정보에 따른 동적 리소스 할당을 설명하기 위한 흐름도이다. 이때, 동적 리소스 할당이라 함은 제1 모델의 추론 결과를 이용하여 제2 모델을 학습하는 동안 제1 모델 및 제2 모델의 리소스를 재식별하는 것을 의미할 수 있다. 우선, 전자 장치는 제2 모델을 학습하는 동안 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다(S410). 하나 이상의 실시예에서, 전자 장치는 제2 모델을 학습하 는 동안 기설정된 주기(예로, 1시간 등)를 통해 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리 율 정보를 획득할 수 있다. 하나 이상의 실시예에서, 제2 모델을 학습하는 동안 기설정된 이벤트(예를 들 어, 처리율 정보를 모니터링하기 위한 사용자 입력이 수신되는 이벤트, 전자 장치의 구성이 변경되는 이벤 트 등)가 발생되면, 전자 장치는 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다. 전자 장치는 제3 및 제4 처리율 정보에 기초하여 제1 모델의 추론 속도가 제2 모델의 학습 속도 보다 임계 속도 이상 느린지 여부를 식별할 수 있다(S420). 이때, 임계 속도라 함은 제1 모델의 추론 속도 와 제2 모델의 학습 속도의 차이로 인해, 제2 모델의 학습 속도를 유의미하게 감소되는 병목 현상을 발생시킬 수 있는 속도를 의미할 수 있다. 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느리다고 식별되면(S420-Y), 전자 장치는 제1 리소스의 개수 증가가 능한지 여부를 식별할 수 있다(S430). 즉, 전자 장치는 인공지능용 프로세서(예로, GPU 또는 NPU 등) 중 여분의 리소스가 존재하는지 여부를 판단하여 제1 리소스의 개수 증가가 가능한지 여부를 식별할 수 있다. 제1 리소스의 개수 증가가 가능한 것으로 식별되면(S430-Y), 전자 장치는 제1 리소스의 개수를 증가시켜 제1 리소스를 재식별할 수 있다(S440). 즉, 전자 장치는 제1 모델의 추론 동작을 수행하기 위한 인공 지능용 프로세서의 개수를 증가시키거나 인공지능용 프로세서에 포함된 코어의 개수를 증가시켜 제1 리소스를 재식별할 수 있다. 그리고, 전자 장치는 재식별된 제1 리소스를 제1 모델의 추론 동작을 수행하기 위 한 리소스로 재할당할 수 있다. 다만, 제1 리소스의 개수 증가가 불가능한 것으로 식별되면(S430-N), 전자 장치는 제2 리소스의 개수를 감 소시켜 제2 리소스를 재식별할 수 있다(S450). 전자 장치는 제2 모델의 학습 동작을 수행하는 인공지 능용 프로세서의 개수를 감소시키거나 인공지능용 프로세서에 포함된 코어의 개수를 감소시켜 제2 리소스를 재 식별할 수 있다. 그리고, 전자 장치는 재식별된 제2 리소스를 제2 모델의 학습 동작을 수행하기 위한 리소스로 재할당할 수 있다. 이때, 전자 장치는 제2 모델의 학습 동작을 수행하기 위해 감소된 인공 지능용 프로세서(또는 코어)를 다시 제1 모델의 추론 동작을 수행하기 위한 리소스로 재식별할 수 있다. 다만, 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느리지 않다고 식별되면 (S420-N), 전자 장치는 현재 할당된 리소스를 유지할 수 있다(S460). 한편, 상술한 실시예에서는 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느린 경우, 병목 현상이 발생하는 것으로 식별하여 리소스를 재할당하는 것으로 설명하였으나, 이는 일 실시예에 불 과할 뿐, 다른 방법에 의해 병목 현상이 발생하는 것을 식별할 수 있다. 예를 들어, 현재 제2 모델의 학습 속도가 이전 제2 모델의 학습 속도에 비해 임계 속도 이상 느린 경우, 병목 현상이 발생하는 것으로 식별 할 수 있다. 또 다른 예로, 현재 제2 모델의 학습 속도가 임계 속도 미만인 경우, 병목 현상이 발생하는것으로 식별할 수 있다. 도 5는 본 개시의 일 실시예에 따른, 처리율 정보에 따른 파라미터 조절을 설명하기 위한 흐름도이다. 우선, 전자 장치는 제2 모델을 학습하는 동안 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다(S510). 하나 이상의 실시예에서, 전자 장치는 제2 모델을 학습하 는 동안 기설정된 주기(예로, 1시간 등) 또는 기설정된 이벤트(예로, 처리율 정보를 모니터링하기 위한 사용자 입력이 수신되는 이벤트, 전자 장치의 구성이 변경되는 이벤트 등)를 통해 제1 모델의 제3 처리율 정 보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다. 전자 장치는 제3 및 제4 처리율 정보에 기초하여 제2 모델의 학습 속도가 제1 모델의 추론 속도 보다 느리고 제2 모델의 학습 속도가 임계 속도 미만인지 여부를 식별할 수 있다(S520). 이때, 임계 속도 는 제2 모델의 학습 속도가 현저히 저하되어 병목 현상이 발생하였음을 나타내는 속도일 수 있다. 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만이라고 식별되면(S520-Y), 전자 장치는 제2 모델에 포함된 파라미터를 조절할 수 있다(S530). 이때, 전자 장치는 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 제2 모델에 포함된 파라미터 를 조절할 수 있다. 이에 의해, 전자 장치는 제2 모델의 증가시킬 수 있게 된다 그러나, 제2 모델의 학습 속도가 제1 모델의 추론 속도 이상이거나 제2 모델의 학습 속도가 임 계 속도 이상이라고 식별되면(S520-N), 전자 장치는 제2 모델에 포함된 파라미터를 유지할 수 있다 (S540). 한편, 상술한 실시예에서는 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델(22 0)의 학습 속도가 임계 속도 미만인 경우, 병목 현상이 발생하는 것으로 식별하여 파라미터를 조절하는 것으로 설명하였으나, 이는 일 실시예에 불과할 뿐, 다른 방법에 의해 병목 현상이 발생하는 것을 식별할 수 있다. 예 를 들어, 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느린 경우, 병목 현상이 발생하는 것으 로 식별할 수 있다. 또 다른 예로, 현재 제2 모델의 학습 속도가 임계 속도 미만인 경우, 병목 현상이 발 생하는 것으로 식별할 수 있다. 도 6은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당 및 동적 리소스 할당을 설명하기 위 한 흐름도이다. 도 6에 개시된 S610 내지 S630은 도 3에 개시된 S310 내지 S330과 동일하므로, 중복되는 설명은 생략하기로 한다. 전자 장치는 S620 단계에 의해 식별된 제1 리소스 및 제2 리소스를 이용하여 제2 모델을 학습하는 동 안 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다(S640). 하나 이상 의 실시예에서, 전자 장치는 제2 모델을 학습하는 동안 기설정된 주기(예로, 1시간 등) 또는 기설정 된 이벤트(예를 들어, 처리율 정보를 모니터링하기 위한 사용자 입력이 수신되는 이벤트, 전자 장치의 구 성이 변경되는 이벤트 등)에 의해 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획 득할 수 있다. 전자 장치는 제3 및 제4 처리율 정보에 기초하여 제1 모델의 추론 속도가 제2 모델의 학습 속도 보다 임계 속도 이상 느린지 여부를 식별할 수 있다(S650). 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느리다고 식별되면(S650-Y), 전자 장치는 제1 리소스의 개수 증가가 가능한지 여부를 식별할 수 있다(S660). 제1 리소스의 개수 증가가 가능한 것으로 식별되면(S660-Y), 전자 장치는 제1 리소스의 개수를 증가시켜 제1 리소스를 재식별할 수 있다(S670). 그러나, 제1 리소스의 개수 증가가 불가능한 것으로 식별되면(S660-N), 전자 장치는 제2 리소스의 개수를 감소시켜 제2 리소스를 재식별할 수 있다(S680). 전자 장치는 제2 모델의 학습 동작을 수행하는 인공지능용 프로세서의 개수를 감소시키거나 인공지능용 프로세서에 포함된 코어의 개수를 감소시켜 제2 리소스를 재식별할 수 있다. 이때, 전자 장치는 제2 모델의 학습 동작을 수행하기 위해 감소된 인공지능용 프로세서(또는 코어)를 다시 제1 모델의 추론 동작을 수행하기 위한 리 소스로 재식별할 수 있다.다만, 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느리지 않다고 식별되면 (S650-N), 전자 장치는 현재 할당된 리소스를 유지할 수 있다(S690). 도 7은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당 및 파라미터 조절을 설명하기 위한 흐름도이다. 도 7에 개시된 S710 내지 S730은 도 3에 개시된 S310 내지 S330과 동일하므로, 중복되는 설명은 생 략하기로 한다. 전자 장치는 S720 단계에 의해 식별된 제1 리소스 및 제2 리소스를 이용하여 제2 모델을 학습하는 동 안 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다(S740). 전자 장치는 제3 및 제4 처리율 정보에 기초하여 제2 모델의 학습 속도가 제1 모델의 추론 속도 보다 느리고 제2 모델의 학습 속도가 임계 속도 미만인지 여부를 식별할 수 있다(S750). 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만이라고 식별되면(S750-Y), 전자 장치는 제2 모델에 포함된 파라미터를 조절할 수 있다(S760). 이때, 전자 장치는 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 제2 모델에 포함된 파라미터 를 조절할 수 있다. 그러나, 제2 모델의 학습 속도가 제1 모델의 추론 속도 이상이거나 제2 모델의 학습 속도가 임 계 속도 이상이라고 식별되면(S750-N), 전자 장치는 제2 모델에 포함된 파라미터를 유지할 수 있다 (S770). 도 8은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당, 동적 리소스 할당 및 파라미터 조 절을 설명하기 위한 흐름도이다. 도 8에 개시된 S810 내지 S880은 도 6에 개시된 S610 내지 S680과 동일하므로, 중복되는 설명은 생략하기로 한다. 제1 모델의 추론 속도가 제2 모델의 학습 속도보다 임계 속도 이상 느리지 않다고 식별되면(S850-N), 전자 장치는 제 3 및 제4 처리율 정보에 기초하여 제2 모델의 학습 속도가 제1 모델의 추론 속 도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만인지 여부를 식별할 수 있다(S890). 제2 모델의 학습 속도가 제1 모델의 추론 속도보다 느리고 제2 모델의 학습 속도가 임계 속도 미만이라고 식별되면(S890-Y), 전자 장치는 제2 모델에 포함된 파라미터를 조절할 수 있다(S895). 이때, 전자 장치는 프루닝, 프리징, 파라미터 튜닝 중 적어도 하나를 수행하여 제2 모델에 포함된 파라미터 를 조절할 수 있다. 그러나, 제2 모델의 학습 속도가 제1 모델의 추론 속도 이상이거나 제2 모델의 학습 속도가 임 계 속도 이상이라고 식별되면(S890-N), 전자 장치는 현재 할당된 리소스 및 제2 모델에 포함된 파라 미터를 유지할 수 있다(S897). 한편, 상술한 실시예에서는 제1 모델 및 제2 모델의 학습 속도에 기초하여 리소스 재할당 또는 제2 모델의 파라미터를 조절하는 것으로 설명하였으나, 이는 일 실시예에 불과할 뿐, 다른 방법으로 리소스 재 할당 또는 파라미터 조절 중 하나를 수행할지 여부를 식별할 수 있다. 예를 들어, 제2 모델에 병목 현상이 발생된다고 식별되면, 전자 장치는 제1 모델 및 제2 모델의 리소스가 최대로 할당되었는지 여부 를 식별할 수 있다. 제1 모델 및 제2 모델의 리소스가 최대로 할당되지 않은 것으로 식별되면, 전자 장치는 제1 모델 및 제2 모델에 대한 리소스 재식별을 수행할 수 있다. 그러나, 제1 모델 및 제2 모델의 리소스가 최대로 할당된 것으로 식별되면, 전자 장치는 제2 모델의 파라미터 조 절을 수행할 수 있다. 도 9는 본 개시의 일 실시예에 따른, 처리율 정보에 따라 전처리 동작을 수행하기 위한 리소스의 재식별을 설명 하기 위한 흐름도이다. 우선, 전자 장치는 제2 모델을 학습하는 동안 제1 모델의 제3 처리율 정보 및 제2 모델의 제4 처리율 정보를 획득할 수 있다(S910).그리고, 전자 장치는 제1 모델 및 제2 모델에 입력되는 데이터의 전처리 동작에 대한 제5 처리 율 정보를 획득할 수 있다(S920). 이때, 제 5 처리율 정보는 데이터 전처리 과정에서 1 반복(iteration)당 소요 시간, 시간당 처리 샘플 수, FLOPs(Floating-point operations per second), 데이터 전처리 동작을 통해 메모 리에 저장된 데이터의 양에 대한 정보 중 적어도 하나를 포함할 수 있다. 전자 장치는 제3 내지 제5 처리율 정보에 기초하여 제1 모델의 추론 속도 및 제2 모델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠른지 여부를 식별할 수 있다(S930). 이때, 임계 속도 는 데이터 전처리 속도에 의해 제2 모델의 학습 속도가 현저히 저하되어 병목 현상이 발생하였음을 나타내 는 속도일 수 있다. 제1 모델의 추론 속도 및 제2 모델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠르다고 식별되면(S930-Y), 전자 장치는 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시킬 수 있다(S940). 이때, 전자 장치는 전처리 동작을 수행하기 위해, 범용 프로세서(예로, CPU) 중 여분의 프로 세서(또는 코어)를 전처리 동작을 위해 할당할 수 있으나, 이는 일 실시예에 불과할 뿐, 전자 장치 내의 CPU 이외에 원격 CPU를 연결하여 전처리 동작을 수행하기 위한 제3 리소스의 개수를 증가시킬 수 있다. 다만, 제1 모델의 추론 속도 및 제2 모델의 학습 속도 중 적어도 하나가 전처리 속도보다 임계 속도 이상 빠르지 않다고 식별되면(S930-N), 전자 장치는 현재 데이터 전처리를 위한 리소스를 유지할 수 있다 (S950). 한편, 본 개시에 따른 인공지능과 관련된 기능은 전자 장치의 프로세서와 메모리를 통해 동작된다. 프로세서는 하나 또는 복수의 프로세서로 구성될 수 있다. 이때, 하나 또는 복수의 프로세서는 CPU(Central Processing Unit), GPU(Graphic Processing Unit), NPU(Neural Processing Unit) 중 적어도 하나를 포함할 수 있으나 전술한 프로세서의 예시에 한정되지 않는다. CPU는 일반 연산뿐만 아니라 인공지능 연산을 수행할 수 있는 범용 프로세서로서, 다계층 캐시(Cache) 구조를 통해 복잡한 프로그램을 효율적으로 실행할 수 있다. CPU는 순차적인 계산을 통해 이전 계산 결과와 다음 계산 결과의 유기적인 연계가 가능하도록 하는 직렬 처리 방식에 유리하다. 범용 프로세서는 전술한 CPU로 명시한 경 우를 제외하고 전술한 예에 한정되지 않는다. GPU는 그래픽 처리에 이용되는 부동 소수점 연산 등과 같은 대량 연산을 위한 프로세서로서, 코어를 대량으로 집적하여 대규모 연산을 병렬로 수행할 수 있다. 특히, GPU는 CPU에 비해 컨볼루션(Convolution) 연산 등과 같 은 병렬 처리 방식에 유리할 수 있다. 또한, GPU는 CPU의 기능을 보완하기 위한 보조 프로세서(co-processor)로 이용될 수 있다. 대량 연산을 위한 프로세서는 전술한 GPU로 명시한 경우를 제외하고 전술한 예에 한정되지 않 는다. NPU는 인공 신경망을 이용한 인공지능 연산에 특화된 프로세서로서, 인공 신경망을 구성하는 각 레이어를 하드 웨어(예로, 실리콘)로 구현할 수 있다. 이때, NPU는 업체의 요구 사양에 따라 특화되어 설계되므로, CPU나 GPU 에 비해 자유도가 낮으나, 업체가 요구하기 위한 인공지능 연산을 효율적으로 처리할 수 있다. 한편, 인공지능 연산에 특화된 프로세서로, NPU는 TPU(Tensor Processing Unit), IPU(Intelligence Processing Unit), VPU(Vision processing unit) 등과 같은 다양한 형태로 구현 될 수 있다. 인공 지능 프로세서는 전술한 NPU로 명시한 경우를 제외하고 전술한 예에 한정되지 않는다. 또한, 하나 또는 복수의 프로세서는 SoC(System on Chip)으로 구현될 수 있다. 이때, SoC에는 하나 또는 복수의 프로세서 이외에 메모리, 및 프로세서와 메모리 사이의 데이터 통신을 위한 버스(Bus)등과 같은 네트워크 인터 페이스를 더 포함할 수 있다. 전자 장치에 포함된 SoC(System on Chip)에 복수의 프로세서가 포함된 경우, 전자 장치는 복수의 프로세서 중 일부 프로세서를 이용하여 인공지능과 관련된 연산(예를 들어, 인공지능 모델의 학습(learning)이나 추론 (inference)에 관련된 연산)을 수행할 수 있다. 예를 들어, 전자 장치는 복수의 프로세서 중 컨볼루션 연산, 행 렬 곱 연산 등과 같은 인공지능 연산에 특화된 GPU, NPU, VPU, TPU, 하드웨어 가속기 중 적어도 하나를 이용하 여 인공지능과 관련된 연산을 수행할 수 있다. 다만, 이는 일 실시예에 불과할 뿐, CPU 등과 범용 프로세서를 이용하여 인공지능과 관련된 연산을 처리할 수 있음은 물론이다. 또한, 전자 장치는 하나의 프로세서에 포함된 멀티 코어(예를 들어, 듀얼 코어, 쿼드 코어 등)를 이용하여 인공 지능과 관련된 기능에 대한 연산을 수행할 수 있다. 특히, 전자 장치는 프로세서에 포함된 멀티 코어를 이용하 여 병렬적으로 컨볼루션 연산, 행렬 곱 연산 등과 같은 인공 지능 연산을 수행할 수 있다. 하나 또는 복수의 프로세서는, 메모리에 저장된 기정의된 동작 규칙 또는 인공지능 모델에 따라, 입력 데이터를 처리하도록 제어한다. 기정의된 동작 규칙 또는 인공지능 모델은 학습을 통해 만들어진 것을 특징으로 한다. 여기서, 학습을 통해 만들어진다는 것은, 다수의 학습 데이터들에 학습 알고리즘을 적용함으로써, 원하는 특성 의 기정의된 동작 규칙 또는 인공지능 모델이 만들어짐을 의미한다. 이러한 학습은 본 개시에 따른 인공지능이 수행되는 기기 자체에서 이루어질 수도 있고, 별도의 서버/시스템을 통해 이루어 질 수도 있다. 인공지능 모델은, 복수의 신경망 레이어들로 구성될 수 있다. 적어도 하나의 레이어는 적어도 하나의 가중치 (weight values)을 갖고 있으며, 이전(previous) 레이어의 연산 결과와 적어도 하나의 정의된 연산을 통해 레이 어의 연산을 수행한다. 신경망의 예로는, CNN (Convolutional Neural Network), DNN (Deep Neural Network), RNN (Recurrent Neural Network), RBM (Restricted Boltzmann Machine), DBN (Deep Belief Network), BRDNN(Bidirectional Recurrent Deep Neural Network) 및 심층 Q-네트워크 (Deep Q-Networks), Transformer가 있으며, 본 개시에서의 신경망은 명시한 경우를 제외하고 전술한 예에 한정되지 않는다. 학습 알고리즘은, 다수의 학습 데이터들을 이용하여 소정의 대상 기기(예컨대, 로봇)을 훈련시켜 소정의 대상 기기 스스로 결정을 내리거나 예측을 할 수 있도록 하는 방법이다. 학습 알고리즘의 예로는, 지도형 학습 (supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi-supervised learning) 또 는 강화 학습(reinforcement learning)이 있으며, 본 개시에서의 학습 알고리즘은 명시한 경우를 제외하고 전술 한 예에 한정되지 않는다. 한편, 본 개시의 다양한 실시 예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두개의 사용자 장치들(예: 스마트폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품(예: 다운로더블 앱(downloadable app))의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또 는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 본 개시의 다양한 실시 예에 따른 방법은 기기(machine)(예: 컴퓨터)로 읽을 수 있는 저장 매체(machine- readable storage media에 저장된 명령어를 포함하는 소프트웨어로 구현될 수 있다. 기기는 저장 매체로부터 저 장된 명령어를 호출하고, 호출된 명령어에 따라 동작이 가능한 장치로서, 개시된 실시 예들에 따른 전자 장치 (예: TV)를 포함할 수 있다. 한편, 기기로 읽을 수 있는 저장매체는, 비일시적(non-transitory) 저장매체의 형태로 제공될 수 있다. 여기서, '비일시적 저장매체'는 실재(tangible)하는 장치이고, 신호(signal)(예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구 분하지 않는다. 예로, '비일시적 저장매체'는 데이터가 임시적으로 저장되는 버퍼를 포함할 수 있다. 상기 명령이 프로세서에 의해 실행될 경우, 프로세서가 직접 또는 상기 프로세서의 제어 하에 다른 구성요소들 을 이용하여 상기 명령에 해당하는 기능을 수행할 수 있다. 명령은 컴파일러 또는 인터프리터에 의해 생성 또는 실행되는 코드를 포함할 수 있다. 이상에서는 본 개시의 바람직한 실시 예에 대하여 도시하고 설명하였지만, 본 개시는 상술한 특정의 실시 예에"}
{"patent_id": "10-2023-0110848", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "한정되지 아니하며, 청구범위에서 청구하는 본 개시의 요지를 벗어남이 없이 당해 개시가 속하는 기술분야에서 통상의 지식을 가진 자에 의해 다양한 변형실시가 가능한 것은 물론이고, 이러한 변형실시들은 본 개시의 기술 적 사상이나 전망으로부터 개별적으로 이해되어서는 안 될 것이다."}
{"patent_id": "10-2023-0110848", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 개시의 일 실시예에 따른, 전자 장치의 구성을 나타내는 블록도, 도 2는 본 개시의 일 실시예에 따른, 제2 학습 동작의 병목 현상을 해결하기 위한 구성을 나타내는 구성, 도 3은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당을 설명하기 위한 흐름도, 도 4는 본 개시의 일 실시예에 따른, 처리율 정보에 따른 동적 리소스 할당을 설명하기 위한 흐름도, 도 5는 본 개시의 일 실시예에 따른, 처리율 정보에 따른 파라미터 조절을 설명하기 위한 흐름도, 도 6은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당 및 동적 리소스 할당을 설명하기 위 한 흐름도, 도 7은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당 및 파라미터 조절을 설명하기 위한 흐름도, 도 8은 본 개시의 일 실시예에 따른, 처리율 정보에 따른 정적 리소스 할당, 동적 리소스 할당 및 파라미터 조 절을 설명하기 위한 흐름도, 그리고, 도 9는 본 개시의 일 실시예에 따른, 처리율 정보에 따라 전처리 동작을 수행하기 위한 리소스의 재할당을 설명하기 위한 흐름도이다."}
