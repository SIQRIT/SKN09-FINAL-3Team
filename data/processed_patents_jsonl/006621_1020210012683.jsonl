{"patent_id": "10-2021-0012683", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2022-0109254", "출원번호": "10-2021-0012683", "발명의 명칭": "전자 장치 및 전자 장치에서 스트로크 분석 기반 도형 인식 방법", "출원인": "삼성전자주식회사", "발명자": "곽태원"}}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,디스플레이;상기 디스플레이와 작동적으로 연결된 적어도 하나의 프로세서; 및메모리를 포함하고, 상기 메모리는, 실행 시에, 상기 적어도 하나의 프로세서가,상기 디스플레이에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하고,상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하고,상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하고, 및상기 제2 스트로크 데이터를 표시하도록 설정된 인스트럭션들을 저장하는 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 상기 스트로크 시작점에서부터 상기 제1 스트로크 궤적 상의 제1점 간의 거리가 상기 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제1점의 이전점인 제2점 간의 거리보다 작은 경우, 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제2 스트로크 데이터 표시 후 제1 터치 업되지 않고 상기 제1 터치 무브 입력이 지속되는 경우 상기 제2스트로크 데이터 표시를 중단하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터의 표시를 중단하고, 상기 제2 스트로크 데이터를 표시하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,공개특허 10-2022-0109254-3-상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터와 함께 상기 제2 스트로크 데이터를 표시하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터에 대응된 제1 펜 드로잉 옵션을 확인하고, 상기 제2 스트로크 데이터에 상기 제1 펜드로잉 옵션을 적용하여 표시하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부에 기반하여 상기 제1스트로크 궤적에 대한 도형 인식을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부에 기반하여 상기 제1스트로크 궤적과 연관된 제2 스트로크 궤적의 존재 여부를 확인하고, 상기 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하는 경우 상기 제1 스트로크 궤적과 상기 제2 스트로크 궤적의 병합에 따른 병합 스트로크 데이터에 대한 도형 인식을 수행하고,상기 병합 스트로크 데이터에 대한 도형 인식 성공에 기반하여 상기 병합 스트로크 데이터를 인식된 도형 형태에 대응하는 제3 스트로크 데이터로 변환하고,상기 제3 스트로크 데이터를 표시하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 디스플레이에 상기 제1 스트로크 궤적의 제1 스트로크 데이터 표시 중 제2 터치 다운을 확인하고, 상기 제2 터치 다운에 대한 제2 터치 업 발생에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하도록 설정된 전자 장치."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제1항에 있어서,상기 제1 터치 다운 및 상기 제1 터치 무브는 스타일러스 펜에 의한 입력이고 상기 제2 터치 다운은 사용자 손가락에 의한 입력인 전자 장치.공개특허 10-2022-0109254-4-청구항 11 전자 장치에서 스트로크 분석 기반 도형 인식 방법에 있어서,상기 전자 장치의 디스플레이에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하는 동작;상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작;상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하는 동작; 및상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,상기 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 상기 스트로크 시작점에서부터 상기 제1 스트로크 궤적 상의 제1점 간의 거리가 상기 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제1점의 이전점인 제2점 간의 거리보다 작은 경우, 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서,상기 제2 스트로크 데이터 표시 후 제1 터치 업되지 않고 상기 제1 터치 무브 입력이 지속되는 경우 상기 제2스트로크 데이터 표시를 중단하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 제1 스트로크 데이터의 표시를 중단하고, 상기 제2 스트로크 데이터를 표시하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서,상기 제1 스트로크 데이터와 함께 상기 제2 스트로크 데이터를 표시하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제11항에 있어서,상기 제1 스트로크 데이터에 대응된 제1 펜 드로잉 옵션을 확인하고, 상기 제2 스트로크 데이터에 상기 제1 펜드로잉 옵션을 적용하여 표시하는 방법."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "공개특허 10-2022-0109254-5-명령들을 저장하고 있는 비휘발성 저장 매체에 있어서, 상기 명령들은 적어도 하나의 프로세서에 의하여 실행될때에 상기 적어도 하나의 프로세서로 하여금 적어도 하나의 동작을 수행하도록 설정된 것으로서, 상기 적어도하나의 동작은, 상기 전자 장치의 디스플레이에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하는 동작;상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작;상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하는 동작; 및상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함하는 저장 매체."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제17항에 있어서,상기 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 상기 스트로크 시작점에서부터 상기 제1 스트로크 궤적 상의 제1점 간의 거리가 상기 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제1점의 이전점인 제2점 간의 거리보다 작은 경우, 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작을 포함하는 저장 매체."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제17항에 있어서,상기 제2 스트로크 데이터 표시 후 제1 터치 업되지 않고 상기 제1 터치 무브 입력이 지속되는 경우 상기 제2스트로크 데이터 표시를 중단하는 동작을 포함하는 저장 매체."}
{"patent_id": "10-2021-0012683", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "제17항에 있어서,상기 제1 스트로크 데이터에 대응된 제1 펜 드로잉 옵션을 확인하고, 상기 제2 스트로크 데이터에 상기 제1 펜드로잉 옵션을 적용하여 표시하는 동작을 포함하는 저장 매체."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 디스플레이, 상기 디스플레이와 작동적으로 연결된 적어도 하나의 프로세 서, 및 메모리를 포함하고, 상기 메모리는, 실행 시에, 상기 적어도 하나의 프로세서가, 상기 디스플레이 상의 제1 터치 다운 후 제1 터치 무브 입력에 기반하여 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하고, 상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거 리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하고, 상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하고, 및 상기 제2 스트로크 데이터 를 표시하도록 설정된 인스트럭션들을 저장할 수 있으며, 다른 다양한 실시예도 가능할 수 있다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "다양한 실시예들은 전자 장치 및 전자 장치에서 스트로크에 기반하여 도형을 인식하는 방법에 관한 것이다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "최근 스마트 폰, 태블릿 PC 또는 웨어러블 디바이스와 같은 휴대가 용이한 전자 장치의 사용이 증가하고 있으며, 사용자는 다양한 입력 수단 예를 들어, 손가락뿐만 아니라 전자 펜(예: 스타일러스 펜)과 같은 입력 도 구를 이용하여 다양한 기능을 이용할 수 있다. 스타일러스 펜을 이용한 입력 방식은 손가락을 이용한 터치 입력 방식에 비해, 보다 정밀한 터치 입력이 가능하 므로 메모 또는 스케치와 같은 필기 입력을 기반으로 하는 어플리케이션 수행 시에 보다 유용하게 적용될 수 있 다. 또한 필기 입력을 통한 컨텐츠 작성 방식은 내용 작성의 자유도가 높으며, 보다 직관적이며 신속한 입력이 가능하고, 필기한 내용에 대한 문자 인식 기술의 향상으로 인해, 그 활용성도 크게 높아지고 있다. 스타일러스 펜을 이용함으로써 사용자는 전자 장치의 화면 위에서 노트에 필기하는 것과 같이 손글씨를 입력하 거나 그림을 그릴 수 있다. 또한, 노트 어플리케이션을 통해 사용자는 그림을 그릴 수 있을 뿐만 아니라 펜의 굵기, 브러쉬, 색과 같은 펜 드로잉 옵션들을 다양하게 변경하여 드로잉 표시를 출력할 수 있다. 이와 같이 사 용자는 스타일러스 펜을 이용하여 편리하고 직관적으로 전자 장치에 입력을 제공할 수 있다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "전자 장치는 스타일러스 펜을 이용한 필기 입력에 대한 도형 인식 기능을 제공할 수 있다. 종래 전자 장치에서 는 도형 인식 기능 메뉴 진입 후, 도형 인식 대상이 되는 필기 입력을 수신한 후 수신된 필기 입력에 대해 도형 인식을 수행할 수 있다. 이러한 종래 도형 인식 기능은 사용자가 필기 중 자연스럽게(또는 자동으로) 도형 인식이 수행되도록 하는 것이 아니라 도형 인식 기능을 사용하기 위해 별도의 메뉴 진입(또는 모드 전환)을 한 후 도형 인식 대상 필기를 별 도로 입력받아 도형 인식하는 방식이므로 번거로울 수 있다. 또한 종래 도형 인식 기능은 필기 입력에 대한 도형 인식 성공 시 사용자가 필기 중인 펜의 굵기, 브러쉬, 또는 색과 같은 펜 드로잉 옵션과 관계없이 지정된 굵기, 브러쉬, 또는 색의 도형을 표시하기 때문에 인식된 도형을 사용자가 필기중인 드로잉 옵션으로 표현하지 못할 수 있다. 다양한 실시예에 따르면 사용자가 필기 시 필기 내용 중 일부에 대해 별도의 메뉴 진입 없이 자연스럽게 도형으 로 인식하여 표시할 수 있도록 하는 전자 장치 및 전자 장치에서 스트로크 분석 기반 도형 인식 방법을 제공할 수 있다. 다양한 실시예에 따르면 사용자가 필기 시 하나의 스트로크를 필기 데이터 또는 도형 중 하나로 자동으로 인식 하고 인식된 도형을 사용자 이용중인 펜의 굵기, 브러쉬, 또는 색을 포함하는 펜 드로잉 옵션에 기반하여 표시 할 수 있도록 하는 전자 장치 및 전자 장치에서 스트로크 분석 기반 도형 인식 방법을 제공할 수 있다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 디스플레이, 상기 디스플레이와 작동적으로 연결된 적어도 하나의 프로세 서, 및 메모리를 포함하고, 상기 메모리는, 실행 시에, 상기 적어도 하나의 프로세서가, 상기 디스플레이 상의 제1 터치 다운 후 제1 터치 무브 입력에 기반하여 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하고, 상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하고, 상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하고, 및 상기 제2 스트로크 데이터를 표시하도록 설정된 인스트럭션들을 저장할 수 있다. 다양한 실시예에 따르면, 전자 장치에서 스트로크 분석 기반 도형 인식 방법은 상기 전자 장치의 디스플레이에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이 터를 표시하는 동작, 상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트 로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작, 상기 도 형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변 환하는 동작, 및 상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함할 수 있다. 다양한 실시예에 따르면, 명령들을 저장하고 있는 비휘발성 저장 매체에 있어서, 상기 명령들은 적어도 하나의 프로세서에 의하여 실행될 때에 상기 적어도 하나의 프로세서로 하여금 적어도 하나의 동작을 수행하도록 설정 된 것으로서, 상기 적어도 하나의 동작은, 상기 전자 장치의 디스플레이에 제1 터치 다운 후 제1 터치 무브 입 력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하는 동작, 상기 제1 스트 로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기 반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작, 상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하는 동작, 및 상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함할 수 있다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예에 따르면 사용자가 필기 시 필기 내용 중 일부에 대해 기능 선택(또는 메뉴 선택) 없이 자연스럽 게 도형으로 인식하여 표시할 수 있도록 할 수 있다. 다양한 실시예에 따르면 사용자가 필기 시 하나의 스트로크를 필기 데이터 또는 도형 중 하나로 자동으로 인식 하고 인식된 도형을 사용자 이용중인 펜의 굵기, 브러쉬, 또는 색을 포함하는 펜 드로잉 옵션을 적용하여 표시 함으로써, 인식된 도형을 사용자가 원하는 드로잉 옵션으로 표현할 수 있도록 할 수 있다. 본 개시에서 얻을 수 있는 효과는 이상에서 언급한 효과들로 제한되지 않으며, 언급하지 않은 또 다른 효과들 은 아래의 기재로부터 본 개시가 속하는 기술 분야에서 통상의 지식을 가진 자에게 명확하게 이해될 수 있을 것 이다."}
{"patent_id": "10-2021-0012683", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 문서에서 사용된 용어들은 단지 특정한 실시예를 설명하기 위해 사용된 것으로, 다른 실시예의 범위를 한정 하려는 의도가 아닐 수 있다. 단수의 표현은 문맥상 명백하게 다르게 뜻하지 않는 한, 복수의 표현을 포함할 수 있다. 기술적이거나 과학적인 용어를 포함해서 여기서 사용되는 모든 용어들은 본 발명의 기술 분야에서 통상의 지식을 가진 자에 의해 일반적으로 이해되는 것과 동일한 의미를 가질 수 있다. 일반적으로 사용되는 사전에 정 의된 용어들은 관련 기술의 문맥상 가지는 의미와 동일 또는 유사한 의미를 가지는 것으로 해석될 수 있으며, 본 문서에서 명백하게 정의되지 않는 한, 이상적이거나 과도하게 형식적인 의미로 해석되지 않는다. 경우에 따 라서, 본 문서에서 정의된 용어일지라도 본 발명의 실시예들을 배제하도록 해석될 수 없다. 도 1은 일 실시예에 따른 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네트워크 환경에서 전자 장치는 제 1 네트워크(예: 근거리 무선 통신 네트워 크)를 통하여 전자 장치와 통신하거나, 또는 제 2 네트워크(예: 원거리 무선 통신 네트워크)를 통하 여 전자 장치 또는 서버와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 서버를 통하 여 전자 장치와 통신할 수 있다. 일 실시예에 따르면, 전자 장치는 프로세서, 메모리, 입 력 모듈, 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스 , 연결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈 , 가입자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치 에는, 이 구성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모 듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일 실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세 서는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메모리에 저장할 수 있다. 일 실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또 는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로 세서를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능 에 특화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일 실시예에 따르면, 보조 프로세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일 실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일 실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일 실시 예에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일 실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일 실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일 실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일 실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일 실시예에 따르면, 카메라 모듈은 하나 이 상의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일 실시예에 따르면, 전력 관리 모 듈은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일 실시예에 따르면, 배터 리는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일 실시예에 따르면, 통 신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제 1 네트워크 또는 제 2 네트워크와 같 은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제 2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일 실시예에 따르면, 무선 통신 모듈은 1eMBB 실현을 위한 Peak data rate(예: 20Gbps 이상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운 링크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일 실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일 실시예에 따르면, 안테나 모듈은 복수의 안테나 들(예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제 1 네트워크 또는 제 2 네트워크와 같은 통 신 네트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통 신 모듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품(예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일 실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제 1 면(예: 아래 면)에 또는 그에 인접하여 배 치되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제 2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있 는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 기기들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일 실시예에 따르면, 명령 또는 데이터는 제 2 네트워크에 연결된 서버를 통해서 전자 장치와 외부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일 실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요 청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다.전자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴 퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 기기를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일 실시예에 따르면, 외부의 전자 장치 또는 서버는 제 2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 도 2는 일 실시 예에 따른 스타일러스 펜을 포함하는 전자 장치의 사시도이다. 도 2를 참조하면, 일 실시예에 따른 전자 장치는, 도 1에 도시된 구성을 포함할 수 있으며, 스타일러스 펜 이 삽입될 수 있는 구조를 포함할 수 있다. 전자 장치는 하우징을 포함하며, 상기 하우징 의 일 부분, 예를 들면, 측면(210a)의 일 부분에는 홀을 포함할 수 있다. 전자 장치는, 상기 홀(21 1)과 연결된 수납 공간인 제1 내부 공간을 포함할 수 있으며, 스타일러스 펜은 제1 내부 공간 내에 삽입될 수 있다. 도시된 실시예에 따르면, 스타일러스 펜은, 스타일러스 펜을 전자 장치의 제1 내부 공간으로부터 꺼내기 용이하도록, 일 단부에 눌림 가능한 제1 버튼(201a)을 포함할 수 있다. 상 기 제1 버튼(201a)이 눌리면, 제1 버튼(201a)과 연계 구성된 반발 메커니즘(예를 들어, 적어도 하나의 탄성 부 재(예: 스프링)에 의한 반발 메커니즘)이 작동하여, 제1 내부 공간으로부터 스타일러스 펜이 이탈될 수 있다. 다른 실시 예에 따르면, 전자 장치는 스타일러스 펜을 전자 장치에 부착할 수 있는 구조를 포함 할 수 있다. 예를 들어, 전자 장치는 하우징의 외부에 스타일러스 펜이 부착될 수 있도록 부착 영역과 인접한 위치에 적어도 하나의 자성체를 포함할 수 있다. 스타일러스 펜은 적어도 하나의 자성체를 통해 전자 장치의 하우징의 외부에 부착될 수 있다. 또 다른 실시 예에 따르면, 스타일러스 펜은 전자 장치로 삽입 또는 부착되지 않고 별개로 구성되어 이용될 수도 있으며, 이러한 전자 장치는 스타일러스 펜이 삽입될 수 있는 구조를 포함하지 않을 수 있다. 도 3a는 일 실시예에 따른 스트로크 분석 기반 도형 인식을 수행하기 위한 전자 장치의 블럭도이다. 도 3a를 참조하면, 일 실시예에 따른 스타일러스 펜의 입력을 감지하는 표시 장치(또는 디스플레이) (예: 도 1의 표시 장치)가 전자 장치(예: 도 1의 전자 장치)에 제공될 수 있다. 표시 장치(36 0)는 데이터의 입/출력 기능을 동시에 지원할 뿐만 아니라 터치를 감지할 수 있다. 일 실시예에 따른 표시 장치는 센싱 패널 및 디스플레이 패널을 포함할 수 있다. 도 3a에서는 센싱 패널이 표시 장치에 포함되는 것으로 설명하지만, 디스플레이 패널과 레이어 구조를 이루 되 표시 장치에는 포함되지 않은 상태에서 동작할 수도 있다. 일 실시예에 따른 센싱 패널은 스타일러스 펜의 터치 입력의 위치를 검출할 수 있고, 디스플레이 패 널은 이미지를 출력할 수 있다. 일 실시예에 따른 표시 장치는 디스플레이 패널을 통해 이미지 를 출력하기 위해 디스플레이 패널을 제어하는 구동회로(미도시)를 더 포함할 수 있다. 일 실시예에 따른 센싱 패널은 스타일러스 펜이 EMR(electro-magnetic resonance) 방식을 지원하는 경우, 전자기 센서를 이용하는 EMR 방식 또는 EMI(electro-magnetic interface) 방식의 입력 패드로 구성될 수 있으며, 이는 단순히 예시적인 것으로, ECR(electrically coupled resonance) 방식 또는 다른 방식의 입력 패 드로도 구성될 수도 있다. 일 실시예에 따른 센싱 패널은 스타일러스 펜으로부터 자기장을 인가받고 이로부터 스타일러스 펜 의 위치를 검출할 수 있다. 센싱 패널은 복수의 센서를 이용하여 입력을 감지하기 위하여 상호 레이 어 구조를 이루는 하나 이상의 패널로 구성될 수 있다. 일 실시예에 따른 센싱 패널은 터치 스크린 패널(TSP)(touch screen panel)로 구현될 수 있으며, 만일 터 치 스크린 패널로 구현되는 경우에는 전극으로부터의 출력 신호에 기반하여 스타일러스 펜의 위치를 확인 할 수도 있다. 일 실시예에 따른 스타일러스 펜은 AES(active electrostatic) 방식으로 구현될 수도 있으 며, 그 구현 종류에는 제한이 없음을 당업자는 이해할 것이다. 일 실시 예에 따른 센싱 패널은 스타일러스펜외에도 인체(예: 사용자의 손가락)의 접촉 또는 근접을 감지할 수 있다. 예를 들어, 센싱 패널은 스타일러스 펜 또는 사용자의 손가락에 의한 터치 다운, 터치 무브, 또는 터치 업 입력을 감지할 수 있다. 센싱 패널은 스타일러스 펜 또는 사용자의 손가락에 의한 터치 다운, 터치 무브, 또는 터치 업 입력 에 대응하는 입력 신호를 생성하고, 이를 프로세서로 전달할 수 있다. 일 실시예에 따른 센싱 패널은 터치 다운 후 터치 무브(예: 드로잉) 입력에 기반하여 지정된 시간 간격마다 터치 포인트(3ms 간격의 터치 포인 트(예: 1초당 120 터치 포인트))를 프로세서로 전달할 수 있다. 일 실시예에 따른 디스플레이 패널은 프로세서로부터 표시 데이터를 수신하여 디스플레이할 수 있다. 예를 들면, 디스플레이 패널은 프로세서로부터 어플리케이션(예: 노트 어플리케이션)의 실행에 따른 어플리케이션 화면을 디스플레이할 수 있고, 어플리케이션 화면 상에 적어도 하나의 스트로크 데이터를 디스플 레이할 수 있다. 도 3a에 도시된 표시 장치의 구성은 일 예에 불과하며, 표시 장치를 구성하는 패널의 종류 및 개수, 패널의 상하층 위치는 전자 장치의 제조 기술에 따라 다양하게 변화될 수 있다. 일 실시 예에 따르면, 프로세서는 센싱 패널로부터 스타일러스 펜 또는 인체(예: 사용자의 손가 락)에 의한 터치 다운, 터치 무브, 또는 터치 업 입력 신호를 수신할 수 있다. 예를 들면 스타일러스 펜에 의한 터치 다운, 터치 무브, 또는 터치 업은 각각 제1 터치 다운, 제1 터치 무브, 또는 제1 터치 업일 수 있다. 예를 들면 사용자의 손가락에 의한 터치 다운, 터치 무브, 또는 터치 업은 각각 제2 터치 다운, 제2 터치 무브, 또는 제2 터치 업일 수 있다. 일 실시예에 따른 프로세서는 센싱 패널로부터 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 제1 지정된 시간 간격마다 터치 포인트(예: 3ms 간격마다 하나의 터치 포인트 또는 1초당 120 터치 포 인트들)를 수신할 수 있다. 일 실시예에 따른 프로세서는 센싱 패널로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들을 기반으로 스트로크 궤적(예: 제1 스트로크 궤적)을 확인할 수 있고, 제1 스트로크 궤 적에 따른 스트로크 데이터(예: 제1 스트로크 데이터 또는 필기 스트로크 데이터)를 디스플레이 패널에 표 시하도록 제어할 수 있다. 일 실시예에 따른 프로세서는 센싱 패널로부터 제1 터치 무브 중 제1 터치 업 입력에 기반한 제1 터치 업 신호를 수신할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 업 신호 수 신에 기반하여 제1 스트로크 데이터를 하나의 스트로크 데이터로 저장할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 중 도형 인식 트리거 발생 여 부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브 중 도형 인식 트리거 발생에 기반하여 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 일 실시 예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터의 도형 인식 성공 시 인식된 도형에 대한 스트로크 데이터(예: 제2 스트로크 데이터, 또는 도형 스트로크 데이터)를 획득하고, (제1 터치 업되지 않 은 상태에서)제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스 트로크 데이터를 함께 표시하거나, 제1 스트로크 데이터 표시 대신(예: 제1 스트로크 데이터 표시를 중단하거나 표시하지 않고) 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 및/또는 다른 옵션)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프 로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생 시 제1 스트로크 데이터 대신 제2 스트로 크 데이터를 표시한 상태에서 동작을 종료할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생하지 않고 제1 터치 무브가 지속될 시 제2 스트로크 데이터 표시를 취소(또는 중단)하고 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동 작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널 로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트 들을 수신할 수 있다. 일 실시예에 따른 프로세서는 터치 다운 포인트를 스트로크 시작점으로 저장하고, 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디 스플레이 패널에 표시하도록 제어할 수 있다. 예를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터 는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤 적에 따른 제1 스트로크 데이터를 표시하면서 제2 지정 시간 간격 마다(예: 수 ms, 또는 100ms 이내) 제1 스트 로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 현재 시점에서 제1 스트로크궤적 상의 종점, 또는 제1 점)간의 거리를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤 적의 크기가 지정된 크기보다 크고 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제1 스트로크 궤적상의 현재점으로부터 제2 지정 시간 간격 전의 점)간의 거리보다 작은지 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적의 크기가 지정된 크기보다 크고 스트로크 시작점에서부터 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점 간의 거리보다 작으면 도형 인식 트리거(예: 제1 도형 인식 트리거)를 발생할 수 있다. 예를 들면, 일 실시예에 따른 프로세서는 제1 스트로크 궤적의 크기가 지정된 크기보다 크고 스 트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점간의 거리보다 작으면 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터의 도형 인식 성공 시 인식된 도형에 대한 스트로크 데이터(예: 제2 스트로크 데이터, 또는 도형 스트로크 데이터)를 획득하고, (제1 터치 업되지 않은 상태에서)제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트 로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트로크 데이터 대신 제2 스트로크 데이터를 표시 할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 또는 다른 옵션 포함)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션 이 적용된 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표 시 중 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 종료할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생하지 않고 제1 터치 무브가 지속될 시 제2 스트로크 데이터 표시를 취소(또는 중단)하고 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널 로부터 제1 터치 다운 포인트 및 제1 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수 신할 수 있다. 일 실시예에 따른 프로세서는 터치 다운 포인트(예: 스트로크 시작점)로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널 에 표시하도록 제어할 수 있다. 예를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시 간 간격으로 업데이트되어 표시될 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제 1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 센싱 패널로부터 사용자로부터 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태)에 의한 터치 포인트를 수신하여 홀드 모 션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트가 발생되면 도형 인식 트리거(예: 제2 도형 인식 트리거)를 발생할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트가 발생되면 제1 스트로크 궤적에 따 른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터의 도형 인식 성공 시 인식된 도형에 대한 스트로크 데이터(예: 제2 스트로크 데이터, 또는 도형 스트로크 데이터)를 획득하고, (제1 터치 업되지 않은 상태에서)제2 스트로크 데이터를 표시 할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트로크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이 터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 및/또는 다른 옵션)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 동작을 종료할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생하지 않고 제1 터치 무브가 지속될 시 제2 스트로크 데이터 표시를 취소(또는 중단)하고 제1 스트로 크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널 로부터 제1 터치 다운 포인트를 수신하고 제1 터치 무브에 따라 제1 지정 시간 간격으로 터치 포인트들을 수신할 수 있다. 일 실시예에 따른 프로세서는 터치 다운 포인트(예: 스트로크 시작점)로부터 제1 지정 시 간 간격으로 수신되는 터치 포인트들에 기반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패 널에 표시하도록 제어할 수 있다. 예를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1스트로크 데이터 표시 중 홀드 모션 이벤트가 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 센싱 패널로부터 사용자로부터 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태)에 의한 터치 포인트를 수신하여 홀드 모 션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트 로크 데이터 표시 중 홀드 모션 이벤트가 발생되면 제1 스트로크 궤적과 연관된 스트로크 궤적(예: 제2 스트로 크 궤적)이 존재하는지 확인할 수 있다. 예를 들면 제1 스트로크 궤적과 연관된 제2 스트로크 궤적은 제1 스트 로크 궤적과 지정된 거리 또는 지정된 시간 간격 내에 기 입력된 스트로크 궤적일 수 있다. 일 실시예에 따른 프로세서는 홀드 모션 이벤트 발생 시 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하지 않으면, 제2 도형 인식 트리거를 발생할 수 있다. 일 실시예에 따른 프로세서는 홀드 모션 이벤트가 발생 시 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하지 않으면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터 에 대한 도형 인식을 수행하고, 도형 인식 성공 시 인식된 도형에 대한 스트로크 데이터(예: 제2 스트로크 데이 터, 또는 도형 스트로크 데이터)를 획득하고, 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세 서는 홀드 모션 이벤트 발생 시 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하면 제3 도형 인식 트리거를 발생할 수 있다. 일 실시예에 따른 프로세서는 홀드 모션 이벤트 발생 시 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하면 제1 스트로크 궤적에 따른 제1 스트로크 데이터 및 제2 스트로크 궤적에 따른 스트로크 데이터(예: 병합된 스트로크 데이터)에 대한 도형 인식을 수행하고, 도형 인식 성공 시 인식된 도형에 대한 제3 스트로크 데이터를 획득하고, 제3 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서 는 병합된 스트로크 데이터와 제3 스트로크 데이터를 함께 표시하거나, 병합된 스트로크 데이터 대신 제3 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제3 스트로크 데이터의 펜 드로잉 옵션(예: 펜 의 굵기, 브러쉬, 색, 및/또는 다른 옵션)을 병합된 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하 고, 제1 펜 드로잉 옵션이 적용된 제3 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제3 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생 시 병합된 스트로크 데이터 대신 제3 스트로크 데이터를 표시한 상태에서 종료할 수 있다. 일 실시예에 따른 프로세서는 제3 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생하지 않고 제1 터치 무브가 지속될 시 제1 스트로크 궤적에 따른 제3 스트로크 데이터 표시를 취소 (또는 중단)하고, 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있 다. 일 실시예에 따른 프로세서는 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입 력에 기반하여 센싱 패널로부터 제1 터치 다운 포인트부터 제1 지정 시간 간격으로 터치 포인트들을 수신 할 수 있다. 다른 실시예에 따르면 제2 터치 다운되지 않은 상태에서 제1 터치 다운 후 제1 터치 무브(예: 드로 잉) 입력에 기반하여 터치 포인트들을 수신하는 도중 제2 터치 다운이 확인될 수도 있다. 일 실시예에 따른 프 로세서는 제1 터치 다운 포인트(예: 스트로크 시작점)로부터 제1 지정 시간 간격으로 수신되는 터치 포인 트들에 기반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널에 표시하도록 제어할 수 있다. 예를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시 될 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 제2 터 치 다운에 대한 제2 터치 업 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤 적에 따른 제1 스트로크 데이터 표시 중 상기 제2 터치 다운에 대한 제2 터치 업 발생되면 도형 인식 트리거(예: 제4 도형 인식 트리거)를 발생할 수 있다. 다른 실시예에 따르면 프로세서는 제1 스트로크 궤 적에 따른 제1 스트로크 데이터 표시 중 제2 터치 다운이 유지된 채 제1 터치 업이 발생하면 도형 인식 트리거 를 발생할 수도 있다. 일 실시예에 따른 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 도형 인식 트 리거가 발생되면 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행하고, 도형 인식 성공 시 인식된 도형에 대한 스트로크 데이터(예: 제2 스트로크 데이터, 또는 도형 스트로크 데이터)를 획득하고, 제 2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터 를 함께 표시하거나, 제1 스트로크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서 는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 및/또는 다른 옵션)을 제1 스트로 크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표 시할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생 시 제 2 스트로크 데이터를 표시한 상태에서 동작을 종료할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터 표시 중 제1 터치 업 이벤트 발생하지 않고 제1 터치 무브가 지속될 시 제2 스트로크 데이터의 표시를 취소(또는 중단)하고 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 메모리는 전자 장치의 적어도 하나의 구성요소(예: 프로세서, 표시장치(36 0))에 의해 사용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이 와 관련된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 예를 들면, 메모리는 전자 장치 (또는 프로세서)의 동작을 수행하기 위한 인스트럭션들을 저장할 수 있다 도 3b는 일 실시예에 따른 전자 장치의 프로세서 구성을 설명하기 위한 도면이다. 도 3b를 참조하면, 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)(이하 도 2의 전자 장 치를 예를 들어 설명함)의 프로세서(예: 도 1의 프로세서)는 UI 처리 모듈(user interface processing module), 스트로크 궤적 분석 모듈(stroke trajectory analize module), 도형 인식 모듈 (shape recognition module), 및/또는 스트로크 변환 모듈(stroke conversion module)의 동작을 수 행할 수 있다. 예를 들어, UI 처리 모듈, 스트로크 궤적 분석 모듈, 도형 인식 모듈, 및/또는 스트로크 변환 모듈은 프로세서에 의해 실행되는 소프트웨어 모듈일 수 있다. 또는, UI 처리 모듈 , 스트로크 궤적 분석 모듈, 도형 인식 모듈, 및/또는 스트로크 변환 모듈은 프로세서 에 포함되거나 또는 독립적으로 존재하는 하드웨어 모듈일 수도 있다. 일 실시예에 따른 UI 처리 모듈은 어플리케이션 실행 화면을 표시하고, 어플리케이션 실행 화면 상에 스트 로크 데이터(예: 제1 스트로크 데이터, 제2 스트로크 데이터, 또는 제3 스트로크 데이터)를 표시하기 위한 처리 를 수행할 수 있다. 예를 들면, UI 처리 모듈은 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션에 기반 하여 제1 드로잉 옵션이 적용된 제1 스트로크 데이터를 표시하거나, 제2 스트로크 데이터 또는 제3 스트로크 데 이터 표시 시 제1 펜 드로잉 옵션을 적용하여 표시할 수 있다. 일 실시예에 따른 스트로크 궤적 분석 모듈은 제1 터치 다운 포인트(예: 스트로크 시작점)로부터 제1 터치 무브에 따라 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기반한 제1 스트로크 궤적을 분석할 수 있다. 일 실시예에 따른 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 분석에 기반하여 도형 인식 트리거를 발 생시킬 수 있다. 예를 들면, 스트로크 궤적 분석 모듈은 제2 지정 시간 간격 마다(예: 수 ms, 또는 100ms 이내) 제1 스트로 크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 현재 시점에서 제1 스트로크 궤 적 상의 종점, 또는 제1 점)간의 거리를 확인하여 제1 스트로크 궤적의 크기가 지정된 크기보다 크고 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이 전점(예: 제1 스트로크 궤적상의 현재점으로부터 제2 지정 시간 간격 전의 점)간의 거리보다 작은지 확인할 수 있다. 스트로크 궤적 분석 모듈은 제1 스트로크 궤적의 크기가 지정된 크기보다 크고 스트로크 시작점에서 부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 스트로크 궤적 상의 이전점 간의 거리 보다 작으면 도형 인식 트리거(예: 제1 도형 인식 트리거)를 발생시킬 수 있다. 다른 예를 들면, 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 상에 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태) 이벤트 발생 여부를 확인할 수 있다. 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 상에 홀드 모션 이벤트가 발생되면 도형 인식 트리거(예: 제2 도형 인식 트리거)를 발생시킬 수 있다. 또 다른 예를 들면, 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 상에 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태) 이벤트 발생 여부와 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재 여부를 확인할 수 있다. 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 상에 홀드 모션 이벤트가 발생된 상태에서 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하지 않는 경우, 제1 스 트로크 데이터에 대한 도형 인식 트리거(예: 제2 도형 인식 트리거)를 발생시킬 수 있다. 스트로크 궤적 분석 모듈은 제1 스트로크 궤적 상에 홀드 모션 이벤트가 발생된 상태에서 제1 스트로크 궤적과 연관된 제2 스 트로크 궤적이 존재하는 경우, 제1 스트로크 데이터 및 이전 스트로크 데이터에 대한 도형 인식 트리거(예: 제3 도형 인식 트리거)를 발생시킬 수 있다. 또 다른 예를 들면, 스트로크 궤적 분석 모듈은 제2 터치 다운된 상태에서 제1 터치 다운 포인트(예: 스트 로크 시작점)로부터 제1 터치 무브에 기반하여 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기반한 제1 스트로크 궤적 처리 중 제2 터치 업 이벤트 발생을 확인할 수 있다. 스트로크 궤적 분석 모듈은 제1 스트 로크 궤적 처리 중 제2 터치 업 이벤트 발생 시 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인 식 트리거(예: 제4 도형 인식 트리거)를 발생시킬 수 있다. 다른 실시예에 따르면 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 제2 터치 다운이 유지된 채 제1 터치 업이 발생하면 도형 인식 트 리거를 발생할 수도 있다. 일 실시예에 따른 도형 인식 모듈은 스트로크 궤적 분석 모듈의 도형 인식 트리거(예: 제1 도형 인식 트리거, 제2 도형 인식 트리거, 제3 도형 인식 트리거, 또는 제4 도형 인식 트리거) 발생에 기반하여 제1 스트 로크 궤적에 따른 도형 인식을 수행하거나 제1 스트로크 궤적과 제2 스트로크 궤적에 따른 병합 스트로크 궤적 에 대한 도형 인식을 수행할 수 있다. 예를 들면, 도형 인식 모듈은 제1 스트로크 궤적 또는 병합 스트로 크 궤적을 분석하여 분석결과에 대응된 도형 형태를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루 어진 다양한 도형 형태를 포함할 수 있다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡선 형태의 도형을 포함하거나, 직선 또는 곡선을 포함할 수 있다. 일 실시예에 따른 스트로크 변환 모듈은 제1 스트로크 궤적에 대해 인식된 제1 도형 형태에 기반하여 제1 스트로크 데이터를 인식된 제1 도형 형태의 제2 스트로크 데이터로 변환할 수 있다. 예를 들면 스트로크 변환 모듈은 제1 스트로크 데이터를 포인트들을 인식된 제1 도형 형태로 재배열하여 변환된 제2 스트로크 데이 터를 획득할 수 있다. 일 실시예에 따른, 스트로크 변환 모듈은 병합 스트로크 궤적에 대해 인식된 제2 도 형 형태에 기반하여 병합 스트로크 데이터를 인식된 제2 도형 형태의 제3 스트로크 데이터로 변환할 수 있다. 예를 들면, 스트로크 변환 모듈은 병합 스트로크 데이터의 포인트들을 인식된 제2 도형 형태로 재배열하여 변환된 제3 스트로크 데이터를 획득할 수 있다. 일 실시예에 따른 스트로크 변환 모듈은 제2 스트로크 데 이터 또는 제3 스트로크 데이터를 UI 처리 모듈에 제공하여 디스플레이 패널에 표시되도록 할 수 있 다. 이와 같이 스트로크 변환을 UI thread를 처리하는 UI 처리부가 아닌 별도의 스트로크 변환 모듈 에서 수행함으로서 UI 처리부의 처리량의 부담이 적어 UI 처리부가 터치 또는 UI 인터랙션 처리를 하 는데 딜레이가 발생하지 않도록 할 수 있다. 다양한 실시예들에 따르면 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)는 디스플레이 (예: 도 1의 표시 장치, 또는 도 3a의 표시 장치), 상기 디스플레이와 작동적으로 연결된 적어도 하 나의 프로세서(예: 도 1의 프로세서, 또는 도 3의 프로세서), 및 메모리(예: 도 1의 메모리, 또 는 도 3의 메모리)를 포함하고, 상기 메모리는, 실행 시에, 상기 적어도 하나의 프로세서가, 상기 디스플 레이에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하 고, 상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하고, 상기 도형 인식 성공에 기반 하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하고, 및 상기 제2 스트로크 데이터를 표시하도록 설정된 인스트럭션들을 저장할 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 상기 스트로크 시작점에서부터 상기 제1 스트로크 궤적 상의 제1점 간의 거리가 상기 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제1점의 이전점인 제2점 간의 거리보다 작은 경우, 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제2 스트로크 데이터 표시 후 제1 터치 업되지 않고 상기 제1 터치 무브 입력이 지속되는 경우 상기 제2 스트로크 데이터 표시를 중 단하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터의 표시를 중단하고, 상기 제2 스트로크 데이터를 표시하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터와 함께 상기 제2 스트로크 데이터를 표시하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 데이터에 대응된 제1 펜 드로잉 옵션을 확인하고, 상기 제2 스트로크 데이터에 상기 제1 펜 드로잉 옵션을 적용하여 표시 하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부에 기반하여 상기 제1 스트로크 궤적에 대한 도 형 인식을 수행하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부에 기반하여 상기 제1 스트로크 궤적과 연관된 제2 스트로크 궤적의 존재 여부를 확인하고, 상기 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하는 경우 상기 제1 스트로크 궤적과 상기 제2 스트로크 궤적의 병합에 따른 병합 스트로크 데이터에 대한 도형 인식 을 수행하고, 상기 병합 스트로크 데이터에 대한 도형 인식 성공에 기반하여 상기 병합 스트로크 데이터를 인식 된 도형 형태에 대응하는 제3 스트로크 데이터로 변환하고, 상기 제3 스트로크 데이터를 표시하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 인스트럭션들은, 상기 적어도 하나의 프로세서가, 상기 디스플레이 상에 상기 제1 스트로크 궤적의 제1 스트로크 데이터를 표시 중 제2 터치 다운을 확인하고, 상기 제2 터치 다운에 대한 제 2 터치 업 발생에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하도록 설정될 수 있다. 다양한 실시예들에 따르면, 상기 제1 터치 다운 및 상기 제1 터치 무브는 스타일러스 펜에 의한 입력이고 상기 제2 터치 다운은 사용자 손가락에 의한 입력일 수 있다. 도 4는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적 분석에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 4를 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)의 프 로세서(예: 도 1의 프로세서 또는 도 3의 프로세서)는 412 동작 내지 430 동작 중 적어도 하나의 동 작을 수행할 수 있다. 412 동작에서, 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력 여부를 확 인할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브 입력에 기반하여 센싱 패널 로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 터치 무브에 기반하여 제1 지정 시간 간격으로 터치 포인트들을 수신할 수 있다. 414 동작에서, 일 실시예에 따른 프로세서는 스트로크 시작점을 저장할 수 있다. 예를 들면, 프로세서 는 제1 터치 다운된 터치 다운 포인트를 스트로크 시작점으로 메모리에 저장할 수 있다. 416 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 센싱 패널로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기 반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널에 표시하도록 제어할 수 있다. 예 를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있 다. 418 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적의 크기가 지정된 크기 이상인지 확인할 수 있다. 예를 들면, 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 표시하면서 제2 지정 시간 간격 마다(예: 수 ms, 또는 100ms 이내) 제1 스트로크 궤적의 크기를 확인하고, 제1 스트로크 궤적의 크기가 지 정된 크기(예: 지정된 픽셀 크기(예: 100 × 100 픽셀 크기))이상인지 여부를 확인할 수 있다. 일 실시예에 따 르면 프로세서는 제1 스트로크 궤적의 크기가 지정된 크기 이상이 아니면 430 동작으로 진행할 수 있다. 일 실시예에 따르면 프로세서는 제1 스트로크 궤적의 크기가 지정된 크기 이상이면 420 동작을 수행할 수 있다. 420 동작에서, 일 실시예에 따른 프로세서는 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제1 스트로크 궤적상의 현재점으로부터 제 2 지정 시간 간격 전의 점)간의 거리보다 작은지 확인할 수 있다. 일 실시예에 따른 프로세서는 제 스트로 크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점 간의 거리보다 작지 않으면 430 동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 제 스트로 크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점 간의 거리보다 작으면(도형 인식 트리거(예: 제1 도형 인식 트리거) 발생이 확인되면) 422 동작을 수행 할 수 있다. 422 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 예를 들면, 프로세서는 도형 인식 모듈를 통해 제1 스트로크 궤적을 분석하 여 분석결과에 대응된 도형 형태를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루어진 다양한 도형 형태를 포함할 수 있다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡선형태의 도형을 포함하거나, 직선 또는 곡선을 포함할 수 있다. 424 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 여부를 확인할 수 있다. 일 실시예에 따른 프 로세서는 도형 인식 실패 시 430 동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 도형 인식 성공 시 인식된 도형 형태를 확인할 수 있다. 426 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 인식된 도형 형태에 대응된 제2 스트로크 데이터로 변환할 수 있다. 예를 들면, 프로세서는 인식된 도형 형태가 되도록 제1 스트로크 데이터에 포함된 복수의 포인트들 중 적어도 하나의 포인트의 위치를 변경할 수 있다. 428 동작에서, 일 실시예에 따른 프로세서는 인식된 도형 형태에 대응된 제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트로 크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 또는 다른 옵션 포함)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 430 동작에서, 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 여부를 확인할 수 있다. 일 실시예 에 따른 프로세서는 제1 터치 업 이벤트가 발생되지 않으면 제2 스트로크 데이터 표시를 취소(또는 중단) 하고, 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 동작을 종료할 수 있다. 다양한 실시예들에 따르면, 전자 장치(예: 도 1의 전자 장치, 또는 도 3의 전자 장치)에서 스트로크 분석 기반 도형 인식 방법은 상기 전자 장치의 디스플레이(예: 도 1의 표시 장치, 또는 도 3의 표시 장치 )에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트 로크 데이터를 표시하는 동작, 상기 제1 스트로크 궤적의 크기와 제1 스트로크 궤적의 스트로크 시작점에서부터 제1 스트로크 궤적 상의 점들간의 거리에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작, 상기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이 터로 변환하는 동작, 및 상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함할 수 있다. 다양한 실시예들에 따르면, 상기 방법에서 상기 전자 장치는 상기 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 상기 스트로크 시작점에서부터 상기 제1 스트로크 궤적 상의 제1점 간의 거리가 상기 스트로크 시작점에 서부터 제1 스트로크 궤적 상의 제1점의 이전점인 제2점 간의 거리보다 작은 경우, 상기 제1 스트로크 궤적에 대한 도형 인식을 수행할 수 있다. 다양한 실시예들에 따르면, 상기 방법에서 상기 전자 장치는 상기 제2 스트로크 데이터 표시 후 제1 터치 업되 지 않고 상기 제1 터치 무브 입력이 지속되는 경우 상기 제2 스트로크 데이터 표시를 중단할 수 있다. 다양한 실시예들에 따르면, 상기 방법에서 상기 전자 장치는 상기 제1 스트로크 데이터의 표시를 중단하고, 상 기 제2 스트로크 데이터를 표시할 수 있다. 다양한 실시예들에 따르면, 상기 방법에서 상기 전자 장치는 상기 제1 스트로크 데이터와 함께 상기 제2 스트로 크 데이터를 표시할 수 있다. 다양한 실시예들에 따르면, 상기 방법에서 상기 전자 장치는 상기 제1 스트로크 데이터에 대응된 제1 펜 드로잉 옵션을 확인하고, 상기 제2 스트로크 데이터에 상기 제1 펜 드로잉 옵션을 적용하여 표시할 수 있다. 도 5는 일 실시예에 따른 제1 스트로크 궤적 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점 간의 거리 기반의 도형 인식 예를 설명하기 위한 도면이다. 도 5를 참조하면, 일 실시에에 따른 제1 스트로크 궤적이 스트로크 시작점으로부터 약 700ms동안 사 용자에 의한 타원 형태의 드로잉에 기반하여 획득된 스트로크 궤적인 경우의 예를 나타낼 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수신하 여 스트로크 시작점로부터 시작(또는 진행)되는 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 업데이트하면서 표시할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적이 진행되는 동안 제2 지정된 시간 간격(예: 100ms 또는 수 ms)마다 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재 점의 거리를 확인할 수 있다. 일 실시예에 따르면, 스트로크 시작점로부터 시간 경과 후 약 100ms시점에서, 프로세서는 제1 스트로 크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제1점의 거리를 확인할 수 있다. 프로세서는 약 100ms시점에서 제1 스트로크 궤적의 크기가 지정된 크기보다 작고, 스트로크 시작점에 서부터 제1 스트로크 궤적 상의 제1점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제1점 이전의 거리보다 큰 것이 확인됨에 따라 도형 인식 트리거가 발생되지 않은 것으로 확인하고, 도형 인식 을 수행하지 않을 수 있다. 일 실시예에 따르면, 스트로크 시작점의 시점으로부터 약 200ms시점에서, 프로세서는 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제2점의 거리를 확인할 수 있다. 프 로세서는 약 200ms시점에서 제1 스트로크 궤적의 크기가 지정된 크기보다 작고, 스트로크 시작점에서 부터 제1 스트로크 궤적 상의 제2점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제1점 의 거리보다 큰 것이 확인됨에 따라 도형 인식 트리거가 발생되지 않은 것으로 확인하고, 도형 인식을 수 행하지 않을 수 있다. 일 실시예에 따르면, 스트로크 시작점의 시점으로부터 약 300ms시점에서, 프로세서는 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제3점의 거리를 확인할 수 있다. 프 로세서는 약 300ms시점에서 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 스트로크 시작점에서 부터 제1 스트로크 궤적 상의 제3점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제2점 의 거리보다 큰 것이 확인됨에 따라 도형 인식 트리거가 발생되지 않은 것으로 확인하고, 도형 인식을 수 행하지 않을 수 있다. 일 실시예에 따르면, 스트로크 시작점의 시점으로부터 약 400ms시점에서, 프로세서는 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제4점의 거리를 확인할 수 있다. 프 로세서는 약 400ms시점에서 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 스트로크 시작점에서 부터 제1 스트로크 궤적 상의 제4점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제3점 의 거리보다 작은 것이 확인됨에 따라 도형 인식 트리거가 발생된 것으로 확인하고, 도형 인식을 수행할 수 있다. 프로세서는 약 400ms시점에서, 도형 인식 실패 시 제1 스트로크 궤적을 계속해서 분석할 수 있다. 일 실시예에 따르면, 스트로크 시작점의 시점으로부터 약 500ms시점에서, 프로세서는 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제5점의 거리를 확인할 수 있다. 프 로세서는 약 500ms시점에서, 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 스트로크 시작점에 서부터 제1 스트로크 궤적 상의 제5점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제4점 의 거리보다 작은 것이 확인됨에 따라 도형 인식 트리거가 발생된 것으로 확인하고, 도형 인식을 수행할 수 있다. 프로세서는 약 500ms시점에서, 도형 인식 실패 시 제1 스트로크 궤적을 계속해서 분석할 수 있다. 일 실시예에 따르면, 스트로크 시작점의 시점으로부터 약 600ms시점에서, 프로세서는 제1 스트로크 궤적의 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 제6점의 거리를 확인할 수 있다. 프 로세서는 약 600ms시점에서, 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 스트로크 시작점 에서부터 제1 스트로크 궤적 상의 제6점의 거리가 스트로크 시작점부터 제1 스트로크 궤적 상의 제5점의 거리보다 작은 것이 확인됨에 따라 도형 인식 트리거가 발생된 것으로 확인하고, 도형 인식을 수 행할 수 있다. 예를 들면 프로세서는 약 600ms시점에서, 도형 인식 성공 시 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 인식된 도형 형태에 대응된 제2 스트로크 데이터로 변환하여 표시할 수 있다. 일 실시예에 따르면, 프로세서는 약 600ms시점에서 인식된 도형 형태에 대응된 제2 스트로크 데이터 표시 후 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 제1 스트로크 궤적 분석을 종료할 수 있다. 일 실시예에 따르면, 프로세서는 약 600ms시점에서 인식된 도형 형태에 대응된 제2 스트로크 데이터 표시 후 제1 터치 업 이벤트가 발생되지 않고, 제1 스트로크 궤적이 지속(예: 약 700ms시점의 제1 스트로크 궤 적 상의 제7점까지 지속)되는 경우 제2 스트로크 데이터 표시를 취소(또는 중단)하고 제1 스트로크 데이 터를 업데이트하여 표시할 수 있다. 일 실시예에 따르면, 프로세서는 제1 스트로크 궤적이 지속되다가 제1 터치 업 이벤트 발생 시(예: 약 800ms시점의 제1 스트로크 궤적 상의 제8점에서 제1 터치 업) 제1 스트로크 데이터 업데이트를 종료할 수 있다. 상기 도 5에서는 100ms 마다 제1 스트로크 궤적을 분석(제1 스트로크 궤적 크기 및 스트로크 시작점에서부 터 제1 스트로크 궤적 상의 현재점의 거리 확인) 하는 예를 들어 설명하였으나, 100ms는 일 예일 뿐, 프로세서 의 성능 또는 데이터 속도에 기반하여 실시간 또는 다양한 시간 간격 중 하나로 제1 스트로크 궤적 분석이 수행 될 수도 있다. 도 6a 내지 6c는 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터 표시 중 제1 스트로크 궤적 크기 및 스 트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점 간의의 거리를 기반으로 제1 스트로크 데이터가 제2 스 트로크 데이터로 변환하여 표시하는 경우의 화면들을 나타낸 도면이다. 도 6a 내지 6c를 참조하면, 일 실시예에 따른 프로세서는 표시 장치 상에 제1 터치 다운됨에 기반하 여 제1 터치 다운에 대응된 터치 포인트(예: 스트로크 시작점)를 나타내는 제1 화면을 표시할 수 있 다. 프로세서는 이후 제1 지정 시간 간격으로 터치 포인트들을 수신하여 스트로크 시작점로부터 시작 (또는 진행)되는 제1 스트로크 데이터를 업데이트하면서 표시할 수 있다. 일 실시예에 따른 프로세서(32 0)는 제1 스트로크 데이터가 업데이트되면서 표시되는 동안 제2 지정된 시간 간격(예: 100ms 또는 수 ms) 마다 제1 스트로크 궤적의 크기를 확인하고, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점의 거리와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점의 거리를 비교할 수 있다. 일 실시예에 따르면 제2 화면은 제1 터치 다운된 후, 제2 지정된 시간이 흐른 제1 상태에서의 제1 스트로 크 데이터를 나타낸 예일 수 있으며, 프로세서는 제1 상태에서의 제1 스트로크 궤적의 크기를 확인할 수 있고, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 제1점)의 거리와 스트 로크 시작점에서부터 제1 스트로크 궤적 상의 이전점의 거리를 비교할 수 있다. 프로세서는 제1 스트 로크 궤적의 크기가 지정된 크기보다 크지 않거나, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 제1점)의 거리가 이전보다 가까워지지 않았으면, 도형 인식 트리거가 발생되지 않은 것으로 확 인하고, 도형 인식을 수행하지 않을 수 있다. 일 실시예에 따르면 제3 화면은 제1점에서부터 다시 제2 지정된 시간이 흐른 제2 상태의 제1 스트로 크 데이터를 나타낸 예일 수 있다. 프로세서는 제2 상태에서 제1 스트로크 궤적의 크기를 확인 할 수 있고, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 제2점)의 거리와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제1점)의 거리를 비교할 수 있다. 프로세서(32 0)는 제1 스트로크 궤적의 크기가 지정된 크기보다 크지 않거나, 스트로크 시작점에서부터 제1 스트 로크 궤적 상의 현재점(예: 제2점)의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전 점(예: 제1점)의 거리보다 크면 도형 인식 트리거가 발생되지 않은 것으로 확인하고, 도형 인식을 수행하 지 않을 수 있다. 일 실시예에 따르면 제4 화면은 제2점에서부터 다시 제2 지정된 시간이 흐른 제3 상태의 제1 스트로 크 데이터를 나타낸 예일 수 있다. 프로세서는 제3 상태에서 제1 스트로크 궤적의 크기를 확인 할 수 있고, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 제3점)의 거리와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제2점)의 거리를 비교할 수 있다. 프로세서(32 0)는 제1 스트로크 궤적의 크기가 지정된 크기보다 크지 않거나, 스트로크 시작점에서부터 제1 스트 로크 궤적 상의 현재점(예: 제3점)의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전 점(예: 제2점)의 거리보다 크면 도형 인식 트리거가 발생되지 않은 것으로 확인하고, 도형 인식을 수행하 지 않을 수 있다. 일 실시예에 따르면 제5 화면은 제3점에서부터 다시 제2 지정된 시간이 흐른 제4 상태의 제1 스트로 크 데이터를 나타낸 예일 수 있다. 프로세서는 제4 상태에서 제1 스트로크 궤적의 크기를 확인 할 수 있고, 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점(예: 제4점)의 거리와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제3점)의 거리를 비교할 수 있다. 프로세서(32 0)는 제1 스트로크 궤적의 크기가 지정된 크기보다 크고, 스트로크 시작점에서부터 제1 스트로크 궤 적 상의 현재점(예: 제4점)의 거리가 스트로크 시작점에서부터 제1 스트로크 궤적 상의 이전점(예: 제3점)의 거리보다 작으면 도형 인식 트리거가 발생된 것으로 확인하고, 도형 인식을 수행할 수 있다. 일 실시예에 따르면 제6 화면은 제4 상태에서 도형 인식이 수행되어 제1 스트로크 데이터와 인식된 도형에 대응된 제2 스트로크 데이터가 함께 표시되는 제5 상태를 나타낸 도면일 수 있다. 일 실시예에 따른 프로세서는 인식된 도형에 대응된 제2 스트로크 데이터가 표시된 상태에서 제1 터치 업되면 제1 스트로크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 인 식된 도형에 대응된 제2 스트로크 데이터가 표시된 상태에서 제1 터치 업되지 않고, 제1 터치 무브가 지속 되면 제1 스트로크 데이터를 계속해서 표시할 수 있다. 일 실시예에 따르면 제7 화면은 제5 상태에서 제1 터치 무브가 지속됨에 따라 제5점이 업데이트된 제 1 스트로크 데이터가 표시되는 제6 상태를 나타낸 도면일 수 있다. 일 실시예에 따른 제8 화면은 제6 상태에서 제1 터치 무브가 일정 기간 더 지속되어 제6점에 도달한 제7 상태를 나타낸 도면일 수 있다. 예를 들면 제6점은 제2 스트로크 데이터 취소점일 수 있다. 프로세서 는 제1 터치 무브가 일정 기간 지속되어 제6점에 도달하면 제2 스트로크 데이터 표시를 취소(또 는 중단)하고 제1 터치 무브에 따라 제7점으로 업데이트되는 제1 스트로크 데이터를 표시할 수 있다. 일 실시예에 따르면 제9 화면은 제1 스트로크 데이터 표시 도중 제1 터치 업 발생 시의 제8 상태를 나타낸 도면일 수 있다. 제8 상태에서 프로세서는 제1 스트로크 데이터 표시 도중 제1 터치 업 발생 에 따라 제1 스트로크 데이터 표시 동작을 종료할 수 있다. 도 7은 일 실시예에 따른 전자 장치에서 필기 중 제1 스트로크 데이터가 도형으로 인식되었다가 취소되는 예를 나타낸 도면이다. 도 7을 참조하면, 일 실시예에 따른 프로세서는 표시 장치 상에 사용자에 의해 \"안녕하세요\"의 필기가 입력되는 경우의 화면들(701 내지 703)의 예를 나타낸 도면이다. 일 실시예에 따른 제1 화면을 예를 들면, 프로세서는 사용자에 의해 \"안녕하세\" 다음의 \"ㅇ\"이 필기 되는 도중 필기중인 \"ㅇ\"의 제1 스트로크 궤적에 대해 도형 인식을 수행하여 인식된 도형 형태 즉, 원형에 대응된 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 제2 화면을 예를 들면, 프로세서는 제2 스트로크 데이터가 표시된 상태에서 사용자에 의해 제1 터치 업되지 않고, \"ㅇ\"이 계속 필기됨에 따라 원형에 대응된 제2 스트로크 데이터 의 표시를 취소(또는 중단)하고 필기중인 \"ㅇ\"의 제1 스트로크 데이터를 계속 표시할 수 있다. 일 실시예에 따른 제3 화면을 예를 들면, 프로세서는 \"ㅇ\"의 필기 후 제1 터치 업되면, \"ㅇ\"의 표시를 완료하고, 다음 터치 다운에 따른 다음 스트로크 궤적(예: \"ㅛ\")을 표시할 수 있다. 이와 같은 본 발명의 실시예에 따르면 프로세서는 제1 스트로크 궤적 진행 중 제1 스트로크 데이터에 대한 도형 인식 결과인 제2 스트로크 데이터를 표시하고, 제1 스트로크 궤적이 계속 진행되면 제2 스트로크 데이터를 취소하고 제1 스트로크 궤적을 계속해서 표시하고, 제2 스트로크 궤적이 계속 진행되지 않으면 제2 스트로크 데 이터를 표시함으로써 사용자가 하나의 스트로크를 하는 도중 제1 스트로크 데이터를 표시할지 도형 변환된 제2 스트로크 데이터를 표시할지를 쉽게 결정하도록 할 수 있다. 도 8은 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터와 제2 스트로크 데이터 표시 화면 예를 나타낸 도 면이다. 도 8을 참조하면, 일 실시예에 따른 프로세서는 도형 인식에 성공하여 디스플레이의 화면에 제1 스트로크 데이터에 대응하는 제2 스트로크 데이터를 표시할 경우, 제1 터치 업되기 전까지 제1 스트 로크 데이터 및 제2 스트로크 데이터를 동시에 표시할 수 있다. 일 실시예에 따르면 제2 스트로크 데 이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 및/또는 다른 옵션)을 제1 스트로크 데이터에 적 용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 예를 들면 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션이 파란색 및 색연필인 경우, 제2 스트 로크 데이터에 파란색 및 색연필 옵션을 적용하여 표시할 수 있다. 일 실시예에 따르면, 제1 스트로크 데 이터에 적용된 제1 펜 드로잉 옵션이 제2 스트로크 데이터에 동일하게 적용된 상태에서 제2 스트로크 데이터는 제1 스트로크 데이터와 구별되도록 하기 위한 적어도 하나의 다른 드로잉 옵션(예: 반투명 효과)이 더 적용될 수 있다. 예를 들면, 반투명 효과를 통해 제2 스트로크 데이터를 제1 스트로크 데이터 와 구별되게 표시함으로써 사용자가 제2 스트로크 데이터를 직관적으로 인지하여 현재 도형 인식이 진행 중임을 알 수 있도록 할 수 있으며, 제1 스트로크 데이터에서 제2 스트로크 데이터로의 변환 또 는 제2 스트로크 데이터의 취소의 선택이 용이하도록 할 수 있다. 일 실시예에 따른 프로세서는 도형 인식에 성공에 기반하여 반투명 효과가 적용된 제2 스트로크 데이터 를 제1 스트로크 데이터와 함께 표시한 후 제1 터치 업 이벤트 발생 시 제1 스트로크 데이터의 표시를 중단하고 제2 스트로크 데이터를 반투명 효과 적용 없이 표시할 수 있다. 일 실시예에 따른 프로세 서는 반투명 효과가 적용된 제2 스트로크 데이터와 제1 스트로크 데이터와 함께 표시중 제1 터 치 업이 발생하지 않고 제1 터치 무브가 지속됨에 따라(지정된 취소 조건이 만족되면) 반투명 효과 적용된 제2 스트로크 데이터의 표시를 중단하고, 제1 스트로크 데이터를 지속하여 표시할 수 있다. 도 9는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 9를 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)의 프 로세서(예: 도 1의 프로세서 또는 도 3의 프로세서)는 912 동작 내지 926 동작 중 적어도 하나의 동 작을 수행할 수 있다. 912 동작에서, 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력 여부를 확 인할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하 여 센싱 패널로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수신할 수 있다. 914 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 센싱 패널로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기 반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널에 표시하도록 제어할 수 있다. 예 를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있 다. 916 동작에서, 일 실시예에 따른 프로세서는 홀드 모션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 센싱 패널로부터 사용자로 부터 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태)에 의한 터치 포 인트를 수신하여 홀드 모션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따르면 프로세서는 홀드 모 션 이벤트가 발생되지 않으면 926 동작으로 진행할 수 있다. 일 실시예에 따르면 프로세서는 홀드 모션 이 벤트가 발생되면 도형 인식 트리거(예: 제2 도형 인식 트리거)를 발생할 수 있다. 918 동작에서, 일 실시예에 따른 프로세서는 홀드 모션 이벤트 발생이 확인됨에 따라 제1 스트로크 궤적에 따른 도형 인식을 수행할 수 있다. 예를 들면, 프로세서는 도형 인식 모듈를 통해 제1 스트로크 궤적 을 분석하여 분석 결과에 대응된 도형 형태를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루어진 다양한 도형 형태를 포함할 수 있다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡선 형태의 도형을 포함하거나, 직선 또는 곡선을 포함할 수 있다. 920 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 여부를 확인할 수 있다. 일 실시예에 따른 프 로세서는 도형 인식 실패 시 926동작으로 진행할 수 있다. 922 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 시 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 인식된 도형 형태에 대응된 제2 스트로크 데이터로 변환할 수 있다. 예를 들면, 프로세서는 인식 된 도형 형태가 되도록 제1 스트로크 데이터에 포함된 복수의 포인트들 중 적어도 하나의 포인트의 위치를 변경 할 수 있다. 924 동작에서, 일 실시예에 따른 프로세서는 인식된 도형 형태에 대응된 제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트로 크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 또는 다른 옵션 포함)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 926 동작에서, 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 여부를 확인할 수 있다. 일 실시예 에 따른 프로세서는 제1 터치 업 이벤트가 발생되지 않으면 제2 스트로크 데이터 표시를 취소(또는 중단) 하고 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 동작을 종료할 수 있다. 다양한 실시예들에 따르면, 전자 장치(예: 도 1의 전자 장치, 또는 도 3의 전자 장치)에서 홀드 모션 기반 도형 인식 방법은 상기 전자 장치의 디스플레이(예: 도 1의 표시 장치, 또는 도 3의 표시 장치(36 0))에 제1 터치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로 크 데이터를 표시하는 동작, 상기 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발 생 여부에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작, 상기 도형 인식 성공에 기반하 여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터로 변환하는 동작, 및 상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함할 수 있다. 도 10은 일 실시예에 따른 제1 스트로크 궤적 진행 중 홀드 모션 이벤트에 기반한 도형 인식 예를 설명하기 위 한 도면이다. 도 10을 참조하면, 일 실시에에 따른 제1 스트로크 궤적은 스트로크 시작점으로부터 약 700ms동안 사용자에 의한 타원 형태의 드로잉에 기반하여 획득된 스트로크 궤적의 예를 나타낼 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수신하여 스 트로크 시작점로부터 시작되는 제1 스트로크 데이터를 업데이트하면서 표시할 수 있다. 일 실시예 에 따른 프로세서는 스트로크 시작점으로부터 제1 스트로크 궤적 진행 중 홀드 모션 이벤트(예: 제1 지정된 시간(예: 500ms) 동안 동일 위치에 터치가 유지되는 상태)가 발생하면 홀드 모션 이벤트 발생 시점 (예: 약 700ms 시점)에서 도형 인식 트리거를 발생할 수 있고, 도형 인식 트리거 발생에 기반하여 도형 인식을 수행할 수 있다. 도 11은 일 실시예에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 시의 동작을 설명하기 위한 예 시도이다. 도 11을 참조하면, 일 실시예에 따른 프로세서는 스트로크 시작점으로부터 제1점까지 제1 스 트로크 궤적에 따른 제1 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제 1점에서 홀드 모션(hold motion) 이벤트가 발생을 확인할 수 있다. 일 실시예에 따른 프로세서 는 제1점에서 홀드 모션(hold motion) 이벤트 발생에 따른 도형 인식 트리거에 의한 도형 인식을 수 행하고, 인식된 도형 형태에 대응하는 제2 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제2 스트로크 데이터가 표시된 상태에서 제1점에서 제1 터치업에 수행되지 않고 제1 스트로크 궤적이 계속해서 진행되는 경우 제2 스트로크 데이터를 표시를 중단하고 제1 스트로 크 궤적을 지속하여 표시할 수 있다. 도 12는 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터 표시 중 홀드 모션 이벤트를 기반으로 제1 스트 로크 데이터가 제2 스트로크 데이터로 변환하여 표시되는 경우 화면들의 예를 나타낸 도면이다. 도 12를 참조하면, 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기 반하여 센싱 패널로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수신하여 스트로크 시작점로부터 시작되는 제1 스트로크 데이터를 제1 화면 및 제2 화면와 같이 업데이트하면서 표시할 수 있다. 일 실시예에 따른 프로세서는 제3 화면과 같이 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션이 발생한 경우 도형 인식 트리거를 발생하거나 도형 인식 트리거가 발생된 것으로 확 인할 수 있다. 일 실시예에 따른 프로세서는 스트로크 시작점로부터 홀드 모션이 발생한 포인 트까지의 제1 스트로크 데이터에 대해 도형 인식을 수행할 수 있다. 일 실시예에 따른 프로세서는 도형 인식에 성공한 경우 제4 화면과 같이 인식된 도형 형태에 대응된 제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스 트로크 데이터를 함께 표시하거나 제2 스트로크 데이터만 표시할 수 있다. 도 13은 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터와 제2 스트로크 데이터의 예를 나타낸 도면이다. 도 13을 참조하면, 예를 들어, 사용자가 \"안녕\"과 같은 단어를 필기하는 경우 \"ㅇ\"을 필기하면서 홀드 모션을 수행하면 필기된 \"ㅇ\"(제1 스트로크 데이터)이 도형으로 인식되어 미려화된 \"ㅇ\"(제2 스트로크 데이터)으로 표 시될 수 있고 \"ㅏ\"를 필기하면서 홀드 모션을 수행하면 \"ㅏ\"(제1 스트로크 데이터)가 도형으로 인식되어 미려화 된 \"ㅏ\"(제2 스트로크 데이터)로 표시되어 \"안녕\"과 같은 단어를 도형 인식을 이용하여 미려화된 \"안녕\"으로 표시할 수 있다. 또 다른 예를 들어, 예를 들어, 사용자가 \"반가워\"와 같은 단어를 필기하는 경우 \"ㅂ\"을 필기하 면서 홀드 모션을 수행하면 필기된 \"ㅂ\" \"(제1 스트로크 데이터)이 도형으로 인식되어 미려화된 \"ㅂ\"(제2 스트 로크 데이터)으로 표시될 수 있고 \"ㅏ\"를 필기하면서 홀드 모션을 수행하면 \"ㅏ\"(제1 스트로크 데이터)가 도형 으로 인식되어 미려화된 \"ㅏ\"(제2 스트로크 데이터)로 표시되어 \"반가워\"와 같은 단어를 도형 인식을 이용하여 미려화된 \"반가워\"로 표시할 수 있다. 도 14는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적과 제1 스트로크 궤적과 연관된 제2 스트로크 궤적 에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 14를 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)의 프로세서(예: 도 1의 프로세서 또는 도 3의 프로세서)는 1412 동작 내지 1436 동작 중 적어도 하나의 동작을 수행할 수 있다. 1412 동작에서, 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반 하여 센싱 패널로부터 제1 터치 다운된 터치 다운 포인트와 터치 다운 포인트 이후 제1 지정 시간 간격으 로 터치 포인트들을 수신할 수 있다. 1414 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 센싱 패널로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기 반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널에 표시하도록 제어할 수 있다. 예 를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있 다. 1416 동작에서, 일 실시예에 따른 프로세서는 홀드 모션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 센싱 패널로부터 사용자로 부터 홀드 모션(예: 제1 지정된 시간 동안 일정 영역(예: 8px X 8px)에 터치가 유지되는 상태)에 의한 터치 포 인트를 수신하여 홀드 모션 이벤트 발생 여부를 확인할 수 있다. 일 실시예에 따르면 프로세서는 홀드 모 션 이벤트가 발생되지 않으면 1430 동작으로 진행할 수 있다 1418 동작에서, 일 실시예에 따른 프로세서는 홀드 모션 이벤트가 발생됨에 기반하여 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하는지 확인할 수 있다. 예를 들면 제1 스트로크 궤적과 연관된 제2 스트로크 궤적은 제1 스트로크 궤적과 지정된 거리 또는 지정된 시간 간격 내에 기 입력된 스트로크 궤적일 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 궤적과 연관된 스트로크 궤적이 존재하지 않으면 1420 동작으로 진행하고, 제1 스트로크 궤적과 연관된 제2 스트로크 궤적이 존재하면 1436 동작으로 진행할 수 있다. 1420 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 예를 들면, 프로세서는 도형 인식 모듈를 통해 제1 스트로크 궤적을 분석하 여 분석 결과에 대응된 도형 형태를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루어진 다양한 도 형 형태를 포함할 수 있다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡 선 형태의 도형을 포함하거나, 직선 또는 곡선을 포함할 수 있다. 1422 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 도형 인식 실패 시 1430동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 도형 인 식 성공 시 인식된 도형 형태를 확인할 수 있다. 1424 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 인식된 도형 형태(예: 제1 도형 형태)에 대응된 제2 스트로크 데이터로 변환할 수 있다. 예를 들면, 프로세서는 인식된 도형 형태가 되도록 제1 스트로크 데이터에 포함된 복수의 포인트들 중 적어도 하나의 포인트의 위치를 변경할 수 있다. 1426 동작에서, 일 실시예에 따른 프로세서는 인식된 제1 도형 형태에 대응된 제2 스트로크 데이터를 표시 할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트로크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이 터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 또는 다른 옵션 포함)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다.1428 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적 및 제2 스트로크 궤적(예: 제1 스트로크 궤적과 제2 스트로크 궤적이 병합된 병합 스트로크 궤적)에 대한 도형 인식을 수행할 수 있다. 예를 들면, 프로 세서는 도형 인식 모듈를 통해 병합 스트로크 궤적을 분석하여 분석결과에 대응된 도형 형태(예: 제2 도형 형태)를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루어진 다양한 도형 형태를 포함할 수 있 다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡선 형태의 도형을 포함하 거나, 직선 또는 곡선을 포함할 수 있다. 1430 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 도형 인식 실패 시 1436동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 도형 인 식 성공 시 인식된 제2 도형 형태를 확인할 수 있다. 1432 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적 및 제2 스트로크 궤적에 대응된 병합 스 트로크 데이터를 인식된 제2 도형 형태에 대응된 제3 스트로크 데이터로 변환할 수 있다. 예를 들면, 프로세서 는 인식된 제2 도형 형태가 되도록 병합 스트로크 데이터에 포함된 복수의 포인트들 중 적어도 하나의 포 인트의 위치를 변경할 수 있다. 1434 동작에서, 일 실시예에 따른 프로세서는 인식된 제2 도형 형태에 대응된 제3 스트로크 데이터를 표시 할 수 있다. 예를 들면 프로세서는 병합 스트로크 데이터와 제3 스트로크 데이터를 함께 표시하거나, 병합 스트로크 데이터 대신 제3 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제3 스트로크 데이 터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬, 색, 또는 다른 옵션 포함)을 병합 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제3 스트로크 데이터를 표시할 수 있다. 1436 동작에서, 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 여부를 확인할 수 있다. 일 실시예 에 따른 프로세서는 제1 터치 업 이벤트가 발생되지 않으면 제2 스트로크 데이터 또는 제3 스트로크 데이 터의 표시를 취소(또는 중단)하고, 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터 또는 제3 스트로크 데이터가 표시된 상태에서 동작을 종료할 수 있다. 다양한 실시예들에 따르면, 전자 장치(예: 도 1의 전자 장치, 또는 도 3의 전자 장치)에서 제1 스트 로크 궤적과 상기 제1 스트로크 궤적과 연관된 제2 스트로크 궤적에 기반한 도형 인식 방법은 상기 전자 장치의 디스플레이(예: 도 1의 표시 장치, 또는 도 3의 표시 장치)에 제1 터치 다운 후 제1 터치 무브 입력 됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하는 동작, 상기 제1 스트로 크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 여부에 기반하여 상기 제1 스트로크 궤적 과 연관된 제2 스트로크 궤적의 존재 여부를 확인하는 동작, 상기 제1 스트로크 궤적과 연관된 제2 스트로크 궤 적이 존재하는 경우 상기 제1 스트로크 궤적과 상기 제2 스트로크 궤적의 병합에 따른 병합 스트로크 데이터에 대한 도형 인식을 수행하는 동작, 상기 병합 스트로크 데이터에 대한 도형 인식 성공에 기반하여 상기 병합 스 트로크 데이터를 인식된 도형 형태에 대응하는 제3 스트로크 데이터로 변환하는 동작 및 상기 제3 스트로크 데 이터를 표시하는 동작을 포함할 수 있다. 도 15는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적과 연관된 제2 스트로크 궤적에 따른 병합 스트로크 데이터가 제3 스트로크 데이터로 변환되어 표시되는 경우 화면들의 예를 나타낸 도면이다. 도 15를 참조하면, 일 실시예에 따른 프로세서는 제1 화면과 같이 스트로크 데이터 표시 후 제2 화면과 같이 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제1 스트로크 데이터 표시 중 홀드 모션 입력(도형 인식 트리거)에 기반하여 제1 스트로크 데이터와 연관된 스트로크 데이터의 존재를 확인할 수 있다. 일 실시예에 따른 프로세서 는 제1 스트로크 데이터와 연관된 스트로크 데이터의 존재 확인에 기반하여 제1 스트로크 데 이터와 스트로크 데이터의 병합 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 일 실시예에 따른 프로세서는 병합 스트로크 데이터에 대한 도형 인식 성공에 기반하여 제3 화면과 같이 병합 스 트로크 데이터에 대응된 제3 스트로크 데이터를 표시할 수 있다. 도 16은 일 실시예에 따른 전자 장치에서 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브에 의한 제 1 스트로크 궤적 진행 중 제2 터치 업 발생 시 도형 인식 동작을 나타낸 흐름도이다. 도 16을 참조하면, 일 실시예에 따른 전자 장치(예: 도 1의 전자 장치, 또는 도 3a의 전자 장치)의 프로세서(예: 도 1의 프로세서 또는 도 3의 프로세서)는 1612 동작 내지 1626 동작 중 적어도 하나의동작을 수행할 수 있다. 1612 동작에서, 일 실시예에 따른 프로세서는 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브 (예: 드로잉) 입력 여부를 확인할 수 있다. 다른 실시예에 따르면 제1 터치 다운 후 제1 터치 무브(예: 드로잉) 입력에 기반하여 센싱 패널로부터 제1 터치 다운 포인트부터 제1 지정 시간 간격으로 터치 포인트들을 수 신하는 도중 제2 터치 다운이 확인될 수도 있다. 예를 들면, 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브 입력은 사용자가 표시 장치에 손가락으로 터치한 상태에서 스타일러스 펜으로 드로잉을 하 는 경우의 입력일 수 있다. 일 실시예에 따른 프로세서는 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브 입력에 기반하여 센싱 패널로부터 제2 터치 다운 포인트와, 제1 터치 다운된 터치 다운 포인트 와 터치 다운 포인트 이후 제1 지정 시간 간격으로 터치 포인트들을 수신할 수 있다. 1614 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 센싱 패널로부터 제1 지정 시간 간격으로 수신되는 터치 포인트들에 기 반한 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 디스플레이 패널에 표시하도록 제어할 수 있다. 예 를 들면, 제1 스트로크 궤적에 따른 제1 스트로크 데이터는 제1 지정 시간 간격으로 업데이트되어 표시될 수 있 다. 1616 동작에서, 일 실시예에 따른 프로세서는 제2 터치 업 여부를 확인할 수 있다. 일 실시예에 따른 프로 세서는 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 제2 터치 업 여부를 확인할 수 있다. 예를 들면, 사용자가 표시 장치에 손가락으로 터치한 상태에서 스타일러스 펜으로 드로잉을 하는 도중 손 가락 터치를 뗀 경우 제2 터치 업이 확인될 수 있다. 일 실시예에 따르면 프로세서는 제2 터치 업 이벤트 가 발생되지 않으면 1626 동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 제2 터치 업 이벤트가 발생됨에 기반하여 도형 인식 트리거를 발생할 수 있다. 다른 실시예에 따르면 프로세서는 제 제2 터치 다 운이 유지된 채 제1 터치 업이 발생하면 도형 인식 트리거를 발생할 수도 있다. 1618 동작에서, 일 실시예에 따른 프로세서는 제2 터치 업 이벤트가 발생됨에 기반하여 제1 스트로크 궤적 에 따른 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 예를 들면, 프로세서는 도형 인식 모듈 를 통해 제1 스트로크 궤적을 분석하여 분석 결과에 대응된 도형 형태를 확인할 수 있다. 예를 들면 도형 형태는 점 및 선으로 이루어진 다양한 도형 형태를 포함할 수 있다. 예를 들면 도형 형태는 삼각형, 사각형, 원, 타원, 사다리꼴, 또는 별과 같은 폐곡선 형태의 도형을 포함하거나, 직선 또는 곡선을 포함할 수 있다. 1620 동작에서, 일 실시예에 따른 프로세서는 도형 인식 성공 여부를 확인할 수 있다. 일 실시예에 따른 프로세서는 도형 인식 실패 시 1626 동작으로 진행할 수 있다. 일 실시예에 따른 프로세서는 도형 인 식 성공 시 인식된 도형 형태를 확인할 수 있다. 1622 동작에서, 일 실시예에 따른 프로세서는 제1 스트로크 궤적에 대응된 제1 스트로크 데이터를 인식된 도형 형태에 대응된 제2 스트로크 데이터로 변환할 수 있다. 예를 들면, 프로세서는 인식된 도형 형태가 되도록 제1 스트로크 데이터에 포함된 복수의 포인트들 중 적어도 하나의 포인트의 위치를 변경할 수 있다. 1624 동작에서, 일 실시예에 따른 프로세서는 인식된 도형 형태에 대응된 제2 스트로크 데이터를 표시할 수 있다. 예를 들면 프로세서는 제1 스트로크 데이터와 제2 스트로크 데이터를 함께 표시하거나, 제1 스트 로크 데이터 대신 제2 스트로크 데이터를 표시할 수 있다. 예를 들면, 프로세서는 제2 스트로크 데이터의 펜 드로잉 옵션(예: 펜의 굵기, 브러쉬 타입, 색, 또는 다른 옵션 포함)을 제1 스트로크 데이터에 적용된 제1 펜 드로잉 옵션으로 적용하고, 제1 펜 드로잉 옵션이 적용된 제2 스트로크 데이터를 표시할 수 있다. 1626 동작에서, 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 여부를 확인할 수 있다. 일 실시예 에 따른 프로세서는 제1 터치 업 이벤트가 발생되지 않으면 제2 스트로크 데이터의 표시를 취소(또는 중단)하고, 제1 스트로크 궤적에 따른 제1 스트로크 데이터를 제1 지정 시간 간격으로 업데이트하여 표시하는 동작을 지속할 수 있다. 일 실시예에 따른 프로세서는 제1 터치 업 이벤트 발생 시 제2 스트로크 데이터가 표시된 상태에서 동작을 종료할 수 있다. 다양한 실시예들에 따르면, 전자 장치(예: 도 1의 전자 장치, 또는 도 3의 전자 장치)에서 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브에 의한 제1 스트로크 궤적 진행 중 제2 터치 업 발생 시 도형 인식 방법은 상기 전자 장치의 디스플레이(예: 도 1의 표시 장치, 또는 도 3의 표시 장치)에 제1 터 치 다운 후 제1 터치 무브 입력됨에 기반하여 상기 디스플레이에 제1 스트로크 궤적의 제1 스트로크 데이터를 표시하는 동작, 상기 제1 스트로크 궤적의 제1 스트로크 데이터 표시 중 제2 터치 다운을 확인하고, 상기 제2터치 다운에 대한 제2 터치 업 발생에 기반하여 상기 제1 스트로크 궤적에 대한 도형 인식을 수행하는 동작, 상 기 도형 인식 성공에 기반하여 상기 제1 스트로크 데이터를 인식된 도형 형태에 대응하는 제2 스트로크 데이터 로 변환하는 동작, 및 상기 제2 스트로크 데이터를 상기 디스플레이에 표시하는 동작을 포함할 수 있다. 도 17은 일 실시예에 따른 전자 장치에서 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브에 의한 제 1 스트로크 궤적 진행 중 제2 터치 업 발생 시 표시되는 화면들의 예를 나타낸 도면이다. 도 17을 참조하면, 일 실시예에 따른 프로세서는 제1 화면과 같이 손가락에 의해 제2 터치 다운 된 상태에서 스타일러스 펜에 의해 제1 터치 다운 포인트로부터 시작되는 제1 스트로크 궤적 에 대응된 제1 스트로크 데이터를 표시할 수 있다. 일 실시예에 따른 프로세서는 제2 화면과 같이 제1 스트로크 궤적에 대응된 제1 스트로크 데이터 표시 도중 손가락에 의한 제2 터치 다운이 제2 터치 업되면 제2 터치 업된 시점의 제1 스트로크 궤적(1711에서 1712까지의 궤적)에 대응된 제1 스트로크 데이터에 대한 도형 인식을 수행할 수 있다. 일 실시예에 따른 프로세서는 도형 인식 성공 시 인식된 도형 형태에 대응된 제2 스트로크 데이터를 획 득할 수 있다. 일 실시예에 따른 프로세서는 제3 화면과 같이 획득된 제2 스트로크 데이터를 표시할 수 있다. 본 문서에 개시된 다양한 실시예에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들 면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 기기, 카메라, 웨어 러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 기기들에 한정되지 않는다. 본 문서의 다양한 실시예 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한정 하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도 면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개 를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\",\"A 또는 B 중 적어도 하나,\"\"A, B 또는 C,\" \"A, B 및 C 중 적어도 하나,\"및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하 는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제 1\", \"제 2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위해 사 용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구 성요소가 다른(예: 제 2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제 3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로 등의 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부가 될 수 있다. 예를 들 면, 일 실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형태로 구현될 수 있다. 본 문서의 다양한 실시예는 기기(machine)(예: 전자 장치)에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 기기(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 기기가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것 을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행될 수 있는 코드를 포함할 수 있다. 기기로 읽을 수 있는 저장매체 는, 비일시적(non-transitory) 저장매체의 형태 로 제공될 수 있다. 여기서, ‘비일시적’은 저장매체가 실재(tangible)하는 장치이고, 신호(signal)(예: 전자 기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장매체에 반영구적으로 저장되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일 실시예에 따르면, 본 문서에 개시된 다양한 실시예에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있다. 컴퓨터 프로그램 제품은 기기로 읽을 수 있는 저장 매체(예: compact disc read only memory (CD-ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치들(예: 스 마트폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 기기로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복 수의 개체를 포함할 수 있다. 다양한 실시예에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또 는 동작들이 생략되거나, 또는 하나 이상의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통 합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수 의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예에 따르면, 모듈, 프로그램 또는 다른 구성요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 다양한 실시예에 따르면, 명령들을 저장하고 있는 비휘발성 저장 매체에 있어서, 상기 명령들은 적어도 하나의 프로세서에 의하여 실행될 때에 상기 적어도 하나의 프로세서로 하여금 적어도 하나의 동작을 수행하도록 설정 된 것으로서, 상기 적어도 하나의 동작은, 적어도 하나의 온도 센서를 이용하여 획득된 전자 장치의 발열 온도 에 기반하여 제1 발열 상태를 확인하는 동작, 상기 제1 발열 상태에서 제1 데이터 처리 속도 범위에서 데이터 처리를 수행하는 동작, 상기 제1 데이터 처리 속도 범위에서 데이터 처리 중 제1 지정된 이벤트 발생 시 상기 제1 지정된 이벤트에 대응된 제1 시간 기간 및 제1 데이터 처리 속도를 확인하는 동작, 상기 제1 시간 기간 동 안 상기 제1 데이터 처리 속도에 기반하여 데이터 처리를 수행하는 동작, 및 상기 제1 시간 기간 만료에 기반하 여 상기 제1 데이터 처리 속도 범위에서 데이터 처리를 수행하는 동작을 포함할 수 있다. 그리고 본 명세서와 도면에 발명된 본 발명의 실시예들은 본 발명의 실시예에 따른 기술 내용을 쉽게 설명하고 본 발명의 실시예의 이해를 돕기 위해 특정 예를 제시한 것일 뿐이며, 본 발명의 실시예의 범위를 한정하고자 하는 것은 아니다. 따라서 본 발명의 다양한 실시예의 범위는 여기에 발명된 실시예들 이외에도 본 발명의 다양 한 실시예의 기술적 사상을 바탕으로 도출되는 모든 변경 또는 변형된 형태가 본 발명의 다양한 실시예의 범위 에 포함되는 것으로 해석되어야 한다.도면 도면1 도면2 도면3a 도면3b 도면4 도면5 도면6a 도면6b 도면6c 도면7 도면8 도면9 도면10 도면11 도면12 도면13 도면14 도면15 도면16 도면17"}
{"patent_id": "10-2021-0012683", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 일 실시예에 따른 네트워크 환경 내의 전자 장치의 블럭도이다. 도 2는 일 실시예에 따른 스타일러스 펜을 포함하는 전자 장치의 사시도이다. 도 3a는 일 실시예에 따른 스트로크 분석 기반 도형 인식을 수행하기 위한 전자 장치의 블럭도이다. 도 3b는 일 실시예에 따른 전자 장치의 프로세서 구성을 설명하기 위한 도면이다. 도 4는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적 분석에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 5는 일 실시예에 따른 제1 스트로크 궤적 크기와 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점 간의 거리 기반의 도형 인식 예를 설명하기 위한 도면이다. 도 6a 내지 6c는 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터 표시 중 제1 스트로크 크기 및 스트로크 시작점에서부터 제1 스트로크 궤적 상의 현재점 간의의 거리를 기반으로 제1 스트로크 데이터를 제2 스트로크 데이터로 변환하여 표시하는 경우의 화면들을 나타낸 도면이다. 도 7은 일 실시예에 따른 전자 장치에서 필기 중 제1 스트로크 데이터가 도형으로 인식되었다가 취소되는 예를 나타낸 도면이다. 도 8은 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터와 제2 스트로크 데이터 표시 화면 예를 나타낸 도 면이다. 도 9는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적에 따른 제1 스트로크 데이터 표시 중 홀드 모션에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 10은 일 실시예에 따른 제1 스트로크 궤적 진행 중 홀드 모션 이벤트에 기반한 도형 인식 예를 설명하기 위 한 도면이다. 도 11은 일 실시예에 따른 제1 스트로크 데이터 표시 중 홀드 모션 이벤트 발생 시의 동작을 설명하기 위한 예 시도이다. 도 12는 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터 표시 중 홀드 모션 이벤트를 기반으로 제1 스트 로크 데이터가 제2 스트로크 데이터로 변환하여 표시되는 경우 화면들의 예를 나타낸 도면이다. 도 13은 일 실시예에 따른 전자 장치에서 제1 스트로크 데이터와 제2 스트로크 데이터의 예를 나타낸 도면이다. 도 14는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적과 제1 스트로크 궤적과 연관된 제2 스트로크 궤적 에 기반한 도형 인식 동작을 나타낸 흐름도이다. 도 15는 일 실시예에 따른 전자 장치에서 제1 스트로크 궤적과 연관된 제2 스트로크 궤적에 따른 병합 스트로크 데이터가 제3 스트로크 데이터로 변환되어 표시되는 경우 화면들의 예를 나타낸 도면이다. 도 16은 일 실시예에 따른 전자 장치에서 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브에 의한 제 1 스트로크 궤적 진행 중 제2 터치 업 발생 시 도형 인식 동작을 나타낸 흐름도이다. 도 17은 일 실시예에 따른 전자 장치에서 제2 터치 다운된 상태에서 제1 터치 다운 후 제1 터치 무브에 의한 제 1 스트로크 궤적 진행 중 제2 터치 업 발생 시 표시되는 화면들의 예를 나타낸 도면이다. 도면의 설명과 관련하여, 동일 또는 유사한 구성 요소에 대해서는 동일 또는 유사한 참조 부호가 사용될 수 있다."}
