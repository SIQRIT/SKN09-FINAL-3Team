{"patent_id": "10-2022-0015304", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2023-0119317", "출원번호": "10-2022-0015304", "발명의 명칭": "전자 장치 및 전자 장치의 발화 처리 방법", "출원인": "삼성전자주식회사", "발명자": "신호선"}}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "전자 장치에 있어서,프로세서; 및상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고,상기 프로세서는,복수의 디바이스에서 수신된 사용자의 발화, 상기 복수의 디바이스에서 계산된 웨이크업(wakeup) 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하고,상기 사용자의 발화를 처리하기 위한 액션(action)을 결정하고,상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 복수의 디바이스 중에서 상기액션을 수행할 타겟 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 신뢰도 값은,상기 복수의 디바이스에서 수신된 상기 웨이크업 발화에 대한 SNR(signal-to-noise ratio)을 포함하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 하드웨어 정보는,상기 복수의 디바이스의 ID(identification), MAC 주소(media access control address)를 포함하고,상기 어플리케이션 정보는,상기 복수의 디바이스에서 실행되는 어플리케이션 리스트를 포함하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 프로세서는,상기 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 후보 디바이스를 결정하고,공개특허 10-2023-0119317-3-상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스 중에서 상기 타겟 디바이스를결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제4항에 있어서,상기 프로세서는,상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스의 어플리케이션 실행 상태 및상기 후보 디바이스의 하드웨어 사양(spec)을 파악하고,상기 후보 디바이스가 상기 액션을 수행하기 위한 하드웨어를 포함하는지 여부를 판단하고,상기 어플리케이션 실행 상태, 상기 하드웨어 사양 및 상기 하드웨어의 포함 여부에 기초하여 상기 타겟 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제4항에 있어서,상기 프로세서는,상기 신뢰도 값에 기초하여 상기 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정하고,상기 발화에 기초하여 상기 액션의 수행 조건을 결정하고,상기 어플리케이션 정보에 기초하여 상기 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단하고,상기 수행 조건, 상기 하드웨어 정보 및 상기 존재 여부의 판단 결과에 기초하여 상기 타겟 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 프로세서는,상기 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우,상기 수행 조건에 부합하는 제2 디바이스를 탐색하고,상기 제2 디바이스가 존재하는 경우 상기 제2 디바이스를 상기 타겟 디바이스로 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 프로세서는,상기 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우,공개특허 10-2023-0119317-4-상기 제1 디바이스를 상기 타겟 디바이스로 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제1항에 있어서,상기 프로세서는,상기 복수의 디바이스에 대한 상기 사용자의 선호도 점수(preference score)에 기초하여 상기 타겟 디바이스를결정하고,상기 선호도 점수는 상기 복수의 디바이스 각각의 누적 사용 횟수에 기초하여 계산되는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "제6항에 있어서,상기 프로세서는,상기 수행 조건에 부합하는 제2 디바이스를 탐색하고,상기 사용자에게 상기 제1 디바이스 및 상기 제2 디바이스 중 하나의 디바이스를 선택하기 위한 인터페이스를제공하고,상기 사용자의 선택에 응답하여 상기 제1 디바이스 및 상기 제2 디바이스에 중에서 하나를 상기 타겟 디바이스로 결정하는, 전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "전자 장치에 있어서,프로세서; 및상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고,상기 프로세서는,복수의 디바이스에서 수신된 발화의 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 상기 발화를 처리하기위한 제1 디바이스를 결정하고,상기 제1 디바이스의 상태에 기초하여 상기 제1 디바이스의 상기 발화의 처리 여부를 결정하고,상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보 및 상기 처리여부에 기초하여 상기 복수의 디바이스 중에서 상기 발화를 처리하기 위한 제2 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_12", "content": "제11항에 있어서,공개특허 10-2023-0119317-5-상기 신뢰도 값은,상기 복수의 디바이스에서 수신된 상기 웨이크업 발화에 대한 SNR을 포함하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제11항에 있어서,상기 하드웨어 정보는,상기 디바이스의 ID, MAC 주소를 포함하고,상기 어플리케이션 정보는,상기 복수의 디바이스에서 실행되는 어플리케이션 리스트를 포함하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 프로세서는,상기 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 후보 디바이스를 결정하고,상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스 중에서 상기 제1 디바이스 및상기 제2 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제14항에 있어서,상기 프로세서는,상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스의 어플리케이션 실행 상태 및상기 후보 디바이스의 하드웨어 사양(spec)을 파악하고,상기 후보 디바이스가 상기 발화를 처리하기 위한 액션을 수행할 하드웨어를 포함하는지 여부를 판단하고,상기 어플리케이션 실행 상태, 상기 하드웨어 사양 및 상기 하드웨어의 포함 여부에 기초하여 상기 제2 디바이스를 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_16", "content": "제14항에 있어서,상기 프로세서는,상기 신뢰도 값에 기초하여 상기 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정하고,상기 발화에 기초하여 상기 액션의 수행 조건을 결정하고,상기 어플리케이션 정보에 기초하여 상기 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단하고,공개특허 10-2023-0119317-6-상기 수행 조건, 상기 하드웨어 정보 및 상기 존재 여부의 판단 결과에 기초하여 상기 제2 디바이스를결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_17", "content": "제16항에 있어서,상기 프로세서는,상기 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우,상기 수행 조건에 부합하는 제2 디바이스를 탐색하고,상기 제2 디바이스를 상기 발화를 처리할 디바이스로 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_18", "content": "제11항에 있어서,상기 프로세서는,상기 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우,상기 제1 디바이스를 상기 발화를 처리하기 위한 디바이스로 결정하는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_19", "content": "제11항에 있어서,상기 프로세서는,상기 복수의 디바이스에 대한 사용자의 선호도 점수(preference score)에 기초하여 상기 제2 디바이스를 결정하고,상기 선호도 점수는 상기 복수의 디바이스 각각의 누적 사용 횟수에 기초하여 계산되는,전자 장치."}
{"patent_id": "10-2022-0015304", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_20", "content": "전자 장치의 발화 처리 방법에 있어서,복수의 디바이스에서 수신된 사용자의 발화, 상기 복수의 디바이스에서 계산된 웨이크업 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하는 동작;상기 사용자의 발화를 처리하기 위한 액션(action)을 결정하는 동작; 및상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 복수의 디바이스 중에서 상기액션을 수행할 타겟 디바이스를 결정하는 동작을 포함하는 전자 장치의 발화 처리 방법.공개특허 10-2023-0119317-7-"}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "전자 장치 및 전자 장치의 발화 처리 방법이 개시된다. 다양한 실시예에 따른 전자 장치는 프로세서와, 상기 프 로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 복수의 디바이스에서 수신된 사용자의 발화, 상기 복수의 디바이스에서 계산된 웨이크업(wakeup) 발화에 대응하는 신뢰도 값, 상기 복 수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하고, 상기 사용 자의 발화를 처리하기 위한 액션(action)을 결정하고, 상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이 션 정보에 기초하여 상기 복수의 디바이스 중에서 상기 액션을 수행할 타겟 디바이스를 결정한다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "다양한 실시예들은 전자 장치 및 전자 장치의 발화 처리 방법에 관한 것이다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "음성 비서가 일반화됨에 따라 음성 비서를 탑재하고 있는 디바이스가 다수인 상황이 증가하고 있다. 예를 들어, AI(artificial intelligence) 스피커, 모바일 폰, 태블릿, 이어버즈(earbuds) 또는 PC(personal computer) 등이 한 공간에 배치될 수 있다. 일반적으로 음성 비서는 웨이크업 키워드(wakeup keyword)(예: hibixby, Siri, Alexa)를 통해 트리거(trigge r)될 수 있다. 음성 비서는 커맨드 발화를 ASR(automatic speech recognition)을 통해 인지하여, NLU(natural language understanding)를 거쳐 사용자 발화가 어떤 것인지를 분석하고, 액션을 수행하는 과정을 수행한다. 복수의 장치가 동일 공간에 존재하는 경우 사용자가 웨이크업 키워드를 발화하면, 모든 디바이스가 바로 트리거 되지 않고, 하나의 디바이스가 트리거되어 응답하는 기능이 사용될 수 있다. 복수의 디바이스 중에서 웨이크업 되는 디바이스를 선택하는 종래 방식의 경우 오디오 신호의 입력 세기나 거리를 이용하거나 브로드 캐스팅 방식 으로 정보 교환을 통해 위너(winner)를 탐색함으로써 웨이크업 키워드로 트리거되었음을 확인하고 위너를 결정 한다. 하지만, 종래 방식을 이용하여 발화를 처리할 디바이스를 결정하는 경우, 사용자의 발화 의도와는 관계없이 액 션이 수행되는 디바이스가 결정될 가능성이 있다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "다양한 실시예들은, 복수의 디바이스가 존재하는 환경에서, 사용자의 발화를 처리하기 위한 최적의 디바이스를 결정할 수 있다. 다양한 실시예들은, 디바이스의 신뢰도 값, 어플리케이션 정보 및 하드웨어 정보에 기초하여 발화를 처리하기 위한 최적의 디바이스를 결정할 수 있다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "다양한 실시예에 따르면, 전자 장치는 프로세서와, 상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 복수의 디바이스에서 수신된 사용자의 발화, 상기 복수의 디바이스에서 계산된 웨이크업(wakeup) 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디 바이스에서 실행되는 어플리케이션 정보를 수신하고, 상기 사용자의 발화를 처리하기 위한 액션(action)을 결정 하고, 상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 복수의 디바이스 중에 서 상기 액션을 수행할 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 전자 장치는, 프로세서와, 상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 복수의 디바이스에서 수신된 발화의 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 상기 발화를 처리하기 위한 제1 디바이스를 결정하고, 상기 제1 디바이스의 상태에 기초하여 상기 제1 디바이스의 상기 발화의 처리 여부를 결정하고, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보 및 상기 처리 여부에 기초하여 상기 복수의 디바이스 중에서 상기 발 화를 처리하기 위한 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 전자 장치의 발화 처리 방법은, 복수의 디바이스에서 수신된 사용자의 발화, 상기 복 수의 디바이스에서 계산된 웨이크업 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하는 동작과, 상기 사용자의 발화를 처리하기 위한 액 션(action)을 결정하는 동작과, 상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상 기 복수의 디바이스 중에서 상기 액션을 수행할 타겟 디바이스를 결정하는 동작을 포함할 수 있다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "다양한 실시예들은, 사용자의 발화가 입력된 경우, 그래프의 노드에 부여된 권한 여부에 따라 그래프의 실행 여 부를 결정함으로써 과도한 자원의 사용을 방지하고, 사용자의 프라이버시를 확보할 수 있다. 다양한 실시예들은, 그래프의 권한을 파악하고, 발화를 처리하기 위해 요구되는 권한에 비하여 낮은 권한을 가 진 경우, 그래프의 실행을 중단시킴으로써, 과도한 자원을 사용을 방지하고, 사용자의 프라이버시를 확보할 수 있다. 이 외에, 본 문서를 통해 직접적 또는 간접적으로 파악되는 다양한 효과들이 제공될 수 있다."}
{"patent_id": "10-2022-0015304", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 실시예들을 첨부된 도면들을 참조하여 상세하게 설명한다. 첨부 도면을 참조하여 설명함에 있어, 도면 부호에 관계없이 동일한 구성 요소는 동일한 참조 부호를 부여하고, 이에 대한 중복되는 설명은 생략하기로 한 다. 도 1은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 1을 참조하면, 네 트워크 환경에서 전자 장치는 제1 네트워크(예: 근거리 무선 통신 네트워크)를 통하여 전자 장 치와 통신하거나, 또는 제2 네트워크(예: 원거리 무선 통신 네트워크)를 통하여 전자 장치 또는 서버 중 적어도 하나와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 서버를 통하여 전자 장치와 통신할 수 있다. 일실시예에 따르면, 전자 장치는 프로세서, 메모리, 입력 모듈 , 음향 출력 모듈, 디스플레이 모듈, 오디오 모듈, 센서 모듈, 인터페이스, 연 결 단자, 햅틱 모듈, 카메라 모듈, 전력 관리 모듈, 배터리, 통신 모듈, 가입 자 식별 모듈, 또는 안테나 모듈을 포함할 수 있다. 어떤 실시예에서는, 전자 장치에는, 이 구 성요소들 중 적어도 하나(예: 연결 단자)가 생략되거나, 하나 이상의 다른 구성요소가 추가될 수 있다. 어 떤 실시예에서는, 이 구성요소들 중 일부들(예: 센서 모듈, 카메라 모듈, 또는 안테나 모듈)은 하나의 구성요소(예: 디스플레이 모듈)로 통합될 수 있다. 프로세서는, 예를 들면, 소프트웨어(예: 프로그램)를 실행하여 프로세서에 연결된 전자 장치 의 적어도 하나의 다른 구성요소(예: 하드웨어 또는 소프트웨어 구성요소)를 제어할 수 있고, 다양한 데이 터 처리 또는 연산을 수행할 수 있다. 일실시예에 따르면, 데이터 처리 또는 연산의 적어도 일부로서, 프로세서 는 다른 구성요소(예: 센서 모듈 또는 통신 모듈)로부터 수신된 명령 또는 데이터를 휘발성 메모리에 저장하고, 휘발성 메모리에 저장된 명령 또는 데이터를 처리하고, 결과 데이터를 비휘발성 메 모리에 저장할 수 있다. 일실시예에 따르면, 프로세서는 메인 프로세서(예: 중앙 처리 장치 또 는 어플리케이션 프로세서) 또는 이와는 독립적으로 또는 함께 운영 가능한 보조 프로세서(예: 그래픽 처 리 장치, 신경망 처리 장치(NPU: neural processing unit), 이미지 시그널 프로세서, 센서 허브 프로세서, 또는 커뮤니케이션 프로세서)를 포함할 수 있다. 예를 들어, 전자 장치가 메인 프로세서 및 보조 프로세서 를 포함하는 경우, 보조 프로세서는 메인 프로세서보다 저전력을 사용하거나, 지정된 기능에 특 화되도록 설정될 수 있다. 보조 프로세서는 메인 프로세서와 별개로, 또는 그 일부로서 구현될 수 있 다. 보조 프로세서는, 예를 들면, 메인 프로세서가 인액티브(예: 슬립) 상태에 있는 동안 메인 프로세서 를 대신하여, 또는 메인 프로세서가 액티브(예: 어플리케이션 실행) 상태에 있는 동안 메인 프로세서 와 함께, 전자 장치의 구성요소들 중 적어도 하나의 구성요소(예: 디스플레이 모듈, 센서 모듈 , 또는 통신 모듈)와 관련된 기능 또는 상태들의 적어도 일부를 제어할 수 있다. 일실시예에 따르면, 보조 프로세서(예: 이미지 시그널 프로세서 또는 커뮤니케이션 프로세서)는 기능적으로 관련 있는 다른 구 성요소(예: 카메라 모듈 또는 통신 모듈)의 일부로서 구현될 수 있다. 일실시예에 따르면, 보조 프로 세서(예: 신경망 처리 장치)는 인공지능 모델의 처리에 특화된 하드웨어 구조를 포함할 수 있다. 인공지능 모델은 기계 학습을 통해 생성될 수 있다. 이러한 학습은, 예를 들어, 인공지능 모델이 수행되는 전자 장치 자체에서 수행될 수 있고, 별도의 서버(예: 서버)를 통해 수행될 수도 있다. 학습 알고리즘은, 예를 들어, 지도형 학습(supervised learning), 비지도형 학습(unsupervised learning), 준지도형 학습(semi- supervised learning) 또는 강화 학습(reinforcement learning)을 포함할 수 있으나, 전술한 예에 한정되지 않 는다. 인공지능 모델은, 복수의 인공 신경망 레이어들을 포함할 수 있다. 인공 신경망은 심층 신경망(DNN: deep neural network), CNN(convolutional neural network), RNN(recurrent neural network), RBM(restricted boltzmann machine), DBN(deep belief network), BRDNN(bidirectional recurrent deep neural network), 심층 Q-네트워크(deep Q-networks) 또는 상기 중 둘 이상의 조합 중 하나일 수 있으나, 전술한 예에 한정되지 않는다. 인공지능 모델은 하드웨어 구조 이외에, 추가적으로 또는 대체적으로, 소프트웨어 구조를 포함할 수 있 다. 메모리는, 전자 장치의 적어도 하나의 구성요소(예: 프로세서 또는 센서 모듈)에 의해 사 용되는 다양한 데이터를 저장할 수 있다. 데이터는, 예를 들어, 소프트웨어(예: 프로그램) 및, 이와 관련 된 명령에 대한 입력 데이터 또는 출력 데이터를 포함할 수 있다. 메모리는, 휘발성 메모리 또는 비 휘발성 메모리를 포함할 수 있다. 프로그램은 메모리에 소프트웨어로서 저장될 수 있으며, 예를 들면, 운영 체제, 미들 웨어 또는 어플리케이션을 포함할 수 있다. 입력 모듈은, 전자 장치의 구성요소(예: 프로세서)에 사용될 명령 또는 데이터를 전자 장치 의 외부(예: 사용자)로부터 수신할 수 있다. 입력 모듈은, 예를 들면, 마이크, 마우스, 키보드, 키 (예: 버튼), 또는 디지털 펜(예: 스타일러스 펜)을 포함할 수 있다. 음향 출력 모듈은 음향 신호를 전자 장치의 외부로 출력할 수 있다. 음향 출력 모듈은, 예를 들 면, 스피커 또는 리시버를 포함할 수 있다. 스피커는 멀티미디어 재생 또는 녹음 재생과 같이 일반적인 용도로 사용될 수 있다. 리시버는 착신 전화를 수신하기 위해 사용될 수 있다. 일실시예에 따르면, 리시버는 스피커와 별개로, 또는 그 일부로서 구현될 수 있다. 디스플레이 모듈은 전자 장치의 외부(예: 사용자)로 정보를 시각적으로 제공할 수 있다. 디스플레이 모듈은, 예를 들면, 디스플레이, 홀로그램 장치, 또는 프로젝터 및 해당 장치를 제어하기 위한 제어 회로 를 포함할 수 있다. 일실시예에 따르면, 디스플레이 모듈은 터치를 감지하도록 설정된 터치 센서, 또는 상 기 터치에 의해 발생되는 힘의 세기를 측정하도록 설정된 압력 센서를 포함할 수 있다. 오디오 모듈은 소리를 전기 신호로 변환시키거나, 반대로 전기 신호를 소리로 변환시킬 수 있다. 일실시예 에 따르면, 오디오 모듈은, 입력 모듈을 통해 소리를 획득하거나, 음향 출력 모듈, 또는 전자 장치와 직접 또는 무선으로 연결된 외부 전자 장치(예: 전자 장치)(예: 스피커 또는 헤드폰)를 통해 소리를 출력할 수 있다. 센서 모듈은 전자 장치의 작동 상태(예: 전력 또는 온도), 또는 외부의 환경 상태(예: 사용자 상태) 를 감지하고, 감지된 상태에 대응하는 전기 신호 또는 데이터 값을 생성할 수 있다. 일실시예에 따르면, 센서 모듈은, 예를 들면, 제스처 센서, 자이로 센서, 기압 센서, 마그네틱 센서, 가속도 센서, 그립 센서, 근접 센서, 컬러 센서, IR(infrared) 센서, 생체 센서, 온도 센서, 습도 센서, 또는 조도 센서를 포함할 수 있다. 인터페이스는 전자 장치가 외부 전자 장치(예: 전자 장치)와 직접 또는 무선으로 연결되기 위해 사용될 수 있는 하나 이상의 지정된 프로토콜들을 지원할 수 있다. 일실시예에 따르면, 인터페이스는, 예 를 들면, HDMI(high definition multimedia interface), USB(universal serial bus) 인터페이스, SD카드 인터 페이스, 또는 오디오 인터페이스를 포함할 수 있다. 연결 단자는, 그를 통해서 전자 장치가 외부 전자 장치(예: 전자 장치)와 물리적으로 연결될 수 있는 커넥터를 포함할 수 있다. 일실시예에 따르면, 연결 단자는, 예를 들면, HDMI 커넥터, USB 커넥터, SD 카드 커넥터, 또는 오디오 커넥터(예: 헤드폰 커넥터)를 포함할 수 있다. 햅틱 모듈은 전기적 신호를 사용자가 촉각 또는 운동 감각을 통해서 인지할 수 있는 기계적인 자극(예: 진 동 또는 움직임) 또는 전기적인 자극으로 변환할 수 있다. 일실시예에 따르면, 햅틱 모듈은, 예를 들면, 모터, 압전 소자, 또는 전기 자극 장치를 포함할 수 있다. 카메라 모듈은 정지 영상 및 동영상을 촬영할 수 있다. 일실시예에 따르면, 카메라 모듈은 하나 이상 의 렌즈들, 이미지 센서들, 이미지 시그널 프로세서들, 또는 플래시들을 포함할 수 있다. 전력 관리 모듈은 전자 장치에 공급되는 전력을 관리할 수 있다. 일실시예에 따르면, 전력 관리 모듈 은, 예를 들면, PMIC(power management integrated circuit)의 적어도 일부로서 구현될 수 있다. 배터리는 전자 장치의 적어도 하나의 구성요소에 전력을 공급할 수 있다. 일실시예에 따르면, 배터리 는, 예를 들면, 재충전 불가능한 1차 전지, 재충전 가능한 2차 전지 또는 연료 전지를 포함할 수 있다. 통신 모듈은 전자 장치와 외부 전자 장치(예: 전자 장치, 전자 장치, 또는 서버) 간 의 직접(예: 유선) 통신 채널 또는 무선 통신 채널의 수립, 및 수립된 통신 채널을 통한 통신 수행을 지원할 수 있다. 통신 모듈은 프로세서(예: 어플리케이션 프로세서)와 독립적으로 운영되고, 직접(예: 유선) 통 신 또는 무선 통신을 지원하는 하나 이상의 커뮤니케이션 프로세서를 포함할 수 있다. 일실시예에 따르면, 통신 모듈은 무선 통신 모듈(예: 셀룰러 통신 모듈, 근거리 무선 통신 모듈, 또는 GNSS(global navigation satellite system) 통신 모듈) 또는 유선 통신 모듈(예: LAN(local area network) 통신 모듈, 또는 전력선 통신 모듈)을 포함할 수 있다. 이들 통신 모듈 중 해당하는 통신 모듈은 제 1 네트워크(예: 블루투스, WiFi(wireless fidelity) direct 또는 IrDA(infrared data association)와 같은 근거리 통신 네트워 크) 또는 제 2 네트워크(예: 레거시 셀룰러 네트워크, 5G 네트워크, 차세대 통신 네트워크, 인터넷, 또는 컴퓨터 네트워크(예: LAN 또는 WAN)와 같은 원거리 통신 네트워크)를 통하여 외부의 전자 장치와 통신할 수 있다. 이런 여러 종류의 통신 모듈들은 하나의 구성요소(예: 단일 칩)로 통합되거나, 또는 서로 별도의 복수 의 구성요소들(예: 복수 칩들)로 구현될 수 있다. 무선 통신 모듈은 가입자 식별 모듈에 저장된 가입 자 정보(예: 국제 모바일 가입자 식별자(IMSI))를 이용하여 제1 네트워크 또는 제2 네트워크와 같은 통신 네트워크 내에서 전자 장치를 확인 또는 인증할 수 있다. 무선 통신 모듈은 4G 네트워크 이후의 5G 네트워크 및 차세대 통신 기술, 예를 들어, NR 접속 기술(new radio access technology)을 지원할 수 있다. NR 접속 기술은 고용량 데이터의 고속 전송(eMBB(enhanced mobile broadband)), 단말 전력 최소화와 다수 단말의 접속(mMTC(massive machine type communications)), 또 는 고신뢰도와 저지연(URLLC(ultra-reliable and low-latency communications))을 지원할 수 있다. 무선 통신 모듈은, 예를 들어, 높은 데이터 전송률 달성을 위해, 고주파 대역(예: mmWave 대역)을 지원할 수 있다. 무선 통신 모듈은 고주파 대역에서의 성능 확보를 위한 다양한 기술들, 예를 들어, 빔포밍(beamforming), 거대 배열 다중 입출력(massive MIMO(multiple-input and multiple-output)), 전차원 다중입출력(FD-MIMO: full dimensional MIMO), 어레이 안테나(array antenna), 아날로그 빔형성(analog beam-forming), 또는 대규모 안테나(large scale antenna)와 같은 기술들을 지원할 수 있다. 무선 통신 모듈은 전자 장치, 외부 전자 장치(예: 전자 장치) 또는 네트워크 시스템(예: 제2 네트워크)에 규정되는 다양한 요구사항을 지원할 수 있다. 일실시예에 따르면, 무선 통신 모듈은 eMBB 실현을 위한 Peak data rate(예: 20Gbps 이 상), mMTC 실현을 위한 손실 Coverage(예: 164dB 이하), 또는 URLLC 실현을 위한 U-plane latency(예: 다운링 크(DL) 및 업링크(UL) 각각 0.5ms 이하, 또는 라운드 트립 1ms 이하)를 지원할 수 있다. 안테나 모듈은 신호 또는 전력을 외부(예: 외부의 전자 장치)로 송신하거나 외부로부터 수신할 수 있다. 일실시예에 따르면, 안테나 모듈은 서브스트레이트(예: PCB) 위에 형성된 도전체 또는 도전성 패턴으로 이 루어진 방사체를 포함하는 안테나를 포함할 수 있다. 일실시예에 따르면, 안테나 모듈은 복수의 안테나들 (예: 어레이 안테나)을 포함할 수 있다. 이런 경우, 제1 네트워크 또는 제2 네트워크와 같은 통신 네 트워크에서 사용되는 통신 방식에 적합한 적어도 하나의 안테나가, 예를 들면, 통신 모듈에 의하여 상기 복수의 안테나들로부터 선택될 수 있다. 신호 또는 전력은 상기 선택된 적어도 하나의 안테나를 통하여 통신 모 듈과 외부의 전자 장치 간에 송신되거나 수신될 수 있다. 어떤 실시예에 따르면, 방사체 이외에 다른 부품 (예: RFIC(radio frequency integrated circuit))이 추가로 안테나 모듈의 일부로 형성될 수 있다. 다양한 실시예에 따르면, 안테나 모듈은 mmWave 안테나 모듈을 형성할 수 있다. 일실시예에 따르면, mmWave 안테나 모듈은 인쇄 회로 기판, 상기 인쇄 회로 기판의 제1 면(예: 아래 면)에 또는 그에 인접하여 배치 되고 지정된 고주파 대역(예: mmWave 대역)을 지원할 수 있는 RFIC, 및 상기 인쇄 회로 기판의 제2 면(예: 윗 면 또는 측 면)에 또는 그에 인접하여 배치되고 상기 지정된 고주파 대역의 신호를 송신 또는 수신할 수 있는 복수의 안테나들(예: 어레이 안테나)을 포함할 수 있다. 상기 구성요소들 중 적어도 일부는 주변 디바이스들간 통신 방식(예: 버스, GPIO(general purpose input and output), SPI(serial peripheral interface), 또는 MIPI(mobile industry processor interface))을 통해 서로 연결되고 신호(예: 명령 또는 데이터)를 상호간에 교환할 수 있다. 일실시예에 따르면, 명령 또는 데이터는 제2 네트워크에 연결된 서버를 통해서 전자 장치와 외 부의 전자 장치간에 송신 또는 수신될 수 있다. 외부의 전자 장치(102, 또는 104) 각각은 전자 장치 와 동일한 또는 다른 종류의 장치일 수 있다. 일실시예에 따르면, 전자 장치에서 실행되는 동작들의 전부 또는 일부는 외부의 전자 장치들(102, 104, 또는 108) 중 하나 이상의 외부의 전자 장치들에서 실행될 수 있다. 예를 들면, 전자 장치가 어떤 기능이나 서비스를 자동으로, 또는 사용자 또는 다른 장치로부터의 요청에 반응하여 수행해야 할 경우에, 전자 장치는 기능 또는 서비스를 자체적으로 실행시키는 대신에 또는 추가 적으로, 하나 이상의 외부의 전자 장치들에게 그 기능 또는 그 서비스의 적어도 일부를 수행하라고 요청할 수 있다. 상기 요청을 수신한 하나 이상의 외부의 전자 장치들은 요청된 기능 또는 서비스의 적어도 일부, 또는 상 기 요청과 관련된 추가 기능 또는 서비스를 실행하고, 그 실행의 결과를 전자 장치로 전달할 수 있다. 전 자 장치는 상기 결과를, 그대로 또는 추가적으로 처리하여, 상기 요청에 대한 응답의 적어도 일부로서 제 공할 수 있다. 이를 위하여, 예를 들면, 클라우드 컴퓨팅, 분산 컴퓨팅, 모바일 에지 컴퓨팅(MEC: mobile edge computing), 또는 클라이언트-서버 컴퓨팅 기술이 이용될 수 있다. 전자 장치는, 예를 들어, 분산 컴퓨팅 또는 모바일 에지 컴퓨팅을 이용하여 초저지연 서비스를 제공할 수 있다. 다른 실시예에 있어서, 외부의 전자 장치는 IoT(internet of things) 디바이스를 포함할 수 있다. 서버는 기계 학습 및/또는 신경망을 이용한 지능형 서버일 수 있다. 일실시예에 따르면, 외부의 전자 장치 또는 서버는 제2 네트워크 내에 포함될 수 있다. 전자 장치는 5G 통신 기술 및 IoT 관련 기술을 기반으로 지능형 서비스(예: 스마트 홈, 스마트 시티, 스마트 카, 또는 헬스 케어)에 적용될 수 있다. 본 문서에 개시된 다양한 실시예들에 따른 전자 장치는 다양한 형태의 장치가 될 수 있다. 전자 장치는, 예를 들면, 휴대용 통신 장치(예: 스마트폰), 컴퓨터 장치, 휴대용 멀티미디어 장치, 휴대용 의료 디바이스, 카메라, 웨어러블 장치, 또는 가전 장치를 포함할 수 있다. 본 문서의 실시예에 따른 전자 장치는 전술한 디바이스들에 한정되지 않는다. 본 문서의 다양한 실시예들 및 이에 사용된 용어들은 본 문서에 기재된 기술적 특징들을 특정한 실시예들로 한 정하려는 것이 아니며, 해당 실시예의 다양한 변경, 균등물, 또는 대체물을 포함하는 것으로 이해되어야 한다. 도면의 설명과 관련하여, 유사한 또는 관련된 구성요소에 대해서는 유사한 참조 부호가 사용될 수 있다. 아이템 에 대응하는 명사의 단수 형은 관련된 문맥상 명백하게 다르게 지시하지 않는 한, 상기 아이템 한 개 또는 복수 개를 포함할 수 있다. 본 문서에서, \"A 또는 B\", \"A 및 B 중 적어도 하나\", \"A 또는 B 중 적어도 하나\", \"A, B 또는 C\", \"A, B 및 C 중 적어도 하나\", 및 \"A, B, 또는 C 중 적어도 하나\"와 같은 문구들 각각은 그 문구들 중 해당하는 문구에 함께 나열된 항목들 중 어느 하나, 또는 그들의 모든 가능한 조합을 포함할 수 있다. \"제1\", \"제2\", 또는 \"첫째\" 또는 \"둘째\"와 같은 용어들은 단순히 해당 구성요소를 다른 해당 구성요소와 구분하기 위 해 사용될 수 있으며, 해당 구성요소들을 다른 측면(예: 중요성 또는 순서)에서 한정하지 않는다. 어떤(예: 제 1) 구성요소가 다른(예: 제2) 구성요소에, \"기능적으로\" 또는 \"통신적으로\"라는 용어와 함께 또는 이런 용어 없 이, \"커플드\" 또는 \"커넥티드\"라고 언급된 경우, 그것은 상기 어떤 구성요소가 상기 다른 구성요소에 직접적으로(예: 유선으로), 무선으로, 또는 제3 구성요소를 통하여 연결될 수 있다는 것을 의미한다. 본 문서의 다양한 실시예들에서 사용된 용어 \"모듈\"은 하드웨어, 소프트웨어 또는 펌웨어로 구현된 유닛을 포함 할 수 있으며, 예를 들면, 로직, 논리 블록, 부품, 또는 회로와 같은 용어와 상호 호환적으로 사용될 수 있다. 모듈은, 일체로 구성된 부품 또는 하나 또는 그 이상의 기능을 수행하는, 상기 부품의 최소 단위 또는 그 일부 가 될 수 있다. 예를 들면, 일실시예에 따르면, 모듈은 ASIC(application-specific integrated circuit)의 형 태로 구현될 수 있다. 본 문서의 다양한 실시예들은 디바이스(machine)(예: 전자 장치)에 의해 읽을 수 있는 저장 매체(storage medium)(예: 내장 메모리 또는 외장 메모리)에 저장된 하나 이상의 명령어들을 포함하는 소프트웨어 (예: 프로그램)로서 구현될 수 있다. 예를 들면, 디바이스(예: 전자 장치)의 프로세서(예: 프로세서 )는, 저장 매체로부터 저장된 하나 이상의 명령어들 중 적어도 하나의 명령을 호출하고, 그것을 실행할 수 있다. 이것은 디바이스가 상기 호출된 적어도 하나의 명령어에 따라 적어도 하나의 기능을 수행하도록 운영되는 것을 가능하게 한다. 상기 하나 이상의 명령어들은 컴파일러에 의해 생성된 코드 또는 인터프리터에 의해 실행 될 수 있는 코드를 포함할 수 있다. 디바이스로 읽을 수 있는 저장 매체는, 비일시적(non-transitory) 저장 매 체의 형태로 제공될 수 있다. 여기서, '비일시적'은 저장 매체가 실재(tangible)하는 장치이고, 신호(signal) (예: 전자기파)를 포함하지 않는다는 것을 의미할 뿐이며, 이 용어는 데이터가 저장 매체에 반영구적으로 저장 되는 경우와 임시적으로 저장되는 경우를 구분하지 않는다. 일실시예에 따르면, 본 문서에 개시된 다양한 실시예들에 따른 방법은 컴퓨터 프로그램 제품(computer program product)에 포함되어 제공될 수 있다. 컴퓨터 프로그램 제품은 상품으로서 판매자 및 구매자 간에 거래될 수 있 다. 컴퓨터 프로그램 제품은 디바이스로 읽을 수 있는 저장 매체(예: compact disc read only memory(CD- ROM))의 형태로 배포되거나, 또는 어플리케이션 스토어(예: 플레이 스토어TM)를 통해 또는 두 개의 사용자 장치 들(예: 스마트 폰들) 간에 직접, 온라인으로 배포(예: 다운로드 또는 업로드)될 수 있다. 온라인 배포의 경우에, 컴퓨터 프로그램 제품의 적어도 일부는 제조사의 서버, 어플리케이션 스토어의 서버, 또는 중계 서버의 메모리와 같은 디바이스로 읽을 수 있는 저장 매체에 적어도 일시 저장되거나, 임시적으로 생성될 수 있다. 다양한 실시예들에 따르면, 상기 기술한 구성요소들의 각각의 구성요소(예: 모듈 또는 프로그램)는 단수 또는 복수의 개체를 포함할 수 있으며, 복수의 개체 중 일부는 다른 구성요소에 분리 배치될 수도 있다. 다양한 실시 예들에 따르면, 전술한 해당 구성요소들 중 하나 이상의 구성요소들 또는 동작들이 생략되거나, 또는 하나 이상 의 다른 구성요소들 또는 동작들이 추가될 수 있다. 대체적으로 또는 추가적으로, 복수의 구성요소들(예: 모듈 또는 프로그램)은 하나의 구성요소로 통합될 수 있다. 이런 경우, 통합된 구성요소는 상기 복수의 구성요소들 각각의 구성요소의 하나 이상의 기능들을 상기 통합 이전에 상기 복수의 구성요소들 중 해당 구성요소에 의해 수행되는 것과 동일 또는 유사하게 수행할 수 있다. 다양한 실시예들에 따르면, 모듈, 프로그램 또는 다른 구성 요소에 의해 수행되는 동작들은 순차적으로, 병렬적으로, 반복적으로, 또는 휴리스틱하게 실행되거나, 상기 동 작들 중 하나 이상이 다른 순서로 실행되거나, 생략되거나, 또는 하나 이상의 다른 동작들이 추가될 수 있다. 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 2를 참조하면, 일 실시예의 통합 지능화 시스템은 전자 장치(예: 도 1의 전자 장치), 지능형 서버 (예: 도 1의 서버), 및 서비스 서버(예: 도 1의 서버)를 포함할 수 있다. 일 실시 예의 전자 장치는, 인터넷에 연결 가능한 단말 장치(또는, 전자 장치)일 수 있으며, 예를 들어, 휴대폰, 스마트폰, PDA(personal digital assistant), 노트북 컴퓨터, TV, 백색 가전, 웨어러블 장치, HMD, 또 는 스마트 스피커일 수 있다. 도시된 실시 예에 따르면, 전자 장치는 통신 인터페이스(예: 도 1의 인터페이스), 마이크(150- 1)(예: 도 1의 입력 모듈), 스피커(155-1)(예: 도 1의 음향 출력 모듈), 디스플레이 모듈(예: 도 1의 디스플레이 모듈), 메모리(예: 도 1의 메모리), 또는 프로세서(예: 도 1의 프로세 서)를 포함할 수 있다. 상기 열거된 구성요소들은 서로 작동적으로 또는 전기적으로 연결될 수 있다. 일 실시 예의 통신 인터페이스는 외부 장치와 연결되어 데이터를 송수신하도록 구성될 수 있다. 일 실시 예의 마이크(150-1)는 소리(예: 사용자 발화)를 수신하여, 전기적 신호로 변환할 수 있다. 일 실시예의 스피커 (155-1)는 전기적 신호를 소리(예: 음성)으로 출력할 수 있다.일 실시 예의 디스플레이 모듈은 이미지 또는 비디오를 표시하도록 구성될 수 있다. 일 실시 예의 디스플 레이 모듈은 또한 실행되는 앱(app)(또는, 어플리케이션 프로그램(application program))의 그래픽 사용자 인터페이스(graphic user interface)(GUI)를 표시할 수 있다. 일 실시 예의 디스플레이 모듈은 터치 센 서를 통해 터치 입력을 수신할 수 있다. 예를 들어, 디스플레이 모듈은 디스플레이 모듈 내에 표시 되는 화상 키보드 영역의 터치 센서를 통해 텍스트 입력을 수신할 수 있다. 일 실시 예의 메모리는 클라이언트 모듈, SDK(software development kit), 및 복수의 앱들 (예: 도 1의 어플리케이션)을 저장할 수 있다. 상기 클라이언트 모듈, 및 SDK는 범용적인 기능을 수행하기 위한 프레임워크(framework)(또는, 솔루션 프로그램)를 구성할 수 있다. 또한, 클라이언트 모 듈 또는 SDK는 사용자 입력(예: 음성 입력, 텍스트 입력, 터치 입력)을 처리하기 위한 프레임워크를 구성할 수 있다. 일 실시 예의 메모리는 상기 복수의 앱들은 지정된 기능을 수행하기 위한 프로그램일 수 있다. 일 실 시 예에 따르면, 복수의 앱은 제1 앱(146_1), 제2 앱(146_3)을 포함할 수 있다. 일 실시 예에 따르면, 복 수의 앱 각각은 지정된 기능을 수행하기 위한 복수의 동작들을 포함할 수 있다. 예를 들어, 상기 앱들은, 알람 앱, 메시지 앱, 및/또는 스케줄 앱을 포함할 수 있다. 일 실시 예에 따르면, 복수의 앱들은 프로세 서에 의해 실행되어 상기 복수의 동작들 중 적어도 일부를 순차적으로 실행할 수 있다. 일 실시 예의 프로세서는 전자 장치의 전반적인 동작을 제어할 수 있다. 예를 들어, 프로세서는 통신 인터페이스, 마이크(150-1), 스피커(155-1), 및 디스플레이 모듈과 전기적으로 연결되어 지정된 동작을 수행할 수 있다. 일 실시 예의 프로세서는 또한 상기 메모리에 저장된 프로그램을 실행시켜 지정된 기능을 수행할 수 있다. 예를 들어, 프로세서는 클라이언트 모듈 또는 SDK 중 적어도 하나를 실행하여, 사용자 입력을 처리하기 위한 이하의 동작을 수행할 수 있다. 프로세서는, 예를 들어, SDK를 통해 복수의 앱 의 동작을 제어할 수 있다. 클라이언트 모듈 또는 SDK의 동작으로 설명된 이하의 동작은 프로 세서의 실행에 의한 동작일 수 있다. 일 실시 예의 클라이언트 모듈은 사용자 입력을 수신할 수 있다. 예를 들어, 클라이언트 모듈은 마이 크(150-1)를 통해 감지된 사용자 발화에 대응되는 음성 신호를 수신할 수 있다. 또는, 클라이언트 모듈은 디스플레이 모듈을 통해 감지된 터치 입력을 수신할 수 있다. 또는, 클라이언트 모듈은 키보드 또는 화상 키보드를 통해 감지된 텍스트 입력을 수신할 수 있다. 이 외에도, 전자 장치에 포함된 입력 모듈 또 는 전자 장치에 연결된 입력 모듈을 통해 감지되는 다양한 형태의 사용자 입력을 수신할 수 있다. 상기 클라이언트 모듈은 수신된 사용자 입력을 지능형 서버로 송신할 수 있다. 클라이언트 모듈은 수 신된 사용자 입력과 함께, 전자 장치의 상태 정보를 지능형 서버로 송신할 수 있다. 상기 상태 정보 는, 예를 들어, 앱의 실행 상태 정보일 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 사용자 입력에 대응되는 결과를 수신할 수 있다. 예를 들어, 클라 이언트 모듈은 지능형 서버에서 상기 수신된 사용자 입력에 대응되는 결과를 산출할 수 있는 경우, 수신된 사용자 입력에 대응되는 결과를 수신할 수 있다. 클라이언트 모듈은 상기 수신된 결과를 디스플레 이 모듈에 표시할 수 있다. 또한, 클라이언트 모듈은 상기 수신된 결과를 스피커(155-1)를 통해 오디 오로 출력할 수 있다. 일 실시 예의 클라이언트 모듈은 수신된 사용자 입력에 대응되는 플랜을 수신할 수 있다. 클라이언트 모듈 은 플랜에 따라 앱의 복수의 동작을 실행한 결과를 디스플레이 모듈에 표시할 수 있다. 클라이언트 모듈은, 예를 들어, 복수의 동작의 실행 결과를 순차적으로 디스플레이 모듈에 표시할 수 있고, 스피 커(155-1)를 통해 오디오를 출력할 수 있다. 전자 장치는, 다른 예를 들어, 복수의 동작을 실행한 일부 결 과(예: 마지막 동작의 결과)만을 디스플레이 모듈에 표시할 수 있으며, 스피커(155-1)를 통해 오디오로 출 력할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 지능형 서버로부터 사용자 입력에 대응되는 결과를 산출하 기 위해 필요한 정보를 획득하기 위한 요청을 수신할 수 있다. 일 실시 예에 따르면, 클라이언트 모듈은 상기 요청에 대응하여 상기 필요한 정보를 지능형 서버로 송신할 수 있다. 일 실시 예의 클라이언트 모듈은 플랜에 따라 복수의 동작을 실행한 결과 정보를 지능형 서버로 송신 할 수 있다. 지능형 서버는 상기 결과 정보를 이용하여 수신된 사용자 입력이 올바르게 처리된 것을 확인할 수 있다. 일 실시 예의 클라이언트 모듈은 음성 인식 모듈을 포함할 수 있다. 일 실시 예에 따르면, 클라이언트 모 듈은 상기 음성 인식 모듈을 통해 제한된 기능을 수행하는 음성 입력을 인식할 수 있다. 예를 들어, 클라 이언트 모듈은 지정된 입력(예: 웨이크 업!)을 통해 유기적인 동작을 수행하기 위한 음성 입력을 처리하기 위한 지능형 앱을 수행할 수 있다. 일 실시 예의 지능형 서버는 통신 망을 통해 전자 장치로부터 사용자 음성 입력과 관련된 정보를 수 신할 수 있다. 일 실시 예에 따르면, 지능형 서버는 수신된 음성 입력과 관련된 데이터를 텍스트 데이터 (text data)로 변경할 수 있다. 일 실시 예에 따르면, 지능형 서버는 상기 텍스트 데이터에 기초하여 사용 자 음성 입력과 대응되는 태스크(task)를 수행하기 위한 플랜(plan)을 생성할 수 있다 일 실시 예에 따르면, 플랜은 인공 지능(artificial intelligent)(AI) 시스템에 의해 생성될 수 있다. 인공지능 시스템은 룰 베이스 시스템(rule-based system) 일 수도 있고, 신경망 베이스 시스템(neural network-based system)(예: 피드포워드 신경망(feedforward neural network(FNN)), 순환 신경망(recurrent neural network(RNN))) 일 수도 있다. 또는, 전술한 것의 조합 또는 이와 다른 인공지능 시스템일 수도 있다. 일 실시 예에 따르면, 플랜은 미리 정의된 플랜의 집합에서 선택될 수 있거나, 사용자 요청에 응답하여 실시간으로 생성 될 수 있다. 예를 들어, 인공지능 시스템은 미리 정의된 복수의 플랜 중 적어도 플랜을 선택할 수 있다. 일 실시 예의 지능형 서버는 생성된 플랜에 따른 결과를 전자 장치로 송신하거나, 생성된 플랜을 전 자 장치로 송신할 수 있다. 일 실시 예에 따르면, 전자 장치는 플랜에 따른 결과를 디스플레이에 표 시할 수 있다. 일 실시 예에 따르면, 전자 장치는 플랜에 따른 동작을 실행한 결과를 디스플레이에 표시할 수 있다. 일 실시 예의 지능형 서버는 프론트 엔드(front end), 자연어 플랫폼(natural language platform), 캡슐 데이터베이스(capsule DB), 실행 엔진(execution engine), 엔드 유저 인터페 이스(end user interface), 매니지먼트 플랫폼(management platform), 빅 데이터 플랫폼(big data platform), 또는 분석 플랫폼(analytic platform)을 포함할 수 있다. 일 실시 예의 프론트 엔드는 전자 장치로부터 수신된 사용자 입력을 수신할 수 있다. 프론트 엔드 는 상기 사용자 입력에 대응되는 응답을 송신할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼은 자동 음성 인식 모듈(automatic speech recognition module)(ASR module), 자연어 이해 모듈(natural language understanding module)(NLU module), 플래너 모듈 (planner module), 자연어 생성 모듈(natural language generator module)(NLG module) 또는 텍스트 음성 변환 모듈(text to speech module)(TTS module)를 포함할 수 있다. 일 실시 예의 자동 음성 인식 모듈은 전자 장치로부터 수신된 음성 입력을 텍스트 데이터로 변환할 수 있다. 일 실시 예의 자연어 이해 모듈은 음성 입력의 텍스트 데이터를 이용하여 사용자의 의도를 파악 할 수 있다. 예를 들어, 자연어 이해 모듈은 텍스트 데이터 형태의 사용자 입력에 대하여 문법적 분석 (syntactic analyze) 또는 의미적 분석(semantic analyze)을 수행하여 사용자의 의도를 파악할 수 있다. 일 실 시 예의 자연어 이해 모듈은 형태소 또는 구의 언어적 특징(예: 문법적 요소)을 이용하여 사용자 입력으로 부터 추출된 단어의 의미를 파악하고, 상기 파악된 단어의 의미를 의도에 매칭시켜 사용자의 의도를 결정할 수 있다. 일 실시 예의 플래너 모듈은 자연어 이해 모듈에서 결정된 의도 및 파라미터를 이용하여 플랜을 생성 할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 의도에 기초하여 태스크를 수행하기 위해 필요한 복수의 도메인을 결정할 수 있다. 플래너 모듈은 상기 의도에 기초하여 결정된 복수의 도메인 각각 에 포함된 복수의 동작을 결정할 수 있다. 일 실시 예에 따르면, 플래너 모듈은 상기 결정된 복수의 동작 을 실행하는데 필요한 파라미터나, 상기 복수의 동작의 실행에 의해 출력되는 결과 값을 결정할 수 있다. 상기 파라미터, 및 상기 결과 값은 지정된 형식(또는, 클래스)의 컨셉으로 정의될 수 있다. 이에 따라, 플랜은 사용 자의 의도에 의해 결정된 복수의 동작, 및 복수의 컨셉을 포함할 수 있다. 상기 플래너 모듈은 상기 복수 의 동작, 및 상기 복수의 컨셉 사이의 관계를 단계적(또는, 계층적)으로 결정할 수 있다. 예를 들어, 플래너 모 듈은 복수의 컨셉에 기초하여 사용자의 의도에 기초하여 결정된 복수의 동작의 실행 순서를 결정할 수 있 다. 다시 말해, 플래너 모듈은 복수의 동작의 실행에 필요한 파라미터, 및 복수의 동작의 실행에 의해 출 력되는 결과에 기초하여, 복수의 동작의 실행 순서를 결정할 수 있다. 이에 따라, 플래너 모듈은 복수의동작, 및 복수의 컨셉 사이의 연관 정보(예: 온톨로지(ontology))가 포함된 플랜을 생성할 수 있다. 상기 플래 너 모듈은 컨셉과 동작의 관계들의 집합이 저장된 캡슐 데이터베이스에 저장된 정보를 이용하여 플랜 을 생성할 수 있다. 일 실시 예의 자연어 생성 모듈은 지정된 정보를 텍스트 형태로 변경할 수 있다. 상기 텍스트 형태로 변경 된 정보는 자연어 발화의 형태일 수 있다. 일 실시 예의 텍스트 음성 변환 모듈은 텍스트 형태의 정보를 음성 형태의 정보로 변경할 수 있다. 일 실시 예에 따르면, 자연어 플랫폼의 기능의 일부 기능 또는 전체 기능은 전자 장치에서도 구현가 능 할 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인에 대응되는 복수의 컨셉과 동작들의 관계에 대한 정보를 저장할 수 있다. 일 실시예에 따른 캡슐은 플랜에 포함된 복수의 동작 오브젝트(action object 또는, 동작 정보) 및 컨 셉 오브젝트(concept object 또는 컨셉 정보)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스(23 0)는 CAN(concept action network)의 형태로 복수의 캡슐을 저장할 수 있다. 일 실시 예에 따르면, 복수의 캡슐 은 캡슐 데이터베이스에 포함된 기능 저장소(function registry)에 저장될 수 있다. 상기 캡슐 데이터베이스는 음성 입력에 대응되는 플랜을 결정할 때 필요한 전략 정보가 저장된 전략 레지 스트리(strategy registry)를 포함할 수 있다. 상기 전략 정보는 사용자 입력에 대응되는 복수의 플랜이 있는 경우, 하나의 플랜을 결정하기 위한 기준 정보를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 지정된 상황에서 사용자에게 후속 동작을 제안하기 위한 후속 동작의 정보가 저장된 후속 동작 레지스 트리(follow up registry)를 포함할 수 있다. 상기 후속 동작은, 예를 들어, 후속 발화를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 전자 장치를 통해 출력되는 정보의 레이아웃(layout) 정보를 저장하는 레이아웃 레지스트리(layout registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스 는 캡슐 정보에 포함된 어휘(vocabulary) 정보가 저장된 어휘 레지스트리(vocabulary registry)를 포함할 수 있다. 일 실시 예에 따르면, 캡슐 데이터베이스는 사용자와의 대화(dialog)(또는, 인터렉션 (interaction)) 정보가 저장된 대화 레지스트리(dialog registry)를 포함할 수 있다. 상기 캡슐 데이터베이스 는 개발자 툴(developer tool)을 통해 저장된 오브젝트를 업데이트(update)할 수 있다. 상기 개발자 툴은, 예를 들어, 동작 오브젝트 또는 컨셉 오브젝트를 업데이트하기 위한 기능 에디터(function editor)를 포함할 수 있다. 상기 개발자 툴은 어휘를 업데이트하기 위한 어휘 에디터(vocabulary editor)를 포함할 수 있다. 상기 개 발자 툴은 플랜을 결정하는 전략을 생성 및 등록하는 전략 에디터(strategy editor)를 포함할 수 있다. 상기 개 발자 툴은 사용자와의 대화를 생성하는 대화 에디터(dialog editor)를 포함할 수 있다. 상기 개발자 툴은 후속 목표를 활성화하고, 힌트를 제공하는 후속 발화를 편집할 수 있는 후속 동작 에디터(follow up editor)를 포함 할 수 있다. 상기 후속 목표는 현재 설정된 목표, 사용자의 선호도 또는 환경 조건에 기초하여 결정될 수 있다. 일 실시 예에서는 캡슐 데이터베이스는 전자 장치 내에도 구현이 가능할 수 있다. 일 실시 예의 실행 엔진은 상기 생성된 플랜을 이용하여 결과를 산출할 수 있다. 엔드 유저 인터페이스 는 산출된 결과를 전자 장치로 송신할 수 있다. 이에 따라, 전자 장치는 상기 결과를 수신하고, 상기 수신된 결과를 사용자에게 제공할 수 있다. 일 실시 예의 매니지먼트 플랫폼은 지능형 서버에서 이용되는 정보를 관리할 수 있다. 일 실시 예의 빅 데이터 플랫폼은 사용자의 데이터를 수집할 수 있다. 일 실시 예의 분석 플랫폼은 지능형 서버의 QoS(quality of service)를 관리할 수 있다. 예를 들어, 분석 플랫폼은 지능형 서버의 구성 요소 및 처리 속도(또는, 효율성)를 관리할 수 있다. 일 실시 예의 서비스 서버는 전자 장치에 지정된 서비스(예: 음식 주문 또는 호텔 예약)를 제공할 수 있다. 일 실시 예에 따르면, 서비스 서버는 제3 자에 의해 운영되는 서버일 수 있다. 일 실시 예의 서비스 서버는 수신된 사용자 입력에 대응되는 플랜을 생성하기 위한 정보를 지능형 서버에 제공할 수 있다. 상기 제공된 정보는 캡슐 데이터베이스에 저장될 수 있다. 또한, 서비스 서버는 플랜에 따른 결과 정 보를 지능형 서버에 제공할 수 있다. 위에 기술된 통합 지능 시스템에서, 상기 전자 장치는, 사용자 입력에 응답하여 사용자에게 다양한 인 텔리전트 서비스를 제공할 수 있다. 상기 사용자 입력은, 예를 들어, 물리적 버튼을 통한 입력, 터치 입력 또 는 음성 입력을 포함할 수 있다. 일 실시 예에서, 상기 전자 장치는 내부에 저장된 지능형 앱(또는, 음성 인식 앱)을 통해 음성 인식 서비 스를 제공할 수 있다. 이 경우, 예를 들어, 전자 장치는 상기 마이크를 통해 수신된 사용자 발화(utterance) 또는 음성 입력(voice input)을 인식하고, 인식된 음성 입력에 대응되는 서비스를 사용자에게 제공 할 수 있다. 일 실시 예에서, 전자 장치는 수신된 음성 입력에 기초하여, 단독으로 또는 상기 지능형 서버 및/또는 서 비스 서버와 함께 지정된 동작을 수행할 수 있다. 예를 들어, 전자 장치는 수신된 음성 입력에 대응되는 앱을 실행시키고, 실행된 앱을 통해 지정된 동작을 수행할 수 있다. 일 실시 예에서, 전자 장치가 지능형 서버 및/또는 서비스 서버와 함께 서비스를 제공하는 경우에는, 상기 전자 장치는, 상기 마이크(150-1)를 이용하여 사용자 발화를 감지하고, 상기 감지된 사용자 발화에 대응되는 신호(또는, 음성 데이터)를 생성할 수 있다. 상기 전자 장치는, 상기 음성 데이터를 통신 인터 페이스를 이용하여 지능형 서버로 송신할 수 있다. 일 실시 예에 따른 지능형 서버는 전자 장치로부터 수신된 음성 입력에 대한 응답으로써, 음성 입력 에 대응되는 태스크(task)를 수행하기 위한 플랜, 또는 상기 플랜에 따라 동작을 수행한 결과를 생성할 수 있다. 상기 플랜은, 예를 들어, 사용자의 음성 입력에 대응되는 태스크(task)를 수행하기 위한 복수의 동작, 및 상기 복수의 동작과 관련된 복수의 컨셉을 포함할 수 있다. 상기 컨셉은 상기 복수의 동작의 실행에 입력되는 파라미터나, 복수의 동작의 실행에 의해 출력되는 결과 값을 정의한 것일 수 있다. 상기 플랜은 복수의 동작, 및 복수의 컨셉 사이의 연관 정보를 포함할 수 있다. 일 실시 예의 전자 장치는, 통신 인터페이스를 이용하여 상기 응답을 수신할 수 있다. 전자 장치 는 상기 스피커(155-1)를 이용하여 전자 장치 내부에서 생성된 음성 신호를 외부로 출력하거나, 디스 플레이 모듈을 이용하여 전자 장치 내부에서 생성된 이미지를 외부로 출력할 수 있다. 도 3은 다양한 실시 예에 따른, 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 상기 지능형 서버의 캡슐 데이터베이스(예: 캡슐 데이터베이스)는 CAN (concept action network) 형태로 캡슐을 저장할 수 있다. 상기 캡슐 데이터베이스는 사용자의 음성 입력에 대응되는 태스 크를 처리하기 위한 동작, 및 상기 동작을 위해 필요한 파라미터를 CAN(concept action network) 형태로 저장될 수 있다. 상기 캡슐 데이터베이스는 복수의 도메인(예: 어플리케이션) 각각에 대응되는 복수의 캡슐(capsule(A), capsule(B))을 저장할 수 있다. 일 실시 예에 따르면, 하나의 캡슐(예: capsule(A))은 하나의 도메 인(예: 위치(geo), 어플리케이션)에 대응될 수 있다. 또한, 하나의 캡슐에는 캡슐과 관련된 도메인에 대한 기능 을 수행하기 위한 적어도 하나의 서비스 제공자(예: CP 1 또는 CP 2 )가 대응될 수 있다. 일 실시 예 에 따르면, 하나의 캡슐은 지정된 기능을 수행하기 위한 적어도 하나 이상의 동작 및 적어도 하나 이상의 컨셉을 포함할 수 있다. 상기, 자연어 플랫폼은 캡슐 데이터베이스에 저장된 캡슐을 이용하여 수신된 음성 입력에 대응하는 태스크 를 수행하기 위한 플랜을 생성할 수 있다. 예를 들어, 자연어 플랫폼의 플래너 모듈은 캡슐 데이터베이스 에 저장된 캡슐을 이용하여 플랜을 생성할 수 있다. 예를 들어, 캡슐 A 의 동작들(4011,4013) 과 컨셉들 (4012,4014) 및 캡슐 B의 동작과 컨셉을 이용하여 플랜을 생성할 수 있다. 도 4는 다양한 실시 예에 따른 전자 장치가 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면 이다. 전자 장치(예: 도 1의 전자 장치)는 지능형 서버(예: 도 2의 지능형 서버)를 통해 사용자 입력을 처 리하기 위해 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 310 화면에서, 전자 장치는 지정된 음성 입력(예: 웨이크 업!)를 인식하거나 하드웨 어 키(예: 전용 하드웨어 키)를 통한 입력을 수신하면, 음성 입력을 처리하기 위한 지능형 앱을 실행할 수 있다. 전자 장치는, 예를 들어, 스케줄 앱을 실행한 상태에서 지능형 앱을 실행할 수 있다. 일 실시 예에 따르면, 전자 장치는 지능형 앱에 대응되는 오브젝트(예: 아이콘)를 디스플레이 모듈에 표시할 수 있다. 일 실시 예에 따르면, 전자 장치는 사용자 발화에 의한 음성 입력을 수신할 수 있다. 예를 들어, 전자 장치는 \"이번주 일정 알려줘!\"라는 음성 입력을 수신할 수 있다. 일 실시 예에 따르면, 전자 장치는 수신된 음성 입력의 텍스트 데이터가 표시된 지능형 앱의 UI(user interface)(예: 입력창)를 디스 플레이에 표시할 수 있다. 일 실시 예에 따르면, 320 화면에서, 전자 장치는 수신된 음성 입력에 대응되는 결과를 디스플레이에 표시 할 수 있다. 예를 들어, 전자 장치는 수신된 사용자 입력에 대응되는 플랜을 수신하고, 플랜에 따라 '이번 주 일정'을 디스플레이에 표시할 수 있다. 도 5는 다양한 실시예에 따른 타겟 디바이스를 결정하는 전자 장치의 블록도를 나타낸다. 도 5를 참조하면, 다양한 실시예에 따르면, 전자 장치는 복수의 디바이스가 존재하는 환경에서 사용자의 발화(utterance)를 처리하기 위한 타겟 디바이스를 결정할 수 있다. 전자 장치는 서버(예: 도 1의 서버 ) 또는 디바이스 내에 구현될 수 있다. 다양한 실시예에 따르면, 전자 장치는 사용자의 발화를 처리할 수 있다. 전자 장치는 사용자의 발화를 처 리함으로써 처리 결과를 생성하고, 생성된 처리 결과를 사용자에게 제공할 수 있다. 전자 장치는 디바이스로부터 하드웨어 정보 및 어플리케이션 정보를 수신하고, 수신한 하드웨어 정보 및 어플리케이션 정보에 기초하여 발화를 처리할 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서(예: 도 1의 프로세서)는 메모리(예: 도 1의 메모리)에 저장된 데이터를 처리할 수 있다. 프로세서는 메모리에 저장된 컴퓨터로 읽을 수 있는 코드(예를 들 어, 소프트웨어) 및 프로세서에 의해 유발된 인스트럭션(instruction)들을 실행할 수 있다. 프로세서 는 목적하는 동작들(desired operations)을 실행시키기 위한 물리적인 구조를 갖는 회로를 가지는 하드웨 어로 구현된 데이터 처리 장치일 수 있다. 예를 들어, 목적하는 동작들은 프로그램에 포함된 코드(code) 또는 인스트럭션들(instructions)을 포함할 수 있다. 다양한 실시예에 따르면, 하드웨어로 구현된 데이터 처리 장치는 마이크로프로세서(microprocessor), 중앙 처리 장치(central processing unit), 프로세서 코어(processor core), 멀티-코어 프로세서(multi-core processor), 멀티프로세서(multiprocessor), ASIC(application-specific integrated circuit), 및/또는 FPGA(field programmable gate array)를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 현재 웨이크업이 트리거된 디바이스가 사용 중이고, 사용자의 근거리 에 액션을 수행할 수 있는 다른 디바이스가 존재할 경우, 웨이크업된 기기의 액션은 유지하면서 에이전트에게 새로운 명령을 수행하도록 함으로써 사용자의 편의성을 증대시킬 수 있다. 예를 들어, 프로세서는 \"하이 빅스비, 레시피 보여줘”라는 발화를 수신한 경우, 현재 디스플레이되는 디바이스보다 더 큰 디스플레이를 가진 디바이스가 존재하거나, 수신한 발화를 처리하는 도메인에서 사용한 이력이 있는 디바이스를 탐색하여 탐색된 디바이스로 디스플레이를 전환할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자가 의도하는 발화를 실행시킬 수 있는 최적의 기기에서 발화 처리를 위한 액션을 수행하도록 타겟 디바이스를 결정할 수 있다. 프로세서는 멀티-디바이스 웨이크업 상 황에서 복수의 후보 디바이스를 결정하고, 액션을 수행할 디바이스를 선정할 수 있다. 이 때, 프로세서는 웨이크업된 디바이스에서 실행 중인 어플리케이션이 존재하는 경우, 다른 디바이스로 실행할 것을 추천하거나, 다른 디바이스에서 액션을 실행시킬 수 있다. 다양한 실시예에 다르면, 디바이스는 웨이크업 발화를 수신한 경우, 웨이크업 발화에 대한 신뢰도 값을 계 산할 수 있다. 신뢰도 값은 SNR(signal-to-noise ratio)를 포함할 수 있다. 신뢰도 값은 마이크에 입력되는 신호의 SNR, 마이크에 입력되는 신호를 전처리한 출력의 SNR, 마이크에 입력되는 신호의 세기, 마이크에 입력되 는 잡음 수준 또는 이들의 조합으로 계산될 수 있다. 다양한 실시예에 따르면, 전자 장치는 디바이스로부터 웨이크업 발화에 대응하는 신뢰도 값, 디바이 스의 어플리케이션 정보 및 하드웨어 정보 및 웨이크업 이후의 발화를 수신할 수 있다. 하드웨어 정보는 디바이스의 상태 정보를 포함할 수 있다. 전자 장치는 복수의 디바이스로부터 수신한 데이터 및 발 화 분석에 따른 타겟 도메인(예: 캡슐)에 기초하여 타겟 디바이스를 결정하고, 결정된 타겟 디바이스를 사용자 에게 추천할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 제1 디바이스를 결정할 수 있다. 프로세서 는 웨이크업 발화에 대응하는 신뢰도 값이 가장 높은 기기를 제1 디바이스로 결정할 수 있다. 프로세서 는 제1 디바이스의 실행 어플리케이션이 멀티미디어 관련 어플리케이션(예: 음악 또는 비디오 플레이어)이 고, 발화를 분석한 타겟 도메인이 제1 디바이스의 실행 어플리케이션과 다를 경우, 제2 디바이스를 탐색하여 사 용자에게 제공할 수 있다. 예를 들어, 프로세서는 사용자가 모바일 폰에서 음악을 재생하는 도중에 모바 일 폰에서 수신된 발화의 신뢰도 값이 높더라도, 발화가 음악 어플리케이션을 제어하기 위한 발화가 아닐 경우, 신뢰도 값이 두 번째로 높고, 어플리케이션을 실행하고 있지 않은 제2 디바이스를 사용자에게 추천할 수 있다. 다양한 실시예에 따르면, 전자 장치는 디바이스 내부에 구현될 수 있다. 디바이스에서 웨이크 업 발화를 수신한 경우, 프로세서는 웨이크업 발화에 대한 신뢰도를 계산하고, 디바이스의 상태, 디 바이스에서 실행되는 어플리케이션 정보에 기초하여 타겟 디바이스를 결정하여 사용자에게 추천할 수 있다. 다양한 실시예에 따르면, 프로세서는 복수의 디바이스(예: 디바이스)에서 수신된 사용자의 발화, 복 수의 디바이스에서 계산된 웨이크업(wakeup) 발화에 대응하는 신뢰도 값, 복수의 디바이스의 하드웨어 정보, 복 수의 디바이스에서 실행되는 어플리케이션 정보를 수신할 수 있다. 신뢰도 값은, 복수의 디바이스에서 수신된 웨이크업 발화에 대한 SNR을 포함할 수 있다. 다양한 실시예에 따르면, 하드웨어 정보는 복수의 디바이스의 ID(identification), MAC 주소(media access control address)를 포함할 수 있다. 어플리케이션 정보는 복수의 디바이스에서 실행되는 어플리케이션 리스트 를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자의 발화를 처리하기 위한 액션(action)을 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값, 하드웨어 정보 및 어플리케이션 정보에 기초하여 복수의 디바이스 중에서 액션을 수행할 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 복수의 디바이스 중에서 후보 디바이스를 결정 할 수 있다. 프로세서는 하드웨어 정보 및 어플리케이션 정보에 기초하여 후보 디바이스 중에서 타겟 디 바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 하드웨어 정보 및 어플리케이션 정보에 기초하여 후보 디바이스의 어 플리케이션 실행 상태 및 후보 디바이스의 하드웨어 사양(spec)을 파악할 수 있다. 프로세서는 후보 디바 이스가 액션을 수행하기 위한 하드웨어를 포함하는지 여부를 판단할 수 있다. 프로세서는 어플리케이션 실행 상태, 하드웨어 사양 및 하드웨어의 포함 여부에 기초하여 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정할 수 있다. 프로세서는 발화에 기초하여 액션의 수행 조건을 결정할 수 있다. 프로세서 는 어플리케이션 정보에 기초하여 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단할 수 있 다. 프로세서는 액션의 수행 조건, 하드웨어 정보 및 존재 여부의 판단 결과에 기초하여 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우, 수행 조건에 부합하는 제2 디바이스를 탐색할 수 있다. 프로세서는 제2 디바이스가 존재하는 경우 제2 디바이스를 타 겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우, 제1 디바이 스를 타겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 복수의 디바이스에 대한 사용자의 선호도 점수(preference score)에 기초하여 타겟 디바이스를 결정할 수 있다. 선호도 점수는 복수의 디바이스 각각의 누적 사용 횟수에 기초하여 계산될 수 있다. 다양한 실시예에 따르면, 프로세서는 액션 수행 조건에 부합하는 제2 디바이스를 탐색할 수 있다. 프로세 서는 사용자에게 제1 디바이스 및 제2 디바이스 중 하나의 디바이스를 선택하기 위한 인터페이스를 제공할 수 있다. 프로세서는 사용자의 선택에 응답하여 제1 디바이스 및 제2 디바이스에 중에서 하나를 타겟 디 바이스로 결정할 수 있다.다양한 실시예에 따르면, 프로세서는 수신된 발화의 신뢰도 값에 기초하여 복수의 디바이스 중에서 발화를 처리하기 위한 제1 디바이스를 결정할 수 있다. 프로세서는 제1 디바이스의 상태에 기초하여 제1 디바이 스의 발화의 처리 여부를 결정할 수 있다. 프로세서는 복수의 디바이스의 하드웨어 정보, 복수의 디바이 스에서 실행되는 어플리케이션 정보 및 발화의 처리 여부에 기초하여 복수의 디바이스 중에서 발화를 처리하기 위한 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 복수의 디바이스 중에서 후보 디바이스를 결정 하고, 후보 디바이스 중에서 제1 디바이스 및 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 후보 디바이스 중에서 액션을 수행할 제1 디바 이스를 결정할 수 있다. 프로세서는 발화에 기초하여 액션의 수행 조건을 결정할 수 있다. 프로세서 는 어플리케이션 정보에 기초하여 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단할 수 있 다. 프로세서는 수행 조건, 하드웨어 정보 및 존재 여부의 판단 결과에 기초하여 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우, 액션 수행 조건에 부합하는 제2 디바이스를 탐색할 수 있다. 프로세서는 제2 디바이스를 발화를 처리할 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우, 제1 디바이 스를 발화를 처리하기 위한 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 메모리는 프로세서에 의해 실행가능한 인스트럭션들(또는 프로그램)을 저장할 수 있다. 예를 들어, 인스트럭션들은 프로세서의 동작 및/또는 프로세서의 각 구성의 동작을 실행하기 위한 인스트럭션들을 포함할 수 있다. 다양한 실시예에 따르면, 메모리는 휘발성 메모리 장치(예: 도 1의 휘발성 메모리) 또는 비휘발성 메 모리 장치(예: 도 1의 비휘발성 메모리)로 구현될 수 있다. 휘발성 메모리 장치는 DRAM(dynamic random access memory), SRAM(static random access memory), T-RAM(thyristor RAM), Z-RAM(zero capacitor RAM), 또 는 TTRAM(twin transistor RAM)으로 구현될 수 있다. 다양한 실시예에 따르면, 비휘발성 메모리 장치는 EEPROM(electrically erasable programmable read-only memory), 플래시(flash) 메모리, MRAM(magnetic RAM), 스핀전달토크 MRAM(spin-transfer torque(STT)-MRAM), conductive bridging RAM(CBRAM), FeRAM(ferroelectric RAM), PRAM(phase change RAM), 저항 메모리 (resistive RAM(RRAM)), 나노 튜브 RRAM(nanotube RRAM), 폴리머 RAM(polymer RAM(PoRAM)), 나노 부유 게이트 메모리(nano floating gate memory(NFGM)), 홀로그래픽 메모리(holographic memory), 분자 전자 메모리 소자 (molecular electronic memory device), 또는 절연 저항 변화 메모리(insulator resistance change memory)로 구현될 수 있다. 도 6은 다양한 실시예에 따른 발화 처리 시스템의 구성의 예를 나타낸다. 도 6을 참조하면, 다양한 실시예에 따르면, 서버는 IoT(internet of thing) 디바이스 DB(database), 퍼스널 어카운트 모듈, ASR/NLU(natural language understanding)/NLP(natural language processing) 모 듈, 액션 수행 조건 확인기(action performing condition verifier) 및 멀티-디바이스 컨트롤 매니 저를 포함할 수 있다. 다양한 실시예에 따르면, 퍼스널 어카운트 모듈, ASR/NLU/NLP 모듈, 액션 수행 조건 확인기 및 멀티-디바이스 컨트롤 매니저는 프로세서(예: 도 5의 프로세서에 포함될 수 있다. 다양한 실시예에 따르면, 퍼스널 어카운트 모듈은 개인 정보를 저장할 수 있다. 퍼스널 어카운트 모듈 은 계정 관련 정보, 사용자 ID, 설치된 어플리케이션 리스트 및 주 사용 어플리케이션 정보를 포함할 수 있다. 다양한 실시예에 따르면, 디바이스 1은 마이크(예: 도 2의 마이크(150-1)), 웨이크업 모듈, 멀 티-디바이스 웨이크업 컨트롤러, 액티비티 매니저, 통신 인터페이스(예: 도 2의 통신 인터페이 스) 및 IoT 디바이스 DB을 포함할 수 있다. 디바이스 2, 디바이스 3 및 디바이스 4은 디바이스 1과 동일한 구성을 포함할 수 있다. IoT 디바이스 DB는 다양한 디바이스의 사양 (spec)을 저장하는 데이터베이스일 수 있다. IoT 디바이스 DB는 디바이스의 모델명, 디바이스가 포함하고 있는 하드웨어 및 하드웨어의 사양을 포함할 수 있다. 다양한 실시예에 따르면, 마이크는 사용자의 발화를 수신할 수 있다. 마이크는 수신한 발화를 웨이 크업 모듈 및 멀티-디바이스 웨이크업 컨트롤러에 전송할 수 있다. 웨이크업 모듈은 웨이크업 키워드를 인식할 수 있다. 멀티-디바이스 웨이크업 컨트롤러는 개별 디바이스 내에 존재하는 모듈로, 멀 티-디바이스 컨트롤 매니저로부터 액션 정보 및 위너 정보를 전달받아 해당 디바이스의 웨이크업 트리거 유지, 취소, 레디 상태로의 변경 및/또는 액션의 수행을 진행할 수 있다. 다양한 실시예에 따르면, 액티비티 매니저는 디바이스 1에서 실행 중인 어플리케이션에 대한 상태 (status) 정보를 확인하고, 실행 중인 어플리케이션 및/또는 서비스의 목록을 확인할 수 있다. 통신 인터페이 스는 서버와 데이터를 주고받을 수 있다. 다양한 실시예에 따르면, 티비티 매니저는 센서 정보에 기초하여 복수의 디바이스(예: 디바이스 1, 디바이스 2, 디바이스 3 또는 디바이스 4)의 방향 정보(예: 디스플레이가 아래를 향해 있는지 또는 디스플레이가 위를 향해 있는지 여부)를 확인할 수 있다. 예를 들어, 디바이스의 디스플레이가 아래를 향 해 있는 경우와 같이 사용자가 시청 불가능한 경우, 발화의 처리는 디스플레이의 시청이 가능한 디바이스에서 수행될 수 있다. 다양한 실시예에 따르면, 멀티-디바이스 웨이크업 매니저는 웨이크업 경합에 참여했던 후보 디바이스 중에 서 위너(winner)를 선정할 수 있다. 멀티-디바이스 웨이크업 컨트롤러는 웨이크업 경합에 참여했던 후보 디바이스 중에서 액션 수행 디바이스를 선정할 수 있다. 도 6의 예시에서, 멀티-디바이스 웨이크업 컨트롤러 는 디바이스 1에 포함되고, 멀티-디바이스 컨트롤 매니저는 서버에 포함되는 것으로 표시 되었으나, 다양한 실시예에 따라 멀티-디바이스 웨이크업 컨트롤러 및 멀티-디바이스 컨트롤 매니저 가 모두 디바이스 1, 디바이스 2, 디바이스 3 및 디바이스 4 내부에 구현될 수 있다. 또 는, 멀티-디바이스 웨이크업 컨트롤러 및 멀티-디바이스 컨트롤 매니저가 모두 서버 내부에 구 현될 수 있다. 다양한 실시예에 따르면, 멀티-디바이스 웨이크업 매니저는 복수의 디바이스 중에서 후보 디바이스(예: 웨 이크업 후보 디바이스)를 선정할 수 있다. 웨이크업 후보 디바이스는 위너 선정 과정에 참여했던 모든 디바이 스를 포함할 수 있다. 예를 들어, 웨이크업 경합에 참여했던 복수의 디바이스가 냉장고, 태블릿, 모바일 폰 및 AI 스피커일 경우, 웨이크업 후보 디바이스는 냉장고, 태블릿, 모바일 폰 및 AI 스피커를 포함할 수 있다. 다양한 실시예에 따르면, 일반적인 도메인에서는 웨이크업 된 디바이스에서 액션을 수행하고, 특정한 상황에서 발화를 처리하기 위한 기능을 갖는 적합한 디바이스가 선택되어 액션을 수행할 수 있다. 액션 수행 조건 확인 기는 적합한 디바이스를 선정하여 멀티-디바이스 컨트롤 매니저에게 선정 결과를 전송하고, 멀티-디 바이스 컨트롤 매니저는 선정 결과에 응답하여 발화를 처리하기 위한 제어를 수행할 수 있다. 다양한 실시예에 따르면, IoT 디바이스 DB 및/또는 IoT 디바이스 DB는 디바이스 1 또는 서버 주변에서 발화의 실행 조건과 부합하는 디바이스를 검색할 수 있다. 도 7은 다양한 실시예에 따른 도 5의 발화 처리 시스템의 동작의 예를 나타낸다. 도 7을 참조하면, 다양한 실시예에 따르면, 액티비티 매니저(예: 도 6의 액티비티 매니저)는 어플리 케이션 정보 및 하드웨어 정보를 액션 수행 조건 확인기(예: 도 6의 액션 수행 조건 확인기)로 전송 할 수 있다. 어플리케이션 정보는 디바이스에서 수행되는 어플리케이션 리스트를 포함할 수 있고, 하드웨어 정 보는 디바이스의 상태 정보를 포함할 수 있다. 다양한 실시예에 따르면, 액션 수행 조건 확인기는 하드웨어 정보를 이용하여 후보 디바이스를 선정하고, 어플리케이션 실행 상태에 기초하여 후보 디바이스가 발화에 포함된 명령을 수행할 수 있는지 여부를 판단함으 로써 탐색(search) 우선 순위를 결정할 수 있다. 예를 들어, 액션 수행 조건 확인기는 제1 디바이스에서 음악이 재생되는 상황에서 발화를 처리하기 위해 음악 재생과 관련된 기능을 실행하려면, 제1 디바이스에서 재 생되는 음악을 멈추고 해당 기능이 수행되어야 하는데, 제2 디바이스가 탐색되는 경우에는, 탐색되는 제2 디바 이스를 통해 음악 재생과 관련된 액션을 수행하도록 제어할 수 있다.다양한 실시예에 따르면, 액션 수행 조건 확인기는 임의의 디바이스에서 액션의 수행이 가능한지 여부를 판단할 수 있다. 액션 수행 조건 확인기는 어플리케이션 상태 및 디바이스 별 하드웨어 사양(spec)을 파 악할 수 있다. 예를 들어, 하드웨어 사양은 디바이스의 디스플레이의 크기, 디바이스가 지원하는 기능에 대한 정보를 포함할 수 있다. 다양한 실시예에 따르면, 액션 수행 조건 확인기는 디바이스의 방향 정보(예: 디스플레이가 아래를 향해 있는지 또는 디스플레이가 위를 향해 있는지 여부)에 기초하여 임의의 디바이스에서 액션의 수행이 가능한지 판 단할 수 있다. 다양한 실시예에 따르면, 전자 장치(예: 도 5의 전자 장치)는 액티비티 매니저에서 생성된 디바이스 에서 실행 중인 어플리케이션에 대한 상태 정보를 수신하여 디바이스의 어플리케이션 상태를 확인할 수 있다. 전자 장치는 동작 중인 디바이스의 상태를 파악하고, 복수의 디바이스 중에서 웨이크업된 디바이스가 실행 하는 어플리케이션을 확인할 수 있다. 표 1은 디바이스의 어플리케이션 상태를 예시적으로 나타낼 수 있다. 표 1 디바이스 액티브 어플리케이션 상태 확인 실행 어플리케이션 냉장고 X X 태블릿 X X 모바일 O YouTube AI스피커 O Spotify 다양한 실시예에 따르면, 전자 장치는 발화의 처리를 위해 적합한 디바이스를 선정할 수 있다. 갤러리, 레시피, 캘린더 또는 지식 검색 관련 어플리케이션은 디스플레이를 포함하는 디바이스에서 실행되는 것이 적합 할 수 있다. 즉, \"갤러리 보여줘\" 또는 \"레시피 보여줘\"와 같은 발화를 처리하기 위해서는 디스플레이가 요구 될 수 있다. \"신나는 음악 틀어줘\", \"재미있는 이야기해줘\" 또는 \"동화 읽어줘\"와 같이 재생이 필요한 음악, 알람 또는 타이머와 관련된 액션을 필요로 하는 발화는 라우드스피커(loudspeaker)를 포함한 기기에서 실행되는 것이 적합할 수 있다. 다양한 실시예에 따르면, IoT 디바이스 DB(예: 도 6의 IoT 디바이스 DB)는 전자 장치 주변의 해당 발 화의 실행 조건에 부합하는 디스플레이를 검색할 수 있다. 표 2는 IoT 디바이스 DB가 검색한 디바이스의 리스트의 예를 나타낼 수 있다. 표 2 디바이스 디스플레이 스피커 카메라 ... 냉장고 O O X 태블릿 O O O 모바일 O O O AI 스피커 X O X 다양한 실시예에 따르면, ASR/NLU/NLP 모듈(예: 도 6 ASR/NLU/NLP 모듈)은 발화의 엔드 포인트(end point)를 수신하면, 부분 ASR(partial ASR) 및 NLU 분석을 수행하여 발화의 의도를 분석하고, 필요한 액션을 판 단할 수 있다. 다양한 실시예에 따르면, 액션 수행 조건을 확인할 때, 기존 사용자의 어플리케이션 사용 이력이 추가 입력으로 사용될 수 있다. 개인별 맞춤 액션을 수행하기 위해, 전자 장치는 주로 사용하는 디바이스에 대한 정보를 수집하여 사용자의 의도에 맞는 디바이스를 액션 수행 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 멀티-디바이스 웨이크업 컨트롤러는 사용자의 디바이스에 대한 선호도에 기초하 여 액션을 수행할 디바이스를 결정할 수 있다. ASR, NLU 분석을 통해 NLP 모듈은 현재 수행해야할 액션을 결정 할 수 있고, 이 때, 선호도에 대한 정보가 이용될 수 있다.다양한 실시예에 따르면, 표 3은 사용자의 사용 이력(예: 기능 사용 이력)을 예시적으로 나타낼 수 있다. 프로 세서(예: 도 5의 프로세서)는 사용자의 사용 이력 기반 선호도 점수(preference score)를 계산하고, 탐색 우선 순위의 선정에 계산된 선호도 점수를 이용할 수 있다. 표 3의 예는 선호도가 냉장고, 태블릿 및 모바일 순인 경우를 나타낼 수 있다. 프로세서는 어플리케이션 내의 UI(user interface)를 통해 사용자의 피드백 을 받아 선호도 점수를 조정할 수 있다. 표 3 어플리케이션 (캡슐)디바이스 사용 이력 누적 사용 횟수 쪋 Preference score 레시피 냉장고 O 1 100 레시피 태블릿 O 2 80 레시피 모바일 O 0 30 도 8a 및 도 8b는 다양한 실시예에 따른 도 5의 발화 처리 시스템의 동작의 흐름들을 나타낸다. 도 8a 및 도 8b를 참조하면, 다양한 실시예에 따르면, 도 8a 및 도 8는 \"하이빅스비 레시피 보여줘\" 발화를 수 신했을 때, 타겟 디바이스를 결정하는 과정을 예시적으로 나타낼 수 있다. 다양한 실시예에 따르면, 전자 장치(예: 도 5의 전자 장치)는 복수의 디바이스(예: 제1 디바이스 및 제2 디바이스)이가 존재하는 멀티-디바이스 환경에서 웨이크업 트리거 디바이스가 주어진 경우, 발화의 처 리를 위한 액션 타겟 디바이스를 결정할 수 있다. 도 8a 및 도 8b의 예시는 전자 장치가 서버에 구 현된 경우를 나타낼 수 있다. 다양한 실시예에 따르면, 도 8a는 서버는 복수의 디바이스가 동일한 공간에 존재하는 상태에서, 사용자가 웨이크업을 시도하여 제1 디바이스(예: 모바일 폰)에서 웨이크업 트리거된 후, 제2 디바이스(예: 태 블릿)에서 레시피를 수행하는 경우를 나타낼 수 있다. 다양한 실시예에 따르면, 제1 디바이스는 액티비티 매니저(예: 도 6의 액티비티 매니저), 마이 크(예: 도 6의 마이크) 및 웨이크업 모듈(예: 도 6의 웨이크업 모듈)를 포함할 수 있다. 다양한 실시예에 따르면, 서버는 ASR 모듈, NLU 모듈, NLP 모듈, IoT 디바이스 DB (예: 도 6의 IoT 디바이스 DB), 퍼스널 어카운트 모듈(예: 도 6의 퍼스널 어카운트 모듈), 액션 수행 확인기(예: 도 6의 액션 수행 조건 확인기) 및 멀티-디바이스 컨트롤 매니저(예: 도 6의 멀티-디바이스 컨트롤 매니저)를 포함할 수 있다. 도 8a 및 도 8b는 예시적인 것으로, ASR 모듈, NLU 모듈 및 NLP 모듈는 제1 디바이스 또는 제2 디바이스 내부에도 구현될 수 있다. 또한, IoT 디바이스 DB, 퍼스널 어카운트 모듈, 액션 수행 조건 확인기 및 멀티-디바이스 컨트 롤 매니저도 제1 디바이스 또는 제2 디바이스 내부에 구현될 수 있다. 다양한 실시예에 따르면, 액티비티 매니저는 앱 리스트를 생성하여 액션 수행 조건 확인기로 전송할 수 있다. 앱 리스트는 디바이스 ID, 사용자 계정(account), mac 주소, 어플리케이션 리스트를 포함할 수 있다. 액티비티 매니저는 디바이스의 센서로부터 획득되는 디바이스의 방향 정보(예: 디스플레이가 아래를 향해 있는지 또는 디스플레이가 위를 향해 있는지 여부)를 액션 수행 조건 확인기로 전송할 수 있다. 다양한 실시예에 따르면, NLP 모듈는 액션 정보를 생성하여 멀티-디바이스 컨트롤 매니저로 전송할 수 있다. 액션 정보는 위너 후보 값, 액션 및 액션 설명을 포함할 수 있다. 위너 후보 값은 네/아니오 또는 1/0을 포함할 수 있다. 액션은 액션 실행(run action), 레디(ready)를 포함할 수 있다. 액션 설명은 \"레시피 보여줘\"와 같은 액션에 대한 설명을 포함할 수 있다. 다양한 실시예에 따르면, 멀티-디바이스 컨트롤 매니저는 멀티-디바이스 웨이크업 컨트롤러로 위너 정보를 전송할 수 있다. 위너 정보는 디바이스 ID, 사용자 계정, mac 주소, 세션ID, 신뢰도 값 및 위너 후보 값을 포함할 수 있다. 위너 후보 값은 디바이스가 위너인지 아닌지에 대한 정보를 포함할 수 있다. 예를 들어, 위너 후보 값은 네/아니오 또는 1/0을 포함할 수 있다. 다양한 실시예에 따르면, 액티비티 매니저, 마이크, 웨이크업 모듈, ASR 모듈, NLU 모듈 , NLP 모듈, IoT 디바이스 DB, 퍼스널 어카운트 모듈, 액션 수행 확인기 및 멀티-디 바이스 컨트롤 매니저의 다른 동작은 도 6에서 설명한 것과 동일할 수 있다. 도 9는 다양한 실시예에 따른 명령 수행 디바이스를 결정하는 동작의 흐름을 나타낸다. 도 9를 참조하면, 다양한 실시예에 따르면, 사용자의 발화에 응답하여 제1 디바이스에서 웨이크업 트리거가 실 행될 수 있다. 이 때, 제1 디바이스가 신뢰도 값에 기초한 위너 디바이스일 수 있다. 복수의 디바이스들 은 상시 마이크 온(always mic on) 상태로 마이크를 통해 오디오 신호를 입력 받고 있는 상태에서 웨이크업 키 워드를 수신한 경우, 신뢰도 값을 계산하여 프로세서(예: 도 5의 프로세서)로 전송할 수 있다. 프로세서 는 신뢰도 값에 기초하여 복수의 디바이스 중에서 위너 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서 웨이크업 트리거가 시도된 디바이스 리스트를 확인할 수 있다. 프로세서는 웨이크업 트리거가 시도된 디바이스를 후보 디바이스(예: 멀티-디바이스 웨이크업 후보)로 결 정할 수 있다. 다양한 실시예에 따르면, 제1 디바이스에서 웨이크업 트리거가 실행된 경우, 제1 디바이스의 마이크는 오디오 신호를 계속 수신하여 커맨드 발화를 수신할 수 있다. 제1 디바이스는 컴맨드 발화를 오디오 스트림(audio stream)의 형태로 프로세서로 전송할 수 있다. 프로세서는 ASR 결과를 확인할 수 있다. 이 때, 제1 디바이스에서 온-디바이스 ASR을 포함하는 경우, 제1 디바이스가 ASR 결과를 추출하여 텍스트를 프로세 서로 전송할 수 있다. 다양한 실시예에 따르면, 프로세서는 ASR 결과에 기초하여 액션 수행 조건을 확인할 수 있다. 프로 세서는 NLU, NLP을 수행하는 동안 멀티-디바이스 경합에 참여했던 후보 디바이스들을 대상으로 액션 수행 조건을 확인할 수 있다. 다양한 실시예에 따르면, 프로세서는 후보 디바이스에서 현재 실행 중인 어플리케이션 리스트를 확인할 수 있다. 프로세서는 제1 디바이스에서 현재 실행 중인 어플리케이션이 있는지 여부를 판단할 수 있다 . 제1 디바이스에서 현재 실행 중인 어플리케이션이 없는 경우, 프로세서는 제1 디바이스를 타겟 디 바이스로 결정하여 제1 디바이스에서 명령을 수행하도록 할 수 있다. 다양한 실시예에 따르면, 제1 디방이스에서 현재 실행 중인 어플리케이션이 있는 경우, 프로세서는 액션 수행 조건에 부합하는 제2 디바이스가 존재하는지 여부를 판단할 수 있다. 액션 수행 조건에 부합하는 제 2 디바이스가 존재하지 않는 경우, 프로세서는 제1 디바이스를 타겟 디바이스로 결정하여 제1 디바이스에 서 명령을 수행하도록 할 수 있다. 액션 수행 조건에 부합하는 제2 디바이스가 존재하는 경우, 프로세서 는 액션 수행 조건에 부합하는 제2 디바이스를 타겟 디바이스로 결정하여 명령을 수행하도록 할 수 있다. 이 때, 사용자의 옵션에 따라 바로 명령을 수행하지 않고, 제1 디바이스에 추천 팝업(pop-up) 또는 전환 가능성에 대한 안내를 제공할 수 있다. 다양한 실시예에 따르면, 프로세서는 명령 수행 사이에 제1기기 및 멀티 디바이스 웨이크업 경합에 참여했 던 후보 디바이스들에는 제2 디바이스가 위너가 되었다는 위너 정보를 전달하여 레디 상태로 전환하도록 할 수 있다. 도 10은 다양한 실시예에 따른 발화 처리 시스템의 명령 수행의 흐름을 나타낸다. 도 10을 참조하면, 다양한 실시예에 따르면, 디바이스 1, 디바이스 2, 디바이스 3 및 디바이 스 4는 웨이크업 발화를 수신할 수 있다. 디바이스 1, 디바이스 2, 디바이스 3 및 디바이스 4는 웨이크업 발화에 대한 정보를 서버(예: 도 5의 전자 장치)로 전송할 수 있다. 웨이크업 발화에 대한 정보는 위너 선정을 위한 스코어 값(예: 신뢰도 값)을 포함할 수 있다. 디바이스 1, 디바이스 2, 디바이스 3 및 디바이스 4는 디바이스의 어플리케이션 정보 및 하드웨 어 정보를 서버로 전송할 수 있다. 다양한 실시예에 따르면, 서버는 위너 디바이스를 선정할 수 있다. 도 10의 예시는 디바이스 1을 위너 디바이스로 결정한 경우를 나타낼 수 있다. 서버는 위너 디바이스 이외의 디바이스인 디바이스 2, 디바이스 3 및 디바이스 4에 웨이크업 리젝션(rejection) 요청을 전송할 수 있다. 웨이크업 리젝션 요청 및 웨이크업 디바이스의 결정에 관한 정보는 멀티-웨이크업 컨트롤 매니저(예: 도 6의 멀티- 디바이스 웨이크업 컨트롤러)를 통해 전송될 수 있다. 위너 디바이스로 선정된 디바이스 1는 발화 를 지속적으로 수신하여, 명령어 발화 및 엔드-포인트를 수신하여 서버로 전송할 수 있다. 다양한 실시예에 따르면, 서버는 액션 수행 조건을 확인하고, 복수의 디바이스의 하드웨어 사양 및 어플 리케이션 상태를 확인할 수 있다. 서버는 액션 수행 조건, 하드웨어 사양 및 어플리케이션 상태에 기초 하여 명령 수행 기기를 선정할 수 있다. 서버는 최종 ASR 결과 및 명령 수행 피드백을 명령 수행 디바이 스(예: 타겟 디바이스)로 결정된 디바이스 2로 전송할 수 있다. 서버는 명령 수행 디바이스로 선 정되지 않은 디바이스 1, 디바이스 3 및 디바이스 4에 대기 상태로 변경할 것을 요청할 수 있다. 도 11 및 도 12는 다양한 실시예에 따른 사용자 인터페이스의 예들을 나타낸다. 도 11 및 도 12를 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 사용자의 옵션에 따라 추천 팝업 또는 디바이스의 전환 가능성에 대한 안내를 사용자 인터페이스를 통해 제공할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자 인터페이스 또는 사용자 인터페이스을 제공할 수 있다. 사용자 인터페이스은 프로세서가 사용자에게 디바이스의 디스플레이를 통해 팝업 을 제공하는 실시예를 나타내고. 사용자 인터페이스은 프로세서가 사용자에게 디바이스의 스 피커 또는 디스플레이를 통해 알림을 제공하는 실시예를 나타낼 수 있다. 다양한 실시예에 따르면, 도 11 및 도 12의 예시는 제2 디바이스로 태블릿이 결정된 경우, 태블릿에서 발화 처 리를 위한 액션을 수행할지 여부에 대한 안내를 팝업 또는 알림의 형태로 제공하는 사용자 인터페 이스를 나타낼 수 있다. 도 13 은 다양한 실시예에 따른 전자 장치의 동작의 흐름도를 나타낸다. 도 13을 참조하면, 다양한 실시예에 따르면, 프로세서(예: 도 5의 프로세서)는 복수의 디바이스(예: 도 5 의 디바이스)에서 수신된 사용자의 발화, 복수의 디바이스에서 계산된 웨이크업 발화에 대응하는 신뢰도 값, 복수의 디바이스의 하드웨어 정보, 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신할 수 있다 . 신뢰도 값은, 복수의 디바이스에서 수신된 웨이크업 발화에 대한 SNR을 포함할 수 있다. 다양한 실시예에 따르면, 하드웨어 정보는 복수의 디바이스의 ID(identification), MAC 주소(media access control address)를 포함할 수 있다. 어플리케이션 정보는 복수의 디바이스에서 실행되는 어플리케이션 리스트 를 포함할 수 있다. 다양한 실시예에 따르면, 프로세서는 사용자의 발화를 처리하기 위한 액션(action)을 결정할 수 있다 . 다양한 실시예에 따르면, 프로세서는 신뢰도 값, 하드웨어 정보 및 어플리케이션 정보에 기초하여 복수의 디바이스 중에서 액션을 수행할 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 복수의 디바이스 중에서 후보 디바이스를 결정 할 수 있다. 프로세서는 하드웨어 정보 및 어플리케이션 정보에 기초하여 후보 디바이스 중에서 타겟 디 바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 하드웨어 정보 및 어플리케이션 정보에 기초하여 후보 디바이스의 어 플리케이션 실행 상태 및 후보 디바이스의 하드웨어 사양(spec)을 파악할 수 있다. 프로세서는 후보 디바 이스가 액션을 수행하기 위한 하드웨어를 포함하는지 여부를 판단할 수 있다. 프로세서는 어플리케이션 실행 상태, 하드웨어 사양 및 하드웨어의 포함 여부에 기초하여 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 신뢰도 값에 기초하여 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정할 수 있다. 프로세서는 발화에 기초하여 액션의 수행 조건을 결정할 수 있다. 프로세서 는 어플리케이션 정보에 기초하여 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단할 수 있다. 프로세서는 액션의 수행 조건, 하드웨어 정보 및 존재 여부의 판단 결과에 기초하여 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우, 수행 조건에 부합하는 제2 디바이스를 탐색할 수 있다. 프로세서는 제2 디바이스가 존재하는 경우 제2 디바이스를 타 겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우, 제1 디바이 스를 타겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 프로세서는 복수의 디바이스에 대한 사용자의 선호도 점수(preference score)에 기초하여 타겟 디바이스를 결정할 수 있다. 선호도 점수는 복수의 디바이스 각각의 누적 사용 횟수에 기초하여 계산될 수 있다. 다양한 실시예에 따르면, 전자 장치(예: 도 5의 전자 장치)는 프로세서(예: 도 5의 프로세서)와, 상 기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리(도 5의 메모리)를 포함하고, 상기 프로세 서는, 복수의 디바이스에서 수신된 사용자의 발화, 상기 복수의 디바이스에서 계산된 웨이크업(wakeup) 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하고, 상기 사용자의 발화를 처리하기 위한 액션(action)을 결정하고, 상기 신뢰도 값, 상기 하드웨 어 정보 및 상기 어플리케이션 정보에 기초하여 상기 복수의 디바이스 중에서 상기 액션을 수행할 타겟 디바이 스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 신뢰도 값은, 상기 복수의 디바이스에서 수신된 상기 웨이크업 발화에 대한 SNR(signal-to-noise ratio)을 포함할 수 있다. 다양한 실시예에 따르면, 상기 하드웨어 정보는, 상기 복수의 디바이스의 ID(identification), MAC 주소(media access control address)를 포함하고, 상기 어플리케이션 정보는, 상기 복수의 디바이스에서 실행되는 어플리케 이션 리스트를 포함할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 후보 디바 이스를 결정하고, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스 중에서 상기 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후 보 디바이스의 어플리케이션 실행 상태 및 상기 후보 디바이스의 하드웨어 사양(spec)을 파악하고, 상기 후보 디바이스가 상기 액션을 수행하기 위한 하드웨어를 포함하는지 여부를 판단하고, 상기 어플리케이션 실행 상태, 상기 하드웨어 사양 및 상기 하드웨어의 포함 여부에 기초하여 상기 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 신뢰도 값에 기초하여 상기 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정하고, 상기 발화에 기초하여 상기 액션의 수행 조건을 결정하고, 상기 어플리케이션 정보에 기초하여 상기 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단하고, 상기 수행 조건, 상 기 하드웨어 정보 및 상기 존재 여부의 판단 결과에 기초하여 상기 타겟 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우, 상기 수행 조건에 부합하는 제2 디바이스를 탐색하고, 상기 제2 디바이스가 존재하는 경우 상기 제2 디바이스를 상기 타겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우, 상기 제1 디바이스를 상기 타겟 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 복수의 디바이스에 대한 사용자의 선호도 점수(preference score)에 기초하여 상기 타겟 디바이스를 결정하고, 상기 선호도 점수는 상기 복수의 디바이스 각각의 누적 사 용 횟수에 기초하여 계산될 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 수행 조건에 부합하는 제2 디바이스를 탐색하고, 상기 사용자 에게 상기 제1 디바이스 및 상기 제2 디바이스 중 하나의 디바이스를 선택하기 위한 인터페이스를 제공하고, 상 기 사용자의 선택에 응답하여 상기 제1 디바이스 및 상기 제2 디바이스에 중에서 하나를 상기 타겟 디바이스로결정할 수 있다. 다양한 실시예에 따르면, 전자 장치는, 프로세서와, 상기 프로세서에 의해 실행 가능한 인스트럭션을 저장하는 메모리를 포함하고, 상기 프로세서는, 복수의 디바이스에서 수신된 발화의 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 상기 발화를 처리하기 위한 제1 디바이스를 결정하고, 상기 제1 디바이스의 상태에 기초하여 상기 제1 디바이스의 상기 발화의 처리 여부를 결정하고, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보 및 상기 처리 여부에 기초하여 상기 복수의 디바이스 중에서 상기 발 화를 처리하기 위한 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 신뢰도 값은, 상기 복수의 디바이스에서 수신된 상기 웨이크업 발화에 대한 SNR 을 포함할 수 있다. 다양한 실시예에 따르면, 상기 하드웨어 정보는, 상기 디바이스의 ID, MAC 주소를 포함하고, 상기 어플리케이션 정보는, 상기 복수의 디바이스에서 실행되는 어플리케이션 리스트를 포함할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 신뢰도 값에 기초하여 상기 복수의 디바이스 중에서 후보 디바 이스를 결정하고, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후보 디바이스 중에서 상기 제1 디바이스 및 상기 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상기 후 보 디바이스의 어플리케이션 실행 상태 및 상기 후보 디바이스의 하드웨어 사양(spec)을 파악하고, 상기 후보 디바이스가 상기 발화를 처리하기 위한 액션을 수행할 하드웨어를 포함하는지 여부를 판단하고, 상기 어플리케 이션 실행 상태, 상기 하드웨어 사양 및 상기 하드웨어의 포함 여부에 기초하여 상기 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 신뢰도 값에 기초하여 상기 후보 디바이스 중에서 상기 액션을 수행할 제1 디바이스를 결정하고, 상기 발화에 기초하여 상기 액션의 수행 조건을 결정하고, 상기 어플리케이션 정보에 기초하여 상기 제1 디바이스에서 실행 중인 어플리케이션의 존재 여부를 판단하고, 상기 수행 조건, 상 기 하드웨어 정보 및 상기 존재 여부의 판단 결과에 기초하여 상기 제2 디바이스를 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1 디바이스에서 실행 중인 어플리케이션이 있는 경우, 상기 수행 조건에 부합하는 제2 디바이스를 탐색하고, 상기 제2 디바이스를 상기 발화를 처리할 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 제1 디바이스에서 실행 중인 어플리케이션이 없는 경우, 상기 제1 디바이스를 상기 발화를 처리하기 위한 디바이스로 결정할 수 있다. 다양한 실시예에 따르면, 상기 프로세서는, 상기 복수의 디바이스에 대한 상기 사용자의 선호도 점수 (preference score)에 기초하여 상기 제2 디바이스를 결정하고, 상기 선호도 점수는 상기 복수의 디바이스 각각 의 누적 사용 횟수에 기초하여 계산될 수 있다. 다양한 실시예에 따르면, 전자 장치의 발화 처리 방법은, 복수의 디바이스에서 수신된 사용자의 발화, 상기 복 수의 디바이스에서 계산된 웨이크업 발화에 대응하는 신뢰도 값, 상기 복수의 디바이스의 하드웨어 정보, 상기 복수의 디바이스에서 실행되는 어플리케이션 정보를 수신하는 동작과, 상기 사용자의 발화를 처리하기 위한 액 션(action)을 결정하는 동작과, 상기 신뢰도 값, 상기 하드웨어 정보 및 상기 어플리케이션 정보에 기초하여 상 기 복수의 디바이스 중에서 상기 액션을 수행할 타겟 디바이스를 결정하는 동작을 포함할 수 있다.도면 도면1 도면2 도면3 도면4 도면5 도면6 도면7 도면8a 도면8b 도면9 도면10 도면11 도면12 도면13"}
{"patent_id": "10-2022-0015304", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1 은, 다양한 실시예들에 따른, 네트워크 환경 내의 전자 장치의 블록도이다. 도 2는 일 실시예에 따른 통합 지능 (integrated intelligence) 시스템을 나타낸 블록도이다. 도 3은 다양한 실시예에 따른, 컨셉과 동작의 관계 정보가 데이터베이스에 저장된 형태를 나타낸 도면이다. 도 4는 다양한 실시예에 따른 전자 장치가 지능형 앱을 통해 수신된 음성 입력을 처리하는 화면을 나타낸 도면 이다. 도 5는 다양한 실시예에 따른 타겟 디바이스를 결정하는 전자 장치의 블록도를 나타낸다. 도 6은 다양한 실시예에 따른 발화 처리 시스템의 구성의 예를 나타낸다. 도 7은 다양한 실시예에 따른 도 5의 발화 처리 시스템의 동작의 예를 나타낸다. 도 8a 및 도 8b는 다양한 실시예에 따른 도 5의 발화 처리 시스템의 동작의 흐름들을 나타낸다. 도 9는 다양한 실시예에 따른 명령 수행 디바이스를 결정하는 동작의 흐름을 나타낸다. 도 10은 다양한 실시예에 따른 발화 처리 시스템의 명령 수행의 흐름을 나타낸다. 도 11 및 도 12는 다양한 실시예에 따른 사용자 인터페이스의 예들을 나타낸다. 도 13 은 다양한 실시예에 따른 전자 장치의 동작의 흐름도를 나타낸다."}
