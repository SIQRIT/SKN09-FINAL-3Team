{"patent_id": "10-2023-0119227", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2024-0129554", "출원번호": "10-2023-0119227", "발명의 명칭": "학습 없이 데이터의 가치를 평가하는 방법 및 장치", "출원인": "한국과학기술원", "발명자": "정혜원"}}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨터 장치에서 실행되는 데이터 평가 방법에 있어서,상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를포함하고,상기 데이터 평가 방법은,상기 적어도 하나의 프로세서에 의해, 주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여각 데이터의 전형성 정도를 나타내는 복잡도-격차 점수(complexity-gap score)를 계산하는 단계를 포함하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 계산하는 단계는,i번째 데이터로 생성되는 그램 행렬과 i번째 데이터의 레이블 벡터(label vector)를 이용하여 i번째 데이터의복잡도-격차 점수를 계산하는 것을 특징으로 하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제2항에 있어서,상기 계산하는 단계는,상기 데이터셋에서 i번째 데이터를 제외한 뒤 계산된 그램 행렬과 레이블 벡터를 함께 이용하여 i번째 데이터의복잡도-격차 점수를 계산하는 것을 특징으로 하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 계산하는 단계는,부분 행렬(sub matrix)의 역행렬을 구하는 공식인 슈어 보수(Schur complement)를 통해 전체 그램 행렬의 역행렬을 구하여 상기 복잡도-격차 점수를 계산하는 것을 특징으로 하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 계산하는 단계는,데이터의 피처(feature)를 입력 값으로 이용하여 상기 복잡도-격차 점수를 계산하는 것을 특징으로 하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "공개특허 10-2024-0129554-3-제1항에 있어서,상기 데이터 평가 방법은,상기 적어도 하나의 프로세서에 의해, 상기 복잡도-격차 점수를 기준으로 상기 데이터셋에서 일부 데이터를 선별하는 단계를 더 포함하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제6항에 있어서,상기 선별하는 단계는,상기 복잡도-격차 점수를 이용하여 상기 데이터셋에서 모델 학습에 사용할 학습 데이터를 선별하는 것을 특징으로 하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제6항에 있어서,상기 선별하는 단계는,상기 데이터셋에서 상기 복잡도-격차 점수가 임계치(threshold) 미만인 데이터를 제거하는 단계를 포함하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "제6항에 있어서,상기 선별하는 단계는,상기 복잡도-격차 점수를 이용하여 상기 데이터셋에서 노이즈 데이터를 감지하는 단계를 포함하는 데이터 평가 방법."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "데이터 평가 방법을 컴퓨터에 실행시키기 위해 컴퓨터 판독가능한 기록 매체에 저장되는 컴퓨터 프로그램에 있어서,상기 데이터 평가 방법은,주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전형성 정도를 나타내는복잡도-격차 점수(complexity-gap score)를 계산하는 단계를 포함하는, 컴퓨터 프로그램."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_11", "content": "컴퓨터 장치에 있어서,메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고,상기 적어도 하나의 프로세서는,주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전형성 정도를 나타내는복잡도-격차 점수(complexity-gap score)를 계산하는 과정; 및상기 복잡도-격차 점수를 기준으로 상기 데이터셋에서 모델 학습에 사용할 학습 데이터를 선별하는 과정을 처리하는 컴퓨터 장치.공개특허 10-2024-0129554-4-청구항 12 제11항에 있어서,상기 적어도 하나의 프로세서는,i번째 데이터로 생성되는 그램 행렬과 i번째 데이터의 레이블 벡터(label vector)를 이용하여 i번째 데이터의복잡도-격차 점수를 계산하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_13", "content": "제12항에 있어서,상기 적어도 하나의 프로세서는,상기 데이터셋에서 i번째 데이터를 제외한 뒤 계산된 그램 행렬과 레이블 벡터를 함께 이용하여 i번째 데이터의복잡도-격차 점수를 계산하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_14", "content": "제11항에 있어서,상기 적어도 하나의 프로세서는,부분 행렬(sub matrix)의 역행렬을 구하는 공식인 슈어 보수(Schur complement)를 통해 전체 그램 행렬의 역행렬을 구하여 상기 복잡도-격차 점수를 계산하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0119227", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_15", "content": "제11항에 있어서,상기 적어도 하나의 프로세서는,데이터의 피처(feature)를 입력 값으로 이용하여 상기 복잡도-격차 점수를 계산하는 것을 특징으로 하는 컴퓨터 장치."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "학습 없이 데이터의 가치를 평가하는 방법 및 장치가 개시된다. 데이터 평가 방법은, 주어진 데이터셋에 대해 데 이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전형성 정도를 나타내는 복잡도-격차 점수 (complexity-gap score)를 계산하는 단계; 및 상기 복잡도-격차 점수를 기준으로 상기 데이터셋에서 일부 데이터 를 선별하는 단계를 포함할 수 있다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "아래의 설명은 인공지능 모델 학습의 효율성을 증대시키는 기술에 관한 것이다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "딥러닝(deep learning) 기술은 영상처리, 자연어처리 등 다양한 분야에서 혁신을 일으키고 있다. 일례로, 한국 공개특허공보 제10-2022-0081869호(공개일 2022년 06월 16일)에는 영상 데이터의 처리에 딥러닝을 활용하는 기술이 개시되어 있다. 딥러닝 기술은 더 높은 성능 보장을 위해 더 많은 데이터와 더 큰 모델을 요구하고 있어 막대한 연산량을 요구 한다. 최근 연구에 따르면, 데이터를 잘 선별해서 사용할 경우 학습 데이터의 일부분을 사용하는 것만으로 딥러닝 학 습 성능을 유지할 수 있는 가능성이 제시되고 있다. 이렇게 학습 데이터를 평가하여 데이터를 효율적으로 학습에 사용하는 방법을 통해 학습에 드는 연산량을 줄이 고 딥러닝 기술의 진입장벽을 낮추는 데에 활용할 수 있다.그러나, 기존의 데이터 평가 방법론은 데이터를 평가하는 데에 전체 학습 데이터를 사용한 학습이 필요하다는 문제가 있다. 이는 학습에 드는 연산량을 감소시키는 데이터 평가 기술의 장점과 배치되는 근본적 문제점이다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "데이터 평가 방법론은 데이터를 평가하는 데에 전체 학습데이터를 사용한 학습이 필요하다는 문제점이 있다. 이에, 적은 연산량으로도 데이터를 평가할 수 있는 데이터 평가 방법론을 제공한다. 본 발명은 학습 데이터셋에서 각 데이터의 전형성 정도를 점수로써 측정하고 해당 점수를 통해 학습 없이 학습 에 유용한 데이터를 추출할 수 있다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "컴퓨터 장치에서 실행되는 데이터 평가 방법에 있어서, 상기 컴퓨터 장치는 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세서를 포함하고, 상기 데이터 평가 방법은, 상기 적어도 하나 의 프로세서에 의해, 주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전 형성 정도를 나타내는 복잡도-격차 점수(complexity-gap score)를 계산하는 단계를 포함하는 데이터 평가 방법 을 제공한다. 일 측면에 따르면, 상기 계산하는 단계는, i번째 데이터로 생성되는 그램 행렬과 i번째 데이터의 레이블 벡터 (label vector)를 이용하여 i번째 데이터의 복잡도-격차 점수를 계산할 수 있다. 다른 측면에 따르면, 상기 계산하는 단계는, 상기 데이터셋에서 i번째 데이터를 제외한 뒤 계산된 그램 행렬과 레이블 벡터를 함께 이용하여 i번째 데이터의 복잡도-격차 점수를 계산할 수 있다. 또 다른 측면에 따르면, 상기 계산하는 단계는, 부분 행렬(sub matrix)의 역행렬을 구하는 공식인 슈어 보수 (Schur complement)를 통해 전체 그램 행렬의 역행렬을 구하여 상기 복잡도-격차 점수를 계산할 수 있다. 또 다른 측면에 따르면, 상기 계산하는 단계는, 데이터의 피처(feature)를 입력 값으로 이용하여 상기 복잡도- 격차 점수를 계산할 수 있다. 또 다른 측면에 따르면, 상기 데이터 평가 방법은, 상기 적어도 하나의 프로세서에 의해, 상기 복잡도-격차 점 수를 기준으로 상기 데이터셋에서 일부 데이터를 선별하는 단계를 더 포함할 수 있다. 또 다른 측면에 따르면, 상기 선별하는 단계는, 상기 복잡도-격차 점수를 이용하여 상기 데이터셋에서 모델 학 습에 사용할 학습 데이터를 선별할 수 있다. 또 다른 측면에 따르면, 상기 선별하는 단계는, 상기 데이터셋에서 상기 복잡도-격차 점수가 임계치(threshold) 미만인 데이터를 제거하는 단계를 포함할 수 있다. 또 다른 측면에 따르면, 상기 선별하는 단계는, 상기 복잡도-격차 점수를 이용하여 상기 데이터셋에서 노이즈 데이터를 감지하는 단계를 포함할 수 있다. 데이터 평가 방법을 컴퓨터에 실행시키기 위해 컴퓨터 판독가능한 기록 매체에 저장되는 컴퓨터 프로그램에 있 어서, 상기 데이터 평가 방법은, 주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전형성 정도를 나타내는 복잡도-격차 점수(complexity-gap score)를 계산하는 단계를 포함하는, 컴퓨 터 프로그램을 제공한다. 컴퓨터 장치에 있어서, 메모리에 포함된 컴퓨터 판독가능한 명령들을 실행하도록 구성된 적어도 하나의 프로세 서를 포함하고, 상기 적어도 하나의 프로세서는, 주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix) 을 이용하여 각 데이터의 전형성 정도를 나타내는 복잡도-격차 점수(complexity-gap score)를 계산하는 과정; 및 상기 복잡도-격차 점수를 기준으로 상기 데이터셋에서 모델 학습에 사용할 학습 데이터를 선별하는 과정을 처리하는 컴퓨터 장치를 제공한다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "본 발명의 실시예들에 따르면, 데이터만을 이용하여 학습 없이 단순한 행렬 계산을 통해 데이터의 전형성을 계 산한 후 학습에 도움이 되는 데이터를 추출함으로써 모델이 적은 데이터만을 학습하는 것으로 전체 데이터를 학 습한 것과 동일한 효과를 주며, 이를 통해 요구 연산량을 크게 낮출 수 있다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "이하, 본 발명의 실시예를 첨부된 도면을 참조하여 상세하게 설명한다. 본 발명의 실시예들은 인공지능 모델 학습의 효율성을 증대시키는 기술에 관한 것이다. 본 명세서에서 구체적으로 개시되는 것들을 포함하는 실시예들은 학습 데이터셋에서 각 데이터의 전형성 정도를 점수로써 측정하고 해당 점수를 통해 학습 없이 학습에 유용한 데이터를 추출하는 기법을 통해 모델의 학습 효 율성을 높일 수 있다. 본 발명의 실시예들에 따른 데이터 평가 장치는 적어도 하나의 컴퓨터 장치에 의해 구현될 수 있으며, 본 발명 의 실시예들에 따른 데이터 평가 방법은 데이터 평가 장치에 포함되는 적어도 하나의 컴퓨터 장치를 통해 수행 될 수 있다. 이때, 컴퓨터 장치에는 본 발명의 일실시예에 따른 컴퓨터 프로그램이 설치 및 구동될 수 있고, 컴 퓨터 장치는 구동된 컴퓨터 프로그램의 제어에 따라 본 발명의 실시예들에 따른 데이터 평가 방법을 수행할 수 있다. 상술한 컴퓨터 프로그램은 컴퓨터 장치와 결합되어 데이터 평가 방법을 컴퓨터에 실행시키기 위해 컴퓨터 판독 가능한 기록매체에 저장될 수 있다. 도 1은 본 발명의 일실시예에 따른 컴퓨터 장치의 예를 도시한 블록도이다. 예를 들어, 본 발명의 실시예들에 따른 데이터 평가 장치는 도 1을 통해 도시된 컴퓨터 장치에 의해 구현될 수 있다. 도 1에 도시된 바와 같이 컴퓨터 장치는 본 발명의 실시예들에 따른 데이터 평가 방법을 실행하기 위한 구 성요소로서, 메모리, 프로세서, 통신 인터페이스 그리고 입출력 인터페이스를 포함할 수 있다. 메모리는 컴퓨터에서 판독 가능한 기록매체로서, RAM(random access memory), ROM(read only memory) 및 디스크 드라이브와 같은 비소멸성 대용량 기록장치(permanent mass storage device)를 포함할 수 있다. 여기서 ROM과 디스크 드라이브와 같은 비소멸성 대용량 기록장치는 메모리와는 구분되는 별도의 영구 저장 장치로 서 컴퓨터 장치에 포함될 수도 있다. 또한, 메모리에는 운영체제와 적어도 하나의 프로그램 코드가 저장될 수 있다. 이러한 소프트웨어 구성요소들은 메모리와는 별도의 컴퓨터에서 판독 가능한 기록매체로 부터 메모리로 로딩될 수 있다. 이러한 별도의 컴퓨터에서 판독 가능한 기록매체는 플로피 드라이브, 디스 크, 테이프, DVD/CD-ROM 드라이브, 메모리 카드 등의 컴퓨터에서 판독 가능한 기록매체를 포함할 수 있다. 다른 실시예에서 소프트웨어 구성요소들은 컴퓨터에서 판독 가능한 기록매체가 아닌 통신 인터페이스를 통해 메 모리에 로딩될 수도 있다. 예를 들어, 소프트웨어 구성요소들은 네트워크를 통해 수신되는 파일들에 의해 설치되는 컴퓨터 프로그램에 기반하여 컴퓨터 장치의 메모리에 로딩될 수 있다. 프로세서는 기본적인 산술, 로직 및 입출력 연산을 수행함으로써, 컴퓨터 프로그램의 명령을 처리하도록 구성될 수 있다. 명령은 메모리 또는 통신 인터페이스에 의해 프로세서로 제공될 수 있다. 예를 들어, 프로세서는 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 수신되는 명령을 실행하 도록 구성될 수 있다.통신 인터페이스는 네트워크를 통해 컴퓨터 장치가 다른 장치와 서로 통신하기 위한 기능을 제 공할 수 있다. 일례로, 컴퓨터 장치의 프로세서가 메모리와 같은 기록 장치에 저장된 프로그램 코드에 따라 생성한 요청이나 명령, 데이터, 파일 등이 통신 인터페이스의 제어에 따라 네트워크를 통해 다른 장치들로 전달될 수 있다. 역으로, 다른 장치로부터의 신호나 명령, 데이터, 파일 등이 네트워크 를 거쳐 컴퓨터 장치의 통신 인터페이스를 통해 컴퓨터 장치로 수신될 수 있다. 통신 인터 페이스를 통해 수신된 신호나 명령, 데이터 등은 프로세서나 메모리로 전달될 수 있고, 파일 등 은 컴퓨터 장치가 더 포함할 수 있는 저장 매체(상술한 영구 저장 장치)로 저장될 수 있다. 통신 방식은 제한되지 않으며, 네트워크가 포함할 수 있는 통신망(일례로, 이동통신망, 유선 인터넷, 무선 인터넷, 방송망)을 활용하는 통신 방식뿐만 아니라 기기들 간의 근거리 유선/무선 통신 역시 포함될 수 있다. 예를 들어, 네트워크는, PAN(personal area network), LAN(local area network), CAN(campus area network), MAN(metropolitan area network), WAN(wide area network), BBN(broadband network), 인터넷 등의 네트워크 중 하나 이상의 임의의 네트워크를 포함할 수 있다. 또한, 네트워크는 버스 네트워크, 스타 네트 워크, 링 네트워크, 메쉬 네트워크, 스타-버스 네트워크, 트리 또는 계층적(hierarchical) 네트워크 등을 포함 하는 네트워크 토폴로지 중 임의의 하나 이상을 포함할 수 있으나, 이에 제한되지 않는다. 입출력 인터페이스는 입출력 장치와의 인터페이스를 위한 수단일 수 있다. 예를 들어, 입력 장치는 마이크, 키보드, 카메라 또는 마우스 등의 장치를, 그리고 출력 장치는 디스플레이, 스피커와 같은 장치를 포함 할 수 있다. 다른 예로 입출력 인터페이스는 터치스크린과 같이 입력과 출력을 위한 기능이 하나로 통합된 장치와의 인터페이스를 위한 수단일 수도 있다. 입출력 장치는 컴퓨터 장치와 하나의 장치로 구성될 수도 있다. 또한, 다른 실시예들에서 컴퓨터 장치는 도 1의 구성요소들보다 더 적은 혹은 더 많은 구성요소들을 포함 할 수도 있다. 그러나, 대부분의 종래기술적 구성요소들을 명확하게 도시할 필요성은 없다. 예를 들어, 컴퓨터 장치는 상술한 입출력 장치 중 적어도 일부를 포함하도록 구현되거나 또는 트랜시버(transceiver), 카메라, 각종 센서, 데이터베이스 등과 같은 다른 구성요소들을 더 포함할 수도 있다. 이하에서는 학습 없이 데이터의 가치를 평가하는 방법 및 장치의 구체적인 실시예를 설명하기로 한다. 딥러닝에 관한 최근 연구에서는 모델의 학습 동향이나 데이터가 제거되었을 때의 성능 차이를 분석하여 각 데이 터가 모델의 최적화 또는 일반화에 주는 영향을 분석한다. 이러한 접근들은 각 데이터의 특징과 중요도를 밝혀 내는데, 이는 딥러닝의 상향과 데이터의 진단에 유용한 정보를 제공한다. 그러나, 데이터의 가치를 평가하는 기존 방법들은 높은 계산 복잡도를 가진 훈련을 필요로 한다. 본 실시예에서는 두 개의 층을 가진 과잉 파라미터 신경망(2-Layer overparameterized neural network)에서 각 데이터의 이론적 영향을 측정하여 훈련 없이 데이터의 가치를 평가하는 알고리즘인 복잡도-격차 알고리즘을 제 시한다. 도 2는 본 발명의 일실시예에 따른 컴퓨터 장치가 수행할 수 있는 데이터 평가 방법의 예를 도시한 순서도이다. 본 실시예에 따른 컴퓨터 장치는 클라이언트(client)를 대상으로 클라이언트 상에 설치된 전용 어플리케이 션이나 컴퓨터 장치와 관련된 웹/모바일 사이트 접속을 통해 목적하는 서비스를 제공할 수 있다. 컴퓨터 장치에는 컴퓨터로 구현된 데이터 평가 장치가 구성될 수 있다. 일례로, 데이터 평가 장치는 독립적으로 동작하는 프로그램 형태로 구현되거나, 혹은 특정 어플리케이션의 인-앱(in-app) 형태로 구성되어 상기 특정 어 플리케이션 상에서 동작이 가능하도록 구현될 수 있다. 컴퓨터 장치의 프로세서는 이하의 데이터 평가 방법을 수행하기 위한 구성요소로 구현될 수 있다. 실 시예에 따라 프로세서의 구성요소들은 선택적으로 프로세서에 포함되거나 제외될 수도 있다. 또한, 실시예에 따라 프로세서의 구성요소들은 프로세서의 기능의 표현을 위해 분리 또는 병합될 수도 있다. 이러한 프로세서 및 프로세서의 구성요소들은 이하의 데이터 평가 방법이 포함하는 단계들을 수행하 도록 컴퓨터 장치를 제어할 수 있다. 예를 들어, 프로세서 및 프로세서의 구성요소들은 메모리 가 포함하는 운영체제의 코드와 적어도 하나의 프로그램의 코드에 따른 명령(instruction)을 실행하도록 구현될 수 있다. 여기서, 프로세서의 구성요소들은 컴퓨터 장치에 저장된 프로그램 코드가 제공하는 명령에 따라 프로 세서에 의해 수행되는 서로 다른 기능들(different functions)의 표현들일 수 있다. 프로세서는 컴퓨터 장치의 제어와 관련된 명령이 로딩된 메모리로부터 필요한 명령을 읽어들일 수 있다. 이 경우, 상기 읽어들인 명령은 프로세서가 이후 설명될 단계들을 실행하도록 제어하기 위한 명 령을 포함할 수 있다. 이후 설명될 데이터 평가 방법이 포함하는 단계들은 도시된 순서와 다른 순서로 수행될 수 있으며, 단계들 중 일부가 생략되거나 추가의 과정이 더 포함될 수 있다. 도 2를 참조하면, 단계(S210)에서 프로세서는 주어진 데이터셋에 대해 데이터 간의 그램 행렬(gram matrix)을 이용하여 각 데이터의 전형성 정도를 나타내는 복잡도-격차 점수(complexity-gap score)를 계산할 수 있다. 본 실시예에서는 복잡도-격차 점수를 통해 각 데이터의 '불규칙성'을 수치화할 수 있으며, 복잡도-격차 점수는 데이터가 훈련 과정 동안 신경망의 변화에 얼마나 기여하는지를 나타낸다. 단계(S220)에서 프로세서는 복잡도-격차 점수를 기준으로 주어진 데이터셋에서 학습에 사용할 데이터를 선 별할 수 있다. 일례로, 프로세서는 복잡도-격차 점수가 임계치(threshold) 미만인 데이터를 제거한 데이터 셋으로 모델을 학습시킬 수 있다. 복잡도-격차 점수를 계산하는 과정은 다음과 같다. 프로세서는 주어진 데이터셋을 이용하여 수학식 1과 같이 정의된 복잡도-격차 점수(CG)를 계산할 수 있다. [수학식 1]"}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "복잡도-격차 점수(CG)는 데이터들로 생성되는 그램 행렬 H와, 레이블 벡터(label vector) y를 바탕으로 계산될 수 있다. 수학식 1에서 yT는 레이블 벡터 y를 전치(transpose)한 것이고, H-1은 그램 행렬 H의 역행렬(inverse matrix)을 나타낸다. 여기서, 는 주어진 데이터셋 으로 생성되는 그램 행렬을 의미하는 것으로, 수 학식 2와 같이 정의될 수 있다. [수학식 2]"}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 3, "content": "그리고, 수학식 1에서 는 주어진 데이터셋 에서 i번째 데이터 를 제 외한 뒤 계산한 그램 행렬과 레이블 벡터를 의미한다. 이때, 레이블 벡터는 각 데이터의 레이블 정보를 순서에 맞게 1 또는 -1로 나타낸 벡터를 의미한다. 각 데이터의 복잡도-격차 점수(CG)를 얻기 위해서는 n개의 그램 행렬( )의 역행렬을 구해야 하므로 계산적으 로 비효율적인 면이 있다(O(n4)). 이를 부분 행렬(sub matrix)의 역행렬을 구하는 공식인 슈어 보수(Schur complement)를 통해 전체 그램 행렬의 (H) 역행렬을 구하는 것으로, 각 데이터의 그램 행렬( )을 구하여 복 잡도-격차 점수(CG)를 계산하여 계산 복잡도를 해소할 수 있다(O(n3)). 복잡도-격차 점수(CG)의 이론적 분석은 두 개의 층을 가진 과잉 파라미터 신경망에서 이루어진다. 수학식 1에서 계산되는 값 은 데이터셋의 복잡도를 나타내며, 주어진 데이터셋으로 신경망이 학습될 때 파라미터의 변화량의 총 합과 같다. 따라서, i번째 데이터의 복잡도-격차 점수(CG)는 해당 데이터가 빠짐으로서 데이터셋의 복잡도가 얼마나 줄어들 었는지 표현함과 동시에, 학습 과정에서 신경망의 변화에 얼마나 기여하는지를 나타낸다.또한, 가우시안 모델(Gaussian model)에서 복잡도-격차 점수(CG)는 같은 클래스 데이터와의 각도 합과 다른 클 래스 데이터와의 각도 차이로 근사되어 결정 경계(decision boundary)와 가까운 데이터일수록 높은 점수를 가진 다. 이하의 실험 결과를 통해 본 발명에 따른 복잡도-격차 알고리즘이 불규칙하거나 잘못 레이블링된 데이터를 찾아 내는데 효과적임을 알 수 있다. 도 3은 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 시각화 실험 결과를 도시한 것이다. 도 3은 MNIST 데이터셋과 CIFAR-10 데이터셋에서 복잡도-격차 점수가 높은 데이터들과 낮은 데이터들을 나타내 고 있다. 복잡도-격차 점수가 낮은 사진들은 전형적인 형태를 띄며 인식되기 쉬워 보이는 반면에, 점수가 높은 사진들은 인식되기 어려우며 레이블이 잘못된 경우도 포함된다. 도 4는 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘에 따른 데이터 선별 학습 결과를 도시한 것이다. 복잡도-격차 점수를 토대로 데이터를 선별하는 실험에서는 점수가 낮은 데이터를 제거한 뒤 모델을 학습시켜도 성능이 떨어지지 않음을 관찰한다. 이는 모델 학습 시 필요한 계산량을 줄이며, 효율적인 학습으로의 가능성을 제시한다. 반면, 점수가 높은 데이터를 제거하여 모델을 학습시키면 성능이 빠르게 감소함을 관찰하고, 이를 통 해 일반화에 도움이 되는 학습 데이터의 존재를 확인하며 복잡도-격차 점수를 통해 유용한 학습 데이터를 잘 선 별할 수 있음을 확인한다. 도 4는 점수가 낮은 데이터를 제거한 데이터셋으로 모델을 학습시켰을 때와 점수가 높은 데이터를 제거한 데이 터셋으로 모델을 학습시켰을 때의 성능을 나타낸다. FMNIST, CIFAR-10 데이터셋은 ResNet18으로, CIFAR-100 데 이터셋은 ResNet50으로 학습시켰으며, 그래프의 x축은 선별된 데이터셋의 비율, y축은 선별된 데이터로 모델을 학습시켰을 때의 성능인 정확도(accuracy)를 나타낸다. 복잡도-격차 점수는 데이터의 학습을 필요로 하지 않음 에도 불구하고 데이터의 학습에 기반한 기존 점수들(EL2N, Forgetting, C-score)과 경쟁력 있는 성능을 보인다. 도 5는 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 노이즈 감지 실험 결과를 도시한 것이다. 노이즈 감지 실험은 노이즈 데이터의 복합도-격차 점수의 특징을 확인하는 것이다. 이 실험은 레이블 노이즈가 포함된 데이터셋에서 각 데이터의 복잡도-격차 점수를 계산하여 노이즈 데이터가 더 큰 점수를 가짐을 확인한다. 도 5는 20%의 레이블 노이즈가 있는 데이터셋의 복잡도-격차 점수를 계산한 뒤, 원래 데이터(Clean data)와 노 이즈 데이터가 가지는 복잡도-격차 점수를 히스토그램으로 나타내고, 점수가 높은 데이터들을 선택했을 때(x축) 감지되는 노이즈 데이터의 비율을(y축) 나타낸 것이다. 노이즈 데이터가 더 높은 점수를 가짐을 확인할 수 있으 며, 이를 통해 노이즈 데이터를 감지해낼 수 있음 또한 확인할 수 있다. 도 6은 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 표현 점수와 학습 동향과의 관계를 나타내는 실험 결과를 도시한 것이다. 복잡도-격차 점수를 통해 표현 점수와 학습 동향과의 관계를 확인할 수 있다. 도 6은 CIFAR-10 데이터셋을 복잡 도-격차 점수로 정렬하여 상위 10% 그룹부터 하위 10% 그룹까지 10개의 그룹으로 나눈 후, 각 그룹의 손실값 (Loss), 정확도(Train accuracy), 커널 속도(Kernel velocity) 평균값을 계산한 결과이다. 복잡도-격차 점수가 높은 데이터들이 높은 손실값, 낮은 정확도, 높은 커널 속도를 가짐을 확인할 수 있다. 이를 통해 복잡도-격차 점수가 높은 데이터들이 더 '어려운 데이터'이며, 네트워크 업데이트에 더 크게 기여한다는 이론적 의미를 실험 적으로 확인할 수 있다. 실시예에서 따라서는 데이터의 피처(Feature)를 입력 값으로 하여 더 높은 성능의 점수를 계산할 수 있다. 일례 로, 데이터를 모델에 입력할 때 마지막 층(Penultimate layer)의 값을 피처로 추출하고, 이를 입력 값으로 하여 피처-복잡도-격차 점수를 계산할 수 있다. 피처-복잡도-격차 점수는 복잡도-격차 점수보다 더 좋은 성능을 가짐 을 실험을 통해 확인할 수 있다. 이처럼 본 발명의 실시예들에 따르면, 데이터만을 이용하여 학습 없이 단순한 행렬 계산을 통해 데이터의 전형 성을 계산한 후 학습에 도움이 되는 데이터를 추출함으로써 모델이 적은 데이터만을 학습하는 것으로 전체 데이 터를 학습한 것과 동일한 효과를 주며, 이를 통해 요구 연산량을 크게 낮출 수 있다. 이상에서 설명된 장치는 하드웨어 구성요소, 소프트웨어 구성요소, 및/또는 하드웨어 구성요소 및 소프트웨어 구성요소의 조합으로 구현될 수 있다. 예를 들어, 실시예들에서 설명된 장치 및 구성요소는, 프로세서, 콘트롤러, ALU(arithmetic logic unit), 디지털 신호 프로세서(digital signal processor), 마이크로컴퓨터, FPGA(field programmable gate array), PLU(programmable logic unit), 마이크로프로세서, 또는 명령 (instruction)을 실행하고 응답할 수 있는 다른 어떠한 장치와 같이, 하나 이상의 범용 컴퓨터 또는 특수 목적 컴퓨터를 이용하여 구현될 수 있다. 처리 장치는 운영 체제(OS) 및 상기 운영 체제 상에서 수행되는 하나 이상 의 소프트웨어 어플리케이션을 수행할 수 있다. 또한, 처리 장치는 소프트웨어의 실행에 응답하여, 데이터를 접 근, 저장, 조작, 처리 및 생성할 수도 있다. 이해의 편의를 위하여, 처리 장치는 하나가 사용되는 것으로 설명"}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 4, "content": "된 경우도 있지만, 해당 기술분야에서 통상의 지식을 가진 자는, 처리 장치가 복수 개의 처리 요소(processing element) 및/또는 복수 유형의 처리 요소를 포함할 수 있음을 알 수 있다. 예를 들어, 처리 장치는 복수 개의 프로세서 또는 하나의 프로세서 및 하나의 콘트롤러를 포함할 수 있다. 또한, 병렬 프로세서(parallel processor)와 같은, 다른 처리 구성(processing configuration)도 가능하다. 소프트웨어는 컴퓨터 프로그램(computer program), 코드(code), 명령(instruction), 또는 이들 중 하나 이상의 조합을 포함할 수 있으며, 원하는 대로 동작하도록 처리 장치를 구성하거나 독립적으로 또는 결합적으로 (collectively) 처리 장치를 명령할 수 있다. 소프트웨어 및/또는 데이터는, 처리 장치에 의하여 해석되거나 처 리 장치에 명령 또는 데이터를 제공하기 위하여, 어떤 유형의 기계, 구성요소(component), 물리적 장치, 컴퓨터 저장 매체 또는 장치에 구체화(embody)될 수 있다. 소프트웨어는 네트워크로 연결된 컴퓨터 시스템 상에 분산되 어서, 분산된 방법으로 저장되거나 실행될 수도 있다. 소프트웨어 및 데이터는 하나 이상의 컴퓨터 판독 가능 기록 매체에 저장될 수 있다. 실시예에 따른 방법은 다양한 컴퓨터 수단을 통하여 수행될 수 있는 프로그램 명령 형태로 구현되어 컴퓨터 판 독 가능 매체에 기록될 수 있다. 이때, 매체는 컴퓨터로 실행 가능한 프로그램을 계속 저장하거나, 실행 또는 다운로드를 위해 임시 저장하는 것일 수도 있다. 또한, 매체는 단일 또는 수 개의 하드웨어가 결합된 형태의 다 양한 기록수단 또는 저장수단일 수 있는데, 어떤 컴퓨터 시스템에 직접 접속되는 매체에 한정되지 않고, 네트워 크 상에 분산 존재하는 것일 수도 있다. 매체의 예시로는, 하드 디스크, 플로피 디스크 및 자기 테이프와 같은 자기 매체, CD-ROM 및 DVD와 같은 광기록 매체, 플롭티컬 디스크(floptical disk)와 같은 자기-광 매체 (magneto-optical medium), 및 ROM, RAM, 플래시 메모리 등을 포함하여 프로그램 명령어가 저장되도록 구성된 것이 있을 수 있다. 또한, 다른 매체의 예시로, 어플리케이션을 유통하는 앱 스토어나 기타 다양한 소프트웨어 를 공급 내지 유통하는 사이트, 서버 등에서 관리하는 기록매체 내지 저장매체도 들 수 있다."}
{"patent_id": "10-2023-0119227", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 5, "content": "이상과 같이 실시예들이 비록 한정된 실시예와 도면에 의해 설명되었으나, 해당 기술분야에서 통상의 지식을 가 진 자라면 상기의 기재로부터 다양한 수정 및 변형이 가능하다. 예를 들어, 설명된 기술들이 설명된 방법과 다 른 순서로 수행되거나, 및/또는 설명된 시스템, 구조, 장치, 회로 등의 구성요소들이 설명된 방법과 다른 형태 로 결합 또는 조합되거나, 다른 구성요소 또는 균등물에 의하여 대치되거나 치환되더라도 적절한 결과가 달성될 수 있다. 그러므로, 다른 구현들, 다른 실시예들 및 특허청구범위와 균등한 것들도 후술하는 특허청구범위의 범위에 속한 다.도면 도면1 도면2 도면3 도면4 도면5 도면6"}
{"patent_id": "10-2023-0119227", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일실시예에 있어서 컴퓨터 장치의 내부 구성의 일례를 설명하기 위한 블록도이다. 도 2는 본 발명의 일실시예에 따른 컴퓨터 장치가 수행할 수 있는 데이터 평가 방법의 예를 도시한 순서도이다. 도 3은 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 시각화 실험 결과를 도시한 것이다. 도 4는 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘에 따른 데이터 선별 학습 결과를 도시한 것이다. 도 5는 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 노이즈 감지 실험 결과를 도시한 것이다. 도 6은 본 발명의 일실시예에 있어서 복잡도-격차 알고리즘의 표현 점수와 학습 동향과의 관계를 나타내는 실험 결과를 도시한 것이다."}
