{"patent_id": "10-2019-0155240", "section": "특허_기본정보", "subsection": "특허정보", "content": {"공개번호": "10-2021-0066244", "출원번호": "10-2019-0155240", "발명의 명칭": "인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법, 장치 및 컴퓨터 프로그램", "출원인": "하이코두주식회사", "발명자": "권지연"}}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_1", "content": "컴퓨팅 장치에 의해 수행되는 방법에 있어서,기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 사용자 인터페이스(User interface, UI)를 제공하는 단계;상기 UI를 통해 상기 강의 데이터를 업로드 받는 단계; 및기 학습된 인공지능 모델을 이용하여 상기 업로드된 강의 데이터의 적합성을 판단하고, 상기 판단된 적합성에기초하여 상기 업로드된 강의 데이터를 등록하는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_2", "content": "제1항에 있어서,상기 강의 데이터를 등록하는 단계는,기 학습된 인공지능 모델을 이용하여 상기 기 설정된 수업 모형에 따른 예시 강의 데이터와 상기 업로드된 강의데이터 간의 유사도를 판단하고, 상기 유사도가 기준 값 이상인 경우에만 상기 업로드된 강의 데이터를 등록하는 단계를 포함하는,인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_3", "content": "제1항에 있어서,상기 UI를 제공하는 단계는,강의 주제에 따라 복수의 수업 모형 중 어느 하나의 수업 모형에 따른 강의 데이터를 업로드 받는 UI를 제공하는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_4", "content": "제1항에 있어서,상기 강의 데이터를 업로드 받는 단계는,상기 기 설정된 수업 모형이 디자인 중심(Needs, Design, Implementation and Share, NDIS) 모델인 경우, 상기UI를 통해 특정 주제에 대한 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 순차적으로 수행하는 강의 데이터를 업로드 받는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_5", "content": "제1항에 있어서,상기 강의 데이터를 업로드 받는 단계는,상기 기 설정된 수업 모형이 시연 중심(Demonstration, Modeling and Making, DMM) 모델인 경우, 상기 UI를 통해 특정 주제에 대한 핵심전략 시연 단계, 실습 단계 및 제작 단계를 순차적으로 수행하는 강의 데이터를 업로드 받는 단계를 포함하는, 공개특허 10-2021-0066244-3-인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_6", "content": "제1항에 있어서,상기 강의 데이터를 업로드 받는 단계는,상기 기 설정된 수업 모형이 재구성 중심(Use, Modify and reCreatre, UMC) 모델인 경우, 상기 UI를 통해 특정주제에 대한 결과물 조작 단계, 상기 결과물에 대한 수정 단계 및 상기 결과물에 대한 재구성 단계를 순차적으로 수행하는 강의 데이터를 업로드 받는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_7", "content": "제1항에 있어서,상기 강의 데이터를 업로드 받는 단계는,상기 기 설정된 수업 모형이 개발 중심(Discovery, Design and Development, DDD) 모델인 경우, 상기 UI를 통해 특정 주제에 대한 결과물 탐구 단계, 상기 특정 주제에 대한 새로운 결과물 디자인 단계 및 상기 새로운 결과물 개발 단계를 순차적으로 수행하는 강의 데이터를 업로드 받는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_8", "content": "제1항에 있어서,상기 강의 데이터를 업로드 받는 단계는,상기 기 설정된 수업 모형이 CT 요소 중심(Decomposition, Pattern Recognition, Abstraction, Algorithm andProgramming, DPAAP) 모델인 경우, 상기 UI를 통해 특정 주제에 대한 문제를 단위별로 분해하는 단계, 상기 문제의 패턴 인식 단계, 상기 문제의 추상화 단계 및 알고리즘 개발 단계를 순차적으로 수행하는 강의 데이터를업로드 받는 단계를 포함하는, 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_9", "content": "하나 이상의 인스트럭션을 저장하는 메모리; 및상기 메모리에 저장된 상기 하나 이상의 인스트럭션을 실행하는 프로세서를 포함하고,상기 프로세서는 상기 하나 이상의 인스트럭션을 실행함으로써, 제1 항의 방법을 수행하는, 장치."}
{"patent_id": "10-2019-0155240", "section": "청구범위", "subsection": "청구항", "claim_number": "청구항_10", "content": "하드웨어인 컴퓨터와 결합되어, 제1 항의 방법을 수행할 수 있도록 컴퓨터에서 독출가능한 기록매체에 저장된컴퓨터프로그램."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "요약", "paragraph": 1, "content": "인공지능 수업 모형 검증에 기반한 코딩 강의 등록 방법, 장치 및 컴퓨터프로그램이 제공된다. 본 발명의 다양한 실시예에 따른 코딩 강의 등록 방법은, 컴퓨팅 장치에 의해 수행되는 방법에 있어서, 기 설정된 수업 모형에 따 라 강의 데이터를 업로드 받는 사용자 인터페이스(User interface, UI)를 제공하는 단계, 상기 UI를 통해 상기 강의 데이터를 업로드 받는 단계 및 상기 업로드된 강의 데이터의 적합성을 판단하고, 상기 판단된 적합성에 기 초하여 상기 업로드된 강의 데이터를 등록하는 단계를 포함한다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "기술분야", "paragraph": 1, "content": "본 발명의 다양한 실시예는 사용자로부터 업로드된 코딩 강의를 검증하여 등록하기 위한 인공지능 수업모형 검 증에 기반한 코딩 강의 등록 방법, 장치 및 컴퓨터 프로그램에 관한 것이다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "배경기술", "paragraph": 1, "content": "산업사회에서 정보사회로 패러다임이 변화하면서 사회 전반에 많은 변화가 일어나고 있다. 특히 정보가 중요한 가치가 되는 지식정보사회에서 고성능 프로세서, 초고속 네트워크, SW 기술의 융복합이 강조되는 소프트웨어 중 심 사회로 전환되고 있다. 즉, 지식정보사회는 인프라, 하드웨어 중심의 1차 IT혁명을 거쳐 창의적 IT인재를 바 탕으로 하는 소프트웨어, 콘텐츠 중심의 2차 IT혁명 시대로 이동하고 있다. 소프트웨어는 “Software is eating the world”, “Software is everywhere” 라고 표현할 정도로, 자동차산업, 항공산업, 금융산업, 쇼핑산업 등 거의 모든 산업에 미치는 영향이 막대하다. 이에 따라 정부에서는 이와 같은 사회변화에 대응하고자 2014년 『소프트웨어(SW) 중심사회 실현 전략』을 수립 하여 발표하고, 교육부에서는 '초중등 소프트웨어(SW) 교육 활성화 방안’에 이어『2015년 문이과 통합형 교육 과정』을 통해 초갋중갋고등학교에 체계적인 소프트웨어(SW) 교육을 도입하였다. 그러나, 『2015 문이과 통합형 교육과정』에 따른 소프트웨어교육이 학교현장에 안정적으로 정착되기 위해서는 교원수급, 교원연수, 교재 개발 등 다양한 영역에서의 준비가 필요하다. 선행기술문헌 특허문헌 (특허문헌 0001) 한국등록특허 제10-1984954호(2019.05.27)"}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "해결하려는과제", "paragraph": 1, "content": "본 발명이 해결하고자 하는 과제는 기 설정된 수업 모형에 따라 사용자로부터 업로드되는 강의 데이터를 검증하 고, 검증 결과에 따라 적합한 것으로 판단되는 강의 데이터를 등록할 수 있는 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방법, 장치 및 컴퓨터 프로그램을 제공하는 것이다. 본 발명이 해결하고자 하는 과제들은 이상에서 언급된 과제로 제한되지 않으며, 언급되지 않은 또 다른 과제들 은 아래의 기재로부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "과제의해결수단", "paragraph": 1, "content": "상술한 과제를 해결하기 위한 본 발명의 일 실시예에 따른 인공지능 수업모형 검증에 기반한 코딩 강의 등록 방 법은, 컴퓨팅 장치에 의해 수행되는 방법에 있어서, 기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 사 용자 인터페이스(User interface, UI)를 제공하는 단계, 상기 UI를 통해 상기 강의 데이터를 업로드 받는 단계 및 기 학습된 인공지능 모델을 이용하여 상기 업로드된 강의 데이터의 적합성을 판단하고, 상기 판단된 적합성 에 기초하여 상기 업로드된 강의 데이터를 등록하는 단계를 포함할 수 있다. 상술한 과제를 해결하기 위한 본 발명의 다른 실시예에 따른 인공지능 수업모형 검증에 기반한 코딩 강의 등록 장치는, 하나 이상의 인스트럭션을 저장하는 메모리 및 상기 메모리에 저장된 상기 하나 이상의 인스트럭션을 실행하는 프로세서를 포함하고, 상기 프로세서는 상기 하나 이상의 인스트럭션을 실행함으로써, 기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 사용자 인터페이스(User interface, UI)를 제공하는 단계, 상기 UI를 통해 상기 강의 데이터를 업로드 받는 단계 및 기 학습된 인공지능 모델을 이용하여 상기 업로드된 강의 데이터 의 적합성을 판단하고, 상기 판단된 적합성에 기초하여 상기 업로드된 강의 데이터를 등록하는 단계를 포함하는 수업모형 검증에 기반한 코딩 강의 등록 방법을 수행할 수 있다. 상술한 과제를 해결하기 위한 본 발명의 다른 실시예에 따른 인공지능 수업모형 검증에 기반한 코딩 강의 등록 컴퓨터프로그램은, 하드웨어인 컴퓨터와 결합되어, 기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 사 용자 인터페이스(User interface, UI)를 제공하는 단계, 상기 UI를 통해 상기 강의 데이터를 업로드 받는 단계 및 기 학습된 인공지능 모델을 이용하여 상기 업로드된 강의 데이터의 적합성을 판단하고, 상기 판단된 적합성 에 기초하여 상기 업로드된 강의 데이터를 등록하는 단계를 포함하는 수업모형 검증에 기반한 코딩 강의 등록 방법을 수행할 수 있도록 컴퓨터에서 독출가능한 기록매체에 저장될 수 있다. 본 발명의 기타 구체적인 사항들은 상세한 설명 및 도면들에 포함되어 있다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 1, "content": "사용자로부터 업로드되는 다양한 종류의 강의 데이터를 기 설정된 수업 모형에 따라 검증하고, 검증 결과에 따 라 적합한 것으로 판단되는 강의 데이터만을 등록함으로써, 수업 모형에 적합한 강의 데이터를 제공할 수 있다 는 이점이 있다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "발명의효과", "paragraph": 2, "content": "본 발명의 효과들은 이상에서 언급된 효과로 제한되지 않으며, 언급되지 않은 또 다른 효과들은 아래의 기재로 부터 통상의 기술자에게 명확하게 이해될 수 있을 것이다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 1, "content": "본 발명의 이점 및 특징, 그리고 그것들을 달성하는 방법은 첨부되는 도면과 함께 상세하게 후술되어 있는 실시 예들을 참조하면 명확해질 것이다. 그러나, 본 발명은 이하에서 개시되는 실시예들에 제한되는 것이 아니라 서 로 다른 다양한 형태로 구현될 수 있으며, 단지 본 실시예들은 본 발명의 개시가 완전하도록 하고, 본 발명이 속하는 기술 분야의 통상의 기술자에게 본 발명의 범주를 완전하게 알려주기 위해 제공되는 것이며, 본 발명은 청구항의 범주에 의해 정의될 뿐이다. 본 명세서에서 사용된 용어는 실시예들을 설명하기 위한 것이며 본 발명을 제한하고자 하는 것은 아니다. 본 명 세서에서, 단수형은 문구에서 특별히 언급하지 않는 한 복수형도 포함한다. 명세서에서 사용되는 \"포함한다 (comprises)\" 및/또는 \"포함하는(comprising)\"은 언급된 구성요소 외에 하나 이상의 다른 구성요소의 존재 또는 추가를 배제하지 않는다. 명세서 전체에 걸쳐 동일한 도면 부호는 동일한 구성 요소를 지칭하며, \"및/또는\"은 언급된 구성요소들의 각각 및 하나 이상의 모든 조합을 포함한다. 비록 \"제1\", \"제2\" 등이 다양한 구성요소들을 서술하기 위해서 사용되나, 이들 구성요소들은 이들 용어에 의해 제한되지 않음은 물론이다. 이들 용어들은 단 지 하나의 구성요소를 다른 구성요소와 구별하기 위하여 사용하는 것이다. 따라서, 이하에서 언급되는 제1 구성 요소는 본 발명의 기술적 사상 내에서 제2 구성요소일 수도 있음은 물론이다. 다른 정의가 없다면, 본 명세서에서 사용되는 모든 용어(기술 및 과학적 용어를 포함)는 본 발명이 속하는 기술 분야의 통상의 기술자에게 공통적으로 이해될 수 있는 의미로 사용될 수 있을 것이다. 또한, 일반적으로 사용되 는 사전에 정의되어 있는 용어들은 명백하게 특별히 정의되어 있지 않는 한 이상적으로 또는 과도하게 해석되지 않는다. 명세서에서 사용되는 \"부\" 또는 “모듈”이라는 용어는 소프트웨어, FPGA 또는 ASIC과 같은 하드웨어 구성요소 를 의미하며, \"부\" 또는 “모듈”은 어떤 역할들을 수행한다. 그렇지만 \"부\" 또는 “모듈”은 소프트웨어 또는 하드웨어에 한정되는 의미는 아니다. \"부\" 또는 “모듈”은 어드레싱할 수 있는 저장 매체에 있도록 구성될 수 도 있고 하나 또는 그 이상의 프로세서들을 재생시키도록 구성될 수도 있다. 따라서, 일 예로서 \"부\" 또는 “모 듈”은 소프트웨어 구성요소들, 객체지향 소프트웨어 구성요소들, 클래스 구성요소들 및 태스크 구성요소들과 같은 구성요소들과, 프로세스들, 함수들, 속성들, 프로시저들, 서브루틴들, 프로그램 코드의 세그먼트들, 드라 이버들, 펌웨어, 마이크로 코드, 회로, 데이터, 데이터베이스, 데이터 구조들, 테이블들, 어레이들 및 변수들을 포함한다. 구성요소들과 \"부\" 또는 “모듈”들 안에서 제공되는 기능은 더 작은 수의 구성요소들 및 \"부\" 또는 “모듈”들로 결합되거나 추가적인 구성요소들과 \"부\" 또는 “모듈”들로 더 분리될 수 있다. 공간적으로 상대적인 용어인 \"아래(below)\", \"아래(beneath)\", \"하부(lower)\", \"위(above)\", \"상부(upper)\" 등 은 도면에 도시되어 있는 바와 같이 하나의 구성요소와 다른 구성요소들과의 상관관계를 용이하게 기술하기 위 해 사용될 수 있다. 공간적으로 상대적인 용어는 도면에 도시되어 있는 방향에 더하여 사용시 또는 동작시 구성 요소들의 서로 다른 방향을 포함하는 용어로 이해되어야 한다. 예를 들어, 도면에 도시되어 있는 구성요소를 뒤 집을 경우, 다른 구성요소의 \"아래(below)\"또는 \"아래(beneath)\"로 기술된 구성요소는 다른 구성요소의 \"위 (above)\"에 놓여질 수 있다. 따라서, 예시적인 용어인 \"아래\"는 아래와 위의 방향을 모두 포함할 수 있다. 구성 요소는 다른 방향으로도 배향될 수 있으며, 이에 따라 공간적으로 상대적인 용어들은 배향에 따라 해석될 수 있 다. 본 명세서에서, 컴퓨터는 적어도 하나의 프로세서를 포함하는 모든 종류의 하드웨어 장치를 의미하는 것이고, 실시 예에 따라 해당 하드웨어 장치에서 동작하는 소프트웨어적 구성도 포괄하는 의미로서 이해될 수 있다. 예 를 들어, 컴퓨터는 스마트폰, 태블릿 PC, 데스크톱, 노트북 및 각 장치에서 구동되는 사용자 클라이언트 및 애 플리케이션을 모두 포함하는 의미로서 이해될 수 있으며, 또한 이에 제한되는 것은 아니다. 이하, 첨부된 도면을 참조하여 본 발명의 실시예를 상세하게 설명한다. 본 명세서에서 설명되는 각 단계들은 컴퓨터에 의하여 수행되는 것으로 설명되나, 각 단계의 주체는 이에 제한 되는 것은 아니며, 실시 예에 따라 각 단계들의 적어도 일부가 서로 다른 장치에서 수행될 수도 있다. 도 1은 본 발명의 일 실시예에 따른 인공지능 수업모형 검증에 기반한 코딩 강의 등록 시스템의 구성을 도시한 도면이다. 도 1을 참조하면, 본 발명의 일 실시예에 따른 수업모형 검증에 기반한 코딩 강의 등록 시스템은 코딩 강의 등 록 장치, 사용자 단말 및 외부 서버를 포함할 수 있다. 여기서, 도 1에 도시된 수업모형 검증에 기반한 코딩 강의 등록 시스템은 일 실시예에 따른 것이고, 그 구성 요 소가 도 1에 도시된 실시예에 한정되는 것은 아니며, 필요에 따라 부가, 변경 또는 삭제될 수 있다. 개시된 실시 예에 따른 코딩 강의 등록 시스템은, 코딩 강의를 업로드하는 강사와 이를 수강하는 수강생을 연결 하는 플랫폼으로서 활용될 수 있다. 즉, 개시된 실시 예에 따른 시스템은 강사의 요청에 따라 코딩 강의를 시스 템에 업로드하여 수강생에게 제공하며, 그 과정에서 발생하는 수강료나 광고 수익 등에 기반한 수수료 수익을 얻을 수 있다. 단, 개시된 실시 예에 따른 시스템은 업로드 가능한 코딩 강의의 종류를 기 설정된 수업 모형에 기반하여 제한 할 수 있다. 이를 통해, 검증되지 않은 강의가 개시된 실시 예에 따른 시스템에 의하여 제공되는 것을 방지할 수 있을 뿐 아니라, 강의 데이터를 수업 모형 및 수업 모형의 단계별로 용이하게 수집하고 분류할 수 있게 된다. 시스템은 수집 및 분류된 데이터를 빅데이터로 활용할 수 있다. 일 실시예에서, 코딩 강의 등록 장치는 기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 사용자 인 터페이스(User interface, UI)를 사용자 단말로 제공할 수 있다. 여기서, 기 설정된 수업 모형은 디자인 중심(Needs, Design, Implementation and Share, NDIS) 모델, 시연 중 심(Demonstration, Modeling and Making, DMM) 모델, 재구성 중심(Use, Modify and reCreatre, UMC) 모델, 개 발 중심(Discovery, Design and Development, DDD) 모델 및 CT 요소 중심(Decomposition, Pattern Recognition, Abstraction, Algorithm and Programming, DPAAP) 모델 중 적어도 하나를 포함할 수 있다. 그러 나, 이에 한정되지 않는다. 일 실시예에서, 코딩 강의 등록 장치는 UI를 통해 강의 데이터를 업로드 받을 수 있고, 업로드 받은 강의 데이터에 대한 적합성을 판단할 수 있다. 예를 들어, 코딩 강의 등록 장치는 UI를 통해 업로드(Upload)된 강의 데이터가 기 설정된 수업 모형과 어느 정도 일치하는지에 따라 업로드 받은 강의 데이터에 대한 유사도를 판단할 수 있고, 유사도에 따라 강의 데이터의 적합성을 판단할 수 있다. 그러나, 이에 한정되지 않고, 강의 데 이터의 적합성을 판단하는 어떠한 방법이든 적용이 가능하다. 일 실시예에서, 코딩 강의 등록 장치 UI를 통해 업로드된 강의 데이터 중 적합한 것으로 판단되는 강의 데 이터(예: 기 설정된 수업 모형과 기준 값 이상으로 일치하는 강의 데이터)를 등록할 수 있다. 일 실시예에서, 사용자 단말은 사용자 단말의 적어도 일부분에 디스플레이를 포함할 수 있으며, 디스 플레이를 통해 코딩 강의 등록 장치로부터 제공되는 UI를 출력할 수 있다. 예를 들어, 사용자 단말은 스마트폰, 태블릿 PC, 노트북 및 데스크탑 중 적어도 하나를 포함할 수 있으나, 이에 한정되지 않는다.다양한 실시예에서, 사용자 단말은 코딩 강의 등록 장치와 유무선으로 연결될 수 있으며, 코딩 강의 등록 장치로부터 UI(예: 코딩 강의 업로드 UI)를 제공받을 수 있고, UI를 통해 특정 주제에 대한 강의 데 이터를 업로드할 수 있다. 예를 들어, 사용자는 자신의 스마트폰에 포함된 통신 모듈을 이용하여 코딩 강의 등 록 장치와 무선 연결될 수 있다. 사용자 단말은 통신 모듈을 통해 코딩 강의 등록 장치로부터 제공된 UI를 스마트폰 화면에 출력할 수 있다. 또한, 사용자 단말은 스마트폰에 출력된 UI를 통해 제공되 는 강의 데이터를 업로드할 수 있다. 그러나, 이에 한정되지 않는다. 일 실시예에서, 외부 서버는 코딩 강의 등록 장치와 유무선 연결될 수 있으며, 코딩 강의 등록 장치 로부터 제공되는 복수의 강의 데이터를 저장할 수 있다. 다양한 실시예에서, 외부 서버는 특정 강의 데이터에 대한 제공 요청을 수신하는 경우, 기 저장된 복수의 강의 데이터 중 특정 강의 데이터를 선택하여 제공할 수 있다. 여기서, 도 1에 도시된 수업모형 검증에 기반한 코딩 강의 등록 시스템은 코딩 강의 등록 장치에 의해 등 록된 강의 데이터가 외부 서버에 저장되는 형태로 기재되어 있으나, 이에 한정되지 않고, 별도의 외부 서 버를 구비하지 않고, 코딩 강의 등록 장치 내에 구비된 저장 장치에 복수의 강의 데이터를 저장할 수 있다. 도 2는 본 발명의 다른 실시예에 따른 코딩 강의 등록 장치의 하드웨어 구성도이다. 도 2를 참조하면, 본 발명의 다른 실시예에 따른 코딩 강의 등록 장치(이하, \"컴퓨팅 장치\")는 프로 세서 및 메모리를 포함할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 네트워크 인터페이스(또 는 통신 인터페이스)(미도시), 스토리지(미도시), 버스(bus)(미도시)를 더 포함할 수 있다. 일 실시예에서, 프로세서는 컴퓨팅 장치의 각 구성의 전반적인 동작을 제어할 수 있다. 프로세서 는 CPU(Central Processing Unit), MPU(Micro Processor Unit), MCU(Micro Controller Unit), 또는 본 발명의 기술 분야에 잘 알려진 임의의 형태의 프로세서를 포함하여 구성될 수 있다. 다양한 실시예에서, 프로세서는 본 발명의 실시예들에 따른 방법을 실행하기 위한 적어도 하나의 애플리케 이션 또는 프로그램에 대한 연산을 수행할 수 있다. 다양한 실시예에서, 프로세서는 하나 이상의 코어 (core, 미도시) 및 그래픽 처리부(미도시) 및/또는 다른 구성 요소와 신호를 송수신하는 연결 통로(예: 버스 (bus) 등)를 포함할 수 있다. 다양한 실시예에서, 프로세서는 프로세서 내부에서 처리되는 신호(또는, 데이터)를 일시적 및/또는 영구적으로 저장하는 램(RAM: Random Access Memory, 미도시) 및 롬(ROM: Read-Only Memory, 미도시)을 더 포 함할 수 있다. 또한, 프로세서는 그래픽 처리부, 램 및 롬 중 적어도 하나를 포함하는 시스템온칩(SoC: system on chip) 형태로 구현될 수 있다. 일 실시예에서, 프로세서는 메모리에 저장된 하나 이상의 인스트럭션(instruction)을 실행함으로써, 도 3 내지 8과 관련하여 설명될 방법(예: 코딩 강의 등록 방법)을 수행할 수 있다. 예를 들어, 프로세서는 메모리에 저장된 하나 이상의 인스트럭션을 실행함으로써, 기 설정된 수업 모형에 따라 강의 데이터를 업 로드 받는 UI를 제공하는 동작, UI를 통해 강의 데이터를 업로드 받는 동작 및 업로드된 강의 데이터의 적합성 을 판단하고, 판단된 적합성에 기초하여 업로드된 강의 데이터를 등록하는 동작을 포함하는 코딩 강의 등록 방 법을 수행할 수 있다. 일 실시예에서, 메모리는 각종 데이터, 명령 및/또는 정보를 저장할 수 있다. 메모리에는 프로세서 의 처리 및 제어를 위한 프로그램들(하나 이상의 인스트럭션들)을 저장할 수 있다. 메모리에 저장된 프로그램들은 기능에 따라 복수 개의 모듈들로 구분될 수 있다. 다양한 실시예에서, 본 발명의 실시예와 관련하여 설명된 방법 또는 알고리즘의 단계들은 하드웨어로 직접 구현 되거나, 하드웨어에 의해 실행되는 소프트웨어 모듈로 구현되거나, 또는 이들의 결합에 의해 구현될 수 있다. 소프트웨어 모듈은 RAM(Random Access Memory), ROM(Read Only Memory), EPROM(Erasable Programmable ROM), EEPROM(Electrically Erasable Programmable ROM), 플래시 메모리(Flash Memory), 하드 디스크, 착탈형 디스크, CD-ROM, 또는 본 발명이 속하는 기술 분야에서 잘 알려진 임의의 형태의 컴퓨터 판독가능 기록매체에 상주할 수 있다. 본 발명의 구성 요소들은 하드웨어인 컴퓨터와 결합되어 실행되기 위해 프로그램(또는 애플리케이션)으로 구현 되어 매체에 저장될 수 있다. 본 발명의 구성 요소들은 소프트웨어 프로그래밍 또는 소프트웨어 요소들로 실행 될 수 있으며, 이와 유사하게, 실시 예는 데이터 구조, 프로세스들, 루틴들 또는 다른 프로그래밍 구성들의 조 합으로 구현되는 다양한 알고리즘을 포함하여, C, C++, 자바(Java), 어셈블러(assembler) 등과 같은 프로그래밍 또는 스크립팅 언어로 구현될 수 있다. 기능적인 측면들은 하나 이상의 프로세서들에서 실행되는 알고리즘으로 구현될 수 있다. 이하, 도 3 내지 8을 참조하여, 컴퓨팅 장치가 수행하는 코딩 강의 등록 방법에 대하여 설명하도록 한다. 도 3은 본 발명의 또 다른 실시예에 따른 코딩 강의 등록 방법의 순서도이다. 도 3을 참조하면, S110 단계에서, 컴퓨팅 장치는 강의 데이터 업로드 UI를 사용자 단말로 제공할 수 있다. 예를 들어, 컴퓨팅 장치는 기 설정된 수업 모형에 따라 강의 데이터를 업로드 받는 UI를 제공할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 강의 주제에 따라 복수의 수업 모형 중 어느 하나의 수업 모형에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다. 예를 들어, 컴퓨팅 장치는 강의 주제 및 수업 모형에 따 라 NDIS 모델에 따른 강의 데이터를 업로드 받는 제1 UI, DMM 모델에 따른 강의 데이터를 업로드 받는 제2 UI, UMC 모델에 따른 강의 데이터를 업로드 받는 제3 UI, DDD 모델에 따른 강의 데이터를 업로드 받는 제4 UI 및 DPAAP 모델에 따른 강의 데이터를 업로드 받는 제5 UI 중 어느 하나의 UI를 사용자 단말로 제공할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 사용자 단말로부터 복수의 수업 모형 중 어느 하나의 수업 모형에 대한 선택 입력을 얻을 수 있고, 어느 하나의 수업 모형에 대한 선택 입력에 따라 선택된 수업 모형에 따른 강 의 데이터를 업로드 받는 UI를 제공할 수 있다. 예를 들어, 컴퓨팅 장치는 사용자 단말로부터 NDIS 모델에 대한 선택 입력을 얻을 수 있고, 사용자의 선택 입력에 따라 NDIS 모델에 따른 강의 데이터를 업로드 받 는 제1 UI를 사용자 단말로 제공할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 강의 데이터의 수업 모형에 따라 적합한 UI를 제공함과 동시에, 해당 UI에 업로드할 강의 데이터에 대한 안내(예: 수업 모형에 따라 필수적으로 포함되야 할 학습 내용 및 학습 순서 를 안내)하는 메시지를 출력할 수 있다. 예를 들어, 컴퓨팅 장치는 수업 모형에 따라 필수적으로 포함되야 할 학습 내용 및 학습 순서를 안내하는 메시지를 팝업창(pop-up) 형태로 사용자 단말로 출력할 수 있다. 그러나, 이에 한정되지 않는다. 즉, 컴퓨팅 장치는 강의 데이터의 수업 모형에 따라 적합한 UI를 제공하고, 안내 메시지를 통해 업로드할 강의 데이터에 대하여 가이드 함으로써, 사용자가 수업 모형에 맞춰 생성되는 강의 데이터를 업로드할 수 있도 록 유도할 수 있다는 이점이 있다. S120 단계에서, 컴퓨팅 장치는 사용자 단말로 제공한 UI를 통해, 강의 데이터를 업로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 UI에 포함된 강의 데이터 첨부 영역을 통해 기 생성된 강의 데이터를 포함하는 강의 파일을 첨부 받음으로써, 강의 데이터를 업로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 강의 데이터를 제작 및 수정하기 위한 UI를 사용자 단말로 제공할 수 있으며, UI를 통해 직접 제작 및 수정된 강의 데이터를 업로드 받을 수 있다. 그러나, 이에 한정되지 않고, 강의 데이터를 업로드 받는 다양한 방식이 적용 가능하다. 다양한 실시예에서, 컴퓨팅 장치는 업로드된 복수의 강의 데이터를 수업 모형을 기준으로 그룹화하여 저장 할 수 있다. 예를 들어, 업로드된 UI의 종류에 따라 복수의 강의 데이터를 NDIS 모델에 따른 강의 데이터, DMM 모델에 따른 강의 데이터, UMC 모델에 따른 강의 데이터, DDD 모델에 따른 강의 데이터, CT 요소 중심 모델에 따른 강의 데이터로 분류하고, 분류된 강의 데이터를 그룹화하여 저장할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 수업 모형과 상관없이 강의 데이터를 업로드 받는 UI를 사용자 단말 를 제공할 수 있다. 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 UI를 통해 업로드된 강의 데이터의 수업 모형을 판단할 수 있고, 판단된 수업 모형에 따라 그룹화하여 저장할 수 있다. 그러나, 이에 한정 되지 않는다. 개시된 실시 예에 따르면, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 업로드된 강의 데이터와 매 칭되는 수업 모형을 결정하거나, 업로드된 강의 데이터가 기 설정된 수업 모형에 해당하는지 여부(혹은 유사 도)를 판단할 수 있다. 개시된 실시 예에 따른 인공지능 모델은, 기 설정된 수업 모형에 따라 작성된 하나 이상의 샘플 강의 데이터를 포함하는 학습 데이터에 의하여 학습될 수 있다. 학습 데이터는 키워드 추출, 자연어 처리, 말뭉치 생성, 파라 미터화 등 제한되지 않는 다양한 방법으로 전처리될 수 있으며, 인공지능 모델은 전처리된 학습 데이터에 기반 하여 학습될 수 있다. 실시 예에 따라, 강의 데이터는 하나 이상의 이미지를 포함할 수 있으며, 강의 데이터에 대한 학습은 이러한 이미지에 대한 전처리 및 인공지능 모델에 기반한 분석에 의하여 수행될 수도 있다. 실시 예에 따라서, 학습 데이터에 대한 전처리를 통해 벡터, 텐서, 행렬 등 다양한 형태의 파라미터가 획득될 수 있다. 다른 실시 예에서, 컴퓨팅 장치는 학습 데이터(즉, 학습 데이터에 포함된 강의 데이터)를 이미지 형태로 변환할 수 있다. 학습 데이터를 이미지 형태로 변환하는 방법은 제한되지 않으나, 예를 들어 학습 데이터를 캡 쳐하여 그대로 이미지화하거나, 학습 데이터에 포함된 파라미터들에 기반하여 소정의 이미지가 생성될 수도 있 다. 컴퓨팅 장치는 생성된 이미지에 대한 이진화 등 전처리 동작을 수행한 후, 이미지 분석 기법에 기반한 학습을 수행할 수도 있다. 이후 소정의 강의 데이터(예: 업로드된 강의 데이터)가 획득되는 경우, 컴퓨팅 장치는 해당 강의 데이터를 전처리하고, 전처리된 결과물을 기 학습된 인공지능 모델에 입력함으로써, 해당 강의 데이터와 특정 수업 모형 간의 유사도를 획득할 수 있으나, 이에 제한되는 것은 아니다. 예를 들어, 인공지능 모델은 딥 러닝에 기반하여 학습될 수 있는 다양한 종류의 인공신경망으로 구성될 수 있으 나, 이에 제한되는 것은 아니다. 또한, 인공지능 모델은 소정의 강의 데이터로부터 하나 이상의 수업 모형 단계를 인식하여 추출할 수도 있다. 즉, 인공지능 모델의 검증은 수업 모형이 아닌 수업 모형에 포함된 각 단계별 단위에 기반하여 수행될 수도 있 다. 인공지능 모델은 전처리된 강의 데이터와 하나 이상의 수업 모형 단계들 간의 유사도를 판단할 수 있고, 강 의 데이터가 특정 수업 모형에 포함된 모든 단계들과 기 설정된 기준값 이상의 유사도를 갖는 것으로 판단되는 경우, 해당 강의 데이터가 수업 모형에 부합하는 것으로 판단할 수도 있다. 각각의 수업 모형에 대한 설명과, 수업 모형별로 인공지능 모델을 이용하여 검증을 수행하는 구체적인 방법에 대해서는 후술한다. 다양한 실시예에서, 컴퓨팅 장치는 수업 모형과 상관없이 강의 데이터를 업로드 받는 UI를 사용자 단말 를 제공할 수 있으며, UI를 통해 업로드된 강의 데이터를 복수의 수업 모형 중 어느 하나의 수업 모형에 맞춰 가공할 수 있다. S130 단계에서, 컴퓨팅 장치는 S120 단계에서 업로드된 강의 데이터를 검증하여 업로드된 강의 데이터에 대한 적합성을 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형에 따른 예시 강의 데이터와 업로드된 강의 데이터 간의 유사도를 판단하고, 판단된 유사도가 기준 값 이상인 경우에만 적합한 강의 데이터로 판단할 수 있다. 예 를 들어, 컴퓨팅 장치는 업로드된 강의 데이터가 NDIS 모델에 따른 강의 데이터인 경우, 업로드된 강의 데 이터와 NDIS 모델에 따라 생성된 예시 강의 데이터와의 비교(예: 학습 단계 비교, 학습 내용 비교 및 학습 단계 의 순서 비교 등)를 통해 유사도를 스코어링(scoring)할 수 있고, 스코어링된 유사도가 기준 값 이상인 경우, 업로드된 강의 데이터를 NDIS 모델에 적합한 강의 데이터로 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형에 따른 강의 데이터 및 예시 강의 데이터를 학습 데이터로써 기 학습한 인공지능 모델을 이용하여 업로드된 강의 데이터를 분석함으로써, 업로드된 강의 데이터 가 기 설정된 수업 모형과 적합한지 여부를 검증할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 학습 모델을 이용하여 업로드된 강의 데이터를 분석함으로써, 업로드된 강의 데이터가 기 설정된 수업 모형과 적합한지 여부를 검증할 수 있다. 여기서, 학습 모델은 수업 모형에 따른 강의 데이터의 학습 단계, 학습 내용 및 학습 내용의 순서를 학습 데이터로써 학습한 인공지능 모델을 의미할 수 있다. 그러나, 이에 한정되지 않는다. 다양한 실시예에서, 컴퓨팅 장치는 업로드된 강의 데이터에 포함된 각각의 학습 단계에 대한 학습 방법이 기 설정된 수업 모델에 따른 예시 강의 데이터에 포함된 학습 방법과 일치하는지 여부에 따라 유사도를 판단할 수 있다. 이하, 도 4 내지 8을 참조하여, 수업 모형의 종류에 따라 컴퓨팅 장치가 업로드된 강의 데이터를 검증하는 방법에 대하여 설명하도록 한다. 도 4는 다양한 실시예에 적용되는 디자인 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 4를 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형이 NDIS 모델인 경우(예: 사용자 로부터 선택 입력된 수업 모델이 NDIS 모델인 경우), NDIS 모델에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다(예: 도 3의 S110 단계). 예를 들어, 도 4(a)에 도시된 바와 같이, 업로드된 강의 데이터의 수업 모형이 NDIS 모델인 경우, 업로드된 강 의 데이터는 주어진 문제에 대한 고찰과 사용자 중심의 요구 분석을 학습하는 요구 분석(Needs) 단계, 분해와 패턴찾기 알고리즘의 설계를 학습하는 디자인(Design) 단계, 프로그래밍과 피지컬 컴퓨팅으로 산출물을 구현하 는 구현(Implementation) 단계 및 산출물 공유와 피드백을 통한 자기 성찰을 학습하는 공유(Share) 단계를 포함 할 수 있다. 일 실시예에서, 컴퓨팅 장치는 NDIS 모델에 따른 강의 데이터를 업로드 받는 UI를 사용자 단말로 제 공하여, 특정 주제에 대한 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 포함하며, 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 순차적으로 수행하는 강의 데이터를 업로드 받을 수 있다(예: 도 3의 S120). 다양한 실시예에서, 컴퓨팅 장치는 NDIS 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드할 강의 데이터에 포함되야 할 학습 내용 및 학습 순서를 안내하는 안내 메시지를 출력(예: 팝업창 형태로 출력)할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 NDIS 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드된 강의 데이터(예: 제1 강의 데이터)를 분석함으로써, 제1 강의 데이터에 포함된 복수의 학습 단계와 학습 단계의 수행 순서를 판단할 수 있고, 복수의 학습 단계와 학습 단계의 수행 순서를 이 용하여 제1 강의 데이터가 NDIS 모델에 적합한지 여부를 판단할 수 있다(예: 도 3의 S130). 예를 들어, 컴퓨팅 장치는 도 4(b)에 도시된 바와 같이, 제1 강의 데이터에 포함된 복수의 학습 단계가 요 구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 포함하는지 여부 및 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계가 순차적으로 수행되는지 여부에 따라 제1 강의 데이터가 NDIS 모델에 적합한지 여부를 판단 할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제1 강의 데이터에 포함된 복수의 학습 단계 각각을 분석함으로써, 복수의 학습 단계 각각의 학습 내용을 판단할 수 있고, 제1 강의 데이터의 학 습 내용과 NDIS 모델에 따른 예시 강의 데이터에 포함된 학습 내용을 비교하여 제1 강의 데이터의 적합성을 판 단할 수 있다. 예를 들어, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제1 강의 데이터를 분석함으로써, 요구 분 석 단계가 문제 이해 및 인간중심의 요구 분석 내용을 포함하는지 여부, 디자인 단계가 창의적 설계 및 계획 공 학적 설계 내용을 포함하는지 여부, 구현 단계가 개발 및 구현 언플러그드 전략 및 EPL 피지컬 융합컴퓨팅 내용 을 포함하는지 여부, 공유 단계가 공유 및 피드백 내용을 포함하는지 여부를 판단할 수 있으며, 이에 따라 제1 강의 데이터의 적합성을 판단할 수 있다. 그러나, 이에 한정되지 않는다. 도 5는 다양한 실시예에 적용되는 시연 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 5를 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형이 DMM 모델인 경우, DMM 모델에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다(예: 도 3의 S110 단계). 예를 들어, 도 5(a)에 도시된 바와 같이, 업로드된 강의 데이터의 수업 모형이 DMM 모델인 경우, 업로드된 강의 데이터가 교사의 설명과 시범을 통해 표준 모델을 제시하는 시연(Demonstration) 단계, 표준 모델을 모방하고, 이에 따른 질의응답을 하는 모방(Modeling) 단계 및 단계적, 독립적으로 연습하는 과정을 반복함으로써 기능을 습득하는 제작(Making) 단계를 포함할 수 있다. 일 실시예에서, 컴퓨팅 장치는 DMM 모델에 따른 강의 데이터를 업로드 받는 UI를 사용자 단말로 제공 하여, 특정 주제에 대한 핵심전략 시연 단계, 실습 단계 및 제작 단계를 포함하며, 시연 단계, 실습 단계 및 제 작 단계를 순차적으로 수행하는 강의 데이터를 업로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 DMM 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드할 강의 데이터에 포함되야 할 학습 내용 및 학습 순서를 안내하는 안내 메시지를 출력(예: 팝업창 형태로 출력)할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 DMM 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드된 강의 데이터(예: 제2 강의 데이터)를 분석함으로써, 제2 강의 데이터에 포함된 복수의 학습 단계와 학습 단계의 수행 순서를 판단할 수 있고, 복수의 학습 단계와 학습 단계의 수행 순서를 이 용하여 제2 강의 데이터가 DMM 모델에 적합한지 여부를 판단할 수 있다(예: 도 3의 S130). 예를 들어, 컴퓨팅 장치는 도 5(b)에 도시된 바와 같이, 제2 강의 데이터에 포함된 복수의 학습 단계가 시 연 단계, 모방 단계 및 제작 단계를 포함하는지 여부 및 시연 단계, 모방 단계 및 제작 단계가 순차적으로 수행 되는지 여부에 따라 제2 강의 데이터가 DMM 모델에 적합한지 여부를 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제2 강의 데이터에 포함된 복수의 학습 단계 각각을 분석함으로써, 복수의 학습 단계 각각의 학습 내용을 판단할 수 있고, 제2 강의 데이터의 학 습 내용과 DMM 모델에 따른 예시 강의 데이터에 포함된 학습 내용을 비교하여 제2 강의 데이터의 적합성을 판단 할 수 있다. 예를 들어, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제2 강의 데이터를 분석함으로써, 시연 단 계가 설명 및 시범 보이기 예시의 내용을 포함하는지 여부, 모방 단계가 따라하기 및 질의응답 내용을 포함하는 지 여부 및 제작 단계가 만들기 및 반복 활동 내용을 포함하는지 여부를 판단할 수 있으며, 이에 따라 제2 강의 데이터의 적합성을 판단할 수 있다. 그러나, 이에 한정되지 않는다. 도 6은 다양한 실시예에 적용되는 재구성 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 6을 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형이 UMC 모델인 경우, UMC 모델에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다(예: 도 3의 S110 단계). 예를 들어, 도 6(a)에 도시된 바와 같이, 업로드된 강의 데이터의 수업 모형이 UMC 모델인 경우, 업로드된 강의 데이터는 학습자 체험 활동을 관찰 및 탐색하는 놀이(Use) 단계, 교사가 의도적으로 모듈 및 알고리즘을 변형하 여 제시하는 수정(Modify) 단계 및 놀이 단계와 수정 단계를 확장하여 자신만의 프로그램을 설계 및 제작하는 재구성(recreate) 단계를 포함할 수 있다. 일 실시예에서, 컴퓨팅 장치는 UMC 모델에 따른 강의 데이터를 업로드 받는 UI를 사용자 단말로 제공 하여, 특정 주제에 대한 결과물 조작 단계, 결과물에 대한 수정 단계 및 결과물에 대한 재구성 단계를 순차적으 로 수행하는 강의 데이터를 업로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 UMC 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드할 강의 데이터에 포함되야 할 학습 내용 및 학습 순서를 안내하는 안내 메시지를 출력(예: 팝업창 형태로 출력)할 수 있다. 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 UMC 모델에 따른 강의 데이터를 업로드 받는 UI를 통 해 업로드된 강의 데이터(예: 제3 강의 데이터)를 분석함으로써, 제3 강의 데이터에 포함된 복수의 학습 단계와 학습 단계의 수행 순서를 판단할 수 있고, 복수의 학습 단계와 학습 단계의 수행 순서를 이용하여 제3 강의 데이터가 UMC 모델에 적합한지 여부를 판단할 수 있다(예: 도 3의 S130). 예를 들어, 컴퓨팅 장치는 도 6(b)에 도시된 바와 같이, 제3 강의 데이터에 포함된 복수의 학습 단계가 놀 이 단계, 수정 단계 및 재구성 단계를 포함하는지 여부 및 놀이 단계, 수정 단계 및 재구성 단계가 순차적으로 수행되는지 여부에 따라 제3 강의 데이터가 UMC 모델에 적합한지 여부를 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제3 강의 데이터에 포함된 복수의 학습 단계 각각을 분석함으로써, 복수의 학습 단계 각각의 학습 내용을 판단할 수 있고, 제3 강의 데이터의 학 습 내용과 UMC 모델에 따른 예시 강의 데이터에 포함된 학습 내용을 비교하여 제3 강의 데이터의 적합성을 판단 할 수 있다. 예를 들어, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제3 강의 데이터를 분석함으로써, 놀이 단 계가 조작, 체험, 놀이, 활용 및 탐색의 내용을 포함하는지 여부, 수정 단계가 추가설계, 수정, 확장 및 보완의 내용을 포함하는지 여부 및 재구성 단계가 재구성, 구현, 개발 및 산출의 내용을 포함하는지 여부를 판단할 수 있으며, 이에 따라 제3 강의 데이터의 적합성을 판단할 수 있다. 그러나, 이에 한정되지 않는다. 도 7은 다양한 실시예에 적용되는 개발 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 7을 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형이 DDD 모델인 경우, DDD 모델에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다(예: 도 1의 S110 단계). 예를 들어, 도 7(a)에 도시된 바와 같이, 업로드된 강의 데이터의 수업 모형이 DDD 모델인 경우, 업로드된 강의 데이터는 탐색과 발견을 통해 지식을 구성하는 탐구(Discovery) 단계, 알고리즘을 계획 및 설계하는 설계 (Design) 단계 및 프로그래밍 언어로 구현 및 피드백하는 개발(Development) 단계를 포함할 수 있다. 일 실싱예에서, 컴퓨팅 장치는 DDD 모델에 따른 강의 데이터를 업로드 받는 UI를 사용자 단말로 제공 하여, 특정 주제에 대한 결과물 탐구 단계, 특정 주제에 대한 새로운 결과물 설계 단계 및 새로운 결과물 개발 단계를 순차적으로 수행하는 강의 데이터를 업로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 DDD 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드할 강의 데이터에 포함되야 할 학습 내용 및 학습 순서를 안내하는 안내 메시지를 출력(예: 팝업창 형태로 출력)할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 DDD 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드된 강의 데이터(예: 제4 강의 데이터)를 분석함으로써, 제4 강의 데이터에 포함된 복수의 학습 단계와 복수의 학습 단계의 수행 순서를 판단할 수 있고, 복수의 학습 단계와 복수의 학습 단계의 수행 순서를 이용하여 제4 강의 데이터가 DDD 모델에 적합한지 여부를 판단할 수 있다. 예를 들어, 컴퓨팅 장치는 도 7(b)에 도시된 바와 같이, 제4 강의 데이터에 포함된 복수의 학습 단계가 탐 구 단계, 설계 단계 및 개발 단계를 포함하는지 여부 및 탐구 단계, 설계 단계 및 개발 단계가 순차적으로 수행 되는지 여부에 따라 제4 강의 데이터가 DDD 모델에 적합한지 여부를 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제4 강의 데이터에 포함된 복수의 학습 단계 각각을 분석함으로써, 복수의 학습 단계 각각의 학습 내용을 판단할 수 있고, 제4 강의 데이터의 학 습 내용과 DDD 모델에 따른 예시 강의 데이터에 포함된 학습 내용을 비교하여 제4 강의 데이터의 적합성을 판단 할 수 있다. 예를 들어, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제4 강의 데이터를 분석함으로써, 탐구 단 계가 기능의 이해, 분석, 탐구 및 구현의 내용을 포함하는지 여부, 설계 단계가 알고리즘의 설계 및 계획의 내 용을 포함하는지 여부 및 개발 단계가 구현, 공유, 개발 및 산출의 내용을 포함하는지 여부를 판단할 수 있으며, 이에 따라 제4 강의 데이터의 적합성을 판단할 수 있다. 그러나, 이에 한정되지 않는다. 도 8은 다양한 실시예에 적용되는 CT 요소 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 8을 참조하면, 다양한 실시예에서, 컴퓨팅 장치는 기 설정된 수업 모형이 DPAAP 모델인 경우, DPAAP 모 델에 따른 강의 데이터를 업로드 받는 UI를 제공할 수 있다(예: 도 3의 S110 단계).예를 들어, 도 8(a)에 도시된 바와 같이, 업로드된 강의 데이터의 수업 모형이 DPAAP 모델인 경우, 업로드된 강 의 데이터는 컴퓨터가 해결 가능한 단위로 문제를 분해하는 분해(Decomposition) 단계, 반복되는 일정한 경향 및 규칙을 탐색하는 패턴인식(Pattern Recognition) 단계, 문제 단순화 및 패턴인식으로 발견한 원리를 공식화 하는 추상화(Abstraction) 단계, 추상화된 핵심 원리를 절차적으로 구성하는 알고리즘(Algorithm) 개발 단계 및 컴퓨터가 이해할 수 있는 언어로 구현 및 실행하는 프로그래밍(Programming) 단계를 포함할 수 있다. 일 실시예에서, 컴퓨팅 장치는 DPAAP 모델에 따른 강의 데이터를 업로드 받는 UI를 사용자 단말로 제 공하여, 특정 주제에 대한 문제를 단위별로 분해하는 분해 단계, 문제의 패턴을 인식하는 패턴인식 단계, 문제 를 추상화하는 추상화 단계, 알고리즘 개발 단계 및 프로그래밍 단계를 순차적으로 수행하는 강의 데이터를 업 로드 받을 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 DPAAP 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드할 강 의 데이터에 포함되야 할 학습 내용 및 학습 순서를 안내하는 안내 메시지를 출력(예: 팝업창 형태로 출력)할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 DPAAP 모델에 따른 강의 데이터를 업로드 받는 UI를 통해 업로드된 강의 데이터(예: 제5 강의 데이터)를 분석함으로써, 제5 강의 데이터에 포함된 복수의 학습 단계와 복수의 학습 단계의 수행 순서를 판단할 수 있고, 복수의 학습 단계와 복수의 학습 단계의 수행 순서를 이용하여 제5 강의 데이터가 DPAAP 모델에 적합한지 여부를 판단할 수 있다. 예를 들어, 컴퓨팅 장치는 도 8(b)에 도시된 바와 같이, 제5 강의 데이터에 포함된 복수의 학습 단계가 분 해 단계, 패턴인식 단계, 추상화 단계, 알고리즘 개발 단계 및 프로그래밍 단계를 포함하는지 여부 및 분해 단 계, 패턴인식 단계, 추상화 단계, 알고리즘 개발 단계 및 프로그래밍 단계가 순차적으로 수행되는지 여부에 따 라 제5 강의 데이터가 DPAAP 모델에 적합한지 여부를 판단할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제5 강의 데이터에 포함된 복수의 학습 단계 각각을 분석함으로써, 복수의 학습 단계 각각의 학습 내용을 판단할 수 있고, 제5 강의 데이터의 학 습 내용과 DPAAP 모델에 따른 예시 강의 데이터에 포함된 학습 내용을 비교하여 제5 강의 데이터의 적합성을 판 단할 수 있다. 예를 들어, 컴퓨팅 장치는 기 학습된 인공지능 모델을 이용하여 제5 강의 데이터를 분석함으로써, 분해 단 계가 문제의 분해 및 변수의 설정 내용을 포함하는지 여부, 패턴인식 단계가 일정한 패턴탐색 및 반복항목 발견 의 내용을 포함하는지 여부, 추상화 단계가 개념화 및 공식화 내용을 포함하는지 여부 및 알고리즘 개발 단계가 순서도 및 의사코드의 내용을 포함하는지 여부를 판단할 수 있으며, 이에 따라 제5 강의 데이터의 적합성을 판 단할 수 있다. 그러나, 이에 한정되지 않는다. 다시 도 3을 참조하면, S140 단계에서, 컴퓨팅 장치는 S130 단계를 거쳐 적합한 것으로 판단되는 강의 데 이터를 등록할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 업로드된 복수의 강의 데이터 중 적합한 것으로 판단된 강의 데이터만 을 등록할 수 있다. 다양한 실시예에서, 컴퓨팅 장치는 UI를 통해 업로드된 복수의 강의 데이터 중 적합하지 않은 것으로 판단 되는 강의 데이터에 대한 보완 요청 메시지를 출력할 수 있다. 예를 들어, UI를 통해 업로드된 강의 데이터가 NDIS 모델에 따른 강의 데이터이고, 요구분석 단계, 구현 단계 및 공유 단계를 포함하는 경우, 컴퓨팅 장치 는 UI를 통해 NDIS 모델에 따른 강의 데이터를 업로드한 사용자 단말로 디자인 단계의 내용이 포함되 도록 강의 데이터를 보완할 것을 요청하는 메시지를 출력할 수 있다. 그러나, 이에 한정되지 않는다. 다양한 실시예에서, 컴퓨팅 장치는 UI를 통해 업로드된 강의 데이터가 적합하지 않은 것으로 판단되는 경 우, 업로드된 강의 데이터를 수업 모형에 맞춰 가공할 수 있다. UI를 통해 업로드된 제1 강의 데이터가 요구 분 석 단계, 디자인 단계, 구현 단계 및 공유 단계를 포함하되, 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 순차적으로 수행되지 않는 경우, 요구 분석 단계, 디자인 단계, 구현 단계 및 공유 단계를 순차적으로 수행되도록 강의 데이터를 가공할 수 있다. 그러나, 이에 한정되지 않는다. 실시 예에 따라서, 컴퓨팅 장치는 수업 모형을 기준으로 하였을 때 업로드된 강의 데이터에 특정한 단계가 누락된 것으로 판단되는 경우, 해당 단계에 대한 강의자료를 자동으로 보충할 수 있다. 실시 예에 따라서, 컴퓨팅 장치는 보충되는 강의자료에 따른 비용결제를 요청할 수 있으며, 비용결제는 일시불로 수행되거나, 추 후 발생되는 강의수입의 소정 비율 등으로 결정될 수 있으며, 이에 제한되는 것은 아니다. 일 실시 예에서, 보충되는 강의자료는 기 설정된 하나 이상의 탬플릿 강의자료로부터 선택될 수 있다. 실시 예 에 따라서, 보충되는 강의자료는 강의자료 빅데이터에 기반하여 학습된 모델에 의하여 자동으로 생성될 수도 있 다. 또한, 보충되는 강의자료는 기 설정된 탬플릿에 세부적인 내용이나 과제 등을 조금씩 변형하는 방법으로 생성될 수도 있다. 컴퓨팅 장치는 기 설정된 탬플릿을 획득하고, 해당 탬플릿에 포함되는 세부적인 예시나 과제 등을 업로드된 강의 데이터에 기반하여 생성하거나 선택하여 채워넣을 수 있다. 예를 들어, 강의 데이터가 게임 코딩에 관한 것이었으면, 컴퓨팅 장치는 탬플릿에 들어가는 주제가 소제목 등을 게임과 관련된 단어나 문 장으로 채워넣을 수 있으며, 예시를 생성하는 경우에도 게임과 관련된 예시를 선택하거나 생성하여 채워넣을 수 있으나, 이에 제한되는 것은 아니다. 실시 예에 따라서, 컴퓨팅 장치는 업로드된 강의 데이터를 탬플릿으로 활용할지 여부를 사용자에게 질의할 수 있다. 사용자가 본인의 강의 데이터를 탬플릿으로 활용하는 데 동의하는 경우 업로드된 강의 데이터는 수업 모형의 단계별로 분류되어 탬플릿으로 저장되며, 컴퓨팅 장치는 사용자에 대하여 소정의 보상을 지급하거 나, 해당 탬플릿이 사용될 때 이에 대응하는 보상을 지급할 수도 있다. 다양한 실시예에서, 컴퓨팅 장치는 UI를 통해 업로드된 강의 데이터에 포함된 복수의 학습 단계 중 학습 내용이 적합하지 않은 것으로 판단되는 학습 단계의 학습 내용을 보정할 수 있다. 예를 들어, 컴퓨팅 장치(10 0)는 NDIS 모델에 따른 강의 데이터에서 요소 분석 단계에 포함되는 학습 내용이 적합하지 않은 것으로 판단되 는 경우(예: 인공지능 모델을 이용하여 적합하지 않은 것으로 판단되는 경우), NDIS 모델에 따른 예시 강의 데 이터에 포함된 요소 분석 단계의 학습 내용을 기반으로 NDIS 모델에 따른 강의 데이터에서 요소 분석 단계의 학 습 내용을 보정할 수 있고, 보정된 NDIS 모델에 따른 강의 데이터를 등록할 수 있다. 컴퓨팅 장치는 상기한 실시 예들에 따라 하나 이상의 수업 모형별 강의 데이터를 수집할 수 있고, 수집된 강의 데이터를 수업 모형에 포함된 각각의 단계별로 분류하여 저장할 수 있다. 컴퓨팅 장치는 수집, 분류 및 저장된 빅데이터를 다양한 분야에 활용할 수 있다. 예를 들어, 컴퓨팅 장치는 수집된 정보를 분석하여 새로운 강의자료를 생성하거나, 더 효율적인 강의방향을 분석할 수 있게 된다. 예를 들어, 컴퓨팅 장치는 가장 수강생이 많거나 수익이 높은 강사의 강의자료를 분석하여, 해당 강의자료 가 어떠한 수업모형에 기반하는지 판단할 수 있으며, 수업모형의 각 단계별로 해당 강사의 강의자료가 다른 강 의들과 어떠한 부분에서 차별화되는지를 판단할 수 있다. 이러한 분석작업은 기 설정된 주기로 반복적으로 수행될 수 있으며, 이에 따라 새로운 정보가 획득되는 경우 이 에 기반한 업데이트가 수행될 수 있다. 예를 들어, 강의자료에 대한 분석은 수업모형의 단계별 키워드 분석에 기반하여 수행될 수 있다. 각각의 강의자 료에서 수업모형의 단계별로 등장하는 키워드의 종류와 빈도를 분석함으로써, 컴퓨팅 장치는 강의자료들 간의 차이점을 판단할 수 있으며, 판단 결과에 기반하여 새로운 강의자료를 생성하거나, 강의안 작성을 위한 가 이드라인 정보를 생성할 수 있다. 또한, 컴퓨팅 장치는 업로드된 코딩 강의에 따라 수강생이 학습을 수행하는 과정을 모니터링하며, 강사와 수강생 간의 인터렉션 정보를 수집할 수 있다. 예를 들어, 컴퓨팅 장치는 강사가 제출한 과제에 대한 정보 및 이에 대하여 수강생이 제출한 과제 결과물에 대한 정보를 획득하고, 수강생이 제출한 과제 결과물을 분석할 수 있다. 예를 들어, 강사가 코딩 과제를 제출하고, 수강생이 이에 따른 결과물을 제출하는 경우, 컴퓨팅 장치는 결 과물을 분석하여 결과물에 포함된 코딩 문법상의 오류, 오타, 컴파일 오류, 빌드 오류, 런타임 에러, 논리 오류 등의 존재여부를 판단할 수 있다. 실시 예에 따라서, 제출되는 과제는 완성된 코드가 아닐 수도 있다. 이러한 경우에도, 컴퓨팅 장치는 과제 결과물로부터 발생될 수 있는 오류를 추정하여 평가할 수 있으며, 이는 기 학습된 인공지능 모델에 의하여 수행될 수 있으나, 이에 제한되는 것은 아니다.또한, 컴퓨팅 장치는 과제 결과물에 대한 평가를 수행할 뿐 아니라, 과제 결과물에 오류가 있는 경우 해당 오류가 발생하게 된 원인을 판단하여, 수강생에게 솔루션을 제공할 수 있다. 예를 들어, 수강생이 특정 기능이 나 문법에 대한 이해가 부족하다고 판단되는 경우, 해당 분야를 다시 공부하라는 솔루션을 제공할 수 있다. 경 우에 따라, 수강생이 오타가 잦은 경우 타자연습을 다시 하도록 하는 솔루션을 제공할 수도 있고, 오타에 특정 한 패턴이 발견되는 경우(예를 들어, shift키다 fn키를 잘 누르지 않는 것으로 판단되는 경우) 이를 개선할 수 있도록 하는 솔루션을 제공할 수도 있다. 전술한 코딩 강의 등록 방법은 도면에 도시된 순서도를 참조하여 설명하였다. 간단한 설명을 위해 코딩 강의 등 록 방법은 일련의 블록들로 도시하여 설명하였으나, 본 발명은 상기 블록들의 순서에 한정되지 않고, 몇몇 블록 들은 본 명세서에 도시되고 시술된 것과 상이한 순서로 수행되거나 또는 동시에 수행될 수 있다. 또한, 본 명세 서 및 도면에 기재되지 않은 새로운 블록이 추가되거나, 일부 블록이 삭제 또는 변경된 상태로 수행될 수 있다."}
{"patent_id": "10-2019-0155240", "section": "발명의_설명", "subsection": "발명을실시하기위한구체적인내용", "paragraph": 2, "content": "이상, 첨부된 도면을 참조로 하여 본 발명의 실시예를 설명하였지만, 본 발명이 속하는 기술분야의 통상의 기술 자는 본 발명이 그 기술적 사상이나 필수적인 특징을 변경하지 않고서 다른 구체적인 형태로 실시될 수 있다는 것을 이해할 수 있을 것이다. 그러므로, 이상에서 기술한 실시예들은 모든 면에서 예시적인 것이며, 제한적이 아닌 것으로 이해해야만 한다."}
{"patent_id": "10-2019-0155240", "section": "도면", "subsection": "도면설명", "item": 1, "content": "도 1은 본 발명의 일 실시예에 따른 인공지능 수업모형 검증에 기반한 코딩 강의 등록 시스템의 구성을 도시한 도면이다. 도 2는 본 발명의 다른 실시예에 따른 코딩 강의 등록 장치의 하드웨어 구성도이다. 도 3은 본 발명의 또 다른 실시예에 따른 코딩 강의 등록 방법의 순서도이다. 도 4는 다양한 실시예에 적용되는 디자인 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 5는 다양한 실시예에 적용되는 시연 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 6은 다양한 실시예에 적용되는 재구성 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 7은 다양한 실시예에 적용되는 개발 중심 모델의 개요와 학습 절차를 도시한 표이다. 도 8은 다양한 실시예에 적용되는 CT 요소 중심 모델의 개요와 학습 절차를 도시한 표이다."}
