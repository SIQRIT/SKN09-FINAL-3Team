"""
Django settings for pass_projectproject.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', "^0+q*6x*zm$=cvenoh448ag5s)0m3&5dtl4-ky^^y5e%o$51fs")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 운영환경용

ALLOWED_HOSTS = ['13.209.57.183', "localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'accounts', 
    'user_admin',
    'corsheaders',  # CORS 추가
    'assist',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',      # CORS 미들웨어 추가 (맨 앞)
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    
    # 'accounts.middleware.EnforceAutoLogoutMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS 설정 - 운영환경용
CORS_ALLOWED_ORIGINS = [
    "http://13.209.57.183",  # EC2 서버 주소
]

# 기본 허용 헤더 + SSE에서 오는 text/event-stream 을 허용
from corsheaders.defaults import default_headers
CORS_ALLOW_HEADERS = list(default_headers) + [
    'text/event-stream',
]

ROOT_URLCONF = 'pass_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # 템플릿 디렉토리 경로
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pass_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# 운영(RDS)용 DB
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'passdb',
        'USER': 'admin',
        'PASSWORD': os.getenv('DB_PASSWORD', '11111111'),  # 환경변수 사용
        'HOST': 'pass-rds.cvkkgukwexvu.ap-northeast-2.rds.amazonaws.com',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "core.User"

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# 프로젝트 전체에서 정적 파일을 제공할 때 사용할 URL 접두사
STATIC_URL = '/static/'

# 개발 모드에서(=DEBUG=True) 정적 파일을 찾을 디렉터리들
STATICFILES_DIRS = [
    BASE_DIR / "core" / "static",       # 예: pass_project/core/static
]

# 프로덕션 모드에서 수집(collectstatic)된 파일이 모일 루트 디렉터리
STATIC_ROOT = BASE_DIR / 'staticfiles'  # (배포 시에 사용)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'core.User'

# 브라우저 종료 시 세션 쿠키를 자동으로 삭제하도록 전역 설정
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# 로깅 설정
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/rag.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'assist.rag_client': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# FastAPI 서버 URL 설정
FASTAPI_BASE_URL = os.getenv('FASTAPI_BASE_URL', "https://9kj9vbv0ckz1eu-7860.proxy.runpod.net")
#FASTAPI_BASE_URL = os.getenv('FASTAPI_BASE_URL', "https://4gz2mlt3fj6myv-7860.proxy.runpod.net")

# logs 디렉토리가 없으면 생성
import os
if not os.path.exists('logs'):
    os.makedirs('logs')
