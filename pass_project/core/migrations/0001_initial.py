# Generated by Django 5.2.1 on 2025-06-05 06:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_remove_user_first_name_remove_user_last_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('draft_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(default='v0', max_length=8)),
                ('draft_name', models.CharField(max_length=30)),
                ('create_draft', models.TextField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('draft_title', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_nickname', models.CharField(blank=True, max_length=150, null=True)),
                ('is_auto_login', models.IntegerField(blank=True, null=True)),
                ('user_left_date', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('eval_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('draft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.draft')),
            ],
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_ip', models.CharField(blank=True, max_length=50)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('user_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamLog',
            fields=[
                ('team_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_time', models.DateTimeField(auto_now_add=True)),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team')),
                ('user_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('tech_name', models.CharField(max_length=200)),
                ('tech_description', models.TextField()),
                ('problem_solved', models.TextField()),
                ('tech_differentiation', models.TextField()),
                ('application_field', models.TextField(blank=True, null=True)),
                ('components_functions', models.TextField()),
                ('implementation_example', models.TextField()),
                ('drawing_description', models.TextField(blank=True, null=True)),
                ('application_info', models.CharField(max_length=100)),
                ('inventor_info', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('template_title', models.CharField(max_length=50)),
                ('user_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.CharField(max_length=3000)),
                ('image_name', models.CharField(max_length=3000)),
                ('image_extension', models.CharField(max_length=10)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.template')),
            ],
        ),
        migrations.AddField(
            model_name='draft',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.template'),
        ),
    ]
